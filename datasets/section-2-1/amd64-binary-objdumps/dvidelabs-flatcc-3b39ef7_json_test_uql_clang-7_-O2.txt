
../repos/dvidelabs-flatcc-3b39ef7/test/json_test/json_test_uql:     file format elf64-x86-64


Disassembly of section .init:

0000000000406000 <.init>:
  406000:	endbr64 
  406004:	sub    rsp,0x8
  406008:	mov    rax,QWORD PTR [rip+0x3dfe1]        # 443ff0 <__gmon_start__>
  40600f:	test   rax,rax
  406012:	je     406016 <free@plt-0x1a>
  406014:	call   rax
  406016:	add    rsp,0x8
  40601a:	ret    

Disassembly of section .plt:

0000000000406020 <free@plt-0x10>:
  406020:	push   QWORD PTR [rip+0x3dfe2]        # 444008 <flatcc_builder_padding_base@@Base+0xa7d8>
  406026:	jmp    QWORD PTR [rip+0x3dfe4]        # 444010 <flatcc_builder_padding_base@@Base+0xa7e0>
  40602c:	nop    DWORD PTR [rax+0x0]

0000000000406030 <free@plt>:
  406030:	jmp    QWORD PTR [rip+0x3dfe2]        # 444018 <free@GLIBC_2.2.5>
  406036:	push   0x0
  40603b:	jmp    406020 <free@plt-0x10>

0000000000406040 <strncpy@plt>:
  406040:	jmp    QWORD PTR [rip+0x3dfda]        # 444020 <strncpy@GLIBC_2.2.5>
  406046:	push   0x1
  40604b:	jmp    406020 <free@plt-0x10>

0000000000406050 <strtod@plt>:
  406050:	jmp    QWORD PTR [rip+0x3dfd2]        # 444028 <strtod@GLIBC_2.2.5>
  406056:	push   0x2
  40605b:	jmp    406020 <free@plt-0x10>

0000000000406060 <strlen@plt>:
  406060:	jmp    QWORD PTR [rip+0x3dfca]        # 444030 <strlen@GLIBC_2.2.5>
  406066:	push   0x3
  40606b:	jmp    406020 <free@plt-0x10>

0000000000406070 <__assert_fail@plt>:
  406070:	jmp    QWORD PTR [rip+0x3dfc2]        # 444038 <__assert_fail@GLIBC_2.2.5>
  406076:	push   0x4
  40607b:	jmp    406020 <free@plt-0x10>

0000000000406080 <memset@plt>:
  406080:	jmp    QWORD PTR [rip+0x3dfba]        # 444040 <memset@GLIBC_2.2.5>
  406086:	push   0x5
  40608b:	jmp    406020 <free@plt-0x10>

0000000000406090 <fputc@plt>:
  406090:	jmp    QWORD PTR [rip+0x3dfb2]        # 444048 <fputc@GLIBC_2.2.5>
  406096:	push   0x6
  40609b:	jmp    406020 <free@plt-0x10>

00000000004060a0 <memchr@plt>:
  4060a0:	jmp    QWORD PTR [rip+0x3dfaa]        # 444050 <memchr@GLIBC_2.2.5>
  4060a6:	push   0x7
  4060ab:	jmp    406020 <free@plt-0x10>

00000000004060b0 <memcmp@plt>:
  4060b0:	jmp    QWORD PTR [rip+0x3dfa2]        # 444058 <memcmp@GLIBC_2.2.5>
  4060b6:	push   0x8
  4060bb:	jmp    406020 <free@plt-0x10>

00000000004060c0 <strcmp@plt>:
  4060c0:	jmp    QWORD PTR [rip+0x3df9a]        # 444060 <strcmp@GLIBC_2.2.5>
  4060c6:	push   0x9
  4060cb:	jmp    406020 <free@plt-0x10>

00000000004060d0 <fprintf@plt>:
  4060d0:	jmp    QWORD PTR [rip+0x3df92]        # 444068 <fprintf@GLIBC_2.2.5>
  4060d6:	push   0xa
  4060db:	jmp    406020 <free@plt-0x10>

00000000004060e0 <memcpy@plt>:
  4060e0:	jmp    QWORD PTR [rip+0x3df8a]        # 444070 <memcpy@GLIBC_2.14>
  4060e6:	push   0xb
  4060eb:	jmp    406020 <free@plt-0x10>

00000000004060f0 <malloc@plt>:
  4060f0:	jmp    QWORD PTR [rip+0x3df82]        # 444078 <malloc@GLIBC_2.2.5>
  4060f6:	push   0xc
  4060fb:	jmp    406020 <free@plt-0x10>

0000000000406100 <realloc@plt>:
  406100:	jmp    QWORD PTR [rip+0x3df7a]        # 444080 <realloc@GLIBC_2.2.5>
  406106:	push   0xd
  40610b:	jmp    406020 <free@plt-0x10>

0000000000406110 <memmove@plt>:
  406110:	jmp    QWORD PTR [rip+0x3df72]        # 444088 <memmove@GLIBC_2.2.5>
  406116:	push   0xe
  40611b:	jmp    406020 <free@plt-0x10>

0000000000406120 <sprintf@plt>:
  406120:	jmp    QWORD PTR [rip+0x3df6a]        # 444090 <sprintf@GLIBC_2.2.5>
  406126:	push   0xf
  40612b:	jmp    406020 <free@plt-0x10>

0000000000406130 <fwrite@plt>:
  406130:	jmp    QWORD PTR [rip+0x3df62]        # 444098 <fwrite@GLIBC_2.2.5>
  406136:	push   0x10
  40613b:	jmp    406020 <free@plt-0x10>

0000000000406140 <posix_memalign@plt>:
  406140:	jmp    QWORD PTR [rip+0x3df5a]        # 4440a0 <posix_memalign@GLIBC_2.2.5>
  406146:	push   0x11
  40614b:	jmp    406020 <free@plt-0x10>

Disassembly of section .text:

0000000000406150 <_start@@Base>:
  406150:	endbr64 
  406154:	xor    ebp,ebp
  406156:	mov    r9,rdx
  406159:	pop    rsi
  40615a:	mov    rdx,rsp
  40615d:	and    rsp,0xfffffffffffffff0
  406161:	push   rax
  406162:	push   rsp
  406163:	mov    r8,0x434bb0
  40616a:	mov    rcx,0x434b40
  406171:	mov    rdi,0x4070d0
  406178:	call   QWORD PTR [rip+0x3de6a]        # 443fe8 <__libc_start_main@GLIBC_2.2.5>
  40617e:	hlt    
  40617f:	nop
  406180:	endbr64 
  406184:	ret    
  406185:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40618f:	nop
  406190:	mov    eax,0x4447b8
  406195:	cmp    rax,0x4447b8
  40619b:	je     4061b0 <_start@@Base+0x60>
  40619d:	mov    eax,0x0
  4061a2:	test   rax,rax
  4061a5:	je     4061b0 <_start@@Base+0x60>
  4061a7:	mov    edi,0x4447b8
  4061ac:	jmp    rax
  4061ae:	xchg   ax,ax
  4061b0:	ret    
  4061b1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4061bc:	nop    DWORD PTR [rax+0x0]
  4061c0:	mov    esi,0x4447b8
  4061c5:	sub    rsi,0x4447b8
  4061cc:	mov    rax,rsi
  4061cf:	shr    rsi,0x3f
  4061d3:	sar    rax,0x3
  4061d7:	add    rsi,rax
  4061da:	sar    rsi,1
  4061dd:	je     4061f0 <_start@@Base+0xa0>
  4061df:	mov    eax,0x0
  4061e4:	test   rax,rax
  4061e7:	je     4061f0 <_start@@Base+0xa0>
  4061e9:	mov    edi,0x4447b8
  4061ee:	jmp    rax
  4061f0:	ret    
  4061f1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4061fc:	nop    DWORD PTR [rax+0x0]
  406200:	endbr64 
  406204:	cmp    BYTE PTR [rip+0x3e5ad],0x0        # 4447b8 <__bss_start@@Base>
  40620b:	jne    406220 <_start@@Base+0xd0>
  40620d:	push   rbp
  40620e:	mov    rbp,rsp
  406211:	call   406190 <_start@@Base+0x40>
  406216:	mov    BYTE PTR [rip+0x3e59b],0x1        # 4447b8 <__bss_start@@Base>
  40621d:	pop    rbp
  40621e:	ret    
  40621f:	nop
  406220:	ret    
  406221:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40622c:	nop    DWORD PTR [rax+0x0]
  406230:	endbr64 
  406234:	jmp    4061c0 <_start@@Base+0x70>
  406236:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000406240 <test_json@@Base>:
  406240:	push   rbp
  406241:	push   r15
  406243:	push   r14
  406245:	push   r13
  406247:	push   r12
  406249:	push   rbx
  40624a:	sub    rsp,0x268
  406251:	mov    ebp,r9d
  406254:	mov    r13d,r8d
  406257:	mov    r15d,ecx
  40625a:	mov    r12,rdx
  40625d:	mov    r14,rsi
  406260:	mov    rbx,rdi
  406263:	lea    rdi,[rsp+0xe0]
  40626b:	call   41eb30 <flatcc_builder_init@@Base>
  406270:	lea    rdi,[rsp+0x40]
  406275:	xor    esi,esi
  406277:	call   434820 <flatcc_json_printer_init_dynamic_buffer@@Base>
  40627c:	mov    eax,ebp
  40627e:	and    al,0x1
  406280:	mov    BYTE PTR [rsp+0x72],al
  406284:	mov    eax,ebp
  406286:	shr    al,1
  406288:	and    al,0x1
  40628a:	mov    BYTE PTR [rsp+0x73],al
  40628e:	mov    eax,ebp
  406290:	shr    al,0x2
  406293:	and    al,0x1
  406295:	mov    BYTE PTR [rsp+0x74],al
  406299:	mov    eax,ebp
  40629b:	shr    al,0x3
  40629e:	and    al,0x1
  4062a0:	mov    BYTE PTR [rsp+0x75],al
  4062a4:	test   bpl,0x10
  4062a8:	je     4062af <test_json@@Base+0x6f>
  4062aa:	mov    BYTE PTR [rsp+0x71],0x2
  4062af:	test   bpl,0x20
  4062b3:	je     4062c1 <test_json@@Base+0x81>
  4062b5:	mov    WORD PTR [rsp+0x71],0x102
  4062bc:	mov    BYTE PTR [rsp+0x73],0x0
  4062c1:	mov    ebp,DWORD PTR [rsp+0x2a0]
  4062c8:	mov    rdi,r14
  4062cb:	call   406060 <strlen@plt>
  4062d0:	mov    r9,QWORD PTR [rbx]
  4062d3:	mov    rcx,QWORD PTR [rbx+0x8]
  4062d7:	mov    QWORD PTR [rsp],rcx
  4062db:	lea    rdi,[rsp+0xe0]
  4062e3:	lea    rsi,[rsp+0x98]
  4062eb:	mov    rdx,r14
  4062ee:	mov    rcx,rax
  4062f1:	mov    r8d,r13d
  4062f4:	call   428d10 <flatcc_json_parser_table_as_root@@Base>
  4062f9:	cmp    eax,r15d
  4062fc:	jne    4063bd <test_json@@Base+0x17d>
  406302:	xor    r14d,r14d
  406305:	test   r15d,r15d
  406308:	je     40630e <test_json@@Base+0xce>
  40630a:	xor    ebp,ebp
  40630c:	jmp    406389 <test_json@@Base+0x149>
  40630e:	mov    r13d,ebp
  406311:	lea    rdi,[rsp+0xe0]
  406319:	lea    rsi,[rsp+0x10]
  40631e:	call   4232b0 <flatcc_builder_finalize_aligned_buffer@@Base>
  406323:	mov    rbp,rax
  406326:	mov    rsi,QWORD PTR [rsp+0x10]
  40632b:	mov    rdx,QWORD PTR [rbx]
  40632e:	mov    rcx,QWORD PTR [rbx+0x18]
  406332:	mov    rdi,rax
  406335:	call   424710 <flatcc_verify_table_as_root@@Base>
  40633a:	test   eax,eax
  40633c:	jne    406489 <test_json@@Base+0x249>
  406342:	mov    rdx,QWORD PTR [rsp+0x10]
  406347:	mov    rcx,QWORD PTR [rbx]
  40634a:	mov    r8,QWORD PTR [rbx+0x10]
  40634e:	lea    rbx,[rsp+0x40]
  406353:	mov    rdi,rbx
  406356:	mov    rsi,rbp
  406359:	call   434030 <flatcc_json_printer_table_as_root@@Base>
  40635e:	lea    rsi,[rsp+0x90]
  406366:	mov    rdi,rbx
  406369:	call   434940 <flatcc_json_printer_get_buffer@@Base>
  40636e:	mov    rbx,rax
  406371:	test   rax,rax
  406374:	je     4063fb <test_json@@Base+0x1bb>
  40637a:	mov    rdi,r12
  40637d:	mov    rsi,rbx
  406380:	call   4060c0 <strcmp@plt>
  406385:	test   eax,eax
  406387:	jne    4063fb <test_json@@Base+0x1bb>
  406389:	mov    rdi,rbp
  40638c:	call   4233e0 <flatcc_builder_aligned_free@@Base>
  406391:	lea    rdi,[rsp+0xe0]
  406399:	call   41eef0 <flatcc_builder_clear@@Base>
  40639e:	lea    rdi,[rsp+0x40]
  4063a3:	call   4349c0 <flatcc_json_printer_clear@@Base>
  4063a8:	mov    eax,r14d
  4063ab:	add    rsp,0x268
  4063b2:	pop    rbx
  4063b3:	pop    r12
  4063b5:	pop    r13
  4063b7:	pop    r14
  4063b9:	pop    r15
  4063bb:	pop    rbp
  4063bc:	ret    
  4063bd:	test   r15d,r15d
  4063c0:	je     406458 <test_json@@Base+0x218>
  4063c6:	mov    r12d,ebp
  4063c9:	mov    rbp,QWORD PTR [rip+0x3dc28]        # 443ff8 <stderr@GLIBC_2.2.5>
  4063d0:	mov    rbx,QWORD PTR [rbp+0x0]
  4063d4:	test   eax,eax
  4063d6:	jne    4065ee <test_json@@Base+0x3ae>
  4063dc:	mov    edi,r15d
  4063df:	call   4256a0 <flatcc_json_parser_error_string@@Base>
  4063e4:	mov    rcx,rax
  4063e7:	lea    rsi,[rip+0x2f898]        # 435c86 <_IO_stdin_used@@Base+0xc86>
  4063ee:	xor    eax,eax
  4063f0:	mov    rdi,rbx
  4063f3:	mov    edx,r12d
  4063f6:	jmp    40647f <test_json@@Base+0x23f>
  4063fb:	mov    r15,QWORD PTR [rip+0x3dbf6]        # 443ff8 <stderr@GLIBC_2.2.5>
  406402:	mov    rdi,QWORD PTR [r15]
  406405:	lea    rsi,[rip+0x2f96a]        # 435d76 <_IO_stdin_used@@Base+0xd76>
  40640c:	xor    eax,eax
  40640e:	mov    edx,r13d
  406411:	call   4060d0 <fprintf@plt>
  406416:	mov    rdi,QWORD PTR [r15]
  406419:	lea    r14,[rip+0x3303d]        # 43945d <_IO_stdin_used@@Base+0x445d>
  406420:	xor    eax,eax
  406422:	mov    rsi,r14
  406425:	mov    rdx,rbx
  406428:	call   4060d0 <fprintf@plt>
  40642d:	mov    rcx,QWORD PTR [r15]
  406430:	lea    rdi,[rip+0x2f974]        # 435dab <_IO_stdin_used@@Base+0xdab>
  406437:	mov    esi,0xa
  40643c:	mov    edx,0x1
  406441:	call   406130 <fwrite@plt>
  406446:	mov    rdi,QWORD PTR [r15]
  406449:	xor    eax,eax
  40644b:	mov    rsi,r14
  40644e:	mov    rdx,r12
  406451:	call   4060d0 <fprintf@plt>
  406456:	jmp    4064bb <test_json@@Base+0x27b>
  406458:	mov    r15d,ebp
  40645b:	mov    rbp,QWORD PTR [rip+0x3db96]        # 443ff8 <stderr@GLIBC_2.2.5>
  406462:	mov    rbx,QWORD PTR [rbp+0x0]
  406466:	mov    edi,eax
  406468:	call   4256a0 <flatcc_json_parser_error_string@@Base>
  40646d:	mov    rcx,rax
  406470:	lea    rsi,[rip+0x2f84f]        # 435cc6 <_IO_stdin_used@@Base+0xcc6>
  406477:	xor    eax,eax
  406479:	mov    rdi,rbx
  40647c:	mov    edx,r15d
  40647f:	call   4060d0 <fprintf@plt>
  406484:	jmp    40662f <test_json@@Base+0x3ef>
  406489:	mov    rcx,QWORD PTR [rip+0x3db68]        # 443ff8 <stderr@GLIBC_2.2.5>
  406490:	mov    r14,QWORD PTR [rcx]
  406493:	mov    edi,eax
  406495:	call   423b90 <flatcc_verify_error_string@@Base>
  40649a:	mov    rbx,rax
  40649d:	lea    rsi,[rip+0x2f846]        # 435cea <_IO_stdin_used@@Base+0xcea>
  4064a4:	lea    rdx,[rip+0x2f866]        # 435d11 <_IO_stdin_used@@Base+0xd11>
  4064ab:	xor    eax,eax
  4064ad:	mov    rdi,r14
  4064b0:	mov    ecx,r13d
  4064b3:	mov    r8,rbx
  4064b6:	call   4060d0 <fprintf@plt>
  4064bb:	mov    r14d,0xffffffff
  4064c1:	test   rbp,rbp
  4064c4:	je     40630a <test_json@@Base+0xca>
  4064ca:	mov    r15,QWORD PTR [rsp+0x10]
  4064cf:	mov    rax,QWORD PTR [rip+0x3db22]        # 443ff8 <stderr@GLIBC_2.2.5>
  4064d6:	mov    rbx,QWORD PTR [rax]
  4064d9:	lea    rsi,[rip+0x32f76]        # 439456 <_IO_stdin_used@@Base+0x4456>
  4064e0:	lea    rdx,[rip+0x2f8cf]        # 435db6 <_IO_stdin_used@@Base+0xdb6>
  4064e7:	xor    eax,eax
  4064e9:	mov    rdi,rbx
  4064ec:	call   4060d0 <fprintf@plt>
  4064f1:	test   r15d,r15d
  4064f4:	je     4065d3 <test_json@@Base+0x393>
  4064fa:	mov    QWORD PTR [rsp+0x18],r15
  4064ff:	mov    r15d,r15d
  406502:	xor    r13d,r13d
  406505:	mov    r12d,r13d
  406508:	and    r12d,0xf
  40650c:	test   r12d,r12d
  40650f:	jne    406542 <test_json@@Base+0x302>
  406511:	test   r13,r13
  406514:	je     40652c <test_json@@Base+0x2ec>
  406516:	xor    eax,eax
  406518:	mov    rdi,rbx
  40651b:	lea    rsi,[rip+0x32f39]        # 43945b <_IO_stdin_used@@Base+0x445b>
  406522:	lea    rdx,[rsp+0x20]
  406527:	call   4060d0 <fprintf@plt>
  40652c:	xor    eax,eax
  40652e:	mov    rdi,rbx
  406531:	lea    rsi,[rip+0x32f29]        # 439461 <_IO_stdin_used@@Base+0x4461>
  406538:	mov    edx,r13d
  40653b:	call   4060d0 <fprintf@plt>
  406540:	jmp    406555 <test_json@@Base+0x315>
  406542:	test   r13b,0x7
  406546:	jne    406555 <test_json@@Base+0x315>
  406548:	mov    edi,0x20
  40654d:	mov    rsi,rbx
  406550:	call   406090 <fputc@plt>
  406555:	movzx  edx,BYTE PTR [rbp+r13*1+0x0]
  40655b:	xor    eax,eax
  40655d:	mov    rdi,rbx
  406560:	lea    rsi,[rip+0x32f02]        # 439469 <_IO_stdin_used@@Base+0x4469>
  406567:	call   4060d0 <fprintf@plt>
  40656c:	movzx  eax,BYTE PTR [rbp+r13*1+0x0]
  406572:	mov    edx,eax
  406574:	add    dl,0xe0
  406577:	mov    cl,0x2e
  406579:	cmp    dl,0x5e
  40657c:	ja     406580 <test_json@@Base+0x340>
  40657e:	mov    ecx,eax
  406580:	mov    BYTE PTR [rsp+r12*1+0x20],cl
  406585:	mov    BYTE PTR [rsp+r12*1+0x21],0x0
  40658b:	add    r13,0x1
  40658f:	cmp    r15,r13
  406592:	jne    406505 <test_json@@Base+0x2c5>
  406598:	mov    r13,QWORD PTR [rsp+0x18]
  40659d:	test   r13b,0xf
  4065a1:	je     4065d3 <test_json@@Base+0x393>
  4065a3:	add    r13d,0x1
  4065a7:	lea    r12,[rip+0x32ec1]        # 43946f <_IO_stdin_used@@Base+0x446f>
  4065ae:	mov    r15d,r13d
  4065b1:	mov    esi,0x3
  4065b6:	mov    edx,0x1
  4065bb:	mov    rdi,r12
  4065be:	mov    rcx,rbx
  4065c1:	call   406130 <fwrite@plt>
  4065c6:	add    r15d,0x1
  4065ca:	test   r13b,0xf
  4065ce:	mov    r13d,r15d
  4065d1:	jne    4065b1 <test_json@@Base+0x371>
  4065d3:	lea    rsi,[rip+0x32e81]        # 43945b <_IO_stdin_used@@Base+0x445b>
  4065da:	lea    rdx,[rsp+0x20]
  4065df:	xor    eax,eax
  4065e1:	mov    rdi,rbx
  4065e4:	call   4060d0 <fprintf@plt>
  4065e9:	jmp    406389 <test_json@@Base+0x149>
  4065ee:	mov    edi,eax
  4065f0:	call   4256a0 <flatcc_json_parser_error_string@@Base>
  4065f5:	mov    rcx,rax
  4065f8:	lea    rsi,[rip+0x2f661]        # 435c60 <_IO_stdin_used@@Base+0xc60>
  4065ff:	xor    eax,eax
  406601:	mov    rdi,rbx
  406604:	mov    edx,r12d
  406607:	call   4060d0 <fprintf@plt>
  40660c:	mov    rbx,QWORD PTR [rbp+0x0]
  406610:	mov    edi,r15d
  406613:	call   4256a0 <flatcc_json_parser_error_string@@Base>
  406618:	mov    rcx,rax
  40661b:	lea    rsi,[rip+0x2f685]        # 435ca7 <_IO_stdin_used@@Base+0xca7>
  406622:	xor    eax,eax
  406624:	mov    rdi,rbx
  406627:	mov    rdx,rcx
  40662a:	call   4060d0 <fprintf@plt>
  40662f:	mov    rdi,QWORD PTR [rbp+0x0]
  406633:	lea    rsi,[rip+0x32e23]        # 43945d <_IO_stdin_used@@Base+0x445d>
  40663a:	xor    eax,eax
  40663c:	mov    rdx,r14
  40663f:	call   4060d0 <fprintf@plt>
  406644:	cmp    DWORD PTR [rsp+0xb4],0x2
  40664c:	mov    rbx,QWORD PTR [rip+0x3d9a5]        # 443ff8 <stderr@GLIBC_2.2.5>
  406653:	mov    rax,QWORD PTR [rbx]
  406656:	jl     40667b <test_json@@Base+0x43b>
  406658:	xor    ebp,ebp
  40665a:	mov    edi,0x20
  40665f:	mov    rsi,rax
  406662:	call   406090 <fputc@plt>
  406667:	add    ebp,0x1
  40666a:	mov    ecx,DWORD PTR [rsp+0xb4]
  406671:	add    ecx,0xffffffff
  406674:	mov    rax,QWORD PTR [rbx]
  406677:	cmp    ebp,ecx
  406679:	jl     40665a <test_json@@Base+0x41a>
  40667b:	lea    rdi,[rip+0x2f665]        # 435ce7 <_IO_stdin_used@@Base+0xce7>
  406682:	mov    esi,0x2
  406687:	mov    edx,0x1
  40668c:	mov    rcx,rax
  40668f:	call   406130 <fwrite@plt>
  406694:	mov    r14d,0xffffffff
  40669a:	jmp    40630a <test_json@@Base+0xca>
  40669f:	nop

00000000004066a0 <edge_case_tests@@Base>:
  4066a0:	push   rbp
  4066a1:	push   r15
  4066a3:	push   r14
  4066a5:	push   r13
  4066a7:	push   r12
  4066a9:	push   rbx
  4066aa:	push   rax
  4066ab:	mov    DWORD PTR [rsp],0x9b
  4066b2:	lea    r14,[rip+0x3d457]        # 443b10 <flatcc_builder_padding_base@@Base+0xa2e0>
  4066b9:	lea    rsi,[rip+0x2f704]        # 435dc4 <_IO_stdin_used@@Base+0xdc4>
  4066c0:	lea    rdx,[rip+0x2f72e]        # 435df5 <_IO_stdin_used@@Base+0xdf5>
  4066c7:	xor    ecx,ecx
  4066c9:	xor    r8d,r8d
  4066cc:	xor    r9d,r9d
  4066cf:	mov    rdi,r14
  4066d2:	call   406240 <test_json@@Base>
  4066d7:	mov    ebp,eax
  4066d9:	mov    DWORD PTR [rsp],0xa8
  4066e0:	lea    r15,[rip+0x2f72c]        # 435e13 <_IO_stdin_used@@Base+0xe13>
  4066e7:	lea    r13,[rip+0x2f746]        # 435e34 <_IO_stdin_used@@Base+0xe34>
  4066ee:	xor    ecx,ecx
  4066f0:	mov    r8d,0x2
  4066f6:	xor    r9d,r9d
  4066f9:	mov    rdi,r14
  4066fc:	mov    rsi,r15
  4066ff:	mov    rdx,r13
  406702:	call   406240 <test_json@@Base>
  406707:	mov    ebx,eax
  406709:	or     ebx,ebp
  40670b:	mov    DWORD PTR [rsp],0xac
  406712:	lea    rsi,[rip+0x2f73d]        # 435e56 <_IO_stdin_used@@Base+0xe56>
  406719:	lea    rdx,[rip+0x2f75d]        # 435e7d <_IO_stdin_used@@Base+0xe7d>
  406720:	xor    ecx,ecx
  406722:	xor    r8d,r8d
  406725:	mov    r9d,0x2
  40672b:	mov    rdi,r14
  40672e:	call   406240 <test_json@@Base>
  406733:	mov    r12d,eax
  406736:	mov    DWORD PTR [rsp],0xb0
  40673d:	lea    rdx,[rip+0x2f756]        # 435e9a <_IO_stdin_used@@Base+0xe9a>
  406744:	xor    ecx,ecx
  406746:	mov    r8d,0x2
  40674c:	mov    r9d,0x4
  406752:	mov    rdi,r14
  406755:	mov    rsi,r15
  406758:	call   406240 <test_json@@Base>
  40675d:	mov    ebp,eax
  40675f:	or     ebp,r12d
  406762:	or     ebp,ebx
  406764:	mov    DWORD PTR [rsp],0xb4
  40676b:	lea    rsi,[rip+0x2f73b]        # 435ead <_IO_stdin_used@@Base+0xead>
  406772:	lea    rdx,[rip+0x2f756]        # 435ecf <_IO_stdin_used@@Base+0xecf>
  406779:	xor    ecx,ecx
  40677b:	xor    r8d,r8d
  40677e:	mov    r9d,0x8
  406784:	mov    rdi,r14
  406787:	call   406240 <test_json@@Base>
  40678c:	mov    r15d,eax
  40678f:	mov    DWORD PTR [rsp],0xc3
  406796:	lea    rsi,[rip+0x2f844]        # 435fe1 <_IO_stdin_used@@Base+0xfe1>
  40679d:	xor    ecx,ecx
  40679f:	mov    r8d,0x2
  4067a5:	xor    r9d,r9d
  4067a8:	mov    rdi,r14
  4067ab:	mov    rdx,r13
  4067ae:	call   406240 <test_json@@Base>
  4067b3:	mov    ebx,eax
  4067b5:	or     ebx,r15d
  4067b8:	mov    DWORD PTR [rsp],0xc7
  4067bf:	lea    r12,[rip+0x2f841]        # 436007 <_IO_stdin_used@@Base+0x1007>
  4067c6:	lea    r15,[rip+0x2f86c]        # 436039 <_IO_stdin_used@@Base+0x1039>
  4067cd:	xor    ecx,ecx
  4067cf:	mov    r8d,0x1
  4067d5:	xor    r9d,r9d
  4067d8:	mov    rdi,r14
  4067db:	mov    rsi,r12
  4067de:	mov    rdx,r15
  4067e1:	call   406240 <test_json@@Base>
  4067e6:	mov    r13d,eax
  4067e9:	or     r13d,ebx
  4067ec:	or     r13d,ebp
  4067ef:	mov    DWORD PTR [rsp],0xcb
  4067f6:	lea    rdx,[rip+0x2f857]        # 436054 <_IO_stdin_used@@Base+0x1054>
  4067fd:	xor    ecx,ecx
  4067ff:	mov    r8d,0x1
  406805:	mov    r9d,0x1
  40680b:	mov    rdi,r14
  40680e:	mov    rsi,r12
  406811:	call   406240 <test_json@@Base>
  406816:	mov    ebx,eax
  406818:	mov    DWORD PTR [rsp],0xd1
  40681f:	lea    rsi,[rip+0x2f845]        # 43606b <_IO_stdin_used@@Base+0x106b>
  406826:	xor    ecx,ecx
  406828:	mov    r8d,0x1
  40682e:	xor    r9d,r9d
  406831:	mov    rdi,r14
  406834:	mov    rdx,r15
  406837:	call   406240 <test_json@@Base>
  40683c:	mov    ebp,eax
  40683e:	or     ebp,ebx
  406840:	mov    DWORD PTR [rsp],0xd9
  406847:	lea    r12,[rip+0x2f88e]        # 4360dc <_IO_stdin_used@@Base+0x10dc>
  40684e:	xor    ecx,ecx
  406850:	mov    r8d,0x2
  406856:	xor    r9d,r9d
  406859:	mov    rdi,r14
  40685c:	mov    rsi,r12
  40685f:	lea    rdx,[rip+0x2f5ce]        # 435e34 <_IO_stdin_used@@Base+0xe34>
  406866:	call   406240 <test_json@@Base>
  40686b:	mov    ebx,eax
  40686d:	or     ebx,ebp
  40686f:	mov    DWORD PTR [rsp],0xdd
  406876:	lea    rsi,[rip+0x2f87c]        # 4360f9 <_IO_stdin_used@@Base+0x10f9>
  40687d:	xor    ecx,ecx
  40687f:	xor    r8d,r8d
  406882:	mov    r9d,0x2
  406888:	mov    rdi,r14
  40688b:	lea    rdx,[rip+0x2f5eb]        # 435e7d <_IO_stdin_used@@Base+0xe7d>
  406892:	call   406240 <test_json@@Base>
  406897:	mov    r15d,eax
  40689a:	or     r15d,ebx
  40689d:	or     r15d,r13d
  4068a0:	mov    DWORD PTR [rsp],0xe1
  4068a7:	xor    ecx,ecx
  4068a9:	mov    r8d,0x2
  4068af:	mov    r9d,0x4
  4068b5:	mov    rdi,r14
  4068b8:	mov    rsi,r12
  4068bb:	lea    rdx,[rip+0x2f5d8]        # 435e9a <_IO_stdin_used@@Base+0xe9a>
  4068c2:	call   406240 <test_json@@Base>
  4068c7:	mov    r12d,eax
  4068ca:	mov    DWORD PTR [rsp],0xe5
  4068d1:	lea    rsi,[rip+0x2f842]        # 43611a <_IO_stdin_used@@Base+0x111a>
  4068d8:	lea    rdx,[rip+0x2f84e]        # 43612d <_IO_stdin_used@@Base+0x112d>
  4068df:	xor    ecx,ecx
  4068e1:	xor    r8d,r8d
  4068e4:	mov    r9d,0x8
  4068ea:	mov    rdi,r14
  4068ed:	call   406240 <test_json@@Base>
  4068f2:	mov    ebx,eax
  4068f4:	or     ebx,r12d
  4068f7:	mov    DWORD PTR [rsp],0xe9
  4068fe:	lea    rsi,[rip+0x2f93f]        # 436244 <_IO_stdin_used@@Base+0x1244>
  406905:	xor    ecx,ecx
  406907:	mov    r8d,0x2
  40690d:	xor    r9d,r9d
  406910:	mov    rdi,r14
  406913:	lea    rdx,[rip+0x2f51a]        # 435e34 <_IO_stdin_used@@Base+0xe34>
  40691a:	call   406240 <test_json@@Base>
  40691f:	mov    ebp,eax
  406921:	or     ebp,ebx
  406923:	mov    DWORD PTR [rsp],0xed
  40692a:	lea    r12,[rip+0x2f933]        # 436264 <_IO_stdin_used@@Base+0x1264>
  406931:	xor    ecx,ecx
  406933:	mov    r8d,0x1
  406939:	xor    r9d,r9d
  40693c:	mov    rdi,r14
  40693f:	mov    rsi,r12
  406942:	lea    r13,[rip+0x2f6f0]        # 436039 <_IO_stdin_used@@Base+0x1039>
  406949:	mov    rdx,r13
  40694c:	call   406240 <test_json@@Base>
  406951:	mov    ebx,eax
  406953:	or     ebx,ebp
  406955:	mov    DWORD PTR [rsp],0xf1
  40695c:	xor    ecx,ecx
  40695e:	mov    r8d,0x1
  406964:	mov    r9d,0x1
  40696a:	mov    rdi,r14
  40696d:	mov    rsi,r12
  406970:	lea    rdx,[rip+0x2f6dd]        # 436054 <_IO_stdin_used@@Base+0x1054>
  406977:	call   406240 <test_json@@Base>
  40697c:	mov    ebp,eax
  40697e:	or     ebp,ebx
  406980:	or     ebp,r15d
  406983:	mov    DWORD PTR [rsp],0xf7
  40698a:	lea    rsi,[rip+0x2f8fd]        # 43628e <_IO_stdin_used@@Base+0x128e>
  406991:	xor    ecx,ecx
  406993:	mov    r8d,0x1
  406999:	xor    r9d,r9d
  40699c:	mov    rdi,r14
  40699f:	mov    rdx,r13
  4069a2:	call   406240 <test_json@@Base>
  4069a7:	or     eax,ebp
  4069a9:	add    rsp,0x8
  4069ad:	pop    rbx
  4069ae:	pop    r12
  4069b0:	pop    r13
  4069b2:	pop    r14
  4069b4:	pop    r15
  4069b6:	pop    rbp
  4069b7:	ret    
  4069b8:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004069c0 <error_case_tests@@Base>:
  4069c0:	push   rbp
  4069c1:	push   r15
  4069c3:	push   r14
  4069c5:	push   r12
  4069c7:	push   rbx
  4069c8:	sub    rsp,0x10
  4069cc:	mov    DWORD PTR [rsp],0x11d
  4069d3:	lea    r14,[rip+0x3d136]        # 443b10 <flatcc_builder_padding_base@@Base+0xa2e0>
  4069da:	lea    rsi,[rip+0x2f90c]        # 4362ed <_IO_stdin_used@@Base+0x12ed>
  4069e1:	xor    edx,edx
  4069e3:	mov    ecx,0xd
  4069e8:	xor    r8d,r8d
  4069eb:	xor    r9d,r9d
  4069ee:	mov    rdi,r14
  4069f1:	call   406240 <test_json@@Base>
  4069f6:	mov    ebp,eax
  4069f8:	mov    DWORD PTR [rsp],0x11f
  4069ff:	lea    rsi,[rip+0x2f901]        # 436307 <_IO_stdin_used@@Base+0x1307>
  406a06:	xor    edx,edx
  406a08:	mov    ecx,0xd
  406a0d:	xor    r8d,r8d
  406a10:	xor    r9d,r9d
  406a13:	mov    rdi,r14
  406a16:	call   406240 <test_json@@Base>
  406a1b:	mov    ebx,eax
  406a1d:	or     ebx,ebp
  406a1f:	mov    DWORD PTR [rsp],0x121
  406a26:	lea    rsi,[rip+0x2f93b]        # 436368 <_IO_stdin_used@@Base+0x1368>
  406a2d:	xor    edx,edx
  406a2f:	mov    ecx,0xd
  406a34:	xor    r8d,r8d
  406a37:	xor    r9d,r9d
  406a3a:	mov    rdi,r14
  406a3d:	call   406240 <test_json@@Base>
  406a42:	mov    r15d,eax
  406a45:	mov    DWORD PTR [rsp],0x123
  406a4c:	lea    rsi,[rip+0x2f973]        # 4363c6 <_IO_stdin_used@@Base+0x13c6>
  406a53:	xor    edx,edx
  406a55:	mov    ecx,0xd
  406a5a:	xor    r8d,r8d
  406a5d:	xor    r9d,r9d
  406a60:	mov    rdi,r14
  406a63:	call   406240 <test_json@@Base>
  406a68:	mov    ebp,eax
  406a6a:	or     ebp,r15d
  406a6d:	or     ebp,ebx
  406a6f:	mov    DWORD PTR [rsp],0x125
  406a76:	lea    rsi,[rip+0x2f9a1]        # 43641e <_IO_stdin_used@@Base+0x141e>
  406a7d:	xor    edx,edx
  406a7f:	mov    ecx,0xd
  406a84:	xor    r8d,r8d
  406a87:	xor    r9d,r9d
  406a8a:	mov    rdi,r14
  406a8d:	call   406240 <test_json@@Base>
  406a92:	mov    r15d,eax
  406a95:	mov    DWORD PTR [rsp],0x128
  406a9c:	lea    rsi,[rip+0x2f9d0]        # 436473 <_IO_stdin_used@@Base+0x1473>
  406aa3:	xor    edx,edx
  406aa5:	mov    ecx,0xd
  406aaa:	xor    r8d,r8d
  406aad:	xor    r9d,r9d
  406ab0:	mov    rdi,r14
  406ab3:	call   406240 <test_json@@Base>
  406ab8:	mov    ebx,eax
  406aba:	or     ebx,r15d
  406abd:	mov    DWORD PTR [rsp],0x12b
  406ac4:	lea    rsi,[rip+0x2fa46]        # 436511 <_IO_stdin_used@@Base+0x1511>
  406acb:	xor    edx,edx
  406acd:	mov    ecx,0xd
  406ad2:	xor    r8d,r8d
  406ad5:	xor    r9d,r9d
  406ad8:	mov    rdi,r14
  406adb:	call   406240 <test_json@@Base>
  406ae0:	mov    r15d,eax
  406ae3:	or     r15d,ebx
  406ae6:	or     r15d,ebp
  406ae9:	mov    DWORD PTR [rsp],0x12f
  406af0:	lea    rsi,[rip+0x2fab5]        # 4365ac <_IO_stdin_used@@Base+0x15ac>
  406af7:	xor    edx,edx
  406af9:	mov    ecx,0xd
  406afe:	xor    r8d,r8d
  406b01:	xor    r9d,r9d
  406b04:	mov    rdi,r14
  406b07:	call   406240 <test_json@@Base>
  406b0c:	mov    ebx,eax
  406b0e:	mov    DWORD PTR [rsp],0x133
  406b15:	lea    rsi,[rip+0x2fb57]        # 436673 <_IO_stdin_used@@Base+0x1673>
  406b1c:	xor    edx,edx
  406b1e:	mov    ecx,0xd
  406b23:	xor    r8d,r8d
  406b26:	xor    r9d,r9d
  406b29:	mov    rdi,r14
  406b2c:	call   406240 <test_json@@Base>
  406b31:	mov    ebp,eax
  406b33:	or     ebp,ebx
  406b35:	mov    DWORD PTR [rsp],0x142
  406b3c:	lea    rsi,[rip+0x2fbf7]        # 43673a <_IO_stdin_used@@Base+0x173a>
  406b43:	xor    edx,edx
  406b45:	mov    ecx,0xd
  406b4a:	xor    r8d,r8d
  406b4d:	xor    r9d,r9d
  406b50:	mov    rdi,r14
  406b53:	call   406240 <test_json@@Base>
  406b58:	mov    ebx,eax
  406b5a:	or     ebx,ebp
  406b5c:	mov    DWORD PTR [rsp],0x144
  406b63:	lea    rsi,[rip+0x2fbe8]        # 436752 <_IO_stdin_used@@Base+0x1752>
  406b6a:	xor    edx,edx
  406b6c:	mov    ecx,0xd
  406b71:	xor    r8d,r8d
  406b74:	xor    r9d,r9d
  406b77:	mov    rdi,r14
  406b7a:	call   406240 <test_json@@Base>
  406b7f:	mov    r12d,eax
  406b82:	or     r12d,ebx
  406b85:	or     r12d,r15d
  406b88:	mov    DWORD PTR [rsp],0x146
  406b8f:	lea    rsi,[rip+0x2fc11]        # 4367a7 <_IO_stdin_used@@Base+0x17a7>
  406b96:	xor    edx,edx
  406b98:	mov    ecx,0xd
  406b9d:	xor    r8d,r8d
  406ba0:	xor    r9d,r9d
  406ba3:	mov    rdi,r14
  406ba6:	call   406240 <test_json@@Base>
  406bab:	mov    r15d,eax
  406bae:	mov    DWORD PTR [rsp],0x148
  406bb5:	lea    rsi,[rip+0x2fc3d]        # 4367f9 <_IO_stdin_used@@Base+0x17f9>
  406bbc:	xor    edx,edx
  406bbe:	mov    ecx,0xd
  406bc3:	xor    r8d,r8d
  406bc6:	xor    r9d,r9d
  406bc9:	mov    rdi,r14
  406bcc:	call   406240 <test_json@@Base>
  406bd1:	mov    ebx,eax
  406bd3:	or     ebx,r15d
  406bd6:	mov    DWORD PTR [rsp],0x14a
  406bdd:	lea    rsi,[rip+0x2fc65]        # 436849 <_IO_stdin_used@@Base+0x1849>
  406be4:	xor    edx,edx
  406be6:	mov    ecx,0xd
  406beb:	xor    r8d,r8d
  406bee:	xor    r9d,r9d
  406bf1:	mov    rdi,r14
  406bf4:	call   406240 <test_json@@Base>
  406bf9:	mov    ebp,eax
  406bfb:	or     ebp,ebx
  406bfd:	mov    DWORD PTR [rsp],0x14d
  406c04:	lea    rsi,[rip+0x2fc8b]        # 436896 <_IO_stdin_used@@Base+0x1896>
  406c0b:	xor    edx,edx
  406c0d:	mov    ecx,0xd
  406c12:	xor    r8d,r8d
  406c15:	xor    r9d,r9d
  406c18:	mov    rdi,r14
  406c1b:	call   406240 <test_json@@Base>
  406c20:	mov    r15d,eax
  406c23:	or     r15d,ebp
  406c26:	mov    DWORD PTR [rsp],0x150
  406c2d:	lea    rsi,[rip+0x2fcee]        # 436922 <_IO_stdin_used@@Base+0x1922>
  406c34:	xor    edx,edx
  406c36:	mov    ecx,0xd
  406c3b:	xor    r8d,r8d
  406c3e:	xor    r9d,r9d
  406c41:	mov    rdi,r14
  406c44:	call   406240 <test_json@@Base>
  406c49:	mov    ebx,eax
  406c4b:	or     ebx,r15d
  406c4e:	or     ebx,r12d
  406c51:	mov    DWORD PTR [rsp],0x154
  406c58:	lea    rsi,[rip+0x2fd4c]        # 4369ab <_IO_stdin_used@@Base+0x19ab>
  406c5f:	xor    edx,edx
  406c61:	mov    ecx,0xd
  406c66:	xor    r8d,r8d
  406c69:	xor    r9d,r9d
  406c6c:	mov    rdi,r14
  406c6f:	call   406240 <test_json@@Base>
  406c74:	mov    ebp,eax
  406c76:	mov    DWORD PTR [rsp],0x158
  406c7d:	lea    rsi,[rip+0x2fdd6]        # 436a5a <_IO_stdin_used@@Base+0x1a5a>
  406c84:	xor    edx,edx
  406c86:	mov    ecx,0xd
  406c8b:	xor    r8d,r8d
  406c8e:	xor    r9d,r9d
  406c91:	mov    rdi,r14
  406c94:	call   406240 <test_json@@Base>
  406c99:	or     eax,ebp
  406c9b:	or     eax,ebx
  406c9d:	add    rsp,0x10
  406ca1:	pop    rbx
  406ca2:	pop    r12
  406ca4:	pop    r14
  406ca6:	pop    r15
  406ca8:	pop    rbp
  406ca9:	ret    
  406caa:	nop    WORD PTR [rax+rax*1+0x0]

0000000000406cb0 <base64_tests@@Base>:
  406cb0:	push   rbp
  406cb1:	push   r15
  406cb3:	push   r14
  406cb5:	push   r13
  406cb7:	push   r12
  406cb9:	push   rbx
  406cba:	push   rax
  406cbb:	mov    DWORD PTR [rsp],0x171
  406cc2:	lea    r14,[rip+0x3ce47]        # 443b10 <flatcc_builder_padding_base@@Base+0xa2e0>
  406cc9:	lea    rsi,[rip+0x2fe39]        # 436b09 <_IO_stdin_used@@Base+0x1b09>
  406cd0:	lea    rdx,[rip+0x2f1c3]        # 435e9a <_IO_stdin_used@@Base+0xe9a>
  406cd7:	xor    ecx,ecx
  406cd9:	xor    r8d,r8d
  406cdc:	xor    r9d,r9d
  406cdf:	mov    rdi,r14
  406ce2:	call   406240 <test_json@@Base>
  406ce7:	mov    ebp,eax
  406ce9:	mov    DWORD PTR [rsp],0x174
  406cf0:	lea    rsi,[rip+0x2fe28]        # 436b1f <_IO_stdin_used@@Base+0x1b1f>
  406cf7:	lea    rdx,[rip+0x2fe48]        # 436b46 <_IO_stdin_used@@Base+0x1b46>
  406cfe:	xor    ecx,ecx
  406d00:	xor    r8d,r8d
  406d03:	xor    r9d,r9d
  406d06:	mov    rdi,r14
  406d09:	call   406240 <test_json@@Base>
  406d0e:	mov    ebx,eax
  406d10:	or     ebx,ebp
  406d12:	mov    DWORD PTR [rsp],0x178
  406d19:	lea    rsi,[rip+0x2fe49]        # 436b69 <_IO_stdin_used@@Base+0x1b69>
  406d20:	lea    r15,[rip+0x2fefb]        # 436c22 <_IO_stdin_used@@Base+0x1c22>
  406d27:	xor    ecx,ecx
  406d29:	xor    r8d,r8d
  406d2c:	xor    r9d,r9d
  406d2f:	mov    rdi,r14
  406d32:	mov    rdx,r15
  406d35:	call   406240 <test_json@@Base>
  406d3a:	mov    r13d,eax
  406d3d:	mov    DWORD PTR [rsp],0x17b
  406d44:	lea    rsi,[rip+0x2ff8b]        # 436cd6 <_IO_stdin_used@@Base+0x1cd6>
  406d4b:	lea    r12,[rip+0x30040]        # 436d92 <_IO_stdin_used@@Base+0x1d92>
  406d52:	xor    ecx,ecx
  406d54:	xor    r8d,r8d
  406d57:	xor    r9d,r9d
  406d5a:	mov    rdi,r14
  406d5d:	mov    rdx,r12
  406d60:	call   406240 <test_json@@Base>
  406d65:	mov    ebp,eax
  406d67:	or     ebp,r13d
  406d6a:	or     ebp,ebx
  406d6c:	mov    DWORD PTR [rsp],0x17e
  406d73:	lea    rsi,[rip+0x300cf]        # 436e49 <_IO_stdin_used@@Base+0x1e49>
  406d7a:	xor    ecx,ecx
  406d7c:	xor    r8d,r8d
  406d7f:	xor    r9d,r9d
  406d82:	mov    rdi,r14
  406d85:	mov    rdx,r15
  406d88:	call   406240 <test_json@@Base>
  406d8d:	mov    r15d,eax
  406d90:	mov    DWORD PTR [rsp],0x181
  406d97:	lea    rsi,[rip+0x30162]        # 436f00 <_IO_stdin_used@@Base+0x1f00>
  406d9e:	xor    ecx,ecx
  406da0:	xor    r8d,r8d
  406da3:	xor    r9d,r9d
  406da6:	mov    rdi,r14
  406da9:	mov    rdx,r12
  406dac:	call   406240 <test_json@@Base>
  406db1:	mov    ebx,eax
  406db3:	or     ebx,r15d
  406db6:	mov    DWORD PTR [rsp],0x184
  406dbd:	lea    rsi,[rip+0x301f6]        # 436fba <_IO_stdin_used@@Base+0x1fba>
  406dc4:	xor    edx,edx
  406dc6:	mov    ecx,0x1f
  406dcb:	xor    r8d,r8d
  406dce:	xor    r9d,r9d
  406dd1:	mov    rdi,r14
  406dd4:	call   406240 <test_json@@Base>
  406dd9:	mov    r15d,eax
  406ddc:	or     r15d,ebx
  406ddf:	or     r15d,ebp
  406de2:	mov    DWORD PTR [rsp],0x187
  406de9:	lea    rsi,[rip+0x30283]        # 437073 <_IO_stdin_used@@Base+0x2073>
  406df0:	xor    edx,edx
  406df2:	mov    ecx,0x20
  406df7:	xor    r8d,r8d
  406dfa:	xor    r9d,r9d
  406dfd:	mov    rdi,r14
  406e00:	call   406240 <test_json@@Base>
  406e05:	mov    ebx,eax
  406e07:	mov    DWORD PTR [rsp],0x196
  406e0e:	lea    rsi,[rip+0x3031a]        # 43712f <_IO_stdin_used@@Base+0x212f>
  406e15:	lea    r12,[rip+0x303e3]        # 4371ff <_IO_stdin_used@@Base+0x21ff>
  406e1c:	xor    ecx,ecx
  406e1e:	xor    r8d,r8d
  406e21:	xor    r9d,r9d
  406e24:	mov    rdi,r14
  406e27:	mov    rdx,r12
  406e2a:	call   406240 <test_json@@Base>
  406e2f:	mov    ebp,eax
  406e31:	or     ebp,ebx
  406e33:	mov    DWORD PTR [rsp],0x1a3
  406e3a:	lea    rsi,[rip+0x30493]        # 4372d4 <_IO_stdin_used@@Base+0x22d4>
  406e41:	xor    ecx,ecx
  406e43:	xor    r8d,r8d
  406e46:	xor    r9d,r9d
  406e49:	mov    rdi,r14
  406e4c:	mov    rdx,r12
  406e4f:	call   406240 <test_json@@Base>
  406e54:	or     eax,ebp
  406e56:	or     eax,r15d
  406e59:	add    rsp,0x8
  406e5d:	pop    rbx
  406e5e:	pop    r12
  406e60:	pop    r13
  406e62:	pop    r14
  406e64:	pop    r15
  406e66:	pop    rbp
  406e67:	ret    
  406e68:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406e70 <mixed_type_union_tests@@Base>:
  406e70:	push   rbp
  406e71:	push   r15
  406e73:	push   r14
  406e75:	push   r12
  406e77:	push   rbx
  406e78:	sub    rsp,0x10
  406e7c:	mov    DWORD PTR [rsp],0x1b0
  406e83:	lea    r15,[rip+0x3cca6]        # 443b30 <flatcc_builder_padding_base@@Base+0xa300>
  406e8a:	lea    rsi,[rip+0x3050f]        # 4373a0 <_IO_stdin_used@@Base+0x23a0>
  406e91:	lea    rdx,[rip+0x30557]        # 4373ef <_IO_stdin_used@@Base+0x23ef>
  406e98:	xor    ecx,ecx
  406e9a:	xor    r8d,r8d
  406e9d:	xor    r9d,r9d
  406ea0:	mov    rdi,r15
  406ea3:	call   406240 <test_json@@Base>
  406ea8:	mov    ebp,eax
  406eaa:	mov    DWORD PTR [rsp],0x1b5
  406eb1:	lea    rsi,[rip+0x3057e]        # 437436 <_IO_stdin_used@@Base+0x2436>
  406eb8:	lea    r14,[rip+0x305fa]        # 4374b9 <_IO_stdin_used@@Base+0x24b9>
  406ebf:	xor    ecx,ecx
  406ec1:	xor    r8d,r8d
  406ec4:	xor    r9d,r9d
  406ec7:	mov    rdi,r15
  406eca:	mov    rdx,r14
  406ecd:	call   406240 <test_json@@Base>
  406ed2:	mov    ebx,eax
  406ed4:	or     ebx,ebp
  406ed6:	mov    DWORD PTR [rsp],0x1ba
  406edd:	lea    rsi,[rip+0x3064c]        # 437530 <_IO_stdin_used@@Base+0x2530>
  406ee4:	xor    ecx,ecx
  406ee6:	xor    r8d,r8d
  406ee9:	xor    r9d,r9d
  406eec:	mov    rdi,r15
  406eef:	mov    rdx,r14
  406ef2:	call   406240 <test_json@@Base>
  406ef7:	mov    r12d,eax
  406efa:	mov    DWORD PTR [rsp],0x1c1
  406f01:	lea    rsi,[rip+0x306be]        # 4375c6 <_IO_stdin_used@@Base+0x25c6>
  406f08:	lea    rdx,[rip+0x30794]        # 4376a3 <_IO_stdin_used@@Base+0x26a3>
  406f0f:	xor    ecx,ecx
  406f11:	xor    r8d,r8d
  406f14:	xor    r9d,r9d
  406f17:	mov    rdi,r15
  406f1a:	call   406240 <test_json@@Base>
  406f1f:	mov    ebp,eax
  406f21:	or     ebp,r12d
  406f24:	or     ebp,ebx
  406f26:	mov    DWORD PTR [rsp],0x1ca
  406f2d:	lea    rsi,[rip+0x30828]        # 43775c <_IO_stdin_used@@Base+0x275c>
  406f34:	lea    rdx,[rip+0x30927]        # 437862 <_IO_stdin_used@@Base+0x2862>
  406f3b:	xor    ecx,ecx
  406f3d:	xor    r8d,r8d
  406f40:	xor    r9d,r9d
  406f43:	mov    rdi,r15
  406f46:	call   406240 <test_json@@Base>
  406f4b:	mov    r12d,eax
  406f4e:	mov    DWORD PTR [rsp],0x1d5
  406f55:	lea    rsi,[rip+0x309e4]        # 437940 <_IO_stdin_used@@Base+0x2940>
  406f5c:	lea    rdx,[rip+0x30b5e]        # 437ac1 <_IO_stdin_used@@Base+0x2ac1>
  406f63:	xor    ecx,ecx
  406f65:	xor    r8d,r8d
  406f68:	xor    r9d,r9d
  406f6b:	mov    rdi,r15
  406f6e:	call   406240 <test_json@@Base>
  406f73:	mov    ebx,eax
  406f75:	or     ebx,r12d
  406f78:	mov    DWORD PTR [rsp],0x1da
  406f7f:	lea    rsi,[rip+0x30c81]        # 437c07 <_IO_stdin_used@@Base+0x2c07>
  406f86:	xor    ecx,ecx
  406f88:	xor    r8d,r8d
  406f8b:	xor    r9d,r9d
  406f8e:	mov    rdi,r15
  406f91:	mov    rdx,r14
  406f94:	call   406240 <test_json@@Base>
  406f99:	or     eax,ebx
  406f9b:	or     eax,ebp
  406f9d:	add    rsp,0x10
  406fa1:	pop    rbx
  406fa2:	pop    r12
  406fa4:	pop    r14
  406fa6:	pop    r15
  406fa8:	pop    rbp
  406fa9:	ret    
  406faa:	nop    WORD PTR [rax+rax*1+0x0]

0000000000406fb0 <union_vector_tests@@Base>:
  406fb0:	push   rbp
  406fb1:	push   r15
  406fb3:	push   r14
  406fb5:	push   r12
  406fb7:	push   rbx
  406fb8:	sub    rsp,0x10
  406fbc:	mov    DWORD PTR [rsp],0x1e5
  406fc3:	lea    r15,[rip+0x3cb86]        # 443b50 <flatcc_builder_padding_base@@Base+0xa320>
  406fca:	lea    rsi,[rip+0x30cc3]        # 437c94 <_IO_stdin_used@@Base+0x2c94>
  406fd1:	lea    r14,[rip+0x30cfc]        # 437cd4 <_IO_stdin_used@@Base+0x2cd4>
  406fd8:	xor    ecx,ecx
  406fda:	xor    r8d,r8d
  406fdd:	xor    r9d,r9d
  406fe0:	mov    rdi,r15
  406fe3:	mov    rdx,r14
  406fe6:	call   406240 <test_json@@Base>
  406feb:	mov    ebp,eax
  406fed:	mov    DWORD PTR [rsp],0x1e8
  406ff4:	lea    rsi,[rip+0x30d11]        # 437d0c <_IO_stdin_used@@Base+0x2d0c>
  406ffb:	lea    rdx,[rip+0x30d3d]        # 437d3f <_IO_stdin_used@@Base+0x2d3f>
  407002:	xor    ecx,ecx
  407004:	xor    r8d,r8d
  407007:	xor    r9d,r9d
  40700a:	mov    rdi,r15
  40700d:	call   406240 <test_json@@Base>
  407012:	mov    ebx,eax
  407014:	or     ebx,ebp
  407016:	mov    DWORD PTR [rsp],0x1eb
  40701d:	lea    rsi,[rip+0x30d46]        # 437d6a <_IO_stdin_used@@Base+0x2d6a>
  407024:	lea    rdx,[rip+0x30d8c]        # 437db7 <_IO_stdin_used@@Base+0x2db7>
  40702b:	xor    ecx,ecx
  40702d:	xor    r8d,r8d
  407030:	xor    r9d,r9d
  407033:	mov    rdi,r15
  407036:	call   406240 <test_json@@Base>
  40703b:	mov    r12d,eax
  40703e:	mov    DWORD PTR [rsp],0x1ee
  407045:	lea    rsi,[rip+0x30daf]        # 437dfb <_IO_stdin_used@@Base+0x2dfb>
  40704c:	lea    rdx,[rip+0x30e25]        # 437e78 <_IO_stdin_used@@Base+0x2e78>
  407053:	xor    ecx,ecx
  407055:	xor    r8d,r8d
  407058:	xor    r9d,r9d
  40705b:	mov    rdi,r15
  40705e:	call   406240 <test_json@@Base>
  407063:	mov    ebp,eax
  407065:	or     ebp,r12d
  407068:	or     ebp,ebx
  40706a:	mov    DWORD PTR [rsp],0x1f1
  407071:	lea    rsi,[rip+0x30e6c]        # 437ee4 <_IO_stdin_used@@Base+0x2ee4>
  407078:	xor    ecx,ecx
  40707a:	xor    r8d,r8d
  40707d:	xor    r9d,r9d
  407080:	mov    rdi,r15
  407083:	mov    rdx,r14
  407086:	call   406240 <test_json@@Base>
  40708b:	mov    ebx,eax
  40708d:	mov    DWORD PTR [rsp],0x1f4
  407094:	lea    rsi,[rip+0x30e88]        # 437f23 <_IO_stdin_used@@Base+0x2f23>
  40709b:	lea    rdx,[rip+0x30ee7]        # 437f89 <_IO_stdin_used@@Base+0x2f89>
  4070a2:	xor    ecx,ecx
  4070a4:	xor    r8d,r8d
  4070a7:	xor    r9d,r9d
  4070aa:	mov    rdi,r15
  4070ad:	call   406240 <test_json@@Base>
  4070b2:	or     eax,ebx
  4070b4:	or     eax,ebp
  4070b6:	add    rsp,0x10
  4070ba:	pop    rbx
  4070bb:	pop    r12
  4070bd:	pop    r14
  4070bf:	pop    r15
  4070c1:	pop    rbp
  4070c2:	ret    
  4070c3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4070cd:	nop    DWORD PTR [rax]

00000000004070d0 <main@@Base>:
  4070d0:	push   rbp
  4070d1:	push   r15
  4070d3:	push   r14
  4070d5:	push   r13
  4070d7:	push   r12
  4070d9:	push   rbx
  4070da:	sub    rsp,0x18
  4070de:	call   4066a0 <edge_case_tests@@Base>
  4070e3:	mov    ebx,eax
  4070e5:	call   4069c0 <error_case_tests@@Base>
  4070ea:	mov    ebp,eax
  4070ec:	or     ebp,ebx
  4070ee:	call   406fb0 <union_vector_tests@@Base>
  4070f3:	mov    r14d,eax
  4070f6:	call   406cb0 <base64_tests@@Base>
  4070fb:	mov    ebx,eax
  4070fd:	or     ebx,r14d
  407100:	or     ebx,ebp
  407102:	call   406e70 <mixed_type_union_tests@@Base>
  407107:	mov    r14d,eax
  40710a:	mov    DWORD PTR [rsp],0x20d
  407111:	lea    r12,[rip+0x3c9f8]        # 443b10 <flatcc_builder_padding_base@@Base+0xa2e0>
  407118:	lea    rsi,[rip+0x30ec6]        # 437fe5 <_IO_stdin_used@@Base+0x2fe5>
  40711f:	lea    rdx,[rip+0x2ed74]        # 435e9a <_IO_stdin_used@@Base+0xe9a>
  407126:	xor    ecx,ecx
  407128:	xor    r8d,r8d
  40712b:	xor    r9d,r9d
  40712e:	mov    rdi,r12
  407131:	call   406240 <test_json@@Base>
  407136:	mov    ebp,eax
  407138:	or     ebp,r14d
  40713b:	or     ebp,ebx
  40713d:	mov    DWORD PTR [rsp],0x210
  407144:	lea    rsi,[rip+0x30eb1]        # 437ffc <_IO_stdin_used@@Base+0x2ffc>
  40714b:	lea    r13,[rip+0x30ed1]        # 438023 <_IO_stdin_used@@Base+0x3023>
  407152:	xor    ecx,ecx
  407154:	xor    r8d,r8d
  407157:	xor    r9d,r9d
  40715a:	mov    rdi,r12
  40715d:	mov    rdx,r13
  407160:	call   406240 <test_json@@Base>
  407165:	mov    r14d,eax
  407168:	mov    DWORD PTR [rsp],0x213
  40716f:	lea    rsi,[rip+0x30ece]        # 438044 <_IO_stdin_used@@Base+0x3044>
  407176:	lea    rdx,[rip+0x30eef]        # 43806c <_IO_stdin_used@@Base+0x306c>
  40717d:	xor    ecx,ecx
  40717f:	xor    r8d,r8d
  407182:	xor    r9d,r9d
  407185:	mov    rdi,r12
  407188:	call   406240 <test_json@@Base>
  40718d:	mov    ebx,eax
  40718f:	or     ebx,r14d
  407192:	mov    DWORD PTR [rsp],0x216
  407199:	lea    rsi,[rip+0x30eef]        # 43808f <_IO_stdin_used@@Base+0x308f>
  4071a0:	lea    r15,[rip+0x30f19]        # 4380c0 <_IO_stdin_used@@Base+0x30c0>
  4071a7:	xor    ecx,ecx
  4071a9:	xor    r8d,r8d
  4071ac:	xor    r9d,r9d
  4071af:	mov    rdi,r12
  4071b2:	mov    rdx,r15
  4071b5:	call   406240 <test_json@@Base>
  4071ba:	mov    r14d,eax
  4071bd:	or     r14d,ebx
  4071c0:	or     r14d,ebp
  4071c3:	mov    DWORD PTR [rsp],0x219
  4071ca:	lea    rsi,[rip+0x30f1b]        # 4380ec <_IO_stdin_used@@Base+0x30ec>
  4071d1:	xor    ecx,ecx
  4071d3:	xor    r8d,r8d
  4071d6:	xor    r9d,r9d
  4071d9:	mov    rdi,r12
  4071dc:	mov    rdx,r15
  4071df:	call   406240 <test_json@@Base>
  4071e4:	mov    ebx,eax
  4071e6:	mov    DWORD PTR [rsp],0x21c
  4071ed:	lea    rsi,[rip+0x30f32]        # 438126 <_IO_stdin_used@@Base+0x3126>
  4071f4:	xor    ecx,ecx
  4071f6:	xor    r8d,r8d
  4071f9:	xor    r9d,r9d
  4071fc:	mov    rdi,r12
  4071ff:	mov    rdx,r13
  407202:	call   406240 <test_json@@Base>
  407207:	mov    ebp,eax
  407209:	or     ebp,ebx
  40720b:	mov    DWORD PTR [rsp],0x21f
  407212:	lea    rsi,[rip+0x30f33]        # 43814c <_IO_stdin_used@@Base+0x314c>
  407219:	xor    ecx,ecx
  40721b:	xor    r8d,r8d
  40721e:	xor    r9d,r9d
  407221:	mov    rdi,r12
  407224:	lea    rdx,[rip+0x30e41]        # 43806c <_IO_stdin_used@@Base+0x306c>
  40722b:	call   406240 <test_json@@Base>
  407230:	mov    ebx,eax
  407232:	or     ebx,ebp
  407234:	mov    DWORD PTR [rsp],0x223
  40723b:	lea    rsi,[rip+0x30f33]        # 438175 <_IO_stdin_used@@Base+0x3175>
  407242:	xor    ecx,ecx
  407244:	xor    r8d,r8d
  407247:	xor    r9d,r9d
  40724a:	mov    rdi,r12
  40724d:	lea    rbp,[rip+0x2ec46]        # 435e9a <_IO_stdin_used@@Base+0xe9a>
  407254:	mov    rdx,rbp
  407257:	call   406240 <test_json@@Base>
  40725c:	mov    r13d,eax
  40725f:	or     r13d,ebx
  407262:	or     r13d,r14d
  407265:	mov    DWORD PTR [rsp],0x227
  40726c:	lea    rsi,[rip+0x2eba0]        # 435e13 <_IO_stdin_used@@Base+0xe13>
  407273:	xor    ecx,ecx
  407275:	xor    r8d,r8d
  407278:	xor    r9d,r9d
  40727b:	mov    rdi,r12
  40727e:	mov    rdx,rbp
  407281:	call   406240 <test_json@@Base>
  407286:	mov    r14d,eax
  407289:	mov    DWORD PTR [rsp],0x22b
  407290:	lea    rsi,[rip+0x30f05]        # 43819c <_IO_stdin_used@@Base+0x319c>
  407297:	xor    ecx,ecx
  407299:	xor    r8d,r8d
  40729c:	xor    r9d,r9d
  40729f:	mov    rdi,r12
  4072a2:	mov    rdx,rbp
  4072a5:	call   406240 <test_json@@Base>
  4072aa:	mov    ebx,eax
  4072ac:	or     ebx,r14d
  4072af:	mov    DWORD PTR [rsp],0x22e
  4072b6:	lea    rsi,[rip+0x30ef4]        # 4381b1 <_IO_stdin_used@@Base+0x31b1>
  4072bd:	xor    ecx,ecx
  4072bf:	xor    r8d,r8d
  4072c2:	xor    r9d,r9d
  4072c5:	mov    rdi,r12
  4072c8:	lea    rax,[rip+0x30d54]        # 438023 <_IO_stdin_used@@Base+0x3023>
  4072cf:	mov    rdx,rax
  4072d2:	call   406240 <test_json@@Base>
  4072d7:	mov    ebp,eax
  4072d9:	or     ebp,ebx
  4072db:	mov    DWORD PTR [rsp],0x231
  4072e2:	lea    rsi,[rip+0x30eeb]        # 4381d4 <_IO_stdin_used@@Base+0x31d4>
  4072e9:	xor    ecx,ecx
  4072eb:	xor    r8d,r8d
  4072ee:	xor    r9d,r9d
  4072f1:	mov    rdi,r12
  4072f4:	lea    r14,[rip+0x30d71]        # 43806c <_IO_stdin_used@@Base+0x306c>
  4072fb:	mov    rdx,r14
  4072fe:	call   406240 <test_json@@Base>
  407303:	mov    ebx,eax
  407305:	or     ebx,ebp
  407307:	mov    DWORD PTR [rsp],0x234
  40730e:	lea    rsi,[rip+0x30ee3]        # 4381f8 <_IO_stdin_used@@Base+0x31f8>
  407315:	xor    ecx,ecx
  407317:	xor    r8d,r8d
  40731a:	xor    r9d,r9d
  40731d:	mov    rdi,r12
  407320:	mov    rbp,r15
  407323:	mov    rdx,r15
  407326:	call   406240 <test_json@@Base>
  40732b:	mov    r15d,eax
  40732e:	or     r15d,ebx
  407331:	or     r15d,r13d
  407334:	mov    DWORD PTR [rsp],0x237
  40733b:	lea    rsi,[rip+0x30ee3]        # 438225 <_IO_stdin_used@@Base+0x3225>
  407342:	xor    ecx,ecx
  407344:	xor    r8d,r8d
  407347:	xor    r9d,r9d
  40734a:	mov    rdi,r12
  40734d:	mov    rdx,rbp
  407350:	call   406240 <test_json@@Base>
  407355:	mov    ebx,eax
  407357:	mov    DWORD PTR [rsp],0x23a
  40735e:	lea    rsi,[rip+0x30ef6]        # 43825b <_IO_stdin_used@@Base+0x325b>
  407365:	xor    ecx,ecx
  407367:	xor    r8d,r8d
  40736a:	xor    r9d,r9d
  40736d:	mov    rdi,r12
  407370:	lea    rdx,[rip+0x30cac]        # 438023 <_IO_stdin_used@@Base+0x3023>
  407377:	call   406240 <test_json@@Base>
  40737c:	mov    ebp,eax
  40737e:	or     ebp,ebx
  407380:	mov    DWORD PTR [rsp],0x23d
  407387:	lea    rsi,[rip+0x30eed]        # 43827b <_IO_stdin_used@@Base+0x327b>
  40738e:	xor    ecx,ecx
  407390:	xor    r8d,r8d
  407393:	xor    r9d,r9d
  407396:	mov    rdi,r12
  407399:	mov    rdx,r14
  40739c:	call   406240 <test_json@@Base>
  4073a1:	mov    ebx,eax
  4073a3:	or     ebx,ebp
  4073a5:	mov    DWORD PTR [rsp],0x241
  4073ac:	lea    rsi,[rip+0x30eea]        # 43829d <_IO_stdin_used@@Base+0x329d>
  4073b3:	xor    ecx,ecx
  4073b5:	xor    r8d,r8d
  4073b8:	xor    r9d,r9d
  4073bb:	mov    rdi,r12
  4073be:	lea    r14,[rip+0x2ead5]        # 435e9a <_IO_stdin_used@@Base+0xe9a>
  4073c5:	mov    rdx,r14
  4073c8:	call   406240 <test_json@@Base>
  4073cd:	mov    ebp,eax
  4073cf:	or     ebp,ebx
  4073d1:	mov    DWORD PTR [rsp],0x245
  4073d8:	lea    rsi,[rip+0x2ecfd]        # 4360dc <_IO_stdin_used@@Base+0x10dc>
  4073df:	xor    ecx,ecx
  4073e1:	xor    r8d,r8d
  4073e4:	xor    r9d,r9d
  4073e7:	mov    rdi,r12
  4073ea:	mov    rdx,r14
  4073ed:	call   406240 <test_json@@Base>
  4073f2:	mov    ebx,eax
  4073f4:	or     ebx,ebp
  4073f6:	mov    DWORD PTR [rsp],0x249
  4073fd:	lea    rsi,[rip+0x30eba]        # 4382be <_IO_stdin_used@@Base+0x32be>
  407404:	lea    r14,[rip+0x30ed9]        # 4382e4 <_IO_stdin_used@@Base+0x32e4>
  40740b:	xor    ecx,ecx
  40740d:	xor    r8d,r8d
  407410:	xor    r9d,r9d
  407413:	mov    rdi,r12
  407416:	mov    rdx,r14
  407419:	call   406240 <test_json@@Base>
  40741e:	mov    r13d,eax
  407421:	or     r13d,ebx
  407424:	or     r13d,r15d
  407427:	mov    DWORD PTR [rsp],0x24f
  40742e:	lea    rsi,[rip+0x30ed6]        # 43830b <_IO_stdin_used@@Base+0x330b>
  407435:	xor    ecx,ecx
  407437:	xor    r8d,r8d
  40743a:	xor    r9d,r9d
  40743d:	mov    rdi,r12
  407440:	mov    rdx,r14
  407443:	call   406240 <test_json@@Base>
  407448:	mov    ebx,eax
  40744a:	mov    DWORD PTR [rsp],0x252
  407451:	lea    rsi,[rip+0x30ed8]        # 438330 <_IO_stdin_used@@Base+0x3330>
  407458:	xor    ecx,ecx
  40745a:	xor    r8d,r8d
  40745d:	xor    r9d,r9d
  407460:	mov    rdi,r12
  407463:	mov    rdx,r14
  407466:	call   406240 <test_json@@Base>
  40746b:	mov    ebp,eax
  40746d:	or     ebp,ebx
  40746f:	mov    DWORD PTR [rsp],0x255
  407476:	lea    rsi,[rip+0x30ed8]        # 438355 <_IO_stdin_used@@Base+0x3355>
  40747d:	xor    ecx,ecx
  40747f:	xor    r8d,r8d
  407482:	xor    r9d,r9d
  407485:	mov    rdi,r12
  407488:	lea    r14,[rip+0x30c31]        # 4380c0 <_IO_stdin_used@@Base+0x30c0>
  40748f:	mov    rdx,r14
  407492:	call   406240 <test_json@@Base>
  407497:	mov    ebx,eax
  407499:	or     ebx,ebp
  40749b:	mov    DWORD PTR [rsp],0x259
  4074a2:	lea    rsi,[rip+0x30eda]        # 438383 <_IO_stdin_used@@Base+0x3383>
  4074a9:	xor    ecx,ecx
  4074ab:	xor    r8d,r8d
  4074ae:	xor    r9d,r9d
  4074b1:	mov    rdi,r12
  4074b4:	lea    rdx,[rip+0x30b68]        # 438023 <_IO_stdin_used@@Base+0x3023>
  4074bb:	call   406240 <test_json@@Base>
  4074c0:	mov    ebp,eax
  4074c2:	or     ebp,ebx
  4074c4:	mov    DWORD PTR [rsp],0x25c
  4074cb:	lea    rsi,[rip+0x30ed2]        # 4383a4 <_IO_stdin_used@@Base+0x33a4>
  4074d2:	xor    ecx,ecx
  4074d4:	xor    r8d,r8d
  4074d7:	xor    r9d,r9d
  4074da:	mov    rdi,r12
  4074dd:	lea    rdx,[rip+0x30b88]        # 43806c <_IO_stdin_used@@Base+0x306c>
  4074e4:	call   406240 <test_json@@Base>
  4074e9:	mov    ebx,eax
  4074eb:	or     ebx,ebp
  4074ed:	mov    DWORD PTR [rsp],0x25f
  4074f4:	lea    rsi,[rip+0x30eca]        # 4383c5 <_IO_stdin_used@@Base+0x33c5>
  4074fb:	lea    rdx,[rip+0x30ee4]        # 4383e6 <_IO_stdin_used@@Base+0x33e6>
  407502:	xor    ecx,ecx
  407504:	xor    r8d,r8d
  407507:	xor    r9d,r9d
  40750a:	mov    rdi,r12
  40750d:	call   406240 <test_json@@Base>
  407512:	mov    ebp,eax
  407514:	or     ebp,ebx
  407516:	mov    DWORD PTR [rsp],0x262
  40751d:	lea    rsi,[rip+0x30ee8]        # 43840c <_IO_stdin_used@@Base+0x340c>
  407524:	xor    ecx,ecx
  407526:	xor    r8d,r8d
  407529:	xor    r9d,r9d
  40752c:	mov    rdi,r12
  40752f:	mov    rdx,r14
  407532:	call   406240 <test_json@@Base>
  407537:	mov    r15d,eax
  40753a:	or     r15d,ebp
  40753d:	or     r15d,r13d
  407540:	mov    DWORD PTR [rsp],0x265
  407547:	lea    rsi,[rip+0x30ee0]        # 43842e <_IO_stdin_used@@Base+0x342e>
  40754e:	lea    rdx,[rip+0x30efb]        # 438450 <_IO_stdin_used@@Base+0x3450>
  407555:	xor    ecx,ecx
  407557:	xor    r8d,r8d
  40755a:	xor    r9d,r9d
  40755d:	mov    rdi,r12
  407560:	call   406240 <test_json@@Base>
  407565:	mov    ebp,eax
  407567:	mov    DWORD PTR [rsp],0x268
  40756e:	lea    rsi,[rip+0x30ef9]        # 43846e <_IO_stdin_used@@Base+0x346e>
  407575:	lea    rdx,[rip+0x30f14]        # 438490 <_IO_stdin_used@@Base+0x3490>
  40757c:	xor    ecx,ecx
  40757e:	xor    r8d,r8d
  407581:	xor    r9d,r9d
  407584:	mov    rdi,r12
  407587:	call   406240 <test_json@@Base>
  40758c:	mov    ebx,eax
  40758e:	or     ebx,ebp
  407590:	mov    DWORD PTR [rsp],0x26b
  407597:	lea    rsi,[rip+0x30f10]        # 4384ae <_IO_stdin_used@@Base+0x34ae>
  40759e:	lea    rdx,[rip+0x30f2a]        # 4384cf <_IO_stdin_used@@Base+0x34cf>
  4075a5:	xor    ecx,ecx
  4075a7:	xor    r8d,r8d
  4075aa:	xor    r9d,r9d
  4075ad:	mov    rdi,r12
  4075b0:	call   406240 <test_json@@Base>
  4075b5:	mov    ebp,eax
  4075b7:	or     ebp,ebx
  4075b9:	mov    DWORD PTR [rsp],0x26e
  4075c0:	lea    rsi,[rip+0x30f25]        # 4384ec <_IO_stdin_used@@Base+0x34ec>
  4075c7:	xor    ecx,ecx
  4075c9:	xor    r8d,r8d
  4075cc:	xor    r9d,r9d
  4075cf:	mov    rdi,r12
  4075d2:	lea    r14,[rip+0x30a4a]        # 438023 <_IO_stdin_used@@Base+0x3023>
  4075d9:	mov    rdx,r14
  4075dc:	call   406240 <test_json@@Base>
  4075e1:	mov    ebx,eax
  4075e3:	or     ebx,ebp
  4075e5:	mov    DWORD PTR [rsp],0x271
  4075ec:	lea    rsi,[rip+0x30f24]        # 438517 <_IO_stdin_used@@Base+0x3517>
  4075f3:	xor    ecx,ecx
  4075f5:	xor    r8d,r8d
  4075f8:	xor    r9d,r9d
  4075fb:	mov    rdi,r12
  4075fe:	mov    rdx,r14
  407601:	call   406240 <test_json@@Base>
  407606:	mov    ebp,eax
  407608:	or     ebp,ebx
  40760a:	mov    DWORD PTR [rsp],0x274
  407611:	lea    r14,[rip+0x30f39]        # 438551 <_IO_stdin_used@@Base+0x3551>
  407618:	lea    r13,[rip+0x30f5c]        # 43857b <_IO_stdin_used@@Base+0x357b>
  40761f:	xor    ecx,ecx
  407621:	xor    r8d,r8d
  407624:	xor    r9d,r9d
  407627:	mov    rdi,r12
  40762a:	mov    rsi,r14
  40762d:	mov    rdx,r13
  407630:	call   406240 <test_json@@Base>
  407635:	mov    ebx,eax
  407637:	or     ebx,ebp
  407639:	mov    DWORD PTR [rsp],0x277
  407640:	xor    ecx,ecx
  407642:	xor    r8d,r8d
  407645:	xor    r9d,r9d
  407648:	mov    rdi,r12
  40764b:	mov    rsi,r14
  40764e:	mov    rdx,r13
  407651:	call   406240 <test_json@@Base>
  407656:	mov    ebp,eax
  407658:	or     ebp,ebx
  40765a:	mov    DWORD PTR [rsp],0x27a
  407661:	lea    rsi,[rip+0x30f2d]        # 438595 <_IO_stdin_used@@Base+0x3595>
  407668:	lea    rdx,[rip+0x30f77]        # 4385e6 <_IO_stdin_used@@Base+0x35e6>
  40766f:	xor    ecx,ecx
  407671:	xor    r8d,r8d
  407674:	xor    r9d,r9d
  407677:	mov    rdi,r12
  40767a:	call   406240 <test_json@@Base>
  40767f:	mov    r14d,eax
  407682:	or     r14d,ebp
  407685:	or     r14d,r15d
  407688:	mov    DWORD PTR [rsp],0x27e
  40768f:	lea    rsi,[rip+0x30f97]        # 43862d <_IO_stdin_used@@Base+0x362d>
  407696:	lea    rdx,[rip+0x30fe5]        # 438682 <_IO_stdin_used@@Base+0x3682>
  40769d:	xor    ecx,ecx
  40769f:	xor    r8d,r8d
  4076a2:	xor    r9d,r9d
  4076a5:	mov    rdi,r12
  4076a8:	call   406240 <test_json@@Base>
  4076ad:	mov    ebx,eax
  4076af:	mov    DWORD PTR [rsp],0x282
  4076b6:	lea    rsi,[rip+0x3100f]        # 4386cc <_IO_stdin_used@@Base+0x36cc>
  4076bd:	lea    rdx,[rip+0x31077]        # 43873b <_IO_stdin_used@@Base+0x373b>
  4076c4:	xor    ecx,ecx
  4076c6:	xor    r8d,r8d
  4076c9:	xor    r9d,r9d
  4076cc:	mov    rdi,r12
  4076cf:	call   406240 <test_json@@Base>
  4076d4:	mov    ebp,eax
  4076d6:	or     ebp,ebx
  4076d8:	mov    DWORD PTR [rsp],0x286
  4076df:	lea    rsi,[rip+0x310b7]        # 43879d <_IO_stdin_used@@Base+0x379d>
  4076e6:	xor    ecx,ecx
  4076e8:	xor    r8d,r8d
  4076eb:	xor    r9d,r9d
  4076ee:	mov    rdi,r12
  4076f1:	lea    r15,[rip+0x2e7a2]        # 435e9a <_IO_stdin_used@@Base+0xe9a>
  4076f8:	mov    rdx,r15
  4076fb:	call   406240 <test_json@@Base>
  407700:	mov    ebx,eax
  407702:	or     ebx,ebp
  407704:	mov    DWORD PTR [rsp],0x289
  40770b:	lea    rsi,[rip+0x310b6]        # 4387c8 <_IO_stdin_used@@Base+0x37c8>
  407712:	xor    ecx,ecx
  407714:	xor    r8d,r8d
  407717:	xor    r9d,r9d
  40771a:	mov    rdi,r12
  40771d:	mov    rdx,r15
  407720:	call   406240 <test_json@@Base>
  407725:	mov    ebp,eax
  407727:	or     ebp,ebx
  407729:	mov    DWORD PTR [rsp],0x28d
  407730:	lea    rsi,[rip+0x310b7]        # 4387ee <_IO_stdin_used@@Base+0x37ee>
  407737:	xor    ecx,ecx
  407739:	xor    r8d,r8d
  40773c:	xor    r9d,r9d
  40773f:	mov    rdi,r12
  407742:	lea    rdx,[rip+0x308da]        # 438023 <_IO_stdin_used@@Base+0x3023>
  407749:	call   406240 <test_json@@Base>
  40774e:	mov    ebx,eax
  407750:	or     ebx,ebp
  407752:	mov    DWORD PTR [rsp],0x290
  407759:	lea    rsi,[rip+0x310ab]        # 43880b <_IO_stdin_used@@Base+0x380b>
  407760:	xor    ecx,ecx
  407762:	xor    r8d,r8d
  407765:	xor    r9d,r9d
  407768:	mov    rdi,r12
  40776b:	lea    rdx,[rip+0x308fa]        # 43806c <_IO_stdin_used@@Base+0x306c>
  407772:	call   406240 <test_json@@Base>
  407777:	mov    ebp,eax
  407779:	or     ebp,ebx
  40777b:	mov    DWORD PTR [rsp],0x293
  407782:	lea    rsi,[rip+0x3109f]        # 438828 <_IO_stdin_used@@Base+0x3828>
  407789:	xor    ecx,ecx
  40778b:	xor    r8d,r8d
  40778e:	xor    r9d,r9d
  407791:	mov    rdi,r12
  407794:	lea    rdx,[rip+0x30c4b]        # 4383e6 <_IO_stdin_used@@Base+0x33e6>
  40779b:	call   406240 <test_json@@Base>
  4077a0:	mov    ebx,eax
  4077a2:	or     ebx,ebp
  4077a4:	mov    DWORD PTR [rsp],0x296
  4077ab:	lea    rsi,[rip+0x31093]        # 438845 <_IO_stdin_used@@Base+0x3845>
  4077b2:	xor    ecx,ecx
  4077b4:	xor    r8d,r8d
  4077b7:	xor    r9d,r9d
  4077ba:	mov    rdi,r12
  4077bd:	lea    rdx,[rip+0x308fc]        # 4380c0 <_IO_stdin_used@@Base+0x30c0>
  4077c4:	call   406240 <test_json@@Base>
  4077c9:	mov    ebp,eax
  4077cb:	or     ebp,ebx
  4077cd:	mov    DWORD PTR [rsp],0x299
  4077d4:	lea    rsi,[rip+0x31088]        # 438863 <_IO_stdin_used@@Base+0x3863>
  4077db:	xor    ecx,ecx
  4077dd:	xor    r8d,r8d
  4077e0:	xor    r9d,r9d
  4077e3:	mov    rdi,r12
  4077e6:	lea    rdx,[rip+0x30c63]        # 438450 <_IO_stdin_used@@Base+0x3450>
  4077ed:	call   406240 <test_json@@Base>
  4077f2:	mov    r13d,eax
  4077f5:	or     r13d,ebp
  4077f8:	or     r13d,r14d
  4077fb:	mov    DWORD PTR [rsp],0x29c
  407802:	lea    rsi,[rip+0x31078]        # 438881 <_IO_stdin_used@@Base+0x3881>
  407809:	xor    ecx,ecx
  40780b:	xor    r8d,r8d
  40780e:	xor    r9d,r9d
  407811:	mov    rdi,r12
  407814:	mov    r15,r12
  407817:	lea    rdx,[rip+0x30c72]        # 438490 <_IO_stdin_used@@Base+0x3490>
  40781e:	call   406240 <test_json@@Base>
  407823:	mov    ebp,eax
  407825:	mov    DWORD PTR [rsp],0x29f
  40782c:	lea    rsi,[rip+0x3106c]        # 43889f <_IO_stdin_used@@Base+0x389f>
  407833:	xor    ecx,ecx
  407835:	xor    r8d,r8d
  407838:	xor    r9d,r9d
  40783b:	mov    rdi,r12
  40783e:	lea    rdx,[rip+0x30c8a]        # 4384cf <_IO_stdin_used@@Base+0x34cf>
  407845:	call   406240 <test_json@@Base>
  40784a:	mov    ebx,eax
  40784c:	or     ebx,ebp
  40784e:	mov    DWORD PTR [rsp],0x2a2
  407855:	lea    rsi,[rip+0x31060]        # 4388bc <_IO_stdin_used@@Base+0x38bc>
  40785c:	xor    ecx,ecx
  40785e:	xor    r8d,r8d
  407861:	xor    r9d,r9d
  407864:	mov    rdi,r12
  407867:	lea    r14,[rip+0x307b5]        # 438023 <_IO_stdin_used@@Base+0x3023>
  40786e:	mov    rdx,r14
  407871:	call   406240 <test_json@@Base>
  407876:	mov    ebp,eax
  407878:	or     ebp,ebx
  40787a:	mov    DWORD PTR [rsp],0x2a5
  407881:	lea    rsi,[rip+0x31059]        # 4388e1 <_IO_stdin_used@@Base+0x38e1>
  407888:	xor    ecx,ecx
  40788a:	xor    r8d,r8d
  40788d:	xor    r9d,r9d
  407890:	mov    rdi,r12
  407893:	mov    rdx,r14
  407896:	call   406240 <test_json@@Base>
  40789b:	mov    ebx,eax
  40789d:	or     ebx,ebp
  40789f:	mov    DWORD PTR [rsp],0x2a8
  4078a6:	lea    r14,[rip+0x31068]        # 438915 <_IO_stdin_used@@Base+0x3915>
  4078ad:	xor    ecx,ecx
  4078af:	xor    r8d,r8d
  4078b2:	xor    r9d,r9d
  4078b5:	mov    rdi,r12
  4078b8:	mov    rsi,r14
  4078bb:	lea    r12,[rip+0x30cb9]        # 43857b <_IO_stdin_used@@Base+0x357b>
  4078c2:	mov    rdx,r12
  4078c5:	call   406240 <test_json@@Base>
  4078ca:	mov    ebp,eax
  4078cc:	or     ebp,ebx
  4078ce:	mov    DWORD PTR [rsp],0x2ab
  4078d5:	xor    ecx,ecx
  4078d7:	xor    r8d,r8d
  4078da:	xor    r9d,r9d
  4078dd:	mov    rdi,r15
  4078e0:	mov    rsi,r14
  4078e3:	mov    rdx,r12
  4078e6:	call   406240 <test_json@@Base>
  4078eb:	mov    ebx,eax
  4078ed:	or     ebx,ebp
  4078ef:	mov    DWORD PTR [rsp],0x2ae
  4078f6:	lea    rsi,[rip+0x3103c]        # 438939 <_IO_stdin_used@@Base+0x3939>
  4078fd:	xor    ecx,ecx
  4078ff:	xor    r8d,r8d
  407902:	xor    r9d,r9d
  407905:	mov    rdi,r15
  407908:	lea    rdx,[rip+0x30cd7]        # 4385e6 <_IO_stdin_used@@Base+0x35e6>
  40790f:	call   406240 <test_json@@Base>
  407914:	mov    ebp,eax
  407916:	or     ebp,ebx
  407918:	mov    DWORD PTR [rsp],0x2b2
  40791f:	lea    rsi,[rip+0x3105a]        # 438980 <_IO_stdin_used@@Base+0x3980>
  407926:	xor    ecx,ecx
  407928:	xor    r8d,r8d
  40792b:	xor    r9d,r9d
  40792e:	mov    rdi,r15
  407931:	lea    rdx,[rip+0x30d4a]        # 438682 <_IO_stdin_used@@Base+0x3682>
  407938:	call   406240 <test_json@@Base>
  40793d:	mov    ebx,eax
  40793f:	or     ebx,ebp
  407941:	mov    DWORD PTR [rsp],0x2b6
  407948:	lea    rsi,[rip+0x3107c]        # 4389cb <_IO_stdin_used@@Base+0x39cb>
  40794f:	xor    ecx,ecx
  407951:	xor    r8d,r8d
  407954:	xor    r9d,r9d
  407957:	mov    rdi,r15
  40795a:	lea    rdx,[rip+0x30dda]        # 43873b <_IO_stdin_used@@Base+0x373b>
  407961:	call   406240 <test_json@@Base>
  407966:	mov    ebp,eax
  407968:	or     ebp,ebx
  40796a:	mov    DWORD PTR [rsp],0x2ba
  407971:	lea    rsi,[rip+0x310b2]        # 438a2a <_IO_stdin_used@@Base+0x3a2a>
  407978:	xor    ecx,ecx
  40797a:	xor    r8d,r8d
  40797d:	xor    r9d,r9d
  407980:	mov    rdi,r15
  407983:	lea    rbx,[rip+0x2e510]        # 435e9a <_IO_stdin_used@@Base+0xe9a>
  40798a:	mov    rdx,rbx
  40798d:	call   406240 <test_json@@Base>
  407992:	or     eax,ebp
  407994:	or     eax,r13d
  407997:	mov    DWORD PTR [rsp+0x14],eax
  40799b:	mov    DWORD PTR [rsp],0x2bd
  4079a2:	lea    rsi,[rip+0x310a6]        # 438a4f <_IO_stdin_used@@Base+0x3a4f>
  4079a9:	xor    ecx,ecx
  4079ab:	xor    r8d,r8d
  4079ae:	xor    r9d,r9d
  4079b1:	mov    rdi,r15
  4079b4:	mov    rdx,rbx
  4079b7:	mov    r13,rbx
  4079ba:	call   406240 <test_json@@Base>
  4079bf:	mov    ebx,eax
  4079c1:	mov    DWORD PTR [rsp],0x2c7
  4079c8:	lea    rsi,[rip+0x310a2]        # 438a71 <_IO_stdin_used@@Base+0x3a71>
  4079cf:	lea    r14,[rip+0x310f8]        # 438ace <_IO_stdin_used@@Base+0x3ace>
  4079d6:	xor    ecx,ecx
  4079d8:	xor    r8d,r8d
  4079db:	xor    r9d,r9d
  4079de:	mov    rdi,r15
  4079e1:	mov    rdx,r14
  4079e4:	call   406240 <test_json@@Base>
  4079e9:	mov    ebp,eax
  4079eb:	or     ebp,ebx
  4079ed:	mov    DWORD PTR [rsp],0x2cc
  4079f4:	lea    rsi,[rip+0x31131]        # 438b2c <_IO_stdin_used@@Base+0x3b2c>
  4079fb:	xor    ecx,ecx
  4079fd:	xor    r8d,r8d
  407a00:	xor    r9d,r9d
  407a03:	mov    rdi,r15
  407a06:	mov    rdx,r14
  407a09:	call   406240 <test_json@@Base>
  407a0e:	mov    ebx,eax
  407a10:	or     ebx,ebp
  407a12:	mov    DWORD PTR [rsp],0x2db
  407a19:	lea    rsi,[rip+0x31179]        # 438b99 <_IO_stdin_used@@Base+0x3b99>
  407a20:	lea    rdx,[rip+0x311af]        # 438bd6 <_IO_stdin_used@@Base+0x3bd6>
  407a27:	xor    ecx,ecx
  407a29:	xor    r8d,r8d
  407a2c:	xor    r9d,r9d
  407a2f:	mov    rdi,r15
  407a32:	call   406240 <test_json@@Base>
  407a37:	mov    ebp,eax
  407a39:	or     ebp,ebx
  407a3b:	mov    DWORD PTR [rsp],0x2de
  407a42:	lea    rsi,[rip+0x311bd]        # 438c06 <_IO_stdin_used@@Base+0x3c06>
  407a49:	lea    rdx,[rip+0x311d0]        # 438c20 <_IO_stdin_used@@Base+0x3c20>
  407a50:	xor    ecx,ecx
  407a52:	xor    r8d,r8d
  407a55:	xor    r9d,r9d
  407a58:	mov    rdi,r15
  407a5b:	call   406240 <test_json@@Base>
  407a60:	mov    ebx,eax
  407a62:	or     ebx,ebp
  407a64:	mov    DWORD PTR [rsp],0x2e2
  407a6b:	lea    rsi,[rip+0x311c0]        # 438c32 <_IO_stdin_used@@Base+0x3c32>
  407a72:	lea    r14,[rip+0x31201]        # 438c7a <_IO_stdin_used@@Base+0x3c7a>
  407a79:	xor    ecx,ecx
  407a7b:	xor    r8d,r8d
  407a7e:	xor    r9d,r9d
  407a81:	mov    rdi,r15
  407a84:	mov    rdx,r14
  407a87:	call   406240 <test_json@@Base>
  407a8c:	mov    ebp,eax
  407a8e:	or     ebp,ebx
  407a90:	mov    DWORD PTR [rsp],0x2ee
  407a97:	lea    rsi,[rip+0x3121d]        # 438cbb <_IO_stdin_used@@Base+0x3cbb>
  407a9e:	xor    ecx,ecx
  407aa0:	xor    r8d,r8d
  407aa3:	xor    r9d,r9d
  407aa6:	mov    rdi,r15
  407aa9:	mov    rdx,r14
  407aac:	call   406240 <test_json@@Base>
  407ab1:	mov    ebx,eax
  407ab3:	or     ebx,ebp
  407ab5:	mov    DWORD PTR [rsp],0x2fe
  407abc:	lea    rsi,[rip+0x31295]        # 438d58 <_IO_stdin_used@@Base+0x3d58>
  407ac3:	lea    rdx,[rip+0x312b5]        # 438d7f <_IO_stdin_used@@Base+0x3d7f>
  407aca:	xor    ecx,ecx
  407acc:	xor    r8d,r8d
  407acf:	xor    r9d,r9d
  407ad2:	mov    rdi,r15
  407ad5:	call   406240 <test_json@@Base>
  407ada:	mov    ebp,eax
  407adc:	or     ebp,ebx
  407ade:	mov    DWORD PTR [rsp],0x302
  407ae5:	lea    rsi,[rip+0x312b5]        # 438da1 <_IO_stdin_used@@Base+0x3da1>
  407aec:	lea    rdx,[rip+0x312dd]        # 438dd0 <_IO_stdin_used@@Base+0x3dd0>
  407af3:	xor    ecx,ecx
  407af5:	xor    r8d,r8d
  407af8:	xor    r9d,r9d
  407afb:	mov    rdi,r15
  407afe:	call   406240 <test_json@@Base>
  407b03:	mov    ebx,eax
  407b05:	or     ebx,ebp
  407b07:	mov    DWORD PTR [rsp],0x308
  407b0e:	lea    rsi,[rip+0x312e5]        # 438dfa <_IO_stdin_used@@Base+0x3dfa>
  407b15:	lea    rdx,[rip+0x31359]        # 438e75 <_IO_stdin_used@@Base+0x3e75>
  407b1c:	xor    ecx,ecx
  407b1e:	xor    r8d,r8d
  407b21:	xor    r9d,r9d
  407b24:	mov    rdi,r15
  407b27:	call   406240 <test_json@@Base>
  407b2c:	mov    ebp,eax
  407b2e:	or     ebp,ebx
  407b30:	mov    DWORD PTR [rsp],0x30d
  407b37:	lea    rsi,[rip+0x313a7]        # 438ee5 <_IO_stdin_used@@Base+0x3ee5>
  407b3e:	xor    ecx,ecx
  407b40:	xor    r8d,r8d
  407b43:	xor    r9d,r9d
  407b46:	mov    rdi,r15
  407b49:	mov    rdx,r13
  407b4c:	call   406240 <test_json@@Base>
  407b51:	mov    r13d,eax
  407b54:	or     r13d,ebp
  407b57:	or     r13d,DWORD PTR [rsp+0x14]
  407b5c:	mov    DWORD PTR [rsp],0x312
  407b63:	lea    rsi,[rip+0x313f3]        # 438f5d <_IO_stdin_used@@Base+0x3f5d>
  407b6a:	lea    rdx,[rip+0x31466]        # 438fd7 <_IO_stdin_used@@Base+0x3fd7>
  407b71:	xor    ecx,ecx
  407b73:	xor    r8d,r8d
  407b76:	xor    r9d,r9d
  407b79:	mov    rdi,r15
  407b7c:	call   406240 <test_json@@Base>
  407b81:	mov    r14d,eax
  407b84:	mov    DWORD PTR [rsp],0x317
  407b8b:	lea    rsi,[rip+0x314b4]        # 439046 <_IO_stdin_used@@Base+0x4046>
  407b92:	lea    rdx,[rip+0x31538]        # 4390d1 <_IO_stdin_used@@Base+0x40d1>
  407b99:	xor    ecx,ecx
  407b9b:	xor    r8d,r8d
  407b9e:	xor    r9d,r9d
  407ba1:	mov    rdi,r15
  407ba4:	call   406240 <test_json@@Base>
  407ba9:	mov    ebp,eax
  407bab:	or     ebp,r14d
  407bae:	mov    DWORD PTR [rsp],0x31c
  407bb5:	lea    rsi,[rip+0x31593]        # 43914f <_IO_stdin_used@@Base+0x414f>
  407bbc:	lea    rdx,[rip+0x31607]        # 4391ca <_IO_stdin_used@@Base+0x41ca>
  407bc3:	xor    ecx,ecx
  407bc5:	xor    r8d,r8d
  407bc8:	xor    r9d,r9d
  407bcb:	mov    rdi,r15
  407bce:	call   406240 <test_json@@Base>
  407bd3:	mov    ebx,eax
  407bd5:	or     ebx,ebp
  407bd7:	mov    DWORD PTR [rsp],0x321
  407bde:	lea    rsi,[rip+0x31655]        # 43923a <_IO_stdin_used@@Base+0x423a>
  407be5:	lea    rdx,[rip+0x316d8]        # 4392c4 <_IO_stdin_used@@Base+0x42c4>
  407bec:	xor    ecx,ecx
  407bee:	xor    r8d,r8d
  407bf1:	xor    r9d,r9d
  407bf4:	mov    rdi,r15
  407bf7:	call   406240 <test_json@@Base>
  407bfc:	mov    ebp,eax
  407bfe:	or     ebp,ebx
  407c00:	or     ebp,r13d
  407c03:	mov    DWORD PTR [rsp],0x326
  407c0a:	lea    rsi,[rip+0x31732]        # 439343 <_IO_stdin_used@@Base+0x4343>
  407c11:	lea    rdx,[rip+0x317ba]        # 4393d2 <_IO_stdin_used@@Base+0x43d2>
  407c18:	xor    ecx,ecx
  407c1a:	xor    r8d,r8d
  407c1d:	xor    r9d,r9d
  407c20:	mov    rdi,r15
  407c23:	call   406240 <test_json@@Base>
  407c28:	xor    ecx,ecx
  407c2a:	or     eax,ebp
  407c2c:	setne  cl
  407c2f:	neg    ecx
  407c31:	mov    eax,ecx
  407c33:	add    rsp,0x18
  407c37:	pop    rbx
  407c38:	pop    r12
  407c3a:	pop    r13
  407c3c:	pop    r14
  407c3e:	pop    r15
  407c40:	pop    rbp
  407c41:	ret    
  407c42:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407c4c:	nop    DWORD PTR [rax+0x0]
  407c50:	push   rbp
  407c51:	push   r15
  407c53:	push   r14
  407c55:	push   r13
  407c57:	push   r12
  407c59:	push   rbx
  407c5a:	sub    rsp,0x68
  407c5e:	mov    rbp,rcx
  407c61:	mov    r13,rdx
  407c64:	mov    r12,rsi
  407c67:	mov    r15,rdi
  407c6a:	mov    DWORD PTR [rcx],0x0
  407c70:	mov    rdi,QWORD PTR [rdi]
  407c73:	mov    esi,0x24
  407c78:	call   420ba0 <flatcc_builder_start_table@@Base>
  407c7d:	test   eax,eax
  407c7f:	je     407ca9 <main@@Base+0xbd9>
  407c81:	mov    ecx,0x21
  407c86:	mov    rdi,r15
  407c89:	mov    rsi,r12
  407c8c:	mov    rdx,r13
  407c8f:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  407c94:	mov    r12,rax
  407c97:	mov    rax,r12
  407c9a:	add    rsp,0x68
  407c9e:	pop    rbx
  407c9f:	pop    r12
  407ca1:	pop    r13
  407ca3:	pop    r14
  407ca5:	pop    r15
  407ca7:	pop    rbp
  407ca8:	ret    
  407ca9:	lea    r8,[rsp+0x58]
  407cae:	mov    ecx,0x1
  407cb3:	mov    rdi,r15
  407cb6:	mov    rsi,r12
  407cb9:	mov    rdx,r13
  407cbc:	call   427ae0 <flatcc_json_parser_prepare_unions@@Base>
  407cc1:	cmp    rax,r13
  407cc4:	je     407c81 <main@@Base+0xbb1>
  407cc6:	cmp    r12,r13
  407cc9:	je     407d03 <main@@Base+0xc33>
  407ccb:	cmp    BYTE PTR [r12],0x7b
  407cd0:	jne    407d03 <main@@Base+0xc33>
  407cd2:	lea    rax,[r12+0x1]
  407cd7:	mov    rcx,r13
  407cda:	sub    rcx,rax
  407cdd:	cmp    rcx,0x2
  407ce1:	jl     407d69 <main@@Base+0xc99>
  407ce7:	cmp    BYTE PTR [rax],0x20
  407cea:	jg     407d77 <main@@Base+0xca7>
  407cf0:	jne    407d69 <main@@Base+0xc99>
  407cf2:	cmp    BYTE PTR [r12+0x2],0x20
  407cf8:	jle    407d69 <main@@Base+0xc99>
  407cfa:	add    r12,0x2
  407cfe:	mov    rax,r12
  407d01:	jmp    407d77 <main@@Base+0xca7>
  407d03:	mov    ecx,0x15
  407d08:	mov    rdi,r15
  407d0b:	mov    rsi,r12
  407d0e:	mov    rdx,r13
  407d11:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  407d16:	mov    r12,rax
  407d19:	lea    rbx,[r15+0x20]
  407d1d:	cmp    DWORD PTR [rbx],0x0
  407d20:	jne    407c81 <main@@Base+0xbb1>
  407d26:	mov    rdi,QWORD PTR [r15]
  407d29:	mov    esi,0x3
  407d2e:	call   421470 <flatcc_builder_check_required_field@@Base>
  407d33:	test   eax,eax
  407d35:	je     407dbc <main@@Base+0xcec>
  407d3b:	mov    rcx,QWORD PTR [rsp+0x58]
  407d40:	mov    rdi,r15
  407d43:	mov    rsi,r12
  407d46:	mov    rdx,r13
  407d49:	call   427b60 <flatcc_json_parser_finalize_unions@@Base>
  407d4e:	mov    r12,rax
  407d51:	mov    rdi,QWORD PTR [r15]
  407d54:	call   4215b0 <flatcc_builder_end_table@@Base>
  407d59:	mov    DWORD PTR [rbp+0x0],eax
  407d5c:	test   eax,eax
  407d5e:	jne    407c97 <main@@Base+0xbc7>
  407d64:	jmp    407c81 <main@@Base+0xbb1>
  407d69:	mov    rdi,r15
  407d6c:	mov    rsi,rax
  407d6f:	mov    rdx,r13
  407d72:	call   425750 <flatcc_json_parser_space_ext@@Base>
  407d77:	mov    rsi,r13
  407d7a:	cmp    rax,r13
  407d7d:	je     407dda <main@@Base+0xd0a>
  407d7f:	cmp    BYTE PTR [rax],0x7d
  407d82:	jne    407dd7 <main@@Base+0xd07>
  407d84:	lea    r12,[rax+0x1]
  407d88:	mov    rcx,r13
  407d8b:	sub    rcx,r12
  407d8e:	cmp    rcx,0x2
  407d92:	jl     411c31 <main@@Base+0xab61>
  407d98:	cmp    BYTE PTR [r12],0x20
  407d9d:	jg     407d19 <main@@Base+0xc49>
  407da3:	jne    411c31 <main@@Base+0xab61>
  407da9:	cmp    BYTE PTR [rax+0x2],0x20
  407dad:	jle    411c31 <main@@Base+0xab61>
  407db3:	add    rax,0x2
  407db7:	jmp    407d16 <main@@Base+0xc46>
  407dbc:	mov    ecx,0x1d
  407dc1:	mov    rdi,r15
  407dc4:	mov    rsi,r12
  407dc7:	mov    rdx,r13
  407dca:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  407dcf:	mov    r12,rax
  407dd2:	jmp    407c81 <main@@Base+0xbb1>
  407dd7:	mov    rsi,rax
  407dda:	movabs r12,0x7465737400000000
  407de4:	lea    rax,[r15+0x14]
  407de8:	mov    QWORD PTR [rsp+0x28],rax
  407ded:	lea    rax,[r15+0x20]
  407df1:	mov    QWORD PTR [rsp+0x48],rax
  407df6:	lea    rax,[r12+0x61727261]
  407dfe:	mov    QWORD PTR [rsp+0x60],rax
  407e03:	mov    QWORD PTR [rsp+0x8],r13
  407e08:	mov    QWORD PTR [rsp+0x10],r15
  407e0d:	mov    QWORD PTR [rsp+0x20],rbp
  407e12:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407e1c:	nop    DWORD PTR [rax+0x0]
  407e20:	mov    r14,r13
  407e23:	cmp    rsi,r13
  407e26:	je     407e66 <main@@Base+0xd96>
  407e28:	mov    al,BYTE PTR [rsi]
  407e2a:	cmp    al,0x2e
  407e2c:	je     407e43 <main@@Base+0xd73>
  407e2e:	cmp    al,0x22
  407e30:	jne    407e58 <main@@Base+0xd88>
  407e32:	add    rsi,0x1
  407e36:	mov    rax,QWORD PTR [rsp+0x28]
  407e3b:	mov    DWORD PTR [rax],0x0
  407e41:	jmp    407e63 <main@@Base+0xd93>
  407e43:	mov    ecx,0x5
  407e48:	mov    rdi,r15
  407e4b:	mov    rdx,r13
  407e4e:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  407e53:	mov    r14,rax
  407e56:	jmp    407e66 <main@@Base+0xd96>
  407e58:	mov    rax,QWORD PTR [rsp+0x28]
  407e5d:	mov    DWORD PTR [rax],0x1
  407e63:	mov    r14,rsi
  407e66:	mov    r15,r13
  407e69:	sub    r15,r14
  407e6c:	cmp    r15,0x8
  407e70:	jb     407f27 <main@@Base+0xe57>
  407e76:	movbe  rbx,QWORD PTR [r14]
  407e7b:	cmp    rbx,QWORD PTR [rsp+0x60]
  407e80:	jae    407fbb <main@@Base+0xeeb>
  407e86:	movabs rax,0x6e616d6500000000
  407e90:	cmp    rbx,rax
  407e93:	jae    407ffa <main@@Base+0xf2a>
  407e99:	movabs rax,0x666c657800000000
  407ea3:	cmp    rbx,rax
  407ea6:	jae    4080ec <main@@Base+0x101c>
  407eac:	and    rbx,0xffffffffff000000
  407eb3:	movabs rax,0x636f6c6f72000000
  407ebd:	cmp    rbx,rax
  407ec0:	je     408542 <main@@Base+0x1472>
  407ec6:	movabs rax,0x656e656d79000000
  407ed0:	cmp    rbx,rax
  407ed3:	mov    r13,QWORD PTR [rsp+0x8]
  407ed8:	jne    408250 <main@@Base+0x1180>
  407ede:	mov    rax,r14
  407ee1:	cmp    r15,0x6
  407ee5:	mov    r15,QWORD PTR [rsp+0x10]
  407eea:	jl     40a1c0 <main@@Base+0x30f0>
  407ef0:	mov    rax,QWORD PTR [rsp+0x28]
  407ef5:	cmp    DWORD PTR [rax],0x0
  407ef8:	mov    cl,BYTE PTR [r14+0x5]
  407efc:	je     408f10 <main@@Base+0x1e40>
  407f02:	cmp    cl,0x21
  407f05:	jl     407f13 <main@@Base+0xe43>
  407f07:	mov    rax,r14
  407f0a:	cmp    cl,0x3a
  407f0d:	jne    40a1c0 <main@@Base+0x30f0>
  407f13:	lea    rsi,[r14+0x5]
  407f17:	mov    rax,QWORD PTR [rsp+0x28]
  407f1c:	mov    DWORD PTR [rax],0x0
  407f22:	jmp    408f20 <main@@Base+0x1e50>
  407f27:	mov    eax,r15d
  407f2a:	and    al,0xf
  407f2c:	add    al,0xff
  407f2e:	cmp    al,0x7
  407f30:	ja     408250 <main@@Base+0x1180>
  407f36:	movzx  eax,al
  407f39:	lea    rcx,[rip+0x2d0e0]        # 435020 <_IO_stdin_used@@Base+0x20>
  407f40:	movsxd rsi,DWORD PTR [rcx+rax*4]
  407f44:	add    rsi,rcx
  407f47:	xor    r8d,r8d
  407f4a:	xor    eax,eax
  407f4c:	xor    ecx,ecx
  407f4e:	xor    edx,edx
  407f50:	xor    edi,edi
  407f52:	xor    ebx,ebx
  407f54:	xor    ebp,ebp
  407f56:	jmp    rsi
  407f58:	movsx  r8,BYTE PTR [r14+0x7]
  407f5d:	movsx  rax,BYTE PTR [r14+0x6]
  407f62:	shl    rax,0x8
  407f66:	or     rax,r8
  407f69:	movsx  rcx,BYTE PTR [r14+0x5]
  407f6e:	shl    rcx,0x10
  407f72:	or     rcx,rax
  407f75:	movsx  rdx,BYTE PTR [r14+0x4]
  407f7a:	shl    rdx,0x18
  407f7e:	or     rdx,rcx
  407f81:	movsx  rdi,BYTE PTR [r14+0x3]
  407f86:	shl    rdi,0x20
  407f8a:	or     rdi,rdx
  407f8d:	movsx  rbx,BYTE PTR [r14+0x2]
  407f92:	shl    rbx,0x28
  407f96:	or     rbx,rdi
  407f99:	movsx  rbp,BYTE PTR [r14+0x1]
  407f9e:	shl    rbp,0x30
  407fa2:	or     rbp,rbx
  407fa5:	movzx  ebx,BYTE PTR [r14]
  407fa9:	shl    rbx,0x38
  407fad:	or     rbx,rbp
  407fb0:	cmp    rbx,QWORD PTR [rsp+0x60]
  407fb5:	jb     407e86 <main@@Base+0xdb6>
  407fbb:	lea    rax,[r12+0x66330000]
  407fc3:	cmp    rbx,rax
  407fc6:	jae    408084 <main@@Base+0xfb4>
  407fcc:	cmp    rbx,QWORD PTR [rsp+0x60]
  407fd1:	jne    40816b <main@@Base+0x109b>
  407fd7:	lea    r15,[r14+0x8]
  407fdb:	mov    r13,QWORD PTR [rsp+0x8]
  407fe0:	mov    rax,r13
  407fe3:	sub    rax,r15
  407fe6:	cmp    rax,0x8
  407fea:	jb     408260 <main@@Base+0x1190>
  407ff0:	movbe  rcx,QWORD PTR [r15]
  407ff5:	jmp    4082fb <main@@Base+0x122b>
  407ffa:	cmp    rbx,r12
  407ffd:	jae    4081c5 <main@@Base+0x10f5>
  408003:	movabs rax,0x706172656e745f6e
  40800d:	cmp    rbx,rax
  408010:	jae    408370 <main@@Base+0x12a0>
  408016:	movabs rax,0xffffffff00000000
  408020:	and    rbx,rax
  408023:	movabs rax,0x6e616d6500000000
  40802d:	cmp    rbx,rax
  408030:	jne    40b24a <main@@Base+0x417a>
  408036:	mov    rax,r14
  408039:	cmp    r15,0x5
  40803d:	mov    r15,QWORD PTR [rsp+0x10]
  408042:	mov    r13,QWORD PTR [rsp+0x8]
  408047:	jl     40a685 <main@@Base+0x35b5>
  40804d:	mov    rax,QWORD PTR [rsp+0x28]
  408052:	cmp    DWORD PTR [rax],0x0
  408055:	mov    cl,BYTE PTR [r14+0x4]
  408059:	je     409508 <main@@Base+0x2438>
  40805f:	cmp    cl,0x21
  408062:	jl     408070 <main@@Base+0xfa0>
  408064:	mov    rax,r14
  408067:	cmp    cl,0x3a
  40806a:	jne    40a685 <main@@Base+0x35b5>
  408070:	lea    rsi,[r14+0x4]
  408074:	mov    rax,QWORD PTR [rsp+0x28]
  408079:	mov    DWORD PTR [rax],0x0
  40807f:	jmp    409518 <main@@Base+0x2448>
  408084:	lea    rcx,[r12+0x68617368]
  40808c:	cmp    rbx,rcx
  40808f:	jae    408227 <main@@Base+0x1157>
  408095:	and    rbx,0xffffffffffff0000
  40809c:	cmp    rbx,rax
  40809f:	jne    40b24a <main@@Base+0x417a>
  4080a5:	mov    rbx,r14
  4080a8:	cmp    r15,0x7
  4080ac:	mov    r15,QWORD PTR [rsp+0x10]
  4080b1:	jl     409ae6 <main@@Base+0x2a16>
  4080b7:	mov    rax,QWORD PTR [rsp+0x28]
  4080bc:	cmp    DWORD PTR [rax],0x0
  4080bf:	mov    al,BYTE PTR [r14+0x6]
  4080c3:	je     408a59 <main@@Base+0x1989>
  4080c9:	cmp    al,0x21
  4080cb:	jl     4080d8 <main@@Base+0x1008>
  4080cd:	mov    rbx,r14
  4080d0:	cmp    al,0x3a
  4080d2:	jne    409ae6 <main@@Base+0x2a16>
  4080d8:	lea    rsi,[r14+0x6]
  4080dc:	mov    rax,QWORD PTR [rsp+0x28]
  4080e1:	mov    DWORD PTR [rax],0x0
  4080e7:	jmp    408a68 <main@@Base+0x1998>
  4080ec:	mov    rax,rbx
  4080ef:	shr    rax,0x34
  4080f3:	cmp    rax,0x686
  4080f9:	ja     40839e <main@@Base+0x12ce>
  4080ff:	movabs rax,0xffffffff00000000
  408109:	and    rbx,rax
  40810c:	movabs rax,0x666c657800000000
  408116:	cmp    rbx,rax
  408119:	jne    40b24a <main@@Base+0x417a>
  40811f:	mov    r12,r14
  408122:	cmp    r15,0x5
  408126:	mov    r15,QWORD PTR [rsp+0x10]
  40812b:	mov    r13,QWORD PTR [rsp+0x8]
  408130:	jl     40a6e1 <main@@Base+0x3611>
  408136:	mov    rax,QWORD PTR [rsp+0x28]
  40813b:	cmp    DWORD PTR [rax],0x0
  40813e:	mov    al,BYTE PTR [r14+0x4]
  408142:	je     409553 <main@@Base+0x2483>
  408148:	cmp    al,0x21
  40814a:	jl     408157 <main@@Base+0x1087>
  40814c:	mov    r12,r14
  40814f:	cmp    al,0x3a
  408151:	jne    40a6e1 <main@@Base+0x3611>
  408157:	lea    rsi,[r14+0x4]
  40815b:	mov    rax,QWORD PTR [rsp+0x28]
  408160:	mov    DWORD PTR [rax],0x0
  408166:	jmp    409562 <main@@Base+0x2492>
  40816b:	lea    rcx,[r12+0x656d7074]
  408173:	cmp    rbx,rcx
  408176:	jae    408418 <main@@Base+0x1348>
  40817c:	movabs rax,0x74657374626f6f6c
  408186:	cmp    rbx,rax
  408189:	je     4087ef <main@@Base+0x171f>
  40818f:	movabs rax,0x7465737462617365
  408199:	cmp    rbx,rax
  40819c:	jne    40b24a <main@@Base+0x417a>
  4081a2:	lea    r15,[r14+0x8]
  4081a6:	mov    r13,QWORD PTR [rsp+0x8]
  4081ab:	mov    rax,r13
  4081ae:	sub    rax,r15
  4081b1:	cmp    rax,0x8
  4081b5:	jb     408b48 <main@@Base+0x1a78>
  4081bb:	movbe  rcx,QWORD PTR [r15]
  4081c0:	jmp    408bd9 <main@@Base+0x1b09>
  4081c5:	mov    rdx,r12
  4081c8:	mov    r12,rbx
  4081cb:	and    r12,0xffffffffff000000
  4081d2:	lea    rax,[rdx+0x34000000]
  4081d9:	cmp    r12,rax
  4081dc:	jne    408455 <main@@Base+0x1385>
  4081e2:	mov    r12,r14
  4081e5:	cmp    r15,0x6
  4081e9:	jl     409b9c <main@@Base+0x2acc>
  4081ef:	mov    rax,QWORD PTR [rsp+0x28]
  4081f4:	cmp    DWORD PTR [rax],0x0
  4081f7:	mov    al,BYTE PTR [r14+0x5]
  4081fb:	je     408a94 <main@@Base+0x19c4>
  408201:	cmp    al,0x21
  408203:	jl     408210 <main@@Base+0x1140>
  408205:	mov    r12,r14
  408208:	cmp    al,0x3a
  40820a:	jne    409b9c <main@@Base+0x2acc>
  408210:	mov    r15,r14
  408213:	lea    rsi,[r14+0x5]
  408217:	mov    rax,QWORD PTR [rsp+0x28]
  40821c:	mov    DWORD PTR [rax],0x0
  408222:	jmp    408aa6 <main@@Base+0x19d6>
  408227:	jne    4084b2 <main@@Base+0x13e2>
  40822d:	lea    r15,[r14+0x8]
  408231:	mov    r13,QWORD PTR [rsp+0x8]
  408236:	mov    rax,r13
  408239:	sub    rax,r15
  40823c:	cmp    rax,0x8
  408240:	jb     408589 <main@@Base+0x14b9>
  408246:	movbe  rcx,QWORD PTR [r15]
  40824b:	jmp    40861a <main@@Base+0x154a>
  408250:	mov    r15,QWORD PTR [rsp+0x10]
  408255:	mov    rdi,r15
  408258:	mov    rsi,r14
  40825b:	jmp    40ce1e <main@@Base+0x5d4e>
  408260:	mov    ecx,eax
  408262:	and    cl,0xf
  408265:	add    cl,0xff
  408268:	cmp    cl,0x7
  40826b:	ja     40f863 <main@@Base+0x8793>
  408271:	movzx  ecx,cl
  408274:	lea    rdx,[rip+0x2cf65]        # 4351e0 <_IO_stdin_used@@Base+0x1e0>
  40827b:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  40827f:	add    rcx,rdx
  408282:	xor    r8d,r8d
  408285:	xor    r9d,r9d
  408288:	xor    edx,edx
  40828a:	xor    esi,esi
  40828c:	xor    ebx,ebx
  40828e:	xor    ebp,ebp
  408290:	xor    edi,edi
  408292:	jmp    rcx
  408294:	movsx  r8,BYTE PTR [r14+0xf]
  408299:	movsx  r9,BYTE PTR [r14+0xe]
  40829e:	shl    r9,0x8
  4082a2:	or     r9,r8
  4082a5:	movsx  rdx,BYTE PTR [r14+0xd]
  4082aa:	shl    rdx,0x10
  4082ae:	or     rdx,r9
  4082b1:	movsx  rsi,BYTE PTR [r14+0xc]
  4082b6:	shl    rsi,0x18
  4082ba:	or     rsi,rdx
  4082bd:	movsx  rbx,BYTE PTR [r14+0xb]
  4082c2:	shl    rbx,0x20
  4082c6:	or     rbx,rsi
  4082c9:	movsx  rbp,BYTE PTR [r14+0xa]
  4082ce:	shl    rbp,0x28
  4082d2:	or     rbp,rbx
  4082d5:	movsx  rdi,BYTE PTR [r14+0x9]
  4082da:	shl    rdi,0x30
  4082de:	or     rdi,rbp
  4082e1:	movzx  ecx,BYTE PTR [r15]
  4082e5:	shl    rcx,0x38
  4082e9:	or     rcx,rdi
  4082ec:	mov    r13,QWORD PTR [rsp+0x8]
  4082f1:	movabs r12,0x7465737400000000
  4082fb:	movabs rdx,0x796f66737472696d
  408305:	cmp    rcx,rdx
  408308:	ja     4084fe <main@@Base+0x142e>
  40830e:	movabs rdx,0x796f66736f727465
  408318:	cmp    rcx,rdx
  40831b:	je     40883b <main@@Base+0x176b>
  408321:	movabs rdx,0x796f66626f6f6c73
  40832b:	cmp    rcx,rdx
  40832e:	jne    40f863 <main@@Base+0x8793>
  408334:	cmp    rax,0x9
  408338:	jl     40f863 <main@@Base+0x8793>
  40833e:	mov    rax,QWORD PTR [rsp+0x28]
  408343:	cmp    DWORD PTR [rax],0x0
  408346:	mov    al,BYTE PTR [r14+0x10]
  40834a:	je     4097d4 <main@@Base+0x2704>
  408350:	cmp    al,0x21
  408352:	jl     40835c <main@@Base+0x128c>
  408354:	cmp    al,0x3a
  408356:	jne    40f863 <main@@Base+0x8793>
  40835c:	add    r14,0x10
  408360:	mov    rax,QWORD PTR [rsp+0x28]
  408365:	mov    DWORD PTR [rax],0x0
  40836b:	jmp    4097e0 <main@@Base+0x2710>
  408370:	jne    40867c <main@@Base+0x15ac>
  408376:	lea    rsi,[r14+0x8]
  40837a:	mov    r13,QWORD PTR [rsp+0x8]
  40837f:	mov    rax,r13
  408382:	sub    rax,rsi
  408385:	cmp    rax,0x8
  408389:	jb     408877 <main@@Base+0x17a7>
  40838f:	movbe  rax,QWORD PTR [rsi]
  408394:	mov    r15,QWORD PTR [rsp+0x10]
  408399:	jmp    408907 <main@@Base+0x1837>
  40839e:	movabs rax,0x696e76656e746f72
  4083a8:	cmp    rbx,rax
  4083ab:	jae    4086d9 <main@@Base+0x1609>
  4083b1:	movabs rax,0xffff000000000000
  4083bb:	and    rbx,rax
  4083be:	movabs rax,0x6870000000000000
  4083c8:	cmp    rbx,rax
  4083cb:	jne    40b24a <main@@Base+0x417a>
  4083d1:	mov    r12,r14
  4083d4:	cmp    r15,0x3
  4083d8:	mov    r15,QWORD PTR [rsp+0x10]
  4083dd:	jl     40bc37 <main@@Base+0x4b67>
  4083e3:	mov    rax,QWORD PTR [rsp+0x28]
  4083e8:	cmp    DWORD PTR [rax],0x0
  4083eb:	mov    al,BYTE PTR [r14+0x2]
  4083ef:	je     409db0 <main@@Base+0x2ce0>
  4083f5:	cmp    al,0x21
  4083f7:	jl     408404 <main@@Base+0x1334>
  4083f9:	mov    r12,r14
  4083fc:	cmp    al,0x3a
  4083fe:	jne    40bc37 <main@@Base+0x4b67>
  408404:	lea    rsi,[r14+0x2]
  408408:	mov    rax,QWORD PTR [rsp+0x28]
  40840d:	mov    DWORD PTR [rax],0x0
  408413:	jmp    409dbf <main@@Base+0x2cef>
  408418:	lea    rax,[r12+0x66000000]
  408420:	cmp    rbx,rax
  408423:	jae    408702 <main@@Base+0x1632>
  408429:	cmp    rbx,rcx
  40842c:	jne    40b24a <main@@Base+0x417a>
  408432:	lea    r15,[r14+0x8]
  408436:	mov    r13,QWORD PTR [rsp+0x8]
  40843b:	mov    rax,r13
  40843e:	sub    rax,r15
  408441:	cmp    rax,0x8
  408445:	jb     408f5b <main@@Base+0x1e8b>
  40844b:	movbe  rcx,QWORD PTR [r15]
  408450:	jmp    408fec <main@@Base+0x1f1c>
  408455:	mov    rax,rbx
  408458:	movabs rcx,0xffffffff00000000
  408462:	and    rax,rcx
  408465:	cmp    rax,rdx
  408468:	jne    40a3cb <main@@Base+0x32fb>
  40846e:	mov    rax,r14
  408471:	cmp    r15,0x5
  408475:	jl     40a9b3 <main@@Base+0x38e3>
  40847b:	mov    rax,QWORD PTR [rsp+0x28]
  408480:	cmp    DWORD PTR [rax],0x0
  408483:	mov    cl,BYTE PTR [r14+0x4]
  408487:	je     40959d <main@@Base+0x24cd>
  40848d:	cmp    cl,0x21
  408490:	jl     40849e <main@@Base+0x13ce>
  408492:	mov    rax,r14
  408495:	cmp    cl,0x3a
  408498:	jne    40a9b3 <main@@Base+0x38e3>
  40849e:	lea    rsi,[r14+0x4]
  4084a2:	mov    rax,QWORD PTR [rsp+0x28]
  4084a7:	mov    DWORD PTR [rax],0x0
  4084ad:	jmp    4095ad <main@@Base+0x24dd>
  4084b2:	movabs rax,0x766563746f725f6f
  4084bc:	cmp    rbx,rax
  4084bf:	jae    408764 <main@@Base+0x1694>
  4084c5:	lea    rax,[r12+0x6e657374]
  4084cd:	cmp    rbx,rax
  4084d0:	mov    r15,QWORD PTR [rsp+0x10]
  4084d5:	jne    40b24f <main@@Base+0x417f>
  4084db:	lea    rsi,[r14+0x8]
  4084df:	mov    r13,QWORD PTR [rsp+0x8]
  4084e4:	mov    rax,r13
  4084e7:	sub    rax,rsi
  4084ea:	cmp    rax,0x8
  4084ee:	jb     409036 <main@@Base+0x1f66>
  4084f4:	movbe  rax,QWORD PTR [rsi]
  4084f9:	jmp    4090c1 <main@@Base+0x1ff1>
  4084fe:	movabs rax,0x796f667461626c65
  408508:	cmp    rcx,rax
  40850b:	je     408859 <main@@Base+0x1789>
  408511:	movabs rax,0x796f66737472696e
  40851b:	cmp    rcx,rax
  40851e:	jne    40ce13 <main@@Base+0x5d43>
  408524:	lea    r15,[r14+0x10]
  408528:	mov    rax,r13
  40852b:	sub    rax,r15
  40852e:	cmp    rax,0x8
  408532:	jb     408c26 <main@@Base+0x1b56>
  408538:	movbe  rcx,QWORD PTR [r15]
  40853d:	jmp    408cb7 <main@@Base+0x1be7>
  408542:	mov    r12,r14
  408545:	cmp    r15,0x6
  408549:	mov    r15,QWORD PTR [rsp+0x10]
  40854e:	jl     40a20a <main@@Base+0x313a>
  408554:	mov    rax,QWORD PTR [rsp+0x28]
  408559:	cmp    DWORD PTR [rax],0x0
  40855c:	mov    al,BYTE PTR [r14+0x5]
  408560:	je     4090f6 <main@@Base+0x2026>
  408566:	cmp    al,0x21
  408568:	jl     408575 <main@@Base+0x14a5>
  40856a:	mov    r12,r14
  40856d:	cmp    al,0x3a
  40856f:	jne    40a20a <main@@Base+0x313a>
  408575:	lea    rsi,[r14+0x5]
  408579:	mov    rax,QWORD PTR [rsp+0x28]
  40857e:	mov    DWORD PTR [rax],0x0
  408584:	jmp    409105 <main@@Base+0x2035>
  408589:	mov    ecx,eax
  40858b:	and    cl,0xf
  40858e:	add    cl,0xff
  408591:	cmp    cl,0x7
  408594:	ja     40ce13 <main@@Base+0x5d43>
  40859a:	movzx  ecx,cl
  40859d:	lea    rdx,[rip+0x2cb1c]        # 4350c0 <_IO_stdin_used@@Base+0xc0>
  4085a4:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  4085a8:	add    rcx,rdx
  4085ab:	xor    r8d,r8d
  4085ae:	xor    r9d,r9d
  4085b1:	xor    edx,edx
  4085b3:	xor    esi,esi
  4085b5:	xor    ebx,ebx
  4085b7:	xor    ebp,ebp
  4085b9:	xor    edi,edi
  4085bb:	jmp    rcx
  4085bd:	movsx  r8,BYTE PTR [r14+0xf]
  4085c2:	movsx  r9,BYTE PTR [r14+0xe]
  4085c7:	shl    r9,0x8
  4085cb:	or     r9,r8
  4085ce:	movsx  rdx,BYTE PTR [r14+0xd]
  4085d3:	shl    rdx,0x10
  4085d7:	or     rdx,r9
  4085da:	movsx  rsi,BYTE PTR [r14+0xc]
  4085df:	shl    rsi,0x18
  4085e3:	or     rsi,rdx
  4085e6:	movsx  rbx,BYTE PTR [r14+0xb]
  4085eb:	shl    rbx,0x20
  4085ef:	or     rbx,rsi
  4085f2:	movsx  rbp,BYTE PTR [r14+0xa]
  4085f7:	shl    rbp,0x28
  4085fb:	or     rbp,rbx
  4085fe:	movsx  rdi,BYTE PTR [r14+0x9]
  408603:	shl    rdi,0x30
  408607:	or     rdi,rbp
  40860a:	movzx  ecx,BYTE PTR [r15]
  40860e:	shl    rcx,0x38
  408612:	or     rcx,rdi
  408615:	mov    r13,QWORD PTR [rsp+0x8]
  40861a:	movabs rdx,0x7336345f666e7631
  408624:	cmp    rcx,rdx
  408627:	jae    40878d <main@@Base+0x16bd>
  40862d:	movabs rdx,0x7333325f666e7631
  408637:	cmp    rcx,rdx
  40863a:	jne    40ce13 <main@@Base+0x5d43>
  408640:	cmp    rax,0x9
  408644:	jl     40a0a1 <main@@Base+0x2fd1>
  40864a:	mov    rax,QWORD PTR [rsp+0x28]
  40864f:	cmp    DWORD PTR [rax],0x0
  408652:	mov    al,BYTE PTR [r14+0x10]
  408656:	je     409e98 <main@@Base+0x2dc8>
  40865c:	cmp    al,0x21
  40865e:	jl     408668 <main@@Base+0x1598>
  408660:	cmp    al,0x3a
  408662:	jne    40a0a1 <main@@Base+0x2fd1>
  408668:	lea    rsi,[r14+0x10]
  40866c:	mov    rax,QWORD PTR [rsp+0x28]
  408671:	mov    DWORD PTR [rax],0x0
  408677:	jmp    409ea4 <main@@Base+0x2dd4>
  40867c:	shr    rbx,0x28
  408680:	cmp    rbx,0x706f73
  408687:	jne    40b24a <main@@Base+0x417a>
  40868d:	mov    r12,r14
  408690:	cmp    r15,0x4
  408694:	mov    r15,QWORD PTR [rsp+0x10]
  408699:	mov    r13,QWORD PTR [rsp+0x8]
  40869e:	jl     40bd83 <main@@Base+0x4cb3>
  4086a4:	mov    rax,QWORD PTR [rsp+0x28]
  4086a9:	cmp    DWORD PTR [rax],0x0
  4086ac:	mov    al,BYTE PTR [r14+0x3]
  4086b0:	je     409dff <main@@Base+0x2d2f>
  4086b6:	cmp    al,0x21
  4086b8:	jl     4086c5 <main@@Base+0x15f5>
  4086ba:	mov    r12,r14
  4086bd:	cmp    al,0x3a
  4086bf:	jne    40bd83 <main@@Base+0x4cb3>
  4086c5:	lea    rsi,[r14+0x3]
  4086c9:	mov    rax,QWORD PTR [rsp+0x28]
  4086ce:	mov    DWORD PTR [rax],0x0
  4086d4:	jmp    409e0e <main@@Base+0x2d3e>
  4086d9:	jne    408939 <main@@Base+0x1869>
  4086df:	lea    r15,[r14+0x8]
  4086e3:	mov    r13,QWORD PTR [rsp+0x8]
  4086e8:	mov    rax,r13
  4086eb:	sub    rax,r15
  4086ee:	cmp    rax,0x8
  4086f2:	jb     409145 <main@@Base+0x2075>
  4086f8:	movbe  rcx,QWORD PTR [r15]
  4086fd:	jmp    4091d6 <main@@Base+0x2106>
  408702:	mov    rcx,rbx
  408705:	and    rcx,0xffffffffffff0000
  40870c:	lea    rdx,[r12+0x66320000]
  408714:	cmp    rcx,rdx
  408717:	jne    4089a0 <main@@Base+0x18d0>
  40871d:	mov    rbx,r14
  408720:	cmp    r15,0x7
  408724:	mov    r15,QWORD PTR [rsp+0x10]
  408729:	jl     40ca52 <main@@Base+0x5982>
  40872f:	mov    rax,QWORD PTR [rsp+0x28]
  408734:	cmp    DWORD PTR [rax],0x0
  408737:	mov    al,BYTE PTR [r14+0x6]
  40873b:	je     409e49 <main@@Base+0x2d79>
  408741:	cmp    al,0x21
  408743:	jl     408750 <main@@Base+0x1680>
  408745:	mov    rbx,r14
  408748:	cmp    al,0x3a
  40874a:	jne    40ca52 <main@@Base+0x5982>
  408750:	lea    rsi,[r14+0x6]
  408754:	mov    rax,QWORD PTR [rsp+0x28]
  408759:	mov    DWORD PTR [rax],0x0
  40875f:	jmp    409e58 <main@@Base+0x2d88>
  408764:	jne    40b24a <main@@Base+0x417a>
  40876a:	lea    r15,[r14+0x8]
  40876e:	mov    r13,QWORD PTR [rsp+0x8]
  408773:	mov    rax,r13
  408776:	sub    rax,r15
  408779:	cmp    rax,0x8
  40877d:	jb     409220 <main@@Base+0x2150>
  408783:	movbe  rcx,QWORD PTR [r15]
  408788:	jmp    4092b1 <main@@Base+0x21e1>
  40878d:	movabs rdx,0x7533325f666e7630
  408797:	cmp    rcx,rdx
  40879a:	ja     4089f7 <main@@Base+0x1927>
  4087a0:	movabs rdx,0x7336345f666e7631
  4087aa:	cmp    rcx,rdx
  4087ad:	jne    40ce13 <main@@Base+0x5d43>
  4087b3:	cmp    rax,0x9
  4087b7:	jl     40aee8 <main@@Base+0x3e18>
  4087bd:	mov    rax,QWORD PTR [rsp+0x28]
  4087c2:	cmp    DWORD PTR [rax],0x0
  4087c5:	mov    al,BYTE PTR [r14+0x10]
  4087c9:	je     40ac7d <main@@Base+0x3bad>
  4087cf:	cmp    al,0x21
  4087d1:	jl     4087db <main@@Base+0x170b>
  4087d3:	cmp    al,0x3a
  4087d5:	jne    40aee8 <main@@Base+0x3e18>
  4087db:	lea    rsi,[r14+0x10]
  4087df:	mov    rax,QWORD PTR [rsp+0x28]
  4087e4:	mov    DWORD PTR [rax],0x0
  4087ea:	jmp    40ac89 <main@@Base+0x3bb9>
  4087ef:	mov    r12,r14
  4087f2:	cmp    r15,0x9
  4087f6:	mov    r15,QWORD PTR [rsp+0x10]
  4087fb:	mov    r13,QWORD PTR [rsp+0x8]
  408800:	jl     40b5c8 <main@@Base+0x44f8>
  408806:	mov    rax,QWORD PTR [rsp+0x28]
  40880b:	cmp    DWORD PTR [rax],0x0
  40880e:	mov    al,BYTE PTR [r14+0x8]
  408812:	je     409708 <main@@Base+0x2638>
  408818:	cmp    al,0x21
  40881a:	jl     408827 <main@@Base+0x1757>
  40881c:	mov    r12,r14
  40881f:	cmp    al,0x3a
  408821:	jne    40b5c8 <main@@Base+0x44f8>
  408827:	lea    rsi,[r14+0x8]
  40882b:	mov    rax,QWORD PTR [rsp+0x28]
  408830:	mov    DWORD PTR [rax],0x0
  408836:	jmp    409717 <main@@Base+0x2647>
  40883b:	lea    r15,[r14+0x10]
  40883f:	mov    rax,r13
  408842:	sub    rax,r15
  408845:	cmp    rax,0x8
  408849:	jb     408d07 <main@@Base+0x1c37>
  40884f:	movbe  rcx,QWORD PTR [r15]
  408854:	jmp    408d98 <main@@Base+0x1cc8>
  408859:	lea    r15,[r14+0x10]
  40885d:	mov    rax,r13
  408860:	sub    rax,r15
  408863:	cmp    rax,0x8
  408867:	jb     408deb <main@@Base+0x1d1b>
  40886d:	movbe  rcx,QWORD PTR [r15]
  408872:	jmp    408e7c <main@@Base+0x1dac>
  408877:	and    al,0xf
  408879:	add    al,0xff
  40887b:	cmp    al,0x7
  40887d:	mov    r15,QWORD PTR [rsp+0x10]
  408882:	ja     4090ee <main@@Base+0x201e>
  408888:	movzx  eax,al
  40888b:	lea    rcx,[rip+0x2ca2e]        # 4352c0 <_IO_stdin_used@@Base+0x2c0>
  408892:	movsxd rax,DWORD PTR [rcx+rax*4]
  408896:	add    rax,rcx
  408899:	xor    r8d,r8d
  40889c:	xor    r9d,r9d
  40889f:	xor    ecx,ecx
  4088a1:	xor    edx,edx
  4088a3:	xor    ebp,ebp
  4088a5:	xor    ebx,ebx
  4088a7:	xor    edi,edi
  4088a9:	jmp    rax
  4088ab:	movsx  r8,BYTE PTR [r14+0xf]
  4088b0:	movsx  r9,BYTE PTR [r14+0xe]
  4088b5:	shl    r9,0x8
  4088b9:	or     r9,r8
  4088bc:	movsx  rcx,BYTE PTR [r14+0xd]
  4088c1:	shl    rcx,0x10
  4088c5:	or     rcx,r9
  4088c8:	movsx  rdx,BYTE PTR [r14+0xc]
  4088cd:	shl    rdx,0x18
  4088d1:	or     rdx,rcx
  4088d4:	movsx  rbp,BYTE PTR [r14+0xb]
  4088d9:	shl    rbp,0x20
  4088dd:	or     rbp,rdx
  4088e0:	movsx  rbx,BYTE PTR [r14+0xa]
  4088e5:	shl    rbx,0x28
  4088e9:	or     rbx,rbp
  4088ec:	movsx  rdi,BYTE PTR [r14+0x9]
  4088f1:	shl    rdi,0x30
  4088f5:	or     rdi,rbx
  4088f8:	movzx  eax,BYTE PTR [rsi]
  4088fb:	shl    rax,0x38
  4088ff:	or     rax,rdi
  408902:	mov    r13,QWORD PTR [rsp+0x8]
  408907:	movabs rcx,0x616d657370616365
  408911:	cmp    rax,rcx
  408914:	jne    4090ee <main@@Base+0x201e>
  40891a:	lea    r12,[r14+0x10]
  40891e:	mov    rax,r13
  408921:	sub    rax,r12
  408924:	cmp    rax,0x8
  408928:	jb     4092e2 <main@@Base+0x2212>
  40892e:	movbe  rcx,QWORD PTR [r12]
  408934:	jmp    409374 <main@@Base+0x22a4>
  408939:	movabs rax,0xffffffff00000000
  408943:	and    rbx,rax
  408946:	movabs rax,0x6d616e6100000000
  408950:	cmp    rbx,rax
  408953:	jne    40b24a <main@@Base+0x417a>
  408959:	mov    r12,r14
  40895c:	cmp    r15,0x5
  408960:	mov    r15,QWORD PTR [rsp+0x10]
  408965:	jl     40d4ee <main@@Base+0x641e>
  40896b:	mov    rax,QWORD PTR [rsp+0x28]
  408970:	cmp    DWORD PTR [rax],0x0
  408973:	mov    al,BYTE PTR [r14+0x4]
  408977:	je     40abdf <main@@Base+0x3b0f>
  40897d:	cmp    al,0x21
  40897f:	jl     40898c <main@@Base+0x18bc>
  408981:	mov    r12,r14
  408984:	cmp    al,0x3a
  408986:	jne    40d4ee <main@@Base+0x641e>
  40898c:	lea    rsi,[r14+0x4]
  408990:	mov    rax,QWORD PTR [rsp+0x28]
  408995:	mov    DWORD PTR [rax],0x0
  40899b:	jmp    40abee <main@@Base+0x3b1e>
  4089a0:	and    rbx,0xffffffffff000000
  4089a7:	cmp    rbx,rax
  4089aa:	jne    40b24a <main@@Base+0x417a>
  4089b0:	mov    rbx,r14
  4089b3:	cmp    r15,0x6
  4089b7:	mov    r15,QWORD PTR [rsp+0x10]
  4089bc:	jl     40d64f <main@@Base+0x657f>
  4089c2:	mov    rax,QWORD PTR [rsp+0x28]
  4089c7:	cmp    DWORD PTR [rax],0x0
  4089ca:	mov    al,BYTE PTR [r14+0x5]
  4089ce:	je     40ac2e <main@@Base+0x3b5e>
  4089d4:	cmp    al,0x21
  4089d6:	jl     4089e3 <main@@Base+0x1913>
  4089d8:	mov    rbx,r14
  4089db:	cmp    al,0x3a
  4089dd:	jne    40d64f <main@@Base+0x657f>
  4089e3:	lea    rsi,[r14+0x5]
  4089e7:	mov    rax,QWORD PTR [rsp+0x28]
  4089ec:	mov    DWORD PTR [rax],0x0
  4089f2:	jmp    40ac3d <main@@Base+0x3b6d>
  4089f7:	movabs rdx,0x7536345f666e7631
  408a01:	cmp    rcx,rdx
  408a04:	je     4096cc <main@@Base+0x25fc>
  408a0a:	movabs rdx,0x7533325f666e7631
  408a14:	cmp    rcx,rdx
  408a17:	jne    40ce13 <main@@Base+0x5d43>
  408a1d:	cmp    rax,0x9
  408a21:	jl     40b9a3 <main@@Base+0x48d3>
  408a27:	mov    rax,QWORD PTR [rsp+0x28]
  408a2c:	cmp    DWORD PTR [rax],0x0
  408a2f:	mov    al,BYTE PTR [r14+0x10]
  408a33:	je     40b863 <main@@Base+0x4793>
  408a39:	cmp    al,0x21
  408a3b:	jl     408a45 <main@@Base+0x1975>
  408a3d:	cmp    al,0x3a
  408a3f:	jne    40b9a3 <main@@Base+0x48d3>
  408a45:	lea    rsi,[r14+0x10]
  408a49:	mov    rax,QWORD PTR [rsp+0x28]
  408a4e:	mov    DWORD PTR [rax],0x0
  408a54:	jmp    40b86f <main@@Base+0x479f>
  408a59:	mov    rbx,r14
  408a5c:	cmp    al,0x22
  408a5e:	jne    409ae6 <main@@Base+0x2a16>
  408a64:	lea    rsi,[r14+0x7]
  408a68:	mov    rbx,QWORD PTR [rsp+0x8]
  408a6d:	mov    rax,rbx
  408a70:	sub    rax,rsi
  408a73:	cmp    rax,0x2
  408a77:	jl     408ad9 <main@@Base+0x1a09>
  408a79:	cmp    BYTE PTR [rsi],0x20
  408a7c:	jg     408ae7 <main@@Base+0x1a17>
  408a7e:	jne    408ad9 <main@@Base+0x1a09>
  408a80:	cmp    BYTE PTR [rsi+0x1],0x20
  408a84:	jle    408ad9 <main@@Base+0x1a09>
  408a86:	add    rsi,0x1
  408a8a:	cmp    rsi,rbx
  408a8d:	jne    408aec <main@@Base+0x1a1c>
  408a8f:	jmp    408b33 <main@@Base+0x1a63>
  408a94:	mov    r12,r14
  408a97:	cmp    al,0x22
  408a99:	jne    409b9c <main@@Base+0x2acc>
  408a9f:	mov    r15,r14
  408aa2:	lea    rsi,[r14+0x6]
  408aa6:	mov    rax,QWORD PTR [rsp+0x8]
  408aab:	sub    rax,rsi
  408aae:	cmp    rax,0x2
  408ab2:	mov    r14,QWORD PTR [rsp+0x10]
  408ab7:	jl     409763 <main@@Base+0x2693>
  408abd:	cmp    BYTE PTR [rsi],0x20
  408ac0:	jle    409752 <main@@Base+0x2682>
  408ac6:	mov    rbp,QWORD PTR [rsp+0x8]
  408acb:	cmp    rsi,rbp
  408ace:	jne    40977b <main@@Base+0x26ab>
  408ad4:	jmp    4097bd <main@@Base+0x26ed>
  408ad9:	mov    rdi,r15
  408adc:	mov    rdx,rbx
  408adf:	call   425750 <flatcc_json_parser_space_ext@@Base>
  408ae4:	mov    rsi,rax
  408ae7:	cmp    rsi,rbx
  408aea:	je     408b33 <main@@Base+0x1a63>
  408aec:	cmp    BYTE PTR [rsi],0x3a
  408aef:	jne    408b33 <main@@Base+0x1a63>
  408af1:	mov    rax,rbx
  408af4:	lea    rbx,[rsi+0x1]
  408af8:	sub    rax,rbx
  408afb:	cmp    rax,0x2
  408aff:	jl     409ad3 <main@@Base+0x2a03>
  408b05:	cmp    BYTE PTR [rbx],0x20
  408b08:	jg     409ae6 <main@@Base+0x2a16>
  408b0e:	jne    409ad3 <main@@Base+0x2a03>
  408b14:	cmp    BYTE PTR [rsi+0x2],0x20
  408b18:	jle    409ad3 <main@@Base+0x2a03>
  408b1e:	add    rsi,0x2
  408b22:	mov    rbx,rsi
  408b25:	cmp    r14,rbx
  408b28:	jne    409aef <main@@Base+0x2a1f>
  408b2e:	jmp    40b24f <main@@Base+0x417f>
  408b33:	mov    ecx,0x4
  408b38:	mov    rdi,r15
  408b3b:	mov    rdx,rbx
  408b3e:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  408b43:	jmp    409ae3 <main@@Base+0x2a13>
  408b48:	mov    ecx,eax
  408b4a:	and    cl,0xf
  408b4d:	add    cl,0xff
  408b50:	cmp    cl,0x7
  408b53:	ja     40ce13 <main@@Base+0x5d43>
  408b59:	movzx  ecx,cl
  408b5c:	lea    rdx,[rip+0x2c63d]        # 4351a0 <_IO_stdin_used@@Base+0x1a0>
  408b63:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  408b67:	add    rcx,rdx
  408b6a:	xor    r8d,r8d
  408b6d:	xor    r9d,r9d
  408b70:	xor    edx,edx
  408b72:	xor    esi,esi
  408b74:	xor    ebx,ebx
  408b76:	xor    edi,edi
  408b78:	xor    ebp,ebp
  408b7a:	jmp    rcx
  408b7c:	movsx  r8,BYTE PTR [r14+0xf]
  408b81:	movsx  r9,BYTE PTR [r14+0xe]
  408b86:	shl    r9,0x8
  408b8a:	or     r9,r8
  408b8d:	movsx  rdx,BYTE PTR [r14+0xd]
  408b92:	shl    rdx,0x10
  408b96:	or     rdx,r9
  408b99:	movsx  rsi,BYTE PTR [r14+0xc]
  408b9e:	shl    rsi,0x18
  408ba2:	or     rsi,rdx
  408ba5:	movsx  rbx,BYTE PTR [r14+0xb]
  408baa:	shl    rbx,0x20
  408bae:	or     rbx,rsi
  408bb1:	movsx  rdi,BYTE PTR [r14+0xa]
  408bb6:	shl    rdi,0x28
  408bba:	or     rdi,rbx
  408bbd:	movsx  rbp,BYTE PTR [r14+0x9]
  408bc2:	shl    rbp,0x30
  408bc6:	or     rbp,rdi
  408bc9:	movzx  ecx,BYTE PTR [r15]
  408bcd:	shl    rcx,0x38
  408bd1:	or     rcx,rbp
  408bd4:	mov    r13,QWORD PTR [rsp+0x8]
  408bd9:	shr    rcx,0x30
  408bdd:	cmp    rcx,0x3634
  408be4:	jne    40ce13 <main@@Base+0x5d43>
  408bea:	cmp    rax,0x3
  408bee:	jl     40f863 <main@@Base+0x8793>
  408bf4:	mov    rax,QWORD PTR [rsp+0x28]
  408bf9:	cmp    DWORD PTR [rax],0x0
  408bfc:	mov    al,BYTE PTR [r14+0xa]
  408c00:	je     40a4d6 <main@@Base+0x3406>
  408c06:	cmp    al,0x21
  408c08:	jl     408c12 <main@@Base+0x1b42>
  408c0a:	cmp    al,0x3a
  408c0c:	jne    40f863 <main@@Base+0x8793>
  408c12:	add    r14,0xa
  408c16:	mov    rax,QWORD PTR [rsp+0x28]
  408c1b:	mov    DWORD PTR [rax],0x0
  408c21:	jmp    40a4e2 <main@@Base+0x3412>
  408c26:	mov    ecx,eax
  408c28:	and    cl,0xf
  408c2b:	add    cl,0xff
  408c2e:	cmp    cl,0x7
  408c31:	ja     40ce13 <main@@Base+0x5d43>
  408c37:	movzx  ecx,cl
  408c3a:	lea    rdx,[rip+0x2c5df]        # 435220 <_IO_stdin_used@@Base+0x220>
  408c41:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  408c45:	add    rcx,rdx
  408c48:	xor    r8d,r8d
  408c4b:	xor    r9d,r9d
  408c4e:	xor    edx,edx
  408c50:	xor    esi,esi
  408c52:	xor    ebx,ebx
  408c54:	xor    ebp,ebp
  408c56:	xor    edi,edi
  408c58:	jmp    rcx
  408c5a:	movsx  r8,BYTE PTR [r14+0x17]
  408c5f:	movsx  r9,BYTE PTR [r14+0x16]
  408c64:	shl    r9,0x8
  408c68:	or     r9,r8
  408c6b:	movsx  rdx,BYTE PTR [r14+0x15]
  408c70:	shl    rdx,0x10
  408c74:	or     rdx,r9
  408c77:	movsx  rsi,BYTE PTR [r14+0x14]
  408c7c:	shl    rsi,0x18
  408c80:	or     rsi,rdx
  408c83:	movsx  rbx,BYTE PTR [r14+0x13]
  408c88:	shl    rbx,0x20
  408c8c:	or     rbx,rsi
  408c8f:	movsx  rbp,BYTE PTR [r14+0x12]
  408c94:	shl    rbp,0x28
  408c98:	or     rbp,rbx
  408c9b:	movsx  rdi,BYTE PTR [r14+0x11]
  408ca0:	shl    rdi,0x30
  408ca4:	or     rdi,rbp
  408ca7:	movzx  ecx,BYTE PTR [r15]
  408cab:	shl    rcx,0x38
  408caf:	or     rcx,rdi
  408cb2:	mov    r13,QWORD PTR [rsp+0x8]
  408cb7:	mov    rdx,rcx
  408cba:	shr    rdx,0x30
  408cbe:	cmp    rdx,0x6732
  408cc5:	jne    408ec6 <main@@Base+0x1df6>
  408ccb:	cmp    rax,0x3
  408ccf:	jl     40f863 <main@@Base+0x8793>
  408cd5:	mov    rax,QWORD PTR [rsp+0x28]
  408cda:	cmp    DWORD PTR [rax],0x0
  408cdd:	mov    al,BYTE PTR [r14+0x12]
  408ce1:	je     40a51f <main@@Base+0x344f>
  408ce7:	cmp    al,0x21
  408ce9:	jl     408cf3 <main@@Base+0x1c23>
  408ceb:	cmp    al,0x3a
  408ced:	jne    40f863 <main@@Base+0x8793>
  408cf3:	add    r14,0x12
  408cf7:	mov    rax,QWORD PTR [rsp+0x28]
  408cfc:	mov    DWORD PTR [rax],0x0
  408d02:	jmp    40a52b <main@@Base+0x345b>
  408d07:	mov    ecx,eax
  408d09:	and    cl,0xf
  408d0c:	add    cl,0xff
  408d0f:	cmp    cl,0x7
  408d12:	ja     40ce13 <main@@Base+0x5d43>
  408d18:	movzx  ecx,cl
  408d1b:	lea    rdx,[rip+0x2c51e]        # 435240 <_IO_stdin_used@@Base+0x240>
  408d22:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  408d26:	add    rcx,rdx
  408d29:	xor    r8d,r8d
  408d2c:	xor    r9d,r9d
  408d2f:	xor    edx,edx
  408d31:	xor    esi,esi
  408d33:	xor    ebx,ebx
  408d35:	xor    edi,edi
  408d37:	xor    ebp,ebp
  408d39:	jmp    rcx
  408d3b:	movsx  r8,BYTE PTR [r14+0x17]
  408d40:	movsx  r9,BYTE PTR [r14+0x16]
  408d45:	shl    r9,0x8
  408d49:	or     r9,r8
  408d4c:	movsx  rdx,BYTE PTR [r14+0x15]
  408d51:	shl    rdx,0x10
  408d55:	or     rdx,r9
  408d58:	movsx  rsi,BYTE PTR [r14+0x14]
  408d5d:	shl    rsi,0x18
  408d61:	or     rsi,rdx
  408d64:	movsx  rbx,BYTE PTR [r14+0x13]
  408d69:	shl    rbx,0x20
  408d6d:	or     rbx,rsi
  408d70:	movsx  rdi,BYTE PTR [r14+0x12]
  408d75:	shl    rdi,0x28
  408d79:	or     rdi,rbx
  408d7c:	movsx  rbp,BYTE PTR [r14+0x11]
  408d81:	shl    rbp,0x30
  408d85:	or     rbp,rdi
  408d88:	movzx  ecx,BYTE PTR [r15]
  408d8c:	shl    rcx,0x38
  408d90:	or     rcx,rbp
  408d93:	mov    r13,QWORD PTR [rsp+0x8]
  408d98:	shr    rcx,0x8
  408d9c:	movabs rdx,0x64737472756374
  408da6:	cmp    rcx,rdx
  408da9:	jne    40ce13 <main@@Base+0x5d43>
  408daf:	cmp    rax,0x8
  408db3:	jl     40f863 <main@@Base+0x8793>
  408db9:	mov    rax,QWORD PTR [rsp+0x28]
  408dbe:	cmp    DWORD PTR [rax],0x0
  408dc1:	mov    al,BYTE PTR [r14+0x17]
  408dc5:	je     40a568 <main@@Base+0x3498>
  408dcb:	cmp    al,0x21
  408dcd:	jl     408dd7 <main@@Base+0x1d07>
  408dcf:	cmp    al,0x3a
  408dd1:	jne    40f863 <main@@Base+0x8793>
  408dd7:	add    r14,0x17
  408ddb:	mov    rax,QWORD PTR [rsp+0x28]
  408de0:	mov    DWORD PTR [rax],0x0
  408de6:	jmp    40a574 <main@@Base+0x34a4>
  408deb:	mov    ecx,eax
  408ded:	and    cl,0xf
  408df0:	add    cl,0xff
  408df3:	cmp    cl,0x7
  408df6:	ja     40ce13 <main@@Base+0x5d43>
  408dfc:	movzx  ecx,cl
  408dff:	lea    rdx,[rip+0x2c3fa]        # 435200 <_IO_stdin_used@@Base+0x200>
  408e06:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  408e0a:	add    rcx,rdx
  408e0d:	xor    r8d,r8d
  408e10:	xor    r9d,r9d
  408e13:	xor    edx,edx
  408e15:	xor    esi,esi
  408e17:	xor    ebx,ebx
  408e19:	xor    edi,edi
  408e1b:	xor    ebp,ebp
  408e1d:	jmp    rcx
  408e1f:	movsx  r8,BYTE PTR [r14+0x17]
  408e24:	movsx  r9,BYTE PTR [r14+0x16]
  408e29:	shl    r9,0x8
  408e2d:	or     r9,r8
  408e30:	movsx  rdx,BYTE PTR [r14+0x15]
  408e35:	shl    rdx,0x10
  408e39:	or     rdx,r9
  408e3c:	movsx  rsi,BYTE PTR [r14+0x14]
  408e41:	shl    rsi,0x18
  408e45:	or     rsi,rdx
  408e48:	movsx  rbx,BYTE PTR [r14+0x13]
  408e4d:	shl    rbx,0x20
  408e51:	or     rbx,rsi
  408e54:	movsx  rdi,BYTE PTR [r14+0x12]
  408e59:	shl    rdi,0x28
  408e5d:	or     rdi,rbx
  408e60:	movsx  rbp,BYTE PTR [r14+0x11]
  408e65:	shl    rbp,0x30
  408e69:	or     rbp,rdi
  408e6c:	movzx  ecx,BYTE PTR [r15]
  408e70:	shl    rcx,0x38
  408e74:	or     rcx,rbp
  408e77:	mov    r13,QWORD PTR [rsp+0x8]
  408e7c:	shr    rcx,0x38
  408e80:	cmp    rcx,0x73
  408e84:	jne    40ce13 <main@@Base+0x5d43>
  408e8a:	cmp    rax,0x2
  408e8e:	jl     40f863 <main@@Base+0x8793>
  408e94:	mov    rax,QWORD PTR [rsp+0x28]
  408e99:	cmp    DWORD PTR [rax],0x0
  408e9c:	mov    al,BYTE PTR [r14+0x11]
  408ea0:	je     40a5b1 <main@@Base+0x34e1>
  408ea6:	cmp    al,0x21
  408ea8:	jl     408eb2 <main@@Base+0x1de2>
  408eaa:	cmp    al,0x3a
  408eac:	jne    40f863 <main@@Base+0x8793>
  408eb2:	add    r14,0x11
  408eb6:	mov    rax,QWORD PTR [rsp+0x28]
  408ebb:	mov    DWORD PTR [rax],0x0
  408ec1:	jmp    40a5bd <main@@Base+0x34ed>
  408ec6:	shr    rcx,0x38
  408eca:	cmp    rcx,0x67
  408ece:	jne    40ce13 <main@@Base+0x5d43>
  408ed4:	cmp    rax,0x2
  408ed8:	jl     40f863 <main@@Base+0x8793>
  408ede:	mov    rax,QWORD PTR [rsp+0x28]
  408ee3:	cmp    DWORD PTR [rax],0x0
  408ee6:	mov    al,BYTE PTR [r14+0x11]
  408eea:	je     40b8fb <main@@Base+0x482b>
  408ef0:	cmp    al,0x21
  408ef2:	jl     408efc <main@@Base+0x1e2c>
  408ef4:	cmp    al,0x3a
  408ef6:	jne    40f863 <main@@Base+0x8793>
  408efc:	add    r14,0x11
  408f00:	mov    rax,QWORD PTR [rsp+0x28]
  408f05:	mov    DWORD PTR [rax],0x0
  408f0b:	jmp    40b907 <main@@Base+0x4837>
  408f10:	mov    rax,r14
  408f13:	cmp    cl,0x22
  408f16:	jne    40a1c0 <main@@Base+0x30f0>
  408f1c:	lea    rsi,[r14+0x6]
  408f20:	mov    rax,r13
  408f23:	sub    rax,rsi
  408f26:	cmp    rax,0x2
  408f2a:	jl     40941a <main@@Base+0x234a>
  408f30:	cmp    BYTE PTR [rsi],0x20
  408f33:	jg     409428 <main@@Base+0x2358>
  408f39:	jne    40941a <main@@Base+0x234a>
  408f3f:	cmp    BYTE PTR [rsi+0x1],0x20
  408f43:	jle    40941a <main@@Base+0x234a>
  408f49:	add    rsi,0x1
  408f4d:	cmp    rsi,r13
  408f50:	jne    409431 <main@@Base+0x2361>
  408f56:	jmp    4094d5 <main@@Base+0x2405>
  408f5b:	mov    ecx,eax
  408f5d:	and    cl,0xf
  408f60:	add    cl,0xff
  408f63:	cmp    cl,0x7
  408f66:	ja     40ce13 <main@@Base+0x5d43>
  408f6c:	movzx  ecx,cl
  408f6f:	lea    rdx,[rip+0x2c1ea]        # 435160 <_IO_stdin_used@@Base+0x160>
  408f76:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  408f7a:	add    rcx,rdx
  408f7d:	xor    r8d,r8d
  408f80:	xor    r9d,r9d
  408f83:	xor    edx,edx
  408f85:	xor    esi,esi
  408f87:	xor    ebx,ebx
  408f89:	xor    edi,edi
  408f8b:	xor    ebp,ebp
  408f8d:	jmp    rcx
  408f8f:	movsx  r8,BYTE PTR [r14+0xf]
  408f94:	movsx  r9,BYTE PTR [r14+0xe]
  408f99:	shl    r9,0x8
  408f9d:	or     r9,r8
  408fa0:	movsx  rdx,BYTE PTR [r14+0xd]
  408fa5:	shl    rdx,0x10
  408fa9:	or     rdx,r9
  408fac:	movsx  rsi,BYTE PTR [r14+0xc]
  408fb1:	shl    rsi,0x18
  408fb5:	or     rsi,rdx
  408fb8:	movsx  rbx,BYTE PTR [r14+0xb]
  408fbd:	shl    rbx,0x20
  408fc1:	or     rbx,rsi
  408fc4:	movsx  rdi,BYTE PTR [r14+0xa]
  408fc9:	shl    rdi,0x28
  408fcd:	or     rdi,rbx
  408fd0:	movsx  rbp,BYTE PTR [r14+0x9]
  408fd5:	shl    rbp,0x30
  408fd9:	or     rbp,rdi
  408fdc:	movzx  ecx,BYTE PTR [r15]
  408fe0:	shl    rcx,0x38
  408fe4:	or     rcx,rbp
  408fe7:	mov    r13,QWORD PTR [rsp+0x8]
  408fec:	shr    rcx,0x38
  408ff0:	cmp    rcx,0x79
  408ff4:	jne    40ce13 <main@@Base+0x5d43>
  408ffa:	cmp    rax,0x2
  408ffe:	jl     40f863 <main@@Base+0x8793>
  409004:	mov    rax,QWORD PTR [rsp+0x28]
  409009:	cmp    DWORD PTR [rax],0x0
  40900c:	mov    al,BYTE PTR [r14+0x9]
  409010:	je     40acc9 <main@@Base+0x3bf9>
  409016:	cmp    al,0x21
  409018:	jl     409022 <main@@Base+0x1f52>
  40901a:	cmp    al,0x3a
  40901c:	jne    40f863 <main@@Base+0x8793>
  409022:	add    r14,0x9
  409026:	mov    rax,QWORD PTR [rsp+0x28]
  40902b:	mov    DWORD PTR [rax],0x0
  409031:	jmp    40acd5 <main@@Base+0x3c05>
  409036:	and    al,0xf
  409038:	add    al,0xff
  40903a:	cmp    al,0x7
  40903c:	ja     4090ee <main@@Base+0x201e>
  409042:	movzx  eax,al
  409045:	lea    rcx,[rip+0x2c034]        # 435080 <_IO_stdin_used@@Base+0x80>
  40904c:	movsxd rax,DWORD PTR [rcx+rax*4]
  409050:	add    rax,rcx
  409053:	xor    r8d,r8d
  409056:	xor    r9d,r9d
  409059:	xor    ecx,ecx
  40905b:	xor    edx,edx
  40905d:	xor    ebp,ebp
  40905f:	xor    ebx,ebx
  409061:	xor    edi,edi
  409063:	jmp    rax
  409065:	movsx  r8,BYTE PTR [r14+0xf]
  40906a:	movsx  r9,BYTE PTR [r14+0xe]
  40906f:	shl    r9,0x8
  409073:	or     r9,r8
  409076:	movsx  rcx,BYTE PTR [r14+0xd]
  40907b:	shl    rcx,0x10
  40907f:	or     rcx,r9
  409082:	movsx  rdx,BYTE PTR [r14+0xc]
  409087:	shl    rdx,0x18
  40908b:	or     rdx,rcx
  40908e:	movsx  rbp,BYTE PTR [r14+0xb]
  409093:	shl    rbp,0x20
  409097:	or     rbp,rdx
  40909a:	movsx  rbx,BYTE PTR [r14+0xa]
  40909f:	shl    rbx,0x28
  4090a3:	or     rbx,rbp
  4090a6:	movsx  rdi,BYTE PTR [r14+0x9]
  4090ab:	shl    rdi,0x30
  4090af:	or     rdi,rbx
  4090b2:	movzx  eax,BYTE PTR [rsi]
  4090b5:	shl    rax,0x38
  4090b9:	or     rax,rdi
  4090bc:	mov    r13,QWORD PTR [rsp+0x8]
  4090c1:	movabs rcx,0x6564666c61746275
  4090cb:	cmp    rax,rcx
  4090ce:	jne    4090ee <main@@Base+0x201e>
  4090d0:	lea    r15,[r14+0x10]
  4090d4:	mov    rax,r13
  4090d7:	sub    rax,r15
  4090da:	cmp    rax,0x8
  4090de:	jb     40981d <main@@Base+0x274d>
  4090e4:	movbe  rcx,QWORD PTR [r15]
  4090e9:	jmp    4098ae <main@@Base+0x27de>
  4090ee:	mov    rdi,r15
  4090f1:	jmp    40ce1e <main@@Base+0x5d4e>
  4090f6:	mov    r12,r14
  4090f9:	cmp    al,0x22
  4090fb:	jne    40a20a <main@@Base+0x313a>
  409101:	lea    rsi,[r14+0x6]
  409105:	mov    rbx,QWORD PTR [rsp+0x8]
  40910a:	mov    rax,rbx
  40910d:	sub    rax,rsi
  409110:	cmp    rax,0x2
  409114:	jl     40947c <main@@Base+0x23ac>
  40911a:	cmp    BYTE PTR [rsi],0x20
  40911d:	jg     40948a <main@@Base+0x23ba>
  409123:	jne    40947c <main@@Base+0x23ac>
  409129:	cmp    BYTE PTR [rsi+0x1],0x20
  40912d:	jle    40947c <main@@Base+0x23ac>
  409133:	add    rsi,0x1
  409137:	cmp    rsi,rbx
  40913a:	jne    40948f <main@@Base+0x23bf>
  409140:	jmp    4094f3 <main@@Base+0x2423>
  409145:	mov    ecx,eax
  409147:	and    cl,0xf
  40914a:	add    cl,0xff
  40914d:	cmp    cl,0x7
  409150:	ja     40ce13 <main@@Base+0x5d43>
  409156:	movzx  ecx,cl
  409159:	lea    rdx,[rip+0x2c1a0]        # 435300 <_IO_stdin_used@@Base+0x300>
  409160:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  409164:	add    rcx,rdx
  409167:	xor    r8d,r8d
  40916a:	xor    r9d,r9d
  40916d:	xor    edx,edx
  40916f:	xor    esi,esi
  409171:	xor    ebx,ebx
  409173:	xor    edi,edi
  409175:	xor    ebp,ebp
  409177:	jmp    rcx
  409179:	movsx  r8,BYTE PTR [r14+0xf]
  40917e:	movsx  r9,BYTE PTR [r14+0xe]
  409183:	shl    r9,0x8
  409187:	or     r9,r8
  40918a:	movsx  rdx,BYTE PTR [r14+0xd]
  40918f:	shl    rdx,0x10
  409193:	or     rdx,r9
  409196:	movsx  rsi,BYTE PTR [r14+0xc]
  40919b:	shl    rsi,0x18
  40919f:	or     rsi,rdx
  4091a2:	movsx  rbx,BYTE PTR [r14+0xb]
  4091a7:	shl    rbx,0x20
  4091ab:	or     rbx,rsi
  4091ae:	movsx  rdi,BYTE PTR [r14+0xa]
  4091b3:	shl    rdi,0x28
  4091b7:	or     rdi,rbx
  4091ba:	movsx  rbp,BYTE PTR [r14+0x9]
  4091bf:	shl    rbp,0x30
  4091c3:	or     rbp,rdi
  4091c6:	movzx  ecx,BYTE PTR [r15]
  4091ca:	shl    rcx,0x38
  4091ce:	or     rcx,rbp
  4091d1:	mov    r13,QWORD PTR [rsp+0x8]
  4091d6:	shr    rcx,0x38
  4091da:	cmp    rcx,0x79
  4091de:	jne    40ce13 <main@@Base+0x5d43>
  4091e4:	cmp    rax,0x2
  4091e8:	jl     40f863 <main@@Base+0x8793>
  4091ee:	mov    rax,QWORD PTR [rsp+0x28]
  4091f3:	cmp    DWORD PTR [rax],0x0
  4091f6:	mov    al,BYTE PTR [r14+0x9]
  4091fa:	je     40ad12 <main@@Base+0x3c42>
  409200:	cmp    al,0x21
  409202:	jl     40920c <main@@Base+0x213c>
  409204:	cmp    al,0x3a
  409206:	jne    40f863 <main@@Base+0x8793>
  40920c:	add    r14,0x9
  409210:	mov    rax,QWORD PTR [rsp+0x28]
  409215:	mov    DWORD PTR [rax],0x0
  40921b:	jmp    40ad1e <main@@Base+0x3c4e>
  409220:	mov    ecx,eax
  409222:	and    cl,0xf
  409225:	add    cl,0xff
  409228:	cmp    cl,0x7
  40922b:	ja     40ce13 <main@@Base+0x5d43>
  409231:	movzx  ecx,cl
  409234:	lea    rdx,[rip+0x2be05]        # 435040 <_IO_stdin_used@@Base+0x40>
  40923b:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  40923f:	add    rcx,rdx
  409242:	xor    r8d,r8d
  409245:	xor    r9d,r9d
  409248:	xor    edx,edx
  40924a:	xor    esi,esi
  40924c:	xor    ebx,ebx
  40924e:	xor    ebp,ebp
  409250:	xor    edi,edi
  409252:	jmp    rcx
  409254:	movsx  r8,BYTE PTR [r14+0xf]
  409259:	movsx  r9,BYTE PTR [r14+0xe]
  40925e:	shl    r9,0x8
  409262:	or     r9,r8
  409265:	movsx  rdx,BYTE PTR [r14+0xd]
  40926a:	shl    rdx,0x10
  40926e:	or     rdx,r9
  409271:	movsx  rsi,BYTE PTR [r14+0xc]
  409276:	shl    rsi,0x18
  40927a:	or     rsi,rdx
  40927d:	movsx  rbx,BYTE PTR [r14+0xb]
  409282:	shl    rbx,0x20
  409286:	or     rbx,rsi
  409289:	movsx  rbp,BYTE PTR [r14+0xa]
  40928e:	shl    rbp,0x28
  409292:	or     rbp,rbx
  409295:	movsx  rdi,BYTE PTR [r14+0x9]
  40929a:	shl    rdi,0x30
  40929e:	or     rdi,rbp
  4092a1:	movzx  ecx,BYTE PTR [r15]
  4092a5:	shl    rcx,0x38
  4092a9:	or     rcx,rdi
  4092ac:	mov    r13,QWORD PTR [rsp+0x8]
  4092b1:	movabs rdx,0x665f646f75626c65
  4092bb:	cmp    rcx,rdx
  4092be:	jne    4093c7 <main@@Base+0x22f7>
  4092c4:	lea    r15,[r14+0x10]
  4092c8:	mov    rax,r13
  4092cb:	sub    rax,r15
  4092ce:	cmp    rax,0x8
  4092d2:	jb     40990a <main@@Base+0x283a>
  4092d8:	movbe  rcx,QWORD PTR [r15]
  4092dd:	jmp    40999b <main@@Base+0x28cb>
  4092e2:	mov    ecx,eax
  4092e4:	and    cl,0xf
  4092e7:	add    cl,0xff
  4092ea:	cmp    cl,0x7
  4092ed:	ja     40b158 <main@@Base+0x4088>
  4092f3:	movzx  ecx,cl
  4092f6:	lea    rdx,[rip+0x2bfe3]        # 4352e0 <_IO_stdin_used@@Base+0x2e0>
  4092fd:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  409301:	add    rcx,rdx
  409304:	xor    r8d,r8d
  409307:	xor    r9d,r9d
  40930a:	xor    edx,edx
  40930c:	xor    esi,esi
  40930e:	xor    ebp,ebp
  409310:	xor    ebx,ebx
  409312:	xor    edi,edi
  409314:	jmp    rcx
  409316:	movsx  r8,BYTE PTR [r14+0x17]
  40931b:	movsx  r9,BYTE PTR [r14+0x16]
  409320:	shl    r9,0x8
  409324:	or     r9,r8
  409327:	movsx  rdx,BYTE PTR [r14+0x15]
  40932c:	shl    rdx,0x10
  409330:	or     rdx,r9
  409333:	movsx  rsi,BYTE PTR [r14+0x14]
  409338:	shl    rsi,0x18
  40933c:	or     rsi,rdx
  40933f:	movsx  rbp,BYTE PTR [r14+0x13]
  409344:	shl    rbp,0x20
  409348:	or     rbp,rsi
  40934b:	movsx  rbx,BYTE PTR [r14+0x12]
  409350:	shl    rbx,0x28
  409354:	or     rbx,rbp
  409357:	movsx  rdi,BYTE PTR [r14+0x11]
  40935c:	shl    rdi,0x30
  409360:	or     rdi,rbx
  409363:	movzx  ecx,BYTE PTR [r12]
  409368:	shl    rcx,0x38
  40936c:	or     rcx,rdi
  40936f:	mov    r13,QWORD PTR [rsp+0x8]
  409374:	shr    rcx,0x18
  409378:	movabs rdx,0x5f74657374
  409382:	cmp    rcx,rdx
  409385:	jne    40b158 <main@@Base+0x4088>
  40938b:	cmp    rax,0x6
  40938f:	jl     40b158 <main@@Base+0x4088>
  409395:	mov    rax,QWORD PTR [rsp+0x28]
  40939a:	cmp    DWORD PTR [rax],0x0
  40939d:	mov    al,BYTE PTR [r14+0x15]
  4093a1:	je     40ae40 <main@@Base+0x3d70>
  4093a7:	cmp    al,0x21
  4093a9:	jl     4093b3 <main@@Base+0x22e3>
  4093ab:	cmp    al,0x3a
  4093ad:	jne    40b158 <main@@Base+0x4088>
  4093b3:	add    r14,0x15
  4093b7:	mov    rax,QWORD PTR [rsp+0x28]
  4093bc:	mov    DWORD PTR [rax],0x0
  4093c2:	jmp    40ae4c <main@@Base+0x3d7c>
  4093c7:	shr    rcx,0x8
  4093cb:	movabs rdx,0x665f6c6f6e6773
  4093d5:	cmp    rcx,rdx
  4093d8:	jne    40ce13 <main@@Base+0x5d43>
  4093de:	cmp    rax,0x8
  4093e2:	jl     40f863 <main@@Base+0x8793>
  4093e8:	mov    rax,QWORD PTR [rsp+0x28]
  4093ed:	cmp    DWORD PTR [rax],0x0
  4093f0:	mov    al,BYTE PTR [r14+0xf]
  4093f4:	je     40cd7c <main@@Base+0x5cac>
  4093fa:	cmp    al,0x21
  4093fc:	jl     409406 <main@@Base+0x2336>
  4093fe:	cmp    al,0x3a
  409400:	jne    40f863 <main@@Base+0x8793>
  409406:	add    r14,0xf
  40940a:	mov    rax,QWORD PTR [rsp+0x28]
  40940f:	mov    DWORD PTR [rax],0x0
  409415:	jmp    40cd88 <main@@Base+0x5cb8>
  40941a:	mov    rdi,r15
  40941d:	mov    rdx,r13
  409420:	call   425750 <flatcc_json_parser_space_ext@@Base>
  409425:	mov    rsi,rax
  409428:	cmp    rsi,r13
  40942b:	je     4094d5 <main@@Base+0x2405>
  409431:	cmp    BYTE PTR [rsi],0x3a
  409434:	jne    4094d5 <main@@Base+0x2405>
  40943a:	lea    rax,[rsi+0x1]
  40943e:	mov    rcx,r13
  409441:	sub    rcx,rax
  409444:	cmp    rcx,0x2
  409448:	jl     40a1b2 <main@@Base+0x30e2>
  40944e:	cmp    BYTE PTR [rax],0x20
  409451:	jg     40a1c0 <main@@Base+0x30f0>
  409457:	jne    40a1b2 <main@@Base+0x30e2>
  40945d:	cmp    BYTE PTR [rsi+0x2],0x20
  409461:	jle    40a1b2 <main@@Base+0x30e2>
  409467:	add    rsi,0x2
  40946b:	mov    rax,rsi
  40946e:	cmp    r14,rax
  409471:	jne    40a1c9 <main@@Base+0x30f9>
  409477:	jmp    408255 <main@@Base+0x1185>
  40947c:	mov    rdi,r15
  40947f:	mov    rdx,rbx
  409482:	call   425750 <flatcc_json_parser_space_ext@@Base>
  409487:	mov    rsi,rax
  40948a:	cmp    rsi,rbx
  40948d:	je     4094f3 <main@@Base+0x2423>
  40948f:	cmp    BYTE PTR [rsi],0x3a
  409492:	jne    4094f3 <main@@Base+0x2423>
  409494:	lea    r12,[rsi+0x1]
  409498:	sub    rbx,r12
  40949b:	cmp    rbx,0x2
  40949f:	jl     40a1f7 <main@@Base+0x3127>
  4094a5:	cmp    BYTE PTR [r12],0x20
  4094aa:	jg     40a20a <main@@Base+0x313a>
  4094b0:	jne    40a1f7 <main@@Base+0x3127>
  4094b6:	cmp    BYTE PTR [rsi+0x2],0x20
  4094ba:	jle    40a1f7 <main@@Base+0x3127>
  4094c0:	add    rsi,0x2
  4094c4:	mov    r12,rsi
  4094c7:	cmp    r14,r12
  4094ca:	jne    40a213 <main@@Base+0x3143>
  4094d0:	jmp    40d553 <main@@Base+0x6483>
  4094d5:	mov    ecx,0x4
  4094da:	mov    rdi,r15
  4094dd:	mov    rdx,r13
  4094e0:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  4094e5:	cmp    r14,rax
  4094e8:	jne    40a1c9 <main@@Base+0x30f9>
  4094ee:	jmp    408255 <main@@Base+0x1185>
  4094f3:	mov    ecx,0x4
  4094f8:	mov    rdi,r15
  4094fb:	mov    rdx,rbx
  4094fe:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  409503:	jmp    40a207 <main@@Base+0x3137>
  409508:	mov    rax,r14
  40950b:	cmp    cl,0x22
  40950e:	jne    40a685 <main@@Base+0x35b5>
  409514:	lea    rsi,[r14+0x5]
  409518:	mov    rax,r13
  40951b:	sub    rax,rsi
  40951e:	cmp    rax,0x2
  409522:	jl     4095db <main@@Base+0x250b>
  409528:	cmp    BYTE PTR [rsi],0x20
  40952b:	jg     4095e9 <main@@Base+0x2519>
  409531:	jne    4095db <main@@Base+0x250b>
  409537:	cmp    BYTE PTR [rsi+0x1],0x20
  40953b:	jle    4095db <main@@Base+0x250b>
  409541:	add    rsi,0x1
  409545:	cmp    rsi,r13
  409548:	jne    4095f2 <main@@Base+0x2522>
  40954e:	jmp    409699 <main@@Base+0x25c9>
  409553:	mov    r12,r14
  409556:	cmp    al,0x22
  409558:	jne    40a6e1 <main@@Base+0x3611>
  40955e:	lea    rsi,[r14+0x5]
  409562:	mov    rax,r13
  409565:	sub    rax,rsi
  409568:	cmp    rax,0x2
  40956c:	jl     40963d <main@@Base+0x256d>
  409572:	cmp    BYTE PTR [rsi],0x20
  409575:	jg     40964b <main@@Base+0x257b>
  40957b:	jne    40963d <main@@Base+0x256d>
  409581:	cmp    BYTE PTR [rsi+0x1],0x20
  409585:	jle    40963d <main@@Base+0x256d>
  40958b:	add    rsi,0x1
  40958f:	cmp    rsi,r13
  409592:	jne    409650 <main@@Base+0x2580>
  409598:	jmp    4096b7 <main@@Base+0x25e7>
  40959d:	mov    rax,r14
  4095a0:	cmp    cl,0x22
  4095a3:	jne    40a9b3 <main@@Base+0x38e3>
  4095a9:	lea    rsi,[r14+0x5]
  4095ad:	mov    rax,QWORD PTR [rsp+0x8]
  4095b2:	sub    rax,rsi
  4095b5:	cmp    rax,0x2
  4095b9:	jl     40a34e <main@@Base+0x327e>
  4095bf:	cmp    BYTE PTR [rsi],0x20
  4095c2:	jle    40a33d <main@@Base+0x326d>
  4095c8:	mov    rbp,QWORD PTR [rsp+0x8]
  4095cd:	cmp    rsi,rbp
  4095d0:	jne    40a368 <main@@Base+0x3298>
  4095d6:	jmp    40a3ae <main@@Base+0x32de>
  4095db:	mov    rdi,r15
  4095de:	mov    rdx,r13
  4095e1:	call   425750 <flatcc_json_parser_space_ext@@Base>
  4095e6:	mov    rsi,rax
  4095e9:	cmp    rsi,r13
  4095ec:	je     409699 <main@@Base+0x25c9>
  4095f2:	cmp    BYTE PTR [rsi],0x3a
  4095f5:	jne    409699 <main@@Base+0x25c9>
  4095fb:	lea    rax,[rsi+0x1]
  4095ff:	mov    rcx,r13
  409602:	sub    rcx,rax
  409605:	cmp    rcx,0x2
  409609:	jl     40a677 <main@@Base+0x35a7>
  40960f:	cmp    BYTE PTR [rax],0x20
  409612:	jg     40a685 <main@@Base+0x35b5>
  409618:	jne    40a677 <main@@Base+0x35a7>
  40961e:	cmp    BYTE PTR [rsi+0x2],0x20
  409622:	jle    40a677 <main@@Base+0x35a7>
  409628:	add    rsi,0x2
  40962c:	mov    rax,rsi
  40962f:	cmp    r14,rax
  409632:	jne    40a68e <main@@Base+0x35be>
  409638:	jmp    408255 <main@@Base+0x1185>
  40963d:	mov    rdi,r15
  409640:	mov    rdx,r13
  409643:	call   425750 <flatcc_json_parser_space_ext@@Base>
  409648:	mov    rsi,rax
  40964b:	cmp    rsi,r13
  40964e:	je     4096b7 <main@@Base+0x25e7>
  409650:	cmp    BYTE PTR [rsi],0x3a
  409653:	jne    4096b7 <main@@Base+0x25e7>
  409655:	lea    r12,[rsi+0x1]
  409659:	mov    rax,r13
  40965c:	sub    rax,r12
  40965f:	cmp    rax,0x2
  409663:	jl     40a6d0 <main@@Base+0x3600>
  409669:	cmp    BYTE PTR [r12],0x20
  40966e:	jg     40a6e1 <main@@Base+0x3611>
  409674:	jne    40a6d0 <main@@Base+0x3600>
  40967a:	cmp    BYTE PTR [rsi+0x2],0x20
  40967e:	jle    40a6d0 <main@@Base+0x3600>
  409684:	add    rsi,0x2
  409688:	mov    r12,rsi
  40968b:	cmp    r14,r12
  40968e:	jne    40a6ea <main@@Base+0x361a>
  409694:	jmp    40bddd <main@@Base+0x4d0d>
  409699:	mov    ecx,0x4
  40969e:	mov    rdi,r15
  4096a1:	mov    rdx,r13
  4096a4:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  4096a9:	cmp    r14,rax
  4096ac:	jne    40a68e <main@@Base+0x35be>
  4096b2:	jmp    408255 <main@@Base+0x1185>
  4096b7:	mov    ecx,0x4
  4096bc:	mov    rdi,r15
  4096bf:	mov    rdx,r13
  4096c2:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  4096c7:	jmp    40a6de <main@@Base+0x360e>
  4096cc:	cmp    rax,0x9
  4096d0:	jl     40bafc <main@@Base+0x4a2c>
  4096d6:	mov    rax,QWORD PTR [rsp+0x28]
  4096db:	cmp    DWORD PTR [rax],0x0
  4096de:	mov    al,BYTE PTR [r14+0x10]
  4096e2:	je     40b8af <main@@Base+0x47df>
  4096e8:	cmp    al,0x21
  4096ea:	jl     4096f4 <main@@Base+0x2624>
  4096ec:	cmp    al,0x3a
  4096ee:	jne    40bafc <main@@Base+0x4a2c>
  4096f4:	lea    rsi,[r14+0x10]
  4096f8:	mov    rax,QWORD PTR [rsp+0x28]
  4096fd:	mov    DWORD PTR [rax],0x0
  409703:	jmp    40b8bb <main@@Base+0x47eb>
  409708:	mov    r12,r14
  40970b:	cmp    al,0x22
  40970d:	jne    40b5c8 <main@@Base+0x44f8>
  409713:	lea    rsi,[r14+0x9]
  409717:	mov    rax,r13
  40971a:	sub    rax,rsi
  40971d:	cmp    rax,0x2
  409721:	jl     4099e5 <main@@Base+0x2915>
  409727:	cmp    BYTE PTR [rsi],0x20
  40972a:	jg     4099f3 <main@@Base+0x2923>
  409730:	jne    4099e5 <main@@Base+0x2915>
  409736:	cmp    BYTE PTR [rsi+0x1],0x20
  40973a:	jle    4099e5 <main@@Base+0x2915>
  409740:	add    rsi,0x1
  409744:	cmp    rsi,r13
  409747:	jne    4099f8 <main@@Base+0x2928>
  40974d:	jmp    409a41 <main@@Base+0x2971>
  409752:	jne    409763 <main@@Base+0x2693>
  409754:	cmp    BYTE PTR [rsi+0x1],0x20
  409758:	jle    409763 <main@@Base+0x2693>
  40975a:	add    rsi,0x1
  40975e:	jmp    408ac6 <main@@Base+0x19f6>
  409763:	mov    rdi,r14
  409766:	mov    rbp,QWORD PTR [rsp+0x8]
  40976b:	mov    rdx,rbp
  40976e:	call   425750 <flatcc_json_parser_space_ext@@Base>
  409773:	mov    rsi,rax
  409776:	cmp    rsi,rbp
  409779:	je     4097bd <main@@Base+0x26ed>
  40977b:	cmp    BYTE PTR [rsi],0x3a
  40977e:	jne    4097bd <main@@Base+0x26ed>
  409780:	lea    r12,[rsi+0x1]
  409784:	mov    rax,QWORD PTR [rsp+0x8]
  409789:	sub    rax,r12
  40978c:	cmp    rax,0x2
  409790:	jl     409b86 <main@@Base+0x2ab6>
  409796:	cmp    BYTE PTR [r12],0x20
  40979b:	jg     409b99 <main@@Base+0x2ac9>
  4097a1:	jne    409b86 <main@@Base+0x2ab6>
  4097a7:	cmp    BYTE PTR [rsi+0x2],0x20
  4097ab:	jle    409b86 <main@@Base+0x2ab6>
  4097b1:	add    rsi,0x2
  4097b5:	mov    r12,rsi
  4097b8:	jmp    409b99 <main@@Base+0x2ac9>
  4097bd:	mov    ecx,0x4
  4097c2:	mov    rdi,r14
  4097c5:	mov    rdx,QWORD PTR [rsp+0x8]
  4097ca:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  4097cf:	jmp    409b96 <main@@Base+0x2ac6>
  4097d4:	cmp    al,0x22
  4097d6:	jne    40f863 <main@@Base+0x8793>
  4097dc:	add    r14,0x11
  4097e0:	mov    rax,r13
  4097e3:	sub    rax,r14
  4097e6:	cmp    rax,0x2
  4097ea:	jl     409a56 <main@@Base+0x2986>
  4097f0:	cmp    BYTE PTR [r14],0x20
  4097f4:	jg     409a69 <main@@Base+0x2999>
  4097fa:	jne    409a56 <main@@Base+0x2986>
  409800:	cmp    BYTE PTR [r14+0x1],0x20
  409805:	jle    409a56 <main@@Base+0x2986>
  40980b:	add    r14,0x1
  40980f:	cmp    r14,r13
  409812:	jne    409a6e <main@@Base+0x299e>
  409818:	jmp    409ab9 <main@@Base+0x29e9>
  40981d:	mov    ecx,eax
  40981f:	and    cl,0xf
  409822:	add    cl,0xff
  409825:	cmp    cl,0x7
  409828:	ja     40ce13 <main@@Base+0x5d43>
  40982e:	movzx  ecx,cl
  409831:	lea    rdx,[rip+0x2b868]        # 4350a0 <_IO_stdin_used@@Base+0xa0>
  409838:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  40983c:	add    rcx,rdx
  40983f:	xor    r8d,r8d
  409842:	xor    r9d,r9d
  409845:	xor    edx,edx
  409847:	xor    esi,esi
  409849:	xor    ebx,ebx
  40984b:	xor    edi,edi
  40984d:	xor    ebp,ebp
  40984f:	jmp    rcx
  409851:	movsx  r8,BYTE PTR [r14+0x17]
  409856:	movsx  r9,BYTE PTR [r14+0x16]
  40985b:	shl    r9,0x8
  40985f:	or     r9,r8
  409862:	movsx  rdx,BYTE PTR [r14+0x15]
  409867:	shl    rdx,0x10
  40986b:	or     rdx,r9
  40986e:	movsx  rsi,BYTE PTR [r14+0x14]
  409873:	shl    rsi,0x18
  409877:	or     rsi,rdx
  40987a:	movsx  rbx,BYTE PTR [r14+0x13]
  40987f:	shl    rbx,0x20
  409883:	or     rbx,rsi
  409886:	movsx  rdi,BYTE PTR [r14+0x12]
  40988b:	shl    rdi,0x28
  40988f:	or     rdi,rbx
  409892:	movsx  rbp,BYTE PTR [r14+0x11]
  409897:	shl    rbp,0x30
  40989b:	or     rbp,rdi
  40989e:	movzx  ecx,BYTE PTR [r15]
  4098a2:	shl    rcx,0x38
  4098a6:	or     rcx,rbp
  4098a9:	mov    r13,QWORD PTR [rsp+0x8]
  4098ae:	movabs rdx,0xffffffff00000000
  4098b8:	and    rcx,rdx
  4098bb:	movabs rdx,0x6666657200000000
  4098c5:	cmp    rcx,rdx
  4098c8:	jne    40ce13 <main@@Base+0x5d43>
  4098ce:	cmp    rax,0x5
  4098d2:	jl     40f863 <main@@Base+0x8793>
  4098d8:	mov    rax,QWORD PTR [rsp+0x28]
  4098dd:	cmp    DWORD PTR [rax],0x0
  4098e0:	mov    al,BYTE PTR [r14+0x14]
  4098e4:	je     40ce33 <main@@Base+0x5d63>
  4098ea:	cmp    al,0x21
  4098ec:	jl     4098f6 <main@@Base+0x2826>
  4098ee:	cmp    al,0x3a
  4098f0:	jne    40f863 <main@@Base+0x8793>
  4098f6:	add    r14,0x14
  4098fa:	mov    rax,QWORD PTR [rsp+0x28]
  4098ff:	mov    DWORD PTR [rax],0x0
  409905:	jmp    40ce3f <main@@Base+0x5d6f>
  40990a:	mov    ecx,eax
  40990c:	and    cl,0xf
  40990f:	add    cl,0xff
  409912:	cmp    cl,0x7
  409915:	ja     40ce13 <main@@Base+0x5d43>
  40991b:	movzx  ecx,cl
  40991e:	lea    rdx,[rip+0x2b73b]        # 435060 <_IO_stdin_used@@Base+0x60>
  409925:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  409929:	add    rcx,rdx
  40992c:	xor    r8d,r8d
  40992f:	xor    r9d,r9d
  409932:	xor    edx,edx
  409934:	xor    esi,esi
  409936:	xor    ebx,ebx
  409938:	xor    edi,edi
  40993a:	xor    ebp,ebp
  40993c:	jmp    rcx
  40993e:	movsx  r8,BYTE PTR [r14+0x17]
  409943:	movsx  r9,BYTE PTR [r14+0x16]
  409948:	shl    r9,0x8
  40994c:	or     r9,r8
  40994f:	movsx  rdx,BYTE PTR [r14+0x15]
  409954:	shl    rdx,0x10
  409958:	or     rdx,r9
  40995b:	movsx  rsi,BYTE PTR [r14+0x14]
  409960:	shl    rsi,0x18
  409964:	or     rsi,rdx
  409967:	movsx  rbx,BYTE PTR [r14+0x13]
  40996c:	shl    rbx,0x20
  409970:	or     rbx,rsi
  409973:	movsx  rdi,BYTE PTR [r14+0x12]
  409978:	shl    rdi,0x28
  40997c:	or     rdi,rbx
  40997f:	movsx  rbp,BYTE PTR [r14+0x11]
  409984:	shl    rbp,0x30
  409988:	or     rbp,rdi
  40998b:	movzx  ecx,BYTE PTR [r15]
  40998f:	shl    rcx,0x38
  409993:	or     rcx,rbp
  409996:	mov    r13,QWORD PTR [rsp+0x8]
  40999b:	shr    rcx,0x38
  40999f:	cmp    rcx,0x73
  4099a3:	jne    40ce13 <main@@Base+0x5d43>
  4099a9:	cmp    rax,0x2
  4099ad:	jl     40f863 <main@@Base+0x8793>
  4099b3:	mov    rax,QWORD PTR [rsp+0x28]
  4099b8:	cmp    DWORD PTR [rax],0x0
  4099bb:	mov    al,BYTE PTR [r14+0x11]
  4099bf:	je     40ce7c <main@@Base+0x5dac>
  4099c5:	cmp    al,0x21
  4099c7:	jl     4099d1 <main@@Base+0x2901>
  4099c9:	cmp    al,0x3a
  4099cb:	jne    40f863 <main@@Base+0x8793>
  4099d1:	add    r14,0x11
  4099d5:	mov    rax,QWORD PTR [rsp+0x28]
  4099da:	mov    DWORD PTR [rax],0x0
  4099e0:	jmp    40ce88 <main@@Base+0x5db8>
  4099e5:	mov    rdi,r15
  4099e8:	mov    rdx,r13
  4099eb:	call   425750 <flatcc_json_parser_space_ext@@Base>
  4099f0:	mov    rsi,rax
  4099f3:	cmp    rsi,r13
  4099f6:	je     409a41 <main@@Base+0x2971>
  4099f8:	cmp    BYTE PTR [rsi],0x3a
  4099fb:	jne    409a41 <main@@Base+0x2971>
  4099fd:	lea    r12,[rsi+0x1]
  409a01:	mov    rax,r13
  409a04:	sub    rax,r12
  409a07:	cmp    rax,0x2
  409a0b:	jl     40b5b7 <main@@Base+0x44e7>
  409a11:	cmp    BYTE PTR [r12],0x20
  409a16:	jg     40b5c8 <main@@Base+0x44f8>
  409a1c:	jne    40b5b7 <main@@Base+0x44e7>
  409a22:	cmp    BYTE PTR [rsi+0x2],0x20
  409a26:	jle    40b5b7 <main@@Base+0x44e7>
  409a2c:	add    rsi,0x2
  409a30:	mov    r12,rsi
  409a33:	cmp    r14,r12
  409a36:	jne    40b5d1 <main@@Base+0x4501>
  409a3c:	jmp    40bddd <main@@Base+0x4d0d>
  409a41:	mov    ecx,0x4
  409a46:	mov    rdi,r15
  409a49:	mov    rdx,r13
  409a4c:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  409a51:	jmp    40b5c5 <main@@Base+0x44f5>
  409a56:	mov    rdi,QWORD PTR [rsp+0x10]
  409a5b:	mov    rsi,r14
  409a5e:	mov    rdx,r13
  409a61:	call   425750 <flatcc_json_parser_space_ext@@Base>
  409a66:	mov    r14,rax
  409a69:	cmp    r14,r13
  409a6c:	je     409ab9 <main@@Base+0x29e9>
  409a6e:	cmp    BYTE PTR [r14],0x3a
  409a72:	jne    409ab9 <main@@Base+0x29e9>
  409a74:	lea    r12,[r14+0x1]
  409a78:	mov    rax,r13
  409a7b:	sub    rax,r12
  409a7e:	cmp    rax,0x2
  409a82:	jl     40b704 <main@@Base+0x4634>
  409a88:	cmp    BYTE PTR [r12],0x20
  409a8d:	jg     40b717 <main@@Base+0x4647>
  409a93:	jne    40b704 <main@@Base+0x4634>
  409a99:	cmp    BYTE PTR [r14+0x2],0x20
  409a9e:	jle    40b704 <main@@Base+0x4634>
  409aa4:	add    r14,0x2
  409aa8:	mov    r12,r14
  409aab:	cmp    r15,r12
  409aae:	jne    40b720 <main@@Base+0x4650>
  409ab4:	jmp    40f863 <main@@Base+0x8793>
  409ab9:	mov    ecx,0x4
  409abe:	mov    rdi,QWORD PTR [rsp+0x10]
  409ac3:	mov    rsi,r14
  409ac6:	mov    rdx,r13
  409ac9:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  409ace:	jmp    40b714 <main@@Base+0x4644>
  409ad3:	mov    rdi,r15
  409ad6:	mov    rsi,rbx
  409ad9:	mov    rdx,QWORD PTR [rsp+0x8]
  409ade:	call   425750 <flatcc_json_parser_space_ext@@Base>
  409ae3:	mov    rbx,rax
  409ae6:	cmp    r14,rbx
  409ae9:	je     40b24f <main@@Base+0x417f>
  409aef:	mov    DWORD PTR [rsp+0x30],0x0
  409af7:	mov    rdi,r15
  409afa:	mov    rsi,rbx
  409afd:	mov    rdx,QWORD PTR [rsp+0x8]
  409b02:	lea    rcx,[rsp+0x30]
  409b07:	call   427240 <flatcc_json_parser_float@@Base>
  409b0c:	mov    r14,rax
  409b0f:	cmp    rbx,rax
  409b12:	mov    rbp,QWORD PTR [rsp+0x20]
  409b17:	jne    409b57 <main@@Base+0x2a87>
  409b19:	mov    rdi,r15
  409b1c:	mov    rsi,rbx
  409b1f:	mov    r12,QWORD PTR [rsp+0x8]
  409b24:	mov    rdx,r12
  409b27:	lea    rcx,[rip+0x3a6d2]        # 444200 <__data_start@@Base+0x150>
  409b2e:	lea    r8,[rsp+0x30]
  409b33:	call   415b70 <main@@Base+0xeaa0>
  409b38:	mov    r14,rax
  409b3b:	cmp    rax,rbx
  409b3e:	je     411d35 <main@@Base+0xac65>
  409b44:	cmp    r14,r12
  409b47:	movabs r12,0x7465737400000000
  409b51:	je     411d35 <main@@Base+0xac65>
  409b57:	vmovss xmm0,DWORD PTR [rsp+0x30]
  409b5d:	vucomiss xmm0,DWORD PTR [rip+0x2b4a7]        # 43500c <_IO_stdin_used@@Base+0xc>
  409b65:	mov    r13,QWORD PTR [rsp+0x8]
  409b6a:	jne    409b79 <main@@Base+0x2aa9>
  409b6c:	jp     409b79 <main@@Base+0x2aa9>
  409b6e:	test   BYTE PTR [r15+0x10],0x2
  409b73:	je     40f890 <main@@Base+0x87c0>
  409b79:	mov    rdi,QWORD PTR [r15]
  409b7c:	mov    esi,0x1b
  409b81:	jmp    40d6ea <main@@Base+0x661a>
  409b86:	mov    rdi,r14
  409b89:	mov    rsi,r12
  409b8c:	mov    rdx,QWORD PTR [rsp+0x8]
  409b91:	call   425750 <flatcc_json_parser_space_ext@@Base>
  409b96:	mov    r12,rax
  409b99:	mov    r14,r15
  409b9c:	cmp    r14,r12
  409b9f:	je     40b214 <main@@Base+0x4144>
  409ba5:	mov    r15,QWORD PTR [rsp+0x10]
  409baa:	mov    rdi,QWORD PTR [r15]
  409bad:	mov    esi,0x4
  409bb2:	mov    edx,0x2
  409bb7:	mov    ecx,0x3fffffff
  409bbc:	call   420730 <flatcc_builder_start_vector@@Base>
  409bc1:	test   eax,eax
  409bc3:	jne    411d42 <main@@Base+0xac72>
  409bc9:	mov    r13,QWORD PTR [rsp+0x8]
  409bce:	cmp    r12,r13
  409bd1:	je     409c08 <main@@Base+0x2b38>
  409bd3:	cmp    BYTE PTR [r12],0x5b
  409bd8:	jne    409c08 <main@@Base+0x2b38>
  409bda:	lea    rax,[r12+0x1]
  409bdf:	mov    rcx,r13
  409be2:	sub    rcx,rax
  409be5:	cmp    rcx,0x2
  409be9:	mov    rbp,QWORD PTR [rsp+0x20]
  409bee:	jl     409c4e <main@@Base+0x2b7e>
  409bf0:	cmp    BYTE PTR [rax],0x20
  409bf3:	jg     409c5c <main@@Base+0x2b8c>
  409bf5:	jne    409c4e <main@@Base+0x2b7e>
  409bf7:	cmp    BYTE PTR [r12+0x2],0x20
  409bfd:	jle    409c4e <main@@Base+0x2b7e>
  409bff:	add    r12,0x2
  409c03:	mov    rax,r12
  409c06:	jmp    409c5c <main@@Base+0x2b8c>
  409c08:	mov    ecx,0x16
  409c0d:	mov    rdi,r15
  409c10:	mov    rsi,r12
  409c13:	mov    rdx,r13
  409c16:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  409c1b:	mov    r14,rax
  409c1e:	mov    rbp,QWORD PTR [rsp+0x20]
  409c23:	movabs r12,0x7465737400000000
  409c2d:	mov    rdi,QWORD PTR [r15]
  409c30:	call   4218c0 <flatcc_builder_end_vector@@Base>
  409c35:	mov    DWORD PTR [rsp+0x3c],eax
  409c39:	test   eax,eax
  409c3b:	je     411d63 <main@@Base+0xac93>
  409c41:	mov    rdi,QWORD PTR [r15]
  409c44:	mov    esi,0x9
  409c49:	jmp    40b37b <main@@Base+0x42ab>
  409c4e:	mov    rdi,r15
  409c51:	mov    rsi,rax
  409c54:	mov    rdx,r13
  409c57:	call   425750 <flatcc_json_parser_space_ext@@Base>
  409c5c:	mov    r12,r13
  409c5f:	cmp    rax,r13
  409c62:	je     409ca9 <main@@Base+0x2bd9>
  409c64:	cmp    BYTE PTR [rax],0x5d
  409c67:	jne    409ca6 <main@@Base+0x2bd6>
  409c69:	lea    r14,[rax+0x1]
  409c6d:	mov    rcx,r13
  409c70:	sub    rcx,r14
  409c73:	cmp    rcx,0x2
  409c77:	movabs r12,0x7465737400000000
  409c81:	jl     40aa2a <main@@Base+0x395a>
  409c87:	cmp    BYTE PTR [r14],0x20
  409c8b:	jg     409c2d <main@@Base+0x2b5d>
  409c8d:	jne    40aa2a <main@@Base+0x395a>
  409c93:	cmp    BYTE PTR [rax+0x2],0x20
  409c97:	jle    40aa2a <main@@Base+0x395a>
  409c9d:	add    rax,0x2
  409ca1:	mov    r14,rax
  409ca4:	jmp    409c2d <main@@Base+0x2b5d>
  409ca6:	mov    r12,rax
  409ca9:	mov    rdi,QWORD PTR [r15]
  409cac:	mov    esi,0x1
  409cb1:	call   41fdc0 <flatcc_builder_extend_vector@@Base>
  409cb6:	test   rax,rax
  409cb9:	je     407c81 <main@@Base+0xbb1>
  409cbf:	mov    rdi,r15
  409cc2:	mov    rsi,r12
  409cc5:	mov    rdx,r13
  409cc8:	mov    rcx,rax
  409ccb:	call   414130 <main@@Base+0xd060>
  409cd0:	mov    rcx,r13
  409cd3:	sub    rcx,rax
  409cd6:	cmp    rcx,0x2
  409cda:	mov    rbp,QWORD PTR [rsp+0x20]
  409cdf:	movabs r12,0x7465737400000000
  409ce9:	jl     409d06 <main@@Base+0x2c36>
  409ceb:	cmp    BYTE PTR [rax],0x20
  409cee:	jg     409d14 <main@@Base+0x2c44>
  409cf0:	jne    409d06 <main@@Base+0x2c36>
  409cf2:	cmp    BYTE PTR [rax+0x1],0x20
  409cf6:	jle    409d06 <main@@Base+0x2c36>
  409cf8:	add    rax,0x1
  409cfc:	cmp    rax,r13
  409cff:	jne    409d1d <main@@Base+0x2c4d>
  409d01:	jmp    40a9f9 <main@@Base+0x3929>
  409d06:	mov    rdi,r15
  409d09:	mov    rsi,rax
  409d0c:	mov    rdx,r13
  409d0f:	call   425750 <flatcc_json_parser_space_ext@@Base>
  409d14:	cmp    rax,r13
  409d17:	je     40a9f9 <main@@Base+0x3929>
  409d1d:	movzx  ecx,BYTE PTR [rax]
  409d20:	cmp    cl,0x2c
  409d23:	jne    40aa01 <main@@Base+0x3931>
  409d29:	lea    r12,[rax+0x1]
  409d2d:	mov    rcx,r13
  409d30:	sub    rcx,r12
  409d33:	cmp    rcx,0x2
  409d37:	jl     409d4e <main@@Base+0x2c7e>
  409d39:	cmp    BYTE PTR [r12],0x20
  409d3e:	jg     409d5f <main@@Base+0x2c8f>
  409d40:	jne    409d4e <main@@Base+0x2c7e>
  409d42:	cmp    BYTE PTR [rax+0x2],0x20
  409d46:	jle    409d4e <main@@Base+0x2c7e>
  409d48:	add    rax,0x2
  409d4c:	jmp    409d5c <main@@Base+0x2c8c>
  409d4e:	mov    rdi,r15
  409d51:	mov    rsi,r12
  409d54:	mov    rdx,r13
  409d57:	call   425750 <flatcc_json_parser_space_ext@@Base>
  409d5c:	mov    r12,rax
  409d5f:	cmp    r12,r13
  409d62:	je     40abc7 <main@@Base+0x3af7>
  409d68:	cmp    BYTE PTR [r12],0x5d
  409d6d:	jne    409ca9 <main@@Base+0x2bd9>
  409d73:	lea    r14,[r12+0x1]
  409d78:	mov    rax,r13
  409d7b:	sub    rax,r14
  409d7e:	cmp    rax,0x2
  409d82:	jl     40b7d2 <main@@Base+0x4702>
  409d88:	cmp    BYTE PTR [r14],0x20
  409d8c:	jg     409c23 <main@@Base+0x2b53>
  409d92:	jne    40b7d2 <main@@Base+0x4702>
  409d98:	cmp    BYTE PTR [r12+0x2],0x20
  409d9e:	jle    40b7d2 <main@@Base+0x4702>
  409da4:	add    r12,0x2
  409da8:	mov    r14,r12
  409dab:	jmp    409c23 <main@@Base+0x2b53>
  409db0:	mov    r12,r14
  409db3:	cmp    al,0x22
  409db5:	jne    40bc37 <main@@Base+0x4b67>
  409dbb:	lea    rsi,[r14+0x3]
  409dbf:	mov    rbx,QWORD PTR [rsp+0x8]
  409dc4:	mov    rax,rbx
  409dc7:	sub    rax,rsi
  409dca:	cmp    rax,0x2
  409dce:	jl     409ee4 <main@@Base+0x2e14>
  409dd4:	cmp    BYTE PTR [rsi],0x20
  409dd7:	jg     409ef2 <main@@Base+0x2e22>
  409ddd:	jne    409ee4 <main@@Base+0x2e14>
  409de3:	cmp    BYTE PTR [rsi+0x1],0x20
  409de7:	jle    409ee4 <main@@Base+0x2e14>
  409ded:	add    rsi,0x1
  409df1:	cmp    rsi,rbx
  409df4:	jne    409efb <main@@Base+0x2e2b>
  409dfa:	jmp    40a003 <main@@Base+0x2f33>
  409dff:	mov    r12,r14
  409e02:	cmp    al,0x22
  409e04:	jne    40bd83 <main@@Base+0x4cb3>
  409e0a:	lea    rsi,[r14+0x4]
  409e0e:	mov    rax,r13
  409e11:	sub    rax,rsi
  409e14:	cmp    rax,0x2
  409e18:	jl     409f45 <main@@Base+0x2e75>
  409e1e:	cmp    BYTE PTR [rsi],0x20
  409e21:	jg     409f53 <main@@Base+0x2e83>
  409e27:	jne    409f45 <main@@Base+0x2e75>
  409e2d:	cmp    BYTE PTR [rsi+0x1],0x20
  409e31:	jle    409f45 <main@@Base+0x2e75>
  409e37:	add    rsi,0x1
  409e3b:	cmp    rsi,r13
  409e3e:	jne    409f5c <main@@Base+0x2e8c>
  409e44:	jmp    40a018 <main@@Base+0x2f48>
  409e49:	mov    rbx,r14
  409e4c:	cmp    al,0x22
  409e4e:	jne    40ca52 <main@@Base+0x5982>
  409e54:	lea    rsi,[r14+0x7]
  409e58:	mov    rbx,QWORD PTR [rsp+0x8]
  409e5d:	mov    rax,rbx
  409e60:	sub    rax,rsi
  409e63:	cmp    rax,0x2
  409e67:	jl     409fa9 <main@@Base+0x2ed9>
  409e6d:	cmp    BYTE PTR [rsi],0x20
  409e70:	jg     409fb7 <main@@Base+0x2ee7>
  409e76:	jne    409fa9 <main@@Base+0x2ed9>
  409e7c:	cmp    BYTE PTR [rsi+0x1],0x20
  409e80:	jle    409fa9 <main@@Base+0x2ed9>
  409e86:	add    rsi,0x1
  409e8a:	cmp    rsi,rbx
  409e8d:	jne    409fbc <main@@Base+0x2eec>
  409e93:	jmp    40a02d <main@@Base+0x2f5d>
  409e98:	cmp    al,0x22
  409e9a:	jne    40a0a1 <main@@Base+0x2fd1>
  409ea0:	lea    rsi,[r14+0x11]
  409ea4:	mov    rbx,QWORD PTR [rsp+0x8]
  409ea9:	mov    rax,rbx
  409eac:	sub    rax,rsi
  409eaf:	cmp    rax,0x2
  409eb3:	jl     40a042 <main@@Base+0x2f72>
  409eb9:	cmp    BYTE PTR [rsi],0x20
  409ebc:	jg     40a052 <main@@Base+0x2f82>
  409ec2:	jne    40a042 <main@@Base+0x2f72>
  409ec8:	cmp    BYTE PTR [rsi+0x1],0x20
  409ecc:	jle    40a042 <main@@Base+0x2f72>
  409ed2:	add    rsi,0x1
  409ed6:	cmp    rsi,rbx
  409ed9:	jne    40a05b <main@@Base+0x2f8b>
  409edf:	jmp    40a19b <main@@Base+0x30cb>
  409ee4:	mov    rdi,r15
  409ee7:	mov    rdx,rbx
  409eea:	call   425750 <flatcc_json_parser_space_ext@@Base>
  409eef:	mov    rsi,rax
  409ef2:	cmp    rsi,rbx
  409ef5:	je     40a003 <main@@Base+0x2f33>
  409efb:	cmp    BYTE PTR [rsi],0x3a
  409efe:	jne    40a003 <main@@Base+0x2f33>
  409f04:	lea    r12,[rsi+0x1]
  409f08:	sub    rbx,r12
  409f0b:	cmp    rbx,0x2
  409f0f:	jl     40bc24 <main@@Base+0x4b54>
  409f15:	cmp    BYTE PTR [r12],0x20
  409f1a:	jg     40bc37 <main@@Base+0x4b67>
  409f20:	jne    40bc24 <main@@Base+0x4b54>
  409f26:	cmp    BYTE PTR [rsi+0x2],0x20
  409f2a:	jle    40bc24 <main@@Base+0x4b54>
  409f30:	add    rsi,0x2
  409f34:	mov    r12,rsi
  409f37:	cmp    r14,r12
  409f3a:	jne    40bc40 <main@@Base+0x4b70>
  409f40:	jmp    40d553 <main@@Base+0x6483>
  409f45:	mov    rdi,r15
  409f48:	mov    rdx,r13
  409f4b:	call   425750 <flatcc_json_parser_space_ext@@Base>
  409f50:	mov    rsi,rax
  409f53:	cmp    rsi,r13
  409f56:	je     40a018 <main@@Base+0x2f48>
  409f5c:	cmp    BYTE PTR [rsi],0x3a
  409f5f:	jne    40a018 <main@@Base+0x2f48>
  409f65:	lea    r12,[rsi+0x1]
  409f69:	mov    rax,r13
  409f6c:	sub    rax,r12
  409f6f:	cmp    rax,0x2
  409f73:	jl     40bd72 <main@@Base+0x4ca2>
  409f79:	cmp    BYTE PTR [r12],0x20
  409f7e:	jg     40bd83 <main@@Base+0x4cb3>
  409f84:	jne    40bd72 <main@@Base+0x4ca2>
  409f8a:	cmp    BYTE PTR [rsi+0x2],0x20
  409f8e:	jle    40bd72 <main@@Base+0x4ca2>
  409f94:	add    rsi,0x2
  409f98:	mov    r12,rsi
  409f9b:	cmp    r14,r12
  409f9e:	jne    40bd88 <main@@Base+0x4cb8>
  409fa4:	jmp    40bddd <main@@Base+0x4d0d>
  409fa9:	mov    rdi,r15
  409fac:	mov    rdx,rbx
  409faf:	call   425750 <flatcc_json_parser_space_ext@@Base>
  409fb4:	mov    rsi,rax
  409fb7:	cmp    rsi,rbx
  409fba:	je     40a02d <main@@Base+0x2f5d>
  409fbc:	cmp    BYTE PTR [rsi],0x3a
  409fbf:	jne    40a02d <main@@Base+0x2f5d>
  409fc1:	mov    rax,rbx
  409fc4:	lea    rbx,[rsi+0x1]
  409fc8:	sub    rax,rbx
  409fcb:	cmp    rax,0x2
  409fcf:	jl     40ca3f <main@@Base+0x596f>
  409fd5:	cmp    BYTE PTR [rbx],0x20
  409fd8:	jg     40ca52 <main@@Base+0x5982>
  409fde:	jne    40ca3f <main@@Base+0x596f>
  409fe4:	cmp    BYTE PTR [rsi+0x2],0x20
  409fe8:	jle    40ca3f <main@@Base+0x596f>
  409fee:	add    rsi,0x2
  409ff2:	mov    rbx,rsi
  409ff5:	cmp    r14,rbx
  409ff8:	jne    40ca5b <main@@Base+0x598b>
  409ffe:	jmp    40b24f <main@@Base+0x417f>
  40a003:	mov    ecx,0x4
  40a008:	mov    rdi,r15
  40a00b:	mov    rdx,rbx
  40a00e:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  40a013:	jmp    40bc34 <main@@Base+0x4b64>
  40a018:	mov    ecx,0x4
  40a01d:	mov    rdi,r15
  40a020:	mov    rdx,r13
  40a023:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  40a028:	jmp    40bd80 <main@@Base+0x4cb0>
  40a02d:	mov    ecx,0x4
  40a032:	mov    rdi,r15
  40a035:	mov    rdx,rbx
  40a038:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  40a03d:	jmp    40ca4f <main@@Base+0x597f>
  40a042:	mov    rdi,QWORD PTR [rsp+0x10]
  40a047:	mov    rdx,rbx
  40a04a:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40a04f:	mov    rsi,rax
  40a052:	cmp    rsi,rbx
  40a055:	je     40a19b <main@@Base+0x30cb>
  40a05b:	cmp    BYTE PTR [rsi],0x3a
  40a05e:	jne    40a19b <main@@Base+0x30cb>
  40a064:	mov    rax,rbx
  40a067:	lea    rbx,[rsi+0x1]
  40a06b:	sub    rax,rbx
  40a06e:	cmp    rax,0x2
  40a072:	jl     40cb8a <main@@Base+0x5aba>
  40a078:	cmp    BYTE PTR [rbx],0x20
  40a07b:	jg     40cb9f <main@@Base+0x5acf>
  40a081:	jne    40cb8a <main@@Base+0x5aba>
  40a087:	cmp    BYTE PTR [rsi+0x2],0x20
  40a08b:	jle    40cb8a <main@@Base+0x5aba>
  40a091:	add    rsi,0x2
  40a095:	mov    rbx,rsi
  40a098:	cmp    r15,rbx
  40a09b:	jne    40cba8 <main@@Base+0x5ad8>
  40a0a1:	lea    r15,[r14+0x10]
  40a0a5:	mov    r13,QWORD PTR [rsp+0x8]
  40a0aa:	mov    rax,r13
  40a0ad:	sub    rax,r15
  40a0b0:	cmp    rax,0x8
  40a0b4:	jb     40a0c0 <main@@Base+0x2ff0>
  40a0b6:	movbe  rcx,QWORD PTR [r15]
  40a0bb:	jmp    40a151 <main@@Base+0x3081>
  40a0c0:	mov    ecx,eax
  40a0c2:	and    cl,0xf
  40a0c5:	add    cl,0xff
  40a0c8:	cmp    cl,0x7
  40a0cb:	ja     40ce13 <main@@Base+0x5d43>
  40a0d1:	movzx  ecx,cl
  40a0d4:	lea    rdx,[rip+0x2b065]        # 435140 <_IO_stdin_used@@Base+0x140>
  40a0db:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  40a0df:	add    rcx,rdx
  40a0e2:	xor    r8d,r8d
  40a0e5:	xor    r9d,r9d
  40a0e8:	xor    edx,edx
  40a0ea:	xor    esi,esi
  40a0ec:	xor    ebx,ebx
  40a0ee:	xor    edi,edi
  40a0f0:	xor    ebp,ebp
  40a0f2:	jmp    rcx
  40a0f4:	movsx  r8,BYTE PTR [r14+0x17]
  40a0f9:	movsx  r9,BYTE PTR [r14+0x16]
  40a0fe:	shl    r9,0x8
  40a102:	or     r9,r8
  40a105:	movsx  rdx,BYTE PTR [r14+0x15]
  40a10a:	shl    rdx,0x10
  40a10e:	or     rdx,r9
  40a111:	movsx  rsi,BYTE PTR [r14+0x14]
  40a116:	shl    rsi,0x18
  40a11a:	or     rsi,rdx
  40a11d:	movsx  rbx,BYTE PTR [r14+0x13]
  40a122:	shl    rbx,0x20
  40a126:	or     rbx,rsi
  40a129:	movsx  rdi,BYTE PTR [r14+0x12]
  40a12e:	shl    rdi,0x28
  40a132:	or     rdi,rbx
  40a135:	movsx  rbp,BYTE PTR [r14+0x11]
  40a13a:	shl    rbp,0x30
  40a13e:	or     rbp,rdi
  40a141:	movzx  ecx,BYTE PTR [r15]
  40a145:	shl    rcx,0x38
  40a149:	or     rcx,rbp
  40a14c:	mov    r13,QWORD PTR [rsp+0x8]
  40a151:	shr    rcx,0x38
  40a155:	cmp    rcx,0x61
  40a159:	jne    40ce13 <main@@Base+0x5d43>
  40a15f:	cmp    rax,0x2
  40a163:	jl     40fb4d <main@@Base+0x8a7d>
  40a169:	mov    rax,QWORD PTR [rsp+0x28]
  40a16e:	cmp    DWORD PTR [rax],0x0
  40a171:	mov    al,BYTE PTR [r14+0x11]
  40a175:	je     40b6b6 <main@@Base+0x45e6>
  40a17b:	cmp    al,0x21
  40a17d:	jl     40a187 <main@@Base+0x30b7>
  40a17f:	cmp    al,0x3a
  40a181:	jne    40fb4d <main@@Base+0x8a7d>
  40a187:	add    r14,0x11
  40a18b:	mov    rax,QWORD PTR [rsp+0x28]
  40a190:	mov    DWORD PTR [rax],0x0
  40a196:	jmp    40b6c2 <main@@Base+0x45f2>
  40a19b:	mov    ecx,0x4
  40a1a0:	mov    rdi,QWORD PTR [rsp+0x10]
  40a1a5:	mov    rdx,rbx
  40a1a8:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  40a1ad:	jmp    40cb9c <main@@Base+0x5acc>
  40a1b2:	mov    rdi,r15
  40a1b5:	mov    rsi,rax
  40a1b8:	mov    rdx,r13
  40a1bb:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40a1c0:	cmp    r14,rax
  40a1c3:	je     408255 <main@@Base+0x1185>
  40a1c9:	mov    rdi,r15
  40a1cc:	mov    rsi,rax
  40a1cf:	mov    rdx,r13
  40a1d2:	lea    rcx,[rsp+0x3c]
  40a1d7:	call   407c50 <main@@Base+0xb80>
  40a1dc:	mov    r14,rax
  40a1df:	cmp    DWORD PTR [rsp+0x3c],0x0
  40a1e4:	je     411d63 <main@@Base+0xac93>
  40a1ea:	mov    rdi,QWORD PTR [r15]
  40a1ed:	mov    esi,0xc
  40a1f2:	jmp    40a6b7 <main@@Base+0x35e7>
  40a1f7:	mov    rdi,r15
  40a1fa:	mov    rsi,r12
  40a1fd:	mov    rdx,QWORD PTR [rsp+0x8]
  40a202:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40a207:	mov    r12,rax
  40a20a:	cmp    r14,r12
  40a20d:	je     40d553 <main@@Base+0x6483>
  40a213:	mov    QWORD PTR [rsp+0x30],0x0
  40a21c:	mov    DWORD PTR [rsp+0x40],0x0
  40a224:	mov    BYTE PTR [rsp+0x1c],0x0
  40a229:	mov    rdx,QWORD PTR [rsp+0x8]
  40a22e:	cmp    r12,rdx
  40a231:	je     40a271 <main@@Base+0x31a1>
  40a233:	mov    rdi,r15
  40a236:	mov    rsi,r12
  40a239:	lea    rcx,[rsp+0x40]
  40a23e:	lea    r8,[rsp+0x30]
  40a243:	call   427360 <flatcc_json_parser_integer@@Base>
  40a248:	cmp    rax,r12
  40a24b:	mov    rbp,QWORD PTR [rsp+0x20]
  40a250:	je     40a282 <main@@Base+0x31b2>
  40a252:	mov    r14,rax
  40a255:	mov    rbx,QWORD PTR [rsp+0x30]
  40a25a:	cmp    DWORD PTR [rsp+0x40],0x0
  40a25f:	je     40a28e <main@@Base+0x31be>
  40a261:	cmp    rbx,0x81
  40a268:	jb     40a2b8 <main@@Base+0x31e8>
  40a26a:	mov    ecx,0x8
  40a26f:	jmp    40a29c <main@@Base+0x31cc>
  40a271:	xor    ebx,ebx
  40a273:	mov    r14,rdx
  40a276:	mov    rbp,QWORD PTR [rsp+0x20]
  40a27b:	cmp    r12,r14
  40a27e:	jne    40a2fc <main@@Base+0x322c>
  40a280:	jmp    40a2c4 <main@@Base+0x31f4>
  40a282:	xor    ebx,ebx
  40a284:	mov    r14,r12
  40a287:	cmp    r12,r14
  40a28a:	jne    40a2fc <main@@Base+0x322c>
  40a28c:	jmp    40a2c4 <main@@Base+0x31f4>
  40a28e:	cmp    rbx,0x80
  40a295:	jb     40a2bb <main@@Base+0x31eb>
  40a297:	mov    ecx,0x7
  40a29c:	mov    rdi,r15
  40a29f:	mov    rsi,r14
  40a2a2:	mov    rdx,QWORD PTR [rsp+0x8]
  40a2a7:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  40a2ac:	mov    r14,rax
  40a2af:	xor    ebx,ebx
  40a2b1:	cmp    r12,r14
  40a2b4:	jne    40a2fc <main@@Base+0x322c>
  40a2b6:	jmp    40a2c4 <main@@Base+0x31f4>
  40a2b8:	neg    rbx
  40a2bb:	mov    BYTE PTR [rsp+0x1c],bl
  40a2bf:	cmp    r12,r14
  40a2c2:	jne    40a2fc <main@@Base+0x322c>
  40a2c4:	mov    rdi,r15
  40a2c7:	mov    rsi,r12
  40a2ca:	mov    rbx,QWORD PTR [rsp+0x8]
  40a2cf:	mov    rdx,rbx
  40a2d2:	lea    rcx,[rip+0x39de7]        # 4440c0 <__data_start@@Base+0x10>
  40a2d9:	lea    r8,[rsp+0x1c]
  40a2de:	call   413b90 <main@@Base+0xcac0>
  40a2e3:	mov    r14,rax
  40a2e6:	cmp    rax,r12
  40a2e9:	je     411d35 <main@@Base+0xac65>
  40a2ef:	cmp    r14,rbx
  40a2f2:	je     411d35 <main@@Base+0xac65>
  40a2f8:	mov    bl,BYTE PTR [rsp+0x1c]
  40a2fc:	cmp    bl,0x8
  40a2ff:	movabs r12,0x7465737400000000
  40a309:	jne    40a316 <main@@Base+0x3246>
  40a30b:	test   BYTE PTR [r15+0x10],0x2
  40a310:	je     40ccd1 <main@@Base+0x5c01>
  40a316:	mov    rdi,QWORD PTR [r15]
  40a319:	mov    esi,0x6
  40a31e:	mov    edx,0x1
  40a323:	mov    ecx,0x1
  40a328:	call   421f20 <flatcc_builder_table_add@@Base>
  40a32d:	test   rax,rax
  40a330:	je     411d35 <main@@Base+0xac65>
  40a336:	mov    BYTE PTR [rax],bl
  40a338:	jmp    40ccd1 <main@@Base+0x5c01>
  40a33d:	jne    40a34e <main@@Base+0x327e>
  40a33f:	cmp    BYTE PTR [rsi+0x1],0x20
  40a343:	jle    40a34e <main@@Base+0x327e>
  40a345:	add    rsi,0x1
  40a349:	jmp    4095c8 <main@@Base+0x24f8>
  40a34e:	mov    rdi,QWORD PTR [rsp+0x10]
  40a353:	mov    rbp,QWORD PTR [rsp+0x8]
  40a358:	mov    rdx,rbp
  40a35b:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40a360:	mov    rsi,rax
  40a363:	cmp    rsi,rbp
  40a366:	je     40a3ae <main@@Base+0x32de>
  40a368:	cmp    BYTE PTR [rsi],0x3a
  40a36b:	jne    40a3ae <main@@Base+0x32de>
  40a36d:	lea    rax,[rsi+0x1]
  40a371:	mov    rcx,QWORD PTR [rsp+0x8]
  40a376:	sub    rcx,rax
  40a379:	cmp    rcx,0x2
  40a37d:	jl     40a9a1 <main@@Base+0x38d1>
  40a383:	cmp    BYTE PTR [rax],0x20
  40a386:	jg     40a9b3 <main@@Base+0x38e3>
  40a38c:	jne    40a9a1 <main@@Base+0x38d1>
  40a392:	cmp    BYTE PTR [rsi+0x2],0x20
  40a396:	jle    40a9a1 <main@@Base+0x38d1>
  40a39c:	add    rsi,0x2
  40a3a0:	mov    rax,rsi
  40a3a3:	cmp    r14,rax
  40a3a6:	jne    40a9bc <main@@Base+0x38ec>
  40a3ac:	jmp    40a3cb <main@@Base+0x32fb>
  40a3ae:	mov    ecx,0x4
  40a3b3:	mov    rdi,QWORD PTR [rsp+0x10]
  40a3b8:	mov    rdx,QWORD PTR [rsp+0x8]
  40a3bd:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  40a3c2:	cmp    r14,rax
  40a3c5:	jne    40a9bc <main@@Base+0x38ec>
  40a3cb:	movabs rax,0x7465737400000000
  40a3d5:	lea    rax,[rax+0x35000000]
  40a3dc:	cmp    r12,rax
  40a3df:	jne    40b214 <main@@Base+0x4144>
  40a3e5:	mov    r12,r14
  40a3e8:	cmp    r15,0x6
  40a3ec:	jl     40b191 <main@@Base+0x40c1>
  40a3f2:	mov    rax,QWORD PTR [rsp+0x28]
  40a3f7:	cmp    DWORD PTR [rax],0x0
  40a3fa:	mov    al,BYTE PTR [r14+0x5]
  40a3fe:	je     40a423 <main@@Base+0x3353>
  40a400:	cmp    al,0x21
  40a402:	jl     40a40f <main@@Base+0x333f>
  40a404:	mov    r12,r14
  40a407:	cmp    al,0x3a
  40a409:	jne    40b191 <main@@Base+0x40c1>
  40a40f:	mov    r15,r14
  40a412:	lea    rsi,[r14+0x5]
  40a416:	mov    rax,QWORD PTR [rsp+0x28]
  40a41b:	mov    DWORD PTR [rax],0x0
  40a421:	jmp    40a435 <main@@Base+0x3365>
  40a423:	mov    r12,r14
  40a426:	cmp    al,0x22
  40a428:	jne    40b191 <main@@Base+0x40c1>
  40a42e:	mov    r15,r14
  40a431:	lea    rsi,[r14+0x6]
  40a435:	mov    rax,QWORD PTR [rsp+0x8]
  40a43a:	sub    rax,rsi
  40a43d:	cmp    rax,0x2
  40a441:	mov    r14,QWORD PTR [rsp+0x10]
  40a446:	jl     40a465 <main@@Base+0x3395>
  40a448:	cmp    BYTE PTR [rsi],0x20
  40a44b:	jg     40a459 <main@@Base+0x3389>
  40a44d:	jne    40a465 <main@@Base+0x3395>
  40a44f:	cmp    BYTE PTR [rsi+0x1],0x20
  40a453:	jle    40a465 <main@@Base+0x3395>
  40a455:	add    rsi,0x1
  40a459:	mov    rbp,QWORD PTR [rsp+0x8]
  40a45e:	cmp    rsi,rbp
  40a461:	jne    40a47d <main@@Base+0x33ad>
  40a463:	jmp    40a4bf <main@@Base+0x33ef>
  40a465:	mov    rdi,r14
  40a468:	mov    rbp,QWORD PTR [rsp+0x8]
  40a46d:	mov    rdx,rbp
  40a470:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40a475:	mov    rsi,rax
  40a478:	cmp    rsi,rbp
  40a47b:	je     40a4bf <main@@Base+0x33ef>
  40a47d:	cmp    BYTE PTR [rsi],0x3a
  40a480:	jne    40a4bf <main@@Base+0x33ef>
  40a482:	lea    r12,[rsi+0x1]
  40a486:	mov    rax,QWORD PTR [rsp+0x8]
  40a48b:	sub    rax,r12
  40a48e:	cmp    rax,0x2
  40a492:	jl     40b17b <main@@Base+0x40ab>
  40a498:	cmp    BYTE PTR [r12],0x20
  40a49d:	jg     40b18e <main@@Base+0x40be>
  40a4a3:	jne    40b17b <main@@Base+0x40ab>
  40a4a9:	cmp    BYTE PTR [rsi+0x2],0x20
  40a4ad:	jle    40b17b <main@@Base+0x40ab>
  40a4b3:	add    rsi,0x2
  40a4b7:	mov    r12,rsi
  40a4ba:	jmp    40b18e <main@@Base+0x40be>
  40a4bf:	mov    ecx,0x4
  40a4c4:	mov    rdi,r14
  40a4c7:	mov    rdx,QWORD PTR [rsp+0x8]
  40a4cc:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  40a4d1:	jmp    40b18b <main@@Base+0x40bb>
  40a4d6:	cmp    al,0x22
  40a4d8:	jne    40f863 <main@@Base+0x8793>
  40a4de:	add    r14,0xb
  40a4e2:	mov    rax,r13
  40a4e5:	sub    rax,r14
  40a4e8:	cmp    rax,0x2
  40a4ec:	jl     40a5fa <main@@Base+0x352a>
  40a4f2:	cmp    BYTE PTR [r14],0x20
  40a4f6:	jg     40a60d <main@@Base+0x353d>
  40a4fc:	jne    40a5fa <main@@Base+0x352a>
  40a502:	cmp    BYTE PTR [r14+0x1],0x20
  40a507:	jle    40a5fa <main@@Base+0x352a>
  40a50d:	add    r14,0x1
  40a511:	cmp    r14,r13
  40a514:	jne    40a612 <main@@Base+0x3542>
  40a51a:	jmp    40a65d <main@@Base+0x358d>
  40a51f:	cmp    al,0x22
  40a521:	jne    40f863 <main@@Base+0x8793>
  40a527:	add    r14,0x13
  40a52b:	mov    rax,r13
  40a52e:	sub    rax,r14
  40a531:	cmp    rax,0x2
  40a535:	jl     40aa40 <main@@Base+0x3970>
  40a53b:	cmp    BYTE PTR [r14],0x20
  40a53f:	jg     40aa53 <main@@Base+0x3983>
  40a545:	jne    40aa40 <main@@Base+0x3970>
  40a54b:	cmp    BYTE PTR [r14+0x1],0x20
  40a550:	jle    40aa40 <main@@Base+0x3970>
  40a556:	add    r14,0x1
  40a55a:	cmp    r14,r13
  40a55d:	jne    40aa5c <main@@Base+0x398c>
  40a563:	jmp    40ab79 <main@@Base+0x3aa9>
  40a568:	cmp    al,0x22
  40a56a:	jne    40f863 <main@@Base+0x8793>
  40a570:	add    r14,0x18
  40a574:	mov    rax,r13
  40a577:	sub    rax,r14
  40a57a:	cmp    rax,0x2
  40a57e:	jl     40aaab <main@@Base+0x39db>
  40a584:	cmp    BYTE PTR [r14],0x20
  40a588:	jg     40aabe <main@@Base+0x39ee>
  40a58e:	jne    40aaab <main@@Base+0x39db>
  40a594:	cmp    BYTE PTR [r14+0x1],0x20
  40a599:	jle    40aaab <main@@Base+0x39db>
  40a59f:	add    r14,0x1
  40a5a3:	cmp    r14,r13
  40a5a6:	jne    40aac7 <main@@Base+0x39f7>
  40a5ac:	jmp    40ab93 <main@@Base+0x3ac3>
  40a5b1:	cmp    al,0x22
  40a5b3:	jne    40f863 <main@@Base+0x8793>
  40a5b9:	add    r14,0x12
  40a5bd:	mov    rax,r13
  40a5c0:	sub    rax,r14
  40a5c3:	cmp    rax,0x2
  40a5c7:	jl     40ab16 <main@@Base+0x3a46>
  40a5cd:	cmp    BYTE PTR [r14],0x20
  40a5d1:	jg     40ab29 <main@@Base+0x3a59>
  40a5d7:	jne    40ab16 <main@@Base+0x3a46>
  40a5dd:	cmp    BYTE PTR [r14+0x1],0x20
  40a5e2:	jle    40ab16 <main@@Base+0x3a46>
  40a5e8:	add    r14,0x1
  40a5ec:	cmp    r14,r13
  40a5ef:	jne    40ab2e <main@@Base+0x3a5e>
  40a5f5:	jmp    40abad <main@@Base+0x3add>
  40a5fa:	mov    rdi,QWORD PTR [rsp+0x10]
  40a5ff:	mov    rsi,r14
  40a602:	mov    rdx,r13
  40a605:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40a60a:	mov    r14,rax
  40a60d:	cmp    r14,r13
  40a610:	je     40a65d <main@@Base+0x358d>
  40a612:	cmp    BYTE PTR [r14],0x3a
  40a616:	jne    40a65d <main@@Base+0x358d>
  40a618:	lea    r12,[r14+0x1]
  40a61c:	mov    rax,r13
  40a61f:	sub    rax,r12
  40a622:	cmp    rax,0x2
  40a626:	jl     40d129 <main@@Base+0x6059>
  40a62c:	cmp    BYTE PTR [r12],0x20
  40a631:	jg     40d13c <main@@Base+0x606c>
  40a637:	jne    40d129 <main@@Base+0x6059>
  40a63d:	cmp    BYTE PTR [r14+0x2],0x20
  40a642:	jle    40d129 <main@@Base+0x6059>
  40a648:	add    r14,0x2
  40a64c:	mov    r12,r14
  40a64f:	cmp    r15,r12
  40a652:	jne    40d145 <main@@Base+0x6075>
  40a658:	jmp    40f863 <main@@Base+0x8793>
  40a65d:	mov    ecx,0x4
  40a662:	mov    rdi,QWORD PTR [rsp+0x10]
  40a667:	mov    rsi,r14
  40a66a:	mov    rdx,r13
  40a66d:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  40a672:	jmp    40d139 <main@@Base+0x6069>
  40a677:	mov    rdi,r15
  40a67a:	mov    rsi,rax
  40a67d:	mov    rdx,r13
  40a680:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40a685:	cmp    r14,rax
  40a688:	je     408255 <main@@Base+0x1185>
  40a68e:	mov    rdi,r15
  40a691:	mov    rsi,rax
  40a694:	mov    rdx,r13
  40a697:	lea    rcx,[rsp+0x3c]
  40a69c:	call   427830 <flatcc_json_parser_build_string@@Base>
  40a6a1:	mov    r14,rax
  40a6a4:	cmp    DWORD PTR [rsp+0x3c],0x0
  40a6a9:	je     411d63 <main@@Base+0xac93>
  40a6af:	mov    rdi,QWORD PTR [r15]
  40a6b2:	mov    esi,0x3
  40a6b7:	call   421dc0 <flatcc_builder_table_add_offset@@Base>
  40a6bc:	test   rax,rax
  40a6bf:	je     411d63 <main@@Base+0xac93>
  40a6c5:	mov    ecx,DWORD PTR [rsp+0x3c]
  40a6c9:	mov    DWORD PTR [rax],ecx
  40a6cb:	jmp    40ce29 <main@@Base+0x5d59>
  40a6d0:	mov    rdi,r15
  40a6d3:	mov    rsi,r12
  40a6d6:	mov    rdx,r13
  40a6d9:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40a6de:	mov    r12,rax
  40a6e1:	cmp    r14,r12
  40a6e4:	je     40bddd <main@@Base+0x4d0d>
  40a6ea:	mov    rdi,QWORD PTR [r15]
  40a6ed:	mov    esi,0x1
  40a6f2:	mov    edx,0x1
  40a6f7:	mov    ecx,0xffffffff
  40a6fc:	call   420730 <flatcc_builder_start_vector@@Base>
  40a701:	test   eax,eax
  40a703:	jne    407c81 <main@@Base+0xbb1>
  40a709:	cmp    r12,r13
  40a70c:	je     40a743 <main@@Base+0x3673>
  40a70e:	cmp    BYTE PTR [r12],0x5b
  40a713:	jne    40a743 <main@@Base+0x3673>
  40a715:	lea    rax,[r12+0x1]
  40a71a:	mov    rcx,r13
  40a71d:	sub    rcx,rax
  40a720:	cmp    rcx,0x2
  40a724:	mov    rbp,QWORD PTR [rsp+0x20]
  40a729:	jl     40a789 <main@@Base+0x36b9>
  40a72b:	cmp    BYTE PTR [rax],0x20
  40a72e:	jg     40a797 <main@@Base+0x36c7>
  40a730:	jne    40a789 <main@@Base+0x36b9>
  40a732:	cmp    BYTE PTR [r12+0x2],0x20
  40a738:	jle    40a789 <main@@Base+0x36b9>
  40a73a:	add    r12,0x2
  40a73e:	mov    rax,r12
  40a741:	jmp    40a797 <main@@Base+0x36c7>
  40a743:	mov    ecx,0x16
  40a748:	mov    rdi,r15
  40a74b:	mov    rsi,r12
  40a74e:	mov    rdx,r13
  40a751:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  40a756:	mov    r14,rax
  40a759:	mov    rbp,QWORD PTR [rsp+0x20]
  40a75e:	movabs r12,0x7465737400000000
  40a768:	mov    rdi,QWORD PTR [r15]
  40a76b:	call   4218c0 <flatcc_builder_end_vector@@Base>
  40a770:	mov    DWORD PTR [rsp+0x3c],eax
  40a774:	test   eax,eax
  40a776:	je     411d63 <main@@Base+0xac93>
  40a77c:	mov    rdi,QWORD PTR [r15]
  40a77f:	mov    esi,0x1e
  40a784:	jmp    40b37b <main@@Base+0x42ab>
  40a789:	mov    rdi,r15
  40a78c:	mov    rsi,rax
  40a78f:	mov    rdx,r13
  40a792:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40a797:	mov    r12,r13
  40a79a:	cmp    rax,r13
  40a79d:	je     40a7e4 <main@@Base+0x3714>
  40a79f:	cmp    BYTE PTR [rax],0x5d
  40a7a2:	jne    40a7e1 <main@@Base+0x3711>
  40a7a4:	lea    r14,[rax+0x1]
  40a7a8:	mov    rcx,r13
  40a7ab:	sub    rcx,r14
  40a7ae:	cmp    rcx,0x2
  40a7b2:	movabs r12,0x7465737400000000
  40a7bc:	jl     40cd04 <main@@Base+0x5c34>
  40a7c2:	cmp    BYTE PTR [r14],0x20
  40a7c6:	jg     40a768 <main@@Base+0x3698>
  40a7c8:	jne    40cd04 <main@@Base+0x5c34>
  40a7ce:	cmp    BYTE PTR [rax+0x2],0x20
  40a7d2:	jle    40cd04 <main@@Base+0x5c34>
  40a7d8:	add    rax,0x2
  40a7dc:	mov    r14,rax
  40a7df:	jmp    40a768 <main@@Base+0x3698>
  40a7e1:	mov    r12,rax
  40a7e4:	mov    BYTE PTR [rsp+0x1c],0x0
  40a7e9:	mov    rdi,QWORD PTR [r15]
  40a7ec:	mov    esi,0x1
  40a7f1:	call   41fdc0 <flatcc_builder_extend_vector@@Base>
  40a7f6:	test   rax,rax
  40a7f9:	je     411d42 <main@@Base+0xac72>
  40a7ff:	mov    r14,rax
  40a802:	mov    QWORD PTR [rsp+0x30],0x0
  40a80b:	mov    DWORD PTR [rsp+0x40],0x0
  40a813:	mov    BYTE PTR [rsp+0x1c],0x0
  40a818:	mov    rdx,QWORD PTR [rsp+0x8]
  40a81d:	cmp    r12,rdx
  40a820:	je     40a84a <main@@Base+0x377a>
  40a822:	mov    rdi,r15
  40a825:	mov    rsi,r12
  40a828:	lea    rcx,[rsp+0x40]
  40a82d:	lea    r8,[rsp+0x30]
  40a832:	call   427360 <flatcc_json_parser_integer@@Base>
  40a837:	cmp    rax,r12
  40a83a:	je     40a856 <main@@Base+0x3786>
  40a83c:	cmp    DWORD PTR [rsp+0x40],0x0
  40a841:	je     40a862 <main@@Base+0x3792>
  40a843:	mov    ecx,0x8
  40a848:	jmp    40a879 <main@@Base+0x37a9>
  40a84a:	xor    ecx,ecx
  40a84c:	mov    rax,rdx
  40a84f:	cmp    r12,rax
  40a852:	jne    40a8c6 <main@@Base+0x37f6>
  40a854:	jmp    40a890 <main@@Base+0x37c0>
  40a856:	xor    ecx,ecx
  40a858:	mov    rax,r12
  40a85b:	cmp    r12,rax
  40a85e:	jne    40a8c6 <main@@Base+0x37f6>
  40a860:	jmp    40a890 <main@@Base+0x37c0>
  40a862:	mov    rcx,QWORD PTR [rsp+0x30]
  40a867:	cmp    rcx,0x100
  40a86e:	jb     40a98f <main@@Base+0x38bf>
  40a874:	mov    ecx,0x7
  40a879:	mov    rdi,r15
  40a87c:	mov    rsi,rax
  40a87f:	mov    rdx,QWORD PTR [rsp+0x8]
  40a884:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  40a889:	xor    ecx,ecx
  40a88b:	cmp    r12,rax
  40a88e:	jne    40a8c6 <main@@Base+0x37f6>
  40a890:	mov    rdi,r15
  40a893:	mov    rsi,r12
  40a896:	mov    rbx,QWORD PTR [rsp+0x8]
  40a89b:	mov    rdx,rbx
  40a89e:	lea    rcx,[rip+0x3983b]        # 4440e0 <__data_start@@Base+0x30>
  40a8a5:	lea    r8,[rsp+0x1c]
  40a8aa:	call   413d70 <main@@Base+0xcca0>
  40a8af:	cmp    rax,r12
  40a8b2:	je     411d6b <main@@Base+0xac9b>
  40a8b8:	cmp    rax,rbx
  40a8bb:	je     411d6b <main@@Base+0xac9b>
  40a8c1:	movzx  ecx,BYTE PTR [rsp+0x1c]
  40a8c6:	mov    BYTE PTR [r14],cl
  40a8c9:	mov    r13,QWORD PTR [rsp+0x8]
  40a8ce:	mov    rcx,r13
  40a8d1:	sub    rcx,rax
  40a8d4:	cmp    rcx,0x2
  40a8d8:	movabs r12,0x7465737400000000
  40a8e2:	jl     40a8ff <main@@Base+0x382f>
  40a8e4:	cmp    BYTE PTR [rax],0x20
  40a8e7:	jg     40a90d <main@@Base+0x383d>
  40a8e9:	jne    40a8ff <main@@Base+0x382f>
  40a8eb:	cmp    BYTE PTR [rax+0x1],0x20
  40a8ef:	jle    40a8ff <main@@Base+0x382f>
  40a8f1:	add    rax,0x1
  40a8f5:	cmp    rax,r13
  40a8f8:	jne    40a916 <main@@Base+0x3846>
  40a8fa:	jmp    40cc43 <main@@Base+0x5b73>
  40a8ff:	mov    rdi,r15
  40a902:	mov    rsi,rax
  40a905:	mov    rdx,r13
  40a908:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40a90d:	cmp    rax,r13
  40a910:	je     40cc43 <main@@Base+0x5b73>
  40a916:	movzx  ecx,BYTE PTR [rax]
  40a919:	cmp    cl,0x2c
  40a91c:	jne    40ccdb <main@@Base+0x5c0b>
  40a922:	lea    r12,[rax+0x1]
  40a926:	mov    rcx,r13
  40a929:	sub    rcx,r12
  40a92c:	cmp    rcx,0x2
  40a930:	jl     40a947 <main@@Base+0x3877>
  40a932:	cmp    BYTE PTR [r12],0x20
  40a937:	jg     40a958 <main@@Base+0x3888>
  40a939:	jne    40a947 <main@@Base+0x3877>
  40a93b:	cmp    BYTE PTR [rax+0x2],0x20
  40a93f:	jle    40a947 <main@@Base+0x3877>
  40a941:	add    rax,0x2
  40a945:	jmp    40a955 <main@@Base+0x3885>
  40a947:	mov    rdi,r15
  40a94a:	mov    rsi,r12
  40a94d:	mov    rdx,r13
  40a950:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40a955:	mov    r12,rax
  40a958:	cmp    r12,r13
  40a95b:	je     40cd1a <main@@Base+0x5c4a>
  40a961:	cmp    BYTE PTR [r12],0x5d
  40a966:	je     40cd3f <main@@Base+0x5c6f>
  40a96c:	mov    BYTE PTR [rsp+0x1c],0x0
  40a971:	mov    rdi,QWORD PTR [r15]
  40a974:	mov    esi,0x1
  40a979:	call   41fdc0 <flatcc_builder_extend_vector@@Base>
  40a97e:	mov    r14,rax
  40a981:	test   rax,rax
  40a984:	jne    40a802 <main@@Base+0x3732>
  40a98a:	jmp    411d42 <main@@Base+0xac72>
  40a98f:	mov    BYTE PTR [rsp+0x1c],cl
  40a993:	cmp    r12,rax
  40a996:	jne    40a8c6 <main@@Base+0x37f6>
  40a99c:	jmp    40a890 <main@@Base+0x37c0>
  40a9a1:	mov    rdi,QWORD PTR [rsp+0x10]
  40a9a6:	mov    rsi,rax
  40a9a9:	mov    rdx,QWORD PTR [rsp+0x8]
  40a9ae:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40a9b3:	cmp    r14,rax
  40a9b6:	je     40a3cb <main@@Base+0x32fb>
  40a9bc:	mov    r9,QWORD PTR [rsp+0x58]
  40a9c1:	sub    rsp,0x8
  40a9c5:	mov    ecx,0x0
  40a9ca:	mov    r8d,0x8
  40a9d0:	mov    r15,QWORD PTR [rsp+0x18]
  40a9d5:	mov    rdi,r15
  40a9d8:	mov    rsi,rax
  40a9db:	mov    r13,QWORD PTR [rsp+0x10]
  40a9e0:	mov    rdx,r13
  40a9e3:	lea    rax,[rip+0x9e46]        # 414830 <main@@Base+0xd760>
  40a9ea:	push   rax
  40a9eb:	call   427bd0 <flatcc_json_parser_union@@Base>
  40a9f0:	add    rsp,0x10
  40a9f4:	jmp    40f876 <main@@Base+0x87a6>
  40a9f9:	mov    r14,r13
  40a9fc:	jmp    409c2d <main@@Base+0x2b5d>
  40aa01:	cmp    cl,0x5d
  40aa04:	jne    40caf2 <main@@Base+0x5a22>
  40aa0a:	lea    r14,[rax+0x1]
  40aa0e:	mov    rcx,r13
  40aa11:	sub    rcx,r14
  40aa14:	cmp    rcx,0x2
  40aa18:	jl     40aa2a <main@@Base+0x395a>
  40aa1a:	cmp    BYTE PTR [r14],0x20
  40aa1e:	jg     409c2d <main@@Base+0x2b5d>
  40aa24:	je     409c93 <main@@Base+0x2bc3>
  40aa2a:	mov    rdi,r15
  40aa2d:	mov    rsi,r14
  40aa30:	mov    rdx,r13
  40aa33:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40aa38:	mov    r14,rax
  40aa3b:	jmp    409c2d <main@@Base+0x2b5d>
  40aa40:	mov    rdi,QWORD PTR [rsp+0x10]
  40aa45:	mov    rsi,r14
  40aa48:	mov    rdx,r13
  40aa4b:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40aa50:	mov    r14,rax
  40aa53:	cmp    r14,r13
  40aa56:	je     40ab79 <main@@Base+0x3aa9>
  40aa5c:	cmp    BYTE PTR [r14],0x3a
  40aa60:	jne    40ab79 <main@@Base+0x3aa9>
  40aa66:	lea    r12,[r14+0x1]
  40aa6a:	mov    rax,r13
  40aa6d:	sub    rax,r12
  40aa70:	cmp    rax,0x2
  40aa74:	jl     40d25a <main@@Base+0x618a>
  40aa7a:	cmp    BYTE PTR [r12],0x20
  40aa7f:	jg     40d26d <main@@Base+0x619d>
  40aa85:	jne    40d25a <main@@Base+0x618a>
  40aa8b:	cmp    BYTE PTR [r14+0x2],0x20
  40aa90:	jle    40d25a <main@@Base+0x618a>
  40aa96:	add    r14,0x2
  40aa9a:	mov    r12,r14
  40aa9d:	cmp    r15,r12
  40aaa0:	jne    40d276 <main@@Base+0x61a6>
  40aaa6:	jmp    40f863 <main@@Base+0x8793>
  40aaab:	mov    rdi,QWORD PTR [rsp+0x10]
  40aab0:	mov    rsi,r14
  40aab3:	mov    rdx,r13
  40aab6:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40aabb:	mov    r14,rax
  40aabe:	cmp    r14,r13
  40aac1:	je     40ab93 <main@@Base+0x3ac3>
  40aac7:	cmp    BYTE PTR [r14],0x3a
  40aacb:	jne    40ab93 <main@@Base+0x3ac3>
  40aad1:	lea    r12,[r14+0x1]
  40aad5:	mov    rax,r13
  40aad8:	sub    rax,r12
  40aadb:	cmp    rax,0x2
  40aadf:	jl     40d31e <main@@Base+0x624e>
  40aae5:	cmp    BYTE PTR [r12],0x20
  40aaea:	jg     40d331 <main@@Base+0x6261>
  40aaf0:	jne    40d31e <main@@Base+0x624e>
  40aaf6:	cmp    BYTE PTR [r14+0x2],0x20
  40aafb:	jle    40d31e <main@@Base+0x624e>
  40ab01:	add    r14,0x2
  40ab05:	mov    r12,r14
  40ab08:	cmp    r15,r12
  40ab0b:	jne    40d33a <main@@Base+0x626a>
  40ab11:	jmp    40f863 <main@@Base+0x8793>
  40ab16:	mov    rdi,QWORD PTR [rsp+0x10]
  40ab1b:	mov    rsi,r14
  40ab1e:	mov    rdx,r13
  40ab21:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40ab26:	mov    r14,rax
  40ab29:	cmp    r14,r13
  40ab2c:	je     40abad <main@@Base+0x3add>
  40ab2e:	cmp    BYTE PTR [r14],0x3a
  40ab32:	jne    40abad <main@@Base+0x3add>
  40ab34:	lea    r12,[r14+0x1]
  40ab38:	mov    rax,r13
  40ab3b:	sub    rax,r12
  40ab3e:	cmp    rax,0x2
  40ab42:	jl     40d3f1 <main@@Base+0x6321>
  40ab48:	cmp    BYTE PTR [r12],0x20
  40ab4d:	jg     40d404 <main@@Base+0x6334>
  40ab53:	jne    40d3f1 <main@@Base+0x6321>
  40ab59:	cmp    BYTE PTR [r14+0x2],0x20
  40ab5e:	jle    40d3f1 <main@@Base+0x6321>
  40ab64:	add    r14,0x2
  40ab68:	mov    r12,r14
  40ab6b:	cmp    r15,r12
  40ab6e:	jne    40d40d <main@@Base+0x633d>
  40ab74:	jmp    40f863 <main@@Base+0x8793>
  40ab79:	mov    ecx,0x4
  40ab7e:	mov    rdi,QWORD PTR [rsp+0x10]
  40ab83:	mov    rsi,r14
  40ab86:	mov    rdx,r13
  40ab89:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  40ab8e:	jmp    40d26a <main@@Base+0x619a>
  40ab93:	mov    ecx,0x4
  40ab98:	mov    rdi,QWORD PTR [rsp+0x10]
  40ab9d:	mov    rsi,r14
  40aba0:	mov    rdx,r13
  40aba3:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  40aba8:	jmp    40d32e <main@@Base+0x625e>
  40abad:	mov    ecx,0x4
  40abb2:	mov    rdi,QWORD PTR [rsp+0x10]
  40abb7:	mov    rsi,r14
  40abba:	mov    rdx,r13
  40abbd:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  40abc2:	jmp    40d401 <main@@Base+0x6331>
  40abc7:	mov    ecx,0x9
  40abcc:	mov    rdi,r15
  40abcf:	mov    rsi,r13
  40abd2:	mov    rdx,r13
  40abd5:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  40abda:	jmp    40b7e0 <main@@Base+0x4710>
  40abdf:	mov    r12,r14
  40abe2:	cmp    al,0x22
  40abe4:	jne    40d4ee <main@@Base+0x641e>
  40abea:	lea    rsi,[r14+0x5]
  40abee:	mov    rbx,QWORD PTR [rsp+0x8]
  40abf3:	mov    rax,rbx
  40abf6:	sub    rax,rsi
  40abf9:	cmp    rax,0x2
  40abfd:	jl     40ad5b <main@@Base+0x3c8b>
  40ac03:	cmp    BYTE PTR [rsi],0x20
  40ac06:	jg     40ad69 <main@@Base+0x3c99>
  40ac0c:	jne    40ad5b <main@@Base+0x3c8b>
  40ac12:	cmp    BYTE PTR [rsi+0x1],0x20
  40ac16:	jle    40ad5b <main@@Base+0x3c8b>
  40ac1c:	add    rsi,0x1
  40ac20:	cmp    rsi,rbx
  40ac23:	jne    40ad72 <main@@Base+0x3ca2>
  40ac29:	jmp    40ae16 <main@@Base+0x3d46>
  40ac2e:	mov    rbx,r14
  40ac31:	cmp    al,0x22
  40ac33:	jne    40d64f <main@@Base+0x657f>
  40ac39:	lea    rsi,[r14+0x6]
  40ac3d:	mov    rbx,QWORD PTR [rsp+0x8]
  40ac42:	mov    rax,rbx
  40ac45:	sub    rax,rsi
  40ac48:	cmp    rax,0x2
  40ac4c:	jl     40adbc <main@@Base+0x3cec>
  40ac52:	cmp    BYTE PTR [rsi],0x20
  40ac55:	jg     40adca <main@@Base+0x3cfa>
  40ac5b:	jne    40adbc <main@@Base+0x3cec>
  40ac61:	cmp    BYTE PTR [rsi+0x1],0x20
  40ac65:	jle    40adbc <main@@Base+0x3cec>
  40ac6b:	add    rsi,0x1
  40ac6f:	cmp    rsi,rbx
  40ac72:	jne    40adcf <main@@Base+0x3cff>
  40ac78:	jmp    40ae2b <main@@Base+0x3d5b>
  40ac7d:	cmp    al,0x22
  40ac7f:	jne    40aee8 <main@@Base+0x3e18>
  40ac85:	lea    rsi,[r14+0x11]
  40ac89:	mov    rbx,QWORD PTR [rsp+0x8]
  40ac8e:	mov    rax,rbx
  40ac91:	sub    rax,rsi
  40ac94:	cmp    rax,0x2
  40ac98:	jl     40ae89 <main@@Base+0x3db9>
  40ac9e:	cmp    BYTE PTR [rsi],0x20
  40aca1:	jg     40ae99 <main@@Base+0x3dc9>
  40aca7:	jne    40ae89 <main@@Base+0x3db9>
  40acad:	cmp    BYTE PTR [rsi+0x1],0x20
  40acb1:	jle    40ae89 <main@@Base+0x3db9>
  40acb7:	add    rsi,0x1
  40acbb:	cmp    rsi,rbx
  40acbe:	jne    40aea2 <main@@Base+0x3dd2>
  40acc4:	jmp    40b0b0 <main@@Base+0x3fe0>
  40acc9:	cmp    al,0x22
  40accb:	jne    40f863 <main@@Base+0x8793>
  40acd1:	add    r14,0xa
  40acd5:	mov    rax,r13
  40acd8:	sub    rax,r14
  40acdb:	cmp    rax,0x2
  40acdf:	jl     40afe2 <main@@Base+0x3f12>
  40ace5:	cmp    BYTE PTR [r14],0x20
  40ace9:	jg     40aff5 <main@@Base+0x3f25>
  40acef:	jne    40afe2 <main@@Base+0x3f12>
  40acf5:	cmp    BYTE PTR [r14+0x1],0x20
  40acfa:	jle    40afe2 <main@@Base+0x3f12>
  40ad00:	add    r14,0x1
  40ad04:	cmp    r14,r13
  40ad07:	jne    40affe <main@@Base+0x3f2e>
  40ad0d:	jmp    40b0c7 <main@@Base+0x3ff7>
  40ad12:	cmp    al,0x22
  40ad14:	jne    40f863 <main@@Base+0x8793>
  40ad1a:	add    r14,0xa
  40ad1e:	mov    rax,r13
  40ad21:	sub    rax,r14
  40ad24:	cmp    rax,0x2
  40ad28:	jl     40b04d <main@@Base+0x3f7d>
  40ad2e:	cmp    BYTE PTR [r14],0x20
  40ad32:	jg     40b060 <main@@Base+0x3f90>
  40ad38:	jne    40b04d <main@@Base+0x3f7d>
  40ad3e:	cmp    BYTE PTR [r14+0x1],0x20
  40ad43:	jle    40b04d <main@@Base+0x3f7d>
  40ad49:	add    r14,0x1
  40ad4d:	cmp    r14,r13
  40ad50:	jne    40b065 <main@@Base+0x3f95>
  40ad56:	jmp    40b0e1 <main@@Base+0x4011>
  40ad5b:	mov    rdi,r15
  40ad5e:	mov    rdx,rbx
  40ad61:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40ad66:	mov    rsi,rax
  40ad69:	cmp    rsi,rbx
  40ad6c:	je     40ae16 <main@@Base+0x3d46>
  40ad72:	cmp    BYTE PTR [rsi],0x3a
  40ad75:	jne    40ae16 <main@@Base+0x3d46>
  40ad7b:	lea    r12,[rsi+0x1]
  40ad7f:	sub    rbx,r12
  40ad82:	cmp    rbx,0x2
  40ad86:	jl     40d4db <main@@Base+0x640b>
  40ad8c:	cmp    BYTE PTR [r12],0x20
  40ad91:	jg     40d4ee <main@@Base+0x641e>
  40ad97:	jne    40d4db <main@@Base+0x640b>
  40ad9d:	cmp    BYTE PTR [rsi+0x2],0x20
  40ada1:	jle    40d4db <main@@Base+0x640b>
  40ada7:	add    rsi,0x2
  40adab:	mov    r12,rsi
  40adae:	cmp    r14,r12
  40adb1:	jne    40d4f3 <main@@Base+0x6423>
  40adb7:	jmp    40d553 <main@@Base+0x6483>
  40adbc:	mov    rdi,r15
  40adbf:	mov    rdx,rbx
  40adc2:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40adc7:	mov    rsi,rax
  40adca:	cmp    rsi,rbx
  40adcd:	je     40ae2b <main@@Base+0x3d5b>
  40adcf:	cmp    BYTE PTR [rsi],0x3a
  40add2:	jne    40ae2b <main@@Base+0x3d5b>
  40add4:	mov    rax,rbx
  40add7:	lea    rbx,[rsi+0x1]
  40addb:	sub    rax,rbx
  40adde:	cmp    rax,0x2
  40ade2:	jl     40d63c <main@@Base+0x656c>
  40ade8:	cmp    BYTE PTR [rbx],0x20
  40adeb:	jg     40d64f <main@@Base+0x657f>
  40adf1:	jne    40d63c <main@@Base+0x656c>
  40adf7:	cmp    BYTE PTR [rsi+0x2],0x20
  40adfb:	jle    40d63c <main@@Base+0x656c>
  40ae01:	add    rsi,0x2
  40ae05:	mov    rbx,rsi
  40ae08:	cmp    r14,rbx
  40ae0b:	jne    40d658 <main@@Base+0x6588>
  40ae11:	jmp    40b24f <main@@Base+0x417f>
  40ae16:	mov    ecx,0x4
  40ae1b:	mov    rdi,r15
  40ae1e:	mov    rdx,rbx
  40ae21:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  40ae26:	jmp    40d4eb <main@@Base+0x641b>
  40ae2b:	mov    ecx,0x4
  40ae30:	mov    rdi,r15
  40ae33:	mov    rdx,rbx
  40ae36:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  40ae3b:	jmp    40d64c <main@@Base+0x657c>
  40ae40:	cmp    al,0x22
  40ae42:	jne    40b158 <main@@Base+0x4088>
  40ae48:	add    r14,0x16
  40ae4c:	mov    rax,r13
  40ae4f:	sub    rax,r14
  40ae52:	cmp    rax,0x2
  40ae56:	jl     40b0fb <main@@Base+0x402b>
  40ae5c:	cmp    BYTE PTR [r14],0x20
  40ae60:	jg     40b10c <main@@Base+0x403c>
  40ae66:	jne    40b0fb <main@@Base+0x402b>
  40ae6c:	cmp    BYTE PTR [r14+0x1],0x20
  40ae71:	jle    40b0fb <main@@Base+0x402b>
  40ae77:	add    r14,0x1
  40ae7b:	cmp    r14,r13
  40ae7e:	jne    40b111 <main@@Base+0x4041>
  40ae84:	jmp    40b163 <main@@Base+0x4093>
  40ae89:	mov    rdi,QWORD PTR [rsp+0x10]
  40ae8e:	mov    rdx,rbx
  40ae91:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40ae96:	mov    rsi,rax
  40ae99:	cmp    rsi,rbx
  40ae9c:	je     40b0b0 <main@@Base+0x3fe0>
  40aea2:	cmp    BYTE PTR [rsi],0x3a
  40aea5:	jne    40b0b0 <main@@Base+0x3fe0>
  40aeab:	mov    rax,rbx
  40aeae:	lea    rbx,[rsi+0x1]
  40aeb2:	sub    rax,rbx
  40aeb5:	cmp    rax,0x2
  40aeb9:	jl     40d70d <main@@Base+0x663d>
  40aebf:	cmp    BYTE PTR [rbx],0x20
  40aec2:	jg     40d722 <main@@Base+0x6652>
  40aec8:	jne    40d70d <main@@Base+0x663d>
  40aece:	cmp    BYTE PTR [rsi+0x2],0x20
  40aed2:	jle    40d70d <main@@Base+0x663d>
  40aed8:	add    rsi,0x2
  40aedc:	mov    rbx,rsi
  40aedf:	cmp    r15,rbx
  40aee2:	jne    40d72b <main@@Base+0x665b>
  40aee8:	lea    r15,[r14+0x10]
  40aeec:	mov    r13,QWORD PTR [rsp+0x8]
  40aef1:	mov    rax,r13
  40aef4:	sub    rax,r15
  40aef7:	cmp    rax,0x8
  40aefb:	jb     40af07 <main@@Base+0x3e37>
  40aefd:	movbe  rcx,QWORD PTR [r15]
  40af02:	jmp    40af98 <main@@Base+0x3ec8>
  40af07:	mov    ecx,eax
  40af09:	and    cl,0xf
  40af0c:	add    cl,0xff
  40af0f:	cmp    cl,0x7
  40af12:	ja     40ce13 <main@@Base+0x5d43>
  40af18:	movzx  ecx,cl
  40af1b:	lea    rdx,[rip+0x2a1fe]        # 435120 <_IO_stdin_used@@Base+0x120>
  40af22:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  40af26:	add    rcx,rdx
  40af29:	xor    r8d,r8d
  40af2c:	xor    r9d,r9d
  40af2f:	xor    edx,edx
  40af31:	xor    esi,esi
  40af33:	xor    ebx,ebx
  40af35:	xor    edi,edi
  40af37:	xor    ebp,ebp
  40af39:	jmp    rcx
  40af3b:	movsx  r8,BYTE PTR [r14+0x17]
  40af40:	movsx  r9,BYTE PTR [r14+0x16]
  40af45:	shl    r9,0x8
  40af49:	or     r9,r8
  40af4c:	movsx  rdx,BYTE PTR [r14+0x15]
  40af51:	shl    rdx,0x10
  40af55:	or     rdx,r9
  40af58:	movsx  rsi,BYTE PTR [r14+0x14]
  40af5d:	shl    rsi,0x18
  40af61:	or     rsi,rdx
  40af64:	movsx  rbx,BYTE PTR [r14+0x13]
  40af69:	shl    rbx,0x20
  40af6d:	or     rbx,rsi
  40af70:	movsx  rdi,BYTE PTR [r14+0x12]
  40af75:	shl    rdi,0x28
  40af79:	or     rdi,rbx
  40af7c:	movsx  rbp,BYTE PTR [r14+0x11]
  40af81:	shl    rbp,0x30
  40af85:	or     rbp,rdi
  40af88:	movzx  ecx,BYTE PTR [r15]
  40af8c:	shl    rcx,0x38
  40af90:	or     rcx,rbp
  40af93:	mov    r13,QWORD PTR [rsp+0x8]
  40af98:	shr    rcx,0x38
  40af9c:	cmp    rcx,0x61
  40afa0:	jne    40ce13 <main@@Base+0x5d43>
  40afa6:	cmp    rax,0x2
  40afaa:	jl     40fb4d <main@@Base+0x8a7d>
  40afb0:	mov    rax,QWORD PTR [rsp+0x28]
  40afb5:	cmp    DWORD PTR [rax],0x0
  40afb8:	mov    al,BYTE PTR [r14+0x11]
  40afbc:	je     40d0b2 <main@@Base+0x5fe2>
  40afc2:	cmp    al,0x21
  40afc4:	jl     40afce <main@@Base+0x3efe>
  40afc6:	cmp    al,0x3a
  40afc8:	jne    40fb4d <main@@Base+0x8a7d>
  40afce:	add    r14,0x11
  40afd2:	mov    rax,QWORD PTR [rsp+0x28]
  40afd7:	mov    DWORD PTR [rax],0x0
  40afdd:	jmp    40d0be <main@@Base+0x5fee>
  40afe2:	mov    rdi,QWORD PTR [rsp+0x10]
  40afe7:	mov    rsi,r14
  40afea:	mov    rdx,r13
  40afed:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40aff2:	mov    r14,rax
  40aff5:	cmp    r14,r13
  40aff8:	je     40b0c7 <main@@Base+0x3ff7>
  40affe:	cmp    BYTE PTR [r14],0x3a
  40b002:	jne    40b0c7 <main@@Base+0x3ff7>
  40b008:	lea    r12,[r14+0x1]
  40b00c:	mov    rax,r13
  40b00f:	sub    rax,r12
  40b012:	cmp    rax,0x2
  40b016:	jl     40d7b2 <main@@Base+0x66e2>
  40b01c:	cmp    BYTE PTR [r12],0x20
  40b021:	jg     40d7c5 <main@@Base+0x66f5>
  40b027:	jne    40d7b2 <main@@Base+0x66e2>
  40b02d:	cmp    BYTE PTR [r14+0x2],0x20
  40b032:	jle    40d7b2 <main@@Base+0x66e2>
  40b038:	add    r14,0x2
  40b03c:	mov    r12,r14
  40b03f:	cmp    r15,r12
  40b042:	jne    40d7ce <main@@Base+0x66fe>
  40b048:	jmp    40f863 <main@@Base+0x8793>
  40b04d:	mov    rdi,QWORD PTR [rsp+0x10]
  40b052:	mov    rsi,r14
  40b055:	mov    rdx,r13
  40b058:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40b05d:	mov    r14,rax
  40b060:	cmp    r14,r13
  40b063:	je     40b0e1 <main@@Base+0x4011>
  40b065:	cmp    BYTE PTR [r14],0x3a
  40b069:	jne    40b0e1 <main@@Base+0x4011>
  40b06b:	lea    r12,[r14+0x1]
  40b06f:	mov    rax,r13
  40b072:	sub    rax,r12
  40b075:	cmp    rax,0x2
  40b079:	jl     40d83d <main@@Base+0x676d>
  40b07f:	cmp    BYTE PTR [r12],0x20
  40b084:	jg     40d850 <main@@Base+0x6780>
  40b08a:	jne    40d83d <main@@Base+0x676d>
  40b090:	cmp    BYTE PTR [r14+0x2],0x20
  40b095:	jle    40d83d <main@@Base+0x676d>
  40b09b:	add    r14,0x2
  40b09f:	mov    r12,r14
  40b0a2:	cmp    r15,r12
  40b0a5:	jne    40d859 <main@@Base+0x6789>
  40b0ab:	jmp    40f863 <main@@Base+0x8793>
  40b0b0:	mov    ecx,0x4
  40b0b5:	mov    rdi,QWORD PTR [rsp+0x10]
  40b0ba:	mov    rdx,rbx
  40b0bd:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  40b0c2:	jmp    40d71f <main@@Base+0x664f>
  40b0c7:	mov    ecx,0x4
  40b0cc:	mov    rdi,QWORD PTR [rsp+0x10]
  40b0d1:	mov    rsi,r14
  40b0d4:	mov    rdx,r13
  40b0d7:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  40b0dc:	jmp    40d7c2 <main@@Base+0x66f2>
  40b0e1:	mov    ecx,0x4
  40b0e6:	mov    rdi,QWORD PTR [rsp+0x10]
  40b0eb:	mov    rsi,r14
  40b0ee:	mov    rdx,r13
  40b0f1:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  40b0f6:	jmp    40d84d <main@@Base+0x677d>
  40b0fb:	mov    rdi,r15
  40b0fe:	mov    rsi,r14
  40b101:	mov    rdx,r13
  40b104:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40b109:	mov    r14,rax
  40b10c:	cmp    r14,r13
  40b10f:	je     40b163 <main@@Base+0x4093>
  40b111:	cmp    BYTE PTR [r14],0x3a
  40b115:	jne    40b163 <main@@Base+0x4093>
  40b117:	mov    rcx,r14
  40b11a:	lea    r14,[r14+0x1]
  40b11e:	mov    rax,r13
  40b121:	sub    rax,r14
  40b124:	cmp    rax,0x2
  40b128:	jl     40d983 <main@@Base+0x68b3>
  40b12e:	cmp    BYTE PTR [r14],0x20
  40b132:	jg     40d994 <main@@Base+0x68c4>
  40b138:	jne    40d983 <main@@Base+0x68b3>
  40b13e:	cmp    BYTE PTR [rcx+0x2],0x20
  40b142:	jle    40d983 <main@@Base+0x68b3>
  40b148:	mov    r14,rcx
  40b14b:	add    r14,0x2
  40b14f:	cmp    r12,r14
  40b152:	jne    40d99d <main@@Base+0x68cd>
  40b158:	mov    rdi,r15
  40b15b:	mov    rsi,r12
  40b15e:	jmp    40f86e <main@@Base+0x879e>
  40b163:	mov    ecx,0x4
  40b168:	mov    rdi,r15
  40b16b:	mov    rsi,r14
  40b16e:	mov    rdx,r13
  40b171:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  40b176:	jmp    40d991 <main@@Base+0x68c1>
  40b17b:	mov    rdi,r14
  40b17e:	mov    rsi,r12
  40b181:	mov    rdx,QWORD PTR [rsp+0x8]
  40b186:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40b18b:	mov    r12,rax
  40b18e:	mov    r14,r15
  40b191:	cmp    r14,r12
  40b194:	je     40b214 <main@@Base+0x4144>
  40b196:	mov    r15,QWORD PTR [rsp+0x10]
  40b19b:	mov    rdi,QWORD PTR [r15]
  40b19e:	mov    esi,0x4
  40b1a3:	mov    edx,0x2
  40b1a8:	mov    ecx,0x3fffffff
  40b1ad:	call   420730 <flatcc_builder_start_vector@@Base>
  40b1b2:	test   eax,eax
  40b1b4:	jne    411d42 <main@@Base+0xac72>
  40b1ba:	mov    r13,QWORD PTR [rsp+0x8]
  40b1bf:	cmp    r12,r13
  40b1c2:	je     40b33a <main@@Base+0x426a>
  40b1c8:	cmp    BYTE PTR [r12],0x5b
  40b1cd:	jne    40b33a <main@@Base+0x426a>
  40b1d3:	lea    rax,[r12+0x1]
  40b1d8:	mov    rcx,r13
  40b1db:	sub    rcx,rax
  40b1de:	cmp    rcx,0x2
  40b1e2:	mov    rbp,QWORD PTR [rsp+0x20]
  40b1e7:	jl     40b394 <main@@Base+0x42c4>
  40b1ed:	cmp    BYTE PTR [rax],0x20
  40b1f0:	jg     40b3a2 <main@@Base+0x42d2>
  40b1f6:	jne    40b394 <main@@Base+0x42c4>
  40b1fc:	cmp    BYTE PTR [r12+0x2],0x20
  40b202:	jle    40b394 <main@@Base+0x42c4>
  40b208:	add    r12,0x2
  40b20c:	mov    rax,r12
  40b20f:	jmp    40b3a2 <main@@Base+0x42d2>
  40b214:	movabs r12,0x7465737400000000
  40b21e:	lea    rax,[r12+0x5f747970]
  40b226:	cmp    rbx,rax
  40b229:	jne    40b24a <main@@Base+0x417a>
  40b22b:	lea    r15,[r14+0x8]
  40b22f:	mov    r13,QWORD PTR [rsp+0x8]
  40b234:	mov    rax,r13
  40b237:	sub    rax,r15
  40b23a:	cmp    rax,0x8
  40b23e:	jb     40b25f <main@@Base+0x418f>
  40b240:	movbe  rcx,QWORD PTR [r15]
  40b245:	jmp    40b2f0 <main@@Base+0x4220>
  40b24a:	mov    r15,QWORD PTR [rsp+0x10]
  40b24f:	mov    rdi,r15
  40b252:	mov    rsi,r14
  40b255:	mov    r13,QWORD PTR [rsp+0x8]
  40b25a:	jmp    40ce1e <main@@Base+0x5d4e>
  40b25f:	mov    ecx,eax
  40b261:	and    cl,0xf
  40b264:	add    cl,0xff
  40b267:	cmp    cl,0x7
  40b26a:	ja     40ce13 <main@@Base+0x5d43>
  40b270:	movzx  ecx,cl
  40b273:	lea    rdx,[rip+0x2a006]        # 435280 <_IO_stdin_used@@Base+0x280>
  40b27a:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  40b27e:	add    rcx,rdx
  40b281:	xor    r8d,r8d
  40b284:	xor    r9d,r9d
  40b287:	xor    edx,edx
  40b289:	xor    esi,esi
  40b28b:	xor    ebx,ebx
  40b28d:	xor    edi,edi
  40b28f:	xor    ebp,ebp
  40b291:	jmp    rcx
  40b293:	movsx  r8,BYTE PTR [r14+0xf]
  40b298:	movsx  r9,BYTE PTR [r14+0xe]
  40b29d:	shl    r9,0x8
  40b2a1:	or     r9,r8
  40b2a4:	movsx  rdx,BYTE PTR [r14+0xd]
  40b2a9:	shl    rdx,0x10
  40b2ad:	or     rdx,r9
  40b2b0:	movsx  rsi,BYTE PTR [r14+0xc]
  40b2b5:	shl    rsi,0x18
  40b2b9:	or     rsi,rdx
  40b2bc:	movsx  rbx,BYTE PTR [r14+0xb]
  40b2c1:	shl    rbx,0x20
  40b2c5:	or     rbx,rsi
  40b2c8:	movsx  rdi,BYTE PTR [r14+0xa]
  40b2cd:	shl    rdi,0x28
  40b2d1:	or     rdi,rbx
  40b2d4:	movsx  rbp,BYTE PTR [r14+0x9]
  40b2d9:	shl    rbp,0x30
  40b2dd:	or     rbp,rdi
  40b2e0:	movzx  ecx,BYTE PTR [r15]
  40b2e4:	shl    rcx,0x38
  40b2e8:	or     rcx,rbp
  40b2eb:	mov    r13,QWORD PTR [rsp+0x8]
  40b2f0:	shr    rcx,0x38
  40b2f4:	cmp    rcx,0x65
  40b2f8:	jne    40ce13 <main@@Base+0x5d43>
  40b2fe:	cmp    rax,0x2
  40b302:	jl     40ce13 <main@@Base+0x5d43>
  40b308:	mov    rax,QWORD PTR [rsp+0x28]
  40b30d:	cmp    DWORD PTR [rax],0x0
  40b310:	mov    al,BYTE PTR [r14+0x9]
  40b314:	je     40b3f7 <main@@Base+0x4327>
  40b31a:	cmp    al,0x21
  40b31c:	jl     40b326 <main@@Base+0x4256>
  40b31e:	cmp    al,0x3a
  40b320:	jne    40ce13 <main@@Base+0x5d43>
  40b326:	add    r14,0x9
  40b32a:	mov    rax,QWORD PTR [rsp+0x28]
  40b32f:	mov    DWORD PTR [rax],0x0
  40b335:	jmp    40b403 <main@@Base+0x4333>
  40b33a:	mov    ecx,0x16
  40b33f:	mov    rdi,r15
  40b342:	mov    rsi,r12
  40b345:	mov    rdx,r13
  40b348:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  40b34d:	mov    r14,rax
  40b350:	mov    rbp,QWORD PTR [rsp+0x20]
  40b355:	movabs r12,0x7465737400000000
  40b35f:	mov    rdi,QWORD PTR [r15]
  40b362:	call   4218c0 <flatcc_builder_end_vector@@Base>
  40b367:	mov    DWORD PTR [rsp+0x3c],eax
  40b36b:	test   eax,eax
  40b36d:	je     411d63 <main@@Base+0xac93>
  40b373:	mov    rdi,QWORD PTR [r15]
  40b376:	mov    esi,0x1f
  40b37b:	call   421dc0 <flatcc_builder_table_add_offset@@Base>
  40b380:	test   rax,rax
  40b383:	je     411d63 <main@@Base+0xac93>
  40b389:	mov    ecx,DWORD PTR [rsp+0x3c]
  40b38d:	mov    DWORD PTR [rax],ecx
  40b38f:	jmp    40f890 <main@@Base+0x87c0>
  40b394:	mov    rdi,r15
  40b397:	mov    rsi,rax
  40b39a:	mov    rdx,r13
  40b39d:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40b3a2:	mov    r12,r13
  40b3a5:	cmp    rax,r13
  40b3a8:	je     40b4b0 <main@@Base+0x43e0>
  40b3ae:	cmp    BYTE PTR [rax],0x5d
  40b3b1:	jne    40b4ad <main@@Base+0x43dd>
  40b3b7:	lea    r14,[rax+0x1]
  40b3bb:	mov    rcx,r13
  40b3be:	sub    rcx,r14
  40b3c1:	cmp    rcx,0x2
  40b3c5:	movabs r12,0x7465737400000000
  40b3cf:	jl     40f708 <main@@Base+0x8638>
  40b3d5:	cmp    BYTE PTR [r14],0x20
  40b3d9:	jg     40b35f <main@@Base+0x428f>
  40b3db:	jne    40f708 <main@@Base+0x8638>
  40b3e1:	cmp    BYTE PTR [rax+0x2],0x20
  40b3e5:	jle    40f708 <main@@Base+0x8638>
  40b3eb:	add    rax,0x2
  40b3ef:	mov    r14,rax
  40b3f2:	jmp    40b35f <main@@Base+0x428f>
  40b3f7:	cmp    al,0x22
  40b3f9:	jne    40ce13 <main@@Base+0x5d43>
  40b3ff:	add    r14,0xa
  40b403:	mov    rax,r13
  40b406:	sub    rax,r14
  40b409:	cmp    rax,0x2
  40b40d:	jl     40b429 <main@@Base+0x4359>
  40b40f:	cmp    BYTE PTR [r14],0x20
  40b413:	jg     40b43c <main@@Base+0x436c>
  40b415:	jne    40b429 <main@@Base+0x4359>
  40b417:	cmp    BYTE PTR [r14+0x1],0x20
  40b41c:	jle    40b429 <main@@Base+0x4359>
  40b41e:	add    r14,0x1
  40b422:	cmp    r14,r13
  40b425:	jne    40b441 <main@@Base+0x4371>
  40b427:	jmp    40b48a <main@@Base+0x43ba>
  40b429:	mov    rdi,QWORD PTR [rsp+0x10]
  40b42e:	mov    rsi,r14
  40b431:	mov    rdx,r13
  40b434:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40b439:	mov    r14,rax
  40b43c:	cmp    r14,r13
  40b43f:	je     40b48a <main@@Base+0x43ba>
  40b441:	cmp    BYTE PTR [r14],0x3a
  40b445:	jne    40b48a <main@@Base+0x43ba>
  40b447:	lea    rax,[r14+0x1]
  40b44b:	mov    rcx,r13
  40b44e:	sub    rcx,rax
  40b451:	cmp    rcx,0x2
  40b455:	jl     40cdc5 <main@@Base+0x5cf5>
  40b45b:	cmp    BYTE PTR [rax],0x20
  40b45e:	jg     40cdd5 <main@@Base+0x5d05>
  40b464:	jne    40cdc5 <main@@Base+0x5cf5>
  40b46a:	cmp    BYTE PTR [r14+0x2],0x20
  40b46f:	jle    40cdc5 <main@@Base+0x5cf5>
  40b475:	add    r14,0x2
  40b479:	mov    rax,r14
  40b47c:	cmp    r15,rax
  40b47f:	jne    40cdda <main@@Base+0x5d0a>
  40b485:	jmp    40ce13 <main@@Base+0x5d43>
  40b48a:	mov    ecx,0x4
  40b48f:	mov    rdi,QWORD PTR [rsp+0x10]
  40b494:	mov    rsi,r14
  40b497:	mov    rdx,r13
  40b49a:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  40b49f:	cmp    r15,rax
  40b4a2:	jne    40cdda <main@@Base+0x5d0a>
  40b4a8:	jmp    40ce13 <main@@Base+0x5d43>
  40b4ad:	mov    r12,rax
  40b4b0:	mov    rdi,QWORD PTR [r15]
  40b4b3:	mov    esi,0x1
  40b4b8:	call   41fdc0 <flatcc_builder_extend_vector@@Base>
  40b4bd:	test   rax,rax
  40b4c0:	je     407c81 <main@@Base+0xbb1>
  40b4c6:	mov    rdi,r15
  40b4c9:	mov    rsi,r12
  40b4cc:	mov    rdx,r13
  40b4cf:	mov    rcx,rax
  40b4d2:	call   414130 <main@@Base+0xd060>
  40b4d7:	mov    rcx,r13
  40b4da:	sub    rcx,rax
  40b4dd:	cmp    rcx,0x2
  40b4e1:	mov    rbp,QWORD PTR [rsp+0x20]
  40b4e6:	movabs r12,0x7465737400000000
  40b4f0:	jl     40b50d <main@@Base+0x443d>
  40b4f2:	cmp    BYTE PTR [rax],0x20
  40b4f5:	jg     40b51b <main@@Base+0x444b>
  40b4f7:	jne    40b50d <main@@Base+0x443d>
  40b4f9:	cmp    BYTE PTR [rax+0x1],0x20
  40b4fd:	jle    40b50d <main@@Base+0x443d>
  40b4ff:	add    rax,0x1
  40b503:	cmp    rax,r13
  40b506:	jne    40b524 <main@@Base+0x4454>
  40b508:	jmp    40d06f <main@@Base+0x5f9f>
  40b50d:	mov    rdi,r15
  40b510:	mov    rsi,rax
  40b513:	mov    rdx,r13
  40b516:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40b51b:	cmp    rax,r13
  40b51e:	je     40d06f <main@@Base+0x5f9f>
  40b524:	movzx  ecx,BYTE PTR [rax]
  40b527:	cmp    cl,0x2c
  40b52a:	jne    40d077 <main@@Base+0x5fa7>
  40b530:	lea    r12,[rax+0x1]
  40b534:	mov    rcx,r13
  40b537:	sub    rcx,r12
  40b53a:	cmp    rcx,0x2
  40b53e:	jl     40b555 <main@@Base+0x4485>
  40b540:	cmp    BYTE PTR [r12],0x20
  40b545:	jg     40b566 <main@@Base+0x4496>
  40b547:	jne    40b555 <main@@Base+0x4485>
  40b549:	cmp    BYTE PTR [rax+0x2],0x20
  40b54d:	jle    40b555 <main@@Base+0x4485>
  40b54f:	add    rax,0x2
  40b553:	jmp    40b563 <main@@Base+0x4493>
  40b555:	mov    rdi,r15
  40b558:	mov    rsi,r12
  40b55b:	mov    rdx,r13
  40b55e:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40b563:	mov    r12,rax
  40b566:	cmp    r12,r13
  40b569:	je     40d100 <main@@Base+0x6030>
  40b56f:	cmp    BYTE PTR [r12],0x5d
  40b574:	jne    40b4b0 <main@@Base+0x43e0>
  40b57a:	lea    r14,[r12+0x1]
  40b57f:	mov    rax,r13
  40b582:	sub    rax,r14
  40b585:	cmp    rax,0x2
  40b589:	jl     40da9d <main@@Base+0x69cd>
  40b58f:	cmp    BYTE PTR [r14],0x20
  40b593:	jg     40b355 <main@@Base+0x4285>
  40b599:	jne    40da9d <main@@Base+0x69cd>
  40b59f:	cmp    BYTE PTR [r12+0x2],0x20
  40b5a5:	jle    40da9d <main@@Base+0x69cd>
  40b5ab:	add    r12,0x2
  40b5af:	mov    r14,r12
  40b5b2:	jmp    40b355 <main@@Base+0x4285>
  40b5b7:	mov    rdi,r15
  40b5ba:	mov    rsi,r12
  40b5bd:	mov    rdx,r13
  40b5c0:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40b5c5:	mov    r12,rax
  40b5c8:	cmp    r14,r12
  40b5cb:	je     40bddd <main@@Base+0x4d0d>
  40b5d1:	mov    BYTE PTR [rsp+0x1c],0x0
  40b5d6:	mov    rax,r13
  40b5d9:	sub    rax,r12
  40b5dc:	cmp    rax,0x4
  40b5e0:	jl     40b60e <main@@Base+0x453e>
  40b5e2:	cmp    DWORD PTR [r12],0x65757274
  40b5ea:	je     40b663 <main@@Base+0x4593>
  40b5ec:	cmp    rax,0x5
  40b5f0:	jl     40b60e <main@@Base+0x453e>
  40b5f2:	mov    eax,DWORD PTR [r12]
  40b5f6:	mov    ecx,0x736c6166
  40b5fb:	xor    eax,ecx
  40b5fd:	movzx  ecx,BYTE PTR [r12+0x4]
  40b603:	xor    ecx,0x65
  40b606:	or     ecx,eax
  40b608:	je     40cc4b <main@@Base+0x5b7b>
  40b60e:	mov    QWORD PTR [rsp+0x30],0x0
  40b617:	mov    DWORD PTR [rsp+0x40],0x0
  40b61f:	cmp    r12,r13
  40b622:	je     40b657 <main@@Base+0x4587>
  40b624:	mov    rdi,r15
  40b627:	mov    rsi,r12
  40b62a:	mov    rdx,r13
  40b62d:	lea    rcx,[rsp+0x40]
  40b632:	lea    r8,[rsp+0x30]
  40b637:	call   427360 <flatcc_json_parser_integer@@Base>
  40b63c:	cmp    rax,r12
  40b63f:	mov    rbp,QWORD PTR [rsp+0x20]
  40b644:	je     40b674 <main@@Base+0x45a4>
  40b646:	mov    r14,rax
  40b649:	cmp    DWORD PTR [rsp+0x40],0x0
  40b64e:	je     40b67b <main@@Base+0x45ab>
  40b650:	mov    ecx,0x8
  40b655:	jmp    40b691 <main@@Base+0x45c1>
  40b657:	mov    r14,r13
  40b65a:	xor    ebx,ebx
  40b65c:	mov    rbp,QWORD PTR [rsp+0x20]
  40b661:	jmp    40b6a4 <main@@Base+0x45d4>
  40b663:	mov    BYTE PTR [rsp+0x1c],0x1
  40b668:	lea    r14,[r12+0x4]
  40b66d:	mov    bl,0x1
  40b66f:	jmp    40cc57 <main@@Base+0x5b87>
  40b674:	xor    ebx,ebx
  40b676:	mov    r14,r12
  40b679:	jmp    40b6a4 <main@@Base+0x45d4>
  40b67b:	mov    rax,QWORD PTR [rsp+0x30]
  40b680:	cmp    rax,0x100
  40b686:	jb     40cd35 <main@@Base+0x5c65>
  40b68c:	mov    ecx,0x7
  40b691:	mov    rdi,r15
  40b694:	mov    rsi,r14
  40b697:	mov    rdx,r13
  40b69a:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  40b69f:	mov    r14,rax
  40b6a2:	xor    ebx,ebx
  40b6a4:	mov    BYTE PTR [rsp+0x1c],bl
  40b6a8:	cmp    r12,r14
  40b6ab:	jne    40cc99 <main@@Base+0x5bc9>
  40b6b1:	jmp    40cc61 <main@@Base+0x5b91>
  40b6b6:	cmp    al,0x22
  40b6b8:	jne    40fb4d <main@@Base+0x8a7d>
  40b6be:	add    r14,0x12
  40b6c2:	mov    rbx,QWORD PTR [rsp+0x8]
  40b6c7:	mov    rax,rbx
  40b6ca:	sub    rax,r14
  40b6cd:	cmp    rax,0x2
  40b6d1:	jl     40b7e8 <main@@Base+0x4718>
  40b6d7:	cmp    BYTE PTR [r14],0x20
  40b6db:	jg     40b7fb <main@@Base+0x472b>
  40b6e1:	jne    40b7e8 <main@@Base+0x4718>
  40b6e7:	cmp    BYTE PTR [r14+0x1],0x20
  40b6ec:	jle    40b7e8 <main@@Base+0x4718>
  40b6f2:	add    r14,0x1
  40b6f6:	cmp    r14,rbx
  40b6f9:	jne    40b800 <main@@Base+0x4730>
  40b6ff:	jmp    40b849 <main@@Base+0x4779>
  40b704:	mov    rdi,QWORD PTR [rsp+0x10]
  40b709:	mov    rsi,r12
  40b70c:	mov    rdx,r13
  40b70f:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40b714:	mov    r12,rax
  40b717:	cmp    r15,r12
  40b71a:	je     40f863 <main@@Base+0x8793>
  40b720:	mov    r15,QWORD PTR [rsp+0x10]
  40b725:	mov    rdi,QWORD PTR [r15]
  40b728:	mov    esi,0x1
  40b72d:	mov    edx,0x1
  40b732:	mov    ecx,0xffffffff
  40b737:	call   420730 <flatcc_builder_start_vector@@Base>
  40b73c:	test   eax,eax
  40b73e:	jne    407c81 <main@@Base+0xbb1>
  40b744:	cmp    r12,r13
  40b747:	je     40b78c <main@@Base+0x46bc>
  40b749:	cmp    BYTE PTR [r12],0x5b
  40b74e:	jne    40b78c <main@@Base+0x46bc>
  40b750:	lea    rax,[r12+0x1]
  40b755:	mov    rcx,r13
  40b758:	sub    rcx,rax
  40b75b:	cmp    rcx,0x2
  40b75f:	jl     40cec5 <main@@Base+0x5df5>
  40b765:	cmp    BYTE PTR [rax],0x20
  40b768:	jg     40ced3 <main@@Base+0x5e03>
  40b76e:	jne    40cec5 <main@@Base+0x5df5>
  40b774:	cmp    BYTE PTR [r12+0x2],0x20
  40b77a:	jle    40cec5 <main@@Base+0x5df5>
  40b780:	add    r12,0x2
  40b784:	mov    rax,r12
  40b787:	jmp    40ced3 <main@@Base+0x5e03>
  40b78c:	mov    ecx,0x16
  40b791:	mov    rdi,r15
  40b794:	mov    rsi,r12
  40b797:	mov    rdx,r13
  40b79a:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  40b79f:	mov    r14,rax
  40b7a2:	mov    rbp,QWORD PTR [rsp+0x20]
  40b7a7:	movabs r12,0x7465737400000000
  40b7b1:	mov    rdi,QWORD PTR [r15]
  40b7b4:	call   4218c0 <flatcc_builder_end_vector@@Base>
  40b7b9:	mov    DWORD PTR [rsp+0x3c],eax
  40b7bd:	test   eax,eax
  40b7bf:	je     411d63 <main@@Base+0xac93>
  40b7c5:	mov    rdi,QWORD PTR [r15]
  40b7c8:	mov    esi,0x18
  40b7cd:	jmp    40b37b <main@@Base+0x42ab>
  40b7d2:	mov    rdi,r15
  40b7d5:	mov    rsi,r14
  40b7d8:	mov    rdx,r13
  40b7db:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40b7e0:	mov    r14,rax
  40b7e3:	jmp    409c23 <main@@Base+0x2b53>
  40b7e8:	mov    rdi,QWORD PTR [rsp+0x10]
  40b7ed:	mov    rsi,r14
  40b7f0:	mov    rdx,rbx
  40b7f3:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40b7f8:	mov    r14,rax
  40b7fb:	cmp    r14,rbx
  40b7fe:	je     40b849 <main@@Base+0x4779>
  40b800:	cmp    BYTE PTR [r14],0x3a
  40b804:	jne    40b849 <main@@Base+0x4779>
  40b806:	mov    rax,rbx
  40b809:	lea    rbx,[r14+0x1]
  40b80d:	sub    rax,rbx
  40b810:	cmp    rax,0x2
  40b814:	jl     40dbef <main@@Base+0x6b1f>
  40b81a:	cmp    BYTE PTR [rbx],0x20
  40b81d:	jg     40dc04 <main@@Base+0x6b34>
  40b823:	jne    40dbef <main@@Base+0x6b1f>
  40b829:	cmp    BYTE PTR [r14+0x2],0x20
  40b82e:	jle    40dbef <main@@Base+0x6b1f>
  40b834:	add    r14,0x2
  40b838:	mov    rbx,r14
  40b83b:	cmp    r15,rbx
  40b83e:	jne    40dc0d <main@@Base+0x6b3d>
  40b844:	jmp    40fb4d <main@@Base+0x8a7d>
  40b849:	mov    ecx,0x4
  40b84e:	mov    rdi,QWORD PTR [rsp+0x10]
  40b853:	mov    rsi,r14
  40b856:	mov    rdx,rbx
  40b859:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  40b85e:	jmp    40dc01 <main@@Base+0x6b31>
  40b863:	cmp    al,0x22
  40b865:	jne    40b9a3 <main@@Base+0x48d3>
  40b86b:	lea    rsi,[r14+0x11]
  40b86f:	mov    rbx,QWORD PTR [rsp+0x8]
  40b874:	mov    rax,rbx
  40b877:	sub    rax,rsi
  40b87a:	cmp    rax,0x2
  40b87e:	jl     40b944 <main@@Base+0x4874>
  40b884:	cmp    BYTE PTR [rsi],0x20
  40b887:	jg     40b954 <main@@Base+0x4884>
  40b88d:	jne    40b944 <main@@Base+0x4874>
  40b893:	cmp    BYTE PTR [rsi+0x1],0x20
  40b897:	jle    40b944 <main@@Base+0x4874>
  40b89d:	add    rsi,0x1
  40b8a1:	cmp    rsi,rbx
  40b8a4:	jne    40b95d <main@@Base+0x488d>
  40b8aa:	jmp    40bbf6 <main@@Base+0x4b26>
  40b8af:	cmp    al,0x22
  40b8b1:	jne    40bafc <main@@Base+0x4a2c>
  40b8b7:	lea    rsi,[r14+0x11]
  40b8bb:	mov    rbx,QWORD PTR [rsp+0x8]
  40b8c0:	mov    rax,rbx
  40b8c3:	sub    rax,rsi
  40b8c6:	cmp    rax,0x2
  40b8ca:	jl     40ba9d <main@@Base+0x49cd>
  40b8d0:	cmp    BYTE PTR [rsi],0x20
  40b8d3:	jg     40baad <main@@Base+0x49dd>
  40b8d9:	jne    40ba9d <main@@Base+0x49cd>
  40b8df:	cmp    BYTE PTR [rsi+0x1],0x20
  40b8e3:	jle    40ba9d <main@@Base+0x49cd>
  40b8e9:	add    rsi,0x1
  40b8ed:	cmp    rsi,rbx
  40b8f0:	jne    40bab6 <main@@Base+0x49e6>
  40b8f6:	jmp    40bc0d <main@@Base+0x4b3d>
  40b8fb:	cmp    al,0x22
  40b8fd:	jne    40f863 <main@@Base+0x8793>
  40b903:	add    r14,0x12
  40b907:	mov    rax,r13
  40b90a:	sub    rax,r14
  40b90d:	cmp    rax,0x2
  40b911:	jl     40cb0d <main@@Base+0x5a3d>
  40b917:	cmp    BYTE PTR [r14],0x20
  40b91b:	jg     40cb20 <main@@Base+0x5a50>
  40b921:	jne    40cb0d <main@@Base+0x5a3d>
  40b927:	cmp    BYTE PTR [r14+0x1],0x20
  40b92c:	jle    40cb0d <main@@Base+0x5a3d>
  40b932:	add    r14,0x1
  40b936:	cmp    r14,r13
  40b939:	jne    40cb25 <main@@Base+0x5a55>
  40b93f:	jmp    40cb70 <main@@Base+0x5aa0>
  40b944:	mov    rdi,QWORD PTR [rsp+0x10]
  40b949:	mov    rdx,rbx
  40b94c:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40b951:	mov    rsi,rax
  40b954:	cmp    rsi,rbx
  40b957:	je     40bbf6 <main@@Base+0x4b26>
  40b95d:	cmp    BYTE PTR [rsi],0x3a
  40b960:	jne    40bbf6 <main@@Base+0x4b26>
  40b966:	mov    rax,rbx
  40b969:	lea    rbx,[rsi+0x1]
  40b96d:	sub    rax,rbx
  40b970:	cmp    rax,0x2
  40b974:	jl     40e0ae <main@@Base+0x6fde>
  40b97a:	cmp    BYTE PTR [rbx],0x20
  40b97d:	jg     40e0c3 <main@@Base+0x6ff3>
  40b983:	jne    40e0ae <main@@Base+0x6fde>
  40b989:	cmp    BYTE PTR [rsi+0x2],0x20
  40b98d:	jle    40e0ae <main@@Base+0x6fde>
  40b993:	add    rsi,0x2
  40b997:	mov    rbx,rsi
  40b99a:	cmp    r15,rbx
  40b99d:	jne    40e0cc <main@@Base+0x6ffc>
  40b9a3:	lea    r15,[r14+0x10]
  40b9a7:	mov    r13,QWORD PTR [rsp+0x8]
  40b9ac:	mov    rax,r13
  40b9af:	sub    rax,r15
  40b9b2:	cmp    rax,0x8
  40b9b6:	jb     40b9c2 <main@@Base+0x48f2>
  40b9b8:	movbe  rcx,QWORD PTR [r15]
  40b9bd:	jmp    40ba53 <main@@Base+0x4983>
  40b9c2:	mov    ecx,eax
  40b9c4:	and    cl,0xf
  40b9c7:	add    cl,0xff
  40b9ca:	cmp    cl,0x7
  40b9cd:	ja     40ce13 <main@@Base+0x5d43>
  40b9d3:	movzx  ecx,cl
  40b9d6:	lea    rdx,[rip+0x29723]        # 435100 <_IO_stdin_used@@Base+0x100>
  40b9dd:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  40b9e1:	add    rcx,rdx
  40b9e4:	xor    r8d,r8d
  40b9e7:	xor    r9d,r9d
  40b9ea:	xor    edx,edx
  40b9ec:	xor    esi,esi
  40b9ee:	xor    ebx,ebx
  40b9f0:	xor    edi,edi
  40b9f2:	xor    ebp,ebp
  40b9f4:	jmp    rcx
  40b9f6:	movsx  r8,BYTE PTR [r14+0x17]
  40b9fb:	movsx  r9,BYTE PTR [r14+0x16]
  40ba00:	shl    r9,0x8
  40ba04:	or     r9,r8
  40ba07:	movsx  rdx,BYTE PTR [r14+0x15]
  40ba0c:	shl    rdx,0x10
  40ba10:	or     rdx,r9
  40ba13:	movsx  rsi,BYTE PTR [r14+0x14]
  40ba18:	shl    rsi,0x18
  40ba1c:	or     rsi,rdx
  40ba1f:	movsx  rbx,BYTE PTR [r14+0x13]
  40ba24:	shl    rbx,0x20
  40ba28:	or     rbx,rsi
  40ba2b:	movsx  rdi,BYTE PTR [r14+0x12]
  40ba30:	shl    rdi,0x28
  40ba34:	or     rdi,rbx
  40ba37:	movsx  rbp,BYTE PTR [r14+0x11]
  40ba3c:	shl    rbp,0x30
  40ba40:	or     rbp,rdi
  40ba43:	movzx  ecx,BYTE PTR [r15]
  40ba47:	shl    rcx,0x38
  40ba4b:	or     rcx,rbp
  40ba4e:	mov    r13,QWORD PTR [rsp+0x8]
  40ba53:	shr    rcx,0x38
  40ba57:	cmp    rcx,0x61
  40ba5b:	jne    40ce13 <main@@Base+0x5d43>
  40ba61:	cmp    rax,0x2
  40ba65:	jl     40fb4d <main@@Base+0x8a7d>
  40ba6b:	mov    rax,QWORD PTR [rsp+0x28]
  40ba70:	cmp    DWORD PTR [rax],0x0
  40ba73:	mov    al,BYTE PTR [r14+0x11]
  40ba77:	je     40da01 <main@@Base+0x6931>
  40ba7d:	cmp    al,0x21
  40ba7f:	jl     40ba89 <main@@Base+0x49b9>
  40ba81:	cmp    al,0x3a
  40ba83:	jne    40fb4d <main@@Base+0x8a7d>
  40ba89:	add    r14,0x11
  40ba8d:	mov    rax,QWORD PTR [rsp+0x28]
  40ba92:	mov    DWORD PTR [rax],0x0
  40ba98:	jmp    40da0d <main@@Base+0x693d>
  40ba9d:	mov    rdi,QWORD PTR [rsp+0x10]
  40baa2:	mov    rdx,rbx
  40baa5:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40baaa:	mov    rsi,rax
  40baad:	cmp    rsi,rbx
  40bab0:	je     40bc0d <main@@Base+0x4b3d>
  40bab6:	cmp    BYTE PTR [rsi],0x3a
  40bab9:	jne    40bc0d <main@@Base+0x4b3d>
  40babf:	mov    rax,rbx
  40bac2:	lea    rbx,[rsi+0x1]
  40bac6:	sub    rax,rbx
  40bac9:	cmp    rax,0x2
  40bacd:	jl     40e13a <main@@Base+0x706a>
  40bad3:	cmp    BYTE PTR [rbx],0x20
  40bad6:	jg     40e14f <main@@Base+0x707f>
  40badc:	jne    40e13a <main@@Base+0x706a>
  40bae2:	cmp    BYTE PTR [rsi+0x2],0x20
  40bae6:	jle    40e13a <main@@Base+0x706a>
  40baec:	add    rsi,0x2
  40baf0:	mov    rbx,rsi
  40baf3:	cmp    r15,rbx
  40baf6:	jne    40e158 <main@@Base+0x7088>
  40bafc:	lea    r15,[r14+0x10]
  40bb00:	mov    r13,QWORD PTR [rsp+0x8]
  40bb05:	mov    rax,r13
  40bb08:	sub    rax,r15
  40bb0b:	cmp    rax,0x8
  40bb0f:	jb     40bb1b <main@@Base+0x4a4b>
  40bb11:	movbe  rcx,QWORD PTR [r15]
  40bb16:	jmp    40bbac <main@@Base+0x4adc>
  40bb1b:	mov    ecx,eax
  40bb1d:	and    cl,0xf
  40bb20:	add    cl,0xff
  40bb23:	cmp    cl,0x7
  40bb26:	ja     40ce13 <main@@Base+0x5d43>
  40bb2c:	movzx  ecx,cl
  40bb2f:	lea    rdx,[rip+0x295aa]        # 4350e0 <_IO_stdin_used@@Base+0xe0>
  40bb36:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  40bb3a:	add    rcx,rdx
  40bb3d:	xor    r8d,r8d
  40bb40:	xor    r9d,r9d
  40bb43:	xor    edx,edx
  40bb45:	xor    esi,esi
  40bb47:	xor    ebx,ebx
  40bb49:	xor    edi,edi
  40bb4b:	xor    ebp,ebp
  40bb4d:	jmp    rcx
  40bb4f:	movsx  r8,BYTE PTR [r14+0x17]
  40bb54:	movsx  r9,BYTE PTR [r14+0x16]
  40bb59:	shl    r9,0x8
  40bb5d:	or     r9,r8
  40bb60:	movsx  rdx,BYTE PTR [r14+0x15]
  40bb65:	shl    rdx,0x10
  40bb69:	or     rdx,r9
  40bb6c:	movsx  rsi,BYTE PTR [r14+0x14]
  40bb71:	shl    rsi,0x18
  40bb75:	or     rsi,rdx
  40bb78:	movsx  rbx,BYTE PTR [r14+0x13]
  40bb7d:	shl    rbx,0x20
  40bb81:	or     rbx,rsi
  40bb84:	movsx  rdi,BYTE PTR [r14+0x12]
  40bb89:	shl    rdi,0x28
  40bb8d:	or     rdi,rbx
  40bb90:	movsx  rbp,BYTE PTR [r14+0x11]
  40bb95:	shl    rbp,0x30
  40bb99:	or     rbp,rdi
  40bb9c:	movzx  ecx,BYTE PTR [r15]
  40bba0:	shl    rcx,0x38
  40bba4:	or     rcx,rbp
  40bba7:	mov    r13,QWORD PTR [rsp+0x8]
  40bbac:	shr    rcx,0x38
  40bbb0:	cmp    rcx,0x61
  40bbb4:	jne    40ce13 <main@@Base+0x5d43>
  40bbba:	cmp    rax,0x2
  40bbbe:	jl     40fb4d <main@@Base+0x8a7d>
  40bbc4:	mov    rax,QWORD PTR [rsp+0x28]
  40bbc9:	cmp    DWORD PTR [rax],0x0
  40bbcc:	mov    al,BYTE PTR [r14+0x11]
  40bbd0:	je     40da4f <main@@Base+0x697f>
  40bbd6:	cmp    al,0x21
  40bbd8:	jl     40bbe2 <main@@Base+0x4b12>
  40bbda:	cmp    al,0x3a
  40bbdc:	jne    40fb4d <main@@Base+0x8a7d>
  40bbe2:	add    r14,0x11
  40bbe6:	mov    rax,QWORD PTR [rsp+0x28]
  40bbeb:	mov    DWORD PTR [rax],0x0
  40bbf1:	jmp    40da5b <main@@Base+0x698b>
  40bbf6:	mov    ecx,0x4
  40bbfb:	mov    rdi,QWORD PTR [rsp+0x10]
  40bc00:	mov    rdx,rbx
  40bc03:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  40bc08:	jmp    40e0c0 <main@@Base+0x6ff0>
  40bc0d:	mov    ecx,0x4
  40bc12:	mov    rdi,QWORD PTR [rsp+0x10]
  40bc17:	mov    rdx,rbx
  40bc1a:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  40bc1f:	jmp    40e14c <main@@Base+0x707c>
  40bc24:	mov    rdi,r15
  40bc27:	mov    rsi,r12
  40bc2a:	mov    rdx,QWORD PTR [rsp+0x8]
  40bc2f:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40bc34:	mov    r12,rax
  40bc37:	cmp    r14,r12
  40bc3a:	je     40d553 <main@@Base+0x6483>
  40bc40:	mov    QWORD PTR [rsp+0x30],0x0
  40bc49:	mov    DWORD PTR [rsp+0x40],0x0
  40bc51:	mov    WORD PTR [rsp+0x1c],0x0
  40bc58:	mov    rdx,QWORD PTR [rsp+0x8]
  40bc5d:	cmp    r12,rdx
  40bc60:	je     40bca0 <main@@Base+0x4bd0>
  40bc62:	mov    rdi,r15
  40bc65:	mov    rsi,r12
  40bc68:	lea    rcx,[rsp+0x40]
  40bc6d:	lea    r8,[rsp+0x30]
  40bc72:	call   427360 <flatcc_json_parser_integer@@Base>
  40bc77:	cmp    rax,r12
  40bc7a:	mov    rbp,QWORD PTR [rsp+0x20]
  40bc7f:	je     40bcb1 <main@@Base+0x4be1>
  40bc81:	mov    r14,rax
  40bc84:	mov    rbx,QWORD PTR [rsp+0x30]
  40bc89:	cmp    DWORD PTR [rsp+0x40],0x0
  40bc8e:	je     40bcbd <main@@Base+0x4bed>
  40bc90:	cmp    rbx,0x8001
  40bc97:	jb     40bce7 <main@@Base+0x4c17>
  40bc99:	mov    ecx,0x8
  40bc9e:	jmp    40bccb <main@@Base+0x4bfb>
  40bca0:	xor    ebx,ebx
  40bca2:	mov    r14,rdx
  40bca5:	mov    rbp,QWORD PTR [rsp+0x20]
  40bcaa:	cmp    r12,r14
  40bcad:	jne    40bd2d <main@@Base+0x4c5d>
  40bcaf:	jmp    40bcf4 <main@@Base+0x4c24>
  40bcb1:	xor    ebx,ebx
  40bcb3:	mov    r14,r12
  40bcb6:	cmp    r12,r14
  40bcb9:	jne    40bd2d <main@@Base+0x4c5d>
  40bcbb:	jmp    40bcf4 <main@@Base+0x4c24>
  40bcbd:	cmp    rbx,0x8000
  40bcc4:	jb     40bcea <main@@Base+0x4c1a>
  40bcc6:	mov    ecx,0x7
  40bccb:	mov    rdi,r15
  40bcce:	mov    rsi,r14
  40bcd1:	mov    rdx,QWORD PTR [rsp+0x8]
  40bcd6:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  40bcdb:	mov    r14,rax
  40bcde:	xor    ebx,ebx
  40bce0:	cmp    r12,r14
  40bce3:	jne    40bd2d <main@@Base+0x4c5d>
  40bce5:	jmp    40bcf4 <main@@Base+0x4c24>
  40bce7:	neg    rbx
  40bcea:	mov    WORD PTR [rsp+0x1c],bx
  40bcef:	cmp    r12,r14
  40bcf2:	jne    40bd2d <main@@Base+0x4c5d>
  40bcf4:	mov    rdi,r15
  40bcf7:	mov    rsi,r12
  40bcfa:	mov    rbx,QWORD PTR [rsp+0x8]
  40bcff:	mov    rdx,rbx
  40bd02:	lea    rcx,[rip+0x383f7]        # 444100 <__data_start@@Base+0x50>
  40bd09:	lea    r8,[rsp+0x1c]
  40bd0e:	call   413f50 <main@@Base+0xce80>
  40bd13:	mov    r14,rax
  40bd16:	cmp    rax,r12
  40bd19:	je     411d35 <main@@Base+0xac65>
  40bd1f:	cmp    r14,rbx
  40bd22:	je     411d35 <main@@Base+0xac65>
  40bd28:	movzx  ebx,WORD PTR [rsp+0x1c]
  40bd2d:	movzx  eax,bx
  40bd30:	cmp    eax,0x64
  40bd33:	movabs r12,0x7465737400000000
  40bd3d:	jne    40bd4a <main@@Base+0x4c7a>
  40bd3f:	test   BYTE PTR [r15+0x10],0x2
  40bd44:	je     40ccd1 <main@@Base+0x5c01>
  40bd4a:	mov    rdi,QWORD PTR [r15]
  40bd4d:	mov    esi,0x2
  40bd52:	mov    edx,0x2
  40bd57:	mov    ecx,0x2
  40bd5c:	call   421f20 <flatcc_builder_table_add@@Base>
  40bd61:	test   rax,rax
  40bd64:	je     411d35 <main@@Base+0xac65>
  40bd6a:	mov    WORD PTR [rax],bx
  40bd6d:	jmp    40ccd1 <main@@Base+0x5c01>
  40bd72:	mov    rdi,r15
  40bd75:	mov    rsi,r12
  40bd78:	mov    rdx,r13
  40bd7b:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40bd80:	mov    r12,rax
  40bd83:	cmp    r14,r12
  40bd86:	je     40bddd <main@@Base+0x4d0d>
  40bd88:	mov    rdi,QWORD PTR [r15]
  40bd8b:	xor    esi,esi
  40bd8d:	mov    edx,0x20
  40bd92:	mov    ecx,0x10
  40bd97:	call   421f20 <flatcc_builder_table_add@@Base>
  40bd9c:	test   rax,rax
  40bd9f:	je     407c81 <main@@Base+0xbb1>
  40bda5:	cmp    r12,r13
  40bda8:	je     40bde8 <main@@Base+0x4d18>
  40bdaa:	cmp    BYTE PTR [r12],0x7b
  40bdaf:	jne    40bde8 <main@@Base+0x4d18>
  40bdb1:	mov    r14,rax
  40bdb4:	lea    rax,[r12+0x1]
  40bdb9:	mov    rcx,r13
  40bdbc:	sub    rcx,rax
  40bdbf:	cmp    rcx,0x2
  40bdc3:	jl     40be00 <main@@Base+0x4d30>
  40bdc5:	cmp    BYTE PTR [rax],0x20
  40bdc8:	jg     40be0e <main@@Base+0x4d3e>
  40bdca:	jne    40be00 <main@@Base+0x4d30>
  40bdcc:	cmp    BYTE PTR [r12+0x2],0x20
  40bdd2:	jle    40be00 <main@@Base+0x4d30>
  40bdd4:	add    r12,0x2
  40bdd8:	mov    rax,r12
  40bddb:	jmp    40be0e <main@@Base+0x4d3e>
  40bddd:	mov    rdi,r15
  40bde0:	mov    rsi,r14
  40bde3:	jmp    40f86e <main@@Base+0x879e>
  40bde8:	mov    ecx,0x15
  40bded:	mov    rdi,r15
  40bdf0:	mov    rsi,r12
  40bdf3:	mov    rdx,r13
  40bdf6:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  40bdfb:	jmp    40f876 <main@@Base+0x87a6>
  40be00:	mov    rdi,r15
  40be03:	mov    rsi,rax
  40be06:	mov    rdx,r13
  40be09:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40be0e:	mov    rsi,r13
  40be11:	cmp    rax,r13
  40be14:	movabs r12,0x7465737400000000
  40be1e:	je     40be64 <main@@Base+0x4d94>
  40be20:	cmp    BYTE PTR [rax],0x7d
  40be23:	jne    40be61 <main@@Base+0x4d91>
  40be25:	lea    r14,[rax+0x1]
  40be29:	mov    rcx,r13
  40be2c:	sub    rcx,r14
  40be2f:	cmp    rcx,0x2
  40be33:	mov    rbp,QWORD PTR [rsp+0x20]
  40be38:	jl     40ca29 <main@@Base+0x5959>
  40be3e:	cmp    BYTE PTR [r14],0x20
  40be42:	jg     40f890 <main@@Base+0x87c0>
  40be48:	jne    40ca29 <main@@Base+0x5959>
  40be4e:	cmp    BYTE PTR [rax+0x2],0x20
  40be52:	jle    40ca29 <main@@Base+0x5959>
  40be58:	add    rax,0x2
  40be5c:	jmp    40ca37 <main@@Base+0x5967>
  40be61:	mov    rsi,rax
  40be64:	mov    r12,r14
  40be67:	add    r12,0x1a
  40be6b:	mov    r15,r13
  40be6e:	cmp    rsi,r13
  40be71:	je     40beb4 <main@@Base+0x4de4>
  40be73:	movzx  eax,BYTE PTR [rsi]
  40be76:	cmp    al,0x2e
  40be78:	je     40be8f <main@@Base+0x4dbf>
  40be7a:	cmp    al,0x22
  40be7c:	jne    40bea6 <main@@Base+0x4dd6>
  40be7e:	add    rsi,0x1
  40be82:	mov    rax,QWORD PTR [rsp+0x28]
  40be87:	mov    DWORD PTR [rax],0x0
  40be8d:	jmp    40beb1 <main@@Base+0x4de1>
  40be8f:	mov    ecx,0x5
  40be94:	mov    rdi,QWORD PTR [rsp+0x10]
  40be99:	mov    rdx,r13
  40be9c:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  40bea1:	mov    r15,rax
  40bea4:	jmp    40beb4 <main@@Base+0x4de4>
  40bea6:	mov    rax,QWORD PTR [rsp+0x28]
  40beab:	mov    DWORD PTR [rax],0x1
  40beb1:	mov    r15,rsi
  40beb4:	mov    rcx,r13
  40beb7:	sub    rcx,r15
  40beba:	cmp    rcx,0x8
  40bebe:	jb     40beca <main@@Base+0x4dfa>
  40bec0:	movbe  rax,QWORD PTR [r15]
  40bec5:	jmp    40bf58 <main@@Base+0x4e88>
  40beca:	mov    eax,ecx
  40becc:	and    al,0xf
  40bece:	add    al,0xff
  40bed0:	cmp    al,0x7
  40bed2:	ja     40c399 <main@@Base+0x52c9>
  40bed8:	movzx  eax,al
  40bedb:	lea    rdx,[rip+0x293be]        # 4352a0 <_IO_stdin_used@@Base+0x2a0>
  40bee2:	movsxd rax,DWORD PTR [rdx+rax*4]
  40bee6:	add    rax,rdx
  40bee9:	xor    r8d,r8d
  40beec:	xor    r9d,r9d
  40beef:	xor    edx,edx
  40bef1:	xor    esi,esi
  40bef3:	xor    ebx,ebx
  40bef5:	xor    ebp,ebp
  40bef7:	xor    edi,edi
  40bef9:	jmp    rax
  40befb:	movsx  r8,BYTE PTR [r15+0x7]
  40bf00:	movsx  r9,BYTE PTR [r15+0x6]
  40bf05:	shl    r9,0x8
  40bf09:	or     r9,r8
  40bf0c:	movsx  rdx,BYTE PTR [r15+0x5]
  40bf11:	shl    rdx,0x10
  40bf15:	or     rdx,r9
  40bf18:	movsx  rsi,BYTE PTR [r15+0x4]
  40bf1d:	shl    rsi,0x18
  40bf21:	or     rsi,rdx
  40bf24:	movsx  rbx,BYTE PTR [r15+0x3]
  40bf29:	shl    rbx,0x20
  40bf2d:	or     rbx,rsi
  40bf30:	movsx  rbp,BYTE PTR [r15+0x2]
  40bf35:	shl    rbp,0x28
  40bf39:	or     rbp,rbx
  40bf3c:	movsx  rdi,BYTE PTR [r15+0x1]
  40bf41:	shl    rdi,0x30
  40bf45:	or     rdi,rbp
  40bf48:	movzx  eax,BYTE PTR [r15]
  40bf4c:	shl    rax,0x38
  40bf50:	or     rax,rdi
  40bf53:	mov    r13,QWORD PTR [rsp+0x8]
  40bf58:	movabs rdx,0x7465737400000000
  40bf62:	lea    rdx,[rdx+0x33000000]
  40bf69:	cmp    rax,rdx
  40bf6c:	jae    40bfdd <main@@Base+0x4f0d>
  40bf6e:	and    rax,0xffffffffff000000
  40bf74:	movabs rdx,0x7465737431000000
  40bf7e:	cmp    rax,rdx
  40bf81:	je     40c0b9 <main@@Base+0x4fe9>
  40bf87:	movabs rdx,0x7465737432000000
  40bf91:	cmp    rax,rdx
  40bf94:	jne    40c399 <main@@Base+0x52c9>
  40bf9a:	mov    rbx,r15
  40bf9d:	cmp    rcx,0x6
  40bfa1:	jl     40c3fe <main@@Base+0x532e>
  40bfa7:	mov    rax,QWORD PTR [rsp+0x28]
  40bfac:	cmp    DWORD PTR [rax],0x0
  40bfaf:	movzx  eax,BYTE PTR [r15+0x5]
  40bfb4:	je     40c19a <main@@Base+0x50ca>
  40bfba:	cmp    al,0x21
  40bfbc:	jl     40bfc9 <main@@Base+0x4ef9>
  40bfbe:	mov    rbx,r15
  40bfc1:	cmp    al,0x3a
  40bfc3:	jne    40c3fe <main@@Base+0x532e>
  40bfc9:	lea    rsi,[r15+0x5]
  40bfcd:	mov    rax,QWORD PTR [rsp+0x28]
  40bfd2:	mov    DWORD PTR [rax],0x0
  40bfd8:	jmp    40c1a9 <main@@Base+0x50d9>
  40bfdd:	movabs rsi,0x7800000000000000
  40bfe7:	cmp    rax,rsi
  40bfea:	jae    40c040 <main@@Base+0x4f70>
  40bfec:	and    rax,0xffffffffff000000
  40bff2:	cmp    rax,rdx
  40bff5:	jne    40c399 <main@@Base+0x52c9>
  40bffb:	mov    rax,r15
  40bffe:	cmp    rcx,0x6
  40c002:	jl     40c81a <main@@Base+0x574a>
  40c008:	mov    rax,QWORD PTR [rsp+0x28]
  40c00d:	cmp    DWORD PTR [rax],0x0
  40c010:	movzx  ecx,BYTE PTR [r15+0x5]
  40c015:	je     40c306 <main@@Base+0x5236>
  40c01b:	cmp    cl,0x21
  40c01e:	jl     40c02c <main@@Base+0x4f5c>
  40c020:	mov    rax,r15
  40c023:	cmp    cl,0x3a
  40c026:	jne    40c81a <main@@Base+0x574a>
  40c02c:	lea    rsi,[r15+0x5]
  40c030:	mov    rax,QWORD PTR [rsp+0x28]
  40c035:	mov    DWORD PTR [rax],0x0
  40c03b:	jmp    40c316 <main@@Base+0x5246>
  40c040:	mov    rdx,rax
  40c043:	movabs rsi,0xff00000000000000
  40c04d:	and    rdx,rsi
  40c050:	movabs rsi,0x7900000000000000
  40c05a:	cmp    rax,rsi
  40c05d:	jae    40c0fc <main@@Base+0x502c>
  40c063:	movabs rax,0x7800000000000000
  40c06d:	cmp    rdx,rax
  40c070:	jne    40c399 <main@@Base+0x52c9>
  40c076:	mov    rbx,r15
  40c079:	cmp    rcx,0x2
  40c07d:	jl     40c785 <main@@Base+0x56b5>
  40c083:	mov    rax,QWORD PTR [rsp+0x28]
  40c088:	cmp    DWORD PTR [rax],0x0
  40c08b:	movzx  eax,BYTE PTR [r15+0x1]
  40c090:	je     40c3a9 <main@@Base+0x52d9>
  40c096:	cmp    al,0x21
  40c098:	jl     40c0a5 <main@@Base+0x4fd5>
  40c09a:	mov    rbx,r15
  40c09d:	cmp    al,0x3a
  40c09f:	jne    40c785 <main@@Base+0x56b5>
  40c0a5:	lea    rsi,[r15+0x1]
  40c0a9:	mov    rax,QWORD PTR [rsp+0x28]
  40c0ae:	mov    DWORD PTR [rax],0x0
  40c0b4:	jmp    40c3b8 <main@@Base+0x52e8>
  40c0b9:	mov    rbx,r15
  40c0bc:	cmp    rcx,0x6
  40c0c0:	jl     40c506 <main@@Base+0x5436>
  40c0c6:	mov    rax,QWORD PTR [rsp+0x28]
  40c0cb:	cmp    DWORD PTR [rax],0x0
  40c0ce:	movzx  eax,BYTE PTR [r15+0x5]
  40c0d3:	je     40c1d5 <main@@Base+0x5105>
  40c0d9:	cmp    al,0x21
  40c0db:	jl     40c0e8 <main@@Base+0x5018>
  40c0dd:	mov    rbx,r15
  40c0e0:	cmp    al,0x3a
  40c0e2:	jne    40c506 <main@@Base+0x5436>
  40c0e8:	lea    rsi,[r15+0x5]
  40c0ec:	mov    rax,QWORD PTR [rsp+0x28]
  40c0f1:	mov    DWORD PTR [rax],0x0
  40c0f7:	jmp    40c1e4 <main@@Base+0x5114>
  40c0fc:	cmp    rdx,rsi
  40c0ff:	je     40c157 <main@@Base+0x5087>
  40c101:	movabs rax,0x7a00000000000000
  40c10b:	cmp    rdx,rax
  40c10e:	jne    40c399 <main@@Base+0x52c9>
  40c114:	mov    rbx,r15
  40c117:	cmp    rcx,0x2
  40c11b:	jl     40c853 <main@@Base+0x5783>
  40c121:	mov    rax,QWORD PTR [rsp+0x28]
  40c126:	cmp    DWORD PTR [rax],0x0
  40c129:	movzx  eax,BYTE PTR [r15+0x1]
  40c12e:	je     40c576 <main@@Base+0x54a6>
  40c134:	cmp    al,0x21
  40c136:	jl     40c143 <main@@Base+0x5073>
  40c138:	mov    rbx,r15
  40c13b:	cmp    al,0x3a
  40c13d:	jne    40c853 <main@@Base+0x5783>
  40c143:	lea    rsi,[r15+0x1]
  40c147:	mov    rax,QWORD PTR [rsp+0x28]
  40c14c:	mov    DWORD PTR [rax],0x0
  40c152:	jmp    40c585 <main@@Base+0x54b5>
  40c157:	mov    rbx,r15
  40c15a:	cmp    rcx,0x2
  40c15e:	jl     40c8d7 <main@@Base+0x5807>
  40c164:	mov    rax,QWORD PTR [rsp+0x28]
  40c169:	cmp    DWORD PTR [rax],0x0
  40c16c:	movzx  eax,BYTE PTR [r15+0x1]
  40c171:	je     40c5b0 <main@@Base+0x54e0>
  40c177:	cmp    al,0x21
  40c179:	jl     40c186 <main@@Base+0x50b6>
  40c17b:	mov    rbx,r15
  40c17e:	cmp    al,0x3a
  40c180:	jne    40c8d7 <main@@Base+0x5807>
  40c186:	lea    rsi,[r15+0x1]
  40c18a:	mov    rax,QWORD PTR [rsp+0x28]
  40c18f:	mov    DWORD PTR [rax],0x0
  40c195:	jmp    40c5bf <main@@Base+0x54ef>
  40c19a:	mov    rbx,r15
  40c19d:	cmp    al,0x22
  40c19f:	jne    40c3fe <main@@Base+0x532e>
  40c1a5:	lea    rsi,[r15+0x6]
  40c1a9:	mov    rbx,QWORD PTR [rsp+0x8]
  40c1ae:	mov    rax,rbx
  40c1b1:	sub    rax,rsi
  40c1b4:	cmp    rax,0x2
  40c1b8:	jl     40c218 <main@@Base+0x5148>
  40c1ba:	cmp    BYTE PTR [rsi],0x20
  40c1bd:	jg     40c228 <main@@Base+0x5158>
  40c1bf:	jne    40c218 <main@@Base+0x5148>
  40c1c1:	cmp    BYTE PTR [rsi+0x1],0x20
  40c1c5:	jle    40c218 <main@@Base+0x5148>
  40c1c7:	add    rsi,0x1
  40c1cb:	cmp    rsi,rbx
  40c1ce:	jne    40c231 <main@@Base+0x5161>
  40c1d0:	jmp    40c2d8 <main@@Base+0x5208>
  40c1d5:	mov    rbx,r15
  40c1d8:	cmp    al,0x22
  40c1da:	jne    40c506 <main@@Base+0x5436>
  40c1e0:	lea    rsi,[r15+0x6]
  40c1e4:	mov    rbx,QWORD PTR [rsp+0x8]
  40c1e9:	mov    rax,rbx
  40c1ec:	sub    rax,rsi
  40c1ef:	cmp    rax,0x2
  40c1f3:	jl     40c27c <main@@Base+0x51ac>
  40c1f9:	cmp    BYTE PTR [rsi],0x20
  40c1fc:	jg     40c28c <main@@Base+0x51bc>
  40c202:	jne    40c27c <main@@Base+0x51ac>
  40c204:	cmp    BYTE PTR [rsi+0x1],0x20
  40c208:	jle    40c27c <main@@Base+0x51ac>
  40c20a:	add    rsi,0x1
  40c20e:	cmp    rsi,rbx
  40c211:	jne    40c291 <main@@Base+0x51c1>
  40c213:	jmp    40c2ef <main@@Base+0x521f>
  40c218:	mov    rdi,QWORD PTR [rsp+0x10]
  40c21d:	mov    rdx,rbx
  40c220:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40c225:	mov    rsi,rax
  40c228:	cmp    rsi,rbx
  40c22b:	je     40c2d8 <main@@Base+0x5208>
  40c231:	cmp    BYTE PTR [rsi],0x3a
  40c234:	jne    40c2d8 <main@@Base+0x5208>
  40c23a:	mov    rax,rbx
  40c23d:	lea    rbx,[rsi+0x1]
  40c241:	sub    rax,rbx
  40c244:	cmp    rax,0x2
  40c248:	jl     40c3e9 <main@@Base+0x5319>
  40c24e:	cmp    BYTE PTR [rbx],0x20
  40c251:	jg     40c3fe <main@@Base+0x532e>
  40c257:	jne    40c3e9 <main@@Base+0x5319>
  40c25d:	cmp    BYTE PTR [rsi+0x2],0x20
  40c261:	jle    40c3e9 <main@@Base+0x5319>
  40c267:	add    rsi,0x2
  40c26b:	mov    rbx,rsi
  40c26e:	cmp    r15,rbx
  40c271:	jne    40c407 <main@@Base+0x5337>
  40c277:	jmp    40c947 <main@@Base+0x5877>
  40c27c:	mov    rdi,QWORD PTR [rsp+0x10]
  40c281:	mov    rdx,rbx
  40c284:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40c289:	mov    rsi,rax
  40c28c:	cmp    rsi,rbx
  40c28f:	je     40c2ef <main@@Base+0x521f>
  40c291:	cmp    BYTE PTR [rsi],0x3a
  40c294:	jne    40c2ef <main@@Base+0x521f>
  40c296:	mov    rax,rbx
  40c299:	lea    rbx,[rsi+0x1]
  40c29d:	sub    rax,rbx
  40c2a0:	cmp    rax,0x2
  40c2a4:	jl     40c4f1 <main@@Base+0x5421>
  40c2aa:	cmp    BYTE PTR [rbx],0x20
  40c2ad:	jg     40c506 <main@@Base+0x5436>
  40c2b3:	jne    40c4f1 <main@@Base+0x5421>
  40c2b9:	cmp    BYTE PTR [rsi+0x2],0x20
  40c2bd:	jle    40c4f1 <main@@Base+0x5421>
  40c2c3:	add    rsi,0x2
  40c2c7:	mov    rbx,rsi
  40c2ca:	cmp    r15,rbx
  40c2cd:	jne    40c50f <main@@Base+0x543f>
  40c2d3:	jmp    40c947 <main@@Base+0x5877>
  40c2d8:	mov    ecx,0x4
  40c2dd:	mov    rdi,QWORD PTR [rsp+0x10]
  40c2e2:	mov    rdx,rbx
  40c2e5:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  40c2ea:	jmp    40c3fb <main@@Base+0x532b>
  40c2ef:	mov    ecx,0x4
  40c2f4:	mov    rdi,QWORD PTR [rsp+0x10]
  40c2f9:	mov    rdx,rbx
  40c2fc:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  40c301:	jmp    40c503 <main@@Base+0x5433>
  40c306:	mov    rax,r15
  40c309:	cmp    cl,0x22
  40c30c:	jne    40c81a <main@@Base+0x574a>
  40c312:	lea    rsi,[r15+0x6]
  40c316:	mov    rax,r13
  40c319:	sub    rax,rsi
  40c31c:	cmp    rax,0x2
  40c320:	jl     40c33a <main@@Base+0x526a>
  40c322:	cmp    BYTE PTR [rsi],0x20
  40c325:	jg     40c34a <main@@Base+0x527a>
  40c327:	jne    40c33a <main@@Base+0x526a>
  40c329:	cmp    BYTE PTR [rsi+0x1],0x20
  40c32d:	jle    40c33a <main@@Base+0x526a>
  40c32f:	add    rsi,0x1
  40c333:	cmp    rsi,r13
  40c336:	jne    40c34f <main@@Base+0x527f>
  40c338:	jmp    40c37e <main@@Base+0x52ae>
  40c33a:	mov    rdi,QWORD PTR [rsp+0x10]
  40c33f:	mov    rdx,r13
  40c342:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40c347:	mov    rsi,rax
  40c34a:	cmp    rsi,r13
  40c34d:	je     40c37e <main@@Base+0x52ae>
  40c34f:	cmp    BYTE PTR [rsi],0x3a
  40c352:	jne    40c37e <main@@Base+0x52ae>
  40c354:	lea    rax,[rsi+0x1]
  40c358:	sub    r13,rax
  40c35b:	cmp    r13,0x2
  40c35f:	jl     40c805 <main@@Base+0x5735>
  40c365:	cmp    BYTE PTR [rax],0x20
  40c368:	jle    40c7f1 <main@@Base+0x5721>
  40c36e:	mov    r13,QWORD PTR [rsp+0x8]
  40c373:	cmp    r15,rax
  40c376:	jne    40c823 <main@@Base+0x5753>
  40c37c:	jmp    40c399 <main@@Base+0x52c9>
  40c37e:	mov    ecx,0x4
  40c383:	mov    rdi,QWORD PTR [rsp+0x10]
  40c388:	mov    rdx,r13
  40c38b:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  40c390:	cmp    r15,rax
  40c393:	jne    40c823 <main@@Base+0x5753>
  40c399:	mov    rdi,QWORD PTR [rsp+0x10]
  40c39e:	mov    rsi,r15
  40c3a1:	mov    r15,rdi
  40c3a4:	jmp    40c957 <main@@Base+0x5887>
  40c3a9:	mov    rbx,r15
  40c3ac:	cmp    al,0x22
  40c3ae:	jne    40c785 <main@@Base+0x56b5>
  40c3b4:	lea    rsi,[r15+0x2]
  40c3b8:	mov    rbx,QWORD PTR [rsp+0x8]
  40c3bd:	mov    rax,rbx
  40c3c0:	sub    rax,rsi
  40c3c3:	cmp    rax,0x2
  40c3c7:	jl     40c710 <main@@Base+0x5640>
  40c3cd:	cmp    BYTE PTR [rsi],0x20
  40c3d0:	jle    40c6f8 <main@@Base+0x5628>
  40c3d6:	mov    rbx,QWORD PTR [rsp+0x8]
  40c3db:	cmp    rsi,rbx
  40c3de:	jne    40c725 <main@@Base+0x5655>
  40c3e4:	jmp    40c75a <main@@Base+0x568a>
  40c3e9:	mov    rdi,QWORD PTR [rsp+0x10]
  40c3ee:	mov    rsi,rbx
  40c3f1:	mov    rdx,QWORD PTR [rsp+0x8]
  40c3f6:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40c3fb:	mov    rbx,rax
  40c3fe:	cmp    r15,rbx
  40c401:	je     40c947 <main@@Base+0x5877>
  40c407:	mov    QWORD PTR [rsp+0x30],0x0
  40c410:	mov    DWORD PTR [rsp+0x40],0x0
  40c418:	mov    BYTE PTR [rsp+0x1c],0x0
  40c41d:	mov    rdx,QWORD PTR [rsp+0x8]
  40c422:	cmp    rbx,rdx
  40c425:	je     40c462 <main@@Base+0x5392>
  40c427:	mov    r15,QWORD PTR [rsp+0x10]
  40c42c:	mov    rdi,r15
  40c42f:	mov    rsi,rbx
  40c432:	lea    rcx,[rsp+0x40]
  40c437:	lea    r8,[rsp+0x30]
  40c43c:	call   427360 <flatcc_json_parser_integer@@Base>
  40c441:	cmp    rax,rbx
  40c444:	je     40c473 <main@@Base+0x53a3>
  40c446:	mov    rcx,QWORD PTR [rsp+0x30]
  40c44b:	cmp    DWORD PTR [rsp+0x40],0x0
  40c450:	je     40c47f <main@@Base+0x53af>
  40c452:	cmp    rcx,0x81
  40c459:	jb     40c4a6 <main@@Base+0x53d6>
  40c45b:	mov    ecx,0x8
  40c460:	jmp    40c48d <main@@Base+0x53bd>
  40c462:	xor    ecx,ecx
  40c464:	mov    rax,rdx
  40c467:	mov    r15,QWORD PTR [rsp+0x10]
  40c46c:	cmp    rbx,rax
  40c46f:	jne    40c4e8 <main@@Base+0x5418>
  40c471:	jmp    40c4b2 <main@@Base+0x53e2>
  40c473:	xor    ecx,ecx
  40c475:	mov    rax,rbx
  40c478:	cmp    rbx,rax
  40c47b:	jne    40c4e8 <main@@Base+0x5418>
  40c47d:	jmp    40c4b2 <main@@Base+0x53e2>
  40c47f:	cmp    rcx,0x80
  40c486:	jb     40c4a9 <main@@Base+0x53d9>
  40c488:	mov    ecx,0x7
  40c48d:	mov    rdi,r15
  40c490:	mov    rsi,rax
  40c493:	mov    rdx,QWORD PTR [rsp+0x8]
  40c498:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  40c49d:	xor    ecx,ecx
  40c49f:	cmp    rbx,rax
  40c4a2:	jne    40c4e8 <main@@Base+0x5418>
  40c4a4:	jmp    40c4b2 <main@@Base+0x53e2>
  40c4a6:	neg    rcx
  40c4a9:	mov    BYTE PTR [rsp+0x1c],cl
  40c4ad:	cmp    rbx,rax
  40c4b0:	jne    40c4e8 <main@@Base+0x5418>
  40c4b2:	mov    rdi,r15
  40c4b5:	mov    rsi,rbx
  40c4b8:	mov    rbp,QWORD PTR [rsp+0x8]
  40c4bd:	mov    rdx,rbp
  40c4c0:	lea    rcx,[rip+0x37eb9]        # 444380 <__data_start@@Base+0x2d0>
  40c4c7:	lea    r8,[rsp+0x1c]
  40c4cc:	call   413b90 <main@@Base+0xcac0>
  40c4d1:	cmp    rax,rbx
  40c4d4:	je     4103e4 <main@@Base+0x9314>
  40c4da:	cmp    rax,rbp
  40c4dd:	je     4103e4 <main@@Base+0x9314>
  40c4e3:	movzx  ecx,BYTE PTR [rsp+0x1c]
  40c4e8:	mov    BYTE PTR [r14+0x18],cl
  40c4ec:	jmp    40c940 <main@@Base+0x5870>
  40c4f1:	mov    rdi,QWORD PTR [rsp+0x10]
  40c4f6:	mov    rsi,rbx
  40c4f9:	mov    rdx,QWORD PTR [rsp+0x8]
  40c4fe:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40c503:	mov    rbx,rax
  40c506:	cmp    r15,rbx
  40c509:	je     40c947 <main@@Base+0x5877>
  40c50f:	mov    QWORD PTR [rsp+0x30],0x0
  40c518:	mov    r15,QWORD PTR [rsp+0x10]
  40c51d:	mov    rdi,r15
  40c520:	mov    rsi,rbx
  40c523:	mov    rdx,QWORD PTR [rsp+0x8]
  40c528:	lea    rcx,[rsp+0x30]
  40c52d:	call   426a60 <flatcc_json_parser_double@@Base>
  40c532:	cmp    rbx,rax
  40c535:	jne    40c568 <main@@Base+0x5498>
  40c537:	mov    rdi,r15
  40c53a:	mov    rsi,rbx
  40c53d:	mov    rbp,QWORD PTR [rsp+0x8]
  40c542:	mov    rdx,rbp
  40c545:	lea    rcx,[rip+0x37e54]        # 4443a0 <__data_start@@Base+0x2f0>
  40c54c:	lea    r8,[rsp+0x30]
  40c551:	call   4164b0 <main@@Base+0xf3e0>
  40c556:	cmp    rax,rbx
  40c559:	je     4103e4 <main@@Base+0x9314>
  40c55f:	cmp    rax,rbp
  40c562:	je     4103e4 <main@@Base+0x9314>
  40c568:	mov    rcx,QWORD PTR [rsp+0x30]
  40c56d:	mov    QWORD PTR [r14+0x10],rcx
  40c571:	jmp    40c940 <main@@Base+0x5870>
  40c576:	mov    rbx,r15
  40c579:	cmp    al,0x22
  40c57b:	jne    40c853 <main@@Base+0x5783>
  40c581:	lea    rsi,[r15+0x2]
  40c585:	mov    rax,QWORD PTR [rsp+0x8]
  40c58a:	sub    rax,rsi
  40c58d:	cmp    rax,0x2
  40c591:	jl     40c5fa <main@@Base+0x552a>
  40c593:	cmp    BYTE PTR [rsi],0x20
  40c596:	jg     40c60c <main@@Base+0x553c>
  40c598:	jne    40c5fa <main@@Base+0x552a>
  40c59a:	cmp    BYTE PTR [rsi+0x1],0x20
  40c59e:	jle    40c5fa <main@@Base+0x552a>
  40c5a0:	add    rsi,0x1
  40c5a4:	cmp    rsi,QWORD PTR [rsp+0x8]
  40c5a9:	jne    40c617 <main@@Base+0x5547>
  40c5ab:	jmp    40c6c6 <main@@Base+0x55f6>
  40c5b0:	mov    rbx,r15
  40c5b3:	cmp    al,0x22
  40c5b5:	jne    40c8d7 <main@@Base+0x5807>
  40c5bb:	lea    rsi,[r15+0x2]
  40c5bf:	mov    rax,QWORD PTR [rsp+0x8]
  40c5c4:	sub    rax,rsi
  40c5c7:	cmp    rax,0x2
  40c5cb:	jl     40c664 <main@@Base+0x5594>
  40c5d1:	cmp    BYTE PTR [rsi],0x20
  40c5d4:	jg     40c676 <main@@Base+0x55a6>
  40c5da:	jne    40c664 <main@@Base+0x5594>
  40c5e0:	cmp    BYTE PTR [rsi+0x1],0x20
  40c5e4:	jle    40c664 <main@@Base+0x5594>
  40c5e6:	add    rsi,0x1
  40c5ea:	cmp    rsi,QWORD PTR [rsp+0x8]
  40c5ef:	jne    40c67d <main@@Base+0x55ad>
  40c5f5:	jmp    40c6df <main@@Base+0x560f>
  40c5fa:	mov    rdi,QWORD PTR [rsp+0x10]
  40c5ff:	mov    rdx,QWORD PTR [rsp+0x8]
  40c604:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40c609:	mov    rsi,rax
  40c60c:	cmp    rsi,QWORD PTR [rsp+0x8]
  40c611:	je     40c6c6 <main@@Base+0x55f6>
  40c617:	cmp    BYTE PTR [rsi],0x3a
  40c61a:	jne    40c6c6 <main@@Base+0x55f6>
  40c620:	lea    rbx,[rsi+0x1]
  40c624:	mov    rax,QWORD PTR [rsp+0x8]
  40c629:	sub    rax,rbx
  40c62c:	cmp    rax,0x2
  40c630:	jl     40c83e <main@@Base+0x576e>
  40c636:	cmp    BYTE PTR [rbx],0x20
  40c639:	jg     40c853 <main@@Base+0x5783>
  40c63f:	jne    40c83e <main@@Base+0x576e>
  40c645:	cmp    BYTE PTR [rsi+0x2],0x20
  40c649:	jle    40c83e <main@@Base+0x576e>
  40c64f:	add    rsi,0x2
  40c653:	mov    rbx,rsi
  40c656:	cmp    r15,rbx
  40c659:	jne    40c85c <main@@Base+0x578c>
  40c65f:	jmp    40c947 <main@@Base+0x5877>
  40c664:	mov    rdi,QWORD PTR [rsp+0x10]
  40c669:	mov    rdx,QWORD PTR [rsp+0x8]
  40c66e:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40c673:	mov    rsi,rax
  40c676:	cmp    rsi,QWORD PTR [rsp+0x8]
  40c67b:	je     40c6df <main@@Base+0x560f>
  40c67d:	cmp    BYTE PTR [rsi],0x3a
  40c680:	jne    40c6df <main@@Base+0x560f>
  40c682:	lea    rbx,[rsi+0x1]
  40c686:	mov    rax,QWORD PTR [rsp+0x8]
  40c68b:	sub    rax,rbx
  40c68e:	cmp    rax,0x2
  40c692:	jl     40c8c2 <main@@Base+0x57f2>
  40c698:	cmp    BYTE PTR [rbx],0x20
  40c69b:	jg     40c8d7 <main@@Base+0x5807>
  40c6a1:	jne    40c8c2 <main@@Base+0x57f2>
  40c6a7:	cmp    BYTE PTR [rsi+0x2],0x20
  40c6ab:	jle    40c8c2 <main@@Base+0x57f2>
  40c6b1:	add    rsi,0x2
  40c6b5:	mov    rbx,rsi
  40c6b8:	cmp    r15,rbx
  40c6bb:	jne    40c8dc <main@@Base+0x580c>
  40c6c1:	jmp    40c947 <main@@Base+0x5877>
  40c6c6:	mov    ecx,0x4
  40c6cb:	mov    rdi,QWORD PTR [rsp+0x10]
  40c6d0:	mov    rdx,QWORD PTR [rsp+0x8]
  40c6d5:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  40c6da:	jmp    40c850 <main@@Base+0x5780>
  40c6df:	mov    ecx,0x4
  40c6e4:	mov    rdi,QWORD PTR [rsp+0x10]
  40c6e9:	mov    rdx,QWORD PTR [rsp+0x8]
  40c6ee:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  40c6f3:	jmp    40c8d4 <main@@Base+0x5804>
  40c6f8:	mov    rbx,QWORD PTR [rsp+0x8]
  40c6fd:	jne    40c710 <main@@Base+0x5640>
  40c6ff:	cmp    BYTE PTR [rsi+0x1],0x20
  40c703:	jle    40c710 <main@@Base+0x5640>
  40c705:	add    rsi,0x1
  40c709:	cmp    rsi,rbx
  40c70c:	jne    40c725 <main@@Base+0x5655>
  40c70e:	jmp    40c75a <main@@Base+0x568a>
  40c710:	mov    rdi,QWORD PTR [rsp+0x10]
  40c715:	mov    rdx,rbx
  40c718:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40c71d:	mov    rsi,rax
  40c720:	cmp    rsi,rbx
  40c723:	je     40c75a <main@@Base+0x568a>
  40c725:	cmp    BYTE PTR [rsi],0x3a
  40c728:	jne    40c75a <main@@Base+0x568a>
  40c72a:	lea    rbx,[rsi+0x1]
  40c72e:	mov    rax,QWORD PTR [rsp+0x8]
  40c733:	sub    rax,rbx
  40c736:	cmp    rax,0x2
  40c73a:	jl     40c770 <main@@Base+0x56a0>
  40c73c:	cmp    BYTE PTR [rbx],0x20
  40c73f:	jg     40c785 <main@@Base+0x56b5>
  40c741:	jne    40c770 <main@@Base+0x56a0>
  40c743:	cmp    BYTE PTR [rsi+0x2],0x20
  40c747:	jle    40c770 <main@@Base+0x56a0>
  40c749:	add    rsi,0x2
  40c74d:	mov    rbx,rsi
  40c750:	cmp    r15,rbx
  40c753:	jne    40c78e <main@@Base+0x56be>
  40c755:	jmp    40c947 <main@@Base+0x5877>
  40c75a:	mov    ecx,0x4
  40c75f:	mov    rdi,QWORD PTR [rsp+0x10]
  40c764:	mov    rdx,QWORD PTR [rsp+0x8]
  40c769:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  40c76e:	jmp    40c782 <main@@Base+0x56b2>
  40c770:	mov    rdi,QWORD PTR [rsp+0x10]
  40c775:	mov    rsi,rbx
  40c778:	mov    rdx,QWORD PTR [rsp+0x8]
  40c77d:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40c782:	mov    rbx,rax
  40c785:	cmp    r15,rbx
  40c788:	je     40c947 <main@@Base+0x5877>
  40c78e:	mov    DWORD PTR [rsp+0x30],0x0
  40c796:	mov    r15,QWORD PTR [rsp+0x10]
  40c79b:	mov    rdi,r15
  40c79e:	mov    rsi,rbx
  40c7a1:	mov    rdx,QWORD PTR [rsp+0x8]
  40c7a6:	lea    rcx,[rsp+0x30]
  40c7ab:	call   427240 <flatcc_json_parser_float@@Base>
  40c7b0:	cmp    rbx,rax
  40c7b3:	jne    40c7e5 <main@@Base+0x5715>
  40c7b5:	mov    rdi,r15
  40c7b8:	mov    rsi,rbx
  40c7bb:	mov    rdx,QWORD PTR [rsp+0x8]
  40c7c0:	lea    rcx,[rip+0x37bf9]        # 4443c0 <__data_start@@Base+0x310>
  40c7c7:	lea    r8,[rsp+0x30]
  40c7cc:	call   415b70 <main@@Base+0xeaa0>
  40c7d1:	cmp    rax,rbx
  40c7d4:	je     4103e4 <main@@Base+0x9314>
  40c7da:	cmp    rax,QWORD PTR [rsp+0x8]
  40c7df:	je     4103e4 <main@@Base+0x9314>
  40c7e5:	mov    ecx,DWORD PTR [rsp+0x30]
  40c7e9:	mov    DWORD PTR [r14],ecx
  40c7ec:	jmp    40c940 <main@@Base+0x5870>
  40c7f1:	jne    40c805 <main@@Base+0x5735>
  40c7f3:	cmp    BYTE PTR [rsi+0x2],0x20
  40c7f7:	jle    40c805 <main@@Base+0x5735>
  40c7f9:	add    rsi,0x2
  40c7fd:	mov    rax,rsi
  40c800:	jmp    40c36e <main@@Base+0x529e>
  40c805:	mov    rdi,QWORD PTR [rsp+0x10]
  40c80a:	mov    rsi,rax
  40c80d:	mov    r13,QWORD PTR [rsp+0x8]
  40c812:	mov    rdx,r13
  40c815:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40c81a:	cmp    r15,rax
  40c81d:	je     40c399 <main@@Base+0x52c9>
  40c823:	mov    r15,QWORD PTR [rsp+0x10]
  40c828:	mov    rdi,r15
  40c82b:	mov    rsi,rax
  40c82e:	mov    rdx,r13
  40c831:	mov    rcx,r12
  40c834:	call   414130 <main@@Base+0xd060>
  40c839:	jmp    40c95f <main@@Base+0x588f>
  40c83e:	mov    rdi,QWORD PTR [rsp+0x10]
  40c843:	mov    rsi,rbx
  40c846:	mov    rdx,QWORD PTR [rsp+0x8]
  40c84b:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40c850:	mov    rbx,rax
  40c853:	cmp    r15,rbx
  40c856:	je     40c947 <main@@Base+0x5877>
  40c85c:	mov    DWORD PTR [rsp+0x30],0x0
  40c864:	mov    r15,QWORD PTR [rsp+0x10]
  40c869:	mov    rdi,r15
  40c86c:	mov    rsi,rbx
  40c86f:	mov    rdx,QWORD PTR [rsp+0x8]
  40c874:	lea    rcx,[rsp+0x30]
  40c879:	call   427240 <flatcc_json_parser_float@@Base>
  40c87e:	cmp    rbx,rax
  40c881:	jne    40c8b8 <main@@Base+0x57e8>
  40c883:	mov    rdi,r15
  40c886:	mov    rsi,rbx
  40c889:	mov    rdx,QWORD PTR [rsp+0x8]
  40c88e:	lea    rcx,[rip+0x37b4b]        # 4443e0 <__data_start@@Base+0x330>
  40c895:	lea    r8,[rsp+0x30]
  40c89a:	call   415b70 <main@@Base+0xeaa0>
  40c89f:	cmp    rax,rbx
  40c8a2:	je     4103e4 <main@@Base+0x9314>
  40c8a8:	cmp    rax,QWORD PTR [rsp+0x8]
  40c8ad:	je     4103e4 <main@@Base+0x9314>
  40c8b3:	mov    r15,QWORD PTR [rsp+0x10]
  40c8b8:	mov    ecx,DWORD PTR [rsp+0x30]
  40c8bc:	mov    DWORD PTR [r14+0x8],ecx
  40c8c0:	jmp    40c940 <main@@Base+0x5870>
  40c8c2:	mov    rdi,QWORD PTR [rsp+0x10]
  40c8c7:	mov    rsi,rbx
  40c8ca:	mov    rdx,QWORD PTR [rsp+0x8]
  40c8cf:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40c8d4:	mov    rbx,rax
  40c8d7:	cmp    r15,rbx
  40c8da:	je     40c947 <main@@Base+0x5877>
  40c8dc:	mov    DWORD PTR [rsp+0x30],0x0
  40c8e4:	mov    r15,QWORD PTR [rsp+0x10]
  40c8e9:	mov    rdi,r15
  40c8ec:	mov    rsi,rbx
  40c8ef:	mov    rdx,QWORD PTR [rsp+0x8]
  40c8f4:	lea    rcx,[rsp+0x30]
  40c8f9:	call   427240 <flatcc_json_parser_float@@Base>
  40c8fe:	cmp    rbx,rax
  40c901:	jne    40c938 <main@@Base+0x5868>
  40c903:	mov    rdi,r15
  40c906:	mov    rsi,rbx
  40c909:	mov    rdx,QWORD PTR [rsp+0x8]
  40c90e:	lea    rcx,[rip+0x37aeb]        # 444400 <__data_start@@Base+0x350>
  40c915:	lea    r8,[rsp+0x30]
  40c91a:	call   415b70 <main@@Base+0xeaa0>
  40c91f:	cmp    rax,rbx
  40c922:	je     4103e4 <main@@Base+0x9314>
  40c928:	cmp    rax,QWORD PTR [rsp+0x8]
  40c92d:	je     4103e4 <main@@Base+0x9314>
  40c933:	mov    r15,QWORD PTR [rsp+0x10]
  40c938:	mov    ecx,DWORD PTR [rsp+0x30]
  40c93c:	mov    DWORD PTR [r14+0x4],ecx
  40c940:	mov    r13,QWORD PTR [rsp+0x8]
  40c945:	jmp    40c95f <main@@Base+0x588f>
  40c947:	mov    rdi,QWORD PTR [rsp+0x10]
  40c94c:	mov    rsi,r15
  40c94f:	mov    r15,rdi
  40c952:	mov    r13,QWORD PTR [rsp+0x8]
  40c957:	mov    rdx,r13
  40c95a:	call   425cc0 <flatcc_json_parser_unmatched_symbol@@Base>
  40c95f:	mov    rcx,r13
  40c962:	sub    rcx,rax
  40c965:	cmp    rcx,0x2
  40c969:	jl     40c986 <main@@Base+0x58b6>
  40c96b:	cmp    BYTE PTR [rax],0x20
  40c96e:	jg     40c994 <main@@Base+0x58c4>
  40c970:	jne    40c986 <main@@Base+0x58b6>
  40c972:	cmp    BYTE PTR [rax+0x1],0x20
  40c976:	jle    40c986 <main@@Base+0x58b6>
  40c978:	add    rax,0x1
  40c97c:	cmp    rax,r13
  40c97f:	jne    40c99d <main@@Base+0x58cd>
  40c981:	jmp    40d1b4 <main@@Base+0x60e4>
  40c986:	mov    rdi,r15
  40c989:	mov    rsi,rax
  40c98c:	mov    rdx,r13
  40c98f:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40c994:	cmp    rax,r13
  40c997:	je     40d1b4 <main@@Base+0x60e4>
  40c99d:	movzx  ecx,BYTE PTR [rax]
  40c9a0:	cmp    cl,0x2c
  40c9a3:	jne    40d229 <main@@Base+0x6159>
  40c9a9:	lea    rsi,[rax+0x1]
  40c9ad:	mov    rcx,r13
  40c9b0:	sub    rcx,rsi
  40c9b3:	cmp    rcx,0x2
  40c9b7:	jl     40c9cc <main@@Base+0x58fc>
  40c9b9:	cmp    BYTE PTR [rsi],0x20
  40c9bc:	jg     40c9da <main@@Base+0x590a>
  40c9be:	jne    40c9cc <main@@Base+0x58fc>
  40c9c0:	cmp    BYTE PTR [rax+0x2],0x20
  40c9c4:	jle    40c9cc <main@@Base+0x58fc>
  40c9c6:	add    rax,0x2
  40c9ca:	jmp    40c9d7 <main@@Base+0x5907>
  40c9cc:	mov    rdi,r15
  40c9cf:	mov    rdx,r13
  40c9d2:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40c9d7:	mov    rsi,rax
  40c9da:	cmp    rsi,r13
  40c9dd:	je     40d4b5 <main@@Base+0x63e5>
  40c9e3:	cmp    BYTE PTR [rsi],0x7d
  40c9e6:	jne    40be6b <main@@Base+0x4d9b>
  40c9ec:	lea    r14,[rsi+0x1]
  40c9f0:	mov    rax,r13
  40c9f3:	sub    rax,r14
  40c9f6:	cmp    rax,0x2
  40c9fa:	mov    rbp,QWORD PTR [rsp+0x20]
  40c9ff:	movabs r12,0x7465737400000000
  40ca09:	jl     40ca29 <main@@Base+0x5959>
  40ca0b:	cmp    BYTE PTR [r14],0x20
  40ca0f:	jg     40f890 <main@@Base+0x87c0>
  40ca15:	jne    40ca29 <main@@Base+0x5959>
  40ca17:	cmp    BYTE PTR [rsi+0x2],0x20
  40ca1b:	jle    40ca29 <main@@Base+0x5959>
  40ca1d:	add    rsi,0x2
  40ca21:	mov    r14,rsi
  40ca24:	jmp    40f890 <main@@Base+0x87c0>
  40ca29:	mov    rdi,r15
  40ca2c:	mov    rsi,r14
  40ca2f:	mov    rdx,r13
  40ca32:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40ca37:	mov    r14,rax
  40ca3a:	jmp    40f890 <main@@Base+0x87c0>
  40ca3f:	mov    rdi,r15
  40ca42:	mov    rsi,rbx
  40ca45:	mov    rdx,QWORD PTR [rsp+0x8]
  40ca4a:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40ca4f:	mov    rbx,rax
  40ca52:	cmp    r14,rbx
  40ca55:	je     40b24f <main@@Base+0x417f>
  40ca5b:	mov    DWORD PTR [rsp+0x30],0x0
  40ca63:	mov    rdi,r15
  40ca66:	mov    rsi,rbx
  40ca69:	mov    rdx,QWORD PTR [rsp+0x8]
  40ca6e:	lea    rcx,[rsp+0x30]
  40ca73:	call   427240 <flatcc_json_parser_float@@Base>
  40ca78:	mov    r14,rax
  40ca7b:	cmp    rbx,rax
  40ca7e:	mov    rbp,QWORD PTR [rsp+0x20]
  40ca83:	jne    40cac3 <main@@Base+0x59f3>
  40ca85:	mov    rdi,r15
  40ca88:	mov    rsi,rbx
  40ca8b:	mov    r12,QWORD PTR [rsp+0x8]
  40ca90:	mov    rdx,r12
  40ca93:	lea    rcx,[rip+0x37726]        # 4441c0 <__data_start@@Base+0x110>
  40ca9a:	lea    r8,[rsp+0x30]
  40ca9f:	call   415b70 <main@@Base+0xeaa0>
  40caa4:	mov    r14,rax
  40caa7:	cmp    rax,rbx
  40caaa:	je     411d35 <main@@Base+0xac65>
  40cab0:	cmp    r14,r12
  40cab3:	movabs r12,0x7465737400000000
  40cabd:	je     411d35 <main@@Base+0xac65>
  40cac3:	vmovss xmm0,DWORD PTR [rsp+0x30]
  40cac9:	vucomiss xmm0,DWORD PTR [rip+0x28537]        # 435008 <_IO_stdin_used@@Base+0x8>
  40cad1:	mov    r13,QWORD PTR [rsp+0x8]
  40cad6:	jne    40cae5 <main@@Base+0x5a15>
  40cad8:	jp     40cae5 <main@@Base+0x5a15>
  40cada:	test   BYTE PTR [r15+0x10],0x2
  40cadf:	je     40f890 <main@@Base+0x87c0>
  40cae5:	mov    rdi,QWORD PTR [r15]
  40cae8:	mov    esi,0x1a
  40caed:	jmp    40d6ea <main@@Base+0x661a>
  40caf2:	mov    ecx,0x9
  40caf7:	mov    rdi,r15
  40cafa:	mov    rsi,rax
  40cafd:	mov    rdx,r13
  40cb00:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  40cb05:	mov    r14,rax
  40cb08:	jmp    409c2d <main@@Base+0x2b5d>
  40cb0d:	mov    rdi,QWORD PTR [rsp+0x10]
  40cb12:	mov    rsi,r14
  40cb15:	mov    rdx,r13
  40cb18:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40cb1d:	mov    r14,rax
  40cb20:	cmp    r14,r13
  40cb23:	je     40cb70 <main@@Base+0x5aa0>
  40cb25:	cmp    BYTE PTR [r14],0x3a
  40cb29:	jne    40cb70 <main@@Base+0x5aa0>
  40cb2b:	lea    r12,[r14+0x1]
  40cb2f:	mov    rax,r13
  40cb32:	sub    rax,r12
  40cb35:	cmp    rax,0x2
  40cb39:	jl     40e1ed <main@@Base+0x711d>
  40cb3f:	cmp    BYTE PTR [r12],0x20
  40cb44:	jg     40e200 <main@@Base+0x7130>
  40cb4a:	jne    40e1ed <main@@Base+0x711d>
  40cb50:	cmp    BYTE PTR [r14+0x2],0x20
  40cb55:	jle    40e1ed <main@@Base+0x711d>
  40cb5b:	add    r14,0x2
  40cb5f:	mov    r12,r14
  40cb62:	cmp    r15,r12
  40cb65:	jne    40e209 <main@@Base+0x7139>
  40cb6b:	jmp    40f863 <main@@Base+0x8793>
  40cb70:	mov    ecx,0x4
  40cb75:	mov    rdi,QWORD PTR [rsp+0x10]
  40cb7a:	mov    rsi,r14
  40cb7d:	mov    rdx,r13
  40cb80:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  40cb85:	jmp    40e1fd <main@@Base+0x712d>
  40cb8a:	mov    rdi,QWORD PTR [rsp+0x10]
  40cb8f:	mov    rsi,rbx
  40cb92:	mov    rdx,QWORD PTR [rsp+0x8]
  40cb97:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40cb9c:	mov    rbx,rax
  40cb9f:	cmp    r15,rbx
  40cba2:	je     40a0a1 <main@@Base+0x2fd1>
  40cba8:	mov    QWORD PTR [rsp+0x30],0x0
  40cbb1:	mov    DWORD PTR [rsp+0x40],0x0
  40cbb9:	mov    DWORD PTR [rsp+0x1c],0x0
  40cbc1:	xor    r12d,r12d
  40cbc4:	mov    rdx,QWORD PTR [rsp+0x8]
  40cbc9:	cmp    rbx,rdx
  40cbcc:	je     40cc28 <main@@Base+0x5b58>
  40cbce:	mov    r15,QWORD PTR [rsp+0x10]
  40cbd3:	mov    rdi,r15
  40cbd6:	mov    rsi,rbx
  40cbd9:	lea    rcx,[rsp+0x40]
  40cbde:	lea    r8,[rsp+0x30]
  40cbe3:	call   427360 <flatcc_json_parser_integer@@Base>
  40cbe8:	cmp    rax,rbx
  40cbeb:	mov    rbp,QWORD PTR [rsp+0x20]
  40cbf0:	je     40d118 <main@@Base+0x6048>
  40cbf6:	mov    r14,rax
  40cbf9:	mov    rax,QWORD PTR [rsp+0x30]
  40cbfe:	cmp    DWORD PTR [rsp+0x40],0x0
  40cc03:	je     40dab3 <main@@Base+0x69e3>
  40cc09:	mov    ecx,0xffffffff
  40cc0e:	lea    rcx,[rcx-0x7fffffff]
  40cc15:	cmp    rax,rcx
  40cc18:	jbe    40dfc9 <main@@Base+0x6ef9>
  40cc1e:	mov    ecx,0x8
  40cc23:	jmp    40dac4 <main@@Base+0x69f4>
  40cc28:	mov    r14,rdx
  40cc2b:	mov    r15,QWORD PTR [rsp+0x10]
  40cc30:	mov    rbp,QWORD PTR [rsp+0x20]
  40cc35:	cmp    rbx,r14
  40cc38:	jne    40e011 <main@@Base+0x6f41>
  40cc3e:	jmp    40dfd8 <main@@Base+0x6f08>
  40cc43:	mov    r14,r13
  40cc46:	jmp    40a768 <main@@Base+0x3698>
  40cc4b:	mov    BYTE PTR [rsp+0x1c],0x0
  40cc50:	lea    r14,[r12+0x5]
  40cc55:	xor    ebx,ebx
  40cc57:	mov    rbp,QWORD PTR [rsp+0x20]
  40cc5c:	cmp    r12,r14
  40cc5f:	jne    40cc99 <main@@Base+0x5bc9>
  40cc61:	mov    rdi,r15
  40cc64:	mov    rsi,r12
  40cc67:	mov    r13,QWORD PTR [rsp+0x8]
  40cc6c:	mov    rdx,r13
  40cc6f:	lea    rcx,[rip+0x3752a]        # 4441a0 <__data_start@@Base+0xf0>
  40cc76:	lea    r8,[rsp+0x1c]
  40cc7b:	call   4159b0 <main@@Base+0xe8e0>
  40cc80:	mov    r14,rax
  40cc83:	cmp    rax,r12
  40cc86:	je     411d63 <main@@Base+0xac93>
  40cc8c:	cmp    r14,r13
  40cc8f:	je     411d5e <main@@Base+0xac8e>
  40cc95:	mov    bl,BYTE PTR [rsp+0x1c]
  40cc99:	cmp    bl,0x1
  40cc9c:	movabs r12,0x7465737400000000
  40cca6:	jne    40ccaf <main@@Base+0x5bdf>
  40cca8:	test   BYTE PTR [r15+0x10],0x2
  40ccad:	je     40ccd1 <main@@Base+0x5c01>
  40ccaf:	mov    rdi,QWORD PTR [r15]
  40ccb2:	mov    esi,0xf
  40ccb7:	mov    edx,0x1
  40ccbc:	mov    ecx,0x1
  40ccc1:	call   421f20 <flatcc_builder_table_add@@Base>
  40ccc6:	test   rax,rax
  40ccc9:	je     411d5e <main@@Base+0xac8e>
  40cccf:	mov    BYTE PTR [rax],bl
  40ccd1:	mov    r13,QWORD PTR [rsp+0x8]
  40ccd6:	jmp    40f890 <main@@Base+0x87c0>
  40ccdb:	cmp    cl,0x5d
  40ccde:	jne    40d968 <main@@Base+0x6898>
  40cce4:	lea    r14,[rax+0x1]
  40cce8:	mov    rcx,r13
  40cceb:	sub    rcx,r14
  40ccee:	cmp    rcx,0x2
  40ccf2:	jl     40cd04 <main@@Base+0x5c34>
  40ccf4:	cmp    BYTE PTR [r14],0x20
  40ccf8:	jg     40a768 <main@@Base+0x3698>
  40ccfe:	je     40a7ce <main@@Base+0x36fe>
  40cd04:	mov    rdi,r15
  40cd07:	mov    rsi,r14
  40cd0a:	mov    rdx,r13
  40cd0d:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40cd12:	mov    r14,rax
  40cd15:	jmp    40a768 <main@@Base+0x3698>
  40cd1a:	mov    ecx,0x9
  40cd1f:	mov    rdi,r15
  40cd22:	mov    rsi,r13
  40cd25:	mov    rdx,r13
  40cd28:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  40cd2d:	mov    r14,rax
  40cd30:	jmp    40a75e <main@@Base+0x368e>
  40cd35:	test   al,al
  40cd37:	setne  bl
  40cd3a:	jmp    40b6a4 <main@@Base+0x45d4>
  40cd3f:	lea    r14,[r12+0x1]
  40cd44:	mov    rax,r13
  40cd47:	sub    rax,r14
  40cd4a:	cmp    rax,0x2
  40cd4e:	jl     40d4c5 <main@@Base+0x63f5>
  40cd54:	cmp    BYTE PTR [r14],0x20
  40cd58:	jg     40a75e <main@@Base+0x368e>
  40cd5e:	jne    40d4c5 <main@@Base+0x63f5>
  40cd64:	cmp    BYTE PTR [r12+0x2],0x20
  40cd6a:	jle    40d4c5 <main@@Base+0x63f5>
  40cd70:	add    r12,0x2
  40cd74:	mov    r14,r12
  40cd77:	jmp    40a75e <main@@Base+0x368e>
  40cd7c:	cmp    al,0x22
  40cd7e:	jne    40f863 <main@@Base+0x8793>
  40cd84:	add    r14,0x10
  40cd88:	mov    rax,r13
  40cd8b:	sub    rax,r14
  40cd8e:	cmp    rax,0x2
  40cd92:	jl     40cf29 <main@@Base+0x5e59>
  40cd98:	cmp    BYTE PTR [r14],0x20
  40cd9c:	jg     40cf3c <main@@Base+0x5e6c>
  40cda2:	jne    40cf29 <main@@Base+0x5e59>
  40cda8:	cmp    BYTE PTR [r14+0x1],0x20
  40cdad:	jle    40cf29 <main@@Base+0x5e59>
  40cdb3:	add    r14,0x1
  40cdb7:	cmp    r14,r13
  40cdba:	jne    40cf41 <main@@Base+0x5e71>
  40cdc0:	jmp    40cf79 <main@@Base+0x5ea9>
  40cdc5:	mov    rdi,QWORD PTR [rsp+0x10]
  40cdca:	mov    rsi,rax
  40cdcd:	mov    rdx,r13
  40cdd0:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40cdd5:	cmp    r15,rax
  40cdd8:	je     40ce13 <main@@Base+0x5d43>
  40cdda:	mov    r9,QWORD PTR [rsp+0x58]
  40cddf:	mov    ecx,0x0
  40cde4:	mov    r8d,0x8
  40cdea:	mov    r15,QWORD PTR [rsp+0x10]
  40cdef:	mov    rdi,r15
  40cdf2:	mov    rsi,rax
  40cdf5:	mov    rdx,r13
  40cdf8:	lea    rax,[rip+0x7a31]        # 414830 <main@@Base+0xd760>
  40cdff:	push   rax
  40ce00:	lea    rax,[rip+0x37359]        # 444160 <__data_start@@Base+0xb0>
  40ce07:	push   rax
  40ce08:	call   427ce0 <flatcc_json_parser_union_type@@Base>
  40ce0d:	add    rsp,0x10
  40ce11:	jmp    40ce26 <main@@Base+0x5d56>
  40ce13:	mov    rdi,QWORD PTR [rsp+0x10]
  40ce18:	mov    rsi,r15
  40ce1b:	mov    r15,rdi
  40ce1e:	mov    rdx,r13
  40ce21:	call   425cc0 <flatcc_json_parser_unmatched_symbol@@Base>
  40ce26:	mov    r14,rax
  40ce29:	mov    rbp,QWORD PTR [rsp+0x20]
  40ce2e:	jmp    40f890 <main@@Base+0x87c0>
  40ce33:	cmp    al,0x22
  40ce35:	jne    40f863 <main@@Base+0x8793>
  40ce3b:	add    r14,0x15
  40ce3f:	mov    rax,r13
  40ce42:	sub    rax,r14
  40ce45:	cmp    rax,0x2
  40ce49:	jl     40cf93 <main@@Base+0x5ec3>
  40ce4f:	cmp    BYTE PTR [r14],0x20
  40ce53:	jg     40cfa6 <main@@Base+0x5ed6>
  40ce59:	jne    40cf93 <main@@Base+0x5ec3>
  40ce5f:	cmp    BYTE PTR [r14+0x1],0x20
  40ce64:	jle    40cf93 <main@@Base+0x5ec3>
  40ce6a:	add    r14,0x1
  40ce6e:	cmp    r14,r13
  40ce71:	jne    40cfaf <main@@Base+0x5edf>
  40ce77:	jmp    40d03b <main@@Base+0x5f6b>
  40ce7c:	cmp    al,0x22
  40ce7e:	jne    40f863 <main@@Base+0x8793>
  40ce84:	add    r14,0x12
  40ce88:	mov    rax,r13
  40ce8b:	sub    rax,r14
  40ce8e:	cmp    rax,0x2
  40ce92:	jl     40cfeb <main@@Base+0x5f1b>
  40ce98:	cmp    BYTE PTR [r14],0x20
  40ce9c:	jg     40cffe <main@@Base+0x5f2e>
  40cea2:	jne    40cfeb <main@@Base+0x5f1b>
  40cea8:	cmp    BYTE PTR [r14+0x1],0x20
  40cead:	jle    40cfeb <main@@Base+0x5f1b>
  40ceb3:	add    r14,0x1
  40ceb7:	cmp    r14,r13
  40ceba:	jne    40d003 <main@@Base+0x5f33>
  40cec0:	jmp    40d055 <main@@Base+0x5f85>
  40cec5:	mov    rdi,r15
  40cec8:	mov    rsi,rax
  40cecb:	mov    rdx,r13
  40cece:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40ced3:	mov    r12,r13
  40ced6:	cmp    rax,r13
  40ced9:	je     40ddd2 <main@@Base+0x6d02>
  40cedf:	cmp    BYTE PTR [rax],0x5d
  40cee2:	jne    40ddcf <main@@Base+0x6cff>
  40cee8:	lea    r14,[rax+0x1]
  40ceec:	mov    rcx,r13
  40ceef:	sub    rcx,r14
  40cef2:	cmp    rcx,0x2
  40cef6:	jl     40e310 <main@@Base+0x7240>
  40cefc:	cmp    BYTE PTR [r14],0x20
  40cf00:	jg     40f0b8 <main@@Base+0x7fe8>
  40cf06:	mov    r15,QWORD PTR [rsp+0x10]
  40cf0b:	mov    r13,QWORD PTR [rsp+0x8]
  40cf10:	jne    40e310 <main@@Base+0x7240>
  40cf16:	cmp    BYTE PTR [rax+0x2],0x20
  40cf1a:	jle    40e310 <main@@Base+0x7240>
  40cf20:	add    rax,0x2
  40cf24:	jmp    40b79f <main@@Base+0x46cf>
  40cf29:	mov    rdi,QWORD PTR [rsp+0x10]
  40cf2e:	mov    rsi,r14
  40cf31:	mov    rdx,r13
  40cf34:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40cf39:	mov    r14,rax
  40cf3c:	cmp    r14,r13
  40cf3f:	je     40cf79 <main@@Base+0x5ea9>
  40cf41:	cmp    BYTE PTR [r14],0x3a
  40cf45:	jne    40cf79 <main@@Base+0x5ea9>
  40cf47:	lea    r12,[r14+0x1]
  40cf4b:	mov    rax,r13
  40cf4e:	sub    rax,r12
  40cf51:	cmp    rax,0x2
  40cf55:	jl     40f5b9 <main@@Base+0x84e9>
  40cf5b:	cmp    BYTE PTR [r12],0x20
  40cf60:	jle    40f59a <main@@Base+0x84ca>
  40cf66:	mov    r13,QWORD PTR [rsp+0x8]
  40cf6b:	cmp    r15,r12
  40cf6e:	jne    40f5d5 <main@@Base+0x8505>
  40cf74:	jmp    40f863 <main@@Base+0x8793>
  40cf79:	mov    ecx,0x4
  40cf7e:	mov    rdi,QWORD PTR [rsp+0x10]
  40cf83:	mov    rsi,r14
  40cf86:	mov    rdx,r13
  40cf89:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  40cf8e:	jmp    40f5c9 <main@@Base+0x84f9>
  40cf93:	mov    rdi,QWORD PTR [rsp+0x10]
  40cf98:	mov    rsi,r14
  40cf9b:	mov    rdx,r13
  40cf9e:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40cfa3:	mov    r14,rax
  40cfa6:	cmp    r14,r13
  40cfa9:	je     40d03b <main@@Base+0x5f6b>
  40cfaf:	cmp    BYTE PTR [r14],0x3a
  40cfb3:	jne    40d03b <main@@Base+0x5f6b>
  40cfb9:	lea    r12,[r14+0x1]
  40cfbd:	mov    rax,r13
  40cfc0:	sub    rax,r12
  40cfc3:	cmp    rax,0x2
  40cfc7:	jl     40f73d <main@@Base+0x866d>
  40cfcd:	cmp    BYTE PTR [r12],0x20
  40cfd2:	jle    40f71e <main@@Base+0x864e>
  40cfd8:	mov    r13,QWORD PTR [rsp+0x8]
  40cfdd:	cmp    r15,r12
  40cfe0:	jne    40f759 <main@@Base+0x8689>
  40cfe6:	jmp    40f863 <main@@Base+0x8793>
  40cfeb:	mov    rdi,QWORD PTR [rsp+0x10]
  40cff0:	mov    rsi,r14
  40cff3:	mov    rdx,r13
  40cff6:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40cffb:	mov    r14,rax
  40cffe:	cmp    r14,r13
  40d001:	je     40d055 <main@@Base+0x5f85>
  40d003:	cmp    BYTE PTR [r14],0x3a
  40d007:	jne    40d055 <main@@Base+0x5f85>
  40d009:	lea    r12,[r14+0x1]
  40d00d:	mov    rax,r13
  40d010:	sub    rax,r12
  40d013:	cmp    rax,0x2
  40d017:	jl     40f93a <main@@Base+0x886a>
  40d01d:	cmp    BYTE PTR [r12],0x20
  40d022:	jle    40f83d <main@@Base+0x876d>
  40d028:	mov    r13,QWORD PTR [rsp+0x8]
  40d02d:	cmp    r15,r12
  40d030:	jne    40f956 <main@@Base+0x8886>
  40d036:	jmp    40f863 <main@@Base+0x8793>
  40d03b:	mov    ecx,0x4
  40d040:	mov    rdi,QWORD PTR [rsp+0x10]
  40d045:	mov    rsi,r14
  40d048:	mov    rdx,r13
  40d04b:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  40d050:	jmp    40f74d <main@@Base+0x867d>
  40d055:	mov    ecx,0x4
  40d05a:	mov    rdi,QWORD PTR [rsp+0x10]
  40d05f:	mov    rsi,r14
  40d062:	mov    rdx,r13
  40d065:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  40d06a:	jmp    40f94a <main@@Base+0x887a>
  40d06f:	mov    r14,r13
  40d072:	jmp    40b35f <main@@Base+0x428f>
  40d077:	cmp    cl,0x5d
  40d07a:	jne    40e088 <main@@Base+0x6fb8>
  40d080:	lea    r14,[rax+0x1]
  40d084:	mov    rcx,r13
  40d087:	sub    rcx,r14
  40d08a:	cmp    rcx,0x2
  40d08e:	jl     40f708 <main@@Base+0x8638>
  40d094:	cmp    BYTE PTR [r14],0x20
  40d098:	jle    40f6e9 <main@@Base+0x8619>
  40d09e:	mov    r15,QWORD PTR [rsp+0x10]
  40d0a3:	mov    rbp,QWORD PTR [rsp+0x20]
  40d0a8:	mov    r13,QWORD PTR [rsp+0x8]
  40d0ad:	jmp    40b355 <main@@Base+0x4285>
  40d0b2:	cmp    al,0x22
  40d0b4:	jne    40fb4d <main@@Base+0x8a7d>
  40d0ba:	add    r14,0x12
  40d0be:	mov    rbx,QWORD PTR [rsp+0x8]
  40d0c3:	mov    rax,rbx
  40d0c6:	sub    rax,r14
  40d0c9:	cmp    rax,0x2
  40d0cd:	jl     40d1bc <main@@Base+0x60ec>
  40d0d3:	cmp    BYTE PTR [r14],0x20
  40d0d7:	jg     40d1cf <main@@Base+0x60ff>
  40d0dd:	jne    40d1bc <main@@Base+0x60ec>
  40d0e3:	cmp    BYTE PTR [r14+0x1],0x20
  40d0e8:	jle    40d1bc <main@@Base+0x60ec>
  40d0ee:	add    r14,0x1
  40d0f2:	cmp    r14,rbx
  40d0f5:	jne    40d1d4 <main@@Base+0x6104>
  40d0fb:	jmp    40d20f <main@@Base+0x613f>
  40d100:	mov    ecx,0x9
  40d105:	mov    rdi,r15
  40d108:	mov    rsi,r13
  40d10b:	mov    rdx,r13
  40d10e:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  40d113:	jmp    40daab <main@@Base+0x69db>
  40d118:	mov    r14,rbx
  40d11b:	cmp    rbx,r14
  40d11e:	jne    40e011 <main@@Base+0x6f41>
  40d124:	jmp    40dfd8 <main@@Base+0x6f08>
  40d129:	mov    rdi,QWORD PTR [rsp+0x10]
  40d12e:	mov    rsi,r12
  40d131:	mov    rdx,r13
  40d134:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40d139:	mov    r12,rax
  40d13c:	cmp    r15,r12
  40d13f:	je     40f863 <main@@Base+0x8793>
  40d145:	mov    DWORD PTR [rsp+0x3c],0x0
  40d14d:	mov    r15,QWORD PTR [rsp+0x10]
  40d152:	mov    rdi,QWORD PTR [r15]
  40d155:	mov    esi,0x3
  40d15a:	call   420ba0 <flatcc_builder_start_table@@Base>
  40d15f:	test   eax,eax
  40d161:	jne    40d937 <main@@Base+0x6867>
  40d167:	cmp    r12,r13
  40d16a:	je     40d910 <main@@Base+0x6840>
  40d170:	cmp    BYTE PTR [r12],0x7b
  40d175:	jne    40d910 <main@@Base+0x6840>
  40d17b:	lea    rax,[r12+0x1]
  40d180:	sub    r13,rax
  40d183:	cmp    r13,0x2
  40d187:	jl     40ee2c <main@@Base+0x7d5c>
  40d18d:	cmp    BYTE PTR [rax],0x20
  40d190:	jg     40ee3e <main@@Base+0x7d6e>
  40d196:	jne    40ee2c <main@@Base+0x7d5c>
  40d19c:	cmp    BYTE PTR [r12+0x2],0x20
  40d1a2:	jle    40ee2c <main@@Base+0x7d5c>
  40d1a8:	add    r12,0x2
  40d1ac:	mov    rax,r12
  40d1af:	jmp    40ee3e <main@@Base+0x7d6e>
  40d1b4:	mov    r14,r13
  40d1b7:	jmp    40f879 <main@@Base+0x87a9>
  40d1bc:	mov    rdi,QWORD PTR [rsp+0x10]
  40d1c1:	mov    rsi,r14
  40d1c4:	mov    rdx,rbx
  40d1c7:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40d1cc:	mov    r14,rax
  40d1cf:	cmp    r14,rbx
  40d1d2:	je     40d20f <main@@Base+0x613f>
  40d1d4:	cmp    BYTE PTR [r14],0x3a
  40d1d8:	jne    40d20f <main@@Base+0x613f>
  40d1da:	mov    rax,rbx
  40d1dd:	lea    rbx,[r14+0x1]
  40d1e1:	sub    rax,rbx
  40d1e4:	cmp    rax,0x2
  40d1e8:	jl     40fb5d <main@@Base+0x8a8d>
  40d1ee:	cmp    BYTE PTR [rbx],0x20
  40d1f1:	jle    40fb2b <main@@Base+0x8a5b>
  40d1f7:	movabs r12,0x7465737400000000
  40d201:	cmp    r15,rbx
  40d204:	jne    40fb77 <main@@Base+0x8aa7>
  40d20a:	jmp    40fb4d <main@@Base+0x8a7d>
  40d20f:	mov    ecx,0x4
  40d214:	mov    rdi,QWORD PTR [rsp+0x10]
  40d219:	mov    rsi,r14
  40d21c:	mov    rdx,rbx
  40d21f:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  40d224:	jmp    40fb6f <main@@Base+0x8a9f>
  40d229:	cmp    cl,0x7d
  40d22c:	jne    40e1dd <main@@Base+0x710d>
  40d232:	lea    r14,[rax+0x1]
  40d236:	mov    rcx,r13
  40d239:	sub    rcx,r14
  40d23c:	cmp    rcx,0x2
  40d240:	jl     40fa47 <main@@Base+0x8977>
  40d246:	cmp    BYTE PTR [r14],0x20
  40d24a:	jle    40fa2c <main@@Base+0x895c>
  40d250:	mov    r15,QWORD PTR [rsp+0x10]
  40d255:	jmp    411723 <main@@Base+0xa653>
  40d25a:	mov    rdi,QWORD PTR [rsp+0x10]
  40d25f:	mov    rsi,r12
  40d262:	mov    rdx,r13
  40d265:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40d26a:	mov    r12,rax
  40d26d:	cmp    r15,r12
  40d270:	je     40f863 <main@@Base+0x8793>
  40d276:	mov    r15,QWORD PTR [rsp+0x10]
  40d27b:	mov    rdi,QWORD PTR [r15]
  40d27e:	call   4207b0 <flatcc_builder_start_offset_vector@@Base>
  40d283:	test   eax,eax
  40d285:	jne    407c81 <main@@Base+0xbb1>
  40d28b:	cmp    r12,r13
  40d28e:	je     40d2d8 <main@@Base+0x6208>
  40d290:	cmp    BYTE PTR [r12],0x5b
  40d295:	jne    40d2d8 <main@@Base+0x6208>
  40d297:	lea    rax,[r12+0x1]
  40d29c:	mov    rcx,r13
  40d29f:	sub    rcx,rax
  40d2a2:	cmp    rcx,0x2
  40d2a6:	jl     40dc95 <main@@Base+0x6bc5>
  40d2ac:	cmp    BYTE PTR [rax],0x20
  40d2af:	jg     40dca3 <main@@Base+0x6bd3>
  40d2b5:	mov    r15,QWORD PTR [rsp+0x10]
  40d2ba:	jne    40dc95 <main@@Base+0x6bc5>
  40d2c0:	cmp    BYTE PTR [r12+0x2],0x20
  40d2c6:	jle    40dc95 <main@@Base+0x6bc5>
  40d2cc:	add    r12,0x2
  40d2d0:	mov    rax,r12
  40d2d3:	jmp    40dca3 <main@@Base+0x6bd3>
  40d2d8:	mov    ecx,0x16
  40d2dd:	mov    rdi,r15
  40d2e0:	mov    rsi,r12
  40d2e3:	mov    rdx,r13
  40d2e6:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  40d2eb:	mov    r14,rax
  40d2ee:	mov    rdi,QWORD PTR [r15]
  40d2f1:	call   420970 <flatcc_builder_end_offset_vector@@Base>
  40d2f6:	mov    DWORD PTR [rsp+0x3c],eax
  40d2fa:	test   eax,eax
  40d2fc:	mov    rbp,QWORD PTR [rsp+0x20]
  40d301:	movabs r12,0x7465737400000000
  40d30b:	je     411d63 <main@@Base+0xac93>
  40d311:	mov    rdi,QWORD PTR [r15]
  40d314:	mov    esi,0x1c
  40d319:	jmp    40b37b <main@@Base+0x42ab>
  40d31e:	mov    rdi,QWORD PTR [rsp+0x10]
  40d323:	mov    rsi,r12
  40d326:	mov    rdx,r13
  40d329:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40d32e:	mov    r12,rax
  40d331:	cmp    r15,r12
  40d334:	je     40f863 <main@@Base+0x8793>
  40d33a:	mov    r15,QWORD PTR [rsp+0x10]
  40d33f:	mov    rdi,QWORD PTR [r15]
  40d342:	mov    esi,0x8
  40d347:	mov    edx,0x4
  40d34c:	mov    ecx,0x1fffffff
  40d351:	call   420730 <flatcc_builder_start_vector@@Base>
  40d356:	test   eax,eax
  40d358:	jne    407c81 <main@@Base+0xbb1>
  40d35e:	cmp    r12,r13
  40d361:	je     40d3ab <main@@Base+0x62db>
  40d363:	cmp    BYTE PTR [r12],0x5b
  40d368:	jne    40d3ab <main@@Base+0x62db>
  40d36a:	lea    rax,[r12+0x1]
  40d36f:	mov    rcx,r13
  40d372:	sub    rcx,rax
  40d375:	cmp    rcx,0x2
  40d379:	jl     40dcef <main@@Base+0x6c1f>
  40d37f:	cmp    BYTE PTR [rax],0x20
  40d382:	jg     40dcfd <main@@Base+0x6c2d>
  40d388:	mov    r15,QWORD PTR [rsp+0x10]
  40d38d:	jne    40dcef <main@@Base+0x6c1f>
  40d393:	cmp    BYTE PTR [r12+0x2],0x20
  40d399:	jle    40dcef <main@@Base+0x6c1f>
  40d39f:	add    r12,0x2
  40d3a3:	mov    rax,r12
  40d3a6:	jmp    40dcfd <main@@Base+0x6c2d>
  40d3ab:	mov    ecx,0x16
  40d3b0:	mov    rdi,r15
  40d3b3:	mov    rsi,r12
  40d3b6:	mov    rdx,r13
  40d3b9:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  40d3be:	mov    r14,rax
  40d3c1:	mov    rbp,QWORD PTR [rsp+0x20]
  40d3c6:	mov    rdi,QWORD PTR [r15]
  40d3c9:	call   4218c0 <flatcc_builder_end_vector@@Base>
  40d3ce:	mov    DWORD PTR [rsp+0x3c],eax
  40d3d2:	test   eax,eax
  40d3d4:	movabs r12,0x7465737400000000
  40d3de:	je     411d63 <main@@Base+0xac93>
  40d3e4:	mov    rdi,QWORD PTR [r15]
  40d3e7:	mov    esi,0x1d
  40d3ec:	jmp    40b37b <main@@Base+0x42ab>
  40d3f1:	mov    rdi,QWORD PTR [rsp+0x10]
  40d3f6:	mov    rsi,r12
  40d3f9:	mov    rdx,r13
  40d3fc:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40d401:	mov    r12,rax
  40d404:	cmp    r15,r12
  40d407:	je     40f863 <main@@Base+0x8793>
  40d40d:	mov    r15,QWORD PTR [rsp+0x10]
  40d412:	mov    rdi,QWORD PTR [r15]
  40d415:	call   4207b0 <flatcc_builder_start_offset_vector@@Base>
  40d41a:	test   eax,eax
  40d41c:	jne    407c81 <main@@Base+0xbb1>
  40d422:	cmp    r12,r13
  40d425:	je     40d46f <main@@Base+0x639f>
  40d427:	cmp    BYTE PTR [r12],0x5b
  40d42c:	jne    40d46f <main@@Base+0x639f>
  40d42e:	lea    rax,[r12+0x1]
  40d433:	mov    rcx,r13
  40d436:	sub    rcx,rax
  40d439:	cmp    rcx,0x2
  40d43d:	jl     40dd49 <main@@Base+0x6c79>
  40d443:	cmp    BYTE PTR [rax],0x20
  40d446:	jg     40dd57 <main@@Base+0x6c87>
  40d44c:	mov    r15,QWORD PTR [rsp+0x10]
  40d451:	jne    40dd49 <main@@Base+0x6c79>
  40d457:	cmp    BYTE PTR [r12+0x2],0x20
  40d45d:	jle    40dd49 <main@@Base+0x6c79>
  40d463:	add    r12,0x2
  40d467:	mov    rax,r12
  40d46a:	jmp    40dd57 <main@@Base+0x6c87>
  40d46f:	mov    ecx,0x16
  40d474:	mov    rdi,r15
  40d477:	mov    rsi,r12
  40d47a:	mov    rdx,r13
  40d47d:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  40d482:	mov    r14,rax
  40d485:	mov    rdi,QWORD PTR [r15]
  40d488:	call   420970 <flatcc_builder_end_offset_vector@@Base>
  40d48d:	mov    DWORD PTR [rsp+0x3c],eax
  40d491:	test   eax,eax
  40d493:	mov    rbp,QWORD PTR [rsp+0x20]
  40d498:	movabs r12,0x7465737400000000
  40d4a2:	je     411d63 <main@@Base+0xac93>
  40d4a8:	mov    rdi,QWORD PTR [r15]
  40d4ab:	mov    esi,0xb
  40d4b0:	jmp    40b37b <main@@Base+0x42ab>
  40d4b5:	mov    ecx,0xa
  40d4ba:	mov    rdi,r15
  40d4bd:	mov    rsi,r13
  40d4c0:	jmp    40bdf3 <main@@Base+0x4d23>
  40d4c5:	mov    rdi,r15
  40d4c8:	mov    rsi,r14
  40d4cb:	mov    rdx,r13
  40d4ce:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40d4d3:	mov    r14,rax
  40d4d6:	jmp    40a75e <main@@Base+0x368e>
  40d4db:	mov    rdi,r15
  40d4de:	mov    rsi,r12
  40d4e1:	mov    rdx,QWORD PTR [rsp+0x8]
  40d4e6:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40d4eb:	mov    r12,rax
  40d4ee:	cmp    r14,r12
  40d4f1:	je     40d553 <main@@Base+0x6483>
  40d4f3:	mov    QWORD PTR [rsp+0x30],0x0
  40d4fc:	mov    DWORD PTR [rsp+0x40],0x0
  40d504:	mov    WORD PTR [rsp+0x1c],0x0
  40d50b:	mov    rdx,QWORD PTR [rsp+0x8]
  40d510:	cmp    r12,rdx
  40d513:	je     40d563 <main@@Base+0x6493>
  40d515:	mov    rdi,r15
  40d518:	mov    rsi,r12
  40d51b:	lea    rcx,[rsp+0x40]
  40d520:	lea    r8,[rsp+0x30]
  40d525:	call   427360 <flatcc_json_parser_integer@@Base>
  40d52a:	cmp    rax,r12
  40d52d:	mov    rbp,QWORD PTR [rsp+0x20]
  40d532:	je     40d574 <main@@Base+0x64a4>
  40d534:	mov    r14,rax
  40d537:	mov    rbx,QWORD PTR [rsp+0x30]
  40d53c:	cmp    DWORD PTR [rsp+0x40],0x0
  40d541:	je     40d580 <main@@Base+0x64b0>
  40d543:	cmp    rbx,0x8001
  40d54a:	jb     40d5aa <main@@Base+0x64da>
  40d54c:	mov    ecx,0x8
  40d551:	jmp    40d58e <main@@Base+0x64be>
  40d553:	mov    rdi,r15
  40d556:	mov    rsi,r14
  40d559:	mov    r13,QWORD PTR [rsp+0x8]
  40d55e:	jmp    40f86e <main@@Base+0x879e>
  40d563:	xor    ebx,ebx
  40d565:	mov    r14,rdx
  40d568:	mov    rbp,QWORD PTR [rsp+0x20]
  40d56d:	cmp    r12,r14
  40d570:	jne    40d5f0 <main@@Base+0x6520>
  40d572:	jmp    40d5b7 <main@@Base+0x64e7>
  40d574:	xor    ebx,ebx
  40d576:	mov    r14,r12
  40d579:	cmp    r12,r14
  40d57c:	jne    40d5f0 <main@@Base+0x6520>
  40d57e:	jmp    40d5b7 <main@@Base+0x64e7>
  40d580:	cmp    rbx,0x8000
  40d587:	jb     40d5ad <main@@Base+0x64dd>
  40d589:	mov    ecx,0x7
  40d58e:	mov    rdi,r15
  40d591:	mov    rsi,r14
  40d594:	mov    rdx,QWORD PTR [rsp+0x8]
  40d599:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  40d59e:	mov    r14,rax
  40d5a1:	xor    ebx,ebx
  40d5a3:	cmp    r12,r14
  40d5a6:	jne    40d5f0 <main@@Base+0x6520>
  40d5a8:	jmp    40d5b7 <main@@Base+0x64e7>
  40d5aa:	neg    rbx
  40d5ad:	mov    WORD PTR [rsp+0x1c],bx
  40d5b2:	cmp    r12,r14
  40d5b5:	jne    40d5f0 <main@@Base+0x6520>
  40d5b7:	mov    rdi,r15
  40d5ba:	mov    rsi,r12
  40d5bd:	mov    rbx,QWORD PTR [rsp+0x8]
  40d5c2:	mov    rdx,rbx
  40d5c5:	lea    rcx,[rip+0x36b74]        # 444140 <__data_start@@Base+0x90>
  40d5cc:	lea    r8,[rsp+0x1c]
  40d5d1:	call   413f50 <main@@Base+0xce80>
  40d5d6:	mov    r14,rax
  40d5d9:	cmp    rax,r12
  40d5dc:	je     411d4c <main@@Base+0xac7c>
  40d5e2:	cmp    r14,rbx
  40d5e5:	je     411d4c <main@@Base+0xac7c>
  40d5eb:	movzx  ebx,WORD PTR [rsp+0x1c]
  40d5f0:	movzx  eax,bx
  40d5f3:	cmp    eax,0x96
  40d5f8:	mov    r13,QWORD PTR [rsp+0x8]
  40d5fd:	movabs r12,0x7465737400000000
  40d607:	jne    40d614 <main@@Base+0x6544>
  40d609:	test   BYTE PTR [r15+0x10],0x2
  40d60e:	je     40f890 <main@@Base+0x87c0>
  40d614:	mov    rdi,QWORD PTR [r15]
  40d617:	mov    esi,0x1
  40d61c:	mov    edx,0x2
  40d621:	mov    ecx,0x2
  40d626:	call   421f20 <flatcc_builder_table_add@@Base>
  40d62b:	test   rax,rax
  40d62e:	je     411d4c <main@@Base+0xac7c>
  40d634:	mov    WORD PTR [rax],bx
  40d637:	jmp    40f890 <main@@Base+0x87c0>
  40d63c:	mov    rdi,r15
  40d63f:	mov    rsi,rbx
  40d642:	mov    rdx,QWORD PTR [rsp+0x8]
  40d647:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40d64c:	mov    rbx,rax
  40d64f:	cmp    r14,rbx
  40d652:	je     40b24f <main@@Base+0x417f>
  40d658:	mov    DWORD PTR [rsp+0x30],0x0
  40d660:	mov    rdi,r15
  40d663:	mov    rsi,rbx
  40d666:	mov    rdx,QWORD PTR [rsp+0x8]
  40d66b:	lea    rcx,[rsp+0x30]
  40d670:	call   427240 <flatcc_json_parser_float@@Base>
  40d675:	mov    r14,rax
  40d678:	cmp    rbx,rax
  40d67b:	mov    rbp,QWORD PTR [rsp+0x20]
  40d680:	jne    40d6c0 <main@@Base+0x65f0>
  40d682:	mov    rdi,r15
  40d685:	mov    rsi,rbx
  40d688:	mov    r12,QWORD PTR [rsp+0x8]
  40d68d:	mov    rdx,r12
  40d690:	lea    rcx,[rip+0x36b49]        # 4441e0 <__data_start@@Base+0x130>
  40d697:	lea    r8,[rsp+0x30]
  40d69c:	call   415b70 <main@@Base+0xeaa0>
  40d6a1:	mov    r14,rax
  40d6a4:	cmp    rax,rbx
  40d6a7:	je     411d35 <main@@Base+0xac65>
  40d6ad:	cmp    r14,r12
  40d6b0:	movabs r12,0x7465737400000000
  40d6ba:	je     411d35 <main@@Base+0xac65>
  40d6c0:	vmovss xmm0,DWORD PTR [rsp+0x30]
  40d6c6:	vucomiss xmm0,DWORD PTR [rip+0x27936]        # 435004 <_IO_stdin_used@@Base+0x4>
  40d6ce:	mov    r13,QWORD PTR [rsp+0x8]
  40d6d3:	jne    40d6e2 <main@@Base+0x6612>
  40d6d5:	jp     40d6e2 <main@@Base+0x6612>
  40d6d7:	test   BYTE PTR [r15+0x10],0x2
  40d6dc:	je     40f890 <main@@Base+0x87c0>
  40d6e2:	mov    rdi,QWORD PTR [r15]
  40d6e5:	mov    esi,0x19
  40d6ea:	mov    edx,0x4
  40d6ef:	mov    ecx,0x4
  40d6f4:	call   421f20 <flatcc_builder_table_add@@Base>
  40d6f9:	test   rax,rax
  40d6fc:	je     411d35 <main@@Base+0xac65>
  40d702:	mov    ecx,DWORD PTR [rsp+0x30]
  40d706:	mov    DWORD PTR [rax],ecx
  40d708:	jmp    40f890 <main@@Base+0x87c0>
  40d70d:	mov    rdi,QWORD PTR [rsp+0x10]
  40d712:	mov    rsi,rbx
  40d715:	mov    rdx,QWORD PTR [rsp+0x8]
  40d71a:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40d71f:	mov    rbx,rax
  40d722:	cmp    r15,rbx
  40d725:	je     40aee8 <main@@Base+0x3e18>
  40d72b:	mov    QWORD PTR [rsp+0x30],0x0
  40d734:	mov    DWORD PTR [rsp+0x1c],0x0
  40d73c:	mov    QWORD PTR [rsp+0x40],0x0
  40d745:	mov    rdx,QWORD PTR [rsp+0x8]
  40d74a:	cmp    rbx,rdx
  40d74d:	je     40d7a2 <main@@Base+0x66d2>
  40d74f:	mov    r15,QWORD PTR [rsp+0x10]
  40d754:	mov    rdi,r15
  40d757:	mov    rsi,rbx
  40d75a:	lea    rcx,[rsp+0x1c]
  40d75f:	lea    r8,[rsp+0x30]
  40d764:	call   427360 <flatcc_json_parser_integer@@Base>
  40d769:	cmp    rax,rbx
  40d76c:	je     40e0a3 <main@@Base+0x6fd3>
  40d772:	mov    r14,rax
  40d775:	mov    r12,QWORD PTR [rsp+0x30]
  40d77a:	cmp    DWORD PTR [rsp+0x1c],0x0
  40d77f:	je     40e32e <main@@Base+0x725e>
  40d785:	movabs rax,0x8000000000000000
  40d78f:	cmp    r12,rax
  40d792:	jbe    40e38c <main@@Base+0x72bc>
  40d798:	mov    ecx,0x8
  40d79d:	jmp    40e338 <main@@Base+0x7268>
  40d7a2:	xor    r12d,r12d
  40d7a5:	mov    r14,rdx
  40d7a8:	mov    r15,QWORD PTR [rsp+0x10]
  40d7ad:	jmp    40e394 <main@@Base+0x72c4>
  40d7b2:	mov    rdi,QWORD PTR [rsp+0x10]
  40d7b7:	mov    rsi,r12
  40d7ba:	mov    rdx,r13
  40d7bd:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40d7c2:	mov    r12,rax
  40d7c5:	cmp    r15,r12
  40d7c8:	je     40f863 <main@@Base+0x8793>
  40d7ce:	mov    DWORD PTR [rsp+0x3c],0x0
  40d7d6:	mov    r15,QWORD PTR [rsp+0x10]
  40d7db:	mov    rdi,QWORD PTR [r15]
  40d7de:	mov    esi,0x3
  40d7e3:	call   420ba0 <flatcc_builder_start_table@@Base>
  40d7e8:	test   eax,eax
  40d7ea:	jne    40fab3 <main@@Base+0x89e3>
  40d7f0:	cmp    r12,r13
  40d7f3:	je     40dda3 <main@@Base+0x6cd3>
  40d7f9:	cmp    BYTE PTR [r12],0x7b
  40d7fe:	jne    40dda3 <main@@Base+0x6cd3>
  40d804:	lea    rax,[r12+0x1]
  40d809:	sub    r13,rax
  40d80c:	cmp    r13,0x2
  40d810:	jl     40f3ca <main@@Base+0x82fa>
  40d816:	cmp    BYTE PTR [rax],0x20
  40d819:	jg     40f3dc <main@@Base+0x830c>
  40d81f:	jne    40f3ca <main@@Base+0x82fa>
  40d825:	cmp    BYTE PTR [r12+0x2],0x20
  40d82b:	jle    40f3ca <main@@Base+0x82fa>
  40d831:	add    r12,0x2
  40d835:	mov    rax,r12
  40d838:	jmp    40f3dc <main@@Base+0x830c>
  40d83d:	mov    rdi,QWORD PTR [rsp+0x10]
  40d842:	mov    rsi,r12
  40d845:	mov    rdx,r13
  40d848:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40d84d:	mov    r12,rax
  40d850:	cmp    r15,r12
  40d853:	je     40f863 <main@@Base+0x8793>
  40d859:	mov    r15,QWORD PTR [rsp+0x10]
  40d85e:	mov    rdi,QWORD PTR [r15]
  40d861:	mov    esi,0x1
  40d866:	mov    edx,0x1
  40d86b:	mov    ecx,0xffffffff
  40d870:	call   420730 <flatcc_builder_start_vector@@Base>
  40d875:	test   eax,eax
  40d877:	jne    407c81 <main@@Base+0xbb1>
  40d87d:	cmp    r12,r13
  40d880:	je     40d8ca <main@@Base+0x67fa>
  40d882:	cmp    BYTE PTR [r12],0x5b
  40d887:	jne    40d8ca <main@@Base+0x67fa>
  40d889:	lea    rax,[r12+0x1]
  40d88e:	mov    rcx,r13
  40d891:	sub    rcx,rax
  40d894:	cmp    rcx,0x2
  40d898:	jl     40e298 <main@@Base+0x71c8>
  40d89e:	cmp    BYTE PTR [rax],0x20
  40d8a1:	jg     40e2a6 <main@@Base+0x71d6>
  40d8a7:	mov    r15,QWORD PTR [rsp+0x10]
  40d8ac:	jne    40e298 <main@@Base+0x71c8>
  40d8b2:	cmp    BYTE PTR [r12+0x2],0x20
  40d8b8:	jle    40e298 <main@@Base+0x71c8>
  40d8be:	add    r12,0x2
  40d8c2:	mov    rax,r12
  40d8c5:	jmp    40e2a6 <main@@Base+0x71d6>
  40d8ca:	mov    ecx,0x16
  40d8cf:	mov    rdi,r15
  40d8d2:	mov    rsi,r12
  40d8d5:	mov    rdx,r13
  40d8d8:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  40d8dd:	mov    r14,rax
  40d8e0:	mov    rdi,QWORD PTR [r15]
  40d8e3:	call   4218c0 <flatcc_builder_end_vector@@Base>
  40d8e8:	mov    DWORD PTR [rsp+0x3c],eax
  40d8ec:	test   eax,eax
  40d8ee:	mov    rbp,QWORD PTR [rsp+0x20]
  40d8f3:	movabs r12,0x7465737400000000
  40d8fd:	je     411d63 <main@@Base+0xac93>
  40d903:	mov    rdi,QWORD PTR [r15]
  40d906:	mov    esi,0x5
  40d90b:	jmp    40b37b <main@@Base+0x42ab>
  40d910:	mov    ecx,0x15
  40d915:	mov    rdi,r15
  40d918:	mov    rsi,r12
  40d91b:	mov    rdx,r13
  40d91e:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  40d923:	mov    r14,rax
  40d926:	mov    rax,QWORD PTR [rsp+0x48]
  40d92b:	cmp    DWORD PTR [rax],0x0
  40d92e:	je     40e2f7 <main@@Base+0x7227>
  40d934:	mov    r12,r14
  40d937:	mov    ecx,0x21
  40d93c:	mov    rdi,r15
  40d93f:	mov    rsi,r12
  40d942:	mov    rdx,r13
  40d945:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  40d94a:	mov    r14,rax
  40d94d:	cmp    DWORD PTR [rsp+0x3c],0x0
  40d952:	mov    r12,rax
  40d955:	je     407c81 <main@@Base+0xbb1>
  40d95b:	mov    rdi,QWORD PTR [r15]
  40d95e:	mov    esi,0x23
  40d963:	jmp    40fadf <main@@Base+0x8a0f>
  40d968:	mov    ecx,0x9
  40d96d:	mov    rdi,r15
  40d970:	mov    rsi,rax
  40d973:	mov    rdx,r13
  40d976:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  40d97b:	mov    r14,rax
  40d97e:	jmp    40a768 <main@@Base+0x3698>
  40d983:	mov    rdi,r15
  40d986:	mov    rsi,r14
  40d989:	mov    rdx,r13
  40d98c:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40d991:	mov    r14,rax
  40d994:	cmp    r12,r14
  40d997:	je     40b158 <main@@Base+0x4088>
  40d99d:	mov    DWORD PTR [rsp+0x3c],0x0
  40d9a5:	mov    rdi,QWORD PTR [r15]
  40d9a8:	xor    esi,esi
  40d9aa:	call   420ba0 <flatcc_builder_start_table@@Base>
  40d9af:	test   eax,eax
  40d9b1:	jne    40e057 <main@@Base+0x6f87>
  40d9b7:	cmp    r14,r13
  40d9ba:	je     40e033 <main@@Base+0x6f63>
  40d9c0:	cmp    BYTE PTR [r14],0x7b
  40d9c4:	jne    40e033 <main@@Base+0x6f63>
  40d9ca:	lea    rax,[r14+0x1]
  40d9ce:	sub    r13,rax
  40d9d1:	cmp    r13,0x2
  40d9d5:	jl     40f432 <main@@Base+0x8362>
  40d9db:	cmp    BYTE PTR [rax],0x20
  40d9de:	jg     40f444 <main@@Base+0x8374>
  40d9e4:	jne    40f432 <main@@Base+0x8362>
  40d9ea:	cmp    BYTE PTR [r14+0x2],0x20
  40d9ef:	jle    40f432 <main@@Base+0x8362>
  40d9f5:	add    r14,0x2
  40d9f9:	mov    rax,r14
  40d9fc:	jmp    40f444 <main@@Base+0x8374>
  40da01:	cmp    al,0x22
  40da03:	jne    40fb4d <main@@Base+0x8a7d>
  40da09:	add    r14,0x12
  40da0d:	mov    rbx,QWORD PTR [rsp+0x8]
  40da12:	mov    rax,rbx
  40da15:	sub    rax,r14
  40da18:	cmp    rax,0x2
  40da1c:	jl     40dae5 <main@@Base+0x6a15>
  40da22:	cmp    BYTE PTR [r14],0x20
  40da26:	jg     40daf8 <main@@Base+0x6a28>
  40da2c:	jne    40dae5 <main@@Base+0x6a15>
  40da32:	cmp    BYTE PTR [r14+0x1],0x20
  40da37:	jle    40dae5 <main@@Base+0x6a15>
  40da3d:	add    r14,0x1
  40da41:	cmp    r14,rbx
  40da44:	jne    40db01 <main@@Base+0x6a31>
  40da4a:	jmp    40dba3 <main@@Base+0x6ad3>
  40da4f:	cmp    al,0x22
  40da51:	jne    40fb4d <main@@Base+0x8a7d>
  40da57:	add    r14,0x12
  40da5b:	mov    rbx,QWORD PTR [rsp+0x8]
  40da60:	mov    rax,rbx
  40da63:	sub    rax,r14
  40da66:	cmp    rax,0x2
  40da6a:	jl     40db48 <main@@Base+0x6a78>
  40da70:	cmp    BYTE PTR [r14],0x20
  40da74:	jg     40db5b <main@@Base+0x6a8b>
  40da7a:	jne    40db48 <main@@Base+0x6a78>
  40da80:	cmp    BYTE PTR [r14+0x1],0x20
  40da85:	jle    40db48 <main@@Base+0x6a78>
  40da8b:	add    r14,0x1
  40da8f:	cmp    r14,rbx
  40da92:	jne    40db60 <main@@Base+0x6a90>
  40da98:	jmp    40dbc9 <main@@Base+0x6af9>
  40da9d:	mov    rdi,r15
  40daa0:	mov    rsi,r14
  40daa3:	mov    rdx,r13
  40daa6:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40daab:	mov    r14,rax
  40daae:	jmp    40b355 <main@@Base+0x4285>
  40dab3:	test   rax,0xffffffff80000000
  40dab9:	je     40dfcc <main@@Base+0x6efc>
  40dabf:	mov    ecx,0x7
  40dac4:	mov    rdi,r15
  40dac7:	mov    rsi,r14
  40daca:	mov    rdx,QWORD PTR [rsp+0x8]
  40dacf:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  40dad4:	mov    r14,rax
  40dad7:	cmp    rbx,r14
  40dada:	jne    40e011 <main@@Base+0x6f41>
  40dae0:	jmp    40dfd8 <main@@Base+0x6f08>
  40dae5:	mov    rdi,QWORD PTR [rsp+0x10]
  40daea:	mov    rsi,r14
  40daed:	mov    rdx,rbx
  40daf0:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40daf5:	mov    r14,rax
  40daf8:	cmp    r14,rbx
  40dafb:	je     40dba3 <main@@Base+0x6ad3>
  40db01:	cmp    BYTE PTR [r14],0x3a
  40db05:	jne    40dba3 <main@@Base+0x6ad3>
  40db0b:	mov    rax,rbx
  40db0e:	lea    rbx,[r14+0x1]
  40db12:	sub    rax,rbx
  40db15:	cmp    rax,0x2
  40db19:	jl     40f289 <main@@Base+0x81b9>
  40db1f:	cmp    BYTE PTR [rbx],0x20
  40db22:	jg     40f29e <main@@Base+0x81ce>
  40db28:	jne    40f289 <main@@Base+0x81b9>
  40db2e:	mov    rcx,r14
  40db31:	cmp    BYTE PTR [r14+0x2],0x20
  40db36:	jle    40f289 <main@@Base+0x81b9>
  40db3c:	mov    rbx,rcx
  40db3f:	add    rbx,0x2
  40db43:	jmp    40f29e <main@@Base+0x81ce>
  40db48:	mov    rdi,QWORD PTR [rsp+0x10]
  40db4d:	mov    rsi,r14
  40db50:	mov    rdx,rbx
  40db53:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40db58:	mov    r14,rax
  40db5b:	cmp    r14,rbx
  40db5e:	je     40dbc9 <main@@Base+0x6af9>
  40db60:	cmp    BYTE PTR [r14],0x3a
  40db64:	jne    40dbc9 <main@@Base+0x6af9>
  40db66:	mov    rax,rbx
  40db69:	lea    rbx,[r14+0x1]
  40db6d:	sub    rax,rbx
  40db70:	cmp    rax,0x2
  40db74:	jl     40f317 <main@@Base+0x8247>
  40db7a:	cmp    BYTE PTR [rbx],0x20
  40db7d:	jg     40f32c <main@@Base+0x825c>
  40db83:	jne    40f317 <main@@Base+0x8247>
  40db89:	mov    rcx,r14
  40db8c:	cmp    BYTE PTR [r14+0x2],0x20
  40db91:	jle    40f317 <main@@Base+0x8247>
  40db97:	mov    rbx,rcx
  40db9a:	add    rbx,0x2
  40db9e:	jmp    40f32c <main@@Base+0x825c>
  40dba3:	mov    ecx,0x4
  40dba8:	mov    rdi,QWORD PTR [rsp+0x10]
  40dbad:	mov    rsi,r14
  40dbb0:	mov    rdx,rbx
  40dbb3:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  40dbb8:	mov    rbx,rax
  40dbbb:	cmp    r15,rbx
  40dbbe:	jne    40f2b1 <main@@Base+0x81e1>
  40dbc4:	jmp    40fb4d <main@@Base+0x8a7d>
  40dbc9:	mov    ecx,0x4
  40dbce:	mov    rdi,QWORD PTR [rsp+0x10]
  40dbd3:	mov    rsi,r14
  40dbd6:	mov    rdx,rbx
  40dbd9:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  40dbde:	mov    rbx,rax
  40dbe1:	cmp    r15,rbx
  40dbe4:	jne    40f33f <main@@Base+0x826f>
  40dbea:	jmp    40fb4d <main@@Base+0x8a7d>
  40dbef:	mov    rdi,QWORD PTR [rsp+0x10]
  40dbf4:	mov    rsi,rbx
  40dbf7:	mov    rdx,QWORD PTR [rsp+0x8]
  40dbfc:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40dc01:	mov    rbx,rax
  40dc04:	cmp    r15,rbx
  40dc07:	je     40fb4d <main@@Base+0x8a7d>
  40dc0d:	mov    QWORD PTR [rsp+0x30],0x0
  40dc16:	mov    DWORD PTR [rsp+0x40],0x0
  40dc1e:	mov    DWORD PTR [rsp+0x1c],0x0
  40dc26:	xor    r12d,r12d
  40dc29:	mov    rdx,QWORD PTR [rsp+0x8]
  40dc2e:	cmp    rbx,rdx
  40dc31:	je     40dc88 <main@@Base+0x6bb8>
  40dc33:	mov    r15,QWORD PTR [rsp+0x10]
  40dc38:	mov    rdi,r15
  40dc3b:	mov    rsi,rbx
  40dc3e:	lea    rcx,[rsp+0x40]
  40dc43:	lea    r8,[rsp+0x30]
  40dc48:	call   427360 <flatcc_json_parser_integer@@Base>
  40dc4d:	cmp    rax,rbx
  40dc50:	je     40e2ef <main@@Base+0x721f>
  40dc56:	mov    r14,rax
  40dc59:	mov    rax,QWORD PTR [rsp+0x30]
  40dc5e:	cmp    DWORD PTR [rsp+0x40],0x0
  40dc63:	je     40ee03 <main@@Base+0x7d33>
  40dc69:	mov    ecx,0xffffffff
  40dc6e:	lea    rcx,[rcx-0x7fffffff]
  40dc75:	cmp    rax,rcx
  40dc78:	jbe    40f008 <main@@Base+0x7f38>
  40dc7e:	mov    ecx,0x8
  40dc83:	jmp    40ee14 <main@@Base+0x7d44>
  40dc88:	mov    r14,rdx
  40dc8b:	mov    r15,QWORD PTR [rsp+0x10]
  40dc90:	jmp    40f012 <main@@Base+0x7f42>
  40dc95:	mov    rdi,r15
  40dc98:	mov    rsi,rax
  40dc9b:	mov    rdx,r13
  40dc9e:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40dca3:	mov    rsi,r13
  40dca6:	cmp    rax,r13
  40dca9:	je     40e3fc <main@@Base+0x732c>
  40dcaf:	cmp    BYTE PTR [rax],0x5d
  40dcb2:	jne    40e3f9 <main@@Base+0x7329>
  40dcb8:	lea    r14,[rax+0x1]
  40dcbc:	sub    r13,r14
  40dcbf:	cmp    r13,0x2
  40dcc3:	jl     411b48 <main@@Base+0xaa78>
  40dcc9:	cmp    BYTE PTR [r14],0x20
  40dccd:	jg     41091d <main@@Base+0x984d>
  40dcd3:	jne    411b48 <main@@Base+0xaa78>
  40dcd9:	cmp    BYTE PTR [rax+0x2],0x20
  40dcdd:	jle    411b48 <main@@Base+0xaa78>
  40dce3:	add    rax,0x2
  40dce7:	mov    r14,rax
  40dcea:	jmp    41091d <main@@Base+0x984d>
  40dcef:	mov    rdi,r15
  40dcf2:	mov    rsi,rax
  40dcf5:	mov    rdx,r13
  40dcf8:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40dcfd:	mov    r12,r13
  40dd00:	cmp    rax,r13
  40dd03:	je     40e518 <main@@Base+0x7448>
  40dd09:	cmp    BYTE PTR [rax],0x5d
  40dd0c:	jne    40e515 <main@@Base+0x7445>
  40dd12:	lea    r14,[rax+0x1]
  40dd16:	sub    r13,r14
  40dd19:	cmp    r13,0x2
  40dd1d:	jl     411983 <main@@Base+0xa8b3>
  40dd23:	cmp    BYTE PTR [r14],0x20
  40dd27:	jg     40fc43 <main@@Base+0x8b73>
  40dd2d:	jne    411983 <main@@Base+0xa8b3>
  40dd33:	cmp    BYTE PTR [rax+0x2],0x20
  40dd37:	jle    411983 <main@@Base+0xa8b3>
  40dd3d:	add    rax,0x2
  40dd41:	mov    r14,rax
  40dd44:	jmp    40fc43 <main@@Base+0x8b73>
  40dd49:	mov    rdi,r15
  40dd4c:	mov    rsi,rax
  40dd4f:	mov    rdx,r13
  40dd52:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40dd57:	mov    rsi,r13
  40dd5a:	cmp    rax,r13
  40dd5d:	je     40ecea <main@@Base+0x7c1a>
  40dd63:	cmp    BYTE PTR [rax],0x5d
  40dd66:	jne    40ece7 <main@@Base+0x7c17>
  40dd6c:	lea    r14,[rax+0x1]
  40dd70:	sub    r13,r14
  40dd73:	cmp    r13,0x2
  40dd77:	jl     411b7b <main@@Base+0xaaab>
  40dd7d:	cmp    BYTE PTR [r14],0x20
  40dd81:	jg     410955 <main@@Base+0x9885>
  40dd87:	jne    411b7b <main@@Base+0xaaab>
  40dd8d:	cmp    BYTE PTR [rax+0x2],0x20
  40dd91:	jle    411b7b <main@@Base+0xaaab>
  40dd97:	add    rax,0x2
  40dd9b:	mov    r14,rax
  40dd9e:	jmp    410955 <main@@Base+0x9885>
  40dda3:	mov    ecx,0x15
  40dda8:	mov    rdi,r15
  40ddab:	mov    rsi,r12
  40ddae:	mov    rdx,r13
  40ddb1:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  40ddb6:	mov    r14,rax
  40ddb9:	mov    rax,QWORD PTR [rsp+0x48]
  40ddbe:	cmp    DWORD PTR [rax],0x0
  40ddc1:	je     40e350 <main@@Base+0x7280>
  40ddc7:	mov    r12,r14
  40ddca:	jmp    40fab3 <main@@Base+0x89e3>
  40ddcf:	mov    r12,rax
  40ddd2:	mov    BYTE PTR [rsp+0x1c],0x0
  40ddd7:	mov    rdi,QWORD PTR [r15]
  40ddda:	mov    esi,0x1
  40dddf:	call   41fdc0 <flatcc_builder_extend_vector@@Base>
  40dde4:	test   rax,rax
  40dde7:	je     407c81 <main@@Base+0xbb1>
  40dded:	mov    rbp,rax
  40ddf0:	mov    rax,r13
  40ddf3:	sub    rax,r12
  40ddf6:	cmp    rax,0x4
  40ddfa:	jl     40de28 <main@@Base+0x6d58>
  40ddfc:	cmp    DWORD PTR [r12],0x65757274
  40de04:	je     40de70 <main@@Base+0x6da0>
  40de06:	cmp    rax,0x5
  40de0a:	jl     40de28 <main@@Base+0x6d58>
  40de0c:	mov    eax,DWORD PTR [r12]
  40de10:	mov    ecx,0x736c6166
  40de15:	xor    eax,ecx
  40de17:	movzx  ecx,BYTE PTR [r12+0x4]
  40de1d:	xor    ecx,0x65
  40de20:	or     ecx,eax
  40de22:	je     40dfa5 <main@@Base+0x6ed5>
  40de28:	mov    QWORD PTR [rsp+0x30],0x0
  40de31:	mov    DWORD PTR [rsp+0x40],0x0
  40de39:	cmp    r12,r13
  40de3c:	je     40de69 <main@@Base+0x6d99>
  40de3e:	mov    rdi,r15
  40de41:	mov    rsi,r12
  40de44:	mov    rdx,r13
  40de47:	lea    rcx,[rsp+0x40]
  40de4c:	lea    r8,[rsp+0x30]
  40de51:	call   427360 <flatcc_json_parser_integer@@Base>
  40de56:	cmp    rax,r12
  40de59:	je     40de83 <main@@Base+0x6db3>
  40de5b:	cmp    DWORD PTR [rsp+0x40],0x0
  40de60:	je     40de8a <main@@Base+0x6dba>
  40de62:	mov    ecx,0x8
  40de67:	jmp    40dea1 <main@@Base+0x6dd1>
  40de69:	xor    ecx,ecx
  40de6b:	mov    rax,r13
  40de6e:	jmp    40deb1 <main@@Base+0x6de1>
  40de70:	mov    BYTE PTR [rsp+0x1c],0x1
  40de75:	lea    rax,[r12+0x4]
  40de7a:	mov    cl,0x1
  40de7c:	cmp    r12,rax
  40de7f:	jne    40deeb <main@@Base+0x6e1b>
  40de81:	jmp    40deba <main@@Base+0x6dea>
  40de83:	xor    ecx,ecx
  40de85:	mov    rax,r12
  40de88:	jmp    40deb1 <main@@Base+0x6de1>
  40de8a:	mov    rcx,QWORD PTR [rsp+0x30]
  40de8f:	cmp    rcx,0x100
  40de96:	jb     40dfbf <main@@Base+0x6eef>
  40de9c:	mov    ecx,0x7
  40dea1:	mov    rdi,r15
  40dea4:	mov    rsi,rax
  40dea7:	mov    rdx,r13
  40deaa:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  40deaf:	xor    ecx,ecx
  40deb1:	mov    BYTE PTR [rsp+0x1c],cl
  40deb5:	cmp    r12,rax
  40deb8:	jne    40deeb <main@@Base+0x6e1b>
  40deba:	mov    rdi,r15
  40debd:	mov    rsi,r12
  40dec0:	mov    rdx,r13
  40dec3:	lea    rcx,[rip+0x362b6]        # 444180 <__data_start@@Base+0xd0>
  40deca:	lea    r8,[rsp+0x1c]
  40decf:	call   4159b0 <main@@Base+0xe8e0>
  40ded4:	cmp    rax,r12
  40ded7:	je     411d78 <main@@Base+0xaca8>
  40dedd:	cmp    rax,r13
  40dee0:	je     411d78 <main@@Base+0xaca8>
  40dee6:	movzx  ecx,BYTE PTR [rsp+0x1c]
  40deeb:	mov    BYTE PTR [rbp+0x0],cl
  40deee:	mov    rcx,r13
  40def1:	sub    rcx,rax
  40def4:	cmp    rcx,0x2
  40def8:	jl     40df15 <main@@Base+0x6e45>
  40defa:	cmp    BYTE PTR [rax],0x20
  40defd:	jg     40df23 <main@@Base+0x6e53>
  40deff:	jne    40df15 <main@@Base+0x6e45>
  40df01:	cmp    BYTE PTR [rax+0x1],0x20
  40df05:	jle    40df15 <main@@Base+0x6e45>
  40df07:	add    rax,0x1
  40df0b:	cmp    rax,r13
  40df0e:	jne    40df2c <main@@Base+0x6e5c>
  40df10:	jmp    40ee94 <main@@Base+0x7dc4>
  40df15:	mov    rdi,r15
  40df18:	mov    rsi,rax
  40df1b:	mov    rdx,r13
  40df1e:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40df23:	cmp    rax,r13
  40df26:	je     40ee94 <main@@Base+0x7dc4>
  40df2c:	movzx  ecx,BYTE PTR [rax]
  40df2f:	cmp    cl,0x2c
  40df32:	jne    40ee9c <main@@Base+0x7dcc>
  40df38:	lea    r12,[rax+0x1]
  40df3c:	mov    rcx,r13
  40df3f:	sub    rcx,r12
  40df42:	cmp    rcx,0x2
  40df46:	jl     40df5d <main@@Base+0x6e8d>
  40df48:	cmp    BYTE PTR [r12],0x20
  40df4d:	jg     40df6e <main@@Base+0x6e9e>
  40df4f:	jne    40df5d <main@@Base+0x6e8d>
  40df51:	cmp    BYTE PTR [rax+0x2],0x20
  40df55:	jle    40df5d <main@@Base+0x6e8d>
  40df57:	add    rax,0x2
  40df5b:	jmp    40df6b <main@@Base+0x6e9b>
  40df5d:	mov    rdi,r15
  40df60:	mov    rsi,r12
  40df63:	mov    rdx,r13
  40df66:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40df6b:	mov    r12,rax
  40df6e:	cmp    r12,r13
  40df71:	je     40eee1 <main@@Base+0x7e11>
  40df77:	cmp    BYTE PTR [r12],0x5d
  40df7c:	je     40f09c <main@@Base+0x7fcc>
  40df82:	mov    BYTE PTR [rsp+0x1c],0x0
  40df87:	mov    rdi,QWORD PTR [r15]
  40df8a:	mov    esi,0x1
  40df8f:	call   41fdc0 <flatcc_builder_extend_vector@@Base>
  40df94:	mov    rbp,rax
  40df97:	test   rax,rax
  40df9a:	jne    40ddf0 <main@@Base+0x6d20>
  40dfa0:	jmp    407c81 <main@@Base+0xbb1>
  40dfa5:	mov    BYTE PTR [rsp+0x1c],0x0
  40dfaa:	lea    rax,[r12+0x5]
  40dfaf:	xor    ecx,ecx
  40dfb1:	cmp    r12,rax
  40dfb4:	jne    40deeb <main@@Base+0x6e1b>
  40dfba:	jmp    40deba <main@@Base+0x6dea>
  40dfbf:	test   cl,cl
  40dfc1:	setne  cl
  40dfc4:	jmp    40deb1 <main@@Base+0x6de1>
  40dfc9:	neg    rax
  40dfcc:	mov    DWORD PTR [rsp+0x1c],eax
  40dfd0:	mov    r12d,eax
  40dfd3:	cmp    rbx,r14
  40dfd6:	jne    40e011 <main@@Base+0x6f41>
  40dfd8:	mov    rdi,r15
  40dfdb:	mov    rsi,rbx
  40dfde:	mov    r12,QWORD PTR [rsp+0x8]
  40dfe3:	mov    rdx,r12
  40dfe6:	lea    rcx,[rip+0x36233]        # 444220 <__data_start@@Base+0x170>
  40dfed:	lea    r8,[rsp+0x1c]
  40dff2:	call   415d40 <main@@Base+0xec70>
  40dff7:	mov    r14,rax
  40dffa:	cmp    rax,rbx
  40dffd:	je     411d4c <main@@Base+0xac7c>
  40e003:	cmp    r14,r12
  40e006:	je     411d4c <main@@Base+0xac7c>
  40e00c:	mov    r12d,DWORD PTR [rsp+0x1c]
  40e011:	test   r12d,r12d
  40e014:	mov    r13,QWORD PTR [rsp+0x8]
  40e019:	jne    40e026 <main@@Base+0x6f56>
  40e01b:	test   BYTE PTR [r15+0x10],0x2
  40e020:	je     40f87e <main@@Base+0x87ae>
  40e026:	mov    rdi,QWORD PTR [r15]
  40e029:	mov    esi,0x10
  40e02e:	jmp    40f07c <main@@Base+0x7fac>
  40e033:	mov    ecx,0x15
  40e038:	mov    rdi,r15
  40e03b:	mov    rsi,r14
  40e03e:	mov    rdx,r13
  40e041:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  40e046:	mov    r14,rax
  40e049:	mov    rax,QWORD PTR [rsp+0x48]
  40e04e:	cmp    DWORD PTR [rax],0x0
  40e051:	je     40e373 <main@@Base+0x72a3>
  40e057:	mov    ecx,0x21
  40e05c:	mov    rdi,r15
  40e05f:	mov    rsi,r14
  40e062:	mov    rdx,r13
  40e065:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  40e06a:	mov    r14,rax
  40e06d:	cmp    DWORD PTR [rsp+0x3c],0x0
  40e072:	mov    r12,rax
  40e075:	je     407c81 <main@@Base+0xbb1>
  40e07b:	mov    rdi,QWORD PTR [r15]
  40e07e:	mov    esi,0x22
  40e083:	jmp    40fadf <main@@Base+0x8a0f>
  40e088:	mov    ecx,0x9
  40e08d:	mov    rdi,r15
  40e090:	mov    rsi,rax
  40e093:	mov    rdx,r13
  40e096:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  40e09b:	mov    r14,rax
  40e09e:	jmp    40b35f <main@@Base+0x428f>
  40e0a3:	xor    r12d,r12d
  40e0a6:	mov    r14,rbx
  40e0a9:	jmp    40e394 <main@@Base+0x72c4>
  40e0ae:	mov    rdi,QWORD PTR [rsp+0x10]
  40e0b3:	mov    rsi,rbx
  40e0b6:	mov    rdx,QWORD PTR [rsp+0x8]
  40e0bb:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40e0c0:	mov    rbx,rax
  40e0c3:	cmp    r15,rbx
  40e0c6:	je     40b9a3 <main@@Base+0x48d3>
  40e0cc:	mov    QWORD PTR [rsp+0x30],0x0
  40e0d5:	mov    DWORD PTR [rsp+0x40],0x0
  40e0dd:	mov    DWORD PTR [rsp+0x1c],0x0
  40e0e5:	xor    r12d,r12d
  40e0e8:	mov    rdx,QWORD PTR [rsp+0x8]
  40e0ed:	cmp    rbx,rdx
  40e0f0:	je     40e12d <main@@Base+0x705d>
  40e0f2:	mov    r15,QWORD PTR [rsp+0x10]
  40e0f7:	mov    rdi,r15
  40e0fa:	mov    rsi,rbx
  40e0fd:	lea    rcx,[rsp+0x40]
  40e102:	lea    r8,[rsp+0x30]
  40e107:	call   427360 <flatcc_json_parser_integer@@Base>
  40e10c:	cmp    rax,rbx
  40e10f:	je     40e31b <main@@Base+0x724b>
  40e115:	mov    r14,rax
  40e118:	cmp    DWORD PTR [rsp+0x40],0x0
  40e11d:	je     40eef1 <main@@Base+0x7e21>
  40e123:	mov    ecx,0x8
  40e128:	jmp    40ef0d <main@@Base+0x7e3d>
  40e12d:	mov    r14,rdx
  40e130:	mov    r15,QWORD PTR [rsp+0x10]
  40e135:	jmp    40ef20 <main@@Base+0x7e50>
  40e13a:	mov    rdi,QWORD PTR [rsp+0x10]
  40e13f:	mov    rsi,rbx
  40e142:	mov    rdx,QWORD PTR [rsp+0x8]
  40e147:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40e14c:	mov    rbx,rax
  40e14f:	cmp    r15,rbx
  40e152:	je     40bafc <main@@Base+0x4a2c>
  40e158:	mov    QWORD PTR [rsp+0x30],0x0
  40e161:	mov    DWORD PTR [rsp+0x1c],0x0
  40e169:	mov    QWORD PTR [rsp+0x40],0x0
  40e172:	mov    rdx,QWORD PTR [rsp+0x8]
  40e177:	cmp    rbx,rdx
  40e17a:	je     40e1cd <main@@Base+0x70fd>
  40e17c:	mov    r15,QWORD PTR [rsp+0x10]
  40e181:	mov    rdi,r15
  40e184:	mov    rsi,rbx
  40e187:	lea    rcx,[rsp+0x1c]
  40e18c:	lea    r8,[rsp+0x30]
  40e191:	call   427360 <flatcc_json_parser_integer@@Base>
  40e196:	cmp    rax,rbx
  40e199:	je     40e323 <main@@Base+0x7253>
  40e19f:	mov    r14,rax
  40e1a2:	cmp    DWORD PTR [rsp+0x1c],0x0
  40e1a7:	je     40ef8f <main@@Base+0x7ebf>
  40e1ad:	mov    ecx,0x8
  40e1b2:	mov    rdi,r15
  40e1b5:	mov    rsi,r14
  40e1b8:	mov    rdx,QWORD PTR [rsp+0x8]
  40e1bd:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  40e1c2:	mov    r14,rax
  40e1c5:	xor    r12d,r12d
  40e1c8:	jmp    40ef99 <main@@Base+0x7ec9>
  40e1cd:	xor    r12d,r12d
  40e1d0:	mov    r14,rdx
  40e1d3:	mov    r15,QWORD PTR [rsp+0x10]
  40e1d8:	jmp    40ef99 <main@@Base+0x7ec9>
  40e1dd:	mov    ecx,0xa
  40e1e2:	mov    rdi,r15
  40e1e5:	mov    rsi,rax
  40e1e8:	jmp    40bdf3 <main@@Base+0x4d23>
  40e1ed:	mov    rdi,QWORD PTR [rsp+0x10]
  40e1f2:	mov    rsi,r12
  40e1f5:	mov    rdx,r13
  40e1f8:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40e1fd:	mov    r12,rax
  40e200:	cmp    r15,r12
  40e203:	je     40f863 <main@@Base+0x8793>
  40e209:	mov    r15,QWORD PTR [rsp+0x10]
  40e20e:	mov    rdi,QWORD PTR [r15]
  40e211:	call   4207b0 <flatcc_builder_start_offset_vector@@Base>
  40e216:	test   eax,eax
  40e218:	jne    407c81 <main@@Base+0xbb1>
  40e21e:	cmp    r12,r13
  40e221:	je     40e252 <main@@Base+0x7182>
  40e223:	cmp    BYTE PTR [r12],0x5b
  40e228:	jne    40e252 <main@@Base+0x7182>
  40e22a:	lea    rax,[r12+0x1]
  40e22f:	mov    rcx,r13
  40e232:	sub    rcx,rax
  40e235:	cmp    rcx,0x2
  40e239:	jl     41041b <main@@Base+0x934b>
  40e23f:	cmp    BYTE PTR [rax],0x20
  40e242:	jle    4103fe <main@@Base+0x932e>
  40e248:	mov    r13,QWORD PTR [rsp+0x8]
  40e24d:	jmp    410429 <main@@Base+0x9359>
  40e252:	mov    ecx,0x16
  40e257:	mov    rdi,r15
  40e25a:	mov    rsi,r12
  40e25d:	mov    rdx,r13
  40e260:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  40e265:	mov    r14,rax
  40e268:	mov    rdi,QWORD PTR [r15]
  40e26b:	call   420970 <flatcc_builder_end_offset_vector@@Base>
  40e270:	mov    DWORD PTR [rsp+0x3c],eax
  40e274:	test   eax,eax
  40e276:	mov    rbp,QWORD PTR [rsp+0x20]
  40e27b:	movabs r12,0x7465737400000000
  40e285:	je     411d63 <main@@Base+0xac93>
  40e28b:	mov    rdi,QWORD PTR [r15]
  40e28e:	mov    esi,0xa
  40e293:	jmp    40b37b <main@@Base+0x42ab>
  40e298:	mov    rdi,r15
  40e29b:	mov    rsi,rax
  40e29e:	mov    rdx,r13
  40e2a1:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40e2a6:	mov    r12,r13
  40e2a9:	cmp    rax,r13
  40e2ac:	je     40f0cf <main@@Base+0x7fff>
  40e2b2:	cmp    BYTE PTR [rax],0x5d
  40e2b5:	jne    40f0cc <main@@Base+0x7ffc>
  40e2bb:	lea    r14,[rax+0x1]
  40e2bf:	sub    r13,r14
  40e2c2:	cmp    r13,0x2
  40e2c6:	jl     40f57d <main@@Base+0x84ad>
  40e2cc:	cmp    BYTE PTR [r14],0x20
  40e2d0:	jg     4117e6 <main@@Base+0xa716>
  40e2d6:	jne    40f57d <main@@Base+0x84ad>
  40e2dc:	cmp    BYTE PTR [rax+0x2],0x20
  40e2e0:	jle    40f57d <main@@Base+0x84ad>
  40e2e6:	add    rax,0x2
  40e2ea:	jmp    4117e3 <main@@Base+0xa713>
  40e2ef:	mov    r14,rbx
  40e2f2:	jmp    40f012 <main@@Base+0x7f42>
  40e2f7:	mov    rdi,QWORD PTR [r15]
  40e2fa:	call   4215b0 <flatcc_builder_end_table@@Base>
  40e2ff:	mov    DWORD PTR [rsp+0x3c],eax
  40e303:	test   eax,eax
  40e305:	jne    40d95b <main@@Base+0x688b>
  40e30b:	jmp    40d934 <main@@Base+0x6864>
  40e310:	mov    rdi,r15
  40e313:	mov    rsi,r14
  40e316:	jmp    4113cd <main@@Base+0xa2fd>
  40e31b:	mov    r14,rbx
  40e31e:	jmp    40ef20 <main@@Base+0x7e50>
  40e323:	xor    r12d,r12d
  40e326:	mov    r14,rbx
  40e329:	jmp    40ef99 <main@@Base+0x7ec9>
  40e32e:	test   r12,r12
  40e331:	jns    40e38f <main@@Base+0x72bf>
  40e333:	mov    ecx,0x7
  40e338:	mov    rdi,r15
  40e33b:	mov    rsi,r14
  40e33e:	mov    rdx,QWORD PTR [rsp+0x8]
  40e343:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  40e348:	mov    r14,rax
  40e34b:	xor    r12d,r12d
  40e34e:	jmp    40e394 <main@@Base+0x72c4>
  40e350:	mov    rdi,QWORD PTR [r15]
  40e353:	call   4215b0 <flatcc_builder_end_table@@Base>
  40e358:	mov    DWORD PTR [rsp+0x3c],eax
  40e35c:	test   eax,eax
  40e35e:	je     40faa6 <main@@Base+0x89d6>
  40e364:	mov    r15,QWORD PTR [rsp+0x10]
  40e369:	mov    r13,QWORD PTR [rsp+0x8]
  40e36e:	jmp    40fad7 <main@@Base+0x8a07>
  40e373:	mov    rdi,QWORD PTR [r15]
  40e376:	call   4215b0 <flatcc_builder_end_table@@Base>
  40e37b:	mov    DWORD PTR [rsp+0x3c],eax
  40e37f:	test   eax,eax
  40e381:	jne    40e07b <main@@Base+0x6fab>
  40e387:	jmp    40e057 <main@@Base+0x6f87>
  40e38c:	neg    r12
  40e38f:	mov    QWORD PTR [rsp+0x40],r12
  40e394:	mov    rbp,QWORD PTR [rsp+0x20]
  40e399:	cmp    rbx,r14
  40e39c:	jne    40e3d7 <main@@Base+0x7307>
  40e39e:	mov    rdi,r15
  40e3a1:	mov    rsi,rbx
  40e3a4:	mov    r12,QWORD PTR [rsp+0x8]
  40e3a9:	mov    rdx,r12
  40e3ac:	lea    rcx,[rip+0x35ead]        # 444260 <__data_start@@Base+0x1b0>
  40e3b3:	lea    r8,[rsp+0x40]
  40e3b8:	call   415f20 <main@@Base+0xee50>
  40e3bd:	mov    r14,rax
  40e3c0:	cmp    rax,rbx
  40e3c3:	je     411d4c <main@@Base+0xac7c>
  40e3c9:	cmp    r14,r12
  40e3cc:	je     411d4c <main@@Base+0xac7c>
  40e3d2:	mov    r12,QWORD PTR [rsp+0x40]
  40e3d7:	test   r12,r12
  40e3da:	mov    r13,QWORD PTR [rsp+0x8]
  40e3df:	jne    40e3ec <main@@Base+0x731c>
  40e3e1:	test   BYTE PTR [r15+0x10],0x2
  40e3e6:	je     40f87e <main@@Base+0x87ae>
  40e3ec:	mov    rdi,QWORD PTR [r15]
  40e3ef:	mov    esi,0x12
  40e3f4:	jmp    4103c4 <main@@Base+0x92f4>
  40e3f9:	mov    rsi,rax
  40e3fc:	mov    r15,QWORD PTR [rsp+0x10]
  40e401:	mov    rdi,r15
  40e404:	mov    rdx,r13
  40e407:	lea    rcx,[rsp+0x3c]
  40e40c:	call   427830 <flatcc_json_parser_build_string@@Base>
  40e411:	mov    r12,rax
  40e414:	cmp    DWORD PTR [rsp+0x3c],0x0
  40e419:	je     407c81 <main@@Base+0xbb1>
  40e41f:	mov    rdi,QWORD PTR [r15]
  40e422:	mov    esi,0x1
  40e427:	call   4200b0 <flatcc_builder_extend_offset_vector@@Base>
  40e42c:	test   rax,rax
  40e42f:	je     407c81 <main@@Base+0xbb1>
  40e435:	mov    ecx,DWORD PTR [rsp+0x3c]
  40e439:	mov    DWORD PTR [rax],ecx
  40e43b:	mov    rax,r13
  40e43e:	sub    rax,r12
  40e441:	cmp    rax,0x2
  40e445:	jl     40e466 <main@@Base+0x7396>
  40e447:	cmp    BYTE PTR [r12],0x20
  40e44c:	jg     40e477 <main@@Base+0x73a7>
  40e44e:	jne    40e466 <main@@Base+0x7396>
  40e450:	cmp    BYTE PTR [r12+0x1],0x20
  40e456:	jle    40e466 <main@@Base+0x7396>
  40e458:	add    r12,0x1
  40e45c:	cmp    r12,r13
  40e45f:	jne    40e480 <main@@Base+0x73b0>
  40e461:	jmp    4108e4 <main@@Base+0x9814>
  40e466:	mov    rdi,r15
  40e469:	mov    rsi,r12
  40e46c:	mov    rdx,r13
  40e46f:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40e474:	mov    r12,rax
  40e477:	cmp    r12,r13
  40e47a:	je     4108e4 <main@@Base+0x9814>
  40e480:	movzx  eax,BYTE PTR [r12]
  40e485:	cmp    al,0x2c
  40e487:	jne    4108f4 <main@@Base+0x9824>
  40e48d:	lea    rsi,[r12+0x1]
  40e492:	mov    rax,r13
  40e495:	sub    rax,rsi
  40e498:	cmp    rax,0x2
  40e49c:	jl     40e4be <main@@Base+0x73ee>
  40e49e:	cmp    BYTE PTR [rsi],0x20
  40e4a1:	jg     40e4cc <main@@Base+0x73fc>
  40e4a3:	jne    40e4be <main@@Base+0x73ee>
  40e4a5:	cmp    BYTE PTR [r12+0x2],0x20
  40e4ab:	jle    40e4be <main@@Base+0x73ee>
  40e4ad:	add    r12,0x2
  40e4b1:	mov    rsi,r12
  40e4b4:	cmp    rsi,r13
  40e4b7:	jne    40e4d5 <main@@Base+0x7405>
  40e4b9:	jmp    410964 <main@@Base+0x9894>
  40e4be:	mov    rdi,r15
  40e4c1:	mov    rdx,r13
  40e4c4:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40e4c9:	mov    rsi,rax
  40e4cc:	cmp    rsi,r13
  40e4cf:	je     410964 <main@@Base+0x9894>
  40e4d5:	cmp    BYTE PTR [rsi],0x5d
  40e4d8:	jne    40e401 <main@@Base+0x7331>
  40e4de:	lea    r14,[rsi+0x1]
  40e4e2:	sub    r13,r14
  40e4e5:	cmp    r13,0x2
  40e4e9:	jl     411b48 <main@@Base+0xaa78>
  40e4ef:	cmp    BYTE PTR [r14],0x20
  40e4f3:	jg     41091d <main@@Base+0x984d>
  40e4f9:	jne    411b48 <main@@Base+0xaa78>
  40e4ff:	cmp    BYTE PTR [rsi+0x2],0x20
  40e503:	jle    411b48 <main@@Base+0xaa78>
  40e509:	add    rsi,0x2
  40e50d:	mov    r14,rsi
  40e510:	jmp    41091d <main@@Base+0x984d>
  40e515:	mov    r12,rax
  40e518:	mov    r15,QWORD PTR [rsp+0x10]
  40e51d:	mov    rdi,QWORD PTR [r15]
  40e520:	mov    esi,0x1
  40e525:	call   41fdc0 <flatcc_builder_extend_vector@@Base>
  40e52a:	test   rax,rax
  40e52d:	je     407c81 <main@@Base+0xbb1>
  40e533:	mov    r14,rax
  40e536:	cmp    r12,r13
  40e539:	je     40e57e <main@@Base+0x74ae>
  40e53b:	cmp    BYTE PTR [r12],0x7b
  40e540:	jne    40e57e <main@@Base+0x74ae>
  40e542:	lea    rax,[r12+0x1]
  40e547:	mov    rcx,r13
  40e54a:	sub    rcx,rax
  40e54d:	cmp    rcx,0x2
  40e551:	jl     40e652 <main@@Base+0x7582>
  40e557:	cmp    BYTE PTR [rax],0x20
  40e55a:	jg     40e660 <main@@Base+0x7590>
  40e560:	jne    40e652 <main@@Base+0x7582>
  40e566:	cmp    BYTE PTR [r12+0x2],0x20
  40e56c:	jle    40e652 <main@@Base+0x7582>
  40e572:	add    r12,0x2
  40e576:	mov    rax,r12
  40e579:	jmp    40e660 <main@@Base+0x7590>
  40e57e:	mov    ecx,0x15
  40e583:	mov    rdi,r15
  40e586:	mov    rsi,r12
  40e589:	mov    rdx,r13
  40e58c:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  40e591:	mov    rdx,rax
  40e594:	mov    rax,r13
  40e597:	sub    rax,rdx
  40e59a:	cmp    rax,0x2
  40e59e:	jl     40e5bb <main@@Base+0x74eb>
  40e5a0:	cmp    BYTE PTR [rdx],0x20
  40e5a3:	jg     40e5cc <main@@Base+0x74fc>
  40e5a5:	jne    40e5bb <main@@Base+0x74eb>
  40e5a7:	cmp    BYTE PTR [rdx+0x1],0x20
  40e5ab:	jle    40e5bb <main@@Base+0x74eb>
  40e5ad:	add    rdx,0x1
  40e5b1:	cmp    rdx,r13
  40e5b4:	jne    40e5d5 <main@@Base+0x7505>
  40e5b6:	jmp    40fa5a <main@@Base+0x898a>
  40e5bb:	mov    rdi,r15
  40e5be:	mov    rsi,rdx
  40e5c1:	mov    rdx,r13
  40e5c4:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40e5c9:	mov    rdx,rax
  40e5cc:	cmp    rdx,r13
  40e5cf:	je     40fa5a <main@@Base+0x898a>
  40e5d5:	mov    al,BYTE PTR [rdx]
  40e5d7:	cmp    al,0x2c
  40e5d9:	jne    40fa62 <main@@Base+0x8992>
  40e5df:	lea    r12,[rdx+0x1]
  40e5e3:	mov    rax,r13
  40e5e6:	sub    rax,r12
  40e5e9:	cmp    rax,0x2
  40e5ed:	jl     40e60f <main@@Base+0x753f>
  40e5ef:	cmp    BYTE PTR [r12],0x20
  40e5f4:	jg     40e620 <main@@Base+0x7550>
  40e5f6:	jne    40e60f <main@@Base+0x753f>
  40e5f8:	cmp    BYTE PTR [rdx+0x2],0x20
  40e5fc:	jle    40e60f <main@@Base+0x753f>
  40e5fe:	add    rdx,0x2
  40e602:	mov    r12,rdx
  40e605:	cmp    r12,r13
  40e608:	jne    40e629 <main@@Base+0x7559>
  40e60a:	jmp    40fb1b <main@@Base+0x8a4b>
  40e60f:	mov    rdi,r15
  40e612:	mov    rsi,r12
  40e615:	mov    rdx,r13
  40e618:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40e61d:	mov    r12,rax
  40e620:	cmp    r12,r13
  40e623:	je     40fb1b <main@@Base+0x8a4b>
  40e629:	cmp    BYTE PTR [r12],0x5d
  40e62e:	je     40fc27 <main@@Base+0x8b57>
  40e634:	mov    rdi,QWORD PTR [r15]
  40e637:	mov    esi,0x1
  40e63c:	call   41fdc0 <flatcc_builder_extend_vector@@Base>
  40e641:	mov    r14,rax
  40e644:	test   rax,rax
  40e647:	jne    40e536 <main@@Base+0x7466>
  40e64d:	jmp    407c81 <main@@Base+0xbb1>
  40e652:	mov    rdi,r15
  40e655:	mov    rsi,rax
  40e658:	mov    rdx,r13
  40e65b:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40e660:	mov    rsi,r13
  40e663:	cmp    rax,r13
  40e666:	je     40e693 <main@@Base+0x75c3>
  40e668:	cmp    BYTE PTR [rax],0x7d
  40e66b:	jne    40e683 <main@@Base+0x75b3>
  40e66d:	lea    rdx,[rax+0x1]
  40e671:	sub    r13,rdx
  40e674:	cmp    r13,0x2
  40e678:	jge    40ec76 <main@@Base+0x7ba6>
  40e67e:	jmp    40ec99 <main@@Base+0x7bc9>
  40e683:	mov    rsi,rax
  40e686:	jmp    40e693 <main@@Base+0x75c3>
  40e688:	mov    DWORD PTR [rsp+0x1c],ecx
  40e68c:	mov    ebp,ecx
  40e68e:	jmp    40eb2b <main@@Base+0x7a5b>
  40e693:	mov    r15,r13
  40e696:	cmp    rsi,r13
  40e699:	je     40e6dc <main@@Base+0x760c>
  40e69b:	movzx  eax,BYTE PTR [rsi]
  40e69e:	cmp    al,0x2e
  40e6a0:	je     40e6b7 <main@@Base+0x75e7>
  40e6a2:	cmp    al,0x22
  40e6a4:	jne    40e6ce <main@@Base+0x75fe>
  40e6a6:	add    rsi,0x1
  40e6aa:	mov    rax,QWORD PTR [rsp+0x28]
  40e6af:	mov    DWORD PTR [rax],0x0
  40e6b5:	jmp    40e6d9 <main@@Base+0x7609>
  40e6b7:	mov    ecx,0x5
  40e6bc:	mov    rdi,QWORD PTR [rsp+0x10]
  40e6c1:	mov    rdx,r13
  40e6c4:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  40e6c9:	mov    r15,rax
  40e6cc:	jmp    40e6dc <main@@Base+0x760c>
  40e6ce:	mov    rax,QWORD PTR [rsp+0x28]
  40e6d3:	mov    DWORD PTR [rax],0x1
  40e6d9:	mov    r15,rsi
  40e6dc:	mov    rax,r13
  40e6df:	sub    rax,r15
  40e6e2:	cmp    rax,0x8
  40e6e6:	jb     40e6f2 <main@@Base+0x7622>
  40e6e8:	movbe  rcx,QWORD PTR [r15]
  40e6ed:	jmp    40e783 <main@@Base+0x76b3>
  40e6f2:	mov    ecx,eax
  40e6f4:	and    cl,0xf
  40e6f7:	add    cl,0xff
  40e6fa:	cmp    cl,0x7
  40e6fd:	ja     40e834 <main@@Base+0x7764>
  40e703:	movzx  ecx,cl
  40e706:	lea    rdx,[rip+0x26b53]        # 435260 <_IO_stdin_used@@Base+0x260>
  40e70d:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  40e711:	add    rcx,rdx
  40e714:	xor    r8d,r8d
  40e717:	xor    r9d,r9d
  40e71a:	xor    edx,edx
  40e71c:	xor    esi,esi
  40e71e:	xor    ebx,ebx
  40e720:	xor    edi,edi
  40e722:	xor    ebp,ebp
  40e724:	jmp    rcx
  40e726:	movsx  r8,BYTE PTR [r15+0x7]
  40e72b:	movsx  r9,BYTE PTR [r15+0x6]
  40e730:	shl    r9,0x8
  40e734:	or     r9,r8
  40e737:	movsx  rdx,BYTE PTR [r15+0x5]
  40e73c:	shl    rdx,0x10
  40e740:	or     rdx,r9
  40e743:	movsx  rsi,BYTE PTR [r15+0x4]
  40e748:	shl    rsi,0x18
  40e74c:	or     rsi,rdx
  40e74f:	movsx  rbx,BYTE PTR [r15+0x3]
  40e754:	shl    rbx,0x20
  40e758:	or     rbx,rsi
  40e75b:	movsx  rdi,BYTE PTR [r15+0x2]
  40e760:	shl    rdi,0x28
  40e764:	or     rdi,rbx
  40e767:	movsx  rbp,BYTE PTR [r15+0x1]
  40e76c:	shl    rbp,0x30
  40e770:	or     rbp,rdi
  40e773:	movzx  ecx,BYTE PTR [r15]
  40e777:	shl    rcx,0x38
  40e77b:	or     rcx,rbp
  40e77e:	mov    r13,QWORD PTR [rsp+0x8]
  40e783:	mov    rdx,rcx
  40e786:	movabs rsi,0xffff000000000000
  40e790:	and    rdx,rsi
  40e793:	movabs rsi,0x6964000000000000
  40e79d:	cmp    rdx,rsi
  40e7a0:	jne    40e7e2 <main@@Base+0x7712>
  40e7a2:	mov    rbx,r15
  40e7a5:	cmp    rax,0x3
  40e7a9:	jl     40e9b6 <main@@Base+0x78e6>
  40e7af:	mov    rax,QWORD PTR [rsp+0x28]
  40e7b4:	cmp    DWORD PTR [rax],0x0
  40e7b7:	movzx  eax,BYTE PTR [r15+0x2]
  40e7bc:	je     40e844 <main@@Base+0x7774>
  40e7c2:	cmp    al,0x21
  40e7c4:	jl     40e7d1 <main@@Base+0x7701>
  40e7c6:	mov    rbx,r15
  40e7c9:	cmp    al,0x3a
  40e7cb:	jne    40e9b6 <main@@Base+0x78e6>
  40e7d1:	lea    rsi,[r15+0x2]
  40e7d5:	mov    rax,QWORD PTR [rsp+0x28]
  40e7da:	mov    DWORD PTR [rax],0x0
  40e7e0:	jmp    40e853 <main@@Base+0x7783>
  40e7e2:	movabs rdx,0x64697374616e6365
  40e7ec:	cmp    rcx,rdx
  40e7ef:	jne    40e834 <main@@Base+0x7764>
  40e7f1:	mov    rbx,r15
  40e7f4:	cmp    rax,0x9
  40e7f8:	jl     40eab4 <main@@Base+0x79e4>
  40e7fe:	mov    rax,QWORD PTR [rsp+0x28]
  40e803:	cmp    DWORD PTR [rax],0x0
  40e806:	movzx  eax,BYTE PTR [r15+0x8]
  40e80b:	je     40e8ef <main@@Base+0x781f>
  40e811:	cmp    al,0x21
  40e813:	jl     40e820 <main@@Base+0x7750>
  40e815:	mov    rbx,r15
  40e818:	cmp    al,0x3a
  40e81a:	jne    40eab4 <main@@Base+0x79e4>
  40e820:	lea    rsi,[r15+0x8]
  40e824:	mov    rax,QWORD PTR [rsp+0x28]
  40e829:	mov    DWORD PTR [rax],0x0
  40e82f:	jmp    40e8fe <main@@Base+0x782e>
  40e834:	mov    rdi,QWORD PTR [rsp+0x10]
  40e839:	mov    rsi,r15
  40e83c:	mov    r15,rdi
  40e83f:	jmp    40eb1b <main@@Base+0x7a4b>
  40e844:	mov    rbx,r15
  40e847:	cmp    al,0x22
  40e849:	jne    40e9b6 <main@@Base+0x78e6>
  40e84f:	lea    rsi,[r15+0x3]
  40e853:	mov    rbx,QWORD PTR [rsp+0x8]
  40e858:	mov    rax,rbx
  40e85b:	sub    rax,rsi
  40e85e:	cmp    rax,0x2
  40e862:	jl     40e87c <main@@Base+0x77ac>
  40e864:	cmp    BYTE PTR [rsi],0x20
  40e867:	jg     40e88c <main@@Base+0x77bc>
  40e869:	jne    40e87c <main@@Base+0x77ac>
  40e86b:	cmp    BYTE PTR [rsi+0x1],0x20
  40e86f:	jle    40e87c <main@@Base+0x77ac>
  40e871:	add    rsi,0x1
  40e875:	cmp    rsi,rbx
  40e878:	jne    40e891 <main@@Base+0x77c1>
  40e87a:	jmp    40e8d8 <main@@Base+0x7808>
  40e87c:	mov    rdi,QWORD PTR [rsp+0x10]
  40e881:	mov    rdx,rbx
  40e884:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40e889:	mov    rsi,rax
  40e88c:	cmp    rsi,rbx
  40e88f:	je     40e8d8 <main@@Base+0x7808>
  40e891:	cmp    BYTE PTR [rsi],0x3a
  40e894:	jne    40e8d8 <main@@Base+0x7808>
  40e896:	mov    rax,rbx
  40e899:	lea    rbx,[rsi+0x1]
  40e89d:	sub    rax,rbx
  40e8a0:	cmp    rax,0x2
  40e8a4:	jl     40e9a1 <main@@Base+0x78d1>
  40e8aa:	cmp    BYTE PTR [rbx],0x20
  40e8ad:	jg     40e9b6 <main@@Base+0x78e6>
  40e8b3:	jne    40e9a1 <main@@Base+0x78d1>
  40e8b9:	cmp    BYTE PTR [rsi+0x2],0x20
  40e8bd:	jle    40e9a1 <main@@Base+0x78d1>
  40e8c3:	add    rsi,0x2
  40e8c7:	mov    rbx,rsi
  40e8ca:	cmp    r15,rbx
  40e8cd:	jne    40e9bf <main@@Base+0x78ef>
  40e8d3:	jmp    40eb0b <main@@Base+0x7a3b>
  40e8d8:	mov    ecx,0x4
  40e8dd:	mov    rdi,QWORD PTR [rsp+0x10]
  40e8e2:	mov    rdx,rbx
  40e8e5:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  40e8ea:	jmp    40e9b3 <main@@Base+0x78e3>
  40e8ef:	mov    rbx,r15
  40e8f2:	cmp    al,0x22
  40e8f4:	jne    40eab4 <main@@Base+0x79e4>
  40e8fa:	lea    rsi,[r15+0x9]
  40e8fe:	mov    rax,QWORD PTR [rsp+0x8]
  40e903:	sub    rax,rsi
  40e906:	cmp    rax,0x2
  40e90a:	jl     40e926 <main@@Base+0x7856>
  40e90c:	cmp    BYTE PTR [rsi],0x20
  40e90f:	jg     40e938 <main@@Base+0x7868>
  40e911:	jne    40e926 <main@@Base+0x7856>
  40e913:	cmp    BYTE PTR [rsi+0x1],0x20
  40e917:	jle    40e926 <main@@Base+0x7856>
  40e919:	add    rsi,0x1
  40e91d:	cmp    rsi,QWORD PTR [rsp+0x8]
  40e922:	jne    40e93f <main@@Base+0x786f>
  40e924:	jmp    40e988 <main@@Base+0x78b8>
  40e926:	mov    rdi,QWORD PTR [rsp+0x10]
  40e92b:	mov    rdx,QWORD PTR [rsp+0x8]
  40e930:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40e935:	mov    rsi,rax
  40e938:	cmp    rsi,QWORD PTR [rsp+0x8]
  40e93d:	je     40e988 <main@@Base+0x78b8>
  40e93f:	cmp    BYTE PTR [rsi],0x3a
  40e942:	jne    40e988 <main@@Base+0x78b8>
  40e944:	lea    rbx,[rsi+0x1]
  40e948:	mov    rax,QWORD PTR [rsp+0x8]
  40e94d:	sub    rax,rbx
  40e950:	cmp    rax,0x2
  40e954:	jl     40ea9f <main@@Base+0x79cf>
  40e95a:	cmp    BYTE PTR [rbx],0x20
  40e95d:	jg     40eab4 <main@@Base+0x79e4>
  40e963:	jne    40ea9f <main@@Base+0x79cf>
  40e969:	cmp    BYTE PTR [rsi+0x2],0x20
  40e96d:	jle    40ea9f <main@@Base+0x79cf>
  40e973:	add    rsi,0x2
  40e977:	mov    rbx,rsi
  40e97a:	cmp    r15,rbx
  40e97d:	jne    40eab9 <main@@Base+0x79e9>
  40e983:	jmp    40eb0b <main@@Base+0x7a3b>
  40e988:	mov    ecx,0x4
  40e98d:	mov    rdi,QWORD PTR [rsp+0x10]
  40e992:	mov    rdx,QWORD PTR [rsp+0x8]
  40e997:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  40e99c:	jmp    40eab1 <main@@Base+0x79e1>
  40e9a1:	mov    rdi,QWORD PTR [rsp+0x10]
  40e9a6:	mov    rsi,rbx
  40e9a9:	mov    rdx,QWORD PTR [rsp+0x8]
  40e9ae:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40e9b3:	mov    rbx,rax
  40e9b6:	cmp    r15,rbx
  40e9b9:	je     40eb0b <main@@Base+0x7a3b>
  40e9bf:	mov    QWORD PTR [rsp+0x30],0x0
  40e9c8:	mov    DWORD PTR [rsp+0x40],0x0
  40e9d0:	mov    DWORD PTR [rsp+0x1c],0x0
  40e9d8:	xor    ebp,ebp
  40e9da:	mov    rdx,QWORD PTR [rsp+0x8]
  40e9df:	cmp    rbx,rdx
  40e9e2:	je     40ea11 <main@@Base+0x7941>
  40e9e4:	mov    r15,QWORD PTR [rsp+0x10]
  40e9e9:	mov    rdi,r15
  40e9ec:	mov    rsi,rbx
  40e9ef:	lea    rcx,[rsp+0x40]
  40e9f4:	lea    r8,[rsp+0x30]
  40e9f9:	call   427360 <flatcc_json_parser_integer@@Base>
  40e9fe:	cmp    rax,rbx
  40ea01:	je     40ea20 <main@@Base+0x7950>
  40ea03:	cmp    DWORD PTR [rsp+0x40],0x0
  40ea08:	je     40ea2a <main@@Base+0x795a>
  40ea0a:	mov    ecx,0x8
  40ea0f:	jmp    40ea42 <main@@Base+0x7972>
  40ea11:	mov    rax,rdx
  40ea14:	mov    r15,QWORD PTR [rsp+0x10]
  40ea19:	cmp    rbx,rax
  40ea1c:	jne    40ea8c <main@@Base+0x79bc>
  40ea1e:	jmp    40ea57 <main@@Base+0x7987>
  40ea20:	mov    rax,rbx
  40ea23:	cmp    rbx,rax
  40ea26:	jne    40ea8c <main@@Base+0x79bc>
  40ea28:	jmp    40ea57 <main@@Base+0x7987>
  40ea2a:	mov    rcx,QWORD PTR [rsp+0x30]
  40ea2f:	mov    rdx,rcx
  40ea32:	shr    rdx,0x20
  40ea36:	je     40ea94 <main@@Base+0x79c4>
  40ea38:	mov    ecx,0x7
  40ea3d:	mov    r15,QWORD PTR [rsp+0x10]
  40ea42:	mov    rdi,r15
  40ea45:	mov    rsi,rax
  40ea48:	mov    rdx,QWORD PTR [rsp+0x8]
  40ea4d:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  40ea52:	cmp    rbx,rax
  40ea55:	jne    40ea8c <main@@Base+0x79bc>
  40ea57:	mov    rdi,r15
  40ea5a:	mov    rsi,rbx
  40ea5d:	mov    rbp,QWORD PTR [rsp+0x8]
  40ea62:	mov    rdx,rbp
  40ea65:	lea    rcx,[rip+0x35cd4]        # 444740 <__data_start@@Base+0x690>
  40ea6c:	lea    r8,[rsp+0x1c]
  40ea71:	call   416110 <main@@Base+0xf040>
  40ea76:	cmp    rax,rbx
  40ea79:	je     40eccd <main@@Base+0x7bfd>
  40ea7f:	cmp    rax,rbp
  40ea82:	je     40eccd <main@@Base+0x7bfd>
  40ea88:	mov    ebp,DWORD PTR [rsp+0x1c]
  40ea8c:	mov    DWORD PTR [r14],ebp
  40ea8f:	jmp    40ebaa <main@@Base+0x7ada>
  40ea94:	mov    DWORD PTR [rsp+0x1c],ecx
  40ea98:	mov    ebp,ecx
  40ea9a:	jmp    40ea14 <main@@Base+0x7944>
  40ea9f:	mov    rdi,QWORD PTR [rsp+0x10]
  40eaa4:	mov    rsi,rbx
  40eaa7:	mov    rdx,QWORD PTR [rsp+0x8]
  40eaac:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40eab1:	mov    rbx,rax
  40eab4:	cmp    r15,rbx
  40eab7:	je     40eb0b <main@@Base+0x7a3b>
  40eab9:	mov    QWORD PTR [rsp+0x30],0x0
  40eac2:	mov    DWORD PTR [rsp+0x40],0x0
  40eaca:	mov    DWORD PTR [rsp+0x1c],0x0
  40ead2:	xor    ebp,ebp
  40ead4:	mov    rdx,QWORD PTR [rsp+0x8]
  40ead9:	cmp    rbx,rdx
  40eadc:	je     40eb28 <main@@Base+0x7a58>
  40eade:	mov    r15,QWORD PTR [rsp+0x10]
  40eae3:	mov    rdi,r15
  40eae6:	mov    rsi,rbx
  40eae9:	lea    rcx,[rsp+0x40]
  40eaee:	lea    r8,[rsp+0x30]
  40eaf3:	call   427360 <flatcc_json_parser_integer@@Base>
  40eaf8:	cmp    rax,rbx
  40eafb:	je     40eb37 <main@@Base+0x7a67>
  40eafd:	cmp    DWORD PTR [rsp+0x40],0x0
  40eb02:	je     40eb41 <main@@Base+0x7a71>
  40eb04:	mov    ecx,0x8
  40eb09:	jmp    40eb58 <main@@Base+0x7a88>
  40eb0b:	mov    rdi,QWORD PTR [rsp+0x10]
  40eb10:	mov    rsi,r15
  40eb13:	mov    r15,rdi
  40eb16:	mov    r13,QWORD PTR [rsp+0x8]
  40eb1b:	mov    rdx,r13
  40eb1e:	call   425cc0 <flatcc_json_parser_unmatched_symbol@@Base>
  40eb23:	jmp    40ebaf <main@@Base+0x7adf>
  40eb28:	mov    rax,rdx
  40eb2b:	mov    r15,QWORD PTR [rsp+0x10]
  40eb30:	cmp    rbx,rax
  40eb33:	jne    40eba6 <main@@Base+0x7ad6>
  40eb35:	jmp    40eb72 <main@@Base+0x7aa2>
  40eb37:	mov    rax,rbx
  40eb3a:	cmp    rbx,rax
  40eb3d:	jne    40eba6 <main@@Base+0x7ad6>
  40eb3f:	jmp    40eb72 <main@@Base+0x7aa2>
  40eb41:	mov    rcx,QWORD PTR [rsp+0x30]
  40eb46:	mov    rdx,rcx
  40eb49:	shr    rdx,0x20
  40eb4d:	je     40e688 <main@@Base+0x75b8>
  40eb53:	mov    ecx,0x7
  40eb58:	mov    r15,QWORD PTR [rsp+0x10]
  40eb5d:	mov    rdi,r15
  40eb60:	mov    rsi,rax
  40eb63:	mov    rdx,QWORD PTR [rsp+0x8]
  40eb68:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  40eb6d:	cmp    rbx,rax
  40eb70:	jne    40eba6 <main@@Base+0x7ad6>
  40eb72:	mov    rdi,r15
  40eb75:	mov    rsi,rbx
  40eb78:	mov    rdx,QWORD PTR [rsp+0x8]
  40eb7d:	lea    rcx,[rip+0x35bdc]        # 444760 <__data_start@@Base+0x6b0>
  40eb84:	lea    r8,[rsp+0x1c]
  40eb89:	call   416110 <main@@Base+0xf040>
  40eb8e:	cmp    rax,rbx
  40eb91:	je     40eccd <main@@Base+0x7bfd>
  40eb97:	cmp    rax,QWORD PTR [rsp+0x8]
  40eb9c:	je     40eccd <main@@Base+0x7bfd>
  40eba2:	mov    ebp,DWORD PTR [rsp+0x1c]
  40eba6:	mov    DWORD PTR [r14+0x4],ebp
  40ebaa:	mov    r13,QWORD PTR [rsp+0x8]
  40ebaf:	mov    rcx,r13
  40ebb2:	sub    rcx,rax
  40ebb5:	cmp    rcx,0x2
  40ebb9:	jl     40ebd6 <main@@Base+0x7b06>
  40ebbb:	cmp    BYTE PTR [rax],0x20
  40ebbe:	jg     40ebe4 <main@@Base+0x7b14>
  40ebc0:	jne    40ebd6 <main@@Base+0x7b06>
  40ebc2:	cmp    BYTE PTR [rax+0x1],0x20
  40ebc6:	jle    40ebd6 <main@@Base+0x7b06>
  40ebc8:	add    rax,0x1
  40ebcc:	cmp    rax,r13
  40ebcf:	jne    40ebe9 <main@@Base+0x7b19>
  40ebd1:	jmp    40ec57 <main@@Base+0x7b87>
  40ebd6:	mov    rdi,r15
  40ebd9:	mov    rsi,rax
  40ebdc:	mov    rdx,r13
  40ebdf:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40ebe4:	cmp    rax,r13
  40ebe7:	je     40ec57 <main@@Base+0x7b87>
  40ebe9:	movzx  ecx,BYTE PTR [rax]
  40ebec:	cmp    cl,0x2c
  40ebef:	jne    40ec5f <main@@Base+0x7b8f>
  40ebf1:	lea    rsi,[rax+0x1]
  40ebf5:	mov    rcx,r13
  40ebf8:	sub    rcx,rsi
  40ebfb:	cmp    rcx,0x2
  40ebff:	jl     40ec14 <main@@Base+0x7b44>
  40ec01:	cmp    BYTE PTR [rsi],0x20
  40ec04:	jg     40ec22 <main@@Base+0x7b52>
  40ec06:	jne    40ec14 <main@@Base+0x7b44>
  40ec08:	cmp    BYTE PTR [rax+0x2],0x20
  40ec0c:	jle    40ec14 <main@@Base+0x7b44>
  40ec0e:	add    rax,0x2
  40ec12:	jmp    40ec1f <main@@Base+0x7b4f>
  40ec14:	mov    rdi,r15
  40ec17:	mov    rdx,r13
  40ec1a:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40ec1f:	mov    rsi,rax
  40ec22:	cmp    rsi,r13
  40ec25:	je     40ecb6 <main@@Base+0x7be6>
  40ec2b:	cmp    BYTE PTR [rsi],0x7d
  40ec2e:	jne    40e693 <main@@Base+0x75c3>
  40ec34:	lea    rdx,[rsi+0x1]
  40ec38:	sub    r13,rdx
  40ec3b:	cmp    r13,0x2
  40ec3f:	jl     40ec99 <main@@Base+0x7bc9>
  40ec41:	cmp    BYTE PTR [rdx],0x20
  40ec44:	jg     40ec8a <main@@Base+0x7bba>
  40ec46:	jne    40ec99 <main@@Base+0x7bc9>
  40ec48:	cmp    BYTE PTR [rsi+0x2],0x20
  40ec4c:	jle    40ec99 <main@@Base+0x7bc9>
  40ec4e:	add    rsi,0x2
  40ec52:	mov    rdx,rsi
  40ec55:	jmp    40ec8a <main@@Base+0x7bba>
  40ec57:	mov    rdx,r13
  40ec5a:	jmp    40e594 <main@@Base+0x74c4>
  40ec5f:	cmp    cl,0x7d
  40ec62:	jne    40ecc6 <main@@Base+0x7bf6>
  40ec64:	lea    rdx,[rax+0x1]
  40ec68:	mov    rcx,QWORD PTR [rsp+0x8]
  40ec6d:	sub    rcx,rdx
  40ec70:	cmp    rcx,0x2
  40ec74:	jl     40ec99 <main@@Base+0x7bc9>
  40ec76:	cmp    BYTE PTR [rdx],0x20
  40ec79:	jg     40ec8a <main@@Base+0x7bba>
  40ec7b:	jne    40ec99 <main@@Base+0x7bc9>
  40ec7d:	cmp    BYTE PTR [rax+0x2],0x20
  40ec81:	jle    40ec99 <main@@Base+0x7bc9>
  40ec83:	add    rax,0x2
  40ec87:	mov    rdx,rax
  40ec8a:	mov    r15,QWORD PTR [rsp+0x10]
  40ec8f:	mov    r13,QWORD PTR [rsp+0x8]
  40ec94:	jmp    40e594 <main@@Base+0x74c4>
  40ec99:	mov    r15,QWORD PTR [rsp+0x10]
  40ec9e:	mov    rdi,r15
  40eca1:	mov    rsi,rdx
  40eca4:	mov    r13,QWORD PTR [rsp+0x8]
  40eca9:	mov    rdx,r13
  40ecac:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40ecb1:	jmp    40e591 <main@@Base+0x74c1>
  40ecb6:	mov    ecx,0xa
  40ecbb:	mov    rdi,r15
  40ecbe:	mov    rsi,r13
  40ecc1:	jmp    40e589 <main@@Base+0x74b9>
  40ecc6:	mov    ecx,0xa
  40eccb:	jmp    40ecd2 <main@@Base+0x7c02>
  40eccd:	mov    ecx,0x21
  40ecd2:	mov    r15,QWORD PTR [rsp+0x10]
  40ecd7:	mov    rdi,r15
  40ecda:	mov    rsi,rax
  40ecdd:	mov    r13,QWORD PTR [rsp+0x8]
  40ece2:	jmp    40e589 <main@@Base+0x74b9>
  40ece7:	mov    rsi,rax
  40ecea:	mov    r15,QWORD PTR [rsp+0x10]
  40ecef:	mov    rdi,r15
  40ecf2:	mov    rdx,r13
  40ecf5:	lea    rcx,[rsp+0x3c]
  40ecfa:	call   407c50 <main@@Base+0xb80>
  40ecff:	mov    r12,rax
  40ed02:	cmp    DWORD PTR [rsp+0x3c],0x0
  40ed07:	je     407c81 <main@@Base+0xbb1>
  40ed0d:	mov    rdi,QWORD PTR [r15]
  40ed10:	mov    esi,0x1
  40ed15:	call   4200b0 <flatcc_builder_extend_offset_vector@@Base>
  40ed1a:	test   rax,rax
  40ed1d:	je     407c81 <main@@Base+0xbb1>
  40ed23:	mov    ecx,DWORD PTR [rsp+0x3c]
  40ed27:	mov    DWORD PTR [rax],ecx
  40ed29:	mov    rax,r13
  40ed2c:	sub    rax,r12
  40ed2f:	cmp    rax,0x2
  40ed33:	jl     40ed54 <main@@Base+0x7c84>
  40ed35:	cmp    BYTE PTR [r12],0x20
  40ed3a:	jg     40ed65 <main@@Base+0x7c95>
  40ed3c:	jne    40ed54 <main@@Base+0x7c84>
  40ed3e:	cmp    BYTE PTR [r12+0x1],0x20
  40ed44:	jle    40ed54 <main@@Base+0x7c84>
  40ed46:	add    r12,0x1
  40ed4a:	cmp    r12,r13
  40ed4d:	jne    40ed6e <main@@Base+0x7c9e>
  40ed4f:	jmp    4108ec <main@@Base+0x981c>
  40ed54:	mov    rdi,r15
  40ed57:	mov    rsi,r12
  40ed5a:	mov    rdx,r13
  40ed5d:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40ed62:	mov    r12,rax
  40ed65:	cmp    r12,r13
  40ed68:	je     4108ec <main@@Base+0x981c>
  40ed6e:	movzx  eax,BYTE PTR [r12]
  40ed73:	cmp    al,0x2c
  40ed75:	jne    41092c <main@@Base+0x985c>
  40ed7b:	lea    rsi,[r12+0x1]
  40ed80:	mov    rax,r13
  40ed83:	sub    rax,rsi
  40ed86:	cmp    rax,0x2
  40ed8a:	jl     40edac <main@@Base+0x7cdc>
  40ed8c:	cmp    BYTE PTR [rsi],0x20
  40ed8f:	jg     40edba <main@@Base+0x7cea>
  40ed91:	jne    40edac <main@@Base+0x7cdc>
  40ed93:	cmp    BYTE PTR [r12+0x2],0x20
  40ed99:	jle    40edac <main@@Base+0x7cdc>
  40ed9b:	add    r12,0x2
  40ed9f:	mov    rsi,r12
  40eda2:	cmp    rsi,r13
  40eda5:	jne    40edc3 <main@@Base+0x7cf3>
  40eda7:	jmp    410974 <main@@Base+0x98a4>
  40edac:	mov    rdi,r15
  40edaf:	mov    rdx,r13
  40edb2:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40edb7:	mov    rsi,rax
  40edba:	cmp    rsi,r13
  40edbd:	je     410974 <main@@Base+0x98a4>
  40edc3:	cmp    BYTE PTR [rsi],0x5d
  40edc6:	jne    40ecef <main@@Base+0x7c1f>
  40edcc:	lea    r14,[rsi+0x1]
  40edd0:	sub    r13,r14
  40edd3:	cmp    r13,0x2
  40edd7:	jl     411b7b <main@@Base+0xaaab>
  40eddd:	cmp    BYTE PTR [r14],0x20
  40ede1:	jg     410955 <main@@Base+0x9885>
  40ede7:	jne    411b7b <main@@Base+0xaaab>
  40eded:	cmp    BYTE PTR [rsi+0x2],0x20
  40edf1:	jle    411b7b <main@@Base+0xaaab>
  40edf7:	add    rsi,0x2
  40edfb:	mov    r14,rsi
  40edfe:	jmp    410955 <main@@Base+0x9885>
  40ee03:	test   rax,0xffffffff80000000
  40ee09:	je     40f00b <main@@Base+0x7f3b>
  40ee0f:	mov    ecx,0x7
  40ee14:	mov    rdi,r15
  40ee17:	mov    rsi,r14
  40ee1a:	mov    rdx,QWORD PTR [rsp+0x8]
  40ee1f:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  40ee24:	mov    r14,rax
  40ee27:	jmp    40f012 <main@@Base+0x7f42>
  40ee2c:	mov    rdi,QWORD PTR [rsp+0x10]
  40ee31:	mov    rsi,rax
  40ee34:	mov    rdx,QWORD PTR [rsp+0x8]
  40ee39:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40ee3e:	mov    rcx,QWORD PTR [rsp+0x8]
  40ee43:	mov    rsi,rcx
  40ee46:	cmp    rax,rcx
  40ee49:	je     40fcbf <main@@Base+0x8bef>
  40ee4f:	cmp    BYTE PTR [rax],0x7d
  40ee52:	jne    40fcbc <main@@Base+0x8bec>
  40ee58:	lea    r14,[rax+0x1]
  40ee5c:	mov    rcx,QWORD PTR [rsp+0x8]
  40ee61:	sub    rcx,r14
  40ee64:	cmp    rcx,0x2
  40ee68:	jl     411bae <main@@Base+0xaade>
  40ee6e:	cmp    BYTE PTR [r14],0x20
  40ee72:	jg     41140b <main@@Base+0xa33b>
  40ee78:	jne    411bae <main@@Base+0xaade>
  40ee7e:	cmp    BYTE PTR [rax+0x2],0x20
  40ee82:	jle    411bae <main@@Base+0xaade>
  40ee88:	add    rax,0x2
  40ee8c:	mov    r14,rax
  40ee8f:	jmp    41140b <main@@Base+0xa33b>
  40ee94:	mov    r14,r13
  40ee97:	jmp    40b7a2 <main@@Base+0x46d2>
  40ee9c:	cmp    cl,0x5d
  40ee9f:	jne    40fb01 <main@@Base+0x8a31>
  40eea5:	lea    r14,[rax+0x1]
  40eea9:	mov    rcx,QWORD PTR [rsp+0x8]
  40eeae:	sub    rcx,r14
  40eeb1:	cmp    rcx,0x2
  40eeb5:	jl     4113bd <main@@Base+0xa2ed>
  40eebb:	cmp    BYTE PTR [r14],0x20
  40eebf:	jg     40f0b8 <main@@Base+0x7fe8>
  40eec5:	jne    4113bd <main@@Base+0xa2ed>
  40eecb:	cmp    BYTE PTR [rax+0x2],0x20
  40eecf:	jle    4113bd <main@@Base+0xa2ed>
  40eed5:	add    rax,0x2
  40eed9:	mov    r14,rax
  40eedc:	jmp    40f0b8 <main@@Base+0x7fe8>
  40eee1:	mov    ecx,0x9
  40eee6:	mov    rdi,r15
  40eee9:	mov    rsi,r13
  40eeec:	jmp    40b797 <main@@Base+0x46c7>
  40eef1:	mov    rax,QWORD PTR [rsp+0x30]
  40eef6:	mov    rcx,rax
  40eef9:	shr    rcx,0x20
  40eefd:	je     410342 <main@@Base+0x9272>
  40ef03:	mov    ecx,0x7
  40ef08:	mov    r15,QWORD PTR [rsp+0x10]
  40ef0d:	mov    rdi,r15
  40ef10:	mov    rsi,r14
  40ef13:	mov    rdx,QWORD PTR [rsp+0x8]
  40ef18:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  40ef1d:	mov    r14,rax
  40ef20:	mov    rbp,QWORD PTR [rsp+0x20]
  40ef25:	cmp    rbx,r14
  40ef28:	jne    40ef6d <main@@Base+0x7e9d>
  40ef2a:	mov    rdi,r15
  40ef2d:	mov    rsi,rbx
  40ef30:	mov    rbp,QWORD PTR [rsp+0x8]
  40ef35:	mov    rdx,rbp
  40ef38:	lea    rcx,[rip+0x35361]        # 4442a0 <__data_start@@Base+0x1f0>
  40ef3f:	lea    r8,[rsp+0x1c]
  40ef44:	call   416110 <main@@Base+0xf040>
  40ef49:	mov    r14,rax
  40ef4c:	cmp    rax,rbx
  40ef4f:	je     411d4c <main@@Base+0xac7c>
  40ef55:	cmp    r14,rbp
  40ef58:	je     411d4c <main@@Base+0xac7c>
  40ef5e:	mov    r12d,DWORD PTR [rsp+0x1c]
  40ef63:	mov    r15,QWORD PTR [rsp+0x10]
  40ef68:	mov    rbp,QWORD PTR [rsp+0x20]
  40ef6d:	test   r12d,r12d
  40ef70:	mov    r13,QWORD PTR [rsp+0x8]
  40ef75:	jne    40ef82 <main@@Base+0x7eb2>
  40ef77:	test   BYTE PTR [r15+0x10],0x2
  40ef7c:	je     40f87e <main@@Base+0x87ae>
  40ef82:	mov    rdi,QWORD PTR [r15]
  40ef85:	mov    esi,0x11
  40ef8a:	jmp    40f07c <main@@Base+0x7fac>
  40ef8f:	mov    r12,QWORD PTR [rsp+0x30]
  40ef94:	mov    QWORD PTR [rsp+0x40],r12
  40ef99:	mov    rbp,QWORD PTR [rsp+0x20]
  40ef9e:	cmp    rbx,r14
  40efa1:	jne    40efe6 <main@@Base+0x7f16>
  40efa3:	mov    rdi,r15
  40efa6:	mov    rsi,rbx
  40efa9:	mov    rbp,QWORD PTR [rsp+0x8]
  40efae:	mov    rdx,rbp
  40efb1:	lea    rcx,[rip+0x35328]        # 4442e0 <__data_start@@Base+0x230>
  40efb8:	lea    r8,[rsp+0x40]
  40efbd:	call   4162f0 <main@@Base+0xf220>
  40efc2:	mov    r14,rax
  40efc5:	cmp    rax,rbx
  40efc8:	je     411d4c <main@@Base+0xac7c>
  40efce:	cmp    r14,rbp
  40efd1:	je     411d4c <main@@Base+0xac7c>
  40efd7:	mov    r12,QWORD PTR [rsp+0x40]
  40efdc:	mov    r15,QWORD PTR [rsp+0x10]
  40efe1:	mov    rbp,QWORD PTR [rsp+0x20]
  40efe6:	test   r12,r12
  40efe9:	mov    r13,QWORD PTR [rsp+0x8]
  40efee:	jne    40effb <main@@Base+0x7f2b>
  40eff0:	test   BYTE PTR [r15+0x10],0x2
  40eff5:	je     40f87e <main@@Base+0x87ae>
  40effb:	mov    rdi,QWORD PTR [r15]
  40effe:	mov    esi,0x13
  40f003:	jmp    4103c4 <main@@Base+0x92f4>
  40f008:	neg    rax
  40f00b:	mov    DWORD PTR [rsp+0x1c],eax
  40f00f:	mov    r12d,eax
  40f012:	mov    rbp,QWORD PTR [rsp+0x20]
  40f017:	cmp    rbx,r14
  40f01a:	jne    40f05f <main@@Base+0x7f8f>
  40f01c:	mov    rdi,r15
  40f01f:	mov    rsi,rbx
  40f022:	mov    rbp,QWORD PTR [rsp+0x8]
  40f027:	mov    rdx,rbp
  40f02a:	lea    rcx,[rip+0x3520f]        # 444240 <__data_start@@Base+0x190>
  40f031:	lea    r8,[rsp+0x1c]
  40f036:	call   415d40 <main@@Base+0xec70>
  40f03b:	mov    r14,rax
  40f03e:	cmp    rax,rbx
  40f041:	je     411d4c <main@@Base+0xac7c>
  40f047:	cmp    r14,rbp
  40f04a:	je     411d4c <main@@Base+0xac7c>
  40f050:	mov    r12d,DWORD PTR [rsp+0x1c]
  40f055:	mov    r15,QWORD PTR [rsp+0x10]
  40f05a:	mov    rbp,QWORD PTR [rsp+0x20]
  40f05f:	test   r12d,r12d
  40f062:	mov    r13,QWORD PTR [rsp+0x8]
  40f067:	jne    40f074 <main@@Base+0x7fa4>
  40f069:	test   BYTE PTR [r15+0x10],0x2
  40f06e:	je     40f87e <main@@Base+0x87ae>
  40f074:	mov    rdi,QWORD PTR [r15]
  40f077:	mov    esi,0x14
  40f07c:	mov    edx,0x4
  40f081:	mov    ecx,0x4
  40f086:	call   421f20 <flatcc_builder_table_add@@Base>
  40f08b:	test   rax,rax
  40f08e:	je     411d4c <main@@Base+0xac7c>
  40f094:	mov    DWORD PTR [rax],r12d
  40f097:	jmp    40f87e <main@@Base+0x87ae>
  40f09c:	lea    r14,[r12+0x1]
  40f0a1:	sub    r13,r14
  40f0a4:	cmp    r13,0x2
  40f0a8:	jl     4113bd <main@@Base+0xa2ed>
  40f0ae:	cmp    BYTE PTR [r14],0x20
  40f0b2:	jle    4113a7 <main@@Base+0xa2d7>
  40f0b8:	mov    r15,QWORD PTR [rsp+0x10]
  40f0bd:	mov    rbp,QWORD PTR [rsp+0x20]
  40f0c2:	mov    r13,QWORD PTR [rsp+0x8]
  40f0c7:	jmp    40b7a7 <main@@Base+0x46d7>
  40f0cc:	mov    r12,rax
  40f0cf:	mov    BYTE PTR [rsp+0x1c],0x0
  40f0d4:	mov    r15,QWORD PTR [rsp+0x10]
  40f0d9:	mov    rdi,QWORD PTR [r15]
  40f0dc:	mov    esi,0x1
  40f0e1:	call   41fdc0 <flatcc_builder_extend_vector@@Base>
  40f0e6:	test   rax,rax
  40f0e9:	je     411d42 <main@@Base+0xac72>
  40f0ef:	mov    rbx,rax
  40f0f2:	lea    r14,[rip+0x35027]        # 444120 <__data_start@@Base+0x70>
  40f0f9:	mov    QWORD PTR [rsp+0x30],0x0
  40f102:	mov    DWORD PTR [rsp+0x40],0x0
  40f10a:	mov    BYTE PTR [rsp+0x1c],0x0
  40f10f:	mov    rdx,QWORD PTR [rsp+0x8]
  40f114:	cmp    r12,rdx
  40f117:	je     40f141 <main@@Base+0x8071>
  40f119:	mov    rdi,r15
  40f11c:	mov    rsi,r12
  40f11f:	lea    rcx,[rsp+0x40]
  40f124:	lea    r8,[rsp+0x30]
  40f129:	call   427360 <flatcc_json_parser_integer@@Base>
  40f12e:	cmp    rax,r12
  40f131:	je     40f14d <main@@Base+0x807d>
  40f133:	cmp    DWORD PTR [rsp+0x40],0x0
  40f138:	je     40f159 <main@@Base+0x8089>
  40f13a:	mov    ecx,0x8
  40f13f:	jmp    40f170 <main@@Base+0x80a0>
  40f141:	xor    ecx,ecx
  40f143:	mov    rax,rdx
  40f146:	cmp    r12,rax
  40f149:	jne    40f1b9 <main@@Base+0x80e9>
  40f14b:	jmp    40f187 <main@@Base+0x80b7>
  40f14d:	xor    ecx,ecx
  40f14f:	mov    rax,r12
  40f152:	cmp    r12,rax
  40f155:	jne    40f1b9 <main@@Base+0x80e9>
  40f157:	jmp    40f187 <main@@Base+0x80b7>
  40f159:	mov    rcx,QWORD PTR [rsp+0x30]
  40f15e:	cmp    rcx,0x100
  40f165:	jb     40f277 <main@@Base+0x81a7>
  40f16b:	mov    ecx,0x7
  40f170:	mov    rdi,r15
  40f173:	mov    rsi,rax
  40f176:	mov    rdx,QWORD PTR [rsp+0x8]
  40f17b:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  40f180:	xor    ecx,ecx
  40f182:	cmp    r12,rax
  40f185:	jne    40f1b9 <main@@Base+0x80e9>
  40f187:	mov    rdi,r15
  40f18a:	mov    rsi,r12
  40f18d:	mov    rbp,QWORD PTR [rsp+0x8]
  40f192:	mov    rdx,rbp
  40f195:	mov    rcx,r14
  40f198:	lea    r8,[rsp+0x1c]
  40f19d:	call   413d70 <main@@Base+0xcca0>
  40f1a2:	cmp    rax,r12
  40f1a5:	je     411d6b <main@@Base+0xac9b>
  40f1ab:	cmp    rax,rbp
  40f1ae:	je     411d6b <main@@Base+0xac9b>
  40f1b4:	movzx  ecx,BYTE PTR [rsp+0x1c]
  40f1b9:	mov    BYTE PTR [rbx],cl
  40f1bb:	mov    rbx,QWORD PTR [rsp+0x8]
  40f1c0:	mov    rcx,rbx
  40f1c3:	sub    rcx,rax
  40f1c6:	cmp    rcx,0x2
  40f1ca:	jl     40f1e7 <main@@Base+0x8117>
  40f1cc:	cmp    BYTE PTR [rax],0x20
  40f1cf:	jg     40f1f5 <main@@Base+0x8125>
  40f1d1:	jne    40f1e7 <main@@Base+0x8117>
  40f1d3:	cmp    BYTE PTR [rax+0x1],0x20
  40f1d7:	jle    40f1e7 <main@@Base+0x8117>
  40f1d9:	add    rax,0x1
  40f1dd:	cmp    rax,rbx
  40f1e0:	jne    40f1fe <main@@Base+0x812e>
  40f1e2:	jmp    410984 <main@@Base+0x98b4>
  40f1e7:	mov    rdi,r15
  40f1ea:	mov    rsi,rax
  40f1ed:	mov    rdx,rbx
  40f1f0:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40f1f5:	cmp    rax,rbx
  40f1f8:	je     410984 <main@@Base+0x98b4>
  40f1fe:	movzx  ecx,BYTE PTR [rax]
  40f201:	cmp    cl,0x2c
  40f204:	jne    410a52 <main@@Base+0x9982>
  40f20a:	lea    r12,[rax+0x1]
  40f20e:	mov    rcx,rbx
  40f211:	sub    rcx,r12
  40f214:	cmp    rcx,0x2
  40f218:	jl     40f22f <main@@Base+0x815f>
  40f21a:	cmp    BYTE PTR [r12],0x20
  40f21f:	jg     40f240 <main@@Base+0x8170>
  40f221:	jne    40f22f <main@@Base+0x815f>
  40f223:	cmp    BYTE PTR [rax+0x2],0x20
  40f227:	jle    40f22f <main@@Base+0x815f>
  40f229:	add    rax,0x2
  40f22d:	jmp    40f23d <main@@Base+0x816d>
  40f22f:	mov    rdi,r15
  40f232:	mov    rsi,r12
  40f235:	mov    rdx,rbx
  40f238:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40f23d:	mov    r12,rax
  40f240:	cmp    r12,rbx
  40f243:	je     410a90 <main@@Base+0x99c0>
  40f249:	cmp    BYTE PTR [r12],0x5d
  40f24e:	je     411306 <main@@Base+0xa236>
  40f254:	mov    BYTE PTR [rsp+0x1c],0x0
  40f259:	mov    rdi,QWORD PTR [r15]
  40f25c:	mov    esi,0x1
  40f261:	call   41fdc0 <flatcc_builder_extend_vector@@Base>
  40f266:	mov    rbx,rax
  40f269:	test   rax,rax
  40f26c:	jne    40f0f9 <main@@Base+0x8029>
  40f272:	jmp    411d42 <main@@Base+0xac72>
  40f277:	mov    BYTE PTR [rsp+0x1c],cl
  40f27b:	cmp    r12,rax
  40f27e:	jne    40f1b9 <main@@Base+0x80e9>
  40f284:	jmp    40f187 <main@@Base+0x80b7>
  40f289:	mov    rdi,QWORD PTR [rsp+0x10]
  40f28e:	mov    rsi,rbx
  40f291:	mov    rdx,QWORD PTR [rsp+0x8]
  40f296:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40f29b:	mov    rbx,rax
  40f29e:	movabs r12,0x7465737400000000
  40f2a8:	cmp    r15,rbx
  40f2ab:	je     40fb4d <main@@Base+0x8a7d>
  40f2b1:	mov    QWORD PTR [rsp+0x30],0x0
  40f2ba:	mov    DWORD PTR [rsp+0x40],0x0
  40f2c2:	mov    DWORD PTR [rsp+0x1c],0x0
  40f2ca:	xor    r12d,r12d
  40f2cd:	mov    rdx,QWORD PTR [rsp+0x8]
  40f2d2:	cmp    rbx,rdx
  40f2d5:	je     40f30f <main@@Base+0x823f>
  40f2d7:	mov    rdi,QWORD PTR [rsp+0x10]
  40f2dc:	mov    rsi,rbx
  40f2df:	lea    rcx,[rsp+0x40]
  40f2e4:	lea    r8,[rsp+0x30]
  40f2e9:	call   427360 <flatcc_json_parser_integer@@Base>
  40f2ee:	cmp    rax,rbx
  40f2f1:	je     40f6d6 <main@@Base+0x8606>
  40f2f7:	mov    r14,rax
  40f2fa:	cmp    DWORD PTR [rsp+0x40],0x0
  40f2ff:	je     41098c <main@@Base+0x98bc>
  40f305:	mov    ecx,0x8
  40f30a:	jmp    4109a3 <main@@Base+0x98d3>
  40f30f:	mov    r14,rdx
  40f312:	jmp    4116ad <main@@Base+0xa5dd>
  40f317:	mov    rdi,QWORD PTR [rsp+0x10]
  40f31c:	mov    rsi,rbx
  40f31f:	mov    rdx,QWORD PTR [rsp+0x8]
  40f324:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40f329:	mov    rbx,rax
  40f32c:	movabs r12,0x7465737400000000
  40f336:	cmp    r15,rbx
  40f339:	je     40fb4d <main@@Base+0x8a7d>
  40f33f:	mov    QWORD PTR [rsp+0x30],0x0
  40f348:	mov    DWORD PTR [rsp+0x1c],0x0
  40f350:	mov    QWORD PTR [rsp+0x40],0x0
  40f359:	mov    rdx,QWORD PTR [rsp+0x8]
  40f35e:	cmp    rbx,rdx
  40f361:	je     40f3bf <main@@Base+0x82ef>
  40f363:	mov    rdi,QWORD PTR [rsp+0x10]
  40f368:	mov    rsi,rbx
  40f36b:	lea    rcx,[rsp+0x1c]
  40f370:	lea    r8,[rsp+0x30]
  40f375:	call   427360 <flatcc_json_parser_integer@@Base>
  40f37a:	cmp    rax,rbx
  40f37d:	je     40f6de <main@@Base+0x860e>
  40f383:	mov    r14,rax
  40f386:	cmp    DWORD PTR [rsp+0x1c],0x0
  40f38b:	je     4109c9 <main@@Base+0x98f9>
  40f391:	mov    ecx,0x8
  40f396:	mov    r15,QWORD PTR [rsp+0x10]
  40f39b:	mov    rdi,r15
  40f39e:	mov    rsi,r14
  40f3a1:	mov    rdx,QWORD PTR [rsp+0x8]
  40f3a6:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  40f3ab:	mov    r14,rax
  40f3ae:	xor    r12d,r12d
  40f3b1:	cmp    rbx,r14
  40f3b4:	jne    410a1a <main@@Base+0x994a>
  40f3ba:	jmp    4109dd <main@@Base+0x990d>
  40f3bf:	xor    r12d,r12d
  40f3c2:	mov    r14,rdx
  40f3c5:	jmp    4109d3 <main@@Base+0x9903>
  40f3ca:	mov    rdi,QWORD PTR [rsp+0x10]
  40f3cf:	mov    rsi,rax
  40f3d2:	mov    rdx,QWORD PTR [rsp+0x8]
  40f3d7:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40f3dc:	mov    rcx,QWORD PTR [rsp+0x8]
  40f3e1:	mov    rsi,rcx
  40f3e4:	cmp    rax,rcx
  40f3e7:	je     410aa6 <main@@Base+0x99d6>
  40f3ed:	cmp    BYTE PTR [rax],0x7d
  40f3f0:	jne    410aa3 <main@@Base+0x99d3>
  40f3f6:	lea    r14,[rax+0x1]
  40f3fa:	mov    rcx,QWORD PTR [rsp+0x8]
  40f3ff:	sub    rcx,r14
  40f402:	cmp    rcx,0x2
  40f406:	jl     411c14 <main@@Base+0xab44>
  40f40c:	cmp    BYTE PTR [r14],0x20
  40f410:	jg     4118e2 <main@@Base+0xa812>
  40f416:	jne    411c14 <main@@Base+0xab44>
  40f41c:	cmp    BYTE PTR [rax+0x2],0x20
  40f420:	jle    411c14 <main@@Base+0xab44>
  40f426:	add    rax,0x2
  40f42a:	mov    r14,rax
  40f42d:	jmp    4118e2 <main@@Base+0xa812>
  40f432:	mov    rdi,QWORD PTR [rsp+0x10]
  40f437:	mov    rsi,rax
  40f43a:	mov    rdx,QWORD PTR [rsp+0x8]
  40f43f:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40f444:	mov    rcx,QWORD PTR [rsp+0x8]
  40f449:	mov    rsi,rcx
  40f44c:	cmp    rax,rcx
  40f44f:	je     40f45d <main@@Base+0x838d>
  40f451:	cmp    BYTE PTR [rax],0x7d
  40f454:	je     41173b <main@@Base+0xa66b>
  40f45a:	mov    rsi,rax
  40f45d:	mov    r15,QWORD PTR [rsp+0x10]
  40f462:	mov    r13,QWORD PTR [rsp+0x8]
  40f467:	mov    rax,r13
  40f46a:	cmp    rsi,r13
  40f46d:	je     40f4ab <main@@Base+0x83db>
  40f46f:	movzx  eax,BYTE PTR [rsi]
  40f472:	cmp    al,0x2e
  40f474:	je     40f48b <main@@Base+0x83bb>
  40f476:	cmp    al,0x22
  40f478:	jne    40f49d <main@@Base+0x83cd>
  40f47a:	add    rsi,0x1
  40f47e:	mov    rax,QWORD PTR [rsp+0x28]
  40f483:	mov    DWORD PTR [rax],0x0
  40f489:	jmp    40f4a8 <main@@Base+0x83d8>
  40f48b:	mov    ecx,0x5
  40f490:	mov    rdi,r15
  40f493:	mov    rdx,r13
  40f496:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  40f49b:	jmp    40f4ab <main@@Base+0x83db>
  40f49d:	mov    rax,QWORD PTR [rsp+0x28]
  40f4a2:	mov    DWORD PTR [rax],0x1
  40f4a8:	mov    rax,rsi
  40f4ab:	mov    rdi,r15
  40f4ae:	mov    rsi,rax
  40f4b1:	mov    rdx,r13
  40f4b4:	call   425cc0 <flatcc_json_parser_unmatched_symbol@@Base>
  40f4b9:	mov    rcx,r13
  40f4bc:	sub    rcx,rax
  40f4bf:	cmp    rcx,0x2
  40f4c3:	jl     40f4e0 <main@@Base+0x8410>
  40f4c5:	cmp    BYTE PTR [rax],0x20
  40f4c8:	jg     40f4ee <main@@Base+0x841e>
  40f4ca:	jne    40f4e0 <main@@Base+0x8410>
  40f4cc:	cmp    BYTE PTR [rax+0x1],0x20
  40f4d0:	jle    40f4e0 <main@@Base+0x8410>
  40f4d2:	add    rax,0x1
  40f4d6:	cmp    rax,r13
  40f4d9:	jne    40f4f7 <main@@Base+0x8427>
  40f4db:	jmp    41169e <main@@Base+0xa5ce>
  40f4e0:	mov    rdi,r15
  40f4e3:	mov    rsi,rax
  40f4e6:	mov    rdx,r13
  40f4e9:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40f4ee:	cmp    rax,r13
  40f4f1:	je     41169e <main@@Base+0xa5ce>
  40f4f7:	movzx  ecx,BYTE PTR [rax]
  40f4fa:	cmp    cl,0x2c
  40f4fd:	jne    411732 <main@@Base+0xa662>
  40f503:	lea    rsi,[rax+0x1]
  40f507:	mov    rcx,r13
  40f50a:	sub    rcx,rsi
  40f50d:	cmp    rcx,0x2
  40f511:	jl     40f526 <main@@Base+0x8456>
  40f513:	cmp    BYTE PTR [rsi],0x20
  40f516:	jg     40f534 <main@@Base+0x8464>
  40f518:	jne    40f526 <main@@Base+0x8456>
  40f51a:	cmp    BYTE PTR [rax+0x2],0x20
  40f51e:	jle    40f526 <main@@Base+0x8456>
  40f520:	add    rax,0x2
  40f524:	jmp    40f531 <main@@Base+0x8461>
  40f526:	mov    rdi,r15
  40f529:	mov    rdx,r13
  40f52c:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40f531:	mov    rsi,rax
  40f534:	cmp    rsi,r13
  40f537:	je     4117fd <main@@Base+0xa72d>
  40f53d:	cmp    BYTE PTR [rsi],0x7d
  40f540:	jne    40f467 <main@@Base+0x8397>
  40f546:	lea    r14,[rsi+0x1]
  40f54a:	sub    r13,r14
  40f54d:	cmp    r13,0x2
  40f551:	jl     411771 <main@@Base+0xa6a1>
  40f557:	cmp    BYTE PTR [r14],0x20
  40f55b:	jg     411762 <main@@Base+0xa692>
  40f561:	jne    411771 <main@@Base+0xa6a1>
  40f567:	cmp    BYTE PTR [rsi+0x2],0x20
  40f56b:	jle    411771 <main@@Base+0xa6a1>
  40f571:	add    rsi,0x2
  40f575:	mov    r14,rsi
  40f578:	jmp    411762 <main@@Base+0xa692>
  40f57d:	mov    r15,QWORD PTR [rsp+0x10]
  40f582:	mov    rdi,r15
  40f585:	mov    rsi,r14
  40f588:	mov    r13,QWORD PTR [rsp+0x8]
  40f58d:	mov    rdx,r13
  40f590:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40f595:	jmp    40d8dd <main@@Base+0x680d>
  40f59a:	mov    r13,QWORD PTR [rsp+0x8]
  40f59f:	jne    40f5b9 <main@@Base+0x84e9>
  40f5a1:	cmp    BYTE PTR [r14+0x2],0x20
  40f5a6:	jle    40f5b9 <main@@Base+0x84e9>
  40f5a8:	add    r14,0x2
  40f5ac:	mov    r12,r14
  40f5af:	cmp    r15,r12
  40f5b2:	jne    40f5d5 <main@@Base+0x8505>
  40f5b4:	jmp    40f863 <main@@Base+0x8793>
  40f5b9:	mov    rdi,QWORD PTR [rsp+0x10]
  40f5be:	mov    rsi,r12
  40f5c1:	mov    rdx,r13
  40f5c4:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40f5c9:	mov    r12,rax
  40f5cc:	cmp    r15,r12
  40f5cf:	je     40f863 <main@@Base+0x8793>
  40f5d5:	mov    r15,QWORD PTR [rsp+0x10]
  40f5da:	mov    rdi,QWORD PTR [r15]
  40f5dd:	mov    esi,0x8
  40f5e2:	mov    edx,0x8
  40f5e7:	mov    ecx,0x1fffffff
  40f5ec:	call   420730 <flatcc_builder_start_vector@@Base>
  40f5f1:	test   eax,eax
  40f5f3:	jne    407c81 <main@@Base+0xbb1>
  40f5f9:	cmp    r12,r13
  40f5fc:	je     40f62b <main@@Base+0x855b>
  40f5fe:	cmp    BYTE PTR [r12],0x5b
  40f603:	jne    40f62b <main@@Base+0x855b>
  40f605:	lea    rax,[r12+0x1]
  40f60a:	sub    r13,rax
  40f60d:	cmp    r13,0x2
  40f611:	jl     40f671 <main@@Base+0x85a1>
  40f613:	cmp    BYTE PTR [rax],0x20
  40f616:	jg     40f683 <main@@Base+0x85b3>
  40f618:	jne    40f671 <main@@Base+0x85a1>
  40f61a:	cmp    BYTE PTR [r12+0x2],0x20
  40f620:	jle    40f671 <main@@Base+0x85a1>
  40f622:	add    r12,0x2
  40f626:	mov    rax,r12
  40f629:	jmp    40f683 <main@@Base+0x85b3>
  40f62b:	mov    ecx,0x16
  40f630:	mov    rdi,r15
  40f633:	mov    rsi,r12
  40f636:	mov    rdx,r13
  40f639:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  40f63e:	mov    r14,rax
  40f641:	mov    rdi,QWORD PTR [r15]
  40f644:	call   4218c0 <flatcc_builder_end_vector@@Base>
  40f649:	mov    DWORD PTR [rsp+0x3c],eax
  40f64d:	test   eax,eax
  40f64f:	mov    rbp,QWORD PTR [rsp+0x20]
  40f654:	movabs r12,0x7465737400000000
  40f65e:	je     411d63 <main@@Base+0xac93>
  40f664:	mov    rdi,QWORD PTR [r15]
  40f667:	mov    esi,0x20
  40f66c:	jmp    40b37b <main@@Base+0x42ab>
  40f671:	mov    rdi,QWORD PTR [rsp+0x10]
  40f676:	mov    rsi,rax
  40f679:	mov    rdx,QWORD PTR [rsp+0x8]
  40f67e:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40f683:	mov    rcx,QWORD PTR [rsp+0x8]
  40f688:	mov    r12,rcx
  40f68b:	cmp    rax,rcx
  40f68e:	je     410596 <main@@Base+0x94c6>
  40f694:	cmp    BYTE PTR [rax],0x5d
  40f697:	jne    410593 <main@@Base+0x94c3>
  40f69d:	lea    r14,[rax+0x1]
  40f6a1:	mov    rcx,QWORD PTR [rsp+0x8]
  40f6a6:	sub    rcx,r14
  40f6a9:	cmp    rcx,0x2
  40f6ad:	jl     411350 <main@@Base+0xa280>
  40f6b3:	cmp    BYTE PTR [r14],0x20
  40f6b7:	jg     411a08 <main@@Base+0xa938>
  40f6bd:	jne    411350 <main@@Base+0xa280>
  40f6c3:	cmp    BYTE PTR [rax+0x2],0x20
  40f6c7:	jle    411350 <main@@Base+0xa280>
  40f6cd:	add    rax,0x2
  40f6d1:	jmp    411a05 <main@@Base+0xa935>
  40f6d6:	mov    r14,rbx
  40f6d9:	jmp    4116ad <main@@Base+0xa5dd>
  40f6de:	xor    r12d,r12d
  40f6e1:	mov    r14,rbx
  40f6e4:	jmp    4109d3 <main@@Base+0x9903>
  40f6e9:	mov    r15,QWORD PTR [rsp+0x10]
  40f6ee:	mov    rbp,QWORD PTR [rsp+0x20]
  40f6f3:	mov    r13,QWORD PTR [rsp+0x8]
  40f6f8:	movabs r12,0x7465737400000000
  40f702:	je     40b3e1 <main@@Base+0x4311>
  40f708:	mov    rdi,r15
  40f70b:	mov    rsi,r14
  40f70e:	mov    rdx,r13
  40f711:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40f716:	mov    r14,rax
  40f719:	jmp    40b35f <main@@Base+0x428f>
  40f71e:	mov    r13,QWORD PTR [rsp+0x8]
  40f723:	jne    40f73d <main@@Base+0x866d>
  40f725:	cmp    BYTE PTR [r14+0x2],0x20
  40f72a:	jle    40f73d <main@@Base+0x866d>
  40f72c:	add    r14,0x2
  40f730:	mov    r12,r14
  40f733:	cmp    r15,r12
  40f736:	jne    40f759 <main@@Base+0x8689>
  40f738:	jmp    40f863 <main@@Base+0x8793>
  40f73d:	mov    rdi,QWORD PTR [rsp+0x10]
  40f742:	mov    rsi,r12
  40f745:	mov    rdx,r13
  40f748:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40f74d:	mov    r12,rax
  40f750:	cmp    r15,r12
  40f753:	je     40f863 <main@@Base+0x8793>
  40f759:	cmp    r12,r13
  40f75c:	je     40f7d2 <main@@Base+0x8702>
  40f75e:	cmp    BYTE PTR [r12],0x5b
  40f763:	jne    40f7d2 <main@@Base+0x8702>
  40f765:	mov    rax,QWORD PTR [rsp+0x10]
  40f76a:	mov    rdi,QWORD PTR [rax]
  40f76d:	mov    esi,0x1
  40f772:	mov    edx,0x1
  40f777:	mov    ecx,0xffffffff
  40f77c:	call   420730 <flatcc_builder_start_vector@@Base>
  40f781:	test   eax,eax
  40f783:	jne    411d4f <main@@Base+0xac7f>
  40f789:	cmp    BYTE PTR [r12],0x5b
  40f78e:	jne    40f821 <main@@Base+0x8751>
  40f794:	lea    rax,[r12+0x1]
  40f799:	mov    rcx,QWORD PTR [rsp+0x8]
  40f79e:	sub    rcx,rax
  40f7a1:	cmp    rcx,0x2
  40f7a5:	jl     40fc57 <main@@Base+0x8b87>
  40f7ab:	cmp    BYTE PTR [rax],0x20
  40f7ae:	jg     40fc69 <main@@Base+0x8b99>
  40f7b4:	jne    40fc57 <main@@Base+0x8b87>
  40f7ba:	cmp    BYTE PTR [r12+0x2],0x20
  40f7c0:	jle    40fc57 <main@@Base+0x8b87>
  40f7c6:	add    r12,0x2
  40f7ca:	mov    rax,r12
  40f7cd:	jmp    40fc69 <main@@Base+0x8b99>
  40f7d2:	mov    r15,QWORD PTR [rsp+0x10]
  40f7d7:	mov    rdi,QWORD PTR [r15]
  40f7da:	xor    esi,esi
  40f7dc:	xor    edx,edx
  40f7de:	xor    ecx,ecx
  40f7e0:	call   41f8d0 <flatcc_builder_start_buffer@@Base>
  40f7e5:	test   eax,eax
  40f7e7:	jne    407c81 <main@@Base+0xbb1>
  40f7ed:	mov    rdi,r15
  40f7f0:	mov    rsi,r12
  40f7f3:	mov    rdx,r13
  40f7f6:	lea    rcx,[rsp+0x3c]
  40f7fb:	call   407c50 <main@@Base+0xb80>
  40f800:	mov    r14,rax
  40f803:	mov    esi,DWORD PTR [rsp+0x3c]
  40f807:	test   esi,esi
  40f809:	je     411d63 <main@@Base+0xac93>
  40f80f:	mov    rdi,QWORD PTR [r15]
  40f812:	call   41faf0 <flatcc_builder_end_buffer@@Base>
  40f817:	mov    rbp,QWORD PTR [rsp+0x20]
  40f81c:	jmp    411b0f <main@@Base+0xaa3f>
  40f821:	mov    ecx,0x16
  40f826:	mov    rdi,QWORD PTR [rsp+0x10]
  40f82b:	mov    rsi,r12
  40f82e:	mov    rdx,QWORD PTR [rsp+0x8]
  40f833:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  40f838:	jmp    411af5 <main@@Base+0xaa25>
  40f83d:	mov    r13,QWORD PTR [rsp+0x8]
  40f842:	jne    40f93a <main@@Base+0x886a>
  40f848:	cmp    BYTE PTR [r14+0x2],0x20
  40f84d:	jle    40f93a <main@@Base+0x886a>
  40f853:	add    r14,0x2
  40f857:	mov    r12,r14
  40f85a:	cmp    r15,r12
  40f85d:	jne    40f956 <main@@Base+0x8886>
  40f863:	mov    rdi,QWORD PTR [rsp+0x10]
  40f868:	mov    rsi,r15
  40f86b:	mov    r15,rdi
  40f86e:	mov    rdx,r13
  40f871:	call   425cc0 <flatcc_json_parser_unmatched_symbol@@Base>
  40f876:	mov    r14,rax
  40f879:	mov    rbp,QWORD PTR [rsp+0x20]
  40f87e:	movabs r12,0x7465737400000000
  40f888:	nop    DWORD PTR [rax+rax*1+0x0]
  40f890:	mov    rax,r13
  40f893:	sub    rax,r14
  40f896:	cmp    rax,0x2
  40f89a:	jl     40f8c0 <main@@Base+0x87f0>
  40f89c:	cmp    BYTE PTR [r14],0x20
  40f8a0:	jg     40f8d1 <main@@Base+0x8801>
  40f8a2:	jne    40f8c0 <main@@Base+0x87f0>
  40f8a4:	cmp    BYTE PTR [r14+0x1],0x20
  40f8a9:	jle    40f8c0 <main@@Base+0x87f0>
  40f8ab:	add    r14,0x1
  40f8af:	cmp    r14,r13
  40f8b2:	jne    40f8da <main@@Base+0x880a>
  40f8b4:	jmp    411c44 <main@@Base+0xab74>
  40f8b9:	nop    DWORD PTR [rax+0x0]
  40f8c0:	mov    rdi,r15
  40f8c3:	mov    rsi,r14
  40f8c6:	mov    rdx,r13
  40f8c9:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40f8ce:	mov    r14,rax
  40f8d1:	cmp    r14,r13
  40f8d4:	je     411c44 <main@@Base+0xab74>
  40f8da:	mov    al,BYTE PTR [r14]
  40f8dd:	cmp    al,0x2c
  40f8df:	jne    411c4c <main@@Base+0xab7c>
  40f8e5:	lea    rsi,[r14+0x1]
  40f8e9:	mov    rax,r13
  40f8ec:	sub    rax,rsi
  40f8ef:	cmp    rax,0x2
  40f8f3:	jl     40f910 <main@@Base+0x8840>
  40f8f5:	cmp    BYTE PTR [rsi],0x20
  40f8f8:	jg     40f91e <main@@Base+0x884e>
  40f8fa:	jne    40f910 <main@@Base+0x8840>
  40f8fc:	cmp    BYTE PTR [r14+0x2],0x20
  40f901:	jle    40f910 <main@@Base+0x8840>
  40f903:	add    r14,0x2
  40f907:	mov    rsi,r14
  40f90a:	jmp    40f91e <main@@Base+0x884e>
  40f90c:	nop    DWORD PTR [rax+0x0]
  40f910:	mov    rdi,r15
  40f913:	mov    rdx,r13
  40f916:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40f91b:	mov    rsi,rax
  40f91e:	cmp    rsi,r13
  40f921:	mov    rbx,QWORD PTR [rsp+0x48]
  40f926:	je     411c90 <main@@Base+0xabc0>
  40f92c:	cmp    BYTE PTR [rsi],0x7d
  40f92f:	jne    407e20 <main@@Base+0xd50>
  40f935:	jmp    411ca5 <main@@Base+0xabd5>
  40f93a:	mov    rdi,QWORD PTR [rsp+0x10]
  40f93f:	mov    rsi,r12
  40f942:	mov    rdx,r13
  40f945:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40f94a:	mov    r12,rax
  40f94d:	cmp    r15,r12
  40f950:	je     40f863 <main@@Base+0x8793>
  40f956:	mov    r15,QWORD PTR [rsp+0x10]
  40f95b:	mov    rdi,QWORD PTR [r15]
  40f95e:	mov    esi,0x8
  40f963:	mov    edx,0x8
  40f968:	mov    ecx,0x1fffffff
  40f96d:	call   420730 <flatcc_builder_start_vector@@Base>
  40f972:	test   eax,eax
  40f974:	jne    407c81 <main@@Base+0xbb1>
  40f97a:	cmp    r12,r13
  40f97d:	je     40f9ac <main@@Base+0x88dc>
  40f97f:	cmp    BYTE PTR [r12],0x5b
  40f984:	jne    40f9ac <main@@Base+0x88dc>
  40f986:	lea    rax,[r12+0x1]
  40f98b:	sub    r13,rax
  40f98e:	cmp    r13,0x2
  40f992:	jl     40f9c7 <main@@Base+0x88f7>
  40f994:	cmp    BYTE PTR [rax],0x20
  40f997:	jg     40f9d9 <main@@Base+0x8909>
  40f999:	jne    40f9c7 <main@@Base+0x88f7>
  40f99b:	cmp    BYTE PTR [r12+0x2],0x20
  40f9a1:	jle    40f9c7 <main@@Base+0x88f7>
  40f9a3:	add    r12,0x2
  40f9a7:	mov    rax,r12
  40f9aa:	jmp    40f9d9 <main@@Base+0x8909>
  40f9ac:	mov    ecx,0x16
  40f9b1:	mov    rdi,r15
  40f9b4:	mov    rsi,r12
  40f9b7:	mov    rdx,r13
  40f9ba:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  40f9bf:	mov    r14,rax
  40f9c2:	jmp    411a56 <main@@Base+0xa986>
  40f9c7:	mov    rdi,QWORD PTR [rsp+0x10]
  40f9cc:	mov    rsi,rax
  40f9cf:	mov    rdx,QWORD PTR [rsp+0x8]
  40f9d4:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40f9d9:	mov    rcx,QWORD PTR [rsp+0x8]
  40f9de:	mov    r13,rcx
  40f9e1:	cmp    rax,rcx
  40f9e4:	je     410779 <main@@Base+0x96a9>
  40f9ea:	cmp    BYTE PTR [rax],0x5d
  40f9ed:	jne    410776 <main@@Base+0x96a6>
  40f9f3:	lea    r14,[rax+0x1]
  40f9f7:	mov    rcx,QWORD PTR [rsp+0x8]
  40f9fc:	sub    rcx,r14
  40f9ff:	cmp    rcx,0x2
  40fa03:	jl     41136d <main@@Base+0xa29d>
  40fa09:	cmp    BYTE PTR [r14],0x20
  40fa0d:	jg     411a4c <main@@Base+0xa97c>
  40fa13:	jne    41136d <main@@Base+0xa29d>
  40fa19:	cmp    BYTE PTR [rax+0x2],0x20
  40fa1d:	jle    41136d <main@@Base+0xa29d>
  40fa23:	add    rax,0x2
  40fa27:	jmp    411a49 <main@@Base+0xa979>
  40fa2c:	mov    r15,QWORD PTR [rsp+0x10]
  40fa31:	mov    r13,QWORD PTR [rsp+0x8]
  40fa36:	jne    40fa47 <main@@Base+0x8977>
  40fa38:	cmp    BYTE PTR [rax+0x2],0x20
  40fa3c:	jle    40fa47 <main@@Base+0x8977>
  40fa3e:	add    rax,0x2
  40fa42:	jmp    40f876 <main@@Base+0x87a6>
  40fa47:	mov    rdi,r15
  40fa4a:	mov    rsi,r14
  40fa4d:	mov    rdx,r13
  40fa50:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40fa55:	jmp    40f876 <main@@Base+0x87a6>
  40fa5a:	mov    r14,r13
  40fa5d:	jmp    40d3c1 <main@@Base+0x62f1>
  40fa62:	cmp    al,0x5d
  40fa64:	jne    41138d <main@@Base+0xa2bd>
  40fa6a:	lea    r14,[rdx+0x1]
  40fa6e:	mov    rax,QWORD PTR [rsp+0x8]
  40fa73:	sub    rax,r14
  40fa76:	cmp    rax,0x2
  40fa7a:	jl     411983 <main@@Base+0xa8b3>
  40fa80:	cmp    BYTE PTR [r14],0x20
  40fa84:	jg     40fc43 <main@@Base+0x8b73>
  40fa8a:	jne    411983 <main@@Base+0xa8b3>
  40fa90:	cmp    BYTE PTR [rdx+0x2],0x20
  40fa94:	jle    411983 <main@@Base+0xa8b3>
  40fa9a:	add    rdx,0x2
  40fa9e:	mov    r14,rdx
  40faa1:	jmp    40fc43 <main@@Base+0x8b73>
  40faa6:	mov    r12,r14
  40faa9:	mov    r15,QWORD PTR [rsp+0x10]
  40faae:	mov    r13,QWORD PTR [rsp+0x8]
  40fab3:	mov    ecx,0x21
  40fab8:	mov    rdi,r15
  40fabb:	mov    rsi,r12
  40fabe:	mov    rdx,r13
  40fac1:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  40fac6:	mov    r14,rax
  40fac9:	cmp    DWORD PTR [rsp+0x3c],0x0
  40face:	mov    r12,rax
  40fad1:	je     407c81 <main@@Base+0xbb1>
  40fad7:	mov    rdi,QWORD PTR [r15]
  40fada:	mov    esi,0xe
  40fadf:	call   421dc0 <flatcc_builder_table_add_offset@@Base>
  40fae4:	test   rax,rax
  40fae7:	mov    rbp,QWORD PTR [rsp+0x20]
  40faec:	movabs r12,0x7465737400000000
  40faf6:	jne    40b389 <main@@Base+0x42b9>
  40fafc:	jmp    411d63 <main@@Base+0xac93>
  40fb01:	mov    ecx,0x9
  40fb06:	mov    r15,QWORD PTR [rsp+0x10]
  40fb0b:	mov    rdi,r15
  40fb0e:	mov    rsi,rax
  40fb11:	mov    r13,QWORD PTR [rsp+0x8]
  40fb16:	jmp    40b797 <main@@Base+0x46c7>
  40fb1b:	mov    ecx,0x9
  40fb20:	mov    rdi,r15
  40fb23:	mov    rsi,r13
  40fb26:	jmp    40d3b6 <main@@Base+0x62e6>
  40fb2b:	movabs r12,0x7465737400000000
  40fb35:	jne    40fb5d <main@@Base+0x8a8d>
  40fb37:	mov    rcx,r14
  40fb3a:	cmp    BYTE PTR [r14+0x2],0x20
  40fb3f:	jle    40fb5d <main@@Base+0x8a8d>
  40fb41:	mov    rbx,rcx
  40fb44:	add    rbx,0x2
  40fb48:	cmp    r15,rbx
  40fb4b:	jne    40fb77 <main@@Base+0x8aa7>
  40fb4d:	mov    rdi,QWORD PTR [rsp+0x10]
  40fb52:	mov    rsi,r15
  40fb55:	mov    r15,rdi
  40fb58:	jmp    40b255 <main@@Base+0x4185>
  40fb5d:	mov    rdi,QWORD PTR [rsp+0x10]
  40fb62:	mov    rsi,rbx
  40fb65:	mov    rdx,QWORD PTR [rsp+0x8]
  40fb6a:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40fb6f:	mov    rbx,rax
  40fb72:	cmp    r15,rbx
  40fb75:	je     40fb4d <main@@Base+0x8a7d>
  40fb77:	mov    QWORD PTR [rsp+0x30],0x0
  40fb80:	mov    DWORD PTR [rsp+0x1c],0x0
  40fb88:	mov    QWORD PTR [rsp+0x40],0x0
  40fb91:	mov    rdx,QWORD PTR [rsp+0x8]
  40fb96:	cmp    rbx,rdx
  40fb99:	je     40fbe3 <main@@Base+0x8b13>
  40fb9b:	mov    r15,QWORD PTR [rsp+0x10]
  40fba0:	mov    rdi,r15
  40fba3:	mov    rsi,rbx
  40fba6:	lea    rcx,[rsp+0x1c]
  40fbab:	lea    r8,[rsp+0x30]
  40fbb0:	call   427360 <flatcc_json_parser_integer@@Base>
  40fbb5:	cmp    rax,rbx
  40fbb8:	je     40fbee <main@@Base+0x8b1e>
  40fbba:	mov    r14,rax
  40fbbd:	mov    r12,QWORD PTR [rsp+0x30]
  40fbc2:	cmp    DWORD PTR [rsp+0x1c],0x0
  40fbc7:	je     40fbf9 <main@@Base+0x8b29>
  40fbc9:	movabs rax,0x8000000000000000
  40fbd3:	cmp    r12,rax
  40fbd6:	jbe    41034e <main@@Base+0x927e>
  40fbdc:	mov    ecx,0x8
  40fbe1:	jmp    40fc07 <main@@Base+0x8b37>
  40fbe3:	xor    r12d,r12d
  40fbe6:	mov    r14,rdx
  40fbe9:	jmp    410356 <main@@Base+0x9286>
  40fbee:	xor    r12d,r12d
  40fbf1:	mov    r14,rbx
  40fbf4:	jmp    41035b <main@@Base+0x928b>
  40fbf9:	test   r12,r12
  40fbfc:	jns    410351 <main@@Base+0x9281>
  40fc02:	mov    ecx,0x7
  40fc07:	mov    r15,QWORD PTR [rsp+0x10]
  40fc0c:	mov    rdi,r15
  40fc0f:	mov    rsi,r14
  40fc12:	mov    rdx,QWORD PTR [rsp+0x8]
  40fc17:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  40fc1c:	mov    r14,rax
  40fc1f:	xor    r12d,r12d
  40fc22:	jmp    41035b <main@@Base+0x928b>
  40fc27:	lea    r14,[r12+0x1]
  40fc2c:	sub    r13,r14
  40fc2f:	cmp    r13,0x2
  40fc33:	jl     411983 <main@@Base+0xa8b3>
  40fc39:	cmp    BYTE PTR [r14],0x20
  40fc3d:	jle    41196d <main@@Base+0xa89d>
  40fc43:	mov    r15,QWORD PTR [rsp+0x10]
  40fc48:	mov    rbp,QWORD PTR [rsp+0x20]
  40fc4d:	mov    r13,QWORD PTR [rsp+0x8]
  40fc52:	jmp    40d3c6 <main@@Base+0x62f6>
  40fc57:	mov    rdi,QWORD PTR [rsp+0x10]
  40fc5c:	mov    rsi,rax
  40fc5f:	mov    rdx,QWORD PTR [rsp+0x8]
  40fc64:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40fc69:	mov    rcx,QWORD PTR [rsp+0x8]
  40fc6e:	mov    r12,rcx
  40fc71:	cmp    rax,rcx
  40fc74:	je     41141d <main@@Base+0xa34d>
  40fc7a:	cmp    BYTE PTR [rax],0x5d
  40fc7d:	jne    41141a <main@@Base+0xa34a>
  40fc83:	lea    r14,[rax+0x1]
  40fc87:	mov    rcx,QWORD PTR [rsp+0x8]
  40fc8c:	sub    rcx,r14
  40fc8f:	cmp    rcx,0x2
  40fc93:	jl     411ae3 <main@@Base+0xaa13>
  40fc99:	cmp    BYTE PTR [r14],0x20
  40fc9d:	jg     411af8 <main@@Base+0xaa28>
  40fca3:	jne    411ae3 <main@@Base+0xaa13>
  40fca9:	cmp    BYTE PTR [rax+0x2],0x20
  40fcad:	jle    411ae3 <main@@Base+0xaa13>
  40fcb3:	add    rax,0x2
  40fcb7:	jmp    411af5 <main@@Base+0xaa25>
  40fcbc:	mov    rsi,rax
  40fcbf:	mov    r13,QWORD PTR [rsp+0x8]
  40fcc4:	mov    r15,r13
  40fcc7:	cmp    rsi,r13
  40fcca:	je     40fd0d <main@@Base+0x8c3d>
  40fccc:	movzx  eax,BYTE PTR [rsi]
  40fccf:	cmp    al,0x2e
  40fcd1:	je     40fce8 <main@@Base+0x8c18>
  40fcd3:	cmp    al,0x22
  40fcd5:	jne    40fcff <main@@Base+0x8c2f>
  40fcd7:	add    rsi,0x1
  40fcdb:	mov    rax,QWORD PTR [rsp+0x28]
  40fce0:	mov    DWORD PTR [rax],0x0
  40fce6:	jmp    40fd0a <main@@Base+0x8c3a>
  40fce8:	mov    ecx,0x5
  40fced:	mov    rdi,QWORD PTR [rsp+0x10]
  40fcf2:	mov    rdx,r13
  40fcf5:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  40fcfa:	mov    r15,rax
  40fcfd:	jmp    40fd0d <main@@Base+0x8c3d>
  40fcff:	mov    rax,QWORD PTR [rsp+0x28]
  40fd04:	mov    DWORD PTR [rax],0x1
  40fd0a:	mov    r15,rsi
  40fd0d:	mov    rcx,r13
  40fd10:	sub    rcx,r15
  40fd13:	cmp    rcx,0x8
  40fd17:	jb     40fd23 <main@@Base+0x8c53>
  40fd19:	movbe  rax,QWORD PTR [r15]
  40fd1e:	jmp    40fdb1 <main@@Base+0x8ce1>
  40fd23:	mov    eax,ecx
  40fd25:	and    al,0xf
  40fd27:	add    al,0xff
  40fd29:	cmp    al,0x7
  40fd2b:	ja     40fe80 <main@@Base+0x8db0>
  40fd31:	movzx  eax,al
  40fd34:	lea    rdx,[rip+0x25485]        # 4351c0 <_IO_stdin_used@@Base+0x1c0>
  40fd3b:	movsxd rax,DWORD PTR [rdx+rax*4]
  40fd3f:	add    rax,rdx
  40fd42:	xor    r8d,r8d
  40fd45:	xor    r9d,r9d
  40fd48:	xor    edx,edx
  40fd4a:	xor    esi,esi
  40fd4c:	xor    ebx,ebx
  40fd4e:	xor    ebp,ebp
  40fd50:	xor    edi,edi
  40fd52:	jmp    rax
  40fd54:	movsx  r8,BYTE PTR [r15+0x7]
  40fd59:	movsx  r9,BYTE PTR [r15+0x6]
  40fd5e:	shl    r9,0x8
  40fd62:	or     r9,r8
  40fd65:	movsx  rdx,BYTE PTR [r15+0x5]
  40fd6a:	shl    rdx,0x10
  40fd6e:	or     rdx,r9
  40fd71:	movsx  rsi,BYTE PTR [r15+0x4]
  40fd76:	shl    rsi,0x18
  40fd7a:	or     rsi,rdx
  40fd7d:	movsx  rbx,BYTE PTR [r15+0x3]
  40fd82:	shl    rbx,0x20
  40fd86:	or     rbx,rsi
  40fd89:	movsx  rbp,BYTE PTR [r15+0x2]
  40fd8e:	shl    rbp,0x28
  40fd92:	or     rbp,rbx
  40fd95:	movsx  rdi,BYTE PTR [r15+0x1]
  40fd9a:	shl    rdi,0x30
  40fd9e:	or     rdi,rbp
  40fda1:	movzx  eax,BYTE PTR [r15]
  40fda5:	shl    rax,0x38
  40fda9:	or     rax,rdi
  40fdac:	mov    r13,QWORD PTR [rsp+0x8]
  40fdb1:	movabs rdx,0x6e65737465640000
  40fdbb:	cmp    rax,rdx
  40fdbe:	jae    40fe25 <main@@Base+0x8d55>
  40fdc0:	movabs rdx,0xffffffff00000000
  40fdca:	and    rax,rdx
  40fdcd:	movabs rdx,0x6461746100000000
  40fdd7:	cmp    rax,rdx
  40fdda:	jne    40fe80 <main@@Base+0x8db0>
  40fde0:	mov    rax,r15
  40fde3:	cmp    rcx,0x5
  40fde7:	jl     41014f <main@@Base+0x907f>
  40fded:	mov    rax,QWORD PTR [rsp+0x28]
  40fdf2:	cmp    DWORD PTR [rax],0x0
  40fdf5:	movzx  ecx,BYTE PTR [r15+0x4]
  40fdfa:	je     40feeb <main@@Base+0x8e1b>
  40fe00:	cmp    cl,0x21
  40fe03:	jl     40fe11 <main@@Base+0x8d41>
  40fe05:	mov    rax,r15
  40fe08:	cmp    cl,0x3a
  40fe0b:	jne    41014f <main@@Base+0x907f>
  40fe11:	lea    rsi,[r15+0x4]
  40fe15:	mov    rax,QWORD PTR [rsp+0x28]
  40fe1a:	mov    DWORD PTR [rax],0x0
  40fe20:	jmp    40fefb <main@@Base+0x8e2b>
  40fe25:	mov    rdx,rax
  40fe28:	shr    rdx,0x8
  40fe2c:	movabs rsi,0x75726c64617461
  40fe36:	cmp    rdx,rsi
  40fe39:	jne    40fe8d <main@@Base+0x8dbd>
  40fe3b:	mov    rax,r15
  40fe3e:	cmp    rcx,0x8
  40fe42:	jl     4101a1 <main@@Base+0x90d1>
  40fe48:	mov    rax,QWORD PTR [rsp+0x28]
  40fe4d:	cmp    DWORD PTR [rax],0x0
  40fe50:	movzx  ecx,BYTE PTR [r15+0x7]
  40fe55:	je     40ff26 <main@@Base+0x8e56>
  40fe5b:	cmp    cl,0x21
  40fe5e:	jl     40fe6c <main@@Base+0x8d9c>
  40fe60:	mov    rax,r15
  40fe63:	cmp    cl,0x3a
  40fe66:	jne    4101a1 <main@@Base+0x90d1>
  40fe6c:	lea    rsi,[r15+0x7]
  40fe70:	mov    rax,QWORD PTR [rsp+0x28]
  40fe75:	mov    DWORD PTR [rax],0x0
  40fe7b:	jmp    40ff36 <main@@Base+0x8e66>
  40fe80:	mov    rdi,QWORD PTR [rsp+0x10]
  40fe85:	mov    rsi,r15
  40fe88:	jmp    410258 <main@@Base+0x9188>
  40fe8d:	and    rax,0xffffffffffff0000
  40fe93:	movabs rdx,0x6e65737465640000
  40fe9d:	cmp    rax,rdx
  40fea0:	jne    41024b <main@@Base+0x917b>
  40fea6:	mov    rax,r15
  40fea9:	cmp    rcx,0x7
  40fead:	jl     4101f6 <main@@Base+0x9126>
  40feb3:	mov    rax,QWORD PTR [rsp+0x28]
  40feb8:	cmp    DWORD PTR [rax],0x0
  40febb:	movzx  ecx,BYTE PTR [r15+0x6]
  40fec0:	je     410081 <main@@Base+0x8fb1>
  40fec6:	cmp    cl,0x21
  40fec9:	jl     40fed7 <main@@Base+0x8e07>
  40fecb:	mov    rax,r15
  40fece:	cmp    cl,0x3a
  40fed1:	jne    4101f6 <main@@Base+0x9126>
  40fed7:	lea    rsi,[r15+0x6]
  40fedb:	mov    rax,QWORD PTR [rsp+0x28]
  40fee0:	mov    DWORD PTR [rax],0x0
  40fee6:	jmp    410091 <main@@Base+0x8fc1>
  40feeb:	mov    rax,r15
  40feee:	cmp    cl,0x22
  40fef1:	jne    41014f <main@@Base+0x907f>
  40fef7:	lea    rsi,[r15+0x5]
  40fefb:	mov    rax,QWORD PTR [rsp+0x8]
  40ff00:	sub    rax,rsi
  40ff03:	cmp    rax,0x2
  40ff07:	jl     40ff71 <main@@Base+0x8ea1>
  40ff09:	cmp    BYTE PTR [rsi],0x20
  40ff0c:	jg     40ff83 <main@@Base+0x8eb3>
  40ff0e:	jne    40ff71 <main@@Base+0x8ea1>
  40ff10:	cmp    BYTE PTR [rsi+0x1],0x20
  40ff14:	jle    40ff71 <main@@Base+0x8ea1>
  40ff16:	add    rsi,0x1
  40ff1a:	cmp    rsi,QWORD PTR [rsp+0x8]
  40ff1f:	jne    40ff8e <main@@Base+0x8ebe>
  40ff21:	jmp    41003d <main@@Base+0x8f6d>
  40ff26:	mov    rax,r15
  40ff29:	cmp    cl,0x22
  40ff2c:	jne    4101a1 <main@@Base+0x90d1>
  40ff32:	lea    rsi,[r15+0x8]
  40ff36:	mov    rax,QWORD PTR [rsp+0x8]
  40ff3b:	sub    rax,rsi
  40ff3e:	cmp    rax,0x2
  40ff42:	jl     40ffdb <main@@Base+0x8f0b>
  40ff48:	cmp    BYTE PTR [rsi],0x20
  40ff4b:	jg     40ffed <main@@Base+0x8f1d>
  40ff51:	jne    40ffdb <main@@Base+0x8f0b>
  40ff57:	cmp    BYTE PTR [rsi+0x1],0x20
  40ff5b:	jle    40ffdb <main@@Base+0x8f0b>
  40ff5d:	add    rsi,0x1
  40ff61:	cmp    rsi,QWORD PTR [rsp+0x8]
  40ff66:	jne    40fff4 <main@@Base+0x8f24>
  40ff6c:	jmp    41005f <main@@Base+0x8f8f>
  40ff71:	mov    rdi,QWORD PTR [rsp+0x10]
  40ff76:	mov    rdx,QWORD PTR [rsp+0x8]
  40ff7b:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40ff80:	mov    rsi,rax
  40ff83:	cmp    rsi,QWORD PTR [rsp+0x8]
  40ff88:	je     41003d <main@@Base+0x8f6d>
  40ff8e:	cmp    BYTE PTR [rsi],0x3a
  40ff91:	jne    41003d <main@@Base+0x8f6d>
  40ff97:	lea    rax,[rsi+0x1]
  40ff9b:	mov    rcx,QWORD PTR [rsp+0x8]
  40ffa0:	sub    rcx,rax
  40ffa3:	cmp    rcx,0x2
  40ffa7:	jl     41013d <main@@Base+0x906d>
  40ffad:	cmp    BYTE PTR [rax],0x20
  40ffb0:	jg     41014f <main@@Base+0x907f>
  40ffb6:	jne    41013d <main@@Base+0x906d>
  40ffbc:	cmp    BYTE PTR [rsi+0x2],0x20
  40ffc0:	jle    41013d <main@@Base+0x906d>
  40ffc6:	add    rsi,0x2
  40ffca:	mov    rax,rsi
  40ffcd:	cmp    r15,rax
  40ffd0:	jne    410158 <main@@Base+0x9088>
  40ffd6:	jmp    41024b <main@@Base+0x917b>
  40ffdb:	mov    rdi,QWORD PTR [rsp+0x10]
  40ffe0:	mov    rdx,QWORD PTR [rsp+0x8]
  40ffe5:	call   425750 <flatcc_json_parser_space_ext@@Base>
  40ffea:	mov    rsi,rax
  40ffed:	cmp    rsi,QWORD PTR [rsp+0x8]
  40fff2:	je     41005f <main@@Base+0x8f8f>
  40fff4:	cmp    BYTE PTR [rsi],0x3a
  40fff7:	jne    41005f <main@@Base+0x8f8f>
  40fff9:	lea    rax,[rsi+0x1]
  40fffd:	mov    rcx,QWORD PTR [rsp+0x8]
  410002:	sub    rcx,rax
  410005:	cmp    rcx,0x2
  410009:	jl     41018f <main@@Base+0x90bf>
  41000f:	cmp    BYTE PTR [rax],0x20
  410012:	jg     4101a1 <main@@Base+0x90d1>
  410018:	jne    41018f <main@@Base+0x90bf>
  41001e:	cmp    BYTE PTR [rsi+0x2],0x20
  410022:	jle    41018f <main@@Base+0x90bf>
  410028:	add    rsi,0x2
  41002c:	mov    rax,rsi
  41002f:	cmp    r15,rax
  410032:	jne    4101aa <main@@Base+0x90da>
  410038:	jmp    41024b <main@@Base+0x917b>
  41003d:	mov    ecx,0x4
  410042:	mov    rdi,QWORD PTR [rsp+0x10]
  410047:	mov    rdx,QWORD PTR [rsp+0x8]
  41004c:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  410051:	cmp    r15,rax
  410054:	jne    410158 <main@@Base+0x9088>
  41005a:	jmp    41024b <main@@Base+0x917b>
  41005f:	mov    ecx,0x4
  410064:	mov    rdi,QWORD PTR [rsp+0x10]
  410069:	mov    rdx,QWORD PTR [rsp+0x8]
  41006e:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  410073:	cmp    r15,rax
  410076:	jne    4101aa <main@@Base+0x90da>
  41007c:	jmp    41024b <main@@Base+0x917b>
  410081:	mov    rax,r15
  410084:	cmp    cl,0x22
  410087:	jne    4101f6 <main@@Base+0x9126>
  41008d:	lea    rsi,[r15+0x7]
  410091:	mov    rax,QWORD PTR [rsp+0x8]
  410096:	sub    rax,rsi
  410099:	cmp    rax,0x2
  41009d:	jl     4100b9 <main@@Base+0x8fe9>
  41009f:	cmp    BYTE PTR [rsi],0x20
  4100a2:	jg     4100cb <main@@Base+0x8ffb>
  4100a4:	jne    4100b9 <main@@Base+0x8fe9>
  4100a6:	cmp    BYTE PTR [rsi+0x1],0x20
  4100aa:	jle    4100b9 <main@@Base+0x8fe9>
  4100ac:	add    rsi,0x1
  4100b0:	cmp    rsi,QWORD PTR [rsp+0x8]
  4100b5:	jne    4100d2 <main@@Base+0x9002>
  4100b7:	jmp    41011b <main@@Base+0x904b>
  4100b9:	mov    rdi,QWORD PTR [rsp+0x10]
  4100be:	mov    rdx,QWORD PTR [rsp+0x8]
  4100c3:	call   425750 <flatcc_json_parser_space_ext@@Base>
  4100c8:	mov    rsi,rax
  4100cb:	cmp    rsi,QWORD PTR [rsp+0x8]
  4100d0:	je     41011b <main@@Base+0x904b>
  4100d2:	cmp    BYTE PTR [rsi],0x3a
  4100d5:	jne    41011b <main@@Base+0x904b>
  4100d7:	lea    rax,[rsi+0x1]
  4100db:	mov    rcx,QWORD PTR [rsp+0x8]
  4100e0:	sub    rcx,rax
  4100e3:	cmp    rcx,0x2
  4100e7:	jl     4101e4 <main@@Base+0x9114>
  4100ed:	cmp    BYTE PTR [rax],0x20
  4100f0:	jg     4101f6 <main@@Base+0x9126>
  4100f6:	jne    4101e4 <main@@Base+0x9114>
  4100fc:	cmp    BYTE PTR [rsi+0x2],0x20
  410100:	jle    4101e4 <main@@Base+0x9114>
  410106:	add    rsi,0x2
  41010a:	mov    rax,rsi
  41010d:	cmp    r15,rax
  410110:	jne    4101fb <main@@Base+0x912b>
  410116:	jmp    41024b <main@@Base+0x917b>
  41011b:	mov    ecx,0x4
  410120:	mov    rdi,QWORD PTR [rsp+0x10]
  410125:	mov    rdx,QWORD PTR [rsp+0x8]
  41012a:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  41012f:	cmp    r15,rax
  410132:	jne    4101fb <main@@Base+0x912b>
  410138:	jmp    41024b <main@@Base+0x917b>
  41013d:	mov    rdi,QWORD PTR [rsp+0x10]
  410142:	mov    rsi,rax
  410145:	mov    rdx,QWORD PTR [rsp+0x8]
  41014a:	call   425750 <flatcc_json_parser_space_ext@@Base>
  41014f:	cmp    r15,rax
  410152:	je     41024b <main@@Base+0x917b>
  410158:	xor    r8d,r8d
  41015b:	mov    rdi,QWORD PTR [rsp+0x10]
  410160:	mov    rsi,rax
  410163:	mov    rdx,QWORD PTR [rsp+0x8]
  410168:	lea    rcx,[rsp+0x30]
  41016d:	call   427450 <flatcc_json_parser_build_uint8_vector_base64@@Base>
  410172:	mov    r12,rax
  410175:	cmp    DWORD PTR [rsp+0x30],0x0
  41017a:	je     411906 <main@@Base+0xa836>
  410180:	mov    rax,QWORD PTR [rsp+0x10]
  410185:	mov    rdi,QWORD PTR [rax]
  410188:	xor    esi,esi
  41018a:	jmp    410230 <main@@Base+0x9160>
  41018f:	mov    rdi,QWORD PTR [rsp+0x10]
  410194:	mov    rsi,rax
  410197:	mov    rdx,QWORD PTR [rsp+0x8]
  41019c:	call   425750 <flatcc_json_parser_space_ext@@Base>
  4101a1:	cmp    r15,rax
  4101a4:	je     41024b <main@@Base+0x917b>
  4101aa:	mov    r8d,0x1
  4101b0:	mov    rdi,QWORD PTR [rsp+0x10]
  4101b5:	mov    rsi,rax
  4101b8:	mov    rdx,QWORD PTR [rsp+0x8]
  4101bd:	lea    rcx,[rsp+0x30]
  4101c2:	call   427450 <flatcc_json_parser_build_uint8_vector_base64@@Base>
  4101c7:	mov    r12,rax
  4101ca:	cmp    DWORD PTR [rsp+0x30],0x0
  4101cf:	je     411906 <main@@Base+0xa836>
  4101d5:	mov    rax,QWORD PTR [rsp+0x10]
  4101da:	mov    rdi,QWORD PTR [rax]
  4101dd:	mov    esi,0x1
  4101e2:	jmp    410230 <main@@Base+0x9160>
  4101e4:	mov    rdi,QWORD PTR [rsp+0x10]
  4101e9:	mov    rsi,rax
  4101ec:	mov    rdx,QWORD PTR [rsp+0x8]
  4101f1:	call   425750 <flatcc_json_parser_space_ext@@Base>
  4101f6:	cmp    r15,rax
  4101f9:	je     41024b <main@@Base+0x917b>
  4101fb:	xor    r8d,r8d
  4101fe:	mov    rdi,QWORD PTR [rsp+0x10]
  410203:	mov    rsi,rax
  410206:	mov    rdx,QWORD PTR [rsp+0x8]
  41020b:	lea    rcx,[rsp+0x30]
  410210:	call   427450 <flatcc_json_parser_build_uint8_vector_base64@@Base>
  410215:	mov    r12,rax
  410218:	cmp    DWORD PTR [rsp+0x30],0x0
  41021d:	je     411906 <main@@Base+0xa836>
  410223:	mov    rax,QWORD PTR [rsp+0x10]
  410228:	mov    rdi,QWORD PTR [rax]
  41022b:	mov    esi,0x2
  410230:	call   421dc0 <flatcc_builder_table_add_offset@@Base>
  410235:	test   rax,rax
  410238:	je     411906 <main@@Base+0xa836>
  41023e:	mov    ecx,DWORD PTR [rsp+0x30]
  410242:	mov    DWORD PTR [rax],ecx
  410244:	mov    r13,QWORD PTR [rsp+0x8]
  410249:	jmp    410263 <main@@Base+0x9193>
  41024b:	mov    rdi,QWORD PTR [rsp+0x10]
  410250:	mov    rsi,r15
  410253:	mov    r13,QWORD PTR [rsp+0x8]
  410258:	mov    rdx,r13
  41025b:	call   425cc0 <flatcc_json_parser_unmatched_symbol@@Base>
  410260:	mov    r12,rax
  410263:	mov    rax,r13
  410266:	sub    rax,r12
  410269:	cmp    rax,0x2
  41026d:	mov    r15,QWORD PTR [rsp+0x10]
  410272:	jl     410293 <main@@Base+0x91c3>
  410274:	cmp    BYTE PTR [r12],0x20
  410279:	jg     4102a4 <main@@Base+0x91d4>
  41027b:	jne    410293 <main@@Base+0x91c3>
  41027d:	cmp    BYTE PTR [r12+0x1],0x20
  410283:	jle    410293 <main@@Base+0x91c3>
  410285:	add    r12,0x1
  410289:	cmp    r12,r13
  41028c:	jne    4102ad <main@@Base+0x91dd>
  41028e:	jmp    4113da <main@@Base+0xa30a>
  410293:	mov    rdi,r15
  410296:	mov    rsi,r12
  410299:	mov    rdx,r13
  41029c:	call   425750 <flatcc_json_parser_space_ext@@Base>
  4102a1:	mov    r12,rax
  4102a4:	cmp    r12,r13
  4102a7:	je     4113da <main@@Base+0xa30a>
  4102ad:	movzx  eax,BYTE PTR [r12]
  4102b2:	cmp    al,0x2c
  4102b4:	jne    4113e2 <main@@Base+0xa312>
  4102ba:	lea    rsi,[r12+0x1]
  4102bf:	mov    rax,r13
  4102c2:	sub    rax,rsi
  4102c5:	cmp    rax,0x2
  4102c9:	jl     4102eb <main@@Base+0x921b>
  4102cb:	cmp    BYTE PTR [rsi],0x20
  4102ce:	jg     4102f9 <main@@Base+0x9229>
  4102d0:	jne    4102eb <main@@Base+0x921b>
  4102d2:	cmp    BYTE PTR [r12+0x2],0x20
  4102d8:	jle    4102eb <main@@Base+0x921b>
  4102da:	add    r12,0x2
  4102de:	mov    rsi,r12
  4102e1:	cmp    rsi,r13
  4102e4:	jne    410302 <main@@Base+0x9232>
  4102e6:	jmp    41160a <main@@Base+0xa53a>
  4102eb:	mov    rdi,r15
  4102ee:	mov    rdx,r13
  4102f1:	call   425750 <flatcc_json_parser_space_ext@@Base>
  4102f6:	mov    rsi,rax
  4102f9:	cmp    rsi,r13
  4102fc:	je     41160a <main@@Base+0xa53a>
  410302:	cmp    BYTE PTR [rsi],0x7d
  410305:	jne    40fcc4 <main@@Base+0x8bf4>
  41030b:	lea    r14,[rsi+0x1]
  41030f:	sub    r13,r14
  410312:	cmp    r13,0x2
  410316:	jl     411bae <main@@Base+0xaade>
  41031c:	cmp    BYTE PTR [r14],0x20
  410320:	jg     41140b <main@@Base+0xa33b>
  410326:	jne    411bae <main@@Base+0xaade>
  41032c:	cmp    BYTE PTR [rsi+0x2],0x20
  410330:	jle    411bae <main@@Base+0xaade>
  410336:	add    rsi,0x2
  41033a:	mov    r14,rsi
  41033d:	jmp    41140b <main@@Base+0xa33b>
  410342:	mov    DWORD PTR [rsp+0x1c],eax
  410346:	mov    r12d,eax
  410349:	jmp    40e130 <main@@Base+0x7060>
  41034e:	neg    r12
  410351:	mov    QWORD PTR [rsp+0x40],r12
  410356:	mov    r15,QWORD PTR [rsp+0x10]
  41035b:	cmp    rbx,r14
  41035e:	mov    rbp,QWORD PTR [rsp+0x20]
  410363:	jne    4103a7 <main@@Base+0x92d7>
  410365:	mov    rdi,r15
  410368:	mov    rsi,rbx
  41036b:	mov    rdx,QWORD PTR [rsp+0x8]
  410370:	lea    rcx,[rip+0x33f09]        # 444280 <__data_start@@Base+0x1d0>
  410377:	lea    r8,[rsp+0x40]
  41037c:	call   415f20 <main@@Base+0xee50>
  410381:	mov    r14,rax
  410384:	cmp    rax,rbx
  410387:	je     411d4c <main@@Base+0xac7c>
  41038d:	cmp    r14,QWORD PTR [rsp+0x8]
  410392:	je     411d4c <main@@Base+0xac7c>
  410398:	mov    r12,QWORD PTR [rsp+0x40]
  41039d:	mov    r15,QWORD PTR [rsp+0x10]
  4103a2:	mov    rbp,QWORD PTR [rsp+0x20]
  4103a7:	test   r12,r12
  4103aa:	mov    r13,QWORD PTR [rsp+0x8]
  4103af:	jne    4103bc <main@@Base+0x92ec>
  4103b1:	test   BYTE PTR [r15+0x10],0x2
  4103b6:	je     40f87e <main@@Base+0x87ae>
  4103bc:	mov    rdi,QWORD PTR [r15]
  4103bf:	mov    esi,0x16
  4103c4:	mov    edx,0x8
  4103c9:	mov    ecx,0x8
  4103ce:	call   421f20 <flatcc_builder_table_add@@Base>
  4103d3:	test   rax,rax
  4103d6:	je     411d4c <main@@Base+0xac7c>
  4103dc:	mov    QWORD PTR [rax],r12
  4103df:	jmp    40f87e <main@@Base+0x87ae>
  4103e4:	mov    ecx,0x21
  4103e9:	mov    r15,QWORD PTR [rsp+0x10]
  4103ee:	mov    rdi,r15
  4103f1:	mov    rsi,rax
  4103f4:	mov    r13,QWORD PTR [rsp+0x8]
  4103f9:	jmp    40bdf3 <main@@Base+0x4d23>
  4103fe:	mov    r15,QWORD PTR [rsp+0x10]
  410403:	mov    r13,QWORD PTR [rsp+0x8]
  410408:	jne    41041b <main@@Base+0x934b>
  41040a:	cmp    BYTE PTR [r12+0x2],0x20
  410410:	jle    41041b <main@@Base+0x934b>
  410412:	add    r12,0x2
  410416:	mov    rax,r12
  410419:	jmp    410429 <main@@Base+0x9359>
  41041b:	mov    rdi,r15
  41041e:	mov    rsi,rax
  410421:	mov    rdx,r13
  410424:	call   425750 <flatcc_json_parser_space_ext@@Base>
  410429:	mov    rsi,r13
  41042c:	cmp    rax,r13
  41042f:	je     41047a <main@@Base+0x93aa>
  410431:	cmp    BYTE PTR [rax],0x5d
  410434:	jne    410472 <main@@Base+0x93a2>
  410436:	lea    r14,[rax+0x1]
  41043a:	mov    rcx,QWORD PTR [rsp+0x8]
  41043f:	sub    rcx,r14
  410442:	cmp    rcx,0x2
  410446:	jl     411be1 <main@@Base+0xab11>
  41044c:	cmp    BYTE PTR [r14],0x20
  410450:	jg     41164b <main@@Base+0xa57b>
  410456:	jne    411be1 <main@@Base+0xab11>
  41045c:	cmp    BYTE PTR [rax+0x2],0x20
  410460:	jle    411be1 <main@@Base+0xab11>
  410466:	add    rax,0x2
  41046a:	mov    r14,rax
  41046d:	jmp    41164b <main@@Base+0xa57b>
  410472:	mov    rsi,rax
  410475:	mov    r13,QWORD PTR [rsp+0x8]
  41047a:	mov    r15,QWORD PTR [rsp+0x10]
  41047f:	mov    rdi,r15
  410482:	mov    rdx,r13
  410485:	lea    rcx,[rsp+0x3c]
  41048a:	call   427830 <flatcc_json_parser_build_string@@Base>
  41048f:	mov    r12,rax
  410492:	cmp    DWORD PTR [rsp+0x3c],0x0
  410497:	je     407c81 <main@@Base+0xbb1>
  41049d:	mov    rdi,QWORD PTR [r15]
  4104a0:	mov    esi,0x1
  4104a5:	call   4200b0 <flatcc_builder_extend_offset_vector@@Base>
  4104aa:	test   rax,rax
  4104ad:	je     407c81 <main@@Base+0xbb1>
  4104b3:	mov    ecx,DWORD PTR [rsp+0x3c]
  4104b7:	mov    DWORD PTR [rax],ecx
  4104b9:	mov    rax,r13
  4104bc:	sub    rax,r12
  4104bf:	cmp    rax,0x2
  4104c3:	jl     4104e4 <main@@Base+0x9414>
  4104c5:	cmp    BYTE PTR [r12],0x20
  4104ca:	jg     4104f5 <main@@Base+0x9425>
  4104cc:	jne    4104e4 <main@@Base+0x9414>
  4104ce:	cmp    BYTE PTR [r12+0x1],0x20
  4104d4:	jle    4104e4 <main@@Base+0x9414>
  4104d6:	add    r12,0x1
  4104da:	cmp    r12,r13
  4104dd:	jne    4104fe <main@@Base+0x942e>
  4104df:	jmp    41161a <main@@Base+0xa54a>
  4104e4:	mov    rdi,r15
  4104e7:	mov    rsi,r12
  4104ea:	mov    rdx,r13
  4104ed:	call   425750 <flatcc_json_parser_space_ext@@Base>
  4104f2:	mov    r12,rax
  4104f5:	cmp    r12,r13
  4104f8:	je     41161a <main@@Base+0xa54a>
  4104fe:	movzx  eax,BYTE PTR [r12]
  410503:	cmp    al,0x2c
  410505:	jne    411622 <main@@Base+0xa552>
  41050b:	lea    rsi,[r12+0x1]
  410510:	mov    rax,r13
  410513:	sub    rax,rsi
  410516:	cmp    rax,0x2
  41051a:	jl     41053c <main@@Base+0x946c>
  41051c:	cmp    BYTE PTR [rsi],0x20
  41051f:	jg     41054a <main@@Base+0x947a>
  410521:	jne    41053c <main@@Base+0x946c>
  410523:	cmp    BYTE PTR [r12+0x2],0x20
  410529:	jle    41053c <main@@Base+0x946c>
  41052b:	add    r12,0x2
  41052f:	mov    rsi,r12
  410532:	cmp    rsi,r13
  410535:	jne    410553 <main@@Base+0x9483>
  410537:	jmp    41168e <main@@Base+0xa5be>
  41053c:	mov    rdi,r15
  41053f:	mov    rdx,r13
  410542:	call   425750 <flatcc_json_parser_space_ext@@Base>
  410547:	mov    rsi,rax
  41054a:	cmp    rsi,r13
  41054d:	je     41168e <main@@Base+0xa5be>
  410553:	cmp    BYTE PTR [rsi],0x5d
  410556:	jne    41047f <main@@Base+0x93af>
  41055c:	lea    r14,[rsi+0x1]
  410560:	sub    r13,r14
  410563:	cmp    r13,0x2
  410567:	jl     411be1 <main@@Base+0xab11>
  41056d:	cmp    BYTE PTR [r14],0x20
  410571:	jg     41164b <main@@Base+0xa57b>
  410577:	jne    411be1 <main@@Base+0xab11>
  41057d:	cmp    BYTE PTR [rsi+0x2],0x20
  410581:	jle    411be1 <main@@Base+0xab11>
  410587:	add    rsi,0x2
  41058b:	mov    r14,rsi
  41058e:	jmp    41164b <main@@Base+0xa57b>
  410593:	mov    r12,rax
  410596:	mov    QWORD PTR [rsp+0x40],0x0
  41059f:	mov    rax,QWORD PTR [rsp+0x10]
  4105a4:	mov    rdi,QWORD PTR [rax]
  4105a7:	mov    esi,0x1
  4105ac:	call   41fdc0 <flatcc_builder_extend_vector@@Base>
  4105b1:	test   rax,rax
  4105b4:	je     411d4f <main@@Base+0xac7f>
  4105ba:	mov    rbx,rax
  4105bd:	mov    r15,QWORD PTR [rsp+0x10]
  4105c2:	mov    QWORD PTR [rsp+0x30],0x0
  4105cb:	mov    DWORD PTR [rsp+0x1c],0x0
  4105d3:	mov    QWORD PTR [rsp+0x40],0x0
  4105dc:	mov    rdx,QWORD PTR [rsp+0x8]
  4105e1:	cmp    r12,rdx
  4105e4:	je     410622 <main@@Base+0x9552>
  4105e6:	mov    rdi,r15
  4105e9:	mov    rsi,r12
  4105ec:	lea    rcx,[rsp+0x1c]
  4105f1:	lea    r8,[rsp+0x30]
  4105f6:	call   427360 <flatcc_json_parser_integer@@Base>
  4105fb:	cmp    rax,r12
  4105fe:	je     410632 <main@@Base+0x9562>
  410600:	mov    rcx,QWORD PTR [rsp+0x30]
  410605:	cmp    DWORD PTR [rsp+0x1c],0x0
  41060a:	je     41063e <main@@Base+0x956e>
  41060c:	movabs rdx,0x8000000000000000
  410616:	cmp    rcx,rdx
  410619:	jbe    410666 <main@@Base+0x9596>
  41061b:	mov    ecx,0x8
  410620:	jmp    410648 <main@@Base+0x9578>
  410622:	xor    ecx,ecx
  410624:	mov    rax,rdx
  410627:	cmp    r12,rax
  41062a:	jne    4106b3 <main@@Base+0x95e3>
  410630:	jmp    410678 <main@@Base+0x95a8>
  410632:	xor    ecx,ecx
  410634:	mov    rax,r12
  410637:	cmp    r12,rax
  41063a:	jne    4106b3 <main@@Base+0x95e3>
  41063c:	jmp    410678 <main@@Base+0x95a8>
  41063e:	test   rcx,rcx
  410641:	jns    410669 <main@@Base+0x9599>
  410643:	mov    ecx,0x7
  410648:	mov    r15,QWORD PTR [rsp+0x10]
  41064d:	mov    rdi,r15
  410650:	mov    rsi,rax
  410653:	mov    rdx,QWORD PTR [rsp+0x8]
  410658:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  41065d:	xor    ecx,ecx
  41065f:	cmp    r12,rax
  410662:	jne    4106b3 <main@@Base+0x95e3>
  410664:	jmp    410678 <main@@Base+0x95a8>
  410666:	neg    rcx
  410669:	mov    QWORD PTR [rsp+0x40],rcx
  41066e:	mov    r15,QWORD PTR [rsp+0x10]
  410673:	cmp    r12,rax
  410676:	jne    4106b3 <main@@Base+0x95e3>
  410678:	mov    rdi,r15
  41067b:	mov    rsi,r12
  41067e:	mov    rbp,QWORD PTR [rsp+0x8]
  410683:	mov    rdx,rbp
  410686:	lea    rcx,[rip+0x33cd3]        # 444360 <__data_start@@Base+0x2b0>
  41068d:	lea    r8,[rsp+0x40]
  410692:	call   415f20 <main@@Base+0xee50>
  410697:	cmp    rax,r12
  41069a:	je     411d88 <main@@Base+0xacb8>
  4106a0:	cmp    rax,rbp
  4106a3:	je     411d88 <main@@Base+0xacb8>
  4106a9:	mov    rcx,QWORD PTR [rsp+0x40]
  4106ae:	mov    r15,QWORD PTR [rsp+0x10]
  4106b3:	mov    QWORD PTR [rbx],rcx
  4106b6:	mov    r14,QWORD PTR [rsp+0x8]
  4106bb:	mov    rcx,r14
  4106be:	sub    rcx,rax
  4106c1:	cmp    rcx,0x2
  4106c5:	jl     4106e2 <main@@Base+0x9612>
  4106c7:	cmp    BYTE PTR [rax],0x20
  4106ca:	jg     4106f0 <main@@Base+0x9620>
  4106cc:	jne    4106e2 <main@@Base+0x9612>
  4106ce:	cmp    BYTE PTR [rax+0x1],0x20
  4106d2:	jle    4106e2 <main@@Base+0x9612>
  4106d4:	add    rax,0x1
  4106d8:	cmp    rax,r14
  4106db:	jne    4106f9 <main@@Base+0x9629>
  4106dd:	jmp    411a08 <main@@Base+0xa938>
  4106e2:	mov    rdi,r15
  4106e5:	mov    rsi,rax
  4106e8:	mov    rdx,r14
  4106eb:	call   425750 <flatcc_json_parser_space_ext@@Base>
  4106f0:	cmp    rax,r14
  4106f3:	je     411a08 <main@@Base+0xa938>
  4106f9:	movzx  ecx,BYTE PTR [rax]
  4106fc:	cmp    cl,0x2c
  4106ff:	jne    41178e <main@@Base+0xa6be>
  410705:	lea    r12,[rax+0x1]
  410709:	mov    rcx,r14
  41070c:	sub    rcx,r12
  41070f:	cmp    rcx,0x2
  410713:	jl     41072a <main@@Base+0x965a>
  410715:	cmp    BYTE PTR [r12],0x20
  41071a:	jg     41073b <main@@Base+0x966b>
  41071c:	jne    41072a <main@@Base+0x965a>
  41071e:	cmp    BYTE PTR [rax+0x2],0x20
  410722:	jle    41072a <main@@Base+0x965a>
  410724:	add    rax,0x2
  410728:	jmp    410738 <main@@Base+0x9668>
  41072a:	mov    rdi,r15
  41072d:	mov    rsi,r12
  410730:	mov    rdx,r14
  410733:	call   425750 <flatcc_json_parser_space_ext@@Base>
  410738:	mov    r12,rax
  41073b:	cmp    r12,r14
  41073e:	je     411815 <main@@Base+0xa745>
  410744:	cmp    BYTE PTR [r12],0x5d
  410749:	je     41186f <main@@Base+0xa79f>
  41074f:	mov    QWORD PTR [rsp+0x40],0x0
  410758:	mov    rdi,QWORD PTR [r15]
  41075b:	mov    esi,0x1
  410760:	call   41fdc0 <flatcc_builder_extend_vector@@Base>
  410765:	mov    rbx,rax
  410768:	test   rax,rax
  41076b:	jne    4105c2 <main@@Base+0x94f2>
  410771:	jmp    411d42 <main@@Base+0xac72>
  410776:	mov    r13,rax
  410779:	mov    QWORD PTR [rsp+0x30],0x0
  410782:	mov    rax,QWORD PTR [rsp+0x10]
  410787:	mov    rdi,QWORD PTR [rax]
  41078a:	mov    esi,0x1
  41078f:	call   41fdc0 <flatcc_builder_extend_vector@@Base>
  410794:	test   rax,rax
  410797:	je     411d8d <main@@Base+0xacbd>
  41079d:	mov    rbp,rax
  4107a0:	mov    r15,QWORD PTR [rsp+0x10]
  4107a5:	mov    rbx,QWORD PTR [rsp+0x8]
  4107aa:	mov    rdi,r15
  4107ad:	mov    rsi,r13
  4107b0:	mov    rdx,rbx
  4107b3:	lea    rcx,[rsp+0x30]
  4107b8:	call   426a60 <flatcc_json_parser_double@@Base>
  4107bd:	mov    r12,rax
  4107c0:	cmp    r13,rax
  4107c3:	jne    4107f4 <main@@Base+0x9724>
  4107c5:	mov    rdi,r15
  4107c8:	mov    rsi,r13
  4107cb:	mov    rdx,rbx
  4107ce:	lea    rcx,[rip+0x33b6b]        # 444340 <__data_start@@Base+0x290>
  4107d5:	lea    r8,[rsp+0x30]
  4107da:	call   4164b0 <main@@Base+0xf3e0>
  4107df:	mov    r12,rax
  4107e2:	cmp    rax,r13
  4107e5:	je     411d80 <main@@Base+0xacb0>
  4107eb:	cmp    r12,rbx
  4107ee:	je     411d80 <main@@Base+0xacb0>
  4107f4:	mov    rax,QWORD PTR [rsp+0x30]
  4107f9:	mov    QWORD PTR [rbp+0x0],rax
  4107fd:	mov    rax,rbx
  410800:	sub    rax,r12
  410803:	cmp    rax,0x2
  410807:	jl     410828 <main@@Base+0x9758>
  410809:	cmp    BYTE PTR [r12],0x20
  41080e:	jg     410839 <main@@Base+0x9769>
  410810:	jne    410828 <main@@Base+0x9758>
  410812:	cmp    BYTE PTR [r12+0x1],0x20
  410818:	jle    410828 <main@@Base+0x9758>
  41081a:	add    r12,0x1
  41081e:	cmp    r12,rbx
  410821:	jne    410842 <main@@Base+0x9772>
  410823:	jmp    4117f5 <main@@Base+0xa725>
  410828:	mov    rdi,r15
  41082b:	mov    rsi,r12
  41082e:	mov    rdx,rbx
  410831:	call   425750 <flatcc_json_parser_space_ext@@Base>
  410836:	mov    r12,rax
  410839:	cmp    r12,rbx
  41083c:	je     4117f5 <main@@Base+0xa725>
  410842:	movzx  eax,BYTE PTR [r12]
  410847:	cmp    al,0x2c
  410849:	jne    411828 <main@@Base+0xa758>
  41084f:	lea    r13,[r12+0x1]
  410854:	mov    rax,QWORD PTR [rsp+0x8]
  410859:	sub    rax,r13
  41085c:	cmp    rax,0x2
  410860:	jl     41088b <main@@Base+0x97bb>
  410862:	cmp    BYTE PTR [r13+0x0],0x20
  410867:	jle    410878 <main@@Base+0x97a8>
  410869:	mov    rbx,QWORD PTR [rsp+0x8]
  41086e:	cmp    r13,rbx
  410871:	jne    4108aa <main@@Base+0x97da>
  410873:	jmp    4118f1 <main@@Base+0xa821>
  410878:	jne    41088b <main@@Base+0x97bb>
  41087a:	cmp    BYTE PTR [r12+0x2],0x20
  410880:	jle    41088b <main@@Base+0x97bb>
  410882:	add    r12,0x2
  410886:	mov    r13,r12
  410889:	jmp    410869 <main@@Base+0x9799>
  41088b:	mov    rdi,r15
  41088e:	mov    rsi,r13
  410891:	mov    rbx,QWORD PTR [rsp+0x8]
  410896:	mov    rdx,rbx
  410899:	call   425750 <flatcc_json_parser_space_ext@@Base>
  41089e:	mov    r13,rax
  4108a1:	cmp    r13,rbx
  4108a4:	je     4118f1 <main@@Base+0xa821>
  4108aa:	cmp    BYTE PTR [r13+0x0],0x5d
  4108af:	je     411925 <main@@Base+0xa855>
  4108b5:	mov    QWORD PTR [rsp+0x30],0x0
  4108be:	mov    rdi,QWORD PTR [r15]
  4108c1:	mov    esi,0x1
  4108c6:	call   41fdc0 <flatcc_builder_extend_vector@@Base>
  4108cb:	mov    rbp,rax
  4108ce:	mov    r12,r13
  4108d1:	test   rax,rax
  4108d4:	mov    rbx,QWORD PTR [rsp+0x8]
  4108d9:	jne    4107aa <main@@Base+0x96da>
  4108df:	jmp    411d80 <main@@Base+0xacb0>
  4108e4:	mov    r14,r13
  4108e7:	jmp    40d2ee <main@@Base+0x621e>
  4108ec:	mov    r14,r13
  4108ef:	jmp    40d485 <main@@Base+0x63b5>
  4108f4:	cmp    al,0x5d
  4108f6:	jne    41165a <main@@Base+0xa58a>
  4108fc:	lea    r14,[r12+0x1]
  410901:	mov    rax,QWORD PTR [rsp+0x8]
  410906:	sub    rax,r14
  410909:	cmp    rax,0x2
  41090d:	jl     411b48 <main@@Base+0xaa78>
  410913:	cmp    BYTE PTR [r14],0x20
  410917:	jle    411b32 <main@@Base+0xaa62>
  41091d:	mov    r15,QWORD PTR [rsp+0x10]
  410922:	mov    r13,QWORD PTR [rsp+0x8]
  410927:	jmp    40d2ee <main@@Base+0x621e>
  41092c:	cmp    al,0x5d
  41092e:	jne    411674 <main@@Base+0xa5a4>
  410934:	lea    r14,[r12+0x1]
  410939:	mov    rax,QWORD PTR [rsp+0x8]
  41093e:	sub    rax,r14
  410941:	cmp    rax,0x2
  410945:	jl     411b7b <main@@Base+0xaaab>
  41094b:	cmp    BYTE PTR [r14],0x20
  41094f:	jle    411b65 <main@@Base+0xaa95>
  410955:	mov    r15,QWORD PTR [rsp+0x10]
  41095a:	mov    r13,QWORD PTR [rsp+0x8]
  41095f:	jmp    40d485 <main@@Base+0x63b5>
  410964:	mov    ecx,0x9
  410969:	mov    rdi,r15
  41096c:	mov    rsi,r13
  41096f:	jmp    40d2e3 <main@@Base+0x6213>
  410974:	mov    ecx,0x9
  410979:	mov    rdi,r15
  41097c:	mov    rsi,r13
  41097f:	jmp    40d47a <main@@Base+0x63aa>
  410984:	mov    r14,rbx
  410987:	jmp    4117e6 <main@@Base+0xa716>
  41098c:	mov    rax,QWORD PTR [rsp+0x30]
  410991:	mov    rcx,rax
  410994:	shr    rcx,0x20
  410998:	je     4116a6 <main@@Base+0xa5d6>
  41099e:	mov    ecx,0x7
  4109a3:	mov    r15,QWORD PTR [rsp+0x10]
  4109a8:	mov    rdi,r15
  4109ab:	mov    rsi,r14
  4109ae:	mov    rdx,QWORD PTR [rsp+0x8]
  4109b3:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  4109b8:	mov    r14,rax
  4109bb:	cmp    rbx,r14
  4109be:	jne    4116f4 <main@@Base+0xa624>
  4109c4:	jmp    4116b7 <main@@Base+0xa5e7>
  4109c9:	mov    r12,QWORD PTR [rsp+0x30]
  4109ce:	mov    QWORD PTR [rsp+0x40],r12
  4109d3:	mov    r15,QWORD PTR [rsp+0x10]
  4109d8:	cmp    rbx,r14
  4109db:	jne    410a1a <main@@Base+0x994a>
  4109dd:	mov    rdi,r15
  4109e0:	mov    rsi,rbx
  4109e3:	mov    rdx,QWORD PTR [rsp+0x8]
  4109e8:	lea    rcx,[rip+0x33911]        # 444300 <__data_start@@Base+0x250>
  4109ef:	lea    r8,[rsp+0x40]
  4109f4:	call   4162f0 <main@@Base+0xf220>
  4109f9:	mov    r14,rax
  4109fc:	cmp    rax,rbx
  4109ff:	je     411d4c <main@@Base+0xac7c>
  410a05:	cmp    r14,QWORD PTR [rsp+0x8]
  410a0a:	je     411d4c <main@@Base+0xac7c>
  410a10:	mov    r12,QWORD PTR [rsp+0x40]
  410a15:	mov    r15,QWORD PTR [rsp+0x10]
  410a1a:	test   r12,r12
  410a1d:	jne    410a2a <main@@Base+0x995a>
  410a1f:	test   BYTE PTR [r15+0x10],0x2
  410a24:	je     411723 <main@@Base+0xa653>
  410a2a:	mov    rdi,QWORD PTR [r15]
  410a2d:	mov    esi,0x17
  410a32:	mov    edx,0x8
  410a37:	mov    ecx,0x8
  410a3c:	call   421f20 <flatcc_builder_table_add@@Base>
  410a41:	test   rax,rax
  410a44:	je     411d4c <main@@Base+0xac7c>
  410a4a:	mov    QWORD PTR [rax],r12
  410a4d:	jmp    411723 <main@@Base+0xa653>
  410a52:	cmp    cl,0x5d
  410a55:	jne    4117cc <main@@Base+0xa6fc>
  410a5b:	lea    r14,[rax+0x1]
  410a5f:	mov    rcx,QWORD PTR [rsp+0x8]
  410a64:	sub    rcx,r14
  410a67:	cmp    rcx,0x2
  410a6b:	jl     411339 <main@@Base+0xa269>
  410a71:	cmp    BYTE PTR [r14],0x20
  410a75:	jg     4117e6 <main@@Base+0xa716>
  410a7b:	jne    411339 <main@@Base+0xa269>
  410a81:	cmp    BYTE PTR [rax+0x2],0x20
  410a85:	jg     40e2e6 <main@@Base+0x7216>
  410a8b:	jmp    411339 <main@@Base+0xa269>
  410a90:	mov    ecx,0x9
  410a95:	mov    rdi,r15
  410a98:	mov    rsi,rbx
  410a9b:	mov    rdx,rbx
  410a9e:	jmp    4117de <main@@Base+0xa70e>
  410aa3:	mov    rsi,rax
  410aa6:	mov    r13,QWORD PTR [rsp+0x8]
  410aab:	mov    r15,r13
  410aae:	cmp    rsi,r13
  410ab1:	je     410af4 <main@@Base+0x9a24>
  410ab3:	movzx  eax,BYTE PTR [rsi]
  410ab6:	cmp    al,0x2e
  410ab8:	je     410acf <main@@Base+0x99ff>
  410aba:	cmp    al,0x22
  410abc:	jne    410ae6 <main@@Base+0x9a16>
  410abe:	add    rsi,0x1
  410ac2:	mov    rax,QWORD PTR [rsp+0x28]
  410ac7:	mov    DWORD PTR [rax],0x0
  410acd:	jmp    410af1 <main@@Base+0x9a21>
  410acf:	mov    ecx,0x5
  410ad4:	mov    rdi,QWORD PTR [rsp+0x10]
  410ad9:	mov    rdx,r13
  410adc:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  410ae1:	mov    r15,rax
  410ae4:	jmp    410af4 <main@@Base+0x9a24>
  410ae6:	mov    rax,QWORD PTR [rsp+0x28]
  410aeb:	mov    DWORD PTR [rax],0x1
  410af1:	mov    r15,rsi
  410af4:	mov    rcx,r13
  410af7:	sub    rcx,r15
  410afa:	cmp    rcx,0x8
  410afe:	jb     410b0a <main@@Base+0x9a3a>
  410b00:	movbe  rax,QWORD PTR [r15]
  410b05:	jmp    410b98 <main@@Base+0x9ac8>
  410b0a:	mov    eax,ecx
  410b0c:	and    al,0xf
  410b0e:	add    al,0xff
  410b10:	cmp    al,0x7
  410b12:	ja     410c63 <main@@Base+0x9b93>
  410b18:	movzx  eax,al
  410b1b:	lea    rdx,[rip+0x2465e]        # 435180 <_IO_stdin_used@@Base+0x180>
  410b22:	movsxd rax,DWORD PTR [rdx+rax*4]
  410b26:	add    rax,rdx
  410b29:	xor    r8d,r8d
  410b2c:	xor    r9d,r9d
  410b2f:	xor    edx,edx
  410b31:	xor    esi,esi
  410b33:	xor    ebx,ebx
  410b35:	xor    ebp,ebp
  410b37:	xor    edi,edi
  410b39:	jmp    rax
  410b3b:	movsx  r8,BYTE PTR [r15+0x7]
  410b40:	movsx  r9,BYTE PTR [r15+0x6]
  410b45:	shl    r9,0x8
  410b49:	or     r9,r8
  410b4c:	movsx  rdx,BYTE PTR [r15+0x5]
  410b51:	shl    rdx,0x10
  410b55:	or     rdx,r9
  410b58:	movsx  rsi,BYTE PTR [r15+0x4]
  410b5d:	shl    rsi,0x18
  410b61:	or     rsi,rdx
  410b64:	movsx  rbx,BYTE PTR [r15+0x3]
  410b69:	shl    rbx,0x20
  410b6d:	or     rbx,rsi
  410b70:	movsx  rbp,BYTE PTR [r15+0x2]
  410b75:	shl    rbp,0x28
  410b79:	or     rbp,rbx
  410b7c:	movsx  rdi,BYTE PTR [r15+0x1]
  410b81:	shl    rdi,0x30
  410b85:	or     rdi,rbp
  410b88:	movzx  eax,BYTE PTR [r15]
  410b8c:	shl    rax,0x38
  410b90:	or     rax,rdi
  410b93:	mov    r13,QWORD PTR [rsp+0x8]
  410b98:	movabs rdx,0x6964000000000000
  410ba2:	cmp    rax,rdx
  410ba5:	jae    410c01 <main@@Base+0x9b31>
  410ba7:	shr    rax,0x18
  410bab:	movabs rdx,0x636f756e74
  410bb5:	cmp    rax,rdx
  410bb8:	jne    410c63 <main@@Base+0x9b93>
  410bbe:	mov    rbx,r15
  410bc1:	cmp    rcx,0x6
  410bc5:	jl     410f28 <main@@Base+0x9e58>
  410bcb:	mov    rax,QWORD PTR [rsp+0x28]
  410bd0:	cmp    DWORD PTR [rax],0x0
  410bd3:	movzx  eax,BYTE PTR [r15+0x5]
  410bd8:	je     410cd5 <main@@Base+0x9c05>
  410bde:	cmp    al,0x21
  410be0:	jl     410bed <main@@Base+0x9b1d>
  410be2:	mov    rbx,r15
  410be5:	cmp    al,0x3a
  410be7:	jne    410f28 <main@@Base+0x9e58>
  410bed:	lea    rsi,[r15+0x5]
  410bf1:	mov    rax,QWORD PTR [rsp+0x28]
  410bf6:	mov    DWORD PTR [rax],0x0
  410bfc:	jmp    410ce4 <main@@Base+0x9c14>
  410c01:	mov    rdx,rax
  410c04:	movabs rsi,0xffffff0000000000
  410c0e:	and    rdx,rsi
  410c11:	movabs rsi,0x76616c0000000000
  410c1b:	cmp    rdx,rsi
  410c1e:	jne    410c70 <main@@Base+0x9ba0>
  410c20:	mov    rbx,r15
  410c23:	cmp    rcx,0x4
  410c27:	jl     41105f <main@@Base+0x9f8f>
  410c2d:	mov    rax,QWORD PTR [rsp+0x28]
  410c32:	cmp    DWORD PTR [rax],0x0
  410c35:	movzx  eax,BYTE PTR [r15+0x3]
  410c3a:	je     410d0f <main@@Base+0x9c3f>
  410c40:	cmp    al,0x21
  410c42:	jl     410c4f <main@@Base+0x9b7f>
  410c44:	mov    rbx,r15
  410c47:	cmp    al,0x3a
  410c49:	jne    41105f <main@@Base+0x9f8f>
  410c4f:	lea    rsi,[r15+0x3]
  410c53:	mov    rax,QWORD PTR [rsp+0x28]
  410c58:	mov    DWORD PTR [rax],0x0
  410c5e:	jmp    410d1e <main@@Base+0x9c4e>
  410c63:	mov    rdi,QWORD PTR [rsp+0x10]
  410c68:	mov    rsi,r15
  410c6b:	jmp    411217 <main@@Base+0xa147>
  410c70:	movabs rdx,0xffff000000000000
  410c7a:	and    rax,rdx
  410c7d:	movabs rdx,0x6964000000000000
  410c87:	cmp    rax,rdx
  410c8a:	jne    41120a <main@@Base+0xa13a>
  410c90:	mov    rax,r15
  410c93:	cmp    rcx,0x3
  410c97:	jl     4111bb <main@@Base+0xa0eb>
  410c9d:	mov    rax,QWORD PTR [rsp+0x28]
  410ca2:	cmp    DWORD PTR [rax],0x0
  410ca5:	movzx  ecx,BYTE PTR [r15+0x2]
  410caa:	je     410e57 <main@@Base+0x9d87>
  410cb0:	cmp    cl,0x21
  410cb3:	jl     410cc1 <main@@Base+0x9bf1>
  410cb5:	mov    rax,r15
  410cb8:	cmp    cl,0x3a
  410cbb:	jne    4111bb <main@@Base+0xa0eb>
  410cc1:	lea    rsi,[r15+0x2]
  410cc5:	mov    rax,QWORD PTR [rsp+0x28]
  410cca:	mov    DWORD PTR [rax],0x0
  410cd0:	jmp    410e67 <main@@Base+0x9d97>
  410cd5:	mov    rbx,r15
  410cd8:	cmp    al,0x22
  410cda:	jne    410f28 <main@@Base+0x9e58>
  410ce0:	lea    rsi,[r15+0x6]
  410ce4:	mov    rax,QWORD PTR [rsp+0x8]
  410ce9:	sub    rax,rsi
  410cec:	cmp    rax,0x2
  410cf0:	jl     410d59 <main@@Base+0x9c89>
  410cf2:	cmp    BYTE PTR [rsi],0x20
  410cf5:	jg     410d6b <main@@Base+0x9c9b>
  410cf7:	jne    410d59 <main@@Base+0x9c89>
  410cf9:	cmp    BYTE PTR [rsi+0x1],0x20
  410cfd:	jle    410d59 <main@@Base+0x9c89>
  410cff:	add    rsi,0x1
  410d03:	cmp    rsi,QWORD PTR [rsp+0x8]
  410d08:	jne    410d76 <main@@Base+0x9ca6>
  410d0a:	jmp    410e25 <main@@Base+0x9d55>
  410d0f:	mov    rbx,r15
  410d12:	cmp    al,0x22
  410d14:	jne    41105f <main@@Base+0x9f8f>
  410d1a:	lea    rsi,[r15+0x4]
  410d1e:	mov    rax,QWORD PTR [rsp+0x8]
  410d23:	sub    rax,rsi
  410d26:	cmp    rax,0x2
  410d2a:	jl     410dc3 <main@@Base+0x9cf3>
  410d30:	cmp    BYTE PTR [rsi],0x20
  410d33:	jg     410dd5 <main@@Base+0x9d05>
  410d39:	jne    410dc3 <main@@Base+0x9cf3>
  410d3f:	cmp    BYTE PTR [rsi+0x1],0x20
  410d43:	jle    410dc3 <main@@Base+0x9cf3>
  410d45:	add    rsi,0x1
  410d49:	cmp    rsi,QWORD PTR [rsp+0x8]
  410d4e:	jne    410ddc <main@@Base+0x9d0c>
  410d54:	jmp    410e3e <main@@Base+0x9d6e>
  410d59:	mov    rdi,QWORD PTR [rsp+0x10]
  410d5e:	mov    rdx,QWORD PTR [rsp+0x8]
  410d63:	call   425750 <flatcc_json_parser_space_ext@@Base>
  410d68:	mov    rsi,rax
  410d6b:	cmp    rsi,QWORD PTR [rsp+0x8]
  410d70:	je     410e25 <main@@Base+0x9d55>
  410d76:	cmp    BYTE PTR [rsi],0x3a
  410d79:	jne    410e25 <main@@Base+0x9d55>
  410d7f:	lea    rbx,[rsi+0x1]
  410d83:	mov    rax,QWORD PTR [rsp+0x8]
  410d88:	sub    rax,rbx
  410d8b:	cmp    rax,0x2
  410d8f:	jl     410f13 <main@@Base+0x9e43>
  410d95:	cmp    BYTE PTR [rbx],0x20
  410d98:	jg     410f28 <main@@Base+0x9e58>
  410d9e:	jne    410f13 <main@@Base+0x9e43>
  410da4:	cmp    BYTE PTR [rsi+0x2],0x20
  410da8:	jle    410f13 <main@@Base+0x9e43>
  410dae:	add    rsi,0x2
  410db2:	mov    rbx,rsi
  410db5:	cmp    r15,rbx
  410db8:	jne    410f31 <main@@Base+0x9e61>
  410dbe:	jmp    41120a <main@@Base+0xa13a>
  410dc3:	mov    rdi,QWORD PTR [rsp+0x10]
  410dc8:	mov    rdx,QWORD PTR [rsp+0x8]
  410dcd:	call   425750 <flatcc_json_parser_space_ext@@Base>
  410dd2:	mov    rsi,rax
  410dd5:	cmp    rsi,QWORD PTR [rsp+0x8]
  410dda:	je     410e3e <main@@Base+0x9d6e>
  410ddc:	cmp    BYTE PTR [rsi],0x3a
  410ddf:	jne    410e3e <main@@Base+0x9d6e>
  410de1:	lea    rbx,[rsi+0x1]
  410de5:	mov    rax,QWORD PTR [rsp+0x8]
  410dea:	sub    rax,rbx
  410ded:	cmp    rax,0x2
  410df1:	jl     41104a <main@@Base+0x9f7a>
  410df7:	cmp    BYTE PTR [rbx],0x20
  410dfa:	jg     41105f <main@@Base+0x9f8f>
  410e00:	jne    41104a <main@@Base+0x9f7a>
  410e06:	cmp    BYTE PTR [rsi+0x2],0x20
  410e0a:	jle    41104a <main@@Base+0x9f7a>
  410e10:	add    rsi,0x2
  410e14:	mov    rbx,rsi
  410e17:	cmp    r15,rbx
  410e1a:	jne    411068 <main@@Base+0x9f98>
  410e20:	jmp    41120a <main@@Base+0xa13a>
  410e25:	mov    ecx,0x4
  410e2a:	mov    rdi,QWORD PTR [rsp+0x10]
  410e2f:	mov    rdx,QWORD PTR [rsp+0x8]
  410e34:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  410e39:	jmp    410f25 <main@@Base+0x9e55>
  410e3e:	mov    ecx,0x4
  410e43:	mov    rdi,QWORD PTR [rsp+0x10]
  410e48:	mov    rdx,QWORD PTR [rsp+0x8]
  410e4d:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  410e52:	jmp    41105c <main@@Base+0x9f8c>
  410e57:	mov    rax,r15
  410e5a:	cmp    cl,0x22
  410e5d:	jne    4111bb <main@@Base+0xa0eb>
  410e63:	lea    rsi,[r15+0x3]
  410e67:	mov    rax,QWORD PTR [rsp+0x8]
  410e6c:	sub    rax,rsi
  410e6f:	cmp    rax,0x2
  410e73:	jl     410e8f <main@@Base+0x9dbf>
  410e75:	cmp    BYTE PTR [rsi],0x20
  410e78:	jg     410ea1 <main@@Base+0x9dd1>
  410e7a:	jne    410e8f <main@@Base+0x9dbf>
  410e7c:	cmp    BYTE PTR [rsi+0x1],0x20
  410e80:	jle    410e8f <main@@Base+0x9dbf>
  410e82:	add    rsi,0x1
  410e86:	cmp    rsi,QWORD PTR [rsp+0x8]
  410e8b:	jne    410ea8 <main@@Base+0x9dd8>
  410e8d:	jmp    410ef1 <main@@Base+0x9e21>
  410e8f:	mov    rdi,QWORD PTR [rsp+0x10]
  410e94:	mov    rdx,QWORD PTR [rsp+0x8]
  410e99:	call   425750 <flatcc_json_parser_space_ext@@Base>
  410e9e:	mov    rsi,rax
  410ea1:	cmp    rsi,QWORD PTR [rsp+0x8]
  410ea6:	je     410ef1 <main@@Base+0x9e21>
  410ea8:	cmp    BYTE PTR [rsi],0x3a
  410eab:	jne    410ef1 <main@@Base+0x9e21>
  410ead:	lea    rax,[rsi+0x1]
  410eb1:	mov    rcx,QWORD PTR [rsp+0x8]
  410eb6:	sub    rcx,rax
  410eb9:	cmp    rcx,0x2
  410ebd:	jl     4111a9 <main@@Base+0xa0d9>
  410ec3:	cmp    BYTE PTR [rax],0x20
  410ec6:	jg     4111bb <main@@Base+0xa0eb>
  410ecc:	jne    4111a9 <main@@Base+0xa0d9>
  410ed2:	cmp    BYTE PTR [rsi+0x2],0x20
  410ed6:	jle    4111a9 <main@@Base+0xa0d9>
  410edc:	add    rsi,0x2
  410ee0:	mov    rax,rsi
  410ee3:	cmp    r15,rax
  410ee6:	jne    4111c0 <main@@Base+0xa0f0>
  410eec:	jmp    41120a <main@@Base+0xa13a>
  410ef1:	mov    ecx,0x4
  410ef6:	mov    rdi,QWORD PTR [rsp+0x10]
  410efb:	mov    rdx,QWORD PTR [rsp+0x8]
  410f00:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  410f05:	cmp    r15,rax
  410f08:	jne    4111c0 <main@@Base+0xa0f0>
  410f0e:	jmp    41120a <main@@Base+0xa13a>
  410f13:	mov    rdi,QWORD PTR [rsp+0x10]
  410f18:	mov    rsi,rbx
  410f1b:	mov    rdx,QWORD PTR [rsp+0x8]
  410f20:	call   425750 <flatcc_json_parser_space_ext@@Base>
  410f25:	mov    rbx,rax
  410f28:	cmp    r15,rbx
  410f2b:	je     41120a <main@@Base+0xa13a>
  410f31:	mov    QWORD PTR [rsp+0x30],0x0
  410f3a:	mov    DWORD PTR [rsp+0x40],0x0
  410f42:	mov    WORD PTR [rsp+0x1c],0x0
  410f49:	cmp    rbx,QWORD PTR [rsp+0x8]
  410f4e:	je     410f82 <main@@Base+0x9eb2>
  410f50:	mov    rdi,QWORD PTR [rsp+0x10]
  410f55:	mov    rsi,rbx
  410f58:	mov    rdx,QWORD PTR [rsp+0x8]
  410f5d:	lea    rcx,[rsp+0x40]
  410f62:	lea    r8,[rsp+0x30]
  410f67:	call   427360 <flatcc_json_parser_integer@@Base>
  410f6c:	cmp    rax,rbx
  410f6f:	je     410f90 <main@@Base+0x9ec0>
  410f71:	mov    r12,rax
  410f74:	cmp    DWORD PTR [rsp+0x40],0x0
  410f79:	je     410f9c <main@@Base+0x9ecc>
  410f7b:	mov    ecx,0x8
  410f80:	jmp    410fb3 <main@@Base+0x9ee3>
  410f82:	xor    ebp,ebp
  410f84:	mov    r12,QWORD PTR [rsp+0x8]
  410f89:	cmp    rbx,r12
  410f8c:	jne    411009 <main@@Base+0x9f39>
  410f8e:	jmp    410fcf <main@@Base+0x9eff>
  410f90:	xor    ebp,ebp
  410f92:	mov    r12,rbx
  410f95:	cmp    rbx,r12
  410f98:	jne    411009 <main@@Base+0x9f39>
  410f9a:	jmp    410fcf <main@@Base+0x9eff>
  410f9c:	mov    rbp,QWORD PTR [rsp+0x30]
  410fa1:	cmp    rbp,0x10000
  410fa8:	jb     411196 <main@@Base+0xa0c6>
  410fae:	mov    ecx,0x7
  410fb3:	mov    rdi,QWORD PTR [rsp+0x10]
  410fb8:	mov    rsi,r12
  410fbb:	mov    rdx,QWORD PTR [rsp+0x8]
  410fc0:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  410fc5:	mov    r12,rax
  410fc8:	xor    ebp,ebp
  410fca:	cmp    rbx,r12
  410fcd:	jne    411009 <main@@Base+0x9f39>
  410fcf:	mov    rdi,QWORD PTR [rsp+0x10]
  410fd4:	mov    rsi,rbx
  410fd7:	mov    rdx,QWORD PTR [rsp+0x8]
  410fdc:	lea    rcx,[rip+0x3379d]        # 444780 <__data_start@@Base+0x6d0>
  410fe3:	lea    r8,[rsp+0x1c]
  410fe8:	call   41d930 <main@@Base+0x16860>
  410fed:	mov    r12,rax
  410ff0:	cmp    rax,rbx
  410ff3:	je     40faa9 <main@@Base+0x89d9>
  410ff9:	cmp    r12,QWORD PTR [rsp+0x8]
  410ffe:	je     40faa9 <main@@Base+0x89d9>
  411004:	movzx  ebp,WORD PTR [rsp+0x1c]
  411009:	test   bp,bp
  41100c:	jne    41101d <main@@Base+0x9f4d>
  41100e:	mov    rax,QWORD PTR [rsp+0x10]
  411013:	test   BYTE PTR [rax+0x10],0x2
  411017:	je     411203 <main@@Base+0xa133>
  41101d:	mov    rax,QWORD PTR [rsp+0x10]
  411022:	mov    rdi,QWORD PTR [rax]
  411025:	mov    esi,0x2
  41102a:	mov    edx,0x2
  41102f:	mov    ecx,0x2
  411034:	call   421f20 <flatcc_builder_table_add@@Base>
  411039:	test   rax,rax
  41103c:	je     40faa9 <main@@Base+0x89d9>
  411042:	mov    WORD PTR [rax],bp
  411045:	jmp    411203 <main@@Base+0xa133>
  41104a:	mov    rdi,QWORD PTR [rsp+0x10]
  41104f:	mov    rsi,rbx
  411052:	mov    rdx,QWORD PTR [rsp+0x8]
  411057:	call   425750 <flatcc_json_parser_space_ext@@Base>
  41105c:	mov    rbx,rax
  41105f:	cmp    r15,rbx
  411062:	je     41120a <main@@Base+0xa13a>
  411068:	mov    QWORD PTR [rsp+0x30],0x0
  411071:	mov    DWORD PTR [rsp+0x1c],0x0
  411079:	mov    QWORD PTR [rsp+0x40],0x0
  411082:	cmp    rbx,QWORD PTR [rsp+0x8]
  411087:	je     4110cf <main@@Base+0x9fff>
  411089:	mov    rdi,QWORD PTR [rsp+0x10]
  41108e:	mov    rsi,rbx
  411091:	mov    rdx,QWORD PTR [rsp+0x8]
  411096:	lea    rcx,[rsp+0x1c]
  41109b:	lea    r8,[rsp+0x30]
  4110a0:	call   427360 <flatcc_json_parser_integer@@Base>
  4110a5:	cmp    rax,rbx
  4110a8:	je     4110dd <main@@Base+0xa00d>
  4110aa:	mov    r12,rax
  4110ad:	mov    rbp,QWORD PTR [rsp+0x30]
  4110b2:	cmp    DWORD PTR [rsp+0x1c],0x0
  4110b7:	je     4110e9 <main@@Base+0xa019>
  4110b9:	movabs rax,0x8000000000000000
  4110c3:	cmp    rbp,rax
  4110c6:	jbe    411111 <main@@Base+0xa041>
  4110c8:	mov    ecx,0x8
  4110cd:	jmp    4110f3 <main@@Base+0xa023>
  4110cf:	xor    ebp,ebp
  4110d1:	mov    r12,QWORD PTR [rsp+0x8]
  4110d6:	cmp    rbx,r12
  4110d9:	jne    411158 <main@@Base+0xa088>
  4110db:	jmp    41111e <main@@Base+0xa04e>
  4110dd:	xor    ebp,ebp
  4110df:	mov    r12,rbx
  4110e2:	cmp    rbx,r12
  4110e5:	jne    411158 <main@@Base+0xa088>
  4110e7:	jmp    41111e <main@@Base+0xa04e>
  4110e9:	test   rbp,rbp
  4110ec:	jns    411114 <main@@Base+0xa044>
  4110ee:	mov    ecx,0x7
  4110f3:	mov    rdi,QWORD PTR [rsp+0x10]
  4110f8:	mov    rsi,r12
  4110fb:	mov    rdx,QWORD PTR [rsp+0x8]
  411100:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  411105:	mov    r12,rax
  411108:	xor    ebp,ebp
  41110a:	cmp    rbx,r12
  41110d:	jne    411158 <main@@Base+0xa088>
  41110f:	jmp    41111e <main@@Base+0xa04e>
  411111:	neg    rbp
  411114:	mov    QWORD PTR [rsp+0x40],rbp
  411119:	cmp    rbx,r12
  41111c:	jne    411158 <main@@Base+0xa088>
  41111e:	mov    rdi,QWORD PTR [rsp+0x10]
  411123:	mov    rsi,rbx
  411126:	mov    rdx,QWORD PTR [rsp+0x8]
  41112b:	lea    rcx,[rip+0x3366e]        # 4447a0 <__data_start@@Base+0x6f0>
  411132:	lea    r8,[rsp+0x40]
  411137:	call   415f20 <main@@Base+0xee50>
  41113c:	mov    r12,rax
  41113f:	cmp    rax,rbx
  411142:	je     40faa9 <main@@Base+0x89d9>
  411148:	cmp    r12,QWORD PTR [rsp+0x8]
  41114d:	je     40faa9 <main@@Base+0x89d9>
  411153:	mov    rbp,QWORD PTR [rsp+0x40]
  411158:	test   rbp,rbp
  41115b:	jne    41116c <main@@Base+0xa09c>
  41115d:	mov    rax,QWORD PTR [rsp+0x10]
  411162:	test   BYTE PTR [rax+0x10],0x2
  411166:	je     411203 <main@@Base+0xa133>
  41116c:	mov    rax,QWORD PTR [rsp+0x10]
  411171:	mov    rdi,QWORD PTR [rax]
  411174:	mov    esi,0x1
  411179:	mov    edx,0x8
  41117e:	mov    ecx,0x8
  411183:	call   421f20 <flatcc_builder_table_add@@Base>
  411188:	test   rax,rax
  41118b:	je     40faa9 <main@@Base+0x89d9>
  411191:	mov    QWORD PTR [rax],rbp
  411194:	jmp    411203 <main@@Base+0xa133>
  411196:	mov    WORD PTR [rsp+0x1c],bp
  41119b:	cmp    rbx,r12
  41119e:	jne    411009 <main@@Base+0x9f39>
  4111a4:	jmp    410fcf <main@@Base+0x9eff>
  4111a9:	mov    rdi,QWORD PTR [rsp+0x10]
  4111ae:	mov    rsi,rax
  4111b1:	mov    rdx,QWORD PTR [rsp+0x8]
  4111b6:	call   425750 <flatcc_json_parser_space_ext@@Base>
  4111bb:	cmp    r15,rax
  4111be:	je     41120a <main@@Base+0xa13a>
  4111c0:	mov    rdi,QWORD PTR [rsp+0x10]
  4111c5:	mov    rsi,rax
  4111c8:	mov    rdx,QWORD PTR [rsp+0x8]
  4111cd:	lea    rcx,[rsp+0x54]
  4111d2:	call   427830 <flatcc_json_parser_build_string@@Base>
  4111d7:	mov    r12,rax
  4111da:	cmp    DWORD PTR [rsp+0x54],0x0
  4111df:	je     40faa9 <main@@Base+0x89d9>
  4111e5:	mov    rax,QWORD PTR [rsp+0x10]
  4111ea:	mov    rdi,QWORD PTR [rax]
  4111ed:	xor    esi,esi
  4111ef:	call   421dc0 <flatcc_builder_table_add_offset@@Base>
  4111f4:	test   rax,rax
  4111f7:	je     40faa9 <main@@Base+0x89d9>
  4111fd:	mov    ecx,DWORD PTR [rsp+0x54]
  411201:	mov    DWORD PTR [rax],ecx
  411203:	mov    r13,QWORD PTR [rsp+0x8]
  411208:	jmp    411222 <main@@Base+0xa152>
  41120a:	mov    rdi,QWORD PTR [rsp+0x10]
  41120f:	mov    rsi,r15
  411212:	mov    r13,QWORD PTR [rsp+0x8]
  411217:	mov    rdx,r13
  41121a:	call   425cc0 <flatcc_json_parser_unmatched_symbol@@Base>
  41121f:	mov    r12,rax
  411222:	mov    rax,r13
  411225:	sub    rax,r12
  411228:	cmp    rax,0x2
  41122c:	jl     411252 <main@@Base+0xa182>
  41122e:	cmp    BYTE PTR [r12],0x20
  411233:	jg     411243 <main@@Base+0xa173>
  411235:	jne    411252 <main@@Base+0xa182>
  411237:	cmp    BYTE PTR [r12+0x1],0x20
  41123d:	jle    411252 <main@@Base+0xa182>
  41123f:	add    r12,0x1
  411243:	mov    r15,QWORD PTR [rsp+0x10]
  411248:	cmp    r12,r13
  41124b:	jne    411271 <main@@Base+0xa1a1>
  41124d:	jmp    41180d <main@@Base+0xa73d>
  411252:	mov    r15,QWORD PTR [rsp+0x10]
  411257:	mov    rdi,r15
  41125a:	mov    rsi,r12
  41125d:	mov    rdx,r13
  411260:	call   425750 <flatcc_json_parser_space_ext@@Base>
  411265:	mov    r12,rax
  411268:	cmp    r12,r13
  41126b:	je     41180d <main@@Base+0xa73d>
  411271:	movzx  eax,BYTE PTR [r12]
  411276:	cmp    al,0x2c
  411278:	jne    4118b9 <main@@Base+0xa7e9>
  41127e:	lea    rsi,[r12+0x1]
  411283:	mov    rax,r13
  411286:	sub    rax,rsi
  411289:	cmp    rax,0x2
  41128d:	jl     4112af <main@@Base+0xa1df>
  41128f:	cmp    BYTE PTR [rsi],0x20
  411292:	jg     4112bd <main@@Base+0xa1ed>
  411294:	jne    4112af <main@@Base+0xa1df>
  411296:	cmp    BYTE PTR [r12+0x2],0x20
  41129c:	jle    4112af <main@@Base+0xa1df>
  41129e:	add    r12,0x2
  4112a2:	mov    rsi,r12
  4112a5:	cmp    rsi,r13
  4112a8:	jne    4112c6 <main@@Base+0xa1f6>
  4112aa:	jmp    411915 <main@@Base+0xa845>
  4112af:	mov    rdi,r15
  4112b2:	mov    rdx,r13
  4112b5:	call   425750 <flatcc_json_parser_space_ext@@Base>
  4112ba:	mov    rsi,rax
  4112bd:	cmp    rsi,r13
  4112c0:	je     411915 <main@@Base+0xa845>
  4112c6:	cmp    BYTE PTR [rsi],0x7d
  4112c9:	jne    410aab <main@@Base+0x99db>
  4112cf:	lea    r14,[rsi+0x1]
  4112d3:	sub    r13,r14
  4112d6:	cmp    r13,0x2
  4112da:	jl     411c14 <main@@Base+0xab44>
  4112e0:	cmp    BYTE PTR [r14],0x20
  4112e4:	jg     4118e2 <main@@Base+0xa812>
  4112ea:	jne    411c14 <main@@Base+0xab44>
  4112f0:	cmp    BYTE PTR [rsi+0x2],0x20
  4112f4:	jle    411c14 <main@@Base+0xab44>
  4112fa:	add    rsi,0x2
  4112fe:	mov    r14,rsi
  411301:	jmp    4118e2 <main@@Base+0xa812>
  411306:	lea    r14,[r12+0x1]
  41130b:	mov    rax,QWORD PTR [rsp+0x8]
  411310:	sub    rax,r14
  411313:	cmp    rax,0x2
  411317:	jl     411339 <main@@Base+0xa269>
  411319:	cmp    BYTE PTR [r14],0x20
  41131d:	jg     4117e6 <main@@Base+0xa716>
  411323:	jne    411339 <main@@Base+0xa269>
  411325:	cmp    BYTE PTR [r12+0x2],0x20
  41132b:	jle    411339 <main@@Base+0xa269>
  41132d:	add    r12,0x2
  411331:	mov    r14,r12
  411334:	jmp    4117e6 <main@@Base+0xa716>
  411339:	mov    rdi,QWORD PTR [rsp+0x10]
  41133e:	mov    rsi,r14
  411341:	mov    rdx,QWORD PTR [rsp+0x8]
  411346:	call   425750 <flatcc_json_parser_space_ext@@Base>
  41134b:	jmp    4117e3 <main@@Base+0xa713>
  411350:	mov    r15,QWORD PTR [rsp+0x10]
  411355:	mov    rdi,r15
  411358:	mov    rsi,r14
  41135b:	mov    r13,QWORD PTR [rsp+0x8]
  411360:	mov    rdx,r13
  411363:	call   425750 <flatcc_json_parser_space_ext@@Base>
  411368:	jmp    40f63e <main@@Base+0x856e>
  41136d:	mov    r15,QWORD PTR [rsp+0x10]
  411372:	mov    rdi,r15
  411375:	mov    rsi,r14
  411378:	mov    r13,QWORD PTR [rsp+0x8]
  41137d:	mov    rdx,r13
  411380:	call   425750 <flatcc_json_parser_space_ext@@Base>
  411385:	mov    r14,rax
  411388:	jmp    411a56 <main@@Base+0xa986>
  41138d:	mov    ecx,0x9
  411392:	mov    r15,QWORD PTR [rsp+0x10]
  411397:	mov    rdi,r15
  41139a:	mov    rsi,rdx
  41139d:	mov    r13,QWORD PTR [rsp+0x8]
  4113a2:	jmp    40d3b6 <main@@Base+0x62e6>
  4113a7:	jne    4113bd <main@@Base+0xa2ed>
  4113a9:	cmp    BYTE PTR [r12+0x2],0x20
  4113af:	jle    4113bd <main@@Base+0xa2ed>
  4113b1:	add    r12,0x2
  4113b5:	mov    r14,r12
  4113b8:	jmp    40f0b8 <main@@Base+0x7fe8>
  4113bd:	mov    r15,QWORD PTR [rsp+0x10]
  4113c2:	mov    rdi,r15
  4113c5:	mov    rsi,r14
  4113c8:	mov    r13,QWORD PTR [rsp+0x8]
  4113cd:	mov    rdx,r13
  4113d0:	call   425750 <flatcc_json_parser_space_ext@@Base>
  4113d5:	jmp    40b79f <main@@Base+0x46cf>
  4113da:	mov    r14,r13
  4113dd:	jmp    40d926 <main@@Base+0x6856>
  4113e2:	cmp    al,0x7d
  4113e4:	jne    4119a0 <main@@Base+0xa8d0>
  4113ea:	lea    r14,[r12+0x1]
  4113ef:	mov    rax,QWORD PTR [rsp+0x8]
  4113f4:	sub    rax,r14
  4113f7:	cmp    rax,0x2
  4113fb:	jl     411bae <main@@Base+0xaade>
  411401:	cmp    BYTE PTR [r14],0x20
  411405:	jle    411b98 <main@@Base+0xaac8>
  41140b:	mov    r15,QWORD PTR [rsp+0x10]
  411410:	mov    r13,QWORD PTR [rsp+0x8]
  411415:	jmp    40d926 <main@@Base+0x6856>
  41141a:	mov    r12,rax
  41141d:	mov    BYTE PTR [rsp+0x1c],0x0
  411422:	mov    rax,QWORD PTR [rsp+0x10]
  411427:	mov    rdi,QWORD PTR [rax]
  41142a:	mov    esi,0x1
  41142f:	call   41fdc0 <flatcc_builder_extend_vector@@Base>
  411434:	test   rax,rax
  411437:	je     411d4f <main@@Base+0xac7f>
  41143d:	mov    rbx,rax
  411440:	mov    QWORD PTR [rsp+0x30],0x0
  411449:	mov    DWORD PTR [rsp+0x40],0x0
  411451:	mov    BYTE PTR [rsp+0x1c],0x0
  411456:	mov    rdx,QWORD PTR [rsp+0x8]
  41145b:	cmp    r12,rdx
  41145e:	je     41148a <main@@Base+0xa3ba>
  411460:	mov    rdi,QWORD PTR [rsp+0x10]
  411465:	mov    rsi,r12
  411468:	lea    rcx,[rsp+0x40]
  41146d:	lea    r8,[rsp+0x30]
  411472:	call   427360 <flatcc_json_parser_integer@@Base>
  411477:	cmp    rax,r12
  41147a:	je     411496 <main@@Base+0xa3c6>
  41147c:	cmp    DWORD PTR [rsp+0x40],0x0
  411481:	je     4114a2 <main@@Base+0xa3d2>
  411483:	mov    ecx,0x8
  411488:	jmp    4114b9 <main@@Base+0xa3e9>
  41148a:	xor    ecx,ecx
  41148c:	mov    rax,rdx
  41148f:	cmp    r12,rax
  411492:	jne    411509 <main@@Base+0xa439>
  411494:	jmp    4114d2 <main@@Base+0xa402>
  411496:	xor    ecx,ecx
  411498:	mov    rax,r12
  41149b:	cmp    r12,rax
  41149e:	jne    411509 <main@@Base+0xa439>
  4114a0:	jmp    4114d2 <main@@Base+0xa402>
  4114a2:	mov    rcx,QWORD PTR [rsp+0x30]
  4114a7:	cmp    rcx,0x100
  4114ae:	jb     4115f8 <main@@Base+0xa528>
  4114b4:	mov    ecx,0x7
  4114b9:	mov    rdi,QWORD PTR [rsp+0x10]
  4114be:	mov    rsi,rax
  4114c1:	mov    rdx,QWORD PTR [rsp+0x8]
  4114c6:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  4114cb:	xor    ecx,ecx
  4114cd:	cmp    r12,rax
  4114d0:	jne    411509 <main@@Base+0xa439>
  4114d2:	mov    rdi,QWORD PTR [rsp+0x10]
  4114d7:	mov    rsi,r12
  4114da:	mov    rdx,QWORD PTR [rsp+0x8]
  4114df:	lea    rcx,[rip+0x32e3a]        # 444320 <__data_start@@Base+0x270>
  4114e6:	lea    r8,[rsp+0x1c]
  4114eb:	call   413d70 <main@@Base+0xcca0>
  4114f0:	cmp    rax,r12
  4114f3:	je     411d88 <main@@Base+0xacb8>
  4114f9:	cmp    rax,QWORD PTR [rsp+0x8]
  4114fe:	je     411d88 <main@@Base+0xacb8>
  411504:	movzx  ecx,BYTE PTR [rsp+0x1c]
  411509:	mov    BYTE PTR [rbx],cl
  41150b:	mov    r14,QWORD PTR [rsp+0x8]
  411510:	mov    rcx,r14
  411513:	sub    rcx,rax
  411516:	cmp    rcx,0x2
  41151a:	jl     41154b <main@@Base+0xa47b>
  41151c:	cmp    BYTE PTR [rax],0x20
  41151f:	jle    411530 <main@@Base+0xa460>
  411521:	mov    r14,QWORD PTR [rsp+0x8]
  411526:	cmp    rax,r14
  411529:	jne    411564 <main@@Base+0xa494>
  41152b:	jmp    411af8 <main@@Base+0xaa28>
  411530:	mov    r14,QWORD PTR [rsp+0x8]
  411535:	jne    41154b <main@@Base+0xa47b>
  411537:	cmp    BYTE PTR [rax+0x1],0x20
  41153b:	jle    41154b <main@@Base+0xa47b>
  41153d:	add    rax,0x1
  411541:	cmp    rax,r14
  411544:	jne    411564 <main@@Base+0xa494>
  411546:	jmp    411af8 <main@@Base+0xaa28>
  41154b:	mov    rdi,QWORD PTR [rsp+0x10]
  411550:	mov    rsi,rax
  411553:	mov    rdx,r14
  411556:	call   425750 <flatcc_json_parser_space_ext@@Base>
  41155b:	cmp    rax,r14
  41155e:	je     411af8 <main@@Base+0xaa28>
  411564:	movzx  ecx,BYTE PTR [rax]
  411567:	cmp    cl,0x2c
  41156a:	jne    411a17 <main@@Base+0xa947>
  411570:	lea    r12,[rax+0x1]
  411574:	mov    rcx,r14
  411577:	sub    rcx,r12
  41157a:	cmp    rcx,0x2
  41157e:	jl     4115a9 <main@@Base+0xa4d9>
  411580:	cmp    BYTE PTR [r12],0x20
  411585:	jle    411596 <main@@Base+0xa4c6>
  411587:	mov    r14,QWORD PTR [rsp+0x8]
  41158c:	cmp    r12,r14
  41158f:	jne    4115c5 <main@@Base+0xa4f5>
  411591:	jmp    411aa0 <main@@Base+0xa9d0>
  411596:	mov    r14,QWORD PTR [rsp+0x8]
  41159b:	jne    4115a9 <main@@Base+0xa4d9>
  41159d:	cmp    BYTE PTR [rax+0x2],0x20
  4115a1:	jle    4115a9 <main@@Base+0xa4d9>
  4115a3:	add    rax,0x2
  4115a7:	jmp    4115b9 <main@@Base+0xa4e9>
  4115a9:	mov    rdi,QWORD PTR [rsp+0x10]
  4115ae:	mov    rsi,r12
  4115b1:	mov    rdx,r14
  4115b4:	call   425750 <flatcc_json_parser_space_ext@@Base>
  4115b9:	mov    r12,rax
  4115bc:	cmp    r12,r14
  4115bf:	je     411aa0 <main@@Base+0xa9d0>
  4115c5:	cmp    BYTE PTR [r12],0x5d
  4115ca:	je     411ab7 <main@@Base+0xa9e7>
  4115d0:	mov    BYTE PTR [rsp+0x1c],0x0
  4115d5:	mov    rax,QWORD PTR [rsp+0x10]
  4115da:	mov    rdi,QWORD PTR [rax]
  4115dd:	mov    esi,0x1
  4115e2:	call   41fdc0 <flatcc_builder_extend_vector@@Base>
  4115e7:	mov    rbx,rax
  4115ea:	test   rax,rax
  4115ed:	jne    411440 <main@@Base+0xa370>
  4115f3:	jmp    411d4f <main@@Base+0xac7f>
  4115f8:	mov    BYTE PTR [rsp+0x1c],cl
  4115fc:	cmp    r12,rax
  4115ff:	jne    411509 <main@@Base+0xa439>
  411605:	jmp    4114d2 <main@@Base+0xa402>
  41160a:	mov    ecx,0xa
  41160f:	mov    rdi,r15
  411612:	mov    rsi,r13
  411615:	jmp    40d91b <main@@Base+0x684b>
  41161a:	mov    r14,r13
  41161d:	jmp    40e268 <main@@Base+0x7198>
  411622:	cmp    al,0x5d
  411624:	jne    4119ba <main@@Base+0xa8ea>
  41162a:	lea    r14,[r12+0x1]
  41162f:	mov    rax,QWORD PTR [rsp+0x8]
  411634:	sub    rax,r14
  411637:	cmp    rax,0x2
  41163b:	jl     411be1 <main@@Base+0xab11>
  411641:	cmp    BYTE PTR [r14],0x20
  411645:	jle    411bcb <main@@Base+0xaafb>
  41164b:	mov    r15,QWORD PTR [rsp+0x10]
  411650:	mov    r13,QWORD PTR [rsp+0x8]
  411655:	jmp    40e268 <main@@Base+0x7198>
  41165a:	mov    ecx,0x9
  41165f:	mov    r15,QWORD PTR [rsp+0x10]
  411664:	mov    rdi,r15
  411667:	mov    rsi,r12
  41166a:	mov    r13,QWORD PTR [rsp+0x8]
  41166f:	jmp    40d2e3 <main@@Base+0x6213>
  411674:	mov    ecx,0x9
  411679:	mov    r15,QWORD PTR [rsp+0x10]
  41167e:	mov    rdi,r15
  411681:	mov    rsi,r12
  411684:	mov    r13,QWORD PTR [rsp+0x8]
  411689:	jmp    40d47a <main@@Base+0x63aa>
  41168e:	mov    ecx,0x9
  411693:	mov    rdi,r15
  411696:	mov    rsi,r13
  411699:	jmp    40e25d <main@@Base+0x718d>
  41169e:	mov    r14,r13
  4116a1:	jmp    40e049 <main@@Base+0x6f79>
  4116a6:	mov    DWORD PTR [rsp+0x1c],eax
  4116aa:	mov    r12d,eax
  4116ad:	mov    r15,QWORD PTR [rsp+0x10]
  4116b2:	cmp    rbx,r14
  4116b5:	jne    4116f4 <main@@Base+0xa624>
  4116b7:	mov    rdi,r15
  4116ba:	mov    rsi,rbx
  4116bd:	mov    rdx,QWORD PTR [rsp+0x8]
  4116c2:	lea    rcx,[rip+0x32bf7]        # 4442c0 <__data_start@@Base+0x210>
  4116c9:	lea    r8,[rsp+0x1c]
  4116ce:	call   416110 <main@@Base+0xf040>
  4116d3:	mov    r14,rax
  4116d6:	cmp    rax,rbx
  4116d9:	je     411d4c <main@@Base+0xac7c>
  4116df:	cmp    r14,QWORD PTR [rsp+0x8]
  4116e4:	je     411d4c <main@@Base+0xac7c>
  4116ea:	mov    r12d,DWORD PTR [rsp+0x1c]
  4116ef:	mov    r15,QWORD PTR [rsp+0x10]
  4116f4:	test   r12d,r12d
  4116f7:	jne    411700 <main@@Base+0xa630>
  4116f9:	test   BYTE PTR [r15+0x10],0x2
  4116fe:	je     411723 <main@@Base+0xa653>
  411700:	mov    rdi,QWORD PTR [r15]
  411703:	mov    esi,0x15
  411708:	mov    edx,0x4
  41170d:	mov    ecx,0x4
  411712:	call   421f20 <flatcc_builder_table_add@@Base>
  411717:	test   rax,rax
  41171a:	je     411d4c <main@@Base+0xac7c>
  411720:	mov    DWORD PTR [rax],r12d
  411723:	mov    rbp,QWORD PTR [rsp+0x20]
  411728:	mov    r13,QWORD PTR [rsp+0x8]
  41172d:	jmp    40f87e <main@@Base+0x87ae>
  411732:	cmp    cl,0x7d
  411735:	jne    4119d4 <main@@Base+0xa904>
  41173b:	lea    r14,[rax+0x1]
  41173f:	mov    rcx,QWORD PTR [rsp+0x8]
  411744:	sub    rcx,r14
  411747:	cmp    rcx,0x2
  41174b:	jl     411771 <main@@Base+0xa6a1>
  41174d:	cmp    BYTE PTR [r14],0x20
  411751:	jg     411762 <main@@Base+0xa692>
  411753:	jne    411771 <main@@Base+0xa6a1>
  411755:	cmp    BYTE PTR [rax+0x2],0x20
  411759:	jle    411771 <main@@Base+0xa6a1>
  41175b:	add    rax,0x2
  41175f:	mov    r14,rax
  411762:	mov    r15,QWORD PTR [rsp+0x10]
  411767:	mov    r13,QWORD PTR [rsp+0x8]
  41176c:	jmp    40e049 <main@@Base+0x6f79>
  411771:	mov    r15,QWORD PTR [rsp+0x10]
  411776:	mov    rdi,r15
  411779:	mov    rsi,r14
  41177c:	mov    r13,QWORD PTR [rsp+0x8]
  411781:	mov    rdx,r13
  411784:	call   425750 <flatcc_json_parser_space_ext@@Base>
  411789:	jmp    40e046 <main@@Base+0x6f76>
  41178e:	cmp    cl,0x5d
  411791:	jne    4119ee <main@@Base+0xa91e>
  411797:	lea    r14,[rax+0x1]
  41179b:	mov    rcx,QWORD PTR [rsp+0x8]
  4117a0:	sub    rcx,r14
  4117a3:	cmp    rcx,0x2
  4117a7:	jl     4118a2 <main@@Base+0xa7d2>
  4117ad:	cmp    BYTE PTR [r14],0x20
  4117b1:	jg     411a08 <main@@Base+0xa938>
  4117b7:	jne    4118a2 <main@@Base+0xa7d2>
  4117bd:	cmp    BYTE PTR [rax+0x2],0x20
  4117c1:	jg     40f6cd <main@@Base+0x85fd>
  4117c7:	jmp    4118a2 <main@@Base+0xa7d2>
  4117cc:	mov    ecx,0x9
  4117d1:	mov    rdi,QWORD PTR [rsp+0x10]
  4117d6:	mov    rsi,rax
  4117d9:	mov    rdx,QWORD PTR [rsp+0x8]
  4117de:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  4117e3:	mov    r14,rax
  4117e6:	mov    r15,QWORD PTR [rsp+0x10]
  4117eb:	mov    r13,QWORD PTR [rsp+0x8]
  4117f0:	jmp    40d8e0 <main@@Base+0x6810>
  4117f5:	mov    r14,rbx
  4117f8:	jmp    411a4c <main@@Base+0xa97c>
  4117fd:	mov    ecx,0xa
  411802:	mov    rdi,r15
  411805:	mov    rsi,r13
  411808:	jmp    40e03e <main@@Base+0x6f6e>
  41180d:	mov    r14,r13
  411810:	jmp    40ddb9 <main@@Base+0x6ce9>
  411815:	mov    ecx,0x9
  41181a:	mov    rdi,r15
  41181d:	mov    rsi,r14
  411820:	mov    rdx,r14
  411823:	jmp    411a00 <main@@Base+0xa930>
  411828:	cmp    al,0x5d
  41182a:	jne    411a32 <main@@Base+0xa962>
  411830:	lea    r14,[r12+0x1]
  411835:	mov    rax,QWORD PTR [rsp+0x8]
  41183a:	sub    rax,r14
  41183d:	cmp    rax,0x2
  411841:	jl     411956 <main@@Base+0xa886>
  411847:	cmp    BYTE PTR [r14],0x20
  41184b:	jg     411a4c <main@@Base+0xa97c>
  411851:	jne    411956 <main@@Base+0xa886>
  411857:	cmp    BYTE PTR [r12+0x2],0x20
  41185d:	jle    411956 <main@@Base+0xa886>
  411863:	add    r12,0x2
  411867:	mov    r14,r12
  41186a:	jmp    411a4c <main@@Base+0xa97c>
  41186f:	lea    r14,[r12+0x1]
  411874:	mov    rax,QWORD PTR [rsp+0x8]
  411879:	sub    rax,r14
  41187c:	cmp    rax,0x2
  411880:	jl     4118a2 <main@@Base+0xa7d2>
  411882:	cmp    BYTE PTR [r14],0x20
  411886:	jg     411a08 <main@@Base+0xa938>
  41188c:	jne    4118a2 <main@@Base+0xa7d2>
  41188e:	cmp    BYTE PTR [r12+0x2],0x20
  411894:	jle    4118a2 <main@@Base+0xa7d2>
  411896:	add    r12,0x2
  41189a:	mov    r14,r12
  41189d:	jmp    411a08 <main@@Base+0xa938>
  4118a2:	mov    rdi,QWORD PTR [rsp+0x10]
  4118a7:	mov    rsi,r14
  4118aa:	mov    rdx,QWORD PTR [rsp+0x8]
  4118af:	call   425750 <flatcc_json_parser_space_ext@@Base>
  4118b4:	jmp    411a05 <main@@Base+0xa935>
  4118b9:	cmp    al,0x7d
  4118bb:	jne    411a86 <main@@Base+0xa9b6>
  4118c1:	lea    r14,[r12+0x1]
  4118c6:	mov    rax,QWORD PTR [rsp+0x8]
  4118cb:	sub    rax,r14
  4118ce:	cmp    rax,0x2
  4118d2:	jl     411c14 <main@@Base+0xab44>
  4118d8:	cmp    BYTE PTR [r14],0x20
  4118dc:	jle    411bfe <main@@Base+0xab2e>
  4118e2:	mov    r15,QWORD PTR [rsp+0x10]
  4118e7:	mov    r13,QWORD PTR [rsp+0x8]
  4118ec:	jmp    40ddb9 <main@@Base+0x6ce9>
  4118f1:	mov    ecx,0x9
  4118f6:	mov    rdi,r15
  4118f9:	mov    rsi,QWORD PTR [rsp+0x8]
  4118fe:	mov    rdx,rsi
  411901:	jmp    411a44 <main@@Base+0xa974>
  411906:	mov    r15,QWORD PTR [rsp+0x10]
  41190b:	mov    r13,QWORD PTR [rsp+0x8]
  411910:	jmp    40d937 <main@@Base+0x6867>
  411915:	mov    ecx,0xa
  41191a:	mov    rdi,r15
  41191d:	mov    rsi,r13
  411920:	jmp    40ddae <main@@Base+0x6cde>
  411925:	lea    r14,[r13+0x1]
  411929:	mov    rax,QWORD PTR [rsp+0x8]
  41192e:	sub    rax,r14
  411931:	cmp    rax,0x2
  411935:	jl     411956 <main@@Base+0xa886>
  411937:	cmp    BYTE PTR [r14],0x20
  41193b:	jg     411a4c <main@@Base+0xa97c>
  411941:	jne    411956 <main@@Base+0xa886>
  411943:	cmp    BYTE PTR [r13+0x2],0x20
  411948:	jle    411956 <main@@Base+0xa886>
  41194a:	add    r13,0x2
  41194e:	mov    r14,r13
  411951:	jmp    411a4c <main@@Base+0xa97c>
  411956:	mov    rdi,QWORD PTR [rsp+0x10]
  41195b:	mov    rsi,r14
  41195e:	mov    rdx,QWORD PTR [rsp+0x8]
  411963:	call   425750 <flatcc_json_parser_space_ext@@Base>
  411968:	jmp    411a49 <main@@Base+0xa979>
  41196d:	jne    411983 <main@@Base+0xa8b3>
  41196f:	cmp    BYTE PTR [r12+0x2],0x20
  411975:	jle    411983 <main@@Base+0xa8b3>
  411977:	add    r12,0x2
  41197b:	mov    r14,r12
  41197e:	jmp    40fc43 <main@@Base+0x8b73>
  411983:	mov    r15,QWORD PTR [rsp+0x10]
  411988:	mov    rdi,r15
  41198b:	mov    rsi,r14
  41198e:	mov    r13,QWORD PTR [rsp+0x8]
  411993:	mov    rdx,r13
  411996:	call   425750 <flatcc_json_parser_space_ext@@Base>
  41199b:	jmp    40d3be <main@@Base+0x62ee>
  4119a0:	mov    ecx,0xa
  4119a5:	mov    r15,QWORD PTR [rsp+0x10]
  4119aa:	mov    rdi,r15
  4119ad:	mov    rsi,r12
  4119b0:	mov    r13,QWORD PTR [rsp+0x8]
  4119b5:	jmp    40d91b <main@@Base+0x684b>
  4119ba:	mov    ecx,0x9
  4119bf:	mov    r15,QWORD PTR [rsp+0x10]
  4119c4:	mov    rdi,r15
  4119c7:	mov    rsi,r12
  4119ca:	mov    r13,QWORD PTR [rsp+0x8]
  4119cf:	jmp    40e25d <main@@Base+0x718d>
  4119d4:	mov    ecx,0xa
  4119d9:	mov    r15,QWORD PTR [rsp+0x10]
  4119de:	mov    rdi,r15
  4119e1:	mov    rsi,rax
  4119e4:	mov    r13,QWORD PTR [rsp+0x8]
  4119e9:	jmp    40e03e <main@@Base+0x6f6e>
  4119ee:	mov    ecx,0x9
  4119f3:	mov    rdi,QWORD PTR [rsp+0x10]
  4119f8:	mov    rsi,rax
  4119fb:	mov    rdx,QWORD PTR [rsp+0x8]
  411a00:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  411a05:	mov    r14,rax
  411a08:	mov    r15,QWORD PTR [rsp+0x10]
  411a0d:	mov    r13,QWORD PTR [rsp+0x8]
  411a12:	jmp    40f641 <main@@Base+0x8571>
  411a17:	cmp    cl,0x5d
  411a1a:	je     40fc83 <main@@Base+0x8bb3>
  411a20:	mov    ecx,0x9
  411a25:	mov    rdi,QWORD PTR [rsp+0x10]
  411a2a:	mov    rsi,rax
  411a2d:	jmp    40f82e <main@@Base+0x875e>
  411a32:	mov    ecx,0x9
  411a37:	mov    rdi,QWORD PTR [rsp+0x10]
  411a3c:	mov    rsi,r12
  411a3f:	mov    rdx,QWORD PTR [rsp+0x8]
  411a44:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  411a49:	mov    r14,rax
  411a4c:	mov    r15,QWORD PTR [rsp+0x10]
  411a51:	mov    r13,QWORD PTR [rsp+0x8]
  411a56:	mov    rdi,QWORD PTR [r15]
  411a59:	call   4218c0 <flatcc_builder_end_vector@@Base>
  411a5e:	mov    DWORD PTR [rsp+0x3c],eax
  411a62:	test   eax,eax
  411a64:	mov    rbp,QWORD PTR [rsp+0x20]
  411a69:	movabs r12,0x7465737400000000
  411a73:	je     411d63 <main@@Base+0xac93>
  411a79:	mov    rdi,QWORD PTR [r15]
  411a7c:	mov    esi,0x21
  411a81:	jmp    40b37b <main@@Base+0x42ab>
  411a86:	mov    ecx,0xa
  411a8b:	mov    r15,QWORD PTR [rsp+0x10]
  411a90:	mov    rdi,r15
  411a93:	mov    rsi,r12
  411a96:	mov    r13,QWORD PTR [rsp+0x8]
  411a9b:	jmp    40ddae <main@@Base+0x6cde>
  411aa0:	mov    ecx,0x9
  411aa5:	mov    rdi,QWORD PTR [rsp+0x10]
  411aaa:	mov    rsi,QWORD PTR [rsp+0x8]
  411aaf:	mov    rdx,rsi
  411ab2:	jmp    40f833 <main@@Base+0x8763>
  411ab7:	lea    r14,[r12+0x1]
  411abc:	mov    rax,QWORD PTR [rsp+0x8]
  411ac1:	sub    rax,r14
  411ac4:	cmp    rax,0x2
  411ac8:	jl     411ae3 <main@@Base+0xaa13>
  411aca:	cmp    BYTE PTR [r14],0x20
  411ace:	jg     411af8 <main@@Base+0xaa28>
  411ad0:	jne    411ae3 <main@@Base+0xaa13>
  411ad2:	cmp    BYTE PTR [r12+0x2],0x20
  411ad8:	jle    411ae3 <main@@Base+0xaa13>
  411ada:	add    r12,0x2
  411ade:	mov    r14,r12
  411ae1:	jmp    411af8 <main@@Base+0xaa28>
  411ae3:	mov    rdi,QWORD PTR [rsp+0x10]
  411ae8:	mov    rsi,r14
  411aeb:	mov    rdx,QWORD PTR [rsp+0x8]
  411af0:	call   425750 <flatcc_json_parser_space_ext@@Base>
  411af5:	mov    r14,rax
  411af8:	mov    r15,QWORD PTR [rsp+0x10]
  411afd:	mov    rdi,QWORD PTR [r15]
  411b00:	call   4218c0 <flatcc_builder_end_vector@@Base>
  411b05:	mov    rbp,QWORD PTR [rsp+0x20]
  411b0a:	mov    r13,QWORD PTR [rsp+0x8]
  411b0f:	movabs r12,0x7465737400000000
  411b19:	mov    DWORD PTR [rsp+0x3c],eax
  411b1d:	test   eax,eax
  411b1f:	je     411d63 <main@@Base+0xac93>
  411b25:	mov    rdi,QWORD PTR [r15]
  411b28:	mov    esi,0xd
  411b2d:	jmp    40b37b <main@@Base+0x42ab>
  411b32:	jne    411b48 <main@@Base+0xaa78>
  411b34:	cmp    BYTE PTR [r12+0x2],0x20
  411b3a:	jle    411b48 <main@@Base+0xaa78>
  411b3c:	add    r12,0x2
  411b40:	mov    r14,r12
  411b43:	jmp    41091d <main@@Base+0x984d>
  411b48:	mov    r15,QWORD PTR [rsp+0x10]
  411b4d:	mov    rdi,r15
  411b50:	mov    rsi,r14
  411b53:	mov    r13,QWORD PTR [rsp+0x8]
  411b58:	mov    rdx,r13
  411b5b:	call   425750 <flatcc_json_parser_space_ext@@Base>
  411b60:	jmp    40d2eb <main@@Base+0x621b>
  411b65:	jne    411b7b <main@@Base+0xaaab>
  411b67:	cmp    BYTE PTR [r12+0x2],0x20
  411b6d:	jle    411b7b <main@@Base+0xaaab>
  411b6f:	add    r12,0x2
  411b73:	mov    r14,r12
  411b76:	jmp    410955 <main@@Base+0x9885>
  411b7b:	mov    r15,QWORD PTR [rsp+0x10]
  411b80:	mov    rdi,r15
  411b83:	mov    rsi,r14
  411b86:	mov    r13,QWORD PTR [rsp+0x8]
  411b8b:	mov    rdx,r13
  411b8e:	call   425750 <flatcc_json_parser_space_ext@@Base>
  411b93:	jmp    40d482 <main@@Base+0x63b2>
  411b98:	jne    411bae <main@@Base+0xaade>
  411b9a:	cmp    BYTE PTR [r12+0x2],0x20
  411ba0:	jle    411bae <main@@Base+0xaade>
  411ba2:	add    r12,0x2
  411ba6:	mov    r14,r12
  411ba9:	jmp    41140b <main@@Base+0xa33b>
  411bae:	mov    r15,QWORD PTR [rsp+0x10]
  411bb3:	mov    rdi,r15
  411bb6:	mov    rsi,r14
  411bb9:	mov    r13,QWORD PTR [rsp+0x8]
  411bbe:	mov    rdx,r13
  411bc1:	call   425750 <flatcc_json_parser_space_ext@@Base>
  411bc6:	jmp    40d923 <main@@Base+0x6853>
  411bcb:	jne    411be1 <main@@Base+0xab11>
  411bcd:	cmp    BYTE PTR [r12+0x2],0x20
  411bd3:	jle    411be1 <main@@Base+0xab11>
  411bd5:	add    r12,0x2
  411bd9:	mov    r14,r12
  411bdc:	jmp    41164b <main@@Base+0xa57b>
  411be1:	mov    r15,QWORD PTR [rsp+0x10]
  411be6:	mov    rdi,r15
  411be9:	mov    rsi,r14
  411bec:	mov    r13,QWORD PTR [rsp+0x8]
  411bf1:	mov    rdx,r13
  411bf4:	call   425750 <flatcc_json_parser_space_ext@@Base>
  411bf9:	jmp    40e265 <main@@Base+0x7195>
  411bfe:	jne    411c14 <main@@Base+0xab44>
  411c00:	cmp    BYTE PTR [r12+0x2],0x20
  411c06:	jle    411c14 <main@@Base+0xab44>
  411c08:	add    r12,0x2
  411c0c:	mov    r14,r12
  411c0f:	jmp    4118e2 <main@@Base+0xa812>
  411c14:	mov    r15,QWORD PTR [rsp+0x10]
  411c19:	mov    rdi,r15
  411c1c:	mov    rsi,r14
  411c1f:	mov    r13,QWORD PTR [rsp+0x8]
  411c24:	mov    rdx,r13
  411c27:	call   425750 <flatcc_json_parser_space_ext@@Base>
  411c2c:	jmp    40ddb6 <main@@Base+0x6ce6>
  411c31:	mov    rdi,r15
  411c34:	mov    rsi,r12
  411c37:	mov    rdx,r13
  411c3a:	call   425750 <flatcc_json_parser_space_ext@@Base>
  411c3f:	jmp    407d16 <main@@Base+0xc46>
  411c44:	mov    r12,r13
  411c47:	jmp    411d22 <main@@Base+0xac52>
  411c4c:	cmp    al,0x7d
  411c4e:	jne    411cfc <main@@Base+0xac2c>
  411c54:	lea    r12,[r14+0x1]
  411c58:	mov    rax,r13
  411c5b:	sub    rax,r12
  411c5e:	cmp    rax,0x2
  411c62:	jl     411d11 <main@@Base+0xac41>
  411c68:	cmp    BYTE PTR [r12],0x20
  411c6d:	jg     411d22 <main@@Base+0xac52>
  411c73:	jne    411d11 <main@@Base+0xac41>
  411c79:	cmp    BYTE PTR [r14+0x2],0x20
  411c7e:	jle    411d11 <main@@Base+0xac41>
  411c84:	add    r14,0x2
  411c88:	mov    r12,r14
  411c8b:	jmp    411d22 <main@@Base+0xac52>
  411c90:	mov    ecx,0xa
  411c95:	mov    rdi,r15
  411c98:	mov    rsi,r13
  411c9b:	mov    rdx,r13
  411c9e:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  411ca3:	jmp    411ceb <main@@Base+0xac1b>
  411ca5:	lea    r12,[rsi+0x1]
  411ca9:	mov    rax,r13
  411cac:	sub    rax,r12
  411caf:	cmp    rax,0x2
  411cb3:	jl     411cdd <main@@Base+0xac0d>
  411cb5:	cmp    BYTE PTR [r12],0x20
  411cba:	jg     407d1d <main@@Base+0xc4d>
  411cc0:	jne    411cdd <main@@Base+0xac0d>
  411cc2:	cmp    BYTE PTR [rsi+0x2],0x20
  411cc6:	jle    411cdd <main@@Base+0xac0d>
  411cc8:	add    rsi,0x2
  411ccc:	mov    r12,rsi
  411ccf:	cmp    DWORD PTR [rbx],0x0
  411cd2:	jne    407c81 <main@@Base+0xbb1>
  411cd8:	jmp    407d26 <main@@Base+0xc56>
  411cdd:	mov    rdi,r15
  411ce0:	mov    rsi,r12
  411ce3:	mov    rdx,r13
  411ce6:	call   425750 <flatcc_json_parser_space_ext@@Base>
  411ceb:	mov    r12,rax
  411cee:	cmp    DWORD PTR [rbx],0x0
  411cf1:	jne    407c81 <main@@Base+0xbb1>
  411cf7:	jmp    407d26 <main@@Base+0xc56>
  411cfc:	mov    ecx,0xa
  411d01:	mov    rdi,r15
  411d04:	mov    rsi,r14
  411d07:	mov    rdx,r13
  411d0a:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  411d0f:	jmp    411d1f <main@@Base+0xac4f>
  411d11:	mov    rdi,r15
  411d14:	mov    rsi,r12
  411d17:	mov    rdx,r13
  411d1a:	call   425750 <flatcc_json_parser_space_ext@@Base>
  411d1f:	mov    r12,rax
  411d22:	mov    rbx,QWORD PTR [rsp+0x48]
  411d27:	cmp    DWORD PTR [rbx],0x0
  411d2a:	jne    407c81 <main@@Base+0xbb1>
  411d30:	jmp    407d26 <main@@Base+0xc56>
  411d35:	mov    r12,r14
  411d38:	mov    r13,QWORD PTR [rsp+0x8]
  411d3d:	jmp    407c81 <main@@Base+0xbb1>
  411d42:	mov    r13,QWORD PTR [rsp+0x8]
  411d47:	jmp    407c81 <main@@Base+0xbb1>
  411d4c:	mov    r12,r14
  411d4f:	mov    r15,QWORD PTR [rsp+0x10]
  411d54:	mov    r13,QWORD PTR [rsp+0x8]
  411d59:	jmp    407c81 <main@@Base+0xbb1>
  411d5e:	mov    r13,QWORD PTR [rsp+0x8]
  411d63:	mov    r12,r14
  411d66:	jmp    407c81 <main@@Base+0xbb1>
  411d6b:	mov    r12,rax
  411d6e:	mov    r13,QWORD PTR [rsp+0x8]
  411d73:	jmp    407c81 <main@@Base+0xbb1>
  411d78:	mov    r12,rax
  411d7b:	jmp    407c81 <main@@Base+0xbb1>
  411d80:	mov    r13,rbx
  411d83:	jmp    407c81 <main@@Base+0xbb1>
  411d88:	mov    r12,rax
  411d8b:	jmp    411d4f <main@@Base+0xac7f>
  411d8d:	mov    r12,r13
  411d90:	mov    r15,QWORD PTR [rsp+0x10]
  411d95:	mov    rbx,QWORD PTR [rsp+0x8]
  411d9a:	mov    r13,rbx
  411d9d:	jmp    407c81 <main@@Base+0xbb1>
  411da2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411dac:	nop    DWORD PTR [rax+0x0]
  411db0:	push   r15
  411db2:	push   r14
  411db4:	push   r12
  411db6:	push   rbx
  411db7:	push   rax
  411db8:	mov    r14,rsi
  411dbb:	mov    rbx,rdi
  411dbe:	lea    rcx,[rip+0x276be]        # 439483 <_IO_stdin_used@@Base+0x4483>
  411dc5:	lea    r9,[rip+0xbd44]        # 41db10 <main@@Base+0x16a40>
  411dcc:	xor    edx,edx
  411dce:	mov    r8d,0x3
  411dd4:	call   433d10 <flatcc_json_printer_struct_field@@Base>
  411dd9:	lea    rcx,[rip+0x276a7]        # 439487 <_IO_stdin_used@@Base+0x4487>
  411de0:	mov    edx,0x1
  411de5:	mov    r8d,0x4
  411deb:	mov    r9d,0x96
  411df1:	mov    rdi,rbx
  411df4:	mov    rsi,r14
  411df7:	call   42b730 <flatcc_json_printer_int16_field@@Base>
  411dfc:	lea    rcx,[rip+0x27689]        # 43948c <_IO_stdin_used@@Base+0x448c>
  411e03:	mov    edx,0x2
  411e08:	mov    r8d,0x2
  411e0e:	mov    r9d,0x64
  411e14:	mov    rdi,rbx
  411e17:	mov    rsi,r14
  411e1a:	call   42b730 <flatcc_json_printer_int16_field@@Base>
  411e1f:	lea    rcx,[rip+0x27669]        # 43948f <_IO_stdin_used@@Base+0x448f>
  411e26:	mov    edx,0x3
  411e2b:	mov    r8d,0x4
  411e31:	mov    rdi,rbx
  411e34:	mov    rsi,r14
  411e37:	call   42ae10 <flatcc_json_printer_string_field@@Base>
  411e3c:	lea    rcx,[rip+0x27651]        # 439494 <_IO_stdin_used@@Base+0x4494>
  411e43:	mov    edx,0x5
  411e48:	mov    r8d,0x9
  411e4e:	mov    rdi,rbx
  411e51:	mov    rsi,r14
  411e54:	call   42d7f0 <flatcc_json_printer_uint8_vector_field@@Base>
  411e59:	lea    rax,[rip+0xbda0]        # 41dc00 <main@@Base+0x16b30>
  411e60:	mov    QWORD PTR [rsp],rax
  411e64:	lea    rcx,[rip+0x27633]        # 43949e <_IO_stdin_used@@Base+0x449e>
  411e6b:	mov    edx,0x6
  411e70:	mov    r8d,0x5
  411e76:	mov    r9d,0x8
  411e7c:	mov    rdi,rbx
  411e7f:	mov    rsi,r14
  411e82:	call   42c060 <flatcc_json_printer_int8_enum_field@@Base>
  411e87:	lea    rax,[rip+0xbed2]        # 41dd60 <main@@Base+0x16c90>
  411e8e:	mov    QWORD PTR [rsp],rax
  411e92:	lea    rcx,[rip+0x2777d]        # 439616 <_IO_stdin_used@@Base+0x4616>
  411e99:	lea    r9,[rip+0xbe40]        # 41dce0 <main@@Base+0x16c10>
  411ea0:	mov    edx,0x8
  411ea5:	mov    r8d,0x4
  411eab:	mov    rdi,rbx
  411eae:	mov    rsi,r14
  411eb1:	call   433590 <flatcc_json_printer_union_field@@Base>
  411eb6:	lea    r12,[rip+0xbef3]        # 41ddb0 <main@@Base+0x16ce0>
  411ebd:	mov    QWORD PTR [rsp],r12
  411ec1:	lea    rcx,[rip+0x275dc]        # 4394a4 <_IO_stdin_used@@Base+0x44a4>
  411ec8:	mov    edx,0x9
  411ecd:	mov    r8d,0x5
  411ed3:	mov    r9d,0x4
  411ed9:	mov    rdi,rbx
  411edc:	mov    rsi,r14
  411edf:	call   4324d0 <flatcc_json_printer_struct_vector_field@@Base>
  411ee4:	lea    rcx,[rip+0x275bf]        # 4394aa <_IO_stdin_used@@Base+0x44aa>
  411eeb:	mov    edx,0xa
  411ef0:	mov    r8d,0x11
  411ef6:	mov    rdi,rbx
  411ef9:	mov    rsi,r14
  411efc:	call   432990 <flatcc_json_printer_string_vector_field@@Base>
  411f01:	lea    rcx,[rip+0x275b4]        # 4394bc <_IO_stdin_used@@Base+0x44bc>
  411f08:	lea    r15,[rip+0xfffffffffffffea1]        # 411db0 <main@@Base+0xace0>
  411f0f:	mov    edx,0xb
  411f14:	mov    r8d,0x11
  411f1a:	mov    rdi,rbx
  411f1d:	mov    rsi,r14
  411f20:	mov    r9,r15
  411f23:	call   432c80 <flatcc_json_printer_table_vector_field@@Base>
  411f28:	lea    rcx,[rip+0x2759f]        # 4394ce <_IO_stdin_used@@Base+0x44ce>
  411f2f:	mov    edx,0xc
  411f34:	mov    r8d,0x5
  411f3a:	mov    rdi,rbx
  411f3d:	mov    rsi,r14
  411f40:	mov    r9,r15
  411f43:	call   433400 <flatcc_json_printer_table_field@@Base>
  411f48:	mov    QWORD PTR [rsp],r15
  411f4c:	lea    rcx,[rip+0x27581]        # 4394d4 <_IO_stdin_used@@Base+0x44d4>
  411f53:	mov    edx,0xd
  411f58:	mov    r8d,0x14
  411f5e:	xor    r9d,r9d
  411f61:	mov    rdi,rbx
  411f64:	mov    rsi,r14
  411f67:	call   434430 <flatcc_json_printer_table_as_nested_root@@Base>
  411f6c:	lea    rcx,[rip+0x27576]        # 4394e9 <_IO_stdin_used@@Base+0x44e9>
  411f73:	lea    r9,[rip+0xbe86]        # 41de00 <main@@Base+0x16d30>
  411f7a:	mov    edx,0xe
  411f7f:	mov    r8d,0x9
  411f85:	mov    rdi,rbx
  411f88:	mov    rsi,r14
  411f8b:	call   433400 <flatcc_json_printer_table_field@@Base>
  411f90:	lea    rcx,[rip+0x2755c]        # 4394f3 <_IO_stdin_used@@Base+0x44f3>
  411f97:	mov    edx,0xf
  411f9c:	mov    r8d,0x8
  411fa2:	mov    r9d,0x1
  411fa8:	mov    rdi,rbx
  411fab:	mov    rsi,r14
  411fae:	call   42ba30 <flatcc_json_printer_bool_field@@Base>
  411fb3:	lea    rcx,[rip+0x27542]        # 4394fc <_IO_stdin_used@@Base+0x44fc>
  411fba:	mov    edx,0x10
  411fbf:	mov    r8d,0x10
  411fc5:	xor    r9d,r9d
  411fc8:	mov    rdi,rbx
  411fcb:	mov    rsi,r14
  411fce:	call   42b8f0 <flatcc_json_printer_int32_field@@Base>
  411fd3:	lea    rcx,[rip+0x27533]        # 43950d <_IO_stdin_used@@Base+0x450d>
  411fda:	mov    edx,0x11
  411fdf:	mov    r8d,0x10
  411fe5:	xor    r9d,r9d
  411fe8:	mov    rdi,rbx
  411feb:	mov    rsi,r14
  411fee:	call   42b4f0 <flatcc_json_printer_uint32_field@@Base>
  411ff3:	lea    rcx,[rip+0x27524]        # 43951e <_IO_stdin_used@@Base+0x451e>
  411ffa:	mov    edx,0x12
  411fff:	mov    r8d,0x10
  412005:	xor    r9d,r9d
  412008:	mov    rdi,rbx
  41200b:	mov    rsi,r14
  41200e:	call   42b990 <flatcc_json_printer_int64_field@@Base>
  412013:	lea    rcx,[rip+0x27515]        # 43952f <_IO_stdin_used@@Base+0x452f>
  41201a:	mov    edx,0x13
  41201f:	mov    r8d,0x10
  412025:	xor    r9d,r9d
  412028:	mov    rdi,rbx
  41202b:	mov    rsi,r14
  41202e:	call   42b580 <flatcc_json_printer_uint64_field@@Base>
  412033:	lea    rcx,[rip+0x27506]        # 439540 <_IO_stdin_used@@Base+0x4540>
  41203a:	mov    edx,0x14
  41203f:	mov    r8d,0x11
  412045:	xor    r9d,r9d
  412048:	mov    rdi,rbx
  41204b:	mov    rsi,r14
  41204e:	call   42b8f0 <flatcc_json_printer_int32_field@@Base>
  412053:	lea    rcx,[rip+0x274f8]        # 439552 <_IO_stdin_used@@Base+0x4552>
  41205a:	mov    edx,0x15
  41205f:	mov    r8d,0x11
  412065:	xor    r9d,r9d
  412068:	mov    rdi,rbx
  41206b:	mov    rsi,r14
  41206e:	call   42b4f0 <flatcc_json_printer_uint32_field@@Base>
  412073:	lea    rcx,[rip+0x274ea]        # 439564 <_IO_stdin_used@@Base+0x4564>
  41207a:	mov    edx,0x16
  41207f:	mov    r8d,0x11
  412085:	xor    r9d,r9d
  412088:	mov    rdi,rbx
  41208b:	mov    rsi,r14
  41208e:	call   42b990 <flatcc_json_printer_int64_field@@Base>
  412093:	lea    rcx,[rip+0x274dc]        # 439576 <_IO_stdin_used@@Base+0x4576>
  41209a:	mov    edx,0x17
  41209f:	mov    r8d,0x11
  4120a5:	xor    r9d,r9d
  4120a8:	mov    rdi,rbx
  4120ab:	mov    rsi,r14
  4120ae:	call   42b580 <flatcc_json_printer_uint64_field@@Base>
  4120b3:	lea    rcx,[rip+0x274ce]        # 439588 <_IO_stdin_used@@Base+0x4588>
  4120ba:	mov    edx,0x18
  4120bf:	mov    r8d,0x10
  4120c5:	mov    rdi,rbx
  4120c8:	mov    rsi,r14
  4120cb:	call   42f8c0 <flatcc_json_printer_bool_vector_field@@Base>
  4120d0:	lea    rcx,[rip+0x274c2]        # 439599 <_IO_stdin_used@@Base+0x4599>
  4120d7:	vmovss xmm0,DWORD PTR [rip+0x22f25]        # 435004 <_IO_stdin_used@@Base+0x4>
  4120df:	mov    edx,0x19
  4120e4:	mov    r8d,0x5
  4120ea:	mov    rdi,rbx
  4120ed:	mov    rsi,r14
  4120f0:	call   42bae0 <flatcc_json_printer_float_field@@Base>
  4120f5:	lea    rcx,[rip+0x274a3]        # 43959f <_IO_stdin_used@@Base+0x459f>
  4120fc:	vmovss xmm0,DWORD PTR [rip+0x22f04]        # 435008 <_IO_stdin_used@@Base+0x8>
  412104:	mov    edx,0x1a
  412109:	mov    r8d,0x6
  41210f:	mov    rdi,rbx
  412112:	mov    rsi,r14
  412115:	call   42bae0 <flatcc_json_printer_float_field@@Base>
  41211a:	lea    rcx,[rip+0x27485]        # 4395a6 <_IO_stdin_used@@Base+0x45a6>
  412121:	mov    edx,0x1b
  412126:	mov    r8d,0x6
  41212c:	vxorps xmm0,xmm0,xmm0
  412130:	mov    rdi,rbx
  412133:	mov    rsi,r14
  412136:	call   42bae0 <flatcc_json_printer_float_field@@Base>
  41213b:	lea    rcx,[rip+0x2746b]        # 4395ad <_IO_stdin_used@@Base+0x45ad>
  412142:	mov    edx,0x1c
  412147:	mov    r8d,0x12
  41214d:	mov    rdi,rbx
  412150:	mov    rsi,r14
  412153:	call   432990 <flatcc_json_printer_string_vector_field@@Base>
  412158:	lea    rax,[rip+0xbd11]        # 41de70 <main@@Base+0x16da0>
  41215f:	mov    QWORD PTR [rsp],rax
  412163:	lea    rcx,[rip+0x27456]        # 4395c0 <_IO_stdin_used@@Base+0x45c0>
  41216a:	mov    edx,0x1d
  41216f:	mov    r8d,0x17
  412175:	mov    r9d,0x8
  41217b:	mov    rdi,rbx
  41217e:	mov    rsi,r14
  412181:	call   4324d0 <flatcc_json_printer_struct_vector_field@@Base>
  412186:	lea    rcx,[rip+0x2744b]        # 4395d8 <_IO_stdin_used@@Base+0x45d8>
  41218d:	mov    edx,0x1e
  412192:	mov    r8d,0x4
  412198:	mov    rdi,rbx
  41219b:	mov    rsi,r14
  41219e:	call   42d7f0 <flatcc_json_printer_uint8_vector_field@@Base>
  4121a3:	mov    QWORD PTR [rsp],r12
  4121a7:	lea    rcx,[rip+0x2742f]        # 4395dd <_IO_stdin_used@@Base+0x45dd>
  4121ae:	mov    edx,0x1f
  4121b3:	mov    r8d,0x5
  4121b9:	mov    r9d,0x4
  4121bf:	mov    rdi,rbx
  4121c2:	mov    rsi,r14
  4121c5:	call   4324d0 <flatcc_json_printer_struct_vector_field@@Base>
  4121ca:	lea    rcx,[rip+0x27412]        # 4395e3 <_IO_stdin_used@@Base+0x45e3>
  4121d1:	mov    edx,0x20
  4121d6:	mov    r8d,0xf
  4121dc:	mov    rdi,rbx
  4121df:	mov    rsi,r14
  4121e2:	call   42f560 <flatcc_json_printer_int64_vector_field@@Base>
  4121e7:	lea    rcx,[rip+0x27405]        # 4395f3 <_IO_stdin_used@@Base+0x45f3>
  4121ee:	mov    edx,0x21
  4121f3:	mov    r8d,0x11
  4121f9:	mov    rdi,rbx
  4121fc:	mov    rsi,r14
  4121ff:	call   42ff80 <flatcc_json_printer_double_vector_field@@Base>
  412204:	lea    rcx,[rip+0x273fa]        # 439605 <_IO_stdin_used@@Base+0x4605>
  41220b:	lea    r9,[rip+0xbcae]        # 41dec0 <main@@Base+0x16df0>
  412212:	mov    edx,0x22
  412217:	mov    r8d,0x15
  41221d:	mov    rdi,rbx
  412220:	mov    rsi,r14
  412223:	call   433400 <flatcc_json_printer_table_field@@Base>
  412228:	lea    rcx,[rip+0x273ec]        # 43961b <_IO_stdin_used@@Base+0x461b>
  41222f:	lea    r9,[rip+0xbc9a]        # 41ded0 <main@@Base+0x16e00>
  412236:	mov    edx,0x23
  41223b:	mov    r8d,0xa
  412241:	mov    rdi,rbx
  412244:	mov    rsi,r14
  412247:	add    rsp,0x8
  41224b:	pop    rbx
  41224c:	pop    r12
  41224e:	pop    r14
  412250:	pop    r15
  412252:	jmp    433400 <flatcc_json_printer_table_field@@Base>
  412257:	nop    WORD PTR [rax+rax*1+0x0]
  412260:	push   rbx
  412261:	mov    rbx,rdi
  412264:	xor    esi,esi
  412266:	mov    edx,0x20
  41226b:	mov    ecx,0x10
  412270:	call   423bb0 <flatcc_verify_field@@Base>
  412275:	test   eax,eax
  412277:	jne    412682 <main@@Base+0xb5b2>
  41227d:	mov    esi,0x2
  412282:	mov    edx,0x2
  412287:	mov    ecx,0x2
  41228c:	mov    rdi,rbx
  41228f:	call   423bb0 <flatcc_verify_field@@Base>
  412294:	test   eax,eax
  412296:	jne    412682 <main@@Base+0xb5b2>
  41229c:	mov    esi,0x1
  4122a1:	mov    edx,0x2
  4122a6:	mov    ecx,0x2
  4122ab:	mov    rdi,rbx
  4122ae:	call   423bb0 <flatcc_verify_field@@Base>
  4122b3:	test   eax,eax
  4122b5:	jne    412682 <main@@Base+0xb5b2>
  4122bb:	mov    esi,0x3
  4122c0:	mov    edx,0x1
  4122c5:	mov    rdi,rbx
  4122c8:	call   423c10 <flatcc_verify_string_field@@Base>
  4122cd:	test   eax,eax
  4122cf:	jne    412682 <main@@Base+0xb5b2>
  4122d5:	mov    esi,0x6
  4122da:	mov    edx,0x1
  4122df:	mov    ecx,0x1
  4122e4:	mov    rdi,rbx
  4122e7:	call   423bb0 <flatcc_verify_field@@Base>
  4122ec:	test   eax,eax
  4122ee:	jne    412682 <main@@Base+0xb5b2>
  4122f4:	mov    esi,0x5
  4122f9:	xor    edx,edx
  4122fb:	mov    ecx,0x1
  412300:	mov    r8d,0x1
  412306:	mov    r9d,0xffffffff
  41230c:	mov    rdi,rbx
  41230f:	call   423cc0 <flatcc_verify_vector_field@@Base>
  412314:	test   eax,eax
  412316:	jne    412682 <main@@Base+0xb5b2>
  41231c:	lea    rcx,[rip+0xffffffffffffff3d]        # 412260 <main@@Base+0xb190>
  412323:	mov    esi,0xb
  412328:	xor    edx,edx
  41232a:	mov    rdi,rbx
  41232d:	call   424030 <flatcc_verify_table_vector_field@@Base>
  412332:	test   eax,eax
  412334:	jne    412682 <main@@Base+0xb5b2>
  41233a:	mov    esi,0xa
  41233f:	xor    edx,edx
  412341:	mov    rdi,rbx
  412344:	call   423d90 <flatcc_verify_string_vector_field@@Base>
  412349:	test   eax,eax
  41234b:	jne    412682 <main@@Base+0xb5b2>
  412351:	mov    esi,0x1c
  412356:	xor    edx,edx
  412358:	mov    rdi,rbx
  41235b:	call   423d90 <flatcc_verify_string_vector_field@@Base>
  412360:	test   eax,eax
  412362:	jne    412682 <main@@Base+0xb5b2>
  412368:	mov    esi,0x18
  41236d:	xor    edx,edx
  41236f:	mov    ecx,0x1
  412374:	mov    r8d,0x1
  41237a:	mov    r9d,0xffffffff
  412380:	mov    rdi,rbx
  412383:	call   423cc0 <flatcc_verify_vector_field@@Base>
  412388:	test   eax,eax
  41238a:	jne    412682 <main@@Base+0xb5b2>
  412390:	mov    esi,0x1d
  412395:	xor    edx,edx
  412397:	mov    ecx,0x8
  41239c:	mov    r8d,0x4
  4123a2:	mov    r9d,0x1fffffff
  4123a8:	mov    rdi,rbx
  4123ab:	call   423cc0 <flatcc_verify_vector_field@@Base>
  4123b0:	test   eax,eax
  4123b2:	jne    412682 <main@@Base+0xb5b2>
  4123b8:	lea    rcx,[rip+0xfffffffffffffea1]        # 412260 <main@@Base+0xb190>
  4123bf:	mov    esi,0xc
  4123c4:	xor    edx,edx
  4123c6:	mov    rdi,rbx
  4123c9:	call   423ef0 <flatcc_verify_table_field@@Base>
  4123ce:	test   eax,eax
  4123d0:	jne    412682 <main@@Base+0xb5b2>
  4123d6:	lea    rcx,[rip+0xc113]        # 41e4f0 <main@@Base+0x17420>
  4123dd:	mov    esi,0x8
  4123e2:	xor    edx,edx
  4123e4:	mov    rdi,rbx
  4123e7:	call   424e00 <flatcc_verify_union_field@@Base>
  4123ec:	test   eax,eax
  4123ee:	jne    412682 <main@@Base+0xb5b2>
  4123f4:	mov    esi,0x9
  4123f9:	xor    edx,edx
  4123fb:	mov    ecx,0x4
  412400:	mov    r8d,0x2
  412406:	mov    r9d,0x3fffffff
  41240c:	mov    rdi,rbx
  41240f:	call   423cc0 <flatcc_verify_vector_field@@Base>
  412414:	test   eax,eax
  412416:	jne    412682 <main@@Base+0xb5b2>
  41241c:	mov    esi,0x1f
  412421:	xor    edx,edx
  412423:	mov    ecx,0x4
  412428:	mov    r8d,0x2
  41242e:	mov    r9d,0x3fffffff
  412434:	mov    rdi,rbx
  412437:	call   423cc0 <flatcc_verify_vector_field@@Base>
  41243c:	test   eax,eax
  41243e:	jne    412682 <main@@Base+0xb5b2>
  412444:	lea    r9,[rip+0xfffffffffffffe15]        # 412260 <main@@Base+0xb190>
  41244b:	mov    esi,0xd
  412450:	xor    edx,edx
  412452:	xor    ecx,ecx
  412454:	mov    r8d,0x1
  41245a:	mov    rdi,rbx
  41245d:	call   424b20 <flatcc_verify_table_as_nested_root@@Base>
  412462:	test   eax,eax
  412464:	jne    412682 <main@@Base+0xb5b2>
  41246a:	lea    rcx,[rip+0xc09f]        # 41e510 <main@@Base+0x17440>
  412471:	mov    esi,0xe
  412476:	xor    edx,edx
  412478:	mov    rdi,rbx
  41247b:	call   423ef0 <flatcc_verify_table_field@@Base>
  412480:	test   eax,eax
  412482:	jne    412682 <main@@Base+0xb5b2>
  412488:	mov    esi,0xf
  41248d:	mov    edx,0x1
  412492:	mov    ecx,0x1
  412497:	mov    rdi,rbx
  41249a:	call   423bb0 <flatcc_verify_field@@Base>
  41249f:	test   eax,eax
  4124a1:	jne    412682 <main@@Base+0xb5b2>
  4124a7:	mov    esi,0x10
  4124ac:	mov    edx,0x4
  4124b1:	mov    ecx,0x4
  4124b6:	mov    rdi,rbx
  4124b9:	call   423bb0 <flatcc_verify_field@@Base>
  4124be:	test   eax,eax
  4124c0:	jne    412682 <main@@Base+0xb5b2>
  4124c6:	mov    esi,0x11
  4124cb:	mov    edx,0x4
  4124d0:	mov    ecx,0x4
  4124d5:	mov    rdi,rbx
  4124d8:	call   423bb0 <flatcc_verify_field@@Base>
  4124dd:	test   eax,eax
  4124df:	jne    412682 <main@@Base+0xb5b2>
  4124e5:	mov    esi,0x12
  4124ea:	mov    edx,0x8
  4124ef:	mov    ecx,0x8
  4124f4:	mov    rdi,rbx
  4124f7:	call   423bb0 <flatcc_verify_field@@Base>
  4124fc:	test   eax,eax
  4124fe:	jne    412682 <main@@Base+0xb5b2>
  412504:	mov    esi,0x13
  412509:	mov    edx,0x8
  41250e:	mov    ecx,0x8
  412513:	mov    rdi,rbx
  412516:	call   423bb0 <flatcc_verify_field@@Base>
  41251b:	test   eax,eax
  41251d:	jne    412682 <main@@Base+0xb5b2>
  412523:	mov    esi,0x14
  412528:	mov    edx,0x4
  41252d:	mov    ecx,0x4
  412532:	mov    rdi,rbx
  412535:	call   423bb0 <flatcc_verify_field@@Base>
  41253a:	test   eax,eax
  41253c:	jne    412682 <main@@Base+0xb5b2>
  412542:	mov    esi,0x15
  412547:	mov    edx,0x4
  41254c:	mov    ecx,0x4
  412551:	mov    rdi,rbx
  412554:	call   423bb0 <flatcc_verify_field@@Base>
  412559:	test   eax,eax
  41255b:	jne    412682 <main@@Base+0xb5b2>
  412561:	mov    esi,0x16
  412566:	mov    edx,0x8
  41256b:	mov    ecx,0x8
  412570:	mov    rdi,rbx
  412573:	call   423bb0 <flatcc_verify_field@@Base>
  412578:	test   eax,eax
  41257a:	jne    412682 <main@@Base+0xb5b2>
  412580:	mov    esi,0x17
  412585:	mov    edx,0x8
  41258a:	mov    ecx,0x8
  41258f:	mov    rdi,rbx
  412592:	call   423bb0 <flatcc_verify_field@@Base>
  412597:	test   eax,eax
  412599:	jne    412682 <main@@Base+0xb5b2>
  41259f:	mov    esi,0x19
  4125a4:	mov    edx,0x4
  4125a9:	mov    ecx,0x4
  4125ae:	mov    rdi,rbx
  4125b1:	call   423bb0 <flatcc_verify_field@@Base>
  4125b6:	test   eax,eax
  4125b8:	jne    412682 <main@@Base+0xb5b2>
  4125be:	mov    esi,0x1a
  4125c3:	mov    edx,0x4
  4125c8:	mov    ecx,0x4
  4125cd:	mov    rdi,rbx
  4125d0:	call   423bb0 <flatcc_verify_field@@Base>
  4125d5:	test   eax,eax
  4125d7:	jne    412682 <main@@Base+0xb5b2>
  4125dd:	mov    esi,0x1b
  4125e2:	mov    edx,0x4
  4125e7:	mov    ecx,0x4
  4125ec:	mov    rdi,rbx
  4125ef:	call   423bb0 <flatcc_verify_field@@Base>
  4125f4:	test   eax,eax
  4125f6:	jne    412682 <main@@Base+0xb5b2>
  4125fc:	mov    esi,0x1e
  412601:	xor    edx,edx
  412603:	mov    ecx,0x1
  412608:	mov    r8d,0x1
  41260e:	mov    r9d,0xffffffff
  412614:	mov    rdi,rbx
  412617:	call   423cc0 <flatcc_verify_vector_field@@Base>
  41261c:	test   eax,eax
  41261e:	jne    412682 <main@@Base+0xb5b2>
  412620:	mov    esi,0x20
  412625:	xor    edx,edx
  412627:	mov    ecx,0x8
  41262c:	mov    r8d,0x8
  412632:	mov    r9d,0x1fffffff
  412638:	mov    rdi,rbx
  41263b:	call   423cc0 <flatcc_verify_vector_field@@Base>
  412640:	test   eax,eax
  412642:	jne    412682 <main@@Base+0xb5b2>
  412644:	mov    esi,0x21
  412649:	xor    edx,edx
  41264b:	mov    ecx,0x8
  412650:	mov    r8d,0x8
  412656:	mov    r9d,0x1fffffff
  41265c:	mov    rdi,rbx
  41265f:	call   423cc0 <flatcc_verify_vector_field@@Base>
  412664:	test   eax,eax
  412666:	jne    412682 <main@@Base+0xb5b2>
  412668:	lea    rcx,[rip+0xbef1]        # 41e560 <main@@Base+0x17490>
  41266f:	mov    esi,0x22
  412674:	xor    edx,edx
  412676:	mov    rdi,rbx
  412679:	call   423ef0 <flatcc_verify_table_field@@Base>
  41267e:	test   eax,eax
  412680:	je     412684 <main@@Base+0xb5b4>
  412682:	pop    rbx
  412683:	ret    
  412684:	lea    rcx,[rip+0xbee5]        # 41e570 <main@@Base+0x174a0>
  41268b:	mov    esi,0x23
  412690:	xor    edx,edx
  412692:	mov    rdi,rbx
  412695:	pop    rbx
  412696:	jmp    423ef0 <flatcc_verify_table_field@@Base>
  41269b:	nop    DWORD PTR [rax+rax*1+0x0]
  4126a0:	push   r15
  4126a2:	push   r14
  4126a4:	push   rbx
  4126a5:	mov    r15,r8
  4126a8:	mov    r14,rcx
  4126ab:	mov    rbx,rsi
  4126ae:	mov    rcx,rdx
  4126b1:	sub    rcx,rsi
  4126b4:	cmp    rcx,0x8
  4126b8:	jb     4126c1 <main@@Base+0xb5f1>
  4126ba:	movbe  rcx,QWORD PTR [rbx]
  4126bf:	jmp    41273c <main@@Base+0xb66c>
  4126c1:	and    cl,0xf
  4126c4:	add    cl,0xff
  4126c7:	cmp    cl,0x7
  4126ca:	ja     4127d6 <main@@Base+0xb706>
  4126d0:	xor    eax,eax
  4126d2:	movzx  ecx,cl
  4126d5:	lea    rsi,[rip+0x22c44]        # 435320 <_IO_stdin_used@@Base+0x320>
  4126dc:	movsxd rcx,DWORD PTR [rsi+rcx*4]
  4126e0:	add    rcx,rsi
  4126e3:	jmp    rcx
  4126e5:	movsx  rax,BYTE PTR [rbx+0x7]
  4126ea:	movsx  rcx,BYTE PTR [rbx+0x6]
  4126ef:	shl    rcx,0x8
  4126f3:	or     rax,rcx
  4126f6:	movsx  rcx,BYTE PTR [rbx+0x5]
  4126fb:	shl    rcx,0x10
  4126ff:	or     rax,rcx
  412702:	movsx  rcx,BYTE PTR [rbx+0x4]
  412707:	shl    rcx,0x18
  41270b:	or     rax,rcx
  41270e:	movsx  rcx,BYTE PTR [rbx+0x3]
  412713:	shl    rcx,0x20
  412717:	or     rax,rcx
  41271a:	movsx  rcx,BYTE PTR [rbx+0x2]
  41271f:	shl    rcx,0x28
  412723:	or     rax,rcx
  412726:	movsx  rcx,BYTE PTR [rbx+0x1]
  41272b:	shl    rcx,0x30
  41272f:	or     rax,rcx
  412732:	movzx  ecx,BYTE PTR [rbx]
  412735:	shl    rcx,0x38
  412739:	or     rcx,rax
  41273c:	movabs rax,0x477265656e000000
  412746:	cmp    rcx,rax
  412749:	jae    412776 <main@@Base+0xb6a6>
  41274b:	shr    rcx,0x20
  41274f:	cmp    rcx,0x426c7565
  412756:	jne    4127d6 <main@@Base+0xb706>
  412758:	mov    ecx,0x4
  41275d:	mov    rsi,rbx
  412760:	mov    r8,r9
  412763:	call   425b40 <flatcc_json_parser_match_constant@@Base>
  412768:	cmp    rax,rbx
  41276b:	je     4127d6 <main@@Base+0xb706>
  41276d:	mov    QWORD PTR [r15],0x8
  412774:	jmp    4127cc <main@@Base+0xb6fc>
  412776:	mov    rsi,rcx
  412779:	shr    rsi,0x28
  41277d:	cmp    rsi,0x526564
  412784:	jne    4127a4 <main@@Base+0xb6d4>
  412786:	mov    ecx,0x3
  41278b:	mov    rsi,rbx
  41278e:	mov    r8,r9
  412791:	call   425b40 <flatcc_json_parser_match_constant@@Base>
  412796:	cmp    rax,rbx
  412799:	je     4127d6 <main@@Base+0xb706>
  41279b:	mov    QWORD PTR [r15],0x1
  4127a2:	jmp    4127cc <main@@Base+0xb6fc>
  4127a4:	and    rcx,0xffffffffff000000
  4127ab:	cmp    rcx,rax
  4127ae:	jne    4127d6 <main@@Base+0xb706>
  4127b0:	mov    ecx,0x5
  4127b5:	mov    rsi,rbx
  4127b8:	mov    r8,r9
  4127bb:	call   425b40 <flatcc_json_parser_match_constant@@Base>
  4127c0:	cmp    rax,rbx
  4127c3:	je     4127d6 <main@@Base+0xb706>
  4127c5:	mov    QWORD PTR [r15],0x2
  4127cc:	mov    DWORD PTR [r14],0x0
  4127d3:	mov    rbx,rax
  4127d6:	mov    rax,rbx
  4127d9:	pop    rbx
  4127da:	pop    r14
  4127dc:	pop    r15
  4127de:	ret    
  4127df:	nop
  4127e0:	push   r15
  4127e2:	push   r14
  4127e4:	push   r12
  4127e6:	push   rbx
  4127e7:	push   rax
  4127e8:	mov    r14,r8
  4127eb:	mov    r12,rcx
  4127ee:	mov    r10,rdx
  4127f1:	sub    r10,rsi
  4127f4:	cmp    r10,0x8
  4127f8:	jb     412801 <main@@Base+0xb731>
  4127fa:	movbe  rbx,QWORD PTR [rsi]
  4127ff:	jmp    41287f <main@@Base+0xb7af>
  412801:	mov    ebx,r10d
  412804:	and    bl,0xf
  412807:	add    bl,0xff
  41280a:	cmp    bl,0x7
  41280d:	ja     412c37 <main@@Base+0xbb67>
  412813:	xor    ecx,ecx
  412815:	movzx  ebx,bl
  412818:	lea    r8,[rip+0x22b21]        # 435340 <_IO_stdin_used@@Base+0x340>
  41281f:	movsxd rbx,DWORD PTR [r8+rbx*4]
  412823:	add    rbx,r8
  412826:	jmp    rbx
  412828:	movsx  rcx,BYTE PTR [rsi+0x7]
  41282d:	movsx  rbx,BYTE PTR [rsi+0x6]
  412832:	shl    rbx,0x8
  412836:	or     rcx,rbx
  412839:	movsx  rbx,BYTE PTR [rsi+0x5]
  41283e:	shl    rbx,0x10
  412842:	or     rcx,rbx
  412845:	movsx  rbx,BYTE PTR [rsi+0x4]
  41284a:	shl    rbx,0x18
  41284e:	or     rcx,rbx
  412851:	movsx  rbx,BYTE PTR [rsi+0x3]
  412856:	shl    rbx,0x20
  41285a:	or     rcx,rbx
  41285d:	movsx  rbx,BYTE PTR [rsi+0x2]
  412862:	shl    rbx,0x28
  412866:	or     rcx,rbx
  412869:	movsx  rbx,BYTE PTR [rsi+0x1]
  41286e:	shl    rbx,0x30
  412872:	or     rcx,rbx
  412875:	movzx  ebx,BYTE PTR [rsi]
  412878:	shl    rbx,0x38
  41287c:	or     rbx,rcx
  41287f:	movabs rcx,0x6865785f656e756d
  412889:	cmp    rbx,rcx
  41288c:	jae    4128f9 <main@@Base+0xb829>
  41288e:	movabs r8,0x436f6c6f72000000
  412898:	movabs rcx,0xffffff0000000000
  4128a2:	and    rcx,rbx
  4128a5:	cmp    rbx,r8
  4128a8:	jae    41294d <main@@Base+0xb87d>
  4128ae:	cmp    r10,0x4
  4128b2:	jl     412c37 <main@@Base+0xbb67>
  4128b8:	movabs rax,0x416e790000000000
  4128c2:	cmp    rcx,rax
  4128c5:	jne    412c37 <main@@Base+0xbb67>
  4128cb:	lea    rax,[rsi+0x4]
  4128cf:	cmp    BYTE PTR [rsi+0x3],0x2e
  4128d3:	cmovne rax,rsi
  4128d7:	cmp    rax,rsi
  4128da:	je     412c37 <main@@Base+0xbb67>
  4128e0:	mov    rsi,rax
  4128e3:	mov    rcx,r12
  4128e6:	mov    r8,r14
  4128e9:	add    rsp,0x8
  4128ed:	pop    rbx
  4128ee:	pop    r12
  4128f0:	pop    r14
  4128f2:	pop    r15
  4128f4:	jmp    415660 <main@@Base+0xe590>
  4128f9:	movabs r8,0x696e745f656e756d
  412903:	cmp    rbx,r8
  412906:	jae    412998 <main@@Base+0xb8c8>
  41290c:	cmp    r10,0x9
  412910:	jl     412c37 <main@@Base+0xbb67>
  412916:	cmp    rbx,rcx
  412919:	jne    412c37 <main@@Base+0xbb67>
  41291f:	lea    rax,[rsi+0x9]
  412923:	cmp    BYTE PTR [rsi+0x8],0x2e
  412927:	cmovne rax,rsi
  41292b:	cmp    rax,rsi
  41292e:	je     412c37 <main@@Base+0xbb67>
  412934:	mov    rsi,rax
  412937:	mov    rcx,r12
  41293a:	mov    r8,r14
  41293d:	add    rsp,0x8
  412941:	pop    rbx
  412942:	pop    r12
  412944:	pop    r14
  412946:	pop    r15
  412948:	jmp    4168c0 <main@@Base+0xf7f0>
  41294d:	movabs rax,0x466f6f0000000000
  412957:	cmp    rcx,rax
  41295a:	jne    4129ec <main@@Base+0xb91c>
  412960:	cmp    r10,0x4
  412964:	jl     412c37 <main@@Base+0xbb67>
  41296a:	lea    rax,[rsi+0x4]
  41296e:	cmp    BYTE PTR [rsi+0x3],0x2e
  412972:	cmovne rax,rsi
  412976:	cmp    rax,rsi
  412979:	je     412c37 <main@@Base+0xbb67>
  41297f:	mov    rsi,rax
  412982:	mov    rcx,r12
  412985:	mov    r8,r14
  412988:	add    rsp,0x8
  41298c:	pop    rbx
  41298d:	pop    r12
  41298f:	pop    r14
  412991:	pop    r15
  412993:	jmp    416660 <main@@Base+0xf590>
  412998:	movabs rax,0x6e65675f656e756c
  4129a2:	cmp    rbx,rax
  4129a5:	ja     412a34 <main@@Base+0xb964>
  4129ab:	cmp    r10,0x9
  4129af:	jl     412c37 <main@@Base+0xbb67>
  4129b5:	cmp    rbx,r8
  4129b8:	jne    412c37 <main@@Base+0xbb67>
  4129be:	lea    rax,[rsi+0x9]
  4129c2:	cmp    BYTE PTR [rsi+0x8],0x2e
  4129c6:	cmovne rax,rsi
  4129ca:	cmp    rax,rsi
  4129cd:	je     412c37 <main@@Base+0xbb67>
  4129d3:	mov    rsi,rax
  4129d6:	mov    rcx,r12
  4129d9:	mov    r8,r14
  4129dc:	add    rsp,0x8
  4129e0:	pop    rbx
  4129e1:	pop    r12
  4129e3:	pop    r14
  4129e5:	pop    r15
  4129e7:	jmp    416a30 <main@@Base+0xf960>
  4129ec:	cmp    r10,0x6
  4129f0:	jl     412c37 <main@@Base+0xbb67>
  4129f6:	and    rbx,0xffffffffff000000
  4129fd:	cmp    rbx,r8
  412a00:	jne    412c37 <main@@Base+0xbb67>
  412a06:	lea    rax,[rsi+0x6]
  412a0a:	cmp    BYTE PTR [rsi+0x5],0x2e
  412a0e:	cmovne rax,rsi
  412a12:	cmp    rax,rsi
  412a15:	je     412c37 <main@@Base+0xbb67>
  412a1b:	mov    rsi,rax
  412a1e:	mov    rcx,r12
  412a21:	mov    r8,r14
  412a24:	add    rsp,0x8
  412a28:	pop    rbx
  412a29:	pop    r12
  412a2b:	pop    r14
  412a2d:	pop    r15
  412a2f:	jmp    4126a0 <main@@Base+0xb5d0>
  412a34:	movabs rax,0x6e6f74656d707479
  412a3e:	cmp    rbx,rax
  412a41:	je     412a8e <main@@Base+0xb9be>
  412a43:	movabs rax,0x6e65675f656e756d
  412a4d:	cmp    rbx,rax
  412a50:	jne    412c37 <main@@Base+0xbb67>
  412a56:	cmp    r10,0x9
  412a5a:	jl     412c37 <main@@Base+0xbb67>
  412a60:	lea    rax,[rsi+0x9]
  412a64:	cmp    BYTE PTR [rsi+0x8],0x2e
  412a68:	cmovne rax,rsi
  412a6c:	cmp    rax,rsi
  412a6f:	je     412c37 <main@@Base+0xbb67>
  412a75:	mov    rsi,rax
  412a78:	mov    rcx,r12
  412a7b:	mov    r8,r14
  412a7e:	add    rsp,0x8
  412a82:	pop    rbx
  412a83:	pop    r12
  412a85:	pop    r14
  412a87:	pop    r15
  412a89:	jmp    416be0 <main@@Base+0xfb10>
  412a8e:	lea    r8,[rsi+0x8]
  412a92:	mov    rcx,rdx
  412a95:	sub    rcx,r8
  412a98:	cmp    rcx,0x8
  412a9c:	jb     412ab2 <main@@Base+0xb9e2>
  412a9e:	movbe  rbx,QWORD PTR [r8]
  412aa3:	cmp    rcx,0x5
  412aa7:	jge    412b3a <main@@Base+0xba6a>
  412aad:	jmp    412c37 <main@@Base+0xbb67>
  412ab2:	mov    ebx,ecx
  412ab4:	and    bl,0xf
  412ab7:	add    bl,0xff
  412aba:	cmp    bl,0x7
  412abd:	ja     412c37 <main@@Base+0xbb67>
  412ac3:	xor    eax,eax
  412ac5:	movzx  ebx,bl
  412ac8:	lea    r10,[rip+0x22891]        # 435360 <_IO_stdin_used@@Base+0x360>
  412acf:	movsxd rbx,DWORD PTR [r10+rbx*4]
  412ad3:	add    rbx,r10
  412ad6:	jmp    rbx
  412ad8:	movsx  rax,BYTE PTR [rsi+0xf]
  412add:	movsx  rbx,BYTE PTR [rsi+0xe]
  412ae2:	shl    rbx,0x8
  412ae6:	or     rax,rbx
  412ae9:	movsx  rbx,BYTE PTR [rsi+0xd]
  412aee:	shl    rbx,0x10
  412af2:	or     rax,rbx
  412af5:	movsx  rbx,BYTE PTR [rsi+0xc]
  412afa:	shl    rbx,0x18
  412afe:	or     rax,rbx
  412b01:	movsx  rbx,BYTE PTR [rsi+0xb]
  412b06:	shl    rbx,0x20
  412b0a:	or     rax,rbx
  412b0d:	movsx  rbx,BYTE PTR [rsi+0xa]
  412b12:	shl    rbx,0x28
  412b16:	or     rax,rbx
  412b19:	movsx  rbx,BYTE PTR [rsi+0x9]
  412b1e:	shl    rbx,0x30
  412b22:	or     rax,rbx
  412b25:	movzx  ebx,BYTE PTR [r8]
  412b29:	shl    rbx,0x38
  412b2d:	or     rbx,rax
  412b30:	cmp    rcx,0x5
  412b34:	jl     412c37 <main@@Base+0xbb67>
  412b3a:	movabs rax,0xffffffff00000000
  412b44:	and    rbx,rax
  412b47:	movabs rax,0x656e756d00000000
  412b51:	cmp    rbx,rax
  412b54:	jne    412c37 <main@@Base+0xbb67>
  412b5a:	lea    r15,[rsi+0xd]
  412b5e:	cmp    BYTE PTR [rsi+0xc],0x2e
  412b62:	cmovne r15,r8
  412b66:	cmp    r15,r8
  412b69:	je     412c37 <main@@Base+0xbb67>
  412b6f:	mov    rcx,rdx
  412b72:	sub    rcx,r15
  412b75:	cmp    rcx,0x8
  412b79:	jb     412b82 <main@@Base+0xbab2>
  412b7b:	movbe  rcx,QWORD PTR [r15]
  412b80:	jmp    412bfe <main@@Base+0xbb2e>
  412b82:	and    cl,0xf
  412b85:	add    cl,0xff
  412b88:	cmp    cl,0x7
  412b8b:	ja     412c34 <main@@Base+0xbb64>
  412b91:	xor    eax,eax
  412b93:	movzx  ecx,cl
  412b96:	lea    rsi,[rip+0x227e3]        # 435380 <_IO_stdin_used@@Base+0x380>
  412b9d:	movsxd rcx,DWORD PTR [rsi+rcx*4]
  412ba1:	add    rcx,rsi
  412ba4:	jmp    rcx
  412ba6:	movsx  rax,BYTE PTR [r15+0x7]
  412bab:	movsx  rcx,BYTE PTR [r15+0x6]
  412bb0:	shl    rcx,0x8
  412bb4:	or     rax,rcx
  412bb7:	movsx  rcx,BYTE PTR [r15+0x5]
  412bbc:	shl    rcx,0x10
  412bc0:	or     rax,rcx
  412bc3:	movsx  rcx,BYTE PTR [r15+0x4]
  412bc8:	shl    rcx,0x18
  412bcc:	or     rax,rcx
  412bcf:	movsx  rcx,BYTE PTR [r15+0x3]
  412bd4:	shl    rcx,0x20
  412bd8:	or     rax,rcx
  412bdb:	movsx  rcx,BYTE PTR [r15+0x2]
  412be0:	shl    rcx,0x28
  412be4:	or     rax,rcx
  412be7:	movsx  rcx,BYTE PTR [r15+0x1]
  412bec:	shl    rcx,0x30
  412bf0:	or     rax,rcx
  412bf3:	movzx  ecx,BYTE PTR [r15]
  412bf7:	shl    rcx,0x38
  412bfb:	or     rcx,rax
  412bfe:	shr    rcx,0x38
  412c02:	cmp    rcx,0x78
  412c06:	jne    412c34 <main@@Base+0xbb64>
  412c08:	mov    ecx,0x1
  412c0d:	mov    rsi,r15
  412c10:	mov    r8,r9
  412c13:	call   425b40 <flatcc_json_parser_match_constant@@Base>
  412c18:	mov    rsi,r15
  412c1b:	cmp    rax,r15
  412c1e:	je     412c37 <main@@Base+0xbb67>
  412c20:	mov    QWORD PTR [r14],0x0
  412c27:	mov    DWORD PTR [r12],0x0
  412c2f:	mov    rsi,rax
  412c32:	jmp    412c37 <main@@Base+0xbb67>
  412c34:	mov    rsi,r15
  412c37:	mov    rax,rsi
  412c3a:	add    rsp,0x8
  412c3e:	pop    rbx
  412c3f:	pop    r12
  412c41:	pop    r14
  412c43:	pop    r15
  412c45:	ret    
  412c46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412c50:	push   rbp
  412c51:	push   r15
  412c53:	push   r14
  412c55:	push   r13
  412c57:	push   r12
  412c59:	push   rbx
  412c5a:	push   rax
  412c5b:	mov    r12,r9
  412c5e:	mov    r14,r8
  412c61:	mov    r15,rcx
  412c64:	mov    rbp,rdx
  412c67:	mov    r13,rdi
  412c6a:	mov    rcx,rdx
  412c6d:	sub    rcx,rsi
  412c70:	cmp    rcx,0x8
  412c74:	jb     412c7d <main@@Base+0xbbad>
  412c76:	movbe  rcx,QWORD PTR [rsi]
  412c7b:	jmp    412cf8 <main@@Base+0xbc28>
  412c7d:	and    cl,0xf
  412c80:	add    cl,0xff
  412c83:	cmp    cl,0x7
  412c86:	ja     413b72 <main@@Base+0xcaa2>
  412c8c:	xor    eax,eax
  412c8e:	movzx  ecx,cl
  412c91:	lea    rdx,[rip+0x22708]        # 4353a0 <_IO_stdin_used@@Base+0x3a0>
  412c98:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  412c9c:	add    rcx,rdx
  412c9f:	jmp    rcx
  412ca1:	movsx  rax,BYTE PTR [rsi+0x7]
  412ca6:	movsx  rcx,BYTE PTR [rsi+0x6]
  412cab:	shl    rcx,0x8
  412caf:	or     rax,rcx
  412cb2:	movsx  rcx,BYTE PTR [rsi+0x5]
  412cb7:	shl    rcx,0x10
  412cbb:	or     rax,rcx
  412cbe:	movsx  rcx,BYTE PTR [rsi+0x4]
  412cc3:	shl    rcx,0x18
  412cc7:	or     rax,rcx
  412cca:	movsx  rcx,BYTE PTR [rsi+0x3]
  412ccf:	shl    rcx,0x20
  412cd3:	or     rax,rcx
  412cd6:	movsx  rcx,BYTE PTR [rsi+0x2]
  412cdb:	shl    rcx,0x28
  412cdf:	or     rax,rcx
  412ce2:	movsx  rcx,BYTE PTR [rsi+0x1]
  412ce7:	shl    rcx,0x30
  412ceb:	or     rax,rcx
  412cee:	movzx  ecx,BYTE PTR [rsi]
  412cf1:	shl    rcx,0x38
  412cf5:	or     rcx,rax
  412cf8:	movabs rax,0x4d7947616d652e44
  412d02:	cmp    rcx,rax
  412d05:	ja     412d34 <main@@Base+0xbc64>
  412d07:	movabs rax,0x46616e746173792e
  412d11:	cmp    rcx,rax
  412d14:	jne    413b72 <main@@Base+0xcaa2>
  412d1a:	lea    rax,[rsi+0x8]
  412d1e:	mov    rdx,rbp
  412d21:	sub    rdx,rax
  412d24:	cmp    rdx,0x8
  412d28:	jb     412d92 <main@@Base+0xbcc2>
  412d2a:	movbe  rax,QWORD PTR [rax]
  412d2f:	jmp    412e0d <main@@Base+0xbd3d>
  412d34:	movabs rax,0x4d7947616d652e4f
  412d3e:	cmp    rcx,rax
  412d41:	je     412d74 <main@@Base+0xbca4>
  412d43:	movabs rax,0x4d7947616d652e45
  412d4d:	cmp    rcx,rax
  412d50:	jne    413b72 <main@@Base+0xcaa2>
  412d56:	lea    rax,[rsi+0x8]
  412d5a:	mov    rdx,rbp
  412d5d:	sub    rdx,rax
  412d60:	cmp    rdx,0x8
  412d64:	jb     412e48 <main@@Base+0xbd78>
  412d6a:	movbe  rax,QWORD PTR [rax]
  412d6f:	jmp    412ec3 <main@@Base+0xbdf3>
  412d74:	lea    rax,[rsi+0x8]
  412d78:	mov    rdx,rbp
  412d7b:	sub    rdx,rax
  412d7e:	cmp    rdx,0x8
  412d82:	jb     412f18 <main@@Base+0xbe48>
  412d88:	movbe  rax,QWORD PTR [rax]
  412d8d:	jmp    412f93 <main@@Base+0xbec3>
  412d92:	and    dl,0xf
  412d95:	add    dl,0xff
  412d98:	cmp    dl,0x7
  412d9b:	ja     413b72 <main@@Base+0xcaa2>
  412da1:	xor    ecx,ecx
  412da3:	movzx  edx,dl
  412da6:	lea    rdi,[rip+0x227b3]        # 435560 <_IO_stdin_used@@Base+0x560>
  412dad:	movsxd rdx,DWORD PTR [rdi+rdx*4]
  412db1:	add    rdx,rdi
  412db4:	jmp    rdx
  412db6:	movsx  rcx,BYTE PTR [rsi+0xf]
  412dbb:	movsx  rdx,BYTE PTR [rsi+0xe]
  412dc0:	shl    rdx,0x8
  412dc4:	or     rcx,rdx
  412dc7:	movsx  rdx,BYTE PTR [rsi+0xd]
  412dcc:	shl    rdx,0x10
  412dd0:	or     rcx,rdx
  412dd3:	movsx  rdx,BYTE PTR [rsi+0xc]
  412dd8:	shl    rdx,0x18
  412ddc:	or     rcx,rdx
  412ddf:	movsx  rdx,BYTE PTR [rsi+0xb]
  412de4:	shl    rdx,0x20
  412de8:	or     rcx,rdx
  412deb:	movsx  rdx,BYTE PTR [rsi+0xa]
  412df0:	shl    rdx,0x28
  412df4:	or     rcx,rdx
  412df7:	movsx  rdx,BYTE PTR [rsi+0x9]
  412dfc:	shl    rdx,0x30
  412e00:	or     rcx,rdx
  412e03:	movzx  eax,BYTE PTR [rax]
  412e06:	shl    rax,0x38
  412e0a:	or     rax,rcx
  412e0d:	movabs rcx,0x4368617261637465
  412e17:	cmp    rax,rcx
  412e1a:	jne    413b72 <main@@Base+0xcaa2>
  412e20:	lea    rcx,[rsi+0x10]
  412e24:	mov    rax,rbp
  412e27:	sub    rax,rcx
  412e2a:	cmp    rax,0x8
  412e2e:	jb     413043 <main@@Base+0xbf73>
  412e34:	movbe  rdi,QWORD PTR [rcx]
  412e39:	cmp    rax,0x2
  412e3d:	jge    4130ca <main@@Base+0xbffa>
  412e43:	jmp    413b72 <main@@Base+0xcaa2>
  412e48:	and    dl,0xf
  412e4b:	add    dl,0xff
  412e4e:	cmp    dl,0x7
  412e51:	ja     413b72 <main@@Base+0xcaa2>
  412e57:	xor    ecx,ecx
  412e59:	movzx  edx,dl
  412e5c:	lea    rdi,[rip+0x2261d]        # 435480 <_IO_stdin_used@@Base+0x480>
  412e63:	movsxd rdx,DWORD PTR [rdi+rdx*4]
  412e67:	add    rdx,rdi
  412e6a:	jmp    rdx
  412e6c:	movsx  rcx,BYTE PTR [rsi+0xf]
  412e71:	movsx  rdx,BYTE PTR [rsi+0xe]
  412e76:	shl    rdx,0x8
  412e7a:	or     rcx,rdx
  412e7d:	movsx  rdx,BYTE PTR [rsi+0xd]
  412e82:	shl    rdx,0x10
  412e86:	or     rcx,rdx
  412e89:	movsx  rdx,BYTE PTR [rsi+0xc]
  412e8e:	shl    rdx,0x18
  412e92:	or     rcx,rdx
  412e95:	movsx  rdx,BYTE PTR [rsi+0xb]
  412e9a:	shl    rdx,0x20
  412e9e:	or     rcx,rdx
  412ea1:	movsx  rdx,BYTE PTR [rsi+0xa]
  412ea6:	shl    rdx,0x28
  412eaa:	or     rcx,rdx
  412ead:	movsx  rdx,BYTE PTR [rsi+0x9]
  412eb2:	shl    rdx,0x30
  412eb6:	or     rcx,rdx
  412eb9:	movzx  eax,BYTE PTR [rax]
  412ebc:	shl    rax,0x38
  412ec0:	or     rax,rcx
  412ec3:	movabs rcx,0x78616d706c652e68
  412ecd:	cmp    rax,rcx
  412ed0:	jae    412fc4 <main@@Base+0xbef4>
  412ed6:	lea    rdx,[rcx-0x25]
  412eda:	cmp    rax,rdx
  412edd:	jae    413124 <main@@Base+0xc054>
  412ee3:	add    rcx,0xffffffffffffffd9
  412ee7:	cmp    rax,rcx
  412eea:	jne    413b72 <main@@Base+0xcaa2>
  412ef0:	lea    rbx,[rsi+0x10]
  412ef4:	mov    rax,rbp
  412ef7:	sub    rax,rbx
  412efa:	cmp    rax,0x8
  412efe:	jb     413403 <main@@Base+0xc333>
  412f04:	movbe  rdi,QWORD PTR [rbx]
  412f09:	cmp    rax,0x3
  412f0d:	jge    41348a <main@@Base+0xc3ba>
  412f13:	jmp    413b72 <main@@Base+0xcaa2>
  412f18:	and    dl,0xf
  412f1b:	add    dl,0xff
  412f1e:	cmp    dl,0x7
  412f21:	ja     413b72 <main@@Base+0xcaa2>
  412f27:	xor    ecx,ecx
  412f29:	movzx  edx,dl
  412f2c:	lea    rdi,[rip+0x2248d]        # 4353c0 <_IO_stdin_used@@Base+0x3c0>
  412f33:	movsxd rdx,DWORD PTR [rdi+rdx*4]
  412f37:	add    rdx,rdi
  412f3a:	jmp    rdx
  412f3c:	movsx  rcx,BYTE PTR [rsi+0xf]
  412f41:	movsx  rdx,BYTE PTR [rsi+0xe]
  412f46:	shl    rdx,0x8
  412f4a:	or     rcx,rdx
  412f4d:	movsx  rdx,BYTE PTR [rsi+0xd]
  412f52:	shl    rdx,0x10
  412f56:	or     rcx,rdx
  412f59:	movsx  rdx,BYTE PTR [rsi+0xc]
  412f5e:	shl    rdx,0x18
  412f62:	or     rcx,rdx
  412f65:	movsx  rdx,BYTE PTR [rsi+0xb]
  412f6a:	shl    rdx,0x20
  412f6e:	or     rcx,rdx
  412f71:	movsx  rdx,BYTE PTR [rsi+0xa]
  412f76:	shl    rdx,0x28
  412f7a:	or     rcx,rdx
  412f7d:	movsx  rdx,BYTE PTR [rsi+0x9]
  412f82:	shl    rdx,0x30
  412f86:	or     rcx,rdx
  412f89:	movzx  eax,BYTE PTR [rax]
  412f8c:	shl    rax,0x38
  412f90:	or     rax,rcx
  412f93:	movabs rcx,0x746865724e616d65
  412f9d:	cmp    rax,rcx
  412fa0:	jne    413b72 <main@@Base+0xcaa2>
  412fa6:	lea    rax,[rsi+0x10]
  412faa:	mov    rdx,rbp
  412fad:	sub    rdx,rax
  412fb0:	cmp    rdx,0x8
  412fb4:	jb     413172 <main@@Base+0xc0a2>
  412fba:	movbe  rax,QWORD PTR [rax]
  412fbf:	jmp    4131ed <main@@Base+0xc11d>
  412fc4:	jne    41321e <main@@Base+0xc14e>
  412fca:	lea    rcx,[rsi+0x10]
  412fce:	mov    rax,rbp
  412fd1:	sub    rax,rcx
  412fd4:	cmp    rax,0x8
  412fd8:	jb     413b72 <main@@Base+0xcaa2>
  412fde:	cmp    rax,0x8
  412fe2:	jl     413b72 <main@@Base+0xcaa2>
  412fe8:	mov    al,0x38
  412fea:	bzhi   rax,QWORD PTR [rcx],rax
  412fef:	movabs rdx,0x6d756e655f746e
  412ff9:	add    rdx,0x3f7
  413000:	cmp    rax,rdx
  413003:	jne    413b72 <main@@Base+0xcaa2>
  413009:	lea    rax,[rsi+0x18]
  41300d:	cmp    BYTE PTR [rsi+0x17],0x2e
  413011:	cmovne rax,rcx
  413015:	cmp    rax,rcx
  413018:	je     413b72 <main@@Base+0xcaa2>
  41301e:	mov    rdi,r13
  413021:	mov    rsi,rax
  413024:	mov    rdx,rbp
  413027:	mov    rcx,r15
  41302a:	mov    r8,r14
  41302d:	mov    r9,r12
  413030:	add    rsp,0x8
  413034:	pop    rbx
  413035:	pop    r12
  413037:	pop    r13
  413039:	pop    r14
  41303b:	pop    r15
  41303d:	pop    rbp
  41303e:	jmp    4168c0 <main@@Base+0xf7f0>
  413043:	mov    ebx,eax
  413045:	and    bl,0xf
  413048:	add    bl,0xff
  41304b:	cmp    bl,0x7
  41304e:	ja     413b72 <main@@Base+0xcaa2>
  413054:	xor    edx,edx
  413056:	movzx  edi,bl
  413059:	lea    rbx,[rip+0x22520]        # 435580 <_IO_stdin_used@@Base+0x580>
  413060:	movsxd rdi,DWORD PTR [rbx+rdi*4]
  413064:	add    rdi,rbx
  413067:	jmp    rdi
  413069:	movsx  rdx,BYTE PTR [rsi+0x17]
  41306e:	movsx  rdi,BYTE PTR [rsi+0x16]
  413073:	shl    rdi,0x8
  413077:	or     rdx,rdi
  41307a:	movsx  rdi,BYTE PTR [rsi+0x15]
  41307f:	shl    rdi,0x10
  413083:	or     rdx,rdi
  413086:	movsx  rdi,BYTE PTR [rsi+0x14]
  41308b:	shl    rdi,0x18
  41308f:	or     rdx,rdi
  413092:	movsx  rdi,BYTE PTR [rsi+0x13]
  413097:	shl    rdi,0x20
  41309b:	or     rdx,rdi
  41309e:	movsx  rdi,BYTE PTR [rsi+0x12]
  4130a3:	shl    rdi,0x28
  4130a7:	or     rdx,rdi
  4130aa:	movsx  rdi,BYTE PTR [rsi+0x11]
  4130af:	shl    rdi,0x30
  4130b3:	or     rdx,rdi
  4130b6:	movzx  edi,BYTE PTR [rcx]
  4130b9:	shl    rdi,0x38
  4130bd:	or     rdi,rdx
  4130c0:	cmp    rax,0x2
  4130c4:	jl     413b72 <main@@Base+0xcaa2>
  4130ca:	movabs rax,0xff00000000000000
  4130d4:	and    rdi,rax
  4130d7:	movabs rax,0x7200000000000000
  4130e1:	cmp    rdi,rax
  4130e4:	jne    413b72 <main@@Base+0xcaa2>
  4130ea:	lea    rax,[rsi+0x12]
  4130ee:	cmp    BYTE PTR [rsi+0x11],0x2e
  4130f2:	cmovne rax,rcx
  4130f6:	cmp    rax,rcx
  4130f9:	je     413b72 <main@@Base+0xcaa2>
  4130ff:	mov    rdi,r13
  413102:	mov    rsi,rax
  413105:	mov    rdx,rbp
  413108:	mov    rcx,r15
  41310b:	mov    r8,r14
  41310e:	mov    r9,r12
  413111:	add    rsp,0x8
  413115:	pop    rbx
  413116:	pop    r12
  413118:	pop    r13
  41311a:	pop    r14
  41311c:	pop    r15
  41311e:	pop    rbp
  41311f:	jmp    416d40 <main@@Base+0xfc70>
  413124:	movabs rcx,0x78616d706c652e46
  41312e:	cmp    rax,rcx
  413131:	je     4133db <main@@Base+0xc30b>
  413137:	movabs rcx,0x78616d706c652e43
  413141:	cmp    rax,rcx
  413144:	jne    413b72 <main@@Base+0xcaa2>
  41314a:	lea    rbx,[rsi+0x10]
  41314e:	mov    rax,rbp
  413151:	sub    rax,rbx
  413154:	cmp    rax,0x8
  413158:	jb     4135b7 <main@@Base+0xc4e7>
  41315e:	movbe  rdi,QWORD PTR [rbx]
  413163:	cmp    rax,0x5
  413167:	jge    41363e <main@@Base+0xc56e>
  41316d:	jmp    413b72 <main@@Base+0xcaa2>
  413172:	and    dl,0xf
  413175:	add    dl,0xff
  413178:	cmp    dl,0x7
  41317b:	ja     413b72 <main@@Base+0xcaa2>
  413181:	xor    ecx,ecx
  413183:	movzx  edx,dl
  413186:	lea    rdi,[rip+0x22253]        # 4353e0 <_IO_stdin_used@@Base+0x3e0>
  41318d:	movsxd rdx,DWORD PTR [rdi+rdx*4]
  413191:	add    rdx,rdi
  413194:	jmp    rdx
  413196:	movsx  rcx,BYTE PTR [rsi+0x17]
  41319b:	movsx  rdx,BYTE PTR [rsi+0x16]
  4131a0:	shl    rdx,0x8
  4131a4:	or     rcx,rdx
  4131a7:	movsx  rdx,BYTE PTR [rsi+0x15]
  4131ac:	shl    rdx,0x10
  4131b0:	or     rcx,rdx
  4131b3:	movsx  rdx,BYTE PTR [rsi+0x14]
  4131b8:	shl    rdx,0x18
  4131bc:	or     rcx,rdx
  4131bf:	movsx  rdx,BYTE PTR [rsi+0x13]
  4131c4:	shl    rdx,0x20
  4131c8:	or     rcx,rdx
  4131cb:	movsx  rdx,BYTE PTR [rsi+0x12]
  4131d0:	shl    rdx,0x28
  4131d4:	or     rcx,rdx
  4131d7:	movsx  rdx,BYTE PTR [rsi+0x11]
  4131dc:	shl    rdx,0x30
  4131e0:	or     rcx,rdx
  4131e3:	movzx  eax,BYTE PTR [rax]
  4131e6:	shl    rax,0x38
  4131ea:	or     rax,rcx
  4131ed:	movabs rcx,0x53706163652e4672
  4131f7:	cmp    rax,rcx
  4131fa:	jne    413b72 <main@@Base+0xcaa2>
  413200:	lea    rax,[rsi+0x18]
  413204:	mov    rdx,rbp
  413207:	sub    rdx,rax
  41320a:	cmp    rdx,0x8
  41320e:	jb     413325 <main@@Base+0xc255>
  413214:	movbe  rax,QWORD PTR [rax]
  413219:	jmp    4133a0 <main@@Base+0xc2d0>
  41321e:	lea    rdx,[rcx+0x6]
  413222:	cmp    rax,rdx
  413225:	jae    4132a6 <main@@Base+0xc1d6>
  413227:	add    rcx,0x1
  41322b:	cmp    rax,rcx
  41322e:	jne    413b72 <main@@Base+0xcaa2>
  413234:	lea    rcx,[rsi+0x10]
  413238:	mov    rax,rbp
  41323b:	sub    rax,rcx
  41323e:	cmp    rax,0x8
  413242:	jb     413b72 <main@@Base+0xcaa2>
  413248:	cmp    rax,0x8
  41324c:	jl     413b72 <main@@Base+0xcaa2>
  413252:	mov    al,0x38
  413254:	bzhi   rax,QWORD PTR [rcx],rax
  413259:	movabs rdx,0x6d756e655f746e
  413263:	cmp    rax,rdx
  413266:	jne    413b72 <main@@Base+0xcaa2>
  41326c:	lea    rax,[rsi+0x18]
  413270:	cmp    BYTE PTR [rsi+0x17],0x2e
  413274:	cmovne rax,rcx
  413278:	cmp    rax,rcx
  41327b:	je     413b72 <main@@Base+0xcaa2>
  413281:	mov    rdi,r13
  413284:	mov    rsi,rax
  413287:	mov    rdx,rbp
  41328a:	mov    rcx,r15
  41328d:	mov    r8,r14
  413290:	mov    r9,r12
  413293:	add    rsp,0x8
  413297:	pop    rbx
  413298:	pop    r12
  41329a:	pop    r13
  41329c:	pop    r14
  41329e:	pop    r15
  4132a0:	pop    rbp
  4132a1:	jmp    416a30 <main@@Base+0xf960>
  4132a6:	jne    413b72 <main@@Base+0xcaa2>
  4132ac:	lea    rcx,[rsi+0x10]
  4132b0:	mov    rdi,rbp
  4132b3:	sub    rdi,rcx
  4132b6:	cmp    rdi,0x7
  4132ba:	jbe    413779 <main@@Base+0xc6a9>
  4132c0:	movbe  rdx,QWORD PTR [rcx]
  4132c5:	cmp    rdi,0x8
  4132c9:	jl     4137f8 <main@@Base+0xc728>
  4132cf:	mov    rax,rdx
  4132d2:	and    rax,0xffffffffffffff00
  4132d8:	movabs rdi,0x65675f656e756d00
  4132e2:	cmp    rax,rdi
  4132e5:	jne    4137f8 <main@@Base+0xc728>
  4132eb:	lea    rax,[rsi+0x18]
  4132ef:	cmp    BYTE PTR [rsi+0x17],0x2e
  4132f3:	cmovne rax,rcx
  4132f7:	cmp    rax,rcx
  4132fa:	je     4137f8 <main@@Base+0xc728>
  413300:	mov    rdi,r13
  413303:	mov    rsi,rax
  413306:	mov    rdx,rbp
  413309:	mov    rcx,r15
  41330c:	mov    r8,r14
  41330f:	mov    r9,r12
  413312:	add    rsp,0x8
  413316:	pop    rbx
  413317:	pop    r12
  413319:	pop    r13
  41331b:	pop    r14
  41331d:	pop    r15
  41331f:	pop    rbp
  413320:	jmp    416be0 <main@@Base+0xfb10>
  413325:	and    dl,0xf
  413328:	add    dl,0xff
  41332b:	cmp    dl,0x7
  41332e:	ja     413b72 <main@@Base+0xcaa2>
  413334:	xor    ecx,ecx
  413336:	movzx  edx,dl
  413339:	lea    rdi,[rip+0x220c0]        # 435400 <_IO_stdin_used@@Base+0x400>
  413340:	movsxd rdx,DWORD PTR [rdi+rdx*4]
  413344:	add    rdx,rdi
  413347:	jmp    rdx
  413349:	movsx  rcx,BYTE PTR [rsi+0x1f]
  41334e:	movsx  rdx,BYTE PTR [rsi+0x1e]
  413353:	shl    rdx,0x8
  413357:	or     rcx,rdx
  41335a:	movsx  rdx,BYTE PTR [rsi+0x1d]
  41335f:	shl    rdx,0x10
  413363:	or     rcx,rdx
  413366:	movsx  rdx,BYTE PTR [rsi+0x1c]
  41336b:	shl    rdx,0x18
  41336f:	or     rcx,rdx
  413372:	movsx  rdx,BYTE PTR [rsi+0x1b]
  413377:	shl    rdx,0x20
  41337b:	or     rcx,rdx
  41337e:	movsx  rdx,BYTE PTR [rsi+0x1a]
  413383:	shl    rdx,0x28
  413387:	or     rcx,rdx
  41338a:	movsx  rdx,BYTE PTR [rsi+0x19]
  41338f:	shl    rdx,0x30
  413393:	or     rcx,rdx
  413396:	movzx  eax,BYTE PTR [rax]
  413399:	shl    rax,0x38
  41339d:	or     rax,rcx
  4133a0:	movabs rcx,0x6f6d496e636c7564
  4133aa:	cmp    rax,rcx
  4133ad:	jne    413b72 <main@@Base+0xcaa2>
  4133b3:	lea    rbx,[rsi+0x20]
  4133b7:	mov    rcx,rbp
  4133ba:	sub    rcx,rbx
  4133bd:	cmp    rcx,0x8
  4133c1:	jb     4134e4 <main@@Base+0xc414>
  4133c7:	movbe  rdi,QWORD PTR [rbx]
  4133cc:	cmp    rcx,0x2
  4133d0:	jge    413568 <main@@Base+0xc498>
  4133d6:	jmp    413b72 <main@@Base+0xcaa2>
  4133db:	lea    rbx,[rsi+0x10]
  4133df:	mov    rax,rbp
  4133e2:	sub    rax,rbx
  4133e5:	cmp    rax,0x8
  4133e9:	jb     413698 <main@@Base+0xc5c8>
  4133ef:	movbe  rdi,QWORD PTR [rbx]
  4133f4:	cmp    rax,0x3
  4133f8:	jge    41371f <main@@Base+0xc64f>
  4133fe:	jmp    413b72 <main@@Base+0xcaa2>
  413403:	mov    ecx,eax
  413405:	and    cl,0xf
  413408:	add    cl,0xff
  41340b:	cmp    cl,0x7
  41340e:	ja     413b72 <main@@Base+0xcaa2>
  413414:	xor    edx,edx
  413416:	movzx  ecx,cl
  413419:	lea    rdi,[rip+0x22120]        # 435540 <_IO_stdin_used@@Base+0x540>
  413420:	movsxd rcx,DWORD PTR [rdi+rcx*4]
  413424:	add    rcx,rdi
  413427:	jmp    rcx
  413429:	movsx  rdx,BYTE PTR [rsi+0x17]
  41342e:	movsx  rcx,BYTE PTR [rsi+0x16]
  413433:	shl    rcx,0x8
  413437:	or     rdx,rcx
  41343a:	movsx  rcx,BYTE PTR [rsi+0x15]
  41343f:	shl    rcx,0x10
  413443:	or     rdx,rcx
  413446:	movsx  rcx,BYTE PTR [rsi+0x14]
  41344b:	shl    rcx,0x18
  41344f:	or     rdx,rcx
  413452:	movsx  rcx,BYTE PTR [rsi+0x13]
  413457:	shl    rcx,0x20
  41345b:	or     rdx,rcx
  41345e:	movsx  rcx,BYTE PTR [rsi+0x12]
  413463:	shl    rcx,0x28
  413467:	or     rdx,rcx
  41346a:	movsx  rcx,BYTE PTR [rsi+0x11]
  41346f:	shl    rcx,0x30
  413473:	or     rdx,rcx
  413476:	movzx  edi,BYTE PTR [rbx]
  413479:	shl    rdi,0x38
  41347d:	or     rdi,rdx
  413480:	cmp    rax,0x3
  413484:	jl     413b72 <main@@Base+0xcaa2>
  41348a:	movabs rax,0xffff000000000000
  413494:	and    rdi,rax
  413497:	movabs rax,0x6e79000000000000
  4134a1:	cmp    rdi,rax
  4134a4:	jne    413b72 <main@@Base+0xcaa2>
  4134aa:	lea    rax,[rsi+0x13]
  4134ae:	cmp    BYTE PTR [rsi+0x12],0x2e
  4134b2:	cmovne rax,rbx
  4134b6:	cmp    rax,rbx
  4134b9:	je     413b72 <main@@Base+0xcaa2>
  4134bf:	mov    rdi,r13
  4134c2:	mov    rsi,rax
  4134c5:	mov    rdx,rbp
  4134c8:	mov    rcx,r15
  4134cb:	mov    r8,r14
  4134ce:	mov    r9,r12
  4134d1:	add    rsp,0x8
  4134d5:	pop    rbx
  4134d6:	pop    r12
  4134d8:	pop    r13
  4134da:	pop    r14
  4134dc:	pop    r15
  4134de:	pop    rbp
  4134df:	jmp    415660 <main@@Base+0xe590>
  4134e4:	mov    eax,ecx
  4134e6:	and    al,0xf
  4134e8:	add    al,0xff
  4134ea:	cmp    al,0x7
  4134ec:	ja     413b72 <main@@Base+0xcaa2>
  4134f2:	xor    edx,edx
  4134f4:	movzx  eax,al
  4134f7:	lea    rdi,[rip+0x21f22]        # 435420 <_IO_stdin_used@@Base+0x420>
  4134fe:	movsxd rax,DWORD PTR [rdi+rax*4]
  413502:	add    rax,rdi
  413505:	jmp    rax
  413507:	movsx  rdx,BYTE PTR [rsi+0x27]
  41350c:	movsx  rax,BYTE PTR [rsi+0x26]
  413511:	shl    rax,0x8
  413515:	or     rdx,rax
  413518:	movsx  rax,BYTE PTR [rsi+0x25]
  41351d:	shl    rax,0x10
  413521:	or     rdx,rax
  413524:	movsx  rax,BYTE PTR [rsi+0x24]
  413529:	shl    rax,0x18
  41352d:	or     rdx,rax
  413530:	movsx  rax,BYTE PTR [rsi+0x23]
  413535:	shl    rax,0x20
  413539:	or     rdx,rax
  41353c:	movsx  rax,BYTE PTR [rsi+0x22]
  413541:	shl    rax,0x28
  413545:	or     rdx,rax
  413548:	movsx  rax,BYTE PTR [rsi+0x21]
  41354d:	shl    rax,0x30
  413551:	or     rdx,rax
  413554:	movzx  edi,BYTE PTR [rbx]
  413557:	shl    rdi,0x38
  41355b:	or     rdi,rdx
  41355e:	cmp    rcx,0x2
  413562:	jl     413b72 <main@@Base+0xcaa2>
  413568:	movabs rax,0xff00000000000000
  413572:	and    rdi,rax
  413575:	movabs rax,0x6500000000000000
  41357f:	cmp    rdi,rax
  413582:	jne    413b72 <main@@Base+0xcaa2>
  413588:	lea    r8,[rsi+0x22]
  41358c:	cmp    BYTE PTR [rsi+0x21],0x2e
  413590:	cmovne r8,rbx
  413594:	cmp    r8,rbx
  413597:	je     413b72 <main@@Base+0xcaa2>
  41359d:	mov    rcx,rbp
  4135a0:	sub    rcx,r8
  4135a3:	cmp    rcx,0x8
  4135a7:	jb     413833 <main@@Base+0xc763>
  4135ad:	movbe  rbx,QWORD PTR [r8]
  4135b2:	jmp    4138af <main@@Base+0xc7df>
  4135b7:	mov    ecx,eax
  4135b9:	and    cl,0xf
  4135bc:	add    cl,0xff
  4135bf:	cmp    cl,0x7
  4135c2:	ja     413b72 <main@@Base+0xcaa2>
  4135c8:	xor    edx,edx
  4135ca:	movzx  ecx,cl
  4135cd:	lea    rdi,[rip+0x21f4c]        # 435520 <_IO_stdin_used@@Base+0x520>
  4135d4:	movsxd rcx,DWORD PTR [rdi+rcx*4]
  4135d8:	add    rcx,rdi
  4135db:	jmp    rcx
  4135dd:	movsx  rdx,BYTE PTR [rsi+0x17]
  4135e2:	movsx  rcx,BYTE PTR [rsi+0x16]
  4135e7:	shl    rcx,0x8
  4135eb:	or     rdx,rcx
  4135ee:	movsx  rcx,BYTE PTR [rsi+0x15]
  4135f3:	shl    rcx,0x10
  4135f7:	or     rdx,rcx
  4135fa:	movsx  rcx,BYTE PTR [rsi+0x14]
  4135ff:	shl    rcx,0x18
  413603:	or     rdx,rcx
  413606:	movsx  rcx,BYTE PTR [rsi+0x13]
  41360b:	shl    rcx,0x20
  41360f:	or     rdx,rcx
  413612:	movsx  rcx,BYTE PTR [rsi+0x12]
  413617:	shl    rcx,0x28
  41361b:	or     rdx,rcx
  41361e:	movsx  rcx,BYTE PTR [rsi+0x11]
  413623:	shl    rcx,0x30
  413627:	or     rdx,rcx
  41362a:	movzx  edi,BYTE PTR [rbx]
  41362d:	shl    rdi,0x38
  413631:	or     rdi,rdx
  413634:	cmp    rax,0x5
  413638:	jl     413b72 <main@@Base+0xcaa2>
  41363e:	movabs rax,0xffffffff00000000
  413648:	and    rdi,rax
  41364b:	movabs rax,0x6f6c6f7200000000
  413655:	cmp    rdi,rax
  413658:	jne    413b72 <main@@Base+0xcaa2>
  41365e:	lea    rax,[rsi+0x15]
  413662:	cmp    BYTE PTR [rsi+0x14],0x2e
  413666:	cmovne rax,rbx
  41366a:	cmp    rax,rbx
  41366d:	je     413b72 <main@@Base+0xcaa2>
  413673:	mov    rdi,r13
  413676:	mov    rsi,rax
  413679:	mov    rdx,rbp
  41367c:	mov    rcx,r15
  41367f:	mov    r8,r14
  413682:	mov    r9,r12
  413685:	add    rsp,0x8
  413689:	pop    rbx
  41368a:	pop    r12
  41368c:	pop    r13
  41368e:	pop    r14
  413690:	pop    r15
  413692:	pop    rbp
  413693:	jmp    4126a0 <main@@Base+0xb5d0>
  413698:	mov    ecx,eax
  41369a:	and    cl,0xf
  41369d:	add    cl,0xff
  4136a0:	cmp    cl,0x7
  4136a3:	ja     413b72 <main@@Base+0xcaa2>
  4136a9:	xor    edx,edx
  4136ab:	movzx  ecx,cl
  4136ae:	lea    rdi,[rip+0x21e4b]        # 435500 <_IO_stdin_used@@Base+0x500>
  4136b5:	movsxd rcx,DWORD PTR [rdi+rcx*4]
  4136b9:	add    rcx,rdi
  4136bc:	jmp    rcx
  4136be:	movsx  rdx,BYTE PTR [rsi+0x17]
  4136c3:	movsx  rcx,BYTE PTR [rsi+0x16]
  4136c8:	shl    rcx,0x8
  4136cc:	or     rdx,rcx
  4136cf:	movsx  rcx,BYTE PTR [rsi+0x15]
  4136d4:	shl    rcx,0x10
  4136d8:	or     rdx,rcx
  4136db:	movsx  rcx,BYTE PTR [rsi+0x14]
  4136e0:	shl    rcx,0x18
  4136e4:	or     rdx,rcx
  4136e7:	movsx  rcx,BYTE PTR [rsi+0x13]
  4136ec:	shl    rcx,0x20
  4136f0:	or     rdx,rcx
  4136f3:	movsx  rcx,BYTE PTR [rsi+0x12]
  4136f8:	shl    rcx,0x28
  4136fc:	or     rdx,rcx
  4136ff:	movsx  rcx,BYTE PTR [rsi+0x11]
  413704:	shl    rcx,0x30
  413708:	or     rdx,rcx
  41370b:	movzx  edi,BYTE PTR [rbx]
  41370e:	shl    rdi,0x38
  413712:	or     rdi,rdx
  413715:	cmp    rax,0x3
  413719:	jl     413b72 <main@@Base+0xcaa2>
  41371f:	movabs rax,0xffff000000000000
  413729:	and    rdi,rax
  41372c:	movabs rax,0x6f6f000000000000
  413736:	cmp    rdi,rax
  413739:	jne    413b72 <main@@Base+0xcaa2>
  41373f:	lea    rax,[rsi+0x13]
  413743:	cmp    BYTE PTR [rsi+0x12],0x2e
  413747:	cmovne rax,rbx
  41374b:	cmp    rax,rbx
  41374e:	je     413b72 <main@@Base+0xcaa2>
  413754:	mov    rdi,r13
  413757:	mov    rsi,rax
  41375a:	mov    rdx,rbp
  41375d:	mov    rcx,r15
  413760:	mov    r8,r14
  413763:	mov    r9,r12
  413766:	add    rsp,0x8
  41376a:	pop    rbx
  41376b:	pop    r12
  41376d:	pop    r13
  41376f:	pop    r14
  413771:	pop    r15
  413773:	pop    rbp
  413774:	jmp    416660 <main@@Base+0xf590>
  413779:	and    dil,0xf
  41377d:	add    dil,0xff
  413781:	cmp    dil,0x7
  413785:	ja     413b72 <main@@Base+0xcaa2>
  41378b:	xor    eax,eax
  41378d:	movzx  edx,dil
  413791:	lea    rdi,[rip+0x21d08]        # 4354a0 <_IO_stdin_used@@Base+0x4a0>
  413798:	movsxd rdx,DWORD PTR [rdi+rdx*4]
  41379c:	add    rdx,rdi
  41379f:	jmp    rdx
  4137a1:	movsx  rax,BYTE PTR [rsi+0x17]
  4137a6:	movsx  rdx,BYTE PTR [rsi+0x16]
  4137ab:	shl    rdx,0x8
  4137af:	or     rax,rdx
  4137b2:	movsx  rdx,BYTE PTR [rsi+0x15]
  4137b7:	shl    rdx,0x10
  4137bb:	or     rax,rdx
  4137be:	movsx  rdx,BYTE PTR [rsi+0x14]
  4137c3:	shl    rdx,0x18
  4137c7:	or     rax,rdx
  4137ca:	movsx  rdx,BYTE PTR [rsi+0x13]
  4137cf:	shl    rdx,0x20
  4137d3:	or     rax,rdx
  4137d6:	movsx  rdx,BYTE PTR [rsi+0x12]
  4137db:	shl    rdx,0x28
  4137df:	or     rax,rdx
  4137e2:	movsx  rdx,BYTE PTR [rsi+0x11]
  4137e7:	shl    rdx,0x30
  4137eb:	or     rax,rdx
  4137ee:	movzx  edx,BYTE PTR [rcx]
  4137f1:	shl    rdx,0x38
  4137f5:	or     rdx,rax
  4137f8:	movabs rax,0x6f74656d70747965
  413802:	cmp    rdx,rax
  413805:	jne    413b72 <main@@Base+0xcaa2>
  41380b:	lea    rbx,[rsi+0x18]
  41380f:	mov    rcx,rbp
  413812:	sub    rcx,rbx
  413815:	cmp    rcx,0x8
  413819:	jb     41391f <main@@Base+0xc84f>
  41381f:	movbe  rdi,QWORD PTR [rbx]
  413824:	cmp    rcx,0x4
  413828:	jge    4139a3 <main@@Base+0xc8d3>
  41382e:	jmp    413b72 <main@@Base+0xcaa2>
  413833:	and    cl,0xf
  413836:	add    cl,0xff
  413839:	cmp    cl,0x7
  41383c:	ja     413ab3 <main@@Base+0xc9e3>
  413842:	xor    eax,eax
  413844:	movzx  ecx,cl
  413847:	lea    rdx,[rip+0x21bf2]        # 435440 <_IO_stdin_used@@Base+0x440>
  41384e:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  413852:	add    rcx,rdx
  413855:	jmp    rcx
  413857:	movsx  rax,BYTE PTR [r8+0x7]
  41385c:	movsx  rcx,BYTE PTR [r8+0x6]
  413861:	shl    rcx,0x8
  413865:	or     rax,rcx
  413868:	movsx  rcx,BYTE PTR [r8+0x5]
  41386d:	shl    rcx,0x10
  413871:	or     rax,rcx
  413874:	movsx  rcx,BYTE PTR [r8+0x4]
  413879:	shl    rcx,0x18
  41387d:	or     rax,rcx
  413880:	movsx  rcx,BYTE PTR [r8+0x3]
  413885:	shl    rcx,0x20
  413889:	or     rax,rcx
  41388c:	movsx  rcx,BYTE PTR [r8+0x2]
  413891:	shl    rcx,0x28
  413895:	or     rax,rcx
  413898:	movsx  rcx,BYTE PTR [r8+0x1]
  41389d:	shl    rcx,0x30
  4138a1:	or     rax,rcx
  4138a4:	movzx  ebx,BYTE PTR [r8]
  4138a8:	shl    rbx,0x38
  4138ac:	or     rbx,rax
  4138af:	mov    rax,rbx
  4138b2:	shr    rax,0x28
  4138b6:	cmp    rax,0x466f6f
  4138bc:	jne    4138ee <main@@Base+0xc81e>
  4138be:	mov    ecx,0x3
  4138c3:	mov    rdi,r13
  4138c6:	mov    rsi,r8
  4138c9:	mov    rdx,rbp
  4138cc:	mov    QWORD PTR [rsp],r8
  4138d0:	mov    r8,r12
  4138d3:	call   425b40 <flatcc_json_parser_match_constant@@Base>
  4138d8:	mov    r8,QWORD PTR [rsp]
  4138dc:	cmp    rax,r8
  4138df:	je     4138ee <main@@Base+0xc81e>
  4138e1:	mov    rsi,rax
  4138e4:	mov    ecx,0x11
  4138e9:	jmp    413aa4 <main@@Base+0xc9d4>
  4138ee:	movabs rax,0x496e636c75646556
  4138f8:	cmp    rbx,rax
  4138fb:	jne    413ab3 <main@@Base+0xc9e3>
  413901:	lea    rbx,[r8+0x8]
  413905:	mov    rcx,rbp
  413908:	sub    rcx,rbx
  41390b:	cmp    rcx,0x8
  41390f:	jb     4139f2 <main@@Base+0xc922>
  413915:	movbe  rcx,QWORD PTR [rbx]
  41391a:	jmp    413a6d <main@@Base+0xc99d>
  41391f:	mov    eax,ecx
  413921:	and    al,0xf
  413923:	add    al,0xff
  413925:	cmp    al,0x7
  413927:	ja     413b72 <main@@Base+0xcaa2>
  41392d:	xor    edx,edx
  41392f:	movzx  eax,al
  413932:	lea    rdi,[rip+0x21b87]        # 4354c0 <_IO_stdin_used@@Base+0x4c0>
  413939:	movsxd rax,DWORD PTR [rdi+rax*4]
  41393d:	add    rax,rdi
  413940:	jmp    rax
  413942:	movsx  rdx,BYTE PTR [rsi+0x1f]
  413947:	movsx  rax,BYTE PTR [rsi+0x1e]
  41394c:	shl    rax,0x8
  413950:	or     rdx,rax
  413953:	movsx  rax,BYTE PTR [rsi+0x1d]
  413958:	shl    rax,0x10
  41395c:	or     rdx,rax
  41395f:	movsx  rax,BYTE PTR [rsi+0x1c]
  413964:	shl    rax,0x18
  413968:	or     rdx,rax
  41396b:	movsx  rax,BYTE PTR [rsi+0x1b]
  413970:	shl    rax,0x20
  413974:	or     rdx,rax
  413977:	movsx  rax,BYTE PTR [rsi+0x1a]
  41397c:	shl    rax,0x28
  413980:	or     rdx,rax
  413983:	movsx  rax,BYTE PTR [rsi+0x19]
  413988:	shl    rax,0x30
  41398c:	or     rdx,rax
  41398f:	movzx  edi,BYTE PTR [rbx]
  413992:	shl    rdi,0x38
  413996:	or     rdi,rdx
  413999:	cmp    rcx,0x4
  41399d:	jl     413b72 <main@@Base+0xcaa2>
  4139a3:	movabs rax,0xffffff0000000000
  4139ad:	and    rdi,rax
  4139b0:	movabs rax,0x6e756d0000000000
  4139ba:	cmp    rdi,rax
  4139bd:	jne    413b72 <main@@Base+0xcaa2>
  4139c3:	lea    rax,[rsi+0x1c]
  4139c7:	cmp    BYTE PTR [rsi+0x1b],0x2e
  4139cb:	cmovne rax,rbx
  4139cf:	cmp    rax,rbx
  4139d2:	je     413b72 <main@@Base+0xcaa2>
  4139d8:	mov    rcx,rbp
  4139db:	sub    rcx,rax
  4139de:	cmp    rcx,0x8
  4139e2:	jb     413abb <main@@Base+0xc9eb>
  4139e8:	movbe  rcx,QWORD PTR [rax]
  4139ed:	jmp    413b36 <main@@Base+0xca66>
  4139f2:	and    cl,0xf
  4139f5:	add    cl,0xff
  4139f8:	cmp    cl,0x7
  4139fb:	ja     413ab3 <main@@Base+0xc9e3>
  413a01:	xor    eax,eax
  413a03:	movzx  ecx,cl
  413a06:	lea    rdx,[rip+0x21a53]        # 435460 <_IO_stdin_used@@Base+0x460>
  413a0d:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  413a11:	add    rcx,rdx
  413a14:	jmp    rcx
  413a16:	movsx  rax,BYTE PTR [r8+0xf]
  413a1b:	movsx  rcx,BYTE PTR [r8+0xe]
  413a20:	shl    rcx,0x8
  413a24:	or     rax,rcx
  413a27:	movsx  rcx,BYTE PTR [r8+0xd]
  413a2c:	shl    rcx,0x10
  413a30:	or     rax,rcx
  413a33:	movsx  rcx,BYTE PTR [r8+0xc]
  413a38:	shl    rcx,0x18
  413a3c:	or     rax,rcx
  413a3f:	movsx  rcx,BYTE PTR [r8+0xb]
  413a44:	shl    rcx,0x20
  413a48:	or     rax,rcx
  413a4b:	movsx  rcx,BYTE PTR [r8+0xa]
  413a50:	shl    rcx,0x28
  413a54:	or     rax,rcx
  413a57:	movsx  rcx,BYTE PTR [r8+0x9]
  413a5c:	shl    rcx,0x30
  413a60:	or     rax,rcx
  413a63:	movzx  ecx,BYTE PTR [rbx]
  413a66:	shl    rcx,0x38
  413a6a:	or     rcx,rax
  413a6d:	shr    rcx,0x30
  413a71:	cmp    rcx,0x616c
  413a78:	jne    413ab3 <main@@Base+0xc9e3>
  413a7a:	mov    ecx,0x2
  413a7f:	mov    rdi,r13
  413a82:	mov    rsi,rbx
  413a85:	mov    rdx,rbp
  413a88:	mov    rbp,r8
  413a8b:	mov    r8,r12
  413a8e:	call   425b40 <flatcc_json_parser_match_constant@@Base>
  413a93:	mov    rsi,rbp
  413a96:	cmp    rax,rbx
  413a99:	je     413b72 <main@@Base+0xcaa2>
  413a9f:	xor    ecx,ecx
  413aa1:	mov    rsi,rax
  413aa4:	mov    QWORD PTR [r14],rcx
  413aa7:	mov    DWORD PTR [r15],0x0
  413aae:	jmp    413b72 <main@@Base+0xcaa2>
  413ab3:	mov    rsi,r8
  413ab6:	jmp    413b72 <main@@Base+0xcaa2>
  413abb:	and    cl,0xf
  413abe:	add    cl,0xff
  413ac1:	cmp    cl,0x7
  413ac4:	ja     413b6f <main@@Base+0xca9f>
  413aca:	xor    esi,esi
  413acc:	movzx  ecx,cl
  413acf:	lea    rdx,[rip+0x21a0a]        # 4354e0 <_IO_stdin_used@@Base+0x4e0>
  413ad6:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  413ada:	add    rcx,rdx
  413add:	jmp    rcx
  413adf:	movsx  rsi,BYTE PTR [rax+0x7]
  413ae4:	movsx  rcx,BYTE PTR [rax+0x6]
  413ae9:	shl    rcx,0x8
  413aed:	or     rsi,rcx
  413af0:	movsx  rcx,BYTE PTR [rax+0x5]
  413af5:	shl    rcx,0x10
  413af9:	or     rsi,rcx
  413afc:	movsx  rcx,BYTE PTR [rax+0x4]
  413b01:	shl    rcx,0x18
  413b05:	or     rsi,rcx
  413b08:	movsx  rcx,BYTE PTR [rax+0x3]
  413b0d:	shl    rcx,0x20
  413b11:	or     rsi,rcx
  413b14:	movsx  rcx,BYTE PTR [rax+0x2]
  413b19:	shl    rcx,0x28
  413b1d:	or     rsi,rcx
  413b20:	movsx  rcx,BYTE PTR [rax+0x1]
  413b25:	shl    rcx,0x30
  413b29:	or     rsi,rcx
  413b2c:	movzx  ecx,BYTE PTR [rax]
  413b2f:	shl    rcx,0x38
  413b33:	or     rcx,rsi
  413b36:	shr    rcx,0x38
  413b3a:	cmp    rcx,0x78
  413b3e:	jne    413b6f <main@@Base+0xca9f>
  413b40:	mov    ecx,0x1
  413b45:	mov    rdi,r13
  413b48:	mov    rsi,rax
  413b4b:	mov    rdx,rbp
  413b4e:	mov    rbx,rax
  413b51:	mov    r8,r12
  413b54:	call   425b40 <flatcc_json_parser_match_constant@@Base>
  413b59:	mov    rsi,rbx
  413b5c:	cmp    rax,rbx
  413b5f:	je     413b72 <main@@Base+0xcaa2>
  413b61:	mov    QWORD PTR [r14],0x0
  413b68:	mov    DWORD PTR [r15],0x0
  413b6f:	mov    rsi,rax
  413b72:	mov    rax,rsi
  413b75:	add    rsp,0x8
  413b79:	pop    rbx
  413b7a:	pop    r12
  413b7c:	pop    r13
  413b7e:	pop    r14
  413b80:	pop    r15
  413b82:	pop    rbp
  413b83:	ret    
  413b84:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413b8e:	xchg   ax,ax
  413b90:	push   rbp
  413b91:	push   r15
  413b93:	push   r14
  413b95:	push   r13
  413b97:	push   r12
  413b99:	push   rbx
  413b9a:	sub    rsp,0x38
  413b9e:	mov    r15,r8
  413ba1:	mov    r13,rdx
  413ba4:	mov    rbx,rsi
  413ba7:	mov    r14,rdi
  413baa:	mov    BYTE PTR [r8],0x0
  413bae:	cmp    rsi,rdx
  413bb1:	je     413bcd <main@@Base+0xcafd>
  413bb3:	mov    al,BYTE PTR [rbx]
  413bb5:	cmp    al,0x2e
  413bb7:	je     413bde <main@@Base+0xcb0e>
  413bb9:	cmp    al,0x22
  413bbb:	jne    413d4d <main@@Base+0xcc7d>
  413bc1:	add    rbx,0x1
  413bc5:	mov    DWORD PTR [r14+0x14],0x0
  413bcd:	cmp    DWORD PTR [r14+0x14],0x0
  413bd2:	je     413c01 <main@@Base+0xcb31>
  413bd4:	cmp    rbx,r13
  413bd7:	jne    413c40 <main@@Base+0xcb70>
  413bd9:	jmp    413d20 <main@@Base+0xcc50>
  413bde:	mov    rbp,rcx
  413be1:	mov    ecx,0x5
  413be6:	mov    rdi,r14
  413be9:	mov    rsi,rbx
  413bec:	mov    rdx,r13
  413bef:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  413bf4:	mov    rcx,rbp
  413bf7:	mov    rbx,rax
  413bfa:	cmp    DWORD PTR [r14+0x14],0x0
  413bff:	jne    413bd4 <main@@Base+0xcb04>
  413c01:	mov    rbp,rcx
  413c04:	mov    rax,r13
  413c07:	sub    rax,rbx
  413c0a:	cmp    rax,0x2
  413c0e:	jl     413c23 <main@@Base+0xcb53>
  413c10:	cmp    BYTE PTR [rbx],0x20
  413c13:	jg     413c34 <main@@Base+0xcb64>
  413c15:	jne    413c23 <main@@Base+0xcb53>
  413c17:	cmp    BYTE PTR [rbx+0x1],0x20
  413c1b:	jle    413c23 <main@@Base+0xcb53>
  413c1d:	add    rbx,0x1
  413c21:	jmp    413c34 <main@@Base+0xcb64>
  413c23:	mov    rdi,r14
  413c26:	mov    rsi,rbx
  413c29:	mov    rdx,r13
  413c2c:	call   425750 <flatcc_json_parser_space_ext@@Base>
  413c31:	mov    rbx,rax
  413c34:	mov    rcx,rbp
  413c37:	cmp    rbx,r13
  413c3a:	je     413d20 <main@@Base+0xcc50>
  413c40:	lea    rax,[rcx+0x8]
  413c44:	xor    edx,edx
  413c46:	lea    r12,[rsp+0x10]
  413c4b:	mov    QWORD PTR [rsp+0x18],r15
  413c50:	mov    QWORD PTR [rsp+0x28],rcx
  413c55:	mov    QWORD PTR [rsp+0x20],rax
  413c5a:	mov    DWORD PTR [rsp+0xc],edx
  413c5e:	mov    rbp,QWORD PTR [rcx]
  413c61:	mov    r15,rax
  413c64:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413c6e:	xchg   ax,ax
  413c70:	mov    rdi,r14
  413c73:	mov    rsi,rbx
  413c76:	mov    rdx,r13
  413c79:	lea    rcx,[rsp+0x14]
  413c7e:	lea    r8,[rsp+0x30]
  413c83:	mov    r9,r12
  413c86:	call   rbp
  413c88:	cmp    rax,r13
  413c8b:	je     413d20 <main@@Base+0xcc50>
  413c91:	mov    rbp,rax
  413c94:	cmp    rax,rbx
  413c97:	jne    413cb0 <main@@Base+0xcbe0>
  413c99:	mov    rbp,QWORD PTR [r15]
  413c9c:	add    r15,0x8
  413ca0:	test   rbp,rbp
  413ca3:	jne    413c70 <main@@Base+0xcba0>
  413ca5:	jmp    413d25 <main@@Base+0xcc55>
  413ca7:	nop    WORD PTR [rax+rax*1+0x0]
  413cb0:	mov    rax,QWORD PTR [rsp+0x30]
  413cb5:	cmp    DWORD PTR [rsp+0x14],0x0
  413cba:	je     413cd0 <main@@Base+0xcc00>
  413cbc:	cmp    rax,0x81
  413cc2:	mov    r15,QWORD PTR [rsp+0x18]
  413cc7:	jb     413cf6 <main@@Base+0xcc26>
  413cc9:	mov    ecx,0x8
  413cce:	jmp    413ce2 <main@@Base+0xcc12>
  413cd0:	cmp    rax,0x80
  413cd6:	mov    r15,QWORD PTR [rsp+0x18]
  413cdb:	jb     413cf9 <main@@Base+0xcc29>
  413cdd:	mov    ecx,0x7
  413ce2:	mov    rdi,r14
  413ce5:	mov    rsi,rbp
  413ce8:	mov    rdx,r13
  413ceb:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  413cf0:	mov    edx,DWORD PTR [rsp+0xc]
  413cf4:	jmp    413cfe <main@@Base+0xcc2e>
  413cf6:	neg    rax
  413cf9:	mov    edx,eax
  413cfb:	mov    rax,rbp
  413cfe:	cmp    rax,r13
  413d01:	mov    rcx,QWORD PTR [rsp+0x28]
  413d06:	je     413d20 <main@@Base+0xcc50>
  413d08:	mov    rbx,rbp
  413d0b:	add    BYTE PTR [r15],dl
  413d0e:	cmp    DWORD PTR [rsp+0x10],0x0
  413d13:	mov    rax,QWORD PTR [rsp+0x20]
  413d18:	jne    413c5a <main@@Base+0xcb8a>
  413d1e:	jmp    413d3b <main@@Base+0xcc6b>
  413d20:	mov    rbp,r13
  413d23:	jmp    413d3b <main@@Base+0xcc6b>
  413d25:	mov    ecx,0x17
  413d2a:	mov    rdi,r14
  413d2d:	mov    rsi,rbx
  413d30:	mov    rdx,r13
  413d33:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  413d38:	mov    rbp,rax
  413d3b:	mov    rax,rbp
  413d3e:	add    rsp,0x38
  413d42:	pop    rbx
  413d43:	pop    r12
  413d45:	pop    r13
  413d47:	pop    r14
  413d49:	pop    r15
  413d4b:	pop    rbp
  413d4c:	ret    
  413d4d:	mov    DWORD PTR [r14+0x14],0x1
  413d55:	cmp    DWORD PTR [r14+0x14],0x0
  413d5a:	jne    413bd4 <main@@Base+0xcb04>
  413d60:	jmp    413c01 <main@@Base+0xcb31>
  413d65:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413d6f:	nop
  413d70:	push   rbp
  413d71:	push   r15
  413d73:	push   r14
  413d75:	push   r13
  413d77:	push   r12
  413d79:	push   rbx
  413d7a:	sub    rsp,0x38
  413d7e:	mov    r15,r8
  413d81:	mov    r13,rdx
  413d84:	mov    rbx,rsi
  413d87:	mov    r14,rdi
  413d8a:	mov    BYTE PTR [r8],0x0
  413d8e:	cmp    rsi,rdx
  413d91:	je     413dad <main@@Base+0xccdd>
  413d93:	mov    al,BYTE PTR [rbx]
  413d95:	cmp    al,0x2e
  413d97:	je     413dbe <main@@Base+0xccee>
  413d99:	cmp    al,0x22
  413d9b:	jne    413f33 <main@@Base+0xce63>
  413da1:	add    rbx,0x1
  413da5:	mov    DWORD PTR [r14+0x14],0x0
  413dad:	cmp    DWORD PTR [r14+0x14],0x0
  413db2:	je     413de1 <main@@Base+0xcd11>
  413db4:	cmp    rbx,r13
  413db7:	jne    413e20 <main@@Base+0xcd50>
  413db9:	jmp    413f06 <main@@Base+0xce36>
  413dbe:	mov    rbp,rcx
  413dc1:	mov    ecx,0x5
  413dc6:	mov    rdi,r14
  413dc9:	mov    rsi,rbx
  413dcc:	mov    rdx,r13
  413dcf:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  413dd4:	mov    rcx,rbp
  413dd7:	mov    rbx,rax
  413dda:	cmp    DWORD PTR [r14+0x14],0x0
  413ddf:	jne    413db4 <main@@Base+0xcce4>
  413de1:	mov    rbp,rcx
  413de4:	mov    rax,r13
  413de7:	sub    rax,rbx
  413dea:	cmp    rax,0x2
  413dee:	jl     413e03 <main@@Base+0xcd33>
  413df0:	cmp    BYTE PTR [rbx],0x20
  413df3:	jg     413e14 <main@@Base+0xcd44>
  413df5:	jne    413e03 <main@@Base+0xcd33>
  413df7:	cmp    BYTE PTR [rbx+0x1],0x20
  413dfb:	jle    413e03 <main@@Base+0xcd33>
  413dfd:	add    rbx,0x1
  413e01:	jmp    413e14 <main@@Base+0xcd44>
  413e03:	mov    rdi,r14
  413e06:	mov    rsi,rbx
  413e09:	mov    rdx,r13
  413e0c:	call   425750 <flatcc_json_parser_space_ext@@Base>
  413e11:	mov    rbx,rax
  413e14:	mov    rcx,rbp
  413e17:	cmp    rbx,r13
  413e1a:	je     413f06 <main@@Base+0xce36>
  413e20:	lea    rax,[rcx+0x8]
  413e24:	mov    DWORD PTR [rsp+0xc],0x0
  413e2c:	lea    r12,[rsp+0x18]
  413e31:	mov    QWORD PTR [rsp+0x20],r15
  413e36:	mov    QWORD PTR [rsp+0x10],rcx
  413e3b:	mov    QWORD PTR [rsp+0x28],rax
  413e40:	mov    rbp,QWORD PTR [rcx]
  413e43:	mov    r15,rax
  413e46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413e50:	mov    rdi,r14
  413e53:	mov    rsi,rbx
  413e56:	mov    rdx,r13
  413e59:	lea    rcx,[rsp+0x1c]
  413e5e:	lea    r8,[rsp+0x30]
  413e63:	mov    r9,r12
  413e66:	call   rbp
  413e68:	cmp    rax,r13
  413e6b:	je     413f06 <main@@Base+0xce36>
  413e71:	mov    rbp,rax
  413e74:	cmp    rax,rbx
  413e77:	jne    413e90 <main@@Base+0xcdc0>
  413e79:	mov    rbp,QWORD PTR [r15]
  413e7c:	add    r15,0x8
  413e80:	test   rbp,rbp
  413e83:	jne    413e50 <main@@Base+0xcd80>
  413e85:	jmp    413f0b <main@@Base+0xce3b>
  413e8a:	nop    WORD PTR [rax+rax*1+0x0]
  413e90:	cmp    DWORD PTR [rsp+0x1c],0x0
  413e95:	je     413eb1 <main@@Base+0xcde1>
  413e97:	mov    ecx,0x8
  413e9c:	mov    rdi,r14
  413e9f:	mov    rsi,rbp
  413ea2:	mov    rdx,r13
  413ea5:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  413eaa:	mov    r15,QWORD PTR [rsp+0x20]
  413eaf:	jmp    413ee0 <main@@Base+0xce10>
  413eb1:	mov    rax,QWORD PTR [rsp+0x30]
  413eb6:	cmp    rax,0x100
  413ebc:	mov    r15,QWORD PTR [rsp+0x20]
  413ec1:	jb     413ed8 <main@@Base+0xce08>
  413ec3:	mov    ecx,0x7
  413ec8:	mov    rdi,r14
  413ecb:	mov    rsi,rbp
  413ece:	mov    rdx,r13
  413ed1:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  413ed6:	jmp    413ee0 <main@@Base+0xce10>
  413ed8:	mov    DWORD PTR [rsp+0xc],eax
  413edc:	mov    rax,rbp
  413edf:	nop
  413ee0:	mov    rcx,QWORD PTR [rsp+0x10]
  413ee5:	cmp    rax,r13
  413ee8:	je     413f06 <main@@Base+0xce36>
  413eea:	mov    rbx,rbp
  413eed:	mov    eax,DWORD PTR [rsp+0xc]
  413ef1:	add    BYTE PTR [r15],al
  413ef4:	cmp    DWORD PTR [rsp+0x18],0x0
  413ef9:	mov    rax,QWORD PTR [rsp+0x28]
  413efe:	jne    413e40 <main@@Base+0xcd70>
  413f04:	jmp    413f21 <main@@Base+0xce51>
  413f06:	mov    rbp,r13
  413f09:	jmp    413f21 <main@@Base+0xce51>
  413f0b:	mov    ecx,0x17
  413f10:	mov    rdi,r14
  413f13:	mov    rsi,rbx
  413f16:	mov    rdx,r13
  413f19:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  413f1e:	mov    rbp,rax
  413f21:	mov    rax,rbp
  413f24:	add    rsp,0x38
  413f28:	pop    rbx
  413f29:	pop    r12
  413f2b:	pop    r13
  413f2d:	pop    r14
  413f2f:	pop    r15
  413f31:	pop    rbp
  413f32:	ret    
  413f33:	mov    DWORD PTR [r14+0x14],0x1
  413f3b:	cmp    DWORD PTR [r14+0x14],0x0
  413f40:	jne    413db4 <main@@Base+0xcce4>
  413f46:	jmp    413de1 <main@@Base+0xcd11>
  413f4b:	nop    DWORD PTR [rax+rax*1+0x0]
  413f50:	push   rbp
  413f51:	push   r15
  413f53:	push   r14
  413f55:	push   r13
  413f57:	push   r12
  413f59:	push   rbx
  413f5a:	sub    rsp,0x38
  413f5e:	mov    r15,r8
  413f61:	mov    r13,rdx
  413f64:	mov    rbx,rsi
  413f67:	mov    r14,rdi
  413f6a:	mov    WORD PTR [r8],0x0
  413f70:	cmp    rsi,rdx
  413f73:	je     413f8f <main@@Base+0xcebf>
  413f75:	mov    al,BYTE PTR [rbx]
  413f77:	cmp    al,0x2e
  413f79:	je     413fa0 <main@@Base+0xced0>
  413f7b:	cmp    al,0x22
  413f7d:	jne    41410e <main@@Base+0xd03e>
  413f83:	add    rbx,0x1
  413f87:	mov    DWORD PTR [r14+0x14],0x0
  413f8f:	cmp    DWORD PTR [r14+0x14],0x0
  413f94:	je     413fc3 <main@@Base+0xcef3>
  413f96:	cmp    rbx,r13
  413f99:	jne    414002 <main@@Base+0xcf32>
  413f9b:	jmp    4140e1 <main@@Base+0xd011>
  413fa0:	mov    rbp,rcx
  413fa3:	mov    ecx,0x5
  413fa8:	mov    rdi,r14
  413fab:	mov    rsi,rbx
  413fae:	mov    rdx,r13
  413fb1:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  413fb6:	mov    rcx,rbp
  413fb9:	mov    rbx,rax
  413fbc:	cmp    DWORD PTR [r14+0x14],0x0
  413fc1:	jne    413f96 <main@@Base+0xcec6>
  413fc3:	mov    rbp,rcx
  413fc6:	mov    rax,r13
  413fc9:	sub    rax,rbx
  413fcc:	cmp    rax,0x2
  413fd0:	jl     413fe5 <main@@Base+0xcf15>
  413fd2:	cmp    BYTE PTR [rbx],0x20
  413fd5:	jg     413ff6 <main@@Base+0xcf26>
  413fd7:	jne    413fe5 <main@@Base+0xcf15>
  413fd9:	cmp    BYTE PTR [rbx+0x1],0x20
  413fdd:	jle    413fe5 <main@@Base+0xcf15>
  413fdf:	add    rbx,0x1
  413fe3:	jmp    413ff6 <main@@Base+0xcf26>
  413fe5:	mov    rdi,r14
  413fe8:	mov    rsi,rbx
  413feb:	mov    rdx,r13
  413fee:	call   425750 <flatcc_json_parser_space_ext@@Base>
  413ff3:	mov    rbx,rax
  413ff6:	mov    rcx,rbp
  413ff9:	cmp    rbx,r13
  413ffc:	je     4140e1 <main@@Base+0xd011>
  414002:	lea    rax,[rcx+0x8]
  414006:	xor    edx,edx
  414008:	lea    r12,[rsp+0x10]
  41400d:	mov    QWORD PTR [rsp+0x18],r15
  414012:	mov    QWORD PTR [rsp+0x28],rcx
  414017:	mov    QWORD PTR [rsp+0x20],rax
  41401c:	mov    DWORD PTR [rsp+0xc],edx
  414020:	mov    rbp,QWORD PTR [rcx]
  414023:	mov    r15,rax
  414026:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414030:	mov    rdi,r14
  414033:	mov    rsi,rbx
  414036:	mov    rdx,r13
  414039:	lea    rcx,[rsp+0x14]
  41403e:	lea    r8,[rsp+0x30]
  414043:	mov    r9,r12
  414046:	call   rbp
  414048:	cmp    rax,r13
  41404b:	je     4140e1 <main@@Base+0xd011>
  414051:	mov    rbp,rax
  414054:	cmp    rax,rbx
  414057:	jne    414070 <main@@Base+0xcfa0>
  414059:	mov    rbp,QWORD PTR [r15]
  41405c:	add    r15,0x8
  414060:	test   rbp,rbp
  414063:	jne    414030 <main@@Base+0xcf60>
  414065:	jmp    4140e6 <main@@Base+0xd016>
  414067:	nop    WORD PTR [rax+rax*1+0x0]
  414070:	mov    rax,QWORD PTR [rsp+0x30]
  414075:	cmp    DWORD PTR [rsp+0x14],0x0
  41407a:	je     414090 <main@@Base+0xcfc0>
  41407c:	cmp    rax,0x8001
  414082:	mov    r15,QWORD PTR [rsp+0x18]
  414087:	jb     4140b6 <main@@Base+0xcfe6>
  414089:	mov    ecx,0x8
  41408e:	jmp    4140a2 <main@@Base+0xcfd2>
  414090:	cmp    rax,0x8000
  414096:	mov    r15,QWORD PTR [rsp+0x18]
  41409b:	jb     4140b9 <main@@Base+0xcfe9>
  41409d:	mov    ecx,0x7
  4140a2:	mov    rdi,r14
  4140a5:	mov    rsi,rbp
  4140a8:	mov    rdx,r13
  4140ab:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  4140b0:	mov    edx,DWORD PTR [rsp+0xc]
  4140b4:	jmp    4140be <main@@Base+0xcfee>
  4140b6:	neg    rax
  4140b9:	mov    edx,eax
  4140bb:	mov    rax,rbp
  4140be:	cmp    rax,r13
  4140c1:	mov    rcx,QWORD PTR [rsp+0x28]
  4140c6:	je     4140e1 <main@@Base+0xd011>
  4140c8:	add    WORD PTR [r15],dx
  4140cc:	cmp    DWORD PTR [rsp+0x10],0x0
  4140d1:	mov    rbx,rbp
  4140d4:	mov    rax,QWORD PTR [rsp+0x20]
  4140d9:	jne    41401c <main@@Base+0xcf4c>
  4140df:	jmp    4140fc <main@@Base+0xd02c>
  4140e1:	mov    rbp,r13
  4140e4:	jmp    4140fc <main@@Base+0xd02c>
  4140e6:	mov    ecx,0x17
  4140eb:	mov    rdi,r14
  4140ee:	mov    rsi,rbx
  4140f1:	mov    rdx,r13
  4140f4:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  4140f9:	mov    rbp,rax
  4140fc:	mov    rax,rbp
  4140ff:	add    rsp,0x38
  414103:	pop    rbx
  414104:	pop    r12
  414106:	pop    r13
  414108:	pop    r14
  41410a:	pop    r15
  41410c:	pop    rbp
  41410d:	ret    
  41410e:	mov    DWORD PTR [r14+0x14],0x1
  414116:	cmp    DWORD PTR [r14+0x14],0x0
  41411b:	jne    413f96 <main@@Base+0xcec6>
  414121:	jmp    413fc3 <main@@Base+0xcef3>
  414126:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414130:	push   rbp
  414131:	push   r15
  414133:	push   r14
  414135:	push   r13
  414137:	push   r12
  414139:	push   rbx
  41413a:	sub    rsp,0x18
  41413e:	mov    r12,rdx
  414141:	mov    r14,rdi
  414144:	cmp    rsi,rdx
  414147:	je     414177 <main@@Base+0xd0a7>
  414149:	cmp    BYTE PTR [rsi],0x7b
  41414c:	jne    414177 <main@@Base+0xd0a7>
  41414e:	mov    r15,rcx
  414151:	lea    rax,[rsi+0x1]
  414155:	mov    rcx,r12
  414158:	sub    rcx,rax
  41415b:	cmp    rcx,0x2
  41415f:	jl     414195 <main@@Base+0xd0c5>
  414161:	cmp    BYTE PTR [rax],0x20
  414164:	jg     4141a3 <main@@Base+0xd0d3>
  414166:	jne    414195 <main@@Base+0xd0c5>
  414168:	cmp    BYTE PTR [rsi+0x2],0x20
  41416c:	jle    414195 <main@@Base+0xd0c5>
  41416e:	add    rsi,0x2
  414172:	mov    rax,rsi
  414175:	jmp    4141a3 <main@@Base+0xd0d3>
  414177:	mov    ecx,0x15
  41417c:	mov    rdi,r14
  41417f:	mov    rdx,r12
  414182:	add    rsp,0x18
  414186:	pop    rbx
  414187:	pop    r12
  414189:	pop    r13
  41418b:	pop    r14
  41418d:	pop    r15
  41418f:	pop    rbp
  414190:	jmp    4256c0 <flatcc_json_parser_set_error@@Base>
  414195:	mov    rdi,r14
  414198:	mov    rsi,rax
  41419b:	mov    rdx,r12
  41419e:	call   425750 <flatcc_json_parser_space_ext@@Base>
  4141a3:	mov    rsi,r12
  4141a6:	cmp    rax,r12
  4141a9:	je     4141f4 <main@@Base+0xd124>
  4141ab:	cmp    BYTE PTR [rax],0x7d
  4141ae:	jne    4141f1 <main@@Base+0xd121>
  4141b0:	lea    rcx,[rax+0x1]
  4141b4:	mov    rdx,r12
  4141b7:	sub    rdx,rcx
  4141ba:	cmp    rdx,0x2
  4141be:	jl     4141d5 <main@@Base+0xd105>
  4141c0:	cmp    BYTE PTR [rcx],0x20
  4141c3:	jg     414819 <main@@Base+0xd749>
  4141c9:	jne    4141d5 <main@@Base+0xd105>
  4141cb:	cmp    BYTE PTR [rax+0x2],0x20
  4141cf:	jg     4147d9 <main@@Base+0xd709>
  4141d5:	mov    rdi,r14
  4141d8:	mov    rsi,rcx
  4141db:	mov    rdx,r12
  4141de:	add    rsp,0x18
  4141e2:	pop    rbx
  4141e3:	pop    r12
  4141e5:	pop    r13
  4141e7:	pop    r14
  4141e9:	pop    r15
  4141eb:	pop    rbp
  4141ec:	jmp    425750 <flatcc_json_parser_space_ext@@Base>
  4141f1:	mov    rsi,rax
  4141f4:	movabs rbx,0xff00000000000000
  4141fe:	xchg   ax,ax
  414200:	mov    r13,r12
  414203:	cmp    rsi,r12
  414206:	je     41425b <main@@Base+0xd18b>
  414208:	movzx  eax,BYTE PTR [rsi]
  41420b:	cmp    al,0x2e
  41420d:	je     414230 <main@@Base+0xd160>
  41420f:	cmp    al,0x22
  414211:	jne    414250 <main@@Base+0xd180>
  414213:	add    rsi,0x1
  414217:	mov    DWORD PTR [r14+0x14],0x0
  41421f:	jmp    414258 <main@@Base+0xd188>
  414221:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41422b:	nop    DWORD PTR [rax+rax*1+0x0]
  414230:	mov    ecx,0x5
  414235:	mov    rdi,r14
  414238:	mov    rdx,r12
  41423b:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  414240:	mov    r13,rax
  414243:	jmp    41425b <main@@Base+0xd18b>
  414245:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41424f:	nop
  414250:	mov    DWORD PTR [r14+0x14],0x1
  414258:	mov    r13,rsi
  41425b:	mov    rax,r12
  41425e:	sub    rax,r13
  414261:	cmp    rax,0x8
  414265:	jb     414280 <main@@Base+0xd1b0>
  414267:	movbe  rcx,QWORD PTR [r13+0x0]
  41426d:	jmp    414313 <main@@Base+0xd243>
  414272:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41427c:	nop    DWORD PTR [rax+0x0]
  414280:	mov    ecx,eax
  414282:	and    cl,0xf
  414285:	add    cl,0xff
  414288:	cmp    cl,0x7
  41428b:	ja     414660 <main@@Base+0xd590>
  414291:	mov    r10,rbx
  414294:	movzx  ecx,cl
  414297:	lea    rdx,[rip+0x21302]        # 4355a0 <_IO_stdin_used@@Base+0x5a0>
  41429e:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  4142a2:	add    rcx,rdx
  4142a5:	xor    r8d,r8d
  4142a8:	xor    r9d,r9d
  4142ab:	xor    edx,edx
  4142ad:	xor    esi,esi
  4142af:	xor    ebp,ebp
  4142b1:	xor    ebx,ebx
  4142b3:	xor    edi,edi
  4142b5:	jmp    rcx
  4142b7:	movsx  r8,BYTE PTR [r13+0x7]
  4142bc:	movsx  r9,BYTE PTR [r13+0x6]
  4142c1:	shl    r9,0x8
  4142c5:	or     r9,r8
  4142c8:	movsx  rdx,BYTE PTR [r13+0x5]
  4142cd:	shl    rdx,0x10
  4142d1:	or     rdx,r9
  4142d4:	movsx  rsi,BYTE PTR [r13+0x4]
  4142d9:	shl    rsi,0x18
  4142dd:	or     rsi,rdx
  4142e0:	movsx  rbp,BYTE PTR [r13+0x3]
  4142e5:	shl    rbp,0x20
  4142e9:	or     rbp,rsi
  4142ec:	movsx  rbx,BYTE PTR [r13+0x2]
  4142f1:	shl    rbx,0x28
  4142f5:	or     rbx,rbp
  4142f8:	movsx  rdi,BYTE PTR [r13+0x1]
  4142fd:	shl    rdi,0x30
  414301:	or     rdi,rbx
  414304:	movzx  ecx,BYTE PTR [r13+0x0]
  414309:	shl    rcx,0x38
  41430d:	or     rcx,rdi
  414310:	mov    rbx,r10
  414313:	and    rcx,rbx
  414316:	movabs rdx,0x6100000000000000
  414320:	cmp    rcx,rdx
  414323:	je     414370 <main@@Base+0xd2a0>
  414325:	movabs rdx,0x6200000000000000
  41432f:	cmp    rcx,rdx
  414332:	jne    414660 <main@@Base+0xd590>
  414338:	mov    rbp,r13
  41433b:	cmp    rax,0x2
  41433f:	jl     414510 <main@@Base+0xd440>
  414345:	cmp    DWORD PTR [r14+0x14],0x0
  41434a:	movzx  eax,BYTE PTR [r13+0x1]
  41434f:	je     4143a6 <main@@Base+0xd2d6>
  414351:	cmp    al,0x21
  414353:	jl     414360 <main@@Base+0xd290>
  414355:	mov    rbp,r13
  414358:	cmp    al,0x3a
  41435a:	jne    414510 <main@@Base+0xd440>
  414360:	lea    rsi,[r13+0x1]
  414364:	mov    DWORD PTR [r14+0x14],0x0
  41436c:	jmp    4143b5 <main@@Base+0xd2e5>
  41436e:	xchg   ax,ax
  414370:	mov    rbp,r13
  414373:	cmp    rax,0x2
  414377:	jl     414601 <main@@Base+0xd531>
  41437d:	cmp    DWORD PTR [r14+0x14],0x0
  414382:	movzx  eax,BYTE PTR [r13+0x1]
  414387:	je     4143dc <main@@Base+0xd30c>
  414389:	cmp    al,0x21
  41438b:	jl     414398 <main@@Base+0xd2c8>
  41438d:	mov    rbp,r13
  414390:	cmp    al,0x3a
  414392:	jne    414601 <main@@Base+0xd531>
  414398:	lea    rsi,[r13+0x1]
  41439c:	mov    DWORD PTR [r14+0x14],0x0
  4143a4:	jmp    4143eb <main@@Base+0xd31b>
  4143a6:	mov    rbp,r13
  4143a9:	cmp    al,0x22
  4143ab:	jne    414510 <main@@Base+0xd440>
  4143b1:	lea    rsi,[r13+0x2]
  4143b5:	mov    rax,r12
  4143b8:	sub    rax,rsi
  4143bb:	cmp    rax,0x2
  4143bf:	jl     41441a <main@@Base+0xd34a>
  4143c1:	cmp    BYTE PTR [rsi],0x20
  4143c4:	jg     414428 <main@@Base+0xd358>
  4143c6:	jne    41441a <main@@Base+0xd34a>
  4143c8:	cmp    BYTE PTR [rsi+0x1],0x20
  4143cc:	jle    41441a <main@@Base+0xd34a>
  4143ce:	add    rsi,0x1
  4143d2:	cmp    rsi,r12
  4143d5:	jne    414431 <main@@Base+0xd361>
  4143d7:	jmp    4144d8 <main@@Base+0xd408>
  4143dc:	mov    rbp,r13
  4143df:	cmp    al,0x22
  4143e1:	jne    414601 <main@@Base+0xd531>
  4143e7:	lea    rsi,[r13+0x2]
  4143eb:	mov    rax,r12
  4143ee:	sub    rax,rsi
  4143f1:	cmp    rax,0x2
  4143f5:	jl     41447d <main@@Base+0xd3ad>
  4143fb:	cmp    BYTE PTR [rsi],0x20
  4143fe:	jg     41448b <main@@Base+0xd3bb>
  414404:	jne    41447d <main@@Base+0xd3ad>
  414406:	cmp    BYTE PTR [rsi+0x1],0x20
  41440a:	jle    41447d <main@@Base+0xd3ad>
  41440c:	add    rsi,0x1
  414410:	cmp    rsi,r12
  414413:	jne    414490 <main@@Base+0xd3c0>
  414415:	jmp    4144ea <main@@Base+0xd41a>
  41441a:	mov    rdi,r14
  41441d:	mov    rdx,r12
  414420:	call   425750 <flatcc_json_parser_space_ext@@Base>
  414425:	mov    rsi,rax
  414428:	cmp    rsi,r12
  41442b:	je     4144d8 <main@@Base+0xd408>
  414431:	cmp    BYTE PTR [rsi],0x3a
  414434:	jne    4144d8 <main@@Base+0xd408>
  41443a:	lea    rbp,[rsi+0x1]
  41443e:	mov    rax,r12
  414441:	sub    rax,rbp
  414444:	cmp    rax,0x2
  414448:	jl     4144ff <main@@Base+0xd42f>
  41444e:	cmp    BYTE PTR [rbp+0x0],0x20
  414452:	jg     414510 <main@@Base+0xd440>
  414458:	jne    4144ff <main@@Base+0xd42f>
  41445e:	cmp    BYTE PTR [rsi+0x2],0x20
  414462:	jle    4144ff <main@@Base+0xd42f>
  414468:	add    rsi,0x2
  41446c:	mov    rbp,rsi
  41446f:	cmp    r13,rbp
  414472:	jne    414519 <main@@Base+0xd449>
  414478:	jmp    414660 <main@@Base+0xd590>
  41447d:	mov    rdi,r14
  414480:	mov    rdx,r12
  414483:	call   425750 <flatcc_json_parser_space_ext@@Base>
  414488:	mov    rsi,rax
  41448b:	cmp    rsi,r12
  41448e:	je     4144ea <main@@Base+0xd41a>
  414490:	cmp    BYTE PTR [rsi],0x3a
  414493:	jne    4144ea <main@@Base+0xd41a>
  414495:	lea    rbp,[rsi+0x1]
  414499:	mov    rax,r12
  41449c:	sub    rax,rbp
  41449f:	cmp    rax,0x2
  4144a3:	jl     4145f0 <main@@Base+0xd520>
  4144a9:	cmp    BYTE PTR [rbp+0x0],0x20
  4144ad:	jg     414601 <main@@Base+0xd531>
  4144b3:	jne    4145f0 <main@@Base+0xd520>
  4144b9:	cmp    BYTE PTR [rsi+0x2],0x20
  4144bd:	jle    4145f0 <main@@Base+0xd520>
  4144c3:	add    rsi,0x2
  4144c7:	mov    rbp,rsi
  4144ca:	cmp    r13,rbp
  4144cd:	jne    414606 <main@@Base+0xd536>
  4144d3:	jmp    414660 <main@@Base+0xd590>
  4144d8:	mov    ecx,0x4
  4144dd:	mov    rdi,r14
  4144e0:	mov    rdx,r12
  4144e3:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  4144e8:	jmp    41450d <main@@Base+0xd43d>
  4144ea:	mov    ecx,0x4
  4144ef:	mov    rdi,r14
  4144f2:	mov    rdx,r12
  4144f5:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  4144fa:	jmp    4145fe <main@@Base+0xd52e>
  4144ff:	mov    rdi,r14
  414502:	mov    rsi,rbp
  414505:	mov    rdx,r12
  414508:	call   425750 <flatcc_json_parser_space_ext@@Base>
  41450d:	mov    rbp,rax
  414510:	cmp    r13,rbp
  414513:	je     414660 <main@@Base+0xd590>
  414519:	mov    QWORD PTR [rsp+0x10],0x0
  414522:	mov    DWORD PTR [rsp+0xc],0x0
  41452a:	mov    BYTE PTR [rsp+0xa],0x0
  41452f:	cmp    rbp,r12
  414532:	je     41456d <main@@Base+0xd49d>
  414534:	mov    rdi,r14
  414537:	mov    rsi,rbp
  41453a:	mov    rdx,r12
  41453d:	lea    rcx,[rsp+0xc]
  414542:	lea    r8,[rsp+0x10]
  414547:	call   427360 <flatcc_json_parser_integer@@Base>
  41454c:	cmp    rax,rbp
  41454f:	je     414579 <main@@Base+0xd4a9>
  414551:	mov    rcx,QWORD PTR [rsp+0x10]
  414556:	cmp    DWORD PTR [rsp+0xc],0x0
  41455b:	je     414585 <main@@Base+0xd4b5>
  41455d:	cmp    rcx,0x81
  414564:	jb     4145aa <main@@Base+0xd4da>
  414566:	mov    ecx,0x8
  41456b:	jmp    414593 <main@@Base+0xd4c3>
  41456d:	xor    ecx,ecx
  41456f:	mov    rax,r12
  414572:	cmp    rbp,rax
  414575:	jne    4145e7 <main@@Base+0xd517>
  414577:	jmp    4145b6 <main@@Base+0xd4e6>
  414579:	xor    ecx,ecx
  41457b:	mov    rax,rbp
  41457e:	cmp    rbp,rax
  414581:	jne    4145e7 <main@@Base+0xd517>
  414583:	jmp    4145b6 <main@@Base+0xd4e6>
  414585:	cmp    rcx,0x80
  41458c:	jb     4145ad <main@@Base+0xd4dd>
  41458e:	mov    ecx,0x7
  414593:	mov    rdi,r14
  414596:	mov    rsi,rax
  414599:	mov    rdx,r12
  41459c:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  4145a1:	xor    ecx,ecx
  4145a3:	cmp    rbp,rax
  4145a6:	jne    4145e7 <main@@Base+0xd517>
  4145a8:	jmp    4145b6 <main@@Base+0xd4e6>
  4145aa:	neg    rcx
  4145ad:	mov    BYTE PTR [rsp+0xa],cl
  4145b1:	cmp    rbp,rax
  4145b4:	jne    4145e7 <main@@Base+0xd517>
  4145b6:	mov    rdi,r14
  4145b9:	mov    rsi,rbp
  4145bc:	mov    rdx,r12
  4145bf:	lea    rcx,[rip+0x2fe5a]        # 444420 <__data_start@@Base+0x370>
  4145c6:	lea    r8,[rsp+0xa]
  4145cb:	call   413b90 <main@@Base+0xcac0>
  4145d0:	cmp    rax,rbp
  4145d3:	je     414803 <main@@Base+0xd733>
  4145d9:	cmp    rax,r12
  4145dc:	je     414803 <main@@Base+0xd733>
  4145e2:	movzx  ecx,BYTE PTR [rsp+0xa]
  4145e7:	mov    BYTE PTR [r15+0x2],cl
  4145eb:	jmp    414700 <main@@Base+0xd630>
  4145f0:	mov    rdi,r14
  4145f3:	mov    rsi,rbp
  4145f6:	mov    rdx,r12
  4145f9:	call   425750 <flatcc_json_parser_space_ext@@Base>
  4145fe:	mov    rbp,rax
  414601:	cmp    r13,rbp
  414604:	je     414660 <main@@Base+0xd590>
  414606:	mov    QWORD PTR [rsp+0x10],0x0
  41460f:	mov    DWORD PTR [rsp+0xc],0x0
  414617:	mov    WORD PTR [rsp+0xa],0x0
  41461e:	cmp    rbp,r12
  414621:	je     414673 <main@@Base+0xd5a3>
  414623:	mov    rdi,r14
  414626:	mov    rsi,rbp
  414629:	mov    rdx,r12
  41462c:	lea    rcx,[rsp+0xc]
  414631:	lea    r8,[rsp+0x10]
  414636:	call   427360 <flatcc_json_parser_integer@@Base>
  41463b:	cmp    rax,rbp
  41463e:	je     41467f <main@@Base+0xd5af>
  414640:	mov    rcx,QWORD PTR [rsp+0x10]
  414645:	cmp    DWORD PTR [rsp+0xc],0x0
  41464a:	je     41468b <main@@Base+0xd5bb>
  41464c:	cmp    rcx,0x8001
  414653:	jb     4146b0 <main@@Base+0xd5e0>
  414655:	mov    ecx,0x8
  41465a:	jmp    414699 <main@@Base+0xd5c9>
  41465c:	nop    DWORD PTR [rax+0x0]
  414660:	mov    rdi,r14
  414663:	mov    rsi,r13
  414666:	mov    rdx,r12
  414669:	call   425cc0 <flatcc_json_parser_unmatched_symbol@@Base>
  41466e:	jmp    414700 <main@@Base+0xd630>
  414673:	xor    ecx,ecx
  414675:	mov    rax,r12
  414678:	cmp    rbp,rax
  41467b:	jne    4146ee <main@@Base+0xd61e>
  41467d:	jmp    4146bd <main@@Base+0xd5ed>
  41467f:	xor    ecx,ecx
  414681:	mov    rax,rbp
  414684:	cmp    rbp,rax
  414687:	jne    4146ee <main@@Base+0xd61e>
  414689:	jmp    4146bd <main@@Base+0xd5ed>
  41468b:	cmp    rcx,0x8000
  414692:	jb     4146b3 <main@@Base+0xd5e3>
  414694:	mov    ecx,0x7
  414699:	mov    rdi,r14
  41469c:	mov    rsi,rax
  41469f:	mov    rdx,r12
  4146a2:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  4146a7:	xor    ecx,ecx
  4146a9:	cmp    rbp,rax
  4146ac:	jne    4146ee <main@@Base+0xd61e>
  4146ae:	jmp    4146bd <main@@Base+0xd5ed>
  4146b0:	neg    rcx
  4146b3:	mov    WORD PTR [rsp+0xa],cx
  4146b8:	cmp    rbp,rax
  4146bb:	jne    4146ee <main@@Base+0xd61e>
  4146bd:	mov    rdi,r14
  4146c0:	mov    rsi,rbp
  4146c3:	mov    rdx,r12
  4146c6:	lea    rcx,[rip+0x2fd73]        # 444440 <__data_start@@Base+0x390>
  4146cd:	lea    r8,[rsp+0xa]
  4146d2:	call   413f50 <main@@Base+0xce80>
  4146d7:	cmp    rax,rbp
  4146da:	je     414803 <main@@Base+0xd733>
  4146e0:	cmp    rax,r12
  4146e3:	je     414803 <main@@Base+0xd733>
  4146e9:	movzx  ecx,WORD PTR [rsp+0xa]
  4146ee:	mov    WORD PTR [r15],cx
  4146f2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4146fc:	nop    DWORD PTR [rax+0x0]
  414700:	mov    rcx,r12
  414703:	sub    rcx,rax
  414706:	cmp    rcx,0x2
  41470a:	jl     414730 <main@@Base+0xd660>
  41470c:	cmp    BYTE PTR [rax],0x20
  41470f:	jg     41473e <main@@Base+0xd66e>
  414711:	jne    414730 <main@@Base+0xd660>
  414713:	cmp    BYTE PTR [rax+0x1],0x20
  414717:	jle    414730 <main@@Base+0xd660>
  414719:	add    rax,0x1
  41471d:	cmp    rax,r12
  414720:	jne    414743 <main@@Base+0xd673>
  414722:	jmp    4147b2 <main@@Base+0xd6e2>
  414727:	nop    WORD PTR [rax+rax*1+0x0]
  414730:	mov    rdi,r14
  414733:	mov    rsi,rax
  414736:	mov    rdx,r12
  414739:	call   425750 <flatcc_json_parser_space_ext@@Base>
  41473e:	cmp    rax,r12
  414741:	je     4147b2 <main@@Base+0xd6e2>
  414743:	movzx  ecx,BYTE PTR [rax]
  414746:	cmp    cl,0x2c
  414749:	jne    4147b7 <main@@Base+0xd6e7>
  41474b:	lea    rsi,[rax+0x1]
  41474f:	mov    rcx,r12
  414752:	sub    rcx,rsi
  414755:	cmp    rcx,0x2
  414759:	jl     414770 <main@@Base+0xd6a0>
  41475b:	cmp    BYTE PTR [rsi],0x20
  41475e:	jg     41477e <main@@Base+0xd6ae>
  414760:	jne    414770 <main@@Base+0xd6a0>
  414762:	cmp    BYTE PTR [rax+0x2],0x20
  414766:	jle    414770 <main@@Base+0xd6a0>
  414768:	add    rax,0x2
  41476c:	jmp    41477b <main@@Base+0xd6ab>
  41476e:	xchg   ax,ax
  414770:	mov    rdi,r14
  414773:	mov    rdx,r12
  414776:	call   425750 <flatcc_json_parser_space_ext@@Base>
  41477b:	mov    rsi,rax
  41477e:	cmp    rsi,r12
  414781:	je     4147ef <main@@Base+0xd71f>
  414783:	cmp    BYTE PTR [rsi],0x7d
  414786:	jne    414200 <main@@Base+0xd130>
  41478c:	lea    rcx,[rsi+0x1]
  414790:	mov    rax,r12
  414793:	sub    rax,rcx
  414796:	cmp    rax,0x2
  41479a:	jl     4147df <main@@Base+0xd70f>
  41479c:	cmp    BYTE PTR [rcx],0x20
  41479f:	jg     414819 <main@@Base+0xd749>
  4147a1:	jne    4147df <main@@Base+0xd70f>
  4147a3:	cmp    BYTE PTR [rsi+0x2],0x20
  4147a7:	jle    4147df <main@@Base+0xd70f>
  4147a9:	add    rsi,0x2
  4147ad:	mov    rcx,rsi
  4147b0:	jmp    414819 <main@@Base+0xd749>
  4147b2:	mov    rcx,r12
  4147b5:	jmp    414819 <main@@Base+0xd749>
  4147b7:	cmp    cl,0x7d
  4147ba:	jne    4147fc <main@@Base+0xd72c>
  4147bc:	lea    rcx,[rax+0x1]
  4147c0:	mov    rdx,r12
  4147c3:	sub    rdx,rcx
  4147c6:	cmp    rdx,0x2
  4147ca:	jl     4147df <main@@Base+0xd70f>
  4147cc:	cmp    BYTE PTR [rcx],0x20
  4147cf:	jg     414819 <main@@Base+0xd749>
  4147d1:	jne    4147df <main@@Base+0xd70f>
  4147d3:	cmp    BYTE PTR [rax+0x2],0x20
  4147d7:	jle    4147df <main@@Base+0xd70f>
  4147d9:	add    rax,0x2
  4147dd:	jmp    414816 <main@@Base+0xd746>
  4147df:	mov    rdi,r14
  4147e2:	mov    rsi,rcx
  4147e5:	mov    rdx,r12
  4147e8:	call   425750 <flatcc_json_parser_space_ext@@Base>
  4147ed:	jmp    414816 <main@@Base+0xd746>
  4147ef:	mov    ecx,0xa
  4147f4:	mov    rdi,r14
  4147f7:	mov    rsi,r12
  4147fa:	jmp    41480e <main@@Base+0xd73e>
  4147fc:	mov    ecx,0xa
  414801:	jmp    414808 <main@@Base+0xd738>
  414803:	mov    ecx,0x21
  414808:	mov    rdi,r14
  41480b:	mov    rsi,rax
  41480e:	mov    rdx,r12
  414811:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  414816:	mov    rcx,rax
  414819:	mov    rax,rcx
  41481c:	add    rsp,0x18
  414820:	pop    rbx
  414821:	pop    r12
  414823:	pop    r13
  414825:	pop    r14
  414827:	pop    r15
  414829:	pop    rbp
  41482a:	ret    
  41482b:	nop    DWORD PTR [rax+rax*1+0x0]
  414830:	push   rbp
  414831:	push   r15
  414833:	push   r14
  414835:	push   r13
  414837:	push   r12
  414839:	push   rbx
  41483a:	sub    rsp,0x28
  41483e:	mov    r12,rdx
  414841:	mov    rbp,rsi
  414844:	mov    r14,rdi
  414847:	mov    DWORD PTR [r8],0x0
  41484e:	cmp    cl,0x4
  414851:	ja     414888 <main@@Base+0xd7b8>
  414853:	mov    r15,r8
  414856:	mov    eax,ecx
  414858:	lea    rcx,[rip+0x20d61]        # 4355c0 <_IO_stdin_used@@Base+0x5c0>
  41485f:	movsxd rax,DWORD PTR [rcx+rax*4]
  414863:	add    rax,rcx
  414866:	jmp    rax
  414868:	mov    rax,r12
  41486b:	sub    rax,rbp
  41486e:	cmp    rax,0x4
  414872:	jl     414881 <main@@Base+0xd7b1>
  414874:	cmp    DWORD PTR [rbp+0x0],0x6c6c756e
  41487b:	je     414a16 <main@@Base+0xd946>
  414881:	mov    ecx,0x1a
  414886:	jmp    414898 <main@@Base+0xd7c8>
  414888:	test   BYTE PTR [r14+0x10],0x1
  41488d:	jne    4149fa <main@@Base+0xd92a>
  414893:	mov    ecx,0xf
  414898:	mov    rdi,r14
  41489b:	mov    rsi,rbp
  41489e:	mov    rdx,r12
  4148a1:	add    rsp,0x28
  4148a5:	pop    rbx
  4148a6:	pop    r12
  4148a8:	pop    r13
  4148aa:	pop    r14
  4148ac:	pop    r15
  4148ae:	pop    rbp
  4148af:	jmp    4256c0 <flatcc_json_parser_set_error@@Base>
  4148b4:	mov    rdi,r14
  4148b7:	mov    rsi,rbp
  4148ba:	mov    rdx,r12
  4148bd:	mov    rcx,r15
  4148c0:	call   407c50 <main@@Base+0xb80>
  4148c5:	jmp    4149d2 <main@@Base+0xd902>
  4148ca:	mov    DWORD PTR [r15],0x0
  4148d1:	mov    rdi,QWORD PTR [r14]
  4148d4:	mov    esi,0x4
  4148d9:	call   420ba0 <flatcc_builder_start_table@@Base>
  4148de:	test   eax,eax
  4148e0:	jne    4149bf <main@@Base+0xd8ef>
  4148e6:	cmp    rbp,r12
  4148e9:	je     41499e <main@@Base+0xd8ce>
  4148ef:	cmp    BYTE PTR [rbp+0x0],0x7b
  4148f3:	jne    41499e <main@@Base+0xd8ce>
  4148f9:	lea    rax,[rbp+0x1]
  4148fd:	mov    rcx,r12
  414900:	sub    rcx,rax
  414903:	cmp    rcx,0x2
  414907:	jl     414a2c <main@@Base+0xd95c>
  41490d:	cmp    BYTE PTR [rax],0x20
  414910:	jg     414a3a <main@@Base+0xd96a>
  414916:	jne    414a2c <main@@Base+0xd95c>
  41491c:	cmp    BYTE PTR [rbp+0x2],0x20
  414920:	jle    414a2c <main@@Base+0xd95c>
  414926:	add    rbp,0x2
  41492a:	mov    rax,rbp
  41492d:	jmp    414a3a <main@@Base+0xd96a>
  414932:	mov    DWORD PTR [r15],0x0
  414939:	mov    rdi,QWORD PTR [r14]
  41493c:	xor    esi,esi
  41493e:	call   420ba0 <flatcc_builder_start_table@@Base>
  414943:	test   eax,eax
  414945:	jne    4149bf <main@@Base+0xd8ef>
  414947:	cmp    rbp,r12
  41494a:	je     41499e <main@@Base+0xd8ce>
  41494c:	cmp    BYTE PTR [rbp+0x0],0x7b
  414950:	jne    41499e <main@@Base+0xd8ce>
  414952:	lea    rax,[rbp+0x1]
  414956:	mov    rcx,r12
  414959:	sub    rcx,rax
  41495c:	cmp    rcx,0x2
  414960:	jl     414a78 <main@@Base+0xd9a8>
  414966:	cmp    BYTE PTR [rax],0x20
  414969:	jg     414a86 <main@@Base+0xd9b6>
  41496f:	jne    414a78 <main@@Base+0xd9a8>
  414975:	cmp    BYTE PTR [rbp+0x2],0x20
  414979:	jle    414a78 <main@@Base+0xd9a8>
  41497f:	add    rbp,0x2
  414983:	mov    rax,rbp
  414986:	jmp    414a86 <main@@Base+0xd9b6>
  41498b:	mov    rdi,r14
  41498e:	mov    rsi,rbp
  414991:	mov    rdx,r12
  414994:	mov    rcx,r15
  414997:	call   416fa0 <main@@Base+0xfed0>
  41499c:	jmp    4149d2 <main@@Base+0xd902>
  41499e:	mov    ecx,0x15
  4149a3:	mov    rdi,r14
  4149a6:	mov    rsi,rbp
  4149a9:	mov    rdx,r12
  4149ac:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  4149b1:	mov    rbp,rax
  4149b4:	cmp    DWORD PTR [r14+0x20],0x0
  4149b9:	je     41553c <main@@Base+0xe46c>
  4149bf:	mov    ecx,0x21
  4149c4:	mov    rdi,r14
  4149c7:	mov    rsi,rbp
  4149ca:	mov    rdx,r12
  4149cd:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  4149d2:	mov    rbp,rax
  4149d5:	cmp    DWORD PTR [r14+0x20],0x0
  4149da:	jne    414a1a <main@@Base+0xd94a>
  4149dc:	cmp    DWORD PTR [r15],0x0
  4149e0:	jne    414a1a <main@@Base+0xd94a>
  4149e2:	mov    ecx,0x21
  4149e7:	mov    rdi,r14
  4149ea:	mov    rsi,rbp
  4149ed:	mov    rdx,r12
  4149f0:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  4149f5:	mov    rbp,rax
  4149f8:	jmp    414a1a <main@@Base+0xd94a>
  4149fa:	mov    rdi,r14
  4149fd:	mov    rsi,rbp
  414a00:	mov    rdx,r12
  414a03:	add    rsp,0x28
  414a07:	pop    rbx
  414a08:	pop    r12
  414a0a:	pop    r13
  414a0c:	pop    r14
  414a0e:	pop    r15
  414a10:	pop    rbp
  414a11:	jmp    425ea0 <flatcc_json_parser_generic_json@@Base>
  414a16:	add    rbp,0x4
  414a1a:	mov    rax,rbp
  414a1d:	add    rsp,0x28
  414a21:	pop    rbx
  414a22:	pop    r12
  414a24:	pop    r13
  414a26:	pop    r14
  414a28:	pop    r15
  414a2a:	pop    rbp
  414a2b:	ret    
  414a2c:	mov    rdi,r14
  414a2f:	mov    rsi,rax
  414a32:	mov    rdx,r12
  414a35:	call   425750 <flatcc_json_parser_space_ext@@Base>
  414a3a:	mov    rsi,r12
  414a3d:	cmp    rax,r12
  414a40:	je     414b7b <main@@Base+0xdaab>
  414a46:	cmp    BYTE PTR [rax],0x7d
  414a49:	jne    414b78 <main@@Base+0xdaa8>
  414a4f:	lea    rbp,[rax+0x1]
  414a53:	mov    rcx,r12
  414a56:	sub    rcx,rbp
  414a59:	cmp    rcx,0x2
  414a5d:	jl     415618 <main@@Base+0xe548>
  414a63:	cmp    BYTE PTR [rbp+0x0],0x20
  414a67:	jg     4149b4 <main@@Base+0xd8e4>
  414a6d:	jne    415618 <main@@Base+0xe548>
  414a73:	jmp    4155cb <main@@Base+0xe4fb>
  414a78:	mov    rdi,r14
  414a7b:	mov    rsi,rax
  414a7e:	mov    rdx,r12
  414a81:	call   425750 <flatcc_json_parser_space_ext@@Base>
  414a86:	mov    rsi,r12
  414a89:	cmp    rax,r12
  414a8c:	je     414a9a <main@@Base+0xd9ca>
  414a8e:	cmp    BYTE PTR [rax],0x7d
  414a91:	je     4155af <main@@Base+0xe4df>
  414a97:	mov    rsi,rax
  414a9a:	mov    rax,r12
  414a9d:	cmp    rsi,r12
  414aa0:	je     414ad8 <main@@Base+0xda08>
  414aa2:	movzx  eax,BYTE PTR [rsi]
  414aa5:	cmp    al,0x2e
  414aa7:	je     414abb <main@@Base+0xd9eb>
  414aa9:	cmp    al,0x22
  414aab:	jne    414acd <main@@Base+0xd9fd>
  414aad:	add    rsi,0x1
  414ab1:	mov    DWORD PTR [r14+0x14],0x0
  414ab9:	jmp    414ad5 <main@@Base+0xda05>
  414abb:	mov    ecx,0x5
  414ac0:	mov    rdi,r14
  414ac3:	mov    rdx,r12
  414ac6:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  414acb:	jmp    414ad8 <main@@Base+0xda08>
  414acd:	mov    DWORD PTR [r14+0x14],0x1
  414ad5:	mov    rax,rsi
  414ad8:	mov    rdi,r14
  414adb:	mov    rsi,rax
  414ade:	mov    rdx,r12
  414ae1:	call   425cc0 <flatcc_json_parser_unmatched_symbol@@Base>
  414ae6:	mov    rcx,r12
  414ae9:	sub    rcx,rax
  414aec:	cmp    rcx,0x2
  414af0:	jl     414b0d <main@@Base+0xda3d>
  414af2:	cmp    BYTE PTR [rax],0x20
  414af5:	jg     414b1b <main@@Base+0xda4b>
  414af7:	jne    414b0d <main@@Base+0xda3d>
  414af9:	cmp    BYTE PTR [rax+0x1],0x20
  414afd:	jle    414b0d <main@@Base+0xda3d>
  414aff:	add    rax,0x1
  414b03:	cmp    rax,r12
  414b06:	jne    414b24 <main@@Base+0xda54>
  414b08:	jmp    41552e <main@@Base+0xe45e>
  414b0d:	mov    rdi,r14
  414b10:	mov    rsi,rax
  414b13:	mov    rdx,r12
  414b16:	call   425750 <flatcc_json_parser_space_ext@@Base>
  414b1b:	cmp    rax,r12
  414b1e:	je     41552e <main@@Base+0xe45e>
  414b24:	movzx  ecx,BYTE PTR [rax]
  414b27:	cmp    cl,0x2c
  414b2a:	jne    4155a6 <main@@Base+0xe4d6>
  414b30:	lea    rsi,[rax+0x1]
  414b34:	mov    rcx,r12
  414b37:	sub    rcx,rsi
  414b3a:	cmp    rcx,0x2
  414b3e:	jl     414b53 <main@@Base+0xda83>
  414b40:	cmp    BYTE PTR [rsi],0x20
  414b43:	jg     414b61 <main@@Base+0xda91>
  414b45:	jne    414b53 <main@@Base+0xda83>
  414b47:	cmp    BYTE PTR [rax+0x2],0x20
  414b4b:	jle    414b53 <main@@Base+0xda83>
  414b4d:	add    rax,0x2
  414b51:	jmp    414b5e <main@@Base+0xda8e>
  414b53:	mov    rdi,r14
  414b56:	mov    rdx,r12
  414b59:	call   425750 <flatcc_json_parser_space_ext@@Base>
  414b5e:	mov    rsi,rax
  414b61:	cmp    rsi,r12
  414b64:	je     415554 <main@@Base+0xe484>
  414b6a:	cmp    BYTE PTR [rsi],0x7d
  414b6d:	jne    414a9a <main@@Base+0xd9ca>
  414b73:	jmp    415564 <main@@Base+0xe494>
  414b78:	mov    rsi,rax
  414b7b:	movabs rax,0x636f6c6f72000000
  414b85:	lea    rax,[rax+0x320000]
  414b8c:	mov    QWORD PTR [rsp+0x20],rax
  414b91:	mov    r9,r12
  414b94:	cmp    rsi,r12
  414b97:	je     414bd2 <main@@Base+0xdb02>
  414b99:	movzx  eax,BYTE PTR [rsi]
  414b9c:	cmp    al,0x2e
  414b9e:	je     414bb2 <main@@Base+0xdae2>
  414ba0:	cmp    al,0x22
  414ba2:	jne    414bc7 <main@@Base+0xdaf7>
  414ba4:	add    rsi,0x1
  414ba8:	mov    DWORD PTR [r14+0x14],0x0
  414bb0:	jmp    414bcf <main@@Base+0xdaff>
  414bb2:	mov    ecx,0x5
  414bb7:	mov    rdi,r14
  414bba:	mov    rdx,r12
  414bbd:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  414bc2:	mov    r9,rax
  414bc5:	jmp    414bd2 <main@@Base+0xdb02>
  414bc7:	mov    DWORD PTR [r14+0x14],0x1
  414bcf:	mov    r9,rsi
  414bd2:	mov    r10,r12
  414bd5:	sub    r10,r9
  414bd8:	cmp    r10,0x8
  414bdc:	jb     414be8 <main@@Base+0xdb18>
  414bde:	movbe  r13,QWORD PTR [r9]
  414be3:	jmp    414c71 <main@@Base+0xdba1>
  414be8:	mov    eax,r10d
  414beb:	and    al,0xf
  414bed:	add    al,0xff
  414bef:	cmp    al,0x7
  414bf1:	ja     4153c9 <main@@Base+0xe2f9>
  414bf7:	movzx  eax,al
  414bfa:	lea    rcx,[rip+0x209d3]        # 4355d4 <_IO_stdin_used@@Base+0x5d4>
  414c01:	movsxd rbx,DWORD PTR [rcx+rax*4]
  414c05:	add    rbx,rcx
  414c08:	xor    r8d,r8d
  414c0b:	xor    eax,eax
  414c0d:	xor    ecx,ecx
  414c0f:	xor    edx,edx
  414c11:	xor    edi,edi
  414c13:	xor    ebp,ebp
  414c15:	xor    esi,esi
  414c17:	jmp    rbx
  414c19:	movsx  r8,BYTE PTR [r9+0x7]
  414c1e:	movsx  rax,BYTE PTR [r9+0x6]
  414c23:	shl    rax,0x8
  414c27:	or     rax,r8
  414c2a:	movsx  rcx,BYTE PTR [r9+0x5]
  414c2f:	shl    rcx,0x10
  414c33:	or     rcx,rax
  414c36:	movsx  rdx,BYTE PTR [r9+0x4]
  414c3b:	shl    rdx,0x18
  414c3f:	or     rdx,rcx
  414c42:	movsx  rdi,BYTE PTR [r9+0x3]
  414c47:	shl    rdi,0x20
  414c4b:	or     rdi,rdx
  414c4e:	movsx  rbp,BYTE PTR [r9+0x2]
  414c53:	shl    rbp,0x28
  414c57:	or     rbp,rdi
  414c5a:	movsx  rsi,BYTE PTR [r9+0x1]
  414c5f:	shl    rsi,0x30
  414c63:	or     rsi,rbp
  414c66:	movzx  r13d,BYTE PTR [r9]
  414c6a:	shl    r13,0x38
  414c6e:	or     r13,rsi
  414c71:	mov    rax,r13
  414c74:	and    rax,0xffffffffffff0000
  414c7a:	cmp    rax,QWORD PTR [rsp+0x20]
  414c7f:	jne    414cb7 <main@@Base+0xdbe7>
  414c81:	mov    rbp,r9
  414c84:	cmp    r10,0x7
  414c88:	jl     414dfc <main@@Base+0xdd2c>
  414c8e:	cmp    DWORD PTR [r14+0x14],0x0
  414c93:	movzx  eax,BYTE PTR [r9+0x6]
  414c98:	je     414d09 <main@@Base+0xdc39>
  414c9a:	cmp    al,0x21
  414c9c:	jl     414ca9 <main@@Base+0xdbd9>
  414c9e:	mov    rbp,r9
  414ca1:	cmp    al,0x3a
  414ca3:	jne    414dfc <main@@Base+0xdd2c>
  414ca9:	lea    rsi,[r9+0x6]
  414cad:	mov    DWORD PTR [r14+0x14],0x0
  414cb5:	jmp    414d18 <main@@Base+0xdc48>
  414cb7:	mov    rax,r13
  414cba:	and    rax,0xffffffffff000000
  414cc0:	movabs rcx,0x636f6c6f72000000
  414cca:	cmp    rax,rcx
  414ccd:	jne    414feb <main@@Base+0xdf1b>
  414cd3:	mov    rbp,r9
  414cd6:	cmp    r10,0x6
  414cda:	jl     414f7c <main@@Base+0xdeac>
  414ce0:	cmp    DWORD PTR [r14+0x14],0x0
  414ce5:	movzx  eax,BYTE PTR [r9+0x5]
  414cea:	je     414d3b <main@@Base+0xdc6b>
  414cec:	cmp    al,0x21
  414cee:	jl     414cfb <main@@Base+0xdc2b>
  414cf0:	mov    rbp,r9
  414cf3:	cmp    al,0x3a
  414cf5:	jne    414f7c <main@@Base+0xdeac>
  414cfb:	lea    rsi,[r9+0x5]
  414cff:	mov    DWORD PTR [r14+0x14],0x0
  414d07:	jmp    414d4a <main@@Base+0xdc7a>
  414d09:	mov    rbp,r9
  414d0c:	cmp    al,0x22
  414d0e:	jne    414dfc <main@@Base+0xdd2c>
  414d14:	lea    rsi,[r9+0x7]
  414d18:	mov    rax,r12
  414d1b:	sub    rax,rsi
  414d1e:	cmp    rax,0x2
  414d22:	mov    QWORD PTR [rsp+0x18],r10
  414d27:	jl     414d8f <main@@Base+0xdcbf>
  414d29:	cmp    BYTE PTR [rsi],0x20
  414d2c:	jle    414d79 <main@@Base+0xdca9>
  414d2e:	mov    rbx,r9
  414d31:	cmp    rsi,r12
  414d34:	jne    414da5 <main@@Base+0xdcd5>
  414d36:	jmp    414dd1 <main@@Base+0xdd01>
  414d3b:	mov    rbp,r9
  414d3e:	cmp    al,0x22
  414d40:	jne    414f7c <main@@Base+0xdeac>
  414d46:	lea    rsi,[r9+0x6]
  414d4a:	mov    rax,r12
  414d4d:	sub    rax,rsi
  414d50:	cmp    rax,0x2
  414d54:	mov    QWORD PTR [rsp+0x18],r10
  414d59:	jl     414f0f <main@@Base+0xde3f>
  414d5f:	cmp    BYTE PTR [rsi],0x20
  414d62:	jle    414ef9 <main@@Base+0xde29>
  414d68:	mov    rbx,r9
  414d6b:	cmp    rsi,r12
  414d6e:	jne    414f25 <main@@Base+0xde55>
  414d74:	jmp    414f51 <main@@Base+0xde81>
  414d79:	jne    414d8f <main@@Base+0xdcbf>
  414d7b:	cmp    BYTE PTR [rsi+0x1],0x20
  414d7f:	jle    414d8f <main@@Base+0xdcbf>
  414d81:	mov    rbx,r9
  414d84:	add    rsi,0x1
  414d88:	cmp    rsi,r12
  414d8b:	jne    414da5 <main@@Base+0xdcd5>
  414d8d:	jmp    414dd1 <main@@Base+0xdd01>
  414d8f:	mov    rbx,r9
  414d92:	mov    rdi,r14
  414d95:	mov    rdx,r12
  414d98:	call   425750 <flatcc_json_parser_space_ext@@Base>
  414d9d:	mov    rsi,rax
  414da0:	cmp    rsi,r12
  414da3:	je     414dd1 <main@@Base+0xdd01>
  414da5:	cmp    BYTE PTR [rsi],0x3a
  414da8:	jne    414dd1 <main@@Base+0xdd01>
  414daa:	lea    rbp,[rsi+0x1]
  414dae:	mov    rax,r12
  414db1:	sub    rax,rbp
  414db4:	cmp    rax,0x2
  414db8:	jl     414de3 <main@@Base+0xdd13>
  414dba:	cmp    BYTE PTR [rbp+0x0],0x20
  414dbe:	jg     414df4 <main@@Base+0xdd24>
  414dc0:	jne    414de3 <main@@Base+0xdd13>
  414dc2:	cmp    BYTE PTR [rsi+0x2],0x20
  414dc6:	jle    414de3 <main@@Base+0xdd13>
  414dc8:	add    rsi,0x2
  414dcc:	mov    rbp,rsi
  414dcf:	jmp    414df4 <main@@Base+0xdd24>
  414dd1:	mov    ecx,0x4
  414dd6:	mov    rdi,r14
  414dd9:	mov    rdx,r12
  414ddc:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  414de1:	jmp    414df1 <main@@Base+0xdd21>
  414de3:	mov    rdi,r14
  414de6:	mov    rsi,rbp
  414de9:	mov    rdx,r12
  414dec:	call   425750 <flatcc_json_parser_space_ext@@Base>
  414df1:	mov    rbp,rax
  414df4:	mov    r9,rbx
  414df7:	mov    r10,QWORD PTR [rsp+0x18]
  414dfc:	cmp    r9,rbp
  414dff:	je     414feb <main@@Base+0xdf1b>
  414e05:	mov    QWORD PTR [rsp+0x10],0x0
  414e0e:	mov    DWORD PTR [rsp+0xc],0x0
  414e16:	mov    BYTE PTR [rsp+0xb],0x0
  414e1b:	cmp    rbp,r12
  414e1e:	je     414e5c <main@@Base+0xdd8c>
  414e20:	mov    rdi,r14
  414e23:	mov    rsi,rbp
  414e26:	mov    rdx,r12
  414e29:	lea    rcx,[rsp+0xc]
  414e2e:	lea    r8,[rsp+0x10]
  414e33:	call   427360 <flatcc_json_parser_integer@@Base>
  414e38:	cmp    rax,rbp
  414e3b:	je     414e68 <main@@Base+0xdd98>
  414e3d:	mov    r13,rax
  414e40:	mov    rbx,QWORD PTR [rsp+0x10]
  414e45:	cmp    DWORD PTR [rsp+0xc],0x0
  414e4a:	je     414e74 <main@@Base+0xdda4>
  414e4c:	cmp    rbx,0x81
  414e53:	jb     414e9c <main@@Base+0xddcc>
  414e55:	mov    ecx,0x8
  414e5a:	jmp    414e82 <main@@Base+0xddb2>
  414e5c:	xor    ebx,ebx
  414e5e:	mov    r13,r12
  414e61:	cmp    rbp,r13
  414e64:	jne    414edc <main@@Base+0xde0c>
  414e66:	jmp    414ea8 <main@@Base+0xddd8>
  414e68:	xor    ebx,ebx
  414e6a:	mov    r13,rbp
  414e6d:	cmp    rbp,r13
  414e70:	jne    414edc <main@@Base+0xde0c>
  414e72:	jmp    414ea8 <main@@Base+0xddd8>
  414e74:	cmp    rbx,0x80
  414e7b:	jb     414e9f <main@@Base+0xddcf>
  414e7d:	mov    ecx,0x7
  414e82:	mov    rdi,r14
  414e85:	mov    rsi,r13
  414e88:	mov    rdx,r12
  414e8b:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  414e90:	mov    r13,rax
  414e93:	xor    ebx,ebx
  414e95:	cmp    rbp,r13
  414e98:	jne    414edc <main@@Base+0xde0c>
  414e9a:	jmp    414ea8 <main@@Base+0xddd8>
  414e9c:	neg    rbx
  414e9f:	mov    BYTE PTR [rsp+0xb],bl
  414ea3:	cmp    rbp,r13
  414ea6:	jne    414edc <main@@Base+0xde0c>
  414ea8:	mov    rdi,r14
  414eab:	mov    rsi,rbp
  414eae:	mov    rdx,r12
  414eb1:	lea    rcx,[rip+0x2f5a8]        # 444460 <__data_start@@Base+0x3b0>
  414eb8:	lea    r8,[rsp+0xb]
  414ebd:	call   413b90 <main@@Base+0xcac0>
  414ec2:	mov    r13,rax
  414ec5:	cmp    rax,rbp
  414ec8:	je     41562b <main@@Base+0xe55b>
  414ece:	cmp    r13,r12
  414ed1:	je     41562b <main@@Base+0xe55b>
  414ed7:	movzx  ebx,BYTE PTR [rsp+0xb]
  414edc:	cmp    bl,0x2
  414edf:	jne    414eec <main@@Base+0xde1c>
  414ee1:	test   BYTE PTR [r14+0x10],0x2
  414ee6:	je     415488 <main@@Base+0xe3b8>
  414eec:	mov    rdi,QWORD PTR [r14]
  414eef:	mov    esi,0x1
  414ef4:	jmp    41546e <main@@Base+0xe39e>
  414ef9:	jne    414f0f <main@@Base+0xde3f>
  414efb:	cmp    BYTE PTR [rsi+0x1],0x20
  414eff:	jle    414f0f <main@@Base+0xde3f>
  414f01:	mov    rbx,r9
  414f04:	add    rsi,0x1
  414f08:	cmp    rsi,r12
  414f0b:	jne    414f25 <main@@Base+0xde55>
  414f0d:	jmp    414f51 <main@@Base+0xde81>
  414f0f:	mov    rbx,r9
  414f12:	mov    rdi,r14
  414f15:	mov    rdx,r12
  414f18:	call   425750 <flatcc_json_parser_space_ext@@Base>
  414f1d:	mov    rsi,rax
  414f20:	cmp    rsi,r12
  414f23:	je     414f51 <main@@Base+0xde81>
  414f25:	cmp    BYTE PTR [rsi],0x3a
  414f28:	jne    414f51 <main@@Base+0xde81>
  414f2a:	lea    rbp,[rsi+0x1]
  414f2e:	mov    rax,r12
  414f31:	sub    rax,rbp
  414f34:	cmp    rax,0x2
  414f38:	jl     414f63 <main@@Base+0xde93>
  414f3a:	cmp    BYTE PTR [rbp+0x0],0x20
  414f3e:	jg     414f74 <main@@Base+0xdea4>
  414f40:	jne    414f63 <main@@Base+0xde93>
  414f42:	cmp    BYTE PTR [rsi+0x2],0x20
  414f46:	jle    414f63 <main@@Base+0xde93>
  414f48:	add    rsi,0x2
  414f4c:	mov    rbp,rsi
  414f4f:	jmp    414f74 <main@@Base+0xdea4>
  414f51:	mov    ecx,0x4
  414f56:	mov    rdi,r14
  414f59:	mov    rdx,r12
  414f5c:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  414f61:	jmp    414f71 <main@@Base+0xdea1>
  414f63:	mov    rdi,r14
  414f66:	mov    rsi,rbp
  414f69:	mov    rdx,r12
  414f6c:	call   425750 <flatcc_json_parser_space_ext@@Base>
  414f71:	mov    rbp,rax
  414f74:	mov    r9,rbx
  414f77:	mov    r10,QWORD PTR [rsp+0x18]
  414f7c:	cmp    r9,rbp
  414f7f:	je     414feb <main@@Base+0xdf1b>
  414f81:	mov    QWORD PTR [rsp+0x10],0x0
  414f8a:	mov    DWORD PTR [rsp+0xc],0x0
  414f92:	mov    BYTE PTR [rsp+0xb],0x0
  414f97:	cmp    rbp,r12
  414f9a:	je     415077 <main@@Base+0xdfa7>
  414fa0:	mov    rdi,r14
  414fa3:	mov    rsi,rbp
  414fa6:	mov    rdx,r12
  414fa9:	lea    rcx,[rsp+0xc]
  414fae:	lea    r8,[rsp+0x10]
  414fb3:	call   427360 <flatcc_json_parser_integer@@Base>
  414fb8:	cmp    rax,rbp
  414fbb:	je     4150c3 <main@@Base+0xdff3>
  414fc1:	mov    r13,rax
  414fc4:	mov    rbx,QWORD PTR [rsp+0x10]
  414fc9:	cmp    DWORD PTR [rsp+0xc],0x0
  414fce:	je     41510c <main@@Base+0xe03c>
  414fd4:	cmp    rbx,0x81
  414fdb:	jb     415134 <main@@Base+0xe064>
  414fe1:	mov    ecx,0x8
  414fe6:	jmp    41511a <main@@Base+0xe04a>
  414feb:	mov    rax,r13
  414fee:	shr    rax,0x28
  414ff2:	cmp    rax,0x756332
  414ff8:	jne    415030 <main@@Base+0xdf60>
  414ffa:	mov    rbp,r9
  414ffd:	cmp    r10,0x4
  415001:	jl     41520c <main@@Base+0xe13c>
  415007:	cmp    DWORD PTR [r14+0x14],0x0
  41500c:	movzx  eax,BYTE PTR [r9+0x3]
  415011:	je     41508a <main@@Base+0xdfba>
  415013:	cmp    al,0x21
  415015:	jl     415022 <main@@Base+0xdf52>
  415017:	mov    rbp,r9
  41501a:	cmp    al,0x3a
  41501c:	jne    41520c <main@@Base+0xe13c>
  415022:	lea    rsi,[r9+0x3]
  415026:	mov    DWORD PTR [r14+0x14],0x0
  41502e:	jmp    415099 <main@@Base+0xdfc9>
  415030:	shr    r13,0x30
  415034:	cmp    r13,0x7563
  41503b:	jne    4153c9 <main@@Base+0xe2f9>
  415041:	mov    rbp,r9
  415044:	cmp    r10,0x3
  415048:	jl     41537b <main@@Base+0xe2ab>
  41504e:	cmp    DWORD PTR [r14+0x14],0x0
  415053:	movzx  eax,BYTE PTR [r9+0x2]
  415058:	je     4150d3 <main@@Base+0xe003>
  41505a:	cmp    al,0x21
  41505c:	jl     415069 <main@@Base+0xdf99>
  41505e:	mov    rbp,r9
  415061:	cmp    al,0x3a
  415063:	jne    41537b <main@@Base+0xe2ab>
  415069:	lea    rsi,[r9+0x2]
  41506d:	mov    DWORD PTR [r14+0x14],0x0
  415075:	jmp    4150e2 <main@@Base+0xe012>
  415077:	xor    ebx,ebx
  415079:	mov    r13,r12
  41507c:	cmp    rbp,r13
  41507f:	jne    415174 <main@@Base+0xe0a4>
  415085:	jmp    415140 <main@@Base+0xe070>
  41508a:	mov    rbp,r9
  41508d:	cmp    al,0x22
  41508f:	jne    41520c <main@@Base+0xe13c>
  415095:	lea    rsi,[r9+0x4]
  415099:	mov    rax,r12
  41509c:	sub    rax,rsi
  41509f:	cmp    rax,0x2
  4150a3:	jl     4151a4 <main@@Base+0xe0d4>
  4150a9:	cmp    BYTE PTR [rsi],0x20
  4150ac:	jle    41518e <main@@Base+0xe0be>
  4150b2:	mov    rbx,r9
  4150b5:	cmp    rsi,r12
  4150b8:	jne    4151ba <main@@Base+0xe0ea>
  4150be:	jmp    4151e6 <main@@Base+0xe116>
  4150c3:	xor    ebx,ebx
  4150c5:	mov    r13,rbp
  4150c8:	cmp    rbp,r13
  4150cb:	jne    415174 <main@@Base+0xe0a4>
  4150d1:	jmp    415140 <main@@Base+0xe070>
  4150d3:	mov    rbp,r9
  4150d6:	cmp    al,0x22
  4150d8:	jne    41537b <main@@Base+0xe2ab>
  4150de:	lea    rsi,[r9+0x3]
  4150e2:	mov    rax,r12
  4150e5:	sub    rax,rsi
  4150e8:	cmp    rax,0x2
  4150ec:	jl     415313 <main@@Base+0xe243>
  4150f2:	cmp    BYTE PTR [rsi],0x20
  4150f5:	jle    4152fd <main@@Base+0xe22d>
  4150fb:	mov    rbx,r9
  4150fe:	cmp    rsi,r12
  415101:	jne    415329 <main@@Base+0xe259>
  415107:	jmp    415355 <main@@Base+0xe285>
  41510c:	cmp    rbx,0x80
  415113:	jb     415137 <main@@Base+0xe067>
  415115:	mov    ecx,0x7
  41511a:	mov    rdi,r14
  41511d:	mov    rsi,r13
  415120:	mov    rdx,r12
  415123:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  415128:	mov    r13,rax
  41512b:	xor    ebx,ebx
  41512d:	cmp    rbp,r13
  415130:	jne    415174 <main@@Base+0xe0a4>
  415132:	jmp    415140 <main@@Base+0xe070>
  415134:	neg    rbx
  415137:	mov    BYTE PTR [rsp+0xb],bl
  41513b:	cmp    rbp,r13
  41513e:	jne    415174 <main@@Base+0xe0a4>
  415140:	mov    rdi,r14
  415143:	mov    rsi,rbp
  415146:	mov    rdx,r12
  415149:	lea    rcx,[rip+0x2f330]        # 444480 <__data_start@@Base+0x3d0>
  415150:	lea    r8,[rsp+0xb]
  415155:	call   413b90 <main@@Base+0xcac0>
  41515a:	mov    r13,rax
  41515d:	cmp    rax,rbp
  415160:	je     41562b <main@@Base+0xe55b>
  415166:	cmp    r13,r12
  415169:	je     41562b <main@@Base+0xe55b>
  41516f:	movzx  ebx,BYTE PTR [rsp+0xb]
  415174:	cmp    bl,0x2
  415177:	jne    415184 <main@@Base+0xe0b4>
  415179:	test   BYTE PTR [r14+0x10],0x2
  41517e:	je     415488 <main@@Base+0xe3b8>
  415184:	mov    rdi,QWORD PTR [r14]
  415187:	xor    esi,esi
  415189:	jmp    41546e <main@@Base+0xe39e>
  41518e:	jne    4151a4 <main@@Base+0xe0d4>
  415190:	cmp    BYTE PTR [rsi+0x1],0x20
  415194:	jle    4151a4 <main@@Base+0xe0d4>
  415196:	mov    rbx,r9
  415199:	add    rsi,0x1
  41519d:	cmp    rsi,r12
  4151a0:	jne    4151ba <main@@Base+0xe0ea>
  4151a2:	jmp    4151e6 <main@@Base+0xe116>
  4151a4:	mov    rbx,r9
  4151a7:	mov    rdi,r14
  4151aa:	mov    rdx,r12
  4151ad:	call   425750 <flatcc_json_parser_space_ext@@Base>
  4151b2:	mov    rsi,rax
  4151b5:	cmp    rsi,r12
  4151b8:	je     4151e6 <main@@Base+0xe116>
  4151ba:	cmp    BYTE PTR [rsi],0x3a
  4151bd:	jne    4151e6 <main@@Base+0xe116>
  4151bf:	lea    rbp,[rsi+0x1]
  4151c3:	mov    rax,r12
  4151c6:	sub    rax,rbp
  4151c9:	cmp    rax,0x2
  4151cd:	jl     4151f8 <main@@Base+0xe128>
  4151cf:	cmp    BYTE PTR [rbp+0x0],0x20
  4151d3:	jg     415209 <main@@Base+0xe139>
  4151d5:	jne    4151f8 <main@@Base+0xe128>
  4151d7:	cmp    BYTE PTR [rsi+0x2],0x20
  4151db:	jle    4151f8 <main@@Base+0xe128>
  4151dd:	add    rsi,0x2
  4151e1:	mov    rbp,rsi
  4151e4:	jmp    415209 <main@@Base+0xe139>
  4151e6:	mov    ecx,0x4
  4151eb:	mov    rdi,r14
  4151ee:	mov    rdx,r12
  4151f1:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  4151f6:	jmp    415206 <main@@Base+0xe136>
  4151f8:	mov    rdi,r14
  4151fb:	mov    rsi,rbp
  4151fe:	mov    rdx,r12
  415201:	call   425750 <flatcc_json_parser_space_ext@@Base>
  415206:	mov    rbp,rax
  415209:	mov    r9,rbx
  41520c:	cmp    r9,rbp
  41520f:	je     4153c9 <main@@Base+0xe2f9>
  415215:	mov    QWORD PTR [rsp+0x10],0x0
  41521e:	mov    DWORD PTR [rsp+0xc],0x0
  415226:	mov    BYTE PTR [rsp+0xb],0x0
  41522b:	cmp    rbp,r12
  41522e:	je     41525e <main@@Base+0xe18e>
  415230:	mov    rdi,r14
  415233:	mov    rsi,rbp
  415236:	mov    rdx,r12
  415239:	lea    rcx,[rsp+0xc]
  41523e:	lea    r8,[rsp+0x10]
  415243:	call   427360 <flatcc_json_parser_integer@@Base>
  415248:	cmp    rax,rbp
  41524b:	je     41526a <main@@Base+0xe19a>
  41524d:	mov    r13,rax
  415250:	cmp    DWORD PTR [rsp+0xc],0x0
  415255:	je     415276 <main@@Base+0xe1a6>
  415257:	mov    ecx,0x8
  41525c:	jmp    415289 <main@@Base+0xe1b9>
  41525e:	xor    ebx,ebx
  415260:	mov    r13,r12
  415263:	cmp    rbp,r13
  415266:	jne    4152d5 <main@@Base+0xe205>
  415268:	jmp    4152a1 <main@@Base+0xe1d1>
  41526a:	xor    ebx,ebx
  41526c:	mov    r13,rbp
  41526f:	cmp    rbp,r13
  415272:	jne    4152d5 <main@@Base+0xe205>
  415274:	jmp    4152a1 <main@@Base+0xe1d1>
  415276:	mov    rbx,QWORD PTR [rsp+0x10]
  41527b:	cmp    rbx,0x100
  415282:	jb     4152f2 <main@@Base+0xe222>
  415284:	mov    ecx,0x7
  415289:	mov    rdi,r14
  41528c:	mov    rsi,r13
  41528f:	mov    rdx,r12
  415292:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  415297:	mov    r13,rax
  41529a:	xor    ebx,ebx
  41529c:	cmp    rbp,r13
  41529f:	jne    4152d5 <main@@Base+0xe205>
  4152a1:	mov    rdi,r14
  4152a4:	mov    rsi,rbp
  4152a7:	mov    rdx,r12
  4152aa:	lea    rcx,[rip+0x2f1ef]        # 4444a0 <__data_start@@Base+0x3f0>
  4152b1:	lea    r8,[rsp+0xb]
  4152b6:	call   413d70 <main@@Base+0xcca0>
  4152bb:	mov    r13,rax
  4152be:	cmp    rax,rbp
  4152c1:	je     41562b <main@@Base+0xe55b>
  4152c7:	cmp    r13,r12
  4152ca:	je     41562b <main@@Base+0xe55b>
  4152d0:	movzx  ebx,BYTE PTR [rsp+0xb]
  4152d5:	cmp    bl,0x2
  4152d8:	jne    4152e5 <main@@Base+0xe215>
  4152da:	test   BYTE PTR [r14+0x10],0x2
  4152df:	je     415488 <main@@Base+0xe3b8>
  4152e5:	mov    rdi,QWORD PTR [r14]
  4152e8:	mov    esi,0x3
  4152ed:	jmp    41546e <main@@Base+0xe39e>
  4152f2:	mov    BYTE PTR [rsp+0xb],bl
  4152f6:	cmp    rbp,r13
  4152f9:	jne    4152d5 <main@@Base+0xe205>
  4152fb:	jmp    4152a1 <main@@Base+0xe1d1>
  4152fd:	jne    415313 <main@@Base+0xe243>
  4152ff:	cmp    BYTE PTR [rsi+0x1],0x20
  415303:	jle    415313 <main@@Base+0xe243>
  415305:	mov    rbx,r9
  415308:	add    rsi,0x1
  41530c:	cmp    rsi,r12
  41530f:	jne    415329 <main@@Base+0xe259>
  415311:	jmp    415355 <main@@Base+0xe285>
  415313:	mov    rbx,r9
  415316:	mov    rdi,r14
  415319:	mov    rdx,r12
  41531c:	call   425750 <flatcc_json_parser_space_ext@@Base>
  415321:	mov    rsi,rax
  415324:	cmp    rsi,r12
  415327:	je     415355 <main@@Base+0xe285>
  415329:	cmp    BYTE PTR [rsi],0x3a
  41532c:	jne    415355 <main@@Base+0xe285>
  41532e:	lea    rbp,[rsi+0x1]
  415332:	mov    rax,r12
  415335:	sub    rax,rbp
  415338:	cmp    rax,0x2
  41533c:	jl     415367 <main@@Base+0xe297>
  41533e:	cmp    BYTE PTR [rbp+0x0],0x20
  415342:	jg     415378 <main@@Base+0xe2a8>
  415344:	jne    415367 <main@@Base+0xe297>
  415346:	cmp    BYTE PTR [rsi+0x2],0x20
  41534a:	jle    415367 <main@@Base+0xe297>
  41534c:	add    rsi,0x2
  415350:	mov    rbp,rsi
  415353:	jmp    415378 <main@@Base+0xe2a8>
  415355:	mov    ecx,0x4
  41535a:	mov    rdi,r14
  41535d:	mov    rdx,r12
  415360:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  415365:	jmp    415375 <main@@Base+0xe2a5>
  415367:	mov    rdi,r14
  41536a:	mov    rsi,rbp
  41536d:	mov    rdx,r12
  415370:	call   425750 <flatcc_json_parser_space_ext@@Base>
  415375:	mov    rbp,rax
  415378:	mov    r9,rbx
  41537b:	cmp    r9,rbp
  41537e:	je     4153c9 <main@@Base+0xe2f9>
  415380:	mov    QWORD PTR [rsp+0x10],0x0
  415389:	mov    DWORD PTR [rsp+0xc],0x0
  415391:	mov    BYTE PTR [rsp+0xb],0x0
  415396:	cmp    rbp,r12
  415399:	je     4153df <main@@Base+0xe30f>
  41539b:	mov    rdi,r14
  41539e:	mov    rsi,rbp
  4153a1:	mov    rdx,r12
  4153a4:	lea    rcx,[rsp+0xc]
  4153a9:	lea    r8,[rsp+0x10]
  4153ae:	call   427360 <flatcc_json_parser_integer@@Base>
  4153b3:	cmp    rax,rbp
  4153b6:	je     4153eb <main@@Base+0xe31b>
  4153b8:	mov    r13,rax
  4153bb:	cmp    DWORD PTR [rsp+0xc],0x0
  4153c0:	je     4153f7 <main@@Base+0xe327>
  4153c2:	mov    ecx,0x8
  4153c7:	jmp    41540e <main@@Base+0xe33e>
  4153c9:	mov    rdi,r14
  4153cc:	mov    rsi,r9
  4153cf:	mov    rdx,r12
  4153d2:	call   425cc0 <flatcc_json_parser_unmatched_symbol@@Base>
  4153d7:	mov    r13,rax
  4153da:	jmp    415488 <main@@Base+0xe3b8>
  4153df:	xor    ebx,ebx
  4153e1:	mov    r13,r12
  4153e4:	cmp    rbp,r13
  4153e7:	jne    41545a <main@@Base+0xe38a>
  4153e9:	jmp    415426 <main@@Base+0xe356>
  4153eb:	xor    ebx,ebx
  4153ed:	mov    r13,rbp
  4153f0:	cmp    rbp,r13
  4153f3:	jne    41545a <main@@Base+0xe38a>
  4153f5:	jmp    415426 <main@@Base+0xe356>
  4153f7:	mov    rbx,QWORD PTR [rsp+0x10]
  4153fc:	cmp    rbx,0x100
  415403:	jb     41551c <main@@Base+0xe44c>
  415409:	mov    ecx,0x7
  41540e:	mov    rdi,r14
  415411:	mov    rsi,r13
  415414:	mov    rdx,r12
  415417:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  41541c:	mov    r13,rax
  41541f:	xor    ebx,ebx
  415421:	cmp    rbp,r13
  415424:	jne    41545a <main@@Base+0xe38a>
  415426:	mov    rdi,r14
  415429:	mov    rsi,rbp
  41542c:	mov    rdx,r12
  41542f:	lea    rcx,[rip+0x2f08a]        # 4444c0 <__data_start@@Base+0x410>
  415436:	lea    r8,[rsp+0xb]
  41543b:	call   413d70 <main@@Base+0xcca0>
  415440:	mov    r13,rax
  415443:	cmp    rax,rbp
  415446:	je     41562b <main@@Base+0xe55b>
  41544c:	cmp    r13,r12
  41544f:	je     41562b <main@@Base+0xe55b>
  415455:	movzx  ebx,BYTE PTR [rsp+0xb]
  41545a:	cmp    bl,0x2
  41545d:	jne    415466 <main@@Base+0xe396>
  41545f:	test   BYTE PTR [r14+0x10],0x2
  415464:	je     415488 <main@@Base+0xe3b8>
  415466:	mov    rdi,QWORD PTR [r14]
  415469:	mov    esi,0x2
  41546e:	mov    edx,0x1
  415473:	mov    ecx,0x1
  415478:	call   421f20 <flatcc_builder_table_add@@Base>
  41547d:	test   rax,rax
  415480:	je     41562b <main@@Base+0xe55b>
  415486:	mov    BYTE PTR [rax],bl
  415488:	mov    rax,r12
  41548b:	sub    rax,r13
  41548e:	cmp    rax,0x2
  415492:	jl     4154af <main@@Base+0xe3df>
  415494:	cmp    BYTE PTR [r13+0x0],0x20
  415499:	jg     4154c0 <main@@Base+0xe3f0>
  41549b:	jne    4154af <main@@Base+0xe3df>
  41549d:	cmp    BYTE PTR [r13+0x1],0x20
  4154a2:	jle    4154af <main@@Base+0xe3df>
  4154a4:	add    r13,0x1
  4154a8:	cmp    r13,r12
  4154ab:	jne    4154c5 <main@@Base+0xe3f5>
  4154ad:	jmp    41552e <main@@Base+0xe45e>
  4154af:	mov    rdi,r14
  4154b2:	mov    rsi,r13
  4154b5:	mov    rdx,r12
  4154b8:	call   425750 <flatcc_json_parser_space_ext@@Base>
  4154bd:	mov    r13,rax
  4154c0:	cmp    r13,r12
  4154c3:	je     41552e <main@@Base+0xe45e>
  4154c5:	movzx  eax,BYTE PTR [r13+0x0]
  4154ca:	cmp    al,0x2c
  4154cc:	jne    4155da <main@@Base+0xe50a>
  4154d2:	lea    rsi,[r13+0x1]
  4154d6:	mov    rax,r12
  4154d9:	sub    rax,rsi
  4154dc:	cmp    rax,0x2
  4154e0:	jl     4154fe <main@@Base+0xe42e>
  4154e2:	cmp    BYTE PTR [rsi],0x20
  4154e5:	jg     41550c <main@@Base+0xe43c>
  4154e7:	jne    4154fe <main@@Base+0xe42e>
  4154e9:	cmp    BYTE PTR [r13+0x2],0x20
  4154ee:	jle    4154fe <main@@Base+0xe42e>
  4154f0:	add    r13,0x2
  4154f4:	mov    rsi,r13
  4154f7:	cmp    rsi,r12
  4154fa:	jne    415511 <main@@Base+0xe441>
  4154fc:	jmp    415554 <main@@Base+0xe484>
  4154fe:	mov    rdi,r14
  415501:	mov    rdx,r12
  415504:	call   425750 <flatcc_json_parser_space_ext@@Base>
  415509:	mov    rsi,rax
  41550c:	cmp    rsi,r12
  41550f:	je     415554 <main@@Base+0xe484>
  415511:	cmp    BYTE PTR [rsi],0x7d
  415514:	jne    414b91 <main@@Base+0xdac1>
  41551a:	jmp    415564 <main@@Base+0xe494>
  41551c:	mov    BYTE PTR [rsp+0xb],bl
  415520:	cmp    rbp,r13
  415523:	jne    41545a <main@@Base+0xe38a>
  415529:	jmp    415426 <main@@Base+0xe356>
  41552e:	mov    rbp,r12
  415531:	cmp    DWORD PTR [r14+0x20],0x0
  415536:	jne    4149bf <main@@Base+0xd8ef>
  41553c:	mov    rdi,QWORD PTR [r14]
  41553f:	call   4215b0 <flatcc_builder_end_table@@Base>
  415544:	mov    DWORD PTR [r15],eax
  415547:	test   eax,eax
  415549:	jne    4149d5 <main@@Base+0xd905>
  41554f:	jmp    4149bf <main@@Base+0xd8ef>
  415554:	mov    ecx,0xa
  415559:	mov    rdi,r14
  41555c:	mov    rsi,r12
  41555f:	jmp    4149a9 <main@@Base+0xd8d9>
  415564:	lea    rbp,[rsi+0x1]
  415568:	mov    rax,r12
  41556b:	sub    rax,rbp
  41556e:	cmp    rax,0x2
  415572:	jl     415618 <main@@Base+0xe548>
  415578:	cmp    BYTE PTR [rbp+0x0],0x20
  41557c:	jg     4149b4 <main@@Base+0xd8e4>
  415582:	jne    415618 <main@@Base+0xe548>
  415588:	cmp    BYTE PTR [rsi+0x2],0x20
  41558c:	jle    415618 <main@@Base+0xe548>
  415592:	add    rsi,0x2
  415596:	mov    rbp,rsi
  415599:	cmp    DWORD PTR [r14+0x20],0x0
  41559e:	jne    4149bf <main@@Base+0xd8ef>
  4155a4:	jmp    41553c <main@@Base+0xe46c>
  4155a6:	cmp    cl,0x7d
  4155a9:	jne    415633 <main@@Base+0xe563>
  4155af:	lea    rbp,[rax+0x1]
  4155b3:	mov    rcx,r12
  4155b6:	sub    rcx,rbp
  4155b9:	cmp    rcx,0x2
  4155bd:	jl     415618 <main@@Base+0xe548>
  4155bf:	cmp    BYTE PTR [rbp+0x0],0x20
  4155c3:	jg     4149b4 <main@@Base+0xd8e4>
  4155c9:	jne    415618 <main@@Base+0xe548>
  4155cb:	cmp    BYTE PTR [rax+0x2],0x20
  4155cf:	jle    415618 <main@@Base+0xe548>
  4155d1:	add    rax,0x2
  4155d5:	jmp    4149b1 <main@@Base+0xd8e1>
  4155da:	cmp    al,0x7d
  4155dc:	jne    415643 <main@@Base+0xe573>
  4155de:	lea    rbp,[r13+0x1]
  4155e2:	mov    rax,r12
  4155e5:	sub    rax,rbp
  4155e8:	cmp    rax,0x2
  4155ec:	jl     415618 <main@@Base+0xe548>
  4155ee:	cmp    BYTE PTR [rbp+0x0],0x20
  4155f2:	jg     4149b4 <main@@Base+0xd8e4>
  4155f8:	jne    415618 <main@@Base+0xe548>
  4155fa:	cmp    BYTE PTR [r13+0x2],0x20
  4155ff:	jle    415618 <main@@Base+0xe548>
  415601:	add    r13,0x2
  415605:	mov    rbp,r13
  415608:	cmp    DWORD PTR [r14+0x20],0x0
  41560d:	jne    4149bf <main@@Base+0xd8ef>
  415613:	jmp    41553c <main@@Base+0xe46c>
  415618:	mov    rdi,r14
  41561b:	mov    rsi,rbp
  41561e:	mov    rdx,r12
  415621:	call   425750 <flatcc_json_parser_space_ext@@Base>
  415626:	jmp    4149b1 <main@@Base+0xd8e1>
  41562b:	mov    rbp,r13
  41562e:	jmp    4149bf <main@@Base+0xd8ef>
  415633:	mov    ecx,0xa
  415638:	mov    rdi,r14
  41563b:	mov    rsi,rax
  41563e:	jmp    4149a9 <main@@Base+0xd8d9>
  415643:	mov    ecx,0xa
  415648:	mov    rdi,r14
  41564b:	mov    rsi,r13
  41564e:	jmp    4149a9 <main@@Base+0xd8d9>
  415653:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41565d:	nop    DWORD PTR [rax]
  415660:	push   rbp
  415661:	push   r15
  415663:	push   r14
  415665:	push   r13
  415667:	push   r12
  415669:	push   rbx
  41566a:	push   rax
  41566b:	mov    rbp,rcx
  41566e:	mov    r12,rdx
  415671:	mov    rbx,rsi
  415674:	mov    rcx,rdx
  415677:	sub    rcx,rsi
  41567a:	cmp    rcx,0x8
  41567e:	jb     415687 <main@@Base+0xe5b7>
  415680:	movbe  r14,QWORD PTR [rbx]
  415685:	jmp    415703 <main@@Base+0xe633>
  415687:	and    cl,0xf
  41568a:	add    cl,0xff
  41568d:	cmp    cl,0x7
  415690:	ja     415812 <main@@Base+0xe742>
  415696:	xor    eax,eax
  415698:	movzx  ecx,cl
  41569b:	lea    rdx,[rip+0x1ff52]        # 4355f4 <_IO_stdin_used@@Base+0x5f4>
  4156a2:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  4156a6:	add    rcx,rdx
  4156a9:	jmp    rcx
  4156ab:	movsx  rax,BYTE PTR [rbx+0x7]
  4156b0:	movsx  rcx,BYTE PTR [rbx+0x6]
  4156b5:	shl    rcx,0x8
  4156b9:	or     rax,rcx
  4156bc:	movsx  rcx,BYTE PTR [rbx+0x5]
  4156c1:	shl    rcx,0x10
  4156c5:	or     rax,rcx
  4156c8:	movsx  rcx,BYTE PTR [rbx+0x4]
  4156cd:	shl    rcx,0x18
  4156d1:	or     rax,rcx
  4156d4:	movsx  rcx,BYTE PTR [rbx+0x3]
  4156d9:	shl    rcx,0x20
  4156dd:	or     rax,rcx
  4156e0:	movsx  rcx,BYTE PTR [rbx+0x2]
  4156e5:	shl    rcx,0x28
  4156e9:	or     rax,rcx
  4156ec:	movsx  rcx,BYTE PTR [rbx+0x1]
  4156f1:	shl    rcx,0x30
  4156f5:	or     rax,rcx
  4156f8:	movzx  r14d,BYTE PTR [rbx]
  4156fc:	shl    r14,0x38
  415700:	or     r14,rax
  415703:	movabs rax,0x4d6f6e7374657200
  41570d:	cmp    r14,rax
  415710:	jae    41574e <main@@Base+0xe67e>
  415712:	shr    r14,0x28
  415716:	cmp    r14,0x416c74
  41571d:	jne    415812 <main@@Base+0xe742>
  415723:	mov    r14,r8
  415726:	mov    ecx,0x3
  41572b:	mov    rsi,rbx
  41572e:	mov    rdx,r12
  415731:	mov    r8,r9
  415734:	call   425b40 <flatcc_json_parser_match_constant@@Base>
  415739:	cmp    rax,rbx
  41573c:	je     415812 <main@@Base+0xe742>
  415742:	mov    QWORD PTR [r14],0x4
  415749:	jmp    415808 <main@@Base+0xe738>
  41574e:	lea    rcx,[rax+0x32]
  415752:	cmp    r14,rcx
  415755:	jne    415782 <main@@Base+0xe6b2>
  415757:	mov    r14,r8
  41575a:	mov    ecx,0x8
  41575f:	mov    rsi,rbx
  415762:	mov    rdx,r12
  415765:	mov    r8,r9
  415768:	call   425b40 <flatcc_json_parser_match_constant@@Base>
  41576d:	cmp    rax,rbx
  415770:	je     415812 <main@@Base+0xe742>
  415776:	mov    QWORD PTR [r14],0x3
  41577d:	jmp    415808 <main@@Base+0xe738>
  415782:	mov    rcx,r14
  415785:	and    rcx,0xffffffffffffff00
  41578c:	cmp    rcx,rax
  41578f:	jne    4157c6 <main@@Base+0xe6f6>
  415791:	mov    ecx,0x7
  415796:	mov    r13,rdi
  415799:	mov    rsi,rbx
  41579c:	mov    rdx,r12
  41579f:	mov    QWORD PTR [rsp],r8
  4157a3:	mov    r8,r9
  4157a6:	mov    r15,r9
  4157a9:	call   425b40 <flatcc_json_parser_match_constant@@Base>
  4157ae:	mov    rdi,r13
  4157b1:	mov    r9,r15
  4157b4:	mov    r8,QWORD PTR [rsp]
  4157b8:	cmp    rax,rbx
  4157bb:	je     4157c6 <main@@Base+0xe6f6>
  4157bd:	mov    QWORD PTR [r8],0x1
  4157c4:	jmp    415808 <main@@Base+0xe738>
  4157c6:	mov    rax,r14
  4157c9:	shr    rax,0x20
  4157cd:	cmp    rax,0x4e4f4e45
  4157d3:	jne    415824 <main@@Base+0xe754>
  4157d5:	mov    ecx,0x4
  4157da:	mov    r13,rdi
  4157dd:	mov    rsi,rbx
  4157e0:	mov    rdx,r12
  4157e3:	mov    QWORD PTR [rsp],r8
  4157e7:	mov    r8,r9
  4157ea:	mov    r15,r9
  4157ed:	call   425b40 <flatcc_json_parser_match_constant@@Base>
  4157f2:	mov    rdi,r13
  4157f5:	mov    r9,r15
  4157f8:	mov    r8,QWORD PTR [rsp]
  4157fc:	cmp    rax,rbx
  4157ff:	je     415824 <main@@Base+0xe754>
  415801:	mov    QWORD PTR [r8],0x0
  415808:	mov    DWORD PTR [rbp+0x0],0x0
  41580f:	mov    rbx,rax
  415812:	mov    rax,rbx
  415815:	add    rsp,0x8
  415819:	pop    rbx
  41581a:	pop    r12
  41581c:	pop    r13
  41581e:	pop    r14
  415820:	pop    r15
  415822:	pop    rbp
  415823:	ret    
  415824:	movabs rax,0x5465737453696d70
  41582e:	cmp    r14,rax
  415831:	jne    415812 <main@@Base+0xe742>
  415833:	lea    rax,[rbx+0x8]
  415837:	mov    rdx,r12
  41583a:	sub    rdx,rax
  41583d:	cmp    rdx,0x8
  415841:	jb     41584a <main@@Base+0xe77a>
  415843:	movbe  rax,QWORD PTR [rax]
  415848:	jmp    4158c1 <main@@Base+0xe7f1>
  41584a:	and    dl,0xf
  41584d:	add    dl,0xff
  415850:	cmp    dl,0x7
  415853:	ja     415812 <main@@Base+0xe742>
  415855:	xor    ecx,ecx
  415857:	movzx  edx,dl
  41585a:	lea    rsi,[rip+0x1fdb3]        # 435614 <_IO_stdin_used@@Base+0x614>
  415861:	movsxd rdx,DWORD PTR [rsi+rdx*4]
  415865:	add    rdx,rsi
  415868:	jmp    rdx
  41586a:	movsx  rcx,BYTE PTR [rbx+0xf]
  41586f:	movsx  rdx,BYTE PTR [rbx+0xe]
  415874:	shl    rdx,0x8
  415878:	or     rcx,rdx
  41587b:	movsx  rdx,BYTE PTR [rbx+0xd]
  415880:	shl    rdx,0x10
  415884:	or     rcx,rdx
  415887:	movsx  rdx,BYTE PTR [rbx+0xc]
  41588c:	shl    rdx,0x18
  415890:	or     rcx,rdx
  415893:	movsx  rdx,BYTE PTR [rbx+0xb]
  415898:	shl    rdx,0x20
  41589c:	or     rcx,rdx
  41589f:	movsx  rdx,BYTE PTR [rbx+0xa]
  4158a4:	shl    rdx,0x28
  4158a8:	or     rcx,rdx
  4158ab:	movsx  rdx,BYTE PTR [rbx+0x9]
  4158b0:	shl    rdx,0x30
  4158b4:	or     rcx,rdx
  4158b7:	movzx  eax,BYTE PTR [rax]
  4158ba:	shl    rax,0x38
  4158be:	or     rax,rcx
  4158c1:	movabs rcx,0x6c655461626c6557
  4158cb:	cmp    rax,rcx
  4158ce:	jne    415812 <main@@Base+0xe742>
  4158d4:	lea    r15,[rbx+0x10]
  4158d8:	mov    rcx,r12
  4158db:	sub    rcx,r15
  4158de:	cmp    rcx,0x8
  4158e2:	jb     4158eb <main@@Base+0xe81b>
  4158e4:	movbe  rcx,QWORD PTR [r15]
  4158e9:	jmp    415967 <main@@Base+0xe897>
  4158eb:	and    cl,0xf
  4158ee:	add    cl,0xff
  4158f1:	cmp    cl,0x7
  4158f4:	ja     415812 <main@@Base+0xe742>
  4158fa:	xor    eax,eax
  4158fc:	movzx  ecx,cl
  4158ff:	lea    rdx,[rip+0x1fd2e]        # 435634 <_IO_stdin_used@@Base+0x634>
  415906:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  41590a:	add    rcx,rdx
  41590d:	jmp    rcx
  41590f:	movsx  rax,BYTE PTR [rbx+0x17]
  415914:	movsx  rcx,BYTE PTR [rbx+0x16]
  415919:	shl    rcx,0x8
  41591d:	or     rax,rcx
  415920:	movsx  rcx,BYTE PTR [rbx+0x15]
  415925:	shl    rcx,0x10
  415929:	or     rax,rcx
  41592c:	movsx  rcx,BYTE PTR [rbx+0x14]
  415931:	shl    rcx,0x18
  415935:	or     rax,rcx
  415938:	movsx  rcx,BYTE PTR [rbx+0x13]
  41593d:	shl    rcx,0x20
  415941:	or     rax,rcx
  415944:	movsx  rcx,BYTE PTR [rbx+0x12]
  415949:	shl    rcx,0x28
  41594d:	or     rax,rcx
  415950:	movsx  rcx,BYTE PTR [rbx+0x11]
  415955:	shl    rcx,0x30
  415959:	or     rax,rcx
  41595c:	movzx  ecx,BYTE PTR [r15]
  415960:	shl    rcx,0x38
  415964:	or     rcx,rax
  415967:	shr    rcx,0x8
  41596b:	movabs rax,0x697468456e756d
  415975:	cmp    rcx,rax
  415978:	jne    415812 <main@@Base+0xe742>
  41597e:	mov    r14,r8
  415981:	mov    ecx,0x7
  415986:	mov    rsi,r15
  415989:	mov    rdx,r12
  41598c:	mov    r8,r9
  41598f:	call   425b40 <flatcc_json_parser_match_constant@@Base>
  415994:	cmp    rax,r15
  415997:	je     415812 <main@@Base+0xe742>
  41599d:	mov    QWORD PTR [r14],0x2
  4159a4:	jmp    415808 <main@@Base+0xe738>
  4159a9:	nop    DWORD PTR [rax+0x0]
  4159b0:	push   rbp
  4159b1:	push   r15
  4159b3:	push   r14
  4159b5:	push   r13
  4159b7:	push   r12
  4159b9:	push   rbx
  4159ba:	sub    rsp,0x38
  4159be:	mov    r15,r8
  4159c1:	mov    r13,rdx
  4159c4:	mov    rbx,rsi
  4159c7:	mov    r14,rdi
  4159ca:	mov    BYTE PTR [r8],0x0
  4159ce:	cmp    rsi,rdx
  4159d1:	je     4159ed <main@@Base+0xe91d>
  4159d3:	mov    al,BYTE PTR [rbx]
  4159d5:	cmp    al,0x2e
  4159d7:	je     4159fe <main@@Base+0xe92e>
  4159d9:	cmp    al,0x22
  4159db:	jne    415b54 <main@@Base+0xea84>
  4159e1:	add    rbx,0x1
  4159e5:	mov    DWORD PTR [r14+0x14],0x0
  4159ed:	cmp    DWORD PTR [r14+0x14],0x0
  4159f2:	je     415a21 <main@@Base+0xe951>
  4159f4:	cmp    rbx,r13
  4159f7:	jne    415a60 <main@@Base+0xe990>
  4159f9:	jmp    415b27 <main@@Base+0xea57>
  4159fe:	mov    rbp,rcx
  415a01:	mov    ecx,0x5
  415a06:	mov    rdi,r14
  415a09:	mov    rsi,rbx
  415a0c:	mov    rdx,r13
  415a0f:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  415a14:	mov    rcx,rbp
  415a17:	mov    rbx,rax
  415a1a:	cmp    DWORD PTR [r14+0x14],0x0
  415a1f:	jne    4159f4 <main@@Base+0xe924>
  415a21:	mov    rbp,rcx
  415a24:	mov    rax,r13
  415a27:	sub    rax,rbx
  415a2a:	cmp    rax,0x2
  415a2e:	jl     415a43 <main@@Base+0xe973>
  415a30:	cmp    BYTE PTR [rbx],0x20
  415a33:	jg     415a54 <main@@Base+0xe984>
  415a35:	jne    415a43 <main@@Base+0xe973>
  415a37:	cmp    BYTE PTR [rbx+0x1],0x20
  415a3b:	jle    415a43 <main@@Base+0xe973>
  415a3d:	add    rbx,0x1
  415a41:	jmp    415a54 <main@@Base+0xe984>
  415a43:	mov    rdi,r14
  415a46:	mov    rsi,rbx
  415a49:	mov    rdx,r13
  415a4c:	call   425750 <flatcc_json_parser_space_ext@@Base>
  415a51:	mov    rbx,rax
  415a54:	mov    rcx,rbp
  415a57:	cmp    rbx,r13
  415a5a:	je     415b27 <main@@Base+0xea57>
  415a60:	lea    rax,[rcx+0x8]
  415a64:	mov    DWORD PTR [rsp+0xc],0x0
  415a6c:	lea    r12,[rsp+0x10]
  415a71:	mov    QWORD PTR [rsp+0x20],r15
  415a76:	mov    QWORD PTR [rsp+0x18],rcx
  415a7b:	mov    QWORD PTR [rsp+0x28],rax
  415a80:	mov    rbp,QWORD PTR [rcx]
  415a83:	mov    r15,rax
  415a86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415a90:	mov    rdi,r14
  415a93:	mov    rsi,rbx
  415a96:	mov    rdx,r13
  415a99:	lea    rcx,[rsp+0x14]
  415a9e:	lea    r8,[rsp+0x30]
  415aa3:	mov    r9,r12
  415aa6:	call   rbp
  415aa8:	cmp    rax,r13
  415aab:	je     415b27 <main@@Base+0xea57>
  415aad:	mov    rbp,rax
  415ab0:	cmp    rax,rbx
  415ab3:	jne    415ad0 <main@@Base+0xea00>
  415ab5:	mov    rbp,QWORD PTR [r15]
  415ab8:	add    r15,0x8
  415abc:	test   rbp,rbp
  415abf:	jne    415a90 <main@@Base+0xe9c0>
  415ac1:	jmp    415b2c <main@@Base+0xea5c>
  415ac3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415acd:	nop    DWORD PTR [rax]
  415ad0:	cmp    DWORD PTR [rsp+0x14],0x0
  415ad5:	je     415aec <main@@Base+0xea1c>
  415ad7:	mov    ecx,0x8
  415adc:	mov    rdi,r14
  415adf:	mov    rsi,rbp
  415ae2:	mov    rdx,r13
  415ae5:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  415aea:	jmp    415afc <main@@Base+0xea2c>
  415aec:	cmp    QWORD PTR [rsp+0x30],0x0
  415af2:	setne  al
  415af5:	mov    DWORD PTR [rsp+0xc],eax
  415af9:	mov    rax,rbp
  415afc:	mov    r15,QWORD PTR [rsp+0x20]
  415b01:	mov    rcx,QWORD PTR [rsp+0x18]
  415b06:	cmp    rax,r13
  415b09:	je     415b27 <main@@Base+0xea57>
  415b0b:	mov    rbx,rbp
  415b0e:	mov    eax,DWORD PTR [rsp+0xc]
  415b12:	add    BYTE PTR [r15],al
  415b15:	cmp    DWORD PTR [rsp+0x10],0x0
  415b1a:	mov    rax,QWORD PTR [rsp+0x28]
  415b1f:	jne    415a80 <main@@Base+0xe9b0>
  415b25:	jmp    415b42 <main@@Base+0xea72>
  415b27:	mov    rbp,r13
  415b2a:	jmp    415b42 <main@@Base+0xea72>
  415b2c:	mov    ecx,0x17
  415b31:	mov    rdi,r14
  415b34:	mov    rsi,rbx
  415b37:	mov    rdx,r13
  415b3a:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  415b3f:	mov    rbp,rax
  415b42:	mov    rax,rbp
  415b45:	add    rsp,0x38
  415b49:	pop    rbx
  415b4a:	pop    r12
  415b4c:	pop    r13
  415b4e:	pop    r14
  415b50:	pop    r15
  415b52:	pop    rbp
  415b53:	ret    
  415b54:	mov    DWORD PTR [r14+0x14],0x1
  415b5c:	cmp    DWORD PTR [r14+0x14],0x0
  415b61:	jne    4159f4 <main@@Base+0xe924>
  415b67:	jmp    415a21 <main@@Base+0xe951>
  415b6c:	nop    DWORD PTR [rax+0x0]
  415b70:	push   rbp
  415b71:	push   r15
  415b73:	push   r14
  415b75:	push   r13
  415b77:	push   r12
  415b79:	push   rbx
  415b7a:	sub    rsp,0x48
  415b7e:	mov    rbx,r8
  415b81:	mov    rbp,rcx
  415b84:	mov    r13,rdx
  415b87:	mov    r12,rsi
  415b8a:	mov    r14,rdi
  415b8d:	mov    DWORD PTR [r8],0x0
  415b94:	cmp    rsi,rdx
  415b97:	je     415bb1 <main@@Base+0xeae1>
  415b99:	mov    al,BYTE PTR [r12]
  415b9d:	cmp    al,0x2e
  415b9f:	je     415bc2 <main@@Base+0xeaf2>
  415ba1:	cmp    al,0x22
  415ba3:	jne    415be1 <main@@Base+0xeb11>
  415ba5:	add    r12,0x1
  415ba9:	mov    DWORD PTR [r14+0x14],0x0
  415bb1:	cmp    DWORD PTR [r14+0x14],0x0
  415bb6:	je     415bf0 <main@@Base+0xeb20>
  415bb8:	cmp    r12,r13
  415bbb:	jne    415c35 <main@@Base+0xeb65>
  415bbd:	jmp    415d0a <main@@Base+0xec3a>
  415bc2:	mov    ecx,0x5
  415bc7:	mov    rdi,r14
  415bca:	mov    rsi,r12
  415bcd:	mov    rdx,r13
  415bd0:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  415bd5:	mov    r12,rax
  415bd8:	cmp    DWORD PTR [r14+0x14],0x0
  415bdd:	jne    415bb8 <main@@Base+0xeae8>
  415bdf:	jmp    415bf0 <main@@Base+0xeb20>
  415be1:	mov    DWORD PTR [r14+0x14],0x1
  415be9:	cmp    DWORD PTR [r14+0x14],0x0
  415bee:	jne    415bb8 <main@@Base+0xeae8>
  415bf0:	mov    rax,r13
  415bf3:	sub    rax,r12
  415bf6:	cmp    rax,0x2
  415bfa:	jl     415c1b <main@@Base+0xeb4b>
  415bfc:	cmp    BYTE PTR [r12],0x20
  415c01:	jg     415bb8 <main@@Base+0xeae8>
  415c03:	jne    415c1b <main@@Base+0xeb4b>
  415c05:	cmp    BYTE PTR [r12+0x1],0x20
  415c0b:	jle    415c1b <main@@Base+0xeb4b>
  415c0d:	add    r12,0x1
  415c11:	cmp    r12,r13
  415c14:	jne    415c35 <main@@Base+0xeb65>
  415c16:	jmp    415d0a <main@@Base+0xec3a>
  415c1b:	mov    rdi,r14
  415c1e:	mov    rsi,r12
  415c21:	mov    rdx,r13
  415c24:	call   425750 <flatcc_json_parser_space_ext@@Base>
  415c29:	mov    r12,rax
  415c2c:	cmp    r12,r13
  415c2f:	je     415d0a <main@@Base+0xec3a>
  415c35:	lea    rcx,[rbp+0x8]
  415c39:	lea    r15,[rsp+0x8]
  415c3e:	vbroadcastss xmm0,DWORD PTR [rip+0x1f3c9]        # 435010 <_IO_stdin_used@@Base+0x10>
  415c47:	vmovaps XMMWORD PTR [rsp+0x30],xmm0
  415c4d:	mov    QWORD PTR [rsp+0x18],rbx
  415c52:	mov    QWORD PTR [rsp+0x10],rbp
  415c57:	mov    QWORD PTR [rsp+0x20],rcx
  415c5c:	mov    rbx,QWORD PTR [rbp+0x0]
  415c60:	mov    rbp,rcx
  415c63:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415c6d:	nop    DWORD PTR [rax]
  415c70:	mov    rdi,r14
  415c73:	mov    rsi,r12
  415c76:	mov    rdx,r13
  415c79:	lea    rcx,[rsp+0xc]
  415c7e:	lea    r8,[rsp+0x28]
  415c83:	mov    r9,r15
  415c86:	call   rbx
  415c88:	cmp    rax,r13
  415c8b:	je     415d0a <main@@Base+0xec3a>
  415c8d:	cmp    rax,r12
  415c90:	jne    415cb0 <main@@Base+0xebe0>
  415c92:	mov    rbx,QWORD PTR [rbp+0x0]
  415c96:	add    rbp,0x8
  415c9a:	test   rbx,rbx
  415c9d:	jne    415c70 <main@@Base+0xeba0>
  415c9f:	jmp    415d0f <main@@Base+0xec3f>
  415ca1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415cab:	nop    DWORD PTR [rax+rax*1+0x0]
  415cb0:	mov    rcx,QWORD PTR [rsp+0x28]
  415cb5:	test   rcx,rcx
  415cb8:	js     415cc1 <main@@Base+0xebf1>
  415cba:	vcvtsi2ss xmm0,xmm1,rcx
  415cbf:	jmp    415cd6 <main@@Base+0xec06>
  415cc1:	mov    rdx,rcx
  415cc4:	shr    rdx,1
  415cc7:	and    ecx,0x1
  415cca:	or     rcx,rdx
  415ccd:	vcvtsi2ss xmm0,xmm1,rcx
  415cd2:	vaddss xmm0,xmm0,xmm0
  415cd6:	mov    rbx,QWORD PTR [rsp+0x18]
  415cdb:	mov    rbp,QWORD PTR [rsp+0x10]
  415ce0:	cmp    DWORD PTR [rsp+0xc],0x0
  415ce5:	mov    rcx,QWORD PTR [rsp+0x20]
  415cea:	je     415cf2 <main@@Base+0xec22>
  415cec:	vxorps xmm0,xmm0,XMMWORD PTR [rsp+0x30]
  415cf2:	vaddss xmm0,xmm0,DWORD PTR [rbx]
  415cf6:	vmovss DWORD PTR [rbx],xmm0
  415cfa:	cmp    DWORD PTR [rsp+0x8],0x0
  415cff:	mov    r12,rax
  415d02:	jne    415c5c <main@@Base+0xeb8c>
  415d08:	jmp    415d22 <main@@Base+0xec52>
  415d0a:	mov    rax,r13
  415d0d:	jmp    415d22 <main@@Base+0xec52>
  415d0f:	mov    ecx,0x17
  415d14:	mov    rdi,r14
  415d17:	mov    rsi,r12
  415d1a:	mov    rdx,r13
  415d1d:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  415d22:	add    rsp,0x48
  415d26:	pop    rbx
  415d27:	pop    r12
  415d29:	pop    r13
  415d2b:	pop    r14
  415d2d:	pop    r15
  415d2f:	pop    rbp
  415d30:	ret    
  415d31:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415d3b:	nop    DWORD PTR [rax+rax*1+0x0]
  415d40:	push   rbp
  415d41:	push   r15
  415d43:	push   r14
  415d45:	push   r13
  415d47:	push   r12
  415d49:	push   rbx
  415d4a:	sub    rsp,0x38
  415d4e:	mov    r15,r8
  415d51:	mov    r13,rdx
  415d54:	mov    rbx,rsi
  415d57:	mov    r14,rdi
  415d5a:	mov    DWORD PTR [r8],0x0
  415d61:	cmp    rsi,rdx
  415d64:	je     415d80 <main@@Base+0xecb0>
  415d66:	mov    al,BYTE PTR [rbx]
  415d68:	cmp    al,0x2e
  415d6a:	je     415d91 <main@@Base+0xecc1>
  415d6c:	cmp    al,0x22
  415d6e:	jne    415eff <main@@Base+0xee2f>
  415d74:	add    rbx,0x1
  415d78:	mov    DWORD PTR [r14+0x14],0x0
  415d80:	cmp    DWORD PTR [r14+0x14],0x0
  415d85:	je     415db4 <main@@Base+0xece4>
  415d87:	cmp    rbx,r13
  415d8a:	jne    415df3 <main@@Base+0xed23>
  415d8c:	jmp    415ed2 <main@@Base+0xee02>
  415d91:	mov    rbp,rcx
  415d94:	mov    ecx,0x5
  415d99:	mov    rdi,r14
  415d9c:	mov    rsi,rbx
  415d9f:	mov    rdx,r13
  415da2:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  415da7:	mov    rcx,rbp
  415daa:	mov    rbx,rax
  415dad:	cmp    DWORD PTR [r14+0x14],0x0
  415db2:	jne    415d87 <main@@Base+0xecb7>
  415db4:	mov    rbp,rcx
  415db7:	mov    rax,r13
  415dba:	sub    rax,rbx
  415dbd:	cmp    rax,0x2
  415dc1:	jl     415dd6 <main@@Base+0xed06>
  415dc3:	cmp    BYTE PTR [rbx],0x20
  415dc6:	jg     415de7 <main@@Base+0xed17>
  415dc8:	jne    415dd6 <main@@Base+0xed06>
  415dca:	cmp    BYTE PTR [rbx+0x1],0x20
  415dce:	jle    415dd6 <main@@Base+0xed06>
  415dd0:	add    rbx,0x1
  415dd4:	jmp    415de7 <main@@Base+0xed17>
  415dd6:	mov    rdi,r14
  415dd9:	mov    rsi,rbx
  415ddc:	mov    rdx,r13
  415ddf:	call   425750 <flatcc_json_parser_space_ext@@Base>
  415de4:	mov    rbx,rax
  415de7:	mov    rcx,rbp
  415dea:	cmp    rbx,r13
  415ded:	je     415ed2 <main@@Base+0xee02>
  415df3:	lea    rax,[rcx+0x8]
  415df7:	xor    edx,edx
  415df9:	lea    r12,[rsp+0x10]
  415dfe:	mov    QWORD PTR [rsp+0x18],r15
  415e03:	mov    QWORD PTR [rsp+0x28],rcx
  415e08:	mov    QWORD PTR [rsp+0x20],rax
  415e0d:	mov    DWORD PTR [rsp+0xc],edx
  415e11:	mov    rbp,QWORD PTR [rcx]
  415e14:	mov    r15,rax
  415e17:	nop    WORD PTR [rax+rax*1+0x0]
  415e20:	mov    rdi,r14
  415e23:	mov    rsi,rbx
  415e26:	mov    rdx,r13
  415e29:	lea    rcx,[rsp+0x14]
  415e2e:	lea    r8,[rsp+0x30]
  415e33:	mov    r9,r12
  415e36:	call   rbp
  415e38:	cmp    rax,r13
  415e3b:	je     415ed2 <main@@Base+0xee02>
  415e41:	mov    rbp,rax
  415e44:	cmp    rax,rbx
  415e47:	jne    415e60 <main@@Base+0xed90>
  415e49:	mov    rbp,QWORD PTR [r15]
  415e4c:	add    r15,0x8
  415e50:	test   rbp,rbp
  415e53:	jne    415e20 <main@@Base+0xed50>
  415e55:	jmp    415ed7 <main@@Base+0xee07>
  415e5a:	nop    WORD PTR [rax+rax*1+0x0]
  415e60:	mov    rax,QWORD PTR [rsp+0x30]
  415e65:	cmp    DWORD PTR [rsp+0x14],0x0
  415e6a:	je     415e82 <main@@Base+0xedb2>
  415e6c:	mov    ecx,0x80000001
  415e71:	cmp    rax,rcx
  415e74:	mov    r15,QWORD PTR [rsp+0x18]
  415e79:	jb     415ea8 <main@@Base+0xedd8>
  415e7b:	mov    ecx,0x8
  415e80:	jmp    415e94 <main@@Base+0xedc4>
  415e82:	test   rax,0xffffffff80000000
  415e88:	mov    r15,QWORD PTR [rsp+0x18]
  415e8d:	je     415eab <main@@Base+0xeddb>
  415e8f:	mov    ecx,0x7
  415e94:	mov    rdi,r14
  415e97:	mov    rsi,rbp
  415e9a:	mov    rdx,r13
  415e9d:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  415ea2:	mov    edx,DWORD PTR [rsp+0xc]
  415ea6:	jmp    415eb0 <main@@Base+0xede0>
  415ea8:	neg    rax
  415eab:	mov    edx,eax
  415ead:	mov    rax,rbp
  415eb0:	cmp    rax,r13
  415eb3:	mov    rcx,QWORD PTR [rsp+0x28]
  415eb8:	je     415ed2 <main@@Base+0xee02>
  415eba:	add    DWORD PTR [r15],edx
  415ebd:	cmp    DWORD PTR [rsp+0x10],0x0
  415ec2:	mov    rbx,rbp
  415ec5:	mov    rax,QWORD PTR [rsp+0x20]
  415eca:	jne    415e0d <main@@Base+0xed3d>
  415ed0:	jmp    415eed <main@@Base+0xee1d>
  415ed2:	mov    rbp,r13
  415ed5:	jmp    415eed <main@@Base+0xee1d>
  415ed7:	mov    ecx,0x17
  415edc:	mov    rdi,r14
  415edf:	mov    rsi,rbx
  415ee2:	mov    rdx,r13
  415ee5:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  415eea:	mov    rbp,rax
  415eed:	mov    rax,rbp
  415ef0:	add    rsp,0x38
  415ef4:	pop    rbx
  415ef5:	pop    r12
  415ef7:	pop    r13
  415ef9:	pop    r14
  415efb:	pop    r15
  415efd:	pop    rbp
  415efe:	ret    
  415eff:	mov    DWORD PTR [r14+0x14],0x1
  415f07:	cmp    DWORD PTR [r14+0x14],0x0
  415f0c:	jne    415d87 <main@@Base+0xecb7>
  415f12:	jmp    415db4 <main@@Base+0xece4>
  415f17:	nop    WORD PTR [rax+rax*1+0x0]
  415f20:	push   rbp
  415f21:	push   r15
  415f23:	push   r14
  415f25:	push   r13
  415f27:	push   r12
  415f29:	push   rbx
  415f2a:	sub    rsp,0x38
  415f2e:	mov    r15,r8
  415f31:	mov    r13,rdx
  415f34:	mov    rbx,rsi
  415f37:	mov    r14,rdi
  415f3a:	mov    QWORD PTR [r8],0x0
  415f41:	cmp    rsi,rdx
  415f44:	je     415f60 <main@@Base+0xee90>
  415f46:	mov    al,BYTE PTR [rbx]
  415f48:	cmp    al,0x2e
  415f4a:	je     415f71 <main@@Base+0xeea1>
  415f4c:	cmp    al,0x22
  415f4e:	jne    4160eb <main@@Base+0xf01b>
  415f54:	add    rbx,0x1
  415f58:	mov    DWORD PTR [r14+0x14],0x0
  415f60:	cmp    DWORD PTR [r14+0x14],0x0
  415f65:	je     415f94 <main@@Base+0xeec4>
  415f67:	cmp    rbx,r13
  415f6a:	jne    415fd3 <main@@Base+0xef03>
  415f6c:	jmp    4160be <main@@Base+0xefee>
  415f71:	mov    rbp,rcx
  415f74:	mov    ecx,0x5
  415f79:	mov    rdi,r14
  415f7c:	mov    rsi,rbx
  415f7f:	mov    rdx,r13
  415f82:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  415f87:	mov    rcx,rbp
  415f8a:	mov    rbx,rax
  415f8d:	cmp    DWORD PTR [r14+0x14],0x0
  415f92:	jne    415f67 <main@@Base+0xee97>
  415f94:	mov    rbp,rcx
  415f97:	mov    rax,r13
  415f9a:	sub    rax,rbx
  415f9d:	cmp    rax,0x2
  415fa1:	jl     415fb6 <main@@Base+0xeee6>
  415fa3:	cmp    BYTE PTR [rbx],0x20
  415fa6:	jg     415fc7 <main@@Base+0xeef7>
  415fa8:	jne    415fb6 <main@@Base+0xeee6>
  415faa:	cmp    BYTE PTR [rbx+0x1],0x20
  415fae:	jle    415fb6 <main@@Base+0xeee6>
  415fb0:	add    rbx,0x1
  415fb4:	jmp    415fc7 <main@@Base+0xeef7>
  415fb6:	mov    rdi,r14
  415fb9:	mov    rsi,rbx
  415fbc:	mov    rdx,r13
  415fbf:	call   425750 <flatcc_json_parser_space_ext@@Base>
  415fc4:	mov    rbx,rax
  415fc7:	mov    rcx,rbp
  415fca:	cmp    rbx,r13
  415fcd:	je     4160be <main@@Base+0xefee>
  415fd3:	lea    rax,[rcx+0x8]
  415fd7:	xor    edx,edx
  415fd9:	lea    r12,[rsp+0x8]
  415fde:	mov    QWORD PTR [rsp+0x10],r15
  415fe3:	mov    QWORD PTR [rsp+0x28],rcx
  415fe8:	mov    QWORD PTR [rsp+0x20],rax
  415fed:	mov    QWORD PTR [rsp+0x18],rdx
  415ff2:	mov    rbp,QWORD PTR [rcx]
  415ff5:	mov    r15,rax
  415ff8:	nop    DWORD PTR [rax+rax*1+0x0]
  416000:	mov    rdi,r14
  416003:	mov    rsi,rbx
  416006:	mov    rdx,r13
  416009:	lea    rcx,[rsp+0xc]
  41600e:	lea    r8,[rsp+0x30]
  416013:	mov    r9,r12
  416016:	call   rbp
  416018:	cmp    rax,r13
  41601b:	je     4160be <main@@Base+0xefee>
  416021:	mov    rbp,rax
  416024:	cmp    rax,rbx
  416027:	jne    416040 <main@@Base+0xef70>
  416029:	mov    rbp,QWORD PTR [r15]
  41602c:	add    r15,0x8
  416030:	test   rbp,rbp
  416033:	jne    416000 <main@@Base+0xef30>
  416035:	jmp    4160c3 <main@@Base+0xeff3>
  41603a:	nop    WORD PTR [rax+rax*1+0x0]
  416040:	mov    rcx,QWORD PTR [rsp+0x30]
  416045:	cmp    DWORD PTR [rsp+0xc],0x0
  41604a:	je     416067 <main@@Base+0xef97>
  41604c:	movabs rax,0x8000000000000001
  416056:	cmp    rcx,rax
  416059:	mov    r15,QWORD PTR [rsp+0x10]
  41605e:	jb     416093 <main@@Base+0xefc3>
  416060:	mov    ecx,0x8
  416065:	jmp    416079 <main@@Base+0xefa9>
  416067:	mov    rax,rbp
  41606a:	test   rcx,rcx
  41606d:	mov    r15,QWORD PTR [rsp+0x10]
  416072:	jns    41608c <main@@Base+0xefbc>
  416074:	mov    ecx,0x7
  416079:	mov    rdi,r14
  41607c:	mov    rsi,rbp
  41607f:	mov    rdx,r13
  416082:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  416087:	mov    rcx,QWORD PTR [rsp+0x18]
  41608c:	cmp    rax,r13
  41608f:	jne    41609e <main@@Base+0xefce>
  416091:	jmp    4160be <main@@Base+0xefee>
  416093:	neg    rcx
  416096:	mov    rax,rbp
  416099:	cmp    rax,r13
  41609c:	je     4160be <main@@Base+0xefee>
  41609e:	add    QWORD PTR [r15],rcx
  4160a1:	cmp    DWORD PTR [rsp+0x8],0x0
  4160a6:	mov    rdx,rcx
  4160a9:	mov    rbx,rbp
  4160ac:	mov    rcx,QWORD PTR [rsp+0x28]
  4160b1:	mov    rax,QWORD PTR [rsp+0x20]
  4160b6:	jne    415fed <main@@Base+0xef1d>
  4160bc:	jmp    4160d9 <main@@Base+0xf009>
  4160be:	mov    rbp,r13
  4160c1:	jmp    4160d9 <main@@Base+0xf009>
  4160c3:	mov    ecx,0x17
  4160c8:	mov    rdi,r14
  4160cb:	mov    rsi,rbx
  4160ce:	mov    rdx,r13
  4160d1:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  4160d6:	mov    rbp,rax
  4160d9:	mov    rax,rbp
  4160dc:	add    rsp,0x38
  4160e0:	pop    rbx
  4160e1:	pop    r12
  4160e3:	pop    r13
  4160e5:	pop    r14
  4160e7:	pop    r15
  4160e9:	pop    rbp
  4160ea:	ret    
  4160eb:	mov    DWORD PTR [r14+0x14],0x1
  4160f3:	cmp    DWORD PTR [r14+0x14],0x0
  4160f8:	jne    415f67 <main@@Base+0xee97>
  4160fe:	jmp    415f94 <main@@Base+0xeec4>
  416103:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41610d:	nop    DWORD PTR [rax]
  416110:	push   rbp
  416111:	push   r15
  416113:	push   r14
  416115:	push   r13
  416117:	push   r12
  416119:	push   rbx
  41611a:	sub    rsp,0x38
  41611e:	mov    r15,r8
  416121:	mov    r13,rdx
  416124:	mov    rbx,rsi
  416127:	mov    r14,rdi
  41612a:	mov    DWORD PTR [r8],0x0
  416131:	cmp    rsi,rdx
  416134:	je     416150 <main@@Base+0xf080>
  416136:	mov    al,BYTE PTR [rbx]
  416138:	cmp    al,0x2e
  41613a:	je     416161 <main@@Base+0xf091>
  41613c:	cmp    al,0x22
  41613e:	jne    4162d3 <main@@Base+0xf203>
  416144:	add    rbx,0x1
  416148:	mov    DWORD PTR [r14+0x14],0x0
  416150:	cmp    DWORD PTR [r14+0x14],0x0
  416155:	je     416184 <main@@Base+0xf0b4>
  416157:	cmp    rbx,r13
  41615a:	jne    4161c3 <main@@Base+0xf0f3>
  41615c:	jmp    4162a6 <main@@Base+0xf1d6>
  416161:	mov    rbp,rcx
  416164:	mov    ecx,0x5
  416169:	mov    rdi,r14
  41616c:	mov    rsi,rbx
  41616f:	mov    rdx,r13
  416172:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  416177:	mov    rcx,rbp
  41617a:	mov    rbx,rax
  41617d:	cmp    DWORD PTR [r14+0x14],0x0
  416182:	jne    416157 <main@@Base+0xf087>
  416184:	mov    rbp,rcx
  416187:	mov    rax,r13
  41618a:	sub    rax,rbx
  41618d:	cmp    rax,0x2
  416191:	jl     4161a6 <main@@Base+0xf0d6>
  416193:	cmp    BYTE PTR [rbx],0x20
  416196:	jg     4161b7 <main@@Base+0xf0e7>
  416198:	jne    4161a6 <main@@Base+0xf0d6>
  41619a:	cmp    BYTE PTR [rbx+0x1],0x20
  41619e:	jle    4161a6 <main@@Base+0xf0d6>
  4161a0:	add    rbx,0x1
  4161a4:	jmp    4161b7 <main@@Base+0xf0e7>
  4161a6:	mov    rdi,r14
  4161a9:	mov    rsi,rbx
  4161ac:	mov    rdx,r13
  4161af:	call   425750 <flatcc_json_parser_space_ext@@Base>
  4161b4:	mov    rbx,rax
  4161b7:	mov    rcx,rbp
  4161ba:	cmp    rbx,r13
  4161bd:	je     4162a6 <main@@Base+0xf1d6>
  4161c3:	lea    rax,[rcx+0x8]
  4161c7:	mov    DWORD PTR [rsp+0xc],0x0
  4161cf:	lea    r12,[rsp+0x10]
  4161d4:	mov    QWORD PTR [rsp+0x18],r15
  4161d9:	mov    QWORD PTR [rsp+0x28],rcx
  4161de:	mov    QWORD PTR [rsp+0x20],rax
  4161e3:	mov    rbp,QWORD PTR [rcx]
  4161e6:	mov    r15,rax
  4161e9:	nop    DWORD PTR [rax+0x0]
  4161f0:	mov    rdi,r14
  4161f3:	mov    rsi,rbx
  4161f6:	mov    rdx,r13
  4161f9:	lea    rcx,[rsp+0x14]
  4161fe:	lea    r8,[rsp+0x30]
  416203:	mov    r9,r12
  416206:	call   rbp
  416208:	cmp    rax,r13
  41620b:	je     4162a6 <main@@Base+0xf1d6>
  416211:	mov    rbp,rax
  416214:	cmp    rax,rbx
  416217:	jne    416230 <main@@Base+0xf160>
  416219:	mov    rbp,QWORD PTR [r15]
  41621c:	add    r15,0x8
  416220:	test   rbp,rbp
  416223:	jne    4161f0 <main@@Base+0xf120>
  416225:	jmp    4162ab <main@@Base+0xf1db>
  41622a:	nop    WORD PTR [rax+rax*1+0x0]
  416230:	cmp    DWORD PTR [rsp+0x14],0x0
  416235:	je     416251 <main@@Base+0xf181>
  416237:	mov    ecx,0x8
  41623c:	mov    rdi,r14
  41623f:	mov    rsi,rbp
  416242:	mov    rdx,r13
  416245:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  41624a:	mov    r15,QWORD PTR [rsp+0x18]
  41624f:	jmp    416280 <main@@Base+0xf1b0>
  416251:	mov    rax,QWORD PTR [rsp+0x30]
  416256:	mov    rcx,rax
  416259:	shr    rcx,0x20
  41625d:	mov    r15,QWORD PTR [rsp+0x18]
  416262:	je     416279 <main@@Base+0xf1a9>
  416264:	mov    ecx,0x7
  416269:	mov    rdi,r14
  41626c:	mov    rsi,rbp
  41626f:	mov    rdx,r13
  416272:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  416277:	jmp    416280 <main@@Base+0xf1b0>
  416279:	mov    DWORD PTR [rsp+0xc],eax
  41627d:	mov    rax,rbp
  416280:	cmp    rax,r13
  416283:	mov    rcx,QWORD PTR [rsp+0x28]
  416288:	je     4162a6 <main@@Base+0xf1d6>
  41628a:	mov    eax,DWORD PTR [rsp+0xc]
  41628e:	add    DWORD PTR [r15],eax
  416291:	cmp    DWORD PTR [rsp+0x10],0x0
  416296:	mov    rbx,rbp
  416299:	mov    rax,QWORD PTR [rsp+0x20]
  41629e:	jne    4161e3 <main@@Base+0xf113>
  4162a4:	jmp    4162c1 <main@@Base+0xf1f1>
  4162a6:	mov    rbp,r13
  4162a9:	jmp    4162c1 <main@@Base+0xf1f1>
  4162ab:	mov    ecx,0x17
  4162b0:	mov    rdi,r14
  4162b3:	mov    rsi,rbx
  4162b6:	mov    rdx,r13
  4162b9:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  4162be:	mov    rbp,rax
  4162c1:	mov    rax,rbp
  4162c4:	add    rsp,0x38
  4162c8:	pop    rbx
  4162c9:	pop    r12
  4162cb:	pop    r13
  4162cd:	pop    r14
  4162cf:	pop    r15
  4162d1:	pop    rbp
  4162d2:	ret    
  4162d3:	mov    DWORD PTR [r14+0x14],0x1
  4162db:	cmp    DWORD PTR [r14+0x14],0x0
  4162e0:	jne    416157 <main@@Base+0xf087>
  4162e6:	jmp    416184 <main@@Base+0xf0b4>
  4162eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4162f0:	push   rbp
  4162f1:	push   r15
  4162f3:	push   r14
  4162f5:	push   r13
  4162f7:	push   r12
  4162f9:	push   rbx
  4162fa:	sub    rsp,0x38
  4162fe:	mov    r15,r8
  416301:	mov    r13,rdx
  416304:	mov    rbx,rsi
  416307:	mov    r14,rdi
  41630a:	mov    QWORD PTR [r8],0x0
  416311:	cmp    rsi,rdx
  416314:	je     416330 <main@@Base+0xf260>
  416316:	mov    al,BYTE PTR [rbx]
  416318:	cmp    al,0x2e
  41631a:	je     416341 <main@@Base+0xf271>
  41631c:	cmp    al,0x22
  41631e:	jne    416492 <main@@Base+0xf3c2>
  416324:	add    rbx,0x1
  416328:	mov    DWORD PTR [r14+0x14],0x0
  416330:	cmp    DWORD PTR [r14+0x14],0x0
  416335:	je     416364 <main@@Base+0xf294>
  416337:	cmp    rbx,r13
  41633a:	jne    4163a3 <main@@Base+0xf2d3>
  41633c:	jmp    416465 <main@@Base+0xf395>
  416341:	mov    rbp,rcx
  416344:	mov    ecx,0x5
  416349:	mov    rdi,r14
  41634c:	mov    rsi,rbx
  41634f:	mov    rdx,r13
  416352:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  416357:	mov    rcx,rbp
  41635a:	mov    rbx,rax
  41635d:	cmp    DWORD PTR [r14+0x14],0x0
  416362:	jne    416337 <main@@Base+0xf267>
  416364:	mov    rbp,rcx
  416367:	mov    rax,r13
  41636a:	sub    rax,rbx
  41636d:	cmp    rax,0x2
  416371:	jl     416386 <main@@Base+0xf2b6>
  416373:	cmp    BYTE PTR [rbx],0x20
  416376:	jg     416397 <main@@Base+0xf2c7>
  416378:	jne    416386 <main@@Base+0xf2b6>
  41637a:	cmp    BYTE PTR [rbx+0x1],0x20
  41637e:	jle    416386 <main@@Base+0xf2b6>
  416380:	add    rbx,0x1
  416384:	jmp    416397 <main@@Base+0xf2c7>
  416386:	mov    rdi,r14
  416389:	mov    rsi,rbx
  41638c:	mov    rdx,r13
  41638f:	call   425750 <flatcc_json_parser_space_ext@@Base>
  416394:	mov    rbx,rax
  416397:	mov    rcx,rbp
  41639a:	cmp    rbx,r13
  41639d:	je     416465 <main@@Base+0xf395>
  4163a3:	lea    rax,[rcx+0x8]
  4163a7:	xor    edx,edx
  4163a9:	mov    QWORD PTR [rsp+0x20],rdx
  4163ae:	lea    r12,[rsp+0x8]
  4163b3:	mov    QWORD PTR [rsp+0x18],r15
  4163b8:	mov    QWORD PTR [rsp+0x10],rcx
  4163bd:	mov    QWORD PTR [rsp+0x28],rax
  4163c2:	mov    rbp,QWORD PTR [rcx]
  4163c5:	mov    r15,rax
  4163c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4163d0:	mov    rdi,r14
  4163d3:	mov    rsi,rbx
  4163d6:	mov    rdx,r13
  4163d9:	lea    rcx,[rsp+0xc]
  4163de:	lea    r8,[rsp+0x30]
  4163e3:	mov    r9,r12
  4163e6:	call   rbp
  4163e8:	cmp    rax,r13
  4163eb:	je     416465 <main@@Base+0xf395>
  4163ed:	mov    rbp,rax
  4163f0:	cmp    rax,rbx
  4163f3:	jne    416410 <main@@Base+0xf340>
  4163f5:	mov    rbp,QWORD PTR [r15]
  4163f8:	add    r15,0x8
  4163fc:	test   rbp,rbp
  4163ff:	jne    4163d0 <main@@Base+0xf300>
  416401:	jmp    41646a <main@@Base+0xf39a>
  416403:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41640d:	nop    DWORD PTR [rax]
  416410:	cmp    DWORD PTR [rsp+0xc],0x0
  416415:	je     41642c <main@@Base+0xf35c>
  416417:	mov    ecx,0x8
  41641c:	mov    rdi,r14
  41641f:	mov    rsi,rbp
  416422:	mov    rdx,r13
  416425:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  41642a:	jmp    416439 <main@@Base+0xf369>
  41642c:	mov    rax,QWORD PTR [rsp+0x30]
  416431:	mov    QWORD PTR [rsp+0x20],rax
  416436:	mov    rax,rbp
  416439:	mov    r15,QWORD PTR [rsp+0x18]
  41643e:	mov    rcx,QWORD PTR [rsp+0x10]
  416443:	cmp    rax,r13
  416446:	je     416465 <main@@Base+0xf395>
  416448:	mov    rax,QWORD PTR [rsp+0x20]
  41644d:	add    QWORD PTR [r15],rax
  416450:	cmp    DWORD PTR [rsp+0x8],0x0
  416455:	mov    rbx,rbp
  416458:	mov    rax,QWORD PTR [rsp+0x28]
  41645d:	jne    4163c2 <main@@Base+0xf2f2>
  416463:	jmp    416480 <main@@Base+0xf3b0>
  416465:	mov    rbp,r13
  416468:	jmp    416480 <main@@Base+0xf3b0>
  41646a:	mov    ecx,0x17
  41646f:	mov    rdi,r14
  416472:	mov    rsi,rbx
  416475:	mov    rdx,r13
  416478:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  41647d:	mov    rbp,rax
  416480:	mov    rax,rbp
  416483:	add    rsp,0x38
  416487:	pop    rbx
  416488:	pop    r12
  41648a:	pop    r13
  41648c:	pop    r14
  41648e:	pop    r15
  416490:	pop    rbp
  416491:	ret    
  416492:	mov    DWORD PTR [r14+0x14],0x1
  41649a:	cmp    DWORD PTR [r14+0x14],0x0
  41649f:	jne    416337 <main@@Base+0xf267>
  4164a5:	jmp    416364 <main@@Base+0xf294>
  4164aa:	nop    WORD PTR [rax+rax*1+0x0]
  4164b0:	push   rbp
  4164b1:	push   r15
  4164b3:	push   r14
  4164b5:	push   r13
  4164b7:	push   r12
  4164b9:	push   rbx
  4164ba:	sub    rsp,0x28
  4164be:	mov    rbx,r8
  4164c1:	mov    rbp,rcx
  4164c4:	mov    r13,rdx
  4164c7:	mov    r12,rsi
  4164ca:	mov    r14,rdi
  4164cd:	mov    QWORD PTR [r8],0x0
  4164d4:	cmp    rsi,rdx
  4164d7:	je     4164f1 <main@@Base+0xf421>
  4164d9:	mov    al,BYTE PTR [r12]
  4164dd:	cmp    al,0x2e
  4164df:	je     416502 <main@@Base+0xf432>
  4164e1:	cmp    al,0x22
  4164e3:	jne    416521 <main@@Base+0xf451>
  4164e5:	add    r12,0x1
  4164e9:	mov    DWORD PTR [r14+0x14],0x0
  4164f1:	cmp    DWORD PTR [r14+0x14],0x0
  4164f6:	je     416530 <main@@Base+0xf460>
  4164f8:	cmp    r12,r13
  4164fb:	jne    416575 <main@@Base+0xf4a5>
  4164fd:	jmp    41662f <main@@Base+0xf55f>
  416502:	mov    ecx,0x5
  416507:	mov    rdi,r14
  41650a:	mov    rsi,r12
  41650d:	mov    rdx,r13
  416510:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  416515:	mov    r12,rax
  416518:	cmp    DWORD PTR [r14+0x14],0x0
  41651d:	jne    4164f8 <main@@Base+0xf428>
  41651f:	jmp    416530 <main@@Base+0xf460>
  416521:	mov    DWORD PTR [r14+0x14],0x1
  416529:	cmp    DWORD PTR [r14+0x14],0x0
  41652e:	jne    4164f8 <main@@Base+0xf428>
  416530:	mov    rax,r13
  416533:	sub    rax,r12
  416536:	cmp    rax,0x2
  41653a:	jl     41655b <main@@Base+0xf48b>
  41653c:	cmp    BYTE PTR [r12],0x20
  416541:	jg     4164f8 <main@@Base+0xf428>
  416543:	jne    41655b <main@@Base+0xf48b>
  416545:	cmp    BYTE PTR [r12+0x1],0x20
  41654b:	jle    41655b <main@@Base+0xf48b>
  41654d:	add    r12,0x1
  416551:	cmp    r12,r13
  416554:	jne    416575 <main@@Base+0xf4a5>
  416556:	jmp    41662f <main@@Base+0xf55f>
  41655b:	mov    rdi,r14
  41655e:	mov    rsi,r12
  416561:	mov    rdx,r13
  416564:	call   425750 <flatcc_json_parser_space_ext@@Base>
  416569:	mov    r12,rax
  41656c:	cmp    r12,r13
  41656f:	je     41662f <main@@Base+0xf55f>
  416575:	lea    rcx,[rbp+0x8]
  416579:	mov    r15,rsp
  41657c:	mov    QWORD PTR [rsp+0x18],rbx
  416581:	mov    QWORD PTR [rsp+0x10],rbp
  416586:	mov    QWORD PTR [rsp+0x8],rcx
  41658b:	mov    rbx,QWORD PTR [rbp+0x0]
  41658f:	mov    rbp,rcx
  416592:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41659c:	nop    DWORD PTR [rax+0x0]
  4165a0:	mov    rdi,r14
  4165a3:	mov    rsi,r12
  4165a6:	mov    rdx,r13
  4165a9:	lea    rcx,[rsp+0x4]
  4165ae:	lea    r8,[rsp+0x20]
  4165b3:	mov    r9,r15
  4165b6:	call   rbx
  4165b8:	cmp    rax,r13
  4165bb:	je     41662f <main@@Base+0xf55f>
  4165bd:	cmp    rax,r12
  4165c0:	jne    4165e0 <main@@Base+0xf510>
  4165c2:	mov    rbx,QWORD PTR [rbp+0x0]
  4165c6:	add    rbp,0x8
  4165ca:	test   rbx,rbx
  4165cd:	jne    4165a0 <main@@Base+0xf4d0>
  4165cf:	jmp    416634 <main@@Base+0xf564>
  4165d1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4165db:	nop    DWORD PTR [rax+rax*1+0x0]
  4165e0:	cmp    DWORD PTR [rsp+0x4],0x0
  4165e5:	vmovsd xmm0,QWORD PTR [rsp+0x20]
  4165eb:	vunpcklps xmm0,xmm0,XMMWORD PTR [rip+0x1f63d]        # 435c30 <_IO_stdin_used@@Base+0xc30>
  4165f3:	vsubpd xmm0,xmm0,XMMWORD PTR [rip+0x1f645]        # 435c40 <_IO_stdin_used@@Base+0xc40>
  4165fb:	vhaddpd xmm0,xmm0,xmm0
  4165ff:	je     416609 <main@@Base+0xf539>
  416601:	vxorpd xmm0,xmm0,XMMWORD PTR [rip+0x1f647]        # 435c50 <_IO_stdin_used@@Base+0xc50>
  416609:	mov    rbx,QWORD PTR [rsp+0x18]
  41660e:	vaddsd xmm0,xmm0,QWORD PTR [rbx]
  416612:	vmovsd QWORD PTR [rbx],xmm0
  416616:	cmp    DWORD PTR [rsp],0x0
  41661a:	mov    r12,rax
  41661d:	mov    rbp,QWORD PTR [rsp+0x10]
  416622:	mov    rcx,QWORD PTR [rsp+0x8]
  416627:	jne    41658b <main@@Base+0xf4bb>
  41662d:	jmp    416647 <main@@Base+0xf577>
  41662f:	mov    rax,r13
  416632:	jmp    416647 <main@@Base+0xf577>
  416634:	mov    ecx,0x17
  416639:	mov    rdi,r14
  41663c:	mov    rsi,r12
  41663f:	mov    rdx,r13
  416642:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  416647:	add    rsp,0x28
  41664b:	pop    rbx
  41664c:	pop    r12
  41664e:	pop    r13
  416650:	pop    r14
  416652:	pop    r15
  416654:	pop    rbp
  416655:	ret    
  416656:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416660:	push   r15
  416662:	push   r14
  416664:	push   r12
  416666:	push   rbx
  416667:	push   rax
  416668:	mov    r15,r8
  41666b:	mov    r14,rcx
  41666e:	mov    rbx,rsi
  416671:	mov    rcx,rdx
  416674:	sub    rcx,rsi
  416677:	cmp    rcx,0x8
  41667b:	jb     416684 <main@@Base+0xf5b4>
  41667d:	movbe  rcx,QWORD PTR [rbx]
  416682:	jmp    4166ff <main@@Base+0xf62f>
  416684:	and    cl,0xf
  416687:	add    cl,0xff
  41668a:	cmp    cl,0x7
  41668d:	ja     4168b1 <main@@Base+0xf7e1>
  416693:	xor    eax,eax
  416695:	movzx  ecx,cl
  416698:	lea    rsi,[rip+0x1efb5]        # 435654 <_IO_stdin_used@@Base+0x654>
  41669f:	movsxd rcx,DWORD PTR [rsi+rcx*4]
  4166a3:	add    rcx,rsi
  4166a6:	jmp    rcx
  4166a8:	movsx  rax,BYTE PTR [rbx+0x7]
  4166ad:	movsx  rcx,BYTE PTR [rbx+0x6]
  4166b2:	shl    rcx,0x8
  4166b6:	or     rax,rcx
  4166b9:	movsx  rcx,BYTE PTR [rbx+0x5]
  4166be:	shl    rcx,0x10
  4166c2:	or     rax,rcx
  4166c5:	movsx  rcx,BYTE PTR [rbx+0x4]
  4166ca:	shl    rcx,0x18
  4166ce:	or     rax,rcx
  4166d1:	movsx  rcx,BYTE PTR [rbx+0x3]
  4166d6:	shl    rcx,0x20
  4166da:	or     rax,rcx
  4166dd:	movsx  rcx,BYTE PTR [rbx+0x2]
  4166e2:	shl    rcx,0x28
  4166e6:	or     rax,rcx
  4166e9:	movsx  rcx,BYTE PTR [rbx+0x1]
  4166ee:	shl    rcx,0x30
  4166f2:	or     rax,rcx
  4166f5:	movzx  ecx,BYTE PTR [rbx]
  4166f8:	shl    rcx,0x38
  4166fc:	or     rcx,rax
  4166ff:	movabs rax,0x496e506172656e74
  416709:	cmp    rcx,rax
  41670c:	jne    416728 <main@@Base+0xf658>
  41670e:	lea    rax,[rbx+0x8]
  416712:	mov    rsi,rdx
  416715:	sub    rsi,rax
  416718:	cmp    rsi,0x8
  41671c:	jb     416759 <main@@Base+0xf689>
  41671e:	movbe  rax,QWORD PTR [rax]
  416723:	jmp    4167d8 <main@@Base+0xf708>
  416728:	shr    rcx,0x20
  41672c:	cmp    rcx,0x4e4f4e45
  416733:	jne    4168b1 <main@@Base+0xf7e1>
  416739:	mov    ecx,0x4
  41673e:	mov    rsi,rbx
  416741:	mov    r8,r9
  416744:	call   425b40 <flatcc_json_parser_match_constant@@Base>
  416749:	cmp    rax,rbx
  41674c:	je     4168b1 <main@@Base+0xf7e1>
  416752:	xor    ecx,ecx
  416754:	jmp    4168a4 <main@@Base+0xf7d4>
  416759:	and    sil,0xf
  41675d:	add    sil,0xff
  416761:	cmp    sil,0x7
  416765:	ja     4168b1 <main@@Base+0xf7e1>
  41676b:	xor    ecx,ecx
  41676d:	movzx  esi,sil
  416771:	lea    r8,[rip+0x1eefc]        # 435674 <_IO_stdin_used@@Base+0x674>
  416778:	movsxd rsi,DWORD PTR [r8+rsi*4]
  41677c:	add    rsi,r8
  41677f:	jmp    rsi
  416781:	movsx  rcx,BYTE PTR [rbx+0xf]
  416786:	movsx  rsi,BYTE PTR [rbx+0xe]
  41678b:	shl    rsi,0x8
  41678f:	or     rcx,rsi
  416792:	movsx  rsi,BYTE PTR [rbx+0xd]
  416797:	shl    rsi,0x10
  41679b:	or     rcx,rsi
  41679e:	movsx  rsi,BYTE PTR [rbx+0xc]
  4167a3:	shl    rsi,0x18
  4167a7:	or     rcx,rsi
  4167aa:	movsx  rsi,BYTE PTR [rbx+0xb]
  4167af:	shl    rsi,0x20
  4167b3:	or     rcx,rsi
  4167b6:	movsx  rsi,BYTE PTR [rbx+0xa]
  4167bb:	shl    rsi,0x28
  4167bf:	or     rcx,rsi
  4167c2:	movsx  rsi,BYTE PTR [rbx+0x9]
  4167c7:	shl    rsi,0x30
  4167cb:	or     rcx,rsi
  4167ce:	movzx  eax,BYTE PTR [rax]
  4167d1:	shl    rax,0x38
  4167d5:	or     rax,rcx
  4167d8:	movabs rcx,0x4e616d6573706163
  4167e2:	cmp    rax,rcx
  4167e5:	jne    4168b1 <main@@Base+0xf7e1>
  4167eb:	lea    r12,[rbx+0x10]
  4167ef:	mov    rcx,rdx
  4167f2:	sub    rcx,r12
  4167f5:	cmp    rcx,0x8
  4167f9:	jb     416803 <main@@Base+0xf733>
  4167fb:	movbe  rcx,QWORD PTR [r12]
  416801:	jmp    416880 <main@@Base+0xf7b0>
  416803:	and    cl,0xf
  416806:	add    cl,0xff
  416809:	cmp    cl,0x7
  41680c:	ja     4168b1 <main@@Base+0xf7e1>
  416812:	xor    eax,eax
  416814:	movzx  ecx,cl
  416817:	lea    rsi,[rip+0x1ee76]        # 435694 <_IO_stdin_used@@Base+0x694>
  41681e:	movsxd rcx,DWORD PTR [rsi+rcx*4]
  416822:	add    rcx,rsi
  416825:	jmp    rcx
  416827:	movsx  rax,BYTE PTR [rbx+0x17]
  41682c:	movsx  rcx,BYTE PTR [rbx+0x16]
  416831:	shl    rcx,0x8
  416835:	or     rax,rcx
  416838:	movsx  rcx,BYTE PTR [rbx+0x15]
  41683d:	shl    rcx,0x10
  416841:	or     rax,rcx
  416844:	movsx  rcx,BYTE PTR [rbx+0x14]
  416849:	shl    rcx,0x18
  41684d:	or     rax,rcx
  416850:	movsx  rcx,BYTE PTR [rbx+0x13]
  416855:	shl    rcx,0x20
  416859:	or     rax,rcx
  41685c:	movsx  rcx,BYTE PTR [rbx+0x12]
  416861:	shl    rcx,0x28
  416865:	or     rax,rcx
  416868:	movsx  rcx,BYTE PTR [rbx+0x11]
  41686d:	shl    rcx,0x30
  416871:	or     rax,rcx
  416874:	movzx  ecx,BYTE PTR [r12]
  416879:	shl    rcx,0x38
  41687d:	or     rcx,rax
  416880:	shr    rcx,0x38
  416884:	cmp    rcx,0x65
  416888:	jne    4168b1 <main@@Base+0xf7e1>
  41688a:	mov    ecx,0x1
  41688f:	mov    rsi,r12
  416892:	mov    r8,r9
  416895:	call   425b40 <flatcc_json_parser_match_constant@@Base>
  41689a:	cmp    rax,r12
  41689d:	je     4168b1 <main@@Base+0xf7e1>
  41689f:	mov    ecx,0x1
  4168a4:	mov    rbx,rax
  4168a7:	mov    QWORD PTR [r15],rcx
  4168aa:	mov    DWORD PTR [r14],0x0
  4168b1:	mov    rax,rbx
  4168b4:	add    rsp,0x8
  4168b8:	pop    rbx
  4168b9:	pop    r12
  4168bb:	pop    r14
  4168bd:	pop    r15
  4168bf:	ret    
  4168c0:	push   r15
  4168c2:	push   r14
  4168c4:	push   rbx
  4168c5:	mov    r15,r8
  4168c8:	mov    r14,rcx
  4168cb:	mov    rbx,rsi
  4168ce:	mov    rcx,rdx
  4168d1:	sub    rcx,rsi
  4168d4:	cmp    rcx,0x8
  4168d8:	jb     4168e1 <main@@Base+0xf811>
  4168da:	movbe  rcx,QWORD PTR [rbx]
  4168df:	jmp    41695c <main@@Base+0xf88c>
  4168e1:	and    cl,0xf
  4168e4:	add    cl,0xff
  4168e7:	cmp    cl,0x7
  4168ea:	ja     416a1b <main@@Base+0xf94b>
  4168f0:	xor    eax,eax
  4168f2:	movzx  ecx,cl
  4168f5:	lea    rsi,[rip+0x1edb8]        # 4356b4 <_IO_stdin_used@@Base+0x6b4>
  4168fc:	movsxd rcx,DWORD PTR [rsi+rcx*4]
  416900:	add    rcx,rsi
  416903:	jmp    rcx
  416905:	movsx  rax,BYTE PTR [rbx+0x7]
  41690a:	movsx  rcx,BYTE PTR [rbx+0x6]
  41690f:	shl    rcx,0x8
  416913:	or     rax,rcx
  416916:	movsx  rcx,BYTE PTR [rbx+0x5]
  41691b:	shl    rcx,0x10
  41691f:	or     rax,rcx
  416922:	movsx  rcx,BYTE PTR [rbx+0x4]
  416927:	shl    rcx,0x18
  41692b:	or     rax,rcx
  41692e:	movsx  rcx,BYTE PTR [rbx+0x3]
  416933:	shl    rcx,0x20
  416937:	or     rax,rcx
  41693a:	movsx  rcx,BYTE PTR [rbx+0x2]
  41693f:	shl    rcx,0x28
  416943:	or     rax,rcx
  416946:	movsx  rcx,BYTE PTR [rbx+0x1]
  41694b:	shl    rcx,0x30
  41694f:	or     rax,rcx
  416952:	movzx  ecx,BYTE PTR [rbx]
  416955:	shl    rcx,0x38
  416959:	or     rcx,rax
  41695c:	mov    rax,rcx
  41695f:	shr    rax,0x21
  416963:	cmp    rax,0x3432bc18
  416969:	ja     41699e <main@@Base+0xf8ce>
  41696b:	shr    rcx,0x20
  41696f:	cmp    rcx,0x68657831
  416976:	jne    416a1b <main@@Base+0xf94b>
  41697c:	mov    ecx,0x4
  416981:	mov    rsi,rbx
  416984:	mov    r8,r9
  416987:	call   425b40 <flatcc_json_parser_match_constant@@Base>
  41698c:	cmp    rax,rbx
  41698f:	je     416a1b <main@@Base+0xf94b>
  416995:	mov    QWORD PTR [r15],0x3
  41699c:	jmp    416a11 <main@@Base+0xf941>
  41699e:	mov    rax,rcx
  4169a1:	shr    rax,0x10
  4169a5:	movabs rsi,0x6865786e6567
  4169af:	cmp    rax,rsi
  4169b2:	jne    4169d9 <main@@Base+0xf909>
  4169b4:	mov    ecx,0x6
  4169b9:	mov    rsi,rbx
  4169bc:	mov    r8,r9
  4169bf:	call   425b40 <flatcc_json_parser_match_constant@@Base>
  4169c4:	cmp    rax,rbx
  4169c7:	je     416a1b <main@@Base+0xf94b>
  4169c9:	mov    QWORD PTR [r15],0xfffffffffffffffe
  4169d0:	mov    DWORD PTR [r14],0x1
  4169d7:	jmp    416a18 <main@@Base+0xf948>
  4169d9:	movabs rax,0x6865783200000000
  4169e3:	movabs rsi,0xffffffff00000000
  4169ed:	and    rcx,rsi
  4169f0:	cmp    rcx,rax
  4169f3:	jne    416a1b <main@@Base+0xf94b>
  4169f5:	mov    ecx,0x4
  4169fa:	mov    rsi,rbx
  4169fd:	mov    r8,r9
  416a00:	call   425b40 <flatcc_json_parser_match_constant@@Base>
  416a05:	cmp    rax,rbx
  416a08:	je     416a1b <main@@Base+0xf94b>
  416a0a:	mov    QWORD PTR [r15],0x7eafbeaf
  416a11:	mov    DWORD PTR [r14],0x0
  416a18:	mov    rbx,rax
  416a1b:	mov    rax,rbx
  416a1e:	pop    rbx
  416a1f:	pop    r14
  416a21:	pop    r15
  416a23:	ret    
  416a24:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416a2e:	xchg   ax,ax
  416a30:	push   r15
  416a32:	push   r14
  416a34:	push   rbx
  416a35:	mov    r15,r8
  416a38:	mov    r14,rcx
  416a3b:	mov    rbx,rsi
  416a3e:	mov    rcx,rdx
  416a41:	sub    rcx,rsi
  416a44:	cmp    rcx,0x8
  416a48:	jb     416a51 <main@@Base+0xf981>
  416a4a:	movbe  rcx,QWORD PTR [rbx]
  416a4f:	jmp    416acc <main@@Base+0xf9fc>
  416a51:	and    cl,0xf
  416a54:	add    cl,0xff
  416a57:	cmp    cl,0x7
  416a5a:	ja     416bd2 <main@@Base+0xfb02>
  416a60:	xor    eax,eax
  416a62:	movzx  ecx,cl
  416a65:	lea    rsi,[rip+0x1ec68]        # 4356d4 <_IO_stdin_used@@Base+0x6d4>
  416a6c:	movsxd rcx,DWORD PTR [rsi+rcx*4]
  416a70:	add    rcx,rsi
  416a73:	jmp    rcx
  416a75:	movsx  rax,BYTE PTR [rbx+0x7]
  416a7a:	movsx  rcx,BYTE PTR [rbx+0x6]
  416a7f:	shl    rcx,0x8
  416a83:	or     rax,rcx
  416a86:	movsx  rcx,BYTE PTR [rbx+0x5]
  416a8b:	shl    rcx,0x10
  416a8f:	or     rax,rcx
  416a92:	movsx  rcx,BYTE PTR [rbx+0x4]
  416a97:	shl    rcx,0x18
  416a9b:	or     rax,rcx
  416a9e:	movsx  rcx,BYTE PTR [rbx+0x3]
  416aa3:	shl    rcx,0x20
  416aa7:	or     rax,rcx
  416aaa:	movsx  rcx,BYTE PTR [rbx+0x2]
  416aaf:	shl    rcx,0x28
  416ab3:	or     rax,rcx
  416ab6:	movsx  rcx,BYTE PTR [rbx+0x1]
  416abb:	shl    rcx,0x30
  416abf:	or     rax,rcx
  416ac2:	movzx  ecx,BYTE PTR [rbx]
  416ac5:	shl    rcx,0x38
  416ac9:	or     rcx,rax
  416acc:	mov    rax,rcx
  416acf:	shr    rax,0x21
  416ad3:	cmp    rax,0x34b73a18
  416ad9:	ja     416b18 <main@@Base+0xfa48>
  416adb:	shr    rcx,0x20
  416adf:	cmp    rcx,0x696e7431
  416ae6:	jne    416bd2 <main@@Base+0xfb02>
  416aec:	mov    ecx,0x4
  416af1:	mov    rsi,rbx
  416af4:	mov    r8,r9
  416af7:	call   425b40 <flatcc_json_parser_match_constant@@Base>
  416afc:	cmp    rax,rbx
  416aff:	je     416bd2 <main@@Base+0xfb02>
  416b05:	mov    QWORD PTR [r15],0x2
  416b0c:	mov    DWORD PTR [r14],0x0
  416b13:	jmp    416bcf <main@@Base+0xfaff>
  416b18:	movabs r8,0x696e746e65670000
  416b22:	cmp    rcx,r8
  416b25:	jae    416b6c <main@@Base+0xfa9c>
  416b27:	movabs rax,0x696e743200000000
  416b31:	movabs rsi,0xffffffff00000000
  416b3b:	and    rcx,rsi
  416b3e:	cmp    rcx,rax
  416b41:	jne    416bd2 <main@@Base+0xfb02>
  416b47:	mov    ecx,0x4
  416b4c:	mov    rsi,rbx
  416b4f:	mov    r8,r9
  416b52:	call   425b40 <flatcc_json_parser_match_constant@@Base>
  416b57:	cmp    rax,rbx
  416b5a:	je     416bd2 <main@@Base+0xfb02>
  416b5c:	mov    QWORD PTR [r15],0x2a
  416b63:	mov    DWORD PTR [r14],0x0
  416b6a:	jmp    416bcf <main@@Base+0xfaff>
  416b6c:	mov    rsi,rcx
  416b6f:	and    rsi,0xffffffffffffff00
  416b76:	lea    rax,[r8+0x3200]
  416b7d:	cmp    rsi,rax
  416b80:	jne    416ba0 <main@@Base+0xfad0>
  416b82:	mov    ecx,0x7
  416b87:	mov    rsi,rbx
  416b8a:	mov    r8,r9
  416b8d:	call   425b40 <flatcc_json_parser_match_constant@@Base>
  416b92:	cmp    rax,rbx
  416b95:	je     416bd2 <main@@Base+0xfb02>
  416b97:	mov    QWORD PTR [r15],0xffffffffffffffff
  416b9e:	jmp    416bc8 <main@@Base+0xfaf8>
  416ba0:	and    rcx,0xffffffffffff0000
  416ba7:	cmp    rcx,r8
  416baa:	jne    416bd2 <main@@Base+0xfb02>
  416bac:	mov    ecx,0x6
  416bb1:	mov    rsi,rbx
  416bb4:	mov    r8,r9
  416bb7:	call   425b40 <flatcc_json_parser_match_constant@@Base>
  416bbc:	cmp    rax,rbx
  416bbf:	je     416bd2 <main@@Base+0xfb02>
  416bc1:	mov    QWORD PTR [r15],0xfffffffffffffffe
  416bc8:	mov    DWORD PTR [r14],0x1
  416bcf:	mov    rbx,rax
  416bd2:	mov    rax,rbx
  416bd5:	pop    rbx
  416bd6:	pop    r14
  416bd8:	pop    r15
  416bda:	ret    
  416bdb:	nop    DWORD PTR [rax+rax*1+0x0]
  416be0:	push   r15
  416be2:	push   r14
  416be4:	push   rbx
  416be5:	mov    r15,r8
  416be8:	mov    r14,rcx
  416beb:	mov    rbx,rsi
  416bee:	mov    rcx,rdx
  416bf1:	sub    rcx,rsi
  416bf4:	cmp    rcx,0x8
  416bf8:	jb     416c01 <main@@Base+0xfb31>
  416bfa:	movbe  rcx,QWORD PTR [rbx]
  416bff:	jmp    416c7c <main@@Base+0xfbac>
  416c01:	and    cl,0xf
  416c04:	add    cl,0xff
  416c07:	cmp    cl,0x7
  416c0a:	ja     416d2c <main@@Base+0xfc5c>
  416c10:	xor    eax,eax
  416c12:	movzx  ecx,cl
  416c15:	lea    rsi,[rip+0x1ead8]        # 4356f4 <_IO_stdin_used@@Base+0x6f4>
  416c1c:	movsxd rcx,DWORD PTR [rsi+rcx*4]
  416c20:	add    rcx,rsi
  416c23:	jmp    rcx
  416c25:	movsx  rax,BYTE PTR [rbx+0x7]
  416c2a:	movsx  rcx,BYTE PTR [rbx+0x6]
  416c2f:	shl    rcx,0x8
  416c33:	or     rax,rcx
  416c36:	movsx  rcx,BYTE PTR [rbx+0x5]
  416c3b:	shl    rcx,0x10
  416c3f:	or     rax,rcx
  416c42:	movsx  rcx,BYTE PTR [rbx+0x4]
  416c47:	shl    rcx,0x18
  416c4b:	or     rax,rcx
  416c4e:	movsx  rcx,BYTE PTR [rbx+0x3]
  416c53:	shl    rcx,0x20
  416c57:	or     rax,rcx
  416c5a:	movsx  rcx,BYTE PTR [rbx+0x2]
  416c5f:	shl    rcx,0x28
  416c63:	or     rax,rcx
  416c66:	movsx  rcx,BYTE PTR [rbx+0x1]
  416c6b:	shl    rcx,0x30
  416c6f:	or     rax,rcx
  416c72:	movzx  ecx,BYTE PTR [rbx]
  416c75:	shl    rcx,0x38
  416c79:	or     rcx,rax
  416c7c:	mov    rsi,rcx
  416c7f:	shr    rsi,0x21
  416c83:	movabs rax,0xffffffff00000000
  416c8d:	and    rax,rcx
  416c90:	cmp    rsi,0x3732b398
  416c97:	ja     416cca <main@@Base+0xfbfa>
  416c99:	movabs rcx,0x6e65673100000000
  416ca3:	cmp    rax,rcx
  416ca6:	jne    416d2c <main@@Base+0xfc5c>
  416cac:	mov    ecx,0x4
  416cb1:	mov    rsi,rbx
  416cb4:	mov    r8,r9
  416cb7:	call   425b40 <flatcc_json_parser_match_constant@@Base>
  416cbc:	cmp    rax,rbx
  416cbf:	je     416d2c <main@@Base+0xfc5c>
  416cc1:	mov    QWORD PTR [r15],0xfffffffffffffff4
  416cc8:	jmp    416d22 <main@@Base+0xfc52>
  416cca:	movabs rcx,0x6e65673200000000
  416cd4:	cmp    rax,rcx
  416cd7:	je     416d06 <main@@Base+0xfc36>
  416cd9:	movabs rcx,0x6e65673300000000
  416ce3:	cmp    rax,rcx
  416ce6:	jne    416d2c <main@@Base+0xfc5c>
  416ce8:	mov    ecx,0x4
  416ced:	mov    rsi,rbx
  416cf0:	mov    r8,r9
  416cf3:	call   425b40 <flatcc_json_parser_match_constant@@Base>
  416cf8:	cmp    rax,rbx
  416cfb:	je     416d2c <main@@Base+0xfc5c>
  416cfd:	mov    QWORD PTR [r15],0xfffffffffffffff6
  416d04:	jmp    416d22 <main@@Base+0xfc52>
  416d06:	mov    ecx,0x4
  416d0b:	mov    rsi,rbx
  416d0e:	mov    r8,r9
  416d11:	call   425b40 <flatcc_json_parser_match_constant@@Base>
  416d16:	cmp    rax,rbx
  416d19:	je     416d2c <main@@Base+0xfc5c>
  416d1b:	mov    QWORD PTR [r15],0xfffffffffffffff5
  416d22:	mov    DWORD PTR [r14],0x1
  416d29:	mov    rbx,rax
  416d2c:	mov    rax,rbx
  416d2f:	pop    rbx
  416d30:	pop    r14
  416d32:	pop    r15
  416d34:	ret    
  416d35:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416d3f:	nop
  416d40:	push   r15
  416d42:	push   r14
  416d44:	push   rbx
  416d45:	mov    r15,r8
  416d48:	mov    r14,rcx
  416d4b:	mov    rbx,rsi
  416d4e:	mov    rcx,rdx
  416d51:	sub    rcx,rsi
  416d54:	cmp    rcx,0x8
  416d58:	jb     416d61 <main@@Base+0xfc91>
  416d5a:	movbe  rcx,QWORD PTR [rbx]
  416d5f:	jmp    416ddc <main@@Base+0xfd0c>
  416d61:	and    cl,0xf
  416d64:	add    cl,0xff
  416d67:	cmp    cl,0x7
  416d6a:	ja     416f92 <main@@Base+0xfec2>
  416d70:	xor    eax,eax
  416d72:	movzx  ecx,cl
  416d75:	lea    rsi,[rip+0x1e998]        # 435714 <_IO_stdin_used@@Base+0x714>
  416d7c:	movsxd rcx,DWORD PTR [rsi+rcx*4]
  416d80:	add    rcx,rsi
  416d83:	jmp    rcx
  416d85:	movsx  rax,BYTE PTR [rbx+0x7]
  416d8a:	movsx  rcx,BYTE PTR [rbx+0x6]
  416d8f:	shl    rcx,0x8
  416d93:	or     rax,rcx
  416d96:	movsx  rcx,BYTE PTR [rbx+0x5]
  416d9b:	shl    rcx,0x10
  416d9f:	or     rax,rcx
  416da2:	movsx  rcx,BYTE PTR [rbx+0x4]
  416da7:	shl    rcx,0x18
  416dab:	or     rax,rcx
  416dae:	movsx  rcx,BYTE PTR [rbx+0x3]
  416db3:	shl    rcx,0x20
  416db7:	or     rax,rcx
  416dba:	movsx  rcx,BYTE PTR [rbx+0x2]
  416dbf:	shl    rcx,0x28
  416dc3:	or     rax,rcx
  416dc6:	movsx  rcx,BYTE PTR [rbx+0x1]
  416dcb:	shl    rcx,0x30
  416dcf:	or     rax,rcx
  416dd2:	movzx  ecx,BYTE PTR [rbx]
  416dd5:	shl    rcx,0x38
  416dd9:	or     rcx,rax
  416ddc:	mov    rax,rcx
  416ddf:	shr    rax,0x20
  416de3:	cmp    rax,0x4e4f4e44
  416de9:	ja     416e40 <main@@Base+0xfd70>
  416deb:	movabs r8,0x426f6f6b46616e00
  416df5:	mov    rsi,rcx
  416df8:	and    rsi,0xffffffffff000000
  416dff:	cmp    rcx,r8
  416e02:	jae    416e94 <main@@Base+0xfdc4>
  416e08:	movabs rax,0x42656c6c65000000
  416e12:	cmp    rsi,rax
  416e15:	jne    416f92 <main@@Base+0xfec2>
  416e1b:	mov    ecx,0x5
  416e20:	mov    rsi,rbx
  416e23:	mov    r8,r9
  416e26:	call   425b40 <flatcc_json_parser_match_constant@@Base>
  416e2b:	cmp    rax,rbx
  416e2e:	je     416f92 <main@@Base+0xfec2>
  416e34:	mov    QWORD PTR [r15],0x9
  416e3b:	jmp    416f88 <main@@Base+0xfeb8>
  416e40:	movabs rax,0x4f74686572000000
  416e4a:	cmp    rcx,rax
  416e4d:	jae    416ec8 <main@@Base+0xfdf8>
  416e4f:	movabs rax,0x4e4f4e4500000000
  416e59:	movabs rsi,0xffffffff00000000
  416e63:	and    rcx,rsi
  416e66:	cmp    rcx,rax
  416e69:	jne    416f92 <main@@Base+0xfec2>
  416e6f:	mov    ecx,0x4
  416e74:	mov    rsi,rbx
  416e77:	mov    r8,r9
  416e7a:	call   425b40 <flatcc_json_parser_match_constant@@Base>
  416e7f:	cmp    rax,rbx
  416e82:	je     416f92 <main@@Base+0xfec2>
  416e88:	mov    QWORD PTR [r15],0x0
  416e8f:	jmp    416f88 <main@@Base+0xfeb8>
  416e94:	movabs rax,0x4d754c616e000000
  416e9e:	cmp    rsi,rax
  416ea1:	jne    416f09 <main@@Base+0xfe39>
  416ea3:	mov    ecx,0x5
  416ea8:	mov    rsi,rbx
  416eab:	mov    r8,r9
  416eae:	call   425b40 <flatcc_json_parser_match_constant@@Base>
  416eb3:	cmp    rax,rbx
  416eb6:	je     416f92 <main@@Base+0xfec2>
  416ebc:	mov    QWORD PTR [r15],0x2
  416ec3:	jmp    416f88 <main@@Base+0xfeb8>
  416ec8:	movabs r8,0x526170756e7a656c
  416ed2:	cmp    rcx,r8
  416ed5:	jae    416f33 <main@@Base+0xfe63>
  416ed7:	and    rcx,0xffffffffff000000
  416ede:	cmp    rcx,rax
  416ee1:	jne    416f92 <main@@Base+0xfec2>
  416ee7:	mov    ecx,0x5
  416eec:	mov    rsi,rbx
  416eef:	mov    r8,r9
  416ef2:	call   425b40 <flatcc_json_parser_match_constant@@Base>
  416ef7:	cmp    rax,rbx
  416efa:	je     416f92 <main@@Base+0xfec2>
  416f00:	mov    QWORD PTR [r15],0xb
  416f07:	jmp    416f88 <main@@Base+0xfeb8>
  416f09:	and    rcx,0xffffffffffffff00
  416f10:	cmp    rcx,r8
  416f13:	jne    416f92 <main@@Base+0xfec2>
  416f15:	mov    ecx,0x7
  416f1a:	mov    rsi,rbx
  416f1d:	mov    r8,r9
  416f20:	call   425b40 <flatcc_json_parser_match_constant@@Base>
  416f25:	cmp    rax,rbx
  416f28:	je     416f92 <main@@Base+0xfec2>
  416f2a:	mov    QWORD PTR [r15],0xa
  416f31:	jmp    416f88 <main@@Base+0xfeb8>
  416f33:	mov    rax,rcx
  416f36:	shr    rax,0x10
  416f3a:	movabs rsi,0x556e75736564
  416f44:	cmp    rax,rsi
  416f47:	jne    416f67 <main@@Base+0xfe97>
  416f49:	mov    ecx,0x6
  416f4e:	mov    rsi,rbx
  416f51:	mov    r8,r9
  416f54:	call   425b40 <flatcc_json_parser_match_constant@@Base>
  416f59:	cmp    rax,rbx
  416f5c:	je     416f92 <main@@Base+0xfec2>
  416f5e:	mov    QWORD PTR [r15],0xff
  416f65:	jmp    416f88 <main@@Base+0xfeb8>
  416f67:	cmp    rcx,r8
  416f6a:	jne    416f92 <main@@Base+0xfec2>
  416f6c:	mov    ecx,0x8
  416f71:	mov    rsi,rbx
  416f74:	mov    r8,r9
  416f77:	call   425b40 <flatcc_json_parser_match_constant@@Base>
  416f7c:	cmp    rax,rbx
  416f7f:	je     416f92 <main@@Base+0xfec2>
  416f81:	mov    QWORD PTR [r15],0x8
  416f88:	mov    DWORD PTR [r14],0x0
  416f8f:	mov    rbx,rax
  416f92:	mov    rax,rbx
  416f95:	pop    rbx
  416f96:	pop    r14
  416f98:	pop    r15
  416f9a:	ret    
  416f9b:	nop    DWORD PTR [rax+rax*1+0x0]
  416fa0:	push   rbp
  416fa1:	push   r15
  416fa3:	push   r14
  416fa5:	push   r13
  416fa7:	push   r12
  416fa9:	push   rbx
  416faa:	sub    rsp,0x28
  416fae:	mov    rbp,rcx
  416fb1:	mov    r14,rdx
  416fb4:	mov    rbx,rsi
  416fb7:	mov    r13,rdi
  416fba:	mov    DWORD PTR [rcx],0x0
  416fc0:	mov    rdi,QWORD PTR [rdi]
  416fc3:	mov    esi,0x4
  416fc8:	call   420ba0 <flatcc_builder_start_table@@Base>
  416fcd:	test   eax,eax
  416fcf:	je     416ff9 <main@@Base+0xff29>
  416fd1:	mov    ecx,0x21
  416fd6:	mov    rdi,r13
  416fd9:	mov    rsi,rbx
  416fdc:	mov    rdx,r14
  416fdf:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  416fe4:	mov    rbx,rax
  416fe7:	mov    rax,rbx
  416fea:	add    rsp,0x28
  416fee:	pop    rbx
  416fef:	pop    r12
  416ff1:	pop    r13
  416ff3:	pop    r14
  416ff5:	pop    r15
  416ff7:	pop    rbp
  416ff8:	ret    
  416ff9:	lea    r8,[rsp+0x8]
  416ffe:	mov    ecx,0x1
  417003:	mov    rdi,r13
  417006:	mov    rsi,rbx
  417009:	mov    rdx,r14
  41700c:	call   427ae0 <flatcc_json_parser_prepare_unions@@Base>
  417011:	cmp    rax,r14
  417014:	je     416fd1 <main@@Base+0xff01>
  417016:	cmp    rbx,r14
  417019:	je     417046 <main@@Base+0xff76>
  41701b:	cmp    BYTE PTR [rbx],0x7b
  41701e:	jne    417046 <main@@Base+0xff76>
  417020:	lea    rcx,[rbx+0x1]
  417024:	mov    rax,r14
  417027:	sub    rax,rcx
  41702a:	cmp    rax,0x2
  41702e:	jl     41706c <main@@Base+0xff9c>
  417030:	cmp    BYTE PTR [rcx],0x20
  417033:	jg     41707d <main@@Base+0xffad>
  417035:	jne    41706c <main@@Base+0xff9c>
  417037:	cmp    BYTE PTR [rbx+0x2],0x20
  41703b:	jle    41706c <main@@Base+0xff9c>
  41703d:	add    rbx,0x2
  417041:	mov    rcx,rbx
  417044:	jmp    41707d <main@@Base+0xffad>
  417046:	mov    ecx,0x15
  41704b:	mov    rdi,r13
  41704e:	mov    rsi,rbx
  417051:	mov    rdx,r14
  417054:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  417059:	cmp    DWORD PTR [r13+0x20],0x0
  41705e:	je     417911 <main@@Base+0x10841>
  417064:	mov    rbx,rax
  417067:	jmp    416fd1 <main@@Base+0xff01>
  41706c:	mov    rdi,r13
  41706f:	mov    rsi,rcx
  417072:	mov    rdx,r14
  417075:	call   425750 <flatcc_json_parser_space_ext@@Base>
  41707a:	mov    rcx,rax
  41707d:	mov    rsi,r14
  417080:	cmp    rcx,r14
  417083:	je     4170c9 <main@@Base+0xfff9>
  417085:	cmp    BYTE PTR [rcx],0x7d
  417088:	jne    4170c6 <main@@Base+0xfff6>
  41708a:	lea    rax,[rcx+0x1]
  41708e:	mov    rdx,r14
  417091:	sub    rdx,rax
  417094:	cmp    rdx,0x2
  417098:	jl     4178f8 <main@@Base+0x10828>
  41709e:	cmp    BYTE PTR [rax],0x20
  4170a1:	jg     417059 <main@@Base+0xff89>
  4170a3:	jne    4178f8 <main@@Base+0x10828>
  4170a9:	cmp    BYTE PTR [rcx+0x2],0x20
  4170ad:	jle    4178f8 <main@@Base+0x10828>
  4170b3:	add    rcx,0x2
  4170b7:	mov    rax,rcx
  4170ba:	cmp    DWORD PTR [r13+0x20],0x0
  4170bf:	jne    417064 <main@@Base+0xff94>
  4170c1:	jmp    417911 <main@@Base+0x10841>
  4170c6:	mov    rsi,rcx
  4170c9:	movabs rax,0x6d616e79616e7900
  4170d3:	lea    rax,[rax+0x5f]
  4170d7:	mov    QWORD PTR [rsp+0x18],rax
  4170dc:	mov    QWORD PTR [rsp+0x10],r13
  4170e1:	mov    QWORD PTR [rsp+0x20],rbp
  4170e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4170f0:	mov    r10,r14
  4170f3:	cmp    rsi,r14
  4170f6:	je     417131 <main@@Base+0x10061>
  4170f8:	movzx  eax,BYTE PTR [rsi]
  4170fb:	cmp    al,0x2e
  4170fd:	je     417111 <main@@Base+0x10041>
  4170ff:	cmp    al,0x22
  417101:	jne    417126 <main@@Base+0x10056>
  417103:	add    rsi,0x1
  417107:	mov    DWORD PTR [r13+0x14],0x0
  41710f:	jmp    41712e <main@@Base+0x1005e>
  417111:	mov    ecx,0x5
  417116:	mov    rdi,r13
  417119:	mov    rdx,r14
  41711c:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  417121:	mov    r10,rax
  417124:	jmp    417131 <main@@Base+0x10061>
  417126:	mov    DWORD PTR [r13+0x14],0x1
  41712e:	mov    r10,rsi
  417131:	mov    r15,r14
  417134:	sub    r15,r10
  417137:	cmp    r15,0x8
  41713b:	jb     41716c <main@@Base+0x1009c>
  41713d:	movbe  r12,QWORD PTR [r10]
  417142:	cmp    r12,QWORD PTR [rsp+0x18]
  417147:	jne    417205 <main@@Base+0x10135>
  41714d:	lea    r12,[r10+0x8]
  417151:	mov    rax,r14
  417154:	sub    rax,r12
  417157:	cmp    rax,0x8
  41715b:	jb     417260 <main@@Base+0x10190>
  417161:	movbe  rcx,QWORD PTR [r12]
  417167:	jmp    4172f2 <main@@Base+0x10222>
  41716c:	mov    eax,r15d
  41716f:	and    al,0xf
  417171:	add    al,0xff
  417173:	cmp    al,0x7
  417175:	ja     4177b0 <main@@Base+0x106e0>
  41717b:	movzx  eax,al
  41717e:	lea    rcx,[rip+0x1e5af]        # 435734 <_IO_stdin_used@@Base+0x734>
  417185:	movsxd rbx,DWORD PTR [rcx+rax*4]
  417189:	add    rbx,rcx
  41718c:	xor    r8d,r8d
  41718f:	xor    eax,eax
  417191:	xor    ecx,ecx
  417193:	xor    edx,edx
  417195:	xor    edi,edi
  417197:	xor    ebp,ebp
  417199:	xor    esi,esi
  41719b:	jmp    rbx
  41719d:	movsx  r8,BYTE PTR [r10+0x7]
  4171a2:	movsx  rax,BYTE PTR [r10+0x6]
  4171a7:	shl    rax,0x8
  4171ab:	or     rax,r8
  4171ae:	movsx  rcx,BYTE PTR [r10+0x5]
  4171b3:	shl    rcx,0x10
  4171b7:	or     rcx,rax
  4171ba:	movsx  rdx,BYTE PTR [r10+0x4]
  4171bf:	shl    rdx,0x18
  4171c3:	or     rdx,rcx
  4171c6:	movsx  rdi,BYTE PTR [r10+0x3]
  4171cb:	shl    rdi,0x20
  4171cf:	or     rdi,rdx
  4171d2:	movsx  rbp,BYTE PTR [r10+0x2]
  4171d7:	shl    rbp,0x28
  4171db:	or     rbp,rdi
  4171de:	movsx  rsi,BYTE PTR [r10+0x1]
  4171e3:	shl    rsi,0x30
  4171e7:	or     rsi,rbp
  4171ea:	movzx  r12d,BYTE PTR [r10]
  4171ee:	shl    r12,0x38
  4171f2:	or     r12,rsi
  4171f5:	mov    r13,QWORD PTR [rsp+0x10]
  4171fa:	cmp    r12,QWORD PTR [rsp+0x18]
  4171ff:	je     41714d <main@@Base+0x1007d>
  417205:	mov    rax,r12
  417208:	and    rax,0xffffffffffffff00
  41720e:	movabs rcx,0x6d616e79616e7900
  417218:	cmp    rax,rcx
  41721b:	jne    4174d4 <main@@Base+0x10404>
  417221:	mov    rax,r10
  417224:	cmp    r15,0x8
  417228:	jl     41749c <main@@Base+0x103cc>
  41722e:	cmp    DWORD PTR [r13+0x14],0x0
  417233:	movzx  ecx,BYTE PTR [r10+0x7]
  417238:	je     417333 <main@@Base+0x10263>
  41723e:	cmp    cl,0x21
  417241:	jl     41724f <main@@Base+0x1017f>
  417243:	mov    rax,r10
  417246:	cmp    cl,0x3a
  417249:	jne    41749c <main@@Base+0x103cc>
  41724f:	lea    rsi,[r10+0x7]
  417253:	mov    DWORD PTR [r13+0x14],0x0
  41725b:	jmp    417343 <main@@Base+0x10273>
  417260:	mov    ecx,eax
  417262:	and    cl,0xf
  417265:	add    cl,0xff
  417268:	cmp    cl,0x7
  41726b:	ja     417417 <main@@Base+0x10347>
  417271:	movzx  ecx,cl
  417274:	lea    rdx,[rip+0x1e4d9]        # 435754 <_IO_stdin_used@@Base+0x754>
  41727b:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  41727f:	add    rcx,rdx
  417282:	xor    r8d,r8d
  417285:	xor    r9d,r9d
  417288:	xor    edx,edx
  41728a:	xor    esi,esi
  41728c:	xor    edi,edi
  41728e:	xor    ebp,ebp
  417290:	xor    ebx,ebx
  417292:	jmp    rcx
  417294:	movsx  r8,BYTE PTR [r10+0xf]
  417299:	movsx  r9,BYTE PTR [r10+0xe]
  41729e:	shl    r9,0x8
  4172a2:	or     r9,r8
  4172a5:	movsx  rdx,BYTE PTR [r10+0xd]
  4172aa:	shl    rdx,0x10
  4172ae:	or     rdx,r9
  4172b1:	movsx  rsi,BYTE PTR [r10+0xc]
  4172b6:	shl    rsi,0x18
  4172ba:	or     rsi,rdx
  4172bd:	movsx  rdi,BYTE PTR [r10+0xb]
  4172c2:	shl    rdi,0x20
  4172c6:	or     rdi,rsi
  4172c9:	movsx  rbp,BYTE PTR [r10+0xa]
  4172ce:	shl    rbp,0x28
  4172d2:	or     rbp,rdi
  4172d5:	movsx  rbx,BYTE PTR [r10+0x9]
  4172da:	shl    rbx,0x30
  4172de:	or     rbx,rbp
  4172e1:	movzx  ecx,BYTE PTR [r12]
  4172e6:	shl    rcx,0x38
  4172ea:	or     rcx,rbx
  4172ed:	mov    r13,QWORD PTR [rsp+0x10]
  4172f2:	shr    rcx,0x20
  4172f6:	cmp    rcx,0x74797065
  4172fd:	jne    417417 <main@@Base+0x10347>
  417303:	cmp    rax,0x5
  417307:	jl     417417 <main@@Base+0x10347>
  41730d:	cmp    DWORD PTR [r13+0x14],0x0
  417312:	movzx  eax,BYTE PTR [r10+0xc]
  417317:	je     41736d <main@@Base+0x1029d>
  417319:	cmp    al,0x21
  41731b:	jl     417325 <main@@Base+0x10255>
  41731d:	cmp    al,0x3a
  41731f:	jne    417417 <main@@Base+0x10347>
  417325:	add    r10,0xc
  417329:	mov    DWORD PTR [r13+0x14],0x0
  417331:	jmp    417379 <main@@Base+0x102a9>
  417333:	mov    rax,r10
  417336:	cmp    cl,0x22
  417339:	jne    41749c <main@@Base+0x103cc>
  41733f:	lea    rsi,[r10+0x8]
  417343:	mov    rax,r14
  417346:	sub    rax,rsi
  417349:	cmp    rax,0x2
  41734d:	jl     417438 <main@@Base+0x10368>
  417353:	cmp    BYTE PTR [rsi],0x20
  417356:	jle    417422 <main@@Base+0x10352>
  41735c:	mov    rbx,r10
  41735f:	cmp    rsi,r14
  417362:	jne    41744e <main@@Base+0x1037e>
  417368:	jmp    417479 <main@@Base+0x103a9>
  41736d:	cmp    al,0x22
  41736f:	jne    417417 <main@@Base+0x10347>
  417375:	add    r10,0xd
  417379:	mov    rax,r14
  41737c:	sub    rax,r10
  41737f:	cmp    rax,0x2
  417383:	jl     41739f <main@@Base+0x102cf>
  417385:	cmp    BYTE PTR [r10],0x20
  417389:	jg     4173b0 <main@@Base+0x102e0>
  41738b:	jne    41739f <main@@Base+0x102cf>
  41738d:	cmp    BYTE PTR [r10+0x1],0x20
  417392:	jle    41739f <main@@Base+0x102cf>
  417394:	add    r10,0x1
  417398:	cmp    r10,r14
  41739b:	jne    4173b5 <main@@Base+0x102e5>
  41739d:	jmp    4173fb <main@@Base+0x1032b>
  41739f:	mov    rdi,r13
  4173a2:	mov    rsi,r10
  4173a5:	mov    rdx,r14
  4173a8:	call   425750 <flatcc_json_parser_space_ext@@Base>
  4173ad:	mov    r10,rax
  4173b0:	cmp    r10,r14
  4173b3:	je     4173fb <main@@Base+0x1032b>
  4173b5:	cmp    BYTE PTR [r10],0x3a
  4173b9:	jne    4173fb <main@@Base+0x1032b>
  4173bb:	lea    rax,[r10+0x1]
  4173bf:	mov    rcx,r14
  4173c2:	sub    rcx,rax
  4173c5:	cmp    rcx,0x2
  4173c9:	jl     4175e5 <main@@Base+0x10515>
  4173cf:	cmp    BYTE PTR [rax],0x20
  4173d2:	jg     4175f3 <main@@Base+0x10523>
  4173d8:	jne    4175e5 <main@@Base+0x10515>
  4173de:	cmp    BYTE PTR [r10+0x2],0x20
  4173e3:	jle    4175e5 <main@@Base+0x10515>
  4173e9:	add    r10,0x2
  4173ed:	mov    rax,r10
  4173f0:	cmp    r12,rax
  4173f3:	jne    4175fc <main@@Base+0x1052c>
  4173f9:	jmp    417417 <main@@Base+0x10347>
  4173fb:	mov    ecx,0x4
  417400:	mov    rdi,r13
  417403:	mov    rsi,r10
  417406:	mov    rdx,r14
  417409:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  41740e:	cmp    r12,rax
  417411:	jne    4175fc <main@@Base+0x1052c>
  417417:	mov    rdi,r13
  41741a:	mov    rsi,r12
  41741d:	jmp    4177b6 <main@@Base+0x106e6>
  417422:	jne    417438 <main@@Base+0x10368>
  417424:	cmp    BYTE PTR [rsi+0x1],0x20
  417428:	jle    417438 <main@@Base+0x10368>
  41742a:	mov    rbx,r10
  41742d:	add    rsi,0x1
  417431:	cmp    rsi,r14
  417434:	jne    41744e <main@@Base+0x1037e>
  417436:	jmp    417479 <main@@Base+0x103a9>
  417438:	mov    rbx,r10
  41743b:	mov    rdi,r13
  41743e:	mov    rdx,r14
  417441:	call   425750 <flatcc_json_parser_space_ext@@Base>
  417446:	mov    rsi,rax
  417449:	cmp    rsi,r14
  41744c:	je     417479 <main@@Base+0x103a9>
  41744e:	cmp    BYTE PTR [rsi],0x3a
  417451:	jne    417479 <main@@Base+0x103a9>
  417453:	lea    rax,[rsi+0x1]
  417457:	mov    rcx,r14
  41745a:	sub    rcx,rax
  41745d:	cmp    rcx,0x2
  417461:	jl     41748b <main@@Base+0x103bb>
  417463:	cmp    BYTE PTR [rax],0x20
  417466:	jg     417499 <main@@Base+0x103c9>
  417468:	jne    41748b <main@@Base+0x103bb>
  41746a:	cmp    BYTE PTR [rsi+0x2],0x20
  41746e:	jle    41748b <main@@Base+0x103bb>
  417470:	add    rsi,0x2
  417474:	mov    rax,rsi
  417477:	jmp    417499 <main@@Base+0x103c9>
  417479:	mov    ecx,0x4
  41747e:	mov    rdi,r13
  417481:	mov    rdx,r14
  417484:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  417489:	jmp    417499 <main@@Base+0x103c9>
  41748b:	mov    rdi,r13
  41748e:	mov    rsi,rax
  417491:	mov    rdx,r14
  417494:	call   425750 <flatcc_json_parser_space_ext@@Base>
  417499:	mov    r10,rbx
  41749c:	cmp    r10,rax
  41749f:	je     4174d4 <main@@Base+0x10404>
  4174a1:	mov    r9,QWORD PTR [rsp+0x8]
  4174a6:	sub    rsp,0x8
  4174aa:	mov    ecx,0x0
  4174af:	mov    r8d,0x3
  4174b5:	mov    rdi,r13
  4174b8:	mov    rsi,rax
  4174bb:	mov    rdx,r14
  4174be:	lea    rax,[rip+0xffffffffffffd36b]        # 414830 <main@@Base+0xd760>
  4174c5:	push   rax
  4174c6:	call   428170 <flatcc_json_parser_union_vector@@Base>
  4174cb:	add    rsp,0x10
  4174cf:	jmp    4177be <main@@Base+0x106ee>
  4174d4:	mov    rax,r12
  4174d7:	shr    rax,0x10
  4174db:	movabs rcx,0x707265666978
  4174e5:	cmp    rax,rcx
  4174e8:	jne    417522 <main@@Base+0x10452>
  4174ea:	mov    rax,r10
  4174ed:	cmp    r15,0x7
  4174f1:	jl     4176b9 <main@@Base+0x105e9>
  4174f7:	cmp    DWORD PTR [r13+0x14],0x0
  4174fc:	movzx  ecx,BYTE PTR [r10+0x6]
  417501:	je     417571 <main@@Base+0x104a1>
  417503:	cmp    cl,0x21
  417506:	jl     417514 <main@@Base+0x10444>
  417508:	mov    rax,r10
  41750b:	cmp    cl,0x3a
  41750e:	jne    4176b9 <main@@Base+0x105e9>
  417514:	lea    rsi,[r10+0x6]
  417518:	mov    DWORD PTR [r13+0x14],0x0
  417520:	jmp    417581 <main@@Base+0x104b1>
  417522:	shr    r12,0x18
  417526:	movabs rax,0x6d6f766965
  417530:	cmp    r12,rax
  417533:	jne    4177b0 <main@@Base+0x106e0>
  417539:	mov    rax,r10
  41753c:	cmp    r15,0x6
  417540:	jl     41776b <main@@Base+0x1069b>
  417546:	cmp    DWORD PTR [r13+0x14],0x0
  41754b:	movzx  ecx,BYTE PTR [r10+0x5]
  417550:	je     4175ab <main@@Base+0x104db>
  417552:	cmp    cl,0x21
  417555:	jl     417563 <main@@Base+0x10493>
  417557:	mov    rax,r10
  41755a:	cmp    cl,0x3a
  41755d:	jne    41776b <main@@Base+0x1069b>
  417563:	lea    rsi,[r10+0x5]
  417567:	mov    DWORD PTR [r13+0x14],0x0
  41756f:	jmp    4175bb <main@@Base+0x104eb>
  417571:	mov    rax,r10
  417574:	cmp    cl,0x22
  417577:	jne    4176b9 <main@@Base+0x105e9>
  41757d:	lea    rsi,[r10+0x7]
  417581:	mov    rax,r14
  417584:	sub    rax,rsi
  417587:	cmp    rax,0x2
  41758b:	jl     417655 <main@@Base+0x10585>
  417591:	cmp    BYTE PTR [rsi],0x20
  417594:	jle    41763f <main@@Base+0x1056f>
  41759a:	mov    rbx,r10
  41759d:	cmp    rsi,r14
  4175a0:	jne    41766b <main@@Base+0x1059b>
  4175a6:	jmp    417696 <main@@Base+0x105c6>
  4175ab:	mov    rax,r10
  4175ae:	cmp    cl,0x22
  4175b1:	jne    41776b <main@@Base+0x1069b>
  4175b7:	lea    rsi,[r10+0x6]
  4175bb:	mov    rax,r14
  4175be:	sub    rax,rsi
  4175c1:	cmp    rax,0x2
  4175c5:	jl     417707 <main@@Base+0x10637>
  4175cb:	cmp    BYTE PTR [rsi],0x20
  4175ce:	jle    4176f1 <main@@Base+0x10621>
  4175d4:	mov    rbx,r10
  4175d7:	cmp    rsi,r14
  4175da:	jne    41771d <main@@Base+0x1064d>
  4175e0:	jmp    417748 <main@@Base+0x10678>
  4175e5:	mov    rdi,r13
  4175e8:	mov    rsi,rax
  4175eb:	mov    rdx,r14
  4175ee:	call   425750 <flatcc_json_parser_space_ext@@Base>
  4175f3:	cmp    r12,rax
  4175f6:	je     417417 <main@@Base+0x10347>
  4175fc:	mov    r9,QWORD PTR [rsp+0x8]
  417601:	sub    rsp,0x8
  417605:	mov    ecx,0x0
  41760a:	mov    r8d,0x3
  417610:	mov    rdi,r13
  417613:	mov    rsi,rax
  417616:	mov    rdx,r14
  417619:	lea    rax,[rip+0x330]        # 417950 <main@@Base+0x10880>
  417620:	push   rax
  417621:	lea    rax,[rip+0xffffffffffffd208]        # 414830 <main@@Base+0xd760>
  417628:	push   rax
  417629:	lea    rax,[rip+0x2ceb0]        # 4444e0 <__data_start@@Base+0x430>
  417630:	push   rax
  417631:	call   428620 <flatcc_json_parser_union_type_vector@@Base>
  417636:	add    rsp,0x20
  41763a:	jmp    4177be <main@@Base+0x106ee>
  41763f:	jne    417655 <main@@Base+0x10585>
  417641:	cmp    BYTE PTR [rsi+0x1],0x20
  417645:	jle    417655 <main@@Base+0x10585>
  417647:	mov    rbx,r10
  41764a:	add    rsi,0x1
  41764e:	cmp    rsi,r14
  417651:	jne    41766b <main@@Base+0x1059b>
  417653:	jmp    417696 <main@@Base+0x105c6>
  417655:	mov    rbx,r10
  417658:	mov    rdi,r13
  41765b:	mov    rdx,r14
  41765e:	call   425750 <flatcc_json_parser_space_ext@@Base>
  417663:	mov    rsi,rax
  417666:	cmp    rsi,r14
  417669:	je     417696 <main@@Base+0x105c6>
  41766b:	cmp    BYTE PTR [rsi],0x3a
  41766e:	jne    417696 <main@@Base+0x105c6>
  417670:	lea    rax,[rsi+0x1]
  417674:	mov    rcx,r14
  417677:	sub    rcx,rax
  41767a:	cmp    rcx,0x2
  41767e:	jl     4176a8 <main@@Base+0x105d8>
  417680:	cmp    BYTE PTR [rax],0x20
  417683:	jg     4176b6 <main@@Base+0x105e6>
  417685:	jne    4176a8 <main@@Base+0x105d8>
  417687:	cmp    BYTE PTR [rsi+0x2],0x20
  41768b:	jle    4176a8 <main@@Base+0x105d8>
  41768d:	add    rsi,0x2
  417691:	mov    rax,rsi
  417694:	jmp    4176b6 <main@@Base+0x105e6>
  417696:	mov    ecx,0x4
  41769b:	mov    rdi,r13
  41769e:	mov    rdx,r14
  4176a1:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  4176a6:	jmp    4176b6 <main@@Base+0x105e6>
  4176a8:	mov    rdi,r13
  4176ab:	mov    rsi,rax
  4176ae:	mov    rdx,r14
  4176b1:	call   425750 <flatcc_json_parser_space_ext@@Base>
  4176b6:	mov    r10,rbx
  4176b9:	cmp    r10,rax
  4176bc:	je     4177b0 <main@@Base+0x106e0>
  4176c2:	mov    rdi,r13
  4176c5:	mov    rsi,rax
  4176c8:	mov    rdx,r14
  4176cb:	lea    rcx,[rsp+0x4]
  4176d0:	call   417960 <main@@Base+0x10890>
  4176d5:	mov    rbx,rax
  4176d8:	mov    r12d,DWORD PTR [rsp+0x4]
  4176dd:	test   r12d,r12d
  4176e0:	je     416fd1 <main@@Base+0xff01>
  4176e6:	mov    rdi,QWORD PTR [r13+0x0]
  4176ea:	xor    esi,esi
  4176ec:	jmp    41779d <main@@Base+0x106cd>
  4176f1:	jne    417707 <main@@Base+0x10637>
  4176f3:	cmp    BYTE PTR [rsi+0x1],0x20
  4176f7:	jle    417707 <main@@Base+0x10637>
  4176f9:	mov    rbx,r10
  4176fc:	add    rsi,0x1
  417700:	cmp    rsi,r14
  417703:	jne    41771d <main@@Base+0x1064d>
  417705:	jmp    417748 <main@@Base+0x10678>
  417707:	mov    rbx,r10
  41770a:	mov    rdi,r13
  41770d:	mov    rdx,r14
  417710:	call   425750 <flatcc_json_parser_space_ext@@Base>
  417715:	mov    rsi,rax
  417718:	cmp    rsi,r14
  41771b:	je     417748 <main@@Base+0x10678>
  41771d:	cmp    BYTE PTR [rsi],0x3a
  417720:	jne    417748 <main@@Base+0x10678>
  417722:	lea    rax,[rsi+0x1]
  417726:	mov    rcx,r14
  417729:	sub    rcx,rax
  41772c:	cmp    rcx,0x2
  417730:	jl     41775a <main@@Base+0x1068a>
  417732:	cmp    BYTE PTR [rax],0x20
  417735:	jg     417768 <main@@Base+0x10698>
  417737:	jne    41775a <main@@Base+0x1068a>
  417739:	cmp    BYTE PTR [rsi+0x2],0x20
  41773d:	jle    41775a <main@@Base+0x1068a>
  41773f:	add    rsi,0x2
  417743:	mov    rax,rsi
  417746:	jmp    417768 <main@@Base+0x10698>
  417748:	mov    ecx,0x4
  41774d:	mov    rdi,r13
  417750:	mov    rdx,r14
  417753:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  417758:	jmp    417768 <main@@Base+0x10698>
  41775a:	mov    rdi,r13
  41775d:	mov    rsi,rax
  417760:	mov    rdx,r14
  417763:	call   425750 <flatcc_json_parser_space_ext@@Base>
  417768:	mov    r10,rbx
  41776b:	cmp    r10,rax
  41776e:	je     4177b0 <main@@Base+0x106e0>
  417770:	mov    rdi,r13
  417773:	mov    rsi,rax
  417776:	mov    rdx,r14
  417779:	lea    rcx,[rsp+0x4]
  41777e:	call   41acc0 <main@@Base+0x13bf0>
  417783:	mov    rbx,rax
  417786:	mov    r12d,DWORD PTR [rsp+0x4]
  41778b:	test   r12d,r12d
  41778e:	je     416fd1 <main@@Base+0xff01>
  417794:	mov    rdi,QWORD PTR [r13+0x0]
  417798:	mov    esi,0x1
  41779d:	call   421dc0 <flatcc_builder_table_add_offset@@Base>
  4177a2:	test   rax,rax
  4177a5:	je     416fd1 <main@@Base+0xff01>
  4177ab:	mov    DWORD PTR [rax],r12d
  4177ae:	jmp    4177c1 <main@@Base+0x106f1>
  4177b0:	mov    rdi,r13
  4177b3:	mov    rsi,r10
  4177b6:	mov    rdx,r14
  4177b9:	call   425cc0 <flatcc_json_parser_unmatched_symbol@@Base>
  4177be:	mov    rbx,rax
  4177c1:	mov    rax,r14
  4177c4:	sub    rax,rbx
  4177c7:	cmp    rax,0x2
  4177cb:	mov    rbp,QWORD PTR [rsp+0x20]
  4177d0:	jl     4177f0 <main@@Base+0x10720>
  4177d2:	cmp    BYTE PTR [rbx],0x20
  4177d5:	jg     417801 <main@@Base+0x10731>
  4177d7:	jne    4177f0 <main@@Base+0x10720>
  4177d9:	cmp    BYTE PTR [rbx+0x1],0x20
  4177dd:	jle    4177f0 <main@@Base+0x10720>
  4177df:	add    rbx,0x1
  4177e3:	cmp    rbx,r14
  4177e6:	jne    417806 <main@@Base+0x10736>
  4177e8:	jmp    417873 <main@@Base+0x107a3>
  4177ed:	nop    DWORD PTR [rax]
  4177f0:	mov    rdi,r13
  4177f3:	mov    rsi,rbx
  4177f6:	mov    rdx,r14
  4177f9:	call   425750 <flatcc_json_parser_space_ext@@Base>
  4177fe:	mov    rbx,rax
  417801:	cmp    rbx,r14
  417804:	je     417873 <main@@Base+0x107a3>
  417806:	movzx  eax,BYTE PTR [rbx]
  417809:	cmp    al,0x2c
  41780b:	jne    417886 <main@@Base+0x107b6>
  41780d:	lea    rsi,[rbx+0x1]
  417811:	mov    rax,r14
  417814:	sub    rax,rsi
  417817:	cmp    rax,0x2
  41781b:	jl     417850 <main@@Base+0x10780>
  41781d:	cmp    BYTE PTR [rsi],0x20
  417820:	jg     41785e <main@@Base+0x1078e>
  417822:	jne    417850 <main@@Base+0x10780>
  417824:	cmp    BYTE PTR [rbx+0x2],0x20
  417828:	jle    417850 <main@@Base+0x10780>
  41782a:	add    rbx,0x2
  41782e:	mov    rsi,rbx
  417831:	cmp    rsi,r14
  417834:	je     417863 <main@@Base+0x10793>
  417836:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417840:	cmp    BYTE PTR [rsi],0x7d
  417843:	jne    4170f0 <main@@Base+0x10020>
  417849:	jmp    4178c3 <main@@Base+0x107f3>
  41784b:	nop    DWORD PTR [rax+rax*1+0x0]
  417850:	mov    rdi,r13
  417853:	mov    rdx,r14
  417856:	call   425750 <flatcc_json_parser_space_ext@@Base>
  41785b:	mov    rsi,rax
  41785e:	cmp    rsi,r14
  417861:	jne    417840 <main@@Base+0x10770>
  417863:	mov    ecx,0xa
  417868:	mov    rdi,r13
  41786b:	mov    rsi,r14
  41786e:	jmp    417051 <main@@Base+0xff81>
  417873:	mov    rax,r14
  417876:	cmp    DWORD PTR [r13+0x20],0x0
  41787b:	jne    417064 <main@@Base+0xff94>
  417881:	jmp    417911 <main@@Base+0x10841>
  417886:	cmp    al,0x7d
  417888:	jne    417940 <main@@Base+0x10870>
  41788e:	lea    rax,[rbx+0x1]
  417892:	mov    rcx,r14
  417895:	sub    rcx,rax
  417898:	cmp    rcx,0x2
  41789c:	jl     4178f8 <main@@Base+0x10828>
  41789e:	cmp    BYTE PTR [rax],0x20
  4178a1:	jg     417059 <main@@Base+0xff89>
  4178a7:	jne    4178f8 <main@@Base+0x10828>
  4178a9:	cmp    BYTE PTR [rbx+0x2],0x20
  4178ad:	jle    4178f8 <main@@Base+0x10828>
  4178af:	add    rbx,0x2
  4178b3:	mov    rax,rbx
  4178b6:	cmp    DWORD PTR [r13+0x20],0x0
  4178bb:	jne    417064 <main@@Base+0xff94>
  4178c1:	jmp    417911 <main@@Base+0x10841>
  4178c3:	lea    rax,[rsi+0x1]
  4178c7:	mov    rcx,r14
  4178ca:	sub    rcx,rax
  4178cd:	cmp    rcx,0x2
  4178d1:	jl     4178f8 <main@@Base+0x10828>
  4178d3:	cmp    BYTE PTR [rax],0x20
  4178d6:	jg     417059 <main@@Base+0xff89>
  4178dc:	jne    4178f8 <main@@Base+0x10828>
  4178de:	cmp    BYTE PTR [rsi+0x2],0x20
  4178e2:	jle    4178f8 <main@@Base+0x10828>
  4178e4:	add    rsi,0x2
  4178e8:	mov    rax,rsi
  4178eb:	cmp    DWORD PTR [r13+0x20],0x0
  4178f0:	jne    417064 <main@@Base+0xff94>
  4178f6:	jmp    417911 <main@@Base+0x10841>
  4178f8:	mov    rdi,r13
  4178fb:	mov    rsi,rax
  4178fe:	mov    rdx,r14
  417901:	call   425750 <flatcc_json_parser_space_ext@@Base>
  417906:	cmp    DWORD PTR [r13+0x20],0x0
  41790b:	jne    417064 <main@@Base+0xff94>
  417911:	mov    rcx,QWORD PTR [rsp+0x8]
  417916:	mov    rdi,r13
  417919:	mov    rsi,rax
  41791c:	mov    rdx,r14
  41791f:	call   427b60 <flatcc_json_parser_finalize_unions@@Base>
  417924:	mov    rbx,rax
  417927:	mov    rdi,QWORD PTR [r13+0x0]
  41792b:	call   4215b0 <flatcc_builder_end_table@@Base>
  417930:	mov    DWORD PTR [rbp+0x0],eax
  417933:	test   eax,eax
  417935:	jne    416fe7 <main@@Base+0xff17>
  41793b:	jmp    416fd1 <main@@Base+0xff01>
  417940:	mov    ecx,0xa
  417945:	jmp    41704b <main@@Base+0xff7b>
  41794a:	nop    WORD PTR [rax+rax*1+0x0]
  417950:	xor    eax,eax
  417952:	cmp    dil,0x5
  417956:	setb   al
  417959:	ret    
  41795a:	nop    WORD PTR [rax+rax*1+0x0]
  417960:	push   rbp
  417961:	push   r15
  417963:	push   r14
  417965:	push   r13
  417967:	push   r12
  417969:	push   rbx
  41796a:	sub    rsp,0x48
  41796e:	mov    r13,rcx
  417971:	mov    r14,rdx
  417974:	mov    rbx,rsi
  417977:	mov    r15,rdi
  41797a:	mov    DWORD PTR [rcx],0x0
  417980:	mov    rdi,QWORD PTR [rdi]
  417983:	mov    esi,0x3
  417988:	call   420ba0 <flatcc_builder_start_table@@Base>
  41798d:	test   eax,eax
  41798f:	jne    41ac48 <main@@Base+0x13b78>
  417995:	cmp    rbx,r14
  417998:	je     4179c5 <main@@Base+0x108f5>
  41799a:	cmp    BYTE PTR [rbx],0x7b
  41799d:	jne    4179c5 <main@@Base+0x108f5>
  41799f:	lea    rax,[rbx+0x1]
  4179a3:	mov    rcx,r14
  4179a6:	sub    rcx,rax
  4179a9:	cmp    rcx,0x2
  4179ad:	jl     4179ed <main@@Base+0x1091d>
  4179af:	cmp    BYTE PTR [rax],0x20
  4179b2:	jg     4179fb <main@@Base+0x1092b>
  4179b4:	jne    4179ed <main@@Base+0x1091d>
  4179b6:	cmp    BYTE PTR [rbx+0x2],0x20
  4179ba:	jle    4179ed <main@@Base+0x1091d>
  4179bc:	add    rbx,0x2
  4179c0:	mov    rax,rbx
  4179c3:	jmp    4179fb <main@@Base+0x1092b>
  4179c5:	mov    ecx,0x15
  4179ca:	mov    rdi,r15
  4179cd:	mov    rsi,rbx
  4179d0:	mov    rdx,r14
  4179d3:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  4179d8:	mov    rbx,rax
  4179db:	lea    rax,[r15+0x20]
  4179df:	cmp    DWORD PTR [rax],0x0
  4179e2:	jne    41ac48 <main@@Base+0x13b78>
  4179e8:	jmp    41ac38 <main@@Base+0x13b68>
  4179ed:	mov    rdi,r15
  4179f0:	mov    rsi,rax
  4179f3:	mov    rdx,r14
  4179f6:	call   425750 <flatcc_json_parser_space_ext@@Base>
  4179fb:	mov    rsi,r14
  4179fe:	cmp    rax,r14
  417a01:	je     417a3a <main@@Base+0x1096a>
  417a03:	cmp    BYTE PTR [rax],0x7d
  417a06:	jne    417a37 <main@@Base+0x10967>
  417a08:	lea    rbx,[rax+0x1]
  417a0c:	mov    rcx,r14
  417a0f:	sub    rcx,rbx
  417a12:	cmp    rcx,0x2
  417a16:	jl     41ab90 <main@@Base+0x13ac0>
  417a1c:	cmp    BYTE PTR [rbx],0x20
  417a1f:	jg     4179db <main@@Base+0x1090b>
  417a21:	jne    41ab90 <main@@Base+0x13ac0>
  417a27:	cmp    BYTE PTR [rax+0x2],0x20
  417a2b:	jle    41ab90 <main@@Base+0x13ac0>
  417a31:	add    rax,0x2
  417a35:	jmp    4179d8 <main@@Base+0x10908>
  417a37:	mov    rsi,rax
  417a3a:	lea    rax,[r15+0x14]
  417a3e:	mov    QWORD PTR [rsp+0x20],rax
  417a43:	lea    rax,[r15+0x20]
  417a47:	mov    QWORD PTR [rsp+0x28],rax
  417a4c:	movabs rbx,0x625f73746172745f
  417a56:	mov    QWORD PTR [rsp+0x10],r15
  417a5b:	mov    QWORD PTR [rsp+0x18],r13
  417a60:	mov    r12,r14
  417a63:	cmp    rsi,r14
  417a66:	je     417aa6 <main@@Base+0x109d6>
  417a68:	mov    al,BYTE PTR [rsi]
  417a6a:	cmp    al,0x2e
  417a6c:	je     417a83 <main@@Base+0x109b3>
  417a6e:	cmp    al,0x22
  417a70:	jne    417a98 <main@@Base+0x109c8>
  417a72:	add    rsi,0x1
  417a76:	mov    rax,QWORD PTR [rsp+0x20]
  417a7b:	mov    DWORD PTR [rax],0x0
  417a81:	jmp    417aa3 <main@@Base+0x109d3>
  417a83:	mov    ecx,0x5
  417a88:	mov    rdi,r15
  417a8b:	mov    rdx,r14
  417a8e:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  417a93:	mov    r12,rax
  417a96:	jmp    417aa6 <main@@Base+0x109d6>
  417a98:	mov    rax,QWORD PTR [rsp+0x20]
  417a9d:	mov    DWORD PTR [rax],0x1
  417aa3:	mov    r12,rsi
  417aa6:	mov    rax,r14
  417aa9:	sub    rax,r12
  417aac:	cmp    rax,0x8
  417ab0:	jb     417ac0 <main@@Base+0x109f0>
  417ab2:	movbe  rax,QWORD PTR [r12]
  417ab8:	jmp    417b58 <main@@Base+0x10a88>
  417abd:	nop    DWORD PTR [rax]
  417ac0:	and    al,0xf
  417ac2:	add    al,0xff
  417ac4:	cmp    al,0x7
  417ac6:	ja     417b90 <main@@Base+0x10ac0>
  417acc:	movzx  eax,al
  417acf:	lea    rcx,[rip+0x1dc9e]        # 435774 <_IO_stdin_used@@Base+0x774>
  417ad6:	movsxd rsi,DWORD PTR [rcx+rax*4]
  417ada:	add    rsi,rcx
  417add:	xor    r8d,r8d
  417ae0:	xor    eax,eax
  417ae2:	xor    ecx,ecx
  417ae4:	xor    edx,edx
  417ae6:	xor    edi,edi
  417ae8:	xor    ebp,ebp
  417aea:	xor    ebx,ebx
  417aec:	jmp    rsi
  417aee:	movsx  r8,BYTE PTR [r12+0x7]
  417af4:	movsx  rax,BYTE PTR [r12+0x6]
  417afa:	shl    rax,0x8
  417afe:	or     rax,r8
  417b01:	movsx  rcx,BYTE PTR [r12+0x5]
  417b07:	shl    rcx,0x10
  417b0b:	or     rcx,rax
  417b0e:	movsx  rdx,BYTE PTR [r12+0x4]
  417b14:	shl    rdx,0x18
  417b18:	or     rdx,rcx
  417b1b:	movsx  rdi,BYTE PTR [r12+0x3]
  417b21:	shl    rdi,0x20
  417b25:	or     rdi,rdx
  417b28:	movsx  rbp,BYTE PTR [r12+0x2]
  417b2e:	shl    rbp,0x28
  417b32:	or     rbp,rdi
  417b35:	movsx  rbx,BYTE PTR [r12+0x1]
  417b3b:	shl    rbx,0x30
  417b3f:	or     rbx,rbp
  417b42:	movzx  eax,BYTE PTR [r12]
  417b47:	shl    rax,0x38
  417b4b:	or     rax,rbx
  417b4e:	movabs rbx,0x625f73746172745f
  417b58:	movabs rcx,0x746573746a736f6e
  417b62:	cmp    rax,rcx
  417b65:	jne    417b90 <main@@Base+0x10ac0>
  417b67:	lea    rsi,[r12+0x8]
  417b6c:	mov    rax,r14
  417b6f:	sub    rax,rsi
  417b72:	cmp    rax,0x8
  417b76:	jb     417b9b <main@@Base+0x10acb>
  417b78:	movbe  rax,QWORD PTR [rsi]
  417b7d:	jmp    417c32 <main@@Base+0x10b62>
  417b82:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417b8c:	nop    DWORD PTR [rax+0x0]
  417b90:	mov    rdi,r15
  417b93:	mov    rsi,r12
  417b96:	jmp    417c64 <main@@Base+0x10b94>
  417b9b:	and    al,0xf
  417b9d:	add    al,0xff
  417b9f:	cmp    al,0x7
  417ba1:	ja     417c61 <main@@Base+0x10b91>
  417ba7:	movzx  eax,al
  417baa:	lea    rcx,[rip+0x1dbe3]        # 435794 <_IO_stdin_used@@Base+0x794>
  417bb1:	movsxd rax,DWORD PTR [rcx+rax*4]
  417bb5:	add    rax,rcx
  417bb8:	xor    r8d,r8d
  417bbb:	xor    r9d,r9d
  417bbe:	xor    ecx,ecx
  417bc0:	xor    edx,edx
  417bc2:	xor    ebp,ebp
  417bc4:	xor    ebx,ebx
  417bc6:	xor    edi,edi
  417bc8:	jmp    rax
  417bca:	movsx  r8,BYTE PTR [r12+0xf]
  417bd0:	movsx  r9,BYTE PTR [r12+0xe]
  417bd6:	shl    r9,0x8
  417bda:	or     r9,r8
  417bdd:	movsx  rcx,BYTE PTR [r12+0xd]
  417be3:	shl    rcx,0x10
  417be7:	or     rcx,r9
  417bea:	movsx  rdx,BYTE PTR [r12+0xc]
  417bf0:	shl    rdx,0x18
  417bf4:	or     rdx,rcx
  417bf7:	movsx  rbp,BYTE PTR [r12+0xb]
  417bfd:	shl    rbp,0x20
  417c01:	or     rbp,rdx
  417c04:	movsx  rbx,BYTE PTR [r12+0xa]
  417c0a:	shl    rbx,0x28
  417c0e:	or     rbx,rbp
  417c11:	movsx  rdi,BYTE PTR [r12+0x9]
  417c17:	shl    rdi,0x30
  417c1b:	or     rdi,rbx
  417c1e:	movzx  eax,BYTE PTR [rsi]
  417c21:	shl    rax,0x38
  417c25:	or     rax,rdi
  417c28:	movabs rbx,0x625f73746172745f
  417c32:	movabs rcx,0x7072656669787061
  417c3c:	cmp    rax,rcx
  417c3f:	jne    417c61 <main@@Base+0x10b91>
  417c41:	lea    r13,[r12+0x10]
  417c46:	mov    r15,r14
  417c49:	sub    r15,r13
  417c4c:	cmp    r15,0x8
  417c50:	jb     417d28 <main@@Base+0x10c58>
  417c56:	movbe  rax,QWORD PTR [r13+0x0]
  417c5c:	jmp    417dc3 <main@@Base+0x10cf3>
  417c61:	mov    rdi,r15
  417c64:	mov    rdx,r14
  417c67:	call   425cc0 <flatcc_json_parser_unmatched_symbol@@Base>
  417c6c:	mov    rbp,rax
  417c6f:	mov    rax,r14
  417c72:	sub    rax,rbp
  417c75:	cmp    rax,0x2
  417c79:	jl     417ca0 <main@@Base+0x10bd0>
  417c7b:	cmp    BYTE PTR [rbp+0x0],0x20
  417c7f:	jg     417cb1 <main@@Base+0x10be1>
  417c81:	jne    417ca0 <main@@Base+0x10bd0>
  417c83:	cmp    BYTE PTR [rbp+0x1],0x20
  417c87:	jle    417ca0 <main@@Base+0x10bd0>
  417c89:	add    rbp,0x1
  417c8d:	cmp    rbp,r14
  417c90:	jne    417cba <main@@Base+0x10bea>
  417c92:	jmp    41aba3 <main@@Base+0x13ad3>
  417c97:	nop    WORD PTR [rax+rax*1+0x0]
  417ca0:	mov    rdi,r15
  417ca3:	mov    rsi,rbp
  417ca6:	mov    rdx,r14
  417ca9:	call   425750 <flatcc_json_parser_space_ext@@Base>
  417cae:	mov    rbp,rax
  417cb1:	cmp    rbp,r14
  417cb4:	je     41aba3 <main@@Base+0x13ad3>
  417cba:	mov    al,BYTE PTR [rbp+0x0]
  417cbd:	cmp    al,0x2c
  417cbf:	jne    41abab <main@@Base+0x13adb>
  417cc5:	lea    rsi,[rbp+0x1]
  417cc9:	mov    rax,r14
  417ccc:	sub    rax,rsi
  417ccf:	cmp    rax,0x2
  417cd3:	jl     417d10 <main@@Base+0x10c40>
  417cd5:	cmp    BYTE PTR [rsi],0x20
  417cd8:	jg     417d1e <main@@Base+0x10c4e>
  417cda:	jne    417d10 <main@@Base+0x10c40>
  417cdc:	cmp    BYTE PTR [rbp+0x2],0x20
  417ce0:	jle    417d10 <main@@Base+0x10c40>
  417ce2:	add    rbp,0x2
  417ce6:	mov    rsi,rbp
  417ce9:	cmp    rsi,r14
  417cec:	je     41abd5 <main@@Base+0x13b05>
  417cf2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417cfc:	nop    DWORD PTR [rax+0x0]
  417d00:	cmp    BYTE PTR [rsi],0x7d
  417d03:	jne    417a60 <main@@Base+0x10990>
  417d09:	jmp    41abe2 <main@@Base+0x13b12>
  417d0e:	xchg   ax,ax
  417d10:	mov    rdi,r15
  417d13:	mov    rdx,r14
  417d16:	call   425750 <flatcc_json_parser_space_ext@@Base>
  417d1b:	mov    rsi,rax
  417d1e:	cmp    rsi,r14
  417d21:	jne    417d00 <main@@Base+0x10c30>
  417d23:	jmp    41abd5 <main@@Base+0x13b05>
  417d28:	mov    eax,r15d
  417d2b:	and    al,0xf
  417d2d:	add    al,0xff
  417d2f:	cmp    al,0x7
  417d31:	ja     418156 <main@@Base+0x11086>
  417d37:	movzx  eax,al
  417d3a:	lea    rcx,[rip+0x1da73]        # 4357b4 <_IO_stdin_used@@Base+0x7b4>
  417d41:	movsxd rbx,DWORD PTR [rcx+rax*4]
  417d45:	add    rbx,rcx
  417d48:	xor    r8d,r8d
  417d4b:	xor    eax,eax
  417d4d:	xor    ecx,ecx
  417d4f:	xor    edx,edx
  417d51:	xor    edi,edi
  417d53:	xor    ebp,ebp
  417d55:	xor    esi,esi
  417d57:	jmp    rbx
  417d59:	movsx  r8,BYTE PTR [r12+0x17]
  417d5f:	movsx  rax,BYTE PTR [r12+0x16]
  417d65:	shl    rax,0x8
  417d69:	or     rax,r8
  417d6c:	movsx  rcx,BYTE PTR [r12+0x15]
  417d72:	shl    rcx,0x10
  417d76:	or     rcx,rax
  417d79:	movsx  rdx,BYTE PTR [r12+0x14]
  417d7f:	shl    rdx,0x18
  417d83:	or     rdx,rcx
  417d86:	movsx  rdi,BYTE PTR [r12+0x13]
  417d8c:	shl    rdi,0x20
  417d90:	or     rdi,rdx
  417d93:	movsx  rbp,BYTE PTR [r12+0x12]
  417d99:	shl    rbp,0x28
  417d9d:	or     rbp,rdi
  417da0:	movsx  rsi,BYTE PTR [r12+0x11]
  417da6:	shl    rsi,0x30
  417daa:	or     rsi,rbp
  417dad:	movzx  eax,BYTE PTR [r13+0x0]
  417db2:	shl    rax,0x38
  417db6:	or     rax,rsi
  417db9:	movabs rbx,0x625f73746172745f
  417dc3:	mov    rbp,rax
  417dc6:	and    rbp,0xffffffffffff0000
  417dcd:	movabs rcx,0x7273696e67000000
  417dd7:	lea    rcx,[rcx+0x320000]
  417dde:	cmp    rbp,rcx
  417de1:	jne    417e19 <main@@Base+0x10d49>
  417de3:	cmp    r15,0x7
  417de7:	jl     418156 <main@@Base+0x11086>
  417ded:	mov    rax,QWORD PTR [rsp+0x20]
  417df2:	cmp    DWORD PTR [rax],0x0
  417df5:	mov    al,BYTE PTR [r12+0x16]
  417dfa:	je     417e69 <main@@Base+0x10d99>
  417dfc:	cmp    al,0x21
  417dfe:	jl     417e08 <main@@Base+0x10d38>
  417e00:	cmp    al,0x3a
  417e02:	jne    418156 <main@@Base+0x11086>
  417e08:	add    r12,0x16
  417e0c:	mov    rax,QWORD PTR [rsp+0x20]
  417e11:	mov    DWORD PTR [rax],0x0
  417e17:	jmp    417e75 <main@@Base+0x10da5>
  417e19:	cmp    r15,0x6
  417e1d:	jl     417fcf <main@@Base+0x10eff>
  417e23:	and    rax,0xffffffffff000000
  417e29:	movabs rcx,0x7273696e67000000
  417e33:	cmp    rax,rcx
  417e36:	jne    417fcf <main@@Base+0x10eff>
  417e3c:	mov    rax,QWORD PTR [rsp+0x20]
  417e41:	cmp    DWORD PTR [rax],0x0
  417e44:	mov    al,BYTE PTR [r12+0x15]
  417e49:	je     417ea5 <main@@Base+0x10dd5>
  417e4b:	cmp    al,0x21
  417e4d:	jl     417e57 <main@@Base+0x10d87>
  417e4f:	cmp    al,0x3a
  417e51:	jne    417fcf <main@@Base+0x10eff>
  417e57:	lea    rsi,[r12+0x15]
  417e5c:	mov    rax,QWORD PTR [rsp+0x20]
  417e61:	mov    DWORD PTR [rax],0x0
  417e67:	jmp    417eb2 <main@@Base+0x10de2>
  417e69:	cmp    al,0x22
  417e6b:	jne    418156 <main@@Base+0x11086>
  417e71:	add    r12,0x17
  417e75:	mov    rax,r14
  417e78:	sub    rax,r12
  417e7b:	cmp    rax,0x2
  417e7f:	mov    rbx,QWORD PTR [rsp+0x10]
  417e84:	jl     417ee1 <main@@Base+0x10e11>
  417e86:	cmp    BYTE PTR [r12],0x20
  417e8b:	jg     417ef2 <main@@Base+0x10e22>
  417e8d:	jne    417ee1 <main@@Base+0x10e11>
  417e8f:	cmp    BYTE PTR [r12+0x1],0x20
  417e95:	jle    417ee1 <main@@Base+0x10e11>
  417e97:	add    r12,0x1
  417e9b:	cmp    r12,r14
  417e9e:	jne    417efb <main@@Base+0x10e2b>
  417ea0:	jmp    417f9c <main@@Base+0x10ecc>
  417ea5:	cmp    al,0x22
  417ea7:	jne    417fcf <main@@Base+0x10eff>
  417ead:	lea    rsi,[r12+0x16]
  417eb2:	mov    rax,r14
  417eb5:	sub    rax,rsi
  417eb8:	cmp    rax,0x2
  417ebc:	jl     417f43 <main@@Base+0x10e73>
  417ec2:	cmp    BYTE PTR [rsi],0x20
  417ec5:	jg     417f53 <main@@Base+0x10e83>
  417ecb:	jne    417f43 <main@@Base+0x10e73>
  417ecd:	cmp    BYTE PTR [rsi+0x1],0x20
  417ed1:	jle    417f43 <main@@Base+0x10e73>
  417ed3:	add    rsi,0x1
  417ed7:	cmp    rsi,r14
  417eda:	jne    417f58 <main@@Base+0x10e88>
  417edc:	jmp    417fb4 <main@@Base+0x10ee4>
  417ee1:	mov    rdi,rbx
  417ee4:	mov    rsi,r12
  417ee7:	mov    rdx,r14
  417eea:	call   425750 <flatcc_json_parser_space_ext@@Base>
  417eef:	mov    r12,rax
  417ef2:	cmp    r12,r14
  417ef5:	je     417f9c <main@@Base+0x10ecc>
  417efb:	cmp    BYTE PTR [r12],0x3a
  417f00:	jne    417f9c <main@@Base+0x10ecc>
  417f06:	lea    rbp,[r12+0x1]
  417f0b:	mov    rax,r14
  417f0e:	sub    rax,rbp
  417f11:	cmp    rax,0x2
  417f15:	jl     4180d3 <main@@Base+0x11003>
  417f1b:	cmp    BYTE PTR [rbp+0x0],0x20
  417f1f:	jg     4180e4 <main@@Base+0x11014>
  417f25:	jne    4180d3 <main@@Base+0x11003>
  417f2b:	cmp    BYTE PTR [r12+0x2],0x20
  417f31:	jle    4180d3 <main@@Base+0x11003>
  417f37:	add    r12,0x2
  417f3b:	mov    rbp,r12
  417f3e:	jmp    4180e4 <main@@Base+0x11014>
  417f43:	mov    rdi,QWORD PTR [rsp+0x10]
  417f48:	mov    rdx,r14
  417f4b:	call   425750 <flatcc_json_parser_space_ext@@Base>
  417f50:	mov    rsi,rax
  417f53:	cmp    rsi,r14
  417f56:	je     417fb4 <main@@Base+0x10ee4>
  417f58:	cmp    BYTE PTR [rsi],0x3a
  417f5b:	jne    417fb4 <main@@Base+0x10ee4>
  417f5d:	lea    rax,[rsi+0x1]
  417f61:	mov    rcx,r14
  417f64:	sub    rcx,rax
  417f67:	cmp    rcx,0x2
  417f6b:	jl     418196 <main@@Base+0x110c6>
  417f71:	cmp    BYTE PTR [rax],0x20
  417f74:	jg     4181a6 <main@@Base+0x110d6>
  417f7a:	jne    418196 <main@@Base+0x110c6>
  417f80:	cmp    BYTE PTR [rsi+0x2],0x20
  417f84:	jle    418196 <main@@Base+0x110c6>
  417f8a:	add    rsi,0x2
  417f8e:	mov    rax,rsi
  417f91:	cmp    r13,rax
  417f94:	jne    4181af <main@@Base+0x110df>
  417f9a:	jmp    417fcf <main@@Base+0x10eff>
  417f9c:	mov    ecx,0x4
  417fa1:	mov    rdi,rbx
  417fa4:	mov    rsi,r12
  417fa7:	mov    rdx,r14
  417faa:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  417faf:	jmp    4180e1 <main@@Base+0x11011>
  417fb4:	mov    ecx,0x4
  417fb9:	mov    rdi,QWORD PTR [rsp+0x10]
  417fbe:	mov    rdx,r14
  417fc1:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  417fc6:	cmp    r13,rax
  417fc9:	jne    4181af <main@@Base+0x110df>
  417fcf:	movabs rax,0x7273696e67000000
  417fd9:	lea    rax,[rax+0x330000]
  417fe0:	cmp    rbp,rax
  417fe3:	jne    418156 <main@@Base+0x11086>
  417fe9:	cmp    r15,0x7
  417fed:	mov    r15,QWORD PTR [rsp+0x10]
  417ff2:	jl     41815b <main@@Base+0x1108b>
  417ff8:	mov    rax,QWORD PTR [rsp+0x20]
  417ffd:	cmp    DWORD PTR [rax],0x0
  418000:	mov    al,BYTE PTR [r12+0x16]
  418005:	je     418024 <main@@Base+0x10f54>
  418007:	cmp    al,0x21
  418009:	jl     418013 <main@@Base+0x10f43>
  41800b:	cmp    al,0x3a
  41800d:	jne    41815b <main@@Base+0x1108b>
  418013:	add    r12,0x16
  418017:	mov    rax,QWORD PTR [rsp+0x20]
  41801c:	mov    DWORD PTR [rax],0x0
  418022:	jmp    418030 <main@@Base+0x10f60>
  418024:	cmp    al,0x22
  418026:	jne    41815b <main@@Base+0x1108b>
  41802c:	add    r12,0x17
  418030:	mov    rax,r14
  418033:	sub    rax,r12
  418036:	cmp    rax,0x2
  41803a:	jl     418058 <main@@Base+0x10f88>
  41803c:	cmp    BYTE PTR [r12],0x20
  418041:	jg     418069 <main@@Base+0x10f99>
  418043:	jne    418058 <main@@Base+0x10f88>
  418045:	cmp    BYTE PTR [r12+0x1],0x20
  41804b:	jle    418058 <main@@Base+0x10f88>
  41804d:	add    r12,0x1
  418051:	cmp    r12,r14
  418054:	jne    41806e <main@@Base+0x10f9e>
  418056:	jmp    4180bb <main@@Base+0x10feb>
  418058:	mov    rdi,r15
  41805b:	mov    rsi,r12
  41805e:	mov    rdx,r14
  418061:	call   425750 <flatcc_json_parser_space_ext@@Base>
  418066:	mov    r12,rax
  418069:	cmp    r12,r14
  41806c:	je     4180bb <main@@Base+0x10feb>
  41806e:	cmp    BYTE PTR [r12],0x3a
  418073:	jne    4180bb <main@@Base+0x10feb>
  418075:	lea    rbp,[r12+0x1]
  41807a:	mov    rax,r14
  41807d:	sub    rax,rbp
  418080:	cmp    rax,0x2
  418084:	jl     4182e8 <main@@Base+0x11218>
  41808a:	cmp    BYTE PTR [rbp+0x0],0x20
  41808e:	jg     4182f9 <main@@Base+0x11229>
  418094:	jne    4182e8 <main@@Base+0x11218>
  41809a:	cmp    BYTE PTR [r12+0x2],0x20
  4180a0:	jle    4182e8 <main@@Base+0x11218>
  4180a6:	add    r12,0x2
  4180aa:	mov    rbp,r12
  4180ad:	cmp    r13,rbp
  4180b0:	jne    418302 <main@@Base+0x11232>
  4180b6:	jmp    41815b <main@@Base+0x1108b>
  4180bb:	mov    ecx,0x4
  4180c0:	mov    rdi,r15
  4180c3:	mov    rsi,r12
  4180c6:	mov    rdx,r14
  4180c9:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  4180ce:	jmp    4182f6 <main@@Base+0x11226>
  4180d3:	mov    rdi,rbx
  4180d6:	mov    rsi,rbp
  4180d9:	mov    rdx,r14
  4180dc:	call   425750 <flatcc_json_parser_space_ext@@Base>
  4180e1:	mov    rbp,rax
  4180e4:	cmp    r13,rbp
  4180e7:	movabs rbx,0x625f73746172745f
  4180f1:	je     418156 <main@@Base+0x11086>
  4180f3:	mov    r15,QWORD PTR [rsp+0x10]
  4180f8:	mov    rdi,QWORD PTR [r15]
  4180fb:	mov    esi,0x2
  418100:	call   420ba0 <flatcc_builder_start_table@@Base>
  418105:	test   eax,eax
  418107:	jne    41ac7d <main@@Base+0x13bad>
  41810d:	cmp    rbp,r14
  418110:	je     418176 <main@@Base+0x110a6>
  418112:	cmp    BYTE PTR [rbp+0x0],0x7b
  418116:	jne    418176 <main@@Base+0x110a6>
  418118:	lea    rax,[rbp+0x1]
  41811c:	mov    rcx,r14
  41811f:	sub    rcx,rax
  418122:	cmp    rcx,0x2
  418126:	mov    r13,QWORD PTR [rsp+0x18]
  41812b:	jl     418234 <main@@Base+0x11164>
  418131:	cmp    BYTE PTR [rax],0x20
  418134:	jg     418242 <main@@Base+0x11172>
  41813a:	jne    418234 <main@@Base+0x11164>
  418140:	cmp    BYTE PTR [rbp+0x2],0x20
  418144:	jle    418234 <main@@Base+0x11164>
  41814a:	add    rbp,0x2
  41814e:	mov    rax,rbp
  418151:	jmp    418242 <main@@Base+0x11172>
  418156:	mov    r15,QWORD PTR [rsp+0x10]
  41815b:	mov    rdi,r15
  41815e:	mov    rsi,r13
  418161:	mov    rdx,r14
  418164:	call   425cc0 <flatcc_json_parser_unmatched_symbol@@Base>
  418169:	mov    rbp,rax
  41816c:	mov    r13,QWORD PTR [rsp+0x18]
  418171:	jmp    417c6f <main@@Base+0x10b9f>
  418176:	mov    ecx,0x15
  41817b:	mov    rdi,r15
  41817e:	mov    rsi,rbp
  418181:	mov    rdx,r14
  418184:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  418189:	mov    rbp,rax
  41818c:	mov    r13,QWORD PTR [rsp+0x18]
  418191:	jmp    419403 <main@@Base+0x12333>
  418196:	mov    rdi,QWORD PTR [rsp+0x10]
  41819b:	mov    rsi,rax
  41819e:	mov    rdx,r14
  4181a1:	call   425750 <flatcc_json_parser_space_ext@@Base>
  4181a6:	cmp    r13,rax
  4181a9:	je     417fcf <main@@Base+0x10eff>
  4181af:	mov    rbx,rax
  4181b2:	mov    r15,QWORD PTR [rsp+0x10]
  4181b7:	mov    rdi,QWORD PTR [r15]
  4181ba:	mov    esi,0x9
  4181bf:	call   420ba0 <flatcc_builder_start_table@@Base>
  4181c4:	test   eax,eax
  4181c6:	jne    41ac8d <main@@Base+0x13bbd>
  4181cc:	mov    rsi,rbx
  4181cf:	cmp    rbx,r14
  4181d2:	je     418217 <main@@Base+0x11147>
  4181d4:	cmp    BYTE PTR [rsi],0x7b
  4181d7:	jne    418217 <main@@Base+0x11147>
  4181d9:	lea    rax,[rsi+0x1]
  4181dd:	mov    rcx,r14
  4181e0:	sub    rcx,rax
  4181e3:	cmp    rcx,0x2
  4181e7:	mov    r13,QWORD PTR [rsp+0x18]
  4181ec:	jl     41828e <main@@Base+0x111be>
  4181f2:	cmp    BYTE PTR [rax],0x20
  4181f5:	jg     41829c <main@@Base+0x111cc>
  4181fb:	jne    41828e <main@@Base+0x111be>
  418201:	cmp    BYTE PTR [rsi+0x2],0x20
  418205:	jle    41828e <main@@Base+0x111be>
  41820b:	add    rsi,0x2
  41820f:	mov    rax,rsi
  418212:	jmp    41829c <main@@Base+0x111cc>
  418217:	mov    ecx,0x15
  41821c:	mov    rdi,r15
  41821f:	mov    rdx,r14
  418222:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  418227:	mov    rbp,rax
  41822a:	mov    r13,QWORD PTR [rsp+0x18]
  41822f:	jmp    41ab4c <main@@Base+0x13a7c>
  418234:	mov    rdi,r15
  418237:	mov    rsi,rax
  41823a:	mov    rdx,r14
  41823d:	call   425750 <flatcc_json_parser_space_ext@@Base>
  418242:	mov    rdx,r14
  418245:	cmp    rax,r14
  418248:	je     418dea <main@@Base+0x11d1a>
  41824e:	cmp    BYTE PTR [rax],0x7d
  418251:	jne    41836d <main@@Base+0x1129d>
  418257:	lea    rbp,[rax+0x1]
  41825b:	mov    rcx,r14
  41825e:	sub    rcx,rbp
  418261:	cmp    rcx,0x2
  418265:	jl     4193d0 <main@@Base+0x12300>
  41826b:	cmp    BYTE PTR [rbp+0x0],0x20
  41826f:	jg     419403 <main@@Base+0x12333>
  418275:	jne    4193d0 <main@@Base+0x12300>
  41827b:	cmp    BYTE PTR [rax+0x2],0x20
  41827f:	jle    4193d0 <main@@Base+0x12300>
  418285:	add    rax,0x2
  418289:	jmp    419400 <main@@Base+0x12330>
  41828e:	mov    rdi,r15
  418291:	mov    rsi,rax
  418294:	mov    rdx,r14
  418297:	call   425750 <flatcc_json_parser_space_ext@@Base>
  41829c:	mov    rsi,r14
  41829f:	cmp    rax,r14
  4182a2:	je     41958c <main@@Base+0x124bc>
  4182a8:	cmp    BYTE PTR [rax],0x7d
  4182ab:	jne    418375 <main@@Base+0x112a5>
  4182b1:	lea    rbp,[rax+0x1]
  4182b5:	mov    rcx,r14
  4182b8:	sub    rcx,rbp
  4182bb:	cmp    rcx,0x2
  4182bf:	jl     41ab19 <main@@Base+0x13a49>
  4182c5:	cmp    BYTE PTR [rbp+0x0],0x20
  4182c9:	jg     41ab4c <main@@Base+0x13a7c>
  4182cf:	jne    41ab19 <main@@Base+0x13a49>
  4182d5:	cmp    BYTE PTR [rax+0x2],0x20
  4182d9:	jle    41ab19 <main@@Base+0x13a49>
  4182df:	add    rax,0x2
  4182e3:	jmp    41ab49 <main@@Base+0x13a79>
  4182e8:	mov    rdi,r15
  4182eb:	mov    rsi,rbp
  4182ee:	mov    rdx,r14
  4182f1:	call   425750 <flatcc_json_parser_space_ext@@Base>
  4182f6:	mov    rbp,rax
  4182f9:	cmp    r13,rbp
  4182fc:	je     41815b <main@@Base+0x1108b>
  418302:	mov    rdi,QWORD PTR [r15]
  418305:	mov    esi,0x2
  41830a:	call   420ba0 <flatcc_builder_start_table@@Base>
  41830f:	test   eax,eax
  418311:	jne    41ac7d <main@@Base+0x13bad>
  418317:	cmp    rbp,r14
  41831a:	je     41834d <main@@Base+0x1127d>
  41831c:	cmp    BYTE PTR [rbp+0x0],0x7b
  418320:	jne    41834d <main@@Base+0x1127d>
  418322:	lea    rax,[rbp+0x1]
  418326:	mov    rcx,r14
  418329:	sub    rcx,rax
  41832c:	cmp    rcx,0x2
  418330:	mov    r13,QWORD PTR [rsp+0x18]
  418335:	jl     41837d <main@@Base+0x112ad>
  418337:	cmp    BYTE PTR [rax],0x20
  41833a:	jg     41838b <main@@Base+0x112bb>
  41833c:	jne    41837d <main@@Base+0x112ad>
  41833e:	cmp    BYTE PTR [rbp+0x2],0x20
  418342:	jle    41837d <main@@Base+0x112ad>
  418344:	add    rbp,0x2
  418348:	mov    rax,rbp
  41834b:	jmp    41838b <main@@Base+0x112bb>
  41834d:	mov    ecx,0x15
  418352:	mov    rdi,r15
  418355:	mov    rsi,rbp
  418358:	mov    rdx,r14
  41835b:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  418360:	mov    rbp,rax
  418363:	mov    r13,QWORD PTR [rsp+0x18]
  418368:	jmp    419473 <main@@Base+0x123a3>
  41836d:	mov    rdx,rax
  418370:	jmp    418dea <main@@Base+0x11d1a>
  418375:	mov    rsi,rax
  418378:	jmp    41958c <main@@Base+0x124bc>
  41837d:	mov    rdi,r15
  418380:	mov    rsi,rax
  418383:	mov    rdx,r14
  418386:	call   425750 <flatcc_json_parser_space_ext@@Base>
  41838b:	mov    rdx,r14
  41838e:	cmp    rax,r14
  418391:	je     41880c <main@@Base+0x1173c>
  418397:	cmp    BYTE PTR [rax],0x7d
  41839a:	jne    4183d3 <main@@Base+0x11303>
  41839c:	lea    rbp,[rax+0x1]
  4183a0:	mov    rcx,r14
  4183a3:	sub    rcx,rbp
  4183a6:	cmp    rcx,0x2
  4183aa:	jl     419462 <main@@Base+0x12392>
  4183b0:	cmp    BYTE PTR [rbp+0x0],0x20
  4183b4:	jg     419473 <main@@Base+0x123a3>
  4183ba:	jne    419462 <main@@Base+0x12392>
  4183c0:	cmp    BYTE PTR [rax+0x2],0x20
  4183c4:	jle    419462 <main@@Base+0x12392>
  4183ca:	add    rax,0x2
  4183ce:	jmp    419470 <main@@Base+0x123a0>
  4183d3:	mov    rdx,rax
  4183d6:	jmp    41880c <main@@Base+0x1173c>
  4183db:	cmp    al,0x22
  4183dd:	jne    418650 <main@@Base+0x11580>
  4183e3:	add    rsi,0x10
  4183e7:	mov    rax,r14
  4183ea:	sub    rax,rsi
  4183ed:	cmp    rax,0x2
  4183f1:	jl     418455 <main@@Base+0x11385>
  4183f3:	cmp    BYTE PTR [rsi],0x20
  4183f6:	jg     418463 <main@@Base+0x11393>
  4183f8:	jne    418455 <main@@Base+0x11385>
  4183fa:	cmp    BYTE PTR [rsi+0x1],0x20
  4183fe:	jle    418455 <main@@Base+0x11385>
  418400:	add    rsi,0x1
  418404:	cmp    rsi,r14
  418407:	jne    418468 <main@@Base+0x11398>
  418409:	jmp    4184a7 <main@@Base+0x113d7>
  41840e:	cmp    al,0x22
  418410:	jne    418650 <main@@Base+0x11580>
  418416:	add    rsi,0x16
  41841a:	mov    rax,r14
  41841d:	sub    rax,rsi
  418420:	cmp    rax,0x2
  418424:	jl     4184c8 <main@@Base+0x113f8>
  41842a:	cmp    BYTE PTR [rsi],0x20
  41842d:	jg     4184d6 <main@@Base+0x11406>
  418433:	jne    4184c8 <main@@Base+0x113f8>
  418439:	cmp    BYTE PTR [rsi+0x1],0x20
  41843d:	jle    4184c8 <main@@Base+0x113f8>
  418443:	add    rsi,0x1
  418447:	cmp    rsi,r14
  41844a:	jne    4184db <main@@Base+0x1140b>
  418450:	jmp    41851a <main@@Base+0x1144a>
  418455:	mov    rdi,r15
  418458:	mov    rdx,r14
  41845b:	call   425750 <flatcc_json_parser_space_ext@@Base>
  418460:	mov    rsi,rax
  418463:	cmp    rsi,r14
  418466:	je     4184a7 <main@@Base+0x113d7>
  418468:	cmp    BYTE PTR [rsi],0x3a
  41846b:	jne    4184a7 <main@@Base+0x113d7>
  41846d:	lea    rbx,[rsi+0x1]
  418471:	mov    rax,r14
  418474:	sub    rax,rbx
  418477:	cmp    rax,0x2
  41847b:	jl     41853b <main@@Base+0x1146b>
  418481:	cmp    BYTE PTR [rbx],0x20
  418484:	jg     41849d <main@@Base+0x113cd>
  418486:	jne    41853b <main@@Base+0x1146b>
  41848c:	cmp    BYTE PTR [rsi+0x2],0x20
  418490:	jle    41853b <main@@Base+0x1146b>
  418496:	add    rsi,0x2
  41849a:	mov    rbx,rsi
  41849d:	mov    r15,QWORD PTR [rsp+0x10]
  4184a2:	jmp    418551 <main@@Base+0x11481>
  4184a7:	mov    ecx,0x4
  4184ac:	mov    rdi,r15
  4184af:	mov    rdx,r14
  4184b2:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  4184b7:	mov    rbx,rax
  4184ba:	cmp    r12,rbx
  4184bd:	jne    41855f <main@@Base+0x1148f>
  4184c3:	jmp    418650 <main@@Base+0x11580>
  4184c8:	mov    rdi,r15
  4184cb:	mov    rdx,r14
  4184ce:	call   425750 <flatcc_json_parser_space_ext@@Base>
  4184d3:	mov    rsi,rax
  4184d6:	cmp    rsi,r14
  4184d9:	je     41851a <main@@Base+0x1144a>
  4184db:	cmp    BYTE PTR [rsi],0x3a
  4184de:	jne    41851a <main@@Base+0x1144a>
  4184e0:	lea    rbx,[rsi+0x1]
  4184e4:	mov    rax,r14
  4184e7:	sub    rax,rbx
  4184ea:	cmp    rax,0x2
  4184ee:	jl     4185e2 <main@@Base+0x11512>
  4184f4:	cmp    BYTE PTR [rbx],0x20
  4184f7:	jg     418510 <main@@Base+0x11440>
  4184f9:	jne    4185e2 <main@@Base+0x11512>
  4184ff:	cmp    BYTE PTR [rsi+0x2],0x20
  418503:	jle    4185e2 <main@@Base+0x11512>
  418509:	add    rsi,0x2
  41850d:	mov    rbx,rsi
  418510:	mov    r15,QWORD PTR [rsp+0x10]
  418515:	jmp    4185f8 <main@@Base+0x11528>
  41851a:	mov    ecx,0x4
  41851f:	mov    rdi,r15
  418522:	mov    rdx,r14
  418525:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  41852a:	mov    rbx,rax
  41852d:	cmp    r12,rbx
  418530:	jne    418602 <main@@Base+0x11532>
  418536:	jmp    418650 <main@@Base+0x11580>
  41853b:	mov    r15,QWORD PTR [rsp+0x10]
  418540:	mov    rdi,r15
  418543:	mov    rsi,rbx
  418546:	mov    rdx,r14
  418549:	call   425750 <flatcc_json_parser_space_ext@@Base>
  41854e:	mov    rbx,rax
  418551:	mov    r13,QWORD PTR [rsp+0x18]
  418556:	cmp    r12,rbx
  418559:	je     418650 <main@@Base+0x11580>
  41855f:	mov    QWORD PTR [rsp+0x38],0x0
  418568:	mov    DWORD PTR [rsp+0xc],0x0
  418570:	mov    QWORD PTR [rsp+0x30],0x0
  418579:	cmp    rbx,r14
  41857c:	je     4185cf <main@@Base+0x114ff>
  41857e:	mov    rdi,r15
  418581:	mov    rsi,rbx
  418584:	mov    rdx,r14
  418587:	lea    rcx,[rsp+0xc]
  41858c:	lea    r8,[rsp+0x38]
  418591:	call   427360 <flatcc_json_parser_integer@@Base>
  418596:	cmp    rax,rbx
  418599:	je     418681 <main@@Base+0x115b1>
  41859f:	mov    r12,rax
  4185a2:	mov    rbp,QWORD PTR [rsp+0x38]
  4185a7:	cmp    DWORD PTR [rsp+0xc],0x0
  4185ac:	je     418690 <main@@Base+0x115c0>
  4185b2:	movabs rax,0x8000000000000000
  4185bc:	cmp    rbp,rax
  4185bf:	jbe    4186e6 <main@@Base+0x11616>
  4185c5:	mov    ecx,0x8
  4185ca:	jmp    41869a <main@@Base+0x115ca>
  4185cf:	xor    ebp,ebp
  4185d1:	mov    r12,r14
  4185d4:	cmp    rbx,r12
  4185d7:	jne    41873b <main@@Base+0x1166b>
  4185dd:	jmp    4186fd <main@@Base+0x1162d>
  4185e2:	mov    r15,QWORD PTR [rsp+0x10]
  4185e7:	mov    rdi,r15
  4185ea:	mov    rsi,rbx
  4185ed:	mov    rdx,r14
  4185f0:	call   425750 <flatcc_json_parser_space_ext@@Base>
  4185f5:	mov    rbx,rax
  4185f8:	mov    r13,QWORD PTR [rsp+0x18]
  4185fd:	cmp    r12,rbx
  418600:	je     418650 <main@@Base+0x11580>
  418602:	mov    QWORD PTR [rsp+0x38],0x0
  41860b:	mov    DWORD PTR [rsp+0x30],0x0
  418613:	mov    DWORD PTR [rsp+0xc],0x0
  41861b:	xor    ebp,ebp
  41861d:	cmp    rbx,r14
  418620:	je     418670 <main@@Base+0x115a0>
  418622:	mov    rdi,r15
  418625:	mov    rsi,rbx
  418628:	mov    rdx,r14
  41862b:	lea    rcx,[rsp+0x30]
  418630:	lea    r8,[rsp+0x38]
  418635:	call   427360 <flatcc_json_parser_integer@@Base>
  41863a:	cmp    rax,rbx
  41863d:	je     418688 <main@@Base+0x115b8>
  41863f:	mov    r12,rax
  418642:	cmp    DWORD PTR [rsp+0x30],0x0
  418647:	je     4186b4 <main@@Base+0x115e4>
  418649:	mov    ecx,0x8
  41864e:	jmp    4186cb <main@@Base+0x115fb>
  418650:	mov    rdi,r15
  418653:	mov    rsi,r12
  418656:	mov    rdx,r14
  418659:	call   425cc0 <flatcc_json_parser_unmatched_symbol@@Base>
  41865e:	mov    r12,rax
  418661:	movabs rbx,0x625f73746172745f
  41866b:	jmp    418b40 <main@@Base+0x11a70>
  418670:	mov    r12,r14
  418673:	cmp    rbx,r12
  418676:	jne    4187cc <main@@Base+0x116fc>
  41867c:	jmp    41878f <main@@Base+0x116bf>
  418681:	xor    ebp,ebp
  418683:	mov    r12,rbx
  418686:	jmp    4186ee <main@@Base+0x1161e>
  418688:	mov    r12,rbx
  41868b:	jmp    418780 <main@@Base+0x116b0>
  418690:	test   rbp,rbp
  418693:	jns    4186e9 <main@@Base+0x11619>
  418695:	mov    ecx,0x7
  41869a:	mov    r15,QWORD PTR [rsp+0x10]
  41869f:	mov    rdi,r15
  4186a2:	mov    rsi,r12
  4186a5:	mov    rdx,r14
  4186a8:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  4186ad:	mov    r12,rax
  4186b0:	xor    ebp,ebp
  4186b2:	jmp    4186f3 <main@@Base+0x11623>
  4186b4:	mov    rax,QWORD PTR [rsp+0x38]
  4186b9:	mov    rcx,rax
  4186bc:	shr    rcx,0x20
  4186c0:	je     41877a <main@@Base+0x116aa>
  4186c6:	mov    ecx,0x7
  4186cb:	mov    r15,QWORD PTR [rsp+0x10]
  4186d0:	mov    rdi,r15
  4186d3:	mov    rsi,r12
  4186d6:	mov    rdx,r14
  4186d9:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  4186de:	mov    r12,rax
  4186e1:	jmp    418785 <main@@Base+0x116b5>
  4186e6:	neg    rbp
  4186e9:	mov    QWORD PTR [rsp+0x30],rbp
  4186ee:	mov    r15,QWORD PTR [rsp+0x10]
  4186f3:	mov    r13,QWORD PTR [rsp+0x18]
  4186f8:	cmp    rbx,r12
  4186fb:	jne    41873b <main@@Base+0x1166b>
  4186fd:	mov    rdi,r15
  418700:	mov    rsi,rbx
  418703:	mov    rdx,r14
  418706:	lea    rcx,[rip+0x2bf13]        # 444620 <__data_start@@Base+0x570>
  41870d:	lea    r8,[rsp+0x30]
  418712:	call   415f20 <main@@Base+0xee50>
  418717:	mov    r12,rax
  41871a:	cmp    rax,rbx
  41871d:	je     41ac75 <main@@Base+0x13ba5>
  418723:	cmp    r12,r14
  418726:	je     41ac75 <main@@Base+0x13ba5>
  41872c:	mov    rbp,QWORD PTR [rsp+0x30]
  418731:	mov    r15,QWORD PTR [rsp+0x10]
  418736:	mov    r13,QWORD PTR [rsp+0x18]
  41873b:	test   rbp,rbp
  41873e:	movabs rbx,0x625f73746172745f
  418748:	jne    418755 <main@@Base+0x11685>
  41874a:	test   BYTE PTR [r15+0x10],0x2
  41874f:	je     418b40 <main@@Base+0x11a70>
  418755:	mov    rdi,QWORD PTR [r15]
  418758:	xor    esi,esi
  41875a:	mov    edx,0x8
  41875f:	mov    ecx,0x8
  418764:	call   421f20 <flatcc_builder_table_add@@Base>
  418769:	test   rax,rax
  41876c:	je     41ac75 <main@@Base+0x13ba5>
  418772:	mov    QWORD PTR [rax],rbp
  418775:	jmp    418b40 <main@@Base+0x11a70>
  41877a:	mov    DWORD PTR [rsp+0xc],eax
  41877e:	mov    ebp,eax
  418780:	mov    r15,QWORD PTR [rsp+0x10]
  418785:	mov    r13,QWORD PTR [rsp+0x18]
  41878a:	cmp    rbx,r12
  41878d:	jne    4187cc <main@@Base+0x116fc>
  41878f:	mov    rdi,r15
  418792:	mov    rsi,rbx
  418795:	mov    rdx,r14
  418798:	lea    rcx,[rip+0x2be61]        # 444600 <__data_start@@Base+0x550>
  41879f:	lea    r8,[rsp+0xc]
  4187a4:	call   416110 <main@@Base+0xf040>
  4187a9:	mov    r12,rax
  4187ac:	cmp    rax,rbx
  4187af:	je     41ac75 <main@@Base+0x13ba5>
  4187b5:	cmp    r12,r14
  4187b8:	je     41ac75 <main@@Base+0x13ba5>
  4187be:	mov    ebp,DWORD PTR [rsp+0xc]
  4187c2:	mov    r15,QWORD PTR [rsp+0x10]
  4187c7:	mov    r13,QWORD PTR [rsp+0x18]
  4187cc:	test   ebp,ebp
  4187ce:	movabs rbx,0x625f73746172745f
  4187d8:	jne    4187e5 <main@@Base+0x11715>
  4187da:	test   BYTE PTR [r15+0x10],0x2
  4187df:	je     418b40 <main@@Base+0x11a70>
  4187e5:	mov    rdi,QWORD PTR [r15]
  4187e8:	mov    esi,0x1
  4187ed:	mov    edx,0x4
  4187f2:	mov    ecx,0x4
  4187f7:	call   421f20 <flatcc_builder_table_add@@Base>
  4187fc:	test   rax,rax
  4187ff:	je     41ac75 <main@@Base+0x13ba5>
  418805:	mov    DWORD PTR [rax],ebp
  418807:	jmp    418b40 <main@@Base+0x11a70>
  41880c:	mov    rsi,r14
  41880f:	cmp    rdx,r14
  418812:	je     418856 <main@@Base+0x11786>
  418814:	movzx  eax,BYTE PTR [rdx]
  418817:	cmp    al,0x2e
  418819:	je     418830 <main@@Base+0x11760>
  41881b:	cmp    al,0x22
  41881d:	jne    418848 <main@@Base+0x11778>
  41881f:	add    rdx,0x1
  418823:	mov    rax,QWORD PTR [rsp+0x20]
  418828:	mov    DWORD PTR [rax],0x0
  41882e:	jmp    418853 <main@@Base+0x11783>
  418830:	mov    ecx,0x5
  418835:	mov    rdi,r15
  418838:	mov    rsi,rdx
  41883b:	mov    rdx,r14
  41883e:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  418843:	mov    rsi,rax
  418846:	jmp    418856 <main@@Base+0x11786>
  418848:	mov    rax,QWORD PTR [rsp+0x20]
  41884d:	mov    DWORD PTR [rax],0x1
  418853:	mov    rsi,rdx
  418856:	mov    rax,r14
  418859:	sub    rax,rsi
  41885c:	cmp    rax,0x8
  418860:	jb     41886c <main@@Base+0x1179c>
  418862:	movbe  rax,QWORD PTR [rsi]
  418867:	jmp    4188fc <main@@Base+0x1182c>
  41886c:	and    al,0xf
  41886e:	add    al,0xff
  418870:	cmp    al,0x7
  418872:	ja     418949 <main@@Base+0x11879>
  418878:	movzx  eax,al
  41887b:	lea    rcx,[rip+0x1cfd2]        # 435854 <_IO_stdin_used@@Base+0x854>
  418882:	movsxd rax,DWORD PTR [rcx+rax*4]
  418886:	add    rax,rcx
  418889:	xor    r8d,r8d
  41888c:	xor    r9d,r9d
  41888f:	xor    ecx,ecx
  418891:	xor    edx,edx
  418893:	xor    ebp,ebp
  418895:	xor    ebx,ebx
  418897:	xor    edi,edi
  418899:	jmp    rax
  41889b:	movsx  r8,BYTE PTR [rsi+0x7]
  4188a0:	movsx  r9,BYTE PTR [rsi+0x6]
  4188a5:	shl    r9,0x8
  4188a9:	or     r9,r8
  4188ac:	movsx  rcx,BYTE PTR [rsi+0x5]
  4188b1:	shl    rcx,0x10
  4188b5:	or     rcx,r9
  4188b8:	movsx  rdx,BYTE PTR [rsi+0x4]
  4188bd:	shl    rdx,0x18
  4188c1:	or     rdx,rcx
  4188c4:	movsx  rbp,BYTE PTR [rsi+0x3]
  4188c9:	shl    rbp,0x20
  4188cd:	or     rbp,rdx
  4188d0:	movsx  rbx,BYTE PTR [rsi+0x2]
  4188d5:	shl    rbx,0x28
  4188d9:	or     rbx,rbp
  4188dc:	movsx  rdi,BYTE PTR [rsi+0x1]
  4188e1:	shl    rdi,0x30
  4188e5:	or     rdi,rbx
  4188e8:	movzx  eax,BYTE PTR [rsi]
  4188eb:	shl    rax,0x38
  4188ef:	or     rax,rdi
  4188f2:	movabs rbx,0x625f73746172745f
  4188fc:	movabs rcx,0x616161615f626262
  418906:	cmp    rax,rcx
  418909:	jne    418949 <main@@Base+0x11879>
  41890b:	lea    r12,[rsi+0x8]
  41890f:	mov    rax,r14
  418912:	sub    rax,r12
  418915:	cmp    rax,0x8
  418919:	jb     418951 <main@@Base+0x11881>
  41891b:	movbe  rcx,QWORD PTR [r12]
  418921:	cmp    rcx,rbx
  418924:	jne    4189f2 <main@@Base+0x11922>
  41892a:	lea    r12,[rsi+0x10]
  41892e:	mov    rax,r14
  418931:	sub    rax,r12
  418934:	cmp    rax,0x8
  418938:	jb     418a45 <main@@Base+0x11975>
  41893e:	movbe  rdx,QWORD PTR [r12]
  418944:	jmp    418ae0 <main@@Base+0x11a10>
  418949:	mov    rdi,r15
  41894c:	jmp    418b35 <main@@Base+0x11a65>
  418951:	mov    ecx,eax
  418953:	and    cl,0xf
  418956:	add    cl,0xff
  418959:	cmp    cl,0x7
  41895c:	ja     418b2f <main@@Base+0x11a5f>
  418962:	movzx  ecx,cl
  418965:	lea    rdx,[rip+0x1cf08]        # 435874 <_IO_stdin_used@@Base+0x874>
  41896c:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  418970:	add    rcx,rdx
  418973:	xor    r8d,r8d
  418976:	xor    r9d,r9d
  418979:	xor    r10d,r10d
  41897c:	xor    edi,edi
  41897e:	xor    ebp,ebp
  418980:	xor    ebx,ebx
  418982:	xor    edx,edx
  418984:	jmp    rcx
  418986:	movsx  r8,BYTE PTR [rsi+0xf]
  41898b:	movsx  r9,BYTE PTR [rsi+0xe]
  418990:	shl    r9,0x8
  418994:	or     r9,r8
  418997:	movsx  r10,BYTE PTR [rsi+0xd]
  41899c:	shl    r10,0x10
  4189a0:	or     r10,r9
  4189a3:	movsx  rdi,BYTE PTR [rsi+0xc]
  4189a8:	shl    rdi,0x18
  4189ac:	or     rdi,r10
  4189af:	movsx  rbp,BYTE PTR [rsi+0xb]
  4189b4:	shl    rbp,0x20
  4189b8:	or     rbp,rdi
  4189bb:	movsx  rbx,BYTE PTR [rsi+0xa]
  4189c0:	shl    rbx,0x28
  4189c4:	or     rbx,rbp
  4189c7:	movsx  rdx,BYTE PTR [rsi+0x9]
  4189cc:	shl    rdx,0x30
  4189d0:	or     rdx,rbx
  4189d3:	movzx  ecx,BYTE PTR [r12]
  4189d8:	shl    rcx,0x38
  4189dc:	or     rcx,rdx
  4189df:	movabs rbx,0x625f73746172745f
  4189e9:	cmp    rcx,rbx
  4189ec:	je     41892a <main@@Base+0x1185a>
  4189f2:	and    rcx,0xffffffffffffff00
  4189f9:	lea    rdx,[rbx+0x3fdfea1]
  418a00:	cmp    rcx,rdx
  418a03:	jne    418b2f <main@@Base+0x11a5f>
  418a09:	cmp    rax,0x8
  418a0d:	jl     418650 <main@@Base+0x11580>
  418a13:	mov    rax,QWORD PTR [rsp+0x20]
  418a18:	cmp    DWORD PTR [rax],0x0
  418a1b:	movzx  eax,BYTE PTR [rsi+0xf]
  418a1f:	je     4183db <main@@Base+0x1130b>
  418a25:	cmp    al,0x21
  418a27:	jl     418a31 <main@@Base+0x11961>
  418a29:	cmp    al,0x3a
  418a2b:	jne    418650 <main@@Base+0x11580>
  418a31:	add    rsi,0xf
  418a35:	mov    rax,QWORD PTR [rsp+0x20]
  418a3a:	mov    DWORD PTR [rax],0x0
  418a40:	jmp    4183e7 <main@@Base+0x11317>
  418a45:	mov    ecx,eax
  418a47:	and    cl,0xf
  418a4a:	add    cl,0xff
  418a4d:	cmp    cl,0x7
  418a50:	ja     418b2f <main@@Base+0x11a5f>
  418a56:	movzx  ecx,cl
  418a59:	lea    rdx,[rip+0x1ce34]        # 435894 <_IO_stdin_used@@Base+0x894>
  418a60:	mov    rdi,rdx
  418a63:	movsxd rdx,DWORD PTR [rdx+rcx*4]
  418a67:	add    rdx,rdi
  418a6a:	xor    r8d,r8d
  418a6d:	xor    r9d,r9d
  418a70:	xor    r10d,r10d
  418a73:	xor    edi,edi
  418a75:	xor    ebx,ebx
  418a77:	xor    ebp,ebp
  418a79:	xor    ecx,ecx
  418a7b:	jmp    rdx
  418a7d:	movsx  r8,BYTE PTR [rsi+0x17]
  418a82:	movsx  r9,BYTE PTR [rsi+0x16]
  418a87:	shl    r9,0x8
  418a8b:	or     r9,r8
  418a8e:	movsx  r10,BYTE PTR [rsi+0x15]
  418a93:	shl    r10,0x10
  418a97:	or     r10,r9
  418a9a:	movsx  rdi,BYTE PTR [rsi+0x14]
  418a9f:	shl    rdi,0x18
  418aa3:	or     rdi,r10
  418aa6:	movsx  rbx,BYTE PTR [rsi+0x13]
  418aab:	shl    rbx,0x20
  418aaf:	or     rbx,rdi
  418ab2:	movsx  rbp,BYTE PTR [rsi+0x12]
  418ab7:	shl    rbp,0x28
  418abb:	or     rbp,rbx
  418abe:	movsx  rcx,BYTE PTR [rsi+0x11]
  418ac3:	shl    rcx,0x30
  418ac7:	or     rcx,rbp
  418aca:	movzx  edx,BYTE PTR [r12]
  418acf:	shl    rdx,0x38
  418ad3:	or     rdx,rcx
  418ad6:	movabs rbx,0x625f73746172745f
  418ae0:	shr    rdx,0x18
  418ae4:	movabs rcx,0x7374657073
  418aee:	cmp    rdx,rcx
  418af1:	jne    418b2f <main@@Base+0x11a5f>
  418af3:	cmp    rax,0x6
  418af7:	jl     418650 <main@@Base+0x11580>
  418afd:	mov    rax,QWORD PTR [rsp+0x20]
  418b02:	cmp    DWORD PTR [rax],0x0
  418b05:	movzx  eax,BYTE PTR [rsi+0x15]
  418b09:	je     41840e <main@@Base+0x1133e>
  418b0f:	cmp    al,0x21
  418b11:	jl     418b1b <main@@Base+0x11a4b>
  418b13:	cmp    al,0x3a
  418b15:	jne    418650 <main@@Base+0x11580>
  418b1b:	add    rsi,0x15
  418b1f:	mov    rax,QWORD PTR [rsp+0x20]
  418b24:	mov    DWORD PTR [rax],0x0
  418b2a:	jmp    41841a <main@@Base+0x1134a>
  418b2f:	mov    rdi,r15
  418b32:	mov    rsi,r12
  418b35:	mov    rdx,r14
  418b38:	call   425cc0 <flatcc_json_parser_unmatched_symbol@@Base>
  418b3d:	mov    r12,rax
  418b40:	mov    rax,r14
  418b43:	sub    rax,r12
  418b46:	cmp    rax,0x2
  418b4a:	jl     418b6b <main@@Base+0x11a9b>
  418b4c:	cmp    BYTE PTR [r12],0x20
  418b51:	jg     418b7c <main@@Base+0x11aac>
  418b53:	jne    418b6b <main@@Base+0x11a9b>
  418b55:	cmp    BYTE PTR [r12+0x1],0x20
  418b5b:	jle    418b6b <main@@Base+0x11a9b>
  418b5d:	add    r12,0x1
  418b61:	cmp    r12,r14
  418b64:	jne    418b85 <main@@Base+0x11ab5>
  418b66:	jmp    418c20 <main@@Base+0x11b50>
  418b6b:	mov    rdi,r15
  418b6e:	mov    rsi,r12
  418b71:	mov    rdx,r14
  418b74:	call   425750 <flatcc_json_parser_space_ext@@Base>
  418b79:	mov    r12,rax
  418b7c:	cmp    r12,r14
  418b7f:	je     418c20 <main@@Base+0x11b50>
  418b85:	movzx  eax,BYTE PTR [r12]
  418b8a:	cmp    al,0x2c
  418b8c:	jne    418c28 <main@@Base+0x11b58>
  418b92:	lea    rdx,[r12+0x1]
  418b97:	mov    rax,r14
  418b9a:	sub    rax,rdx
  418b9d:	cmp    rax,0x2
  418ba1:	jl     418bc3 <main@@Base+0x11af3>
  418ba3:	cmp    BYTE PTR [rdx],0x20
  418ba6:	jg     418bd4 <main@@Base+0x11b04>
  418ba8:	jne    418bc3 <main@@Base+0x11af3>
  418baa:	cmp    BYTE PTR [r12+0x2],0x20
  418bb0:	jle    418bc3 <main@@Base+0x11af3>
  418bb2:	add    r12,0x2
  418bb6:	mov    rdx,r12
  418bb9:	cmp    rdx,r14
  418bbc:	jne    418bdd <main@@Base+0x11b0d>
  418bbe:	jmp    418c5e <main@@Base+0x11b8e>
  418bc3:	mov    rdi,r15
  418bc6:	mov    rsi,rdx
  418bc9:	mov    rdx,r14
  418bcc:	call   425750 <flatcc_json_parser_space_ext@@Base>
  418bd1:	mov    rdx,rax
  418bd4:	cmp    rdx,r14
  418bd7:	je     418c5e <main@@Base+0x11b8e>
  418bdd:	cmp    BYTE PTR [rdx],0x7d
  418be0:	jne    41880c <main@@Base+0x1173c>
  418be6:	lea    rbp,[rdx+0x1]
  418bea:	mov    rax,r14
  418bed:	sub    rax,rbp
  418bf0:	cmp    rax,0x2
  418bf4:	jl     419462 <main@@Base+0x12392>
  418bfa:	cmp    BYTE PTR [rbp+0x0],0x20
  418bfe:	jg     419473 <main@@Base+0x123a3>
  418c04:	jne    419462 <main@@Base+0x12392>
  418c0a:	cmp    BYTE PTR [rdx+0x2],0x20
  418c0e:	jle    419462 <main@@Base+0x12392>
  418c14:	add    rdx,0x2
  418c18:	mov    rbp,rdx
  418c1b:	jmp    419473 <main@@Base+0x123a3>
  418c20:	mov    rbp,r14
  418c23:	jmp    419473 <main@@Base+0x123a3>
  418c28:	cmp    al,0x7d
  418c2a:	jne    419430 <main@@Base+0x12360>
  418c30:	lea    rbp,[r12+0x1]
  418c35:	mov    rax,r14
  418c38:	sub    rax,rbp
  418c3b:	cmp    rax,0x2
  418c3f:	jl     419462 <main@@Base+0x12392>
  418c45:	cmp    BYTE PTR [rbp+0x0],0x20
  418c49:	jle    419445 <main@@Base+0x12375>
  418c4f:	mov    r15,QWORD PTR [rsp+0x10]
  418c54:	mov    r13,QWORD PTR [rsp+0x18]
  418c59:	jmp    419473 <main@@Base+0x123a3>
  418c5e:	mov    ecx,0xa
  418c63:	mov    rdi,r15
  418c66:	mov    rsi,r14
  418c69:	jmp    41943b <main@@Base+0x1236b>
  418c6e:	mov    r12,r14
  418c71:	cmp    rbx,r12
  418c74:	jne    418daa <main@@Base+0x11cda>
  418c7a:	jmp    418d6d <main@@Base+0x11c9d>
  418c7f:	test   rbp,rbp
  418c82:	jns    418ca6 <main@@Base+0x11bd6>
  418c84:	mov    ecx,0x7
  418c89:	mov    rdi,r15
  418c8c:	mov    rsi,r12
  418c8f:	mov    rdx,r14
  418c92:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  418c97:	mov    r12,rax
  418c9a:	xor    ebp,ebp
  418c9c:	cmp    rbx,r12
  418c9f:	jne    418ce4 <main@@Base+0x11c14>
  418ca1:	jmp    418cb0 <main@@Base+0x11be0>
  418ca3:	neg    rbp
  418ca6:	mov    QWORD PTR [rsp+0x30],rbp
  418cab:	cmp    rbx,r12
  418cae:	jne    418ce4 <main@@Base+0x11c14>
  418cb0:	mov    rdi,r15
  418cb3:	mov    rsi,rbx
  418cb6:	mov    rdx,r14
  418cb9:	lea    rcx,[rip+0x2b840]        # 444500 <__data_start@@Base+0x450>
  418cc0:	lea    r8,[rsp+0x30]
  418cc5:	call   415f20 <main@@Base+0xee50>
  418cca:	mov    r12,rax
  418ccd:	cmp    rax,rbx
  418cd0:	je     41ac75 <main@@Base+0x13ba5>
  418cd6:	cmp    r12,r14
  418cd9:	je     41ac75 <main@@Base+0x13ba5>
  418cdf:	mov    rbp,QWORD PTR [rsp+0x30]
  418ce4:	test   rbp,rbp
  418ce7:	movabs rbx,0x625f73746172745f
  418cf1:	jne    418cfe <main@@Base+0x11c2e>
  418cf3:	test   BYTE PTR [r15+0x10],0x2
  418cf8:	je     4192d8 <main@@Base+0x12208>
  418cfe:	mov    rdi,QWORD PTR [r15]
  418d01:	xor    esi,esi
  418d03:	mov    edx,0x8
  418d08:	mov    ecx,0x8
  418d0d:	call   421f20 <flatcc_builder_table_add@@Base>
  418d12:	test   rax,rax
  418d15:	je     41ac75 <main@@Base+0x13ba5>
  418d1b:	mov    QWORD PTR [rax],rbp
  418d1e:	jmp    4192d8 <main@@Base+0x12208>
  418d23:	mov    r12,rbx
  418d26:	cmp    rbx,r12
  418d29:	jne    418daa <main@@Base+0x11cda>
  418d2b:	jmp    418d6d <main@@Base+0x11c9d>
  418d2d:	mov    rax,QWORD PTR [rsp+0x38]
  418d32:	mov    rcx,rax
  418d35:	shr    rcx,0x20
  418d39:	je     418d58 <main@@Base+0x11c88>
  418d3b:	mov    ecx,0x7
  418d40:	mov    r15,QWORD PTR [rsp+0x10]
  418d45:	mov    rdi,r15
  418d48:	mov    rsi,r12
  418d4b:	mov    rdx,r14
  418d4e:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  418d53:	mov    r12,rax
  418d56:	jmp    418d63 <main@@Base+0x11c93>
  418d58:	mov    DWORD PTR [rsp+0xc],eax
  418d5c:	mov    ebp,eax
  418d5e:	mov    r15,QWORD PTR [rsp+0x10]
  418d63:	mov    r13,QWORD PTR [rsp+0x18]
  418d68:	cmp    rbx,r12
  418d6b:	jne    418daa <main@@Base+0x11cda>
  418d6d:	mov    rdi,r15
  418d70:	mov    rsi,rbx
  418d73:	mov    rdx,r14
  418d76:	lea    rcx,[rip+0x2b7a3]        # 444520 <__data_start@@Base+0x470>
  418d7d:	lea    r8,[rsp+0xc]
  418d82:	call   416110 <main@@Base+0xf040>
  418d87:	mov    r12,rax
  418d8a:	cmp    rax,rbx
  418d8d:	je     41ac75 <main@@Base+0x13ba5>
  418d93:	cmp    r12,r14
  418d96:	je     41ac75 <main@@Base+0x13ba5>
  418d9c:	mov    ebp,DWORD PTR [rsp+0xc]
  418da0:	mov    r15,QWORD PTR [rsp+0x10]
  418da5:	mov    r13,QWORD PTR [rsp+0x18]
  418daa:	test   ebp,ebp
  418dac:	movabs rbx,0x625f73746172745f
  418db6:	jne    418dc3 <main@@Base+0x11cf3>
  418db8:	test   BYTE PTR [r15+0x10],0x2
  418dbd:	je     4192d8 <main@@Base+0x12208>
  418dc3:	mov    rdi,QWORD PTR [r15]
  418dc6:	mov    esi,0x1
  418dcb:	mov    edx,0x4
  418dd0:	mov    ecx,0x4
  418dd5:	call   421f20 <flatcc_builder_table_add@@Base>
  418dda:	test   rax,rax
  418ddd:	je     41ac75 <main@@Base+0x13ba5>
  418de3:	mov    DWORD PTR [rax],ebp
  418de5:	jmp    4192d8 <main@@Base+0x12208>
  418dea:	mov    rsi,r14
  418ded:	cmp    rdx,r14
  418df0:	je     418e34 <main@@Base+0x11d64>
  418df2:	movzx  eax,BYTE PTR [rdx]
  418df5:	cmp    al,0x2e
  418df7:	je     418e0e <main@@Base+0x11d3e>
  418df9:	cmp    al,0x22
  418dfb:	jne    418e26 <main@@Base+0x11d56>
  418dfd:	add    rdx,0x1
  418e01:	mov    rax,QWORD PTR [rsp+0x20]
  418e06:	mov    DWORD PTR [rax],0x0
  418e0c:	jmp    418e31 <main@@Base+0x11d61>
  418e0e:	mov    ecx,0x5
  418e13:	mov    rdi,r15
  418e16:	mov    rsi,rdx
  418e19:	mov    rdx,r14
  418e1c:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  418e21:	mov    rsi,rax
  418e24:	jmp    418e34 <main@@Base+0x11d64>
  418e26:	mov    rax,QWORD PTR [rsp+0x20]
  418e2b:	mov    DWORD PTR [rax],0x1
  418e31:	mov    rsi,rdx
  418e34:	mov    rax,r14
  418e37:	sub    rax,rsi
  418e3a:	cmp    rax,0x8
  418e3e:	jb     418e4a <main@@Base+0x11d7a>
  418e40:	movbe  rax,QWORD PTR [rsi]
  418e45:	jmp    418eda <main@@Base+0x11e0a>
  418e4a:	and    al,0xf
  418e4c:	add    al,0xff
  418e4e:	cmp    al,0x7
  418e50:	ja     418f04 <main@@Base+0x11e34>
  418e56:	movzx  eax,al
  418e59:	lea    rcx,[rip+0x1ca54]        # 4358b4 <_IO_stdin_used@@Base+0x8b4>
  418e60:	movsxd rax,DWORD PTR [rcx+rax*4]
  418e64:	add    rax,rcx
  418e67:	xor    r8d,r8d
  418e6a:	xor    r9d,r9d
  418e6d:	xor    ecx,ecx
  418e6f:	xor    edx,edx
  418e71:	xor    ebp,ebp
  418e73:	xor    ebx,ebx
  418e75:	xor    edi,edi
  418e77:	jmp    rax
  418e79:	movsx  r8,BYTE PTR [rsi+0x7]
  418e7e:	movsx  r9,BYTE PTR [rsi+0x6]
  418e83:	shl    r9,0x8
  418e87:	or     r9,r8
  418e8a:	movsx  rcx,BYTE PTR [rsi+0x5]
  418e8f:	shl    rcx,0x10
  418e93:	or     rcx,r9
  418e96:	movsx  rdx,BYTE PTR [rsi+0x4]
  418e9b:	shl    rdx,0x18
  418e9f:	or     rdx,rcx
  418ea2:	movsx  rbp,BYTE PTR [rsi+0x3]
  418ea7:	shl    rbp,0x20
  418eab:	or     rbp,rdx
  418eae:	movsx  rbx,BYTE PTR [rsi+0x2]
  418eb3:	shl    rbx,0x28
  418eb7:	or     rbx,rbp
  418eba:	movsx  rdi,BYTE PTR [rsi+0x1]
  418ebf:	shl    rdi,0x30
  418ec3:	or     rdi,rbx
  418ec6:	movzx  eax,BYTE PTR [rsi]
  418ec9:	shl    rax,0x38
  418ecd:	or     rax,rdi
  418ed0:	movabs rbx,0x625f73746172745f
  418eda:	movabs rcx,0x616161615f626262
  418ee4:	cmp    rax,rcx
  418ee7:	jne    418f04 <main@@Base+0x11e34>
  418ee9:	lea    r12,[rsi+0x8]
  418eed:	mov    rax,r14
  418ef0:	sub    rax,r12
  418ef3:	cmp    rax,0x8
  418ef7:	jb     418f0c <main@@Base+0x11e3c>
  418ef9:	movbe  rcx,QWORD PTR [r12]
  418eff:	jmp    418fa4 <main@@Base+0x11ed4>
  418f04:	mov    rdi,r15
  418f07:	jmp    419036 <main@@Base+0x11f66>
  418f0c:	mov    ecx,eax
  418f0e:	and    cl,0xf
  418f11:	add    cl,0xff
  418f14:	cmp    cl,0x7
  418f17:	ja     419030 <main@@Base+0x11f60>
  418f1d:	movzx  ecx,cl
  418f20:	lea    rdx,[rip+0x1c9ad]        # 4358d4 <_IO_stdin_used@@Base+0x8d4>
  418f27:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  418f2b:	add    rcx,rdx
  418f2e:	xor    r8d,r8d
  418f31:	xor    r9d,r9d
  418f34:	xor    r10d,r10d
  418f37:	xor    edi,edi
  418f39:	xor    ebp,ebp
  418f3b:	xor    ebx,ebx
  418f3d:	xor    edx,edx
  418f3f:	jmp    rcx
  418f41:	movsx  r8,BYTE PTR [rsi+0xf]
  418f46:	movsx  r9,BYTE PTR [rsi+0xe]
  418f4b:	shl    r9,0x8
  418f4f:	or     r9,r8
  418f52:	movsx  r10,BYTE PTR [rsi+0xd]
  418f57:	shl    r10,0x10
  418f5b:	or     r10,r9
  418f5e:	movsx  rdi,BYTE PTR [rsi+0xc]
  418f63:	shl    rdi,0x18
  418f67:	or     rdi,r10
  418f6a:	movsx  rbp,BYTE PTR [rsi+0xb]
  418f6f:	shl    rbp,0x20
  418f73:	or     rbp,rdi
  418f76:	movsx  rbx,BYTE PTR [rsi+0xa]
  418f7b:	shl    rbx,0x28
  418f7f:	or     rbx,rbp
  418f82:	movsx  rdx,BYTE PTR [rsi+0x9]
  418f87:	shl    rdx,0x30
  418f8b:	or     rdx,rbx
  418f8e:	movzx  ecx,BYTE PTR [r12]
  418f93:	shl    rcx,0x38
  418f97:	or     rcx,rdx
  418f9a:	movabs rbx,0x625f73746172745f
  418fa4:	mov    rdx,rcx
  418fa7:	and    rdx,0xffffffffffffff00
  418fae:	lea    rdi,[rbx+0x3fdfea1]
  418fb5:	cmp    rdx,rdi
  418fb8:	jne    418fef <main@@Base+0x11f1f>
  418fba:	cmp    rax,0x8
  418fbe:	jl     4192bd <main@@Base+0x121ed>
  418fc4:	mov    rax,QWORD PTR [rsp+0x20]
  418fc9:	cmp    DWORD PTR [rax],0x0
  418fcc:	movzx  eax,BYTE PTR [rsi+0xf]
  418fd0:	je     419046 <main@@Base+0x11f76>
  418fd2:	cmp    al,0x21
  418fd4:	jl     418fde <main@@Base+0x11f0e>
  418fd6:	cmp    al,0x3a
  418fd8:	jne    4192bd <main@@Base+0x121ed>
  418fde:	add    rsi,0xf
  418fe2:	mov    rax,QWORD PTR [rsp+0x20]
  418fe7:	mov    DWORD PTR [rax],0x0
  418fed:	jmp    419052 <main@@Base+0x11f82>
  418fef:	cmp    rcx,rbx
  418ff2:	jne    419030 <main@@Base+0x11f60>
  418ff4:	cmp    rax,0x9
  418ff8:	jl     4192bd <main@@Base+0x121ed>
  418ffe:	mov    rax,QWORD PTR [rsp+0x20]
  419003:	cmp    DWORD PTR [rax],0x0
  419006:	movzx  eax,BYTE PTR [rsi+0x10]
  41900a:	je     4190e5 <main@@Base+0x12015>
  419010:	cmp    al,0x21
  419012:	jl     41901c <main@@Base+0x11f4c>
  419014:	cmp    al,0x3a
  419016:	jne    4192bd <main@@Base+0x121ed>
  41901c:	add    rsi,0x10
  419020:	mov    rax,QWORD PTR [rsp+0x20]
  419025:	mov    DWORD PTR [rax],0x0
  41902b:	jmp    4190f1 <main@@Base+0x12021>
  419030:	mov    rdi,r15
  419033:	mov    rsi,r12
  419036:	mov    rdx,r14
  419039:	call   425cc0 <flatcc_json_parser_unmatched_symbol@@Base>
  41903e:	mov    r12,rax
  419041:	jmp    4192d8 <main@@Base+0x12208>
  419046:	cmp    al,0x22
  419048:	jne    4192bd <main@@Base+0x121ed>
  41904e:	add    rsi,0x10
  419052:	mov    rax,r14
  419055:	sub    rax,rsi
  419058:	cmp    rax,0x2
  41905c:	jl     419076 <main@@Base+0x11fa6>
  41905e:	cmp    BYTE PTR [rsi],0x20
  419061:	jg     419084 <main@@Base+0x11fb4>
  419063:	jne    419076 <main@@Base+0x11fa6>
  419065:	cmp    BYTE PTR [rsi+0x1],0x20
  419069:	jle    419076 <main@@Base+0x11fa6>
  41906b:	add    rsi,0x1
  41906f:	cmp    rsi,r14
  419072:	jne    419089 <main@@Base+0x11fb9>
  419074:	jmp    4190d0 <main@@Base+0x12000>
  419076:	mov    rdi,r15
  419079:	mov    rdx,r14
  41907c:	call   425750 <flatcc_json_parser_space_ext@@Base>
  419081:	mov    rsi,rax
  419084:	cmp    rsi,r14
  419087:	je     4190d0 <main@@Base+0x12000>
  419089:	cmp    BYTE PTR [rsi],0x3a
  41908c:	jne    4190d0 <main@@Base+0x12000>
  41908e:	lea    rbx,[rsi+0x1]
  419092:	mov    rax,r14
  419095:	sub    rax,rbx
  419098:	cmp    rax,0x2
  41909c:	jl     419184 <main@@Base+0x120b4>
  4190a2:	cmp    BYTE PTR [rbx],0x20
  4190a5:	jg     419195 <main@@Base+0x120c5>
  4190ab:	jne    419184 <main@@Base+0x120b4>
  4190b1:	cmp    BYTE PTR [rsi+0x2],0x20
  4190b5:	jle    419184 <main@@Base+0x120b4>
  4190bb:	add    rsi,0x2
  4190bf:	mov    rbx,rsi
  4190c2:	cmp    r12,rbx
  4190c5:	jne    41919e <main@@Base+0x120ce>
  4190cb:	jmp    4192bd <main@@Base+0x121ed>
  4190d0:	mov    ecx,0x4
  4190d5:	mov    rdi,r15
  4190d8:	mov    rdx,r14
  4190db:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  4190e0:	jmp    419192 <main@@Base+0x120c2>
  4190e5:	cmp    al,0x22
  4190e7:	jne    4192bd <main@@Base+0x121ed>
  4190ed:	add    rsi,0x11
  4190f1:	mov    rax,r14
  4190f4:	sub    rax,rsi
  4190f7:	cmp    rax,0x2
  4190fb:	jl     419115 <main@@Base+0x12045>
  4190fd:	cmp    BYTE PTR [rsi],0x20
  419100:	jg     419123 <main@@Base+0x12053>
  419102:	jne    419115 <main@@Base+0x12045>
  419104:	cmp    BYTE PTR [rsi+0x1],0x20
  419108:	jle    419115 <main@@Base+0x12045>
  41910a:	add    rsi,0x1
  41910e:	cmp    rsi,r14
  419111:	jne    419128 <main@@Base+0x12058>
  419113:	jmp    41916f <main@@Base+0x1209f>
  419115:	mov    rdi,r15
  419118:	mov    rdx,r14
  41911b:	call   425750 <flatcc_json_parser_space_ext@@Base>
  419120:	mov    rsi,rax
  419123:	cmp    rsi,r14
  419126:	je     41916f <main@@Base+0x1209f>
  419128:	cmp    BYTE PTR [rsi],0x3a
  41912b:	jne    41916f <main@@Base+0x1209f>
  41912d:	lea    rbx,[rsi+0x1]
  419131:	mov    rax,r14
  419134:	sub    rax,rbx
  419137:	cmp    rax,0x2
  41913b:	jl     419230 <main@@Base+0x12160>
  419141:	cmp    BYTE PTR [rbx],0x20
  419144:	jg     419241 <main@@Base+0x12171>
  41914a:	jne    419230 <main@@Base+0x12160>
  419150:	cmp    BYTE PTR [rsi+0x2],0x20
  419154:	jle    419230 <main@@Base+0x12160>
  41915a:	add    rsi,0x2
  41915e:	mov    rbx,rsi
  419161:	cmp    r12,rbx
  419164:	jne    419246 <main@@Base+0x12176>
  41916a:	jmp    4192bd <main@@Base+0x121ed>
  41916f:	mov    ecx,0x4
  419174:	mov    rdi,r15
  419177:	mov    rdx,r14
  41917a:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  41917f:	jmp    41923e <main@@Base+0x1216e>
  419184:	mov    rdi,r15
  419187:	mov    rsi,rbx
  41918a:	mov    rdx,r14
  41918d:	call   425750 <flatcc_json_parser_space_ext@@Base>
  419192:	mov    rbx,rax
  419195:	cmp    r12,rbx
  419198:	je     4192bd <main@@Base+0x121ed>
  41919e:	mov    QWORD PTR [rsp+0x38],0x0
  4191a7:	mov    DWORD PTR [rsp+0xc],0x0
  4191af:	mov    QWORD PTR [rsp+0x30],0x0
  4191b8:	cmp    rbx,r14
  4191bb:	je     41920a <main@@Base+0x1213a>
  4191bd:	mov    rdi,r15
  4191c0:	mov    rsi,rbx
  4191c3:	mov    rdx,r14
  4191c6:	lea    rcx,[rsp+0xc]
  4191cb:	lea    r8,[rsp+0x38]
  4191d0:	call   427360 <flatcc_json_parser_integer@@Base>
  4191d5:	cmp    rax,rbx
  4191d8:	je     41921d <main@@Base+0x1214d>
  4191da:	mov    r12,rax
  4191dd:	mov    rbp,QWORD PTR [rsp+0x38]
  4191e2:	cmp    DWORD PTR [rsp+0xc],0x0
  4191e7:	je     418c7f <main@@Base+0x11baf>
  4191ed:	movabs rax,0x8000000000000000
  4191f7:	cmp    rbp,rax
  4191fa:	jbe    418ca3 <main@@Base+0x11bd3>
  419200:	mov    ecx,0x8
  419205:	jmp    418c89 <main@@Base+0x11bb9>
  41920a:	xor    ebp,ebp
  41920c:	mov    r12,r14
  41920f:	cmp    rbx,r12
  419212:	jne    418ce4 <main@@Base+0x11c14>
  419218:	jmp    418cb0 <main@@Base+0x11be0>
  41921d:	xor    ebp,ebp
  41921f:	mov    r12,rbx
  419222:	cmp    rbx,r12
  419225:	jne    418ce4 <main@@Base+0x11c14>
  41922b:	jmp    418cb0 <main@@Base+0x11be0>
  419230:	mov    rdi,r15
  419233:	mov    rsi,rbx
  419236:	mov    rdx,r14
  419239:	call   425750 <flatcc_json_parser_space_ext@@Base>
  41923e:	mov    rbx,rax
  419241:	cmp    r12,rbx
  419244:	je     4192bd <main@@Base+0x121ed>
  419246:	mov    QWORD PTR [rsp+0x38],0x0
  41924f:	mov    DWORD PTR [rsp+0x30],0x0
  419257:	mov    DWORD PTR [rsp+0xc],0x0
  41925f:	xor    ebp,ebp
  419261:	cmp    rbx,r14
  419264:	je     418c6e <main@@Base+0x11b9e>
  41926a:	mov    rdi,r15
  41926d:	mov    rsi,rbx
  419270:	mov    rdx,r14
  419273:	lea    rcx,[rsp+0x30]
  419278:	lea    r8,[rsp+0x38]
  41927d:	call   427360 <flatcc_json_parser_integer@@Base>
  419282:	cmp    rax,rbx
  419285:	je     418d23 <main@@Base+0x11c53>
  41928b:	mov    r12,rax
  41928e:	cmp    DWORD PTR [rsp+0x30],0x0
  419293:	je     418d2d <main@@Base+0x11c5d>
  419299:	mov    ecx,0x8
  41929e:	mov    rdi,r15
  4192a1:	mov    rsi,r12
  4192a4:	mov    rdx,r14
  4192a7:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  4192ac:	mov    r12,rax
  4192af:	cmp    rbx,r12
  4192b2:	jne    418daa <main@@Base+0x11cda>
  4192b8:	jmp    418d6d <main@@Base+0x11c9d>
  4192bd:	mov    rdi,r15
  4192c0:	mov    rsi,r12
  4192c3:	mov    rdx,r14
  4192c6:	call   425cc0 <flatcc_json_parser_unmatched_symbol@@Base>
  4192cb:	mov    r12,rax
  4192ce:	movabs rbx,0x625f73746172745f
  4192d8:	mov    rax,r14
  4192db:	sub    rax,r12
  4192de:	cmp    rax,0x2
  4192e2:	jl     419303 <main@@Base+0x12233>
  4192e4:	cmp    BYTE PTR [r12],0x20
  4192e9:	jg     419314 <main@@Base+0x12244>
  4192eb:	jne    419303 <main@@Base+0x12233>
  4192ed:	cmp    BYTE PTR [r12+0x1],0x20
  4192f3:	jle    419303 <main@@Base+0x12233>
  4192f5:	add    r12,0x1
  4192f9:	cmp    r12,r14
  4192fc:	jne    41931d <main@@Base+0x1224d>
  4192fe:	jmp    41939d <main@@Base+0x122cd>
  419303:	mov    rdi,r15
  419306:	mov    rsi,r12
  419309:	mov    rdx,r14
  41930c:	call   425750 <flatcc_json_parser_space_ext@@Base>
  419311:	mov    r12,rax
  419314:	cmp    r12,r14
  419317:	je     41939d <main@@Base+0x122cd>
  41931d:	movzx  eax,BYTE PTR [r12]
  419322:	cmp    al,0x2c
  419324:	jne    4193a2 <main@@Base+0x122d2>
  419326:	lea    rdx,[r12+0x1]
  41932b:	mov    rax,r14
  41932e:	sub    rax,rdx
  419331:	cmp    rax,0x2
  419335:	jl     419357 <main@@Base+0x12287>
  419337:	cmp    BYTE PTR [rdx],0x20
  41933a:	jg     419368 <main@@Base+0x12298>
  41933c:	jne    419357 <main@@Base+0x12287>
  41933e:	cmp    BYTE PTR [r12+0x2],0x20
  419344:	jle    419357 <main@@Base+0x12287>
  419346:	add    r12,0x2
  41934a:	mov    rdx,r12
  41934d:	cmp    rdx,r14
  419350:	jne    41936d <main@@Base+0x1229d>
  419352:	jmp    4193e0 <main@@Base+0x12310>
  419357:	mov    rdi,r15
  41935a:	mov    rsi,rdx
  41935d:	mov    rdx,r14
  419360:	call   425750 <flatcc_json_parser_space_ext@@Base>
  419365:	mov    rdx,rax
  419368:	cmp    rdx,r14
  41936b:	je     4193e0 <main@@Base+0x12310>
  41936d:	cmp    BYTE PTR [rdx],0x7d
  419370:	jne    418dea <main@@Base+0x11d1a>
  419376:	lea    rbp,[rdx+0x1]
  41937a:	mov    rax,r14
  41937d:	sub    rax,rbp
  419380:	cmp    rax,0x2
  419384:	jl     4193d0 <main@@Base+0x12300>
  419386:	cmp    BYTE PTR [rbp+0x0],0x20
  41938a:	jg     419403 <main@@Base+0x12333>
  41938c:	jne    4193d0 <main@@Base+0x12300>
  41938e:	cmp    BYTE PTR [rdx+0x2],0x20
  419392:	jle    4193d0 <main@@Base+0x12300>
  419394:	add    rdx,0x2
  419398:	mov    rbp,rdx
  41939b:	jmp    419403 <main@@Base+0x12333>
  41939d:	mov    rbp,r14
  4193a0:	jmp    419403 <main@@Base+0x12333>
  4193a2:	cmp    al,0x7d
  4193a4:	jne    4193ed <main@@Base+0x1231d>
  4193a6:	lea    rbp,[r12+0x1]
  4193ab:	mov    rax,r14
  4193ae:	sub    rax,rbp
  4193b1:	cmp    rax,0x2
  4193b5:	jl     4193d0 <main@@Base+0x12300>
  4193b7:	cmp    BYTE PTR [rbp+0x0],0x20
  4193bb:	jg     419403 <main@@Base+0x12333>
  4193bd:	jne    4193d0 <main@@Base+0x12300>
  4193bf:	cmp    BYTE PTR [r12+0x2],0x20
  4193c5:	jle    4193d0 <main@@Base+0x12300>
  4193c7:	add    r12,0x2
  4193cb:	mov    rbp,r12
  4193ce:	jmp    419403 <main@@Base+0x12333>
  4193d0:	mov    rdi,r15
  4193d3:	mov    rsi,rbp
  4193d6:	mov    rdx,r14
  4193d9:	call   425750 <flatcc_json_parser_space_ext@@Base>
  4193de:	jmp    419400 <main@@Base+0x12330>
  4193e0:	mov    ecx,0xa
  4193e5:	mov    rdi,r15
  4193e8:	mov    rsi,r14
  4193eb:	jmp    4193f8 <main@@Base+0x12328>
  4193ed:	mov    ecx,0xa
  4193f2:	mov    rdi,r15
  4193f5:	mov    rsi,r12
  4193f8:	mov    rdx,r14
  4193fb:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  419400:	mov    rbp,rax
  419403:	mov    rax,QWORD PTR [rsp+0x28]
  419408:	cmp    DWORD PTR [rax],0x0
  41940b:	jne    41ac7d <main@@Base+0x13bad>
  419411:	mov    rdi,QWORD PTR [r15]
  419414:	call   4215b0 <flatcc_builder_end_table@@Base>
  419419:	test   eax,eax
  41941b:	je     41ac7d <main@@Base+0x13bad>
  419421:	mov    ebx,eax
  419423:	mov    rdi,QWORD PTR [r15]
  419426:	mov    esi,0x1
  41942b:	jmp    41ab71 <main@@Base+0x13aa1>
  419430:	mov    ecx,0xa
  419435:	mov    rdi,r15
  419438:	mov    rsi,r12
  41943b:	mov    rdx,r14
  41943e:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  419443:	jmp    419470 <main@@Base+0x123a0>
  419445:	mov    r15,QWORD PTR [rsp+0x10]
  41944a:	mov    r13,QWORD PTR [rsp+0x18]
  41944f:	jne    419462 <main@@Base+0x12392>
  419451:	cmp    BYTE PTR [r12+0x2],0x20
  419457:	jle    419462 <main@@Base+0x12392>
  419459:	add    r12,0x2
  41945d:	mov    rbp,r12
  419460:	jmp    419473 <main@@Base+0x123a3>
  419462:	mov    rdi,r15
  419465:	mov    rsi,rbp
  419468:	mov    rdx,r14
  41946b:	call   425750 <flatcc_json_parser_space_ext@@Base>
  419470:	mov    rbp,rax
  419473:	mov    rax,QWORD PTR [rsp+0x28]
  419478:	cmp    DWORD PTR [rax],0x0
  41947b:	jne    41ac7d <main@@Base+0x13bad>
  419481:	mov    rdi,QWORD PTR [r15]
  419484:	call   4215b0 <flatcc_builder_end_table@@Base>
  419489:	test   eax,eax
  41948b:	je     41ac7d <main@@Base+0x13bad>
  419491:	mov    ebx,eax
  419493:	mov    rdi,QWORD PTR [r15]
  419496:	mov    esi,0x2
  41949b:	jmp    41ab71 <main@@Base+0x13aa1>
  4194a0:	mov    rbp,r14
  4194a3:	cmp    rbx,rbp
  4194a6:	jne    419531 <main@@Base+0x12461>
  4194ac:	jmp    4194fb <main@@Base+0x1242b>
  4194ae:	mov    rbp,rbx
  4194b1:	cmp    rbx,rbp
  4194b4:	jne    419531 <main@@Base+0x12461>
  4194b6:	jmp    4194fb <main@@Base+0x1242b>
  4194b8:	mov    DWORD PTR [rsp+0xc],eax
  4194bc:	mov    r12d,eax
  4194bf:	mov    r15,QWORD PTR [rsp+0x10]
  4194c4:	mov    rax,rsi
  4194c7:	jmp    41a8ab <main@@Base+0x137db>
  4194cc:	mov    rax,QWORD PTR [rsp+0x38]
  4194d1:	mov    rcx,rax
  4194d4:	shr    rcx,0x20
  4194d8:	je     41957b <main@@Base+0x124ab>
  4194de:	mov    ecx,0x7
  4194e3:	mov    rdi,QWORD PTR [rsp+0x10]
  4194e8:	mov    rsi,rbp
  4194eb:	mov    rdx,r14
  4194ee:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  4194f3:	mov    rbp,rax
  4194f6:	cmp    rbx,rbp
  4194f9:	jne    419531 <main@@Base+0x12461>
  4194fb:	mov    rdi,QWORD PTR [rsp+0x10]
  419500:	mov    rsi,rbx
  419503:	mov    rdx,r14
  419506:	lea    rcx,[rip+0x2b0d3]        # 4445e0 <__data_start@@Base+0x530>
  41950d:	lea    r8,[rsp+0xc]
  419512:	call   416110 <main@@Base+0xf040>
  419517:	mov    rbp,rax
  41951a:	cmp    rax,rbx
  41951d:	je     41ac9f <main@@Base+0x13bcf>
  419523:	cmp    rbp,r14
  419526:	je     41ac9f <main@@Base+0x13bcf>
  41952c:	mov    r15d,DWORD PTR [rsp+0xc]
  419531:	test   r15d,r15d
  419534:	jne    419541 <main@@Base+0x12471>
  419536:	mov    rax,QWORD PTR [rsp+0x10]
  41953b:	test   BYTE PTR [rax+0x10],0x2
  41953f:	je     419569 <main@@Base+0x12499>
  419541:	mov    rax,QWORD PTR [rsp+0x10]
  419546:	mov    rdi,QWORD PTR [rax]
  419549:	mov    esi,0x8
  41954e:	mov    edx,0x4
  419553:	mov    ecx,0x4
  419558:	call   421f20 <flatcc_builder_table_add@@Base>
  41955d:	test   rax,rax
  419560:	je     41ac9f <main@@Base+0x13bcf>
  419566:	mov    DWORD PTR [rax],r15d
  419569:	mov    r15,QWORD PTR [rsp+0x10]
  41956e:	mov    r13,QWORD PTR [rsp+0x18]
  419573:	mov    rdx,rbp
  419576:	jmp    41aa34 <main@@Base+0x13964>
  41957b:	mov    DWORD PTR [rsp+0xc],eax
  41957f:	mov    r15d,eax
  419582:	cmp    rbx,rbp
  419585:	jne    419531 <main@@Base+0x12461>
  419587:	jmp    4194fb <main@@Base+0x1242b>
  41958c:	mov    r10,r14
  41958f:	cmp    rsi,r14
  419592:	je     4195d3 <main@@Base+0x12503>
  419594:	movzx  eax,BYTE PTR [rsi]
  419597:	cmp    al,0x2e
  419599:	je     4195b0 <main@@Base+0x124e0>
  41959b:	cmp    al,0x22
  41959d:	jne    4195c5 <main@@Base+0x124f5>
  41959f:	add    rsi,0x1
  4195a3:	mov    rax,QWORD PTR [rsp+0x20]
  4195a8:	mov    DWORD PTR [rax],0x0
  4195ae:	jmp    4195d0 <main@@Base+0x12500>
  4195b0:	mov    ecx,0x5
  4195b5:	mov    rdi,r15
  4195b8:	mov    rdx,r14
  4195bb:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  4195c0:	mov    r10,rax
  4195c3:	jmp    4195d3 <main@@Base+0x12503>
  4195c5:	mov    rax,QWORD PTR [rsp+0x20]
  4195ca:	mov    DWORD PTR [rax],0x1
  4195d0:	mov    r10,rsi
  4195d3:	mov    r13,r14
  4195d6:	sub    r13,r10
  4195d9:	cmp    r13,0x8
  4195dd:	jb     4195e9 <main@@Base+0x12519>
  4195df:	movbe  rbx,QWORD PTR [r10]
  4195e4:	jmp    419672 <main@@Base+0x125a2>
  4195e9:	mov    eax,r13d
  4195ec:	and    al,0xf
  4195ee:	add    al,0xff
  4195f0:	cmp    al,0x7
  4195f2:	ja     41a09a <main@@Base+0x12fca>
  4195f8:	movzx  eax,al
  4195fb:	lea    rcx,[rip+0x1c1d2]        # 4357d4 <_IO_stdin_used@@Base+0x7d4>
  419602:	movsxd rsi,DWORD PTR [rcx+rax*4]
  419606:	add    rsi,rcx
  419609:	xor    r8d,r8d
  41960c:	xor    eax,eax
  41960e:	xor    ecx,ecx
  419610:	xor    edx,edx
  419612:	xor    edi,edi
  419614:	xor    ebx,ebx
  419616:	xor    ebp,ebp
  419618:	jmp    rsi
  41961a:	movsx  r8,BYTE PTR [r10+0x7]
  41961f:	movsx  rax,BYTE PTR [r10+0x6]
  419624:	shl    rax,0x8
  419628:	or     rax,r8
  41962b:	movsx  rcx,BYTE PTR [r10+0x5]
  419630:	shl    rcx,0x10
  419634:	or     rcx,rax
  419637:	movsx  rdx,BYTE PTR [r10+0x4]
  41963c:	shl    rdx,0x18
  419640:	or     rdx,rcx
  419643:	movsx  rdi,BYTE PTR [r10+0x3]
  419648:	shl    rdi,0x20
  41964c:	or     rdi,rdx
  41964f:	movsx  rbx,BYTE PTR [r10+0x2]
  419654:	shl    rbx,0x28
  419658:	or     rbx,rdi
  41965b:	movsx  rbp,BYTE PTR [r10+0x1]
  419660:	shl    rbp,0x30
  419664:	or     rbp,rbx
  419667:	movzx  ebx,BYTE PTR [r10]
  41966b:	shl    rbx,0x38
  41966f:	or     rbx,rbp
  419672:	movabs rdx,0x6363636300000000
  41967c:	movabs rsi,0x6262626200000000
  419686:	cmp    rbx,rdx
  419689:	movabs rcx,0x616161615f626262
  419693:	jae    4196c5 <main@@Base+0x125f5>
  419695:	lea    rax,[rcx-0x2e302f2e]
  41969c:	cmp    rbx,rax
  41969f:	jne    41971d <main@@Base+0x1264d>
  4196a1:	lea    r12,[r10+0x8]
  4196a5:	mov    rax,r14
  4196a8:	sub    rax,r12
  4196ab:	cmp    rax,0x8
  4196af:	jb     4197e0 <main@@Base+0x12710>
  4196b5:	movbe  rcx,QWORD PTR [r12]
  4196bb:	mov    r13,QWORD PTR [rsp+0x18]
  4196c0:	jmp    419872 <main@@Base+0x127a2>
  4196c5:	lea    rax,[rdx+0x31323334]
  4196cc:	cmp    rbx,rax
  4196cf:	jne    419782 <main@@Base+0x126b2>
  4196d5:	mov    rbx,r10
  4196d8:	cmp    r13,0x9
  4196dc:	mov    r13,QWORD PTR [rsp+0x18]
  4196e1:	jl     419aa2 <main@@Base+0x129d2>
  4196e7:	mov    rax,QWORD PTR [rsp+0x20]
  4196ec:	cmp    DWORD PTR [rax],0x0
  4196ef:	movzx  eax,BYTE PTR [r10+0x8]
  4196f4:	je     4198cf <main@@Base+0x127ff>
  4196fa:	cmp    al,0x21
  4196fc:	jl     419709 <main@@Base+0x12639>
  4196fe:	mov    rbx,r10
  419701:	cmp    al,0x3a
  419703:	jne    419aa2 <main@@Base+0x129d2>
  419709:	lea    rsi,[r10+0x8]
  41970d:	mov    rax,QWORD PTR [rsp+0x20]
  419712:	mov    DWORD PTR [rax],0x0
  419718:	jmp    4198de <main@@Base+0x1280e>
  41971d:	mov    r12,rbx
  419720:	movabs rax,0xffffffff00000000
  41972a:	and    r12,rax
  41972d:	lea    rax,[rcx-0x5f626262]
  419734:	cmp    r12,rax
  419737:	jne    419ee8 <main@@Base+0x12e18>
  41973d:	mov    rax,r10
  419740:	cmp    r13,0x5
  419744:	jl     419eb8 <main@@Base+0x12de8>
  41974a:	mov    rax,QWORD PTR [rsp+0x20]
  41974f:	cmp    DWORD PTR [rax],0x0
  419752:	movzx  ecx,BYTE PTR [r10+0x4]
  419757:	je     419908 <main@@Base+0x12838>
  41975d:	cmp    cl,0x21
  419760:	jl     41976e <main@@Base+0x1269e>
  419762:	mov    rax,r10
  419765:	cmp    cl,0x3a
  419768:	jne    419eb8 <main@@Base+0x12de8>
  41976e:	lea    rsi,[r10+0x4]
  419772:	mov    rax,QWORD PTR [rsp+0x20]
  419777:	mov    DWORD PTR [rax],0x0
  41977d:	jmp    419918 <main@@Base+0x12848>
  419782:	mov    rax,rbx
  419785:	movabs rcx,0xffffffff00000000
  41978f:	and    rax,rcx
  419792:	cmp    rax,rdx
  419795:	jne    41a04f <main@@Base+0x12f7f>
  41979b:	mov    rax,r10
  41979e:	cmp    r13,0x5
  4197a2:	jl     41a000 <main@@Base+0x12f30>
  4197a8:	mov    rax,QWORD PTR [rsp+0x20]
  4197ad:	cmp    DWORD PTR [rax],0x0
  4197b0:	movzx  ecx,BYTE PTR [r10+0x4]
  4197b5:	je     419942 <main@@Base+0x12872>
  4197bb:	cmp    cl,0x21
  4197be:	jl     4197cc <main@@Base+0x126fc>
  4197c0:	mov    rax,r10
  4197c3:	cmp    cl,0x3a
  4197c6:	jne    41a000 <main@@Base+0x12f30>
  4197cc:	lea    rsi,[r10+0x4]
  4197d0:	mov    rax,QWORD PTR [rsp+0x20]
  4197d5:	mov    DWORD PTR [rax],0x0
  4197db:	jmp    419952 <main@@Base+0x12882>
  4197e0:	mov    ecx,eax
  4197e2:	and    cl,0xf
  4197e5:	add    cl,0xff
  4197e8:	cmp    cl,0x7
  4197eb:	mov    r13,QWORD PTR [rsp+0x18]
  4197f0:	ja     41aa23 <main@@Base+0x13953>
  4197f6:	movzx  ecx,cl
  4197f9:	lea    rdx,[rip+0x1c034]        # 435834 <_IO_stdin_used@@Base+0x834>
  419800:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  419804:	add    rcx,rdx
  419807:	xor    r8d,r8d
  41980a:	xor    r9d,r9d
  41980d:	xor    edx,edx
  41980f:	xor    esi,esi
  419811:	xor    ebx,ebx
  419813:	xor    edi,edi
  419815:	xor    ebp,ebp
  419817:	jmp    rcx
  419819:	movsx  r8,BYTE PTR [r10+0xf]
  41981e:	movsx  r9,BYTE PTR [r10+0xe]
  419823:	shl    r9,0x8
  419827:	or     r9,r8
  41982a:	movsx  rdx,BYTE PTR [r10+0xd]
  41982f:	shl    rdx,0x10
  419833:	or     rdx,r9
  419836:	movsx  rsi,BYTE PTR [r10+0xc]
  41983b:	shl    rsi,0x18
  41983f:	or     rsi,rdx
  419842:	movsx  rbx,BYTE PTR [r10+0xb]
  419847:	shl    rbx,0x20
  41984b:	or     rbx,rsi
  41984e:	movsx  rdi,BYTE PTR [r10+0xa]
  419853:	shl    rdi,0x28
  419857:	or     rdi,rbx
  41985a:	movsx  rbp,BYTE PTR [r10+0x9]
  41985f:	shl    rbp,0x30
  419863:	or     rbp,rdi
  419866:	movzx  ecx,BYTE PTR [r12]
  41986b:	shl    rcx,0x38
  41986f:	or     rcx,rbp
  419872:	movabs rdx,0xff00000000000000
  41987c:	and    rcx,rdx
  41987f:	movabs rdx,0x3500000000000000
  419889:	cmp    rcx,rdx
  41988c:	jne    41aa23 <main@@Base+0x13953>
  419892:	cmp    rax,0x2
  419896:	jl     41aa23 <main@@Base+0x13953>
  41989c:	mov    rax,QWORD PTR [rsp+0x20]
  4198a1:	cmp    DWORD PTR [rax],0x0
  4198a4:	movzx  eax,BYTE PTR [r10+0x9]
  4198a9:	je     41997c <main@@Base+0x128ac>
  4198af:	cmp    al,0x21
  4198b1:	jl     4198bb <main@@Base+0x127eb>
  4198b3:	cmp    al,0x3a
  4198b5:	jne    41aa23 <main@@Base+0x13953>
  4198bb:	add    r10,0x9
  4198bf:	mov    rax,QWORD PTR [rsp+0x20]
  4198c4:	mov    DWORD PTR [rax],0x0
  4198ca:	jmp    419988 <main@@Base+0x128b8>
  4198cf:	mov    rbx,r10
  4198d2:	cmp    al,0x22
  4198d4:	jne    419aa2 <main@@Base+0x129d2>
  4198da:	lea    rsi,[r10+0x9]
  4198de:	mov    rax,r14
  4198e1:	sub    rax,rsi
  4198e4:	cmp    rax,0x2
  4198e8:	jl     419a3b <main@@Base+0x1296b>
  4198ee:	cmp    BYTE PTR [rsi],0x20
  4198f1:	jle    419a25 <main@@Base+0x12955>
  4198f7:	mov    rbp,r10
  4198fa:	cmp    rsi,r14
  4198fd:	jne    419a51 <main@@Base+0x12981>
  419903:	jmp    419a7c <main@@Base+0x129ac>
  419908:	mov    rax,r10
  41990b:	cmp    cl,0x22
  41990e:	jne    419eb8 <main@@Base+0x12de8>
  419914:	lea    rsi,[r10+0x5]
  419918:	mov    rax,r14
  41991b:	sub    rax,rsi
  41991e:	cmp    rax,0x2
  419922:	jl     419d37 <main@@Base+0x12c67>
  419928:	cmp    BYTE PTR [rsi],0x20
  41992b:	jle    419d21 <main@@Base+0x12c51>
  419931:	mov    rbp,r10
  419934:	cmp    rsi,r14
  419937:	jne    419d4d <main@@Base+0x12c7d>
  41993d:	jmp    419d8b <main@@Base+0x12cbb>
  419942:	mov    rax,r10
  419945:	cmp    cl,0x22
  419948:	jne    41a000 <main@@Base+0x12f30>
  41994e:	lea    rsi,[r10+0x5]
  419952:	mov    rax,r14
  419955:	sub    rax,rsi
  419958:	cmp    rax,0x2
  41995c:	jl     419db6 <main@@Base+0x12ce6>
  419962:	cmp    BYTE PTR [rsi],0x20
  419965:	jle    419da0 <main@@Base+0x12cd0>
  41996b:	mov    rbp,r10
  41996e:	cmp    rsi,r14
  419971:	jne    419dcc <main@@Base+0x12cfc>
  419977:	jmp    419e0a <main@@Base+0x12d3a>
  41997c:	cmp    al,0x22
  41997e:	jne    41aa23 <main@@Base+0x13953>
  419984:	add    r10,0xa
  419988:	mov    rax,r14
  41998b:	sub    rax,r10
  41998e:	cmp    rax,0x2
  419992:	jl     4199ae <main@@Base+0x128de>
  419994:	cmp    BYTE PTR [r10],0x20
  419998:	jg     4199bf <main@@Base+0x128ef>
  41999a:	jne    4199ae <main@@Base+0x128de>
  41999c:	cmp    BYTE PTR [r10+0x1],0x20
  4199a1:	jle    4199ae <main@@Base+0x128de>
  4199a3:	add    r10,0x1
  4199a7:	cmp    r10,r14
  4199aa:	jne    4199c4 <main@@Base+0x128f4>
  4199ac:	jmp    419a0d <main@@Base+0x1293d>
  4199ae:	mov    rdi,r15
  4199b1:	mov    rsi,r10
  4199b4:	mov    rdx,r14
  4199b7:	call   425750 <flatcc_json_parser_space_ext@@Base>
  4199bc:	mov    r10,rax
  4199bf:	cmp    r10,r14
  4199c2:	je     419a0d <main@@Base+0x1293d>
  4199c4:	cmp    BYTE PTR [r10],0x3a
  4199c8:	jne    419a0d <main@@Base+0x1293d>
  4199ca:	lea    rbx,[r10+0x1]
  4199ce:	mov    rax,r14
  4199d1:	sub    rax,rbx
  4199d4:	cmp    rax,0x2
  4199d8:	jl     41a0ee <main@@Base+0x1301e>
  4199de:	cmp    BYTE PTR [rbx],0x20
  4199e1:	jg     41a0ff <main@@Base+0x1302f>
  4199e7:	jne    41a0ee <main@@Base+0x1301e>
  4199ed:	cmp    BYTE PTR [r10+0x2],0x20
  4199f2:	jle    41a0ee <main@@Base+0x1301e>
  4199f8:	add    r10,0x2
  4199fc:	mov    rbx,r10
  4199ff:	cmp    r12,rbx
  419a02:	jne    41a108 <main@@Base+0x13038>
  419a08:	jmp    41aa23 <main@@Base+0x13953>
  419a0d:	mov    ecx,0x4
  419a12:	mov    rdi,r15
  419a15:	mov    rsi,r10
  419a18:	mov    rdx,r14
  419a1b:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  419a20:	jmp    41a0fc <main@@Base+0x1302c>
  419a25:	jne    419a3b <main@@Base+0x1296b>
  419a27:	cmp    BYTE PTR [rsi+0x1],0x20
  419a2b:	jle    419a3b <main@@Base+0x1296b>
  419a2d:	mov    rbp,r10
  419a30:	add    rsi,0x1
  419a34:	cmp    rsi,r14
  419a37:	jne    419a51 <main@@Base+0x12981>
  419a39:	jmp    419a7c <main@@Base+0x129ac>
  419a3b:	mov    rbp,r10
  419a3e:	mov    rdi,r15
  419a41:	mov    rdx,r14
  419a44:	call   425750 <flatcc_json_parser_space_ext@@Base>
  419a49:	mov    rsi,rax
  419a4c:	cmp    rsi,r14
  419a4f:	je     419a7c <main@@Base+0x129ac>
  419a51:	cmp    BYTE PTR [rsi],0x3a
  419a54:	jne    419a7c <main@@Base+0x129ac>
  419a56:	lea    rbx,[rsi+0x1]
  419a5a:	mov    rax,r14
  419a5d:	sub    rax,rbx
  419a60:	cmp    rax,0x2
  419a64:	jl     419a8e <main@@Base+0x129be>
  419a66:	cmp    BYTE PTR [rbx],0x20
  419a69:	jg     419a9f <main@@Base+0x129cf>
  419a6b:	jne    419a8e <main@@Base+0x129be>
  419a6d:	cmp    BYTE PTR [rsi+0x2],0x20
  419a71:	jle    419a8e <main@@Base+0x129be>
  419a73:	add    rsi,0x2
  419a77:	mov    rbx,rsi
  419a7a:	jmp    419a9f <main@@Base+0x129cf>
  419a7c:	mov    ecx,0x4
  419a81:	mov    rdi,r15
  419a84:	mov    rdx,r14
  419a87:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  419a8c:	jmp    419a9c <main@@Base+0x129cc>
  419a8e:	mov    rdi,r15
  419a91:	mov    rsi,rbx
  419a94:	mov    rdx,r14
  419a97:	call   425750 <flatcc_json_parser_space_ext@@Base>
  419a9c:	mov    rbx,rax
  419a9f:	mov    r10,rbp
  419aa2:	cmp    r10,rbx
  419aa5:	je     419b17 <main@@Base+0x12a47>
  419aa7:	mov    QWORD PTR [rsp+0x38],0x0
  419ab0:	mov    DWORD PTR [rsp+0xc],0x0
  419ab8:	mov    QWORD PTR [rsp+0x30],0x0
  419ac1:	cmp    rbx,r14
  419ac4:	je     419b32 <main@@Base+0x12a62>
  419ac6:	mov    rdi,r15
  419ac9:	mov    rsi,rbx
  419acc:	mov    rdx,r14
  419acf:	lea    rcx,[rsp+0xc]
  419ad4:	lea    r8,[rsp+0x38]
  419ad9:	call   427360 <flatcc_json_parser_integer@@Base>
  419ade:	cmp    rax,rbx
  419ae1:	je     419c2f <main@@Base+0x12b5f>
  419ae7:	mov    rdx,rax
  419aea:	mov    rbp,QWORD PTR [rsp+0x38]
  419aef:	cmp    DWORD PTR [rsp+0xc],0x0
  419af4:	je     419c3b <main@@Base+0x12b6b>
  419afa:	movabs rax,0x8000000000000000
  419b04:	cmp    rbp,rax
  419b07:	jbe    419c5f <main@@Base+0x12b8f>
  419b0d:	mov    ecx,0x8
  419b12:	jmp    419c45 <main@@Base+0x12b75>
  419b17:	lea    r12,[r10+0x8]
  419b1b:	mov    rax,r14
  419b1e:	sub    rax,r12
  419b21:	cmp    rax,0x8
  419b25:	jb     419b45 <main@@Base+0x12a75>
  419b27:	movbe  rcx,QWORD PTR [r12]
  419b2d:	jmp    419bd2 <main@@Base+0x12b02>
  419b32:	xor    ebp,ebp
  419b34:	mov    rdx,r14
  419b37:	cmp    rbx,rdx
  419b3a:	jne    419ca0 <main@@Base+0x12bd0>
  419b40:	jmp    419c6c <main@@Base+0x12b9c>
  419b45:	mov    ecx,eax
  419b47:	and    cl,0xf
  419b4a:	add    cl,0xff
  419b4d:	cmp    cl,0x7
  419b50:	ja     41aa23 <main@@Base+0x13953>
  419b56:	movzx  ecx,cl
  419b59:	lea    rdx,[rip+0x1bcb4]        # 435814 <_IO_stdin_used@@Base+0x814>
  419b60:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  419b64:	add    rcx,rdx
  419b67:	xor    r8d,r8d
  419b6a:	xor    r9d,r9d
  419b6d:	xor    edx,edx
  419b6f:	xor    esi,esi
  419b71:	xor    ebx,ebx
  419b73:	xor    edi,edi
  419b75:	xor    ebp,ebp
  419b77:	jmp    rcx
  419b79:	movsx  r8,BYTE PTR [r10+0xf]
  419b7e:	movsx  r9,BYTE PTR [r10+0xe]
  419b83:	shl    r9,0x8
  419b87:	or     r9,r8
  419b8a:	movsx  rdx,BYTE PTR [r10+0xd]
  419b8f:	shl    rdx,0x10
  419b93:	or     rdx,r9
  419b96:	movsx  rsi,BYTE PTR [r10+0xc]
  419b9b:	shl    rsi,0x18
  419b9f:	or     rsi,rdx
  419ba2:	movsx  rbx,BYTE PTR [r10+0xb]
  419ba7:	shl    rbx,0x20
  419bab:	or     rbx,rsi
  419bae:	movsx  rdi,BYTE PTR [r10+0xa]
  419bb3:	shl    rdi,0x28
  419bb7:	or     rdi,rbx
  419bba:	movsx  rbp,BYTE PTR [r10+0x9]
  419bbf:	shl    rbp,0x30
  419bc3:	or     rbp,rdi
  419bc6:	movzx  ecx,BYTE PTR [r12]
  419bcb:	shl    rcx,0x38
  419bcf:	or     rcx,rbp
  419bd2:	movabs rdx,0xff00000000000000
  419bdc:	and    rcx,rdx
  419bdf:	movabs rdx,0x3500000000000000
  419be9:	cmp    rcx,rdx
  419bec:	jne    41aa23 <main@@Base+0x13953>
  419bf2:	cmp    rax,0x2
  419bf6:	jl     41aa23 <main@@Base+0x13953>
  419bfc:	mov    rax,QWORD PTR [rsp+0x20]
  419c01:	cmp    DWORD PTR [rax],0x0
  419c04:	movzx  eax,BYTE PTR [r10+0x9]
  419c09:	je     419cd8 <main@@Base+0x12c08>
  419c0f:	cmp    al,0x21
  419c11:	jl     419c1b <main@@Base+0x12b4b>
  419c13:	cmp    al,0x3a
  419c15:	jne    41aa23 <main@@Base+0x13953>
  419c1b:	add    r10,0x9
  419c1f:	mov    rax,QWORD PTR [rsp+0x20]
  419c24:	mov    DWORD PTR [rax],0x0
  419c2a:	jmp    419ce4 <main@@Base+0x12c14>
  419c2f:	xor    ebp,ebp
  419c31:	mov    rdx,rbx
  419c34:	cmp    rbx,rdx
  419c37:	jne    419ca0 <main@@Base+0x12bd0>
  419c39:	jmp    419c6c <main@@Base+0x12b9c>
  419c3b:	test   rbp,rbp
  419c3e:	jns    419c62 <main@@Base+0x12b92>
  419c40:	mov    ecx,0x7
  419c45:	mov    rdi,r15
  419c48:	mov    rsi,rdx
  419c4b:	mov    rdx,r14
  419c4e:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  419c53:	mov    rdx,rax
  419c56:	xor    ebp,ebp
  419c58:	cmp    rbx,rdx
  419c5b:	jne    419ca0 <main@@Base+0x12bd0>
  419c5d:	jmp    419c6c <main@@Base+0x12b9c>
  419c5f:	neg    rbp
  419c62:	mov    QWORD PTR [rsp+0x30],rbp
  419c67:	cmp    rbx,rdx
  419c6a:	jne    419ca0 <main@@Base+0x12bd0>
  419c6c:	mov    rdi,r15
  419c6f:	mov    rsi,rbx
  419c72:	mov    rdx,r14
  419c75:	lea    rcx,[rip+0x2a904]        # 444580 <__data_start@@Base+0x4d0>
  419c7c:	lea    r8,[rsp+0x30]
  419c81:	call   415f20 <main@@Base+0xee50>
  419c86:	mov    rdx,rax
  419c89:	cmp    rax,rbx
  419c8c:	je     41ac8a <main@@Base+0x13bba>
  419c92:	cmp    rdx,r14
  419c95:	je     41ac8a <main@@Base+0x13bba>
  419c9b:	mov    rbp,QWORD PTR [rsp+0x30]
  419ca0:	test   rbp,rbp
  419ca3:	jne    419cb0 <main@@Base+0x12be0>
  419ca5:	test   BYTE PTR [r15+0x10],0x2
  419caa:	je     41aa34 <main@@Base+0x13964>
  419cb0:	mov    rbx,rdx
  419cb3:	mov    rdi,QWORD PTR [r15]
  419cb6:	mov    esi,0x5
  419cbb:	mov    edx,0x8
  419cc0:	mov    ecx,0x8
  419cc5:	call   421f20 <flatcc_builder_table_add@@Base>
  419cca:	test   rax,rax
  419ccd:	jne    41a73c <main@@Base+0x1366c>
  419cd3:	jmp    41ac8d <main@@Base+0x13bbd>
  419cd8:	cmp    al,0x22
  419cda:	jne    41aa23 <main@@Base+0x13953>
  419ce0:	add    r10,0xa
  419ce4:	mov    rax,r14
  419ce7:	sub    rax,r10
  419cea:	cmp    rax,0x2
  419cee:	jl     419e1f <main@@Base+0x12d4f>
  419cf4:	cmp    BYTE PTR [r10],0x20
  419cf8:	jg     419e30 <main@@Base+0x12d60>
  419cfe:	jne    419e1f <main@@Base+0x12d4f>
  419d04:	cmp    BYTE PTR [r10+0x1],0x20
  419d09:	jle    419e1f <main@@Base+0x12d4f>
  419d0f:	add    r10,0x1
  419d13:	cmp    r10,r14
  419d16:	jne    419e35 <main@@Base+0x12d65>
  419d1c:	jmp    419e79 <main@@Base+0x12da9>
  419d21:	jne    419d37 <main@@Base+0x12c67>
  419d23:	cmp    BYTE PTR [rsi+0x1],0x20
  419d27:	jle    419d37 <main@@Base+0x12c67>
  419d29:	mov    rbp,r10
  419d2c:	add    rsi,0x1
  419d30:	cmp    rsi,r14
  419d33:	jne    419d4d <main@@Base+0x12c7d>
  419d35:	jmp    419d8b <main@@Base+0x12cbb>
  419d37:	mov    rbp,r10
  419d3a:	mov    rdi,r15
  419d3d:	mov    rdx,r14
  419d40:	call   425750 <flatcc_json_parser_space_ext@@Base>
  419d45:	mov    rsi,rax
  419d48:	cmp    rsi,r14
  419d4b:	je     419d8b <main@@Base+0x12cbb>
  419d4d:	cmp    BYTE PTR [rsi],0x3a
  419d50:	jne    419d8b <main@@Base+0x12cbb>
  419d52:	lea    rax,[rsi+0x1]
  419d56:	mov    rcx,r14
  419d59:	sub    rcx,rax
  419d5c:	cmp    rcx,0x2
  419d60:	jl     419e9d <main@@Base+0x12dcd>
  419d66:	cmp    BYTE PTR [rax],0x20
  419d69:	jg     419eab <main@@Base+0x12ddb>
  419d6f:	jne    419e9d <main@@Base+0x12dcd>
  419d75:	cmp    BYTE PTR [rsi+0x2],0x20
  419d79:	jle    419e9d <main@@Base+0x12dcd>
  419d7f:	add    rsi,0x2
  419d83:	mov    rax,rsi
  419d86:	jmp    419eab <main@@Base+0x12ddb>
  419d8b:	mov    ecx,0x4
  419d90:	mov    rdi,r15
  419d93:	mov    rdx,r14
  419d96:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  419d9b:	jmp    419eab <main@@Base+0x12ddb>
  419da0:	jne    419db6 <main@@Base+0x12ce6>
  419da2:	cmp    BYTE PTR [rsi+0x1],0x20
  419da6:	jle    419db6 <main@@Base+0x12ce6>
  419da8:	mov    rbp,r10
  419dab:	add    rsi,0x1
  419daf:	cmp    rsi,r14
  419db2:	jne    419dcc <main@@Base+0x12cfc>
  419db4:	jmp    419e0a <main@@Base+0x12d3a>
  419db6:	mov    rbp,r10
  419db9:	mov    rdi,r15
  419dbc:	mov    rdx,r14
  419dbf:	call   425750 <flatcc_json_parser_space_ext@@Base>
  419dc4:	mov    rsi,rax
  419dc7:	cmp    rsi,r14
  419dca:	je     419e0a <main@@Base+0x12d3a>
  419dcc:	cmp    BYTE PTR [rsi],0x3a
  419dcf:	jne    419e0a <main@@Base+0x12d3a>
  419dd1:	lea    rax,[rsi+0x1]
  419dd5:	mov    rcx,r14
  419dd8:	sub    rcx,rax
  419ddb:	cmp    rcx,0x2
  419ddf:	jl     419fef <main@@Base+0x12f1f>
  419de5:	cmp    BYTE PTR [rax],0x20
  419de8:	jg     419ffd <main@@Base+0x12f2d>
  419dee:	jne    419fef <main@@Base+0x12f1f>
  419df4:	cmp    BYTE PTR [rsi+0x2],0x20
  419df8:	jle    419fef <main@@Base+0x12f1f>
  419dfe:	add    rsi,0x2
  419e02:	mov    rax,rsi
  419e05:	jmp    419ffd <main@@Base+0x12f2d>
  419e0a:	mov    ecx,0x4
  419e0f:	mov    rdi,r15
  419e12:	mov    rdx,r14
  419e15:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  419e1a:	jmp    419ffd <main@@Base+0x12f2d>
  419e1f:	mov    rdi,r15
  419e22:	mov    rsi,r10
  419e25:	mov    rdx,r14
  419e28:	call   425750 <flatcc_json_parser_space_ext@@Base>
  419e2d:	mov    r10,rax
  419e30:	cmp    r10,r14
  419e33:	je     419e79 <main@@Base+0x12da9>
  419e35:	cmp    BYTE PTR [r10],0x3a
  419e39:	jne    419e79 <main@@Base+0x12da9>
  419e3b:	lea    rbx,[r10+0x1]
  419e3f:	mov    rax,r14
  419e42:	sub    rax,rbx
  419e45:	cmp    rax,0x2
  419e49:	jl     41a31b <main@@Base+0x1324b>
  419e4f:	cmp    BYTE PTR [rbx],0x20
  419e52:	jg     419e6f <main@@Base+0x12d9f>
  419e54:	jne    41a31b <main@@Base+0x1324b>
  419e5a:	mov    rcx,r10
  419e5d:	cmp    BYTE PTR [r10+0x2],0x20
  419e62:	jle    41a31b <main@@Base+0x1324b>
  419e68:	mov    rbx,rcx
  419e6b:	add    rbx,0x2
  419e6f:	mov    r15,QWORD PTR [rsp+0x10]
  419e74:	jmp    41a331 <main@@Base+0x13261>
  419e79:	mov    ecx,0x4
  419e7e:	mov    rdi,r15
  419e81:	mov    rsi,r10
  419e84:	mov    rdx,r14
  419e87:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  419e8c:	mov    rbx,rax
  419e8f:	cmp    r12,rbx
  419e92:	jne    41a33f <main@@Base+0x1326f>
  419e98:	jmp    41aa23 <main@@Base+0x13953>
  419e9d:	mov    rdi,r15
  419ea0:	mov    rsi,rax
  419ea3:	mov    rdx,r14
  419ea6:	call   425750 <flatcc_json_parser_space_ext@@Base>
  419eab:	movabs rsi,0x6262626200000000
  419eb5:	mov    r10,rbp
  419eb8:	cmp    r10,rax
  419ebb:	je     419ee8 <main@@Base+0x12e18>
  419ebd:	mov    rdi,r15
  419ec0:	mov    rsi,rax
  419ec3:	mov    rdx,r14
  419ec6:	lea    rcx,[rsp+0x44]
  419ecb:	call   427830 <flatcc_json_parser_build_string@@Base>
  419ed0:	mov    rbx,rax
  419ed3:	cmp    DWORD PTR [rsp+0x44],0x0
  419ed8:	je     41ac8d <main@@Base+0x13bbd>
  419ede:	mov    rdi,QWORD PTR [r15]
  419ee1:	xor    esi,esi
  419ee3:	jmp    41a02e <main@@Base+0x12f5e>
  419ee8:	lea    rax,[rsi+0x31323334]
  419eef:	cmp    rbx,rax
  419ef2:	jne    419f35 <main@@Base+0x12e65>
  419ef4:	mov    rbx,r10
  419ef7:	cmp    r13,0x9
  419efb:	mov    r13,QWORD PTR [rsp+0x18]
  419f00:	jl     41a3d0 <main@@Base+0x13300>
  419f06:	mov    rax,QWORD PTR [rsp+0x20]
  419f0b:	cmp    DWORD PTR [rax],0x0
  419f0e:	movzx  eax,BYTE PTR [r10+0x8]
  419f13:	je     419f7c <main@@Base+0x12eac>
  419f15:	cmp    al,0x21
  419f17:	jl     419f24 <main@@Base+0x12e54>
  419f19:	mov    rbx,r10
  419f1c:	cmp    al,0x3a
  419f1e:	jne    41a3d0 <main@@Base+0x13300>
  419f24:	lea    rsi,[r10+0x8]
  419f28:	mov    rax,QWORD PTR [rsp+0x20]
  419f2d:	mov    DWORD PTR [rax],0x0
  419f33:	jmp    419f8b <main@@Base+0x12ebb>
  419f35:	cmp    r12,rsi
  419f38:	jne    41a09a <main@@Base+0x12fca>
  419f3e:	mov    rax,r10
  419f41:	cmp    r13,0x5
  419f45:	jl     41a950 <main@@Base+0x13880>
  419f4b:	mov    rax,QWORD PTR [rsp+0x20]
  419f50:	cmp    DWORD PTR [rax],0x0
  419f53:	movzx  ecx,BYTE PTR [r10+0x4]
  419f58:	je     419fb5 <main@@Base+0x12ee5>
  419f5a:	cmp    cl,0x21
  419f5d:	jl     419f6b <main@@Base+0x12e9b>
  419f5f:	mov    rax,r10
  419f62:	cmp    cl,0x3a
  419f65:	jne    41a950 <main@@Base+0x13880>
  419f6b:	lea    rsi,[r10+0x4]
  419f6f:	mov    rax,QWORD PTR [rsp+0x20]
  419f74:	mov    DWORD PTR [rax],0x0
  419f7a:	jmp    419fc5 <main@@Base+0x12ef5>
  419f7c:	mov    rbx,r10
  419f7f:	cmp    al,0x22
  419f81:	jne    41a3d0 <main@@Base+0x13300>
  419f87:	lea    rsi,[r10+0x9]
  419f8b:	mov    rax,r14
  419f8e:	sub    rax,rsi
  419f91:	cmp    rax,0x2
  419f95:	jl     41a19f <main@@Base+0x130cf>
  419f9b:	cmp    BYTE PTR [rsi],0x20
  419f9e:	jle    41a189 <main@@Base+0x130b9>
  419fa4:	mov    rbp,r10
  419fa7:	cmp    rsi,r14
  419faa:	jne    41a1b5 <main@@Base+0x130e5>
  419fb0:	jmp    41a1e6 <main@@Base+0x13116>
  419fb5:	mov    rax,r10
  419fb8:	cmp    cl,0x22
  419fbb:	jne    41a950 <main@@Base+0x13880>
  419fc1:	lea    rsi,[r10+0x5]
  419fc5:	mov    rax,r14
  419fc8:	sub    rax,rsi
  419fcb:	cmp    rax,0x2
  419fcf:	jl     41a2c4 <main@@Base+0x131f4>
  419fd5:	cmp    BYTE PTR [rsi],0x20
  419fd8:	jle    41a2ae <main@@Base+0x131de>
  419fde:	mov    rbx,r10
  419fe1:	cmp    rsi,r14
  419fe4:	jne    41a2da <main@@Base+0x1320a>
  419fea:	jmp    41a306 <main@@Base+0x13236>
  419fef:	mov    rdi,r15
  419ff2:	mov    rsi,rax
  419ff5:	mov    rdx,r14
  419ff8:	call   425750 <flatcc_json_parser_space_ext@@Base>
  419ffd:	mov    r10,rbp
  41a000:	cmp    r10,rax
  41a003:	je     41a04f <main@@Base+0x12f7f>
  41a005:	mov    rdi,r15
  41a008:	mov    rsi,rax
  41a00b:	mov    rdx,r14
  41a00e:	lea    rcx,[rsp+0x44]
  41a013:	call   427830 <flatcc_json_parser_build_string@@Base>
  41a018:	mov    rbx,rax
  41a01b:	cmp    DWORD PTR [rsp+0x44],0x0
  41a020:	je     41ac8d <main@@Base+0x13bbd>
  41a026:	mov    rdi,QWORD PTR [r15]
  41a029:	mov    esi,0x4
  41a02e:	call   421dc0 <flatcc_builder_table_add_offset@@Base>
  41a033:	test   rax,rax
  41a036:	mov    r13,QWORD PTR [rsp+0x18]
  41a03b:	je     41ac8d <main@@Base+0x13bbd>
  41a041:	mov    ecx,DWORD PTR [rsp+0x44]
  41a045:	mov    DWORD PTR [rax],ecx
  41a047:	mov    rdx,rbx
  41a04a:	jmp    41aa34 <main@@Base+0x13964>
  41a04f:	movabs rax,0x6464646431323334
  41a059:	cmp    rbx,rax
  41a05c:	jne    41a09a <main@@Base+0x12fca>
  41a05e:	mov    rbx,r10
  41a061:	cmp    r13,0x9
  41a065:	jl     41a501 <main@@Base+0x13431>
  41a06b:	mov    rax,QWORD PTR [rsp+0x20]
  41a070:	cmp    DWORD PTR [rax],0x0
  41a073:	movzx  eax,BYTE PTR [r10+0x8]
  41a078:	je     41a0b5 <main@@Base+0x12fe5>
  41a07a:	cmp    al,0x21
  41a07c:	jl     41a089 <main@@Base+0x12fb9>
  41a07e:	mov    rbx,r10
  41a081:	cmp    al,0x3a
  41a083:	jne    41a501 <main@@Base+0x13431>
  41a089:	lea    rsi,[r10+0x8]
  41a08d:	mov    rax,QWORD PTR [rsp+0x20]
  41a092:	mov    DWORD PTR [rax],0x0
  41a098:	jmp    41a0c4 <main@@Base+0x12ff4>
  41a09a:	mov    rdi,r15
  41a09d:	mov    rsi,r10
  41a0a0:	mov    rdx,r14
  41a0a3:	call   425cc0 <flatcc_json_parser_unmatched_symbol@@Base>
  41a0a8:	mov    rdx,rax
  41a0ab:	mov    r13,QWORD PTR [rsp+0x18]
  41a0b0:	jmp    41aa34 <main@@Base+0x13964>
  41a0b5:	mov    rbx,r10
  41a0b8:	cmp    al,0x22
  41a0ba:	jne    41a501 <main@@Base+0x13431>
  41a0c0:	lea    rsi,[r10+0x9]
  41a0c4:	mov    rax,r14
  41a0c7:	sub    rax,rsi
  41a0ca:	cmp    rax,0x2
  41a0ce:	jl     41a211 <main@@Base+0x13141>
  41a0d4:	cmp    BYTE PTR [rsi],0x20
  41a0d7:	jle    41a1fb <main@@Base+0x1312b>
  41a0dd:	mov    rbp,r10
  41a0e0:	cmp    rsi,r14
  41a0e3:	jne    41a227 <main@@Base+0x13157>
  41a0e9:	jmp    41a253 <main@@Base+0x13183>
  41a0ee:	mov    rdi,r15
  41a0f1:	mov    rsi,rbx
  41a0f4:	mov    rdx,r14
  41a0f7:	call   425750 <flatcc_json_parser_space_ext@@Base>
  41a0fc:	mov    rbx,rax
  41a0ff:	cmp    r12,rbx
  41a102:	je     41aa23 <main@@Base+0x13953>
  41a108:	mov    QWORD PTR [rsp+0x38],0x0
  41a111:	mov    DWORD PTR [rsp+0x30],0x0
  41a119:	mov    DWORD PTR [rsp+0xc],0x0
  41a121:	xor    ebp,ebp
  41a123:	cmp    rbx,r14
  41a126:	je     41a178 <main@@Base+0x130a8>
  41a128:	mov    rdi,r15
  41a12b:	mov    rsi,rbx
  41a12e:	mov    rdx,r14
  41a131:	lea    rcx,[rsp+0x30]
  41a136:	lea    r8,[rsp+0x38]
  41a13b:	call   427360 <flatcc_json_parser_integer@@Base>
  41a140:	cmp    rax,rbx
  41a143:	je     41a268 <main@@Base+0x13198>
  41a149:	cmp    DWORD PTR [rsp+0x30],0x0
  41a14e:	je     41a279 <main@@Base+0x131a9>
  41a154:	mov    ecx,0x8
  41a159:	mov    rdi,r15
  41a15c:	mov    rsi,rax
  41a15f:	mov    rdx,r14
  41a162:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  41a167:	mov    rdx,rax
  41a16a:	cmp    rbx,rdx
  41a16d:	jne    41a848 <main@@Base+0x13778>
  41a173:	jmp    41a80b <main@@Base+0x1373b>
  41a178:	mov    rdx,r14
  41a17b:	cmp    rbx,rdx
  41a17e:	jne    41a848 <main@@Base+0x13778>
  41a184:	jmp    41a80b <main@@Base+0x1373b>
  41a189:	jne    41a19f <main@@Base+0x130cf>
  41a18b:	cmp    BYTE PTR [rsi+0x1],0x20
  41a18f:	jle    41a19f <main@@Base+0x130cf>
  41a191:	mov    rbp,r10
  41a194:	add    rsi,0x1
  41a198:	cmp    rsi,r14
  41a19b:	jne    41a1b5 <main@@Base+0x130e5>
  41a19d:	jmp    41a1e6 <main@@Base+0x13116>
  41a19f:	mov    rbp,r10
  41a1a2:	mov    rdi,r15
  41a1a5:	mov    rdx,r14
  41a1a8:	call   425750 <flatcc_json_parser_space_ext@@Base>
  41a1ad:	mov    rsi,rax
  41a1b0:	cmp    rsi,r14
  41a1b3:	je     41a1e6 <main@@Base+0x13116>
  41a1b5:	cmp    BYTE PTR [rsi],0x3a
  41a1b8:	jne    41a1e6 <main@@Base+0x13116>
  41a1ba:	lea    rbx,[rsi+0x1]
  41a1be:	mov    rax,r14
  41a1c1:	sub    rax,rbx
  41a1c4:	cmp    rax,0x2
  41a1c8:	jl     41a3bc <main@@Base+0x132ec>
  41a1ce:	cmp    BYTE PTR [rbx],0x20
  41a1d1:	jle    41a3a1 <main@@Base+0x132d1>
  41a1d7:	mov    r15,QWORD PTR [rsp+0x10]
  41a1dc:	mov    r13,QWORD PTR [rsp+0x18]
  41a1e1:	jmp    41a3cd <main@@Base+0x132fd>
  41a1e6:	mov    ecx,0x4
  41a1eb:	mov    rdi,r15
  41a1ee:	mov    rdx,r14
  41a1f1:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  41a1f6:	jmp    41a3ca <main@@Base+0x132fa>
  41a1fb:	jne    41a211 <main@@Base+0x13141>
  41a1fd:	cmp    BYTE PTR [rsi+0x1],0x20
  41a201:	jle    41a211 <main@@Base+0x13141>
  41a203:	mov    rbp,r10
  41a206:	add    rsi,0x1
  41a20a:	cmp    rsi,r14
  41a20d:	jne    41a227 <main@@Base+0x13157>
  41a20f:	jmp    41a253 <main@@Base+0x13183>
  41a211:	mov    rbp,r10
  41a214:	mov    rdi,r15
  41a217:	mov    rdx,r14
  41a21a:	call   425750 <flatcc_json_parser_space_ext@@Base>
  41a21f:	mov    rsi,rax
  41a222:	cmp    rsi,r14
  41a225:	je     41a253 <main@@Base+0x13183>
  41a227:	cmp    BYTE PTR [rsi],0x3a
  41a22a:	jne    41a253 <main@@Base+0x13183>
  41a22c:	lea    rbx,[rsi+0x1]
  41a230:	mov    rax,r14
  41a233:	sub    rax,rbx
  41a236:	cmp    rax,0x2
  41a23a:	jl     41a4ed <main@@Base+0x1341d>
  41a240:	cmp    BYTE PTR [rbx],0x20
  41a243:	jle    41a4d7 <main@@Base+0x13407>
  41a249:	mov    r15,QWORD PTR [rsp+0x10]
  41a24e:	jmp    41a4fe <main@@Base+0x1342e>
  41a253:	mov    ecx,0x4
  41a258:	mov    rdi,r15
  41a25b:	mov    rdx,r14
  41a25e:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  41a263:	jmp    41a4fb <main@@Base+0x1342b>
  41a268:	mov    rdx,rbx
  41a26b:	cmp    rbx,rdx
  41a26e:	jne    41a848 <main@@Base+0x13778>
  41a274:	jmp    41a80b <main@@Base+0x1373b>
  41a279:	mov    rdx,rax
  41a27c:	mov    rax,QWORD PTR [rsp+0x38]
  41a281:	mov    rcx,rax
  41a284:	shr    rcx,0x20
  41a288:	je     41a7f6 <main@@Base+0x13726>
  41a28e:	mov    ecx,0x7
  41a293:	mov    r15,QWORD PTR [rsp+0x10]
  41a298:	mov    rdi,r15
  41a29b:	mov    rsi,rdx
  41a29e:	mov    rdx,r14
  41a2a1:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  41a2a6:	mov    rdx,rax
  41a2a9:	jmp    41a801 <main@@Base+0x13731>
  41a2ae:	jne    41a2c4 <main@@Base+0x131f4>
  41a2b0:	cmp    BYTE PTR [rsi+0x1],0x20
  41a2b4:	jle    41a2c4 <main@@Base+0x131f4>
  41a2b6:	mov    rbx,r10
  41a2b9:	add    rsi,0x1
  41a2bd:	cmp    rsi,r14
  41a2c0:	jne    41a2da <main@@Base+0x1320a>
  41a2c2:	jmp    41a306 <main@@Base+0x13236>
  41a2c4:	mov    rbx,r10
  41a2c7:	mov    rdi,r15
  41a2ca:	mov    rdx,r14
  41a2cd:	call   425750 <flatcc_json_parser_space_ext@@Base>
  41a2d2:	mov    rsi,rax
  41a2d5:	cmp    rsi,r14
  41a2d8:	je     41a306 <main@@Base+0x13236>
  41a2da:	cmp    BYTE PTR [rsi],0x3a
  41a2dd:	jne    41a306 <main@@Base+0x13236>
  41a2df:	lea    rax,[rsi+0x1]
  41a2e3:	mov    rcx,r14
  41a2e6:	sub    rcx,rax
  41a2e9:	cmp    rcx,0x2
  41a2ed:	jl     41a93a <main@@Base+0x1386a>
  41a2f3:	cmp    BYTE PTR [rax],0x20
  41a2f6:	jle    41a924 <main@@Base+0x13854>
  41a2fc:	mov    r15,QWORD PTR [rsp+0x10]
  41a301:	jmp    41a94d <main@@Base+0x1387d>
  41a306:	mov    ecx,0x4
  41a30b:	mov    rdi,r15
  41a30e:	mov    rdx,r14
  41a311:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  41a316:	jmp    41a94d <main@@Base+0x1387d>
  41a31b:	mov    r15,QWORD PTR [rsp+0x10]
  41a320:	mov    rdi,r15
  41a323:	mov    rsi,rbx
  41a326:	mov    rdx,r14
  41a329:	call   425750 <flatcc_json_parser_space_ext@@Base>
  41a32e:	mov    rbx,rax
  41a331:	mov    r13,QWORD PTR [rsp+0x18]
  41a336:	cmp    r12,rbx
  41a339:	je     41aa23 <main@@Base+0x13953>
  41a33f:	mov    QWORD PTR [rsp+0x38],0x0
  41a348:	mov    DWORD PTR [rsp+0x30],0x0
  41a350:	mov    DWORD PTR [rsp+0xc],0x0
  41a358:	xor    r12d,r12d
  41a35b:	cmp    rbx,r14
  41a35e:	je     41a399 <main@@Base+0x132c9>
  41a360:	mov    rdi,r15
  41a363:	mov    rsi,rbx
  41a366:	mov    rdx,r14
  41a369:	lea    rcx,[rsp+0x30]
  41a36e:	lea    r8,[rsp+0x38]
  41a373:	call   427360 <flatcc_json_parser_integer@@Base>
  41a378:	cmp    rax,rbx
  41a37b:	je     41a7e9 <main@@Base+0x13719>
  41a381:	mov    rsi,rax
  41a384:	cmp    DWORD PTR [rsp+0x30],0x0
  41a389:	je     41a884 <main@@Base+0x137b4>
  41a38f:	mov    ecx,0x8
  41a394:	jmp    41a89b <main@@Base+0x137cb>
  41a399:	mov    rax,r14
  41a39c:	jmp    41a8ab <main@@Base+0x137db>
  41a3a1:	mov    r15,QWORD PTR [rsp+0x10]
  41a3a6:	mov    r13,QWORD PTR [rsp+0x18]
  41a3ab:	jne    41a3bc <main@@Base+0x132ec>
  41a3ad:	cmp    BYTE PTR [rsi+0x2],0x20
  41a3b1:	jle    41a3bc <main@@Base+0x132ec>
  41a3b3:	add    rsi,0x2
  41a3b7:	mov    rbx,rsi
  41a3ba:	jmp    41a3cd <main@@Base+0x132fd>
  41a3bc:	mov    rdi,r15
  41a3bf:	mov    rsi,rbx
  41a3c2:	mov    rdx,r14
  41a3c5:	call   425750 <flatcc_json_parser_space_ext@@Base>
  41a3ca:	mov    rbx,rax
  41a3cd:	mov    r10,rbp
  41a3d0:	cmp    r10,rbx
  41a3d3:	je     41a996 <main@@Base+0x138c6>
  41a3d9:	mov    QWORD PTR [rsp+0x38],0x0
  41a3e2:	mov    DWORD PTR [rsp+0xc],0x0
  41a3ea:	mov    QWORD PTR [rsp+0x30],0x0
  41a3f3:	cmp    rbx,r14
  41a3f6:	je     41a43a <main@@Base+0x1336a>
  41a3f8:	mov    rdi,r15
  41a3fb:	mov    rsi,rbx
  41a3fe:	mov    rdx,r14
  41a401:	lea    rcx,[rsp+0xc]
  41a406:	lea    r8,[rsp+0x38]
  41a40b:	call   427360 <flatcc_json_parser_integer@@Base>
  41a410:	cmp    rax,rbx
  41a413:	je     41a446 <main@@Base+0x13376>
  41a415:	mov    rdx,rax
  41a418:	mov    rbp,QWORD PTR [rsp+0x38]
  41a41d:	cmp    DWORD PTR [rsp+0xc],0x0
  41a422:	je     41a452 <main@@Base+0x13382>
  41a424:	movabs rax,0x8000000000000000
  41a42e:	cmp    rbp,rax
  41a431:	jbe    41a476 <main@@Base+0x133a6>
  41a433:	mov    ecx,0x8
  41a438:	jmp    41a45c <main@@Base+0x1338c>
  41a43a:	xor    ebp,ebp
  41a43c:	mov    rdx,r14
  41a43f:	cmp    rbx,rdx
  41a442:	jne    41a4b7 <main@@Base+0x133e7>
  41a444:	jmp    41a483 <main@@Base+0x133b3>
  41a446:	xor    ebp,ebp
  41a448:	mov    rdx,rbx
  41a44b:	cmp    rbx,rdx
  41a44e:	jne    41a4b7 <main@@Base+0x133e7>
  41a450:	jmp    41a483 <main@@Base+0x133b3>
  41a452:	test   rbp,rbp
  41a455:	jns    41a479 <main@@Base+0x133a9>
  41a457:	mov    ecx,0x7
  41a45c:	mov    rdi,r15
  41a45f:	mov    rsi,rdx
  41a462:	mov    rdx,r14
  41a465:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  41a46a:	mov    rdx,rax
  41a46d:	xor    ebp,ebp
  41a46f:	cmp    rbx,rdx
  41a472:	jne    41a4b7 <main@@Base+0x133e7>
  41a474:	jmp    41a483 <main@@Base+0x133b3>
  41a476:	neg    rbp
  41a479:	mov    QWORD PTR [rsp+0x30],rbp
  41a47e:	cmp    rbx,rdx
  41a481:	jne    41a4b7 <main@@Base+0x133e7>
  41a483:	mov    rdi,r15
  41a486:	mov    rsi,rbx
  41a489:	mov    rdx,r14
  41a48c:	lea    rcx,[rip+0x2a0cd]        # 444560 <__data_start@@Base+0x4b0>
  41a493:	lea    r8,[rsp+0x30]
  41a498:	call   415f20 <main@@Base+0xee50>
  41a49d:	mov    rdx,rax
  41a4a0:	cmp    rax,rbx
  41a4a3:	je     41ac92 <main@@Base+0x13bc2>
  41a4a9:	cmp    rdx,r14
  41a4ac:	je     41ac92 <main@@Base+0x13bc2>
  41a4b2:	mov    rbp,QWORD PTR [rsp+0x30]
  41a4b7:	test   rbp,rbp
  41a4ba:	jne    41a4c7 <main@@Base+0x133f7>
  41a4bc:	test   BYTE PTR [r15+0x10],0x2
  41a4c1:	je     41aa34 <main@@Base+0x13964>
  41a4c7:	mov    rbx,rdx
  41a4ca:	mov    rdi,QWORD PTR [r15]
  41a4cd:	mov    esi,0x3
  41a4d2:	jmp    41a724 <main@@Base+0x13654>
  41a4d7:	mov    r15,QWORD PTR [rsp+0x10]
  41a4dc:	jne    41a4ed <main@@Base+0x1341d>
  41a4de:	cmp    BYTE PTR [rsi+0x2],0x20
  41a4e2:	jle    41a4ed <main@@Base+0x1341d>
  41a4e4:	add    rsi,0x2
  41a4e8:	mov    rbx,rsi
  41a4eb:	jmp    41a4fe <main@@Base+0x1342e>
  41a4ed:	mov    rdi,r15
  41a4f0:	mov    rsi,rbx
  41a4f3:	mov    rdx,r14
  41a4f6:	call   425750 <flatcc_json_parser_space_ext@@Base>
  41a4fb:	mov    rbx,rax
  41a4fe:	mov    r10,rbp
  41a501:	cmp    r10,rbx
  41a504:	je     41a57b <main@@Base+0x134ab>
  41a506:	mov    QWORD PTR [rsp+0x38],0x0
  41a50f:	mov    DWORD PTR [rsp+0xc],0x0
  41a517:	mov    QWORD PTR [rsp+0x30],0x0
  41a520:	cmp    rbx,r14
  41a523:	mov    r13,QWORD PTR [rsp+0x18]
  41a528:	je     41a59b <main@@Base+0x134cb>
  41a52a:	mov    rdi,r15
  41a52d:	mov    rsi,rbx
  41a530:	mov    rdx,r14
  41a533:	lea    rcx,[rsp+0xc]
  41a538:	lea    r8,[rsp+0x38]
  41a53d:	call   427360 <flatcc_json_parser_integer@@Base>
  41a542:	cmp    rax,rbx
  41a545:	je     41a698 <main@@Base+0x135c8>
  41a54b:	mov    rdx,rax
  41a54e:	mov    rbp,QWORD PTR [rsp+0x38]
  41a553:	cmp    DWORD PTR [rsp+0xc],0x0
  41a558:	je     41a6a4 <main@@Base+0x135d4>
  41a55e:	movabs rax,0x8000000000000000
  41a568:	cmp    rbp,rax
  41a56b:	jbe    41a6c8 <main@@Base+0x135f8>
  41a571:	mov    ecx,0x8
  41a576:	jmp    41a6ae <main@@Base+0x135de>
  41a57b:	lea    r12,[r10+0x8]
  41a57f:	mov    rax,r14
  41a582:	sub    rax,r12
  41a585:	cmp    rax,0x8
  41a589:	mov    r13,QWORD PTR [rsp+0x18]
  41a58e:	jb     41a5ae <main@@Base+0x134de>
  41a590:	movbe  rcx,QWORD PTR [r12]
  41a596:	jmp    41a63b <main@@Base+0x1356b>
  41a59b:	xor    ebp,ebp
  41a59d:	mov    rdx,r14
  41a5a0:	cmp    rbx,rdx
  41a5a3:	jne    41a709 <main@@Base+0x13639>
  41a5a9:	jmp    41a6d5 <main@@Base+0x13605>
  41a5ae:	mov    ecx,eax
  41a5b0:	and    cl,0xf
  41a5b3:	add    cl,0xff
  41a5b6:	cmp    cl,0x7
  41a5b9:	ja     41aa23 <main@@Base+0x13953>
  41a5bf:	movzx  ecx,cl
  41a5c2:	lea    rdx,[rip+0x1b22b]        # 4357f4 <_IO_stdin_used@@Base+0x7f4>
  41a5c9:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  41a5cd:	add    rcx,rdx
  41a5d0:	xor    r8d,r8d
  41a5d3:	xor    r9d,r9d
  41a5d6:	xor    edx,edx
  41a5d8:	xor    esi,esi
  41a5da:	xor    ebx,ebx
  41a5dc:	xor    edi,edi
  41a5de:	xor    ebp,ebp
  41a5e0:	jmp    rcx
  41a5e2:	movsx  r8,BYTE PTR [r10+0xf]
  41a5e7:	movsx  r9,BYTE PTR [r10+0xe]
  41a5ec:	shl    r9,0x8
  41a5f0:	or     r9,r8
  41a5f3:	movsx  rdx,BYTE PTR [r10+0xd]
  41a5f8:	shl    rdx,0x10
  41a5fc:	or     rdx,r9
  41a5ff:	movsx  rsi,BYTE PTR [r10+0xc]
  41a604:	shl    rsi,0x18
  41a608:	or     rsi,rdx
  41a60b:	movsx  rbx,BYTE PTR [r10+0xb]
  41a610:	shl    rbx,0x20
  41a614:	or     rbx,rsi
  41a617:	movsx  rdi,BYTE PTR [r10+0xa]
  41a61c:	shl    rdi,0x28
  41a620:	or     rdi,rbx
  41a623:	movsx  rbp,BYTE PTR [r10+0x9]
  41a628:	shl    rbp,0x30
  41a62c:	or     rbp,rdi
  41a62f:	movzx  ecx,BYTE PTR [r12]
  41a634:	shl    rcx,0x38
  41a638:	or     rcx,rbp
  41a63b:	movabs rdx,0xff00000000000000
  41a645:	and    rcx,rdx
  41a648:	movabs rdx,0x3500000000000000
  41a652:	cmp    rcx,rdx
  41a655:	jne    41aa23 <main@@Base+0x13953>
  41a65b:	cmp    rax,0x2
  41a65f:	jl     41aa23 <main@@Base+0x13953>
  41a665:	mov    rax,QWORD PTR [rsp+0x20]
  41a66a:	cmp    DWORD PTR [rax],0x0
  41a66d:	movzx  eax,BYTE PTR [r10+0x9]
  41a672:	je     41a747 <main@@Base+0x13677>
  41a678:	cmp    al,0x21
  41a67a:	jl     41a684 <main@@Base+0x135b4>
  41a67c:	cmp    al,0x3a
  41a67e:	jne    41aa23 <main@@Base+0x13953>
  41a684:	add    r10,0x9
  41a688:	mov    rax,QWORD PTR [rsp+0x20]
  41a68d:	mov    DWORD PTR [rax],0x0
  41a693:	jmp    41a753 <main@@Base+0x13683>
  41a698:	xor    ebp,ebp
  41a69a:	mov    rdx,rbx
  41a69d:	cmp    rbx,rdx
  41a6a0:	jne    41a709 <main@@Base+0x13639>
  41a6a2:	jmp    41a6d5 <main@@Base+0x13605>
  41a6a4:	test   rbp,rbp
  41a6a7:	jns    41a6cb <main@@Base+0x135fb>
  41a6a9:	mov    ecx,0x7
  41a6ae:	mov    rdi,r15
  41a6b1:	mov    rsi,rdx
  41a6b4:	mov    rdx,r14
  41a6b7:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  41a6bc:	mov    rdx,rax
  41a6bf:	xor    ebp,ebp
  41a6c1:	cmp    rbx,rdx
  41a6c4:	jne    41a709 <main@@Base+0x13639>
  41a6c6:	jmp    41a6d5 <main@@Base+0x13605>
  41a6c8:	neg    rbp
  41a6cb:	mov    QWORD PTR [rsp+0x30],rbp
  41a6d0:	cmp    rbx,rdx
  41a6d3:	jne    41a709 <main@@Base+0x13639>
  41a6d5:	mov    rdi,r15
  41a6d8:	mov    rsi,rbx
  41a6db:	mov    rdx,r14
  41a6de:	lea    rcx,[rip+0x29edb]        # 4445c0 <__data_start@@Base+0x510>
  41a6e5:	lea    r8,[rsp+0x30]
  41a6ea:	call   415f20 <main@@Base+0xee50>
  41a6ef:	mov    rdx,rax
  41a6f2:	cmp    rax,rbx
  41a6f5:	je     41ac92 <main@@Base+0x13bc2>
  41a6fb:	cmp    rdx,r14
  41a6fe:	je     41ac92 <main@@Base+0x13bc2>
  41a704:	mov    rbp,QWORD PTR [rsp+0x30]
  41a709:	test   rbp,rbp
  41a70c:	jne    41a719 <main@@Base+0x13649>
  41a70e:	test   BYTE PTR [r15+0x10],0x2
  41a713:	je     41aa34 <main@@Base+0x13964>
  41a719:	mov    rbx,rdx
  41a71c:	mov    rdi,QWORD PTR [r15]
  41a71f:	mov    esi,0x7
  41a724:	mov    edx,0x8
  41a729:	mov    ecx,0x8
  41a72e:	call   421f20 <flatcc_builder_table_add@@Base>
  41a733:	test   rax,rax
  41a736:	je     41ac95 <main@@Base+0x13bc5>
  41a73c:	mov    QWORD PTR [rax],rbp
  41a73f:	mov    rdx,rbx
  41a742:	jmp    41aa34 <main@@Base+0x13964>
  41a747:	cmp    al,0x22
  41a749:	jne    41aa23 <main@@Base+0x13953>
  41a74f:	add    r10,0xa
  41a753:	mov    rax,r14
  41a756:	mov    rsi,r10
  41a759:	sub    rax,r10
  41a75c:	cmp    rax,0x2
  41a760:	jl     41a77b <main@@Base+0x136ab>
  41a762:	cmp    BYTE PTR [rsi],0x20
  41a765:	jg     41a78b <main@@Base+0x136bb>
  41a767:	mov    rsi,r10
  41a76a:	jne    41a77b <main@@Base+0x136ab>
  41a76c:	cmp    BYTE PTR [rsi+0x1],0x20
  41a770:	jle    41a77b <main@@Base+0x136ab>
  41a772:	add    rsi,0x1
  41a776:	mov    r10,rsi
  41a779:	jmp    41a78b <main@@Base+0x136bb>
  41a77b:	mov    rdi,QWORD PTR [rsp+0x10]
  41a780:	mov    rdx,r14
  41a783:	call   425750 <flatcc_json_parser_space_ext@@Base>
  41a788:	mov    r10,rax
  41a78b:	mov    rsi,r10
  41a78e:	cmp    r10,r14
  41a791:	je     41a7d2 <main@@Base+0x13702>
  41a793:	cmp    BYTE PTR [rsi],0x3a
  41a796:	jne    41a7d2 <main@@Base+0x13702>
  41a798:	lea    rbx,[rsi+0x1]
  41a79c:	mov    rax,r14
  41a79f:	sub    rax,rbx
  41a7a2:	cmp    rax,0x2
  41a7a6:	jl     41a9a1 <main@@Base+0x138d1>
  41a7ac:	cmp    BYTE PTR [rbx],0x20
  41a7af:	jg     41a9b4 <main@@Base+0x138e4>
  41a7b5:	jne    41a9a1 <main@@Base+0x138d1>
  41a7bb:	cmp    BYTE PTR [r10+0x2],0x20
  41a7c0:	jle    41a9a1 <main@@Base+0x138d1>
  41a7c6:	add    r10,0x2
  41a7ca:	mov    rbx,r10
  41a7cd:	jmp    41a9b4 <main@@Base+0x138e4>
  41a7d2:	mov    ecx,0x4
  41a7d7:	mov    rdi,QWORD PTR [rsp+0x10]
  41a7dc:	mov    rdx,r14
  41a7df:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  41a7e4:	jmp    41a9b1 <main@@Base+0x138e1>
  41a7e9:	mov    rax,rbx
  41a7ec:	mov    r15,QWORD PTR [rsp+0x10]
  41a7f1:	jmp    41a8ab <main@@Base+0x137db>
  41a7f6:	mov    DWORD PTR [rsp+0xc],eax
  41a7fa:	mov    ebp,eax
  41a7fc:	mov    r15,QWORD PTR [rsp+0x10]
  41a801:	mov    r13,QWORD PTR [rsp+0x18]
  41a806:	cmp    rbx,rdx
  41a809:	jne    41a848 <main@@Base+0x13778>
  41a80b:	mov    rdi,r15
  41a80e:	mov    rsi,rbx
  41a811:	mov    rdx,r14
  41a814:	lea    rcx,[rip+0x29d25]        # 444540 <__data_start@@Base+0x490>
  41a81b:	lea    r8,[rsp+0xc]
  41a820:	call   416110 <main@@Base+0xf040>
  41a825:	mov    rdx,rax
  41a828:	cmp    rax,rbx
  41a82b:	je     41ac92 <main@@Base+0x13bc2>
  41a831:	cmp    rdx,r14
  41a834:	je     41ac92 <main@@Base+0x13bc2>
  41a83a:	mov    ebp,DWORD PTR [rsp+0xc]
  41a83e:	mov    r15,QWORD PTR [rsp+0x10]
  41a843:	mov    r13,QWORD PTR [rsp+0x18]
  41a848:	test   ebp,ebp
  41a84a:	jne    41a857 <main@@Base+0x13787>
  41a84c:	test   BYTE PTR [r15+0x10],0x2
  41a851:	je     41aa34 <main@@Base+0x13964>
  41a857:	mov    rbx,rdx
  41a85a:	mov    rdi,QWORD PTR [r15]
  41a85d:	mov    esi,0x1
  41a862:	mov    edx,0x4
  41a867:	mov    ecx,0x4
  41a86c:	call   421f20 <flatcc_builder_table_add@@Base>
  41a871:	test   rax,rax
  41a874:	je     41ac95 <main@@Base+0x13bc5>
  41a87a:	mov    DWORD PTR [rax],ebp
  41a87c:	mov    rdx,rbx
  41a87f:	jmp    41aa34 <main@@Base+0x13964>
  41a884:	mov    rax,QWORD PTR [rsp+0x38]
  41a889:	mov    rcx,rax
  41a88c:	shr    rcx,0x20
  41a890:	je     4194b8 <main@@Base+0x123e8>
  41a896:	mov    ecx,0x7
  41a89b:	mov    r15,QWORD PTR [rsp+0x10]
  41a8a0:	mov    rdi,r15
  41a8a3:	mov    rdx,r14
  41a8a6:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  41a8ab:	mov    rbp,rax
  41a8ae:	cmp    rbx,rax
  41a8b1:	jne    41a8ec <main@@Base+0x1381c>
  41a8b3:	mov    rdi,r15
  41a8b6:	mov    rsi,rbx
  41a8b9:	mov    rdx,r14
  41a8bc:	lea    rcx,[rip+0x29cdd]        # 4445a0 <__data_start@@Base+0x4f0>
  41a8c3:	lea    r8,[rsp+0xc]
  41a8c8:	call   416110 <main@@Base+0xf040>
  41a8cd:	mov    rbp,rax
  41a8d0:	cmp    rax,rbx
  41a8d3:	je     41ac9f <main@@Base+0x13bcf>
  41a8d9:	cmp    rbp,r14
  41a8dc:	je     41ac9f <main@@Base+0x13bcf>
  41a8e2:	mov    r12d,DWORD PTR [rsp+0xc]
  41a8e7:	mov    r15,QWORD PTR [rsp+0x10]
  41a8ec:	test   r12d,r12d
  41a8ef:	jne    41a8fc <main@@Base+0x1382c>
  41a8f1:	test   BYTE PTR [r15+0x10],0x2
  41a8f6:	je     41956e <main@@Base+0x1249e>
  41a8fc:	mov    rdi,QWORD PTR [r15]
  41a8ff:	mov    esi,0x6
  41a904:	mov    edx,0x4
  41a909:	mov    ecx,0x4
  41a90e:	call   421f20 <flatcc_builder_table_add@@Base>
  41a913:	test   rax,rax
  41a916:	je     41ac9f <main@@Base+0x13bcf>
  41a91c:	mov    DWORD PTR [rax],r12d
  41a91f:	jmp    41956e <main@@Base+0x1249e>
  41a924:	jne    41a93a <main@@Base+0x1386a>
  41a926:	cmp    BYTE PTR [rsi+0x2],0x20
  41a92a:	jle    41a93a <main@@Base+0x1386a>
  41a92c:	add    rsi,0x2
  41a930:	mov    rax,rsi
  41a933:	mov    r15,QWORD PTR [rsp+0x10]
  41a938:	jmp    41a94d <main@@Base+0x1387d>
  41a93a:	mov    r15,QWORD PTR [rsp+0x10]
  41a93f:	mov    rdi,r15
  41a942:	mov    rsi,rax
  41a945:	mov    rdx,r14
  41a948:	call   425750 <flatcc_json_parser_space_ext@@Base>
  41a94d:	mov    r10,rbx
  41a950:	cmp    r10,rax
  41a953:	mov    r13,QWORD PTR [rsp+0x18]
  41a958:	je     41a996 <main@@Base+0x138c6>
  41a95a:	mov    rdi,r15
  41a95d:	mov    rsi,rax
  41a960:	mov    rdx,r14
  41a963:	lea    rcx,[rsp+0x44]
  41a968:	call   427830 <flatcc_json_parser_build_string@@Base>
  41a96d:	mov    rbx,rax
  41a970:	cmp    DWORD PTR [rsp+0x44],0x0
  41a975:	je     41ac8d <main@@Base+0x13bbd>
  41a97b:	mov    rdi,QWORD PTR [r15]
  41a97e:	mov    esi,0x2
  41a983:	call   421dc0 <flatcc_builder_table_add_offset@@Base>
  41a988:	test   rax,rax
  41a98b:	jne    41a041 <main@@Base+0x12f71>
  41a991:	jmp    41ac8d <main@@Base+0x13bbd>
  41a996:	mov    rdi,r15
  41a999:	mov    rsi,r10
  41a99c:	jmp    41aa29 <main@@Base+0x13959>
  41a9a1:	mov    rdi,QWORD PTR [rsp+0x10]
  41a9a6:	mov    rsi,rbx
  41a9a9:	mov    rdx,r14
  41a9ac:	call   425750 <flatcc_json_parser_space_ext@@Base>
  41a9b1:	mov    rbx,rax
  41a9b4:	cmp    r12,rbx
  41a9b7:	mov    r15,QWORD PTR [rsp+0x10]
  41a9bc:	mov    r13,QWORD PTR [rsp+0x18]
  41a9c1:	je     41aa23 <main@@Base+0x13953>
  41a9c3:	mov    QWORD PTR [rsp+0x38],0x0
  41a9cc:	mov    DWORD PTR [rsp+0x30],0x0
  41a9d4:	mov    DWORD PTR [rsp+0xc],0x0
  41a9dc:	xor    r15d,r15d
  41a9df:	cmp    rbx,r14
  41a9e2:	je     4194a0 <main@@Base+0x123d0>
  41a9e8:	mov    rdi,QWORD PTR [rsp+0x10]
  41a9ed:	mov    rsi,rbx
  41a9f0:	mov    rdx,r14
  41a9f3:	lea    rcx,[rsp+0x30]
  41a9f8:	lea    r8,[rsp+0x38]
  41a9fd:	call   427360 <flatcc_json_parser_integer@@Base>
  41aa02:	cmp    rax,rbx
  41aa05:	je     4194ae <main@@Base+0x123de>
  41aa0b:	mov    rbp,rax
  41aa0e:	cmp    DWORD PTR [rsp+0x30],0x0
  41aa13:	je     4194cc <main@@Base+0x123fc>
  41aa19:	mov    ecx,0x8
  41aa1e:	jmp    4194e3 <main@@Base+0x12413>
  41aa23:	mov    rdi,r15
  41aa26:	mov    rsi,r12
  41aa29:	mov    rdx,r14
  41aa2c:	call   425cc0 <flatcc_json_parser_unmatched_symbol@@Base>
  41aa31:	mov    rdx,rax
  41aa34:	mov    rax,r14
  41aa37:	sub    rax,rdx
  41aa3a:	cmp    rax,0x2
  41aa3e:	jl     41aa5b <main@@Base+0x1398b>
  41aa40:	cmp    BYTE PTR [rdx],0x20
  41aa43:	jg     41aa6c <main@@Base+0x1399c>
  41aa45:	jne    41aa5b <main@@Base+0x1398b>
  41aa47:	cmp    BYTE PTR [rdx+0x1],0x20
  41aa4b:	jle    41aa5b <main@@Base+0x1398b>
  41aa4d:	add    rdx,0x1
  41aa51:	cmp    rdx,r14
  41aa54:	jne    41aa71 <main@@Base+0x139a1>
  41aa56:	jmp    41aae9 <main@@Base+0x13a19>
  41aa5b:	mov    rdi,r15
  41aa5e:	mov    rsi,rdx
  41aa61:	mov    rdx,r14
  41aa64:	call   425750 <flatcc_json_parser_space_ext@@Base>
  41aa69:	mov    rdx,rax
  41aa6c:	cmp    rdx,r14
  41aa6f:	je     41aae9 <main@@Base+0x13a19>
  41aa71:	movzx  eax,BYTE PTR [rdx]
  41aa74:	cmp    al,0x2c
  41aa76:	jne    41aaee <main@@Base+0x13a1e>
  41aa78:	lea    rsi,[rdx+0x1]
  41aa7c:	mov    rax,r14
  41aa7f:	sub    rax,rsi
  41aa82:	cmp    rax,0x2
  41aa86:	jl     41aaa6 <main@@Base+0x139d6>
  41aa88:	cmp    BYTE PTR [rsi],0x20
  41aa8b:	jg     41aab4 <main@@Base+0x139e4>
  41aa8d:	jne    41aaa6 <main@@Base+0x139d6>
  41aa8f:	cmp    BYTE PTR [rdx+0x2],0x20
  41aa93:	jle    41aaa6 <main@@Base+0x139d6>
  41aa95:	add    rdx,0x2
  41aa99:	mov    rsi,rdx
  41aa9c:	cmp    rsi,r14
  41aa9f:	jne    41aab9 <main@@Base+0x139e9>
  41aaa1:	jmp    41ab29 <main@@Base+0x13a59>
  41aaa6:	mov    rdi,r15
  41aaa9:	mov    rdx,r14
  41aaac:	call   425750 <flatcc_json_parser_space_ext@@Base>
  41aab1:	mov    rsi,rax
  41aab4:	cmp    rsi,r14
  41aab7:	je     41ab29 <main@@Base+0x13a59>
  41aab9:	cmp    BYTE PTR [rsi],0x7d
  41aabc:	jne    41958c <main@@Base+0x124bc>
  41aac2:	lea    rbp,[rsi+0x1]
  41aac6:	mov    rax,r14
  41aac9:	sub    rax,rbp
  41aacc:	cmp    rax,0x2
  41aad0:	jl     41ab19 <main@@Base+0x13a49>
  41aad2:	cmp    BYTE PTR [rbp+0x0],0x20
  41aad6:	jg     41ab4c <main@@Base+0x13a7c>
  41aad8:	jne    41ab19 <main@@Base+0x13a49>
  41aada:	cmp    BYTE PTR [rsi+0x2],0x20
  41aade:	jle    41ab19 <main@@Base+0x13a49>
  41aae0:	add    rsi,0x2
  41aae4:	mov    rbp,rsi
  41aae7:	jmp    41ab4c <main@@Base+0x13a7c>
  41aae9:	mov    rbp,r14
  41aaec:	jmp    41ab4c <main@@Base+0x13a7c>
  41aaee:	cmp    al,0x7d
  41aaf0:	jne    41ab36 <main@@Base+0x13a66>
  41aaf2:	lea    rbp,[rdx+0x1]
  41aaf6:	mov    rax,r14
  41aaf9:	sub    rax,rbp
  41aafc:	cmp    rax,0x2
  41ab00:	jl     41ab19 <main@@Base+0x13a49>
  41ab02:	cmp    BYTE PTR [rbp+0x0],0x20
  41ab06:	jg     41ab4c <main@@Base+0x13a7c>
  41ab08:	jne    41ab19 <main@@Base+0x13a49>
  41ab0a:	cmp    BYTE PTR [rdx+0x2],0x20
  41ab0e:	jle    41ab19 <main@@Base+0x13a49>
  41ab10:	add    rdx,0x2
  41ab14:	mov    rbp,rdx
  41ab17:	jmp    41ab4c <main@@Base+0x13a7c>
  41ab19:	mov    rdi,r15
  41ab1c:	mov    rsi,rbp
  41ab1f:	mov    rdx,r14
  41ab22:	call   425750 <flatcc_json_parser_space_ext@@Base>
  41ab27:	jmp    41ab49 <main@@Base+0x13a79>
  41ab29:	mov    ecx,0xa
  41ab2e:	mov    rdi,r15
  41ab31:	mov    rsi,r14
  41ab34:	jmp    41ab41 <main@@Base+0x13a71>
  41ab36:	mov    ecx,0xa
  41ab3b:	mov    rdi,r15
  41ab3e:	mov    rsi,rdx
  41ab41:	mov    rdx,r14
  41ab44:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  41ab49:	mov    rbp,rax
  41ab4c:	mov    rax,QWORD PTR [rsp+0x28]
  41ab51:	cmp    DWORD PTR [rax],0x0
  41ab54:	jne    41aca4 <main@@Base+0x13bd4>
  41ab5a:	mov    rdi,QWORD PTR [r15]
  41ab5d:	call   4215b0 <flatcc_builder_end_table@@Base>
  41ab62:	test   eax,eax
  41ab64:	je     41aca4 <main@@Base+0x13bd4>
  41ab6a:	mov    ebx,eax
  41ab6c:	mov    rdi,QWORD PTR [r15]
  41ab6f:	xor    esi,esi
  41ab71:	call   421dc0 <flatcc_builder_table_add_offset@@Base>
  41ab76:	test   rax,rax
  41ab79:	je     41ac70 <main@@Base+0x13ba0>
  41ab7f:	mov    DWORD PTR [rax],ebx
  41ab81:	movabs rbx,0x625f73746172745f
  41ab8b:	jmp    417c6f <main@@Base+0x10b9f>
  41ab90:	mov    rdi,r15
  41ab93:	mov    rsi,rbx
  41ab96:	mov    rdx,r14
  41ab99:	call   425750 <flatcc_json_parser_space_ext@@Base>
  41ab9e:	jmp    4179d8 <main@@Base+0x10908>
  41aba3:	mov    rbx,r14
  41aba6:	jmp    41ac2e <main@@Base+0x13b5e>
  41abab:	cmp    al,0x7d
  41abad:	jne    41ac18 <main@@Base+0x13b48>
  41abaf:	lea    rbx,[rbp+0x1]
  41abb3:	mov    rax,r14
  41abb6:	sub    rax,rbx
  41abb9:	cmp    rax,0x2
  41abbd:	jl     41ac08 <main@@Base+0x13b38>
  41abbf:	cmp    BYTE PTR [rbx],0x20
  41abc2:	jg     41ac2e <main@@Base+0x13b5e>
  41abc4:	jne    41ac08 <main@@Base+0x13b38>
  41abc6:	cmp    BYTE PTR [rbp+0x2],0x20
  41abca:	jle    41ac08 <main@@Base+0x13b38>
  41abcc:	add    rbp,0x2
  41abd0:	mov    rbx,rbp
  41abd3:	jmp    41ac2e <main@@Base+0x13b5e>
  41abd5:	mov    ecx,0xa
  41abda:	mov    rdi,r15
  41abdd:	mov    rsi,r14
  41abe0:	jmp    41ac23 <main@@Base+0x13b53>
  41abe2:	lea    rbx,[rsi+0x1]
  41abe6:	mov    rax,r14
  41abe9:	sub    rax,rbx
  41abec:	cmp    rax,0x2
  41abf0:	jl     41ac08 <main@@Base+0x13b38>
  41abf2:	cmp    BYTE PTR [rbx],0x20
  41abf5:	jg     41ac2e <main@@Base+0x13b5e>
  41abf7:	jne    41ac08 <main@@Base+0x13b38>
  41abf9:	cmp    BYTE PTR [rsi+0x2],0x20
  41abfd:	jle    41ac08 <main@@Base+0x13b38>
  41abff:	add    rsi,0x2
  41ac03:	mov    rbx,rsi
  41ac06:	jmp    41ac2e <main@@Base+0x13b5e>
  41ac08:	mov    rdi,r15
  41ac0b:	mov    rsi,rbx
  41ac0e:	mov    rdx,r14
  41ac11:	call   425750 <flatcc_json_parser_space_ext@@Base>
  41ac16:	jmp    41ac2b <main@@Base+0x13b5b>
  41ac18:	mov    ecx,0xa
  41ac1d:	mov    rdi,r15
  41ac20:	mov    rsi,rbp
  41ac23:	mov    rdx,r14
  41ac26:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  41ac2b:	mov    rbx,rax
  41ac2e:	mov    rax,QWORD PTR [rsp+0x28]
  41ac33:	cmp    DWORD PTR [rax],0x0
  41ac36:	jne    41ac48 <main@@Base+0x13b78>
  41ac38:	mov    rdi,QWORD PTR [r15]
  41ac3b:	call   4215b0 <flatcc_builder_end_table@@Base>
  41ac40:	mov    DWORD PTR [r13+0x0],eax
  41ac44:	test   eax,eax
  41ac46:	jne    41ac5e <main@@Base+0x13b8e>
  41ac48:	mov    ecx,0x21
  41ac4d:	mov    rdi,r15
  41ac50:	mov    rsi,rbx
  41ac53:	mov    rdx,r14
  41ac56:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  41ac5b:	mov    rbx,rax
  41ac5e:	mov    rax,rbx
  41ac61:	add    rsp,0x48
  41ac65:	pop    rbx
  41ac66:	pop    r12
  41ac68:	pop    r13
  41ac6a:	pop    r14
  41ac6c:	pop    r15
  41ac6e:	pop    rbp
  41ac6f:	ret    
  41ac70:	mov    rbx,rbp
  41ac73:	jmp    41ac48 <main@@Base+0x13b78>
  41ac75:	mov    rbp,r12
  41ac78:	mov    r15,QWORD PTR [rsp+0x10]
  41ac7d:	mov    ecx,0x21
  41ac82:	mov    rdi,r15
  41ac85:	mov    rsi,rbp
  41ac88:	jmp    41acaf <main@@Base+0x13bdf>
  41ac8a:	mov    rbx,rdx
  41ac8d:	mov    rsi,rbx
  41ac90:	jmp    41aca7 <main@@Base+0x13bd7>
  41ac92:	mov    rbx,rdx
  41ac95:	mov    r15,QWORD PTR [rsp+0x10]
  41ac9a:	mov    rsi,rbx
  41ac9d:	jmp    41aca7 <main@@Base+0x13bd7>
  41ac9f:	mov    r15,QWORD PTR [rsp+0x10]
  41aca4:	mov    rsi,rbp
  41aca7:	mov    ecx,0x21
  41acac:	mov    rdi,r15
  41acaf:	mov    rdx,r14
  41acb2:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  41acb7:	mov    rbx,rax
  41acba:	jmp    41ac48 <main@@Base+0x13b78>
  41acbc:	nop    DWORD PTR [rax+0x0]
  41acc0:	push   rbp
  41acc1:	push   r15
  41acc3:	push   r14
  41acc5:	push   r13
  41acc7:	push   r12
  41acc9:	push   rbx
  41acca:	sub    rsp,0x18
  41acce:	mov    r13,rcx
  41acd1:	mov    r15,rdx
  41acd4:	mov    rbx,rsi
  41acd7:	mov    r14,rdi
  41acda:	mov    DWORD PTR [rcx],0x0
  41ace0:	mov    rdi,QWORD PTR [rdi]
  41ace3:	mov    esi,0xa
  41ace8:	call   420ba0 <flatcc_builder_start_table@@Base>
  41aced:	test   eax,eax
  41acef:	je     41ad19 <main@@Base+0x13c49>
  41acf1:	mov    ecx,0x21
  41acf6:	mov    rdi,r14
  41acf9:	mov    rsi,rbx
  41acfc:	mov    rdx,r15
  41acff:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  41ad04:	mov    rbx,rax
  41ad07:	mov    rax,rbx
  41ad0a:	add    rsp,0x18
  41ad0e:	pop    rbx
  41ad0f:	pop    r12
  41ad11:	pop    r13
  41ad13:	pop    r14
  41ad15:	pop    r15
  41ad17:	pop    rbp
  41ad18:	ret    
  41ad19:	lea    r8,[rsp+0x10]
  41ad1e:	mov    ecx,0x5
  41ad23:	mov    rdi,r14
  41ad26:	mov    rsi,rbx
  41ad29:	mov    rdx,r15
  41ad2c:	call   427ae0 <flatcc_json_parser_prepare_unions@@Base>
  41ad31:	cmp    rax,r15
  41ad34:	je     41acf1 <main@@Base+0x13c21>
  41ad36:	cmp    rbx,r15
  41ad39:	je     41ad66 <main@@Base+0x13c96>
  41ad3b:	cmp    BYTE PTR [rbx],0x7b
  41ad3e:	jne    41ad66 <main@@Base+0x13c96>
  41ad40:	lea    rax,[rbx+0x1]
  41ad44:	mov    rcx,r15
  41ad47:	sub    rcx,rax
  41ad4a:	cmp    rcx,0x2
  41ad4e:	jl     41adb6 <main@@Base+0x13ce6>
  41ad50:	cmp    BYTE PTR [rax],0x20
  41ad53:	jg     41adc4 <main@@Base+0x13cf4>
  41ad55:	jne    41adb6 <main@@Base+0x13ce6>
  41ad57:	cmp    BYTE PTR [rbx+0x2],0x20
  41ad5b:	jle    41adb6 <main@@Base+0x13ce6>
  41ad5d:	add    rbx,0x2
  41ad61:	mov    rax,rbx
  41ad64:	jmp    41adc4 <main@@Base+0x13cf4>
  41ad66:	mov    ecx,0x15
  41ad6b:	mov    rdi,r14
  41ad6e:	mov    rsi,rbx
  41ad71:	mov    rdx,r15
  41ad74:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  41ad79:	mov    rbx,rax
  41ad7c:	cmp    DWORD PTR [r14+0x20],0x0
  41ad81:	jne    41acf1 <main@@Base+0x13c21>
  41ad87:	mov    rcx,QWORD PTR [rsp+0x10]
  41ad8c:	mov    rdi,r14
  41ad8f:	mov    rsi,rbx
  41ad92:	mov    rdx,r15
  41ad95:	call   427b60 <flatcc_json_parser_finalize_unions@@Base>
  41ad9a:	mov    rbx,rax
  41ad9d:	mov    rdi,QWORD PTR [r14]
  41ada0:	call   4215b0 <flatcc_builder_end_table@@Base>
  41ada5:	mov    DWORD PTR [r13+0x0],eax
  41ada9:	test   eax,eax
  41adab:	jne    41ad07 <main@@Base+0x13c37>
  41adb1:	jmp    41acf1 <main@@Base+0x13c21>
  41adb6:	mov    rdi,r14
  41adb9:	mov    rsi,rax
  41adbc:	mov    rdx,r15
  41adbf:	call   425750 <flatcc_json_parser_space_ext@@Base>
  41adc4:	mov    rsi,r15
  41adc7:	cmp    rax,r15
  41adca:	je     41add8 <main@@Base+0x13d08>
  41adcc:	cmp    BYTE PTR [rax],0x7d
  41adcf:	je     41c2d0 <main@@Base+0x15200>
  41add5:	mov    rsi,rax
  41add8:	lea    rax,[r14+0x14]
  41addc:	mov    QWORD PTR [rsp+0x8],rax
  41ade1:	movabs rbx,0x7261637465720000
  41adeb:	mov    QWORD PTR [rsp],r13
  41adef:	nop
  41adf0:	mov    r12,r15
  41adf3:	cmp    rsi,r15
  41adf6:	je     41ae37 <main@@Base+0x13d67>
  41adf8:	movzx  eax,BYTE PTR [rsi]
  41adfb:	cmp    al,0x2e
  41adfd:	je     41ae14 <main@@Base+0x13d44>
  41adff:	cmp    al,0x22
  41ae01:	jne    41ae29 <main@@Base+0x13d59>
  41ae03:	add    rsi,0x1
  41ae07:	mov    rax,QWORD PTR [rsp+0x8]
  41ae0c:	mov    DWORD PTR [rax],0x0
  41ae12:	jmp    41ae34 <main@@Base+0x13d64>
  41ae14:	mov    ecx,0x5
  41ae19:	mov    rdi,r14
  41ae1c:	mov    rdx,r15
  41ae1f:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  41ae24:	mov    r12,rax
  41ae27:	jmp    41ae37 <main@@Base+0x13d67>
  41ae29:	mov    rax,QWORD PTR [rsp+0x8]
  41ae2e:	mov    DWORD PTR [rax],0x1
  41ae34:	mov    r12,rsi
  41ae37:	mov    rcx,r15
  41ae3a:	sub    rcx,r12
  41ae3d:	cmp    rcx,0x8
  41ae41:	jb     41ae50 <main@@Base+0x13d80>
  41ae43:	movbe  rax,QWORD PTR [r12]
  41ae49:	jmp    41aeeb <main@@Base+0x13e1b>
  41ae4e:	xchg   ax,ax
  41ae50:	mov    eax,ecx
  41ae52:	and    al,0xf
  41ae54:	add    al,0xff
  41ae56:	cmp    al,0x7
  41ae58:	ja     41b8a3 <main@@Base+0x147d3>
  41ae5e:	movzx  eax,al
  41ae61:	lea    rdx,[rip+0x1aa8c]        # 4358f4 <_IO_stdin_used@@Base+0x8f4>
  41ae68:	movsxd rax,DWORD PTR [rdx+rax*4]
  41ae6c:	add    rax,rdx
  41ae6f:	xor    r8d,r8d
  41ae72:	xor    r9d,r9d
  41ae75:	xor    edx,edx
  41ae77:	xor    esi,esi
  41ae79:	xor    ebx,ebx
  41ae7b:	xor    ebp,ebp
  41ae7d:	xor    edi,edi
  41ae7f:	jmp    rax
  41ae81:	movsx  r8,BYTE PTR [r12+0x7]
  41ae87:	movsx  r9,BYTE PTR [r12+0x6]
  41ae8d:	shl    r9,0x8
  41ae91:	or     r9,r8
  41ae94:	movsx  rdx,BYTE PTR [r12+0x5]
  41ae9a:	shl    rdx,0x10
  41ae9e:	or     rdx,r9
  41aea1:	movsx  rsi,BYTE PTR [r12+0x4]
  41aea7:	shl    rsi,0x18
  41aeab:	or     rsi,rdx
  41aeae:	movsx  rbx,BYTE PTR [r12+0x3]
  41aeb4:	shl    rbx,0x20
  41aeb8:	or     rbx,rsi
  41aebb:	movsx  rbp,BYTE PTR [r12+0x2]
  41aec1:	shl    rbp,0x28
  41aec5:	or     rbp,rbx
  41aec8:	movsx  rdi,BYTE PTR [r12+0x1]
  41aece:	shl    rdi,0x30
  41aed2:	or     rdi,rbp
  41aed5:	movzx  eax,BYTE PTR [r12]
  41aeda:	shl    rax,0x38
  41aede:	or     rax,rdi
  41aee1:	movabs rbx,0x7261637465720000
  41aeeb:	movabs rdx,0x6368617261637465
  41aef5:	cmp    rax,rdx
  41aef8:	jae    41af40 <main@@Base+0x13e70>
  41aefa:	movabs rdx,0x63616d656f5f7479
  41af04:	cmp    rax,rdx
  41af07:	je     41afc8 <main@@Base+0x13ef8>
  41af0d:	movabs rdx,0x616e7461676f6e69
  41af17:	cmp    rax,rdx
  41af1a:	jne    41afe8 <main@@Base+0x13f18>
  41af20:	lea    r13,[r12+0x8]
  41af25:	mov    rax,r15
  41af28:	sub    rax,r13
  41af2b:	cmp    rax,0x8
  41af2f:	jb     41b046 <main@@Base+0x13f76>
  41af35:	movbe  rcx,QWORD PTR [r13+0x0]
  41af3b:	jmp    41b0e4 <main@@Base+0x14014>
  41af40:	movabs rcx,0x6d61696e5f636860
  41af4a:	cmp    rax,rcx
  41af4d:	ja     41af82 <main@@Base+0x13eb2>
  41af4f:	movabs rcx,0x6368617261637465
  41af59:	cmp    rax,rcx
  41af5c:	jne    41b8a3 <main@@Base+0x147d3>
  41af62:	lea    r13,[r12+0x8]
  41af67:	mov    rax,r15
  41af6a:	sub    rax,r13
  41af6d:	cmp    rax,0x8
  41af71:	jb     41b2b6 <main@@Base+0x141e6>
  41af77:	movbe  rcx,QWORD PTR [r13+0x0]
  41af7d:	jmp    41b354 <main@@Base+0x14284>
  41af82:	movabs rcx,0x736964655f6b6963
  41af8c:	cmp    rax,rcx
  41af8f:	je     41b13c <main@@Base+0x1406c>
  41af95:	movabs rcx,0x6d61696e5f636861
  41af9f:	cmp    rax,rcx
  41afa2:	jne    41b8a3 <main@@Base+0x147d3>
  41afa8:	lea    r13,[r12+0x8]
  41afad:	mov    rax,r15
  41afb0:	sub    rax,r13
  41afb3:	cmp    rax,0x8
  41afb7:	jb     41b406 <main@@Base+0x14336>
  41afbd:	movbe  rcx,QWORD PTR [r13+0x0]
  41afc3:	jmp    41b4a4 <main@@Base+0x143d4>
  41afc8:	lea    r13,[r12+0x8]
  41afcd:	mov    rax,r15
  41afd0:	sub    rax,r13
  41afd3:	cmp    rax,0x8
  41afd7:	jb     41b15c <main@@Base+0x1408c>
  41afdd:	movbe  rcx,QWORD PTR [r13+0x0]
  41afe3:	jmp    41b1fa <main@@Base+0x1412a>
  41afe8:	shr    rax,0x18
  41afec:	movabs rdx,0x63616d656f
  41aff6:	cmp    rax,rdx
  41aff9:	jne    41b8a3 <main@@Base+0x147d3>
  41afff:	mov    rax,r12
  41b002:	cmp    rcx,0x6
  41b006:	jl     41bccc <main@@Base+0x14bfc>
  41b00c:	mov    rax,QWORD PTR [rsp+0x8]
  41b011:	cmp    DWORD PTR [rax],0x0
  41b014:	movzx  ecx,BYTE PTR [r12+0x5]
  41b01a:	je     41b751 <main@@Base+0x14681>
  41b020:	cmp    cl,0x21
  41b023:	jl     41b031 <main@@Base+0x13f61>
  41b025:	mov    rax,r12
  41b028:	cmp    cl,0x3a
  41b02b:	jne    41bccc <main@@Base+0x14bfc>
  41b031:	lea    rsi,[r12+0x5]
  41b036:	mov    rax,QWORD PTR [rsp+0x8]
  41b03b:	mov    DWORD PTR [rax],0x0
  41b041:	jmp    41b762 <main@@Base+0x14692>
  41b046:	mov    ecx,eax
  41b048:	and    cl,0xf
  41b04b:	add    cl,0xff
  41b04e:	cmp    cl,0x7
  41b051:	ja     41c1d0 <main@@Base+0x15100>
  41b057:	movzx  ecx,cl
  41b05a:	lea    rdx,[rip+0x1a953]        # 4359b4 <_IO_stdin_used@@Base+0x9b4>
  41b061:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  41b065:	add    rcx,rdx
  41b068:	xor    r8d,r8d
  41b06b:	xor    r9d,r9d
  41b06e:	xor    edx,edx
  41b070:	xor    esi,esi
  41b072:	xor    ebx,ebx
  41b074:	xor    ebp,ebp
  41b076:	xor    edi,edi
  41b078:	jmp    rcx
  41b07a:	movsx  r8,BYTE PTR [r12+0xf]
  41b080:	movsx  r9,BYTE PTR [r12+0xe]
  41b086:	shl    r9,0x8
  41b08a:	or     r9,r8
  41b08d:	movsx  rdx,BYTE PTR [r12+0xd]
  41b093:	shl    rdx,0x10
  41b097:	or     rdx,r9
  41b09a:	movsx  rsi,BYTE PTR [r12+0xc]
  41b0a0:	shl    rsi,0x18
  41b0a4:	or     rsi,rdx
  41b0a7:	movsx  rbx,BYTE PTR [r12+0xb]
  41b0ad:	shl    rbx,0x20
  41b0b1:	or     rbx,rsi
  41b0b4:	movsx  rbp,BYTE PTR [r12+0xa]
  41b0ba:	shl    rbp,0x28
  41b0be:	or     rbp,rbx
  41b0c1:	movsx  rdi,BYTE PTR [r12+0x9]
  41b0c7:	shl    rdi,0x30
  41b0cb:	or     rdi,rbp
  41b0ce:	movzx  ecx,BYTE PTR [r13+0x0]
  41b0d3:	shl    rcx,0x38
  41b0d7:	or     rcx,rdi
  41b0da:	movabs rbx,0x7261637465720000
  41b0e4:	mov    rdx,rcx
  41b0e7:	shr    rdx,0x8
  41b0eb:	movabs rsi,0x73745f74797065
  41b0f5:	cmp    rdx,rsi
  41b0f8:	jne    41b258 <main@@Base+0x14188>
  41b0fe:	cmp    rax,0x8
  41b102:	jl     41c1d0 <main@@Base+0x15100>
  41b108:	mov    rax,QWORD PTR [rsp+0x8]
  41b10d:	cmp    DWORD PTR [rax],0x0
  41b110:	movzx  eax,BYTE PTR [r12+0xf]
  41b116:	je     41b79d <main@@Base+0x146cd>
  41b11c:	cmp    al,0x21
  41b11e:	jl     41b128 <main@@Base+0x14058>
  41b120:	cmp    al,0x3a
  41b122:	jne    41c1d0 <main@@Base+0x15100>
  41b128:	add    r12,0xf
  41b12c:	mov    rax,QWORD PTR [rsp+0x8]
  41b131:	mov    DWORD PTR [rax],0x0
  41b137:	jmp    41b7a9 <main@@Base+0x146d9>
  41b13c:	lea    r13,[r12+0x8]
  41b141:	mov    rax,r15
  41b144:	sub    rax,r13
  41b147:	cmp    rax,0x8
  41b14b:	jb     41b4d4 <main@@Base+0x14404>
  41b151:	movbe  rcx,QWORD PTR [r13+0x0]
  41b157:	jmp    41b572 <main@@Base+0x144a2>
  41b15c:	mov    ecx,eax
  41b15e:	and    cl,0xf
  41b161:	add    cl,0xff
  41b164:	cmp    cl,0x7
  41b167:	ja     41c1d0 <main@@Base+0x15100>
  41b16d:	movzx  ecx,cl
  41b170:	lea    rdx,[rip+0x1a81d]        # 435994 <_IO_stdin_used@@Base+0x994>
  41b177:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  41b17b:	add    rcx,rdx
  41b17e:	xor    r8d,r8d
  41b181:	xor    r9d,r9d
  41b184:	xor    edx,edx
  41b186:	xor    esi,esi
  41b188:	xor    ebx,ebx
  41b18a:	xor    ebp,ebp
  41b18c:	xor    edi,edi
  41b18e:	jmp    rcx
  41b190:	movsx  r8,BYTE PTR [r12+0xf]
  41b196:	movsx  r9,BYTE PTR [r12+0xe]
  41b19c:	shl    r9,0x8
  41b1a0:	or     r9,r8
  41b1a3:	movsx  rdx,BYTE PTR [r12+0xd]
  41b1a9:	shl    rdx,0x10
  41b1ad:	or     rdx,r9
  41b1b0:	movsx  rsi,BYTE PTR [r12+0xc]
  41b1b6:	shl    rsi,0x18
  41b1ba:	or     rsi,rdx
  41b1bd:	movsx  rbx,BYTE PTR [r12+0xb]
  41b1c3:	shl    rbx,0x20
  41b1c7:	or     rbx,rsi
  41b1ca:	movsx  rbp,BYTE PTR [r12+0xa]
  41b1d0:	shl    rbp,0x28
  41b1d4:	or     rbp,rbx
  41b1d7:	movsx  rdi,BYTE PTR [r12+0x9]
  41b1dd:	shl    rdi,0x30
  41b1e1:	or     rdi,rbp
  41b1e4:	movzx  ecx,BYTE PTR [r13+0x0]
  41b1e9:	shl    rcx,0x38
  41b1ed:	or     rcx,rdi
  41b1f0:	movabs rbx,0x7261637465720000
  41b1fa:	movabs rdx,0xffff000000000000
  41b204:	and    rcx,rdx
  41b207:	movabs rdx,0x7065000000000000
  41b211:	cmp    rcx,rdx
  41b214:	jne    41c1d0 <main@@Base+0x15100>
  41b21a:	cmp    rax,0x3
  41b21e:	jl     41c1d0 <main@@Base+0x15100>
  41b224:	mov    rax,QWORD PTR [rsp+0x8]
  41b229:	cmp    DWORD PTR [rax],0x0
  41b22c:	movzx  eax,BYTE PTR [r12+0xa]
  41b232:	je     41b7e8 <main@@Base+0x14718>
  41b238:	cmp    al,0x21
  41b23a:	jl     41b244 <main@@Base+0x14174>
  41b23c:	cmp    al,0x3a
  41b23e:	jne    41c1d0 <main@@Base+0x15100>
  41b244:	add    r12,0xa
  41b248:	mov    rax,QWORD PTR [rsp+0x8]
  41b24d:	mov    DWORD PTR [rax],0x0
  41b253:	jmp    41b7f4 <main@@Base+0x14724>
  41b258:	movabs rdx,0xffff000000000000
  41b262:	and    rcx,rdx
  41b265:	movabs rdx,0x7374000000000000
  41b26f:	cmp    rcx,rdx
  41b272:	jne    41c1d0 <main@@Base+0x15100>
  41b278:	cmp    rax,0x3
  41b27c:	jl     41c1d0 <main@@Base+0x15100>
  41b282:	mov    rax,QWORD PTR [rsp+0x8]
  41b287:	cmp    DWORD PTR [rax],0x0
  41b28a:	movzx  eax,BYTE PTR [r12+0xa]
  41b290:	je     41ba7b <main@@Base+0x149ab>
  41b296:	cmp    al,0x21
  41b298:	jl     41b2a2 <main@@Base+0x141d2>
  41b29a:	cmp    al,0x3a
  41b29c:	jne    41c1d0 <main@@Base+0x15100>
  41b2a2:	add    r12,0xa
  41b2a6:	mov    rax,QWORD PTR [rsp+0x8]
  41b2ab:	mov    DWORD PTR [rax],0x0
  41b2b1:	jmp    41ba87 <main@@Base+0x149b7>
  41b2b6:	mov    ecx,eax
  41b2b8:	and    cl,0xf
  41b2bb:	add    cl,0xff
  41b2be:	cmp    cl,0x7
  41b2c1:	ja     41c1d0 <main@@Base+0x15100>
  41b2c7:	movzx  ecx,cl
  41b2ca:	lea    rdx,[rip+0x1a6a3]        # 435974 <_IO_stdin_used@@Base+0x974>
  41b2d1:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  41b2d5:	add    rcx,rdx
  41b2d8:	xor    r8d,r8d
  41b2db:	xor    r9d,r9d
  41b2de:	xor    edx,edx
  41b2e0:	xor    esi,esi
  41b2e2:	xor    ebx,ebx
  41b2e4:	xor    ebp,ebp
  41b2e6:	xor    edi,edi
  41b2e8:	jmp    rcx
  41b2ea:	movsx  r8,BYTE PTR [r12+0xf]
  41b2f0:	movsx  r9,BYTE PTR [r12+0xe]
  41b2f6:	shl    r9,0x8
  41b2fa:	or     r9,r8
  41b2fd:	movsx  rdx,BYTE PTR [r12+0xd]
  41b303:	shl    rdx,0x10
  41b307:	or     rdx,r9
  41b30a:	movsx  rsi,BYTE PTR [r12+0xc]
  41b310:	shl    rsi,0x18
  41b314:	or     rsi,rdx
  41b317:	movsx  rbx,BYTE PTR [r12+0xb]
  41b31d:	shl    rbx,0x20
  41b321:	or     rbx,rsi
  41b324:	movsx  rbp,BYTE PTR [r12+0xa]
  41b32a:	shl    rbp,0x28
  41b32e:	or     rbp,rbx
  41b331:	movsx  rdi,BYTE PTR [r12+0x9]
  41b337:	shl    rdi,0x30
  41b33b:	or     rdi,rbp
  41b33e:	movzx  ecx,BYTE PTR [r13+0x0]
  41b343:	shl    rcx,0x38
  41b347:	or     rcx,rdi
  41b34a:	movabs rbx,0x7261637465720000
  41b354:	mov    rdx,rcx
  41b357:	shr    rdx,0x8
  41b35b:	movabs rsi,0x72735f74797065
  41b365:	cmp    rdx,rsi
  41b368:	jne    41b3a8 <main@@Base+0x142d8>
  41b36a:	cmp    rax,0x8
  41b36e:	jl     41c1d0 <main@@Base+0x15100>
  41b374:	mov    rax,QWORD PTR [rsp+0x8]
  41b379:	cmp    DWORD PTR [rax],0x0
  41b37c:	movzx  eax,BYTE PTR [r12+0xf]
  41b382:	je     41b9c4 <main@@Base+0x148f4>
  41b388:	cmp    al,0x21
  41b38a:	jl     41b394 <main@@Base+0x142c4>
  41b38c:	cmp    al,0x3a
  41b38e:	jne    41c1d0 <main@@Base+0x15100>
  41b394:	add    r12,0xf
  41b398:	mov    rax,QWORD PTR [rsp+0x8]
  41b39d:	mov    DWORD PTR [rax],0x0
  41b3a3:	jmp    41b9d0 <main@@Base+0x14900>
  41b3a8:	movabs rdx,0xffff000000000000
  41b3b2:	and    rcx,rdx
  41b3b5:	movabs rdx,0x7273000000000000
  41b3bf:	cmp    rcx,rdx
  41b3c2:	jne    41c1d0 <main@@Base+0x15100>
  41b3c8:	cmp    rax,0x3
  41b3cc:	jl     41c1d0 <main@@Base+0x15100>
  41b3d2:	mov    rax,QWORD PTR [rsp+0x8]
  41b3d7:	cmp    DWORD PTR [rax],0x0
  41b3da:	movzx  eax,BYTE PTR [r12+0xa]
  41b3e0:	je     41bc07 <main@@Base+0x14b37>
  41b3e6:	cmp    al,0x21
  41b3e8:	jl     41b3f2 <main@@Base+0x14322>
  41b3ea:	cmp    al,0x3a
  41b3ec:	jne    41c1d0 <main@@Base+0x15100>
  41b3f2:	add    r12,0xa
  41b3f6:	mov    rax,QWORD PTR [rsp+0x8]
  41b3fb:	mov    DWORD PTR [rax],0x0
  41b401:	jmp    41bc13 <main@@Base+0x14b43>
  41b406:	mov    ecx,eax
  41b408:	and    cl,0xf
  41b40b:	add    cl,0xff
  41b40e:	cmp    cl,0x7
  41b411:	ja     41c1d0 <main@@Base+0x15100>
  41b417:	movzx  ecx,cl
  41b41a:	lea    rdx,[rip+0x1a513]        # 435934 <_IO_stdin_used@@Base+0x934>
  41b421:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  41b425:	add    rcx,rdx
  41b428:	xor    r8d,r8d
  41b42b:	xor    r9d,r9d
  41b42e:	xor    edx,edx
  41b430:	xor    esi,esi
  41b432:	xor    ebx,ebx
  41b434:	xor    ebp,ebp
  41b436:	xor    edi,edi
  41b438:	jmp    rcx
  41b43a:	movsx  r8,BYTE PTR [r12+0xf]
  41b440:	movsx  r9,BYTE PTR [r12+0xe]
  41b446:	shl    r9,0x8
  41b44a:	or     r9,r8
  41b44d:	movsx  rdx,BYTE PTR [r12+0xd]
  41b453:	shl    rdx,0x10
  41b457:	or     rdx,r9
  41b45a:	movsx  rsi,BYTE PTR [r12+0xc]
  41b460:	shl    rsi,0x18
  41b464:	or     rsi,rdx
  41b467:	movsx  rbx,BYTE PTR [r12+0xb]
  41b46d:	shl    rbx,0x20
  41b471:	or     rbx,rsi
  41b474:	movsx  rbp,BYTE PTR [r12+0xa]
  41b47a:	shl    rbp,0x28
  41b47e:	or     rbp,rbx
  41b481:	movsx  rdi,BYTE PTR [r12+0x9]
  41b487:	shl    rdi,0x30
  41b48b:	or     rdi,rbp
  41b48e:	movzx  ecx,BYTE PTR [r13+0x0]
  41b493:	shl    rcx,0x38
  41b497:	or     rcx,rdi
  41b49a:	movabs rbx,0x7261637465720000
  41b4a4:	lea    rdx,[rbx+0x5f74]
  41b4ab:	cmp    rcx,rdx
  41b4ae:	jne    41b5ca <main@@Base+0x144fa>
  41b4b4:	lea    r13,[r12+0x10]
  41b4b9:	mov    rax,r15
  41b4bc:	sub    rax,r13
  41b4bf:	cmp    rax,0x8
  41b4c3:	jb     41b664 <main@@Base+0x14594>
  41b4c9:	movbe  rcx,QWORD PTR [r13+0x0]
  41b4cf:	jmp    41b702 <main@@Base+0x14632>
  41b4d4:	mov    ecx,eax
  41b4d6:	and    cl,0xf
  41b4d9:	add    cl,0xff
  41b4dc:	cmp    cl,0x7
  41b4df:	ja     41c1d0 <main@@Base+0x15100>
  41b4e5:	movzx  ecx,cl
  41b4e8:	lea    rdx,[rip+0x1a425]        # 435914 <_IO_stdin_used@@Base+0x914>
  41b4ef:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  41b4f3:	add    rcx,rdx
  41b4f6:	xor    r8d,r8d
  41b4f9:	xor    r9d,r9d
  41b4fc:	xor    edx,edx
  41b4fe:	xor    esi,esi
  41b500:	xor    ebx,ebx
  41b502:	xor    ebp,ebp
  41b504:	xor    edi,edi
  41b506:	jmp    rcx
  41b508:	movsx  r8,BYTE PTR [r12+0xf]
  41b50e:	movsx  r9,BYTE PTR [r12+0xe]
  41b514:	shl    r9,0x8
  41b518:	or     r9,r8
  41b51b:	movsx  rdx,BYTE PTR [r12+0xd]
  41b521:	shl    rdx,0x10
  41b525:	or     rdx,r9
  41b528:	movsx  rsi,BYTE PTR [r12+0xc]
  41b52e:	shl    rsi,0x18
  41b532:	or     rsi,rdx
  41b535:	movsx  rbx,BYTE PTR [r12+0xb]
  41b53b:	shl    rbx,0x20
  41b53f:	or     rbx,rsi
  41b542:	movsx  rbp,BYTE PTR [r12+0xa]
  41b548:	shl    rbp,0x28
  41b54c:	or     rbp,rbx
  41b54f:	movsx  rdi,BYTE PTR [r12+0x9]
  41b555:	shl    rdi,0x30
  41b559:	or     rdi,rbp
  41b55c:	movzx  ecx,BYTE PTR [r13+0x0]
  41b561:	shl    rcx,0x38
  41b565:	or     rcx,rdi
  41b568:	movabs rbx,0x7261637465720000
  41b572:	mov    rdx,rcx
  41b575:	shr    rdx,0x10
  41b579:	movabs rsi,0x6b5f74797065
  41b583:	cmp    rdx,rsi
  41b586:	jne    41b618 <main@@Base+0x14548>
  41b58c:	cmp    rax,0x7
  41b590:	jl     41c1d0 <main@@Base+0x15100>
  41b596:	mov    rax,QWORD PTR [rsp+0x8]
  41b59b:	cmp    DWORD PTR [rax],0x0
  41b59e:	movzx  eax,BYTE PTR [r12+0xe]
  41b5a4:	je     41bab2 <main@@Base+0x149e2>
  41b5aa:	cmp    al,0x21
  41b5ac:	jl     41b5b6 <main@@Base+0x144e6>
  41b5ae:	cmp    al,0x3a
  41b5b0:	jne    41c1d0 <main@@Base+0x15100>
  41b5b6:	add    r12,0xe
  41b5ba:	mov    rax,QWORD PTR [rsp+0x8]
  41b5bf:	mov    DWORD PTR [rax],0x0
  41b5c5:	jmp    41babe <main@@Base+0x149ee>
  41b5ca:	and    rcx,0xffffffffffff0000
  41b5d1:	cmp    rcx,rbx
  41b5d4:	jne    41c1d0 <main@@Base+0x15100>
  41b5da:	cmp    rax,0x7
  41b5de:	jl     41c1d0 <main@@Base+0x15100>
  41b5e4:	mov    rax,QWORD PTR [rsp+0x8]
  41b5e9:	cmp    DWORD PTR [rax],0x0
  41b5ec:	movzx  eax,BYTE PTR [r12+0xe]
  41b5f2:	je     41bd90 <main@@Base+0x14cc0>
  41b5f8:	cmp    al,0x21
  41b5fa:	jl     41b604 <main@@Base+0x14534>
  41b5fc:	cmp    al,0x3a
  41b5fe:	jne    41c1d0 <main@@Base+0x15100>
  41b604:	add    r12,0xe
  41b608:	mov    rax,QWORD PTR [rsp+0x8]
  41b60d:	mov    DWORD PTR [rax],0x0
  41b613:	jmp    41bd9c <main@@Base+0x14ccc>
  41b618:	shr    rcx,0x38
  41b61c:	cmp    rcx,0x6b
  41b620:	jne    41c1d0 <main@@Base+0x15100>
  41b626:	cmp    rax,0x2
  41b62a:	jl     41c1d0 <main@@Base+0x15100>
  41b630:	mov    rax,QWORD PTR [rsp+0x8]
  41b635:	cmp    DWORD PTR [rax],0x0
  41b638:	movzx  eax,BYTE PTR [r12+0x9]
  41b63e:	je     41bddb <main@@Base+0x14d0b>
  41b644:	cmp    al,0x21
  41b646:	jl     41b650 <main@@Base+0x14580>
  41b648:	cmp    al,0x3a
  41b64a:	jne    41c1d0 <main@@Base+0x15100>
  41b650:	add    r12,0x9
  41b654:	mov    rax,QWORD PTR [rsp+0x8]
  41b659:	mov    DWORD PTR [rax],0x0
  41b65f:	jmp    41bde7 <main@@Base+0x14d17>
  41b664:	mov    ecx,eax
  41b666:	and    cl,0xf
  41b669:	add    cl,0xff
  41b66c:	cmp    cl,0x7
  41b66f:	ja     41c1d0 <main@@Base+0x15100>
  41b675:	movzx  ecx,cl
  41b678:	lea    rdx,[rip+0x1a2d5]        # 435954 <_IO_stdin_used@@Base+0x954>
  41b67f:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  41b683:	add    rcx,rdx
  41b686:	xor    r8d,r8d
  41b689:	xor    r9d,r9d
  41b68c:	xor    edx,edx
  41b68e:	xor    esi,esi
  41b690:	xor    ebx,ebx
  41b692:	xor    ebp,ebp
  41b694:	xor    edi,edi
  41b696:	jmp    rcx
  41b698:	movsx  r8,BYTE PTR [r12+0x17]
  41b69e:	movsx  r9,BYTE PTR [r12+0x16]
  41b6a4:	shl    r9,0x8
  41b6a8:	or     r9,r8
  41b6ab:	movsx  rdx,BYTE PTR [r12+0x15]
  41b6b1:	shl    rdx,0x10
  41b6b5:	or     rdx,r9
  41b6b8:	movsx  rsi,BYTE PTR [r12+0x14]
  41b6be:	shl    rsi,0x18
  41b6c2:	or     rsi,rdx
  41b6c5:	movsx  rbx,BYTE PTR [r12+0x13]
  41b6cb:	shl    rbx,0x20
  41b6cf:	or     rbx,rsi
  41b6d2:	movsx  rbp,BYTE PTR [r12+0x12]
  41b6d8:	shl    rbp,0x28
  41b6dc:	or     rbp,rbx
  41b6df:	movsx  rdi,BYTE PTR [r12+0x11]
  41b6e5:	shl    rdi,0x30
  41b6e9:	or     rdi,rbp
  41b6ec:	movzx  ecx,BYTE PTR [r13+0x0]
  41b6f1:	shl    rcx,0x38
  41b6f5:	or     rcx,rdi
  41b6f8:	movabs rbx,0x7261637465720000
  41b702:	shr    rcx,0x28
  41b706:	cmp    rcx,0x797065
  41b70d:	jne    41c1d0 <main@@Base+0x15100>
  41b713:	cmp    rax,0x4
  41b717:	jl     41c1d0 <main@@Base+0x15100>
  41b71d:	mov    rax,QWORD PTR [rsp+0x8]
  41b722:	cmp    DWORD PTR [rax],0x0
  41b725:	movzx  eax,BYTE PTR [r12+0x13]
  41b72b:	je     41be26 <main@@Base+0x14d56>
  41b731:	cmp    al,0x21
  41b733:	jl     41b73d <main@@Base+0x1466d>
  41b735:	cmp    al,0x3a
  41b737:	jne    41c1d0 <main@@Base+0x15100>
  41b73d:	add    r12,0x13
  41b741:	mov    rax,QWORD PTR [rsp+0x8]
  41b746:	mov    DWORD PTR [rax],0x0
  41b74c:	jmp    41be32 <main@@Base+0x14d62>
  41b751:	mov    rax,r12
  41b754:	cmp    cl,0x22
  41b757:	jne    41bccc <main@@Base+0x14bfc>
  41b75d:	lea    rsi,[r12+0x6]
  41b762:	mov    rax,r15
  41b765:	sub    rax,rsi
  41b768:	cmp    rax,0x2
  41b76c:	jl     41b833 <main@@Base+0x14763>
  41b772:	cmp    BYTE PTR [rsi],0x20
  41b775:	jg     41b841 <main@@Base+0x14771>
  41b77b:	jne    41b833 <main@@Base+0x14763>
  41b781:	cmp    BYTE PTR [rsi+0x1],0x20
  41b785:	jle    41b833 <main@@Base+0x14763>
  41b78b:	add    rsi,0x1
  41b78f:	cmp    rsi,r15
  41b792:	jne    41b846 <main@@Base+0x14776>
  41b798:	jmp    41b88a <main@@Base+0x147ba>
  41b79d:	cmp    al,0x22
  41b79f:	jne    41c1d0 <main@@Base+0x15100>
  41b7a5:	add    r12,0x10
  41b7a9:	mov    rax,r15
  41b7ac:	sub    rax,r12
  41b7af:	cmp    rax,0x2
  41b7b3:	jl     41b8b6 <main@@Base+0x147e6>
  41b7b9:	cmp    BYTE PTR [r12],0x20
  41b7be:	jg     41b8c7 <main@@Base+0x147f7>
  41b7c4:	jne    41b8b6 <main@@Base+0x147e6>
  41b7ca:	cmp    BYTE PTR [r12+0x1],0x20
  41b7d0:	jle    41b8b6 <main@@Base+0x147e6>
  41b7d6:	add    r12,0x1
  41b7da:	cmp    r12,r15
  41b7dd:	jne    41b8d0 <main@@Base+0x14800>
  41b7e3:	jmp    41b982 <main@@Base+0x148b2>
  41b7e8:	cmp    al,0x22
  41b7ea:	jne    41c1d0 <main@@Base+0x15100>
  41b7f0:	add    r12,0xb
  41b7f4:	mov    rax,r15
  41b7f7:	sub    rax,r12
  41b7fa:	cmp    rax,0x2
  41b7fe:	jl     41b920 <main@@Base+0x14850>
  41b804:	cmp    BYTE PTR [r12],0x20
  41b809:	jg     41b931 <main@@Base+0x14861>
  41b80f:	jne    41b920 <main@@Base+0x14850>
  41b815:	cmp    BYTE PTR [r12+0x1],0x20
  41b81b:	jle    41b920 <main@@Base+0x14850>
  41b821:	add    r12,0x1
  41b825:	cmp    r12,r15
  41b828:	jne    41b936 <main@@Base+0x14866>
  41b82e:	jmp    41b9a3 <main@@Base+0x148d3>
  41b833:	mov    rdi,r14
  41b836:	mov    rdx,r15
  41b839:	call   425750 <flatcc_json_parser_space_ext@@Base>
  41b83e:	mov    rsi,rax
  41b841:	cmp    rsi,r15
  41b844:	je     41b88a <main@@Base+0x147ba>
  41b846:	cmp    BYTE PTR [rsi],0x3a
  41b849:	jne    41b88a <main@@Base+0x147ba>
  41b84b:	lea    rax,[rsi+0x1]
  41b84f:	mov    rcx,r15
  41b852:	sub    rcx,rax
  41b855:	cmp    rcx,0x2
  41b859:	jl     41bcbe <main@@Base+0x14bee>
  41b85f:	cmp    BYTE PTR [rax],0x20
  41b862:	jg     41bccc <main@@Base+0x14bfc>
  41b868:	jne    41bcbe <main@@Base+0x14bee>
  41b86e:	cmp    BYTE PTR [rsi+0x2],0x20
  41b872:	jle    41bcbe <main@@Base+0x14bee>
  41b878:	add    rsi,0x2
  41b87c:	mov    rax,rsi
  41b87f:	cmp    r12,rax
  41b882:	jne    41bcd5 <main@@Base+0x14c05>
  41b888:	jmp    41b8a3 <main@@Base+0x147d3>
  41b88a:	mov    ecx,0x4
  41b88f:	mov    rdi,r14
  41b892:	mov    rdx,r15
  41b895:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  41b89a:	cmp    r12,rax
  41b89d:	jne    41bcd5 <main@@Base+0x14c05>
  41b8a3:	mov    rdi,r14
  41b8a6:	mov    rsi,r12
  41b8a9:	mov    rdx,r15
  41b8ac:	call   425cc0 <flatcc_json_parser_unmatched_symbol@@Base>
  41b8b1:	jmp    41c1e2 <main@@Base+0x15112>
  41b8b6:	mov    rdi,r14
  41b8b9:	mov    rsi,r12
  41b8bc:	mov    rdx,r15
  41b8bf:	call   425750 <flatcc_json_parser_space_ext@@Base>
  41b8c4:	mov    r12,rax
  41b8c7:	cmp    r12,r15
  41b8ca:	je     41b982 <main@@Base+0x148b2>
  41b8d0:	cmp    BYTE PTR [r12],0x3a
  41b8d5:	jne    41b982 <main@@Base+0x148b2>
  41b8db:	lea    rax,[r12+0x1]
  41b8e0:	mov    rcx,r15
  41b8e3:	sub    rcx,rax
  41b8e6:	cmp    rcx,0x2
  41b8ea:	jl     41bd08 <main@@Base+0x14c38>
  41b8f0:	cmp    BYTE PTR [rax],0x20
  41b8f3:	jg     41bd16 <main@@Base+0x14c46>
  41b8f9:	jne    41bd08 <main@@Base+0x14c38>
  41b8ff:	cmp    BYTE PTR [r12+0x2],0x20
  41b905:	jle    41bd08 <main@@Base+0x14c38>
  41b90b:	add    r12,0x2
  41b90f:	mov    rax,r12
  41b912:	cmp    r13,rax
  41b915:	jne    41bd1f <main@@Base+0x14c4f>
  41b91b:	jmp    41c1d0 <main@@Base+0x15100>
  41b920:	mov    rdi,r14
  41b923:	mov    rsi,r12
  41b926:	mov    rdx,r15
  41b929:	call   425750 <flatcc_json_parser_space_ext@@Base>
  41b92e:	mov    r12,rax
  41b931:	cmp    r12,r15
  41b934:	je     41b9a3 <main@@Base+0x148d3>
  41b936:	cmp    BYTE PTR [r12],0x3a
  41b93b:	jne    41b9a3 <main@@Base+0x148d3>
  41b93d:	lea    rax,[r12+0x1]
  41b942:	mov    rcx,r15
  41b945:	sub    rcx,rax
  41b948:	cmp    rcx,0x2
  41b94c:	jl     41bd4c <main@@Base+0x14c7c>
  41b952:	cmp    BYTE PTR [rax],0x20
  41b955:	jg     41bd5a <main@@Base+0x14c8a>
  41b95b:	jne    41bd4c <main@@Base+0x14c7c>
  41b961:	cmp    BYTE PTR [r12+0x2],0x20
  41b967:	jle    41bd4c <main@@Base+0x14c7c>
  41b96d:	add    r12,0x2
  41b971:	mov    rax,r12
  41b974:	cmp    r13,rax
  41b977:	jne    41bd63 <main@@Base+0x14c93>
  41b97d:	jmp    41c1d0 <main@@Base+0x15100>
  41b982:	mov    ecx,0x4
  41b987:	mov    rdi,r14
  41b98a:	mov    rsi,r12
  41b98d:	mov    rdx,r15
  41b990:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  41b995:	cmp    r13,rax
  41b998:	jne    41bd1f <main@@Base+0x14c4f>
  41b99e:	jmp    41c1d0 <main@@Base+0x15100>
  41b9a3:	mov    ecx,0x4
  41b9a8:	mov    rdi,r14
  41b9ab:	mov    rsi,r12
  41b9ae:	mov    rdx,r15
  41b9b1:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  41b9b6:	cmp    r13,rax
  41b9b9:	jne    41bd63 <main@@Base+0x14c93>
  41b9bf:	jmp    41c1d0 <main@@Base+0x15100>
  41b9c4:	cmp    al,0x22
  41b9c6:	jne    41c1d0 <main@@Base+0x15100>
  41b9cc:	add    r12,0x10
  41b9d0:	mov    rax,r15
  41b9d3:	sub    rax,r12
  41b9d6:	cmp    rax,0x2
  41b9da:	jl     41b9f8 <main@@Base+0x14928>
  41b9dc:	cmp    BYTE PTR [r12],0x20
  41b9e1:	jg     41ba09 <main@@Base+0x14939>
  41b9e3:	jne    41b9f8 <main@@Base+0x14928>
  41b9e5:	cmp    BYTE PTR [r12+0x1],0x20
  41b9eb:	jle    41b9f8 <main@@Base+0x14928>
  41b9ed:	add    r12,0x1
  41b9f1:	cmp    r12,r15
  41b9f4:	jne    41ba0e <main@@Base+0x1493e>
  41b9f6:	jmp    41ba5a <main@@Base+0x1498a>
  41b9f8:	mov    rdi,r14
  41b9fb:	mov    rsi,r12
  41b9fe:	mov    rdx,r15
  41ba01:	call   425750 <flatcc_json_parser_space_ext@@Base>
  41ba06:	mov    r12,rax
  41ba09:	cmp    r12,r15
  41ba0c:	je     41ba5a <main@@Base+0x1498a>
  41ba0e:	cmp    BYTE PTR [r12],0x3a
  41ba13:	jne    41ba5a <main@@Base+0x1498a>
  41ba15:	lea    rax,[r12+0x1]
  41ba1a:	mov    rcx,r15
  41ba1d:	sub    rcx,rax
  41ba20:	cmp    rcx,0x2
  41ba24:	jl     41c002 <main@@Base+0x14f32>
  41ba2a:	cmp    BYTE PTR [rax],0x20
  41ba2d:	jg     41c010 <main@@Base+0x14f40>
  41ba33:	jne    41c002 <main@@Base+0x14f32>
  41ba39:	cmp    BYTE PTR [r12+0x2],0x20
  41ba3f:	jle    41c002 <main@@Base+0x14f32>
  41ba45:	add    r12,0x2
  41ba49:	mov    rax,r12
  41ba4c:	cmp    r13,rax
  41ba4f:	jne    41c019 <main@@Base+0x14f49>
  41ba55:	jmp    41c1d0 <main@@Base+0x15100>
  41ba5a:	mov    ecx,0x4
  41ba5f:	mov    rdi,r14
  41ba62:	mov    rsi,r12
  41ba65:	mov    rdx,r15
  41ba68:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  41ba6d:	cmp    r13,rax
  41ba70:	jne    41c019 <main@@Base+0x14f49>
  41ba76:	jmp    41c1d0 <main@@Base+0x15100>
  41ba7b:	cmp    al,0x22
  41ba7d:	jne    41c1d0 <main@@Base+0x15100>
  41ba83:	add    r12,0xb
  41ba87:	mov    rax,r15
  41ba8a:	sub    rax,r12
  41ba8d:	cmp    rax,0x2
  41ba91:	jl     41baf9 <main@@Base+0x14a29>
  41ba93:	cmp    BYTE PTR [r12],0x20
  41ba98:	jg     41bb0a <main@@Base+0x14a3a>
  41ba9a:	jne    41baf9 <main@@Base+0x14a29>
  41ba9c:	cmp    BYTE PTR [r12+0x1],0x20
  41baa2:	jle    41baf9 <main@@Base+0x14a29>
  41baa4:	add    r12,0x1
  41baa8:	cmp    r12,r15
  41baab:	jne    41bb13 <main@@Base+0x14a43>
  41baad:	jmp    41bbc5 <main@@Base+0x14af5>
  41bab2:	cmp    al,0x22
  41bab4:	jne    41c1d0 <main@@Base+0x15100>
  41baba:	add    r12,0xf
  41babe:	mov    rax,r15
  41bac1:	sub    rax,r12
  41bac4:	cmp    rax,0x2
  41bac8:	jl     41bb63 <main@@Base+0x14a93>
  41bace:	cmp    BYTE PTR [r12],0x20
  41bad3:	jg     41bb74 <main@@Base+0x14aa4>
  41bad9:	jne    41bb63 <main@@Base+0x14a93>
  41badf:	cmp    BYTE PTR [r12+0x1],0x20
  41bae5:	jle    41bb63 <main@@Base+0x14a93>
  41bae7:	add    r12,0x1
  41baeb:	cmp    r12,r15
  41baee:	jne    41bb79 <main@@Base+0x14aa9>
  41baf4:	jmp    41bbe6 <main@@Base+0x14b16>
  41baf9:	mov    rdi,r14
  41bafc:	mov    rsi,r12
  41baff:	mov    rdx,r15
  41bb02:	call   425750 <flatcc_json_parser_space_ext@@Base>
  41bb07:	mov    r12,rax
  41bb0a:	cmp    r12,r15
  41bb0d:	je     41bbc5 <main@@Base+0x14af5>
  41bb13:	cmp    BYTE PTR [r12],0x3a
  41bb18:	jne    41bbc5 <main@@Base+0x14af5>
  41bb1e:	lea    rax,[r12+0x1]
  41bb23:	mov    rcx,r15
  41bb26:	sub    rcx,rax
  41bb29:	cmp    rcx,0x2
  41bb2d:	jl     41c05c <main@@Base+0x14f8c>
  41bb33:	cmp    BYTE PTR [rax],0x20
  41bb36:	jg     41c06a <main@@Base+0x14f9a>
  41bb3c:	jne    41c05c <main@@Base+0x14f8c>
  41bb42:	cmp    BYTE PTR [r12+0x2],0x20
  41bb48:	jle    41c05c <main@@Base+0x14f8c>
  41bb4e:	add    r12,0x2
  41bb52:	mov    rax,r12
  41bb55:	cmp    r13,rax
  41bb58:	jne    41c073 <main@@Base+0x14fa3>
  41bb5e:	jmp    41c1d0 <main@@Base+0x15100>
  41bb63:	mov    rdi,r14
  41bb66:	mov    rsi,r12
  41bb69:	mov    rdx,r15
  41bb6c:	call   425750 <flatcc_json_parser_space_ext@@Base>
  41bb71:	mov    r12,rax
  41bb74:	cmp    r12,r15
  41bb77:	je     41bbe6 <main@@Base+0x14b16>
  41bb79:	cmp    BYTE PTR [r12],0x3a
  41bb7e:	jne    41bbe6 <main@@Base+0x14b16>
  41bb80:	lea    rax,[r12+0x1]
  41bb85:	mov    rcx,r15
  41bb88:	sub    rcx,rax
  41bb8b:	cmp    rcx,0x2
  41bb8f:	jl     41c08c <main@@Base+0x14fbc>
  41bb95:	cmp    BYTE PTR [rax],0x20
  41bb98:	jg     41c09a <main@@Base+0x14fca>
  41bb9e:	jne    41c08c <main@@Base+0x14fbc>
  41bba4:	cmp    BYTE PTR [r12+0x2],0x20
  41bbaa:	jle    41c08c <main@@Base+0x14fbc>
  41bbb0:	add    r12,0x2
  41bbb4:	mov    rax,r12
  41bbb7:	cmp    r13,rax
  41bbba:	jne    41c0a3 <main@@Base+0x14fd3>
  41bbc0:	jmp    41c1d0 <main@@Base+0x15100>
  41bbc5:	mov    ecx,0x4
  41bbca:	mov    rdi,r14
  41bbcd:	mov    rsi,r12
  41bbd0:	mov    rdx,r15
  41bbd3:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  41bbd8:	cmp    r13,rax
  41bbdb:	jne    41c073 <main@@Base+0x14fa3>
  41bbe1:	jmp    41c1d0 <main@@Base+0x15100>
  41bbe6:	mov    ecx,0x4
  41bbeb:	mov    rdi,r14
  41bbee:	mov    rsi,r12
  41bbf1:	mov    rdx,r15
  41bbf4:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  41bbf9:	cmp    r13,rax
  41bbfc:	jne    41c0a3 <main@@Base+0x14fd3>
  41bc02:	jmp    41c1d0 <main@@Base+0x15100>
  41bc07:	cmp    al,0x22
  41bc09:	jne    41c1d0 <main@@Base+0x15100>
  41bc0f:	add    r12,0xb
  41bc13:	mov    rax,r15
  41bc16:	sub    rax,r12
  41bc19:	cmp    rax,0x2
  41bc1d:	jl     41bc3b <main@@Base+0x14b6b>
  41bc1f:	cmp    BYTE PTR [r12],0x20
  41bc24:	jg     41bc4c <main@@Base+0x14b7c>
  41bc26:	jne    41bc3b <main@@Base+0x14b6b>
  41bc28:	cmp    BYTE PTR [r12+0x1],0x20
  41bc2e:	jle    41bc3b <main@@Base+0x14b6b>
  41bc30:	add    r12,0x1
  41bc34:	cmp    r12,r15
  41bc37:	jne    41bc51 <main@@Base+0x14b81>
  41bc39:	jmp    41bc9d <main@@Base+0x14bcd>
  41bc3b:	mov    rdi,r14
  41bc3e:	mov    rsi,r12
  41bc41:	mov    rdx,r15
  41bc44:	call   425750 <flatcc_json_parser_space_ext@@Base>
  41bc49:	mov    r12,rax
  41bc4c:	cmp    r12,r15
  41bc4f:	je     41bc9d <main@@Base+0x14bcd>
  41bc51:	cmp    BYTE PTR [r12],0x3a
  41bc56:	jne    41bc9d <main@@Base+0x14bcd>
  41bc58:	lea    rax,[r12+0x1]
  41bc5d:	mov    rcx,r15
  41bc60:	sub    rcx,rax
  41bc63:	cmp    rcx,0x2
  41bc67:	jl     41c0d0 <main@@Base+0x15000>
  41bc6d:	cmp    BYTE PTR [rax],0x20
  41bc70:	jg     41c0de <main@@Base+0x1500e>
  41bc76:	jne    41c0d0 <main@@Base+0x15000>
  41bc7c:	cmp    BYTE PTR [r12+0x2],0x20
  41bc82:	jle    41c0d0 <main@@Base+0x15000>
  41bc88:	add    r12,0x2
  41bc8c:	mov    rax,r12
  41bc8f:	cmp    r13,rax
  41bc92:	jne    41c0e7 <main@@Base+0x15017>
  41bc98:	jmp    41c1d0 <main@@Base+0x15100>
  41bc9d:	mov    ecx,0x4
  41bca2:	mov    rdi,r14
  41bca5:	mov    rsi,r12
  41bca8:	mov    rdx,r15
  41bcab:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  41bcb0:	cmp    r13,rax
  41bcb3:	jne    41c0e7 <main@@Base+0x15017>
  41bcb9:	jmp    41c1d0 <main@@Base+0x15100>
  41bcbe:	mov    rdi,r14
  41bcc1:	mov    rsi,rax
  41bcc4:	mov    rdx,r15
  41bcc7:	call   425750 <flatcc_json_parser_space_ext@@Base>
  41bccc:	cmp    r12,rax
  41bccf:	je     41b8a3 <main@@Base+0x147d3>
  41bcd5:	mov    r9,QWORD PTR [rsp+0x10]
  41bcda:	sub    rsp,0x8
  41bcde:	mov    ecx,0x3
  41bce3:	mov    r8d,0x7
  41bce9:	mov    rdi,r14
  41bcec:	mov    rsi,rax
  41bcef:	mov    rdx,r15
  41bcf2:	lea    rax,[rip+0x7d7]        # 41c4d0 <main@@Base+0x15400>
  41bcf9:	push   rax
  41bcfa:	call   427bd0 <flatcc_json_parser_union@@Base>
  41bcff:	add    rsp,0x10
  41bd03:	jmp    41c1e2 <main@@Base+0x15112>
  41bd08:	mov    rdi,r14
  41bd0b:	mov    rsi,rax
  41bd0e:	mov    rdx,r15
  41bd11:	call   425750 <flatcc_json_parser_space_ext@@Base>
  41bd16:	cmp    r13,rax
  41bd19:	je     41c1d0 <main@@Base+0x15100>
  41bd1f:	mov    r9,QWORD PTR [rsp+0x10]
  41bd24:	mov    ecx,0x1
  41bd29:	mov    r8d,0x3
  41bd2f:	mov    rdi,r14
  41bd32:	mov    rsi,rax
  41bd35:	mov    rdx,r15
  41bd38:	lea    rax,[rip+0x791]        # 41c4d0 <main@@Base+0x15400>
  41bd3f:	push   rax
  41bd40:	lea    rax,[rip+0x288f9]        # 444640 <__data_start@@Base+0x590>
  41bd47:	jmp    41c1c1 <main@@Base+0x150f1>
  41bd4c:	mov    rdi,r14
  41bd4f:	mov    rsi,rax
  41bd52:	mov    rdx,r15
  41bd55:	call   425750 <flatcc_json_parser_space_ext@@Base>
  41bd5a:	cmp    r13,rax
  41bd5d:	je     41c1d0 <main@@Base+0x15100>
  41bd63:	mov    r9,QWORD PTR [rsp+0x10]
  41bd68:	mov    ecx,0x3
  41bd6d:	mov    r8d,0x7
  41bd73:	mov    rdi,r14
  41bd76:	mov    rsi,rax
  41bd79:	mov    rdx,r15
  41bd7c:	lea    rax,[rip+0x74d]        # 41c4d0 <main@@Base+0x15400>
  41bd83:	push   rax
  41bd84:	lea    rax,[rip+0x288d5]        # 444660 <__data_start@@Base+0x5b0>
  41bd8b:	jmp    41c1c1 <main@@Base+0x150f1>
  41bd90:	cmp    al,0x22
  41bd92:	jne    41c1d0 <main@@Base+0x15100>
  41bd98:	add    r12,0xf
  41bd9c:	mov    rax,r15
  41bd9f:	sub    rax,r12
  41bda2:	cmp    rax,0x2
  41bda6:	jl     41be71 <main@@Base+0x14da1>
  41bdac:	cmp    BYTE PTR [r12],0x20
  41bdb1:	jg     41be82 <main@@Base+0x14db2>
  41bdb7:	jne    41be71 <main@@Base+0x14da1>
  41bdbd:	cmp    BYTE PTR [r12+0x1],0x20
  41bdc3:	jle    41be71 <main@@Base+0x14da1>
  41bdc9:	add    r12,0x1
  41bdcd:	cmp    r12,r15
  41bdd0:	jne    41be8b <main@@Base+0x14dbb>
  41bdd6:	jmp    41bf3d <main@@Base+0x14e6d>
  41bddb:	cmp    al,0x22
  41bddd:	jne    41c1d0 <main@@Base+0x15100>
  41bde3:	add    r12,0xa
  41bde7:	mov    rax,r15
  41bdea:	sub    rax,r12
  41bded:	cmp    rax,0x2
  41bdf1:	jl     41bedb <main@@Base+0x14e0b>
  41bdf7:	cmp    BYTE PTR [r12],0x20
  41bdfc:	jg     41beec <main@@Base+0x14e1c>
  41be02:	jne    41bedb <main@@Base+0x14e0b>
  41be08:	cmp    BYTE PTR [r12+0x1],0x20
  41be0e:	jle    41bedb <main@@Base+0x14e0b>
  41be14:	add    r12,0x1
  41be18:	cmp    r12,r15
  41be1b:	jne    41bef1 <main@@Base+0x14e21>
  41be21:	jmp    41bf5e <main@@Base+0x14e8e>
  41be26:	cmp    al,0x22
  41be28:	jne    41c1d0 <main@@Base+0x15100>
  41be2e:	add    r12,0x14
  41be32:	mov    rax,r15
  41be35:	sub    rax,r12
  41be38:	cmp    rax,0x2
  41be3c:	jl     41bf7f <main@@Base+0x14eaf>
  41be42:	cmp    BYTE PTR [r12],0x20
  41be47:	jg     41bf90 <main@@Base+0x14ec0>
  41be4d:	jne    41bf7f <main@@Base+0x14eaf>
  41be53:	cmp    BYTE PTR [r12+0x1],0x20
  41be59:	jle    41bf7f <main@@Base+0x14eaf>
  41be5f:	add    r12,0x1
  41be63:	cmp    r12,r15
  41be66:	jne    41bf95 <main@@Base+0x14ec5>
  41be6c:	jmp    41bfe1 <main@@Base+0x14f11>
  41be71:	mov    rdi,r14
  41be74:	mov    rsi,r12
  41be77:	mov    rdx,r15
  41be7a:	call   425750 <flatcc_json_parser_space_ext@@Base>
  41be7f:	mov    r12,rax
  41be82:	cmp    r12,r15
  41be85:	je     41bf3d <main@@Base+0x14e6d>
  41be8b:	cmp    BYTE PTR [r12],0x3a
  41be90:	jne    41bf3d <main@@Base+0x14e6d>
  41be96:	lea    rax,[r12+0x1]
  41be9b:	mov    rcx,r15
  41be9e:	sub    rcx,rax
  41bea1:	cmp    rcx,0x2
  41bea5:	jl     41c116 <main@@Base+0x15046>
  41beab:	cmp    BYTE PTR [rax],0x20
  41beae:	jg     41c124 <main@@Base+0x15054>
  41beb4:	jne    41c116 <main@@Base+0x15046>
  41beba:	cmp    BYTE PTR [r12+0x2],0x20
  41bec0:	jle    41c116 <main@@Base+0x15046>
  41bec6:	add    r12,0x2
  41beca:	mov    rax,r12
  41becd:	cmp    r13,rax
  41bed0:	jne    41c12d <main@@Base+0x1505d>
  41bed6:	jmp    41c1d0 <main@@Base+0x15100>
  41bedb:	mov    rdi,r14
  41bede:	mov    rsi,r12
  41bee1:	mov    rdx,r15
  41bee4:	call   425750 <flatcc_json_parser_space_ext@@Base>
  41bee9:	mov    r12,rax
  41beec:	cmp    r12,r15
  41beef:	je     41bf5e <main@@Base+0x14e8e>
  41bef1:	cmp    BYTE PTR [r12],0x3a
  41bef6:	jne    41bf5e <main@@Base+0x14e8e>
  41bef8:	lea    rax,[r12+0x1]
  41befd:	mov    rcx,r15
  41bf00:	sub    rcx,rax
  41bf03:	cmp    rcx,0x2
  41bf07:	jl     41c143 <main@@Base+0x15073>
  41bf0d:	cmp    BYTE PTR [rax],0x20
  41bf10:	jg     41c151 <main@@Base+0x15081>
  41bf16:	jne    41c143 <main@@Base+0x15073>
  41bf1c:	cmp    BYTE PTR [r12+0x2],0x20
  41bf22:	jle    41c143 <main@@Base+0x15073>
  41bf28:	add    r12,0x2
  41bf2c:	mov    rax,r12
  41bf2f:	cmp    r13,rax
  41bf32:	jne    41c15a <main@@Base+0x1508a>
  41bf38:	jmp    41c1d0 <main@@Base+0x15100>
  41bf3d:	mov    ecx,0x4
  41bf42:	mov    rdi,r14
  41bf45:	mov    rsi,r12
  41bf48:	mov    rdx,r15
  41bf4b:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  41bf50:	cmp    r13,rax
  41bf53:	jne    41c12d <main@@Base+0x1505d>
  41bf59:	jmp    41c1d0 <main@@Base+0x15100>
  41bf5e:	mov    ecx,0x4
  41bf63:	mov    rdi,r14
  41bf66:	mov    rsi,r12
  41bf69:	mov    rdx,r15
  41bf6c:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  41bf71:	cmp    r13,rax
  41bf74:	jne    41c15a <main@@Base+0x1508a>
  41bf7a:	jmp    41c1d0 <main@@Base+0x15100>
  41bf7f:	mov    rdi,r14
  41bf82:	mov    rsi,r12
  41bf85:	mov    rdx,r15
  41bf88:	call   425750 <flatcc_json_parser_space_ext@@Base>
  41bf8d:	mov    r12,rax
  41bf90:	cmp    r12,r15
  41bf93:	je     41bfe1 <main@@Base+0x14f11>
  41bf95:	cmp    BYTE PTR [r12],0x3a
  41bf9a:	jne    41bfe1 <main@@Base+0x14f11>
  41bf9c:	lea    rax,[r12+0x1]
  41bfa1:	mov    rcx,r15
  41bfa4:	sub    rcx,rax
  41bfa7:	cmp    rcx,0x2
  41bfab:	jl     41c186 <main@@Base+0x150b6>
  41bfb1:	cmp    BYTE PTR [rax],0x20
  41bfb4:	jg     41c194 <main@@Base+0x150c4>
  41bfba:	jne    41c186 <main@@Base+0x150b6>
  41bfc0:	cmp    BYTE PTR [r12+0x2],0x20
  41bfc6:	jle    41c186 <main@@Base+0x150b6>
  41bfcc:	add    r12,0x2
  41bfd0:	mov    rax,r12
  41bfd3:	cmp    r13,rax
  41bfd6:	jne    41c199 <main@@Base+0x150c9>
  41bfdc:	jmp    41c1d0 <main@@Base+0x15100>
  41bfe1:	mov    ecx,0x4
  41bfe6:	mov    rdi,r14
  41bfe9:	mov    rsi,r12
  41bfec:	mov    rdx,r15
  41bfef:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  41bff4:	cmp    r13,rax
  41bff7:	jne    41c199 <main@@Base+0x150c9>
  41bffd:	jmp    41c1d0 <main@@Base+0x15100>
  41c002:	mov    rdi,r14
  41c005:	mov    rsi,rax
  41c008:	mov    rdx,r15
  41c00b:	call   425750 <flatcc_json_parser_space_ext@@Base>
  41c010:	cmp    r13,rax
  41c013:	je     41c1d0 <main@@Base+0x15100>
  41c019:	mov    r9,QWORD PTR [rsp+0x10]
  41c01e:	sub    rsp,0x8
  41c022:	mov    ecx,0x4
  41c027:	mov    r8d,0x9
  41c02d:	mov    rdi,r14
  41c030:	mov    rsi,rax
  41c033:	mov    rdx,r15
  41c036:	lea    rax,[rip+0x1293]        # 41d2d0 <main@@Base+0x16200>
  41c03d:	push   rax
  41c03e:	lea    rax,[rip+0x48b]        # 41c4d0 <main@@Base+0x15400>
  41c045:	push   rax
  41c046:	lea    rax,[rip+0x28633]        # 444680 <__data_start@@Base+0x5d0>
  41c04d:	push   rax
  41c04e:	call   428620 <flatcc_json_parser_union_type_vector@@Base>
  41c053:	add    rsp,0x20
  41c057:	jmp    41c1de <main@@Base+0x1510e>
  41c05c:	mov    rdi,r14
  41c05f:	mov    rsi,rax
  41c062:	mov    rdx,r15
  41c065:	call   425750 <flatcc_json_parser_space_ext@@Base>
  41c06a:	cmp    r13,rax
  41c06d:	je     41c1d0 <main@@Base+0x15100>
  41c073:	mov    r9,QWORD PTR [rsp+0x10]
  41c078:	sub    rsp,0x8
  41c07c:	mov    ecx,0x1
  41c081:	mov    r8d,0x3
  41c087:	jmp    41c16e <main@@Base+0x1509e>
  41c08c:	mov    rdi,r14
  41c08f:	mov    rsi,rax
  41c092:	mov    rdx,r15
  41c095:	call   425750 <flatcc_json_parser_space_ext@@Base>
  41c09a:	cmp    r13,rax
  41c09d:	je     41c1d0 <main@@Base+0x15100>
  41c0a3:	mov    r9,QWORD PTR [rsp+0x10]
  41c0a8:	mov    ecx,0x2
  41c0ad:	mov    r8d,0x5
  41c0b3:	mov    rdi,r14
  41c0b6:	mov    rsi,rax
  41c0b9:	mov    rdx,r15
  41c0bc:	lea    rax,[rip+0x40d]        # 41c4d0 <main@@Base+0x15400>
  41c0c3:	push   rax
  41c0c4:	lea    rax,[rip+0x285f5]        # 4446c0 <__data_start@@Base+0x610>
  41c0cb:	jmp    41c1c1 <main@@Base+0x150f1>
  41c0d0:	mov    rdi,r14
  41c0d3:	mov    rsi,rax
  41c0d6:	mov    rdx,r15
  41c0d9:	call   425750 <flatcc_json_parser_space_ext@@Base>
  41c0de:	cmp    r13,rax
  41c0e1:	je     41c1d0 <main@@Base+0x15100>
  41c0e7:	mov    r9,QWORD PTR [rsp+0x10]
  41c0ec:	sub    rsp,0x8
  41c0f0:	mov    ecx,0x4
  41c0f5:	mov    r8d,0x9
  41c0fb:	mov    rdi,r14
  41c0fe:	mov    rsi,rax
  41c101:	mov    rdx,r15
  41c104:	lea    rax,[rip+0x3c5]        # 41c4d0 <main@@Base+0x15400>
  41c10b:	push   rax
  41c10c:	call   428170 <flatcc_json_parser_union_vector@@Base>
  41c111:	jmp    41c1c7 <main@@Base+0x150f7>
  41c116:	mov    rdi,r14
  41c119:	mov    rsi,rax
  41c11c:	mov    rdx,r15
  41c11f:	call   425750 <flatcc_json_parser_space_ext@@Base>
  41c124:	cmp    r13,rax
  41c127:	je     41c1d0 <main@@Base+0x15100>
  41c12d:	mov    r9,QWORD PTR [rsp+0x10]
  41c132:	sub    rsp,0x8
  41c136:	mov    ecx,0x0
  41c13b:	mov    r8d,0x1
  41c141:	jmp    41c16e <main@@Base+0x1509e>
  41c143:	mov    rdi,r14
  41c146:	mov    rsi,rax
  41c149:	mov    rdx,r15
  41c14c:	call   425750 <flatcc_json_parser_space_ext@@Base>
  41c151:	cmp    r13,rax
  41c154:	je     41c1d0 <main@@Base+0x15100>
  41c15a:	mov    r9,QWORD PTR [rsp+0x10]
  41c15f:	sub    rsp,0x8
  41c163:	mov    ecx,0x2
  41c168:	mov    r8d,0x5
  41c16e:	mov    rdi,r14
  41c171:	mov    rsi,rax
  41c174:	mov    rdx,r15
  41c177:	lea    rax,[rip+0x352]        # 41c4d0 <main@@Base+0x15400>
  41c17e:	push   rax
  41c17f:	call   427bd0 <flatcc_json_parser_union@@Base>
  41c184:	jmp    41c1c7 <main@@Base+0x150f7>
  41c186:	mov    rdi,r14
  41c189:	mov    rsi,rax
  41c18c:	mov    rdx,r15
  41c18f:	call   425750 <flatcc_json_parser_space_ext@@Base>
  41c194:	cmp    r13,rax
  41c197:	je     41c1d0 <main@@Base+0x15100>
  41c199:	mov    r9,QWORD PTR [rsp+0x10]
  41c19e:	mov    ecx,0x0
  41c1a3:	mov    r8d,0x1
  41c1a9:	mov    rdi,r14
  41c1ac:	mov    rsi,rax
  41c1af:	mov    rdx,r15
  41c1b2:	lea    rax,[rip+0x317]        # 41c4d0 <main@@Base+0x15400>
  41c1b9:	push   rax
  41c1ba:	lea    rax,[rip+0x284df]        # 4446a0 <__data_start@@Base+0x5f0>
  41c1c1:	push   rax
  41c1c2:	call   427ce0 <flatcc_json_parser_union_type@@Base>
  41c1c7:	add    rsp,0x10
  41c1cb:	jmp    41c1de <main@@Base+0x1510e>
  41c1cd:	nop    DWORD PTR [rax]
  41c1d0:	mov    rdi,r14
  41c1d3:	mov    rsi,r13
  41c1d6:	mov    rdx,r15
  41c1d9:	call   425cc0 <flatcc_json_parser_unmatched_symbol@@Base>
  41c1de:	mov    r13,QWORD PTR [rsp]
  41c1e2:	mov    rcx,r15
  41c1e5:	sub    rcx,rax
  41c1e8:	cmp    rcx,0x2
  41c1ec:	jl     41c210 <main@@Base+0x15140>
  41c1ee:	cmp    BYTE PTR [rax],0x20
  41c1f1:	jg     41c21e <main@@Base+0x1514e>
  41c1f3:	jne    41c210 <main@@Base+0x15140>
  41c1f5:	cmp    BYTE PTR [rax+0x1],0x20
  41c1f9:	jle    41c210 <main@@Base+0x15140>
  41c1fb:	add    rax,0x1
  41c1ff:	cmp    rax,r15
  41c202:	jne    41c227 <main@@Base+0x15157>
  41c204:	jmp    41c2b8 <main@@Base+0x151e8>
  41c209:	nop    DWORD PTR [rax+0x0]
  41c210:	mov    rdi,r14
  41c213:	mov    rsi,rax
  41c216:	mov    rdx,r15
  41c219:	call   425750 <flatcc_json_parser_space_ext@@Base>
  41c21e:	cmp    rax,r15
  41c221:	je     41c2b8 <main@@Base+0x151e8>
  41c227:	movzx  ecx,BYTE PTR [rax]
  41c22a:	cmp    cl,0x2c
  41c22d:	jne    41c2cb <main@@Base+0x151fb>
  41c233:	lea    rsi,[rax+0x1]
  41c237:	mov    rcx,r15
  41c23a:	sub    rcx,rsi
  41c23d:	cmp    rcx,0x2
  41c241:	jl     41c260 <main@@Base+0x15190>
  41c243:	cmp    BYTE PTR [rsi],0x20
  41c246:	jg     41c26e <main@@Base+0x1519e>
  41c248:	jne    41c260 <main@@Base+0x15190>
  41c24a:	cmp    BYTE PTR [rax+0x2],0x20
  41c24e:	jle    41c260 <main@@Base+0x15190>
  41c250:	add    rax,0x2
  41c254:	jmp    41c26b <main@@Base+0x1519b>
  41c256:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c260:	mov    rdi,r14
  41c263:	mov    rdx,r15
  41c266:	call   425750 <flatcc_json_parser_space_ext@@Base>
  41c26b:	mov    rsi,rax
  41c26e:	cmp    rsi,r15
  41c271:	je     41c318 <main@@Base+0x15248>
  41c277:	cmp    BYTE PTR [rsi],0x7d
  41c27a:	jne    41adf0 <main@@Base+0x13d20>
  41c280:	lea    rbx,[rsi+0x1]
  41c284:	mov    rax,r15
  41c287:	sub    rax,rbx
  41c28a:	cmp    rax,0x2
  41c28e:	jl     41c2f7 <main@@Base+0x15227>
  41c290:	cmp    BYTE PTR [rbx],0x20
  41c293:	jg     41ad7c <main@@Base+0x13cac>
  41c299:	jne    41c2f7 <main@@Base+0x15227>
  41c29b:	cmp    BYTE PTR [rsi+0x2],0x20
  41c29f:	jle    41c2f7 <main@@Base+0x15227>
  41c2a1:	add    rsi,0x2
  41c2a5:	mov    rbx,rsi
  41c2a8:	cmp    DWORD PTR [r14+0x20],0x0
  41c2ad:	jne    41acf1 <main@@Base+0x13c21>
  41c2b3:	jmp    41ad87 <main@@Base+0x13cb7>
  41c2b8:	mov    rbx,r15
  41c2bb:	cmp    DWORD PTR [r14+0x20],0x0
  41c2c0:	jne    41acf1 <main@@Base+0x13c21>
  41c2c6:	jmp    41ad87 <main@@Base+0x13cb7>
  41c2cb:	cmp    cl,0x7d
  41c2ce:	jne    41c328 <main@@Base+0x15258>
  41c2d0:	lea    rbx,[rax+0x1]
  41c2d4:	mov    rcx,r15
  41c2d7:	sub    rcx,rbx
  41c2da:	cmp    rcx,0x2
  41c2de:	jl     41c2f7 <main@@Base+0x15227>
  41c2e0:	cmp    BYTE PTR [rbx],0x20
  41c2e3:	jg     41ad7c <main@@Base+0x13cac>
  41c2e9:	jne    41c2f7 <main@@Base+0x15227>
  41c2eb:	cmp    BYTE PTR [rax+0x2],0x20
  41c2ef:	jle    41c2f7 <main@@Base+0x15227>
  41c2f1:	add    rax,0x2
  41c2f5:	jmp    41c305 <main@@Base+0x15235>
  41c2f7:	mov    rdi,r14
  41c2fa:	mov    rsi,rbx
  41c2fd:	mov    rdx,r15
  41c300:	call   425750 <flatcc_json_parser_space_ext@@Base>
  41c305:	mov    rbx,rax
  41c308:	cmp    DWORD PTR [r14+0x20],0x0
  41c30d:	jne    41acf1 <main@@Base+0x13c21>
  41c313:	jmp    41ad87 <main@@Base+0x13cb7>
  41c318:	mov    ecx,0xa
  41c31d:	mov    rdi,r14
  41c320:	mov    rsi,r15
  41c323:	jmp    41ad71 <main@@Base+0x13ca1>
  41c328:	mov    ecx,0xa
  41c32d:	mov    rdi,r14
  41c330:	mov    rsi,rax
  41c333:	jmp    41ad71 <main@@Base+0x13ca1>
  41c338:	nop    DWORD PTR [rax+rax*1+0x0]
  41c340:	push   r14
  41c342:	push   rbx
  41c343:	mov    rbx,rdx
  41c346:	sub    rbx,rsi
  41c349:	cmp    rbx,0x8
  41c34d:	jb     41c356 <main@@Base+0x15286>
  41c34f:	movbe  rbx,QWORD PTR [rsi]
  41c354:	jmp    41c3d1 <main@@Base+0x15301>
  41c356:	and    bl,0xf
  41c359:	add    bl,0xff
  41c35c:	cmp    bl,0x7
  41c35f:	ja     41c4c5 <main@@Base+0x153f5>
  41c365:	xor    eax,eax
  41c367:	movzx  ebx,bl
  41c36a:	lea    r10,[rip+0x19663]        # 4359d4 <_IO_stdin_used@@Base+0x9d4>
  41c371:	movsxd rbx,DWORD PTR [r10+rbx*4]
  41c375:	add    rbx,r10
  41c378:	jmp    rbx
  41c37a:	movsx  rax,BYTE PTR [rsi+0x7]
  41c37f:	movsx  rbx,BYTE PTR [rsi+0x6]
  41c384:	shl    rbx,0x8
  41c388:	or     rax,rbx
  41c38b:	movsx  rbx,BYTE PTR [rsi+0x5]
  41c390:	shl    rbx,0x10
  41c394:	or     rax,rbx
  41c397:	movsx  rbx,BYTE PTR [rsi+0x4]
  41c39c:	shl    rbx,0x18
  41c3a0:	or     rax,rbx
  41c3a3:	movsx  rbx,BYTE PTR [rsi+0x3]
  41c3a8:	shl    rbx,0x20
  41c3ac:	or     rax,rbx
  41c3af:	movsx  rbx,BYTE PTR [rsi+0x2]
  41c3b4:	shl    rbx,0x28
  41c3b8:	or     rax,rbx
  41c3bb:	movsx  rbx,BYTE PTR [rsi+0x1]
  41c3c0:	shl    rbx,0x30
  41c3c4:	or     rax,rbx
  41c3c7:	movzx  ebx,BYTE PTR [rsi]
  41c3ca:	shl    rbx,0x38
  41c3ce:	or     rbx,rax
  41c3d1:	movabs rax,0x4368617261637465
  41c3db:	cmp    rbx,rax
  41c3de:	jne    41c4c5 <main@@Base+0x153f5>
  41c3e4:	lea    r10,[rsi+0x8]
  41c3e8:	mov    rax,rdx
  41c3eb:	sub    rax,r10
  41c3ee:	cmp    rax,0x8
  41c3f2:	jb     41c408 <main@@Base+0x15338>
  41c3f4:	movbe  rbx,QWORD PTR [r10]
  41c3f9:	cmp    rax,0x2
  41c3fd:	jge    41c48d <main@@Base+0x153bd>
  41c403:	jmp    41c4c5 <main@@Base+0x153f5>
  41c408:	mov    ebx,eax
  41c40a:	and    bl,0xf
  41c40d:	add    bl,0xff
  41c410:	cmp    bl,0x7
  41c413:	ja     41c4c5 <main@@Base+0x153f5>
  41c419:	xor    r11d,r11d
  41c41c:	movzx  ebx,bl
  41c41f:	lea    r14,[rip+0x195ce]        # 4359f4 <_IO_stdin_used@@Base+0x9f4>
  41c426:	movsxd rbx,DWORD PTR [r14+rbx*4]
  41c42a:	add    rbx,r14
  41c42d:	jmp    rbx
  41c42f:	movsx  r11,BYTE PTR [rsi+0xf]
  41c434:	movsx  rbx,BYTE PTR [rsi+0xe]
  41c439:	shl    rbx,0x8
  41c43d:	or     r11,rbx
  41c440:	movsx  rbx,BYTE PTR [rsi+0xd]
  41c445:	shl    rbx,0x10
  41c449:	or     r11,rbx
  41c44c:	movsx  rbx,BYTE PTR [rsi+0xc]
  41c451:	shl    rbx,0x18
  41c455:	or     r11,rbx
  41c458:	movsx  rbx,BYTE PTR [rsi+0xb]
  41c45d:	shl    rbx,0x20
  41c461:	or     r11,rbx
  41c464:	movsx  rbx,BYTE PTR [rsi+0xa]
  41c469:	shl    rbx,0x28
  41c46d:	or     r11,rbx
  41c470:	movsx  rbx,BYTE PTR [rsi+0x9]
  41c475:	shl    rbx,0x30
  41c479:	or     r11,rbx
  41c47c:	movzx  ebx,BYTE PTR [r10]
  41c480:	shl    rbx,0x38
  41c484:	or     rbx,r11
  41c487:	cmp    rax,0x2
  41c48b:	jl     41c4c5 <main@@Base+0x153f5>
  41c48d:	movabs rax,0xff00000000000000
  41c497:	and    rbx,rax
  41c49a:	movabs rax,0x7200000000000000
  41c4a4:	cmp    rbx,rax
  41c4a7:	jne    41c4c5 <main@@Base+0x153f5>
  41c4a9:	lea    rax,[rsi+0xa]
  41c4ad:	cmp    BYTE PTR [rsi+0x9],0x2e
  41c4b1:	cmovne rax,r10
  41c4b5:	cmp    rax,r10
  41c4b8:	je     41c4c5 <main@@Base+0x153f5>
  41c4ba:	mov    rsi,rax
  41c4bd:	pop    rbx
  41c4be:	pop    r14
  41c4c0:	jmp    416d40 <main@@Base+0xfc70>
  41c4c5:	mov    rax,rsi
  41c4c8:	pop    rbx
  41c4c9:	pop    r14
  41c4cb:	ret    
  41c4cc:	nop    DWORD PTR [rax+0x0]
  41c4d0:	push   rbp
  41c4d1:	push   r15
  41c4d3:	push   r14
  41c4d5:	push   r13
  41c4d7:	push   r12
  41c4d9:	push   rbx
  41c4da:	sub    rsp,0x18
  41c4de:	mov    r13,rdx
  41c4e1:	mov    rbp,rsi
  41c4e4:	mov    r14,rdi
  41c4e7:	mov    DWORD PTR [r8],0x0
  41c4ee:	add    cl,0x1
  41c4f1:	cmp    cl,0xc
  41c4f4:	ja     41c558 <main@@Base+0x15488>
  41c4f6:	mov    r15,r8
  41c4f9:	movzx  eax,cl
  41c4fc:	lea    rcx,[rip+0x19511]        # 435a14 <_IO_stdin_used@@Base+0xa14>
  41c503:	movsxd rax,DWORD PTR [rcx+rax*4]
  41c507:	add    rax,rcx
  41c50a:	jmp    rax
  41c50c:	mov    rdi,r14
  41c50f:	mov    rsi,rbp
  41c512:	mov    rdx,r13
  41c515:	mov    rcx,r15
  41c518:	call   427830 <flatcc_json_parser_build_string@@Base>
  41c51d:	jmp    41c6e6 <main@@Base+0x15616>
  41c522:	mov    rdi,r14
  41c525:	mov    rsi,rbp
  41c528:	mov    rdx,r13
  41c52b:	mov    rcx,r15
  41c52e:	call   41d2f0 <main@@Base+0x16220>
  41c533:	jmp    41c6e6 <main@@Base+0x15616>
  41c538:	mov    rax,r13
  41c53b:	sub    rax,rbp
  41c53e:	cmp    rax,0x4
  41c542:	jl     41c551 <main@@Base+0x15481>
  41c544:	cmp    DWORD PTR [rbp+0x0],0x6c6c756e
  41c54b:	je     41c71e <main@@Base+0x1564e>
  41c551:	mov    ecx,0x1a
  41c556:	jmp    41c568 <main@@Base+0x15498>
  41c558:	test   BYTE PTR [r14+0x10],0x1
  41c55d:	jne    41c657 <main@@Base+0x15587>
  41c563:	mov    ecx,0xf
  41c568:	mov    rdi,r14
  41c56b:	mov    rsi,rbp
  41c56e:	mov    rdx,r13
  41c571:	add    rsp,0x18
  41c575:	pop    rbx
  41c576:	pop    r12
  41c578:	pop    r13
  41c57a:	pop    r14
  41c57c:	pop    r15
  41c57e:	pop    rbp
  41c57f:	jmp    4256c0 <flatcc_json_parser_set_error@@Base>
  41c584:	mov    DWORD PTR [r15],0x0
  41c58b:	mov    rdi,QWORD PTR [r14]
  41c58e:	mov    esi,0x1
  41c593:	call   420ba0 <flatcc_builder_start_table@@Base>
  41c598:	test   eax,eax
  41c59a:	jne    41c6d3 <main@@Base+0x15603>
  41c5a0:	cmp    rbp,r13
  41c5a3:	je     41c6b2 <main@@Base+0x155e2>
  41c5a9:	cmp    BYTE PTR [rbp+0x0],0x7b
  41c5ad:	jne    41c6b2 <main@@Base+0x155e2>
  41c5b3:	lea    rax,[rbp+0x1]
  41c5b7:	mov    rcx,r13
  41c5ba:	sub    rcx,rax
  41c5bd:	cmp    rcx,0x2
  41c5c1:	jl     41cb93 <main@@Base+0x15ac3>
  41c5c7:	cmp    BYTE PTR [rax],0x20
  41c5ca:	jg     41cba1 <main@@Base+0x15ad1>
  41c5d0:	jne    41cb93 <main@@Base+0x15ac3>
  41c5d6:	cmp    BYTE PTR [rbp+0x2],0x20
  41c5da:	jle    41cb93 <main@@Base+0x15ac3>
  41c5e0:	add    rbp,0x2
  41c5e4:	mov    rax,rbp
  41c5e7:	jmp    41cba1 <main@@Base+0x15ad1>
  41c5ec:	mov    DWORD PTR [r15],0x0
  41c5f3:	mov    rdi,QWORD PTR [r14]
  41c5f6:	mov    esi,0x2
  41c5fb:	mov    edx,0x2
  41c600:	call   41fc20 <flatcc_builder_start_struct@@Base>
  41c605:	test   rax,rax
  41c608:	je     41c6a5 <main@@Base+0x155d5>
  41c60e:	cmp    rbp,r13
  41c611:	je     41c673 <main@@Base+0x155a3>
  41c613:	cmp    BYTE PTR [rbp+0x0],0x7b
  41c617:	jne    41c673 <main@@Base+0x155a3>
  41c619:	mov    QWORD PTR [rsp+0x8],rax
  41c61e:	lea    rax,[rbp+0x1]
  41c622:	mov    rcx,r13
  41c625:	sub    rcx,rax
  41c628:	cmp    rcx,0x2
  41c62c:	jl     41c724 <main@@Base+0x15654>
  41c632:	cmp    BYTE PTR [rax],0x20
  41c635:	jg     41c732 <main@@Base+0x15662>
  41c63b:	jne    41c724 <main@@Base+0x15654>
  41c641:	cmp    BYTE PTR [rbp+0x2],0x20
  41c645:	jle    41c724 <main@@Base+0x15654>
  41c64b:	add    rbp,0x2
  41c64f:	mov    rax,rbp
  41c652:	jmp    41c732 <main@@Base+0x15662>
  41c657:	mov    rdi,r14
  41c65a:	mov    rsi,rbp
  41c65d:	mov    rdx,r13
  41c660:	add    rsp,0x18
  41c664:	pop    rbx
  41c665:	pop    r12
  41c667:	pop    r13
  41c669:	pop    r14
  41c66b:	pop    r15
  41c66d:	pop    rbp
  41c66e:	jmp    425ea0 <flatcc_json_parser_generic_json@@Base>
  41c673:	mov    ecx,0x15
  41c678:	mov    rdi,r14
  41c67b:	mov    rsi,rbp
  41c67e:	mov    rdx,r13
  41c681:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  41c686:	mov    rbp,rax
  41c689:	mov    rsi,r13
  41c68c:	cmp    rbp,r13
  41c68f:	je     41c6a8 <main@@Base+0x155d8>
  41c691:	mov    rdi,QWORD PTR [r14]
  41c694:	call   41fcf0 <flatcc_builder_end_struct@@Base>
  41c699:	mov    DWORD PTR [r15],eax
  41c69c:	mov    rsi,rbp
  41c69f:	test   eax,eax
  41c6a1:	jne    41c6e9 <main@@Base+0x15619>
  41c6a3:	jmp    41c6a8 <main@@Base+0x155d8>
  41c6a5:	mov    rsi,rbp
  41c6a8:	mov    ecx,0x21
  41c6ad:	mov    rdi,r14
  41c6b0:	jmp    41c6de <main@@Base+0x1560e>
  41c6b2:	mov    ecx,0x15
  41c6b7:	mov    rdi,r14
  41c6ba:	mov    rsi,rbp
  41c6bd:	mov    rdx,r13
  41c6c0:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  41c6c5:	mov    rbp,rax
  41c6c8:	cmp    DWORD PTR [r14+0x20],0x0
  41c6cd:	je     41d1ed <main@@Base+0x1611d>
  41c6d3:	mov    ecx,0x21
  41c6d8:	mov    rdi,r14
  41c6db:	mov    rsi,rbp
  41c6de:	mov    rdx,r13
  41c6e1:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  41c6e6:	mov    rbp,rax
  41c6e9:	cmp    DWORD PTR [r14+0x20],0x0
  41c6ee:	jne    41c70c <main@@Base+0x1563c>
  41c6f0:	cmp    DWORD PTR [r15],0x0
  41c6f4:	jne    41c70c <main@@Base+0x1563c>
  41c6f6:	mov    ecx,0x21
  41c6fb:	mov    rdi,r14
  41c6fe:	mov    rsi,rbp
  41c701:	mov    rdx,r13
  41c704:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  41c709:	mov    rbp,rax
  41c70c:	mov    rax,rbp
  41c70f:	add    rsp,0x18
  41c713:	pop    rbx
  41c714:	pop    r12
  41c716:	pop    r13
  41c718:	pop    r14
  41c71a:	pop    r15
  41c71c:	pop    rbp
  41c71d:	ret    
  41c71e:	add    rbp,0x4
  41c722:	jmp    41c70c <main@@Base+0x1563c>
  41c724:	mov    rdi,r14
  41c727:	mov    rsi,rax
  41c72a:	mov    rdx,r13
  41c72d:	call   425750 <flatcc_json_parser_space_ext@@Base>
  41c732:	mov    rdx,r13
  41c735:	cmp    rax,r13
  41c738:	je     41c746 <main@@Base+0x15676>
  41c73a:	cmp    BYTE PTR [rax],0x7d
  41c73d:	je     41d163 <main@@Base+0x16093>
  41c743:	mov    rdx,rax
  41c746:	movabs r12,0x686169725f6c656e
  41c750:	mov    rsi,r13
  41c753:	cmp    rdx,r13
  41c756:	je     41c794 <main@@Base+0x156c4>
  41c758:	movzx  eax,BYTE PTR [rdx]
  41c75b:	cmp    al,0x2e
  41c75d:	je     41c771 <main@@Base+0x156a1>
  41c75f:	cmp    al,0x22
  41c761:	jne    41c789 <main@@Base+0x156b9>
  41c763:	add    rdx,0x1
  41c767:	mov    DWORD PTR [r14+0x14],0x0
  41c76f:	jmp    41c791 <main@@Base+0x156c1>
  41c771:	mov    ecx,0x5
  41c776:	mov    rdi,r14
  41c779:	mov    rsi,rdx
  41c77c:	mov    rdx,r13
  41c77f:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  41c784:	mov    rsi,rax
  41c787:	jmp    41c794 <main@@Base+0x156c4>
  41c789:	mov    DWORD PTR [r14+0x14],0x1
  41c791:	mov    rsi,rdx
  41c794:	mov    rax,r13
  41c797:	sub    rax,rsi
  41c79a:	cmp    rax,0x8
  41c79e:	jb     41c7b3 <main@@Base+0x156e3>
  41c7a0:	movbe  rax,QWORD PTR [rsi]
  41c7a5:	cmp    rax,r12
  41c7a8:	je     41c83e <main@@Base+0x1576e>
  41c7ae:	jmp    41c859 <main@@Base+0x15789>
  41c7b3:	and    al,0xf
  41c7b5:	add    al,0xff
  41c7b7:	cmp    al,0x7
  41c7b9:	ja     41c859 <main@@Base+0x15789>
  41c7bf:	movzx  eax,al
  41c7c2:	lea    rcx,[rip+0x1927f]        # 435a48 <_IO_stdin_used@@Base+0xa48>
  41c7c9:	movsxd rax,DWORD PTR [rcx+rax*4]
  41c7cd:	add    rax,rcx
  41c7d0:	xor    r8d,r8d
  41c7d3:	xor    r9d,r9d
  41c7d6:	xor    ecx,ecx
  41c7d8:	xor    edx,edx
  41c7da:	xor    ebp,ebp
  41c7dc:	xor    ebx,ebx
  41c7de:	xor    edi,edi
  41c7e0:	jmp    rax
  41c7e2:	movsx  r8,BYTE PTR [rsi+0x7]
  41c7e7:	movsx  r9,BYTE PTR [rsi+0x6]
  41c7ec:	shl    r9,0x8
  41c7f0:	or     r9,r8
  41c7f3:	movsx  rcx,BYTE PTR [rsi+0x5]
  41c7f8:	shl    rcx,0x10
  41c7fc:	or     rcx,r9
  41c7ff:	movsx  rdx,BYTE PTR [rsi+0x4]
  41c804:	shl    rdx,0x18
  41c808:	or     rdx,rcx
  41c80b:	movsx  rbp,BYTE PTR [rsi+0x3]
  41c810:	shl    rbp,0x20
  41c814:	or     rbp,rdx
  41c817:	movsx  rbx,BYTE PTR [rsi+0x2]
  41c81c:	shl    rbx,0x28
  41c820:	or     rbx,rbp
  41c823:	movsx  rdi,BYTE PTR [rsi+0x1]
  41c828:	shl    rdi,0x30
  41c82c:	or     rdi,rbx
  41c82f:	movzx  eax,BYTE PTR [rsi]
  41c832:	shl    rax,0x38
  41c836:	or     rax,rdi
  41c839:	cmp    rax,r12
  41c83c:	jne    41c859 <main@@Base+0x15789>
  41c83e:	lea    r12,[rsi+0x8]
  41c842:	mov    rax,r13
  41c845:	sub    rax,r12
  41c848:	cmp    rax,0x8
  41c84c:	jb     41c869 <main@@Base+0x15799>
  41c84e:	movbe  rdx,QWORD PTR [r12]
  41c854:	jmp    41c8fa <main@@Base+0x1582a>
  41c859:	mov    rdi,r14
  41c85c:	mov    rdx,r13
  41c85f:	call   425cc0 <flatcc_json_parser_unmatched_symbol@@Base>
  41c864:	jmp    41c9f1 <main@@Base+0x15921>
  41c869:	mov    ecx,eax
  41c86b:	and    cl,0xf
  41c86e:	add    cl,0xff
  41c871:	cmp    cl,0x7
  41c874:	ja     41c9d9 <main@@Base+0x15909>
  41c87a:	movzx  ecx,cl
  41c87d:	lea    rdx,[rip+0x191e4]        # 435a68 <_IO_stdin_used@@Base+0xa68>
  41c884:	mov    rdi,rdx
  41c887:	movsxd rdx,DWORD PTR [rdx+rcx*4]
  41c88b:	add    rdx,rdi
  41c88e:	xor    r8d,r8d
  41c891:	xor    r9d,r9d
  41c894:	xor    r10d,r10d
  41c897:	xor    edi,edi
  41c899:	xor    ebx,ebx
  41c89b:	xor    ebp,ebp
  41c89d:	xor    ecx,ecx
  41c89f:	jmp    rdx
  41c8a1:	movsx  r8,BYTE PTR [rsi+0xf]
  41c8a6:	movsx  r9,BYTE PTR [rsi+0xe]
  41c8ab:	shl    r9,0x8
  41c8af:	or     r9,r8
  41c8b2:	movsx  r10,BYTE PTR [rsi+0xd]
  41c8b7:	shl    r10,0x10
  41c8bb:	or     r10,r9
  41c8be:	movsx  rdi,BYTE PTR [rsi+0xc]
  41c8c3:	shl    rdi,0x18
  41c8c7:	or     rdi,r10
  41c8ca:	movsx  rbx,BYTE PTR [rsi+0xb]
  41c8cf:	shl    rbx,0x20
  41c8d3:	or     rbx,rdi
  41c8d6:	movsx  rbp,BYTE PTR [rsi+0xa]
  41c8db:	shl    rbp,0x28
  41c8df:	or     rbp,rbx
  41c8e2:	movsx  rcx,BYTE PTR [rsi+0x9]
  41c8e7:	shl    rcx,0x30
  41c8eb:	or     rcx,rbp
  41c8ee:	movzx  edx,BYTE PTR [r12]
  41c8f3:	shl    rdx,0x38
  41c8f7:	or     rdx,rcx
  41c8fa:	movabs rcx,0xffffff0000000000
  41c904:	and    rdx,rcx
  41c907:	movabs rcx,0x6774680000000000
  41c911:	cmp    rdx,rcx
  41c914:	jne    41c9d9 <main@@Base+0x15909>
  41c91a:	cmp    rax,0x4
  41c91e:	jl     41c9d9 <main@@Base+0x15909>
  41c924:	cmp    DWORD PTR [r14+0x14],0x0
  41c929:	movzx  eax,BYTE PTR [rsi+0xb]
  41c92d:	je     41c949 <main@@Base+0x15879>
  41c92f:	cmp    al,0x21
  41c931:	jl     41c93b <main@@Base+0x1586b>
  41c933:	cmp    al,0x3a
  41c935:	jne    41c9d9 <main@@Base+0x15909>
  41c93b:	add    rsi,0xb
  41c93f:	mov    DWORD PTR [r14+0x14],0x0
  41c947:	jmp    41c955 <main@@Base+0x15885>
  41c949:	cmp    al,0x22
  41c94b:	jne    41c9d9 <main@@Base+0x15909>
  41c951:	add    rsi,0xc
  41c955:	mov    rax,r13
  41c958:	sub    rax,rsi
  41c95b:	cmp    rax,0x2
  41c95f:	jl     41c97c <main@@Base+0x158ac>
  41c961:	cmp    BYTE PTR [rsi],0x20
  41c964:	jg     41c98a <main@@Base+0x158ba>
  41c966:	jne    41c97c <main@@Base+0x158ac>
  41c968:	cmp    BYTE PTR [rsi+0x1],0x20
  41c96c:	jle    41c97c <main@@Base+0x158ac>
  41c96e:	add    rsi,0x1
  41c972:	cmp    rsi,r13
  41c975:	jne    41c993 <main@@Base+0x158c3>
  41c977:	jmp    41ca86 <main@@Base+0x159b6>
  41c97c:	mov    rdi,r14
  41c97f:	mov    rdx,r13
  41c982:	call   425750 <flatcc_json_parser_space_ext@@Base>
  41c987:	mov    rsi,rax
  41c98a:	cmp    rsi,r13
  41c98d:	je     41ca86 <main@@Base+0x159b6>
  41c993:	cmp    BYTE PTR [rsi],0x3a
  41c996:	jne    41ca86 <main@@Base+0x159b6>
  41c99c:	lea    rbx,[rsi+0x1]
  41c9a0:	mov    rax,r13
  41c9a3:	sub    rax,rbx
  41c9a6:	cmp    rax,0x2
  41c9aa:	jl     41ca98 <main@@Base+0x159c8>
  41c9b0:	cmp    BYTE PTR [rbx],0x20
  41c9b3:	jg     41caa9 <main@@Base+0x159d9>
  41c9b9:	jne    41ca98 <main@@Base+0x159c8>
  41c9bf:	cmp    BYTE PTR [rsi+0x2],0x20
  41c9c3:	jle    41ca98 <main@@Base+0x159c8>
  41c9c9:	add    rsi,0x2
  41c9cd:	mov    rbx,rsi
  41c9d0:	cmp    r12,rbx
  41c9d3:	jne    41cab2 <main@@Base+0x159e2>
  41c9d9:	mov    rdi,r14
  41c9dc:	mov    rsi,r12
  41c9df:	mov    rdx,r13
  41c9e2:	call   425cc0 <flatcc_json_parser_unmatched_symbol@@Base>
  41c9e7:	movabs r12,0x686169725f6c656e
  41c9f1:	mov    rcx,r13
  41c9f4:	sub    rcx,rax
  41c9f7:	cmp    rcx,0x2
  41c9fb:	jl     41ca18 <main@@Base+0x15948>
  41c9fd:	cmp    BYTE PTR [rax],0x20
  41ca00:	jg     41ca26 <main@@Base+0x15956>
  41ca02:	jne    41ca18 <main@@Base+0x15948>
  41ca04:	cmp    BYTE PTR [rax+0x1],0x20
  41ca08:	jle    41ca18 <main@@Base+0x15948>
  41ca0a:	add    rax,0x1
  41ca0e:	cmp    rax,r13
  41ca11:	jne    41ca2f <main@@Base+0x1595f>
  41ca13:	jmp    41d152 <main@@Base+0x16082>
  41ca18:	mov    rdi,r14
  41ca1b:	mov    rsi,rax
  41ca1e:	mov    rdx,r13
  41ca21:	call   425750 <flatcc_json_parser_space_ext@@Base>
  41ca26:	cmp    rax,r13
  41ca29:	je     41d152 <main@@Base+0x16082>
  41ca2f:	movzx  ecx,BYTE PTR [rax]
  41ca32:	cmp    cl,0x2c
  41ca35:	jne    41d15a <main@@Base+0x1608a>
  41ca3b:	lea    rdx,[rax+0x1]
  41ca3f:	mov    rcx,r13
  41ca42:	sub    rcx,rdx
  41ca45:	cmp    rcx,0x2
  41ca49:	jl     41ca5e <main@@Base+0x1598e>
  41ca4b:	cmp    BYTE PTR [rdx],0x20
  41ca4e:	jg     41ca6f <main@@Base+0x1599f>
  41ca50:	jne    41ca5e <main@@Base+0x1598e>
  41ca52:	cmp    BYTE PTR [rax+0x2],0x20
  41ca56:	jle    41ca5e <main@@Base+0x1598e>
  41ca58:	add    rax,0x2
  41ca5c:	jmp    41ca6c <main@@Base+0x1599c>
  41ca5e:	mov    rdi,r14
  41ca61:	mov    rsi,rdx
  41ca64:	mov    rdx,r13
  41ca67:	call   425750 <flatcc_json_parser_space_ext@@Base>
  41ca6c:	mov    rdx,rax
  41ca6f:	cmp    rdx,r13
  41ca72:	je     41d18e <main@@Base+0x160be>
  41ca78:	cmp    BYTE PTR [rdx],0x7d
  41ca7b:	jne    41c750 <main@@Base+0x15680>
  41ca81:	jmp    41d19e <main@@Base+0x160ce>
  41ca86:	mov    ecx,0x4
  41ca8b:	mov    rdi,r14
  41ca8e:	mov    rdx,r13
  41ca91:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  41ca96:	jmp    41caa6 <main@@Base+0x159d6>
  41ca98:	mov    rdi,r14
  41ca9b:	mov    rsi,rbx
  41ca9e:	mov    rdx,r13
  41caa1:	call   425750 <flatcc_json_parser_space_ext@@Base>
  41caa6:	mov    rbx,rax
  41caa9:	cmp    r12,rbx
  41caac:	je     41c9d9 <main@@Base+0x15909>
  41cab2:	mov    QWORD PTR [rsp+0x10],0x0
  41cabb:	mov    DWORD PTR [rsp+0x4],0x0
  41cac3:	mov    WORD PTR [rsp],0x0
  41cac9:	cmp    rbx,r13
  41cacc:	je     41cb03 <main@@Base+0x15a33>
  41cace:	mov    rdi,r14
  41cad1:	mov    rsi,rbx
  41cad4:	mov    rdx,r13
  41cad7:	lea    rcx,[rsp+0x4]
  41cadc:	lea    r8,[rsp+0x10]
  41cae1:	call   427360 <flatcc_json_parser_integer@@Base>
  41cae6:	cmp    rax,rbx
  41cae9:	movabs r12,0x686169725f6c656e
  41caf3:	je     41cb19 <main@@Base+0x15a49>
  41caf5:	cmp    DWORD PTR [rsp+0x4],0x0
  41cafa:	je     41cb25 <main@@Base+0x15a55>
  41cafc:	mov    ecx,0x8
  41cb01:	jmp    41cb38 <main@@Base+0x15a68>
  41cb03:	xor    ecx,ecx
  41cb05:	mov    rax,r13
  41cb08:	movabs r12,0x686169725f6c656e
  41cb12:	cmp    rbx,rax
  41cb15:	jne    41cb7b <main@@Base+0x15aab>
  41cb17:	jmp    41cb4d <main@@Base+0x15a7d>
  41cb19:	xor    ecx,ecx
  41cb1b:	mov    rax,rbx
  41cb1e:	cmp    rbx,rax
  41cb21:	jne    41cb7b <main@@Base+0x15aab>
  41cb23:	jmp    41cb4d <main@@Base+0x15a7d>
  41cb25:	mov    rcx,QWORD PTR [rsp+0x10]
  41cb2a:	cmp    rcx,0x10000
  41cb31:	jb     41cb88 <main@@Base+0x15ab8>
  41cb33:	mov    ecx,0x7
  41cb38:	mov    rdi,r14
  41cb3b:	mov    rsi,rax
  41cb3e:	mov    rdx,r13
  41cb41:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  41cb46:	xor    ecx,ecx
  41cb48:	cmp    rbx,rax
  41cb4b:	jne    41cb7b <main@@Base+0x15aab>
  41cb4d:	mov    rdi,r14
  41cb50:	mov    rsi,rbx
  41cb53:	mov    rdx,r13
  41cb56:	lea    rcx,[rip+0x27ba3]        # 444700 <__data_start@@Base+0x650>
  41cb5d:	mov    r8,rsp
  41cb60:	call   41d930 <main@@Base+0x16860>
  41cb65:	cmp    rax,rbx
  41cb68:	je     41d2bf <main@@Base+0x161ef>
  41cb6e:	cmp    rax,r13
  41cb71:	je     41d2bf <main@@Base+0x161ef>
  41cb77:	movzx  ecx,WORD PTR [rsp]
  41cb7b:	mov    rdx,QWORD PTR [rsp+0x8]
  41cb80:	mov    WORD PTR [rdx],cx
  41cb83:	jmp    41c9f1 <main@@Base+0x15921>
  41cb88:	mov    WORD PTR [rsp],cx
  41cb8c:	cmp    rbx,rax
  41cb8f:	jne    41cb7b <main@@Base+0x15aab>
  41cb91:	jmp    41cb4d <main@@Base+0x15a7d>
  41cb93:	mov    rdi,r14
  41cb96:	mov    rsi,rax
  41cb99:	mov    rdx,r13
  41cb9c:	call   425750 <flatcc_json_parser_space_ext@@Base>
  41cba1:	mov    rdx,r13
  41cba4:	cmp    rax,r13
  41cba7:	je     41cbe8 <main@@Base+0x15b18>
  41cba9:	cmp    BYTE PTR [rax],0x7d
  41cbac:	jne    41cbe5 <main@@Base+0x15b15>
  41cbae:	lea    rbp,[rax+0x1]
  41cbb2:	mov    rcx,r13
  41cbb5:	sub    rcx,rbp
  41cbb8:	cmp    rcx,0x2
  41cbbc:	jl     41d28c <main@@Base+0x161bc>
  41cbc2:	cmp    BYTE PTR [rbp+0x0],0x20
  41cbc6:	jg     41c6c8 <main@@Base+0x155f8>
  41cbcc:	jne    41d28c <main@@Base+0x161bc>
  41cbd2:	cmp    BYTE PTR [rax+0x2],0x20
  41cbd6:	jle    41d28c <main@@Base+0x161bc>
  41cbdc:	add    rax,0x2
  41cbe0:	jmp    41c6c5 <main@@Base+0x155f5>
  41cbe5:	mov    rdx,rax
  41cbe8:	movabs r12,0x73776f72645f6174
  41cbf2:	mov    rsi,r13
  41cbf5:	cmp    rdx,r13
  41cbf8:	je     41cc36 <main@@Base+0x15b66>
  41cbfa:	movzx  eax,BYTE PTR [rdx]
  41cbfd:	cmp    al,0x2e
  41cbff:	je     41cc13 <main@@Base+0x15b43>
  41cc01:	cmp    al,0x22
  41cc03:	jne    41cc2b <main@@Base+0x15b5b>
  41cc05:	add    rdx,0x1
  41cc09:	mov    DWORD PTR [r14+0x14],0x0
  41cc11:	jmp    41cc33 <main@@Base+0x15b63>
  41cc13:	mov    ecx,0x5
  41cc18:	mov    rdi,r14
  41cc1b:	mov    rsi,rdx
  41cc1e:	mov    rdx,r13
  41cc21:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  41cc26:	mov    rsi,rax
  41cc29:	jmp    41cc36 <main@@Base+0x15b66>
  41cc2b:	mov    DWORD PTR [r14+0x14],0x1
  41cc33:	mov    rsi,rdx
  41cc36:	mov    rax,r13
  41cc39:	sub    rax,rsi
  41cc3c:	cmp    rax,0x8
  41cc40:	jb     41cc55 <main@@Base+0x15b85>
  41cc42:	movbe  rax,QWORD PTR [rsi]
  41cc47:	cmp    rax,r12
  41cc4a:	je     41cce0 <main@@Base+0x15c10>
  41cc50:	jmp    41ccfa <main@@Base+0x15c2a>
  41cc55:	and    al,0xf
  41cc57:	add    al,0xff
  41cc59:	cmp    al,0x7
  41cc5b:	ja     41ccfa <main@@Base+0x15c2a>
  41cc61:	movzx  eax,al
  41cc64:	lea    rcx,[rip+0x18e1d]        # 435a88 <_IO_stdin_used@@Base+0xa88>
  41cc6b:	movsxd rax,DWORD PTR [rcx+rax*4]
  41cc6f:	add    rax,rcx
  41cc72:	xor    r8d,r8d
  41cc75:	xor    r9d,r9d
  41cc78:	xor    ecx,ecx
  41cc7a:	xor    edx,edx
  41cc7c:	xor    ebp,ebp
  41cc7e:	xor    ebx,ebx
  41cc80:	xor    edi,edi
  41cc82:	jmp    rax
  41cc84:	movsx  r8,BYTE PTR [rsi+0x7]
  41cc89:	movsx  r9,BYTE PTR [rsi+0x6]
  41cc8e:	shl    r9,0x8
  41cc92:	or     r9,r8
  41cc95:	movsx  rcx,BYTE PTR [rsi+0x5]
  41cc9a:	shl    rcx,0x10
  41cc9e:	or     rcx,r9
  41cca1:	movsx  rdx,BYTE PTR [rsi+0x4]
  41cca6:	shl    rdx,0x18
  41ccaa:	or     rdx,rcx
  41ccad:	movsx  rbp,BYTE PTR [rsi+0x3]
  41ccb2:	shl    rbp,0x20
  41ccb6:	or     rbp,rdx
  41ccb9:	movsx  rbx,BYTE PTR [rsi+0x2]
  41ccbe:	shl    rbx,0x28
  41ccc2:	or     rbx,rbp
  41ccc5:	movsx  rdi,BYTE PTR [rsi+0x1]
  41ccca:	shl    rdi,0x30
  41ccce:	or     rdi,rbx
  41ccd1:	movzx  eax,BYTE PTR [rsi]
  41ccd4:	shl    rax,0x38
  41ccd8:	or     rax,rdi
  41ccdb:	cmp    rax,r12
  41ccde:	jne    41ccfa <main@@Base+0x15c2a>
  41cce0:	lea    r10,[rsi+0x8]
  41cce4:	mov    rcx,r13
  41cce7:	sub    rcx,r10
  41ccea:	cmp    rcx,0x8
  41ccee:	jb     41cd02 <main@@Base+0x15c32>
  41ccf0:	movbe  rdx,QWORD PTR [r10]
  41ccf5:	jmp    41cd8f <main@@Base+0x15cbf>
  41ccfa:	mov    rdi,r14
  41ccfd:	jmp    41cdbf <main@@Base+0x15cef>
  41cd02:	and    cl,0xf
  41cd05:	add    cl,0xff
  41cd08:	cmp    cl,0x7
  41cd0b:	ja     41cdb9 <main@@Base+0x15ce9>
  41cd11:	movzx  ecx,cl
  41cd14:	lea    rax,[rip+0x18d8d]        # 435aa8 <_IO_stdin_used@@Base+0xaa8>
  41cd1b:	mov    rdx,rax
  41cd1e:	movsxd rax,DWORD PTR [rax+rcx*4]
  41cd22:	add    rax,rdx
  41cd25:	xor    r8d,r8d
  41cd28:	xor    r9d,r9d
  41cd2b:	xor    edx,edx
  41cd2d:	xor    edi,edi
  41cd2f:	xor    ebx,ebx
  41cd31:	xor    ebp,ebp
  41cd33:	xor    ecx,ecx
  41cd35:	jmp    rax
  41cd37:	movsx  r8,BYTE PTR [rsi+0xf]
  41cd3c:	movsx  r9,BYTE PTR [rsi+0xe]
  41cd41:	shl    r9,0x8
  41cd45:	or     r9,r8
  41cd48:	movsx  rdx,BYTE PTR [rsi+0xd]
  41cd4d:	shl    rdx,0x10
  41cd51:	or     rdx,r9
  41cd54:	movsx  rdi,BYTE PTR [rsi+0xc]
  41cd59:	shl    rdi,0x18
  41cd5d:	or     rdi,rdx
  41cd60:	movsx  rbx,BYTE PTR [rsi+0xb]
  41cd65:	shl    rbx,0x20
  41cd69:	or     rbx,rdi
  41cd6c:	movsx  rbp,BYTE PTR [rsi+0xa]
  41cd71:	shl    rbp,0x28
  41cd75:	or     rbp,rbx
  41cd78:	movsx  rcx,BYTE PTR [rsi+0x9]
  41cd7d:	shl    rcx,0x30
  41cd81:	or     rcx,rbp
  41cd84:	movzx  edx,BYTE PTR [r10]
  41cd88:	shl    rdx,0x38
  41cd8c:	or     rdx,rcx
  41cd8f:	movabs rax,0x7461636b5f64616d
  41cd99:	cmp    rdx,rax
  41cd9c:	jne    41cdb9 <main@@Base+0x15ce9>
  41cd9e:	lea    r12,[rsi+0x10]
  41cda2:	mov    rax,r13
  41cda5:	sub    rax,r12
  41cda8:	cmp    rax,0x8
  41cdac:	jb     41cdcf <main@@Base+0x15cff>
  41cdae:	movbe  rdx,QWORD PTR [r12]
  41cdb4:	jmp    41ce60 <main@@Base+0x15d90>
  41cdb9:	mov    rdi,r14
  41cdbc:	mov    rsi,r10
  41cdbf:	mov    rdx,r13
  41cdc2:	call   425cc0 <flatcc_json_parser_unmatched_symbol@@Base>
  41cdc7:	mov    rbx,rax
  41cdca:	jmp    41cf5b <main@@Base+0x15e8b>
  41cdcf:	mov    ecx,eax
  41cdd1:	and    cl,0xf
  41cdd4:	add    cl,0xff
  41cdd7:	cmp    cl,0x7
  41cdda:	ja     41cf40 <main@@Base+0x15e70>
  41cde0:	movzx  ecx,cl
  41cde3:	lea    rdx,[rip+0x18cde]        # 435ac8 <_IO_stdin_used@@Base+0xac8>
  41cdea:	mov    rdi,rdx
  41cded:	movsxd rdx,DWORD PTR [rdx+rcx*4]
  41cdf1:	add    rdx,rdi
  41cdf4:	xor    r8d,r8d
  41cdf7:	xor    r9d,r9d
  41cdfa:	xor    r10d,r10d
  41cdfd:	xor    edi,edi
  41cdff:	xor    ebp,ebp
  41ce01:	xor    ebx,ebx
  41ce03:	xor    ecx,ecx
  41ce05:	jmp    rdx
  41ce07:	movsx  r8,BYTE PTR [rsi+0x17]
  41ce0c:	movsx  r9,BYTE PTR [rsi+0x16]
  41ce11:	shl    r9,0x8
  41ce15:	or     r9,r8
  41ce18:	movsx  r10,BYTE PTR [rsi+0x15]
  41ce1d:	shl    r10,0x10
  41ce21:	or     r10,r9
  41ce24:	movsx  rdi,BYTE PTR [rsi+0x14]
  41ce29:	shl    rdi,0x18
  41ce2d:	or     rdi,r10
  41ce30:	movsx  rbp,BYTE PTR [rsi+0x13]
  41ce35:	shl    rbp,0x20
  41ce39:	or     rbp,rdi
  41ce3c:	movsx  rbx,BYTE PTR [rsi+0x12]
  41ce41:	shl    rbx,0x28
  41ce45:	or     rbx,rbp
  41ce48:	movsx  rcx,BYTE PTR [rsi+0x11]
  41ce4d:	shl    rcx,0x30
  41ce51:	or     rcx,rbx
  41ce54:	movzx  edx,BYTE PTR [r12]
  41ce59:	shl    rdx,0x38
  41ce5d:	or     rdx,rcx
  41ce60:	movabs rcx,0xffffff0000000000
  41ce6a:	and    rdx,rcx
  41ce6d:	movabs rcx,0x6167650000000000
  41ce77:	cmp    rdx,rcx
  41ce7a:	jne    41cf40 <main@@Base+0x15e70>
  41ce80:	cmp    rax,0x4
  41ce84:	jl     41cf40 <main@@Base+0x15e70>
  41ce8a:	cmp    DWORD PTR [r14+0x14],0x0
  41ce8f:	movzx  eax,BYTE PTR [rsi+0x13]
  41ce93:	je     41ceaf <main@@Base+0x15ddf>
  41ce95:	cmp    al,0x21
  41ce97:	jl     41cea1 <main@@Base+0x15dd1>
  41ce99:	cmp    al,0x3a
  41ce9b:	jne    41cf40 <main@@Base+0x15e70>
  41cea1:	add    rsi,0x13
  41cea5:	mov    DWORD PTR [r14+0x14],0x0
  41cead:	jmp    41cebb <main@@Base+0x15deb>
  41ceaf:	cmp    al,0x22
  41ceb1:	jne    41cf40 <main@@Base+0x15e70>
  41ceb7:	add    rsi,0x14
  41cebb:	mov    rax,r13
  41cebe:	sub    rax,rsi
  41cec1:	cmp    rax,0x2
  41cec5:	jl     41cee2 <main@@Base+0x15e12>
  41cec7:	cmp    BYTE PTR [rsi],0x20
  41ceca:	jg     41cef0 <main@@Base+0x15e20>
  41cecc:	jne    41cee2 <main@@Base+0x15e12>
  41cece:	cmp    BYTE PTR [rsi+0x1],0x20
  41ced2:	jle    41cee2 <main@@Base+0x15e12>
  41ced4:	add    rsi,0x1
  41ced8:	cmp    rsi,r13
  41cedb:	jne    41cef9 <main@@Base+0x15e29>
  41cedd:	jmp    41cffd <main@@Base+0x15f2d>
  41cee2:	mov    rdi,r14
  41cee5:	mov    rdx,r13
  41cee8:	call   425750 <flatcc_json_parser_space_ext@@Base>
  41ceed:	mov    rsi,rax
  41cef0:	cmp    rsi,r13
  41cef3:	je     41cffd <main@@Base+0x15f2d>
  41cef9:	cmp    BYTE PTR [rsi],0x3a
  41cefc:	jne    41cffd <main@@Base+0x15f2d>
  41cf02:	lea    rbp,[rsi+0x1]
  41cf06:	mov    rax,r13
  41cf09:	sub    rax,rbp
  41cf0c:	cmp    rax,0x2
  41cf10:	jl     41d00f <main@@Base+0x15f3f>
  41cf16:	cmp    BYTE PTR [rbp+0x0],0x20
  41cf1a:	jg     41d020 <main@@Base+0x15f50>
  41cf20:	jne    41d00f <main@@Base+0x15f3f>
  41cf26:	cmp    BYTE PTR [rsi+0x2],0x20
  41cf2a:	jle    41d00f <main@@Base+0x15f3f>
  41cf30:	add    rsi,0x2
  41cf34:	mov    rbp,rsi
  41cf37:	cmp    r12,rbp
  41cf3a:	jne    41d029 <main@@Base+0x15f59>
  41cf40:	mov    rdi,r14
  41cf43:	mov    rsi,r12
  41cf46:	mov    rdx,r13
  41cf49:	call   425cc0 <flatcc_json_parser_unmatched_symbol@@Base>
  41cf4e:	mov    rbx,rax
  41cf51:	movabs r12,0x73776f72645f6174
  41cf5b:	mov    rax,r13
  41cf5e:	sub    rax,rbx
  41cf61:	cmp    rax,0x2
  41cf65:	jl     41cf82 <main@@Base+0x15eb2>
  41cf67:	cmp    BYTE PTR [rbx],0x20
  41cf6a:	jg     41cf93 <main@@Base+0x15ec3>
  41cf6c:	jne    41cf82 <main@@Base+0x15eb2>
  41cf6e:	cmp    BYTE PTR [rbx+0x1],0x20
  41cf72:	jle    41cf82 <main@@Base+0x15eb2>
  41cf74:	add    rbx,0x1
  41cf78:	cmp    rbx,r13
  41cf7b:	jne    41cf9c <main@@Base+0x15ecc>
  41cf7d:	jmp    41d1df <main@@Base+0x1610f>
  41cf82:	mov    rdi,r14
  41cf85:	mov    rsi,rbx
  41cf88:	mov    rdx,r13
  41cf8b:	call   425750 <flatcc_json_parser_space_ext@@Base>
  41cf90:	mov    rbx,rax
  41cf93:	cmp    rbx,r13
  41cf96:	je     41d1df <main@@Base+0x1610f>
  41cf9c:	movzx  eax,BYTE PTR [rbx]
  41cf9f:	cmp    al,0x2c
  41cfa1:	jne    41d205 <main@@Base+0x16135>
  41cfa7:	lea    rdx,[rbx+0x1]
  41cfab:	mov    rax,r13
  41cfae:	sub    rax,rdx
  41cfb1:	cmp    rax,0x2
  41cfb5:	jl     41cfd5 <main@@Base+0x15f05>
  41cfb7:	cmp    BYTE PTR [rdx],0x20
  41cfba:	jg     41cfe6 <main@@Base+0x15f16>
  41cfbc:	jne    41cfd5 <main@@Base+0x15f05>
  41cfbe:	cmp    BYTE PTR [rbx+0x2],0x20
  41cfc2:	jle    41cfd5 <main@@Base+0x15f05>
  41cfc4:	add    rbx,0x2
  41cfc8:	mov    rdx,rbx
  41cfcb:	cmp    rdx,r13
  41cfce:	jne    41cfef <main@@Base+0x15f1f>
  41cfd0:	jmp    41d243 <main@@Base+0x16173>
  41cfd5:	mov    rdi,r14
  41cfd8:	mov    rsi,rdx
  41cfdb:	mov    rdx,r13
  41cfde:	call   425750 <flatcc_json_parser_space_ext@@Base>
  41cfe3:	mov    rdx,rax
  41cfe6:	cmp    rdx,r13
  41cfe9:	je     41d243 <main@@Base+0x16173>
  41cfef:	cmp    BYTE PTR [rdx],0x7d
  41cff2:	jne    41cbf2 <main@@Base+0x15b22>
  41cff8:	jmp    41d253 <main@@Base+0x16183>
  41cffd:	mov    ecx,0x4
  41d002:	mov    rdi,r14
  41d005:	mov    rdx,r13
  41d008:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  41d00d:	jmp    41d01d <main@@Base+0x15f4d>
  41d00f:	mov    rdi,r14
  41d012:	mov    rsi,rbp
  41d015:	mov    rdx,r13
  41d018:	call   425750 <flatcc_json_parser_space_ext@@Base>
  41d01d:	mov    rbp,rax
  41d020:	cmp    r12,rbp
  41d023:	je     41cf40 <main@@Base+0x15e70>
  41d029:	mov    QWORD PTR [rsp+0x10],0x0
  41d032:	mov    DWORD PTR [rsp+0x4],0x0
  41d03a:	mov    DWORD PTR [rsp],0x0
  41d041:	mov    DWORD PTR [rsp+0x8],0x0
  41d049:	cmp    rbp,r13
  41d04c:	je     41d095 <main@@Base+0x15fc5>
  41d04e:	mov    rdi,r14
  41d051:	mov    rsi,rbp
  41d054:	mov    rdx,r13
  41d057:	lea    rcx,[rsp+0x4]
  41d05c:	lea    r8,[rsp+0x10]
  41d061:	call   427360 <flatcc_json_parser_integer@@Base>
  41d066:	cmp    rax,rbp
  41d069:	movabs r12,0x73776f72645f6174
  41d073:	je     41d0a9 <main@@Base+0x15fd9>
  41d075:	mov    rbx,rax
  41d078:	mov    rax,QWORD PTR [rsp+0x10]
  41d07d:	cmp    DWORD PTR [rsp+0x4],0x0
  41d082:	je     41d0b3 <main@@Base+0x15fe3>
  41d084:	mov    ecx,0x80000001
  41d089:	cmp    rax,rcx
  41d08c:	jb     41d0d8 <main@@Base+0x16008>
  41d08e:	mov    ecx,0x8
  41d093:	jmp    41d0c0 <main@@Base+0x15ff0>
  41d095:	mov    rbx,r13
  41d098:	movabs r12,0x73776f72645f6174
  41d0a2:	cmp    rbp,rbx
  41d0a5:	jne    41d11b <main@@Base+0x1604b>
  41d0a7:	jmp    41d0e7 <main@@Base+0x16017>
  41d0a9:	mov    rbx,rbp
  41d0ac:	cmp    rbp,rbx
  41d0af:	jne    41d11b <main@@Base+0x1604b>
  41d0b1:	jmp    41d0e7 <main@@Base+0x16017>
  41d0b3:	test   rax,0xffffffff80000000
  41d0b9:	je     41d0db <main@@Base+0x1600b>
  41d0bb:	mov    ecx,0x7
  41d0c0:	mov    rdi,r14
  41d0c3:	mov    rsi,rbx
  41d0c6:	mov    rdx,r13
  41d0c9:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  41d0ce:	mov    rbx,rax
  41d0d1:	cmp    rbp,rbx
  41d0d4:	jne    41d11b <main@@Base+0x1604b>
  41d0d6:	jmp    41d0e7 <main@@Base+0x16017>
  41d0d8:	neg    rax
  41d0db:	mov    DWORD PTR [rsp],eax
  41d0de:	mov    DWORD PTR [rsp+0x8],eax
  41d0e2:	cmp    rbp,rbx
  41d0e5:	jne    41d11b <main@@Base+0x1604b>
  41d0e7:	mov    rdi,r14
  41d0ea:	mov    rsi,rbp
  41d0ed:	mov    rdx,r13
  41d0f0:	lea    rcx,[rip+0x275e9]        # 4446e0 <__data_start@@Base+0x630>
  41d0f7:	mov    r8,rsp
  41d0fa:	call   415d40 <main@@Base+0xec70>
  41d0ff:	mov    rbx,rax
  41d102:	cmp    rax,rbp
  41d105:	je     41d2c6 <main@@Base+0x161f6>
  41d10b:	cmp    rbx,r13
  41d10e:	je     41d2c6 <main@@Base+0x161f6>
  41d114:	mov    eax,DWORD PTR [rsp]
  41d117:	mov    DWORD PTR [rsp+0x8],eax
  41d11b:	mov    ebp,DWORD PTR [rsp+0x8]
  41d11f:	test   ebp,ebp
  41d121:	jne    41d12e <main@@Base+0x1605e>
  41d123:	test   BYTE PTR [r14+0x10],0x2
  41d128:	je     41cf5b <main@@Base+0x15e8b>
  41d12e:	mov    rdi,QWORD PTR [r14]
  41d131:	xor    esi,esi
  41d133:	mov    edx,0x4
  41d138:	mov    ecx,0x4
  41d13d:	call   421f20 <flatcc_builder_table_add@@Base>
  41d142:	test   rax,rax
  41d145:	je     41d2c6 <main@@Base+0x161f6>
  41d14b:	mov    DWORD PTR [rax],ebp
  41d14d:	jmp    41cf5b <main@@Base+0x15e8b>
  41d152:	mov    rsi,r13
  41d155:	jmp    41c6a8 <main@@Base+0x155d8>
  41d15a:	cmp    cl,0x7d
  41d15d:	jne    41d29f <main@@Base+0x161cf>
  41d163:	lea    rbp,[rax+0x1]
  41d167:	mov    rcx,r13
  41d16a:	sub    rcx,rbp
  41d16d:	cmp    rcx,0x2
  41d171:	jl     41d1cc <main@@Base+0x160fc>
  41d173:	cmp    BYTE PTR [rbp+0x0],0x20
  41d177:	jg     41c689 <main@@Base+0x155b9>
  41d17d:	jne    41d1cc <main@@Base+0x160fc>
  41d17f:	cmp    BYTE PTR [rax+0x2],0x20
  41d183:	jle    41d1cc <main@@Base+0x160fc>
  41d185:	add    rax,0x2
  41d189:	jmp    41c686 <main@@Base+0x155b6>
  41d18e:	mov    ecx,0xa
  41d193:	mov    rdi,r14
  41d196:	mov    rsi,r13
  41d199:	jmp    41c67e <main@@Base+0x155ae>
  41d19e:	lea    rbp,[rdx+0x1]
  41d1a2:	mov    rax,r13
  41d1a5:	sub    rax,rbp
  41d1a8:	cmp    rax,0x2
  41d1ac:	jl     41d1cc <main@@Base+0x160fc>
  41d1ae:	cmp    BYTE PTR [rbp+0x0],0x20
  41d1b2:	jg     41c689 <main@@Base+0x155b9>
  41d1b8:	jne    41d1cc <main@@Base+0x160fc>
  41d1ba:	cmp    BYTE PTR [rdx+0x2],0x20
  41d1be:	jle    41d1cc <main@@Base+0x160fc>
  41d1c0:	add    rdx,0x2
  41d1c4:	mov    rbp,rdx
  41d1c7:	jmp    41c689 <main@@Base+0x155b9>
  41d1cc:	mov    rdi,r14
  41d1cf:	mov    rsi,rbp
  41d1d2:	mov    rdx,r13
  41d1d5:	call   425750 <flatcc_json_parser_space_ext@@Base>
  41d1da:	jmp    41c686 <main@@Base+0x155b6>
  41d1df:	mov    rbp,r13
  41d1e2:	cmp    DWORD PTR [r14+0x20],0x0
  41d1e7:	jne    41c6d3 <main@@Base+0x15603>
  41d1ed:	mov    rdi,QWORD PTR [r14]
  41d1f0:	call   4215b0 <flatcc_builder_end_table@@Base>
  41d1f5:	mov    DWORD PTR [r15],eax
  41d1f8:	test   eax,eax
  41d1fa:	jne    41c6e9 <main@@Base+0x15619>
  41d200:	jmp    41c6d3 <main@@Base+0x15603>
  41d205:	cmp    al,0x7d
  41d207:	jne    41d2af <main@@Base+0x161df>
  41d20d:	lea    rbp,[rbx+0x1]
  41d211:	mov    rax,r13
  41d214:	sub    rax,rbp
  41d217:	cmp    rax,0x2
  41d21b:	jl     41d28c <main@@Base+0x161bc>
  41d21d:	cmp    BYTE PTR [rbp+0x0],0x20
  41d221:	jg     41c6c8 <main@@Base+0x155f8>
  41d227:	jne    41d28c <main@@Base+0x161bc>
  41d229:	cmp    BYTE PTR [rbx+0x2],0x20
  41d22d:	jle    41d28c <main@@Base+0x161bc>
  41d22f:	add    rbx,0x2
  41d233:	mov    rbp,rbx
  41d236:	cmp    DWORD PTR [r14+0x20],0x0
  41d23b:	jne    41c6d3 <main@@Base+0x15603>
  41d241:	jmp    41d1ed <main@@Base+0x1611d>
  41d243:	mov    ecx,0xa
  41d248:	mov    rdi,r14
  41d24b:	mov    rsi,r13
  41d24e:	jmp    41c6bd <main@@Base+0x155ed>
  41d253:	lea    rbp,[rdx+0x1]
  41d257:	mov    rax,r13
  41d25a:	sub    rax,rbp
  41d25d:	cmp    rax,0x2
  41d261:	jl     41d28c <main@@Base+0x161bc>
  41d263:	cmp    BYTE PTR [rbp+0x0],0x20
  41d267:	jg     41c6c8 <main@@Base+0x155f8>
  41d26d:	jne    41d28c <main@@Base+0x161bc>
  41d26f:	cmp    BYTE PTR [rdx+0x2],0x20
  41d273:	jle    41d28c <main@@Base+0x161bc>
  41d275:	add    rdx,0x2
  41d279:	mov    rbp,rdx
  41d27c:	cmp    DWORD PTR [r14+0x20],0x0
  41d281:	jne    41c6d3 <main@@Base+0x15603>
  41d287:	jmp    41d1ed <main@@Base+0x1611d>
  41d28c:	mov    rdi,r14
  41d28f:	mov    rsi,rbp
  41d292:	mov    rdx,r13
  41d295:	call   425750 <flatcc_json_parser_space_ext@@Base>
  41d29a:	jmp    41c6c5 <main@@Base+0x155f5>
  41d29f:	mov    ecx,0xa
  41d2a4:	mov    rdi,r14
  41d2a7:	mov    rsi,rax
  41d2aa:	jmp    41c67e <main@@Base+0x155ae>
  41d2af:	mov    ecx,0xa
  41d2b4:	mov    rdi,r14
  41d2b7:	mov    rsi,rbx
  41d2ba:	jmp    41c6bd <main@@Base+0x155ed>
  41d2bf:	mov    ecx,0x21
  41d2c4:	jmp    41d2a4 <main@@Base+0x161d4>
  41d2c6:	mov    rbp,rbx
  41d2c9:	jmp    41c6d3 <main@@Base+0x15603>
  41d2ce:	xchg   ax,ax
  41d2d0:	add    dil,0x1
  41d2d4:	cmp    dil,0xc
  41d2d8:	ja     41d2e9 <main@@Base+0x16219>
  41d2da:	movsx  rax,dil
  41d2de:	lea    rcx,[rip+0x1890b]        # 435bf0 <_IO_stdin_used@@Base+0xbf0>
  41d2e5:	mov    eax,DWORD PTR [rcx+rax*4]
  41d2e8:	ret    
  41d2e9:	xor    eax,eax
  41d2eb:	ret    
  41d2ec:	nop    DWORD PTR [rax+0x0]
  41d2f0:	push   rbp
  41d2f1:	push   r15
  41d2f3:	push   r14
  41d2f5:	push   r13
  41d2f7:	push   r12
  41d2f9:	push   rbx
  41d2fa:	sub    rsp,0x18
  41d2fe:	mov    r13,rcx
  41d301:	mov    r15,rdx
  41d304:	mov    rbx,rsi
  41d307:	mov    r14,rdi
  41d30a:	mov    DWORD PTR [rcx],0x0
  41d310:	mov    rdi,QWORD PTR [rdi]
  41d313:	mov    esi,0x4
  41d318:	mov    edx,0x4
  41d31d:	call   41fc20 <flatcc_builder_start_struct@@Base>
  41d322:	test   rax,rax
  41d325:	je     41d862 <main@@Base+0x16792>
  41d32b:	cmp    rbx,r15
  41d32e:	je     41d360 <main@@Base+0x16290>
  41d330:	cmp    BYTE PTR [rbx],0x7b
  41d333:	jne    41d360 <main@@Base+0x16290>
  41d335:	mov    QWORD PTR [rsp+0x10],rax
  41d33a:	lea    rax,[rbx+0x1]
  41d33e:	mov    rcx,r15
  41d341:	sub    rcx,rax
  41d344:	cmp    rcx,0x2
  41d348:	jl     41d39e <main@@Base+0x162ce>
  41d34a:	cmp    BYTE PTR [rax],0x20
  41d34d:	jg     41d3ac <main@@Base+0x162dc>
  41d34f:	jne    41d39e <main@@Base+0x162ce>
  41d351:	cmp    BYTE PTR [rbx+0x2],0x20
  41d355:	jle    41d39e <main@@Base+0x162ce>
  41d357:	add    rbx,0x2
  41d35b:	mov    rax,rbx
  41d35e:	jmp    41d3ac <main@@Base+0x162dc>
  41d360:	mov    ecx,0x15
  41d365:	mov    rdi,r14
  41d368:	mov    rsi,rbx
  41d36b:	mov    rdx,r15
  41d36e:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  41d373:	mov    rbp,rax
  41d376:	mov    rbx,r15
  41d379:	cmp    rbp,r15
  41d37c:	je     41d862 <main@@Base+0x16792>
  41d382:	mov    rdi,QWORD PTR [r14]
  41d385:	call   41fcf0 <flatcc_builder_end_struct@@Base>
  41d38a:	mov    DWORD PTR [r13+0x0],eax
  41d38e:	mov    rbx,rbp
  41d391:	test   eax,eax
  41d393:	jne    41d878 <main@@Base+0x167a8>
  41d399:	jmp    41d862 <main@@Base+0x16792>
  41d39e:	mov    rdi,r14
  41d3a1:	mov    rsi,rax
  41d3a4:	mov    rdx,r15
  41d3a7:	call   425750 <flatcc_json_parser_space_ext@@Base>
  41d3ac:	mov    rdx,r15
  41d3af:	cmp    rax,r15
  41d3b2:	je     41d3c0 <main@@Base+0x162f0>
  41d3b4:	cmp    BYTE PTR [rax],0x7d
  41d3b7:	je     41d88f <main@@Base+0x167bf>
  41d3bd:	mov    rdx,rax
  41d3c0:	movabs r12,0x626f6f6b735f7265
  41d3ca:	nop    WORD PTR [rax+rax*1+0x0]
  41d3d0:	mov    rsi,r15
  41d3d3:	cmp    rdx,r15
  41d3d6:	je     41d42b <main@@Base+0x1635b>
  41d3d8:	movzx  eax,BYTE PTR [rdx]
  41d3db:	cmp    al,0x2e
  41d3dd:	je     41d400 <main@@Base+0x16330>
  41d3df:	cmp    al,0x22
  41d3e1:	jne    41d420 <main@@Base+0x16350>
  41d3e3:	add    rdx,0x1
  41d3e7:	mov    DWORD PTR [r14+0x14],0x0
  41d3ef:	jmp    41d428 <main@@Base+0x16358>
  41d3f1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d3fb:	nop    DWORD PTR [rax+rax*1+0x0]
  41d400:	mov    ecx,0x5
  41d405:	mov    rdi,r14
  41d408:	mov    rsi,rdx
  41d40b:	mov    rdx,r15
  41d40e:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  41d413:	mov    rsi,rax
  41d416:	jmp    41d42b <main@@Base+0x1635b>
  41d418:	nop    DWORD PTR [rax+rax*1+0x0]
  41d420:	mov    DWORD PTR [r14+0x14],0x1
  41d428:	mov    rsi,rdx
  41d42b:	mov    rax,r15
  41d42e:	sub    rax,rsi
  41d431:	cmp    rax,0x8
  41d435:	jb     41d450 <main@@Base+0x16380>
  41d437:	movbe  rax,QWORD PTR [rsi]
  41d43c:	cmp    rax,r12
  41d43f:	je     41d4db <main@@Base+0x1640b>
  41d445:	jmp    41d500 <main@@Base+0x16430>
  41d44a:	nop    WORD PTR [rax+rax*1+0x0]
  41d450:	and    al,0xf
  41d452:	add    al,0xff
  41d454:	cmp    al,0x7
  41d456:	ja     41d500 <main@@Base+0x16430>
  41d45c:	movzx  eax,al
  41d45f:	lea    rcx,[rip+0x18682]        # 435ae8 <_IO_stdin_used@@Base+0xae8>
  41d466:	movsxd rax,DWORD PTR [rcx+rax*4]
  41d46a:	add    rax,rcx
  41d46d:	xor    r8d,r8d
  41d470:	xor    r9d,r9d
  41d473:	xor    ecx,ecx
  41d475:	xor    edx,edx
  41d477:	xor    ebp,ebp
  41d479:	xor    ebx,ebx
  41d47b:	xor    edi,edi
  41d47d:	jmp    rax
  41d47f:	movsx  r8,BYTE PTR [rsi+0x7]
  41d484:	movsx  r9,BYTE PTR [rsi+0x6]
  41d489:	shl    r9,0x8
  41d48d:	or     r9,r8
  41d490:	movsx  rcx,BYTE PTR [rsi+0x5]
  41d495:	shl    rcx,0x10
  41d499:	or     rcx,r9
  41d49c:	movsx  rdx,BYTE PTR [rsi+0x4]
  41d4a1:	shl    rdx,0x18
  41d4a5:	or     rdx,rcx
  41d4a8:	movsx  rbp,BYTE PTR [rsi+0x3]
  41d4ad:	shl    rbp,0x20
  41d4b1:	or     rbp,rdx
  41d4b4:	movsx  rbx,BYTE PTR [rsi+0x2]
  41d4b9:	shl    rbx,0x28
  41d4bd:	or     rbx,rbp
  41d4c0:	movsx  rdi,BYTE PTR [rsi+0x1]
  41d4c5:	shl    rdi,0x30
  41d4c9:	or     rdi,rbx
  41d4cc:	movzx  eax,BYTE PTR [rsi]
  41d4cf:	shl    rax,0x38
  41d4d3:	or     rax,rdi
  41d4d6:	cmp    rax,r12
  41d4d9:	jne    41d500 <main@@Base+0x16430>
  41d4db:	mov    r12,r13
  41d4de:	lea    r13,[rsi+0x8]
  41d4e2:	mov    rax,r15
  41d4e5:	sub    rax,r13
  41d4e8:	cmp    rax,0x8
  41d4ec:	jb     41d510 <main@@Base+0x16440>
  41d4ee:	movbe  rdx,QWORD PTR [r13+0x0]
  41d4f4:	jmp    41d5a1 <main@@Base+0x164d1>
  41d4f9:	nop    DWORD PTR [rax+0x0]
  41d500:	mov    rdi,r14
  41d503:	mov    rdx,r15
  41d506:	call   425cc0 <flatcc_json_parser_unmatched_symbol@@Base>
  41d50b:	jmp    41d69b <main@@Base+0x165cb>
  41d510:	mov    ecx,eax
  41d512:	and    cl,0xf
  41d515:	add    cl,0xff
  41d518:	cmp    cl,0x7
  41d51b:	ja     41d680 <main@@Base+0x165b0>
  41d521:	movzx  ecx,cl
  41d524:	lea    rdx,[rip+0x185dd]        # 435b08 <_IO_stdin_used@@Base+0xb08>
  41d52b:	mov    rdi,rdx
  41d52e:	movsxd rdx,DWORD PTR [rdx+rcx*4]
  41d532:	add    rdx,rdi
  41d535:	xor    r8d,r8d
  41d538:	xor    r9d,r9d
  41d53b:	xor    r10d,r10d
  41d53e:	xor    edi,edi
  41d540:	xor    ebx,ebx
  41d542:	xor    ebp,ebp
  41d544:	xor    ecx,ecx
  41d546:	jmp    rdx
  41d548:	movsx  r8,BYTE PTR [rsi+0xf]
  41d54d:	movsx  r9,BYTE PTR [rsi+0xe]
  41d552:	shl    r9,0x8
  41d556:	or     r9,r8
  41d559:	movsx  r10,BYTE PTR [rsi+0xd]
  41d55e:	shl    r10,0x10
  41d562:	or     r10,r9
  41d565:	movsx  rdi,BYTE PTR [rsi+0xc]
  41d56a:	shl    rdi,0x18
  41d56e:	or     rdi,r10
  41d571:	movsx  rbx,BYTE PTR [rsi+0xb]
  41d576:	shl    rbx,0x20
  41d57a:	or     rbx,rdi
  41d57d:	movsx  rbp,BYTE PTR [rsi+0xa]
  41d582:	shl    rbp,0x28
  41d586:	or     rbp,rbx
  41d589:	movsx  rcx,BYTE PTR [rsi+0x9]
  41d58e:	shl    rcx,0x30
  41d592:	or     rcx,rbp
  41d595:	movzx  edx,BYTE PTR [r13+0x0]
  41d59a:	shl    rdx,0x38
  41d59e:	or     rdx,rcx
  41d5a1:	shr    rdx,0x30
  41d5a5:	cmp    rdx,0x6164
  41d5ac:	jne    41d680 <main@@Base+0x165b0>
  41d5b2:	cmp    rax,0x3
  41d5b6:	jl     41d680 <main@@Base+0x165b0>
  41d5bc:	cmp    DWORD PTR [r14+0x14],0x0
  41d5c1:	movzx  eax,BYTE PTR [rsi+0xa]
  41d5c5:	je     41d5e1 <main@@Base+0x16511>
  41d5c7:	cmp    al,0x21
  41d5c9:	jl     41d5d3 <main@@Base+0x16503>
  41d5cb:	cmp    al,0x3a
  41d5cd:	jne    41d680 <main@@Base+0x165b0>
  41d5d3:	add    rsi,0xa
  41d5d7:	mov    DWORD PTR [r14+0x14],0x0
  41d5df:	jmp    41d5ed <main@@Base+0x1651d>
  41d5e1:	cmp    al,0x22
  41d5e3:	jne    41d680 <main@@Base+0x165b0>
  41d5e9:	add    rsi,0xb
  41d5ed:	mov    rax,r15
  41d5f0:	sub    rax,rsi
  41d5f3:	cmp    rax,0x2
  41d5f7:	jl     41d614 <main@@Base+0x16544>
  41d5f9:	cmp    BYTE PTR [rsi],0x20
  41d5fc:	jg     41d622 <main@@Base+0x16552>
  41d5fe:	jne    41d614 <main@@Base+0x16544>
  41d600:	cmp    BYTE PTR [rsi+0x1],0x20
  41d604:	jle    41d614 <main@@Base+0x16544>
  41d606:	add    rsi,0x1
  41d60a:	cmp    rsi,r15
  41d60d:	jne    41d62b <main@@Base+0x1655b>
  41d60f:	jmp    41d748 <main@@Base+0x16678>
  41d614:	mov    rdi,r14
  41d617:	mov    rdx,r15
  41d61a:	call   425750 <flatcc_json_parser_space_ext@@Base>
  41d61f:	mov    rsi,rax
  41d622:	cmp    rsi,r15
  41d625:	je     41d748 <main@@Base+0x16678>
  41d62b:	cmp    BYTE PTR [rsi],0x3a
  41d62e:	jne    41d748 <main@@Base+0x16678>
  41d634:	lea    rbp,[rsi+0x1]
  41d638:	mov    rax,r15
  41d63b:	sub    rax,rbp
  41d63e:	cmp    rax,0x2
  41d642:	jl     41d75a <main@@Base+0x1668a>
  41d648:	cmp    BYTE PTR [rbp+0x0],0x20
  41d64c:	jg     41d76b <main@@Base+0x1669b>
  41d652:	jne    41d75a <main@@Base+0x1668a>
  41d658:	cmp    BYTE PTR [rsi+0x2],0x20
  41d65c:	jle    41d75a <main@@Base+0x1668a>
  41d662:	add    rsi,0x2
  41d666:	mov    rbp,rsi
  41d669:	cmp    r13,rbp
  41d66c:	jne    41d774 <main@@Base+0x166a4>
  41d672:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d67c:	nop    DWORD PTR [rax+0x0]
  41d680:	mov    rdi,r14
  41d683:	mov    rsi,r13
  41d686:	mov    rdx,r15
  41d689:	call   425cc0 <flatcc_json_parser_unmatched_symbol@@Base>
  41d68e:	mov    r13,r12
  41d691:	movabs r12,0x626f6f6b735f7265
  41d69b:	mov    rcx,r15
  41d69e:	sub    rcx,rax
  41d6a1:	cmp    rcx,0x2
  41d6a5:	jl     41d6d0 <main@@Base+0x16600>
  41d6a7:	cmp    BYTE PTR [rax],0x20
  41d6aa:	jg     41d6de <main@@Base+0x1660e>
  41d6ac:	jne    41d6d0 <main@@Base+0x16600>
  41d6ae:	cmp    BYTE PTR [rax+0x1],0x20
  41d6b2:	jle    41d6d0 <main@@Base+0x16600>
  41d6b4:	add    rax,0x1
  41d6b8:	cmp    rax,r15
  41d6bb:	jne    41d6e7 <main@@Base+0x16617>
  41d6bd:	jmp    41d85f <main@@Base+0x1678f>
  41d6c2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d6cc:	nop    DWORD PTR [rax+0x0]
  41d6d0:	mov    rdi,r14
  41d6d3:	mov    rsi,rax
  41d6d6:	mov    rdx,r15
  41d6d9:	call   425750 <flatcc_json_parser_space_ext@@Base>
  41d6de:	cmp    rax,r15
  41d6e1:	je     41d85f <main@@Base+0x1678f>
  41d6e7:	movzx  ecx,BYTE PTR [rax]
  41d6ea:	cmp    cl,0x2c
  41d6ed:	jne    41d88a <main@@Base+0x167ba>
  41d6f3:	lea    rdx,[rax+0x1]
  41d6f7:	mov    rcx,r15
  41d6fa:	sub    rcx,rdx
  41d6fd:	cmp    rcx,0x2
  41d701:	jl     41d720 <main@@Base+0x16650>
  41d703:	cmp    BYTE PTR [rdx],0x20
  41d706:	jg     41d731 <main@@Base+0x16661>
  41d708:	jne    41d720 <main@@Base+0x16650>
  41d70a:	cmp    BYTE PTR [rax+0x2],0x20
  41d70e:	jle    41d720 <main@@Base+0x16650>
  41d710:	add    rax,0x2
  41d714:	jmp    41d72e <main@@Base+0x1665e>
  41d716:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d720:	mov    rdi,r14
  41d723:	mov    rsi,rdx
  41d726:	mov    rdx,r15
  41d729:	call   425750 <flatcc_json_parser_space_ext@@Base>
  41d72e:	mov    rdx,rax
  41d731:	cmp    rdx,r15
  41d734:	je     41d8ba <main@@Base+0x167ea>
  41d73a:	cmp    BYTE PTR [rdx],0x7d
  41d73d:	jne    41d3d0 <main@@Base+0x16300>
  41d743:	jmp    41d8ca <main@@Base+0x167fa>
  41d748:	mov    ecx,0x4
  41d74d:	mov    rdi,r14
  41d750:	mov    rdx,r15
  41d753:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  41d758:	jmp    41d768 <main@@Base+0x16698>
  41d75a:	mov    rdi,r14
  41d75d:	mov    rsi,rbp
  41d760:	mov    rdx,r15
  41d763:	call   425750 <flatcc_json_parser_space_ext@@Base>
  41d768:	mov    rbp,rax
  41d76b:	cmp    r13,rbp
  41d76e:	je     41d680 <main@@Base+0x165b0>
  41d774:	mov    QWORD PTR [rsp+0x8],0x0
  41d77d:	mov    DWORD PTR [rsp+0x4],0x0
  41d785:	mov    DWORD PTR [rsp],0x0
  41d78c:	xor    ebx,ebx
  41d78e:	cmp    rbp,r15
  41d791:	je     41d7da <main@@Base+0x1670a>
  41d793:	mov    rdi,r14
  41d796:	mov    rsi,rbp
  41d799:	mov    rdx,r15
  41d79c:	lea    rcx,[rsp+0x4]
  41d7a1:	lea    r8,[rsp+0x8]
  41d7a6:	call   427360 <flatcc_json_parser_integer@@Base>
  41d7ab:	cmp    rax,rbp
  41d7ae:	mov    r13,r12
  41d7b1:	je     41d7e2 <main@@Base+0x16712>
  41d7b3:	mov    rcx,QWORD PTR [rsp+0x8]
  41d7b8:	cmp    DWORD PTR [rsp+0x4],0x0
  41d7bd:	movabs r12,0x626f6f6b735f7265
  41d7c7:	je     41d7f6 <main@@Base+0x16726>
  41d7c9:	mov    edx,0x80000001
  41d7ce:	cmp    rcx,rdx
  41d7d1:	jb     41d819 <main@@Base+0x16749>
  41d7d3:	mov    ecx,0x8
  41d7d8:	jmp    41d804 <main@@Base+0x16734>
  41d7da:	mov    rax,r15
  41d7dd:	mov    r13,r12
  41d7e0:	jmp    41d7e5 <main@@Base+0x16715>
  41d7e2:	mov    rax,rbp
  41d7e5:	movabs r12,0x626f6f6b735f7265
  41d7ef:	cmp    rbp,rax
  41d7f2:	jne    41d853 <main@@Base+0x16783>
  41d7f4:	jmp    41d826 <main@@Base+0x16756>
  41d7f6:	test   rcx,0xffffffff80000000
  41d7fd:	je     41d81c <main@@Base+0x1674c>
  41d7ff:	mov    ecx,0x7
  41d804:	mov    rdi,r14
  41d807:	mov    rsi,rax
  41d80a:	mov    rdx,r15
  41d80d:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  41d812:	cmp    rbp,rax
  41d815:	jne    41d853 <main@@Base+0x16783>
  41d817:	jmp    41d826 <main@@Base+0x16756>
  41d819:	neg    rcx
  41d81c:	mov    DWORD PTR [rsp],ecx
  41d81f:	mov    ebx,ecx
  41d821:	cmp    rbp,rax
  41d824:	jne    41d853 <main@@Base+0x16783>
  41d826:	mov    rdi,r14
  41d829:	mov    rsi,rbp
  41d82c:	mov    rdx,r15
  41d82f:	lea    rcx,[rip+0x26eea]        # 444720 <__data_start@@Base+0x670>
  41d836:	mov    r8,rsp
  41d839:	call   415d40 <main@@Base+0xec70>
  41d83e:	cmp    rax,rbp
  41d841:	je     41d91b <main@@Base+0x1684b>
  41d847:	cmp    rax,r15
  41d84a:	je     41d91b <main@@Base+0x1684b>
  41d850:	mov    ebx,DWORD PTR [rsp]
  41d853:	mov    rcx,QWORD PTR [rsp+0x10]
  41d858:	mov    DWORD PTR [rcx],ebx
  41d85a:	jmp    41d69b <main@@Base+0x165cb>
  41d85f:	mov    rbx,r15
  41d862:	mov    ecx,0x21
  41d867:	mov    rdi,r14
  41d86a:	mov    rsi,rbx
  41d86d:	mov    rdx,r15
  41d870:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  41d875:	mov    rbp,rax
  41d878:	mov    rax,rbp
  41d87b:	add    rsp,0x18
  41d87f:	pop    rbx
  41d880:	pop    r12
  41d882:	pop    r13
  41d884:	pop    r14
  41d886:	pop    r15
  41d888:	pop    rbp
  41d889:	ret    
  41d88a:	cmp    cl,0x7d
  41d88d:	jne    41d90b <main@@Base+0x1683b>
  41d88f:	lea    rbp,[rax+0x1]
  41d893:	mov    rcx,r15
  41d896:	sub    rcx,rbp
  41d899:	cmp    rcx,0x2
  41d89d:	jl     41d8f8 <main@@Base+0x16828>
  41d89f:	cmp    BYTE PTR [rbp+0x0],0x20
  41d8a3:	jg     41d376 <main@@Base+0x162a6>
  41d8a9:	jne    41d8f8 <main@@Base+0x16828>
  41d8ab:	cmp    BYTE PTR [rax+0x2],0x20
  41d8af:	jle    41d8f8 <main@@Base+0x16828>
  41d8b1:	add    rax,0x2
  41d8b5:	jmp    41d373 <main@@Base+0x162a3>
  41d8ba:	mov    ecx,0xa
  41d8bf:	mov    rdi,r14
  41d8c2:	mov    rsi,r15
  41d8c5:	jmp    41d36b <main@@Base+0x1629b>
  41d8ca:	lea    rbp,[rdx+0x1]
  41d8ce:	mov    rax,r15
  41d8d1:	sub    rax,rbp
  41d8d4:	cmp    rax,0x2
  41d8d8:	jl     41d8f8 <main@@Base+0x16828>
  41d8da:	cmp    BYTE PTR [rbp+0x0],0x20
  41d8de:	jg     41d376 <main@@Base+0x162a6>
  41d8e4:	jne    41d8f8 <main@@Base+0x16828>
  41d8e6:	cmp    BYTE PTR [rdx+0x2],0x20
  41d8ea:	jle    41d8f8 <main@@Base+0x16828>
  41d8ec:	add    rdx,0x2
  41d8f0:	mov    rbp,rdx
  41d8f3:	jmp    41d376 <main@@Base+0x162a6>
  41d8f8:	mov    rdi,r14
  41d8fb:	mov    rsi,rbp
  41d8fe:	mov    rdx,r15
  41d901:	call   425750 <flatcc_json_parser_space_ext@@Base>
  41d906:	jmp    41d373 <main@@Base+0x162a3>
  41d90b:	mov    ecx,0xa
  41d910:	mov    rdi,r14
  41d913:	mov    rsi,rax
  41d916:	jmp    41d36b <main@@Base+0x1629b>
  41d91b:	mov    ecx,0x21
  41d920:	jmp    41d910 <main@@Base+0x16840>
  41d922:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d92c:	nop    DWORD PTR [rax+0x0]
  41d930:	push   rbp
  41d931:	push   r15
  41d933:	push   r14
  41d935:	push   r13
  41d937:	push   r12
  41d939:	push   rbx
  41d93a:	sub    rsp,0x38
  41d93e:	mov    r15,r8
  41d941:	mov    r13,rdx
  41d944:	mov    rbx,rsi
  41d947:	mov    r14,rdi
  41d94a:	mov    WORD PTR [r8],0x0
  41d950:	cmp    rsi,rdx
  41d953:	je     41d96f <main@@Base+0x1689f>
  41d955:	mov    al,BYTE PTR [rbx]
  41d957:	cmp    al,0x2e
  41d959:	je     41d980 <main@@Base+0x168b0>
  41d95b:	cmp    al,0x22
  41d95d:	jne    41daf4 <main@@Base+0x16a24>
  41d963:	add    rbx,0x1
  41d967:	mov    DWORD PTR [r14+0x14],0x0
  41d96f:	cmp    DWORD PTR [r14+0x14],0x0
  41d974:	je     41d9a3 <main@@Base+0x168d3>
  41d976:	cmp    rbx,r13
  41d979:	jne    41d9e2 <main@@Base+0x16912>
  41d97b:	jmp    41dac7 <main@@Base+0x169f7>
  41d980:	mov    rbp,rcx
  41d983:	mov    ecx,0x5
  41d988:	mov    rdi,r14
  41d98b:	mov    rsi,rbx
  41d98e:	mov    rdx,r13
  41d991:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  41d996:	mov    rcx,rbp
  41d999:	mov    rbx,rax
  41d99c:	cmp    DWORD PTR [r14+0x14],0x0
  41d9a1:	jne    41d976 <main@@Base+0x168a6>
  41d9a3:	mov    rbp,rcx
  41d9a6:	mov    rax,r13
  41d9a9:	sub    rax,rbx
  41d9ac:	cmp    rax,0x2
  41d9b0:	jl     41d9c5 <main@@Base+0x168f5>
  41d9b2:	cmp    BYTE PTR [rbx],0x20
  41d9b5:	jg     41d9d6 <main@@Base+0x16906>
  41d9b7:	jne    41d9c5 <main@@Base+0x168f5>
  41d9b9:	cmp    BYTE PTR [rbx+0x1],0x20
  41d9bd:	jle    41d9c5 <main@@Base+0x168f5>
  41d9bf:	add    rbx,0x1
  41d9c3:	jmp    41d9d6 <main@@Base+0x16906>
  41d9c5:	mov    rdi,r14
  41d9c8:	mov    rsi,rbx
  41d9cb:	mov    rdx,r13
  41d9ce:	call   425750 <flatcc_json_parser_space_ext@@Base>
  41d9d3:	mov    rbx,rax
  41d9d6:	mov    rcx,rbp
  41d9d9:	cmp    rbx,r13
  41d9dc:	je     41dac7 <main@@Base+0x169f7>
  41d9e2:	lea    rax,[rcx+0x8]
  41d9e6:	mov    DWORD PTR [rsp+0xc],0x0
  41d9ee:	lea    r12,[rsp+0x18]
  41d9f3:	mov    QWORD PTR [rsp+0x20],r15
  41d9f8:	mov    QWORD PTR [rsp+0x10],rcx
  41d9fd:	mov    QWORD PTR [rsp+0x28],rax
  41da02:	mov    rbp,QWORD PTR [rcx]
  41da05:	mov    r15,rax
  41da08:	nop    DWORD PTR [rax+rax*1+0x0]
  41da10:	mov    rdi,r14
  41da13:	mov    rsi,rbx
  41da16:	mov    rdx,r13
  41da19:	lea    rcx,[rsp+0x1c]
  41da1e:	lea    r8,[rsp+0x30]
  41da23:	mov    r9,r12
  41da26:	call   rbp
  41da28:	cmp    rax,r13
  41da2b:	je     41dac7 <main@@Base+0x169f7>
  41da31:	mov    rbp,rax
  41da34:	cmp    rax,rbx
  41da37:	jne    41da50 <main@@Base+0x16980>
  41da39:	mov    rbp,QWORD PTR [r15]
  41da3c:	add    r15,0x8
  41da40:	test   rbp,rbp
  41da43:	jne    41da10 <main@@Base+0x16940>
  41da45:	jmp    41dacc <main@@Base+0x169fc>
  41da4a:	nop    WORD PTR [rax+rax*1+0x0]
  41da50:	cmp    DWORD PTR [rsp+0x1c],0x0
  41da55:	je     41da71 <main@@Base+0x169a1>
  41da57:	mov    ecx,0x8
  41da5c:	mov    rdi,r14
  41da5f:	mov    rsi,rbp
  41da62:	mov    rdx,r13
  41da65:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  41da6a:	mov    r15,QWORD PTR [rsp+0x20]
  41da6f:	jmp    41daa0 <main@@Base+0x169d0>
  41da71:	mov    rax,QWORD PTR [rsp+0x30]
  41da76:	cmp    rax,0x10000
  41da7c:	mov    r15,QWORD PTR [rsp+0x20]
  41da81:	jb     41da98 <main@@Base+0x169c8>
  41da83:	mov    ecx,0x7
  41da88:	mov    rdi,r14
  41da8b:	mov    rsi,rbp
  41da8e:	mov    rdx,r13
  41da91:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  41da96:	jmp    41daa0 <main@@Base+0x169d0>
  41da98:	mov    DWORD PTR [rsp+0xc],eax
  41da9c:	mov    rax,rbp
  41da9f:	nop
  41daa0:	mov    rcx,QWORD PTR [rsp+0x10]
  41daa5:	cmp    rax,r13
  41daa8:	je     41dac7 <main@@Base+0x169f7>
  41daaa:	mov    eax,DWORD PTR [rsp+0xc]
  41daae:	add    WORD PTR [r15],ax
  41dab2:	cmp    DWORD PTR [rsp+0x18],0x0
  41dab7:	mov    rbx,rbp
  41daba:	mov    rax,QWORD PTR [rsp+0x28]
  41dabf:	jne    41da02 <main@@Base+0x16932>
  41dac5:	jmp    41dae2 <main@@Base+0x16a12>
  41dac7:	mov    rbp,r13
  41daca:	jmp    41dae2 <main@@Base+0x16a12>
  41dacc:	mov    ecx,0x17
  41dad1:	mov    rdi,r14
  41dad4:	mov    rsi,rbx
  41dad7:	mov    rdx,r13
  41dada:	call   4256c0 <flatcc_json_parser_set_error@@Base>
  41dadf:	mov    rbp,rax
  41dae2:	mov    rax,rbp
  41dae5:	add    rsp,0x38
  41dae9:	pop    rbx
  41daea:	pop    r12
  41daec:	pop    r13
  41daee:	pop    r14
  41daf0:	pop    r15
  41daf2:	pop    rbp
  41daf3:	ret    
  41daf4:	mov    DWORD PTR [r14+0x14],0x1
  41dafc:	cmp    DWORD PTR [r14+0x14],0x0
  41db01:	jne    41d976 <main@@Base+0x168a6>
  41db07:	jmp    41d9a3 <main@@Base+0x168d3>
  41db0c:	nop    DWORD PTR [rax+0x0]
  41db10:	push   r14
  41db12:	push   rbx
  41db13:	push   rax
  41db14:	mov    r14,rsi
  41db17:	mov    rbx,rdi
  41db1a:	lea    r8,[rip+0x1b94c]        # 43946d <_IO_stdin_used@@Base+0x446d>
  41db21:	xor    esi,esi
  41db23:	xor    ecx,ecx
  41db25:	mov    r9d,0x1
  41db2b:	mov    rdx,r14
  41db2e:	call   42cc00 <flatcc_json_printer_float_struct_field@@Base>
  41db33:	lea    r8,[rip+0x1e27b]        # 43bdb5 <flatcc_builder_padding_base@@Base+0x2585>
  41db3a:	mov    esi,0x1
  41db3f:	mov    ecx,0x4
  41db44:	mov    r9d,0x1
  41db4a:	mov    rdi,rbx
  41db4d:	mov    rdx,r14
  41db50:	call   42cc00 <flatcc_json_printer_float_struct_field@@Base>
  41db55:	lea    r8,[rip+0x1baca]        # 439626 <_IO_stdin_used@@Base+0x4626>
  41db5c:	mov    esi,0x2
  41db61:	mov    ecx,0x8
  41db66:	mov    r9d,0x1
  41db6c:	mov    rdi,rbx
  41db6f:	mov    rdx,r14
  41db72:	call   42cc00 <flatcc_json_printer_float_struct_field@@Base>
  41db77:	lea    r8,[rip+0x1baaa]        # 439628 <_IO_stdin_used@@Base+0x4628>
  41db7e:	mov    esi,0x3
  41db83:	mov    ecx,0x10
  41db88:	mov    r9d,0x5
  41db8e:	mov    rdi,rbx
  41db91:	mov    rdx,r14
  41db94:	call   42cc60 <flatcc_json_printer_double_struct_field@@Base>
  41db99:	lea    rax,[rip+0x60]        # 41dc00 <main@@Base+0x16b30>
  41dba0:	mov    QWORD PTR [rsp],rax
  41dba4:	lea    r8,[rip+0x1ba83]        # 43962e <_IO_stdin_used@@Base+0x462e>
  41dbab:	mov    esi,0x4
  41dbb0:	mov    ecx,0x18
  41dbb5:	mov    r9d,0x5
  41dbbb:	mov    rdi,rbx
  41dbbe:	mov    rdx,r14
  41dbc1:	call   42cfc0 <flatcc_json_printer_int8_enum_struct_field@@Base>
  41dbc6:	lea    rax,[rip+0x1e3]        # 41ddb0 <main@@Base+0x16ce0>
  41dbcd:	mov    QWORD PTR [rsp],rax
  41dbd1:	lea    r8,[rip+0x1ba5c]        # 439634 <_IO_stdin_used@@Base+0x4634>
  41dbd8:	mov    esi,0x5
  41dbdd:	mov    ecx,0x1a
  41dbe2:	mov    r9d,0x5
  41dbe8:	mov    rdi,rbx
  41dbeb:	mov    rdx,r14
  41dbee:	call   433bf0 <flatcc_json_printer_embedded_struct_field@@Base>
  41dbf3:	add    rsp,0x8
  41dbf7:	pop    rbx
  41dbf8:	pop    r14
  41dbfa:	ret    
  41dbfb:	nop    DWORD PTR [rax+rax*1+0x0]
  41dc00:	push   rbp
  41dc01:	push   r15
  41dc03:	push   r14
  41dc05:	push   rbx
  41dc06:	push   rax
  41dc07:	mov    ebp,esi
  41dc09:	mov    rbx,rdi
  41dc0c:	movzx  ecx,bpl
  41dc10:	lea    eax,[rcx-0x1]
  41dc13:	xor    r14d,r14d
  41dc16:	test   eax,ecx
  41dc18:	setne  al
  41dc1b:	test   cl,cl
  41dc1d:	je     41dc74 <main@@Base+0x16ba4>
  41dc1f:	mov    ecx,ebp
  41dc21:	and    ecx,0xf4
  41dc27:	jne    41dc74 <main@@Base+0x16ba4>
  41dc29:	mov    r14b,al
  41dc2c:	mov    rdi,rbx
  41dc2f:	mov    esi,r14d
  41dc32:	call   42ad40 <flatcc_json_printer_delimit_enum_flags@@Base>
  41dc37:	xor    esi,esi
  41dc39:	test   bpl,0x1
  41dc3d:	jne    41dc8a <main@@Base+0x16bba>
  41dc3f:	test   bpl,0x2
  41dc43:	jne    41dcab <main@@Base+0x16bdb>
  41dc45:	test   bpl,0x8
  41dc49:	je     41dc5f <main@@Base+0x16b8f>
  41dc4b:	lea    rdx,[rip+0x1b9f2]        # 439644 <_IO_stdin_used@@Base+0x4644>
  41dc52:	mov    ecx,0x4
  41dc57:	mov    rdi,rbx
  41dc5a:	call   42ad60 <flatcc_json_printer_enum_flag@@Base>
  41dc5f:	mov    rdi,rbx
  41dc62:	mov    esi,r14d
  41dc65:	add    rsp,0x8
  41dc69:	pop    rbx
  41dc6a:	pop    r14
  41dc6c:	pop    r15
  41dc6e:	pop    rbp
  41dc6f:	jmp    42ad40 <flatcc_json_printer_delimit_enum_flags@@Base>
  41dc74:	movsx  esi,bpl
  41dc78:	mov    rdi,rbx
  41dc7b:	add    rsp,0x8
  41dc7f:	pop    rbx
  41dc80:	pop    r14
  41dc82:	pop    r15
  41dc84:	pop    rbp
  41dc85:	jmp    42a9b0 <flatcc_json_printer_int8@@Base>
  41dc8a:	lea    rdx,[rip+0x1b9a9]        # 43963a <_IO_stdin_used@@Base+0x463a>
  41dc91:	xor    esi,esi
  41dc93:	mov    ecx,0x3
  41dc98:	mov    rdi,rbx
  41dc9b:	call   42ad60 <flatcc_json_printer_enum_flag@@Base>
  41dca0:	mov    esi,0x1
  41dca5:	test   bpl,0x2
  41dca9:	je     41dc45 <main@@Base+0x16b75>
  41dcab:	lea    r15d,[rsi+0x1]
  41dcaf:	lea    rdx,[rip+0x1b988]        # 43963e <_IO_stdin_used@@Base+0x463e>
  41dcb6:	mov    ecx,0x5
  41dcbb:	mov    rdi,rbx
  41dcbe:	call   42ad60 <flatcc_json_printer_enum_flag@@Base>
  41dcc3:	mov    esi,r15d
  41dcc6:	test   bpl,0x8
  41dcca:	jne    41dc4b <main@@Base+0x16b7b>
  41dcd0:	jmp    41dc5f <main@@Base+0x16b8f>
  41dcd2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41dcdc:	nop    DWORD PTR [rax+0x0]
  41dce0:	add    sil,0xff
  41dce4:	cmp    sil,0x3
  41dce8:	ja     41dd0f <main@@Base+0x16c3f>
  41dcea:	movzx  eax,sil
  41dcee:	lea    rcx,[rip+0x17e33]        # 435b28 <_IO_stdin_used@@Base+0xb28>
  41dcf5:	movsxd rax,DWORD PTR [rcx+rax*4]
  41dcf9:	add    rax,rcx
  41dcfc:	jmp    rax
  41dcfe:	lea    rsi,[rip+0x1b944]        # 439649 <_IO_stdin_used@@Base+0x4649>
  41dd05:	mov    edx,0x7
  41dd0a:	jmp    42ac80 <flatcc_json_printer_enum@@Base>
  41dd0f:	lea    rsi,[rip+0x1d2a4]        # 43afba <flatcc_builder_padding_base@@Base+0x178a>
  41dd16:	mov    edx,0x4
  41dd1b:	jmp    42ac80 <flatcc_json_printer_enum@@Base>
  41dd20:	lea    rsi,[rip+0x1b92a]        # 439651 <_IO_stdin_used@@Base+0x4651>
  41dd27:	mov    edx,0x17
  41dd2c:	jmp    42ac80 <flatcc_json_printer_enum@@Base>
  41dd31:	lea    rsi,[rip+0x1b931]        # 439669 <_IO_stdin_used@@Base+0x4669>
  41dd38:	mov    edx,0x8
  41dd3d:	jmp    42ac80 <flatcc_json_printer_enum@@Base>
  41dd42:	lea    rsi,[rip+0x1b929]        # 439672 <_IO_stdin_used@@Base+0x4672>
  41dd49:	mov    edx,0x3
  41dd4e:	jmp    42ac80 <flatcc_json_printer_enum@@Base>
  41dd53:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41dd5d:	nop    DWORD PTR [rax]
  41dd60:	mov    al,BYTE PTR [rsi+0xc]
  41dd63:	add    al,0xff
  41dd65:	cmp    al,0x3
  41dd67:	ja     41dd88 <main@@Base+0x16cb8>
  41dd69:	movzx  eax,al
  41dd6c:	lea    rcx,[rip+0x17dc5]        # 435b38 <_IO_stdin_used@@Base+0xb38>
  41dd73:	movsxd rax,DWORD PTR [rcx+rax*4]
  41dd77:	add    rax,rcx
  41dd7a:	jmp    rax
  41dd7c:	lea    rdx,[rip+0xffffffffffff402d]        # 411db0 <main@@Base+0xace0>
  41dd83:	jmp    4339b0 <flatcc_json_printer_union_table@@Base>
  41dd88:	ret    
  41dd89:	lea    rdx,[rip+0x1b0]        # 41df40 <main@@Base+0x16e70>
  41dd90:	jmp    4339b0 <flatcc_json_printer_union_table@@Base>
  41dd95:	lea    rdx,[rip+0x254]        # 41dff0 <main@@Base+0x16f20>
  41dd9c:	jmp    4339b0 <flatcc_json_printer_union_table@@Base>
  41dda1:	lea    rdx,[rip+0x258]        # 41e000 <main@@Base+0x16f30>
  41dda8:	jmp    4339b0 <flatcc_json_printer_union_table@@Base>
  41ddad:	nop    DWORD PTR [rax]
  41ddb0:	push   r14
  41ddb2:	push   rbx
  41ddb3:	push   rax
  41ddb4:	mov    r14,rsi
  41ddb7:	mov    rbx,rdi
  41ddba:	lea    r8,[rip+0x1b78f]        # 439550 <_IO_stdin_used@@Base+0x4550>
  41ddc1:	xor    esi,esi
  41ddc3:	xor    ecx,ecx
  41ddc5:	mov    r9d,0x1
  41ddcb:	mov    rdx,r14
  41ddce:	call   42c960 <flatcc_json_printer_int16_struct_field@@Base>
  41ddd3:	lea    r8,[rip+0x1b915]        # 4396ef <_IO_stdin_used@@Base+0x46ef>
  41ddda:	mov    esi,0x1
  41dddf:	mov    ecx,0x2
  41dde4:	mov    r9d,0x1
  41ddea:	mov    rdi,rbx
  41dded:	mov    rdx,r14
  41ddf0:	add    rsp,0x8
  41ddf4:	pop    rbx
  41ddf5:	pop    r14
  41ddf7:	jmp    42c880 <flatcc_json_printer_int8_struct_field@@Base>
  41ddfc:	nop    DWORD PTR [rax+0x0]
  41de00:	push   r14
  41de02:	push   rbx
  41de03:	push   rax
  41de04:	mov    r14,rsi
  41de07:	mov    rbx,rdi
  41de0a:	lea    rcx,[rip+0x1b9d5]        # 4397e6 <_IO_stdin_used@@Base+0x47e6>
  41de11:	xor    edx,edx
  41de13:	mov    r8d,0x2
  41de19:	call   42ae10 <flatcc_json_printer_string_field@@Base>
  41de1e:	lea    rcx,[rip+0x1b9c4]        # 4397e9 <_IO_stdin_used@@Base+0x47e9>
  41de25:	mov    edx,0x1
  41de2a:	mov    r8d,0x3
  41de30:	xor    r9d,r9d
  41de33:	mov    rdi,rbx
  41de36:	mov    rsi,r14
  41de39:	call   42b990 <flatcc_json_printer_int64_field@@Base>
  41de3e:	lea    rcx,[rip+0x1c2d1]        # 43a116 <flatcc_builder_padding_base@@Base+0x8e6>
  41de45:	mov    edx,0x2
  41de4a:	mov    r8d,0x5
  41de50:	xor    r9d,r9d
  41de53:	mov    rdi,rbx
  41de56:	mov    rsi,r14
  41de59:	add    rsp,0x8
  41de5d:	pop    rbx
  41de5e:	pop    r14
  41de60:	jmp    42b350 <flatcc_json_printer_uint16_field@@Base>
  41de65:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41de6f:	nop
  41de70:	push   r14
  41de72:	push   rbx
  41de73:	push   rax
  41de74:	mov    r14,rsi
  41de77:	mov    rbx,rdi
  41de7a:	lea    r8,[rip+0x1b965]        # 4397e6 <_IO_stdin_used@@Base+0x47e6>
  41de81:	xor    esi,esi
  41de83:	xor    ecx,ecx
  41de85:	mov    r9d,0x2
  41de8b:	mov    rdx,r14
  41de8e:	call   42c7e0 <flatcc_json_printer_uint32_struct_field@@Base>
  41de93:	lea    r8,[rip+0x1b953]        # 4397ed <_IO_stdin_used@@Base+0x47ed>
  41de9a:	mov    esi,0x1
  41de9f:	mov    ecx,0x4
  41dea4:	mov    r9d,0x8
  41deaa:	mov    rdi,rbx
  41dead:	mov    rdx,r14
  41deb0:	add    rsp,0x8
  41deb4:	pop    rbx
  41deb5:	pop    r14
  41deb7:	jmp    42c7e0 <flatcc_json_printer_uint32_struct_field@@Base>
  41debc:	nop    DWORD PTR [rax+0x0]
  41dec0:	ret    
  41dec1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41decb:	nop    DWORD PTR [rax+rax*1+0x0]
  41ded0:	push   r14
  41ded2:	push   rbx
  41ded3:	push   rax
  41ded4:	mov    r14,rsi
  41ded7:	mov    rbx,rdi
  41deda:	lea    rcx,[rip+0x1b918]        # 4397f9 <_IO_stdin_used@@Base+0x47f9>
  41dee1:	xor    edx,edx
  41dee3:	mov    r8d,0x4
  41dee9:	xor    r9d,r9d
  41deec:	call   42b070 <flatcc_json_printer_uint8_vector_base64_field@@Base>
  41def1:	lea    rcx,[rip+0x1b8fe]        # 4397f6 <_IO_stdin_used@@Base+0x47f6>
  41def8:	mov    edx,0x1
  41defd:	mov    r8d,0x7
  41df03:	mov    r9d,0x1
  41df09:	mov    rdi,rbx
  41df0c:	mov    rsi,r14
  41df0f:	call   42b070 <flatcc_json_printer_uint8_vector_base64_field@@Base>
  41df14:	lea    rcx,[rip+0x1b8e3]        # 4397fe <_IO_stdin_used@@Base+0x47fe>
  41df1b:	mov    edx,0x2
  41df20:	mov    r8d,0x6
  41df26:	xor    r9d,r9d
  41df29:	mov    rdi,rbx
  41df2c:	mov    rsi,r14
  41df2f:	add    rsp,0x8
  41df33:	pop    rbx
  41df34:	pop    r14
  41df36:	jmp    42b070 <flatcc_json_printer_uint8_vector_base64_field@@Base>
  41df3b:	nop    DWORD PTR [rax+rax*1+0x0]
  41df40:	push   r15
  41df42:	push   r14
  41df44:	push   rbx
  41df45:	sub    rsp,0x10
  41df49:	mov    r14,rsi
  41df4c:	mov    rbx,rdi
  41df4f:	lea    r15,[rip+0xfffffffffffffcaa]        # 41dc00 <main@@Base+0x16b30>
  41df56:	mov    QWORD PTR [rsp],r15
  41df5a:	lea    rcx,[rip+0x1b53d]        # 43949e <_IO_stdin_used@@Base+0x449e>
  41df61:	xor    edx,edx
  41df63:	mov    r8d,0x5
  41df69:	mov    r9d,0x2
  41df6f:	call   42c060 <flatcc_json_printer_int8_enum_field@@Base>
  41df74:	mov    QWORD PTR [rsp],r15
  41df78:	lea    rcx,[rip+0x1b6f7]        # 439676 <_IO_stdin_used@@Base+0x4676>
  41df7f:	mov    edx,0x1
  41df84:	mov    r8d,0x6
  41df8a:	mov    r9d,0x2
  41df90:	mov    rdi,rbx
  41df93:	mov    rsi,r14
  41df96:	call   42c060 <flatcc_json_printer_int8_enum_field@@Base>
  41df9b:	lea    rcx,[rip+0x1b6db]        # 43967d <_IO_stdin_used@@Base+0x467d>
  41dfa2:	mov    edx,0x2
  41dfa7:	mov    r8d,0x2
  41dfad:	mov    r9d,0x2
  41dfb3:	mov    rdi,rbx
  41dfb6:	mov    rsi,r14
  41dfb9:	call   42b240 <flatcc_json_printer_uint8_field@@Base>
  41dfbe:	lea    rcx,[rip+0x1b6bb]        # 439680 <_IO_stdin_used@@Base+0x4680>
  41dfc5:	mov    edx,0x3
  41dfca:	mov    r8d,0x3
  41dfd0:	mov    r9d,0x2
  41dfd6:	mov    rdi,rbx
  41dfd9:	mov    rsi,r14
  41dfdc:	add    rsp,0x10
  41dfe0:	pop    rbx
  41dfe1:	pop    r14
  41dfe3:	pop    r15
  41dfe5:	jmp    42b240 <flatcc_json_printer_uint8_field@@Base>
  41dfea:	nop    WORD PTR [rax+rax*1+0x0]
  41dff0:	ret    
  41dff1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41dffb:	nop    DWORD PTR [rax+rax*1+0x0]
  41e000:	push   r14
  41e002:	push   rbx
  41e003:	push   rax
  41e004:	mov    r14,rsi
  41e007:	mov    rbx,rdi
  41e00a:	lea    rcx,[rip+0x1b673]        # 439684 <_IO_stdin_used@@Base+0x4684>
  41e011:	lea    r9,[rip+0x68]        # 41e080 <main@@Base+0x16fb0>
  41e018:	xor    edx,edx
  41e01a:	mov    r8d,0x6
  41e020:	call   433400 <flatcc_json_printer_table_field@@Base>
  41e025:	lea    rcx,[rip+0x1b65f]        # 43968b <_IO_stdin_used@@Base+0x468b>
  41e02c:	lea    r9,[rip+0xcd]        # 41e100 <main@@Base+0x17030>
  41e033:	mov    edx,0x1
  41e038:	mov    r8d,0x5
  41e03e:	mov    rdi,rbx
  41e041:	mov    rsi,r14
  41e044:	call   433400 <flatcc_json_printer_table_field@@Base>
  41e049:	lea    rax,[rip+0xfffffffffffffd10]        # 41dd60 <main@@Base+0x16c90>
  41e050:	mov    QWORD PTR [rsp],rax
  41e054:	lea    rcx,[rip+0x1b636]        # 439691 <_IO_stdin_used@@Base+0x4691>
  41e05b:	lea    r9,[rip+0xfffffffffffffc7e]        # 41dce0 <main@@Base+0x16c10>
  41e062:	mov    edx,0x3
  41e067:	mov    r8d,0x7
  41e06d:	mov    rdi,rbx
  41e070:	mov    rsi,r14
  41e073:	call   433090 <flatcc_json_printer_union_vector_field@@Base>
  41e078:	add    rsp,0x8
  41e07c:	pop    rbx
  41e07d:	pop    r14
  41e07f:	ret    
  41e080:	push   r14
  41e082:	push   rbx
  41e083:	push   rax
  41e084:	mov    r14,rsi
  41e087:	mov    rbx,rdi
  41e08a:	lea    rcx,[rip+0x1b608]        # 439699 <_IO_stdin_used@@Base+0x4699>
  41e091:	lea    r9,[rip+0x148]        # 41e1e0 <main@@Base+0x17110>
  41e098:	xor    edx,edx
  41e09a:	mov    r8d,0x15
  41e0a0:	call   433400 <flatcc_json_printer_table_field@@Base>
  41e0a5:	lea    rcx,[rip+0x1b603]        # 4396af <_IO_stdin_used@@Base+0x46af>
  41e0ac:	lea    r9,[rip+0x24d]        # 41e300 <main@@Base+0x17230>
  41e0b3:	mov    edx,0x1
  41e0b8:	mov    r8d,0x16
  41e0be:	mov    rdi,rbx
  41e0c1:	mov    rsi,r14
  41e0c4:	call   433400 <flatcc_json_printer_table_field@@Base>
  41e0c9:	lea    rcx,[rip+0x1b5f6]        # 4396c6 <_IO_stdin_used@@Base+0x46c6>
  41e0d0:	lea    r9,[rip+0x279]        # 41e350 <main@@Base+0x17280>
  41e0d7:	mov    edx,0x2
  41e0dc:	mov    r8d,0x16
  41e0e2:	mov    rdi,rbx
  41e0e5:	mov    rsi,r14
  41e0e8:	add    rsp,0x8
  41e0ec:	pop    rbx
  41e0ed:	pop    r14
  41e0ef:	jmp    433400 <flatcc_json_printer_table_field@@Base>
  41e0f4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e0fe:	xchg   ax,ax
  41e100:	push   r15
  41e102:	push   r14
  41e104:	push   r12
  41e106:	push   rbx
  41e107:	push   rax
  41e108:	mov    r14,rsi
  41e10b:	mov    rbx,rdi
  41e10e:	lea    r12,[rip+0x32b]        # 41e440 <main@@Base+0x17370>
  41e115:	mov    QWORD PTR [rsp],r12
  41e119:	lea    rcx,[rip+0x1b63c]        # 43975c <_IO_stdin_used@@Base+0x475c>
  41e120:	lea    r15,[rip+0x279]        # 41e3a0 <main@@Base+0x172d0>
  41e127:	mov    edx,0x1
  41e12c:	mov    r8d,0xe
  41e132:	mov    r9,r15
  41e135:	call   433590 <flatcc_json_printer_union_field@@Base>
  41e13a:	mov    QWORD PTR [rsp],r12
  41e13e:	lea    rcx,[rip+0x1b626]        # 43976b <_IO_stdin_used@@Base+0x476b>
  41e145:	mov    edx,0x3
  41e14a:	mov    r8d,0xa
  41e150:	mov    rdi,rbx
  41e153:	mov    rsi,r14
  41e156:	mov    r9,r15
  41e159:	call   433590 <flatcc_json_printer_union_field@@Base>
  41e15e:	mov    QWORD PTR [rsp],r12
  41e162:	lea    rcx,[rip+0x1b60d]        # 439776 <_IO_stdin_used@@Base+0x4776>
  41e169:	mov    edx,0x5
  41e16e:	mov    r8d,0x9
  41e174:	mov    rdi,rbx
  41e177:	mov    rsi,r14
  41e17a:	mov    r9,r15
  41e17d:	call   433590 <flatcc_json_printer_union_field@@Base>
  41e182:	mov    QWORD PTR [rsp],r12
  41e186:	lea    rcx,[rip+0x1b5f3]        # 439780 <_IO_stdin_used@@Base+0x4780>
  41e18d:	mov    edx,0x7
  41e192:	mov    r8d,0x5
  41e198:	mov    rdi,rbx
  41e19b:	mov    rsi,r14
  41e19e:	mov    r9,r15
  41e1a1:	call   433590 <flatcc_json_printer_union_field@@Base>
  41e1a6:	mov    QWORD PTR [rsp],r12
  41e1aa:	lea    rcx,[rip+0x1b5d5]        # 439786 <_IO_stdin_used@@Base+0x4786>
  41e1b1:	mov    edx,0x9
  41e1b6:	mov    r8d,0xa
  41e1bc:	mov    rdi,rbx
  41e1bf:	mov    rsi,r14
  41e1c2:	mov    r9,r15
  41e1c5:	call   433090 <flatcc_json_printer_union_vector_field@@Base>
  41e1ca:	add    rsp,0x8
  41e1ce:	pop    rbx
  41e1cf:	pop    r12
  41e1d1:	pop    r14
  41e1d3:	pop    r15
  41e1d5:	ret    
  41e1d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e1e0:	push   r14
  41e1e2:	push   rbx
  41e1e3:	push   rax
  41e1e4:	mov    r14,rsi
  41e1e7:	mov    rbx,rdi
  41e1ea:	lea    rcx,[rip+0x1b4ec]        # 4396dd <_IO_stdin_used@@Base+0x46dd>
  41e1f1:	xor    edx,edx
  41e1f3:	mov    r8d,0x4
  41e1f9:	call   42ae10 <flatcc_json_printer_string_field@@Base>
  41e1fe:	lea    rcx,[rip+0x1b4dd]        # 4396e2 <_IO_stdin_used@@Base+0x46e2>
  41e205:	mov    edx,0x1
  41e20a:	mov    r8d,0x9
  41e210:	xor    r9d,r9d
  41e213:	mov    rdi,rbx
  41e216:	mov    rsi,r14
  41e219:	call   42b4f0 <flatcc_json_printer_uint32_field@@Base>
  41e21e:	lea    rcx,[rip+0x1b4c7]        # 4396ec <_IO_stdin_used@@Base+0x46ec>
  41e225:	mov    edx,0x2
  41e22a:	mov    r8d,0x4
  41e230:	mov    rdi,rbx
  41e233:	mov    rsi,r14
  41e236:	call   42ae10 <flatcc_json_printer_string_field@@Base>
  41e23b:	lea    rcx,[rip+0x1b4af]        # 4396f1 <_IO_stdin_used@@Base+0x46f1>
  41e242:	mov    edx,0x3
  41e247:	mov    r8d,0x8
  41e24d:	xor    r9d,r9d
  41e250:	mov    rdi,rbx
  41e253:	mov    rsi,r14
  41e256:	call   42b990 <flatcc_json_printer_int64_field@@Base>
  41e25b:	lea    rcx,[rip+0x1b498]        # 4396fa <_IO_stdin_used@@Base+0x46fa>
  41e262:	mov    edx,0x4
  41e267:	mov    r8d,0x4
  41e26d:	mov    rdi,rbx
  41e270:	mov    rsi,r14
  41e273:	call   42ae10 <flatcc_json_printer_string_field@@Base>
  41e278:	lea    rcx,[rip+0x1b480]        # 4396ff <_IO_stdin_used@@Base+0x46ff>
  41e27f:	mov    edx,0x5
  41e284:	mov    r8d,0x8
  41e28a:	xor    r9d,r9d
  41e28d:	mov    rdi,rbx
  41e290:	mov    rsi,r14
  41e293:	call   42b990 <flatcc_json_printer_int64_field@@Base>
  41e298:	lea    rcx,[rip+0x1b469]        # 439708 <_IO_stdin_used@@Base+0x4708>
  41e29f:	mov    edx,0x6
  41e2a4:	mov    r8d,0x9
  41e2aa:	xor    r9d,r9d
  41e2ad:	mov    rdi,rbx
  41e2b0:	mov    rsi,r14
  41e2b3:	call   42b4f0 <flatcc_json_printer_uint32_field@@Base>
  41e2b8:	lea    rcx,[rip+0x1b453]        # 439712 <_IO_stdin_used@@Base+0x4712>
  41e2bf:	mov    edx,0x7
  41e2c4:	mov    r8d,0x8
  41e2ca:	xor    r9d,r9d
  41e2cd:	mov    rdi,rbx
  41e2d0:	mov    rsi,r14
  41e2d3:	call   42b990 <flatcc_json_printer_int64_field@@Base>
  41e2d8:	lea    rcx,[rip+0x1b43c]        # 43971b <_IO_stdin_used@@Base+0x471b>
  41e2df:	mov    edx,0x8
  41e2e4:	mov    r8d,0x9
  41e2ea:	xor    r9d,r9d
  41e2ed:	mov    rdi,rbx
  41e2f0:	mov    rsi,r14
  41e2f3:	add    rsp,0x8
  41e2f7:	pop    rbx
  41e2f8:	pop    r14
  41e2fa:	jmp    42b4f0 <flatcc_json_printer_uint32_field@@Base>
  41e2ff:	nop
  41e300:	push   r14
  41e302:	push   rbx
  41e303:	push   rax
  41e304:	mov    r14,rsi
  41e307:	mov    rbx,rdi
  41e30a:	lea    rcx,[rip+0x1b414]        # 439725 <_IO_stdin_used@@Base+0x4725>
  41e311:	xor    edx,edx
  41e313:	mov    r8d,0xf
  41e319:	xor    r9d,r9d
  41e31c:	call   42b990 <flatcc_json_printer_int64_field@@Base>
  41e321:	lea    rcx,[rip+0x1b40d]        # 439735 <_IO_stdin_used@@Base+0x4735>
  41e328:	mov    edx,0x1
  41e32d:	mov    r8d,0x10
  41e333:	xor    r9d,r9d
  41e336:	mov    rdi,rbx
  41e339:	mov    rsi,r14
  41e33c:	add    rsp,0x8
  41e340:	pop    rbx
  41e341:	pop    r14
  41e343:	jmp    42b4f0 <flatcc_json_printer_uint32_field@@Base>
  41e348:	nop    DWORD PTR [rax+rax*1+0x0]
  41e350:	push   r14
  41e352:	push   rbx
  41e353:	push   rax
  41e354:	mov    r14,rsi
  41e357:	mov    rbx,rdi
  41e35a:	lea    rcx,[rip+0x1b3c4]        # 439725 <_IO_stdin_used@@Base+0x4725>
  41e361:	xor    edx,edx
  41e363:	mov    r8d,0xf
  41e369:	xor    r9d,r9d
  41e36c:	call   42b990 <flatcc_json_printer_int64_field@@Base>
  41e371:	lea    rcx,[rip+0x1b3ce]        # 439746 <_IO_stdin_used@@Base+0x4746>
  41e378:	mov    edx,0x1
  41e37d:	mov    r8d,0x15
  41e383:	xor    r9d,r9d
  41e386:	mov    rdi,rbx
  41e389:	mov    rsi,r14
  41e38c:	add    rsp,0x8
  41e390:	pop    rbx
  41e391:	pop    r14
  41e393:	jmp    42b4f0 <flatcc_json_printer_uint32_field@@Base>
  41e398:	nop    DWORD PTR [rax+rax*1+0x0]
  41e3a0:	add    sil,0x1
  41e3a4:	cmp    sil,0xc
  41e3a8:	ja     41e3cf <main@@Base+0x172ff>
  41e3aa:	movzx  eax,sil
  41e3ae:	lea    rcx,[rip+0x17793]        # 435b48 <_IO_stdin_used@@Base+0xb48>
  41e3b5:	movsxd rax,DWORD PTR [rcx+rax*4]
  41e3b9:	add    rax,rcx
  41e3bc:	jmp    rax
  41e3be:	lea    rsi,[rip+0x1b3ef]        # 4397b4 <_IO_stdin_used@@Base+0x47b4>
  41e3c5:	mov    edx,0x6
  41e3ca:	jmp    42ac80 <flatcc_json_printer_enum@@Base>
  41e3cf:	lea    rsi,[rip+0x1cbe4]        # 43afba <flatcc_builder_padding_base@@Base+0x178a>
  41e3d6:	mov    edx,0x4
  41e3db:	jmp    42ac80 <flatcc_json_printer_enum@@Base>
  41e3e0:	lea    rsi,[rip+0x1b3aa]        # 439791 <_IO_stdin_used@@Base+0x4791>
  41e3e7:	mov    edx,0x5
  41e3ec:	jmp    42ac80 <flatcc_json_printer_enum@@Base>
  41e3f1:	lea    rsi,[rip+0x1b39f]        # 439797 <_IO_stdin_used@@Base+0x4797>
  41e3f8:	mov    edx,0x8
  41e3fd:	jmp    42ac80 <flatcc_json_printer_enum@@Base>
  41e402:	lea    rsi,[rip+0x1b397]        # 4397a0 <_IO_stdin_used@@Base+0x47a0>
  41e409:	mov    edx,0x5
  41e40e:	jmp    42ac80 <flatcc_json_printer_enum@@Base>
  41e413:	lea    rsi,[rip+0x1b38c]        # 4397a6 <_IO_stdin_used@@Base+0x47a6>
  41e41a:	mov    edx,0x7
  41e41f:	jmp    42ac80 <flatcc_json_printer_enum@@Base>
  41e424:	lea    rsi,[rip+0x1b383]        # 4397ae <_IO_stdin_used@@Base+0x47ae>
  41e42b:	mov    edx,0x5
  41e430:	jmp    42ac80 <flatcc_json_printer_enum@@Base>
  41e435:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e43f:	nop
  41e440:	mov    al,BYTE PTR [rsi+0xc]
  41e443:	add    al,0x1
  41e445:	cmp    al,0xc
  41e447:	ja     41e46d <main@@Base+0x1739d>
  41e449:	movzx  eax,al
  41e44c:	lea    rcx,[rip+0x17729]        # 435b7c <_IO_stdin_used@@Base+0xb7c>
  41e453:	movsxd rax,DWORD PTR [rcx+rax*4]
  41e457:	add    rax,rcx
  41e45a:	jmp    rax
  41e45c:	jmp    433bd0 <flatcc_json_printer_union_string@@Base>
  41e461:	lea    rdx,[rip+0x68]        # 41e4d0 <main@@Base+0x17400>
  41e468:	jmp    433ae0 <flatcc_json_printer_union_struct@@Base>
  41e46d:	ret    
  41e46e:	lea    rdx,[rip+0x1b]        # 41e490 <main@@Base+0x173c0>
  41e475:	jmp    4339b0 <flatcc_json_printer_union_table@@Base>
  41e47a:	lea    rdx,[rip+0x2f]        # 41e4b0 <main@@Base+0x173e0>
  41e481:	jmp    433ae0 <flatcc_json_printer_union_struct@@Base>
  41e486:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e490:	lea    rcx,[rip+0x1b324]        # 4397bb <_IO_stdin_used@@Base+0x47bb>
  41e497:	xor    edx,edx
  41e499:	mov    r8d,0x13
  41e49f:	xor    r9d,r9d
  41e4a2:	jmp    42b8f0 <flatcc_json_printer_int32_field@@Base>
  41e4a7:	nop    WORD PTR [rax+rax*1+0x0]
  41e4b0:	mov    rax,rsi
  41e4b3:	lea    r8,[rip+0x1b315]        # 4397cf <_IO_stdin_used@@Base+0x47cf>
  41e4ba:	xor    esi,esi
  41e4bc:	xor    ecx,ecx
  41e4be:	mov    r9d,0xb
  41e4c4:	mov    rdx,rax
  41e4c7:	jmp    42c680 <flatcc_json_printer_uint16_struct_field@@Base>
  41e4cc:	nop    DWORD PTR [rax+0x0]
  41e4d0:	mov    rax,rsi
  41e4d3:	lea    r8,[rip+0x1b301]        # 4397db <_IO_stdin_used@@Base+0x47db>
  41e4da:	xor    esi,esi
  41e4dc:	xor    ecx,ecx
  41e4de:	mov    r9d,0xa
  41e4e4:	mov    rdx,rax
  41e4e7:	jmp    42cad0 <flatcc_json_printer_int32_struct_field@@Base>
  41e4ec:	nop    DWORD PTR [rax+0x0]
  41e4f0:	mov    al,BYTE PTR [rdi+0x10]
  41e4f3:	add    al,0xff
  41e4f5:	cmp    al,0x3
  41e4f7:	ja     41e50d <main@@Base+0x1743d>
  41e4f9:	movsx  rax,al
  41e4fd:	lea    rcx,[rip+0x2566c]        # 443b70 <flatcc_builder_padding_base@@Base+0xa340>
  41e504:	mov    rsi,QWORD PTR [rcx+rax*8]
  41e508:	jmp    424370 <flatcc_verify_union_table@@Base>
  41e50d:	xor    eax,eax
  41e50f:	ret    
  41e510:	push   rbx
  41e511:	mov    rbx,rdi
  41e514:	xor    esi,esi
  41e516:	xor    edx,edx
  41e518:	call   423c10 <flatcc_verify_string_field@@Base>
  41e51d:	test   eax,eax
  41e51f:	jne    41e53c <main@@Base+0x1746c>
  41e521:	mov    esi,0x1
  41e526:	mov    edx,0x8
  41e52b:	mov    ecx,0x8
  41e530:	mov    rdi,rbx
  41e533:	call   423bb0 <flatcc_verify_field@@Base>
  41e538:	test   eax,eax
  41e53a:	je     41e53e <main@@Base+0x1746e>
  41e53c:	pop    rbx
  41e53d:	ret    
  41e53e:	mov    esi,0x2
  41e543:	mov    edx,0x2
  41e548:	mov    ecx,0x2
  41e54d:	mov    rdi,rbx
  41e550:	pop    rbx
  41e551:	jmp    423bb0 <flatcc_verify_field@@Base>
  41e556:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e560:	xor    eax,eax
  41e562:	ret    
  41e563:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e56d:	nop    DWORD PTR [rax]
  41e570:	push   rbx
  41e571:	mov    rbx,rdi
  41e574:	xor    esi,esi
  41e576:	xor    edx,edx
  41e578:	mov    ecx,0x1
  41e57d:	mov    r8d,0x1
  41e583:	mov    r9d,0xffffffff
  41e589:	call   423cc0 <flatcc_verify_vector_field@@Base>
  41e58e:	test   eax,eax
  41e590:	jne    41e5b6 <main@@Base+0x174e6>
  41e592:	mov    esi,0x1
  41e597:	xor    edx,edx
  41e599:	mov    ecx,0x1
  41e59e:	mov    r8d,0x1
  41e5a4:	mov    r9d,0xffffffff
  41e5aa:	mov    rdi,rbx
  41e5ad:	call   423cc0 <flatcc_verify_vector_field@@Base>
  41e5b2:	test   eax,eax
  41e5b4:	je     41e5b8 <main@@Base+0x174e8>
  41e5b6:	pop    rbx
  41e5b7:	ret    
  41e5b8:	lea    r9,[rip+0xffffffffffff3ca1]        # 412260 <main@@Base+0xb190>
  41e5bf:	mov    esi,0x2
  41e5c4:	xor    edx,edx
  41e5c6:	xor    ecx,ecx
  41e5c8:	mov    r8d,0x1
  41e5ce:	mov    rdi,rbx
  41e5d1:	pop    rbx
  41e5d2:	jmp    424b20 <flatcc_verify_table_as_nested_root@@Base>
  41e5d7:	nop    WORD PTR [rax+rax*1+0x0]
  41e5e0:	push   rbx
  41e5e1:	mov    rbx,rdi
  41e5e4:	xor    esi,esi
  41e5e6:	mov    edx,0x1
  41e5eb:	mov    ecx,0x1
  41e5f0:	call   423bb0 <flatcc_verify_field@@Base>
  41e5f5:	test   eax,eax
  41e5f7:	jne    41e62f <main@@Base+0x1755f>
  41e5f9:	mov    esi,0x1
  41e5fe:	mov    edx,0x1
  41e603:	mov    ecx,0x1
  41e608:	mov    rdi,rbx
  41e60b:	call   423bb0 <flatcc_verify_field@@Base>
  41e610:	test   eax,eax
  41e612:	jne    41e62f <main@@Base+0x1755f>
  41e614:	mov    esi,0x2
  41e619:	mov    edx,0x1
  41e61e:	mov    ecx,0x1
  41e623:	mov    rdi,rbx
  41e626:	call   423bb0 <flatcc_verify_field@@Base>
  41e62b:	test   eax,eax
  41e62d:	je     41e631 <main@@Base+0x17561>
  41e62f:	pop    rbx
  41e630:	ret    
  41e631:	mov    esi,0x3
  41e636:	mov    edx,0x1
  41e63b:	mov    ecx,0x1
  41e640:	mov    rdi,rbx
  41e643:	pop    rbx
  41e644:	jmp    423bb0 <flatcc_verify_field@@Base>
  41e649:	nop    DWORD PTR [rax+0x0]
  41e650:	xor    eax,eax
  41e652:	ret    
  41e653:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e65d:	nop    DWORD PTR [rax]
  41e660:	push   rbx
  41e661:	mov    rbx,rdi
  41e664:	lea    rcx,[rip+0x45]        # 41e6b0 <main@@Base+0x175e0>
  41e66b:	xor    esi,esi
  41e66d:	xor    edx,edx
  41e66f:	call   423ef0 <flatcc_verify_table_field@@Base>
  41e674:	test   eax,eax
  41e676:	jne    41e692 <main@@Base+0x175c2>
  41e678:	lea    rcx,[rip+0x81]        # 41e700 <main@@Base+0x17630>
  41e67f:	mov    esi,0x1
  41e684:	xor    edx,edx
  41e686:	mov    rdi,rbx
  41e689:	call   423ef0 <flatcc_verify_table_field@@Base>
  41e68e:	test   eax,eax
  41e690:	je     41e694 <main@@Base+0x175c4>
  41e692:	pop    rbx
  41e693:	ret    
  41e694:	lea    rcx,[rip+0xfffffffffffffe55]        # 41e4f0 <main@@Base+0x17420>
  41e69b:	mov    esi,0x3
  41e6a0:	xor    edx,edx
  41e6a2:	mov    rdi,rbx
  41e6a5:	pop    rbx
  41e6a6:	jmp    424f40 <flatcc_verify_union_vector_field@@Base>
  41e6ab:	nop    DWORD PTR [rax+rax*1+0x0]
  41e6b0:	push   rbx
  41e6b1:	mov    rbx,rdi
  41e6b4:	lea    rcx,[rip+0xd5]        # 41e790 <main@@Base+0x176c0>
  41e6bb:	xor    esi,esi
  41e6bd:	xor    edx,edx
  41e6bf:	call   423ef0 <flatcc_verify_table_field@@Base>
  41e6c4:	test   eax,eax
  41e6c6:	jne    41e6e2 <main@@Base+0x17612>
  41e6c8:	lea    rcx,[rip+0x1a1]        # 41e870 <main@@Base+0x177a0>
  41e6cf:	mov    esi,0x1
  41e6d4:	xor    edx,edx
  41e6d6:	mov    rdi,rbx
  41e6d9:	call   423ef0 <flatcc_verify_table_field@@Base>
  41e6de:	test   eax,eax
  41e6e0:	je     41e6e4 <main@@Base+0x17614>
  41e6e2:	pop    rbx
  41e6e3:	ret    
  41e6e4:	lea    rcx,[rip+0x1c5]        # 41e8b0 <main@@Base+0x177e0>
  41e6eb:	mov    esi,0x2
  41e6f0:	xor    edx,edx
  41e6f2:	mov    rdi,rbx
  41e6f5:	pop    rbx
  41e6f6:	jmp    423ef0 <flatcc_verify_table_field@@Base>
  41e6fb:	nop    DWORD PTR [rax+rax*1+0x0]
  41e700:	push   rbx
  41e701:	mov    rbx,rdi
  41e704:	lea    rcx,[rip+0x1e5]        # 41e8f0 <main@@Base+0x17820>
  41e70b:	mov    esi,0x1
  41e710:	xor    edx,edx
  41e712:	call   424e00 <flatcc_verify_union_field@@Base>
  41e717:	test   eax,eax
  41e719:	jne    41e769 <main@@Base+0x17699>
  41e71b:	lea    rcx,[rip+0x1ce]        # 41e8f0 <main@@Base+0x17820>
  41e722:	mov    esi,0x3
  41e727:	xor    edx,edx
  41e729:	mov    rdi,rbx
  41e72c:	call   424e00 <flatcc_verify_union_field@@Base>
  41e731:	test   eax,eax
  41e733:	jne    41e769 <main@@Base+0x17699>
  41e735:	lea    rcx,[rip+0x1b4]        # 41e8f0 <main@@Base+0x17820>
  41e73c:	mov    esi,0x5
  41e741:	xor    edx,edx
  41e743:	mov    rdi,rbx
  41e746:	call   424e00 <flatcc_verify_union_field@@Base>
  41e74b:	test   eax,eax
  41e74d:	jne    41e769 <main@@Base+0x17699>
  41e74f:	lea    rcx,[rip+0x19a]        # 41e8f0 <main@@Base+0x17820>
  41e756:	mov    esi,0x7
  41e75b:	xor    edx,edx
  41e75d:	mov    rdi,rbx
  41e760:	call   424e00 <flatcc_verify_union_field@@Base>
  41e765:	test   eax,eax
  41e767:	je     41e76b <main@@Base+0x1769b>
  41e769:	pop    rbx
  41e76a:	ret    
  41e76b:	lea    rcx,[rip+0x17e]        # 41e8f0 <main@@Base+0x17820>
  41e772:	mov    esi,0x9
  41e777:	xor    edx,edx
  41e779:	mov    rdi,rbx
  41e77c:	pop    rbx
  41e77d:	jmp    424f40 <flatcc_verify_union_vector_field@@Base>
  41e782:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e78c:	nop    DWORD PTR [rax+0x0]
  41e790:	push   rbx
  41e791:	mov    rbx,rdi
  41e794:	xor    esi,esi
  41e796:	xor    edx,edx
  41e798:	call   423c10 <flatcc_verify_string_field@@Base>
  41e79d:	test   eax,eax
  41e79f:	jne    41e856 <main@@Base+0x17786>
  41e7a5:	mov    esi,0x1
  41e7aa:	mov    edx,0x4
  41e7af:	mov    ecx,0x4
  41e7b4:	mov    rdi,rbx
  41e7b7:	call   423bb0 <flatcc_verify_field@@Base>
  41e7bc:	test   eax,eax
  41e7be:	jne    41e856 <main@@Base+0x17786>
  41e7c4:	mov    esi,0x2
  41e7c9:	xor    edx,edx
  41e7cb:	mov    rdi,rbx
  41e7ce:	call   423c10 <flatcc_verify_string_field@@Base>
  41e7d3:	test   eax,eax
  41e7d5:	jne    41e856 <main@@Base+0x17786>
  41e7d7:	mov    esi,0x3
  41e7dc:	mov    edx,0x8
  41e7e1:	mov    ecx,0x8
  41e7e6:	mov    rdi,rbx
  41e7e9:	call   423bb0 <flatcc_verify_field@@Base>
  41e7ee:	test   eax,eax
  41e7f0:	jne    41e856 <main@@Base+0x17786>
  41e7f2:	mov    esi,0x4
  41e7f7:	xor    edx,edx
  41e7f9:	mov    rdi,rbx
  41e7fc:	call   423c10 <flatcc_verify_string_field@@Base>
  41e801:	test   eax,eax
  41e803:	jne    41e856 <main@@Base+0x17786>
  41e805:	mov    esi,0x5
  41e80a:	mov    edx,0x8
  41e80f:	mov    ecx,0x8
  41e814:	mov    rdi,rbx
  41e817:	call   423bb0 <flatcc_verify_field@@Base>
  41e81c:	test   eax,eax
  41e81e:	jne    41e856 <main@@Base+0x17786>
  41e820:	mov    esi,0x6
  41e825:	mov    edx,0x4
  41e82a:	mov    ecx,0x4
  41e82f:	mov    rdi,rbx
  41e832:	call   423bb0 <flatcc_verify_field@@Base>
  41e837:	test   eax,eax
  41e839:	jne    41e856 <main@@Base+0x17786>
  41e83b:	mov    esi,0x7
  41e840:	mov    edx,0x8
  41e845:	mov    ecx,0x8
  41e84a:	mov    rdi,rbx
  41e84d:	call   423bb0 <flatcc_verify_field@@Base>
  41e852:	test   eax,eax
  41e854:	je     41e858 <main@@Base+0x17788>
  41e856:	pop    rbx
  41e857:	ret    
  41e858:	mov    esi,0x8
  41e85d:	mov    edx,0x4
  41e862:	mov    ecx,0x4
  41e867:	mov    rdi,rbx
  41e86a:	pop    rbx
  41e86b:	jmp    423bb0 <flatcc_verify_field@@Base>
  41e870:	push   rbx
  41e871:	mov    rbx,rdi
  41e874:	xor    esi,esi
  41e876:	mov    edx,0x8
  41e87b:	mov    ecx,0x8
  41e880:	call   423bb0 <flatcc_verify_field@@Base>
  41e885:	test   eax,eax
  41e887:	je     41e88b <main@@Base+0x177bb>
  41e889:	pop    rbx
  41e88a:	ret    
  41e88b:	mov    esi,0x1
  41e890:	mov    edx,0x4
  41e895:	mov    ecx,0x4
  41e89a:	mov    rdi,rbx
  41e89d:	pop    rbx
  41e89e:	jmp    423bb0 <flatcc_verify_field@@Base>
  41e8a3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e8ad:	nop    DWORD PTR [rax]
  41e8b0:	push   rbx
  41e8b1:	mov    rbx,rdi
  41e8b4:	xor    esi,esi
  41e8b6:	mov    edx,0x8
  41e8bb:	mov    ecx,0x8
  41e8c0:	call   423bb0 <flatcc_verify_field@@Base>
  41e8c5:	test   eax,eax
  41e8c7:	je     41e8cb <main@@Base+0x177fb>
  41e8c9:	pop    rbx
  41e8ca:	ret    
  41e8cb:	mov    esi,0x1
  41e8d0:	mov    edx,0x4
  41e8d5:	mov    ecx,0x4
  41e8da:	mov    rdi,rbx
  41e8dd:	pop    rbx
  41e8de:	jmp    423bb0 <flatcc_verify_field@@Base>
  41e8e3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e8ed:	nop    DWORD PTR [rax]
  41e8f0:	mov    al,BYTE PTR [rdi+0x10]
  41e8f3:	add    al,0x1
  41e8f5:	cmp    al,0xc
  41e8f7:	ja     41e920 <main@@Base+0x17850>
  41e8f9:	movzx  eax,al
  41e8fc:	lea    rcx,[rip+0x172ad]        # 435bb0 <_IO_stdin_used@@Base+0xbb0>
  41e903:	movsxd rax,DWORD PTR [rcx+rax*4]
  41e907:	add    rax,rcx
  41e90a:	jmp    rax
  41e90c:	jmp    4244a0 <flatcc_verify_union_string@@Base>
  41e911:	mov    esi,0x4
  41e916:	mov    edx,0x4
  41e91b:	jmp    424460 <flatcc_verify_union_struct@@Base>
  41e920:	xor    eax,eax
  41e922:	ret    
  41e923:	lea    rsi,[rip+0x16]        # 41e940 <main@@Base+0x17870>
  41e92a:	jmp    424370 <flatcc_verify_union_table@@Base>
  41e92f:	mov    esi,0x2
  41e934:	mov    edx,0x2
  41e939:	jmp    424460 <flatcc_verify_union_struct@@Base>
  41e93e:	xchg   ax,ax
  41e940:	xor    esi,esi
  41e942:	mov    edx,0x4
  41e947:	mov    ecx,0x4
  41e94c:	jmp    423bb0 <flatcc_verify_field@@Base>
  41e951:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e95b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041e960 <flatcc_builder_default_alloc@@Base>:
  41e960:	push   rbp
  41e961:	push   r15
  41e963:	push   r14
  41e965:	push   r12
  41e967:	push   rbx
  41e968:	mov    rbx,rsi
  41e96b:	test   rdx,rdx
  41e96e:	je     41e999 <flatcc_builder_default_alloc@@Base+0x39>
  41e970:	mov    r14d,ecx
  41e973:	add    r8d,0xffffffff
  41e977:	cmp    r8d,0x6
  41e97b:	ja     41e9b7 <flatcc_builder_default_alloc@@Base+0x57>
  41e97d:	mov    eax,0x100
  41e982:	lea    rcx,[rip+0x1ae87]        # 439810 <_IO_stdin_used@@Base+0x4810>
  41e989:	movsxd rsi,DWORD PTR [rcx+r8*4]
  41e98d:	add    rsi,rcx
  41e990:	jmp    rsi
  41e992:	mov    eax,0x120
  41e997:	jmp    41e9d0 <flatcc_builder_default_alloc@@Base+0x70>
  41e999:	mov    rdi,QWORD PTR [rbx]
  41e99c:	xor    r15d,r15d
  41e99f:	test   rdi,rdi
  41e9a2:	je     41ea30 <flatcc_builder_default_alloc@@Base+0xd0>
  41e9a8:	call   406030 <free@plt>
  41e9ad:	vxorps xmm0,xmm0,xmm0
  41e9b1:	vmovups XMMWORD PTR [rbx],xmm0
  41e9b5:	jmp    41ea30 <flatcc_builder_default_alloc@@Base+0xd0>
  41e9b7:	mov    eax,0x20
  41e9bc:	jmp    41e9d0 <flatcc_builder_default_alloc@@Base+0x70>
  41e9be:	mov    rax,rdx
  41e9c1:	jmp    41e9d0 <flatcc_builder_default_alloc@@Base+0x70>
  41e9c3:	mov    eax,0x40
  41e9c8:	nop    DWORD PTR [rax+rax*1+0x0]
  41e9d0:	mov    rbp,rax
  41e9d3:	lea    rax,[rax+rax*1]
  41e9d7:	cmp    rbp,rdx
  41e9da:	jb     41e9d0 <flatcc_builder_default_alloc@@Base+0x70>
  41e9dc:	mov    rax,QWORD PTR [rbx+0x8]
  41e9e0:	xor    r15d,r15d
  41e9e3:	cmp    rax,rdx
  41e9e6:	jb     41e9f0 <flatcc_builder_default_alloc@@Base+0x90>
  41e9e8:	shr    rax,1
  41e9eb:	cmp    rax,rbp
  41e9ee:	jae    41ea30 <flatcc_builder_default_alloc@@Base+0xd0>
  41e9f0:	mov    rdi,QWORD PTR [rbx]
  41e9f3:	mov    rsi,rbp
  41e9f6:	call   406100 <realloc@plt>
  41e9fb:	test   rax,rax
  41e9fe:	je     41ea2a <flatcc_builder_default_alloc@@Base+0xca>
  41ea00:	mov    r12,rax
  41ea03:	test   r14d,r14d
  41ea06:	je     41ea21 <flatcc_builder_default_alloc@@Base+0xc1>
  41ea08:	mov    rax,QWORD PTR [rbx+0x8]
  41ea0c:	mov    rdx,rbp
  41ea0f:	sub    rdx,rax
  41ea12:	jbe    41ea21 <flatcc_builder_default_alloc@@Base+0xc1>
  41ea14:	mov    rdi,r12
  41ea17:	add    rdi,rax
  41ea1a:	xor    esi,esi
  41ea1c:	call   406080 <memset@plt>
  41ea21:	mov    QWORD PTR [rbx],r12
  41ea24:	mov    QWORD PTR [rbx+0x8],rbp
  41ea28:	jmp    41ea30 <flatcc_builder_default_alloc@@Base+0xd0>
  41ea2a:	mov    r15d,0xffffffff
  41ea30:	mov    eax,r15d
  41ea33:	pop    rbx
  41ea34:	pop    r12
  41ea36:	pop    r14
  41ea38:	pop    r15
  41ea3a:	pop    rbp
  41ea3b:	ret    
  41ea3c:	nop    DWORD PTR [rax+0x0]

000000000041ea40 <flatcc_builder_flush_vtable_cache@@Base>:
  41ea40:	cmp    QWORD PTR [rdi+0xd8],0x0
  41ea48:	je     41ea75 <flatcc_builder_flush_vtable_cache@@Base+0x35>
  41ea4a:	push   rbx
  41ea4b:	mov    rbx,rdi
  41ea4e:	mov    rdi,QWORD PTR [rdi+0xa8]
  41ea55:	mov    rdx,QWORD PTR [rbx+0xb0]
  41ea5c:	xor    esi,esi
  41ea5e:	call   406080 <memset@plt>
  41ea63:	movabs rax,0x1000000000
  41ea6d:	mov    QWORD PTR [rbx+0xe0],rax
  41ea74:	pop    rbx
  41ea75:	ret    
  41ea76:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000041ea80 <flatcc_builder_custom_init@@Base>:
  41ea80:	vxorps xmm0,xmm0,xmm0
  41ea84:	vmovups YMMWORD PTR [rdi+0x160],ymm0
  41ea8c:	vmovups YMMWORD PTR [rdi+0x140],ymm0
  41ea94:	vmovups YMMWORD PTR [rdi+0x120],ymm0
  41ea9c:	vmovups YMMWORD PTR [rdi+0x100],ymm0
  41eaa4:	vmovups YMMWORD PTR [rdi+0xe0],ymm0
  41eaac:	vmovups YMMWORD PTR [rdi+0xc0],ymm0
  41eab4:	vmovups YMMWORD PTR [rdi+0xa0],ymm0
  41eabc:	vmovups YMMWORD PTR [rdi+0x80],ymm0
  41eac4:	vmovups YMMWORD PTR [rdi+0x60],ymm0
  41eac9:	vmovups YMMWORD PTR [rdi+0x40],ymm0
  41eace:	vmovups YMMWORD PTR [rdi+0x20],ymm0
  41ead3:	vmovups YMMWORD PTR [rdi],ymm0
  41ead7:	mov    QWORD PTR [rdi+0x180],0x0
  41eae2:	test   rsi,rsi
  41eae5:	je     41eb09 <flatcc_builder_custom_init@@Base+0x89>
  41eae7:	test   rcx,rcx
  41eaea:	jne    41eaf3 <flatcc_builder_custom_init@@Base+0x73>
  41eaec:	lea    rcx,[rip+0xfffffffffffffe6d]        # 41e960 <flatcc_builder_default_alloc@@Base>
  41eaf3:	mov    QWORD PTR [rdi+0x40],r8
  41eaf7:	mov    QWORD PTR [rdi+0x50],rcx
  41eafb:	mov    QWORD PTR [rdi+0x38],rdx
  41eaff:	mov    QWORD PTR [rdi+0x48],rsi
  41eb03:	xor    eax,eax
  41eb05:	vzeroupper 
  41eb08:	ret    
  41eb09:	mov    DWORD PTR [rdi+0x128],0x1
  41eb13:	lea    rdx,[rdi+0x130]
  41eb1a:	lea    rsi,[rip+0x4acf]        # 4235f0 <flatcc_emitter@@Base>
  41eb21:	test   rcx,rcx
  41eb24:	je     41eaec <flatcc_builder_custom_init@@Base+0x6c>
  41eb26:	jmp    41eaf3 <flatcc_builder_custom_init@@Base+0x73>
  41eb28:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041eb30 <flatcc_builder_init@@Base>:
  41eb30:	vxorps xmm0,xmm0,xmm0
  41eb34:	vmovups YMMWORD PTR [rdi+0x120],ymm0
  41eb3c:	vmovups YMMWORD PTR [rdi+0x40],ymm0
  41eb41:	vmovups YMMWORD PTR [rdi+0x20],ymm0
  41eb46:	vmovups YMMWORD PTR [rdi+0x160],ymm0
  41eb4e:	vmovups YMMWORD PTR [rdi+0x140],ymm0
  41eb56:	vmovups YMMWORD PTR [rdi+0x100],ymm0
  41eb5e:	vmovups YMMWORD PTR [rdi+0xe0],ymm0
  41eb66:	vmovups YMMWORD PTR [rdi+0xc0],ymm0
  41eb6e:	vmovups YMMWORD PTR [rdi+0xa0],ymm0
  41eb76:	vmovups YMMWORD PTR [rdi+0x80],ymm0
  41eb7e:	vmovups YMMWORD PTR [rdi+0x60],ymm0
  41eb83:	vmovups YMMWORD PTR [rdi],ymm0
  41eb87:	mov    QWORD PTR [rdi+0x180],0x0
  41eb92:	mov    DWORD PTR [rdi+0x128],0x1
  41eb9c:	lea    rax,[rdi+0x130]
  41eba3:	mov    QWORD PTR [rdi+0x40],0x0
  41ebab:	lea    rcx,[rip+0xfffffffffffffdae]        # 41e960 <flatcc_builder_default_alloc@@Base>
  41ebb2:	mov    QWORD PTR [rdi+0x50],rcx
  41ebb6:	mov    QWORD PTR [rdi+0x38],rax
  41ebba:	lea    rax,[rip+0x4a2f]        # 4235f0 <flatcc_emitter@@Base>
  41ebc1:	mov    QWORD PTR [rdi+0x48],rax
  41ebc5:	xor    eax,eax
  41ebc7:	vzeroupper 
  41ebca:	ret    
  41ebcb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041ebd0 <flatcc_builder_custom_reset@@Base>:
  41ebd0:	push   rbp
  41ebd1:	push   r15
  41ebd3:	push   r14
  41ebd5:	push   r12
  41ebd7:	push   rbx
  41ebd8:	mov    r15d,edx
  41ebdb:	mov    r14d,esi
  41ebde:	mov    r12,rdi
  41ebe1:	lea    rbp,[rdi+0x58]
  41ebe5:	xor    ebx,ebx
  41ebe7:	nop    WORD PTR [rax+rax*1+0x0]
  41ebf0:	mov    rdi,QWORD PTR [rbp+0x0]
  41ebf4:	test   rdi,rdi
  41ebf7:	je     41ec40 <flatcc_builder_custom_reset@@Base+0x70>
  41ebf9:	test   r15d,r15d
  41ebfc:	je     41ec2a <flatcc_builder_custom_reset@@Base+0x5a>
  41ebfe:	cmp    rbx,0x5
  41ec02:	je     41ec2a <flatcc_builder_custom_reset@@Base+0x5a>
  41ec04:	mov    rdi,QWORD PTR [r12+0x40]
  41ec09:	mov    edx,0x1
  41ec0e:	mov    ecx,0x1
  41ec13:	mov    rsi,rbp
  41ec16:	mov    r8d,ebx
  41ec19:	call   QWORD PTR [r12+0x50]
  41ec1e:	test   eax,eax
  41ec20:	jne    41ed00 <flatcc_builder_custom_reset@@Base+0x130>
  41ec26:	mov    rdi,QWORD PTR [rbp+0x0]
  41ec2a:	mov    rdx,QWORD PTR [rbp+0x8]
  41ec2e:	xor    esi,esi
  41ec30:	call   406080 <memset@plt>
  41ec35:	jmp    41ec4b <flatcc_builder_custom_reset@@Base+0x7b>
  41ec37:	nop    WORD PTR [rax+rax*1+0x0]
  41ec40:	cmp    QWORD PTR [rbp+0x8],0x0
  41ec45:	jne    41ed10 <flatcc_builder_custom_reset@@Base+0x140>
  41ec4b:	add    rbx,0x1
  41ec4f:	add    rbp,0x10
  41ec53:	cmp    rbx,0x8
  41ec57:	jb     41ebf0 <flatcc_builder_custom_reset@@Base+0x20>
  41ec59:	mov    DWORD PTR [r12+0xe0],0x0
  41ec65:	cmp    DWORD PTR [r12+0xe4],0x0
  41ec6e:	je     41ec7c <flatcc_builder_custom_reset@@Base+0xac>
  41ec70:	mov    DWORD PTR [r12+0xe4],0x10
  41ec7c:	mov    WORD PTR [r12+0xe8],0x0
  41ec87:	mov    QWORD PTR [r12+0xf0],0x0
  41ec93:	mov    QWORD PTR [r12+0x20],0x0
  41ec9c:	vxorps xmm0,xmm0,xmm0
  41eca0:	vmovups XMMWORD PTR [r12+0xfc],xmm0
  41ecaa:	mov    rax,QWORD PTR [r12+0x58]
  41ecaf:	mov    rcx,QWORD PTR [r12+0x68]
  41ecb4:	mov    QWORD PTR [r12+0x18],rcx
  41ecb9:	mov    rcx,QWORD PTR [r12+0x88]
  41ecc1:	mov    QWORD PTR [r12],rcx
  41ecc5:	mov    QWORD PTR [r12+0x8],rax
  41ecca:	mov    QWORD PTR [r12+0x30],0x0
  41ecd3:	test   r14d,r14d
  41ecd6:	je     41ece2 <flatcc_builder_custom_reset@@Base+0x112>
  41ecd8:	vmovups XMMWORD PTR [r12+0x118],xmm0
  41ece2:	xor    ebx,ebx
  41ece4:	cmp    DWORD PTR [r12+0x128],0x0
  41eced:	je     41ed05 <flatcc_builder_custom_reset@@Base+0x135>
  41ecef:	add    r12,0x130
  41ecf6:	mov    rdi,r12
  41ecf9:	call   423470 <flatcc_emitter_reset@@Base>
  41ecfe:	jmp    41ed05 <flatcc_builder_custom_reset@@Base+0x135>
  41ed00:	mov    ebx,0xffffffff
  41ed05:	mov    eax,ebx
  41ed07:	pop    rbx
  41ed08:	pop    r12
  41ed0a:	pop    r14
  41ed0c:	pop    r15
  41ed0e:	pop    rbp
  41ed0f:	ret    
  41ed10:	lea    rdi,[rip+0x1ad99]        # 439ab0 <flatcc_builder_padding_base@@Base+0x280>
  41ed17:	lea    rsi,[rip+0x1ada4]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  41ed1e:	lea    rcx,[rip+0x1adfd]        # 439b22 <flatcc_builder_padding_base@@Base+0x2f2>
  41ed25:	mov    edx,0x1b2
  41ed2a:	call   406070 <__assert_fail@plt>
  41ed2f:	nop

000000000041ed30 <flatcc_builder_reset@@Base>:
  41ed30:	push   rbx
  41ed31:	mov    rbx,rdi
  41ed34:	mov    rdi,QWORD PTR [rdi+0x58]
  41ed38:	mov    rdx,QWORD PTR [rbx+0x60]
  41ed3c:	test   rdi,rdi
  41ed3f:	je     41ed4a <flatcc_builder_reset@@Base+0x1a>
  41ed41:	xor    esi,esi
  41ed43:	call   406080 <memset@plt>
  41ed48:	jmp    41ed53 <flatcc_builder_reset@@Base+0x23>
  41ed4a:	test   rdx,rdx
  41ed4d:	jne    41eed0 <flatcc_builder_reset@@Base+0x1a0>
  41ed53:	mov    rdi,QWORD PTR [rbx+0x68]
  41ed57:	mov    rdx,QWORD PTR [rbx+0x70]
  41ed5b:	test   rdi,rdi
  41ed5e:	je     41ed69 <flatcc_builder_reset@@Base+0x39>
  41ed60:	xor    esi,esi
  41ed62:	call   406080 <memset@plt>
  41ed67:	jmp    41ed72 <flatcc_builder_reset@@Base+0x42>
  41ed69:	test   rdx,rdx
  41ed6c:	jne    41eed0 <flatcc_builder_reset@@Base+0x1a0>
  41ed72:	mov    rdi,QWORD PTR [rbx+0x78]
  41ed76:	mov    rdx,QWORD PTR [rbx+0x80]
  41ed7d:	test   rdi,rdi
  41ed80:	je     41ed8b <flatcc_builder_reset@@Base+0x5b>
  41ed82:	xor    esi,esi
  41ed84:	call   406080 <memset@plt>
  41ed89:	jmp    41ed94 <flatcc_builder_reset@@Base+0x64>
  41ed8b:	test   rdx,rdx
  41ed8e:	jne    41eed0 <flatcc_builder_reset@@Base+0x1a0>
  41ed94:	mov    rdi,QWORD PTR [rbx+0x88]
  41ed9b:	mov    rdx,QWORD PTR [rbx+0x90]
  41eda2:	test   rdi,rdi
  41eda5:	je     41edb0 <flatcc_builder_reset@@Base+0x80>
  41eda7:	xor    esi,esi
  41eda9:	call   406080 <memset@plt>
  41edae:	jmp    41edb9 <flatcc_builder_reset@@Base+0x89>
  41edb0:	test   rdx,rdx
  41edb3:	jne    41eed0 <flatcc_builder_reset@@Base+0x1a0>
  41edb9:	mov    rdi,QWORD PTR [rbx+0x98]
  41edc0:	mov    rdx,QWORD PTR [rbx+0xa0]
  41edc7:	test   rdi,rdi
  41edca:	je     41edd5 <flatcc_builder_reset@@Base+0xa5>
  41edcc:	xor    esi,esi
  41edce:	call   406080 <memset@plt>
  41edd3:	jmp    41edde <flatcc_builder_reset@@Base+0xae>
  41edd5:	test   rdx,rdx
  41edd8:	jne    41eed0 <flatcc_builder_reset@@Base+0x1a0>
  41edde:	mov    rdi,QWORD PTR [rbx+0xa8]
  41ede5:	mov    rdx,QWORD PTR [rbx+0xb0]
  41edec:	test   rdi,rdi
  41edef:	je     41edfa <flatcc_builder_reset@@Base+0xca>
  41edf1:	xor    esi,esi
  41edf3:	call   406080 <memset@plt>
  41edf8:	jmp    41ee03 <flatcc_builder_reset@@Base+0xd3>
  41edfa:	test   rdx,rdx
  41edfd:	jne    41eed0 <flatcc_builder_reset@@Base+0x1a0>
  41ee03:	mov    rdi,QWORD PTR [rbx+0xb8]
  41ee0a:	mov    rdx,QWORD PTR [rbx+0xc0]
  41ee11:	test   rdi,rdi
  41ee14:	je     41ee1f <flatcc_builder_reset@@Base+0xef>
  41ee16:	xor    esi,esi
  41ee18:	call   406080 <memset@plt>
  41ee1d:	jmp    41ee28 <flatcc_builder_reset@@Base+0xf8>
  41ee1f:	test   rdx,rdx
  41ee22:	jne    41eed0 <flatcc_builder_reset@@Base+0x1a0>
  41ee28:	mov    rdi,QWORD PTR [rbx+0xc8]
  41ee2f:	mov    rdx,QWORD PTR [rbx+0xd0]
  41ee36:	test   rdi,rdi
  41ee39:	je     41ee44 <flatcc_builder_reset@@Base+0x114>
  41ee3b:	xor    esi,esi
  41ee3d:	call   406080 <memset@plt>
  41ee42:	jmp    41ee4d <flatcc_builder_reset@@Base+0x11d>
  41ee44:	test   rdx,rdx
  41ee47:	jne    41eed0 <flatcc_builder_reset@@Base+0x1a0>
  41ee4d:	mov    DWORD PTR [rbx+0xe0],0x0
  41ee57:	cmp    DWORD PTR [rbx+0xe4],0x0
  41ee5e:	je     41ee6a <flatcc_builder_reset@@Base+0x13a>
  41ee60:	mov    DWORD PTR [rbx+0xe4],0x10
  41ee6a:	mov    WORD PTR [rbx+0xe8],0x0
  41ee73:	mov    QWORD PTR [rbx+0xf0],0x0
  41ee7e:	mov    QWORD PTR [rbx+0x20],0x0
  41ee86:	vxorps xmm0,xmm0,xmm0
  41ee8a:	vmovups XMMWORD PTR [rbx+0xfc],xmm0
  41ee92:	mov    rax,QWORD PTR [rbx+0x58]
  41ee96:	mov    rcx,QWORD PTR [rbx+0x68]
  41ee9a:	mov    QWORD PTR [rbx+0x18],rcx
  41ee9e:	mov    rcx,QWORD PTR [rbx+0x88]
  41eea5:	mov    QWORD PTR [rbx],rcx
  41eea8:	mov    QWORD PTR [rbx+0x8],rax
  41eeac:	mov    QWORD PTR [rbx+0x30],0x0
  41eeb4:	cmp    DWORD PTR [rbx+0x128],0x0
  41eebb:	je     41eecc <flatcc_builder_reset@@Base+0x19c>
  41eebd:	add    rbx,0x130
  41eec4:	mov    rdi,rbx
  41eec7:	call   423470 <flatcc_emitter_reset@@Base>
  41eecc:	xor    eax,eax
  41eece:	pop    rbx
  41eecf:	ret    
  41eed0:	lea    rdi,[rip+0x1abd9]        # 439ab0 <flatcc_builder_padding_base@@Base+0x280>
  41eed7:	lea    rsi,[rip+0x1abe4]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  41eede:	lea    rcx,[rip+0x1ac3d]        # 439b22 <flatcc_builder_padding_base@@Base+0x2f2>
  41eee5:	mov    edx,0x1b2
  41eeea:	call   406070 <__assert_fail@plt>
  41eeef:	nop

000000000041eef0 <flatcc_builder_clear@@Base>:
  41eef0:	push   rbx
  41eef1:	mov    rbx,rdi
  41eef4:	lea    rsi,[rdi+0x58]
  41eef8:	mov    rdi,QWORD PTR [rdi+0x40]
  41eefc:	xor    edx,edx
  41eefe:	xor    ecx,ecx
  41ef00:	xor    r8d,r8d
  41ef03:	call   QWORD PTR [rbx+0x50]
  41ef06:	lea    rsi,[rbx+0x68]
  41ef0a:	mov    rdi,QWORD PTR [rbx+0x40]
  41ef0e:	xor    edx,edx
  41ef10:	xor    ecx,ecx
  41ef12:	mov    r8d,0x1
  41ef18:	call   QWORD PTR [rbx+0x50]
  41ef1b:	lea    rsi,[rbx+0x78]
  41ef1f:	mov    rdi,QWORD PTR [rbx+0x40]
  41ef23:	xor    edx,edx
  41ef25:	xor    ecx,ecx
  41ef27:	mov    r8d,0x2
  41ef2d:	call   QWORD PTR [rbx+0x50]
  41ef30:	lea    rsi,[rbx+0x88]
  41ef37:	mov    rdi,QWORD PTR [rbx+0x40]
  41ef3b:	xor    edx,edx
  41ef3d:	xor    ecx,ecx
  41ef3f:	mov    r8d,0x3
  41ef45:	call   QWORD PTR [rbx+0x50]
  41ef48:	lea    rsi,[rbx+0x98]
  41ef4f:	mov    rdi,QWORD PTR [rbx+0x40]
  41ef53:	xor    edx,edx
  41ef55:	xor    ecx,ecx
  41ef57:	mov    r8d,0x4
  41ef5d:	call   QWORD PTR [rbx+0x50]
  41ef60:	lea    rsi,[rbx+0xa8]
  41ef67:	mov    rdi,QWORD PTR [rbx+0x40]
  41ef6b:	xor    edx,edx
  41ef6d:	xor    ecx,ecx
  41ef6f:	mov    r8d,0x5
  41ef75:	call   QWORD PTR [rbx+0x50]
  41ef78:	lea    rsi,[rbx+0xb8]
  41ef7f:	mov    rdi,QWORD PTR [rbx+0x40]
  41ef83:	xor    edx,edx
  41ef85:	xor    ecx,ecx
  41ef87:	mov    r8d,0x6
  41ef8d:	call   QWORD PTR [rbx+0x50]
  41ef90:	lea    rsi,[rbx+0xc8]
  41ef97:	mov    rdi,QWORD PTR [rbx+0x40]
  41ef9b:	xor    edx,edx
  41ef9d:	xor    ecx,ecx
  41ef9f:	mov    r8d,0x7
  41efa5:	call   QWORD PTR [rbx+0x50]
  41efa8:	cmp    DWORD PTR [rbx+0x128],0x0
  41efaf:	je     41efbd <flatcc_builder_clear@@Base+0xcd>
  41efb1:	lea    rdi,[rbx+0x130]
  41efb8:	call   423570 <flatcc_emitter_clear@@Base>
  41efbd:	vxorps xmm0,xmm0,xmm0
  41efc1:	vmovups YMMWORD PTR [rbx+0x160],ymm0
  41efc9:	vmovups YMMWORD PTR [rbx+0x140],ymm0
  41efd1:	vmovups YMMWORD PTR [rbx+0x120],ymm0
  41efd9:	vmovups YMMWORD PTR [rbx+0x100],ymm0
  41efe1:	vmovups YMMWORD PTR [rbx+0xe0],ymm0
  41efe9:	vmovups YMMWORD PTR [rbx+0xc0],ymm0
  41eff1:	vmovups YMMWORD PTR [rbx+0xa0],ymm0
  41eff9:	vmovups YMMWORD PTR [rbx+0x80],ymm0
  41f001:	vmovups YMMWORD PTR [rbx+0x60],ymm0
  41f006:	vmovups YMMWORD PTR [rbx+0x40],ymm0
  41f00b:	vmovups YMMWORD PTR [rbx+0x20],ymm0
  41f010:	vmovups YMMWORD PTR [rbx],ymm0
  41f014:	mov    QWORD PTR [rbx+0x180],0x0
  41f01f:	pop    rbx
  41f020:	vzeroupper 
  41f023:	ret    
  41f024:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f02e:	xchg   ax,ax

000000000041f030 <flatcc_builder_enter_user_frame_ptr@@Base>:
  41f030:	push   r15
  41f032:	push   r14
  41f034:	push   r12
  41f036:	push   rbx
  41f037:	push   rax
  41f038:	mov    r14,rsi
  41f03b:	mov    r15,rdi
  41f03e:	add    r14,0xf
  41f042:	and    r14,0xfffffffffffffff8
  41f046:	mov    rbx,QWORD PTR [rdi+0x180]
  41f04d:	lea    r12,[rdi+0xc8]
  41f054:	lea    rdx,[rbx+r14*1]
  41f058:	cmp    rdx,QWORD PTR [rdi+0xd0]
  41f05f:	jbe    41f078 <flatcc_builder_enter_user_frame_ptr@@Base+0x48>
  41f061:	mov    rdi,QWORD PTR [r15+0x40]
  41f065:	xor    ecx,ecx
  41f067:	mov    r8d,0x7
  41f06d:	mov    rsi,r12
  41f070:	call   QWORD PTR [r15+0x50]
  41f074:	test   eax,eax
  41f076:	jne    41f0c8 <flatcc_builder_enter_user_frame_ptr@@Base+0x98>
  41f078:	add    rbx,QWORD PTR [r12]
  41f07c:	je     41f0b7 <flatcc_builder_enter_user_frame_ptr@@Base+0x87>
  41f07e:	xor    esi,esi
  41f080:	mov    rdi,rbx
  41f083:	mov    rdx,r14
  41f086:	call   406080 <memset@plt>
  41f08b:	mov    rax,QWORD PTR [r15+0x178]
  41f092:	mov    QWORD PTR [rbx],rax
  41f095:	add    rbx,0x8
  41f099:	mov    rax,QWORD PTR [r15+0x180]
  41f0a0:	lea    rcx,[rax+0x8]
  41f0a4:	mov    QWORD PTR [r15+0x178],rcx
  41f0ab:	add    rax,r14
  41f0ae:	mov    QWORD PTR [r15+0x180],rax
  41f0b5:	jmp    41f0b9 <flatcc_builder_enter_user_frame_ptr@@Base+0x89>
  41f0b7:	xor    ebx,ebx
  41f0b9:	mov    rax,rbx
  41f0bc:	add    rsp,0x8
  41f0c0:	pop    rbx
  41f0c1:	pop    r12
  41f0c3:	pop    r14
  41f0c5:	pop    r15
  41f0c7:	ret    
  41f0c8:	lea    rdi,[rip+0x1bbb3]        # 43ac82 <flatcc_builder_padding_base@@Base+0x1452>
  41f0cf:	lea    rsi,[rip+0x1a9ec]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  41f0d6:	lea    rcx,[rip+0x1b9df]        # 43aabc <flatcc_builder_padding_base@@Base+0x128c>
  41f0dd:	mov    edx,0x134
  41f0e2:	call   406070 <__assert_fail@plt>
  41f0e7:	nop    WORD PTR [rax+rax*1+0x0]

000000000041f0f0 <flatcc_builder_enter_user_frame@@Base>:
  41f0f0:	push   r15
  41f0f2:	push   r14
  41f0f4:	push   r12
  41f0f6:	push   rbx
  41f0f7:	push   rax
  41f0f8:	mov    r14,rsi
  41f0fb:	mov    rbx,rdi
  41f0fe:	add    r14,0xf
  41f102:	and    r14,0xfffffffffffffff8
  41f106:	mov    r15,QWORD PTR [rdi+0x180]
  41f10d:	lea    r12,[rdi+0xc8]
  41f114:	lea    rdx,[r15+r14*1]
  41f118:	cmp    rdx,QWORD PTR [rdi+0xd0]
  41f11f:	jbe    41f137 <flatcc_builder_enter_user_frame@@Base+0x47>
  41f121:	mov    rdi,QWORD PTR [rbx+0x40]
  41f125:	xor    ecx,ecx
  41f127:	mov    r8d,0x7
  41f12d:	mov    rsi,r12
  41f130:	call   QWORD PTR [rbx+0x50]
  41f133:	test   eax,eax
  41f135:	jne    41f180 <flatcc_builder_enter_user_frame@@Base+0x90>
  41f137:	add    r15,QWORD PTR [r12]
  41f13b:	je     41f172 <flatcc_builder_enter_user_frame@@Base+0x82>
  41f13d:	xor    esi,esi
  41f13f:	mov    rdi,r15
  41f142:	mov    rdx,r14
  41f145:	call   406080 <memset@plt>
  41f14a:	mov    rax,QWORD PTR [rbx+0x178]
  41f151:	mov    QWORD PTR [r15],rax
  41f154:	mov    rcx,QWORD PTR [rbx+0x180]
  41f15b:	lea    rax,[rcx+0x8]
  41f15f:	mov    QWORD PTR [rbx+0x178],rax
  41f166:	add    rcx,r14
  41f169:	mov    QWORD PTR [rbx+0x180],rcx
  41f170:	jmp    41f174 <flatcc_builder_enter_user_frame@@Base+0x84>
  41f172:	xor    eax,eax
  41f174:	add    rsp,0x8
  41f178:	pop    rbx
  41f179:	pop    r12
  41f17b:	pop    r14
  41f17d:	pop    r15
  41f17f:	ret    
  41f180:	lea    rdi,[rip+0x1bafb]        # 43ac82 <flatcc_builder_padding_base@@Base+0x1452>
  41f187:	lea    rsi,[rip+0x1a934]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  41f18e:	lea    rcx,[rip+0x1b927]        # 43aabc <flatcc_builder_padding_base@@Base+0x128c>
  41f195:	mov    edx,0x134
  41f19a:	call   406070 <__assert_fail@plt>
  41f19f:	nop

000000000041f1a0 <flatcc_builder_exit_user_frame@@Base>:
  41f1a0:	mov    rax,QWORD PTR [rdi+0x178]
  41f1a7:	test   rax,rax
  41f1aa:	je     41f1cd <flatcc_builder_exit_user_frame@@Base+0x2d>
  41f1ac:	mov    rcx,QWORD PTR [rdi+0xc8]
  41f1b3:	mov    edx,eax
  41f1b5:	add    rax,0xfffffffffffffff8
  41f1b9:	mov    QWORD PTR [rdi+0x180],rax
  41f1c0:	mov    rax,QWORD PTR [rcx+rdx*1-0x8]
  41f1c5:	mov    QWORD PTR [rdi+0x178],rax
  41f1cc:	ret    
  41f1cd:	push   rax
  41f1ce:	lea    rdi,[rip+0x1a98b]        # 439b60 <flatcc_builder_padding_base@@Base+0x330>
  41f1d5:	lea    rsi,[rip+0x1a8e6]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  41f1dc:	lea    rcx,[rip+0x1a996]        # 439b79 <flatcc_builder_padding_base@@Base+0x349>
  41f1e3:	mov    edx,0x21e
  41f1e8:	call   406070 <__assert_fail@plt>
  41f1ed:	nop    DWORD PTR [rax]

000000000041f1f0 <flatcc_builder_exit_user_frame_at@@Base>:
  41f1f0:	push   rax
  41f1f1:	cmp    QWORD PTR [rdi+0x178],rsi
  41f1f8:	jb     41f228 <flatcc_builder_exit_user_frame_at@@Base+0x38>
  41f1fa:	mov    QWORD PTR [rdi+0x178],rsi
  41f201:	test   rsi,rsi
  41f204:	je     41f247 <flatcc_builder_exit_user_frame_at@@Base+0x57>
  41f206:	mov    rax,QWORD PTR [rdi+0xc8]
  41f20d:	mov    ecx,esi
  41f20f:	add    rsi,0xfffffffffffffff8
  41f213:	mov    QWORD PTR [rdi+0x180],rsi
  41f21a:	mov    rax,QWORD PTR [rax+rcx*1-0x8]
  41f21f:	mov    QWORD PTR [rdi+0x178],rax
  41f226:	pop    rcx
  41f227:	ret    
  41f228:	lea    rdi,[rip+0x1a984]        # 439bb3 <flatcc_builder_padding_base@@Base+0x383>
  41f22f:	lea    rsi,[rip+0x1a88c]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  41f236:	lea    rcx,[rip+0x1a995]        # 439bd2 <flatcc_builder_padding_base@@Base+0x3a2>
  41f23d:	mov    edx,0x227
  41f242:	call   406070 <__assert_fail@plt>
  41f247:	lea    rdi,[rip+0x1a912]        # 439b60 <flatcc_builder_padding_base@@Base+0x330>
  41f24e:	lea    rsi,[rip+0x1a86d]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  41f255:	lea    rcx,[rip+0x1a91d]        # 439b79 <flatcc_builder_padding_base@@Base+0x349>
  41f25c:	mov    edx,0x21e
  41f261:	call   406070 <__assert_fail@plt>
  41f266:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000041f270 <flatcc_builder_get_current_user_frame@@Base>:
  41f270:	mov    rax,QWORD PTR [rdi+0x178]
  41f277:	ret    
  41f278:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041f280 <flatcc_builder_get_user_frame_ptr@@Base>:
  41f280:	mov    eax,esi
  41f282:	add    rax,QWORD PTR [rdi+0xc8]
  41f289:	ret    
  41f28a:	nop    WORD PTR [rax+rax*1+0x0]

000000000041f290 <flatcc_builder_embed_buffer@@Base>:
  41f290:	push   rbp
  41f291:	push   r15
  41f293:	push   r14
  41f295:	push   r12
  41f297:	push   rbx
  41f298:	sub    rsp,0xa0
  41f29f:	mov    ebx,r9d
  41f2a2:	mov    rbp,rcx
  41f2a5:	mov    r15,rdx
  41f2a8:	mov    eax,esi
  41f2aa:	mov    r12,rdi
  41f2ad:	mov    WORD PTR [rsp+0xa],r8w
  41f2b3:	xor    ecx,ecx
  41f2b5:	cmp    DWORD PTR [rdi+0x100],0x0
  41f2bc:	setne  cl
  41f2bf:	lea    rsi,[rsp+0xa]
  41f2c4:	mov    edx,eax
  41f2c6:	call   41f430 <flatcc_builder_embed_buffer@@Base+0x1a0>
  41f2cb:	and    ebx,0x2
  41f2ce:	movzx  eax,WORD PTR [rsp+0xa]
  41f2d3:	mov    r14d,DWORD PTR [r12+0xf0]
  41f2db:	lea    ecx,[rbp+rbx*2+0x0]
  41f2df:	mov    edx,r14d
  41f2e2:	sub    edx,ecx
  41f2e4:	add    eax,0xffffffff
  41f2e7:	and    eax,edx
  41f2e9:	lea    ecx,[rax+rbp*1]
  41f2ec:	mov    DWORD PTR [rsp+0xc],ecx
  41f2f0:	mov    QWORD PTR [rsp+0x10],0x0
  41f2f9:	mov    DWORD PTR [rsp+0x18],0x0
  41f301:	cmp    DWORD PTR [r12+0x100],0x0
  41f30a:	je     41f3de <flatcc_builder_embed_buffer@@Base+0x14e>
  41f310:	mov    QWORD PTR [rsp+0x10],0x4
  41f319:	lea    rcx,[rsp+0xc]
  41f31e:	mov    QWORD PTR [rsp+0x20],rcx
  41f323:	mov    QWORD PTR [rsp+0x28],0x4
  41f32c:	mov    DWORD PTR [rsp+0x18],0x1
  41f334:	mov    edx,0x1
  41f339:	mov    r8d,0x4
  41f33f:	test   rbp,rbp
  41f342:	je     41f363 <flatcc_builder_embed_buffer@@Base+0xd3>
  41f344:	add    r8,rbp
  41f347:	mov    QWORD PTR [rsp+0x10],r8
  41f34c:	mov    ecx,edx
  41f34e:	shl    rcx,0x4
  41f352:	mov    QWORD PTR [rsp+rcx*1+0x20],r15
  41f357:	mov    QWORD PTR [rsp+rcx*1+0x28],rbp
  41f35c:	add    edx,0x1
  41f35f:	mov    DWORD PTR [rsp+0x18],edx
  41f363:	test   eax,eax
  41f365:	je     41f38f <flatcc_builder_embed_buffer@@Base+0xff>
  41f367:	mov    eax,eax
  41f369:	add    r8,rax
  41f36c:	mov    QWORD PTR [rsp+0x10],r8
  41f371:	mov    ecx,edx
  41f373:	shl    rcx,0x4
  41f377:	lea    rsi,[rip+0x1a4b2]        # 439830 <flatcc_builder_padding_base@@Base>
  41f37e:	mov    QWORD PTR [rsp+rcx*1+0x20],rsi
  41f383:	mov    QWORD PTR [rsp+rcx*1+0x28],rax
  41f388:	add    edx,0x1
  41f38b:	mov    DWORD PTR [rsp+0x18],edx
  41f38f:	cmp    r8,0x11
  41f393:	setb   al
  41f396:	lea    rcx,[r8-0x10]
  41f39a:	shr    rcx,0x20
  41f39e:	sete   cl
  41f3a1:	test   r8d,r8d
  41f3a4:	jle    41f3f1 <flatcc_builder_embed_buffer@@Base+0x161>
  41f3a6:	or     al,cl
  41f3a8:	je     41f3f1 <flatcc_builder_embed_buffer@@Base+0x161>
  41f3aa:	sub    r14d,r8d
  41f3ad:	mov    rdi,QWORD PTR [r12+0x38]
  41f3b2:	lea    rsi,[rsp+0x20]
  41f3b7:	mov    ecx,r14d
  41f3ba:	call   QWORD PTR [r12+0x48]
  41f3bf:	test   eax,eax
  41f3c1:	jne    41f410 <flatcc_builder_embed_buffer@@Base+0x180>
  41f3c3:	mov    DWORD PTR [r12+0xf0],r14d
  41f3cb:	mov    eax,r14d
  41f3ce:	add    rsp,0xa0
  41f3d5:	pop    rbx
  41f3d6:	pop    r12
  41f3d8:	pop    r14
  41f3da:	pop    r15
  41f3dc:	pop    rbp
  41f3dd:	ret    
  41f3de:	xor    edx,edx
  41f3e0:	xor    r8d,r8d
  41f3e3:	test   rbp,rbp
  41f3e6:	jne    41f344 <flatcc_builder_embed_buffer@@Base+0xb4>
  41f3ec:	jmp    41f363 <flatcc_builder_embed_buffer@@Base+0xd3>
  41f3f1:	lea    rdi,[rip+0x1b88a]        # 43ac82 <flatcc_builder_padding_base@@Base+0x1452>
  41f3f8:	lea    rsi,[rip+0x1a6c3]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  41f3ff:	lea    rcx,[rip+0x1b73b]        # 43ab41 <flatcc_builder_padding_base@@Base+0x1311>
  41f406:	mov    edx,0x287
  41f40b:	call   406070 <__assert_fail@plt>
  41f410:	lea    rdi,[rip+0x1b86b]        # 43ac82 <flatcc_builder_padding_base@@Base+0x1452>
  41f417:	lea    rsi,[rip+0x1a6a4]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  41f41e:	lea    rcx,[rip+0x1b71c]        # 43ab41 <flatcc_builder_padding_base@@Base+0x1311>
  41f425:	mov    edx,0x28b
  41f42a:	call   406070 <__assert_fail@plt>
  41f42f:	nop
  41f430:	push   rbx
  41f431:	sub    rsp,0x90
  41f438:	mov    rax,rdi
  41f43b:	test   dx,dx
  41f43e:	jne    41f451 <flatcc_builder_embed_buffer@@Base+0x1c1>
  41f440:	mov    edi,DWORD PTR [rax+0xec]
  41f446:	test   di,di
  41f449:	mov    edx,0x1
  41f44e:	cmovne edx,edi
  41f451:	movzx  ebx,WORD PTR [rsi]
  41f454:	mov    edi,0x4
  41f459:	cmp    ebx,0x4
  41f45c:	cmovae edi,ebx
  41f45f:	jb     41f46c <flatcc_builder_embed_buffer@@Base+0x1dc>
  41f461:	cmp    di,dx
  41f464:	jb     41f46c <flatcc_builder_embed_buffer@@Base+0x1dc>
  41f466:	test   ecx,ecx
  41f468:	jne    41f4d4 <flatcc_builder_embed_buffer@@Base+0x244>
  41f46a:	jmp    41f479 <flatcc_builder_embed_buffer@@Base+0x1e9>
  41f46c:	cmp    di,dx
  41f46f:	cmovb  edi,edx
  41f472:	mov    WORD PTR [rsi],di
  41f475:	test   ecx,ecx
  41f477:	jne    41f4d4 <flatcc_builder_embed_buffer@@Base+0x244>
  41f479:	mov    ebx,DWORD PTR [rax+0xf4]
  41f47f:	movzx  r8d,dx
  41f483:	add    r8d,0xffffffff
  41f487:	and    r8d,ebx
  41f48a:	je     41f4d4 <flatcc_builder_embed_buffer@@Base+0x244>
  41f48c:	mov    QWORD PTR [rsp],r8
  41f490:	lea    rcx,[rip+0x1a399]        # 439830 <flatcc_builder_padding_base@@Base>
  41f497:	mov    QWORD PTR [rsp+0x10],rcx
  41f49c:	mov    QWORD PTR [rsp+0x18],r8
  41f4a1:	mov    DWORD PTR [rsp+0x8],0x1
  41f4a9:	lea    ecx,[r8+rbx*1]
  41f4ad:	mov    DWORD PTR [rax+0xf4],ecx
  41f4b3:	test   r8d,r8d
  41f4b6:	js     41f4dd <flatcc_builder_embed_buffer@@Base+0x24d>
  41f4b8:	mov    rdi,QWORD PTR [rax+0x38]
  41f4bc:	lea    rsi,[rsp+0x10]
  41f4c1:	mov    edx,0x1
  41f4c6:	mov    ecx,ebx
  41f4c8:	call   QWORD PTR [rax+0x48]
  41f4cb:	test   eax,eax
  41f4cd:	jne    41f4fc <flatcc_builder_embed_buffer@@Base+0x26c>
  41f4cf:	cmp    ebx,0xffffffff
  41f4d2:	je     41f51b <flatcc_builder_embed_buffer@@Base+0x28b>
  41f4d4:	add    rsp,0x90
  41f4db:	pop    rbx
  41f4dc:	ret    
  41f4dd:	lea    rdi,[rip+0x1b79e]        # 43ac82 <flatcc_builder_padding_base@@Base+0x1452>
  41f4e4:	lea    rsi,[rip+0x1a5d7]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  41f4eb:	lea    rcx,[rip+0x1b70b]        # 43abfd <flatcc_builder_padding_base@@Base+0x13cd>
  41f4f2:	mov    edx,0x2a1
  41f4f7:	call   406070 <__assert_fail@plt>
  41f4fc:	lea    rdi,[rip+0x1b77f]        # 43ac82 <flatcc_builder_padding_base@@Base+0x1452>
  41f503:	lea    rsi,[rip+0x1a5b8]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  41f50a:	lea    rcx,[rip+0x1b6ec]        # 43abfd <flatcc_builder_padding_base@@Base+0x13cd>
  41f511:	mov    edx,0x2a5
  41f516:	call   406070 <__assert_fail@plt>
  41f51b:	lea    rdi,[rip+0x1b760]        # 43ac82 <flatcc_builder_padding_base@@Base+0x1452>
  41f522:	lea    rsi,[rip+0x1a599]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  41f529:	lea    rcx,[rip+0x1b5cf]        # 43aaff <flatcc_builder_padding_base@@Base+0x12cf>
  41f530:	mov    edx,0x2be
  41f535:	call   406070 <__assert_fail@plt>
  41f53a:	nop    WORD PTR [rax+rax*1+0x0]

000000000041f540 <flatcc_builder_create_buffer@@Base>:
  41f540:	push   rbp
  41f541:	push   r15
  41f543:	push   r14
  41f545:	push   r13
  41f547:	push   r12
  41f549:	push   rbx
  41f54a:	sub    rsp,0xa8
  41f551:	mov    r12d,r9d
  41f554:	mov    r14d,ecx
  41f557:	mov    rbp,rsi
  41f55a:	mov    r13,rdi
  41f55d:	mov    WORD PTR [rsp+0xa],r8w
  41f563:	mov    DWORD PTR [rsp+0xc],0x0
  41f56b:	mov    r15d,r9d
  41f56e:	and    r15d,0x1
  41f572:	lea    rsi,[rsp+0xa]
  41f577:	mov    ecx,r15d
  41f57a:	call   41f430 <flatcc_builder_embed_buffer@@Base+0x1a0>
  41f57f:	movzx  eax,WORD PTR [rsp+0xa]
  41f584:	cmp    WORD PTR [r13+0xe8],ax
  41f58c:	jae    41f596 <flatcc_builder_create_buffer@@Base+0x56>
  41f58e:	mov    WORD PTR [r13+0xe8],ax
  41f596:	movzx  edx,ax
  41f599:	xor    eax,eax
  41f59b:	test   rbp,rbp
  41f59e:	je     41f5b8 <flatcc_builder_create_buffer@@Base+0x78>
  41f5a0:	mov    ecx,DWORD PTR [rbp+0x0]
  41f5a3:	mov    DWORD PTR [rsp+0xc],ecx
  41f5a7:	xor    edi,edi
  41f5a9:	test   ecx,ecx
  41f5ab:	setne  dil
  41f5af:	mov    rsi,rdi
  41f5b2:	shl    rsi,0x2
  41f5b6:	jmp    41f5bc <flatcc_builder_create_buffer@@Base+0x7c>
  41f5b8:	xor    edi,edi
  41f5ba:	xor    esi,esi
  41f5bc:	lea    ecx,[r12+r12*1]
  41f5c0:	and    ecx,0x4
  41f5c3:	mov    ebp,DWORD PTR [r13+0xf0]
  41f5ca:	xor    ecx,0xfffffffc
  41f5cd:	add    ecx,ebp
  41f5cf:	sub    ecx,esi
  41f5d1:	add    edx,0xffffffff
  41f5d4:	mov    QWORD PTR [rsp+0x18],0x0
  41f5dd:	mov    DWORD PTR [rsp+0x20],0x0
  41f5e5:	test   r12b,0x3
  41f5e9:	je     41f61c <flatcc_builder_create_buffer@@Base+0xdc>
  41f5eb:	mov    QWORD PTR [rsp+0x18],0x4
  41f5f4:	lea    rax,[rsp+0x10]
  41f5f9:	mov    QWORD PTR [rsp+0x28],rax
  41f5fe:	mov    QWORD PTR [rsp+0x30],0x4
  41f607:	mov    DWORD PTR [rsp+0x20],0x1
  41f60f:	mov    eax,0x1
  41f614:	mov    r8d,0x8
  41f61a:	jmp    41f622 <flatcc_builder_create_buffer@@Base+0xe2>
  41f61c:	mov    r8d,0x4
  41f622:	and    ecx,edx
  41f624:	mov    QWORD PTR [rsp+0x18],r8
  41f629:	mov    edx,eax
  41f62b:	shl    rdx,0x4
  41f62f:	lea    rbx,[rsp+0x14]
  41f634:	mov    QWORD PTR [rsp+rdx*1+0x28],rbx
  41f639:	mov    QWORD PTR [rsp+rdx*1+0x30],0x4
  41f642:	lea    edx,[rax+0x1]
  41f645:	mov    DWORD PTR [rsp+0x20],edx
  41f649:	test   dil,dil
  41f64c:	je     41f674 <flatcc_builder_create_buffer@@Base+0x134>
  41f64e:	add    r8,rsi
  41f651:	mov    QWORD PTR [rsp+0x18],r8
  41f656:	mov    edx,edx
  41f658:	shl    rdx,0x4
  41f65c:	lea    rdi,[rsp+0xc]
  41f661:	mov    QWORD PTR [rsp+rdx*1+0x28],rdi
  41f666:	mov    QWORD PTR [rsp+rdx*1+0x30],rsi
  41f66b:	or     eax,0x2
  41f66e:	mov    DWORD PTR [rsp+0x20],eax
  41f672:	mov    edx,eax
  41f674:	test   ecx,ecx
  41f676:	je     41f6a0 <flatcc_builder_create_buffer@@Base+0x160>
  41f678:	mov    eax,ecx
  41f67a:	add    r8,rax
  41f67d:	mov    QWORD PTR [rsp+0x18],r8
  41f682:	mov    ecx,edx
  41f684:	shl    rcx,0x4
  41f688:	lea    rsi,[rip+0x1a1a1]        # 439830 <flatcc_builder_padding_base@@Base>
  41f68f:	mov    QWORD PTR [rsp+rcx*1+0x28],rsi
  41f694:	mov    QWORD PTR [rsp+rcx*1+0x30],rax
  41f699:	add    edx,0x1
  41f69c:	mov    DWORD PTR [rsp+0x20],edx
  41f6a0:	xor    eax,eax
  41f6a2:	test   r12b,0x3
  41f6a6:	setne  al
  41f6a9:	sub    ebp,r8d
  41f6ac:	lea    eax,[rbp+rax*4+0x0]
  41f6b0:	mov    ecx,r15d
  41f6b3:	mov    ecx,DWORD PTR [r13+rcx*4+0xf4]
  41f6bb:	sub    ecx,eax
  41f6bd:	mov    DWORD PTR [rsp+0x10],ecx
  41f6c1:	sub    r14d,eax
  41f6c4:	mov    DWORD PTR [rsp+0x14],r14d
  41f6c9:	cmp    r8,0x11
  41f6cd:	setb   al
  41f6d0:	lea    rcx,[r8-0x10]
  41f6d4:	shr    rcx,0x20
  41f6d8:	sete   cl
  41f6db:	test   r8d,r8d
  41f6de:	jle    41f716 <flatcc_builder_create_buffer@@Base+0x1d6>
  41f6e0:	or     al,cl
  41f6e2:	je     41f716 <flatcc_builder_create_buffer@@Base+0x1d6>
  41f6e4:	mov    rdi,QWORD PTR [r13+0x38]
  41f6e8:	lea    rsi,[rsp+0x28]
  41f6ed:	mov    ecx,ebp
  41f6ef:	call   QWORD PTR [r13+0x48]
  41f6f3:	test   eax,eax
  41f6f5:	jne    41f735 <flatcc_builder_create_buffer@@Base+0x1f5>
  41f6f7:	mov    DWORD PTR [r13+0xf0],ebp
  41f6fe:	test   ebp,ebp
  41f700:	je     41f754 <flatcc_builder_create_buffer@@Base+0x214>
  41f702:	mov    eax,ebp
  41f704:	add    rsp,0xa8
  41f70b:	pop    rbx
  41f70c:	pop    r12
  41f70e:	pop    r13
  41f710:	pop    r14
  41f712:	pop    r15
  41f714:	pop    rbp
  41f715:	ret    
  41f716:	lea    rdi,[rip+0x1b565]        # 43ac82 <flatcc_builder_padding_base@@Base+0x1452>
  41f71d:	lea    rsi,[rip+0x1a39e]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  41f724:	lea    rcx,[rip+0x1b416]        # 43ab41 <flatcc_builder_padding_base@@Base+0x1311>
  41f72b:	mov    edx,0x287
  41f730:	call   406070 <__assert_fail@plt>
  41f735:	lea    rdi,[rip+0x1b546]        # 43ac82 <flatcc_builder_padding_base@@Base+0x1452>
  41f73c:	lea    rsi,[rip+0x1a37f]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  41f743:	lea    rcx,[rip+0x1b3f7]        # 43ab41 <flatcc_builder_padding_base@@Base+0x1311>
  41f74a:	mov    edx,0x28b
  41f74f:	call   406070 <__assert_fail@plt>
  41f754:	lea    rdi,[rip+0x1b527]        # 43ac82 <flatcc_builder_padding_base@@Base+0x1452>
  41f75b:	lea    rsi,[rip+0x1a360]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  41f762:	lea    rcx,[rip+0x1a4ae]        # 439c17 <flatcc_builder_padding_base@@Base+0x3e7>
  41f769:	mov    edx,0x304
  41f76e:	call   406070 <__assert_fail@plt>
  41f773:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f77d:	nop    DWORD PTR [rax]

000000000041f780 <flatcc_builder_create_struct@@Base>:
  41f780:	push   rbp
  41f781:	push   r14
  41f783:	push   rbx
  41f784:	sub    rsp,0x90
  41f78b:	test   cx,cx
  41f78e:	je     41f889 <flatcc_builder_create_struct@@Base+0x109>
  41f794:	mov    rax,rdx
  41f797:	mov    r14,rdi
  41f79a:	cmp    WORD PTR [rdi+0xe8],cx
  41f7a1:	jae    41f7ab <flatcc_builder_create_struct@@Base+0x2b>
  41f7a3:	mov    WORD PTR [r14+0xe8],cx
  41f7ab:	mov    ebp,DWORD PTR [r14+0xf0]
  41f7b2:	mov    edx,ebp
  41f7b4:	sub    edx,eax
  41f7b6:	movzx  ecx,cx
  41f7b9:	add    ecx,0xffffffff
  41f7bc:	and    ecx,edx
  41f7be:	mov    QWORD PTR [rsp],0x0
  41f7c6:	mov    DWORD PTR [rsp+0x8],0x0
  41f7ce:	test   rax,rax
  41f7d1:	je     41f862 <flatcc_builder_create_struct@@Base+0xe2>
  41f7d7:	mov    QWORD PTR [rsp],rax
  41f7db:	mov    QWORD PTR [rsp+0x10],rsi
  41f7e0:	mov    QWORD PTR [rsp+0x18],rax
  41f7e5:	mov    DWORD PTR [rsp+0x8],0x1
  41f7ed:	mov    edx,0x1
  41f7f2:	test   ecx,ecx
  41f7f4:	je     41f81b <flatcc_builder_create_struct@@Base+0x9b>
  41f7f6:	add    rax,rcx
  41f7f9:	mov    QWORD PTR [rsp],rax
  41f7fd:	mov    esi,edx
  41f7ff:	shl    rsi,0x4
  41f803:	lea    rdi,[rip+0x1a026]        # 439830 <flatcc_builder_padding_base@@Base>
  41f80a:	mov    QWORD PTR [rsp+rsi*1+0x10],rdi
  41f80f:	mov    QWORD PTR [rsp+rsi*1+0x18],rcx
  41f814:	add    edx,0x1
  41f817:	mov    DWORD PTR [rsp+0x8],edx
  41f81b:	cmp    rax,0x11
  41f81f:	setb   cl
  41f822:	lea    rsi,[rax-0x10]
  41f826:	shr    rsi,0x20
  41f82a:	sete   bl
  41f82d:	test   eax,eax
  41f82f:	jle    41f86a <flatcc_builder_create_struct@@Base+0xea>
  41f831:	or     cl,bl
  41f833:	je     41f86a <flatcc_builder_create_struct@@Base+0xea>
  41f835:	sub    ebp,eax
  41f837:	mov    rdi,QWORD PTR [r14+0x38]
  41f83b:	lea    rsi,[rsp+0x10]
  41f840:	mov    ecx,ebp
  41f842:	mov    r8,rax
  41f845:	call   QWORD PTR [r14+0x48]
  41f849:	test   eax,eax
  41f84b:	jne    41f8a8 <flatcc_builder_create_struct@@Base+0x128>
  41f84d:	mov    DWORD PTR [r14+0xf0],ebp
  41f854:	mov    eax,ebp
  41f856:	add    rsp,0x90
  41f85d:	pop    rbx
  41f85e:	pop    r14
  41f860:	pop    rbp
  41f861:	ret    
  41f862:	xor    edx,edx
  41f864:	test   ecx,ecx
  41f866:	jne    41f7f6 <flatcc_builder_create_struct@@Base+0x76>
  41f868:	jmp    41f81b <flatcc_builder_create_struct@@Base+0x9b>
  41f86a:	lea    rdi,[rip+0x1b411]        # 43ac82 <flatcc_builder_padding_base@@Base+0x1452>
  41f871:	lea    rsi,[rip+0x1a24a]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  41f878:	lea    rcx,[rip+0x1b2c2]        # 43ab41 <flatcc_builder_padding_base@@Base+0x1311>
  41f87f:	mov    edx,0x287
  41f884:	call   406070 <__assert_fail@plt>
  41f889:	lea    rdi,[rip+0x1a40a]        # 439c9a <flatcc_builder_padding_base@@Base+0x46a>
  41f890:	lea    rsi,[rip+0x1a22b]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  41f897:	lea    rcx,[rip+0x1a407]        # 439ca5 <flatcc_builder_padding_base@@Base+0x475>
  41f89e:	mov    edx,0x30f
  41f8a3:	call   406070 <__assert_fail@plt>
  41f8a8:	lea    rdi,[rip+0x1b3d3]        # 43ac82 <flatcc_builder_padding_base@@Base+0x1452>
  41f8af:	lea    rsi,[rip+0x1a20c]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  41f8b6:	lea    rcx,[rip+0x1b284]        # 43ab41 <flatcc_builder_padding_base@@Base+0x1311>
  41f8bd:	mov    edx,0x28b
  41f8c2:	call   406070 <__assert_fail@plt>
  41f8c7:	nop    WORD PTR [rax+rax*1+0x0]

000000000041f8d0 <flatcc_builder_start_buffer@@Base>:
  41f8d0:	push   rbp
  41f8d1:	push   r15
  41f8d3:	push   r14
  41f8d5:	push   rbx
  41f8d6:	push   rax
  41f8d7:	mov    r15d,ecx
  41f8da:	mov    ebp,edx
  41f8dc:	mov    r14,rsi
  41f8df:	mov    rbx,rdi
  41f8e2:	movzx  esi,WORD PTR [rdi+0xe8]
  41f8e9:	call   41f9b0 <flatcc_builder_start_buffer@@Base+0xe0>
  41f8ee:	mov    ecx,eax
  41f8f0:	mov    eax,0xffffffff
  41f8f5:	test   ecx,ecx
  41f8f7:	jne    41f99c <flatcc_builder_start_buffer@@Base+0xcc>
  41f8fd:	mov    WORD PTR [rbx+0xe8],0x1
  41f906:	movzx  eax,WORD PTR [rbx+0xec]
  41f90d:	mov    rcx,QWORD PTR [rbx+0x30]
  41f911:	mov    WORD PTR [rcx+0x22],ax
  41f915:	mov    WORD PTR [rbx+0xec],bp
  41f91c:	movzx  eax,WORD PTR [rbx+0x10c]
  41f923:	mov    rcx,QWORD PTR [rbx+0x30]
  41f927:	mov    WORD PTR [rcx+0x20],ax
  41f92b:	mov    WORD PTR [rbx+0x10c],r15w
  41f933:	mov    eax,DWORD PTR [rbx+0xf8]
  41f939:	mov    rcx,QWORD PTR [rbx+0x30]
  41f93d:	mov    DWORD PTR [rcx+0x14],eax
  41f940:	mov    eax,DWORD PTR [rbx+0x100]
  41f946:	mov    rcx,QWORD PTR [rbx+0x30]
  41f94a:	mov    DWORD PTR [rcx+0x1c],eax
  41f94d:	mov    eax,DWORD PTR [rbx+0xf0]
  41f953:	mov    DWORD PTR [rbx+0xf8],eax
  41f959:	mov    eax,DWORD PTR [rbx+0xfc]
  41f95f:	lea    ecx,[rax+0x1]
  41f962:	mov    DWORD PTR [rbx+0xfc],ecx
  41f968:	mov    DWORD PTR [rbx+0x100],eax
  41f96e:	mov    eax,DWORD PTR [rbx+0x110]
  41f974:	mov    rcx,QWORD PTR [rbx+0x30]
  41f978:	mov    DWORD PTR [rcx+0x10],eax
  41f97b:	test   r14,r14
  41f97e:	jne    41f987 <flatcc_builder_start_buffer@@Base+0xb7>
  41f980:	lea    r14,[rip+0x19ea9]        # 439830 <flatcc_builder_padding_base@@Base>
  41f987:	mov    eax,DWORD PTR [r14]
  41f98a:	mov    DWORD PTR [rbx+0x110],eax
  41f990:	mov    rax,QWORD PTR [rbx+0x30]
  41f994:	mov    WORD PTR [rax+0xe],0x1
  41f99a:	xor    eax,eax
  41f99c:	add    rsp,0x8
  41f9a0:	pop    rbx
  41f9a1:	pop    r14
  41f9a3:	pop    r15
  41f9a5:	pop    rbp
  41f9a6:	ret    
  41f9a7:	nop    WORD PTR [rax+rax*1+0x0]
  41f9b0:	push   rbp
  41f9b1:	push   r15
  41f9b3:	push   r14
  41f9b5:	push   rbx
  41f9b6:	push   rax
  41f9b7:	mov    r14d,esi
  41f9ba:	mov    rbx,rdi
  41f9bd:	movsxd rbp,DWORD PTR [rdi+0x104]
  41f9c4:	lea    eax,[rbp+0x1]
  41f9c7:	mov    DWORD PTR [rdi+0x104],eax
  41f9cd:	cmp    ebp,DWORD PTR [rdi+0x108]
  41f9d3:	jge    41f9e6 <flatcc_builder_start_buffer@@Base+0x116>
  41f9d5:	mov    rax,QWORD PTR [rbx+0x30]
  41f9d9:	add    rax,0x24
  41f9dd:	mov    QWORD PTR [rbx+0x30],rax
  41f9e1:	jmp    41fa7b <flatcc_builder_start_buffer@@Base+0x1ab>
  41f9e6:	mov    eax,DWORD PTR [rbx+0x120]
  41f9ec:	mov    r15d,0xffffffff
  41f9f2:	test   eax,eax
  41f9f4:	jle    41f9fe <flatcc_builder_start_buffer@@Base+0x12e>
  41f9f6:	cmp    ebp,eax
  41f9f8:	jge    41fab6 <flatcc_builder_start_buffer@@Base+0x1e6>
  41f9fe:	shl    rbp,0x2
  41fa02:	lea    rdx,[rbp*8+0x24]
  41fa0a:	add    rdx,rbp
  41fa0d:	cmp    rdx,QWORD PTR [rbx+0xa0]
  41fa14:	jbe    41fa34 <flatcc_builder_start_buffer@@Base+0x164>
  41fa16:	lea    rsi,[rbx+0x98]
  41fa1d:	mov    rdi,QWORD PTR [rbx+0x40]
  41fa21:	xor    ecx,ecx
  41fa23:	mov    r8d,0x4
  41fa29:	call   QWORD PTR [rbx+0x50]
  41fa2c:	test   eax,eax
  41fa2e:	jne    41fac4 <flatcc_builder_start_buffer@@Base+0x1f4>
  41fa34:	lea    rax,[rbp*8+0x0]
  41fa3c:	add    rax,rbp
  41fa3f:	add    rax,QWORD PTR [rbx+0x98]
  41fa46:	mov    QWORD PTR [rbx+0x30],rax
  41fa4a:	je     41fab6 <flatcc_builder_start_buffer@@Base+0x1e6>
  41fa4c:	movabs rdx,0xe38e38e38e38e38f
  41fa56:	mulx   rdx,rcx,QWORD PTR [rbx+0xa0]
  41fa5f:	shr    rdx,0x5
  41fa63:	mov    ecx,DWORD PTR [rbx+0x120]
  41fa69:	cmp    ecx,edx
  41fa6b:	mov    esi,edx
  41fa6d:	cmovle esi,ecx
  41fa70:	test   ecx,ecx
  41fa72:	cmovle esi,edx
  41fa75:	mov    DWORD PTR [rbx+0x108],esi
  41fa7b:	mov    ecx,DWORD PTR [rbx+0x20]
  41fa7e:	mov    DWORD PTR [rax+0x8],ecx
  41fa81:	movzx  edx,WORD PTR [rbx+0xea]
  41fa88:	mov    WORD PTR [rax+0xc],dx
  41fa8c:	mov    WORD PTR [rbx+0xea],r14w
  41fa94:	mov    edx,DWORD PTR [rbx+0x28]
  41fa97:	mov    DWORD PTR [rax],edx
  41fa99:	mov    DWORD PTR [rax+0x4],0xfffffffc
  41faa0:	lea    eax,[rcx+rdx*1]
  41faa3:	add    eax,0x7
  41faa6:	and    eax,0xfffffff8
  41faa9:	mov    DWORD PTR [rbx+0x28],eax
  41faac:	mov    DWORD PTR [rbx+0x20],0x0
  41fab3:	xor    r15d,r15d
  41fab6:	mov    eax,r15d
  41fab9:	add    rsp,0x8
  41fabd:	pop    rbx
  41fabe:	pop    r14
  41fac0:	pop    r15
  41fac2:	pop    rbp
  41fac3:	ret    
  41fac4:	lea    rdi,[rip+0x1b1b7]        # 43ac82 <flatcc_builder_padding_base@@Base+0x1452>
  41facb:	lea    rsi,[rip+0x19ff0]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  41fad2:	lea    rcx,[rip+0x1afe3]        # 43aabc <flatcc_builder_padding_base@@Base+0x128c>
  41fad9:	mov    edx,0x134
  41fade:	call   406070 <__assert_fail@plt>
  41fae3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41faed:	nop    DWORD PTR [rax]

000000000041faf0 <flatcc_builder_end_buffer@@Base>:
  41faf0:	push   rbp
  41faf1:	push   rbx
  41faf2:	push   rax
  41faf3:	mov    rcx,QWORD PTR [rdi+0x30]
  41faf7:	movzx  ecx,WORD PTR [rcx+0xe]
  41fafb:	cmp    ecx,0x1
  41fafe:	jne    41fbfe <flatcc_builder_end_buffer@@Base+0x10e>
  41fb04:	mov    eax,esi
  41fb06:	mov    rbx,rdi
  41fb09:	movzx  ecx,WORD PTR [rdi+0x10c]
  41fb10:	and    ecx,0x2
  41fb13:	xor    r9d,r9d
  41fb16:	cmp    DWORD PTR [rdi+0x100],0x0
  41fb1d:	setne  r9b
  41fb21:	or     r9d,ecx
  41fb24:	movzx  edi,WORD PTR [rdi+0xe8]
  41fb2b:	movzx  ecx,WORD PTR [rbx+0xec]
  41fb32:	cmp    di,cx
  41fb35:	jae    41fb40 <flatcc_builder_end_buffer@@Base+0x50>
  41fb37:	mov    WORD PTR [rbx+0xe8],cx
  41fb3e:	mov    edi,ecx
  41fb40:	lea    rsi,[rbx+0x110]
  41fb47:	movzx  edx,cx
  41fb4a:	movzx  r8d,di
  41fb4e:	mov    rdi,rbx
  41fb51:	mov    ecx,eax
  41fb53:	call   41f540 <flatcc_builder_create_buffer@@Base>
  41fb58:	mov    ebp,eax
  41fb5a:	test   eax,eax
  41fb5c:	je     41fbf5 <flatcc_builder_end_buffer@@Base+0x105>
  41fb62:	mov    rax,QWORD PTR [rbx+0x30]
  41fb66:	mov    ecx,DWORD PTR [rax+0x14]
  41fb69:	mov    DWORD PTR [rbx+0xf8],ecx
  41fb6f:	mov    ecx,DWORD PTR [rax+0x1c]
  41fb72:	mov    DWORD PTR [rbx+0x100],ecx
  41fb78:	mov    ecx,DWORD PTR [rax+0x10]
  41fb7b:	mov    DWORD PTR [rbx+0x110],ecx
  41fb81:	movzx  eax,WORD PTR [rax+0x20]
  41fb85:	mov    WORD PTR [rbx+0x10c],ax
  41fb8c:	mov    rdi,QWORD PTR [rbx+0x18]
  41fb90:	mov    edx,DWORD PTR [rbx+0x20]
  41fb93:	xor    esi,esi
  41fb95:	call   406080 <memset@plt>
  41fb9a:	mov    rax,QWORD PTR [rbx+0x30]
  41fb9e:	mov    ecx,DWORD PTR [rax+0x8]
  41fba1:	mov    DWORD PTR [rbx+0x20],ecx
  41fba4:	mov    ecx,DWORD PTR [rax]
  41fba6:	mov    DWORD PTR [rbx+0x28],ecx
  41fba9:	mov    edx,DWORD PTR [rax+0x4]
  41fbac:	mov    rsi,rcx
  41fbaf:	add    rsi,QWORD PTR [rbx+0x68]
  41fbb3:	mov    QWORD PTR [rbx+0x18],rsi
  41fbb7:	mov    esi,DWORD PTR [rbx+0x70]
  41fbba:	sub    esi,ecx
  41fbbc:	cmp    esi,edx
  41fbbe:	cmova  esi,edx
  41fbc1:	mov    DWORD PTR [rbx+0x24],esi
  41fbc4:	movzx  ecx,WORD PTR [rbx+0xea]
  41fbcb:	cmp    WORD PTR [rbx+0xe8],cx
  41fbd2:	jae    41fbdb <flatcc_builder_end_buffer@@Base+0xeb>
  41fbd4:	mov    WORD PTR [rbx+0xe8],cx
  41fbdb:	movzx  ecx,WORD PTR [rax+0xc]
  41fbdf:	mov    WORD PTR [rbx+0xea],cx
  41fbe6:	add    rax,0xffffffffffffffdc
  41fbea:	mov    QWORD PTR [rbx+0x30],rax
  41fbee:	add    DWORD PTR [rbx+0x104],0xffffffff
  41fbf5:	mov    eax,ebp
  41fbf7:	add    rsp,0x8
  41fbfb:	pop    rbx
  41fbfc:	pop    rbp
  41fbfd:	ret    
  41fbfe:	lea    rdi,[rip+0x1a106]        # 439d0b <flatcc_builder_padding_base@@Base+0x4db>
  41fc05:	lea    rsi,[rip+0x19eb6]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  41fc0c:	lea    rcx,[rip+0x1a124]        # 439d37 <flatcc_builder_padding_base@@Base+0x507>
  41fc13:	mov    edx,0x346
  41fc18:	call   406070 <__assert_fail@plt>
  41fc1d:	nop    DWORD PTR [rax]

000000000041fc20 <flatcc_builder_start_struct@@Base>:
  41fc20:	push   r15
  41fc22:	push   r14
  41fc24:	push   rbx
  41fc25:	mov    r14,rsi
  41fc28:	mov    rbx,rdi
  41fc2b:	mov    esi,edx
  41fc2d:	call   41f9b0 <flatcc_builder_start_buffer@@Base+0xe0>
  41fc32:	test   eax,eax
  41fc34:	je     41fc3d <flatcc_builder_start_struct@@Base+0x1d>
  41fc36:	xor    eax,eax
  41fc38:	jmp    41fcd2 <flatcc_builder_start_struct@@Base+0xb2>
  41fc3d:	mov    rdx,QWORD PTR [rbx+0x30]
  41fc41:	mov    WORD PTR [rdx+0xe],0x2
  41fc47:	mov    ecx,DWORD PTR [rbx+0x28]
  41fc4a:	mov    esi,DWORD PTR [rbx+0x70]
  41fc4d:	mov    rax,QWORD PTR [rbx+0x68]
  41fc51:	add    rax,rcx
  41fc54:	mov    QWORD PTR [rbx+0x18],rax
  41fc58:	sub    esi,ecx
  41fc5a:	cmp    esi,0xfffffffc
  41fc5d:	mov    edi,0xfffffffc
  41fc62:	cmovb  edi,esi
  41fc65:	mov    DWORD PTR [rbx+0x24],edi
  41fc68:	mov    DWORD PTR [rdx+0x4],0xfffffffc
  41fc6f:	mov    r15d,DWORD PTR [rbx+0x20]
  41fc73:	add    r14d,r15d
  41fc76:	mov    DWORD PTR [rbx+0x20],r14d
  41fc7a:	cmp    r14d,edi
  41fc7d:	jb     41fccf <flatcc_builder_start_struct@@Base+0xaf>
  41fc7f:	add    r14d,0x1
  41fc83:	lea    rsi,[rbx+0x68]
  41fc87:	mov    rdi,QWORD PTR [rbx+0x40]
  41fc8b:	add    r14,rcx
  41fc8e:	mov    ecx,0x1
  41fc93:	mov    r8d,0x1
  41fc99:	mov    rdx,r14
  41fc9c:	call   QWORD PTR [rbx+0x50]
  41fc9f:	test   eax,eax
  41fca1:	jne    41fc36 <flatcc_builder_start_struct@@Base+0x16>
  41fca3:	mov    ecx,DWORD PTR [rbx+0x28]
  41fca6:	mov    rax,rcx
  41fca9:	add    rax,QWORD PTR [rbx+0x68]
  41fcad:	mov    QWORD PTR [rbx+0x18],rax
  41fcb1:	mov    edx,DWORD PTR [rbx+0x70]
  41fcb4:	sub    edx,ecx
  41fcb6:	cmp    edx,0xfffffffc
  41fcb9:	mov    ecx,0xfffffffc
  41fcbe:	cmovb  ecx,edx
  41fcc1:	mov    DWORD PTR [rbx+0x24],ecx
  41fcc4:	mov    rcx,QWORD PTR [rbx+0x30]
  41fcc8:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  41fccf:	add    rax,r15
  41fcd2:	pop    rbx
  41fcd3:	pop    r14
  41fcd5:	pop    r15
  41fcd7:	ret    
  41fcd8:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041fce0 <flatcc_builder_struct_edit@@Base>:
  41fce0:	mov    rax,QWORD PTR [rdi+0x18]
  41fce4:	ret    
  41fce5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41fcef:	nop

000000000041fcf0 <flatcc_builder_end_struct@@Base>:
  41fcf0:	push   rbp
  41fcf1:	push   rbx
  41fcf2:	push   rax
  41fcf3:	mov    rax,QWORD PTR [rdi+0x30]
  41fcf7:	movzx  eax,WORD PTR [rax+0xe]
  41fcfb:	cmp    eax,0x2
  41fcfe:	jne    41fd92 <flatcc_builder_end_struct@@Base+0xa2>
  41fd04:	mov    rbx,rdi
  41fd07:	mov    rsi,QWORD PTR [rdi+0x18]
  41fd0b:	mov    edx,DWORD PTR [rdi+0x20]
  41fd0e:	movzx  ecx,WORD PTR [rdi+0xea]
  41fd15:	call   41f780 <flatcc_builder_create_struct@@Base>
  41fd1a:	mov    ebp,eax
  41fd1c:	test   eax,eax
  41fd1e:	je     41fd89 <flatcc_builder_end_struct@@Base+0x99>
  41fd20:	mov    rdi,QWORD PTR [rbx+0x18]
  41fd24:	mov    edx,DWORD PTR [rbx+0x20]
  41fd27:	xor    esi,esi
  41fd29:	call   406080 <memset@plt>
  41fd2e:	mov    rax,QWORD PTR [rbx+0x30]
  41fd32:	mov    ecx,DWORD PTR [rax+0x8]
  41fd35:	mov    DWORD PTR [rbx+0x20],ecx
  41fd38:	mov    ecx,DWORD PTR [rax]
  41fd3a:	mov    DWORD PTR [rbx+0x28],ecx
  41fd3d:	mov    edx,DWORD PTR [rax+0x4]
  41fd40:	mov    rsi,rcx
  41fd43:	add    rsi,QWORD PTR [rbx+0x68]
  41fd47:	mov    QWORD PTR [rbx+0x18],rsi
  41fd4b:	mov    esi,DWORD PTR [rbx+0x70]
  41fd4e:	sub    esi,ecx
  41fd50:	cmp    esi,edx
  41fd52:	cmova  esi,edx
  41fd55:	mov    DWORD PTR [rbx+0x24],esi
  41fd58:	movzx  ecx,WORD PTR [rbx+0xea]
  41fd5f:	cmp    WORD PTR [rbx+0xe8],cx
  41fd66:	jae    41fd6f <flatcc_builder_end_struct@@Base+0x7f>
  41fd68:	mov    WORD PTR [rbx+0xe8],cx
  41fd6f:	movzx  ecx,WORD PTR [rax+0xc]
  41fd73:	mov    WORD PTR [rbx+0xea],cx
  41fd7a:	add    rax,0xffffffffffffffdc
  41fd7e:	mov    QWORD PTR [rbx+0x30],rax
  41fd82:	add    DWORD PTR [rbx+0x104],0xffffffff
  41fd89:	mov    eax,ebp
  41fd8b:	add    rsp,0x8
  41fd8f:	pop    rbx
  41fd90:	pop    rbp
  41fd91:	ret    
  41fd92:	lea    rdi,[rip+0x19ff7]        # 439d90 <flatcc_builder_padding_base@@Base+0x560>
  41fd99:	lea    rsi,[rip+0x19d22]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  41fda0:	lea    rcx,[rip+0x1a015]        # 439dbc <flatcc_builder_padding_base@@Base+0x58c>
  41fda7:	mov    edx,0x368
  41fdac:	call   406070 <__assert_fail@plt>
  41fdb1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41fdbb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041fdc0 <flatcc_builder_extend_vector@@Base>:
  41fdc0:	push   r14
  41fdc2:	push   rbx
  41fdc3:	push   rax
  41fdc4:	mov    rax,QWORD PTR [rdi+0x30]
  41fdc8:	mov    ecx,DWORD PTR [rax+0x14]
  41fdcb:	add    ecx,esi
  41fdcd:	jb     41fe60 <flatcc_builder_extend_vector@@Base+0xa0>
  41fdd3:	cmp    ecx,DWORD PTR [rax+0x18]
  41fdd6:	ja     41fe60 <flatcc_builder_extend_vector@@Base+0xa0>
  41fddc:	mov    rbx,rdi
  41fddf:	mov    DWORD PTR [rax+0x14],ecx
  41fde2:	mov    rax,QWORD PTR [rdi+0x30]
  41fde6:	imul   esi,DWORD PTR [rax+0x10]
  41fdea:	mov    r14d,DWORD PTR [rdi+0x20]
  41fdee:	add    esi,r14d
  41fdf1:	mov    DWORD PTR [rdi+0x20],esi
  41fdf4:	cmp    esi,DWORD PTR [rdi+0x24]
  41fdf7:	jae    41fdff <flatcc_builder_extend_vector@@Base+0x3f>
  41fdf9:	mov    rax,QWORD PTR [rbx+0x18]
  41fdfd:	jmp    41fe55 <flatcc_builder_extend_vector@@Base+0x95>
  41fdff:	add    esi,0x1
  41fe02:	lea    rax,[rbx+0x68]
  41fe06:	mov    rdi,QWORD PTR [rbx+0x40]
  41fe0a:	mov    edx,DWORD PTR [rbx+0x28]
  41fe0d:	add    rdx,rsi
  41fe10:	mov    ecx,0x1
  41fe15:	mov    r8d,0x1
  41fe1b:	mov    rsi,rax
  41fe1e:	call   QWORD PTR [rbx+0x50]
  41fe21:	test   eax,eax
  41fe23:	je     41fe29 <flatcc_builder_extend_vector@@Base+0x69>
  41fe25:	xor    eax,eax
  41fe27:	jmp    41fe58 <flatcc_builder_extend_vector@@Base+0x98>
  41fe29:	mov    ecx,DWORD PTR [rbx+0x28]
  41fe2c:	mov    rax,rcx
  41fe2f:	add    rax,QWORD PTR [rbx+0x68]
  41fe33:	mov    QWORD PTR [rbx+0x18],rax
  41fe37:	mov    edx,DWORD PTR [rbx+0x70]
  41fe3a:	sub    edx,ecx
  41fe3c:	cmp    edx,0xfffffffc
  41fe3f:	mov    ecx,0xfffffffc
  41fe44:	cmovb  ecx,edx
  41fe47:	mov    DWORD PTR [rbx+0x24],ecx
  41fe4a:	mov    rcx,QWORD PTR [rbx+0x30]
  41fe4e:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  41fe55:	add    rax,r14
  41fe58:	add    rsp,0x8
  41fe5c:	pop    rbx
  41fe5d:	pop    r14
  41fe5f:	ret    
  41fe60:	lea    rdi,[rip+0x1ad24]        # 43ab8b <flatcc_builder_padding_base@@Base+0x135b>
  41fe67:	lea    rsi,[rip+0x19c54]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  41fe6e:	lea    rcx,[rip+0x1ad31]        # 43aba6 <flatcc_builder_padding_base@@Base+0x1376>
  41fe75:	mov    edx,0x37c
  41fe7a:	call   406070 <__assert_fail@plt>
  41fe7f:	nop

000000000041fe80 <flatcc_builder_vector_push@@Base>:
  41fe80:	push   r15
  41fe82:	push   r14
  41fe84:	push   r13
  41fe86:	push   r12
  41fe88:	push   rbx
  41fe89:	mov    rax,QWORD PTR [rdi+0x30]
  41fe8d:	movzx  ecx,WORD PTR [rax+0xe]
  41fe91:	cmp    ecx,0x4
  41fe94:	jne    41ff49 <flatcc_builder_vector_push@@Base+0xc9>
  41fe9a:	mov    ecx,DWORD PTR [rax+0x14]
  41fe9d:	cmp    ecx,DWORD PTR [rax+0x18]
  41fea0:	ja     41ff68 <flatcc_builder_vector_push@@Base+0xe8>
  41fea6:	mov    r14,rsi
  41fea9:	mov    rbx,rdi
  41feac:	add    ecx,0x1
  41feaf:	mov    DWORD PTR [rax+0x14],ecx
  41feb2:	mov    rax,QWORD PTR [rdi+0x30]
  41feb6:	mov    r15d,DWORD PTR [rax+0x10]
  41feba:	mov    r13d,DWORD PTR [rdi+0x20]
  41febe:	lea    eax,[r15+r13*1]
  41fec2:	mov    DWORD PTR [rdi+0x20],eax
  41fec5:	cmp    eax,DWORD PTR [rdi+0x24]
  41fec8:	jae    41fed5 <flatcc_builder_vector_push@@Base+0x55>
  41feca:	mov    r12,QWORD PTR [rbx+0x18]
  41fece:	add    r12,r13
  41fed1:	jne    41ff2e <flatcc_builder_vector_push@@Base+0xae>
  41fed3:	jmp    41fef8 <flatcc_builder_vector_push@@Base+0x78>
  41fed5:	add    eax,0x1
  41fed8:	lea    rsi,[rbx+0x68]
  41fedc:	mov    rdi,QWORD PTR [rbx+0x40]
  41fee0:	mov    edx,DWORD PTR [rbx+0x28]
  41fee3:	add    rdx,rax
  41fee6:	mov    ecx,0x1
  41feeb:	mov    r8d,0x1
  41fef1:	call   QWORD PTR [rbx+0x50]
  41fef4:	test   eax,eax
  41fef6:	je     41fefd <flatcc_builder_vector_push@@Base+0x7d>
  41fef8:	xor    r12d,r12d
  41fefb:	jmp    41ff3c <flatcc_builder_vector_push@@Base+0xbc>
  41fefd:	mov    eax,DWORD PTR [rbx+0x28]
  41ff00:	mov    r12,rax
  41ff03:	add    r12,QWORD PTR [rbx+0x68]
  41ff07:	mov    QWORD PTR [rbx+0x18],r12
  41ff0b:	mov    ecx,DWORD PTR [rbx+0x70]
  41ff0e:	sub    ecx,eax
  41ff10:	cmp    ecx,0xfffffffc
  41ff13:	mov    eax,0xfffffffc
  41ff18:	cmovb  eax,ecx
  41ff1b:	mov    DWORD PTR [rbx+0x24],eax
  41ff1e:	mov    rax,QWORD PTR [rbx+0x30]
  41ff22:	mov    DWORD PTR [rax+0x4],0xfffffffc
  41ff29:	add    r12,r13
  41ff2c:	je     41fef8 <flatcc_builder_vector_push@@Base+0x78>
  41ff2e:	mov    rdi,r12
  41ff31:	mov    rsi,r14
  41ff34:	mov    rdx,r15
  41ff37:	call   4060e0 <memcpy@plt>
  41ff3c:	mov    rax,r12
  41ff3f:	pop    rbx
  41ff40:	pop    r12
  41ff42:	pop    r13
  41ff44:	pop    r14
  41ff46:	pop    r15
  41ff48:	ret    
  41ff49:	lea    rdi,[rip+0x19eaf]        # 439dff <flatcc_builder_padding_base@@Base+0x5cf>
  41ff50:	lea    rsi,[rip+0x19b6b]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  41ff57:	lea    rcx,[rip+0x19ecd]        # 439e2b <flatcc_builder_padding_base@@Base+0x5fb>
  41ff5e:	mov    edx,0x38b
  41ff63:	call   406070 <__assert_fail@plt>
  41ff68:	lea    rdi,[rip+0x19eff]        # 439e6e <flatcc_builder_padding_base@@Base+0x63e>
  41ff6f:	lea    rsi,[rip+0x19b4c]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  41ff76:	lea    rcx,[rip+0x19eae]        # 439e2b <flatcc_builder_padding_base@@Base+0x5fb>
  41ff7d:	mov    edx,0x38c
  41ff82:	call   406070 <__assert_fail@plt>
  41ff87:	nop    WORD PTR [rax+rax*1+0x0]

000000000041ff90 <flatcc_builder_append_vector@@Base>:
  41ff90:	push   r15
  41ff92:	push   r14
  41ff94:	push   r13
  41ff96:	push   r12
  41ff98:	push   rbx
  41ff99:	mov    rax,QWORD PTR [rdi+0x30]
  41ff9d:	movzx  ecx,WORD PTR [rax+0xe]
  41ffa1:	cmp    ecx,0x4
  41ffa4:	jne    420082 <flatcc_builder_append_vector@@Base+0xf2>
  41ffaa:	mov    r15,rdx
  41ffad:	mov    ecx,DWORD PTR [rax+0x14]
  41ffb0:	add    ecx,r15d
  41ffb3:	jb     420063 <flatcc_builder_append_vector@@Base+0xd3>
  41ffb9:	cmp    ecx,DWORD PTR [rax+0x18]
  41ffbc:	ja     420063 <flatcc_builder_append_vector@@Base+0xd3>
  41ffc2:	mov    r14,rsi
  41ffc5:	mov    rbx,rdi
  41ffc8:	mov    DWORD PTR [rax+0x14],ecx
  41ffcb:	mov    rax,QWORD PTR [rdi+0x30]
  41ffcf:	imul   r15d,DWORD PTR [rax+0x10]
  41ffd4:	mov    r13d,DWORD PTR [rdi+0x20]
  41ffd8:	lea    eax,[r15+r13*1]
  41ffdc:	mov    DWORD PTR [rdi+0x20],eax
  41ffdf:	cmp    eax,DWORD PTR [rdi+0x24]
  41ffe2:	jae    41ffef <flatcc_builder_append_vector@@Base+0x5f>
  41ffe4:	mov    r12,QWORD PTR [rbx+0x18]
  41ffe8:	add    r12,r13
  41ffeb:	jne    420048 <flatcc_builder_append_vector@@Base+0xb8>
  41ffed:	jmp    420012 <flatcc_builder_append_vector@@Base+0x82>
  41ffef:	add    eax,0x1
  41fff2:	lea    rsi,[rbx+0x68]
  41fff6:	mov    rdi,QWORD PTR [rbx+0x40]
  41fffa:	mov    edx,DWORD PTR [rbx+0x28]
  41fffd:	add    rdx,rax
  420000:	mov    ecx,0x1
  420005:	mov    r8d,0x1
  42000b:	call   QWORD PTR [rbx+0x50]
  42000e:	test   eax,eax
  420010:	je     420017 <flatcc_builder_append_vector@@Base+0x87>
  420012:	xor    r12d,r12d
  420015:	jmp    420056 <flatcc_builder_append_vector@@Base+0xc6>
  420017:	mov    eax,DWORD PTR [rbx+0x28]
  42001a:	mov    r12,rax
  42001d:	add    r12,QWORD PTR [rbx+0x68]
  420021:	mov    QWORD PTR [rbx+0x18],r12
  420025:	mov    ecx,DWORD PTR [rbx+0x70]
  420028:	sub    ecx,eax
  42002a:	cmp    ecx,0xfffffffc
  42002d:	mov    eax,0xfffffffc
  420032:	cmovb  eax,ecx
  420035:	mov    DWORD PTR [rbx+0x24],eax
  420038:	mov    rax,QWORD PTR [rbx+0x30]
  42003c:	mov    DWORD PTR [rax+0x4],0xfffffffc
  420043:	add    r12,r13
  420046:	je     420012 <flatcc_builder_append_vector@@Base+0x82>
  420048:	mov    edx,r15d
  42004b:	mov    rdi,r12
  42004e:	mov    rsi,r14
  420051:	call   4060e0 <memcpy@plt>
  420056:	mov    rax,r12
  420059:	pop    rbx
  42005a:	pop    r12
  42005c:	pop    r13
  42005e:	pop    r14
  420060:	pop    r15
  420062:	ret    
  420063:	lea    rdi,[rip+0x1ab21]        # 43ab8b <flatcc_builder_padding_base@@Base+0x135b>
  42006a:	lea    rsi,[rip+0x19a51]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  420071:	lea    rcx,[rip+0x1ab2e]        # 43aba6 <flatcc_builder_padding_base@@Base+0x1376>
  420078:	mov    edx,0x37c
  42007d:	call   406070 <__assert_fail@plt>
  420082:	lea    rdi,[rip+0x19d76]        # 439dff <flatcc_builder_padding_base@@Base+0x5cf>
  420089:	lea    rsi,[rip+0x19a32]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  420090:	lea    rcx,[rip+0x19e14]        # 439eab <flatcc_builder_padding_base@@Base+0x67b>
  420097:	mov    edx,0x393
  42009c:	call   406070 <__assert_fail@plt>
  4200a1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4200ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004200b0 <flatcc_builder_extend_offset_vector@@Base>:
  4200b0:	push   r14
  4200b2:	push   rbx
  4200b3:	push   rax
  4200b4:	mov    rax,QWORD PTR [rdi+0x30]
  4200b8:	mov    ecx,DWORD PTR [rax+0x14]
  4200bb:	add    ecx,esi
  4200bd:	jb     420145 <flatcc_builder_extend_offset_vector@@Base+0x95>
  4200c3:	cmp    ecx,0x40000000
  4200c9:	jae    420145 <flatcc_builder_extend_offset_vector@@Base+0x95>
  4200cb:	mov    rbx,rdi
  4200ce:	mov    DWORD PTR [rax+0x14],ecx
  4200d1:	mov    r14d,DWORD PTR [rdi+0x20]
  4200d5:	lea    eax,[r14+rsi*4]
  4200d9:	mov    DWORD PTR [rdi+0x20],eax
  4200dc:	cmp    eax,DWORD PTR [rdi+0x24]
  4200df:	jae    4200e7 <flatcc_builder_extend_offset_vector@@Base+0x37>
  4200e1:	mov    rax,QWORD PTR [rbx+0x18]
  4200e5:	jmp    42013a <flatcc_builder_extend_offset_vector@@Base+0x8a>
  4200e7:	add    eax,0x1
  4200ea:	lea    rsi,[rbx+0x68]
  4200ee:	mov    rdi,QWORD PTR [rbx+0x40]
  4200f2:	mov    edx,DWORD PTR [rbx+0x28]
  4200f5:	add    rdx,rax
  4200f8:	mov    ecx,0x1
  4200fd:	mov    r8d,0x1
  420103:	call   QWORD PTR [rbx+0x50]
  420106:	test   eax,eax
  420108:	je     42010e <flatcc_builder_extend_offset_vector@@Base+0x5e>
  42010a:	xor    eax,eax
  42010c:	jmp    42013d <flatcc_builder_extend_offset_vector@@Base+0x8d>
  42010e:	mov    ecx,DWORD PTR [rbx+0x28]
  420111:	mov    rax,rcx
  420114:	add    rax,QWORD PTR [rbx+0x68]
  420118:	mov    QWORD PTR [rbx+0x18],rax
  42011c:	mov    edx,DWORD PTR [rbx+0x70]
  42011f:	sub    edx,ecx
  420121:	cmp    edx,0xfffffffc
  420124:	mov    ecx,0xfffffffc
  420129:	cmovb  ecx,edx
  42012c:	mov    DWORD PTR [rbx+0x24],ecx
  42012f:	mov    rcx,QWORD PTR [rbx+0x30]
  420133:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  42013a:	add    rax,r14
  42013d:	add    rsp,0x8
  420141:	pop    rbx
  420142:	pop    r14
  420144:	ret    
  420145:	lea    rdi,[rip+0x1aa3f]        # 43ab8b <flatcc_builder_padding_base@@Base+0x135b>
  42014c:	lea    rsi,[rip+0x1996f]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  420153:	lea    rcx,[rip+0x1aa4c]        # 43aba6 <flatcc_builder_padding_base@@Base+0x1376>
  42015a:	mov    edx,0x37c
  42015f:	call   406070 <__assert_fail@plt>
  420164:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42016e:	xchg   ax,ax

0000000000420170 <flatcc_builder_offset_vector_push@@Base>:
  420170:	push   rbp
  420171:	push   r14
  420173:	push   rbx
  420174:	mov    rax,QWORD PTR [rdi+0x30]
  420178:	movzx  ecx,WORD PTR [rax+0xe]
  42017c:	cmp    ecx,0x5
  42017f:	jne    420215 <flatcc_builder_offset_vector_push@@Base+0xa5>
  420185:	mov    ecx,DWORD PTR [rax+0x14]
  420188:	cmp    ecx,0x3fffffff
  42018e:	je     4201d8 <flatcc_builder_offset_vector_push@@Base+0x68>
  420190:	mov    r14d,esi
  420193:	mov    rbx,rdi
  420196:	add    ecx,0x1
  420199:	mov    DWORD PTR [rax+0x14],ecx
  42019c:	mov    ebp,DWORD PTR [rdi+0x20]
  42019f:	lea    eax,[rbp+0x4]
  4201a2:	mov    DWORD PTR [rdi+0x20],eax
  4201a5:	cmp    eax,DWORD PTR [rdi+0x24]
  4201a8:	jae    4201b5 <flatcc_builder_offset_vector_push@@Base+0x45>
  4201aa:	mov    rax,QWORD PTR [rbx+0x18]
  4201ae:	add    rax,rbp
  4201b1:	jne    42020d <flatcc_builder_offset_vector_push@@Base+0x9d>
  4201b3:	jmp    4201d8 <flatcc_builder_offset_vector_push@@Base+0x68>
  4201b5:	lea    eax,[rbp+0x5]
  4201b8:	lea    rsi,[rbx+0x68]
  4201bc:	mov    rdi,QWORD PTR [rbx+0x40]
  4201c0:	mov    edx,DWORD PTR [rbx+0x28]
  4201c3:	add    rdx,rax
  4201c6:	mov    ecx,0x1
  4201cb:	mov    r8d,0x1
  4201d1:	call   QWORD PTR [rbx+0x50]
  4201d4:	test   eax,eax
  4201d6:	je     4201dc <flatcc_builder_offset_vector_push@@Base+0x6c>
  4201d8:	xor    eax,eax
  4201da:	jmp    420210 <flatcc_builder_offset_vector_push@@Base+0xa0>
  4201dc:	mov    ecx,DWORD PTR [rbx+0x28]
  4201df:	mov    rax,rcx
  4201e2:	add    rax,QWORD PTR [rbx+0x68]
  4201e6:	mov    QWORD PTR [rbx+0x18],rax
  4201ea:	mov    edx,DWORD PTR [rbx+0x70]
  4201ed:	sub    edx,ecx
  4201ef:	cmp    edx,0xfffffffc
  4201f2:	mov    ecx,0xfffffffc
  4201f7:	cmovb  ecx,edx
  4201fa:	mov    DWORD PTR [rbx+0x24],ecx
  4201fd:	mov    rcx,QWORD PTR [rbx+0x30]
  420201:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  420208:	add    rax,rbp
  42020b:	je     4201d8 <flatcc_builder_offset_vector_push@@Base+0x68>
  42020d:	mov    DWORD PTR [rax],r14d
  420210:	pop    rbx
  420211:	pop    r14
  420213:	pop    rbp
  420214:	ret    
  420215:	lea    rdi,[rip+0x19cdc]        # 439ef8 <flatcc_builder_padding_base@@Base+0x6c8>
  42021c:	lea    rsi,[rip+0x1989f]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  420223:	lea    rcx,[rip+0x19d01]        # 439f2b <flatcc_builder_padding_base@@Base+0x6fb>
  42022a:	mov    edx,0x3a6
  42022f:	call   406070 <__assert_fail@plt>
  420234:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42023e:	xchg   ax,ax

0000000000420240 <flatcc_builder_append_offset_vector@@Base>:
  420240:	push   r15
  420242:	push   r14
  420244:	push   r13
  420246:	push   r12
  420248:	push   rbx
  420249:	mov    rax,QWORD PTR [rdi+0x30]
  42024d:	movzx  ecx,WORD PTR [rax+0xe]
  420251:	cmp    ecx,0x5
  420254:	jne    420331 <flatcc_builder_append_offset_vector@@Base+0xf1>
  42025a:	mov    r15,rdx
  42025d:	mov    ecx,DWORD PTR [rax+0x14]
  420260:	add    ecx,r15d
  420263:	jb     420312 <flatcc_builder_append_offset_vector@@Base+0xd2>
  420269:	cmp    ecx,0x40000000
  42026f:	jae    420312 <flatcc_builder_append_offset_vector@@Base+0xd2>
  420275:	mov    r14,rsi
  420278:	mov    rbx,rdi
  42027b:	mov    DWORD PTR [rax+0x14],ecx
  42027e:	mov    r13d,DWORD PTR [rdi+0x20]
  420282:	lea    eax,[r13+r15*4+0x0]
  420287:	mov    DWORD PTR [rdi+0x20],eax
  42028a:	cmp    eax,DWORD PTR [rdi+0x24]
  42028d:	jae    42029a <flatcc_builder_append_offset_vector@@Base+0x5a>
  42028f:	mov    r12,QWORD PTR [rbx+0x18]
  420293:	add    r12,r13
  420296:	jne    4202f3 <flatcc_builder_append_offset_vector@@Base+0xb3>
  420298:	jmp    4202bd <flatcc_builder_append_offset_vector@@Base+0x7d>
  42029a:	add    eax,0x1
  42029d:	lea    rsi,[rbx+0x68]
  4202a1:	mov    rdi,QWORD PTR [rbx+0x40]
  4202a5:	mov    edx,DWORD PTR [rbx+0x28]
  4202a8:	add    rdx,rax
  4202ab:	mov    ecx,0x1
  4202b0:	mov    r8d,0x1
  4202b6:	call   QWORD PTR [rbx+0x50]
  4202b9:	test   eax,eax
  4202bb:	je     4202c2 <flatcc_builder_append_offset_vector@@Base+0x82>
  4202bd:	xor    r12d,r12d
  4202c0:	jmp    420305 <flatcc_builder_append_offset_vector@@Base+0xc5>
  4202c2:	mov    eax,DWORD PTR [rbx+0x28]
  4202c5:	mov    r12,rax
  4202c8:	add    r12,QWORD PTR [rbx+0x68]
  4202cc:	mov    QWORD PTR [rbx+0x18],r12
  4202d0:	mov    ecx,DWORD PTR [rbx+0x70]
  4202d3:	sub    ecx,eax
  4202d5:	cmp    ecx,0xfffffffc
  4202d8:	mov    eax,0xfffffffc
  4202dd:	cmovb  eax,ecx
  4202e0:	mov    DWORD PTR [rbx+0x24],eax
  4202e3:	mov    rax,QWORD PTR [rbx+0x30]
  4202e7:	mov    DWORD PTR [rax+0x4],0xfffffffc
  4202ee:	add    r12,r13
  4202f1:	je     4202bd <flatcc_builder_append_offset_vector@@Base+0x7d>
  4202f3:	shl    r15d,0x2
  4202f7:	mov    edx,r15d
  4202fa:	mov    rdi,r12
  4202fd:	mov    rsi,r14
  420300:	call   4060e0 <memcpy@plt>
  420305:	mov    rax,r12
  420308:	pop    rbx
  420309:	pop    r12
  42030b:	pop    r13
  42030d:	pop    r14
  42030f:	pop    r15
  420311:	ret    
  420312:	lea    rdi,[rip+0x1a872]        # 43ab8b <flatcc_builder_padding_base@@Base+0x135b>
  420319:	lea    rsi,[rip+0x197a2]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  420320:	lea    rcx,[rip+0x1a87f]        # 43aba6 <flatcc_builder_padding_base@@Base+0x1376>
  420327:	mov    edx,0x37c
  42032c:	call   406070 <__assert_fail@plt>
  420331:	lea    rdi,[rip+0x19bc0]        # 439ef8 <flatcc_builder_padding_base@@Base+0x6c8>
  420338:	lea    rsi,[rip+0x19783]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  42033f:	lea    rcx,[rip+0x19c47]        # 439f8d <flatcc_builder_padding_base@@Base+0x75d>
  420346:	mov    edx,0x3b4
  42034b:	call   406070 <__assert_fail@plt>

0000000000420350 <flatcc_builder_extend_string@@Base>:
  420350:	push   r14
  420352:	push   rbx
  420353:	push   rax
  420354:	mov    rax,QWORD PTR [rdi+0x30]
  420358:	movzx  ecx,WORD PTR [rax+0xe]
  42035c:	cmp    ecx,0x6
  42035f:	jne    4203ec <flatcc_builder_extend_string@@Base+0x9c>
  420365:	mov    ecx,DWORD PTR [rax+0x14]
  420368:	add    ecx,esi
  42036a:	jb     42040b <flatcc_builder_extend_string@@Base+0xbb>
  420370:	mov    rbx,rdi
  420373:	mov    DWORD PTR [rax+0x14],ecx
  420376:	mov    r14d,DWORD PTR [rdi+0x20]
  42037a:	add    esi,r14d
  42037d:	mov    DWORD PTR [rdi+0x20],esi
  420380:	cmp    esi,DWORD PTR [rdi+0x24]
  420383:	jae    42038b <flatcc_builder_extend_string@@Base+0x3b>
  420385:	mov    rax,QWORD PTR [rbx+0x18]
  420389:	jmp    4203e1 <flatcc_builder_extend_string@@Base+0x91>
  42038b:	add    esi,0x1
  42038e:	lea    rax,[rbx+0x68]
  420392:	mov    rdi,QWORD PTR [rbx+0x40]
  420396:	mov    edx,DWORD PTR [rbx+0x28]
  420399:	add    rdx,rsi
  42039c:	mov    ecx,0x1
  4203a1:	mov    r8d,0x1
  4203a7:	mov    rsi,rax
  4203aa:	call   QWORD PTR [rbx+0x50]
  4203ad:	test   eax,eax
  4203af:	je     4203b5 <flatcc_builder_extend_string@@Base+0x65>
  4203b1:	xor    eax,eax
  4203b3:	jmp    4203e4 <flatcc_builder_extend_string@@Base+0x94>
  4203b5:	mov    ecx,DWORD PTR [rbx+0x28]
  4203b8:	mov    rax,rcx
  4203bb:	add    rax,QWORD PTR [rbx+0x68]
  4203bf:	mov    QWORD PTR [rbx+0x18],rax
  4203c3:	mov    edx,DWORD PTR [rbx+0x70]
  4203c6:	sub    edx,ecx
  4203c8:	cmp    edx,0xfffffffc
  4203cb:	mov    ecx,0xfffffffc
  4203d0:	cmovb  ecx,edx
  4203d3:	mov    DWORD PTR [rbx+0x24],ecx
  4203d6:	mov    rcx,QWORD PTR [rbx+0x30]
  4203da:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  4203e1:	add    rax,r14
  4203e4:	add    rsp,0x8
  4203e8:	pop    rbx
  4203e9:	pop    r14
  4203eb:	ret    
  4203ec:	lea    rdi,[rip+0x19c0e]        # 43a001 <flatcc_builder_padding_base@@Base+0x7d1>
  4203f3:	lea    rsi,[rip+0x196c8]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  4203fa:	lea    rcx,[rip+0x19c2c]        # 43a02d <flatcc_builder_padding_base@@Base+0x7fd>
  420401:	mov    edx,0x3bd
  420406:	call   406070 <__assert_fail@plt>
  42040b:	lea    rdi,[rip+0x1a779]        # 43ab8b <flatcc_builder_padding_base@@Base+0x135b>
  420412:	lea    rsi,[rip+0x196a9]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  420419:	lea    rcx,[rip+0x1a786]        # 43aba6 <flatcc_builder_padding_base@@Base+0x1376>
  420420:	mov    edx,0x37c
  420425:	call   406070 <__assert_fail@plt>
  42042a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000420430 <flatcc_builder_append_string@@Base>:
  420430:	push   r15
  420432:	push   r14
  420434:	push   r13
  420436:	push   r12
  420438:	push   rbx
  420439:	mov    rax,QWORD PTR [rdi+0x30]
  42043d:	movzx  ecx,WORD PTR [rax+0xe]
  420441:	cmp    ecx,0x6
  420444:	jne    4204f1 <flatcc_builder_append_string@@Base+0xc1>
  42044a:	mov    r15,rdx
  42044d:	mov    ecx,DWORD PTR [rax+0x14]
  420450:	add    ecx,r15d
  420453:	jb     420510 <flatcc_builder_append_string@@Base+0xe0>
  420459:	mov    r14,rsi
  42045c:	mov    rbx,rdi
  42045f:	mov    DWORD PTR [rax+0x14],ecx
  420462:	mov    r13d,DWORD PTR [rdi+0x20]
  420466:	lea    eax,[r15+r13*1]
  42046a:	mov    DWORD PTR [rdi+0x20],eax
  42046d:	cmp    eax,DWORD PTR [rdi+0x24]
  420470:	jae    42047d <flatcc_builder_append_string@@Base+0x4d>
  420472:	mov    r12,QWORD PTR [rbx+0x18]
  420476:	add    r12,r13
  420479:	jne    4204d6 <flatcc_builder_append_string@@Base+0xa6>
  42047b:	jmp    4204a0 <flatcc_builder_append_string@@Base+0x70>
  42047d:	add    eax,0x1
  420480:	lea    rsi,[rbx+0x68]
  420484:	mov    rdi,QWORD PTR [rbx+0x40]
  420488:	mov    edx,DWORD PTR [rbx+0x28]
  42048b:	add    rdx,rax
  42048e:	mov    ecx,0x1
  420493:	mov    r8d,0x1
  420499:	call   QWORD PTR [rbx+0x50]
  42049c:	test   eax,eax
  42049e:	je     4204a5 <flatcc_builder_append_string@@Base+0x75>
  4204a0:	xor    r12d,r12d
  4204a3:	jmp    4204e4 <flatcc_builder_append_string@@Base+0xb4>
  4204a5:	mov    eax,DWORD PTR [rbx+0x28]
  4204a8:	mov    r12,rax
  4204ab:	add    r12,QWORD PTR [rbx+0x68]
  4204af:	mov    QWORD PTR [rbx+0x18],r12
  4204b3:	mov    ecx,DWORD PTR [rbx+0x70]
  4204b6:	sub    ecx,eax
  4204b8:	cmp    ecx,0xfffffffc
  4204bb:	mov    eax,0xfffffffc
  4204c0:	cmovb  eax,ecx
  4204c3:	mov    DWORD PTR [rbx+0x24],eax
  4204c6:	mov    rax,QWORD PTR [rbx+0x30]
  4204ca:	mov    DWORD PTR [rax+0x4],0xfffffffc
  4204d1:	add    r12,r13
  4204d4:	je     4204a0 <flatcc_builder_append_string@@Base+0x70>
  4204d6:	mov    edx,r15d
  4204d9:	mov    rdi,r12
  4204dc:	mov    rsi,r14
  4204df:	call   4060e0 <memcpy@plt>
  4204e4:	mov    rax,r12
  4204e7:	pop    rbx
  4204e8:	pop    r12
  4204ea:	pop    r13
  4204ec:	pop    r14
  4204ee:	pop    r15
  4204f0:	ret    
  4204f1:	lea    rdi,[rip+0x19b09]        # 43a001 <flatcc_builder_padding_base@@Base+0x7d1>
  4204f8:	lea    rsi,[rip+0x195c3]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  4204ff:	lea    rcx,[rip+0x19b66]        # 43a06c <flatcc_builder_padding_base@@Base+0x83c>
  420506:	mov    edx,0x3c6
  42050b:	call   406070 <__assert_fail@plt>
  420510:	lea    rdi,[rip+0x1a674]        # 43ab8b <flatcc_builder_padding_base@@Base+0x135b>
  420517:	lea    rsi,[rip+0x195a4]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  42051e:	lea    rcx,[rip+0x1a681]        # 43aba6 <flatcc_builder_padding_base@@Base+0x1376>
  420525:	mov    edx,0x37c
  42052a:	call   406070 <__assert_fail@plt>
  42052f:	nop

0000000000420530 <flatcc_builder_append_string_str@@Base>:
  420530:	push   r14
  420532:	push   rbx
  420533:	push   rax
  420534:	mov    rbx,rsi
  420537:	mov    r14,rdi
  42053a:	mov    rdi,rsi
  42053d:	call   406060 <strlen@plt>
  420542:	mov    rdi,r14
  420545:	mov    rsi,rbx
  420548:	mov    rdx,rax
  42054b:	add    rsp,0x8
  42054f:	pop    rbx
  420550:	pop    r14
  420552:	jmp    420430 <flatcc_builder_append_string@@Base>
  420557:	nop    WORD PTR [rax+rax*1+0x0]

0000000000420560 <flatcc_builder_append_string_strn@@Base>:
  420560:	push   r15
  420562:	push   r14
  420564:	push   rbx
  420565:	mov    rbx,rdx
  420568:	mov    r14,rsi
  42056b:	mov    r15,rdi
  42056e:	xor    esi,esi
  420570:	mov    rdi,r14
  420573:	call   4060a0 <memchr@plt>
  420578:	mov    rcx,rax
  42057b:	sub    rcx,r14
  42057e:	test   rax,rax
  420581:	cmovne rbx,rcx
  420585:	mov    rdi,r15
  420588:	mov    rsi,r14
  42058b:	mov    rdx,rbx
  42058e:	pop    rbx
  42058f:	pop    r14
  420591:	pop    r15
  420593:	jmp    420430 <flatcc_builder_append_string@@Base>
  420598:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004205a0 <flatcc_builder_truncate_vector@@Base>:
  4205a0:	push   rax
  4205a1:	mov    rcx,QWORD PTR [rdi+0x30]
  4205a5:	movzx  edx,WORD PTR [rcx+0xe]
  4205a9:	cmp    edx,0x4
  4205ac:	jne    4205e3 <flatcc_builder_truncate_vector@@Base+0x43>
  4205ae:	mov    rax,rsi
  4205b1:	mov    edx,DWORD PTR [rcx+0x14]
  4205b4:	cmp    rdx,rsi
  4205b7:	jb     420602 <flatcc_builder_truncate_vector@@Base+0x62>
  4205b9:	sub    edx,eax
  4205bb:	mov    DWORD PTR [rcx+0x14],edx
  4205be:	mov    rcx,QWORD PTR [rdi+0x30]
  4205c2:	imul   eax,DWORD PTR [rcx+0x10]
  4205c6:	mov    ecx,DWORD PTR [rdi+0x20]
  4205c9:	sub    ecx,eax
  4205cb:	mov    DWORD PTR [rdi+0x20],ecx
  4205ce:	add    rcx,QWORD PTR [rdi+0x18]
  4205d2:	xor    esi,esi
  4205d4:	mov    rdi,rcx
  4205d7:	mov    rdx,rax
  4205da:	call   406080 <memset@plt>
  4205df:	xor    eax,eax
  4205e1:	pop    rcx
  4205e2:	ret    
  4205e3:	lea    rdi,[rip+0x19815]        # 439dff <flatcc_builder_padding_base@@Base+0x5cf>
  4205ea:	lea    rsi,[rip+0x194d1]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  4205f1:	lea    rcx,[rip+0x19ac1]        # 43a0b9 <flatcc_builder_padding_base@@Base+0x889>
  4205f8:	mov    edx,0x3d9
  4205fd:	call   406070 <__assert_fail@plt>
  420602:	lea    rdi,[rip+0x19aef]        # 43a0f8 <flatcc_builder_padding_base@@Base+0x8c8>
  420609:	lea    rsi,[rip+0x194b2]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  420610:	lea    rcx,[rip+0x19aa2]        # 43a0b9 <flatcc_builder_padding_base@@Base+0x889>
  420617:	mov    edx,0x3da
  42061c:	call   406070 <__assert_fail@plt>
  420621:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42062b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000420630 <flatcc_builder_truncate_offset_vector@@Base>:
  420630:	push   rax
  420631:	mov    rcx,QWORD PTR [rdi+0x30]
  420635:	movzx  edx,WORD PTR [rcx+0xe]
  420639:	cmp    edx,0x5
  42063c:	jne    420670 <flatcc_builder_truncate_offset_vector@@Base+0x40>
  42063e:	mov    rax,rsi
  420641:	mov    edx,DWORD PTR [rcx+0x14]
  420644:	sub    edx,eax
  420646:	jb     42068f <flatcc_builder_truncate_offset_vector@@Base+0x5f>
  420648:	mov    DWORD PTR [rcx+0x14],edx
  42064b:	mov    rcx,QWORD PTR [rdi+0x30]
  42064f:	imul   eax,DWORD PTR [rcx+0x10]
  420653:	mov    ecx,DWORD PTR [rdi+0x20]
  420656:	sub    ecx,eax
  420658:	mov    DWORD PTR [rdi+0x20],ecx
  42065b:	add    rcx,QWORD PTR [rdi+0x18]
  42065f:	xor    esi,esi
  420661:	mov    rdi,rcx
  420664:	mov    rdx,rax
  420667:	call   406080 <memset@plt>
  42066c:	xor    eax,eax
  42066e:	pop    rcx
  42066f:	ret    
  420670:	lea    rdi,[rip+0x19881]        # 439ef8 <flatcc_builder_padding_base@@Base+0x6c8>
  420677:	lea    rsi,[rip+0x19444]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  42067e:	lea    rcx,[rip+0x19a97]        # 43a11c <flatcc_builder_padding_base@@Base+0x8ec>
  420685:	mov    edx,0x3e2
  42068a:	call   406070 <__assert_fail@plt>
  42068f:	lea    rdi,[rip+0x19acc]        # 43a162 <flatcc_builder_padding_base@@Base+0x932>
  420696:	lea    rsi,[rip+0x19425]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  42069d:	lea    rcx,[rip+0x19a78]        # 43a11c <flatcc_builder_padding_base@@Base+0x8ec>
  4206a4:	mov    edx,0x3e3
  4206a9:	call   406070 <__assert_fail@plt>
  4206ae:	xchg   ax,ax

00000000004206b0 <flatcc_builder_truncate_string@@Base>:
  4206b0:	push   rax
  4206b1:	mov    rax,QWORD PTR [rdi+0x30]
  4206b5:	movzx  ecx,WORD PTR [rax+0xe]
  4206b9:	cmp    ecx,0x6
  4206bc:	jne    4206e7 <flatcc_builder_truncate_string@@Base+0x37>
  4206be:	mov    ecx,DWORD PTR [rax+0x14]
  4206c1:	cmp    rcx,rsi
  4206c4:	jb     420706 <flatcc_builder_truncate_string@@Base+0x56>
  4206c6:	sub    ecx,esi
  4206c8:	mov    DWORD PTR [rax+0x14],ecx
  4206cb:	mov    eax,DWORD PTR [rdi+0x20]
  4206ce:	sub    eax,esi
  4206d0:	mov    DWORD PTR [rdi+0x20],eax
  4206d3:	add    rax,QWORD PTR [rdi+0x18]
  4206d7:	mov    edx,esi
  4206d9:	xor    esi,esi
  4206db:	mov    rdi,rax
  4206de:	call   406080 <memset@plt>
  4206e3:	xor    eax,eax
  4206e5:	pop    rcx
  4206e6:	ret    
  4206e7:	lea    rdi,[rip+0x19913]        # 43a001 <flatcc_builder_padding_base@@Base+0x7d1>
  4206ee:	lea    rsi,[rip+0x193cd]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  4206f5:	lea    rcx,[rip+0x19aa1]        # 43a19d <flatcc_builder_padding_base@@Base+0x96d>
  4206fc:	mov    edx,0x3eb
  420701:	call   406070 <__assert_fail@plt>
  420706:	lea    rdi,[rip+0x19acf]        # 43a1dc <flatcc_builder_padding_base@@Base+0x9ac>
  42070d:	lea    rsi,[rip+0x193ae]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  420714:	lea    rcx,[rip+0x19a82]        # 43a19d <flatcc_builder_padding_base@@Base+0x96d>
  42071b:	mov    edx,0x3ec
  420720:	call   406070 <__assert_fail@plt>
  420725:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42072f:	nop

0000000000420730 <flatcc_builder_start_vector@@Base>:
  420730:	push   r15
  420732:	push   r14
  420734:	push   rbx
  420735:	mov    r14,rcx
  420738:	mov    r15,rsi
  42073b:	mov    rbx,rdi
  42073e:	cmp    edx,0x4
  420741:	mov    esi,0x4
  420746:	cmova  esi,edx
  420749:	call   41f9b0 <flatcc_builder_start_buffer@@Base+0xe0>
  42074e:	mov    ecx,eax
  420750:	mov    eax,0xffffffff
  420755:	test   ecx,ecx
  420757:	jne    4207a5 <flatcc_builder_start_vector@@Base+0x75>
  420759:	mov    rax,QWORD PTR [rbx+0x30]
  42075d:	mov    DWORD PTR [rax+0x10],r15d
  420761:	mov    rax,QWORD PTR [rbx+0x30]
  420765:	mov    DWORD PTR [rax+0x14],0x0
  42076c:	mov    rax,QWORD PTR [rbx+0x30]
  420770:	mov    DWORD PTR [rax+0x18],r14d
  420774:	mov    rax,QWORD PTR [rbx+0x30]
  420778:	mov    WORD PTR [rax+0xe],0x4
  42077e:	mov    ecx,DWORD PTR [rbx+0x28]
  420781:	mov    edx,DWORD PTR [rbx+0x70]
  420784:	sub    edx,ecx
  420786:	add    rcx,QWORD PTR [rbx+0x68]
  42078a:	mov    QWORD PTR [rbx+0x18],rcx
  42078e:	cmp    edx,0xfffffffc
  420791:	mov    ecx,0xfffffffc
  420796:	cmovb  ecx,edx
  420799:	mov    DWORD PTR [rbx+0x24],ecx
  42079c:	mov    DWORD PTR [rax+0x4],0xfffffffc
  4207a3:	xor    eax,eax
  4207a5:	pop    rbx
  4207a6:	pop    r14
  4207a8:	pop    r15
  4207aa:	ret    
  4207ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004207b0 <flatcc_builder_start_offset_vector@@Base>:
  4207b0:	push   rbx
  4207b1:	mov    rbx,rdi
  4207b4:	mov    esi,0x4
  4207b9:	call   41f9b0 <flatcc_builder_start_buffer@@Base+0xe0>
  4207be:	mov    ecx,eax
  4207c0:	mov    eax,0xffffffff
  4207c5:	test   ecx,ecx
  4207c7:	je     4207cb <flatcc_builder_start_offset_vector@@Base+0x1b>
  4207c9:	pop    rbx
  4207ca:	ret    
  4207cb:	mov    rax,QWORD PTR [rbx+0x30]
  4207cf:	mov    DWORD PTR [rax+0x10],0x4
  4207d6:	mov    rax,QWORD PTR [rbx+0x30]
  4207da:	mov    DWORD PTR [rax+0x14],0x0
  4207e1:	mov    rax,QWORD PTR [rbx+0x30]
  4207e5:	mov    WORD PTR [rax+0xe],0x5
  4207eb:	mov    ecx,DWORD PTR [rbx+0x28]
  4207ee:	mov    edx,DWORD PTR [rbx+0x70]
  4207f1:	sub    edx,ecx
  4207f3:	add    rcx,QWORD PTR [rbx+0x68]
  4207f7:	mov    QWORD PTR [rbx+0x18],rcx
  4207fb:	cmp    edx,0xfffffffc
  4207fe:	mov    ecx,0xfffffffc
  420803:	cmovb  ecx,edx
  420806:	mov    DWORD PTR [rbx+0x24],ecx
  420809:	mov    DWORD PTR [rax+0x4],0xfffffffc
  420810:	xor    eax,eax
  420812:	pop    rbx
  420813:	ret    
  420814:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42081e:	xchg   ax,ax

0000000000420820 <flatcc_builder_create_offset_vector@@Base>:
  420820:	push   r15
  420822:	push   r14
  420824:	push   r12
  420826:	push   rbx
  420827:	push   rax
  420828:	mov    r14,rdx
  42082b:	mov    r15,rsi
  42082e:	mov    rbx,rdi
  420831:	mov    esi,0x4
  420836:	call   41f9b0 <flatcc_builder_start_buffer@@Base+0xe0>
  42083b:	test   eax,eax
  42083d:	je     42084d <flatcc_builder_create_offset_vector@@Base+0x2d>
  42083f:	xor    eax,eax
  420841:	add    rsp,0x8
  420845:	pop    rbx
  420846:	pop    r12
  420848:	pop    r14
  42084a:	pop    r15
  42084c:	ret    
  42084d:	mov    rax,QWORD PTR [rbx+0x30]
  420851:	mov    DWORD PTR [rax+0x10],0x4
  420858:	mov    rax,QWORD PTR [rbx+0x30]
  42085c:	mov    DWORD PTR [rax+0x14],0x0
  420863:	mov    rax,QWORD PTR [rbx+0x30]
  420867:	mov    WORD PTR [rax+0xe],0x5
  42086d:	mov    ecx,DWORD PTR [rbx+0x28]
  420870:	mov    edx,DWORD PTR [rbx+0x70]
  420873:	sub    edx,ecx
  420875:	add    rcx,QWORD PTR [rbx+0x68]
  420879:	mov    QWORD PTR [rbx+0x18],rcx
  42087d:	cmp    edx,0xfffffffc
  420880:	mov    ecx,0xfffffffc
  420885:	cmovb  ecx,edx
  420888:	mov    DWORD PTR [rbx+0x24],ecx
  42088b:	mov    DWORD PTR [rax+0x4],0xfffffffc
  420892:	mov    ecx,DWORD PTR [rax+0x14]
  420895:	add    ecx,r14d
  420898:	jb     420949 <flatcc_builder_create_offset_vector@@Base+0x129>
  42089e:	cmp    ecx,0x40000000
  4208a4:	jae    420949 <flatcc_builder_create_offset_vector@@Base+0x129>
  4208aa:	mov    DWORD PTR [rax+0x14],ecx
  4208ad:	mov    r12d,DWORD PTR [rbx+0x20]
  4208b1:	lea    eax,[r12+r14*4]
  4208b5:	mov    DWORD PTR [rbx+0x20],eax
  4208b8:	cmp    eax,DWORD PTR [rbx+0x24]
  4208bb:	jae    4208cb <flatcc_builder_create_offset_vector@@Base+0xab>
  4208bd:	mov    rdi,QWORD PTR [rbx+0x18]
  4208c1:	add    rdi,r12
  4208c4:	jne    420927 <flatcc_builder_create_offset_vector@@Base+0x107>
  4208c6:	jmp    42083f <flatcc_builder_create_offset_vector@@Base+0x1f>
  4208cb:	add    eax,0x1
  4208ce:	lea    rsi,[rbx+0x68]
  4208d2:	mov    rdi,QWORD PTR [rbx+0x40]
  4208d6:	mov    edx,DWORD PTR [rbx+0x28]
  4208d9:	add    rdx,rax
  4208dc:	mov    ecx,0x1
  4208e1:	mov    r8d,0x1
  4208e7:	call   QWORD PTR [rbx+0x50]
  4208ea:	test   eax,eax
  4208ec:	jne    42083f <flatcc_builder_create_offset_vector@@Base+0x1f>
  4208f2:	mov    eax,DWORD PTR [rbx+0x28]
  4208f5:	mov    rdi,rax
  4208f8:	add    rdi,QWORD PTR [rbx+0x68]
  4208fc:	mov    QWORD PTR [rbx+0x18],rdi
  420900:	mov    ecx,DWORD PTR [rbx+0x70]
  420903:	sub    ecx,eax
  420905:	cmp    ecx,0xfffffffc
  420908:	mov    eax,0xfffffffc
  42090d:	cmovb  eax,ecx
  420910:	mov    DWORD PTR [rbx+0x24],eax
  420913:	mov    rax,QWORD PTR [rbx+0x30]
  420917:	mov    DWORD PTR [rax+0x4],0xfffffffc
  42091e:	add    rdi,r12
  420921:	je     42083f <flatcc_builder_create_offset_vector@@Base+0x1f>
  420927:	shl    r14,0x2
  42092b:	mov    rsi,r15
  42092e:	mov    rdx,r14
  420931:	call   4060e0 <memcpy@plt>
  420936:	mov    rdi,rbx
  420939:	add    rsp,0x8
  42093d:	pop    rbx
  42093e:	pop    r12
  420940:	pop    r14
  420942:	pop    r15
  420944:	jmp    420970 <flatcc_builder_end_offset_vector@@Base>
  420949:	lea    rdi,[rip+0x1a23b]        # 43ab8b <flatcc_builder_padding_base@@Base+0x135b>
  420950:	lea    rsi,[rip+0x1916b]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  420957:	lea    rcx,[rip+0x1a248]        # 43aba6 <flatcc_builder_padding_base@@Base+0x1376>
  42095e:	mov    edx,0x37c
  420963:	call   406070 <__assert_fail@plt>
  420968:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000420970 <flatcc_builder_end_offset_vector@@Base>:
  420970:	push   rbp
  420971:	push   rbx
  420972:	push   rax
  420973:	mov    rax,QWORD PTR [rdi+0x30]
  420977:	movzx  ecx,WORD PTR [rax+0xe]
  42097b:	cmp    ecx,0x5
  42097e:	jne    420a0d <flatcc_builder_end_offset_vector@@Base+0x9d>
  420984:	mov    rbx,rdi
  420987:	mov    rsi,QWORD PTR [rdi+0x18]
  42098b:	mov    edx,DWORD PTR [rax+0x14]
  42098e:	xor    ecx,ecx
  420990:	call   4219c0 <flatcc_builder_create_offset_vector_direct@@Base+0x10>
  420995:	mov    ebp,eax
  420997:	test   eax,eax
  420999:	je     420a04 <flatcc_builder_end_offset_vector@@Base+0x94>
  42099b:	mov    rdi,QWORD PTR [rbx+0x18]
  42099f:	mov    edx,DWORD PTR [rbx+0x20]
  4209a2:	xor    esi,esi
  4209a4:	call   406080 <memset@plt>
  4209a9:	mov    rax,QWORD PTR [rbx+0x30]
  4209ad:	mov    ecx,DWORD PTR [rax+0x8]
  4209b0:	mov    DWORD PTR [rbx+0x20],ecx
  4209b3:	mov    ecx,DWORD PTR [rax]
  4209b5:	mov    DWORD PTR [rbx+0x28],ecx
  4209b8:	mov    edx,DWORD PTR [rax+0x4]
  4209bb:	mov    rsi,rcx
  4209be:	add    rsi,QWORD PTR [rbx+0x68]
  4209c2:	mov    QWORD PTR [rbx+0x18],rsi
  4209c6:	mov    esi,DWORD PTR [rbx+0x70]
  4209c9:	sub    esi,ecx
  4209cb:	cmp    esi,edx
  4209cd:	cmova  esi,edx
  4209d0:	mov    DWORD PTR [rbx+0x24],esi
  4209d3:	movzx  ecx,WORD PTR [rbx+0xea]
  4209da:	cmp    WORD PTR [rbx+0xe8],cx
  4209e1:	jae    4209ea <flatcc_builder_end_offset_vector@@Base+0x7a>
  4209e3:	mov    WORD PTR [rbx+0xe8],cx
  4209ea:	movzx  ecx,WORD PTR [rax+0xc]
  4209ee:	mov    WORD PTR [rbx+0xea],cx
  4209f5:	add    rax,0xffffffffffffffdc
  4209f9:	mov    QWORD PTR [rbx+0x30],rax
  4209fd:	add    DWORD PTR [rbx+0x104],0xffffffff
  420a04:	mov    eax,ebp
  420a06:	add    rsp,0x8
  420a0a:	pop    rbx
  420a0b:	pop    rbp
  420a0c:	ret    
  420a0d:	lea    rdi,[rip+0x194e4]        # 439ef8 <flatcc_builder_padding_base@@Base+0x6c8>
  420a14:	lea    rsi,[rip+0x190a7]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  420a1b:	lea    rcx,[rip+0x19b05]        # 43a527 <flatcc_builder_padding_base@@Base+0xcf7>
  420a22:	mov    edx,0x5c8
  420a27:	call   406070 <__assert_fail@plt>
  420a2c:	nop    DWORD PTR [rax+0x0]

0000000000420a30 <flatcc_builder_start_string@@Base>:
  420a30:	push   rbx
  420a31:	mov    rbx,rdi
  420a34:	mov    esi,0x1
  420a39:	call   41f9b0 <flatcc_builder_start_buffer@@Base+0xe0>
  420a3e:	mov    ecx,eax
  420a40:	mov    eax,0xffffffff
  420a45:	test   ecx,ecx
  420a47:	je     420a4b <flatcc_builder_start_string@@Base+0x1b>
  420a49:	pop    rbx
  420a4a:	ret    
  420a4b:	mov    rax,QWORD PTR [rbx+0x30]
  420a4f:	mov    DWORD PTR [rax+0x10],0x1
  420a56:	mov    rax,QWORD PTR [rbx+0x30]
  420a5a:	mov    DWORD PTR [rax+0x14],0x0
  420a61:	mov    rax,QWORD PTR [rbx+0x30]
  420a65:	mov    WORD PTR [rax+0xe],0x6
  420a6b:	mov    ecx,DWORD PTR [rbx+0x28]
  420a6e:	mov    edx,DWORD PTR [rbx+0x70]
  420a71:	sub    edx,ecx
  420a73:	add    rcx,QWORD PTR [rbx+0x68]
  420a77:	mov    QWORD PTR [rbx+0x18],rcx
  420a7b:	cmp    edx,0xfffffffc
  420a7e:	mov    ecx,0xfffffffc
  420a83:	cmovb  ecx,edx
  420a86:	mov    DWORD PTR [rbx+0x24],ecx
  420a89:	mov    DWORD PTR [rax+0x4],0xfffffffc
  420a90:	xor    eax,eax
  420a92:	pop    rbx
  420a93:	ret    
  420a94:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420a9e:	xchg   ax,ax

0000000000420aa0 <flatcc_builder_reserve_table@@Base>:
  420aa0:	push   r15
  420aa2:	push   r14
  420aa4:	push   rbx
  420aa5:	test   esi,esi
  420aa7:	js     420b54 <flatcc_builder_reserve_table@@Base+0xb4>
  420aad:	mov    r14d,esi
  420ab0:	mov    r15,rdi
  420ab3:	mov    rax,QWORD PTR [rdi+0x30]
  420ab7:	movzx  ebx,WORD PTR [rax+0x1c]
  420abb:	add    ebx,ebx
  420abd:	add    ebx,DWORD PTR [rax+0x10]
  420ac0:	lea    edx,[r14+r14*1]
  420ac4:	add    edx,0x4
  420ac7:	add    rdx,rbx
  420aca:	cmp    rdx,QWORD PTR [rdi+0x60]
  420ace:	jbe    420aec <flatcc_builder_reserve_table@@Base+0x4c>
  420ad0:	lea    rsi,[r15+0x58]
  420ad4:	mov    rdi,QWORD PTR [r15+0x40]
  420ad8:	mov    ecx,0x1
  420add:	xor    r8d,r8d
  420ae0:	call   QWORD PTR [r15+0x50]
  420ae4:	test   eax,eax
  420ae6:	jne    420b73 <flatcc_builder_reserve_table@@Base+0xd3>
  420aec:	add    rbx,QWORD PTR [r15+0x58]
  420af0:	mov    QWORD PTR [r15+0x8],rbx
  420af4:	je     420b49 <flatcc_builder_reserve_table@@Base+0xa9>
  420af6:	add    r14d,r14d
  420af9:	add    rbx,0x4
  420afd:	mov    QWORD PTR [r15+0x8],rbx
  420b01:	mov    rax,QWORD PTR [r15+0x30]
  420b05:	mov    ebx,DWORD PTR [rax+0x14]
  420b08:	or     r14d,0x1
  420b0c:	add    r14,rbx
  420b0f:	cmp    r14,QWORD PTR [r15+0x90]
  420b16:	jbe    420b36 <flatcc_builder_reserve_table@@Base+0x96>
  420b18:	lea    rsi,[r15+0x88]
  420b1f:	mov    rdi,QWORD PTR [r15+0x40]
  420b23:	xor    ecx,ecx
  420b25:	mov    r8d,0x3
  420b2b:	mov    rdx,r14
  420b2e:	call   QWORD PTR [r15+0x50]
  420b32:	test   eax,eax
  420b34:	jne    420b73 <flatcc_builder_reserve_table@@Base+0xd3>
  420b36:	xor    eax,eax
  420b38:	add    rbx,QWORD PTR [r15+0x88]
  420b3f:	mov    QWORD PTR [r15],rbx
  420b42:	sete   al
  420b45:	neg    eax
  420b47:	jmp    420b4e <flatcc_builder_reserve_table@@Base+0xae>
  420b49:	mov    eax,0xffffffff
  420b4e:	pop    rbx
  420b4f:	pop    r14
  420b51:	pop    r15
  420b53:	ret    
  420b54:	lea    rdi,[rip+0x196e4]        # 43a23f <flatcc_builder_padding_base@@Base+0xa0f>
  420b5b:	lea    rsi,[rip+0x18f60]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  420b62:	lea    rcx,[rip+0x19695]        # 43a1fe <flatcc_builder_padding_base@@Base+0x9ce>
  420b69:	mov    edx,0x429
  420b6e:	call   406070 <__assert_fail@plt>
  420b73:	lea    rdi,[rip+0x1a108]        # 43ac82 <flatcc_builder_padding_base@@Base+0x1452>
  420b7a:	lea    rsi,[rip+0x18f41]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  420b81:	lea    rcx,[rip+0x19f34]        # 43aabc <flatcc_builder_padding_base@@Base+0x128c>
  420b88:	mov    edx,0x134
  420b8d:	call   406070 <__assert_fail@plt>
  420b92:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420b9c:	nop    DWORD PTR [rax+0x0]

0000000000420ba0 <flatcc_builder_start_table@@Base>:
  420ba0:	push   rbp
  420ba1:	push   r15
  420ba3:	push   r14
  420ba5:	push   rbx
  420ba6:	push   rax
  420ba7:	mov    r15d,esi
  420baa:	mov    rbx,rdi
  420bad:	mov    esi,0x4
  420bb2:	call   41f9b0 <flatcc_builder_start_buffer@@Base+0xe0>
  420bb7:	mov    r14d,0xffffffff
  420bbd:	test   eax,eax
  420bbf:	je     420bcf <flatcc_builder_start_table@@Base+0x2f>
  420bc1:	mov    eax,r14d
  420bc4:	add    rsp,0x8
  420bc8:	pop    rbx
  420bc9:	pop    r14
  420bcb:	pop    r15
  420bcd:	pop    rbp
  420bce:	ret    
  420bcf:	mov    eax,DWORD PTR [rbx+0x8]
  420bd2:	sub    eax,DWORD PTR [rbx+0x58]
  420bd5:	mov    rcx,QWORD PTR [rbx+0x30]
  420bd9:	mov    DWORD PTR [rcx+0x10],eax
  420bdc:	mov    eax,DWORD PTR [rbx]
  420bde:	sub    eax,DWORD PTR [rbx+0x88]
  420be4:	mov    rcx,QWORD PTR [rbx+0x30]
  420be8:	mov    DWORD PTR [rcx+0x14],eax
  420beb:	mov    eax,DWORD PTR [rbx+0x14]
  420bee:	mov    rcx,QWORD PTR [rbx+0x30]
  420bf2:	mov    DWORD PTR [rcx+0x18],eax
  420bf5:	movzx  eax,WORD PTR [rbx+0x10]
  420bf9:	mov    rcx,QWORD PTR [rbx+0x30]
  420bfd:	mov    WORD PTR [rcx+0x1c],ax
  420c01:	mov    DWORD PTR [rbx+0x14],0x2f693b52
  420c08:	mov    WORD PTR [rbx+0x10],0x0
  420c0e:	mov    rax,QWORD PTR [rbx+0x30]
  420c12:	mov    WORD PTR [rax+0xe],0x3
  420c18:	movzx  ebp,WORD PTR [rax+0x1c]
  420c1c:	add    ebp,ebp
  420c1e:	add    ebp,DWORD PTR [rax+0x10]
  420c21:	lea    edx,[r15+r15*1]
  420c25:	add    edx,0x4
  420c28:	add    rdx,rbp
  420c2b:	cmp    rdx,QWORD PTR [rbx+0x60]
  420c2f:	jbe    420c4c <flatcc_builder_start_table@@Base+0xac>
  420c31:	lea    rsi,[rbx+0x58]
  420c35:	mov    rdi,QWORD PTR [rbx+0x40]
  420c39:	mov    ecx,0x1
  420c3e:	xor    r8d,r8d
  420c41:	call   QWORD PTR [rbx+0x50]
  420c44:	test   eax,eax
  420c46:	jne    420ce0 <flatcc_builder_start_table@@Base+0x140>
  420c4c:	add    rbp,QWORD PTR [rbx+0x58]
  420c50:	mov    QWORD PTR [rbx+0x8],rbp
  420c54:	je     420bc1 <flatcc_builder_start_table@@Base+0x21>
  420c5a:	add    r15d,r15d
  420c5d:	add    rbp,0x4
  420c61:	mov    QWORD PTR [rbx+0x8],rbp
  420c65:	mov    rax,QWORD PTR [rbx+0x30]
  420c69:	mov    ebp,DWORD PTR [rax+0x14]
  420c6c:	or     r15d,0x1
  420c70:	add    r15,rbp
  420c73:	cmp    r15,QWORD PTR [rbx+0x90]
  420c7a:	jbe    420c99 <flatcc_builder_start_table@@Base+0xf9>
  420c7c:	lea    rsi,[rbx+0x88]
  420c83:	mov    rdi,QWORD PTR [rbx+0x40]
  420c87:	xor    ecx,ecx
  420c89:	mov    r8d,0x3
  420c8f:	mov    rdx,r15
  420c92:	call   QWORD PTR [rbx+0x50]
  420c95:	test   eax,eax
  420c97:	jne    420ce0 <flatcc_builder_start_table@@Base+0x140>
  420c99:	add    rbp,QWORD PTR [rbx+0x88]
  420ca0:	mov    QWORD PTR [rbx],rbp
  420ca3:	je     420bc1 <flatcc_builder_start_table@@Base+0x21>
  420ca9:	mov    eax,DWORD PTR [rbx+0x28]
  420cac:	mov    rcx,rax
  420caf:	add    rcx,QWORD PTR [rbx+0x68]
  420cb3:	mov    QWORD PTR [rbx+0x18],rcx
  420cb7:	mov    ecx,DWORD PTR [rbx+0x70]
  420cba:	sub    ecx,eax
  420cbc:	cmp    ecx,0xfffc
  420cc2:	mov    eax,0xfffc
  420cc7:	cmovb  eax,ecx
  420cca:	mov    DWORD PTR [rbx+0x24],eax
  420ccd:	mov    rax,QWORD PTR [rbx+0x30]
  420cd1:	mov    DWORD PTR [rax+0x4],0xfffc
  420cd8:	xor    r14d,r14d
  420cdb:	jmp    420bc1 <flatcc_builder_start_table@@Base+0x21>
  420ce0:	lea    rdi,[rip+0x19f9b]        # 43ac82 <flatcc_builder_padding_base@@Base+0x1452>
  420ce7:	lea    rsi,[rip+0x18dd4]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  420cee:	lea    rcx,[rip+0x19dc7]        # 43aabc <flatcc_builder_padding_base@@Base+0x128c>
  420cf5:	mov    edx,0x134
  420cfa:	call   406070 <__assert_fail@plt>
  420cff:	nop

0000000000420d00 <flatcc_builder_create_vtable@@Base>:
  420d00:	push   r14
  420d02:	push   rbx
  420d03:	sub    rsp,0x98
  420d0a:	mov    r14,rdi
  420d0d:	mov    QWORD PTR [rsp+0x8],0x0
  420d16:	mov    DWORD PTR [rsp+0x10],0x0
  420d1e:	test   dx,dx
  420d21:	je     420d87 <flatcc_builder_create_vtable@@Base+0x87>
  420d23:	movzx  r8d,dx
  420d27:	mov    QWORD PTR [rsp+0x8],r8
  420d2c:	mov    QWORD PTR [rsp+0x18],rsi
  420d31:	mov    QWORD PTR [rsp+0x20],r8
  420d36:	mov    DWORD PTR [rsp+0x10],0x1
  420d3e:	mov    edx,0x1
  420d43:	cmp    DWORD PTR [r14+0x100],0x0
  420d4b:	jne    420d96 <flatcc_builder_create_vtable@@Base+0x96>
  420d4d:	cmp    DWORD PTR [r14+0x124],0x0
  420d55:	jne    420d96 <flatcc_builder_create_vtable@@Base+0x96>
  420d57:	mov    ebx,DWORD PTR [r14+0xf4]
  420d5e:	lea    eax,[r8+rbx*1]
  420d62:	mov    DWORD PTR [r14+0xf4],eax
  420d69:	mov    rdi,QWORD PTR [r14+0x38]
  420d6d:	lea    rsi,[rsp+0x18]
  420d72:	mov    ecx,ebx
  420d74:	call   QWORD PTR [r14+0x48]
  420d78:	test   eax,eax
  420d7a:	jne    420e2b <flatcc_builder_create_vtable@@Base+0x12b>
  420d80:	add    ebx,0x1
  420d83:	jne    420de0 <flatcc_builder_create_vtable@@Base+0xe0>
  420d85:	jmp    420dde <flatcc_builder_create_vtable@@Base+0xde>
  420d87:	xor    edx,edx
  420d89:	xor    r8d,r8d
  420d8c:	cmp    DWORD PTR [r14+0x100],0x0
  420d94:	je     420d4d <flatcc_builder_create_vtable@@Base+0x4d>
  420d96:	cmp    r8,0x11
  420d9a:	setb   al
  420d9d:	lea    rcx,[r8-0x10]
  420da1:	shr    rcx,0x20
  420da5:	sete   cl
  420da8:	test   r8d,r8d
  420dab:	je     420ded <flatcc_builder_create_vtable@@Base+0xed>
  420dad:	or     al,cl
  420daf:	je     420ded <flatcc_builder_create_vtable@@Base+0xed>
  420db1:	mov    ebx,DWORD PTR [r14+0xf0]
  420db8:	sub    ebx,r8d
  420dbb:	mov    rdi,QWORD PTR [r14+0x38]
  420dbf:	lea    rsi,[rsp+0x18]
  420dc4:	mov    ecx,ebx
  420dc6:	call   QWORD PTR [r14+0x48]
  420dca:	test   eax,eax
  420dcc:	jne    420e0c <flatcc_builder_create_vtable@@Base+0x10c>
  420dce:	mov    DWORD PTR [r14+0xf0],ebx
  420dd5:	test   ebx,ebx
  420dd7:	je     420dde <flatcc_builder_create_vtable@@Base+0xde>
  420dd9:	add    ebx,0x1
  420ddc:	jmp    420de0 <flatcc_builder_create_vtable@@Base+0xe0>
  420dde:	xor    ebx,ebx
  420de0:	mov    eax,ebx
  420de2:	add    rsp,0x98
  420de9:	pop    rbx
  420dea:	pop    r14
  420dec:	ret    
  420ded:	lea    rdi,[rip+0x19e8e]        # 43ac82 <flatcc_builder_padding_base@@Base+0x1452>
  420df4:	lea    rsi,[rip+0x18cc7]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  420dfb:	lea    rcx,[rip+0x19d3f]        # 43ab41 <flatcc_builder_padding_base@@Base+0x1311>
  420e02:	mov    edx,0x287
  420e07:	call   406070 <__assert_fail@plt>
  420e0c:	lea    rdi,[rip+0x19e6f]        # 43ac82 <flatcc_builder_padding_base@@Base+0x1452>
  420e13:	lea    rsi,[rip+0x18ca8]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  420e1a:	lea    rcx,[rip+0x19d20]        # 43ab41 <flatcc_builder_padding_base@@Base+0x1311>
  420e21:	mov    edx,0x28b
  420e26:	call   406070 <__assert_fail@plt>
  420e2b:	lea    rdi,[rip+0x19e50]        # 43ac82 <flatcc_builder_padding_base@@Base+0x1452>
  420e32:	lea    rsi,[rip+0x18c89]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  420e39:	lea    rcx,[rip+0x19dbd]        # 43abfd <flatcc_builder_padding_base@@Base+0x13cd>
  420e40:	mov    edx,0x2a5
  420e45:	call   406070 <__assert_fail@plt>
  420e4a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000420e50 <flatcc_builder_create_cached_vtable@@Base>:
  420e50:	push   rbp
  420e51:	push   r15
  420e53:	push   r14
  420e55:	push   r13
  420e57:	push   r12
  420e59:	push   rbx
  420e5a:	sub    rsp,0x28
  420e5e:	mov    r15d,ecx
  420e61:	mov    r8d,edx
  420e64:	mov    QWORD PTR [rsp+0x18],rsi
  420e69:	mov    r13,rdi
  420e6c:	mov    rax,QWORD PTR [rdi+0xd8]
  420e73:	test   rax,rax
  420e76:	je     420f4a <flatcc_builder_create_cached_vtable@@Base+0xfa>
  420e7c:	mov    ecx,0x20
  420e81:	sub    ecx,eax
  420e83:	shrx   r15d,r15d,ecx
  420e88:	shl    r15,0x2
  420e8c:	add    r15,QWORD PTR [r13+0xa8]
  420e93:	je     42101a <flatcc_builder_create_cached_vtable@@Base+0x1ca>
  420e99:	mov    ebp,DWORD PTR [r15]
  420e9c:	test   ebp,ebp
  420e9e:	je     421022 <flatcc_builder_create_cached_vtable@@Base+0x1d2>
  420ea4:	mov    rbx,QWORD PTR [r13+0x78]
  420ea8:	mov    QWORD PTR [rsp+0x10],r13
  420ead:	mov    r13,QWORD PTR [r13+0xb8]
  420eb4:	movzx  eax,r8w
  420eb8:	mov    QWORD PTR [rsp+0x20],rax
  420ebd:	xor    eax,eax
  420ebf:	mov    QWORD PTR [rsp],rax
  420ec3:	mov    QWORD PTR [rsp+0x8],r15
  420ec8:	mov    r14,r15
  420ecb:	nop    DWORD PTR [rax+rax*1+0x0]
  420ed0:	mov    eax,ebp
  420ed2:	lea    r15,[rax+r13*1]
  420ed6:	mov    esi,DWORD PTR [r13+rax*1+0x8]
  420edb:	cmp    WORD PTR [rbx+rsi*1],r8w
  420ee0:	jne    420efe <flatcc_builder_create_cached_vtable@@Base+0xae>
  420ee2:	add    rsi,rbx
  420ee5:	mov    rdi,QWORD PTR [rsp+0x18]
  420eea:	mov    rdx,QWORD PTR [rsp+0x20]
  420eef:	mov    r12d,r8d
  420ef2:	call   4060b0 <memcmp@plt>
  420ef7:	mov    r8d,r12d
  420efa:	test   eax,eax
  420efc:	je     420f0f <flatcc_builder_create_cached_vtable@@Base+0xbf>
  420efe:	mov    ebp,DWORD PTR [r15+0xc]
  420f02:	add    r15,0xc
  420f06:	mov    r14,r15
  420f09:	test   ebp,ebp
  420f0b:	jne    420ed0 <flatcc_builder_create_cached_vtable@@Base+0x80>
  420f0d:	jmp    420f3b <flatcc_builder_create_cached_vtable@@Base+0xeb>
  420f0f:	mov    eax,DWORD PTR [r15+0x4]
  420f13:	mov    rcx,QWORD PTR [rsp+0x10]
  420f18:	cmp    eax,DWORD PTR [rcx+0x100]
  420f1e:	je     421184 <flatcc_builder_create_cached_vtable@@Base+0x334>
  420f24:	lea    r14,[r15+0xc]
  420f28:	mov    ebp,DWORD PTR [r15+0xc]
  420f2c:	mov    rax,r15
  420f2f:	mov    QWORD PTR [rsp],r15
  420f33:	test   ebp,ebp
  420f35:	jne    420ed0 <flatcc_builder_create_cached_vtable@@Base+0x80>
  420f37:	mov    QWORD PTR [rsp],r15
  420f3b:	mov    r13,QWORD PTR [rsp+0x10]
  420f40:	mov    r15,QWORD PTR [rsp+0x8]
  420f45:	jmp    421028 <flatcc_builder_create_cached_vtable@@Base+0x1d8>
  420f4a:	cmp    DWORD PTR [r13+0xe4],0x0
  420f52:	jne    4211c1 <flatcc_builder_create_cached_vtable@@Base+0x371>
  420f58:	lea    rbx,[r13+0xb8]
  420f5f:	cmp    QWORD PTR [r13+0xc0],0xf
  420f67:	ja     420f8f <flatcc_builder_create_cached_vtable@@Base+0x13f>
  420f69:	mov    rdi,QWORD PTR [r13+0x40]
  420f6d:	mov    edx,0x10
  420f72:	xor    ecx,ecx
  420f74:	mov    ebp,r8d
  420f77:	mov    r8d,0x6
  420f7d:	mov    rsi,rbx
  420f80:	call   QWORD PTR [r13+0x50]
  420f84:	mov    r8d,ebp
  420f87:	test   eax,eax
  420f89:	jne    4211a2 <flatcc_builder_create_cached_vtable@@Base+0x352>
  420f8f:	xor    r12d,r12d
  420f92:	cmp    QWORD PTR [rbx],0x0
  420f96:	je     42116a <flatcc_builder_create_cached_vtable@@Base+0x31a>
  420f9c:	mov    ebx,r8d
  420f9f:	lea    rsi,[r13+0xa8]
  420fa6:	mov    DWORD PTR [r13+0xe4],0x10
  420fb1:	mov    rdi,QWORD PTR [r13+0x40]
  420fb5:	mov    edx,0x100
  420fba:	mov    ecx,0x1
  420fbf:	mov    r8d,0x5
  420fc5:	call   QWORD PTR [r13+0x50]
  420fc9:	test   eax,eax
  420fcb:	jne    42116a <flatcc_builder_create_cached_vtable@@Base+0x31a>
  420fd1:	mov    rax,QWORD PTR [r13+0xb0]
  420fd8:	mov    edx,0x100
  420fdd:	nop    DWORD PTR [rax]
  420fe0:	mov    rcx,rdx
  420fe3:	lea    rdx,[rdx+rdx*1]
  420fe7:	cmp    rdx,rax
  420fea:	jbe    420fe0 <flatcc_builder_create_cached_vtable@@Base+0x190>
  420fec:	shr    rcx,0x2
  420ff0:	mov    rax,0xffffffffffffffff
  420ff7:	mov    edx,0x1
  420ffc:	mov    r8d,ebx
  420fff:	nop
  421000:	add    rax,0x1
  421004:	shlx   rsi,rdx,rax
  421009:	cmp    rsi,rcx
  42100c:	jb     421000 <flatcc_builder_create_cached_vtable@@Base+0x1b0>
  42100e:	mov    QWORD PTR [r13+0xd8],rax
  421015:	jmp    420e7c <flatcc_builder_create_cached_vtable@@Base+0x2c>
  42101a:	xor    r12d,r12d
  42101d:	jmp    42116a <flatcc_builder_create_cached_vtable@@Base+0x31a>
  421022:	xor    eax,eax
  421024:	mov    QWORD PTR [rsp],rax
  421028:	mov    ebp,DWORD PTR [r13+0xe4]
  42102f:	lea    rbx,[r13+0xb8]
  421036:	lea    rdx,[rbp+0x10]
  42103a:	cmp    rdx,QWORD PTR [r13+0xc0]
  421041:	jbe    421064 <flatcc_builder_create_cached_vtable@@Base+0x214>
  421043:	mov    rdi,QWORD PTR [r13+0x40]
  421047:	xor    ecx,ecx
  421049:	mov    r14d,r8d
  42104c:	mov    r8d,0x6
  421052:	mov    rsi,rbx
  421055:	call   QWORD PTR [r13+0x50]
  421059:	mov    r8d,r14d
  42105c:	test   eax,eax
  42105e:	jne    4211a2 <flatcc_builder_create_cached_vtable@@Base+0x352>
  421064:	xor    r12d,r12d
  421067:	add    rbp,QWORD PTR [rbx]
  42106a:	je     42116a <flatcc_builder_create_cached_vtable@@Base+0x31a>
  421070:	mov    eax,DWORD PTR [r13+0xe4]
  421077:	mov    ecx,DWORD PTR [r13+0x100]
  42107e:	lea    edx,[rax+0x10]
  421081:	mov    DWORD PTR [r13+0xe4],edx
  421088:	mov    DWORD PTR [rbp+0x4],ecx
  42108b:	mov    ecx,DWORD PTR [r15]
  42108e:	mov    DWORD PTR [rbp+0xc],ecx
  421091:	mov    DWORD PTR [r15],eax
  421094:	movzx  ebx,r8w
  421098:	mov    rdi,r13
  42109b:	mov    rsi,QWORD PTR [rsp+0x18]
  4210a0:	mov    edx,ebx
  4210a2:	call   420d00 <flatcc_builder_create_vtable@@Base>
  4210a7:	mov    DWORD PTR [rbp+0x0],eax
  4210aa:	test   eax,eax
  4210ac:	je     42116a <flatcc_builder_create_cached_vtable@@Base+0x31a>
  4210b2:	mov    rax,QWORD PTR [rsp]
  4210b6:	test   rax,rax
  4210b9:	je     4210c6 <flatcc_builder_create_cached_vtable@@Base+0x276>
  4210bb:	mov    eax,DWORD PTR [rax+0x8]
  4210be:	mov    DWORD PTR [rbp+0x8],eax
  4210c1:	jmp    421166 <flatcc_builder_create_cached_vtable@@Base+0x316>
  4210c6:	mov    rax,QWORD PTR [r13+0x118]
  4210cd:	mov    r14d,DWORD PTR [r13+0xe0]
  4210d4:	test   rax,rax
  4210d7:	je     421114 <flatcc_builder_create_cached_vtable@@Base+0x2c4>
  4210d9:	lea    ecx,[r14+rbx*1]
  4210dd:	cmp    rax,rcx
  4210e0:	jae    421114 <flatcc_builder_create_cached_vtable@@Base+0x2c4>
  4210e2:	cmp    QWORD PTR [r13+0xd8],0x0
  4210ea:	je     421166 <flatcc_builder_create_cached_vtable@@Base+0x316>
  4210ec:	mov    rdi,QWORD PTR [r13+0xa8]
  4210f3:	mov    rdx,QWORD PTR [r13+0xb0]
  4210fa:	xor    esi,esi
  4210fc:	call   406080 <memset@plt>
  421101:	movabs rax,0x1000000000
  42110b:	mov    QWORD PTR [r13+0xe0],rax
  421112:	jmp    421166 <flatcc_builder_create_cached_vtable@@Base+0x316>
  421114:	lea    r15,[r13+0x78]
  421118:	lea    rdx,[r14+rbx*1]
  42111c:	cmp    rdx,QWORD PTR [r13+0x80]
  421123:	jbe    42113c <flatcc_builder_create_cached_vtable@@Base+0x2ec>
  421125:	mov    rdi,QWORD PTR [r13+0x40]
  421129:	xor    ecx,ecx
  42112b:	mov    r8d,0x2
  421131:	mov    rsi,r15
  421134:	call   QWORD PTR [r13+0x50]
  421138:	test   eax,eax
  42113a:	jne    4211a2 <flatcc_builder_create_cached_vtable@@Base+0x352>
  42113c:	add    r14,QWORD PTR [r15]
  42113f:	je     42117c <flatcc_builder_create_cached_vtable@@Base+0x32c>
  421141:	mov    eax,DWORD PTR [r13+0xe0]
  421148:	mov    DWORD PTR [rbp+0x8],eax
  42114b:	mov    ecx,ebx
  42114d:	add    ecx,eax
  42114f:	mov    DWORD PTR [r13+0xe0],ecx
  421156:	mov    rdi,r14
  421159:	mov    rsi,QWORD PTR [rsp+0x18]
  42115e:	mov    rdx,rbx
  421161:	call   4060e0 <memcpy@plt>
  421166:	mov    r12d,DWORD PTR [rbp+0x0]
  42116a:	mov    eax,r12d
  42116d:	add    rsp,0x28
  421171:	pop    rbx
  421172:	pop    r12
  421174:	pop    r13
  421176:	pop    r14
  421178:	pop    r15
  42117a:	pop    rbp
  42117b:	ret    
  42117c:	mov    r12d,0xffffffff
  421182:	jmp    42116a <flatcc_builder_create_cached_vtable@@Base+0x31a>
  421184:	mov    rcx,QWORD PTR [rsp+0x8]
  421189:	cmp    r14,rcx
  42118c:	je     42119d <flatcc_builder_create_cached_vtable@@Base+0x34d>
  42118e:	mov    eax,DWORD PTR [r15+0xc]
  421192:	mov    DWORD PTR [r14],eax
  421195:	mov    eax,DWORD PTR [rcx]
  421197:	mov    DWORD PTR [r15+0xc],eax
  42119b:	mov    DWORD PTR [rcx],ebp
  42119d:	mov    r12d,DWORD PTR [r15]
  4211a0:	jmp    42116a <flatcc_builder_create_cached_vtable@@Base+0x31a>
  4211a2:	lea    rdi,[rip+0x19ad9]        # 43ac82 <flatcc_builder_padding_base@@Base+0x1452>
  4211a9:	lea    rsi,[rip+0x18912]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  4211b0:	lea    rcx,[rip+0x19905]        # 43aabc <flatcc_builder_padding_base@@Base+0x128c>
  4211b7:	mov    edx,0x134
  4211bc:	call   406070 <__assert_fail@plt>
  4211c1:	lea    rdi,[rip+0x19a7e]        # 43ac46 <flatcc_builder_padding_base@@Base+0x1416>
  4211c8:	lea    rsi,[rip+0x188f3]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  4211cf:	lea    rcx,[rip+0x19a7f]        # 43ac55 <flatcc_builder_padding_base@@Base+0x1425>
  4211d6:	mov    edx,0x156
  4211db:	call   406070 <__assert_fail@plt>

00000000004211e0 <flatcc_builder_create_table@@Base>:
  4211e0:	push   rbp
  4211e1:	push   r14
  4211e3:	push   rbx
  4211e4:	sub    rsp,0xa0
  4211eb:	test   r9d,r9d
  4211ee:	js     421405 <flatcc_builder_create_table@@Base+0x225>
  4211f4:	mov    r14,rdi
  4211f7:	mov    edi,DWORD PTR [rsp+0xc0]
  4211fe:	test   dil,0x1
  421202:	je     421424 <flatcc_builder_create_table@@Base+0x244>
  421208:	movzx  ecx,cx
  42120b:	cmp    ecx,0x4
  42120e:	mov    eax,0x4
  421213:	cmova  eax,ecx
  421216:	cmp    WORD PTR [r14+0xe8],ax
  42121e:	jae    421228 <flatcc_builder_create_table@@Base+0x48>
  421220:	mov    WORD PTR [r14+0xe8],ax
  421228:	mov    ebp,DWORD PTR [r14+0xf0]
  42122f:	mov    ecx,ebp
  421231:	sub    ecx,edx
  421233:	movzx  r10d,ax
  421237:	add    r10d,0xffffffff
  42123b:	and    r10d,ecx
  42123e:	mov    ecx,0xfffffffc
  421243:	mov    ebx,0xfffffffc
  421248:	sub    ebx,edx
  42124a:	add    edi,r10d
  42124d:	lea    eax,[rbx+rbp*1]
  421250:	add    eax,0x1
  421253:	sub    eax,edi
  421255:	mov    DWORD PTR [rsp+0xc],eax
  421259:	test   r9d,r9d
  42125c:	jle    421307 <flatcc_builder_create_table@@Base+0x127>
  421262:	add    ebx,ebp
  421264:	sub    ebx,r10d
  421267:	sub    ecx,ebx
  421269:	mov    edi,r9d
  42126c:	lea    rax,[rdi-0x1]
  421270:	mov    r9d,edi
  421273:	and    r9d,0x3
  421277:	cmp    rax,0x3
  42127b:	jae    421289 <flatcc_builder_create_table@@Base+0xa9>
  42127d:	xor    ebx,ebx
  42127f:	test   r9,r9
  421282:	jne    4212dd <flatcc_builder_create_table@@Base+0xfd>
  421284:	jmp    421307 <flatcc_builder_create_table@@Base+0x127>
  421289:	sub    rdi,r9
  42128c:	xor    ebx,ebx
  42128e:	xchg   ax,ax
  421290:	movzx  eax,WORD PTR [r8+rbx*2]
  421295:	mov    ebp,DWORD PTR [rax+rsi*1]
  421298:	add    ebp,ecx
  42129a:	sub    ebp,eax
  42129c:	mov    DWORD PTR [rax+rsi*1],ebp
  42129f:	movzx  eax,WORD PTR [r8+rbx*2+0x2]
  4212a5:	mov    ebp,DWORD PTR [rax+rsi*1]
  4212a8:	add    ebp,ecx
  4212aa:	sub    ebp,eax
  4212ac:	mov    DWORD PTR [rax+rsi*1],ebp
  4212af:	movzx  eax,WORD PTR [r8+rbx*2+0x4]
  4212b5:	mov    ebp,DWORD PTR [rax+rsi*1]
  4212b8:	add    ebp,ecx
  4212ba:	sub    ebp,eax
  4212bc:	mov    DWORD PTR [rax+rsi*1],ebp
  4212bf:	movzx  eax,WORD PTR [r8+rbx*2+0x6]
  4212c5:	mov    ebp,DWORD PTR [rax+rsi*1]
  4212c8:	add    ebp,ecx
  4212ca:	sub    ebp,eax
  4212cc:	mov    DWORD PTR [rax+rsi*1],ebp
  4212cf:	add    rbx,0x4
  4212d3:	cmp    rdi,rbx
  4212d6:	jne    421290 <flatcc_builder_create_table@@Base+0xb0>
  4212d8:	test   r9,r9
  4212db:	je     421307 <flatcc_builder_create_table@@Base+0x127>
  4212dd:	lea    rdi,[r8+rbx*2]
  4212e1:	xor    ebx,ebx
  4212e3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4212ed:	nop    DWORD PTR [rax]
  4212f0:	movzx  eax,WORD PTR [rdi+rbx*2]
  4212f4:	mov    ebp,DWORD PTR [rax+rsi*1]
  4212f7:	add    ebp,ecx
  4212f9:	sub    ebp,eax
  4212fb:	mov    DWORD PTR [rax+rsi*1],ebp
  4212fe:	add    rbx,0x1
  421302:	cmp    r9,rbx
  421305:	jne    4212f0 <flatcc_builder_create_table@@Base+0x110>
  421307:	mov    QWORD PTR [rsp+0x10],0x4
  421310:	lea    rax,[rsp+0xc]
  421315:	mov    QWORD PTR [rsp+0x20],rax
  42131a:	mov    QWORD PTR [rsp+0x28],0x4
  421323:	mov    DWORD PTR [rsp+0x18],0x1
  42132b:	test   rdx,rdx
  42132e:	je     4213d0 <flatcc_builder_create_table@@Base+0x1f0>
  421334:	lea    r8,[rdx+0x4]
  421338:	mov    QWORD PTR [rsp+0x10],r8
  42133d:	mov    QWORD PTR [rsp+0x30],rsi
  421342:	mov    QWORD PTR [rsp+0x38],rdx
  421347:	mov    DWORD PTR [rsp+0x18],0x2
  42134f:	mov    edx,0x2
  421354:	test   r10d,r10d
  421357:	je     42137f <flatcc_builder_create_table@@Base+0x19f>
  421359:	add    r8,r10
  42135c:	mov    QWORD PTR [rsp+0x10],r8
  421361:	mov    eax,edx
  421363:	shl    rax,0x4
  421367:	lea    rcx,[rip+0x184c2]        # 439830 <flatcc_builder_padding_base@@Base>
  42136e:	mov    QWORD PTR [rsp+rax*1+0x20],rcx
  421373:	mov    QWORD PTR [rsp+rax*1+0x28],r10
  421378:	add    edx,0x1
  42137b:	mov    DWORD PTR [rsp+0x18],edx
  42137f:	cmp    r8,0x11
  421383:	setb   al
  421386:	lea    rcx,[r8-0x10]
  42138a:	shr    rcx,0x20
  42138e:	sete   cl
  421391:	test   r8d,r8d
  421394:	jle    4213e6 <flatcc_builder_create_table@@Base+0x206>
  421396:	or     al,cl
  421398:	je     4213e6 <flatcc_builder_create_table@@Base+0x206>
  42139a:	mov    ebp,DWORD PTR [r14+0xf0]
  4213a1:	sub    ebp,r8d
  4213a4:	mov    rdi,QWORD PTR [r14+0x38]
  4213a8:	lea    rsi,[rsp+0x20]
  4213ad:	mov    ecx,ebp
  4213af:	call   QWORD PTR [r14+0x48]
  4213b3:	test   eax,eax
  4213b5:	jne    421443 <flatcc_builder_create_table@@Base+0x263>
  4213bb:	mov    DWORD PTR [r14+0xf0],ebp
  4213c2:	mov    eax,ebp
  4213c4:	add    rsp,0xa0
  4213cb:	pop    rbx
  4213cc:	pop    r14
  4213ce:	pop    rbp
  4213cf:	ret    
  4213d0:	mov    edx,0x1
  4213d5:	mov    r8d,0x4
  4213db:	test   r10d,r10d
  4213de:	jne    421359 <flatcc_builder_create_table@@Base+0x179>
  4213e4:	jmp    42137f <flatcc_builder_create_table@@Base+0x19f>
  4213e6:	lea    rdi,[rip+0x19895]        # 43ac82 <flatcc_builder_padding_base@@Base+0x1452>
  4213ed:	lea    rsi,[rip+0x186ce]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  4213f4:	lea    rcx,[rip+0x19746]        # 43ab41 <flatcc_builder_padding_base@@Base+0x1311>
  4213fb:	mov    edx,0x287
  421400:	call   406070 <__assert_fail@plt>
  421405:	lea    rdi,[rip+0x18e2c]        # 43a238 <flatcc_builder_padding_base@@Base+0xa08>
  42140c:	lea    rsi,[rip+0x186af]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  421413:	lea    rcx,[rip+0x18e30]        # 43a24a <flatcc_builder_padding_base@@Base+0xa1a>
  42141a:	mov    edx,0x4d5
  42141f:	call   406070 <__assert_fail@plt>
  421424:	lea    rdi,[rip+0x18ebb]        # 43a2e6 <flatcc_builder_padding_base@@Base+0xab6>
  42142b:	lea    rsi,[rip+0x18690]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  421432:	lea    rcx,[rip+0x18e11]        # 43a24a <flatcc_builder_padding_base@@Base+0xa1a>
  421439:	mov    edx,0x4db
  42143e:	call   406070 <__assert_fail@plt>
  421443:	lea    rdi,[rip+0x19838]        # 43ac82 <flatcc_builder_padding_base@@Base+0x1452>
  42144a:	lea    rsi,[rip+0x18671]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  421451:	lea    rcx,[rip+0x196e9]        # 43ab41 <flatcc_builder_padding_base@@Base+0x1311>
  421458:	mov    edx,0x28b
  42145d:	call   406070 <__assert_fail@plt>
  421462:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42146c:	nop    DWORD PTR [rax+0x0]

0000000000421470 <flatcc_builder_check_required_field@@Base>:
  421470:	mov    rax,QWORD PTR [rdi+0x30]
  421474:	movzx  eax,WORD PTR [rax+0xe]
  421478:	cmp    eax,0x3
  42147b:	jne    421497 <flatcc_builder_check_required_field@@Base+0x27>
  42147d:	xor    eax,eax
  42147f:	cmp    WORD PTR [rdi+0x10],si
  421483:	jbe    421496 <flatcc_builder_check_required_field@@Base+0x26>
  421485:	mov    rcx,QWORD PTR [rdi+0x8]
  421489:	movzx  edx,si
  42148c:	xor    eax,eax
  42148e:	cmp    WORD PTR [rcx+rdx*2],0x0
  421493:	setne  al
  421496:	ret    
  421497:	push   rax
  421498:	lea    rdi,[rip+0x18e52]        # 43a2f1 <flatcc_builder_padding_base@@Base+0xac1>
  42149f:	lea    rsi,[rip+0x1861c]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  4214a6:	lea    rcx,[rip+0x18e6f]        # 43a31c <flatcc_builder_padding_base@@Base+0xaec>
  4214ad:	mov    edx,0x4f8
  4214b2:	call   406070 <__assert_fail@plt>
  4214b7:	nop    WORD PTR [rax+rax*1+0x0]

00000000004214c0 <flatcc_builder_check_union_field@@Base>:
  4214c0:	mov    rax,QWORD PTR [rdi+0x30]
  4214c4:	movzx  eax,WORD PTR [rax+0xe]
  4214c8:	cmp    eax,0x3
  4214cb:	jne    42151e <flatcc_builder_check_union_field@@Base+0x5e>
  4214cd:	test   si,si
  4214d0:	je     421501 <flatcc_builder_check_union_field@@Base+0x41>
  4214d2:	cmp    WORD PTR [rdi+0x10],si
  4214d6:	jbe    421507 <flatcc_builder_check_union_field@@Base+0x47>
  4214d8:	movzx  eax,si
  4214db:	mov    rcx,QWORD PTR [rdi+0x8]
  4214df:	movzx  edx,WORD PTR [rcx+rax*2-0x2]
  4214e4:	test   rdx,rdx
  4214e7:	je     42150d <flatcc_builder_check_union_field@@Base+0x4d>
  4214e9:	mov    rsi,QWORD PTR [rdi+0x18]
  4214ed:	cmp    BYTE PTR [rsi+rdx*1],0x0
  4214f1:	movzx  eax,WORD PTR [rcx+rax*2]
  4214f5:	je     421514 <flatcc_builder_check_union_field@@Base+0x54>
  4214f7:	test   ax,ax
  4214fa:	setne  al
  4214fd:	movzx  eax,al
  421500:	ret    
  421501:	xor    eax,eax
  421503:	movzx  eax,al
  421506:	ret    
  421507:	xor    eax,eax
  421509:	movzx  eax,al
  42150c:	ret    
  42150d:	cmp    WORD PTR [rcx+rax*2],0x0
  421512:	jmp    421517 <flatcc_builder_check_union_field@@Base+0x57>
  421514:	test   ax,ax
  421517:	sete   al
  42151a:	movzx  eax,al
  42151d:	ret    
  42151e:	push   rax
  42151f:	lea    rdi,[rip+0x18dcb]        # 43a2f1 <flatcc_builder_padding_base@@Base+0xac1>
  421526:	lea    rsi,[rip+0x18595]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  42152d:	lea    rcx,[rip+0x18e3b]        # 43a36f <flatcc_builder_padding_base@@Base+0xb3f>
  421534:	mov    edx,0x4ff
  421539:	call   406070 <__assert_fail@plt>
  42153e:	xchg   ax,ax

0000000000421540 <flatcc_builder_check_required@@Base>:
  421540:	mov    rax,QWORD PTR [rdi+0x30]
  421544:	movzx  eax,WORD PTR [rax+0xe]
  421548:	cmp    eax,0x3
  42154b:	jne    421588 <flatcc_builder_check_required@@Base+0x48>
  42154d:	movzx  ecx,WORD PTR [rdi+0x10]
  421551:	xor    eax,eax
  421553:	cmp    ecx,edx
  421555:	jl     421584 <flatcc_builder_check_required@@Base+0x44>
  421557:	mov    eax,0x1
  42155c:	test   edx,edx
  42155e:	jle    421584 <flatcc_builder_check_required@@Base+0x44>
  421560:	mov    rcx,QWORD PTR [rdi+0x8]
  421564:	movsxd r8,edx
  421567:	xor    edi,edi
  421569:	nop    DWORD PTR [rax+0x0]
  421570:	movzx  edx,WORD PTR [rsi+rdi*2]
  421574:	cmp    WORD PTR [rcx+rdx*2],0x0
  421579:	je     421585 <flatcc_builder_check_required@@Base+0x45>
  42157b:	add    rdi,0x1
  42157f:	cmp    rdi,r8
  421582:	jl     421570 <flatcc_builder_check_required@@Base+0x30>
  421584:	ret    
  421585:	xor    eax,eax
  421587:	ret    
  421588:	push   rax
  421589:	lea    rdi,[rip+0x18d61]        # 43a2f1 <flatcc_builder_padding_base@@Base+0xac1>
  421590:	lea    rsi,[rip+0x1852b]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  421597:	lea    rcx,[rip+0x18e21]        # 43a3bf <flatcc_builder_padding_base@@Base+0xb8f>
  42159e:	mov    edx,0x511
  4215a3:	call   406070 <__assert_fail@plt>
  4215a8:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004215b0 <flatcc_builder_end_table@@Base>:
  4215b0:	push   rbp
  4215b1:	push   r15
  4215b3:	push   r14
  4215b5:	push   r12
  4215b7:	push   rbx
  4215b8:	sub    rsp,0x10
  4215bc:	mov    rax,QWORD PTR [rdi+0x30]
  4215c0:	movzx  eax,WORD PTR [rax+0xe]
  4215c4:	cmp    eax,0x3
  4215c7:	jne    421718 <flatcc_builder_end_table@@Base+0x168>
  4215cd:	mov    rbx,rdi
  4215d0:	mov    rax,QWORD PTR [rdi+0x8]
  4215d4:	mov    ecx,DWORD PTR [rdi+0x10]
  4215d7:	lea    ecx,[rcx+rcx*1]
  4215da:	add    ecx,0x4
  4215dd:	mov    WORD PTR [rax-0x4],cx
  4215e1:	mov    edx,DWORD PTR [rdi+0x20]
  4215e4:	add    edx,0x4
  4215e7:	mov    WORD PTR [rax-0x2],dx
  4215eb:	lea    r12,[rax-0x4]
  4215ef:	movzx  ebp,cx
  4215f2:	mov    eax,DWORD PTR [rdi+0x14]
  4215f5:	xor    eax,ebp
  4215f7:	imul   eax,eax,0x9e3779b1
  4215fd:	movzx  ecx,dx
  421600:	xor    ecx,eax
  421602:	imul   ecx,ecx,0x9e3779b1
  421608:	mov    DWORD PTR [rdi+0x14],ecx
  42160b:	mov    rsi,r12
  42160e:	mov    edx,ebp
  421610:	call   420e50 <flatcc_builder_create_cached_vtable@@Base>
  421615:	test   eax,eax
  421617:	je     421705 <flatcc_builder_end_table@@Base+0x155>
  42161d:	mov    r14d,eax
  421620:	xor    r15d,r15d
  421623:	xor    esi,esi
  421625:	mov    rdi,r12
  421628:	mov    rdx,rbp
  42162b:	call   406080 <memset@plt>
  421630:	mov    rax,QWORD PTR [rbx+0x30]
  421634:	mov    r8d,DWORD PTR [rax+0x14]
  421638:	add    r8,QWORD PTR [rbx+0x88]
  42163f:	mov    r9,QWORD PTR [rbx]
  421642:	mov    rsi,QWORD PTR [rbx+0x18]
  421646:	sub    r9,r8
  421649:	shr    r9,1
  42164c:	mov    edx,DWORD PTR [rbx+0x20]
  42164f:	movzx  ecx,WORD PTR [rbx+0xea]
  421656:	mov    DWORD PTR [rsp],r14d
  42165a:	mov    rdi,rbx
  42165d:	call   4211e0 <flatcc_builder_create_table@@Base>
  421662:	test   eax,eax
  421664:	je     421708 <flatcc_builder_end_table@@Base+0x158>
  42166a:	mov    r14d,eax
  42166d:	mov    rax,QWORD PTR [rbx+0x30]
  421671:	mov    ecx,DWORD PTR [rax+0x18]
  421674:	mov    DWORD PTR [rbx+0x14],ecx
  421677:	movzx  ecx,WORD PTR [rax+0x1c]
  42167b:	mov    WORD PTR [rbx+0x10],cx
  42167f:	mov    ecx,DWORD PTR [rax+0x10]
  421682:	add    rcx,QWORD PTR [rbx+0x58]
  421686:	mov    QWORD PTR [rbx+0x8],rcx
  42168a:	mov    eax,DWORD PTR [rax+0x14]
  42168d:	add    rax,QWORD PTR [rbx+0x88]
  421694:	mov    QWORD PTR [rbx],rax
  421697:	mov    rdi,QWORD PTR [rbx+0x18]
  42169b:	mov    edx,DWORD PTR [rbx+0x20]
  42169e:	xor    esi,esi
  4216a0:	call   406080 <memset@plt>
  4216a5:	mov    rax,QWORD PTR [rbx+0x30]
  4216a9:	mov    ecx,DWORD PTR [rax+0x8]
  4216ac:	mov    DWORD PTR [rbx+0x20],ecx
  4216af:	mov    ecx,DWORD PTR [rax]
  4216b1:	mov    DWORD PTR [rbx+0x28],ecx
  4216b4:	mov    edx,DWORD PTR [rax+0x4]
  4216b7:	mov    rsi,rcx
  4216ba:	add    rsi,QWORD PTR [rbx+0x68]
  4216be:	mov    QWORD PTR [rbx+0x18],rsi
  4216c2:	mov    esi,DWORD PTR [rbx+0x70]
  4216c5:	sub    esi,ecx
  4216c7:	cmp    esi,edx
  4216c9:	cmova  esi,edx
  4216cc:	mov    DWORD PTR [rbx+0x24],esi
  4216cf:	movzx  ecx,WORD PTR [rbx+0xea]
  4216d6:	cmp    WORD PTR [rbx+0xe8],cx
  4216dd:	jae    4216e6 <flatcc_builder_end_table@@Base+0x136>
  4216df:	mov    WORD PTR [rbx+0xe8],cx
  4216e6:	movzx  ecx,WORD PTR [rax+0xc]
  4216ea:	mov    WORD PTR [rbx+0xea],cx
  4216f1:	add    rax,0xffffffffffffffdc
  4216f5:	mov    QWORD PTR [rbx+0x30],rax
  4216f9:	add    DWORD PTR [rbx+0x104],0xffffffff
  421700:	mov    r15d,r14d
  421703:	jmp    421708 <flatcc_builder_end_table@@Base+0x158>
  421705:	xor    r15d,r15d
  421708:	mov    eax,r15d
  42170b:	add    rsp,0x10
  42170f:	pop    rbx
  421710:	pop    r12
  421712:	pop    r14
  421714:	pop    r15
  421716:	pop    rbp
  421717:	ret    
  421718:	lea    rdi,[rip+0x18bd2]        # 43a2f1 <flatcc_builder_padding_base@@Base+0xac1>
  42171f:	lea    rsi,[rip+0x1839c]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  421726:	lea    rcx,[rip+0x18cec]        # 43a419 <flatcc_builder_padding_base@@Base+0xbe9>
  42172d:	mov    edx,0x525
  421732:	call   406070 <__assert_fail@plt>
  421737:	nop    WORD PTR [rax+rax*1+0x0]

0000000000421740 <flatcc_builder_create_vector@@Base>:
  421740:	push   rbp
  421741:	push   rbx
  421742:	sub    rsp,0x98
  421749:	cmp    rdx,r9
  42174c:	ja     421879 <flatcc_builder_create_vector@@Base+0x139>
  421752:	mov    rbx,rdi
  421755:	movzx  edi,r8w
  421759:	cmp    edi,0x4
  42175c:	mov    eax,0x4
  421761:	cmova  eax,edi
  421764:	cmp    WORD PTR [rbx+0xe8],ax
  42176b:	jae    421774 <flatcc_builder_create_vector@@Base+0x34>
  42176d:	mov    WORD PTR [rbx+0xe8],ax
  421774:	imul   ecx,edx
  421777:	mov    DWORD PTR [rsp+0x4],edx
  42177b:	mov    ebp,DWORD PTR [rbx+0xf0]
  421781:	mov    edx,ebp
  421783:	sub    edx,ecx
  421785:	movzx  eax,ax
  421788:	add    eax,0xffffffff
  42178b:	and    eax,edx
  42178d:	mov    QWORD PTR [rsp+0x8],0x4
  421796:	lea    rdx,[rsp+0x4]
  42179b:	mov    QWORD PTR [rsp+0x18],rdx
  4217a0:	mov    QWORD PTR [rsp+0x20],0x4
  4217a9:	mov    DWORD PTR [rsp+0x10],0x1
  4217b1:	test   ecx,ecx
  4217b3:	je     421849 <flatcc_builder_create_vector@@Base+0x109>
  4217b9:	mov    ecx,ecx
  4217bb:	lea    r8,[rcx+0x4]
  4217bf:	mov    QWORD PTR [rsp+0x8],r8
  4217c4:	mov    QWORD PTR [rsp+0x28],rsi
  4217c9:	mov    QWORD PTR [rsp+0x30],rcx
  4217ce:	mov    DWORD PTR [rsp+0x10],0x2
  4217d6:	mov    edx,0x2
  4217db:	test   eax,eax
  4217dd:	je     421807 <flatcc_builder_create_vector@@Base+0xc7>
  4217df:	mov    eax,eax
  4217e1:	add    r8,rax
  4217e4:	mov    QWORD PTR [rsp+0x8],r8
  4217e9:	mov    ecx,edx
  4217eb:	shl    rcx,0x4
  4217ef:	lea    rsi,[rip+0x1803a]        # 439830 <flatcc_builder_padding_base@@Base>
  4217f6:	mov    QWORD PTR [rsp+rcx*1+0x18],rsi
  4217fb:	mov    QWORD PTR [rsp+rcx*1+0x20],rax
  421800:	add    edx,0x1
  421803:	mov    DWORD PTR [rsp+0x10],edx
  421807:	cmp    r8,0x11
  42180b:	setb   al
  42180e:	lea    rcx,[r8-0x10]
  421812:	shr    rcx,0x20
  421816:	sete   cl
  421819:	test   r8d,r8d
  42181c:	jle    42185a <flatcc_builder_create_vector@@Base+0x11a>
  42181e:	or     al,cl
  421820:	je     42185a <flatcc_builder_create_vector@@Base+0x11a>
  421822:	sub    ebp,r8d
  421825:	mov    rdi,QWORD PTR [rbx+0x38]
  421829:	lea    rsi,[rsp+0x18]
  42182e:	mov    ecx,ebp
  421830:	call   QWORD PTR [rbx+0x48]
  421833:	test   eax,eax
  421835:	jne    421898 <flatcc_builder_create_vector@@Base+0x158>
  421837:	mov    DWORD PTR [rbx+0xf0],ebp
  42183d:	mov    eax,ebp
  42183f:	add    rsp,0x98
  421846:	pop    rbx
  421847:	pop    rbp
  421848:	ret    
  421849:	mov    edx,0x1
  42184e:	mov    r8d,0x4
  421854:	test   eax,eax
  421856:	jne    4217df <flatcc_builder_create_vector@@Base+0x9f>
  421858:	jmp    421807 <flatcc_builder_create_vector@@Base+0xc7>
  42185a:	lea    rdi,[rip+0x19421]        # 43ac82 <flatcc_builder_padding_base@@Base+0x1452>
  421861:	lea    rsi,[rip+0x1825a]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  421868:	lea    rcx,[rip+0x192d2]        # 43ab41 <flatcc_builder_padding_base@@Base+0x1311>
  42186f:	mov    edx,0x287
  421874:	call   406070 <__assert_fail@plt>
  421879:	lea    rdi,[rip+0x18bdb]        # 43a45b <flatcc_builder_padding_base@@Base+0xc2b>
  421880:	lea    rsi,[rip+0x1823b]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  421887:	lea    rcx,[rip+0x18be0]        # 43a46e <flatcc_builder_padding_base@@Base+0xc3e>
  42188e:	mov    edx,0x555
  421893:	call   406070 <__assert_fail@plt>
  421898:	lea    rdi,[rip+0x193e3]        # 43ac82 <flatcc_builder_padding_base@@Base+0x1452>
  42189f:	lea    rsi,[rip+0x1821c]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  4218a6:	lea    rcx,[rip+0x19294]        # 43ab41 <flatcc_builder_padding_base@@Base+0x1311>
  4218ad:	mov    edx,0x28b
  4218b2:	call   406070 <__assert_fail@plt>
  4218b7:	nop    WORD PTR [rax+rax*1+0x0]

00000000004218c0 <flatcc_builder_end_vector@@Base>:
  4218c0:	push   rbp
  4218c1:	push   rbx
  4218c2:	push   rax
  4218c3:	mov    rax,QWORD PTR [rdi+0x30]
  4218c7:	movzx  ecx,WORD PTR [rax+0xe]
  4218cb:	cmp    ecx,0x4
  4218ce:	jne    42196a <flatcc_builder_end_vector@@Base+0xaa>
  4218d4:	mov    rbx,rdi
  4218d7:	mov    rsi,QWORD PTR [rdi+0x18]
  4218db:	mov    ecx,DWORD PTR [rax+0x10]
  4218de:	mov    edx,DWORD PTR [rax+0x14]
  4218e1:	movzx  r8d,WORD PTR [rdi+0xea]
  4218e9:	mov    r9d,DWORD PTR [rax+0x18]
  4218ed:	call   421740 <flatcc_builder_create_vector@@Base>
  4218f2:	mov    ebp,eax
  4218f4:	test   eax,eax
  4218f6:	je     421961 <flatcc_builder_end_vector@@Base+0xa1>
  4218f8:	mov    rdi,QWORD PTR [rbx+0x18]
  4218fc:	mov    edx,DWORD PTR [rbx+0x20]
  4218ff:	xor    esi,esi
  421901:	call   406080 <memset@plt>
  421906:	mov    rax,QWORD PTR [rbx+0x30]
  42190a:	mov    ecx,DWORD PTR [rax+0x8]
  42190d:	mov    DWORD PTR [rbx+0x20],ecx
  421910:	mov    ecx,DWORD PTR [rax]
  421912:	mov    DWORD PTR [rbx+0x28],ecx
  421915:	mov    edx,DWORD PTR [rax+0x4]
  421918:	mov    rsi,rcx
  42191b:	add    rsi,QWORD PTR [rbx+0x68]
  42191f:	mov    QWORD PTR [rbx+0x18],rsi
  421923:	mov    esi,DWORD PTR [rbx+0x70]
  421926:	sub    esi,ecx
  421928:	cmp    esi,edx
  42192a:	cmova  esi,edx
  42192d:	mov    DWORD PTR [rbx+0x24],esi
  421930:	movzx  ecx,WORD PTR [rbx+0xea]
  421937:	cmp    WORD PTR [rbx+0xe8],cx
  42193e:	jae    421947 <flatcc_builder_end_vector@@Base+0x87>
  421940:	mov    WORD PTR [rbx+0xe8],cx
  421947:	movzx  ecx,WORD PTR [rax+0xc]
  42194b:	mov    WORD PTR [rbx+0xea],cx
  421952:	add    rax,0xffffffffffffffdc
  421956:	mov    QWORD PTR [rbx+0x30],rax
  42195a:	add    DWORD PTR [rbx+0x104],0xffffffff
  421961:	mov    eax,ebp
  421963:	add    rsp,0x8
  421967:	pop    rbx
  421968:	pop    rbp
  421969:	ret    
  42196a:	lea    rdi,[rip+0x1848e]        # 439dff <flatcc_builder_padding_base@@Base+0x5cf>
  421971:	lea    rsi,[rip+0x1814a]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  421978:	lea    rcx,[rip+0x18b65]        # 43a4e4 <flatcc_builder_padding_base@@Base+0xcb4>
  42197f:	mov    edx,0x578
  421984:	call   406070 <__assert_fail@plt>
  421989:	nop    DWORD PTR [rax+0x0]

0000000000421990 <flatcc_builder_vector_count@@Base>:
  421990:	mov    rax,QWORD PTR [rdi+0x30]
  421994:	mov    eax,DWORD PTR [rax+0x14]
  421997:	ret    
  421998:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004219a0 <flatcc_builder_vector_edit@@Base>:
  4219a0:	mov    rax,QWORD PTR [rdi+0x18]
  4219a4:	ret    
  4219a5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4219af:	nop

00000000004219b0 <flatcc_builder_create_offset_vector_direct@@Base>:
  4219b0:	xor    ecx,ecx
  4219b2:	jmp    4219c0 <flatcc_builder_create_offset_vector_direct@@Base+0x10>
  4219b4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4219be:	xchg   ax,ax
  4219c0:	push   r14
  4219c2:	push   rbx
  4219c3:	sub    rsp,0x98
  4219ca:	mov    r10,rdx
  4219cd:	xor    ebx,ebx
  4219cf:	test   r10d,0xc0000000
  4219d6:	jne    421b2a <flatcc_builder_create_offset_vector_direct@@Base+0x17a>
  4219dc:	mov    r14,rdi
  4219df:	movzx  edx,WORD PTR [rdi+0xe8]
  4219e6:	cmp    edx,0x3
  4219e9:	ja     4219f5 <flatcc_builder_create_offset_vector_direct@@Base+0x45>
  4219eb:	mov    WORD PTR [r14+0xe8],0x4
  4219f5:	lea    r8d,[r10*4+0x0]
  4219fd:	mov    DWORD PTR [rsp+0x4],r10d
  421a02:	mov    ebx,DWORD PTR [r14+0xf0]
  421a09:	mov    r9d,ebx
  421a0c:	and    r9d,0x3
  421a10:	mov    QWORD PTR [rsp+0x8],0x4
  421a19:	lea    rdx,[rsp+0x4]
  421a1e:	mov    QWORD PTR [rsp+0x18],rdx
  421a23:	mov    QWORD PTR [rsp+0x20],0x4
  421a2c:	mov    DWORD PTR [rsp+0x10],0x1
  421a34:	test   r8d,r8d
  421a37:	je     421b37 <flatcc_builder_create_offset_vector_direct@@Base+0x187>
  421a3d:	mov    edx,r8d
  421a40:	lea    r8,[rdx+0x4]
  421a44:	mov    QWORD PTR [rsp+0x8],r8
  421a49:	mov    QWORD PTR [rsp+0x28],rsi
  421a4e:	mov    QWORD PTR [rsp+0x30],rdx
  421a53:	mov    DWORD PTR [rsp+0x10],0x2
  421a5b:	mov    edx,0x2
  421a60:	test   r9d,r9d
  421a63:	je     421a8b <flatcc_builder_create_offset_vector_direct@@Base+0xdb>
  421a65:	add    r8,r9
  421a68:	mov    QWORD PTR [rsp+0x8],r8
  421a6d:	mov    edi,edx
  421a6f:	shl    rdi,0x4
  421a73:	lea    rax,[rip+0x17db6]        # 439830 <flatcc_builder_padding_base@@Base>
  421a7a:	mov    QWORD PTR [rsp+rdi*1+0x18],rax
  421a7f:	mov    QWORD PTR [rsp+rdi*1+0x20],r9
  421a84:	add    edx,0x1
  421a87:	mov    DWORD PTR [rsp+0x10],edx
  421a8b:	test   r10d,r10d
  421a8e:	je     421ae6 <flatcc_builder_create_offset_vector_direct@@Base+0x136>
  421a90:	mov    edi,0xfffffffc
  421a95:	sub    edi,ebx
  421a97:	add    edi,r8d
  421a9a:	mov    r9d,r10d
  421a9d:	xor    ebx,ebx
  421a9f:	nop
  421aa0:	mov    eax,DWORD PTR [rsi+rbx*4]
  421aa3:	test   eax,eax
  421aa5:	je     421ac0 <flatcc_builder_create_offset_vector_direct@@Base+0x110>
  421aa7:	add    eax,edi
  421aa9:	mov    DWORD PTR [rsi+rbx*4],eax
  421aac:	test   rcx,rcx
  421aaf:	je     421ad3 <flatcc_builder_create_offset_vector_direct@@Base+0x123>
  421ab1:	cmp    BYTE PTR [rcx+rbx*1],0x0
  421ab5:	jne    421ad3 <flatcc_builder_create_offset_vector_direct@@Base+0x123>
  421ab7:	jmp    421b50 <flatcc_builder_create_offset_vector_direct@@Base+0x1a0>
  421abc:	nop    DWORD PTR [rax+0x0]
  421ac0:	test   rcx,rcx
  421ac3:	je     421b6f <flatcc_builder_create_offset_vector_direct@@Base+0x1bf>
  421ac9:	cmp    BYTE PTR [rcx+rbx*1],0x0
  421acd:	jne    421b8e <flatcc_builder_create_offset_vector_direct@@Base+0x1de>
  421ad3:	add    rbx,0x1
  421ad7:	add    edi,0xfffffffc
  421ada:	cmp    rbx,r9
  421add:	jb     421aa0 <flatcc_builder_create_offset_vector_direct@@Base+0xf0>
  421adf:	mov    ebx,DWORD PTR [r14+0xf0]
  421ae6:	cmp    r8,0x11
  421aea:	setb   al
  421aed:	lea    rcx,[r8-0x10]
  421af1:	shr    rcx,0x20
  421af5:	sete   cl
  421af8:	test   r8d,r8d
  421afb:	jle    421bad <flatcc_builder_create_offset_vector_direct@@Base+0x1fd>
  421b01:	or     al,cl
  421b03:	je     421bad <flatcc_builder_create_offset_vector_direct@@Base+0x1fd>
  421b09:	sub    ebx,r8d
  421b0c:	mov    rdi,QWORD PTR [r14+0x38]
  421b10:	lea    rsi,[rsp+0x18]
  421b15:	mov    ecx,ebx
  421b17:	call   QWORD PTR [r14+0x48]
  421b1b:	test   eax,eax
  421b1d:	jne    421bcc <flatcc_builder_create_offset_vector_direct@@Base+0x21c>
  421b23:	mov    DWORD PTR [r14+0xf0],ebx
  421b2a:	mov    eax,ebx
  421b2c:	add    rsp,0x98
  421b33:	pop    rbx
  421b34:	pop    r14
  421b36:	ret    
  421b37:	mov    edx,0x1
  421b3c:	mov    r8d,0x4
  421b42:	test   r9d,r9d
  421b45:	jne    421a65 <flatcc_builder_create_offset_vector_direct@@Base+0xb5>
  421b4b:	jmp    421a8b <flatcc_builder_create_offset_vector_direct@@Base+0xdb>
  421b50:	lea    rdi,[rip+0x1911f]        # 43ac76 <flatcc_builder_padding_base@@Base+0x1446>
  421b57:	lea    rsi,[rip+0x17f64]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  421b5e:	lea    rcx,[rip+0x1911f]        # 43ac84 <flatcc_builder_padding_base@@Base+0x1454>
  421b65:	mov    edx,0x5b1
  421b6a:	call   406070 <__assert_fail@plt>
  421b6f:	lea    rdi,[rip+0x1910c]        # 43ac82 <flatcc_builder_padding_base@@Base+0x1452>
  421b76:	lea    rsi,[rip+0x17f45]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  421b7d:	lea    rcx,[rip+0x19100]        # 43ac84 <flatcc_builder_padding_base@@Base+0x1454>
  421b84:	mov    edx,0x5b7
  421b89:	call   406070 <__assert_fail@plt>
  421b8e:	lea    rdi,[rip+0x19172]        # 43ad07 <flatcc_builder_padding_base@@Base+0x14d7>
  421b95:	lea    rsi,[rip+0x17f26]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  421b9c:	lea    rcx,[rip+0x190e1]        # 43ac84 <flatcc_builder_padding_base@@Base+0x1454>
  421ba3:	mov    edx,0x5b5
  421ba8:	call   406070 <__assert_fail@plt>
  421bad:	lea    rdi,[rip+0x190ce]        # 43ac82 <flatcc_builder_padding_base@@Base+0x1452>
  421bb4:	lea    rsi,[rip+0x17f07]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  421bbb:	lea    rcx,[rip+0x18f7f]        # 43ab41 <flatcc_builder_padding_base@@Base+0x1311>
  421bc2:	mov    edx,0x287
  421bc7:	call   406070 <__assert_fail@plt>
  421bcc:	lea    rdi,[rip+0x190af]        # 43ac82 <flatcc_builder_padding_base@@Base+0x1452>
  421bd3:	lea    rsi,[rip+0x17ee8]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  421bda:	lea    rcx,[rip+0x18f60]        # 43ab41 <flatcc_builder_padding_base@@Base+0x1311>
  421be1:	mov    edx,0x28b
  421be6:	call   406070 <__assert_fail@plt>
  421beb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000421bf0 <flatcc_builder_end_offset_vector_for_unions@@Base>:
  421bf0:	push   rbp
  421bf1:	push   rbx
  421bf2:	push   rax
  421bf3:	mov    rcx,QWORD PTR [rdi+0x30]
  421bf7:	movzx  edx,WORD PTR [rcx+0xe]
  421bfb:	cmp    edx,0x5
  421bfe:	jne    421c91 <flatcc_builder_end_offset_vector_for_unions@@Base+0xa1>
  421c04:	mov    rax,rsi
  421c07:	mov    rbx,rdi
  421c0a:	mov    rsi,QWORD PTR [rdi+0x18]
  421c0e:	mov    edx,DWORD PTR [rcx+0x14]
  421c11:	mov    rcx,rax
  421c14:	call   4219c0 <flatcc_builder_create_offset_vector_direct@@Base+0x10>
  421c19:	mov    ebp,eax
  421c1b:	test   eax,eax
  421c1d:	je     421c88 <flatcc_builder_end_offset_vector_for_unions@@Base+0x98>
  421c1f:	mov    rdi,QWORD PTR [rbx+0x18]
  421c23:	mov    edx,DWORD PTR [rbx+0x20]
  421c26:	xor    esi,esi
  421c28:	call   406080 <memset@plt>
  421c2d:	mov    rax,QWORD PTR [rbx+0x30]
  421c31:	mov    ecx,DWORD PTR [rax+0x8]
  421c34:	mov    DWORD PTR [rbx+0x20],ecx
  421c37:	mov    ecx,DWORD PTR [rax]
  421c39:	mov    DWORD PTR [rbx+0x28],ecx
  421c3c:	mov    edx,DWORD PTR [rax+0x4]
  421c3f:	mov    rsi,rcx
  421c42:	add    rsi,QWORD PTR [rbx+0x68]
  421c46:	mov    QWORD PTR [rbx+0x18],rsi
  421c4a:	mov    esi,DWORD PTR [rbx+0x70]
  421c4d:	sub    esi,ecx
  421c4f:	cmp    esi,edx
  421c51:	cmova  esi,edx
  421c54:	mov    DWORD PTR [rbx+0x24],esi
  421c57:	movzx  ecx,WORD PTR [rbx+0xea]
  421c5e:	cmp    WORD PTR [rbx+0xe8],cx
  421c65:	jae    421c6e <flatcc_builder_end_offset_vector_for_unions@@Base+0x7e>
  421c67:	mov    WORD PTR [rbx+0xe8],cx
  421c6e:	movzx  ecx,WORD PTR [rax+0xc]
  421c72:	mov    WORD PTR [rbx+0xea],cx
  421c79:	add    rax,0xffffffffffffffdc
  421c7d:	mov    QWORD PTR [rbx+0x30],rax
  421c81:	add    DWORD PTR [rbx+0x104],0xffffffff
  421c88:	mov    eax,ebp
  421c8a:	add    rsp,0x8
  421c8e:	pop    rbx
  421c8f:	pop    rbp
  421c90:	ret    
  421c91:	lea    rdi,[rip+0x18260]        # 439ef8 <flatcc_builder_padding_base@@Base+0x6c8>
  421c98:	lea    rsi,[rip+0x17e23]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  421c9f:	lea    rcx,[rip+0x188cb]        # 43a571 <flatcc_builder_padding_base@@Base+0xd41>
  421ca6:	mov    edx,0x5d5
  421cab:	call   406070 <__assert_fail@plt>

0000000000421cb0 <flatcc_builder_offset_vector_edit@@Base>:
  421cb0:	mov    rax,QWORD PTR [rdi+0x18]
  421cb4:	ret    
  421cb5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421cbf:	nop

0000000000421cc0 <flatcc_builder_offset_vector_count@@Base>:
  421cc0:	mov    rax,QWORD PTR [rdi+0x30]
  421cc4:	mov    eax,DWORD PTR [rax+0x14]
  421cc7:	ret    
  421cc8:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000421cd0 <flatcc_builder_table_add_union@@Base>:
  421cd0:	push   rbp
  421cd1:	push   r15
  421cd3:	push   r14
  421cd5:	push   rbx
  421cd6:	push   rax
  421cd7:	mov    rax,QWORD PTR [rdi+0x30]
  421cdb:	movzx  eax,WORD PTR [rax+0xe]
  421cdf:	cmp    eax,0x3
  421ce2:	jne    421d41 <flatcc_builder_table_add_union@@Base+0x71>
  421ce4:	mov    r14,rdx
  421ce7:	mov    ebp,esi
  421ce9:	mov    r15,rdi
  421cec:	mov    rbx,rdx
  421cef:	shr    rbx,0x20
  421cf3:	test   r14b,r14b
  421cf6:	jne    421cfc <flatcc_builder_table_add_union@@Base+0x2c>
  421cf8:	test   ebx,ebx
  421cfa:	jne    421d60 <flatcc_builder_table_add_union@@Base+0x90>
  421cfc:	test   ebx,ebx
  421cfe:	je     421d15 <flatcc_builder_table_add_union@@Base+0x45>
  421d00:	mov    rdi,r15
  421d03:	mov    esi,ebp
  421d05:	call   421dc0 <flatcc_builder_table_add_offset@@Base>
  421d0a:	test   rax,rax
  421d0d:	je     421d9e <flatcc_builder_table_add_union@@Base+0xce>
  421d13:	mov    DWORD PTR [rax],ebx
  421d15:	add    ebp,0xffffffff
  421d18:	mov    edx,0x1
  421d1d:	mov    ecx,0x1
  421d22:	mov    rdi,r15
  421d25:	mov    esi,ebp
  421d27:	call   421f20 <flatcc_builder_table_add@@Base>
  421d2c:	test   rax,rax
  421d2f:	je     421d7f <flatcc_builder_table_add_union@@Base+0xaf>
  421d31:	mov    BYTE PTR [rax],r14b
  421d34:	xor    eax,eax
  421d36:	add    rsp,0x8
  421d3a:	pop    rbx
  421d3b:	pop    r14
  421d3d:	pop    r15
  421d3f:	pop    rbp
  421d40:	ret    
  421d41:	lea    rdi,[rip+0x185a9]        # 43a2f1 <flatcc_builder_padding_base@@Base+0xac1>
  421d48:	lea    rsi,[rip+0x17d73]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  421d4f:	lea    rcx,[rip+0x1888d]        # 43a5e3 <flatcc_builder_padding_base@@Base+0xdb3>
  421d56:	mov    edx,0x5ee
  421d5b:	call   406070 <__assert_fail@plt>
  421d60:	lea    rdi,[rip+0x188d4]        # 43a63b <flatcc_builder_padding_base@@Base+0xe0b>
  421d67:	lea    rsi,[rip+0x17d54]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  421d6e:	lea    rcx,[rip+0x1886e]        # 43a5e3 <flatcc_builder_padding_base@@Base+0xdb3>
  421d75:	mov    edx,0x5ef
  421d7a:	call   406070 <__assert_fail@plt>
  421d7f:	lea    rdi,[rip+0x188e1]        # 43a667 <flatcc_builder_padding_base@@Base+0xe37>
  421d86:	lea    rsi,[rip+0x17d35]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  421d8d:	lea    rcx,[rip+0x1884f]        # 43a5e3 <flatcc_builder_padding_base@@Base+0xdb3>
  421d94:	mov    edx,0x5f6
  421d99:	call   406070 <__assert_fail@plt>
  421d9e:	lea    rdi,[rip+0x188b8]        # 43a65d <flatcc_builder_padding_base@@Base+0xe2d>
  421da5:	lea    rsi,[rip+0x17d16]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  421dac:	lea    rcx,[rip+0x18830]        # 43a5e3 <flatcc_builder_padding_base@@Base+0xdb3>
  421db3:	mov    edx,0x5f2
  421db8:	call   406070 <__assert_fail@plt>
  421dbd:	nop    DWORD PTR [rax]

0000000000421dc0 <flatcc_builder_table_add_offset@@Base>:
  421dc0:	push   rbp
  421dc1:	push   r15
  421dc3:	push   r14
  421dc5:	push   rbx
  421dc6:	push   rax
  421dc7:	mov    rax,QWORD PTR [rdi+0x30]
  421dcb:	movzx  eax,WORD PTR [rax+0xe]
  421dcf:	cmp    eax,0x3
  421dd2:	jne    421ebe <flatcc_builder_table_add_offset@@Base+0xfe>
  421dd8:	mov    r14d,esi
  421ddb:	cmp    esi,0x7ffd
  421de1:	jae    421edd <flatcc_builder_table_add_offset@@Base+0x11d>
  421de7:	mov    rbx,rdi
  421dea:	mov    rax,QWORD PTR [rdi+0x8]
  421dee:	movsxd rcx,r14d
  421df1:	cmp    WORD PTR [rax+rcx*2],0x0
  421df6:	jne    421efc <flatcc_builder_table_add_offset@@Base+0x13c>
  421dfc:	mov    ecx,DWORD PTR [rbx+0x14]
  421dff:	xor    ecx,r14d
  421e02:	imul   ecx,ecx,0x9e3779b1
  421e08:	xor    ecx,0x4
  421e0b:	imul   ecx,ecx,0x9e3779b1
  421e11:	mov    DWORD PTR [rbx+0x14],ecx
  421e14:	mov    ebp,DWORD PTR [rbx+0x20]
  421e17:	mov    ecx,DWORD PTR [rbx+0x24]
  421e1a:	add    ebp,0x3
  421e1d:	and    ebp,0xfffffffc
  421e20:	lea    r15,[rbp+0x4]
  421e24:	mov    DWORD PTR [rbx+0x20],r15d
  421e28:	cmp    ecx,r15d
  421e2b:	jae    421e87 <flatcc_builder_table_add_offset@@Base+0xc7>
  421e2d:	lea    eax,[rbp+0x4]
  421e30:	lea    rsi,[rbx+0x68]
  421e34:	mov    rdi,QWORD PTR [rbx+0x40]
  421e38:	mov    edx,DWORD PTR [rbx+0x28]
  421e3b:	add    rdx,rax
  421e3e:	mov    ecx,0x1
  421e43:	mov    r8d,0x1
  421e49:	call   QWORD PTR [rbx+0x50]
  421e4c:	test   eax,eax
  421e4e:	je     421e54 <flatcc_builder_table_add_offset@@Base+0x94>
  421e50:	xor    ebp,ebp
  421e52:	jmp    421eb0 <flatcc_builder_table_add_offset@@Base+0xf0>
  421e54:	mov    eax,DWORD PTR [rbx+0x28]
  421e57:	mov    rcx,rax
  421e5a:	add    rcx,QWORD PTR [rbx+0x68]
  421e5e:	mov    QWORD PTR [rbx+0x18],rcx
  421e62:	mov    ecx,DWORD PTR [rbx+0x70]
  421e65:	sub    ecx,eax
  421e67:	cmp    ecx,0xfffc
  421e6d:	mov    eax,0xfffc
  421e72:	cmovb  eax,ecx
  421e75:	mov    DWORD PTR [rbx+0x24],eax
  421e78:	mov    rax,QWORD PTR [rbx+0x30]
  421e7c:	mov    DWORD PTR [rax+0x4],0xfffc
  421e83:	mov    rax,QWORD PTR [rbx+0x8]
  421e87:	movzx  ecx,r14w
  421e8b:	mov    WORD PTR [rax+rcx*2],r15w
  421e90:	cmp    WORD PTR [rbx+0x10],cx
  421e94:	ja     421e9f <flatcc_builder_table_add_offset@@Base+0xdf>
  421e96:	add    r14d,0x1
  421e9a:	mov    WORD PTR [rbx+0x10],r14w
  421e9f:	mov    rax,QWORD PTR [rbx]
  421ea2:	lea    rcx,[rax+0x2]
  421ea6:	mov    QWORD PTR [rbx],rcx
  421ea9:	mov    WORD PTR [rax],bp
  421eac:	add    rbp,QWORD PTR [rbx+0x18]
  421eb0:	mov    rax,rbp
  421eb3:	add    rsp,0x8
  421eb7:	pop    rbx
  421eb8:	pop    r14
  421eba:	pop    r15
  421ebc:	pop    rbp
  421ebd:	ret    
  421ebe:	lea    rdi,[rip+0x1842c]        # 43a2f1 <flatcc_builder_padding_base@@Base+0xac1>
  421ec5:	lea    rsi,[rip+0x17bf6]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  421ecc:	lea    rcx,[rip+0x18b12]        # 43a9e5 <flatcc_builder_padding_base@@Base+0x11b5>
  421ed3:	mov    edx,0x713
  421ed8:	call   406070 <__assert_fail@plt>
  421edd:	lea    rdi,[rip+0x18a81]        # 43a965 <flatcc_builder_padding_base@@Base+0x1135>
  421ee4:	lea    rsi,[rip+0x17bd7]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  421eeb:	lea    rcx,[rip+0x18af3]        # 43a9e5 <flatcc_builder_padding_base@@Base+0x11b5>
  421ef2:	mov    edx,0x714
  421ef7:	call   406070 <__assert_fail@plt>
  421efc:	lea    rdi,[rip+0x18d7f]        # 43ac82 <flatcc_builder_padding_base@@Base+0x1452>
  421f03:	lea    rsi,[rip+0x17bb8]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  421f0a:	lea    rcx,[rip+0x18ad4]        # 43a9e5 <flatcc_builder_padding_base@@Base+0x11b5>
  421f11:	mov    edx,0x71b
  421f16:	call   406070 <__assert_fail@plt>
  421f1b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000421f20 <flatcc_builder_table_add@@Base>:
  421f20:	push   rbp
  421f21:	push   r14
  421f23:	push   rbx
  421f24:	mov    rax,QWORD PTR [rdi+0x30]
  421f28:	movzx  eax,WORD PTR [rax+0xe]
  421f2c:	cmp    eax,0x3
  421f2f:	jne    42201c <flatcc_builder_table_add@@Base+0xfc>
  421f35:	mov    r14d,esi
  421f38:	cmp    esi,0x7ffd
  421f3e:	jae    42203b <flatcc_builder_table_add@@Base+0x11b>
  421f44:	mov    rbx,rdi
  421f47:	cmp    WORD PTR [rdi+0xea],cx
  421f4e:	jae    421f57 <flatcc_builder_table_add@@Base+0x37>
  421f50:	mov    WORD PTR [rbx+0xea],cx
  421f57:	mov    rsi,QWORD PTR [rbx+0x8]
  421f5b:	movsxd rax,r14d
  421f5e:	cmp    WORD PTR [rsi+rax*2],0x0
  421f63:	jne    42205a <flatcc_builder_table_add@@Base+0x13a>
  421f69:	mov    eax,DWORD PTR [rbx+0x14]
  421f6c:	xor    eax,r14d
  421f6f:	imul   eax,eax,0x9e3779b1
  421f75:	xor    eax,edx
  421f77:	imul   eax,eax,0x9e3779b1
  421f7d:	mov    DWORD PTR [rbx+0x14],eax
  421f80:	mov    eax,DWORD PTR [rbx+0x20]
  421f83:	movzx  ebp,cx
  421f86:	lea    eax,[rax+rbp*1]
  421f89:	add    eax,0xffffffff
  421f8c:	neg    ebp
  421f8e:	and    ebp,eax
  421f90:	add    edx,ebp
  421f92:	mov    DWORD PTR [rbx+0x20],edx
  421f95:	cmp    edx,DWORD PTR [rbx+0x24]
  421f98:	jb     421ff7 <flatcc_builder_table_add@@Base+0xd7>
  421f9a:	add    edx,0x1
  421f9d:	lea    rsi,[rbx+0x68]
  421fa1:	mov    rdi,QWORD PTR [rbx+0x40]
  421fa5:	mov    eax,DWORD PTR [rbx+0x28]
  421fa8:	add    rax,rdx
  421fab:	mov    ecx,0x1
  421fb0:	mov    r8d,0x1
  421fb6:	mov    rdx,rax
  421fb9:	call   QWORD PTR [rbx+0x50]
  421fbc:	test   eax,eax
  421fbe:	je     421fc4 <flatcc_builder_table_add@@Base+0xa4>
  421fc0:	xor    eax,eax
  421fc2:	jmp    422017 <flatcc_builder_table_add@@Base+0xf7>
  421fc4:	mov    eax,DWORD PTR [rbx+0x28]
  421fc7:	mov    rcx,rax
  421fca:	add    rcx,QWORD PTR [rbx+0x68]
  421fce:	mov    QWORD PTR [rbx+0x18],rcx
  421fd2:	mov    ecx,DWORD PTR [rbx+0x70]
  421fd5:	sub    ecx,eax
  421fd7:	cmp    ecx,0xfffc
  421fdd:	mov    eax,0xfffc
  421fe2:	cmovb  eax,ecx
  421fe5:	mov    DWORD PTR [rbx+0x24],eax
  421fe8:	mov    rax,QWORD PTR [rbx+0x30]
  421fec:	mov    DWORD PTR [rax+0x4],0xfffc
  421ff3:	mov    rsi,QWORD PTR [rbx+0x8]
  421ff7:	mov    eax,ebp
  421ff9:	add    ebp,0x4
  421ffc:	movzx  ecx,r14w
  422000:	mov    WORD PTR [rsi+rcx*2],bp
  422004:	cmp    WORD PTR [rbx+0x10],cx
  422008:	ja     422013 <flatcc_builder_table_add@@Base+0xf3>
  42200a:	add    r14d,0x1
  42200e:	mov    WORD PTR [rbx+0x10],r14w
  422013:	add    rax,QWORD PTR [rbx+0x18]
  422017:	pop    rbx
  422018:	pop    r14
  42201a:	pop    rbp
  42201b:	ret    
  42201c:	lea    rdi,[rip+0x182ce]        # 43a2f1 <flatcc_builder_padding_base@@Base+0xac1>
  422023:	lea    rsi,[rip+0x17a98]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  42202a:	lea    rcx,[rip+0x188ea]        # 43a91b <flatcc_builder_padding_base@@Base+0x10eb>
  422031:	mov    edx,0x6ed
  422036:	call   406070 <__assert_fail@plt>
  42203b:	lea    rdi,[rip+0x18923]        # 43a965 <flatcc_builder_padding_base@@Base+0x1135>
  422042:	lea    rsi,[rip+0x17a79]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  422049:	lea    rcx,[rip+0x188cb]        # 43a91b <flatcc_builder_padding_base@@Base+0x10eb>
  422050:	mov    edx,0x6ee
  422055:	call   406070 <__assert_fail@plt>
  42205a:	lea    rdi,[rip+0x18c21]        # 43ac82 <flatcc_builder_padding_base@@Base+0x1452>
  422061:	lea    rsi,[rip+0x17a5a]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  422068:	lea    rcx,[rip+0x188ac]        # 43a91b <flatcc_builder_padding_base@@Base+0x10eb>
  42206f:	mov    edx,0x6f8
  422074:	call   406070 <__assert_fail@plt>
  422079:	nop    DWORD PTR [rax+0x0]

0000000000422080 <flatcc_builder_table_add_union_vector@@Base>:
  422080:	push   r15
  422082:	push   r14
  422084:	push   r12
  422086:	push   rbx
  422087:	push   rax
  422088:	mov    rax,QWORD PTR [rdi+0x30]
  42208c:	movzx  eax,WORD PTR [rax+0xe]
  422090:	cmp    eax,0x3
  422093:	jne    4220e9 <flatcc_builder_table_add_union_vector@@Base+0x69>
  422095:	mov    rbx,rdx
  422098:	mov    r12,rdx
  42209b:	shr    r12,0x20
  42209f:	test   ebx,ebx
  4220a1:	sete   al
  4220a4:	test   r12d,r12d
  4220a7:	sete   cl
  4220aa:	cmp    al,cl
  4220ac:	jne    422108 <flatcc_builder_table_add_union_vector@@Base+0x88>
  4220ae:	test   ebx,ebx
  4220b0:	je     4220db <flatcc_builder_table_add_union_vector@@Base+0x5b>
  4220b2:	mov    r14d,esi
  4220b5:	mov    r15,rdi
  4220b8:	lea    esi,[r14-0x1]
  4220bc:	call   421dc0 <flatcc_builder_table_add_offset@@Base>
  4220c1:	test   rax,rax
  4220c4:	je     422127 <flatcc_builder_table_add_union_vector@@Base+0xa7>
  4220c6:	mov    DWORD PTR [rax],ebx
  4220c8:	mov    rdi,r15
  4220cb:	mov    esi,r14d
  4220ce:	call   421dc0 <flatcc_builder_table_add_offset@@Base>
  4220d3:	test   rax,rax
  4220d6:	je     422146 <flatcc_builder_table_add_union_vector@@Base+0xc6>
  4220d8:	mov    DWORD PTR [rax],r12d
  4220db:	xor    eax,eax
  4220dd:	add    rsp,0x8
  4220e1:	pop    rbx
  4220e2:	pop    r12
  4220e4:	pop    r14
  4220e6:	pop    r15
  4220e8:	ret    
  4220e9:	lea    rdi,[rip+0x18201]        # 43a2f1 <flatcc_builder_padding_base@@Base+0xac1>
  4220f0:	lea    rsi,[rip+0x179cb]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  4220f7:	lea    rcx,[rip+0x18575]        # 43a673 <flatcc_builder_padding_base@@Base+0xe43>
  4220fe:	mov    edx,0x600
  422103:	call   406070 <__assert_fail@plt>
  422108:	lea    rdi,[rip+0x185c7]        # 43a6d6 <flatcc_builder_padding_base@@Base+0xea6>
  42210f:	lea    rsi,[rip+0x179ac]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  422116:	lea    rcx,[rip+0x18556]        # 43a673 <flatcc_builder_padding_base@@Base+0xe43>
  42211d:	mov    edx,0x601
  422122:	call   406070 <__assert_fail@plt>
  422127:	lea    rdi,[rip+0x1852f]        # 43a65d <flatcc_builder_padding_base@@Base+0xe2d>
  42212e:	lea    rsi,[rip+0x1798d]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  422135:	lea    rcx,[rip+0x18537]        # 43a673 <flatcc_builder_padding_base@@Base+0xe43>
  42213c:	mov    edx,0x604
  422141:	call   406070 <__assert_fail@plt>
  422146:	lea    rdi,[rip+0x18510]        # 43a65d <flatcc_builder_padding_base@@Base+0xe2d>
  42214d:	lea    rsi,[rip+0x1796e]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  422154:	lea    rcx,[rip+0x18518]        # 43a673 <flatcc_builder_padding_base@@Base+0xe43>
  42215b:	mov    edx,0x608
  422160:	call   406070 <__assert_fail@plt>
  422165:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42216f:	nop

0000000000422170 <flatcc_builder_create_union_vector@@Base>:
  422170:	push   r15
  422172:	push   r14
  422174:	push   r13
  422176:	push   r12
  422178:	push   rbx
  422179:	mov    r14,rdx
  42217c:	mov    r15,rsi
  42217f:	mov    rbx,rdi
  422182:	mov    esi,0x4
  422187:	call   41f9b0 <flatcc_builder_start_buffer@@Base+0xe0>
  42218c:	test   eax,eax
  42218e:	je     4221a0 <flatcc_builder_create_union_vector@@Base+0x30>
  422190:	xor    r14d,r14d
  422193:	mov    rax,r14
  422196:	pop    rbx
  422197:	pop    r12
  422199:	pop    r13
  42219b:	pop    r14
  42219d:	pop    r15
  42219f:	ret    
  4221a0:	mov    rax,QWORD PTR [rbx+0x30]
  4221a4:	mov    DWORD PTR [rax+0x10],0x4
  4221ab:	mov    rax,QWORD PTR [rbx+0x30]
  4221af:	mov    DWORD PTR [rax+0x14],0x0
  4221b6:	mov    rax,QWORD PTR [rbx+0x30]
  4221ba:	mov    WORD PTR [rax+0xe],0x5
  4221c0:	mov    ecx,DWORD PTR [rbx+0x28]
  4221c3:	mov    edx,DWORD PTR [rbx+0x70]
  4221c6:	sub    edx,ecx
  4221c8:	add    rcx,QWORD PTR [rbx+0x68]
  4221cc:	mov    QWORD PTR [rbx+0x18],rcx
  4221d0:	cmp    edx,0xfffffffc
  4221d3:	mov    ecx,0xfffffffc
  4221d8:	cmovb  ecx,edx
  4221db:	mov    DWORD PTR [rbx+0x24],ecx
  4221de:	mov    DWORD PTR [rax+0x4],0xfffffffc
  4221e5:	mov    ecx,DWORD PTR [rax+0x14]
  4221e8:	add    ecx,r14d
  4221eb:	jb     42245a <flatcc_builder_create_union_vector@@Base+0x2ea>
  4221f1:	cmp    ecx,0x40000000
  4221f7:	jae    42245a <flatcc_builder_create_union_vector@@Base+0x2ea>
  4221fd:	mov    DWORD PTR [rax+0x14],ecx
  422200:	mov    r12d,DWORD PTR [rbx+0x20]
  422204:	mov    eax,DWORD PTR [rbx+0x24]
  422207:	lea    ecx,[r12+r14*4]
  42220b:	mov    DWORD PTR [rbx+0x20],ecx
  42220e:	cmp    ecx,eax
  422210:	jae    422220 <flatcc_builder_create_union_vector@@Base+0xb0>
  422212:	mov    rsi,QWORD PTR [rbx+0x18]
  422216:	add    r12,rsi
  422219:	jne    42227c <flatcc_builder_create_union_vector@@Base+0x10c>
  42221b:	jmp    422190 <flatcc_builder_create_union_vector@@Base+0x20>
  422220:	add    ecx,0x1
  422223:	lea    rsi,[rbx+0x68]
  422227:	mov    rdi,QWORD PTR [rbx+0x40]
  42222b:	mov    edx,DWORD PTR [rbx+0x28]
  42222e:	add    rdx,rcx
  422231:	mov    ecx,0x1
  422236:	mov    r8d,0x1
  42223c:	call   QWORD PTR [rbx+0x50]
  42223f:	test   eax,eax
  422241:	jne    422190 <flatcc_builder_create_union_vector@@Base+0x20>
  422247:	mov    eax,DWORD PTR [rbx+0x28]
  42224a:	mov    rsi,rax
  42224d:	add    rsi,QWORD PTR [rbx+0x68]
  422251:	mov    QWORD PTR [rbx+0x18],rsi
  422255:	mov    ecx,DWORD PTR [rbx+0x70]
  422258:	sub    ecx,eax
  42225a:	cmp    ecx,0xfffffffc
  42225d:	mov    eax,0xfffffffc
  422262:	cmovb  eax,ecx
  422265:	mov    DWORD PTR [rbx+0x24],eax
  422268:	mov    rcx,QWORD PTR [rbx+0x30]
  42226c:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  422273:	add    r12,rsi
  422276:	je     422190 <flatcc_builder_create_union_vector@@Base+0x20>
  42227c:	mov    r13d,DWORD PTR [rbx+0x20]
  422280:	lea    ecx,[r14+r13*1]
  422284:	mov    DWORD PTR [rbx+0x20],ecx
  422287:	cmp    ecx,eax
  422289:	jb     4222de <flatcc_builder_create_union_vector@@Base+0x16e>
  42228b:	add    ecx,0x1
  42228e:	lea    rsi,[rbx+0x68]
  422292:	mov    rdi,QWORD PTR [rbx+0x40]
  422296:	mov    edx,DWORD PTR [rbx+0x28]
  422299:	add    rdx,rcx
  42229c:	mov    ecx,0x1
  4222a1:	mov    r8d,0x1
  4222a7:	call   QWORD PTR [rbx+0x50]
  4222aa:	test   eax,eax
  4222ac:	jne    422190 <flatcc_builder_create_union_vector@@Base+0x20>
  4222b2:	mov    eax,DWORD PTR [rbx+0x28]
  4222b5:	mov    rsi,rax
  4222b8:	add    rsi,QWORD PTR [rbx+0x68]
  4222bc:	mov    QWORD PTR [rbx+0x18],rsi
  4222c0:	mov    ecx,DWORD PTR [rbx+0x70]
  4222c3:	sub    ecx,eax
  4222c5:	cmp    ecx,0xfffffffc
  4222c8:	mov    eax,0xfffffffc
  4222cd:	cmovb  eax,ecx
  4222d0:	mov    DWORD PTR [rbx+0x24],eax
  4222d3:	mov    rax,QWORD PTR [rbx+0x30]
  4222d7:	mov    DWORD PTR [rax+0x4],0xfffffffc
  4222de:	mov    r12,rsi
  4222e1:	add    r12,r13
  4222e4:	je     422190 <flatcc_builder_create_union_vector@@Base+0x20>
  4222ea:	test   r14,r14
  4222ed:	je     4223a9 <flatcc_builder_create_union_vector@@Base+0x239>
  4222f3:	lea    rcx,[r14-0x1]
  4222f7:	mov    r8d,r14d
  4222fa:	and    r8d,0x3
  4222fe:	cmp    rcx,0x3
  422302:	jae    422310 <flatcc_builder_create_union_vector@@Base+0x1a0>
  422304:	xor    ecx,ecx
  422306:	test   r8,r8
  422309:	jne    422377 <flatcc_builder_create_union_vector@@Base+0x207>
  42230b:	jmp    4223a9 <flatcc_builder_create_union_vector@@Base+0x239>
  422310:	mov    rdx,r14
  422313:	sub    rdx,r8
  422316:	lea    rdi,[rsi+r13*1]
  42231a:	add    rdi,0x3
  42231e:	xor    ecx,ecx
  422320:	movzx  eax,BYTE PTR [r15+rcx*8]
  422325:	mov    BYTE PTR [rdi+rcx*1-0x3],al
  422329:	mov    eax,DWORD PTR [r15+rcx*8+0x4]
  42232e:	mov    DWORD PTR [rsi+rcx*4],eax
  422331:	movzx  eax,BYTE PTR [r15+rcx*8+0x8]
  422337:	mov    BYTE PTR [rdi+rcx*1-0x2],al
  42233b:	mov    eax,DWORD PTR [r15+rcx*8+0xc]
  422340:	mov    DWORD PTR [rsi+rcx*4+0x4],eax
  422344:	movzx  eax,BYTE PTR [r15+rcx*8+0x10]
  42234a:	mov    BYTE PTR [rdi+rcx*1-0x1],al
  42234e:	mov    eax,DWORD PTR [r15+rcx*8+0x14]
  422353:	mov    DWORD PTR [rsi+rcx*4+0x8],eax
  422357:	movzx  eax,BYTE PTR [r15+rcx*8+0x18]
  42235d:	mov    BYTE PTR [rdi+rcx*1],al
  422360:	mov    eax,DWORD PTR [r15+rcx*8+0x1c]
  422365:	mov    DWORD PTR [rsi+rcx*4+0xc],eax
  422369:	add    rcx,0x4
  42236d:	cmp    rdx,rcx
  422370:	jne    422320 <flatcc_builder_create_union_vector@@Base+0x1b0>
  422372:	test   r8,r8
  422375:	je     4223a9 <flatcc_builder_create_union_vector@@Base+0x239>
  422377:	lea    rdx,[rsi+rcx*4]
  42237b:	lea    rdi,[r15+rcx*8]
  42237f:	add    rdi,0x4
  422383:	add    r13,rcx
  422386:	add    r13,rsi
  422389:	xor    ecx,ecx
  42238b:	nop    DWORD PTR [rax+rax*1+0x0]
  422390:	movzx  eax,BYTE PTR [rdi+rcx*8-0x4]
  422395:	mov    BYTE PTR [r13+rcx*1+0x0],al
  42239a:	mov    eax,DWORD PTR [rdi+rcx*8]
  42239d:	mov    DWORD PTR [rdx+rcx*4],eax
  4223a0:	add    rcx,0x1
  4223a4:	cmp    r8,rcx
  4223a7:	jne    422390 <flatcc_builder_create_union_vector@@Base+0x220>
  4223a9:	mov    rdi,rbx
  4223ac:	mov    rdx,r14
  4223af:	mov    rcx,r12
  4223b2:	call   4219c0 <flatcc_builder_create_offset_vector_direct@@Base+0x10>
  4223b7:	mov    r15d,eax
  4223ba:	test   eax,eax
  4223bc:	je     4223e2 <flatcc_builder_create_union_vector@@Base+0x272>
  4223be:	mov    ecx,0x1
  4223c3:	mov    r8d,0x1
  4223c9:	mov    r9d,0xffffffff
  4223cf:	mov    rdi,rbx
  4223d2:	mov    rsi,r12
  4223d5:	mov    rdx,r14
  4223d8:	call   421740 <flatcc_builder_create_vector@@Base>
  4223dd:	mov    r14d,eax
  4223e0:	jmp    4223e5 <flatcc_builder_create_union_vector@@Base+0x275>
  4223e2:	xor    r14d,r14d
  4223e5:	shl    r15,0x20
  4223e9:	mov    rdi,QWORD PTR [rbx+0x18]
  4223ed:	mov    edx,DWORD PTR [rbx+0x20]
  4223f0:	xor    esi,esi
  4223f2:	call   406080 <memset@plt>
  4223f7:	mov    rax,QWORD PTR [rbx+0x30]
  4223fb:	mov    ecx,DWORD PTR [rax+0x8]
  4223fe:	mov    DWORD PTR [rbx+0x20],ecx
  422401:	mov    ecx,DWORD PTR [rax]
  422403:	mov    DWORD PTR [rbx+0x28],ecx
  422406:	mov    edx,DWORD PTR [rax+0x4]
  422409:	mov    rsi,rcx
  42240c:	add    rsi,QWORD PTR [rbx+0x68]
  422410:	mov    QWORD PTR [rbx+0x18],rsi
  422414:	mov    esi,DWORD PTR [rbx+0x70]
  422417:	sub    esi,ecx
  422419:	cmp    esi,edx
  42241b:	cmova  esi,edx
  42241e:	mov    DWORD PTR [rbx+0x24],esi
  422421:	movzx  ecx,WORD PTR [rbx+0xea]
  422428:	cmp    WORD PTR [rbx+0xe8],cx
  42242f:	jae    422438 <flatcc_builder_create_union_vector@@Base+0x2c8>
  422431:	mov    WORD PTR [rbx+0xe8],cx
  422438:	or     r14,r15
  42243b:	movzx  ecx,WORD PTR [rax+0xc]
  42243f:	mov    WORD PTR [rbx+0xea],cx
  422446:	add    rax,0xffffffffffffffdc
  42244a:	mov    QWORD PTR [rbx+0x30],rax
  42244e:	add    DWORD PTR [rbx+0x104],0xffffffff
  422455:	jmp    422193 <flatcc_builder_create_union_vector@@Base+0x23>
  42245a:	lea    rdi,[rip+0x1872a]        # 43ab8b <flatcc_builder_padding_base@@Base+0x135b>
  422461:	lea    rsi,[rip+0x1765a]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  422468:	lea    rcx,[rip+0x18737]        # 43aba6 <flatcc_builder_padding_base@@Base+0x1376>
  42246f:	mov    edx,0x37c
  422474:	call   406070 <__assert_fail@plt>
  422479:	nop    DWORD PTR [rax+0x0]

0000000000422480 <flatcc_builder_create_union_vector_direct@@Base>:
  422480:	push   r15
  422482:	push   r14
  422484:	push   r12
  422486:	push   rbx
  422487:	push   rax
  422488:	mov    r14,rcx
  42248b:	mov    r15,rsi
  42248e:	mov    r12,rdi
  422491:	mov    rsi,rdx
  422494:	mov    rdx,rcx
  422497:	mov    rcx,r15
  42249a:	call   4219c0 <flatcc_builder_create_offset_vector_direct@@Base+0x10>
  42249f:	mov    ebx,eax
  4224a1:	test   eax,eax
  4224a3:	je     4224c8 <flatcc_builder_create_union_vector_direct@@Base+0x48>
  4224a5:	mov    ecx,0x1
  4224aa:	mov    r8d,0x1
  4224b0:	mov    r9d,0xffffffff
  4224b6:	mov    rdi,r12
  4224b9:	mov    rsi,r15
  4224bc:	mov    rdx,r14
  4224bf:	call   421740 <flatcc_builder_create_vector@@Base>
  4224c4:	mov    eax,eax
  4224c6:	jmp    4224ca <flatcc_builder_create_union_vector_direct@@Base+0x4a>
  4224c8:	xor    eax,eax
  4224ca:	shl    rbx,0x20
  4224ce:	or     rbx,rax
  4224d1:	mov    rax,rbx
  4224d4:	add    rsp,0x8
  4224d8:	pop    rbx
  4224d9:	pop    r12
  4224db:	pop    r14
  4224dd:	pop    r15
  4224df:	ret    

00000000004224e0 <flatcc_builder_start_union_vector@@Base>:
  4224e0:	push   rbx
  4224e1:	mov    rbx,rdi
  4224e4:	mov    esi,0x4
  4224e9:	call   41f9b0 <flatcc_builder_start_buffer@@Base+0xe0>
  4224ee:	mov    ecx,eax
  4224f0:	mov    eax,0xffffffff
  4224f5:	test   ecx,ecx
  4224f7:	je     4224fb <flatcc_builder_start_union_vector@@Base+0x1b>
  4224f9:	pop    rbx
  4224fa:	ret    
  4224fb:	mov    rax,QWORD PTR [rbx+0x30]
  4224ff:	mov    DWORD PTR [rax+0x10],0x8
  422506:	mov    rax,QWORD PTR [rbx+0x30]
  42250a:	mov    DWORD PTR [rax+0x14],0x0
  422511:	mov    rax,QWORD PTR [rbx+0x30]
  422515:	mov    WORD PTR [rax+0xe],0x7
  42251b:	mov    ecx,DWORD PTR [rbx+0x28]
  42251e:	mov    edx,DWORD PTR [rbx+0x70]
  422521:	sub    edx,ecx
  422523:	add    rcx,QWORD PTR [rbx+0x68]
  422527:	mov    QWORD PTR [rbx+0x18],rcx
  42252b:	cmp    edx,0xfffffffc
  42252e:	mov    ecx,0xfffffffc
  422533:	cmovb  ecx,edx
  422536:	mov    DWORD PTR [rbx+0x24],ecx
  422539:	mov    DWORD PTR [rax+0x4],0xfffffffc
  422540:	xor    eax,eax
  422542:	pop    rbx
  422543:	ret    
  422544:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42254e:	xchg   ax,ax

0000000000422550 <flatcc_builder_end_union_vector@@Base>:
  422550:	push   rbp
  422551:	push   r15
  422553:	push   r14
  422555:	push   r13
  422557:	push   r12
  422559:	push   rbx
  42255a:	push   rax
  42255b:	mov    rax,QWORD PTR [rdi+0x30]
  42255f:	movzx  ecx,WORD PTR [rax+0xe]
  422563:	cmp    ecx,0x7
  422566:	jne    422966 <flatcc_builder_end_union_vector@@Base+0x416>
  42256c:	mov    r13,rdi
  42256f:	mov    r14d,DWORD PTR [rax+0x14]
  422573:	lea    eax,[r14+r14*4]
  422577:	mov    r12d,DWORD PTR [rdi+0x20]
  42257b:	add    eax,r12d
  42257e:	mov    DWORD PTR [rdi+0x20],eax
  422581:	cmp    eax,DWORD PTR [rdi+0x24]
  422584:	jae    42258c <flatcc_builder_end_union_vector@@Base+0x3c>
  422586:	mov    r8,QWORD PTR [r13+0x18]
  42258a:	jmp    4225e4 <flatcc_builder_end_union_vector@@Base+0x94>
  42258c:	add    eax,0x1
  42258f:	lea    rsi,[r13+0x68]
  422593:	mov    rdi,QWORD PTR [r13+0x40]
  422597:	mov    edx,DWORD PTR [r13+0x28]
  42259b:	add    rdx,rax
  42259e:	mov    ecx,0x1
  4225a3:	mov    r8d,0x1
  4225a9:	call   QWORD PTR [r13+0x50]
  4225ad:	test   eax,eax
  4225af:	jne    422726 <flatcc_builder_end_union_vector@@Base+0x1d6>
  4225b5:	mov    eax,DWORD PTR [r13+0x28]
  4225b9:	mov    r8,rax
  4225bc:	add    r8,QWORD PTR [r13+0x68]
  4225c0:	mov    QWORD PTR [r13+0x18],r8
  4225c4:	mov    ecx,DWORD PTR [r13+0x70]
  4225c8:	sub    ecx,eax
  4225ca:	cmp    ecx,0xfffffffc
  4225cd:	mov    eax,0xfffffffc
  4225d2:	cmovb  eax,ecx
  4225d5:	mov    DWORD PTR [r13+0x24],eax
  4225d9:	mov    rax,QWORD PTR [r13+0x30]
  4225dd:	mov    DWORD PTR [rax+0x4],0xfffffffc
  4225e4:	mov    rsi,r8
  4225e7:	add    rsi,r12
  4225ea:	je     422726 <flatcc_builder_end_union_vector@@Base+0x1d6>
  4225f0:	lea    r15,[rsi+r14*4]
  4225f4:	test   r14d,r14d
  4225f7:	je     4226ea <flatcc_builder_end_union_vector@@Base+0x19a>
  4225fd:	cmp    r14d,0x9
  422601:	jae    4227ba <flatcc_builder_end_union_vector@@Base+0x26a>
  422607:	xor    r9d,r9d
  42260a:	mov    r11d,r14d
  42260d:	sub    r11d,r9d
  422610:	mov    r10,r9
  422613:	not    r10
  422616:	add    r10,r14
  422619:	and    r11,0x3
  42261d:	je     422662 <flatcc_builder_end_union_vector@@Base+0x112>
  42261f:	mov    rdx,r9
  422622:	neg    rdx
  422625:	lea    rbp,[r12+r9*4]
  422629:	add    rbp,r8
  42262c:	lea    rbx,[r8+r9*8]
  422630:	add    rbx,0x4
  422634:	lea    rax,[r9+r14*4]
  422638:	add    rax,r12
  42263b:	add    rax,r8
  42263e:	xor    edi,edi
  422640:	movzx  ecx,BYTE PTR [rbx+rdi*8-0x4]
  422645:	mov    BYTE PTR [rax+rdi*1],cl
  422648:	mov    ecx,DWORD PTR [rbx+rdi*8]
  42264b:	mov    DWORD PTR [rbp+rdi*4+0x0],ecx
  42264f:	add    rdx,0xffffffffffffffff
  422653:	add    rdi,0x1
  422657:	cmp    r11,rdi
  42265a:	jne    422640 <flatcc_builder_end_union_vector@@Base+0xf0>
  42265c:	neg    rdx
  42265f:	mov    r9,rdx
  422662:	cmp    r10,0x3
  422666:	jb     4226ea <flatcc_builder_end_union_vector@@Base+0x19a>
  42266c:	mov    rbp,r14
  42266f:	sub    rbp,r9
  422672:	lea    rcx,[r12+r9*4]
  422676:	lea    rdx,[r8+rcx*1]
  42267a:	add    rdx,0xc
  42267e:	lea    rdi,[r8+r9*8]
  422682:	add    rdi,0x1c
  422686:	lea    rcx,[r9+r14*4]
  42268a:	add    rcx,r12
  42268d:	add    rcx,r8
  422690:	add    rcx,0x3
  422694:	xor    ebx,ebx
  422696:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4226a0:	movzx  eax,BYTE PTR [rdi+rbx*8-0x1c]
  4226a5:	mov    BYTE PTR [rcx+rbx*1-0x3],al
  4226a9:	mov    eax,DWORD PTR [rdi+rbx*8-0x18]
  4226ad:	mov    DWORD PTR [rdx+rbx*4-0xc],eax
  4226b1:	movzx  eax,BYTE PTR [rdi+rbx*8-0x14]
  4226b6:	mov    BYTE PTR [rcx+rbx*1-0x2],al
  4226ba:	mov    eax,DWORD PTR [rdi+rbx*8-0x10]
  4226be:	mov    DWORD PTR [rdx+rbx*4-0x8],eax
  4226c2:	movzx  eax,BYTE PTR [rdi+rbx*8-0xc]
  4226c7:	mov    BYTE PTR [rcx+rbx*1-0x1],al
  4226cb:	mov    eax,DWORD PTR [rdi+rbx*8-0x8]
  4226cf:	mov    DWORD PTR [rdx+rbx*4-0x4],eax
  4226d3:	movzx  eax,BYTE PTR [rdi+rbx*8-0x4]
  4226d8:	mov    BYTE PTR [rcx+rbx*1],al
  4226db:	mov    eax,DWORD PTR [rdi+rbx*8]
  4226de:	mov    DWORD PTR [rdx+rbx*4],eax
  4226e1:	add    rbx,0x4
  4226e5:	cmp    rbp,rbx
  4226e8:	jne    4226a0 <flatcc_builder_end_union_vector@@Base+0x150>
  4226ea:	mov    rdi,r13
  4226ed:	mov    rdx,r14
  4226f0:	mov    rcx,r15
  4226f3:	vzeroupper 
  4226f6:	call   4219c0 <flatcc_builder_create_offset_vector_direct@@Base+0x10>
  4226fb:	mov    r12d,eax
  4226fe:	test   eax,eax
  422700:	je     42272b <flatcc_builder_end_union_vector@@Base+0x1db>
  422702:	mov    ecx,0x1
  422707:	mov    r8d,0x1
  42270d:	mov    r9d,0xffffffff
  422713:	mov    rdi,r13
  422716:	mov    rsi,r15
  422719:	mov    rdx,r14
  42271c:	call   421740 <flatcc_builder_create_vector@@Base>
  422721:	mov    r14d,eax
  422724:	jmp    42272e <flatcc_builder_end_union_vector@@Base+0x1de>
  422726:	xor    r14d,r14d
  422729:	jmp    4227a8 <flatcc_builder_end_union_vector@@Base+0x258>
  42272b:	xor    r14d,r14d
  42272e:	shl    r12,0x20
  422732:	mov    rdi,QWORD PTR [r13+0x18]
  422736:	mov    edx,DWORD PTR [r13+0x20]
  42273a:	xor    esi,esi
  42273c:	call   406080 <memset@plt>
  422741:	mov    rax,QWORD PTR [r13+0x30]
  422745:	mov    ecx,DWORD PTR [rax+0x8]
  422748:	mov    DWORD PTR [r13+0x20],ecx
  42274c:	mov    ecx,DWORD PTR [rax]
  42274e:	mov    DWORD PTR [r13+0x28],ecx
  422752:	mov    edx,DWORD PTR [rax+0x4]
  422755:	mov    rsi,rcx
  422758:	add    rsi,QWORD PTR [r13+0x68]
  42275c:	mov    QWORD PTR [r13+0x18],rsi
  422760:	mov    esi,DWORD PTR [r13+0x70]
  422764:	sub    esi,ecx
  422766:	cmp    esi,edx
  422768:	cmova  esi,edx
  42276b:	mov    DWORD PTR [r13+0x24],esi
  42276f:	movzx  ecx,WORD PTR [r13+0xea]
  422777:	cmp    WORD PTR [r13+0xe8],cx
  42277f:	jae    422789 <flatcc_builder_end_union_vector@@Base+0x239>
  422781:	mov    WORD PTR [r13+0xe8],cx
  422789:	or     r14,r12
  42278c:	movzx  ecx,WORD PTR [rax+0xc]
  422790:	mov    WORD PTR [r13+0xea],cx
  422798:	add    rax,0xffffffffffffffdc
  42279c:	mov    QWORD PTR [r13+0x30],rax
  4227a0:	add    DWORD PTR [r13+0x104],0xffffffff
  4227a8:	mov    rax,r14
  4227ab:	add    rsp,0x8
  4227af:	pop    rbx
  4227b0:	pop    r12
  4227b2:	pop    r13
  4227b4:	pop    r14
  4227b6:	pop    r15
  4227b8:	pop    rbp
  4227b9:	ret    
  4227ba:	lea    rax,[r14-0x1]
  4227be:	mov    ecx,0x8
  4227c3:	mul    rcx
  4227c6:	seto   cl
  4227c9:	lea    rdi,[r8+0x4]
  4227cd:	mov    rdx,rax
  4227d0:	add    rdx,rdi
  4227d3:	setb   dl
  4227d6:	xor    r9d,r9d
  4227d9:	add    rax,r8
  4227dc:	jb     42260a <flatcc_builder_end_union_vector@@Base+0xba>
  4227e2:	test   cl,cl
  4227e4:	jne    42260a <flatcc_builder_end_union_vector@@Base+0xba>
  4227ea:	test   dl,dl
  4227ec:	jne    42260a <flatcc_builder_end_union_vector@@Base+0xba>
  4227f2:	test   cl,cl
  4227f4:	jne    42260a <flatcc_builder_end_union_vector@@Base+0xba>
  4227fa:	lea    rcx,[r14+r14*4]
  4227fe:	add    rcx,r12
  422801:	add    rcx,r8
  422804:	lea    rdx,[r8+r14*8]
  422808:	add    rdx,0xfffffffffffffff9
  42280c:	cmp    rdx,r15
  42280f:	seta   r11b
  422813:	lea    rbx,[r8+r14*8]
  422817:	cmp    r8,rcx
  42281a:	setb   r10b
  42281e:	cmp    rbx,r15
  422821:	seta   al
  422824:	cmp    rdi,rcx
  422827:	setb   bpl
  42282b:	cmp    rsi,rdx
  42282e:	setb   cl
  422831:	cmp    r8,r15
  422834:	setb   BYTE PTR [rsp+0x7]
  422839:	cmp    rsi,rbx
  42283c:	setb   dl
  42283f:	cmp    rdi,r15
  422842:	setb   dil
  422846:	xor    r9d,r9d
  422849:	test   r11b,r10b
  42284c:	jne    42260a <flatcc_builder_end_union_vector@@Base+0xba>
  422852:	and    al,bpl
  422855:	jne    42260a <flatcc_builder_end_union_vector@@Base+0xba>
  42285b:	and    cl,BYTE PTR [rsp+0x7]
  42285f:	jne    42260a <flatcc_builder_end_union_vector@@Base+0xba>
  422865:	and    dl,dil
  422868:	jne    42260a <flatcc_builder_end_union_vector@@Base+0xba>
  42286e:	mov    eax,r14d
  422871:	and    eax,0x7
  422874:	test   rax,rax
  422877:	mov    ecx,0x8
  42287c:	cmovne rcx,rax
  422880:	mov    r9,r14
  422883:	sub    r9,rcx
  422886:	vmovdqa ymm0,YMMWORD PTR [rip+0x171b2]        # 439a40 <flatcc_builder_padding_base@@Base+0x210>
  42288e:	vmovdqa ymm1,YMMWORD PTR [rip+0x171ca]        # 439a60 <flatcc_builder_padding_base@@Base+0x230>
  422896:	xor    eax,eax
  422898:	vmovdqa xmm8,XMMWORD PTR [rip+0x171e0]        # 439a80 <flatcc_builder_padding_base@@Base+0x250>
  4228a0:	vmovdqa xmm9,XMMWORD PTR [rip+0x171e8]        # 439a90 <flatcc_builder_padding_base@@Base+0x260>
  4228a8:	vpbroadcastq ymm4,QWORD PTR [rip+0x171ef]        # 439aa0 <flatcc_builder_padding_base@@Base+0x270>
  4228b1:	vpbroadcastq ymm5,QWORD PTR [rip+0x171ee]        # 439aa8 <flatcc_builder_padding_base@@Base+0x278>
  4228ba:	mov    rdi,r8
  4228bd:	nop    DWORD PTR [rax]
  4228c0:	vmovdqu ymm6,YMMWORD PTR [rdi]
  4228c4:	vmovdqu ymm7,YMMWORD PTR [rdi+0x20]
  4228c9:	vextracti128 xmm2,ymm7,0x1
  4228cf:	vpshufb xmm2,xmm2,xmm8
  4228d4:	vpshufb xmm7,xmm7,xmm8
  4228d9:	vpunpcklwd xmm2,xmm7,xmm2
  4228dd:	vextracti128 xmm7,ymm6,0x1
  4228e3:	vpshufb xmm7,xmm7,xmm9
  4228e8:	vpshufb xmm6,xmm6,xmm9
  4228ed:	vpunpcklwd xmm6,xmm6,xmm7
  4228f1:	vpblendd xmm2,xmm6,xmm2,0x2
  4228f7:	vmovq  QWORD PTR [r15+rax*1],xmm2
  4228fd:	vpsllq ymm2,ymm1,0x3
  422902:	vmovq  xmm6,r8
  422907:	vpbroadcastq ymm6,xmm6
  42290c:	vpaddq ymm2,ymm6,ymm2
  422910:	vpaddq ymm2,ymm2,ymm4
  422914:	vpsllq ymm7,ymm0,0x3
  422919:	vpaddq ymm6,ymm6,ymm7
  42291d:	vpaddq ymm6,ymm6,ymm4
  422921:	vpcmpeqd xmm7,xmm7,xmm7
  422925:	vpgatherqd xmm3,DWORD PTR [ymm6*1+0x0],xmm7
  42292f:	vpcmpeqd xmm6,xmm6,xmm6
  422933:	vpgatherqd xmm7,DWORD PTR [ymm2*1+0x0],xmm6
  42293d:	vinserti128 ymm2,ymm7,xmm3,0x1
  422943:	vmovdqu YMMWORD PTR [rsi+rax*4],ymm2
  422948:	add    rax,0x8
  42294c:	vpaddq ymm1,ymm1,ymm5
  422950:	vpaddq ymm0,ymm0,ymm5
  422954:	add    rdi,0x40
  422958:	cmp    r9,rax
  42295b:	jne    4228c0 <flatcc_builder_end_union_vector@@Base+0x370>
  422961:	jmp    42260a <flatcc_builder_end_union_vector@@Base+0xba>
  422966:	lea    rdi,[rip+0x17d91]        # 43a6fe <flatcc_builder_padding_base@@Base+0xece>
  42296d:	lea    rsi,[rip+0x1714e]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  422974:	lea    rcx,[rip+0x17db5]        # 43a730 <flatcc_builder_padding_base@@Base+0xf00>
  42297b:	mov    edx,0x651
  422980:	call   406070 <__assert_fail@plt>
  422985:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42298f:	nop

0000000000422990 <flatcc_builder_union_vector_count@@Base>:
  422990:	mov    rax,QWORD PTR [rdi+0x30]
  422994:	mov    eax,DWORD PTR [rax+0x14]
  422997:	ret    
  422998:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004229a0 <flatcc_builder_union_vector_edit@@Base>:
  4229a0:	mov    rax,QWORD PTR [rdi+0x18]
  4229a4:	ret    
  4229a5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4229af:	nop

00000000004229b0 <flatcc_builder_extend_union_vector@@Base>:
  4229b0:	push   r14
  4229b2:	push   rbx
  4229b3:	push   rax
  4229b4:	mov    rax,QWORD PTR [rdi+0x30]
  4229b8:	mov    ecx,DWORD PTR [rax+0x14]
  4229bb:	add    ecx,esi
  4229bd:	jb     422a45 <flatcc_builder_extend_union_vector@@Base+0x95>
  4229c3:	cmp    ecx,0x20000000
  4229c9:	jae    422a45 <flatcc_builder_extend_union_vector@@Base+0x95>
  4229cb:	mov    rbx,rdi
  4229ce:	mov    DWORD PTR [rax+0x14],ecx
  4229d1:	mov    r14d,DWORD PTR [rdi+0x20]
  4229d5:	lea    eax,[r14+rsi*8]
  4229d9:	mov    DWORD PTR [rdi+0x20],eax
  4229dc:	cmp    eax,DWORD PTR [rdi+0x24]
  4229df:	jae    4229e7 <flatcc_builder_extend_union_vector@@Base+0x37>
  4229e1:	mov    rax,QWORD PTR [rbx+0x18]
  4229e5:	jmp    422a3a <flatcc_builder_extend_union_vector@@Base+0x8a>
  4229e7:	add    eax,0x1
  4229ea:	lea    rsi,[rbx+0x68]
  4229ee:	mov    rdi,QWORD PTR [rbx+0x40]
  4229f2:	mov    edx,DWORD PTR [rbx+0x28]
  4229f5:	add    rdx,rax
  4229f8:	mov    ecx,0x1
  4229fd:	mov    r8d,0x1
  422a03:	call   QWORD PTR [rbx+0x50]
  422a06:	test   eax,eax
  422a08:	je     422a0e <flatcc_builder_extend_union_vector@@Base+0x5e>
  422a0a:	xor    eax,eax
  422a0c:	jmp    422a3d <flatcc_builder_extend_union_vector@@Base+0x8d>
  422a0e:	mov    ecx,DWORD PTR [rbx+0x28]
  422a11:	mov    rax,rcx
  422a14:	add    rax,QWORD PTR [rbx+0x68]
  422a18:	mov    QWORD PTR [rbx+0x18],rax
  422a1c:	mov    edx,DWORD PTR [rbx+0x70]
  422a1f:	sub    edx,ecx
  422a21:	cmp    edx,0xfffffffc
  422a24:	mov    ecx,0xfffffffc
  422a29:	cmovb  ecx,edx
  422a2c:	mov    DWORD PTR [rbx+0x24],ecx
  422a2f:	mov    rcx,QWORD PTR [rbx+0x30]
  422a33:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  422a3a:	add    rax,r14
  422a3d:	add    rsp,0x8
  422a41:	pop    rbx
  422a42:	pop    r14
  422a44:	ret    
  422a45:	lea    rdi,[rip+0x1813f]        # 43ab8b <flatcc_builder_padding_base@@Base+0x135b>
  422a4c:	lea    rsi,[rip+0x1706f]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  422a53:	lea    rcx,[rip+0x1814c]        # 43aba6 <flatcc_builder_padding_base@@Base+0x1376>
  422a5a:	mov    edx,0x37c
  422a5f:	call   406070 <__assert_fail@plt>
  422a64:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422a6e:	xchg   ax,ax

0000000000422a70 <flatcc_builder_truncate_union_vector@@Base>:
  422a70:	push   rax
  422a71:	mov    rcx,QWORD PTR [rdi+0x30]
  422a75:	movzx  edx,WORD PTR [rcx+0xe]
  422a79:	cmp    edx,0x7
  422a7c:	jne    422ab0 <flatcc_builder_truncate_union_vector@@Base+0x40>
  422a7e:	mov    rax,rsi
  422a81:	mov    edx,DWORD PTR [rcx+0x14]
  422a84:	sub    edx,eax
  422a86:	jb     422acf <flatcc_builder_truncate_union_vector@@Base+0x5f>
  422a88:	mov    DWORD PTR [rcx+0x14],edx
  422a8b:	mov    rcx,QWORD PTR [rdi+0x30]
  422a8f:	imul   eax,DWORD PTR [rcx+0x10]
  422a93:	mov    ecx,DWORD PTR [rdi+0x20]
  422a96:	sub    ecx,eax
  422a98:	mov    DWORD PTR [rdi+0x20],ecx
  422a9b:	add    rcx,QWORD PTR [rdi+0x18]
  422a9f:	xor    esi,esi
  422aa1:	mov    rdi,rcx
  422aa4:	mov    rdx,rax
  422aa7:	call   406080 <memset@plt>
  422aac:	xor    eax,eax
  422aae:	pop    rcx
  422aaf:	ret    
  422ab0:	lea    rdi,[rip+0x17c47]        # 43a6fe <flatcc_builder_padding_base@@Base+0xece>
  422ab7:	lea    rsi,[rip+0x17004]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  422abe:	lea    rcx,[rip+0x17cbe]        # 43a783 <flatcc_builder_padding_base@@Base+0xf53>
  422ac5:	mov    edx,0x681
  422aca:	call   406070 <__assert_fail@plt>
  422acf:	lea    rdi,[rip+0x1768c]        # 43a162 <flatcc_builder_padding_base@@Base+0x932>
  422ad6:	lea    rsi,[rip+0x16fe5]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  422add:	lea    rcx,[rip+0x17c9f]        # 43a783 <flatcc_builder_padding_base@@Base+0xf53>
  422ae4:	mov    edx,0x682
  422ae9:	call   406070 <__assert_fail@plt>
  422aee:	xchg   ax,ax

0000000000422af0 <flatcc_builder_union_vector_push@@Base>:
  422af0:	push   r15
  422af2:	push   r14
  422af4:	push   rbx
  422af5:	mov    rax,QWORD PTR [rdi+0x30]
  422af9:	movzx  ecx,WORD PTR [rax+0xe]
  422afd:	cmp    ecx,0x7
  422b00:	jne    422b9a <flatcc_builder_union_vector_push@@Base+0xaa>
  422b06:	mov    ecx,DWORD PTR [rax+0x14]
  422b09:	cmp    ecx,0x1fffffff
  422b0f:	je     422b5c <flatcc_builder_union_vector_push@@Base+0x6c>
  422b11:	mov    r14,rsi
  422b14:	mov    rbx,rdi
  422b17:	add    ecx,0x1
  422b1a:	mov    DWORD PTR [rax+0x14],ecx
  422b1d:	mov    r15d,DWORD PTR [rdi+0x20]
  422b21:	lea    eax,[r15+0x8]
  422b25:	mov    DWORD PTR [rdi+0x20],eax
  422b28:	cmp    eax,DWORD PTR [rdi+0x24]
  422b2b:	jae    422b38 <flatcc_builder_union_vector_push@@Base+0x48>
  422b2d:	mov    rax,QWORD PTR [rbx+0x18]
  422b31:	add    rax,r15
  422b34:	jne    422b91 <flatcc_builder_union_vector_push@@Base+0xa1>
  422b36:	jmp    422b5c <flatcc_builder_union_vector_push@@Base+0x6c>
  422b38:	lea    eax,[r15+0x9]
  422b3c:	lea    rsi,[rbx+0x68]
  422b40:	mov    rdi,QWORD PTR [rbx+0x40]
  422b44:	mov    edx,DWORD PTR [rbx+0x28]
  422b47:	add    rdx,rax
  422b4a:	mov    ecx,0x1
  422b4f:	mov    r8d,0x1
  422b55:	call   QWORD PTR [rbx+0x50]
  422b58:	test   eax,eax
  422b5a:	je     422b60 <flatcc_builder_union_vector_push@@Base+0x70>
  422b5c:	xor    eax,eax
  422b5e:	jmp    422b94 <flatcc_builder_union_vector_push@@Base+0xa4>
  422b60:	mov    ecx,DWORD PTR [rbx+0x28]
  422b63:	mov    rax,rcx
  422b66:	add    rax,QWORD PTR [rbx+0x68]
  422b6a:	mov    QWORD PTR [rbx+0x18],rax
  422b6e:	mov    edx,DWORD PTR [rbx+0x70]
  422b71:	sub    edx,ecx
  422b73:	cmp    edx,0xfffffffc
  422b76:	mov    ecx,0xfffffffc
  422b7b:	cmovb  ecx,edx
  422b7e:	mov    DWORD PTR [rbx+0x24],ecx
  422b81:	mov    rcx,QWORD PTR [rbx+0x30]
  422b85:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  422b8c:	add    rax,r15
  422b8f:	je     422b5c <flatcc_builder_union_vector_push@@Base+0x6c>
  422b91:	mov    QWORD PTR [rax],r14
  422b94:	pop    rbx
  422b95:	pop    r14
  422b97:	pop    r15
  422b99:	ret    
  422b9a:	lea    rdi,[rip+0x17b5d]        # 43a6fe <flatcc_builder_padding_base@@Base+0xece>
  422ba1:	lea    rsi,[rip+0x16f1a]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  422ba8:	lea    rcx,[rip+0x17c19]        # 43a7c8 <flatcc_builder_padding_base@@Base+0xf98>
  422baf:	mov    edx,0x68d
  422bb4:	call   406070 <__assert_fail@plt>
  422bb9:	nop    DWORD PTR [rax+0x0]

0000000000422bc0 <flatcc_builder_append_union_vector@@Base>:
  422bc0:	push   r15
  422bc2:	push   r14
  422bc4:	push   r13
  422bc6:	push   r12
  422bc8:	push   rbx
  422bc9:	mov    rax,QWORD PTR [rdi+0x30]
  422bcd:	movzx  ecx,WORD PTR [rax+0xe]
  422bd1:	cmp    ecx,0x7
  422bd4:	jne    422cb1 <flatcc_builder_append_union_vector@@Base+0xf1>
  422bda:	mov    r15,rdx
  422bdd:	mov    ecx,DWORD PTR [rax+0x14]
  422be0:	add    ecx,r15d
  422be3:	jb     422c92 <flatcc_builder_append_union_vector@@Base+0xd2>
  422be9:	cmp    ecx,0x20000000
  422bef:	jae    422c92 <flatcc_builder_append_union_vector@@Base+0xd2>
  422bf5:	mov    r14,rsi
  422bf8:	mov    rbx,rdi
  422bfb:	mov    DWORD PTR [rax+0x14],ecx
  422bfe:	mov    r13d,DWORD PTR [rdi+0x20]
  422c02:	lea    eax,[r13+r15*8+0x0]
  422c07:	mov    DWORD PTR [rdi+0x20],eax
  422c0a:	cmp    eax,DWORD PTR [rdi+0x24]
  422c0d:	jae    422c1a <flatcc_builder_append_union_vector@@Base+0x5a>
  422c0f:	mov    r12,QWORD PTR [rbx+0x18]
  422c13:	add    r12,r13
  422c16:	jne    422c73 <flatcc_builder_append_union_vector@@Base+0xb3>
  422c18:	jmp    422c3d <flatcc_builder_append_union_vector@@Base+0x7d>
  422c1a:	add    eax,0x1
  422c1d:	lea    rsi,[rbx+0x68]
  422c21:	mov    rdi,QWORD PTR [rbx+0x40]
  422c25:	mov    edx,DWORD PTR [rbx+0x28]
  422c28:	add    rdx,rax
  422c2b:	mov    ecx,0x1
  422c30:	mov    r8d,0x1
  422c36:	call   QWORD PTR [rbx+0x50]
  422c39:	test   eax,eax
  422c3b:	je     422c42 <flatcc_builder_append_union_vector@@Base+0x82>
  422c3d:	xor    r12d,r12d
  422c40:	jmp    422c85 <flatcc_builder_append_union_vector@@Base+0xc5>
  422c42:	mov    eax,DWORD PTR [rbx+0x28]
  422c45:	mov    r12,rax
  422c48:	add    r12,QWORD PTR [rbx+0x68]
  422c4c:	mov    QWORD PTR [rbx+0x18],r12
  422c50:	mov    ecx,DWORD PTR [rbx+0x70]
  422c53:	sub    ecx,eax
  422c55:	cmp    ecx,0xfffffffc
  422c58:	mov    eax,0xfffffffc
  422c5d:	cmovb  eax,ecx
  422c60:	mov    DWORD PTR [rbx+0x24],eax
  422c63:	mov    rax,QWORD PTR [rbx+0x30]
  422c67:	mov    DWORD PTR [rax+0x4],0xfffffffc
  422c6e:	add    r12,r13
  422c71:	je     422c3d <flatcc_builder_append_union_vector@@Base+0x7d>
  422c73:	shl    r15d,0x3
  422c77:	mov    edx,r15d
  422c7a:	mov    rdi,r12
  422c7d:	mov    rsi,r14
  422c80:	call   4060e0 <memcpy@plt>
  422c85:	mov    rax,r12
  422c88:	pop    rbx
  422c89:	pop    r12
  422c8b:	pop    r13
  422c8d:	pop    r14
  422c8f:	pop    r15
  422c91:	ret    
  422c92:	lea    rdi,[rip+0x17ef2]        # 43ab8b <flatcc_builder_padding_base@@Base+0x135b>
  422c99:	lea    rsi,[rip+0x16e22]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  422ca0:	lea    rcx,[rip+0x17eff]        # 43aba6 <flatcc_builder_padding_base@@Base+0x1376>
  422ca7:	mov    edx,0x37c
  422cac:	call   406070 <__assert_fail@plt>
  422cb1:	lea    rdi,[rip+0x17a46]        # 43a6fe <flatcc_builder_padding_base@@Base+0xece>
  422cb8:	lea    rsi,[rip+0x16e03]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  422cbf:	lea    rcx,[rip+0x17b6f]        # 43a835 <flatcc_builder_padding_base@@Base+0x1005>
  422cc6:	mov    edx,0x69c
  422ccb:	call   406070 <__assert_fail@plt>

0000000000422cd0 <flatcc_builder_create_string@@Base>:
  422cd0:	push   rbp
  422cd1:	push   rbx
  422cd2:	sub    rsp,0x98
  422cd9:	xor    ebp,ebp
  422cdb:	mov    rax,rdx
  422cde:	shr    rax,0x20
  422ce2:	jne    422db8 <flatcc_builder_create_string@@Base+0xe8>
  422ce8:	mov    rbx,rdi
  422ceb:	mov    DWORD PTR [rsp+0x4],edx
  422cef:	mov    ebp,DWORD PTR [rdi+0xf0]
  422cf5:	mov    eax,edx
  422cf7:	not    eax
  422cf9:	add    eax,ebp
  422cfb:	and    eax,0x3
  422cfe:	add    eax,0x1
  422d01:	mov    QWORD PTR [rsp+0x8],0x4
  422d0a:	lea    rcx,[rsp+0x4]
  422d0f:	mov    QWORD PTR [rsp+0x18],rcx
  422d14:	mov    QWORD PTR [rsp+0x20],0x4
  422d1d:	mov    DWORD PTR [rsp+0x10],0x1
  422d25:	test   rdx,rdx
  422d28:	je     422d4c <flatcc_builder_create_string@@Base+0x7c>
  422d2a:	lea    rcx,[rdx+0x4]
  422d2e:	mov    QWORD PTR [rsp+0x8],rcx
  422d33:	mov    QWORD PTR [rsp+0x28],rsi
  422d38:	mov    QWORD PTR [rsp+0x30],rdx
  422d3d:	mov    DWORD PTR [rsp+0x10],0x2
  422d45:	mov    edx,0x2
  422d4a:	jmp    422d56 <flatcc_builder_create_string@@Base+0x86>
  422d4c:	mov    edx,0x1
  422d51:	mov    ecx,0x4
  422d56:	mov    esi,eax
  422d58:	lea    r8,[rcx+rsi*1]
  422d5c:	mov    QWORD PTR [rsp+0x8],r8
  422d61:	mov    eax,edx
  422d63:	shl    rax,0x4
  422d67:	lea    rdi,[rip+0x16ac2]        # 439830 <flatcc_builder_padding_base@@Base>
  422d6e:	mov    QWORD PTR [rsp+rax*1+0x18],rdi
  422d73:	mov    QWORD PTR [rsp+rax*1+0x20],rsi
  422d78:	add    edx,0x1
  422d7b:	mov    DWORD PTR [rsp+0x10],edx
  422d7f:	cmp    r8,0x11
  422d83:	setb   al
  422d86:	add    rcx,rsi
  422d89:	add    rcx,0xfffffffffffffff0
  422d8d:	shr    rcx,0x20
  422d91:	sete   cl
  422d94:	test   r8d,r8d
  422d97:	jle    422dc4 <flatcc_builder_create_string@@Base+0xf4>
  422d99:	or     al,cl
  422d9b:	je     422dc4 <flatcc_builder_create_string@@Base+0xf4>
  422d9d:	sub    ebp,r8d
  422da0:	mov    rdi,QWORD PTR [rbx+0x38]
  422da4:	lea    rsi,[rsp+0x18]
  422da9:	mov    ecx,ebp
  422dab:	call   QWORD PTR [rbx+0x48]
  422dae:	test   eax,eax
  422db0:	jne    422de3 <flatcc_builder_create_string@@Base+0x113>
  422db2:	mov    DWORD PTR [rbx+0xf0],ebp
  422db8:	mov    eax,ebp
  422dba:	add    rsp,0x98
  422dc1:	pop    rbx
  422dc2:	pop    rbp
  422dc3:	ret    
  422dc4:	lea    rdi,[rip+0x17eb7]        # 43ac82 <flatcc_builder_padding_base@@Base+0x1452>
  422dcb:	lea    rsi,[rip+0x16cf0]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  422dd2:	lea    rcx,[rip+0x17d68]        # 43ab41 <flatcc_builder_padding_base@@Base+0x1311>
  422dd9:	mov    edx,0x287
  422dde:	call   406070 <__assert_fail@plt>
  422de3:	lea    rdi,[rip+0x17e98]        # 43ac82 <flatcc_builder_padding_base@@Base+0x1452>
  422dea:	lea    rsi,[rip+0x16cd1]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  422df1:	lea    rcx,[rip+0x17d49]        # 43ab41 <flatcc_builder_padding_base@@Base+0x1311>
  422df8:	mov    edx,0x28b
  422dfd:	call   406070 <__assert_fail@plt>
  422e02:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422e0c:	nop    DWORD PTR [rax+0x0]

0000000000422e10 <flatcc_builder_create_string_str@@Base>:
  422e10:	push   r14
  422e12:	push   rbx
  422e13:	push   rax
  422e14:	mov    rbx,rsi
  422e17:	mov    r14,rdi
  422e1a:	mov    rdi,rsi
  422e1d:	call   406060 <strlen@plt>
  422e22:	mov    rdi,r14
  422e25:	mov    rsi,rbx
  422e28:	mov    rdx,rax
  422e2b:	add    rsp,0x8
  422e2f:	pop    rbx
  422e30:	pop    r14
  422e32:	jmp    422cd0 <flatcc_builder_create_string@@Base>
  422e37:	nop    WORD PTR [rax+rax*1+0x0]

0000000000422e40 <flatcc_builder_create_string_strn@@Base>:
  422e40:	push   r15
  422e42:	push   r14
  422e44:	push   rbx
  422e45:	mov    rbx,rdx
  422e48:	mov    r14,rsi
  422e4b:	mov    r15,rdi
  422e4e:	xor    esi,esi
  422e50:	mov    rdi,r14
  422e53:	call   4060a0 <memchr@plt>
  422e58:	mov    rcx,rax
  422e5b:	sub    rcx,r14
  422e5e:	test   rax,rax
  422e61:	cmovne rbx,rcx
  422e65:	mov    rdi,r15
  422e68:	mov    rsi,r14
  422e6b:	mov    rdx,rbx
  422e6e:	pop    rbx
  422e6f:	pop    r14
  422e71:	pop    r15
  422e73:	jmp    422cd0 <flatcc_builder_create_string@@Base>
  422e78:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000422e80 <flatcc_builder_end_string@@Base>:
  422e80:	push   rbp
  422e81:	push   rbx
  422e82:	push   rax
  422e83:	mov    rax,QWORD PTR [rdi+0x30]
  422e87:	movzx  ecx,WORD PTR [rax+0xe]
  422e8b:	cmp    ecx,0x6
  422e8e:	jne    422f27 <flatcc_builder_end_string@@Base+0xa7>
  422e94:	mov    rbx,rdi
  422e97:	mov    edx,DWORD PTR [rax+0x14]
  422e9a:	cmp    edx,DWORD PTR [rdi+0x20]
  422e9d:	jne    422f46 <flatcc_builder_end_string@@Base+0xc6>
  422ea3:	mov    rsi,QWORD PTR [rbx+0x18]
  422ea7:	mov    rdi,rbx
  422eaa:	call   422cd0 <flatcc_builder_create_string@@Base>
  422eaf:	mov    ebp,eax
  422eb1:	test   eax,eax
  422eb3:	je     422f1e <flatcc_builder_end_string@@Base+0x9e>
  422eb5:	mov    rdi,QWORD PTR [rbx+0x18]
  422eb9:	mov    edx,DWORD PTR [rbx+0x20]
  422ebc:	xor    esi,esi
  422ebe:	call   406080 <memset@plt>
  422ec3:	mov    rax,QWORD PTR [rbx+0x30]
  422ec7:	mov    ecx,DWORD PTR [rax+0x8]
  422eca:	mov    DWORD PTR [rbx+0x20],ecx
  422ecd:	mov    ecx,DWORD PTR [rax]
  422ecf:	mov    DWORD PTR [rbx+0x28],ecx
  422ed2:	mov    edx,DWORD PTR [rax+0x4]
  422ed5:	mov    rsi,rcx
  422ed8:	add    rsi,QWORD PTR [rbx+0x68]
  422edc:	mov    QWORD PTR [rbx+0x18],rsi
  422ee0:	mov    esi,DWORD PTR [rbx+0x70]
  422ee3:	sub    esi,ecx
  422ee5:	cmp    esi,edx
  422ee7:	cmova  esi,edx
  422eea:	mov    DWORD PTR [rbx+0x24],esi
  422eed:	movzx  ecx,WORD PTR [rbx+0xea]
  422ef4:	cmp    WORD PTR [rbx+0xe8],cx
  422efb:	jae    422f04 <flatcc_builder_end_string@@Base+0x84>
  422efd:	mov    WORD PTR [rbx+0xe8],cx
  422f04:	movzx  ecx,WORD PTR [rax+0xc]
  422f08:	mov    WORD PTR [rbx+0xea],cx
  422f0f:	add    rax,0xffffffffffffffdc
  422f13:	mov    QWORD PTR [rbx+0x30],rax
  422f17:	add    DWORD PTR [rbx+0x104],0xffffffff
  422f1e:	mov    eax,ebp
  422f20:	add    rsp,0x8
  422f24:	pop    rbx
  422f25:	pop    rbp
  422f26:	ret    
  422f27:	lea    rdi,[rip+0x170d3]        # 43a001 <flatcc_builder_padding_base@@Base+0x7d1>
  422f2e:	lea    rsi,[rip+0x16b8d]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  422f35:	lea    rcx,[rip+0x17978]        # 43a8b4 <flatcc_builder_padding_base@@Base+0x1084>
  422f3c:	mov    edx,0x6c4
  422f41:	call   406070 <__assert_fail@plt>
  422f46:	lea    rdi,[rip+0x179aa]        # 43a8f7 <flatcc_builder_padding_base@@Base+0x10c7>
  422f4d:	lea    rsi,[rip+0x16b6e]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  422f54:	lea    rcx,[rip+0x17959]        # 43a8b4 <flatcc_builder_padding_base@@Base+0x1084>
  422f5b:	mov    edx,0x6c5
  422f60:	call   406070 <__assert_fail@plt>
  422f65:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422f6f:	nop

0000000000422f70 <flatcc_builder_string_edit@@Base>:
  422f70:	mov    rax,QWORD PTR [rdi+0x18]
  422f74:	ret    
  422f75:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422f7f:	nop

0000000000422f80 <flatcc_builder_string_len@@Base>:
  422f80:	mov    rax,QWORD PTR [rdi+0x30]
  422f84:	mov    eax,DWORD PTR [rax+0x14]
  422f87:	ret    
  422f88:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000422f90 <flatcc_builder_table_edit@@Base>:
  422f90:	mov    rax,QWORD PTR [rdi+0x30]
  422f94:	movzx  eax,WORD PTR [rax+0xe]
  422f98:	cmp    eax,0x3
  422f9b:	jne    422fa8 <flatcc_builder_table_edit@@Base+0x18>
  422f9d:	mov    eax,DWORD PTR [rdi+0x20]
  422fa0:	add    rax,QWORD PTR [rdi+0x18]
  422fa4:	sub    rax,rsi
  422fa7:	ret    
  422fa8:	push   rax
  422fa9:	lea    rdi,[rip+0x17341]        # 43a2f1 <flatcc_builder_padding_base@@Base+0xac1>
  422fb0:	lea    rsi,[rip+0x16b0b]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  422fb7:	lea    rcx,[rip+0x179eb]        # 43a9a9 <flatcc_builder_padding_base@@Base+0x1179>
  422fbe:	mov    edx,0x702
  422fc3:	call   406070 <__assert_fail@plt>
  422fc8:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000422fd0 <flatcc_builder_table_add_copy@@Base>:
  422fd0:	push   r15
  422fd2:	push   r14
  422fd4:	push   rbx
  422fd5:	mov    r15,rcx
  422fd8:	mov    r14,rdx
  422fdb:	mov    rdx,rcx
  422fde:	mov    ecx,r8d
  422fe1:	call   421f20 <flatcc_builder_table_add@@Base>
  422fe6:	mov    rbx,rax
  422fe9:	test   rax,rax
  422fec:	je     422ffc <flatcc_builder_table_add_copy@@Base+0x2c>
  422fee:	mov    rdi,rbx
  422ff1:	mov    rsi,r14
  422ff4:	mov    rdx,r15
  422ff7:	call   4060e0 <memcpy@plt>
  422ffc:	mov    rax,rbx
  422fff:	pop    rbx
  423000:	pop    r14
  423002:	pop    r15
  423004:	ret    
  423005:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42300f:	nop

0000000000423010 <flatcc_builder_push_buffer_alignment@@Base>:
  423010:	movzx  eax,WORD PTR [rdi+0xe8]
  423017:	mov    WORD PTR [rdi+0xe8],0x4
  423020:	ret    
  423021:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42302b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000423030 <flatcc_builder_pop_buffer_alignment@@Base>:
  423030:	cmp    WORD PTR [rdi+0xe8],si
  423037:	jae    423040 <flatcc_builder_pop_buffer_alignment@@Base+0x10>
  423039:	mov    WORD PTR [rdi+0xe8],si
  423040:	ret    
  423041:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42304b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000423050 <flatcc_builder_get_buffer_alignment@@Base>:
  423050:	movzx  eax,WORD PTR [rdi+0xe8]
  423057:	ret    
  423058:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000423060 <flatcc_builder_set_vtable_clustering@@Base>:
  423060:	xor    eax,eax
  423062:	test   esi,esi
  423064:	sete   al
  423067:	mov    DWORD PTR [rdi+0x124],eax
  42306d:	ret    
  42306e:	xchg   ax,ax

0000000000423070 <flatcc_builder_set_block_align@@Base>:
  423070:	mov    WORD PTR [rdi+0xec],si
  423077:	ret    
  423078:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000423080 <flatcc_builder_get_level@@Base>:
  423080:	mov    eax,DWORD PTR [rdi+0x104]
  423086:	ret    
  423087:	nop    WORD PTR [rax+rax*1+0x0]

0000000000423090 <flatcc_builder_set_max_level@@Base>:
  423090:	mov    DWORD PTR [rdi+0x120],esi
  423096:	cmp    DWORD PTR [rdi+0x108],esi
  42309c:	jge    4230a4 <flatcc_builder_set_max_level@@Base+0x14>
  42309e:	mov    DWORD PTR [rdi+0x108],esi
  4230a4:	ret    
  4230a5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4230af:	nop

00000000004230b0 <flatcc_builder_get_buffer_size@@Base>:
  4230b0:	movsxd rax,DWORD PTR [rdi+0xf4]
  4230b7:	movsxd rcx,DWORD PTR [rdi+0xf0]
  4230be:	sub    rax,rcx
  4230c1:	ret    
  4230c2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4230cc:	nop    DWORD PTR [rax+0x0]

00000000004230d0 <flatcc_builder_get_buffer_start@@Base>:
  4230d0:	mov    eax,DWORD PTR [rdi+0xf0]
  4230d6:	ret    
  4230d7:	nop    WORD PTR [rax+rax*1+0x0]

00000000004230e0 <flatcc_builder_get_buffer_end@@Base>:
  4230e0:	mov    eax,DWORD PTR [rdi+0xf4]
  4230e6:	ret    
  4230e7:	nop    WORD PTR [rax+rax*1+0x0]

00000000004230f0 <flatcc_builder_set_vtable_cache_limit@@Base>:
  4230f0:	mov    QWORD PTR [rdi+0x118],rsi
  4230f7:	ret    
  4230f8:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000423100 <flatcc_builder_set_identifier@@Base>:
  423100:	test   rsi,rsi
  423103:	jne    42310c <flatcc_builder_set_identifier@@Base+0xc>
  423105:	lea    rsi,[rip+0x16724]        # 439830 <flatcc_builder_padding_base@@Base>
  42310c:	mov    eax,DWORD PTR [rsi]
  42310e:	mov    DWORD PTR [rdi+0x110],eax
  423114:	ret    
  423115:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42311f:	nop

0000000000423120 <flatcc_builder_get_type@@Base>:
  423120:	mov    rax,QWORD PTR [rdi+0x30]
  423124:	test   rax,rax
  423127:	je     42312e <flatcc_builder_get_type@@Base+0xe>
  423129:	movzx  eax,WORD PTR [rax+0xe]
  42312d:	ret    
  42312e:	xor    eax,eax
  423130:	ret    
  423131:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42313b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000423140 <flatcc_builder_get_type_at@@Base>:
  423140:	xor    eax,eax
  423142:	test   esi,esi
  423144:	jle    423162 <flatcc_builder_get_type_at@@Base+0x22>
  423146:	mov    ecx,DWORD PTR [rdi+0x104]
  42314c:	cmp    ecx,esi
  42314e:	jl     423162 <flatcc_builder_get_type_at@@Base+0x22>
  423150:	mov    rax,QWORD PTR [rdi+0x30]
  423154:	sub    esi,ecx
  423156:	movsxd rcx,esi
  423159:	lea    rcx,[rcx+rcx*8]
  42315d:	movzx  eax,WORD PTR [rax+rcx*4+0xe]
  423162:	ret    
  423163:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42316d:	nop    DWORD PTR [rax]

0000000000423170 <flatcc_builder_get_direct_buffer@@Base>:
  423170:	cmp    DWORD PTR [rdi+0x128],0x0
  423177:	je     423189 <flatcc_builder_get_direct_buffer@@Base+0x19>
  423179:	mov    rax,QWORD PTR [rdi+0x130]
  423180:	cmp    rax,QWORD PTR [rdi+0x138]
  423187:	je     423198 <flatcc_builder_get_direct_buffer@@Base+0x28>
  423189:	test   rsi,rsi
  42318c:	je     423195 <flatcc_builder_get_direct_buffer@@Base+0x25>
  42318e:	mov    QWORD PTR [rsi],0x0
  423195:	xor    eax,eax
  423197:	ret    
  423198:	test   rsi,rsi
  42319b:	je     4231a7 <flatcc_builder_get_direct_buffer@@Base+0x37>
  42319d:	mov    rax,QWORD PTR [rdi+0x160]
  4231a4:	mov    QWORD PTR [rsi],rax
  4231a7:	mov    rax,QWORD PTR [rdi+0x140]
  4231ae:	ret    
  4231af:	nop

00000000004231b0 <flatcc_builder_copy_buffer@@Base>:
  4231b0:	push   rax
  4231b1:	cmp    DWORD PTR [rdi+0x128],0x0
  4231b8:	je     4231cd <flatcc_builder_copy_buffer@@Base+0x1d>
  4231ba:	add    rdi,0x130
  4231c1:	call   423ad0 <flatcc_emitter_copy_buffer@@Base>
  4231c6:	test   rax,rax
  4231c9:	je     4231d1 <flatcc_builder_copy_buffer@@Base+0x21>
  4231cb:	pop    rcx
  4231cc:	ret    
  4231cd:	xor    eax,eax
  4231cf:	pop    rcx
  4231d0:	ret    
  4231d1:	lea    rdi,[rip+0x12be5]        # 435dbd <_IO_stdin_used@@Base+0xdbd>
  4231d8:	lea    rsi,[rip+0x168e3]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  4231df:	lea    rcx,[rip+0x1784e]        # 43aa34 <flatcc_builder_padding_base@@Base+0x1204>
  4231e6:	mov    edx,0x786
  4231eb:	call   406070 <__assert_fail@plt>

00000000004231f0 <flatcc_builder_finalize_buffer@@Base>:
  4231f0:	push   r15
  4231f2:	push   r14
  4231f4:	push   rbx
  4231f5:	mov    rbx,rdi
  4231f8:	movsxd r14,DWORD PTR [rdi+0xf4]
  4231ff:	movsxd rax,DWORD PTR [rdi+0xf0]
  423206:	sub    r14,rax
  423209:	test   rsi,rsi
  42320c:	je     423211 <flatcc_builder_finalize_buffer@@Base+0x21>
  42320e:	mov    QWORD PTR [rsi],r14
  423211:	mov    rdi,r14
  423214:	call   4060f0 <malloc@plt>
  423219:	test   rax,rax
  42321c:	je     42324d <flatcc_builder_finalize_buffer@@Base+0x5d>
  42321e:	cmp    DWORD PTR [rbx+0x128],0x0
  423225:	je     42326c <flatcc_builder_finalize_buffer@@Base+0x7c>
  423227:	mov    r15,rax
  42322a:	add    rbx,0x130
  423231:	mov    rdi,rbx
  423234:	mov    rsi,rax
  423237:	mov    rdx,r14
  42323a:	call   423ad0 <flatcc_emitter_copy_buffer@@Base>
  42323f:	test   rax,rax
  423242:	je     42328b <flatcc_builder_finalize_buffer@@Base+0x9b>
  423244:	mov    rax,r15
  423247:	pop    rbx
  423248:	pop    r14
  42324a:	pop    r15
  42324c:	ret    
  42324d:	lea    rdi,[rip+0x17a2e]        # 43ac82 <flatcc_builder_padding_base@@Base+0x1452>
  423254:	lea    rsi,[rip+0x16867]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  42325b:	lea    rcx,[rip+0x17817]        # 43aa79 <flatcc_builder_padding_base@@Base+0x1249>
  423262:	mov    edx,0x798
  423267:	call   406070 <__assert_fail@plt>
  42326c:	lea    rdi,[rip+0x17a0f]        # 43ac82 <flatcc_builder_padding_base@@Base+0x1452>
  423273:	lea    rsi,[rip+0x16848]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  42327a:	lea    rcx,[rip+0x177f8]        # 43aa79 <flatcc_builder_padding_base@@Base+0x1249>
  423281:	mov    edx,0x79c
  423286:	call   406070 <__assert_fail@plt>
  42328b:	lea    rdi,[rip+0x12b2b]        # 435dbd <_IO_stdin_used@@Base+0xdbd>
  423292:	lea    rsi,[rip+0x16829]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  423299:	lea    rcx,[rip+0x17794]        # 43aa34 <flatcc_builder_padding_base@@Base+0x1204>
  4232a0:	mov    edx,0x786
  4232a5:	call   406070 <__assert_fail@plt>
  4232aa:	nop    WORD PTR [rax+rax*1+0x0]

00000000004232b0 <flatcc_builder_finalize_aligned_buffer@@Base>:
  4232b0:	push   r15
  4232b2:	push   r14
  4232b4:	push   r12
  4232b6:	push   rbx
  4232b7:	push   rax
  4232b8:	mov    r14,rsi
  4232bb:	mov    r15,rdi
  4232be:	movsxd rax,DWORD PTR [rdi+0xf4]
  4232c5:	movsxd rcx,DWORD PTR [rdi+0xf0]
  4232cc:	sub    rax,rcx
  4232cf:	test   rsi,rsi
  4232d2:	je     4232d7 <flatcc_builder_finalize_aligned_buffer@@Base+0x27>
  4232d4:	mov    QWORD PTR [r14],rax
  4232d7:	movzx  ecx,WORD PTR [r15+0xe8]
  4232df:	add    rax,rcx
  4232e2:	add    rax,0xffffffffffffffff
  4232e6:	mov    rbx,rcx
  4232e9:	neg    rbx
  4232ec:	and    rbx,rax
  4232ef:	cmp    rcx,0x8
  4232f3:	mov    QWORD PTR [rsp],0x0
  4232fb:	mov    esi,0x8
  423300:	cmova  rsi,rcx
  423304:	mov    rdi,rsp
  423307:	mov    rdx,rbx
  42330a:	call   406140 <posix_memalign@plt>
  42330f:	mov    r12,QWORD PTR [rsp]
  423313:	test   eax,eax
  423315:	je     423326 <flatcc_builder_finalize_aligned_buffer@@Base+0x76>
  423317:	test   r12,r12
  42331a:	je     423326 <flatcc_builder_finalize_aligned_buffer@@Base+0x76>
  42331c:	mov    rdi,r12
  42331f:	call   406030 <free@plt>
  423324:	jmp    42336e <flatcc_builder_finalize_aligned_buffer@@Base+0xbe>
  423326:	test   r12,r12
  423329:	je     42336e <flatcc_builder_finalize_aligned_buffer@@Base+0xbe>
  42332b:	cmp    DWORD PTR [r15+0x128],0x0
  423333:	je     42331c <flatcc_builder_finalize_aligned_buffer@@Base+0x6c>
  423335:	add    r15,0x130
  42333c:	mov    rdi,r15
  42333f:	mov    rsi,r12
  423342:	mov    rdx,rbx
  423345:	call   423ad0 <flatcc_emitter_copy_buffer@@Base>
  42334a:	test   rax,rax
  42334d:	jne    42337d <flatcc_builder_finalize_aligned_buffer@@Base+0xcd>
  42334f:	lea    rdi,[rip+0x12a67]        # 435dbd <_IO_stdin_used@@Base+0xdbd>
  423356:	lea    rsi,[rip+0x16765]        # 439ac2 <flatcc_builder_padding_base@@Base+0x292>
  42335d:	lea    rcx,[rip+0x176d0]        # 43aa34 <flatcc_builder_padding_base@@Base+0x1204>
  423364:	mov    edx,0x786
  423369:	call   406070 <__assert_fail@plt>
  42336e:	test   r14,r14
  423371:	je     42337a <flatcc_builder_finalize_aligned_buffer@@Base+0xca>
  423373:	mov    QWORD PTR [r14],0x0
  42337a:	xor    r12d,r12d
  42337d:	mov    rax,r12
  423380:	add    rsp,0x8
  423384:	pop    rbx
  423385:	pop    r12
  423387:	pop    r14
  423389:	pop    r15
  42338b:	ret    
  42338c:	nop    DWORD PTR [rax+0x0]

0000000000423390 <flatcc_builder_aligned_alloc@@Base>:
  423390:	push   rax
  423391:	mov    rax,rsi
  423394:	mov    QWORD PTR [rsp],0x0
  42339c:	cmp    rdi,0x8
  4233a0:	mov    esi,0x8
  4233a5:	cmova  rsi,rdi
  4233a9:	mov    rdi,rsp
  4233ac:	mov    rdx,rax
  4233af:	call   406140 <posix_memalign@plt>
  4233b4:	mov    ecx,eax
  4233b6:	mov    rax,QWORD PTR [rsp]
  4233ba:	test   ecx,ecx
  4233bc:	je     4233d5 <flatcc_builder_aligned_alloc@@Base+0x45>
  4233be:	test   rax,rax
  4233c1:	je     4233d5 <flatcc_builder_aligned_alloc@@Base+0x45>
  4233c3:	mov    rdi,rax
  4233c6:	call   406030 <free@plt>
  4233cb:	mov    QWORD PTR [rsp],0x0
  4233d3:	xor    eax,eax
  4233d5:	pop    rcx
  4233d6:	ret    
  4233d7:	nop    WORD PTR [rax+rax*1+0x0]

00000000004233e0 <flatcc_builder_aligned_free@@Base>:
  4233e0:	jmp    406030 <free@plt>
  4233e5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4233ef:	nop

00000000004233f0 <flatcc_builder_get_emit_context@@Base>:
  4233f0:	mov    rax,QWORD PTR [rdi+0x38]
  4233f4:	ret    
  4233f5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4233ff:	nop

0000000000423400 <flatcc_emitter_recycle_page@@Base>:
  423400:	mov    rcx,QWORD PTR [rdi]
  423403:	mov    eax,0xffffffff
  423408:	cmp    rcx,rsi
  42340b:	je     423462 <flatcc_emitter_recycle_page@@Base+0x62>
  42340d:	cmp    QWORD PTR [rdi+0x8],rsi
  423411:	je     423462 <flatcc_emitter_recycle_page@@Base+0x62>
  423413:	mov    rax,QWORD PTR [rsi+0xb80]
  42341a:	mov    rdx,QWORD PTR [rsi+0xb88]
  423421:	mov    QWORD PTR [rax+0xb88],rdx
  423428:	mov    rdx,QWORD PTR [rsi+0xb88]
  42342f:	mov    QWORD PTR [rdx+0xb80],rax
  423436:	mov    rax,QWORD PTR [rcx+0xb88]
  42343d:	mov    QWORD PTR [rsi+0xb88],rax
  423444:	mov    QWORD PTR [rsi+0xb80],rcx
  42344b:	mov    QWORD PTR [rax+0xb80],rsi
  423452:	mov    rax,QWORD PTR [rsi+0xb80]
  423459:	mov    QWORD PTR [rax+0xb88],rsi
  423460:	xor    eax,eax
  423462:	ret    
  423463:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42346d:	nop    DWORD PTR [rax]

0000000000423470 <flatcc_emitter_reset@@Base>:
  423470:	push   r14
  423472:	push   rbx
  423473:	push   rax
  423474:	mov    rax,QWORD PTR [rdi]
  423477:	test   rax,rax
  42347a:	je     42355b <flatcc_emitter_reset@@Base+0xeb>
  423480:	mov    rbx,rdi
  423483:	mov    QWORD PTR [rdi+0x8],rax
  423487:	lea    rcx,[rax+0x5c0]
  42348e:	mov    QWORD PTR [rdi+0x10],rcx
  423492:	mov    QWORD PTR [rdi+0x20],rcx
  423496:	mov    QWORD PTR [rdi+0x18],0x5c0
  42349e:	mov    QWORD PTR [rdi+0x28],0x5c0
  4234a6:	mov    DWORD PTR [rax+0xb90],0xfffffa40
  4234b0:	mov    rcx,QWORD PTR [rdi+0x30]
  4234b4:	mov    rdx,QWORD PTR [rdi+0x40]
  4234b8:	test   rdx,rdx
  4234bb:	jne    4234c4 <flatcc_emitter_reset@@Base+0x54>
  4234bd:	mov    QWORD PTR [rbx+0x40],rcx
  4234c1:	mov    rdx,rcx
  4234c4:	lea    rdx,[rdx+rdx*2]
  4234c8:	shr    rdx,0x2
  4234cc:	shr    rcx,0x2
  4234d0:	add    rcx,rdx
  4234d3:	mov    QWORD PTR [rbx+0x40],rcx
  4234d7:	mov    QWORD PTR [rbx+0x30],0x0
  4234df:	add    rcx,rcx
  4234e2:	cmp    rcx,QWORD PTR [rbx+0x38]
  4234e6:	jae    42355b <flatcc_emitter_reset@@Base+0xeb>
  4234e8:	mov    rdi,QWORD PTR [rax+0xb80]
  4234ef:	cmp    rdi,rax
  4234f2:	je     42355b <flatcc_emitter_reset@@Base+0xeb>
  4234f4:	lea    rcx,[rax+0xb80]
  4234fb:	mov    r14,0xfffffffffffff480
  423502:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42350c:	nop    DWORD PTR [rax+0x0]
  423510:	mov    rdx,QWORD PTR [rdi+0xb80]
  423517:	mov    QWORD PTR [rcx],rdx
  42351a:	mov    rcx,QWORD PTR [rdi+0xb80]
  423521:	mov    QWORD PTR [rcx+0xb88],rax
  423528:	call   406030 <free@plt>
  42352d:	mov    rax,QWORD PTR [rbx+0x38]
  423531:	add    rax,r14
  423534:	mov    QWORD PTR [rbx+0x38],rax
  423538:	mov    rcx,QWORD PTR [rbx+0x40]
  42353c:	add    rcx,rcx
  42353f:	cmp    rcx,rax
  423542:	jae    42355b <flatcc_emitter_reset@@Base+0xeb>
  423544:	mov    rax,QWORD PTR [rbx+0x8]
  423548:	lea    rcx,[rax+0xb80]
  42354f:	mov    rdi,QWORD PTR [rax+0xb80]
  423556:	cmp    rdi,QWORD PTR [rbx]
  423559:	jne    423510 <flatcc_emitter_reset@@Base+0xa0>
  42355b:	add    rsp,0x8
  42355f:	pop    rbx
  423560:	pop    r14
  423562:	ret    
  423563:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42356d:	nop    DWORD PTR [rax]

0000000000423570 <flatcc_emitter_clear@@Base>:
  423570:	push   r14
  423572:	push   rbx
  423573:	push   rax
  423574:	mov    rbx,QWORD PTR [rdi]
  423577:	test   rbx,rbx
  42357a:	je     4235da <flatcc_emitter_clear@@Base+0x6a>
  42357c:	mov    r14,rdi
  42357f:	mov    rax,QWORD PTR [rbx+0xb88]
  423586:	mov    QWORD PTR [rax+0xb80],0x0
  423591:	jmp    4235af <flatcc_emitter_clear@@Base+0x3f>
  423593:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42359d:	nop    DWORD PTR [rax]
  4235a0:	mov    rbx,rax
  4235a3:	mov    rdi,QWORD PTR [rax+0xb88]
  4235aa:	call   406030 <free@plt>
  4235af:	mov    rax,QWORD PTR [rbx+0xb80]
  4235b6:	test   rax,rax
  4235b9:	jne    4235a0 <flatcc_emitter_clear@@Base+0x30>
  4235bb:	mov    rdi,rbx
  4235be:	call   406030 <free@plt>
  4235c3:	vxorps xmm0,xmm0,xmm0
  4235c7:	vmovups YMMWORD PTR [r14+0x20],ymm0
  4235cd:	vmovups YMMWORD PTR [r14],ymm0
  4235d2:	mov    QWORD PTR [r14+0x40],0x0
  4235da:	add    rsp,0x8
  4235de:	pop    rbx
  4235df:	pop    r14
  4235e1:	vzeroupper 
  4235e4:	ret    
  4235e5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4235ef:	nop

00000000004235f0 <flatcc_emitter@@Base>:
  4235f0:	push   rbp
  4235f1:	push   r15
  4235f3:	push   r14
  4235f5:	push   r13
  4235f7:	push   r12
  4235f9:	push   rbx
  4235fa:	sub    rsp,0x18
  4235fe:	mov    r13d,edx
  423601:	mov    r14,rsi
  423604:	mov    r12,rdi
  423607:	add    QWORD PTR [rdi+0x30],r8
  42360b:	test   ecx,ecx
  42360d:	js     4237a1 <flatcc_emitter@@Base+0x1b1>
  423613:	mov    rdx,QWORD PTR [r12+0x28]
  423618:	cmp    rdx,r8
  42361b:	jae    423988 <flatcc_emitter@@Base+0x398>
  423621:	xor    eax,eax
  423623:	test   r13d,r13d
  423626:	je     423abf <flatcc_emitter@@Base+0x4cf>
  42362c:	mov    QWORD PTR [rsp+0x8],r13
  423631:	mov    r15,QWORD PTR [r14+0x8]
  423635:	test   r15,r15
  423638:	je     423786 <flatcc_emitter@@Base+0x196>
  42363e:	mov    r13,QWORD PTR [r14]
  423641:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42364b:	nop    DWORD PTR [rax+rax*1+0x0]
  423650:	mov    rbp,r15
  423653:	cmp    r15,rdx
  423656:	jbe    423758 <flatcc_emitter@@Base+0x168>
  42365c:	mov    rbp,rdx
  42365f:	nop
  423660:	test   rbp,rbp
  423663:	jne    423758 <flatcc_emitter@@Base+0x168>
  423669:	mov    rbx,QWORD PTR [r12+0x8]
  42366e:	test   rbx,rbx
  423671:	je     423680 <flatcc_emitter@@Base+0x90>
  423673:	mov    rax,QWORD PTR [rbx+0xb80]
  42367a:	cmp    rax,QWORD PTR [r12]
  42367e:	jne    4236c1 <flatcc_emitter@@Base+0xd1>
  423680:	mov    edi,0xb98
  423685:	call   4060f0 <malloc@plt>
  42368a:	test   rax,rax
  42368d:	je     42399d <flatcc_emitter@@Base+0x3ad>
  423693:	add    QWORD PTR [r12+0x38],0xb80
  42369c:	test   rbx,rbx
  42369f:	je     423700 <flatcc_emitter@@Base+0x110>
  4236a1:	mov    QWORD PTR [rax+0xb88],rbx
  4236a8:	mov    rcx,QWORD PTR [r12]
  4236ac:	mov    QWORD PTR [rax+0xb80],rcx
  4236b3:	mov    QWORD PTR [rcx+0xb88],rax
  4236ba:	mov    QWORD PTR [rbx+0xb80],rax
  4236c1:	mov    QWORD PTR [r12+0x8],rax
  4236c6:	mov    QWORD PTR [r12+0x20],rax
  4236cb:	mov    QWORD PTR [r12+0x28],0xb80
  4236d4:	mov    rcx,QWORD PTR [rax+0xb88]
  4236db:	mov    ecx,DWORD PTR [rcx+0xb90]
  4236e1:	mov    edx,0xb80
  4236e6:	add    ecx,edx
  4236e8:	mov    DWORD PTR [rax+0xb90],ecx
  4236ee:	mov    ebp,0xb80
  4236f3:	cmp    r15,rbp
  4236f6:	ja     423660 <flatcc_emitter@@Base+0x70>
  4236fc:	jmp    423755 <flatcc_emitter@@Base+0x165>
  4236fe:	xchg   ax,ax
  423700:	mov    QWORD PTR [r12],rax
  423704:	mov    QWORD PTR [r12+0x8],rax
  423709:	mov    QWORD PTR [rax+0xb80],rax
  423710:	mov    QWORD PTR [rax+0xb88],rax
  423717:	mov    rcx,rax
  42371a:	add    rcx,0x5c0
  423721:	mov    QWORD PTR [r12+0x10],rcx
  423726:	mov    QWORD PTR [r12+0x20],rcx
  42372b:	mov    QWORD PTR [r12+0x18],0x5c0
  423734:	mov    QWORD PTR [r12+0x28],0x5c0
  42373d:	mov    DWORD PTR [rax+0xb90],0xfffffa40
  423747:	mov    ebp,0x5c0
  42374c:	cmp    r15,rbp
  42374f:	ja     423660 <flatcc_emitter@@Base+0x70>
  423755:	mov    rbp,r15
  423758:	mov    rdi,QWORD PTR [r12+0x20]
  42375d:	mov    rsi,r13
  423760:	mov    rdx,rbp
  423763:	call   4060e0 <memcpy@plt>
  423768:	add    QWORD PTR [r12+0x20],rbp
  42376d:	add    r13,rbp
  423770:	mov    rdx,QWORD PTR [r12+0x28]
  423775:	sub    rdx,rbp
  423778:	mov    QWORD PTR [r12+0x28],rdx
  42377d:	sub    r15,rbp
  423780:	jne    423650 <flatcc_emitter@@Base+0x60>
  423786:	mov    r13,QWORD PTR [rsp+0x8]
  42378b:	add    r13d,0xffffffff
  42378f:	add    r14,0x10
  423793:	test   r13d,r13d
  423796:	jne    42362c <flatcc_emitter@@Base+0x3c>
  42379c:	jmp    423abd <flatcc_emitter@@Base+0x4cd>
  4237a1:	lea    rsi,[r12+0x18]
  4237a6:	mov    rdx,QWORD PTR [r12+0x18]
  4237ab:	cmp    rdx,r8
  4237ae:	jae    4239a7 <flatcc_emitter@@Base+0x3b7>
  4237b4:	xor    eax,eax
  4237b6:	test   r13d,r13d
  4237b9:	je     423abf <flatcc_emitter@@Base+0x4cf>
  4237bf:	mov    QWORD PTR [rsp+0x10],rsi
  4237c4:	movsxd rax,r13d
  4237c7:	shl    rax,0x4
  4237cb:	add    r14,rax
  4237ce:	mov    esi,0xfffff480
  4237d3:	mov    QWORD PTR [rsp+0x8],r13
  4237d8:	mov    r15,QWORD PTR [r14-0x8]
  4237dc:	add    r14,0xfffffffffffffff0
  4237e0:	test   r15,r15
  4237e3:	je     423974 <flatcc_emitter@@Base+0x384>
  4237e9:	mov    r13,QWORD PTR [r14]
  4237ec:	add    r13,r15
  4237ef:	nop
  4237f0:	mov    rax,QWORD PTR [rsp+0x10]
  4237f5:	mov    rax,QWORD PTR [rax]
  4237f8:	cmp    r15,rax
  4237fb:	jbe    423940 <flatcc_emitter@@Base+0x350>
  423801:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42380b:	nop    DWORD PTR [rax+rax*1+0x0]
  423810:	mov    rbp,rax
  423813:	test   rax,rax
  423816:	jne    423943 <flatcc_emitter@@Base+0x353>
  42381c:	mov    rbx,QWORD PTR [r12]
  423820:	test   rbx,rbx
  423823:	je     423850 <flatcc_emitter@@Base+0x260>
  423825:	mov    rax,QWORD PTR [rbx+0xb88]
  42382c:	cmp    rax,QWORD PTR [r12+0x8]
  423831:	je     423850 <flatcc_emitter@@Base+0x260>
  423833:	mov    edx,DWORD PTR [rbx+0xb90]
  423839:	add    edx,esi
  42383b:	lea    rcx,[rax+0xb90]
  423842:	mov    DWORD PTR [rax+0xb90],edx
  423848:	mov    QWORD PTR [r12],rax
  42384c:	jmp    4238a5 <flatcc_emitter@@Base+0x2b5>
  42384e:	xchg   ax,ax
  423850:	mov    edi,0xb98
  423855:	call   4060f0 <malloc@plt>
  42385a:	test   rax,rax
  42385d:	je     42399d <flatcc_emitter@@Base+0x3ad>
  423863:	add    QWORD PTR [r12+0x38],0xb80
  42386c:	test   rbx,rbx
  42386f:	je     4238e0 <flatcc_emitter@@Base+0x2f0>
  423871:	mov    rcx,QWORD PTR [r12+0x8]
  423876:	mov    QWORD PTR [rax+0xb88],rcx
  42387d:	mov    QWORD PTR [rax+0xb80],rbx
  423884:	mov    QWORD PTR [rbx+0xb88],rax
  42388b:	mov    QWORD PTR [rcx+0xb80],rax
  423892:	mov    QWORD PTR [r12],rax
  423896:	mov    rcx,rax
  423899:	add    rcx,0xb90
  4238a0:	mov    esi,0xfffff480
  4238a5:	lea    rdx,[rax+0xb80]
  4238ac:	mov    QWORD PTR [r12+0x10],rdx
  4238b1:	mov    QWORD PTR [r12+0x18],0xb80
  4238ba:	mov    rax,QWORD PTR [rax+0xb80]
  4238c1:	mov    eax,DWORD PTR [rax+0xb90]
  4238c7:	add    eax,esi
  4238c9:	mov    DWORD PTR [rcx],eax
  4238cb:	mov    eax,0xb80
  4238d0:	cmp    r15,rax
  4238d3:	ja     423810 <flatcc_emitter@@Base+0x220>
  4238d9:	jmp    423940 <flatcc_emitter@@Base+0x350>
  4238db:	nop    DWORD PTR [rax+rax*1+0x0]
  4238e0:	mov    QWORD PTR [r12],rax
  4238e4:	mov    QWORD PTR [r12+0x8],rax
  4238e9:	mov    QWORD PTR [rax+0xb80],rax
  4238f0:	mov    QWORD PTR [rax+0xb88],rax
  4238f7:	mov    rcx,rax
  4238fa:	add    rcx,0x5c0
  423901:	mov    QWORD PTR [r12+0x10],rcx
  423906:	mov    QWORD PTR [r12+0x20],rcx
  42390b:	mov    QWORD PTR [r12+0x18],0x5c0
  423914:	mov    QWORD PTR [r12+0x28],0x5c0
  42391d:	mov    DWORD PTR [rax+0xb90],0xfffffa40
  423927:	mov    eax,0x5c0
  42392c:	mov    esi,0xfffff480
  423931:	cmp    r15,rax
  423934:	ja     423810 <flatcc_emitter@@Base+0x220>
  42393a:	nop    WORD PTR [rax+rax*1+0x0]
  423940:	mov    rbp,r15
  423943:	mov    rdi,QWORD PTR [r12+0x10]
  423948:	sub    rdi,rbp
  42394b:	mov    QWORD PTR [r12+0x10],rdi
  423950:	sub    rax,rbp
  423953:	mov    QWORD PTR [r12+0x18],rax
  423958:	sub    r13,rbp
  42395b:	mov    rsi,r13
  42395e:	mov    rdx,rbp
  423961:	call   4060e0 <memcpy@plt>
  423966:	mov    esi,0xfffff480
  42396b:	sub    r15,rbp
  42396e:	jne    4237f0 <flatcc_emitter@@Base+0x200>
  423974:	mov    r13,QWORD PTR [rsp+0x8]
  423979:	add    r13d,0xffffffff
  42397d:	jne    4237d3 <flatcc_emitter@@Base+0x1e3>
  423983:	jmp    423abd <flatcc_emitter@@Base+0x4cd>
  423988:	lea    rsi,[r12+0x28]
  42398d:	mov    rbp,QWORD PTR [r12+0x20]
  423992:	lea    rcx,[r8+rbp*1]
  423996:	mov    QWORD PTR [r12+0x20],rcx
  42399b:	jmp    4239b4 <flatcc_emitter@@Base+0x3c4>
  42399d:	mov    eax,0xffffffff
  4239a2:	jmp    423abf <flatcc_emitter@@Base+0x4cf>
  4239a7:	mov    rbp,QWORD PTR [r12+0x10]
  4239ac:	sub    rbp,r8
  4239af:	mov    QWORD PTR [r12+0x10],rbp
  4239b4:	sub    rdx,r8
  4239b7:	mov    QWORD PTR [rsi],rdx
  4239ba:	xor    eax,eax
  4239bc:	test   r13d,r13d
  4239bf:	je     423abf <flatcc_emitter@@Base+0x4cf>
  4239c5:	lea    r15d,[r13-0x1]
  4239c9:	mov    r12d,r13d
  4239cc:	and    r12d,0x7
  4239d0:	je     423a02 <flatcc_emitter@@Base+0x412>
  4239d2:	xor    ebx,ebx
  4239d4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4239de:	xchg   ax,ax
  4239e0:	mov    rsi,QWORD PTR [r14]
  4239e3:	mov    rdx,QWORD PTR [r14+0x8]
  4239e7:	mov    rdi,rbp
  4239ea:	call   4060e0 <memcpy@plt>
  4239ef:	add    rbp,QWORD PTR [r14+0x8]
  4239f3:	add    r14,0x10
  4239f7:	add    ebx,0x1
  4239fa:	cmp    r12d,ebx
  4239fd:	jne    4239e0 <flatcc_emitter@@Base+0x3f0>
  4239ff:	sub    r13d,ebx
  423a02:	cmp    r15d,0x7
  423a06:	jb     423abd <flatcc_emitter@@Base+0x4cd>
  423a0c:	nop    DWORD PTR [rax+0x0]
  423a10:	mov    rsi,QWORD PTR [r14]
  423a13:	mov    rdx,QWORD PTR [r14+0x8]
  423a17:	mov    rdi,rbp
  423a1a:	call   4060e0 <memcpy@plt>
  423a1f:	add    rbp,QWORD PTR [r14+0x8]
  423a23:	mov    rsi,QWORD PTR [r14+0x10]
  423a27:	mov    rdx,QWORD PTR [r14+0x18]
  423a2b:	mov    rdi,rbp
  423a2e:	call   4060e0 <memcpy@plt>
  423a33:	add    rbp,QWORD PTR [r14+0x18]
  423a37:	mov    rsi,QWORD PTR [r14+0x20]
  423a3b:	mov    rdx,QWORD PTR [r14+0x28]
  423a3f:	mov    rdi,rbp
  423a42:	call   4060e0 <memcpy@plt>
  423a47:	add    rbp,QWORD PTR [r14+0x28]
  423a4b:	mov    rsi,QWORD PTR [r14+0x30]
  423a4f:	mov    rdx,QWORD PTR [r14+0x38]
  423a53:	mov    rdi,rbp
  423a56:	call   4060e0 <memcpy@plt>
  423a5b:	add    rbp,QWORD PTR [r14+0x38]
  423a5f:	mov    rsi,QWORD PTR [r14+0x40]
  423a63:	mov    rdx,QWORD PTR [r14+0x48]
  423a67:	mov    rdi,rbp
  423a6a:	call   4060e0 <memcpy@plt>
  423a6f:	add    rbp,QWORD PTR [r14+0x48]
  423a73:	mov    rsi,QWORD PTR [r14+0x50]
  423a77:	mov    rdx,QWORD PTR [r14+0x58]
  423a7b:	mov    rdi,rbp
  423a7e:	call   4060e0 <memcpy@plt>
  423a83:	add    rbp,QWORD PTR [r14+0x58]
  423a87:	mov    rsi,QWORD PTR [r14+0x60]
  423a8b:	mov    rdx,QWORD PTR [r14+0x68]
  423a8f:	mov    rdi,rbp
  423a92:	call   4060e0 <memcpy@plt>
  423a97:	add    rbp,QWORD PTR [r14+0x68]
  423a9b:	mov    rsi,QWORD PTR [r14+0x70]
  423a9f:	mov    rdx,QWORD PTR [r14+0x78]
  423aa3:	mov    rdi,rbp
  423aa6:	call   4060e0 <memcpy@plt>
  423aab:	add    rbp,QWORD PTR [r14+0x78]
  423aaf:	sub    r14,0xffffffffffffff80
  423ab3:	add    r13d,0xfffffff8
  423ab7:	jne    423a10 <flatcc_emitter@@Base+0x420>
  423abd:	xor    eax,eax
  423abf:	add    rsp,0x18
  423ac3:	pop    rbx
  423ac4:	pop    r12
  423ac6:	pop    r13
  423ac8:	pop    r14
  423aca:	pop    r15
  423acc:	pop    rbp
  423acd:	ret    
  423ace:	xchg   ax,ax

0000000000423ad0 <flatcc_emitter_copy_buffer@@Base>:
  423ad0:	push   r15
  423ad2:	push   r14
  423ad4:	push   r12
  423ad6:	push   rbx
  423ad7:	push   rax
  423ad8:	mov    rax,rdx
  423adb:	mov    rdx,QWORD PTR [rdi+0x30]
  423adf:	cmp    rdx,rax
  423ae2:	ja     423b6d <flatcc_emitter_copy_buffer@@Base+0x9d>
  423ae8:	mov    r14,rdi
  423aeb:	mov    rax,QWORD PTR [rdi]
  423aee:	test   rax,rax
  423af1:	je     423b6d <flatcc_emitter_copy_buffer@@Base+0x9d>
  423af3:	mov    r15,rsi
  423af6:	cmp    rax,QWORD PTR [r14+0x8]
  423afa:	je     423b7f <flatcc_emitter_copy_buffer@@Base+0xaf>
  423b00:	mov    r12d,0xb80
  423b06:	sub    r12,QWORD PTR [r14+0x18]
  423b0a:	mov    rsi,QWORD PTR [r14+0x10]
  423b0e:	mov    rdi,r15
  423b11:	mov    rdx,r12
  423b14:	call   4060e0 <memcpy@plt>
  423b19:	add    r12,r15
  423b1c:	mov    rax,QWORD PTR [r14]
  423b1f:	mov    rbx,QWORD PTR [rax+0xb80]
  423b26:	cmp    rbx,QWORD PTR [r14+0x8]
  423b2a:	je     423b54 <flatcc_emitter_copy_buffer@@Base+0x84>
  423b2c:	nop    DWORD PTR [rax+0x0]
  423b30:	mov    edx,0xb80
  423b35:	mov    rdi,r12
  423b38:	mov    rsi,rbx
  423b3b:	call   4060e0 <memcpy@plt>
  423b40:	add    r12,0xb80
  423b47:	mov    rbx,QWORD PTR [rbx+0xb80]
  423b4e:	cmp    rbx,QWORD PTR [r14+0x8]
  423b52:	jne    423b30 <flatcc_emitter_copy_buffer@@Base+0x60>
  423b54:	mov    edx,0xb80
  423b59:	sub    rdx,QWORD PTR [r14+0x28]
  423b5d:	mov    rdi,r12
  423b60:	mov    rsi,rbx
  423b63:	call   4060e0 <memcpy@plt>
  423b68:	mov    r15,r12
  423b6b:	jmp    423b70 <flatcc_emitter_copy_buffer@@Base+0xa0>
  423b6d:	xor    r15d,r15d
  423b70:	mov    rax,r15
  423b73:	add    rsp,0x8
  423b77:	pop    rbx
  423b78:	pop    r12
  423b7a:	pop    r14
  423b7c:	pop    r15
  423b7e:	ret    
  423b7f:	mov    rsi,QWORD PTR [r14+0x10]
  423b83:	mov    rdi,r15
  423b86:	call   4060e0 <memcpy@plt>
  423b8b:	jmp    423b70 <flatcc_emitter_copy_buffer@@Base+0xa0>
  423b8d:	nop    DWORD PTR [rax]

0000000000423b90 <flatcc_verify_error_string@@Base>:
  423b90:	cmp    edi,0x24
  423b93:	ja     423ba4 <flatcc_verify_error_string@@Base+0x14>
  423b95:	movsxd rax,edi
  423b98:	lea    rcx,[rip+0x1fff1]        # 443b90 <flatcc_builder_padding_base@@Base+0xa360>
  423b9f:	mov    rax,QWORD PTR [rcx+rax*8]
  423ba3:	ret    
  423ba4:	lea    rax,[rip+0x17595]        # 43b140 <flatcc_builder_padding_base@@Base+0x1910>
  423bab:	ret    
  423bac:	nop    DWORD PTR [rax+0x0]

0000000000423bb0 <flatcc_verify_field@@Base>:
  423bb0:	lea    esi,[rsi+rsi*1]
  423bb3:	add    esi,0x4
  423bb6:	xor    eax,eax
  423bb8:	cmp    si,WORD PTR [rdi+0x1e]
  423bbc:	jae    423c02 <flatcc_verify_field@@Base+0x52>
  423bbe:	mov    r8,QWORD PTR [rdi+0x10]
  423bc2:	movzx  esi,si
  423bc5:	movzx  esi,WORD PTR [r8+rsi*1]
  423bca:	test   esi,esi
  423bcc:	je     423c02 <flatcc_verify_field@@Base+0x52>
  423bce:	add    edx,esi
  423bd0:	movzx  r8d,WORD PTR [rdi+0x1c]
  423bd5:	mov    eax,0xd
  423bda:	cmp    edx,r8d
  423bdd:	ja     423c02 <flatcc_verify_field@@Base+0x52>
  423bdf:	add    esi,DWORD PTR [rdi]
  423be1:	mov    edx,DWORD PTR [rdi+0x18]
  423be4:	add    edx,esi
  423be6:	movzx  ecx,cx
  423be9:	add    ecx,0xffffffff
  423bec:	mov    eax,0x0
  423bf1:	test   edx,ecx
  423bf3:	je     423c02 <flatcc_verify_field@@Base+0x52>
  423bf5:	add    esi,DWORD PTR [rdi+0x18]
  423bf8:	and    esi,ecx
  423bfa:	mov    eax,0xc
  423bff:	cmove  eax,esi
  423c02:	ret    
  423c03:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423c0d:	nop    DWORD PTR [rax]

0000000000423c10 <flatcc_verify_string_field@@Base>:
  423c10:	lea    eax,[rsi+rsi*1]
  423c13:	add    eax,0x4
  423c16:	cmp    ax,WORD PTR [rdi+0x1e]
  423c1a:	jae    423c4a <flatcc_verify_string_field@@Base+0x3a>
  423c1c:	mov    rcx,QWORD PTR [rdi+0x10]
  423c20:	movzx  eax,ax
  423c23:	movzx  esi,WORD PTR [rcx+rax*1]
  423c27:	test   esi,esi
  423c29:	je     423c4a <flatcc_verify_string_field@@Base+0x3a>
  423c2b:	lea    ecx,[rsi+0x4]
  423c2e:	movzx  edx,WORD PTR [rdi+0x1c]
  423c32:	mov    eax,0xd
  423c37:	cmp    ecx,edx
  423c39:	ja     423c49 <flatcc_verify_string_field@@Base+0x39>
  423c3b:	add    esi,DWORD PTR [rdi+0x18]
  423c3e:	mov    eax,0xc
  423c43:	test   sil,0x3
  423c47:	je     423c55 <flatcc_verify_string_field@@Base+0x45>
  423c49:	ret    
  423c4a:	xor    eax,eax
  423c4c:	test   edx,edx
  423c4e:	setne  al
  423c51:	shl    eax,0x2
  423c54:	ret    
  423c55:	test   esi,esi
  423c57:	je     423caf <flatcc_verify_string_field@@Base+0x9f>
  423c59:	mov    rcx,QWORD PTR [rdi]
  423c5c:	mov    eax,esi
  423c5e:	mov    edx,DWORD PTR [rcx+rax*1]
  423c61:	add    edx,esi
  423c63:	mov    eax,0x11
  423c68:	cmp    edx,esi
  423c6a:	jbe    423c49 <flatcc_verify_string_field@@Base+0x39>
  423c6c:	mov    r8d,DWORD PTR [rdi+0x8]
  423c70:	mov    edi,edx
  423c72:	lea    rsi,[rdi+0x4]
  423c76:	cmp    rsi,r8
  423c79:	ja     423c49 <flatcc_verify_string_field@@Base+0x39>
  423c7b:	mov    esi,edi
  423c7d:	and    esi,0x3
  423c80:	test   rsi,rsi
  423c83:	jne    423c49 <flatcc_verify_string_field@@Base+0x39>
  423c85:	mov    edi,DWORD PTR [rcx+rdi*1]
  423c88:	add    edx,0x4
  423c8b:	sub    r8d,edx
  423c8e:	lea    esi,[rdi+0x1]
  423c91:	mov    eax,0x8
  423c96:	cmp    r8d,esi
  423c99:	jb     423c49 <flatcc_verify_string_field@@Base+0x39>
  423c9b:	mov    eax,edx
  423c9d:	add    rcx,rax
  423ca0:	xor    edx,edx
  423ca2:	cmp    BYTE PTR [rdi+rcx*1],0x0
  423ca6:	mov    eax,0x7
  423cab:	cmove  eax,edx
  423cae:	ret    
  423caf:	xor    eax,eax
  423cb1:	ret    
  423cb2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423cbc:	nop    DWORD PTR [rax+0x0]

0000000000423cc0 <flatcc_verify_vector_field@@Base>:
  423cc0:	lea    eax,[rsi+rsi*1]
  423cc3:	add    eax,0x4
  423cc6:	cmp    ax,WORD PTR [rdi+0x1e]
  423cca:	jae    423cfc <flatcc_verify_vector_field@@Base+0x3c>
  423ccc:	mov    rsi,QWORD PTR [rdi+0x10]
  423cd0:	movzx  eax,ax
  423cd3:	movzx  esi,WORD PTR [rsi+rax*1]
  423cd7:	test   esi,esi
  423cd9:	je     423cfc <flatcc_verify_vector_field@@Base+0x3c>
  423cdb:	lea    r10d,[rsi+0x4]
  423cdf:	movzx  edx,WORD PTR [rdi+0x1c]
  423ce3:	mov    eax,0xd
  423ce8:	cmp    r10d,edx
  423ceb:	ja     423cfb <flatcc_verify_vector_field@@Base+0x3b>
  423ced:	add    esi,DWORD PTR [rdi+0x18]
  423cf0:	mov    eax,0xc
  423cf5:	test   sil,0x3
  423cf9:	je     423d07 <flatcc_verify_vector_field@@Base+0x47>
  423cfb:	ret    
  423cfc:	xor    eax,eax
  423cfe:	test   edx,edx
  423d00:	setne  al
  423d03:	shl    eax,0x2
  423d06:	ret    
  423d07:	test   esi,esi
  423d09:	je     423d81 <flatcc_verify_vector_field@@Base+0xc1>
  423d0b:	mov    r10,QWORD PTR [rdi]
  423d0e:	mov    eax,esi
  423d10:	mov    r11d,DWORD PTR [r10+rax*1]
  423d14:	add    r11d,esi
  423d17:	movzx  eax,r8w
  423d1b:	cmp    eax,0x4
  423d1e:	mov    edx,0x4
  423d23:	cmova  edx,eax
  423d26:	mov    eax,0x10
  423d2b:	cmp    r11d,esi
  423d2e:	jbe    423cfb <flatcc_verify_vector_field@@Base+0x3b>
  423d30:	mov    r8d,DWORD PTR [rdi+0x8]
  423d34:	mov    edi,r11d
  423d37:	lea    rsi,[rdi+0x4]
  423d3b:	cmp    rsi,r8
  423d3e:	ja     423cfb <flatcc_verify_vector_field@@Base+0x3b>
  423d40:	push   rbx
  423d41:	movzx  edx,dx
  423d44:	movabs rbx,0x1ffffffff
  423d4e:	add    rbx,rdx
  423d51:	or     rbx,0x3
  423d55:	test   rsi,rbx
  423d58:	pop    rbx
  423d59:	jne    423cfb <flatcc_verify_vector_field@@Base+0x3b>
  423d5b:	mov    edx,DWORD PTR [r10+rdi*1]
  423d5f:	mov    eax,0x19
  423d64:	cmp    edx,r9d
  423d67:	ja     423cfb <flatcc_verify_vector_field@@Base+0x3b>
  423d69:	add    r8d,0xfffffffc
  423d6d:	sub    r8d,r11d
  423d70:	imul   edx,ecx
  423d73:	xor    ecx,ecx
  423d75:	cmp    r8d,edx
  423d78:	mov    eax,0x1a
  423d7d:	cmovae eax,ecx
  423d80:	ret    
  423d81:	xor    eax,eax
  423d83:	ret    
  423d84:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423d8e:	xchg   ax,ax

0000000000423d90 <flatcc_verify_string_vector_field@@Base>:
  423d90:	push   r14
  423d92:	push   rbx
  423d93:	lea    eax,[rsi+rsi*1]
  423d96:	add    eax,0x4
  423d99:	cmp    ax,WORD PTR [rdi+0x1e]
  423d9d:	jae    423ecd <flatcc_verify_string_vector_field@@Base+0x13d>
  423da3:	mov    rcx,QWORD PTR [rdi+0x10]
  423da7:	movzx  eax,ax
  423daa:	movzx  esi,WORD PTR [rcx+rax*1]
  423dae:	test   esi,esi
  423db0:	je     423ecd <flatcc_verify_string_vector_field@@Base+0x13d>
  423db6:	lea    ecx,[rsi+0x4]
  423db9:	movzx  edx,WORD PTR [rdi+0x1c]
  423dbd:	mov    eax,0xd
  423dc2:	cmp    ecx,edx
  423dc4:	ja     423ed7 <flatcc_verify_string_vector_field@@Base+0x147>
  423dca:	mov    edx,DWORD PTR [rdi+0x18]
  423dcd:	lea    ebx,[rdx+rsi*1]
  423dd0:	mov    eax,0xc
  423dd5:	test   bl,0x3
  423dd8:	jne    423ed7 <flatcc_verify_string_vector_field@@Base+0x147>
  423dde:	xor    eax,eax
  423de0:	test   ebx,ebx
  423de2:	je     423ed7 <flatcc_verify_string_vector_field@@Base+0x147>
  423de8:	mov    r10,QWORD PTR [rdi]
  423deb:	mov    eax,ebx
  423ded:	mov    r14d,DWORD PTR [r10+rax*1]
  423df1:	lea    ecx,[r14+rbx*1]
  423df5:	mov    eax,0x10
  423dfa:	cmp    ecx,ebx
  423dfc:	jbe    423ed7 <flatcc_verify_string_vector_field@@Base+0x147>
  423e02:	test   cl,0x3
  423e05:	jne    423ed7 <flatcc_verify_string_vector_field@@Base+0x147>
  423e0b:	mov    r9d,DWORD PTR [rdi+0x8]
  423e0f:	mov    edi,ecx
  423e11:	lea    rbx,[rdi+0x4]
  423e15:	cmp    rbx,r9
  423e18:	ja     423ed7 <flatcc_verify_string_vector_field@@Base+0x147>
  423e1e:	mov    r8d,DWORD PTR [r10+rdi*1]
  423e22:	mov    eax,0x19
  423e27:	cmp    r8d,0x3fffffff
  423e2e:	ja     423ed7 <flatcc_verify_string_vector_field@@Base+0x147>
  423e34:	lea    edi,[r9-0x4]
  423e38:	sub    edi,ecx
  423e3a:	lea    ecx,[r8*4+0x0]
  423e42:	mov    eax,0x1a
  423e47:	cmp    edi,ecx
  423e49:	jb     423ed7 <flatcc_verify_string_vector_field@@Base+0x147>
  423e4f:	mov    eax,0x0
  423e54:	test   r8d,r8d
  423e57:	je     423ed7 <flatcc_verify_string_vector_field@@Base+0x147>
  423e59:	lea    eax,[r14+rdx*1]
  423e5d:	lea    edi,[rsi+rax*1]
  423e60:	add    edi,0x4
  423e63:	lea    r11d,[r9-0x8]
  423e67:	sub    r11d,esi
  423e6a:	sub    r11d,r14d
  423e6d:	sub    r11d,edx
  423e70:	xor    edx,edx
  423e72:	mov    eax,edi
  423e74:	mov    ecx,DWORD PTR [r10+rax*1]
  423e78:	lea    esi,[rdi+rcx*1]
  423e7b:	mov    eax,0x11
  423e80:	cmp    esi,edi
  423e82:	jbe    423ed7 <flatcc_verify_string_vector_field@@Base+0x147>
  423e84:	mov    esi,esi
  423e86:	lea    rbx,[rsi+0x4]
  423e8a:	cmp    rbx,r9
  423e8d:	ja     423ed7 <flatcc_verify_string_vector_field@@Base+0x147>
  423e8f:	mov    ebx,esi
  423e91:	and    ebx,0x3
  423e94:	test   rbx,rbx
  423e97:	jne    423ed7 <flatcc_verify_string_vector_field@@Base+0x147>
  423e99:	mov    eax,DWORD PTR [r10+rsi*1]
  423e9d:	mov    esi,r11d
  423ea0:	sub    esi,ecx
  423ea2:	lea    ebx,[rax+0x1]
  423ea5:	cmp    esi,ebx
  423ea7:	jb     423edb <flatcc_verify_string_vector_field@@Base+0x14b>
  423ea9:	lea    ecx,[rdi+rcx*1]
  423eac:	add    ecx,0x4
  423eaf:	mov    ecx,ecx
  423eb1:	add    rcx,r10
  423eb4:	cmp    BYTE PTR [rax+rcx*1],0x0
  423eb8:	jne    423ee2 <flatcc_verify_string_vector_field@@Base+0x152>
  423eba:	add    edx,0x1
  423ebd:	add    edi,0x4
  423ec0:	add    r11d,0xfffffffc
  423ec4:	xor    eax,eax
  423ec6:	cmp    edx,r8d
  423ec9:	jb     423e72 <flatcc_verify_string_vector_field@@Base+0xe2>
  423ecb:	jmp    423ed7 <flatcc_verify_string_vector_field@@Base+0x147>
  423ecd:	xor    eax,eax
  423ecf:	test   edx,edx
  423ed1:	setne  al
  423ed4:	shl    eax,0x2
  423ed7:	pop    rbx
  423ed8:	pop    r14
  423eda:	ret    
  423edb:	mov    eax,0x8
  423ee0:	jmp    423ed7 <flatcc_verify_string_vector_field@@Base+0x147>
  423ee2:	mov    eax,0x7
  423ee7:	jmp    423ed7 <flatcc_verify_string_vector_field@@Base+0x147>
  423ee9:	nop    DWORD PTR [rax+0x0]

0000000000423ef0 <flatcc_verify_table_field@@Base>:
  423ef0:	lea    eax,[rsi+rsi*1]
  423ef3:	add    eax,0x4
  423ef6:	cmp    ax,WORD PTR [rdi+0x1e]
  423efa:	jae    423f2c <flatcc_verify_table_field@@Base+0x3c>
  423efc:	mov    rsi,QWORD PTR [rdi+0x10]
  423f00:	movzx  eax,ax
  423f03:	movzx  esi,WORD PTR [rsi+rax*1]
  423f07:	test   esi,esi
  423f09:	je     423f2c <flatcc_verify_table_field@@Base+0x3c>
  423f0b:	lea    r8d,[rsi+0x4]
  423f0f:	movzx  edx,WORD PTR [rdi+0x1c]
  423f13:	mov    eax,0xd
  423f18:	cmp    r8d,edx
  423f1b:	ja     423f2b <flatcc_verify_table_field@@Base+0x3b>
  423f1d:	add    esi,DWORD PTR [rdi+0x18]
  423f20:	mov    eax,0xc
  423f25:	test   sil,0x3
  423f29:	je     423f37 <flatcc_verify_table_field@@Base+0x47>
  423f2b:	ret    
  423f2c:	xor    eax,eax
  423f2e:	test   edx,edx
  423f30:	setne  al
  423f33:	shl    eax,0x2
  423f36:	ret    
  423f37:	test   esi,esi
  423f39:	je     42401f <flatcc_verify_table_field@@Base+0x12f>
  423f3f:	sub    rsp,0x28
  423f43:	mov    r10,QWORD PTR [rdi]
  423f46:	mov    r8d,DWORD PTR [rdi+0x8]
  423f4a:	mov    eax,esi
  423f4c:	mov    edx,DWORD PTR [r10+rax*1]
  423f50:	mov    eax,DWORD PTR [rdi+0xc]
  423f53:	add    eax,0xffffffff
  423f56:	mov    DWORD PTR [rsp+0x14],eax
  423f5a:	je     424022 <flatcc_verify_table_field@@Base+0x132>
  423f60:	add    edx,esi
  423f62:	mov    eax,0xf
  423f67:	cmp    edx,esi
  423f69:	jbe    424027 <flatcc_verify_table_field@@Base+0x137>
  423f6f:	mov    esi,edx
  423f71:	lea    rdi,[rsi+0x4]
  423f75:	cmp    rdi,r8
  423f78:	ja     424027 <flatcc_verify_table_field@@Base+0x137>
  423f7e:	mov    edi,esi
  423f80:	and    edi,0x3
  423f83:	test   rdi,rdi
  423f86:	jne    424027 <flatcc_verify_table_field@@Base+0x137>
  423f8c:	mov    DWORD PTR [rsp+0x20],edx
  423f90:	mov    edi,edx
  423f92:	sub    edi,DWORD PTR [r10+rsi*1]
  423f96:	mov    eax,0x1d
  423f9b:	test   edi,0x80000001
  423fa1:	jne    424027 <flatcc_verify_table_field@@Base+0x137>
  423fa7:	mov    r9d,edi
  423faa:	lea    rsi,[r9+0x2]
  423fae:	mov    eax,0x1b
  423fb3:	cmp    rsi,r8
  423fb6:	ja     424027 <flatcc_verify_table_field@@Base+0x137>
  423fb8:	movzx  r11d,WORD PTR [r10+r9*1]
  423fbd:	mov    WORD PTR [rsp+0x26],r11w
  423fc3:	mov    eax,0x1e
  423fc8:	test   r11b,0x1
  423fcc:	jne    424027 <flatcc_verify_table_field@@Base+0x137>
  423fce:	mov    esi,r11d
  423fd1:	add    esi,edi
  423fd3:	cmp    esi,r8d
  423fd6:	ja     424027 <flatcc_verify_table_field@@Base+0x137>
  423fd8:	movzx  esi,r11w
  423fdc:	mov    eax,0x1c
  423fe1:	cmp    esi,0x4
  423fe4:	jb     424027 <flatcc_verify_table_field@@Base+0x137>
  423fe6:	add    edi,0x2
  423fe9:	movzx  esi,WORD PTR [r10+rdi*1]
  423fee:	mov    WORD PTR [rsp+0x24],si
  423ff3:	mov    edi,r8d
  423ff6:	sub    edi,edx
  423ff8:	mov    eax,0x14
  423ffd:	cmp    edi,esi
  423fff:	jb     424027 <flatcc_verify_table_field@@Base+0x137>
  424001:	add    r9,r10
  424004:	mov    QWORD PTR [rsp+0x18],r9
  424009:	mov    QWORD PTR [rsp+0x8],r10
  42400e:	mov    DWORD PTR [rsp+0x10],r8d
  424013:	lea    rdi,[rsp+0x8]
  424018:	call   rcx
  42401a:	add    rsp,0x28
  42401e:	ret    
  42401f:	xor    eax,eax
  424021:	ret    
  424022:	mov    eax,0x3
  424027:	add    rsp,0x28
  42402b:	ret    
  42402c:	nop    DWORD PTR [rax+0x0]

0000000000424030 <flatcc_verify_table_vector_field@@Base>:
  424030:	push   rbp
  424031:	push   r15
  424033:	push   r14
  424035:	push   r13
  424037:	push   r12
  424039:	push   rbx
  42403a:	sub    rsp,0x38
  42403e:	lea    eax,[rsi+rsi*1]
  424041:	add    eax,0x4
  424044:	cmp    ax,WORD PTR [rdi+0x1e]
  424048:	jae    424251 <flatcc_verify_table_vector_field@@Base+0x221>
  42404e:	mov    rbx,rcx
  424051:	mov    rcx,QWORD PTR [rdi+0x10]
  424055:	movzx  eax,ax
  424058:	movzx  ecx,WORD PTR [rcx+rax*1]
  42405c:	test   ecx,ecx
  42405e:	je     424251 <flatcc_verify_table_vector_field@@Base+0x221>
  424064:	lea    edx,[rcx+0x4]
  424067:	movzx  esi,WORD PTR [rdi+0x1c]
  42406b:	mov    eax,0xd
  424070:	cmp    edx,esi
  424072:	ja     42425b <flatcc_verify_table_vector_field@@Base+0x22b>
  424078:	mov    edx,DWORD PTR [rdi+0x18]
  42407b:	lea    esi,[rdx+rcx*1]
  42407e:	mov    eax,0xc
  424083:	test   sil,0x3
  424087:	jne    42425b <flatcc_verify_table_vector_field@@Base+0x22b>
  42408d:	xor    eax,eax
  42408f:	test   esi,esi
  424091:	je     42425b <flatcc_verify_table_vector_field@@Base+0x22b>
  424097:	mov    r12d,DWORD PTR [rdi+0xc]
  42409b:	test   r12d,r12d
  42409e:	jle    42426a <flatcc_verify_table_vector_field@@Base+0x23a>
  4240a4:	mov    r15,QWORD PTR [rdi]
  4240a7:	mov    eax,esi
  4240a9:	mov    r8d,DWORD PTR [r15+rax*1]
  4240ad:	lea    ebp,[r8+rsi*1]
  4240b1:	mov    eax,0x10
  4240b6:	cmp    ebp,esi
  4240b8:	jbe    42425b <flatcc_verify_table_vector_field@@Base+0x22b>
  4240be:	test   bpl,0x3
  4240c2:	jne    42425b <flatcc_verify_table_vector_field@@Base+0x22b>
  4240c8:	mov    r9d,DWORD PTR [rdi+0x8]
  4240cc:	mov    esi,ebp
  4240ce:	lea    rdi,[rsi+0x4]
  4240d2:	cmp    rdi,r9
  4240d5:	ja     42425b <flatcc_verify_table_vector_field@@Base+0x22b>
  4240db:	mov    r10d,DWORD PTR [r15+rsi*1]
  4240df:	mov    eax,0x19
  4240e4:	cmp    r10d,0x3fffffff
  4240eb:	ja     42425b <flatcc_verify_table_vector_field@@Base+0x22b>
  4240f1:	lea    r11d,[r9-0x4]
  4240f5:	mov    esi,r11d
  4240f8:	sub    esi,ebp
  4240fa:	lea    edi,[r10*4+0x0]
  424102:	mov    eax,0x1a
  424107:	cmp    esi,edi
  424109:	jb     42425b <flatcc_verify_table_vector_field@@Base+0x22b>
  42410f:	mov    eax,0x0
  424114:	test   r10d,r10d
  424117:	je     42425b <flatcc_verify_table_vector_field@@Base+0x22b>
  42411d:	add    r12d,0xfffffffe
  424121:	lea    eax,[r8+rdx*1]
  424125:	lea    r13d,[rcx+rax*1]
  424129:	add    r13d,0x4
  42412d:	sub    r11d,ecx
  424130:	sub    r11d,r8d
  424133:	sub    r11d,edx
  424136:	xor    ecx,ecx
  424138:	mov    QWORD PTR [rsp+0x30],r9
  42413d:	mov    QWORD PTR [rsp+0x28],r15
  424142:	mov    r13d,r13d
  424145:	mov    r14d,DWORD PTR [r15+r13*1]
  424149:	mov    DWORD PTR [rsp+0x14],r12d
  42414e:	test   r12d,r12d
  424151:	je     424339 <flatcc_verify_table_vector_field@@Base+0x309>
  424157:	lea    eax,[r14+r13*1]
  42415b:	cmp    eax,r13d
  42415e:	jbe    424271 <flatcc_verify_table_vector_field@@Base+0x241>
  424164:	mov    edx,eax
  424166:	lea    rsi,[rdx+0x4]
  42416a:	cmp    rsi,r9
  42416d:	ja     424271 <flatcc_verify_table_vector_field@@Base+0x241>
  424173:	mov    esi,edx
  424175:	and    esi,0x3
  424178:	test   rsi,rsi
  42417b:	jne    424271 <flatcc_verify_table_vector_field@@Base+0x241>
  424181:	mov    DWORD PTR [rsp+0x20],eax
  424185:	mov    esi,DWORD PTR [r15+rdx*1]
  424189:	mov    edx,r14d
  42418c:	sub    edx,esi
  42418e:	lea    eax,[rdx+r13*1]
  424192:	test   eax,0x80000001
  424197:	jne    424271 <flatcc_verify_table_vector_field@@Base+0x241>
  42419d:	mov    eax,eax
  42419f:	lea    rdi,[rax+0x2]
  4241a3:	cmp    rdi,r9
  4241a6:	ja     424271 <flatcc_verify_table_vector_field@@Base+0x241>
  4241ac:	movzx  ebp,WORD PTR [r15+rax*1]
  4241b1:	mov    WORD PTR [rsp+0x26],bp
  4241b6:	cmp    ebp,0x4
  4241b9:	jb     424271 <flatcc_verify_table_vector_field@@Base+0x241>
  4241bf:	mov    edi,ebp
  4241c1:	and    edi,0x1
  4241c4:	test   di,di
  4241c7:	jne    424271 <flatcc_verify_table_vector_field@@Base+0x241>
  4241cd:	add    ebp,r14d
  4241d0:	sub    ebp,esi
  4241d2:	add    ebp,r13d
  4241d5:	cmp    ebp,r9d
  4241d8:	ja     424271 <flatcc_verify_table_vector_field@@Base+0x241>
  4241de:	lea    edx,[rdx+r13*1]
  4241e2:	add    edx,0x2
  4241e5:	movzx  edx,WORD PTR [r15+rdx*1]
  4241ea:	mov    WORD PTR [rsp+0x24],dx
  4241ef:	mov    esi,r11d
  4241f2:	sub    esi,r14d
  4241f5:	cmp    esi,edx
  4241f7:	jb     424271 <flatcc_verify_table_vector_field@@Base+0x241>
  4241f9:	mov    rdx,r15
  4241fc:	mov    r15d,ecx
  4241ff:	mov    ebp,r11d
  424202:	mov    r14,r10
  424205:	add    rax,rdx
  424208:	mov    QWORD PTR [rsp+0x18],rax
  42420d:	mov    QWORD PTR [rsp+0x8],rdx
  424212:	mov    DWORD PTR [rsp+0x10],r9d
  424217:	lea    rdi,[rsp+0x8]
  42421c:	call   rbx
  42421e:	test   eax,eax
  424220:	jne    42434b <flatcc_verify_table_vector_field@@Base+0x31b>
  424226:	mov    ecx,r15d
  424229:	add    ecx,0x1
  42422c:	add    r13d,0x4
  424230:	mov    r11d,ebp
  424233:	add    r11d,0xfffffffc
  424237:	xor    eax,eax
  424239:	mov    r10,r14
  42423c:	cmp    ecx,r10d
  42423f:	mov    r9,QWORD PTR [rsp+0x30]
  424244:	mov    r15,QWORD PTR [rsp+0x28]
  424249:	jb     424142 <flatcc_verify_table_vector_field@@Base+0x112>
  42424f:	jmp    42425b <flatcc_verify_table_vector_field@@Base+0x22b>
  424251:	xor    eax,eax
  424253:	test   edx,edx
  424255:	setne  al
  424258:	shl    eax,0x2
  42425b:	add    rsp,0x38
  42425f:	pop    rbx
  424260:	pop    r12
  424262:	pop    r13
  424264:	pop    r14
  424266:	pop    r15
  424268:	pop    rbp
  424269:	ret    
  42426a:	mov    eax,0x3
  42426f:	jmp    42425b <flatcc_verify_table_vector_field@@Base+0x22b>
  424271:	mov    DWORD PTR [rsp+0x14],r12d
  424276:	add    r14d,r13d
  424279:	mov    eax,0xf
  42427e:	cmp    r14d,r13d
  424281:	jbe    42425b <flatcc_verify_table_vector_field@@Base+0x22b>
  424283:	mov    edx,r14d
  424286:	lea    rsi,[rdx+0x4]
  42428a:	cmp    rsi,r9
  42428d:	ja     42425b <flatcc_verify_table_vector_field@@Base+0x22b>
  42428f:	mov    esi,edx
  424291:	and    esi,0x3
  424294:	test   rsi,rsi
  424297:	jne    42425b <flatcc_verify_table_vector_field@@Base+0x22b>
  424299:	mov    DWORD PTR [rsp+0x20],r14d
  42429e:	mov    esi,r14d
  4242a1:	sub    esi,DWORD PTR [r15+rdx*1]
  4242a5:	mov    eax,0x1d
  4242aa:	test   esi,0x80000001
  4242b0:	jne    42425b <flatcc_verify_table_vector_field@@Base+0x22b>
  4242b2:	mov    edx,esi
  4242b4:	lea    rdi,[rdx+0x2]
  4242b8:	mov    eax,0x1b
  4242bd:	cmp    rdi,r9
  4242c0:	ja     42425b <flatcc_verify_table_vector_field@@Base+0x22b>
  4242c2:	movzx  ebp,WORD PTR [r15+rdx*1]
  4242c7:	mov    WORD PTR [rsp+0x26],bp
  4242cc:	mov    eax,0x1e
  4242d1:	test   bpl,0x1
  4242d5:	jne    42425b <flatcc_verify_table_vector_field@@Base+0x22b>
  4242d7:	mov    edi,ebp
  4242d9:	add    edi,esi
  4242db:	mov    r8,r9
  4242de:	cmp    edi,r8d
  4242e1:	ja     42425b <flatcc_verify_table_vector_field@@Base+0x22b>
  4242e7:	movzx  edi,bp
  4242ea:	mov    eax,0x1c
  4242ef:	cmp    edi,0x4
  4242f2:	jb     42425b <flatcc_verify_table_vector_field@@Base+0x22b>
  4242f8:	mov    rcx,r15
  4242fb:	add    esi,0x2
  4242fe:	movzx  esi,WORD PTR [r15+rsi*1]
  424303:	mov    WORD PTR [rsp+0x24],si
  424308:	mov    edi,r8d
  42430b:	sub    edi,r14d
  42430e:	mov    eax,0x14
  424313:	cmp    edi,esi
  424315:	jb     42425b <flatcc_verify_table_vector_field@@Base+0x22b>
  42431b:	add    rdx,rcx
  42431e:	mov    QWORD PTR [rsp+0x18],rdx
  424323:	mov    QWORD PTR [rsp+0x8],rcx
  424328:	mov    DWORD PTR [rsp+0x10],r8d
  42432d:	lea    rdi,[rsp+0x8]
  424332:	call   rbx
  424334:	jmp    42425b <flatcc_verify_table_vector_field@@Base+0x22b>
  424339:	mov    DWORD PTR [rsp+0x14],0x0
  424341:	mov    eax,0x3
  424346:	jmp    42425b <flatcc_verify_table_vector_field@@Base+0x22b>
  42434b:	mov    r15,QWORD PTR [rsp+0x28]
  424350:	mov    r14d,DWORD PTR [r15+r13*1]
  424354:	add    r14d,r13d
  424357:	mov    DWORD PTR [rsp+0x14],r12d
  42435c:	mov    r9,QWORD PTR [rsp+0x30]
  424361:	jmp    424279 <flatcc_verify_table_vector_field@@Base+0x249>
  424366:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000424370 <flatcc_verify_union_table@@Base>:
  424370:	sub    rsp,0x28
  424374:	mov    r8,QWORD PTR [rdi]
  424377:	mov    r11d,DWORD PTR [rdi+0x8]
  42437b:	mov    edx,DWORD PTR [rdi+0x14]
  42437e:	mov    ecx,DWORD PTR [rdi+0x18]
  424381:	mov    eax,DWORD PTR [rdi+0xc]
  424384:	add    eax,0xffffffff
  424387:	mov    DWORD PTR [rsp+0x14],eax
  42438b:	je     42444d <flatcc_verify_union_table@@Base+0xdd>
  424391:	add    ecx,edx
  424393:	mov    eax,0xf
  424398:	cmp    ecx,edx
  42439a:	jbe    424448 <flatcc_verify_union_table@@Base+0xd8>
  4243a0:	mov    edi,ecx
  4243a2:	lea    rdx,[rdi+0x4]
  4243a6:	cmp    rdx,r11
  4243a9:	ja     424448 <flatcc_verify_union_table@@Base+0xd8>
  4243af:	mov    edx,edi
  4243b1:	and    edx,0x3
  4243b4:	test   rdx,rdx
  4243b7:	jne    424448 <flatcc_verify_union_table@@Base+0xd8>
  4243bd:	mov    DWORD PTR [rsp+0x20],ecx
  4243c1:	mov    r10d,ecx
  4243c4:	sub    r10d,DWORD PTR [r8+rdi*1]
  4243c8:	mov    eax,0x1d
  4243cd:	test   r10d,0x80000001
  4243d4:	jne    424448 <flatcc_verify_union_table@@Base+0xd8>
  4243d6:	mov    r9d,r10d
  4243d9:	lea    rdx,[r9+0x2]
  4243dd:	mov    eax,0x1b
  4243e2:	cmp    rdx,r11
  4243e5:	ja     424448 <flatcc_verify_union_table@@Base+0xd8>
  4243e7:	movzx  edi,WORD PTR [r8+r9*1]
  4243ec:	mov    WORD PTR [rsp+0x26],di
  4243f1:	mov    eax,0x1e
  4243f6:	test   dil,0x1
  4243fa:	jne    424448 <flatcc_verify_union_table@@Base+0xd8>
  4243fc:	mov    edx,edi
  4243fe:	add    edx,r10d
  424401:	cmp    edx,r11d
  424404:	ja     424448 <flatcc_verify_union_table@@Base+0xd8>
  424406:	movzx  edx,di
  424409:	mov    eax,0x1c
  42440e:	cmp    edx,0x4
  424411:	jb     424448 <flatcc_verify_union_table@@Base+0xd8>
  424413:	add    r10d,0x2
  424417:	movzx  edx,WORD PTR [r8+r10*1]
  42441c:	mov    WORD PTR [rsp+0x24],dx
  424421:	mov    edi,r11d
  424424:	sub    edi,ecx
  424426:	mov    eax,0x14
  42442b:	cmp    edi,edx
  42442d:	jb     424448 <flatcc_verify_union_table@@Base+0xd8>
  42442f:	add    r9,r8
  424432:	mov    QWORD PTR [rsp+0x18],r9
  424437:	mov    QWORD PTR [rsp+0x8],r8
  42443c:	mov    DWORD PTR [rsp+0x10],r11d
  424441:	lea    rdi,[rsp+0x8]
  424446:	call   rsi
  424448:	add    rsp,0x28
  42444c:	ret    
  42444d:	mov    eax,0x3
  424452:	add    rsp,0x28
  424456:	ret    
  424457:	nop    WORD PTR [rax+rax*1+0x0]

0000000000424460 <flatcc_verify_union_struct@@Base>:
  424460:	mov    ecx,DWORD PTR [rdi+0x18]
  424463:	mov    eax,0x12
  424468:	test   ecx,ecx
  42446a:	je     42449b <flatcc_verify_union_struct@@Base+0x3b>
  42446c:	mov    r8d,DWORD PTR [rdi+0x8]
  424470:	add    ecx,DWORD PTR [rdi+0x14]
  424473:	cmp    ecx,r8d
  424476:	ja     42449b <flatcc_verify_union_struct@@Base+0x3b>
  424478:	mov    eax,0xa
  42447d:	add    esi,ecx
  42447f:	jb     42449b <flatcc_verify_union_struct@@Base+0x3b>
  424481:	mov    eax,0x9
  424486:	cmp    esi,r8d
  424489:	ja     42449b <flatcc_verify_union_struct@@Base+0x3b>
  42448b:	movzx  eax,dx
  42448e:	add    eax,0xffffffff
  424491:	and    ecx,eax
  424493:	mov    eax,0xb
  424498:	cmove  eax,ecx
  42449b:	ret    
  42449c:	nop    DWORD PTR [rax+0x0]

00000000004244a0 <flatcc_verify_union_string@@Base>:
  4244a0:	mov    edx,DWORD PTR [rdi+0x14]
  4244a3:	mov    ecx,DWORD PTR [rdi+0x18]
  4244a6:	add    ecx,edx
  4244a8:	mov    eax,0x11
  4244ad:	cmp    ecx,edx
  4244af:	jbe    4244f6 <flatcc_verify_union_string@@Base+0x56>
  4244b1:	mov    r8d,DWORD PTR [rdi+0x8]
  4244b5:	mov    esi,ecx
  4244b7:	lea    rdx,[rsi+0x4]
  4244bb:	cmp    rdx,r8
  4244be:	ja     4244f6 <flatcc_verify_union_string@@Base+0x56>
  4244c0:	mov    edx,esi
  4244c2:	and    edx,0x3
  4244c5:	test   rdx,rdx
  4244c8:	jne    4244f6 <flatcc_verify_union_string@@Base+0x56>
  4244ca:	mov    rdi,QWORD PTR [rdi]
  4244cd:	mov    esi,DWORD PTR [rdi+rsi*1]
  4244d0:	add    ecx,0x4
  4244d3:	sub    r8d,ecx
  4244d6:	lea    edx,[rsi+0x1]
  4244d9:	mov    eax,0x8
  4244de:	cmp    r8d,edx
  4244e1:	jb     4244f6 <flatcc_verify_union_string@@Base+0x56>
  4244e3:	mov    eax,ecx
  4244e5:	add    rdi,rax
  4244e8:	xor    ecx,ecx
  4244ea:	cmp    BYTE PTR [rsi+rdi*1],0x0
  4244ee:	mov    eax,0x7
  4244f3:	cmove  eax,ecx
  4244f6:	ret    
  4244f7:	nop    WORD PTR [rax+rax*1+0x0]

0000000000424500 <flatcc_verify_buffer_header@@Base>:
  424500:	push   rbx
  424501:	sub    rsp,0x10
  424505:	mov    rbx,rdi
  424508:	mov    eax,0x5
  42450d:	test   bl,0x3
  424510:	jne    424568 <flatcc_verify_buffer_header@@Base+0x68>
  424512:	mov    rcx,rdx
  424515:	mov    rdx,rsi
  424518:	shr    rdx,0x3
  42451c:	mov    eax,0x6
  424521:	cmp    rdx,0x1ffffffe
  424528:	ja     424568 <flatcc_verify_buffer_header@@Base+0x68>
  42452a:	mov    eax,0x1
  42452f:	cmp    rsi,0x8
  424533:	jb     424568 <flatcc_verify_buffer_header@@Base+0x68>
  424535:	test   rcx,rcx
  424538:	je     424566 <flatcc_verify_buffer_header@@Base+0x66>
  42453a:	mov    DWORD PTR [rsp+0xc],0x0
  424542:	lea    rdi,[rsp+0xc]
  424547:	mov    edx,0x4
  42454c:	mov    rsi,rcx
  42454f:	call   406040 <strncpy@plt>
  424554:	mov    ecx,DWORD PTR [rsp+0xc]
  424558:	test   ecx,ecx
  42455a:	je     424566 <flatcc_verify_buffer_header@@Base+0x66>
  42455c:	mov    eax,0x2
  424561:	cmp    DWORD PTR [rbx+0x4],ecx
  424564:	jne    424568 <flatcc_verify_buffer_header@@Base+0x68>
  424566:	xor    eax,eax
  424568:	add    rsp,0x10
  42456c:	pop    rbx
  42456d:	ret    
  42456e:	xchg   ax,ax

0000000000424570 <flatcc_verify_typed_buffer_header@@Base>:
  424570:	mov    eax,0x5
  424575:	test   dil,0x3
  424579:	jne    4245ab <flatcc_verify_typed_buffer_header@@Base+0x3b>
  42457b:	mov    rcx,rsi
  42457e:	shr    rcx,0x3
  424582:	mov    eax,0x6
  424587:	cmp    rcx,0x1ffffffe
  42458e:	ja     4245ab <flatcc_verify_typed_buffer_header@@Base+0x3b>
  424590:	mov    eax,0x1
  424595:	cmp    rsi,0x8
  424599:	jb     4245ab <flatcc_verify_typed_buffer_header@@Base+0x3b>
  42459b:	test   edx,edx
  42459d:	je     4245a9 <flatcc_verify_typed_buffer_header@@Base+0x39>
  42459f:	mov    eax,0x2
  4245a4:	cmp    DWORD PTR [rdi+0x4],edx
  4245a7:	jne    4245ab <flatcc_verify_typed_buffer_header@@Base+0x3b>
  4245a9:	xor    eax,eax
  4245ab:	ret    
  4245ac:	nop    DWORD PTR [rax+0x0]

00000000004245b0 <flatcc_verify_struct_as_root@@Base>:
  4245b0:	push   rbp
  4245b1:	push   r15
  4245b3:	push   r14
  4245b5:	push   r12
  4245b7:	push   rbx
  4245b8:	sub    rsp,0x10
  4245bc:	mov    rbx,rdi
  4245bf:	mov    eax,0x5
  4245c4:	test   bl,0x3
  4245c7:	jne    42468f <flatcc_verify_struct_as_root@@Base+0xdf>
  4245cd:	mov    r15,rcx
  4245d0:	mov    rbp,rsi
  4245d3:	mov    rcx,rsi
  4245d6:	shr    rcx,0x3
  4245da:	mov    eax,0x6
  4245df:	cmp    rcx,0x1ffffffe
  4245e6:	ja     42468f <flatcc_verify_struct_as_root@@Base+0xdf>
  4245ec:	mov    eax,0x1
  4245f1:	cmp    rbp,0x8
  4245f5:	jb     42468f <flatcc_verify_struct_as_root@@Base+0xdf>
  4245fb:	mov    r14d,r8d
  4245fe:	mov    r12,rdx
  424601:	test   rdx,rdx
  424604:	je     42465c <flatcc_verify_struct_as_root@@Base+0xac>
  424606:	mov    DWORD PTR [rsp+0x8],0x0
  42460e:	lea    rdi,[rsp+0x8]
  424613:	mov    edx,0x4
  424618:	mov    rsi,r12
  42461b:	call   406040 <strncpy@plt>
  424620:	mov    eax,DWORD PTR [rsp+0x8]
  424624:	test   eax,eax
  424626:	je     42465c <flatcc_verify_struct_as_root@@Base+0xac>
  424628:	cmp    DWORD PTR [rbx+0x4],eax
  42462b:	je     42465c <flatcc_verify_struct_as_root@@Base+0xac>
  42462d:	mov    DWORD PTR [rsp+0xc],0x0
  424635:	lea    rdi,[rsp+0xc]
  42463a:	mov    edx,0x4
  42463f:	mov    rsi,r12
  424642:	call   406040 <strncpy@plt>
  424647:	mov    ecx,DWORD PTR [rsp+0xc]
  42464b:	xor    eax,eax
  42464d:	cmp    DWORD PTR [rbx+0x4],ecx
  424650:	setne  al
  424653:	add    eax,eax
  424655:	test   ecx,ecx
  424657:	cmove  eax,ecx
  42465a:	jmp    42468f <flatcc_verify_struct_as_root@@Base+0xdf>
  42465c:	mov    ecx,DWORD PTR [rbx]
  42465e:	lea    edx,[rcx-0x1]
  424661:	mov    eax,0x12
  424666:	cmp    edx,ebp
  424668:	jae    42468f <flatcc_verify_struct_as_root@@Base+0xdf>
  42466a:	mov    eax,0xa
  42466f:	add    r15d,ecx
  424672:	jb     42468f <flatcc_verify_struct_as_root@@Base+0xdf>
  424674:	mov    eax,0x9
  424679:	cmp    r15d,ebp
  42467c:	ja     42468f <flatcc_verify_struct_as_root@@Base+0xdf>
  42467e:	movzx  eax,r14w
  424682:	add    eax,0xffffffff
  424685:	and    ecx,eax
  424687:	mov    eax,0xb
  42468c:	cmove  eax,ecx
  42468f:	add    rsp,0x10
  424693:	pop    rbx
  424694:	pop    r12
  424696:	pop    r14
  424698:	pop    r15
  42469a:	pop    rbp
  42469b:	ret    
  42469c:	nop    DWORD PTR [rax+0x0]

00000000004246a0 <flatcc_verify_struct_as_typed_root@@Base>:
  4246a0:	mov    eax,0x5
  4246a5:	test   dil,0x3
  4246a9:	jne    42470a <flatcc_verify_struct_as_typed_root@@Base+0x6a>
  4246ab:	mov    r9,rsi
  4246ae:	shr    r9,0x3
  4246b2:	mov    eax,0x6
  4246b7:	cmp    r9,0x1ffffffe
  4246be:	ja     42470a <flatcc_verify_struct_as_typed_root@@Base+0x6a>
  4246c0:	mov    eax,0x1
  4246c5:	cmp    rsi,0x8
  4246c9:	jb     42470a <flatcc_verify_struct_as_typed_root@@Base+0x6a>
  4246cb:	test   edx,edx
  4246cd:	je     4246d9 <flatcc_verify_struct_as_typed_root@@Base+0x39>
  4246cf:	mov    eax,0x2
  4246d4:	cmp    DWORD PTR [rdi+0x4],edx
  4246d7:	jne    42470a <flatcc_verify_struct_as_typed_root@@Base+0x6a>
  4246d9:	mov    edx,DWORD PTR [rdi]
  4246db:	lea    edi,[rdx-0x1]
  4246de:	mov    eax,0x12
  4246e3:	cmp    edi,esi
  4246e5:	jae    42470a <flatcc_verify_struct_as_typed_root@@Base+0x6a>
  4246e7:	mov    eax,0xa
  4246ec:	add    ecx,edx
  4246ee:	jb     42470a <flatcc_verify_struct_as_typed_root@@Base+0x6a>
  4246f0:	mov    eax,0x9
  4246f5:	cmp    ecx,esi
  4246f7:	ja     42470a <flatcc_verify_struct_as_typed_root@@Base+0x6a>
  4246f9:	movzx  eax,r8w
  4246fd:	add    eax,0xffffffff
  424700:	and    edx,eax
  424702:	mov    eax,0xb
  424707:	cmove  eax,edx
  42470a:	ret    
  42470b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000424710 <flatcc_verify_table_as_root@@Base>:
  424710:	push   r15
  424712:	push   r14
  424714:	push   r13
  424716:	push   r12
  424718:	push   rbx
  424719:	sub    rsp,0x20
  42471d:	mov    r12,rdi
  424720:	mov    eax,0x5
  424725:	test   r12b,0x3
  424729:	jne    424875 <flatcc_verify_table_as_root@@Base+0x165>
  42472f:	mov    r14,rcx
  424732:	mov    r15,rsi
  424735:	mov    r13d,r15d
  424738:	mov    rcx,r13
  42473b:	shr    rcx,0x3
  42473f:	mov    eax,0x6
  424744:	cmp    rcx,0x1ffffffe
  42474b:	ja     424875 <flatcc_verify_table_as_root@@Base+0x165>
  424751:	mov    eax,0x1
  424756:	cmp    r13,0x8
  42475a:	jb     424875 <flatcc_verify_table_as_root@@Base+0x165>
  424760:	mov    rbx,rdx
  424763:	test   rdx,rdx
  424766:	je     4247bd <flatcc_verify_table_as_root@@Base+0xad>
  424768:	mov    DWORD PTR [rsp],0x0
  42476f:	mov    rdi,rsp
  424772:	mov    edx,0x4
  424777:	mov    rsi,rbx
  42477a:	call   406040 <strncpy@plt>
  42477f:	mov    eax,DWORD PTR [rsp]
  424782:	test   eax,eax
  424784:	je     4247bd <flatcc_verify_table_as_root@@Base+0xad>
  424786:	cmp    DWORD PTR [r12+0x4],eax
  42478b:	je     4247bd <flatcc_verify_table_as_root@@Base+0xad>
  42478d:	mov    DWORD PTR [rsp],0x0
  424794:	mov    rdi,rsp
  424797:	mov    edx,0x4
  42479c:	mov    rsi,rbx
  42479f:	call   406040 <strncpy@plt>
  4247a4:	mov    ecx,DWORD PTR [rsp]
  4247a7:	xor    eax,eax
  4247a9:	cmp    DWORD PTR [r12+0x4],ecx
  4247ae:	setne  al
  4247b1:	add    eax,eax
  4247b3:	test   ecx,ecx
  4247b5:	cmove  eax,ecx
  4247b8:	jmp    424875 <flatcc_verify_table_as_root@@Base+0x165>
  4247bd:	mov    ecx,DWORD PTR [r12]
  4247c1:	mov    DWORD PTR [rsp+0xc],0x63
  4247c9:	mov    eax,0xf
  4247ce:	test   rcx,rcx
  4247d1:	je     424875 <flatcc_verify_table_as_root@@Base+0x165>
  4247d7:	lea    rdx,[rcx+0x4]
  4247db:	cmp    rdx,r13
  4247de:	ja     424875 <flatcc_verify_table_as_root@@Base+0x165>
  4247e4:	mov    edx,ecx
  4247e6:	and    edx,0x3
  4247e9:	test   rdx,rdx
  4247ec:	jne    424875 <flatcc_verify_table_as_root@@Base+0x165>
  4247f2:	mov    DWORD PTR [rsp+0x18],ecx
  4247f6:	mov    esi,ecx
  4247f8:	sub    esi,DWORD PTR [r12+rcx*1]
  4247fc:	mov    eax,0x1d
  424801:	test   esi,0x80000001
  424807:	jne    424875 <flatcc_verify_table_as_root@@Base+0x165>
  424809:	mov    edx,esi
  42480b:	lea    rdi,[rdx+0x2]
  42480f:	mov    eax,0x1b
  424814:	cmp    rdi,r13
  424817:	ja     424875 <flatcc_verify_table_as_root@@Base+0x165>
  424819:	movzx  ebx,WORD PTR [r12+rdx*1]
  42481e:	mov    WORD PTR [rsp+0x1e],bx
  424823:	mov    eax,0x1e
  424828:	test   bl,0x1
  42482b:	jne    424875 <flatcc_verify_table_as_root@@Base+0x165>
  42482d:	mov    edi,ebx
  42482f:	add    edi,esi
  424831:	cmp    edi,r15d
  424834:	ja     424875 <flatcc_verify_table_as_root@@Base+0x165>
  424836:	movzx  edi,bx
  424839:	mov    eax,0x1c
  42483e:	cmp    edi,0x4
  424841:	jb     424875 <flatcc_verify_table_as_root@@Base+0x165>
  424843:	add    esi,0x2
  424846:	movzx  esi,WORD PTR [r12+rsi*1]
  42484b:	mov    WORD PTR [rsp+0x1c],si
  424850:	mov    edi,r15d
  424853:	sub    edi,ecx
  424855:	mov    eax,0x14
  42485a:	cmp    edi,esi
  42485c:	jb     424875 <flatcc_verify_table_as_root@@Base+0x165>
  42485e:	add    rdx,r12
  424861:	mov    QWORD PTR [rsp+0x10],rdx
  424866:	mov    QWORD PTR [rsp],r12
  42486a:	mov    DWORD PTR [rsp+0x8],r15d
  42486f:	mov    rdi,rsp
  424872:	call   r14
  424875:	add    rsp,0x20
  424879:	pop    rbx
  42487a:	pop    r12
  42487c:	pop    r13
  42487e:	pop    r14
  424880:	pop    r15
  424882:	ret    
  424883:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42488d:	nop    DWORD PTR [rax]

0000000000424890 <flatcc_verify_table_as_typed_root@@Base>:
  424890:	mov    eax,0x5
  424895:	test   dil,0x3
  424899:	jne    4249a8 <flatcc_verify_table_as_typed_root@@Base+0x118>
  42489f:	mov    r8d,esi
  4248a2:	mov    r9,r8
  4248a5:	shr    r9,0x3
  4248a9:	mov    eax,0x6
  4248ae:	cmp    r9,0x1ffffffe
  4248b5:	ja     4249a8 <flatcc_verify_table_as_typed_root@@Base+0x118>
  4248bb:	mov    eax,0x1
  4248c0:	cmp    r8,0x8
  4248c4:	jb     4249a8 <flatcc_verify_table_as_typed_root@@Base+0x118>
  4248ca:	test   edx,edx
  4248cc:	je     4248dc <flatcc_verify_table_as_typed_root@@Base+0x4c>
  4248ce:	mov    eax,0x2
  4248d3:	cmp    DWORD PTR [rdi+0x4],edx
  4248d6:	jne    4249a8 <flatcc_verify_table_as_typed_root@@Base+0x118>
  4248dc:	sub    rsp,0x28
  4248e0:	mov    r11d,DWORD PTR [rdi]
  4248e3:	mov    DWORD PTR [rsp+0x14],0x63
  4248eb:	mov    eax,0xf
  4248f0:	test   r11,r11
  4248f3:	je     4249a4 <flatcc_verify_table_as_typed_root@@Base+0x114>
  4248f9:	lea    rdx,[r11+0x4]
  4248fd:	cmp    rdx,r8
  424900:	ja     4249a4 <flatcc_verify_table_as_typed_root@@Base+0x114>
  424906:	mov    edx,r11d
  424909:	and    edx,0x3
  42490c:	test   rdx,rdx
  42490f:	jne    4249a4 <flatcc_verify_table_as_typed_root@@Base+0x114>
  424915:	mov    DWORD PTR [rsp+0x20],r11d
  42491a:	mov    r10d,r11d
  42491d:	sub    r10d,DWORD PTR [rdi+r11*1]
  424921:	mov    eax,0x1d
  424926:	test   r10d,0x80000001
  42492d:	jne    4249a4 <flatcc_verify_table_as_typed_root@@Base+0x114>
  42492f:	mov    r9d,r10d
  424932:	lea    rdx,[r9+0x2]
  424936:	mov    eax,0x1b
  42493b:	cmp    rdx,r8
  42493e:	ja     4249a4 <flatcc_verify_table_as_typed_root@@Base+0x114>
  424940:	movzx  r8d,WORD PTR [rdi+r9*1]
  424945:	mov    WORD PTR [rsp+0x26],r8w
  42494b:	mov    eax,0x1e
  424950:	test   r8b,0x1
  424954:	jne    4249a4 <flatcc_verify_table_as_typed_root@@Base+0x114>
  424956:	mov    edx,r8d
  424959:	add    edx,r10d
  42495c:	cmp    edx,esi
  42495e:	ja     4249a4 <flatcc_verify_table_as_typed_root@@Base+0x114>
  424960:	movzx  edx,r8w
  424964:	mov    eax,0x1c
  424969:	cmp    edx,0x4
  42496c:	jb     4249a4 <flatcc_verify_table_as_typed_root@@Base+0x114>
  42496e:	add    r10d,0x2
  424972:	movzx  r8d,WORD PTR [rdi+r10*1]
  424977:	mov    WORD PTR [rsp+0x24],r8w
  42497d:	mov    edx,esi
  42497f:	sub    edx,r11d
  424982:	mov    eax,0x14
  424987:	cmp    edx,r8d
  42498a:	jb     4249a4 <flatcc_verify_table_as_typed_root@@Base+0x114>
  42498c:	add    r9,rdi
  42498f:	mov    QWORD PTR [rsp+0x18],r9
  424994:	mov    QWORD PTR [rsp+0x8],rdi
  424999:	mov    DWORD PTR [rsp+0x10],esi
  42499d:	lea    rdi,[rsp+0x8]
  4249a2:	call   rcx
  4249a4:	add    rsp,0x28
  4249a8:	ret    
  4249a9:	nop    DWORD PTR [rax+0x0]

00000000004249b0 <flatcc_verify_struct_as_nested_root@@Base>:
  4249b0:	push   r14
  4249b2:	push   rbx
  4249b3:	lea    esi,[rsi+rsi*1]
  4249b6:	add    esi,0x4
  4249b9:	movzx  r10d,WORD PTR [rdi+0x1e]
  4249be:	cmp    si,r10w
  4249c2:	jae    424a2c <flatcc_verify_struct_as_nested_root@@Base+0x7c>
  4249c4:	mov    r11,QWORD PTR [rdi+0x10]
  4249c8:	movzx  ebx,si
  4249cb:	movzx  eax,WORD PTR [r11+rbx*1]
  4249d0:	test   eax,eax
  4249d2:	je     424a2c <flatcc_verify_struct_as_nested_root@@Base+0x7c>
  4249d4:	add    r11,rbx
  4249d7:	lea    esi,[rax+0x4]
  4249da:	movzx  ebx,WORD PTR [rdi+0x1c]
  4249de:	cmp    esi,ebx
  4249e0:	ja     424a46 <flatcc_verify_struct_as_nested_root@@Base+0x96>
  4249e2:	add    eax,DWORD PTR [rdi+0x18]
  4249e5:	test   al,0x3
  4249e7:	jne    424a46 <flatcc_verify_struct_as_nested_root@@Base+0x96>
  4249e9:	test   eax,eax
  4249eb:	je     424add <flatcc_verify_struct_as_nested_root@@Base+0x12d>
  4249f1:	mov    r10,QWORD PTR [rdi]
  4249f4:	mov    esi,eax
  4249f6:	mov    esi,DWORD PTR [r10+rsi*1]
  4249fa:	add    esi,eax
  4249fc:	cmp    esi,eax
  4249fe:	jbe    424a46 <flatcc_verify_struct_as_nested_root@@Base+0x96>
  424a00:	test   sil,0x3
  424a04:	jne    424a46 <flatcc_verify_struct_as_nested_root@@Base+0x96>
  424a06:	mov    eax,DWORD PTR [rdi+0x8]
  424a09:	mov    r14d,esi
  424a0c:	lea    rbx,[r14+0x4]
  424a10:	cmp    rbx,rax
  424a13:	ja     424a46 <flatcc_verify_struct_as_nested_root@@Base+0x96>
  424a15:	movzx  ebx,r9w
  424a19:	add    eax,0xfffffffc
  424a1c:	sub    eax,esi
  424a1e:	imul   ebx,DWORD PTR [r10+r14*1]
  424a23:	cmp    eax,ebx
  424a25:	jb     424a46 <flatcc_verify_struct_as_nested_root@@Base+0x96>
  424a27:	jmp    424add <flatcc_verify_struct_as_nested_root@@Base+0x12d>
  424a2c:	test   edx,edx
  424a2e:	je     424acd <flatcc_verify_struct_as_nested_root@@Base+0x11d>
  424a34:	cmp    si,r10w
  424a38:	jae    424ac1 <flatcc_verify_struct_as_nested_root@@Base+0x111>
  424a3e:	movzx  r11d,si
  424a42:	add    r11,QWORD PTR [rdi+0x10]
  424a46:	movzx  ecx,WORD PTR [r11]
  424a4a:	test   ecx,ecx
  424a4c:	je     424ac1 <flatcc_verify_struct_as_nested_root@@Base+0x111>
  424a4e:	lea    edx,[rcx+0x4]
  424a51:	movzx  esi,WORD PTR [rdi+0x1c]
  424a55:	mov    eax,0xd
  424a5a:	cmp    edx,esi
  424a5c:	ja     424b17 <flatcc_verify_struct_as_nested_root@@Base+0x167>
  424a62:	add    ecx,DWORD PTR [rdi+0x18]
  424a65:	mov    eax,0xc
  424a6a:	test   cl,0x3
  424a6d:	jne    424b17 <flatcc_verify_struct_as_nested_root@@Base+0x167>
  424a73:	test   ecx,ecx
  424a75:	je     424b15 <flatcc_verify_struct_as_nested_root@@Base+0x165>
  424a7b:	mov    rdx,QWORD PTR [rdi]
  424a7e:	mov    eax,ecx
  424a80:	mov    esi,DWORD PTR [rdx+rax*1]
  424a83:	add    esi,ecx
  424a85:	mov    eax,0x10
  424a8a:	cmp    esi,ecx
  424a8c:	jbe    424b17 <flatcc_verify_struct_as_nested_root@@Base+0x167>
  424a92:	test   sil,0x3
  424a96:	jne    424b17 <flatcc_verify_struct_as_nested_root@@Base+0x167>
  424a98:	mov    ecx,DWORD PTR [rdi+0x8]
  424a9b:	mov    edi,esi
  424a9d:	lea    rbx,[rdi+0x4]
  424aa1:	cmp    rbx,rcx
  424aa4:	ja     424b17 <flatcc_verify_struct_as_nested_root@@Base+0x167>
  424aa6:	movzx  eax,r9w
  424aaa:	add    ecx,0xfffffffc
  424aad:	sub    ecx,esi
  424aaf:	imul   eax,DWORD PTR [rdx+rdi*1]
  424ab3:	xor    edx,edx
  424ab5:	cmp    ecx,eax
  424ab7:	mov    eax,0x1a
  424abc:	cmovae eax,edx
  424abf:	jmp    424b17 <flatcc_verify_struct_as_nested_root@@Base+0x167>
  424ac1:	xor    eax,eax
  424ac3:	test   edx,edx
  424ac5:	setne  al
  424ac8:	shl    eax,0x2
  424acb:	jmp    424b17 <flatcc_verify_struct_as_nested_root@@Base+0x167>
  424acd:	xor    eax,eax
  424acf:	cmp    si,r10w
  424ad3:	jae    424b17 <flatcc_verify_struct_as_nested_root@@Base+0x167>
  424ad5:	movzx  r11d,si
  424ad9:	add    r11,QWORD PTR [rdi+0x10]
  424add:	movzx  esi,WORD PTR [r11]
  424ae1:	xor    eax,eax
  424ae3:	test   rsi,rsi
  424ae6:	je     424b17 <flatcc_verify_struct_as_nested_root@@Base+0x167>
  424ae8:	mov    edx,DWORD PTR [rdi+0x18]
  424aeb:	add    rdx,QWORD PTR [rdi]
  424aee:	add    rdx,rsi
  424af1:	je     424b17 <flatcc_verify_struct_as_nested_root@@Base+0x167>
  424af3:	mov    eax,DWORD PTR [rdx]
  424af5:	mov    esi,DWORD PTR [rax+rdx*1]
  424af8:	lea    rdi,[rax+rdx*1]
  424afc:	add    rdi,0x4
  424b00:	movzx  eax,r9w
  424b04:	mov    rdx,rcx
  424b07:	mov    rcx,r8
  424b0a:	mov    r8d,eax
  424b0d:	pop    rbx
  424b0e:	pop    r14
  424b10:	jmp    4245b0 <flatcc_verify_struct_as_root@@Base>
  424b15:	xor    eax,eax
  424b17:	pop    rbx
  424b18:	pop    r14
  424b1a:	ret    
  424b1b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000424b20 <flatcc_verify_table_as_nested_root@@Base>:
  424b20:	push   rbp
  424b21:	push   r15
  424b23:	push   r14
  424b25:	push   r13
  424b27:	push   r12
  424b29:	push   rbx
  424b2a:	sub    rsp,0x28
  424b2e:	mov    r14,r9
  424b31:	mov    r15,rcx
  424b34:	mov    rbx,rdi
  424b37:	lea    esi,[rsi+rsi*1]
  424b3a:	add    esi,0x4
  424b3d:	movzx  edi,WORD PTR [rdi+0x1e]
  424b41:	cmp    si,di
  424b44:	jae    424bad <flatcc_verify_table_as_nested_root@@Base+0x8d>
  424b46:	mov    rax,QWORD PTR [rbx+0x10]
  424b4a:	movzx  ebp,si
  424b4d:	movzx  ecx,WORD PTR [rax+rbp*1]
  424b51:	test   ecx,ecx
  424b53:	je     424bad <flatcc_verify_table_as_nested_root@@Base+0x8d>
  424b55:	add    rax,rbp
  424b58:	lea    esi,[rcx+0x4]
  424b5b:	movzx  edi,WORD PTR [rbx+0x1c]
  424b5f:	cmp    esi,edi
  424b61:	ja     424bc5 <flatcc_verify_table_as_nested_root@@Base+0xa5>
  424b63:	add    ecx,DWORD PTR [rbx+0x18]
  424b66:	test   cl,0x3
  424b69:	jne    424bc5 <flatcc_verify_table_as_nested_root@@Base+0xa5>
  424b6b:	test   ecx,ecx
  424b6d:	je     424c6b <flatcc_verify_table_as_nested_root@@Base+0x14b>
  424b73:	mov    rsi,QWORD PTR [rbx]
  424b76:	mov    edi,ecx
  424b78:	mov    edi,DWORD PTR [rsi+rdi*1]
  424b7b:	add    edi,ecx
  424b7d:	cmp    edi,ecx
  424b7f:	jbe    424bc5 <flatcc_verify_table_as_nested_root@@Base+0xa5>
  424b81:	test   dil,0x3
  424b85:	jne    424bc5 <flatcc_verify_table_as_nested_root@@Base+0xa5>
  424b87:	mov    ecx,DWORD PTR [rbx+0x8]
  424b8a:	mov    r9d,edi
  424b8d:	lea    rbp,[r9+0x4]
  424b91:	cmp    rbp,rcx
  424b94:	ja     424bc5 <flatcc_verify_table_as_nested_root@@Base+0xa5>
  424b96:	movzx  ebp,r8w
  424b9a:	add    ecx,0xfffffffc
  424b9d:	sub    ecx,edi
  424b9f:	imul   ebp,DWORD PTR [rsi+r9*1]
  424ba4:	cmp    ecx,ebp
  424ba6:	jb     424bc5 <flatcc_verify_table_as_nested_root@@Base+0xa5>
  424ba8:	jmp    424c6b <flatcc_verify_table_as_nested_root@@Base+0x14b>
  424bad:	test   edx,edx
  424baf:	je     424c59 <flatcc_verify_table_as_nested_root@@Base+0x139>
  424bb5:	cmp    si,di
  424bb8:	jae    424c4a <flatcc_verify_table_as_nested_root@@Base+0x12a>
  424bbe:	movzx  eax,si
  424bc1:	add    rax,QWORD PTR [rbx+0x10]
  424bc5:	movzx  ecx,WORD PTR [rax]
  424bc8:	test   ecx,ecx
  424bca:	je     424c4a <flatcc_verify_table_as_nested_root@@Base+0x12a>
  424bcc:	lea    edx,[rcx+0x4]
  424bcf:	movzx  esi,WORD PTR [rbx+0x1c]
  424bd3:	mov    eax,0xd
  424bd8:	cmp    edx,esi
  424bda:	ja     424d1e <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  424be0:	add    ecx,DWORD PTR [rbx+0x18]
  424be3:	mov    eax,0xc
  424be8:	test   cl,0x3
  424beb:	jne    424d1e <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  424bf1:	test   ecx,ecx
  424bf3:	je     424d1c <flatcc_verify_table_as_nested_root@@Base+0x1fc>
  424bf9:	mov    rdx,QWORD PTR [rbx]
  424bfc:	mov    eax,ecx
  424bfe:	mov    esi,DWORD PTR [rdx+rax*1]
  424c01:	add    esi,ecx
  424c03:	mov    eax,0x10
  424c08:	cmp    esi,ecx
  424c0a:	jbe    424d1e <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  424c10:	test   sil,0x3
  424c14:	jne    424d1e <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  424c1a:	mov    ecx,DWORD PTR [rbx+0x8]
  424c1d:	mov    edi,esi
  424c1f:	lea    rbp,[rdi+0x4]
  424c23:	cmp    rbp,rcx
  424c26:	ja     424d1e <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  424c2c:	movzx  eax,r8w
  424c30:	add    ecx,0xfffffffc
  424c33:	sub    ecx,esi
  424c35:	imul   eax,DWORD PTR [rdx+rdi*1]
  424c39:	xor    edx,edx
  424c3b:	cmp    ecx,eax
  424c3d:	mov    eax,0x1a
  424c42:	cmovae eax,edx
  424c45:	jmp    424d1e <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  424c4a:	xor    eax,eax
  424c4c:	test   edx,edx
  424c4e:	setne  al
  424c51:	shl    eax,0x2
  424c54:	jmp    424d1e <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  424c59:	xor    eax,eax
  424c5b:	cmp    si,di
  424c5e:	jae    424d1e <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  424c64:	movzx  eax,si
  424c67:	add    rax,QWORD PTR [rbx+0x10]
  424c6b:	movzx  ecx,WORD PTR [rax]
  424c6e:	xor    eax,eax
  424c70:	test   rcx,rcx
  424c73:	je     424d1e <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  424c79:	mov    r13d,DWORD PTR [rbx+0x18]
  424c7d:	add    r13,QWORD PTR [rbx]
  424c80:	add    r13,rcx
  424c83:	je     424d1e <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  424c89:	mov    ebp,DWORD PTR [r13+0x0]
  424c8d:	lea    r12,[r13*1+0x4]
  424c95:	add    r12,rbp
  424c98:	mov    eax,0x5
  424c9d:	test   r12b,0x3
  424ca1:	jne    424d1e <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  424ca3:	mov    ecx,DWORD PTR [rbp+r13*1+0x0]
  424ca8:	mov    eax,0x6
  424cad:	cmp    ecx,0xfffffff7
  424cb0:	ja     424d1e <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  424cb2:	mov    eax,0x1
  424cb7:	cmp    ecx,0x8
  424cba:	jb     424d1e <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  424cbc:	test   r15,r15
  424cbf:	je     424d2d <flatcc_verify_table_as_nested_root@@Base+0x20d>
  424cc1:	mov    DWORD PTR [rsp],0x0
  424cc8:	mov    rdi,rsp
  424ccb:	mov    edx,0x4
  424cd0:	mov    rsi,r15
  424cd3:	mov    QWORD PTR [rsp+0x20],rcx
  424cd8:	call   406040 <strncpy@plt>
  424cdd:	mov    rcx,QWORD PTR [rsp+0x20]
  424ce2:	mov    eax,DWORD PTR [rsp]
  424ce5:	test   eax,eax
  424ce7:	je     424d2d <flatcc_verify_table_as_nested_root@@Base+0x20d>
  424ce9:	add    rbp,r13
  424cec:	cmp    DWORD PTR [rbp+0x8],eax
  424cef:	je     424d2d <flatcc_verify_table_as_nested_root@@Base+0x20d>
  424cf1:	mov    DWORD PTR [rsp],0x0
  424cf8:	mov    rdi,rsp
  424cfb:	mov    edx,0x4
  424d00:	mov    rsi,r15
  424d03:	call   406040 <strncpy@plt>
  424d08:	mov    ecx,DWORD PTR [rsp]
  424d0b:	xor    eax,eax
  424d0d:	cmp    DWORD PTR [rbp+0x8],ecx
  424d10:	setne  al
  424d13:	add    eax,eax
  424d15:	test   ecx,ecx
  424d17:	cmove  eax,ecx
  424d1a:	jmp    424d1e <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  424d1c:	xor    eax,eax
  424d1e:	add    rsp,0x28
  424d22:	pop    rbx
  424d23:	pop    r12
  424d25:	pop    r13
  424d27:	pop    r14
  424d29:	pop    r15
  424d2b:	pop    rbp
  424d2c:	ret    
  424d2d:	mov    ebp,DWORD PTR [r12]
  424d31:	mov    eax,DWORD PTR [rbx+0xc]
  424d34:	add    eax,0xffffffff
  424d37:	mov    DWORD PTR [rsp+0xc],eax
  424d3b:	je     424dee <flatcc_verify_table_as_nested_root@@Base+0x2ce>
  424d41:	mov    eax,0xf
  424d46:	test   ebp,ebp
  424d48:	je     424d1e <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  424d4a:	lea    rdx,[rbp+0x4]
  424d4e:	cmp    rdx,rcx
  424d51:	ja     424d1e <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  424d53:	mov    edx,ebp
  424d55:	and    edx,0x3
  424d58:	test   rdx,rdx
  424d5b:	jne    424d1e <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  424d5d:	mov    DWORD PTR [rsp+0x18],ebp
  424d61:	mov    esi,ebp
  424d63:	sub    esi,DWORD PTR [r12+rbp*1]
  424d67:	mov    eax,0x1d
  424d6c:	test   esi,0x80000001
  424d72:	jne    424d1e <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  424d74:	mov    edx,esi
  424d76:	lea    rdi,[rdx+0x2]
  424d7a:	mov    eax,0x1b
  424d7f:	cmp    rdi,rcx
  424d82:	ja     424d1e <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  424d84:	movzx  ebx,WORD PTR [r12+rdx*1]
  424d89:	mov    WORD PTR [rsp+0x1e],bx
  424d8e:	mov    eax,0x1e
  424d93:	test   bl,0x1
  424d96:	jne    424d1e <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  424d98:	mov    edi,ebx
  424d9a:	add    edi,esi
  424d9c:	cmp    edi,ecx
  424d9e:	ja     424d1e <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  424da4:	movzx  edi,bx
  424da7:	mov    eax,0x1c
  424dac:	cmp    edi,0x4
  424daf:	jb     424d1e <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  424db5:	add    esi,0x2
  424db8:	movzx  esi,WORD PTR [r12+rsi*1]
  424dbd:	mov    WORD PTR [rsp+0x1c],si
  424dc2:	mov    edi,ecx
  424dc4:	sub    edi,ebp
  424dc6:	mov    eax,0x14
  424dcb:	cmp    edi,esi
  424dcd:	jb     424d1e <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  424dd3:	add    rdx,r12
  424dd6:	mov    QWORD PTR [rsp+0x10],rdx
  424ddb:	mov    QWORD PTR [rsp],r12
  424ddf:	mov    DWORD PTR [rsp+0x8],ecx
  424de3:	mov    rdi,rsp
  424de6:	call   r14
  424de9:	jmp    424d1e <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  424dee:	mov    eax,0x3
  424df3:	jmp    424d1e <flatcc_verify_table_as_nested_root@@Base+0x1fe>
  424df8:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000424e00 <flatcc_verify_union_field@@Base>:
  424e00:	push   rbp
  424e01:	push   r14
  424e03:	push   rbx
  424e04:	sub    rsp,0x20
  424e08:	lea    r9d,[rsi+rsi*1]
  424e0c:	lea    eax,[rsi+rsi*1]
  424e0f:	add    eax,0x2
  424e12:	movzx  esi,WORD PTR [rdi+0x1e]
  424e16:	cmp    ax,si
  424e19:	jae    424efb <flatcc_verify_union_field@@Base+0xfb>
  424e1f:	mov    rbx,QWORD PTR [rdi+0x10]
  424e23:	movzx  eax,ax
  424e26:	movzx  r10d,WORD PTR [rbx+rax*1]
  424e2b:	test   r10,r10
  424e2e:	je     424efb <flatcc_verify_union_field@@Base+0xfb>
  424e34:	mov    eax,0xd
  424e39:	cmp    r10w,WORD PTR [rdi+0x1c]
  424e3e:	jae    424f23 <flatcc_verify_union_field@@Base+0x123>
  424e44:	mov    r8,QWORD PTR [rdi]
  424e47:	add    r9d,0x4
  424e4b:	mov    al,0x1
  424e4d:	cmp    r9w,si
  424e51:	jae    424e5f <flatcc_verify_union_field@@Base+0x5f>
  424e53:	movzx  eax,r9w
  424e57:	cmp    WORD PTR [rbx+rax*1],0x0
  424e5c:	sete   al
  424e5f:	mov    r14d,DWORD PTR [rdi+0x18]
  424e63:	lea    r11,[r8+r14*1]
  424e67:	mov    bpl,BYTE PTR [r10+r11*1]
  424e6b:	test   al,al
  424e6d:	jne    424e7d <flatcc_verify_union_field@@Base+0x7d>
  424e6f:	mov    eax,0x18
  424e74:	test   bpl,bpl
  424e77:	je     424f23 <flatcc_verify_union_field@@Base+0x123>
  424e7d:	xor    eax,eax
  424e7f:	test   bpl,bpl
  424e82:	je     424f23 <flatcc_verify_union_field@@Base+0x123>
  424e88:	cmp    r9w,si
  424e8c:	jae    424f2c <flatcc_verify_union_field@@Base+0x12c>
  424e92:	movzx  eax,r9w
  424e96:	movzx  esi,WORD PTR [rbx+rax*1]
  424e9a:	test   esi,esi
  424e9c:	je     424f2c <flatcc_verify_union_field@@Base+0x12c>
  424ea2:	lea    edx,[rsi+0x4]
  424ea5:	movzx  ebp,WORD PTR [rdi+0x1c]
  424ea9:	mov    eax,0xd
  424eae:	cmp    edx,ebp
  424eb0:	ja     424f23 <flatcc_verify_union_field@@Base+0x123>
  424eb2:	add    r14d,esi
  424eb5:	mov    eax,0xc
  424eba:	test   r14b,0x3
  424ebe:	jne    424f23 <flatcc_verify_union_field@@Base+0x123>
  424ec0:	mov    eax,0x0
  424ec5:	test   r14d,r14d
  424ec8:	je     424f23 <flatcc_verify_union_field@@Base+0x123>
  424eca:	mov    QWORD PTR [rsp],r8
  424ece:	mov    eax,DWORD PTR [rdi+0x8]
  424ed1:	mov    DWORD PTR [rsp+0x8],eax
  424ed5:	mov    eax,DWORD PTR [rdi+0xc]
  424ed8:	mov    DWORD PTR [rsp+0xc],eax
  424edc:	mov    DWORD PTR [rsp+0x14],r14d
  424ee1:	mov    eax,r14d
  424ee4:	mov    eax,DWORD PTR [r8+rax*1]
  424ee8:	mov    DWORD PTR [rsp+0x18],eax
  424eec:	mov    al,BYTE PTR [r11+r10*1]
  424ef0:	mov    BYTE PTR [rsp+0x10],al
  424ef4:	mov    rdi,rsp
  424ef7:	call   rcx
  424ef9:	jmp    424f23 <flatcc_verify_union_field@@Base+0x123>
  424efb:	add    r9d,0x4
  424eff:	cmp    r9w,si
  424f03:	jae    424f19 <flatcc_verify_union_field@@Base+0x119>
  424f05:	mov    rcx,QWORD PTR [rdi+0x10]
  424f09:	movzx  esi,r9w
  424f0d:	mov    eax,0x17
  424f12:	cmp    WORD PTR [rcx+rsi*1],0x0
  424f17:	jne    424f23 <flatcc_verify_union_field@@Base+0x123>
  424f19:	test   edx,edx
  424f1b:	mov    eax,0x15
  424f20:	cmove  eax,edx
  424f23:	add    rsp,0x20
  424f27:	pop    rbx
  424f28:	pop    r14
  424f2a:	pop    rbp
  424f2b:	ret    
  424f2c:	xor    eax,eax
  424f2e:	test   edx,edx
  424f30:	setne  al
  424f33:	shl    eax,0x2
  424f36:	jmp    424f23 <flatcc_verify_union_field@@Base+0x123>
  424f38:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000424f40 <flatcc_verify_union_vector_field@@Base>:
  424f40:	push   rbp
  424f41:	push   r15
  424f43:	push   r14
  424f45:	push   r13
  424f47:	push   r12
  424f49:	push   rbx
  424f4a:	sub    rsp,0x28
  424f4e:	mov    r12,rcx
  424f51:	lea    r10d,[rsi+rsi*1]
  424f55:	lea    ecx,[rsi+rsi*1]
  424f58:	add    ecx,0x2
  424f5b:	movzx  esi,WORD PTR [rdi+0x1e]
  424f5f:	cmp    cx,si
  424f62:	jae    424f75 <flatcc_verify_union_vector_field@@Base+0x35>
  424f64:	mov    r11,QWORD PTR [rdi+0x10]
  424f68:	movzx  eax,cx
  424f6b:	movzx  ebp,WORD PTR [r11+rax*1]
  424f70:	test   bp,bp
  424f73:	jne    424fb6 <flatcc_verify_union_vector_field@@Base+0x76>
  424f75:	lea    eax,[r10+0x4]
  424f79:	cmp    ax,si
  424f7c:	jae    42500b <flatcc_verify_union_vector_field@@Base+0xcb>
  424f82:	test   edx,edx
  424f84:	je     424fa0 <flatcc_verify_union_vector_field@@Base+0x60>
  424f86:	mov    rbp,QWORD PTR [rdi+0x10]
  424f8a:	movzx  eax,ax
  424f8d:	movzx  ebp,WORD PTR [rbp+rax*1+0x0]
  424f92:	mov    eax,0x16
  424f97:	test   bp,bp
  424f9a:	je     425231 <flatcc_verify_union_vector_field@@Base+0x2f1>
  424fa0:	cmp    cx,si
  424fa3:	jae    42501a <flatcc_verify_union_vector_field@@Base+0xda>
  424fa5:	mov    r11,QWORD PTR [rdi+0x10]
  424fa9:	movzx  eax,cx
  424fac:	movzx  ebp,WORD PTR [r11+rax*1]
  424fb1:	test   bp,bp
  424fb4:	je     42501a <flatcc_verify_union_vector_field@@Base+0xda>
  424fb6:	add    rax,r11
  424fb9:	movzx  ecx,bp
  424fbc:	lea    ebp,[rcx+0x4]
  424fbf:	movzx  ebx,WORD PTR [rdi+0x1c]
  424fc3:	cmp    ebp,ebx
  424fc5:	ja     425032 <flatcc_verify_union_vector_field@@Base+0xf2>
  424fc7:	add    ecx,DWORD PTR [rdi+0x18]
  424fca:	test   cl,0x3
  424fcd:	jne    425032 <flatcc_verify_union_vector_field@@Base+0xf2>
  424fcf:	test   ecx,ecx
  424fd1:	je     4250c9 <flatcc_verify_union_vector_field@@Base+0x189>
  424fd7:	mov    r8,QWORD PTR [rdi]
  424fda:	mov    ebp,ecx
  424fdc:	mov    ebp,DWORD PTR [r8+rbp*1]
  424fe0:	add    ebp,ecx
  424fe2:	cmp    ebp,ecx
  424fe4:	jbe    425032 <flatcc_verify_union_vector_field@@Base+0xf2>
  424fe6:	test   bpl,0x3
  424fea:	jne    425032 <flatcc_verify_union_vector_field@@Base+0xf2>
  424fec:	mov    ecx,DWORD PTR [rdi+0x8]
  424fef:	mov    r9d,ebp
  424ff2:	lea    rbx,[r9+0x4]
  424ff6:	cmp    rbx,rcx
  424ff9:	ja     425032 <flatcc_verify_union_vector_field@@Base+0xf2>
  424ffb:	add    ecx,0xfffffffc
  424ffe:	sub    ecx,ebp
  425000:	cmp    ecx,DWORD PTR [r8+r9*1]
  425004:	jb     425032 <flatcc_verify_union_vector_field@@Base+0xf2>
  425006:	jmp    4250c9 <flatcc_verify_union_vector_field@@Base+0x189>
  42500b:	mov    eax,0x16
  425010:	test   edx,edx
  425012:	jne    425231 <flatcc_verify_union_vector_field@@Base+0x2f1>
  425018:	jmp    424fa0 <flatcc_verify_union_vector_field@@Base+0x60>
  42501a:	test   edx,edx
  42501c:	je     4250b4 <flatcc_verify_union_vector_field@@Base+0x174>
  425022:	cmp    cx,si
  425025:	jae    425227 <flatcc_verify_union_vector_field@@Base+0x2e7>
  42502b:	movzx  eax,cx
  42502e:	add    rax,QWORD PTR [rdi+0x10]
  425032:	movzx  ecx,WORD PTR [rax]
  425035:	test   ecx,ecx
  425037:	je     425227 <flatcc_verify_union_vector_field@@Base+0x2e7>
  42503d:	lea    edx,[rcx+0x4]
  425040:	movzx  esi,WORD PTR [rdi+0x1c]
  425044:	mov    eax,0xd
  425049:	cmp    edx,esi
  42504b:	ja     425231 <flatcc_verify_union_vector_field@@Base+0x2f1>
  425051:	add    ecx,DWORD PTR [rdi+0x18]
  425054:	mov    eax,0xc
  425059:	test   cl,0x3
  42505c:	jne    425231 <flatcc_verify_union_vector_field@@Base+0x2f1>
  425062:	test   ecx,ecx
  425064:	je     425240 <flatcc_verify_union_vector_field@@Base+0x300>
  42506a:	mov    rdx,QWORD PTR [rdi]
  42506d:	mov    eax,ecx
  42506f:	mov    esi,DWORD PTR [rdx+rax*1]
  425072:	add    esi,ecx
  425074:	mov    eax,0x10
  425079:	cmp    esi,ecx
  42507b:	jbe    425231 <flatcc_verify_union_vector_field@@Base+0x2f1>
  425081:	test   sil,0x3
  425085:	jne    425231 <flatcc_verify_union_vector_field@@Base+0x2f1>
  42508b:	mov    ecx,DWORD PTR [rdi+0x8]
  42508e:	mov    edi,esi
  425090:	lea    rbp,[rdi+0x4]
  425094:	cmp    rbp,rcx
  425097:	ja     425231 <flatcc_verify_union_vector_field@@Base+0x2f1>
  42509d:	add    ecx,0xfffffffc
  4250a0:	sub    ecx,esi
  4250a2:	xor    esi,esi
  4250a4:	cmp    ecx,DWORD PTR [rdx+rdi*1]
  4250a7:	mov    eax,0x1a
  4250ac:	cmovae eax,esi
  4250af:	jmp    425231 <flatcc_verify_union_vector_field@@Base+0x2f1>
  4250b4:	xor    eax,eax
  4250b6:	cmp    cx,si
  4250b9:	jae    425231 <flatcc_verify_union_vector_field@@Base+0x2f1>
  4250bf:	mov    r11,QWORD PTR [rdi+0x10]
  4250c3:	movzx  eax,cx
  4250c6:	add    rax,r11
  4250c9:	movzx  ecx,WORD PTR [rax]
  4250cc:	xor    eax,eax
  4250ce:	test   rcx,rcx
  4250d1:	je     425231 <flatcc_verify_union_vector_field@@Base+0x2f1>
  4250d7:	mov    r15,QWORD PTR [rdi]
  4250da:	mov    r8d,DWORD PTR [rdi+0x18]
  4250de:	lea    r9,[r15+r8*1]
  4250e2:	add    r9,rcx
  4250e5:	je     425231 <flatcc_verify_union_vector_field@@Base+0x2f1>
  4250eb:	add    r10d,0x4
  4250ef:	cmp    r10w,si
  4250f3:	jae    425227 <flatcc_verify_union_vector_field@@Base+0x2e7>
  4250f9:	movzx  eax,r10w
  4250fd:	movzx  ecx,WORD PTR [r11+rax*1]
  425102:	test   ecx,ecx
  425104:	je     425227 <flatcc_verify_union_vector_field@@Base+0x2e7>
  42510a:	lea    edx,[rcx+0x4]
  42510d:	movzx  esi,WORD PTR [rdi+0x1c]
  425111:	mov    eax,0xd
  425116:	cmp    edx,esi
  425118:	ja     425231 <flatcc_verify_union_vector_field@@Base+0x2f1>
  42511e:	lea    ebx,[r8+rcx*1]
  425122:	mov    eax,0xc
  425127:	test   bl,0x3
  42512a:	jne    425231 <flatcc_verify_union_vector_field@@Base+0x2f1>
  425130:	mov    eax,0x0
  425135:	test   ebx,ebx
  425137:	je     425231 <flatcc_verify_union_vector_field@@Base+0x2f1>
  42513d:	mov    esi,DWORD PTR [rdi+0xc]
  425140:	test   esi,esi
  425142:	jle    425244 <flatcc_verify_union_vector_field@@Base+0x304>
  425148:	mov    eax,ebx
  42514a:	mov    edx,DWORD PTR [r15+rax*1]
  42514e:	lea    ebp,[rdx+rbx*1]
  425151:	mov    eax,0x10
  425156:	cmp    ebp,ebx
  425158:	jbe    425231 <flatcc_verify_union_vector_field@@Base+0x2f1>
  42515e:	test   bpl,0x3
  425162:	jne    425231 <flatcc_verify_union_vector_field@@Base+0x2f1>
  425168:	mov    r10d,DWORD PTR [rdi+0x8]
  42516c:	mov    ebx,ebp
  42516e:	lea    rdi,[rbx+0x4]
  425172:	cmp    rdi,r10
  425175:	ja     425231 <flatcc_verify_union_vector_field@@Base+0x2f1>
  42517b:	mov    ebx,DWORD PTR [r15+rbx*1]
  42517f:	mov    eax,0x19
  425184:	cmp    ebx,0x3fffffff
  42518a:	ja     425231 <flatcc_verify_union_vector_field@@Base+0x2f1>
  425190:	lea    edi,[r10-0x4]
  425194:	sub    edi,ebp
  425196:	lea    ebp,[rbx*4+0x0]
  42519d:	mov    eax,0x1a
  4251a2:	cmp    edi,ebp
  4251a4:	jb     425231 <flatcc_verify_union_vector_field@@Base+0x2f1>
  4251aa:	mov    r13d,DWORD PTR [r9]
  4251ad:	mov    edi,DWORD PTR [r13+r9*1+0x0]
  4251b2:	mov    eax,0x22
  4251b7:	cmp    ebx,edi
  4251b9:	jne    425231 <flatcc_verify_union_vector_field@@Base+0x2f1>
  4251bb:	add    esi,0xffffffff
  4251be:	mov    QWORD PTR [rsp+0x8],r15
  4251c3:	mov    DWORD PTR [rsp+0x10],r10d
  4251c8:	mov    DWORD PTR [rsp+0x14],esi
  4251cc:	test   edi,edi
  4251ce:	je     425240 <flatcc_verify_union_vector_field@@Base+0x300>
  4251d0:	mov    rax,rdi
  4251d3:	add    r13,r9
  4251d6:	add    edx,r8d
  4251d9:	lea    ebp,[rcx+rdx*1]
  4251dc:	add    ebp,0x4
  4251df:	xor    r14d,r14d
  4251e2:	mov    rbx,rdi
  4251e5:	mov    eax,ebp
  4251e7:	mov    eax,DWORD PTR [r15+rax*1]
  4251eb:	movzx  ecx,BYTE PTR [r13+r14*1+0x4]
  4251f1:	test   eax,eax
  4251f3:	je     425213 <flatcc_verify_union_vector_field@@Base+0x2d3>
  4251f5:	test   cl,cl
  4251f7:	je     42524b <flatcc_verify_union_vector_field@@Base+0x30b>
  4251f9:	mov    BYTE PTR [rsp+0x18],cl
  4251fd:	mov    DWORD PTR [rsp+0x1c],ebp
  425201:	mov    DWORD PTR [rsp+0x20],eax
  425205:	lea    rdi,[rsp+0x8]
  42520a:	call   r12
  42520d:	test   eax,eax
  42520f:	je     425217 <flatcc_verify_union_vector_field@@Base+0x2d7>
  425211:	jmp    425252 <flatcc_verify_union_vector_field@@Base+0x312>
  425213:	test   cl,cl
  425215:	jne    42525c <flatcc_verify_union_vector_field@@Base+0x31c>
  425217:	add    r14,0x1
  42521b:	add    ebp,0x4
  42521e:	xor    eax,eax
  425220:	cmp    r14,rbx
  425223:	jb     4251e5 <flatcc_verify_union_vector_field@@Base+0x2a5>
  425225:	jmp    425231 <flatcc_verify_union_vector_field@@Base+0x2f1>
  425227:	xor    eax,eax
  425229:	test   edx,edx
  42522b:	setne  al
  42522e:	shl    eax,0x2
  425231:	add    rsp,0x28
  425235:	pop    rbx
  425236:	pop    r12
  425238:	pop    r13
  42523a:	pop    r14
  42523c:	pop    r15
  42523e:	pop    rbp
  42523f:	ret    
  425240:	xor    eax,eax
  425242:	jmp    425231 <flatcc_verify_union_vector_field@@Base+0x2f1>
  425244:	mov    eax,0x3
  425249:	jmp    425231 <flatcc_verify_union_vector_field@@Base+0x2f1>
  42524b:	mov    eax,0x21
  425250:	jmp    425231 <flatcc_verify_union_vector_field@@Base+0x2f1>
  425252:	lea    rdi,[rsp+0x8]
  425257:	call   r12
  42525a:	jmp    425231 <flatcc_verify_union_vector_field@@Base+0x2f1>
  42525c:	mov    eax,0x20
  425261:	jmp    425231 <flatcc_verify_union_vector_field@@Base+0x2f1>
  425263:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42526d:	nop    DWORD PTR [rax]

0000000000425270 <grisu3_diy_fp_encode_double@@Base>:
  425270:	push   rbp
  425271:	push   r15
  425273:	push   r14
  425275:	push   r13
  425277:	push   r12
  425279:	push   rbx
  42527a:	push   rax
  42527b:	xor    ebx,ebx
  42527d:	test   ecx,ecx
  42527f:	setne  r10b
  425283:	test   rdi,rdi
  425286:	je     4255de <grisu3_diy_fp_encode_double@@Base+0x36e>
  42528c:	movabs r9,0x40000000000000
  425296:	xor    eax,eax
  425298:	mov    rcx,rdi
  42529b:	shr    rcx,0x36
  42529f:	jne    4252bc <grisu3_diy_fp_encode_double@@Base+0x4c>
  4252a1:	xor    eax,eax
  4252a3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4252ad:	nop    DWORD PTR [rax]
  4252b0:	shl    rdi,0xa
  4252b4:	add    eax,0xfffffff6
  4252b7:	cmp    rdi,r9
  4252ba:	jb     4252b0 <grisu3_diy_fp_encode_double@@Base+0x40>
  4252bc:	sub    esi,edx
  4252be:	test   rdi,rdi
  4252c1:	js     4252db <grisu3_diy_fp_encode_double@@Base+0x6b>
  4252c3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4252cd:	nop    DWORD PTR [rax]
  4252d0:	add    rdi,rdi
  4252d3:	add    eax,0xffffffff
  4252d6:	test   rdi,rdi
  4252d9:	jns    4252d0 <grisu3_diy_fp_encode_double@@Base+0x60>
  4252db:	cmp    esi,0xfffffea3
  4252e1:	jle    4255fd <grisu3_diy_fp_encode_double@@Base+0x38d>
  4252e7:	cmp    esi,0x15c
  4252ed:	jge    42561c <grisu3_diy_fp_encode_double@@Base+0x3ac>
  4252f3:	lea    ecx,[rsi+0x15c]
  4252f9:	sar    ecx,0x1f
  4252fc:	shr    ecx,0x1d
  4252ff:	lea    ecx,[rsi+rcx*1]
  425302:	add    ecx,0x15c
  425308:	sar    ecx,0x3
  42530b:	movsxd r11,ecx
  42530e:	shl    r11,0x4
  425312:	lea    r14,[rip+0x16117]        # 43b430 <flatcc_builder_padding_base@@Base+0x1c00>
  425319:	movsx  ecx,WORD PTR [r11+r14*1+0xa]
  42531f:	cmp    esi,ecx
  425321:	jl     42563b <grisu3_diy_fp_encode_double@@Base+0x3cb>
  425327:	lea    ebp,[rcx+0x8]
  42532a:	cmp    ebp,esi
  42532c:	jle    42565a <grisu3_diy_fp_encode_double@@Base+0x3ea>
  425332:	mov    bl,r10b
  425335:	shl    ebx,0x2
  425338:	mov    ebp,eax
  42533a:	neg    ebp
  42533c:	shlx   r10d,ebx,ebp
  425341:	cmp    esi,ecx
  425343:	je     4253d5 <grisu3_diy_fp_encode_double@@Base+0x165>
  425349:	not    ecx
  42534b:	add    esi,ecx
  42534d:	cmp    esi,0x7
  425350:	jae    425679 <grisu3_diy_fp_encode_double@@Base+0x409>
  425356:	movsxd rcx,esi
  425359:	shl    rcx,0x4
  42535d:	lea    rbx,[rip+0x1605c]        # 43b3c0 <flatcc_builder_padding_base@@Base+0x1b90>
  425364:	mov    rbp,QWORD PTR [rcx+rbx*1]
  425368:	mov    r15d,DWORD PTR [rcx+rbx*1+0x8]
  42536d:	mov    rbx,rdi
  425370:	shr    rbx,0x20
  425374:	mov    r12d,edi
  425377:	mov    edi,ebp
  425379:	mov    rcx,rbp
  42537c:	shr    rcx,0x20
  425380:	mov    r13,rcx
  425383:	imul   r13,rbx
  425387:	imul   rcx,r12
  42538b:	imul   rbx,rdi
  42538f:	imul   rdi,r12
  425393:	shr    rdi,0x20
  425397:	mov    ebp,ebx
  425399:	add    rbp,rdi
  42539c:	mov    edi,ecx
  42539e:	add    rdi,rbp
  4253a1:	sub    rdi,0xffffffff80000000
  4253a8:	shr    rbx,0x20
  4253ac:	add    rbx,r13
  4253af:	shr    rcx,0x20
  4253b3:	add    rcx,rbx
  4253b6:	shr    rdi,0x20
  4253ba:	add    rdi,rcx
  4253bd:	lea    eax,[rax+r15*1]
  4253c1:	add    eax,0x40
  4253c4:	lea    ecx,[rdx+rsi*1]
  4253c7:	add    ecx,0x1
  4253ca:	lea    edx,[r10+0x4]
  4253ce:	cmp    ecx,0x13
  4253d1:	cmovg  r10d,edx
  4253d5:	mov    rsi,QWORD PTR [r11+r14*1]
  4253d9:	mov    rdx,rdi
  4253dc:	shr    rdx,0x20
  4253e0:	mov    ecx,edi
  4253e2:	mov    edi,esi
  4253e4:	shr    rsi,0x20
  4253e8:	mov    rbx,rdx
  4253eb:	imul   rbx,rsi
  4253ef:	imul   rsi,rcx
  4253f3:	imul   rdx,rdi
  4253f7:	imul   rcx,rdi
  4253fb:	shr    rcx,0x20
  4253ff:	mov    edi,edx
  425401:	add    rdi,rcx
  425404:	mov    ecx,esi
  425406:	add    rcx,rdi
  425409:	sub    rcx,0xffffffff80000000
  425410:	shr    rdx,0x20
  425414:	add    rdx,rbx
  425417:	shr    rsi,0x20
  42541b:	add    rsi,rdx
  42541e:	shr    rcx,0x20
  425422:	cmp    r10d,0x1
  425426:	sbb    r10d,0x0
  42542a:	add    rcx,rsi
  42542d:	je     4255de <grisu3_diy_fp_encode_double@@Base+0x36e>
  425433:	movsx  edx,WORD PTR [r11+r14*1+0x8]
  425439:	lea    eax,[rdx+rax*1]
  42543c:	add    eax,0x40
  42543f:	mov    edx,eax
  425441:	cmp    rcx,r9
  425444:	jae    42545c <grisu3_diy_fp_encode_double@@Base+0x1ec>
  425446:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425450:	shl    rcx,0xa
  425454:	add    edx,0xfffffff6
  425457:	cmp    rcx,r9
  42545a:	jb     425450 <grisu3_diy_fp_encode_double@@Base+0x1e0>
  42545c:	add    r10d,0x9
  425460:	test   rcx,rcx
  425463:	js     42547b <grisu3_diy_fp_encode_double@@Base+0x20b>
  425465:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42546f:	nop
  425470:	add    rcx,rcx
  425473:	add    edx,0xffffffff
  425476:	test   rcx,rcx
  425479:	jns    425470 <grisu3_diy_fp_encode_double@@Base+0x200>
  42547b:	sub    eax,edx
  42547d:	shlx   r14d,r10d,eax
  425482:	xor    ebx,ebx
  425484:	cmp    edx,0xfffffbcd
  42548a:	jg     4254c1 <grisu3_diy_fp_encode_double@@Base+0x251>
  42548c:	mov    ebx,0x40
  425491:	cmp    edx,0xfffffb8f
  425497:	jl     4254a5 <grisu3_diy_fp_encode_double@@Base+0x235>
  425499:	mov    ebx,0xfffffbce
  42549e:	sub    ebx,edx
  4254a0:	cmp    ebx,0x3d
  4254a3:	jl     4254c1 <grisu3_diy_fp_encode_double@@Base+0x251>
  4254a5:	lea    eax,[rbx-0x3e]
  4254a8:	shrx   rcx,rcx,rax
  4254ad:	lea    edx,[rbx+rdx*1]
  4254b0:	add    edx,0xffffffc2
  4254b3:	sarx   r14d,r14d,eax
  4254b8:	add    r14d,0x9
  4254bc:	mov    ebx,0x3e
  4254c1:	movabs r11,0x1fffffffffffff
  4254cb:	shrx   rax,rcx,rbx
  4254d0:	add    edx,ebx
  4254d2:	lea    esi,[rbx-0x1]
  4254d5:	mov    edi,0x1
  4254da:	shlx   r15,rdi,rsi
  4254df:	lea    r10d,[r14+r15*8]
  4254e3:	cmp    ebx,r10d
  4254e6:	jl     4254fb <grisu3_diy_fp_encode_double@@Base+0x28b>
  4254e8:	add    rax,0x1
  4254ec:	lea    rsi,[r11+0x1]
  4254f0:	test   rax,rsi
  4254f3:	je     4254fb <grisu3_diy_fp_encode_double@@Base+0x28b>
  4254f5:	shr    rax,1
  4254f8:	add    edx,0x1
  4254fb:	and    ecx,r15d
  4254fe:	cmp    rax,r11
  425501:	jbe    425520 <grisu3_diy_fp_encode_double@@Base+0x2b0>
  425503:	add    r9,0xffffffffffffffff
  425507:	mov    rdi,rax
  42550a:	nop    WORD PTR [rax+rax*1+0x0]
  425510:	shr    rdi,1
  425513:	add    edx,0x1
  425516:	cmp    rax,r9
  425519:	mov    rax,rdi
  42551c:	ja     425510 <grisu3_diy_fp_encode_double@@Base+0x2a0>
  42551e:	jmp    425523 <grisu3_diy_fp_encode_double@@Base+0x2b3>
  425520:	mov    rdi,rax
  425523:	shl    ecx,0x3
  425526:	shl    r15d,0x3
  42552a:	vpxor  xmm0,xmm0,xmm0
  42552e:	cmp    edx,0xfffffbce
  425534:	jl     4255b6 <grisu3_diy_fp_encode_double@@Base+0x346>
  42553a:	movabs r9,0xfffffffffffff
  425544:	lea    rsi,[r9+0x1]
  425548:	and    rsi,rdi
  42554b:	sete   al
  42554e:	cmp    edx,0xfffffbce
  425554:	je     42558f <grisu3_diy_fp_encode_double@@Base+0x31f>
  425556:	test   rsi,rsi
  425559:	jne    42558f <grisu3_diy_fp_encode_double@@Base+0x31f>
  42555b:	movabs rsi,0x8000000000000
  425565:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42556f:	nop
  425570:	mov    ebp,edx
  425572:	lea    edx,[rbp-0x1]
  425575:	mov    rbx,rdi
  425578:	and    rbx,rsi
  42557b:	lea    rdi,[rdi+rdi*1]
  42557f:	sete   al
  425582:	cmp    ebp,0xfffffbd0
  425588:	jl     42558f <grisu3_diy_fp_encode_double@@Base+0x31f>
  42558a:	test   rbx,rbx
  42558d:	je     425570 <grisu3_diy_fp_encode_double@@Base+0x300>
  42558f:	lea    esi,[rdx+0x433]
  425595:	shl    rsi,0x34
  425599:	xor    ebp,ebp
  42559b:	test   al,al
  42559d:	cmove  rbp,rsi
  4255a1:	cmp    edx,0xfffffbce
  4255a7:	cmovne rbp,rsi
  4255ab:	and    rdi,r9
  4255ae:	or     rdi,rbp
  4255b1:	vmovq  xmm0,rdi
  4255b6:	vmovq  QWORD PTR [r8],xmm0
  4255bb:	sub    r15d,r14d
  4255be:	cmp    r15d,ecx
  4255c1:	setge  al
  4255c4:	cmp    ecx,r10d
  4255c7:	setge  cl
  4255ca:	or     cl,al
  4255cc:	movzx  eax,cl
  4255cf:	add    rsp,0x8
  4255d3:	pop    rbx
  4255d4:	pop    r12
  4255d6:	pop    r13
  4255d8:	pop    r14
  4255da:	pop    r15
  4255dc:	pop    rbp
  4255dd:	ret    
  4255de:	lea    rdi,[rip+0x16bed]        # 43c1d2 <flatcc_builder_padding_base@@Base+0x29a2>
  4255e5:	lea    rsi,[rip+0x16bef]        # 43c1db <flatcc_builder_padding_base@@Base+0x29ab>
  4255ec:	lea    rcx,[rip+0x16c58]        # 43c24b <flatcc_builder_padding_base@@Base+0x2a1b>
  4255f3:	mov    edx,0x104
  4255f8:	call   406070 <__assert_fail@plt>
  4255fd:	lea    rdi,[rip+0x16c80]        # 43c284 <flatcc_builder_padding_base@@Base+0x2a54>
  425604:	lea    rsi,[rip+0x16689]        # 43bc94 <flatcc_builder_padding_base@@Base+0x2464>
  42560b:	lea    rcx,[rip+0x16c91]        # 43c2a3 <flatcc_builder_padding_base@@Base+0x2a73>
  425612:	mov    edx,0x50
  425617:	call   406070 <__assert_fail@plt>
  42561c:	lea    rdi,[rip+0x16cb9]        # 43c2dc <flatcc_builder_padding_base@@Base+0x2aac>
  425623:	lea    rsi,[rip+0x1666a]        # 43bc94 <flatcc_builder_padding_base@@Base+0x2464>
  42562a:	lea    rcx,[rip+0x16c72]        # 43c2a3 <flatcc_builder_padding_base@@Base+0x2a73>
  425631:	mov    edx,0x51
  425636:	call   406070 <__assert_fail@plt>
  42563b:	lea    rdi,[rip+0x16cc5]        # 43c307 <flatcc_builder_padding_base@@Base+0x2ad7>
  425642:	lea    rsi,[rip+0x1664b]        # 43bc94 <flatcc_builder_padding_base@@Base+0x2464>
  425649:	lea    rcx,[rip+0x16c53]        # 43c2a3 <flatcc_builder_padding_base@@Base+0x2a73>
  425650:	mov    edx,0x58
  425655:	call   406070 <__assert_fail@plt>
  42565a:	lea    rdi,[rip+0x16cb5]        # 43c316 <flatcc_builder_padding_base@@Base+0x2ae6>
  425661:	lea    rsi,[rip+0x1662c]        # 43bc94 <flatcc_builder_padding_base@@Base+0x2464>
  425668:	lea    rcx,[rip+0x16c34]        # 43c2a3 <flatcc_builder_padding_base@@Base+0x2a73>
  42566f:	mov    edx,0x59
  425674:	call   406070 <__assert_fail@plt>
  425679:	lea    rdi,[rip+0x165f8]        # 43bc78 <flatcc_builder_padding_base@@Base+0x2448>
  425680:	lea    rsi,[rip+0x1660d]        # 43bc94 <flatcc_builder_padding_base@@Base+0x2464>
  425687:	lea    rcx,[rip+0x16677]        # 43bd05 <flatcc_builder_padding_base@@Base+0x24d5>
  42568e:	mov    edx,0xb9
  425693:	call   406070 <__assert_fail@plt>
  425698:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004256a0 <flatcc_json_parser_error_string@@Base>:
  4256a0:	cmp    edi,0x22
  4256a3:	ja     4256b4 <flatcc_json_parser_error_string@@Base+0x14>
  4256a5:	movsxd rax,edi
  4256a8:	lea    rcx,[rip+0x1e611]        # 443cc0 <flatcc_builder_padding_base@@Base+0xa490>
  4256af:	mov    rax,QWORD PTR [rcx+rax*8]
  4256b3:	ret    
  4256b4:	lea    rax,[rip+0x15a85]        # 43b140 <flatcc_builder_padding_base@@Base+0x1910>
  4256bb:	ret    
  4256bc:	nop    DWORD PTR [rax+0x0]

00000000004256c0 <flatcc_json_parser_set_error@@Base>:
  4256c0:	cmp    DWORD PTR [rdi+0x20],0x0
  4256c4:	je     4256ca <flatcc_json_parser_set_error@@Base+0xa>
  4256c6:	mov    rax,rdx
  4256c9:	ret    
  4256ca:	mov    DWORD PTR [rdi+0x20],ecx
  4256cd:	mov    eax,DWORD PTR [rdi+0x8]
  4256d0:	mov    ecx,esi
  4256d2:	sub    ecx,eax
  4256d4:	add    ecx,0x1
  4256d7:	mov    DWORD PTR [rdi+0x1c],ecx
  4256da:	mov    QWORD PTR [rdi+0x38],rsi
  4256de:	mov    rax,rdx
  4256e1:	ret    
  4256e2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4256ec:	nop    DWORD PTR [rax+0x0]

00000000004256f0 <flatcc_json_parser_string_part@@Base>:
  4256f0:	cmp    rsi,rdx
  4256f3:	je     42571b <flatcc_json_parser_string_part@@Base+0x2b>
  4256f5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4256ff:	nop
  425700:	movzx  eax,BYTE PTR [rsi]
  425703:	cmp    al,0x20
  425705:	jb     42572a <flatcc_json_parser_string_part@@Base+0x3a>
  425707:	cmp    al,0x22
  425709:	je     42574b <flatcc_json_parser_string_part@@Base+0x5b>
  42570b:	cmp    al,0x5c
  42570d:	je     42574b <flatcc_json_parser_string_part@@Base+0x5b>
  42570f:	add    rsi,0x1
  425713:	cmp    rdx,rsi
  425716:	jne    425700 <flatcc_json_parser_string_part@@Base+0x10>
  425718:	mov    rsi,rdx
  42571b:	cmp    DWORD PTR [rdi+0x20],0x0
  42571f:	jne    425748 <flatcc_json_parser_string_part@@Base+0x58>
  425721:	mov    DWORD PTR [rdi+0x20],0x14
  425728:	jmp    425737 <flatcc_json_parser_string_part@@Base+0x47>
  42572a:	cmp    DWORD PTR [rdi+0x20],0x0
  42572e:	jne    425748 <flatcc_json_parser_string_part@@Base+0x58>
  425730:	mov    DWORD PTR [rdi+0x20],0x11
  425737:	mov    eax,DWORD PTR [rdi+0x8]
  42573a:	mov    ecx,esi
  42573c:	sub    ecx,eax
  42573e:	add    ecx,0x1
  425741:	mov    DWORD PTR [rdi+0x1c],ecx
  425744:	mov    QWORD PTR [rdi+0x38],rsi
  425748:	mov    rsi,rdx
  42574b:	mov    rax,rsi
  42574e:	ret    
  42574f:	nop

0000000000425750 <flatcc_json_parser_space_ext@@Base>:
  425750:	lea    rax,[rip+0x159f9]        # 43b150 <flatcc_builder_padding_base@@Base+0x1920>
  425757:	mov    rcx,rdx
  42575a:	sub    rcx,rsi
  42575d:	cmp    rcx,0x10
  425761:	jl     425793 <flatcc_json_parser_space_ext@@Base+0x43>
  425763:	cmp    BYTE PTR [rsi],0x20
  425766:	jg     425831 <flatcc_json_parser_space_ext@@Base+0xe1>
  42576c:	movzx  r8d,WORD PTR [rsi]
  425770:	lea    rcx,[rsi+0x2]
  425774:	cmp    r8d,0x2020
  42577b:	cmovne rcx,rsi
  42577f:	lea    rsi,[rcx+0x1]
  425783:	cmp    BYTE PTR [rcx],0x20
  425786:	cmovne rsi,rcx
  42578a:	cmp    BYTE PTR [rsi],0x20
  42578d:	jg     425831 <flatcc_json_parser_space_ext@@Base+0xe1>
  425793:	cmp    rsi,rdx
  425796:	je     42582e <flatcc_json_parser_space_ext@@Base+0xde>
  42579c:	nop    DWORD PTR [rax+0x0]
  4257a0:	cmp    BYTE PTR [rsi],0x20
  4257a3:	jne    4257b0 <flatcc_json_parser_space_ext@@Base+0x60>
  4257a5:	add    rsi,0x1
  4257a9:	cmp    rdx,rsi
  4257ac:	jne    4257a0 <flatcc_json_parser_space_ext@@Base+0x50>
  4257ae:	jmp    42582e <flatcc_json_parser_space_ext@@Base+0xde>
  4257b0:	cmp    rdx,rsi
  4257b3:	je     42582e <flatcc_json_parser_space_ext@@Base+0xde>
  4257b5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4257bf:	nop
  4257c0:	movsx  ecx,BYTE PTR [rsi]
  4257c3:	cmp    ecx,0x20
  4257c6:	jg     425831 <flatcc_json_parser_space_ext@@Base+0xe1>
  4257c8:	add    ecx,0xfffffff7
  4257cb:	cmp    ecx,0x17
  4257ce:	ja     425810 <flatcc_json_parser_space_ext@@Base+0xc0>
  4257d0:	movsxd rcx,DWORD PTR [rax+rcx*4]
  4257d4:	add    rcx,rax
  4257d7:	jmp    rcx
  4257d9:	add    rsi,0x1
  4257dd:	jmp    425809 <flatcc_json_parser_space_ext@@Base+0xb9>
  4257df:	nop
  4257e0:	mov    rcx,rdx
  4257e3:	sub    rcx,rsi
  4257e6:	cmp    rcx,0x2
  4257ea:	jl     4257f5 <flatcc_json_parser_space_ext@@Base+0xa5>
  4257ec:	cmp    BYTE PTR [rsi+0x1],0xa
  4257f0:	sete   cl
  4257f3:	jmp    4257f7 <flatcc_json_parser_space_ext@@Base+0xa7>
  4257f5:	xor    ecx,ecx
  4257f7:	movzx  ecx,cl
  4257fa:	add    rsi,rcx
  4257fd:	add    DWORD PTR [rdi+0x18],0x1
  425801:	add    rsi,0x1
  425805:	mov    QWORD PTR [rdi+0x8],rsi
  425809:	cmp    rsi,rdx
  42580c:	jne    4257c0 <flatcc_json_parser_space_ext@@Base+0x70>
  42580e:	jmp    42582e <flatcc_json_parser_space_ext@@Base+0xde>
  425810:	cmp    DWORD PTR [rdi+0x20],0x0
  425814:	jne    42582e <flatcc_json_parser_space_ext@@Base+0xde>
  425816:	mov    DWORD PTR [rdi+0x20],0x5
  42581d:	mov    eax,DWORD PTR [rdi+0x8]
  425820:	mov    ecx,esi
  425822:	sub    ecx,eax
  425824:	add    ecx,0x1
  425827:	mov    DWORD PTR [rdi+0x1c],ecx
  42582a:	mov    QWORD PTR [rdi+0x38],rsi
  42582e:	mov    rsi,rdx
  425831:	mov    rax,rsi
  425834:	ret    
  425835:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42583f:	nop

0000000000425840 <flatcc_json_parser_string_escape@@Base>:
  425840:	push   rbp
  425841:	push   r14
  425843:	push   rbx
  425844:	mov    rax,rdx
  425847:	sub    rax,rsi
  42584a:	cmp    rax,0x2
  42584e:	jl     4258dd <flatcc_json_parser_string_escape@@Base+0x9d>
  425854:	cmp    BYTE PTR [rsi],0x5c
  425857:	jne    4258dd <flatcc_json_parser_string_escape@@Base+0x9d>
  42585d:	movsx  ebp,BYTE PTR [rsi+0x1]
  425861:	add    ebp,0xffffffde
  425864:	cmp    ebp,0x56
  425867:	ja     4258dd <flatcc_json_parser_string_escape@@Base+0x9d>
  425869:	lea    rbx,[rip+0x15940]        # 43b1b0 <flatcc_builder_padding_base@@Base+0x1980>
  425870:	movsxd rbp,DWORD PTR [rbx+rbp*4]
  425874:	add    rbp,rbx
  425877:	jmp    rbp
  425879:	mov    WORD PTR [rcx],0x2201
  42587e:	jmp    4258af <flatcc_json_parser_string_escape@@Base+0x6f>
  425880:	mov    WORD PTR [rcx],0x2f01
  425885:	jmp    4258af <flatcc_json_parser_string_escape@@Base+0x6f>
  425887:	mov    WORD PTR [rcx],0x5c01
  42588c:	jmp    4258af <flatcc_json_parser_string_escape@@Base+0x6f>
  42588e:	mov    WORD PTR [rcx],0x801
  425893:	jmp    4258af <flatcc_json_parser_string_escape@@Base+0x6f>
  425895:	mov    WORD PTR [rcx],0xc01
  42589a:	jmp    4258af <flatcc_json_parser_string_escape@@Base+0x6f>
  42589c:	mov    WORD PTR [rcx],0xa01
  4258a1:	jmp    4258af <flatcc_json_parser_string_escape@@Base+0x6f>
  4258a3:	mov    WORD PTR [rcx],0xd01
  4258a8:	jmp    4258af <flatcc_json_parser_string_escape@@Base+0x6f>
  4258aa:	mov    WORD PTR [rcx],0x901
  4258af:	add    rsi,0x2
  4258b3:	mov    rdx,rsi
  4258b6:	jmp    4258fe <flatcc_json_parser_string_escape@@Base+0xbe>
  4258b8:	cmp    rax,0x5
  4258bc:	jle    4258dd <flatcc_json_parser_string_escape@@Base+0x9d>
  4258be:	movzx  eax,BYTE PTR [rsi+0x2]
  4258c2:	mov    ebx,eax
  4258c4:	add    bl,0xd0
  4258c7:	cmp    bl,0x9
  4258ca:	ja     425920 <flatcc_json_parser_string_escape@@Base+0xe0>
  4258cc:	movzx  eax,ax
  4258cf:	shl    eax,0xc
  4258d2:	jmp    425938 <flatcc_json_parser_string_escape@@Base+0xf8>
  4258d4:	mov    BYTE PTR [rcx],0x1
  4258d7:	cmp    rax,0x3
  4258db:	jg     425906 <flatcc_json_parser_string_escape@@Base+0xc6>
  4258dd:	mov    BYTE PTR [rcx],0x0
  4258e0:	cmp    DWORD PTR [rdi+0x20],0x0
  4258e4:	jne    4258fe <flatcc_json_parser_string_escape@@Base+0xbe>
  4258e6:	mov    DWORD PTR [rdi+0x20],0x12
  4258ed:	mov    eax,DWORD PTR [rdi+0x8]
  4258f0:	mov    ecx,esi
  4258f2:	sub    ecx,eax
  4258f4:	add    ecx,0x1
  4258f7:	mov    DWORD PTR [rdi+0x1c],ecx
  4258fa:	mov    QWORD PTR [rdi+0x38],rsi
  4258fe:	mov    rax,rdx
  425901:	pop    rbx
  425902:	pop    r14
  425904:	pop    rbp
  425905:	ret    
  425906:	mov    r8b,BYTE PTR [rsi+0x2]
  42590a:	mov    eax,r8d
  42590d:	add    al,0xd0
  42590f:	cmp    al,0x9
  425911:	ja     4259f6 <flatcc_json_parser_string_escape@@Base+0x1b6>
  425917:	shl    r8b,0x4
  42591b:	jmp    425a0d <flatcc_json_parser_string_escape@@Base+0x1cd>
  425920:	mov    ebx,eax
  425922:	or     bl,0x20
  425925:	add    bl,0x9f
  425928:	cmp    bl,0x5
  42592b:	ja     4258dd <flatcc_json_parser_string_escape@@Base+0x9d>
  42592d:	movzx  eax,ax
  425930:	shl    eax,0xc
  425933:	add    eax,0xffff9000
  425938:	mov    r8b,BYTE PTR [rsi+0x3]
  42593c:	mov    ebx,r8d
  42593f:	add    bl,0xd0
  425942:	mov    r9w,0xd000
  425947:	cmp    bl,0xa
  42594a:	jb     425964 <flatcc_json_parser_string_escape@@Base+0x124>
  42594c:	or     r8b,0x20
  425950:	mov    ebx,r8d
  425953:	add    bl,0x9f
  425956:	mov    r9w,0xa900
  42595b:	cmp    bl,0x6
  42595e:	jae    4258dd <flatcc_json_parser_string_escape@@Base+0x9d>
  425964:	mov    r10b,BYTE PTR [rsi+0x4]
  425968:	mov    ebx,r10d
  42596b:	add    bl,0xd0
  42596e:	mov    r11w,0xfd00
  425973:	cmp    bl,0xa
  425976:	jb     425990 <flatcc_json_parser_string_escape@@Base+0x150>
  425978:	or     r10b,0x20
  42597c:	mov    ebx,r10d
  42597f:	add    bl,0x9f
  425982:	mov    r11w,0xfa90
  425987:	cmp    bl,0x6
  42598a:	jae    4258dd <flatcc_json_parser_string_escape@@Base+0x9d>
  425990:	mov    r14b,BYTE PTR [rsi+0x5]
  425994:	mov    ebx,r14d
  425997:	add    bl,0xd0
  42599a:	mov    bp,0xffd0
  42599e:	cmp    bl,0xa
  4259a1:	jb     4259ba <flatcc_json_parser_string_escape@@Base+0x17a>
  4259a3:	or     r14b,0x20
  4259a7:	mov    ebx,r14d
  4259aa:	add    bl,0x9f
  4259ad:	mov    bp,0xffa9
  4259b1:	cmp    bl,0x6
  4259b4:	jae    4258dd <flatcc_json_parser_string_escape@@Base+0x9d>
  4259ba:	movzx  edx,r8b
  4259be:	shl    edx,0x8
  4259c1:	add    r9d,edx
  4259c4:	or     eax,r9d
  4259c7:	movsx  edx,r10b
  4259cb:	shl    edx,0x4
  4259ce:	movsx  edi,r11w
  4259d2:	add    edi,edx
  4259d4:	or     eax,edi
  4259d6:	movsx  edx,r14b
  4259da:	movsx  edi,bp
  4259dd:	add    edi,edx
  4259df:	or     eax,edi
  4259e1:	movzx  edx,ax
  4259e4:	cmp    edx,0x7f
  4259e7:	ja     425a46 <flatcc_json_parser_string_escape@@Base+0x206>
  4259e9:	mov    BYTE PTR [rcx],0x1
  4259ec:	mov    edi,0x1
  4259f1:	jmp    425a8d <flatcc_json_parser_string_escape@@Base+0x24d>
  4259f6:	mov    eax,r8d
  4259f9:	or     al,0x20
  4259fb:	add    al,0x9f
  4259fd:	cmp    al,0x5
  4259ff:	ja     4258dd <flatcc_json_parser_string_escape@@Base+0x9d>
  425a05:	shl    r8b,0x4
  425a09:	add    r8b,0x90
  425a0d:	mov    r9b,BYTE PTR [rsi+0x3]
  425a11:	mov    ebx,r9d
  425a14:	add    bl,0xd0
  425a17:	cmp    bl,0xa
  425a1a:	jb     425a34 <flatcc_json_parser_string_escape@@Base+0x1f4>
  425a1c:	or     r9b,0x20
  425a20:	mov    eax,r9d
  425a23:	add    al,0x9f
  425a25:	cmp    al,0x5
  425a27:	ja     4258dd <flatcc_json_parser_string_escape@@Base+0x9d>
  425a2d:	add    r9b,0xa9
  425a31:	mov    ebx,r9d
  425a34:	or     bl,r8b
  425a37:	mov    BYTE PTR [rcx+0x1],bl
  425a3a:	add    rsi,0x4
  425a3e:	mov    rdx,rsi
  425a41:	jmp    4258fe <flatcc_json_parser_string_escape@@Base+0xbe>
  425a46:	cmp    edx,0x7ff
  425a4c:	ja     425a67 <flatcc_json_parser_string_escape@@Base+0x227>
  425a4e:	mov    BYTE PTR [rcx],0x2
  425a51:	mov    edx,eax
  425a53:	shr    edx,0x6
  425a56:	or     dl,0xc0
  425a59:	mov    BYTE PTR [rcx+0x1],dl
  425a5c:	and    al,0x3f
  425a5e:	or     al,0x80
  425a60:	mov    edi,0x2
  425a65:	jmp    425a8d <flatcc_json_parser_string_escape@@Base+0x24d>
  425a67:	mov    BYTE PTR [rcx],0x3
  425a6a:	mov    eax,edx
  425a6c:	shr    eax,0xc
  425a6f:	or     al,0xe0
  425a71:	mov    BYTE PTR [rcx+0x1],al
  425a74:	mov    eax,edx
  425a76:	shr    eax,0x6
  425a79:	and    al,0x3f
  425a7b:	or     al,0x80
  425a7d:	mov    BYTE PTR [rcx+0x2],al
  425a80:	and    dl,0x3f
  425a83:	or     dl,0x80
  425a86:	mov    edi,0x3
  425a8b:	mov    eax,edx
  425a8d:	mov    BYTE PTR [rcx+rdi*1],al
  425a90:	add    rsi,0x6
  425a94:	mov    rdx,rsi
  425a97:	jmp    4258fe <flatcc_json_parser_string_escape@@Base+0xbe>
  425a9c:	nop    DWORD PTR [rax+0x0]

0000000000425aa0 <flatcc_json_parser_skip_constant@@Base>:
  425aa0:	push   r15
  425aa2:	push   r14
  425aa4:	push   rbx
  425aa5:	mov    rbx,rsi
  425aa8:	cmp    rsi,rdx
  425aab:	je     425b31 <flatcc_json_parser_skip_constant@@Base+0x91>
  425ab1:	mov    r14,rdx
  425ab4:	mov    r15,rdi
  425ab7:	nop    WORD PTR [rax+rax*1+0x0]
  425ac0:	movzx  eax,BYTE PTR [rbx]
  425ac3:	test   al,al
  425ac5:	js     425af0 <flatcc_json_parser_skip_constant@@Base+0x50>
  425ac7:	cmp    al,0x5f
  425ac9:	je     425af0 <flatcc_json_parser_skip_constant@@Base+0x50>
  425acb:	cmp    al,0x2e
  425acd:	je     425af0 <flatcc_json_parser_skip_constant@@Base+0x50>
  425acf:	mov    ecx,eax
  425ad1:	add    cl,0xd0
  425ad4:	cmp    cl,0x9
  425ad7:	jbe    425af0 <flatcc_json_parser_skip_constant@@Base+0x50>
  425ad9:	mov    ecx,eax
  425adb:	or     cl,0x20
  425ade:	add    cl,0x9f
  425ae1:	cmp    cl,0x19
  425ae4:	ja     425b01 <flatcc_json_parser_skip_constant@@Base+0x61>
  425ae6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425af0:	add    rbx,0x1
  425af4:	mov    rax,rbx
  425af7:	mov    rbx,rax
  425afa:	cmp    rax,r14
  425afd:	jne    425ac0 <flatcc_json_parser_skip_constant@@Base+0x20>
  425aff:	jmp    425b2e <flatcc_json_parser_skip_constant@@Base+0x8e>
  425b01:	mov    rcx,r14
  425b04:	sub    rcx,rbx
  425b07:	cmp    rcx,0x2
  425b0b:	jl     425b19 <flatcc_json_parser_skip_constant@@Base+0x79>
  425b0d:	cmp    al,0x20
  425b0f:	jg     425b31 <flatcc_json_parser_skip_constant@@Base+0x91>
  425b11:	jne    425b19 <flatcc_json_parser_skip_constant@@Base+0x79>
  425b13:	cmp    BYTE PTR [rbx+0x1],0x20
  425b17:	jg     425af0 <flatcc_json_parser_skip_constant@@Base+0x50>
  425b19:	mov    rdi,r15
  425b1c:	mov    rsi,rbx
  425b1f:	mov    rdx,r14
  425b22:	call   425750 <flatcc_json_parser_space_ext@@Base>
  425b27:	cmp    rax,rbx
  425b2a:	jne    425af7 <flatcc_json_parser_skip_constant@@Base+0x57>
  425b2c:	jmp    425b31 <flatcc_json_parser_skip_constant@@Base+0x91>
  425b2e:	mov    rbx,r14
  425b31:	mov    rax,rbx
  425b34:	pop    rbx
  425b35:	pop    r14
  425b37:	pop    r15
  425b39:	ret    
  425b3a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000425b40 <flatcc_json_parser_match_constant@@Base>:
  425b40:	push   r15
  425b42:	push   r14
  425b44:	push   r12
  425b46:	push   rbx
  425b47:	push   rax
  425b48:	mov    r14,r8
  425b4b:	mov    r15,rsi
  425b4e:	movsxd rbx,ecx
  425b51:	mov    rax,rdx
  425b54:	sub    rax,rsi
  425b57:	cmp    rax,rbx
  425b5a:	jle    425c45 <flatcc_json_parser_match_constant@@Base+0x105>
  425b60:	mov    r12,rdx
  425b63:	add    rbx,r15
  425b66:	cmp    DWORD PTR [rdi+0x14],0x0
  425b6a:	je     425bca <flatcc_json_parser_match_constant@@Base+0x8a>
  425b6c:	mov    rax,r12
  425b6f:	sub    rax,rbx
  425b72:	cmp    rax,0x2
  425b76:	jl     425b93 <flatcc_json_parser_match_constant@@Base+0x53>
  425b78:	cmp    BYTE PTR [rbx],0x20
  425b7b:	mov    rax,rbx
  425b7e:	jg     425b9e <flatcc_json_parser_match_constant@@Base+0x5e>
  425b80:	jne    425b93 <flatcc_json_parser_match_constant@@Base+0x53>
  425b82:	cmp    BYTE PTR [rbx+0x1],0x20
  425b86:	jle    425b93 <flatcc_json_parser_match_constant@@Base+0x53>
  425b88:	lea    rax,[rbx+0x1]
  425b8c:	cmp    rax,r12
  425b8f:	jne    425ba3 <flatcc_json_parser_match_constant@@Base+0x63>
  425b91:	jmp    425c03 <flatcc_json_parser_match_constant@@Base+0xc3>
  425b93:	mov    rsi,rbx
  425b96:	mov    rdx,r12
  425b99:	call   425750 <flatcc_json_parser_space_ext@@Base>
  425b9e:	cmp    rax,r12
  425ba1:	je     425c03 <flatcc_json_parser_match_constant@@Base+0xc3>
  425ba3:	cmp    rax,rbx
  425ba6:	je     425c0f <flatcc_json_parser_match_constant@@Base+0xcf>
  425ba8:	mov    cl,BYTE PTR [rax]
  425baa:	cmp    cl,0x5f
  425bad:	je     425bbe <flatcc_json_parser_match_constant@@Base+0x7e>
  425baf:	test   cl,cl
  425bb1:	js     425bbe <flatcc_json_parser_match_constant@@Base+0x7e>
  425bb3:	or     cl,0x20
  425bb6:	add    cl,0x9f
  425bb9:	cmp    cl,0x19
  425bbc:	ja     425c0f <flatcc_json_parser_match_constant@@Base+0xcf>
  425bbe:	mov    DWORD PTR [r14],0x1
  425bc5:	jmp    425c4f <flatcc_json_parser_match_constant@@Base+0x10f>
  425bca:	movsx  eax,BYTE PTR [rbx]
  425bcd:	cmp    eax,0x20
  425bd0:	jne    425c29 <flatcc_json_parser_match_constant@@Base+0xe9>
  425bd2:	lea    rax,[r12-0x1]
  425bd7:	nop    WORD PTR [rax+rax*1+0x0]
  425be0:	cmp    rax,rbx
  425be3:	je     425c03 <flatcc_json_parser_match_constant@@Base+0xc3>
  425be5:	movzx  ecx,BYTE PTR [rbx+0x1]
  425be9:	add    rbx,0x1
  425bed:	cmp    cl,0x20
  425bf0:	je     425be0 <flatcc_json_parser_match_constant@@Base+0xa0>
  425bf2:	cmp    cl,0x22
  425bf5:	je     425c5b <flatcc_json_parser_match_constant@@Base+0x11b>
  425bf7:	mov    DWORD PTR [r14],0x1
  425bfe:	mov    rax,rbx
  425c01:	jmp    425c4f <flatcc_json_parser_match_constant@@Base+0x10f>
  425c03:	mov    DWORD PTR [r14],0x0
  425c0a:	mov    rax,r12
  425c0d:	jmp    425c4f <flatcc_json_parser_match_constant@@Base+0x10f>
  425c0f:	mov    DWORD PTR [r14],0x0
  425c16:	mov    cl,BYTE PTR [rax]
  425c18:	cmp    cl,0x2c
  425c1b:	je     425c4f <flatcc_json_parser_match_constant@@Base+0x10f>
  425c1d:	cmp    cl,0x5d
  425c20:	je     425c4f <flatcc_json_parser_match_constant@@Base+0x10f>
  425c22:	cmp    cl,0x7d
  425c25:	jne    425c4c <flatcc_json_parser_match_constant@@Base+0x10c>
  425c27:	jmp    425c4f <flatcc_json_parser_match_constant@@Base+0x10f>
  425c29:	cmp    eax,0x22
  425c2c:	je     425c5b <flatcc_json_parser_match_constant@@Base+0x11b>
  425c2e:	cmp    eax,0x5c
  425c31:	jne    425c45 <flatcc_json_parser_match_constant@@Base+0x105>
  425c33:	mov    DWORD PTR [r14],0x0
  425c3a:	cmp    DWORD PTR [rdi+0x20],0x0
  425c3e:	je     425c9b <flatcc_json_parser_match_constant@@Base+0x15b>
  425c40:	mov    rax,r12
  425c43:	jmp    425c4f <flatcc_json_parser_match_constant@@Base+0x10f>
  425c45:	mov    DWORD PTR [r14],0x0
  425c4c:	mov    rax,r15
  425c4f:	add    rsp,0x8
  425c53:	pop    rbx
  425c54:	pop    r12
  425c56:	pop    r14
  425c58:	pop    r15
  425c5a:	ret    
  425c5b:	lea    rax,[rbx+0x1]
  425c5f:	mov    rcx,rbx
  425c62:	not    rcx
  425c65:	cmp    rcx,0x2
  425c69:	jl     425c88 <flatcc_json_parser_match_constant@@Base+0x148>
  425c6b:	cmp    BYTE PTR [rax],0x20
  425c6e:	jg     425c92 <flatcc_json_parser_match_constant@@Base+0x152>
  425c70:	jne    425c88 <flatcc_json_parser_match_constant@@Base+0x148>
  425c72:	cmp    BYTE PTR [rbx+0x2],0x20
  425c76:	jle    425c88 <flatcc_json_parser_match_constant@@Base+0x148>
  425c78:	add    rbx,0x2
  425c7c:	mov    rax,rbx
  425c7f:	mov    DWORD PTR [r14],0x0
  425c86:	jmp    425c4f <flatcc_json_parser_match_constant@@Base+0x10f>
  425c88:	xor    edx,edx
  425c8a:	mov    rsi,rax
  425c8d:	call   425750 <flatcc_json_parser_space_ext@@Base>
  425c92:	mov    DWORD PTR [r14],0x0
  425c99:	jmp    425c4f <flatcc_json_parser_match_constant@@Base+0x10f>
  425c9b:	mov    DWORD PTR [rdi+0x20],0x12
  425ca2:	mov    eax,DWORD PTR [rdi+0x8]
  425ca5:	mov    ecx,ebx
  425ca7:	sub    ecx,eax
  425ca9:	add    ecx,0x1
  425cac:	mov    DWORD PTR [rdi+0x1c],ecx
  425caf:	mov    QWORD PTR [rdi+0x38],rbx
  425cb3:	mov    rax,r12
  425cb6:	jmp    425c4f <flatcc_json_parser_match_constant@@Base+0x10f>
  425cb8:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000425cc0 <flatcc_json_parser_unmatched_symbol@@Base>:
  425cc0:	push   r14
  425cc2:	push   rbx
  425cc3:	push   rax
  425cc4:	mov    rbx,rdx
  425cc7:	mov    r14,rdi
  425cca:	test   BYTE PTR [rdi+0x10],0x1
  425cce:	jne    425cfb <flatcc_json_parser_unmatched_symbol@@Base+0x3b>
  425cd0:	cmp    DWORD PTR [r14+0x20],0x0
  425cd5:	jne    425e6b <flatcc_json_parser_unmatched_symbol@@Base+0x1ab>
  425cdb:	mov    DWORD PTR [r14+0x20],0xd
  425ce3:	mov    eax,DWORD PTR [r14+0x8]
  425ce7:	mov    ecx,esi
  425ce9:	sub    ecx,eax
  425ceb:	add    ecx,0x1
  425cee:	mov    DWORD PTR [r14+0x1c],ecx
  425cf2:	mov    QWORD PTR [r14+0x38],rsi
  425cf6:	jmp    425e6b <flatcc_json_parser_unmatched_symbol@@Base+0x1ab>
  425cfb:	cmp    DWORD PTR [r14+0x14],0x0
  425d00:	je     425d68 <flatcc_json_parser_unmatched_symbol@@Base+0xa8>
  425d02:	cmp    rsi,rbx
  425d05:	je     425de7 <flatcc_json_parser_unmatched_symbol@@Base+0x127>
  425d0b:	mov    dl,BYTE PTR [rsi]
  425d0d:	cmp    dl,0x21
  425d10:	jl     425de7 <flatcc_json_parser_unmatched_symbol@@Base+0x127>
  425d16:	lea    rcx,[rbx-0x1]
  425d1a:	nop    WORD PTR [rax+rax*1+0x0]
  425d20:	mov    eax,edx
  425d22:	cmp    dl,0x2e
  425d25:	je     425d50 <flatcc_json_parser_unmatched_symbol@@Base+0x90>
  425d27:	cmp    al,0x5f
  425d29:	je     425d50 <flatcc_json_parser_unmatched_symbol@@Base+0x90>
  425d2b:	mov    edx,eax
  425d2d:	add    dl,0xd0
  425d30:	cmp    dl,0x9
  425d33:	jbe    425d50 <flatcc_json_parser_unmatched_symbol@@Base+0x90>
  425d35:	mov    edx,eax
  425d37:	or     dl,0x20
  425d3a:	add    dl,0x9f
  425d3d:	cmp    dl,0x1a
  425d40:	jae    425d62 <flatcc_json_parser_unmatched_symbol@@Base+0xa2>
  425d42:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425d4c:	nop    DWORD PTR [rax+0x0]
  425d50:	cmp    rcx,rsi
  425d53:	je     425db6 <flatcc_json_parser_unmatched_symbol@@Base+0xf6>
  425d55:	movzx  edx,BYTE PTR [rsi+0x1]
  425d59:	add    rsi,0x1
  425d5d:	cmp    dl,0x21
  425d60:	jge    425d20 <flatcc_json_parser_unmatched_symbol@@Base+0x60>
  425d62:	cmp    al,0x2e
  425d64:	je     425dbd <flatcc_json_parser_unmatched_symbol@@Base+0xfd>
  425d66:	jmp    425de7 <flatcc_json_parser_unmatched_symbol@@Base+0x127>
  425d68:	cmp    rsi,rbx
  425d6b:	je     425d9c <flatcc_json_parser_unmatched_symbol@@Base+0xdc>
  425d6d:	nop    DWORD PTR [rax]
  425d70:	movzx  eax,BYTE PTR [rsi]
  425d73:	cmp    al,0x5c
  425d75:	je     425d80 <flatcc_json_parser_unmatched_symbol@@Base+0xc0>
  425d77:	cmp    al,0x22
  425d79:	jne    425d90 <flatcc_json_parser_unmatched_symbol@@Base+0xd0>
  425d7b:	jmp    425db0 <flatcc_json_parser_unmatched_symbol@@Base+0xf0>
  425d7d:	nop    DWORD PTR [rax]
  425d80:	mov    rax,rbx
  425d83:	sub    rax,rsi
  425d86:	cmp    rax,0x2
  425d8a:	jl     425d9c <flatcc_json_parser_unmatched_symbol@@Base+0xdc>
  425d8c:	add    rsi,0x1
  425d90:	add    rsi,0x1
  425d94:	cmp    rsi,rbx
  425d97:	jne    425d70 <flatcc_json_parser_unmatched_symbol@@Base+0xb0>
  425d99:	mov    rsi,rbx
  425d9c:	cmp    DWORD PTR [r14+0x20],0x0
  425da1:	mov    rax,rbx
  425da4:	jne    425dea <flatcc_json_parser_unmatched_symbol@@Base+0x12a>
  425da6:	mov    DWORD PTR [r14+0x20],0x14
  425dae:	jmp    425dcf <flatcc_json_parser_unmatched_symbol@@Base+0x10f>
  425db0:	add    rsi,0x1
  425db4:	jmp    425de7 <flatcc_json_parser_unmatched_symbol@@Base+0x127>
  425db6:	mov    rsi,rbx
  425db9:	cmp    al,0x2e
  425dbb:	jne    425de7 <flatcc_json_parser_unmatched_symbol@@Base+0x127>
  425dbd:	cmp    DWORD PTR [r14+0x20],0x0
  425dc2:	mov    rax,rbx
  425dc5:	jne    425dea <flatcc_json_parser_unmatched_symbol@@Base+0x12a>
  425dc7:	mov    DWORD PTR [r14+0x20],0x5
  425dcf:	mov    eax,DWORD PTR [r14+0x8]
  425dd3:	mov    ecx,esi
  425dd5:	sub    ecx,eax
  425dd7:	add    ecx,0x1
  425dda:	mov    DWORD PTR [r14+0x1c],ecx
  425dde:	mov    QWORD PTR [r14+0x38],rsi
  425de2:	mov    rax,rbx
  425de5:	jmp    425dea <flatcc_json_parser_unmatched_symbol@@Base+0x12a>
  425de7:	mov    rax,rsi
  425dea:	mov    rcx,rbx
  425ded:	sub    rcx,rax
  425df0:	cmp    rcx,0x2
  425df4:	jl     425e0e <flatcc_json_parser_unmatched_symbol@@Base+0x14e>
  425df6:	cmp    BYTE PTR [rax],0x20
  425df9:	jg     425e1c <flatcc_json_parser_unmatched_symbol@@Base+0x15c>
  425dfb:	jne    425e0e <flatcc_json_parser_unmatched_symbol@@Base+0x14e>
  425dfd:	cmp    BYTE PTR [rax+0x1],0x20
  425e01:	jle    425e0e <flatcc_json_parser_unmatched_symbol@@Base+0x14e>
  425e03:	add    rax,0x1
  425e07:	cmp    rax,rbx
  425e0a:	jne    425e21 <flatcc_json_parser_unmatched_symbol@@Base+0x161>
  425e0c:	jmp    425e49 <flatcc_json_parser_unmatched_symbol@@Base+0x189>
  425e0e:	mov    rdi,r14
  425e11:	mov    rsi,rax
  425e14:	mov    rdx,rbx
  425e17:	call   425750 <flatcc_json_parser_space_ext@@Base>
  425e1c:	cmp    rax,rbx
  425e1f:	je     425e49 <flatcc_json_parser_unmatched_symbol@@Base+0x189>
  425e21:	cmp    BYTE PTR [rax],0x3a
  425e24:	jne    425e49 <flatcc_json_parser_unmatched_symbol@@Base+0x189>
  425e26:	lea    rsi,[rax+0x1]
  425e2a:	mov    rcx,rbx
  425e2d:	sub    rcx,rsi
  425e30:	cmp    rcx,0x2
  425e34:	jl     425e76 <flatcc_json_parser_unmatched_symbol@@Base+0x1b6>
  425e36:	cmp    BYTE PTR [rsi],0x20
  425e39:	jg     425e84 <flatcc_json_parser_unmatched_symbol@@Base+0x1c4>
  425e3b:	jne    425e76 <flatcc_json_parser_unmatched_symbol@@Base+0x1b6>
  425e3d:	cmp    BYTE PTR [rax+0x2],0x20
  425e41:	jle    425e76 <flatcc_json_parser_unmatched_symbol@@Base+0x1b6>
  425e43:	add    rax,0x2
  425e47:	jmp    425e81 <flatcc_json_parser_unmatched_symbol@@Base+0x1c1>
  425e49:	cmp    DWORD PTR [r14+0x20],0x0
  425e4e:	jne    425e6b <flatcc_json_parser_unmatched_symbol@@Base+0x1ab>
  425e50:	mov    DWORD PTR [r14+0x20],0x4
  425e58:	mov    ecx,DWORD PTR [r14+0x8]
  425e5c:	mov    edx,eax
  425e5e:	sub    edx,ecx
  425e60:	add    edx,0x1
  425e63:	mov    DWORD PTR [r14+0x1c],edx
  425e67:	mov    QWORD PTR [r14+0x38],rax
  425e6b:	mov    rax,rbx
  425e6e:	add    rsp,0x8
  425e72:	pop    rbx
  425e73:	pop    r14
  425e75:	ret    
  425e76:	mov    rdi,r14
  425e79:	mov    rdx,rbx
  425e7c:	call   425750 <flatcc_json_parser_space_ext@@Base>
  425e81:	mov    rsi,rax
  425e84:	mov    rdi,r14
  425e87:	mov    rdx,rbx
  425e8a:	add    rsp,0x8
  425e8e:	pop    rbx
  425e8f:	pop    r14
  425e91:	jmp    425ea0 <flatcc_json_parser_generic_json@@Base>
  425e96:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000425ea0 <flatcc_json_parser_generic_json@@Base>:
  425ea0:	push   rbp
  425ea1:	push   r15
  425ea3:	push   r14
  425ea5:	push   r13
  425ea7:	push   r12
  425ea9:	push   rbx
  425eaa:	sub    rsp,0x238
  425eb1:	mov    rbx,rsi
  425eb4:	cmp    rsi,rdx
  425eb7:	je     4269c8 <flatcc_json_parser_generic_json@@Base+0xb28>
  425ebd:	mov    r12,rdx
  425ec0:	mov    r14,rdi
  425ec3:	lea    rax,[rsp+0x30]
  425ec8:	lea    r15,[rdi+0x20]
  425ecc:	lea    rcx,[rdi+0x8]
  425ed0:	mov    QWORD PTR [rsp+0x8],rcx
  425ed5:	lea    rcx,[rdi+0x1c]
  425ed9:	mov    QWORD PTR [rsp+0x10],rcx
  425ede:	lea    rcx,[rdi+0x38]
  425ee2:	mov    QWORD PTR [rsp+0x18],rcx
  425ee7:	lea    rcx,[rdx-0x1]
  425eeb:	mov    QWORD PTR [rsp+0x20],rcx
  425ef0:	xor    ebp,ebp
  425ef2:	test   rbp,rbp
  425ef5:	je     426114 <flatcc_json_parser_generic_json@@Base+0x274>
  425efb:	cmp    BYTE PTR [rax-0x1],0x7d
  425eff:	jne    426114 <flatcc_json_parser_generic_json@@Base+0x274>
  425f05:	mov    al,BYTE PTR [rbx]
  425f07:	cmp    al,0x2e
  425f09:	je     425f65 <flatcc_json_parser_generic_json@@Base+0xc5>
  425f0b:	cmp    al,0x22
  425f0d:	jne    425fa5 <flatcc_json_parser_generic_json@@Base+0x105>
  425f13:	add    rbx,0x1
  425f17:	mov    DWORD PTR [r14+0x14],0x0
  425f1f:	mov    rcx,r12
  425f22:	cmp    rbx,r12
  425f25:	je     42605a <flatcc_json_parser_generic_json@@Base+0x1ba>
  425f2b:	nop    DWORD PTR [rax+rax*1+0x0]
  425f30:	movzx  eax,BYTE PTR [rbx]
  425f33:	cmp    al,0x5c
  425f35:	je     425f40 <flatcc_json_parser_generic_json@@Base+0xa0>
  425f37:	cmp    al,0x22
  425f39:	jne    425f54 <flatcc_json_parser_generic_json@@Base+0xb4>
  425f3b:	jmp    426016 <flatcc_json_parser_generic_json@@Base+0x176>
  425f40:	mov    rax,r12
  425f43:	sub    rax,rbx
  425f46:	cmp    rax,0x2
  425f4a:	jl     426057 <flatcc_json_parser_generic_json@@Base+0x1b7>
  425f50:	add    rbx,0x1
  425f54:	add    rbx,0x1
  425f58:	cmp    rbx,r12
  425f5b:	jne    425f30 <flatcc_json_parser_generic_json@@Base+0x90>
  425f5d:	mov    rcx,r12
  425f60:	jmp    42605a <flatcc_json_parser_generic_json@@Base+0x1ba>
  425f65:	cmp    DWORD PTR [r15],0x0
  425f69:	jne    425f8f <flatcc_json_parser_generic_json@@Base+0xef>
  425f6b:	mov    DWORD PTR [r15],0x5
  425f72:	mov    rax,QWORD PTR [rsp+0x8]
  425f77:	mov    eax,DWORD PTR [rax]
  425f79:	mov    ecx,ebx
  425f7b:	sub    ecx,eax
  425f7d:	add    ecx,0x1
  425f80:	mov    rax,QWORD PTR [rsp+0x10]
  425f85:	mov    DWORD PTR [rax],ecx
  425f87:	mov    rax,QWORD PTR [rsp+0x18]
  425f8c:	mov    QWORD PTR [rax],rbx
  425f8f:	cmp    DWORD PTR [r14+0x14],0x0
  425f94:	mov    rcx,r12
  425f97:	mov    rax,r12
  425f9a:	jne    426090 <flatcc_json_parser_generic_json@@Base+0x1f0>
  425fa0:	jmp    42605a <flatcc_json_parser_generic_json@@Base+0x1ba>
  425fa5:	mov    DWORD PTR [r14+0x14],0x1
  425fad:	mov    rax,r12
  425fb0:	cmp    rbx,r12
  425fb3:	je     426090 <flatcc_json_parser_generic_json@@Base+0x1f0>
  425fb9:	mov    cl,BYTE PTR [rbx]
  425fbb:	mov    rax,rbx
  425fbe:	cmp    cl,0x21
  425fc1:	jl     426090 <flatcc_json_parser_generic_json@@Base+0x1f0>
  425fc7:	nop    WORD PTR [rax+rax*1+0x0]
  425fd0:	mov    eax,ecx
  425fd2:	cmp    cl,0x2e
  425fd5:	je     426000 <flatcc_json_parser_generic_json@@Base+0x160>
  425fd7:	cmp    al,0x5f
  425fd9:	je     426000 <flatcc_json_parser_generic_json@@Base+0x160>
  425fdb:	mov    ecx,eax
  425fdd:	add    cl,0xd0
  425fe0:	cmp    cl,0x9
  425fe3:	jbe    426000 <flatcc_json_parser_generic_json@@Base+0x160>
  425fe5:	mov    ecx,eax
  425fe7:	or     cl,0x20
  425fea:	add    cl,0x9f
  425fed:	cmp    cl,0x1a
  425ff0:	jae    42601f <flatcc_json_parser_generic_json@@Base+0x17f>
  425ff2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425ffc:	nop    DWORD PTR [rax+0x0]
  426000:	cmp    QWORD PTR [rsp+0x20],rbx
  426005:	je     42601c <flatcc_json_parser_generic_json@@Base+0x17c>
  426007:	movzx  ecx,BYTE PTR [rbx+0x1]
  42600b:	add    rbx,0x1
  42600f:	cmp    cl,0x21
  426012:	jge    425fd0 <flatcc_json_parser_generic_json@@Base+0x130>
  426014:	jmp    42601f <flatcc_json_parser_generic_json@@Base+0x17f>
  426016:	add    rbx,0x1
  42601a:	jmp    426052 <flatcc_json_parser_generic_json@@Base+0x1b2>
  42601c:	mov    rbx,r12
  42601f:	cmp    al,0x2e
  426021:	jne    426052 <flatcc_json_parser_generic_json@@Base+0x1b2>
  426023:	cmp    DWORD PTR [r15],0x0
  426027:	mov    rax,r12
  42602a:	jne    426090 <flatcc_json_parser_generic_json@@Base+0x1f0>
  42602c:	mov    DWORD PTR [r15],0x5
  426033:	mov    rax,QWORD PTR [rsp+0x8]
  426038:	mov    eax,DWORD PTR [rax]
  42603a:	mov    ecx,ebx
  42603c:	sub    ecx,eax
  42603e:	add    ecx,0x1
  426041:	mov    rax,QWORD PTR [rsp+0x10]
  426046:	mov    DWORD PTR [rax],ecx
  426048:	mov    rax,QWORD PTR [rsp+0x18]
  42604d:	mov    QWORD PTR [rax],rbx
  426050:	jmp    426087 <flatcc_json_parser_generic_json@@Base+0x1e7>
  426052:	mov    rax,rbx
  426055:	jmp    426090 <flatcc_json_parser_generic_json@@Base+0x1f0>
  426057:	mov    rcx,rbx
  42605a:	cmp    DWORD PTR [r15],0x0
  42605e:	mov    rax,r12
  426061:	jne    426090 <flatcc_json_parser_generic_json@@Base+0x1f0>
  426063:	mov    DWORD PTR [r15],0x14
  42606a:	mov    rax,QWORD PTR [rsp+0x8]
  42606f:	mov    eax,DWORD PTR [rax]
  426071:	mov    edx,ecx
  426073:	sub    edx,eax
  426075:	add    edx,0x1
  426078:	mov    rax,QWORD PTR [rsp+0x10]
  42607d:	mov    DWORD PTR [rax],edx
  42607f:	mov    rax,QWORD PTR [rsp+0x18]
  426084:	mov    QWORD PTR [rax],rcx
  426087:	mov    rax,r12
  42608a:	nop    WORD PTR [rax+rax*1+0x0]
  426090:	mov    rcx,r12
  426093:	sub    rcx,rax
  426096:	cmp    rcx,0x2
  42609a:	jl     4260b7 <flatcc_json_parser_generic_json@@Base+0x217>
  42609c:	cmp    BYTE PTR [rax],0x20
  42609f:	jg     4260c5 <flatcc_json_parser_generic_json@@Base+0x225>
  4260a1:	jne    4260b7 <flatcc_json_parser_generic_json@@Base+0x217>
  4260a3:	cmp    BYTE PTR [rax+0x1],0x20
  4260a7:	jle    4260b7 <flatcc_json_parser_generic_json@@Base+0x217>
  4260a9:	add    rax,0x1
  4260ad:	cmp    rax,r12
  4260b0:	jne    4260ce <flatcc_json_parser_generic_json@@Base+0x22e>
  4260b2:	jmp    4269dd <flatcc_json_parser_generic_json@@Base+0xb3d>
  4260b7:	mov    rdi,r14
  4260ba:	mov    rsi,rax
  4260bd:	mov    rdx,r12
  4260c0:	call   425750 <flatcc_json_parser_space_ext@@Base>
  4260c5:	cmp    rax,r12
  4260c8:	je     4269dd <flatcc_json_parser_generic_json@@Base+0xb3d>
  4260ce:	cmp    BYTE PTR [rax],0x3a
  4260d1:	jne    4269ec <flatcc_json_parser_generic_json@@Base+0xb4c>
  4260d7:	lea    r13,[rax+0x1]
  4260db:	mov    rcx,r12
  4260de:	sub    rcx,r13
  4260e1:	cmp    rcx,0x2
  4260e5:	jl     426103 <flatcc_json_parser_generic_json@@Base+0x263>
  4260e7:	mov    cl,BYTE PTR [r13+0x0]
  4260eb:	cmp    cl,0x20
  4260ee:	jg     426119 <flatcc_json_parser_generic_json@@Base+0x279>
  4260f0:	jne    426103 <flatcc_json_parser_generic_json@@Base+0x263>
  4260f2:	mov    cl,BYTE PTR [rax+0x2]
  4260f5:	cmp    cl,0x20
  4260f8:	jle    426103 <flatcc_json_parser_generic_json@@Base+0x263>
  4260fa:	add    rax,0x2
  4260fe:	mov    r13,rax
  426101:	jmp    426119 <flatcc_json_parser_generic_json@@Base+0x279>
  426103:	mov    rdi,r14
  426106:	mov    rsi,r13
  426109:	mov    rdx,r12
  42610c:	call   425750 <flatcc_json_parser_space_ext@@Base>
  426111:	mov    rbx,rax
  426114:	mov    cl,BYTE PTR [rbx]
  426116:	mov    r13,rbx
  426119:	movsx  eax,cl
  42611c:	lea    edx,[rax-0x30]
  42611f:	cmp    edx,0xa
  426122:	jae    426190 <flatcc_json_parser_generic_json@@Base+0x2f0>
  426124:	cmp    r13,r12
  426127:	je     4266a0 <flatcc_json_parser_generic_json@@Base+0x800>
  42612d:	cmp    cl,0x2d
  426130:	jne    426143 <flatcc_json_parser_generic_json@@Base+0x2a3>
  426132:	add    r13,0x1
  426136:	cmp    r13,r12
  426139:	je     42657d <flatcc_json_parser_generic_json@@Base+0x6dd>
  42613f:	mov    cl,BYTE PTR [r13+0x0]
  426143:	cmp    cl,0x30
  426146:	jne    4261a8 <flatcc_json_parser_generic_json@@Base+0x308>
  426148:	add    r13,0x1
  42614c:	mov    rcx,r12
  42614f:	cmp    r13,r12
  426152:	je     426670 <flatcc_json_parser_generic_json@@Base+0x7d0>
  426158:	mov    al,BYTE PTR [r13+0x0]
  42615c:	cmp    al,0x2e
  42615e:	jne    4264ea <flatcc_json_parser_generic_json@@Base+0x64a>
  426164:	mov    al,BYTE PTR [r13+0x1]
  426168:	add    al,0xd0
  42616a:	cmp    al,0xa
  42616c:	jb     4264ae <flatcc_json_parser_generic_json@@Base+0x60e>
  426172:	cmp    DWORD PTR [r15],0x0
  426176:	jne    4266a0 <flatcc_json_parser_generic_json@@Base+0x800>
  42617c:	add    r13,0x1
  426180:	jmp    4261be <flatcc_json_parser_generic_json@@Base+0x31e>
  426182:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42618c:	nop    DWORD PTR [rax+0x0]
  426190:	cmp    eax,0x5a
  426193:	jg     4261e8 <flatcc_json_parser_generic_json@@Base+0x348>
  426195:	cmp    eax,0x22
  426198:	je     42627d <flatcc_json_parser_generic_json@@Base+0x3dd>
  42619e:	cmp    eax,0x2d
  4261a1:	je     426124 <flatcc_json_parser_generic_json@@Base+0x284>
  4261a3:	jmp    4263c5 <flatcc_json_parser_generic_json@@Base+0x525>
  4261a8:	add    cl,0xcf
  4261ab:	cmp    cl,0x8
  4261ae:	jbe    42624f <flatcc_json_parser_generic_json@@Base+0x3af>
  4261b4:	cmp    DWORD PTR [r15],0x0
  4261b8:	jne    4266a0 <flatcc_json_parser_generic_json@@Base+0x800>
  4261be:	mov    DWORD PTR [r15],0x6
  4261c5:	mov    rax,QWORD PTR [rsp+0x8]
  4261ca:	mov    eax,DWORD PTR [rax]
  4261cc:	mov    ecx,r13d
  4261cf:	sub    ecx,eax
  4261d1:	add    ecx,0x1
  4261d4:	mov    rax,QWORD PTR [rsp+0x10]
  4261d9:	mov    DWORD PTR [rax],ecx
  4261db:	mov    rax,QWORD PTR [rsp+0x18]
  4261e0:	mov    QWORD PTR [rax],r13
  4261e3:	jmp    4266a0 <flatcc_json_parser_generic_json@@Base+0x800>
  4261e8:	cmp    eax,0x5b
  4261eb:	je     426370 <flatcc_json_parser_generic_json@@Base+0x4d0>
  4261f1:	cmp    eax,0x7b
  4261f4:	jne    4263c5 <flatcc_json_parser_generic_json@@Base+0x525>
  4261fa:	cmp    rbp,0x200
  426201:	je     426a18 <flatcc_json_parser_generic_json@@Base+0xb78>
  426207:	mov    BYTE PTR [rsp+rbp*1+0x30],0x7d
  42620c:	lea    rbx,[r13+0x1]
  426210:	mov    rax,r12
  426213:	sub    rax,rbx
  426216:	cmp    rax,0x2
  42621a:	jl     426456 <flatcc_json_parser_generic_json@@Base+0x5b6>
  426220:	cmp    BYTE PTR [rbx],0x20
  426223:	jg     426467 <flatcc_json_parser_generic_json@@Base+0x5c7>
  426229:	jne    426456 <flatcc_json_parser_generic_json@@Base+0x5b6>
  42622f:	cmp    BYTE PTR [r13+0x2],0x20
  426234:	jle    426456 <flatcc_json_parser_generic_json@@Base+0x5b6>
  42623a:	add    r13,0x2
  42623e:	mov    rbx,r13
  426241:	cmp    rbx,r12
  426244:	jne    426470 <flatcc_json_parser_generic_json@@Base+0x5d0>
  42624a:	jmp    4269c5 <flatcc_json_parser_generic_json@@Base+0xb25>
  42624f:	mov    rcx,QWORD PTR [rsp+0x20]
  426254:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42625e:	xchg   ax,ax
  426260:	cmp    rcx,r13
  426263:	je     4264d8 <flatcc_json_parser_generic_json@@Base+0x638>
  426269:	movzx  eax,BYTE PTR [r13+0x1]
  42626e:	add    r13,0x1
  426272:	add    al,0xd0
  426274:	cmp    al,0xa
  426276:	jb     426260 <flatcc_json_parser_generic_json@@Base+0x3c0>
  426278:	jmp    42614c <flatcc_json_parser_generic_json@@Base+0x2ac>
  42627d:	cmp    cl,0x22
  426280:	jne    4265b1 <flatcc_json_parser_generic_json@@Base+0x711>
  426286:	cmp    r13,r12
  426289:	je     4265b1 <flatcc_json_parser_generic_json@@Base+0x711>
  42628f:	add    r13,0x1
  426293:	mov    rax,r12
  426296:	cmp    r13,r12
  426299:	je     426641 <flatcc_json_parser_generic_json@@Base+0x7a1>
  42629f:	nop
  4262a0:	mov    al,BYTE PTR [r13+0x0]
  4262a4:	cmp    al,0x22
  4262a6:	je     426629 <flatcc_json_parser_generic_json@@Base+0x789>
  4262ac:	cmp    al,0x20
  4262ae:	mov    rcx,QWORD PTR [rsp+0x20]
  4262b3:	jb     4262da <flatcc_json_parser_generic_json@@Base+0x43a>
  4262b5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4262bf:	nop
  4262c0:	cmp    al,0x22
  4262c2:	je     42630a <flatcc_json_parser_generic_json@@Base+0x46a>
  4262c4:	cmp    al,0x5c
  4262c6:	je     42630a <flatcc_json_parser_generic_json@@Base+0x46a>
  4262c8:	cmp    rcx,r13
  4262cb:	je     42631e <flatcc_json_parser_generic_json@@Base+0x47e>
  4262cd:	movzx  eax,BYTE PTR [r13+0x1]
  4262d2:	add    r13,0x1
  4262d6:	cmp    al,0x20
  4262d8:	jae    4262c0 <flatcc_json_parser_generic_json@@Base+0x420>
  4262da:	cmp    DWORD PTR [r15],0x0
  4262de:	mov    rsi,r12
  4262e1:	jne    42634f <flatcc_json_parser_generic_json@@Base+0x4af>
  4262e3:	mov    DWORD PTR [r15],0x11
  4262ea:	mov    rax,QWORD PTR [rsp+0x8]
  4262ef:	mov    eax,DWORD PTR [rax]
  4262f1:	mov    ecx,r13d
  4262f4:	sub    ecx,eax
  4262f6:	add    ecx,0x1
  4262f9:	mov    rax,QWORD PTR [rsp+0x10]
  4262fe:	mov    DWORD PTR [rax],ecx
  426300:	mov    rax,QWORD PTR [rsp+0x18]
  426305:	mov    QWORD PTR [rax],r13
  426308:	jmp    42634c <flatcc_json_parser_generic_json@@Base+0x4ac>
  42630a:	mov    rsi,r12
  42630d:	cmp    r12,r13
  426310:	je     42634f <flatcc_json_parser_generic_json@@Base+0x4af>
  426312:	mov    rsi,r13
  426315:	cmp    al,0x22
  426317:	jne    42634f <flatcc_json_parser_generic_json@@Base+0x4af>
  426319:	jmp    426629 <flatcc_json_parser_generic_json@@Base+0x789>
  42631e:	cmp    DWORD PTR [r15],0x0
  426322:	mov    rsi,r12
  426325:	jne    42634f <flatcc_json_parser_generic_json@@Base+0x4af>
  426327:	mov    DWORD PTR [r15],0x14
  42632e:	mov    rax,QWORD PTR [rsp+0x8]
  426333:	mov    eax,DWORD PTR [rax]
  426335:	mov    ecx,r12d
  426338:	sub    ecx,eax
  42633a:	add    ecx,0x1
  42633d:	mov    rax,QWORD PTR [rsp+0x10]
  426342:	mov    DWORD PTR [rax],ecx
  426344:	mov    rax,QWORD PTR [rsp+0x18]
  426349:	mov    QWORD PTR [rax],r12
  42634c:	mov    rsi,r12
  42634f:	mov    rdi,r14
  426352:	mov    rdx,r12
  426355:	lea    rcx,[rsp+0x2c]
  42635a:	call   425840 <flatcc_json_parser_string_escape@@Base>
  42635f:	mov    r13,rax
  426362:	cmp    rax,r12
  426365:	jne    4262a0 <flatcc_json_parser_generic_json@@Base+0x400>
  42636b:	jmp    4265e0 <flatcc_json_parser_generic_json@@Base+0x740>
  426370:	cmp    rbp,0x200
  426377:	je     426a18 <flatcc_json_parser_generic_json@@Base+0xb78>
  42637d:	mov    BYTE PTR [rsp+rbp*1+0x30],0x5d
  426382:	lea    rbx,[r13+0x1]
  426386:	mov    rax,r12
  426389:	sub    rax,rbx
  42638c:	cmp    rax,0x2
  426390:	jl     426482 <flatcc_json_parser_generic_json@@Base+0x5e2>
  426396:	cmp    BYTE PTR [rbx],0x20
  426399:	jg     426493 <flatcc_json_parser_generic_json@@Base+0x5f3>
  42639f:	jne    426482 <flatcc_json_parser_generic_json@@Base+0x5e2>
  4263a5:	cmp    BYTE PTR [r13+0x2],0x20
  4263aa:	jle    426482 <flatcc_json_parser_generic_json@@Base+0x5e2>
  4263b0:	add    r13,0x2
  4263b4:	mov    rbx,r13
  4263b7:	cmp    rbx,r12
  4263ba:	jne    42649c <flatcc_json_parser_generic_json@@Base+0x5fc>
  4263c0:	jmp    4269c5 <flatcc_json_parser_generic_json@@Base+0xb25>
  4263c5:	mov    rbx,r12
  4263c8:	cmp    r13,r12
  4263cb:	je     426448 <flatcc_json_parser_generic_json@@Base+0x5a8>
  4263cd:	mov    rbx,r13
  4263d0:	test   cl,cl
  4263d2:	js     426439 <flatcc_json_parser_generic_json@@Base+0x599>
  4263d4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4263de:	xchg   ax,ax
  4263e0:	cmp    cl,0x5f
  4263e3:	je     426439 <flatcc_json_parser_generic_json@@Base+0x599>
  4263e5:	cmp    cl,0x2e
  4263e8:	je     426439 <flatcc_json_parser_generic_json@@Base+0x599>
  4263ea:	mov    eax,ecx
  4263ec:	add    al,0xd0
  4263ee:	cmp    al,0x9
  4263f0:	jbe    426439 <flatcc_json_parser_generic_json@@Base+0x599>
  4263f2:	mov    eax,ecx
  4263f4:	or     al,0x20
  4263f6:	add    al,0x9f
  4263f8:	cmp    al,0x19
  4263fa:	jbe    426439 <flatcc_json_parser_generic_json@@Base+0x599>
  4263fc:	mov    rax,r12
  4263ff:	sub    rax,rbx
  426402:	cmp    rax,0x2
  426406:	jl     426415 <flatcc_json_parser_generic_json@@Base+0x575>
  426408:	cmp    cl,0x20
  42640b:	jg     426448 <flatcc_json_parser_generic_json@@Base+0x5a8>
  42640d:	jne    426415 <flatcc_json_parser_generic_json@@Base+0x575>
  42640f:	cmp    BYTE PTR [rbx+0x1],0x20
  426413:	jg     426439 <flatcc_json_parser_generic_json@@Base+0x599>
  426415:	mov    rdi,r14
  426418:	mov    rsi,rbx
  42641b:	mov    rdx,r12
  42641e:	call   425750 <flatcc_json_parser_space_ext@@Base>
  426423:	cmp    rax,rbx
  426426:	jne    426440 <flatcc_json_parser_generic_json@@Base+0x5a0>
  426428:	jmp    426448 <flatcc_json_parser_generic_json@@Base+0x5a8>
  42642a:	nop    WORD PTR [rax+rax*1+0x0]
  426430:	mov    cl,BYTE PTR [rax]
  426432:	mov    rbx,rax
  426435:	test   cl,cl
  426437:	jns    4263e0 <flatcc_json_parser_generic_json@@Base+0x540>
  426439:	add    rbx,0x1
  42643d:	mov    rax,rbx
  426440:	cmp    rax,r12
  426443:	jne    426430 <flatcc_json_parser_generic_json@@Base+0x590>
  426445:	mov    rbx,r12
  426448:	cmp    r13,rbx
  42644b:	jne    4266a3 <flatcc_json_parser_generic_json@@Base+0x803>
  426451:	jmp    426a27 <flatcc_json_parser_generic_json@@Base+0xb87>
  426456:	mov    rdi,r14
  426459:	mov    rsi,rbx
  42645c:	mov    rdx,r12
  42645f:	call   425750 <flatcc_json_parser_space_ext@@Base>
  426464:	mov    rbx,rax
  426467:	cmp    rbx,r12
  42646a:	je     4269c5 <flatcc_json_parser_generic_json@@Base+0xb25>
  426470:	add    rbp,0x1
  426474:	cmp    BYTE PTR [rbx],0x7d
  426477:	je     4266a3 <flatcc_json_parser_generic_json@@Base+0x803>
  42647d:	jmp    426972 <flatcc_json_parser_generic_json@@Base+0xad2>
  426482:	mov    rdi,r14
  426485:	mov    rsi,rbx
  426488:	mov    rdx,r12
  42648b:	call   425750 <flatcc_json_parser_space_ext@@Base>
  426490:	mov    rbx,rax
  426493:	cmp    rbx,r12
  426496:	je     4269c5 <flatcc_json_parser_generic_json@@Base+0xb25>
  42649c:	add    rbp,0x1
  4264a0:	cmp    BYTE PTR [rbx],0x5d
  4264a3:	je     4266a3 <flatcc_json_parser_generic_json@@Base+0x803>
  4264a9:	jmp    426972 <flatcc_json_parser_generic_json@@Base+0xad2>
  4264ae:	add    r13,0x2
  4264b2:	mov    rcx,r12
  4264b5:	cmp    r13,r12
  4264b8:	je     426670 <flatcc_json_parser_generic_json@@Base+0x7d0>
  4264be:	xchg   ax,ax
  4264c0:	movzx  eax,BYTE PTR [r13+0x0]
  4264c5:	mov    ecx,eax
  4264c7:	add    cl,0xd0
  4264ca:	cmp    cl,0x9
  4264cd:	ja     4264ea <flatcc_json_parser_generic_json@@Base+0x64a>
  4264cf:	add    r13,0x1
  4264d3:	cmp    r12,r13
  4264d6:	jne    4264c0 <flatcc_json_parser_generic_json@@Base+0x620>
  4264d8:	mov    rcx,r12
  4264db:	cmp    DWORD PTR [r15],0x0
  4264df:	jne    4266a0 <flatcc_json_parser_generic_json@@Base+0x800>
  4264e5:	jmp    426676 <flatcc_json_parser_generic_json@@Base+0x7d6>
  4264ea:	mov    rcx,r12
  4264ed:	cmp    r13,r12
  4264f0:	je     426670 <flatcc_json_parser_generic_json@@Base+0x7d0>
  4264f6:	mov    ecx,eax
  4264f8:	or     cl,0x20
  4264fb:	cmp    cl,0x65
  4264fe:	jne    4265ef <flatcc_json_parser_generic_json@@Base+0x74f>
  426504:	lea    rbx,[r13+0x1]
  426508:	cmp    rbx,r12
  42650b:	je     42657d <flatcc_json_parser_generic_json@@Base+0x6dd>
  42650d:	mov    al,BYTE PTR [rbx]
  42650f:	cmp    al,0x2d
  426511:	je     426517 <flatcc_json_parser_generic_json@@Base+0x677>
  426513:	cmp    al,0x2b
  426515:	jne    42651e <flatcc_json_parser_generic_json@@Base+0x67e>
  426517:	add    r13,0x2
  42651b:	mov    rbx,r13
  42651e:	cmp    rbx,r12
  426521:	je     42652b <flatcc_json_parser_generic_json@@Base+0x68b>
  426523:	mov    al,BYTE PTR [rbx]
  426525:	add    al,0xd0
  426527:	cmp    al,0x9
  426529:	jbe    42655e <flatcc_json_parser_generic_json@@Base+0x6be>
  42652b:	cmp    DWORD PTR [r15],0x0
  42652f:	jne    4266a0 <flatcc_json_parser_generic_json@@Base+0x800>
  426535:	mov    DWORD PTR [r15],0x6
  42653c:	mov    rax,QWORD PTR [rsp+0x8]
  426541:	mov    eax,DWORD PTR [rax]
  426543:	mov    ecx,ebx
  426545:	sub    ecx,eax
  426547:	add    ecx,0x1
  42654a:	mov    rax,QWORD PTR [rsp+0x10]
  42654f:	mov    DWORD PTR [rax],ecx
  426551:	mov    rax,QWORD PTR [rsp+0x18]
  426556:	mov    QWORD PTR [rax],rbx
  426559:	jmp    4266a0 <flatcc_json_parser_generic_json@@Base+0x800>
  42655e:	cmp    QWORD PTR [rsp+0x20],rbx
  426563:	je     42666d <flatcc_json_parser_generic_json@@Base+0x7cd>
  426569:	movzx  eax,BYTE PTR [rbx+0x1]
  42656d:	add    rbx,0x1
  426571:	mov    ecx,eax
  426573:	add    cl,0xd0
  426576:	cmp    cl,0xa
  426579:	jb     42655e <flatcc_json_parser_generic_json@@Base+0x6be>
  42657b:	jmp    4265f2 <flatcc_json_parser_generic_json@@Base+0x752>
  42657d:	cmp    DWORD PTR [r15],0x0
  426581:	jne    4266a0 <flatcc_json_parser_generic_json@@Base+0x800>
  426587:	mov    DWORD PTR [r15],0x6
  42658e:	mov    rax,QWORD PTR [rsp+0x8]
  426593:	mov    eax,DWORD PTR [rax]
  426595:	mov    ecx,r12d
  426598:	sub    ecx,eax
  42659a:	add    ecx,0x1
  42659d:	mov    rax,QWORD PTR [rsp+0x10]
  4265a2:	mov    DWORD PTR [rax],ecx
  4265a4:	mov    rax,QWORD PTR [rsp+0x18]
  4265a9:	mov    QWORD PTR [rax],r12
  4265ac:	jmp    4266a0 <flatcc_json_parser_generic_json@@Base+0x800>
  4265b1:	cmp    DWORD PTR [r15],0x0
  4265b5:	jne    4266a0 <flatcc_json_parser_generic_json@@Base+0x800>
  4265bb:	mov    DWORD PTR [r15],0x10
  4265c2:	mov    rax,QWORD PTR [rsp+0x8]
  4265c7:	mov    eax,DWORD PTR [rax]
  4265c9:	mov    ecx,r13d
  4265cc:	sub    ecx,eax
  4265ce:	add    ecx,0x1
  4265d1:	mov    rax,QWORD PTR [rsp+0x10]
  4265d6:	mov    DWORD PTR [rax],ecx
  4265d8:	mov    rax,QWORD PTR [rsp+0x18]
  4265dd:	mov    QWORD PTR [rax],r13
  4265e0:	mov    rax,r12
  4265e3:	cmp    DWORD PTR [r15],0x0
  4265e7:	jne    4266a0 <flatcc_json_parser_generic_json@@Base+0x800>
  4265ed:	jmp    426647 <flatcc_json_parser_generic_json@@Base+0x7a7>
  4265ef:	mov    rbx,r13
  4265f2:	mov    rcx,r12
  4265f5:	cmp    rbx,r12
  4265f8:	je     426670 <flatcc_json_parser_generic_json@@Base+0x7d0>
  4265fa:	movsx  eax,al
  4265fd:	cmp    eax,0x3a
  426600:	ja     426616 <flatcc_json_parser_generic_json@@Base+0x776>
  426602:	movabs rcx,0x400100100002e00
  42660c:	bt     rcx,rax
  426610:	jb     4266a3 <flatcc_json_parser_generic_json@@Base+0x803>
  426616:	cmp    eax,0x5d
  426619:	je     4266a3 <flatcc_json_parser_generic_json@@Base+0x803>
  42661f:	mov    rcx,rbx
  426622:	cmp    eax,0x7d
  426625:	je     4266a3 <flatcc_json_parser_generic_json@@Base+0x803>
  426627:	jmp    426670 <flatcc_json_parser_generic_json@@Base+0x7d0>
  426629:	cmp    r13,r12
  42662c:	je     42663e <flatcc_json_parser_generic_json@@Base+0x79e>
  42662e:	cmp    BYTE PTR [r13+0x0],0x22
  426633:	jne    42663e <flatcc_json_parser_generic_json@@Base+0x79e>
  426635:	add    r13,0x1
  426639:	mov    rbx,r13
  42663c:	jmp    4266a3 <flatcc_json_parser_generic_json@@Base+0x803>
  42663e:	mov    rax,r13
  426641:	cmp    DWORD PTR [r15],0x0
  426645:	jne    4266a0 <flatcc_json_parser_generic_json@@Base+0x800>
  426647:	mov    DWORD PTR [r15],0x14
  42664e:	mov    rcx,QWORD PTR [rsp+0x8]
  426653:	mov    ecx,DWORD PTR [rcx]
  426655:	mov    edx,eax
  426657:	sub    edx,ecx
  426659:	add    edx,0x1
  42665c:	mov    rcx,QWORD PTR [rsp+0x10]
  426661:	mov    DWORD PTR [rcx],edx
  426663:	mov    rcx,QWORD PTR [rsp+0x18]
  426668:	mov    QWORD PTR [rcx],rax
  42666b:	jmp    4266a0 <flatcc_json_parser_generic_json@@Base+0x800>
  42666d:	mov    rcx,r12
  426670:	cmp    DWORD PTR [r15],0x0
  426674:	jne    4266a0 <flatcc_json_parser_generic_json@@Base+0x800>
  426676:	mov    DWORD PTR [r15],0x6
  42667d:	mov    rax,QWORD PTR [rsp+0x8]
  426682:	mov    eax,DWORD PTR [rax]
  426684:	mov    edx,ecx
  426686:	sub    edx,eax
  426688:	add    edx,0x1
  42668b:	mov    rax,QWORD PTR [rsp+0x10]
  426690:	mov    DWORD PTR [rax],edx
  426692:	mov    rax,QWORD PTR [rsp+0x18]
  426697:	mov    QWORD PTR [rax],rcx
  42669a:	nop    WORD PTR [rax+rax*1+0x0]
  4266a0:	mov    rbx,r12
  4266a3:	cmp    rbx,r12
  4266a6:	setne  al
  4266a9:	test   rbp,rbp
  4266ac:	setne  cl
  4266af:	je     426985 <flatcc_json_parser_generic_json@@Base+0xae5>
  4266b5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4266bf:	nop
  4266c0:	cmp    rbx,r12
  4266c3:	je     426985 <flatcc_json_parser_generic_json@@Base+0xae5>
  4266c9:	mov    rax,r12
  4266cc:	sub    rax,rbx
  4266cf:	cmp    BYTE PTR [rsp+rbp*1+0x2f],0x5d
  4266d4:	jne    4266f0 <flatcc_json_parser_generic_json@@Base+0x850>
  4266d6:	cmp    rax,0x2
  4266da:	jl     426720 <flatcc_json_parser_generic_json@@Base+0x880>
  4266dc:	cmp    BYTE PTR [rbx],0x20
  4266df:	jle    426707 <flatcc_json_parser_generic_json@@Base+0x867>
  4266e1:	mov    rax,rbx
  4266e4:	jmp    42672e <flatcc_json_parser_generic_json@@Base+0x88e>
  4266e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4266f0:	cmp    rax,0x2
  4266f4:	jl     426780 <flatcc_json_parser_generic_json@@Base+0x8e0>
  4266fa:	cmp    BYTE PTR [rbx],0x20
  4266fd:	jle    426764 <flatcc_json_parser_generic_json@@Base+0x8c4>
  4266ff:	mov    rax,rbx
  426702:	jmp    42678e <flatcc_json_parser_generic_json@@Base+0x8ee>
  426707:	jne    426720 <flatcc_json_parser_generic_json@@Base+0x880>
  426709:	cmp    BYTE PTR [rbx+0x1],0x20
  42670d:	jle    426720 <flatcc_json_parser_generic_json@@Base+0x880>
  42670f:	add    rbx,0x1
  426713:	mov    rax,rbx
  426716:	jmp    42672e <flatcc_json_parser_generic_json@@Base+0x88e>
  426718:	nop    DWORD PTR [rax+rax*1+0x0]
  426720:	mov    rdi,r14
  426723:	mov    rsi,rbx
  426726:	mov    rdx,r12
  426729:	call   425750 <flatcc_json_parser_space_ext@@Base>
  42672e:	mov    rbx,r12
  426731:	cmp    rax,r12
  426734:	je     426911 <flatcc_json_parser_generic_json@@Base+0xa71>
  42673a:	movzx  ecx,BYTE PTR [rax]
  42673d:	cmp    cl,0x2c
  426740:	je     4267e1 <flatcc_json_parser_generic_json@@Base+0x941>
  426746:	cmp    cl,0x5d
  426749:	je     4267ab <flatcc_json_parser_generic_json@@Base+0x90b>
  42674b:	cmp    DWORD PTR [r15],0x0
  42674f:	mov    rbx,r12
  426752:	jne    426911 <flatcc_json_parser_generic_json@@Base+0xa71>
  426758:	mov    DWORD PTR [r15],0x9
  42675f:	jmp    426856 <flatcc_json_parser_generic_json@@Base+0x9b6>
  426764:	jne    426780 <flatcc_json_parser_generic_json@@Base+0x8e0>
  426766:	cmp    BYTE PTR [rbx+0x1],0x20
  42676a:	jle    426780 <flatcc_json_parser_generic_json@@Base+0x8e0>
  42676c:	add    rbx,0x1
  426770:	mov    rax,rbx
  426773:	jmp    42678e <flatcc_json_parser_generic_json@@Base+0x8ee>
  426775:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42677f:	nop
  426780:	mov    rdi,r14
  426783:	mov    rsi,rbx
  426786:	mov    rdx,r12
  426789:	call   425750 <flatcc_json_parser_space_ext@@Base>
  42678e:	mov    rbx,r12
  426791:	cmp    rax,r12
  426794:	je     426911 <flatcc_json_parser_generic_json@@Base+0xa71>
  42679a:	movzx  ecx,BYTE PTR [rax]
  42679d:	cmp    cl,0x2c
  4267a0:	je     42680c <flatcc_json_parser_generic_json@@Base+0x96c>
  4267a2:	cmp    cl,0x7d
  4267a5:	jne    426842 <flatcc_json_parser_generic_json@@Base+0x9a2>
  4267ab:	lea    rbx,[rax+0x1]
  4267af:	mov    rcx,r12
  4267b2:	sub    rcx,rbx
  4267b5:	cmp    rcx,0x2
  4267b9:	jl     426900 <flatcc_json_parser_generic_json@@Base+0xa60>
  4267bf:	cmp    BYTE PTR [rbx],0x20
  4267c2:	jg     426911 <flatcc_json_parser_generic_json@@Base+0xa71>
  4267c8:	jne    426900 <flatcc_json_parser_generic_json@@Base+0xa60>
  4267ce:	cmp    BYTE PTR [rax+0x2],0x20
  4267d2:	jle    426900 <flatcc_json_parser_generic_json@@Base+0xa60>
  4267d8:	add    rax,0x2
  4267dc:	jmp    42690e <flatcc_json_parser_generic_json@@Base+0xa6e>
  4267e1:	lea    rcx,[rax+0x1]
  4267e5:	mov    rdx,r12
  4267e8:	sub    rdx,rcx
  4267eb:	cmp    rdx,0x2
  4267ef:	jl     42687b <flatcc_json_parser_generic_json@@Base+0x9db>
  4267f5:	cmp    BYTE PTR [rcx],0x20
  4267f8:	jg     42688c <flatcc_json_parser_generic_json@@Base+0x9ec>
  4267fe:	jne    42687b <flatcc_json_parser_generic_json@@Base+0x9db>
  426800:	cmp    BYTE PTR [rax+0x2],0x20
  426804:	jle    42687b <flatcc_json_parser_generic_json@@Base+0x9db>
  426806:	add    rax,0x2
  42680a:	jmp    426889 <flatcc_json_parser_generic_json@@Base+0x9e9>
  42680c:	lea    rcx,[rax+0x1]
  426810:	mov    rdx,r12
  426813:	sub    rdx,rcx
  426816:	cmp    rdx,0x2
  42681a:	jl     4268c4 <flatcc_json_parser_generic_json@@Base+0xa24>
  426820:	cmp    BYTE PTR [rcx],0x20
  426823:	jg     4268d5 <flatcc_json_parser_generic_json@@Base+0xa35>
  426829:	jne    4268c4 <flatcc_json_parser_generic_json@@Base+0xa24>
  42682f:	cmp    BYTE PTR [rax+0x2],0x20
  426833:	jle    4268c4 <flatcc_json_parser_generic_json@@Base+0xa24>
  426839:	add    rax,0x2
  42683d:	jmp    4268d2 <flatcc_json_parser_generic_json@@Base+0xa32>
  426842:	cmp    DWORD PTR [r15],0x0
  426846:	mov    rbx,r12
  426849:	jne    426911 <flatcc_json_parser_generic_json@@Base+0xa71>
  42684f:	mov    DWORD PTR [r15],0xa
  426856:	mov    rcx,QWORD PTR [rsp+0x8]
  42685b:	mov    ecx,DWORD PTR [rcx]
  42685d:	mov    edx,eax
  42685f:	sub    edx,ecx
  426861:	add    edx,0x1
  426864:	mov    rcx,QWORD PTR [rsp+0x10]
  426869:	mov    DWORD PTR [rcx],edx
  42686b:	mov    rcx,QWORD PTR [rsp+0x18]
  426870:	mov    QWORD PTR [rcx],rax
  426873:	mov    rbx,r12
  426876:	jmp    426911 <flatcc_json_parser_generic_json@@Base+0xa71>
  42687b:	mov    rdi,r14
  42687e:	mov    rsi,rcx
  426881:	mov    rdx,r12
  426884:	call   425750 <flatcc_json_parser_space_ext@@Base>
  426889:	mov    rcx,rax
  42688c:	cmp    rcx,r12
  42688f:	je     42692a <flatcc_json_parser_generic_json@@Base+0xa8a>
  426895:	cmp    BYTE PTR [rcx],0x5d
  426898:	jne    42696f <flatcc_json_parser_generic_json@@Base+0xacf>
  42689e:	lea    rbx,[rcx+0x1]
  4268a2:	mov    rax,r12
  4268a5:	sub    rax,rbx
  4268a8:	cmp    rax,0x2
  4268ac:	jl     426900 <flatcc_json_parser_generic_json@@Base+0xa60>
  4268ae:	cmp    BYTE PTR [rbx],0x20
  4268b1:	jg     426911 <flatcc_json_parser_generic_json@@Base+0xa71>
  4268b3:	jne    426900 <flatcc_json_parser_generic_json@@Base+0xa60>
  4268b5:	cmp    BYTE PTR [rcx+0x2],0x20
  4268b9:	jle    426900 <flatcc_json_parser_generic_json@@Base+0xa60>
  4268bb:	add    rcx,0x2
  4268bf:	mov    rbx,rcx
  4268c2:	jmp    426911 <flatcc_json_parser_generic_json@@Base+0xa71>
  4268c4:	mov    rdi,r14
  4268c7:	mov    rsi,rcx
  4268ca:	mov    rdx,r12
  4268cd:	call   425750 <flatcc_json_parser_space_ext@@Base>
  4268d2:	mov    rcx,rax
  4268d5:	cmp    rcx,r12
  4268d8:	je     42693c <flatcc_json_parser_generic_json@@Base+0xa9c>
  4268da:	cmp    BYTE PTR [rcx],0x7d
  4268dd:	jne    42696f <flatcc_json_parser_generic_json@@Base+0xacf>
  4268e3:	lea    rbx,[rcx+0x1]
  4268e7:	mov    rax,r12
  4268ea:	sub    rax,rbx
  4268ed:	cmp    rax,0x2
  4268f1:	jl     426900 <flatcc_json_parser_generic_json@@Base+0xa60>
  4268f3:	cmp    BYTE PTR [rbx],0x20
  4268f6:	jg     426911 <flatcc_json_parser_generic_json@@Base+0xa71>
  4268f8:	je     4268b5 <flatcc_json_parser_generic_json@@Base+0xa15>
  4268fa:	nop    WORD PTR [rax+rax*1+0x0]
  426900:	mov    rdi,r14
  426903:	mov    rsi,rbx
  426906:	mov    rdx,r12
  426909:	call   425750 <flatcc_json_parser_space_ext@@Base>
  42690e:	mov    rbx,rax
  426911:	cmp    rbx,r12
  426914:	setne  al
  426917:	cmp    rbp,0x1
  42691b:	lea    rbp,[rbp-0x1]
  42691f:	setne  cl
  426922:	jne    4266c0 <flatcc_json_parser_generic_json@@Base+0x820>
  426928:	jmp    426985 <flatcc_json_parser_generic_json@@Base+0xae5>
  42692a:	cmp    DWORD PTR [r15],0x0
  42692e:	mov    rbx,r12
  426931:	jne    426911 <flatcc_json_parser_generic_json@@Base+0xa71>
  426933:	mov    DWORD PTR [r15],0x9
  42693a:	jmp    42694c <flatcc_json_parser_generic_json@@Base+0xaac>
  42693c:	cmp    DWORD PTR [r15],0x0
  426940:	mov    rbx,r12
  426943:	jne    426911 <flatcc_json_parser_generic_json@@Base+0xa71>
  426945:	mov    DWORD PTR [r15],0xa
  42694c:	mov    rax,QWORD PTR [rsp+0x8]
  426951:	mov    eax,DWORD PTR [rax]
  426953:	mov    ecx,r12d
  426956:	sub    ecx,eax
  426958:	add    ecx,0x1
  42695b:	mov    rax,QWORD PTR [rsp+0x10]
  426960:	mov    DWORD PTR [rax],ecx
  426962:	mov    rax,QWORD PTR [rsp+0x18]
  426967:	mov    QWORD PTR [rax],r12
  42696a:	mov    rbx,r12
  42696d:	jmp    426911 <flatcc_json_parser_generic_json@@Base+0xa71>
  42696f:	mov    rbx,rcx
  426972:	lea    rax,[rsp+rbp*1]
  426976:	add    rax,0x30
  42697a:	cmp    rbx,r12
  42697d:	jne    425ef2 <flatcc_json_parser_generic_json@@Base+0x52>
  426983:	jmp    4269c5 <flatcc_json_parser_generic_json@@Base+0xb25>
  426985:	test   al,al
  426987:	jne    4269c8 <flatcc_json_parser_generic_json@@Base+0xb28>
  426989:	test   cl,cl
  42698b:	je     4269c8 <flatcc_json_parser_generic_json@@Base+0xb28>
  42698d:	cmp    DWORD PTR [r15],0x0
  426991:	jne    4269c5 <flatcc_json_parser_generic_json@@Base+0xb25>
  426993:	xor    eax,eax
  426995:	cmp    BYTE PTR [rsp+rbp*1+0x2f],0x5d
  42699a:	sete   al
  42699d:	mov    ecx,0xa
  4269a2:	sub    ecx,eax
  4269a4:	mov    DWORD PTR [r15],ecx
  4269a7:	mov    rax,QWORD PTR [rsp+0x8]
  4269ac:	mov    eax,DWORD PTR [rax]
  4269ae:	mov    ecx,r12d
  4269b1:	sub    ecx,eax
  4269b3:	add    ecx,0x1
  4269b6:	mov    rax,QWORD PTR [rsp+0x10]
  4269bb:	mov    DWORD PTR [rax],ecx
  4269bd:	mov    rax,QWORD PTR [rsp+0x18]
  4269c2:	mov    QWORD PTR [rax],r12
  4269c5:	mov    rbx,r12
  4269c8:	mov    rax,rbx
  4269cb:	add    rsp,0x238
  4269d2:	pop    rbx
  4269d3:	pop    r12
  4269d5:	pop    r13
  4269d7:	pop    r14
  4269d9:	pop    r15
  4269db:	pop    rbp
  4269dc:	ret    
  4269dd:	cmp    DWORD PTR [r15],0x0
  4269e1:	jne    4269c5 <flatcc_json_parser_generic_json@@Base+0xb25>
  4269e3:	mov    DWORD PTR [r15],0xa
  4269ea:	jmp    4269a7 <flatcc_json_parser_generic_json@@Base+0xb07>
  4269ec:	cmp    DWORD PTR [r15],0x0
  4269f0:	jne    4269c5 <flatcc_json_parser_generic_json@@Base+0xb25>
  4269f2:	mov    DWORD PTR [r15],0x4
  4269f9:	mov    rcx,QWORD PTR [rsp+0x8]
  4269fe:	mov    ecx,DWORD PTR [rcx]
  426a00:	mov    edx,eax
  426a02:	sub    edx,ecx
  426a04:	add    edx,0x1
  426a07:	mov    rcx,QWORD PTR [rsp+0x10]
  426a0c:	mov    DWORD PTR [rcx],edx
  426a0e:	mov    rcx,QWORD PTR [rsp+0x18]
  426a13:	mov    QWORD PTR [rcx],rax
  426a16:	jmp    4269c5 <flatcc_json_parser_generic_json@@Base+0xb25>
  426a18:	cmp    DWORD PTR [r15],0x0
  426a1c:	jne    4269c5 <flatcc_json_parser_generic_json@@Base+0xb25>
  426a1e:	mov    DWORD PTR [r15],0x2
  426a25:	jmp    426a34 <flatcc_json_parser_generic_json@@Base+0xb94>
  426a27:	cmp    DWORD PTR [r15],0x0
  426a2b:	jne    4269c5 <flatcc_json_parser_generic_json@@Base+0xb25>
  426a2d:	mov    DWORD PTR [r15],0x5
  426a34:	mov    rax,QWORD PTR [rsp+0x8]
  426a39:	mov    eax,DWORD PTR [rax]
  426a3b:	mov    ecx,r13d
  426a3e:	sub    ecx,eax
  426a40:	add    ecx,0x1
  426a43:	mov    rax,QWORD PTR [rsp+0x10]
  426a48:	mov    DWORD PTR [rax],ecx
  426a4a:	mov    rax,QWORD PTR [rsp+0x18]
  426a4f:	mov    QWORD PTR [rax],r13
  426a52:	jmp    4269c5 <flatcc_json_parser_generic_json@@Base+0xb25>
  426a57:	nop    WORD PTR [rax+rax*1+0x0]

0000000000426a60 <flatcc_json_parser_double@@Base>:
  426a60:	push   r15
  426a62:	push   r14
  426a64:	push   r12
  426a66:	push   rbx
  426a67:	push   rax
  426a68:	mov    rbx,rsi
  426a6b:	mov    QWORD PTR [rcx],0x0
  426a72:	cmp    rsi,rdx
  426a75:	je     426b02 <flatcc_json_parser_double@@Base+0xa2>
  426a7b:	mov    r12,rcx
  426a7e:	mov    r14,rdx
  426a81:	mov    r15,rdi
  426a84:	lea    rax,[rbx+0x1]
  426a88:	xor    ecx,ecx
  426a8a:	cmp    BYTE PTR [rbx],0x2d
  426a8d:	sete   dl
  426a90:	cmovne rax,rbx
  426a94:	mov    rsi,r14
  426a97:	sub    rsi,rax
  426a9a:	cmp    rsi,0x2
  426a9e:	jl     426abe <flatcc_json_parser_double@@Base+0x5e>
  426aa0:	mov    cl,dl
  426aa2:	mov    cl,BYTE PTR [rbx+rcx*1]
  426aa5:	cmp    cl,0x2e
  426aa8:	je     426ab5 <flatcc_json_parser_double@@Base+0x55>
  426aaa:	cmp    cl,0x30
  426aad:	jne    426abe <flatcc_json_parser_double@@Base+0x5e>
  426aaf:	cmp    BYTE PTR [rax+0x1],0x30
  426ab3:	jne    426abe <flatcc_json_parser_double@@Base+0x5e>
  426ab5:	cmp    DWORD PTR [r15+0x20],0x0
  426aba:	jne    426b26 <flatcc_json_parser_double@@Base+0xc6>
  426abc:	jmp    426b0b <flatcc_json_parser_double@@Base+0xab>
  426abe:	mov    esi,r14d
  426ac1:	sub    esi,ebx
  426ac3:	mov    rdi,rbx
  426ac6:	mov    rdx,r12
  426ac9:	call   426b40 <flatcc_json_parser_double@@Base+0xe0>
  426ace:	test   rax,rax
  426ad1:	je     426ad8 <flatcc_json_parser_double@@Base+0x78>
  426ad3:	cmp    rax,rbx
  426ad6:	jne    426b29 <flatcc_json_parser_double@@Base+0xc9>
  426ad8:	vmovsd xmm0,QWORD PTR [r12]
  426ade:	vandps xmm0,xmm0,XMMWORD PTR [rip+0x150ba]        # 43bba0 <flatcc_builder_padding_base@@Base+0x2370>
  426ae6:	vucomisd xmm0,QWORD PTR [rip+0x150c2]        # 43bbb0 <flatcc_builder_padding_base@@Base+0x2380>
  426aee:	mov    eax,DWORD PTR [r15+0x20]
  426af2:	jb     426b07 <flatcc_json_parser_double@@Base+0xa7>
  426af4:	test   eax,eax
  426af6:	jne    426b26 <flatcc_json_parser_double@@Base+0xc6>
  426af8:	mov    DWORD PTR [r15+0x20],0x7
  426b00:	jmp    426b13 <flatcc_json_parser_double@@Base+0xb3>
  426b02:	mov    rax,rbx
  426b05:	jmp    426b29 <flatcc_json_parser_double@@Base+0xc9>
  426b07:	test   eax,eax
  426b09:	jne    426b26 <flatcc_json_parser_double@@Base+0xc6>
  426b0b:	mov    DWORD PTR [r15+0x20],0x6
  426b13:	mov    eax,DWORD PTR [r15+0x8]
  426b17:	mov    ecx,ebx
  426b19:	sub    ecx,eax
  426b1b:	add    ecx,0x1
  426b1e:	mov    DWORD PTR [r15+0x1c],ecx
  426b22:	mov    QWORD PTR [r15+0x38],rbx
  426b26:	mov    rax,r14
  426b29:	add    rsp,0x8
  426b2d:	pop    rbx
  426b2e:	pop    r12
  426b30:	pop    r14
  426b32:	pop    r15
  426b34:	ret    
  426b35:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426b3f:	nop
  426b40:	push   rbp
  426b41:	push   r15
  426b43:	push   r14
  426b45:	push   r13
  426b47:	push   r12
  426b49:	push   rbx
  426b4a:	sub    rsp,0x28
  426b4e:	mov    r13,rdx
  426b51:	mov    r14,rdi
  426b54:	mov    QWORD PTR [rdx],0x0
  426b5b:	cmp    esi,0x3e9
  426b61:	mov    edx,0x3e8
  426b66:	cmovl  edx,esi
  426b69:	movsxd r12,edx
  426b6c:	lea    r15,[rdi+r12*1]
  426b70:	add    r15,0x1
  426b74:	cmp    r15,rdi
  426b77:	je     426f80 <flatcc_json_parser_double@@Base+0x520>
  426b7d:	mov    al,BYTE PTR [r14]
  426b80:	xor    ebx,ebx
  426b82:	mov    rcx,r14
  426b85:	cmp    al,0x2d
  426b87:	jne    426b9c <flatcc_json_parser_double@@Base+0x13c>
  426b89:	test   edx,edx
  426b8b:	je     426f7d <flatcc_json_parser_double@@Base+0x51d>
  426b91:	lea    rcx,[r14+0x1]
  426b95:	mov    al,BYTE PTR [rcx]
  426b97:	mov    ebx,0x1
  426b9c:	lea    r8,[r14+r12*1]
  426ba0:	cmp    al,0x30
  426ba2:	jne    426bc6 <flatcc_json_parser_double@@Base+0x166>
  426ba4:	lea    rsi,[rcx+0x1]
  426ba8:	cmp    rcx,r8
  426bab:	je     426bf6 <flatcc_json_parser_double@@Base+0x196>
  426bad:	mov    al,BYTE PTR [rsi]
  426baf:	mov    edx,eax
  426bb1:	or     dl,0x20
  426bb4:	cmp    dl,0x78
  426bb7:	jne    426c02 <flatcc_json_parser_double@@Base+0x1a2>
  426bb9:	mov    QWORD PTR [r13+0x0],0x0
  426bc1:	jmp    426f80 <flatcc_json_parser_double@@Base+0x520>
  426bc6:	mov    edx,eax
  426bc8:	add    dl,0xcf
  426bcb:	cmp    dl,0x9
  426bce:	jb     426bdd <flatcc_json_parser_double@@Base+0x17d>
  426bd0:	xor    eax,eax
  426bd2:	test   ebx,ebx
  426bd4:	cmovne r14,rax
  426bd8:	jmp    426f80 <flatcc_json_parser_double@@Base+0x520>
  426bdd:	movsx  rdi,al
  426be1:	add    rcx,0x1
  426be5:	add    rdi,0xffffffffffffffd0
  426be9:	mov    rsi,rcx
  426bec:	cmp    rsi,r15
  426bef:	jne    426c2e <flatcc_json_parser_double@@Base+0x1ce>
  426bf1:	jmp    426f7d <flatcc_json_parser_double@@Base+0x51d>
  426bf6:	xor    edi,edi
  426bf8:	cmp    rsi,r15
  426bfb:	jne    426c2e <flatcc_json_parser_double@@Base+0x1ce>
  426bfd:	jmp    426f7d <flatcc_json_parser_double@@Base+0x51d>
  426c02:	cmp    al,0x30
  426c04:	jne    426c23 <flatcc_json_parser_double@@Base+0x1c3>
  426c06:	add    rcx,0x2
  426c0a:	xor    edi,edi
  426c0c:	nop    DWORD PTR [rax+0x0]
  426c10:	mov    rsi,rcx
  426c13:	cmp    r15,rcx
  426c16:	je     426c25 <flatcc_json_parser_double@@Base+0x1c5>
  426c18:	lea    rcx,[rsi+0x1]
  426c1c:	cmp    BYTE PTR [rsi],0x30
  426c1f:	je     426c10 <flatcc_json_parser_double@@Base+0x1b0>
  426c21:	jmp    426c25 <flatcc_json_parser_double@@Base+0x1c5>
  426c23:	xor    edi,edi
  426c25:	cmp    rsi,r15
  426c28:	je     426f7d <flatcc_json_parser_double@@Base+0x51d>
  426c2e:	movabs r11,0x1999999999999998
  426c38:	mov    rbp,rsi
  426c3b:	nop    DWORD PTR [rax+rax*1+0x0]
  426c40:	movsx  rax,BYTE PTR [rbp+0x0]
  426c45:	mov    edx,eax
  426c47:	add    dl,0xd0
  426c4a:	xor    ecx,ecx
  426c4c:	cmp    dl,0x9
  426c4f:	ja     426c6b <flatcc_json_parser_double@@Base+0x20b>
  426c51:	cmp    rdi,r11
  426c54:	ja     426c75 <flatcc_json_parser_double@@Base+0x215>
  426c56:	lea    rdx,[rdi+rdi*4]
  426c5a:	add    rbp,0x1
  426c5e:	lea    rdi,[rax+rdx*2]
  426c62:	add    rdi,0xffffffffffffffd0
  426c66:	cmp    r15,rbp
  426c69:	jne    426c40 <flatcc_json_parser_double@@Base+0x1e0>
  426c6b:	cmp    rbp,r15
  426c6e:	jne    426c8d <flatcc_json_parser_double@@Base+0x22d>
  426c70:	jmp    426f7d <flatcc_json_parser_double@@Base+0x51d>
  426c75:	xor    ecx,ecx
  426c77:	cmp    al,0x34
  426c79:	setg   cl
  426c7c:	add    rdi,rcx
  426c7f:	mov    ecx,0x1
  426c84:	cmp    rbp,r15
  426c87:	je     426f7d <flatcc_json_parser_double@@Base+0x51d>
  426c8d:	mov    DWORD PTR [rsp+0xc],ebx
  426c91:	mov    r10d,ebp
  426c94:	sub    r10d,esi
  426c97:	lea    r9,[r12+0x1]
  426c9c:	mov    rdx,r9
  426c9f:	sub    rdx,rbp
  426ca2:	add    rdx,r14
  426ca5:	xor    esi,esi
  426ca7:	nop    WORD PTR [rax+rax*1+0x0]
  426cb0:	movzx  eax,BYTE PTR [rbp+rsi*1+0x0]
  426cb5:	cmp    al,0x30
  426cb7:	jne    426cc4 <flatcc_json_parser_double@@Base+0x264>
  426cb9:	add    rsi,0x1
  426cbd:	cmp    rdx,rsi
  426cc0:	jne    426cb0 <flatcc_json_parser_double@@Base+0x250>
  426cc2:	jmp    426d0b <flatcc_json_parser_double@@Base+0x2ab>
  426cc4:	add    al,0xcf
  426cc6:	cmp    al,0x9
  426cc8:	jae    426d0b <flatcc_json_parser_double@@Base+0x2ab>
  426cca:	add    rsi,0x1
  426cce:	mov    rax,rsi
  426cd1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426cdb:	nop    DWORD PTR [rax+rax*1+0x0]
  426ce0:	mov    rsi,rax
  426ce3:	cmp    rdx,rax
  426ce6:	je     426cf9 <flatcc_json_parser_double@@Base+0x299>
  426ce8:	movzx  ecx,BYTE PTR [rbp+rsi*1+0x0]
  426ced:	add    cl,0xd0
  426cf0:	lea    rax,[rsi+0x1]
  426cf4:	cmp    cl,0xa
  426cf7:	jb     426ce0 <flatcc_json_parser_double@@Base+0x280>
  426cf9:	add    rbp,rsi
  426cfc:	mov    ecx,0x1
  426d01:	cmp    rbp,r15
  426d04:	jne    426d17 <flatcc_json_parser_double@@Base+0x2b7>
  426d06:	jmp    426f7d <flatcc_json_parser_double@@Base+0x51d>
  426d0b:	add    rbp,rsi
  426d0e:	cmp    rbp,r15
  426d11:	je     426f7d <flatcc_json_parser_double@@Base+0x51d>
  426d17:	cmp    BYTE PTR [rbp+0x0],0x2e
  426d1b:	jne    426d98 <flatcc_json_parser_double@@Base+0x338>
  426d1d:	mov    QWORD PTR [rsp+0x18],r13
  426d22:	mov    r13b,BYTE PTR [rbp+0x1]
  426d26:	mov    eax,r13d
  426d29:	add    al,0xd0
  426d2b:	cmp    al,0x9
  426d2d:	ja     426f7d <flatcc_json_parser_double@@Base+0x51d>
  426d33:	lea    rax,[rbp+0x1]
  426d37:	cmp    rbp,r8
  426d3a:	je     426e3d <flatcc_json_parser_double@@Base+0x3dd>
  426d40:	mov    QWORD PTR [rsp+0x10],rax
  426d45:	add    r12,0xffffffffffffffff
  426d49:	sub    r12,rbp
  426d4c:	add    r12,r14
  426d4f:	xor    edx,edx
  426d51:	mov    rax,rdx
  426d54:	cmp    rdi,r11
  426d57:	ja     426e42 <flatcc_json_parser_double@@Base+0x3e2>
  426d5d:	lea    rdx,[rdi+rdi*4]
  426d61:	movsx  rdi,r13b
  426d65:	lea    rdi,[rdi+rdx*2]
  426d69:	add    rdi,0xffffffffffffffd0
  426d6d:	cmp    r12,rax
  426d70:	je     426d87 <flatcc_json_parser_double@@Base+0x327>
  426d72:	movzx  r13d,BYTE PTR [rbp+rax*1+0x2]
  426d78:	mov    ebx,r13d
  426d7b:	add    bl,0xd0
  426d7e:	lea    rdx,[rax+0x1]
  426d82:	cmp    bl,0xa
  426d85:	jb     426d51 <flatcc_json_parser_double@@Base+0x2f1>
  426d87:	add    rbp,rax
  426d8a:	add    rbp,0x2
  426d8e:	add    esi,0xffffffff
  426d91:	sub    esi,eax
  426d93:	jmp    426e63 <flatcc_json_parser_double@@Base+0x403>
  426d98:	mov    edx,r10d
  426d9b:	xor    r9d,r9d
  426d9e:	cmp    rbp,r15
  426da1:	je     426f7d <flatcc_json_parser_double@@Base+0x51d>
  426da7:	mov    al,BYTE PTR [rbp+0x0]
  426daa:	or     al,0x20
  426dac:	cmp    al,0x65
  426dae:	jne    426deb <flatcc_json_parser_double@@Base+0x38b>
  426db0:	mov    rax,r15
  426db3:	sub    rax,rbp
  426db6:	xor    r9d,r9d
  426db9:	cmp    rax,0x2
  426dbd:	jl     426f7d <flatcc_json_parser_double@@Base+0x51d>
  426dc3:	mov    al,BYTE PTR [rbp+0x1]
  426dc6:	cmp    al,0x2d
  426dc8:	je     426f5a <flatcc_json_parser_double@@Base+0x4fa>
  426dce:	cmp    al,0x2b
  426dd0:	jne    426f6b <flatcc_json_parser_double@@Base+0x50b>
  426dd6:	add    rbp,0x2
  426dda:	xor    r9d,r9d
  426ddd:	cmp    rbp,r15
  426de0:	jne    426f6f <flatcc_json_parser_double@@Base+0x50f>
  426de6:	jmp    426f7d <flatcc_json_parser_double@@Base+0x51d>
  426deb:	xor    r10d,r10d
  426dee:	cmp    rbp,r15
  426df1:	je     426f7d <flatcc_json_parser_double@@Base+0x51d>
  426df7:	mov    eax,r10d
  426dfa:	neg    eax
  426dfc:	test   r9d,r9d
  426dff:	cmove  eax,r10d
  426e03:	vxorpd xmm0,xmm0,xmm0
  426e07:	test   rdi,rdi
  426e0a:	je     426ee0 <flatcc_json_parser_double@@Base+0x480>
  426e10:	add    esi,edx
  426e12:	add    esi,eax
  426e14:	cmp    esi,0xfffffebc
  426e1a:	mov    ebx,DWORD PTR [rsp+0xc]
  426e1e:	jl     426ee4 <flatcc_json_parser_double@@Base+0x484>
  426e24:	cmp    esi,0x136
  426e2a:	jle    426f07 <flatcc_json_parser_double@@Base+0x4a7>
  426e30:	vmovsd xmm0,QWORD PTR [rip+0x14d78]        # 43bbb0 <flatcc_builder_padding_base@@Base+0x2380>
  426e38:	jmp    426ee4 <flatcc_json_parser_double@@Base+0x484>
  426e3d:	mov    rbp,rax
  426e40:	jmp    426e68 <flatcc_json_parser_double@@Base+0x408>
  426e42:	mov    esi,esi
  426e44:	sub    rsi,rax
  426e47:	add    rbp,rax
  426e4a:	add    rbp,0x1
  426e4e:	test   ecx,ecx
  426e50:	jne    426e63 <flatcc_json_parser_double@@Base+0x403>
  426e52:	xor    eax,eax
  426e54:	cmp    r13b,0x34
  426e58:	setg   al
  426e5b:	add    rdi,rax
  426e5e:	mov    ecx,0x1
  426e63:	mov    rax,QWORD PTR [rsp+0x10]
  426e68:	cmp    rbp,r15
  426e6b:	mov    r13,QWORD PTR [rsp+0x18]
  426e70:	je     426f7d <flatcc_json_parser_double@@Base+0x51d>
  426e76:	mov    edx,ebp
  426e78:	sub    edx,eax
  426e7a:	add    edx,r10d
  426e7d:	lea    r10,[rbp+0x1]
  426e81:	sub    r9,rbp
  426e84:	add    r9,r14
  426e87:	xor    ebx,ebx
  426e89:	xor    r11d,r11d
  426e8c:	movzx  eax,BYTE PTR [rbp+rbx*1+0x0]
  426e91:	cmp    al,0x30
  426e93:	jne    426eaa <flatcc_json_parser_double@@Base+0x44a>
  426e95:	add    r11,0xffffffffffffffff
  426e99:	add    rbx,0x1
  426e9d:	mov    rax,r9
  426ea0:	add    rax,r11
  426ea3:	jne    426e8c <flatcc_json_parser_double@@Base+0x42c>
  426ea5:	sub    esi,r11d
  426ea8:	jmp    426ed8 <flatcc_json_parser_double@@Base+0x478>
  426eaa:	add    al,0xcf
  426eac:	mov    esi,esi
  426eae:	sub    rsi,r11
  426eb1:	cmp    al,0x9
  426eb3:	jae    426ed8 <flatcc_json_parser_double@@Base+0x478>
  426eb5:	sub    r10,r11
  426eb8:	mov    rbp,r10
  426ebb:	cmp    r15,r10
  426ebe:	je     426ece <flatcc_json_parser_double@@Base+0x46e>
  426ec0:	movzx  eax,BYTE PTR [rbp+0x0]
  426ec4:	add    al,0xd0
  426ec6:	lea    r10,[rbp+0x1]
  426eca:	cmp    al,0xa
  426ecc:	jb     426eb8 <flatcc_json_parser_double@@Base+0x458>
  426ece:	mov    ecx,0x1
  426ed3:	jmp    426d9b <flatcc_json_parser_double@@Base+0x33b>
  426ed8:	sub    rbp,r11
  426edb:	jmp    426d9b <flatcc_json_parser_double@@Base+0x33b>
  426ee0:	mov    ebx,DWORD PTR [rsp+0xc]
  426ee4:	vmovsd QWORD PTR [r13+0x0],xmm0
  426eea:	test   ebx,ebx
  426eec:	je     426f02 <flatcc_json_parser_double@@Base+0x4a2>
  426eee:	vmovsd xmm0,QWORD PTR [r13+0x0]
  426ef4:	vxorpd xmm0,xmm0,XMMWORD PTR [rip+0xed54]        # 435c50 <_IO_stdin_used@@Base+0xc50>
  426efc:	vmovlpd QWORD PTR [r13+0x0],xmm0
  426f02:	mov    r14,rbp
  426f05:	jmp    426f80 <flatcc_json_parser_double@@Base+0x520>
  426f07:	mov    rax,rdi
  426f0a:	shr    rax,0x35
  426f0e:	jne    426fd8 <flatcc_json_parser_double@@Base+0x578>
  426f14:	cmp    esi,0x16
  426f17:	ja     426fd8 <flatcc_json_parser_double@@Base+0x578>
  426f1d:	vmovq  xmm0,rdi
  426f22:	vpunpckldq xmm0,xmm0,XMMWORD PTR [rip+0xed06]        # 435c30 <_IO_stdin_used@@Base+0xc30>
  426f2a:	vsubpd xmm0,xmm0,XMMWORD PTR [rip+0xed0e]        # 435c40 <_IO_stdin_used@@Base+0xc40>
  426f32:	vhaddpd xmm0,xmm0,xmm0
  426f36:	sub    esi,edx
  426f38:	add    esi,0x16
  426f3b:	cmp    esi,0x2c
  426f3e:	ja     426ee4 <flatcc_json_parser_double@@Base+0x484>
  426f40:	lea    rax,[rip+0x143c5]        # 43b30c <flatcc_builder_padding_base@@Base+0x1adc>
  426f47:	movsxd rcx,DWORD PTR [rax+rsi*4]
  426f4b:	add    rcx,rax
  426f4e:	jmp    rcx
  426f50:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x14d08]        # 43bc60 <flatcc_builder_padding_base@@Base+0x2430>
  426f58:	jmp    426ee4 <flatcc_json_parser_double@@Base+0x484>
  426f5a:	add    rbp,0x2
  426f5e:	mov    r9d,0x1
  426f64:	cmp    rbp,r15
  426f67:	jne    426f6f <flatcc_json_parser_double@@Base+0x50f>
  426f69:	jmp    426f7d <flatcc_json_parser_double@@Base+0x51d>
  426f6b:	add    rbp,0x1
  426f6f:	movsx  r10d,BYTE PTR [rbp+0x0]
  426f74:	mov    eax,r10d
  426f77:	add    al,0xd0
  426f79:	cmp    al,0x9
  426f7b:	jbe    426f92 <flatcc_json_parser_double@@Base+0x532>
  426f7d:	xor    r14d,r14d
  426f80:	mov    rax,r14
  426f83:	add    rsp,0x28
  426f87:	pop    rbx
  426f88:	pop    r12
  426f8a:	pop    r13
  426f8c:	pop    r14
  426f8e:	pop    r15
  426f90:	pop    rbp
  426f91:	ret    
  426f92:	add    r10d,0xffffffd0
  426f96:	cmp    rbp,r8
  426f99:	lea    rbp,[rbp+0x1]
  426f9d:	je     426dee <flatcc_json_parser_double@@Base+0x38e>
  426fa3:	movsx  eax,BYTE PTR [rbp+0x0]
  426fa7:	mov    ebx,eax
  426fa9:	add    bl,0xd0
  426fac:	cmp    bl,0x9
  426faf:	ja     426dee <flatcc_json_parser_double@@Base+0x38e>
  426fb5:	cmp    r10d,0x7fff
  426fbc:	jg     426fca <flatcc_json_parser_double@@Base+0x56a>
  426fbe:	lea    ebx,[r10+r10*4]
  426fc2:	lea    r10d,[rax+rbx*2]
  426fc6:	add    r10d,0xffffffd0
  426fca:	add    rbp,0x1
  426fce:	cmp    r15,rbp
  426fd1:	jne    426fa3 <flatcc_json_parser_double@@Base+0x543>
  426fd3:	jmp    426dee <flatcc_json_parser_double@@Base+0x38e>
  426fd8:	mov    r8,r13
  426fdb:	call   425270 <grisu3_diy_fp_encode_double@@Base>
  426fe0:	mov    ebx,DWORD PTR [rsp+0xc]
  426fe4:	test   eax,eax
  426fe6:	jne    426eea <flatcc_json_parser_double@@Base+0x48a>
  426fec:	lea    rsi,[rsp+0x20]
  426ff1:	mov    rdi,r14
  426ff4:	call   406050 <strtod@plt>
  426ff9:	vmovsd QWORD PTR [r13+0x0],xmm0
  426fff:	mov    rax,QWORD PTR [rsp+0x20]
  427004:	cmp    rax,rbp
  427007:	cmovb  rbp,rax
  42700b:	jmp    426f02 <flatcc_json_parser_double@@Base+0x4a2>
  427010:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x14ba0]        # 43bbb8 <flatcc_builder_padding_base@@Base+0x2388>
  427018:	jmp    426ee4 <flatcc_json_parser_double@@Base+0x484>
  42701d:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x14b9b]        # 43bbc0 <flatcc_builder_padding_base@@Base+0x2390>
  427025:	jmp    426ee4 <flatcc_json_parser_double@@Base+0x484>
  42702a:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x14b96]        # 43bbc8 <flatcc_builder_padding_base@@Base+0x2398>
  427032:	jmp    426ee4 <flatcc_json_parser_double@@Base+0x484>
  427037:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x14b91]        # 43bbd0 <flatcc_builder_padding_base@@Base+0x23a0>
  42703f:	jmp    426ee4 <flatcc_json_parser_double@@Base+0x484>
  427044:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x14b8c]        # 43bbd8 <flatcc_builder_padding_base@@Base+0x23a8>
  42704c:	jmp    426ee4 <flatcc_json_parser_double@@Base+0x484>
  427051:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x14b87]        # 43bbe0 <flatcc_builder_padding_base@@Base+0x23b0>
  427059:	jmp    426ee4 <flatcc_json_parser_double@@Base+0x484>
  42705e:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x14b82]        # 43bbe8 <flatcc_builder_padding_base@@Base+0x23b8>
  427066:	jmp    426ee4 <flatcc_json_parser_double@@Base+0x484>
  42706b:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x14b7d]        # 43bbf0 <flatcc_builder_padding_base@@Base+0x23c0>
  427073:	jmp    426ee4 <flatcc_json_parser_double@@Base+0x484>
  427078:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x14b78]        # 43bbf8 <flatcc_builder_padding_base@@Base+0x23c8>
  427080:	jmp    426ee4 <flatcc_json_parser_double@@Base+0x484>
  427085:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x14b73]        # 43bc00 <flatcc_builder_padding_base@@Base+0x23d0>
  42708d:	jmp    426ee4 <flatcc_json_parser_double@@Base+0x484>
  427092:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x14b6e]        # 43bc08 <flatcc_builder_padding_base@@Base+0x23d8>
  42709a:	jmp    426ee4 <flatcc_json_parser_double@@Base+0x484>
  42709f:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x14b69]        # 43bc10 <flatcc_builder_padding_base@@Base+0x23e0>
  4270a7:	jmp    426ee4 <flatcc_json_parser_double@@Base+0x484>
  4270ac:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x14b64]        # 43bc18 <flatcc_builder_padding_base@@Base+0x23e8>
  4270b4:	jmp    426ee4 <flatcc_json_parser_double@@Base+0x484>
  4270b9:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x14b5f]        # 43bc20 <flatcc_builder_padding_base@@Base+0x23f0>
  4270c1:	jmp    426ee4 <flatcc_json_parser_double@@Base+0x484>
  4270c6:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x14b5a]        # 43bc28 <flatcc_builder_padding_base@@Base+0x23f8>
  4270ce:	jmp    426ee4 <flatcc_json_parser_double@@Base+0x484>
  4270d3:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x14b55]        # 43bc30 <flatcc_builder_padding_base@@Base+0x2400>
  4270db:	jmp    426ee4 <flatcc_json_parser_double@@Base+0x484>
  4270e0:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x14b50]        # 43bc38 <flatcc_builder_padding_base@@Base+0x2408>
  4270e8:	jmp    426ee4 <flatcc_json_parser_double@@Base+0x484>
  4270ed:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x14b4b]        # 43bc40 <flatcc_builder_padding_base@@Base+0x2410>
  4270f5:	jmp    426ee4 <flatcc_json_parser_double@@Base+0x484>
  4270fa:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x14b46]        # 43bc48 <flatcc_builder_padding_base@@Base+0x2418>
  427102:	jmp    426ee4 <flatcc_json_parser_double@@Base+0x484>
  427107:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x14b41]        # 43bc50 <flatcc_builder_padding_base@@Base+0x2420>
  42710f:	jmp    426ee4 <flatcc_json_parser_double@@Base+0x484>
  427114:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x14b3c]        # 43bc58 <flatcc_builder_padding_base@@Base+0x2428>
  42711c:	jmp    426ee4 <flatcc_json_parser_double@@Base+0x484>
  427121:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x14b2f]        # 43bc58 <flatcc_builder_padding_base@@Base+0x2428>
  427129:	jmp    426ee4 <flatcc_json_parser_double@@Base+0x484>
  42712e:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x14b1a]        # 43bc50 <flatcc_builder_padding_base@@Base+0x2420>
  427136:	jmp    426ee4 <flatcc_json_parser_double@@Base+0x484>
  42713b:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x14b05]        # 43bc48 <flatcc_builder_padding_base@@Base+0x2418>
  427143:	jmp    426ee4 <flatcc_json_parser_double@@Base+0x484>
  427148:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x14af0]        # 43bc40 <flatcc_builder_padding_base@@Base+0x2410>
  427150:	jmp    426ee4 <flatcc_json_parser_double@@Base+0x484>
  427155:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x14adb]        # 43bc38 <flatcc_builder_padding_base@@Base+0x2408>
  42715d:	jmp    426ee4 <flatcc_json_parser_double@@Base+0x484>
  427162:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x14ac6]        # 43bc30 <flatcc_builder_padding_base@@Base+0x2400>
  42716a:	jmp    426ee4 <flatcc_json_parser_double@@Base+0x484>
  42716f:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x14ab1]        # 43bc28 <flatcc_builder_padding_base@@Base+0x23f8>
  427177:	jmp    426ee4 <flatcc_json_parser_double@@Base+0x484>
  42717c:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x14a9c]        # 43bc20 <flatcc_builder_padding_base@@Base+0x23f0>
  427184:	jmp    426ee4 <flatcc_json_parser_double@@Base+0x484>
  427189:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x14a87]        # 43bc18 <flatcc_builder_padding_base@@Base+0x23e8>
  427191:	jmp    426ee4 <flatcc_json_parser_double@@Base+0x484>
  427196:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x14a72]        # 43bc10 <flatcc_builder_padding_base@@Base+0x23e0>
  42719e:	jmp    426ee4 <flatcc_json_parser_double@@Base+0x484>
  4271a3:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x14a5d]        # 43bc08 <flatcc_builder_padding_base@@Base+0x23d8>
  4271ab:	jmp    426ee4 <flatcc_json_parser_double@@Base+0x484>
  4271b0:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x14a48]        # 43bc00 <flatcc_builder_padding_base@@Base+0x23d0>
  4271b8:	jmp    426ee4 <flatcc_json_parser_double@@Base+0x484>
  4271bd:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x14a33]        # 43bbf8 <flatcc_builder_padding_base@@Base+0x23c8>
  4271c5:	jmp    426ee4 <flatcc_json_parser_double@@Base+0x484>
  4271ca:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x14a1e]        # 43bbf0 <flatcc_builder_padding_base@@Base+0x23c0>
  4271d2:	jmp    426ee4 <flatcc_json_parser_double@@Base+0x484>
  4271d7:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x14a09]        # 43bbe8 <flatcc_builder_padding_base@@Base+0x23b8>
  4271df:	jmp    426ee4 <flatcc_json_parser_double@@Base+0x484>
  4271e4:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x149f4]        # 43bbe0 <flatcc_builder_padding_base@@Base+0x23b0>
  4271ec:	jmp    426ee4 <flatcc_json_parser_double@@Base+0x484>
  4271f1:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x149df]        # 43bbd8 <flatcc_builder_padding_base@@Base+0x23a8>
  4271f9:	jmp    426ee4 <flatcc_json_parser_double@@Base+0x484>
  4271fe:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x149ca]        # 43bbd0 <flatcc_builder_padding_base@@Base+0x23a0>
  427206:	jmp    426ee4 <flatcc_json_parser_double@@Base+0x484>
  42720b:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x149b5]        # 43bbc8 <flatcc_builder_padding_base@@Base+0x2398>
  427213:	jmp    426ee4 <flatcc_json_parser_double@@Base+0x484>
  427218:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x149a0]        # 43bbc0 <flatcc_builder_padding_base@@Base+0x2390>
  427220:	jmp    426ee4 <flatcc_json_parser_double@@Base+0x484>
  427225:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x1498b]        # 43bbb8 <flatcc_builder_padding_base@@Base+0x2388>
  42722d:	jmp    426ee4 <flatcc_json_parser_double@@Base+0x484>
  427232:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x14a26]        # 43bc60 <flatcc_builder_padding_base@@Base+0x2430>
  42723a:	jmp    426ee4 <flatcc_json_parser_double@@Base+0x484>
  42723f:	nop

0000000000427240 <flatcc_json_parser_float@@Base>:
  427240:	push   r15
  427242:	push   r14
  427244:	push   r12
  427246:	push   rbx
  427247:	push   rax
  427248:	mov    rbx,rsi
  42724b:	mov    DWORD PTR [rcx],0x0
  427251:	cmp    rsi,rdx
  427254:	je     427323 <flatcc_json_parser_float@@Base+0xe3>
  42725a:	mov    r12,rcx
  42725d:	mov    r14,rdx
  427260:	mov    r15,rdi
  427263:	lea    rax,[rbx+0x1]
  427267:	xor    ecx,ecx
  427269:	cmp    BYTE PTR [rbx],0x2d
  42726c:	sete   dl
  42726f:	cmovne rax,rbx
  427273:	mov    rsi,r14
  427276:	sub    rsi,rax
  427279:	cmp    rsi,0x2
  42727d:	jl     4272a4 <flatcc_json_parser_float@@Base+0x64>
  42727f:	mov    cl,dl
  427281:	mov    cl,BYTE PTR [rbx+rcx*1]
  427284:	cmp    cl,0x2e
  427287:	je     427294 <flatcc_json_parser_float@@Base+0x54>
  427289:	cmp    cl,0x30
  42728c:	jne    4272a4 <flatcc_json_parser_float@@Base+0x64>
  42728e:	cmp    BYTE PTR [rax+0x1],0x30
  427292:	jne    4272a4 <flatcc_json_parser_float@@Base+0x64>
  427294:	cmp    DWORD PTR [r15+0x20],0x0
  427299:	jne    427347 <flatcc_json_parser_float@@Base+0x107>
  42729f:	jmp    42732c <flatcc_json_parser_float@@Base+0xec>
  4272a4:	mov    esi,r14d
  4272a7:	sub    esi,ebx
  4272a9:	mov    rdx,rsp
  4272ac:	mov    rdi,rbx
  4272af:	call   426b40 <flatcc_json_parser_double@@Base+0xe0>
  4272b4:	vmovsd xmm0,QWORD PTR [rsp]
  4272b9:	vxorps xmm1,xmm1,xmm1
  4272bd:	xor    ecx,ecx
  4272bf:	vucomisd xmm1,xmm0
  4272c3:	seta   dl
  4272c6:	vcvtsd2ss xmm1,xmm0,xmm0
  4272ca:	vbroadcastss xmm0,DWORD PTR [rip+0x1499d]        # 43bc70 <flatcc_builder_padding_base@@Base+0x2440>
  4272d3:	vandps xmm2,xmm1,xmm0
  4272d7:	vucomiss xmm2,DWORD PTR [rip+0x14995]        # 43bc74 <flatcc_builder_padding_base@@Base+0x2444>
  4272df:	jb     4272ef <flatcc_json_parser_float@@Base+0xaf>
  4272e1:	mov    cl,dl
  4272e3:	lea    rdx,[rip+0x1497e]        # 43bc68 <flatcc_builder_padding_base@@Base+0x2438>
  4272ea:	vmovss xmm1,DWORD PTR [rdx+rcx*4]
  4272ef:	cmovae rax,rbx
  4272f3:	vmovss DWORD PTR [r12],xmm1
  4272f9:	test   rax,rax
  4272fc:	je     427303 <flatcc_json_parser_float@@Base+0xc3>
  4272fe:	cmp    rax,rbx
  427301:	jne    42734a <flatcc_json_parser_float@@Base+0x10a>
  427303:	vandps xmm0,xmm1,xmm0
  427307:	vucomiss xmm0,DWORD PTR [rip+0x14965]        # 43bc74 <flatcc_builder_padding_base@@Base+0x2444>
  42730f:	mov    eax,DWORD PTR [r15+0x20]
  427313:	jb     427328 <flatcc_json_parser_float@@Base+0xe8>
  427315:	test   eax,eax
  427317:	jne    427347 <flatcc_json_parser_float@@Base+0x107>
  427319:	mov    DWORD PTR [r15+0x20],0x7
  427321:	jmp    427334 <flatcc_json_parser_float@@Base+0xf4>
  427323:	mov    rax,rbx
  427326:	jmp    42734a <flatcc_json_parser_float@@Base+0x10a>
  427328:	test   eax,eax
  42732a:	jne    427347 <flatcc_json_parser_float@@Base+0x107>
  42732c:	mov    DWORD PTR [r15+0x20],0x6
  427334:	mov    eax,DWORD PTR [r15+0x8]
  427338:	mov    ecx,ebx
  42733a:	sub    ecx,eax
  42733c:	add    ecx,0x1
  42733f:	mov    DWORD PTR [r15+0x1c],ecx
  427343:	mov    QWORD PTR [r15+0x38],rbx
  427347:	mov    rax,r14
  42734a:	add    rsp,0x8
  42734e:	pop    rbx
  42734f:	pop    r12
  427351:	pop    r14
  427353:	pop    r15
  427355:	ret    
  427356:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000427360 <flatcc_json_parser_integer@@Base>:
  427360:	cmp    rsi,rdx
  427363:	je     4273fb <flatcc_json_parser_integer@@Base+0x9b>
  427369:	xor    r10d,r10d
  42736c:	cmp    BYTE PTR [rsi],0x2d
  42736f:	sete   r10b
  427373:	mov    DWORD PTR [rcx],r10d
  427376:	add    r10,rsi
  427379:	xor    r9d,r9d
  42737c:	cmp    r10,rdx
  42737f:	je     4273f1 <flatcc_json_parser_integer@@Base+0x91>
  427381:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42738b:	nop    DWORD PTR [rax+rax*1+0x0]
  427390:	movsx  r11,BYTE PTR [r10]
  427394:	mov    eax,r11d
  427397:	add    al,0xd0
  427399:	cmp    al,0x9
  42739b:	ja     427409 <flatcc_json_parser_integer@@Base+0xa9>
  42739d:	lea    rax,[r9+r9*4]
  4273a1:	lea    rax,[r11+rax*2]
  4273a5:	add    rax,0xffffffffffffffd0
  4273a9:	cmp    r9,rax
  4273ac:	ja     427412 <flatcc_json_parser_integer@@Base+0xb2>
  4273ae:	add    r10,0x1
  4273b2:	mov    r9,rax
  4273b5:	cmp    rdx,r10
  4273b8:	jne    427390 <flatcc_json_parser_integer@@Base+0x30>
  4273ba:	xor    ecx,ecx
  4273bc:	mov    r10,rdx
  4273bf:	mov    r9,rax
  4273c2:	cmp    r10,rsi
  4273c5:	je     4273fb <flatcc_json_parser_integer@@Base+0x9b>
  4273c7:	test   cl,cl
  4273c9:	je     4273ff <flatcc_json_parser_integer@@Base+0x9f>
  4273cb:	mov    al,BYTE PTR [r10]
  4273ce:	add    al,0xd2
  4273d0:	cmp    al,0x37
  4273d2:	ja     4273ff <flatcc_json_parser_integer@@Base+0x9f>
  4273d4:	movzx  eax,al
  4273d7:	movabs rcx,0x80000000800001
  4273e1:	bt     rcx,rax
  4273e5:	jae    4273ff <flatcc_json_parser_integer@@Base+0x9f>
  4273e7:	cmp    DWORD PTR [rdi+0x20],0x0
  4273eb:	je     42741c <flatcc_json_parser_integer@@Base+0xbc>
  4273ed:	mov    rax,rdx
  4273f0:	ret    
  4273f1:	mov    r10,rdx
  4273f4:	xor    ecx,ecx
  4273f6:	cmp    r10,rsi
  4273f9:	jne    4273c7 <flatcc_json_parser_integer@@Base+0x67>
  4273fb:	mov    rax,rsi
  4273fe:	ret    
  4273ff:	mov    QWORD PTR [r8],r9
  427402:	mov    rsi,r10
  427405:	mov    rax,rsi
  427408:	ret    
  427409:	mov    cl,0x1
  42740b:	cmp    r10,rsi
  42740e:	jne    4273c7 <flatcc_json_parser_integer@@Base+0x67>
  427410:	jmp    4273fb <flatcc_json_parser_integer@@Base+0x9b>
  427412:	cmp    DWORD PTR [rdi+0x20],0x0
  427416:	je     427425 <flatcc_json_parser_integer@@Base+0xc5>
  427418:	mov    rax,rdx
  42741b:	ret    
  42741c:	mov    DWORD PTR [rdi+0x20],0xc
  427423:	jmp    427434 <flatcc_json_parser_integer@@Base+0xd4>
  427425:	cmp    rcx,0x1
  427429:	mov    eax,0x8
  42742e:	sbb    eax,0x0
  427431:	mov    DWORD PTR [rdi+0x20],eax
  427434:	mov    eax,DWORD PTR [rdi+0x8]
  427437:	mov    ecx,r10d
  42743a:	sub    ecx,eax
  42743c:	add    ecx,0x1
  42743f:	mov    DWORD PTR [rdi+0x1c],ecx
  427442:	mov    QWORD PTR [rdi+0x38],r10
  427446:	mov    rax,rdx
  427449:	ret    
  42744a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000427450 <flatcc_json_parser_build_uint8_vector_base64@@Base>:
  427450:	push   rbp
  427451:	push   r15
  427453:	push   r14
  427455:	push   r13
  427457:	push   r12
  427459:	push   rbx
  42745a:	sub    rsp,0x28
  42745e:	mov    r12d,r8d
  427461:	mov    r15,rcx
  427464:	mov    r14,rdx
  427467:	mov    r13,rsi
  42746a:	mov    rbx,rdi
  42746d:	cmp    rsi,rdx
  427470:	je     4274ba <flatcc_json_parser_build_uint8_vector_base64@@Base+0x6a>
  427472:	cmp    BYTE PTR [r13+0x0],0x22
  427477:	jne    4274ba <flatcc_json_parser_build_uint8_vector_base64@@Base+0x6a>
  427479:	add    r13,0x1
  42747d:	cmp    r13,r14
  427480:	je     4274d9 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x89>
  427482:	mov    rbp,r13
  427485:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42748f:	nop
  427490:	movzx  ecx,BYTE PTR [rbp+0x0]
  427494:	cmp    cl,0x20
  427497:	jb     42753d <flatcc_json_parser_build_uint8_vector_base64@@Base+0xed>
  42749d:	cmp    cl,0x22
  4274a0:	je     427560 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x110>
  4274a6:	cmp    cl,0x5c
  4274a9:	je     427560 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x110>
  4274af:	add    rbp,0x1
  4274b3:	cmp    r14,rbp
  4274b6:	jne    427490 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x40>
  4274b8:	jmp    4274d9 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x89>
  4274ba:	cmp    DWORD PTR [rbx+0x20],0x0
  4274be:	jne    4274d9 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x89>
  4274c0:	mov    DWORD PTR [rbx+0x20],0x10
  4274c7:	mov    eax,DWORD PTR [rbx+0x8]
  4274ca:	mov    ecx,r13d
  4274cd:	sub    ecx,eax
  4274cf:	add    ecx,0x1
  4274d2:	mov    DWORD PTR [rbx+0x1c],ecx
  4274d5:	mov    QWORD PTR [rbx+0x38],r13
  4274d9:	cmp    DWORD PTR [rbx+0x20],0x0
  4274dd:	mov    rax,r14
  4274e0:	jne    4274fe <flatcc_json_parser_build_uint8_vector_base64@@Base+0xae>
  4274e2:	mov    DWORD PTR [rbx+0x20],0x14
  4274e9:	mov    eax,DWORD PTR [rbx+0x8]
  4274ec:	mov    ecx,r14d
  4274ef:	sub    ecx,eax
  4274f1:	add    ecx,0x1
  4274f4:	mov    DWORD PTR [rbx+0x1c],ecx
  4274f7:	mov    QWORD PTR [rbx+0x38],r14
  4274fb:	mov    rax,r14
  4274fe:	mov    DWORD PTR [r15],0x0
  427505:	cmp    DWORD PTR [rbx+0x20],0x0
  427509:	jne    42752b <flatcc_json_parser_build_uint8_vector_base64@@Base+0xdb>
  42750b:	cmp    r12d,0x1
  42750f:	mov    ecx,0x1f
  427514:	sbb    ecx,0xffffffff
  427517:	mov    DWORD PTR [rbx+0x20],ecx
  42751a:	mov    ecx,DWORD PTR [rbx+0x8]
  42751d:	mov    edx,eax
  42751f:	sub    edx,ecx
  427521:	add    edx,0x1
  427524:	mov    DWORD PTR [rbx+0x1c],edx
  427527:	mov    QWORD PTR [rbx+0x38],rax
  42752b:	mov    rax,r14
  42752e:	add    rsp,0x28
  427532:	pop    rbx
  427533:	pop    r12
  427535:	pop    r13
  427537:	pop    r14
  427539:	pop    r15
  42753b:	pop    rbp
  42753c:	ret    
  42753d:	cmp    DWORD PTR [rbx+0x20],0x0
  427541:	mov    rax,r14
  427544:	jne    4274fe <flatcc_json_parser_build_uint8_vector_base64@@Base+0xae>
  427546:	mov    DWORD PTR [rbx+0x20],0x11
  42754d:	mov    eax,DWORD PTR [rbx+0x8]
  427550:	mov    ecx,ebp
  427552:	sub    ecx,eax
  427554:	add    ecx,0x1
  427557:	mov    DWORD PTR [rbx+0x1c],ecx
  42755a:	mov    QWORD PTR [rbx+0x38],rbp
  42755e:	jmp    4274fb <flatcc_json_parser_build_uint8_vector_base64@@Base+0xab>
  427560:	mov    rax,r14
  427563:	cmp    r14,rbp
  427566:	je     4274fe <flatcc_json_parser_build_uint8_vector_base64@@Base+0xae>
  427568:	cmp    cl,0x22
  42756b:	jne    427595 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x145>
  42756d:	mov    rcx,rbp
  427570:	sub    rcx,r13
  427573:	mov    rax,rcx
  427576:	shr    rax,0x2
  42757a:	lea    rdx,[rax+rax*2]
  42757e:	mov    QWORD PTR [rsp+0x18],rcx
  427583:	mov    eax,ecx
  427585:	and    al,0x3
  427587:	cmp    al,0x2
  427589:	je     42759d <flatcc_json_parser_build_uint8_vector_base64@@Base+0x14d>
  42758b:	cmp    al,0x3
  42758d:	jne    4275a1 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x151>
  42758f:	add    rdx,0x2
  427593:	jmp    4275a1 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x151>
  427595:	mov    rax,rbp
  427598:	jmp    4274fe <flatcc_json_parser_build_uint8_vector_base64@@Base+0xae>
  42759d:	add    rdx,0x1
  4275a1:	mov    QWORD PTR [rsp+0x8],rdx
  4275a6:	mov    rdi,QWORD PTR [rbx]
  4275a9:	mov    esi,0x1
  4275ae:	mov    edx,0x1
  4275b3:	mov    ecx,0xffffffff
  4275b8:	call   420730 <flatcc_builder_start_vector@@Base>
  4275bd:	test   eax,eax
  4275bf:	je     4275ef <flatcc_json_parser_build_uint8_vector_base64@@Base+0x19f>
  4275c1:	mov    DWORD PTR [r15],0x0
  4275c8:	cmp    DWORD PTR [rbx+0x20],0x0
  4275cc:	jne    42752b <flatcc_json_parser_build_uint8_vector_base64@@Base+0xdb>
  4275d2:	mov    DWORD PTR [rbx+0x20],0x21
  4275d9:	mov    eax,DWORD PTR [rbx+0x8]
  4275dc:	mov    ecx,ebp
  4275de:	sub    ecx,eax
  4275e0:	add    ecx,0x1
  4275e3:	mov    DWORD PTR [rbx+0x1c],ecx
  4275e6:	mov    QWORD PTR [rbx+0x38],rbp
  4275ea:	jmp    42752b <flatcc_json_parser_build_uint8_vector_base64@@Base+0xdb>
  4275ef:	mov    rdi,QWORD PTR [rbx]
  4275f2:	mov    rsi,QWORD PTR [rsp+0x8]
  4275f7:	call   41fdc0 <flatcc_builder_extend_vector@@Base>
  4275fc:	test   rax,rax
  4275ff:	je     4275c1 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x171>
  427601:	test   r12d,r12d
  427604:	lea    rcx,[rip+0x14495]        # 43baa0 <flatcc_builder_padding_base@@Base+0x2270>
  42760b:	lea    r11,[rip+0x1438e]        # 43b9a0 <flatcc_builder_padding_base@@Base+0x2170>
  427612:	cmovne r11,rcx
  427616:	mov    rcx,QWORD PTR [rsp+0x8]
  42761b:	cmp    rcx,0x1
  42761f:	sbb    r10,r10
  427622:	or     r10,rcx
  427625:	mov    QWORD PTR [rsp+0x20],rax
  42762a:	mov    r9,rax
  42762d:	mov    rdi,QWORD PTR [rsp+0x18]
  427632:	mov    r8,r13
  427635:	mov    rsi,rdi
  427638:	xor    edx,edx
  42763a:	cmp    rsi,rdx
  42763d:	je     4276d1 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x281>
  427643:	movzx  ecx,BYTE PTR [r8+rdx*1]
  427648:	movzx  ecx,BYTE PTR [r11+rcx*1]
  42764d:	mov    BYTE PTR [rsp+rdx*1+0x4],cl
  427651:	cmp    cl,0x40
  427654:	jb     42766b <flatcc_json_parser_build_uint8_vector_base64@@Base+0x21b>
  427656:	cmp    cl,0x41
  427659:	jne    42772b <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2db>
  42765f:	add    r8,0x1
  427663:	add    rsi,0xffffffffffffffff
  427667:	add    rdx,0xffffffffffffffff
  42766b:	add    rdx,0x1
  42766f:	cmp    rdx,0x4
  427673:	jb     42763a <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1ea>
  427675:	cmp    r10,0x3
  427679:	jb     4277b0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x360>
  42767f:	mov    al,BYTE PTR [rsp+0x4]
  427683:	mov    cl,BYTE PTR [rsp+0x5]
  427687:	shl    al,0x2
  42768a:	mov    edx,ecx
  42768c:	shr    dl,0x4
  42768f:	or     dl,al
  427691:	mov    BYTE PTR [r9],dl
  427694:	shl    cl,0x4
  427697:	mov    al,BYTE PTR [rsp+0x6]
  42769b:	shr    al,0x2
  42769e:	or     al,cl
  4276a0:	mov    BYTE PTR [r9+0x1],al
  4276a4:	mov    al,BYTE PTR [rsp+0x6]
  4276a8:	shl    al,0x6
  4276ab:	or     al,BYTE PTR [rsp+0x7]
  4276af:	mov    BYTE PTR [r9+0x2],al
  4276b3:	add    r9,0x3
  4276b7:	add    r8,0x4
  4276bb:	add    rsi,0xfffffffffffffffc
  4276bf:	mov    rdi,rsi
  4276c2:	add    r10,0xfffffffffffffffd
  4276c6:	jne    427638 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1e8>
  4276cc:	jmp    4277a1 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x351>
  4276d1:	mov    QWORD PTR [rsp+0x10],rdi
  4276d6:	mov    rdx,rsi
  4276d9:	mov    rdi,rsi
  4276dc:	sub    rsi,rdi
  4276df:	test   rdx,rdx
  4276e2:	je     4277a1 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x351>
  4276e8:	cmp    rdx,0x3
  4276ec:	je     427764 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x314>
  4276ee:	cmp    rdx,0x2
  4276f2:	mov    rdi,QWORD PTR [rsp+0x10]
  4276f7:	jne    4277b0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x360>
  4276fd:	mov    cl,BYTE PTR [rsp+0x5]
  427701:	test   cl,0xf
  427704:	jne    4277b0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x360>
  42770a:	mov    al,BYTE PTR [rsp+0x4]
  42770e:	shl    al,0x2
  427711:	shr    cl,0x4
  427714:	or     cl,al
  427716:	mov    BYTE PTR [r9],cl
  427719:	add    r9,0x1
  42771d:	test   rsi,rsi
  427720:	jne    4277a6 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x356>
  427726:	jmp    4277c3 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x373>
  42772b:	mov    QWORD PTR [rsp+0x10],rdi
  427730:	cmp    cl,0x42
  427733:	jne    427809 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3b9>
  427739:	lea    rcx,[rdx+0x1]
  42773d:	mov    rdi,rcx
  427740:	cmp    rcx,rsi
  427743:	jae    4276dc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x28c>
  427745:	cmp    rdi,0x7
  427749:	ja     4276dc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x28c>
  42774b:	movzx  ecx,BYTE PTR [r8+rdi*1]
  427750:	movzx  eax,BYTE PTR [r11+rcx*1]
  427755:	add    al,0xbf
  427757:	lea    rcx,[rdi+0x1]
  42775b:	cmp    al,0x2
  42775d:	jb     42773d <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2ed>
  42775f:	jmp    4276dc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x28c>
  427764:	cmp    r10,0x2
  427768:	mov    rdi,QWORD PTR [rsp+0x10]
  42776d:	jb     4277b0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x360>
  42776f:	mov    cl,BYTE PTR [rsp+0x6]
  427773:	mov    eax,ecx
  427775:	and    al,0x3
  427777:	jne    4277b0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x360>
  427779:	mov    dil,BYTE PTR [rsp+0x4]
  42777e:	mov    al,BYTE PTR [rsp+0x5]
  427782:	shl    dil,0x2
  427786:	mov    edx,eax
  427788:	shr    dl,0x4
  42778b:	or     dl,dil
  42778e:	mov    BYTE PTR [r9],dl
  427791:	shl    al,0x4
  427794:	shr    cl,0x2
  427797:	or     cl,al
  427799:	mov    BYTE PTR [r9+0x1],cl
  42779d:	add    r9,0x2
  4277a1:	test   rsi,rsi
  4277a4:	je     4277c3 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x373>
  4277a6:	mov    rax,QWORD PTR [rsp+0x18]
  4277ab:	sub    rax,rsi
  4277ae:	jmp    4277b8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x368>
  4277b0:	mov    rax,QWORD PTR [rsp+0x18]
  4277b5:	sub    rax,rdi
  4277b8:	add    r13,rax
  4277bb:	mov    rax,r13
  4277be:	jmp    4274fe <flatcc_json_parser_build_uint8_vector_base64@@Base+0xae>
  4277c3:	sub    r9,QWORD PTR [rsp+0x20]
  4277c8:	sub    QWORD PTR [rsp+0x8],r9
  4277cd:	jbe    4277e4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x394>
  4277cf:	mov    rdi,QWORD PTR [rbx]
  4277d2:	mov    rsi,QWORD PTR [rsp+0x8]
  4277d7:	call   4205a0 <flatcc_builder_truncate_vector@@Base>
  4277dc:	test   eax,eax
  4277de:	jne    4275c1 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x171>
  4277e4:	mov    rdi,QWORD PTR [rbx]
  4277e7:	call   4218c0 <flatcc_builder_end_vector@@Base>
  4277ec:	mov    DWORD PTR [r15],eax
  4277ef:	test   eax,eax
  4277f1:	je     4275c1 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x171>
  4277f7:	cmp    BYTE PTR [rbp+0x0],0x22
  4277fb:	jne    427811 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3c1>
  4277fd:	add    rbp,0x1
  427801:	mov    r14,rbp
  427804:	jmp    42752b <flatcc_json_parser_build_uint8_vector_base64@@Base+0xdb>
  427809:	mov    rdi,rdx
  42780c:	jmp    4276dc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x28c>
  427811:	cmp    DWORD PTR [rbx+0x20],0x0
  427815:	jne    42752b <flatcc_json_parser_build_uint8_vector_base64@@Base+0xdb>
  42781b:	mov    DWORD PTR [rbx+0x20],0x14
  427822:	jmp    4275d9 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x189>
  427827:	nop    WORD PTR [rax+rax*1+0x0]

0000000000427830 <flatcc_json_parser_build_string@@Base>:
  427830:	push   rbp
  427831:	push   r15
  427833:	push   r14
  427835:	push   r13
  427837:	push   r12
  427839:	push   rbx
  42783a:	push   rax
  42783b:	mov    r15,rcx
  42783e:	mov    r12,rdx
  427841:	mov    r14,rdi
  427844:	cmp    rsi,rdx
  427847:	je     427890 <flatcc_json_parser_build_string@@Base+0x60>
  427849:	cmp    BYTE PTR [rsi],0x22
  42784c:	jne    427890 <flatcc_json_parser_build_string@@Base+0x60>
  42784e:	add    rsi,0x1
  427852:	mov    rbp,r12
  427855:	cmp    rsi,r12
  427858:	je     42789e <flatcc_json_parser_build_string@@Base+0x6e>
  42785a:	mov    rbx,rsi
  42785d:	nop    DWORD PTR [rax]
  427860:	movzx  eax,BYTE PTR [rbx]
  427863:	cmp    al,0x20
  427865:	jb     4279e0 <flatcc_json_parser_build_string@@Base+0x1b0>
  42786b:	cmp    al,0x22
  42786d:	je     427a04 <flatcc_json_parser_build_string@@Base+0x1d4>
  427873:	cmp    al,0x5c
  427875:	je     427a04 <flatcc_json_parser_build_string@@Base+0x1d4>
  42787b:	add    rbx,0x1
  42787f:	cmp    r12,rbx
  427882:	jne    427860 <flatcc_json_parser_build_string@@Base+0x30>
  427884:	mov    rbp,rsi
  427887:	cmp    DWORD PTR [r14+0x20],0x0
  42788c:	jne    4278c1 <flatcc_json_parser_build_string@@Base+0x91>
  42788e:	jmp    4278a5 <flatcc_json_parser_build_string@@Base+0x75>
  427890:	cmp    DWORD PTR [r14+0x20],0x0
  427895:	mov    rbp,r12
  427898:	je     4279b2 <flatcc_json_parser_build_string@@Base+0x182>
  42789e:	cmp    DWORD PTR [r14+0x20],0x0
  4278a3:	jne    4278c1 <flatcc_json_parser_build_string@@Base+0x91>
  4278a5:	mov    DWORD PTR [r14+0x20],0x14
  4278ad:	mov    eax,DWORD PTR [r14+0x8]
  4278b1:	mov    ecx,r12d
  4278b4:	sub    ecx,eax
  4278b6:	add    ecx,0x1
  4278b9:	mov    DWORD PTR [r14+0x1c],ecx
  4278bd:	mov    QWORD PTR [r14+0x38],r12
  4278c1:	mov    rbx,r12
  4278c4:	mov    rdi,QWORD PTR [r14]
  4278c7:	call   420a30 <flatcc_builder_start_string@@Base>
  4278cc:	test   eax,eax
  4278ce:	je     4278ec <flatcc_json_parser_build_string@@Base+0xbc>
  4278d0:	mov    DWORD PTR [r15],0x0
  4278d7:	mov    r12,rbx
  4278da:	mov    rax,r12
  4278dd:	add    rsp,0x8
  4278e1:	pop    rbx
  4278e2:	pop    r12
  4278e4:	pop    r13
  4278e6:	pop    r14
  4278e8:	pop    r15
  4278ea:	pop    rbp
  4278eb:	ret    
  4278ec:	mov    rdi,QWORD PTR [r14]
  4278ef:	mov    rdx,rbx
  4278f2:	sub    rdx,rbp
  4278f5:	mov    rsi,rbp
  4278f8:	call   420430 <flatcc_builder_append_string@@Base>
  4278fd:	test   rax,rax
  427900:	je     4278d0 <flatcc_json_parser_build_string@@Base+0xa0>
  427902:	mov    rbp,r12
  427905:	cmp    rbx,r12
  427908:	je     427a78 <flatcc_json_parser_build_string@@Base+0x248>
  42790e:	lea    rbp,[rsp+0x4]
  427913:	cmp    BYTE PTR [rbx],0x22
  427916:	je     427ac4 <flatcc_json_parser_build_string@@Base+0x294>
  42791c:	mov    rdi,r14
  42791f:	mov    rsi,rbx
  427922:	mov    rdx,r12
  427925:	mov    rcx,rbp
  427928:	call   425840 <flatcc_json_parser_string_escape@@Base>
  42792d:	mov    r13,rax
  427930:	mov    rdi,QWORD PTR [r14]
  427933:	movsx  rdx,BYTE PTR [rsp+0x4]
  427939:	lea    rsi,[rsp+0x5]
  42793e:	call   420430 <flatcc_builder_append_string@@Base>
  427943:	test   rax,rax
  427946:	je     427ac9 <flatcc_json_parser_build_string@@Base+0x299>
  42794c:	cmp    r13,r12
  42794f:	je     427a28 <flatcc_json_parser_build_string@@Base+0x1f8>
  427955:	mov    rbx,r13
  427958:	nop    DWORD PTR [rax+rax*1+0x0]
  427960:	movzx  eax,BYTE PTR [rbx]
  427963:	cmp    al,0x20
  427965:	jb     427a50 <flatcc_json_parser_build_string@@Base+0x220>
  42796b:	cmp    al,0x22
  42796d:	je     427981 <flatcc_json_parser_build_string@@Base+0x151>
  42796f:	cmp    al,0x5c
  427971:	je     427981 <flatcc_json_parser_build_string@@Base+0x151>
  427973:	add    rbx,0x1
  427977:	cmp    r12,rbx
  42797a:	jne    427960 <flatcc_json_parser_build_string@@Base+0x130>
  42797c:	jmp    427a28 <flatcc_json_parser_build_string@@Base+0x1f8>
  427981:	cmp    r12,rbx
  427984:	je     427a75 <flatcc_json_parser_build_string@@Base+0x245>
  42798a:	mov    rdi,QWORD PTR [r14]
  42798d:	mov    rdx,rbx
  427990:	sub    rdx,r13
  427993:	mov    rsi,r13
  427996:	call   420430 <flatcc_builder_append_string@@Base>
  42799b:	test   rax,rax
  42799e:	je     4278d0 <flatcc_json_parser_build_string@@Base+0xa0>
  4279a4:	cmp    r12,rbx
  4279a7:	jne    427913 <flatcc_json_parser_build_string@@Base+0xe3>
  4279ad:	jmp    427a75 <flatcc_json_parser_build_string@@Base+0x245>
  4279b2:	mov    DWORD PTR [r14+0x20],0x10
  4279ba:	mov    eax,DWORD PTR [r14+0x8]
  4279be:	mov    ecx,esi
  4279c0:	sub    ecx,eax
  4279c2:	add    ecx,0x1
  4279c5:	mov    DWORD PTR [r14+0x1c],ecx
  4279c9:	mov    QWORD PTR [r14+0x38],rsi
  4279cd:	mov    rbp,r12
  4279d0:	cmp    DWORD PTR [r14+0x20],0x0
  4279d5:	jne    4278c1 <flatcc_json_parser_build_string@@Base+0x91>
  4279db:	jmp    4278a5 <flatcc_json_parser_build_string@@Base+0x75>
  4279e0:	cmp    DWORD PTR [r14+0x20],0x0
  4279e5:	jne    427a1d <flatcc_json_parser_build_string@@Base+0x1ed>
  4279e7:	mov    DWORD PTR [r14+0x20],0x11
  4279ef:	mov    eax,DWORD PTR [r14+0x8]
  4279f3:	mov    ecx,ebx
  4279f5:	sub    ecx,eax
  4279f7:	add    ecx,0x1
  4279fa:	mov    DWORD PTR [r14+0x1c],ecx
  4279fe:	mov    QWORD PTR [r14+0x38],rbx
  427a02:	jmp    427a1d <flatcc_json_parser_build_string@@Base+0x1ed>
  427a04:	cmp    r12,rbx
  427a07:	je     427a1d <flatcc_json_parser_build_string@@Base+0x1ed>
  427a09:	cmp    al,0x22
  427a0b:	jne    427a20 <flatcc_json_parser_build_string@@Base+0x1f0>
  427a0d:	mov    rdi,QWORD PTR [r14]
  427a10:	mov    rdx,rbx
  427a13:	sub    rdx,rsi
  427a16:	call   422cd0 <flatcc_builder_create_string@@Base>
  427a1b:	jmp    427a83 <flatcc_json_parser_build_string@@Base+0x253>
  427a1d:	mov    rbx,r12
  427a20:	mov    rbp,rsi
  427a23:	jmp    4278c4 <flatcc_json_parser_build_string@@Base+0x94>
  427a28:	cmp    DWORD PTR [r14+0x20],0x0
  427a2d:	mov    rbp,r12
  427a30:	jne    427a78 <flatcc_json_parser_build_string@@Base+0x248>
  427a32:	mov    DWORD PTR [r14+0x20],0x14
  427a3a:	mov    eax,DWORD PTR [r14+0x8]
  427a3e:	mov    ecx,r12d
  427a41:	sub    ecx,eax
  427a43:	add    ecx,0x1
  427a46:	mov    DWORD PTR [r14+0x1c],ecx
  427a4a:	mov    QWORD PTR [r14+0x38],r12
  427a4e:	jmp    427a75 <flatcc_json_parser_build_string@@Base+0x245>
  427a50:	cmp    DWORD PTR [r14+0x20],0x0
  427a55:	mov    rbp,r12
  427a58:	jne    427a78 <flatcc_json_parser_build_string@@Base+0x248>
  427a5a:	mov    DWORD PTR [r14+0x20],0x11
  427a62:	mov    eax,DWORD PTR [r14+0x8]
  427a66:	mov    ecx,ebx
  427a68:	sub    ecx,eax
  427a6a:	add    ecx,0x1
  427a6d:	mov    DWORD PTR [r14+0x1c],ecx
  427a71:	mov    QWORD PTR [r14+0x38],rbx
  427a75:	mov    rbp,r12
  427a78:	mov    rdi,QWORD PTR [r14]
  427a7b:	call   422e80 <flatcc_builder_end_string@@Base>
  427a80:	mov    rbx,rbp
  427a83:	mov    DWORD PTR [r15],eax
  427a86:	cmp    rbx,r12
  427a89:	je     427a99 <flatcc_json_parser_build_string@@Base+0x269>
  427a8b:	cmp    BYTE PTR [rbx],0x22
  427a8e:	jne    427a99 <flatcc_json_parser_build_string@@Base+0x269>
  427a90:	add    rbx,0x1
  427a94:	jmp    4278d7 <flatcc_json_parser_build_string@@Base+0xa7>
  427a99:	cmp    DWORD PTR [r14+0x20],0x0
  427a9e:	jne    4278da <flatcc_json_parser_build_string@@Base+0xaa>
  427aa4:	mov    DWORD PTR [r14+0x20],0x14
  427aac:	mov    eax,DWORD PTR [r14+0x8]
  427ab0:	mov    ecx,ebx
  427ab2:	sub    ecx,eax
  427ab4:	add    ecx,0x1
  427ab7:	mov    DWORD PTR [r14+0x1c],ecx
  427abb:	mov    QWORD PTR [r14+0x38],rbx
  427abf:	jmp    4278da <flatcc_json_parser_build_string@@Base+0xaa>
  427ac4:	mov    rbp,rbx
  427ac7:	jmp    427a78 <flatcc_json_parser_build_string@@Base+0x248>
  427ac9:	mov    rbx,r13
  427acc:	jmp    4278d0 <flatcc_json_parser_build_string@@Base+0xa0>
  427ad1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427adb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000427ae0 <flatcc_json_parser_prepare_unions@@Base>:
  427ae0:	push   r15
  427ae2:	push   r14
  427ae4:	push   r13
  427ae6:	push   r12
  427ae8:	push   rbx
  427ae9:	mov    r13,r8
  427aec:	mov    r12,rcx
  427aef:	mov    r15,rdx
  427af2:	mov    r14,rsi
  427af5:	mov    rbx,rdi
  427af8:	mov    rdi,QWORD PTR [rdi]
  427afb:	lea    rax,[rcx+rcx*4]
  427aff:	lea    rsi,[rax*8+0x10]
  427b07:	call   41f0f0 <flatcc_builder_enter_user_frame@@Base>
  427b0c:	mov    QWORD PTR [r13+0x0],rax
  427b10:	test   rax,rax
  427b13:	je     427b28 <flatcc_json_parser_prepare_unions@@Base+0x48>
  427b15:	mov    rdi,QWORD PTR [rbx]
  427b18:	mov    rsi,rax
  427b1b:	call   41f280 <flatcc_builder_get_user_frame_ptr@@Base>
  427b20:	mov    QWORD PTR [rax],r12
  427b23:	mov    r15,r14
  427b26:	jmp    427b47 <flatcc_json_parser_prepare_unions@@Base+0x67>
  427b28:	cmp    DWORD PTR [rbx+0x20],0x0
  427b2c:	jne    427b47 <flatcc_json_parser_prepare_unions@@Base+0x67>
  427b2e:	mov    DWORD PTR [rbx+0x20],0x21
  427b35:	mov    eax,DWORD PTR [rbx+0x8]
  427b38:	mov    ecx,r14d
  427b3b:	sub    ecx,eax
  427b3d:	add    ecx,0x1
  427b40:	mov    DWORD PTR [rbx+0x1c],ecx
  427b43:	mov    QWORD PTR [rbx+0x38],r14
  427b47:	mov    rax,r15
  427b4a:	pop    rbx
  427b4b:	pop    r12
  427b4d:	pop    r13
  427b4f:	pop    r14
  427b51:	pop    r15
  427b53:	ret    
  427b54:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427b5e:	xchg   ax,ax

0000000000427b60 <flatcc_json_parser_finalize_unions@@Base>:
  427b60:	push   r15
  427b62:	push   r14
  427b64:	push   r12
  427b66:	push   rbx
  427b67:	push   rax
  427b68:	mov    r15,rcx
  427b6b:	mov    r14,rdx
  427b6e:	mov    r12,rsi
  427b71:	mov    rbx,rdi
  427b74:	mov    rdi,QWORD PTR [rdi]
  427b77:	mov    rsi,rcx
  427b7a:	call   41f280 <flatcc_builder_get_user_frame_ptr@@Base>
  427b7f:	cmp    QWORD PTR [rax+0x8],0x0
  427b84:	je     427ba7 <flatcc_json_parser_finalize_unions@@Base+0x47>
  427b86:	cmp    DWORD PTR [rbx+0x20],0x0
  427b8a:	jne    427baa <flatcc_json_parser_finalize_unions@@Base+0x4a>
  427b8c:	mov    DWORD PTR [rbx+0x20],0x1b
  427b93:	mov    eax,DWORD PTR [rbx+0x8]
  427b96:	mov    ecx,r12d
  427b99:	sub    ecx,eax
  427b9b:	add    ecx,0x1
  427b9e:	mov    DWORD PTR [rbx+0x1c],ecx
  427ba1:	mov    QWORD PTR [rbx+0x38],r12
  427ba5:	jmp    427baa <flatcc_json_parser_finalize_unions@@Base+0x4a>
  427ba7:	mov    r14,r12
  427baa:	mov    rdi,QWORD PTR [rbx]
  427bad:	mov    rsi,r15
  427bb0:	call   41f1f0 <flatcc_builder_exit_user_frame_at@@Base>
  427bb5:	mov    rax,r14
  427bb8:	add    rsp,0x8
  427bbc:	pop    rbx
  427bbd:	pop    r12
  427bbf:	pop    r14
  427bc1:	pop    r15
  427bc3:	ret    
  427bc4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427bce:	xchg   ax,ax

0000000000427bd0 <flatcc_json_parser_union@@Base>:
  427bd0:	push   rbp
  427bd1:	push   r15
  427bd3:	push   r14
  427bd5:	push   r12
  427bd7:	push   rbx
  427bd8:	sub    rsp,0x10
  427bdc:	mov    r12d,r8d
  427bdf:	mov    rbp,rcx
  427be2:	mov    r14,rdx
  427be5:	mov    r15,rsi
  427be8:	mov    rbx,rdi
  427beb:	mov    rdi,QWORD PTR [rdi]
  427bee:	mov    rsi,r9
  427bf1:	call   41f280 <flatcc_builder_get_user_frame_ptr@@Base>
  427bf6:	lea    rcx,[rbp*4+0x0]
  427bfe:	add    rcx,rbp
  427c01:	cmp    QWORD PTR [rax+rcx*8+0x10],0x0
  427c07:	je     427c31 <flatcc_json_parser_union@@Base+0x61>
  427c09:	cmp    DWORD PTR [rbx+0x20],0x0
  427c0d:	jne    427cc0 <flatcc_json_parser_union@@Base+0xf0>
  427c13:	mov    DWORD PTR [rbx+0x20],0x1c
  427c1a:	mov    eax,DWORD PTR [rbx+0x8]
  427c1d:	mov    ecx,r15d
  427c20:	sub    ecx,eax
  427c22:	add    ecx,0x1
  427c25:	mov    DWORD PTR [rbx+0x1c],ecx
  427c28:	mov    QWORD PTR [rbx+0x38],r15
  427c2c:	jmp    427cc0 <flatcc_json_parser_union@@Base+0xf0>
  427c31:	lea    rdx,[rax+0x10]
  427c35:	cmp    BYTE PTR [rdx+rcx*8+0x14],0x0
  427c3a:	je     427c87 <flatcc_json_parser_union@@Base+0xb7>
  427c3c:	mov    cl,BYTE PTR [rdx+rcx*8+0x15]
  427c40:	mov    BYTE PTR [rsp+0x8],cl
  427c44:	test   cl,cl
  427c46:	je     427cba <flatcc_json_parser_union@@Base+0xea>
  427c48:	mov    rbp,QWORD PTR [rsp+0x40]
  427c4d:	add    QWORD PTR [rax+0x8],0xffffffffffffffff
  427c52:	lea    r8,[rsp+0xc]
  427c57:	movzx  ecx,cl
  427c5a:	mov    rdi,rbx
  427c5d:	mov    rsi,r15
  427c60:	mov    rdx,r14
  427c63:	call   rbp
  427c65:	cmp    rax,r14
  427c68:	je     427cc0 <flatcc_json_parser_union@@Base+0xf0>
  427c6a:	mov    r15,rax
  427c6d:	mov    rdi,QWORD PTR [rbx]
  427c70:	movzx  esi,r12w
  427c74:	mov    rdx,QWORD PTR [rsp+0x8]
  427c79:	call   421cd0 <flatcc_builder_table_add_union@@Base>
  427c7e:	test   eax,eax
  427c80:	jne    427c09 <flatcc_json_parser_union@@Base+0x39>
  427c82:	mov    r14,r15
  427c85:	jmp    427cc0 <flatcc_json_parser_union@@Base+0xf0>
  427c87:	add    QWORD PTR [rax+0x8],0x1
  427c8c:	lea    rax,[rax+rcx*8]
  427c90:	add    rax,0x10
  427c94:	mov    esi,DWORD PTR [rbx+0x18]
  427c97:	mov    DWORD PTR [rdx+rcx*8+0x10],esi
  427c9b:	mov    rsi,QWORD PTR [rbx+0x8]
  427c9f:	mov    QWORD PTR [rdx+rcx*8+0x8],rsi
  427ca4:	mov    QWORD PTR [rax],r15
  427ca7:	mov    rdi,rbx
  427caa:	mov    rsi,r15
  427cad:	mov    rdx,r14
  427cb0:	call   425ea0 <flatcc_json_parser_generic_json@@Base>
  427cb5:	mov    r14,rax
  427cb8:	jmp    427cc0 <flatcc_json_parser_union@@Base+0xf0>
  427cba:	cmp    DWORD PTR [rbx+0x20],0x0
  427cbe:	je     427cd0 <flatcc_json_parser_union@@Base+0x100>
  427cc0:	mov    rax,r14
  427cc3:	add    rsp,0x10
  427cc7:	pop    rbx
  427cc8:	pop    r12
  427cca:	pop    r14
  427ccc:	pop    r15
  427cce:	pop    rbp
  427ccf:	ret    
  427cd0:	mov    DWORD PTR [rbx+0x20],0x19
  427cd7:	jmp    427c1a <flatcc_json_parser_union@@Base+0x4a>
  427cdc:	nop    DWORD PTR [rax+0x0]

0000000000427ce0 <flatcc_json_parser_union_type@@Base>:
  427ce0:	push   rbp
  427ce1:	push   r15
  427ce3:	push   r14
  427ce5:	push   r13
  427ce7:	push   r12
  427ce9:	push   rbx
  427cea:	sub    rsp,0x18
  427cee:	mov    ebx,r8d
  427cf1:	mov    rbp,rcx
  427cf4:	mov    r14,rdx
  427cf7:	mov    r12,rsi
  427cfa:	mov    r15,rdi
  427cfd:	mov    rdi,QWORD PTR [rdi]
  427d00:	mov    rsi,r9
  427d03:	call   41f280 <flatcc_builder_get_user_frame_ptr@@Base>
  427d08:	lea    r13,[rbp*4+0x0]
  427d10:	add    r13,rbp
  427d13:	cmp    BYTE PTR [rax+r13*8+0x24],0x0
  427d19:	je     427d47 <flatcc_json_parser_union_type@@Base+0x67>
  427d1b:	cmp    DWORD PTR [r15+0x20],0x0
  427d20:	jne    427f76 <flatcc_json_parser_union_type@@Base+0x296>
  427d26:	mov    DWORD PTR [r15+0x20],0x1c
  427d2e:	mov    eax,DWORD PTR [r15+0x8]
  427d32:	mov    ecx,r12d
  427d35:	sub    ecx,eax
  427d37:	add    ecx,0x1
  427d3a:	mov    DWORD PTR [r15+0x1c],ecx
  427d3e:	mov    QWORD PTR [r15+0x38],r12
  427d42:	jmp    427f76 <flatcc_json_parser_union_type@@Base+0x296>
  427d47:	mov    r11,rax
  427d4a:	mov    DWORD PTR [rsp+0xc],ebx
  427d4e:	lea    r10,[rax+0x10]
  427d52:	lea    rax,[rax+r13*8]
  427d56:	add    rax,0x24
  427d5a:	mov    BYTE PTR [rax],0x1
  427d5d:	lea    r8,[r10+r13*8]
  427d61:	add    r8,0x15
  427d65:	mov    BYTE PTR [r10+r13*8+0x15],0x0
  427d6b:	cmp    r12,r14
  427d6e:	je     427ea2 <flatcc_json_parser_union_type@@Base+0x1c2>
  427d74:	mov    r9b,BYTE PTR [r12]
  427d78:	xor    eax,eax
  427d7a:	cmp    r9b,0x2d
  427d7e:	sete   al
  427d81:	add    rax,r12
  427d84:	xor    edx,edx
  427d86:	cmp    rax,r14
  427d89:	je     427dcd <flatcc_json_parser_union_type@@Base+0xed>
  427d8b:	nop    DWORD PTR [rax+rax*1+0x0]
  427d90:	movsx  rdi,BYTE PTR [rax]
  427d94:	mov    ecx,edi
  427d96:	add    cl,0xd0
  427d99:	cmp    cl,0x9
  427d9c:	ja     427e0d <flatcc_json_parser_union_type@@Base+0x12d>
  427d9e:	lea    rcx,[rdx+rdx*4]
  427da2:	lea    rdi,[rdi+rcx*2]
  427da6:	add    rdi,0xffffffffffffffd0
  427daa:	cmp    rdx,rdi
  427dad:	ja     427e19 <flatcc_json_parser_union_type@@Base+0x139>
  427daf:	add    rax,0x1
  427db3:	mov    rdx,rdi
  427db6:	cmp    r14,rax
  427db9:	jne    427d90 <flatcc_json_parser_union_type@@Base+0xb0>
  427dbb:	xor    ecx,ecx
  427dbd:	mov    rax,r14
  427dc0:	mov    rdx,rdi
  427dc3:	cmp    rax,r12
  427dc6:	jne    427ddb <flatcc_json_parser_union_type@@Base+0xfb>
  427dc8:	jmp    427ea2 <flatcc_json_parser_union_type@@Base+0x1c2>
  427dcd:	mov    rax,r14
  427dd0:	xor    ecx,ecx
  427dd2:	cmp    rax,r12
  427dd5:	je     427ea2 <flatcc_json_parser_union_type@@Base+0x1c2>
  427ddb:	test   cl,cl
  427ddd:	je     427e40 <flatcc_json_parser_union_type@@Base+0x160>
  427ddf:	mov    cl,BYTE PTR [rax]
  427de1:	add    cl,0xd2
  427de4:	cmp    cl,0x37
  427de7:	ja     427e40 <flatcc_json_parser_union_type@@Base+0x160>
  427de9:	movzx  ecx,cl
  427dec:	movabs rdi,0x80000000800001
  427df6:	bt     rdi,rcx
  427dfa:	jae    427e40 <flatcc_json_parser_union_type@@Base+0x160>
  427dfc:	cmp    DWORD PTR [r15+0x20],0x0
  427e01:	jne    427e3b <flatcc_json_parser_union_type@@Base+0x15b>
  427e03:	mov    DWORD PTR [r15+0x20],0xc
  427e0b:	jmp    427e28 <flatcc_json_parser_union_type@@Base+0x148>
  427e0d:	mov    cl,0x1
  427e0f:	cmp    rax,r12
  427e12:	jne    427ddb <flatcc_json_parser_union_type@@Base+0xfb>
  427e14:	jmp    427ea2 <flatcc_json_parser_union_type@@Base+0x1c2>
  427e19:	cmp    DWORD PTR [r15+0x20],0x0
  427e1e:	jne    427e3b <flatcc_json_parser_union_type@@Base+0x15b>
  427e20:	mov    DWORD PTR [r15+0x20],0x8
  427e28:	mov    ecx,DWORD PTR [r15+0x8]
  427e2c:	mov    edx,eax
  427e2e:	sub    edx,ecx
  427e30:	add    edx,0x1
  427e33:	mov    DWORD PTR [r15+0x1c],edx
  427e37:	mov    QWORD PTR [r15+0x38],rax
  427e3b:	xor    edx,edx
  427e3d:	mov    rax,r14
  427e40:	cmp    rax,r12
  427e43:	je     427ea2 <flatcc_json_parser_union_type@@Base+0x1c2>
  427e45:	cmp    r9b,0x2d
  427e49:	jne    427e5f <flatcc_json_parser_union_type@@Base+0x17f>
  427e4b:	cmp    DWORD PTR [r15+0x20],0x0
  427e50:	mov    rbp,r14
  427e53:	jne    427e9d <flatcc_json_parser_union_type@@Base+0x1bd>
  427e55:	mov    DWORD PTR [r15+0x20],0x8
  427e5d:	jmp    427e7a <flatcc_json_parser_union_type@@Base+0x19a>
  427e5f:	cmp    rdx,0x100
  427e66:	jb     427e97 <flatcc_json_parser_union_type@@Base+0x1b7>
  427e68:	cmp    DWORD PTR [r15+0x20],0x0
  427e6d:	mov    rbp,r14
  427e70:	jne    427e9d <flatcc_json_parser_union_type@@Base+0x1bd>
  427e72:	mov    DWORD PTR [r15+0x20],0x7
  427e7a:	mov    ecx,DWORD PTR [r15+0x8]
  427e7e:	mov    edx,eax
  427e80:	sub    edx,ecx
  427e82:	add    edx,0x1
  427e85:	mov    DWORD PTR [r15+0x1c],edx
  427e89:	mov    QWORD PTR [r15+0x38],rax
  427e8d:	mov    rbp,r14
  427e90:	cmp    rbp,r12
  427e93:	jne    427eca <flatcc_json_parser_union_type@@Base+0x1ea>
  427e95:	jmp    427ea2 <flatcc_json_parser_union_type@@Base+0x1c2>
  427e97:	mov    BYTE PTR [r8],dl
  427e9a:	mov    rbp,rax
  427e9d:	cmp    rbp,r12
  427ea0:	jne    427eca <flatcc_json_parser_union_type@@Base+0x1ea>
  427ea2:	mov    rcx,QWORD PTR [rsp+0x50]
  427ea7:	mov    rdi,r15
  427eaa:	mov    rsi,r12
  427ead:	mov    rdx,r14
  427eb0:	mov    rbx,r8
  427eb3:	mov    rbp,r10
  427eb6:	mov    r12,r11
  427eb9:	call   427fb0 <flatcc_json_parser_union_type@@Base+0x2d0>
  427ebe:	mov    r11,r12
  427ec1:	mov    r10,rbp
  427ec4:	mov    r8,rbx
  427ec7:	mov    rbp,rax
  427eca:	mov    rsi,QWORD PTR [r10+r13*8]
  427ece:	test   rsi,rsi
  427ed1:	je     427f60 <flatcc_json_parser_union_type@@Base+0x280>
  427ed7:	mov    rax,QWORD PTR [r11+0x8]
  427edb:	test   rax,rax
  427ede:	je     427f88 <flatcc_json_parser_union_type@@Base+0x2a8>
  427ee4:	mov    r9,QWORD PTR [rsp+0x58]
  427ee9:	add    rax,0xffffffffffffffff
  427eed:	mov    QWORD PTR [r11+0x8],rax
  427ef1:	mov    r12d,DWORD PTR [r15+0x18]
  427ef5:	mov    rbx,QWORD PTR [r15+0x8]
  427ef9:	mov    eax,DWORD PTR [r10+r13*8+0x10]
  427efe:	mov    DWORD PTR [r15+0x18],eax
  427f02:	mov    rax,QWORD PTR [r10+r13*8+0x8]
  427f07:	mov    QWORD PTR [r15+0x8],rax
  427f0b:	movzx  ecx,BYTE PTR [r8]
  427f0f:	mov    BYTE PTR [rsp+0x10],cl
  427f13:	lea    r8,[rsp+0x14]
  427f18:	mov    rdi,r15
  427f1b:	mov    rdx,r14
  427f1e:	call   r9
  427f21:	cmp    rax,r14
  427f24:	je     427f76 <flatcc_json_parser_union_type@@Base+0x296>
  427f26:	mov    rdi,QWORD PTR [r15]
  427f29:	movzx  esi,WORD PTR [rsp+0xc]
  427f2e:	mov    rdx,QWORD PTR [rsp+0x10]
  427f33:	call   421cd0 <flatcc_builder_table_add_union@@Base>
  427f38:	test   eax,eax
  427f3a:	je     427f6b <flatcc_json_parser_union_type@@Base+0x28b>
  427f3c:	cmp    DWORD PTR [r15+0x20],0x0
  427f41:	jne    427f76 <flatcc_json_parser_union_type@@Base+0x296>
  427f43:	mov    DWORD PTR [r15+0x20],0x1c
  427f4b:	mov    eax,DWORD PTR [r15+0x8]
  427f4f:	mov    ecx,ebp
  427f51:	sub    ecx,eax
  427f53:	add    ecx,0x1
  427f56:	mov    DWORD PTR [r15+0x1c],ecx
  427f5a:	mov    QWORD PTR [r15+0x38],rbp
  427f5e:	jmp    427f76 <flatcc_json_parser_union_type@@Base+0x296>
  427f60:	cmp    BYTE PTR [r8],0x1
  427f64:	sbb    QWORD PTR [r11+0x8],0xffffffffffffffff
  427f69:	jmp    427f73 <flatcc_json_parser_union_type@@Base+0x293>
  427f6b:	mov    DWORD PTR [r15+0x18],r12d
  427f6f:	mov    QWORD PTR [r15+0x8],rbx
  427f73:	mov    r14,rbp
  427f76:	mov    rax,r14
  427f79:	add    rsp,0x18
  427f7d:	pop    rbx
  427f7e:	pop    r12
  427f80:	pop    r13
  427f82:	pop    r14
  427f84:	pop    r15
  427f86:	pop    rbp
  427f87:	ret    
  427f88:	lea    rdi,[rip+0x1400b]        # 43bf9a <flatcc_builder_padding_base@@Base+0x276a>
  427f8f:	lea    rsi,[rip+0x14013]        # 43bfa9 <flatcc_builder_padding_base@@Base+0x2779>
  427f96:	lea    rcx,[rip+0x14070]        # 43c00d <flatcc_builder_padding_base@@Base+0x27dd>
  427f9d:	mov    edx,0x3c5
  427fa2:	call   406070 <__assert_fail@plt>
  427fa7:	nop    WORD PTR [rax+rax*1+0x0]
  427fb0:	push   rbp
  427fb1:	push   r15
  427fb3:	push   r14
  427fb5:	push   r13
  427fb7:	push   r12
  427fb9:	push   rbx
  427fba:	sub    rsp,0x28
  427fbe:	mov    rbx,r8
  427fc1:	mov    rbp,rcx
  427fc4:	mov    r13,rdx
  427fc7:	mov    r14,rdi
  427fca:	mov    BYTE PTR [r8],0x0
  427fce:	cmp    rsi,rdx
  427fd1:	je     428024 <flatcc_json_parser_union_type@@Base+0x344>
  427fd3:	mov    al,BYTE PTR [rsi]
  427fd5:	cmp    al,0x2e
  427fd7:	je     427feb <flatcc_json_parser_union_type@@Base+0x30b>
  427fd9:	cmp    al,0x22
  427fdb:	jne    42801c <flatcc_json_parser_union_type@@Base+0x33c>
  427fdd:	add    rsi,0x1
  427fe1:	mov    DWORD PTR [r14+0x14],0x0
  427fe9:	jmp    428024 <flatcc_json_parser_union_type@@Base+0x344>
  427feb:	cmp    DWORD PTR [r14+0x20],0x0
  427ff0:	mov    r15,r13
  427ff3:	jne    428027 <flatcc_json_parser_union_type@@Base+0x347>
  427ff5:	mov    DWORD PTR [r14+0x20],0x5
  427ffd:	mov    eax,DWORD PTR [r14+0x8]
  428001:	mov    ecx,esi
  428003:	sub    ecx,eax
  428005:	add    ecx,0x1
  428008:	mov    DWORD PTR [r14+0x1c],ecx
  42800c:	mov    QWORD PTR [r14+0x38],rsi
  428010:	mov    r15,r13
  428013:	cmp    DWORD PTR [r14+0x14],0x0
  428018:	jne    428068 <flatcc_json_parser_union_type@@Base+0x388>
  42801a:	jmp    42802e <flatcc_json_parser_union_type@@Base+0x34e>
  42801c:	mov    DWORD PTR [r14+0x14],0x1
  428024:	mov    r15,rsi
  428027:	cmp    DWORD PTR [r14+0x14],0x0
  42802c:	jne    428068 <flatcc_json_parser_union_type@@Base+0x388>
  42802e:	mov    rax,r13
  428031:	sub    rax,r15
  428034:	cmp    rax,0x2
  428038:	jl     428057 <flatcc_json_parser_union_type@@Base+0x377>
  42803a:	cmp    BYTE PTR [r15],0x20
  42803e:	jg     428068 <flatcc_json_parser_union_type@@Base+0x388>
  428040:	jne    428057 <flatcc_json_parser_union_type@@Base+0x377>
  428042:	cmp    BYTE PTR [r15+0x1],0x20
  428047:	jle    428057 <flatcc_json_parser_union_type@@Base+0x377>
  428049:	add    r15,0x1
  42804d:	cmp    r15,r13
  428050:	jne    428071 <flatcc_json_parser_union_type@@Base+0x391>
  428052:	jmp    428124 <flatcc_json_parser_union_type@@Base+0x444>
  428057:	mov    rdi,r14
  42805a:	mov    rsi,r15
  42805d:	mov    rdx,r13
  428060:	call   425750 <flatcc_json_parser_space_ext@@Base>
  428065:	mov    r15,rax
  428068:	cmp    r15,r13
  42806b:	je     428124 <flatcc_json_parser_union_type@@Base+0x444>
  428071:	lea    rcx,[rbp+0x8]
  428075:	mov    r12,rsp
  428078:	mov    QWORD PTR [rsp+0x18],rbx
  42807d:	mov    QWORD PTR [rsp+0x10],rbp
  428082:	mov    QWORD PTR [rsp+0x8],rcx
  428087:	mov    rbx,QWORD PTR [rbp+0x0]
  42808b:	mov    rbp,rcx
  42808e:	xchg   ax,ax
  428090:	mov    rdi,r14
  428093:	mov    rsi,r15
  428096:	mov    rdx,r13
  428099:	lea    rcx,[rsp+0x4]
  42809e:	lea    r8,[rsp+0x20]
  4280a3:	mov    r9,r12
  4280a6:	call   rbx
  4280a8:	cmp    rax,r13
  4280ab:	je     428124 <flatcc_json_parser_union_type@@Base+0x444>
  4280ad:	cmp    rax,r15
  4280b0:	jne    4280d0 <flatcc_json_parser_union_type@@Base+0x3f0>
  4280b2:	mov    rbx,QWORD PTR [rbp+0x0]
  4280b6:	add    rbp,0x8
  4280ba:	test   rbx,rbx
  4280bd:	jne    428090 <flatcc_json_parser_union_type@@Base+0x3b0>
  4280bf:	jmp    428101 <flatcc_json_parser_union_type@@Base+0x421>
  4280c1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4280cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4280d0:	cmp    DWORD PTR [rsp+0x4],0x0
  4280d5:	jne    428136 <flatcc_json_parser_union_type@@Base+0x456>
  4280d7:	mov    rcx,QWORD PTR [rsp+0x20]
  4280dc:	cmp    rcx,0x100
  4280e3:	jae    428147 <flatcc_json_parser_union_type@@Base+0x467>
  4280e5:	mov    r15,rax
  4280e8:	mov    rbx,QWORD PTR [rsp+0x18]
  4280ed:	add    BYTE PTR [rbx],cl
  4280ef:	cmp    DWORD PTR [rsp],0x0
  4280f3:	mov    rbp,QWORD PTR [rsp+0x10]
  4280f8:	mov    rcx,QWORD PTR [rsp+0x8]
  4280fd:	jne    428087 <flatcc_json_parser_union_type@@Base+0x3a7>
  4280ff:	jmp    428127 <flatcc_json_parser_union_type@@Base+0x447>
  428101:	cmp    DWORD PTR [r14+0x20],0x0
  428106:	jne    428124 <flatcc_json_parser_union_type@@Base+0x444>
  428108:	mov    DWORD PTR [r14+0x20],0x17
  428110:	mov    eax,DWORD PTR [r14+0x8]
  428114:	mov    ecx,r15d
  428117:	sub    ecx,eax
  428119:	add    ecx,0x1
  42811c:	mov    DWORD PTR [r14+0x1c],ecx
  428120:	mov    QWORD PTR [r14+0x38],r15
  428124:	mov    rax,r13
  428127:	add    rsp,0x28
  42812b:	pop    rbx
  42812c:	pop    r12
  42812e:	pop    r13
  428130:	pop    r14
  428132:	pop    r15
  428134:	pop    rbp
  428135:	ret    
  428136:	cmp    DWORD PTR [r14+0x20],0x0
  42813b:	jne    428124 <flatcc_json_parser_union_type@@Base+0x444>
  42813d:	mov    DWORD PTR [r14+0x20],0x8
  428145:	jmp    428156 <flatcc_json_parser_union_type@@Base+0x476>
  428147:	cmp    DWORD PTR [r14+0x20],0x0
  42814c:	jne    428124 <flatcc_json_parser_union_type@@Base+0x444>
  42814e:	mov    DWORD PTR [r14+0x20],0x7
  428156:	mov    ecx,DWORD PTR [r14+0x8]
  42815a:	mov    edx,eax
  42815c:	sub    edx,ecx
  42815e:	add    edx,0x1
  428161:	mov    DWORD PTR [r14+0x1c],edx
  428165:	mov    QWORD PTR [r14+0x38],rax
  428169:	jmp    428124 <flatcc_json_parser_union_type@@Base+0x444>
  42816b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000428170 <flatcc_json_parser_union_vector@@Base>:
  428170:	push   rbp
  428171:	push   r15
  428173:	push   r14
  428175:	push   r12
  428177:	push   rbx
  428178:	mov    r12d,r8d
  42817b:	mov    rbp,rcx
  42817e:	mov    r14,rdx
  428181:	mov    r15,rsi
  428184:	mov    rbx,rdi
  428187:	mov    rdi,QWORD PTR [rdi]
  42818a:	mov    rsi,r9
  42818d:	call   41f280 <flatcc_builder_get_user_frame_ptr@@Base>
  428192:	lea    rdx,[rbp*4+0x0]
  42819a:	add    rdx,rbp
  42819d:	cmp    QWORD PTR [rax+rdx*8+0x10],0x0
  4281a3:	je     4281d0 <flatcc_json_parser_union_vector@@Base+0x60>
  4281a5:	cmp    DWORD PTR [rbx+0x20],0x0
  4281a9:	jne    4281c4 <flatcc_json_parser_union_vector@@Base+0x54>
  4281ab:	mov    DWORD PTR [rbx+0x20],0x1c
  4281b2:	mov    eax,DWORD PTR [rbx+0x8]
  4281b5:	mov    ecx,r15d
  4281b8:	sub    ecx,eax
  4281ba:	add    ecx,0x1
  4281bd:	mov    DWORD PTR [rbx+0x1c],ecx
  4281c0:	mov    QWORD PTR [rbx+0x38],r15
  4281c4:	mov    rax,r14
  4281c7:	pop    rbx
  4281c8:	pop    r12
  4281ca:	pop    r14
  4281cc:	pop    r15
  4281ce:	pop    rbp
  4281cf:	ret    
  4281d0:	lea    rsi,[rax+0x10]
  4281d4:	cmp    BYTE PTR [rsi+rdx*8+0x14],0x0
  4281d9:	mov    rcx,QWORD PTR [rax+0x8]
  4281dd:	je     428208 <flatcc_json_parser_union_vector@@Base+0x98>
  4281df:	add    rcx,0xffffffffffffffff
  4281e3:	mov    QWORD PTR [rax+0x8],rcx
  4281e7:	mov    rcx,QWORD PTR [rsi+rdx*8+0x20]
  4281ec:	mov    r8d,DWORD PTR [rsi+rdx*8+0x18]
  4281f1:	movzx  r9d,r12w
  4281f5:	mov    rdi,rbx
  4281f8:	mov    rsi,r15
  4281fb:	mov    rdx,r14
  4281fe:	pop    rbx
  4281ff:	pop    r12
  428201:	pop    r14
  428203:	pop    r15
  428205:	pop    rbp
  428206:	jmp    428250 <flatcc_json_parser_union_vector@@Base+0xe0>
  428208:	lea    rdi,[rax+rdx*8]
  42820c:	add    rdi,0x10
  428210:	add    rcx,0x1
  428214:	mov    QWORD PTR [rax+0x8],rcx
  428218:	mov    eax,DWORD PTR [rbx+0x18]
  42821b:	mov    DWORD PTR [rsi+rdx*8+0x10],eax
  42821f:	mov    rax,QWORD PTR [rbx+0x8]
  428223:	mov    QWORD PTR [rsi+rdx*8+0x8],rax
  428228:	mov    QWORD PTR [rdi],r15
  42822b:	mov    rdi,rbx
  42822e:	mov    rsi,r15
  428231:	mov    rdx,r14
  428234:	pop    rbx
  428235:	pop    r12
  428237:	pop    r14
  428239:	pop    r15
  42823b:	pop    rbp
  42823c:	jmp    425ea0 <flatcc_json_parser_generic_json@@Base>
  428241:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42824b:	nop    DWORD PTR [rax+rax*1+0x0]
  428250:	push   rbp
  428251:	push   r15
  428253:	push   r14
  428255:	push   r13
  428257:	push   r12
  428259:	push   rbx
  42825a:	sub    rsp,0x18
  42825e:	mov    r15d,r9d
  428261:	mov    r13d,r8d
  428264:	mov    r12,rcx
  428267:	mov    r14,rdx
  42826a:	mov    rbp,rsi
  42826d:	mov    rbx,rdi
  428270:	mov    DWORD PTR [rsp+0xc],0x0
  428278:	mov    rdi,QWORD PTR [rdi]
  42827b:	call   4207b0 <flatcc_builder_start_offset_vector@@Base>
  428280:	test   eax,eax
  428282:	je     42829a <flatcc_json_parser_union_vector@@Base+0x12a>
  428284:	cmp    DWORD PTR [rbx+0x20],0x0
  428288:	jne    4284cb <flatcc_json_parser_union_vector@@Base+0x35b>
  42828e:	mov    DWORD PTR [rbx+0x20],0x21
  428295:	jmp    4284ba <flatcc_json_parser_union_vector@@Base+0x34a>
  42829a:	cmp    rbp,r14
  42829d:	je     4282d0 <flatcc_json_parser_union_vector@@Base+0x160>
  42829f:	cmp    BYTE PTR [rbp+0x0],0x5b
  4282a3:	jne    4282d0 <flatcc_json_parser_union_vector@@Base+0x160>
  4282a5:	lea    rax,[rbp+0x1]
  4282a9:	mov    rcx,r14
  4282ac:	sub    rcx,rax
  4282af:	cmp    rcx,0x2
  4282b3:	mov    DWORD PTR [rsp+0x8],r15d
  4282b8:	jl     4282fd <flatcc_json_parser_union_vector@@Base+0x18d>
  4282ba:	cmp    BYTE PTR [rax],0x20
  4282bd:	jg     42830b <flatcc_json_parser_union_vector@@Base+0x19b>
  4282bf:	jne    4282fd <flatcc_json_parser_union_vector@@Base+0x18d>
  4282c1:	cmp    BYTE PTR [rbp+0x2],0x20
  4282c5:	jle    4282fd <flatcc_json_parser_union_vector@@Base+0x18d>
  4282c7:	add    rbp,0x2
  4282cb:	mov    rax,rbp
  4282ce:	jmp    42830b <flatcc_json_parser_union_vector@@Base+0x19b>
  4282d0:	cmp    DWORD PTR [rbx+0x20],0x0
  4282d4:	mov    rcx,r14
  4282d7:	jne    4284a1 <flatcc_json_parser_union_vector@@Base+0x331>
  4282dd:	mov    DWORD PTR [rbx+0x20],0x16
  4282e4:	mov    eax,DWORD PTR [rbx+0x8]
  4282e7:	mov    ecx,ebp
  4282e9:	sub    ecx,eax
  4282eb:	add    ecx,0x1
  4282ee:	mov    DWORD PTR [rbx+0x1c],ecx
  4282f1:	mov    QWORD PTR [rbx+0x38],rbp
  4282f5:	mov    rcx,r14
  4282f8:	jmp    4284a1 <flatcc_json_parser_union_vector@@Base+0x331>
  4282fd:	mov    rdi,rbx
  428300:	mov    rsi,rax
  428303:	mov    rdx,r14
  428306:	call   425750 <flatcc_json_parser_space_ext@@Base>
  42830b:	mov    r15,r14
  42830e:	cmp    rax,r14
  428311:	je     428356 <flatcc_json_parser_union_vector@@Base+0x1e6>
  428313:	cmp    BYTE PTR [rax],0x5d
  428316:	jne    428353 <flatcc_json_parser_union_vector@@Base+0x1e3>
  428318:	lea    rcx,[rax+0x1]
  42831c:	mov    rdx,r14
  42831f:	sub    rdx,rcx
  428322:	cmp    rdx,0x2
  428326:	mov    r15d,DWORD PTR [rsp+0x8]
  42832b:	jl     428490 <flatcc_json_parser_union_vector@@Base+0x320>
  428331:	cmp    BYTE PTR [rcx],0x20
  428334:	jg     4284a1 <flatcc_json_parser_union_vector@@Base+0x331>
  42833a:	jne    428490 <flatcc_json_parser_union_vector@@Base+0x320>
  428340:	cmp    BYTE PTR [rax+0x2],0x20
  428344:	jle    428490 <flatcc_json_parser_union_vector@@Base+0x320>
  42834a:	add    rax,0x2
  42834e:	jmp    42849e <flatcc_json_parser_union_vector@@Base+0x32e>
  428353:	mov    r15,rax
  428356:	test   r13d,r13d
  428359:	je     42846f <flatcc_json_parser_union_vector@@Base+0x2ff>
  42835f:	mov    eax,r13d
  428362:	mov    QWORD PTR [rsp+0x10],rax
  428367:	xor    r13d,r13d
  42836a:	nop    WORD PTR [rax+rax*1+0x0]
  428370:	mov    rdi,QWORD PTR [rbx]
  428373:	mov    rsi,r12
  428376:	call   41f280 <flatcc_builder_get_user_frame_ptr@@Base>
  42837b:	movzx  ecx,BYTE PTR [rax+r13*1]
  428380:	mov    rdi,rbx
  428383:	mov    rsi,r15
  428386:	mov    rdx,r14
  428389:	lea    r8,[rsp+0xc]
  42838e:	call   QWORD PTR [rsp+0x50]
  428392:	cmp    rax,r14
  428395:	je     4284cb <flatcc_json_parser_union_vector@@Base+0x35b>
  42839b:	mov    rbp,rax
  42839e:	mov    rdi,QWORD PTR [rbx]
  4283a1:	mov    esi,0x1
  4283a6:	call   4200b0 <flatcc_builder_extend_offset_vector@@Base>
  4283ab:	test   rax,rax
  4283ae:	je     428284 <flatcc_json_parser_union_vector@@Base+0x114>
  4283b4:	mov    ecx,DWORD PTR [rsp+0xc]
  4283b8:	mov    DWORD PTR [rax],ecx
  4283ba:	mov    rax,r14
  4283bd:	sub    rax,rbp
  4283c0:	cmp    rax,0x2
  4283c4:	mov    r15d,DWORD PTR [rsp+0x8]
  4283c9:	jl     4283e7 <flatcc_json_parser_union_vector@@Base+0x277>
  4283cb:	cmp    BYTE PTR [rbp+0x0],0x20
  4283cf:	jg     4283f8 <flatcc_json_parser_union_vector@@Base+0x288>
  4283d1:	jne    4283e7 <flatcc_json_parser_union_vector@@Base+0x277>
  4283d3:	cmp    BYTE PTR [rbp+0x1],0x20
  4283d7:	jle    4283e7 <flatcc_json_parser_union_vector@@Base+0x277>
  4283d9:	add    rbp,0x1
  4283dd:	cmp    rbp,r14
  4283e0:	jne    428401 <flatcc_json_parser_union_vector@@Base+0x291>
  4283e2:	jmp    4284dd <flatcc_json_parser_union_vector@@Base+0x36d>
  4283e7:	mov    rdi,rbx
  4283ea:	mov    rsi,rbp
  4283ed:	mov    rdx,r14
  4283f0:	call   425750 <flatcc_json_parser_space_ext@@Base>
  4283f5:	mov    rbp,rax
  4283f8:	cmp    rbp,r14
  4283fb:	je     4284dd <flatcc_json_parser_union_vector@@Base+0x36d>
  428401:	movzx  eax,BYTE PTR [rbp+0x0]
  428405:	cmp    al,0x2c
  428407:	jne    4284e5 <flatcc_json_parser_union_vector@@Base+0x375>
  42840d:	lea    r15,[rbp+0x1]
  428411:	mov    rax,r14
  428414:	sub    rax,r15
  428417:	cmp    rax,0x2
  42841b:	jl     42843c <flatcc_json_parser_union_vector@@Base+0x2cc>
  42841d:	cmp    BYTE PTR [r15],0x20
  428421:	jg     42844d <flatcc_json_parser_union_vector@@Base+0x2dd>
  428423:	jne    42843c <flatcc_json_parser_union_vector@@Base+0x2cc>
  428425:	cmp    BYTE PTR [rbp+0x2],0x20
  428429:	jle    42843c <flatcc_json_parser_union_vector@@Base+0x2cc>
  42842b:	add    rbp,0x2
  42842f:	mov    r15,rbp
  428432:	cmp    r15,r14
  428435:	jne    428456 <flatcc_json_parser_union_vector@@Base+0x2e6>
  428437:	jmp    428526 <flatcc_json_parser_union_vector@@Base+0x3b6>
  42843c:	mov    rdi,rbx
  42843f:	mov    rsi,r15
  428442:	mov    rdx,r14
  428445:	call   425750 <flatcc_json_parser_space_ext@@Base>
  42844a:	mov    r15,rax
  42844d:	cmp    r15,r14
  428450:	je     428526 <flatcc_json_parser_union_vector@@Base+0x3b6>
  428456:	cmp    BYTE PTR [r15],0x5d
  42845a:	je     428556 <flatcc_json_parser_union_vector@@Base+0x3e6>
  428460:	add    r13,0x1
  428464:	cmp    QWORD PTR [rsp+0x10],r13
  428469:	jne    428370 <flatcc_json_parser_union_vector@@Base+0x200>
  42846f:	cmp    DWORD PTR [rbx+0x20],0x0
  428473:	jne    4284cb <flatcc_json_parser_union_vector@@Base+0x35b>
  428475:	mov    DWORD PTR [rbx+0x20],0x1e
  42847c:	mov    eax,DWORD PTR [rbx+0x8]
  42847f:	mov    ecx,r15d
  428482:	sub    ecx,eax
  428484:	add    ecx,0x1
  428487:	mov    DWORD PTR [rbx+0x1c],ecx
  42848a:	mov    QWORD PTR [rbx+0x38],r15
  42848e:	jmp    4284cb <flatcc_json_parser_union_vector@@Base+0x35b>
  428490:	mov    rdi,rbx
  428493:	mov    rsi,rcx
  428496:	mov    rdx,r14
  428499:	call   425750 <flatcc_json_parser_space_ext@@Base>
  42849e:	mov    rcx,rax
  4284a1:	mov    rbp,rcx
  4284a4:	test   r13d,r13d
  4284a7:	je     4285db <flatcc_json_parser_union_vector@@Base+0x46b>
  4284ad:	cmp    DWORD PTR [rbx+0x20],0x0
  4284b1:	jne    4284cb <flatcc_json_parser_union_vector@@Base+0x35b>
  4284b3:	mov    DWORD PTR [rbx+0x20],0x1e
  4284ba:	mov    eax,DWORD PTR [rbx+0x8]
  4284bd:	mov    ecx,ebp
  4284bf:	sub    ecx,eax
  4284c1:	add    ecx,0x1
  4284c4:	mov    DWORD PTR [rbx+0x1c],ecx
  4284c7:	mov    QWORD PTR [rbx+0x38],rbp
  4284cb:	mov    rax,r14
  4284ce:	add    rsp,0x18
  4284d2:	pop    rbx
  4284d3:	pop    r12
  4284d5:	pop    r13
  4284d7:	pop    r14
  4284d9:	pop    r15
  4284db:	pop    rbp
  4284dc:	ret    
  4284dd:	mov    rax,r14
  4284e0:	jmp    4285c6 <flatcc_json_parser_union_vector@@Base+0x456>
  4284e5:	cmp    al,0x5d
  4284e7:	jne    428592 <flatcc_json_parser_union_vector@@Base+0x422>
  4284ed:	lea    rax,[rbp+0x1]
  4284f1:	mov    rcx,r14
  4284f4:	sub    rcx,rax
  4284f7:	cmp    rcx,0x2
  4284fb:	jl     4285b8 <flatcc_json_parser_union_vector@@Base+0x448>
  428501:	cmp    BYTE PTR [rax],0x20
  428504:	jg     4285c6 <flatcc_json_parser_union_vector@@Base+0x456>
  42850a:	jne    4285b8 <flatcc_json_parser_union_vector@@Base+0x448>
  428510:	cmp    BYTE PTR [rbp+0x2],0x20
  428514:	jle    4285b8 <flatcc_json_parser_union_vector@@Base+0x448>
  42851a:	add    rbp,0x2
  42851e:	mov    rax,rbp
  428521:	jmp    4285c6 <flatcc_json_parser_union_vector@@Base+0x456>
  428526:	cmp    DWORD PTR [rbx+0x20],0x0
  42852a:	mov    rax,r14
  42852d:	mov    r15d,DWORD PTR [rsp+0x8]
  428532:	jne    4285c6 <flatcc_json_parser_union_vector@@Base+0x456>
  428538:	mov    DWORD PTR [rbx+0x20],0x9
  42853f:	mov    eax,DWORD PTR [rbx+0x8]
  428542:	mov    ecx,r14d
  428545:	sub    ecx,eax
  428547:	add    ecx,0x1
  42854a:	mov    DWORD PTR [rbx+0x1c],ecx
  42854d:	mov    QWORD PTR [rbx+0x38],r14
  428551:	mov    rax,r14
  428554:	jmp    4285c6 <flatcc_json_parser_union_vector@@Base+0x456>
  428556:	lea    rax,[r15+0x1]
  42855a:	mov    rcx,r14
  42855d:	sub    rcx,rax
  428560:	cmp    rcx,0x2
  428564:	jl     42857d <flatcc_json_parser_union_vector@@Base+0x40d>
  428566:	cmp    BYTE PTR [rax],0x20
  428569:	jg     42858b <flatcc_json_parser_union_vector@@Base+0x41b>
  42856b:	jne    42857d <flatcc_json_parser_union_vector@@Base+0x40d>
  42856d:	cmp    BYTE PTR [r15+0x2],0x20
  428572:	jle    42857d <flatcc_json_parser_union_vector@@Base+0x40d>
  428574:	add    r15,0x2
  428578:	mov    rax,r15
  42857b:	jmp    42858b <flatcc_json_parser_union_vector@@Base+0x41b>
  42857d:	mov    rdi,rbx
  428580:	mov    rsi,rax
  428583:	mov    rdx,r14
  428586:	call   425750 <flatcc_json_parser_space_ext@@Base>
  42858b:	mov    r15d,DWORD PTR [rsp+0x8]
  428590:	jmp    4285c6 <flatcc_json_parser_union_vector@@Base+0x456>
  428592:	cmp    DWORD PTR [rbx+0x20],0x0
  428596:	mov    rax,r14
  428599:	jne    4285c6 <flatcc_json_parser_union_vector@@Base+0x456>
  42859b:	mov    DWORD PTR [rbx+0x20],0x9
  4285a2:	mov    eax,DWORD PTR [rbx+0x8]
  4285a5:	mov    ecx,ebp
  4285a7:	sub    ecx,eax
  4285a9:	add    ecx,0x1
  4285ac:	mov    DWORD PTR [rbx+0x1c],ecx
  4285af:	mov    QWORD PTR [rbx+0x38],rbp
  4285b3:	mov    rax,r14
  4285b6:	jmp    4285c6 <flatcc_json_parser_union_vector@@Base+0x456>
  4285b8:	mov    rdi,rbx
  4285bb:	mov    rsi,rax
  4285be:	mov    rdx,r14
  4285c1:	call   425750 <flatcc_json_parser_space_ext@@Base>
  4285c6:	mov    rcx,QWORD PTR [rsp+0x10]
  4285cb:	add    rcx,0xffffffffffffffff
  4285cf:	mov    rbp,rax
  4285d2:	cmp    rcx,r13
  4285d5:	jne    4284ad <flatcc_json_parser_union_vector@@Base+0x33d>
  4285db:	mov    rdi,QWORD PTR [rbx]
  4285de:	mov    rsi,r12
  4285e1:	call   41f280 <flatcc_builder_get_user_frame_ptr@@Base>
  4285e6:	mov    rdi,QWORD PTR [rbx]
  4285e9:	mov    rsi,rax
  4285ec:	call   421bf0 <flatcc_builder_end_offset_vector_for_unions@@Base>
  4285f1:	mov    DWORD PTR [rsp+0xc],eax
  4285f5:	test   eax,eax
  4285f7:	je     428284 <flatcc_json_parser_union_vector@@Base+0x114>
  4285fd:	mov    rdi,QWORD PTR [rbx]
  428600:	movzx  esi,r15w
  428604:	call   421dc0 <flatcc_builder_table_add_offset@@Base>
  428609:	test   rax,rax
  42860c:	je     428284 <flatcc_json_parser_union_vector@@Base+0x114>
  428612:	mov    ecx,DWORD PTR [rsp+0xc]
  428616:	mov    DWORD PTR [rax],ecx
  428618:	mov    r14,rbp
  42861b:	jmp    4284cb <flatcc_json_parser_union_vector@@Base+0x35b>

0000000000428620 <flatcc_json_parser_union_type_vector@@Base>:
  428620:	push   rbp
  428621:	push   r15
  428623:	push   r14
  428625:	push   r13
  428627:	push   r12
  428629:	push   rbx
  42862a:	sub    rsp,0x48
  42862e:	mov    r12,r9
  428631:	mov    ebx,r8d
  428634:	mov    rbp,rcx
  428637:	mov    QWORD PTR [rsp+0x18],rdx
  42863c:	mov    r14,rsi
  42863f:	mov    r13,rdi
  428642:	mov    rdi,QWORD PTR [rdi]
  428645:	mov    rsi,r9
  428648:	call   41f280 <flatcc_builder_get_user_frame_ptr@@Base>
  42864d:	lea    rbp,[rbp+rbp*4+0x0]
  428652:	cmp    BYTE PTR [rax+rbp*8+0x24],0x0
  428657:	je     428686 <flatcc_json_parser_union_type_vector@@Base+0x66>
  428659:	cmp    DWORD PTR [r13+0x20],0x0
  42865e:	jne    42867c <flatcc_json_parser_union_type_vector@@Base+0x5c>
  428660:	mov    DWORD PTR [r13+0x20],0x1c
  428668:	mov    eax,DWORD PTR [r13+0x8]
  42866c:	mov    ecx,r14d
  42866f:	sub    ecx,eax
  428671:	add    ecx,0x1
  428674:	mov    DWORD PTR [r13+0x1c],ecx
  428678:	mov    QWORD PTR [r13+0x38],r14
  42867c:	mov    r15,QWORD PTR [rsp+0x18]
  428681:	jmp    428c69 <flatcc_json_parser_union_type_vector@@Base+0x649>
  428686:	mov    r15,rax
  428689:	lea    rax,[rax+rbp*8]
  42868d:	add    rax,0x24
  428691:	mov    BYTE PTR [rax],0x1
  428694:	mov    QWORD PTR [rsp+0x20],r13
  428699:	mov    rdi,QWORD PTR [r13+0x0]
  42869d:	mov    esi,0x1
  4286a2:	mov    edx,0x1
  4286a7:	mov    ecx,0xffffffff
  4286ac:	call   420730 <flatcc_builder_start_vector@@Base>
  4286b1:	test   eax,eax
  4286b3:	je     4286d2 <flatcc_json_parser_union_type_vector@@Base+0xb2>
  4286b5:	mov    r15,QWORD PTR [rsp+0x18]
  4286ba:	mov    rsi,r14
  4286bd:	mov    r13,QWORD PTR [rsp+0x20]
  4286c2:	cmp    DWORD PTR [r13+0x20],0x0
  4286c7:	jne    428c69 <flatcc_json_parser_union_type_vector@@Base+0x649>
  4286cd:	jmp    428c4e <flatcc_json_parser_union_type_vector@@Base+0x62e>
  4286d2:	mov    QWORD PTR [rsp+0x40],r15
  4286d7:	cmp    r14,QWORD PTR [rsp+0x18]
  4286dc:	mov    QWORD PTR [rsp+0x28],rbp
  4286e1:	mov    QWORD PTR [rsp+0x38],r12
  4286e6:	mov    DWORD PTR [rsp+0x34],ebx
  4286ea:	je     428710 <flatcc_json_parser_union_type_vector@@Base+0xf0>
  4286ec:	cmp    BYTE PTR [r14],0x5b
  4286f0:	jne    428710 <flatcc_json_parser_union_type_vector@@Base+0xf0>
  4286f2:	lea    rax,[r14+0x1]
  4286f6:	mov    rcx,QWORD PTR [rsp+0x18]
  4286fb:	sub    rcx,rax
  4286fe:	cmp    rcx,0x2
  428702:	jl     428768 <flatcc_json_parser_union_type_vector@@Base+0x148>
  428704:	cmp    BYTE PTR [rax],0x20
  428707:	jle    428751 <flatcc_json_parser_union_type_vector@@Base+0x131>
  428709:	mov    r13,QWORD PTR [rsp+0x18]
  42870e:	jmp    42877d <flatcc_json_parser_union_type_vector@@Base+0x15d>
  428710:	mov    r13,QWORD PTR [rsp+0x20]
  428715:	cmp    DWORD PTR [r13+0x20],0x0
  42871a:	mov    r15,QWORD PTR [rsp+0x18]
  42871f:	mov    rdx,r15
  428722:	mov    rbp,QWORD PTR [rsp+0x28]
  428727:	jne    428b20 <flatcc_json_parser_union_type_vector@@Base+0x500>
  42872d:	mov    DWORD PTR [r13+0x20],0x16
  428735:	mov    eax,DWORD PTR [r13+0x8]
  428739:	mov    ecx,r14d
  42873c:	sub    ecx,eax
  42873e:	add    ecx,0x1
  428741:	mov    DWORD PTR [r13+0x1c],ecx
  428745:	mov    QWORD PTR [r13+0x38],r14
  428749:	mov    rdx,r15
  42874c:	jmp    428b20 <flatcc_json_parser_union_type_vector@@Base+0x500>
  428751:	jne    428768 <flatcc_json_parser_union_type_vector@@Base+0x148>
  428753:	cmp    BYTE PTR [r14+0x2],0x20
  428758:	jle    428768 <flatcc_json_parser_union_type_vector@@Base+0x148>
  42875a:	add    r14,0x2
  42875e:	mov    rax,r14
  428761:	mov    r13,QWORD PTR [rsp+0x18]
  428766:	jmp    42877d <flatcc_json_parser_union_type_vector@@Base+0x15d>
  428768:	mov    rdi,QWORD PTR [rsp+0x20]
  42876d:	mov    rsi,rax
  428770:	mov    r13,QWORD PTR [rsp+0x18]
  428775:	mov    rdx,r13
  428778:	call   425750 <flatcc_json_parser_space_ext@@Base>
  42877d:	mov    rcx,r13
  428780:	cmp    rax,r13
  428783:	mov    r13,QWORD PTR [rsp+0x20]
  428788:	je     4287d2 <flatcc_json_parser_union_type_vector@@Base+0x1b2>
  42878a:	cmp    BYTE PTR [rax],0x5d
  42878d:	jne    4287cf <flatcc_json_parser_union_type_vector@@Base+0x1af>
  42878f:	lea    rdx,[rax+0x1]
  428793:	mov    r15,QWORD PTR [rsp+0x18]
  428798:	mov    rcx,r15
  42879b:	sub    rcx,rdx
  42879e:	cmp    rcx,0x2
  4287a2:	mov    rbp,QWORD PTR [rsp+0x28]
  4287a7:	jl     428b0f <flatcc_json_parser_union_type_vector@@Base+0x4ef>
  4287ad:	cmp    BYTE PTR [rdx],0x20
  4287b0:	jg     428b20 <flatcc_json_parser_union_type_vector@@Base+0x500>
  4287b6:	jne    428b0f <flatcc_json_parser_union_type_vector@@Base+0x4ef>
  4287bc:	cmp    BYTE PTR [rax+0x2],0x20
  4287c0:	jle    428b0f <flatcc_json_parser_union_type_vector@@Base+0x4ef>
  4287c6:	add    rax,0x2
  4287ca:	jmp    428b1d <flatcc_json_parser_union_type_vector@@Base+0x4fd>
  4287cf:	mov    rcx,rax
  4287d2:	mov    rbp,rcx
  4287d5:	mov    rdi,QWORD PTR [r13+0x0]
  4287d9:	mov    esi,0x1
  4287de:	call   41fdc0 <flatcc_builder_extend_vector@@Base>
  4287e3:	test   rax,rax
  4287e6:	je     428a78 <flatcc_json_parser_union_type_vector@@Base+0x458>
  4287ec:	mov    rbx,rax
  4287ef:	mov    r14,QWORD PTR [rsp+0x90]
  4287f7:	mov    r15,QWORD PTR [rsp+0x18]
  4287fc:	mov    rsi,rbp
  4287ff:	mov    BYTE PTR [rsp+0x17],0x0
  428804:	cmp    rsi,r15
  428807:	je     42893a <flatcc_json_parser_union_type_vector@@Base+0x31a>
  42880d:	mov    al,BYTE PTR [rsi]
  42880f:	xor    r12d,r12d
  428812:	cmp    al,0x2d
  428814:	sete   r12b
  428818:	add    r12,rsi
  42881b:	xor    ebp,ebp
  42881d:	cmp    r12,r15
  428820:	je     428875 <flatcc_json_parser_union_type_vector@@Base+0x255>
  428822:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42882c:	nop    DWORD PTR [rax+0x0]
  428830:	movsx  rcx,BYTE PTR [r12]
  428835:	mov    edx,ecx
  428837:	add    dl,0xd0
  42883a:	cmp    dl,0x9
  42883d:	ja     428881 <flatcc_json_parser_union_type_vector@@Base+0x261>
  42883f:	lea    rdx,[rbp*4+0x0]
  428847:	add    rdx,rbp
  42884a:	lea    rdx,[rcx+rdx*2]
  42884e:	add    rdx,0xffffffffffffffd0
  428852:	cmp    rbp,rdx
  428855:	ja     4288bc <flatcc_json_parser_union_type_vector@@Base+0x29c>
  428857:	add    r12,0x1
  42885b:	mov    rbp,rdx
  42885e:	cmp    r15,r12
  428861:	jne    428830 <flatcc_json_parser_union_type_vector@@Base+0x210>
  428863:	xor    ecx,ecx
  428865:	mov    r12,r15
  428868:	mov    rbp,rdx
  42886b:	cmp    r12,rsi
  42886e:	jne    428888 <flatcc_json_parser_union_type_vector@@Base+0x268>
  428870:	jmp    4288fe <flatcc_json_parser_union_type_vector@@Base+0x2de>
  428875:	mov    r12,r15
  428878:	xor    ecx,ecx
  42887a:	cmp    r12,rsi
  42887d:	jne    428888 <flatcc_json_parser_union_type_vector@@Base+0x268>
  42887f:	jmp    4288fe <flatcc_json_parser_union_type_vector@@Base+0x2de>
  428881:	mov    cl,0x1
  428883:	cmp    r12,rsi
  428886:	je     4288fe <flatcc_json_parser_union_type_vector@@Base+0x2de>
  428888:	test   cl,cl
  42888a:	je     4288e4 <flatcc_json_parser_union_type_vector@@Base+0x2c4>
  42888c:	mov    cl,BYTE PTR [r12]
  428890:	add    cl,0xd2
  428893:	cmp    cl,0x37
  428896:	ja     4288e4 <flatcc_json_parser_union_type_vector@@Base+0x2c4>
  428898:	movzx  ecx,cl
  42889b:	movabs rdx,0x80000000800001
  4288a5:	bt     rdx,rcx
  4288a9:	jae    4288e4 <flatcc_json_parser_union_type_vector@@Base+0x2c4>
  4288ab:	cmp    DWORD PTR [r13+0x20],0x0
  4288b0:	jne    4288df <flatcc_json_parser_union_type_vector@@Base+0x2bf>
  4288b2:	mov    DWORD PTR [r13+0x20],0xc
  4288ba:	jmp    4288cb <flatcc_json_parser_union_type_vector@@Base+0x2ab>
  4288bc:	cmp    DWORD PTR [r13+0x20],0x0
  4288c1:	jne    4288df <flatcc_json_parser_union_type_vector@@Base+0x2bf>
  4288c3:	mov    DWORD PTR [r13+0x20],0x8
  4288cb:	mov    ecx,DWORD PTR [r13+0x8]
  4288cf:	mov    edx,r12d
  4288d2:	sub    edx,ecx
  4288d4:	add    edx,0x1
  4288d7:	mov    DWORD PTR [r13+0x1c],edx
  4288db:	mov    QWORD PTR [r13+0x38],r12
  4288df:	xor    ebp,ebp
  4288e1:	mov    r12,r15
  4288e4:	cmp    r12,rsi
  4288e7:	je     4288fe <flatcc_json_parser_union_type_vector@@Base+0x2de>
  4288e9:	cmp    al,0x2d
  4288eb:	jne    42890a <flatcc_json_parser_union_type_vector@@Base+0x2ea>
  4288ed:	cmp    DWORD PTR [r13+0x20],0x0
  4288f2:	jne    42893a <flatcc_json_parser_union_type_vector@@Base+0x31a>
  4288f4:	mov    DWORD PTR [r13+0x20],0x8
  4288fc:	jmp    428926 <flatcc_json_parser_union_type_vector@@Base+0x306>
  4288fe:	xor    ebp,ebp
  428900:	mov    r12,rsi
  428903:	cmp    rsi,r12
  428906:	jne    428979 <flatcc_json_parser_union_type_vector@@Base+0x359>
  428908:	jmp    428944 <flatcc_json_parser_union_type_vector@@Base+0x324>
  42890a:	cmp    rbp,0x100
  428911:	jb     428a65 <flatcc_json_parser_union_type_vector@@Base+0x445>
  428917:	cmp    DWORD PTR [r13+0x20],0x0
  42891c:	jne    42893a <flatcc_json_parser_union_type_vector@@Base+0x31a>
  42891e:	mov    DWORD PTR [r13+0x20],0x7
  428926:	mov    eax,DWORD PTR [r13+0x8]
  42892a:	mov    ecx,r12d
  42892d:	sub    ecx,eax
  42892f:	add    ecx,0x1
  428932:	mov    DWORD PTR [r13+0x1c],ecx
  428936:	mov    QWORD PTR [r13+0x38],r12
  42893a:	xor    ebp,ebp
  42893c:	mov    r12,r15
  42893f:	cmp    rsi,r12
  428942:	jne    428979 <flatcc_json_parser_union_type_vector@@Base+0x359>
  428944:	mov    rdi,r13
  428947:	mov    rbp,rsi
  42894a:	mov    rdx,r15
  42894d:	mov    rcx,QWORD PTR [rsp+0x80]
  428955:	lea    r8,[rsp+0x17]
  42895a:	call   427fb0 <flatcc_json_parser_union_type@@Base+0x2d0>
  42895f:	mov    r12,rax
  428962:	cmp    rax,rbp
  428965:	je     428cba <flatcc_json_parser_union_type_vector@@Base+0x69a>
  42896b:	cmp    r12,r15
  42896e:	je     428cba <flatcc_json_parser_union_type_vector@@Base+0x69a>
  428974:	mov    bpl,BYTE PTR [rsp+0x17]
  428979:	movzx  edi,bpl
  42897d:	call   r14
  428980:	test   eax,eax
  428982:	jne    428996 <flatcc_json_parser_union_type_vector@@Base+0x376>
  428984:	test   BYTE PTR [r13+0x10],0x1
  428989:	je     428cc6 <flatcc_json_parser_union_type_vector@@Base+0x6a6>
  42898f:	mov    BYTE PTR [rsp+0x17],0x0
  428994:	xor    ebp,ebp
  428996:	mov    BYTE PTR [rbx],bpl
  428999:	mov    rax,r15
  42899c:	sub    rax,r12
  42899f:	cmp    rax,0x2
  4289a3:	mov    rbp,QWORD PTR [rsp+0x28]
  4289a8:	jl     4289c9 <flatcc_json_parser_union_type_vector@@Base+0x3a9>
  4289aa:	cmp    BYTE PTR [r12],0x20
  4289af:	jg     4289da <flatcc_json_parser_union_type_vector@@Base+0x3ba>
  4289b1:	jne    4289c9 <flatcc_json_parser_union_type_vector@@Base+0x3a9>
  4289b3:	cmp    BYTE PTR [r12+0x1],0x20
  4289b9:	jle    4289c9 <flatcc_json_parser_union_type_vector@@Base+0x3a9>
  4289bb:	add    r12,0x1
  4289bf:	cmp    r12,r15
  4289c2:	jne    4289e3 <flatcc_json_parser_union_type_vector@@Base+0x3c3>
  4289c4:	jmp    428a90 <flatcc_json_parser_union_type_vector@@Base+0x470>
  4289c9:	mov    rdi,r13
  4289cc:	mov    rsi,r12
  4289cf:	mov    rdx,r15
  4289d2:	call   425750 <flatcc_json_parser_space_ext@@Base>
  4289d7:	mov    r12,rax
  4289da:	cmp    r12,r15
  4289dd:	je     428a90 <flatcc_json_parser_union_type_vector@@Base+0x470>
  4289e3:	mov    al,BYTE PTR [r12]
  4289e7:	cmp    al,0x2c
  4289e9:	jne    428a98 <flatcc_json_parser_union_type_vector@@Base+0x478>
  4289ef:	lea    rax,[r12+0x1]
  4289f4:	mov    rcx,r15
  4289f7:	sub    rcx,rax
  4289fa:	cmp    rcx,0x2
  4289fe:	jl     428a20 <flatcc_json_parser_union_type_vector@@Base+0x400>
  428a00:	cmp    BYTE PTR [rax],0x20
  428a03:	jg     428a2e <flatcc_json_parser_union_type_vector@@Base+0x40e>
  428a05:	jne    428a20 <flatcc_json_parser_union_type_vector@@Base+0x400>
  428a07:	cmp    BYTE PTR [r12+0x2],0x20
  428a0d:	jle    428a20 <flatcc_json_parser_union_type_vector@@Base+0x400>
  428a0f:	add    r12,0x2
  428a13:	mov    rax,r12
  428a16:	cmp    rax,r15
  428a19:	jne    428a37 <flatcc_json_parser_union_type_vector@@Base+0x417>
  428a1b:	jmp    428ac9 <flatcc_json_parser_union_type_vector@@Base+0x4a9>
  428a20:	mov    rdi,r13
  428a23:	mov    rsi,rax
  428a26:	mov    rdx,r15
  428a29:	call   425750 <flatcc_json_parser_space_ext@@Base>
  428a2e:	cmp    rax,r15
  428a31:	je     428ac9 <flatcc_json_parser_union_type_vector@@Base+0x4a9>
  428a37:	cmp    BYTE PTR [rax],0x5d
  428a3a:	je     428af4 <flatcc_json_parser_union_type_vector@@Base+0x4d4>
  428a40:	mov    rdi,QWORD PTR [r13+0x0]
  428a44:	mov    rbx,rax
  428a47:	mov    esi,0x1
  428a4c:	call   41fdc0 <flatcc_builder_extend_vector@@Base>
  428a51:	mov    rsi,rbx
  428a54:	mov    rbx,rax
  428a57:	test   rax,rax
  428a5a:	jne    4287ff <flatcc_json_parser_union_type_vector@@Base+0x1df>
  428a60:	jmp    428c47 <flatcc_json_parser_union_type_vector@@Base+0x627>
  428a65:	mov    BYTE PTR [rsp+0x17],bpl
  428a6a:	cmp    rsi,r12
  428a6d:	jne    428979 <flatcc_json_parser_union_type_vector@@Base+0x359>
  428a73:	jmp    428944 <flatcc_json_parser_union_type_vector@@Base+0x324>
  428a78:	mov    r15,QWORD PTR [rsp+0x18]
  428a7d:	mov    rsi,rbp
  428a80:	cmp    DWORD PTR [r13+0x20],0x0
  428a85:	jne    428c69 <flatcc_json_parser_union_type_vector@@Base+0x649>
  428a8b:	jmp    428c4e <flatcc_json_parser_union_type_vector@@Base+0x62e>
  428a90:	mov    rdx,r15
  428a93:	jmp    428b20 <flatcc_json_parser_union_type_vector@@Base+0x500>
  428a98:	cmp    al,0x5d
  428a9a:	jne    428c88 <flatcc_json_parser_union_type_vector@@Base+0x668>
  428aa0:	lea    rdx,[r12+0x1]
  428aa5:	mov    rax,r15
  428aa8:	sub    rax,rdx
  428aab:	cmp    rax,0x2
  428aaf:	jl     428b0f <flatcc_json_parser_union_type_vector@@Base+0x4ef>
  428ab1:	cmp    BYTE PTR [rdx],0x20
  428ab4:	jg     428b20 <flatcc_json_parser_union_type_vector@@Base+0x500>
  428ab6:	jne    428b0f <flatcc_json_parser_union_type_vector@@Base+0x4ef>
  428ab8:	cmp    BYTE PTR [r12+0x2],0x20
  428abe:	jle    428b0f <flatcc_json_parser_union_type_vector@@Base+0x4ef>
  428ac0:	add    r12,0x2
  428ac4:	mov    rdx,r12
  428ac7:	jmp    428b20 <flatcc_json_parser_union_type_vector@@Base+0x500>
  428ac9:	cmp    DWORD PTR [r13+0x20],0x0
  428ace:	mov    rdx,r15
  428ad1:	jne    428b20 <flatcc_json_parser_union_type_vector@@Base+0x500>
  428ad3:	mov    DWORD PTR [r13+0x20],0x9
  428adb:	mov    eax,DWORD PTR [r13+0x8]
  428adf:	mov    ecx,r15d
  428ae2:	sub    ecx,eax
  428ae4:	add    ecx,0x1
  428ae7:	mov    DWORD PTR [r13+0x1c],ecx
  428aeb:	mov    QWORD PTR [r13+0x38],r15
  428aef:	mov    rdx,r15
  428af2:	jmp    428b20 <flatcc_json_parser_union_type_vector@@Base+0x500>
  428af4:	lea    rdx,[rax+0x1]
  428af8:	mov    rcx,r15
  428afb:	sub    rcx,rdx
  428afe:	cmp    rcx,0x2
  428b02:	jl     428b0f <flatcc_json_parser_union_type_vector@@Base+0x4ef>
  428b04:	cmp    BYTE PTR [rdx],0x20
  428b07:	jg     428b20 <flatcc_json_parser_union_type_vector@@Base+0x500>
  428b09:	je     4287bc <flatcc_json_parser_union_type_vector@@Base+0x19c>
  428b0f:	mov    rdi,r13
  428b12:	mov    rsi,rdx
  428b15:	mov    rdx,r15
  428b18:	call   425750 <flatcc_json_parser_space_ext@@Base>
  428b1d:	mov    rdx,rax
  428b20:	mov    QWORD PTR [rsp+0x18],rdx
  428b25:	mov    rbx,QWORD PTR [rsp+0x40]
  428b2a:	add    rbx,0x10
  428b2e:	mov    rdi,QWORD PTR [r13+0x0]
  428b32:	call   421990 <flatcc_builder_vector_count@@Base>
  428b37:	mov    r12,rax
  428b3a:	mov    DWORD PTR [rbx+rbp*8+0x18],r12d
  428b3f:	mov    rbx,r13
  428b42:	mov    r13d,r12d
  428b45:	mov    rdi,QWORD PTR [rbx]
  428b48:	mov    rsi,r13
  428b4b:	call   41f0f0 <flatcc_builder_enter_user_frame@@Base>
  428b50:	mov    r14,rax
  428b53:	mov    rdi,QWORD PTR [rbx]
  428b56:	mov    rsi,rax
  428b59:	call   41f280 <flatcc_builder_get_user_frame_ptr@@Base>
  428b5e:	mov    rbp,rax
  428b61:	mov    rdi,QWORD PTR [rbx]
  428b64:	call   4219a0 <flatcc_builder_vector_edit@@Base>
  428b69:	mov    rdi,rbp
  428b6c:	mov    rsi,rax
  428b6f:	mov    rdx,r13
  428b72:	call   4060e0 <memcpy@plt>
  428b77:	mov    rdi,QWORD PTR [rbx]
  428b7a:	call   4218c0 <flatcc_builder_end_vector@@Base>
  428b7f:	test   eax,eax
  428b81:	je     428c3f <flatcc_json_parser_union_type_vector@@Base+0x61f>
  428b87:	mov    r13d,eax
  428b8a:	mov    rdi,QWORD PTR [rbx]
  428b8d:	movzx  ebp,WORD PTR [rsp+0x34]
  428b92:	lea    esi,[rbp-0x1]
  428b95:	call   421dc0 <flatcc_builder_table_add_offset@@Base>
  428b9a:	test   rax,rax
  428b9d:	je     428c3f <flatcc_json_parser_union_type_vector@@Base+0x61f>
  428ba3:	mov    DWORD PTR [rax],r13d
  428ba6:	mov    rdi,QWORD PTR [rbx]
  428ba9:	mov    rsi,QWORD PTR [rsp+0x38]
  428bae:	call   41f280 <flatcc_builder_get_user_frame_ptr@@Base>
  428bb3:	mov    rcx,QWORD PTR [rsp+0x28]
  428bb8:	mov    QWORD PTR [rax+rcx*8+0x30],r14
  428bbd:	mov    rsi,QWORD PTR [rax+rcx*8+0x10]
  428bc2:	mov    rcx,QWORD PTR [rax+0x8]
  428bc6:	test   rsi,rsi
  428bc9:	je     428c7b <flatcc_json_parser_union_type_vector@@Base+0x65b>
  428bcf:	test   rcx,rcx
  428bd2:	je     428cee <flatcc_json_parser_union_type_vector@@Base+0x6ce>
  428bd8:	mov    r9,rbp
  428bdb:	mov    rdx,QWORD PTR [rsp+0x88]
  428be3:	mov    rdi,rax
  428be6:	add    rdi,0x10
  428bea:	add    rcx,0xffffffffffffffff
  428bee:	mov    QWORD PTR [rax+0x8],rcx
  428bf2:	mov    eax,DWORD PTR [rbx+0x18]
  428bf5:	mov    DWORD PTR [rsp+0x20],eax
  428bf9:	mov    rbp,rbx
  428bfc:	mov    r13,QWORD PTR [rbx+0x8]
  428c00:	mov    rcx,QWORD PTR [rsp+0x28]
  428c05:	mov    eax,DWORD PTR [rdi+rcx*8+0x10]
  428c09:	mov    DWORD PTR [rbx+0x18],eax
  428c0c:	mov    rax,QWORD PTR [rdi+rcx*8+0x8]
  428c11:	mov    QWORD PTR [rbx+0x8],rax
  428c15:	mov    QWORD PTR [rsp],rdx
  428c19:	mov    rdi,rbx
  428c1c:	mov    rdx,r15
  428c1f:	mov    rcx,r14
  428c22:	mov    r8d,r12d
  428c25:	call   428250 <flatcc_json_parser_union_vector@@Base+0xe0>
  428c2a:	cmp    rax,r15
  428c2d:	je     428c69 <flatcc_json_parser_union_type_vector@@Base+0x649>
  428c2f:	mov    eax,DWORD PTR [rsp+0x20]
  428c33:	mov    DWORD PTR [rbp+0x18],eax
  428c36:	mov    QWORD PTR [rbp+0x8],r13
  428c3a:	jmp    42867c <flatcc_json_parser_union_type_vector@@Base+0x5c>
  428c3f:	mov    rsi,QWORD PTR [rsp+0x18]
  428c44:	mov    r13,rbx
  428c47:	cmp    DWORD PTR [r13+0x20],0x0
  428c4c:	jne    428c69 <flatcc_json_parser_union_type_vector@@Base+0x649>
  428c4e:	mov    DWORD PTR [r13+0x20],0x21
  428c56:	mov    eax,DWORD PTR [r13+0x8]
  428c5a:	mov    ecx,esi
  428c5c:	sub    ecx,eax
  428c5e:	add    ecx,0x1
  428c61:	mov    DWORD PTR [r13+0x1c],ecx
  428c65:	mov    QWORD PTR [r13+0x38],rsi
  428c69:	mov    rax,r15
  428c6c:	add    rsp,0x48
  428c70:	pop    rbx
  428c71:	pop    r12
  428c73:	pop    r13
  428c75:	pop    r14
  428c77:	pop    r15
  428c79:	pop    rbp
  428c7a:	ret    
  428c7b:	add    rcx,0x1
  428c7f:	mov    QWORD PTR [rax+0x8],rcx
  428c83:	jmp    42867c <flatcc_json_parser_union_type_vector@@Base+0x5c>
  428c88:	cmp    DWORD PTR [r13+0x20],0x0
  428c8d:	mov    rdx,r15
  428c90:	jne    428b20 <flatcc_json_parser_union_type_vector@@Base+0x500>
  428c96:	mov    DWORD PTR [r13+0x20],0x9
  428c9e:	mov    eax,DWORD PTR [r13+0x8]
  428ca2:	mov    ecx,r12d
  428ca5:	sub    ecx,eax
  428ca7:	add    ecx,0x1
  428caa:	mov    DWORD PTR [r13+0x1c],ecx
  428cae:	mov    QWORD PTR [r13+0x38],r12
  428cb2:	mov    rdx,r15
  428cb5:	jmp    428b20 <flatcc_json_parser_union_type_vector@@Base+0x500>
  428cba:	mov    rsi,r12
  428cbd:	cmp    DWORD PTR [r13+0x20],0x0
  428cc2:	jne    428c69 <flatcc_json_parser_union_type_vector@@Base+0x649>
  428cc4:	jmp    428c4e <flatcc_json_parser_union_type_vector@@Base+0x62e>
  428cc6:	cmp    DWORD PTR [r13+0x20],0x0
  428ccb:	jne    428c69 <flatcc_json_parser_union_type_vector@@Base+0x649>
  428ccd:	mov    DWORD PTR [r13+0x20],0xf
  428cd5:	mov    eax,DWORD PTR [r13+0x8]
  428cd9:	mov    ecx,r12d
  428cdc:	sub    ecx,eax
  428cde:	add    ecx,0x1
  428ce1:	mov    DWORD PTR [r13+0x1c],ecx
  428ce5:	mov    QWORD PTR [r13+0x38],r12
  428ce9:	jmp    428c69 <flatcc_json_parser_union_type_vector@@Base+0x649>
  428cee:	lea    rdi,[rip+0x132a5]        # 43bf9a <flatcc_builder_padding_base@@Base+0x276a>
  428cf5:	lea    rsi,[rip+0x132ad]        # 43bfa9 <flatcc_builder_padding_base@@Base+0x2779>
  428cfc:	lea    rcx,[rip+0x133d6]        # 43c0d9 <flatcc_builder_padding_base@@Base+0x28a9>
  428d03:	mov    edx,0x462
  428d08:	call   406070 <__assert_fail@plt>
  428d0d:	nop    DWORD PTR [rax]

0000000000428d10 <flatcc_json_parser_table_as_root@@Base>:
  428d10:	push   r15
  428d12:	push   r14
  428d14:	push   r12
  428d16:	push   rbx
  428d17:	sub    rsp,0x58
  428d1b:	mov    r12,rcx
  428d1e:	mov    r14,rdx
  428d21:	mov    r15,rdi
  428d24:	mov    ecx,r8d
  428d27:	shr    ecx,1
  428d29:	and    ecx,0x2
  428d2c:	test   rsi,rsi
  428d2f:	lea    rbx,[rsp+0x10]
  428d34:	cmovne rbx,rsi
  428d38:	add    r12,rdx
  428d3b:	vxorps xmm0,xmm0,xmm0
  428d3f:	vmovups YMMWORD PTR [rbx],ymm0
  428d43:	vmovups YMMWORD PTR [rbx+0x20],ymm0
  428d48:	mov    QWORD PTR [rbx+0x40],0x0
  428d50:	mov    QWORD PTR [rbx],rdi
  428d53:	mov    QWORD PTR [rbx+0x8],rdx
  428d57:	mov    DWORD PTR [rbx+0x18],0x1
  428d5e:	mov    DWORD PTR [rbx+0x10],r8d
  428d62:	mov    QWORD PTR [rbx+0x28],rdx
  428d66:	mov    QWORD PTR [rbx+0x30],r12
  428d6a:	mov    QWORD PTR [rbx+0x38],rdx
  428d6e:	xor    edx,edx
  428d70:	mov    rsi,r9
  428d73:	vzeroupper 
  428d76:	call   41f8d0 <flatcc_builder_start_buffer@@Base>
  428d7b:	mov    ecx,eax
  428d7d:	mov    eax,0xffffffff
  428d82:	test   ecx,ecx
  428d84:	jne    428dbf <flatcc_json_parser_table_as_root@@Base+0xaf>
  428d86:	lea    rcx,[rsp+0xc]
  428d8b:	mov    rdi,rbx
  428d8e:	mov    rsi,r14
  428d91:	mov    rdx,r12
  428d94:	call   QWORD PTR [rsp+0x80]
  428d9b:	mov    eax,DWORD PTR [rbx+0x20]
  428d9e:	test   eax,eax
  428da0:	jne    428dbf <flatcc_json_parser_table_as_root@@Base+0xaf>
  428da2:	mov    esi,DWORD PTR [rsp+0xc]
  428da6:	mov    rdi,r15
  428da9:	call   41faf0 <flatcc_builder_end_buffer@@Base>
  428dae:	mov    ecx,eax
  428db0:	mov    eax,0xffffffff
  428db5:	test   ecx,ecx
  428db7:	je     428dbf <flatcc_json_parser_table_as_root@@Base+0xaf>
  428db9:	mov    QWORD PTR [rbx+0x40],r14
  428dbd:	xor    eax,eax
  428dbf:	add    rsp,0x58
  428dc3:	pop    rbx
  428dc4:	pop    r12
  428dc6:	pop    r14
  428dc8:	pop    r15
  428dca:	ret    
  428dcb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000428dd0 <flatcc_json_parser_struct_as_root@@Base>:
  428dd0:	push   r15
  428dd2:	push   r14
  428dd4:	push   r12
  428dd6:	push   rbx
  428dd7:	sub    rsp,0x58
  428ddb:	mov    r12,rcx
  428dde:	mov    r14,rdx
  428de1:	mov    r15,rdi
  428de4:	mov    ecx,r8d
  428de7:	shr    ecx,1
  428de9:	and    ecx,0x2
  428dec:	test   rsi,rsi
  428def:	lea    rbx,[rsp+0x10]
  428df4:	cmovne rbx,rsi
  428df8:	add    r12,rdx
  428dfb:	vxorps xmm0,xmm0,xmm0
  428dff:	vmovups YMMWORD PTR [rbx],ymm0
  428e03:	vmovups YMMWORD PTR [rbx+0x20],ymm0
  428e08:	mov    QWORD PTR [rbx+0x40],0x0
  428e10:	mov    QWORD PTR [rbx],rdi
  428e13:	mov    QWORD PTR [rbx+0x8],rdx
  428e17:	mov    DWORD PTR [rbx+0x18],0x1
  428e1e:	mov    DWORD PTR [rbx+0x10],r8d
  428e22:	mov    QWORD PTR [rbx+0x28],rdx
  428e26:	mov    QWORD PTR [rbx+0x30],r12
  428e2a:	mov    QWORD PTR [rbx+0x38],rdx
  428e2e:	xor    edx,edx
  428e30:	mov    rsi,r9
  428e33:	vzeroupper 
  428e36:	call   41f8d0 <flatcc_builder_start_buffer@@Base>
  428e3b:	mov    ecx,eax
  428e3d:	mov    eax,0xffffffff
  428e42:	test   ecx,ecx
  428e44:	jne    428e7f <flatcc_json_parser_struct_as_root@@Base+0xaf>
  428e46:	lea    rcx,[rsp+0xc]
  428e4b:	mov    rdi,rbx
  428e4e:	mov    rsi,r14
  428e51:	mov    rdx,r12
  428e54:	call   QWORD PTR [rsp+0x80]
  428e5b:	mov    eax,DWORD PTR [rbx+0x20]
  428e5e:	test   eax,eax
  428e60:	jne    428e7f <flatcc_json_parser_struct_as_root@@Base+0xaf>
  428e62:	mov    esi,DWORD PTR [rsp+0xc]
  428e66:	mov    rdi,r15
  428e69:	call   41faf0 <flatcc_builder_end_buffer@@Base>
  428e6e:	mov    ecx,eax
  428e70:	mov    eax,0xffffffff
  428e75:	test   ecx,ecx
  428e77:	je     428e7f <flatcc_json_parser_struct_as_root@@Base+0xaf>
  428e79:	mov    QWORD PTR [rbx+0x40],r14
  428e7d:	xor    eax,eax
  428e7f:	add    rsp,0x58
  428e83:	pop    rbx
  428e84:	pop    r12
  428e86:	pop    r14
  428e88:	pop    r15
  428e8a:	ret    
  428e8b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000428e90 <flatcc_json_printer_error_string@@Base>:
  428e90:	cmp    edi,0x3
  428e93:	ja     428ea4 <flatcc_json_printer_error_string@@Base+0x14>
  428e95:	movsxd rax,edi
  428e98:	lea    rcx,[rip+0x1af41]        # 443de0 <flatcc_builder_padding_base@@Base+0xa5b0>
  428e9f:	mov    rax,QWORD PTR [rcx+rax*8]
  428ea3:	ret    
  428ea4:	lea    rax,[rip+0x12295]        # 43b140 <flatcc_builder_padding_base@@Base+0x1910>
  428eab:	ret    
  428eac:	nop    DWORD PTR [rax+0x0]

0000000000428eb0 <flatcc_json_printer_fmt_float@@Base>:
  428eb0:	vcvtss2sd xmm0,xmm0,xmm0
  428eb4:	jmp    428ec0 <flatcc_json_printer_fmt_float@@Base+0x10>
  428eb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428ec0:	push   rbp
  428ec1:	push   r15
  428ec3:	push   r14
  428ec5:	push   r13
  428ec7:	push   r12
  428ec9:	push   rbx
  428eca:	sub    rsp,0x88
  428ed1:	test   rdi,rdi
  428ed4:	je     429bd6 <flatcc_json_printer_fmt_float@@Base+0xd26>
  428eda:	vmovq  rcx,xmm0
  428edf:	lea    rax,[rcx+rcx*1]
  428ee3:	movabs rdx,0xffe0000000000001
  428eed:	cmp    rax,rdx
  428ef0:	jb     428f18 <flatcc_json_printer_fmt_float@@Base+0x68>
  428ef2:	mov    rdx,rcx
  428ef5:	shr    rdx,0x20
  428ef9:	lea    rsi,[rip+0x13d85]        # 43cc85 <flatcc_builder_padding_base@@Base+0x3455>
  428f00:	xor    eax,eax
  428f02:	add    rsp,0x88
  428f09:	pop    rbx
  428f0a:	pop    r12
  428f0c:	pop    r13
  428f0e:	pop    r14
  428f10:	pop    r15
  428f12:	pop    rbp
  428f13:	jmp    406120 <sprintf@plt>
  428f18:	test   rcx,rcx
  428f1b:	js     428f22 <flatcc_json_printer_fmt_float@@Base+0x72>
  428f1d:	mov    rbx,rdi
  428f20:	jmp    428f3e <flatcc_json_printer_fmt_float@@Base+0x8e>
  428f22:	lea    rbx,[rdi+0x1]
  428f26:	mov    BYTE PTR [rdi],0x2d
  428f29:	vpxor  xmm0,xmm0,XMMWORD PTR [rip+0xcd1f]        # 435c50 <_IO_stdin_used@@Base+0xc50>
  428f31:	movabs rax,0x8000000000000000
  428f3b:	xor    rcx,rax
  428f3e:	movabs r11,0x7ff0000000000000
  428f48:	cmp    rcx,r11
  428f4b:	je     428f63 <flatcc_json_printer_fmt_float@@Base+0xb3>
  428f4d:	test   rcx,rcx
  428f50:	jne    428f73 <flatcc_json_printer_fmt_float@@Base+0xc3>
  428f52:	mov    WORD PTR [rbx],0x30
  428f57:	lea    eax,[rbx+0x1]
  428f5a:	sub    eax,edi
  428f5c:	mov    ebx,eax
  428f5e:	jmp    4299e9 <flatcc_json_printer_fmt_float@@Base+0xb39>
  428f63:	mov    DWORD PTR [rbx],0x666e69
  428f69:	add    ebx,0x3
  428f6c:	sub    ebx,edi
  428f6e:	jmp    4299e9 <flatcc_json_printer_fmt_float@@Base+0xb39>
  428f73:	vmovq  rax,xmm0
  428f78:	mov    cl,0x34
  428f7a:	bzhi   r8,rax,rcx
  428f7f:	and    r11,rax
  428f82:	je     428fa4 <flatcc_json_printer_fmt_float@@Base+0xf4>
  428f84:	movabs r10,0xfffffffffffff
  428f8e:	add    r10,0x1
  428f92:	or     r10,r8
  428f95:	mov    rsi,r11
  428f98:	shr    rsi,0x34
  428f9c:	add    esi,0xfffffbcd
  428fa2:	jmp    428fb5 <flatcc_json_printer_fmt_float@@Base+0x105>
  428fa4:	mov    esi,0xfffffbce
  428fa9:	mov    r10,r8
  428fac:	test   r8,r8
  428faf:	je     429c33 <flatcc_json_printer_fmt_float@@Base+0xd83>
  428fb5:	movabs rbp,0x40000000000000
  428fbf:	mov    rdx,r10
  428fc2:	mov    eax,esi
  428fc4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428fce:	xchg   ax,ax
  428fd0:	shl    rdx,0xa
  428fd4:	add    eax,0xfffffff6
  428fd7:	cmp    rdx,rbp
  428fda:	jb     428fd0 <flatcc_json_printer_fmt_float@@Base+0x120>
  428fdc:	test   rdx,rdx
  428fdf:	mov    QWORD PTR [rsp],rbx
  428fe3:	js     428ffb <flatcc_json_printer_fmt_float@@Base+0x14b>
  428fe5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428fef:	nop
  428ff0:	add    rdx,rdx
  428ff3:	add    eax,0xffffffff
  428ff6:	test   rdx,rdx
  428ff9:	jns    428ff0 <flatcc_json_printer_fmt_float@@Base+0x140>
  428ffb:	lea    rcx,[r10+r10*1]
  428fff:	add    rcx,0x1
  429003:	lea    r9d,[rsi-0x1]
  429007:	mov    ebx,r9d
  42900a:	jmp    429017 <flatcc_json_printer_fmt_float@@Base+0x167>
  42900c:	nop    DWORD PTR [rax+0x0]
  429010:	shl    rcx,0xa
  429014:	add    ebx,0xfffffff6
  429017:	cmp    rcx,rbp
  42901a:	jb     429010 <flatcc_json_printer_fmt_float@@Base+0x160>
  42901c:	jmp    429026 <flatcc_json_printer_fmt_float@@Base+0x176>
  42901e:	xchg   ax,ax
  429020:	add    rcx,rcx
  429023:	add    ebx,0xffffffff
  429026:	test   rcx,rcx
  429029:	jns    429020 <flatcc_json_printer_fmt_float@@Base+0x170>
  42902b:	vxorps xmm1,xmm1,xmm1
  42902f:	vucomisd xmm0,xmm1
  429033:	jbe    429c14 <flatcc_json_printer_fmt_float@@Base+0xd64>
  429039:	vmovsd xmm1,QWORD PTR [rip+0x1330f]        # 43c350 <flatcc_builder_padding_base@@Base+0x2b20>
  429041:	vucomisd xmm1,xmm0
  429045:	jb     429c14 <flatcc_json_printer_fmt_float@@Base+0xd64>
  42904b:	test   r11,r11
  42904e:	sete   r11b
  429052:	test   r8,r8
  429055:	setne  r8b
  429059:	or     r8b,r11b
  42905c:	lea    r11,[r10+r10*1]
  429060:	lea    rbp,[r10*4+0x0]
  429068:	add    esi,0xfffffffe
  42906b:	test   r8b,r8b
  42906e:	cmovne rbp,r11
  429072:	cmovne esi,r9d
  429076:	add    rbp,0xffffffffffffffff
  42907a:	sub    esi,ebx
  42907c:	shlx   r9,rbp,rsi
  429081:	mov    esi,0xffffffc3
  429086:	sub    esi,eax
  429088:	vcvtsi2sd xmm1,xmm2,esi
  42908c:	vmulsd xmm1,xmm1,QWORD PTR [rip+0x132c4]        # 43c358 <flatcc_builder_padding_base@@Base+0x2b28>
  429094:	vcvttsd2si ebp,xmm1
  429098:	vxorpd xmm2,xmm2,xmm2
  42909c:	vucomisd xmm2,xmm1
  4290a0:	ja     4290bb <flatcc_json_printer_fmt_float@@Base+0x20b>
  4290a2:	vcvtsi2sd xmm3,xmm3,ebp
  4290a6:	vsubsd xmm1,xmm1,xmm3
  4290aa:	vcmpneqsd xmm1,xmm1,xmm2
  4290af:	vmovq  rsi,xmm1
  4290b4:	and    esi,0x1
  4290b7:	add    esi,ebp
  4290b9:	mov    ebp,esi
  4290bb:	lea    esi,[rbp+0x15b]
  4290c1:	sar    esi,0x1f
  4290c4:	shr    esi,0x1d
  4290c7:	lea    esi,[rsi+rbp*1]
  4290ca:	add    esi,0x15b
  4290d0:	sar    esi,0x3
  4290d3:	movsxd rsi,esi
  4290d6:	shl    rsi,0x4
  4290da:	lea    rbp,[rip+0x1337f]        # 43c460 <flatcc_builder_padding_base@@Base+0x2c30>
  4290e1:	mov    QWORD PTR [rsp+0x48],rsi
  4290e6:	mov    r12,QWORD PTR [rsi+rbp*1+0x10]
  4290eb:	mov    r11d,r12d
  4290ee:	shr    r12,0x20
  4290f2:	mov    rsi,r9
  4290f5:	shr    rsi,0x20
  4290f9:	mov    ebp,r9d
  4290fc:	mov    r9,r12
  4290ff:	imul   r9,rsi
  429103:	mov    r14,r12
  429106:	imul   r14,rbp
  42910a:	mov    r8,r11
  42910d:	mov    QWORD PTR [rsp+0x80],rsi
  429115:	imul   r8,rsi
  429119:	imul   rbp,r11
  42911d:	shr    rbp,0x20
  429121:	mov    esi,r8d
  429124:	add    rsi,rbp
  429127:	mov    r10d,r14d
  42912a:	add    r10,rsi
  42912d:	sub    r10,0xffffffff80000000
  429134:	shr    r8,0x20
  429138:	shr    r14,0x20
  42913c:	shr    r10,0x20
  429140:	mov    rsi,rcx
  429143:	shr    rsi,0x20
  429147:	mov    ecx,ecx
  429149:	mov    r15,r12
  42914c:	imul   r15,rsi
  429150:	mov    r13,r12
  429153:	imul   r13,rcx
  429157:	mov    rbp,r11
  42915a:	mov    QWORD PTR [rsp+0x68],rsi
  42915f:	imul   rbp,rsi
  429163:	imul   rcx,r11
  429167:	shr    rcx,0x20
  42916b:	mov    esi,ebp
  42916d:	add    rsi,rcx
  429170:	mov    ecx,r13d
  429173:	add    rcx,rsi
  429176:	sub    rcx,0xffffffff80000000
  42917d:	shr    rbp,0x20
  429181:	shr    r13,0x20
  429185:	shr    rcx,0x20
  429189:	mov    QWORD PTR [rsp+0x70],r8
  42918e:	add    r9,r8
  429191:	mov    QWORD PTR [rsp+0x78],r14
  429196:	add    r9,r14
  429199:	mov    QWORD PTR [rsp+0x60],r10
  42919e:	add    r9,r10
  4291a1:	add    r9,0xffffffffffffffff
  4291a5:	lea    rsi,[r15+rbp*1]
  4291a9:	add    rsi,r13
  4291ac:	mov    QWORD PTR [rsp+0x18],rcx
  4291b1:	add    rcx,rsi
  4291b4:	add    rcx,0x1
  4291b8:	mov    r14,rcx
  4291bb:	sub    r14,r9
  4291be:	jb     429bf5 <flatcc_json_printer_fmt_float@@Base+0xd45>
  4291c4:	mov    QWORD PTR [rsp+0x20],r13
  4291c9:	mov    QWORD PTR [rsp+0x28],rbp
  4291ce:	mov    QWORD PTR [rsp+0x38],r15
  4291d3:	mov    QWORD PTR [rsp+0x40],rdi
  4291d8:	mov    rsi,QWORD PTR [rsp+0x48]
  4291dd:	lea    rdi,[rip+0x1327c]        # 43c460 <flatcc_builder_padding_base@@Base+0x2c30>
  4291e4:	movsx  r8d,WORD PTR [rsi+rdi*1+0x18]
  4291ea:	mov    r10,rdx
  4291ed:	shr    r10,0x20
  4291f1:	and    edx,0xfffffffe
  4291f4:	mov    rsi,r12
  4291f7:	imul   rsi,r10
  4291fb:	mov    rbp,r12
  4291fe:	imul   rbp,rdx
  429202:	mov    rdi,r11
  429205:	imul   rdi,r10
  429209:	imul   r11,rdx
  42920d:	shr    r11,0x20
  429211:	mov    edx,edi
  429213:	add    rdx,r11
  429216:	mov    r9d,ebp
  429219:	add    r9,rdx
  42921c:	sub    r9,0xffffffff80000000
  429223:	shr    rdi,0x20
  429227:	add    rsi,rdi
  42922a:	shr    rbp,0x20
  42922e:	add    rsi,rbp
  429231:	shr    r9,0x20
  429235:	add    rsi,r9
  429238:	mov    QWORD PTR [rsp+0x30],rsi
  42923d:	lea    edx,[r8+rax*1]
  429241:	add    edx,0x40
  429244:	lea    eax,[r8+rbx*1]
  429248:	add    eax,0x40
  42924b:	mov    DWORD PTR [rsp+0x10],eax
  42924f:	mov    r11d,edx
  429252:	neg    r11d
  429255:	shrx   rax,rcx,r11
  42925a:	mov    QWORD PTR [rsp+0x8],rcx
  42925f:	bzhi   r8,rcx,r11
  429264:	mov    DWORD PTR [rsp+0x14],edx
  429268:	imul   edx,edx,0x4d1
  42926e:	add    edx,0x13911
  429274:	sar    edx,0xc
  429277:	movsxd r15,edx
  42927a:	add    edx,0x1
  42927d:	lea    rcx,[rip+0x1374c]        # 43c9d0 <flatcc_builder_padding_base@@Base+0x31a0>
  429284:	cmp    DWORD PTR [rcx+r15*4+0x4],eax
  429289:	cmovbe r15d,edx
  42928d:	test   r15d,r15d
  429290:	jle    429303 <flatcc_json_printer_fmt_float@@Base+0x453>
  429292:	mov    QWORD PTR [rsp+0x50],rdi
  429297:	mov    QWORD PTR [rsp+0x58],rbp
  42929c:	movsxd rdx,r15d
  42929f:	mov    ecx,DWORD PTR [rcx+rdx*4]
  4292a2:	add    r15d,0xffffffff
  4292a6:	mov    r13d,0x1
  4292ac:	mov    esi,0xcccccccd
  4292b1:	jmp    4292d2 <flatcc_json_printer_fmt_float@@Base+0x422>
  4292b3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4292bd:	nop    DWORD PTR [rax]
  4292c0:	mov    ecx,ecx
  4292c2:	imul   rcx,rsi
  4292c6:	shr    rcx,0x23
  4292ca:	add    r13,0x1
  4292ce:	add    r15d,0xffffffff
  4292d2:	xor    edx,edx
  4292d4:	div    ecx
  4292d6:	add    al,0x30
  4292d8:	mov    rdi,QWORD PTR [rsp]
  4292dc:	mov    BYTE PTR [rdi+r13*1-0x1],al
  4292e1:	mov    eax,edx
  4292e3:	shlx   rbp,rax,r11
  4292e8:	lea    rdx,[r8+rbp*1]
  4292ec:	mov    rbx,r14
  4292ef:	sub    rbx,rdx
  4292f2:	ja     429443 <flatcc_json_printer_fmt_float@@Base+0x593>
  4292f8:	lea    edx,[r15+0x1]
  4292fc:	cmp    edx,0x2
  4292ff:	jge    4292c0 <flatcc_json_printer_fmt_float@@Base+0x410>
  429301:	jmp    429306 <flatcc_json_printer_fmt_float@@Base+0x456>
  429303:	xor    r13d,r13d
  429306:	mov    eax,0x1
  42930b:	shlx   r10,rax,r11
  429310:	lea    rsi,[r10-0x1]
  429314:	mov    r9d,0xffffffff
  42931a:	mov    eax,r13d
  42931d:	shl    r13,0x20
  429321:	movabs rcx,0xffffffff00000000
  42932b:	add    rcx,r13
  42932e:	mov    edx,0x1
  429333:	mov    r13,rax
  429336:	mov    rbp,QWORD PTR [rsp]
  42933a:	mov    r12,QWORD PTR [rsp+0x8]
  42933f:	nop
  429340:	mov    rax,rdx
  429343:	add    r8,r8
  429346:	lea    r8,[r8+r8*4]
  42934a:	lea    rdx,[rdx+rdx*1]
  42934e:	lea    rdx,[rdx+rdx*4]
  429352:	mov    rdi,r14
  429355:	add    rdi,r14
  429358:	lea    r14,[rdi+rdi*4]
  42935c:	shrx   rbx,r8,r11
  429361:	add    bl,0x30
  429364:	mov    BYTE PTR [rbp+r13*1+0x0],bl
  429369:	add    r13,0x1
  42936d:	and    r8,rsi
  429370:	add    r15d,0xffffffff
  429374:	mov    rbx,r14
  429377:	add    rcx,r9
  42937a:	add    rcx,0x1
  42937e:	sub    rbx,r8
  429381:	jbe    429340 <flatcc_json_printer_fmt_float@@Base+0x490>
  429383:	mov    esi,DWORD PTR [rsp+0x10]
  429387:	cmp    esi,DWORD PTR [rsp+0x14]
  42938b:	mov    rsi,QWORD PTR [rsp+0x30]
  429390:	jne    429bf5 <flatcc_json_printer_fmt_float@@Base+0xd45>
  429396:	sub    r12,rsi
  429399:	jb     429bf5 <flatcc_json_printer_fmt_float@@Base+0xd45>
  42939f:	imul   r12,rdx
  4293a3:	lea    r9,[r12+rdx*1]
  4293a7:	cmp    rbx,r10
  4293aa:	setb   bl
  4293ad:	jb     429575 <flatcc_json_printer_fmt_float@@Base+0x6c5>
  4293b3:	sub    r12,rdx
  4293b6:	mov    rbp,r12
  4293b9:	sub    rbp,r8
  4293bc:	jbe    429575 <flatcc_json_printer_fmt_float@@Base+0x6c5>
  4293c2:	sar    rcx,0x20
  4293c6:	lea    rdi,[rdi+rdi*4]
  4293ca:	lea    rdx,[r10+r8*1]
  4293ce:	sub    rdi,rdx
  4293d1:	mov    rdx,QWORD PTR [rsp+0x28]
  4293d6:	add    rdx,QWORD PTR [rsp+0x20]
  4293db:	add    rdx,QWORD PTR [rsp+0x18]
  4293e0:	add    rdx,QWORD PTR [rsp+0x38]
  4293e5:	add    rdx,rdx
  4293e8:	lea    rdx,[rdx+rdx*4]
  4293ec:	add    rsi,rsi
  4293ef:	lea    r11,[rsi+rsi*4]
  4293f3:	sub    r11,rdx
  4293f6:	imul   r11,rax
  4293fa:	add    r11,r10
  4293fd:	nop    DWORD PTR [rax]
  429400:	lea    rsi,[r8+r10*1]
  429404:	cmp    rsi,r12
  429407:	jb     429416 <flatcc_json_printer_fmt_float@@Base+0x566>
  429409:	lea    rdx,[r11+r8*1]
  42940d:	cmp    rbp,rdx
  429410:	jb     429573 <flatcc_json_printer_fmt_float@@Base+0x6c3>
  429416:	mov    rdx,QWORD PTR [rsp]
  42941a:	add    BYTE PTR [rdx+rcx*1],0xff
  42941e:	mov    rdx,rdi
  429421:	sub    rdx,r10
  429424:	setb   bl
  429427:	cmp    rsi,r12
  42942a:	jae    429578 <flatcc_json_printer_fmt_float@@Base+0x6c8>
  429430:	sub    rbp,r10
  429433:	mov    r8,rsi
  429436:	cmp    rdi,r10
  429439:	mov    rdi,rdx
  42943c:	jae    429400 <flatcc_json_printer_fmt_float@@Base+0x550>
  42943e:	jmp    429578 <flatcc_json_printer_fmt_float@@Base+0x6c8>
  429443:	mov    eax,DWORD PTR [rsp+0x10]
  429447:	cmp    eax,DWORD PTR [rsp+0x14]
  42944b:	mov    rsi,QWORD PTR [rsp+0x30]
  429450:	mov    rdi,QWORD PTR [rsp+0x8]
  429455:	jne    429bf5 <flatcc_json_printer_fmt_float@@Base+0xd45>
  42945b:	sub    rdi,rsi
  42945e:	jb     429bf5 <flatcc_json_printer_fmt_float@@Base+0xd45>
  429464:	mov    eax,ecx
  429466:	shlx   rax,rax,r11
  42946b:	lea    r11,[rdi-0x1]
  42946f:	add    rdi,0x1
  429473:	mov    QWORD PTR [rsp+0x8],rdi
  429478:	cmp    rbx,rax
  42947b:	setb   dil
  42947f:	cmp    r11,rdx
  429482:	jbe    429565 <flatcc_json_printer_fmt_float@@Base+0x6b5>
  429488:	cmp    rbx,rax
  42948b:	jb     429565 <flatcc_json_printer_fmt_float@@Base+0x6b5>
  429491:	mov    rdi,QWORD PTR [rsp+0x68]
  429496:	mov    rsi,rdi
  429499:	sub    rsi,QWORD PTR [rsp+0x80]
  4294a1:	mov    rcx,QWORD PTR [rsp+0x20]
  4294a6:	mov    rbx,QWORD PTR [rsp+0x28]
  4294ab:	lea    rcx,[rbx+rcx*1]
  4294af:	add    rcx,QWORD PTR [rsp+0x18]
  4294b4:	imul   rsi,r12
  4294b8:	lea    rbx,[rsi+rcx*1]
  4294bc:	add    rbx,0x2
  4294c0:	sub    rbx,QWORD PTR [rsp+0x70]
  4294c5:	sub    rbx,QWORD PTR [rsp+0x78]
  4294ca:	sub    rbx,QWORD PTR [rsp+0x60]
  4294cf:	lea    rsi,[r8+rax*1]
  4294d3:	add    rsi,rbp
  4294d6:	sub    rbx,rsi
  4294d9:	mov    rsi,QWORD PTR [rsp+0x58]
  4294de:	add    rsi,r8
  4294e1:	add    rsi,QWORD PTR [rsp+0x50]
  4294e6:	add    rsi,r9
  4294e9:	sub    r10,rdi
  4294ec:	imul   r10,r12
  4294f0:	add    r10,rsi
  4294f3:	sub    r10,QWORD PTR [rsp+0x28]
  4294f8:	sub    r10,QWORD PTR [rsp+0x20]
  4294fd:	sub    r10,QWORD PTR [rsp+0x18]
  429502:	add    rcx,QWORD PTR [rsp+0x38]
  429507:	sub    rcx,QWORD PTR [rsp+0x30]
  42950c:	add    r10,rbp
  42950f:	add    rbp,r8
  429512:	sub    rcx,rbp
  429515:	mov    r9,QWORD PTR [rsp]
  429519:	mov    r8,QWORD PTR [rsp+0x8]
  42951e:	xchg   ax,ax
  429520:	lea    rbp,[rdx+rax*1]
  429524:	cmp    rbp,r11
  429527:	jb     429536 <flatcc_json_printer_fmt_float@@Base+0x686>
  429529:	lea    rsi,[rax+r10*1]
  42952d:	cmp    rcx,rsi
  429530:	jb     4295e2 <flatcc_json_printer_fmt_float@@Base+0x732>
  429536:	add    BYTE PTR [r9+r13*1-0x1],0xff
  42953c:	mov    rsi,rbx
  42953f:	sub    rsi,rax
  429542:	setb   dil
  429546:	cmp    rbp,r11
  429549:	jae    4295e7 <flatcc_json_printer_fmt_float@@Base+0x737>
  42954f:	add    r10,rax
  429552:	sub    rcx,rax
  429555:	mov    rdx,rbp
  429558:	cmp    rbx,rax
  42955b:	mov    rbx,rsi
  42955e:	jae    429520 <flatcc_json_printer_fmt_float@@Base+0x670>
  429560:	jmp    4295e7 <flatcc_json_printer_fmt_float@@Base+0x737>
  429565:	mov    rbp,rdx
  429568:	mov    r9,QWORD PTR [rsp]
  42956c:	mov    r8,QWORD PTR [rsp+0x8]
  429571:	jmp    4295e7 <flatcc_json_printer_fmt_float@@Base+0x737>
  429573:	xor    ebx,ebx
  429575:	mov    rsi,r8
  429578:	mov    rcx,r9
  42957b:	sub    rcx,rsi
  42957e:	jbe    4295b3 <flatcc_json_printer_fmt_float@@Base+0x703>
  429580:	test   bl,bl
  429582:	jne    4295b3 <flatcc_json_printer_fmt_float@@Base+0x703>
  429584:	add    r10,rsi
  429587:	sub    r10,r9
  42958a:	mov    r9,QWORD PTR [rsp]
  42958e:	jb     429675 <flatcc_json_printer_fmt_float@@Base+0x7c5>
  429594:	lea    rdx,[rax*4+0x0]
  42959c:	lea    rdx,[rdx+rdx*4]
  4295a0:	cmp    rdx,rsi
  4295a3:	ja     429675 <flatcc_json_printer_fmt_float@@Base+0x7c5>
  4295a9:	cmp    rcx,r10
  4295ac:	jbe    4295cc <flatcc_json_printer_fmt_float@@Base+0x71c>
  4295ae:	jmp    429675 <flatcc_json_printer_fmt_float@@Base+0x7c5>
  4295b3:	lea    rcx,[rax*4+0x0]
  4295bb:	lea    rcx,[rcx+rcx*4]
  4295bf:	cmp    rcx,rsi
  4295c2:	mov    r9,QWORD PTR [rsp]
  4295c6:	ja     429675 <flatcc_json_printer_fmt_float@@Base+0x7c5>
  4295cc:	lea    rax,[rax+rax*4]
  4295d0:	shl    rax,0x3
  4295d4:	sub    r14,rax
  4295d7:	cmp    rsi,r14
  4295da:	ja     429675 <flatcc_json_printer_fmt_float@@Base+0x7c5>
  4295e0:	jmp    429618 <flatcc_json_printer_fmt_float@@Base+0x768>
  4295e2:	xor    edi,edi
  4295e4:	mov    rbp,rdx
  4295e7:	mov    rcx,r8
  4295ea:	sub    rcx,rbp
  4295ed:	jbe    429609 <flatcc_json_printer_fmt_float@@Base+0x759>
  4295ef:	test   dil,dil
  4295f2:	jne    429609 <flatcc_json_printer_fmt_float@@Base+0x759>
  4295f4:	add    rax,rbp
  4295f7:	sub    rax,r8
  4295fa:	jb     429675 <flatcc_json_printer_fmt_float@@Base+0x7c5>
  4295fc:	cmp    rbp,0x2
  429600:	jb     429675 <flatcc_json_printer_fmt_float@@Base+0x7c5>
  429602:	cmp    rcx,rax
  429605:	jbe    42960f <flatcc_json_printer_fmt_float@@Base+0x75f>
  429607:	jmp    429675 <flatcc_json_printer_fmt_float@@Base+0x7c5>
  429609:	cmp    rbp,0x2
  42960d:	jb     429675 <flatcc_json_printer_fmt_float@@Base+0x7c5>
  42960f:	add    r14,0xfffffffffffffffc
  429613:	cmp    rbp,r14
  429616:	ja     429675 <flatcc_json_printer_fmt_float@@Base+0x7c5>
  429618:	mov    rax,QWORD PTR [rsp+0x48]
  42961d:	lea    rcx,[rip+0x12e3c]        # 43c460 <flatcc_builder_padding_base@@Base+0x2c30>
  429624:	movsx  r14d,WORD PTR [rax+rcx*1+0x1a]
  42962a:	mov    ebp,r15d
  42962d:	sub    ebp,r14d
  429630:	mov    edx,ebp
  429632:	neg    edx
  429634:	lea    ecx,[r13-0x1]
  429638:	cmp    r13d,0x3
  42963c:	mov    eax,0x1
  429641:	cmovge eax,ecx
  429644:	cmp    eax,edx
  429646:	cmovg  eax,edx
  429649:	test   ebp,ebp
  42964b:	js     429695 <flatcc_json_printer_fmt_float@@Base+0x7e5>
  42964d:	cmp    ebp,0x3
  429650:	jb     429715 <flatcc_json_printer_fmt_float@@Base+0x865>
  429656:	movsxd rax,r13d
  429659:	mov    BYTE PTR [r9+rax*1],0x65
  42965e:	movsxd rax,r13d
  429661:	lea    r13d,[r13+0x1]
  429665:	lea    r8,[r9+rax*1]
  429669:	add    r8,0x1
  42966d:	mov    rcx,r8
  429670:	jmp    429805 <flatcc_json_printer_fmt_float@@Base+0x955>
  429675:	lea    rsi,[rip+0x13617]        # 43cc93 <flatcc_builder_padding_base@@Base+0x3463>
  42967c:	mov    al,0x1
  42967e:	mov    rdi,r9
  429681:	call   406120 <sprintf@plt>
  429686:	mov    rbx,QWORD PTR [rsp]
  42968a:	sub    ebx,DWORD PTR [rsp+0x40]
  42968e:	add    ebx,eax
  429690:	jmp    4299e9 <flatcc_json_printer_fmt_float@@Base+0xb39>
  429695:	cmp    r13d,edx
  429698:	jg     42976d <flatcc_json_printer_fmt_float@@Base+0x8bd>
  42969e:	lea    ecx,[rbp+r13*1+0x0]
  4296a3:	cmp    ecx,0xfffffffe
  4296a6:	jl     42976d <flatcc_json_printer_fmt_float@@Base+0x8bd>
  4296ac:	lea    rbx,[r9+0x2]
  4296b0:	movsxd rax,ebp
  4296b3:	mov    rdi,rbx
  4296b6:	sub    rdi,rax
  4296b9:	movsxd rdx,r13d
  4296bc:	sub    rdi,rdx
  4296bf:	mov    rsi,r9
  4296c2:	call   406110 <memmove@plt>
  4296c7:	mov    r9,QWORD PTR [rsp]
  4296cb:	mov    WORD PTR [r9],0x2e30
  4296d1:	mov    eax,0x2
  4296d6:	mov    ecx,0x2
  4296db:	sub    ecx,r13d
  4296de:	sub    ecx,ebp
  4296e0:	cmp    ecx,0x3
  4296e3:	jl     42970a <flatcc_json_printer_fmt_float@@Base+0x85a>
  4296e5:	not    r15d
  4296e8:	add    r15d,r14d
  4296eb:	sub    r15d,r13d
  4296ee:	lea    rdx,[r15+0x1]
  4296f2:	mov    esi,0x30
  4296f7:	mov    rdi,rbx
  4296fa:	call   406080 <memset@plt>
  4296ff:	mov    r9,QWORD PTR [rsp]
  429703:	add    r15d,0x3
  429707:	mov    eax,r15d
  42970a:	add    eax,r13d
  42970d:	mov    r13d,eax
  429710:	jmp    4299d7 <flatcc_json_printer_fmt_float@@Base+0xb27>
  429715:	test   ebp,ebp
  429717:	je     4299d7 <flatcc_json_printer_fmt_float@@Base+0xb27>
  42971d:	movsxd r13,r13d
  429720:	lea    rdi,[r9+r13*1]
  429724:	mov    eax,r15d
  429727:	not    eax
  429729:	add    eax,r14d
  42972c:	cmp    eax,0xfffffffd
  42972f:	mov    ebx,0xfffffffe
  429734:	cmovle eax,ebx
  429737:	lea    edx,[r15+rax*1]
  42973b:	add    edx,0x1
  42973e:	sub    edx,r14d
  429741:	add    rdx,0x1
  429745:	mov    esi,0x30
  42974a:	call   406080 <memset@plt>
  42974f:	mov    eax,ebp
  429751:	not    eax
  429753:	cmp    eax,0xfffffffd
  429756:	cmovle eax,ebx
  429759:	lea    eax,[rax+rbp*1]
  42975c:	add    eax,0x2
  42975f:	cmp    eax,0x10
  429762:	jae    4297a1 <flatcc_json_printer_fmt_float@@Base+0x8f1>
  429764:	mov    r9,QWORD PTR [rsp]
  429768:	jmp    4299c8 <flatcc_json_printer_fmt_float@@Base+0xb18>
  42976d:	cmp    r13d,0x2
  429771:	jl     4297e1 <flatcc_json_printer_fmt_float@@Base+0x931>
  429773:	test   eax,eax
  429775:	jle    429a61 <flatcc_json_printer_fmt_float@@Base+0xbb1>
  42977b:	movsxd rdx,eax
  42977e:	lea    rsi,[rdx-0x1]
  429782:	mov    ecx,eax
  429784:	and    ecx,0x7
  429787:	cmp    rsi,0x7
  42978b:	jae    429a00 <flatcc_json_printer_fmt_float@@Base+0xb50>
  429791:	xor    edx,edx
  429793:	test   rcx,rcx
  429796:	jne    429a42 <flatcc_json_printer_fmt_float@@Base+0xb92>
  42979c:	jmp    429a61 <flatcc_json_printer_fmt_float@@Base+0xbb1>
  4297a1:	mov    ecx,eax
  4297a3:	and    ecx,0xfffffff0
  4297a6:	vmovq  xmm0,r13
  4297ab:	lea    edi,[rcx-0x10]
  4297ae:	mov    esi,edi
  4297b0:	shr    esi,0x4
  4297b3:	add    esi,0x1
  4297b6:	mov    edx,esi
  4297b8:	and    edx,0x7
  4297bb:	cmp    edi,0x70
  4297be:	jae    429944 <flatcc_json_printer_fmt_float@@Base+0xa94>
  4297c4:	vpxor  xmm1,xmm1,xmm1
  4297c8:	vxorpd xmm2,xmm2,xmm2
  4297cc:	vxorpd xmm3,xmm3,xmm3
  4297d0:	mov    r9,QWORD PTR [rsp]
  4297d4:	test   edx,edx
  4297d6:	jne    429983 <flatcc_json_printer_fmt_float@@Base+0xad3>
  4297dc:	jmp    42999e <flatcc_json_printer_fmt_float@@Base+0xaee>
  4297e1:	movsxd rax,r13d
  4297e4:	movsxd rcx,r13d
  4297e7:	lea    r13,[rax+0x1]
  4297eb:	mov    BYTE PTR [r9+rcx*1],0x65
  4297f0:	lea    r8,[r9+rax*1+0x1]
  4297f5:	lea    rcx,[r9+rax*1]
  4297f9:	add    rcx,0x2
  4297fd:	mov    BYTE PTR [r9+rax*1+0x1],0x2d
  429803:	mov    ebp,edx
  429805:	mov    rdx,rcx
  429808:	nop    DWORD PTR [rax+rax*1+0x0]
  429810:	movsxd rax,ebp
  429813:	imul   rbp,rax,0x66666667
  42981a:	mov    rsi,rbp
  42981d:	shr    rsi,0x3f
  429821:	sar    rbp,0x22
  429825:	add    ebp,esi
  429827:	lea    esi,[rbp+rbp*4+0x0]
  42982b:	add    esi,esi
  42982d:	mov    edi,eax
  42982f:	sub    edi,esi
  429831:	add    dil,0x30
  429835:	mov    BYTE PTR [rdx],dil
  429838:	add    rdx,0x1
  42983c:	add    eax,0x9
  42983f:	cmp    eax,0x12
  429842:	ja     429810 <flatcc_json_printer_fmt_float@@Base+0x960>
  429844:	mov    BYTE PTR [rdx],0x0
  429847:	mov    rbp,rdx
  42984a:	sub    rbp,rcx
  42984d:	cmp    ebp,0x2
  429850:	jl     429935 <flatcc_json_printer_fmt_float@@Base+0xa85>
  429856:	mov    r10d,0xffffffff
  42985c:	mov    rsi,rbp
  42985f:	shr    rsi,1
  429862:	mov    r9d,esi
  429865:	and    r9d,0x7fffffff
  42986c:	lea    rbx,[r9-0x1]
  429870:	and    esi,0x3
  429873:	cmp    rbx,0x3
  429877:	jae    429889 <flatcc_json_printer_fmt_float@@Base+0x9d9>
  429879:	xor    ebx,ebx
  42987b:	test   rsi,rsi
  42987e:	jne    42990d <flatcc_json_printer_fmt_float@@Base+0xa5d>
  429884:	jmp    429935 <flatcc_json_printer_fmt_float@@Base+0xa85>
  429889:	sub    r9,rsi
  42988c:	xor    ebx,ebx
  42988e:	movzx  r11d,BYTE PTR [rcx+rbx*1]
  429893:	mov    edi,ebx
  429895:	xor    edi,r10d
  429898:	add    edi,ebp
  42989a:	movsxd rdi,edi
  42989d:	movzx  eax,BYTE PTR [rcx+rdi*1]
  4298a1:	mov    BYTE PTR [rcx+rbx*1],al
  4298a4:	mov    BYTE PTR [rcx+rdi*1],r11b
  4298a8:	movzx  r11d,BYTE PTR [rcx+rbx*1+0x1]
  4298ae:	lea    edi,[r10-0x1]
  4298b2:	xor    edi,ebx
  4298b4:	add    edi,ebp
  4298b6:	movsxd rdi,edi
  4298b9:	movzx  eax,BYTE PTR [rcx+rdi*1]
  4298bd:	mov    BYTE PTR [rcx+rbx*1+0x1],al
  4298c1:	mov    BYTE PTR [rcx+rdi*1],r11b
  4298c5:	movzx  r11d,BYTE PTR [rcx+rbx*1+0x2]
  4298cb:	lea    edi,[r10-0x2]
  4298cf:	xor    edi,ebx
  4298d1:	add    edi,ebp
  4298d3:	movsxd rdi,edi
  4298d6:	movzx  eax,BYTE PTR [rcx+rdi*1]
  4298da:	mov    BYTE PTR [rcx+rbx*1+0x2],al
  4298de:	mov    BYTE PTR [rcx+rdi*1],r11b
  4298e2:	movzx  r11d,BYTE PTR [rcx+rbx*1+0x3]
  4298e8:	lea    edi,[r10-0x3]
  4298ec:	xor    edi,ebx
  4298ee:	add    edi,ebp
  4298f0:	movsxd rdi,edi
  4298f3:	movzx  eax,BYTE PTR [rcx+rdi*1]
  4298f7:	mov    BYTE PTR [rcx+rbx*1+0x3],al
  4298fb:	mov    BYTE PTR [rcx+rdi*1],r11b
  4298ff:	add    rbx,0x4
  429903:	cmp    r9,rbx
  429906:	jne    42988e <flatcc_json_printer_fmt_float@@Base+0x9de>
  429908:	test   rsi,rsi
  42990b:	je     429935 <flatcc_json_printer_fmt_float@@Base+0xa85>
  42990d:	neg    rsi
  429910:	movzx  r9d,BYTE PTR [rcx+rbx*1]
  429915:	mov    edi,ebx
  429917:	xor    edi,r10d
  42991a:	lea    edi,[rdi+rbp*1]
  42991d:	movsxd rdi,edi
  429920:	movzx  eax,BYTE PTR [rcx+rdi*1]
  429924:	mov    BYTE PTR [rcx+rbx*1],al
  429927:	mov    BYTE PTR [rcx+rdi*1],r9b
  42992b:	add    rbx,0x1
  42992f:	add    rsi,0x1
  429933:	jne    429910 <flatcc_json_printer_fmt_float@@Base+0xa60>
  429935:	sub    edx,r8d
  429938:	add    r13d,edx
  42993b:	mov    r9,QWORD PTR [rsp]
  42993f:	jmp    4299d7 <flatcc_json_printer_fmt_float@@Base+0xb27>
  429944:	mov    edi,0x1
  429949:	sub    edi,esi
  42994b:	lea    esi,[rdx+rdi*1]
  42994e:	add    esi,0xffffffff
  429951:	vpxor  xmm1,xmm1,xmm1
  429955:	vpbroadcastq ymm4,QWORD PTR [rip+0x1014a]        # 439aa8 <flatcc_builder_padding_base@@Base+0x278>
  42995e:	vxorpd xmm2,xmm2,xmm2
  429962:	vxorpd xmm3,xmm3,xmm3
  429966:	mov    r9,QWORD PTR [rsp]
  42996a:	vpaddq ymm0,ymm0,ymm4
  42996e:	vpaddq ymm1,ymm1,ymm4
  429972:	vpaddq ymm2,ymm2,ymm4
  429976:	vpaddq ymm3,ymm3,ymm4
  42997a:	add    esi,0x8
  42997d:	jne    42996a <flatcc_json_printer_fmt_float@@Base+0xaba>
  42997f:	test   edx,edx
  429981:	je     42999e <flatcc_json_printer_fmt_float@@Base+0xaee>
  429983:	neg    edx
  429985:	vpcmpeqd ymm4,ymm4,ymm4
  429989:	vpsubq ymm0,ymm0,ymm4
  42998d:	vpsubq ymm1,ymm1,ymm4
  429991:	vpsubq ymm2,ymm2,ymm4
  429995:	vpsubq ymm3,ymm3,ymm4
  429999:	add    edx,0x1
  42999c:	jne    429989 <flatcc_json_printer_fmt_float@@Base+0xad9>
  42999e:	vpaddq ymm1,ymm1,ymm3
  4299a2:	vpaddq ymm0,ymm0,ymm2
  4299a6:	vpaddq ymm0,ymm0,ymm1
  4299aa:	vextracti128 xmm1,ymm0,0x1
  4299b0:	vpaddq ymm0,ymm0,ymm1
  4299b4:	vpshufd xmm1,xmm0,0x4e
  4299b9:	vpaddq ymm0,ymm0,ymm1
  4299bd:	vmovq  r13,xmm0
  4299c2:	cmp    eax,ecx
  4299c4:	je     4299d7 <flatcc_json_printer_fmt_float@@Base+0xb27>
  4299c6:	sub    ebp,ecx
  4299c8:	add    ebp,0x1
  4299cb:	add    r13,0x1
  4299cf:	add    ebp,0xffffffff
  4299d2:	cmp    ebp,0x1
  4299d5:	jg     4299cb <flatcc_json_printer_fmt_float@@Base+0xb1b>
  4299d7:	movsxd rax,r13d
  4299da:	mov    BYTE PTR [r9+rax*1],0x0
  4299df:	lea    rax,[r9+rax*1]
  4299e3:	sub    eax,DWORD PTR [rsp+0x40]
  4299e7:	mov    ebx,eax
  4299e9:	mov    eax,ebx
  4299eb:	add    rsp,0x88
  4299f2:	pop    rbx
  4299f3:	pop    r12
  4299f5:	pop    r13
  4299f7:	pop    r14
  4299f9:	pop    r15
  4299fb:	pop    rbp
  4299fc:	vzeroupper 
  4299ff:	ret    
  429a00:	movsxd rsi,r13d
  429a03:	add    rsi,r9
  429a06:	mov    rdi,rcx
  429a09:	sub    rdi,rdx
  429a0c:	xor    edx,edx
  429a0e:	movzx  ebx,BYTE PTR [rsi+rdx*1-0x1]
  429a13:	mov    BYTE PTR [rsi+rdx*1],bl
  429a16:	movzx  ebx,BYTE PTR [rsi+rdx*1-0x2]
  429a1b:	mov    BYTE PTR [rsi+rdx*1-0x1],bl
  429a1f:	movzx  ebx,WORD PTR [rsi+rdx*1-0x4]
  429a24:	mov    WORD PTR [rsi+rdx*1-0x3],bx
  429a29:	mov    ebx,DWORD PTR [rsi+rdx*1-0x8]
  429a2d:	mov    DWORD PTR [rsi+rdx*1-0x7],ebx
  429a31:	add    rdx,0xfffffffffffffff8
  429a35:	cmp    rdi,rdx
  429a38:	jne    429a0e <flatcc_json_printer_fmt_float@@Base+0xb5e>
  429a3a:	neg    rdx
  429a3d:	test   rcx,rcx
  429a40:	je     429a61 <flatcc_json_printer_fmt_float@@Base+0xbb1>
  429a42:	movsxd rsi,r13d
  429a45:	sub    rsi,rdx
  429a48:	add    rsi,r9
  429a4b:	neg    rcx
  429a4e:	xor    edx,edx
  429a50:	movzx  ebx,BYTE PTR [rsi+rdx*1-0x1]
  429a55:	mov    BYTE PTR [rsi+rdx*1],bl
  429a58:	add    rdx,0xffffffffffffffff
  429a5c:	cmp    rcx,rdx
  429a5f:	jne    429a50 <flatcc_json_printer_fmt_float@@Base+0xba0>
  429a61:	movsxd rdx,r13d
  429a64:	lea    rcx,[rdx+0x1]
  429a68:	mov    esi,r13d
  429a6b:	sub    esi,eax
  429a6d:	movsxd rsi,esi
  429a70:	mov    BYTE PTR [r9+rsi*1],0x2e
  429a75:	add    ebp,eax
  429a77:	je     429a8f <flatcc_json_printer_fmt_float@@Base+0xbdf>
  429a79:	mov    BYTE PTR [r9+rcx*1],0x65
  429a7e:	lea    r8,[r9+rdx*1]
  429a82:	add    r8,0x2
  429a86:	test   ebp,ebp
  429a88:	js     429a97 <flatcc_json_printer_fmt_float@@Base+0xbe7>
  429a8a:	mov    rcx,r8
  429a8d:	jmp    429aa1 <flatcc_json_printer_fmt_float@@Base+0xbf1>
  429a8f:	mov    r13d,ecx
  429a92:	jmp    4299d7 <flatcc_json_printer_fmt_float@@Base+0xb27>
  429a97:	lea    rcx,[r8+0x1]
  429a9b:	mov    BYTE PTR [r8],0x2d
  429a9f:	neg    ebp
  429aa1:	lea    r13d,[r13+0x2]
  429aa5:	mov    rdx,rcx
  429aa8:	movsxd rax,ebp
  429aab:	imul   rbp,rax,0x66666667
  429ab2:	mov    rsi,rbp
  429ab5:	shr    rsi,0x3f
  429ab9:	sar    rbp,0x22
  429abd:	add    ebp,esi
  429abf:	lea    esi,[rbp+rbp*4+0x0]
  429ac3:	add    esi,esi
  429ac5:	mov    edi,eax
  429ac7:	sub    edi,esi
  429ac9:	add    dil,0x30
  429acd:	mov    BYTE PTR [rdx],dil
  429ad0:	add    rdx,0x1
  429ad4:	add    eax,0x9
  429ad7:	cmp    eax,0x12
  429ada:	ja     429aa8 <flatcc_json_printer_fmt_float@@Base+0xbf8>
  429adc:	mov    BYTE PTR [rdx],0x0
  429adf:	mov    rbp,rdx
  429ae2:	sub    rbp,rcx
  429ae5:	cmp    ebp,0x2
  429ae8:	jl     429935 <flatcc_json_printer_fmt_float@@Base+0xa85>
  429aee:	mov    r10d,0xffffffff
  429af4:	mov    rsi,rbp
  429af7:	shr    rsi,1
  429afa:	mov    r9d,esi
  429afd:	and    r9d,0x7fffffff
  429b04:	lea    rbx,[r9-0x1]
  429b08:	and    esi,0x3
  429b0b:	cmp    rbx,0x3
  429b0f:	jae    429b21 <flatcc_json_printer_fmt_float@@Base+0xc71>
  429b11:	xor    ebx,ebx
  429b13:	test   rsi,rsi
  429b16:	jne    429ba9 <flatcc_json_printer_fmt_float@@Base+0xcf9>
  429b1c:	jmp    429935 <flatcc_json_printer_fmt_float@@Base+0xa85>
  429b21:	sub    r9,rsi
  429b24:	xor    ebx,ebx
  429b26:	movzx  r11d,BYTE PTR [rcx+rbx*1]
  429b2b:	mov    edi,ebx
  429b2d:	xor    edi,r10d
  429b30:	add    edi,ebp
  429b32:	movsxd rdi,edi
  429b35:	movzx  eax,BYTE PTR [rcx+rdi*1]
  429b39:	mov    BYTE PTR [rcx+rbx*1],al
  429b3c:	mov    BYTE PTR [rcx+rdi*1],r11b
  429b40:	movzx  r11d,BYTE PTR [rcx+rbx*1+0x1]
  429b46:	lea    edi,[r10-0x1]
  429b4a:	xor    edi,ebx
  429b4c:	add    edi,ebp
  429b4e:	movsxd rdi,edi
  429b51:	movzx  eax,BYTE PTR [rcx+rdi*1]
  429b55:	mov    BYTE PTR [rcx+rbx*1+0x1],al
  429b59:	mov    BYTE PTR [rcx+rdi*1],r11b
  429b5d:	movzx  r11d,BYTE PTR [rcx+rbx*1+0x2]
  429b63:	lea    edi,[r10-0x2]
  429b67:	xor    edi,ebx
  429b69:	add    edi,ebp
  429b6b:	movsxd rdi,edi
  429b6e:	movzx  eax,BYTE PTR [rcx+rdi*1]
  429b72:	mov    BYTE PTR [rcx+rbx*1+0x2],al
  429b76:	mov    BYTE PTR [rcx+rdi*1],r11b
  429b7a:	movzx  r11d,BYTE PTR [rcx+rbx*1+0x3]
  429b80:	lea    edi,[r10-0x3]
  429b84:	xor    edi,ebx
  429b86:	add    edi,ebp
  429b88:	movsxd rdi,edi
  429b8b:	movzx  eax,BYTE PTR [rcx+rdi*1]
  429b8f:	mov    BYTE PTR [rcx+rbx*1+0x3],al
  429b93:	mov    BYTE PTR [rcx+rdi*1],r11b
  429b97:	add    rbx,0x4
  429b9b:	cmp    r9,rbx
  429b9e:	jne    429b26 <flatcc_json_printer_fmt_float@@Base+0xc76>
  429ba0:	test   rsi,rsi
  429ba3:	je     429935 <flatcc_json_printer_fmt_float@@Base+0xa85>
  429ba9:	neg    rsi
  429bac:	movzx  r9d,BYTE PTR [rcx+rbx*1]
  429bb1:	mov    edi,ebx
  429bb3:	xor    edi,r10d
  429bb6:	lea    edi,[rdi+rbp*1]
  429bb9:	movsxd rdi,edi
  429bbc:	movzx  eax,BYTE PTR [rcx+rdi*1]
  429bc0:	mov    BYTE PTR [rcx+rbx*1],al
  429bc3:	mov    BYTE PTR [rcx+rdi*1],r9b
  429bc7:	add    rbx,0x1
  429bcb:	add    rsi,0x1
  429bcf:	jne    429bac <flatcc_json_printer_fmt_float@@Base+0xcfc>
  429bd1:	jmp    429935 <flatcc_json_printer_fmt_float@@Base+0xa85>
  429bd6:	lea    rdi,[rip+0x1300b]        # 43cbe8 <flatcc_builder_padding_base@@Base+0x33b8>
  429bdd:	lea    rsi,[rip+0x13008]        # 43cbec <flatcc_builder_padding_base@@Base+0x33bc>
  429be4:	lea    rcx,[rip+0x13072]        # 43cc5d <flatcc_builder_padding_base@@Base+0x342d>
  429beb:	mov    edx,0xbd
  429bf0:	call   406070 <__assert_fail@plt>
  429bf5:	lea    rdi,[rip+0x130eb]        # 43cce7 <flatcc_builder_padding_base@@Base+0x34b7>
  429bfc:	lea    rsi,[rip+0x125d8]        # 43c1db <flatcc_builder_padding_base@@Base+0x29ab>
  429c03:	lea    rcx,[rip+0x130f6]        # 43cd00 <flatcc_builder_padding_base@@Base+0x34d0>
  429c0a:	mov    edx,0xef
  429c0f:	call   406070 <__assert_fail@plt>
  429c14:	lea    rdi,[rip+0x1307e]        # 43cc99 <flatcc_builder_padding_base@@Base+0x3469>
  429c1b:	lea    rsi,[rip+0x12fca]        # 43cbec <flatcc_builder_padding_base@@Base+0x33bc>
  429c22:	lea    rcx,[rip+0x13095]        # 43ccbe <flatcc_builder_padding_base@@Base+0x348e>
  429c29:	mov    edx,0x8a
  429c2e:	call   406070 <__assert_fail@plt>
  429c33:	lea    rdi,[rip+0x12598]        # 43c1d2 <flatcc_builder_padding_base@@Base+0x29a2>
  429c3a:	lea    rsi,[rip+0x1259a]        # 43c1db <flatcc_builder_padding_base@@Base+0x29ab>
  429c41:	lea    rcx,[rip+0x12603]        # 43c24b <flatcc_builder_padding_base@@Base+0x2a1b>
  429c48:	mov    edx,0x104
  429c4d:	call   406070 <__assert_fail@plt>
  429c52:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429c5c:	nop    DWORD PTR [rax+0x0]

0000000000429c60 <flatcc_json_printer_fmt_double@@Base>:
  429c60:	jmp    428ec0 <flatcc_json_printer_fmt_float@@Base+0x10>
  429c65:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429c6f:	nop

0000000000429c70 <flatcc_json_printer_fmt_bool@@Base>:
  429c70:	test   esi,esi
  429c72:	je     429c80 <flatcc_json_printer_fmt_bool@@Base+0x10>
  429c74:	mov    DWORD PTR [rdi],0x65757274
  429c7a:	mov    eax,0x4
  429c7f:	ret    
  429c80:	mov    BYTE PTR [rdi+0x4],0x65
  429c84:	mov    DWORD PTR [rdi],0x736c6166
  429c8a:	mov    eax,0x5
  429c8f:	ret    

0000000000429c90 <flatcc_json_printer_string@@Base>:
  429c90:	movsxd rdx,edx
  429c93:	jmp    429ca0 <flatcc_json_printer_string@@Base+0x10>
  429c95:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429c9f:	nop
  429ca0:	push   rbp
  429ca1:	push   r15
  429ca3:	push   r14
  429ca5:	push   r13
  429ca7:	push   r12
  429ca9:	push   rbx
  429caa:	sub    rsp,0x18
  429cae:	mov    r8,rdx
  429cb1:	mov    r13,rsi
  429cb4:	mov    r15,rdi
  429cb7:	lea    rax,[rdi+0x28]
  429cbb:	mov    QWORD PTR [rsp],rax
  429cbf:	mov    rax,QWORD PTR [rdi+0x28]
  429cc3:	lea    rcx,[rax+0x1]
  429cc7:	mov    QWORD PTR [rdi+0x28],rcx
  429ccb:	mov    BYTE PTR [rax],0x22
  429cce:	jmp    429cdb <flatcc_json_printer_string@@Base+0x4b>
  429cd0:	add    r14,0x1
  429cd4:	add    r8,0xffffffffffffffff
  429cd8:	mov    r13,r14
  429cdb:	mov    r12b,BYTE PTR [r13+0x0]
  429cdf:	mov    r14,r13
  429ce2:	cmp    r12b,0x20
  429ce6:	jb     429d0b <flatcc_json_printer_string@@Base+0x7b>
  429ce8:	nop    DWORD PTR [rax+rax*1+0x0]
  429cf0:	cmp    r12b,0x22
  429cf4:	je     429d0b <flatcc_json_printer_string@@Base+0x7b>
  429cf6:	cmp    r12b,0x5c
  429cfa:	je     429d0b <flatcc_json_printer_string@@Base+0x7b>
  429cfc:	movzx  r12d,BYTE PTR [r14+0x1]
  429d01:	add    r14,0x1
  429d05:	cmp    r12b,0x1f
  429d09:	ja     429cf0 <flatcc_json_printer_string@@Base+0x60>
  429d0b:	mov    rbx,r14
  429d0e:	sub    rbx,r13
  429d11:	mov    rbp,QWORD PTR [r15+0x20]
  429d15:	mov    rdi,QWORD PTR [r15+0x28]
  429d19:	lea    rax,[rdi+rbx*1]
  429d1d:	cmp    rax,rbp
  429d20:	jae    429d40 <flatcc_json_printer_string@@Base+0xb0>
  429d22:	mov    rsi,r13
  429d25:	mov    rbp,rbx
  429d28:	mov    rdx,rbx
  429d2b:	mov    rbx,r8
  429d2e:	call   4060e0 <memcpy@plt>
  429d33:	mov    rdi,QWORD PTR [rsp]
  429d37:	mov    r8,rbx
  429d3a:	mov    rbx,rbp
  429d3d:	jmp    429db7 <flatcc_json_printer_string@@Base+0x127>
  429d3f:	nop
  429d40:	cmp    rdi,rbp
  429d43:	mov    QWORD PTR [rsp+0x10],r8
  429d48:	jb     429d5b <flatcc_json_printer_string@@Base+0xcb>
  429d4a:	xor    esi,esi
  429d4c:	mov    rdi,r15
  429d4f:	call   QWORD PTR [r15+0x48]
  429d53:	mov    rbp,QWORD PTR [r15+0x20]
  429d57:	mov    rdi,QWORD PTR [r15+0x28]
  429d5b:	sub    rbp,rdi
  429d5e:	cmp    rbp,rbx
  429d61:	mov    QWORD PTR [rsp+0x8],rbx
  429d66:	jae    429d9e <flatcc_json_printer_string@@Base+0x10e>
  429d68:	nop    DWORD PTR [rax+rax*1+0x0]
  429d70:	mov    rsi,r13
  429d73:	mov    rdx,rbp
  429d76:	call   4060e0 <memcpy@plt>
  429d7b:	add    QWORD PTR [r15+0x28],rbp
  429d7f:	add    r13,rbp
  429d82:	sub    rbx,rbp
  429d85:	xor    esi,esi
  429d87:	mov    rdi,r15
  429d8a:	call   QWORD PTR [r15+0x48]
  429d8e:	mov    rbp,QWORD PTR [r15+0x20]
  429d92:	mov    rdi,QWORD PTR [r15+0x28]
  429d96:	sub    rbp,rdi
  429d99:	cmp    rbx,rbp
  429d9c:	ja     429d70 <flatcc_json_printer_string@@Base+0xe0>
  429d9e:	mov    rsi,r13
  429da1:	mov    rdx,rbx
  429da4:	call   4060e0 <memcpy@plt>
  429da9:	mov    r8,QWORD PTR [rsp+0x10]
  429dae:	mov    rdi,QWORD PTR [rsp]
  429db2:	mov    rbp,QWORD PTR [rsp+0x8]
  429db7:	mov    rcx,QWORD PTR [rdi]
  429dba:	lea    rax,[rcx+rbx*1]
  429dbe:	add    rcx,rbx
  429dc1:	add    rcx,0x1
  429dc5:	mov    QWORD PTR [rdi],rcx
  429dc8:	sub    r8,rbp
  429dcb:	je     429edb <flatcc_json_printer_string@@Base+0x24b>
  429dd1:	mov    BYTE PTR [rax],0x5c
  429dd4:	mov    eax,r12d
  429dd7:	add    al,0xf8
  429dd9:	cmp    al,0x1a
  429ddb:	ja     429e02 <flatcc_json_printer_string@@Base+0x172>
  429ddd:	movzx  eax,al
  429de0:	lea    rcx,[rip+0x12579]        # 43c360 <flatcc_builder_padding_base@@Base+0x2b30>
  429de7:	movsxd rax,DWORD PTR [rcx+rax*4]
  429deb:	add    rax,rcx
  429dee:	jmp    rax
  429df0:	mov    rax,QWORD PTR [rdi]
  429df3:	lea    rcx,[rax+0x1]
  429df7:	mov    QWORD PTR [rdi],rcx
  429dfa:	mov    BYTE PTR [rax],0x62
  429dfd:	jmp    429cd0 <flatcc_json_printer_string@@Base+0x40>
  429e02:	cmp    r12b,0x5c
  429e06:	jne    429e1a <flatcc_json_printer_string@@Base+0x18a>
  429e08:	mov    rax,QWORD PTR [rdi]
  429e0b:	lea    rcx,[rax+0x1]
  429e0f:	mov    QWORD PTR [rdi],rcx
  429e12:	mov    BYTE PTR [rax],0x5c
  429e15:	jmp    429cd0 <flatcc_json_printer_string@@Base+0x40>
  429e1a:	mov    rax,QWORD PTR [rdi]
  429e1d:	lea    rcx,[rax+0x1]
  429e21:	mov    QWORD PTR [rdi],rcx
  429e24:	mov    BYTE PTR [rax],0x75
  429e27:	mov    rax,QWORD PTR [rdi]
  429e2a:	lea    rcx,[rax+0x1]
  429e2e:	mov    QWORD PTR [rdi],rcx
  429e31:	mov    BYTE PTR [rax],0x30
  429e34:	mov    rax,QWORD PTR [rdi]
  429e37:	lea    rcx,[rax+0x1]
  429e3b:	mov    QWORD PTR [rdi],rcx
  429e3e:	mov    BYTE PTR [rax],0x30
  429e41:	mov    ecx,r12d
  429e44:	shr    cl,0x4
  429e47:	mov    al,0x30
  429e49:	mov    dl,0x30
  429e4b:	cmp    r12b,0xa0
  429e4f:	jb     429e53 <flatcc_json_printer_string@@Base+0x1c3>
  429e51:	mov    dl,0x57
  429e53:	add    dl,cl
  429e55:	mov    rcx,QWORD PTR [rdi]
  429e58:	lea    rsi,[rcx+0x1]
  429e5c:	mov    QWORD PTR [rdi],rsi
  429e5f:	mov    BYTE PTR [rcx],dl
  429e61:	and    r12b,0xf
  429e65:	cmp    r12b,0xa
  429e69:	jb     429e6d <flatcc_json_printer_string@@Base+0x1dd>
  429e6b:	mov    al,0x57
  429e6d:	add    al,r12b
  429e70:	mov    rcx,QWORD PTR [rdi]
  429e73:	lea    rdx,[rcx+0x1]
  429e77:	mov    QWORD PTR [rdi],rdx
  429e7a:	mov    BYTE PTR [rcx],al
  429e7c:	jmp    429cd0 <flatcc_json_printer_string@@Base+0x40>
  429e81:	mov    rax,QWORD PTR [rdi]
  429e84:	lea    rcx,[rax+0x1]
  429e88:	mov    QWORD PTR [rdi],rcx
  429e8b:	mov    BYTE PTR [rax],0x74
  429e8e:	jmp    429cd0 <flatcc_json_printer_string@@Base+0x40>
  429e93:	mov    rax,QWORD PTR [rdi]
  429e96:	lea    rcx,[rax+0x1]
  429e9a:	mov    QWORD PTR [rdi],rcx
  429e9d:	mov    BYTE PTR [rax],0x6e
  429ea0:	jmp    429cd0 <flatcc_json_printer_string@@Base+0x40>
  429ea5:	mov    rax,QWORD PTR [rdi]
  429ea8:	lea    rcx,[rax+0x1]
  429eac:	mov    QWORD PTR [rdi],rcx
  429eaf:	mov    BYTE PTR [rax],0x66
  429eb2:	jmp    429cd0 <flatcc_json_printer_string@@Base+0x40>
  429eb7:	mov    rax,QWORD PTR [rdi]
  429eba:	lea    rcx,[rax+0x1]
  429ebe:	mov    QWORD PTR [rdi],rcx
  429ec1:	mov    BYTE PTR [rax],0x72
  429ec4:	jmp    429cd0 <flatcc_json_printer_string@@Base+0x40>
  429ec9:	mov    rax,QWORD PTR [rdi]
  429ecc:	lea    rcx,[rax+0x1]
  429ed0:	mov    QWORD PTR [rdi],rcx
  429ed3:	mov    BYTE PTR [rax],0x22
  429ed6:	jmp    429cd0 <flatcc_json_printer_string@@Base+0x40>
  429edb:	mov    BYTE PTR [rax],0x22
  429ede:	add    rsp,0x18
  429ee2:	pop    rbx
  429ee3:	pop    r12
  429ee5:	pop    r13
  429ee7:	pop    r14
  429ee9:	pop    r15
  429eeb:	pop    rbp
  429eec:	ret    
  429eed:	nop    DWORD PTR [rax]

0000000000429ef0 <flatcc_json_printer_write@@Base>:
  429ef0:	push   r15
  429ef2:	push   r14
  429ef4:	push   r12
  429ef6:	push   rbx
  429ef7:	push   rax
  429ef8:	mov    r12,rsi
  429efb:	mov    r14,rdi
  429efe:	movsxd r15,edx
  429f01:	mov    rbx,QWORD PTR [rdi+0x20]
  429f05:	mov    rdi,QWORD PTR [rdi+0x28]
  429f09:	lea    rax,[rdi+r15*1]
  429f0d:	cmp    rax,rbx
  429f10:	jb     429f5e <flatcc_json_printer_write@@Base+0x6e>
  429f12:	cmp    rdi,rbx
  429f15:	jb     429f28 <flatcc_json_printer_write@@Base+0x38>
  429f17:	xor    esi,esi
  429f19:	mov    rdi,r14
  429f1c:	call   QWORD PTR [r14+0x48]
  429f20:	mov    rbx,QWORD PTR [r14+0x20]
  429f24:	mov    rdi,QWORD PTR [r14+0x28]
  429f28:	sub    rbx,rdi
  429f2b:	cmp    rbx,r15
  429f2e:	jae    429f5e <flatcc_json_printer_write@@Base+0x6e>
  429f30:	mov    rsi,r12
  429f33:	mov    rdx,rbx
  429f36:	call   4060e0 <memcpy@plt>
  429f3b:	add    QWORD PTR [r14+0x28],rbx
  429f3f:	add    r12,rbx
  429f42:	sub    r15,rbx
  429f45:	xor    esi,esi
  429f47:	mov    rdi,r14
  429f4a:	call   QWORD PTR [r14+0x48]
  429f4e:	mov    rbx,QWORD PTR [r14+0x20]
  429f52:	mov    rdi,QWORD PTR [r14+0x28]
  429f56:	sub    rbx,rdi
  429f59:	cmp    r15,rbx
  429f5c:	ja     429f30 <flatcc_json_printer_write@@Base+0x40>
  429f5e:	mov    rsi,r12
  429f61:	mov    rdx,r15
  429f64:	call   4060e0 <memcpy@plt>
  429f69:	add    QWORD PTR [r14+0x28],r15
  429f6d:	add    rsp,0x8
  429f71:	pop    rbx
  429f72:	pop    r12
  429f74:	pop    r14
  429f76:	pop    r15
  429f78:	ret    
  429f79:	nop    DWORD PTR [rax+0x0]

0000000000429f80 <flatcc_json_printer_nl@@Base>:
  429f80:	mov    rax,QWORD PTR [rdi+0x28]
  429f84:	lea    rcx,[rax+0x1]
  429f88:	mov    QWORD PTR [rdi+0x28],rcx
  429f8c:	mov    BYTE PTR [rax],0xa
  429f8f:	mov    rax,QWORD PTR [rdi+0x28]
  429f93:	cmp    rax,QWORD PTR [rdi+0x20]
  429f97:	jae    429f9a <flatcc_json_printer_nl@@Base+0x1a>
  429f99:	ret    
  429f9a:	mov    rax,QWORD PTR [rdi+0x48]
  429f9e:	xor    esi,esi
  429fa0:	jmp    rax
  429fa2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429fac:	nop    DWORD PTR [rax+0x0]

0000000000429fb0 <flatcc_json_printer_char@@Base>:
  429fb0:	mov    rax,QWORD PTR [rdi+0x28]
  429fb4:	lea    rcx,[rax+0x1]
  429fb8:	mov    QWORD PTR [rdi+0x28],rcx
  429fbc:	mov    BYTE PTR [rax],sil
  429fbf:	ret    

0000000000429fc0 <flatcc_json_printer_indent@@Base>:
  429fc0:	push   r15
  429fc2:	push   r14
  429fc4:	push   rbx
  429fc5:	mov    r14,rdi
  429fc8:	movsxd rax,DWORD PTR [rdi+0x38]
  429fcc:	movzx  r15d,BYTE PTR [rdi+0x31]
  429fd1:	imul   r15,rax
  429fd5:	mov    rbx,QWORD PTR [rdi+0x20]
  429fd9:	mov    rdi,QWORD PTR [rdi+0x28]
  429fdd:	lea    rax,[rdi+r15*1]
  429fe1:	cmp    rax,rbx
  429fe4:	jbe    42a03d <flatcc_json_printer_indent@@Base+0x7d>
  429fe6:	cmp    rdi,rbx
  429fe9:	jb     429ffc <flatcc_json_printer_indent@@Base+0x3c>
  429feb:	xor    esi,esi
  429fed:	mov    rdi,r14
  429ff0:	call   QWORD PTR [r14+0x48]
  429ff4:	mov    rbx,QWORD PTR [r14+0x20]
  429ff8:	mov    rdi,QWORD PTR [r14+0x28]
  429ffc:	sub    rbx,rdi
  429fff:	cmp    rbx,r15
  42a002:	jae    42a03d <flatcc_json_printer_indent@@Base+0x7d>
  42a004:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a00e:	xchg   ax,ax
  42a010:	mov    esi,0x20
  42a015:	mov    rdx,rbx
  42a018:	call   406080 <memset@plt>
  42a01d:	add    QWORD PTR [r14+0x28],rbx
  42a021:	sub    r15,rbx
  42a024:	xor    esi,esi
  42a026:	mov    rdi,r14
  42a029:	call   QWORD PTR [r14+0x48]
  42a02d:	mov    rbx,QWORD PTR [r14+0x20]
  42a031:	mov    rdi,QWORD PTR [r14+0x28]
  42a035:	sub    rbx,rdi
  42a038:	cmp    r15,rbx
  42a03b:	ja     42a010 <flatcc_json_printer_indent@@Base+0x50>
  42a03d:	mov    esi,0x20
  42a042:	mov    rdx,r15
  42a045:	call   406080 <memset@plt>
  42a04a:	add    QWORD PTR [r14+0x28],r15
  42a04e:	pop    rbx
  42a04f:	pop    r14
  42a051:	pop    r15
  42a053:	ret    
  42a054:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a05e:	xchg   ax,ax

000000000042a060 <flatcc_json_printer_add_level@@Base>:
  42a060:	add    DWORD PTR [rdi+0x38],esi
  42a063:	ret    
  42a064:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a06e:	xchg   ax,ax

000000000042a070 <flatcc_json_printer_get_level@@Base>:
  42a070:	mov    eax,DWORD PTR [rdi+0x38]
  42a073:	ret    
  42a074:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a07e:	xchg   ax,ax

000000000042a080 <flatcc_json_printer_uint8@@Base>:
  42a080:	mov    rdx,QWORD PTR [rdi+0x28]
  42a084:	cmp    sil,0x64
  42a088:	jb     42a0c8 <flatcc_json_printer_uint8@@Base+0x48>
  42a08a:	mov    BYTE PTR [rdx+0x3],0x0
  42a08e:	movzx  eax,sil
  42a092:	lea    ecx,[rax+rax*4]
  42a095:	lea    ecx,[rax+rcx*8]
  42a098:	shr    ecx,0xc
  42a09b:	mov    r8b,0x64
  42a09e:	mov    eax,ecx
  42a0a0:	mul    r8b
  42a0a3:	sub    sil,al
  42a0a6:	movzx  eax,sil
  42a0aa:	lea    rsi,[rip+0x12dff]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42a0b1:	movzx  eax,WORD PTR [rsi+rax*2]
  42a0b5:	mov    WORD PTR [rdx+0x1],ax
  42a0b9:	or     cl,0x30
  42a0bc:	mov    BYTE PTR [rdx],cl
  42a0be:	mov    eax,0x3
  42a0c3:	add    QWORD PTR [rdi+0x28],rax
  42a0c7:	ret    
  42a0c8:	cmp    sil,0xa
  42a0cc:	jb     42a102 <flatcc_json_printer_uint8@@Base+0x82>
  42a0ce:	mov    BYTE PTR [rdx+0x2],0x0
  42a0d2:	movzx  eax,sil
  42a0d6:	lea    ecx,[rax+rax*4]
  42a0d9:	lea    eax,[rax+rcx*8]
  42a0dc:	shr    eax,0xc
  42a0df:	mov    cl,0x64
  42a0e1:	mul    cl
  42a0e3:	sub    sil,al
  42a0e6:	movzx  eax,sil
  42a0ea:	lea    rcx,[rip+0x12dbf]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42a0f1:	movzx  eax,WORD PTR [rcx+rax*2]
  42a0f5:	mov    WORD PTR [rdx],ax
  42a0f8:	mov    eax,0x2
  42a0fd:	add    QWORD PTR [rdi+0x28],rax
  42a101:	ret    
  42a102:	mov    BYTE PTR [rdx+0x1],0x0
  42a106:	add    sil,0x30
  42a10a:	mov    BYTE PTR [rdx],sil
  42a10d:	mov    eax,0x1
  42a112:	add    QWORD PTR [rdi+0x28],rax
  42a116:	ret    
  42a117:	nop    WORD PTR [rax+rax*1+0x0]

000000000042a120 <flatcc_json_printer_uint16@@Base>:
  42a120:	mov    rdx,QWORD PTR [rdi+0x28]
  42a124:	movzx  ecx,si
  42a127:	cmp    esi,0x3e8
  42a12d:	jb     42a13f <flatcc_json_printer_uint16@@Base+0x1f>
  42a12f:	xor    eax,eax
  42a131:	cmp    ecx,0x270f
  42a137:	seta   al
  42a13a:	or     eax,0x4
  42a13d:	jmp    42a164 <flatcc_json_printer_uint16@@Base+0x44>
  42a13f:	cmp    ecx,0x64
  42a142:	jb     42a159 <flatcc_json_printer_uint16@@Base+0x39>
  42a144:	mov    BYTE PTR [rdx+0x3],0x0
  42a148:	add    rdx,0x3
  42a14c:	mov    eax,0x3
  42a151:	mov    r8,rdx
  42a154:	jmp    42a20f <flatcc_json_printer_uint16@@Base+0xef>
  42a159:	xor    eax,eax
  42a15b:	cmp    ecx,0x9
  42a15e:	seta   al
  42a161:	add    eax,0x1
  42a164:	mov    ecx,eax
  42a166:	lea    r8,[rdx+rcx*1]
  42a16a:	mov    BYTE PTR [rdx+rcx*1],0x0
  42a16e:	test   al,0x1
  42a170:	jne    42a1d6 <flatcc_json_printer_uint16@@Base+0xb6>
  42a172:	cmp    al,0x2
  42a174:	je     42a1ab <flatcc_json_printer_uint16@@Base+0x8b>
  42a176:	cmp    al,0x4
  42a178:	jne    42a244 <flatcc_json_printer_uint16@@Base+0x124>
  42a17e:	movzx  ecx,si
  42a181:	mov    edx,ecx
  42a183:	shr    edx,0x2
  42a186:	imul   esi,edx,0x147b
  42a18c:	shr    esi,0x11
  42a18f:	imul   edx,esi,0x64
  42a192:	sub    ecx,edx
  42a194:	movzx  ecx,cx
  42a197:	lea    rdx,[rip+0x12d12]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42a19e:	movzx  ecx,WORD PTR [rdx+rcx*2]
  42a1a2:	mov    WORD PTR [r8-0x2],cx
  42a1a7:	lea    r8,[r8-0x2]
  42a1ab:	movzx  ecx,si
  42a1ae:	mov    edx,ecx
  42a1b0:	shr    edx,0x2
  42a1b3:	imul   edx,edx,0x147b
  42a1b9:	shr    edx,0x11
  42a1bc:	imul   edx,edx,0x64
  42a1bf:	sub    ecx,edx
  42a1c1:	movzx  ecx,cx
  42a1c4:	lea    rdx,[rip+0x12ce5]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42a1cb:	movzx  ecx,WORD PTR [rdx+rcx*2]
  42a1cf:	mov    WORD PTR [r8-0x2],cx
  42a1d4:	jmp    42a244 <flatcc_json_printer_uint16@@Base+0x124>
  42a1d6:	cmp    al,0x1
  42a1d8:	je     42a23c <flatcc_json_printer_uint16@@Base+0x11c>
  42a1da:	cmp    al,0x3
  42a1dc:	je     42a20f <flatcc_json_printer_uint16@@Base+0xef>
  42a1de:	cmp    al,0x5
  42a1e0:	jne    42a244 <flatcc_json_printer_uint16@@Base+0x124>
  42a1e2:	movzx  ecx,si
  42a1e5:	mov    edx,ecx
  42a1e7:	shr    edx,0x2
  42a1ea:	imul   esi,edx,0x147b
  42a1f0:	shr    esi,0x11
  42a1f3:	imul   edx,esi,0x64
  42a1f6:	sub    ecx,edx
  42a1f8:	movzx  ecx,cx
  42a1fb:	lea    rdx,[rip+0x12cae]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42a202:	movzx  ecx,WORD PTR [rdx+rcx*2]
  42a206:	mov    WORD PTR [r8-0x2],cx
  42a20b:	lea    r8,[r8-0x2]
  42a20f:	movzx  ecx,si
  42a212:	mov    edx,ecx
  42a214:	shr    edx,0x2
  42a217:	imul   esi,edx,0x147b
  42a21d:	shr    esi,0x11
  42a220:	imul   edx,esi,0x64
  42a223:	sub    ecx,edx
  42a225:	movzx  ecx,cx
  42a228:	lea    rdx,[rip+0x12c81]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42a22f:	movzx  ecx,WORD PTR [rdx+rcx*2]
  42a233:	mov    WORD PTR [r8-0x2],cx
  42a238:	lea    r8,[r8-0x2]
  42a23c:	add    sil,0x30
  42a240:	mov    BYTE PTR [r8-0x1],sil
  42a244:	mov    eax,eax
  42a246:	add    QWORD PTR [rdi+0x28],rax
  42a24a:	ret    
  42a24b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042a250 <flatcc_json_printer_uint32@@Base>:
  42a250:	push   rbx
  42a251:	mov    rbx,rdi
  42a254:	mov    rax,QWORD PTR [rdi+0x28]
  42a258:	mov    edi,esi
  42a25a:	mov    rsi,rax
  42a25d:	call   42a270 <flatcc_json_printer_uint32@@Base+0x20>
  42a262:	cdqe   
  42a264:	add    QWORD PTR [rbx+0x28],rax
  42a268:	pop    rbx
  42a269:	ret    
  42a26a:	nop    WORD PTR [rax+rax*1+0x0]
  42a270:	cmp    edi,0x2710
  42a276:	jb     42a29c <flatcc_json_printer_uint32@@Base+0x4c>
  42a278:	cmp    edi,0x989680
  42a27e:	jb     42a2b1 <flatcc_json_printer_uint32@@Base+0x61>
  42a280:	cmp    edi,0x3b9aca00
  42a286:	jb     42a2db <flatcc_json_printer_uint32@@Base+0x8b>
  42a288:	mov    BYTE PTR [rsi+0xa],0x0
  42a28c:	add    rsi,0xa
  42a290:	mov    eax,0xa
  42a295:	mov    dl,0xa
  42a297:	mov    r8,rsi
  42a29a:	jmp    42a30e <flatcc_json_printer_uint32@@Base+0xbe>
  42a29c:	xor    edx,edx
  42a29e:	cmp    edi,0x64
  42a2a1:	jb     42a2d0 <flatcc_json_printer_uint32@@Base+0x80>
  42a2a3:	cmp    edi,0x3e7
  42a2a9:	seta   dl
  42a2ac:	add    edx,0x3
  42a2af:	jmp    42a2f9 <flatcc_json_printer_uint32@@Base+0xa9>
  42a2b1:	cmp    edi,0xf4240
  42a2b7:	jb     42a2eb <flatcc_json_printer_uint32@@Base+0x9b>
  42a2b9:	mov    BYTE PTR [rsi+0x7],0x0
  42a2bd:	add    rsi,0x7
  42a2c1:	mov    eax,0x7
  42a2c6:	mov    dl,0x7
  42a2c8:	mov    r8,rsi
  42a2cb:	jmp    42a401 <flatcc_json_printer_uint32@@Base+0x1b1>
  42a2d0:	cmp    edi,0x9
  42a2d3:	seta   dl
  42a2d6:	add    edx,0x1
  42a2d9:	jmp    42a2f9 <flatcc_json_printer_uint32@@Base+0xa9>
  42a2db:	xor    edx,edx
  42a2dd:	cmp    edi,0x5f5e0ff
  42a2e3:	seta   dl
  42a2e6:	or     edx,0x8
  42a2e9:	jmp    42a2f9 <flatcc_json_printer_uint32@@Base+0xa9>
  42a2eb:	xor    edx,edx
  42a2ed:	cmp    edi,0x1869f
  42a2f3:	seta   dl
  42a2f6:	add    edx,0x5
  42a2f9:	mov    eax,edx
  42a2fb:	lea    r8,[rsi+rax*1]
  42a2ff:	mov    BYTE PTR [rsi+rax*1],0x0
  42a303:	mov    eax,edx
  42a305:	test   dl,0x1
  42a308:	jne    42a401 <flatcc_json_printer_uint32@@Base+0x1b1>
  42a30e:	mov    ecx,edx
  42a310:	shr    cl,1
  42a312:	shl    dl,0x3
  42a315:	or     dl,cl
  42a317:	xor    dl,0x4
  42a31a:	mov    ecx,edx
  42a31c:	shl    cl,0x4
  42a31f:	sar    cl,0x4
  42a322:	js     42a400 <flatcc_json_printer_uint32@@Base+0x1b0>
  42a328:	movzx  ecx,dl
  42a32b:	and    ecx,0xf
  42a32e:	lea    rdx,[rip+0x120b7]        # 43c3ec <flatcc_builder_padding_base@@Base+0x2bbc>
  42a335:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  42a339:	add    rcx,rdx
  42a33c:	jmp    rcx
  42a33e:	mov    ecx,edi
  42a340:	imul   rcx,rcx,0x51eb851f
  42a347:	shr    rcx,0x25
  42a34b:	imul   edx,ecx,0x64
  42a34e:	sub    edi,edx
  42a350:	lea    rdx,[rip+0x12b59]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42a357:	movzx  edx,WORD PTR [rdx+rdi*2]
  42a35b:	mov    WORD PTR [r8-0x2],dx
  42a360:	add    r8,0xfffffffffffffffe
  42a364:	mov    edi,ecx
  42a366:	mov    ecx,edi
  42a368:	imul   rcx,rcx,0x51eb851f
  42a36f:	shr    rcx,0x25
  42a373:	imul   edx,ecx,0x64
  42a376:	sub    edi,edx
  42a378:	lea    rdx,[rip+0x12b31]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42a37f:	movzx  edx,WORD PTR [rdx+rdi*2]
  42a383:	mov    WORD PTR [r8-0x2],dx
  42a388:	add    r8,0xfffffffffffffffe
  42a38c:	mov    edi,ecx
  42a38e:	mov    ecx,edi
  42a390:	imul   rcx,rcx,0x51eb851f
  42a397:	shr    rcx,0x25
  42a39b:	imul   edx,ecx,0x64
  42a39e:	sub    edi,edx
  42a3a0:	lea    rdx,[rip+0x12b09]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42a3a7:	movzx  edx,WORD PTR [rdx+rdi*2]
  42a3ab:	mov    WORD PTR [r8-0x2],dx
  42a3b0:	add    r8,0xfffffffffffffffe
  42a3b4:	mov    edi,ecx
  42a3b6:	mov    ecx,edi
  42a3b8:	imul   rcx,rcx,0x51eb851f
  42a3bf:	shr    rcx,0x25
  42a3c3:	imul   edx,ecx,0x64
  42a3c6:	sub    edi,edx
  42a3c8:	lea    rdx,[rip+0x12ae1]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42a3cf:	movzx  edx,WORD PTR [rdx+rdi*2]
  42a3d3:	mov    WORD PTR [r8-0x2],dx
  42a3d8:	add    r8,0xfffffffffffffffe
  42a3dc:	mov    edi,ecx
  42a3de:	mov    ecx,edi
  42a3e0:	imul   rcx,rcx,0x51eb851f
  42a3e7:	shr    rcx,0x25
  42a3eb:	imul   ecx,ecx,0x64
  42a3ee:	sub    edi,ecx
  42a3f0:	lea    rcx,[rip+0x12ab9]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42a3f7:	movzx  ecx,WORD PTR [rcx+rdi*2]
  42a3fb:	mov    WORD PTR [r8-0x2],cx
  42a400:	ret    
  42a401:	add    dl,0x7
  42a404:	mov    ecx,edx
  42a406:	and    cl,0xe
  42a409:	shr    cl,1
  42a40b:	shl    dl,0x3
  42a40e:	or     dl,cl
  42a410:	mov    ecx,edx
  42a412:	shl    cl,0x4
  42a415:	sar    cl,0x4
  42a418:	js     42a400 <flatcc_json_printer_uint32@@Base+0x1b0>
  42a41a:	movzx  ecx,dl
  42a41d:	and    ecx,0xf
  42a420:	lea    rdx,[rip+0x11fa5]        # 43c3cc <flatcc_builder_padding_base@@Base+0x2b9c>
  42a427:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  42a42b:	add    rcx,rdx
  42a42e:	jmp    rcx
  42a430:	mov    ecx,edi
  42a432:	imul   rcx,rcx,0x51eb851f
  42a439:	shr    rcx,0x25
  42a43d:	imul   edx,ecx,0x64
  42a440:	sub    edi,edx
  42a442:	lea    rdx,[rip+0x12a67]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42a449:	movzx  edx,WORD PTR [rdx+rdi*2]
  42a44d:	mov    WORD PTR [r8-0x2],dx
  42a452:	add    r8,0xfffffffffffffffe
  42a456:	mov    edi,ecx
  42a458:	mov    ecx,edi
  42a45a:	imul   rcx,rcx,0x51eb851f
  42a461:	shr    rcx,0x25
  42a465:	imul   edx,ecx,0x64
  42a468:	sub    edi,edx
  42a46a:	lea    rdx,[rip+0x12a3f]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42a471:	movzx  edx,WORD PTR [rdx+rdi*2]
  42a475:	mov    WORD PTR [r8-0x2],dx
  42a47a:	add    r8,0xfffffffffffffffe
  42a47e:	mov    edi,ecx
  42a480:	mov    ecx,edi
  42a482:	imul   rcx,rcx,0x51eb851f
  42a489:	shr    rcx,0x25
  42a48d:	imul   edx,ecx,0x64
  42a490:	sub    edi,edx
  42a492:	lea    rdx,[rip+0x12a17]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42a499:	movzx  edx,WORD PTR [rdx+rdi*2]
  42a49d:	mov    WORD PTR [r8-0x2],dx
  42a4a2:	add    r8,0xfffffffffffffffe
  42a4a6:	mov    edi,ecx
  42a4a8:	mov    ecx,edi
  42a4aa:	imul   rcx,rcx,0x51eb851f
  42a4b1:	shr    rcx,0x25
  42a4b5:	imul   edx,ecx,0x64
  42a4b8:	sub    edi,edx
  42a4ba:	lea    rdx,[rip+0x129ef]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42a4c1:	movzx  edx,WORD PTR [rdx+rdi*2]
  42a4c5:	mov    WORD PTR [r8-0x2],dx
  42a4ca:	add    r8,0xfffffffffffffffe
  42a4ce:	mov    edi,ecx
  42a4d0:	add    dil,0x30
  42a4d4:	mov    BYTE PTR [r8-0x1],dil
  42a4d8:	ret    
  42a4d9:	nop    DWORD PTR [rax+0x0]

000000000042a4e0 <flatcc_json_printer_uint64@@Base>:
  42a4e0:	push   rbx
  42a4e1:	mov    rbx,rdi
  42a4e4:	mov    rax,QWORD PTR [rdi+0x28]
  42a4e8:	mov    rdi,rsi
  42a4eb:	mov    rsi,rax
  42a4ee:	call   42a500 <flatcc_json_printer_uint64@@Base+0x20>
  42a4f3:	cdqe   
  42a4f5:	add    QWORD PTR [rbx+0x28],rax
  42a4f9:	pop    rbx
  42a4fa:	ret    
  42a4fb:	nop    DWORD PTR [rax+rax*1+0x0]
  42a500:	cmp    rdi,0x3b9ac9ff
  42a507:	ja     42a50e <flatcc_json_printer_uint64@@Base+0x2e>
  42a509:	jmp    42a270 <flatcc_json_printer_uint32@@Base+0x20>
  42a50e:	mov    rax,rdi
  42a511:	shr    rax,0xd
  42a515:	cmp    rax,0x48c27395
  42a51b:	jb     42a555 <flatcc_json_printer_uint64@@Base+0x75>
  42a51d:	movabs rax,0x2386f26fc10000
  42a527:	cmp    rdi,rax
  42a52a:	jb     42a57c <flatcc_json_printer_uint64@@Base+0x9c>
  42a52c:	movabs rax,0xde0b6b3a7640000
  42a536:	cmp    rdi,rax
  42a539:	jb     42a5b5 <flatcc_json_printer_uint64@@Base+0xd5>
  42a53b:	movabs rcx,0x8ac7230489e7ffff
  42a545:	xor    eax,eax
  42a547:	cmp    rdi,rcx
  42a54a:	seta   al
  42a54d:	add    eax,0x13
  42a550:	jmp    42a5e1 <flatcc_json_printer_uint64@@Base+0x101>
  42a555:	mov    rax,rdi
  42a558:	shr    rax,0xb
  42a55c:	mov    rcx,rdi
  42a55f:	cmp    rax,0x2e90edd
  42a565:	jb     42a5a0 <flatcc_json_printer_uint64@@Base+0xc0>
  42a567:	shr    rcx,0xc
  42a56b:	xor    eax,eax
  42a56d:	cmp    rcx,0xe8d4a50
  42a574:	seta   al
  42a577:	or     eax,0xc
  42a57a:	jmp    42a5e1 <flatcc_json_printer_uint64@@Base+0x101>
  42a57c:	movabs rax,0x38d7ea4c68000
  42a586:	cmp    rdi,rax
  42a589:	jb     42a5cc <flatcc_json_printer_uint64@@Base+0xec>
  42a58b:	mov    BYTE PTR [rsi+0x10],0x0
  42a58f:	add    rsi,0x10
  42a593:	mov    eax,0x10
  42a598:	mov    r8,rsi
  42a59b:	jmp    42a687 <flatcc_json_printer_uint64@@Base+0x1a7>
  42a5a0:	shr    rcx,0xa
  42a5a4:	xor    eax,eax
  42a5a6:	cmp    rcx,0x9502f8
  42a5ad:	seta   al
  42a5b0:	or     eax,0xa
  42a5b3:	jmp    42a5e1 <flatcc_json_printer_uint64@@Base+0x101>
  42a5b5:	movabs rcx,0x16345785d89ffff
  42a5bf:	xor    eax,eax
  42a5c1:	cmp    rdi,rcx
  42a5c4:	seta   al
  42a5c7:	add    eax,0x11
  42a5ca:	jmp    42a5e1 <flatcc_json_printer_uint64@@Base+0x101>
  42a5cc:	movabs rcx,0x5af3107a3fff
  42a5d6:	xor    eax,eax
  42a5d8:	cmp    rdi,rcx
  42a5db:	seta   al
  42a5de:	or     eax,0xe
  42a5e1:	mov    ecx,eax
  42a5e3:	lea    r8,[rsi+rcx*1]
  42a5e7:	mov    BYTE PTR [rsi+rcx*1],0x0
  42a5eb:	mov    ecx,eax
  42a5ed:	and    cl,0x1f
  42a5f0:	test   al,0x1
  42a5f2:	jne    42a76c <flatcc_json_printer_uint64@@Base+0x28c>
  42a5f8:	add    cl,0xf6
  42a5fb:	cmp    cl,0xa
  42a5fe:	ja     42a8de <flatcc_json_printer_uint64@@Base+0x3fe>
  42a604:	movzx  ecx,cl
  42a607:	lea    rdx,[rip+0x11e22]        # 43c430 <flatcc_builder_padding_base@@Base+0x2c00>
  42a60e:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  42a612:	add    rcx,rdx
  42a615:	jmp    rcx
  42a617:	mov    rdx,rdi
  42a61a:	shr    rdx,0x2
  42a61e:	movabs rcx,0x28f5c28f5c28f5c3
  42a628:	mulx   rcx,rdx,rcx
  42a62d:	shr    rcx,0x2
  42a631:	imul   rdx,rcx,0x64
  42a635:	sub    rdi,rdx
  42a638:	lea    rdx,[rip+0x12871]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42a63f:	movzx  edx,WORD PTR [rdx+rdi*2]
  42a643:	mov    WORD PTR [r8-0x2],dx
  42a648:	add    r8,0xfffffffffffffffe
  42a64c:	mov    rdi,rcx
  42a64f:	mov    rdx,rdi
  42a652:	shr    rdx,0x2
  42a656:	movabs rcx,0x28f5c28f5c28f5c3
  42a660:	mulx   rcx,rdx,rcx
  42a665:	shr    rcx,0x2
  42a669:	imul   rdx,rcx,0x64
  42a66d:	sub    rdi,rdx
  42a670:	lea    rdx,[rip+0x12839]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42a677:	movzx  edx,WORD PTR [rdx+rdi*2]
  42a67b:	mov    WORD PTR [r8-0x2],dx
  42a680:	add    r8,0xfffffffffffffffe
  42a684:	mov    rdi,rcx
  42a687:	mov    rdx,rdi
  42a68a:	shr    rdx,0x2
  42a68e:	movabs rcx,0x28f5c28f5c28f5c3
  42a698:	mulx   rcx,rdx,rcx
  42a69d:	shr    rcx,0x2
  42a6a1:	imul   rdx,rcx,0x64
  42a6a5:	sub    rdi,rdx
  42a6a8:	lea    rdx,[rip+0x12801]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42a6af:	movzx  edx,WORD PTR [rdx+rdi*2]
  42a6b3:	mov    WORD PTR [r8-0x2],dx
  42a6b8:	add    r8,0xfffffffffffffffe
  42a6bc:	mov    rdi,rcx
  42a6bf:	mov    rdx,rdi
  42a6c2:	shr    rdx,0x2
  42a6c6:	movabs rcx,0x28f5c28f5c28f5c3
  42a6d0:	mulx   rcx,rdx,rcx
  42a6d5:	shr    rcx,0x2
  42a6d9:	imul   rdx,rcx,0x64
  42a6dd:	sub    rdi,rdx
  42a6e0:	lea    rdx,[rip+0x127c9]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42a6e7:	movzx  edx,WORD PTR [rdx+rdi*2]
  42a6eb:	mov    WORD PTR [r8-0x2],dx
  42a6f0:	add    r8,0xfffffffffffffffe
  42a6f4:	mov    rdi,rcx
  42a6f7:	mov    rdx,rdi
  42a6fa:	shr    rdx,0x2
  42a6fe:	movabs rcx,0x28f5c28f5c28f5c3
  42a708:	mulx   rcx,rdx,rcx
  42a70d:	shr    rcx,0x2
  42a711:	imul   rdx,rcx,0x64
  42a715:	sub    rdi,rdx
  42a718:	lea    rdx,[rip+0x12791]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42a71f:	movzx  edx,WORD PTR [rdx+rdi*2]
  42a723:	mov    WORD PTR [r8-0x2],dx
  42a728:	add    r8,0xfffffffffffffffe
  42a72c:	mov    rdi,rcx
  42a72f:	mov    rdx,rdi
  42a732:	shr    rdx,0x2
  42a736:	movabs rcx,0x28f5c28f5c28f5c3
  42a740:	mulx   rcx,rdx,rcx
  42a745:	shr    rcx,0x2
  42a749:	imul   rdx,rcx,0x64
  42a74d:	sub    rdi,rdx
  42a750:	lea    rdx,[rip+0x12759]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42a757:	movzx  edx,WORD PTR [rdx+rdi*2]
  42a75b:	mov    WORD PTR [r8-0x2],dx
  42a760:	add    r8,0xfffffffffffffffe
  42a764:	mov    rdi,rcx
  42a767:	jmp    42a8de <flatcc_json_printer_uint64@@Base+0x3fe>
  42a76c:	add    cl,0xf5
  42a76f:	cmp    cl,0x8
  42a772:	ja     42a8de <flatcc_json_printer_uint64@@Base+0x3fe>
  42a778:	movzx  ecx,cl
  42a77b:	lea    rdx,[rip+0x11c8a]        # 43c40c <flatcc_builder_padding_base@@Base+0x2bdc>
  42a782:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  42a786:	add    rcx,rdx
  42a789:	jmp    rcx
  42a78b:	mov    rdx,rdi
  42a78e:	shr    rdx,0x2
  42a792:	movabs rcx,0x28f5c28f5c28f5c3
  42a79c:	mulx   rcx,rdx,rcx
  42a7a1:	shr    rcx,0x2
  42a7a5:	imul   rdx,rcx,0x64
  42a7a9:	sub    rdi,rdx
  42a7ac:	lea    rdx,[rip+0x126fd]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42a7b3:	movzx  edx,WORD PTR [rdx+rdi*2]
  42a7b7:	mov    WORD PTR [r8-0x2],dx
  42a7bc:	add    r8,0xfffffffffffffffe
  42a7c0:	mov    rdi,rcx
  42a7c3:	mov    rdx,rdi
  42a7c6:	shr    rdx,0x2
  42a7ca:	movabs rcx,0x28f5c28f5c28f5c3
  42a7d4:	mulx   rcx,rdx,rcx
  42a7d9:	shr    rcx,0x2
  42a7dd:	imul   rdx,rcx,0x64
  42a7e1:	sub    rdi,rdx
  42a7e4:	lea    rdx,[rip+0x126c5]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42a7eb:	movzx  edx,WORD PTR [rdx+rdi*2]
  42a7ef:	mov    WORD PTR [r8-0x2],dx
  42a7f4:	add    r8,0xfffffffffffffffe
  42a7f8:	mov    rdi,rcx
  42a7fb:	mov    rdx,rdi
  42a7fe:	shr    rdx,0x2
  42a802:	movabs rcx,0x28f5c28f5c28f5c3
  42a80c:	mulx   rcx,rdx,rcx
  42a811:	shr    rcx,0x2
  42a815:	imul   rdx,rcx,0x64
  42a819:	sub    rdi,rdx
  42a81c:	lea    rdx,[rip+0x1268d]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42a823:	movzx  edx,WORD PTR [rdx+rdi*2]
  42a827:	mov    WORD PTR [r8-0x2],dx
  42a82c:	add    r8,0xfffffffffffffffe
  42a830:	mov    rdi,rcx
  42a833:	mov    rdx,rdi
  42a836:	shr    rdx,0x2
  42a83a:	movabs rcx,0x28f5c28f5c28f5c3
  42a844:	mulx   rcx,rdx,rcx
  42a849:	shr    rcx,0x2
  42a84d:	imul   rdx,rcx,0x64
  42a851:	sub    rdi,rdx
  42a854:	lea    rdx,[rip+0x12655]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42a85b:	movzx  edx,WORD PTR [rdx+rdi*2]
  42a85f:	mov    WORD PTR [r8-0x2],dx
  42a864:	add    r8,0xfffffffffffffffe
  42a868:	mov    rdi,rcx
  42a86b:	mov    rdx,rdi
  42a86e:	shr    rdx,0x2
  42a872:	movabs rcx,0x28f5c28f5c28f5c3
  42a87c:	mulx   rdx,rcx,rcx
  42a881:	shr    rdx,0x2
  42a885:	imul   rcx,rdx,0x64
  42a889:	mov    rsi,rdi
  42a88c:	sub    rsi,rcx
  42a88f:	lea    rcx,[rip+0x1261a]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42a896:	movzx  ecx,WORD PTR [rcx+rsi*2]
  42a89a:	mov    WORD PTR [r8-0x2],cx
  42a89f:	movabs rcx,0xcccccccccccccccd
  42a8a9:	mulx   rsi,rcx,rcx
  42a8ae:	shr    esi,0x2
  42a8b1:	and    esi,0xfffffffe
  42a8b4:	lea    ecx,[rsi+rsi*4]
  42a8b7:	sub    edx,ecx
  42a8b9:	or     dl,0x30
  42a8bc:	mov    BYTE PTR [r8-0x3],dl
  42a8c0:	add    r8,0xfffffffffffffffd
  42a8c4:	shr    rdi,0x3
  42a8c8:	movabs rcx,0x20c49ba5e353f7cf
  42a8d2:	mov    rdx,rdi
  42a8d5:	mulx   rdi,rcx,rcx
  42a8da:	shr    rdi,0x4
  42a8de:	push   rbx
  42a8df:	mov    rdx,rdi
  42a8e2:	shr    rdx,0x2
  42a8e6:	movabs r9,0x28f5c28f5c28f5c3
  42a8f0:	mulx   rdx,rcx,r9
  42a8f5:	mov    rsi,rdx
  42a8f8:	shr    rsi,0x2
  42a8fc:	imul   r10,rsi,0x64
  42a900:	mov    rcx,rdi
  42a903:	sub    rcx,r10
  42a906:	lea    r10,[rip+0x125a3]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42a90d:	movzx  r11d,WORD PTR [r10+rcx*2]
  42a912:	shr    rdx,0x4
  42a916:	mulx   rcx,rdx,r9
  42a91b:	mov    WORD PTR [r8-0x2],r11w
  42a920:	shr    rcx,0x2
  42a924:	imul   rbx,rcx,0x64
  42a928:	movabs r11,0x346dc5d63886594b
  42a932:	mov    rdx,rdi
  42a935:	mulx   rdx,rcx,r11
  42a93a:	sub    rsi,rbx
  42a93d:	mov    rcx,rdx
  42a940:	shr    rcx,0xb
  42a944:	movzx  esi,WORD PTR [r10+rsi*2]
  42a949:	shr    rdx,0xd
  42a94d:	mulx   rbx,rdx,r9
  42a952:	mov    WORD PTR [r8-0x4],si
  42a957:	shr    rbx,0x2
  42a95b:	imul   rsi,rbx,0x64
  42a95f:	movabs rbx,0x431bde82d7b634db
  42a969:	mov    rdx,rdi
  42a96c:	mulx   rdx,rdi,rbx
  42a971:	sub    rcx,rsi
  42a974:	mov    rsi,rdx
  42a977:	shr    rsi,0x12
  42a97b:	movzx  ecx,WORD PTR [r10+rcx*2]
  42a980:	shr    rdx,0x14
  42a984:	mulx   rdi,rdx,r9
  42a989:	mov    WORD PTR [r8-0x6],cx
  42a98e:	shr    rdi,0x2
  42a992:	imul   rcx,rdi,0x64
  42a996:	sub    rsi,rcx
  42a999:	movzx  ecx,WORD PTR [r10+rsi*2]
  42a99e:	mov    WORD PTR [r8-0x8],cx
  42a9a3:	pop    rbx
  42a9a4:	ret    
  42a9a5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a9af:	nop

000000000042a9b0 <flatcc_json_printer_int8@@Base>:
  42a9b0:	mov    rdx,QWORD PTR [rdi+0x28]
  42a9b4:	mov    eax,esi
  42a9b6:	shr    al,0x7
  42a9b9:	movzx  r8d,al
  42a9bd:	test   sil,sil
  42a9c0:	js     42aa03 <flatcc_json_printer_int8@@Base+0x53>
  42a9c2:	cmp    sil,0x64
  42a9c6:	jb     42aa13 <flatcc_json_printer_int8@@Base+0x63>
  42a9c8:	mov    BYTE PTR [rdx+0x3],0x0
  42a9cc:	movzx  eax,sil
  42a9d0:	lea    ecx,[rax+rax*4]
  42a9d3:	lea    ecx,[rax+rcx*8]
  42a9d6:	shr    ecx,0xc
  42a9d9:	mov    r9b,0x64
  42a9dc:	mov    eax,ecx
  42a9de:	mul    r9b
  42a9e1:	sub    sil,al
  42a9e4:	movzx  eax,sil
  42a9e8:	lea    rsi,[rip+0x124c1]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42a9ef:	movzx  eax,WORD PTR [rsi+rax*2]
  42a9f3:	mov    WORD PTR [rdx+0x1],ax
  42a9f7:	or     cl,0x30
  42a9fa:	mov    BYTE PTR [rdx],cl
  42a9fc:	mov    eax,0x3
  42aa01:	jmp    42aa5a <flatcc_json_printer_int8@@Base+0xaa>
  42aa03:	mov    BYTE PTR [rdx],0x2d
  42aa06:	add    rdx,0x1
  42aa0a:	neg    sil
  42aa0d:	cmp    sil,0x64
  42aa11:	jae    42a9c8 <flatcc_json_printer_int8@@Base+0x18>
  42aa13:	cmp    sil,0xa
  42aa17:	jb     42aa4a <flatcc_json_printer_int8@@Base+0x9a>
  42aa19:	mov    BYTE PTR [rdx+0x2],0x0
  42aa1d:	movzx  eax,sil
  42aa21:	lea    ecx,[rax+rax*4]
  42aa24:	lea    eax,[rax+rcx*8]
  42aa27:	shr    eax,0xc
  42aa2a:	mov    cl,0x64
  42aa2c:	mul    cl
  42aa2e:	sub    sil,al
  42aa31:	movzx  eax,sil
  42aa35:	lea    rcx,[rip+0x12474]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42aa3c:	movzx  eax,WORD PTR [rcx+rax*2]
  42aa40:	mov    WORD PTR [rdx],ax
  42aa43:	mov    eax,0x2
  42aa48:	jmp    42aa5a <flatcc_json_printer_int8@@Base+0xaa>
  42aa4a:	mov    BYTE PTR [rdx+0x1],0x0
  42aa4e:	add    sil,0x30
  42aa52:	mov    BYTE PTR [rdx],sil
  42aa55:	mov    eax,0x1
  42aa5a:	add    rax,r8
  42aa5d:	add    QWORD PTR [rdi+0x28],rax
  42aa61:	ret    
  42aa62:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42aa6c:	nop    DWORD PTR [rax+0x0]

000000000042aa70 <flatcc_json_printer_int16@@Base>:
  42aa70:	movzx  r8d,si
  42aa74:	mov    rdx,QWORD PTR [rdi+0x28]
  42aa78:	test   r8w,r8w
  42aa7c:	jns    42aa87 <flatcc_json_printer_int16@@Base+0x17>
  42aa7e:	mov    BYTE PTR [rdx],0x2d
  42aa81:	add    rdx,0x1
  42aa85:	neg    esi
  42aa87:	shr    r8d,0xf
  42aa8b:	movzx  r10d,si
  42aa8f:	cmp    r10d,0x3e8
  42aa96:	jb     42aaa9 <flatcc_json_printer_int16@@Base+0x39>
  42aa98:	xor    ecx,ecx
  42aa9a:	cmp    r10d,0x270f
  42aaa1:	seta   cl
  42aaa4:	or     ecx,0x4
  42aaa7:	jmp    42aad0 <flatcc_json_printer_int16@@Base+0x60>
  42aaa9:	cmp    r10d,0x64
  42aaad:	jb     42aac4 <flatcc_json_printer_int16@@Base+0x54>
  42aaaf:	mov    BYTE PTR [rdx+0x3],0x0
  42aab3:	add    rdx,0x3
  42aab7:	mov    ecx,0x3
  42aabc:	mov    r9,rdx
  42aabf:	jmp    42ab81 <flatcc_json_printer_int16@@Base+0x111>
  42aac4:	xor    ecx,ecx
  42aac6:	cmp    r10d,0x9
  42aaca:	seta   cl
  42aacd:	add    ecx,0x1
  42aad0:	mov    eax,ecx
  42aad2:	lea    r9,[rdx+rax*1]
  42aad6:	mov    BYTE PTR [rdx+rax*1],0x0
  42aada:	test   cl,0x1
  42aadd:	jne    42ab45 <flatcc_json_printer_int16@@Base+0xd5>
  42aadf:	cmp    cl,0x2
  42aae2:	je     42ab1a <flatcc_json_printer_int16@@Base+0xaa>
  42aae4:	cmp    cl,0x4
  42aae7:	jne    42abb6 <flatcc_json_printer_int16@@Base+0x146>
  42aaed:	mov    eax,r10d
  42aaf0:	shr    eax,0x2
  42aaf3:	imul   esi,eax,0x147b
  42aaf9:	shr    esi,0x11
  42aafc:	imul   eax,esi,0x64
  42aaff:	sub    r10d,eax
  42ab02:	movzx  eax,r10w
  42ab06:	lea    rdx,[rip+0x123a3]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42ab0d:	movzx  eax,WORD PTR [rdx+rax*2]
  42ab11:	mov    WORD PTR [r9-0x2],ax
  42ab16:	lea    r9,[r9-0x2]
  42ab1a:	movzx  eax,si
  42ab1d:	mov    edx,eax
  42ab1f:	shr    edx,0x2
  42ab22:	imul   edx,edx,0x147b
  42ab28:	shr    edx,0x11
  42ab2b:	imul   edx,edx,0x64
  42ab2e:	sub    eax,edx
  42ab30:	movzx  eax,ax
  42ab33:	lea    rdx,[rip+0x12376]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42ab3a:	movzx  eax,WORD PTR [rdx+rax*2]
  42ab3e:	mov    WORD PTR [r9-0x2],ax
  42ab43:	jmp    42abb6 <flatcc_json_printer_int16@@Base+0x146>
  42ab45:	cmp    cl,0x1
  42ab48:	je     42abae <flatcc_json_printer_int16@@Base+0x13e>
  42ab4a:	cmp    cl,0x3
  42ab4d:	je     42ab81 <flatcc_json_printer_int16@@Base+0x111>
  42ab4f:	cmp    cl,0x5
  42ab52:	jne    42abb6 <flatcc_json_printer_int16@@Base+0x146>
  42ab54:	mov    eax,r10d
  42ab57:	shr    eax,0x2
  42ab5a:	imul   esi,eax,0x147b
  42ab60:	shr    esi,0x11
  42ab63:	imul   eax,esi,0x64
  42ab66:	sub    r10d,eax
  42ab69:	movzx  eax,r10w
  42ab6d:	lea    rdx,[rip+0x1233c]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42ab74:	movzx  eax,WORD PTR [rdx+rax*2]
  42ab78:	mov    WORD PTR [r9-0x2],ax
  42ab7d:	lea    r9,[r9-0x2]
  42ab81:	movzx  eax,si
  42ab84:	mov    edx,eax
  42ab86:	shr    edx,0x2
  42ab89:	imul   esi,edx,0x147b
  42ab8f:	shr    esi,0x11
  42ab92:	imul   edx,esi,0x64
  42ab95:	sub    eax,edx
  42ab97:	movzx  eax,ax
  42ab9a:	lea    rdx,[rip+0x1230f]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42aba1:	movzx  eax,WORD PTR [rdx+rax*2]
  42aba5:	mov    WORD PTR [r9-0x2],ax
  42abaa:	lea    r9,[r9-0x2]
  42abae:	add    sil,0x30
  42abb2:	mov    BYTE PTR [r9-0x1],sil
  42abb6:	add    ecx,r8d
  42abb9:	add    QWORD PTR [rdi+0x28],rcx
  42abbd:	ret    
  42abbe:	xchg   ax,ax

000000000042abc0 <flatcc_json_printer_int32@@Base>:
  42abc0:	push   rbp
  42abc1:	push   rbx
  42abc2:	push   rax
  42abc3:	mov    rbx,rdi
  42abc6:	mov    rax,QWORD PTR [rdi+0x28]
  42abca:	mov    ebp,esi
  42abcc:	shr    ebp,0x1f
  42abcf:	test   esi,esi
  42abd1:	jns    42abdc <flatcc_json_printer_int32@@Base+0x1c>
  42abd3:	mov    BYTE PTR [rax],0x2d
  42abd6:	add    rax,0x1
  42abda:	neg    esi
  42abdc:	mov    edi,esi
  42abde:	mov    rsi,rax
  42abe1:	call   42a270 <flatcc_json_printer_uint32@@Base+0x20>
  42abe6:	add    eax,ebp
  42abe8:	cdqe   
  42abea:	add    QWORD PTR [rbx+0x28],rax
  42abee:	add    rsp,0x8
  42abf2:	pop    rbx
  42abf3:	pop    rbp
  42abf4:	ret    
  42abf5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42abff:	nop

000000000042ac00 <flatcc_json_printer_int64@@Base>:
  42ac00:	push   r14
  42ac02:	push   rbx
  42ac03:	push   rax
  42ac04:	mov    r14,rdi
  42ac07:	mov    rax,QWORD PTR [rdi+0x28]
  42ac0b:	mov    rbx,rsi
  42ac0e:	shr    rbx,0x3f
  42ac12:	test   rsi,rsi
  42ac15:	jns    42ac21 <flatcc_json_printer_int64@@Base+0x21>
  42ac17:	mov    BYTE PTR [rax],0x2d
  42ac1a:	add    rax,0x1
  42ac1e:	neg    rsi
  42ac21:	mov    rdi,rsi
  42ac24:	mov    rsi,rax
  42ac27:	call   42a500 <flatcc_json_printer_uint64@@Base+0x20>
  42ac2c:	add    eax,ebx
  42ac2e:	cdqe   
  42ac30:	add    QWORD PTR [r14+0x28],rax
  42ac34:	add    rsp,0x8
  42ac38:	pop    rbx
  42ac39:	pop    r14
  42ac3b:	ret    
  42ac3c:	nop    DWORD PTR [rax+0x0]

000000000042ac40 <flatcc_json_printer_float@@Base>:
  42ac40:	push   rbx
  42ac41:	mov    rbx,rdi
  42ac44:	vcvtss2sd xmm0,xmm0,xmm0
  42ac48:	mov    rdi,QWORD PTR [rdi+0x28]
  42ac4c:	call   428ec0 <flatcc_json_printer_fmt_float@@Base+0x10>
  42ac51:	cdqe   
  42ac53:	add    QWORD PTR [rbx+0x28],rax
  42ac57:	pop    rbx
  42ac58:	ret    
  42ac59:	nop    DWORD PTR [rax+0x0]

000000000042ac60 <flatcc_json_printer_double@@Base>:
  42ac60:	push   rbx
  42ac61:	mov    rbx,rdi
  42ac64:	mov    rdi,QWORD PTR [rdi+0x28]
  42ac68:	call   428ec0 <flatcc_json_printer_fmt_float@@Base+0x10>
  42ac6d:	cdqe   
  42ac6f:	add    QWORD PTR [rbx+0x28],rax
  42ac73:	pop    rbx
  42ac74:	ret    
  42ac75:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ac7f:	nop

000000000042ac80 <flatcc_json_printer_enum@@Base>:
  42ac80:	push   r15
  42ac82:	push   r14
  42ac84:	push   r12
  42ac86:	push   rbx
  42ac87:	push   rax
  42ac88:	mov    r12,rsi
  42ac8b:	mov    r14,rdi
  42ac8e:	movsxd r15,edx
  42ac91:	mov    rax,QWORD PTR [rdi+0x28]
  42ac95:	mov    BYTE PTR [rax],0x22
  42ac98:	mov    rbx,QWORD PTR [rdi+0x20]
  42ac9c:	mov    rdi,QWORD PTR [rdi+0x28]
  42aca0:	xor    eax,eax
  42aca2:	cmp    BYTE PTR [r14+0x32],0x1
  42aca7:	adcx   rdi,rax
  42acad:	mov    QWORD PTR [r14+0x28],rdi
  42acb1:	lea    rax,[rdi+r15*1]
  42acb5:	cmp    rax,rbx
  42acb8:	jb     42ad0e <flatcc_json_printer_enum@@Base+0x8e>
  42acba:	cmp    rdi,rbx
  42acbd:	jb     42acd0 <flatcc_json_printer_enum@@Base+0x50>
  42acbf:	xor    esi,esi
  42acc1:	mov    rdi,r14
  42acc4:	call   QWORD PTR [r14+0x48]
  42acc8:	mov    rbx,QWORD PTR [r14+0x20]
  42accc:	mov    rdi,QWORD PTR [r14+0x28]
  42acd0:	sub    rbx,rdi
  42acd3:	cmp    rbx,r15
  42acd6:	jae    42ad0e <flatcc_json_printer_enum@@Base+0x8e>
  42acd8:	nop    DWORD PTR [rax+rax*1+0x0]
  42ace0:	mov    rsi,r12
  42ace3:	mov    rdx,rbx
  42ace6:	call   4060e0 <memcpy@plt>
  42aceb:	add    QWORD PTR [r14+0x28],rbx
  42acef:	add    r12,rbx
  42acf2:	sub    r15,rbx
  42acf5:	xor    esi,esi
  42acf7:	mov    rdi,r14
  42acfa:	call   QWORD PTR [r14+0x48]
  42acfe:	mov    rbx,QWORD PTR [r14+0x20]
  42ad02:	mov    rdi,QWORD PTR [r14+0x28]
  42ad06:	sub    rbx,rdi
  42ad09:	cmp    r15,rbx
  42ad0c:	ja     42ace0 <flatcc_json_printer_enum@@Base+0x60>
  42ad0e:	mov    rsi,r12
  42ad11:	mov    rdx,r15
  42ad14:	call   4060e0 <memcpy@plt>
  42ad19:	mov    rax,QWORD PTR [r14+0x28]
  42ad1d:	lea    rcx,[rax+r15*1]
  42ad21:	mov    QWORD PTR [r14+0x28],rcx
  42ad25:	mov    BYTE PTR [rax+r15*1],0x22
  42ad2a:	cmp    BYTE PTR [r14+0x32],0x1
  42ad2f:	adc    QWORD PTR [r14+0x28],0x0
  42ad34:	add    rsp,0x8
  42ad38:	pop    rbx
  42ad39:	pop    r12
  42ad3b:	pop    r14
  42ad3d:	pop    r15
  42ad3f:	ret    

000000000042ad40 <flatcc_json_printer_delimit_enum_flags@@Base>:
  42ad40:	cmp    BYTE PTR [rdi+0x32],0x0
  42ad44:	sete   al
  42ad47:	test   esi,esi
  42ad49:	setne  cl
  42ad4c:	or     cl,al
  42ad4e:	mov    rax,QWORD PTR [rdi+0x28]
  42ad52:	mov    BYTE PTR [rax],0x22
  42ad55:	movzx  eax,cl
  42ad58:	add    QWORD PTR [rdi+0x28],rax
  42ad5c:	ret    
  42ad5d:	nop    DWORD PTR [rax]

000000000042ad60 <flatcc_json_printer_enum_flag@@Base>:
  42ad60:	push   r15
  42ad62:	push   r14
  42ad64:	push   r12
  42ad66:	push   rbx
  42ad67:	push   rax
  42ad68:	mov    r14,rdi
  42ad6b:	mov    rax,QWORD PTR [rdi+0x28]
  42ad6f:	mov    BYTE PTR [rax],0x20
  42ad72:	xor    edi,edi
  42ad74:	test   esi,esi
  42ad76:	setg   dil
  42ad7a:	add    rdi,QWORD PTR [r14+0x28]
  42ad7e:	mov    r12,rdx
  42ad81:	mov    QWORD PTR [r14+0x28],rdi
  42ad85:	movsxd r15,ecx
  42ad88:	lea    rax,[rdi+r15*1]
  42ad8c:	mov    rbx,QWORD PTR [r14+0x20]
  42ad90:	cmp    rax,rbx
  42ad93:	jb     42adee <flatcc_json_printer_enum_flag@@Base+0x8e>
  42ad95:	cmp    rdi,rbx
  42ad98:	jb     42adab <flatcc_json_printer_enum_flag@@Base+0x4b>
  42ad9a:	xor    esi,esi
  42ad9c:	mov    rdi,r14
  42ad9f:	call   QWORD PTR [r14+0x48]
  42ada3:	mov    rbx,QWORD PTR [r14+0x20]
  42ada7:	mov    rdi,QWORD PTR [r14+0x28]
  42adab:	sub    rbx,rdi
  42adae:	cmp    rbx,r15
  42adb1:	jae    42adee <flatcc_json_printer_enum_flag@@Base+0x8e>
  42adb3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42adbd:	nop    DWORD PTR [rax]
  42adc0:	mov    rsi,r12
  42adc3:	mov    rdx,rbx
  42adc6:	call   4060e0 <memcpy@plt>
  42adcb:	add    QWORD PTR [r14+0x28],rbx
  42adcf:	add    r12,rbx
  42add2:	sub    r15,rbx
  42add5:	xor    esi,esi
  42add7:	mov    rdi,r14
  42adda:	call   QWORD PTR [r14+0x48]
  42adde:	mov    rbx,QWORD PTR [r14+0x20]
  42ade2:	mov    rdi,QWORD PTR [r14+0x28]
  42ade6:	sub    rbx,rdi
  42ade9:	cmp    r15,rbx
  42adec:	ja     42adc0 <flatcc_json_printer_enum_flag@@Base+0x60>
  42adee:	mov    rsi,r12
  42adf1:	mov    rdx,r15
  42adf4:	call   4060e0 <memcpy@plt>
  42adf9:	add    QWORD PTR [r14+0x28],r15
  42adfd:	add    rsp,0x8
  42ae01:	pop    rbx
  42ae02:	pop    r12
  42ae04:	pop    r14
  42ae06:	pop    r15
  42ae08:	ret    
  42ae09:	nop    DWORD PTR [rax+0x0]

000000000042ae10 <flatcc_json_printer_string_field@@Base>:
  42ae10:	push   r14
  42ae12:	push   rbx
  42ae13:	push   rax
  42ae14:	lea    eax,[rdx+rdx*1]
  42ae17:	add    eax,0x4
  42ae1a:	cmp    eax,DWORD PTR [rsi+0x10]
  42ae1d:	jge    42ae7c <flatcc_json_printer_string_field@@Base+0x6c>
  42ae1f:	mov    rdx,QWORD PTR [rsi+0x8]
  42ae23:	mov    eax,eax
  42ae25:	movzx  ebx,WORD PTR [rdx+rax*1]
  42ae29:	test   rbx,rbx
  42ae2c:	je     42ae7c <flatcc_json_printer_string_field@@Base+0x6c>
  42ae2e:	add    rbx,QWORD PTR [rsi]
  42ae31:	je     42ae7c <flatcc_json_printer_string_field@@Base+0x6c>
  42ae33:	mov    r14,rdi
  42ae36:	mov    eax,DWORD PTR [rsi+0x18]
  42ae39:	lea    edx,[rax+0x1]
  42ae3c:	mov    DWORD PTR [rsi+0x18],edx
  42ae3f:	test   eax,eax
  42ae41:	je     42ae52 <flatcc_json_printer_string_field@@Base+0x42>
  42ae43:	mov    rax,QWORD PTR [r14+0x28]
  42ae47:	lea    rdx,[rax+0x1]
  42ae4b:	mov    QWORD PTR [r14+0x28],rdx
  42ae4f:	mov    BYTE PTR [rax],0x2c
  42ae52:	movsxd rdx,r8d
  42ae55:	mov    rdi,r14
  42ae58:	mov    rsi,rcx
  42ae5b:	call   42ae90 <flatcc_json_printer_string_field@@Base+0x80>
  42ae60:	mov    eax,DWORD PTR [rbx]
  42ae62:	mov    edx,DWORD PTR [rbx+rax*1]
  42ae65:	lea    rsi,[rbx+rax*1]
  42ae69:	add    rsi,0x4
  42ae6d:	mov    rdi,r14
  42ae70:	add    rsp,0x8
  42ae74:	pop    rbx
  42ae75:	pop    r14
  42ae77:	jmp    429ca0 <flatcc_json_printer_string@@Base+0x10>
  42ae7c:	add    rsp,0x8
  42ae80:	pop    rbx
  42ae81:	pop    r14
  42ae83:	ret    
  42ae84:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ae8e:	xchg   ax,ax
  42ae90:	push   rbp
  42ae91:	push   r15
  42ae93:	push   r14
  42ae95:	push   r13
  42ae97:	push   r12
  42ae99:	push   rbx
  42ae9a:	push   rax
  42ae9b:	mov    r14,rdx
  42ae9e:	mov    r15,rsi
  42aea1:	mov    r12,rdi
  42aea4:	cmp    BYTE PTR [rdi+0x31],0x0
  42aea8:	mov    r13,QWORD PTR [rdi+0x28]
  42aeac:	je     42af5f <flatcc_json_printer_string_field@@Base+0x14f>
  42aeb2:	lea    rax,[r13+0x1]
  42aeb6:	mov    QWORD PTR [r12+0x28],rax
  42aebb:	mov    BYTE PTR [r13+0x0],0xa
  42aec0:	movsxd rax,DWORD PTR [r12+0x38]
  42aec5:	movzx  r13d,BYTE PTR [r12+0x31]
  42aecb:	imul   r13,rax
  42aecf:	mov    rbx,QWORD PTR [r12+0x20]
  42aed4:	mov    rdi,QWORD PTR [r12+0x28]
  42aed9:	lea    rax,[rdi+r13*1]
  42aedd:	cmp    rax,rbx
  42aee0:	jbe    42af41 <flatcc_json_printer_string_field@@Base+0x131>
  42aee2:	cmp    rdi,rbx
  42aee5:	jb     42aefb <flatcc_json_printer_string_field@@Base+0xeb>
  42aee7:	xor    esi,esi
  42aee9:	mov    rdi,r12
  42aeec:	call   QWORD PTR [r12+0x48]
  42aef1:	mov    rbx,QWORD PTR [r12+0x20]
  42aef6:	mov    rdi,QWORD PTR [r12+0x28]
  42aefb:	sub    rbx,rdi
  42aefe:	cmp    rbx,r13
  42af01:	jae    42af41 <flatcc_json_printer_string_field@@Base+0x131>
  42af03:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42af0d:	nop    DWORD PTR [rax]
  42af10:	mov    esi,0x20
  42af15:	mov    rdx,rbx
  42af18:	call   406080 <memset@plt>
  42af1d:	add    QWORD PTR [r12+0x28],rbx
  42af22:	sub    r13,rbx
  42af25:	xor    esi,esi
  42af27:	mov    rdi,r12
  42af2a:	call   QWORD PTR [r12+0x48]
  42af2f:	mov    rbx,QWORD PTR [r12+0x20]
  42af34:	mov    rdi,QWORD PTR [r12+0x28]
  42af39:	sub    rbx,rdi
  42af3c:	cmp    r13,rbx
  42af3f:	ja     42af10 <flatcc_json_printer_string_field@@Base+0x100>
  42af41:	mov    esi,0x20
  42af46:	mov    rdx,r13
  42af49:	call   406080 <memset@plt>
  42af4e:	lea    rbp,[r12+0x20]
  42af53:	add    r13,QWORD PTR [r12+0x28]
  42af58:	mov    QWORD PTR [r12+0x28],r13
  42af5d:	jmp    42af7a <flatcc_json_printer_string_field@@Base+0x16a>
  42af5f:	lea    rbp,[r12+0x20]
  42af64:	cmp    r13,QWORD PTR [r12+0x20]
  42af69:	jb     42af7a <flatcc_json_printer_string_field@@Base+0x16a>
  42af6b:	xor    esi,esi
  42af6d:	mov    rdi,r12
  42af70:	call   QWORD PTR [r12+0x48]
  42af75:	mov    r13,QWORD PTR [r12+0x28]
  42af7a:	mov    BYTE PTR [r13+0x0],0x22
  42af7f:	mov    rbx,QWORD PTR [r12+0x20]
  42af84:	mov    rdi,QWORD PTR [r12+0x28]
  42af89:	xor    eax,eax
  42af8b:	cmp    BYTE PTR [r12+0x32],0x1
  42af91:	adcx   rdi,rax
  42af97:	mov    QWORD PTR [r12+0x28],rdi
  42af9c:	lea    rax,[rdi+r14*1]
  42afa0:	cmp    rax,rbx
  42afa3:	jb     42b001 <flatcc_json_printer_string_field@@Base+0x1f1>
  42afa5:	cmp    rdi,rbx
  42afa8:	jb     42afbd <flatcc_json_printer_string_field@@Base+0x1ad>
  42afaa:	xor    esi,esi
  42afac:	mov    rdi,r12
  42afaf:	call   QWORD PTR [r12+0x48]
  42afb4:	mov    rbx,QWORD PTR [rbp+0x0]
  42afb8:	mov    rdi,QWORD PTR [r12+0x28]
  42afbd:	sub    rbx,rdi
  42afc0:	cmp    rbx,r14
  42afc3:	jae    42b001 <flatcc_json_printer_string_field@@Base+0x1f1>
  42afc5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42afcf:	nop
  42afd0:	mov    rsi,r15
  42afd3:	mov    rdx,rbx
  42afd6:	call   4060e0 <memcpy@plt>
  42afdb:	add    QWORD PTR [r12+0x28],rbx
  42afe0:	add    r15,rbx
  42afe3:	sub    r14,rbx
  42afe6:	xor    esi,esi
  42afe8:	mov    rdi,r12
  42afeb:	call   QWORD PTR [r12+0x48]
  42aff0:	mov    rbx,QWORD PTR [rbp+0x0]
  42aff4:	mov    rdi,QWORD PTR [r12+0x28]
  42aff9:	sub    rbx,rdi
  42affc:	cmp    r14,rbx
  42afff:	ja     42afd0 <flatcc_json_printer_string_field@@Base+0x1c0>
  42b001:	mov    rsi,r15
  42b004:	mov    rdx,r14
  42b007:	call   4060e0 <memcpy@plt>
  42b00c:	mov    rax,QWORD PTR [r12+0x28]
  42b011:	lea    rcx,[rax+r14*1]
  42b015:	mov    QWORD PTR [r12+0x28],rcx
  42b01a:	mov    BYTE PTR [rax+r14*1],0x22
  42b01f:	mov    rax,QWORD PTR [r12+0x28]
  42b024:	xor    ecx,ecx
  42b026:	cmp    BYTE PTR [r12+0x32],0x1
  42b02c:	adcx   rax,rcx
  42b032:	lea    rcx,[rax+0x1]
  42b036:	mov    QWORD PTR [r12+0x28],rcx
  42b03b:	mov    BYTE PTR [rax],0x3a
  42b03e:	mov    rax,QWORD PTR [r12+0x28]
  42b043:	mov    BYTE PTR [rax],0x20
  42b046:	cmp    BYTE PTR [r12+0x31],0x1
  42b04c:	sbb    QWORD PTR [r12+0x28],0xffffffffffffffff
  42b052:	add    rsp,0x8
  42b056:	pop    rbx
  42b057:	pop    r12
  42b059:	pop    r13
  42b05b:	pop    r14
  42b05d:	pop    r15
  42b05f:	pop    rbp
  42b060:	ret    
  42b061:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b06b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042b070 <flatcc_json_printer_uint8_vector_base64_field@@Base>:
  42b070:	push   rbp
  42b071:	push   r15
  42b073:	push   r14
  42b075:	push   r13
  42b077:	push   r12
  42b079:	push   rbx
  42b07a:	sub    rsp,0x18
  42b07e:	lea    eax,[rdx+rdx*1]
  42b081:	add    eax,0x4
  42b084:	cmp    eax,DWORD PTR [rsi+0x10]
  42b087:	jge    42b20f <flatcc_json_printer_uint8_vector_base64_field@@Base+0x19f>
  42b08d:	mov    rdx,QWORD PTR [rsi+0x8]
  42b091:	mov    eax,eax
  42b093:	movzx  ebp,WORD PTR [rdx+rax*1]
  42b097:	test   rbp,rbp
  42b09a:	je     42b20f <flatcc_json_printer_uint8_vector_base64_field@@Base+0x19f>
  42b0a0:	xor    r14d,r14d
  42b0a3:	test   r9d,r9d
  42b0a6:	setne  al
  42b0a9:	add    rbp,QWORD PTR [rsi]
  42b0ac:	je     42b20f <flatcc_json_printer_uint8_vector_base64_field@@Base+0x19f>
  42b0b2:	mov    r13,rdi
  42b0b5:	mov    BYTE PTR [rsp+0x7],al
  42b0b9:	mov    eax,DWORD PTR [rsi+0x18]
  42b0bc:	lea    edx,[rax+0x1]
  42b0bf:	mov    DWORD PTR [rsi+0x18],edx
  42b0c2:	test   eax,eax
  42b0c4:	je     42b0d5 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x65>
  42b0c6:	mov    rax,QWORD PTR [r13+0x28]
  42b0ca:	lea    rdx,[rax+0x1]
  42b0ce:	mov    QWORD PTR [r13+0x28],rdx
  42b0d2:	mov    BYTE PTR [rax],0x2c
  42b0d5:	movsxd rdx,r8d
  42b0d8:	mov    rdi,r13
  42b0db:	mov    rsi,rcx
  42b0de:	call   42ae90 <flatcc_json_printer_string_field@@Base+0x80>
  42b0e3:	mov    r15d,DWORD PTR [rbp+0x0]
  42b0e7:	mov    eax,DWORD PTR [rbp+r15*1+0x0]
  42b0ec:	mov    QWORD PTR [rsp+0x8],rax
  42b0f1:	mov    rax,QWORD PTR [r13+0x28]
  42b0f5:	lea    rcx,[rax+0x1]
  42b0f9:	mov    QWORD PTR [r13+0x28],rcx
  42b0fd:	mov    BYTE PTR [rax],0x22
  42b100:	mov    rdx,QWORD PTR [rsp+0x8]
  42b105:	shl    rdx,0x2
  42b109:	movabs rax,0xaaaaaaaaaaaaaaab
  42b113:	mulx   rbx,rax,rax
  42b118:	shr    rbx,1
  42b11b:	add    rbx,0x3
  42b11f:	and    rbx,0xfffffffffffffffc
  42b123:	mov    r12,QWORD PTR [r13+0x20]
  42b127:	mov    rdi,QWORD PTR [r13+0x28]
  42b12b:	lea    rax,[rdi+rbx*1]
  42b12f:	cmp    rax,r12
  42b132:	jb     42b149 <flatcc_json_printer_uint8_vector_base64_field@@Base+0xd9>
  42b134:	xor    esi,esi
  42b136:	mov    rdi,r13
  42b139:	call   QWORD PTR [r13+0x48]
  42b13d:	mov    r12,QWORD PTR [r13+0x20]
  42b141:	mov    rdi,QWORD PTR [r13+0x28]
  42b145:	lea    rax,[rdi+rbx*1]
  42b149:	mov    cl,BYTE PTR [rsp+0x7]
  42b14d:	mov    r14b,cl
  42b150:	add    rbp,r15
  42b153:	add    rbp,0x4
  42b157:	cmp    rax,r12
  42b15a:	jbe    42b1e4 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x174>
  42b160:	lea    r15,[rsp+0x10]
  42b165:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b16f:	nop
  42b170:	sub    r12,rdi
  42b173:	and    r12,0xfffffffffffffffc
  42b177:	lea    rbx,[r12+r12*2]
  42b17b:	test   rbx,rbx
  42b17e:	je     42b21e <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1ae>
  42b184:	shr    rbx,0x2
  42b188:	mov    QWORD PTR [rsp+0x10],rbx
  42b18d:	mov    rsi,rbp
  42b190:	mov    rdx,r15
  42b193:	mov    ecx,r14d
  42b196:	call   4349f0 <flatcc_json_printer_clear@@Base+0x30>
  42b19b:	add    QWORD PTR [r13+0x28],r12
  42b19f:	add    rbp,rbx
  42b1a2:	sub    QWORD PTR [rsp+0x8],rbx
  42b1a7:	xor    esi,esi
  42b1a9:	mov    rdi,r13
  42b1ac:	call   QWORD PTR [r13+0x48]
  42b1b0:	mov    rdx,QWORD PTR [rsp+0x8]
  42b1b5:	shl    rdx,0x2
  42b1b9:	movabs rax,0xaaaaaaaaaaaaaaab
  42b1c3:	mulx   rbx,rax,rax
  42b1c8:	shr    rbx,1
  42b1cb:	add    rbx,0x3
  42b1cf:	and    rbx,0xfffffffffffffffc
  42b1d3:	mov    r12,QWORD PTR [r13+0x20]
  42b1d7:	mov    rdi,QWORD PTR [r13+0x28]
  42b1db:	lea    rax,[rdi+rbx*1]
  42b1df:	cmp    rax,r12
  42b1e2:	ja     42b170 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x100>
  42b1e4:	or     r14d,0x80
  42b1eb:	lea    rdx,[rsp+0x8]
  42b1f0:	mov    rsi,rbp
  42b1f3:	mov    ecx,r14d
  42b1f6:	call   4349f0 <flatcc_json_printer_clear@@Base+0x30>
  42b1fb:	mov    rax,QWORD PTR [r13+0x28]
  42b1ff:	lea    rcx,[rax+rbx*1]
  42b203:	add    rcx,0x1
  42b207:	mov    QWORD PTR [r13+0x28],rcx
  42b20b:	mov    BYTE PTR [rax+rbx*1],0x22
  42b20f:	add    rsp,0x18
  42b213:	pop    rbx
  42b214:	pop    r12
  42b216:	pop    r13
  42b218:	pop    r14
  42b21a:	pop    r15
  42b21c:	pop    rbp
  42b21d:	ret    
  42b21e:	lea    rdi,[rip+0x11b21]        # 43cd46 <flatcc_builder_padding_base@@Base+0x3516>
  42b225:	lea    rsi,[rip+0x11811]        # 43ca3d <flatcc_builder_padding_base@@Base+0x320d>
  42b22c:	lea    rcx,[rip+0x11b19]        # 43cd4c <flatcc_builder_padding_base@@Base+0x351c>
  42b233:	mov    edx,0x115
  42b238:	call   406070 <__assert_fail@plt>
  42b23d:	nop    DWORD PTR [rax]

000000000042b240 <flatcc_json_printer_uint8_field@@Base>:
  42b240:	push   r14
  42b242:	push   rbx
  42b243:	push   rax
  42b244:	mov    r14,rdi
  42b247:	lea    eax,[rdx+rdx*1]
  42b24a:	add    eax,0x4
  42b24d:	cmp    eax,DWORD PTR [rsi+0x10]
  42b250:	jge    42b27d <flatcc_json_printer_uint8_field@@Base+0x3d>
  42b252:	mov    rdx,QWORD PTR [rsi+0x8]
  42b256:	mov    eax,eax
  42b258:	movzx  eax,WORD PTR [rdx+rax*1]
  42b25c:	test   rax,rax
  42b25f:	je     42b27d <flatcc_json_printer_uint8_field@@Base+0x3d>
  42b261:	add    rax,QWORD PTR [rsi]
  42b264:	je     42b27d <flatcc_json_printer_uint8_field@@Base+0x3d>
  42b266:	mov    bl,BYTE PTR [rax]
  42b268:	cmp    bl,r9b
  42b26b:	jne    42b28b <flatcc_json_printer_uint8_field@@Base+0x4b>
  42b26d:	cmp    BYTE PTR [r14+0x34],0x0
  42b272:	mov    ebx,r9d
  42b275:	jne    42b33b <flatcc_json_printer_uint8_field@@Base+0xfb>
  42b27b:	jmp    42b28b <flatcc_json_printer_uint8_field@@Base+0x4b>
  42b27d:	cmp    BYTE PTR [r14+0x35],0x0
  42b282:	mov    ebx,r9d
  42b285:	je     42b33b <flatcc_json_printer_uint8_field@@Base+0xfb>
  42b28b:	mov    eax,DWORD PTR [rsi+0x18]
  42b28e:	lea    edx,[rax+0x1]
  42b291:	mov    DWORD PTR [rsi+0x18],edx
  42b294:	test   eax,eax
  42b296:	je     42b2a7 <flatcc_json_printer_uint8_field@@Base+0x67>
  42b298:	mov    rax,QWORD PTR [r14+0x28]
  42b29c:	lea    rdx,[rax+0x1]
  42b2a0:	mov    QWORD PTR [r14+0x28],rdx
  42b2a4:	mov    BYTE PTR [rax],0x2c
  42b2a7:	movsxd rdx,r8d
  42b2aa:	mov    rdi,r14
  42b2ad:	mov    rsi,rcx
  42b2b0:	call   42ae90 <flatcc_json_printer_string_field@@Base+0x80>
  42b2b5:	mov    rdx,QWORD PTR [r14+0x28]
  42b2b9:	cmp    bl,0x64
  42b2bc:	jb     42b2f6 <flatcc_json_printer_uint8_field@@Base+0xb6>
  42b2be:	mov    BYTE PTR [rdx+0x3],0x0
  42b2c2:	movzx  eax,bl
  42b2c5:	lea    ecx,[rax+rax*4]
  42b2c8:	lea    ecx,[rax+rcx*8]
  42b2cb:	shr    ecx,0xc
  42b2ce:	mov    sil,0x64
  42b2d1:	mov    eax,ecx
  42b2d3:	mul    sil
  42b2d6:	sub    bl,al
  42b2d8:	movzx  eax,bl
  42b2db:	lea    rsi,[rip+0x11bce]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42b2e2:	movzx  eax,WORD PTR [rsi+rax*2]
  42b2e6:	mov    WORD PTR [rdx+0x1],ax
  42b2ea:	or     cl,0x30
  42b2ed:	mov    BYTE PTR [rdx],cl
  42b2ef:	mov    eax,0x3
  42b2f4:	jmp    42b337 <flatcc_json_printer_uint8_field@@Base+0xf7>
  42b2f6:	cmp    bl,0xa
  42b2f9:	jb     42b329 <flatcc_json_printer_uint8_field@@Base+0xe9>
  42b2fb:	mov    BYTE PTR [rdx+0x2],0x0
  42b2ff:	movzx  eax,bl
  42b302:	lea    ecx,[rax+rax*4]
  42b305:	lea    eax,[rax+rcx*8]
  42b308:	shr    eax,0xc
  42b30b:	mov    cl,0x64
  42b30d:	mul    cl
  42b30f:	sub    bl,al
  42b311:	movzx  eax,bl
  42b314:	lea    rcx,[rip+0x11b95]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42b31b:	movzx  eax,WORD PTR [rcx+rax*2]
  42b31f:	mov    WORD PTR [rdx],ax
  42b322:	mov    eax,0x2
  42b327:	jmp    42b337 <flatcc_json_printer_uint8_field@@Base+0xf7>
  42b329:	mov    BYTE PTR [rdx+0x1],0x0
  42b32d:	add    bl,0x30
  42b330:	mov    BYTE PTR [rdx],bl
  42b332:	mov    eax,0x1
  42b337:	add    QWORD PTR [r14+0x28],rax
  42b33b:	add    rsp,0x8
  42b33f:	pop    rbx
  42b340:	pop    r14
  42b342:	ret    
  42b343:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b34d:	nop    DWORD PTR [rax]

000000000042b350 <flatcc_json_printer_uint16_field@@Base>:
  42b350:	push   rbp
  42b351:	push   rbx
  42b352:	push   rax
  42b353:	mov    rbx,rdi
  42b356:	lea    eax,[rdx+rdx*1]
  42b359:	add    eax,0x4
  42b35c:	cmp    eax,DWORD PTR [rsi+0x10]
  42b35f:	jge    42b38d <flatcc_json_printer_uint16_field@@Base+0x3d>
  42b361:	mov    rdx,QWORD PTR [rsi+0x8]
  42b365:	mov    eax,eax
  42b367:	movzx  eax,WORD PTR [rdx+rax*1]
  42b36b:	test   rax,rax
  42b36e:	je     42b38d <flatcc_json_printer_uint16_field@@Base+0x3d>
  42b370:	add    rax,QWORD PTR [rsi]
  42b373:	je     42b38d <flatcc_json_printer_uint16_field@@Base+0x3d>
  42b375:	movzx  ebp,WORD PTR [rax]
  42b378:	cmp    bp,r9w
  42b37c:	jne    42b39a <flatcc_json_printer_uint16_field@@Base+0x4a>
  42b37e:	cmp    BYTE PTR [rbx+0x34],0x0
  42b382:	mov    ebp,r9d
  42b385:	jne    42b4e4 <flatcc_json_printer_uint16_field@@Base+0x194>
  42b38b:	jmp    42b39a <flatcc_json_printer_uint16_field@@Base+0x4a>
  42b38d:	cmp    BYTE PTR [rbx+0x35],0x0
  42b391:	mov    ebp,r9d
  42b394:	je     42b4e4 <flatcc_json_printer_uint16_field@@Base+0x194>
  42b39a:	mov    eax,DWORD PTR [rsi+0x18]
  42b39d:	lea    edx,[rax+0x1]
  42b3a0:	mov    DWORD PTR [rsi+0x18],edx
  42b3a3:	test   eax,eax
  42b3a5:	je     42b3b6 <flatcc_json_printer_uint16_field@@Base+0x66>
  42b3a7:	mov    rax,QWORD PTR [rbx+0x28]
  42b3ab:	lea    rdx,[rax+0x1]
  42b3af:	mov    QWORD PTR [rbx+0x28],rdx
  42b3b3:	mov    BYTE PTR [rax],0x2c
  42b3b6:	movsxd rdx,r8d
  42b3b9:	mov    rdi,rbx
  42b3bc:	mov    rsi,rcx
  42b3bf:	call   42ae90 <flatcc_json_printer_string_field@@Base+0x80>
  42b3c4:	mov    rsi,QWORD PTR [rbx+0x28]
  42b3c8:	movzx  edx,bp
  42b3cb:	cmp    edx,0x3e8
  42b3d1:	jb     42b3e3 <flatcc_json_printer_uint16_field@@Base+0x93>
  42b3d3:	xor    eax,eax
  42b3d5:	cmp    edx,0x270f
  42b3db:	seta   al
  42b3de:	or     eax,0x4
  42b3e1:	jmp    42b408 <flatcc_json_printer_uint16_field@@Base+0xb8>
  42b3e3:	cmp    edx,0x64
  42b3e6:	jb     42b3fd <flatcc_json_printer_uint16_field@@Base+0xad>
  42b3e8:	mov    BYTE PTR [rsi+0x3],0x0
  42b3ec:	add    rsi,0x3
  42b3f0:	mov    eax,0x3
  42b3f5:	mov    rcx,rsi
  42b3f8:	jmp    42b4aa <flatcc_json_printer_uint16_field@@Base+0x15a>
  42b3fd:	xor    eax,eax
  42b3ff:	cmp    edx,0x9
  42b402:	seta   al
  42b405:	add    eax,0x1
  42b408:	mov    edi,eax
  42b40a:	lea    rcx,[rsi+rdi*1]
  42b40e:	mov    BYTE PTR [rsi+rdi*1],0x0
  42b412:	test   al,0x1
  42b414:	jne    42b475 <flatcc_json_printer_uint16_field@@Base+0x125>
  42b416:	cmp    al,0x2
  42b418:	je     42b44b <flatcc_json_printer_uint16_field@@Base+0xfb>
  42b41a:	cmp    al,0x4
  42b41c:	jne    42b4de <flatcc_json_printer_uint16_field@@Base+0x18e>
  42b422:	mov    esi,edx
  42b424:	shr    esi,0x2
  42b427:	imul   ebp,esi,0x147b
  42b42d:	shr    ebp,0x11
  42b430:	imul   esi,ebp,0x64
  42b433:	sub    edx,esi
  42b435:	movzx  edx,dx
  42b438:	lea    rsi,[rip+0x11a71]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42b43f:	movzx  edx,WORD PTR [rsi+rdx*2]
  42b443:	mov    WORD PTR [rcx-0x2],dx
  42b447:	lea    rcx,[rcx-0x2]
  42b44b:	movzx  edx,bp
  42b44e:	mov    esi,edx
  42b450:	shr    esi,0x2
  42b453:	imul   esi,esi,0x147b
  42b459:	shr    esi,0x11
  42b45c:	imul   esi,esi,0x64
  42b45f:	sub    edx,esi
  42b461:	movzx  edx,dx
  42b464:	lea    rsi,[rip+0x11a45]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42b46b:	movzx  edx,WORD PTR [rsi+rdx*2]
  42b46f:	mov    WORD PTR [rcx-0x2],dx
  42b473:	jmp    42b4de <flatcc_json_printer_uint16_field@@Base+0x18e>
  42b475:	cmp    al,0x1
  42b477:	je     42b4d6 <flatcc_json_printer_uint16_field@@Base+0x186>
  42b479:	cmp    al,0x3
  42b47b:	je     42b4aa <flatcc_json_printer_uint16_field@@Base+0x15a>
  42b47d:	cmp    al,0x5
  42b47f:	jne    42b4de <flatcc_json_printer_uint16_field@@Base+0x18e>
  42b481:	mov    esi,edx
  42b483:	shr    esi,0x2
  42b486:	imul   ebp,esi,0x147b
  42b48c:	shr    ebp,0x11
  42b48f:	imul   esi,ebp,0x64
  42b492:	sub    edx,esi
  42b494:	movzx  edx,dx
  42b497:	lea    rsi,[rip+0x11a12]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42b49e:	movzx  edx,WORD PTR [rsi+rdx*2]
  42b4a2:	mov    WORD PTR [rcx-0x2],dx
  42b4a6:	lea    rcx,[rcx-0x2]
  42b4aa:	movzx  edx,bp
  42b4ad:	mov    esi,edx
  42b4af:	shr    esi,0x2
  42b4b2:	imul   ebp,esi,0x147b
  42b4b8:	shr    ebp,0x11
  42b4bb:	imul   esi,ebp,0x64
  42b4be:	sub    edx,esi
  42b4c0:	movzx  edx,dx
  42b4c3:	lea    rsi,[rip+0x119e6]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42b4ca:	movzx  edx,WORD PTR [rsi+rdx*2]
  42b4ce:	mov    WORD PTR [rcx-0x2],dx
  42b4d2:	lea    rcx,[rcx-0x2]
  42b4d6:	add    bpl,0x30
  42b4da:	mov    BYTE PTR [rcx-0x1],bpl
  42b4de:	mov    eax,eax
  42b4e0:	add    QWORD PTR [rbx+0x28],rax
  42b4e4:	add    rsp,0x8
  42b4e8:	pop    rbx
  42b4e9:	pop    rbp
  42b4ea:	ret    
  42b4eb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042b4f0 <flatcc_json_printer_uint32_field@@Base>:
  42b4f0:	push   rbp
  42b4f1:	push   rbx
  42b4f2:	push   rax
  42b4f3:	mov    rbx,rdi
  42b4f6:	lea    eax,[rdx+rdx*1]
  42b4f9:	add    eax,0x4
  42b4fc:	cmp    eax,DWORD PTR [rsi+0x10]
  42b4ff:	jge    42b527 <flatcc_json_printer_uint32_field@@Base+0x37>
  42b501:	mov    rdx,QWORD PTR [rsi+0x8]
  42b505:	mov    eax,eax
  42b507:	movzx  eax,WORD PTR [rdx+rax*1]
  42b50b:	test   rax,rax
  42b50e:	je     42b527 <flatcc_json_printer_uint32_field@@Base+0x37>
  42b510:	add    rax,QWORD PTR [rsi]
  42b513:	je     42b527 <flatcc_json_printer_uint32_field@@Base+0x37>
  42b515:	mov    ebp,DWORD PTR [rax]
  42b517:	cmp    ebp,r9d
  42b51a:	jne    42b530 <flatcc_json_printer_uint32_field@@Base+0x40>
  42b51c:	cmp    BYTE PTR [rbx+0x34],0x0
  42b520:	mov    ebp,r9d
  42b523:	jne    42b56b <flatcc_json_printer_uint32_field@@Base+0x7b>
  42b525:	jmp    42b530 <flatcc_json_printer_uint32_field@@Base+0x40>
  42b527:	cmp    BYTE PTR [rbx+0x35],0x0
  42b52b:	mov    ebp,r9d
  42b52e:	je     42b56b <flatcc_json_printer_uint32_field@@Base+0x7b>
  42b530:	mov    eax,DWORD PTR [rsi+0x18]
  42b533:	lea    edx,[rax+0x1]
  42b536:	mov    DWORD PTR [rsi+0x18],edx
  42b539:	test   eax,eax
  42b53b:	je     42b54c <flatcc_json_printer_uint32_field@@Base+0x5c>
  42b53d:	mov    rax,QWORD PTR [rbx+0x28]
  42b541:	lea    rdx,[rax+0x1]
  42b545:	mov    QWORD PTR [rbx+0x28],rdx
  42b549:	mov    BYTE PTR [rax],0x2c
  42b54c:	movsxd rdx,r8d
  42b54f:	mov    rdi,rbx
  42b552:	mov    rsi,rcx
  42b555:	call   42ae90 <flatcc_json_printer_string_field@@Base+0x80>
  42b55a:	mov    rsi,QWORD PTR [rbx+0x28]
  42b55e:	mov    edi,ebp
  42b560:	call   42a270 <flatcc_json_printer_uint32@@Base+0x20>
  42b565:	cdqe   
  42b567:	add    QWORD PTR [rbx+0x28],rax
  42b56b:	add    rsp,0x8
  42b56f:	pop    rbx
  42b570:	pop    rbp
  42b571:	ret    
  42b572:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b57c:	nop    DWORD PTR [rax+0x0]

000000000042b580 <flatcc_json_printer_uint64_field@@Base>:
  42b580:	push   r14
  42b582:	push   rbx
  42b583:	push   rax
  42b584:	mov    rbx,rdi
  42b587:	lea    eax,[rdx+rdx*1]
  42b58a:	add    eax,0x4
  42b58d:	cmp    eax,DWORD PTR [rsi+0x10]
  42b590:	jge    42b5b9 <flatcc_json_printer_uint64_field@@Base+0x39>
  42b592:	mov    rdx,QWORD PTR [rsi+0x8]
  42b596:	mov    eax,eax
  42b598:	movzx  eax,WORD PTR [rdx+rax*1]
  42b59c:	test   rax,rax
  42b59f:	je     42b5b9 <flatcc_json_printer_uint64_field@@Base+0x39>
  42b5a1:	add    rax,QWORD PTR [rsi]
  42b5a4:	je     42b5b9 <flatcc_json_printer_uint64_field@@Base+0x39>
  42b5a6:	mov    r14,QWORD PTR [rax]
  42b5a9:	cmp    r14,r9
  42b5ac:	jne    42b5c2 <flatcc_json_printer_uint64_field@@Base+0x42>
  42b5ae:	cmp    BYTE PTR [rbx+0x34],0x0
  42b5b2:	mov    r14,r9
  42b5b5:	jne    42b5fe <flatcc_json_printer_uint64_field@@Base+0x7e>
  42b5b7:	jmp    42b5c2 <flatcc_json_printer_uint64_field@@Base+0x42>
  42b5b9:	cmp    BYTE PTR [rbx+0x35],0x0
  42b5bd:	mov    r14,r9
  42b5c0:	je     42b5fe <flatcc_json_printer_uint64_field@@Base+0x7e>
  42b5c2:	mov    eax,DWORD PTR [rsi+0x18]
  42b5c5:	lea    edx,[rax+0x1]
  42b5c8:	mov    DWORD PTR [rsi+0x18],edx
  42b5cb:	test   eax,eax
  42b5cd:	je     42b5de <flatcc_json_printer_uint64_field@@Base+0x5e>
  42b5cf:	mov    rax,QWORD PTR [rbx+0x28]
  42b5d3:	lea    rdx,[rax+0x1]
  42b5d7:	mov    QWORD PTR [rbx+0x28],rdx
  42b5db:	mov    BYTE PTR [rax],0x2c
  42b5de:	movsxd rdx,r8d
  42b5e1:	mov    rdi,rbx
  42b5e4:	mov    rsi,rcx
  42b5e7:	call   42ae90 <flatcc_json_printer_string_field@@Base+0x80>
  42b5ec:	mov    rsi,QWORD PTR [rbx+0x28]
  42b5f0:	mov    rdi,r14
  42b5f3:	call   42a500 <flatcc_json_printer_uint64@@Base+0x20>
  42b5f8:	cdqe   
  42b5fa:	add    QWORD PTR [rbx+0x28],rax
  42b5fe:	add    rsp,0x8
  42b602:	pop    rbx
  42b603:	pop    r14
  42b605:	ret    
  42b606:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000042b610 <flatcc_json_printer_int8_field@@Base>:
  42b610:	push   r14
  42b612:	push   rbx
  42b613:	push   rax
  42b614:	mov    r14,rdi
  42b617:	lea    eax,[rdx+rdx*1]
  42b61a:	add    eax,0x4
  42b61d:	cmp    eax,DWORD PTR [rsi+0x10]
  42b620:	jge    42b64d <flatcc_json_printer_int8_field@@Base+0x3d>
  42b622:	mov    rdx,QWORD PTR [rsi+0x8]
  42b626:	mov    eax,eax
  42b628:	movzx  eax,WORD PTR [rdx+rax*1]
  42b62c:	test   rax,rax
  42b62f:	je     42b64d <flatcc_json_printer_int8_field@@Base+0x3d>
  42b631:	add    rax,QWORD PTR [rsi]
  42b634:	je     42b64d <flatcc_json_printer_int8_field@@Base+0x3d>
  42b636:	mov    bl,BYTE PTR [rax]
  42b638:	cmp    bl,r9b
  42b63b:	jne    42b65b <flatcc_json_printer_int8_field@@Base+0x4b>
  42b63d:	cmp    BYTE PTR [r14+0x34],0x0
  42b642:	mov    ebx,r9d
  42b645:	jne    42b726 <flatcc_json_printer_int8_field@@Base+0x116>
  42b64b:	jmp    42b65b <flatcc_json_printer_int8_field@@Base+0x4b>
  42b64d:	cmp    BYTE PTR [r14+0x35],0x0
  42b652:	mov    ebx,r9d
  42b655:	je     42b726 <flatcc_json_printer_int8_field@@Base+0x116>
  42b65b:	mov    eax,DWORD PTR [rsi+0x18]
  42b65e:	lea    edx,[rax+0x1]
  42b661:	mov    DWORD PTR [rsi+0x18],edx
  42b664:	test   eax,eax
  42b666:	je     42b677 <flatcc_json_printer_int8_field@@Base+0x67>
  42b668:	mov    rax,QWORD PTR [r14+0x28]
  42b66c:	lea    rdx,[rax+0x1]
  42b670:	mov    QWORD PTR [r14+0x28],rdx
  42b674:	mov    BYTE PTR [rax],0x2c
  42b677:	movsxd rdx,r8d
  42b67a:	mov    rdi,r14
  42b67d:	mov    rsi,rcx
  42b680:	call   42ae90 <flatcc_json_printer_string_field@@Base+0x80>
  42b685:	mov    rsi,QWORD PTR [r14+0x28]
  42b689:	mov    eax,ebx
  42b68b:	shr    al,0x7
  42b68e:	movzx  edi,al
  42b691:	test   bl,bl
  42b693:	js     42b6d0 <flatcc_json_printer_int8_field@@Base+0xc0>
  42b695:	cmp    bl,0x64
  42b698:	jb     42b6de <flatcc_json_printer_int8_field@@Base+0xce>
  42b69a:	mov    BYTE PTR [rsi+0x3],0x0
  42b69e:	movzx  eax,bl
  42b6a1:	lea    ecx,[rax+rax*4]
  42b6a4:	lea    ecx,[rax+rcx*8]
  42b6a7:	shr    ecx,0xc
  42b6aa:	mov    dl,0x64
  42b6ac:	mov    eax,ecx
  42b6ae:	mul    dl
  42b6b0:	sub    bl,al
  42b6b2:	movzx  eax,bl
  42b6b5:	lea    rdx,[rip+0x117f4]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42b6bc:	movzx  eax,WORD PTR [rdx+rax*2]
  42b6c0:	mov    WORD PTR [rsi+0x1],ax
  42b6c4:	or     cl,0x30
  42b6c7:	mov    BYTE PTR [rsi],cl
  42b6c9:	mov    eax,0x3
  42b6ce:	jmp    42b71f <flatcc_json_printer_int8_field@@Base+0x10f>
  42b6d0:	mov    BYTE PTR [rsi],0x2d
  42b6d3:	add    rsi,0x1
  42b6d7:	neg    bl
  42b6d9:	cmp    bl,0x64
  42b6dc:	jae    42b69a <flatcc_json_printer_int8_field@@Base+0x8a>
  42b6de:	cmp    bl,0xa
  42b6e1:	jb     42b711 <flatcc_json_printer_int8_field@@Base+0x101>
  42b6e3:	mov    BYTE PTR [rsi+0x2],0x0
  42b6e7:	movzx  eax,bl
  42b6ea:	lea    ecx,[rax+rax*4]
  42b6ed:	lea    eax,[rax+rcx*8]
  42b6f0:	shr    eax,0xc
  42b6f3:	mov    cl,0x64
  42b6f5:	mul    cl
  42b6f7:	sub    bl,al
  42b6f9:	movzx  eax,bl
  42b6fc:	lea    rcx,[rip+0x117ad]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42b703:	movzx  eax,WORD PTR [rcx+rax*2]
  42b707:	mov    WORD PTR [rsi],ax
  42b70a:	mov    eax,0x2
  42b70f:	jmp    42b71f <flatcc_json_printer_int8_field@@Base+0x10f>
  42b711:	mov    BYTE PTR [rsi+0x1],0x0
  42b715:	add    bl,0x30
  42b718:	mov    BYTE PTR [rsi],bl
  42b71a:	mov    eax,0x1
  42b71f:	add    rax,rdi
  42b722:	add    QWORD PTR [r14+0x28],rax
  42b726:	add    rsp,0x8
  42b72a:	pop    rbx
  42b72b:	pop    r14
  42b72d:	ret    
  42b72e:	xchg   ax,ax

000000000042b730 <flatcc_json_printer_int16_field@@Base>:
  42b730:	push   rbp
  42b731:	push   rbx
  42b732:	push   rax
  42b733:	mov    rbx,rdi
  42b736:	lea    eax,[rdx+rdx*1]
  42b739:	add    eax,0x4
  42b73c:	cmp    eax,DWORD PTR [rsi+0x10]
  42b73f:	jge    42b76d <flatcc_json_printer_int16_field@@Base+0x3d>
  42b741:	mov    rdx,QWORD PTR [rsi+0x8]
  42b745:	mov    eax,eax
  42b747:	movzx  eax,WORD PTR [rdx+rax*1]
  42b74b:	test   rax,rax
  42b74e:	je     42b76d <flatcc_json_printer_int16_field@@Base+0x3d>
  42b750:	add    rax,QWORD PTR [rsi]
  42b753:	je     42b76d <flatcc_json_printer_int16_field@@Base+0x3d>
  42b755:	movzx  ebp,WORD PTR [rax]
  42b758:	cmp    bp,r9w
  42b75c:	jne    42b77a <flatcc_json_printer_int16_field@@Base+0x4a>
  42b75e:	cmp    BYTE PTR [rbx+0x34],0x0
  42b762:	mov    ebp,r9d
  42b765:	jne    42b8e2 <flatcc_json_printer_int16_field@@Base+0x1b2>
  42b76b:	jmp    42b77a <flatcc_json_printer_int16_field@@Base+0x4a>
  42b76d:	cmp    BYTE PTR [rbx+0x35],0x0
  42b771:	mov    ebp,r9d
  42b774:	je     42b8e2 <flatcc_json_printer_int16_field@@Base+0x1b2>
  42b77a:	mov    eax,DWORD PTR [rsi+0x18]
  42b77d:	lea    edx,[rax+0x1]
  42b780:	mov    DWORD PTR [rsi+0x18],edx
  42b783:	test   eax,eax
  42b785:	je     42b796 <flatcc_json_printer_int16_field@@Base+0x66>
  42b787:	mov    rax,QWORD PTR [rbx+0x28]
  42b78b:	lea    rdx,[rax+0x1]
  42b78f:	mov    QWORD PTR [rbx+0x28],rdx
  42b793:	mov    BYTE PTR [rax],0x2c
  42b796:	movsxd rdx,r8d
  42b799:	mov    rdi,rbx
  42b79c:	mov    rsi,rcx
  42b79f:	call   42ae90 <flatcc_json_printer_string_field@@Base+0x80>
  42b7a4:	mov    rdi,QWORD PTR [rbx+0x28]
  42b7a8:	movzx  r8d,bp
  42b7ac:	test   r8w,r8w
  42b7b0:	jns    42b7bb <flatcc_json_printer_int16_field@@Base+0x8b>
  42b7b2:	mov    BYTE PTR [rdi],0x2d
  42b7b5:	add    rdi,0x1
  42b7b9:	neg    ebp
  42b7bb:	shr    r8d,0xf
  42b7bf:	movzx  esi,bp
  42b7c2:	cmp    esi,0x3e8
  42b7c8:	jb     42b7da <flatcc_json_printer_int16_field@@Base+0xaa>
  42b7ca:	xor    ecx,ecx
  42b7cc:	cmp    esi,0x270f
  42b7d2:	seta   cl
  42b7d5:	or     ecx,0x4
  42b7d8:	jmp    42b7ff <flatcc_json_printer_int16_field@@Base+0xcf>
  42b7da:	cmp    esi,0x64
  42b7dd:	jb     42b7f4 <flatcc_json_printer_int16_field@@Base+0xc4>
  42b7df:	mov    BYTE PTR [rdi+0x3],0x0
  42b7e3:	add    rdi,0x3
  42b7e7:	mov    ecx,0x3
  42b7ec:	mov    rdx,rdi
  42b7ef:	jmp    42b8a7 <flatcc_json_printer_int16_field@@Base+0x177>
  42b7f4:	xor    ecx,ecx
  42b7f6:	cmp    esi,0x9
  42b7f9:	seta   cl
  42b7fc:	add    ecx,0x1
  42b7ff:	mov    eax,ecx
  42b801:	lea    rdx,[rdi+rax*1]
  42b805:	mov    BYTE PTR [rdi+rax*1],0x0
  42b809:	test   cl,0x1
  42b80c:	jne    42b86f <flatcc_json_printer_int16_field@@Base+0x13f>
  42b80e:	cmp    cl,0x2
  42b811:	je     42b845 <flatcc_json_printer_int16_field@@Base+0x115>
  42b813:	cmp    cl,0x4
  42b816:	jne    42b8db <flatcc_json_printer_int16_field@@Base+0x1ab>
  42b81c:	mov    eax,esi
  42b81e:	shr    eax,0x2
  42b821:	imul   ebp,eax,0x147b
  42b827:	shr    ebp,0x11
  42b82a:	imul   eax,ebp,0x64
  42b82d:	sub    esi,eax
  42b82f:	movzx  eax,si
  42b832:	lea    rsi,[rip+0x11677]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42b839:	movzx  eax,WORD PTR [rsi+rax*2]
  42b83d:	mov    WORD PTR [rdx-0x2],ax
  42b841:	lea    rdx,[rdx-0x2]
  42b845:	movzx  eax,bp
  42b848:	mov    esi,eax
  42b84a:	shr    esi,0x2
  42b84d:	imul   esi,esi,0x147b
  42b853:	shr    esi,0x11
  42b856:	imul   esi,esi,0x64
  42b859:	sub    eax,esi
  42b85b:	movzx  eax,ax
  42b85e:	lea    rsi,[rip+0x1164b]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42b865:	movzx  eax,WORD PTR [rsi+rax*2]
  42b869:	mov    WORD PTR [rdx-0x2],ax
  42b86d:	jmp    42b8db <flatcc_json_printer_int16_field@@Base+0x1ab>
  42b86f:	cmp    cl,0x1
  42b872:	je     42b8d3 <flatcc_json_printer_int16_field@@Base+0x1a3>
  42b874:	cmp    cl,0x3
  42b877:	je     42b8a7 <flatcc_json_printer_int16_field@@Base+0x177>
  42b879:	cmp    cl,0x5
  42b87c:	jne    42b8db <flatcc_json_printer_int16_field@@Base+0x1ab>
  42b87e:	mov    eax,esi
  42b880:	shr    eax,0x2
  42b883:	imul   ebp,eax,0x147b
  42b889:	shr    ebp,0x11
  42b88c:	imul   eax,ebp,0x64
  42b88f:	sub    esi,eax
  42b891:	movzx  eax,si
  42b894:	lea    rsi,[rip+0x11615]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42b89b:	movzx  eax,WORD PTR [rsi+rax*2]
  42b89f:	mov    WORD PTR [rdx-0x2],ax
  42b8a3:	lea    rdx,[rdx-0x2]
  42b8a7:	movzx  eax,bp
  42b8aa:	mov    esi,eax
  42b8ac:	shr    esi,0x2
  42b8af:	imul   ebp,esi,0x147b
  42b8b5:	shr    ebp,0x11
  42b8b8:	imul   esi,ebp,0x64
  42b8bb:	sub    eax,esi
  42b8bd:	movzx  eax,ax
  42b8c0:	lea    rsi,[rip+0x115e9]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42b8c7:	movzx  eax,WORD PTR [rsi+rax*2]
  42b8cb:	mov    WORD PTR [rdx-0x2],ax
  42b8cf:	lea    rdx,[rdx-0x2]
  42b8d3:	add    bpl,0x30
  42b8d7:	mov    BYTE PTR [rdx-0x1],bpl
  42b8db:	add    ecx,r8d
  42b8de:	add    QWORD PTR [rbx+0x28],rcx
  42b8e2:	add    rsp,0x8
  42b8e6:	pop    rbx
  42b8e7:	pop    rbp
  42b8e8:	ret    
  42b8e9:	nop    DWORD PTR [rax+0x0]

000000000042b8f0 <flatcc_json_printer_int32_field@@Base>:
  42b8f0:	push   rbp
  42b8f1:	push   r14
  42b8f3:	push   rbx
  42b8f4:	mov    r14,rdi
  42b8f7:	lea    eax,[rdx+rdx*1]
  42b8fa:	add    eax,0x4
  42b8fd:	cmp    eax,DWORD PTR [rsi+0x10]
  42b900:	jge    42b929 <flatcc_json_printer_int32_field@@Base+0x39>
  42b902:	mov    rdx,QWORD PTR [rsi+0x8]
  42b906:	mov    eax,eax
  42b908:	movzx  eax,WORD PTR [rdx+rax*1]
  42b90c:	test   rax,rax
  42b90f:	je     42b929 <flatcc_json_printer_int32_field@@Base+0x39>
  42b911:	add    rax,QWORD PTR [rsi]
  42b914:	je     42b929 <flatcc_json_printer_int32_field@@Base+0x39>
  42b916:	mov    ebx,DWORD PTR [rax]
  42b918:	cmp    ebx,r9d
  42b91b:	jne    42b933 <flatcc_json_printer_int32_field@@Base+0x43>
  42b91d:	cmp    BYTE PTR [r14+0x34],0x0
  42b922:	mov    ebx,r9d
  42b925:	jne    42b982 <flatcc_json_printer_int32_field@@Base+0x92>
  42b927:	jmp    42b933 <flatcc_json_printer_int32_field@@Base+0x43>
  42b929:	cmp    BYTE PTR [r14+0x35],0x0
  42b92e:	mov    ebx,r9d
  42b931:	je     42b982 <flatcc_json_printer_int32_field@@Base+0x92>
  42b933:	mov    eax,DWORD PTR [rsi+0x18]
  42b936:	lea    edx,[rax+0x1]
  42b939:	mov    DWORD PTR [rsi+0x18],edx
  42b93c:	test   eax,eax
  42b93e:	je     42b94f <flatcc_json_printer_int32_field@@Base+0x5f>
  42b940:	mov    rax,QWORD PTR [r14+0x28]
  42b944:	lea    rdx,[rax+0x1]
  42b948:	mov    QWORD PTR [r14+0x28],rdx
  42b94c:	mov    BYTE PTR [rax],0x2c
  42b94f:	movsxd rdx,r8d
  42b952:	mov    rdi,r14
  42b955:	mov    rsi,rcx
  42b958:	call   42ae90 <flatcc_json_printer_string_field@@Base+0x80>
  42b95d:	mov    rsi,QWORD PTR [r14+0x28]
  42b961:	mov    ebp,ebx
  42b963:	shr    ebp,0x1f
  42b966:	test   ebx,ebx
  42b968:	jns    42b973 <flatcc_json_printer_int32_field@@Base+0x83>
  42b96a:	mov    BYTE PTR [rsi],0x2d
  42b96d:	add    rsi,0x1
  42b971:	neg    ebx
  42b973:	mov    edi,ebx
  42b975:	call   42a270 <flatcc_json_printer_uint32@@Base+0x20>
  42b97a:	add    eax,ebp
  42b97c:	cdqe   
  42b97e:	add    QWORD PTR [r14+0x28],rax
  42b982:	pop    rbx
  42b983:	pop    r14
  42b985:	pop    rbp
  42b986:	ret    
  42b987:	nop    WORD PTR [rax+rax*1+0x0]

000000000042b990 <flatcc_json_printer_int64_field@@Base>:
  42b990:	push   r15
  42b992:	push   r14
  42b994:	push   rbx
  42b995:	mov    r14,rdi
  42b998:	lea    eax,[rdx+rdx*1]
  42b99b:	add    eax,0x4
  42b99e:	cmp    eax,DWORD PTR [rsi+0x10]
  42b9a1:	jge    42b9cb <flatcc_json_printer_int64_field@@Base+0x3b>
  42b9a3:	mov    rdx,QWORD PTR [rsi+0x8]
  42b9a7:	mov    eax,eax
  42b9a9:	movzx  eax,WORD PTR [rdx+rax*1]
  42b9ad:	test   rax,rax
  42b9b0:	je     42b9cb <flatcc_json_printer_int64_field@@Base+0x3b>
  42b9b2:	add    rax,QWORD PTR [rsi]
  42b9b5:	je     42b9cb <flatcc_json_printer_int64_field@@Base+0x3b>
  42b9b7:	mov    r15,QWORD PTR [rax]
  42b9ba:	cmp    r15,r9
  42b9bd:	jne    42b9d5 <flatcc_json_printer_int64_field@@Base+0x45>
  42b9bf:	cmp    BYTE PTR [r14+0x34],0x0
  42b9c4:	mov    r15,r9
  42b9c7:	jne    42ba29 <flatcc_json_printer_int64_field@@Base+0x99>
  42b9c9:	jmp    42b9d5 <flatcc_json_printer_int64_field@@Base+0x45>
  42b9cb:	cmp    BYTE PTR [r14+0x35],0x0
  42b9d0:	mov    r15,r9
  42b9d3:	je     42ba29 <flatcc_json_printer_int64_field@@Base+0x99>
  42b9d5:	mov    eax,DWORD PTR [rsi+0x18]
  42b9d8:	lea    edx,[rax+0x1]
  42b9db:	mov    DWORD PTR [rsi+0x18],edx
  42b9de:	test   eax,eax
  42b9e0:	je     42b9f1 <flatcc_json_printer_int64_field@@Base+0x61>
  42b9e2:	mov    rax,QWORD PTR [r14+0x28]
  42b9e6:	lea    rdx,[rax+0x1]
  42b9ea:	mov    QWORD PTR [r14+0x28],rdx
  42b9ee:	mov    BYTE PTR [rax],0x2c
  42b9f1:	movsxd rdx,r8d
  42b9f4:	mov    rdi,r14
  42b9f7:	mov    rsi,rcx
  42b9fa:	call   42ae90 <flatcc_json_printer_string_field@@Base+0x80>
  42b9ff:	mov    rsi,QWORD PTR [r14+0x28]
  42ba03:	mov    rbx,r15
  42ba06:	shr    rbx,0x3f
  42ba0a:	test   r15,r15
  42ba0d:	jns    42ba19 <flatcc_json_printer_int64_field@@Base+0x89>
  42ba0f:	mov    BYTE PTR [rsi],0x2d
  42ba12:	add    rsi,0x1
  42ba16:	neg    r15
  42ba19:	mov    rdi,r15
  42ba1c:	call   42a500 <flatcc_json_printer_uint64@@Base+0x20>
  42ba21:	add    eax,ebx
  42ba23:	cdqe   
  42ba25:	add    QWORD PTR [r14+0x28],rax
  42ba29:	pop    rbx
  42ba2a:	pop    r14
  42ba2c:	pop    r15
  42ba2e:	ret    
  42ba2f:	nop

000000000042ba30 <flatcc_json_printer_bool_field@@Base>:
  42ba30:	push   rbp
  42ba31:	push   rbx
  42ba32:	push   rax
  42ba33:	mov    rbx,rdi
  42ba36:	lea    eax,[rdx+rdx*1]
  42ba39:	add    eax,0x4
  42ba3c:	cmp    eax,DWORD PTR [rsi+0x10]
  42ba3f:	jge    42ba68 <flatcc_json_printer_bool_field@@Base+0x38>
  42ba41:	mov    rdx,QWORD PTR [rsi+0x8]
  42ba45:	mov    eax,eax
  42ba47:	movzx  eax,WORD PTR [rdx+rax*1]
  42ba4b:	test   rax,rax
  42ba4e:	je     42ba68 <flatcc_json_printer_bool_field@@Base+0x38>
  42ba50:	add    rax,QWORD PTR [rsi]
  42ba53:	je     42ba68 <flatcc_json_printer_bool_field@@Base+0x38>
  42ba55:	mov    bpl,BYTE PTR [rax]
  42ba58:	cmp    bpl,r9b
  42ba5b:	jne    42ba71 <flatcc_json_printer_bool_field@@Base+0x41>
  42ba5d:	cmp    BYTE PTR [rbx+0x34],0x0
  42ba61:	mov    ebp,r9d
  42ba64:	jne    42baca <flatcc_json_printer_bool_field@@Base+0x9a>
  42ba66:	jmp    42ba71 <flatcc_json_printer_bool_field@@Base+0x41>
  42ba68:	cmp    BYTE PTR [rbx+0x35],0x0
  42ba6c:	mov    ebp,r9d
  42ba6f:	je     42baca <flatcc_json_printer_bool_field@@Base+0x9a>
  42ba71:	mov    eax,DWORD PTR [rsi+0x18]
  42ba74:	lea    edx,[rax+0x1]
  42ba77:	mov    DWORD PTR [rsi+0x18],edx
  42ba7a:	test   eax,eax
  42ba7c:	je     42ba8d <flatcc_json_printer_bool_field@@Base+0x5d>
  42ba7e:	mov    rax,QWORD PTR [rbx+0x28]
  42ba82:	lea    rdx,[rax+0x1]
  42ba86:	mov    QWORD PTR [rbx+0x28],rdx
  42ba8a:	mov    BYTE PTR [rax],0x2c
  42ba8d:	movsxd rdx,r8d
  42ba90:	mov    rdi,rbx
  42ba93:	mov    rsi,rcx
  42ba96:	call   42ae90 <flatcc_json_printer_string_field@@Base+0x80>
  42ba9b:	mov    rax,QWORD PTR [rbx+0x28]
  42ba9f:	test   bpl,bpl
  42baa2:	je     42bab5 <flatcc_json_printer_bool_field@@Base+0x85>
  42baa4:	mov    BYTE PTR [rax+0x4],0x0
  42baa8:	mov    DWORD PTR [rax],0x65757274
  42baae:	mov    eax,0x4
  42bab3:	jmp    42bac6 <flatcc_json_printer_bool_field@@Base+0x96>
  42bab5:	mov    WORD PTR [rax+0x4],0x65
  42babb:	mov    DWORD PTR [rax],0x736c6166
  42bac1:	mov    eax,0x5
  42bac6:	add    QWORD PTR [rbx+0x28],rax
  42baca:	add    rsp,0x8
  42bace:	pop    rbx
  42bacf:	pop    rbp
  42bad0:	ret    
  42bad1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42badb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042bae0 <flatcc_json_printer_float_field@@Base>:
  42bae0:	push   rbx
  42bae1:	sub    rsp,0x10
  42bae5:	mov    rbx,rdi
  42bae8:	lea    eax,[rdx+rdx*1]
  42baeb:	add    eax,0x4
  42baee:	cmp    eax,DWORD PTR [rsi+0x10]
  42baf1:	jge    42bb1f <flatcc_json_printer_float_field@@Base+0x3f>
  42baf3:	mov    rdx,QWORD PTR [rsi+0x8]
  42baf7:	mov    eax,eax
  42baf9:	movzx  eax,WORD PTR [rdx+rax*1]
  42bafd:	test   rax,rax
  42bb00:	je     42bb1f <flatcc_json_printer_float_field@@Base+0x3f>
  42bb02:	add    rax,QWORD PTR [rsi]
  42bb05:	je     42bb1f <flatcc_json_printer_float_field@@Base+0x3f>
  42bb07:	vmovss xmm1,DWORD PTR [rax]
  42bb0b:	vucomiss xmm1,xmm0
  42bb0f:	jne    42bb74 <flatcc_json_printer_float_field@@Base+0x94>
  42bb11:	jp     42bb74 <flatcc_json_printer_float_field@@Base+0x94>
  42bb13:	cmp    BYTE PTR [rbx+0x34],0x0
  42bb17:	vmovaps xmm0,xmm1
  42bb1b:	jne    42bb6e <flatcc_json_printer_float_field@@Base+0x8e>
  42bb1d:	jmp    42bb25 <flatcc_json_printer_float_field@@Base+0x45>
  42bb1f:	cmp    BYTE PTR [rbx+0x35],0x0
  42bb23:	je     42bb6e <flatcc_json_printer_float_field@@Base+0x8e>
  42bb25:	vmovss DWORD PTR [rsp+0xc],xmm0
  42bb2b:	mov    eax,DWORD PTR [rsi+0x18]
  42bb2e:	lea    edx,[rax+0x1]
  42bb31:	mov    DWORD PTR [rsi+0x18],edx
  42bb34:	test   eax,eax
  42bb36:	je     42bb47 <flatcc_json_printer_float_field@@Base+0x67>
  42bb38:	mov    rax,QWORD PTR [rbx+0x28]
  42bb3c:	lea    rdx,[rax+0x1]
  42bb40:	mov    QWORD PTR [rbx+0x28],rdx
  42bb44:	mov    BYTE PTR [rax],0x2c
  42bb47:	movsxd rdx,r8d
  42bb4a:	mov    rdi,rbx
  42bb4d:	mov    rsi,rcx
  42bb50:	call   42ae90 <flatcc_json_printer_string_field@@Base+0x80>
  42bb55:	vmovss xmm0,DWORD PTR [rsp+0xc]
  42bb5b:	vcvtss2sd xmm0,xmm0,xmm0
  42bb5f:	mov    rdi,QWORD PTR [rbx+0x28]
  42bb63:	call   428ec0 <flatcc_json_printer_fmt_float@@Base+0x10>
  42bb68:	cdqe   
  42bb6a:	add    QWORD PTR [rbx+0x28],rax
  42bb6e:	add    rsp,0x10
  42bb72:	pop    rbx
  42bb73:	ret    
  42bb74:	vmovaps xmm0,xmm1
  42bb78:	jmp    42bb25 <flatcc_json_printer_float_field@@Base+0x45>
  42bb7a:	nop    WORD PTR [rax+rax*1+0x0]

000000000042bb80 <flatcc_json_printer_double_field@@Base>:
  42bb80:	push   rbx
  42bb81:	sub    rsp,0x10
  42bb85:	mov    rbx,rdi
  42bb88:	lea    eax,[rdx+rdx*1]
  42bb8b:	add    eax,0x4
  42bb8e:	cmp    eax,DWORD PTR [rsi+0x10]
  42bb91:	jge    42bbbf <flatcc_json_printer_double_field@@Base+0x3f>
  42bb93:	mov    rdx,QWORD PTR [rsi+0x8]
  42bb97:	mov    eax,eax
  42bb99:	movzx  eax,WORD PTR [rdx+rax*1]
  42bb9d:	test   rax,rax
  42bba0:	je     42bbbf <flatcc_json_printer_double_field@@Base+0x3f>
  42bba2:	add    rax,QWORD PTR [rsi]
  42bba5:	je     42bbbf <flatcc_json_printer_double_field@@Base+0x3f>
  42bba7:	vmovsd xmm1,QWORD PTR [rax]
  42bbab:	vucomisd xmm1,xmm0
  42bbaf:	jne    42bc10 <flatcc_json_printer_double_field@@Base+0x90>
  42bbb1:	jp     42bc10 <flatcc_json_printer_double_field@@Base+0x90>
  42bbb3:	cmp    BYTE PTR [rbx+0x34],0x0
  42bbb7:	vmovaps xmm0,xmm1
  42bbbb:	jne    42bc0a <flatcc_json_printer_double_field@@Base+0x8a>
  42bbbd:	jmp    42bbc5 <flatcc_json_printer_double_field@@Base+0x45>
  42bbbf:	cmp    BYTE PTR [rbx+0x35],0x0
  42bbc3:	je     42bc0a <flatcc_json_printer_double_field@@Base+0x8a>
  42bbc5:	vmovsd QWORD PTR [rsp+0x8],xmm0
  42bbcb:	mov    eax,DWORD PTR [rsi+0x18]
  42bbce:	lea    edx,[rax+0x1]
  42bbd1:	mov    DWORD PTR [rsi+0x18],edx
  42bbd4:	test   eax,eax
  42bbd6:	je     42bbe7 <flatcc_json_printer_double_field@@Base+0x67>
  42bbd8:	mov    rax,QWORD PTR [rbx+0x28]
  42bbdc:	lea    rdx,[rax+0x1]
  42bbe0:	mov    QWORD PTR [rbx+0x28],rdx
  42bbe4:	mov    BYTE PTR [rax],0x2c
  42bbe7:	movsxd rdx,r8d
  42bbea:	mov    rdi,rbx
  42bbed:	mov    rsi,rcx
  42bbf0:	call   42ae90 <flatcc_json_printer_string_field@@Base+0x80>
  42bbf5:	mov    rdi,QWORD PTR [rbx+0x28]
  42bbf9:	vmovsd xmm0,QWORD PTR [rsp+0x8]
  42bbff:	call   428ec0 <flatcc_json_printer_fmt_float@@Base+0x10>
  42bc04:	cdqe   
  42bc06:	add    QWORD PTR [rbx+0x28],rax
  42bc0a:	add    rsp,0x10
  42bc0e:	pop    rbx
  42bc0f:	ret    
  42bc10:	vmovaps xmm0,xmm1
  42bc14:	jmp    42bbc5 <flatcc_json_printer_double_field@@Base+0x45>
  42bc16:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000042bc20 <flatcc_json_printer_uint8_enum_field@@Base>:
  42bc20:	push   r15
  42bc22:	push   r14
  42bc24:	push   rbx
  42bc25:	mov    r14,rdi
  42bc28:	mov    rdi,QWORD PTR [rsp+0x20]
  42bc2d:	lea    eax,[rdx+rdx*1]
  42bc30:	add    eax,0x4
  42bc33:	cmp    eax,DWORD PTR [rsi+0x10]
  42bc36:	jge    42bc63 <flatcc_json_printer_uint8_enum_field@@Base+0x43>
  42bc38:	mov    rdx,QWORD PTR [rsi+0x8]
  42bc3c:	mov    eax,eax
  42bc3e:	movzx  eax,WORD PTR [rdx+rax*1]
  42bc42:	test   rax,rax
  42bc45:	je     42bc63 <flatcc_json_printer_uint8_enum_field@@Base+0x43>
  42bc47:	add    rax,QWORD PTR [rsi]
  42bc4a:	je     42bc63 <flatcc_json_printer_uint8_enum_field@@Base+0x43>
  42bc4c:	mov    bl,BYTE PTR [rax]
  42bc4e:	cmp    bl,r9b
  42bc51:	jne    42bc71 <flatcc_json_printer_uint8_enum_field@@Base+0x51>
  42bc53:	cmp    BYTE PTR [r14+0x34],0x0
  42bc58:	mov    ebx,r9d
  42bc5b:	jne    42bd3b <flatcc_json_printer_uint8_enum_field@@Base+0x11b>
  42bc61:	jmp    42bc71 <flatcc_json_printer_uint8_enum_field@@Base+0x51>
  42bc63:	cmp    BYTE PTR [r14+0x35],0x0
  42bc68:	mov    ebx,r9d
  42bc6b:	je     42bd3b <flatcc_json_printer_uint8_enum_field@@Base+0x11b>
  42bc71:	mov    r15,rdi
  42bc74:	mov    eax,DWORD PTR [rsi+0x18]
  42bc77:	lea    edx,[rax+0x1]
  42bc7a:	mov    DWORD PTR [rsi+0x18],edx
  42bc7d:	test   eax,eax
  42bc7f:	je     42bc90 <flatcc_json_printer_uint8_enum_field@@Base+0x70>
  42bc81:	mov    rax,QWORD PTR [r14+0x28]
  42bc85:	lea    rdx,[rax+0x1]
  42bc89:	mov    QWORD PTR [r14+0x28],rdx
  42bc8d:	mov    BYTE PTR [rax],0x2c
  42bc90:	movsxd rdx,r8d
  42bc93:	mov    rdi,r14
  42bc96:	mov    rsi,rcx
  42bc99:	call   42ae90 <flatcc_json_printer_string_field@@Base+0x80>
  42bc9e:	cmp    BYTE PTR [r14+0x33],0x0
  42bca3:	je     42bce6 <flatcc_json_printer_uint8_enum_field@@Base+0xc6>
  42bca5:	mov    rdx,QWORD PTR [r14+0x28]
  42bca9:	cmp    bl,0x64
  42bcac:	jb     42bcf6 <flatcc_json_printer_uint8_enum_field@@Base+0xd6>
  42bcae:	mov    BYTE PTR [rdx+0x3],0x0
  42bcb2:	movzx  eax,bl
  42bcb5:	lea    ecx,[rax+rax*4]
  42bcb8:	lea    ecx,[rax+rcx*8]
  42bcbb:	shr    ecx,0xc
  42bcbe:	mov    sil,0x64
  42bcc1:	mov    eax,ecx
  42bcc3:	mul    sil
  42bcc6:	sub    bl,al
  42bcc8:	movzx  eax,bl
  42bccb:	lea    rsi,[rip+0x111de]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42bcd2:	movzx  eax,WORD PTR [rsi+rax*2]
  42bcd6:	mov    WORD PTR [rdx+0x1],ax
  42bcda:	or     cl,0x30
  42bcdd:	mov    BYTE PTR [rdx],cl
  42bcdf:	mov    eax,0x3
  42bce4:	jmp    42bd37 <flatcc_json_printer_uint8_enum_field@@Base+0x117>
  42bce6:	movzx  esi,bl
  42bce9:	mov    rdi,r14
  42bcec:	mov    rax,r15
  42bcef:	pop    rbx
  42bcf0:	pop    r14
  42bcf2:	pop    r15
  42bcf4:	jmp    rax
  42bcf6:	cmp    bl,0xa
  42bcf9:	jb     42bd29 <flatcc_json_printer_uint8_enum_field@@Base+0x109>
  42bcfb:	mov    BYTE PTR [rdx+0x2],0x0
  42bcff:	movzx  eax,bl
  42bd02:	lea    ecx,[rax+rax*4]
  42bd05:	lea    eax,[rax+rcx*8]
  42bd08:	shr    eax,0xc
  42bd0b:	mov    cl,0x64
  42bd0d:	mul    cl
  42bd0f:	sub    bl,al
  42bd11:	movzx  eax,bl
  42bd14:	lea    rcx,[rip+0x11195]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42bd1b:	movzx  eax,WORD PTR [rcx+rax*2]
  42bd1f:	mov    WORD PTR [rdx],ax
  42bd22:	mov    eax,0x2
  42bd27:	jmp    42bd37 <flatcc_json_printer_uint8_enum_field@@Base+0x117>
  42bd29:	mov    BYTE PTR [rdx+0x1],0x0
  42bd2d:	add    bl,0x30
  42bd30:	mov    BYTE PTR [rdx],bl
  42bd32:	mov    eax,0x1
  42bd37:	add    QWORD PTR [r14+0x28],rax
  42bd3b:	pop    rbx
  42bd3c:	pop    r14
  42bd3e:	pop    r15
  42bd40:	ret    
  42bd41:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42bd4b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042bd50 <flatcc_json_printer_uint16_enum_field@@Base>:
  42bd50:	push   rbp
  42bd51:	push   r14
  42bd53:	push   rbx
  42bd54:	mov    rbx,rdi
  42bd57:	mov    rdi,QWORD PTR [rsp+0x20]
  42bd5c:	lea    eax,[rdx+rdx*1]
  42bd5f:	add    eax,0x4
  42bd62:	cmp    eax,DWORD PTR [rsi+0x10]
  42bd65:	jge    42bd93 <flatcc_json_printer_uint16_enum_field@@Base+0x43>
  42bd67:	mov    rdx,QWORD PTR [rsi+0x8]
  42bd6b:	mov    eax,eax
  42bd6d:	movzx  eax,WORD PTR [rdx+rax*1]
  42bd71:	test   rax,rax
  42bd74:	je     42bd93 <flatcc_json_printer_uint16_enum_field@@Base+0x43>
  42bd76:	add    rax,QWORD PTR [rsi]
  42bd79:	je     42bd93 <flatcc_json_printer_uint16_enum_field@@Base+0x43>
  42bd7b:	movzx  ebp,WORD PTR [rax]
  42bd7e:	cmp    bp,r9w
  42bd82:	jne    42bda0 <flatcc_json_printer_uint16_enum_field@@Base+0x50>
  42bd84:	cmp    BYTE PTR [rbx+0x34],0x0
  42bd88:	mov    ebp,r9d
  42bd8b:	jne    42bf02 <flatcc_json_printer_uint16_enum_field@@Base+0x1b2>
  42bd91:	jmp    42bda0 <flatcc_json_printer_uint16_enum_field@@Base+0x50>
  42bd93:	cmp    BYTE PTR [rbx+0x35],0x0
  42bd97:	mov    ebp,r9d
  42bd9a:	je     42bf02 <flatcc_json_printer_uint16_enum_field@@Base+0x1b2>
  42bda0:	mov    r14,rdi
  42bda3:	mov    eax,DWORD PTR [rsi+0x18]
  42bda6:	lea    edx,[rax+0x1]
  42bda9:	mov    DWORD PTR [rsi+0x18],edx
  42bdac:	test   eax,eax
  42bdae:	je     42bdbf <flatcc_json_printer_uint16_enum_field@@Base+0x6f>
  42bdb0:	mov    rax,QWORD PTR [rbx+0x28]
  42bdb4:	lea    rdx,[rax+0x1]
  42bdb8:	mov    QWORD PTR [rbx+0x28],rdx
  42bdbc:	mov    BYTE PTR [rax],0x2c
  42bdbf:	movsxd rdx,r8d
  42bdc2:	mov    rdi,rbx
  42bdc5:	mov    rsi,rcx
  42bdc8:	call   42ae90 <flatcc_json_printer_string_field@@Base+0x80>
  42bdcd:	cmp    BYTE PTR [rbx+0x33],0x0
  42bdd1:	je     42bdf2 <flatcc_json_printer_uint16_enum_field@@Base+0xa2>
  42bdd3:	mov    rsi,QWORD PTR [rbx+0x28]
  42bdd7:	movzx  edx,bp
  42bdda:	cmp    edx,0x3e8
  42bde0:	jb     42be01 <flatcc_json_printer_uint16_enum_field@@Base+0xb1>
  42bde2:	xor    eax,eax
  42bde4:	cmp    edx,0x270f
  42bdea:	seta   al
  42bded:	or     eax,0x4
  42bdf0:	jmp    42be26 <flatcc_json_printer_uint16_enum_field@@Base+0xd6>
  42bdf2:	movzx  esi,bp
  42bdf5:	mov    rdi,rbx
  42bdf8:	mov    rax,r14
  42bdfb:	pop    rbx
  42bdfc:	pop    r14
  42bdfe:	pop    rbp
  42bdff:	jmp    rax
  42be01:	cmp    edx,0x64
  42be04:	jb     42be1b <flatcc_json_printer_uint16_enum_field@@Base+0xcb>
  42be06:	mov    BYTE PTR [rsi+0x3],0x0
  42be0a:	add    rsi,0x3
  42be0e:	mov    eax,0x3
  42be13:	mov    rcx,rsi
  42be16:	jmp    42bec8 <flatcc_json_printer_uint16_enum_field@@Base+0x178>
  42be1b:	xor    eax,eax
  42be1d:	cmp    edx,0x9
  42be20:	seta   al
  42be23:	add    eax,0x1
  42be26:	mov    edi,eax
  42be28:	lea    rcx,[rsi+rdi*1]
  42be2c:	mov    BYTE PTR [rsi+rdi*1],0x0
  42be30:	test   al,0x1
  42be32:	jne    42be93 <flatcc_json_printer_uint16_enum_field@@Base+0x143>
  42be34:	cmp    al,0x2
  42be36:	je     42be69 <flatcc_json_printer_uint16_enum_field@@Base+0x119>
  42be38:	cmp    al,0x4
  42be3a:	jne    42befc <flatcc_json_printer_uint16_enum_field@@Base+0x1ac>
  42be40:	mov    esi,edx
  42be42:	shr    esi,0x2
  42be45:	imul   ebp,esi,0x147b
  42be4b:	shr    ebp,0x11
  42be4e:	imul   esi,ebp,0x64
  42be51:	sub    edx,esi
  42be53:	movzx  edx,dx
  42be56:	lea    rsi,[rip+0x11053]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42be5d:	movzx  edx,WORD PTR [rsi+rdx*2]
  42be61:	mov    WORD PTR [rcx-0x2],dx
  42be65:	lea    rcx,[rcx-0x2]
  42be69:	movzx  edx,bp
  42be6c:	mov    esi,edx
  42be6e:	shr    esi,0x2
  42be71:	imul   esi,esi,0x147b
  42be77:	shr    esi,0x11
  42be7a:	imul   esi,esi,0x64
  42be7d:	sub    edx,esi
  42be7f:	movzx  edx,dx
  42be82:	lea    rsi,[rip+0x11027]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42be89:	movzx  edx,WORD PTR [rsi+rdx*2]
  42be8d:	mov    WORD PTR [rcx-0x2],dx
  42be91:	jmp    42befc <flatcc_json_printer_uint16_enum_field@@Base+0x1ac>
  42be93:	cmp    al,0x1
  42be95:	je     42bef4 <flatcc_json_printer_uint16_enum_field@@Base+0x1a4>
  42be97:	cmp    al,0x3
  42be99:	je     42bec8 <flatcc_json_printer_uint16_enum_field@@Base+0x178>
  42be9b:	cmp    al,0x5
  42be9d:	jne    42befc <flatcc_json_printer_uint16_enum_field@@Base+0x1ac>
  42be9f:	mov    esi,edx
  42bea1:	shr    esi,0x2
  42bea4:	imul   ebp,esi,0x147b
  42beaa:	shr    ebp,0x11
  42bead:	imul   esi,ebp,0x64
  42beb0:	sub    edx,esi
  42beb2:	movzx  edx,dx
  42beb5:	lea    rsi,[rip+0x10ff4]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42bebc:	movzx  edx,WORD PTR [rsi+rdx*2]
  42bec0:	mov    WORD PTR [rcx-0x2],dx
  42bec4:	lea    rcx,[rcx-0x2]
  42bec8:	movzx  edx,bp
  42becb:	mov    esi,edx
  42becd:	shr    esi,0x2
  42bed0:	imul   ebp,esi,0x147b
  42bed6:	shr    ebp,0x11
  42bed9:	imul   esi,ebp,0x64
  42bedc:	sub    edx,esi
  42bede:	movzx  edx,dx
  42bee1:	lea    rsi,[rip+0x10fc8]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42bee8:	movzx  edx,WORD PTR [rsi+rdx*2]
  42beec:	mov    WORD PTR [rcx-0x2],dx
  42bef0:	lea    rcx,[rcx-0x2]
  42bef4:	add    bpl,0x30
  42bef8:	mov    BYTE PTR [rcx-0x1],bpl
  42befc:	mov    eax,eax
  42befe:	add    QWORD PTR [rbx+0x28],rax
  42bf02:	pop    rbx
  42bf03:	pop    r14
  42bf05:	pop    rbp
  42bf06:	ret    
  42bf07:	nop    WORD PTR [rax+rax*1+0x0]

000000000042bf10 <flatcc_json_printer_uint32_enum_field@@Base>:
  42bf10:	push   rbp
  42bf11:	push   r14
  42bf13:	push   rbx
  42bf14:	mov    rbx,rdi
  42bf17:	mov    rdi,QWORD PTR [rsp+0x20]
  42bf1c:	lea    eax,[rdx+rdx*1]
  42bf1f:	add    eax,0x4
  42bf22:	cmp    eax,DWORD PTR [rsi+0x10]
  42bf25:	jge    42bf4d <flatcc_json_printer_uint32_enum_field@@Base+0x3d>
  42bf27:	mov    rdx,QWORD PTR [rsi+0x8]
  42bf2b:	mov    eax,eax
  42bf2d:	movzx  eax,WORD PTR [rdx+rax*1]
  42bf31:	test   rax,rax
  42bf34:	je     42bf4d <flatcc_json_printer_uint32_enum_field@@Base+0x3d>
  42bf36:	add    rax,QWORD PTR [rsi]
  42bf39:	je     42bf4d <flatcc_json_printer_uint32_enum_field@@Base+0x3d>
  42bf3b:	mov    ebp,DWORD PTR [rax]
  42bf3d:	cmp    ebp,r9d
  42bf40:	jne    42bf56 <flatcc_json_printer_uint32_enum_field@@Base+0x46>
  42bf42:	cmp    BYTE PTR [rbx+0x34],0x0
  42bf46:	mov    ebp,r9d
  42bf49:	jne    42bf9a <flatcc_json_printer_uint32_enum_field@@Base+0x8a>
  42bf4b:	jmp    42bf56 <flatcc_json_printer_uint32_enum_field@@Base+0x46>
  42bf4d:	cmp    BYTE PTR [rbx+0x35],0x0
  42bf51:	mov    ebp,r9d
  42bf54:	je     42bf9a <flatcc_json_printer_uint32_enum_field@@Base+0x8a>
  42bf56:	mov    r14,rdi
  42bf59:	mov    eax,DWORD PTR [rsi+0x18]
  42bf5c:	lea    edx,[rax+0x1]
  42bf5f:	mov    DWORD PTR [rsi+0x18],edx
  42bf62:	test   eax,eax
  42bf64:	je     42bf75 <flatcc_json_printer_uint32_enum_field@@Base+0x65>
  42bf66:	mov    rax,QWORD PTR [rbx+0x28]
  42bf6a:	lea    rdx,[rax+0x1]
  42bf6e:	mov    QWORD PTR [rbx+0x28],rdx
  42bf72:	mov    BYTE PTR [rax],0x2c
  42bf75:	movsxd rdx,r8d
  42bf78:	mov    rdi,rbx
  42bf7b:	mov    rsi,rcx
  42bf7e:	call   42ae90 <flatcc_json_printer_string_field@@Base+0x80>
  42bf83:	cmp    BYTE PTR [rbx+0x33],0x0
  42bf87:	je     42bf9f <flatcc_json_printer_uint32_enum_field@@Base+0x8f>
  42bf89:	mov    rsi,QWORD PTR [rbx+0x28]
  42bf8d:	mov    edi,ebp
  42bf8f:	call   42a270 <flatcc_json_printer_uint32@@Base+0x20>
  42bf94:	cdqe   
  42bf96:	add    QWORD PTR [rbx+0x28],rax
  42bf9a:	pop    rbx
  42bf9b:	pop    r14
  42bf9d:	pop    rbp
  42bf9e:	ret    
  42bf9f:	mov    rdi,rbx
  42bfa2:	mov    esi,ebp
  42bfa4:	mov    rax,r14
  42bfa7:	pop    rbx
  42bfa8:	pop    r14
  42bfaa:	pop    rbp
  42bfab:	jmp    rax
  42bfad:	nop    DWORD PTR [rax]

000000000042bfb0 <flatcc_json_printer_uint64_enum_field@@Base>:
  42bfb0:	push   r15
  42bfb2:	push   r14
  42bfb4:	push   rbx
  42bfb5:	mov    rbx,rdi
  42bfb8:	mov    rdi,QWORD PTR [rsp+0x20]
  42bfbd:	lea    eax,[rdx+rdx*1]
  42bfc0:	add    eax,0x4
  42bfc3:	cmp    eax,DWORD PTR [rsi+0x10]
  42bfc6:	jge    42bfef <flatcc_json_printer_uint64_enum_field@@Base+0x3f>
  42bfc8:	mov    rdx,QWORD PTR [rsi+0x8]
  42bfcc:	mov    eax,eax
  42bfce:	movzx  eax,WORD PTR [rdx+rax*1]
  42bfd2:	test   rax,rax
  42bfd5:	je     42bfef <flatcc_json_printer_uint64_enum_field@@Base+0x3f>
  42bfd7:	add    rax,QWORD PTR [rsi]
  42bfda:	je     42bfef <flatcc_json_printer_uint64_enum_field@@Base+0x3f>
  42bfdc:	mov    r14,QWORD PTR [rax]
  42bfdf:	cmp    r14,r9
  42bfe2:	jne    42bff8 <flatcc_json_printer_uint64_enum_field@@Base+0x48>
  42bfe4:	cmp    BYTE PTR [rbx+0x34],0x0
  42bfe8:	mov    r14,r9
  42bfeb:	jne    42c03d <flatcc_json_printer_uint64_enum_field@@Base+0x8d>
  42bfed:	jmp    42bff8 <flatcc_json_printer_uint64_enum_field@@Base+0x48>
  42bfef:	cmp    BYTE PTR [rbx+0x35],0x0
  42bff3:	mov    r14,r9
  42bff6:	je     42c03d <flatcc_json_printer_uint64_enum_field@@Base+0x8d>
  42bff8:	mov    r15,rdi
  42bffb:	mov    eax,DWORD PTR [rsi+0x18]
  42bffe:	lea    edx,[rax+0x1]
  42c001:	mov    DWORD PTR [rsi+0x18],edx
  42c004:	test   eax,eax
  42c006:	je     42c017 <flatcc_json_printer_uint64_enum_field@@Base+0x67>
  42c008:	mov    rax,QWORD PTR [rbx+0x28]
  42c00c:	lea    rdx,[rax+0x1]
  42c010:	mov    QWORD PTR [rbx+0x28],rdx
  42c014:	mov    BYTE PTR [rax],0x2c
  42c017:	movsxd rdx,r8d
  42c01a:	mov    rdi,rbx
  42c01d:	mov    rsi,rcx
  42c020:	call   42ae90 <flatcc_json_printer_string_field@@Base+0x80>
  42c025:	cmp    BYTE PTR [rbx+0x33],0x0
  42c029:	je     42c043 <flatcc_json_printer_uint64_enum_field@@Base+0x93>
  42c02b:	mov    rsi,QWORD PTR [rbx+0x28]
  42c02f:	mov    rdi,r14
  42c032:	call   42a500 <flatcc_json_printer_uint64@@Base+0x20>
  42c037:	cdqe   
  42c039:	add    QWORD PTR [rbx+0x28],rax
  42c03d:	pop    rbx
  42c03e:	pop    r14
  42c040:	pop    r15
  42c042:	ret    
  42c043:	mov    rdi,rbx
  42c046:	mov    rsi,r14
  42c049:	mov    rax,r15
  42c04c:	pop    rbx
  42c04d:	pop    r14
  42c04f:	pop    r15
  42c051:	jmp    rax
  42c053:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c05d:	nop    DWORD PTR [rax]

000000000042c060 <flatcc_json_printer_int8_enum_field@@Base>:
  42c060:	push   r15
  42c062:	push   r14
  42c064:	push   rbx
  42c065:	mov    r14,rdi
  42c068:	mov    rdi,QWORD PTR [rsp+0x20]
  42c06d:	lea    eax,[rdx+rdx*1]
  42c070:	add    eax,0x4
  42c073:	cmp    eax,DWORD PTR [rsi+0x10]
  42c076:	jge    42c0a3 <flatcc_json_printer_int8_enum_field@@Base+0x43>
  42c078:	mov    rdx,QWORD PTR [rsi+0x8]
  42c07c:	mov    eax,eax
  42c07e:	movzx  eax,WORD PTR [rdx+rax*1]
  42c082:	test   rax,rax
  42c085:	je     42c0a3 <flatcc_json_printer_int8_enum_field@@Base+0x43>
  42c087:	add    rax,QWORD PTR [rsi]
  42c08a:	je     42c0a3 <flatcc_json_printer_int8_enum_field@@Base+0x43>
  42c08c:	mov    bl,BYTE PTR [rax]
  42c08e:	cmp    bl,r9b
  42c091:	jne    42c0b1 <flatcc_json_printer_int8_enum_field@@Base+0x51>
  42c093:	cmp    BYTE PTR [r14+0x34],0x0
  42c098:	mov    ebx,r9d
  42c09b:	jne    42c196 <flatcc_json_printer_int8_enum_field@@Base+0x136>
  42c0a1:	jmp    42c0b1 <flatcc_json_printer_int8_enum_field@@Base+0x51>
  42c0a3:	cmp    BYTE PTR [r14+0x35],0x0
  42c0a8:	mov    ebx,r9d
  42c0ab:	je     42c196 <flatcc_json_printer_int8_enum_field@@Base+0x136>
  42c0b1:	mov    r15,rdi
  42c0b4:	mov    eax,DWORD PTR [rsi+0x18]
  42c0b7:	lea    edx,[rax+0x1]
  42c0ba:	mov    DWORD PTR [rsi+0x18],edx
  42c0bd:	test   eax,eax
  42c0bf:	je     42c0d0 <flatcc_json_printer_int8_enum_field@@Base+0x70>
  42c0c1:	mov    rax,QWORD PTR [r14+0x28]
  42c0c5:	lea    rdx,[rax+0x1]
  42c0c9:	mov    QWORD PTR [r14+0x28],rdx
  42c0cd:	mov    BYTE PTR [rax],0x2c
  42c0d0:	movsxd rdx,r8d
  42c0d3:	mov    rdi,r14
  42c0d6:	mov    rsi,rcx
  42c0d9:	call   42ae90 <flatcc_json_printer_string_field@@Base+0x80>
  42c0de:	cmp    BYTE PTR [r14+0x33],0x0
  42c0e3:	je     42c130 <flatcc_json_printer_int8_enum_field@@Base+0xd0>
  42c0e5:	mov    rsi,QWORD PTR [r14+0x28]
  42c0e9:	mov    eax,ebx
  42c0eb:	shr    al,0x7
  42c0ee:	movzx  edi,al
  42c0f1:	test   bl,bl
  42c0f3:	js     42c140 <flatcc_json_printer_int8_enum_field@@Base+0xe0>
  42c0f5:	cmp    bl,0x64
  42c0f8:	jb     42c14e <flatcc_json_printer_int8_enum_field@@Base+0xee>
  42c0fa:	mov    BYTE PTR [rsi+0x3],0x0
  42c0fe:	movzx  eax,bl
  42c101:	lea    ecx,[rax+rax*4]
  42c104:	lea    ecx,[rax+rcx*8]
  42c107:	shr    ecx,0xc
  42c10a:	mov    dl,0x64
  42c10c:	mov    eax,ecx
  42c10e:	mul    dl
  42c110:	sub    bl,al
  42c112:	movzx  eax,bl
  42c115:	lea    rdx,[rip+0x10d94]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42c11c:	movzx  eax,WORD PTR [rdx+rax*2]
  42c120:	mov    WORD PTR [rsi+0x1],ax
  42c124:	or     cl,0x30
  42c127:	mov    BYTE PTR [rsi],cl
  42c129:	mov    eax,0x3
  42c12e:	jmp    42c18f <flatcc_json_printer_int8_enum_field@@Base+0x12f>
  42c130:	movsx  esi,bl
  42c133:	mov    rdi,r14
  42c136:	mov    rax,r15
  42c139:	pop    rbx
  42c13a:	pop    r14
  42c13c:	pop    r15
  42c13e:	jmp    rax
  42c140:	mov    BYTE PTR [rsi],0x2d
  42c143:	add    rsi,0x1
  42c147:	neg    bl
  42c149:	cmp    bl,0x64
  42c14c:	jae    42c0fa <flatcc_json_printer_int8_enum_field@@Base+0x9a>
  42c14e:	cmp    bl,0xa
  42c151:	jb     42c181 <flatcc_json_printer_int8_enum_field@@Base+0x121>
  42c153:	mov    BYTE PTR [rsi+0x2],0x0
  42c157:	movzx  eax,bl
  42c15a:	lea    ecx,[rax+rax*4]
  42c15d:	lea    eax,[rax+rcx*8]
  42c160:	shr    eax,0xc
  42c163:	mov    cl,0x64
  42c165:	mul    cl
  42c167:	sub    bl,al
  42c169:	movzx  eax,bl
  42c16c:	lea    rcx,[rip+0x10d3d]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42c173:	movzx  eax,WORD PTR [rcx+rax*2]
  42c177:	mov    WORD PTR [rsi],ax
  42c17a:	mov    eax,0x2
  42c17f:	jmp    42c18f <flatcc_json_printer_int8_enum_field@@Base+0x12f>
  42c181:	mov    BYTE PTR [rsi+0x1],0x0
  42c185:	add    bl,0x30
  42c188:	mov    BYTE PTR [rsi],bl
  42c18a:	mov    eax,0x1
  42c18f:	add    rax,rdi
  42c192:	add    QWORD PTR [r14+0x28],rax
  42c196:	pop    rbx
  42c197:	pop    r14
  42c199:	pop    r15
  42c19b:	ret    
  42c19c:	nop    DWORD PTR [rax+0x0]

000000000042c1a0 <flatcc_json_printer_int16_enum_field@@Base>:
  42c1a0:	push   rbp
  42c1a1:	push   r14
  42c1a3:	push   rbx
  42c1a4:	mov    rbx,rdi
  42c1a7:	mov    rdi,QWORD PTR [rsp+0x20]
  42c1ac:	lea    eax,[rdx+rdx*1]
  42c1af:	add    eax,0x4
  42c1b2:	cmp    eax,DWORD PTR [rsi+0x10]
  42c1b5:	jge    42c1e3 <flatcc_json_printer_int16_enum_field@@Base+0x43>
  42c1b7:	mov    rdx,QWORD PTR [rsi+0x8]
  42c1bb:	mov    eax,eax
  42c1bd:	movzx  eax,WORD PTR [rdx+rax*1]
  42c1c1:	test   rax,rax
  42c1c4:	je     42c1e3 <flatcc_json_printer_int16_enum_field@@Base+0x43>
  42c1c6:	add    rax,QWORD PTR [rsi]
  42c1c9:	je     42c1e3 <flatcc_json_printer_int16_enum_field@@Base+0x43>
  42c1cb:	movzx  ebp,WORD PTR [rax]
  42c1ce:	cmp    bp,r9w
  42c1d2:	jne    42c1f0 <flatcc_json_printer_int16_enum_field@@Base+0x50>
  42c1d4:	cmp    BYTE PTR [rbx+0x34],0x0
  42c1d8:	mov    ebp,r9d
  42c1db:	jne    42c370 <flatcc_json_printer_int16_enum_field@@Base+0x1d0>
  42c1e1:	jmp    42c1f0 <flatcc_json_printer_int16_enum_field@@Base+0x50>
  42c1e3:	cmp    BYTE PTR [rbx+0x35],0x0
  42c1e7:	mov    ebp,r9d
  42c1ea:	je     42c370 <flatcc_json_printer_int16_enum_field@@Base+0x1d0>
  42c1f0:	mov    r14,rdi
  42c1f3:	mov    eax,DWORD PTR [rsi+0x18]
  42c1f6:	lea    edx,[rax+0x1]
  42c1f9:	mov    DWORD PTR [rsi+0x18],edx
  42c1fc:	test   eax,eax
  42c1fe:	je     42c20f <flatcc_json_printer_int16_enum_field@@Base+0x6f>
  42c200:	mov    rax,QWORD PTR [rbx+0x28]
  42c204:	lea    rdx,[rax+0x1]
  42c208:	mov    QWORD PTR [rbx+0x28],rdx
  42c20c:	mov    BYTE PTR [rax],0x2c
  42c20f:	movsxd rdx,r8d
  42c212:	mov    rdi,rbx
  42c215:	mov    rsi,rcx
  42c218:	call   42ae90 <flatcc_json_printer_string_field@@Base+0x80>
  42c21d:	cmp    BYTE PTR [rbx+0x33],0x0
  42c221:	je     42c259 <flatcc_json_printer_int16_enum_field@@Base+0xb9>
  42c223:	mov    rdi,QWORD PTR [rbx+0x28]
  42c227:	movzx  r8d,bp
  42c22b:	test   r8w,r8w
  42c22f:	jns    42c23a <flatcc_json_printer_int16_enum_field@@Base+0x9a>
  42c231:	mov    BYTE PTR [rdi],0x2d
  42c234:	add    rdi,0x1
  42c238:	neg    ebp
  42c23a:	shr    r8d,0xf
  42c23e:	movzx  esi,bp
  42c241:	cmp    esi,0x3e8
  42c247:	jb     42c268 <flatcc_json_printer_int16_enum_field@@Base+0xc8>
  42c249:	xor    ecx,ecx
  42c24b:	cmp    esi,0x270f
  42c251:	seta   cl
  42c254:	or     ecx,0x4
  42c257:	jmp    42c28d <flatcc_json_printer_int16_enum_field@@Base+0xed>
  42c259:	movsx  esi,bp
  42c25c:	mov    rdi,rbx
  42c25f:	mov    rax,r14
  42c262:	pop    rbx
  42c263:	pop    r14
  42c265:	pop    rbp
  42c266:	jmp    rax
  42c268:	cmp    esi,0x64
  42c26b:	jb     42c282 <flatcc_json_printer_int16_enum_field@@Base+0xe2>
  42c26d:	mov    BYTE PTR [rdi+0x3],0x0
  42c271:	add    rdi,0x3
  42c275:	mov    ecx,0x3
  42c27a:	mov    rdx,rdi
  42c27d:	jmp    42c335 <flatcc_json_printer_int16_enum_field@@Base+0x195>
  42c282:	xor    ecx,ecx
  42c284:	cmp    esi,0x9
  42c287:	seta   cl
  42c28a:	add    ecx,0x1
  42c28d:	mov    eax,ecx
  42c28f:	lea    rdx,[rdi+rax*1]
  42c293:	mov    BYTE PTR [rdi+rax*1],0x0
  42c297:	test   cl,0x1
  42c29a:	jne    42c2fd <flatcc_json_printer_int16_enum_field@@Base+0x15d>
  42c29c:	cmp    cl,0x2
  42c29f:	je     42c2d3 <flatcc_json_printer_int16_enum_field@@Base+0x133>
  42c2a1:	cmp    cl,0x4
  42c2a4:	jne    42c369 <flatcc_json_printer_int16_enum_field@@Base+0x1c9>
  42c2aa:	mov    eax,esi
  42c2ac:	shr    eax,0x2
  42c2af:	imul   ebp,eax,0x147b
  42c2b5:	shr    ebp,0x11
  42c2b8:	imul   eax,ebp,0x64
  42c2bb:	sub    esi,eax
  42c2bd:	movzx  eax,si
  42c2c0:	lea    rsi,[rip+0x10be9]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42c2c7:	movzx  eax,WORD PTR [rsi+rax*2]
  42c2cb:	mov    WORD PTR [rdx-0x2],ax
  42c2cf:	lea    rdx,[rdx-0x2]
  42c2d3:	movzx  eax,bp
  42c2d6:	mov    esi,eax
  42c2d8:	shr    esi,0x2
  42c2db:	imul   esi,esi,0x147b
  42c2e1:	shr    esi,0x11
  42c2e4:	imul   esi,esi,0x64
  42c2e7:	sub    eax,esi
  42c2e9:	movzx  eax,ax
  42c2ec:	lea    rsi,[rip+0x10bbd]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42c2f3:	movzx  eax,WORD PTR [rsi+rax*2]
  42c2f7:	mov    WORD PTR [rdx-0x2],ax
  42c2fb:	jmp    42c369 <flatcc_json_printer_int16_enum_field@@Base+0x1c9>
  42c2fd:	cmp    cl,0x1
  42c300:	je     42c361 <flatcc_json_printer_int16_enum_field@@Base+0x1c1>
  42c302:	cmp    cl,0x3
  42c305:	je     42c335 <flatcc_json_printer_int16_enum_field@@Base+0x195>
  42c307:	cmp    cl,0x5
  42c30a:	jne    42c369 <flatcc_json_printer_int16_enum_field@@Base+0x1c9>
  42c30c:	mov    eax,esi
  42c30e:	shr    eax,0x2
  42c311:	imul   ebp,eax,0x147b
  42c317:	shr    ebp,0x11
  42c31a:	imul   eax,ebp,0x64
  42c31d:	sub    esi,eax
  42c31f:	movzx  eax,si
  42c322:	lea    rsi,[rip+0x10b87]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42c329:	movzx  eax,WORD PTR [rsi+rax*2]
  42c32d:	mov    WORD PTR [rdx-0x2],ax
  42c331:	lea    rdx,[rdx-0x2]
  42c335:	movzx  eax,bp
  42c338:	mov    esi,eax
  42c33a:	shr    esi,0x2
  42c33d:	imul   ebp,esi,0x147b
  42c343:	shr    ebp,0x11
  42c346:	imul   esi,ebp,0x64
  42c349:	sub    eax,esi
  42c34b:	movzx  eax,ax
  42c34e:	lea    rsi,[rip+0x10b5b]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42c355:	movzx  eax,WORD PTR [rsi+rax*2]
  42c359:	mov    WORD PTR [rdx-0x2],ax
  42c35d:	lea    rdx,[rdx-0x2]
  42c361:	add    bpl,0x30
  42c365:	mov    BYTE PTR [rdx-0x1],bpl
  42c369:	add    ecx,r8d
  42c36c:	add    QWORD PTR [rbx+0x28],rcx
  42c370:	pop    rbx
  42c371:	pop    r14
  42c373:	pop    rbp
  42c374:	ret    
  42c375:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c37f:	nop

000000000042c380 <flatcc_json_printer_int32_enum_field@@Base>:
  42c380:	push   rbp
  42c381:	push   r14
  42c383:	push   rbx
  42c384:	mov    rbx,rdi
  42c387:	mov    rdi,QWORD PTR [rsp+0x20]
  42c38c:	lea    eax,[rdx+rdx*1]
  42c38f:	add    eax,0x4
  42c392:	cmp    eax,DWORD PTR [rsi+0x10]
  42c395:	jge    42c3bd <flatcc_json_printer_int32_enum_field@@Base+0x3d>
  42c397:	mov    rdx,QWORD PTR [rsi+0x8]
  42c39b:	mov    eax,eax
  42c39d:	movzx  eax,WORD PTR [rdx+rax*1]
  42c3a1:	test   rax,rax
  42c3a4:	je     42c3bd <flatcc_json_printer_int32_enum_field@@Base+0x3d>
  42c3a6:	add    rax,QWORD PTR [rsi]
  42c3a9:	je     42c3bd <flatcc_json_printer_int32_enum_field@@Base+0x3d>
  42c3ab:	mov    ebp,DWORD PTR [rax]
  42c3ad:	cmp    ebp,r9d
  42c3b0:	jne    42c3c6 <flatcc_json_printer_int32_enum_field@@Base+0x46>
  42c3b2:	cmp    BYTE PTR [rbx+0x34],0x0
  42c3b6:	mov    ebp,r9d
  42c3b9:	jne    42c421 <flatcc_json_printer_int32_enum_field@@Base+0xa1>
  42c3bb:	jmp    42c3c6 <flatcc_json_printer_int32_enum_field@@Base+0x46>
  42c3bd:	cmp    BYTE PTR [rbx+0x35],0x0
  42c3c1:	mov    ebp,r9d
  42c3c4:	je     42c421 <flatcc_json_printer_int32_enum_field@@Base+0xa1>
  42c3c6:	mov    r14,rdi
  42c3c9:	mov    eax,DWORD PTR [rsi+0x18]
  42c3cc:	lea    edx,[rax+0x1]
  42c3cf:	mov    DWORD PTR [rsi+0x18],edx
  42c3d2:	test   eax,eax
  42c3d4:	je     42c3e5 <flatcc_json_printer_int32_enum_field@@Base+0x65>
  42c3d6:	mov    rax,QWORD PTR [rbx+0x28]
  42c3da:	lea    rdx,[rax+0x1]
  42c3de:	mov    QWORD PTR [rbx+0x28],rdx
  42c3e2:	mov    BYTE PTR [rax],0x2c
  42c3e5:	movsxd rdx,r8d
  42c3e8:	mov    rdi,rbx
  42c3eb:	mov    rsi,rcx
  42c3ee:	call   42ae90 <flatcc_json_printer_string_field@@Base+0x80>
  42c3f3:	cmp    BYTE PTR [rbx+0x33],0x0
  42c3f7:	je     42c426 <flatcc_json_printer_int32_enum_field@@Base+0xa6>
  42c3f9:	mov    rsi,QWORD PTR [rbx+0x28]
  42c3fd:	mov    r14d,ebp
  42c400:	shr    r14d,0x1f
  42c404:	test   ebp,ebp
  42c406:	jns    42c411 <flatcc_json_printer_int32_enum_field@@Base+0x91>
  42c408:	mov    BYTE PTR [rsi],0x2d
  42c40b:	add    rsi,0x1
  42c40f:	neg    ebp
  42c411:	mov    edi,ebp
  42c413:	call   42a270 <flatcc_json_printer_uint32@@Base+0x20>
  42c418:	add    eax,r14d
  42c41b:	cdqe   
  42c41d:	add    QWORD PTR [rbx+0x28],rax
  42c421:	pop    rbx
  42c422:	pop    r14
  42c424:	pop    rbp
  42c425:	ret    
  42c426:	mov    rdi,rbx
  42c429:	mov    esi,ebp
  42c42b:	mov    rax,r14
  42c42e:	pop    rbx
  42c42f:	pop    r14
  42c431:	pop    rbp
  42c432:	jmp    rax
  42c434:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c43e:	xchg   ax,ax

000000000042c440 <flatcc_json_printer_int64_enum_field@@Base>:
  42c440:	push   r15
  42c442:	push   r14
  42c444:	push   rbx
  42c445:	mov    rbx,rdi
  42c448:	mov    rdi,QWORD PTR [rsp+0x20]
  42c44d:	lea    eax,[rdx+rdx*1]
  42c450:	add    eax,0x4
  42c453:	cmp    eax,DWORD PTR [rsi+0x10]
  42c456:	jge    42c47f <flatcc_json_printer_int64_enum_field@@Base+0x3f>
  42c458:	mov    rdx,QWORD PTR [rsi+0x8]
  42c45c:	mov    eax,eax
  42c45e:	movzx  eax,WORD PTR [rdx+rax*1]
  42c462:	test   rax,rax
  42c465:	je     42c47f <flatcc_json_printer_int64_enum_field@@Base+0x3f>
  42c467:	add    rax,QWORD PTR [rsi]
  42c46a:	je     42c47f <flatcc_json_printer_int64_enum_field@@Base+0x3f>
  42c46c:	mov    r14,QWORD PTR [rax]
  42c46f:	cmp    r14,r9
  42c472:	jne    42c488 <flatcc_json_printer_int64_enum_field@@Base+0x48>
  42c474:	cmp    BYTE PTR [rbx+0x34],0x0
  42c478:	mov    r14,r9
  42c47b:	jne    42c4e6 <flatcc_json_printer_int64_enum_field@@Base+0xa6>
  42c47d:	jmp    42c488 <flatcc_json_printer_int64_enum_field@@Base+0x48>
  42c47f:	cmp    BYTE PTR [rbx+0x35],0x0
  42c483:	mov    r14,r9
  42c486:	je     42c4e6 <flatcc_json_printer_int64_enum_field@@Base+0xa6>
  42c488:	mov    r15,rdi
  42c48b:	mov    eax,DWORD PTR [rsi+0x18]
  42c48e:	lea    edx,[rax+0x1]
  42c491:	mov    DWORD PTR [rsi+0x18],edx
  42c494:	test   eax,eax
  42c496:	je     42c4a7 <flatcc_json_printer_int64_enum_field@@Base+0x67>
  42c498:	mov    rax,QWORD PTR [rbx+0x28]
  42c49c:	lea    rdx,[rax+0x1]
  42c4a0:	mov    QWORD PTR [rbx+0x28],rdx
  42c4a4:	mov    BYTE PTR [rax],0x2c
  42c4a7:	movsxd rdx,r8d
  42c4aa:	mov    rdi,rbx
  42c4ad:	mov    rsi,rcx
  42c4b0:	call   42ae90 <flatcc_json_printer_string_field@@Base+0x80>
  42c4b5:	cmp    BYTE PTR [rbx+0x33],0x0
  42c4b9:	je     42c4ec <flatcc_json_printer_int64_enum_field@@Base+0xac>
  42c4bb:	mov    rsi,QWORD PTR [rbx+0x28]
  42c4bf:	mov    r15,r14
  42c4c2:	shr    r15,0x3f
  42c4c6:	test   r14,r14
  42c4c9:	jns    42c4d5 <flatcc_json_printer_int64_enum_field@@Base+0x95>
  42c4cb:	mov    BYTE PTR [rsi],0x2d
  42c4ce:	add    rsi,0x1
  42c4d2:	neg    r14
  42c4d5:	mov    rdi,r14
  42c4d8:	call   42a500 <flatcc_json_printer_uint64@@Base+0x20>
  42c4dd:	add    eax,r15d
  42c4e0:	cdqe   
  42c4e2:	add    QWORD PTR [rbx+0x28],rax
  42c4e6:	pop    rbx
  42c4e7:	pop    r14
  42c4e9:	pop    r15
  42c4eb:	ret    
  42c4ec:	mov    rdi,rbx
  42c4ef:	mov    rsi,r14
  42c4f2:	mov    rax,r15
  42c4f5:	pop    rbx
  42c4f6:	pop    r14
  42c4f8:	pop    r15
  42c4fa:	jmp    rax
  42c4fc:	nop    DWORD PTR [rax+0x0]

000000000042c500 <flatcc_json_printer_bool_enum_field@@Base>:
  42c500:	push   rbp
  42c501:	push   r14
  42c503:	push   rbx
  42c504:	mov    rbx,rdi
  42c507:	mov    rdi,QWORD PTR [rsp+0x20]
  42c50c:	lea    eax,[rdx+rdx*1]
  42c50f:	add    eax,0x4
  42c512:	cmp    eax,DWORD PTR [rsi+0x10]
  42c515:	jge    42c53e <flatcc_json_printer_bool_enum_field@@Base+0x3e>
  42c517:	mov    rdx,QWORD PTR [rsi+0x8]
  42c51b:	mov    eax,eax
  42c51d:	movzx  eax,WORD PTR [rdx+rax*1]
  42c521:	test   rax,rax
  42c524:	je     42c53e <flatcc_json_printer_bool_enum_field@@Base+0x3e>
  42c526:	add    rax,QWORD PTR [rsi]
  42c529:	je     42c53e <flatcc_json_printer_bool_enum_field@@Base+0x3e>
  42c52b:	mov    bpl,BYTE PTR [rax]
  42c52e:	cmp    bpl,r9b
  42c531:	jne    42c547 <flatcc_json_printer_bool_enum_field@@Base+0x47>
  42c533:	cmp    BYTE PTR [rbx+0x34],0x0
  42c537:	mov    ebp,r9d
  42c53a:	jne    42c5b9 <flatcc_json_printer_bool_enum_field@@Base+0xb9>
  42c53c:	jmp    42c547 <flatcc_json_printer_bool_enum_field@@Base+0x47>
  42c53e:	cmp    BYTE PTR [rbx+0x35],0x0
  42c542:	mov    ebp,r9d
  42c545:	je     42c5b9 <flatcc_json_printer_bool_enum_field@@Base+0xb9>
  42c547:	mov    r14,rdi
  42c54a:	mov    eax,DWORD PTR [rsi+0x18]
  42c54d:	lea    edx,[rax+0x1]
  42c550:	mov    DWORD PTR [rsi+0x18],edx
  42c553:	test   eax,eax
  42c555:	je     42c566 <flatcc_json_printer_bool_enum_field@@Base+0x66>
  42c557:	mov    rax,QWORD PTR [rbx+0x28]
  42c55b:	lea    rdx,[rax+0x1]
  42c55f:	mov    QWORD PTR [rbx+0x28],rdx
  42c563:	mov    BYTE PTR [rax],0x2c
  42c566:	movsxd rdx,r8d
  42c569:	mov    rdi,rbx
  42c56c:	mov    rsi,rcx
  42c56f:	call   42ae90 <flatcc_json_printer_string_field@@Base+0x80>
  42c574:	cmp    BYTE PTR [rbx+0x33],0x0
  42c578:	je     42c594 <flatcc_json_printer_bool_enum_field@@Base+0x94>
  42c57a:	mov    rax,QWORD PTR [rbx+0x28]
  42c57e:	test   bpl,bpl
  42c581:	je     42c5a4 <flatcc_json_printer_bool_enum_field@@Base+0xa4>
  42c583:	mov    BYTE PTR [rax+0x4],0x0
  42c587:	mov    DWORD PTR [rax],0x65757274
  42c58d:	mov    eax,0x4
  42c592:	jmp    42c5b5 <flatcc_json_printer_bool_enum_field@@Base+0xb5>
  42c594:	movzx  esi,bpl
  42c598:	mov    rdi,rbx
  42c59b:	mov    rax,r14
  42c59e:	pop    rbx
  42c59f:	pop    r14
  42c5a1:	pop    rbp
  42c5a2:	jmp    rax
  42c5a4:	mov    WORD PTR [rax+0x4],0x65
  42c5aa:	mov    DWORD PTR [rax],0x736c6166
  42c5b0:	mov    eax,0x5
  42c5b5:	add    QWORD PTR [rbx+0x28],rax
  42c5b9:	pop    rbx
  42c5ba:	pop    r14
  42c5bc:	pop    rbp
  42c5bd:	ret    
  42c5be:	xchg   ax,ax

000000000042c5c0 <flatcc_json_printer_uint8_struct_field@@Base>:
  42c5c0:	push   r14
  42c5c2:	push   rbx
  42c5c3:	push   rax
  42c5c4:	mov    r14,rdi
  42c5c7:	mov    bl,BYTE PTR [rdx+rcx*1]
  42c5ca:	test   esi,esi
  42c5cc:	je     42c5dd <flatcc_json_printer_uint8_struct_field@@Base+0x1d>
  42c5ce:	mov    rax,QWORD PTR [r14+0x28]
  42c5d2:	lea    rcx,[rax+0x1]
  42c5d6:	mov    QWORD PTR [r14+0x28],rcx
  42c5da:	mov    BYTE PTR [rax],0x2c
  42c5dd:	movsxd rdx,r9d
  42c5e0:	mov    rdi,r14
  42c5e3:	mov    rsi,r8
  42c5e6:	call   42ae90 <flatcc_json_printer_string_field@@Base+0x80>
  42c5eb:	mov    rdx,QWORD PTR [r14+0x28]
  42c5ef:	cmp    bl,0x64
  42c5f2:	jb     42c62c <flatcc_json_printer_uint8_struct_field@@Base+0x6c>
  42c5f4:	mov    BYTE PTR [rdx+0x3],0x0
  42c5f8:	movzx  eax,bl
  42c5fb:	lea    ecx,[rax+rax*4]
  42c5fe:	lea    ecx,[rax+rcx*8]
  42c601:	shr    ecx,0xc
  42c604:	mov    sil,0x64
  42c607:	mov    eax,ecx
  42c609:	mul    sil
  42c60c:	sub    bl,al
  42c60e:	movzx  eax,bl
  42c611:	lea    rsi,[rip+0x10898]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42c618:	movzx  eax,WORD PTR [rsi+rax*2]
  42c61c:	mov    WORD PTR [rdx+0x1],ax
  42c620:	or     cl,0x30
  42c623:	mov    BYTE PTR [rdx],cl
  42c625:	mov    eax,0x3
  42c62a:	jmp    42c66d <flatcc_json_printer_uint8_struct_field@@Base+0xad>
  42c62c:	cmp    bl,0xa
  42c62f:	jb     42c65f <flatcc_json_printer_uint8_struct_field@@Base+0x9f>
  42c631:	mov    BYTE PTR [rdx+0x2],0x0
  42c635:	movzx  eax,bl
  42c638:	lea    ecx,[rax+rax*4]
  42c63b:	lea    eax,[rax+rcx*8]
  42c63e:	shr    eax,0xc
  42c641:	mov    cl,0x64
  42c643:	mul    cl
  42c645:	sub    bl,al
  42c647:	movzx  eax,bl
  42c64a:	lea    rcx,[rip+0x1085f]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42c651:	movzx  eax,WORD PTR [rcx+rax*2]
  42c655:	mov    WORD PTR [rdx],ax
  42c658:	mov    eax,0x2
  42c65d:	jmp    42c66d <flatcc_json_printer_uint8_struct_field@@Base+0xad>
  42c65f:	mov    BYTE PTR [rdx+0x1],0x0
  42c663:	add    bl,0x30
  42c666:	mov    BYTE PTR [rdx],bl
  42c668:	mov    eax,0x1
  42c66d:	add    QWORD PTR [r14+0x28],rax
  42c671:	add    rsp,0x8
  42c675:	pop    rbx
  42c676:	pop    r14
  42c678:	ret    
  42c679:	nop    DWORD PTR [rax+0x0]

000000000042c680 <flatcc_json_printer_uint16_struct_field@@Base>:
  42c680:	push   rbp
  42c681:	push   rbx
  42c682:	push   rax
  42c683:	mov    rbx,rdi
  42c686:	movzx  ebp,WORD PTR [rdx+rcx*1]
  42c68a:	test   esi,esi
  42c68c:	je     42c69d <flatcc_json_printer_uint16_struct_field@@Base+0x1d>
  42c68e:	mov    rax,QWORD PTR [rbx+0x28]
  42c692:	lea    rcx,[rax+0x1]
  42c696:	mov    QWORD PTR [rbx+0x28],rcx
  42c69a:	mov    BYTE PTR [rax],0x2c
  42c69d:	movsxd rdx,r9d
  42c6a0:	mov    rdi,rbx
  42c6a3:	mov    rsi,r8
  42c6a6:	call   42ae90 <flatcc_json_printer_string_field@@Base+0x80>
  42c6ab:	mov    rsi,QWORD PTR [rbx+0x28]
  42c6af:	movzx  edx,bp
  42c6b2:	cmp    edx,0x3e8
  42c6b8:	jb     42c6ca <flatcc_json_printer_uint16_struct_field@@Base+0x4a>
  42c6ba:	xor    eax,eax
  42c6bc:	cmp    edx,0x270f
  42c6c2:	seta   al
  42c6c5:	or     eax,0x4
  42c6c8:	jmp    42c6ef <flatcc_json_printer_uint16_struct_field@@Base+0x6f>
  42c6ca:	cmp    edx,0x64
  42c6cd:	jb     42c6e4 <flatcc_json_printer_uint16_struct_field@@Base+0x64>
  42c6cf:	mov    BYTE PTR [rsi+0x3],0x0
  42c6d3:	add    rsi,0x3
  42c6d7:	mov    eax,0x3
  42c6dc:	mov    rcx,rsi
  42c6df:	jmp    42c791 <flatcc_json_printer_uint16_struct_field@@Base+0x111>
  42c6e4:	xor    eax,eax
  42c6e6:	cmp    edx,0x9
  42c6e9:	seta   al
  42c6ec:	add    eax,0x1
  42c6ef:	mov    edi,eax
  42c6f1:	lea    rcx,[rsi+rdi*1]
  42c6f5:	mov    BYTE PTR [rsi+rdi*1],0x0
  42c6f9:	test   al,0x1
  42c6fb:	jne    42c75c <flatcc_json_printer_uint16_struct_field@@Base+0xdc>
  42c6fd:	cmp    al,0x2
  42c6ff:	je     42c732 <flatcc_json_printer_uint16_struct_field@@Base+0xb2>
  42c701:	cmp    al,0x4
  42c703:	jne    42c7c5 <flatcc_json_printer_uint16_struct_field@@Base+0x145>
  42c709:	mov    esi,edx
  42c70b:	shr    esi,0x2
  42c70e:	imul   ebp,esi,0x147b
  42c714:	shr    ebp,0x11
  42c717:	imul   esi,ebp,0x64
  42c71a:	sub    edx,esi
  42c71c:	movzx  edx,dx
  42c71f:	lea    rsi,[rip+0x1078a]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42c726:	movzx  edx,WORD PTR [rsi+rdx*2]
  42c72a:	mov    WORD PTR [rcx-0x2],dx
  42c72e:	lea    rcx,[rcx-0x2]
  42c732:	movzx  edx,bp
  42c735:	mov    esi,edx
  42c737:	shr    esi,0x2
  42c73a:	imul   esi,esi,0x147b
  42c740:	shr    esi,0x11
  42c743:	imul   esi,esi,0x64
  42c746:	sub    edx,esi
  42c748:	movzx  edx,dx
  42c74b:	lea    rsi,[rip+0x1075e]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42c752:	movzx  edx,WORD PTR [rsi+rdx*2]
  42c756:	mov    WORD PTR [rcx-0x2],dx
  42c75a:	jmp    42c7c5 <flatcc_json_printer_uint16_struct_field@@Base+0x145>
  42c75c:	cmp    al,0x1
  42c75e:	je     42c7bd <flatcc_json_printer_uint16_struct_field@@Base+0x13d>
  42c760:	cmp    al,0x3
  42c762:	je     42c791 <flatcc_json_printer_uint16_struct_field@@Base+0x111>
  42c764:	cmp    al,0x5
  42c766:	jne    42c7c5 <flatcc_json_printer_uint16_struct_field@@Base+0x145>
  42c768:	mov    esi,edx
  42c76a:	shr    esi,0x2
  42c76d:	imul   ebp,esi,0x147b
  42c773:	shr    ebp,0x11
  42c776:	imul   esi,ebp,0x64
  42c779:	sub    edx,esi
  42c77b:	movzx  edx,dx
  42c77e:	lea    rsi,[rip+0x1072b]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42c785:	movzx  edx,WORD PTR [rsi+rdx*2]
  42c789:	mov    WORD PTR [rcx-0x2],dx
  42c78d:	lea    rcx,[rcx-0x2]
  42c791:	movzx  edx,bp
  42c794:	mov    esi,edx
  42c796:	shr    esi,0x2
  42c799:	imul   ebp,esi,0x147b
  42c79f:	shr    ebp,0x11
  42c7a2:	imul   esi,ebp,0x64
  42c7a5:	sub    edx,esi
  42c7a7:	movzx  edx,dx
  42c7aa:	lea    rsi,[rip+0x106ff]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42c7b1:	movzx  edx,WORD PTR [rsi+rdx*2]
  42c7b5:	mov    WORD PTR [rcx-0x2],dx
  42c7b9:	lea    rcx,[rcx-0x2]
  42c7bd:	add    bpl,0x30
  42c7c1:	mov    BYTE PTR [rcx-0x1],bpl
  42c7c5:	mov    eax,eax
  42c7c7:	add    QWORD PTR [rbx+0x28],rax
  42c7cb:	add    rsp,0x8
  42c7cf:	pop    rbx
  42c7d0:	pop    rbp
  42c7d1:	ret    
  42c7d2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c7dc:	nop    DWORD PTR [rax+0x0]

000000000042c7e0 <flatcc_json_printer_uint32_struct_field@@Base>:
  42c7e0:	push   rbp
  42c7e1:	push   rbx
  42c7e2:	push   rax
  42c7e3:	mov    rbx,rdi
  42c7e6:	mov    ebp,DWORD PTR [rdx+rcx*1]
  42c7e9:	test   esi,esi
  42c7eb:	je     42c7fc <flatcc_json_printer_uint32_struct_field@@Base+0x1c>
  42c7ed:	mov    rax,QWORD PTR [rbx+0x28]
  42c7f1:	lea    rcx,[rax+0x1]
  42c7f5:	mov    QWORD PTR [rbx+0x28],rcx
  42c7f9:	mov    BYTE PTR [rax],0x2c
  42c7fc:	movsxd rdx,r9d
  42c7ff:	mov    rdi,rbx
  42c802:	mov    rsi,r8
  42c805:	call   42ae90 <flatcc_json_printer_string_field@@Base+0x80>
  42c80a:	mov    rsi,QWORD PTR [rbx+0x28]
  42c80e:	mov    edi,ebp
  42c810:	call   42a270 <flatcc_json_printer_uint32@@Base+0x20>
  42c815:	cdqe   
  42c817:	add    QWORD PTR [rbx+0x28],rax
  42c81b:	add    rsp,0x8
  42c81f:	pop    rbx
  42c820:	pop    rbp
  42c821:	ret    
  42c822:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c82c:	nop    DWORD PTR [rax+0x0]

000000000042c830 <flatcc_json_printer_uint64_struct_field@@Base>:
  42c830:	push   r14
  42c832:	push   rbx
  42c833:	push   rax
  42c834:	mov    rbx,rdi
  42c837:	mov    r14,QWORD PTR [rdx+rcx*1]
  42c83b:	test   esi,esi
  42c83d:	je     42c84e <flatcc_json_printer_uint64_struct_field@@Base+0x1e>
  42c83f:	mov    rax,QWORD PTR [rbx+0x28]
  42c843:	lea    rcx,[rax+0x1]
  42c847:	mov    QWORD PTR [rbx+0x28],rcx
  42c84b:	mov    BYTE PTR [rax],0x2c
  42c84e:	movsxd rdx,r9d
  42c851:	mov    rdi,rbx
  42c854:	mov    rsi,r8
  42c857:	call   42ae90 <flatcc_json_printer_string_field@@Base+0x80>
  42c85c:	mov    rsi,QWORD PTR [rbx+0x28]
  42c860:	mov    rdi,r14
  42c863:	call   42a500 <flatcc_json_printer_uint64@@Base+0x20>
  42c868:	cdqe   
  42c86a:	add    QWORD PTR [rbx+0x28],rax
  42c86e:	add    rsp,0x8
  42c872:	pop    rbx
  42c873:	pop    r14
  42c875:	ret    
  42c876:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000042c880 <flatcc_json_printer_int8_struct_field@@Base>:
  42c880:	push   r15
  42c882:	push   r14
  42c884:	push   rbx
  42c885:	mov    r15,rdi
  42c888:	mov    bl,BYTE PTR [rdx+rcx*1]
  42c88b:	movzx  r14d,bl
  42c88f:	test   esi,esi
  42c891:	je     42c8a2 <flatcc_json_printer_int8_struct_field@@Base+0x22>
  42c893:	mov    rax,QWORD PTR [r15+0x28]
  42c897:	lea    rcx,[rax+0x1]
  42c89b:	mov    QWORD PTR [r15+0x28],rcx
  42c89f:	mov    BYTE PTR [rax],0x2c
  42c8a2:	movsxd rdx,r9d
  42c8a5:	mov    rdi,r15
  42c8a8:	mov    rsi,r8
  42c8ab:	call   42ae90 <flatcc_json_printer_string_field@@Base+0x80>
  42c8b0:	mov    rdx,QWORD PTR [r15+0x28]
  42c8b4:	test   r14b,r14b
  42c8b7:	jns    42c8c2 <flatcc_json_printer_int8_struct_field@@Base+0x42>
  42c8b9:	mov    BYTE PTR [rdx],0x2d
  42c8bc:	add    rdx,0x1
  42c8c0:	neg    bl
  42c8c2:	shr    r14,0x7
  42c8c6:	cmp    bl,0x64
  42c8c9:	jb     42c903 <flatcc_json_printer_int8_struct_field@@Base+0x83>
  42c8cb:	mov    BYTE PTR [rdx+0x3],0x0
  42c8cf:	movzx  eax,bl
  42c8d2:	lea    ecx,[rax+rax*4]
  42c8d5:	lea    ecx,[rax+rcx*8]
  42c8d8:	shr    ecx,0xc
  42c8db:	mov    sil,0x64
  42c8de:	mov    eax,ecx
  42c8e0:	mul    sil
  42c8e3:	sub    bl,al
  42c8e5:	movzx  eax,bl
  42c8e8:	lea    rsi,[rip+0x105c1]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42c8ef:	movzx  eax,WORD PTR [rsi+rax*2]
  42c8f3:	mov    WORD PTR [rdx+0x1],ax
  42c8f7:	or     cl,0x30
  42c8fa:	mov    BYTE PTR [rdx],cl
  42c8fc:	mov    eax,0x3
  42c901:	jmp    42c944 <flatcc_json_printer_int8_struct_field@@Base+0xc4>
  42c903:	cmp    bl,0xa
  42c906:	jb     42c936 <flatcc_json_printer_int8_struct_field@@Base+0xb6>
  42c908:	mov    BYTE PTR [rdx+0x2],0x0
  42c90c:	movzx  eax,bl
  42c90f:	lea    ecx,[rax+rax*4]
  42c912:	lea    eax,[rax+rcx*8]
  42c915:	shr    eax,0xc
  42c918:	mov    cl,0x64
  42c91a:	mul    cl
  42c91c:	sub    bl,al
  42c91e:	movzx  eax,bl
  42c921:	lea    rcx,[rip+0x10588]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42c928:	movzx  eax,WORD PTR [rcx+rax*2]
  42c92c:	mov    WORD PTR [rdx],ax
  42c92f:	mov    eax,0x2
  42c934:	jmp    42c944 <flatcc_json_printer_int8_struct_field@@Base+0xc4>
  42c936:	mov    BYTE PTR [rdx+0x1],0x0
  42c93a:	add    bl,0x30
  42c93d:	mov    BYTE PTR [rdx],bl
  42c93f:	mov    eax,0x1
  42c944:	add    rax,r14
  42c947:	add    QWORD PTR [r15+0x28],rax
  42c94b:	pop    rbx
  42c94c:	pop    r14
  42c94e:	pop    r15
  42c950:	ret    
  42c951:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c95b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042c960 <flatcc_json_printer_int16_struct_field@@Base>:
  42c960:	push   rbp
  42c961:	push   r14
  42c963:	push   rbx
  42c964:	mov    rbx,rdi
  42c967:	movzx  ebp,WORD PTR [rdx+rcx*1]
  42c96b:	test   esi,esi
  42c96d:	je     42c97e <flatcc_json_printer_int16_struct_field@@Base+0x1e>
  42c96f:	mov    rax,QWORD PTR [rbx+0x28]
  42c973:	lea    rcx,[rax+0x1]
  42c977:	mov    QWORD PTR [rbx+0x28],rcx
  42c97b:	mov    BYTE PTR [rax],0x2c
  42c97e:	movzx  r14d,bp
  42c982:	movsxd rdx,r9d
  42c985:	mov    rdi,rbx
  42c988:	mov    rsi,r8
  42c98b:	call   42ae90 <flatcc_json_printer_string_field@@Base+0x80>
  42c990:	mov    rsi,QWORD PTR [rbx+0x28]
  42c994:	test   r14w,r14w
  42c998:	jns    42c9a3 <flatcc_json_printer_int16_struct_field@@Base+0x43>
  42c99a:	mov    BYTE PTR [rsi],0x2d
  42c99d:	add    rsi,0x1
  42c9a1:	neg    ebp
  42c9a3:	shr    r14d,0xf
  42c9a7:	movzx  edx,bp
  42c9aa:	cmp    edx,0x3e8
  42c9b0:	jb     42c9c2 <flatcc_json_printer_int16_struct_field@@Base+0x62>
  42c9b2:	xor    eax,eax
  42c9b4:	cmp    edx,0x270f
  42c9ba:	seta   al
  42c9bd:	or     eax,0x4
  42c9c0:	jmp    42c9e7 <flatcc_json_printer_int16_struct_field@@Base+0x87>
  42c9c2:	cmp    edx,0x64
  42c9c5:	jb     42c9dc <flatcc_json_printer_int16_struct_field@@Base+0x7c>
  42c9c7:	mov    BYTE PTR [rsi+0x3],0x0
  42c9cb:	add    rsi,0x3
  42c9cf:	mov    eax,0x3
  42c9d4:	mov    rcx,rsi
  42c9d7:	jmp    42ca89 <flatcc_json_printer_int16_struct_field@@Base+0x129>
  42c9dc:	xor    eax,eax
  42c9de:	cmp    edx,0x9
  42c9e1:	seta   al
  42c9e4:	add    eax,0x1
  42c9e7:	mov    edi,eax
  42c9e9:	lea    rcx,[rsi+rdi*1]
  42c9ed:	mov    BYTE PTR [rsi+rdi*1],0x0
  42c9f1:	test   al,0x1
  42c9f3:	jne    42ca54 <flatcc_json_printer_int16_struct_field@@Base+0xf4>
  42c9f5:	cmp    al,0x2
  42c9f7:	je     42ca2a <flatcc_json_printer_int16_struct_field@@Base+0xca>
  42c9f9:	cmp    al,0x4
  42c9fb:	jne    42cabd <flatcc_json_printer_int16_struct_field@@Base+0x15d>
  42ca01:	mov    esi,edx
  42ca03:	shr    esi,0x2
  42ca06:	imul   ebp,esi,0x147b
  42ca0c:	shr    ebp,0x11
  42ca0f:	imul   esi,ebp,0x64
  42ca12:	sub    edx,esi
  42ca14:	movzx  edx,dx
  42ca17:	lea    rsi,[rip+0x10492]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42ca1e:	movzx  edx,WORD PTR [rsi+rdx*2]
  42ca22:	mov    WORD PTR [rcx-0x2],dx
  42ca26:	lea    rcx,[rcx-0x2]
  42ca2a:	movzx  edx,bp
  42ca2d:	mov    esi,edx
  42ca2f:	shr    esi,0x2
  42ca32:	imul   esi,esi,0x147b
  42ca38:	shr    esi,0x11
  42ca3b:	imul   esi,esi,0x64
  42ca3e:	sub    edx,esi
  42ca40:	movzx  edx,dx
  42ca43:	lea    rsi,[rip+0x10466]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42ca4a:	movzx  edx,WORD PTR [rsi+rdx*2]
  42ca4e:	mov    WORD PTR [rcx-0x2],dx
  42ca52:	jmp    42cabd <flatcc_json_printer_int16_struct_field@@Base+0x15d>
  42ca54:	cmp    al,0x1
  42ca56:	je     42cab5 <flatcc_json_printer_int16_struct_field@@Base+0x155>
  42ca58:	cmp    al,0x3
  42ca5a:	je     42ca89 <flatcc_json_printer_int16_struct_field@@Base+0x129>
  42ca5c:	cmp    al,0x5
  42ca5e:	jne    42cabd <flatcc_json_printer_int16_struct_field@@Base+0x15d>
  42ca60:	mov    esi,edx
  42ca62:	shr    esi,0x2
  42ca65:	imul   ebp,esi,0x147b
  42ca6b:	shr    ebp,0x11
  42ca6e:	imul   esi,ebp,0x64
  42ca71:	sub    edx,esi
  42ca73:	movzx  edx,dx
  42ca76:	lea    rsi,[rip+0x10433]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42ca7d:	movzx  edx,WORD PTR [rsi+rdx*2]
  42ca81:	mov    WORD PTR [rcx-0x2],dx
  42ca85:	lea    rcx,[rcx-0x2]
  42ca89:	movzx  edx,bp
  42ca8c:	mov    esi,edx
  42ca8e:	shr    esi,0x2
  42ca91:	imul   ebp,esi,0x147b
  42ca97:	shr    ebp,0x11
  42ca9a:	imul   esi,ebp,0x64
  42ca9d:	sub    edx,esi
  42ca9f:	movzx  edx,dx
  42caa2:	lea    rsi,[rip+0x10407]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42caa9:	movzx  edx,WORD PTR [rsi+rdx*2]
  42caad:	mov    WORD PTR [rcx-0x2],dx
  42cab1:	lea    rcx,[rcx-0x2]
  42cab5:	add    bpl,0x30
  42cab9:	mov    BYTE PTR [rcx-0x1],bpl
  42cabd:	add    eax,r14d
  42cac0:	add    QWORD PTR [rbx+0x28],rax
  42cac4:	pop    rbx
  42cac5:	pop    r14
  42cac7:	pop    rbp
  42cac8:	ret    
  42cac9:	nop    DWORD PTR [rax+0x0]

000000000042cad0 <flatcc_json_printer_int32_struct_field@@Base>:
  42cad0:	push   rbp
  42cad1:	push   r14
  42cad3:	push   rbx
  42cad4:	mov    r14,rdi
  42cad7:	mov    ebx,DWORD PTR [rdx+rcx*1]
  42cada:	test   esi,esi
  42cadc:	je     42caed <flatcc_json_printer_int32_struct_field@@Base+0x1d>
  42cade:	mov    rax,QWORD PTR [r14+0x28]
  42cae2:	lea    rcx,[rax+0x1]
  42cae6:	mov    QWORD PTR [r14+0x28],rcx
  42caea:	mov    BYTE PTR [rax],0x2c
  42caed:	movsxd rdx,r9d
  42caf0:	mov    rdi,r14
  42caf3:	mov    rsi,r8
  42caf6:	call   42ae90 <flatcc_json_printer_string_field@@Base+0x80>
  42cafb:	mov    rsi,QWORD PTR [r14+0x28]
  42caff:	mov    ebp,ebx
  42cb01:	shr    ebp,0x1f
  42cb04:	test   ebx,ebx
  42cb06:	jns    42cb11 <flatcc_json_printer_int32_struct_field@@Base+0x41>
  42cb08:	mov    BYTE PTR [rsi],0x2d
  42cb0b:	add    rsi,0x1
  42cb0f:	neg    ebx
  42cb11:	mov    edi,ebx
  42cb13:	call   42a270 <flatcc_json_printer_uint32@@Base+0x20>
  42cb18:	add    eax,ebp
  42cb1a:	cdqe   
  42cb1c:	add    QWORD PTR [r14+0x28],rax
  42cb20:	pop    rbx
  42cb21:	pop    r14
  42cb23:	pop    rbp
  42cb24:	ret    
  42cb25:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42cb2f:	nop

000000000042cb30 <flatcc_json_printer_int64_struct_field@@Base>:
  42cb30:	push   r15
  42cb32:	push   r14
  42cb34:	push   rbx
  42cb35:	mov    r14,rdi
  42cb38:	mov    r15,QWORD PTR [rdx+rcx*1]
  42cb3c:	test   esi,esi
  42cb3e:	je     42cb4f <flatcc_json_printer_int64_struct_field@@Base+0x1f>
  42cb40:	mov    rax,QWORD PTR [r14+0x28]
  42cb44:	lea    rcx,[rax+0x1]
  42cb48:	mov    QWORD PTR [r14+0x28],rcx
  42cb4c:	mov    BYTE PTR [rax],0x2c
  42cb4f:	movsxd rdx,r9d
  42cb52:	mov    rdi,r14
  42cb55:	mov    rsi,r8
  42cb58:	call   42ae90 <flatcc_json_printer_string_field@@Base+0x80>
  42cb5d:	mov    rsi,QWORD PTR [r14+0x28]
  42cb61:	mov    rbx,r15
  42cb64:	shr    rbx,0x3f
  42cb68:	test   r15,r15
  42cb6b:	jns    42cb77 <flatcc_json_printer_int64_struct_field@@Base+0x47>
  42cb6d:	mov    BYTE PTR [rsi],0x2d
  42cb70:	add    rsi,0x1
  42cb74:	neg    r15
  42cb77:	mov    rdi,r15
  42cb7a:	call   42a500 <flatcc_json_printer_uint64@@Base+0x20>
  42cb7f:	add    eax,ebx
  42cb81:	cdqe   
  42cb83:	add    QWORD PTR [r14+0x28],rax
  42cb87:	pop    rbx
  42cb88:	pop    r14
  42cb8a:	pop    r15
  42cb8c:	ret    
  42cb8d:	nop    DWORD PTR [rax]

000000000042cb90 <flatcc_json_printer_bool_struct_field@@Base>:
  42cb90:	push   rbp
  42cb91:	push   rbx
  42cb92:	push   rax
  42cb93:	mov    rbx,rdi
  42cb96:	mov    bpl,BYTE PTR [rdx+rcx*1]
  42cb9a:	test   esi,esi
  42cb9c:	je     42cbad <flatcc_json_printer_bool_struct_field@@Base+0x1d>
  42cb9e:	mov    rax,QWORD PTR [rbx+0x28]
  42cba2:	lea    rcx,[rax+0x1]
  42cba6:	mov    QWORD PTR [rbx+0x28],rcx
  42cbaa:	mov    BYTE PTR [rax],0x2c
  42cbad:	movsxd rdx,r9d
  42cbb0:	mov    rdi,rbx
  42cbb3:	mov    rsi,r8
  42cbb6:	call   42ae90 <flatcc_json_printer_string_field@@Base+0x80>
  42cbbb:	mov    rax,QWORD PTR [rbx+0x28]
  42cbbf:	test   bpl,bpl
  42cbc2:	je     42cbd5 <flatcc_json_printer_bool_struct_field@@Base+0x45>
  42cbc4:	mov    BYTE PTR [rax+0x4],0x0
  42cbc8:	mov    DWORD PTR [rax],0x65757274
  42cbce:	mov    eax,0x4
  42cbd3:	jmp    42cbe6 <flatcc_json_printer_bool_struct_field@@Base+0x56>
  42cbd5:	mov    WORD PTR [rax+0x4],0x65
  42cbdb:	mov    DWORD PTR [rax],0x736c6166
  42cbe1:	mov    eax,0x5
  42cbe6:	add    QWORD PTR [rbx+0x28],rax
  42cbea:	add    rsp,0x8
  42cbee:	pop    rbx
  42cbef:	pop    rbp
  42cbf0:	ret    
  42cbf1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42cbfb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042cc00 <flatcc_json_printer_float_struct_field@@Base>:
  42cc00:	push   rbx
  42cc01:	sub    rsp,0x10
  42cc05:	mov    rbx,rdi
  42cc08:	vmovss xmm0,DWORD PTR [rdx+rcx*1]
  42cc0d:	vmovss DWORD PTR [rsp+0xc],xmm0
  42cc13:	test   esi,esi
  42cc15:	je     42cc26 <flatcc_json_printer_float_struct_field@@Base+0x26>
  42cc17:	mov    rax,QWORD PTR [rbx+0x28]
  42cc1b:	lea    rcx,[rax+0x1]
  42cc1f:	mov    QWORD PTR [rbx+0x28],rcx
  42cc23:	mov    BYTE PTR [rax],0x2c
  42cc26:	movsxd rdx,r9d
  42cc29:	mov    rdi,rbx
  42cc2c:	mov    rsi,r8
  42cc2f:	call   42ae90 <flatcc_json_printer_string_field@@Base+0x80>
  42cc34:	vmovss xmm0,DWORD PTR [rsp+0xc]
  42cc3a:	vcvtss2sd xmm0,xmm0,xmm0
  42cc3e:	mov    rdi,QWORD PTR [rbx+0x28]
  42cc42:	call   428ec0 <flatcc_json_printer_fmt_float@@Base+0x10>
  42cc47:	cdqe   
  42cc49:	add    QWORD PTR [rbx+0x28],rax
  42cc4d:	add    rsp,0x10
  42cc51:	pop    rbx
  42cc52:	ret    
  42cc53:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42cc5d:	nop    DWORD PTR [rax]

000000000042cc60 <flatcc_json_printer_double_struct_field@@Base>:
  42cc60:	push   rbx
  42cc61:	sub    rsp,0x10
  42cc65:	mov    rbx,rdi
  42cc68:	vmovsd xmm0,QWORD PTR [rdx+rcx*1]
  42cc6d:	vmovsd QWORD PTR [rsp+0x8],xmm0
  42cc73:	test   esi,esi
  42cc75:	je     42cc86 <flatcc_json_printer_double_struct_field@@Base+0x26>
  42cc77:	mov    rax,QWORD PTR [rbx+0x28]
  42cc7b:	lea    rcx,[rax+0x1]
  42cc7f:	mov    QWORD PTR [rbx+0x28],rcx
  42cc83:	mov    BYTE PTR [rax],0x2c
  42cc86:	movsxd rdx,r9d
  42cc89:	mov    rdi,rbx
  42cc8c:	mov    rsi,r8
  42cc8f:	call   42ae90 <flatcc_json_printer_string_field@@Base+0x80>
  42cc94:	mov    rdi,QWORD PTR [rbx+0x28]
  42cc98:	vmovsd xmm0,QWORD PTR [rsp+0x8]
  42cc9e:	call   428ec0 <flatcc_json_printer_fmt_float@@Base+0x10>
  42cca3:	cdqe   
  42cca5:	add    QWORD PTR [rbx+0x28],rax
  42cca9:	add    rsp,0x10
  42ccad:	pop    rbx
  42ccae:	ret    
  42ccaf:	nop

000000000042ccb0 <flatcc_json_printer_uint8_enum_struct_field@@Base>:
  42ccb0:	push   r15
  42ccb2:	push   r14
  42ccb4:	push   rbx
  42ccb5:	mov    r14,rdi
  42ccb8:	mov    r15,QWORD PTR [rsp+0x20]
  42ccbd:	mov    bl,BYTE PTR [rdx+rcx*1]
  42ccc0:	test   esi,esi
  42ccc2:	je     42ccd3 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x23>
  42ccc4:	mov    rax,QWORD PTR [r14+0x28]
  42ccc8:	lea    rcx,[rax+0x1]
  42cccc:	mov    QWORD PTR [r14+0x28],rcx
  42ccd0:	mov    BYTE PTR [rax],0x2c
  42ccd3:	movsxd rdx,r9d
  42ccd6:	mov    rdi,r14
  42ccd9:	mov    rsi,r8
  42ccdc:	call   42ae90 <flatcc_json_printer_string_field@@Base+0x80>
  42cce1:	cmp    BYTE PTR [r14+0x33],0x0
  42cce6:	je     42cd29 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x79>
  42cce8:	mov    rdx,QWORD PTR [r14+0x28]
  42ccec:	cmp    bl,0x64
  42ccef:	jb     42cd39 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x89>
  42ccf1:	mov    BYTE PTR [rdx+0x3],0x0
  42ccf5:	movzx  eax,bl
  42ccf8:	lea    ecx,[rax+rax*4]
  42ccfb:	lea    ecx,[rax+rcx*8]
  42ccfe:	shr    ecx,0xc
  42cd01:	mov    sil,0x64
  42cd04:	mov    eax,ecx
  42cd06:	mul    sil
  42cd09:	sub    bl,al
  42cd0b:	movzx  eax,bl
  42cd0e:	lea    rsi,[rip+0x1019b]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42cd15:	movzx  eax,WORD PTR [rsi+rax*2]
  42cd19:	mov    WORD PTR [rdx+0x1],ax
  42cd1d:	or     cl,0x30
  42cd20:	mov    BYTE PTR [rdx],cl
  42cd22:	mov    eax,0x3
  42cd27:	jmp    42cd7a <flatcc_json_printer_uint8_enum_struct_field@@Base+0xca>
  42cd29:	movzx  esi,bl
  42cd2c:	mov    rdi,r14
  42cd2f:	mov    rax,r15
  42cd32:	pop    rbx
  42cd33:	pop    r14
  42cd35:	pop    r15
  42cd37:	jmp    rax
  42cd39:	cmp    bl,0xa
  42cd3c:	jb     42cd6c <flatcc_json_printer_uint8_enum_struct_field@@Base+0xbc>
  42cd3e:	mov    BYTE PTR [rdx+0x2],0x0
  42cd42:	movzx  eax,bl
  42cd45:	lea    ecx,[rax+rax*4]
  42cd48:	lea    eax,[rax+rcx*8]
  42cd4b:	shr    eax,0xc
  42cd4e:	mov    cl,0x64
  42cd50:	mul    cl
  42cd52:	sub    bl,al
  42cd54:	movzx  eax,bl
  42cd57:	lea    rcx,[rip+0x10152]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42cd5e:	movzx  eax,WORD PTR [rcx+rax*2]
  42cd62:	mov    WORD PTR [rdx],ax
  42cd65:	mov    eax,0x2
  42cd6a:	jmp    42cd7a <flatcc_json_printer_uint8_enum_struct_field@@Base+0xca>
  42cd6c:	mov    BYTE PTR [rdx+0x1],0x0
  42cd70:	add    bl,0x30
  42cd73:	mov    BYTE PTR [rdx],bl
  42cd75:	mov    eax,0x1
  42cd7a:	add    QWORD PTR [r14+0x28],rax
  42cd7e:	pop    rbx
  42cd7f:	pop    r14
  42cd81:	pop    r15
  42cd83:	ret    
  42cd84:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42cd8e:	xchg   ax,ax

000000000042cd90 <flatcc_json_printer_uint16_enum_struct_field@@Base>:
  42cd90:	push   rbp
  42cd91:	push   r14
  42cd93:	push   rbx
  42cd94:	mov    r14,rdi
  42cd97:	mov    rbx,QWORD PTR [rsp+0x20]
  42cd9c:	movzx  ebp,WORD PTR [rdx+rcx*1]
  42cda0:	test   esi,esi
  42cda2:	je     42cdb3 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x23>
  42cda4:	mov    rax,QWORD PTR [r14+0x28]
  42cda8:	lea    rcx,[rax+0x1]
  42cdac:	mov    QWORD PTR [r14+0x28],rcx
  42cdb0:	mov    BYTE PTR [rax],0x2c
  42cdb3:	movsxd rdx,r9d
  42cdb6:	mov    rdi,r14
  42cdb9:	mov    rsi,r8
  42cdbc:	call   42ae90 <flatcc_json_printer_string_field@@Base+0x80>
  42cdc1:	cmp    BYTE PTR [r14+0x33],0x0
  42cdc6:	je     42cde7 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x57>
  42cdc8:	mov    rsi,QWORD PTR [r14+0x28]
  42cdcc:	movzx  edx,bp
  42cdcf:	cmp    edx,0x3e8
  42cdd5:	jb     42cdf6 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x66>
  42cdd7:	xor    eax,eax
  42cdd9:	cmp    edx,0x270f
  42cddf:	seta   al
  42cde2:	or     eax,0x4
  42cde5:	jmp    42ce1b <flatcc_json_printer_uint16_enum_struct_field@@Base+0x8b>
  42cde7:	movzx  esi,bp
  42cdea:	mov    rdi,r14
  42cded:	mov    rax,rbx
  42cdf0:	pop    rbx
  42cdf1:	pop    r14
  42cdf3:	pop    rbp
  42cdf4:	jmp    rax
  42cdf6:	cmp    edx,0x64
  42cdf9:	jb     42ce10 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x80>
  42cdfb:	mov    BYTE PTR [rsi+0x3],0x0
  42cdff:	add    rsi,0x3
  42ce03:	mov    eax,0x3
  42ce08:	mov    rcx,rsi
  42ce0b:	jmp    42cebd <flatcc_json_printer_uint16_enum_struct_field@@Base+0x12d>
  42ce10:	xor    eax,eax
  42ce12:	cmp    edx,0x9
  42ce15:	seta   al
  42ce18:	add    eax,0x1
  42ce1b:	mov    edi,eax
  42ce1d:	lea    rcx,[rsi+rdi*1]
  42ce21:	mov    BYTE PTR [rsi+rdi*1],0x0
  42ce25:	test   al,0x1
  42ce27:	jne    42ce88 <flatcc_json_printer_uint16_enum_struct_field@@Base+0xf8>
  42ce29:	cmp    al,0x2
  42ce2b:	je     42ce5e <flatcc_json_printer_uint16_enum_struct_field@@Base+0xce>
  42ce2d:	cmp    al,0x4
  42ce2f:	jne    42cef1 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x161>
  42ce35:	mov    esi,edx
  42ce37:	shr    esi,0x2
  42ce3a:	imul   ebp,esi,0x147b
  42ce40:	shr    ebp,0x11
  42ce43:	imul   esi,ebp,0x64
  42ce46:	sub    edx,esi
  42ce48:	movzx  edx,dx
  42ce4b:	lea    rsi,[rip+0x1005e]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42ce52:	movzx  edx,WORD PTR [rsi+rdx*2]
  42ce56:	mov    WORD PTR [rcx-0x2],dx
  42ce5a:	lea    rcx,[rcx-0x2]
  42ce5e:	movzx  edx,bp
  42ce61:	mov    esi,edx
  42ce63:	shr    esi,0x2
  42ce66:	imul   esi,esi,0x147b
  42ce6c:	shr    esi,0x11
  42ce6f:	imul   esi,esi,0x64
  42ce72:	sub    edx,esi
  42ce74:	movzx  edx,dx
  42ce77:	lea    rsi,[rip+0x10032]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42ce7e:	movzx  edx,WORD PTR [rsi+rdx*2]
  42ce82:	mov    WORD PTR [rcx-0x2],dx
  42ce86:	jmp    42cef1 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x161>
  42ce88:	cmp    al,0x1
  42ce8a:	je     42cee9 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x159>
  42ce8c:	cmp    al,0x3
  42ce8e:	je     42cebd <flatcc_json_printer_uint16_enum_struct_field@@Base+0x12d>
  42ce90:	cmp    al,0x5
  42ce92:	jne    42cef1 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x161>
  42ce94:	mov    esi,edx
  42ce96:	shr    esi,0x2
  42ce99:	imul   ebp,esi,0x147b
  42ce9f:	shr    ebp,0x11
  42cea2:	imul   esi,ebp,0x64
  42cea5:	sub    edx,esi
  42cea7:	movzx  edx,dx
  42ceaa:	lea    rsi,[rip+0xffff]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42ceb1:	movzx  edx,WORD PTR [rsi+rdx*2]
  42ceb5:	mov    WORD PTR [rcx-0x2],dx
  42ceb9:	lea    rcx,[rcx-0x2]
  42cebd:	movzx  edx,bp
  42cec0:	mov    esi,edx
  42cec2:	shr    esi,0x2
  42cec5:	imul   ebp,esi,0x147b
  42cecb:	shr    ebp,0x11
  42cece:	imul   esi,ebp,0x64
  42ced1:	sub    edx,esi
  42ced3:	movzx  edx,dx
  42ced6:	lea    rsi,[rip+0xffd3]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42cedd:	movzx  edx,WORD PTR [rsi+rdx*2]
  42cee1:	mov    WORD PTR [rcx-0x2],dx
  42cee5:	lea    rcx,[rcx-0x2]
  42cee9:	add    bpl,0x30
  42ceed:	mov    BYTE PTR [rcx-0x1],bpl
  42cef1:	mov    eax,eax
  42cef3:	add    QWORD PTR [r14+0x28],rax
  42cef7:	pop    rbx
  42cef8:	pop    r14
  42cefa:	pop    rbp
  42cefb:	ret    
  42cefc:	nop    DWORD PTR [rax+0x0]

000000000042cf00 <flatcc_json_printer_uint32_enum_struct_field@@Base>:
  42cf00:	push   rbp
  42cf01:	push   r14
  42cf03:	push   rbx
  42cf04:	mov    rbx,rdi
  42cf07:	mov    r14,QWORD PTR [rsp+0x20]
  42cf0c:	mov    ebp,DWORD PTR [rdx+rcx*1]
  42cf0f:	test   esi,esi
  42cf11:	je     42cf22 <flatcc_json_printer_uint32_enum_struct_field@@Base+0x22>
  42cf13:	mov    rax,QWORD PTR [rbx+0x28]
  42cf17:	lea    rcx,[rax+0x1]
  42cf1b:	mov    QWORD PTR [rbx+0x28],rcx
  42cf1f:	mov    BYTE PTR [rax],0x2c
  42cf22:	movsxd rdx,r9d
  42cf25:	mov    rdi,rbx
  42cf28:	mov    rsi,r8
  42cf2b:	call   42ae90 <flatcc_json_printer_string_field@@Base+0x80>
  42cf30:	cmp    BYTE PTR [rbx+0x33],0x0
  42cf34:	je     42cf4c <flatcc_json_printer_uint32_enum_struct_field@@Base+0x4c>
  42cf36:	mov    rsi,QWORD PTR [rbx+0x28]
  42cf3a:	mov    edi,ebp
  42cf3c:	call   42a270 <flatcc_json_printer_uint32@@Base+0x20>
  42cf41:	cdqe   
  42cf43:	add    QWORD PTR [rbx+0x28],rax
  42cf47:	pop    rbx
  42cf48:	pop    r14
  42cf4a:	pop    rbp
  42cf4b:	ret    
  42cf4c:	mov    rdi,rbx
  42cf4f:	mov    esi,ebp
  42cf51:	mov    rax,r14
  42cf54:	pop    rbx
  42cf55:	pop    r14
  42cf57:	pop    rbp
  42cf58:	jmp    rax
  42cf5a:	nop    WORD PTR [rax+rax*1+0x0]

000000000042cf60 <flatcc_json_printer_uint64_enum_struct_field@@Base>:
  42cf60:	push   r15
  42cf62:	push   r14
  42cf64:	push   rbx
  42cf65:	mov    rbx,rdi
  42cf68:	mov    r15,QWORD PTR [rsp+0x20]
  42cf6d:	mov    r14,QWORD PTR [rdx+rcx*1]
  42cf71:	test   esi,esi
  42cf73:	je     42cf84 <flatcc_json_printer_uint64_enum_struct_field@@Base+0x24>
  42cf75:	mov    rax,QWORD PTR [rbx+0x28]
  42cf79:	lea    rcx,[rax+0x1]
  42cf7d:	mov    QWORD PTR [rbx+0x28],rcx
  42cf81:	mov    BYTE PTR [rax],0x2c
  42cf84:	movsxd rdx,r9d
  42cf87:	mov    rdi,rbx
  42cf8a:	mov    rsi,r8
  42cf8d:	call   42ae90 <flatcc_json_printer_string_field@@Base+0x80>
  42cf92:	cmp    BYTE PTR [rbx+0x33],0x0
  42cf96:	je     42cfb0 <flatcc_json_printer_uint64_enum_struct_field@@Base+0x50>
  42cf98:	mov    rsi,QWORD PTR [rbx+0x28]
  42cf9c:	mov    rdi,r14
  42cf9f:	call   42a500 <flatcc_json_printer_uint64@@Base+0x20>
  42cfa4:	cdqe   
  42cfa6:	add    QWORD PTR [rbx+0x28],rax
  42cfaa:	pop    rbx
  42cfab:	pop    r14
  42cfad:	pop    r15
  42cfaf:	ret    
  42cfb0:	mov    rdi,rbx
  42cfb3:	mov    rsi,r14
  42cfb6:	mov    rax,r15
  42cfb9:	pop    rbx
  42cfba:	pop    r14
  42cfbc:	pop    r15
  42cfbe:	jmp    rax

000000000042cfc0 <flatcc_json_printer_int8_enum_struct_field@@Base>:
  42cfc0:	push   r15
  42cfc2:	push   r14
  42cfc4:	push   rbx
  42cfc5:	mov    r14,rdi
  42cfc8:	mov    r15,QWORD PTR [rsp+0x20]
  42cfcd:	mov    bl,BYTE PTR [rdx+rcx*1]
  42cfd0:	test   esi,esi
  42cfd2:	je     42cfe3 <flatcc_json_printer_int8_enum_struct_field@@Base+0x23>
  42cfd4:	mov    rax,QWORD PTR [r14+0x28]
  42cfd8:	lea    rcx,[rax+0x1]
  42cfdc:	mov    QWORD PTR [r14+0x28],rcx
  42cfe0:	mov    BYTE PTR [rax],0x2c
  42cfe3:	movsxd rdx,r9d
  42cfe6:	mov    rdi,r14
  42cfe9:	mov    rsi,r8
  42cfec:	call   42ae90 <flatcc_json_printer_string_field@@Base+0x80>
  42cff1:	cmp    BYTE PTR [r14+0x33],0x0
  42cff6:	je     42d04d <flatcc_json_printer_int8_enum_struct_field@@Base+0x8d>
  42cff8:	movzx  edx,bl
  42cffb:	mov    rsi,QWORD PTR [r14+0x28]
  42cfff:	test   dl,dl
  42d001:	jns    42d00c <flatcc_json_printer_int8_enum_struct_field@@Base+0x4c>
  42d003:	mov    BYTE PTR [rsi],0x2d
  42d006:	add    rsi,0x1
  42d00a:	neg    bl
  42d00c:	shr    rdx,0x7
  42d010:	cmp    bl,0x64
  42d013:	jb     42d05d <flatcc_json_printer_int8_enum_struct_field@@Base+0x9d>
  42d015:	mov    BYTE PTR [rsi+0x3],0x0
  42d019:	movzx  eax,bl
  42d01c:	lea    ecx,[rax+rax*4]
  42d01f:	lea    ecx,[rax+rcx*8]
  42d022:	shr    ecx,0xc
  42d025:	mov    dil,0x64
  42d028:	mov    eax,ecx
  42d02a:	mul    dil
  42d02d:	sub    bl,al
  42d02f:	movzx  eax,bl
  42d032:	lea    rdi,[rip+0xfe77]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42d039:	movzx  eax,WORD PTR [rdi+rax*2]
  42d03d:	mov    WORD PTR [rsi+0x1],ax
  42d041:	or     cl,0x30
  42d044:	mov    BYTE PTR [rsi],cl
  42d046:	mov    eax,0x3
  42d04b:	jmp    42d09e <flatcc_json_printer_int8_enum_struct_field@@Base+0xde>
  42d04d:	movsx  esi,bl
  42d050:	mov    rdi,r14
  42d053:	mov    rax,r15
  42d056:	pop    rbx
  42d057:	pop    r14
  42d059:	pop    r15
  42d05b:	jmp    rax
  42d05d:	cmp    bl,0xa
  42d060:	jb     42d090 <flatcc_json_printer_int8_enum_struct_field@@Base+0xd0>
  42d062:	mov    BYTE PTR [rsi+0x2],0x0
  42d066:	movzx  eax,bl
  42d069:	lea    ecx,[rax+rax*4]
  42d06c:	lea    eax,[rax+rcx*8]
  42d06f:	shr    eax,0xc
  42d072:	mov    cl,0x64
  42d074:	mul    cl
  42d076:	sub    bl,al
  42d078:	movzx  eax,bl
  42d07b:	lea    rcx,[rip+0xfe2e]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42d082:	movzx  eax,WORD PTR [rcx+rax*2]
  42d086:	mov    WORD PTR [rsi],ax
  42d089:	mov    eax,0x2
  42d08e:	jmp    42d09e <flatcc_json_printer_int8_enum_struct_field@@Base+0xde>
  42d090:	mov    BYTE PTR [rsi+0x1],0x0
  42d094:	add    bl,0x30
  42d097:	mov    BYTE PTR [rsi],bl
  42d099:	mov    eax,0x1
  42d09e:	add    rax,rdx
  42d0a1:	add    QWORD PTR [r14+0x28],rax
  42d0a5:	pop    rbx
  42d0a6:	pop    r14
  42d0a8:	pop    r15
  42d0aa:	ret    
  42d0ab:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042d0b0 <flatcc_json_printer_int16_enum_struct_field@@Base>:
  42d0b0:	push   rbp
  42d0b1:	push   r14
  42d0b3:	push   rbx
  42d0b4:	mov    r14,rdi
  42d0b7:	mov    rbx,QWORD PTR [rsp+0x20]
  42d0bc:	movzx  ebp,WORD PTR [rdx+rcx*1]
  42d0c0:	test   esi,esi
  42d0c2:	je     42d0d3 <flatcc_json_printer_int16_enum_struct_field@@Base+0x23>
  42d0c4:	mov    rax,QWORD PTR [r14+0x28]
  42d0c8:	lea    rcx,[rax+0x1]
  42d0cc:	mov    QWORD PTR [r14+0x28],rcx
  42d0d0:	mov    BYTE PTR [rax],0x2c
  42d0d3:	movsxd rdx,r9d
  42d0d6:	mov    rdi,r14
  42d0d9:	mov    rsi,r8
  42d0dc:	call   42ae90 <flatcc_json_printer_string_field@@Base+0x80>
  42d0e1:	cmp    BYTE PTR [r14+0x33],0x0
  42d0e6:	je     42d11e <flatcc_json_printer_int16_enum_struct_field@@Base+0x6e>
  42d0e8:	movzx  r8d,bp
  42d0ec:	mov    rdi,QWORD PTR [r14+0x28]
  42d0f0:	test   r8w,r8w
  42d0f4:	jns    42d0ff <flatcc_json_printer_int16_enum_struct_field@@Base+0x4f>
  42d0f6:	mov    BYTE PTR [rdi],0x2d
  42d0f9:	add    rdi,0x1
  42d0fd:	neg    ebp
  42d0ff:	shr    r8d,0xf
  42d103:	movzx  esi,bp
  42d106:	cmp    esi,0x3e8
  42d10c:	jb     42d12d <flatcc_json_printer_int16_enum_struct_field@@Base+0x7d>
  42d10e:	xor    ecx,ecx
  42d110:	cmp    esi,0x270f
  42d116:	seta   cl
  42d119:	or     ecx,0x4
  42d11c:	jmp    42d152 <flatcc_json_printer_int16_enum_struct_field@@Base+0xa2>
  42d11e:	movsx  esi,bp
  42d121:	mov    rdi,r14
  42d124:	mov    rax,rbx
  42d127:	pop    rbx
  42d128:	pop    r14
  42d12a:	pop    rbp
  42d12b:	jmp    rax
  42d12d:	cmp    esi,0x64
  42d130:	jb     42d147 <flatcc_json_printer_int16_enum_struct_field@@Base+0x97>
  42d132:	mov    BYTE PTR [rdi+0x3],0x0
  42d136:	add    rdi,0x3
  42d13a:	mov    ecx,0x3
  42d13f:	mov    rdx,rdi
  42d142:	jmp    42d1fa <flatcc_json_printer_int16_enum_struct_field@@Base+0x14a>
  42d147:	xor    ecx,ecx
  42d149:	cmp    esi,0x9
  42d14c:	seta   cl
  42d14f:	add    ecx,0x1
  42d152:	mov    eax,ecx
  42d154:	lea    rdx,[rdi+rax*1]
  42d158:	mov    BYTE PTR [rdi+rax*1],0x0
  42d15c:	test   cl,0x1
  42d15f:	jne    42d1c2 <flatcc_json_printer_int16_enum_struct_field@@Base+0x112>
  42d161:	cmp    cl,0x2
  42d164:	je     42d198 <flatcc_json_printer_int16_enum_struct_field@@Base+0xe8>
  42d166:	cmp    cl,0x4
  42d169:	jne    42d22e <flatcc_json_printer_int16_enum_struct_field@@Base+0x17e>
  42d16f:	mov    eax,esi
  42d171:	shr    eax,0x2
  42d174:	imul   ebp,eax,0x147b
  42d17a:	shr    ebp,0x11
  42d17d:	imul   eax,ebp,0x64
  42d180:	sub    esi,eax
  42d182:	movzx  eax,si
  42d185:	lea    rsi,[rip+0xfd24]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42d18c:	movzx  eax,WORD PTR [rsi+rax*2]
  42d190:	mov    WORD PTR [rdx-0x2],ax
  42d194:	lea    rdx,[rdx-0x2]
  42d198:	movzx  eax,bp
  42d19b:	mov    esi,eax
  42d19d:	shr    esi,0x2
  42d1a0:	imul   esi,esi,0x147b
  42d1a6:	shr    esi,0x11
  42d1a9:	imul   esi,esi,0x64
  42d1ac:	sub    eax,esi
  42d1ae:	movzx  eax,ax
  42d1b1:	lea    rsi,[rip+0xfcf8]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42d1b8:	movzx  eax,WORD PTR [rsi+rax*2]
  42d1bc:	mov    WORD PTR [rdx-0x2],ax
  42d1c0:	jmp    42d22e <flatcc_json_printer_int16_enum_struct_field@@Base+0x17e>
  42d1c2:	cmp    cl,0x1
  42d1c5:	je     42d226 <flatcc_json_printer_int16_enum_struct_field@@Base+0x176>
  42d1c7:	cmp    cl,0x3
  42d1ca:	je     42d1fa <flatcc_json_printer_int16_enum_struct_field@@Base+0x14a>
  42d1cc:	cmp    cl,0x5
  42d1cf:	jne    42d22e <flatcc_json_printer_int16_enum_struct_field@@Base+0x17e>
  42d1d1:	mov    eax,esi
  42d1d3:	shr    eax,0x2
  42d1d6:	imul   ebp,eax,0x147b
  42d1dc:	shr    ebp,0x11
  42d1df:	imul   eax,ebp,0x64
  42d1e2:	sub    esi,eax
  42d1e4:	movzx  eax,si
  42d1e7:	lea    rsi,[rip+0xfcc2]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42d1ee:	movzx  eax,WORD PTR [rsi+rax*2]
  42d1f2:	mov    WORD PTR [rdx-0x2],ax
  42d1f6:	lea    rdx,[rdx-0x2]
  42d1fa:	movzx  eax,bp
  42d1fd:	mov    esi,eax
  42d1ff:	shr    esi,0x2
  42d202:	imul   ebp,esi,0x147b
  42d208:	shr    ebp,0x11
  42d20b:	imul   esi,ebp,0x64
  42d20e:	sub    eax,esi
  42d210:	movzx  eax,ax
  42d213:	lea    rsi,[rip+0xfc96]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42d21a:	movzx  eax,WORD PTR [rsi+rax*2]
  42d21e:	mov    WORD PTR [rdx-0x2],ax
  42d222:	lea    rdx,[rdx-0x2]
  42d226:	add    bpl,0x30
  42d22a:	mov    BYTE PTR [rdx-0x1],bpl
  42d22e:	add    ecx,r8d
  42d231:	add    QWORD PTR [r14+0x28],rcx
  42d235:	pop    rbx
  42d236:	pop    r14
  42d238:	pop    rbp
  42d239:	ret    
  42d23a:	nop    WORD PTR [rax+rax*1+0x0]

000000000042d240 <flatcc_json_printer_int32_enum_struct_field@@Base>:
  42d240:	push   rbp
  42d241:	push   r14
  42d243:	push   rbx
  42d244:	mov    rbx,rdi
  42d247:	mov    r14,QWORD PTR [rsp+0x20]
  42d24c:	mov    ebp,DWORD PTR [rdx+rcx*1]
  42d24f:	test   esi,esi
  42d251:	je     42d262 <flatcc_json_printer_int32_enum_struct_field@@Base+0x22>
  42d253:	mov    rax,QWORD PTR [rbx+0x28]
  42d257:	lea    rcx,[rax+0x1]
  42d25b:	mov    QWORD PTR [rbx+0x28],rcx
  42d25f:	mov    BYTE PTR [rax],0x2c
  42d262:	movsxd rdx,r9d
  42d265:	mov    rdi,rbx
  42d268:	mov    rsi,r8
  42d26b:	call   42ae90 <flatcc_json_printer_string_field@@Base+0x80>
  42d270:	cmp    BYTE PTR [rbx+0x33],0x0
  42d274:	je     42d2a3 <flatcc_json_printer_int32_enum_struct_field@@Base+0x63>
  42d276:	mov    rsi,QWORD PTR [rbx+0x28]
  42d27a:	mov    r14d,ebp
  42d27d:	shr    r14d,0x1f
  42d281:	test   ebp,ebp
  42d283:	jns    42d28e <flatcc_json_printer_int32_enum_struct_field@@Base+0x4e>
  42d285:	mov    BYTE PTR [rsi],0x2d
  42d288:	add    rsi,0x1
  42d28c:	neg    ebp
  42d28e:	mov    edi,ebp
  42d290:	call   42a270 <flatcc_json_printer_uint32@@Base+0x20>
  42d295:	add    eax,r14d
  42d298:	cdqe   
  42d29a:	add    QWORD PTR [rbx+0x28],rax
  42d29e:	pop    rbx
  42d29f:	pop    r14
  42d2a1:	pop    rbp
  42d2a2:	ret    
  42d2a3:	mov    rdi,rbx
  42d2a6:	mov    esi,ebp
  42d2a8:	mov    rax,r14
  42d2ab:	pop    rbx
  42d2ac:	pop    r14
  42d2ae:	pop    rbp
  42d2af:	jmp    rax
  42d2b1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d2bb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042d2c0 <flatcc_json_printer_int64_enum_struct_field@@Base>:
  42d2c0:	push   r15
  42d2c2:	push   r14
  42d2c4:	push   rbx
  42d2c5:	mov    rbx,rdi
  42d2c8:	mov    r15,QWORD PTR [rsp+0x20]
  42d2cd:	mov    r14,QWORD PTR [rdx+rcx*1]
  42d2d1:	test   esi,esi
  42d2d3:	je     42d2e4 <flatcc_json_printer_int64_enum_struct_field@@Base+0x24>
  42d2d5:	mov    rax,QWORD PTR [rbx+0x28]
  42d2d9:	lea    rcx,[rax+0x1]
  42d2dd:	mov    QWORD PTR [rbx+0x28],rcx
  42d2e1:	mov    BYTE PTR [rax],0x2c
  42d2e4:	movsxd rdx,r9d
  42d2e7:	mov    rdi,rbx
  42d2ea:	mov    rsi,r8
  42d2ed:	call   42ae90 <flatcc_json_printer_string_field@@Base+0x80>
  42d2f2:	cmp    BYTE PTR [rbx+0x33],0x0
  42d2f6:	je     42d329 <flatcc_json_printer_int64_enum_struct_field@@Base+0x69>
  42d2f8:	mov    rsi,QWORD PTR [rbx+0x28]
  42d2fc:	mov    r15,r14
  42d2ff:	shr    r15,0x3f
  42d303:	test   r14,r14
  42d306:	jns    42d312 <flatcc_json_printer_int64_enum_struct_field@@Base+0x52>
  42d308:	mov    BYTE PTR [rsi],0x2d
  42d30b:	add    rsi,0x1
  42d30f:	neg    r14
  42d312:	mov    rdi,r14
  42d315:	call   42a500 <flatcc_json_printer_uint64@@Base+0x20>
  42d31a:	add    eax,r15d
  42d31d:	cdqe   
  42d31f:	add    QWORD PTR [rbx+0x28],rax
  42d323:	pop    rbx
  42d324:	pop    r14
  42d326:	pop    r15
  42d328:	ret    
  42d329:	mov    rdi,rbx
  42d32c:	mov    rsi,r14
  42d32f:	mov    rax,r15
  42d332:	pop    rbx
  42d333:	pop    r14
  42d335:	pop    r15
  42d337:	jmp    rax
  42d339:	nop    DWORD PTR [rax+0x0]

000000000042d340 <flatcc_json_printer_bool_enum_struct_field@@Base>:
  42d340:	push   rbp
  42d341:	push   r14
  42d343:	push   rbx
  42d344:	mov    rbx,rdi
  42d347:	mov    r14,QWORD PTR [rsp+0x20]
  42d34c:	mov    bpl,BYTE PTR [rdx+rcx*1]
  42d350:	test   esi,esi
  42d352:	je     42d363 <flatcc_json_printer_bool_enum_struct_field@@Base+0x23>
  42d354:	mov    rax,QWORD PTR [rbx+0x28]
  42d358:	lea    rcx,[rax+0x1]
  42d35c:	mov    QWORD PTR [rbx+0x28],rcx
  42d360:	mov    BYTE PTR [rax],0x2c
  42d363:	movsxd rdx,r9d
  42d366:	mov    rdi,rbx
  42d369:	mov    rsi,r8
  42d36c:	call   42ae90 <flatcc_json_printer_string_field@@Base+0x80>
  42d371:	cmp    BYTE PTR [rbx+0x33],0x0
  42d375:	je     42d391 <flatcc_json_printer_bool_enum_struct_field@@Base+0x51>
  42d377:	mov    rax,QWORD PTR [rbx+0x28]
  42d37b:	test   bpl,bpl
  42d37e:	je     42d3a1 <flatcc_json_printer_bool_enum_struct_field@@Base+0x61>
  42d380:	mov    BYTE PTR [rax+0x4],0x0
  42d384:	mov    DWORD PTR [rax],0x65757274
  42d38a:	mov    eax,0x4
  42d38f:	jmp    42d3b2 <flatcc_json_printer_bool_enum_struct_field@@Base+0x72>
  42d391:	movzx  esi,bpl
  42d395:	mov    rdi,rbx
  42d398:	mov    rax,r14
  42d39b:	pop    rbx
  42d39c:	pop    r14
  42d39e:	pop    rbp
  42d39f:	jmp    rax
  42d3a1:	mov    WORD PTR [rax+0x4],0x65
  42d3a7:	mov    DWORD PTR [rax],0x736c6166
  42d3ad:	mov    eax,0x5
  42d3b2:	add    QWORD PTR [rbx+0x28],rax
  42d3b6:	pop    rbx
  42d3b7:	pop    r14
  42d3b9:	pop    rbp
  42d3ba:	ret    
  42d3bb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042d3c0 <flatcc_json_printer_utype_vector_field@@Base>:
  42d3c0:	push   rbp
  42d3c1:	push   r15
  42d3c3:	push   r14
  42d3c5:	push   r13
  42d3c7:	push   r12
  42d3c9:	push   rbx
  42d3ca:	push   rax
  42d3cb:	lea    eax,[rdx+rdx*1]
  42d3ce:	add    eax,0x4
  42d3d1:	cmp    eax,DWORD PTR [rsi+0x10]
  42d3d4:	jge    42d7de <flatcc_json_printer_utype_vector_field@@Base+0x41e>
  42d3da:	mov    rdx,QWORD PTR [rsi+0x8]
  42d3de:	mov    eax,eax
  42d3e0:	movzx  r12d,WORD PTR [rdx+rax*1]
  42d3e5:	test   r12,r12
  42d3e8:	je     42d7de <flatcc_json_printer_utype_vector_field@@Base+0x41e>
  42d3ee:	add    r12,QWORD PTR [rsi]
  42d3f1:	je     42d7de <flatcc_json_printer_utype_vector_field@@Base+0x41e>
  42d3f7:	mov    r15,rdi
  42d3fa:	mov    eax,DWORD PTR [rsi+0x18]
  42d3fd:	lea    edx,[rax+0x1]
  42d400:	mov    DWORD PTR [rsi+0x18],edx
  42d403:	test   eax,eax
  42d405:	je     42d416 <flatcc_json_printer_utype_vector_field@@Base+0x56>
  42d407:	mov    rax,QWORD PTR [r15+0x28]
  42d40b:	lea    rdx,[rax+0x1]
  42d40f:	mov    QWORD PTR [r15+0x28],rdx
  42d413:	mov    BYTE PTR [rax],0x2c
  42d416:	mov    ebx,DWORD PTR [r12]
  42d41a:	mov    ebp,DWORD PTR [r12+rbx*1]
  42d41e:	movsxd rdx,r8d
  42d421:	mov    rdi,r15
  42d424:	mov    rsi,rcx
  42d427:	call   42ae90 <flatcc_json_printer_string_field@@Base+0x80>
  42d42c:	add    DWORD PTR [r15+0x38],0x1
  42d431:	mov    rax,QWORD PTR [r15+0x28]
  42d435:	lea    rcx,[rax+0x1]
  42d439:	mov    QWORD PTR [r15+0x28],rcx
  42d43d:	mov    BYTE PTR [rax],0x5b
  42d440:	test   ebp,ebp
  42d442:	je     42d724 <flatcc_json_printer_utype_vector_field@@Base+0x364>
  42d448:	add    r12,rbx
  42d44b:	cmp    BYTE PTR [r15+0x31],0x0
  42d450:	mov    r14,QWORD PTR [r15+0x28]
  42d454:	je     42d4f4 <flatcc_json_printer_utype_vector_field@@Base+0x134>
  42d45a:	lea    rax,[r14+0x1]
  42d45e:	mov    QWORD PTR [r15+0x28],rax
  42d462:	mov    BYTE PTR [r14],0xa
  42d466:	movsxd rax,DWORD PTR [r15+0x38]
  42d46a:	movzx  r14d,BYTE PTR [r15+0x31]
  42d46f:	imul   r14,rax
  42d473:	mov    rbx,QWORD PTR [r15+0x20]
  42d477:	mov    rdi,QWORD PTR [r15+0x28]
  42d47b:	lea    rax,[rdi+r14*1]
  42d47f:	cmp    rax,rbx
  42d482:	jbe    42d4dd <flatcc_json_printer_utype_vector_field@@Base+0x11d>
  42d484:	cmp    rdi,rbx
  42d487:	jb     42d49a <flatcc_json_printer_utype_vector_field@@Base+0xda>
  42d489:	xor    esi,esi
  42d48b:	mov    rdi,r15
  42d48e:	call   QWORD PTR [r15+0x48]
  42d492:	mov    rbx,QWORD PTR [r15+0x20]
  42d496:	mov    rdi,QWORD PTR [r15+0x28]
  42d49a:	sub    rbx,rdi
  42d49d:	cmp    rbx,r14
  42d4a0:	jae    42d4dd <flatcc_json_printer_utype_vector_field@@Base+0x11d>
  42d4a2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d4ac:	nop    DWORD PTR [rax+0x0]
  42d4b0:	mov    esi,0x20
  42d4b5:	mov    rdx,rbx
  42d4b8:	call   406080 <memset@plt>
  42d4bd:	add    QWORD PTR [r15+0x28],rbx
  42d4c1:	sub    r14,rbx
  42d4c4:	xor    esi,esi
  42d4c6:	mov    rdi,r15
  42d4c9:	call   QWORD PTR [r15+0x48]
  42d4cd:	mov    rbx,QWORD PTR [r15+0x20]
  42d4d1:	mov    rdi,QWORD PTR [r15+0x28]
  42d4d5:	sub    rbx,rdi
  42d4d8:	cmp    r14,rbx
  42d4db:	ja     42d4b0 <flatcc_json_printer_utype_vector_field@@Base+0xf0>
  42d4dd:	mov    esi,0x20
  42d4e2:	mov    rdx,r14
  42d4e5:	call   406080 <memset@plt>
  42d4ea:	add    r14,QWORD PTR [r15+0x28]
  42d4ee:	mov    QWORD PTR [r15+0x28],r14
  42d4f2:	jmp    42d507 <flatcc_json_printer_utype_vector_field@@Base+0x147>
  42d4f4:	cmp    r14,QWORD PTR [r15+0x20]
  42d4f8:	jb     42d507 <flatcc_json_printer_utype_vector_field@@Base+0x147>
  42d4fa:	xor    esi,esi
  42d4fc:	mov    rdi,r15
  42d4ff:	call   QWORD PTR [r15+0x48]
  42d503:	mov    r14,QWORD PTR [r15+0x28]
  42d507:	mov    dl,BYTE PTR [r12+0x4]
  42d50c:	cmp    dl,0x64
  42d50f:	jb     42d54a <flatcc_json_printer_utype_vector_field@@Base+0x18a>
  42d511:	mov    BYTE PTR [r14+0x3],0x0
  42d516:	movzx  eax,dl
  42d519:	lea    ecx,[rax+rax*4]
  42d51c:	lea    ecx,[rax+rcx*8]
  42d51f:	shr    ecx,0xc
  42d522:	mov    bl,0x64
  42d524:	mov    eax,ecx
  42d526:	mul    bl
  42d528:	sub    dl,al
  42d52a:	movzx  eax,dl
  42d52d:	lea    rdx,[rip+0xf97c]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42d534:	movzx  eax,WORD PTR [rdx+rax*2]
  42d538:	mov    WORD PTR [r14+0x1],ax
  42d53d:	or     cl,0x30
  42d540:	mov    BYTE PTR [r14],cl
  42d543:	mov    eax,0x3
  42d548:	jmp    42d58f <flatcc_json_printer_utype_vector_field@@Base+0x1cf>
  42d54a:	cmp    dl,0xa
  42d54d:	jb     42d57f <flatcc_json_printer_utype_vector_field@@Base+0x1bf>
  42d54f:	mov    BYTE PTR [r14+0x2],0x0
  42d554:	movzx  eax,dl
  42d557:	lea    ecx,[rax+rax*4]
  42d55a:	lea    eax,[rax+rcx*8]
  42d55d:	shr    eax,0xc
  42d560:	mov    cl,0x64
  42d562:	mul    cl
  42d564:	sub    dl,al
  42d566:	movzx  eax,dl
  42d569:	lea    rcx,[rip+0xf940]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42d570:	movzx  eax,WORD PTR [rcx+rax*2]
  42d574:	mov    WORD PTR [r14],ax
  42d578:	mov    eax,0x2
  42d57d:	jmp    42d58f <flatcc_json_printer_utype_vector_field@@Base+0x1cf>
  42d57f:	mov    BYTE PTR [r14+0x1],0x0
  42d584:	add    dl,0x30
  42d587:	mov    BYTE PTR [r14],dl
  42d58a:	mov    eax,0x1
  42d58f:	add    QWORD PTR [r15+0x28],rax
  42d593:	add    ebp,0xffffffff
  42d596:	je     42d724 <flatcc_json_printer_utype_vector_field@@Base+0x364>
  42d59c:	add    r12,0x5
  42d5a0:	mov    rax,QWORD PTR [r15+0x28]
  42d5a4:	lea    r13,[rip+0xf905]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42d5ab:	nop    DWORD PTR [rax+rax*1+0x0]
  42d5b0:	lea    rcx,[rax+0x1]
  42d5b4:	mov    QWORD PTR [r15+0x28],rcx
  42d5b8:	mov    BYTE PTR [rax],0x2c
  42d5bb:	cmp    BYTE PTR [r15+0x31],0x0
  42d5c0:	mov    r14,QWORD PTR [r15+0x28]
  42d5c4:	je     42d670 <flatcc_json_printer_utype_vector_field@@Base+0x2b0>
  42d5ca:	lea    rax,[r14+0x1]
  42d5ce:	mov    QWORD PTR [r15+0x28],rax
  42d5d2:	mov    BYTE PTR [r14],0xa
  42d5d6:	movsxd rax,DWORD PTR [r15+0x38]
  42d5da:	movzx  r14d,BYTE PTR [r15+0x31]
  42d5df:	imul   r14,rax
  42d5e3:	mov    rbx,QWORD PTR [r15+0x20]
  42d5e7:	mov    rdi,QWORD PTR [r15+0x28]
  42d5eb:	lea    rax,[rdi+r14*1]
  42d5ef:	cmp    rax,rbx
  42d5f2:	jbe    42d64d <flatcc_json_printer_utype_vector_field@@Base+0x28d>
  42d5f4:	cmp    rdi,rbx
  42d5f7:	jb     42d60a <flatcc_json_printer_utype_vector_field@@Base+0x24a>
  42d5f9:	xor    esi,esi
  42d5fb:	mov    rdi,r15
  42d5fe:	call   QWORD PTR [r15+0x48]
  42d602:	mov    rbx,QWORD PTR [r15+0x20]
  42d606:	mov    rdi,QWORD PTR [r15+0x28]
  42d60a:	sub    rbx,rdi
  42d60d:	cmp    rbx,r14
  42d610:	jae    42d64d <flatcc_json_printer_utype_vector_field@@Base+0x28d>
  42d612:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d61c:	nop    DWORD PTR [rax+0x0]
  42d620:	mov    esi,0x20
  42d625:	mov    rdx,rbx
  42d628:	call   406080 <memset@plt>
  42d62d:	add    QWORD PTR [r15+0x28],rbx
  42d631:	sub    r14,rbx
  42d634:	xor    esi,esi
  42d636:	mov    rdi,r15
  42d639:	call   QWORD PTR [r15+0x48]
  42d63d:	mov    rbx,QWORD PTR [r15+0x20]
  42d641:	mov    rdi,QWORD PTR [r15+0x28]
  42d645:	sub    rbx,rdi
  42d648:	cmp    r14,rbx
  42d64b:	ja     42d620 <flatcc_json_printer_utype_vector_field@@Base+0x260>
  42d64d:	mov    esi,0x20
  42d652:	mov    rdx,r14
  42d655:	call   406080 <memset@plt>
  42d65a:	add    r14,QWORD PTR [r15+0x28]
  42d65e:	mov    QWORD PTR [r15+0x28],r14
  42d662:	jmp    42d690 <flatcc_json_printer_utype_vector_field@@Base+0x2d0>
  42d664:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d66e:	xchg   ax,ax
  42d670:	cmp    r14,QWORD PTR [r15+0x20]
  42d674:	jb     42d690 <flatcc_json_printer_utype_vector_field@@Base+0x2d0>
  42d676:	xor    esi,esi
  42d678:	mov    rdi,r15
  42d67b:	call   QWORD PTR [r15+0x48]
  42d67f:	mov    r14,QWORD PTR [r15+0x28]
  42d683:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d68d:	nop    DWORD PTR [rax]
  42d690:	add    ebp,0xffffffff
  42d693:	mov    dl,BYTE PTR [r12]
  42d697:	cmp    dl,0x64
  42d69a:	jb     42d6d0 <flatcc_json_printer_utype_vector_field@@Base+0x310>
  42d69c:	mov    BYTE PTR [r14+0x3],0x0
  42d6a1:	movzx  eax,dl
  42d6a4:	lea    ecx,[rax+rax*4]
  42d6a7:	lea    ecx,[rax+rcx*8]
  42d6aa:	shr    ecx,0xc
  42d6ad:	mov    eax,ecx
  42d6af:	mov    bl,0x64
  42d6b1:	mul    bl
  42d6b3:	sub    dl,al
  42d6b5:	movzx  eax,dl
  42d6b8:	movzx  eax,WORD PTR [r13+rax*2+0x0]
  42d6be:	mov    WORD PTR [r14+0x1],ax
  42d6c3:	or     cl,0x30
  42d6c6:	mov    BYTE PTR [r14],cl
  42d6c9:	mov    eax,0x3
  42d6ce:	jmp    42d710 <flatcc_json_printer_utype_vector_field@@Base+0x350>
  42d6d0:	cmp    dl,0xa
  42d6d3:	jb     42d700 <flatcc_json_printer_utype_vector_field@@Base+0x340>
  42d6d5:	mov    BYTE PTR [r14+0x2],0x0
  42d6da:	movzx  eax,dl
  42d6dd:	lea    ecx,[rax+rax*4]
  42d6e0:	lea    eax,[rax+rcx*8]
  42d6e3:	shr    eax,0xc
  42d6e6:	mov    cl,0x64
  42d6e8:	mul    cl
  42d6ea:	sub    dl,al
  42d6ec:	movzx  eax,dl
  42d6ef:	movzx  eax,WORD PTR [r13+rax*2+0x0]
  42d6f5:	mov    WORD PTR [r14],ax
  42d6f9:	mov    eax,0x2
  42d6fe:	jmp    42d710 <flatcc_json_printer_utype_vector_field@@Base+0x350>
  42d700:	mov    BYTE PTR [r14+0x1],0x0
  42d705:	add    dl,0x30
  42d708:	mov    BYTE PTR [r14],dl
  42d70b:	mov    eax,0x1
  42d710:	add    rax,QWORD PTR [r15+0x28]
  42d714:	mov    QWORD PTR [r15+0x28],rax
  42d718:	add    r12,0x1
  42d71c:	test   ebp,ebp
  42d71e:	jne    42d5b0 <flatcc_json_printer_utype_vector_field@@Base+0x1f0>
  42d724:	cmp    BYTE PTR [r15+0x31],0x0
  42d729:	mov    r14,QWORD PTR [r15+0x28]
  42d72d:	je     42d7d2 <flatcc_json_printer_utype_vector_field@@Base+0x412>
  42d733:	lea    rax,[r14+0x1]
  42d737:	mov    QWORD PTR [r15+0x28],rax
  42d73b:	mov    BYTE PTR [r14],0xa
  42d73f:	movsxd rax,DWORD PTR [r15+0x38]
  42d743:	add    rax,0xffffffffffffffff
  42d747:	mov    DWORD PTR [r15+0x38],eax
  42d74b:	movzx  r14d,BYTE PTR [r15+0x31]
  42d750:	imul   r14,rax
  42d754:	mov    rbx,QWORD PTR [r15+0x20]
  42d758:	mov    rdi,QWORD PTR [r15+0x28]
  42d75c:	lea    rax,[rdi+r14*1]
  42d760:	cmp    rax,rbx
  42d763:	jbe    42d7bd <flatcc_json_printer_utype_vector_field@@Base+0x3fd>
  42d765:	cmp    rdi,rbx
  42d768:	jb     42d77b <flatcc_json_printer_utype_vector_field@@Base+0x3bb>
  42d76a:	xor    esi,esi
  42d76c:	mov    rdi,r15
  42d76f:	call   QWORD PTR [r15+0x48]
  42d773:	mov    rbx,QWORD PTR [r15+0x20]
  42d777:	mov    rdi,QWORD PTR [r15+0x28]
  42d77b:	sub    rbx,rdi
  42d77e:	cmp    rbx,r14
  42d781:	jae    42d7bd <flatcc_json_printer_utype_vector_field@@Base+0x3fd>
  42d783:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d78d:	nop    DWORD PTR [rax]
  42d790:	mov    esi,0x20
  42d795:	mov    rdx,rbx
  42d798:	call   406080 <memset@plt>
  42d79d:	add    QWORD PTR [r15+0x28],rbx
  42d7a1:	sub    r14,rbx
  42d7a4:	xor    esi,esi
  42d7a6:	mov    rdi,r15
  42d7a9:	call   QWORD PTR [r15+0x48]
  42d7ad:	mov    rbx,QWORD PTR [r15+0x20]
  42d7b1:	mov    rdi,QWORD PTR [r15+0x28]
  42d7b5:	sub    rbx,rdi
  42d7b8:	cmp    r14,rbx
  42d7bb:	ja     42d790 <flatcc_json_printer_utype_vector_field@@Base+0x3d0>
  42d7bd:	mov    esi,0x20
  42d7c2:	mov    rdx,r14
  42d7c5:	call   406080 <memset@plt>
  42d7ca:	add    r14,QWORD PTR [r15+0x28]
  42d7ce:	mov    QWORD PTR [r15+0x28],r14
  42d7d2:	lea    rax,[r14+0x1]
  42d7d6:	mov    QWORD PTR [r15+0x28],rax
  42d7da:	mov    BYTE PTR [r14],0x5d
  42d7de:	add    rsp,0x8
  42d7e2:	pop    rbx
  42d7e3:	pop    r12
  42d7e5:	pop    r13
  42d7e7:	pop    r14
  42d7e9:	pop    r15
  42d7eb:	pop    rbp
  42d7ec:	ret    
  42d7ed:	nop    DWORD PTR [rax]

000000000042d7f0 <flatcc_json_printer_uint8_vector_field@@Base>:
  42d7f0:	push   rbp
  42d7f1:	push   r15
  42d7f3:	push   r14
  42d7f5:	push   r13
  42d7f7:	push   r12
  42d7f9:	push   rbx
  42d7fa:	push   rax
  42d7fb:	lea    eax,[rdx+rdx*1]
  42d7fe:	add    eax,0x4
  42d801:	cmp    eax,DWORD PTR [rsi+0x10]
  42d804:	jge    42dc0e <flatcc_json_printer_uint8_vector_field@@Base+0x41e>
  42d80a:	mov    rdx,QWORD PTR [rsi+0x8]
  42d80e:	mov    eax,eax
  42d810:	movzx  r12d,WORD PTR [rdx+rax*1]
  42d815:	test   r12,r12
  42d818:	je     42dc0e <flatcc_json_printer_uint8_vector_field@@Base+0x41e>
  42d81e:	add    r12,QWORD PTR [rsi]
  42d821:	je     42dc0e <flatcc_json_printer_uint8_vector_field@@Base+0x41e>
  42d827:	mov    r15,rdi
  42d82a:	mov    eax,DWORD PTR [rsi+0x18]
  42d82d:	lea    edx,[rax+0x1]
  42d830:	mov    DWORD PTR [rsi+0x18],edx
  42d833:	test   eax,eax
  42d835:	je     42d846 <flatcc_json_printer_uint8_vector_field@@Base+0x56>
  42d837:	mov    rax,QWORD PTR [r15+0x28]
  42d83b:	lea    rdx,[rax+0x1]
  42d83f:	mov    QWORD PTR [r15+0x28],rdx
  42d843:	mov    BYTE PTR [rax],0x2c
  42d846:	mov    ebx,DWORD PTR [r12]
  42d84a:	mov    ebp,DWORD PTR [r12+rbx*1]
  42d84e:	movsxd rdx,r8d
  42d851:	mov    rdi,r15
  42d854:	mov    rsi,rcx
  42d857:	call   42ae90 <flatcc_json_printer_string_field@@Base+0x80>
  42d85c:	add    DWORD PTR [r15+0x38],0x1
  42d861:	mov    rax,QWORD PTR [r15+0x28]
  42d865:	lea    rcx,[rax+0x1]
  42d869:	mov    QWORD PTR [r15+0x28],rcx
  42d86d:	mov    BYTE PTR [rax],0x5b
  42d870:	test   ebp,ebp
  42d872:	je     42db54 <flatcc_json_printer_uint8_vector_field@@Base+0x364>
  42d878:	add    r12,rbx
  42d87b:	cmp    BYTE PTR [r15+0x31],0x0
  42d880:	mov    r14,QWORD PTR [r15+0x28]
  42d884:	je     42d924 <flatcc_json_printer_uint8_vector_field@@Base+0x134>
  42d88a:	lea    rax,[r14+0x1]
  42d88e:	mov    QWORD PTR [r15+0x28],rax
  42d892:	mov    BYTE PTR [r14],0xa
  42d896:	movsxd rax,DWORD PTR [r15+0x38]
  42d89a:	movzx  r14d,BYTE PTR [r15+0x31]
  42d89f:	imul   r14,rax
  42d8a3:	mov    rbx,QWORD PTR [r15+0x20]
  42d8a7:	mov    rdi,QWORD PTR [r15+0x28]
  42d8ab:	lea    rax,[rdi+r14*1]
  42d8af:	cmp    rax,rbx
  42d8b2:	jbe    42d90d <flatcc_json_printer_uint8_vector_field@@Base+0x11d>
  42d8b4:	cmp    rdi,rbx
  42d8b7:	jb     42d8ca <flatcc_json_printer_uint8_vector_field@@Base+0xda>
  42d8b9:	xor    esi,esi
  42d8bb:	mov    rdi,r15
  42d8be:	call   QWORD PTR [r15+0x48]
  42d8c2:	mov    rbx,QWORD PTR [r15+0x20]
  42d8c6:	mov    rdi,QWORD PTR [r15+0x28]
  42d8ca:	sub    rbx,rdi
  42d8cd:	cmp    rbx,r14
  42d8d0:	jae    42d90d <flatcc_json_printer_uint8_vector_field@@Base+0x11d>
  42d8d2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d8dc:	nop    DWORD PTR [rax+0x0]
  42d8e0:	mov    esi,0x20
  42d8e5:	mov    rdx,rbx
  42d8e8:	call   406080 <memset@plt>
  42d8ed:	add    QWORD PTR [r15+0x28],rbx
  42d8f1:	sub    r14,rbx
  42d8f4:	xor    esi,esi
  42d8f6:	mov    rdi,r15
  42d8f9:	call   QWORD PTR [r15+0x48]
  42d8fd:	mov    rbx,QWORD PTR [r15+0x20]
  42d901:	mov    rdi,QWORD PTR [r15+0x28]
  42d905:	sub    rbx,rdi
  42d908:	cmp    r14,rbx
  42d90b:	ja     42d8e0 <flatcc_json_printer_uint8_vector_field@@Base+0xf0>
  42d90d:	mov    esi,0x20
  42d912:	mov    rdx,r14
  42d915:	call   406080 <memset@plt>
  42d91a:	add    r14,QWORD PTR [r15+0x28]
  42d91e:	mov    QWORD PTR [r15+0x28],r14
  42d922:	jmp    42d937 <flatcc_json_printer_uint8_vector_field@@Base+0x147>
  42d924:	cmp    r14,QWORD PTR [r15+0x20]
  42d928:	jb     42d937 <flatcc_json_printer_uint8_vector_field@@Base+0x147>
  42d92a:	xor    esi,esi
  42d92c:	mov    rdi,r15
  42d92f:	call   QWORD PTR [r15+0x48]
  42d933:	mov    r14,QWORD PTR [r15+0x28]
  42d937:	mov    dl,BYTE PTR [r12+0x4]
  42d93c:	cmp    dl,0x64
  42d93f:	jb     42d97a <flatcc_json_printer_uint8_vector_field@@Base+0x18a>
  42d941:	mov    BYTE PTR [r14+0x3],0x0
  42d946:	movzx  eax,dl
  42d949:	lea    ecx,[rax+rax*4]
  42d94c:	lea    ecx,[rax+rcx*8]
  42d94f:	shr    ecx,0xc
  42d952:	mov    bl,0x64
  42d954:	mov    eax,ecx
  42d956:	mul    bl
  42d958:	sub    dl,al
  42d95a:	movzx  eax,dl
  42d95d:	lea    rdx,[rip+0xf54c]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42d964:	movzx  eax,WORD PTR [rdx+rax*2]
  42d968:	mov    WORD PTR [r14+0x1],ax
  42d96d:	or     cl,0x30
  42d970:	mov    BYTE PTR [r14],cl
  42d973:	mov    eax,0x3
  42d978:	jmp    42d9bf <flatcc_json_printer_uint8_vector_field@@Base+0x1cf>
  42d97a:	cmp    dl,0xa
  42d97d:	jb     42d9af <flatcc_json_printer_uint8_vector_field@@Base+0x1bf>
  42d97f:	mov    BYTE PTR [r14+0x2],0x0
  42d984:	movzx  eax,dl
  42d987:	lea    ecx,[rax+rax*4]
  42d98a:	lea    eax,[rax+rcx*8]
  42d98d:	shr    eax,0xc
  42d990:	mov    cl,0x64
  42d992:	mul    cl
  42d994:	sub    dl,al
  42d996:	movzx  eax,dl
  42d999:	lea    rcx,[rip+0xf510]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42d9a0:	movzx  eax,WORD PTR [rcx+rax*2]
  42d9a4:	mov    WORD PTR [r14],ax
  42d9a8:	mov    eax,0x2
  42d9ad:	jmp    42d9bf <flatcc_json_printer_uint8_vector_field@@Base+0x1cf>
  42d9af:	mov    BYTE PTR [r14+0x1],0x0
  42d9b4:	add    dl,0x30
  42d9b7:	mov    BYTE PTR [r14],dl
  42d9ba:	mov    eax,0x1
  42d9bf:	add    QWORD PTR [r15+0x28],rax
  42d9c3:	add    ebp,0xffffffff
  42d9c6:	je     42db54 <flatcc_json_printer_uint8_vector_field@@Base+0x364>
  42d9cc:	add    r12,0x5
  42d9d0:	mov    rax,QWORD PTR [r15+0x28]
  42d9d4:	lea    r13,[rip+0xf4d5]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42d9db:	nop    DWORD PTR [rax+rax*1+0x0]
  42d9e0:	lea    rcx,[rax+0x1]
  42d9e4:	mov    QWORD PTR [r15+0x28],rcx
  42d9e8:	mov    BYTE PTR [rax],0x2c
  42d9eb:	cmp    BYTE PTR [r15+0x31],0x0
  42d9f0:	mov    r14,QWORD PTR [r15+0x28]
  42d9f4:	je     42daa0 <flatcc_json_printer_uint8_vector_field@@Base+0x2b0>
  42d9fa:	lea    rax,[r14+0x1]
  42d9fe:	mov    QWORD PTR [r15+0x28],rax
  42da02:	mov    BYTE PTR [r14],0xa
  42da06:	movsxd rax,DWORD PTR [r15+0x38]
  42da0a:	movzx  r14d,BYTE PTR [r15+0x31]
  42da0f:	imul   r14,rax
  42da13:	mov    rbx,QWORD PTR [r15+0x20]
  42da17:	mov    rdi,QWORD PTR [r15+0x28]
  42da1b:	lea    rax,[rdi+r14*1]
  42da1f:	cmp    rax,rbx
  42da22:	jbe    42da7d <flatcc_json_printer_uint8_vector_field@@Base+0x28d>
  42da24:	cmp    rdi,rbx
  42da27:	jb     42da3a <flatcc_json_printer_uint8_vector_field@@Base+0x24a>
  42da29:	xor    esi,esi
  42da2b:	mov    rdi,r15
  42da2e:	call   QWORD PTR [r15+0x48]
  42da32:	mov    rbx,QWORD PTR [r15+0x20]
  42da36:	mov    rdi,QWORD PTR [r15+0x28]
  42da3a:	sub    rbx,rdi
  42da3d:	cmp    rbx,r14
  42da40:	jae    42da7d <flatcc_json_printer_uint8_vector_field@@Base+0x28d>
  42da42:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42da4c:	nop    DWORD PTR [rax+0x0]
  42da50:	mov    esi,0x20
  42da55:	mov    rdx,rbx
  42da58:	call   406080 <memset@plt>
  42da5d:	add    QWORD PTR [r15+0x28],rbx
  42da61:	sub    r14,rbx
  42da64:	xor    esi,esi
  42da66:	mov    rdi,r15
  42da69:	call   QWORD PTR [r15+0x48]
  42da6d:	mov    rbx,QWORD PTR [r15+0x20]
  42da71:	mov    rdi,QWORD PTR [r15+0x28]
  42da75:	sub    rbx,rdi
  42da78:	cmp    r14,rbx
  42da7b:	ja     42da50 <flatcc_json_printer_uint8_vector_field@@Base+0x260>
  42da7d:	mov    esi,0x20
  42da82:	mov    rdx,r14
  42da85:	call   406080 <memset@plt>
  42da8a:	add    r14,QWORD PTR [r15+0x28]
  42da8e:	mov    QWORD PTR [r15+0x28],r14
  42da92:	jmp    42dac0 <flatcc_json_printer_uint8_vector_field@@Base+0x2d0>
  42da94:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42da9e:	xchg   ax,ax
  42daa0:	cmp    r14,QWORD PTR [r15+0x20]
  42daa4:	jb     42dac0 <flatcc_json_printer_uint8_vector_field@@Base+0x2d0>
  42daa6:	xor    esi,esi
  42daa8:	mov    rdi,r15
  42daab:	call   QWORD PTR [r15+0x48]
  42daaf:	mov    r14,QWORD PTR [r15+0x28]
  42dab3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42dabd:	nop    DWORD PTR [rax]
  42dac0:	add    ebp,0xffffffff
  42dac3:	mov    dl,BYTE PTR [r12]
  42dac7:	cmp    dl,0x64
  42daca:	jb     42db00 <flatcc_json_printer_uint8_vector_field@@Base+0x310>
  42dacc:	mov    BYTE PTR [r14+0x3],0x0
  42dad1:	movzx  eax,dl
  42dad4:	lea    ecx,[rax+rax*4]
  42dad7:	lea    ecx,[rax+rcx*8]
  42dada:	shr    ecx,0xc
  42dadd:	mov    eax,ecx
  42dadf:	mov    bl,0x64
  42dae1:	mul    bl
  42dae3:	sub    dl,al
  42dae5:	movzx  eax,dl
  42dae8:	movzx  eax,WORD PTR [r13+rax*2+0x0]
  42daee:	mov    WORD PTR [r14+0x1],ax
  42daf3:	or     cl,0x30
  42daf6:	mov    BYTE PTR [r14],cl
  42daf9:	mov    eax,0x3
  42dafe:	jmp    42db40 <flatcc_json_printer_uint8_vector_field@@Base+0x350>
  42db00:	cmp    dl,0xa
  42db03:	jb     42db30 <flatcc_json_printer_uint8_vector_field@@Base+0x340>
  42db05:	mov    BYTE PTR [r14+0x2],0x0
  42db0a:	movzx  eax,dl
  42db0d:	lea    ecx,[rax+rax*4]
  42db10:	lea    eax,[rax+rcx*8]
  42db13:	shr    eax,0xc
  42db16:	mov    cl,0x64
  42db18:	mul    cl
  42db1a:	sub    dl,al
  42db1c:	movzx  eax,dl
  42db1f:	movzx  eax,WORD PTR [r13+rax*2+0x0]
  42db25:	mov    WORD PTR [r14],ax
  42db29:	mov    eax,0x2
  42db2e:	jmp    42db40 <flatcc_json_printer_uint8_vector_field@@Base+0x350>
  42db30:	mov    BYTE PTR [r14+0x1],0x0
  42db35:	add    dl,0x30
  42db38:	mov    BYTE PTR [r14],dl
  42db3b:	mov    eax,0x1
  42db40:	add    rax,QWORD PTR [r15+0x28]
  42db44:	mov    QWORD PTR [r15+0x28],rax
  42db48:	add    r12,0x1
  42db4c:	test   ebp,ebp
  42db4e:	jne    42d9e0 <flatcc_json_printer_uint8_vector_field@@Base+0x1f0>
  42db54:	cmp    BYTE PTR [r15+0x31],0x0
  42db59:	mov    r14,QWORD PTR [r15+0x28]
  42db5d:	je     42dc02 <flatcc_json_printer_uint8_vector_field@@Base+0x412>
  42db63:	lea    rax,[r14+0x1]
  42db67:	mov    QWORD PTR [r15+0x28],rax
  42db6b:	mov    BYTE PTR [r14],0xa
  42db6f:	movsxd rax,DWORD PTR [r15+0x38]
  42db73:	add    rax,0xffffffffffffffff
  42db77:	mov    DWORD PTR [r15+0x38],eax
  42db7b:	movzx  r14d,BYTE PTR [r15+0x31]
  42db80:	imul   r14,rax
  42db84:	mov    rbx,QWORD PTR [r15+0x20]
  42db88:	mov    rdi,QWORD PTR [r15+0x28]
  42db8c:	lea    rax,[rdi+r14*1]
  42db90:	cmp    rax,rbx
  42db93:	jbe    42dbed <flatcc_json_printer_uint8_vector_field@@Base+0x3fd>
  42db95:	cmp    rdi,rbx
  42db98:	jb     42dbab <flatcc_json_printer_uint8_vector_field@@Base+0x3bb>
  42db9a:	xor    esi,esi
  42db9c:	mov    rdi,r15
  42db9f:	call   QWORD PTR [r15+0x48]
  42dba3:	mov    rbx,QWORD PTR [r15+0x20]
  42dba7:	mov    rdi,QWORD PTR [r15+0x28]
  42dbab:	sub    rbx,rdi
  42dbae:	cmp    rbx,r14
  42dbb1:	jae    42dbed <flatcc_json_printer_uint8_vector_field@@Base+0x3fd>
  42dbb3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42dbbd:	nop    DWORD PTR [rax]
  42dbc0:	mov    esi,0x20
  42dbc5:	mov    rdx,rbx
  42dbc8:	call   406080 <memset@plt>
  42dbcd:	add    QWORD PTR [r15+0x28],rbx
  42dbd1:	sub    r14,rbx
  42dbd4:	xor    esi,esi
  42dbd6:	mov    rdi,r15
  42dbd9:	call   QWORD PTR [r15+0x48]
  42dbdd:	mov    rbx,QWORD PTR [r15+0x20]
  42dbe1:	mov    rdi,QWORD PTR [r15+0x28]
  42dbe5:	sub    rbx,rdi
  42dbe8:	cmp    r14,rbx
  42dbeb:	ja     42dbc0 <flatcc_json_printer_uint8_vector_field@@Base+0x3d0>
  42dbed:	mov    esi,0x20
  42dbf2:	mov    rdx,r14
  42dbf5:	call   406080 <memset@plt>
  42dbfa:	add    r14,QWORD PTR [r15+0x28]
  42dbfe:	mov    QWORD PTR [r15+0x28],r14
  42dc02:	lea    rax,[r14+0x1]
  42dc06:	mov    QWORD PTR [r15+0x28],rax
  42dc0a:	mov    BYTE PTR [r14],0x5d
  42dc0e:	add    rsp,0x8
  42dc12:	pop    rbx
  42dc13:	pop    r12
  42dc15:	pop    r13
  42dc17:	pop    r14
  42dc19:	pop    r15
  42dc1b:	pop    rbp
  42dc1c:	ret    
  42dc1d:	nop    DWORD PTR [rax]

000000000042dc20 <flatcc_json_printer_uint16_vector_field@@Base>:
  42dc20:	push   rbp
  42dc21:	push   r15
  42dc23:	push   r14
  42dc25:	push   r13
  42dc27:	push   r12
  42dc29:	push   rbx
  42dc2a:	push   rax
  42dc2b:	lea    eax,[rdx+rdx*1]
  42dc2e:	add    eax,0x4
  42dc31:	cmp    eax,DWORD PTR [rsi+0x10]
  42dc34:	jge    42e18e <flatcc_json_printer_uint16_vector_field@@Base+0x56e>
  42dc3a:	mov    rdx,QWORD PTR [rsi+0x8]
  42dc3e:	mov    eax,eax
  42dc40:	movzx  r12d,WORD PTR [rdx+rax*1]
  42dc45:	test   r12,r12
  42dc48:	je     42e18e <flatcc_json_printer_uint16_vector_field@@Base+0x56e>
  42dc4e:	add    r12,QWORD PTR [rsi]
  42dc51:	je     42e18e <flatcc_json_printer_uint16_vector_field@@Base+0x56e>
  42dc57:	mov    r15,rdi
  42dc5a:	mov    eax,DWORD PTR [rsi+0x18]
  42dc5d:	lea    edx,[rax+0x1]
  42dc60:	mov    DWORD PTR [rsi+0x18],edx
  42dc63:	test   eax,eax
  42dc65:	je     42dc76 <flatcc_json_printer_uint16_vector_field@@Base+0x56>
  42dc67:	mov    rax,QWORD PTR [r15+0x28]
  42dc6b:	lea    rdx,[rax+0x1]
  42dc6f:	mov    QWORD PTR [r15+0x28],rdx
  42dc73:	mov    BYTE PTR [rax],0x2c
  42dc76:	mov    ebx,DWORD PTR [r12]
  42dc7a:	mov    ebp,DWORD PTR [r12+rbx*1]
  42dc7e:	movsxd rdx,r8d
  42dc81:	mov    rdi,r15
  42dc84:	mov    rsi,rcx
  42dc87:	call   42ae90 <flatcc_json_printer_string_field@@Base+0x80>
  42dc8c:	add    DWORD PTR [r15+0x38],0x1
  42dc91:	mov    rax,QWORD PTR [r15+0x28]
  42dc95:	lea    rcx,[rax+0x1]
  42dc99:	mov    QWORD PTR [r15+0x28],rcx
  42dc9d:	mov    BYTE PTR [rax],0x5b
  42dca0:	test   ebp,ebp
  42dca2:	je     42e0d6 <flatcc_json_printer_uint16_vector_field@@Base+0x4b6>
  42dca8:	add    r12,rbx
  42dcab:	cmp    BYTE PTR [r15+0x31],0x0
  42dcb0:	mov    r14,QWORD PTR [r15+0x28]
  42dcb4:	je     42dd54 <flatcc_json_printer_uint16_vector_field@@Base+0x134>
  42dcba:	lea    rax,[r14+0x1]
  42dcbe:	mov    QWORD PTR [r15+0x28],rax
  42dcc2:	mov    BYTE PTR [r14],0xa
  42dcc6:	movsxd rax,DWORD PTR [r15+0x38]
  42dcca:	movzx  r14d,BYTE PTR [r15+0x31]
  42dccf:	imul   r14,rax
  42dcd3:	mov    rbx,QWORD PTR [r15+0x20]
  42dcd7:	mov    rdi,QWORD PTR [r15+0x28]
  42dcdb:	lea    rax,[rdi+r14*1]
  42dcdf:	cmp    rax,rbx
  42dce2:	jbe    42dd3d <flatcc_json_printer_uint16_vector_field@@Base+0x11d>
  42dce4:	cmp    rdi,rbx
  42dce7:	jb     42dcfa <flatcc_json_printer_uint16_vector_field@@Base+0xda>
  42dce9:	xor    esi,esi
  42dceb:	mov    rdi,r15
  42dcee:	call   QWORD PTR [r15+0x48]
  42dcf2:	mov    rbx,QWORD PTR [r15+0x20]
  42dcf6:	mov    rdi,QWORD PTR [r15+0x28]
  42dcfa:	sub    rbx,rdi
  42dcfd:	cmp    rbx,r14
  42dd00:	jae    42dd3d <flatcc_json_printer_uint16_vector_field@@Base+0x11d>
  42dd02:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42dd0c:	nop    DWORD PTR [rax+0x0]
  42dd10:	mov    esi,0x20
  42dd15:	mov    rdx,rbx
  42dd18:	call   406080 <memset@plt>
  42dd1d:	add    QWORD PTR [r15+0x28],rbx
  42dd21:	sub    r14,rbx
  42dd24:	xor    esi,esi
  42dd26:	mov    rdi,r15
  42dd29:	call   QWORD PTR [r15+0x48]
  42dd2d:	mov    rbx,QWORD PTR [r15+0x20]
  42dd31:	mov    rdi,QWORD PTR [r15+0x28]
  42dd35:	sub    rbx,rdi
  42dd38:	cmp    r14,rbx
  42dd3b:	ja     42dd10 <flatcc_json_printer_uint16_vector_field@@Base+0xf0>
  42dd3d:	mov    esi,0x20
  42dd42:	mov    rdx,r14
  42dd45:	call   406080 <memset@plt>
  42dd4a:	add    r14,QWORD PTR [r15+0x28]
  42dd4e:	mov    QWORD PTR [r15+0x28],r14
  42dd52:	jmp    42dd67 <flatcc_json_printer_uint16_vector_field@@Base+0x147>
  42dd54:	cmp    r14,QWORD PTR [r15+0x20]
  42dd58:	jb     42dd67 <flatcc_json_printer_uint16_vector_field@@Base+0x147>
  42dd5a:	xor    esi,esi
  42dd5c:	mov    rdi,r15
  42dd5f:	call   QWORD PTR [r15+0x48]
  42dd63:	mov    r14,QWORD PTR [r15+0x28]
  42dd67:	movzx  ecx,WORD PTR [r12+0x4]
  42dd6d:	movzx  edx,cx
  42dd70:	cmp    ecx,0x3e8
  42dd76:	jb     42dd88 <flatcc_json_printer_uint16_vector_field@@Base+0x168>
  42dd78:	xor    eax,eax
  42dd7a:	cmp    edx,0x270f
  42dd80:	seta   al
  42dd83:	or     eax,0x4
  42dd86:	jmp    42ddae <flatcc_json_printer_uint16_vector_field@@Base+0x18e>
  42dd88:	cmp    edx,0x64
  42dd8b:	jb     42dda3 <flatcc_json_printer_uint16_vector_field@@Base+0x183>
  42dd8d:	mov    BYTE PTR [r14+0x3],0x0
  42dd92:	add    r14,0x3
  42dd96:	mov    eax,0x3
  42dd9b:	mov    rdx,r14
  42dd9e:	jmp    42de57 <flatcc_json_printer_uint16_vector_field@@Base+0x237>
  42dda3:	xor    eax,eax
  42dda5:	cmp    edx,0x9
  42dda8:	seta   al
  42ddab:	add    eax,0x1
  42ddae:	mov    esi,eax
  42ddb0:	lea    rdx,[r14+rsi*1]
  42ddb4:	mov    BYTE PTR [r14+rsi*1],0x0
  42ddb9:	test   al,0x1
  42ddbb:	jne    42de1f <flatcc_json_printer_uint16_vector_field@@Base+0x1ff>
  42ddbd:	cmp    al,0x2
  42ddbf:	je     42ddf5 <flatcc_json_printer_uint16_vector_field@@Base+0x1d5>
  42ddc1:	cmp    al,0x4
  42ddc3:	jne    42de89 <flatcc_json_printer_uint16_vector_field@@Base+0x269>
  42ddc9:	movzx  esi,cx
  42ddcc:	mov    ecx,esi
  42ddce:	shr    ecx,0x2
  42ddd1:	imul   ecx,ecx,0x147b
  42ddd7:	shr    ecx,0x11
  42ddda:	imul   edi,ecx,0x64
  42dddd:	sub    esi,edi
  42dddf:	movzx  esi,si
  42dde2:	lea    rdi,[rip+0xf0c7]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42dde9:	movzx  esi,WORD PTR [rdi+rsi*2]
  42dded:	mov    WORD PTR [rdx-0x2],si
  42ddf1:	lea    rdx,[rdx-0x2]
  42ddf5:	movzx  ecx,cx
  42ddf8:	mov    esi,ecx
  42ddfa:	shr    esi,0x2
  42ddfd:	imul   esi,esi,0x147b
  42de03:	shr    esi,0x11
  42de06:	imul   esi,esi,0x64
  42de09:	sub    ecx,esi
  42de0b:	movzx  ecx,cx
  42de0e:	lea    rsi,[rip+0xf09b]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42de15:	movzx  ecx,WORD PTR [rsi+rcx*2]
  42de19:	mov    WORD PTR [rdx-0x2],cx
  42de1d:	jmp    42de89 <flatcc_json_printer_uint16_vector_field@@Base+0x269>
  42de1f:	cmp    al,0x1
  42de21:	je     42de83 <flatcc_json_printer_uint16_vector_field@@Base+0x263>
  42de23:	cmp    al,0x3
  42de25:	je     42de57 <flatcc_json_printer_uint16_vector_field@@Base+0x237>
  42de27:	cmp    al,0x5
  42de29:	jne    42de89 <flatcc_json_printer_uint16_vector_field@@Base+0x269>
  42de2b:	movzx  esi,cx
  42de2e:	mov    ecx,esi
  42de30:	shr    ecx,0x2
  42de33:	imul   ecx,ecx,0x147b
  42de39:	shr    ecx,0x11
  42de3c:	imul   edi,ecx,0x64
  42de3f:	sub    esi,edi
  42de41:	movzx  esi,si
  42de44:	lea    rdi,[rip+0xf065]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42de4b:	movzx  esi,WORD PTR [rdi+rsi*2]
  42de4f:	mov    WORD PTR [rdx-0x2],si
  42de53:	lea    rdx,[rdx-0x2]
  42de57:	movzx  esi,cx
  42de5a:	mov    ecx,esi
  42de5c:	shr    ecx,0x2
  42de5f:	imul   ecx,ecx,0x147b
  42de65:	shr    ecx,0x11
  42de68:	imul   edi,ecx,0x64
  42de6b:	sub    esi,edi
  42de6d:	movzx  esi,si
  42de70:	lea    rdi,[rip+0xf039]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42de77:	movzx  esi,WORD PTR [rdi+rsi*2]
  42de7b:	mov    WORD PTR [rdx-0x2],si
  42de7f:	lea    rdx,[rdx-0x2]
  42de83:	add    cl,0x30
  42de86:	mov    BYTE PTR [rdx-0x1],cl
  42de89:	mov    eax,eax
  42de8b:	add    QWORD PTR [r15+0x28],rax
  42de8f:	add    ebp,0xffffffff
  42de92:	je     42e0d6 <flatcc_json_printer_uint16_vector_field@@Base+0x4b6>
  42de98:	add    r12,0x6
  42de9c:	mov    rax,QWORD PTR [r15+0x28]
  42dea0:	lea    r13,[rip+0xf009]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42dea7:	nop    WORD PTR [rax+rax*1+0x0]
  42deb0:	lea    rcx,[rax+0x1]
  42deb4:	mov    QWORD PTR [r15+0x28],rcx
  42deb8:	mov    BYTE PTR [rax],0x2c
  42debb:	cmp    BYTE PTR [r15+0x31],0x0
  42dec0:	mov    r14,QWORD PTR [r15+0x28]
  42dec4:	je     42df70 <flatcc_json_printer_uint16_vector_field@@Base+0x350>
  42deca:	lea    rax,[r14+0x1]
  42dece:	mov    QWORD PTR [r15+0x28],rax
  42ded2:	mov    BYTE PTR [r14],0xa
  42ded6:	movsxd rax,DWORD PTR [r15+0x38]
  42deda:	movzx  r14d,BYTE PTR [r15+0x31]
  42dedf:	imul   r14,rax
  42dee3:	mov    rbx,QWORD PTR [r15+0x20]
  42dee7:	mov    rdi,QWORD PTR [r15+0x28]
  42deeb:	lea    rax,[rdi+r14*1]
  42deef:	cmp    rax,rbx
  42def2:	jbe    42df4d <flatcc_json_printer_uint16_vector_field@@Base+0x32d>
  42def4:	cmp    rdi,rbx
  42def7:	jb     42df0a <flatcc_json_printer_uint16_vector_field@@Base+0x2ea>
  42def9:	xor    esi,esi
  42defb:	mov    rdi,r15
  42defe:	call   QWORD PTR [r15+0x48]
  42df02:	mov    rbx,QWORD PTR [r15+0x20]
  42df06:	mov    rdi,QWORD PTR [r15+0x28]
  42df0a:	sub    rbx,rdi
  42df0d:	cmp    rbx,r14
  42df10:	jae    42df4d <flatcc_json_printer_uint16_vector_field@@Base+0x32d>
  42df12:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42df1c:	nop    DWORD PTR [rax+0x0]
  42df20:	mov    esi,0x20
  42df25:	mov    rdx,rbx
  42df28:	call   406080 <memset@plt>
  42df2d:	add    QWORD PTR [r15+0x28],rbx
  42df31:	sub    r14,rbx
  42df34:	xor    esi,esi
  42df36:	mov    rdi,r15
  42df39:	call   QWORD PTR [r15+0x48]
  42df3d:	mov    rbx,QWORD PTR [r15+0x20]
  42df41:	mov    rdi,QWORD PTR [r15+0x28]
  42df45:	sub    rbx,rdi
  42df48:	cmp    r14,rbx
  42df4b:	ja     42df20 <flatcc_json_printer_uint16_vector_field@@Base+0x300>
  42df4d:	mov    esi,0x20
  42df52:	mov    rdx,r14
  42df55:	call   406080 <memset@plt>
  42df5a:	add    r14,QWORD PTR [r15+0x28]
  42df5e:	mov    QWORD PTR [r15+0x28],r14
  42df62:	jmp    42df90 <flatcc_json_printer_uint16_vector_field@@Base+0x370>
  42df64:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42df6e:	xchg   ax,ax
  42df70:	cmp    r14,QWORD PTR [r15+0x20]
  42df74:	jb     42df90 <flatcc_json_printer_uint16_vector_field@@Base+0x370>
  42df76:	xor    esi,esi
  42df78:	mov    rdi,r15
  42df7b:	call   QWORD PTR [r15+0x48]
  42df7f:	mov    r14,QWORD PTR [r15+0x28]
  42df83:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42df8d:	nop    DWORD PTR [rax]
  42df90:	add    ebp,0xffffffff
  42df93:	movzx  ecx,WORD PTR [r12]
  42df98:	movzx  edx,cx
  42df9b:	cmp    ecx,0x3e8
  42dfa1:	jb     42dfc0 <flatcc_json_printer_uint16_vector_field@@Base+0x3a0>
  42dfa3:	xor    eax,eax
  42dfa5:	cmp    edx,0x270f
  42dfab:	seta   al
  42dfae:	or     eax,0x4
  42dfb1:	jmp    42dfeb <flatcc_json_printer_uint16_vector_field@@Base+0x3cb>
  42dfb3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42dfbd:	nop    DWORD PTR [rax]
  42dfc0:	cmp    edx,0x64
  42dfc3:	jb     42dfe0 <flatcc_json_printer_uint16_vector_field@@Base+0x3c0>
  42dfc5:	mov    BYTE PTR [r14+0x3],0x0
  42dfca:	add    r14,0x3
  42dfce:	mov    eax,0x3
  42dfd3:	mov    rdx,r14
  42dfd6:	jmp    42e093 <flatcc_json_printer_uint16_vector_field@@Base+0x473>
  42dfdb:	nop    DWORD PTR [rax+rax*1+0x0]
  42dfe0:	xor    eax,eax
  42dfe2:	cmp    edx,0x9
  42dfe5:	seta   al
  42dfe8:	add    eax,0x1
  42dfeb:	mov    esi,eax
  42dfed:	lea    rdx,[r14+rsi*1]
  42dff1:	mov    BYTE PTR [r14+rsi*1],0x0
  42dff6:	test   al,0x1
  42dff8:	jne    42e060 <flatcc_json_printer_uint16_vector_field@@Base+0x440>
  42dffa:	cmp    al,0x2
  42dffc:	je     42e02d <flatcc_json_printer_uint16_vector_field@@Base+0x40d>
  42dffe:	cmp    al,0x4
  42e000:	jne    42e0c0 <flatcc_json_printer_uint16_vector_field@@Base+0x4a0>
  42e006:	movzx  esi,cx
  42e009:	mov    ecx,esi
  42e00b:	shr    ecx,0x2
  42e00e:	imul   ecx,ecx,0x147b
  42e014:	shr    ecx,0x11
  42e017:	imul   edi,ecx,0x64
  42e01a:	sub    esi,edi
  42e01c:	movzx  esi,si
  42e01f:	movzx  esi,WORD PTR [r13+rsi*2+0x0]
  42e025:	mov    WORD PTR [rdx-0x2],si
  42e029:	lea    rdx,[rdx-0x2]
  42e02d:	movzx  ecx,cx
  42e030:	mov    esi,ecx
  42e032:	shr    esi,0x2
  42e035:	imul   esi,esi,0x147b
  42e03b:	shr    esi,0x11
  42e03e:	imul   esi,esi,0x64
  42e041:	sub    ecx,esi
  42e043:	movzx  ecx,cx
  42e046:	movzx  ecx,WORD PTR [r13+rcx*2+0x0]
  42e04c:	mov    WORD PTR [rdx-0x2],cx
  42e050:	jmp    42e0c0 <flatcc_json_printer_uint16_vector_field@@Base+0x4a0>
  42e052:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42e05c:	nop    DWORD PTR [rax+0x0]
  42e060:	cmp    al,0x1
  42e062:	je     42e0ba <flatcc_json_printer_uint16_vector_field@@Base+0x49a>
  42e064:	cmp    al,0x3
  42e066:	je     42e093 <flatcc_json_printer_uint16_vector_field@@Base+0x473>
  42e068:	cmp    al,0x5
  42e06a:	jne    42e0c0 <flatcc_json_printer_uint16_vector_field@@Base+0x4a0>
  42e06c:	movzx  esi,cx
  42e06f:	mov    ecx,esi
  42e071:	shr    ecx,0x2
  42e074:	imul   ecx,ecx,0x147b
  42e07a:	shr    ecx,0x11
  42e07d:	imul   edi,ecx,0x64
  42e080:	sub    esi,edi
  42e082:	movzx  esi,si
  42e085:	movzx  esi,WORD PTR [r13+rsi*2+0x0]
  42e08b:	mov    WORD PTR [rdx-0x2],si
  42e08f:	lea    rdx,[rdx-0x2]
  42e093:	movzx  esi,cx
  42e096:	mov    ecx,esi
  42e098:	shr    ecx,0x2
  42e09b:	imul   ecx,ecx,0x147b
  42e0a1:	shr    ecx,0x11
  42e0a4:	imul   edi,ecx,0x64
  42e0a7:	sub    esi,edi
  42e0a9:	movzx  esi,si
  42e0ac:	movzx  esi,WORD PTR [r13+rsi*2+0x0]
  42e0b2:	mov    WORD PTR [rdx-0x2],si
  42e0b6:	lea    rdx,[rdx-0x2]
  42e0ba:	add    cl,0x30
  42e0bd:	mov    BYTE PTR [rdx-0x1],cl
  42e0c0:	mov    eax,eax
  42e0c2:	add    rax,QWORD PTR [r15+0x28]
  42e0c6:	mov    QWORD PTR [r15+0x28],rax
  42e0ca:	add    r12,0x2
  42e0ce:	test   ebp,ebp
  42e0d0:	jne    42deb0 <flatcc_json_printer_uint16_vector_field@@Base+0x290>
  42e0d6:	cmp    BYTE PTR [r15+0x31],0x0
  42e0db:	mov    r14,QWORD PTR [r15+0x28]
  42e0df:	je     42e182 <flatcc_json_printer_uint16_vector_field@@Base+0x562>
  42e0e5:	lea    rax,[r14+0x1]
  42e0e9:	mov    QWORD PTR [r15+0x28],rax
  42e0ed:	mov    BYTE PTR [r14],0xa
  42e0f1:	movsxd rax,DWORD PTR [r15+0x38]
  42e0f5:	add    rax,0xffffffffffffffff
  42e0f9:	mov    DWORD PTR [r15+0x38],eax
  42e0fd:	movzx  r14d,BYTE PTR [r15+0x31]
  42e102:	imul   r14,rax
  42e106:	mov    rbx,QWORD PTR [r15+0x20]
  42e10a:	mov    rdi,QWORD PTR [r15+0x28]
  42e10e:	lea    rax,[rdi+r14*1]
  42e112:	cmp    rax,rbx
  42e115:	jbe    42e16d <flatcc_json_printer_uint16_vector_field@@Base+0x54d>
  42e117:	cmp    rdi,rbx
  42e11a:	jb     42e12d <flatcc_json_printer_uint16_vector_field@@Base+0x50d>
  42e11c:	xor    esi,esi
  42e11e:	mov    rdi,r15
  42e121:	call   QWORD PTR [r15+0x48]
  42e125:	mov    rbx,QWORD PTR [r15+0x20]
  42e129:	mov    rdi,QWORD PTR [r15+0x28]
  42e12d:	sub    rbx,rdi
  42e130:	cmp    rbx,r14
  42e133:	jae    42e16d <flatcc_json_printer_uint16_vector_field@@Base+0x54d>
  42e135:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42e13f:	nop
  42e140:	mov    esi,0x20
  42e145:	mov    rdx,rbx
  42e148:	call   406080 <memset@plt>
  42e14d:	add    QWORD PTR [r15+0x28],rbx
  42e151:	sub    r14,rbx
  42e154:	xor    esi,esi
  42e156:	mov    rdi,r15
  42e159:	call   QWORD PTR [r15+0x48]
  42e15d:	mov    rbx,QWORD PTR [r15+0x20]
  42e161:	mov    rdi,QWORD PTR [r15+0x28]
  42e165:	sub    rbx,rdi
  42e168:	cmp    r14,rbx
  42e16b:	ja     42e140 <flatcc_json_printer_uint16_vector_field@@Base+0x520>
  42e16d:	mov    esi,0x20
  42e172:	mov    rdx,r14
  42e175:	call   406080 <memset@plt>
  42e17a:	add    r14,QWORD PTR [r15+0x28]
  42e17e:	mov    QWORD PTR [r15+0x28],r14
  42e182:	lea    rax,[r14+0x1]
  42e186:	mov    QWORD PTR [r15+0x28],rax
  42e18a:	mov    BYTE PTR [r14],0x5d
  42e18e:	add    rsp,0x8
  42e192:	pop    rbx
  42e193:	pop    r12
  42e195:	pop    r13
  42e197:	pop    r14
  42e199:	pop    r15
  42e19b:	pop    rbp
  42e19c:	ret    
  42e19d:	nop    DWORD PTR [rax]

000000000042e1a0 <flatcc_json_printer_uint32_vector_field@@Base>:
  42e1a0:	push   rbp
  42e1a1:	push   r15
  42e1a3:	push   r14
  42e1a5:	push   r12
  42e1a7:	push   rbx
  42e1a8:	lea    eax,[rdx+rdx*1]
  42e1ab:	add    eax,0x4
  42e1ae:	cmp    eax,DWORD PTR [rsi+0x10]
  42e1b1:	jge    42e4be <flatcc_json_printer_uint32_vector_field@@Base+0x31e>
  42e1b7:	mov    rdx,QWORD PTR [rsi+0x8]
  42e1bb:	mov    eax,eax
  42e1bd:	movzx  r12d,WORD PTR [rdx+rax*1]
  42e1c2:	test   r12,r12
  42e1c5:	je     42e4be <flatcc_json_printer_uint32_vector_field@@Base+0x31e>
  42e1cb:	add    r12,QWORD PTR [rsi]
  42e1ce:	je     42e4be <flatcc_json_printer_uint32_vector_field@@Base+0x31e>
  42e1d4:	mov    r15,rdi
  42e1d7:	mov    eax,DWORD PTR [rsi+0x18]
  42e1da:	lea    edx,[rax+0x1]
  42e1dd:	mov    DWORD PTR [rsi+0x18],edx
  42e1e0:	test   eax,eax
  42e1e2:	je     42e1f3 <flatcc_json_printer_uint32_vector_field@@Base+0x53>
  42e1e4:	mov    rax,QWORD PTR [r15+0x28]
  42e1e8:	lea    rdx,[rax+0x1]
  42e1ec:	mov    QWORD PTR [r15+0x28],rdx
  42e1f0:	mov    BYTE PTR [rax],0x2c
  42e1f3:	mov    ebx,DWORD PTR [r12]
  42e1f7:	mov    ebp,DWORD PTR [r12+rbx*1]
  42e1fb:	movsxd rdx,r8d
  42e1fe:	mov    rdi,r15
  42e201:	mov    rsi,rcx
  42e204:	call   42ae90 <flatcc_json_printer_string_field@@Base+0x80>
  42e209:	add    DWORD PTR [r15+0x38],0x1
  42e20e:	mov    rax,QWORD PTR [r15+0x28]
  42e212:	lea    rcx,[rax+0x1]
  42e216:	mov    QWORD PTR [r15+0x28],rcx
  42e21a:	mov    BYTE PTR [rax],0x5b
  42e21d:	test   ebp,ebp
  42e21f:	je     42e402 <flatcc_json_printer_uint32_vector_field@@Base+0x262>
  42e225:	add    r12,rbx
  42e228:	cmp    BYTE PTR [r15+0x31],0x0
  42e22d:	mov    r14,QWORD PTR [r15+0x28]
  42e231:	je     42e2c4 <flatcc_json_printer_uint32_vector_field@@Base+0x124>
  42e237:	lea    rax,[r14+0x1]
  42e23b:	mov    QWORD PTR [r15+0x28],rax
  42e23f:	mov    BYTE PTR [r14],0xa
  42e243:	movsxd rax,DWORD PTR [r15+0x38]
  42e247:	movzx  r14d,BYTE PTR [r15+0x31]
  42e24c:	imul   r14,rax
  42e250:	mov    rbx,QWORD PTR [r15+0x20]
  42e254:	mov    rdi,QWORD PTR [r15+0x28]
  42e258:	lea    rax,[rdi+r14*1]
  42e25c:	cmp    rax,rbx
  42e25f:	jbe    42e2ad <flatcc_json_printer_uint32_vector_field@@Base+0x10d>
  42e261:	cmp    rdi,rbx
  42e264:	jb     42e277 <flatcc_json_printer_uint32_vector_field@@Base+0xd7>
  42e266:	xor    esi,esi
  42e268:	mov    rdi,r15
  42e26b:	call   QWORD PTR [r15+0x48]
  42e26f:	mov    rbx,QWORD PTR [r15+0x20]
  42e273:	mov    rdi,QWORD PTR [r15+0x28]
  42e277:	sub    rbx,rdi
  42e27a:	cmp    rbx,r14
  42e27d:	jae    42e2ad <flatcc_json_printer_uint32_vector_field@@Base+0x10d>
  42e27f:	nop
  42e280:	mov    esi,0x20
  42e285:	mov    rdx,rbx
  42e288:	call   406080 <memset@plt>
  42e28d:	add    QWORD PTR [r15+0x28],rbx
  42e291:	sub    r14,rbx
  42e294:	xor    esi,esi
  42e296:	mov    rdi,r15
  42e299:	call   QWORD PTR [r15+0x48]
  42e29d:	mov    rbx,QWORD PTR [r15+0x20]
  42e2a1:	mov    rdi,QWORD PTR [r15+0x28]
  42e2a5:	sub    rbx,rdi
  42e2a8:	cmp    r14,rbx
  42e2ab:	ja     42e280 <flatcc_json_printer_uint32_vector_field@@Base+0xe0>
  42e2ad:	mov    esi,0x20
  42e2b2:	mov    rdx,r14
  42e2b5:	call   406080 <memset@plt>
  42e2ba:	add    r14,QWORD PTR [r15+0x28]
  42e2be:	mov    QWORD PTR [r15+0x28],r14
  42e2c2:	jmp    42e2d7 <flatcc_json_printer_uint32_vector_field@@Base+0x137>
  42e2c4:	cmp    r14,QWORD PTR [r15+0x20]
  42e2c8:	jb     42e2d7 <flatcc_json_printer_uint32_vector_field@@Base+0x137>
  42e2ca:	xor    esi,esi
  42e2cc:	mov    rdi,r15
  42e2cf:	call   QWORD PTR [r15+0x48]
  42e2d3:	mov    r14,QWORD PTR [r15+0x28]
  42e2d7:	mov    edi,DWORD PTR [r12+0x4]
  42e2dc:	mov    rsi,r14
  42e2df:	call   42a270 <flatcc_json_printer_uint32@@Base+0x20>
  42e2e4:	cdqe   
  42e2e6:	add    QWORD PTR [r15+0x28],rax
  42e2ea:	add    ebp,0xffffffff
  42e2ed:	je     42e402 <flatcc_json_printer_uint32_vector_field@@Base+0x262>
  42e2f3:	add    r12,0x8
  42e2f7:	mov    rax,QWORD PTR [r15+0x28]
  42e2fb:	nop    DWORD PTR [rax+rax*1+0x0]
  42e300:	add    ebp,0xffffffff
  42e303:	lea    rcx,[rax+0x1]
  42e307:	mov    QWORD PTR [r15+0x28],rcx
  42e30b:	mov    BYTE PTR [rax],0x2c
  42e30e:	cmp    BYTE PTR [r15+0x31],0x0
  42e313:	mov    r14,QWORD PTR [r15+0x28]
  42e317:	je     42e3c0 <flatcc_json_printer_uint32_vector_field@@Base+0x220>
  42e31d:	lea    rax,[r14+0x1]
  42e321:	mov    QWORD PTR [r15+0x28],rax
  42e325:	mov    BYTE PTR [r14],0xa
  42e329:	movsxd rax,DWORD PTR [r15+0x38]
  42e32d:	movzx  r14d,BYTE PTR [r15+0x31]
  42e332:	imul   r14,rax
  42e336:	mov    rbx,QWORD PTR [r15+0x20]
  42e33a:	mov    rdi,QWORD PTR [r15+0x28]
  42e33e:	lea    rax,[rdi+r14*1]
  42e342:	cmp    rax,rbx
  42e345:	jbe    42e39d <flatcc_json_printer_uint32_vector_field@@Base+0x1fd>
  42e347:	cmp    rdi,rbx
  42e34a:	jb     42e35d <flatcc_json_printer_uint32_vector_field@@Base+0x1bd>
  42e34c:	xor    esi,esi
  42e34e:	mov    rdi,r15
  42e351:	call   QWORD PTR [r15+0x48]
  42e355:	mov    rbx,QWORD PTR [r15+0x20]
  42e359:	mov    rdi,QWORD PTR [r15+0x28]
  42e35d:	sub    rbx,rdi
  42e360:	cmp    rbx,r14
  42e363:	jae    42e39d <flatcc_json_printer_uint32_vector_field@@Base+0x1fd>
  42e365:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42e36f:	nop
  42e370:	mov    esi,0x20
  42e375:	mov    rdx,rbx
  42e378:	call   406080 <memset@plt>
  42e37d:	add    QWORD PTR [r15+0x28],rbx
  42e381:	sub    r14,rbx
  42e384:	xor    esi,esi
  42e386:	mov    rdi,r15
  42e389:	call   QWORD PTR [r15+0x48]
  42e38d:	mov    rbx,QWORD PTR [r15+0x20]
  42e391:	mov    rdi,QWORD PTR [r15+0x28]
  42e395:	sub    rbx,rdi
  42e398:	cmp    r14,rbx
  42e39b:	ja     42e370 <flatcc_json_printer_uint32_vector_field@@Base+0x1d0>
  42e39d:	mov    esi,0x20
  42e3a2:	mov    rdx,r14
  42e3a5:	call   406080 <memset@plt>
  42e3aa:	add    r14,QWORD PTR [r15+0x28]
  42e3ae:	mov    QWORD PTR [r15+0x28],r14
  42e3b2:	jmp    42e3e0 <flatcc_json_printer_uint32_vector_field@@Base+0x240>
  42e3b4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42e3be:	xchg   ax,ax
  42e3c0:	cmp    r14,QWORD PTR [r15+0x20]
  42e3c4:	jb     42e3e0 <flatcc_json_printer_uint32_vector_field@@Base+0x240>
  42e3c6:	xor    esi,esi
  42e3c8:	mov    rdi,r15
  42e3cb:	call   QWORD PTR [r15+0x48]
  42e3cf:	mov    r14,QWORD PTR [r15+0x28]
  42e3d3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42e3dd:	nop    DWORD PTR [rax]
  42e3e0:	mov    edi,DWORD PTR [r12]
  42e3e4:	mov    rsi,r14
  42e3e7:	call   42a270 <flatcc_json_printer_uint32@@Base+0x20>
  42e3ec:	cdqe   
  42e3ee:	add    rax,QWORD PTR [r15+0x28]
  42e3f2:	mov    QWORD PTR [r15+0x28],rax
  42e3f6:	add    r12,0x4
  42e3fa:	test   ebp,ebp
  42e3fc:	jne    42e300 <flatcc_json_printer_uint32_vector_field@@Base+0x160>
  42e402:	cmp    BYTE PTR [r15+0x31],0x0
  42e407:	mov    r14,QWORD PTR [r15+0x28]
  42e40b:	je     42e4b2 <flatcc_json_printer_uint32_vector_field@@Base+0x312>
  42e411:	lea    rax,[r14+0x1]
  42e415:	mov    QWORD PTR [r15+0x28],rax
  42e419:	mov    BYTE PTR [r14],0xa
  42e41d:	movsxd rax,DWORD PTR [r15+0x38]
  42e421:	add    rax,0xffffffffffffffff
  42e425:	mov    DWORD PTR [r15+0x38],eax
  42e429:	movzx  r14d,BYTE PTR [r15+0x31]
  42e42e:	imul   r14,rax
  42e432:	mov    rbx,QWORD PTR [r15+0x20]
  42e436:	mov    rdi,QWORD PTR [r15+0x28]
  42e43a:	lea    rax,[rdi+r14*1]
  42e43e:	cmp    rax,rbx
  42e441:	jbe    42e49d <flatcc_json_printer_uint32_vector_field@@Base+0x2fd>
  42e443:	cmp    rdi,rbx
  42e446:	jb     42e459 <flatcc_json_printer_uint32_vector_field@@Base+0x2b9>
  42e448:	xor    esi,esi
  42e44a:	mov    rdi,r15
  42e44d:	call   QWORD PTR [r15+0x48]
  42e451:	mov    rbx,QWORD PTR [r15+0x20]
  42e455:	mov    rdi,QWORD PTR [r15+0x28]
  42e459:	sub    rbx,rdi
  42e45c:	cmp    rbx,r14
  42e45f:	jae    42e49d <flatcc_json_printer_uint32_vector_field@@Base+0x2fd>
  42e461:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42e46b:	nop    DWORD PTR [rax+rax*1+0x0]
  42e470:	mov    esi,0x20
  42e475:	mov    rdx,rbx
  42e478:	call   406080 <memset@plt>
  42e47d:	add    QWORD PTR [r15+0x28],rbx
  42e481:	sub    r14,rbx
  42e484:	xor    esi,esi
  42e486:	mov    rdi,r15
  42e489:	call   QWORD PTR [r15+0x48]
  42e48d:	mov    rbx,QWORD PTR [r15+0x20]
  42e491:	mov    rdi,QWORD PTR [r15+0x28]
  42e495:	sub    rbx,rdi
  42e498:	cmp    r14,rbx
  42e49b:	ja     42e470 <flatcc_json_printer_uint32_vector_field@@Base+0x2d0>
  42e49d:	mov    esi,0x20
  42e4a2:	mov    rdx,r14
  42e4a5:	call   406080 <memset@plt>
  42e4aa:	add    r14,QWORD PTR [r15+0x28]
  42e4ae:	mov    QWORD PTR [r15+0x28],r14
  42e4b2:	lea    rax,[r14+0x1]
  42e4b6:	mov    QWORD PTR [r15+0x28],rax
  42e4ba:	mov    BYTE PTR [r14],0x5d
  42e4be:	pop    rbx
  42e4bf:	pop    r12
  42e4c1:	pop    r14
  42e4c3:	pop    r15
  42e4c5:	pop    rbp
  42e4c6:	ret    
  42e4c7:	nop    WORD PTR [rax+rax*1+0x0]

000000000042e4d0 <flatcc_json_printer_uint64_vector_field@@Base>:
  42e4d0:	push   rbp
  42e4d1:	push   r15
  42e4d3:	push   r14
  42e4d5:	push   r12
  42e4d7:	push   rbx
  42e4d8:	lea    eax,[rdx+rdx*1]
  42e4db:	add    eax,0x4
  42e4de:	cmp    eax,DWORD PTR [rsi+0x10]
  42e4e1:	jge    42e7ee <flatcc_json_printer_uint64_vector_field@@Base+0x31e>
  42e4e7:	mov    rdx,QWORD PTR [rsi+0x8]
  42e4eb:	mov    eax,eax
  42e4ed:	movzx  r12d,WORD PTR [rdx+rax*1]
  42e4f2:	test   r12,r12
  42e4f5:	je     42e7ee <flatcc_json_printer_uint64_vector_field@@Base+0x31e>
  42e4fb:	add    r12,QWORD PTR [rsi]
  42e4fe:	je     42e7ee <flatcc_json_printer_uint64_vector_field@@Base+0x31e>
  42e504:	mov    r15,rdi
  42e507:	mov    eax,DWORD PTR [rsi+0x18]
  42e50a:	lea    edx,[rax+0x1]
  42e50d:	mov    DWORD PTR [rsi+0x18],edx
  42e510:	test   eax,eax
  42e512:	je     42e523 <flatcc_json_printer_uint64_vector_field@@Base+0x53>
  42e514:	mov    rax,QWORD PTR [r15+0x28]
  42e518:	lea    rdx,[rax+0x1]
  42e51c:	mov    QWORD PTR [r15+0x28],rdx
  42e520:	mov    BYTE PTR [rax],0x2c
  42e523:	mov    ebx,DWORD PTR [r12]
  42e527:	mov    ebp,DWORD PTR [r12+rbx*1]
  42e52b:	movsxd rdx,r8d
  42e52e:	mov    rdi,r15
  42e531:	mov    rsi,rcx
  42e534:	call   42ae90 <flatcc_json_printer_string_field@@Base+0x80>
  42e539:	add    DWORD PTR [r15+0x38],0x1
  42e53e:	mov    rax,QWORD PTR [r15+0x28]
  42e542:	lea    rcx,[rax+0x1]
  42e546:	mov    QWORD PTR [r15+0x28],rcx
  42e54a:	mov    BYTE PTR [rax],0x5b
  42e54d:	test   ebp,ebp
  42e54f:	je     42e732 <flatcc_json_printer_uint64_vector_field@@Base+0x262>
  42e555:	add    r12,rbx
  42e558:	cmp    BYTE PTR [r15+0x31],0x0
  42e55d:	mov    r14,QWORD PTR [r15+0x28]
  42e561:	je     42e5f4 <flatcc_json_printer_uint64_vector_field@@Base+0x124>
  42e567:	lea    rax,[r14+0x1]
  42e56b:	mov    QWORD PTR [r15+0x28],rax
  42e56f:	mov    BYTE PTR [r14],0xa
  42e573:	movsxd rax,DWORD PTR [r15+0x38]
  42e577:	movzx  r14d,BYTE PTR [r15+0x31]
  42e57c:	imul   r14,rax
  42e580:	mov    rbx,QWORD PTR [r15+0x20]
  42e584:	mov    rdi,QWORD PTR [r15+0x28]
  42e588:	lea    rax,[rdi+r14*1]
  42e58c:	cmp    rax,rbx
  42e58f:	jbe    42e5dd <flatcc_json_printer_uint64_vector_field@@Base+0x10d>
  42e591:	cmp    rdi,rbx
  42e594:	jb     42e5a7 <flatcc_json_printer_uint64_vector_field@@Base+0xd7>
  42e596:	xor    esi,esi
  42e598:	mov    rdi,r15
  42e59b:	call   QWORD PTR [r15+0x48]
  42e59f:	mov    rbx,QWORD PTR [r15+0x20]
  42e5a3:	mov    rdi,QWORD PTR [r15+0x28]
  42e5a7:	sub    rbx,rdi
  42e5aa:	cmp    rbx,r14
  42e5ad:	jae    42e5dd <flatcc_json_printer_uint64_vector_field@@Base+0x10d>
  42e5af:	nop
  42e5b0:	mov    esi,0x20
  42e5b5:	mov    rdx,rbx
  42e5b8:	call   406080 <memset@plt>
  42e5bd:	add    QWORD PTR [r15+0x28],rbx
  42e5c1:	sub    r14,rbx
  42e5c4:	xor    esi,esi
  42e5c6:	mov    rdi,r15
  42e5c9:	call   QWORD PTR [r15+0x48]
  42e5cd:	mov    rbx,QWORD PTR [r15+0x20]
  42e5d1:	mov    rdi,QWORD PTR [r15+0x28]
  42e5d5:	sub    rbx,rdi
  42e5d8:	cmp    r14,rbx
  42e5db:	ja     42e5b0 <flatcc_json_printer_uint64_vector_field@@Base+0xe0>
  42e5dd:	mov    esi,0x20
  42e5e2:	mov    rdx,r14
  42e5e5:	call   406080 <memset@plt>
  42e5ea:	add    r14,QWORD PTR [r15+0x28]
  42e5ee:	mov    QWORD PTR [r15+0x28],r14
  42e5f2:	jmp    42e607 <flatcc_json_printer_uint64_vector_field@@Base+0x137>
  42e5f4:	cmp    r14,QWORD PTR [r15+0x20]
  42e5f8:	jb     42e607 <flatcc_json_printer_uint64_vector_field@@Base+0x137>
  42e5fa:	xor    esi,esi
  42e5fc:	mov    rdi,r15
  42e5ff:	call   QWORD PTR [r15+0x48]
  42e603:	mov    r14,QWORD PTR [r15+0x28]
  42e607:	mov    rdi,QWORD PTR [r12+0x4]
  42e60c:	mov    rsi,r14
  42e60f:	call   42a500 <flatcc_json_printer_uint64@@Base+0x20>
  42e614:	cdqe   
  42e616:	add    QWORD PTR [r15+0x28],rax
  42e61a:	add    ebp,0xffffffff
  42e61d:	je     42e732 <flatcc_json_printer_uint64_vector_field@@Base+0x262>
  42e623:	add    r12,0xc
  42e627:	mov    rax,QWORD PTR [r15+0x28]
  42e62b:	nop    DWORD PTR [rax+rax*1+0x0]
  42e630:	add    ebp,0xffffffff
  42e633:	lea    rcx,[rax+0x1]
  42e637:	mov    QWORD PTR [r15+0x28],rcx
  42e63b:	mov    BYTE PTR [rax],0x2c
  42e63e:	cmp    BYTE PTR [r15+0x31],0x0
  42e643:	mov    r14,QWORD PTR [r15+0x28]
  42e647:	je     42e6f0 <flatcc_json_printer_uint64_vector_field@@Base+0x220>
  42e64d:	lea    rax,[r14+0x1]
  42e651:	mov    QWORD PTR [r15+0x28],rax
  42e655:	mov    BYTE PTR [r14],0xa
  42e659:	movsxd rax,DWORD PTR [r15+0x38]
  42e65d:	movzx  r14d,BYTE PTR [r15+0x31]
  42e662:	imul   r14,rax
  42e666:	mov    rbx,QWORD PTR [r15+0x20]
  42e66a:	mov    rdi,QWORD PTR [r15+0x28]
  42e66e:	lea    rax,[rdi+r14*1]
  42e672:	cmp    rax,rbx
  42e675:	jbe    42e6cd <flatcc_json_printer_uint64_vector_field@@Base+0x1fd>
  42e677:	cmp    rdi,rbx
  42e67a:	jb     42e68d <flatcc_json_printer_uint64_vector_field@@Base+0x1bd>
  42e67c:	xor    esi,esi
  42e67e:	mov    rdi,r15
  42e681:	call   QWORD PTR [r15+0x48]
  42e685:	mov    rbx,QWORD PTR [r15+0x20]
  42e689:	mov    rdi,QWORD PTR [r15+0x28]
  42e68d:	sub    rbx,rdi
  42e690:	cmp    rbx,r14
  42e693:	jae    42e6cd <flatcc_json_printer_uint64_vector_field@@Base+0x1fd>
  42e695:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42e69f:	nop
  42e6a0:	mov    esi,0x20
  42e6a5:	mov    rdx,rbx
  42e6a8:	call   406080 <memset@plt>
  42e6ad:	add    QWORD PTR [r15+0x28],rbx
  42e6b1:	sub    r14,rbx
  42e6b4:	xor    esi,esi
  42e6b6:	mov    rdi,r15
  42e6b9:	call   QWORD PTR [r15+0x48]
  42e6bd:	mov    rbx,QWORD PTR [r15+0x20]
  42e6c1:	mov    rdi,QWORD PTR [r15+0x28]
  42e6c5:	sub    rbx,rdi
  42e6c8:	cmp    r14,rbx
  42e6cb:	ja     42e6a0 <flatcc_json_printer_uint64_vector_field@@Base+0x1d0>
  42e6cd:	mov    esi,0x20
  42e6d2:	mov    rdx,r14
  42e6d5:	call   406080 <memset@plt>
  42e6da:	add    r14,QWORD PTR [r15+0x28]
  42e6de:	mov    QWORD PTR [r15+0x28],r14
  42e6e2:	jmp    42e710 <flatcc_json_printer_uint64_vector_field@@Base+0x240>
  42e6e4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42e6ee:	xchg   ax,ax
  42e6f0:	cmp    r14,QWORD PTR [r15+0x20]
  42e6f4:	jb     42e710 <flatcc_json_printer_uint64_vector_field@@Base+0x240>
  42e6f6:	xor    esi,esi
  42e6f8:	mov    rdi,r15
  42e6fb:	call   QWORD PTR [r15+0x48]
  42e6ff:	mov    r14,QWORD PTR [r15+0x28]
  42e703:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42e70d:	nop    DWORD PTR [rax]
  42e710:	mov    rdi,QWORD PTR [r12]
  42e714:	mov    rsi,r14
  42e717:	call   42a500 <flatcc_json_printer_uint64@@Base+0x20>
  42e71c:	cdqe   
  42e71e:	add    rax,QWORD PTR [r15+0x28]
  42e722:	mov    QWORD PTR [r15+0x28],rax
  42e726:	add    r12,0x8
  42e72a:	test   ebp,ebp
  42e72c:	jne    42e630 <flatcc_json_printer_uint64_vector_field@@Base+0x160>
  42e732:	cmp    BYTE PTR [r15+0x31],0x0
  42e737:	mov    r14,QWORD PTR [r15+0x28]
  42e73b:	je     42e7e2 <flatcc_json_printer_uint64_vector_field@@Base+0x312>
  42e741:	lea    rax,[r14+0x1]
  42e745:	mov    QWORD PTR [r15+0x28],rax
  42e749:	mov    BYTE PTR [r14],0xa
  42e74d:	movsxd rax,DWORD PTR [r15+0x38]
  42e751:	add    rax,0xffffffffffffffff
  42e755:	mov    DWORD PTR [r15+0x38],eax
  42e759:	movzx  r14d,BYTE PTR [r15+0x31]
  42e75e:	imul   r14,rax
  42e762:	mov    rbx,QWORD PTR [r15+0x20]
  42e766:	mov    rdi,QWORD PTR [r15+0x28]
  42e76a:	lea    rax,[rdi+r14*1]
  42e76e:	cmp    rax,rbx
  42e771:	jbe    42e7cd <flatcc_json_printer_uint64_vector_field@@Base+0x2fd>
  42e773:	cmp    rdi,rbx
  42e776:	jb     42e789 <flatcc_json_printer_uint64_vector_field@@Base+0x2b9>
  42e778:	xor    esi,esi
  42e77a:	mov    rdi,r15
  42e77d:	call   QWORD PTR [r15+0x48]
  42e781:	mov    rbx,QWORD PTR [r15+0x20]
  42e785:	mov    rdi,QWORD PTR [r15+0x28]
  42e789:	sub    rbx,rdi
  42e78c:	cmp    rbx,r14
  42e78f:	jae    42e7cd <flatcc_json_printer_uint64_vector_field@@Base+0x2fd>
  42e791:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42e79b:	nop    DWORD PTR [rax+rax*1+0x0]
  42e7a0:	mov    esi,0x20
  42e7a5:	mov    rdx,rbx
  42e7a8:	call   406080 <memset@plt>
  42e7ad:	add    QWORD PTR [r15+0x28],rbx
  42e7b1:	sub    r14,rbx
  42e7b4:	xor    esi,esi
  42e7b6:	mov    rdi,r15
  42e7b9:	call   QWORD PTR [r15+0x48]
  42e7bd:	mov    rbx,QWORD PTR [r15+0x20]
  42e7c1:	mov    rdi,QWORD PTR [r15+0x28]
  42e7c5:	sub    rbx,rdi
  42e7c8:	cmp    r14,rbx
  42e7cb:	ja     42e7a0 <flatcc_json_printer_uint64_vector_field@@Base+0x2d0>
  42e7cd:	mov    esi,0x20
  42e7d2:	mov    rdx,r14
  42e7d5:	call   406080 <memset@plt>
  42e7da:	add    r14,QWORD PTR [r15+0x28]
  42e7de:	mov    QWORD PTR [r15+0x28],r14
  42e7e2:	lea    rax,[r14+0x1]
  42e7e6:	mov    QWORD PTR [r15+0x28],rax
  42e7ea:	mov    BYTE PTR [r14],0x5d
  42e7ee:	pop    rbx
  42e7ef:	pop    r12
  42e7f1:	pop    r14
  42e7f3:	pop    r15
  42e7f5:	pop    rbp
  42e7f6:	ret    
  42e7f7:	nop    WORD PTR [rax+rax*1+0x0]

000000000042e800 <flatcc_json_printer_int8_vector_field@@Base>:
  42e800:	push   rbp
  42e801:	push   r15
  42e803:	push   r14
  42e805:	push   r13
  42e807:	push   r12
  42e809:	push   rbx
  42e80a:	push   rax
  42e80b:	lea    eax,[rdx+rdx*1]
  42e80e:	add    eax,0x4
  42e811:	cmp    eax,DWORD PTR [rsi+0x10]
  42e814:	jge    42ec5e <flatcc_json_printer_int8_vector_field@@Base+0x45e>
  42e81a:	mov    rdx,QWORD PTR [rsi+0x8]
  42e81e:	mov    eax,eax
  42e820:	movzx  r12d,WORD PTR [rdx+rax*1]
  42e825:	test   r12,r12
  42e828:	je     42ec5e <flatcc_json_printer_int8_vector_field@@Base+0x45e>
  42e82e:	add    r12,QWORD PTR [rsi]
  42e831:	je     42ec5e <flatcc_json_printer_int8_vector_field@@Base+0x45e>
  42e837:	mov    r15,rdi
  42e83a:	mov    eax,DWORD PTR [rsi+0x18]
  42e83d:	lea    edx,[rax+0x1]
  42e840:	mov    DWORD PTR [rsi+0x18],edx
  42e843:	test   eax,eax
  42e845:	je     42e856 <flatcc_json_printer_int8_vector_field@@Base+0x56>
  42e847:	mov    rax,QWORD PTR [r15+0x28]
  42e84b:	lea    rdx,[rax+0x1]
  42e84f:	mov    QWORD PTR [r15+0x28],rdx
  42e853:	mov    BYTE PTR [rax],0x2c
  42e856:	mov    ebx,DWORD PTR [r12]
  42e85a:	mov    ebp,DWORD PTR [r12+rbx*1]
  42e85e:	movsxd rdx,r8d
  42e861:	mov    rdi,r15
  42e864:	mov    rsi,rcx
  42e867:	call   42ae90 <flatcc_json_printer_string_field@@Base+0x80>
  42e86c:	add    DWORD PTR [r15+0x38],0x1
  42e871:	mov    rax,QWORD PTR [r15+0x28]
  42e875:	lea    rcx,[rax+0x1]
  42e879:	mov    QWORD PTR [r15+0x28],rcx
  42e87d:	mov    BYTE PTR [rax],0x5b
  42e880:	test   ebp,ebp
  42e882:	je     42eba7 <flatcc_json_printer_int8_vector_field@@Base+0x3a7>
  42e888:	add    r12,rbx
  42e88b:	cmp    BYTE PTR [r15+0x31],0x0
  42e890:	mov    r14,QWORD PTR [r15+0x28]
  42e894:	je     42e934 <flatcc_json_printer_int8_vector_field@@Base+0x134>
  42e89a:	lea    rax,[r14+0x1]
  42e89e:	mov    QWORD PTR [r15+0x28],rax
  42e8a2:	mov    BYTE PTR [r14],0xa
  42e8a6:	movsxd rax,DWORD PTR [r15+0x38]
  42e8aa:	movzx  r14d,BYTE PTR [r15+0x31]
  42e8af:	imul   r14,rax
  42e8b3:	mov    rbx,QWORD PTR [r15+0x20]
  42e8b7:	mov    rdi,QWORD PTR [r15+0x28]
  42e8bb:	lea    rax,[rdi+r14*1]
  42e8bf:	cmp    rax,rbx
  42e8c2:	jbe    42e91d <flatcc_json_printer_int8_vector_field@@Base+0x11d>
  42e8c4:	cmp    rdi,rbx
  42e8c7:	jb     42e8da <flatcc_json_printer_int8_vector_field@@Base+0xda>
  42e8c9:	xor    esi,esi
  42e8cb:	mov    rdi,r15
  42e8ce:	call   QWORD PTR [r15+0x48]
  42e8d2:	mov    rbx,QWORD PTR [r15+0x20]
  42e8d6:	mov    rdi,QWORD PTR [r15+0x28]
  42e8da:	sub    rbx,rdi
  42e8dd:	cmp    rbx,r14
  42e8e0:	jae    42e91d <flatcc_json_printer_int8_vector_field@@Base+0x11d>
  42e8e2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42e8ec:	nop    DWORD PTR [rax+0x0]
  42e8f0:	mov    esi,0x20
  42e8f5:	mov    rdx,rbx
  42e8f8:	call   406080 <memset@plt>
  42e8fd:	add    QWORD PTR [r15+0x28],rbx
  42e901:	sub    r14,rbx
  42e904:	xor    esi,esi
  42e906:	mov    rdi,r15
  42e909:	call   QWORD PTR [r15+0x48]
  42e90d:	mov    rbx,QWORD PTR [r15+0x20]
  42e911:	mov    rdi,QWORD PTR [r15+0x28]
  42e915:	sub    rbx,rdi
  42e918:	cmp    r14,rbx
  42e91b:	ja     42e8f0 <flatcc_json_printer_int8_vector_field@@Base+0xf0>
  42e91d:	mov    esi,0x20
  42e922:	mov    rdx,r14
  42e925:	call   406080 <memset@plt>
  42e92a:	add    r14,QWORD PTR [r15+0x28]
  42e92e:	mov    QWORD PTR [r15+0x28],r14
  42e932:	jmp    42e947 <flatcc_json_printer_int8_vector_field@@Base+0x147>
  42e934:	cmp    r14,QWORD PTR [r15+0x20]
  42e938:	jb     42e947 <flatcc_json_printer_int8_vector_field@@Base+0x147>
  42e93a:	xor    esi,esi
  42e93c:	mov    rdi,r15
  42e93f:	call   QWORD PTR [r15+0x48]
  42e943:	mov    r14,QWORD PTR [r15+0x28]
  42e947:	movzx  edx,BYTE PTR [r12+0x4]
  42e94d:	test   dl,dl
  42e94f:	js     42e955 <flatcc_json_printer_int8_vector_field@@Base+0x155>
  42e951:	mov    ebx,edx
  42e953:	jmp    42e961 <flatcc_json_printer_int8_vector_field@@Base+0x161>
  42e955:	mov    BYTE PTR [r14],0x2d
  42e959:	add    r14,0x1
  42e95d:	mov    ebx,edx
  42e95f:	neg    bl
  42e961:	shr    rdx,0x7
  42e965:	cmp    bl,0x64
  42e968:	jb     42e9a5 <flatcc_json_printer_int8_vector_field@@Base+0x1a5>
  42e96a:	mov    BYTE PTR [r14+0x3],0x0
  42e96f:	movzx  eax,bl
  42e972:	lea    ecx,[rax+rax*4]
  42e975:	lea    ecx,[rax+rcx*8]
  42e978:	shr    ecx,0xc
  42e97b:	mov    sil,0x64
  42e97e:	mov    eax,ecx
  42e980:	mul    sil
  42e983:	sub    bl,al
  42e985:	movzx  eax,bl
  42e988:	lea    rsi,[rip+0xe521]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42e98f:	movzx  eax,WORD PTR [rsi+rax*2]
  42e993:	mov    WORD PTR [r14+0x1],ax
  42e998:	or     cl,0x30
  42e99b:	mov    BYTE PTR [r14],cl
  42e99e:	mov    eax,0x3
  42e9a3:	jmp    42e9ea <flatcc_json_printer_int8_vector_field@@Base+0x1ea>
  42e9a5:	cmp    bl,0xa
  42e9a8:	jb     42e9da <flatcc_json_printer_int8_vector_field@@Base+0x1da>
  42e9aa:	mov    BYTE PTR [r14+0x2],0x0
  42e9af:	movzx  eax,bl
  42e9b2:	lea    ecx,[rax+rax*4]
  42e9b5:	lea    eax,[rax+rcx*8]
  42e9b8:	shr    eax,0xc
  42e9bb:	mov    cl,0x64
  42e9bd:	mul    cl
  42e9bf:	sub    bl,al
  42e9c1:	movzx  eax,bl
  42e9c4:	lea    rcx,[rip+0xe4e5]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42e9cb:	movzx  eax,WORD PTR [rcx+rax*2]
  42e9cf:	mov    WORD PTR [r14],ax
  42e9d3:	mov    eax,0x2
  42e9d8:	jmp    42e9ea <flatcc_json_printer_int8_vector_field@@Base+0x1ea>
  42e9da:	mov    BYTE PTR [r14+0x1],0x0
  42e9df:	add    bl,0x30
  42e9e2:	mov    BYTE PTR [r14],bl
  42e9e5:	mov    eax,0x1
  42e9ea:	add    rax,rdx
  42e9ed:	add    QWORD PTR [r15+0x28],rax
  42e9f1:	add    ebp,0xffffffff
  42e9f4:	je     42eba7 <flatcc_json_printer_int8_vector_field@@Base+0x3a7>
  42e9fa:	add    r12,0x5
  42e9fe:	mov    rax,QWORD PTR [r15+0x28]
  42ea02:	lea    r13,[rip+0xe4a7]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42ea09:	nop    DWORD PTR [rax+0x0]
  42ea10:	lea    rcx,[rax+0x1]
  42ea14:	mov    QWORD PTR [r15+0x28],rcx
  42ea18:	mov    BYTE PTR [rax],0x2c
  42ea1b:	cmp    BYTE PTR [r15+0x31],0x0
  42ea20:	mov    r14,QWORD PTR [r15+0x28]
  42ea24:	je     42ead0 <flatcc_json_printer_int8_vector_field@@Base+0x2d0>
  42ea2a:	lea    rax,[r14+0x1]
  42ea2e:	mov    QWORD PTR [r15+0x28],rax
  42ea32:	mov    BYTE PTR [r14],0xa
  42ea36:	movsxd rax,DWORD PTR [r15+0x38]
  42ea3a:	movzx  r14d,BYTE PTR [r15+0x31]
  42ea3f:	imul   r14,rax
  42ea43:	mov    rbx,QWORD PTR [r15+0x20]
  42ea47:	mov    rdi,QWORD PTR [r15+0x28]
  42ea4b:	lea    rax,[rdi+r14*1]
  42ea4f:	cmp    rax,rbx
  42ea52:	jbe    42eaad <flatcc_json_printer_int8_vector_field@@Base+0x2ad>
  42ea54:	cmp    rdi,rbx
  42ea57:	jb     42ea6a <flatcc_json_printer_int8_vector_field@@Base+0x26a>
  42ea59:	xor    esi,esi
  42ea5b:	mov    rdi,r15
  42ea5e:	call   QWORD PTR [r15+0x48]
  42ea62:	mov    rbx,QWORD PTR [r15+0x20]
  42ea66:	mov    rdi,QWORD PTR [r15+0x28]
  42ea6a:	sub    rbx,rdi
  42ea6d:	cmp    rbx,r14
  42ea70:	jae    42eaad <flatcc_json_printer_int8_vector_field@@Base+0x2ad>
  42ea72:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ea7c:	nop    DWORD PTR [rax+0x0]
  42ea80:	mov    esi,0x20
  42ea85:	mov    rdx,rbx
  42ea88:	call   406080 <memset@plt>
  42ea8d:	add    QWORD PTR [r15+0x28],rbx
  42ea91:	sub    r14,rbx
  42ea94:	xor    esi,esi
  42ea96:	mov    rdi,r15
  42ea99:	call   QWORD PTR [r15+0x48]
  42ea9d:	mov    rbx,QWORD PTR [r15+0x20]
  42eaa1:	mov    rdi,QWORD PTR [r15+0x28]
  42eaa5:	sub    rbx,rdi
  42eaa8:	cmp    r14,rbx
  42eaab:	ja     42ea80 <flatcc_json_printer_int8_vector_field@@Base+0x280>
  42eaad:	mov    esi,0x20
  42eab2:	mov    rdx,r14
  42eab5:	call   406080 <memset@plt>
  42eaba:	add    r14,QWORD PTR [r15+0x28]
  42eabe:	mov    QWORD PTR [r15+0x28],r14
  42eac2:	jmp    42eaf0 <flatcc_json_printer_int8_vector_field@@Base+0x2f0>
  42eac4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42eace:	xchg   ax,ax
  42ead0:	cmp    r14,QWORD PTR [r15+0x20]
  42ead4:	jb     42eaf0 <flatcc_json_printer_int8_vector_field@@Base+0x2f0>
  42ead6:	xor    esi,esi
  42ead8:	mov    rdi,r15
  42eadb:	call   QWORD PTR [r15+0x48]
  42eadf:	mov    r14,QWORD PTR [r15+0x28]
  42eae3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42eaed:	nop    DWORD PTR [rax]
  42eaf0:	movzx  esi,BYTE PTR [r12]
  42eaf5:	test   sil,sil
  42eaf8:	js     42eb00 <flatcc_json_printer_int8_vector_field@@Base+0x300>
  42eafa:	mov    ebx,esi
  42eafc:	jmp    42eb0c <flatcc_json_printer_int8_vector_field@@Base+0x30c>
  42eafe:	xchg   ax,ax
  42eb00:	mov    BYTE PTR [r14],0x2d
  42eb04:	add    r14,0x1
  42eb08:	mov    ebx,esi
  42eb0a:	neg    bl
  42eb0c:	add    ebp,0xffffffff
  42eb0f:	shr    rsi,0x7
  42eb13:	cmp    bl,0x64
  42eb16:	jb     42eb50 <flatcc_json_printer_int8_vector_field@@Base+0x350>
  42eb18:	mov    BYTE PTR [r14+0x3],0x0
  42eb1d:	movzx  eax,bl
  42eb20:	lea    ecx,[rax+rax*4]
  42eb23:	lea    ecx,[rax+rcx*8]
  42eb26:	shr    ecx,0xc
  42eb29:	mov    eax,ecx
  42eb2b:	mov    dl,0x64
  42eb2d:	mul    dl
  42eb2f:	sub    bl,al
  42eb31:	movzx  eax,bl
  42eb34:	movzx  eax,WORD PTR [r13+rax*2+0x0]
  42eb3a:	mov    WORD PTR [r14+0x1],ax
  42eb3f:	or     cl,0x30
  42eb42:	mov    BYTE PTR [r14],cl
  42eb45:	mov    eax,0x3
  42eb4a:	jmp    42eb90 <flatcc_json_printer_int8_vector_field@@Base+0x390>
  42eb4c:	nop    DWORD PTR [rax+0x0]
  42eb50:	cmp    bl,0xa
  42eb53:	jb     42eb80 <flatcc_json_printer_int8_vector_field@@Base+0x380>
  42eb55:	mov    BYTE PTR [r14+0x2],0x0
  42eb5a:	movzx  eax,bl
  42eb5d:	lea    ecx,[rax+rax*4]
  42eb60:	lea    eax,[rax+rcx*8]
  42eb63:	shr    eax,0xc
  42eb66:	mov    cl,0x64
  42eb68:	mul    cl
  42eb6a:	sub    bl,al
  42eb6c:	movzx  eax,bl
  42eb6f:	movzx  eax,WORD PTR [r13+rax*2+0x0]
  42eb75:	mov    WORD PTR [r14],ax
  42eb79:	mov    eax,0x2
  42eb7e:	jmp    42eb90 <flatcc_json_printer_int8_vector_field@@Base+0x390>
  42eb80:	mov    BYTE PTR [r14+0x1],0x0
  42eb85:	add    bl,0x30
  42eb88:	mov    BYTE PTR [r14],bl
  42eb8b:	mov    eax,0x1
  42eb90:	add    rax,rsi
  42eb93:	add    rax,QWORD PTR [r15+0x28]
  42eb97:	mov    QWORD PTR [r15+0x28],rax
  42eb9b:	add    r12,0x1
  42eb9f:	test   ebp,ebp
  42eba1:	jne    42ea10 <flatcc_json_printer_int8_vector_field@@Base+0x210>
  42eba7:	cmp    BYTE PTR [r15+0x31],0x0
  42ebac:	mov    r14,QWORD PTR [r15+0x28]
  42ebb0:	je     42ec52 <flatcc_json_printer_int8_vector_field@@Base+0x452>
  42ebb6:	lea    rax,[r14+0x1]
  42ebba:	mov    QWORD PTR [r15+0x28],rax
  42ebbe:	mov    BYTE PTR [r14],0xa
  42ebc2:	movsxd rax,DWORD PTR [r15+0x38]
  42ebc6:	add    rax,0xffffffffffffffff
  42ebca:	mov    DWORD PTR [r15+0x38],eax
  42ebce:	movzx  r14d,BYTE PTR [r15+0x31]
  42ebd3:	imul   r14,rax
  42ebd7:	mov    rbx,QWORD PTR [r15+0x20]
  42ebdb:	mov    rdi,QWORD PTR [r15+0x28]
  42ebdf:	lea    rax,[rdi+r14*1]
  42ebe3:	cmp    rax,rbx
  42ebe6:	jbe    42ec3d <flatcc_json_printer_int8_vector_field@@Base+0x43d>
  42ebe8:	cmp    rdi,rbx
  42ebeb:	jb     42ebfe <flatcc_json_printer_int8_vector_field@@Base+0x3fe>
  42ebed:	xor    esi,esi
  42ebef:	mov    rdi,r15
  42ebf2:	call   QWORD PTR [r15+0x48]
  42ebf6:	mov    rbx,QWORD PTR [r15+0x20]
  42ebfa:	mov    rdi,QWORD PTR [r15+0x28]
  42ebfe:	sub    rbx,rdi
  42ec01:	cmp    rbx,r14
  42ec04:	jae    42ec3d <flatcc_json_printer_int8_vector_field@@Base+0x43d>
  42ec06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ec10:	mov    esi,0x20
  42ec15:	mov    rdx,rbx
  42ec18:	call   406080 <memset@plt>
  42ec1d:	add    QWORD PTR [r15+0x28],rbx
  42ec21:	sub    r14,rbx
  42ec24:	xor    esi,esi
  42ec26:	mov    rdi,r15
  42ec29:	call   QWORD PTR [r15+0x48]
  42ec2d:	mov    rbx,QWORD PTR [r15+0x20]
  42ec31:	mov    rdi,QWORD PTR [r15+0x28]
  42ec35:	sub    rbx,rdi
  42ec38:	cmp    r14,rbx
  42ec3b:	ja     42ec10 <flatcc_json_printer_int8_vector_field@@Base+0x410>
  42ec3d:	mov    esi,0x20
  42ec42:	mov    rdx,r14
  42ec45:	call   406080 <memset@plt>
  42ec4a:	add    r14,QWORD PTR [r15+0x28]
  42ec4e:	mov    QWORD PTR [r15+0x28],r14
  42ec52:	lea    rax,[r14+0x1]
  42ec56:	mov    QWORD PTR [r15+0x28],rax
  42ec5a:	mov    BYTE PTR [r14],0x5d
  42ec5e:	add    rsp,0x8
  42ec62:	pop    rbx
  42ec63:	pop    r12
  42ec65:	pop    r13
  42ec67:	pop    r14
  42ec69:	pop    r15
  42ec6b:	pop    rbp
  42ec6c:	ret    
  42ec6d:	nop    DWORD PTR [rax]

000000000042ec70 <flatcc_json_printer_int16_vector_field@@Base>:
  42ec70:	push   rbp
  42ec71:	push   r15
  42ec73:	push   r14
  42ec75:	push   r13
  42ec77:	push   r12
  42ec79:	push   rbx
  42ec7a:	push   rax
  42ec7b:	lea    eax,[rdx+rdx*1]
  42ec7e:	add    eax,0x4
  42ec81:	cmp    eax,DWORD PTR [rsi+0x10]
  42ec84:	jge    42f1fe <flatcc_json_printer_int16_vector_field@@Base+0x58e>
  42ec8a:	mov    rdx,QWORD PTR [rsi+0x8]
  42ec8e:	mov    eax,eax
  42ec90:	movzx  r12d,WORD PTR [rdx+rax*1]
  42ec95:	test   r12,r12
  42ec98:	je     42f1fe <flatcc_json_printer_int16_vector_field@@Base+0x58e>
  42ec9e:	add    r12,QWORD PTR [rsi]
  42eca1:	je     42f1fe <flatcc_json_printer_int16_vector_field@@Base+0x58e>
  42eca7:	mov    r15,rdi
  42ecaa:	mov    eax,DWORD PTR [rsi+0x18]
  42ecad:	lea    edx,[rax+0x1]
  42ecb0:	mov    DWORD PTR [rsi+0x18],edx
  42ecb3:	test   eax,eax
  42ecb5:	je     42ecc6 <flatcc_json_printer_int16_vector_field@@Base+0x56>
  42ecb7:	mov    rax,QWORD PTR [r15+0x28]
  42ecbb:	lea    rdx,[rax+0x1]
  42ecbf:	mov    QWORD PTR [r15+0x28],rdx
  42ecc3:	mov    BYTE PTR [rax],0x2c
  42ecc6:	mov    ebx,DWORD PTR [r12]
  42ecca:	mov    ebp,DWORD PTR [r12+rbx*1]
  42ecce:	movsxd rdx,r8d
  42ecd1:	mov    rdi,r15
  42ecd4:	mov    rsi,rcx
  42ecd7:	call   42ae90 <flatcc_json_printer_string_field@@Base+0x80>
  42ecdc:	add    DWORD PTR [r15+0x38],0x1
  42ece1:	mov    rax,QWORD PTR [r15+0x28]
  42ece5:	lea    rcx,[rax+0x1]
  42ece9:	mov    QWORD PTR [r15+0x28],rcx
  42eced:	mov    BYTE PTR [rax],0x5b
  42ecf0:	test   ebp,ebp
  42ecf2:	je     42f146 <flatcc_json_printer_int16_vector_field@@Base+0x4d6>
  42ecf8:	add    r12,rbx
  42ecfb:	cmp    BYTE PTR [r15+0x31],0x0
  42ed00:	mov    r14,QWORD PTR [r15+0x28]
  42ed04:	je     42eda4 <flatcc_json_printer_int16_vector_field@@Base+0x134>
  42ed0a:	lea    rax,[r14+0x1]
  42ed0e:	mov    QWORD PTR [r15+0x28],rax
  42ed12:	mov    BYTE PTR [r14],0xa
  42ed16:	movsxd rax,DWORD PTR [r15+0x38]
  42ed1a:	movzx  r14d,BYTE PTR [r15+0x31]
  42ed1f:	imul   r14,rax
  42ed23:	mov    rbx,QWORD PTR [r15+0x20]
  42ed27:	mov    rdi,QWORD PTR [r15+0x28]
  42ed2b:	lea    rax,[rdi+r14*1]
  42ed2f:	cmp    rax,rbx
  42ed32:	jbe    42ed8d <flatcc_json_printer_int16_vector_field@@Base+0x11d>
  42ed34:	cmp    rdi,rbx
  42ed37:	jb     42ed4a <flatcc_json_printer_int16_vector_field@@Base+0xda>
  42ed39:	xor    esi,esi
  42ed3b:	mov    rdi,r15
  42ed3e:	call   QWORD PTR [r15+0x48]
  42ed42:	mov    rbx,QWORD PTR [r15+0x20]
  42ed46:	mov    rdi,QWORD PTR [r15+0x28]
  42ed4a:	sub    rbx,rdi
  42ed4d:	cmp    rbx,r14
  42ed50:	jae    42ed8d <flatcc_json_printer_int16_vector_field@@Base+0x11d>
  42ed52:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ed5c:	nop    DWORD PTR [rax+0x0]
  42ed60:	mov    esi,0x20
  42ed65:	mov    rdx,rbx
  42ed68:	call   406080 <memset@plt>
  42ed6d:	add    QWORD PTR [r15+0x28],rbx
  42ed71:	sub    r14,rbx
  42ed74:	xor    esi,esi
  42ed76:	mov    rdi,r15
  42ed79:	call   QWORD PTR [r15+0x48]
  42ed7d:	mov    rbx,QWORD PTR [r15+0x20]
  42ed81:	mov    rdi,QWORD PTR [r15+0x28]
  42ed85:	sub    rbx,rdi
  42ed88:	cmp    r14,rbx
  42ed8b:	ja     42ed60 <flatcc_json_printer_int16_vector_field@@Base+0xf0>
  42ed8d:	mov    esi,0x20
  42ed92:	mov    rdx,r14
  42ed95:	call   406080 <memset@plt>
  42ed9a:	add    r14,QWORD PTR [r15+0x28]
  42ed9e:	mov    QWORD PTR [r15+0x28],r14
  42eda2:	jmp    42edb7 <flatcc_json_printer_int16_vector_field@@Base+0x147>
  42eda4:	cmp    r14,QWORD PTR [r15+0x20]
  42eda8:	jb     42edb7 <flatcc_json_printer_int16_vector_field@@Base+0x147>
  42edaa:	xor    esi,esi
  42edac:	mov    rdi,r15
  42edaf:	call   QWORD PTR [r15+0x48]
  42edb3:	mov    r14,QWORD PTR [r15+0x28]
  42edb7:	movzx  eax,WORD PTR [r12+0x4]
  42edbd:	test   ax,ax
  42edc0:	js     42edc6 <flatcc_json_printer_int16_vector_field@@Base+0x156>
  42edc2:	mov    edx,eax
  42edc4:	jmp    42edd2 <flatcc_json_printer_int16_vector_field@@Base+0x162>
  42edc6:	mov    BYTE PTR [r14],0x2d
  42edca:	add    r14,0x1
  42edce:	mov    edx,eax
  42edd0:	neg    edx
  42edd2:	shr    eax,0xf
  42edd5:	movzx  edi,dx
  42edd8:	cmp    edi,0x3e8
  42edde:	jb     42edf0 <flatcc_json_printer_int16_vector_field@@Base+0x180>
  42ede0:	xor    ecx,ecx
  42ede2:	cmp    edi,0x270f
  42ede8:	seta   cl
  42edeb:	or     ecx,0x4
  42edee:	jmp    42ee16 <flatcc_json_printer_int16_vector_field@@Base+0x1a6>
  42edf0:	cmp    edi,0x64
  42edf3:	jb     42ee0b <flatcc_json_printer_int16_vector_field@@Base+0x19b>
  42edf5:	mov    BYTE PTR [r14+0x3],0x0
  42edfa:	add    r14,0x3
  42edfe:	mov    ecx,0x3
  42ee03:	mov    rsi,r14
  42ee06:	jmp    42eebf <flatcc_json_printer_int16_vector_field@@Base+0x24f>
  42ee0b:	xor    ecx,ecx
  42ee0d:	cmp    edi,0x9
  42ee10:	seta   cl
  42ee13:	add    ecx,0x1
  42ee16:	mov    ebx,ecx
  42ee18:	lea    rsi,[r14+rbx*1]
  42ee1c:	mov    BYTE PTR [r14+rbx*1],0x0
  42ee21:	test   cl,0x1
  42ee24:	jne    42ee87 <flatcc_json_printer_int16_vector_field@@Base+0x217>
  42ee26:	cmp    cl,0x2
  42ee29:	je     42ee5d <flatcc_json_printer_int16_vector_field@@Base+0x1ed>
  42ee2b:	cmp    cl,0x4
  42ee2e:	jne    42eef1 <flatcc_json_printer_int16_vector_field@@Base+0x281>
  42ee34:	mov    edx,edi
  42ee36:	shr    edx,0x2
  42ee39:	imul   edx,edx,0x147b
  42ee3f:	shr    edx,0x11
  42ee42:	imul   ebx,edx,0x64
  42ee45:	sub    edi,ebx
  42ee47:	movzx  edi,di
  42ee4a:	lea    rbx,[rip+0xe05f]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42ee51:	movzx  edi,WORD PTR [rbx+rdi*2]
  42ee55:	mov    WORD PTR [rsi-0x2],di
  42ee59:	lea    rsi,[rsi-0x2]
  42ee5d:	movzx  edx,dx
  42ee60:	mov    edi,edx
  42ee62:	shr    edi,0x2
  42ee65:	imul   edi,edi,0x147b
  42ee6b:	shr    edi,0x11
  42ee6e:	imul   edi,edi,0x64
  42ee71:	sub    edx,edi
  42ee73:	movzx  edx,dx
  42ee76:	lea    rdi,[rip+0xe033]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42ee7d:	movzx  edx,WORD PTR [rdi+rdx*2]
  42ee81:	mov    WORD PTR [rsi-0x2],dx
  42ee85:	jmp    42eef1 <flatcc_json_printer_int16_vector_field@@Base+0x281>
  42ee87:	cmp    cl,0x1
  42ee8a:	je     42eeeb <flatcc_json_printer_int16_vector_field@@Base+0x27b>
  42ee8c:	cmp    cl,0x3
  42ee8f:	je     42eebf <flatcc_json_printer_int16_vector_field@@Base+0x24f>
  42ee91:	cmp    cl,0x5
  42ee94:	jne    42eef1 <flatcc_json_printer_int16_vector_field@@Base+0x281>
  42ee96:	mov    edx,edi
  42ee98:	shr    edx,0x2
  42ee9b:	imul   edx,edx,0x147b
  42eea1:	shr    edx,0x11
  42eea4:	imul   ebx,edx,0x64
  42eea7:	sub    edi,ebx
  42eea9:	movzx  edi,di
  42eeac:	lea    rbx,[rip+0xdffd]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42eeb3:	movzx  edi,WORD PTR [rbx+rdi*2]
  42eeb7:	mov    WORD PTR [rsi-0x2],di
  42eebb:	lea    rsi,[rsi-0x2]
  42eebf:	movzx  edi,dx
  42eec2:	mov    edx,edi
  42eec4:	shr    edx,0x2
  42eec7:	imul   edx,edx,0x147b
  42eecd:	shr    edx,0x11
  42eed0:	imul   ebx,edx,0x64
  42eed3:	sub    edi,ebx
  42eed5:	movzx  edi,di
  42eed8:	lea    rbx,[rip+0xdfd1]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42eedf:	movzx  edi,WORD PTR [rbx+rdi*2]
  42eee3:	mov    WORD PTR [rsi-0x2],di
  42eee7:	lea    rsi,[rsi-0x2]
  42eeeb:	add    dl,0x30
  42eeee:	mov    BYTE PTR [rsi-0x1],dl
  42eef1:	add    ecx,eax
  42eef3:	add    QWORD PTR [r15+0x28],rcx
  42eef7:	add    ebp,0xffffffff
  42eefa:	je     42f146 <flatcc_json_printer_int16_vector_field@@Base+0x4d6>
  42ef00:	add    r12,0x6
  42ef04:	mov    rcx,QWORD PTR [r15+0x28]
  42ef08:	lea    r13,[rip+0xdfa1]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  42ef0f:	nop
  42ef10:	lea    rax,[rcx+0x1]
  42ef14:	mov    QWORD PTR [r15+0x28],rax
  42ef18:	mov    BYTE PTR [rcx],0x2c
  42ef1b:	cmp    BYTE PTR [r15+0x31],0x0
  42ef20:	mov    r14,QWORD PTR [r15+0x28]
  42ef24:	je     42efd0 <flatcc_json_printer_int16_vector_field@@Base+0x360>
  42ef2a:	lea    rax,[r14+0x1]
  42ef2e:	mov    QWORD PTR [r15+0x28],rax
  42ef32:	mov    BYTE PTR [r14],0xa
  42ef36:	movsxd rax,DWORD PTR [r15+0x38]
  42ef3a:	movzx  r14d,BYTE PTR [r15+0x31]
  42ef3f:	imul   r14,rax
  42ef43:	mov    rbx,QWORD PTR [r15+0x20]
  42ef47:	mov    rdi,QWORD PTR [r15+0x28]
  42ef4b:	lea    rax,[rdi+r14*1]
  42ef4f:	cmp    rax,rbx
  42ef52:	jbe    42efad <flatcc_json_printer_int16_vector_field@@Base+0x33d>
  42ef54:	cmp    rdi,rbx
  42ef57:	jb     42ef6a <flatcc_json_printer_int16_vector_field@@Base+0x2fa>
  42ef59:	xor    esi,esi
  42ef5b:	mov    rdi,r15
  42ef5e:	call   QWORD PTR [r15+0x48]
  42ef62:	mov    rbx,QWORD PTR [r15+0x20]
  42ef66:	mov    rdi,QWORD PTR [r15+0x28]
  42ef6a:	sub    rbx,rdi
  42ef6d:	cmp    rbx,r14
  42ef70:	jae    42efad <flatcc_json_printer_int16_vector_field@@Base+0x33d>
  42ef72:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ef7c:	nop    DWORD PTR [rax+0x0]
  42ef80:	mov    esi,0x20
  42ef85:	mov    rdx,rbx
  42ef88:	call   406080 <memset@plt>
  42ef8d:	add    QWORD PTR [r15+0x28],rbx
  42ef91:	sub    r14,rbx
  42ef94:	xor    esi,esi
  42ef96:	mov    rdi,r15
  42ef99:	call   QWORD PTR [r15+0x48]
  42ef9d:	mov    rbx,QWORD PTR [r15+0x20]
  42efa1:	mov    rdi,QWORD PTR [r15+0x28]
  42efa5:	sub    rbx,rdi
  42efa8:	cmp    r14,rbx
  42efab:	ja     42ef80 <flatcc_json_printer_int16_vector_field@@Base+0x310>
  42efad:	mov    esi,0x20
  42efb2:	mov    rdx,r14
  42efb5:	call   406080 <memset@plt>
  42efba:	add    r14,QWORD PTR [r15+0x28]
  42efbe:	mov    QWORD PTR [r15+0x28],r14
  42efc2:	jmp    42eff0 <flatcc_json_printer_int16_vector_field@@Base+0x380>
  42efc4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42efce:	xchg   ax,ax
  42efd0:	cmp    r14,QWORD PTR [r15+0x20]
  42efd4:	jb     42eff0 <flatcc_json_printer_int16_vector_field@@Base+0x380>
  42efd6:	xor    esi,esi
  42efd8:	mov    rdi,r15
  42efdb:	call   QWORD PTR [r15+0x48]
  42efdf:	mov    r14,QWORD PTR [r15+0x28]
  42efe3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42efed:	nop    DWORD PTR [rax]
  42eff0:	movzx  eax,WORD PTR [r12]
  42eff5:	test   ax,ax
  42eff8:	js     42f000 <flatcc_json_printer_int16_vector_field@@Base+0x390>
  42effa:	mov    edx,eax
  42effc:	jmp    42f00c <flatcc_json_printer_int16_vector_field@@Base+0x39c>
  42effe:	xchg   ax,ax
  42f000:	mov    BYTE PTR [r14],0x2d
  42f004:	add    r14,0x1
  42f008:	mov    edx,eax
  42f00a:	neg    edx
  42f00c:	add    ebp,0xffffffff
  42f00f:	shr    eax,0xf
  42f012:	movzx  edi,dx
  42f015:	cmp    edi,0x3e8
  42f01b:	jb     42f030 <flatcc_json_printer_int16_vector_field@@Base+0x3c0>
  42f01d:	xor    ecx,ecx
  42f01f:	cmp    edi,0x270f
  42f025:	seta   cl
  42f028:	or     ecx,0x4
  42f02b:	jmp    42f05b <flatcc_json_printer_int16_vector_field@@Base+0x3eb>
  42f02d:	nop    DWORD PTR [rax]
  42f030:	cmp    edi,0x64
  42f033:	jb     42f050 <flatcc_json_printer_int16_vector_field@@Base+0x3e0>
  42f035:	mov    BYTE PTR [r14+0x3],0x0
  42f03a:	add    r14,0x3
  42f03e:	mov    ecx,0x3
  42f043:	mov    rsi,r14
  42f046:	jmp    42f103 <flatcc_json_printer_int16_vector_field@@Base+0x493>
  42f04b:	nop    DWORD PTR [rax+rax*1+0x0]
  42f050:	xor    ecx,ecx
  42f052:	cmp    edi,0x9
  42f055:	seta   cl
  42f058:	add    ecx,0x1
  42f05b:	mov    ebx,ecx
  42f05d:	lea    rsi,[r14+rbx*1]
  42f061:	mov    BYTE PTR [r14+rbx*1],0x0
  42f066:	test   cl,0x1
  42f069:	jne    42f0d0 <flatcc_json_printer_int16_vector_field@@Base+0x460>
  42f06b:	cmp    cl,0x2
  42f06e:	je     42f09d <flatcc_json_printer_int16_vector_field@@Base+0x42d>
  42f070:	cmp    cl,0x4
  42f073:	jne    42f130 <flatcc_json_printer_int16_vector_field@@Base+0x4c0>
  42f079:	mov    edx,edi
  42f07b:	shr    edx,0x2
  42f07e:	imul   edx,edx,0x147b
  42f084:	shr    edx,0x11
  42f087:	imul   ebx,edx,0x64
  42f08a:	sub    edi,ebx
  42f08c:	movzx  edi,di
  42f08f:	movzx  edi,WORD PTR [r13+rdi*2+0x0]
  42f095:	mov    WORD PTR [rsi-0x2],di
  42f099:	lea    rsi,[rsi-0x2]
  42f09d:	movzx  edx,dx
  42f0a0:	mov    edi,edx
  42f0a2:	shr    edi,0x2
  42f0a5:	imul   edi,edi,0x147b
  42f0ab:	shr    edi,0x11
  42f0ae:	imul   edi,edi,0x64
  42f0b1:	sub    edx,edi
  42f0b3:	movzx  edx,dx
  42f0b6:	movzx  edx,WORD PTR [r13+rdx*2+0x0]
  42f0bc:	mov    WORD PTR [rsi-0x2],dx
  42f0c0:	jmp    42f130 <flatcc_json_printer_int16_vector_field@@Base+0x4c0>
  42f0c2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42f0cc:	nop    DWORD PTR [rax+0x0]
  42f0d0:	cmp    cl,0x1
  42f0d3:	je     42f12a <flatcc_json_printer_int16_vector_field@@Base+0x4ba>
  42f0d5:	cmp    cl,0x3
  42f0d8:	je     42f103 <flatcc_json_printer_int16_vector_field@@Base+0x493>
  42f0da:	cmp    cl,0x5
  42f0dd:	jne    42f130 <flatcc_json_printer_int16_vector_field@@Base+0x4c0>
  42f0df:	mov    edx,edi
  42f0e1:	shr    edx,0x2
  42f0e4:	imul   edx,edx,0x147b
  42f0ea:	shr    edx,0x11
  42f0ed:	imul   ebx,edx,0x64
  42f0f0:	sub    edi,ebx
  42f0f2:	movzx  edi,di
  42f0f5:	movzx  edi,WORD PTR [r13+rdi*2+0x0]
  42f0fb:	mov    WORD PTR [rsi-0x2],di
  42f0ff:	lea    rsi,[rsi-0x2]
  42f103:	movzx  edi,dx
  42f106:	mov    edx,edi
  42f108:	shr    edx,0x2
  42f10b:	imul   edx,edx,0x147b
  42f111:	shr    edx,0x11
  42f114:	imul   ebx,edx,0x64
  42f117:	sub    edi,ebx
  42f119:	movzx  edi,di
  42f11c:	movzx  edi,WORD PTR [r13+rdi*2+0x0]
  42f122:	mov    WORD PTR [rsi-0x2],di
  42f126:	lea    rsi,[rsi-0x2]
  42f12a:	add    dl,0x30
  42f12d:	mov    BYTE PTR [rsi-0x1],dl
  42f130:	add    ecx,eax
  42f132:	add    rcx,QWORD PTR [r15+0x28]
  42f136:	mov    QWORD PTR [r15+0x28],rcx
  42f13a:	add    r12,0x2
  42f13e:	test   ebp,ebp
  42f140:	jne    42ef10 <flatcc_json_printer_int16_vector_field@@Base+0x2a0>
  42f146:	cmp    BYTE PTR [r15+0x31],0x0
  42f14b:	mov    r14,QWORD PTR [r15+0x28]
  42f14f:	je     42f1f2 <flatcc_json_printer_int16_vector_field@@Base+0x582>
  42f155:	lea    rax,[r14+0x1]
  42f159:	mov    QWORD PTR [r15+0x28],rax
  42f15d:	mov    BYTE PTR [r14],0xa
  42f161:	movsxd rax,DWORD PTR [r15+0x38]
  42f165:	add    rax,0xffffffffffffffff
  42f169:	mov    DWORD PTR [r15+0x38],eax
  42f16d:	movzx  r14d,BYTE PTR [r15+0x31]
  42f172:	imul   r14,rax
  42f176:	mov    rbx,QWORD PTR [r15+0x20]
  42f17a:	mov    rdi,QWORD PTR [r15+0x28]
  42f17e:	lea    rax,[rdi+r14*1]
  42f182:	cmp    rax,rbx
  42f185:	jbe    42f1dd <flatcc_json_printer_int16_vector_field@@Base+0x56d>
  42f187:	cmp    rdi,rbx
  42f18a:	jb     42f19d <flatcc_json_printer_int16_vector_field@@Base+0x52d>
  42f18c:	xor    esi,esi
  42f18e:	mov    rdi,r15
  42f191:	call   QWORD PTR [r15+0x48]
  42f195:	mov    rbx,QWORD PTR [r15+0x20]
  42f199:	mov    rdi,QWORD PTR [r15+0x28]
  42f19d:	sub    rbx,rdi
  42f1a0:	cmp    rbx,r14
  42f1a3:	jae    42f1dd <flatcc_json_printer_int16_vector_field@@Base+0x56d>
  42f1a5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42f1af:	nop
  42f1b0:	mov    esi,0x20
  42f1b5:	mov    rdx,rbx
  42f1b8:	call   406080 <memset@plt>
  42f1bd:	add    QWORD PTR [r15+0x28],rbx
  42f1c1:	sub    r14,rbx
  42f1c4:	xor    esi,esi
  42f1c6:	mov    rdi,r15
  42f1c9:	call   QWORD PTR [r15+0x48]
  42f1cd:	mov    rbx,QWORD PTR [r15+0x20]
  42f1d1:	mov    rdi,QWORD PTR [r15+0x28]
  42f1d5:	sub    rbx,rdi
  42f1d8:	cmp    r14,rbx
  42f1db:	ja     42f1b0 <flatcc_json_printer_int16_vector_field@@Base+0x540>
  42f1dd:	mov    esi,0x20
  42f1e2:	mov    rdx,r14
  42f1e5:	call   406080 <memset@plt>
  42f1ea:	add    r14,QWORD PTR [r15+0x28]
  42f1ee:	mov    QWORD PTR [r15+0x28],r14
  42f1f2:	lea    rax,[r14+0x1]
  42f1f6:	mov    QWORD PTR [r15+0x28],rax
  42f1fa:	mov    BYTE PTR [r14],0x5d
  42f1fe:	add    rsp,0x8
  42f202:	pop    rbx
  42f203:	pop    r12
  42f205:	pop    r13
  42f207:	pop    r14
  42f209:	pop    r15
  42f20b:	pop    rbp
  42f20c:	ret    
  42f20d:	nop    DWORD PTR [rax]

000000000042f210 <flatcc_json_printer_int32_vector_field@@Base>:
  42f210:	push   rbp
  42f211:	push   r15
  42f213:	push   r14
  42f215:	push   r12
  42f217:	push   rbx
  42f218:	lea    eax,[rdx+rdx*1]
  42f21b:	add    eax,0x4
  42f21e:	cmp    eax,DWORD PTR [rsi+0x10]
  42f221:	jge    42f54e <flatcc_json_printer_int32_vector_field@@Base+0x33e>
  42f227:	mov    rdx,QWORD PTR [rsi+0x8]
  42f22b:	mov    eax,eax
  42f22d:	movzx  r12d,WORD PTR [rdx+rax*1]
  42f232:	test   r12,r12
  42f235:	je     42f54e <flatcc_json_printer_int32_vector_field@@Base+0x33e>
  42f23b:	add    r12,QWORD PTR [rsi]
  42f23e:	je     42f54e <flatcc_json_printer_int32_vector_field@@Base+0x33e>
  42f244:	mov    r15,rdi
  42f247:	mov    eax,DWORD PTR [rsi+0x18]
  42f24a:	lea    edx,[rax+0x1]
  42f24d:	mov    DWORD PTR [rsi+0x18],edx
  42f250:	test   eax,eax
  42f252:	je     42f263 <flatcc_json_printer_int32_vector_field@@Base+0x53>
  42f254:	mov    rax,QWORD PTR [r15+0x28]
  42f258:	lea    rdx,[rax+0x1]
  42f25c:	mov    QWORD PTR [r15+0x28],rdx
  42f260:	mov    BYTE PTR [rax],0x2c
  42f263:	mov    ebx,DWORD PTR [r12]
  42f267:	mov    ebp,DWORD PTR [r12+rbx*1]
  42f26b:	movsxd rdx,r8d
  42f26e:	mov    rdi,r15
  42f271:	mov    rsi,rcx
  42f274:	call   42ae90 <flatcc_json_printer_string_field@@Base+0x80>
  42f279:	add    DWORD PTR [r15+0x38],0x1
  42f27e:	mov    rax,QWORD PTR [r15+0x28]
  42f282:	lea    rcx,[rax+0x1]
  42f286:	mov    QWORD PTR [r15+0x28],rcx
  42f28a:	mov    BYTE PTR [rax],0x5b
  42f28d:	test   ebp,ebp
  42f28f:	je     42f49a <flatcc_json_printer_int32_vector_field@@Base+0x28a>
  42f295:	add    r12,rbx
  42f298:	cmp    BYTE PTR [r15+0x31],0x0
  42f29d:	mov    r14,QWORD PTR [r15+0x28]
  42f2a1:	je     42f334 <flatcc_json_printer_int32_vector_field@@Base+0x124>
  42f2a7:	lea    rax,[r14+0x1]
  42f2ab:	mov    QWORD PTR [r15+0x28],rax
  42f2af:	mov    BYTE PTR [r14],0xa
  42f2b3:	movsxd rax,DWORD PTR [r15+0x38]
  42f2b7:	movzx  r14d,BYTE PTR [r15+0x31]
  42f2bc:	imul   r14,rax
  42f2c0:	mov    rbx,QWORD PTR [r15+0x20]
  42f2c4:	mov    rdi,QWORD PTR [r15+0x28]
  42f2c8:	lea    rax,[rdi+r14*1]
  42f2cc:	cmp    rax,rbx
  42f2cf:	jbe    42f31d <flatcc_json_printer_int32_vector_field@@Base+0x10d>
  42f2d1:	cmp    rdi,rbx
  42f2d4:	jb     42f2e7 <flatcc_json_printer_int32_vector_field@@Base+0xd7>
  42f2d6:	xor    esi,esi
  42f2d8:	mov    rdi,r15
  42f2db:	call   QWORD PTR [r15+0x48]
  42f2df:	mov    rbx,QWORD PTR [r15+0x20]
  42f2e3:	mov    rdi,QWORD PTR [r15+0x28]
  42f2e7:	sub    rbx,rdi
  42f2ea:	cmp    rbx,r14
  42f2ed:	jae    42f31d <flatcc_json_printer_int32_vector_field@@Base+0x10d>
  42f2ef:	nop
  42f2f0:	mov    esi,0x20
  42f2f5:	mov    rdx,rbx
  42f2f8:	call   406080 <memset@plt>
  42f2fd:	add    QWORD PTR [r15+0x28],rbx
  42f301:	sub    r14,rbx
  42f304:	xor    esi,esi
  42f306:	mov    rdi,r15
  42f309:	call   QWORD PTR [r15+0x48]
  42f30d:	mov    rbx,QWORD PTR [r15+0x20]
  42f311:	mov    rdi,QWORD PTR [r15+0x28]
  42f315:	sub    rbx,rdi
  42f318:	cmp    r14,rbx
  42f31b:	ja     42f2f0 <flatcc_json_printer_int32_vector_field@@Base+0xe0>
  42f31d:	mov    esi,0x20
  42f322:	mov    rdx,r14
  42f325:	call   406080 <memset@plt>
  42f32a:	add    r14,QWORD PTR [r15+0x28]
  42f32e:	mov    QWORD PTR [r15+0x28],r14
  42f332:	jmp    42f347 <flatcc_json_printer_int32_vector_field@@Base+0x137>
  42f334:	cmp    r14,QWORD PTR [r15+0x20]
  42f338:	jb     42f347 <flatcc_json_printer_int32_vector_field@@Base+0x137>
  42f33a:	xor    esi,esi
  42f33c:	mov    rdi,r15
  42f33f:	call   QWORD PTR [r15+0x48]
  42f343:	mov    r14,QWORD PTR [r15+0x28]
  42f347:	mov    edi,DWORD PTR [r12+0x4]
  42f34c:	mov    ebx,edi
  42f34e:	shr    ebx,0x1f
  42f351:	test   edi,edi
  42f353:	jns    42f35f <flatcc_json_printer_int32_vector_field@@Base+0x14f>
  42f355:	mov    BYTE PTR [r14],0x2d
  42f359:	add    r14,0x1
  42f35d:	neg    edi
  42f35f:	mov    rsi,r14
  42f362:	call   42a270 <flatcc_json_printer_uint32@@Base+0x20>
  42f367:	add    eax,ebx
  42f369:	cdqe   
  42f36b:	add    QWORD PTR [r15+0x28],rax
  42f36f:	add    ebp,0xffffffff
  42f372:	je     42f49a <flatcc_json_printer_int32_vector_field@@Base+0x28a>
  42f378:	add    r12,0x8
  42f37c:	mov    rax,QWORD PTR [r15+0x28]
  42f380:	lea    rcx,[rax+0x1]
  42f384:	mov    QWORD PTR [r15+0x28],rcx
  42f388:	mov    BYTE PTR [rax],0x2c
  42f38b:	cmp    BYTE PTR [r15+0x31],0x0
  42f390:	mov    r14,QWORD PTR [r15+0x28]
  42f394:	je     42f440 <flatcc_json_printer_int32_vector_field@@Base+0x230>
  42f39a:	lea    rax,[r14+0x1]
  42f39e:	mov    QWORD PTR [r15+0x28],rax
  42f3a2:	mov    BYTE PTR [r14],0xa
  42f3a6:	movsxd rax,DWORD PTR [r15+0x38]
  42f3aa:	movzx  r14d,BYTE PTR [r15+0x31]
  42f3af:	imul   r14,rax
  42f3b3:	mov    rbx,QWORD PTR [r15+0x20]
  42f3b7:	mov    rdi,QWORD PTR [r15+0x28]
  42f3bb:	lea    rax,[rdi+r14*1]
  42f3bf:	cmp    rax,rbx
  42f3c2:	jbe    42f41d <flatcc_json_printer_int32_vector_field@@Base+0x20d>
  42f3c4:	cmp    rdi,rbx
  42f3c7:	jb     42f3da <flatcc_json_printer_int32_vector_field@@Base+0x1ca>
  42f3c9:	xor    esi,esi
  42f3cb:	mov    rdi,r15
  42f3ce:	call   QWORD PTR [r15+0x48]
  42f3d2:	mov    rbx,QWORD PTR [r15+0x20]
  42f3d6:	mov    rdi,QWORD PTR [r15+0x28]
  42f3da:	sub    rbx,rdi
  42f3dd:	cmp    rbx,r14
  42f3e0:	jae    42f41d <flatcc_json_printer_int32_vector_field@@Base+0x20d>
  42f3e2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42f3ec:	nop    DWORD PTR [rax+0x0]
  42f3f0:	mov    esi,0x20
  42f3f5:	mov    rdx,rbx
  42f3f8:	call   406080 <memset@plt>
  42f3fd:	add    QWORD PTR [r15+0x28],rbx
  42f401:	sub    r14,rbx
  42f404:	xor    esi,esi
  42f406:	mov    rdi,r15
  42f409:	call   QWORD PTR [r15+0x48]
  42f40d:	mov    rbx,QWORD PTR [r15+0x20]
  42f411:	mov    rdi,QWORD PTR [r15+0x28]
  42f415:	sub    rbx,rdi
  42f418:	cmp    r14,rbx
  42f41b:	ja     42f3f0 <flatcc_json_printer_int32_vector_field@@Base+0x1e0>
  42f41d:	mov    esi,0x20
  42f422:	mov    rdx,r14
  42f425:	call   406080 <memset@plt>
  42f42a:	add    r14,QWORD PTR [r15+0x28]
  42f42e:	mov    QWORD PTR [r15+0x28],r14
  42f432:	jmp    42f460 <flatcc_json_printer_int32_vector_field@@Base+0x250>
  42f434:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42f43e:	xchg   ax,ax
  42f440:	cmp    r14,QWORD PTR [r15+0x20]
  42f444:	jb     42f460 <flatcc_json_printer_int32_vector_field@@Base+0x250>
  42f446:	xor    esi,esi
  42f448:	mov    rdi,r15
  42f44b:	call   QWORD PTR [r15+0x48]
  42f44f:	mov    r14,QWORD PTR [r15+0x28]
  42f453:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42f45d:	nop    DWORD PTR [rax]
  42f460:	add    ebp,0xffffffff
  42f463:	mov    edi,DWORD PTR [r12]
  42f467:	mov    ebx,edi
  42f469:	shr    ebx,0x1f
  42f46c:	test   edi,edi
  42f46e:	jns    42f47a <flatcc_json_printer_int32_vector_field@@Base+0x26a>
  42f470:	mov    BYTE PTR [r14],0x2d
  42f474:	add    r14,0x1
  42f478:	neg    edi
  42f47a:	mov    rsi,r14
  42f47d:	call   42a270 <flatcc_json_printer_uint32@@Base+0x20>
  42f482:	add    eax,ebx
  42f484:	cdqe   
  42f486:	add    rax,QWORD PTR [r15+0x28]
  42f48a:	mov    QWORD PTR [r15+0x28],rax
  42f48e:	add    r12,0x4
  42f492:	test   ebp,ebp
  42f494:	jne    42f380 <flatcc_json_printer_int32_vector_field@@Base+0x170>
  42f49a:	cmp    BYTE PTR [r15+0x31],0x0
  42f49f:	mov    r14,QWORD PTR [r15+0x28]
  42f4a3:	je     42f542 <flatcc_json_printer_int32_vector_field@@Base+0x332>
  42f4a9:	lea    rax,[r14+0x1]
  42f4ad:	mov    QWORD PTR [r15+0x28],rax
  42f4b1:	mov    BYTE PTR [r14],0xa
  42f4b5:	movsxd rax,DWORD PTR [r15+0x38]
  42f4b9:	add    rax,0xffffffffffffffff
  42f4bd:	mov    DWORD PTR [r15+0x38],eax
  42f4c1:	movzx  r14d,BYTE PTR [r15+0x31]
  42f4c6:	imul   r14,rax
  42f4ca:	mov    rbx,QWORD PTR [r15+0x20]
  42f4ce:	mov    rdi,QWORD PTR [r15+0x28]
  42f4d2:	lea    rax,[rdi+r14*1]
  42f4d6:	cmp    rax,rbx
  42f4d9:	jbe    42f52d <flatcc_json_printer_int32_vector_field@@Base+0x31d>
  42f4db:	cmp    rdi,rbx
  42f4de:	jb     42f4f1 <flatcc_json_printer_int32_vector_field@@Base+0x2e1>
  42f4e0:	xor    esi,esi
  42f4e2:	mov    rdi,r15
  42f4e5:	call   QWORD PTR [r15+0x48]
  42f4e9:	mov    rbx,QWORD PTR [r15+0x20]
  42f4ed:	mov    rdi,QWORD PTR [r15+0x28]
  42f4f1:	sub    rbx,rdi
  42f4f4:	cmp    rbx,r14
  42f4f7:	jae    42f52d <flatcc_json_printer_int32_vector_field@@Base+0x31d>
  42f4f9:	nop    DWORD PTR [rax+0x0]
  42f500:	mov    esi,0x20
  42f505:	mov    rdx,rbx
  42f508:	call   406080 <memset@plt>
  42f50d:	add    QWORD PTR [r15+0x28],rbx
  42f511:	sub    r14,rbx
  42f514:	xor    esi,esi
  42f516:	mov    rdi,r15
  42f519:	call   QWORD PTR [r15+0x48]
  42f51d:	mov    rbx,QWORD PTR [r15+0x20]
  42f521:	mov    rdi,QWORD PTR [r15+0x28]
  42f525:	sub    rbx,rdi
  42f528:	cmp    r14,rbx
  42f52b:	ja     42f500 <flatcc_json_printer_int32_vector_field@@Base+0x2f0>
  42f52d:	mov    esi,0x20
  42f532:	mov    rdx,r14
  42f535:	call   406080 <memset@plt>
  42f53a:	add    r14,QWORD PTR [r15+0x28]
  42f53e:	mov    QWORD PTR [r15+0x28],r14
  42f542:	lea    rax,[r14+0x1]
  42f546:	mov    QWORD PTR [r15+0x28],rax
  42f54a:	mov    BYTE PTR [r14],0x5d
  42f54e:	pop    rbx
  42f54f:	pop    r12
  42f551:	pop    r14
  42f553:	pop    r15
  42f555:	pop    rbp
  42f556:	ret    
  42f557:	nop    WORD PTR [rax+rax*1+0x0]

000000000042f560 <flatcc_json_printer_int64_vector_field@@Base>:
  42f560:	push   rbp
  42f561:	push   r15
  42f563:	push   r14
  42f565:	push   r12
  42f567:	push   rbx
  42f568:	lea    eax,[rdx+rdx*1]
  42f56b:	add    eax,0x4
  42f56e:	cmp    eax,DWORD PTR [rsi+0x10]
  42f571:	jge    42f8ae <flatcc_json_printer_int64_vector_field@@Base+0x34e>
  42f577:	mov    rdx,QWORD PTR [rsi+0x8]
  42f57b:	mov    eax,eax
  42f57d:	movzx  r12d,WORD PTR [rdx+rax*1]
  42f582:	test   r12,r12
  42f585:	je     42f8ae <flatcc_json_printer_int64_vector_field@@Base+0x34e>
  42f58b:	add    r12,QWORD PTR [rsi]
  42f58e:	je     42f8ae <flatcc_json_printer_int64_vector_field@@Base+0x34e>
  42f594:	mov    r15,rdi
  42f597:	mov    eax,DWORD PTR [rsi+0x18]
  42f59a:	lea    edx,[rax+0x1]
  42f59d:	mov    DWORD PTR [rsi+0x18],edx
  42f5a0:	test   eax,eax
  42f5a2:	je     42f5b3 <flatcc_json_printer_int64_vector_field@@Base+0x53>
  42f5a4:	mov    rax,QWORD PTR [r15+0x28]
  42f5a8:	lea    rdx,[rax+0x1]
  42f5ac:	mov    QWORD PTR [r15+0x28],rdx
  42f5b0:	mov    BYTE PTR [rax],0x2c
  42f5b3:	mov    ebx,DWORD PTR [r12]
  42f5b7:	mov    ebp,DWORD PTR [r12+rbx*1]
  42f5bb:	movsxd rdx,r8d
  42f5be:	mov    rdi,r15
  42f5c1:	mov    rsi,rcx
  42f5c4:	call   42ae90 <flatcc_json_printer_string_field@@Base+0x80>
  42f5c9:	add    DWORD PTR [r15+0x38],0x1
  42f5ce:	mov    rax,QWORD PTR [r15+0x28]
  42f5d2:	lea    rcx,[rax+0x1]
  42f5d6:	mov    QWORD PTR [r15+0x28],rcx
  42f5da:	mov    BYTE PTR [rax],0x5b
  42f5dd:	test   ebp,ebp
  42f5df:	je     42f7fe <flatcc_json_printer_int64_vector_field@@Base+0x29e>
  42f5e5:	add    r12,rbx
  42f5e8:	cmp    BYTE PTR [r15+0x31],0x0
  42f5ed:	mov    r14,QWORD PTR [r15+0x28]
  42f5f1:	je     42f684 <flatcc_json_printer_int64_vector_field@@Base+0x124>
  42f5f7:	lea    rax,[r14+0x1]
  42f5fb:	mov    QWORD PTR [r15+0x28],rax
  42f5ff:	mov    BYTE PTR [r14],0xa
  42f603:	movsxd rax,DWORD PTR [r15+0x38]
  42f607:	movzx  r14d,BYTE PTR [r15+0x31]
  42f60c:	imul   r14,rax
  42f610:	mov    rbx,QWORD PTR [r15+0x20]
  42f614:	mov    rdi,QWORD PTR [r15+0x28]
  42f618:	lea    rax,[rdi+r14*1]
  42f61c:	cmp    rax,rbx
  42f61f:	jbe    42f66d <flatcc_json_printer_int64_vector_field@@Base+0x10d>
  42f621:	cmp    rdi,rbx
  42f624:	jb     42f637 <flatcc_json_printer_int64_vector_field@@Base+0xd7>
  42f626:	xor    esi,esi
  42f628:	mov    rdi,r15
  42f62b:	call   QWORD PTR [r15+0x48]
  42f62f:	mov    rbx,QWORD PTR [r15+0x20]
  42f633:	mov    rdi,QWORD PTR [r15+0x28]
  42f637:	sub    rbx,rdi
  42f63a:	cmp    rbx,r14
  42f63d:	jae    42f66d <flatcc_json_printer_int64_vector_field@@Base+0x10d>
  42f63f:	nop
  42f640:	mov    esi,0x20
  42f645:	mov    rdx,rbx
  42f648:	call   406080 <memset@plt>
  42f64d:	add    QWORD PTR [r15+0x28],rbx
  42f651:	sub    r14,rbx
  42f654:	xor    esi,esi
  42f656:	mov    rdi,r15
  42f659:	call   QWORD PTR [r15+0x48]
  42f65d:	mov    rbx,QWORD PTR [r15+0x20]
  42f661:	mov    rdi,QWORD PTR [r15+0x28]
  42f665:	sub    rbx,rdi
  42f668:	cmp    r14,rbx
  42f66b:	ja     42f640 <flatcc_json_printer_int64_vector_field@@Base+0xe0>
  42f66d:	mov    esi,0x20
  42f672:	mov    rdx,r14
  42f675:	call   406080 <memset@plt>
  42f67a:	add    r14,QWORD PTR [r15+0x28]
  42f67e:	mov    QWORD PTR [r15+0x28],r14
  42f682:	jmp    42f697 <flatcc_json_printer_int64_vector_field@@Base+0x137>
  42f684:	cmp    r14,QWORD PTR [r15+0x20]
  42f688:	jb     42f697 <flatcc_json_printer_int64_vector_field@@Base+0x137>
  42f68a:	xor    esi,esi
  42f68c:	mov    rdi,r15
  42f68f:	call   QWORD PTR [r15+0x48]
  42f693:	mov    r14,QWORD PTR [r15+0x28]
  42f697:	mov    rdi,QWORD PTR [r12+0x4]
  42f69c:	mov    rbx,rdi
  42f69f:	shr    rbx,0x3f
  42f6a3:	test   rdi,rdi
  42f6a6:	jns    42f6b3 <flatcc_json_printer_int64_vector_field@@Base+0x153>
  42f6a8:	mov    BYTE PTR [r14],0x2d
  42f6ac:	add    r14,0x1
  42f6b0:	neg    rdi
  42f6b3:	mov    rsi,r14
  42f6b6:	call   42a500 <flatcc_json_printer_uint64@@Base+0x20>
  42f6bb:	add    eax,ebx
  42f6bd:	cdqe   
  42f6bf:	add    QWORD PTR [r15+0x28],rax
  42f6c3:	add    ebp,0xffffffff
  42f6c6:	je     42f7fe <flatcc_json_printer_int64_vector_field@@Base+0x29e>
  42f6cc:	add    r12,0xc
  42f6d0:	mov    rax,QWORD PTR [r15+0x28]
  42f6d4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42f6de:	xchg   ax,ax
  42f6e0:	lea    rcx,[rax+0x1]
  42f6e4:	mov    QWORD PTR [r15+0x28],rcx
  42f6e8:	mov    BYTE PTR [rax],0x2c
  42f6eb:	cmp    BYTE PTR [r15+0x31],0x0
  42f6f0:	mov    r14,QWORD PTR [r15+0x28]
  42f6f4:	je     42f7a0 <flatcc_json_printer_int64_vector_field@@Base+0x240>
  42f6fa:	lea    rax,[r14+0x1]
  42f6fe:	mov    QWORD PTR [r15+0x28],rax
  42f702:	mov    BYTE PTR [r14],0xa
  42f706:	movsxd rax,DWORD PTR [r15+0x38]
  42f70a:	movzx  r14d,BYTE PTR [r15+0x31]
  42f70f:	imul   r14,rax
  42f713:	mov    rbx,QWORD PTR [r15+0x20]
  42f717:	mov    rdi,QWORD PTR [r15+0x28]
  42f71b:	lea    rax,[rdi+r14*1]
  42f71f:	cmp    rax,rbx
  42f722:	jbe    42f77d <flatcc_json_printer_int64_vector_field@@Base+0x21d>
  42f724:	cmp    rdi,rbx
  42f727:	jb     42f73a <flatcc_json_printer_int64_vector_field@@Base+0x1da>
  42f729:	xor    esi,esi
  42f72b:	mov    rdi,r15
  42f72e:	call   QWORD PTR [r15+0x48]
  42f732:	mov    rbx,QWORD PTR [r15+0x20]
  42f736:	mov    rdi,QWORD PTR [r15+0x28]
  42f73a:	sub    rbx,rdi
  42f73d:	cmp    rbx,r14
  42f740:	jae    42f77d <flatcc_json_printer_int64_vector_field@@Base+0x21d>
  42f742:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42f74c:	nop    DWORD PTR [rax+0x0]
  42f750:	mov    esi,0x20
  42f755:	mov    rdx,rbx
  42f758:	call   406080 <memset@plt>
  42f75d:	add    QWORD PTR [r15+0x28],rbx
  42f761:	sub    r14,rbx
  42f764:	xor    esi,esi
  42f766:	mov    rdi,r15
  42f769:	call   QWORD PTR [r15+0x48]
  42f76d:	mov    rbx,QWORD PTR [r15+0x20]
  42f771:	mov    rdi,QWORD PTR [r15+0x28]
  42f775:	sub    rbx,rdi
  42f778:	cmp    r14,rbx
  42f77b:	ja     42f750 <flatcc_json_printer_int64_vector_field@@Base+0x1f0>
  42f77d:	mov    esi,0x20
  42f782:	mov    rdx,r14
  42f785:	call   406080 <memset@plt>
  42f78a:	add    r14,QWORD PTR [r15+0x28]
  42f78e:	mov    QWORD PTR [r15+0x28],r14
  42f792:	jmp    42f7c0 <flatcc_json_printer_int64_vector_field@@Base+0x260>
  42f794:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42f79e:	xchg   ax,ax
  42f7a0:	cmp    r14,QWORD PTR [r15+0x20]
  42f7a4:	jb     42f7c0 <flatcc_json_printer_int64_vector_field@@Base+0x260>
  42f7a6:	xor    esi,esi
  42f7a8:	mov    rdi,r15
  42f7ab:	call   QWORD PTR [r15+0x48]
  42f7af:	mov    r14,QWORD PTR [r15+0x28]
  42f7b3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42f7bd:	nop    DWORD PTR [rax]
  42f7c0:	add    ebp,0xffffffff
  42f7c3:	mov    rdi,QWORD PTR [r12]
  42f7c7:	mov    rbx,rdi
  42f7ca:	shr    rbx,0x3f
  42f7ce:	test   rdi,rdi
  42f7d1:	jns    42f7de <flatcc_json_printer_int64_vector_field@@Base+0x27e>
  42f7d3:	mov    BYTE PTR [r14],0x2d
  42f7d7:	add    r14,0x1
  42f7db:	neg    rdi
  42f7de:	mov    rsi,r14
  42f7e1:	call   42a500 <flatcc_json_printer_uint64@@Base+0x20>
  42f7e6:	add    eax,ebx
  42f7e8:	cdqe   
  42f7ea:	add    rax,QWORD PTR [r15+0x28]
  42f7ee:	mov    QWORD PTR [r15+0x28],rax
  42f7f2:	add    r12,0x8
  42f7f6:	test   ebp,ebp
  42f7f8:	jne    42f6e0 <flatcc_json_printer_int64_vector_field@@Base+0x180>
  42f7fe:	cmp    BYTE PTR [r15+0x31],0x0
  42f803:	mov    r14,QWORD PTR [r15+0x28]
  42f807:	je     42f8a2 <flatcc_json_printer_int64_vector_field@@Base+0x342>
  42f80d:	lea    rax,[r14+0x1]
  42f811:	mov    QWORD PTR [r15+0x28],rax
  42f815:	mov    BYTE PTR [r14],0xa
  42f819:	movsxd rax,DWORD PTR [r15+0x38]
  42f81d:	add    rax,0xffffffffffffffff
  42f821:	mov    DWORD PTR [r15+0x38],eax
  42f825:	movzx  r14d,BYTE PTR [r15+0x31]
  42f82a:	imul   r14,rax
  42f82e:	mov    rbx,QWORD PTR [r15+0x20]
  42f832:	mov    rdi,QWORD PTR [r15+0x28]
  42f836:	lea    rax,[rdi+r14*1]
  42f83a:	cmp    rax,rbx
  42f83d:	jbe    42f88d <flatcc_json_printer_int64_vector_field@@Base+0x32d>
  42f83f:	cmp    rdi,rbx
  42f842:	jb     42f855 <flatcc_json_printer_int64_vector_field@@Base+0x2f5>
  42f844:	xor    esi,esi
  42f846:	mov    rdi,r15
  42f849:	call   QWORD PTR [r15+0x48]
  42f84d:	mov    rbx,QWORD PTR [r15+0x20]
  42f851:	mov    rdi,QWORD PTR [r15+0x28]
  42f855:	sub    rbx,rdi
  42f858:	cmp    rbx,r14
  42f85b:	jae    42f88d <flatcc_json_printer_int64_vector_field@@Base+0x32d>
  42f85d:	nop    DWORD PTR [rax]
  42f860:	mov    esi,0x20
  42f865:	mov    rdx,rbx
  42f868:	call   406080 <memset@plt>
  42f86d:	add    QWORD PTR [r15+0x28],rbx
  42f871:	sub    r14,rbx
  42f874:	xor    esi,esi
  42f876:	mov    rdi,r15
  42f879:	call   QWORD PTR [r15+0x48]
  42f87d:	mov    rbx,QWORD PTR [r15+0x20]
  42f881:	mov    rdi,QWORD PTR [r15+0x28]
  42f885:	sub    rbx,rdi
  42f888:	cmp    r14,rbx
  42f88b:	ja     42f860 <flatcc_json_printer_int64_vector_field@@Base+0x300>
  42f88d:	mov    esi,0x20
  42f892:	mov    rdx,r14
  42f895:	call   406080 <memset@plt>
  42f89a:	add    r14,QWORD PTR [r15+0x28]
  42f89e:	mov    QWORD PTR [r15+0x28],r14
  42f8a2:	lea    rax,[r14+0x1]
  42f8a6:	mov    QWORD PTR [r15+0x28],rax
  42f8aa:	mov    BYTE PTR [r14],0x5d
  42f8ae:	pop    rbx
  42f8af:	pop    r12
  42f8b1:	pop    r14
  42f8b3:	pop    r15
  42f8b5:	pop    rbp
  42f8b6:	ret    
  42f8b7:	nop    WORD PTR [rax+rax*1+0x0]

000000000042f8c0 <flatcc_json_printer_bool_vector_field@@Base>:
  42f8c0:	push   rbp
  42f8c1:	push   r15
  42f8c3:	push   r14
  42f8c5:	push   r12
  42f8c7:	push   rbx
  42f8c8:	lea    eax,[rdx+rdx*1]
  42f8cb:	add    eax,0x4
  42f8ce:	cmp    eax,DWORD PTR [rsi+0x10]
  42f8d1:	jge    42fc2e <flatcc_json_printer_bool_vector_field@@Base+0x36e>
  42f8d7:	mov    rdx,QWORD PTR [rsi+0x8]
  42f8db:	mov    eax,eax
  42f8dd:	movzx  r12d,WORD PTR [rdx+rax*1]
  42f8e2:	test   r12,r12
  42f8e5:	je     42fc2e <flatcc_json_printer_bool_vector_field@@Base+0x36e>
  42f8eb:	add    r12,QWORD PTR [rsi]
  42f8ee:	je     42fc2e <flatcc_json_printer_bool_vector_field@@Base+0x36e>
  42f8f4:	mov    r15,rdi
  42f8f7:	mov    eax,DWORD PTR [rsi+0x18]
  42f8fa:	lea    edx,[rax+0x1]
  42f8fd:	mov    DWORD PTR [rsi+0x18],edx
  42f900:	test   eax,eax
  42f902:	je     42f913 <flatcc_json_printer_bool_vector_field@@Base+0x53>
  42f904:	mov    rax,QWORD PTR [r15+0x28]
  42f908:	lea    rdx,[rax+0x1]
  42f90c:	mov    QWORD PTR [r15+0x28],rdx
  42f910:	mov    BYTE PTR [rax],0x2c
  42f913:	mov    ebx,DWORD PTR [r12]
  42f917:	mov    ebp,DWORD PTR [r12+rbx*1]
  42f91b:	movsxd rdx,r8d
  42f91e:	mov    rdi,r15
  42f921:	mov    rsi,rcx
  42f924:	call   42ae90 <flatcc_json_printer_string_field@@Base+0x80>
  42f929:	add    DWORD PTR [r15+0x38],0x1
  42f92e:	mov    rax,QWORD PTR [r15+0x28]
  42f932:	lea    rcx,[rax+0x1]
  42f936:	mov    QWORD PTR [r15+0x28],rcx
  42f93a:	mov    BYTE PTR [rax],0x5b
  42f93d:	test   ebp,ebp
  42f93f:	je     42fb77 <flatcc_json_printer_bool_vector_field@@Base+0x2b7>
  42f945:	add    r12,rbx
  42f948:	cmp    BYTE PTR [r15+0x31],0x0
  42f94d:	mov    r14,QWORD PTR [r15+0x28]
  42f951:	je     42f9ec <flatcc_json_printer_bool_vector_field@@Base+0x12c>
  42f957:	lea    rax,[r14+0x1]
  42f95b:	mov    QWORD PTR [r15+0x28],rax
  42f95f:	mov    BYTE PTR [r14],0xa
  42f963:	movsxd rax,DWORD PTR [r15+0x38]
  42f967:	movzx  r14d,BYTE PTR [r15+0x31]
  42f96c:	imul   r14,rax
  42f970:	mov    rbx,QWORD PTR [r15+0x20]
  42f974:	mov    rdi,QWORD PTR [r15+0x28]
  42f978:	lea    rax,[rdi+r14*1]
  42f97c:	cmp    rax,rbx
  42f97f:	jbe    42f9cd <flatcc_json_printer_bool_vector_field@@Base+0x10d>
  42f981:	cmp    rdi,rbx
  42f984:	jb     42f997 <flatcc_json_printer_bool_vector_field@@Base+0xd7>
  42f986:	xor    esi,esi
  42f988:	mov    rdi,r15
  42f98b:	call   QWORD PTR [r15+0x48]
  42f98f:	mov    rbx,QWORD PTR [r15+0x20]
  42f993:	mov    rdi,QWORD PTR [r15+0x28]
  42f997:	sub    rbx,rdi
  42f99a:	cmp    rbx,r14
  42f99d:	jae    42f9cd <flatcc_json_printer_bool_vector_field@@Base+0x10d>
  42f99f:	nop
  42f9a0:	mov    esi,0x20
  42f9a5:	mov    rdx,rbx
  42f9a8:	call   406080 <memset@plt>
  42f9ad:	add    QWORD PTR [r15+0x28],rbx
  42f9b1:	sub    r14,rbx
  42f9b4:	xor    esi,esi
  42f9b6:	mov    rdi,r15
  42f9b9:	call   QWORD PTR [r15+0x48]
  42f9bd:	mov    rbx,QWORD PTR [r15+0x20]
  42f9c1:	mov    rdi,QWORD PTR [r15+0x28]
  42f9c5:	sub    rbx,rdi
  42f9c8:	cmp    r14,rbx
  42f9cb:	ja     42f9a0 <flatcc_json_printer_bool_vector_field@@Base+0xe0>
  42f9cd:	mov    esi,0x20
  42f9d2:	mov    rdx,r14
  42f9d5:	call   406080 <memset@plt>
  42f9da:	add    r14,QWORD PTR [r15+0x28]
  42f9de:	mov    QWORD PTR [r15+0x28],r14
  42f9e2:	cmp    BYTE PTR [r12+0x4],0x0
  42f9e8:	jne    42fa07 <flatcc_json_printer_bool_vector_field@@Base+0x147>
  42f9ea:	jmp    42fa1a <flatcc_json_printer_bool_vector_field@@Base+0x15a>
  42f9ec:	cmp    r14,QWORD PTR [r15+0x20]
  42f9f0:	jb     42f9ff <flatcc_json_printer_bool_vector_field@@Base+0x13f>
  42f9f2:	xor    esi,esi
  42f9f4:	mov    rdi,r15
  42f9f7:	call   QWORD PTR [r15+0x48]
  42f9fb:	mov    r14,QWORD PTR [r15+0x28]
  42f9ff:	cmp    BYTE PTR [r12+0x4],0x0
  42fa05:	je     42fa1a <flatcc_json_printer_bool_vector_field@@Base+0x15a>
  42fa07:	mov    BYTE PTR [r14+0x4],0x0
  42fa0c:	mov    DWORD PTR [r14],0x65757274
  42fa13:	mov    eax,0x4
  42fa18:	jmp    42fa2d <flatcc_json_printer_bool_vector_field@@Base+0x16d>
  42fa1a:	mov    WORD PTR [r14+0x4],0x65
  42fa21:	mov    DWORD PTR [r14],0x736c6166
  42fa28:	mov    eax,0x5
  42fa2d:	add    QWORD PTR [r15+0x28],rax
  42fa31:	add    ebp,0xffffffff
  42fa34:	je     42fb77 <flatcc_json_printer_bool_vector_field@@Base+0x2b7>
  42fa3a:	add    r12,0x5
  42fa3e:	mov    rax,QWORD PTR [r15+0x28]
  42fa42:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42fa4c:	nop    DWORD PTR [rax+0x0]
  42fa50:	lea    rcx,[rax+0x1]
  42fa54:	mov    QWORD PTR [r15+0x28],rcx
  42fa58:	mov    BYTE PTR [rax],0x2c
  42fa5b:	cmp    BYTE PTR [r15+0x31],0x0
  42fa60:	mov    r14,QWORD PTR [r15+0x28]
  42fa64:	je     42fb10 <flatcc_json_printer_bool_vector_field@@Base+0x250>
  42fa6a:	lea    rax,[r14+0x1]
  42fa6e:	mov    QWORD PTR [r15+0x28],rax
  42fa72:	mov    BYTE PTR [r14],0xa
  42fa76:	movsxd rax,DWORD PTR [r15+0x38]
  42fa7a:	movzx  r14d,BYTE PTR [r15+0x31]
  42fa7f:	imul   r14,rax
  42fa83:	mov    rbx,QWORD PTR [r15+0x20]
  42fa87:	mov    rdi,QWORD PTR [r15+0x28]
  42fa8b:	lea    rax,[rdi+r14*1]
  42fa8f:	cmp    rax,rbx
  42fa92:	jbe    42faed <flatcc_json_printer_bool_vector_field@@Base+0x22d>
  42fa94:	cmp    rdi,rbx
  42fa97:	jb     42faaa <flatcc_json_printer_bool_vector_field@@Base+0x1ea>
  42fa99:	xor    esi,esi
  42fa9b:	mov    rdi,r15
  42fa9e:	call   QWORD PTR [r15+0x48]
  42faa2:	mov    rbx,QWORD PTR [r15+0x20]
  42faa6:	mov    rdi,QWORD PTR [r15+0x28]
  42faaa:	sub    rbx,rdi
  42faad:	cmp    rbx,r14
  42fab0:	jae    42faed <flatcc_json_printer_bool_vector_field@@Base+0x22d>
  42fab2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42fabc:	nop    DWORD PTR [rax+0x0]
  42fac0:	mov    esi,0x20
  42fac5:	mov    rdx,rbx
  42fac8:	call   406080 <memset@plt>
  42facd:	add    QWORD PTR [r15+0x28],rbx
  42fad1:	sub    r14,rbx
  42fad4:	xor    esi,esi
  42fad6:	mov    rdi,r15
  42fad9:	call   QWORD PTR [r15+0x48]
  42fadd:	mov    rbx,QWORD PTR [r15+0x20]
  42fae1:	mov    rdi,QWORD PTR [r15+0x28]
  42fae5:	sub    rbx,rdi
  42fae8:	cmp    r14,rbx
  42faeb:	ja     42fac0 <flatcc_json_printer_bool_vector_field@@Base+0x200>
  42faed:	mov    esi,0x20
  42faf2:	mov    rdx,r14
  42faf5:	call   406080 <memset@plt>
  42fafa:	add    r14,QWORD PTR [r15+0x28]
  42fafe:	mov    QWORD PTR [r15+0x28],r14
  42fb02:	jmp    42fb30 <flatcc_json_printer_bool_vector_field@@Base+0x270>
  42fb04:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42fb0e:	xchg   ax,ax
  42fb10:	cmp    r14,QWORD PTR [r15+0x20]
  42fb14:	jb     42fb30 <flatcc_json_printer_bool_vector_field@@Base+0x270>
  42fb16:	xor    esi,esi
  42fb18:	mov    rdi,r15
  42fb1b:	call   QWORD PTR [r15+0x48]
  42fb1f:	mov    r14,QWORD PTR [r15+0x28]
  42fb23:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42fb2d:	nop    DWORD PTR [rax]
  42fb30:	add    ebp,0xffffffff
  42fb33:	cmp    BYTE PTR [r12],0x0
  42fb38:	je     42fb50 <flatcc_json_printer_bool_vector_field@@Base+0x290>
  42fb3a:	mov    BYTE PTR [r14+0x4],0x0
  42fb3f:	mov    DWORD PTR [r14],0x65757274
  42fb46:	mov    eax,0x4
  42fb4b:	jmp    42fb63 <flatcc_json_printer_bool_vector_field@@Base+0x2a3>
  42fb4d:	nop    DWORD PTR [rax]
  42fb50:	mov    WORD PTR [r14+0x4],0x65
  42fb57:	mov    DWORD PTR [r14],0x736c6166
  42fb5e:	mov    eax,0x5
  42fb63:	add    rax,QWORD PTR [r15+0x28]
  42fb67:	mov    QWORD PTR [r15+0x28],rax
  42fb6b:	add    r12,0x1
  42fb6f:	test   ebp,ebp
  42fb71:	jne    42fa50 <flatcc_json_printer_bool_vector_field@@Base+0x190>
  42fb77:	cmp    BYTE PTR [r15+0x31],0x0
  42fb7c:	mov    r14,QWORD PTR [r15+0x28]
  42fb80:	je     42fc22 <flatcc_json_printer_bool_vector_field@@Base+0x362>
  42fb86:	lea    rax,[r14+0x1]
  42fb8a:	mov    QWORD PTR [r15+0x28],rax
  42fb8e:	mov    BYTE PTR [r14],0xa
  42fb92:	movsxd rax,DWORD PTR [r15+0x38]
  42fb96:	add    rax,0xffffffffffffffff
  42fb9a:	mov    DWORD PTR [r15+0x38],eax
  42fb9e:	movzx  r14d,BYTE PTR [r15+0x31]
  42fba3:	imul   r14,rax
  42fba7:	mov    rbx,QWORD PTR [r15+0x20]
  42fbab:	mov    rdi,QWORD PTR [r15+0x28]
  42fbaf:	lea    rax,[rdi+r14*1]
  42fbb3:	cmp    rax,rbx
  42fbb6:	jbe    42fc0d <flatcc_json_printer_bool_vector_field@@Base+0x34d>
  42fbb8:	cmp    rdi,rbx
  42fbbb:	jb     42fbce <flatcc_json_printer_bool_vector_field@@Base+0x30e>
  42fbbd:	xor    esi,esi
  42fbbf:	mov    rdi,r15
  42fbc2:	call   QWORD PTR [r15+0x48]
  42fbc6:	mov    rbx,QWORD PTR [r15+0x20]
  42fbca:	mov    rdi,QWORD PTR [r15+0x28]
  42fbce:	sub    rbx,rdi
  42fbd1:	cmp    rbx,r14
  42fbd4:	jae    42fc0d <flatcc_json_printer_bool_vector_field@@Base+0x34d>
  42fbd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42fbe0:	mov    esi,0x20
  42fbe5:	mov    rdx,rbx
  42fbe8:	call   406080 <memset@plt>
  42fbed:	add    QWORD PTR [r15+0x28],rbx
  42fbf1:	sub    r14,rbx
  42fbf4:	xor    esi,esi
  42fbf6:	mov    rdi,r15
  42fbf9:	call   QWORD PTR [r15+0x48]
  42fbfd:	mov    rbx,QWORD PTR [r15+0x20]
  42fc01:	mov    rdi,QWORD PTR [r15+0x28]
  42fc05:	sub    rbx,rdi
  42fc08:	cmp    r14,rbx
  42fc0b:	ja     42fbe0 <flatcc_json_printer_bool_vector_field@@Base+0x320>
  42fc0d:	mov    esi,0x20
  42fc12:	mov    rdx,r14
  42fc15:	call   406080 <memset@plt>
  42fc1a:	add    r14,QWORD PTR [r15+0x28]
  42fc1e:	mov    QWORD PTR [r15+0x28],r14
  42fc22:	lea    rax,[r14+0x1]
  42fc26:	mov    QWORD PTR [r15+0x28],rax
  42fc2a:	mov    BYTE PTR [r14],0x5d
  42fc2e:	pop    rbx
  42fc2f:	pop    r12
  42fc31:	pop    r14
  42fc33:	pop    r15
  42fc35:	pop    rbp
  42fc36:	ret    
  42fc37:	nop    WORD PTR [rax+rax*1+0x0]

000000000042fc40 <flatcc_json_printer_float_vector_field@@Base>:
  42fc40:	push   rbp
  42fc41:	push   r15
  42fc43:	push   r14
  42fc45:	push   r12
  42fc47:	push   rbx
  42fc48:	lea    eax,[rdx+rdx*1]
  42fc4b:	add    eax,0x4
  42fc4e:	cmp    eax,DWORD PTR [rsi+0x10]
  42fc51:	jge    42ff6e <flatcc_json_printer_float_vector_field@@Base+0x32e>
  42fc57:	mov    rdx,QWORD PTR [rsi+0x8]
  42fc5b:	mov    eax,eax
  42fc5d:	movzx  r12d,WORD PTR [rdx+rax*1]
  42fc62:	test   r12,r12
  42fc65:	je     42ff6e <flatcc_json_printer_float_vector_field@@Base+0x32e>
  42fc6b:	add    r12,QWORD PTR [rsi]
  42fc6e:	je     42ff6e <flatcc_json_printer_float_vector_field@@Base+0x32e>
  42fc74:	mov    r15,rdi
  42fc77:	mov    eax,DWORD PTR [rsi+0x18]
  42fc7a:	lea    edx,[rax+0x1]
  42fc7d:	mov    DWORD PTR [rsi+0x18],edx
  42fc80:	test   eax,eax
  42fc82:	je     42fc93 <flatcc_json_printer_float_vector_field@@Base+0x53>
  42fc84:	mov    rax,QWORD PTR [r15+0x28]
  42fc88:	lea    rdx,[rax+0x1]
  42fc8c:	mov    QWORD PTR [r15+0x28],rdx
  42fc90:	mov    BYTE PTR [rax],0x2c
  42fc93:	mov    ebx,DWORD PTR [r12]
  42fc97:	mov    ebp,DWORD PTR [r12+rbx*1]
  42fc9b:	movsxd rdx,r8d
  42fc9e:	mov    rdi,r15
  42fca1:	mov    rsi,rcx
  42fca4:	call   42ae90 <flatcc_json_printer_string_field@@Base+0x80>
  42fca9:	add    DWORD PTR [r15+0x38],0x1
  42fcae:	mov    rax,QWORD PTR [r15+0x28]
  42fcb2:	lea    rcx,[rax+0x1]
  42fcb6:	mov    QWORD PTR [r15+0x28],rcx
  42fcba:	mov    BYTE PTR [rax],0x5b
  42fcbd:	test   ebp,ebp
  42fcbf:	je     42feb8 <flatcc_json_printer_float_vector_field@@Base+0x278>
  42fcc5:	add    r12,rbx
  42fcc8:	cmp    BYTE PTR [r15+0x31],0x0
  42fccd:	mov    r14,QWORD PTR [r15+0x28]
  42fcd1:	je     42fd64 <flatcc_json_printer_float_vector_field@@Base+0x124>
  42fcd7:	lea    rax,[r14+0x1]
  42fcdb:	mov    QWORD PTR [r15+0x28],rax
  42fcdf:	mov    BYTE PTR [r14],0xa
  42fce3:	movsxd rax,DWORD PTR [r15+0x38]
  42fce7:	movzx  r14d,BYTE PTR [r15+0x31]
  42fcec:	imul   r14,rax
  42fcf0:	mov    rbx,QWORD PTR [r15+0x20]
  42fcf4:	mov    rdi,QWORD PTR [r15+0x28]
  42fcf8:	lea    rax,[rdi+r14*1]
  42fcfc:	cmp    rax,rbx
  42fcff:	jbe    42fd4d <flatcc_json_printer_float_vector_field@@Base+0x10d>
  42fd01:	cmp    rdi,rbx
  42fd04:	jb     42fd17 <flatcc_json_printer_float_vector_field@@Base+0xd7>
  42fd06:	xor    esi,esi
  42fd08:	mov    rdi,r15
  42fd0b:	call   QWORD PTR [r15+0x48]
  42fd0f:	mov    rbx,QWORD PTR [r15+0x20]
  42fd13:	mov    rdi,QWORD PTR [r15+0x28]
  42fd17:	sub    rbx,rdi
  42fd1a:	cmp    rbx,r14
  42fd1d:	jae    42fd4d <flatcc_json_printer_float_vector_field@@Base+0x10d>
  42fd1f:	nop
  42fd20:	mov    esi,0x20
  42fd25:	mov    rdx,rbx
  42fd28:	call   406080 <memset@plt>
  42fd2d:	add    QWORD PTR [r15+0x28],rbx
  42fd31:	sub    r14,rbx
  42fd34:	xor    esi,esi
  42fd36:	mov    rdi,r15
  42fd39:	call   QWORD PTR [r15+0x48]
  42fd3d:	mov    rbx,QWORD PTR [r15+0x20]
  42fd41:	mov    rdi,QWORD PTR [r15+0x28]
  42fd45:	sub    rbx,rdi
  42fd48:	cmp    r14,rbx
  42fd4b:	ja     42fd20 <flatcc_json_printer_float_vector_field@@Base+0xe0>
  42fd4d:	mov    esi,0x20
  42fd52:	mov    rdx,r14
  42fd55:	call   406080 <memset@plt>
  42fd5a:	add    r14,QWORD PTR [r15+0x28]
  42fd5e:	mov    QWORD PTR [r15+0x28],r14
  42fd62:	jmp    42fd77 <flatcc_json_printer_float_vector_field@@Base+0x137>
  42fd64:	cmp    r14,QWORD PTR [r15+0x20]
  42fd68:	jb     42fd77 <flatcc_json_printer_float_vector_field@@Base+0x137>
  42fd6a:	xor    esi,esi
  42fd6c:	mov    rdi,r15
  42fd6f:	call   QWORD PTR [r15+0x48]
  42fd73:	mov    r14,QWORD PTR [r15+0x28]
  42fd77:	vmovss xmm0,DWORD PTR [r12+0x4]
  42fd7e:	vcvtss2sd xmm0,xmm0,xmm0
  42fd82:	mov    rdi,r14
  42fd85:	call   428ec0 <flatcc_json_printer_fmt_float@@Base+0x10>
  42fd8a:	cdqe   
  42fd8c:	add    QWORD PTR [r15+0x28],rax
  42fd90:	add    ebp,0xffffffff
  42fd93:	je     42feb8 <flatcc_json_printer_float_vector_field@@Base+0x278>
  42fd99:	add    r12,0x8
  42fd9d:	mov    rax,QWORD PTR [r15+0x28]
  42fda1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42fdab:	nop    DWORD PTR [rax+rax*1+0x0]
  42fdb0:	add    ebp,0xffffffff
  42fdb3:	lea    rcx,[rax+0x1]
  42fdb7:	mov    QWORD PTR [r15+0x28],rcx
  42fdbb:	mov    BYTE PTR [rax],0x2c
  42fdbe:	cmp    BYTE PTR [r15+0x31],0x0
  42fdc3:	mov    r14,QWORD PTR [r15+0x28]
  42fdc7:	je     42fe70 <flatcc_json_printer_float_vector_field@@Base+0x230>
  42fdcd:	lea    rax,[r14+0x1]
  42fdd1:	mov    QWORD PTR [r15+0x28],rax
  42fdd5:	mov    BYTE PTR [r14],0xa
  42fdd9:	movsxd rax,DWORD PTR [r15+0x38]
  42fddd:	movzx  r14d,BYTE PTR [r15+0x31]
  42fde2:	imul   r14,rax
  42fde6:	mov    rbx,QWORD PTR [r15+0x20]
  42fdea:	mov    rdi,QWORD PTR [r15+0x28]
  42fdee:	lea    rax,[rdi+r14*1]
  42fdf2:	cmp    rax,rbx
  42fdf5:	jbe    42fe4d <flatcc_json_printer_float_vector_field@@Base+0x20d>
  42fdf7:	cmp    rdi,rbx
  42fdfa:	jb     42fe0d <flatcc_json_printer_float_vector_field@@Base+0x1cd>
  42fdfc:	xor    esi,esi
  42fdfe:	mov    rdi,r15
  42fe01:	call   QWORD PTR [r15+0x48]
  42fe05:	mov    rbx,QWORD PTR [r15+0x20]
  42fe09:	mov    rdi,QWORD PTR [r15+0x28]
  42fe0d:	sub    rbx,rdi
  42fe10:	cmp    rbx,r14
  42fe13:	jae    42fe4d <flatcc_json_printer_float_vector_field@@Base+0x20d>
  42fe15:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42fe1f:	nop
  42fe20:	mov    esi,0x20
  42fe25:	mov    rdx,rbx
  42fe28:	call   406080 <memset@plt>
  42fe2d:	add    QWORD PTR [r15+0x28],rbx
  42fe31:	sub    r14,rbx
  42fe34:	xor    esi,esi
  42fe36:	mov    rdi,r15
  42fe39:	call   QWORD PTR [r15+0x48]
  42fe3d:	mov    rbx,QWORD PTR [r15+0x20]
  42fe41:	mov    rdi,QWORD PTR [r15+0x28]
  42fe45:	sub    rbx,rdi
  42fe48:	cmp    r14,rbx
  42fe4b:	ja     42fe20 <flatcc_json_printer_float_vector_field@@Base+0x1e0>
  42fe4d:	mov    esi,0x20
  42fe52:	mov    rdx,r14
  42fe55:	call   406080 <memset@plt>
  42fe5a:	add    r14,QWORD PTR [r15+0x28]
  42fe5e:	mov    QWORD PTR [r15+0x28],r14
  42fe62:	jmp    42fe90 <flatcc_json_printer_float_vector_field@@Base+0x250>
  42fe64:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42fe6e:	xchg   ax,ax
  42fe70:	cmp    r14,QWORD PTR [r15+0x20]
  42fe74:	jb     42fe90 <flatcc_json_printer_float_vector_field@@Base+0x250>
  42fe76:	xor    esi,esi
  42fe78:	mov    rdi,r15
  42fe7b:	call   QWORD PTR [r15+0x48]
  42fe7f:	mov    r14,QWORD PTR [r15+0x28]
  42fe83:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42fe8d:	nop    DWORD PTR [rax]
  42fe90:	vmovss xmm0,DWORD PTR [r12]
  42fe96:	vcvtss2sd xmm0,xmm0,xmm0
  42fe9a:	mov    rdi,r14
  42fe9d:	call   428ec0 <flatcc_json_printer_fmt_float@@Base+0x10>
  42fea2:	cdqe   
  42fea4:	add    rax,QWORD PTR [r15+0x28]
  42fea8:	mov    QWORD PTR [r15+0x28],rax
  42feac:	add    r12,0x4
  42feb0:	test   ebp,ebp
  42feb2:	jne    42fdb0 <flatcc_json_printer_float_vector_field@@Base+0x170>
  42feb8:	cmp    BYTE PTR [r15+0x31],0x0
  42febd:	mov    r14,QWORD PTR [r15+0x28]
  42fec1:	je     42ff62 <flatcc_json_printer_float_vector_field@@Base+0x322>
  42fec7:	lea    rax,[r14+0x1]
  42fecb:	mov    QWORD PTR [r15+0x28],rax
  42fecf:	mov    BYTE PTR [r14],0xa
  42fed3:	movsxd rax,DWORD PTR [r15+0x38]
  42fed7:	add    rax,0xffffffffffffffff
  42fedb:	mov    DWORD PTR [r15+0x38],eax
  42fedf:	movzx  r14d,BYTE PTR [r15+0x31]
  42fee4:	imul   r14,rax
  42fee8:	mov    rbx,QWORD PTR [r15+0x20]
  42feec:	mov    rdi,QWORD PTR [r15+0x28]
  42fef0:	lea    rax,[rdi+r14*1]
  42fef4:	cmp    rax,rbx
  42fef7:	jbe    42ff4d <flatcc_json_printer_float_vector_field@@Base+0x30d>
  42fef9:	cmp    rdi,rbx
  42fefc:	jb     42ff0f <flatcc_json_printer_float_vector_field@@Base+0x2cf>
  42fefe:	xor    esi,esi
  42ff00:	mov    rdi,r15
  42ff03:	call   QWORD PTR [r15+0x48]
  42ff07:	mov    rbx,QWORD PTR [r15+0x20]
  42ff0b:	mov    rdi,QWORD PTR [r15+0x28]
  42ff0f:	sub    rbx,rdi
  42ff12:	cmp    rbx,r14
  42ff15:	jae    42ff4d <flatcc_json_printer_float_vector_field@@Base+0x30d>
  42ff17:	nop    WORD PTR [rax+rax*1+0x0]
  42ff20:	mov    esi,0x20
  42ff25:	mov    rdx,rbx
  42ff28:	call   406080 <memset@plt>
  42ff2d:	add    QWORD PTR [r15+0x28],rbx
  42ff31:	sub    r14,rbx
  42ff34:	xor    esi,esi
  42ff36:	mov    rdi,r15
  42ff39:	call   QWORD PTR [r15+0x48]
  42ff3d:	mov    rbx,QWORD PTR [r15+0x20]
  42ff41:	mov    rdi,QWORD PTR [r15+0x28]
  42ff45:	sub    rbx,rdi
  42ff48:	cmp    r14,rbx
  42ff4b:	ja     42ff20 <flatcc_json_printer_float_vector_field@@Base+0x2e0>
  42ff4d:	mov    esi,0x20
  42ff52:	mov    rdx,r14
  42ff55:	call   406080 <memset@plt>
  42ff5a:	add    r14,QWORD PTR [r15+0x28]
  42ff5e:	mov    QWORD PTR [r15+0x28],r14
  42ff62:	lea    rax,[r14+0x1]
  42ff66:	mov    QWORD PTR [r15+0x28],rax
  42ff6a:	mov    BYTE PTR [r14],0x5d
  42ff6e:	pop    rbx
  42ff6f:	pop    r12
  42ff71:	pop    r14
  42ff73:	pop    r15
  42ff75:	pop    rbp
  42ff76:	ret    
  42ff77:	nop    WORD PTR [rax+rax*1+0x0]

000000000042ff80 <flatcc_json_printer_double_vector_field@@Base>:
  42ff80:	push   rbp
  42ff81:	push   r15
  42ff83:	push   r14
  42ff85:	push   r12
  42ff87:	push   rbx
  42ff88:	lea    eax,[rdx+rdx*1]
  42ff8b:	add    eax,0x4
  42ff8e:	cmp    eax,DWORD PTR [rsi+0x10]
  42ff91:	jge    43029e <flatcc_json_printer_double_vector_field@@Base+0x31e>
  42ff97:	mov    rdx,QWORD PTR [rsi+0x8]
  42ff9b:	mov    eax,eax
  42ff9d:	movzx  r12d,WORD PTR [rdx+rax*1]
  42ffa2:	test   r12,r12
  42ffa5:	je     43029e <flatcc_json_printer_double_vector_field@@Base+0x31e>
  42ffab:	add    r12,QWORD PTR [rsi]
  42ffae:	je     43029e <flatcc_json_printer_double_vector_field@@Base+0x31e>
  42ffb4:	mov    r15,rdi
  42ffb7:	mov    eax,DWORD PTR [rsi+0x18]
  42ffba:	lea    edx,[rax+0x1]
  42ffbd:	mov    DWORD PTR [rsi+0x18],edx
  42ffc0:	test   eax,eax
  42ffc2:	je     42ffd3 <flatcc_json_printer_double_vector_field@@Base+0x53>
  42ffc4:	mov    rax,QWORD PTR [r15+0x28]
  42ffc8:	lea    rdx,[rax+0x1]
  42ffcc:	mov    QWORD PTR [r15+0x28],rdx
  42ffd0:	mov    BYTE PTR [rax],0x2c
  42ffd3:	mov    ebx,DWORD PTR [r12]
  42ffd7:	mov    ebp,DWORD PTR [r12+rbx*1]
  42ffdb:	movsxd rdx,r8d
  42ffde:	mov    rdi,r15
  42ffe1:	mov    rsi,rcx
  42ffe4:	call   42ae90 <flatcc_json_printer_string_field@@Base+0x80>
  42ffe9:	add    DWORD PTR [r15+0x38],0x1
  42ffee:	mov    rax,QWORD PTR [r15+0x28]
  42fff2:	lea    rcx,[rax+0x1]
  42fff6:	mov    QWORD PTR [r15+0x28],rcx
  42fffa:	mov    BYTE PTR [rax],0x5b
  42fffd:	test   ebp,ebp
  42ffff:	je     4301e4 <flatcc_json_printer_double_vector_field@@Base+0x264>
  430005:	add    r12,rbx
  430008:	cmp    BYTE PTR [r15+0x31],0x0
  43000d:	mov    r14,QWORD PTR [r15+0x28]
  430011:	je     4300a4 <flatcc_json_printer_double_vector_field@@Base+0x124>
  430017:	lea    rax,[r14+0x1]
  43001b:	mov    QWORD PTR [r15+0x28],rax
  43001f:	mov    BYTE PTR [r14],0xa
  430023:	movsxd rax,DWORD PTR [r15+0x38]
  430027:	movzx  r14d,BYTE PTR [r15+0x31]
  43002c:	imul   r14,rax
  430030:	mov    rbx,QWORD PTR [r15+0x20]
  430034:	mov    rdi,QWORD PTR [r15+0x28]
  430038:	lea    rax,[rdi+r14*1]
  43003c:	cmp    rax,rbx
  43003f:	jbe    43008d <flatcc_json_printer_double_vector_field@@Base+0x10d>
  430041:	cmp    rdi,rbx
  430044:	jb     430057 <flatcc_json_printer_double_vector_field@@Base+0xd7>
  430046:	xor    esi,esi
  430048:	mov    rdi,r15
  43004b:	call   QWORD PTR [r15+0x48]
  43004f:	mov    rbx,QWORD PTR [r15+0x20]
  430053:	mov    rdi,QWORD PTR [r15+0x28]
  430057:	sub    rbx,rdi
  43005a:	cmp    rbx,r14
  43005d:	jae    43008d <flatcc_json_printer_double_vector_field@@Base+0x10d>
  43005f:	nop
  430060:	mov    esi,0x20
  430065:	mov    rdx,rbx
  430068:	call   406080 <memset@plt>
  43006d:	add    QWORD PTR [r15+0x28],rbx
  430071:	sub    r14,rbx
  430074:	xor    esi,esi
  430076:	mov    rdi,r15
  430079:	call   QWORD PTR [r15+0x48]
  43007d:	mov    rbx,QWORD PTR [r15+0x20]
  430081:	mov    rdi,QWORD PTR [r15+0x28]
  430085:	sub    rbx,rdi
  430088:	cmp    r14,rbx
  43008b:	ja     430060 <flatcc_json_printer_double_vector_field@@Base+0xe0>
  43008d:	mov    esi,0x20
  430092:	mov    rdx,r14
  430095:	call   406080 <memset@plt>
  43009a:	add    r14,QWORD PTR [r15+0x28]
  43009e:	mov    QWORD PTR [r15+0x28],r14
  4300a2:	jmp    4300b7 <flatcc_json_printer_double_vector_field@@Base+0x137>
  4300a4:	cmp    r14,QWORD PTR [r15+0x20]
  4300a8:	jb     4300b7 <flatcc_json_printer_double_vector_field@@Base+0x137>
  4300aa:	xor    esi,esi
  4300ac:	mov    rdi,r15
  4300af:	call   QWORD PTR [r15+0x48]
  4300b3:	mov    r14,QWORD PTR [r15+0x28]
  4300b7:	vmovsd xmm0,QWORD PTR [r12+0x4]
  4300be:	mov    rdi,r14
  4300c1:	call   428ec0 <flatcc_json_printer_fmt_float@@Base+0x10>
  4300c6:	cdqe   
  4300c8:	add    QWORD PTR [r15+0x28],rax
  4300cc:	add    ebp,0xffffffff
  4300cf:	je     4301e4 <flatcc_json_printer_double_vector_field@@Base+0x264>
  4300d5:	add    r12,0xc
  4300d9:	mov    rax,QWORD PTR [r15+0x28]
  4300dd:	nop    DWORD PTR [rax]
  4300e0:	add    ebp,0xffffffff
  4300e3:	lea    rcx,[rax+0x1]
  4300e7:	mov    QWORD PTR [r15+0x28],rcx
  4300eb:	mov    BYTE PTR [rax],0x2c
  4300ee:	cmp    BYTE PTR [r15+0x31],0x0
  4300f3:	mov    r14,QWORD PTR [r15+0x28]
  4300f7:	je     4301a0 <flatcc_json_printer_double_vector_field@@Base+0x220>
  4300fd:	lea    rax,[r14+0x1]
  430101:	mov    QWORD PTR [r15+0x28],rax
  430105:	mov    BYTE PTR [r14],0xa
  430109:	movsxd rax,DWORD PTR [r15+0x38]
  43010d:	movzx  r14d,BYTE PTR [r15+0x31]
  430112:	imul   r14,rax
  430116:	mov    rbx,QWORD PTR [r15+0x20]
  43011a:	mov    rdi,QWORD PTR [r15+0x28]
  43011e:	lea    rax,[rdi+r14*1]
  430122:	cmp    rax,rbx
  430125:	jbe    43017d <flatcc_json_printer_double_vector_field@@Base+0x1fd>
  430127:	cmp    rdi,rbx
  43012a:	jb     43013d <flatcc_json_printer_double_vector_field@@Base+0x1bd>
  43012c:	xor    esi,esi
  43012e:	mov    rdi,r15
  430131:	call   QWORD PTR [r15+0x48]
  430135:	mov    rbx,QWORD PTR [r15+0x20]
  430139:	mov    rdi,QWORD PTR [r15+0x28]
  43013d:	sub    rbx,rdi
  430140:	cmp    rbx,r14
  430143:	jae    43017d <flatcc_json_printer_double_vector_field@@Base+0x1fd>
  430145:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43014f:	nop
  430150:	mov    esi,0x20
  430155:	mov    rdx,rbx
  430158:	call   406080 <memset@plt>
  43015d:	add    QWORD PTR [r15+0x28],rbx
  430161:	sub    r14,rbx
  430164:	xor    esi,esi
  430166:	mov    rdi,r15
  430169:	call   QWORD PTR [r15+0x48]
  43016d:	mov    rbx,QWORD PTR [r15+0x20]
  430171:	mov    rdi,QWORD PTR [r15+0x28]
  430175:	sub    rbx,rdi
  430178:	cmp    r14,rbx
  43017b:	ja     430150 <flatcc_json_printer_double_vector_field@@Base+0x1d0>
  43017d:	mov    esi,0x20
  430182:	mov    rdx,r14
  430185:	call   406080 <memset@plt>
  43018a:	add    r14,QWORD PTR [r15+0x28]
  43018e:	mov    QWORD PTR [r15+0x28],r14
  430192:	jmp    4301c0 <flatcc_json_printer_double_vector_field@@Base+0x240>
  430194:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43019e:	xchg   ax,ax
  4301a0:	cmp    r14,QWORD PTR [r15+0x20]
  4301a4:	jb     4301c0 <flatcc_json_printer_double_vector_field@@Base+0x240>
  4301a6:	xor    esi,esi
  4301a8:	mov    rdi,r15
  4301ab:	call   QWORD PTR [r15+0x48]
  4301af:	mov    r14,QWORD PTR [r15+0x28]
  4301b3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4301bd:	nop    DWORD PTR [rax]
  4301c0:	vmovsd xmm0,QWORD PTR [r12]
  4301c6:	mov    rdi,r14
  4301c9:	call   428ec0 <flatcc_json_printer_fmt_float@@Base+0x10>
  4301ce:	cdqe   
  4301d0:	add    rax,QWORD PTR [r15+0x28]
  4301d4:	mov    QWORD PTR [r15+0x28],rax
  4301d8:	add    r12,0x8
  4301dc:	test   ebp,ebp
  4301de:	jne    4300e0 <flatcc_json_printer_double_vector_field@@Base+0x160>
  4301e4:	cmp    BYTE PTR [r15+0x31],0x0
  4301e9:	mov    r14,QWORD PTR [r15+0x28]
  4301ed:	je     430292 <flatcc_json_printer_double_vector_field@@Base+0x312>
  4301f3:	lea    rax,[r14+0x1]
  4301f7:	mov    QWORD PTR [r15+0x28],rax
  4301fb:	mov    BYTE PTR [r14],0xa
  4301ff:	movsxd rax,DWORD PTR [r15+0x38]
  430203:	add    rax,0xffffffffffffffff
  430207:	mov    DWORD PTR [r15+0x38],eax
  43020b:	movzx  r14d,BYTE PTR [r15+0x31]
  430210:	imul   r14,rax
  430214:	mov    rbx,QWORD PTR [r15+0x20]
  430218:	mov    rdi,QWORD PTR [r15+0x28]
  43021c:	lea    rax,[rdi+r14*1]
  430220:	cmp    rax,rbx
  430223:	jbe    43027d <flatcc_json_printer_double_vector_field@@Base+0x2fd>
  430225:	cmp    rdi,rbx
  430228:	jb     43023b <flatcc_json_printer_double_vector_field@@Base+0x2bb>
  43022a:	xor    esi,esi
  43022c:	mov    rdi,r15
  43022f:	call   QWORD PTR [r15+0x48]
  430233:	mov    rbx,QWORD PTR [r15+0x20]
  430237:	mov    rdi,QWORD PTR [r15+0x28]
  43023b:	sub    rbx,rdi
  43023e:	cmp    rbx,r14
  430241:	jae    43027d <flatcc_json_printer_double_vector_field@@Base+0x2fd>
  430243:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43024d:	nop    DWORD PTR [rax]
  430250:	mov    esi,0x20
  430255:	mov    rdx,rbx
  430258:	call   406080 <memset@plt>
  43025d:	add    QWORD PTR [r15+0x28],rbx
  430261:	sub    r14,rbx
  430264:	xor    esi,esi
  430266:	mov    rdi,r15
  430269:	call   QWORD PTR [r15+0x48]
  43026d:	mov    rbx,QWORD PTR [r15+0x20]
  430271:	mov    rdi,QWORD PTR [r15+0x28]
  430275:	sub    rbx,rdi
  430278:	cmp    r14,rbx
  43027b:	ja     430250 <flatcc_json_printer_double_vector_field@@Base+0x2d0>
  43027d:	mov    esi,0x20
  430282:	mov    rdx,r14
  430285:	call   406080 <memset@plt>
  43028a:	add    r14,QWORD PTR [r15+0x28]
  43028e:	mov    QWORD PTR [r15+0x28],r14
  430292:	lea    rax,[r14+0x1]
  430296:	mov    QWORD PTR [r15+0x28],rax
  43029a:	mov    BYTE PTR [r14],0x5d
  43029e:	pop    rbx
  43029f:	pop    r12
  4302a1:	pop    r14
  4302a3:	pop    r15
  4302a5:	pop    rbp
  4302a6:	ret    
  4302a7:	nop    WORD PTR [rax+rax*1+0x0]

00000000004302b0 <flatcc_json_printer_utype_enum_vector_field@@Base>:
  4302b0:	push   rbp
  4302b1:	push   r15
  4302b3:	push   r14
  4302b5:	push   r13
  4302b7:	push   r12
  4302b9:	push   rbx
  4302ba:	push   rax
  4302bb:	mov    r12,rdi
  4302be:	cmp    BYTE PTR [rdi+0x33],0x0
  4302c2:	je     4302da <flatcc_json_printer_utype_enum_vector_field@@Base+0x2a>
  4302c4:	mov    rdi,r12
  4302c7:	add    rsp,0x8
  4302cb:	pop    rbx
  4302cc:	pop    r12
  4302ce:	pop    r13
  4302d0:	pop    r14
  4302d2:	pop    r15
  4302d4:	pop    rbp
  4302d5:	jmp    42d3c0 <flatcc_json_printer_utype_vector_field@@Base>
  4302da:	lea    eax,[rdx+rdx*1]
  4302dd:	add    eax,0x4
  4302e0:	cmp    eax,DWORD PTR [rsi+0x10]
  4302e3:	jge    430605 <flatcc_json_printer_utype_enum_vector_field@@Base+0x355>
  4302e9:	mov    rdx,QWORD PTR [rsi+0x8]
  4302ed:	mov    eax,eax
  4302ef:	movzx  r13d,WORD PTR [rdx+rax*1]
  4302f4:	test   r13,r13
  4302f7:	je     430605 <flatcc_json_printer_utype_enum_vector_field@@Base+0x355>
  4302fd:	add    r13,QWORD PTR [rsi]
  430300:	je     430605 <flatcc_json_printer_utype_enum_vector_field@@Base+0x355>
  430306:	mov    r14,r9
  430309:	mov    eax,DWORD PTR [rsi+0x18]
  43030c:	lea    edx,[rax+0x1]
  43030f:	mov    DWORD PTR [rsi+0x18],edx
  430312:	test   eax,eax
  430314:	je     430327 <flatcc_json_printer_utype_enum_vector_field@@Base+0x77>
  430316:	mov    rax,QWORD PTR [r12+0x28]
  43031b:	lea    rdx,[rax+0x1]
  43031f:	mov    QWORD PTR [r12+0x28],rdx
  430324:	mov    BYTE PTR [rax],0x2c
  430327:	mov    ebx,DWORD PTR [r13+0x0]
  43032b:	mov    ebp,DWORD PTR [r13+rbx*1+0x0]
  430330:	movsxd rdx,r8d
  430333:	mov    rdi,r12
  430336:	mov    rsi,rcx
  430339:	call   42ae90 <flatcc_json_printer_string_field@@Base+0x80>
  43033e:	add    DWORD PTR [r12+0x38],0x1
  430344:	mov    rax,QWORD PTR [r12+0x28]
  430349:	lea    rcx,[rax+0x1]
  43034d:	mov    QWORD PTR [r12+0x28],rcx
  430352:	mov    BYTE PTR [rax],0x5b
  430355:	test   ebp,ebp
  430357:	je     430537 <flatcc_json_printer_utype_enum_vector_field@@Base+0x287>
  43035d:	add    r13,rbx
  430360:	cmp    BYTE PTR [r12+0x31],0x0
  430366:	mov    rax,QWORD PTR [r12+0x28]
  43036b:	je     430405 <flatcc_json_printer_utype_enum_vector_field@@Base+0x155>
  430371:	lea    rcx,[rax+0x1]
  430375:	mov    QWORD PTR [r12+0x28],rcx
  43037a:	mov    BYTE PTR [rax],0xa
  43037d:	movsxd rax,DWORD PTR [r12+0x38]
  430382:	movzx  r15d,BYTE PTR [r12+0x31]
  430388:	imul   r15,rax
  43038c:	mov    rbx,QWORD PTR [r12+0x20]
  430391:	mov    rdi,QWORD PTR [r12+0x28]
  430396:	lea    rax,[rdi+r15*1]
  43039a:	cmp    rax,rbx
  43039d:	jbe    4303f1 <flatcc_json_printer_utype_enum_vector_field@@Base+0x141>
  43039f:	cmp    rdi,rbx
  4303a2:	jb     4303b8 <flatcc_json_printer_utype_enum_vector_field@@Base+0x108>
  4303a4:	xor    esi,esi
  4303a6:	mov    rdi,r12
  4303a9:	call   QWORD PTR [r12+0x48]
  4303ae:	mov    rbx,QWORD PTR [r12+0x20]
  4303b3:	mov    rdi,QWORD PTR [r12+0x28]
  4303b8:	sub    rbx,rdi
  4303bb:	cmp    rbx,r15
  4303be:	jae    4303f1 <flatcc_json_printer_utype_enum_vector_field@@Base+0x141>
  4303c0:	mov    esi,0x20
  4303c5:	mov    rdx,rbx
  4303c8:	call   406080 <memset@plt>
  4303cd:	add    QWORD PTR [r12+0x28],rbx
  4303d2:	sub    r15,rbx
  4303d5:	xor    esi,esi
  4303d7:	mov    rdi,r12
  4303da:	call   QWORD PTR [r12+0x48]
  4303df:	mov    rbx,QWORD PTR [r12+0x20]
  4303e4:	mov    rdi,QWORD PTR [r12+0x28]
  4303e9:	sub    rbx,rdi
  4303ec:	cmp    r15,rbx
  4303ef:	ja     4303c0 <flatcc_json_printer_utype_enum_vector_field@@Base+0x110>
  4303f1:	mov    esi,0x20
  4303f6:	mov    rdx,r15
  4303f9:	call   406080 <memset@plt>
  4303fe:	add    QWORD PTR [r12+0x28],r15
  430403:	jmp    430416 <flatcc_json_printer_utype_enum_vector_field@@Base+0x166>
  430405:	cmp    rax,QWORD PTR [r12+0x20]
  43040a:	jb     430416 <flatcc_json_printer_utype_enum_vector_field@@Base+0x166>
  43040c:	xor    esi,esi
  43040e:	mov    rdi,r12
  430411:	call   QWORD PTR [r12+0x48]
  430416:	movzx  esi,BYTE PTR [r13+0x4]
  43041b:	mov    rdi,r12
  43041e:	call   r14
  430421:	add    ebp,0xffffffff
  430424:	je     430537 <flatcc_json_printer_utype_enum_vector_field@@Base+0x287>
  43042a:	add    r13,0x5
  43042e:	xchg   ax,ax
  430430:	add    ebp,0xffffffff
  430433:	mov    rax,QWORD PTR [r12+0x28]
  430438:	lea    rcx,[rax+0x1]
  43043c:	mov    QWORD PTR [r12+0x28],rcx
  430441:	mov    BYTE PTR [rax],0x2c
  430444:	cmp    BYTE PTR [r12+0x31],0x0
  43044a:	mov    rax,QWORD PTR [r12+0x28]
  43044f:	je     430500 <flatcc_json_printer_utype_enum_vector_field@@Base+0x250>
  430455:	lea    rcx,[rax+0x1]
  430459:	mov    QWORD PTR [r12+0x28],rcx
  43045e:	mov    BYTE PTR [rax],0xa
  430461:	movsxd rax,DWORD PTR [r12+0x38]
  430466:	movzx  r15d,BYTE PTR [r12+0x31]
  43046c:	imul   r15,rax
  430470:	mov    rbx,QWORD PTR [r12+0x20]
  430475:	mov    rdi,QWORD PTR [r12+0x28]
  43047a:	lea    rax,[rdi+r15*1]
  43047e:	cmp    rax,rbx
  430481:	jbe    4304e1 <flatcc_json_printer_utype_enum_vector_field@@Base+0x231>
  430483:	cmp    rdi,rbx
  430486:	jb     43049c <flatcc_json_printer_utype_enum_vector_field@@Base+0x1ec>
  430488:	xor    esi,esi
  43048a:	mov    rdi,r12
  43048d:	call   QWORD PTR [r12+0x48]
  430492:	mov    rbx,QWORD PTR [r12+0x20]
  430497:	mov    rdi,QWORD PTR [r12+0x28]
  43049c:	sub    rbx,rdi
  43049f:	cmp    rbx,r15
  4304a2:	jae    4304e1 <flatcc_json_printer_utype_enum_vector_field@@Base+0x231>
  4304a4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4304ae:	xchg   ax,ax
  4304b0:	mov    esi,0x20
  4304b5:	mov    rdx,rbx
  4304b8:	call   406080 <memset@plt>
  4304bd:	add    QWORD PTR [r12+0x28],rbx
  4304c2:	sub    r15,rbx
  4304c5:	xor    esi,esi
  4304c7:	mov    rdi,r12
  4304ca:	call   QWORD PTR [r12+0x48]
  4304cf:	mov    rbx,QWORD PTR [r12+0x20]
  4304d4:	mov    rdi,QWORD PTR [r12+0x28]
  4304d9:	sub    rbx,rdi
  4304dc:	cmp    r15,rbx
  4304df:	ja     4304b0 <flatcc_json_printer_utype_enum_vector_field@@Base+0x200>
  4304e1:	mov    esi,0x20
  4304e6:	mov    rdx,r15
  4304e9:	call   406080 <memset@plt>
  4304ee:	add    QWORD PTR [r12+0x28],r15
  4304f3:	jmp    430520 <flatcc_json_printer_utype_enum_vector_field@@Base+0x270>
  4304f5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4304ff:	nop
  430500:	cmp    rax,QWORD PTR [r12+0x20]
  430505:	jb     430520 <flatcc_json_printer_utype_enum_vector_field@@Base+0x270>
  430507:	xor    esi,esi
  430509:	mov    rdi,r12
  43050c:	call   QWORD PTR [r12+0x48]
  430511:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43051b:	nop    DWORD PTR [rax+rax*1+0x0]
  430520:	movzx  esi,BYTE PTR [r13+0x0]
  430525:	mov    rdi,r12
  430528:	call   r14
  43052b:	add    r13,0x1
  43052f:	test   ebp,ebp
  430531:	jne    430430 <flatcc_json_printer_utype_enum_vector_field@@Base+0x180>
  430537:	cmp    BYTE PTR [r12+0x31],0x0
  43053d:	mov    r14,QWORD PTR [r12+0x28]
  430542:	je     4305f8 <flatcc_json_printer_utype_enum_vector_field@@Base+0x348>
  430548:	lea    rax,[r14+0x1]
  43054c:	mov    QWORD PTR [r12+0x28],rax
  430551:	mov    BYTE PTR [r14],0xa
  430555:	movsxd rax,DWORD PTR [r12+0x38]
  43055a:	add    rax,0xffffffffffffffff
  43055e:	mov    DWORD PTR [r12+0x38],eax
  430563:	movzx  r14d,BYTE PTR [r12+0x31]
  430569:	imul   r14,rax
  43056d:	mov    rbx,QWORD PTR [r12+0x20]
  430572:	mov    rdi,QWORD PTR [r12+0x28]
  430577:	lea    rax,[rdi+r14*1]
  43057b:	cmp    rax,rbx
  43057e:	jbe    4305e1 <flatcc_json_printer_utype_enum_vector_field@@Base+0x331>
  430580:	cmp    rdi,rbx
  430583:	jb     430599 <flatcc_json_printer_utype_enum_vector_field@@Base+0x2e9>
  430585:	xor    esi,esi
  430587:	mov    rdi,r12
  43058a:	call   QWORD PTR [r12+0x48]
  43058f:	mov    rbx,QWORD PTR [r12+0x20]
  430594:	mov    rdi,QWORD PTR [r12+0x28]
  430599:	sub    rbx,rdi
  43059c:	cmp    rbx,r14
  43059f:	jae    4305e1 <flatcc_json_printer_utype_enum_vector_field@@Base+0x331>
  4305a1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4305ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4305b0:	mov    esi,0x20
  4305b5:	mov    rdx,rbx
  4305b8:	call   406080 <memset@plt>
  4305bd:	add    QWORD PTR [r12+0x28],rbx
  4305c2:	sub    r14,rbx
  4305c5:	xor    esi,esi
  4305c7:	mov    rdi,r12
  4305ca:	call   QWORD PTR [r12+0x48]
  4305cf:	mov    rbx,QWORD PTR [r12+0x20]
  4305d4:	mov    rdi,QWORD PTR [r12+0x28]
  4305d9:	sub    rbx,rdi
  4305dc:	cmp    r14,rbx
  4305df:	ja     4305b0 <flatcc_json_printer_utype_enum_vector_field@@Base+0x300>
  4305e1:	mov    esi,0x20
  4305e6:	mov    rdx,r14
  4305e9:	call   406080 <memset@plt>
  4305ee:	add    r14,QWORD PTR [r12+0x28]
  4305f3:	mov    QWORD PTR [r12+0x28],r14
  4305f8:	lea    rax,[r14+0x1]
  4305fc:	mov    QWORD PTR [r12+0x28],rax
  430601:	mov    BYTE PTR [r14],0x5d
  430605:	add    rsp,0x8
  430609:	pop    rbx
  43060a:	pop    r12
  43060c:	pop    r13
  43060e:	pop    r14
  430610:	pop    r15
  430612:	pop    rbp
  430613:	ret    
  430614:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43061e:	xchg   ax,ax

0000000000430620 <flatcc_json_printer_uint8_enum_vector_field@@Base>:
  430620:	push   rbp
  430621:	push   r15
  430623:	push   r14
  430625:	push   r13
  430627:	push   r12
  430629:	push   rbx
  43062a:	push   rax
  43062b:	mov    r12,rdi
  43062e:	cmp    BYTE PTR [rdi+0x33],0x0
  430632:	je     43064a <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2a>
  430634:	mov    rdi,r12
  430637:	add    rsp,0x8
  43063b:	pop    rbx
  43063c:	pop    r12
  43063e:	pop    r13
  430640:	pop    r14
  430642:	pop    r15
  430644:	pop    rbp
  430645:	jmp    42d7f0 <flatcc_json_printer_uint8_vector_field@@Base>
  43064a:	lea    eax,[rdx+rdx*1]
  43064d:	add    eax,0x4
  430650:	cmp    eax,DWORD PTR [rsi+0x10]
  430653:	jge    430975 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x355>
  430659:	mov    rdx,QWORD PTR [rsi+0x8]
  43065d:	mov    eax,eax
  43065f:	movzx  r13d,WORD PTR [rdx+rax*1]
  430664:	test   r13,r13
  430667:	je     430975 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x355>
  43066d:	add    r13,QWORD PTR [rsi]
  430670:	je     430975 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x355>
  430676:	mov    r14,r9
  430679:	mov    eax,DWORD PTR [rsi+0x18]
  43067c:	lea    edx,[rax+0x1]
  43067f:	mov    DWORD PTR [rsi+0x18],edx
  430682:	test   eax,eax
  430684:	je     430697 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x77>
  430686:	mov    rax,QWORD PTR [r12+0x28]
  43068b:	lea    rdx,[rax+0x1]
  43068f:	mov    QWORD PTR [r12+0x28],rdx
  430694:	mov    BYTE PTR [rax],0x2c
  430697:	mov    ebx,DWORD PTR [r13+0x0]
  43069b:	mov    ebp,DWORD PTR [r13+rbx*1+0x0]
  4306a0:	movsxd rdx,r8d
  4306a3:	mov    rdi,r12
  4306a6:	mov    rsi,rcx
  4306a9:	call   42ae90 <flatcc_json_printer_string_field@@Base+0x80>
  4306ae:	add    DWORD PTR [r12+0x38],0x1
  4306b4:	mov    rax,QWORD PTR [r12+0x28]
  4306b9:	lea    rcx,[rax+0x1]
  4306bd:	mov    QWORD PTR [r12+0x28],rcx
  4306c2:	mov    BYTE PTR [rax],0x5b
  4306c5:	test   ebp,ebp
  4306c7:	je     4308a7 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x287>
  4306cd:	add    r13,rbx
  4306d0:	cmp    BYTE PTR [r12+0x31],0x0
  4306d6:	mov    rax,QWORD PTR [r12+0x28]
  4306db:	je     430775 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x155>
  4306e1:	lea    rcx,[rax+0x1]
  4306e5:	mov    QWORD PTR [r12+0x28],rcx
  4306ea:	mov    BYTE PTR [rax],0xa
  4306ed:	movsxd rax,DWORD PTR [r12+0x38]
  4306f2:	movzx  r15d,BYTE PTR [r12+0x31]
  4306f8:	imul   r15,rax
  4306fc:	mov    rbx,QWORD PTR [r12+0x20]
  430701:	mov    rdi,QWORD PTR [r12+0x28]
  430706:	lea    rax,[rdi+r15*1]
  43070a:	cmp    rax,rbx
  43070d:	jbe    430761 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x141>
  43070f:	cmp    rdi,rbx
  430712:	jb     430728 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x108>
  430714:	xor    esi,esi
  430716:	mov    rdi,r12
  430719:	call   QWORD PTR [r12+0x48]
  43071e:	mov    rbx,QWORD PTR [r12+0x20]
  430723:	mov    rdi,QWORD PTR [r12+0x28]
  430728:	sub    rbx,rdi
  43072b:	cmp    rbx,r15
  43072e:	jae    430761 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x141>
  430730:	mov    esi,0x20
  430735:	mov    rdx,rbx
  430738:	call   406080 <memset@plt>
  43073d:	add    QWORD PTR [r12+0x28],rbx
  430742:	sub    r15,rbx
  430745:	xor    esi,esi
  430747:	mov    rdi,r12
  43074a:	call   QWORD PTR [r12+0x48]
  43074f:	mov    rbx,QWORD PTR [r12+0x20]
  430754:	mov    rdi,QWORD PTR [r12+0x28]
  430759:	sub    rbx,rdi
  43075c:	cmp    r15,rbx
  43075f:	ja     430730 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x110>
  430761:	mov    esi,0x20
  430766:	mov    rdx,r15
  430769:	call   406080 <memset@plt>
  43076e:	add    QWORD PTR [r12+0x28],r15
  430773:	jmp    430786 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x166>
  430775:	cmp    rax,QWORD PTR [r12+0x20]
  43077a:	jb     430786 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x166>
  43077c:	xor    esi,esi
  43077e:	mov    rdi,r12
  430781:	call   QWORD PTR [r12+0x48]
  430786:	movzx  esi,BYTE PTR [r13+0x4]
  43078b:	mov    rdi,r12
  43078e:	call   r14
  430791:	add    ebp,0xffffffff
  430794:	je     4308a7 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x287>
  43079a:	add    r13,0x5
  43079e:	xchg   ax,ax
  4307a0:	add    ebp,0xffffffff
  4307a3:	mov    rax,QWORD PTR [r12+0x28]
  4307a8:	lea    rcx,[rax+0x1]
  4307ac:	mov    QWORD PTR [r12+0x28],rcx
  4307b1:	mov    BYTE PTR [rax],0x2c
  4307b4:	cmp    BYTE PTR [r12+0x31],0x0
  4307ba:	mov    rax,QWORD PTR [r12+0x28]
  4307bf:	je     430870 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x250>
  4307c5:	lea    rcx,[rax+0x1]
  4307c9:	mov    QWORD PTR [r12+0x28],rcx
  4307ce:	mov    BYTE PTR [rax],0xa
  4307d1:	movsxd rax,DWORD PTR [r12+0x38]
  4307d6:	movzx  r15d,BYTE PTR [r12+0x31]
  4307dc:	imul   r15,rax
  4307e0:	mov    rbx,QWORD PTR [r12+0x20]
  4307e5:	mov    rdi,QWORD PTR [r12+0x28]
  4307ea:	lea    rax,[rdi+r15*1]
  4307ee:	cmp    rax,rbx
  4307f1:	jbe    430851 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x231>
  4307f3:	cmp    rdi,rbx
  4307f6:	jb     43080c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1ec>
  4307f8:	xor    esi,esi
  4307fa:	mov    rdi,r12
  4307fd:	call   QWORD PTR [r12+0x48]
  430802:	mov    rbx,QWORD PTR [r12+0x20]
  430807:	mov    rdi,QWORD PTR [r12+0x28]
  43080c:	sub    rbx,rdi
  43080f:	cmp    rbx,r15
  430812:	jae    430851 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x231>
  430814:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43081e:	xchg   ax,ax
  430820:	mov    esi,0x20
  430825:	mov    rdx,rbx
  430828:	call   406080 <memset@plt>
  43082d:	add    QWORD PTR [r12+0x28],rbx
  430832:	sub    r15,rbx
  430835:	xor    esi,esi
  430837:	mov    rdi,r12
  43083a:	call   QWORD PTR [r12+0x48]
  43083f:	mov    rbx,QWORD PTR [r12+0x20]
  430844:	mov    rdi,QWORD PTR [r12+0x28]
  430849:	sub    rbx,rdi
  43084c:	cmp    r15,rbx
  43084f:	ja     430820 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x200>
  430851:	mov    esi,0x20
  430856:	mov    rdx,r15
  430859:	call   406080 <memset@plt>
  43085e:	add    QWORD PTR [r12+0x28],r15
  430863:	jmp    430890 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x270>
  430865:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43086f:	nop
  430870:	cmp    rax,QWORD PTR [r12+0x20]
  430875:	jb     430890 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x270>
  430877:	xor    esi,esi
  430879:	mov    rdi,r12
  43087c:	call   QWORD PTR [r12+0x48]
  430881:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43088b:	nop    DWORD PTR [rax+rax*1+0x0]
  430890:	movzx  esi,BYTE PTR [r13+0x0]
  430895:	mov    rdi,r12
  430898:	call   r14
  43089b:	add    r13,0x1
  43089f:	test   ebp,ebp
  4308a1:	jne    4307a0 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x180>
  4308a7:	cmp    BYTE PTR [r12+0x31],0x0
  4308ad:	mov    r14,QWORD PTR [r12+0x28]
  4308b2:	je     430968 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x348>
  4308b8:	lea    rax,[r14+0x1]
  4308bc:	mov    QWORD PTR [r12+0x28],rax
  4308c1:	mov    BYTE PTR [r14],0xa
  4308c5:	movsxd rax,DWORD PTR [r12+0x38]
  4308ca:	add    rax,0xffffffffffffffff
  4308ce:	mov    DWORD PTR [r12+0x38],eax
  4308d3:	movzx  r14d,BYTE PTR [r12+0x31]
  4308d9:	imul   r14,rax
  4308dd:	mov    rbx,QWORD PTR [r12+0x20]
  4308e2:	mov    rdi,QWORD PTR [r12+0x28]
  4308e7:	lea    rax,[rdi+r14*1]
  4308eb:	cmp    rax,rbx
  4308ee:	jbe    430951 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x331>
  4308f0:	cmp    rdi,rbx
  4308f3:	jb     430909 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2e9>
  4308f5:	xor    esi,esi
  4308f7:	mov    rdi,r12
  4308fa:	call   QWORD PTR [r12+0x48]
  4308ff:	mov    rbx,QWORD PTR [r12+0x20]
  430904:	mov    rdi,QWORD PTR [r12+0x28]
  430909:	sub    rbx,rdi
  43090c:	cmp    rbx,r14
  43090f:	jae    430951 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x331>
  430911:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43091b:	nop    DWORD PTR [rax+rax*1+0x0]
  430920:	mov    esi,0x20
  430925:	mov    rdx,rbx
  430928:	call   406080 <memset@plt>
  43092d:	add    QWORD PTR [r12+0x28],rbx
  430932:	sub    r14,rbx
  430935:	xor    esi,esi
  430937:	mov    rdi,r12
  43093a:	call   QWORD PTR [r12+0x48]
  43093f:	mov    rbx,QWORD PTR [r12+0x20]
  430944:	mov    rdi,QWORD PTR [r12+0x28]
  430949:	sub    rbx,rdi
  43094c:	cmp    r14,rbx
  43094f:	ja     430920 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x300>
  430951:	mov    esi,0x20
  430956:	mov    rdx,r14
  430959:	call   406080 <memset@plt>
  43095e:	add    r14,QWORD PTR [r12+0x28]
  430963:	mov    QWORD PTR [r12+0x28],r14
  430968:	lea    rax,[r14+0x1]
  43096c:	mov    QWORD PTR [r12+0x28],rax
  430971:	mov    BYTE PTR [r14],0x5d
  430975:	add    rsp,0x8
  430979:	pop    rbx
  43097a:	pop    r12
  43097c:	pop    r13
  43097e:	pop    r14
  430980:	pop    r15
  430982:	pop    rbp
  430983:	ret    
  430984:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43098e:	xchg   ax,ax

0000000000430990 <flatcc_json_printer_uint16_enum_vector_field@@Base>:
  430990:	push   rbp
  430991:	push   r15
  430993:	push   r14
  430995:	push   r13
  430997:	push   r12
  430999:	push   rbx
  43099a:	push   rax
  43099b:	mov    r12,rdi
  43099e:	cmp    BYTE PTR [rdi+0x33],0x0
  4309a2:	je     4309ba <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2a>
  4309a4:	mov    rdi,r12
  4309a7:	add    rsp,0x8
  4309ab:	pop    rbx
  4309ac:	pop    r12
  4309ae:	pop    r13
  4309b0:	pop    r14
  4309b2:	pop    r15
  4309b4:	pop    rbp
  4309b5:	jmp    42dc20 <flatcc_json_printer_uint16_vector_field@@Base>
  4309ba:	lea    eax,[rdx+rdx*1]
  4309bd:	add    eax,0x4
  4309c0:	cmp    eax,DWORD PTR [rsi+0x10]
  4309c3:	jge    430ce5 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x355>
  4309c9:	mov    rdx,QWORD PTR [rsi+0x8]
  4309cd:	mov    eax,eax
  4309cf:	movzx  r13d,WORD PTR [rdx+rax*1]
  4309d4:	test   r13,r13
  4309d7:	je     430ce5 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x355>
  4309dd:	add    r13,QWORD PTR [rsi]
  4309e0:	je     430ce5 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x355>
  4309e6:	mov    r14,r9
  4309e9:	mov    eax,DWORD PTR [rsi+0x18]
  4309ec:	lea    edx,[rax+0x1]
  4309ef:	mov    DWORD PTR [rsi+0x18],edx
  4309f2:	test   eax,eax
  4309f4:	je     430a07 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x77>
  4309f6:	mov    rax,QWORD PTR [r12+0x28]
  4309fb:	lea    rdx,[rax+0x1]
  4309ff:	mov    QWORD PTR [r12+0x28],rdx
  430a04:	mov    BYTE PTR [rax],0x2c
  430a07:	mov    ebx,DWORD PTR [r13+0x0]
  430a0b:	mov    ebp,DWORD PTR [r13+rbx*1+0x0]
  430a10:	movsxd rdx,r8d
  430a13:	mov    rdi,r12
  430a16:	mov    rsi,rcx
  430a19:	call   42ae90 <flatcc_json_printer_string_field@@Base+0x80>
  430a1e:	add    DWORD PTR [r12+0x38],0x1
  430a24:	mov    rax,QWORD PTR [r12+0x28]
  430a29:	lea    rcx,[rax+0x1]
  430a2d:	mov    QWORD PTR [r12+0x28],rcx
  430a32:	mov    BYTE PTR [rax],0x5b
  430a35:	test   ebp,ebp
  430a37:	je     430c17 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x287>
  430a3d:	add    r13,rbx
  430a40:	cmp    BYTE PTR [r12+0x31],0x0
  430a46:	mov    rax,QWORD PTR [r12+0x28]
  430a4b:	je     430ae5 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x155>
  430a51:	lea    rcx,[rax+0x1]
  430a55:	mov    QWORD PTR [r12+0x28],rcx
  430a5a:	mov    BYTE PTR [rax],0xa
  430a5d:	movsxd rax,DWORD PTR [r12+0x38]
  430a62:	movzx  r15d,BYTE PTR [r12+0x31]
  430a68:	imul   r15,rax
  430a6c:	mov    rbx,QWORD PTR [r12+0x20]
  430a71:	mov    rdi,QWORD PTR [r12+0x28]
  430a76:	lea    rax,[rdi+r15*1]
  430a7a:	cmp    rax,rbx
  430a7d:	jbe    430ad1 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x141>
  430a7f:	cmp    rdi,rbx
  430a82:	jb     430a98 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x108>
  430a84:	xor    esi,esi
  430a86:	mov    rdi,r12
  430a89:	call   QWORD PTR [r12+0x48]
  430a8e:	mov    rbx,QWORD PTR [r12+0x20]
  430a93:	mov    rdi,QWORD PTR [r12+0x28]
  430a98:	sub    rbx,rdi
  430a9b:	cmp    rbx,r15
  430a9e:	jae    430ad1 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x141>
  430aa0:	mov    esi,0x20
  430aa5:	mov    rdx,rbx
  430aa8:	call   406080 <memset@plt>
  430aad:	add    QWORD PTR [r12+0x28],rbx
  430ab2:	sub    r15,rbx
  430ab5:	xor    esi,esi
  430ab7:	mov    rdi,r12
  430aba:	call   QWORD PTR [r12+0x48]
  430abf:	mov    rbx,QWORD PTR [r12+0x20]
  430ac4:	mov    rdi,QWORD PTR [r12+0x28]
  430ac9:	sub    rbx,rdi
  430acc:	cmp    r15,rbx
  430acf:	ja     430aa0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x110>
  430ad1:	mov    esi,0x20
  430ad6:	mov    rdx,r15
  430ad9:	call   406080 <memset@plt>
  430ade:	add    QWORD PTR [r12+0x28],r15
  430ae3:	jmp    430af6 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x166>
  430ae5:	cmp    rax,QWORD PTR [r12+0x20]
  430aea:	jb     430af6 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x166>
  430aec:	xor    esi,esi
  430aee:	mov    rdi,r12
  430af1:	call   QWORD PTR [r12+0x48]
  430af6:	movzx  esi,WORD PTR [r13+0x4]
  430afb:	mov    rdi,r12
  430afe:	call   r14
  430b01:	add    ebp,0xffffffff
  430b04:	je     430c17 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x287>
  430b0a:	add    r13,0x6
  430b0e:	xchg   ax,ax
  430b10:	add    ebp,0xffffffff
  430b13:	mov    rax,QWORD PTR [r12+0x28]
  430b18:	lea    rcx,[rax+0x1]
  430b1c:	mov    QWORD PTR [r12+0x28],rcx
  430b21:	mov    BYTE PTR [rax],0x2c
  430b24:	cmp    BYTE PTR [r12+0x31],0x0
  430b2a:	mov    rax,QWORD PTR [r12+0x28]
  430b2f:	je     430be0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x250>
  430b35:	lea    rcx,[rax+0x1]
  430b39:	mov    QWORD PTR [r12+0x28],rcx
  430b3e:	mov    BYTE PTR [rax],0xa
  430b41:	movsxd rax,DWORD PTR [r12+0x38]
  430b46:	movzx  r15d,BYTE PTR [r12+0x31]
  430b4c:	imul   r15,rax
  430b50:	mov    rbx,QWORD PTR [r12+0x20]
  430b55:	mov    rdi,QWORD PTR [r12+0x28]
  430b5a:	lea    rax,[rdi+r15*1]
  430b5e:	cmp    rax,rbx
  430b61:	jbe    430bc1 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x231>
  430b63:	cmp    rdi,rbx
  430b66:	jb     430b7c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1ec>
  430b68:	xor    esi,esi
  430b6a:	mov    rdi,r12
  430b6d:	call   QWORD PTR [r12+0x48]
  430b72:	mov    rbx,QWORD PTR [r12+0x20]
  430b77:	mov    rdi,QWORD PTR [r12+0x28]
  430b7c:	sub    rbx,rdi
  430b7f:	cmp    rbx,r15
  430b82:	jae    430bc1 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x231>
  430b84:	nop    WORD PTR cs:[rax+rax*1+0x0]
  430b8e:	xchg   ax,ax
  430b90:	mov    esi,0x20
  430b95:	mov    rdx,rbx
  430b98:	call   406080 <memset@plt>
  430b9d:	add    QWORD PTR [r12+0x28],rbx
  430ba2:	sub    r15,rbx
  430ba5:	xor    esi,esi
  430ba7:	mov    rdi,r12
  430baa:	call   QWORD PTR [r12+0x48]
  430baf:	mov    rbx,QWORD PTR [r12+0x20]
  430bb4:	mov    rdi,QWORD PTR [r12+0x28]
  430bb9:	sub    rbx,rdi
  430bbc:	cmp    r15,rbx
  430bbf:	ja     430b90 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x200>
  430bc1:	mov    esi,0x20
  430bc6:	mov    rdx,r15
  430bc9:	call   406080 <memset@plt>
  430bce:	add    QWORD PTR [r12+0x28],r15
  430bd3:	jmp    430c00 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x270>
  430bd5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  430bdf:	nop
  430be0:	cmp    rax,QWORD PTR [r12+0x20]
  430be5:	jb     430c00 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x270>
  430be7:	xor    esi,esi
  430be9:	mov    rdi,r12
  430bec:	call   QWORD PTR [r12+0x48]
  430bf1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  430bfb:	nop    DWORD PTR [rax+rax*1+0x0]
  430c00:	movzx  esi,WORD PTR [r13+0x0]
  430c05:	mov    rdi,r12
  430c08:	call   r14
  430c0b:	add    r13,0x2
  430c0f:	test   ebp,ebp
  430c11:	jne    430b10 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x180>
  430c17:	cmp    BYTE PTR [r12+0x31],0x0
  430c1d:	mov    r14,QWORD PTR [r12+0x28]
  430c22:	je     430cd8 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x348>
  430c28:	lea    rax,[r14+0x1]
  430c2c:	mov    QWORD PTR [r12+0x28],rax
  430c31:	mov    BYTE PTR [r14],0xa
  430c35:	movsxd rax,DWORD PTR [r12+0x38]
  430c3a:	add    rax,0xffffffffffffffff
  430c3e:	mov    DWORD PTR [r12+0x38],eax
  430c43:	movzx  r14d,BYTE PTR [r12+0x31]
  430c49:	imul   r14,rax
  430c4d:	mov    rbx,QWORD PTR [r12+0x20]
  430c52:	mov    rdi,QWORD PTR [r12+0x28]
  430c57:	lea    rax,[rdi+r14*1]
  430c5b:	cmp    rax,rbx
  430c5e:	jbe    430cc1 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x331>
  430c60:	cmp    rdi,rbx
  430c63:	jb     430c79 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2e9>
  430c65:	xor    esi,esi
  430c67:	mov    rdi,r12
  430c6a:	call   QWORD PTR [r12+0x48]
  430c6f:	mov    rbx,QWORD PTR [r12+0x20]
  430c74:	mov    rdi,QWORD PTR [r12+0x28]
  430c79:	sub    rbx,rdi
  430c7c:	cmp    rbx,r14
  430c7f:	jae    430cc1 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x331>
  430c81:	nop    WORD PTR cs:[rax+rax*1+0x0]
  430c8b:	nop    DWORD PTR [rax+rax*1+0x0]
  430c90:	mov    esi,0x20
  430c95:	mov    rdx,rbx
  430c98:	call   406080 <memset@plt>
  430c9d:	add    QWORD PTR [r12+0x28],rbx
  430ca2:	sub    r14,rbx
  430ca5:	xor    esi,esi
  430ca7:	mov    rdi,r12
  430caa:	call   QWORD PTR [r12+0x48]
  430caf:	mov    rbx,QWORD PTR [r12+0x20]
  430cb4:	mov    rdi,QWORD PTR [r12+0x28]
  430cb9:	sub    rbx,rdi
  430cbc:	cmp    r14,rbx
  430cbf:	ja     430c90 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x300>
  430cc1:	mov    esi,0x20
  430cc6:	mov    rdx,r14
  430cc9:	call   406080 <memset@plt>
  430cce:	add    r14,QWORD PTR [r12+0x28]
  430cd3:	mov    QWORD PTR [r12+0x28],r14
  430cd8:	lea    rax,[r14+0x1]
  430cdc:	mov    QWORD PTR [r12+0x28],rax
  430ce1:	mov    BYTE PTR [r14],0x5d
  430ce5:	add    rsp,0x8
  430ce9:	pop    rbx
  430cea:	pop    r12
  430cec:	pop    r13
  430cee:	pop    r14
  430cf0:	pop    r15
  430cf2:	pop    rbp
  430cf3:	ret    
  430cf4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  430cfe:	xchg   ax,ax

0000000000430d00 <flatcc_json_printer_uint32_enum_vector_field@@Base>:
  430d00:	push   rbp
  430d01:	push   r15
  430d03:	push   r14
  430d05:	push   r13
  430d07:	push   r12
  430d09:	push   rbx
  430d0a:	push   rax
  430d0b:	mov    r12,rdi
  430d0e:	cmp    BYTE PTR [rdi+0x33],0x0
  430d12:	je     430d2a <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2a>
  430d14:	mov    rdi,r12
  430d17:	add    rsp,0x8
  430d1b:	pop    rbx
  430d1c:	pop    r12
  430d1e:	pop    r13
  430d20:	pop    r14
  430d22:	pop    r15
  430d24:	pop    rbp
  430d25:	jmp    42e1a0 <flatcc_json_printer_uint32_vector_field@@Base>
  430d2a:	lea    eax,[rdx+rdx*1]
  430d2d:	add    eax,0x4
  430d30:	cmp    eax,DWORD PTR [rsi+0x10]
  430d33:	jge    431045 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x345>
  430d39:	mov    rdx,QWORD PTR [rsi+0x8]
  430d3d:	mov    eax,eax
  430d3f:	movzx  r13d,WORD PTR [rdx+rax*1]
  430d44:	test   r13,r13
  430d47:	je     431045 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x345>
  430d4d:	add    r13,QWORD PTR [rsi]
  430d50:	je     431045 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x345>
  430d56:	mov    r14,r9
  430d59:	mov    eax,DWORD PTR [rsi+0x18]
  430d5c:	lea    edx,[rax+0x1]
  430d5f:	mov    DWORD PTR [rsi+0x18],edx
  430d62:	test   eax,eax
  430d64:	je     430d77 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x77>
  430d66:	mov    rax,QWORD PTR [r12+0x28]
  430d6b:	lea    rdx,[rax+0x1]
  430d6f:	mov    QWORD PTR [r12+0x28],rdx
  430d74:	mov    BYTE PTR [rax],0x2c
  430d77:	mov    ebx,DWORD PTR [r13+0x0]
  430d7b:	mov    ebp,DWORD PTR [r13+rbx*1+0x0]
  430d80:	movsxd rdx,r8d
  430d83:	mov    rdi,r12
  430d86:	mov    rsi,rcx
  430d89:	call   42ae90 <flatcc_json_printer_string_field@@Base+0x80>
  430d8e:	add    DWORD PTR [r12+0x38],0x1
  430d94:	mov    rax,QWORD PTR [r12+0x28]
  430d99:	lea    rcx,[rax+0x1]
  430d9d:	mov    QWORD PTR [r12+0x28],rcx
  430da2:	mov    BYTE PTR [rax],0x5b
  430da5:	test   ebp,ebp
  430da7:	je     430f86 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x286>
  430dad:	add    r13,rbx
  430db0:	cmp    BYTE PTR [r12+0x31],0x0
  430db6:	mov    rax,QWORD PTR [r12+0x28]
  430dbb:	je     430e55 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x155>
  430dc1:	lea    rcx,[rax+0x1]
  430dc5:	mov    QWORD PTR [r12+0x28],rcx
  430dca:	mov    BYTE PTR [rax],0xa
  430dcd:	movsxd rax,DWORD PTR [r12+0x38]
  430dd2:	movzx  r15d,BYTE PTR [r12+0x31]
  430dd8:	imul   r15,rax
  430ddc:	mov    rbx,QWORD PTR [r12+0x20]
  430de1:	mov    rdi,QWORD PTR [r12+0x28]
  430de6:	lea    rax,[rdi+r15*1]
  430dea:	cmp    rax,rbx
  430ded:	jbe    430e41 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x141>
  430def:	cmp    rdi,rbx
  430df2:	jb     430e08 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x108>
  430df4:	xor    esi,esi
  430df6:	mov    rdi,r12
  430df9:	call   QWORD PTR [r12+0x48]
  430dfe:	mov    rbx,QWORD PTR [r12+0x20]
  430e03:	mov    rdi,QWORD PTR [r12+0x28]
  430e08:	sub    rbx,rdi
  430e0b:	cmp    rbx,r15
  430e0e:	jae    430e41 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x141>
  430e10:	mov    esi,0x20
  430e15:	mov    rdx,rbx
  430e18:	call   406080 <memset@plt>
  430e1d:	add    QWORD PTR [r12+0x28],rbx
  430e22:	sub    r15,rbx
  430e25:	xor    esi,esi
  430e27:	mov    rdi,r12
  430e2a:	call   QWORD PTR [r12+0x48]
  430e2f:	mov    rbx,QWORD PTR [r12+0x20]
  430e34:	mov    rdi,QWORD PTR [r12+0x28]
  430e39:	sub    rbx,rdi
  430e3c:	cmp    r15,rbx
  430e3f:	ja     430e10 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x110>
  430e41:	mov    esi,0x20
  430e46:	mov    rdx,r15
  430e49:	call   406080 <memset@plt>
  430e4e:	add    QWORD PTR [r12+0x28],r15
  430e53:	jmp    430e66 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x166>
  430e55:	cmp    rax,QWORD PTR [r12+0x20]
  430e5a:	jb     430e66 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x166>
  430e5c:	xor    esi,esi
  430e5e:	mov    rdi,r12
  430e61:	call   QWORD PTR [r12+0x48]
  430e66:	mov    esi,DWORD PTR [r13+0x4]
  430e6a:	mov    rdi,r12
  430e6d:	call   r14
  430e70:	add    ebp,0xffffffff
  430e73:	je     430f86 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x286>
  430e79:	add    r13,0x8
  430e7d:	nop    DWORD PTR [rax]
  430e80:	add    ebp,0xffffffff
  430e83:	mov    rax,QWORD PTR [r12+0x28]
  430e88:	lea    rcx,[rax+0x1]
  430e8c:	mov    QWORD PTR [r12+0x28],rcx
  430e91:	mov    BYTE PTR [rax],0x2c
  430e94:	cmp    BYTE PTR [r12+0x31],0x0
  430e9a:	mov    rax,QWORD PTR [r12+0x28]
  430e9f:	je     430f50 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x250>
  430ea5:	lea    rcx,[rax+0x1]
  430ea9:	mov    QWORD PTR [r12+0x28],rcx
  430eae:	mov    BYTE PTR [rax],0xa
  430eb1:	movsxd rax,DWORD PTR [r12+0x38]
  430eb6:	movzx  r15d,BYTE PTR [r12+0x31]
  430ebc:	imul   r15,rax
  430ec0:	mov    rbx,QWORD PTR [r12+0x20]
  430ec5:	mov    rdi,QWORD PTR [r12+0x28]
  430eca:	lea    rax,[rdi+r15*1]
  430ece:	cmp    rax,rbx
  430ed1:	jbe    430f31 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x231>
  430ed3:	cmp    rdi,rbx
  430ed6:	jb     430eec <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1ec>
  430ed8:	xor    esi,esi
  430eda:	mov    rdi,r12
  430edd:	call   QWORD PTR [r12+0x48]
  430ee2:	mov    rbx,QWORD PTR [r12+0x20]
  430ee7:	mov    rdi,QWORD PTR [r12+0x28]
  430eec:	sub    rbx,rdi
  430eef:	cmp    rbx,r15
  430ef2:	jae    430f31 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x231>
  430ef4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  430efe:	xchg   ax,ax
  430f00:	mov    esi,0x20
  430f05:	mov    rdx,rbx
  430f08:	call   406080 <memset@plt>
  430f0d:	add    QWORD PTR [r12+0x28],rbx
  430f12:	sub    r15,rbx
  430f15:	xor    esi,esi
  430f17:	mov    rdi,r12
  430f1a:	call   QWORD PTR [r12+0x48]
  430f1f:	mov    rbx,QWORD PTR [r12+0x20]
  430f24:	mov    rdi,QWORD PTR [r12+0x28]
  430f29:	sub    rbx,rdi
  430f2c:	cmp    r15,rbx
  430f2f:	ja     430f00 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x200>
  430f31:	mov    esi,0x20
  430f36:	mov    rdx,r15
  430f39:	call   406080 <memset@plt>
  430f3e:	add    QWORD PTR [r12+0x28],r15
  430f43:	jmp    430f70 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x270>
  430f45:	nop    WORD PTR cs:[rax+rax*1+0x0]
  430f4f:	nop
  430f50:	cmp    rax,QWORD PTR [r12+0x20]
  430f55:	jb     430f70 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x270>
  430f57:	xor    esi,esi
  430f59:	mov    rdi,r12
  430f5c:	call   QWORD PTR [r12+0x48]
  430f61:	nop    WORD PTR cs:[rax+rax*1+0x0]
  430f6b:	nop    DWORD PTR [rax+rax*1+0x0]
  430f70:	mov    esi,DWORD PTR [r13+0x0]
  430f74:	mov    rdi,r12
  430f77:	call   r14
  430f7a:	add    r13,0x4
  430f7e:	test   ebp,ebp
  430f80:	jne    430e80 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x180>
  430f86:	cmp    BYTE PTR [r12+0x31],0x0
  430f8c:	mov    r14,QWORD PTR [r12+0x28]
  430f91:	je     431038 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x338>
  430f97:	lea    rax,[r14+0x1]
  430f9b:	mov    QWORD PTR [r12+0x28],rax
  430fa0:	mov    BYTE PTR [r14],0xa
  430fa4:	movsxd rax,DWORD PTR [r12+0x38]
  430fa9:	add    rax,0xffffffffffffffff
  430fad:	mov    DWORD PTR [r12+0x38],eax
  430fb2:	movzx  r14d,BYTE PTR [r12+0x31]
  430fb8:	imul   r14,rax
  430fbc:	mov    rbx,QWORD PTR [r12+0x20]
  430fc1:	mov    rdi,QWORD PTR [r12+0x28]
  430fc6:	lea    rax,[rdi+r14*1]
  430fca:	cmp    rax,rbx
  430fcd:	jbe    431021 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x321>
  430fcf:	cmp    rdi,rbx
  430fd2:	jb     430fe8 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2e8>
  430fd4:	xor    esi,esi
  430fd6:	mov    rdi,r12
  430fd9:	call   QWORD PTR [r12+0x48]
  430fde:	mov    rbx,QWORD PTR [r12+0x20]
  430fe3:	mov    rdi,QWORD PTR [r12+0x28]
  430fe8:	sub    rbx,rdi
  430feb:	cmp    rbx,r14
  430fee:	jae    431021 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x321>
  430ff0:	mov    esi,0x20
  430ff5:	mov    rdx,rbx
  430ff8:	call   406080 <memset@plt>
  430ffd:	add    QWORD PTR [r12+0x28],rbx
  431002:	sub    r14,rbx
  431005:	xor    esi,esi
  431007:	mov    rdi,r12
  43100a:	call   QWORD PTR [r12+0x48]
  43100f:	mov    rbx,QWORD PTR [r12+0x20]
  431014:	mov    rdi,QWORD PTR [r12+0x28]
  431019:	sub    rbx,rdi
  43101c:	cmp    r14,rbx
  43101f:	ja     430ff0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2f0>
  431021:	mov    esi,0x20
  431026:	mov    rdx,r14
  431029:	call   406080 <memset@plt>
  43102e:	add    r14,QWORD PTR [r12+0x28]
  431033:	mov    QWORD PTR [r12+0x28],r14
  431038:	lea    rax,[r14+0x1]
  43103c:	mov    QWORD PTR [r12+0x28],rax
  431041:	mov    BYTE PTR [r14],0x5d
  431045:	add    rsp,0x8
  431049:	pop    rbx
  43104a:	pop    r12
  43104c:	pop    r13
  43104e:	pop    r14
  431050:	pop    r15
  431052:	pop    rbp
  431053:	ret    
  431054:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43105e:	xchg   ax,ax

0000000000431060 <flatcc_json_printer_uint64_enum_vector_field@@Base>:
  431060:	push   rbp
  431061:	push   r15
  431063:	push   r14
  431065:	push   r13
  431067:	push   r12
  431069:	push   rbx
  43106a:	push   rax
  43106b:	mov    r12,rdi
  43106e:	cmp    BYTE PTR [rdi+0x33],0x0
  431072:	je     43108a <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2a>
  431074:	mov    rdi,r12
  431077:	add    rsp,0x8
  43107b:	pop    rbx
  43107c:	pop    r12
  43107e:	pop    r13
  431080:	pop    r14
  431082:	pop    r15
  431084:	pop    rbp
  431085:	jmp    42e4d0 <flatcc_json_printer_uint64_vector_field@@Base>
  43108a:	lea    eax,[rdx+rdx*1]
  43108d:	add    eax,0x4
  431090:	cmp    eax,DWORD PTR [rsi+0x10]
  431093:	jge    4313a5 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x345>
  431099:	mov    rdx,QWORD PTR [rsi+0x8]
  43109d:	mov    eax,eax
  43109f:	movzx  r13d,WORD PTR [rdx+rax*1]
  4310a4:	test   r13,r13
  4310a7:	je     4313a5 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x345>
  4310ad:	add    r13,QWORD PTR [rsi]
  4310b0:	je     4313a5 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x345>
  4310b6:	mov    r14,r9
  4310b9:	mov    eax,DWORD PTR [rsi+0x18]
  4310bc:	lea    edx,[rax+0x1]
  4310bf:	mov    DWORD PTR [rsi+0x18],edx
  4310c2:	test   eax,eax
  4310c4:	je     4310d7 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x77>
  4310c6:	mov    rax,QWORD PTR [r12+0x28]
  4310cb:	lea    rdx,[rax+0x1]
  4310cf:	mov    QWORD PTR [r12+0x28],rdx
  4310d4:	mov    BYTE PTR [rax],0x2c
  4310d7:	mov    ebx,DWORD PTR [r13+0x0]
  4310db:	mov    ebp,DWORD PTR [r13+rbx*1+0x0]
  4310e0:	movsxd rdx,r8d
  4310e3:	mov    rdi,r12
  4310e6:	mov    rsi,rcx
  4310e9:	call   42ae90 <flatcc_json_printer_string_field@@Base+0x80>
  4310ee:	add    DWORD PTR [r12+0x38],0x1
  4310f4:	mov    rax,QWORD PTR [r12+0x28]
  4310f9:	lea    rcx,[rax+0x1]
  4310fd:	mov    QWORD PTR [r12+0x28],rcx
  431102:	mov    BYTE PTR [rax],0x5b
  431105:	test   ebp,ebp
  431107:	je     4312e6 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x286>
  43110d:	add    r13,rbx
  431110:	cmp    BYTE PTR [r12+0x31],0x0
  431116:	mov    rax,QWORD PTR [r12+0x28]
  43111b:	je     4311b5 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x155>
  431121:	lea    rcx,[rax+0x1]
  431125:	mov    QWORD PTR [r12+0x28],rcx
  43112a:	mov    BYTE PTR [rax],0xa
  43112d:	movsxd rax,DWORD PTR [r12+0x38]
  431132:	movzx  r15d,BYTE PTR [r12+0x31]
  431138:	imul   r15,rax
  43113c:	mov    rbx,QWORD PTR [r12+0x20]
  431141:	mov    rdi,QWORD PTR [r12+0x28]
  431146:	lea    rax,[rdi+r15*1]
  43114a:	cmp    rax,rbx
  43114d:	jbe    4311a1 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x141>
  43114f:	cmp    rdi,rbx
  431152:	jb     431168 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x108>
  431154:	xor    esi,esi
  431156:	mov    rdi,r12
  431159:	call   QWORD PTR [r12+0x48]
  43115e:	mov    rbx,QWORD PTR [r12+0x20]
  431163:	mov    rdi,QWORD PTR [r12+0x28]
  431168:	sub    rbx,rdi
  43116b:	cmp    rbx,r15
  43116e:	jae    4311a1 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x141>
  431170:	mov    esi,0x20
  431175:	mov    rdx,rbx
  431178:	call   406080 <memset@plt>
  43117d:	add    QWORD PTR [r12+0x28],rbx
  431182:	sub    r15,rbx
  431185:	xor    esi,esi
  431187:	mov    rdi,r12
  43118a:	call   QWORD PTR [r12+0x48]
  43118f:	mov    rbx,QWORD PTR [r12+0x20]
  431194:	mov    rdi,QWORD PTR [r12+0x28]
  431199:	sub    rbx,rdi
  43119c:	cmp    r15,rbx
  43119f:	ja     431170 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x110>
  4311a1:	mov    esi,0x20
  4311a6:	mov    rdx,r15
  4311a9:	call   406080 <memset@plt>
  4311ae:	add    QWORD PTR [r12+0x28],r15
  4311b3:	jmp    4311c6 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x166>
  4311b5:	cmp    rax,QWORD PTR [r12+0x20]
  4311ba:	jb     4311c6 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x166>
  4311bc:	xor    esi,esi
  4311be:	mov    rdi,r12
  4311c1:	call   QWORD PTR [r12+0x48]
  4311c6:	mov    rsi,QWORD PTR [r13+0x4]
  4311ca:	mov    rdi,r12
  4311cd:	call   r14
  4311d0:	add    ebp,0xffffffff
  4311d3:	je     4312e6 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x286>
  4311d9:	add    r13,0xc
  4311dd:	nop    DWORD PTR [rax]
  4311e0:	add    ebp,0xffffffff
  4311e3:	mov    rax,QWORD PTR [r12+0x28]
  4311e8:	lea    rcx,[rax+0x1]
  4311ec:	mov    QWORD PTR [r12+0x28],rcx
  4311f1:	mov    BYTE PTR [rax],0x2c
  4311f4:	cmp    BYTE PTR [r12+0x31],0x0
  4311fa:	mov    rax,QWORD PTR [r12+0x28]
  4311ff:	je     4312b0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x250>
  431205:	lea    rcx,[rax+0x1]
  431209:	mov    QWORD PTR [r12+0x28],rcx
  43120e:	mov    BYTE PTR [rax],0xa
  431211:	movsxd rax,DWORD PTR [r12+0x38]
  431216:	movzx  r15d,BYTE PTR [r12+0x31]
  43121c:	imul   r15,rax
  431220:	mov    rbx,QWORD PTR [r12+0x20]
  431225:	mov    rdi,QWORD PTR [r12+0x28]
  43122a:	lea    rax,[rdi+r15*1]
  43122e:	cmp    rax,rbx
  431231:	jbe    431291 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x231>
  431233:	cmp    rdi,rbx
  431236:	jb     43124c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1ec>
  431238:	xor    esi,esi
  43123a:	mov    rdi,r12
  43123d:	call   QWORD PTR [r12+0x48]
  431242:	mov    rbx,QWORD PTR [r12+0x20]
  431247:	mov    rdi,QWORD PTR [r12+0x28]
  43124c:	sub    rbx,rdi
  43124f:	cmp    rbx,r15
  431252:	jae    431291 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x231>
  431254:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43125e:	xchg   ax,ax
  431260:	mov    esi,0x20
  431265:	mov    rdx,rbx
  431268:	call   406080 <memset@plt>
  43126d:	add    QWORD PTR [r12+0x28],rbx
  431272:	sub    r15,rbx
  431275:	xor    esi,esi
  431277:	mov    rdi,r12
  43127a:	call   QWORD PTR [r12+0x48]
  43127f:	mov    rbx,QWORD PTR [r12+0x20]
  431284:	mov    rdi,QWORD PTR [r12+0x28]
  431289:	sub    rbx,rdi
  43128c:	cmp    r15,rbx
  43128f:	ja     431260 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x200>
  431291:	mov    esi,0x20
  431296:	mov    rdx,r15
  431299:	call   406080 <memset@plt>
  43129e:	add    QWORD PTR [r12+0x28],r15
  4312a3:	jmp    4312d0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x270>
  4312a5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4312af:	nop
  4312b0:	cmp    rax,QWORD PTR [r12+0x20]
  4312b5:	jb     4312d0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x270>
  4312b7:	xor    esi,esi
  4312b9:	mov    rdi,r12
  4312bc:	call   QWORD PTR [r12+0x48]
  4312c1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4312cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4312d0:	mov    rsi,QWORD PTR [r13+0x0]
  4312d4:	mov    rdi,r12
  4312d7:	call   r14
  4312da:	add    r13,0x8
  4312de:	test   ebp,ebp
  4312e0:	jne    4311e0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x180>
  4312e6:	cmp    BYTE PTR [r12+0x31],0x0
  4312ec:	mov    r14,QWORD PTR [r12+0x28]
  4312f1:	je     431398 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x338>
  4312f7:	lea    rax,[r14+0x1]
  4312fb:	mov    QWORD PTR [r12+0x28],rax
  431300:	mov    BYTE PTR [r14],0xa
  431304:	movsxd rax,DWORD PTR [r12+0x38]
  431309:	add    rax,0xffffffffffffffff
  43130d:	mov    DWORD PTR [r12+0x38],eax
  431312:	movzx  r14d,BYTE PTR [r12+0x31]
  431318:	imul   r14,rax
  43131c:	mov    rbx,QWORD PTR [r12+0x20]
  431321:	mov    rdi,QWORD PTR [r12+0x28]
  431326:	lea    rax,[rdi+r14*1]
  43132a:	cmp    rax,rbx
  43132d:	jbe    431381 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x321>
  43132f:	cmp    rdi,rbx
  431332:	jb     431348 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2e8>
  431334:	xor    esi,esi
  431336:	mov    rdi,r12
  431339:	call   QWORD PTR [r12+0x48]
  43133e:	mov    rbx,QWORD PTR [r12+0x20]
  431343:	mov    rdi,QWORD PTR [r12+0x28]
  431348:	sub    rbx,rdi
  43134b:	cmp    rbx,r14
  43134e:	jae    431381 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x321>
  431350:	mov    esi,0x20
  431355:	mov    rdx,rbx
  431358:	call   406080 <memset@plt>
  43135d:	add    QWORD PTR [r12+0x28],rbx
  431362:	sub    r14,rbx
  431365:	xor    esi,esi
  431367:	mov    rdi,r12
  43136a:	call   QWORD PTR [r12+0x48]
  43136f:	mov    rbx,QWORD PTR [r12+0x20]
  431374:	mov    rdi,QWORD PTR [r12+0x28]
  431379:	sub    rbx,rdi
  43137c:	cmp    r14,rbx
  43137f:	ja     431350 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2f0>
  431381:	mov    esi,0x20
  431386:	mov    rdx,r14
  431389:	call   406080 <memset@plt>
  43138e:	add    r14,QWORD PTR [r12+0x28]
  431393:	mov    QWORD PTR [r12+0x28],r14
  431398:	lea    rax,[r14+0x1]
  43139c:	mov    QWORD PTR [r12+0x28],rax
  4313a1:	mov    BYTE PTR [r14],0x5d
  4313a5:	add    rsp,0x8
  4313a9:	pop    rbx
  4313aa:	pop    r12
  4313ac:	pop    r13
  4313ae:	pop    r14
  4313b0:	pop    r15
  4313b2:	pop    rbp
  4313b3:	ret    
  4313b4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4313be:	xchg   ax,ax

00000000004313c0 <flatcc_json_printer_int8_enum_vector_field@@Base>:
  4313c0:	push   rbp
  4313c1:	push   r15
  4313c3:	push   r14
  4313c5:	push   r13
  4313c7:	push   r12
  4313c9:	push   rbx
  4313ca:	push   rax
  4313cb:	mov    r12,rdi
  4313ce:	cmp    BYTE PTR [rdi+0x33],0x0
  4313d2:	je     4313ea <flatcc_json_printer_int8_enum_vector_field@@Base+0x2a>
  4313d4:	mov    rdi,r12
  4313d7:	add    rsp,0x8
  4313db:	pop    rbx
  4313dc:	pop    r12
  4313de:	pop    r13
  4313e0:	pop    r14
  4313e2:	pop    r15
  4313e4:	pop    rbp
  4313e5:	jmp    42e800 <flatcc_json_printer_int8_vector_field@@Base>
  4313ea:	lea    eax,[rdx+rdx*1]
  4313ed:	add    eax,0x4
  4313f0:	cmp    eax,DWORD PTR [rsi+0x10]
  4313f3:	jge    431715 <flatcc_json_printer_int8_enum_vector_field@@Base+0x355>
  4313f9:	mov    rdx,QWORD PTR [rsi+0x8]
  4313fd:	mov    eax,eax
  4313ff:	movzx  r13d,WORD PTR [rdx+rax*1]
  431404:	test   r13,r13
  431407:	je     431715 <flatcc_json_printer_int8_enum_vector_field@@Base+0x355>
  43140d:	add    r13,QWORD PTR [rsi]
  431410:	je     431715 <flatcc_json_printer_int8_enum_vector_field@@Base+0x355>
  431416:	mov    r14,r9
  431419:	mov    eax,DWORD PTR [rsi+0x18]
  43141c:	lea    edx,[rax+0x1]
  43141f:	mov    DWORD PTR [rsi+0x18],edx
  431422:	test   eax,eax
  431424:	je     431437 <flatcc_json_printer_int8_enum_vector_field@@Base+0x77>
  431426:	mov    rax,QWORD PTR [r12+0x28]
  43142b:	lea    rdx,[rax+0x1]
  43142f:	mov    QWORD PTR [r12+0x28],rdx
  431434:	mov    BYTE PTR [rax],0x2c
  431437:	mov    ebx,DWORD PTR [r13+0x0]
  43143b:	mov    ebp,DWORD PTR [r13+rbx*1+0x0]
  431440:	movsxd rdx,r8d
  431443:	mov    rdi,r12
  431446:	mov    rsi,rcx
  431449:	call   42ae90 <flatcc_json_printer_string_field@@Base+0x80>
  43144e:	add    DWORD PTR [r12+0x38],0x1
  431454:	mov    rax,QWORD PTR [r12+0x28]
  431459:	lea    rcx,[rax+0x1]
  43145d:	mov    QWORD PTR [r12+0x28],rcx
  431462:	mov    BYTE PTR [rax],0x5b
  431465:	test   ebp,ebp
  431467:	je     431647 <flatcc_json_printer_int8_enum_vector_field@@Base+0x287>
  43146d:	add    r13,rbx
  431470:	cmp    BYTE PTR [r12+0x31],0x0
  431476:	mov    rax,QWORD PTR [r12+0x28]
  43147b:	je     431515 <flatcc_json_printer_int8_enum_vector_field@@Base+0x155>
  431481:	lea    rcx,[rax+0x1]
  431485:	mov    QWORD PTR [r12+0x28],rcx
  43148a:	mov    BYTE PTR [rax],0xa
  43148d:	movsxd rax,DWORD PTR [r12+0x38]
  431492:	movzx  r15d,BYTE PTR [r12+0x31]
  431498:	imul   r15,rax
  43149c:	mov    rbx,QWORD PTR [r12+0x20]
  4314a1:	mov    rdi,QWORD PTR [r12+0x28]
  4314a6:	lea    rax,[rdi+r15*1]
  4314aa:	cmp    rax,rbx
  4314ad:	jbe    431501 <flatcc_json_printer_int8_enum_vector_field@@Base+0x141>
  4314af:	cmp    rdi,rbx
  4314b2:	jb     4314c8 <flatcc_json_printer_int8_enum_vector_field@@Base+0x108>
  4314b4:	xor    esi,esi
  4314b6:	mov    rdi,r12
  4314b9:	call   QWORD PTR [r12+0x48]
  4314be:	mov    rbx,QWORD PTR [r12+0x20]
  4314c3:	mov    rdi,QWORD PTR [r12+0x28]
  4314c8:	sub    rbx,rdi
  4314cb:	cmp    rbx,r15
  4314ce:	jae    431501 <flatcc_json_printer_int8_enum_vector_field@@Base+0x141>
  4314d0:	mov    esi,0x20
  4314d5:	mov    rdx,rbx
  4314d8:	call   406080 <memset@plt>
  4314dd:	add    QWORD PTR [r12+0x28],rbx
  4314e2:	sub    r15,rbx
  4314e5:	xor    esi,esi
  4314e7:	mov    rdi,r12
  4314ea:	call   QWORD PTR [r12+0x48]
  4314ef:	mov    rbx,QWORD PTR [r12+0x20]
  4314f4:	mov    rdi,QWORD PTR [r12+0x28]
  4314f9:	sub    rbx,rdi
  4314fc:	cmp    r15,rbx
  4314ff:	ja     4314d0 <flatcc_json_printer_int8_enum_vector_field@@Base+0x110>
  431501:	mov    esi,0x20
  431506:	mov    rdx,r15
  431509:	call   406080 <memset@plt>
  43150e:	add    QWORD PTR [r12+0x28],r15
  431513:	jmp    431526 <flatcc_json_printer_int8_enum_vector_field@@Base+0x166>
  431515:	cmp    rax,QWORD PTR [r12+0x20]
  43151a:	jb     431526 <flatcc_json_printer_int8_enum_vector_field@@Base+0x166>
  43151c:	xor    esi,esi
  43151e:	mov    rdi,r12
  431521:	call   QWORD PTR [r12+0x48]
  431526:	movsx  esi,BYTE PTR [r13+0x4]
  43152b:	mov    rdi,r12
  43152e:	call   r14
  431531:	add    ebp,0xffffffff
  431534:	je     431647 <flatcc_json_printer_int8_enum_vector_field@@Base+0x287>
  43153a:	add    r13,0x5
  43153e:	xchg   ax,ax
  431540:	add    ebp,0xffffffff
  431543:	mov    rax,QWORD PTR [r12+0x28]
  431548:	lea    rcx,[rax+0x1]
  43154c:	mov    QWORD PTR [r12+0x28],rcx
  431551:	mov    BYTE PTR [rax],0x2c
  431554:	cmp    BYTE PTR [r12+0x31],0x0
  43155a:	mov    rax,QWORD PTR [r12+0x28]
  43155f:	je     431610 <flatcc_json_printer_int8_enum_vector_field@@Base+0x250>
  431565:	lea    rcx,[rax+0x1]
  431569:	mov    QWORD PTR [r12+0x28],rcx
  43156e:	mov    BYTE PTR [rax],0xa
  431571:	movsxd rax,DWORD PTR [r12+0x38]
  431576:	movzx  r15d,BYTE PTR [r12+0x31]
  43157c:	imul   r15,rax
  431580:	mov    rbx,QWORD PTR [r12+0x20]
  431585:	mov    rdi,QWORD PTR [r12+0x28]
  43158a:	lea    rax,[rdi+r15*1]
  43158e:	cmp    rax,rbx
  431591:	jbe    4315f1 <flatcc_json_printer_int8_enum_vector_field@@Base+0x231>
  431593:	cmp    rdi,rbx
  431596:	jb     4315ac <flatcc_json_printer_int8_enum_vector_field@@Base+0x1ec>
  431598:	xor    esi,esi
  43159a:	mov    rdi,r12
  43159d:	call   QWORD PTR [r12+0x48]
  4315a2:	mov    rbx,QWORD PTR [r12+0x20]
  4315a7:	mov    rdi,QWORD PTR [r12+0x28]
  4315ac:	sub    rbx,rdi
  4315af:	cmp    rbx,r15
  4315b2:	jae    4315f1 <flatcc_json_printer_int8_enum_vector_field@@Base+0x231>
  4315b4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4315be:	xchg   ax,ax
  4315c0:	mov    esi,0x20
  4315c5:	mov    rdx,rbx
  4315c8:	call   406080 <memset@plt>
  4315cd:	add    QWORD PTR [r12+0x28],rbx
  4315d2:	sub    r15,rbx
  4315d5:	xor    esi,esi
  4315d7:	mov    rdi,r12
  4315da:	call   QWORD PTR [r12+0x48]
  4315df:	mov    rbx,QWORD PTR [r12+0x20]
  4315e4:	mov    rdi,QWORD PTR [r12+0x28]
  4315e9:	sub    rbx,rdi
  4315ec:	cmp    r15,rbx
  4315ef:	ja     4315c0 <flatcc_json_printer_int8_enum_vector_field@@Base+0x200>
  4315f1:	mov    esi,0x20
  4315f6:	mov    rdx,r15
  4315f9:	call   406080 <memset@plt>
  4315fe:	add    QWORD PTR [r12+0x28],r15
  431603:	jmp    431630 <flatcc_json_printer_int8_enum_vector_field@@Base+0x270>
  431605:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43160f:	nop
  431610:	cmp    rax,QWORD PTR [r12+0x20]
  431615:	jb     431630 <flatcc_json_printer_int8_enum_vector_field@@Base+0x270>
  431617:	xor    esi,esi
  431619:	mov    rdi,r12
  43161c:	call   QWORD PTR [r12+0x48]
  431621:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43162b:	nop    DWORD PTR [rax+rax*1+0x0]
  431630:	movsx  esi,BYTE PTR [r13+0x0]
  431635:	mov    rdi,r12
  431638:	call   r14
  43163b:	add    r13,0x1
  43163f:	test   ebp,ebp
  431641:	jne    431540 <flatcc_json_printer_int8_enum_vector_field@@Base+0x180>
  431647:	cmp    BYTE PTR [r12+0x31],0x0
  43164d:	mov    r14,QWORD PTR [r12+0x28]
  431652:	je     431708 <flatcc_json_printer_int8_enum_vector_field@@Base+0x348>
  431658:	lea    rax,[r14+0x1]
  43165c:	mov    QWORD PTR [r12+0x28],rax
  431661:	mov    BYTE PTR [r14],0xa
  431665:	movsxd rax,DWORD PTR [r12+0x38]
  43166a:	add    rax,0xffffffffffffffff
  43166e:	mov    DWORD PTR [r12+0x38],eax
  431673:	movzx  r14d,BYTE PTR [r12+0x31]
  431679:	imul   r14,rax
  43167d:	mov    rbx,QWORD PTR [r12+0x20]
  431682:	mov    rdi,QWORD PTR [r12+0x28]
  431687:	lea    rax,[rdi+r14*1]
  43168b:	cmp    rax,rbx
  43168e:	jbe    4316f1 <flatcc_json_printer_int8_enum_vector_field@@Base+0x331>
  431690:	cmp    rdi,rbx
  431693:	jb     4316a9 <flatcc_json_printer_int8_enum_vector_field@@Base+0x2e9>
  431695:	xor    esi,esi
  431697:	mov    rdi,r12
  43169a:	call   QWORD PTR [r12+0x48]
  43169f:	mov    rbx,QWORD PTR [r12+0x20]
  4316a4:	mov    rdi,QWORD PTR [r12+0x28]
  4316a9:	sub    rbx,rdi
  4316ac:	cmp    rbx,r14
  4316af:	jae    4316f1 <flatcc_json_printer_int8_enum_vector_field@@Base+0x331>
  4316b1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4316bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4316c0:	mov    esi,0x20
  4316c5:	mov    rdx,rbx
  4316c8:	call   406080 <memset@plt>
  4316cd:	add    QWORD PTR [r12+0x28],rbx
  4316d2:	sub    r14,rbx
  4316d5:	xor    esi,esi
  4316d7:	mov    rdi,r12
  4316da:	call   QWORD PTR [r12+0x48]
  4316df:	mov    rbx,QWORD PTR [r12+0x20]
  4316e4:	mov    rdi,QWORD PTR [r12+0x28]
  4316e9:	sub    rbx,rdi
  4316ec:	cmp    r14,rbx
  4316ef:	ja     4316c0 <flatcc_json_printer_int8_enum_vector_field@@Base+0x300>
  4316f1:	mov    esi,0x20
  4316f6:	mov    rdx,r14
  4316f9:	call   406080 <memset@plt>
  4316fe:	add    r14,QWORD PTR [r12+0x28]
  431703:	mov    QWORD PTR [r12+0x28],r14
  431708:	lea    rax,[r14+0x1]
  43170c:	mov    QWORD PTR [r12+0x28],rax
  431711:	mov    BYTE PTR [r14],0x5d
  431715:	add    rsp,0x8
  431719:	pop    rbx
  43171a:	pop    r12
  43171c:	pop    r13
  43171e:	pop    r14
  431720:	pop    r15
  431722:	pop    rbp
  431723:	ret    
  431724:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43172e:	xchg   ax,ax

0000000000431730 <flatcc_json_printer_int16_enum_vector_field@@Base>:
  431730:	push   rbp
  431731:	push   r15
  431733:	push   r14
  431735:	push   r13
  431737:	push   r12
  431739:	push   rbx
  43173a:	push   rax
  43173b:	mov    r12,rdi
  43173e:	cmp    BYTE PTR [rdi+0x33],0x0
  431742:	je     43175a <flatcc_json_printer_int16_enum_vector_field@@Base+0x2a>
  431744:	mov    rdi,r12
  431747:	add    rsp,0x8
  43174b:	pop    rbx
  43174c:	pop    r12
  43174e:	pop    r13
  431750:	pop    r14
  431752:	pop    r15
  431754:	pop    rbp
  431755:	jmp    42ec70 <flatcc_json_printer_int16_vector_field@@Base>
  43175a:	lea    eax,[rdx+rdx*1]
  43175d:	add    eax,0x4
  431760:	cmp    eax,DWORD PTR [rsi+0x10]
  431763:	jge    431a85 <flatcc_json_printer_int16_enum_vector_field@@Base+0x355>
  431769:	mov    rdx,QWORD PTR [rsi+0x8]
  43176d:	mov    eax,eax
  43176f:	movzx  r13d,WORD PTR [rdx+rax*1]
  431774:	test   r13,r13
  431777:	je     431a85 <flatcc_json_printer_int16_enum_vector_field@@Base+0x355>
  43177d:	add    r13,QWORD PTR [rsi]
  431780:	je     431a85 <flatcc_json_printer_int16_enum_vector_field@@Base+0x355>
  431786:	mov    r14,r9
  431789:	mov    eax,DWORD PTR [rsi+0x18]
  43178c:	lea    edx,[rax+0x1]
  43178f:	mov    DWORD PTR [rsi+0x18],edx
  431792:	test   eax,eax
  431794:	je     4317a7 <flatcc_json_printer_int16_enum_vector_field@@Base+0x77>
  431796:	mov    rax,QWORD PTR [r12+0x28]
  43179b:	lea    rdx,[rax+0x1]
  43179f:	mov    QWORD PTR [r12+0x28],rdx
  4317a4:	mov    BYTE PTR [rax],0x2c
  4317a7:	mov    ebx,DWORD PTR [r13+0x0]
  4317ab:	mov    ebp,DWORD PTR [r13+rbx*1+0x0]
  4317b0:	movsxd rdx,r8d
  4317b3:	mov    rdi,r12
  4317b6:	mov    rsi,rcx
  4317b9:	call   42ae90 <flatcc_json_printer_string_field@@Base+0x80>
  4317be:	add    DWORD PTR [r12+0x38],0x1
  4317c4:	mov    rax,QWORD PTR [r12+0x28]
  4317c9:	lea    rcx,[rax+0x1]
  4317cd:	mov    QWORD PTR [r12+0x28],rcx
  4317d2:	mov    BYTE PTR [rax],0x5b
  4317d5:	test   ebp,ebp
  4317d7:	je     4319b7 <flatcc_json_printer_int16_enum_vector_field@@Base+0x287>
  4317dd:	add    r13,rbx
  4317e0:	cmp    BYTE PTR [r12+0x31],0x0
  4317e6:	mov    rax,QWORD PTR [r12+0x28]
  4317eb:	je     431885 <flatcc_json_printer_int16_enum_vector_field@@Base+0x155>
  4317f1:	lea    rcx,[rax+0x1]
  4317f5:	mov    QWORD PTR [r12+0x28],rcx
  4317fa:	mov    BYTE PTR [rax],0xa
  4317fd:	movsxd rax,DWORD PTR [r12+0x38]
  431802:	movzx  r15d,BYTE PTR [r12+0x31]
  431808:	imul   r15,rax
  43180c:	mov    rbx,QWORD PTR [r12+0x20]
  431811:	mov    rdi,QWORD PTR [r12+0x28]
  431816:	lea    rax,[rdi+r15*1]
  43181a:	cmp    rax,rbx
  43181d:	jbe    431871 <flatcc_json_printer_int16_enum_vector_field@@Base+0x141>
  43181f:	cmp    rdi,rbx
  431822:	jb     431838 <flatcc_json_printer_int16_enum_vector_field@@Base+0x108>
  431824:	xor    esi,esi
  431826:	mov    rdi,r12
  431829:	call   QWORD PTR [r12+0x48]
  43182e:	mov    rbx,QWORD PTR [r12+0x20]
  431833:	mov    rdi,QWORD PTR [r12+0x28]
  431838:	sub    rbx,rdi
  43183b:	cmp    rbx,r15
  43183e:	jae    431871 <flatcc_json_printer_int16_enum_vector_field@@Base+0x141>
  431840:	mov    esi,0x20
  431845:	mov    rdx,rbx
  431848:	call   406080 <memset@plt>
  43184d:	add    QWORD PTR [r12+0x28],rbx
  431852:	sub    r15,rbx
  431855:	xor    esi,esi
  431857:	mov    rdi,r12
  43185a:	call   QWORD PTR [r12+0x48]
  43185f:	mov    rbx,QWORD PTR [r12+0x20]
  431864:	mov    rdi,QWORD PTR [r12+0x28]
  431869:	sub    rbx,rdi
  43186c:	cmp    r15,rbx
  43186f:	ja     431840 <flatcc_json_printer_int16_enum_vector_field@@Base+0x110>
  431871:	mov    esi,0x20
  431876:	mov    rdx,r15
  431879:	call   406080 <memset@plt>
  43187e:	add    QWORD PTR [r12+0x28],r15
  431883:	jmp    431896 <flatcc_json_printer_int16_enum_vector_field@@Base+0x166>
  431885:	cmp    rax,QWORD PTR [r12+0x20]
  43188a:	jb     431896 <flatcc_json_printer_int16_enum_vector_field@@Base+0x166>
  43188c:	xor    esi,esi
  43188e:	mov    rdi,r12
  431891:	call   QWORD PTR [r12+0x48]
  431896:	movsx  esi,WORD PTR [r13+0x4]
  43189b:	mov    rdi,r12
  43189e:	call   r14
  4318a1:	add    ebp,0xffffffff
  4318a4:	je     4319b7 <flatcc_json_printer_int16_enum_vector_field@@Base+0x287>
  4318aa:	add    r13,0x6
  4318ae:	xchg   ax,ax
  4318b0:	add    ebp,0xffffffff
  4318b3:	mov    rax,QWORD PTR [r12+0x28]
  4318b8:	lea    rcx,[rax+0x1]
  4318bc:	mov    QWORD PTR [r12+0x28],rcx
  4318c1:	mov    BYTE PTR [rax],0x2c
  4318c4:	cmp    BYTE PTR [r12+0x31],0x0
  4318ca:	mov    rax,QWORD PTR [r12+0x28]
  4318cf:	je     431980 <flatcc_json_printer_int16_enum_vector_field@@Base+0x250>
  4318d5:	lea    rcx,[rax+0x1]
  4318d9:	mov    QWORD PTR [r12+0x28],rcx
  4318de:	mov    BYTE PTR [rax],0xa
  4318e1:	movsxd rax,DWORD PTR [r12+0x38]
  4318e6:	movzx  r15d,BYTE PTR [r12+0x31]
  4318ec:	imul   r15,rax
  4318f0:	mov    rbx,QWORD PTR [r12+0x20]
  4318f5:	mov    rdi,QWORD PTR [r12+0x28]
  4318fa:	lea    rax,[rdi+r15*1]
  4318fe:	cmp    rax,rbx
  431901:	jbe    431961 <flatcc_json_printer_int16_enum_vector_field@@Base+0x231>
  431903:	cmp    rdi,rbx
  431906:	jb     43191c <flatcc_json_printer_int16_enum_vector_field@@Base+0x1ec>
  431908:	xor    esi,esi
  43190a:	mov    rdi,r12
  43190d:	call   QWORD PTR [r12+0x48]
  431912:	mov    rbx,QWORD PTR [r12+0x20]
  431917:	mov    rdi,QWORD PTR [r12+0x28]
  43191c:	sub    rbx,rdi
  43191f:	cmp    rbx,r15
  431922:	jae    431961 <flatcc_json_printer_int16_enum_vector_field@@Base+0x231>
  431924:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43192e:	xchg   ax,ax
  431930:	mov    esi,0x20
  431935:	mov    rdx,rbx
  431938:	call   406080 <memset@plt>
  43193d:	add    QWORD PTR [r12+0x28],rbx
  431942:	sub    r15,rbx
  431945:	xor    esi,esi
  431947:	mov    rdi,r12
  43194a:	call   QWORD PTR [r12+0x48]
  43194f:	mov    rbx,QWORD PTR [r12+0x20]
  431954:	mov    rdi,QWORD PTR [r12+0x28]
  431959:	sub    rbx,rdi
  43195c:	cmp    r15,rbx
  43195f:	ja     431930 <flatcc_json_printer_int16_enum_vector_field@@Base+0x200>
  431961:	mov    esi,0x20
  431966:	mov    rdx,r15
  431969:	call   406080 <memset@plt>
  43196e:	add    QWORD PTR [r12+0x28],r15
  431973:	jmp    4319a0 <flatcc_json_printer_int16_enum_vector_field@@Base+0x270>
  431975:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43197f:	nop
  431980:	cmp    rax,QWORD PTR [r12+0x20]
  431985:	jb     4319a0 <flatcc_json_printer_int16_enum_vector_field@@Base+0x270>
  431987:	xor    esi,esi
  431989:	mov    rdi,r12
  43198c:	call   QWORD PTR [r12+0x48]
  431991:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43199b:	nop    DWORD PTR [rax+rax*1+0x0]
  4319a0:	movsx  esi,WORD PTR [r13+0x0]
  4319a5:	mov    rdi,r12
  4319a8:	call   r14
  4319ab:	add    r13,0x2
  4319af:	test   ebp,ebp
  4319b1:	jne    4318b0 <flatcc_json_printer_int16_enum_vector_field@@Base+0x180>
  4319b7:	cmp    BYTE PTR [r12+0x31],0x0
  4319bd:	mov    r14,QWORD PTR [r12+0x28]
  4319c2:	je     431a78 <flatcc_json_printer_int16_enum_vector_field@@Base+0x348>
  4319c8:	lea    rax,[r14+0x1]
  4319cc:	mov    QWORD PTR [r12+0x28],rax
  4319d1:	mov    BYTE PTR [r14],0xa
  4319d5:	movsxd rax,DWORD PTR [r12+0x38]
  4319da:	add    rax,0xffffffffffffffff
  4319de:	mov    DWORD PTR [r12+0x38],eax
  4319e3:	movzx  r14d,BYTE PTR [r12+0x31]
  4319e9:	imul   r14,rax
  4319ed:	mov    rbx,QWORD PTR [r12+0x20]
  4319f2:	mov    rdi,QWORD PTR [r12+0x28]
  4319f7:	lea    rax,[rdi+r14*1]
  4319fb:	cmp    rax,rbx
  4319fe:	jbe    431a61 <flatcc_json_printer_int16_enum_vector_field@@Base+0x331>
  431a00:	cmp    rdi,rbx
  431a03:	jb     431a19 <flatcc_json_printer_int16_enum_vector_field@@Base+0x2e9>
  431a05:	xor    esi,esi
  431a07:	mov    rdi,r12
  431a0a:	call   QWORD PTR [r12+0x48]
  431a0f:	mov    rbx,QWORD PTR [r12+0x20]
  431a14:	mov    rdi,QWORD PTR [r12+0x28]
  431a19:	sub    rbx,rdi
  431a1c:	cmp    rbx,r14
  431a1f:	jae    431a61 <flatcc_json_printer_int16_enum_vector_field@@Base+0x331>
  431a21:	nop    WORD PTR cs:[rax+rax*1+0x0]
  431a2b:	nop    DWORD PTR [rax+rax*1+0x0]
  431a30:	mov    esi,0x20
  431a35:	mov    rdx,rbx
  431a38:	call   406080 <memset@plt>
  431a3d:	add    QWORD PTR [r12+0x28],rbx
  431a42:	sub    r14,rbx
  431a45:	xor    esi,esi
  431a47:	mov    rdi,r12
  431a4a:	call   QWORD PTR [r12+0x48]
  431a4f:	mov    rbx,QWORD PTR [r12+0x20]
  431a54:	mov    rdi,QWORD PTR [r12+0x28]
  431a59:	sub    rbx,rdi
  431a5c:	cmp    r14,rbx
  431a5f:	ja     431a30 <flatcc_json_printer_int16_enum_vector_field@@Base+0x300>
  431a61:	mov    esi,0x20
  431a66:	mov    rdx,r14
  431a69:	call   406080 <memset@plt>
  431a6e:	add    r14,QWORD PTR [r12+0x28]
  431a73:	mov    QWORD PTR [r12+0x28],r14
  431a78:	lea    rax,[r14+0x1]
  431a7c:	mov    QWORD PTR [r12+0x28],rax
  431a81:	mov    BYTE PTR [r14],0x5d
  431a85:	add    rsp,0x8
  431a89:	pop    rbx
  431a8a:	pop    r12
  431a8c:	pop    r13
  431a8e:	pop    r14
  431a90:	pop    r15
  431a92:	pop    rbp
  431a93:	ret    
  431a94:	nop    WORD PTR cs:[rax+rax*1+0x0]
  431a9e:	xchg   ax,ax

0000000000431aa0 <flatcc_json_printer_int32_enum_vector_field@@Base>:
  431aa0:	push   rbp
  431aa1:	push   r15
  431aa3:	push   r14
  431aa5:	push   r13
  431aa7:	push   r12
  431aa9:	push   rbx
  431aaa:	push   rax
  431aab:	mov    r12,rdi
  431aae:	cmp    BYTE PTR [rdi+0x33],0x0
  431ab2:	je     431aca <flatcc_json_printer_int32_enum_vector_field@@Base+0x2a>
  431ab4:	mov    rdi,r12
  431ab7:	add    rsp,0x8
  431abb:	pop    rbx
  431abc:	pop    r12
  431abe:	pop    r13
  431ac0:	pop    r14
  431ac2:	pop    r15
  431ac4:	pop    rbp
  431ac5:	jmp    42f210 <flatcc_json_printer_int32_vector_field@@Base>
  431aca:	lea    eax,[rdx+rdx*1]
  431acd:	add    eax,0x4
  431ad0:	cmp    eax,DWORD PTR [rsi+0x10]
  431ad3:	jge    431de5 <flatcc_json_printer_int32_enum_vector_field@@Base+0x345>
  431ad9:	mov    rdx,QWORD PTR [rsi+0x8]
  431add:	mov    eax,eax
  431adf:	movzx  r13d,WORD PTR [rdx+rax*1]
  431ae4:	test   r13,r13
  431ae7:	je     431de5 <flatcc_json_printer_int32_enum_vector_field@@Base+0x345>
  431aed:	add    r13,QWORD PTR [rsi]
  431af0:	je     431de5 <flatcc_json_printer_int32_enum_vector_field@@Base+0x345>
  431af6:	mov    r14,r9
  431af9:	mov    eax,DWORD PTR [rsi+0x18]
  431afc:	lea    edx,[rax+0x1]
  431aff:	mov    DWORD PTR [rsi+0x18],edx
  431b02:	test   eax,eax
  431b04:	je     431b17 <flatcc_json_printer_int32_enum_vector_field@@Base+0x77>
  431b06:	mov    rax,QWORD PTR [r12+0x28]
  431b0b:	lea    rdx,[rax+0x1]
  431b0f:	mov    QWORD PTR [r12+0x28],rdx
  431b14:	mov    BYTE PTR [rax],0x2c
  431b17:	mov    ebx,DWORD PTR [r13+0x0]
  431b1b:	mov    ebp,DWORD PTR [r13+rbx*1+0x0]
  431b20:	movsxd rdx,r8d
  431b23:	mov    rdi,r12
  431b26:	mov    rsi,rcx
  431b29:	call   42ae90 <flatcc_json_printer_string_field@@Base+0x80>
  431b2e:	add    DWORD PTR [r12+0x38],0x1
  431b34:	mov    rax,QWORD PTR [r12+0x28]
  431b39:	lea    rcx,[rax+0x1]
  431b3d:	mov    QWORD PTR [r12+0x28],rcx
  431b42:	mov    BYTE PTR [rax],0x5b
  431b45:	test   ebp,ebp
  431b47:	je     431d26 <flatcc_json_printer_int32_enum_vector_field@@Base+0x286>
  431b4d:	add    r13,rbx
  431b50:	cmp    BYTE PTR [r12+0x31],0x0
  431b56:	mov    rax,QWORD PTR [r12+0x28]
  431b5b:	je     431bf5 <flatcc_json_printer_int32_enum_vector_field@@Base+0x155>
  431b61:	lea    rcx,[rax+0x1]
  431b65:	mov    QWORD PTR [r12+0x28],rcx
  431b6a:	mov    BYTE PTR [rax],0xa
  431b6d:	movsxd rax,DWORD PTR [r12+0x38]
  431b72:	movzx  r15d,BYTE PTR [r12+0x31]
  431b78:	imul   r15,rax
  431b7c:	mov    rbx,QWORD PTR [r12+0x20]
  431b81:	mov    rdi,QWORD PTR [r12+0x28]
  431b86:	lea    rax,[rdi+r15*1]
  431b8a:	cmp    rax,rbx
  431b8d:	jbe    431be1 <flatcc_json_printer_int32_enum_vector_field@@Base+0x141>
  431b8f:	cmp    rdi,rbx
  431b92:	jb     431ba8 <flatcc_json_printer_int32_enum_vector_field@@Base+0x108>
  431b94:	xor    esi,esi
  431b96:	mov    rdi,r12
  431b99:	call   QWORD PTR [r12+0x48]
  431b9e:	mov    rbx,QWORD PTR [r12+0x20]
  431ba3:	mov    rdi,QWORD PTR [r12+0x28]
  431ba8:	sub    rbx,rdi
  431bab:	cmp    rbx,r15
  431bae:	jae    431be1 <flatcc_json_printer_int32_enum_vector_field@@Base+0x141>
  431bb0:	mov    esi,0x20
  431bb5:	mov    rdx,rbx
  431bb8:	call   406080 <memset@plt>
  431bbd:	add    QWORD PTR [r12+0x28],rbx
  431bc2:	sub    r15,rbx
  431bc5:	xor    esi,esi
  431bc7:	mov    rdi,r12
  431bca:	call   QWORD PTR [r12+0x48]
  431bcf:	mov    rbx,QWORD PTR [r12+0x20]
  431bd4:	mov    rdi,QWORD PTR [r12+0x28]
  431bd9:	sub    rbx,rdi
  431bdc:	cmp    r15,rbx
  431bdf:	ja     431bb0 <flatcc_json_printer_int32_enum_vector_field@@Base+0x110>
  431be1:	mov    esi,0x20
  431be6:	mov    rdx,r15
  431be9:	call   406080 <memset@plt>
  431bee:	add    QWORD PTR [r12+0x28],r15
  431bf3:	jmp    431c06 <flatcc_json_printer_int32_enum_vector_field@@Base+0x166>
  431bf5:	cmp    rax,QWORD PTR [r12+0x20]
  431bfa:	jb     431c06 <flatcc_json_printer_int32_enum_vector_field@@Base+0x166>
  431bfc:	xor    esi,esi
  431bfe:	mov    rdi,r12
  431c01:	call   QWORD PTR [r12+0x48]
  431c06:	mov    esi,DWORD PTR [r13+0x4]
  431c0a:	mov    rdi,r12
  431c0d:	call   r14
  431c10:	add    ebp,0xffffffff
  431c13:	je     431d26 <flatcc_json_printer_int32_enum_vector_field@@Base+0x286>
  431c19:	add    r13,0x8
  431c1d:	nop    DWORD PTR [rax]
  431c20:	add    ebp,0xffffffff
  431c23:	mov    rax,QWORD PTR [r12+0x28]
  431c28:	lea    rcx,[rax+0x1]
  431c2c:	mov    QWORD PTR [r12+0x28],rcx
  431c31:	mov    BYTE PTR [rax],0x2c
  431c34:	cmp    BYTE PTR [r12+0x31],0x0
  431c3a:	mov    rax,QWORD PTR [r12+0x28]
  431c3f:	je     431cf0 <flatcc_json_printer_int32_enum_vector_field@@Base+0x250>
  431c45:	lea    rcx,[rax+0x1]
  431c49:	mov    QWORD PTR [r12+0x28],rcx
  431c4e:	mov    BYTE PTR [rax],0xa
  431c51:	movsxd rax,DWORD PTR [r12+0x38]
  431c56:	movzx  r15d,BYTE PTR [r12+0x31]
  431c5c:	imul   r15,rax
  431c60:	mov    rbx,QWORD PTR [r12+0x20]
  431c65:	mov    rdi,QWORD PTR [r12+0x28]
  431c6a:	lea    rax,[rdi+r15*1]
  431c6e:	cmp    rax,rbx
  431c71:	jbe    431cd1 <flatcc_json_printer_int32_enum_vector_field@@Base+0x231>
  431c73:	cmp    rdi,rbx
  431c76:	jb     431c8c <flatcc_json_printer_int32_enum_vector_field@@Base+0x1ec>
  431c78:	xor    esi,esi
  431c7a:	mov    rdi,r12
  431c7d:	call   QWORD PTR [r12+0x48]
  431c82:	mov    rbx,QWORD PTR [r12+0x20]
  431c87:	mov    rdi,QWORD PTR [r12+0x28]
  431c8c:	sub    rbx,rdi
  431c8f:	cmp    rbx,r15
  431c92:	jae    431cd1 <flatcc_json_printer_int32_enum_vector_field@@Base+0x231>
  431c94:	nop    WORD PTR cs:[rax+rax*1+0x0]
  431c9e:	xchg   ax,ax
  431ca0:	mov    esi,0x20
  431ca5:	mov    rdx,rbx
  431ca8:	call   406080 <memset@plt>
  431cad:	add    QWORD PTR [r12+0x28],rbx
  431cb2:	sub    r15,rbx
  431cb5:	xor    esi,esi
  431cb7:	mov    rdi,r12
  431cba:	call   QWORD PTR [r12+0x48]
  431cbf:	mov    rbx,QWORD PTR [r12+0x20]
  431cc4:	mov    rdi,QWORD PTR [r12+0x28]
  431cc9:	sub    rbx,rdi
  431ccc:	cmp    r15,rbx
  431ccf:	ja     431ca0 <flatcc_json_printer_int32_enum_vector_field@@Base+0x200>
  431cd1:	mov    esi,0x20
  431cd6:	mov    rdx,r15
  431cd9:	call   406080 <memset@plt>
  431cde:	add    QWORD PTR [r12+0x28],r15
  431ce3:	jmp    431d10 <flatcc_json_printer_int32_enum_vector_field@@Base+0x270>
  431ce5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  431cef:	nop
  431cf0:	cmp    rax,QWORD PTR [r12+0x20]
  431cf5:	jb     431d10 <flatcc_json_printer_int32_enum_vector_field@@Base+0x270>
  431cf7:	xor    esi,esi
  431cf9:	mov    rdi,r12
  431cfc:	call   QWORD PTR [r12+0x48]
  431d01:	nop    WORD PTR cs:[rax+rax*1+0x0]
  431d0b:	nop    DWORD PTR [rax+rax*1+0x0]
  431d10:	mov    esi,DWORD PTR [r13+0x0]
  431d14:	mov    rdi,r12
  431d17:	call   r14
  431d1a:	add    r13,0x4
  431d1e:	test   ebp,ebp
  431d20:	jne    431c20 <flatcc_json_printer_int32_enum_vector_field@@Base+0x180>
  431d26:	cmp    BYTE PTR [r12+0x31],0x0
  431d2c:	mov    r14,QWORD PTR [r12+0x28]
  431d31:	je     431dd8 <flatcc_json_printer_int32_enum_vector_field@@Base+0x338>
  431d37:	lea    rax,[r14+0x1]
  431d3b:	mov    QWORD PTR [r12+0x28],rax
  431d40:	mov    BYTE PTR [r14],0xa
  431d44:	movsxd rax,DWORD PTR [r12+0x38]
  431d49:	add    rax,0xffffffffffffffff
  431d4d:	mov    DWORD PTR [r12+0x38],eax
  431d52:	movzx  r14d,BYTE PTR [r12+0x31]
  431d58:	imul   r14,rax
  431d5c:	mov    rbx,QWORD PTR [r12+0x20]
  431d61:	mov    rdi,QWORD PTR [r12+0x28]
  431d66:	lea    rax,[rdi+r14*1]
  431d6a:	cmp    rax,rbx
  431d6d:	jbe    431dc1 <flatcc_json_printer_int32_enum_vector_field@@Base+0x321>
  431d6f:	cmp    rdi,rbx
  431d72:	jb     431d88 <flatcc_json_printer_int32_enum_vector_field@@Base+0x2e8>
  431d74:	xor    esi,esi
  431d76:	mov    rdi,r12
  431d79:	call   QWORD PTR [r12+0x48]
  431d7e:	mov    rbx,QWORD PTR [r12+0x20]
  431d83:	mov    rdi,QWORD PTR [r12+0x28]
  431d88:	sub    rbx,rdi
  431d8b:	cmp    rbx,r14
  431d8e:	jae    431dc1 <flatcc_json_printer_int32_enum_vector_field@@Base+0x321>
  431d90:	mov    esi,0x20
  431d95:	mov    rdx,rbx
  431d98:	call   406080 <memset@plt>
  431d9d:	add    QWORD PTR [r12+0x28],rbx
  431da2:	sub    r14,rbx
  431da5:	xor    esi,esi
  431da7:	mov    rdi,r12
  431daa:	call   QWORD PTR [r12+0x48]
  431daf:	mov    rbx,QWORD PTR [r12+0x20]
  431db4:	mov    rdi,QWORD PTR [r12+0x28]
  431db9:	sub    rbx,rdi
  431dbc:	cmp    r14,rbx
  431dbf:	ja     431d90 <flatcc_json_printer_int32_enum_vector_field@@Base+0x2f0>
  431dc1:	mov    esi,0x20
  431dc6:	mov    rdx,r14
  431dc9:	call   406080 <memset@plt>
  431dce:	add    r14,QWORD PTR [r12+0x28]
  431dd3:	mov    QWORD PTR [r12+0x28],r14
  431dd8:	lea    rax,[r14+0x1]
  431ddc:	mov    QWORD PTR [r12+0x28],rax
  431de1:	mov    BYTE PTR [r14],0x5d
  431de5:	add    rsp,0x8
  431de9:	pop    rbx
  431dea:	pop    r12
  431dec:	pop    r13
  431dee:	pop    r14
  431df0:	pop    r15
  431df2:	pop    rbp
  431df3:	ret    
  431df4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  431dfe:	xchg   ax,ax

0000000000431e00 <flatcc_json_printer_int64_enum_vector_field@@Base>:
  431e00:	push   rbp
  431e01:	push   r15
  431e03:	push   r14
  431e05:	push   r13
  431e07:	push   r12
  431e09:	push   rbx
  431e0a:	push   rax
  431e0b:	mov    r12,rdi
  431e0e:	cmp    BYTE PTR [rdi+0x33],0x0
  431e12:	je     431e2a <flatcc_json_printer_int64_enum_vector_field@@Base+0x2a>
  431e14:	mov    rdi,r12
  431e17:	add    rsp,0x8
  431e1b:	pop    rbx
  431e1c:	pop    r12
  431e1e:	pop    r13
  431e20:	pop    r14
  431e22:	pop    r15
  431e24:	pop    rbp
  431e25:	jmp    42f560 <flatcc_json_printer_int64_vector_field@@Base>
  431e2a:	lea    eax,[rdx+rdx*1]
  431e2d:	add    eax,0x4
  431e30:	cmp    eax,DWORD PTR [rsi+0x10]
  431e33:	jge    432145 <flatcc_json_printer_int64_enum_vector_field@@Base+0x345>
  431e39:	mov    rdx,QWORD PTR [rsi+0x8]
  431e3d:	mov    eax,eax
  431e3f:	movzx  r13d,WORD PTR [rdx+rax*1]
  431e44:	test   r13,r13
  431e47:	je     432145 <flatcc_json_printer_int64_enum_vector_field@@Base+0x345>
  431e4d:	add    r13,QWORD PTR [rsi]
  431e50:	je     432145 <flatcc_json_printer_int64_enum_vector_field@@Base+0x345>
  431e56:	mov    r14,r9
  431e59:	mov    eax,DWORD PTR [rsi+0x18]
  431e5c:	lea    edx,[rax+0x1]
  431e5f:	mov    DWORD PTR [rsi+0x18],edx
  431e62:	test   eax,eax
  431e64:	je     431e77 <flatcc_json_printer_int64_enum_vector_field@@Base+0x77>
  431e66:	mov    rax,QWORD PTR [r12+0x28]
  431e6b:	lea    rdx,[rax+0x1]
  431e6f:	mov    QWORD PTR [r12+0x28],rdx
  431e74:	mov    BYTE PTR [rax],0x2c
  431e77:	mov    ebx,DWORD PTR [r13+0x0]
  431e7b:	mov    ebp,DWORD PTR [r13+rbx*1+0x0]
  431e80:	movsxd rdx,r8d
  431e83:	mov    rdi,r12
  431e86:	mov    rsi,rcx
  431e89:	call   42ae90 <flatcc_json_printer_string_field@@Base+0x80>
  431e8e:	add    DWORD PTR [r12+0x38],0x1
  431e94:	mov    rax,QWORD PTR [r12+0x28]
  431e99:	lea    rcx,[rax+0x1]
  431e9d:	mov    QWORD PTR [r12+0x28],rcx
  431ea2:	mov    BYTE PTR [rax],0x5b
  431ea5:	test   ebp,ebp
  431ea7:	je     432086 <flatcc_json_printer_int64_enum_vector_field@@Base+0x286>
  431ead:	add    r13,rbx
  431eb0:	cmp    BYTE PTR [r12+0x31],0x0
  431eb6:	mov    rax,QWORD PTR [r12+0x28]
  431ebb:	je     431f55 <flatcc_json_printer_int64_enum_vector_field@@Base+0x155>
  431ec1:	lea    rcx,[rax+0x1]
  431ec5:	mov    QWORD PTR [r12+0x28],rcx
  431eca:	mov    BYTE PTR [rax],0xa
  431ecd:	movsxd rax,DWORD PTR [r12+0x38]
  431ed2:	movzx  r15d,BYTE PTR [r12+0x31]
  431ed8:	imul   r15,rax
  431edc:	mov    rbx,QWORD PTR [r12+0x20]
  431ee1:	mov    rdi,QWORD PTR [r12+0x28]
  431ee6:	lea    rax,[rdi+r15*1]
  431eea:	cmp    rax,rbx
  431eed:	jbe    431f41 <flatcc_json_printer_int64_enum_vector_field@@Base+0x141>
  431eef:	cmp    rdi,rbx
  431ef2:	jb     431f08 <flatcc_json_printer_int64_enum_vector_field@@Base+0x108>
  431ef4:	xor    esi,esi
  431ef6:	mov    rdi,r12
  431ef9:	call   QWORD PTR [r12+0x48]
  431efe:	mov    rbx,QWORD PTR [r12+0x20]
  431f03:	mov    rdi,QWORD PTR [r12+0x28]
  431f08:	sub    rbx,rdi
  431f0b:	cmp    rbx,r15
  431f0e:	jae    431f41 <flatcc_json_printer_int64_enum_vector_field@@Base+0x141>
  431f10:	mov    esi,0x20
  431f15:	mov    rdx,rbx
  431f18:	call   406080 <memset@plt>
  431f1d:	add    QWORD PTR [r12+0x28],rbx
  431f22:	sub    r15,rbx
  431f25:	xor    esi,esi
  431f27:	mov    rdi,r12
  431f2a:	call   QWORD PTR [r12+0x48]
  431f2f:	mov    rbx,QWORD PTR [r12+0x20]
  431f34:	mov    rdi,QWORD PTR [r12+0x28]
  431f39:	sub    rbx,rdi
  431f3c:	cmp    r15,rbx
  431f3f:	ja     431f10 <flatcc_json_printer_int64_enum_vector_field@@Base+0x110>
  431f41:	mov    esi,0x20
  431f46:	mov    rdx,r15
  431f49:	call   406080 <memset@plt>
  431f4e:	add    QWORD PTR [r12+0x28],r15
  431f53:	jmp    431f66 <flatcc_json_printer_int64_enum_vector_field@@Base+0x166>
  431f55:	cmp    rax,QWORD PTR [r12+0x20]
  431f5a:	jb     431f66 <flatcc_json_printer_int64_enum_vector_field@@Base+0x166>
  431f5c:	xor    esi,esi
  431f5e:	mov    rdi,r12
  431f61:	call   QWORD PTR [r12+0x48]
  431f66:	mov    rsi,QWORD PTR [r13+0x4]
  431f6a:	mov    rdi,r12
  431f6d:	call   r14
  431f70:	add    ebp,0xffffffff
  431f73:	je     432086 <flatcc_json_printer_int64_enum_vector_field@@Base+0x286>
  431f79:	add    r13,0xc
  431f7d:	nop    DWORD PTR [rax]
  431f80:	add    ebp,0xffffffff
  431f83:	mov    rax,QWORD PTR [r12+0x28]
  431f88:	lea    rcx,[rax+0x1]
  431f8c:	mov    QWORD PTR [r12+0x28],rcx
  431f91:	mov    BYTE PTR [rax],0x2c
  431f94:	cmp    BYTE PTR [r12+0x31],0x0
  431f9a:	mov    rax,QWORD PTR [r12+0x28]
  431f9f:	je     432050 <flatcc_json_printer_int64_enum_vector_field@@Base+0x250>
  431fa5:	lea    rcx,[rax+0x1]
  431fa9:	mov    QWORD PTR [r12+0x28],rcx
  431fae:	mov    BYTE PTR [rax],0xa
  431fb1:	movsxd rax,DWORD PTR [r12+0x38]
  431fb6:	movzx  r15d,BYTE PTR [r12+0x31]
  431fbc:	imul   r15,rax
  431fc0:	mov    rbx,QWORD PTR [r12+0x20]
  431fc5:	mov    rdi,QWORD PTR [r12+0x28]
  431fca:	lea    rax,[rdi+r15*1]
  431fce:	cmp    rax,rbx
  431fd1:	jbe    432031 <flatcc_json_printer_int64_enum_vector_field@@Base+0x231>
  431fd3:	cmp    rdi,rbx
  431fd6:	jb     431fec <flatcc_json_printer_int64_enum_vector_field@@Base+0x1ec>
  431fd8:	xor    esi,esi
  431fda:	mov    rdi,r12
  431fdd:	call   QWORD PTR [r12+0x48]
  431fe2:	mov    rbx,QWORD PTR [r12+0x20]
  431fe7:	mov    rdi,QWORD PTR [r12+0x28]
  431fec:	sub    rbx,rdi
  431fef:	cmp    rbx,r15
  431ff2:	jae    432031 <flatcc_json_printer_int64_enum_vector_field@@Base+0x231>
  431ff4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  431ffe:	xchg   ax,ax
  432000:	mov    esi,0x20
  432005:	mov    rdx,rbx
  432008:	call   406080 <memset@plt>
  43200d:	add    QWORD PTR [r12+0x28],rbx
  432012:	sub    r15,rbx
  432015:	xor    esi,esi
  432017:	mov    rdi,r12
  43201a:	call   QWORD PTR [r12+0x48]
  43201f:	mov    rbx,QWORD PTR [r12+0x20]
  432024:	mov    rdi,QWORD PTR [r12+0x28]
  432029:	sub    rbx,rdi
  43202c:	cmp    r15,rbx
  43202f:	ja     432000 <flatcc_json_printer_int64_enum_vector_field@@Base+0x200>
  432031:	mov    esi,0x20
  432036:	mov    rdx,r15
  432039:	call   406080 <memset@plt>
  43203e:	add    QWORD PTR [r12+0x28],r15
  432043:	jmp    432070 <flatcc_json_printer_int64_enum_vector_field@@Base+0x270>
  432045:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43204f:	nop
  432050:	cmp    rax,QWORD PTR [r12+0x20]
  432055:	jb     432070 <flatcc_json_printer_int64_enum_vector_field@@Base+0x270>
  432057:	xor    esi,esi
  432059:	mov    rdi,r12
  43205c:	call   QWORD PTR [r12+0x48]
  432061:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43206b:	nop    DWORD PTR [rax+rax*1+0x0]
  432070:	mov    rsi,QWORD PTR [r13+0x0]
  432074:	mov    rdi,r12
  432077:	call   r14
  43207a:	add    r13,0x8
  43207e:	test   ebp,ebp
  432080:	jne    431f80 <flatcc_json_printer_int64_enum_vector_field@@Base+0x180>
  432086:	cmp    BYTE PTR [r12+0x31],0x0
  43208c:	mov    r14,QWORD PTR [r12+0x28]
  432091:	je     432138 <flatcc_json_printer_int64_enum_vector_field@@Base+0x338>
  432097:	lea    rax,[r14+0x1]
  43209b:	mov    QWORD PTR [r12+0x28],rax
  4320a0:	mov    BYTE PTR [r14],0xa
  4320a4:	movsxd rax,DWORD PTR [r12+0x38]
  4320a9:	add    rax,0xffffffffffffffff
  4320ad:	mov    DWORD PTR [r12+0x38],eax
  4320b2:	movzx  r14d,BYTE PTR [r12+0x31]
  4320b8:	imul   r14,rax
  4320bc:	mov    rbx,QWORD PTR [r12+0x20]
  4320c1:	mov    rdi,QWORD PTR [r12+0x28]
  4320c6:	lea    rax,[rdi+r14*1]
  4320ca:	cmp    rax,rbx
  4320cd:	jbe    432121 <flatcc_json_printer_int64_enum_vector_field@@Base+0x321>
  4320cf:	cmp    rdi,rbx
  4320d2:	jb     4320e8 <flatcc_json_printer_int64_enum_vector_field@@Base+0x2e8>
  4320d4:	xor    esi,esi
  4320d6:	mov    rdi,r12
  4320d9:	call   QWORD PTR [r12+0x48]
  4320de:	mov    rbx,QWORD PTR [r12+0x20]
  4320e3:	mov    rdi,QWORD PTR [r12+0x28]
  4320e8:	sub    rbx,rdi
  4320eb:	cmp    rbx,r14
  4320ee:	jae    432121 <flatcc_json_printer_int64_enum_vector_field@@Base+0x321>
  4320f0:	mov    esi,0x20
  4320f5:	mov    rdx,rbx
  4320f8:	call   406080 <memset@plt>
  4320fd:	add    QWORD PTR [r12+0x28],rbx
  432102:	sub    r14,rbx
  432105:	xor    esi,esi
  432107:	mov    rdi,r12
  43210a:	call   QWORD PTR [r12+0x48]
  43210f:	mov    rbx,QWORD PTR [r12+0x20]
  432114:	mov    rdi,QWORD PTR [r12+0x28]
  432119:	sub    rbx,rdi
  43211c:	cmp    r14,rbx
  43211f:	ja     4320f0 <flatcc_json_printer_int64_enum_vector_field@@Base+0x2f0>
  432121:	mov    esi,0x20
  432126:	mov    rdx,r14
  432129:	call   406080 <memset@plt>
  43212e:	add    r14,QWORD PTR [r12+0x28]
  432133:	mov    QWORD PTR [r12+0x28],r14
  432138:	lea    rax,[r14+0x1]
  43213c:	mov    QWORD PTR [r12+0x28],rax
  432141:	mov    BYTE PTR [r14],0x5d
  432145:	add    rsp,0x8
  432149:	pop    rbx
  43214a:	pop    r12
  43214c:	pop    r13
  43214e:	pop    r14
  432150:	pop    r15
  432152:	pop    rbp
  432153:	ret    
  432154:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43215e:	xchg   ax,ax

0000000000432160 <flatcc_json_printer_bool_enum_vector_field@@Base>:
  432160:	push   rbp
  432161:	push   r15
  432163:	push   r14
  432165:	push   r13
  432167:	push   r12
  432169:	push   rbx
  43216a:	push   rax
  43216b:	mov    r12,rdi
  43216e:	cmp    BYTE PTR [rdi+0x33],0x0
  432172:	je     43218a <flatcc_json_printer_bool_enum_vector_field@@Base+0x2a>
  432174:	mov    rdi,r12
  432177:	add    rsp,0x8
  43217b:	pop    rbx
  43217c:	pop    r12
  43217e:	pop    r13
  432180:	pop    r14
  432182:	pop    r15
  432184:	pop    rbp
  432185:	jmp    42f8c0 <flatcc_json_printer_bool_vector_field@@Base>
  43218a:	lea    eax,[rdx+rdx*1]
  43218d:	add    eax,0x4
  432190:	cmp    eax,DWORD PTR [rsi+0x10]
  432193:	jge    4324b5 <flatcc_json_printer_bool_enum_vector_field@@Base+0x355>
  432199:	mov    rdx,QWORD PTR [rsi+0x8]
  43219d:	mov    eax,eax
  43219f:	movzx  r13d,WORD PTR [rdx+rax*1]
  4321a4:	test   r13,r13
  4321a7:	je     4324b5 <flatcc_json_printer_bool_enum_vector_field@@Base+0x355>
  4321ad:	add    r13,QWORD PTR [rsi]
  4321b0:	je     4324b5 <flatcc_json_printer_bool_enum_vector_field@@Base+0x355>
  4321b6:	mov    r14,r9
  4321b9:	mov    eax,DWORD PTR [rsi+0x18]
  4321bc:	lea    edx,[rax+0x1]
  4321bf:	mov    DWORD PTR [rsi+0x18],edx
  4321c2:	test   eax,eax
  4321c4:	je     4321d7 <flatcc_json_printer_bool_enum_vector_field@@Base+0x77>
  4321c6:	mov    rax,QWORD PTR [r12+0x28]
  4321cb:	lea    rdx,[rax+0x1]
  4321cf:	mov    QWORD PTR [r12+0x28],rdx
  4321d4:	mov    BYTE PTR [rax],0x2c
  4321d7:	mov    ebx,DWORD PTR [r13+0x0]
  4321db:	mov    ebp,DWORD PTR [r13+rbx*1+0x0]
  4321e0:	movsxd rdx,r8d
  4321e3:	mov    rdi,r12
  4321e6:	mov    rsi,rcx
  4321e9:	call   42ae90 <flatcc_json_printer_string_field@@Base+0x80>
  4321ee:	add    DWORD PTR [r12+0x38],0x1
  4321f4:	mov    rax,QWORD PTR [r12+0x28]
  4321f9:	lea    rcx,[rax+0x1]
  4321fd:	mov    QWORD PTR [r12+0x28],rcx
  432202:	mov    BYTE PTR [rax],0x5b
  432205:	test   ebp,ebp
  432207:	je     4323e7 <flatcc_json_printer_bool_enum_vector_field@@Base+0x287>
  43220d:	add    r13,rbx
  432210:	cmp    BYTE PTR [r12+0x31],0x0
  432216:	mov    rax,QWORD PTR [r12+0x28]
  43221b:	je     4322b5 <flatcc_json_printer_bool_enum_vector_field@@Base+0x155>
  432221:	lea    rcx,[rax+0x1]
  432225:	mov    QWORD PTR [r12+0x28],rcx
  43222a:	mov    BYTE PTR [rax],0xa
  43222d:	movsxd rax,DWORD PTR [r12+0x38]
  432232:	movzx  r15d,BYTE PTR [r12+0x31]
  432238:	imul   r15,rax
  43223c:	mov    rbx,QWORD PTR [r12+0x20]
  432241:	mov    rdi,QWORD PTR [r12+0x28]
  432246:	lea    rax,[rdi+r15*1]
  43224a:	cmp    rax,rbx
  43224d:	jbe    4322a1 <flatcc_json_printer_bool_enum_vector_field@@Base+0x141>
  43224f:	cmp    rdi,rbx
  432252:	jb     432268 <flatcc_json_printer_bool_enum_vector_field@@Base+0x108>
  432254:	xor    esi,esi
  432256:	mov    rdi,r12
  432259:	call   QWORD PTR [r12+0x48]
  43225e:	mov    rbx,QWORD PTR [r12+0x20]
  432263:	mov    rdi,QWORD PTR [r12+0x28]
  432268:	sub    rbx,rdi
  43226b:	cmp    rbx,r15
  43226e:	jae    4322a1 <flatcc_json_printer_bool_enum_vector_field@@Base+0x141>
  432270:	mov    esi,0x20
  432275:	mov    rdx,rbx
  432278:	call   406080 <memset@plt>
  43227d:	add    QWORD PTR [r12+0x28],rbx
  432282:	sub    r15,rbx
  432285:	xor    esi,esi
  432287:	mov    rdi,r12
  43228a:	call   QWORD PTR [r12+0x48]
  43228f:	mov    rbx,QWORD PTR [r12+0x20]
  432294:	mov    rdi,QWORD PTR [r12+0x28]
  432299:	sub    rbx,rdi
  43229c:	cmp    r15,rbx
  43229f:	ja     432270 <flatcc_json_printer_bool_enum_vector_field@@Base+0x110>
  4322a1:	mov    esi,0x20
  4322a6:	mov    rdx,r15
  4322a9:	call   406080 <memset@plt>
  4322ae:	add    QWORD PTR [r12+0x28],r15
  4322b3:	jmp    4322c6 <flatcc_json_printer_bool_enum_vector_field@@Base+0x166>
  4322b5:	cmp    rax,QWORD PTR [r12+0x20]
  4322ba:	jb     4322c6 <flatcc_json_printer_bool_enum_vector_field@@Base+0x166>
  4322bc:	xor    esi,esi
  4322be:	mov    rdi,r12
  4322c1:	call   QWORD PTR [r12+0x48]
  4322c6:	movzx  esi,BYTE PTR [r13+0x4]
  4322cb:	mov    rdi,r12
  4322ce:	call   r14
  4322d1:	add    ebp,0xffffffff
  4322d4:	je     4323e7 <flatcc_json_printer_bool_enum_vector_field@@Base+0x287>
  4322da:	add    r13,0x5
  4322de:	xchg   ax,ax
  4322e0:	add    ebp,0xffffffff
  4322e3:	mov    rax,QWORD PTR [r12+0x28]
  4322e8:	lea    rcx,[rax+0x1]
  4322ec:	mov    QWORD PTR [r12+0x28],rcx
  4322f1:	mov    BYTE PTR [rax],0x2c
  4322f4:	cmp    BYTE PTR [r12+0x31],0x0
  4322fa:	mov    rax,QWORD PTR [r12+0x28]
  4322ff:	je     4323b0 <flatcc_json_printer_bool_enum_vector_field@@Base+0x250>
  432305:	lea    rcx,[rax+0x1]
  432309:	mov    QWORD PTR [r12+0x28],rcx
  43230e:	mov    BYTE PTR [rax],0xa
  432311:	movsxd rax,DWORD PTR [r12+0x38]
  432316:	movzx  r15d,BYTE PTR [r12+0x31]
  43231c:	imul   r15,rax
  432320:	mov    rbx,QWORD PTR [r12+0x20]
  432325:	mov    rdi,QWORD PTR [r12+0x28]
  43232a:	lea    rax,[rdi+r15*1]
  43232e:	cmp    rax,rbx
  432331:	jbe    432391 <flatcc_json_printer_bool_enum_vector_field@@Base+0x231>
  432333:	cmp    rdi,rbx
  432336:	jb     43234c <flatcc_json_printer_bool_enum_vector_field@@Base+0x1ec>
  432338:	xor    esi,esi
  43233a:	mov    rdi,r12
  43233d:	call   QWORD PTR [r12+0x48]
  432342:	mov    rbx,QWORD PTR [r12+0x20]
  432347:	mov    rdi,QWORD PTR [r12+0x28]
  43234c:	sub    rbx,rdi
  43234f:	cmp    rbx,r15
  432352:	jae    432391 <flatcc_json_printer_bool_enum_vector_field@@Base+0x231>
  432354:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43235e:	xchg   ax,ax
  432360:	mov    esi,0x20
  432365:	mov    rdx,rbx
  432368:	call   406080 <memset@plt>
  43236d:	add    QWORD PTR [r12+0x28],rbx
  432372:	sub    r15,rbx
  432375:	xor    esi,esi
  432377:	mov    rdi,r12
  43237a:	call   QWORD PTR [r12+0x48]
  43237f:	mov    rbx,QWORD PTR [r12+0x20]
  432384:	mov    rdi,QWORD PTR [r12+0x28]
  432389:	sub    rbx,rdi
  43238c:	cmp    r15,rbx
  43238f:	ja     432360 <flatcc_json_printer_bool_enum_vector_field@@Base+0x200>
  432391:	mov    esi,0x20
  432396:	mov    rdx,r15
  432399:	call   406080 <memset@plt>
  43239e:	add    QWORD PTR [r12+0x28],r15
  4323a3:	jmp    4323d0 <flatcc_json_printer_bool_enum_vector_field@@Base+0x270>
  4323a5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4323af:	nop
  4323b0:	cmp    rax,QWORD PTR [r12+0x20]
  4323b5:	jb     4323d0 <flatcc_json_printer_bool_enum_vector_field@@Base+0x270>
  4323b7:	xor    esi,esi
  4323b9:	mov    rdi,r12
  4323bc:	call   QWORD PTR [r12+0x48]
  4323c1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4323cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4323d0:	movzx  esi,BYTE PTR [r13+0x0]
  4323d5:	mov    rdi,r12
  4323d8:	call   r14
  4323db:	add    r13,0x1
  4323df:	test   ebp,ebp
  4323e1:	jne    4322e0 <flatcc_json_printer_bool_enum_vector_field@@Base+0x180>
  4323e7:	cmp    BYTE PTR [r12+0x31],0x0
  4323ed:	mov    r14,QWORD PTR [r12+0x28]
  4323f2:	je     4324a8 <flatcc_json_printer_bool_enum_vector_field@@Base+0x348>
  4323f8:	lea    rax,[r14+0x1]
  4323fc:	mov    QWORD PTR [r12+0x28],rax
  432401:	mov    BYTE PTR [r14],0xa
  432405:	movsxd rax,DWORD PTR [r12+0x38]
  43240a:	add    rax,0xffffffffffffffff
  43240e:	mov    DWORD PTR [r12+0x38],eax
  432413:	movzx  r14d,BYTE PTR [r12+0x31]
  432419:	imul   r14,rax
  43241d:	mov    rbx,QWORD PTR [r12+0x20]
  432422:	mov    rdi,QWORD PTR [r12+0x28]
  432427:	lea    rax,[rdi+r14*1]
  43242b:	cmp    rax,rbx
  43242e:	jbe    432491 <flatcc_json_printer_bool_enum_vector_field@@Base+0x331>
  432430:	cmp    rdi,rbx
  432433:	jb     432449 <flatcc_json_printer_bool_enum_vector_field@@Base+0x2e9>
  432435:	xor    esi,esi
  432437:	mov    rdi,r12
  43243a:	call   QWORD PTR [r12+0x48]
  43243f:	mov    rbx,QWORD PTR [r12+0x20]
  432444:	mov    rdi,QWORD PTR [r12+0x28]
  432449:	sub    rbx,rdi
  43244c:	cmp    rbx,r14
  43244f:	jae    432491 <flatcc_json_printer_bool_enum_vector_field@@Base+0x331>
  432451:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43245b:	nop    DWORD PTR [rax+rax*1+0x0]
  432460:	mov    esi,0x20
  432465:	mov    rdx,rbx
  432468:	call   406080 <memset@plt>
  43246d:	add    QWORD PTR [r12+0x28],rbx
  432472:	sub    r14,rbx
  432475:	xor    esi,esi
  432477:	mov    rdi,r12
  43247a:	call   QWORD PTR [r12+0x48]
  43247f:	mov    rbx,QWORD PTR [r12+0x20]
  432484:	mov    rdi,QWORD PTR [r12+0x28]
  432489:	sub    rbx,rdi
  43248c:	cmp    r14,rbx
  43248f:	ja     432460 <flatcc_json_printer_bool_enum_vector_field@@Base+0x300>
  432491:	mov    esi,0x20
  432496:	mov    rdx,r14
  432499:	call   406080 <memset@plt>
  43249e:	add    r14,QWORD PTR [r12+0x28]
  4324a3:	mov    QWORD PTR [r12+0x28],r14
  4324a8:	lea    rax,[r14+0x1]
  4324ac:	mov    QWORD PTR [r12+0x28],rax
  4324b1:	mov    BYTE PTR [r14],0x5d
  4324b5:	add    rsp,0x8
  4324b9:	pop    rbx
  4324ba:	pop    r12
  4324bc:	pop    r13
  4324be:	pop    r14
  4324c0:	pop    r15
  4324c2:	pop    rbp
  4324c3:	ret    
  4324c4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4324ce:	xchg   ax,ax

00000000004324d0 <flatcc_json_printer_struct_vector_field@@Base>:
  4324d0:	push   rbp
  4324d1:	push   r15
  4324d3:	push   r14
  4324d5:	push   r13
  4324d7:	push   r12
  4324d9:	push   rbx
  4324da:	push   rax
  4324db:	lea    eax,[rdx+rdx*1]
  4324de:	add    eax,0x4
  4324e1:	cmp    eax,DWORD PTR [rsi+0x10]
  4324e4:	jge    43297e <flatcc_json_printer_struct_vector_field@@Base+0x4ae>
  4324ea:	mov    rdx,QWORD PTR [rsi+0x8]
  4324ee:	mov    eax,eax
  4324f0:	movzx  ebx,WORD PTR [rdx+rax*1]
  4324f4:	test   rbx,rbx
  4324f7:	je     43297e <flatcc_json_printer_struct_vector_field@@Base+0x4ae>
  4324fd:	add    rbx,QWORD PTR [rsi]
  432500:	je     43297e <flatcc_json_printer_struct_vector_field@@Base+0x4ae>
  432506:	mov    r14,r9
  432509:	mov    r13,rdi
  43250c:	mov    eax,DWORD PTR [rsi+0x18]
  43250f:	lea    edx,[rax+0x1]
  432512:	mov    DWORD PTR [rsi+0x18],edx
  432515:	test   eax,eax
  432517:	je     432528 <flatcc_json_printer_struct_vector_field@@Base+0x58>
  432519:	mov    rax,QWORD PTR [r13+0x28]
  43251d:	lea    rdx,[rax+0x1]
  432521:	mov    QWORD PTR [r13+0x28],rdx
  432525:	mov    BYTE PTR [rax],0x2c
  432528:	mov    r15d,DWORD PTR [rbx]
  43252b:	mov    ebp,DWORD PTR [rbx+r15*1]
  43252f:	movsxd rdx,r8d
  432532:	mov    rdi,r13
  432535:	mov    rsi,rcx
  432538:	call   42ae90 <flatcc_json_printer_string_field@@Base+0x80>
  43253d:	add    DWORD PTR [r13+0x38],0x1
  432542:	mov    rax,QWORD PTR [r13+0x28]
  432546:	lea    rcx,[rax+0x1]
  43254a:	mov    QWORD PTR [r13+0x28],rcx
  43254e:	mov    BYTE PTR [rax],0x5b
  432551:	test   ebp,ebp
  432553:	je     4328c8 <flatcc_json_printer_struct_vector_field@@Base+0x3f8>
  432559:	add    r15,rbx
  43255c:	add    r15,0x4
  432560:	cmp    BYTE PTR [r13+0x31],0x0
  432565:	mov    r12,QWORD PTR [r13+0x28]
  432569:	je     432604 <flatcc_json_printer_struct_vector_field@@Base+0x134>
  43256f:	lea    rax,[r12+0x1]
  432574:	mov    QWORD PTR [r13+0x28],rax
  432578:	mov    BYTE PTR [r12],0xa
  43257d:	movsxd rax,DWORD PTR [r13+0x38]
  432581:	movzx  r12d,BYTE PTR [r13+0x31]
  432586:	imul   r12,rax
  43258a:	mov    rbx,QWORD PTR [r13+0x20]
  43258e:	mov    rdi,QWORD PTR [r13+0x28]
  432592:	lea    rax,[rdi+r12*1]
  432596:	cmp    rax,rbx
  432599:	jbe    4325ed <flatcc_json_printer_struct_vector_field@@Base+0x11d>
  43259b:	cmp    rdi,rbx
  43259e:	jb     4325b1 <flatcc_json_printer_struct_vector_field@@Base+0xe1>
  4325a0:	xor    esi,esi
  4325a2:	mov    rdi,r13
  4325a5:	call   QWORD PTR [r13+0x48]
  4325a9:	mov    rbx,QWORD PTR [r13+0x20]
  4325ad:	mov    rdi,QWORD PTR [r13+0x28]
  4325b1:	sub    rbx,rdi
  4325b4:	cmp    rbx,r12
  4325b7:	jae    4325ed <flatcc_json_printer_struct_vector_field@@Base+0x11d>
  4325b9:	nop    DWORD PTR [rax+0x0]
  4325c0:	mov    esi,0x20
  4325c5:	mov    rdx,rbx
  4325c8:	call   406080 <memset@plt>
  4325cd:	add    QWORD PTR [r13+0x28],rbx
  4325d1:	sub    r12,rbx
  4325d4:	xor    esi,esi
  4325d6:	mov    rdi,r13
  4325d9:	call   QWORD PTR [r13+0x48]
  4325dd:	mov    rbx,QWORD PTR [r13+0x20]
  4325e1:	mov    rdi,QWORD PTR [r13+0x28]
  4325e5:	sub    rbx,rdi
  4325e8:	cmp    r12,rbx
  4325eb:	ja     4325c0 <flatcc_json_printer_struct_vector_field@@Base+0xf0>
  4325ed:	mov    esi,0x20
  4325f2:	mov    rdx,r12
  4325f5:	call   406080 <memset@plt>
  4325fa:	add    r12,QWORD PTR [r13+0x28]
  4325fe:	mov    QWORD PTR [r13+0x28],r12
  432602:	jmp    432617 <flatcc_json_printer_struct_vector_field@@Base+0x147>
  432604:	cmp    r12,QWORD PTR [r13+0x20]
  432608:	jb     432617 <flatcc_json_printer_struct_vector_field@@Base+0x147>
  43260a:	xor    esi,esi
  43260c:	mov    rdi,r13
  43260f:	call   QWORD PTR [r13+0x48]
  432613:	mov    r12,QWORD PTR [r13+0x28]
  432617:	add    DWORD PTR [r13+0x38],0x1
  43261c:	lea    rax,[r12+0x1]
  432621:	mov    QWORD PTR [r13+0x28],rax
  432625:	mov    BYTE PTR [r12],0x7b
  43262a:	mov    rdi,r13
  43262d:	mov    rsi,r15
  432630:	call   QWORD PTR [rsp+0x40]
  432634:	cmp    BYTE PTR [r13+0x31],0x0
  432639:	mov    r12,QWORD PTR [r13+0x28]
  43263d:	je     4326e2 <flatcc_json_printer_struct_vector_field@@Base+0x212>
  432643:	lea    rax,[r12+0x1]
  432648:	mov    QWORD PTR [r13+0x28],rax
  43264c:	mov    BYTE PTR [r12],0xa
  432651:	movsxd rax,DWORD PTR [r13+0x38]
  432655:	add    rax,0xffffffffffffffff
  432659:	mov    DWORD PTR [r13+0x38],eax
  43265d:	movzx  r12d,BYTE PTR [r13+0x31]
  432662:	imul   r12,rax
  432666:	mov    rbx,QWORD PTR [r13+0x20]
  43266a:	mov    rdi,QWORD PTR [r13+0x28]
  43266e:	lea    rax,[rdi+r12*1]
  432672:	cmp    rax,rbx
  432675:	jbe    4326cd <flatcc_json_printer_struct_vector_field@@Base+0x1fd>
  432677:	cmp    rdi,rbx
  43267a:	jb     43268d <flatcc_json_printer_struct_vector_field@@Base+0x1bd>
  43267c:	xor    esi,esi
  43267e:	mov    rdi,r13
  432681:	call   QWORD PTR [r13+0x48]
  432685:	mov    rbx,QWORD PTR [r13+0x20]
  432689:	mov    rdi,QWORD PTR [r13+0x28]
  43268d:	sub    rbx,rdi
  432690:	cmp    rbx,r12
  432693:	jae    4326cd <flatcc_json_printer_struct_vector_field@@Base+0x1fd>
  432695:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43269f:	nop
  4326a0:	mov    esi,0x20
  4326a5:	mov    rdx,rbx
  4326a8:	call   406080 <memset@plt>
  4326ad:	add    QWORD PTR [r13+0x28],rbx
  4326b1:	sub    r12,rbx
  4326b4:	xor    esi,esi
  4326b6:	mov    rdi,r13
  4326b9:	call   QWORD PTR [r13+0x48]
  4326bd:	mov    rbx,QWORD PTR [r13+0x20]
  4326c1:	mov    rdi,QWORD PTR [r13+0x28]
  4326c5:	sub    rbx,rdi
  4326c8:	cmp    r12,rbx
  4326cb:	ja     4326a0 <flatcc_json_printer_struct_vector_field@@Base+0x1d0>
  4326cd:	mov    esi,0x20
  4326d2:	mov    rdx,r12
  4326d5:	call   406080 <memset@plt>
  4326da:	add    r12,QWORD PTR [r13+0x28]
  4326de:	mov    QWORD PTR [r13+0x28],r12
  4326e2:	lea    rax,[r12+0x1]
  4326e7:	mov    QWORD PTR [r13+0x28],rax
  4326eb:	mov    BYTE PTR [r12],0x7d
  4326f0:	add    ebp,0xffffffff
  4326f3:	je     4328c8 <flatcc_json_printer_struct_vector_field@@Base+0x3f8>
  4326f9:	nop    DWORD PTR [rax+0x0]
  432700:	add    r15,r14
  432703:	mov    rax,QWORD PTR [r13+0x28]
  432707:	lea    rcx,[rax+0x1]
  43270b:	mov    QWORD PTR [r13+0x28],rcx
  43270f:	mov    BYTE PTR [rax],0x2c
  432712:	cmp    BYTE PTR [r13+0x31],0x0
  432717:	mov    r12,QWORD PTR [r13+0x28]
  43271b:	je     4327c0 <flatcc_json_printer_struct_vector_field@@Base+0x2f0>
  432721:	lea    rax,[r12+0x1]
  432726:	mov    QWORD PTR [r13+0x28],rax
  43272a:	mov    BYTE PTR [r12],0xa
  43272f:	movsxd rax,DWORD PTR [r13+0x38]
  432733:	movzx  r12d,BYTE PTR [r13+0x31]
  432738:	imul   r12,rax
  43273c:	mov    rbx,QWORD PTR [r13+0x20]
  432740:	mov    rdi,QWORD PTR [r13+0x28]
  432744:	lea    rax,[rdi+r12*1]
  432748:	cmp    rax,rbx
  43274b:	jbe    43279d <flatcc_json_printer_struct_vector_field@@Base+0x2cd>
  43274d:	cmp    rdi,rbx
  432750:	jb     432763 <flatcc_json_printer_struct_vector_field@@Base+0x293>
  432752:	xor    esi,esi
  432754:	mov    rdi,r13
  432757:	call   QWORD PTR [r13+0x48]
  43275b:	mov    rbx,QWORD PTR [r13+0x20]
  43275f:	mov    rdi,QWORD PTR [r13+0x28]
  432763:	sub    rbx,rdi
  432766:	cmp    rbx,r12
  432769:	jae    43279d <flatcc_json_printer_struct_vector_field@@Base+0x2cd>
  43276b:	nop    DWORD PTR [rax+rax*1+0x0]
  432770:	mov    esi,0x20
  432775:	mov    rdx,rbx
  432778:	call   406080 <memset@plt>
  43277d:	add    QWORD PTR [r13+0x28],rbx
  432781:	sub    r12,rbx
  432784:	xor    esi,esi
  432786:	mov    rdi,r13
  432789:	call   QWORD PTR [r13+0x48]
  43278d:	mov    rbx,QWORD PTR [r13+0x20]
  432791:	mov    rdi,QWORD PTR [r13+0x28]
  432795:	sub    rbx,rdi
  432798:	cmp    r12,rbx
  43279b:	ja     432770 <flatcc_json_printer_struct_vector_field@@Base+0x2a0>
  43279d:	mov    esi,0x20
  4327a2:	mov    rdx,r12
  4327a5:	call   406080 <memset@plt>
  4327aa:	add    r12,QWORD PTR [r13+0x28]
  4327ae:	mov    QWORD PTR [r13+0x28],r12
  4327b2:	jmp    4327e0 <flatcc_json_printer_struct_vector_field@@Base+0x310>
  4327b4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4327be:	xchg   ax,ax
  4327c0:	cmp    r12,QWORD PTR [r13+0x20]
  4327c4:	jb     4327e0 <flatcc_json_printer_struct_vector_field@@Base+0x310>
  4327c6:	xor    esi,esi
  4327c8:	mov    rdi,r13
  4327cb:	call   QWORD PTR [r13+0x48]
  4327cf:	mov    r12,QWORD PTR [r13+0x28]
  4327d3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4327dd:	nop    DWORD PTR [rax]
  4327e0:	add    ebp,0xffffffff
  4327e3:	add    DWORD PTR [r13+0x38],0x1
  4327e8:	lea    rax,[r12+0x1]
  4327ed:	mov    QWORD PTR [r13+0x28],rax
  4327f1:	mov    BYTE PTR [r12],0x7b
  4327f6:	mov    rdi,r13
  4327f9:	mov    rsi,r15
  4327fc:	call   QWORD PTR [rsp+0x40]
  432800:	cmp    BYTE PTR [r13+0x31],0x0
  432805:	mov    r12,QWORD PTR [r13+0x28]
  432809:	je     4328b2 <flatcc_json_printer_struct_vector_field@@Base+0x3e2>
  43280f:	lea    rax,[r12+0x1]
  432814:	mov    QWORD PTR [r13+0x28],rax
  432818:	mov    BYTE PTR [r12],0xa
  43281d:	movsxd rax,DWORD PTR [r13+0x38]
  432821:	add    rax,0xffffffffffffffff
  432825:	mov    DWORD PTR [r13+0x38],eax
  432829:	movzx  r12d,BYTE PTR [r13+0x31]
  43282e:	imul   r12,rax
  432832:	mov    rbx,QWORD PTR [r13+0x20]
  432836:	mov    rdi,QWORD PTR [r13+0x28]
  43283a:	lea    rax,[rdi+r12*1]
  43283e:	cmp    rax,rbx
  432841:	jbe    43289d <flatcc_json_printer_struct_vector_field@@Base+0x3cd>
  432843:	cmp    rdi,rbx
  432846:	jb     432859 <flatcc_json_printer_struct_vector_field@@Base+0x389>
  432848:	xor    esi,esi
  43284a:	mov    rdi,r13
  43284d:	call   QWORD PTR [r13+0x48]
  432851:	mov    rbx,QWORD PTR [r13+0x20]
  432855:	mov    rdi,QWORD PTR [r13+0x28]
  432859:	sub    rbx,rdi
  43285c:	cmp    rbx,r12
  43285f:	jae    43289d <flatcc_json_printer_struct_vector_field@@Base+0x3cd>
  432861:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43286b:	nop    DWORD PTR [rax+rax*1+0x0]
  432870:	mov    esi,0x20
  432875:	mov    rdx,rbx
  432878:	call   406080 <memset@plt>
  43287d:	add    QWORD PTR [r13+0x28],rbx
  432881:	sub    r12,rbx
  432884:	xor    esi,esi
  432886:	mov    rdi,r13
  432889:	call   QWORD PTR [r13+0x48]
  43288d:	mov    rbx,QWORD PTR [r13+0x20]
  432891:	mov    rdi,QWORD PTR [r13+0x28]
  432895:	sub    rbx,rdi
  432898:	cmp    r12,rbx
  43289b:	ja     432870 <flatcc_json_printer_struct_vector_field@@Base+0x3a0>
  43289d:	mov    esi,0x20
  4328a2:	mov    rdx,r12
  4328a5:	call   406080 <memset@plt>
  4328aa:	add    r12,QWORD PTR [r13+0x28]
  4328ae:	mov    QWORD PTR [r13+0x28],r12
  4328b2:	lea    rax,[r12+0x1]
  4328b7:	mov    QWORD PTR [r13+0x28],rax
  4328bb:	mov    BYTE PTR [r12],0x7d
  4328c0:	test   ebp,ebp
  4328c2:	jne    432700 <flatcc_json_printer_struct_vector_field@@Base+0x230>
  4328c8:	cmp    BYTE PTR [r13+0x31],0x0
  4328cd:	mov    r14,QWORD PTR [r13+0x28]
  4328d1:	je     432972 <flatcc_json_printer_struct_vector_field@@Base+0x4a2>
  4328d7:	lea    rax,[r14+0x1]
  4328db:	mov    QWORD PTR [r13+0x28],rax
  4328df:	mov    BYTE PTR [r14],0xa
  4328e3:	movsxd rax,DWORD PTR [r13+0x38]
  4328e7:	add    rax,0xffffffffffffffff
  4328eb:	mov    DWORD PTR [r13+0x38],eax
  4328ef:	movzx  r14d,BYTE PTR [r13+0x31]
  4328f4:	imul   r14,rax
  4328f8:	mov    rbx,QWORD PTR [r13+0x20]
  4328fc:	mov    rdi,QWORD PTR [r13+0x28]
  432900:	lea    rax,[rdi+r14*1]
  432904:	cmp    rax,rbx
  432907:	jbe    43295d <flatcc_json_printer_struct_vector_field@@Base+0x48d>
  432909:	cmp    rdi,rbx
  43290c:	jb     43291f <flatcc_json_printer_struct_vector_field@@Base+0x44f>
  43290e:	xor    esi,esi
  432910:	mov    rdi,r13
  432913:	call   QWORD PTR [r13+0x48]
  432917:	mov    rbx,QWORD PTR [r13+0x20]
  43291b:	mov    rdi,QWORD PTR [r13+0x28]
  43291f:	sub    rbx,rdi
  432922:	cmp    rbx,r14
  432925:	jae    43295d <flatcc_json_printer_struct_vector_field@@Base+0x48d>
  432927:	nop    WORD PTR [rax+rax*1+0x0]
  432930:	mov    esi,0x20
  432935:	mov    rdx,rbx
  432938:	call   406080 <memset@plt>
  43293d:	add    QWORD PTR [r13+0x28],rbx
  432941:	sub    r14,rbx
  432944:	xor    esi,esi
  432946:	mov    rdi,r13
  432949:	call   QWORD PTR [r13+0x48]
  43294d:	mov    rbx,QWORD PTR [r13+0x20]
  432951:	mov    rdi,QWORD PTR [r13+0x28]
  432955:	sub    rbx,rdi
  432958:	cmp    r14,rbx
  43295b:	ja     432930 <flatcc_json_printer_struct_vector_field@@Base+0x460>
  43295d:	mov    esi,0x20
  432962:	mov    rdx,r14
  432965:	call   406080 <memset@plt>
  43296a:	add    r14,QWORD PTR [r13+0x28]
  43296e:	mov    QWORD PTR [r13+0x28],r14
  432972:	lea    rax,[r14+0x1]
  432976:	mov    QWORD PTR [r13+0x28],rax
  43297a:	mov    BYTE PTR [r14],0x5d
  43297e:	add    rsp,0x8
  432982:	pop    rbx
  432983:	pop    r12
  432985:	pop    r13
  432987:	pop    r14
  432989:	pop    r15
  43298b:	pop    rbp
  43298c:	ret    
  43298d:	nop    DWORD PTR [rax]

0000000000432990 <flatcc_json_printer_string_vector_field@@Base>:
  432990:	push   rbp
  432991:	push   r15
  432993:	push   r14
  432995:	push   r12
  432997:	push   rbx
  432998:	lea    eax,[rdx+rdx*1]
  43299b:	add    eax,0x4
  43299e:	cmp    eax,DWORD PTR [rsi+0x10]
  4329a1:	jge    432c6e <flatcc_json_printer_string_vector_field@@Base+0x2de>
  4329a7:	mov    rdx,QWORD PTR [rsi+0x8]
  4329ab:	mov    eax,eax
  4329ad:	movzx  ebx,WORD PTR [rdx+rax*1]
  4329b1:	test   rbx,rbx
  4329b4:	je     432c6e <flatcc_json_printer_string_vector_field@@Base+0x2de>
  4329ba:	add    rbx,QWORD PTR [rsi]
  4329bd:	je     432c6e <flatcc_json_printer_string_vector_field@@Base+0x2de>
  4329c3:	mov    r15,rdi
  4329c6:	mov    eax,DWORD PTR [rsi+0x18]
  4329c9:	lea    edx,[rax+0x1]
  4329cc:	mov    DWORD PTR [rsi+0x18],edx
  4329cf:	test   eax,eax
  4329d1:	je     4329e2 <flatcc_json_printer_string_vector_field@@Base+0x52>
  4329d3:	mov    rax,QWORD PTR [r15+0x28]
  4329d7:	lea    rdx,[rax+0x1]
  4329db:	mov    QWORD PTR [r15+0x28],rdx
  4329df:	mov    BYTE PTR [rax],0x2c
  4329e2:	mov    ebp,DWORD PTR [rbx]
  4329e4:	mov    r12d,DWORD PTR [rbx+rbp*1]
  4329e8:	movsxd rdx,r8d
  4329eb:	mov    rdi,r15
  4329ee:	mov    rsi,rcx
  4329f1:	call   42ae90 <flatcc_json_printer_string_field@@Base+0x80>
  4329f6:	add    DWORD PTR [r15+0x38],0x1
  4329fb:	mov    rax,QWORD PTR [r15+0x28]
  4329ff:	lea    rcx,[rax+0x1]
  432a03:	mov    QWORD PTR [r15+0x28],rcx
  432a07:	mov    BYTE PTR [rax],0x5b
  432a0a:	test   r12d,r12d
  432a0d:	je     432bc0 <flatcc_json_printer_string_vector_field@@Base+0x230>
  432a13:	add    rbp,rbx
  432a16:	add    rbp,0x4
  432a1a:	cmp    BYTE PTR [r15+0x31],0x0
  432a1f:	mov    rax,QWORD PTR [r15+0x28]
  432a23:	je     432ab0 <flatcc_json_printer_string_vector_field@@Base+0x120>
  432a29:	lea    rcx,[rax+0x1]
  432a2d:	mov    QWORD PTR [r15+0x28],rcx
  432a31:	mov    BYTE PTR [rax],0xa
  432a34:	movsxd rax,DWORD PTR [r15+0x38]
  432a38:	movzx  r14d,BYTE PTR [r15+0x31]
  432a3d:	imul   r14,rax
  432a41:	mov    rbx,QWORD PTR [r15+0x20]
  432a45:	mov    rdi,QWORD PTR [r15+0x28]
  432a49:	lea    rax,[rdi+r14*1]
  432a4d:	cmp    rax,rbx
  432a50:	jbe    432a9d <flatcc_json_printer_string_vector_field@@Base+0x10d>
  432a52:	cmp    rdi,rbx
  432a55:	jb     432a68 <flatcc_json_printer_string_vector_field@@Base+0xd8>
  432a57:	xor    esi,esi
  432a59:	mov    rdi,r15
  432a5c:	call   QWORD PTR [r15+0x48]
  432a60:	mov    rbx,QWORD PTR [r15+0x20]
  432a64:	mov    rdi,QWORD PTR [r15+0x28]
  432a68:	sub    rbx,rdi
  432a6b:	cmp    rbx,r14
  432a6e:	jae    432a9d <flatcc_json_printer_string_vector_field@@Base+0x10d>
  432a70:	mov    esi,0x20
  432a75:	mov    rdx,rbx
  432a78:	call   406080 <memset@plt>
  432a7d:	add    QWORD PTR [r15+0x28],rbx
  432a81:	sub    r14,rbx
  432a84:	xor    esi,esi
  432a86:	mov    rdi,r15
  432a89:	call   QWORD PTR [r15+0x48]
  432a8d:	mov    rbx,QWORD PTR [r15+0x20]
  432a91:	mov    rdi,QWORD PTR [r15+0x28]
  432a95:	sub    rbx,rdi
  432a98:	cmp    r14,rbx
  432a9b:	ja     432a70 <flatcc_json_printer_string_vector_field@@Base+0xe0>
  432a9d:	mov    esi,0x20
  432aa2:	mov    rdx,r14
  432aa5:	call   406080 <memset@plt>
  432aaa:	add    QWORD PTR [r15+0x28],r14
  432aae:	jmp    432abf <flatcc_json_printer_string_vector_field@@Base+0x12f>
  432ab0:	cmp    rax,QWORD PTR [r15+0x20]
  432ab4:	jb     432abf <flatcc_json_printer_string_vector_field@@Base+0x12f>
  432ab6:	xor    esi,esi
  432ab8:	mov    rdi,r15
  432abb:	call   QWORD PTR [r15+0x48]
  432abf:	mov    eax,DWORD PTR [rbp+0x0]
  432ac2:	mov    edx,DWORD PTR [rbp+rax*1+0x0]
  432ac6:	lea    rsi,[rax+rbp*1]
  432aca:	add    rsi,0x4
  432ace:	mov    rdi,r15
  432ad1:	call   429ca0 <flatcc_json_printer_string@@Base+0x10>
  432ad6:	add    r12d,0xffffffff
  432ada:	je     432bc0 <flatcc_json_printer_string_vector_field@@Base+0x230>
  432ae0:	add    r12d,0xffffffff
  432ae4:	add    rbp,0x4
  432ae8:	mov    rax,QWORD PTR [r15+0x28]
  432aec:	lea    rcx,[rax+0x1]
  432af0:	mov    QWORD PTR [r15+0x28],rcx
  432af4:	mov    BYTE PTR [rax],0x2c
  432af7:	cmp    BYTE PTR [r15+0x31],0x0
  432afc:	mov    rax,QWORD PTR [r15+0x28]
  432b00:	je     432b90 <flatcc_json_printer_string_vector_field@@Base+0x200>
  432b06:	lea    rcx,[rax+0x1]
  432b0a:	mov    QWORD PTR [r15+0x28],rcx
  432b0e:	mov    BYTE PTR [rax],0xa
  432b11:	movsxd rax,DWORD PTR [r15+0x38]
  432b15:	movzx  r14d,BYTE PTR [r15+0x31]
  432b1a:	imul   r14,rax
  432b1e:	mov    rbx,QWORD PTR [r15+0x20]
  432b22:	mov    rdi,QWORD PTR [r15+0x28]
  432b26:	lea    rax,[rdi+r14*1]
  432b2a:	cmp    rax,rbx
  432b2d:	jbe    432b7d <flatcc_json_printer_string_vector_field@@Base+0x1ed>
  432b2f:	cmp    rdi,rbx
  432b32:	jb     432b45 <flatcc_json_printer_string_vector_field@@Base+0x1b5>
  432b34:	xor    esi,esi
  432b36:	mov    rdi,r15
  432b39:	call   QWORD PTR [r15+0x48]
  432b3d:	mov    rbx,QWORD PTR [r15+0x20]
  432b41:	mov    rdi,QWORD PTR [r15+0x28]
  432b45:	sub    rbx,rdi
  432b48:	cmp    rbx,r14
  432b4b:	jae    432b7d <flatcc_json_printer_string_vector_field@@Base+0x1ed>
  432b4d:	nop    DWORD PTR [rax]
  432b50:	mov    esi,0x20
  432b55:	mov    rdx,rbx
  432b58:	call   406080 <memset@plt>
  432b5d:	add    QWORD PTR [r15+0x28],rbx
  432b61:	sub    r14,rbx
  432b64:	xor    esi,esi
  432b66:	mov    rdi,r15
  432b69:	call   QWORD PTR [r15+0x48]
  432b6d:	mov    rbx,QWORD PTR [r15+0x20]
  432b71:	mov    rdi,QWORD PTR [r15+0x28]
  432b75:	sub    rbx,rdi
  432b78:	cmp    r14,rbx
  432b7b:	ja     432b50 <flatcc_json_printer_string_vector_field@@Base+0x1c0>
  432b7d:	mov    esi,0x20
  432b82:	mov    rdx,r14
  432b85:	call   406080 <memset@plt>
  432b8a:	add    QWORD PTR [r15+0x28],r14
  432b8e:	jmp    432ba0 <flatcc_json_printer_string_vector_field@@Base+0x210>
  432b90:	cmp    rax,QWORD PTR [r15+0x20]
  432b94:	jb     432ba0 <flatcc_json_printer_string_vector_field@@Base+0x210>
  432b96:	xor    esi,esi
  432b98:	mov    rdi,r15
  432b9b:	call   QWORD PTR [r15+0x48]
  432b9f:	nop
  432ba0:	mov    eax,DWORD PTR [rbp+0x0]
  432ba3:	mov    edx,DWORD PTR [rbp+rax*1+0x0]
  432ba7:	lea    rsi,[rax+rbp*1]
  432bab:	add    rsi,0x4
  432baf:	mov    rdi,r15
  432bb2:	call   429ca0 <flatcc_json_printer_string@@Base+0x10>
  432bb7:	test   r12d,r12d
  432bba:	jne    432ae0 <flatcc_json_printer_string_vector_field@@Base+0x150>
  432bc0:	cmp    BYTE PTR [r15+0x31],0x0
  432bc5:	mov    r14,QWORD PTR [r15+0x28]
  432bc9:	je     432c62 <flatcc_json_printer_string_vector_field@@Base+0x2d2>
  432bcf:	lea    rax,[r14+0x1]
  432bd3:	mov    QWORD PTR [r15+0x28],rax
  432bd7:	mov    BYTE PTR [r14],0xa
  432bdb:	movsxd rax,DWORD PTR [r15+0x38]
  432bdf:	add    rax,0xffffffffffffffff
  432be3:	mov    DWORD PTR [r15+0x38],eax
  432be7:	movzx  r14d,BYTE PTR [r15+0x31]
  432bec:	imul   r14,rax
  432bf0:	mov    rbx,QWORD PTR [r15+0x20]
  432bf4:	mov    rdi,QWORD PTR [r15+0x28]
  432bf8:	lea    rax,[rdi+r14*1]
  432bfc:	cmp    rax,rbx
  432bff:	jbe    432c4d <flatcc_json_printer_string_vector_field@@Base+0x2bd>
  432c01:	cmp    rdi,rbx
  432c04:	jb     432c17 <flatcc_json_printer_string_vector_field@@Base+0x287>
  432c06:	xor    esi,esi
  432c08:	mov    rdi,r15
  432c0b:	call   QWORD PTR [r15+0x48]
  432c0f:	mov    rbx,QWORD PTR [r15+0x20]
  432c13:	mov    rdi,QWORD PTR [r15+0x28]
  432c17:	sub    rbx,rdi
  432c1a:	cmp    rbx,r14
  432c1d:	jae    432c4d <flatcc_json_printer_string_vector_field@@Base+0x2bd>
  432c1f:	nop
  432c20:	mov    esi,0x20
  432c25:	mov    rdx,rbx
  432c28:	call   406080 <memset@plt>
  432c2d:	add    QWORD PTR [r15+0x28],rbx
  432c31:	sub    r14,rbx
  432c34:	xor    esi,esi
  432c36:	mov    rdi,r15
  432c39:	call   QWORD PTR [r15+0x48]
  432c3d:	mov    rbx,QWORD PTR [r15+0x20]
  432c41:	mov    rdi,QWORD PTR [r15+0x28]
  432c45:	sub    rbx,rdi
  432c48:	cmp    r14,rbx
  432c4b:	ja     432c20 <flatcc_json_printer_string_vector_field@@Base+0x290>
  432c4d:	mov    esi,0x20
  432c52:	mov    rdx,r14
  432c55:	call   406080 <memset@plt>
  432c5a:	add    r14,QWORD PTR [r15+0x28]
  432c5e:	mov    QWORD PTR [r15+0x28],r14
  432c62:	lea    rax,[r14+0x1]
  432c66:	mov    QWORD PTR [r15+0x28],rax
  432c6a:	mov    BYTE PTR [r14],0x5d
  432c6e:	pop    rbx
  432c6f:	pop    r12
  432c71:	pop    r14
  432c73:	pop    r15
  432c75:	pop    rbp
  432c76:	ret    
  432c77:	nop    WORD PTR [rax+rax*1+0x0]

0000000000432c80 <flatcc_json_printer_table_vector_field@@Base>:
  432c80:	push   rbp
  432c81:	push   r15
  432c83:	push   r14
  432c85:	push   r13
  432c87:	push   r12
  432c89:	push   rbx
  432c8a:	sub    rsp,0x38
  432c8e:	mov    QWORD PTR [rsp+0x10],r9
  432c93:	lea    eax,[rdx+rdx*1]
  432c96:	add    eax,0x4
  432c99:	cmp    eax,DWORD PTR [rsi+0x10]
  432c9c:	jge    43307e <flatcc_json_printer_table_vector_field@@Base+0x3fe>
  432ca2:	mov    rdx,QWORD PTR [rsi+0x8]
  432ca6:	mov    eax,eax
  432ca8:	movzx  ebx,WORD PTR [rdx+rax*1]
  432cac:	test   rbx,rbx
  432caf:	je     43307e <flatcc_json_printer_table_vector_field@@Base+0x3fe>
  432cb5:	add    rbx,QWORD PTR [rsi]
  432cb8:	je     43307e <flatcc_json_printer_table_vector_field@@Base+0x3fe>
  432cbe:	mov    r13,rdi
  432cc1:	mov    eax,DWORD PTR [rsi+0x18]
  432cc4:	lea    edx,[rax+0x1]
  432cc7:	mov    QWORD PTR [rsp+0x8],rsi
  432ccc:	mov    DWORD PTR [rsi+0x18],edx
  432ccf:	test   eax,eax
  432cd1:	je     432ce2 <flatcc_json_printer_table_vector_field@@Base+0x62>
  432cd3:	mov    rax,QWORD PTR [r13+0x28]
  432cd7:	lea    rdx,[rax+0x1]
  432cdb:	mov    QWORD PTR [r13+0x28],rdx
  432cdf:	mov    BYTE PTR [rax],0x2c
  432ce2:	mov    ebp,DWORD PTR [rbx]
  432ce4:	mov    r14d,DWORD PTR [rbx+rbp*1]
  432ce8:	movsxd rdx,r8d
  432ceb:	mov    rdi,r13
  432cee:	mov    rsi,rcx
  432cf1:	call   42ae90 <flatcc_json_printer_string_field@@Base+0x80>
  432cf6:	add    DWORD PTR [r13+0x38],0x1
  432cfb:	mov    rax,QWORD PTR [r13+0x28]
  432cff:	lea    rcx,[rax+0x1]
  432d03:	mov    QWORD PTR [r13+0x28],rcx
  432d07:	mov    BYTE PTR [rax],0x5b
  432d0a:	test   r14d,r14d
  432d0d:	mov    rdx,QWORD PTR [rsp+0x8]
  432d12:	je     432fcd <flatcc_json_printer_table_vector_field@@Base+0x34d>
  432d18:	lea    r15,[rbx+rbp*1]
  432d1c:	add    r15,0x4
  432d20:	mov    eax,DWORD PTR [rdx+0x14]
  432d23:	add    eax,0xffffffff
  432d26:	je     432e29 <flatcc_json_printer_table_vector_field@@Base+0x1a9>
  432d2c:	mov    ecx,DWORD PTR [r15]
  432d2f:	add    rcx,r15
  432d32:	add    DWORD PTR [r13+0x38],0x1
  432d37:	mov    rdx,QWORD PTR [r13+0x28]
  432d3b:	lea    rsi,[rdx+0x1]
  432d3f:	mov    QWORD PTR [r13+0x28],rsi
  432d43:	mov    BYTE PTR [rdx],0x7b
  432d46:	mov    DWORD PTR [rsp+0x30],0x0
  432d4e:	mov    DWORD PTR [rsp+0x2c],eax
  432d52:	mov    QWORD PTR [rsp+0x18],rcx
  432d57:	movsxd rax,DWORD PTR [rcx]
  432d5a:	sub    rcx,rax
  432d5d:	mov    QWORD PTR [rsp+0x20],rcx
  432d62:	movzx  eax,WORD PTR [rcx]
  432d65:	mov    DWORD PTR [rsp+0x28],eax
  432d69:	lea    rsi,[rsp+0x18]
  432d6e:	mov    rdi,r13
  432d71:	call   QWORD PTR [rsp+0x10]
  432d75:	cmp    BYTE PTR [r13+0x31],0x0
  432d7a:	mov    r12,QWORD PTR [r13+0x28]
  432d7e:	je     432e43 <flatcc_json_printer_table_vector_field@@Base+0x1c3>
  432d84:	lea    rax,[r12+0x1]
  432d89:	mov    QWORD PTR [r13+0x28],rax
  432d8d:	mov    BYTE PTR [r12],0xa
  432d92:	movsxd rax,DWORD PTR [r13+0x38]
  432d96:	add    rax,0xffffffffffffffff
  432d9a:	mov    DWORD PTR [r13+0x38],eax
  432d9e:	movzx  r12d,BYTE PTR [r13+0x31]
  432da3:	imul   r12,rax
  432da7:	mov    rbx,QWORD PTR [r13+0x20]
  432dab:	mov    rdi,QWORD PTR [r13+0x28]
  432daf:	lea    rax,[rdi+r12*1]
  432db3:	cmp    rax,rbx
  432db6:	jbe    432e0d <flatcc_json_printer_table_vector_field@@Base+0x18d>
  432db8:	cmp    rdi,rbx
  432dbb:	jb     432dce <flatcc_json_printer_table_vector_field@@Base+0x14e>
  432dbd:	xor    esi,esi
  432dbf:	mov    rdi,r13
  432dc2:	call   QWORD PTR [r13+0x48]
  432dc6:	mov    rbx,QWORD PTR [r13+0x20]
  432dca:	mov    rdi,QWORD PTR [r13+0x28]
  432dce:	sub    rbx,rdi
  432dd1:	cmp    rbx,r12
  432dd4:	jae    432e0d <flatcc_json_printer_table_vector_field@@Base+0x18d>
  432dd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  432de0:	mov    esi,0x20
  432de5:	mov    rdx,rbx
  432de8:	call   406080 <memset@plt>
  432ded:	add    QWORD PTR [r13+0x28],rbx
  432df1:	sub    r12,rbx
  432df4:	xor    esi,esi
  432df6:	mov    rdi,r13
  432df9:	call   QWORD PTR [r13+0x48]
  432dfd:	mov    rbx,QWORD PTR [r13+0x20]
  432e01:	mov    rdi,QWORD PTR [r13+0x28]
  432e05:	sub    rbx,rdi
  432e08:	cmp    r12,rbx
  432e0b:	ja     432de0 <flatcc_json_printer_table_vector_field@@Base+0x160>
  432e0d:	mov    esi,0x20
  432e12:	mov    rdx,r12
  432e15:	call   406080 <memset@plt>
  432e1a:	mov    rdx,QWORD PTR [rsp+0x8]
  432e1f:	add    r12,QWORD PTR [r13+0x28]
  432e23:	mov    QWORD PTR [r13+0x28],r12
  432e27:	jmp    432e48 <flatcc_json_printer_table_vector_field@@Base+0x1c8>
  432e29:	cmp    DWORD PTR [r13+0x3c],0x0
  432e2e:	jne    432e56 <flatcc_json_printer_table_vector_field@@Base+0x1d6>
  432e30:	mov    DWORD PTR [r13+0x3c],0x2
  432e38:	add    r14d,0xffffffff
  432e3c:	jne    432e60 <flatcc_json_printer_table_vector_field@@Base+0x1e0>
  432e3e:	jmp    432fcd <flatcc_json_printer_table_vector_field@@Base+0x34d>
  432e43:	mov    rdx,QWORD PTR [rsp+0x8]
  432e48:	lea    rax,[r12+0x1]
  432e4d:	mov    QWORD PTR [r13+0x28],rax
  432e51:	mov    BYTE PTR [r12],0x7d
  432e56:	add    r14d,0xffffffff
  432e5a:	je     432fcd <flatcc_json_printer_table_vector_field@@Base+0x34d>
  432e60:	lea    r12,[rsp+0x18]
  432e65:	nop    WORD PTR cs:[rax+rax*1+0x0]
  432e6f:	nop
  432e70:	add    r14d,0xffffffff
  432e74:	mov    rax,QWORD PTR [r13+0x28]
  432e78:	lea    rcx,[rax+0x1]
  432e7c:	mov    QWORD PTR [r13+0x28],rcx
  432e80:	mov    BYTE PTR [rax],0x2c
  432e83:	mov    eax,DWORD PTR [rdx+0x14]
  432e86:	add    eax,0xffffffff
  432e89:	je     432f90 <flatcc_json_printer_table_vector_field@@Base+0x310>
  432e8f:	mov    ecx,DWORD PTR [r15+0x4]
  432e93:	add    rcx,r15
  432e96:	add    rcx,0x4
  432e9a:	add    DWORD PTR [r13+0x38],0x1
  432e9f:	mov    rdx,QWORD PTR [r13+0x28]
  432ea3:	lea    rsi,[rdx+0x1]
  432ea7:	mov    QWORD PTR [r13+0x28],rsi
  432eab:	mov    BYTE PTR [rdx],0x7b
  432eae:	mov    DWORD PTR [rsp+0x30],0x0
  432eb6:	mov    DWORD PTR [rsp+0x2c],eax
  432eba:	mov    QWORD PTR [rsp+0x18],rcx
  432ebf:	movsxd rax,DWORD PTR [rcx]
  432ec2:	sub    rcx,rax
  432ec5:	mov    QWORD PTR [rsp+0x20],rcx
  432eca:	movzx  eax,WORD PTR [rcx]
  432ecd:	mov    DWORD PTR [rsp+0x28],eax
  432ed1:	mov    rdi,r13
  432ed4:	mov    rsi,r12
  432ed7:	call   QWORD PTR [rsp+0x10]
  432edb:	cmp    BYTE PTR [r13+0x31],0x0
  432ee0:	mov    rbx,QWORD PTR [r13+0x28]
  432ee4:	je     432fb0 <flatcc_json_printer_table_vector_field@@Base+0x330>
  432eea:	lea    rax,[rbx+0x1]
  432eee:	mov    QWORD PTR [r13+0x28],rax
  432ef2:	mov    BYTE PTR [rbx],0xa
  432ef5:	movsxd rax,DWORD PTR [r13+0x38]
  432ef9:	add    rax,0xffffffffffffffff
  432efd:	mov    DWORD PTR [r13+0x38],eax
  432f01:	movzx  ebx,BYTE PTR [r13+0x31]
  432f06:	imul   rbx,rax
  432f0a:	mov    rbp,QWORD PTR [r13+0x20]
  432f0e:	mov    rdi,QWORD PTR [r13+0x28]
  432f12:	lea    rax,[rdi+rbx*1]
  432f16:	cmp    rax,rbp
  432f19:	jbe    432f6d <flatcc_json_printer_table_vector_field@@Base+0x2ed>
  432f1b:	cmp    rdi,rbp
  432f1e:	jb     432f31 <flatcc_json_printer_table_vector_field@@Base+0x2b1>
  432f20:	xor    esi,esi
  432f22:	mov    rdi,r13
  432f25:	call   QWORD PTR [r13+0x48]
  432f29:	mov    rbp,QWORD PTR [r13+0x20]
  432f2d:	mov    rdi,QWORD PTR [r13+0x28]
  432f31:	sub    rbp,rdi
  432f34:	cmp    rbp,rbx
  432f37:	jae    432f6d <flatcc_json_printer_table_vector_field@@Base+0x2ed>
  432f39:	nop    DWORD PTR [rax+0x0]
  432f40:	mov    esi,0x20
  432f45:	mov    rdx,rbp
  432f48:	call   406080 <memset@plt>
  432f4d:	add    QWORD PTR [r13+0x28],rbp
  432f51:	sub    rbx,rbp
  432f54:	xor    esi,esi
  432f56:	mov    rdi,r13
  432f59:	call   QWORD PTR [r13+0x48]
  432f5d:	mov    rbp,QWORD PTR [r13+0x20]
  432f61:	mov    rdi,QWORD PTR [r13+0x28]
  432f65:	sub    rbp,rdi
  432f68:	cmp    rbx,rbp
  432f6b:	ja     432f40 <flatcc_json_printer_table_vector_field@@Base+0x2c0>
  432f6d:	mov    esi,0x20
  432f72:	mov    rdx,rbx
  432f75:	call   406080 <memset@plt>
  432f7a:	mov    rdx,QWORD PTR [rsp+0x8]
  432f7f:	add    rbx,QWORD PTR [r13+0x28]
  432f83:	mov    QWORD PTR [r13+0x28],rbx
  432f87:	jmp    432fb5 <flatcc_json_printer_table_vector_field@@Base+0x335>
  432f89:	nop    DWORD PTR [rax+0x0]
  432f90:	cmp    DWORD PTR [r13+0x3c],0x0
  432f95:	jne    432fc0 <flatcc_json_printer_table_vector_field@@Base+0x340>
  432f97:	mov    DWORD PTR [r13+0x3c],0x2
  432f9f:	jmp    432fc0 <flatcc_json_printer_table_vector_field@@Base+0x340>
  432fa1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  432fab:	nop    DWORD PTR [rax+rax*1+0x0]
  432fb0:	mov    rdx,QWORD PTR [rsp+0x8]
  432fb5:	lea    rax,[rbx+0x1]
  432fb9:	mov    QWORD PTR [r13+0x28],rax
  432fbd:	mov    BYTE PTR [rbx],0x7d
  432fc0:	add    r15,0x4
  432fc4:	test   r14d,r14d
  432fc7:	jne    432e70 <flatcc_json_printer_table_vector_field@@Base+0x1f0>
  432fcd:	cmp    BYTE PTR [r13+0x31],0x0
  432fd2:	mov    r14,QWORD PTR [r13+0x28]
  432fd6:	je     433072 <flatcc_json_printer_table_vector_field@@Base+0x3f2>
  432fdc:	lea    rax,[r14+0x1]
  432fe0:	mov    QWORD PTR [r13+0x28],rax
  432fe4:	mov    BYTE PTR [r14],0xa
  432fe8:	movsxd rax,DWORD PTR [r13+0x38]
  432fec:	add    rax,0xffffffffffffffff
  432ff0:	mov    DWORD PTR [r13+0x38],eax
  432ff4:	movzx  r14d,BYTE PTR [r13+0x31]
  432ff9:	imul   r14,rax
  432ffd:	mov    rbx,QWORD PTR [r13+0x20]
  433001:	mov    rdi,QWORD PTR [r13+0x28]
  433005:	lea    rax,[rdi+r14*1]
  433009:	cmp    rax,rbx
  43300c:	jbe    43305d <flatcc_json_printer_table_vector_field@@Base+0x3dd>
  43300e:	cmp    rdi,rbx
  433011:	jb     433024 <flatcc_json_printer_table_vector_field@@Base+0x3a4>
  433013:	xor    esi,esi
  433015:	mov    rdi,r13
  433018:	call   QWORD PTR [r13+0x48]
  43301c:	mov    rbx,QWORD PTR [r13+0x20]
  433020:	mov    rdi,QWORD PTR [r13+0x28]
  433024:	sub    rbx,rdi
  433027:	cmp    rbx,r14
  43302a:	jae    43305d <flatcc_json_printer_table_vector_field@@Base+0x3dd>
  43302c:	nop    DWORD PTR [rax+0x0]
  433030:	mov    esi,0x20
  433035:	mov    rdx,rbx
  433038:	call   406080 <memset@plt>
  43303d:	add    QWORD PTR [r13+0x28],rbx
  433041:	sub    r14,rbx
  433044:	xor    esi,esi
  433046:	mov    rdi,r13
  433049:	call   QWORD PTR [r13+0x48]
  43304d:	mov    rbx,QWORD PTR [r13+0x20]
  433051:	mov    rdi,QWORD PTR [r13+0x28]
  433055:	sub    rbx,rdi
  433058:	cmp    r14,rbx
  43305b:	ja     433030 <flatcc_json_printer_table_vector_field@@Base+0x3b0>
  43305d:	mov    esi,0x20
  433062:	mov    rdx,r14
  433065:	call   406080 <memset@plt>
  43306a:	add    r14,QWORD PTR [r13+0x28]
  43306e:	mov    QWORD PTR [r13+0x28],r14
  433072:	lea    rax,[r14+0x1]
  433076:	mov    QWORD PTR [r13+0x28],rax
  43307a:	mov    BYTE PTR [r14],0x5d
  43307e:	add    rsp,0x38
  433082:	pop    rbx
  433083:	pop    r12
  433085:	pop    r13
  433087:	pop    r14
  433089:	pop    r15
  43308b:	pop    rbp
  43308c:	ret    
  43308d:	nop    DWORD PTR [rax]

0000000000433090 <flatcc_json_printer_union_vector_field@@Base>:
  433090:	push   rbp
  433091:	push   r15
  433093:	push   r14
  433095:	push   r13
  433097:	push   r12
  433099:	push   rbx
  43309a:	sub    rsp,0xa8
  4330a1:	mov    QWORD PTR [rsp],r9
  4330a5:	mov    r13d,r8d
  4330a8:	mov    r15d,edx
  4330ab:	mov    rbx,rsi
  4330ae:	mov    r14,rdi
  4330b1:	lea    esi,[r15+r15*1]
  4330b5:	add    esi,0x2
  4330b8:	mov    eax,DWORD PTR [rbx+0x10]
  4330bb:	cmp    esi,eax
  4330bd:	jge    4330d3 <flatcc_json_printer_union_vector_field@@Base+0x43>
  4330bf:	mov    rdx,QWORD PTR [rbx+0x8]
  4330c3:	mov    esi,esi
  4330c5:	movzx  edx,WORD PTR [rdx+rsi*1]
  4330c9:	test   rdx,rdx
  4330cc:	je     4330d3 <flatcc_json_printer_union_vector_field@@Base+0x43>
  4330ce:	add    rdx,QWORD PTR [rbx]
  4330d1:	jmp    4330d5 <flatcc_json_printer_union_vector_field@@Base+0x45>
  4330d3:	xor    edx,edx
  4330d5:	lea    esi,[r15+r15*1]
  4330d9:	add    esi,0x4
  4330dc:	cmp    esi,eax
  4330de:	jge    4330f4 <flatcc_json_printer_union_vector_field@@Base+0x64>
  4330e0:	mov    rax,QWORD PTR [rbx+0x8]
  4330e4:	mov    esi,esi
  4330e6:	movzx  ebp,WORD PTR [rax+rsi*1]
  4330ea:	test   rbp,rbp
  4330ed:	je     4330f4 <flatcc_json_printer_union_vector_field@@Base+0x64>
  4330ef:	add    rbp,QWORD PTR [rbx]
  4330f2:	jmp    4330f6 <flatcc_json_printer_union_vector_field@@Base+0x66>
  4330f4:	xor    ebp,ebp
  4330f6:	mov    QWORD PTR [rsp+0x8],rdx
  4330fb:	mov    eax,DWORD PTR [rbx+0x14]
  4330fe:	mov    DWORD PTR [rsp+0x18],eax
  433102:	cmp    r13d,0x65
  433106:	jge    4333cf <flatcc_json_printer_union_vector_field@@Base+0x33f>
  43310c:	movsxd r12,r13d
  43310f:	lea    rdi,[rsp+0x30]
  433114:	mov    QWORD PTR [rsp+0x28],rcx
  433119:	mov    rsi,rcx
  43311c:	mov    rdx,r12
  43311f:	call   4060e0 <memcpy@plt>
  433124:	mov    BYTE PTR [rsp+r12*1+0x34],0x65
  43312a:	mov    DWORD PTR [rsp+r12*1+0x30],0x7079745f
  433133:	cmp    QWORD PTR [rsp+0x8],0x0
  433139:	je     4333bd <flatcc_json_printer_union_vector_field@@Base+0x32d>
  43313f:	test   rbp,rbp
  433142:	je     4333bd <flatcc_json_printer_union_vector_field@@Base+0x32d>
  433148:	add    r15d,0xffffffff
  43314c:	add    r13d,0x5
  433150:	lea    rcx,[rsp+0x30]
  433155:	mov    rdi,r14
  433158:	mov    rsi,rbx
  43315b:	mov    edx,r15d
  43315e:	mov    r8d,r13d
  433161:	mov    r9,QWORD PTR [rsp]
  433165:	call   4302b0 <flatcc_json_printer_utype_enum_vector_field@@Base>
  43316a:	mov    eax,DWORD PTR [rbx+0x18]
  43316d:	lea    ecx,[rax+0x1]
  433170:	mov    DWORD PTR [rbx+0x18],ecx
  433173:	lea    r13,[r14+0x28]
  433177:	test   eax,eax
  433179:	je     43318a <flatcc_json_printer_union_vector_field@@Base+0xfa>
  43317b:	mov    rax,QWORD PTR [r13+0x0]
  43317f:	lea    rcx,[rax+0x1]
  433183:	mov    QWORD PTR [r13+0x0],rcx
  433187:	mov    BYTE PTR [rax],0x2c
  43318a:	mov    eax,DWORD PTR [rbp+0x0]
  43318d:	mov    rbx,QWORD PTR [rsp+0x8]
  433192:	mov    r15d,DWORD PTR [rbx]
  433195:	mov    QWORD PTR [rsp],rax
  433199:	mov    QWORD PTR [rsp+0x20],rbp
  43319e:	mov    ebp,DWORD PTR [rbp+rax*1+0x0]
  4331a2:	mov    rdi,r14
  4331a5:	mov    rsi,QWORD PTR [rsp+0x28]
  4331aa:	mov    rdx,r12
  4331ad:	call   42ae90 <flatcc_json_printer_string_field@@Base+0x80>
  4331b2:	add    DWORD PTR [r14+0x38],0x1
  4331b7:	mov    rax,QWORD PTR [r14+0x28]
  4331bb:	lea    rcx,[rax+0x1]
  4331bf:	mov    QWORD PTR [r14+0x28],rcx
  4331c3:	mov    BYTE PTR [rax],0x5b
  4331c6:	test   ebp,ebp
  4331c8:	je     43330d <flatcc_json_printer_union_vector_field@@Base+0x27d>
  4331ce:	mov    rdx,rbx
  4331d1:	mov    al,BYTE PTR [rbx+r15*1+0x4]
  4331d6:	test   al,al
  4331d8:	je     433211 <flatcc_json_printer_union_vector_field@@Base+0x181>
  4331da:	mov    rcx,QWORD PTR [rsp]
  4331de:	mov    rdx,QWORD PTR [rsp+0x20]
  4331e3:	add    rcx,rdx
  4331e6:	add    rcx,0x4
  4331ea:	mov    BYTE PTR [rsp+0x1c],al
  4331ee:	mov    QWORD PTR [rsp+0x10],rcx
  4331f3:	lea    rsi,[rsp+0x10]
  4331f8:	mov    rdi,r14
  4331fb:	call   QWORD PTR [rsp+0xe0]
  433202:	mov    rdx,QWORD PTR [rsp+0x8]
  433207:	add    ebp,0xffffffff
  43320a:	jne    433256 <flatcc_json_printer_union_vector_field@@Base+0x1c6>
  43320c:	jmp    43330d <flatcc_json_printer_union_vector_field@@Base+0x27d>
  433211:	mov    rax,QWORD PTR [r13+0x0]
  433215:	lea    rcx,[rax+0x1]
  433219:	mov    QWORD PTR [r13+0x0],rcx
  43321d:	mov    BYTE PTR [rax],0x6e
  433220:	mov    rax,QWORD PTR [r13+0x0]
  433224:	lea    rcx,[rax+0x1]
  433228:	mov    QWORD PTR [r13+0x0],rcx
  43322c:	mov    BYTE PTR [rax],0x75
  43322f:	mov    rax,QWORD PTR [r13+0x0]
  433233:	lea    rcx,[rax+0x1]
  433237:	mov    QWORD PTR [r13+0x0],rcx
  43323b:	mov    BYTE PTR [rax],0x6c
  43323e:	mov    rax,QWORD PTR [r13+0x0]
  433242:	lea    rcx,[rax+0x1]
  433246:	mov    QWORD PTR [r13+0x0],rcx
  43324a:	mov    BYTE PTR [rax],0x6c
  43324d:	add    ebp,0xffffffff
  433250:	je     43330d <flatcc_json_printer_union_vector_field@@Base+0x27d>
  433256:	mov    ebp,ebp
  433258:	lea    r12,[rdx+r15*1]
  43325c:	add    r12,0x5
  433260:	mov    rax,QWORD PTR [rsp]
  433264:	mov    rcx,QWORD PTR [rsp+0x20]
  433269:	lea    rbx,[rcx+rax*1]
  43326d:	add    rbx,0x8
  433271:	xor    r15d,r15d
  433274:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43327e:	xchg   ax,ax
  433280:	movzx  eax,BYTE PTR [r12+r15*1]
  433285:	mov    rcx,QWORD PTR [r13+0x0]
  433289:	lea    rdx,[rcx+0x1]
  43328d:	mov    QWORD PTR [r13+0x0],rdx
  433291:	mov    BYTE PTR [rcx],0x2c
  433294:	test   al,al
  433296:	je     4332c0 <flatcc_json_printer_union_vector_field@@Base+0x230>
  433298:	mov    BYTE PTR [rsp+0x1c],al
  43329c:	mov    QWORD PTR [rsp+0x10],rbx
  4332a1:	mov    rdi,r14
  4332a4:	lea    rsi,[rsp+0x10]
  4332a9:	call   QWORD PTR [rsp+0xe0]
  4332b0:	jmp    4332fc <flatcc_json_printer_union_vector_field@@Base+0x26c>
  4332b2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4332bc:	nop    DWORD PTR [rax+0x0]
  4332c0:	mov    rax,QWORD PTR [r13+0x0]
  4332c4:	lea    rcx,[rax+0x1]
  4332c8:	mov    QWORD PTR [r13+0x0],rcx
  4332cc:	mov    BYTE PTR [rax],0x6e
  4332cf:	mov    rax,QWORD PTR [r13+0x0]
  4332d3:	lea    rcx,[rax+0x1]
  4332d7:	mov    QWORD PTR [r13+0x0],rcx
  4332db:	mov    BYTE PTR [rax],0x75
  4332de:	mov    rax,QWORD PTR [r13+0x0]
  4332e2:	lea    rcx,[rax+0x1]
  4332e6:	mov    QWORD PTR [r13+0x0],rcx
  4332ea:	mov    BYTE PTR [rax],0x6c
  4332ed:	mov    rax,QWORD PTR [r13+0x0]
  4332f1:	lea    rcx,[rax+0x1]
  4332f5:	mov    QWORD PTR [r13+0x0],rcx
  4332f9:	mov    BYTE PTR [rax],0x6c
  4332fc:	add    r15,0x1
  433300:	add    rbx,0x4
  433304:	cmp    ebp,r15d
  433307:	jne    433280 <flatcc_json_printer_union_vector_field@@Base+0x1f0>
  43330d:	cmp    BYTE PTR [r14+0x31],0x0
  433312:	mov    rbx,QWORD PTR [r14+0x28]
  433316:	je     4333b2 <flatcc_json_printer_union_vector_field@@Base+0x322>
  43331c:	lea    rax,[rbx+0x1]
  433320:	mov    QWORD PTR [r14+0x28],rax
  433324:	mov    BYTE PTR [rbx],0xa
  433327:	movsxd rax,DWORD PTR [r14+0x38]
  43332b:	add    rax,0xffffffffffffffff
  43332f:	mov    DWORD PTR [r14+0x38],eax
  433333:	movzx  ebx,BYTE PTR [r14+0x31]
  433338:	imul   rbx,rax
  43333c:	mov    rbp,QWORD PTR [r14+0x20]
  433340:	mov    rdi,QWORD PTR [r14+0x28]
  433344:	lea    rax,[rdi+rbx*1]
  433348:	cmp    rax,rbp
  43334b:	jbe    43339d <flatcc_json_printer_union_vector_field@@Base+0x30d>
  43334d:	cmp    rdi,rbp
  433350:	jb     433363 <flatcc_json_printer_union_vector_field@@Base+0x2d3>
  433352:	xor    esi,esi
  433354:	mov    rdi,r14
  433357:	call   QWORD PTR [r14+0x48]
  43335b:	mov    rbp,QWORD PTR [r14+0x20]
  43335f:	mov    rdi,QWORD PTR [r14+0x28]
  433363:	sub    rbp,rdi
  433366:	cmp    rbp,rbx
  433369:	jae    43339d <flatcc_json_printer_union_vector_field@@Base+0x30d>
  43336b:	nop    DWORD PTR [rax+rax*1+0x0]
  433370:	mov    esi,0x20
  433375:	mov    rdx,rbp
  433378:	call   406080 <memset@plt>
  43337d:	add    QWORD PTR [r14+0x28],rbp
  433381:	sub    rbx,rbp
  433384:	xor    esi,esi
  433386:	mov    rdi,r14
  433389:	call   QWORD PTR [r14+0x48]
  43338d:	mov    rbp,QWORD PTR [r14+0x20]
  433391:	mov    rdi,QWORD PTR [r14+0x28]
  433395:	sub    rbp,rdi
  433398:	cmp    rbx,rbp
  43339b:	ja     433370 <flatcc_json_printer_union_vector_field@@Base+0x2e0>
  43339d:	mov    esi,0x20
  4333a2:	mov    rdx,rbx
  4333a5:	call   406080 <memset@plt>
  4333aa:	add    rbx,QWORD PTR [r13+0x0]
  4333ae:	mov    QWORD PTR [r13+0x0],rbx
  4333b2:	lea    rax,[rbx+0x1]
  4333b6:	mov    QWORD PTR [r13+0x0],rax
  4333ba:	mov    BYTE PTR [rbx],0x5d
  4333bd:	add    rsp,0xa8
  4333c4:	pop    rbx
  4333c5:	pop    r12
  4333c7:	pop    r13
  4333c9:	pop    r14
  4333cb:	pop    r15
  4333cd:	pop    rbp
  4333ce:	ret    
  4333cf:	cmp    DWORD PTR [r14+0x3c],0x0
  4333d4:	jne    4333de <flatcc_json_printer_union_vector_field@@Base+0x34e>
  4333d6:	mov    DWORD PTR [r14+0x3c],0x1
  4333de:	lea    rdi,[rip+0x963d]        # 43ca22 <flatcc_builder_padding_base@@Base+0x31f2>
  4333e5:	lea    rsi,[rip+0x9651]        # 43ca3d <flatcc_builder_padding_base@@Base+0x320d>
  4333ec:	lea    rcx,[rip+0x96af]        # 43caa2 <flatcc_builder_padding_base@@Base+0x3272>
  4333f3:	mov    edx,0x34b
  4333f8:	call   406070 <__assert_fail@plt>
  4333fd:	nop    DWORD PTR [rax]

0000000000433400 <flatcc_json_printer_table_field@@Base>:
  433400:	push   r15
  433402:	push   r14
  433404:	push   r12
  433406:	push   rbx
  433407:	sub    rsp,0x28
  43340b:	lea    eax,[rdx+rdx*1]
  43340e:	add    eax,0x4
  433411:	cmp    eax,DWORD PTR [rsi+0x10]
  433414:	jge    43357f <flatcc_json_printer_table_field@@Base+0x17f>
  43341a:	mov    rbx,rsi
  43341d:	mov    rdx,QWORD PTR [rsi+0x8]
  433421:	mov    eax,eax
  433423:	movzx  r12d,WORD PTR [rdx+rax*1]
  433428:	test   r12,r12
  43342b:	je     43357f <flatcc_json_printer_table_field@@Base+0x17f>
  433431:	add    r12,QWORD PTR [rbx]
  433434:	je     43357f <flatcc_json_printer_table_field@@Base+0x17f>
  43343a:	mov    r15,r9
  43343d:	mov    r14,rdi
  433440:	mov    eax,DWORD PTR [rbx+0x18]
  433443:	lea    edx,[rax+0x1]
  433446:	mov    DWORD PTR [rbx+0x18],edx
  433449:	test   eax,eax
  43344b:	je     43345c <flatcc_json_printer_table_field@@Base+0x5c>
  43344d:	mov    rax,QWORD PTR [r14+0x28]
  433451:	lea    rdx,[rax+0x1]
  433455:	mov    QWORD PTR [r14+0x28],rdx
  433459:	mov    BYTE PTR [rax],0x2c
  43345c:	movsxd rdx,r8d
  43345f:	mov    rdi,r14
  433462:	mov    rsi,rcx
  433465:	call   42ae90 <flatcc_json_printer_string_field@@Base+0x80>
  43346a:	mov    eax,DWORD PTR [rbx+0x14]
  43346d:	add    eax,0xffffffff
  433470:	je     433570 <flatcc_json_printer_table_field@@Base+0x170>
  433476:	mov    ecx,DWORD PTR [r12]
  43347a:	add    rcx,r12
  43347d:	add    DWORD PTR [r14+0x38],0x1
  433482:	mov    rdx,QWORD PTR [r14+0x28]
  433486:	lea    rsi,[rdx+0x1]
  43348a:	mov    QWORD PTR [r14+0x28],rsi
  43348e:	mov    BYTE PTR [rdx],0x7b
  433491:	mov    DWORD PTR [rsp+0x20],0x0
  433499:	mov    DWORD PTR [rsp+0x1c],eax
  43349d:	mov    QWORD PTR [rsp+0x8],rcx
  4334a2:	movsxd rax,DWORD PTR [rcx]
  4334a5:	sub    rcx,rax
  4334a8:	mov    QWORD PTR [rsp+0x10],rcx
  4334ad:	movzx  eax,WORD PTR [rcx]
  4334b0:	mov    DWORD PTR [rsp+0x18],eax
  4334b4:	lea    rsi,[rsp+0x8]
  4334b9:	mov    rdi,r14
  4334bc:	call   r15
  4334bf:	cmp    BYTE PTR [r14+0x31],0x0
  4334c4:	mov    r15,QWORD PTR [r14+0x28]
  4334c8:	je     433562 <flatcc_json_printer_table_field@@Base+0x162>
  4334ce:	lea    rax,[r15+0x1]
  4334d2:	mov    QWORD PTR [r14+0x28],rax
  4334d6:	mov    BYTE PTR [r15],0xa
  4334da:	movsxd rax,DWORD PTR [r14+0x38]
  4334de:	add    rax,0xffffffffffffffff
  4334e2:	mov    DWORD PTR [r14+0x38],eax
  4334e6:	movzx  r15d,BYTE PTR [r14+0x31]
  4334eb:	imul   r15,rax
  4334ef:	mov    rbx,QWORD PTR [r14+0x20]
  4334f3:	mov    rdi,QWORD PTR [r14+0x28]
  4334f7:	lea    rax,[rdi+r15*1]
  4334fb:	cmp    rax,rbx
  4334fe:	jbe    43354d <flatcc_json_printer_table_field@@Base+0x14d>
  433500:	cmp    rdi,rbx
  433503:	jb     433516 <flatcc_json_printer_table_field@@Base+0x116>
  433505:	xor    esi,esi
  433507:	mov    rdi,r14
  43350a:	call   QWORD PTR [r14+0x48]
  43350e:	mov    rbx,QWORD PTR [r14+0x20]
  433512:	mov    rdi,QWORD PTR [r14+0x28]
  433516:	sub    rbx,rdi
  433519:	cmp    rbx,r15
  43351c:	jae    43354d <flatcc_json_printer_table_field@@Base+0x14d>
  43351e:	xchg   ax,ax
  433520:	mov    esi,0x20
  433525:	mov    rdx,rbx
  433528:	call   406080 <memset@plt>
  43352d:	add    QWORD PTR [r14+0x28],rbx
  433531:	sub    r15,rbx
  433534:	xor    esi,esi
  433536:	mov    rdi,r14
  433539:	call   QWORD PTR [r14+0x48]
  43353d:	mov    rbx,QWORD PTR [r14+0x20]
  433541:	mov    rdi,QWORD PTR [r14+0x28]
  433545:	sub    rbx,rdi
  433548:	cmp    r15,rbx
  43354b:	ja     433520 <flatcc_json_printer_table_field@@Base+0x120>
  43354d:	mov    esi,0x20
  433552:	mov    rdx,r15
  433555:	call   406080 <memset@plt>
  43355a:	add    r15,QWORD PTR [r14+0x28]
  43355e:	mov    QWORD PTR [r14+0x28],r15
  433562:	lea    rax,[r15+0x1]
  433566:	mov    QWORD PTR [r14+0x28],rax
  43356a:	mov    BYTE PTR [r15],0x7d
  43356e:	jmp    43357f <flatcc_json_printer_table_field@@Base+0x17f>
  433570:	cmp    DWORD PTR [r14+0x3c],0x0
  433575:	jne    43357f <flatcc_json_printer_table_field@@Base+0x17f>
  433577:	mov    DWORD PTR [r14+0x3c],0x2
  43357f:	add    rsp,0x28
  433583:	pop    rbx
  433584:	pop    r12
  433586:	pop    r14
  433588:	pop    r15
  43358a:	ret    
  43358b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000433590 <flatcc_json_printer_union_field@@Base>:
  433590:	push   rbp
  433591:	push   r15
  433593:	push   r14
  433595:	push   r13
  433597:	push   r12
  433599:	push   rbx
  43359a:	sub    rsp,0x48
  43359e:	mov    r13d,r8d
  4335a1:	mov    r14,rcx
  4335a4:	mov    r12,rsi
  4335a7:	mov    r15,rdi
  4335aa:	lea    ecx,[rdx+rdx*1]
  4335ad:	lea    eax,[rdx+rdx*1]
  4335b0:	add    eax,0x2
  4335b3:	mov    edx,DWORD PTR [rsi+0x10]
  4335b6:	cmp    eax,edx
  4335b8:	jge    4335d0 <flatcc_json_printer_union_field@@Base+0x40>
  4335ba:	mov    rsi,QWORD PTR [r12+0x8]
  4335bf:	mov    eax,eax
  4335c1:	movzx  eax,WORD PTR [rsi+rax*1]
  4335c5:	test   rax,rax
  4335c8:	je     4335d0 <flatcc_json_printer_union_field@@Base+0x40>
  4335ca:	add    rax,QWORD PTR [r12]
  4335ce:	jmp    4335d2 <flatcc_json_printer_union_field@@Base+0x42>
  4335d0:	xor    eax,eax
  4335d2:	add    ecx,0x4
  4335d5:	cmp    ecx,edx
  4335d7:	jge    43399b <flatcc_json_printer_union_field@@Base+0x40b>
  4335dd:	mov    rdx,QWORD PTR [r12+0x8]
  4335e2:	mov    ecx,ecx
  4335e4:	movzx  edx,WORD PTR [rdx+rcx*1]
  4335e8:	test   rdx,rdx
  4335eb:	je     43399b <flatcc_json_printer_union_field@@Base+0x40b>
  4335f1:	test   rax,rax
  4335f4:	je     43399b <flatcc_json_printer_union_field@@Base+0x40b>
  4335fa:	add    rdx,QWORD PTR [r12]
  4335fe:	je     43399b <flatcc_json_printer_union_field@@Base+0x40b>
  433604:	mov    QWORD PTR [rsp+0x28],r9
  433609:	mov    al,BYTE PTR [rax]
  43360b:	mov    BYTE PTR [rsp+0xf],al
  43360f:	mov    eax,DWORD PTR [r12+0x18]
  433614:	lea    ecx,[rax+0x1]
  433617:	mov    DWORD PTR [r12+0x18],ecx
  43361c:	test   eax,eax
  43361e:	je     43362f <flatcc_json_printer_union_field@@Base+0x9f>
  433620:	mov    rax,QWORD PTR [r15+0x28]
  433624:	lea    rcx,[rax+0x1]
  433628:	mov    QWORD PTR [r15+0x28],rcx
  43362c:	mov    BYTE PTR [rax],0x2c
  43362f:	cmp    BYTE PTR [r15+0x31],0x0
  433634:	mov    rbp,QWORD PTR [r15+0x28]
  433638:	mov    QWORD PTR [rsp+0x10],r14
  43363d:	mov    QWORD PTR [rsp+0x18],rdx
  433642:	je     4336d8 <flatcc_json_printer_union_field@@Base+0x148>
  433648:	lea    rax,[rbp+0x1]
  43364c:	mov    QWORD PTR [r15+0x28],rax
  433650:	mov    BYTE PTR [rbp+0x0],0xa
  433654:	movsxd rax,DWORD PTR [r15+0x38]
  433658:	movzx  ebp,BYTE PTR [r15+0x31]
  43365d:	imul   rbp,rax
  433661:	mov    rbx,QWORD PTR [r15+0x20]
  433665:	mov    rdi,QWORD PTR [r15+0x28]
  433669:	lea    rax,[rdi+rbp*1]
  43366d:	cmp    rax,rbx
  433670:	jbe    4336bd <flatcc_json_printer_union_field@@Base+0x12d>
  433672:	cmp    rdi,rbx
  433675:	jb     433688 <flatcc_json_printer_union_field@@Base+0xf8>
  433677:	xor    esi,esi
  433679:	mov    rdi,r15
  43367c:	call   QWORD PTR [r15+0x48]
  433680:	mov    rbx,QWORD PTR [r15+0x20]
  433684:	mov    rdi,QWORD PTR [r15+0x28]
  433688:	sub    rbx,rdi
  43368b:	cmp    rbx,rbp
  43368e:	jae    4336bd <flatcc_json_printer_union_field@@Base+0x12d>
  433690:	mov    esi,0x20
  433695:	mov    rdx,rbx
  433698:	call   406080 <memset@plt>
  43369d:	add    QWORD PTR [r15+0x28],rbx
  4336a1:	sub    rbp,rbx
  4336a4:	xor    esi,esi
  4336a6:	mov    rdi,r15
  4336a9:	call   QWORD PTR [r15+0x48]
  4336ad:	mov    rbx,QWORD PTR [r15+0x20]
  4336b1:	mov    rdi,QWORD PTR [r15+0x28]
  4336b5:	sub    rbx,rdi
  4336b8:	cmp    rbp,rbx
  4336bb:	ja     433690 <flatcc_json_printer_union_field@@Base+0x100>
  4336bd:	mov    esi,0x20
  4336c2:	mov    rdx,rbp
  4336c5:	call   406080 <memset@plt>
  4336ca:	lea    r14,[r15+0x20]
  4336ce:	add    rbp,QWORD PTR [r15+0x28]
  4336d2:	mov    QWORD PTR [r15+0x28],rbp
  4336d6:	jmp    4336ef <flatcc_json_printer_union_field@@Base+0x15f>
  4336d8:	lea    r14,[r15+0x20]
  4336dc:	cmp    rbp,QWORD PTR [r15+0x20]
  4336e0:	jb     4336ef <flatcc_json_printer_union_field@@Base+0x15f>
  4336e2:	xor    esi,esi
  4336e4:	mov    rdi,r15
  4336e7:	call   QWORD PTR [r15+0x48]
  4336eb:	mov    rbp,QWORD PTR [r15+0x28]
  4336ef:	mov    BYTE PTR [rbp+0x0],0x22
  4336f3:	mov    rbp,QWORD PTR [r15+0x20]
  4336f7:	xor    eax,eax
  4336f9:	cmp    BYTE PTR [r15+0x32],0x1
  4336fe:	mov    rdi,QWORD PTR [r15+0x28]
  433702:	adcx   rdi,rax
  433708:	mov    QWORD PTR [r15+0x28],rdi
  43370c:	movsxd r13,r13d
  43370f:	lea    rax,[rdi+r13*1]
  433713:	cmp    rax,rbp
  433716:	mov    QWORD PTR [rsp+0x20],r12
  43371b:	mov    QWORD PTR [rsp+0x30],r13
  433720:	jae    433734 <flatcc_json_printer_union_field@@Base+0x1a4>
  433722:	mov    rsi,QWORD PTR [rsp+0x10]
  433727:	mov    rdx,r13
  43372a:	call   4060e0 <memcpy@plt>
  43372f:	mov    r12,r13
  433732:	jmp    4337a8 <flatcc_json_printer_union_field@@Base+0x218>
  433734:	cmp    rdi,rbp
  433737:	jb     433749 <flatcc_json_printer_union_field@@Base+0x1b9>
  433739:	xor    esi,esi
  43373b:	mov    rdi,r15
  43373e:	call   QWORD PTR [r15+0x48]
  433742:	mov    rbp,QWORD PTR [r14]
  433745:	mov    rdi,QWORD PTR [r15+0x28]
  433749:	sub    rbp,rdi
  43374c:	mov    rbx,QWORD PTR [rsp+0x10]
  433751:	mov    r12,r13
  433754:	cmp    rbp,r13
  433757:	jae    43379d <flatcc_json_printer_union_field@@Base+0x20d>
  433759:	mov    r12,r13
  43375c:	mov    rbx,QWORD PTR [rsp+0x10]
  433761:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43376b:	nop    DWORD PTR [rax+rax*1+0x0]
  433770:	mov    rsi,rbx
  433773:	mov    rdx,rbp
  433776:	call   4060e0 <memcpy@plt>
  43377b:	add    QWORD PTR [r15+0x28],rbp
  43377f:	add    rbx,rbp
  433782:	sub    r12,rbp
  433785:	xor    esi,esi
  433787:	mov    rdi,r15
  43378a:	call   QWORD PTR [r15+0x48]
  43378e:	mov    rbp,QWORD PTR [r14]
  433791:	mov    rdi,QWORD PTR [r15+0x28]
  433795:	sub    rbp,rdi
  433798:	cmp    r12,rbp
  43379b:	ja     433770 <flatcc_json_printer_union_field@@Base+0x1e0>
  43379d:	mov    rsi,rbx
  4337a0:	mov    rdx,r12
  4337a3:	call   4060e0 <memcpy@plt>
  4337a8:	mov    r13,QWORD PTR [r15+0x20]
  4337ac:	mov    rax,QWORD PTR [r15+0x28]
  4337b0:	lea    rdi,[rax+r12*1]
  4337b4:	mov    QWORD PTR [r15+0x28],rdi
  4337b8:	add    rax,r12
  4337bb:	add    rax,0x5
  4337bf:	cmp    rax,r13
  4337c2:	jae    4337e4 <flatcc_json_printer_union_field@@Base+0x254>
  4337c4:	mov    BYTE PTR [rdi+0x4],0x65
  4337c8:	mov    DWORD PTR [rdi],0x7079745f
  4337ce:	mov    ebp,0x5
  4337d3:	mov    r12,QWORD PTR [rsp+0x20]
  4337d8:	mov    r14,QWORD PTR [rsp+0x10]
  4337dd:	mov    r13b,BYTE PTR [rsp+0xf]
  4337e2:	jmp    433862 <flatcc_json_printer_union_field@@Base+0x2d2>
  4337e4:	cmp    rdi,r13
  4337e7:	jb     4337f9 <flatcc_json_printer_union_field@@Base+0x269>
  4337e9:	xor    esi,esi
  4337eb:	mov    rdi,r15
  4337ee:	call   QWORD PTR [r15+0x48]
  4337f2:	mov    r13,QWORD PTR [r14]
  4337f5:	mov    rdi,QWORD PTR [r15+0x28]
  4337f9:	mov    r12,QWORD PTR [rsp+0x20]
  4337fe:	sub    r13,rdi
  433801:	lea    rbx,[rip+0x9364]        # 43cb6c <flatcc_builder_padding_base@@Base+0x333c>
  433808:	mov    ebp,0x5
  43380d:	cmp    r13,0x4
  433811:	ja     43384d <flatcc_json_printer_union_field@@Base+0x2bd>
  433813:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43381d:	nop    DWORD PTR [rax]
  433820:	mov    rsi,rbx
  433823:	mov    rdx,r13
  433826:	call   4060e0 <memcpy@plt>
  43382b:	add    QWORD PTR [r15+0x28],r13
  43382f:	add    rbx,r13
  433832:	sub    rbp,r13
  433835:	xor    esi,esi
  433837:	mov    rdi,r15
  43383a:	call   QWORD PTR [r15+0x48]
  43383e:	mov    r13,QWORD PTR [r14]
  433841:	mov    rdi,QWORD PTR [r15+0x28]
  433845:	sub    r13,rdi
  433848:	cmp    rbp,r13
  43384b:	ja     433820 <flatcc_json_printer_union_field@@Base+0x290>
  43384d:	mov    r14,QWORD PTR [rsp+0x10]
  433852:	mov    r13b,BYTE PTR [rsp+0xf]
  433857:	mov    rsi,rbx
  43385a:	mov    rdx,rbp
  43385d:	call   4060e0 <memcpy@plt>
  433862:	mov    rax,QWORD PTR [r15+0x28]
  433866:	lea    rcx,[rax+rbp*1]
  43386a:	mov    QWORD PTR [r15+0x28],rcx
  43386e:	mov    BYTE PTR [rax+rbp*1],0x22
  433872:	mov    rax,QWORD PTR [r15+0x28]
  433876:	xor    ecx,ecx
  433878:	cmp    BYTE PTR [r15+0x32],0x1
  43387d:	adcx   rax,rcx
  433883:	lea    rcx,[rax+0x1]
  433887:	mov    QWORD PTR [r15+0x28],rcx
  43388b:	mov    BYTE PTR [rax],0x3a
  43388e:	mov    rax,QWORD PTR [r15+0x28]
  433892:	mov    BYTE PTR [rax],0x20
  433895:	mov    rdx,QWORD PTR [r15+0x28]
  433899:	cmp    BYTE PTR [r15+0x31],0x1
  43389e:	sbb    rdx,0xffffffffffffffff
  4338a2:	mov    QWORD PTR [r15+0x28],rdx
  4338a6:	cmp    BYTE PTR [r15+0x33],0x0
  4338ab:	je     4338ed <flatcc_json_printer_union_field@@Base+0x35d>
  4338ad:	cmp    r13b,0x64
  4338b1:	jb     4338fa <flatcc_json_printer_union_field@@Base+0x36a>
  4338b3:	mov    BYTE PTR [rdx+0x3],0x0
  4338b7:	movzx  eax,r13b
  4338bb:	lea    ecx,[rax+rax*4]
  4338be:	lea    ecx,[rax+rcx*8]
  4338c1:	shr    ecx,0xc
  4338c4:	mov    bl,0x64
  4338c6:	mov    eax,ecx
  4338c8:	mul    bl
  4338ca:	mov    ebx,r13d
  4338cd:	sub    bl,al
  4338cf:	movzx  eax,bl
  4338d2:	lea    rsi,[rip+0x95d7]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  4338d9:	movzx  eax,WORD PTR [rsi+rax*2]
  4338dd:	mov    WORD PTR [rdx+0x1],ax
  4338e1:	or     cl,0x30
  4338e4:	mov    BYTE PTR [rdx],cl
  4338e6:	mov    eax,0x3
  4338eb:	jmp    433942 <flatcc_json_printer_union_field@@Base+0x3b2>
  4338ed:	movzx  esi,r13b
  4338f1:	mov    rdi,r15
  4338f4:	call   QWORD PTR [rsp+0x28]
  4338f8:	jmp    433946 <flatcc_json_printer_union_field@@Base+0x3b6>
  4338fa:	cmp    r13b,0xa
  4338fe:	jb     433932 <flatcc_json_printer_union_field@@Base+0x3a2>
  433900:	mov    BYTE PTR [rdx+0x2],0x0
  433904:	movzx  eax,r13b
  433908:	lea    ecx,[rax+rax*4]
  43390b:	lea    eax,[rax+rcx*8]
  43390e:	shr    eax,0xc
  433911:	mov    cl,0x64
  433913:	mul    cl
  433915:	mov    ecx,r13d
  433918:	sub    cl,al
  43391a:	movzx  eax,cl
  43391d:	lea    rcx,[rip+0x958c]        # 43ceb0 <flatcc_builder_padding_base@@Base+0x3680>
  433924:	movzx  eax,WORD PTR [rcx+rax*2]
  433928:	mov    WORD PTR [rdx],ax
  43392b:	mov    eax,0x2
  433930:	jmp    433942 <flatcc_json_printer_union_field@@Base+0x3b2>
  433932:	mov    BYTE PTR [rdx+0x1],0x0
  433936:	mov    eax,r13d
  433939:	add    al,0x30
  43393b:	mov    BYTE PTR [rdx],al
  43393d:	mov    eax,0x1
  433942:	add    QWORD PTR [r15+0x28],rax
  433946:	mov    rdx,QWORD PTR [rsp+0x18]
  43394b:	test   r13b,r13b
  43394e:	je     43399b <flatcc_json_printer_union_field@@Base+0x40b>
  433950:	mov    rsi,r14
  433953:	mov    r14,QWORD PTR [rsp+0x80]
  43395b:	lea    rbx,[rsp+0x38]
  433960:	mov    rax,QWORD PTR [r15+0x28]
  433964:	lea    rcx,[rax+0x1]
  433968:	mov    QWORD PTR [r15+0x28],rcx
  43396c:	mov    BYTE PTR [rax],0x2c
  43396f:	mov    rdi,r15
  433972:	mov    rbp,rdx
  433975:	mov    rdx,QWORD PTR [rsp+0x30]
  43397a:	call   42ae90 <flatcc_json_printer_string_field@@Base+0x80>
  43397f:	mov    eax,DWORD PTR [r12+0x14]
  433984:	mov    DWORD PTR [rsp+0x40],eax
  433988:	mov    BYTE PTR [rsp+0x44],r13b
  43398d:	mov    QWORD PTR [rsp+0x38],rbp
  433992:	mov    rdi,r15
  433995:	mov    rsi,rbx
  433998:	call   r14
  43399b:	add    rsp,0x48
  43399f:	pop    rbx
  4339a0:	pop    r12
  4339a2:	pop    r13
  4339a4:	pop    r14
  4339a6:	pop    r15
  4339a8:	pop    rbp
  4339a9:	ret    
  4339aa:	nop    WORD PTR [rax+rax*1+0x0]

00000000004339b0 <flatcc_json_printer_union_table@@Base>:
  4339b0:	push   r15
  4339b2:	push   r14
  4339b4:	push   rbx
  4339b5:	sub    rsp,0x20
  4339b9:	mov    r14,rdi
  4339bc:	mov    eax,DWORD PTR [rsi+0x8]
  4339bf:	add    eax,0xffffffff
  4339c2:	je     433ac0 <flatcc_json_printer_union_table@@Base+0x110>
  4339c8:	mov    rcx,QWORD PTR [rsi]
  4339cb:	mov    esi,DWORD PTR [rcx]
  4339cd:	add    rsi,rcx
  4339d0:	add    DWORD PTR [r14+0x38],0x1
  4339d5:	mov    rcx,QWORD PTR [r14+0x28]
  4339d9:	lea    rdi,[rcx+0x1]
  4339dd:	mov    QWORD PTR [r14+0x28],rdi
  4339e1:	mov    BYTE PTR [rcx],0x7b
  4339e4:	mov    DWORD PTR [rsp+0x18],0x0
  4339ec:	mov    DWORD PTR [rsp+0x14],eax
  4339f0:	mov    QWORD PTR [rsp],rsi
  4339f4:	movsxd rax,DWORD PTR [rsi]
  4339f7:	sub    rsi,rax
  4339fa:	mov    QWORD PTR [rsp+0x8],rsi
  4339ff:	movzx  eax,WORD PTR [rsi]
  433a02:	mov    DWORD PTR [rsp+0x10],eax
  433a06:	mov    rsi,rsp
  433a09:	mov    rdi,r14
  433a0c:	call   rdx
  433a0e:	cmp    BYTE PTR [r14+0x31],0x0
  433a13:	mov    r15,QWORD PTR [r14+0x28]
  433a17:	je     433ab2 <flatcc_json_printer_union_table@@Base+0x102>
  433a1d:	lea    rax,[r15+0x1]
  433a21:	mov    QWORD PTR [r14+0x28],rax
  433a25:	mov    BYTE PTR [r15],0xa
  433a29:	movsxd rax,DWORD PTR [r14+0x38]
  433a2d:	add    rax,0xffffffffffffffff
  433a31:	mov    DWORD PTR [r14+0x38],eax
  433a35:	movzx  r15d,BYTE PTR [r14+0x31]
  433a3a:	imul   r15,rax
  433a3e:	mov    rbx,QWORD PTR [r14+0x20]
  433a42:	mov    rdi,QWORD PTR [r14+0x28]
  433a46:	lea    rax,[rdi+r15*1]
  433a4a:	cmp    rax,rbx
  433a4d:	jbe    433a9d <flatcc_json_printer_union_table@@Base+0xed>
  433a4f:	cmp    rdi,rbx
  433a52:	jb     433a65 <flatcc_json_printer_union_table@@Base+0xb5>
  433a54:	xor    esi,esi
  433a56:	mov    rdi,r14
  433a59:	call   QWORD PTR [r14+0x48]
  433a5d:	mov    rbx,QWORD PTR [r14+0x20]
  433a61:	mov    rdi,QWORD PTR [r14+0x28]
  433a65:	sub    rbx,rdi
  433a68:	cmp    rbx,r15
  433a6b:	jae    433a9d <flatcc_json_printer_union_table@@Base+0xed>
  433a6d:	nop    DWORD PTR [rax]
  433a70:	mov    esi,0x20
  433a75:	mov    rdx,rbx
  433a78:	call   406080 <memset@plt>
  433a7d:	add    QWORD PTR [r14+0x28],rbx
  433a81:	sub    r15,rbx
  433a84:	xor    esi,esi
  433a86:	mov    rdi,r14
  433a89:	call   QWORD PTR [r14+0x48]
  433a8d:	mov    rbx,QWORD PTR [r14+0x20]
  433a91:	mov    rdi,QWORD PTR [r14+0x28]
  433a95:	sub    rbx,rdi
  433a98:	cmp    r15,rbx
  433a9b:	ja     433a70 <flatcc_json_printer_union_table@@Base+0xc0>
  433a9d:	mov    esi,0x20
  433aa2:	mov    rdx,r15
  433aa5:	call   406080 <memset@plt>
  433aaa:	add    r15,QWORD PTR [r14+0x28]
  433aae:	mov    QWORD PTR [r14+0x28],r15
  433ab2:	lea    rax,[r15+0x1]
  433ab6:	mov    QWORD PTR [r14+0x28],rax
  433aba:	mov    BYTE PTR [r15],0x7d
  433abe:	jmp    433acf <flatcc_json_printer_union_table@@Base+0x11f>
  433ac0:	cmp    DWORD PTR [r14+0x3c],0x0
  433ac5:	jne    433acf <flatcc_json_printer_union_table@@Base+0x11f>
  433ac7:	mov    DWORD PTR [r14+0x3c],0x2
  433acf:	add    rsp,0x20
  433ad3:	pop    rbx
  433ad4:	pop    r14
  433ad6:	pop    r15
  433ad8:	ret    
  433ad9:	nop    DWORD PTR [rax+0x0]

0000000000433ae0 <flatcc_json_printer_union_struct@@Base>:
  433ae0:	push   r15
  433ae2:	push   r14
  433ae4:	push   rbx
  433ae5:	mov    r14,rdi
  433ae8:	add    DWORD PTR [rdi+0x38],0x1
  433aec:	mov    rax,QWORD PTR [rdi+0x28]
  433af0:	lea    rcx,[rax+0x1]
  433af4:	mov    QWORD PTR [rdi+0x28],rcx
  433af8:	mov    BYTE PTR [rax],0x7b
  433afb:	mov    rax,QWORD PTR [rsi]
  433afe:	mov    esi,DWORD PTR [rax]
  433b00:	add    rsi,rax
  433b03:	call   rdx
  433b05:	cmp    BYTE PTR [r14+0x31],0x0
  433b0a:	mov    r15,QWORD PTR [r14+0x28]
  433b0e:	je     433bb2 <flatcc_json_printer_union_struct@@Base+0xd2>
  433b14:	lea    rax,[r15+0x1]
  433b18:	mov    QWORD PTR [r14+0x28],rax
  433b1c:	mov    BYTE PTR [r15],0xa
  433b20:	movsxd rax,DWORD PTR [r14+0x38]
  433b24:	add    rax,0xffffffffffffffff
  433b28:	mov    DWORD PTR [r14+0x38],eax
  433b2c:	movzx  r15d,BYTE PTR [r14+0x31]
  433b31:	imul   r15,rax
  433b35:	mov    rbx,QWORD PTR [r14+0x20]
  433b39:	mov    rdi,QWORD PTR [r14+0x28]
  433b3d:	lea    rax,[rdi+r15*1]
  433b41:	cmp    rax,rbx
  433b44:	jbe    433b9d <flatcc_json_printer_union_struct@@Base+0xbd>
  433b46:	cmp    rdi,rbx
  433b49:	jb     433b5c <flatcc_json_printer_union_struct@@Base+0x7c>
  433b4b:	xor    esi,esi
  433b4d:	mov    rdi,r14
  433b50:	call   QWORD PTR [r14+0x48]
  433b54:	mov    rbx,QWORD PTR [r14+0x20]
  433b58:	mov    rdi,QWORD PTR [r14+0x28]
  433b5c:	sub    rbx,rdi
  433b5f:	cmp    rbx,r15
  433b62:	jae    433b9d <flatcc_json_printer_union_struct@@Base+0xbd>
  433b64:	nop    WORD PTR cs:[rax+rax*1+0x0]
  433b6e:	xchg   ax,ax
  433b70:	mov    esi,0x20
  433b75:	mov    rdx,rbx
  433b78:	call   406080 <memset@plt>
  433b7d:	add    QWORD PTR [r14+0x28],rbx
  433b81:	sub    r15,rbx
  433b84:	xor    esi,esi
  433b86:	mov    rdi,r14
  433b89:	call   QWORD PTR [r14+0x48]
  433b8d:	mov    rbx,QWORD PTR [r14+0x20]
  433b91:	mov    rdi,QWORD PTR [r14+0x28]
  433b95:	sub    rbx,rdi
  433b98:	cmp    r15,rbx
  433b9b:	ja     433b70 <flatcc_json_printer_union_struct@@Base+0x90>
  433b9d:	mov    esi,0x20
  433ba2:	mov    rdx,r15
  433ba5:	call   406080 <memset@plt>
  433baa:	add    r15,QWORD PTR [r14+0x28]
  433bae:	mov    QWORD PTR [r14+0x28],r15
  433bb2:	lea    rax,[r15+0x1]
  433bb6:	mov    QWORD PTR [r14+0x28],rax
  433bba:	mov    BYTE PTR [r15],0x7d
  433bbe:	pop    rbx
  433bbf:	pop    r14
  433bc1:	pop    r15
  433bc3:	ret    
  433bc4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  433bce:	xchg   ax,ax

0000000000433bd0 <flatcc_json_printer_union_string@@Base>:
  433bd0:	mov    rax,QWORD PTR [rsi]
  433bd3:	mov    ecx,DWORD PTR [rax]
  433bd5:	mov    edx,DWORD PTR [rax+rcx*1]
  433bd8:	lea    rsi,[rax+rcx*1]
  433bdc:	add    rsi,0x4
  433be0:	jmp    429ca0 <flatcc_json_printer_string@@Base+0x10>
  433be5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  433bef:	nop

0000000000433bf0 <flatcc_json_printer_embedded_struct_field@@Base>:
  433bf0:	push   r15
  433bf2:	push   r14
  433bf4:	push   r12
  433bf6:	push   rbx
  433bf7:	push   rax
  433bf8:	mov    r15,rcx
  433bfb:	mov    rbx,rdx
  433bfe:	mov    r14,rdi
  433c01:	mov    r12,QWORD PTR [rsp+0x30]
  433c06:	test   esi,esi
  433c08:	je     433c19 <flatcc_json_printer_embedded_struct_field@@Base+0x29>
  433c0a:	mov    rax,QWORD PTR [r14+0x28]
  433c0e:	lea    rcx,[rax+0x1]
  433c12:	mov    QWORD PTR [r14+0x28],rcx
  433c16:	mov    BYTE PTR [rax],0x2c
  433c19:	movsxd rdx,r9d
  433c1c:	mov    rdi,r14
  433c1f:	mov    rsi,r8
  433c22:	call   42ae90 <flatcc_json_printer_string_field@@Base+0x80>
  433c27:	add    DWORD PTR [r14+0x38],0x1
  433c2c:	mov    rax,QWORD PTR [r14+0x28]
  433c30:	lea    rcx,[rax+0x1]
  433c34:	mov    QWORD PTR [r14+0x28],rcx
  433c38:	mov    BYTE PTR [rax],0x7b
  433c3b:	add    rbx,r15
  433c3e:	mov    rdi,r14
  433c41:	mov    rsi,rbx
  433c44:	call   r12
  433c47:	cmp    BYTE PTR [r14+0x31],0x0
  433c4c:	mov    r15,QWORD PTR [r14+0x28]
  433c50:	je     433cf2 <flatcc_json_printer_embedded_struct_field@@Base+0x102>
  433c56:	lea    rax,[r15+0x1]
  433c5a:	mov    QWORD PTR [r14+0x28],rax
  433c5e:	mov    BYTE PTR [r15],0xa
  433c62:	movsxd rax,DWORD PTR [r14+0x38]
  433c66:	add    rax,0xffffffffffffffff
  433c6a:	mov    DWORD PTR [r14+0x38],eax
  433c6e:	movzx  r15d,BYTE PTR [r14+0x31]
  433c73:	imul   r15,rax
  433c77:	mov    rbx,QWORD PTR [r14+0x20]
  433c7b:	mov    rdi,QWORD PTR [r14+0x28]
  433c7f:	lea    rax,[rdi+r15*1]
  433c83:	cmp    rax,rbx
  433c86:	jbe    433cdd <flatcc_json_printer_embedded_struct_field@@Base+0xed>
  433c88:	cmp    rdi,rbx
  433c8b:	jb     433c9e <flatcc_json_printer_embedded_struct_field@@Base+0xae>
  433c8d:	xor    esi,esi
  433c8f:	mov    rdi,r14
  433c92:	call   QWORD PTR [r14+0x48]
  433c96:	mov    rbx,QWORD PTR [r14+0x20]
  433c9a:	mov    rdi,QWORD PTR [r14+0x28]
  433c9e:	sub    rbx,rdi
  433ca1:	cmp    rbx,r15
  433ca4:	jae    433cdd <flatcc_json_printer_embedded_struct_field@@Base+0xed>
  433ca6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  433cb0:	mov    esi,0x20
  433cb5:	mov    rdx,rbx
  433cb8:	call   406080 <memset@plt>
  433cbd:	add    QWORD PTR [r14+0x28],rbx
  433cc1:	sub    r15,rbx
  433cc4:	xor    esi,esi
  433cc6:	mov    rdi,r14
  433cc9:	call   QWORD PTR [r14+0x48]
  433ccd:	mov    rbx,QWORD PTR [r14+0x20]
  433cd1:	mov    rdi,QWORD PTR [r14+0x28]
  433cd5:	sub    rbx,rdi
  433cd8:	cmp    r15,rbx
  433cdb:	ja     433cb0 <flatcc_json_printer_embedded_struct_field@@Base+0xc0>
  433cdd:	mov    esi,0x20
  433ce2:	mov    rdx,r15
  433ce5:	call   406080 <memset@plt>
  433cea:	add    r15,QWORD PTR [r14+0x28]
  433cee:	mov    QWORD PTR [r14+0x28],r15
  433cf2:	lea    rax,[r15+0x1]
  433cf6:	mov    QWORD PTR [r14+0x28],rax
  433cfa:	mov    BYTE PTR [r15],0x7d
  433cfe:	add    rsp,0x8
  433d02:	pop    rbx
  433d03:	pop    r12
  433d05:	pop    r14
  433d07:	pop    r15
  433d09:	ret    
  433d0a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000433d10 <flatcc_json_printer_struct_field@@Base>:
  433d10:	push   r15
  433d12:	push   r14
  433d14:	push   rbx
  433d15:	lea    eax,[rdx+rdx*1]
  433d18:	add    eax,0x4
  433d1b:	cmp    eax,DWORD PTR [rsi+0x10]
  433d1e:	jge    433e3e <flatcc_json_printer_struct_field@@Base+0x12e>
  433d24:	mov    rdx,QWORD PTR [rsi+0x8]
  433d28:	mov    eax,eax
  433d2a:	movzx  ebx,WORD PTR [rdx+rax*1]
  433d2e:	test   rbx,rbx
  433d31:	je     433e3e <flatcc_json_printer_struct_field@@Base+0x12e>
  433d37:	add    rbx,QWORD PTR [rsi]
  433d3a:	je     433e3e <flatcc_json_printer_struct_field@@Base+0x12e>
  433d40:	mov    r15,r9
  433d43:	mov    r14,rdi
  433d46:	mov    eax,DWORD PTR [rsi+0x18]
  433d49:	lea    edx,[rax+0x1]
  433d4c:	mov    DWORD PTR [rsi+0x18],edx
  433d4f:	test   eax,eax
  433d51:	je     433d62 <flatcc_json_printer_struct_field@@Base+0x52>
  433d53:	mov    rax,QWORD PTR [r14+0x28]
  433d57:	lea    rdx,[rax+0x1]
  433d5b:	mov    QWORD PTR [r14+0x28],rdx
  433d5f:	mov    BYTE PTR [rax],0x2c
  433d62:	movsxd rdx,r8d
  433d65:	mov    rdi,r14
  433d68:	mov    rsi,rcx
  433d6b:	call   42ae90 <flatcc_json_printer_string_field@@Base+0x80>
  433d70:	add    DWORD PTR [r14+0x38],0x1
  433d75:	mov    rax,QWORD PTR [r14+0x28]
  433d79:	lea    rcx,[rax+0x1]
  433d7d:	mov    QWORD PTR [r14+0x28],rcx
  433d81:	mov    BYTE PTR [rax],0x7b
  433d84:	mov    rdi,r14
  433d87:	mov    rsi,rbx
  433d8a:	call   r15
  433d8d:	cmp    BYTE PTR [r14+0x31],0x0
  433d92:	mov    r15,QWORD PTR [r14+0x28]
  433d96:	je     433e32 <flatcc_json_printer_struct_field@@Base+0x122>
  433d9c:	lea    rax,[r15+0x1]
  433da0:	mov    QWORD PTR [r14+0x28],rax
  433da4:	mov    BYTE PTR [r15],0xa
  433da8:	movsxd rax,DWORD PTR [r14+0x38]
  433dac:	add    rax,0xffffffffffffffff
  433db0:	mov    DWORD PTR [r14+0x38],eax
  433db4:	movzx  r15d,BYTE PTR [r14+0x31]
  433db9:	imul   r15,rax
  433dbd:	mov    rbx,QWORD PTR [r14+0x20]
  433dc1:	mov    rdi,QWORD PTR [r14+0x28]
  433dc5:	lea    rax,[rdi+r15*1]
  433dc9:	cmp    rax,rbx
  433dcc:	jbe    433e1d <flatcc_json_printer_struct_field@@Base+0x10d>
  433dce:	cmp    rdi,rbx
  433dd1:	jb     433de4 <flatcc_json_printer_struct_field@@Base+0xd4>
  433dd3:	xor    esi,esi
  433dd5:	mov    rdi,r14
  433dd8:	call   QWORD PTR [r14+0x48]
  433ddc:	mov    rbx,QWORD PTR [r14+0x20]
  433de0:	mov    rdi,QWORD PTR [r14+0x28]
  433de4:	sub    rbx,rdi
  433de7:	cmp    rbx,r15
  433dea:	jae    433e1d <flatcc_json_printer_struct_field@@Base+0x10d>
  433dec:	nop    DWORD PTR [rax+0x0]
  433df0:	mov    esi,0x20
  433df5:	mov    rdx,rbx
  433df8:	call   406080 <memset@plt>
  433dfd:	add    QWORD PTR [r14+0x28],rbx
  433e01:	sub    r15,rbx
  433e04:	xor    esi,esi
  433e06:	mov    rdi,r14
  433e09:	call   QWORD PTR [r14+0x48]
  433e0d:	mov    rbx,QWORD PTR [r14+0x20]
  433e11:	mov    rdi,QWORD PTR [r14+0x28]
  433e15:	sub    rbx,rdi
  433e18:	cmp    r15,rbx
  433e1b:	ja     433df0 <flatcc_json_printer_struct_field@@Base+0xe0>
  433e1d:	mov    esi,0x20
  433e22:	mov    rdx,r15
  433e25:	call   406080 <memset@plt>
  433e2a:	add    r15,QWORD PTR [r14+0x28]
  433e2e:	mov    QWORD PTR [r14+0x28],r15
  433e32:	lea    rax,[r15+0x1]
  433e36:	mov    QWORD PTR [r14+0x28],rax
  433e3a:	mov    BYTE PTR [r15],0x7d
  433e3e:	pop    rbx
  433e3f:	pop    r14
  433e41:	pop    r15
  433e43:	ret    
  433e44:	nop    WORD PTR cs:[rax+rax*1+0x0]
  433e4e:	xchg   ax,ax

0000000000433e50 <flatcc_json_printer_struct_as_root@@Base>:
  433e50:	push   r15
  433e52:	push   r14
  433e54:	push   rbx
  433e55:	sub    rsp,0x10
  433e59:	mov    r14,rdi
  433e5c:	mov    DWORD PTR [rsp+0xc],0x0
  433e64:	test   rsi,rsi
  433e67:	je     433fc8 <flatcc_json_printer_struct_as_root@@Base+0x178>
  433e6d:	cmp    rdx,0x7
  433e71:	jbe    433fc8 <flatcc_json_printer_struct_as_root@@Base+0x178>
  433e77:	mov    r15,r8
  433e7a:	mov    rbx,rsi
  433e7d:	test   rcx,rcx
  433e80:	je     433ea5 <flatcc_json_printer_struct_as_root@@Base+0x55>
  433e82:	lea    rdi,[rsp+0xc]
  433e87:	mov    edx,0x4
  433e8c:	mov    rsi,rcx
  433e8f:	call   406040 <strncpy@plt>
  433e94:	mov    eax,DWORD PTR [rsp+0xc]
  433e98:	test   eax,eax
  433e9a:	je     433ea5 <flatcc_json_printer_struct_as_root@@Base+0x55>
  433e9c:	cmp    DWORD PTR [rbx+0x4],eax
  433e9f:	jne    433ff6 <flatcc_json_printer_struct_as_root@@Base+0x1a6>
  433ea5:	add    DWORD PTR [r14+0x38],0x1
  433eaa:	mov    rax,QWORD PTR [r14+0x28]
  433eae:	lea    rcx,[rax+0x1]
  433eb2:	mov    QWORD PTR [r14+0x28],rcx
  433eb6:	mov    BYTE PTR [rax],0x7b
  433eb9:	mov    esi,DWORD PTR [rbx]
  433ebb:	add    rsi,rbx
  433ebe:	mov    rdi,r14
  433ec1:	call   r15
  433ec4:	cmp    BYTE PTR [r14+0x31],0x0
  433ec9:	mov    r15,QWORD PTR [r14+0x28]
  433ecd:	je     433f72 <flatcc_json_printer_struct_as_root@@Base+0x122>
  433ed3:	lea    rax,[r15+0x1]
  433ed7:	mov    QWORD PTR [r14+0x28],rax
  433edb:	mov    BYTE PTR [r15],0xa
  433edf:	movsxd rax,DWORD PTR [r14+0x38]
  433ee3:	add    rax,0xffffffffffffffff
  433ee7:	mov    DWORD PTR [r14+0x38],eax
  433eeb:	movzx  r15d,BYTE PTR [r14+0x31]
  433ef0:	imul   r15,rax
  433ef4:	mov    rbx,QWORD PTR [r14+0x20]
  433ef8:	mov    rdi,QWORD PTR [r14+0x28]
  433efc:	lea    rax,[rdi+r15*1]
  433f00:	cmp    rax,rbx
  433f03:	jbe    433f5d <flatcc_json_printer_struct_as_root@@Base+0x10d>
  433f05:	cmp    rdi,rbx
  433f08:	jb     433f1b <flatcc_json_printer_struct_as_root@@Base+0xcb>
  433f0a:	xor    esi,esi
  433f0c:	mov    rdi,r14
  433f0f:	call   QWORD PTR [r14+0x48]
  433f13:	mov    rbx,QWORD PTR [r14+0x20]
  433f17:	mov    rdi,QWORD PTR [r14+0x28]
  433f1b:	sub    rbx,rdi
  433f1e:	cmp    rbx,r15
  433f21:	jae    433f5d <flatcc_json_printer_struct_as_root@@Base+0x10d>
  433f23:	nop    WORD PTR cs:[rax+rax*1+0x0]
  433f2d:	nop    DWORD PTR [rax]
  433f30:	mov    esi,0x20
  433f35:	mov    rdx,rbx
  433f38:	call   406080 <memset@plt>
  433f3d:	add    QWORD PTR [r14+0x28],rbx
  433f41:	sub    r15,rbx
  433f44:	xor    esi,esi
  433f46:	mov    rdi,r14
  433f49:	call   QWORD PTR [r14+0x48]
  433f4d:	mov    rbx,QWORD PTR [r14+0x20]
  433f51:	mov    rdi,QWORD PTR [r14+0x28]
  433f55:	sub    rbx,rdi
  433f58:	cmp    r15,rbx
  433f5b:	ja     433f30 <flatcc_json_printer_struct_as_root@@Base+0xe0>
  433f5d:	mov    esi,0x20
  433f62:	mov    rdx,r15
  433f65:	call   406080 <memset@plt>
  433f6a:	add    r15,QWORD PTR [r14+0x28]
  433f6e:	mov    QWORD PTR [r14+0x28],r15
  433f72:	lea    rax,[r15+0x1]
  433f76:	mov    QWORD PTR [r14+0x28],rax
  433f7a:	mov    BYTE PTR [r15],0x7d
  433f7e:	cmp    BYTE PTR [r14+0x31],0x0
  433f83:	je     433f9b <flatcc_json_printer_struct_as_root@@Base+0x14b>
  433f85:	cmp    DWORD PTR [r14+0x38],0x0
  433f8a:	jne    433f9b <flatcc_json_printer_struct_as_root@@Base+0x14b>
  433f8c:	mov    rax,QWORD PTR [r14+0x28]
  433f90:	lea    rcx,[rax+0x1]
  433f94:	mov    QWORD PTR [r14+0x28],rcx
  433f98:	mov    BYTE PTR [rax],0xa
  433f9b:	mov    esi,0x1
  433fa0:	mov    rdi,r14
  433fa3:	call   QWORD PTR [r14+0x48]
  433fa7:	mov    eax,0xffffffff
  433fac:	cmp    DWORD PTR [r14+0x3c],0x0
  433fb1:	jne    433fbe <flatcc_json_printer_struct_as_root@@Base+0x16e>
  433fb3:	mov    eax,DWORD PTR [r14+0x28]
  433fb7:	add    eax,DWORD PTR [r14+0x18]
  433fbb:	sub    eax,DWORD PTR [r14]
  433fbe:	add    rsp,0x10
  433fc2:	pop    rbx
  433fc3:	pop    r14
  433fc5:	pop    r15
  433fc7:	ret    
  433fc8:	cmp    DWORD PTR [r14+0x3c],0x0
  433fcd:	jne    433fd7 <flatcc_json_printer_struct_as_root@@Base+0x187>
  433fcf:	mov    DWORD PTR [r14+0x3c],0x1
  433fd7:	lea    rdi,[rip+0x8e42]        # 43ce20 <flatcc_builder_padding_base@@Base+0x35f0>
  433fde:	lea    rsi,[rip+0x8a58]        # 43ca3d <flatcc_builder_padding_base@@Base+0x320d>
  433fe5:	lea    rcx,[rip+0x8e53]        # 43ce3f <flatcc_builder_padding_base@@Base+0x360f>
  433fec:	mov    edx,0x3fb
  433ff1:	call   406070 <__assert_fail@plt>
  433ff6:	cmp    DWORD PTR [r14+0x3c],0x0
  433ffb:	jne    434005 <flatcc_json_printer_struct_as_root@@Base+0x1b5>
  433ffd:	mov    DWORD PTR [r14+0x3c],0x1
  434005:	lea    rdi,[rip+0x8e82]        # 43ce8e <flatcc_builder_padding_base@@Base+0x365e>
  43400c:	lea    rsi,[rip+0x8a2a]        # 43ca3d <flatcc_builder_padding_base@@Base+0x320d>
  434013:	lea    rcx,[rip+0x8e25]        # 43ce3f <flatcc_builder_padding_base@@Base+0x360f>
  43401a:	mov    edx,0x404
  43401f:	call   406070 <__assert_fail@plt>
  434024:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43402e:	xchg   ax,ax

0000000000434030 <flatcc_json_printer_table_as_root@@Base>:
  434030:	push   r15
  434032:	push   r14
  434034:	push   rbx
  434035:	sub    rsp,0x20
  434039:	mov    r14,rdi
  43403c:	mov    DWORD PTR [rsp],0x0
  434043:	test   rsi,rsi
  434046:	je     4341c8 <flatcc_json_printer_table_as_root@@Base+0x198>
  43404c:	cmp    rdx,0x7
  434050:	jbe    4341c8 <flatcc_json_printer_table_as_root@@Base+0x198>
  434056:	mov    r15,r8
  434059:	mov    rbx,rsi
  43405c:	test   rcx,rcx
  43405f:	je     434081 <flatcc_json_printer_table_as_root@@Base+0x51>
  434061:	mov    rdi,rsp
  434064:	mov    edx,0x4
  434069:	mov    rsi,rcx
  43406c:	call   406040 <strncpy@plt>
  434071:	mov    eax,DWORD PTR [rsp]
  434074:	test   eax,eax
  434076:	je     434081 <flatcc_json_printer_table_as_root@@Base+0x51>
  434078:	cmp    DWORD PTR [rbx+0x4],eax
  43407b:	jne    4341f6 <flatcc_json_printer_table_as_root@@Base+0x1c6>
  434081:	mov    eax,DWORD PTR [rbx]
  434083:	add    DWORD PTR [r14+0x38],0x1
  434088:	lea    rcx,[rbx+rax*1]
  43408c:	mov    rdx,QWORD PTR [r14+0x28]
  434090:	lea    rsi,[rdx+0x1]
  434094:	mov    QWORD PTR [r14+0x28],rsi
  434098:	mov    BYTE PTR [rdx],0x7b
  43409b:	mov    QWORD PTR [rsp+0x14],0x63
  4340a4:	mov    QWORD PTR [rsp],rcx
  4340a8:	movsxd rax,DWORD PTR [rbx+rax*1]
  4340ac:	sub    rcx,rax
  4340af:	mov    QWORD PTR [rsp+0x8],rcx
  4340b4:	movzx  eax,WORD PTR [rcx]
  4340b7:	mov    DWORD PTR [rsp+0x10],eax
  4340bb:	mov    rsi,rsp
  4340be:	mov    rdi,r14
  4340c1:	call   r15
  4340c4:	cmp    BYTE PTR [r14+0x31],0x0
  4340c9:	mov    r15,QWORD PTR [r14+0x28]
  4340cd:	je     434172 <flatcc_json_printer_table_as_root@@Base+0x142>
  4340d3:	lea    rax,[r15+0x1]
  4340d7:	mov    QWORD PTR [r14+0x28],rax
  4340db:	mov    BYTE PTR [r15],0xa
  4340df:	movsxd rax,DWORD PTR [r14+0x38]
  4340e3:	add    rax,0xffffffffffffffff
  4340e7:	mov    DWORD PTR [r14+0x38],eax
  4340eb:	movzx  r15d,BYTE PTR [r14+0x31]
  4340f0:	imul   r15,rax
  4340f4:	mov    rbx,QWORD PTR [r14+0x20]
  4340f8:	mov    rdi,QWORD PTR [r14+0x28]
  4340fc:	lea    rax,[rdi+r15*1]
  434100:	cmp    rax,rbx
  434103:	jbe    43415d <flatcc_json_printer_table_as_root@@Base+0x12d>
  434105:	cmp    rdi,rbx
  434108:	jb     43411b <flatcc_json_printer_table_as_root@@Base+0xeb>
  43410a:	xor    esi,esi
  43410c:	mov    rdi,r14
  43410f:	call   QWORD PTR [r14+0x48]
  434113:	mov    rbx,QWORD PTR [r14+0x20]
  434117:	mov    rdi,QWORD PTR [r14+0x28]
  43411b:	sub    rbx,rdi
  43411e:	cmp    rbx,r15
  434121:	jae    43415d <flatcc_json_printer_table_as_root@@Base+0x12d>
  434123:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43412d:	nop    DWORD PTR [rax]
  434130:	mov    esi,0x20
  434135:	mov    rdx,rbx
  434138:	call   406080 <memset@plt>
  43413d:	add    QWORD PTR [r14+0x28],rbx
  434141:	sub    r15,rbx
  434144:	xor    esi,esi
  434146:	mov    rdi,r14
  434149:	call   QWORD PTR [r14+0x48]
  43414d:	mov    rbx,QWORD PTR [r14+0x20]
  434151:	mov    rdi,QWORD PTR [r14+0x28]
  434155:	sub    rbx,rdi
  434158:	cmp    r15,rbx
  43415b:	ja     434130 <flatcc_json_printer_table_as_root@@Base+0x100>
  43415d:	mov    esi,0x20
  434162:	mov    rdx,r15
  434165:	call   406080 <memset@plt>
  43416a:	add    r15,QWORD PTR [r14+0x28]
  43416e:	mov    QWORD PTR [r14+0x28],r15
  434172:	lea    rax,[r15+0x1]
  434176:	mov    QWORD PTR [r14+0x28],rax
  43417a:	mov    BYTE PTR [r15],0x7d
  43417e:	cmp    BYTE PTR [r14+0x31],0x0
  434183:	je     43419b <flatcc_json_printer_table_as_root@@Base+0x16b>
  434185:	cmp    DWORD PTR [r14+0x38],0x0
  43418a:	jne    43419b <flatcc_json_printer_table_as_root@@Base+0x16b>
  43418c:	mov    rax,QWORD PTR [r14+0x28]
  434190:	lea    rcx,[rax+0x1]
  434194:	mov    QWORD PTR [r14+0x28],rcx
  434198:	mov    BYTE PTR [rax],0xa
  43419b:	mov    esi,0x1
  4341a0:	mov    rdi,r14
  4341a3:	call   QWORD PTR [r14+0x48]
  4341a7:	mov    eax,0xffffffff
  4341ac:	cmp    DWORD PTR [r14+0x3c],0x0
  4341b1:	jne    4341be <flatcc_json_printer_table_as_root@@Base+0x18e>
  4341b3:	mov    eax,DWORD PTR [r14+0x28]
  4341b7:	add    eax,DWORD PTR [r14+0x18]
  4341bb:	sub    eax,DWORD PTR [r14]
  4341be:	add    rsp,0x20
  4341c2:	pop    rbx
  4341c3:	pop    r14
  4341c5:	pop    r15
  4341c7:	ret    
  4341c8:	cmp    DWORD PTR [r14+0x3c],0x0
  4341cd:	jne    4341d7 <flatcc_json_printer_table_as_root@@Base+0x1a7>
  4341cf:	mov    DWORD PTR [r14+0x3c],0x1
  4341d7:	lea    rdi,[rip+0x8c42]        # 43ce20 <flatcc_builder_padding_base@@Base+0x35f0>
  4341de:	lea    rsi,[rip+0x8858]        # 43ca3d <flatcc_builder_padding_base@@Base+0x320d>
  4341e5:	lea    rcx,[rip+0x8c53]        # 43ce3f <flatcc_builder_padding_base@@Base+0x360f>
  4341ec:	mov    edx,0x3fb
  4341f1:	call   406070 <__assert_fail@plt>
  4341f6:	cmp    DWORD PTR [r14+0x3c],0x0
  4341fb:	jne    434205 <flatcc_json_printer_table_as_root@@Base+0x1d5>
  4341fd:	mov    DWORD PTR [r14+0x3c],0x1
  434205:	lea    rdi,[rip+0x8c82]        # 43ce8e <flatcc_builder_padding_base@@Base+0x365e>
  43420c:	lea    rsi,[rip+0x882a]        # 43ca3d <flatcc_builder_padding_base@@Base+0x320d>
  434213:	lea    rcx,[rip+0x8c25]        # 43ce3f <flatcc_builder_padding_base@@Base+0x360f>
  43421a:	mov    edx,0x404
  43421f:	call   406070 <__assert_fail@plt>
  434224:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43422e:	xchg   ax,ax

0000000000434230 <flatcc_json_printer_struct_as_nested_root@@Base>:
  434230:	push   rbp
  434231:	push   r15
  434233:	push   r14
  434235:	push   r13
  434237:	push   r12
  434239:	push   rbx
  43423a:	push   rax
  43423b:	lea    eax,[rdx+rdx*1]
  43423e:	add    eax,0x4
  434241:	cmp    eax,DWORD PTR [rsi+0x10]
  434244:	jge    4343bd <flatcc_json_printer_struct_as_nested_root@@Base+0x18d>
  43424a:	mov    r15,rcx
  43424d:	mov    rbx,rsi
  434250:	mov    rcx,QWORD PTR [rsi+0x8]
  434254:	mov    eax,eax
  434256:	movzx  eax,WORD PTR [rcx+rax*1]
  43425a:	test   rax,rax
  43425d:	je     4343bd <flatcc_json_printer_struct_as_nested_root@@Base+0x18d>
  434263:	add    rax,QWORD PTR [rbx]
  434266:	je     4343bd <flatcc_json_printer_struct_as_nested_root@@Base+0x18d>
  43426c:	mov    r14,rdi
  43426f:	mov    ebp,DWORD PTR [rax]
  434271:	mov    ecx,DWORD PTR [rbp+rax*1+0x0]
  434275:	mov    DWORD PTR [rsp+0x4],0x0
  43427d:	cmp    ecx,0x8
  434280:	jb     4343cc <flatcc_json_printer_struct_as_nested_root@@Base+0x19c>
  434286:	add    rbp,rax
  434289:	je     4343cc <flatcc_json_printer_struct_as_nested_root@@Base+0x19c>
  43428f:	mov    r12d,r8d
  434292:	test   r9,r9
  434295:	je     4342ba <flatcc_json_printer_struct_as_nested_root@@Base+0x8a>
  434297:	lea    rdi,[rsp+0x4]
  43429c:	mov    edx,0x4
  4342a1:	mov    rsi,r9
  4342a4:	call   406040 <strncpy@plt>
  4342a9:	mov    eax,DWORD PTR [rsp+0x4]
  4342ad:	test   eax,eax
  4342af:	je     4342ba <flatcc_json_printer_struct_as_nested_root@@Base+0x8a>
  4342b1:	cmp    DWORD PTR [rbp+0x4],eax
  4342b4:	jne    4343fa <flatcc_json_printer_struct_as_nested_root@@Base+0x1ca>
  4342ba:	mov    r13,QWORD PTR [rsp+0x40]
  4342bf:	mov    eax,DWORD PTR [rbx+0x18]
  4342c2:	lea    ecx,[rax+0x1]
  4342c5:	mov    DWORD PTR [rbx+0x18],ecx
  4342c8:	test   eax,eax
  4342ca:	je     4342db <flatcc_json_printer_struct_as_nested_root@@Base+0xab>
  4342cc:	mov    rax,QWORD PTR [r14+0x28]
  4342d0:	lea    rcx,[rax+0x1]
  4342d4:	mov    QWORD PTR [r14+0x28],rcx
  4342d8:	mov    BYTE PTR [rax],0x2c
  4342db:	movsxd rdx,r12d
  4342de:	mov    rdi,r14
  4342e1:	mov    rsi,r15
  4342e4:	call   42ae90 <flatcc_json_printer_string_field@@Base+0x80>
  4342e9:	add    DWORD PTR [r14+0x38],0x1
  4342ee:	mov    rax,QWORD PTR [r14+0x28]
  4342f2:	lea    rcx,[rax+0x1]
  4342f6:	mov    QWORD PTR [r14+0x28],rcx
  4342fa:	mov    BYTE PTR [rax],0x7b
  4342fd:	mov    esi,DWORD PTR [rbp+0x0]
  434300:	add    rsi,rbp
  434303:	mov    rdi,r14
  434306:	call   r13
  434309:	cmp    BYTE PTR [r14+0x31],0x0
  43430e:	mov    rbx,QWORD PTR [r14+0x28]
  434312:	je     4343b2 <flatcc_json_printer_struct_as_nested_root@@Base+0x182>
  434318:	lea    rax,[rbx+0x1]
  43431c:	mov    QWORD PTR [r14+0x28],rax
  434320:	mov    BYTE PTR [rbx],0xa
  434323:	movsxd rax,DWORD PTR [r14+0x38]
  434327:	add    rax,0xffffffffffffffff
  43432b:	mov    DWORD PTR [r14+0x38],eax
  43432f:	movzx  ebx,BYTE PTR [r14+0x31]
  434334:	imul   rbx,rax
  434338:	mov    rbp,QWORD PTR [r14+0x20]
  43433c:	mov    rdi,QWORD PTR [r14+0x28]
  434340:	lea    rax,[rdi+rbx*1]
  434344:	cmp    rax,rbp
  434347:	jbe    43439d <flatcc_json_printer_struct_as_nested_root@@Base+0x16d>
  434349:	cmp    rdi,rbp
  43434c:	jb     43435f <flatcc_json_printer_struct_as_nested_root@@Base+0x12f>
  43434e:	xor    esi,esi
  434350:	mov    rdi,r14
  434353:	call   QWORD PTR [r14+0x48]
  434357:	mov    rbp,QWORD PTR [r14+0x20]
  43435b:	mov    rdi,QWORD PTR [r14+0x28]
  43435f:	sub    rbp,rdi
  434362:	cmp    rbp,rbx
  434365:	jae    43439d <flatcc_json_printer_struct_as_nested_root@@Base+0x16d>
  434367:	nop    WORD PTR [rax+rax*1+0x0]
  434370:	mov    esi,0x20
  434375:	mov    rdx,rbp
  434378:	call   406080 <memset@plt>
  43437d:	add    QWORD PTR [r14+0x28],rbp
  434381:	sub    rbx,rbp
  434384:	xor    esi,esi
  434386:	mov    rdi,r14
  434389:	call   QWORD PTR [r14+0x48]
  43438d:	mov    rbp,QWORD PTR [r14+0x20]
  434391:	mov    rdi,QWORD PTR [r14+0x28]
  434395:	sub    rbp,rdi
  434398:	cmp    rbx,rbp
  43439b:	ja     434370 <flatcc_json_printer_struct_as_nested_root@@Base+0x140>
  43439d:	mov    esi,0x20
  4343a2:	mov    rdx,rbx
  4343a5:	call   406080 <memset@plt>
  4343aa:	add    rbx,QWORD PTR [r14+0x28]
  4343ae:	mov    QWORD PTR [r14+0x28],rbx
  4343b2:	lea    rax,[rbx+0x1]
  4343b6:	mov    QWORD PTR [r14+0x28],rax
  4343ba:	mov    BYTE PTR [rbx],0x7d
  4343bd:	add    rsp,0x8
  4343c1:	pop    rbx
  4343c2:	pop    r12
  4343c4:	pop    r13
  4343c6:	pop    r14
  4343c8:	pop    r15
  4343ca:	pop    rbp
  4343cb:	ret    
  4343cc:	cmp    DWORD PTR [r14+0x3c],0x0
  4343d1:	jne    4343db <flatcc_json_printer_struct_as_nested_root@@Base+0x1ab>
  4343d3:	mov    DWORD PTR [r14+0x3c],0x1
  4343db:	lea    rdi,[rip+0x8a3e]        # 43ce20 <flatcc_builder_padding_base@@Base+0x35f0>
  4343e2:	lea    rsi,[rip+0x8654]        # 43ca3d <flatcc_builder_padding_base@@Base+0x320d>
  4343e9:	lea    rcx,[rip+0x8a4f]        # 43ce3f <flatcc_builder_padding_base@@Base+0x360f>
  4343f0:	mov    edx,0x3fb
  4343f5:	call   406070 <__assert_fail@plt>
  4343fa:	cmp    DWORD PTR [r14+0x3c],0x0
  4343ff:	jne    434409 <flatcc_json_printer_struct_as_nested_root@@Base+0x1d9>
  434401:	mov    DWORD PTR [r14+0x3c],0x1
  434409:	lea    rdi,[rip+0x8a7e]        # 43ce8e <flatcc_builder_padding_base@@Base+0x365e>
  434410:	lea    rsi,[rip+0x8626]        # 43ca3d <flatcc_builder_padding_base@@Base+0x320d>
  434417:	lea    rcx,[rip+0x8a21]        # 43ce3f <flatcc_builder_padding_base@@Base+0x360f>
  43441e:	mov    edx,0x404
  434423:	call   406070 <__assert_fail@plt>
  434428:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000434430 <flatcc_json_printer_table_as_nested_root@@Base>:
  434430:	push   rbp
  434431:	push   r15
  434433:	push   r14
  434435:	push   r13
  434437:	push   r12
  434439:	push   rbx
  43443a:	sub    rsp,0x28
  43443e:	lea    eax,[rdx+rdx*1]
  434441:	add    eax,0x4
  434444:	cmp    eax,DWORD PTR [rsi+0x10]
  434447:	jge    43460e <flatcc_json_printer_table_as_nested_root@@Base+0x1de>
  43444d:	mov    r15,rcx
  434450:	mov    rbx,rsi
  434453:	mov    rcx,QWORD PTR [rsi+0x8]
  434457:	mov    eax,eax
  434459:	movzx  ebp,WORD PTR [rcx+rax*1]
  43445d:	test   rbp,rbp
  434460:	je     43460e <flatcc_json_printer_table_as_nested_root@@Base+0x1de>
  434466:	add    rbp,QWORD PTR [rbx]
  434469:	je     43460e <flatcc_json_printer_table_as_nested_root@@Base+0x1de>
  43446f:	mov    r14,rdi
  434472:	mov    r13d,DWORD PTR [rbp+0x0]
  434476:	mov    eax,DWORD PTR [r13+rbp*1+0x0]
  43447b:	mov    DWORD PTR [rsp+0x8],0x0
  434483:	cmp    eax,0x7
  434486:	jbe    43461d <flatcc_json_printer_table_as_nested_root@@Base+0x1ed>
  43448c:	mov    r12d,r8d
  43448f:	test   r9,r9
  434492:	je     4344bd <flatcc_json_printer_table_as_nested_root@@Base+0x8d>
  434494:	lea    rdi,[rsp+0x8]
  434499:	mov    edx,0x4
  43449e:	mov    rsi,r9
  4344a1:	call   406040 <strncpy@plt>
  4344a6:	mov    eax,DWORD PTR [rsp+0x8]
  4344aa:	test   eax,eax
  4344ac:	je     4344bd <flatcc_json_printer_table_as_nested_root@@Base+0x8d>
  4344ae:	mov    rcx,r13
  4344b1:	add    rcx,rbp
  4344b4:	cmp    DWORD PTR [rcx+0x8],eax
  4344b7:	jne    43464b <flatcc_json_printer_table_as_nested_root@@Base+0x21b>
  4344bd:	mov    eax,DWORD PTR [rbx+0x18]
  4344c0:	lea    ecx,[rax+0x1]
  4344c3:	mov    DWORD PTR [rbx+0x18],ecx
  4344c6:	test   eax,eax
  4344c8:	je     4344d9 <flatcc_json_printer_table_as_nested_root@@Base+0xa9>
  4344ca:	mov    rax,QWORD PTR [r14+0x28]
  4344ce:	lea    rcx,[rax+0x1]
  4344d2:	mov    QWORD PTR [r14+0x28],rcx
  4344d6:	mov    BYTE PTR [rax],0x2c
  4344d9:	movsxd rdx,r12d
  4344dc:	mov    rdi,r14
  4344df:	mov    rsi,r15
  4344e2:	call   42ae90 <flatcc_json_printer_string_field@@Base+0x80>
  4344e7:	mov    eax,DWORD PTR [rbx+0x14]
  4344ea:	add    eax,0xffffffff
  4344ed:	je     4345ff <flatcc_json_printer_table_as_nested_root@@Base+0x1cf>
  4344f3:	lea    rcx,[rbp*1+0x4]
  4344fb:	add    rcx,r13
  4344fe:	mov    rdx,QWORD PTR [rsp+0x60]
  434503:	mov    esi,DWORD PTR [rcx]
  434505:	add    rsi,rcx
  434508:	add    DWORD PTR [r14+0x38],0x1
  43450d:	mov    rcx,QWORD PTR [r14+0x28]
  434511:	lea    rdi,[rcx+0x1]
  434515:	mov    QWORD PTR [r14+0x28],rdi
  434519:	mov    BYTE PTR [rcx],0x7b
  43451c:	mov    DWORD PTR [rsp+0x20],0x0
  434524:	mov    DWORD PTR [rsp+0x1c],eax
  434528:	mov    QWORD PTR [rsp+0x8],rsi
  43452d:	movsxd rax,DWORD PTR [rsi]
  434530:	sub    rsi,rax
  434533:	mov    QWORD PTR [rsp+0x10],rsi
  434538:	movzx  eax,WORD PTR [rsi]
  43453b:	mov    DWORD PTR [rsp+0x18],eax
  43453f:	lea    rsi,[rsp+0x8]
  434544:	mov    rdi,r14
  434547:	call   rdx
  434549:	cmp    BYTE PTR [r14+0x31],0x0
  43454e:	mov    rbx,QWORD PTR [r14+0x28]
  434552:	je     4345f2 <flatcc_json_printer_table_as_nested_root@@Base+0x1c2>
  434558:	lea    rax,[rbx+0x1]
  43455c:	mov    QWORD PTR [r14+0x28],rax
  434560:	mov    BYTE PTR [rbx],0xa
  434563:	movsxd rax,DWORD PTR [r14+0x38]
  434567:	add    rax,0xffffffffffffffff
  43456b:	mov    DWORD PTR [r14+0x38],eax
  43456f:	movzx  ebx,BYTE PTR [r14+0x31]
  434574:	imul   rbx,rax
  434578:	mov    rbp,QWORD PTR [r14+0x20]
  43457c:	mov    rdi,QWORD PTR [r14+0x28]
  434580:	lea    rax,[rdi+rbx*1]
  434584:	cmp    rax,rbp
  434587:	jbe    4345dd <flatcc_json_printer_table_as_nested_root@@Base+0x1ad>
  434589:	cmp    rdi,rbp
  43458c:	jb     43459f <flatcc_json_printer_table_as_nested_root@@Base+0x16f>
  43458e:	xor    esi,esi
  434590:	mov    rdi,r14
  434593:	call   QWORD PTR [r14+0x48]
  434597:	mov    rbp,QWORD PTR [r14+0x20]
  43459b:	mov    rdi,QWORD PTR [r14+0x28]
  43459f:	sub    rbp,rdi
  4345a2:	cmp    rbp,rbx
  4345a5:	jae    4345dd <flatcc_json_printer_table_as_nested_root@@Base+0x1ad>
  4345a7:	nop    WORD PTR [rax+rax*1+0x0]
  4345b0:	mov    esi,0x20
  4345b5:	mov    rdx,rbp
  4345b8:	call   406080 <memset@plt>
  4345bd:	add    QWORD PTR [r14+0x28],rbp
  4345c1:	sub    rbx,rbp
  4345c4:	xor    esi,esi
  4345c6:	mov    rdi,r14
  4345c9:	call   QWORD PTR [r14+0x48]
  4345cd:	mov    rbp,QWORD PTR [r14+0x20]
  4345d1:	mov    rdi,QWORD PTR [r14+0x28]
  4345d5:	sub    rbp,rdi
  4345d8:	cmp    rbx,rbp
  4345db:	ja     4345b0 <flatcc_json_printer_table_as_nested_root@@Base+0x180>
  4345dd:	mov    esi,0x20
  4345e2:	mov    rdx,rbx
  4345e5:	call   406080 <memset@plt>
  4345ea:	add    rbx,QWORD PTR [r14+0x28]
  4345ee:	mov    QWORD PTR [r14+0x28],rbx
  4345f2:	lea    rax,[rbx+0x1]
  4345f6:	mov    QWORD PTR [r14+0x28],rax
  4345fa:	mov    BYTE PTR [rbx],0x7d
  4345fd:	jmp    43460e <flatcc_json_printer_table_as_nested_root@@Base+0x1de>
  4345ff:	cmp    DWORD PTR [r14+0x3c],0x0
  434604:	jne    43460e <flatcc_json_printer_table_as_nested_root@@Base+0x1de>
  434606:	mov    DWORD PTR [r14+0x3c],0x2
  43460e:	add    rsp,0x28
  434612:	pop    rbx
  434613:	pop    r12
  434615:	pop    r13
  434617:	pop    r14
  434619:	pop    r15
  43461b:	pop    rbp
  43461c:	ret    
  43461d:	cmp    DWORD PTR [r14+0x3c],0x0
  434622:	jne    43462c <flatcc_json_printer_table_as_nested_root@@Base+0x1fc>
  434624:	mov    DWORD PTR [r14+0x3c],0x1
  43462c:	lea    rdi,[rip+0x87ed]        # 43ce20 <flatcc_builder_padding_base@@Base+0x35f0>
  434633:	lea    rsi,[rip+0x8403]        # 43ca3d <flatcc_builder_padding_base@@Base+0x320d>
  43463a:	lea    rcx,[rip+0x87fe]        # 43ce3f <flatcc_builder_padding_base@@Base+0x360f>
  434641:	mov    edx,0x3fb
  434646:	call   406070 <__assert_fail@plt>
  43464b:	cmp    DWORD PTR [r14+0x3c],0x0
  434650:	jne    43465a <flatcc_json_printer_table_as_nested_root@@Base+0x22a>
  434652:	mov    DWORD PTR [r14+0x3c],0x1
  43465a:	lea    rdi,[rip+0x882d]        # 43ce8e <flatcc_builder_padding_base@@Base+0x365e>
  434661:	lea    rsi,[rip+0x83d5]        # 43ca3d <flatcc_builder_padding_base@@Base+0x320d>
  434668:	lea    rcx,[rip+0x87d0]        # 43ce3f <flatcc_builder_padding_base@@Base+0x360f>
  43466f:	mov    edx,0x404
  434674:	call   406070 <__assert_fail@plt>
  434679:	nop    DWORD PTR [rax+0x0]

0000000000434680 <flatcc_json_printer_init@@Base>:
  434680:	push   rbx
  434681:	mov    rbx,rdi
  434684:	vxorps xmm0,xmm0,xmm0
  434688:	vmovups YMMWORD PTR [rdi+0x20],ymm0
  43468d:	vmovups YMMWORD PTR [rdi],ymm0
  434691:	test   rsi,rsi
  434694:	jne    4346a0 <flatcc_json_printer_init@@Base+0x20>
  434696:	mov    rax,QWORD PTR [rip+0xf943]        # 443fe0 <stdout@GLIBC_2.2.5>
  43469d:	mov    rsi,QWORD PTR [rax]
  4346a0:	mov    QWORD PTR [rbx+0x40],rsi
  4346a4:	lea    rax,[rip+0x45]        # 4346f0 <flatcc_json_printer_init@@Base+0x70>
  4346ab:	mov    QWORD PTR [rbx+0x48],rax
  4346af:	mov    edi,0x4040
  4346b4:	vzeroupper 
  4346b7:	call   4060f0 <malloc@plt>
  4346bc:	mov    QWORD PTR [rbx],rax
  4346bf:	test   rax,rax
  4346c2:	je     4346e7 <flatcc_json_printer_init@@Base+0x67>
  4346c4:	mov    BYTE PTR [rbx+0x30],0x1
  4346c8:	vmovaps xmm0,XMMWORD PTR [rip+0x7c70]        # 43c340 <flatcc_builder_padding_base@@Base+0x2b10>
  4346d0:	vmovups XMMWORD PTR [rbx+0x8],xmm0
  4346d5:	mov    QWORD PTR [rbx+0x28],rax
  4346d9:	add    rax,0x4000
  4346df:	mov    QWORD PTR [rbx+0x20],rax
  4346e3:	xor    eax,eax
  4346e5:	pop    rbx
  4346e6:	ret    
  4346e7:	mov    eax,0xffffffff
  4346ec:	pop    rbx
  4346ed:	ret    
  4346ee:	xchg   ax,ax
  4346f0:	push   r15
  4346f2:	push   r14
  4346f4:	push   rbx
  4346f5:	mov    rbx,rdi
  4346f8:	test   esi,esi
  4346fa:	je     434702 <flatcc_json_printer_init@@Base+0x82>
  4346fc:	mov    r15,QWORD PTR [rbx+0x28]
  434700:	jmp    43470f <flatcc_json_printer_init@@Base+0x8f>
  434702:	mov    r15,QWORD PTR [rbx+0x28]
  434706:	mov    r14,r15
  434709:	sub    r14,QWORD PTR [rbx+0x20]
  43470d:	jae    434733 <flatcc_json_printer_init@@Base+0xb3>
  43470f:	mov    rdi,QWORD PTR [rbx]
  434712:	mov    rcx,QWORD PTR [rbx+0x40]
  434716:	sub    r15,rdi
  434719:	mov    edx,0x1
  43471e:	mov    rsi,r15
  434721:	call   406130 <fwrite@plt>
  434726:	mov    r14,QWORD PTR [rbx]
  434729:	mov    QWORD PTR [rbx+0x28],r14
  43472d:	add    QWORD PTR [rbx+0x18],r15
  434731:	jmp    434769 <flatcc_json_printer_init@@Base+0xe9>
  434733:	mov    rdi,QWORD PTR [rbx]
  434736:	mov    rsi,QWORD PTR [rbx+0x10]
  43473a:	mov    rcx,QWORD PTR [rbx+0x40]
  43473e:	mov    edx,0x1
  434743:	call   406130 <fwrite@plt>
  434748:	mov    rdi,QWORD PTR [rbx]
  43474b:	mov    rsi,QWORD PTR [rbx+0x10]
  43474f:	add    rsi,rdi
  434752:	mov    rdx,r14
  434755:	call   4060e0 <memcpy@plt>
  43475a:	add    r14,QWORD PTR [rbx]
  43475d:	mov    QWORD PTR [rbx+0x28],r14
  434761:	mov    rax,QWORD PTR [rbx+0x10]
  434765:	add    QWORD PTR [rbx+0x18],rax
  434769:	mov    BYTE PTR [r14],0x0
  43476d:	pop    rbx
  43476e:	pop    r14
  434770:	pop    r15
  434772:	ret    
  434773:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43477d:	nop    DWORD PTR [rax]

0000000000434780 <flatcc_json_printer_init_buffer@@Base>:
  434780:	cmp    rdx,0x3f
  434784:	jbe    4347c1 <flatcc_json_printer_init_buffer@@Base+0x41>
  434786:	vxorps xmm0,xmm0,xmm0
  43478a:	vmovups YMMWORD PTR [rdi+0x28],ymm0
  43478f:	vmovups YMMWORD PTR [rdi+0x18],ymm0
  434794:	mov    QWORD PTR [rdi],rsi
  434797:	mov    QWORD PTR [rdi+0x8],rdx
  43479b:	lea    rax,[rdx-0x40]
  43479f:	mov    QWORD PTR [rdi+0x10],rax
  4347a3:	mov    QWORD PTR [rdi+0x28],rsi
  4347a7:	lea    rax,[rsi+rdx*1-0x40]
  4347ac:	mov    QWORD PTR [rdi+0x20],rax
  4347b0:	lea    rax,[rip+0x39]        # 4347f0 <flatcc_json_printer_init_buffer@@Base+0x70>
  4347b7:	mov    QWORD PTR [rdi+0x48],rax
  4347bb:	xor    eax,eax
  4347bd:	vzeroupper 
  4347c0:	ret    
  4347c1:	push   rax
  4347c2:	lea    rdi,[rip+0x83a9]        # 43cb72 <flatcc_builder_padding_base@@Base+0x3342>
  4347c9:	lea    rsi,[rip+0x826d]        # 43ca3d <flatcc_builder_padding_base@@Base+0x320d>
  4347d0:	lea    rcx,[rip+0x83c4]        # 43cb9b <flatcc_builder_padding_base@@Base+0x336b>
  4347d7:	mov    edx,0x48d
  4347dc:	call   406070 <__assert_fail@plt>
  4347e1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4347eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4347f0:	mov    rax,QWORD PTR [rdi+0x28]
  4347f4:	cmp    rax,QWORD PTR [rdi+0x20]
  4347f8:	jb     434818 <flatcc_json_printer_init_buffer@@Base+0x98>
  4347fa:	cmp    DWORD PTR [rdi+0x3c],0x0
  4347fe:	jne    434807 <flatcc_json_printer_init_buffer@@Base+0x87>
  434800:	mov    DWORD PTR [rdi+0x3c],0x3
  434807:	mov    rcx,QWORD PTR [rdi]
  43480a:	sub    rax,rcx
  43480d:	add    QWORD PTR [rdi+0x18],rax
  434811:	mov    QWORD PTR [rdi+0x28],rcx
  434815:	mov    rax,rcx
  434818:	mov    BYTE PTR [rax],0x0
  43481b:	ret    
  43481c:	nop    DWORD PTR [rax+0x0]

0000000000434820 <flatcc_json_printer_init_dynamic_buffer@@Base>:
  434820:	push   r14
  434822:	push   rbx
  434823:	push   rax
  434824:	test   rsi,rsi
  434827:	mov    eax,0x1000
  43482c:	cmovne rax,rsi
  434830:	cmp    rax,0x40
  434834:	mov    r14d,0x40
  43483a:	cmova  r14,rax
  43483e:	mov    rbx,rdi
  434841:	vxorps xmm0,xmm0,xmm0
  434845:	vmovups YMMWORD PTR [rdi+0x28],ymm0
  43484a:	vmovups YMMWORD PTR [rdi+0x18],ymm0
  43484f:	mov    rdi,r14
  434852:	vzeroupper 
  434855:	call   4060f0 <malloc@plt>
  43485a:	mov    rcx,rax
  43485d:	mov    QWORD PTR [rbx],rax
  434860:	mov    BYTE PTR [rbx+0x30],0x1
  434864:	mov    QWORD PTR [rbx+0x8],r14
  434868:	lea    rax,[r14-0x40]
  43486c:	mov    QWORD PTR [rbx+0x10],rax
  434870:	mov    QWORD PTR [rbx+0x28],rcx
  434874:	lea    rax,[rcx+r14*1-0x40]
  434879:	mov    QWORD PTR [rbx+0x20],rax
  43487d:	lea    rax,[rip+0x2c]        # 4348b0 <flatcc_json_printer_init_dynamic_buffer@@Base+0x90>
  434884:	mov    QWORD PTR [rbx+0x48],rax
  434888:	xor    eax,eax
  43488a:	test   rcx,rcx
  43488d:	jne    43489b <flatcc_json_printer_init_dynamic_buffer@@Base+0x7b>
  43488f:	mov    DWORD PTR [rbx+0x3c],0x3
  434896:	mov    eax,0xffffffff
  43489b:	add    rsp,0x8
  43489f:	pop    rbx
  4348a0:	pop    r14
  4348a2:	ret    
  4348a3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4348ad:	nop    DWORD PTR [rax]
  4348b0:	push   r14
  4348b2:	push   rbx
  4348b3:	push   rax
  4348b4:	mov    rax,QWORD PTR [rdi+0x28]
  4348b8:	mov    r14,rax
  4348bb:	sub    r14,QWORD PTR [rdi]
  4348be:	mov    BYTE PTR [rax],0x0
  4348c1:	mov    rax,QWORD PTR [rdi+0x28]
  4348c5:	cmp    rax,QWORD PTR [rdi+0x20]
  4348c9:	jb     43492e <flatcc_json_printer_init_dynamic_buffer@@Base+0x10e>
  4348cb:	mov    rbx,rdi
  4348ce:	mov    rdi,QWORD PTR [rdi]
  4348d1:	mov    rsi,QWORD PTR [rbx+0x8]
  4348d5:	add    rsi,rsi
  4348d8:	call   406100 <realloc@plt>
  4348dd:	test   rax,rax
  4348e0:	je     434912 <flatcc_json_printer_init_dynamic_buffer@@Base+0xf2>
  4348e2:	mov    rcx,QWORD PTR [rbx+0x8]
  4348e6:	lea    rdx,[rcx+rcx*1]
  4348ea:	mov    QWORD PTR [rbx+0x8],rdx
  4348ee:	lea    rdx,[rcx+rcx*1]
  4348f2:	add    rdx,0xffffffffffffffc0
  4348f6:	mov    QWORD PTR [rbx+0x10],rdx
  4348fa:	mov    QWORD PTR [rbx],rax
  4348fd:	add    r14,rax
  434900:	mov    QWORD PTR [rbx+0x28],r14
  434904:	lea    rax,[rax+rcx*2]
  434908:	add    rax,0xffffffffffffffc0
  43490c:	mov    QWORD PTR [rbx+0x20],rax
  434910:	jmp    43492a <flatcc_json_printer_init_dynamic_buffer@@Base+0x10a>
  434912:	cmp    DWORD PTR [rbx+0x3c],0x0
  434916:	jne    43491f <flatcc_json_printer_init_dynamic_buffer@@Base+0xff>
  434918:	mov    DWORD PTR [rbx+0x3c],0x3
  43491f:	add    QWORD PTR [rbx+0x18],r14
  434923:	mov    r14,QWORD PTR [rbx]
  434926:	mov    QWORD PTR [rbx+0x28],r14
  43492a:	mov    BYTE PTR [r14],0x0
  43492e:	add    rsp,0x8
  434932:	pop    rbx
  434933:	pop    r14
  434935:	ret    
  434936:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000434940 <flatcc_json_printer_get_buffer@@Base>:
  434940:	push   r14
  434942:	push   rbx
  434943:	push   rax
  434944:	mov    r14,rsi
  434947:	mov    rbx,rdi
  43494a:	xor    esi,esi
  43494c:	call   QWORD PTR [rdi+0x48]
  43494f:	test   r14,r14
  434952:	je     434963 <flatcc_json_printer_get_buffer@@Base+0x23>
  434954:	mov    rax,QWORD PTR [rbx]
  434957:	mov    rcx,QWORD PTR [rbx+0x28]
  43495b:	sub    rcx,rax
  43495e:	mov    QWORD PTR [r14],rcx
  434961:	jmp    434966 <flatcc_json_printer_get_buffer@@Base+0x26>
  434963:	mov    rax,QWORD PTR [rbx]
  434966:	add    rsp,0x8
  43496a:	pop    rbx
  43496b:	pop    r14
  43496d:	ret    
  43496e:	xchg   ax,ax

0000000000434970 <flatcc_json_printer_finalize_dynamic_buffer@@Base>:
  434970:	push   r14
  434972:	push   rbx
  434973:	push   rax
  434974:	mov    r14,rsi
  434977:	mov    rbx,rdi
  43497a:	xor    esi,esi
  43497c:	call   QWORD PTR [rdi+0x48]
  43497f:	test   r14,r14
  434982:	je     434993 <flatcc_json_printer_finalize_dynamic_buffer@@Base+0x23>
  434984:	mov    rax,QWORD PTR [rbx]
  434987:	mov    rcx,QWORD PTR [rbx+0x28]
  43498b:	sub    rcx,rax
  43498e:	mov    QWORD PTR [r14],rcx
  434991:	jmp    434996 <flatcc_json_printer_finalize_dynamic_buffer@@Base+0x26>
  434993:	mov    rax,QWORD PTR [rbx]
  434996:	vxorps xmm0,xmm0,xmm0
  43499a:	vmovups YMMWORD PTR [rbx+0x30],ymm0
  43499f:	vmovups YMMWORD PTR [rbx+0x20],ymm0
  4349a4:	vmovups YMMWORD PTR [rbx],ymm0
  4349a8:	add    rsp,0x8
  4349ac:	pop    rbx
  4349ad:	pop    r14
  4349af:	vzeroupper 
  4349b2:	ret    
  4349b3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4349bd:	nop    DWORD PTR [rax]

00000000004349c0 <flatcc_json_printer_clear@@Base>:
  4349c0:	push   rbx
  4349c1:	mov    rbx,rdi
  4349c4:	cmp    BYTE PTR [rdi+0x30],0x0
  4349c8:	je     4349d7 <flatcc_json_printer_clear@@Base+0x17>
  4349ca:	mov    rdi,QWORD PTR [rbx]
  4349cd:	test   rdi,rdi
  4349d0:	je     4349d7 <flatcc_json_printer_clear@@Base+0x17>
  4349d2:	call   406030 <free@plt>
  4349d7:	vxorps xmm0,xmm0,xmm0
  4349db:	vmovups YMMWORD PTR [rbx+0x30],ymm0
  4349e0:	vmovups YMMWORD PTR [rbx+0x20],ymm0
  4349e5:	vmovups YMMWORD PTR [rbx],ymm0
  4349e9:	pop    rbx
  4349ea:	vzeroupper 
  4349ed:	ret    
  4349ee:	xchg   ax,ax
  4349f0:	test   rdx,rdx
  4349f3:	je     434b34 <flatcc_json_printer_clear@@Base+0x174>
  4349f9:	mov    r9,QWORD PTR [rdx]
  4349fc:	mov    r8d,ecx
  4349ff:	and    r8d,0xffffff1f
  434a06:	je     434a24 <flatcc_json_printer_clear@@Base+0x64>
  434a08:	cmp    r8d,0x1
  434a0c:	jne    434afb <flatcc_json_printer_clear@@Base+0x13b>
  434a12:	lea    r8,[rip+0x83c6]        # 43cddf <flatcc_builder_padding_base@@Base+0x35af>
  434a19:	cmp    r9,0x3
  434a1d:	jae    434a40 <flatcc_json_printer_clear@@Base+0x80>
  434a1f:	jmp    434aab <flatcc_json_printer_clear@@Base+0xeb>
  434a24:	lea    r8,[rip+0x8373]        # 43cd9e <flatcc_builder_padding_base@@Base+0x356e>
  434a2b:	cmp    r9,0x3
  434a2f:	jb     434aab <flatcc_json_printer_clear@@Base+0xeb>
  434a31:	nop    WORD PTR cs:[rax+rax*1+0x0]
  434a3b:	nop    DWORD PTR [rax+rax*1+0x0]
  434a40:	movzx  eax,BYTE PTR [rsi]
  434a43:	shr    rax,0x2
  434a47:	movzx  eax,BYTE PTR [r8+rax*1]
  434a4c:	mov    BYTE PTR [rdi],al
  434a4e:	movzx  r10d,BYTE PTR [rsi]
  434a52:	shl    r10,0x4
  434a56:	and    r10d,0x30
  434a5a:	movzx  eax,BYTE PTR [rsi+0x1]
  434a5e:	shr    rax,0x4
  434a62:	or     rax,r10
  434a65:	movzx  eax,BYTE PTR [r8+rax*1]
  434a6a:	mov    BYTE PTR [rdi+0x1],al
  434a6d:	movzx  r10d,BYTE PTR [rsi+0x1]
  434a72:	and    r10d,0xf
  434a76:	movzx  eax,BYTE PTR [rsi+0x2]
  434a7a:	shr    rax,0x6
  434a7e:	lea    rax,[rax+r10*4]
  434a82:	movzx  eax,BYTE PTR [r8+rax*1]
  434a87:	mov    BYTE PTR [rdi+0x2],al
  434a8a:	movzx  eax,BYTE PTR [rsi+0x2]
  434a8e:	and    eax,0x3f
  434a91:	movzx  eax,BYTE PTR [r8+rax*1]
  434a96:	mov    BYTE PTR [rdi+0x3],al
  434a99:	add    r9,0xfffffffffffffffd
  434a9d:	add    rdi,0x4
  434aa1:	add    rsi,0x3
  434aa5:	cmp    r9,0x2
  434aa9:	ja     434a40 <flatcc_json_printer_clear@@Base+0x80>
  434aab:	cmp    r9,0x1
  434aaf:	je     434b00 <flatcc_json_printer_clear@@Base+0x140>
  434ab1:	cmp    r9,0x2
  434ab5:	jne    434b29 <flatcc_json_printer_clear@@Base+0x169>
  434ab7:	movzx  eax,BYTE PTR [rsi]
  434aba:	shr    rax,0x2
  434abe:	mov    al,BYTE PTR [r8+rax*1]
  434ac2:	mov    BYTE PTR [rdi],al
  434ac4:	movzx  r9d,BYTE PTR [rsi]
  434ac8:	shl    r9,0x4
  434acc:	and    r9d,0x30
  434ad0:	movzx  eax,BYTE PTR [rsi+0x1]
  434ad4:	shr    rax,0x4
  434ad8:	or     rax,r9
  434adb:	mov    al,BYTE PTR [r8+rax*1]
  434adf:	mov    BYTE PTR [rdi+0x1],al
  434ae2:	movzx  eax,BYTE PTR [rsi+0x1]
  434ae6:	and    eax,0xf
  434ae9:	mov    al,BYTE PTR [r8+rax*4]
  434aed:	mov    BYTE PTR [rdi+0x2],al
  434af0:	test   cl,0x80
  434af3:	je     434b29 <flatcc_json_printer_clear@@Base+0x169>
  434af5:	mov    BYTE PTR [rdi+0x3],0x3d
  434af9:	jmp    434b29 <flatcc_json_printer_clear@@Base+0x169>
  434afb:	mov    rcx,r9
  434afe:	jmp    434b2e <flatcc_json_printer_clear@@Base+0x16e>
  434b00:	movzx  eax,BYTE PTR [rsi]
  434b03:	shr    rax,0x2
  434b07:	mov    al,BYTE PTR [r8+rax*1]
  434b0b:	mov    BYTE PTR [rdi],al
  434b0d:	movzx  eax,BYTE PTR [rsi]
  434b10:	shl    rax,0x4
  434b14:	and    eax,0x30
  434b17:	mov    al,BYTE PTR [r8+rax*1]
  434b1b:	mov    BYTE PTR [rdi+0x1],al
  434b1e:	test   cl,0x80
  434b21:	je     434b29 <flatcc_json_printer_clear@@Base+0x169>
  434b23:	mov    WORD PTR [rdi+0x2],0x3d3d
  434b29:	mov    r9,QWORD PTR [rdx]
  434b2c:	xor    ecx,ecx
  434b2e:	sub    r9,rcx
  434b31:	mov    QWORD PTR [rdx],r9
  434b34:	ret    
  434b35:	nop    WORD PTR cs:[rax+rax*1+0x0]
  434b3f:	nop

0000000000434b40 <__libc_csu_init@@Base>:
  434b40:	endbr64 
  434b44:	push   r15
  434b46:	lea    r15,[rip+0xefb3]        # 443b00 <flatcc_builder_padding_base@@Base+0xa2d0>
  434b4d:	push   r14
  434b4f:	mov    r14,rdx
  434b52:	push   r13
  434b54:	mov    r13,rsi
  434b57:	push   r12
  434b59:	mov    r12d,edi
  434b5c:	push   rbp
  434b5d:	lea    rbp,[rip+0xefa4]        # 443b08 <flatcc_builder_padding_base@@Base+0xa2d8>
  434b64:	push   rbx
  434b65:	sub    rbp,r15
  434b68:	sub    rsp,0x8
  434b6c:	call   406000 <free@plt-0x30>
  434b71:	sar    rbp,0x3
  434b75:	je     434b96 <__libc_csu_init@@Base+0x56>
  434b77:	xor    ebx,ebx
  434b79:	nop    DWORD PTR [rax+0x0]
  434b80:	mov    rdx,r14
  434b83:	mov    rsi,r13
  434b86:	mov    edi,r12d
  434b89:	call   QWORD PTR [r15+rbx*8]
  434b8d:	add    rbx,0x1
  434b91:	cmp    rbp,rbx
  434b94:	jne    434b80 <__libc_csu_init@@Base+0x40>
  434b96:	add    rsp,0x8
  434b9a:	pop    rbx
  434b9b:	pop    rbp
  434b9c:	pop    r12
  434b9e:	pop    r13
  434ba0:	pop    r14
  434ba2:	pop    r15
  434ba4:	ret    
  434ba5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000434bb0 <__libc_csu_fini@@Base>:
  434bb0:	endbr64 
  434bb4:	ret    

Disassembly of section .fini:

0000000000434bb8 <.fini>:
  434bb8:	endbr64 
  434bbc:	sub    rsp,0x8
  434bc0:	add    rsp,0x8
  434bc4:	ret    
