
../repos/prog2/1.2:     file format elf64-x86-64


Disassembly of section .init:

0000000000401000 <.init>:
  401000:	endbr64 
  401004:	sub    rsp,0x8
  401008:	mov    rax,QWORD PTR [rip+0x2fe9]        # 403ff8 <__gmon_start__>
  40100f:	test   rax,rax
  401012:	je     401016 <fclose@plt-0x1a>
  401014:	call   rax
  401016:	add    rsp,0x8
  40101a:	ret    

Disassembly of section .plt:

0000000000401020 <fclose@plt-0x10>:
  401020:	push   QWORD PTR [rip+0x2fe2]        # 404008 <_IO_stdin_used@@Base+0x2008>
  401026:	jmp    QWORD PTR [rip+0x2fe4]        # 404010 <_IO_stdin_used@@Base+0x2010>
  40102c:	nop    DWORD PTR [rax+0x0]

0000000000401030 <fclose@plt>:
  401030:	jmp    QWORD PTR [rip+0x2fe2]        # 404018 <fclose@GLIBC_2.2.5>
  401036:	push   0x0
  40103b:	jmp    401020 <fclose@plt-0x10>

0000000000401040 <printf@plt>:
  401040:	jmp    QWORD PTR [rip+0x2fda]        # 404020 <printf@GLIBC_2.2.5>
  401046:	push   0x1
  40104b:	jmp    401020 <fclose@plt-0x10>

0000000000401050 <fseek@plt>:
  401050:	jmp    QWORD PTR [rip+0x2fd2]        # 404028 <fseek@GLIBC_2.2.5>
  401056:	push   0x2
  40105b:	jmp    401020 <fclose@plt-0x10>

0000000000401060 <fopen@plt>:
  401060:	jmp    QWORD PTR [rip+0x2fca]        # 404030 <fopen@GLIBC_2.2.5>
  401066:	push   0x3
  40106b:	jmp    401020 <fclose@plt-0x10>

0000000000401070 <getc@plt>:
  401070:	jmp    QWORD PTR [rip+0x2fc2]        # 404038 <getc@GLIBC_2.2.5>
  401076:	push   0x4
  40107b:	jmp    401020 <fclose@plt-0x10>

Disassembly of section .text:

0000000000401080 <_start@@Base>:
  401080:	endbr64 
  401084:	xor    ebp,ebp
  401086:	mov    r9,rdx
  401089:	pop    rsi
  40108a:	mov    rdx,rsp
  40108d:	and    rsp,0xfffffffffffffff0
  401091:	push   rax
  401092:	push   rsp
  401093:	mov    r8,0x401b80
  40109a:	mov    rcx,0x401b10
  4010a1:	mov    rdi,0x401170
  4010a8:	call   QWORD PTR [rip+0x2f42]        # 403ff0 <__libc_start_main@GLIBC_2.2.5>
  4010ae:	hlt    
  4010af:	nop
  4010b0:	endbr64 
  4010b4:	ret    
  4010b5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4010bf:	nop
  4010c0:	mov    eax,0x404050
  4010c5:	cmp    rax,0x404050
  4010cb:	je     4010e0 <_start@@Base+0x60>
  4010cd:	mov    eax,0x0
  4010d2:	test   rax,rax
  4010d5:	je     4010e0 <_start@@Base+0x60>
  4010d7:	mov    edi,0x404050
  4010dc:	jmp    rax
  4010de:	xchg   ax,ax
  4010e0:	ret    
  4010e1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4010ec:	nop    DWORD PTR [rax+0x0]
  4010f0:	mov    esi,0x404050
  4010f5:	sub    rsi,0x404050
  4010fc:	mov    rax,rsi
  4010ff:	shr    rsi,0x3f
  401103:	sar    rax,0x3
  401107:	add    rsi,rax
  40110a:	sar    rsi,1
  40110d:	je     401120 <_start@@Base+0xa0>
  40110f:	mov    eax,0x0
  401114:	test   rax,rax
  401117:	je     401120 <_start@@Base+0xa0>
  401119:	mov    edi,0x404050
  40111e:	jmp    rax
  401120:	ret    
  401121:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40112c:	nop    DWORD PTR [rax+0x0]
  401130:	endbr64 
  401134:	cmp    BYTE PTR [rip+0x2f15],0x0        # 404050 <__bss_start@@Base>
  40113b:	jne    401150 <_start@@Base+0xd0>
  40113d:	push   rbp
  40113e:	mov    rbp,rsp
  401141:	call   4010c0 <_start@@Base+0x40>
  401146:	mov    BYTE PTR [rip+0x2f03],0x1        # 404050 <__bss_start@@Base>
  40114d:	pop    rbp
  40114e:	ret    
  40114f:	nop
  401150:	ret    
  401151:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40115c:	nop    DWORD PTR [rax+0x0]
  401160:	endbr64 
  401164:	jmp    4010f0 <_start@@Base+0x70>
  401166:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000401170 <main@@Base>:
  401170:	push   rbp
  401171:	push   r14
  401173:	push   rbx
  401174:	sub    rsp,0x9d0
  40117b:	lea    rdi,[rip+0xe82]        # 402004 <_IO_stdin_used@@Base+0x4>
  401182:	lea    rsi,[rip+0xec1]        # 40204a <_IO_stdin_used@@Base+0x4a>
  401189:	call   401060 <fopen@plt>
  40118e:	mov    rbx,rax
  401191:	mov    rdi,rax
  401194:	mov    rsi,0xffffffffffffff83
  40119b:	mov    edx,0x2
  4011a0:	call   401050 <fseek@plt>
  4011a5:	xor    ebp,ebp
  4011a7:	nop    WORD PTR [rax+rax*1+0x0]
  4011b0:	mov    rdi,rbx
  4011b3:	call   401070 <getc@plt>
  4011b8:	mov    BYTE PTR [rsp+rbp*1+0x50],al
  4011bc:	inc    rbp
  4011bf:	cmp    rbp,0x1e
  4011c3:	jne    4011b0 <main@@Base+0x40>
  4011c5:	mov    BYTE PTR [rsp+0x6e],0x0
  4011ca:	xor    ebp,ebp
  4011cc:	nop    DWORD PTR [rax+0x0]
  4011d0:	mov    rdi,rbx
  4011d3:	call   401070 <getc@plt>
  4011d8:	mov    BYTE PTR [rsp+rbp*1+0x30],al
  4011dc:	inc    rbp
  4011df:	cmp    rbp,0x1e
  4011e3:	jne    4011d0 <main@@Base+0x60>
  4011e5:	mov    BYTE PTR [rsp+0x4e],0x0
  4011ea:	xor    ebp,ebp
  4011ec:	nop    DWORD PTR [rax+0x0]
  4011f0:	mov    rdi,rbx
  4011f3:	call   401070 <getc@plt>
  4011f8:	mov    BYTE PTR [rsp+rbp*1+0x10],al
  4011fc:	inc    rbp
  4011ff:	cmp    rbp,0x1e
  401203:	jne    4011f0 <main@@Base+0x80>
  401205:	mov    BYTE PTR [rsp+0x2e],0x0
  40120a:	mov    rdi,rbx
  40120d:	call   401070 <getc@plt>
  401212:	mov    BYTE PTR [rsp+0xb],al
  401216:	mov    rdi,rbx
  401219:	call   401070 <getc@plt>
  40121e:	mov    BYTE PTR [rsp+0xc],al
  401222:	mov    rdi,rbx
  401225:	call   401070 <getc@plt>
  40122a:	mov    BYTE PTR [rsp+0xd],al
  40122e:	mov    rdi,rbx
  401231:	call   401070 <getc@plt>
  401236:	mov    BYTE PTR [rsp+0xe],al
  40123a:	mov    BYTE PTR [rsp+0xf],0x0
  40123f:	mov    rdi,rbx
  401242:	call   401070 <getc@plt>
  401247:	mov    rdi,rbx
  40124a:	call   401070 <getc@plt>
  40124f:	mov    rdi,rbx
  401252:	call   401070 <getc@plt>
  401257:	mov    rdi,rbx
  40125a:	call   401070 <getc@plt>
  40125f:	mov    rdi,rbx
  401262:	call   401070 <getc@plt>
  401267:	mov    rdi,rbx
  40126a:	call   401070 <getc@plt>
  40126f:	mov    rdi,rbx
  401272:	call   401070 <getc@plt>
  401277:	mov    rdi,rbx
  40127a:	call   401070 <getc@plt>
  40127f:	mov    rdi,rbx
  401282:	call   401070 <getc@plt>
  401287:	mov    rdi,rbx
  40128a:	call   401070 <getc@plt>
  40128f:	mov    rdi,rbx
  401292:	call   401070 <getc@plt>
  401297:	mov    rdi,rbx
  40129a:	call   401070 <getc@plt>
  40129f:	mov    rdi,rbx
  4012a2:	call   401070 <getc@plt>
  4012a7:	mov    rdi,rbx
  4012aa:	call   401070 <getc@plt>
  4012af:	mov    rdi,rbx
  4012b2:	call   401070 <getc@plt>
  4012b7:	mov    rdi,rbx
  4012ba:	call   401070 <getc@plt>
  4012bf:	mov    rdi,rbx
  4012c2:	call   401070 <getc@plt>
  4012c7:	mov    rdi,rbx
  4012ca:	call   401070 <getc@plt>
  4012cf:	mov    rdi,rbx
  4012d2:	call   401070 <getc@plt>
  4012d7:	mov    rdi,rbx
  4012da:	call   401070 <getc@plt>
  4012df:	mov    rdi,rbx
  4012e2:	call   401070 <getc@plt>
  4012e7:	mov    rdi,rbx
  4012ea:	call   401070 <getc@plt>
  4012ef:	mov    rdi,rbx
  4012f2:	call   401070 <getc@plt>
  4012f7:	mov    rdi,rbx
  4012fa:	call   401070 <getc@plt>
  4012ff:	mov    rdi,rbx
  401302:	call   401070 <getc@plt>
  401307:	mov    rdi,rbx
  40130a:	call   401070 <getc@plt>
  40130f:	mov    rdi,rbx
  401312:	call   401070 <getc@plt>
  401317:	mov    rdi,rbx
  40131a:	call   401070 <getc@plt>
  40131f:	mov    rdi,rbx
  401322:	call   401070 <getc@plt>
  401327:	mov    rdi,rbx
  40132a:	call   401070 <getc@plt>
  40132f:	mov    ebp,eax
  401331:	mov    rdi,rbx
  401334:	call   401070 <getc@plt>
  401339:	mov    r14d,eax
  40133c:	mov    WORD PTR [rsp+0x74],0x73
  401343:	mov    DWORD PTR [rsp+0x70],0x65756c42
  40134b:	movabs rax,0x2063697373616c43
  401355:	mov    QWORD PTR [rsp+0x8e],rax
  40135d:	movabs rax,0x6b636f52206369
  401367:	mov    QWORD PTR [rsp+0x93],rax
  40136f:	movabs rax,0x7972746e756f43
  401379:	mov    QWORD PTR [rsp+0xac],rax
  401381:	mov    DWORD PTR [rsp+0xca],0x636e6144
  40138c:	mov    WORD PTR [rsp+0xce],0x65
  401396:	mov    DWORD PTR [rsp+0xe8],0x63736944
  4013a1:	mov    WORD PTR [rsp+0xec],0x6f
  4013ab:	mov    DWORD PTR [rsp+0x106],0x6b6e7546
  4013b6:	mov    BYTE PTR [rsp+0x10a],0x0
  4013be:	mov    DWORD PTR [rsp+0x124],0x6e757247
  4013c9:	mov    DWORD PTR [rsp+0x127],0x65676e
  4013d4:	movabs rax,0x706f482d706948
  4013de:	mov    QWORD PTR [rsp+0x142],rax
  4013e6:	mov    BYTE PTR [rsp+0x164],0x0
  4013ee:	mov    DWORD PTR [rsp+0x160],0x7a7a614a
  4013f9:	mov    WORD PTR [rsp+0x182],0x6c
  401403:	mov    DWORD PTR [rsp+0x17e],0x6174654d
  40140e:	movabs rax,0x6567412077654e
  401418:	mov    QWORD PTR [rsp+0x19c],rax
  401420:	mov    DWORD PTR [rsp+0x1bd],0x736569
  40142b:	mov    DWORD PTR [rsp+0x1ba],0x69646c4f
  401436:	mov    WORD PTR [rsp+0x1dc],0x72
  401440:	mov    DWORD PTR [rsp+0x1d8],0x6568744f
  40144b:	mov    DWORD PTR [rsp+0x1f6],0x706f50
  401456:	mov    DWORD PTR [rsp+0x214],0x422652
  401461:	mov    DWORD PTR [rsp+0x232],0x706152
  40146c:	mov    DWORD PTR [rsp+0x250],0x67676552
  401477:	mov    DWORD PTR [rsp+0x253],0x656167
  401482:	mov    BYTE PTR [rsp+0x272],0x0
  40148a:	mov    DWORD PTR [rsp+0x26e],0x6b636f52
  401495:	mov    DWORD PTR [rsp+0x28f],0x6f6e68
  4014a0:	mov    DWORD PTR [rsp+0x28c],0x68636554
  4014ab:	movabs rax,0x6972747375646e49
  4014b5:	mov    QWORD PTR [rsp+0x2aa],rax
  4014bd:	mov    DWORD PTR [rsp+0x2b1],0x6c6169
  4014c8:	movabs rax,0x74616e7265746c41
  4014d2:	mov    QWORD PTR [rsp+0x2c8],rax
  4014da:	mov    DWORD PTR [rsp+0x2d0],0x657669
  4014e5:	mov    DWORD PTR [rsp+0x2e6],0x616b53
  4014f0:	movabs rax,0x654d206874616544
  4014fa:	mov    QWORD PTR [rsp+0x304],rax
  401502:	mov    DWORD PTR [rsp+0x30c],0x6c6174
  40150d:	mov    DWORD PTR [rsp+0x325],0x736b6e
  401518:	mov    DWORD PTR [rsp+0x322],0x6e617250
  401523:	movabs rax,0x617274646e756f53
  40152d:	mov    QWORD PTR [rsp+0x340],rax
  401535:	mov    DWORD PTR [rsp+0x347],0x6b6361
  401540:	movabs rax,0x6365542d6f727545
  40154a:	mov    QWORD PTR [rsp+0x35e],rax
  401552:	mov    DWORD PTR [rsp+0x366],0x6f6e68
  40155d:	movabs rax,0x746e6569626d41
  401567:	mov    QWORD PTR [rsp+0x37c],rax
  40156f:	movabs rax,0x706f482d70697254
  401579:	mov    QWORD PTR [rsp+0x39a],rax
  401581:	mov    BYTE PTR [rsp+0x3a2],0x0
  401589:	mov    WORD PTR [rsp+0x3bc],0x6c
  401593:	mov    DWORD PTR [rsp+0x3b8],0x61636f56
  40159e:	movabs rax,0x6e75462b7a7a614a
  4015a8:	mov    QWORD PTR [rsp+0x3d6],rax
  4015b0:	mov    WORD PTR [rsp+0x3de],0x6b
  4015ba:	mov    DWORD PTR [rsp+0x3f7],0x6e6f69
  4015c5:	mov    DWORD PTR [rsp+0x3f4],0x69737546
  4015d0:	mov    DWORD PTR [rsp+0x415],0x65636e
  4015db:	mov    DWORD PTR [rsp+0x412],0x6e617254
  4015e6:	movabs rax,0x6163697373616c43
  4015f0:	mov    QWORD PTR [rsp+0x430],rax
  4015f8:	mov    WORD PTR [rsp+0x438],0x6c
  401602:	movabs rax,0x6c61746e656d75
  40160c:	mov    QWORD PTR [rsp+0x453],rax
  401614:	movabs rax,0x656d757274736e49
  40161e:	mov    QWORD PTR [rsp+0x44e],rax
  401626:	mov    BYTE PTR [rsp+0x470],0x0
  40162e:	mov    DWORD PTR [rsp+0x46c],0x64696341
  401639:	mov    WORD PTR [rsp+0x48e],0x65
  401643:	mov    DWORD PTR [rsp+0x48a],0x73756f48
  40164e:	mov    BYTE PTR [rsp+0x4ac],0x0
  401656:	mov    DWORD PTR [rsp+0x4a8],0x656d6147
  401661:	movabs rax,0x6c4320646e756f53
  40166b:	mov    QWORD PTR [rsp+0x4c6],rax
  401673:	mov    DWORD PTR [rsp+0x4cd],0x70696c
  40167e:	mov    DWORD PTR [rsp+0x4e7],0x6c6570
  401689:	mov    DWORD PTR [rsp+0x4e4],0x70736f47
  401694:	mov    WORD PTR [rsp+0x506],0x65
  40169e:	mov    DWORD PTR [rsp+0x502],0x73696f4e
  4016a9:	movabs rax,0x6f526e7265746c41
  4016b3:	mov    QWORD PTR [rsp+0x520],rax
  4016bb:	mov    DWORD PTR [rsp+0x527],0x6b636f
  4016c6:	mov    BYTE PTR [rsp+0x542],0x0
  4016ce:	mov    DWORD PTR [rsp+0x53e],0x73736142
  4016d9:	mov    BYTE PTR [rsp+0x560],0x0
  4016e1:	mov    DWORD PTR [rsp+0x55c],0x6c756f53
  4016ec:	mov    BYTE PTR [rsp+0x57e],0x0
  4016f4:	mov    DWORD PTR [rsp+0x57a],0x6b6e7550
  4016ff:	mov    WORD PTR [rsp+0x59c],0x65
  401709:	mov    DWORD PTR [rsp+0x598],0x63617053
  401714:	movabs rax,0x697461746964654d
  40171e:	mov    QWORD PTR [rsp+0x5b6],rax
  401726:	mov    DWORD PTR [rsp+0x5bd],0x657669
  401731:	vmovups xmm0,XMMWORD PTR [rip+0x9dc]        # 402115 <_IO_stdin_used@@Base+0x115>
  401739:	vmovups XMMWORD PTR [rsp+0x5d4],xmm0
  401742:	mov    BYTE PTR [rsp+0x5e4],0x0
  40174a:	vmovups xmm0,XMMWORD PTR [rip+0x9d4]        # 402126 <_IO_stdin_used@@Base+0x126>
  401752:	vmovups XMMWORD PTR [rsp+0x5f2],xmm0
  40175b:	mov    WORD PTR [rsp+0x602],0x6b
  401765:	mov    DWORD PTR [rsp+0x613],0x63696e
  401770:	mov    DWORD PTR [rsp+0x610],0x6e687445
  40177b:	mov    DWORD PTR [rsp+0x631],0x636968
  401786:	mov    DWORD PTR [rsp+0x62e],0x68746f47
  401791:	movabs rax,0x657661776b726144
  40179b:	mov    QWORD PTR [rsp+0x64c],rax
  4017a3:	mov    BYTE PTR [rsp+0x654],0x0
  4017ab:	vmovups xmm0,XMMWORD PTR [rip+0x99c]        # 40214f <_IO_stdin_used@@Base+0x14f>
  4017b3:	vmovups XMMWORD PTR [rsp+0x66a],xmm0
  4017bc:	mov    WORD PTR [rsp+0x67a],0x6c
  4017c6:	movabs rax,0x6e6f727463656c45
  4017d0:	mov    QWORD PTR [rsp+0x688],rax
  4017d8:	mov    DWORD PTR [rsp+0x68f],0x63696e
  4017e3:	movabs rax,0x6b6c6f462d706f50
  4017ed:	mov    QWORD PTR [rsp+0x6a6],rax
  4017f5:	mov    BYTE PTR [rsp+0x6ae],0x0
  4017fd:	movabs rax,0x636e61646f727545
  401807:	mov    QWORD PTR [rsp+0x6c4],rax
  40180f:	mov    WORD PTR [rsp+0x6cc],0x65
  401819:	mov    WORD PTR [rsp+0x6e6],0x6d
  401823:	mov    DWORD PTR [rsp+0x6e2],0x61657244
  40182e:	movabs rax,0x6b636f52206e72
  401838:	mov    QWORD PTR [rsp+0x706],rax
  401840:	movabs rax,0x6e72656874756f53
  40184a:	mov    QWORD PTR [rsp+0x700],rax
  401852:	mov    DWORD PTR [rsp+0x721],0x796465
  40185d:	mov    DWORD PTR [rsp+0x71e],0x656d6f43
  401868:	mov    BYTE PTR [rsp+0x740],0x0
  401870:	mov    DWORD PTR [rsp+0x73c],0x746c7543
  40187b:	movabs rax,0x617473676e6147
  401885:	mov    QWORD PTR [rsp+0x75a],rax
  40188d:	mov    DWORD PTR [rsp+0x77b],0x303420
  401898:	mov    DWORD PTR [rsp+0x778],0x20706f54
  4018a3:	movabs rax,0x706152206e6169
  4018ad:	mov    QWORD PTR [rsp+0x79c],rax
  4018b5:	movabs rax,0x6169747369726843
  4018bf:	mov    QWORD PTR [rsp+0x796],rax
  4018c7:	movabs rax,0x6b6e75462f706f50
  4018d1:	mov    QWORD PTR [rsp+0x7b4],rax
  4018d9:	mov    BYTE PTR [rsp+0x7bc],0x0
  4018e1:	mov    DWORD PTR [rsp+0x7d5],0x656c67
  4018ec:	mov    DWORD PTR [rsp+0x7d2],0x676e754a
  4018f7:	vmovups xmm0,XMMWORD PTR [rip+0x8c5]        # 4021c4 <_IO_stdin_used@@Base+0x1c4>
  4018ff:	vmovaps XMMWORD PTR [rsp+0x7f0],xmm0
  401908:	movabs rax,0x74657261626143
  401912:	mov    QWORD PTR [rsp+0x80e],rax
  40191a:	movabs rax,0x657661572077654e
  401924:	mov    QWORD PTR [rsp+0x82c],rax
  40192c:	mov    BYTE PTR [rsp+0x834],0x0
  401934:	movabs rax,0x6564616863797350
  40193e:	mov    QWORD PTR [rsp+0x84a],rax
  401946:	mov    DWORD PTR [rsp+0x852],0x63696c
  401951:	mov    BYTE PTR [rsp+0x86c],0x0
  401959:	mov    DWORD PTR [rsp+0x868],0x65766152
  401964:	movabs rax,0x656e7574776f6853
  40196e:	mov    QWORD PTR [rsp+0x886],rax
  401976:	mov    WORD PTR [rsp+0x88e],0x73
  401980:	movabs rax,0x72656c69617254
  40198a:	mov    QWORD PTR [rsp+0x8a4],rax
  401992:	mov    WORD PTR [rsp+0x8c6],0x69
  40199c:	mov    DWORD PTR [rsp+0x8c2],0x462d6f4c
  4019a7:	mov    DWORD PTR [rsp+0x8e3],0x6c6162
  4019b2:	mov    DWORD PTR [rsp+0x8e0],0x62697254
  4019bd:	movabs rax,0x6e75502064696341
  4019c7:	mov    QWORD PTR [rsp+0x8fe],rax
  4019cf:	mov    WORD PTR [rsp+0x906],0x6b
  4019d9:	movabs rax,0x7a614a2064696341
  4019e3:	mov    QWORD PTR [rsp+0x91c],rax
  4019eb:	mov    WORD PTR [rsp+0x924],0x7a
  4019f5:	mov    WORD PTR [rsp+0x93e],0x61
  4019ff:	mov    DWORD PTR [rsp+0x93a],0x6b6c6f50
  401a0a:	mov    WORD PTR [rsp+0x95c],0x6f
  401a14:	mov    DWORD PTR [rsp+0x958],0x72746552
  401a1f:	movabs rax,0x6c61636973754d
  401a29:	mov    QWORD PTR [rsp+0x976],rax
  401a31:	movabs rax,0x522026206b636f52
  401a3b:	mov    QWORD PTR [rsp+0x994],rax
  401a43:	mov    DWORD PTR [rsp+0x99c],0x6c6c6f
  401a4e:	movabs rax,0x636f522064726148
  401a58:	mov    QWORD PTR [rsp+0x9b2],rax
  401a60:	mov    WORD PTR [rsp+0x9ba],0x6b
  401a6a:	lea    rdi,[rip+0x7ca]        # 40223b <_IO_stdin_used@@Base+0x23b>
  401a71:	lea    rsi,[rsp+0x50]
  401a76:	xor    eax,eax
  401a78:	call   401040 <printf@plt>
  401a7d:	lea    rdi,[rip+0x7c4]        # 402248 <_IO_stdin_used@@Base+0x248>
  401a84:	lea    rsi,[rsp+0x30]
  401a89:	xor    eax,eax
  401a8b:	call   401040 <printf@plt>
  401a90:	lea    rdi,[rip+0x7bf]        # 402256 <_IO_stdin_used@@Base+0x256>
  401a97:	lea    rsi,[rsp+0x10]
  401a9c:	xor    eax,eax
  401a9e:	call   401040 <printf@plt>
  401aa3:	lea    rdi,[rip+0x7b8]        # 402262 <_IO_stdin_used@@Base+0x262>
  401aaa:	lea    rsi,[rsp+0xb]
  401aaf:	xor    eax,eax
  401ab1:	call   401040 <printf@plt>
  401ab6:	movsx  esi,bpl
  401aba:	lea    rdi,[rip+0x7ab]        # 40226c <_IO_stdin_used@@Base+0x26c>
  401ac1:	xor    eax,eax
  401ac3:	call   401040 <printf@plt>
  401ac8:	movsx  rax,r14b
  401acc:	mov    rcx,rax
  401acf:	shl    rcx,0x5
  401ad3:	sub    rcx,rax
  401ad6:	sub    rcx,rax
  401ad9:	lea    rsi,[rsp+rcx*1]
  401add:	add    rsi,0x70
  401ae1:	lea    rdi,[rip+0x792]        # 40227a <_IO_stdin_used@@Base+0x27a>
  401ae8:	xor    eax,eax
  401aea:	call   401040 <printf@plt>
  401aef:	mov    rdi,rbx
  401af2:	call   401030 <fclose@plt>
  401af7:	xor    eax,eax
  401af9:	add    rsp,0x9d0
  401b00:	pop    rbx
  401b01:	pop    r14
  401b03:	pop    rbp
  401b04:	ret    
  401b05:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401b0f:	nop

0000000000401b10 <__libc_csu_init@@Base>:
  401b10:	endbr64 
  401b14:	push   r15
  401b16:	lea    r15,[rip+0x22e3]        # 403e00 <_IO_stdin_used@@Base+0x1e00>
  401b1d:	push   r14
  401b1f:	mov    r14,rdx
  401b22:	push   r13
  401b24:	mov    r13,rsi
  401b27:	push   r12
  401b29:	mov    r12d,edi
  401b2c:	push   rbp
  401b2d:	lea    rbp,[rip+0x22d4]        # 403e08 <_IO_stdin_used@@Base+0x1e08>
  401b34:	push   rbx
  401b35:	sub    rbp,r15
  401b38:	sub    rsp,0x8
  401b3c:	call   401000 <fclose@plt-0x30>
  401b41:	sar    rbp,0x3
  401b45:	je     401b66 <__libc_csu_init@@Base+0x56>
  401b47:	xor    ebx,ebx
  401b49:	nop    DWORD PTR [rax+0x0]
  401b50:	mov    rdx,r14
  401b53:	mov    rsi,r13
  401b56:	mov    edi,r12d
  401b59:	call   QWORD PTR [r15+rbx*8]
  401b5d:	add    rbx,0x1
  401b61:	cmp    rbp,rbx
  401b64:	jne    401b50 <__libc_csu_init@@Base+0x40>
  401b66:	add    rsp,0x8
  401b6a:	pop    rbx
  401b6b:	pop    rbp
  401b6c:	pop    r12
  401b6e:	pop    r13
  401b70:	pop    r14
  401b72:	pop    r15
  401b74:	ret    
  401b75:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000401b80 <__libc_csu_fini@@Base>:
  401b80:	endbr64 
  401b84:	ret    

Disassembly of section .fini:

0000000000401b88 <.fini>:
  401b88:	endbr64 
  401b8c:	sub    rsp,0x8
  401b90:	add    rsp,0x8
  401b94:	ret    
