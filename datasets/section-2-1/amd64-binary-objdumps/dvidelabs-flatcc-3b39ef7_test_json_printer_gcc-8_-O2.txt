
../repos/dvidelabs-flatcc-3b39ef7/test/json_test/test_json_printer:     file format elf64-x86-64


Disassembly of section .init:

0000000000403000 <.init>:
  403000:	endbr64 
  403004:	sub    rsp,0x8
  403008:	mov    rax,QWORD PTR [rip+0x11fe1]        # 414ff0 <__gmon_start__>
  40300f:	test   rax,rax
  403012:	je     403016 <free@plt-0x17a>
  403014:	call   rax
  403016:	add    rsp,0x8
  40301a:	ret    

Disassembly of section .plt:

0000000000403020 <.plt>:
  403020:	push   QWORD PTR [rip+0x11fe2]        # 415008 <_IO_stdin_used@@Base+0x5008>
  403026:	bnd jmp QWORD PTR [rip+0x11fe3]        # 415010 <_IO_stdin_used@@Base+0x5010>
  40302d:	nop    DWORD PTR [rax]
  403030:	endbr64 
  403034:	push   0x0
  403039:	bnd jmp 403020 <free@plt-0x170>
  40303f:	nop
  403040:	endbr64 
  403044:	push   0x1
  403049:	bnd jmp 403020 <free@plt-0x170>
  40304f:	nop
  403050:	endbr64 
  403054:	push   0x2
  403059:	bnd jmp 403020 <free@plt-0x170>
  40305f:	nop
  403060:	endbr64 
  403064:	push   0x3
  403069:	bnd jmp 403020 <free@plt-0x170>
  40306f:	nop
  403070:	endbr64 
  403074:	push   0x4
  403079:	bnd jmp 403020 <free@plt-0x170>
  40307f:	nop
  403080:	endbr64 
  403084:	push   0x5
  403089:	bnd jmp 403020 <free@plt-0x170>
  40308f:	nop
  403090:	endbr64 
  403094:	push   0x6
  403099:	bnd jmp 403020 <free@plt-0x170>
  40309f:	nop
  4030a0:	endbr64 
  4030a4:	push   0x7
  4030a9:	bnd jmp 403020 <free@plt-0x170>
  4030af:	nop
  4030b0:	endbr64 
  4030b4:	push   0x8
  4030b9:	bnd jmp 403020 <free@plt-0x170>
  4030bf:	nop
  4030c0:	endbr64 
  4030c4:	push   0x9
  4030c9:	bnd jmp 403020 <free@plt-0x170>
  4030cf:	nop
  4030d0:	endbr64 
  4030d4:	push   0xa
  4030d9:	bnd jmp 403020 <free@plt-0x170>
  4030df:	nop
  4030e0:	endbr64 
  4030e4:	push   0xb
  4030e9:	bnd jmp 403020 <free@plt-0x170>
  4030ef:	nop
  4030f0:	endbr64 
  4030f4:	push   0xc
  4030f9:	bnd jmp 403020 <free@plt-0x170>
  4030ff:	nop
  403100:	endbr64 
  403104:	push   0xd
  403109:	bnd jmp 403020 <free@plt-0x170>
  40310f:	nop
  403110:	endbr64 
  403114:	push   0xe
  403119:	bnd jmp 403020 <free@plt-0x170>
  40311f:	nop
  403120:	endbr64 
  403124:	push   0xf
  403129:	bnd jmp 403020 <free@plt-0x170>
  40312f:	nop
  403130:	endbr64 
  403134:	push   0x10
  403139:	bnd jmp 403020 <free@plt-0x170>
  40313f:	nop
  403140:	endbr64 
  403144:	push   0x11
  403149:	bnd jmp 403020 <free@plt-0x170>
  40314f:	nop
  403150:	endbr64 
  403154:	push   0x12
  403159:	bnd jmp 403020 <free@plt-0x170>
  40315f:	nop
  403160:	endbr64 
  403164:	push   0x13
  403169:	bnd jmp 403020 <free@plt-0x170>
  40316f:	nop
  403170:	endbr64 
  403174:	push   0x14
  403179:	bnd jmp 403020 <free@plt-0x170>
  40317f:	nop
  403180:	endbr64 
  403184:	push   0x15
  403189:	bnd jmp 403020 <free@plt-0x170>
  40318f:	nop

Disassembly of section .plt.sec:

0000000000403190 <free@plt>:
  403190:	endbr64 
  403194:	bnd jmp QWORD PTR [rip+0x11e7d]        # 415018 <free@GLIBC_2.2.5>
  40319b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004031a0 <strncpy@plt>:
  4031a0:	endbr64 
  4031a4:	bnd jmp QWORD PTR [rip+0x11e75]        # 415020 <strncpy@GLIBC_2.2.5>
  4031ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004031b0 <fread@plt>:
  4031b0:	endbr64 
  4031b4:	bnd jmp QWORD PTR [rip+0x11e6d]        # 415028 <fread@GLIBC_2.2.5>
  4031bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004031c0 <fclose@plt>:
  4031c0:	endbr64 
  4031c4:	bnd jmp QWORD PTR [rip+0x11e65]        # 415030 <fclose@GLIBC_2.2.5>
  4031cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004031d0 <__stack_chk_fail@plt>:
  4031d0:	endbr64 
  4031d4:	bnd jmp QWORD PTR [rip+0x11e5d]        # 415038 <__stack_chk_fail@GLIBC_2.4>
  4031db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004031e0 <rewind@plt>:
  4031e0:	endbr64 
  4031e4:	bnd jmp QWORD PTR [rip+0x11e55]        # 415040 <rewind@GLIBC_2.2.5>
  4031eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004031f0 <__assert_fail@plt>:
  4031f0:	endbr64 
  4031f4:	bnd jmp QWORD PTR [rip+0x11e4d]        # 415048 <__assert_fail@GLIBC_2.2.5>
  4031fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403200 <memset@plt>:
  403200:	endbr64 
  403204:	bnd jmp QWORD PTR [rip+0x11e45]        # 415050 <memset@GLIBC_2.2.5>
  40320b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403210 <memcmp@plt>:
  403210:	endbr64 
  403214:	bnd jmp QWORD PTR [rip+0x11e3d]        # 415058 <memcmp@GLIBC_2.2.5>
  40321b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403220 <__memcpy_chk@plt>:
  403220:	endbr64 
  403224:	bnd jmp QWORD PTR [rip+0x11e35]        # 415060 <__memcpy_chk@GLIBC_2.3.4>
  40322b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403230 <ftell@plt>:
  403230:	endbr64 
  403234:	bnd jmp QWORD PTR [rip+0x11e2d]        # 415068 <ftell@GLIBC_2.2.5>
  40323b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403240 <memcpy@plt>:
  403240:	endbr64 
  403244:	bnd jmp QWORD PTR [rip+0x11e25]        # 415070 <memcpy@GLIBC_2.14>
  40324b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403250 <malloc@plt>:
  403250:	endbr64 
  403254:	bnd jmp QWORD PTR [rip+0x11e1d]        # 415078 <malloc@GLIBC_2.2.5>
  40325b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403260 <fseek@plt>:
  403260:	endbr64 
  403264:	bnd jmp QWORD PTR [rip+0x11e15]        # 415080 <fseek@GLIBC_2.2.5>
  40326b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403270 <realloc@plt>:
  403270:	endbr64 
  403274:	bnd jmp QWORD PTR [rip+0x11e0d]        # 415088 <realloc@GLIBC_2.2.5>
  40327b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403280 <__printf_chk@plt>:
  403280:	endbr64 
  403284:	bnd jmp QWORD PTR [rip+0x11e05]        # 415090 <__printf_chk@GLIBC_2.3.4>
  40328b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403290 <memmove@plt>:
  403290:	endbr64 
  403294:	bnd jmp QWORD PTR [rip+0x11dfd]        # 415098 <memmove@GLIBC_2.2.5>
  40329b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004032a0 <fopen@plt>:
  4032a0:	endbr64 
  4032a4:	bnd jmp QWORD PTR [rip+0x11df5]        # 4150a0 <fopen@GLIBC_2.2.5>
  4032ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004032b0 <exit@plt>:
  4032b0:	endbr64 
  4032b4:	bnd jmp QWORD PTR [rip+0x11ded]        # 4150a8 <exit@GLIBC_2.2.5>
  4032bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004032c0 <fwrite@plt>:
  4032c0:	endbr64 
  4032c4:	bnd jmp QWORD PTR [rip+0x11de5]        # 4150b0 <fwrite@GLIBC_2.2.5>
  4032cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004032d0 <__fprintf_chk@plt>:
  4032d0:	endbr64 
  4032d4:	bnd jmp QWORD PTR [rip+0x11ddd]        # 4150b8 <__fprintf_chk@GLIBC_2.3.4>
  4032db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004032e0 <__sprintf_chk@plt>:
  4032e0:	endbr64 
  4032e4:	bnd jmp QWORD PTR [rip+0x11dd5]        # 4150c0 <__sprintf_chk@GLIBC_2.3.4>
  4032eb:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

00000000004032f0 <main@@Base>:
  4032f0:	endbr64 
  4032f4:	push   r12
  4032f6:	mov    r12,QWORD PTR [rip+0x11cfb]        # 414ff8 <stderr@GLIBC_2.2.5>
  4032fd:	xor    eax,eax
  4032ff:	push   rbp
  403300:	lea    rdx,[rip+0xd0d0]        # 4103d7 <_IO_stdin_used@@Base+0x3d7>
  403307:	mov    rbp,rsi
  40330a:	push   rbx
  40330b:	mov    ebx,edi
  40330d:	mov    esi,0x1
  403312:	mov    rdi,QWORD PTR [r12]
  403316:	call   4032d0 <__fprintf_chk@plt>
  40331b:	cmp    ebx,0x1
  40331e:	je     403325 <main@@Base+0x35>
  403320:	cmp    ebx,0x4
  403323:	jne    40335f <main@@Base+0x6f>
  403325:	cmp    ebx,0x4
  403328:	jne    403354 <main@@Base+0x64>
  40332a:	mov    rdx,QWORD PTR [rbp+0x8]
  40332e:	mov    rax,0x4150f0
  403335:	mov    QWORD PTR [rax],rdx
  403338:	mov    rdx,QWORD PTR [rbp+0x10]
  40333c:	mov    rax,0x4150e0
  403343:	mov    QWORD PTR [rax],rdx
  403346:	mov    rdx,QWORD PTR [rbp+0x18]
  40334a:	mov    rax,0x4150d8
  403351:	mov    QWORD PTR [rax],rdx
  403354:	pop    rbx
  403355:	pop    rbp
  403356:	xor    eax,eax
  403358:	pop    r12
  40335a:	jmp    4044d0 <test_print@@Base>
  40335f:	mov    rdi,QWORD PTR [r12]
  403363:	lea    rdx,[rip+0xd19e]        # 410508 <_IO_stdin_used@@Base+0x508>
  40336a:	mov    esi,0x1
  40336f:	xor    eax,eax
  403371:	call   4032d0 <__fprintf_chk@plt>
  403376:	mov    edi,0x1
  40337b:	call   4032b0 <exit@plt>

0000000000403380 <_start@@Base>:
  403380:	endbr64 
  403384:	xor    ebp,ebp
  403386:	mov    r9,rdx
  403389:	pop    rsi
  40338a:	mov    rdx,rsp
  40338d:	and    rsp,0xfffffffffffffff0
  403391:	push   rax
  403392:	push   rsp
  403393:	mov    r8,0x40fee0
  40339a:	mov    rcx,0x40fe70
  4033a1:	mov    rdi,0x4032f0
  4033a8:	call   QWORD PTR [rip+0x11c3a]        # 414fe8 <__libc_start_main@GLIBC_2.2.5>
  4033ae:	hlt    
  4033af:	nop
  4033b0:	endbr64 
  4033b4:	ret    
  4033b5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4033bf:	nop
  4033c0:	mov    eax,0x4150e8
  4033c5:	cmp    rax,0x4150e8
  4033cb:	je     4033e0 <_start@@Base+0x60>
  4033cd:	mov    eax,0x0
  4033d2:	test   rax,rax
  4033d5:	je     4033e0 <_start@@Base+0x60>
  4033d7:	mov    edi,0x4150e8
  4033dc:	jmp    rax
  4033de:	xchg   ax,ax
  4033e0:	ret    
  4033e1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4033ec:	nop    DWORD PTR [rax+0x0]
  4033f0:	mov    esi,0x4150e8
  4033f5:	sub    rsi,0x4150e8
  4033fc:	sar    rsi,0x3
  403400:	mov    rax,rsi
  403403:	shr    rax,0x3f
  403407:	add    rsi,rax
  40340a:	sar    rsi,1
  40340d:	je     403420 <_start@@Base+0xa0>
  40340f:	mov    eax,0x0
  403414:	test   rax,rax
  403417:	je     403420 <_start@@Base+0xa0>
  403419:	mov    edi,0x4150e8
  40341e:	jmp    rax
  403420:	ret    
  403421:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40342c:	nop    DWORD PTR [rax+0x0]
  403430:	endbr64 
  403434:	cmp    BYTE PTR [rip+0x11cad],0x0        # 4150e8 <__bss_start@@Base>
  40343b:	jne    403450 <_start@@Base+0xd0>
  40343d:	push   rbp
  40343e:	mov    rbp,rsp
  403441:	call   4033c0 <_start@@Base+0x40>
  403446:	mov    BYTE PTR [rip+0x11c9b],0x1        # 4150e8 <__bss_start@@Base>
  40344d:	pop    rbp
  40344e:	ret    
  40344f:	nop
  403450:	ret    
  403451:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40345c:	nop    DWORD PTR [rax+0x0]
  403460:	endbr64 
  403464:	jmp    4033f0 <_start@@Base+0x70>
  403466:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403470:	endbr64 
  403474:	ret    
  403475:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  403480:	endbr64 
  403484:	push   rbp
  403485:	lea    r9,[rip+0x134]        # 4035c0 <_start@@Base+0x240>
  40348c:	mov    rbp,rsi
  40348f:	push   rbx
  403490:	mov    r8d,0x15
  403496:	mov    rbx,rdi
  403499:	sub    rsp,0x8
  40349d:	lea    rcx,[rip+0xcb60]        # 410004 <_IO_stdin_used@@Base+0x4>
  4034a4:	xor    edx,edx
  4034a6:	call   40ea90 <flatcc_json_printer_table_field@@Base>
  4034ab:	mov    rsi,rbp
  4034ae:	mov    rdi,rbx
  4034b1:	lea    r9,[rip+0xb8]        # 403570 <_start@@Base+0x1f0>
  4034b8:	mov    r8d,0x16
  4034be:	lea    rcx,[rip+0xcb55]        # 41001a <_IO_stdin_used@@Base+0x1a>
  4034c5:	mov    edx,0x1
  4034ca:	call   40ea90 <flatcc_json_printer_table_field@@Base>
  4034cf:	add    rsp,0x8
  4034d3:	mov    rdi,rbx
  4034d6:	pop    rbx
  4034d7:	mov    rsi,rbp
  4034da:	lea    r9,[rip+0x3f]        # 403520 <_start@@Base+0x1a0>
  4034e1:	mov    r8d,0x16
  4034e7:	lea    rcx,[rip+0xcb43]        # 410031 <_IO_stdin_used@@Base+0x31>
  4034ee:	mov    edx,0x2
  4034f3:	pop    rbp
  4034f4:	jmp    40ea90 <flatcc_json_printer_table_field@@Base>
  4034f9:	nop    DWORD PTR [rax+0x0]
  403500:	endbr64 
  403504:	xor    r9d,r9d
  403507:	mov    r8d,0x13
  40350d:	lea    rcx,[rip+0xcb34]        # 410048 <_IO_stdin_used@@Base+0x48>
  403514:	xor    edx,edx
  403516:	jmp    4077c0 <flatcc_json_printer_int32_field@@Base>
  40351b:	nop    DWORD PTR [rax+rax*1+0x0]
  403520:	endbr64 
  403524:	push   rbp
  403525:	xor    r9d,r9d
  403528:	mov    r8d,0xf
  40352e:	push   rbx
  40352f:	lea    rcx,[rip+0xcb26]        # 41005c <_IO_stdin_used@@Base+0x5c>
  403536:	xor    edx,edx
  403538:	sub    rsp,0x8
  40353c:	mov    rbx,rdi
  40353f:	mov    rbp,rsi
  403542:	call   407970 <flatcc_json_printer_int64_field@@Base>
  403547:	add    rsp,0x8
  40354b:	mov    rdi,rbx
  40354e:	pop    rbx
  40354f:	mov    rsi,rbp
  403552:	xor    r9d,r9d
  403555:	mov    r8d,0x15
  40355b:	lea    rcx,[rip+0xcb0a]        # 41006c <_IO_stdin_used@@Base+0x6c>
  403562:	mov    edx,0x1
  403567:	pop    rbp
  403568:	jmp    407130 <flatcc_json_printer_uint32_field@@Base>
  40356d:	nop    DWORD PTR [rax]
  403570:	endbr64 
  403574:	push   rbp
  403575:	xor    r9d,r9d
  403578:	mov    r8d,0xf
  40357e:	push   rbx
  40357f:	lea    rcx,[rip+0xcad6]        # 41005c <_IO_stdin_used@@Base+0x5c>
  403586:	xor    edx,edx
  403588:	sub    rsp,0x8
  40358c:	mov    rbx,rdi
  40358f:	mov    rbp,rsi
  403592:	call   407970 <flatcc_json_printer_int64_field@@Base>
  403597:	add    rsp,0x8
  40359b:	mov    rdi,rbx
  40359e:	pop    rbx
  40359f:	mov    rsi,rbp
  4035a2:	xor    r9d,r9d
  4035a5:	mov    r8d,0x10
  4035ab:	lea    rcx,[rip+0xcad0]        # 410082 <_IO_stdin_used@@Base+0x82>
  4035b2:	mov    edx,0x1
  4035b7:	pop    rbp
  4035b8:	jmp    407130 <flatcc_json_printer_uint32_field@@Base>
  4035bd:	nop    DWORD PTR [rax]
  4035c0:	endbr64 
  4035c4:	push   rbp
  4035c5:	mov    r8d,0x4
  4035cb:	mov    rbp,rsi
  4035ce:	push   rbx
  4035cf:	lea    rcx,[rip+0xcabd]        # 410093 <_IO_stdin_used@@Base+0x93>
  4035d6:	mov    rbx,rdi
  4035d9:	sub    rsp,0x8
  4035dd:	xor    edx,edx
  4035df:	call   406940 <flatcc_json_printer_string_field@@Base>
  4035e4:	xor    r9d,r9d
  4035e7:	mov    rsi,rbp
  4035ea:	mov    rdi,rbx
  4035ed:	mov    r8d,0x9
  4035f3:	lea    rcx,[rip+0xca9e]        # 410098 <_IO_stdin_used@@Base+0x98>
  4035fa:	mov    edx,0x1
  4035ff:	call   407130 <flatcc_json_printer_uint32_field@@Base>
  403604:	mov    rsi,rbp
  403607:	mov    rdi,rbx
  40360a:	mov    r8d,0x4
  403610:	lea    rcx,[rip+0xca8b]        # 4100a2 <_IO_stdin_used@@Base+0xa2>
  403617:	mov    edx,0x2
  40361c:	call   406940 <flatcc_json_printer_string_field@@Base>
  403621:	xor    r9d,r9d
  403624:	mov    rsi,rbp
  403627:	mov    rdi,rbx
  40362a:	mov    r8d,0x8
  403630:	lea    rcx,[rip+0xca70]        # 4100a7 <_IO_stdin_used@@Base+0xa7>
  403637:	mov    edx,0x3
  40363c:	call   407970 <flatcc_json_printer_int64_field@@Base>
  403641:	mov    rsi,rbp
  403644:	mov    rdi,rbx
  403647:	mov    r8d,0x4
  40364d:	lea    rcx,[rip+0xca5c]        # 4100b0 <_IO_stdin_used@@Base+0xb0>
  403654:	mov    edx,0x4
  403659:	call   406940 <flatcc_json_printer_string_field@@Base>
  40365e:	mov    rsi,rbp
  403661:	mov    rdi,rbx
  403664:	xor    r9d,r9d
  403667:	mov    r8d,0x8
  40366d:	lea    rcx,[rip+0xca41]        # 4100b5 <_IO_stdin_used@@Base+0xb5>
  403674:	mov    edx,0x5
  403679:	call   407970 <flatcc_json_printer_int64_field@@Base>
  40367e:	mov    rsi,rbp
  403681:	mov    rdi,rbx
  403684:	xor    r9d,r9d
  403687:	mov    r8d,0x9
  40368d:	lea    rcx,[rip+0xca2a]        # 4100be <_IO_stdin_used@@Base+0xbe>
  403694:	mov    edx,0x6
  403699:	call   407130 <flatcc_json_printer_uint32_field@@Base>
  40369e:	mov    rsi,rbp
  4036a1:	mov    rdi,rbx
  4036a4:	xor    r9d,r9d
  4036a7:	mov    r8d,0x8
  4036ad:	lea    rcx,[rip+0xca14]        # 4100c8 <_IO_stdin_used@@Base+0xc8>
  4036b4:	mov    edx,0x7
  4036b9:	call   407970 <flatcc_json_printer_int64_field@@Base>
  4036be:	add    rsp,0x8
  4036c2:	mov    rdi,rbx
  4036c5:	pop    rbx
  4036c6:	mov    rsi,rbp
  4036c9:	xor    r9d,r9d
  4036cc:	mov    r8d,0x9
  4036d2:	lea    rcx,[rip+0xc9f8]        # 4100d1 <_IO_stdin_used@@Base+0xd1>
  4036d9:	mov    edx,0x8
  4036de:	pop    rbp
  4036df:	jmp    407130 <flatcc_json_printer_uint32_field@@Base>
  4036e4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4036ef:	nop
  4036f0:	endbr64 
  4036f4:	push   r12
  4036f6:	xor    edx,edx
  4036f8:	lea    r9,[rip+0xb21]        # 404220 <_start@@Base+0xea0>
  4036ff:	push   rbp
  403700:	mov    r8d,0x3
  403706:	mov    rbp,rsi
  403709:	push   rbx
  40370a:	lea    rcx,[rip+0xc9ca]        # 4100db <_IO_stdin_used@@Base+0xdb>
  403711:	mov    rbx,rdi
  403714:	call   40f3b0 <flatcc_json_printer_struct_field@@Base>
  403719:	mov    rsi,rbp
  40371c:	mov    rdi,rbx
  40371f:	mov    r9d,0x96
  403725:	mov    r8d,0x4
  40372b:	lea    rcx,[rip+0xc9ad]        # 4100df <_IO_stdin_used@@Base+0xdf>
  403732:	mov    edx,0x1
  403737:	call   407600 <flatcc_json_printer_int16_field@@Base>
  40373c:	mov    r9d,0x64
  403742:	mov    rsi,rbp
  403745:	mov    rdi,rbx
  403748:	mov    r8d,0x2
  40374e:	lea    rcx,[rip+0xc98f]        # 4100e4 <_IO_stdin_used@@Base+0xe4>
  403755:	mov    edx,0x2
  40375a:	call   407600 <flatcc_json_printer_int16_field@@Base>
  40375f:	mov    rsi,rbp
  403762:	mov    rdi,rbx
  403765:	mov    r8d,0x4
  40376b:	lea    rcx,[rip+0xc975]        # 4100e7 <_IO_stdin_used@@Base+0xe7>
  403772:	mov    edx,0x3
  403777:	call   406940 <flatcc_json_printer_string_field@@Base>
  40377c:	mov    rsi,rbp
  40377f:	mov    rdi,rbx
  403782:	mov    r8d,0x9
  403788:	lea    rcx,[rip+0xc95d]        # 4100ec <_IO_stdin_used@@Base+0xec>
  40378f:	mov    edx,0x5
  403794:	call   40acb0 <flatcc_json_printer_uint8_vector_field@@Base>
  403799:	sub    rsp,0x8
  40379d:	lea    rax,[rip+0x9ac]        # 404150 <_start@@Base+0xdd0>
  4037a4:	push   rax
  4037a5:	mov    rsi,rbp
  4037a8:	mov    rdi,rbx
  4037ab:	mov    r9d,0x8
  4037b1:	mov    r8d,0x5
  4037b7:	lea    rcx,[rip+0xc938]        # 4100f6 <_IO_stdin_used@@Base+0xf6>
  4037be:	mov    edx,0x6
  4037c3:	call   408740 <flatcc_json_printer_int8_enum_field@@Base>
  4037c8:	lea    rax,[rip+0x571]        # 403d40 <_start@@Base+0x9c0>
  4037cf:	mov    rsi,rbp
  4037d2:	mov    rdi,rbx
  4037d5:	lea    r9,[rip+0xb44]        # 404320 <_start@@Base+0xfa0>
  4037dc:	mov    r8d,0x4
  4037e2:	lea    rcx,[rip+0xca85]        # 41026e <_IO_stdin_used@@Base+0x26e>
  4037e9:	mov    edx,0x8
  4037ee:	mov    QWORD PTR [rsp],rax
  4037f2:	lea    r12,[rip+0x4e7]        # 403ce0 <_start@@Base+0x960>
  4037f9:	call   40ed40 <flatcc_json_printer_union_field@@Base>
  4037fe:	mov    r9d,0x4
  403804:	mov    rsi,rbp
  403807:	mov    rdi,rbx
  40380a:	mov    r8d,0x5
  403810:	lea    rcx,[rip+0xc8e5]        # 4100fc <_IO_stdin_used@@Base+0xfc>
  403817:	mov    edx,0x9
  40381c:	mov    QWORD PTR [rsp],r12
  403820:	call   40dc10 <flatcc_json_printer_struct_vector_field@@Base>
  403825:	mov    rsi,rbp
  403828:	mov    rdi,rbx
  40382b:	mov    r8d,0x11
  403831:	lea    rcx,[rip+0xc8ca]        # 410102 <_IO_stdin_used@@Base+0x102>
  403838:	mov    edx,0xa
  40383d:	call   40df10 <flatcc_json_printer_string_vector_field@@Base>
  403842:	mov    rsi,rbp
  403845:	mov    rdi,rbx
  403848:	lea    r9,[rip+0xfffffffffffffea1]        # 4036f0 <_start@@Base+0x370>
  40384f:	mov    r8d,0x11
  403855:	lea    rcx,[rip+0xc8b8]        # 410114 <_IO_stdin_used@@Base+0x114>
  40385c:	mov    edx,0xb
  403861:	call   40e280 <flatcc_json_printer_table_vector_field@@Base>
  403866:	mov    rsi,rbp
  403869:	mov    rdi,rbx
  40386c:	lea    r9,[rip+0xfffffffffffffe7d]        # 4036f0 <_start@@Base+0x370>
  403873:	mov    r8d,0x5
  403879:	lea    rcx,[rip+0xc8a6]        # 410126 <_IO_stdin_used@@Base+0x126>
  403880:	mov    edx,0xc
  403885:	call   40ea90 <flatcc_json_printer_table_field@@Base>
  40388a:	lea    rax,[rip+0xfffffffffffffe5f]        # 4036f0 <_start@@Base+0x370>
  403891:	xor    r9d,r9d
  403894:	mov    rsi,rbp
  403897:	mov    rdi,rbx
  40389a:	mov    r8d,0x14
  4038a0:	lea    rcx,[rip+0xc885]        # 41012c <_IO_stdin_used@@Base+0x12c>
  4038a7:	mov    edx,0xd
  4038ac:	mov    QWORD PTR [rsp],rax
  4038b0:	call   40f950 <flatcc_json_printer_table_as_nested_root@@Base>
  4038b5:	mov    rsi,rbp
  4038b8:	mov    rdi,rbx
  4038bb:	lea    r9,[rip+0x3ae]        # 403c70 <_start@@Base+0x8f0>
  4038c2:	mov    r8d,0x9
  4038c8:	lea    rcx,[rip+0xc872]        # 410141 <_IO_stdin_used@@Base+0x141>
  4038cf:	mov    edx,0xe
  4038d4:	call   40ea90 <flatcc_json_printer_table_field@@Base>
  4038d9:	mov    rsi,rbp
  4038dc:	mov    rdi,rbx
  4038df:	mov    r9d,0x1
  4038e5:	mov    r8d,0x8
  4038eb:	lea    rcx,[rip+0xc859]        # 41014b <_IO_stdin_used@@Base+0x14b>
  4038f2:	mov    edx,0xf
  4038f7:	call   407b20 <flatcc_json_printer_bool_field@@Base>
  4038fc:	xor    r9d,r9d
  4038ff:	mov    rsi,rbp
  403902:	mov    rdi,rbx
  403905:	mov    r8d,0x10
  40390b:	lea    rcx,[rip+0xc842]        # 410154 <_IO_stdin_used@@Base+0x154>
  403912:	mov    edx,0x10
  403917:	call   4077c0 <flatcc_json_printer_int32_field@@Base>
  40391c:	xor    r9d,r9d
  40391f:	mov    rsi,rbp
  403922:	mov    rdi,rbx
  403925:	mov    r8d,0x10
  40392b:	lea    rcx,[rip+0xc833]        # 410165 <_IO_stdin_used@@Base+0x165>
  403932:	mov    edx,0x11
  403937:	call   407130 <flatcc_json_printer_uint32_field@@Base>
  40393c:	xor    r9d,r9d
  40393f:	mov    rsi,rbp
  403942:	mov    rdi,rbx
  403945:	mov    r8d,0x10
  40394b:	lea    rcx,[rip+0xc824]        # 410176 <_IO_stdin_used@@Base+0x176>
  403952:	mov    edx,0x12
  403957:	call   407970 <flatcc_json_printer_int64_field@@Base>
  40395c:	xor    r9d,r9d
  40395f:	mov    rsi,rbp
  403962:	mov    rdi,rbx
  403965:	mov    r8d,0x10
  40396b:	lea    rcx,[rip+0xc815]        # 410187 <_IO_stdin_used@@Base+0x187>
  403972:	mov    edx,0x13
  403977:	call   4072c0 <flatcc_json_printer_uint64_field@@Base>
  40397c:	xor    r9d,r9d
  40397f:	mov    rsi,rbp
  403982:	mov    rdi,rbx
  403985:	mov    r8d,0x11
  40398b:	lea    rcx,[rip+0xc806]        # 410198 <_IO_stdin_used@@Base+0x198>
  403992:	mov    edx,0x14
  403997:	call   4077c0 <flatcc_json_printer_int32_field@@Base>
  40399c:	xor    r9d,r9d
  40399f:	mov    rsi,rbp
  4039a2:	mov    rdi,rbx
  4039a5:	mov    r8d,0x11
  4039ab:	lea    rcx,[rip+0xc7f8]        # 4101aa <_IO_stdin_used@@Base+0x1aa>
  4039b2:	mov    edx,0x15
  4039b7:	call   407130 <flatcc_json_printer_uint32_field@@Base>
  4039bc:	xor    r9d,r9d
  4039bf:	mov    rsi,rbp
  4039c2:	mov    rdi,rbx
  4039c5:	mov    r8d,0x11
  4039cb:	lea    rcx,[rip+0xc7ea]        # 4101bc <_IO_stdin_used@@Base+0x1bc>
  4039d2:	mov    edx,0x16
  4039d7:	call   407970 <flatcc_json_printer_int64_field@@Base>
  4039dc:	xor    r9d,r9d
  4039df:	mov    rsi,rbp
  4039e2:	mov    rdi,rbx
  4039e5:	mov    r8d,0x11
  4039eb:	lea    rcx,[rip+0xc7dc]        # 4101ce <_IO_stdin_used@@Base+0x1ce>
  4039f2:	mov    edx,0x17
  4039f7:	call   4072c0 <flatcc_json_printer_uint64_field@@Base>
  4039fc:	mov    rsi,rbp
  4039ff:	mov    rdi,rbx
  403a02:	mov    r8d,0x10
  403a08:	lea    rcx,[rip+0xc7d1]        # 4101e0 <_IO_stdin_used@@Base+0x1e0>
  403a0f:	mov    edx,0x18
  403a14:	call   40bfd0 <flatcc_json_printer_bool_vector_field@@Base>
  403a19:	vmovss xmm0,DWORD PTR [rip+0xccdf]        # 410700 <_IO_stdin_used@@Base+0x700>
  403a21:	mov    rsi,rbp
  403a24:	mov    rdi,rbx
  403a27:	mov    r8d,0x5
  403a2d:	lea    rcx,[rip+0xc7bd]        # 4101f1 <_IO_stdin_used@@Base+0x1f1>
  403a34:	mov    edx,0x19
  403a39:	call   407cc0 <flatcc_json_printer_float_field@@Base>
  403a3e:	vmovss xmm0,DWORD PTR [rip+0xccbe]        # 410704 <_IO_stdin_used@@Base+0x704>
  403a46:	mov    rsi,rbp
  403a49:	mov    rdi,rbx
  403a4c:	mov    r8d,0x6
  403a52:	lea    rcx,[rip+0xc79e]        # 4101f7 <_IO_stdin_used@@Base+0x1f7>
  403a59:	mov    edx,0x1a
  403a5e:	call   407cc0 <flatcc_json_printer_float_field@@Base>
  403a63:	vxorps xmm0,xmm0,xmm0
  403a67:	mov    rsi,rbp
  403a6a:	mov    rdi,rbx
  403a6d:	mov    r8d,0x6
  403a73:	lea    rcx,[rip+0xc784]        # 4101fe <_IO_stdin_used@@Base+0x1fe>
  403a7a:	mov    edx,0x1b
  403a7f:	call   407cc0 <flatcc_json_printer_float_field@@Base>
  403a84:	mov    rsi,rbp
  403a87:	mov    rdi,rbx
  403a8a:	mov    r8d,0x12
  403a90:	lea    rcx,[rip+0xc76e]        # 410205 <_IO_stdin_used@@Base+0x205>
  403a97:	mov    edx,0x1c
  403a9c:	call   40df10 <flatcc_json_printer_string_vector_field@@Base>
  403aa1:	lea    rax,[rip+0x168]        # 403c10 <_start@@Base+0x890>
  403aa8:	mov    r9d,0x8
  403aae:	mov    rsi,rbp
  403ab1:	mov    rdi,rbx
  403ab4:	mov    r8d,0x17
  403aba:	lea    rcx,[rip+0xc757]        # 410218 <_IO_stdin_used@@Base+0x218>
  403ac1:	mov    edx,0x1d
  403ac6:	mov    QWORD PTR [rsp],rax
  403aca:	call   40dc10 <flatcc_json_printer_struct_vector_field@@Base>
  403acf:	mov    rsi,rbp
  403ad2:	mov    rdi,rbx
  403ad5:	mov    r8d,0x4
  403adb:	lea    rcx,[rip+0xc74e]        # 410230 <_IO_stdin_used@@Base+0x230>
  403ae2:	mov    edx,0x1e
  403ae7:	call   40acb0 <flatcc_json_printer_uint8_vector_field@@Base>
  403aec:	mov    r9d,0x4
  403af2:	mov    rsi,rbp
  403af5:	mov    rdi,rbx
  403af8:	mov    r8d,0x5
  403afe:	lea    rcx,[rip+0xc730]        # 410235 <_IO_stdin_used@@Base+0x235>
  403b05:	mov    edx,0x1f
  403b0a:	mov    QWORD PTR [rsp],r12
  403b0e:	call   40dc10 <flatcc_json_printer_struct_vector_field@@Base>
  403b13:	mov    rsi,rbp
  403b16:	mov    rdi,rbx
  403b19:	mov    r8d,0xf
  403b1f:	lea    rcx,[rip+0xc715]        # 41023b <_IO_stdin_used@@Base+0x23b>
  403b26:	mov    edx,0x20
  403b2b:	call   40bd70 <flatcc_json_printer_int64_vector_field@@Base>
  403b30:	mov    rsi,rbp
  403b33:	mov    rdi,rbx
  403b36:	mov    r8d,0x11
  403b3c:	lea    rcx,[rip+0xc708]        # 41024b <_IO_stdin_used@@Base+0x24b>
  403b43:	mov    edx,0x21
  403b48:	call   40c4c0 <flatcc_json_printer_double_vector_field@@Base>
  403b4d:	mov    rsi,rbp
  403b50:	mov    rdi,rbx
  403b53:	lea    r9,[rip+0xfffffffffffff916]        # 403470 <_start@@Base+0xf0>
  403b5a:	mov    r8d,0x15
  403b60:	lea    rcx,[rip+0xc6f6]        # 41025d <_IO_stdin_used@@Base+0x25d>
  403b67:	mov    edx,0x22
  403b6c:	call   40ea90 <flatcc_json_printer_table_field@@Base>
  403b71:	pop    rax
  403b72:	pop    rdx
  403b73:	mov    rdi,rbx
  403b76:	pop    rbx
  403b77:	mov    rsi,rbp
  403b7a:	pop    rbp
  403b7b:	lea    r9,[rip+0x1e]        # 403ba0 <_start@@Base+0x820>
  403b82:	mov    r8d,0xa
  403b88:	lea    rcx,[rip+0xc6e4]        # 410273 <_IO_stdin_used@@Base+0x273>
  403b8f:	mov    edx,0x23
  403b94:	pop    r12
  403b96:	jmp    40ea90 <flatcc_json_printer_table_field@@Base>
  403b9b:	nop    DWORD PTR [rax+rax*1+0x0]
  403ba0:	endbr64 
  403ba4:	push   rbp
  403ba5:	xor    r9d,r9d
  403ba8:	mov    rbp,rsi
  403bab:	push   rbx
  403bac:	mov    r8d,0x4
  403bb2:	mov    rbx,rdi
  403bb5:	sub    rsp,0x8
  403bb9:	lea    rcx,[rip+0xc6c1]        # 410281 <_IO_stdin_used@@Base+0x281>
  403bc0:	xor    edx,edx
  403bc2:	call   406ae0 <flatcc_json_printer_uint8_vector_base64_field@@Base>
  403bc7:	mov    rsi,rbp
  403bca:	mov    rdi,rbx
  403bcd:	mov    r9d,0x1
  403bd3:	mov    r8d,0x7
  403bd9:	lea    rcx,[rip+0xc69e]        # 41027e <_IO_stdin_used@@Base+0x27e>
  403be0:	mov    edx,0x1
  403be5:	call   406ae0 <flatcc_json_printer_uint8_vector_base64_field@@Base>
  403bea:	add    rsp,0x8
  403bee:	mov    rdi,rbx
  403bf1:	pop    rbx
  403bf2:	mov    rsi,rbp
  403bf5:	xor    r9d,r9d
  403bf8:	mov    r8d,0x6
  403bfe:	lea    rcx,[rip+0xc681]        # 410286 <_IO_stdin_used@@Base+0x286>
  403c05:	mov    edx,0x2
  403c0a:	pop    rbp
  403c0b:	jmp    406ae0 <flatcc_json_printer_uint8_vector_base64_field@@Base>
  403c10:	endbr64 
  403c14:	push   rbp
  403c15:	mov    rdx,rsi
  403c18:	mov    rbp,rsi
  403c1b:	push   rbx
  403c1c:	mov    r9d,0x2
  403c22:	lea    r8,[rip+0xc664]        # 41028d <_IO_stdin_used@@Base+0x28d>
  403c29:	sub    rsp,0x8
  403c2d:	xor    ecx,ecx
  403c2f:	xor    esi,esi
  403c31:	mov    rbx,rdi
  403c34:	call   409350 <flatcc_json_printer_uint32_struct_field@@Base>
  403c39:	add    rsp,0x8
  403c3d:	mov    rdi,rbx
  403c40:	pop    rbx
  403c41:	mov    rdx,rbp
  403c44:	mov    r9d,0x8
  403c4a:	lea    r8,[rip+0xc63f]        # 410290 <_IO_stdin_used@@Base+0x290>
  403c51:	mov    ecx,0x4
  403c56:	mov    esi,0x1
  403c5b:	pop    rbp
  403c5c:	jmp    409350 <flatcc_json_printer_uint32_struct_field@@Base>
  403c61:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  403c6c:	nop    DWORD PTR [rax+0x0]
  403c70:	endbr64 
  403c74:	push   rbp
  403c75:	mov    r8d,0x2
  403c7b:	mov    rbp,rsi
  403c7e:	push   rbx
  403c7f:	lea    rcx,[rip+0xc607]        # 41028d <_IO_stdin_used@@Base+0x28d>
  403c86:	mov    rbx,rdi
  403c89:	sub    rsp,0x8
  403c8d:	xor    edx,edx
  403c8f:	call   406940 <flatcc_json_printer_string_field@@Base>
  403c94:	mov    rsi,rbp
  403c97:	mov    rdi,rbx
  403c9a:	xor    r9d,r9d
  403c9d:	mov    r8d,0x3
  403ca3:	lea    rcx,[rip+0xc5ef]        # 410299 <_IO_stdin_used@@Base+0x299>
  403caa:	mov    edx,0x1
  403caf:	call   407970 <flatcc_json_printer_int64_field@@Base>
  403cb4:	add    rsp,0x8
  403cb8:	mov    rdi,rbx
  403cbb:	pop    rbx
  403cbc:	mov    rsi,rbp
  403cbf:	xor    r9d,r9d
  403cc2:	mov    r8d,0x5
  403cc8:	lea    rcx,[rip+0xc5ce]        # 41029d <_IO_stdin_used@@Base+0x29d>
  403ccf:	mov    edx,0x2
  403cd4:	pop    rbp
  403cd5:	jmp    406f90 <flatcc_json_printer_uint16_field@@Base>
  403cda:	nop    WORD PTR [rax+rax*1+0x0]
  403ce0:	endbr64 
  403ce4:	push   rbp
  403ce5:	mov    rdx,rsi
  403ce8:	mov    rbp,rsi
  403ceb:	push   rbx
  403cec:	mov    r9d,0x1
  403cf2:	lea    r8,[rip+0xc4af]        # 4101a8 <_IO_stdin_used@@Base+0x1a8>
  403cf9:	sub    rsp,0x8
  403cfd:	xor    ecx,ecx
  403cff:	xor    esi,esi
  403d01:	mov    rbx,rdi
  403d04:	call   409730 <flatcc_json_printer_int16_struct_field@@Base>
  403d09:	add    rsp,0x8
  403d0d:	mov    rdi,rbx
  403d10:	pop    rbx
  403d11:	mov    rdx,rbp
  403d14:	mov    r9d,0x1
  403d1a:	lea    r8,[rip+0xc384]        # 4100a5 <_IO_stdin_used@@Base+0xa5>
  403d21:	mov    ecx,0x2
  403d26:	mov    esi,0x1
  403d2b:	pop    rbp
  403d2c:	jmp    4095d0 <flatcc_json_printer_int8_struct_field@@Base>
  403d31:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  403d3c:	nop    DWORD PTR [rax+0x0]
  403d40:	endbr64 
  403d44:	movzx  eax,BYTE PTR [rsi+0xc]
  403d48:	cmp    al,0x2
  403d4a:	je     403da0 <_start@@Base+0xa20>
  403d4c:	jbe    403d68 <_start@@Base+0x9e8>
  403d4e:	cmp    al,0x3
  403d50:	je     403d90 <_start@@Base+0xa10>
  403d52:	cmp    al,0x4
  403d54:	jne    403d80 <_start@@Base+0xa00>
  403d56:	lea    rdx,[rip+0x53]        # 403db0 <_start@@Base+0xa30>
  403d5d:	jmp    40f010 <flatcc_json_printer_union_table@@Base>
  403d62:	nop    WORD PTR [rax+rax*1+0x0]
  403d68:	cmp    al,0x1
  403d6a:	jne    403d88 <_start@@Base+0xa08>
  403d6c:	lea    rdx,[rip+0xfffffffffffff97d]        # 4036f0 <_start@@Base+0x370>
  403d73:	jmp    40f010 <flatcc_json_printer_union_table@@Base>
  403d78:	nop    DWORD PTR [rax+rax*1+0x0]
  403d80:	ret    
  403d81:	nop    DWORD PTR [rax+0x0]
  403d88:	ret    
  403d89:	nop    DWORD PTR [rax+0x0]
  403d90:	lea    rdx,[rip+0x729]        # 4044c0 <_start@@Base+0x1140>
  403d97:	jmp    40f010 <flatcc_json_printer_union_table@@Base>
  403d9c:	nop    DWORD PTR [rax+0x0]
  403da0:	lea    rdx,[rip+0x2f9]        # 4040a0 <_start@@Base+0xd20>
  403da7:	jmp    40f010 <flatcc_json_printer_union_table@@Base>
  403dac:	nop    DWORD PTR [rax+0x0]
  403db0:	endbr64 
  403db4:	push   rbp
  403db5:	lea    r9,[rip+0xfffffffffffff6c4]        # 403480 <_start@@Base+0x100>
  403dbc:	mov    rbp,rsi
  403dbf:	push   rbx
  403dc0:	mov    r8d,0x6
  403dc6:	mov    rbx,rdi
  403dc9:	sub    rsp,0x8
  403dcd:	lea    rcx,[rip+0xc4cf]        # 4102a3 <_IO_stdin_used@@Base+0x2a3>
  403dd4:	xor    edx,edx
  403dd6:	call   40ea90 <flatcc_json_printer_table_field@@Base>
  403ddb:	mov    rsi,rbp
  403dde:	mov    rdi,rbx
  403de1:	lea    r9,[rip+0x58]        # 403e40 <_start@@Base+0xac0>
  403de8:	mov    r8d,0x5
  403dee:	lea    rcx,[rip+0xc4b5]        # 4102aa <_IO_stdin_used@@Base+0x2aa>
  403df5:	mov    edx,0x1
  403dfa:	call   40ea90 <flatcc_json_printer_table_field@@Base>
  403dff:	sub    rsp,0x8
  403e03:	lea    rax,[rip+0xffffffffffffff36]        # 403d40 <_start@@Base+0x9c0>
  403e0a:	push   rax
  403e0b:	mov    rsi,rbp
  403e0e:	mov    rdi,rbx
  403e11:	lea    r9,[rip+0x508]        # 404320 <_start@@Base+0xfa0>
  403e18:	mov    r8d,0x7
  403e1e:	lea    rcx,[rip+0xc48b]        # 4102b0 <_IO_stdin_used@@Base+0x2b0>
  403e25:	mov    edx,0x3
  403e2a:	call   40e6f0 <flatcc_json_printer_union_vector_field@@Base>
  403e2f:	add    rsp,0x18
  403e33:	pop    rbx
  403e34:	pop    rbp
  403e35:	ret    
  403e36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403e40:	endbr64 
  403e44:	push   r12
  403e46:	lea    r12,[rip+0xd3]        # 403f20 <_start@@Base+0xba0>
  403e4d:	lea    r9,[rip+0x17c]        # 403fd0 <_start@@Base+0xc50>
  403e54:	push   rbp
  403e55:	mov    r8d,0xe
  403e5b:	mov    rbp,rsi
  403e5e:	push   rbx
  403e5f:	lea    rcx,[rip+0xc452]        # 4102b8 <_IO_stdin_used@@Base+0x2b8>
  403e66:	mov    rbx,rdi
  403e69:	sub    rsp,0x8
  403e6d:	push   r12
  403e6f:	mov    edx,0x1
  403e74:	call   40ed40 <flatcc_json_printer_union_field@@Base>
  403e79:	mov    rsi,rbp
  403e7c:	mov    rdi,rbx
  403e7f:	lea    r9,[rip+0x14a]        # 403fd0 <_start@@Base+0xc50>
  403e86:	mov    r8d,0xa
  403e8c:	lea    rcx,[rip+0xc434]        # 4102c7 <_IO_stdin_used@@Base+0x2c7>
  403e93:	mov    edx,0x3
  403e98:	mov    QWORD PTR [rsp],r12
  403e9c:	call   40ed40 <flatcc_json_printer_union_field@@Base>
  403ea1:	mov    rsi,rbp
  403ea4:	mov    rdi,rbx
  403ea7:	lea    r9,[rip+0x122]        # 403fd0 <_start@@Base+0xc50>
  403eae:	mov    r8d,0x9
  403eb4:	lea    rcx,[rip+0xc417]        # 4102d2 <_IO_stdin_used@@Base+0x2d2>
  403ebb:	mov    edx,0x5
  403ec0:	mov    QWORD PTR [rsp],r12
  403ec4:	call   40ed40 <flatcc_json_printer_union_field@@Base>
  403ec9:	mov    rsi,rbp
  403ecc:	mov    rdi,rbx
  403ecf:	lea    r9,[rip+0xfa]        # 403fd0 <_start@@Base+0xc50>
  403ed6:	mov    r8d,0x5
  403edc:	lea    rcx,[rip+0xc3f9]        # 4102dc <_IO_stdin_used@@Base+0x2dc>
  403ee3:	mov    edx,0x7
  403ee8:	mov    QWORD PTR [rsp],r12
  403eec:	call   40ed40 <flatcc_json_printer_union_field@@Base>
  403ef1:	mov    edx,0x9
  403ef6:	mov    rsi,rbp
  403ef9:	mov    rdi,rbx
  403efc:	lea    r9,[rip+0xcd]        # 403fd0 <_start@@Base+0xc50>
  403f03:	mov    r8d,0xa
  403f09:	lea    rcx,[rip+0xc3d2]        # 4102e2 <_IO_stdin_used@@Base+0x2e2>
  403f10:	mov    QWORD PTR [rsp],r12
  403f14:	call   40e6f0 <flatcc_json_printer_union_vector_field@@Base>
  403f19:	pop    rax
  403f1a:	pop    rdx
  403f1b:	pop    rbx
  403f1c:	pop    rbp
  403f1d:	pop    r12
  403f1f:	ret    
  403f20:	endbr64 
  403f24:	movzx  eax,BYTE PTR [rsi+0xc]
  403f28:	cmp    al,0xa
  403f2a:	ja     403f48 <_start@@Base+0xbc8>
  403f2c:	cmp    al,0x9
  403f2e:	jae    403f68 <_start@@Base+0xbe8>
  403f30:	cmp    al,0x2
  403f32:	je     403f78 <_start@@Base+0xbf8>
  403f34:	cmp    al,0x8
  403f36:	jne    403f58 <_start@@Base+0xbd8>
  403f38:	lea    rdx,[rip+0x71]        # 403fb0 <_start@@Base+0xc30>
  403f3f:	jmp    40f120 <flatcc_json_printer_union_struct@@Base>
  403f44:	nop    DWORD PTR [rax+0x0]
  403f48:	cmp    al,0xb
  403f4a:	je     403f50 <_start@@Base+0xbd0>
  403f4c:	cmp    al,0xff
  403f4e:	jne    403f60 <_start@@Base+0xbe0>
  403f50:	jmp    40f1c0 <flatcc_json_printer_union_string@@Base>
  403f55:	nop    DWORD PTR [rax]
  403f58:	ret    
  403f59:	nop    DWORD PTR [rax+0x0]
  403f60:	ret    
  403f61:	nop    DWORD PTR [rax+0x0]
  403f68:	lea    rdx,[rip+0x21]        # 403f90 <_start@@Base+0xc10>
  403f6f:	jmp    40f120 <flatcc_json_printer_union_struct@@Base>
  403f74:	nop    DWORD PTR [rax+0x0]
  403f78:	lea    rdx,[rip+0xfffffffffffff581]        # 403500 <_start@@Base+0x180>
  403f7f:	jmp    40f010 <flatcc_json_printer_union_table@@Base>
  403f84:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  403f8f:	nop
  403f90:	endbr64 
  403f94:	mov    rdx,rsi
  403f97:	mov    r9d,0xa
  403f9d:	lea    r8,[rip+0xc349]        # 4102ed <_IO_stdin_used@@Base+0x2ed>
  403fa4:	xor    ecx,ecx
  403fa6:	xor    esi,esi
  403fa8:	jmp    409890 <flatcc_json_printer_int32_struct_field@@Base>
  403fad:	nop    DWORD PTR [rax]
  403fb0:	endbr64 
  403fb4:	mov    rdx,rsi
  403fb7:	mov    r9d,0xb
  403fbd:	lea    r8,[rip+0xc334]        # 4102f8 <_IO_stdin_used@@Base+0x2f8>
  403fc4:	xor    ecx,ecx
  403fc6:	xor    esi,esi
  403fc8:	jmp    409210 <flatcc_json_printer_uint16_struct_field@@Base>
  403fcd:	nop    DWORD PTR [rax]
  403fd0:	endbr64 
  403fd4:	cmp    sil,0x9
  403fd8:	je     404020 <_start@@Base+0xca0>
  403fda:	jbe    404000 <_start@@Base+0xc80>
  403fdc:	cmp    sil,0xb
  403fe0:	je     404038 <_start@@Base+0xcb8>
  403fe2:	jb     404050 <_start@@Base+0xcd0>
  403fe4:	cmp    sil,0xff
  403fe8:	jne    404068 <_start@@Base+0xce8>
  403fea:	mov    edx,0x6
  403fef:	lea    rsi,[rip+0xc331]        # 410327 <_IO_stdin_used@@Base+0x327>
  403ff6:	jmp    406830 <flatcc_json_printer_enum@@Base>
  403ffb:	nop    DWORD PTR [rax+rax*1+0x0]
  404000:	cmp    sil,0x2
  404004:	je     404080 <_start@@Base+0xd00>
  404006:	cmp    sil,0x8
  40400a:	jne    404068 <_start@@Base+0xce8>
  40400c:	mov    edx,0x8
  404011:	lea    rsi,[rip+0xc2f2]        # 41030a <_IO_stdin_used@@Base+0x30a>
  404018:	jmp    406830 <flatcc_json_printer_enum@@Base>
  40401d:	nop    DWORD PTR [rax]
  404020:	mov    edx,0x5
  404025:	lea    rsi,[rip+0xc2e7]        # 410313 <_IO_stdin_used@@Base+0x313>
  40402c:	jmp    406830 <flatcc_json_printer_enum@@Base>
  404031:	nop    DWORD PTR [rax+0x0]
  404038:	mov    edx,0x5
  40403d:	lea    rsi,[rip+0xc2dd]        # 410321 <_IO_stdin_used@@Base+0x321>
  404044:	jmp    406830 <flatcc_json_printer_enum@@Base>
  404049:	nop    DWORD PTR [rax+0x0]
  404050:	mov    edx,0x7
  404055:	lea    rsi,[rip+0xc2bd]        # 410319 <_IO_stdin_used@@Base+0x319>
  40405c:	jmp    406830 <flatcc_json_printer_enum@@Base>
  404061:	nop    DWORD PTR [rax+0x0]
  404068:	mov    edx,0x4
  40406d:	lea    rsi,[rip+0xc2ba]        # 41032e <_IO_stdin_used@@Base+0x32e>
  404074:	jmp    406830 <flatcc_json_printer_enum@@Base>
  404079:	nop    DWORD PTR [rax+0x0]
  404080:	mov    edx,0x5
  404085:	lea    rsi,[rip+0xc278]        # 410304 <_IO_stdin_used@@Base+0x304>
  40408c:	jmp    406830 <flatcc_json_printer_enum@@Base>
  404091:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40409c:	nop    DWORD PTR [rax+0x0]
  4040a0:	endbr64 
  4040a4:	push   r12
  4040a6:	lea    r12,[rip+0xa3]        # 404150 <_start@@Base+0xdd0>
  4040ad:	mov    r9d,0x2
  4040b3:	push   rbp
  4040b4:	mov    r8d,0x5
  4040ba:	mov    rbp,rsi
  4040bd:	push   rbx
  4040be:	lea    rcx,[rip+0xc031]        # 4100f6 <_IO_stdin_used@@Base+0xf6>
  4040c5:	mov    rbx,rdi
  4040c8:	sub    rsp,0x8
  4040cc:	push   r12
  4040ce:	xor    edx,edx
  4040d0:	call   408740 <flatcc_json_printer_int8_enum_field@@Base>
  4040d5:	mov    rsi,rbp
  4040d8:	mov    rdi,rbx
  4040db:	mov    r9d,0x2
  4040e1:	mov    r8d,0x6
  4040e7:	lea    rcx,[rip+0xc245]        # 410333 <_IO_stdin_used@@Base+0x333>
  4040ee:	mov    edx,0x1
  4040f3:	mov    QWORD PTR [rsp],r12
  4040f7:	call   408740 <flatcc_json_printer_int8_enum_field@@Base>
  4040fc:	mov    rsi,rbp
  4040ff:	mov    rdi,rbx
  404102:	mov    r9d,0x2
  404108:	mov    r8d,0x2
  40410e:	lea    rcx,[rip+0xc225]        # 41033a <_IO_stdin_used@@Base+0x33a>
  404115:	mov    edx,0x2
  40411a:	call   406df0 <flatcc_json_printer_uint8_field@@Base>
  40411f:	pop    rax
  404120:	pop    rdx
  404121:	mov    rdi,rbx
  404124:	pop    rbx
  404125:	mov    rsi,rbp
  404128:	pop    rbp
  404129:	mov    r9d,0x2
  40412f:	mov    r8d,0x3
  404135:	lea    rcx,[rip+0xc201]        # 41033d <_IO_stdin_used@@Base+0x33d>
  40413c:	mov    edx,0x3
  404141:	pop    r12
  404143:	jmp    406df0 <flatcc_json_printer_uint8_field@@Base>
  404148:	nop    DWORD PTR [rax+rax*1+0x0]
  404150:	endbr64 
  404154:	test   sil,0xf4
  404158:	jne    4041b0 <_start@@Base+0xe30>
  40415a:	test   sil,sil
  40415d:	je     4041b0 <_start@@Base+0xe30>
  40415f:	push   r13
  404161:	movzx  eax,sil
  404165:	push   r12
  404167:	push   rbp
  404168:	mov    rbp,rdi
  40416b:	push   rbx
  40416c:	mov    ebx,esi
  40416e:	sub    rsp,0x8
  404172:	blsr   eax,eax
  404177:	setne  sil
  40417b:	movzx  r12d,sil
  40417f:	movzx  esi,sil
  404183:	call   4068a0 <flatcc_json_printer_delimit_enum_flags@@Base>
  404188:	xor    esi,esi
  40418a:	test   bl,0x1
  40418d:	jne    4041c0 <_start@@Base+0xe40>
  40418f:	test   bl,0x2
  404192:	jne    4041de <_start@@Base+0xe5e>
  404194:	and    ebx,0x8
  404197:	jne    4041fe <_start@@Base+0xe7e>
  404199:	add    rsp,0x8
  40419d:	pop    rbx
  40419e:	mov    rdi,rbp
  4041a1:	pop    rbp
  4041a2:	mov    esi,r12d
  4041a5:	pop    r12
  4041a7:	pop    r13
  4041a9:	jmp    4068a0 <flatcc_json_printer_delimit_enum_flags@@Base>
  4041ae:	xchg   ax,ax
  4041b0:	movsx  esi,sil
  4041b4:	jmp    4066f0 <flatcc_json_printer_int8@@Base>
  4041b9:	nop    DWORD PTR [rax+0x0]
  4041c0:	mov    ecx,0x3
  4041c5:	lea    rdx,[rip+0xc175]        # 410341 <_IO_stdin_used@@Base+0x341>
  4041cc:	mov    rdi,rbp
  4041cf:	call   4068d0 <flatcc_json_printer_enum_flag@@Base>
  4041d4:	mov    esi,0x1
  4041d9:	test   bl,0x2
  4041dc:	je     404194 <_start@@Base+0xe14>
  4041de:	mov    ecx,0x5
  4041e3:	lea    rdx,[rip+0xc15b]        # 410345 <_IO_stdin_used@@Base+0x345>
  4041ea:	mov    rdi,rbp
  4041ed:	lea    r13d,[rsi+0x1]
  4041f1:	call   4068d0 <flatcc_json_printer_enum_flag@@Base>
  4041f6:	and    ebx,0x8
  4041f9:	mov    esi,r13d
  4041fc:	je     404199 <_start@@Base+0xe19>
  4041fe:	mov    ecx,0x4
  404203:	lea    rdx,[rip+0xc141]        # 41034b <_IO_stdin_used@@Base+0x34b>
  40420a:	mov    rdi,rbp
  40420d:	call   4068d0 <flatcc_json_printer_enum_flag@@Base>
  404212:	jmp    404199 <_start@@Base+0xe19>
  404214:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40421f:	nop
  404220:	endbr64 
  404224:	push   rbp
  404225:	mov    rdx,rsi
  404228:	mov    rbp,rsi
  40422b:	push   rbx
  40422c:	mov    r9d,0x1
  404232:	mov    rbx,rdi
  404235:	sub    rsp,0x8
  404239:	lea    r8,[rip+0xbff3]        # 410233 <_IO_stdin_used@@Base+0x233>
  404240:	xor    ecx,ecx
  404242:	xor    esi,esi
  404244:	call   409c90 <flatcc_json_printer_float_struct_field@@Base>
  404249:	mov    rdx,rbp
  40424c:	mov    rdi,rbx
  40424f:	mov    r9d,0x1
  404255:	lea    r8,[rip+0xbece]        # 41012a <_IO_stdin_used@@Base+0x12a>
  40425c:	mov    ecx,0x4
  404261:	mov    esi,0x1
  404266:	call   409c90 <flatcc_json_printer_float_struct_field@@Base>
  40426b:	mov    rdx,rbp
  40426e:	mov    rdi,rbx
  404271:	mov    r9d,0x1
  404277:	lea    r8,[rip+0xc0d2]        # 410350 <_IO_stdin_used@@Base+0x350>
  40427e:	mov    ecx,0x8
  404283:	mov    esi,0x2
  404288:	call   409c90 <flatcc_json_printer_float_struct_field@@Base>
  40428d:	mov    rdx,rbp
  404290:	mov    rdi,rbx
  404293:	mov    r9d,0x5
  404299:	lea    r8,[rip+0xc0b2]        # 410352 <_IO_stdin_used@@Base+0x352>
  4042a0:	mov    ecx,0x10
  4042a5:	mov    esi,0x3
  4042aa:	call   409de0 <flatcc_json_printer_double_struct_field@@Base>
  4042af:	sub    rsp,0x8
  4042b3:	lea    rax,[rip+0xfffffffffffffe96]        # 404150 <_start@@Base+0xdd0>
  4042ba:	push   rax
  4042bb:	mov    rdx,rbp
  4042be:	mov    rdi,rbx
  4042c1:	mov    r9d,0x5
  4042c7:	lea    r8,[rip+0xc08a]        # 410358 <_IO_stdin_used@@Base+0x358>
  4042ce:	mov    ecx,0x18
  4042d3:	mov    esi,0x4
  4042d8:	call   40a4f0 <flatcc_json_printer_int8_enum_struct_field@@Base>
  4042dd:	lea    rax,[rip+0xfffffffffffff9fc]        # 403ce0 <_start@@Base+0x960>
  4042e4:	mov    rdx,rbp
  4042e7:	mov    rdi,rbx
  4042ea:	mov    r9d,0x5
  4042f0:	lea    r8,[rip+0xc067]        # 41035e <_IO_stdin_used@@Base+0x35e>
  4042f7:	mov    ecx,0x1a
  4042fc:	mov    esi,0x5
  404301:	mov    QWORD PTR [rsp],rax
  404305:	call   40f1e0 <flatcc_json_printer_embedded_struct_field@@Base>
  40430a:	add    rsp,0x18
  40430e:	pop    rbx
  40430f:	pop    rbp
  404310:	ret    
  404311:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40431c:	nop    DWORD PTR [rax+0x0]
  404320:	endbr64 
  404324:	cmp    sil,0x2
  404328:	je     404370 <_start@@Base+0xff0>
  40432a:	jbe    404350 <_start@@Base+0xfd0>
  40432c:	cmp    sil,0x3
  404330:	je     4043a0 <_start@@Base+0x1020>
  404332:	cmp    sil,0x4
  404336:	jne    404388 <_start@@Base+0x1008>
  404338:	mov    edx,0x3
  40433d:	lea    rsi,[rip+0xc049]        # 41038d <_IO_stdin_used@@Base+0x38d>
  404344:	jmp    406830 <flatcc_json_printer_enum@@Base>
  404349:	nop    DWORD PTR [rax+0x0]
  404350:	cmp    sil,0x1
  404354:	jne    404388 <_start@@Base+0x1008>
  404356:	mov    edx,0x7
  40435b:	lea    rsi,[rip+0xc002]        # 410364 <_IO_stdin_used@@Base+0x364>
  404362:	jmp    406830 <flatcc_json_printer_enum@@Base>
  404367:	nop    WORD PTR [rax+rax*1+0x0]
  404370:	mov    edx,0x17
  404375:	lea    rsi,[rip+0xbff0]        # 41036c <_IO_stdin_used@@Base+0x36c>
  40437c:	jmp    406830 <flatcc_json_printer_enum@@Base>
  404381:	nop    DWORD PTR [rax+0x0]
  404388:	mov    edx,0x4
  40438d:	lea    rsi,[rip+0xbf9a]        # 41032e <_IO_stdin_used@@Base+0x32e>
  404394:	jmp    406830 <flatcc_json_printer_enum@@Base>
  404399:	nop    DWORD PTR [rax+0x0]
  4043a0:	mov    edx,0x8
  4043a5:	lea    rsi,[rip+0xbfd8]        # 410384 <_IO_stdin_used@@Base+0x384>
  4043ac:	jmp    406830 <flatcc_json_printer_enum@@Base>
  4043b1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4043bc:	nop    DWORD PTR [rax+0x0]
  4043c0:	push   r14
  4043c2:	mov    r14,rsi
  4043c5:	lea    rsi,[rip+0xbfc5]        # 410391 <_IO_stdin_used@@Base+0x391>
  4043cc:	push   r13
  4043ce:	push   r12
  4043d0:	push   rbp
  4043d1:	push   rbx
  4043d2:	call   4032a0 <fopen@plt>
  4043d7:	test   rax,rax
  4043da:	je     4044b0 <_start@@Base+0x1130>
  4043e0:	mov    r12,rax
  4043e3:	mov    edx,0x2
  4043e8:	xor    esi,esi
  4043ea:	mov    rdi,rax
  4043ed:	call   403260 <fseek@plt>
  4043f2:	mov    rdi,r12
  4043f5:	call   403230 <ftell@plt>
  4043fa:	mov    rbp,rax
  4043fd:	mov    QWORD PTR [r14],rax
  404400:	mov    rdi,r12
  404403:	cmp    rax,0x2800
  404409:	ja     4044a0 <_start@@Base+0x1120>
  40440f:	call   4031e0 <rewind@plt>
  404414:	test   rbp,rbp
  404417:	mov    edi,0x1
  40441c:	cmovne rdi,rbp
  404420:	call   403250 <malloc@plt>
  404425:	mov    r13,rax
  404428:	test   rax,rax
  40442b:	je     4044b4 <_start@@Base+0x1134>
  404431:	xor    ebx,ebx
  404433:	jmp    40443b <_start@@Base+0x10bb>
  404435:	nop    DWORD PTR [rax]
  404438:	add    rbx,rax
  40443b:	mov    rdx,rbp
  40443e:	sub    rdx,rbx
  404441:	lea    rdi,[r13+rbx*1+0x0]
  404446:	mov    rcx,r12
  404449:	mov    esi,0x1
  40444e:	call   4031b0 <fread@plt>
  404453:	test   rax,rax
  404456:	jne    404438 <_start@@Base+0x10b8>
  404458:	mov    rdi,r12
  40445b:	cmp    rbp,rbx
  40445e:	jne    404478 <_start@@Base+0x10f8>
  404460:	call   4031c0 <fclose@plt>
  404465:	pop    rbx
  404466:	mov    QWORD PTR [r14],rbp
  404469:	pop    rbp
  40446a:	pop    r12
  40446c:	mov    rax,r13
  40446f:	pop    r13
  404471:	pop    r14
  404473:	ret    
  404474:	nop    DWORD PTR [rax+0x0]
  404478:	call   4031c0 <fclose@plt>
  40447d:	mov    rdi,r13
  404480:	call   403190 <free@plt>
  404485:	pop    rbx
  404486:	mov    QWORD PTR [r14],rbp
  404489:	pop    rbp
  40448a:	xor    r13d,r13d
  40448d:	pop    r12
  40448f:	mov    rax,r13
  404492:	pop    r13
  404494:	pop    r14
  404496:	ret    
  404497:	nop    WORD PTR [rax+rax*1+0x0]
  4044a0:	call   4031c0 <fclose@plt>
  4044a5:	jmp    404485 <_start@@Base+0x1105>
  4044a7:	nop    WORD PTR [rax+rax*1+0x0]
  4044b0:	xor    ebp,ebp
  4044b2:	jmp    404485 <_start@@Base+0x1105>
  4044b4:	mov    rdi,r12
  4044b7:	call   4031c0 <fclose@plt>
  4044bc:	jmp    404485 <_start@@Base+0x1105>
  4044be:	xchg   ax,ax
  4044c0:	endbr64 
  4044c4:	ret    
  4044c5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

00000000004044d0 <test_print@@Base>:
  4044d0:	endbr64 
  4044d4:	push   r15
  4044d6:	lea    rsi,[rip+0xbeb7]        # 410394 <_IO_stdin_used@@Base+0x394>
  4044dd:	push   r14
  4044df:	push   r13
  4044e1:	push   r12
  4044e3:	push   rbp
  4044e4:	push   rbx
  4044e5:	sub    rsp,0x98
  4044ec:	mov    r13,0x4150d8
  4044f3:	mov    rax,QWORD PTR fs:0x28
  4044fc:	mov    QWORD PTR [rsp+0x88],rax
  404504:	xor    eax,eax
  404506:	mov    rdi,QWORD PTR [r13+0x0]
  40450a:	mov    QWORD PTR [rsp+0x18],0x0
  404513:	mov    QWORD PTR [rsp+0x20],0x0
  40451c:	mov    QWORD PTR [rsp+0x28],0x0
  404525:	call   4032a0 <fopen@plt>
  40452a:	test   rax,rax
  40452d:	je     4047ef <test_print@@Base+0x31f>
  404533:	lea    rbx,[rsp+0x30]
  404538:	mov    rsi,rax
  40453b:	mov    rdi,rbx
  40453e:	mov    rbp,rax
  404541:	call   40fc30 <flatcc_json_printer_init@@Base>
  404546:	mov    r12,0x4150f0
  40454d:	mov    edx,0x1
  404552:	mov    rax,QWORD PTR [r12]
  404556:	mov    BYTE PTR [rsp+0x61],0x2
  40455b:	mov    WORD PTR [rsp+0x62],dx
  404560:	test   rax,rax
  404563:	je     404584 <test_print@@Base+0xb4>
  404565:	mov    ecx,0x2
  40456a:	lea    rdi,[rip+0xbe26]        # 410397 <_IO_stdin_used@@Base+0x397>
  404571:	mov    rsi,rax
  404574:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  404576:	seta   dl
  404579:	sbb    dl,0x0
  40457c:	test   dl,dl
  40457e:	jne    4046c0 <test_print@@Base+0x1f0>
  404584:	mov    QWORD PTR [rsp+0x18],0x120
  40458d:	lea    r15,[rip+0xc04c]        # 4105e0 <_IO_stdin_used@@Base+0x5e0>
  404594:	mov    rax,0x4150e0
  40459b:	lea    rsi,[rsp+0x20]
  4045a0:	mov    rdi,QWORD PTR [rax]
  4045a3:	call   4043c0 <_start@@Base+0x1040>
  4045a8:	mov    r14,rax
  4045ab:	test   rax,rax
  4045ae:	je     404760 <test_print@@Base+0x290>
  4045b4:	mov    rdx,QWORD PTR [rsp+0x18]
  4045b9:	lea    r8,[rip+0xfffffffffffff130]        # 4036f0 <_start@@Base+0x370>
  4045c0:	lea    rcx,[rip+0xbdd2]        # 410399 <_IO_stdin_used@@Base+0x399>
  4045c7:	mov    rsi,r15
  4045ca:	mov    rdi,rbx
  4045cd:	call   40f6c0 <flatcc_json_printer_table_as_root@@Base>
  4045d2:	mov    esi,0x1
  4045d7:	mov    rdi,rbx
  4045da:	call   QWORD PTR [rsp+0x78]
  4045de:	mov    eax,DWORD PTR [rsp+0x6c]
  4045e2:	test   eax,eax
  4045e4:	jne    404718 <test_print@@Base+0x248>
  4045ea:	mov    rdi,rbp
  4045ed:	call   4031c0 <fclose@plt>
  4045f2:	mov    rdi,QWORD PTR [r13+0x0]
  4045f6:	lea    rsi,[rsp+0x28]
  4045fb:	call   4043c0 <_start@@Base+0x1040>
  404600:	mov    rbp,rax
  404603:	test   rax,rax
  404606:	je     4047b0 <test_print@@Base+0x2e0>
  40460c:	mov    rax,QWORD PTR [rip+0x109e5]        # 414ff8 <stderr@GLIBC_2.2.5>
  404613:	mov    rdx,QWORD PTR [rsp+0x28]
  404618:	mov    rcx,QWORD PTR [rax]
  40461b:	cmp    rdx,QWORD PTR [rsp+0x20]
  404620:	jne    404642 <test_print@@Base+0x172>
  404622:	mov    rsi,r14
  404625:	mov    rdi,rbp
  404628:	mov    QWORD PTR [rsp+0x8],rcx
  40462d:	call   403210 <memcmp@plt>
  404632:	test   eax,eax
  404634:	mov    r13d,eax
  404637:	mov    rcx,QWORD PTR [rsp+0x8]
  40463c:	je     404740 <test_print@@Base+0x270>
  404642:	lea    rdx,[rip+0xbe87]        # 4104d0 <_IO_stdin_used@@Base+0x4d0>
  404649:	mov    esi,0x1
  40464e:	mov    rdi,rcx
  404651:	xor    eax,eax
  404653:	call   4032d0 <__fprintf_chk@plt>
  404658:	mov    r13d,0xffffffff
  40465e:	mov    rdi,rbx
  404661:	call   40fe30 <flatcc_json_printer_clear@@Base>
  404666:	cmp    QWORD PTR [r12],0x0
  40466b:	je     404730 <test_print@@Base+0x260>
  404671:	mov    rdi,r15
  404674:	call   403190 <free@plt>
  404679:	mov    rdi,r14
  40467c:	call   403190 <free@plt>
  404681:	test   rbp,rbp
  404684:	je     40468e <test_print@@Base+0x1be>
  404686:	mov    rdi,rbp
  404689:	call   403190 <free@plt>
  40468e:	mov    rbx,QWORD PTR [rsp+0x88]
  404696:	xor    rbx,QWORD PTR fs:0x28
  40469f:	mov    eax,r13d
  4046a2:	jne    40481b <test_print@@Base+0x34b>
  4046a8:	add    rsp,0x98
  4046af:	pop    rbx
  4046b0:	pop    rbp
  4046b1:	pop    r12
  4046b3:	pop    r13
  4046b5:	pop    r14
  4046b7:	pop    r15
  4046b9:	ret    
  4046ba:	nop    WORD PTR [rax+rax*1+0x0]
  4046c0:	lea    rsi,[rsp+0x18]
  4046c5:	mov    rdi,rax
  4046c8:	call   4043c0 <_start@@Base+0x1040>
  4046cd:	mov    r15,rax
  4046d0:	test   rax,rax
  4046d3:	jne    404594 <test_print@@Base+0xc4>
  4046d9:	mov    rax,QWORD PTR [rip+0x10918]        # 414ff8 <stderr@GLIBC_2.2.5>
  4046e0:	mov    rcx,QWORD PTR [r12]
  4046e4:	mov    rdi,QWORD PTR [rax]
  4046e7:	lea    rdx,[rip+0xbd5a]        # 410448 <_IO_stdin_used@@Base+0x448>
  4046ee:	mov    esi,0x1
  4046f3:	xor    eax,eax
  4046f5:	call   4032d0 <__fprintf_chk@plt>
  4046fa:	mov    rdi,rbx
  4046fd:	call   40fe30 <flatcc_json_printer_clear@@Base>
  404702:	mov    rdi,rbp
  404705:	call   4031c0 <fclose@plt>
  40470a:	mov    r13d,0xffffffff
  404710:	jmp    40468e <test_print@@Base+0x1be>
  404715:	nop    DWORD PTR [rax]
  404718:	lea    rsi,[rip+0xbc7f]        # 41039e <_IO_stdin_used@@Base+0x39e>
  40471f:	mov    edi,0x1
  404724:	xor    eax,eax
  404726:	call   403280 <__printf_chk@plt>
  40472b:	jmp    4045ea <test_print@@Base+0x11a>
  404730:	mov    rdi,r14
  404733:	call   403190 <free@plt>
  404738:	jmp    404686 <test_print@@Base+0x1b6>
  40473d:	nop    DWORD PTR [rax]
  404740:	lea    rdx,[rip+0xbc75]        # 4103bc <_IO_stdin_used@@Base+0x3bc>
  404747:	mov    esi,0x1
  40474c:	mov    rdi,rcx
  40474f:	xor    eax,eax
  404751:	call   4032d0 <__fprintf_chk@plt>
  404756:	jmp    40465e <test_print@@Base+0x18e>
  40475b:	nop    DWORD PTR [rax+rax*1+0x0]
  404760:	mov    rax,0x4150e0
  404767:	lea    rdx,[rip+0xbd0a]        # 410478 <_IO_stdin_used@@Base+0x478>
  40476e:	mov    rcx,QWORD PTR [rax]
  404771:	mov    rax,QWORD PTR [rip+0x10880]        # 414ff8 <stderr@GLIBC_2.2.5>
  404778:	mov    esi,0x1
  40477d:	mov    rdi,QWORD PTR [rax]
  404780:	xor    eax,eax
  404782:	call   4032d0 <__fprintf_chk@plt>
  404787:	mov    rdi,rbx
  40478a:	call   40fe30 <flatcc_json_printer_clear@@Base>
  40478f:	cmp    QWORD PTR [r12],0x0
  404794:	je     404702 <test_print@@Base+0x232>
  40479a:	mov    rdi,r15
  40479d:	call   403190 <free@plt>
  4047a2:	jmp    404702 <test_print@@Base+0x232>
  4047a7:	nop    WORD PTR [rax+rax*1+0x0]
  4047b0:	mov    rax,QWORD PTR [rip+0x10841]        # 414ff8 <stderr@GLIBC_2.2.5>
  4047b7:	mov    rcx,QWORD PTR [r13+0x0]
  4047bb:	mov    rdi,QWORD PTR [rax]
  4047be:	lea    rdx,[rip+0xbce3]        # 4104a8 <_IO_stdin_used@@Base+0x4a8>
  4047c5:	mov    esi,0x1
  4047ca:	xor    eax,eax
  4047cc:	call   4032d0 <__fprintf_chk@plt>
  4047d1:	mov    rdi,rbx
  4047d4:	call   40fe30 <flatcc_json_printer_clear@@Base>
  4047d9:	cmp    QWORD PTR [r12],0x0
  4047de:	mov    r13d,0xffffffff
  4047e4:	jne    404671 <test_print@@Base+0x1a1>
  4047ea:	jmp    404679 <test_print@@Base+0x1a9>
  4047ef:	mov    rax,QWORD PTR [rip+0x10802]        # 414ff8 <stderr@GLIBC_2.2.5>
  4047f6:	mov    rcx,QWORD PTR [r13+0x0]
  4047fa:	mov    rdi,QWORD PTR [rax]
  4047fd:	lea    rdx,[rip+0xbc24]        # 410428 <_IO_stdin_used@@Base+0x428>
  404804:	mov    esi,0x1
  404809:	xor    eax,eax
  40480b:	call   4032d0 <__fprintf_chk@plt>
  404810:	mov    r13d,0xffffffff
  404816:	jmp    40468e <test_print@@Base+0x1be>
  40481b:	call   4031d0 <__stack_chk_fail@plt>
  404820:	mov    ecx,edi
  404822:	cmp    di,0x3e7
  404827:	jbe    4048f0 <test_print@@Base+0x420>
  40482d:	mov    r8d,0x64
  404833:	mov    eax,edi
  404835:	xor    edx,edx
  404837:	div    r8w
  40483b:	mov    eax,edi
  40483d:	shr    ax,0x2
  404841:	movzx  eax,ax
  404844:	imul   eax,eax,0x147b
  40484a:	lea    r8,[rip+0xc8af]        # 411100 <_IO_stdin_used@@Base+0x1100>
  404851:	shr    eax,0x11
  404854:	add    rdx,rdx
  404857:	and    edx,0xfe
  40485d:	lea    rcx,[r8+rdx*1]
  404861:	cmp    di,0x270f
  404866:	jbe    4048c0 <test_print@@Base+0x3f0>
  404868:	mov    BYTE PTR [rsi+0x5],0x0
  40486c:	lea    r9,[rsi+0x3]
  404870:	movzx  edx,WORD PTR [rcx]
  404873:	mov    WORD PTR [rsi+0x3],dx
  404877:	mov    esi,0x5
  40487c:	mov    edx,eax
  40487e:	shr    dx,0x2
  404882:	movzx  edx,dx
  404885:	imul   edx,edx,0x147b
  40488b:	mov    r10d,0x64
  404891:	lea    rdi,[r9-0x2]
  404895:	shr    edx,0x11
  404898:	mov    ecx,edx
  40489a:	mov    edx,eax
  40489c:	sar    dx,0xf
  4048a0:	idiv   r10w
  4048a4:	lea    rax,[rdx+rdx*1]
  4048a8:	and    eax,0x1fffe
  4048ad:	movzx  eax,WORD PTR [r8+rax*1]
  4048b2:	mov    WORD PTR [r9-0x2],ax
  4048b7:	lea    eax,[rcx+0x30]
  4048ba:	mov    BYTE PTR [rdi-0x1],al
  4048bd:	mov    eax,esi
  4048bf:	ret    
  4048c0:	mov    BYTE PTR [rsi+0x4],0x0
  4048c4:	lea    rdx,[rsi+0x2]
  4048c8:	movzx  ecx,WORD PTR [rcx]
  4048cb:	mov    WORD PTR [rsi+0x2],cx
  4048cf:	mov    esi,0x4
  4048d4:	add    rax,rax
  4048d7:	and    eax,0x1fffe
  4048dc:	movzx  eax,WORD PTR [r8+rax*1]
  4048e1:	mov    WORD PTR [rdx-0x2],ax
  4048e5:	mov    eax,esi
  4048e7:	ret    
  4048e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4048f0:	cmp    di,0x63
  4048f4:	ja     404910 <test_print@@Base+0x440>
  4048f6:	cmp    di,0x9
  4048fa:	ja     404930 <test_print@@Base+0x460>
  4048fc:	lea    rdi,[rsi+0x1]
  404900:	mov    BYTE PTR [rsi+0x1],0x0
  404904:	mov    esi,0x1
  404909:	jmp    4048b7 <test_print@@Base+0x3e7>
  40490b:	nop    DWORD PTR [rax+rax*1+0x0]
  404910:	lea    r9,[rsi+0x3]
  404914:	mov    BYTE PTR [rsi+0x3],0x0
  404918:	mov    eax,edi
  40491a:	mov    esi,0x3
  40491f:	lea    r8,[rip+0xc7da]        # 411100 <_IO_stdin_used@@Base+0x1100>
  404926:	jmp    40487c <test_print@@Base+0x3ac>
  40492b:	nop    DWORD PTR [rax+rax*1+0x0]
  404930:	lea    rdx,[rsi+0x2]
  404934:	mov    BYTE PTR [rsi+0x2],0x0
  404938:	mov    eax,edi
  40493a:	mov    esi,0x2
  40493f:	lea    r8,[rip+0xc7ba]        # 411100 <_IO_stdin_used@@Base+0x1100>
  404946:	jmp    4048d4 <test_print@@Base+0x404>
  404948:	nop    DWORD PTR [rax+rax*1+0x0]
  404950:	cmp    edi,0x270f
  404956:	jbe    404a50 <test_print@@Base+0x580>
  40495c:	mov    r8d,0x51eb851f
  404962:	mov    eax,edi
  404964:	mul    r8d
  404967:	mov    r9d,edi
  40496a:	push   rbp
  40496b:	mov    ecx,edx
  40496d:	shr    ecx,0x5
  404970:	imul   eax,ecx,0x64
  404973:	lea    r10,[rip+0xc786]        # 411100 <_IO_stdin_used@@Base+0x1100>
  40497a:	push   rbx
  40497b:	sub    r9d,eax
  40497e:	mov    eax,ecx
  404980:	mul    r8d
  404983:	mov    eax,edi
  404985:	add    r9d,r9d
  404988:	shr    edx,0x5
  40498b:	imul   edx,edx,0x64
  40498e:	add    r9,r10
  404991:	sub    ecx,edx
  404993:	mov    edx,0xd1b71759
  404998:	mul    edx
  40499a:	add    ecx,ecx
  40499c:	lea    r11,[r10+rcx*1]
  4049a0:	mov    ecx,edx
  4049a2:	shr    ecx,0xd
  4049a5:	cmp    edi,0x98967f
  4049ab:	jbe    404ad0 <test_print@@Base+0x600>
  4049b1:	mov    eax,ecx
  4049b3:	mul    r8d
  4049b6:	mov    eax,edi
  4049b8:	shr    edx,0x5
  4049bb:	imul   edx,edx,0x64
  4049be:	sub    ecx,edx
  4049c0:	mov    edx,0x431bde83
  4049c5:	mul    edx
  4049c7:	lea    ebx,[rcx+rcx*1]
  4049ca:	add    rbx,r10
  4049cd:	mov    ecx,edx
  4049cf:	shr    ecx,0x12
  4049d2:	cmp    edi,0x3b9ac9ff
  4049d8:	ja     404b48 <test_print@@Base+0x678>
  4049de:	cmp    edi,0x5f5e0ff
  4049e4:	jbe    404bc8 <test_print@@Base+0x6f8>
  4049ea:	mov    BYTE PTR [rsi+0x9],0x0
  4049ee:	lea    rax,[rsi+0x7]
  4049f2:	movzx  edx,WORD PTR [r9]
  4049f6:	mov    r9,r11
  4049f9:	mov    WORD PTR [rsi+0x7],dx
  4049fd:	mov    r11,rbx
  404a00:	mov    esi,0x9
  404a05:	movzx  edx,WORD PTR [r9]
  404a09:	mov    edi,0x51eb851f
  404a0e:	mov    WORD PTR [rax-0x2],dx
  404a12:	lea    rbx,[rax-0x2]
  404a16:	mov    eax,ecx
  404a18:	mul    edi
  404a1a:	mov    edi,edx
  404a1c:	shr    edi,0x5
  404a1f:	imul   eax,edi,0x64
  404a22:	sub    ecx,eax
  404a24:	lea    r8d,[rcx+rcx*1]
  404a28:	add    r8,r10
  404a2b:	movzx  edx,WORD PTR [r11]
  404a2f:	lea    rax,[rbx-0x2]
  404a33:	mov    WORD PTR [rbx-0x2],dx
  404a37:	add    edi,0x30
  404a3a:	lea    rdx,[rax-0x2]
  404a3e:	movzx  ecx,WORD PTR [r8]
  404a42:	mov    WORD PTR [rax-0x2],cx
  404a46:	mov    BYTE PTR [rdx-0x1],dil
  404a4a:	mov    eax,esi
  404a4c:	pop    rbx
  404a4d:	pop    rbp
  404a4e:	ret    
  404a4f:	nop
  404a50:	cmp    edi,0x63
  404a53:	jbe    404ab0 <test_print@@Base+0x5e0>
  404a55:	mov    eax,edi
  404a57:	mov    edx,0x51eb851f
  404a5c:	mul    edx
  404a5e:	mov    r8d,edi
  404a61:	lea    r10,[rip+0xc698]        # 411100 <_IO_stdin_used@@Base+0x1100>
  404a68:	shr    edx,0x5
  404a6b:	imul   eax,edx,0x64
  404a6e:	mov    ecx,edx
  404a70:	sub    r8d,eax
  404a73:	add    r8d,r8d
  404a76:	add    r8,r10
  404a79:	cmp    edi,0x3e7
  404a7f:	jbe    404b28 <test_print@@Base+0x658>
  404a85:	mov    BYTE PTR [rsi+0x4],0x0
  404a89:	lea    rax,[rsi+0x4]
  404a8d:	lea    rdx,[rax-0x2]
  404a91:	movzx  edi,WORD PTR [r8]
  404a95:	mov    esi,0x4
  404a9a:	mov    WORD PTR [rax-0x2],di
  404a9e:	add    ecx,ecx
  404aa0:	movzx  eax,WORD PTR [r10+rcx*1]
  404aa5:	mov    WORD PTR [rdx-0x2],ax
  404aa9:	mov    eax,esi
  404aab:	ret    
  404aac:	nop    DWORD PTR [rax+0x0]
  404ab0:	cmp    edi,0x9
  404ab3:	ja     404ba8 <test_print@@Base+0x6d8>
  404ab9:	lea    rdx,[rsi+0x1]
  404abd:	mov    BYTE PTR [rsi+0x1],0x0
  404ac1:	mov    esi,0x1
  404ac6:	add    edi,0x30
  404ac9:	mov    BYTE PTR [rdx-0x1],dil
  404acd:	mov    eax,esi
  404acf:	ret    
  404ad0:	cmp    edi,0xf423f
  404ad6:	ja     404b90 <test_print@@Base+0x6c0>
  404adc:	cmp    edi,0x1869f
  404ae2:	jbe    404be0 <test_print@@Base+0x710>
  404ae8:	lea    rdx,[rsi+0x6]
  404aec:	mov    BYTE PTR [rsi+0x6],0x0
  404af0:	mov    r8,r11
  404af3:	mov    rbx,r9
  404af6:	mov    esi,0x6
  404afb:	movzx  edi,WORD PTR [rbx]
  404afe:	lea    rax,[rdx-0x2]
  404b02:	mov    WORD PTR [rdx-0x2],di
  404b06:	add    ecx,ecx
  404b08:	lea    rdx,[rax-0x2]
  404b0c:	movzx  edi,WORD PTR [r8]
  404b10:	mov    WORD PTR [rax-0x2],di
  404b14:	movzx  eax,WORD PTR [r10+rcx*1]
  404b19:	mov    WORD PTR [rdx-0x2],ax
  404b1d:	mov    eax,esi
  404b1f:	pop    rbx
  404b20:	pop    rbp
  404b21:	ret    
  404b22:	nop    WORD PTR [rax+rax*1+0x0]
  404b28:	mov    BYTE PTR [rsi+0x3],0x0
  404b2c:	lea    rax,[rsi+0x3]
  404b30:	mov    edi,edx
  404b32:	movzx  ecx,WORD PTR [r8]
  404b36:	mov    esi,0x3
  404b3b:	lea    rdx,[rax-0x2]
  404b3f:	mov    WORD PTR [rax-0x2],cx
  404b43:	jmp    404ac6 <test_print@@Base+0x5f6>
  404b45:	nop    DWORD PTR [rax]
  404b48:	mov    BYTE PTR [rsi+0xa],0x0
  404b4c:	lea    rbp,[rsi+0x8]
  404b50:	movzx  eax,WORD PTR [r9]
  404b54:	mov    WORD PTR [rsi+0x8],ax
  404b58:	mov    eax,ecx
  404b5a:	mul    r8d
  404b5d:	mov    eax,edi
  404b5f:	mov    esi,0xa
  404b64:	shr    edx,0x5
  404b67:	imul   edx,edx,0x64
  404b6a:	sub    ecx,edx
  404b6c:	mov    edx,0x55e63b89
  404b71:	mul    edx
  404b73:	lea    r8d,[rcx+rcx*1]
  404b77:	add    r8,r10
  404b7a:	mov    ecx,edx
  404b7c:	shr    ecx,0x19
  404b7f:	movzx  eax,WORD PTR [r11]
  404b83:	lea    rdx,[rbp-0x2]
  404b87:	mov    WORD PTR [rbp-0x2],ax
  404b8b:	jmp    404afb <test_print@@Base+0x62b>
  404b90:	lea    rax,[rsi+0x7]
  404b94:	mov    BYTE PTR [rsi+0x7],0x0
  404b98:	mov    esi,0x7
  404b9d:	jmp    404a05 <test_print@@Base+0x535>
  404ba2:	nop    WORD PTR [rax+rax*1+0x0]
  404ba8:	lea    rdx,[rsi+0x2]
  404bac:	mov    BYTE PTR [rsi+0x2],0x0
  404bb0:	mov    ecx,edi
  404bb2:	mov    esi,0x2
  404bb7:	lea    r10,[rip+0xc542]        # 411100 <_IO_stdin_used@@Base+0x1100>
  404bbe:	jmp    404a9e <test_print@@Base+0x5ce>
  404bc3:	nop    DWORD PTR [rax+rax*1+0x0]
  404bc8:	lea    rbp,[rsi+0x8]
  404bcc:	mov    BYTE PTR [rsi+0x8],0x0
  404bd0:	mov    r8,rbx
  404bd3:	mov    esi,0x8
  404bd8:	mov    rbx,r11
  404bdb:	mov    r11,r9
  404bde:	jmp    404b7f <test_print@@Base+0x6af>
  404be0:	lea    rbx,[rsi+0x5]
  404be4:	mov    BYTE PTR [rsi+0x5],0x0
  404be8:	mov    r8,r11
  404beb:	mov    edi,ecx
  404bed:	mov    r11,r9
  404bf0:	mov    esi,0x5
  404bf5:	jmp    404a2b <test_print@@Base+0x55b>
  404bfa:	nop    WORD PTR [rax+rax*1+0x0]
  404c00:	cmp    rdi,0x3b9ac9ff
  404c07:	jbe    404ee0 <test_print@@Base+0xa10>
  404c0d:	mov    rdx,rdi
  404c10:	shr    rdx,0x2
  404c14:	mov    rax,rdx
  404c17:	movabs r11,0x28f5c28f5c28f5c3
  404c21:	mul    r11
  404c24:	push   r12
  404c26:	lea    r8,[rip+0xc4d3]        # 411100 <_IO_stdin_used@@Base+0x1100>
  404c2d:	mov    rcx,rdx
  404c30:	shr    rcx,0x2
  404c34:	push   rbp
  404c35:	imul   rax,rcx,0x64
  404c39:	mov    r10,rcx
  404c3c:	push   rbx
  404c3d:	mov    rbx,rdi
  404c40:	sub    rbx,rax
  404c43:	movabs rax,0x9184e729fff
  404c4d:	lea    r9,[r8+rbx*2]
  404c51:	cmp    rdi,rax
  404c54:	jbe    404e18 <test_print@@Base+0x948>
  404c5a:	shr    rdx,0x4
  404c5e:	mov    rax,rdx
  404c61:	mul    r11
  404c64:	mov    rax,rdi
  404c67:	shr    rdx,0x2
  404c6b:	imul   rdx,rdx,0x64
  404c6f:	sub    rcx,rdx
  404c72:	movabs rdx,0x346dc5d63886594b
  404c7c:	mul    rdx
  404c7f:	lea    rbx,[r8+rcx*2]
  404c83:	mov    r10,rdx
  404c86:	shr    rdx,0xd
  404c8a:	mov    rax,rdx
  404c8d:	mul    r11
  404c90:	shr    r10,0xb
  404c94:	mov    rax,r10
  404c97:	shr    rdx,0x2
  404c9b:	imul   rdx,rdx,0x64
  404c9f:	sub    rax,rdx
  404ca2:	lea    rbp,[r8+rax*2]
  404ca6:	movabs rdx,0x431bde82d7b634db
  404cb0:	mov    rax,rdi
  404cb3:	mul    rdx
  404cb6:	movabs rax,0x2386f26fc0ffff
  404cc0:	mov    rcx,rdx
  404cc3:	shr    rcx,0x12
  404cc7:	cmp    rdi,rax
  404cca:	ja     404ee8 <test_print@@Base+0xa18>
  404cd0:	movabs rax,0x38d7ea4c67fff
  404cda:	cmp    rdi,rax
  404cdd:	jbe    405000 <test_print@@Base+0xb30>
  404ce3:	mov    BYTE PTR [rsi+0x10],0x0
  404ce7:	mov    rdx,rbp
  404cea:	lea    rax,[rsi+0x10]
  404cee:	mov    rbp,r9
  404cf1:	mov    edi,0x10
  404cf6:	mov    r9,rdx
  404cf9:	movzx  edx,WORD PTR [rbp+0x0]
  404cfd:	lea    r10,[rax-0x2]
  404d01:	mov    WORD PTR [rax-0x2],dx
  404d05:	mov    rax,rcx
  404d08:	shr    rax,0x2
  404d0c:	movabs rdx,0x28f5c28f5c28f5c3
  404d16:	mul    rdx
  404d19:	mov    rax,rdx
  404d1c:	shr    rax,0x2
  404d20:	imul   rdx,rax,0x64
  404d24:	sub    rcx,rdx
  404d27:	lea    r11,[r8+rcx*2]
  404d2b:	mov    rcx,rax
  404d2e:	movzx  eax,WORD PTR [rbx]
  404d31:	lea    rdx,[r10-0x2]
  404d35:	mov    WORD PTR [r10-0x2],ax
  404d3a:	movzx  esi,WORD PTR [r9]
  404d3e:	lea    rax,[rdx-0x2]
  404d42:	mov    WORD PTR [rdx-0x2],si
  404d46:	movzx  edx,WORD PTR [r11]
  404d4a:	lea    rsi,[rax-0x2]
  404d4e:	mov    WORD PTR [rax-0x2],dx
  404d52:	mov    rdx,rcx
  404d55:	shr    rdx,0x2
  404d59:	movabs r9,0x28f5c28f5c28f5c3
  404d63:	mov    rax,rdx
  404d66:	mul    r9
  404d69:	mov    rbx,rcx
  404d6c:	mov    r10,rdx
  404d6f:	shr    r10,0x2
  404d73:	imul   rax,r10,0x64
  404d77:	shr    rdx,0x4
  404d7b:	sub    rbx,rax
  404d7e:	movzx  eax,WORD PTR [r8+rbx*2]
  404d83:	mov    WORD PTR [rsi-0x2],ax
  404d87:	mov    rax,rdx
  404d8a:	mul    r9
  404d8d:	shr    rdx,0x2
  404d91:	imul   rdx,rdx,0x64
  404d95:	sub    r10,rdx
  404d98:	movzx  eax,WORD PTR [r8+r10*2]
  404d9d:	movabs rdx,0x346dc5d63886594b
  404da7:	mov    WORD PTR [rsi-0x4],ax
  404dab:	mov    rax,rcx
  404dae:	mul    rdx
  404db1:	mov    r10,rdx
  404db4:	shr    rdx,0xd
  404db8:	mov    rax,rdx
  404dbb:	mul    r9
  404dbe:	shr    r10,0xb
  404dc2:	shr    rdx,0x2
  404dc6:	imul   rdx,rdx,0x64
  404dca:	sub    r10,rdx
  404dcd:	movzx  eax,WORD PTR [r8+r10*2]
  404dd2:	movabs rdx,0x431bde82d7b634db
  404ddc:	mov    WORD PTR [rsi-0x6],ax
  404de0:	mov    rax,rcx
  404de3:	mul    rdx
  404de6:	mov    rcx,rdx
  404de9:	shr    rdx,0x14
  404ded:	mov    rax,rdx
  404df0:	mul    r9
  404df3:	shr    rcx,0x12
  404df7:	shr    rdx,0x2
  404dfb:	imul   rdx,rdx,0x64
  404dff:	sub    rcx,rdx
  404e02:	movzx  eax,WORD PTR [r8+rcx*2]
  404e07:	mov    WORD PTR [rsi-0x8],ax
  404e0b:	mov    eax,edi
  404e0d:	pop    rbx
  404e0e:	pop    rbp
  404e0f:	pop    r12
  404e11:	ret    
  404e12:	nop    WORD PTR [rax+rax*1+0x0]
  404e18:	movabs rax,0x174876e7ff
  404e22:	cmp    rdi,rax
  404e25:	jbe    404fa8 <test_print@@Base+0xad8>
  404e2b:	shr    rdx,0x4
  404e2f:	mov    rax,rdx
  404e32:	mul    r11
  404e35:	mov    rax,rcx
  404e38:	shr    rdx,0x2
  404e3c:	imul   rdx,rdx,0x64
  404e40:	sub    rax,rdx
  404e43:	lea    r11,[r8+rax*2]
  404e47:	movabs rdx,0x346dc5d63886594b
  404e51:	mov    rax,rdi
  404e54:	mul    rdx
  404e57:	movabs rax,0xe8d4a50fff
  404e61:	mov    rcx,rdx
  404e64:	shr    rcx,0xb
  404e68:	cmp    rdi,rax
  404e6b:	jbe    405080 <test_print@@Base+0xbb0>
  404e71:	mov    BYTE PTR [rsi+0xd],0x0
  404e75:	lea    rax,[rsi+0xd]
  404e79:	mov    edi,0xd
  404e7e:	movzx  edx,WORD PTR [r9]
  404e82:	lea    rbx,[rax-0x2]
  404e86:	mov    WORD PTR [rax-0x2],dx
  404e8a:	movzx  eax,WORD PTR [r11]
  404e8e:	movabs rdx,0xcccccccccccccccd
  404e98:	mov    WORD PTR [rbx-0x2],ax
  404e9c:	mov    rax,rcx
  404e9f:	mul    rdx
  404ea2:	lea    rsi,[rbx-0x3]
  404ea6:	shr    rdx,0x3
  404eaa:	lea    rax,[rdx+rdx*4]
  404eae:	add    rax,rax
  404eb1:	sub    rcx,rax
  404eb4:	mov    rdx,r10
  404eb7:	lea    ecx,[rcx+0x30]
  404eba:	shr    rdx,0x3
  404ebe:	mov    BYTE PTR [rbx-0x3],cl
  404ec1:	mov    rax,rdx
  404ec4:	movabs rcx,0x20c49ba5e353f7cf
  404ece:	mul    rcx
  404ed1:	mov    rcx,rdx
  404ed4:	shr    rcx,0x4
  404ed8:	jmp    404d52 <test_print@@Base+0x882>
  404edd:	nop    DWORD PTR [rax]
  404ee0:	jmp    404950 <test_print@@Base+0x480>
  404ee5:	nop    DWORD PTR [rax]
  404ee8:	shr    rdx,0x14
  404eec:	mov    rax,rdx
  404eef:	mul    r11
  404ef2:	mov    rax,rcx
  404ef5:	shr    rdx,0x2
  404ef9:	imul   rdx,rdx,0x64
  404efd:	sub    rax,rdx
  404f00:	lea    r12,[r8+rax*2]
  404f04:	movabs rdx,0xabcc77118461cefd
  404f0e:	mov    rax,rdi
  404f11:	mul    rdx
  404f14:	movabs rax,0xde0b6b3a763ffff
  404f1e:	mov    r10,rdx
  404f21:	shr    r10,0x1a
  404f25:	cmp    rdi,rax
  404f28:	jbe    405030 <test_print@@Base+0xb60>
  404f2e:	shr    rdx,0x1c
  404f32:	mov    rax,rdx
  404f35:	mul    r11
  404f38:	mov    rax,r10
  404f3b:	shr    rdx,0x2
  404f3f:	imul   rdx,rdx,0x64
  404f43:	sub    rax,rdx
  404f46:	lea    r11,[r8+rax*2]
  404f4a:	movabs rdx,0xdbe6fecebdedd5bf
  404f54:	mov    rax,rdi
  404f57:	mul    rdx
  404f5a:	movabs rax,0x8ac7230489e7ffff
  404f64:	mov    rcx,rdx
  404f67:	shr    rcx,0x21
  404f6b:	cmp    rdi,rax
  404f6e:	ja     404fd0 <test_print@@Base+0xb00>
  404f70:	mov    BYTE PTR [rsi+0x13],0x0
  404f74:	lea    rax,[rsi+0x11]
  404f78:	mov    edi,0x13
  404f7d:	movzx  edx,WORD PTR [r9]
  404f81:	mov    r9,r12
  404f84:	mov    WORD PTR [rsi+0x11],dx
  404f88:	movzx  esi,WORD PTR [rbx]
  404f8b:	lea    rdx,[rax-0x2]
  404f8f:	mov    WORD PTR [rax-0x2],si
  404f93:	movzx  esi,WORD PTR [rbp+0x0]
  404f97:	lea    rax,[rdx-0x2]
  404f9b:	mov    WORD PTR [rdx-0x2],si
  404f9f:	jmp    404e7e <test_print@@Base+0x9ae>
  404fa4:	nop    DWORD PTR [rax+0x0]
  404fa8:	movabs rax,0x2540be3ff
  404fb2:	cmp    rdi,rax
  404fb5:	ja     405060 <test_print@@Base+0xb90>
  404fbb:	lea    rax,[rsi+0xa]
  404fbf:	mov    BYTE PTR [rsi+0xa],0x0
  404fc3:	mov    r11,r9
  404fc6:	mov    edi,0xa
  404fcb:	jmp    404d46 <test_print@@Base+0x876>
  404fd0:	mov    BYTE PTR [rsi+0x14],0x0
  404fd4:	lea    rdx,[rsi+0x12]
  404fd8:	mov    edi,0x14
  404fdd:	movzx  eax,WORD PTR [r9]
  404fe1:	mov    r9,r11
  404fe4:	mov    WORD PTR [rsi+0x12],ax
  404fe8:	mov    rsi,rbx
  404feb:	mov    rbx,r12
  404fee:	movzx  esi,WORD PTR [rsi]
  404ff1:	lea    rax,[rdx-0x2]
  404ff5:	mov    WORD PTR [rdx-0x2],si
  404ff9:	jmp    404cf9 <test_print@@Base+0x829>
  404ffe:	xchg   ax,ax
  405000:	movabs rax,0x5af3107a3fff
  40500a:	cmp    rdi,rax
  40500d:	jbe    4050c8 <test_print@@Base+0xbf8>
  405013:	mov    r11,rbp
  405016:	lea    rdx,[rsi+0xf]
  40501a:	mov    rbp,r9
  40501d:	mov    BYTE PTR [rsi+0xf],0x0
  405021:	mov    r9,rbx
  405024:	mov    edi,0xf
  405029:	jmp    404f93 <test_print@@Base+0xac3>
  40502e:	xchg   ax,ax
  405030:	movabs rax,0x16345785d89ffff
  40503a:	cmp    rdi,rax
  40503d:	jbe    405098 <test_print@@Base+0xbc8>
  40503f:	mov    rax,rbp
  405042:	lea    rdx,[rsi+0x12]
  405046:	mov    BYTE PTR [rsi+0x12],0x0
  40504a:	mov    rbp,rbx
  40504d:	mov    rsi,r9
  405050:	mov    rcx,r10
  405053:	mov    rbx,rax
  405056:	mov    r9,r12
  405059:	mov    edi,0x12
  40505e:	jmp    404fee <test_print@@Base+0xb1e>
  405060:	mov    r10,rdi
  405063:	lea    rbx,[rsi+0xb]
  405067:	mov    BYTE PTR [rsi+0xb],0x0
  40506b:	mov    r11,r9
  40506e:	mov    edi,0xb
  405073:	jmp    404e8a <test_print@@Base+0x9ba>
  405078:	nop    DWORD PTR [rax+rax*1+0x0]
  405080:	lea    rdx,[rsi+0xc]
  405084:	mov    BYTE PTR [rsi+0xc],0x0
  405088:	mov    edi,0xc
  40508d:	jmp    404d3a <test_print@@Base+0x86a>
  405092:	nop    WORD PTR [rax+rax*1+0x0]
  405098:	mov    rdx,r10
  40509b:	mov    r10,rcx
  40509e:	mov    rcx,rdx
  4050a1:	mov    rdx,rbx
  4050a4:	lea    rax,[rsi+0x11]
  4050a8:	mov    rbx,r9
  4050ab:	mov    BYTE PTR [rsi+0x11],0x0
  4050af:	mov    r9,rbp
  4050b2:	mov    r11,r12
  4050b5:	mov    rbp,rdx
  4050b8:	mov    edi,0x11
  4050bd:	jmp    404f88 <test_print@@Base+0xab8>
  4050c2:	nop    WORD PTR [rax+rax*1+0x0]
  4050c8:	mov    rax,rbx
  4050cb:	lea    r10,[rsi+0xe]
  4050cf:	mov    rbx,r9
  4050d2:	mov    BYTE PTR [rsi+0xe],0x0
  4050d6:	mov    r11,rbp
  4050d9:	mov    r9,rax
  4050dc:	mov    edi,0xe
  4050e1:	jmp    404d2e <test_print@@Base+0x85e>
  4050e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4050f0:	push   r12
  4050f2:	mov    r11,rdx
  4050f5:	push   rbp
  4050f6:	push   rbx
  4050f7:	mov    rbp,QWORD PTR [rsp+0x20]
  4050fc:	sub    r11,rbp
  4050ff:	cmp    r11,r8
  405102:	jbe    4051d0 <test_print@@Base+0xd00>
  405108:	mov    rax,rcx
  40510b:	sub    rax,r8
  40510e:	cmp    r9,rax
  405111:	ja     4051e1 <test_print@@Base+0xd11>
  405117:	mov    rax,rcx
  40511a:	sub    rax,r9
  40511d:	movsxd r10,esi
  405120:	sub    rax,r8
  405123:	lea    rbx,[rdi+r10*1-0x1]
  405128:	nop    DWORD PTR [rax+rax*1+0x0]
  405130:	lea    r10,[r9+r8*1]
  405134:	cmp    r10,r11
  405137:	jb     405198 <test_print@@Base+0xcc8>
  405139:	mov    rax,rbp
  40513c:	sub    rax,rdx
  40513f:	sub    r11,r8
  405142:	add    rax,r10
  405145:	cmp    r11,rax
  405148:	jb     4051d0 <test_print@@Base+0xd00>
  40514e:	movsxd rsi,esi
  405151:	add    rdx,rbp
  405154:	dec    BYTE PTR [rdi+rsi*1-0x1]
  405158:	cmp    rdx,r10
  40515b:	jbe    405180 <test_print@@Base+0xcb0>
  40515d:	mov    rax,rcx
  405160:	sub    rax,r10
  405163:	cmp    rax,r9
  405166:	jb     405180 <test_print@@Base+0xcb0>
  405168:	add    r9,r10
  40516b:	cmp    r9,rdx
  40516e:	jb     40518a <test_print@@Base+0xcba>
  405170:	mov    rax,rdx
  405173:	sub    rax,r10
  405176:	sub    r9,rdx
  405179:	cmp    rax,r9
  40517c:	ja     40518a <test_print@@Base+0xcba>
  40517e:	xchg   ax,ax
  405180:	lea    rax,[rbp+rbp*1+0x0]
  405185:	cmp    rax,r10
  405188:	jbe    4051b0 <test_print@@Base+0xce0>
  40518a:	pop    rbx
  40518b:	pop    rbp
  40518c:	xor    eax,eax
  40518e:	pop    r12
  405190:	ret    
  405191:	nop    DWORD PTR [rax+0x0]
  405198:	mov    r12,rax
  40519b:	dec    BYTE PTR [rbx]
  40519d:	sub    r12,r9
  4051a0:	mov    r8,r10
  4051a3:	cmp    rax,r9
  4051a6:	jb     405180 <test_print@@Base+0xcb0>
  4051a8:	mov    rax,r12
  4051ab:	jmp    405130 <test_print@@Base+0xc60>
  4051ad:	nop    DWORD PTR [rax]
  4051b0:	shl    rbp,0x2
  4051b4:	sub    rcx,rbp
  4051b7:	mov    eax,0x1
  4051bc:	cmp    rcx,r10
  4051bf:	jb     40518a <test_print@@Base+0xcba>
  4051c1:	pop    rbx
  4051c2:	pop    rbp
  4051c3:	pop    r12
  4051c5:	ret    
  4051c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4051d0:	mov    r10,r8
  4051d3:	add    rdx,rbp
  4051d6:	cmp    rdx,r10
  4051d9:	ja     40515d <test_print@@Base+0xc8d>
  4051df:	jmp    405180 <test_print@@Base+0xcb0>
  4051e1:	mov    r10,r8
  4051e4:	jmp    405180 <test_print@@Base+0xcb0>
  4051e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4051f0:	mov    r9,rsi
  4051f3:	test   edi,edi
  4051f5:	jns    405200 <test_print@@Base+0xd30>
  4051f7:	mov    BYTE PTR [rsi],0x2d
  4051fa:	lea    r9,[rsi+0x1]
  4051fe:	neg    edi
  405200:	mov    r8,r9
  405203:	mov    ecx,0xcccccccd
  405208:	nop    DWORD PTR [rax+rax*1+0x0]
  405210:	mov    eax,edi
  405212:	mul    ecx
  405214:	inc    r8
  405217:	shr    edx,0x3
  40521a:	lea    eax,[rdx+rdx*4]
  40521d:	add    eax,eax
  40521f:	sub    edi,eax
  405221:	add    edi,0x30
  405224:	mov    BYTE PTR [r8-0x1],dil
  405228:	mov    edi,edx
  40522a:	test   edx,edx
  40522c:	jne    405210 <test_print@@Base+0xd40>
  40522e:	mov    rdx,r8
  405231:	sub    rdx,r9
  405234:	mov    r10d,edx
  405237:	shr    r10d,0x1f
  40523b:	add    r10d,edx
  40523e:	mov    BYTE PTR [r8],0x0
  405242:	sar    r10d,1
  405245:	cmp    edx,0x1
  405248:	jle    405271 <test_print@@Base+0xda1>
  40524a:	dec    edx
  40524c:	movsxd rdx,edx
  40524f:	add    rdx,r9
  405252:	xor    ecx,ecx
  405254:	nop    DWORD PTR [rax+0x0]
  405258:	movzx  edi,BYTE PTR [rdx]
  40525b:	movzx  eax,BYTE PTR [r9+rcx*1]
  405260:	mov    BYTE PTR [r9+rcx*1],dil
  405264:	inc    rcx
  405267:	mov    BYTE PTR [rdx],al
  405269:	dec    rdx
  40526c:	cmp    r10d,ecx
  40526f:	jg     405258 <test_print@@Base+0xd88>
  405271:	mov    rax,r8
  405274:	sub    rax,rsi
  405277:	ret    
  405278:	nop    DWORD PTR [rax+rax*1+0x0]
  405280:	endbr64 
  405284:	mov    rax,QWORD PTR [rdi+0x28]
  405288:	cmp    rax,QWORD PTR [rdi+0x20]
  40528c:	jb     4052ad <test_print@@Base+0xddd>
  40528e:	mov    edx,DWORD PTR [rdi+0x3c]
  405291:	test   edx,edx
  405293:	jne    40529c <test_print@@Base+0xdcc>
  405295:	mov    DWORD PTR [rdi+0x3c],0x3
  40529c:	mov    rdx,QWORD PTR [rdi]
  40529f:	mov    QWORD PTR [rdi+0x28],rdx
  4052a3:	sub    rax,rdx
  4052a6:	add    QWORD PTR [rdi+0x18],rax
  4052aa:	mov    rax,rdx
  4052ad:	mov    BYTE PTR [rax],0x0
  4052b0:	ret    
  4052b1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4052bc:	nop    DWORD PTR [rax+0x0]
  4052c0:	push   r13
  4052c2:	mov    r13,rsi
  4052c5:	push   r12
  4052c7:	mov    r12,rdx
  4052ca:	push   rbp
  4052cb:	mov    rbp,rdi
  4052ce:	push   rbx
  4052cf:	sub    rsp,0x8
  4052d3:	mov    rdi,QWORD PTR [rdi+0x28]
  4052d7:	mov    rbx,QWORD PTR [rbp+0x20]
  4052db:	cmp    rdi,rbx
  4052de:	jb     4052f0 <test_print@@Base+0xe20>
  4052e0:	mov    rdi,rbp
  4052e3:	xor    esi,esi
  4052e5:	call   QWORD PTR [rbp+0x48]
  4052e8:	mov    rbx,QWORD PTR [rbp+0x20]
  4052ec:	mov    rdi,QWORD PTR [rbp+0x28]
  4052f0:	sub    rbx,rdi
  4052f3:	cmp    rbx,r12
  4052f6:	jae    40532d <test_print@@Base+0xe5d>
  4052f8:	nop    DWORD PTR [rax+rax*1+0x0]
  405300:	mov    rdx,rbx
  405303:	mov    rsi,r13
  405306:	call   403240 <memcpy@plt>
  40530b:	add    QWORD PTR [rbp+0x28],rbx
  40530f:	mov    rdi,rbp
  405312:	xor    esi,esi
  405314:	add    r13,rbx
  405317:	call   QWORD PTR [rbp+0x48]
  40531a:	sub    r12,rbx
  40531d:	mov    rdi,QWORD PTR [rbp+0x28]
  405321:	mov    rbx,QWORD PTR [rbp+0x20]
  405325:	sub    rbx,rdi
  405328:	cmp    r12,rbx
  40532b:	ja     405300 <test_print@@Base+0xe30>
  40532d:	mov    rdx,r12
  405330:	mov    rsi,r13
  405333:	call   403240 <memcpy@plt>
  405338:	add    QWORD PTR [rbp+0x28],r12
  40533c:	add    rsp,0x8
  405340:	pop    rbx
  405341:	pop    rbp
  405342:	pop    r12
  405344:	pop    r13
  405346:	ret    
  405347:	nop    WORD PTR [rax+rax*1+0x0]
  405350:	push   r12
  405352:	mov    r12,rsi
  405355:	push   rbp
  405356:	mov    rbp,rdi
  405359:	push   rbx
  40535a:	mov    rbx,QWORD PTR [rbp+0x20]
  40535e:	mov    rdi,QWORD PTR [rdi+0x28]
  405362:	cmp    rdi,rbx
  405365:	jb     405377 <test_print@@Base+0xea7>
  405367:	mov    rdi,rbp
  40536a:	xor    esi,esi
  40536c:	call   QWORD PTR [rbp+0x48]
  40536f:	mov    rbx,QWORD PTR [rbp+0x20]
  405373:	mov    rdi,QWORD PTR [rbp+0x28]
  405377:	sub    rbx,rdi
  40537a:	cmp    rbx,r12
  40537d:	jae    4053ac <test_print@@Base+0xedc>
  40537f:	nop
  405380:	mov    rdx,rbx
  405383:	mov    esi,0x20
  405388:	call   403200 <memset@plt>
  40538d:	add    QWORD PTR [rbp+0x28],rbx
  405391:	mov    rdi,rbp
  405394:	xor    esi,esi
  405396:	sub    r12,rbx
  405399:	call   QWORD PTR [rbp+0x48]
  40539c:	mov    rdi,QWORD PTR [rbp+0x28]
  4053a0:	mov    rbx,QWORD PTR [rbp+0x20]
  4053a4:	sub    rbx,rdi
  4053a7:	cmp    r12,rbx
  4053aa:	ja     405380 <test_print@@Base+0xeb0>
  4053ac:	mov    rdx,r12
  4053af:	mov    esi,0x20
  4053b4:	call   403200 <memset@plt>
  4053b9:	pop    rbx
  4053ba:	add    QWORD PTR [rbp+0x28],r12
  4053be:	pop    rbp
  4053bf:	pop    r12
  4053c1:	ret    
  4053c2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4053cd:	nop    DWORD PTR [rax]
  4053d0:	push   rbp
  4053d1:	push   rbx
  4053d2:	sub    rsp,0x8
  4053d6:	movzx  ebp,BYTE PTR [rdi+0x31]
  4053da:	mov    rax,QWORD PTR [rdi+0x28]
  4053de:	imul   ebp,DWORD PTR [rdi+0x38]
  4053e2:	movsxd rbp,ebp
  4053e5:	lea    rdx,[rax+rbp*1]
  4053e9:	cmp    QWORD PTR [rdi+0x20],rdx
  4053ed:	jae    405400 <test_print@@Base+0xf30>
  4053ef:	add    rsp,0x8
  4053f3:	pop    rbx
  4053f4:	mov    rsi,rbp
  4053f7:	pop    rbp
  4053f8:	jmp    405350 <test_print@@Base+0xe80>
  4053fd:	nop    DWORD PTR [rax]
  405400:	mov    rbx,rdi
  405403:	mov    rdx,rbp
  405406:	mov    esi,0x20
  40540b:	mov    rdi,rax
  40540e:	call   403200 <memset@plt>
  405413:	add    QWORD PTR [rbx+0x28],rbp
  405417:	add    rsp,0x8
  40541b:	pop    rbx
  40541c:	pop    rbp
  40541d:	ret    
  40541e:	xchg   ax,ax
  405420:	endbr64 
  405424:	push   rbp
  405425:	push   rbx
  405426:	mov    rbx,rdi
  405429:	sub    rsp,0x8
  40542d:	mov    rdx,QWORD PTR [rdi+0x28]
  405431:	mov    rcx,QWORD PTR [rdi+0x40]
  405435:	mov    rdi,QWORD PTR [rdi]
  405438:	test   esi,esi
  40543a:	jne    405445 <test_print@@Base+0xf75>
  40543c:	mov    rax,QWORD PTR [rbx+0x20]
  405440:	cmp    rax,rdx
  405443:	jbe    405470 <test_print@@Base+0xfa0>
  405445:	sub    rdx,rdi
  405448:	mov    rbp,rdx
  40544b:	mov    rsi,rbp
  40544e:	mov    edx,0x1
  405453:	call   4032c0 <fwrite@plt>
  405458:	mov    rdx,QWORD PTR [rbx]
  40545b:	add    QWORD PTR [rbx+0x18],rbp
  40545f:	mov    QWORD PTR [rbx+0x28],rdx
  405463:	mov    BYTE PTR [rdx],0x0
  405466:	add    rsp,0x8
  40546a:	pop    rbx
  40546b:	pop    rbp
  40546c:	ret    
  40546d:	nop    DWORD PTR [rax]
  405470:	sub    rdx,rax
  405473:	mov    rsi,QWORD PTR [rbx+0x10]
  405477:	mov    rbp,rdx
  40547a:	mov    edx,0x1
  40547f:	call   4032c0 <fwrite@plt>
  405484:	mov    rdi,QWORD PTR [rbx]
  405487:	mov    rsi,QWORD PTR [rbx+0x10]
  40548b:	mov    rdx,rbp
  40548e:	add    rsi,rdi
  405491:	call   403240 <memcpy@plt>
  405496:	mov    rdx,QWORD PTR [rbx]
  405499:	mov    rax,QWORD PTR [rbx+0x10]
  40549d:	add    rdx,rbp
  4054a0:	mov    QWORD PTR [rbx+0x28],rdx
  4054a4:	add    QWORD PTR [rbx+0x18],rax
  4054a8:	mov    BYTE PTR [rdx],0x0
  4054ab:	add    rsp,0x8
  4054af:	pop    rbx
  4054b0:	pop    rbp
  4054b1:	ret    
  4054b2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4054bd:	nop    DWORD PTR [rax]
  4054c0:	endbr64 
  4054c4:	mov    rax,QWORD PTR [rdi+0x28]
  4054c8:	mov    rdx,QWORD PTR [rdi]
  4054cb:	mov    BYTE PTR [rax],0x0
  4054ce:	mov    rsi,QWORD PTR [rdi+0x20]
  4054d2:	cmp    QWORD PTR [rdi+0x28],rsi
  4054d6:	jae    4054e0 <test_print@@Base+0x1010>
  4054d8:	ret    
  4054d9:	nop    DWORD PTR [rax+0x0]
  4054e0:	push   rbp
  4054e1:	sub    rax,rdx
  4054e4:	mov    rbp,rax
  4054e7:	push   rbx
  4054e8:	mov    rbx,rdi
  4054eb:	sub    rsp,0x8
  4054ef:	mov    rax,QWORD PTR [rdi+0x8]
  4054f3:	mov    rdi,QWORD PTR [rdi]
  4054f6:	lea    rsi,[rax+rax*1]
  4054fa:	call   403270 <realloc@plt>
  4054ff:	test   rax,rax
  405502:	je     405538 <test_print@@Base+0x1068>
  405504:	mov    rcx,QWORD PTR [rbx+0x8]
  405508:	mov    QWORD PTR [rbx],rax
  40550b:	add    rcx,rcx
  40550e:	mov    QWORD PTR [rbx+0x8],rcx
  405512:	sub    rcx,0x40
  405516:	lea    rdx,[rax+rbp*1]
  40551a:	add    rax,rcx
  40551d:	mov    QWORD PTR [rbx+0x10],rcx
  405521:	mov    QWORD PTR [rbx+0x28],rdx
  405525:	mov    QWORD PTR [rbx+0x20],rax
  405529:	mov    BYTE PTR [rdx],0x0
  40552c:	add    rsp,0x8
  405530:	pop    rbx
  405531:	pop    rbp
  405532:	ret    
  405533:	nop    DWORD PTR [rax+rax*1+0x0]
  405538:	mov    eax,DWORD PTR [rbx+0x3c]
  40553b:	test   eax,eax
  40553d:	jne    405546 <test_print@@Base+0x1076>
  40553f:	mov    DWORD PTR [rbx+0x3c],0x3
  405546:	mov    rdx,QWORD PTR [rbx]
  405549:	add    QWORD PTR [rbx+0x18],rbp
  40554d:	mov    QWORD PTR [rbx+0x28],rdx
  405551:	mov    BYTE PTR [rdx],0x0
  405554:	add    rsp,0x8
  405558:	pop    rbx
  405559:	pop    rbp
  40555a:	ret    
  40555b:	nop    DWORD PTR [rax+rax*1+0x0]
  405560:	test   edi,edi
  405562:	je     405578 <test_print@@Base+0x10a8>
  405564:	mov    DWORD PTR [rsi],0x65757274
  40556a:	mov    BYTE PTR [rsi+0x4],0x0
  40556e:	mov    eax,0x4
  405573:	ret    
  405574:	nop    DWORD PTR [rax+0x0]
  405578:	mov    eax,0x65
  40557d:	mov    WORD PTR [rsi+0x4],ax
  405581:	mov    DWORD PTR [rsi],0x736c6166
  405587:	mov    eax,0x5
  40558c:	ret    
  40558d:	nop    DWORD PTR [rax]
  405590:	cmp    dil,0x63
  405594:	ja     4055b0 <test_print@@Base+0x10e0>
  405596:	cmp    dil,0x9
  40559a:	ja     4055f8 <test_print@@Base+0x1128>
  40559c:	add    edi,0x30
  40559f:	mov    BYTE PTR [rsi+0x1],0x0
  4055a3:	mov    BYTE PTR [rsi],dil
  4055a6:	mov    eax,0x1
  4055ab:	ret    
  4055ac:	nop    DWORD PTR [rax+0x0]
  4055b0:	movzx  eax,dil
  4055b4:	lea    edx,[rax+rax*4]
  4055b7:	lea    edx,[rax+rdx*8]
  4055ba:	mov    ecx,0x64
  4055bf:	shr    dx,0xc
  4055c3:	mov    eax,ecx
  4055c5:	imul   eax,edx
  4055c8:	mov    BYTE PTR [rsi+0x3],0x0
  4055cc:	add    edx,0x30
  4055cf:	sub    edi,eax
  4055d1:	add    rdi,rdi
  4055d4:	and    edi,0x1fe
  4055da:	lea    rax,[rip+0xbb1f]        # 411100 <_IO_stdin_used@@Base+0x1100>
  4055e1:	movzx  eax,WORD PTR [rax+rdi*1]
  4055e5:	mov    BYTE PTR [rsi],dl
  4055e7:	mov    WORD PTR [rsi+0x1],ax
  4055eb:	mov    eax,0x3
  4055f0:	ret    
  4055f1:	nop    DWORD PTR [rax+0x0]
  4055f8:	mov    BYTE PTR [rsi+0x2],0x0
  4055fc:	add    rdi,rdi
  4055ff:	and    edi,0x1fe
  405605:	lea    rax,[rip+0xbaf4]        # 411100 <_IO_stdin_used@@Base+0x1100>
  40560c:	movzx  eax,WORD PTR [rax+rdi*1]
  405610:	mov    WORD PTR [rsi],ax
  405613:	mov    eax,0x2
  405618:	ret    
  405619:	nop    DWORD PTR [rax+0x0]
  405620:	mov    r9,rdi
  405623:	mov    eax,edx
  405625:	shr    r9,0x20
  405629:	mov    edi,edi
  40562b:	mov    r11,rdi
  40562e:	mov    r8,r9
  405631:	imul   rdi,rax
  405635:	imul   r8,rax
  405639:	mov    r10,rdx
  40563c:	shr    r10,0x20
  405640:	imul   r11,r10
  405644:	mov    rax,rdi
  405647:	shr    rax,0x20
  40564b:	mov    edi,r8d
  40564e:	add    rax,rdi
  405651:	mov    edi,0x80000000
  405656:	mov    edx,r11d
  405659:	add    rax,rdi
  40565c:	add    rax,rdx
  40565f:	imul   r9,r10
  405663:	mov    rdx,r8
  405666:	shr    rdx,0x20
  40566a:	shr    r11,0x20
  40566e:	add    rdx,r11
  405671:	lea    r8,[rdx+r9*1]
  405675:	shr    rax,0x20
  405679:	add    rax,r8
  40567c:	mov    QWORD PTR [rsp-0x18],rax
  405681:	mov    QWORD PTR [rsp-0x10],0x0
  40568a:	lea    eax,[rsi+rcx*1+0x40]
  40568e:	vmovdqa xmm1,XMMWORD PTR [rsp-0x18]
  405694:	vpinsrd xmm0,xmm1,eax,0x2
  40569a:	vmovq  rax,xmm0
  40569f:	vpextrq rdx,xmm0,0x1
  4056a5:	ret    
  4056a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4056b0:	sub    rsp,0x18
  4056b4:	mov    QWORD PTR [rsp+0x8],rsi
  4056b9:	mov    QWORD PTR [rsp],rdi
  4056bd:	mov    ecx,DWORD PTR [rsp+0x8]
  4056c1:	test   rdi,rdi
  4056c4:	je     405728 <test_print@@Base+0x1258>
  4056c6:	mov    rax,rdi
  4056c9:	movabs rdi,0xffc0000000000000
  4056d3:	lea    edx,[rcx-0xa]
  4056d6:	mov    rsi,rdi
  4056d9:	test   rax,rdi
  4056dc:	jne    4056ee <test_print@@Base+0x121e>
  4056de:	xchg   ax,ax
  4056e0:	shl    rax,0xa
  4056e4:	mov    ecx,edx
  4056e6:	sub    edx,0xa
  4056e9:	test   rax,rsi
  4056ec:	je     4056e0 <test_print@@Base+0x1210>
  4056ee:	test   rax,rax
  4056f1:	js     405709 <test_print@@Base+0x1239>
  4056f3:	lea    edx,[rcx-0x1]
  4056f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405700:	mov    ecx,edx
  405702:	dec    edx
  405704:	add    rax,rax
  405707:	jns    405700 <test_print@@Base+0x1230>
  405709:	mov    QWORD PTR [rsp],rax
  40570d:	vmovdqa xmm1,XMMWORD PTR [rsp]
  405712:	add    rsp,0x18
  405716:	vpinsrd xmm0,xmm1,ecx,0x2
  40571c:	vmovq  rax,xmm0
  405721:	vpextrq rdx,xmm0,0x1
  405727:	ret    
  405728:	lea    rcx,[rip+0xb3c1]        # 410af0 <_IO_stdin_used@@Base+0xaf0>
  40572f:	mov    edx,0x104
  405734:	lea    rsi,[rip+0xafcd]        # 410708 <_IO_stdin_used@@Base+0x708>
  40573b:	lea    rdi,[rip+0xb217]        # 410959 <_IO_stdin_used@@Base+0x959>
  405742:	call   4031f0 <__assert_fail@plt>
  405747:	nop    WORD PTR [rax+rax*1+0x0]
  405750:	push   rax
  405751:	pop    rax
  405752:	lea    rcx,[rip+0xb377]        # 410ad0 <_IO_stdin_used@@Base+0xad0>
  405759:	mov    edx,0xef
  40575e:	lea    rsi,[rip+0xafa3]        # 410708 <_IO_stdin_used@@Base+0x708>
  405765:	lea    rdi,[rip+0xb1f6]        # 410962 <_IO_stdin_used@@Base+0x962>
  40576c:	sub    rsp,0x8
  405770:	call   4031f0 <__assert_fail@plt>
  405775:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  405780:	push   r15
  405782:	push   r14
  405784:	push   r13
  405786:	push   r12
  405788:	push   rbp
  405789:	push   rbx
  40578a:	sub    rsp,0x58
  40578e:	test   rdi,rdi
  405791:	je     405e9c <test_print@@Base+0x19cc>
  405797:	vmovq  r8,xmm0
  40579c:	lea    rdx,[r8+r8*1]
  4057a0:	movabs rax,0xffe0000000000000
  4057aa:	mov    r10,rdi
  4057ad:	cmp    rdx,rax
  4057b0:	ja     405c38 <test_print@@Base+0x1768>
  4057b6:	mov    rbx,rdi
  4057b9:	test   r8,r8
  4057bc:	js     405bf8 <test_print@@Base+0x1728>
  4057c2:	test   r8,r8
  4057c5:	je     405c15 <test_print@@Base+0x1745>
  4057cb:	movabs r13,0x7ff0000000000000
  4057d5:	cmp    r8,r13
  4057d8:	je     405c70 <test_print@@Base+0x17a0>
  4057de:	vmovq  r12,xmm0
  4057e3:	movabs rcx,0xfffffffffffff
  4057ed:	and    rcx,r12
  4057f0:	and    r13,r12
  4057f3:	mov    QWORD PTR [rsp+0x48],r13
  4057f8:	je     405c90 <test_print@@Base+0x17c0>
  4057fe:	shr    r12,0x34
  405802:	and    r12d,0x7ff
  405809:	movabs r14,0x10000000000000
  405813:	lea    r11d,[r12-0x433]
  40581b:	add    r14,rcx
  40581e:	sub    r12d,0x434
  405825:	mov    QWORD PTR [rsp+0x8],0x0
  40582e:	mov    QWORD PTR [rsp],r14
  405832:	vmovsd QWORD PTR [rsp+0x28],xmm0
  405838:	mov    QWORD PTR [rsp+0x40],r10
  40583d:	vmovdqa xmm5,XMMWORD PTR [rsp]
  405842:	mov    QWORD PTR [rsp+0x38],rcx
  405847:	vpinsrd xmm4,xmm5,r11d,0x2
  40584d:	vmovaps XMMWORD PTR [rsp],xmm4
  405852:	mov    rsi,QWORD PTR [rsp+0x8]
  405857:	mov    rdi,QWORD PTR [rsp]
  40585b:	mov    DWORD PTR [rsp+0x30],r11d
  405860:	lea    r13,[r14+r14*1]
  405864:	call   4056b0 <test_print@@Base+0x11e0>
  405869:	mov    QWORD PTR [rsp],rax
  40586d:	lea    rax,[r13+0x1]
  405871:	mov    QWORD PTR [rsp+0x18],0x0
  40587a:	mov    QWORD PTR [rsp+0x10],rax
  40587f:	mov    r15d,edx
  405882:	vmovdqa xmm7,XMMWORD PTR [rsp+0x10]
  405888:	vpinsrd xmm6,xmm7,r12d,0x2
  40588e:	vmovaps XMMWORD PTR [rsp+0x10],xmm6
  405894:	mov    rsi,QWORD PTR [rsp+0x18]
  405899:	mov    rdi,QWORD PTR [rsp+0x10]
  40589e:	call   4056b0 <test_print@@Base+0x11e0>
  4058a3:	vmovsd xmm0,QWORD PTR [rsp+0x28]
  4058a9:	vxorpd xmm2,xmm2,xmm2
  4058ad:	vcomisd xmm0,xmm2
  4058b1:	mov    r8,rax
  4058b4:	mov    ebp,edx
  4058b6:	jbe    405ebb <test_print@@Base+0x19eb>
  4058bc:	vmovsd xmm1,QWORD PTR [rip+0xb91c]        # 4111e0 <_IO_stdin_used@@Base+0x11e0>
  4058c4:	mov    r11d,DWORD PTR [rsp+0x30]
  4058c9:	vcomisd xmm1,xmm0
  4058cd:	mov    rcx,QWORD PTR [rsp+0x38]
  4058d2:	mov    r10,QWORD PTR [rsp+0x40]
  4058d7:	jb     405ebb <test_print@@Base+0x19eb>
  4058dd:	test   rcx,rcx
  4058e0:	jne    4058ee <test_print@@Base+0x141e>
  4058e2:	cmp    QWORD PTR [rsp+0x48],0x0
  4058e8:	jne    405da0 <test_print@@Base+0x18d0>
  4058ee:	lea    r9,[r13-0x1]
  4058f2:	mov    eax,0xffffffc3
  4058f7:	sub    eax,r15d
  4058fa:	vxorpd xmm1,xmm1,xmm1
  4058fe:	vcvtsi2sd xmm1,xmm1,eax
  405902:	sub    r12d,ebp
  405905:	shlx   r12,r9,r12
  40590a:	vmulsd xmm1,xmm1,QWORD PTR [rip+0xb8d6]        # 4111e8 <_IO_stdin_used@@Base+0x11e8>
  405912:	vcomisd xmm2,xmm1
  405916:	vcvttsd2si edx,xmm1
  40591a:	ja     405938 <test_print@@Base+0x1468>
  40591c:	vxorpd xmm3,xmm3,xmm3
  405920:	vcvtsi2sd xmm3,xmm3,edx
  405924:	vsubsd xmm1,xmm1,xmm3
  405928:	vucomisd xmm1,xmm2
  40592c:	jp     405ca8 <test_print@@Base+0x17d8>
  405932:	jne    405ca8 <test_print@@Base+0x17d8>
  405938:	lea    eax,[rdx+0x162]
  40593e:	add    edx,0x15b
  405944:	cmovns eax,edx
  405947:	lea    rdx,[rip+0xb232]        # 410b80 <_IO_stdin_used@@Base+0xb80>
  40594e:	sar    eax,0x3
  405951:	inc    eax
  405953:	cdqe   
  405955:	shl    rax,0x4
  405959:	add    rax,rdx
  40595c:	mov    r13,QWORD PTR [rax]
  40595f:	movsx  r14d,WORD PTR [rax+0x8]
  405964:	mov    rdi,QWORD PTR [rsp]
  405968:	movsx  eax,WORD PTR [rax+0xa]
  40596c:	mov    ecx,r14d
  40596f:	mov    esi,r15d
  405972:	mov    rdx,r13
  405975:	mov    QWORD PTR [rsp+0x40],r8
  40597a:	mov    QWORD PTR [rsp+0x38],r10
  40597f:	vmovsd QWORD PTR [rsp+0x30],xmm0
  405985:	mov    DWORD PTR [rsp+0x28],eax
  405989:	call   405620 <test_print@@Base+0x1150>
  40598e:	mov    DWORD PTR [rsp+0x10],edx
  405992:	mov    rdi,r12
  405995:	mov    esi,ebp
  405997:	mov    rdx,r13
  40599a:	mov    QWORD PTR [rsp],rax
  40599e:	call   405620 <test_print@@Base+0x1150>
  4059a3:	mov    r8,QWORD PTR [rsp+0x40]
  4059a8:	mov    r15,rdx
  4059ab:	mov    rdi,r8
  4059ae:	mov    rdx,r13
  4059b1:	mov    r12,rax
  4059b4:	call   405620 <test_print@@Base+0x1150>
  4059b9:	lea    rdi,[rax+0x1]
  4059bd:	dec    r12
  4059c0:	mov    rcx,rdi
  4059c3:	mov    DWORD PTR [rsp+0x40],edx
  4059c7:	sub    rcx,r12
  4059ca:	cmp    r12,rdi
  4059cd:	ja     405e97 <test_print@@Base+0x19c7>
  4059d3:	cmp    edx,r15d
  4059d6:	vmovsd xmm0,QWORD PTR [rsp+0x30]
  4059dc:	mov    r10,QWORD PTR [rsp+0x38]
  4059e1:	jne    405e97 <test_print@@Base+0x19c7>
  4059e7:	mov    esi,DWORD PTR [rsp+0x10]
  4059eb:	mov    r9d,0x1
  4059f1:	lea    ebp,[rsi+0x41]
  4059f4:	imul   ebp,ebp,0x4d1
  4059fa:	mov    r14d,esi
  4059fd:	neg    r14d
  405a00:	sar    ebp,0xc
  405a03:	shlx   rax,r9,r14
  405a08:	lea    r9d,[rbp+0x1]
  405a0c:	lea    rsi,[rip+0xb12d]        # 410b40 <_IO_stdin_used@@Base+0xb40>
  405a13:	movsxd r11,r9d
  405a16:	mov    r15,rax
  405a19:	mov    r11d,DWORD PTR [rsi+r11*4]
  405a1d:	dec    r15
  405a20:	mov    r8,rdi
  405a23:	mov    QWORD PTR [rsp+0x30],rax
  405a28:	shrx   rdx,rdi,r14
  405a2d:	and    r8,r15
  405a30:	mov    eax,edx
  405a32:	cmp    edx,r11d
  405a35:	jae    405a43 <test_print@@Base+0x1573>
  405a37:	movsxd rdx,ebp
  405a3a:	mov    r11d,DWORD PTR [rsi+rdx*4]
  405a3e:	mov    r9d,ebp
  405a41:	dec    ebp
  405a43:	test   r9d,r9d
  405a46:	jle    405e88 <test_print@@Base+0x19b8>
  405a4c:	xor    edx,edx
  405a4e:	div    r11d
  405a51:	add    eax,0x30
  405a54:	mov    BYTE PTR [rbx],al
  405a56:	mov    eax,edx
  405a58:	mov    rsi,rax
  405a5b:	shlx   rax,rax,r14
  405a60:	add    rax,r8
  405a63:	cmp    rcx,rax
  405a66:	ja     405cb0 <test_print@@Base+0x17e0>
  405a6c:	mov    r13d,0x1
  405a72:	mov    r9d,0xcccccccd
  405a78:	mov    QWORD PTR [rsp+0x38],r15
  405a7d:	jmp    405aa6 <test_print@@Base+0x15d6>
  405a7f:	nop
  405a80:	mov    eax,esi
  405a82:	xor    edx,edx
  405a84:	div    r11d
  405a87:	add    eax,0x30
  405a8a:	mov    BYTE PTR [rbx+r13*1],al
  405a8e:	mov    eax,edx
  405a90:	shlx   rax,rax,r14
  405a95:	add    rax,r8
  405a98:	mov    esi,edx
  405a9a:	inc    r13
  405a9d:	cmp    rcx,rax
  405aa0:	ja     405cc0 <test_print@@Base+0x17f0>
  405aa6:	mov    eax,r11d
  405aa9:	mul    r9d
  405aac:	dec    ebp
  405aae:	lea    r12d,[r13+0x1]
  405ab2:	shr    edx,0x3
  405ab5:	mov    r11d,edx
  405ab8:	cmp    ebp,0xffffffff
  405abb:	jne    405a80 <test_print@@Base+0x15b0>
  405abd:	mov    r15,QWORD PTR [rsp+0x38]
  405ac2:	mov    eax,r13d
  405ac5:	xor    r9d,r9d
  405ac8:	mov    esi,eax
  405aca:	lea    edx,[rax+0x1]
  405acd:	movsxd rdx,edx
  405ad0:	mov    eax,0x1
  405ad5:	add    esi,r9d
  405ad8:	nop    DWORD PTR [rax+rax*1+0x0]
  405ae0:	lea    r8,[r8+r8*4]
  405ae4:	add    r8,r8
  405ae7:	lea    rcx,[rcx+rcx*4]
  405aeb:	shrx   r9,r8,r14
  405af0:	lea    rax,[rax+rax*4]
  405af4:	add    r9d,0x30
  405af8:	mov    ebp,esi
  405afa:	add    rcx,rcx
  405afd:	and    r8,r15
  405b00:	mov    BYTE PTR [rbx+rdx*1-0x1],r9b
  405b05:	mov    r12d,edx
  405b08:	sub    ebp,edx
  405b0a:	add    rax,rax
  405b0d:	inc    rdx
  405b10:	cmp    rcx,r8
  405b13:	jbe    405ae0 <test_print@@Base+0x1610>
  405b15:	mov    rsi,QWORD PTR [rsp]
  405b19:	mov    r11d,DWORD PTR [rsp+0x10]
  405b1e:	mov    rdx,rdi
  405b21:	vmovsd QWORD PTR [rsp+0x48],xmm0
  405b27:	mov    QWORD PTR [rsp+0x38],r10
  405b2c:	sub    rdx,rsi
  405b2f:	cmp    DWORD PTR [rsp+0x40],r11d
  405b34:	jne    405e97 <test_print@@Base+0x19c7>
  405b3a:	cmp    rdi,rsi
  405b3d:	jb     405e97 <test_print@@Base+0x19c7>
  405b43:	sub    rsp,0x8
  405b47:	push   rax
  405b48:	imul   rdx,rax
  405b4c:	mov    esi,r12d
  405b4f:	mov    r9,QWORD PTR [rsp+0x40]
  405b54:	mov    rdi,rbx
  405b57:	call   4050f0 <test_print@@Base+0xc20>
  405b5c:	pop    rdx
  405b5d:	pop    rcx
  405b5e:	vmovsd xmm0,QWORD PTR [rsp+0x48]
  405b64:	mov    r10,QWORD PTR [rsp+0x38]
  405b69:	mov    r14d,ebp
  405b6c:	sub    r14d,DWORD PTR [rsp+0x28]
  405b71:	test   eax,eax
  405b73:	je     405db8 <test_print@@Base+0x18e8>
  405b79:	mov    r13d,0x2
  405b7f:	cmp    r12d,0x2
  405b83:	mov    edx,r13d
  405b86:	mov    eax,DWORD PTR [rsp+0x28]
  405b8a:	cmovge edx,r12d
  405b8e:	sub    eax,ebp
  405b90:	lea    edi,[rdx-0x1]
  405b93:	cmp    edx,eax
  405b95:	cmovg  edi,eax
  405b98:	test   r14d,r14d
  405b9b:	js     405d20 <test_print@@Base+0x1850>
  405ba1:	movsxd rdx,r12d
  405ba4:	lea    rax,[rbx+rdx*1]
  405ba8:	cmp    r14d,0x2
  405bac:	jg     405df0 <test_print@@Base+0x1920>
  405bb2:	lea    ecx,[r14-0x1]
  405bb6:	lea    rdx,[rbx+rdx*1+0x1]
  405bbb:	mov    esi,ecx
  405bbd:	add    rdx,rsi
  405bc0:	test   r14d,r14d
  405bc3:	jle    405bdd <test_print@@Base+0x170d>
  405bc5:	nop    DWORD PTR [rax]
  405bc8:	mov    BYTE PTR [rax],0x30
  405bcb:	inc    rax
  405bce:	cmp    rdx,rax
  405bd1:	jne    405bc8 <test_print@@Base+0x16f8>
  405bd3:	lea    eax,[rcx+r12*1+0x1]
  405bd8:	cdqe   
  405bda:	add    rax,rbx
  405bdd:	mov    BYTE PTR [rax],0x0
  405be0:	add    rsp,0x58
  405be4:	sub    eax,r10d
  405be7:	pop    rbx
  405be8:	pop    rbp
  405be9:	pop    r12
  405beb:	pop    r13
  405bed:	pop    r14
  405bef:	pop    r15
  405bf1:	ret    
  405bf2:	nop    WORD PTR [rax+rax*1+0x0]
  405bf8:	btc    r8,0x3f
  405bfd:	lea    rbx,[rdi+0x1]
  405c01:	mov    BYTE PTR [rdi],0x2d
  405c04:	vxorpd xmm0,xmm0,XMMWORD PTR [rip+0xb5c4]        # 4111d0 <_IO_stdin_used@@Base+0x11d0>
  405c0c:	test   r8,r8
  405c0f:	jne    4057cb <test_print@@Base+0x12fb>
  405c15:	mov    r8d,0x30
  405c1b:	mov    WORD PTR [rbx],r8w
  405c1f:	lea    rax,[rbx+0x1]
  405c23:	sub    eax,r10d
  405c26:	add    rsp,0x58
  405c2a:	pop    rbx
  405c2b:	pop    rbp
  405c2c:	pop    r12
  405c2e:	pop    r13
  405c30:	pop    r14
  405c32:	pop    r15
  405c34:	ret    
  405c35:	nop    DWORD PTR [rax]
  405c38:	vmovd  r9d,xmm0
  405c3d:	shr    r8,0x20
  405c41:	lea    rcx,[rip+0xad37]        # 41097f <_IO_stdin_used@@Base+0x97f>
  405c48:	mov    rdx,0xffffffffffffffff
  405c4f:	mov    esi,0x1
  405c54:	xor    eax,eax
  405c56:	call   4032e0 <__sprintf_chk@plt>
  405c5b:	add    rsp,0x58
  405c5f:	pop    rbx
  405c60:	pop    rbp
  405c61:	pop    r12
  405c63:	pop    r13
  405c65:	pop    r14
  405c67:	mov    eax,0x15
  405c6c:	pop    r15
  405c6e:	ret    
  405c6f:	nop
  405c70:	mov    DWORD PTR [rbx],0x666e69
  405c76:	add    rsp,0x58
  405c7a:	lea    rax,[rbx+0x3]
  405c7e:	pop    rbx
  405c7f:	pop    rbp
  405c80:	pop    r12
  405c82:	pop    r13
  405c84:	pop    r14
  405c86:	sub    eax,r10d
  405c89:	pop    r15
  405c8b:	ret    
  405c8c:	nop    DWORD PTR [rax+0x0]
  405c90:	mov    r14,rcx
  405c93:	mov    r12d,0xfffffbcd
  405c99:	mov    r11d,0xfffffbce
  405c9f:	jmp    405825 <test_print@@Base+0x1355>
  405ca4:	nop    DWORD PTR [rax+0x0]
  405ca8:	inc    edx
  405caa:	jmp    405938 <test_print@@Base+0x1468>
  405caf:	nop
  405cb0:	mov    r12d,0x1
  405cb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405cc0:	mov    rsi,QWORD PTR [rsp]
  405cc4:	mov    r9d,r11d
  405cc7:	mov    rdx,rdi
  405cca:	mov    QWORD PTR [rsp+0x38],r10
  405ccf:	vmovsd QWORD PTR [rsp+0x30],xmm0
  405cd5:	shlx   r9,r9,r14
  405cda:	sub    rdx,rsi
  405cdd:	cmp    rdi,rsi
  405ce0:	jb     405e97 <test_print@@Base+0x19c7>
  405ce6:	mov    esi,DWORD PTR [rsp+0x10]
  405cea:	cmp    DWORD PTR [rsp+0x40],esi
  405cee:	jne    405e97 <test_print@@Base+0x19c7>
  405cf4:	sub    rsp,0x8
  405cf8:	push   0x1
  405cfa:	mov    esi,r12d
  405cfd:	mov    rdi,rbx
  405d00:	mov    r8,rax
  405d03:	call   4050f0 <test_print@@Base+0xc20>
  405d08:	pop    rsi
  405d09:	pop    rdi
  405d0a:	vmovsd xmm0,QWORD PTR [rsp+0x30]
  405d10:	mov    r10,QWORD PTR [rsp+0x38]
  405d15:	jmp    405b69 <test_print@@Base+0x1699>
  405d1a:	nop    WORD PTR [rax+rax*1+0x0]
  405d20:	lea    edx,[r14+r12*1]
  405d24:	cmp    edx,0xfffffffe
  405d27:	jl     405d32 <test_print@@Base+0x1862>
  405d29:	cmp    eax,r12d
  405d2c:	jge    405e20 <test_print@@Base+0x1950>
  405d32:	lea    rax,[rbx+0x1]
  405d36:	cmp    r12d,0x1
  405d3a:	je     405df0 <test_print@@Base+0x1920>
  405d40:	test   edi,edi
  405d42:	jle    405d6f <test_print@@Base+0x189f>
  405d44:	movsxd rdx,r12d
  405d47:	lea    rcx,[rbx+rdx*1-0x1]
  405d4c:	lea    rax,[rbx+rdx*1]
  405d50:	lea    edx,[rdi-0x1]
  405d53:	sub    rcx,rdx
  405d56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405d60:	movzx  edx,BYTE PTR [rax-0x1]
  405d64:	dec    rax
  405d67:	mov    BYTE PTR [rax+0x1],dl
  405d6a:	cmp    rcx,rax
  405d6d:	jne    405d60 <test_print@@Base+0x1890>
  405d6f:	mov    eax,r12d
  405d72:	sub    eax,edi
  405d74:	cdqe   
  405d76:	mov    BYTE PTR [rbx+rax*1],0x2e
  405d7a:	lea    eax,[r12+0x1]
  405d7f:	cdqe   
  405d81:	add    rax,rbx
  405d84:	add    edi,r14d
  405d87:	je     405bdd <test_print@@Base+0x170d>
  405d8d:	add    r12d,0x2
  405d91:	movsxd rsi,r12d
  405d94:	mov    QWORD PTR [rsp],r10
  405d98:	mov    BYTE PTR [rax],0x65
  405d9b:	add    rsi,rbx
  405d9e:	jmp    405e03 <test_print@@Base+0x1933>
  405da0:	lea    r9,[r14*4-0x1]
  405da8:	lea    r12d,[r11-0x2]
  405dac:	jmp    4058f2 <test_print@@Base+0x1422>
  405db1:	nop    DWORD PTR [rax+0x0]
  405db8:	mov    rdi,rbx
  405dbb:	lea    rcx,[rip+0xabcb]        # 41098d <_IO_stdin_used@@Base+0x98d>
  405dc2:	mov    rdx,0xffffffffffffffff
  405dc9:	mov    esi,0x1
  405dce:	mov    eax,0x1
  405dd3:	mov    QWORD PTR [rsp],r10
  405dd7:	call   4032e0 <__sprintf_chk@plt>
  405ddc:	mov    r10,QWORD PTR [rsp]
  405de0:	sub    rbx,r10
  405de3:	add    eax,ebx
  405de5:	jmp    405c26 <test_print@@Base+0x1756>
  405dea:	nop    WORD PTR [rax+rax*1+0x0]
  405df0:	inc    r12d
  405df3:	mov    QWORD PTR [rsp],r10
  405df7:	mov    BYTE PTR [rax],0x65
  405dfa:	movsxd rsi,r12d
  405dfd:	add    rsi,rbx
  405e00:	mov    edi,r14d
  405e03:	call   4051f0 <test_print@@Base+0xd20>
  405e08:	add    eax,r12d
  405e0b:	cdqe   
  405e0d:	add    rax,rbx
  405e10:	mov    r10,QWORD PTR [rsp]
  405e14:	jmp    405bdd <test_print@@Base+0x170d>
  405e19:	nop    DWORD PTR [rax+0x0]
  405e20:	movsxd rdx,r12d
  405e23:	mov    edi,0x2
  405e28:	sub    rdi,rdx
  405e2b:	movsxd rax,r14d
  405e2e:	sub    rdi,rax
  405e31:	sub    r13d,r14d
  405e34:	add    rdi,rbx
  405e37:	mov    rsi,rbx
  405e3a:	sub    r13d,r12d
  405e3d:	mov    QWORD PTR [rsp],r10
  405e41:	call   403290 <memmove@plt>
  405e46:	mov    eax,0x2e30
  405e4b:	cmp    r13d,0x2
  405e4f:	mov    WORD PTR [rbx],ax
  405e52:	mov    r10,QWORD PTR [rsp]
  405e56:	jle    405e8f <test_print@@Base+0x19bf>
  405e58:	lea    edx,[r13-0x3]
  405e5c:	lea    rax,[rbx+0x2]
  405e60:	lea    rdx,[rbx+rdx*1+0x3]
  405e65:	nop    DWORD PTR [rax]
  405e68:	mov    BYTE PTR [rax],0x30
  405e6b:	inc    rax
  405e6e:	cmp    rdx,rax
  405e71:	jne    405e68 <test_print@@Base+0x1998>
  405e73:	lea    eax,[r13+r12*1+0x0]
  405e78:	cdqe   
  405e7a:	add    rax,rbx
  405e7d:	jmp    405bdd <test_print@@Base+0x170d>
  405e82:	nop    WORD PTR [rax+rax*1+0x0]
  405e88:	xor    eax,eax
  405e8a:	jmp    405ac8 <test_print@@Base+0x15f8>
  405e8f:	mov    r13d,0x2
  405e95:	jmp    405e73 <test_print@@Base+0x19a3>
  405e97:	call   405750 <test_print@@Base+0x1280>
  405e9c:	lea    rcx,[rip+0xac6d]        # 410b10 <_IO_stdin_used@@Base+0xb10>
  405ea3:	mov    edx,0xbd
  405ea8:	lea    rsi,[rip+0xa8c9]        # 410778 <_IO_stdin_used@@Base+0x778>
  405eaf:	lea    rdi,[rip+0xaac5]        # 41097b <_IO_stdin_used@@Base+0x97b>
  405eb6:	call   4031f0 <__assert_fail@plt>
  405ebb:	lea    rcx,[rip+0xac46]        # 410b08 <_IO_stdin_used@@Base+0xb08>
  405ec2:	mov    edx,0x8a
  405ec7:	lea    rsi,[rip+0xa8aa]        # 410778 <_IO_stdin_used@@Base+0x778>
  405ece:	lea    rdi,[rip+0xa91b]        # 4107f0 <_IO_stdin_used@@Base+0x7f0>
  405ed5:	call   4031f0 <__assert_fail@plt>
  405eda:	nop    WORD PTR [rax+rax*1+0x0]
  405ee0:	push   rbp
  405ee1:	mov    rbp,rdi
  405ee4:	push   rbx
  405ee5:	sub    rsp,0x18
  405ee9:	mov    rax,QWORD PTR fs:0x28
  405ef2:	mov    QWORD PTR [rsp+0x8],rax
  405ef7:	xor    eax,eax
  405ef9:	mov    DWORD PTR [rsp+0x4],0x0
  405f01:	test   rsi,rsi
  405f04:	je     405f7b <test_print@@Base+0x1aab>
  405f06:	cmp    rdx,0x7
  405f0a:	jbe    405f7b <test_print@@Base+0x1aab>
  405f0c:	test   rcx,rcx
  405f0f:	je     405f33 <test_print@@Base+0x1a63>
  405f11:	mov    rbx,rsi
  405f14:	lea    rdi,[rsp+0x4]
  405f19:	mov    edx,0x4
  405f1e:	mov    rsi,rcx
  405f21:	call   4031a0 <strncpy@plt>
  405f26:	mov    eax,DWORD PTR [rsp+0x4]
  405f2a:	cmp    DWORD PTR [rbx+0x4],eax
  405f2d:	je     405f33 <test_print@@Base+0x1a63>
  405f2f:	test   eax,eax
  405f31:	jne    405f4f <test_print@@Base+0x1a7f>
  405f33:	mov    rsi,QWORD PTR [rsp+0x8]
  405f38:	xor    rsi,QWORD PTR fs:0x28
  405f41:	mov    eax,0x1
  405f46:	jne    405fa7 <test_print@@Base+0x1ad7>
  405f48:	add    rsp,0x18
  405f4c:	pop    rbx
  405f4d:	pop    rbp
  405f4e:	ret    
  405f4f:	cmp    DWORD PTR [rbp+0x3c],0x0
  405f53:	jne    405f5c <test_print@@Base+0x1a8c>
  405f55:	mov    DWORD PTR [rbp+0x3c],0x1
  405f5c:	lea    rcx,[rip+0xaadd]        # 410a40 <_IO_stdin_used@@Base+0xa40>
  405f63:	mov    edx,0x404
  405f68:	lea    rsi,[rip+0xa8a9]        # 410818 <_IO_stdin_used@@Base+0x818>
  405f6f:	lea    rdi,[rip+0xaa1d]        # 410993 <_IO_stdin_used@@Base+0x993>
  405f76:	call   4031f0 <__assert_fail@plt>
  405f7b:	cmp    DWORD PTR [rbp+0x3c],0x0
  405f7f:	jne    405f88 <test_print@@Base+0x1ab8>
  405f81:	mov    DWORD PTR [rbp+0x3c],0x1
  405f88:	lea    rcx,[rip+0xaab1]        # 410a40 <_IO_stdin_used@@Base+0xa40>
  405f8f:	mov    edx,0x3fb
  405f94:	lea    rsi,[rip+0xa87d]        # 410818 <_IO_stdin_used@@Base+0x818>
  405f9b:	lea    rdi,[rip+0xa8de]        # 410880 <_IO_stdin_used@@Base+0x880>
  405fa2:	call   4031f0 <__assert_fail@plt>
  405fa7:	call   4031d0 <__stack_chk_fail@plt>
  405fac:	nop    DWORD PTR [rax+0x0]
  405fb0:	mov    eax,ecx
  405fb2:	mov    r10,QWORD PTR [rdx]
  405fb5:	and    eax,0xffffff1f
  405fba:	je     4060d0 <test_print@@Base+0x1c00>
  405fc0:	lea    r9,[rip+0xa8d9]        # 4108a0 <_IO_stdin_used@@Base+0x8a0>
  405fc7:	cmp    eax,0x1
  405fca:	je     406056 <test_print@@Base+0x1b86>
  405fd0:	xor    ecx,ecx
  405fd2:	mov    eax,0x3
  405fd7:	mov    QWORD PTR [rdx],rcx
  405fda:	ret    
  405fdb:	nop    DWORD PTR [rax+rax*1+0x0]
  405fe0:	movzx  eax,BYTE PTR [rsi]
  405fe3:	sub    r10,0x3
  405fe7:	shr    al,0x2
  405fea:	movzx  eax,al
  405fed:	movzx  eax,BYTE PTR [r9+rax*1]
  405ff2:	add    rdi,0x4
  405ff6:	mov    BYTE PTR [rdi-0x4],al
  405ff9:	add    rsi,0x3
  405ffd:	movzx  r8d,BYTE PTR [rsi-0x3]
  406002:	movzx  eax,BYTE PTR [rsi-0x2]
  406006:	shl    r8d,0x4
  40600a:	shr    al,0x4
  40600d:	movzx  eax,al
  406010:	and    r8d,0x30
  406014:	or     r8d,eax
  406017:	movsxd r8,r8d
  40601a:	movzx  eax,BYTE PTR [r9+r8*1]
  40601f:	mov    BYTE PTR [rdi-0x3],al
  406022:	movzx  r8d,BYTE PTR [rsi-0x2]
  406027:	movzx  eax,BYTE PTR [rsi-0x1]
  40602b:	shl    r8d,0x2
  40602f:	shr    al,0x6
  406032:	movzx  eax,al
  406035:	and    r8d,0x3c
  406039:	or     r8d,eax
  40603c:	movsxd r8,r8d
  40603f:	movzx  eax,BYTE PTR [r9+r8*1]
  406044:	mov    BYTE PTR [rdi-0x2],al
  406047:	movzx  eax,BYTE PTR [rsi-0x1]
  40604b:	and    eax,0x3f
  40604e:	movzx  eax,BYTE PTR [r9+rax*1]
  406053:	mov    BYTE PTR [rdi-0x1],al
  406056:	cmp    r10,0x2
  40605a:	ja     405fe0 <test_print@@Base+0x1b10>
  40605c:	mov    eax,ecx
  40605e:	and    eax,0x80
  406063:	cmp    r10,0x1
  406067:	je     4060e0 <test_print@@Base+0x1c10>
  406069:	cmp    r10,0x2
  40606d:	jne    4060bd <test_print@@Base+0x1bed>
  40606f:	movzx  ecx,BYTE PTR [rsi]
  406072:	shr    cl,0x2
  406075:	movzx  ecx,cl
  406078:	movzx  ecx,BYTE PTR [r9+rcx*1]
  40607d:	mov    BYTE PTR [rdi],cl
  40607f:	movzx  ecx,BYTE PTR [rsi]
  406082:	movzx  r8d,BYTE PTR [rsi+0x1]
  406087:	shl    ecx,0x4
  40608a:	shr    r8b,0x4
  40608e:	and    ecx,0x30
  406091:	movzx  r8d,r8b
  406095:	or     ecx,r8d
  406098:	movsxd rcx,ecx
  40609b:	movzx  ecx,BYTE PTR [r9+rcx*1]
  4060a0:	mov    BYTE PTR [rdi+0x1],cl
  4060a3:	movzx  ecx,BYTE PTR [rsi+0x1]
  4060a7:	shl    ecx,0x2
  4060aa:	and    ecx,0x3c
  4060ad:	movzx  ecx,BYTE PTR [r9+rcx*1]
  4060b2:	mov    BYTE PTR [rdi+0x2],cl
  4060b5:	test   eax,eax
  4060b7:	je     406120 <test_print@@Base+0x1c50>
  4060b9:	mov    BYTE PTR [rdi+0x3],0x3d
  4060bd:	mov    rcx,QWORD PTR [rdx]
  4060c0:	xor    eax,eax
  4060c2:	mov    QWORD PTR [rdx],rcx
  4060c5:	ret    
  4060c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4060d0:	lea    r9,[rip+0xa811]        # 4108e8 <_IO_stdin_used@@Base+0x8e8>
  4060d7:	jmp    406056 <test_print@@Base+0x1b86>
  4060dc:	nop    DWORD PTR [rax+0x0]
  4060e0:	movzx  ecx,BYTE PTR [rsi]
  4060e3:	shr    cl,0x2
  4060e6:	movzx  ecx,cl
  4060e9:	movzx  ecx,BYTE PTR [r9+rcx*1]
  4060ee:	mov    BYTE PTR [rdi],cl
  4060f0:	movzx  ecx,BYTE PTR [rsi]
  4060f3:	shl    ecx,0x4
  4060f6:	and    ecx,0x30
  4060f9:	movzx  ecx,BYTE PTR [r9+rcx*1]
  4060fe:	mov    BYTE PTR [rdi+0x1],cl
  406101:	test   eax,eax
  406103:	je     406120 <test_print@@Base+0x1c50>
  406105:	mov    eax,0x3d3d
  40610a:	mov    WORD PTR [rdi+0x2],ax
  40610e:	xor    eax,eax
  406110:	mov    rcx,QWORD PTR [rdx]
  406113:	jmp    405fd7 <test_print@@Base+0x1b07>
  406118:	nop    DWORD PTR [rax+rax*1+0x0]
  406120:	mov    rcx,QWORD PTR [rdx]
  406123:	mov    QWORD PTR [rdx],rcx
  406126:	ret    
  406127:	nop    WORD PTR [rax+rax*1+0x0]
  406130:	push   r14
  406132:	mov    r14,rdx
  406135:	push   r13
  406137:	mov    r13,rdi
  40613a:	push   r12
  40613c:	push   rbp
  40613d:	mov    rbp,rsi
  406140:	push   rbx
  406141:	mov    rax,QWORD PTR [rdi+0x28]
  406145:	lea    rdx,[rax+0x1]
  406149:	mov    QWORD PTR [rdi+0x28],rdx
  40614d:	mov    BYTE PTR [rax],0x22
  406150:	movzx  ebx,BYTE PTR [rsi]
  406153:	cmp    bl,0x1f
  406156:	jbe    40627e <test_print@@Base+0x1dae>
  40615c:	nop    DWORD PTR [rax+0x0]
  406160:	cmp    bl,0x22
  406163:	je     40627e <test_print@@Base+0x1dae>
  406169:	cmp    bl,0x5c
  40616c:	je     40627e <test_print@@Base+0x1dae>
  406172:	nop    WORD PTR [rax+rax*1+0x0]
  406178:	inc    rbp
  40617b:	movzx  ebx,BYTE PTR [rbp+0x0]
  40617f:	cmp    bl,0x1f
  406182:	jbe    40618e <test_print@@Base+0x1cbe>
  406184:	cmp    bl,0x22
  406187:	je     40618e <test_print@@Base+0x1cbe>
  406189:	cmp    bl,0x5c
  40618c:	jne    406178 <test_print@@Base+0x1ca8>
  40618e:	mov    r12,rbp
  406191:	sub    r12,rsi
  406194:	sub    r14,r12
  406197:	mov    rdi,QWORD PTR [r13+0x28]
  40619b:	mov    rdx,r12
  40619e:	lea    rax,[rdi+r12*1]
  4061a2:	cmp    QWORD PTR [r13+0x20],rax
  4061a6:	ja     4062c0 <test_print@@Base+0x1df0>
  4061ac:	mov    rdi,r13
  4061af:	call   4052c0 <test_print@@Base+0xdf0>
  4061b4:	mov    r12,QWORD PTR [r13+0x28]
  4061b8:	lea    rax,[r12+0x1]
  4061bd:	mov    QWORD PTR [r13+0x28],rax
  4061c1:	test   r14,r14
  4061c4:	je     4062df <test_print@@Base+0x1e0f>
  4061ca:	mov    BYTE PTR [r12],0x5c
  4061cf:	cmp    bl,0xc
  4061d2:	je     4062f0 <test_print@@Base+0x1e20>
  4061d8:	ja     406290 <test_print@@Base+0x1dc0>
  4061de:	cmp    bl,0x9
  4061e1:	je     406368 <test_print@@Base+0x1e98>
  4061e7:	cmp    bl,0xa
  4061ea:	je     406350 <test_print@@Base+0x1e80>
  4061f0:	cmp    bl,0x8
  4061f3:	je     406338 <test_print@@Base+0x1e68>
  4061f9:	mov    rax,QWORD PTR [r13+0x28]
  4061fd:	mov    ecx,ebx
  4061ff:	lea    rdx,[rax+0x1]
  406203:	mov    QWORD PTR [r13+0x28],rdx
  406207:	mov    BYTE PTR [rax],0x75
  40620a:	shr    cl,0x4
  40620d:	cmp    cl,0xa
  406210:	mov    rax,QWORD PTR [r13+0x28]
  406214:	lea    rdx,[rax+0x1]
  406218:	mov    QWORD PTR [r13+0x28],rdx
  40621c:	mov    BYTE PTR [rax],0x30
  40621f:	mov    rax,QWORD PTR [r13+0x28]
  406223:	lea    rdx,[rax+0x1]
  406227:	mov    QWORD PTR [r13+0x28],rdx
  40622b:	mov    BYTE PTR [rax],0x30
  40622e:	sbb    eax,eax
  406230:	and    eax,0xffffffd9
  406233:	mov    rdx,QWORD PTR [r13+0x28]
  406237:	lea    eax,[rax+rcx*1+0x57]
  40623b:	lea    rsi,[rdx+0x1]
  40623f:	mov    QWORD PTR [r13+0x28],rsi
  406243:	mov    BYTE PTR [rdx],al
  406245:	and    ebx,0xf
  406248:	cmp    bl,0xa
  40624b:	mov    rdx,QWORD PTR [r13+0x28]
  40624f:	sbb    eax,eax
  406251:	and    eax,0xffffffd9
  406254:	lea    rcx,[rdx+0x1]
  406258:	lea    ebx,[rax+rbx*1+0x57]
  40625c:	mov    QWORD PTR [r13+0x28],rcx
  406260:	mov    BYTE PTR [rdx],bl
  406262:	nop    WORD PTR [rax+rax*1+0x0]
  406268:	lea    rsi,[rbp+0x1]
  40626c:	movzx  ebx,BYTE PTR [rsi]
  40626f:	dec    r14
  406272:	mov    rbp,rsi
  406275:	cmp    bl,0x1f
  406278:	ja     406160 <test_print@@Base+0x1c90>
  40627e:	xor    r12d,r12d
  406281:	jmp    406197 <test_print@@Base+0x1cc7>
  406286:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406290:	cmp    bl,0x22
  406293:	je     406320 <test_print@@Base+0x1e50>
  406299:	cmp    bl,0x5c
  40629c:	je     406308 <test_print@@Base+0x1e38>
  40629e:	cmp    bl,0xd
  4062a1:	jne    4061f9 <test_print@@Base+0x1d29>
  4062a7:	mov    rax,QWORD PTR [r13+0x28]
  4062ab:	lea    rdx,[rax+0x1]
  4062af:	mov    QWORD PTR [r13+0x28],rdx
  4062b3:	mov    BYTE PTR [rax],0x72
  4062b6:	jmp    406268 <test_print@@Base+0x1d98>
  4062b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4062c0:	call   403240 <memcpy@plt>
  4062c5:	add    r12,QWORD PTR [r13+0x28]
  4062c9:	lea    rax,[r12+0x1]
  4062ce:	mov    QWORD PTR [r13+0x28],r12
  4062d2:	mov    QWORD PTR [r13+0x28],rax
  4062d6:	test   r14,r14
  4062d9:	jne    4061ca <test_print@@Base+0x1cfa>
  4062df:	mov    BYTE PTR [r12],0x22
  4062e4:	pop    rbx
  4062e5:	pop    rbp
  4062e6:	pop    r12
  4062e8:	pop    r13
  4062ea:	pop    r14
  4062ec:	ret    
  4062ed:	nop    DWORD PTR [rax]
  4062f0:	mov    rax,QWORD PTR [r13+0x28]
  4062f4:	lea    rdx,[rax+0x1]
  4062f8:	mov    QWORD PTR [r13+0x28],rdx
  4062fc:	mov    BYTE PTR [rax],0x66
  4062ff:	jmp    406268 <test_print@@Base+0x1d98>
  406304:	nop    DWORD PTR [rax+0x0]
  406308:	mov    rax,QWORD PTR [r13+0x28]
  40630c:	lea    rdx,[rax+0x1]
  406310:	mov    QWORD PTR [r13+0x28],rdx
  406314:	mov    BYTE PTR [rax],0x5c
  406317:	jmp    406268 <test_print@@Base+0x1d98>
  40631c:	nop    DWORD PTR [rax+0x0]
  406320:	mov    rax,QWORD PTR [r13+0x28]
  406324:	lea    rdx,[rax+0x1]
  406328:	mov    QWORD PTR [r13+0x28],rdx
  40632c:	mov    BYTE PTR [rax],0x22
  40632f:	jmp    406268 <test_print@@Base+0x1d98>
  406334:	nop    DWORD PTR [rax+0x0]
  406338:	mov    rax,QWORD PTR [r13+0x28]
  40633c:	lea    rdx,[rax+0x1]
  406340:	mov    QWORD PTR [r13+0x28],rdx
  406344:	mov    BYTE PTR [rax],0x62
  406347:	jmp    406268 <test_print@@Base+0x1d98>
  40634c:	nop    DWORD PTR [rax+0x0]
  406350:	mov    rax,QWORD PTR [r13+0x28]
  406354:	lea    rdx,[rax+0x1]
  406358:	mov    QWORD PTR [r13+0x28],rdx
  40635c:	mov    BYTE PTR [rax],0x6e
  40635f:	jmp    406268 <test_print@@Base+0x1d98>
  406364:	nop    DWORD PTR [rax+0x0]
  406368:	mov    rax,QWORD PTR [r13+0x28]
  40636c:	lea    rdx,[rax+0x1]
  406370:	mov    QWORD PTR [r13+0x28],rdx
  406374:	mov    BYTE PTR [rax],0x74
  406377:	jmp    406268 <test_print@@Base+0x1d98>
  40637c:	nop    DWORD PTR [rax+0x0]
  406380:	push   r13
  406382:	mov    r13,rsi
  406385:	push   r12
  406387:	mov    r12,rdx
  40638a:	push   rbp
  40638b:	push   rbx
  40638c:	mov    rbx,rdi
  40638f:	sub    rsp,0x8
  406393:	cmp    BYTE PTR [rdi+0x31],0x0
  406397:	mov    rsi,QWORD PTR [rdi+0x28]
  40639b:	jne    406440 <test_print@@Base+0x1f70>
  4063a1:	cmp    QWORD PTR [rdi+0x20],rsi
  4063a5:	jbe    406418 <test_print@@Base+0x1f48>
  4063a7:	mov    BYTE PTR [rsi],0x22
  4063aa:	xor    edi,edi
  4063ac:	mov    rdx,r12
  4063af:	cmp    BYTE PTR [rbx+0x32],0x0
  4063b3:	sete   dil
  4063b7:	add    rdi,QWORD PTR [rbx+0x28]
  4063bb:	lea    rax,[rdi+r12*1]
  4063bf:	mov    QWORD PTR [rbx+0x28],rdi
  4063c3:	mov    rsi,r13
  4063c6:	cmp    QWORD PTR [rbx+0x20],rax
  4063ca:	jbe    406428 <test_print@@Base+0x1f58>
  4063cc:	call   403240 <memcpy@plt>
  4063d1:	add    r12,QWORD PTR [rbx+0x28]
  4063d5:	mov    QWORD PTR [rbx+0x28],r12
  4063d9:	mov    BYTE PTR [r12],0x22
  4063de:	xor    eax,eax
  4063e0:	cmp    BYTE PTR [rbx+0x32],0x0
  4063e4:	sete   al
  4063e7:	add    rax,QWORD PTR [rbx+0x28]
  4063eb:	lea    rdx,[rax+0x1]
  4063ef:	mov    QWORD PTR [rbx+0x28],rdx
  4063f3:	mov    BYTE PTR [rax],0x3a
  4063f6:	mov    rax,QWORD PTR [rbx+0x28]
  4063fa:	mov    BYTE PTR [rax],0x20
  4063fd:	xor    eax,eax
  4063ff:	cmp    BYTE PTR [rbx+0x31],0x0
  406403:	setne  al
  406406:	add    QWORD PTR [rbx+0x28],rax
  40640a:	add    rsp,0x8
  40640e:	pop    rbx
  40640f:	pop    rbp
  406410:	pop    r12
  406412:	pop    r13
  406414:	ret    
  406415:	nop    DWORD PTR [rax]
  406418:	xor    esi,esi
  40641a:	call   QWORD PTR [rdi+0x48]
  40641d:	mov    rsi,QWORD PTR [rbx+0x28]
  406421:	jmp    4063a7 <test_print@@Base+0x1ed7>
  406423:	nop    DWORD PTR [rax+rax*1+0x0]
  406428:	mov    rdi,rbx
  40642b:	call   4052c0 <test_print@@Base+0xdf0>
  406430:	mov    r12,QWORD PTR [rbx+0x28]
  406434:	jmp    4063d9 <test_print@@Base+0x1f09>
  406436:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406440:	lea    rax,[rsi+0x1]
  406444:	mov    QWORD PTR [rdi+0x28],rax
  406448:	mov    BYTE PTR [rsi],0xa
  40644b:	movzx  esi,BYTE PTR [rdi+0x31]
  40644f:	imul   esi,DWORD PTR [rdi+0x38]
  406453:	mov    rdi,QWORD PTR [rdi+0x28]
  406457:	movsxd rbp,esi
  40645a:	lea    rax,[rdi+rbp*1]
  40645e:	cmp    QWORD PTR [rbx+0x20],rax
  406462:	jae    406480 <test_print@@Base+0x1fb0>
  406464:	mov    rsi,rbp
  406467:	mov    rdi,rbx
  40646a:	call   405350 <test_print@@Base+0xe80>
  40646f:	mov    rsi,QWORD PTR [rbx+0x28]
  406473:	jmp    4063a7 <test_print@@Base+0x1ed7>
  406478:	nop    DWORD PTR [rax+rax*1+0x0]
  406480:	mov    esi,0x20
  406485:	mov    rdx,rbp
  406488:	call   403200 <memset@plt>
  40648d:	mov    rsi,QWORD PTR [rbx+0x28]
  406491:	add    rsi,rbp
  406494:	mov    QWORD PTR [rbx+0x28],rsi
  406498:	jmp    4063a7 <test_print@@Base+0x1ed7>
  40649d:	nop    DWORD PTR [rax]

00000000004064a0 <flatcc_json_printer_error_string@@Base>:
  4064a0:	endbr64 
  4064a4:	lea    rax,[rip+0xa526]        # 4109d1 <_IO_stdin_used@@Base+0x9d1>
  4064ab:	cmp    edi,0x1
  4064ae:	je     4064d3 <flatcc_json_printer_error_string@@Base+0x33>
  4064b0:	jle    4064d8 <flatcc_json_printer_error_string@@Base+0x38>
  4064b2:	lea    rax,[rip+0xa500]        # 4109b9 <_IO_stdin_used@@Base+0x9b9>
  4064b9:	cmp    edi,0x2
  4064bc:	je     4064d3 <flatcc_json_printer_error_string@@Base+0x33>
  4064be:	cmp    edi,0x3
  4064c1:	lea    rax,[rip+0xa500]        # 4109c8 <_IO_stdin_used@@Base+0x9c8>
  4064c8:	lea    rdx,[rip+0xa4df]        # 4109ae <_IO_stdin_used@@Base+0x9ae>
  4064cf:	cmovne rax,rdx
  4064d3:	ret    
  4064d4:	nop    DWORD PTR [rax+0x0]
  4064d8:	test   edi,edi
  4064da:	lea    rdx,[rip+0xa4cd]        # 4109ae <_IO_stdin_used@@Base+0x9ae>
  4064e1:	lea    rax,[rip+0xa4ce]        # 4109b6 <_IO_stdin_used@@Base+0x9b6>
  4064e8:	cmovne rax,rdx
  4064ec:	ret    
  4064ed:	nop    DWORD PTR [rax]

00000000004064f0 <flatcc_json_printer_fmt_float@@Base>:
  4064f0:	endbr64 
  4064f4:	vcvtss2sd xmm0,xmm0,xmm0
  4064f8:	jmp    405780 <test_print@@Base+0x12b0>
  4064fd:	nop    DWORD PTR [rax]

0000000000406500 <flatcc_json_printer_fmt_double@@Base>:
  406500:	endbr64 
  406504:	jmp    405780 <test_print@@Base+0x12b0>
  406509:	nop    DWORD PTR [rax+0x0]

0000000000406510 <flatcc_json_printer_fmt_bool@@Base>:
  406510:	endbr64 
  406514:	test   esi,esi
  406516:	jne    406530 <flatcc_json_printer_fmt_bool@@Base+0x20>
  406518:	mov    DWORD PTR [rdi],0x736c6166
  40651e:	mov    BYTE PTR [rdi+0x4],0x65
  406522:	mov    eax,0x5
  406527:	ret    
  406528:	nop    DWORD PTR [rax+rax*1+0x0]
  406530:	mov    DWORD PTR [rdi],0x65757274
  406536:	mov    eax,0x4
  40653b:	ret    
  40653c:	nop    DWORD PTR [rax+0x0]

0000000000406540 <flatcc_json_printer_string@@Base>:
  406540:	endbr64 
  406544:	movsxd rdx,edx
  406547:	jmp    406130 <test_print@@Base+0x1c60>
  40654c:	nop    DWORD PTR [rax+0x0]

0000000000406550 <flatcc_json_printer_write@@Base>:
  406550:	endbr64 
  406554:	push   rbp
  406555:	movsxd rbp,edx
  406558:	push   rbx
  406559:	sub    rsp,0x8
  40655d:	mov    rax,QWORD PTR [rdi+0x28]
  406561:	lea    rdx,[rax+rbp*1]
  406565:	cmp    QWORD PTR [rdi+0x20],rdx
  406569:	ja     406580 <flatcc_json_printer_write@@Base+0x30>
  40656b:	add    rsp,0x8
  40656f:	pop    rbx
  406570:	mov    rdx,rbp
  406573:	pop    rbp
  406574:	jmp    4052c0 <test_print@@Base+0xdf0>
  406579:	nop    DWORD PTR [rax+0x0]
  406580:	mov    rbx,rdi
  406583:	mov    rdx,rbp
  406586:	mov    rdi,rax
  406589:	call   403240 <memcpy@plt>
  40658e:	add    QWORD PTR [rbx+0x28],rbp
  406592:	add    rsp,0x8
  406596:	pop    rbx
  406597:	pop    rbp
  406598:	ret    
  406599:	nop    DWORD PTR [rax+0x0]

00000000004065a0 <flatcc_json_printer_nl@@Base>:
  4065a0:	endbr64 
  4065a4:	mov    rax,QWORD PTR [rdi+0x28]
  4065a8:	lea    rdx,[rax+0x1]
  4065ac:	mov    QWORD PTR [rdi+0x28],rdx
  4065b0:	mov    BYTE PTR [rax],0xa
  4065b3:	mov    rax,QWORD PTR [rdi+0x20]
  4065b7:	cmp    QWORD PTR [rdi+0x28],rax
  4065bb:	jb     4065c8 <flatcc_json_printer_nl@@Base+0x28>
  4065bd:	mov    rax,QWORD PTR [rdi+0x48]
  4065c1:	xor    esi,esi
  4065c3:	jmp    rax
  4065c5:	nop    DWORD PTR [rax]
  4065c8:	ret    
  4065c9:	nop    DWORD PTR [rax+0x0]

00000000004065d0 <flatcc_json_printer_char@@Base>:
  4065d0:	endbr64 
  4065d4:	mov    rax,QWORD PTR [rdi+0x28]
  4065d8:	lea    rdx,[rax+0x1]
  4065dc:	mov    QWORD PTR [rdi+0x28],rdx
  4065e0:	mov    BYTE PTR [rax],sil
  4065e3:	ret    
  4065e4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4065ef:	nop

00000000004065f0 <flatcc_json_printer_indent@@Base>:
  4065f0:	endbr64 
  4065f4:	push   rbp
  4065f5:	push   rbx
  4065f6:	sub    rsp,0x8
  4065fa:	movzx  ebp,BYTE PTR [rdi+0x31]
  4065fe:	mov    rax,QWORD PTR [rdi+0x28]
  406602:	imul   ebp,DWORD PTR [rdi+0x38]
  406606:	movsxd rbp,ebp
  406609:	lea    rdx,[rax+rbp*1]
  40660d:	cmp    QWORD PTR [rdi+0x20],rdx
  406611:	jae    406628 <flatcc_json_printer_indent@@Base+0x38>
  406613:	add    rsp,0x8
  406617:	pop    rbx
  406618:	mov    rsi,rbp
  40661b:	pop    rbp
  40661c:	jmp    405350 <test_print@@Base+0xe80>
  406621:	nop    DWORD PTR [rax+0x0]
  406628:	mov    rbx,rdi
  40662b:	mov    rdx,rbp
  40662e:	mov    esi,0x20
  406633:	mov    rdi,rax
  406636:	call   403200 <memset@plt>
  40663b:	add    QWORD PTR [rbx+0x28],rbp
  40663f:	add    rsp,0x8
  406643:	pop    rbx
  406644:	pop    rbp
  406645:	ret    
  406646:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000406650 <flatcc_json_printer_add_level@@Base>:
  406650:	endbr64 
  406654:	add    DWORD PTR [rdi+0x38],esi
  406657:	ret    
  406658:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406660 <flatcc_json_printer_get_level@@Base>:
  406660:	endbr64 
  406664:	mov    eax,DWORD PTR [rdi+0x38]
  406667:	ret    
  406668:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406670 <flatcc_json_printer_uint8@@Base>:
  406670:	endbr64 
  406674:	mov    r8,rdi
  406677:	mov    edi,esi
  406679:	mov    rsi,QWORD PTR [r8+0x28]
  40667d:	movzx  edi,dil
  406681:	call   405590 <test_print@@Base+0x10c0>
  406686:	cdqe   
  406688:	add    QWORD PTR [r8+0x28],rax
  40668c:	ret    
  40668d:	nop    DWORD PTR [rax]

0000000000406690 <flatcc_json_printer_uint16@@Base>:
  406690:	endbr64 
  406694:	mov    r11,rdi
  406697:	mov    edi,esi
  406699:	mov    rsi,QWORD PTR [r11+0x28]
  40669d:	movzx  edi,di
  4066a0:	call   404820 <test_print@@Base+0x350>
  4066a5:	cdqe   
  4066a7:	add    QWORD PTR [r11+0x28],rax
  4066ab:	ret    
  4066ac:	nop    DWORD PTR [rax+0x0]

00000000004066b0 <flatcc_json_printer_uint32@@Base>:
  4066b0:	endbr64 
  4066b4:	push   rbx
  4066b5:	mov    rbx,rdi
  4066b8:	mov    edi,esi
  4066ba:	mov    rsi,QWORD PTR [rbx+0x28]
  4066be:	call   404950 <test_print@@Base+0x480>
  4066c3:	cdqe   
  4066c5:	add    QWORD PTR [rbx+0x28],rax
  4066c9:	pop    rbx
  4066ca:	ret    
  4066cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004066d0 <flatcc_json_printer_uint64@@Base>:
  4066d0:	endbr64 
  4066d4:	push   rbx
  4066d5:	mov    rbx,rdi
  4066d8:	mov    rdi,rsi
  4066db:	mov    rsi,QWORD PTR [rbx+0x28]
  4066df:	call   404c00 <test_print@@Base+0x730>
  4066e4:	cdqe   
  4066e6:	add    QWORD PTR [rbx+0x28],rax
  4066ea:	pop    rbx
  4066eb:	ret    
  4066ec:	nop    DWORD PTR [rax+0x0]

00000000004066f0 <flatcc_json_printer_int8@@Base>:
  4066f0:	endbr64 
  4066f4:	mov    eax,esi
  4066f6:	movsx  r8d,al
  4066fa:	mov    r9,rdi
  4066fd:	mov    rsi,QWORD PTR [rdi+0x28]
  406701:	shr    r8d,0x1f
  406705:	mov    edi,eax
  406707:	test   al,al
  406709:	jns    406713 <flatcc_json_printer_int8@@Base+0x23>
  40670b:	mov    BYTE PTR [rsi],0x2d
  40670e:	neg    edi
  406710:	inc    rsi
  406713:	movzx  edi,dil
  406717:	call   405590 <test_print@@Base+0x10c0>
  40671c:	add    r8d,eax
  40671f:	movsxd r8,r8d
  406722:	add    QWORD PTR [r9+0x28],r8
  406726:	ret    
  406727:	nop    WORD PTR [rax+rax*1+0x0]

0000000000406730 <flatcc_json_printer_int16@@Base>:
  406730:	endbr64 
  406734:	push   rbx
  406735:	mov    eax,esi
  406737:	movsx  r11d,ax
  40673b:	mov    rbx,rdi
  40673e:	mov    rsi,QWORD PTR [rdi+0x28]
  406742:	shr    r11d,0x1f
  406746:	mov    edi,eax
  406748:	test   ax,ax
  40674b:	jns    406755 <flatcc_json_printer_int16@@Base+0x25>
  40674d:	mov    BYTE PTR [rsi],0x2d
  406750:	neg    edi
  406752:	inc    rsi
  406755:	movzx  edi,di
  406758:	call   404820 <test_print@@Base+0x350>
  40675d:	add    r11d,eax
  406760:	movsxd r11,r11d
  406763:	add    QWORD PTR [rbx+0x28],r11
  406767:	pop    rbx
  406768:	ret    
  406769:	nop    DWORD PTR [rax+0x0]

0000000000406770 <flatcc_json_printer_int32@@Base>:
  406770:	endbr64 
  406774:	push   rbp
  406775:	mov    rbp,rdi
  406778:	mov    edi,esi
  40677a:	push   rbx
  40677b:	mov    ebx,edi
  40677d:	mov    rsi,QWORD PTR [rbp+0x28]
  406781:	shr    ebx,0x1f
  406784:	test   edi,edi
  406786:	jns    406790 <flatcc_json_printer_int32@@Base+0x20>
  406788:	mov    BYTE PTR [rsi],0x2d
  40678b:	neg    edi
  40678d:	inc    rsi
  406790:	call   404950 <test_print@@Base+0x480>
  406795:	add    ebx,eax
  406797:	movsxd rbx,ebx
  40679a:	add    QWORD PTR [rbp+0x28],rbx
  40679e:	pop    rbx
  40679f:	pop    rbp
  4067a0:	ret    
  4067a1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4067ac:	nop    DWORD PTR [rax+0x0]

00000000004067b0 <flatcc_json_printer_int64@@Base>:
  4067b0:	endbr64 
  4067b4:	push   rbp
  4067b5:	push   rbx
  4067b6:	mov    rbx,rdi
  4067b9:	mov    rdi,rsi
  4067bc:	mov    rbp,rdi
  4067bf:	mov    rsi,QWORD PTR [rbx+0x28]
  4067c3:	shr    rbp,0x3f
  4067c7:	test   rdi,rdi
  4067ca:	jns    4067d5 <flatcc_json_printer_int64@@Base+0x25>
  4067cc:	mov    BYTE PTR [rsi],0x2d
  4067cf:	neg    rdi
  4067d2:	inc    rsi
  4067d5:	call   404c00 <test_print@@Base+0x730>
  4067da:	add    eax,ebp
  4067dc:	cdqe   
  4067de:	add    QWORD PTR [rbx+0x28],rax
  4067e2:	pop    rbx
  4067e3:	pop    rbp
  4067e4:	ret    
  4067e5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

00000000004067f0 <flatcc_json_printer_float@@Base>:
  4067f0:	endbr64 
  4067f4:	push   rbx
  4067f5:	mov    rbx,rdi
  4067f8:	vcvtss2sd xmm0,xmm0,xmm0
  4067fc:	mov    rdi,QWORD PTR [rdi+0x28]
  406800:	call   405780 <test_print@@Base+0x12b0>
  406805:	cdqe   
  406807:	add    QWORD PTR [rbx+0x28],rax
  40680b:	pop    rbx
  40680c:	ret    
  40680d:	nop    DWORD PTR [rax]

0000000000406810 <flatcc_json_printer_double@@Base>:
  406810:	endbr64 
  406814:	push   rbx
  406815:	mov    rbx,rdi
  406818:	mov    rdi,QWORD PTR [rdi+0x28]
  40681c:	call   405780 <test_print@@Base+0x12b0>
  406821:	cdqe   
  406823:	add    QWORD PTR [rbx+0x28],rax
  406827:	pop    rbx
  406828:	ret    
  406829:	nop    DWORD PTR [rax+0x0]

0000000000406830 <flatcc_json_printer_enum@@Base>:
  406830:	endbr64 
  406834:	push   rbp
  406835:	movsxd rbp,edx
  406838:	mov    rdx,rbp
  40683b:	push   rbx
  40683c:	mov    rbx,rdi
  40683f:	sub    rsp,0x8
  406843:	mov    rax,QWORD PTR [rdi+0x28]
  406847:	mov    BYTE PTR [rax],0x22
  40684a:	cmp    BYTE PTR [rdi+0x32],0x0
  40684e:	sete   dil
  406852:	movzx  edi,dil
  406856:	add    rdi,QWORD PTR [rbx+0x28]
  40685a:	lea    rax,[rdi+rbp*1]
  40685e:	mov    QWORD PTR [rbx+0x28],rdi
  406862:	cmp    QWORD PTR [rbx+0x20],rax
  406866:	jbe    406890 <flatcc_json_printer_enum@@Base+0x60>
  406868:	call   403240 <memcpy@plt>
  40686d:	add    rbp,QWORD PTR [rbx+0x28]
  406871:	mov    QWORD PTR [rbx+0x28],rbp
  406875:	mov    BYTE PTR [rbp+0x0],0x22
  406879:	xor    eax,eax
  40687b:	cmp    BYTE PTR [rbx+0x32],0x0
  40687f:	sete   al
  406882:	add    QWORD PTR [rbx+0x28],rax
  406886:	add    rsp,0x8
  40688a:	pop    rbx
  40688b:	pop    rbp
  40688c:	ret    
  40688d:	nop    DWORD PTR [rax]
  406890:	mov    rdi,rbx
  406893:	call   4052c0 <test_print@@Base+0xdf0>
  406898:	mov    rbp,QWORD PTR [rbx+0x28]
  40689c:	jmp    406875 <flatcc_json_printer_enum@@Base+0x45>
  40689e:	xchg   ax,ax

00000000004068a0 <flatcc_json_printer_delimit_enum_flags@@Base>:
  4068a0:	endbr64 
  4068a4:	cmp    BYTE PTR [rdi+0x32],0x0
  4068a8:	sete   al
  4068ab:	test   esi,esi
  4068ad:	setne  dl
  4068b0:	or     eax,edx
  4068b2:	mov    rdx,QWORD PTR [rdi+0x28]
  4068b6:	movzx  eax,al
  4068b9:	mov    BYTE PTR [rdx],0x22
  4068bc:	add    QWORD PTR [rdi+0x28],rax
  4068c0:	ret    
  4068c1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4068cc:	nop    DWORD PTR [rax+0x0]

00000000004068d0 <flatcc_json_printer_enum_flag@@Base>:
  4068d0:	endbr64 
  4068d4:	push   rbp
  4068d5:	movsxd rbp,ecx
  4068d8:	mov    r8,rdx
  4068db:	push   rbx
  4068dc:	sub    rsp,0x8
  4068e0:	mov    rax,QWORD PTR [rdi+0x28]
  4068e4:	mov    BYTE PTR [rax],0x20
  4068e7:	xor    eax,eax
  4068e9:	test   esi,esi
  4068eb:	setg   al
  4068ee:	add    rax,QWORD PTR [rdi+0x28]
  4068f2:	lea    rdx,[rax+rbp*1]
  4068f6:	mov    QWORD PTR [rdi+0x28],rax
  4068fa:	cmp    QWORD PTR [rdi+0x20],rdx
  4068fe:	ja     406918 <flatcc_json_printer_enum_flag@@Base+0x48>
  406900:	add    rsp,0x8
  406904:	pop    rbx
  406905:	mov    rdx,rbp
  406908:	mov    rsi,r8
  40690b:	pop    rbp
  40690c:	jmp    4052c0 <test_print@@Base+0xdf0>
  406911:	nop    DWORD PTR [rax+0x0]
  406918:	mov    rbx,rdi
  40691b:	mov    rdx,rbp
  40691e:	mov    rsi,r8
  406921:	mov    rdi,rax
  406924:	call   403240 <memcpy@plt>
  406929:	add    QWORD PTR [rbx+0x28],rbp
  40692d:	add    rsp,0x8
  406931:	pop    rbx
  406932:	pop    rbp
  406933:	ret    
  406934:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40693f:	nop

0000000000406940 <flatcc_json_printer_string_field@@Base>:
  406940:	endbr64 
  406944:	lea    eax,[rdx+rdx*1+0x4]
  406948:	cmp    eax,DWORD PTR [rsi+0x10]
  40694b:	jge    406ab0 <flatcc_json_printer_string_field@@Base+0x170>
  406951:	mov    rdx,QWORD PTR [rsi+0x8]
  406955:	movzx  eax,WORD PTR [rdx+rax*1]
  406959:	test   ax,ax
  40695c:	je     406ab0 <flatcc_json_printer_string_field@@Base+0x170>
  406962:	push   r14
  406964:	push   r13
  406966:	push   r12
  406968:	push   rbp
  406969:	push   rbx
  40696a:	add    rax,QWORD PTR [rsi]
  40696d:	mov    r12,rax
  406970:	je     406a38 <flatcc_json_printer_string_field@@Base+0xf8>
  406976:	mov    edx,DWORD PTR [rsi+0x18]
  406979:	lea    eax,[rdx+0x1]
  40697c:	mov    DWORD PTR [rsi+0x18],eax
  40697f:	mov    rax,QWORD PTR [rdi+0x28]
  406983:	test   edx,edx
  406985:	je     406996 <flatcc_json_printer_string_field@@Base+0x56>
  406987:	lea    rdx,[rax+0x1]
  40698b:	mov    QWORD PTR [rdi+0x28],rdx
  40698f:	mov    BYTE PTR [rax],0x2c
  406992:	mov    rax,QWORD PTR [rdi+0x28]
  406996:	cmp    BYTE PTR [rdi+0x31],0x0
  40699a:	mov    r14,rcx
  40699d:	mov    rbx,rdi
  4069a0:	movsxd rbp,r8d
  4069a3:	jne    406a70 <flatcc_json_printer_string_field@@Base+0x130>
  4069a9:	cmp    QWORD PTR [rdi+0x20],rax
  4069ad:	jbe    406a60 <flatcc_json_printer_string_field@@Base+0x120>
  4069b3:	mov    BYTE PTR [rax],0x22
  4069b6:	xor    edi,edi
  4069b8:	mov    rdx,rbp
  4069bb:	cmp    BYTE PTR [rbx+0x32],0x0
  4069bf:	sete   dil
  4069c3:	add    rdi,QWORD PTR [rbx+0x28]
  4069c7:	lea    rax,[rdi+rbp*1]
  4069cb:	mov    QWORD PTR [rbx+0x28],rdi
  4069cf:	mov    rsi,r14
  4069d2:	cmp    QWORD PTR [rbx+0x20],rax
  4069d6:	jbe    406a48 <flatcc_json_printer_string_field@@Base+0x108>
  4069d8:	call   403240 <memcpy@plt>
  4069dd:	add    rbp,QWORD PTR [rbx+0x28]
  4069e1:	mov    QWORD PTR [rbx+0x28],rbp
  4069e5:	mov    BYTE PTR [rbp+0x0],0x22
  4069e9:	xor    eax,eax
  4069eb:	mov    rdi,rbx
  4069ee:	cmp    BYTE PTR [rbx+0x32],0x0
  4069f2:	sete   al
  4069f5:	add    rax,QWORD PTR [rbx+0x28]
  4069f9:	lea    rdx,[rax+0x1]
  4069fd:	mov    QWORD PTR [rbx+0x28],rdx
  406a01:	mov    BYTE PTR [rax],0x3a
  406a04:	mov    rax,QWORD PTR [rbx+0x28]
  406a08:	mov    BYTE PTR [rax],0x20
  406a0b:	xor    eax,eax
  406a0d:	cmp    BYTE PTR [rbx+0x31],0x0
  406a11:	setne  al
  406a14:	add    QWORD PTR [rbx+0x28],rax
  406a18:	mov    eax,DWORD PTR [r12]
  406a1c:	add    rax,r12
  406a1f:	pop    rbx
  406a20:	pop    rbp
  406a21:	pop    r12
  406a23:	pop    r13
  406a25:	mov    edx,DWORD PTR [rax]
  406a27:	lea    rsi,[rax+0x4]
  406a2b:	pop    r14
  406a2d:	jmp    406130 <test_print@@Base+0x1c60>
  406a32:	nop    WORD PTR [rax+rax*1+0x0]
  406a38:	pop    rbx
  406a39:	pop    rbp
  406a3a:	pop    r12
  406a3c:	pop    r13
  406a3e:	pop    r14
  406a40:	ret    
  406a41:	nop    DWORD PTR [rax+0x0]
  406a48:	mov    rdi,rbx
  406a4b:	call   4052c0 <test_print@@Base+0xdf0>
  406a50:	mov    rbp,QWORD PTR [rbx+0x28]
  406a54:	jmp    4069e5 <flatcc_json_printer_string_field@@Base+0xa5>
  406a56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406a60:	xor    esi,esi
  406a62:	call   QWORD PTR [rdi+0x48]
  406a65:	mov    rax,QWORD PTR [rbx+0x28]
  406a69:	jmp    4069b3 <flatcc_json_printer_string_field@@Base+0x73>
  406a6e:	xchg   ax,ax
  406a70:	lea    rdx,[rax+0x1]
  406a74:	mov    QWORD PTR [rdi+0x28],rdx
  406a78:	mov    BYTE PTR [rax],0xa
  406a7b:	movzx  eax,BYTE PTR [rdi+0x31]
  406a7f:	imul   eax,DWORD PTR [rdi+0x38]
  406a83:	mov    rdi,QWORD PTR [rdi+0x28]
  406a87:	movsxd r13,eax
  406a8a:	lea    rax,[rdi+r13*1]
  406a8e:	cmp    QWORD PTR [rbx+0x20],rax
  406a92:	jae    406ab8 <flatcc_json_printer_string_field@@Base+0x178>
  406a94:	mov    rsi,r13
  406a97:	mov    rdi,rbx
  406a9a:	call   405350 <test_print@@Base+0xe80>
  406a9f:	mov    rax,QWORD PTR [rbx+0x28]
  406aa3:	jmp    4069b3 <flatcc_json_printer_string_field@@Base+0x73>
  406aa8:	nop    DWORD PTR [rax+rax*1+0x0]
  406ab0:	ret    
  406ab1:	nop    DWORD PTR [rax+0x0]
  406ab8:	mov    rdx,r13
  406abb:	mov    esi,0x20
  406ac0:	call   403200 <memset@plt>
  406ac5:	mov    rax,QWORD PTR [rbx+0x28]
  406ac9:	add    rax,r13
  406acc:	mov    QWORD PTR [rbx+0x28],rax
  406ad0:	jmp    4069b3 <flatcc_json_printer_string_field@@Base+0x73>
  406ad5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000406ae0 <flatcc_json_printer_uint8_vector_base64_field@@Base>:
  406ae0:	endbr64 
  406ae4:	push   r15
  406ae6:	push   r14
  406ae8:	push   r13
  406aea:	push   r12
  406aec:	push   rbp
  406aed:	push   rbx
  406aee:	sub    rsp,0x38
  406af2:	mov    rax,QWORD PTR fs:0x28
  406afb:	mov    QWORD PTR [rsp+0x28],rax
  406b00:	xor    eax,eax
  406b02:	lea    eax,[rdx+rdx*1+0x4]
  406b06:	cmp    eax,DWORD PTR [rsi+0x10]
  406b09:	jge    406d2c <flatcc_json_printer_uint8_vector_base64_field@@Base+0x24c>
  406b0f:	mov    rdx,QWORD PTR [rsi+0x8]
  406b13:	movzx  ebp,WORD PTR [rdx+rax*1]
  406b17:	test   bp,bp
  406b1a:	je     406d2c <flatcc_json_printer_uint8_vector_base64_field@@Base+0x24c>
  406b20:	xor    r13d,r13d
  406b23:	test   r9d,r9d
  406b26:	setne  r13b
  406b2a:	mov    eax,r13d
  406b2d:	or     al,0x80
  406b2f:	mov    DWORD PTR [rsp+0xc],eax
  406b33:	add    rbp,QWORD PTR [rsi]
  406b36:	je     406d2c <flatcc_json_printer_uint8_vector_base64_field@@Base+0x24c>
  406b3c:	mov    eax,DWORD PTR [rsi+0x18]
  406b3f:	mov    rbx,rdi
  406b42:	lea    edx,[rax+0x1]
  406b45:	mov    DWORD PTR [rsi+0x18],edx
  406b48:	mov    r14,rcx
  406b4b:	mov    rsi,QWORD PTR [rdi+0x28]
  406b4f:	test   eax,eax
  406b51:	je     406b62 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x82>
  406b53:	lea    rax,[rsi+0x1]
  406b57:	mov    QWORD PTR [rdi+0x28],rax
  406b5b:	mov    BYTE PTR [rsi],0x2c
  406b5e:	mov    rsi,QWORD PTR [rdi+0x28]
  406b62:	cmp    BYTE PTR [rbx+0x31],0x0
  406b66:	movsxd r15,r8d
  406b69:	jne    406d50 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x270>
  406b6f:	cmp    QWORD PTR [rbx+0x20],rsi
  406b73:	ja     406b81 <flatcc_json_printer_uint8_vector_base64_field@@Base+0xa1>
  406b75:	xor    esi,esi
  406b77:	mov    rdi,rbx
  406b7a:	call   QWORD PTR [rbx+0x48]
  406b7d:	mov    rsi,QWORD PTR [rbx+0x28]
  406b81:	mov    BYTE PTR [rsi],0x22
  406b84:	xor    edi,edi
  406b86:	mov    rdx,r15
  406b89:	cmp    BYTE PTR [rbx+0x32],0x0
  406b8d:	sete   dil
  406b91:	add    rdi,QWORD PTR [rbx+0x28]
  406b95:	lea    rax,[rdi+r15*1]
  406b99:	mov    QWORD PTR [rbx+0x28],rdi
  406b9d:	mov    rsi,r14
  406ba0:	cmp    QWORD PTR [rbx+0x20],rax
  406ba4:	jbe    406d90 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x2b0>
  406baa:	call   403240 <memcpy@plt>
  406baf:	mov    r8,QWORD PTR [rbx+0x28]
  406bb3:	add    r8,r15
  406bb6:	mov    QWORD PTR [rbx+0x28],r8
  406bba:	mov    BYTE PTR [r8],0x22
  406bbe:	xor    eax,eax
  406bc0:	movabs r12,0xaaaaaaaaaaaaaaab
  406bca:	cmp    BYTE PTR [rbx+0x32],0x0
  406bce:	sete   al
  406bd1:	add    rax,QWORD PTR [rbx+0x28]
  406bd5:	lea    rdx,[rax+0x1]
  406bd9:	mov    QWORD PTR [rbx+0x28],rdx
  406bdd:	mov    BYTE PTR [rax],0x3a
  406be0:	mov    rax,QWORD PTR [rbx+0x28]
  406be4:	mov    BYTE PTR [rax],0x20
  406be7:	xor    eax,eax
  406be9:	mov    edx,DWORD PTR [rbp+0x0]
  406bec:	cmp    BYTE PTR [rbx+0x31],0x0
  406bf0:	setne  al
  406bf3:	add    rbp,rdx
  406bf6:	add    rax,QWORD PTR [rbx+0x28]
  406bfa:	mov    ecx,DWORD PTR [rbp+0x0]
  406bfd:	lea    rdx,[rax+0x1]
  406c01:	mov    QWORD PTR [rbx+0x28],rdx
  406c05:	mov    QWORD PTR [rsp+0x18],rcx
  406c0a:	mov    BYTE PTR [rax],0x22
  406c0d:	add    rbp,0x4
  406c11:	mov    rax,QWORD PTR [rsp+0x18]
  406c16:	mov    rdi,QWORD PTR [rbx+0x28]
  406c1a:	lea    rdx,[rax*4+0x0]
  406c22:	mov    rax,rdx
  406c25:	mul    r12
  406c28:	shr    rdx,1
  406c2b:	mov    r8,rdx
  406c2e:	add    r8,0x3
  406c32:	mov    r15,r8
  406c35:	and    r15,0xfffffffffffffffc
  406c39:	lea    rax,[rdi+r15*1]
  406c3d:	cmp    rax,QWORD PTR [rbx+0x20]
  406c41:	jb     406d08 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x228>
  406c47:	mov    rdi,rbx
  406c4a:	xor    esi,esi
  406c4c:	call   QWORD PTR [rbx+0x48]
  406c4f:	mov    rdi,QWORD PTR [rbx+0x28]
  406c53:	mov    r11,QWORD PTR [rbx+0x20]
  406c57:	lea    rax,[rdi+r15*1]
  406c5b:	cmp    rax,r11
  406c5e:	jbe    406d08 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x228>
  406c64:	sub    r11,rdi
  406c67:	and    r11,0xfffffffffffffffc
  406c6b:	lea    rax,[r11+r11*2]
  406c6f:	mov    r15,rax
  406c72:	shr    r15,0x2
  406c76:	cmp    rax,0x3
  406c7a:	jbe    406dc5 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x2e5>
  406c80:	lea    r14,[rsp+0x20]
  406c85:	jmp    406cac <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1cc>
  406c87:	nop    WORD PTR [rax+rax*1+0x0]
  406c90:	sub    r11,rdi
  406c93:	and    r11,0xfffffffffffffffc
  406c97:	lea    rax,[r11+r11*2]
  406c9b:	mov    r15,rax
  406c9e:	shr    r15,0x2
  406ca2:	cmp    rax,0x3
  406ca6:	jbe    406dc5 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x2e5>
  406cac:	mov    rdx,r14
  406caf:	mov    rsi,rbp
  406cb2:	mov    ecx,r13d
  406cb5:	mov    QWORD PTR [rsp+0x20],r15
  406cba:	call   405fb0 <test_print@@Base+0x1ae0>
  406cbf:	add    QWORD PTR [rbx+0x28],r11
  406cc3:	sub    QWORD PTR [rsp+0x18],r15
  406cc8:	mov    rdi,rbx
  406ccb:	xor    esi,esi
  406ccd:	add    rbp,r15
  406cd0:	call   QWORD PTR [rbx+0x48]
  406cd3:	mov    rax,QWORD PTR [rsp+0x18]
  406cd8:	mov    rdi,QWORD PTR [rbx+0x28]
  406cdc:	lea    rdx,[rax*4+0x0]
  406ce4:	mov    rax,rdx
  406ce7:	mul    r12
  406cea:	mov    r11,QWORD PTR [rbx+0x20]
  406cee:	shr    rdx,1
  406cf1:	mov    r8,rdx
  406cf4:	add    r8,0x3
  406cf8:	and    r8,0xfffffffffffffffc
  406cfc:	lea    rax,[rdi+r8*1]
  406d00:	mov    r15,r8
  406d03:	cmp    r11,rax
  406d06:	jb     406c90 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1b0>
  406d08:	mov    ecx,DWORD PTR [rsp+0xc]
  406d0c:	lea    rdx,[rsp+0x18]
  406d11:	mov    rsi,rbp
  406d14:	call   405fb0 <test_print@@Base+0x1ae0>
  406d19:	mov    r8,QWORD PTR [rbx+0x28]
  406d1d:	add    r8,r15
  406d20:	lea    rax,[r8+0x1]
  406d24:	mov    QWORD PTR [rbx+0x28],rax
  406d28:	mov    BYTE PTR [r8],0x22
  406d2c:	mov    rax,QWORD PTR [rsp+0x28]
  406d31:	xor    rax,QWORD PTR fs:0x28
  406d3a:	jne    406de4 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x304>
  406d40:	add    rsp,0x38
  406d44:	pop    rbx
  406d45:	pop    rbp
  406d46:	pop    r12
  406d48:	pop    r13
  406d4a:	pop    r14
  406d4c:	pop    r15
  406d4e:	ret    
  406d4f:	nop
  406d50:	lea    rax,[rsi+0x1]
  406d54:	mov    QWORD PTR [rbx+0x28],rax
  406d58:	mov    BYTE PTR [rsi],0xa
  406d5b:	movzx  esi,BYTE PTR [rbx+0x31]
  406d5f:	mov    rdi,QWORD PTR [rbx+0x28]
  406d63:	imul   esi,DWORD PTR [rbx+0x38]
  406d67:	movsxd r12,esi
  406d6a:	lea    rax,[rdi+r12*1]
  406d6e:	cmp    QWORD PTR [rbx+0x20],rax
  406d72:	jae    406da8 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x2c8>
  406d74:	mov    rsi,r12
  406d77:	mov    rdi,rbx
  406d7a:	call   405350 <test_print@@Base+0xe80>
  406d7f:	mov    rsi,QWORD PTR [rbx+0x28]
  406d83:	jmp    406b81 <flatcc_json_printer_uint8_vector_base64_field@@Base+0xa1>
  406d88:	nop    DWORD PTR [rax+rax*1+0x0]
  406d90:	mov    rdi,rbx
  406d93:	call   4052c0 <test_print@@Base+0xdf0>
  406d98:	mov    r8,QWORD PTR [rbx+0x28]
  406d9c:	jmp    406bba <flatcc_json_printer_uint8_vector_base64_field@@Base+0xda>
  406da1:	nop    DWORD PTR [rax+0x0]
  406da8:	mov    esi,0x20
  406dad:	mov    rdx,r12
  406db0:	call   403200 <memset@plt>
  406db5:	mov    rsi,QWORD PTR [rbx+0x28]
  406db9:	add    rsi,r12
  406dbc:	mov    QWORD PTR [rbx+0x28],rsi
  406dc0:	jmp    406b81 <flatcc_json_printer_uint8_vector_base64_field@@Base+0xa1>
  406dc5:	lea    rcx,[rip+0x9cd4]        # 410aa0 <_IO_stdin_used@@Base+0xaa0>
  406dcc:	mov    edx,0x115
  406dd1:	lea    rsi,[rip+0x9a40]        # 410818 <_IO_stdin_used@@Base+0x818>
  406dd8:	lea    rdi,[rip+0x9bfc]        # 4109db <_IO_stdin_used@@Base+0x9db>
  406ddf:	call   4031f0 <__assert_fail@plt>
  406de4:	call   4031d0 <__stack_chk_fail@plt>
  406de9:	nop    DWORD PTR [rax+0x0]

0000000000406df0 <flatcc_json_printer_uint8_field@@Base>:
  406df0:	endbr64 
  406df4:	push   r14
  406df6:	lea    eax,[rdx+rdx*1+0x4]
  406dfa:	push   r13
  406dfc:	push   r12
  406dfe:	push   rbp
  406dff:	push   rbx
  406e00:	cmp    eax,DWORD PTR [rsi+0x10]
  406e03:	jge    406ef8 <flatcc_json_printer_uint8_field@@Base+0x108>
  406e09:	mov    rdx,QWORD PTR [rsi+0x8]
  406e0d:	movzx  eax,WORD PTR [rdx+rax*1]
  406e11:	test   ax,ax
  406e14:	je     406ef8 <flatcc_json_printer_uint8_field@@Base+0x108>
  406e1a:	add    rax,QWORD PTR [rsi]
  406e1d:	je     406ef8 <flatcc_json_printer_uint8_field@@Base+0x108>
  406e23:	movzx  r13d,BYTE PTR [rax]
  406e27:	cmp    r9b,r13b
  406e2a:	je     406f80 <flatcc_json_printer_uint8_field@@Base+0x190>
  406e30:	mov    eax,DWORD PTR [rsi+0x18]
  406e33:	lea    edx,[rax+0x1]
  406e36:	mov    DWORD PTR [rsi+0x18],edx
  406e39:	mov    rdx,QWORD PTR [rdi+0x28]
  406e3d:	test   eax,eax
  406e3f:	je     406e50 <flatcc_json_printer_uint8_field@@Base+0x60>
  406e41:	lea    rax,[rdx+0x1]
  406e45:	mov    QWORD PTR [rdi+0x28],rax
  406e49:	mov    BYTE PTR [rdx],0x2c
  406e4c:	mov    rdx,QWORD PTR [rdi+0x28]
  406e50:	cmp    BYTE PTR [rdi+0x31],0x0
  406e54:	mov    r14,rcx
  406e57:	mov    rbx,rdi
  406e5a:	movsxd rbp,r8d
  406e5d:	jne    406f20 <flatcc_json_printer_uint8_field@@Base+0x130>
  406e63:	cmp    QWORD PTR [rdi+0x20],rdx
  406e67:	ja     406e72 <flatcc_json_printer_uint8_field@@Base+0x82>
  406e69:	xor    esi,esi
  406e6b:	call   QWORD PTR [rdi+0x48]
  406e6e:	mov    rdx,QWORD PTR [rbx+0x28]
  406e72:	mov    BYTE PTR [rdx],0x22
  406e75:	xor    edi,edi
  406e77:	mov    rdx,rbp
  406e7a:	cmp    BYTE PTR [rbx+0x32],0x0
  406e7e:	sete   dil
  406e82:	add    rdi,QWORD PTR [rbx+0x28]
  406e86:	lea    rax,[rdi+rbp*1]
  406e8a:	mov    QWORD PTR [rbx+0x28],rdi
  406e8e:	mov    rsi,r14
  406e91:	cmp    QWORD PTR [rbx+0x20],rax
  406e95:	jbe    406f10 <flatcc_json_printer_uint8_field@@Base+0x120>
  406e97:	call   403240 <memcpy@plt>
  406e9c:	add    rbp,QWORD PTR [rbx+0x28]
  406ea0:	mov    QWORD PTR [rbx+0x28],rbp
  406ea4:	mov    BYTE PTR [rbp+0x0],0x22
  406ea8:	xor    eax,eax
  406eaa:	movzx  edi,r13b
  406eae:	cmp    BYTE PTR [rbx+0x32],0x0
  406eb2:	sete   al
  406eb5:	add    rax,QWORD PTR [rbx+0x28]
  406eb9:	lea    rdx,[rax+0x1]
  406ebd:	mov    QWORD PTR [rbx+0x28],rdx
  406ec1:	mov    BYTE PTR [rax],0x3a
  406ec4:	xor    esi,esi
  406ec6:	mov    rax,QWORD PTR [rbx+0x28]
  406eca:	mov    BYTE PTR [rax],0x20
  406ecd:	cmp    BYTE PTR [rbx+0x31],0x0
  406ed1:	setne  sil
  406ed5:	add    rsi,QWORD PTR [rbx+0x28]
  406ed9:	mov    QWORD PTR [rbx+0x28],rsi
  406edd:	call   405590 <test_print@@Base+0x10c0>
  406ee2:	cdqe   
  406ee4:	add    QWORD PTR [rbx+0x28],rax
  406ee8:	pop    rbx
  406ee9:	pop    rbp
  406eea:	pop    r12
  406eec:	pop    r13
  406eee:	pop    r14
  406ef0:	ret    
  406ef1:	nop    DWORD PTR [rax+0x0]
  406ef8:	cmp    BYTE PTR [rdi+0x35],0x0
  406efc:	je     406ee8 <flatcc_json_printer_uint8_field@@Base+0xf8>
  406efe:	mov    r13d,r9d
  406f01:	jmp    406e30 <flatcc_json_printer_uint8_field@@Base+0x40>
  406f06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406f10:	mov    rdi,rbx
  406f13:	call   4052c0 <test_print@@Base+0xdf0>
  406f18:	mov    rbp,QWORD PTR [rbx+0x28]
  406f1c:	jmp    406ea4 <flatcc_json_printer_uint8_field@@Base+0xb4>
  406f1e:	xchg   ax,ax
  406f20:	lea    rax,[rdx+0x1]
  406f24:	mov    QWORD PTR [rdi+0x28],rax
  406f28:	mov    BYTE PTR [rdx],0xa
  406f2b:	movzx  edx,BYTE PTR [rdi+0x31]
  406f2f:	imul   edx,DWORD PTR [rdi+0x38]
  406f33:	mov    rdi,QWORD PTR [rdi+0x28]
  406f37:	movsxd r12,edx
  406f3a:	lea    rax,[rdi+r12*1]
  406f3e:	cmp    QWORD PTR [rbx+0x20],rax
  406f42:	jae    406f60 <flatcc_json_printer_uint8_field@@Base+0x170>
  406f44:	mov    rsi,r12
  406f47:	mov    rdi,rbx
  406f4a:	call   405350 <test_print@@Base+0xe80>
  406f4f:	mov    rdx,QWORD PTR [rbx+0x28]
  406f53:	jmp    406e72 <flatcc_json_printer_uint8_field@@Base+0x82>
  406f58:	nop    DWORD PTR [rax+rax*1+0x0]
  406f60:	mov    rdx,r12
  406f63:	mov    esi,0x20
  406f68:	call   403200 <memset@plt>
  406f6d:	mov    rdx,QWORD PTR [rbx+0x28]
  406f71:	add    rdx,r12
  406f74:	mov    QWORD PTR [rbx+0x28],rdx
  406f78:	jmp    406e72 <flatcc_json_printer_uint8_field@@Base+0x82>
  406f7d:	nop    DWORD PTR [rax]
  406f80:	cmp    BYTE PTR [rdi+0x34],0x0
  406f84:	je     406e30 <flatcc_json_printer_uint8_field@@Base+0x40>
  406f8a:	jmp    406ee8 <flatcc_json_printer_uint8_field@@Base+0xf8>
  406f8f:	nop

0000000000406f90 <flatcc_json_printer_uint16_field@@Base>:
  406f90:	endbr64 
  406f94:	push   r14
  406f96:	lea    eax,[rdx+rdx*1+0x4]
  406f9a:	push   r13
  406f9c:	push   r12
  406f9e:	push   rbp
  406f9f:	push   rbx
  406fa0:	cmp    eax,DWORD PTR [rsi+0x10]
  406fa3:	jge    407098 <flatcc_json_printer_uint16_field@@Base+0x108>
  406fa9:	mov    rdx,QWORD PTR [rsi+0x8]
  406fad:	movzx  eax,WORD PTR [rdx+rax*1]
  406fb1:	test   ax,ax
  406fb4:	je     407098 <flatcc_json_printer_uint16_field@@Base+0x108>
  406fba:	add    rax,QWORD PTR [rsi]
  406fbd:	je     407098 <flatcc_json_printer_uint16_field@@Base+0x108>
  406fc3:	movzx  r13d,WORD PTR [rax]
  406fc7:	cmp    r9w,r13w
  406fcb:	je     407120 <flatcc_json_printer_uint16_field@@Base+0x190>
  406fd1:	mov    eax,DWORD PTR [rsi+0x18]
  406fd4:	lea    edx,[rax+0x1]
  406fd7:	mov    DWORD PTR [rsi+0x18],edx
  406fda:	mov    rdx,QWORD PTR [rdi+0x28]
  406fde:	test   eax,eax
  406fe0:	je     406ff1 <flatcc_json_printer_uint16_field@@Base+0x61>
  406fe2:	lea    rax,[rdx+0x1]
  406fe6:	mov    QWORD PTR [rdi+0x28],rax
  406fea:	mov    BYTE PTR [rdx],0x2c
  406fed:	mov    rdx,QWORD PTR [rdi+0x28]
  406ff1:	cmp    BYTE PTR [rdi+0x31],0x0
  406ff5:	mov    r14,rcx
  406ff8:	mov    rbx,rdi
  406ffb:	movsxd rbp,r8d
  406ffe:	jne    4070c0 <flatcc_json_printer_uint16_field@@Base+0x130>
  407004:	cmp    QWORD PTR [rdi+0x20],rdx
  407008:	ja     407013 <flatcc_json_printer_uint16_field@@Base+0x83>
  40700a:	xor    esi,esi
  40700c:	call   QWORD PTR [rdi+0x48]
  40700f:	mov    rdx,QWORD PTR [rbx+0x28]
  407013:	mov    BYTE PTR [rdx],0x22
  407016:	xor    edi,edi
  407018:	mov    rdx,rbp
  40701b:	cmp    BYTE PTR [rbx+0x32],0x0
  40701f:	sete   dil
  407023:	add    rdi,QWORD PTR [rbx+0x28]
  407027:	lea    rax,[rdi+rbp*1]
  40702b:	mov    QWORD PTR [rbx+0x28],rdi
  40702f:	mov    rsi,r14
  407032:	cmp    QWORD PTR [rbx+0x20],rax
  407036:	jbe    4070b0 <flatcc_json_printer_uint16_field@@Base+0x120>
  407038:	call   403240 <memcpy@plt>
  40703d:	add    rbp,QWORD PTR [rbx+0x28]
  407041:	mov    QWORD PTR [rbx+0x28],rbp
  407045:	mov    BYTE PTR [rbp+0x0],0x22
  407049:	xor    eax,eax
  40704b:	movzx  edi,r13w
  40704f:	cmp    BYTE PTR [rbx+0x32],0x0
  407053:	sete   al
  407056:	add    rax,QWORD PTR [rbx+0x28]
  40705a:	lea    rdx,[rax+0x1]
  40705e:	mov    QWORD PTR [rbx+0x28],rdx
  407062:	mov    BYTE PTR [rax],0x3a
  407065:	xor    esi,esi
  407067:	mov    rax,QWORD PTR [rbx+0x28]
  40706b:	mov    BYTE PTR [rax],0x20
  40706e:	cmp    BYTE PTR [rbx+0x31],0x0
  407072:	setne  sil
  407076:	add    rsi,QWORD PTR [rbx+0x28]
  40707a:	mov    QWORD PTR [rbx+0x28],rsi
  40707e:	call   404820 <test_print@@Base+0x350>
  407083:	cdqe   
  407085:	add    QWORD PTR [rbx+0x28],rax
  407089:	pop    rbx
  40708a:	pop    rbp
  40708b:	pop    r12
  40708d:	pop    r13
  40708f:	pop    r14
  407091:	ret    
  407092:	nop    WORD PTR [rax+rax*1+0x0]
  407098:	cmp    BYTE PTR [rdi+0x35],0x0
  40709c:	je     407089 <flatcc_json_printer_uint16_field@@Base+0xf9>
  40709e:	mov    r13d,r9d
  4070a1:	jmp    406fd1 <flatcc_json_printer_uint16_field@@Base+0x41>
  4070a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4070b0:	mov    rdi,rbx
  4070b3:	call   4052c0 <test_print@@Base+0xdf0>
  4070b8:	mov    rbp,QWORD PTR [rbx+0x28]
  4070bc:	jmp    407045 <flatcc_json_printer_uint16_field@@Base+0xb5>
  4070be:	xchg   ax,ax
  4070c0:	lea    rax,[rdx+0x1]
  4070c4:	mov    QWORD PTR [rdi+0x28],rax
  4070c8:	mov    BYTE PTR [rdx],0xa
  4070cb:	movzx  edx,BYTE PTR [rdi+0x31]
  4070cf:	imul   edx,DWORD PTR [rdi+0x38]
  4070d3:	mov    rdi,QWORD PTR [rdi+0x28]
  4070d7:	movsxd r12,edx
  4070da:	lea    rax,[rdi+r12*1]
  4070de:	cmp    QWORD PTR [rbx+0x20],rax
  4070e2:	jae    407100 <flatcc_json_printer_uint16_field@@Base+0x170>
  4070e4:	mov    rsi,r12
  4070e7:	mov    rdi,rbx
  4070ea:	call   405350 <test_print@@Base+0xe80>
  4070ef:	mov    rdx,QWORD PTR [rbx+0x28]
  4070f3:	jmp    407013 <flatcc_json_printer_uint16_field@@Base+0x83>
  4070f8:	nop    DWORD PTR [rax+rax*1+0x0]
  407100:	mov    rdx,r12
  407103:	mov    esi,0x20
  407108:	call   403200 <memset@plt>
  40710d:	mov    rdx,QWORD PTR [rbx+0x28]
  407111:	add    rdx,r12
  407114:	mov    QWORD PTR [rbx+0x28],rdx
  407118:	jmp    407013 <flatcc_json_printer_uint16_field@@Base+0x83>
  40711d:	nop    DWORD PTR [rax]
  407120:	cmp    BYTE PTR [rdi+0x34],0x0
  407124:	je     406fd1 <flatcc_json_printer_uint16_field@@Base+0x41>
  40712a:	jmp    407089 <flatcc_json_printer_uint16_field@@Base+0xf9>
  40712f:	nop

0000000000407130 <flatcc_json_printer_uint32_field@@Base>:
  407130:	endbr64 
  407134:	push   r14
  407136:	lea    eax,[rdx+rdx*1+0x4]
  40713a:	push   r13
  40713c:	push   r12
  40713e:	push   rbp
  40713f:	push   rbx
  407140:	cmp    eax,DWORD PTR [rsi+0x10]
  407143:	jge    407230 <flatcc_json_printer_uint32_field@@Base+0x100>
  407149:	mov    rdx,QWORD PTR [rsi+0x8]
  40714d:	movzx  eax,WORD PTR [rdx+rax*1]
  407151:	test   ax,ax
  407154:	je     407230 <flatcc_json_printer_uint32_field@@Base+0x100>
  40715a:	add    rax,QWORD PTR [rsi]
  40715d:	je     407230 <flatcc_json_printer_uint32_field@@Base+0x100>
  407163:	mov    r13d,DWORD PTR [rax]
  407166:	cmp    r9d,r13d
  407169:	je     4072b0 <flatcc_json_printer_uint32_field@@Base+0x180>
  40716f:	mov    eax,DWORD PTR [rsi+0x18]
  407172:	lea    edx,[rax+0x1]
  407175:	mov    DWORD PTR [rsi+0x18],edx
  407178:	mov    rdx,QWORD PTR [rdi+0x28]
  40717c:	test   eax,eax
  40717e:	je     40718f <flatcc_json_printer_uint32_field@@Base+0x5f>
  407180:	lea    rax,[rdx+0x1]
  407184:	mov    QWORD PTR [rdi+0x28],rax
  407188:	mov    BYTE PTR [rdx],0x2c
  40718b:	mov    rdx,QWORD PTR [rdi+0x28]
  40718f:	cmp    BYTE PTR [rdi+0x31],0x0
  407193:	mov    r14,rcx
  407196:	mov    rbx,rdi
  407199:	movsxd rbp,r8d
  40719c:	jne    407250 <flatcc_json_printer_uint32_field@@Base+0x120>
  4071a2:	cmp    QWORD PTR [rdi+0x20],rdx
  4071a6:	ja     4071b1 <flatcc_json_printer_uint32_field@@Base+0x81>
  4071a8:	xor    esi,esi
  4071aa:	call   QWORD PTR [rdi+0x48]
  4071ad:	mov    rdx,QWORD PTR [rbx+0x28]
  4071b1:	mov    BYTE PTR [rdx],0x22
  4071b4:	xor    edi,edi
  4071b6:	mov    rdx,rbp
  4071b9:	cmp    BYTE PTR [rbx+0x32],0x0
  4071bd:	sete   dil
  4071c1:	add    rdi,QWORD PTR [rbx+0x28]
  4071c5:	lea    rax,[rdi+rbp*1]
  4071c9:	mov    QWORD PTR [rbx+0x28],rdi
  4071cd:	mov    rsi,r14
  4071d0:	cmp    QWORD PTR [rbx+0x20],rax
  4071d4:	jbe    407240 <flatcc_json_printer_uint32_field@@Base+0x110>
  4071d6:	call   403240 <memcpy@plt>
  4071db:	add    rbp,QWORD PTR [rbx+0x28]
  4071df:	mov    QWORD PTR [rbx+0x28],rbp
  4071e3:	mov    BYTE PTR [rbp+0x0],0x22
  4071e7:	xor    eax,eax
  4071e9:	mov    edi,r13d
  4071ec:	cmp    BYTE PTR [rbx+0x32],0x0
  4071f0:	sete   al
  4071f3:	add    rax,QWORD PTR [rbx+0x28]
  4071f7:	lea    rdx,[rax+0x1]
  4071fb:	mov    QWORD PTR [rbx+0x28],rdx
  4071ff:	mov    BYTE PTR [rax],0x3a
  407202:	xor    esi,esi
  407204:	mov    rax,QWORD PTR [rbx+0x28]
  407208:	mov    BYTE PTR [rax],0x20
  40720b:	cmp    BYTE PTR [rbx+0x31],0x0
  40720f:	setne  sil
  407213:	add    rsi,QWORD PTR [rbx+0x28]
  407217:	mov    QWORD PTR [rbx+0x28],rsi
  40721b:	call   404950 <test_print@@Base+0x480>
  407220:	cdqe   
  407222:	add    QWORD PTR [rbx+0x28],rax
  407226:	pop    rbx
  407227:	pop    rbp
  407228:	pop    r12
  40722a:	pop    r13
  40722c:	pop    r14
  40722e:	ret    
  40722f:	nop
  407230:	cmp    BYTE PTR [rdi+0x35],0x0
  407234:	je     407226 <flatcc_json_printer_uint32_field@@Base+0xf6>
  407236:	mov    r13d,r9d
  407239:	jmp    40716f <flatcc_json_printer_uint32_field@@Base+0x3f>
  40723e:	xchg   ax,ax
  407240:	mov    rdi,rbx
  407243:	call   4052c0 <test_print@@Base+0xdf0>
  407248:	mov    rbp,QWORD PTR [rbx+0x28]
  40724c:	jmp    4071e3 <flatcc_json_printer_uint32_field@@Base+0xb3>
  40724e:	xchg   ax,ax
  407250:	lea    rax,[rdx+0x1]
  407254:	mov    QWORD PTR [rdi+0x28],rax
  407258:	mov    BYTE PTR [rdx],0xa
  40725b:	movzx  edx,BYTE PTR [rdi+0x31]
  40725f:	imul   edx,DWORD PTR [rdi+0x38]
  407263:	mov    rdi,QWORD PTR [rdi+0x28]
  407267:	movsxd r12,edx
  40726a:	lea    rax,[rdi+r12*1]
  40726e:	cmp    QWORD PTR [rbx+0x20],rax
  407272:	jae    407290 <flatcc_json_printer_uint32_field@@Base+0x160>
  407274:	mov    rsi,r12
  407277:	mov    rdi,rbx
  40727a:	call   405350 <test_print@@Base+0xe80>
  40727f:	mov    rdx,QWORD PTR [rbx+0x28]
  407283:	jmp    4071b1 <flatcc_json_printer_uint32_field@@Base+0x81>
  407288:	nop    DWORD PTR [rax+rax*1+0x0]
  407290:	mov    rdx,r12
  407293:	mov    esi,0x20
  407298:	call   403200 <memset@plt>
  40729d:	mov    rdx,QWORD PTR [rbx+0x28]
  4072a1:	add    rdx,r12
  4072a4:	mov    QWORD PTR [rbx+0x28],rdx
  4072a8:	jmp    4071b1 <flatcc_json_printer_uint32_field@@Base+0x81>
  4072ad:	nop    DWORD PTR [rax]
  4072b0:	cmp    BYTE PTR [rdi+0x34],0x0
  4072b4:	je     40716f <flatcc_json_printer_uint32_field@@Base+0x3f>
  4072ba:	jmp    407226 <flatcc_json_printer_uint32_field@@Base+0xf6>
  4072bf:	nop

00000000004072c0 <flatcc_json_printer_uint64_field@@Base>:
  4072c0:	endbr64 
  4072c4:	push   r14
  4072c6:	lea    eax,[rdx+rdx*1+0x4]
  4072ca:	push   r13
  4072cc:	push   r12
  4072ce:	push   rbp
  4072cf:	push   rbx
  4072d0:	cmp    eax,DWORD PTR [rsi+0x10]
  4072d3:	jge    4073c0 <flatcc_json_printer_uint64_field@@Base+0x100>
  4072d9:	mov    rdx,QWORD PTR [rsi+0x8]
  4072dd:	movzx  eax,WORD PTR [rdx+rax*1]
  4072e1:	test   ax,ax
  4072e4:	je     4073c0 <flatcc_json_printer_uint64_field@@Base+0x100>
  4072ea:	add    rax,QWORD PTR [rsi]
  4072ed:	je     4073c0 <flatcc_json_printer_uint64_field@@Base+0x100>
  4072f3:	mov    r13,QWORD PTR [rax]
  4072f6:	cmp    r9,r13
  4072f9:	je     407440 <flatcc_json_printer_uint64_field@@Base+0x180>
  4072ff:	mov    eax,DWORD PTR [rsi+0x18]
  407302:	lea    edx,[rax+0x1]
  407305:	mov    DWORD PTR [rsi+0x18],edx
  407308:	mov    rdx,QWORD PTR [rdi+0x28]
  40730c:	test   eax,eax
  40730e:	je     40731f <flatcc_json_printer_uint64_field@@Base+0x5f>
  407310:	lea    rax,[rdx+0x1]
  407314:	mov    QWORD PTR [rdi+0x28],rax
  407318:	mov    BYTE PTR [rdx],0x2c
  40731b:	mov    rdx,QWORD PTR [rdi+0x28]
  40731f:	cmp    BYTE PTR [rdi+0x31],0x0
  407323:	mov    r14,rcx
  407326:	mov    rbx,rdi
  407329:	movsxd rbp,r8d
  40732c:	jne    4073e0 <flatcc_json_printer_uint64_field@@Base+0x120>
  407332:	cmp    QWORD PTR [rdi+0x20],rdx
  407336:	ja     407341 <flatcc_json_printer_uint64_field@@Base+0x81>
  407338:	xor    esi,esi
  40733a:	call   QWORD PTR [rdi+0x48]
  40733d:	mov    rdx,QWORD PTR [rbx+0x28]
  407341:	mov    BYTE PTR [rdx],0x22
  407344:	xor    edi,edi
  407346:	mov    rdx,rbp
  407349:	cmp    BYTE PTR [rbx+0x32],0x0
  40734d:	sete   dil
  407351:	add    rdi,QWORD PTR [rbx+0x28]
  407355:	lea    rax,[rdi+rbp*1]
  407359:	mov    QWORD PTR [rbx+0x28],rdi
  40735d:	mov    rsi,r14
  407360:	cmp    QWORD PTR [rbx+0x20],rax
  407364:	jbe    4073d0 <flatcc_json_printer_uint64_field@@Base+0x110>
  407366:	call   403240 <memcpy@plt>
  40736b:	add    rbp,QWORD PTR [rbx+0x28]
  40736f:	mov    QWORD PTR [rbx+0x28],rbp
  407373:	mov    BYTE PTR [rbp+0x0],0x22
  407377:	xor    eax,eax
  407379:	mov    rdi,r13
  40737c:	cmp    BYTE PTR [rbx+0x32],0x0
  407380:	sete   al
  407383:	add    rax,QWORD PTR [rbx+0x28]
  407387:	lea    rdx,[rax+0x1]
  40738b:	mov    QWORD PTR [rbx+0x28],rdx
  40738f:	mov    BYTE PTR [rax],0x3a
  407392:	xor    esi,esi
  407394:	mov    rax,QWORD PTR [rbx+0x28]
  407398:	mov    BYTE PTR [rax],0x20
  40739b:	cmp    BYTE PTR [rbx+0x31],0x0
  40739f:	setne  sil
  4073a3:	add    rsi,QWORD PTR [rbx+0x28]
  4073a7:	mov    QWORD PTR [rbx+0x28],rsi
  4073ab:	call   404c00 <test_print@@Base+0x730>
  4073b0:	cdqe   
  4073b2:	add    QWORD PTR [rbx+0x28],rax
  4073b6:	pop    rbx
  4073b7:	pop    rbp
  4073b8:	pop    r12
  4073ba:	pop    r13
  4073bc:	pop    r14
  4073be:	ret    
  4073bf:	nop
  4073c0:	cmp    BYTE PTR [rdi+0x35],0x0
  4073c4:	je     4073b6 <flatcc_json_printer_uint64_field@@Base+0xf6>
  4073c6:	mov    r13,r9
  4073c9:	jmp    4072ff <flatcc_json_printer_uint64_field@@Base+0x3f>
  4073ce:	xchg   ax,ax
  4073d0:	mov    rdi,rbx
  4073d3:	call   4052c0 <test_print@@Base+0xdf0>
  4073d8:	mov    rbp,QWORD PTR [rbx+0x28]
  4073dc:	jmp    407373 <flatcc_json_printer_uint64_field@@Base+0xb3>
  4073de:	xchg   ax,ax
  4073e0:	lea    rax,[rdx+0x1]
  4073e4:	mov    QWORD PTR [rdi+0x28],rax
  4073e8:	mov    BYTE PTR [rdx],0xa
  4073eb:	movzx  edx,BYTE PTR [rdi+0x31]
  4073ef:	imul   edx,DWORD PTR [rdi+0x38]
  4073f3:	mov    rdi,QWORD PTR [rdi+0x28]
  4073f7:	movsxd r12,edx
  4073fa:	lea    rax,[rdi+r12*1]
  4073fe:	cmp    QWORD PTR [rbx+0x20],rax
  407402:	jae    407420 <flatcc_json_printer_uint64_field@@Base+0x160>
  407404:	mov    rsi,r12
  407407:	mov    rdi,rbx
  40740a:	call   405350 <test_print@@Base+0xe80>
  40740f:	mov    rdx,QWORD PTR [rbx+0x28]
  407413:	jmp    407341 <flatcc_json_printer_uint64_field@@Base+0x81>
  407418:	nop    DWORD PTR [rax+rax*1+0x0]
  407420:	mov    rdx,r12
  407423:	mov    esi,0x20
  407428:	call   403200 <memset@plt>
  40742d:	mov    rdx,QWORD PTR [rbx+0x28]
  407431:	add    rdx,r12
  407434:	mov    QWORD PTR [rbx+0x28],rdx
  407438:	jmp    407341 <flatcc_json_printer_uint64_field@@Base+0x81>
  40743d:	nop    DWORD PTR [rax]
  407440:	cmp    BYTE PTR [rdi+0x34],0x0
  407444:	je     4072ff <flatcc_json_printer_uint64_field@@Base+0x3f>
  40744a:	jmp    4073b6 <flatcc_json_printer_uint64_field@@Base+0xf6>
  40744f:	nop

0000000000407450 <flatcc_json_printer_int8_field@@Base>:
  407450:	endbr64 
  407454:	push   r14
  407456:	lea    eax,[rdx+rdx*1+0x4]
  40745a:	push   r13
  40745c:	push   r12
  40745e:	push   rbp
  40745f:	push   rbx
  407460:	cmp    eax,DWORD PTR [rsi+0x10]
  407463:	jge    407570 <flatcc_json_printer_int8_field@@Base+0x120>
  407469:	mov    rdx,QWORD PTR [rsi+0x8]
  40746d:	movzx  eax,WORD PTR [rdx+rax*1]
  407471:	test   ax,ax
  407474:	je     407570 <flatcc_json_printer_int8_field@@Base+0x120>
  40747a:	add    rax,QWORD PTR [rsi]
  40747d:	je     407570 <flatcc_json_printer_int8_field@@Base+0x120>
  407483:	movzx  r13d,BYTE PTR [rax]
  407487:	cmp    r9b,r13b
  40748a:	je     4075f0 <flatcc_json_printer_int8_field@@Base+0x1a0>
  407490:	mov    eax,DWORD PTR [rsi+0x18]
  407493:	lea    edx,[rax+0x1]
  407496:	mov    DWORD PTR [rsi+0x18],edx
  407499:	mov    rdx,QWORD PTR [rdi+0x28]
  40749d:	test   eax,eax
  40749f:	je     4074b0 <flatcc_json_printer_int8_field@@Base+0x60>
  4074a1:	lea    rax,[rdx+0x1]
  4074a5:	mov    QWORD PTR [rdi+0x28],rax
  4074a9:	mov    BYTE PTR [rdx],0x2c
  4074ac:	mov    rdx,QWORD PTR [rdi+0x28]
  4074b0:	cmp    BYTE PTR [rdi+0x31],0x0
  4074b4:	mov    r14,rcx
  4074b7:	mov    rbx,rdi
  4074ba:	movsxd rbp,r8d
  4074bd:	jne    407598 <flatcc_json_printer_int8_field@@Base+0x148>
  4074c3:	cmp    QWORD PTR [rdi+0x20],rdx
  4074c7:	ja     4074d2 <flatcc_json_printer_int8_field@@Base+0x82>
  4074c9:	xor    esi,esi
  4074cb:	call   QWORD PTR [rdi+0x48]
  4074ce:	mov    rdx,QWORD PTR [rbx+0x28]
  4074d2:	mov    BYTE PTR [rdx],0x22
  4074d5:	xor    edi,edi
  4074d7:	mov    rdx,rbp
  4074da:	cmp    BYTE PTR [rbx+0x32],0x0
  4074de:	sete   dil
  4074e2:	add    rdi,QWORD PTR [rbx+0x28]
  4074e6:	lea    rax,[rdi+rbp*1]
  4074ea:	mov    QWORD PTR [rbx+0x28],rdi
  4074ee:	mov    rsi,r14
  4074f1:	cmp    QWORD PTR [rbx+0x20],rax
  4074f5:	jbe    407580 <flatcc_json_printer_int8_field@@Base+0x130>
  4074fb:	call   403240 <memcpy@plt>
  407500:	add    rbp,QWORD PTR [rbx+0x28]
  407504:	mov    QWORD PTR [rbx+0x28],rbp
  407508:	mov    BYTE PTR [rbp+0x0],0x22
  40750c:	xor    eax,eax
  40750e:	movsx  r8d,r13b
  407512:	cmp    BYTE PTR [rbx+0x32],0x0
  407516:	sete   al
  407519:	add    rax,QWORD PTR [rbx+0x28]
  40751d:	lea    rdx,[rax+0x1]
  407521:	mov    QWORD PTR [rbx+0x28],rdx
  407525:	mov    BYTE PTR [rax],0x3a
  407528:	xor    esi,esi
  40752a:	mov    rax,QWORD PTR [rbx+0x28]
  40752e:	mov    BYTE PTR [rax],0x20
  407531:	cmp    BYTE PTR [rbx+0x31],0x0
  407535:	setne  sil
  407539:	add    rsi,QWORD PTR [rbx+0x28]
  40753d:	mov    QWORD PTR [rbx+0x28],rsi
  407541:	shr    r8d,0x1f
  407545:	test   r13b,r13b
  407548:	jns    407553 <flatcc_json_printer_int8_field@@Base+0x103>
  40754a:	mov    BYTE PTR [rsi],0x2d
  40754d:	neg    r13d
  407550:	inc    rsi
  407553:	movzx  edi,r13b
  407557:	call   405590 <test_print@@Base+0x10c0>
  40755c:	add    r8d,eax
  40755f:	movsxd r8,r8d
  407562:	add    QWORD PTR [rbx+0x28],r8
  407566:	pop    rbx
  407567:	pop    rbp
  407568:	pop    r12
  40756a:	pop    r13
  40756c:	pop    r14
  40756e:	ret    
  40756f:	nop
  407570:	cmp    BYTE PTR [rdi+0x35],0x0
  407574:	je     407566 <flatcc_json_printer_int8_field@@Base+0x116>
  407576:	mov    r13d,r9d
  407579:	jmp    407490 <flatcc_json_printer_int8_field@@Base+0x40>
  40757e:	xchg   ax,ax
  407580:	mov    rdi,rbx
  407583:	call   4052c0 <test_print@@Base+0xdf0>
  407588:	mov    rbp,QWORD PTR [rbx+0x28]
  40758c:	jmp    407508 <flatcc_json_printer_int8_field@@Base+0xb8>
  407591:	nop    DWORD PTR [rax+0x0]
  407598:	lea    rax,[rdx+0x1]
  40759c:	mov    QWORD PTR [rdi+0x28],rax
  4075a0:	mov    BYTE PTR [rdx],0xa
  4075a3:	movzx  edx,BYTE PTR [rdi+0x31]
  4075a7:	imul   edx,DWORD PTR [rdi+0x38]
  4075ab:	mov    rdi,QWORD PTR [rdi+0x28]
  4075af:	movsxd r12,edx
  4075b2:	lea    rax,[rdi+r12*1]
  4075b6:	cmp    QWORD PTR [rbx+0x20],rax
  4075ba:	jae    4075d0 <flatcc_json_printer_int8_field@@Base+0x180>
  4075bc:	mov    rsi,r12
  4075bf:	mov    rdi,rbx
  4075c2:	call   405350 <test_print@@Base+0xe80>
  4075c7:	mov    rdx,QWORD PTR [rbx+0x28]
  4075cb:	jmp    4074d2 <flatcc_json_printer_int8_field@@Base+0x82>
  4075d0:	mov    rdx,r12
  4075d3:	mov    esi,0x20
  4075d8:	call   403200 <memset@plt>
  4075dd:	mov    rdx,QWORD PTR [rbx+0x28]
  4075e1:	add    rdx,r12
  4075e4:	mov    QWORD PTR [rbx+0x28],rdx
  4075e8:	jmp    4074d2 <flatcc_json_printer_int8_field@@Base+0x82>
  4075ed:	nop    DWORD PTR [rax]
  4075f0:	cmp    BYTE PTR [rdi+0x34],0x0
  4075f4:	je     407490 <flatcc_json_printer_int8_field@@Base+0x40>
  4075fa:	jmp    407566 <flatcc_json_printer_int8_field@@Base+0x116>
  4075ff:	nop

0000000000407600 <flatcc_json_printer_int16_field@@Base>:
  407600:	endbr64 
  407604:	push   r14
  407606:	lea    eax,[rdx+rdx*1+0x4]
  40760a:	push   r13
  40760c:	push   r12
  40760e:	push   rbp
  40760f:	push   rbx
  407610:	cmp    eax,DWORD PTR [rsi+0x10]
  407613:	jge    407728 <flatcc_json_printer_int16_field@@Base+0x128>
  407619:	mov    rdx,QWORD PTR [rsi+0x8]
  40761d:	movzx  eax,WORD PTR [rdx+rax*1]
  407621:	test   ax,ax
  407624:	je     407728 <flatcc_json_printer_int16_field@@Base+0x128>
  40762a:	add    rax,QWORD PTR [rsi]
  40762d:	je     407728 <flatcc_json_printer_int16_field@@Base+0x128>
  407633:	movzx  r13d,WORD PTR [rax]
  407637:	cmp    r9w,r13w
  40763b:	je     4077b0 <flatcc_json_printer_int16_field@@Base+0x1b0>
  407641:	mov    eax,DWORD PTR [rsi+0x18]
  407644:	lea    edx,[rax+0x1]
  407647:	mov    DWORD PTR [rsi+0x18],edx
  40764a:	mov    rdx,QWORD PTR [rdi+0x28]
  40764e:	test   eax,eax
  407650:	je     407661 <flatcc_json_printer_int16_field@@Base+0x61>
  407652:	lea    rax,[rdx+0x1]
  407656:	mov    QWORD PTR [rdi+0x28],rax
  40765a:	mov    BYTE PTR [rdx],0x2c
  40765d:	mov    rdx,QWORD PTR [rdi+0x28]
  407661:	cmp    BYTE PTR [rdi+0x31],0x0
  407665:	mov    r14,rcx
  407668:	mov    rbx,rdi
  40766b:	movsxd rbp,r8d
  40766e:	jne    407758 <flatcc_json_printer_int16_field@@Base+0x158>
  407674:	cmp    QWORD PTR [rdi+0x20],rdx
  407678:	ja     407683 <flatcc_json_printer_int16_field@@Base+0x83>
  40767a:	xor    esi,esi
  40767c:	call   QWORD PTR [rdi+0x48]
  40767f:	mov    rdx,QWORD PTR [rbx+0x28]
  407683:	mov    BYTE PTR [rdx],0x22
  407686:	xor    edi,edi
  407688:	mov    rdx,rbp
  40768b:	cmp    BYTE PTR [rbx+0x32],0x0
  40768f:	sete   dil
  407693:	add    rdi,QWORD PTR [rbx+0x28]
  407697:	lea    rax,[rdi+rbp*1]
  40769b:	mov    QWORD PTR [rbx+0x28],rdi
  40769f:	mov    rsi,r14
  4076a2:	cmp    QWORD PTR [rbx+0x20],rax
  4076a6:	jbe    407740 <flatcc_json_printer_int16_field@@Base+0x140>
  4076ac:	call   403240 <memcpy@plt>
  4076b1:	add    rbp,QWORD PTR [rbx+0x28]
  4076b5:	mov    QWORD PTR [rbx+0x28],rbp
  4076b9:	mov    BYTE PTR [rbp+0x0],0x22
  4076bd:	xor    eax,eax
  4076bf:	movsx  r11d,r13w
  4076c3:	cmp    BYTE PTR [rbx+0x32],0x0
  4076c7:	sete   al
  4076ca:	add    rax,QWORD PTR [rbx+0x28]
  4076ce:	lea    rdx,[rax+0x1]
  4076d2:	mov    QWORD PTR [rbx+0x28],rdx
  4076d6:	mov    BYTE PTR [rax],0x3a
  4076d9:	xor    esi,esi
  4076db:	mov    rax,QWORD PTR [rbx+0x28]
  4076df:	mov    BYTE PTR [rax],0x20
  4076e2:	cmp    BYTE PTR [rbx+0x31],0x0
  4076e6:	setne  sil
  4076ea:	add    rsi,QWORD PTR [rbx+0x28]
  4076ee:	mov    QWORD PTR [rbx+0x28],rsi
  4076f2:	shr    r11d,0x1f
  4076f6:	test   r13w,r13w
  4076fa:	jns    407705 <flatcc_json_printer_int16_field@@Base+0x105>
  4076fc:	mov    BYTE PTR [rsi],0x2d
  4076ff:	neg    r13d
  407702:	inc    rsi
  407705:	movzx  edi,r13w
  407709:	call   404820 <test_print@@Base+0x350>
  40770e:	add    r11d,eax
  407711:	movsxd r11,r11d
  407714:	add    QWORD PTR [rbx+0x28],r11
  407718:	pop    rbx
  407719:	pop    rbp
  40771a:	pop    r12
  40771c:	pop    r13
  40771e:	pop    r14
  407720:	ret    
  407721:	nop    DWORD PTR [rax+0x0]
  407728:	cmp    BYTE PTR [rdi+0x35],0x0
  40772c:	je     407718 <flatcc_json_printer_int16_field@@Base+0x118>
  40772e:	mov    r13d,r9d
  407731:	jmp    407641 <flatcc_json_printer_int16_field@@Base+0x41>
  407736:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407740:	mov    rdi,rbx
  407743:	call   4052c0 <test_print@@Base+0xdf0>
  407748:	mov    rbp,QWORD PTR [rbx+0x28]
  40774c:	jmp    4076b9 <flatcc_json_printer_int16_field@@Base+0xb9>
  407751:	nop    DWORD PTR [rax+0x0]
  407758:	lea    rax,[rdx+0x1]
  40775c:	mov    QWORD PTR [rdi+0x28],rax
  407760:	mov    BYTE PTR [rdx],0xa
  407763:	movzx  edx,BYTE PTR [rdi+0x31]
  407767:	imul   edx,DWORD PTR [rdi+0x38]
  40776b:	mov    rdi,QWORD PTR [rdi+0x28]
  40776f:	movsxd r12,edx
  407772:	lea    rax,[rdi+r12*1]
  407776:	cmp    QWORD PTR [rbx+0x20],rax
  40777a:	jae    407790 <flatcc_json_printer_int16_field@@Base+0x190>
  40777c:	mov    rsi,r12
  40777f:	mov    rdi,rbx
  407782:	call   405350 <test_print@@Base+0xe80>
  407787:	mov    rdx,QWORD PTR [rbx+0x28]
  40778b:	jmp    407683 <flatcc_json_printer_int16_field@@Base+0x83>
  407790:	mov    rdx,r12
  407793:	mov    esi,0x20
  407798:	call   403200 <memset@plt>
  40779d:	mov    rdx,QWORD PTR [rbx+0x28]
  4077a1:	add    rdx,r12
  4077a4:	mov    QWORD PTR [rbx+0x28],rdx
  4077a8:	jmp    407683 <flatcc_json_printer_int16_field@@Base+0x83>
  4077ad:	nop    DWORD PTR [rax]
  4077b0:	cmp    BYTE PTR [rdi+0x34],0x0
  4077b4:	je     407641 <flatcc_json_printer_int16_field@@Base+0x41>
  4077ba:	jmp    407718 <flatcc_json_printer_int16_field@@Base+0x118>
  4077bf:	nop

00000000004077c0 <flatcc_json_printer_int32_field@@Base>:
  4077c0:	endbr64 
  4077c4:	push   r14
  4077c6:	lea    eax,[rdx+rdx*1+0x4]
  4077ca:	push   r13
  4077cc:	push   r12
  4077ce:	push   rbp
  4077cf:	push   rbx
  4077d0:	cmp    eax,DWORD PTR [rsi+0x10]
  4077d3:	jge    4078e0 <flatcc_json_printer_int32_field@@Base+0x120>
  4077d9:	mov    rdx,QWORD PTR [rsi+0x8]
  4077dd:	movzx  eax,WORD PTR [rdx+rax*1]
  4077e1:	test   ax,ax
  4077e4:	je     4078e0 <flatcc_json_printer_int32_field@@Base+0x120>
  4077ea:	add    rax,QWORD PTR [rsi]
  4077ed:	je     4078e0 <flatcc_json_printer_int32_field@@Base+0x120>
  4077f3:	mov    r13d,DWORD PTR [rax]
  4077f6:	cmp    r9d,r13d
  4077f9:	je     407960 <flatcc_json_printer_int32_field@@Base+0x1a0>
  4077ff:	mov    eax,DWORD PTR [rsi+0x18]
  407802:	lea    edx,[rax+0x1]
  407805:	mov    DWORD PTR [rsi+0x18],edx
  407808:	mov    rdx,QWORD PTR [rdi+0x28]
  40780c:	test   eax,eax
  40780e:	je     40781f <flatcc_json_printer_int32_field@@Base+0x5f>
  407810:	lea    rax,[rdx+0x1]
  407814:	mov    QWORD PTR [rdi+0x28],rax
  407818:	mov    BYTE PTR [rdx],0x2c
  40781b:	mov    rdx,QWORD PTR [rdi+0x28]
  40781f:	cmp    BYTE PTR [rdi+0x31],0x0
  407823:	mov    r14,rcx
  407826:	mov    rbx,rdi
  407829:	movsxd rbp,r8d
  40782c:	jne    407908 <flatcc_json_printer_int32_field@@Base+0x148>
  407832:	cmp    QWORD PTR [rdi+0x20],rdx
  407836:	ja     407841 <flatcc_json_printer_int32_field@@Base+0x81>
  407838:	xor    esi,esi
  40783a:	call   QWORD PTR [rdi+0x48]
  40783d:	mov    rdx,QWORD PTR [rbx+0x28]
  407841:	mov    BYTE PTR [rdx],0x22
  407844:	xor    edi,edi
  407846:	mov    rdx,rbp
  407849:	cmp    BYTE PTR [rbx+0x32],0x0
  40784d:	sete   dil
  407851:	add    rdi,QWORD PTR [rbx+0x28]
  407855:	lea    rax,[rdi+rbp*1]
  407859:	mov    QWORD PTR [rbx+0x28],rdi
  40785d:	mov    rsi,r14
  407860:	cmp    QWORD PTR [rbx+0x20],rax
  407864:	jbe    4078f0 <flatcc_json_printer_int32_field@@Base+0x130>
  40786a:	call   403240 <memcpy@plt>
  40786f:	add    rbp,QWORD PTR [rbx+0x28]
  407873:	mov    QWORD PTR [rbx+0x28],rbp
  407877:	mov    BYTE PTR [rbp+0x0],0x22
  40787b:	xor    eax,eax
  40787d:	mov    ebp,r13d
  407880:	cmp    BYTE PTR [rbx+0x32],0x0
  407884:	sete   al
  407887:	add    rax,QWORD PTR [rbx+0x28]
  40788b:	lea    rdx,[rax+0x1]
  40788f:	mov    QWORD PTR [rbx+0x28],rdx
  407893:	mov    BYTE PTR [rax],0x3a
  407896:	xor    esi,esi
  407898:	mov    rax,QWORD PTR [rbx+0x28]
  40789c:	mov    BYTE PTR [rax],0x20
  40789f:	cmp    BYTE PTR [rbx+0x31],0x0
  4078a3:	setne  sil
  4078a7:	add    rsi,QWORD PTR [rbx+0x28]
  4078ab:	mov    QWORD PTR [rbx+0x28],rsi
  4078af:	shr    ebp,0x1f
  4078b2:	test   r13d,r13d
  4078b5:	jns    4078c0 <flatcc_json_printer_int32_field@@Base+0x100>
  4078b7:	mov    BYTE PTR [rsi],0x2d
  4078ba:	neg    r13d
  4078bd:	inc    rsi
  4078c0:	mov    edi,r13d
  4078c3:	call   404950 <test_print@@Base+0x480>
  4078c8:	add    ebp,eax
  4078ca:	movsxd rbp,ebp
  4078cd:	add    QWORD PTR [rbx+0x28],rbp
  4078d1:	pop    rbx
  4078d2:	pop    rbp
  4078d3:	pop    r12
  4078d5:	pop    r13
  4078d7:	pop    r14
  4078d9:	ret    
  4078da:	nop    WORD PTR [rax+rax*1+0x0]
  4078e0:	cmp    BYTE PTR [rdi+0x35],0x0
  4078e4:	je     4078d1 <flatcc_json_printer_int32_field@@Base+0x111>
  4078e6:	mov    r13d,r9d
  4078e9:	jmp    4077ff <flatcc_json_printer_int32_field@@Base+0x3f>
  4078ee:	xchg   ax,ax
  4078f0:	mov    rdi,rbx
  4078f3:	call   4052c0 <test_print@@Base+0xdf0>
  4078f8:	mov    rbp,QWORD PTR [rbx+0x28]
  4078fc:	jmp    407877 <flatcc_json_printer_int32_field@@Base+0xb7>
  407901:	nop    DWORD PTR [rax+0x0]
  407908:	lea    rax,[rdx+0x1]
  40790c:	mov    QWORD PTR [rdi+0x28],rax
  407910:	mov    BYTE PTR [rdx],0xa
  407913:	movzx  edx,BYTE PTR [rdi+0x31]
  407917:	imul   edx,DWORD PTR [rdi+0x38]
  40791b:	mov    rdi,QWORD PTR [rdi+0x28]
  40791f:	movsxd r12,edx
  407922:	lea    rax,[rdi+r12*1]
  407926:	cmp    QWORD PTR [rbx+0x20],rax
  40792a:	jae    407940 <flatcc_json_printer_int32_field@@Base+0x180>
  40792c:	mov    rsi,r12
  40792f:	mov    rdi,rbx
  407932:	call   405350 <test_print@@Base+0xe80>
  407937:	mov    rdx,QWORD PTR [rbx+0x28]
  40793b:	jmp    407841 <flatcc_json_printer_int32_field@@Base+0x81>
  407940:	mov    rdx,r12
  407943:	mov    esi,0x20
  407948:	call   403200 <memset@plt>
  40794d:	mov    rdx,QWORD PTR [rbx+0x28]
  407951:	add    rdx,r12
  407954:	mov    QWORD PTR [rbx+0x28],rdx
  407958:	jmp    407841 <flatcc_json_printer_int32_field@@Base+0x81>
  40795d:	nop    DWORD PTR [rax]
  407960:	cmp    BYTE PTR [rdi+0x34],0x0
  407964:	je     4077ff <flatcc_json_printer_int32_field@@Base+0x3f>
  40796a:	jmp    4078d1 <flatcc_json_printer_int32_field@@Base+0x111>
  40796f:	nop

0000000000407970 <flatcc_json_printer_int64_field@@Base>:
  407970:	endbr64 
  407974:	push   r14
  407976:	lea    eax,[rdx+rdx*1+0x4]
  40797a:	push   r13
  40797c:	push   r12
  40797e:	push   rbp
  40797f:	push   rbx
  407980:	cmp    eax,DWORD PTR [rsi+0x10]
  407983:	jge    407a90 <flatcc_json_printer_int64_field@@Base+0x120>
  407989:	mov    rdx,QWORD PTR [rsi+0x8]
  40798d:	movzx  eax,WORD PTR [rdx+rax*1]
  407991:	test   ax,ax
  407994:	je     407a90 <flatcc_json_printer_int64_field@@Base+0x120>
  40799a:	add    rax,QWORD PTR [rsi]
  40799d:	je     407a90 <flatcc_json_printer_int64_field@@Base+0x120>
  4079a3:	mov    r13,QWORD PTR [rax]
  4079a6:	cmp    r9,r13
  4079a9:	je     407b10 <flatcc_json_printer_int64_field@@Base+0x1a0>
  4079af:	mov    eax,DWORD PTR [rsi+0x18]
  4079b2:	lea    edx,[rax+0x1]
  4079b5:	mov    DWORD PTR [rsi+0x18],edx
  4079b8:	mov    rdx,QWORD PTR [rdi+0x28]
  4079bc:	test   eax,eax
  4079be:	je     4079cf <flatcc_json_printer_int64_field@@Base+0x5f>
  4079c0:	lea    rax,[rdx+0x1]
  4079c4:	mov    QWORD PTR [rdi+0x28],rax
  4079c8:	mov    BYTE PTR [rdx],0x2c
  4079cb:	mov    rdx,QWORD PTR [rdi+0x28]
  4079cf:	cmp    BYTE PTR [rdi+0x31],0x0
  4079d3:	mov    r14,rcx
  4079d6:	mov    rbx,rdi
  4079d9:	movsxd rbp,r8d
  4079dc:	jne    407ab8 <flatcc_json_printer_int64_field@@Base+0x148>
  4079e2:	cmp    QWORD PTR [rdi+0x20],rdx
  4079e6:	ja     4079f1 <flatcc_json_printer_int64_field@@Base+0x81>
  4079e8:	xor    esi,esi
  4079ea:	call   QWORD PTR [rdi+0x48]
  4079ed:	mov    rdx,QWORD PTR [rbx+0x28]
  4079f1:	mov    BYTE PTR [rdx],0x22
  4079f4:	xor    edi,edi
  4079f6:	mov    rdx,rbp
  4079f9:	cmp    BYTE PTR [rbx+0x32],0x0
  4079fd:	sete   dil
  407a01:	add    rdi,QWORD PTR [rbx+0x28]
  407a05:	lea    rax,[rdi+rbp*1]
  407a09:	mov    QWORD PTR [rbx+0x28],rdi
  407a0d:	mov    rsi,r14
  407a10:	cmp    QWORD PTR [rbx+0x20],rax
  407a14:	jbe    407aa0 <flatcc_json_printer_int64_field@@Base+0x130>
  407a1a:	call   403240 <memcpy@plt>
  407a1f:	add    rbp,QWORD PTR [rbx+0x28]
  407a23:	mov    QWORD PTR [rbx+0x28],rbp
  407a27:	mov    BYTE PTR [rbp+0x0],0x22
  407a2b:	xor    eax,eax
  407a2d:	mov    rbp,r13
  407a30:	cmp    BYTE PTR [rbx+0x32],0x0
  407a34:	sete   al
  407a37:	add    rax,QWORD PTR [rbx+0x28]
  407a3b:	lea    rdx,[rax+0x1]
  407a3f:	mov    QWORD PTR [rbx+0x28],rdx
  407a43:	mov    BYTE PTR [rax],0x3a
  407a46:	xor    esi,esi
  407a48:	mov    rax,QWORD PTR [rbx+0x28]
  407a4c:	mov    BYTE PTR [rax],0x20
  407a4f:	cmp    BYTE PTR [rbx+0x31],0x0
  407a53:	setne  sil
  407a57:	add    rsi,QWORD PTR [rbx+0x28]
  407a5b:	mov    QWORD PTR [rbx+0x28],rsi
  407a5f:	shr    rbp,0x3f
  407a63:	test   r13,r13
  407a66:	jns    407a71 <flatcc_json_printer_int64_field@@Base+0x101>
  407a68:	mov    BYTE PTR [rsi],0x2d
  407a6b:	neg    r13
  407a6e:	inc    rsi
  407a71:	mov    rdi,r13
  407a74:	call   404c00 <test_print@@Base+0x730>
  407a79:	add    eax,ebp
  407a7b:	cdqe   
  407a7d:	add    QWORD PTR [rbx+0x28],rax
  407a81:	pop    rbx
  407a82:	pop    rbp
  407a83:	pop    r12
  407a85:	pop    r13
  407a87:	pop    r14
  407a89:	ret    
  407a8a:	nop    WORD PTR [rax+rax*1+0x0]
  407a90:	cmp    BYTE PTR [rdi+0x35],0x0
  407a94:	je     407a81 <flatcc_json_printer_int64_field@@Base+0x111>
  407a96:	mov    r13,r9
  407a99:	jmp    4079af <flatcc_json_printer_int64_field@@Base+0x3f>
  407a9e:	xchg   ax,ax
  407aa0:	mov    rdi,rbx
  407aa3:	call   4052c0 <test_print@@Base+0xdf0>
  407aa8:	mov    rbp,QWORD PTR [rbx+0x28]
  407aac:	jmp    407a27 <flatcc_json_printer_int64_field@@Base+0xb7>
  407ab1:	nop    DWORD PTR [rax+0x0]
  407ab8:	lea    rax,[rdx+0x1]
  407abc:	mov    QWORD PTR [rdi+0x28],rax
  407ac0:	mov    BYTE PTR [rdx],0xa
  407ac3:	movzx  edx,BYTE PTR [rdi+0x31]
  407ac7:	imul   edx,DWORD PTR [rdi+0x38]
  407acb:	mov    rdi,QWORD PTR [rdi+0x28]
  407acf:	movsxd r12,edx
  407ad2:	lea    rax,[rdi+r12*1]
  407ad6:	cmp    QWORD PTR [rbx+0x20],rax
  407ada:	jae    407af0 <flatcc_json_printer_int64_field@@Base+0x180>
  407adc:	mov    rsi,r12
  407adf:	mov    rdi,rbx
  407ae2:	call   405350 <test_print@@Base+0xe80>
  407ae7:	mov    rdx,QWORD PTR [rbx+0x28]
  407aeb:	jmp    4079f1 <flatcc_json_printer_int64_field@@Base+0x81>
  407af0:	mov    rdx,r12
  407af3:	mov    esi,0x20
  407af8:	call   403200 <memset@plt>
  407afd:	mov    rdx,QWORD PTR [rbx+0x28]
  407b01:	add    rdx,r12
  407b04:	mov    QWORD PTR [rbx+0x28],rdx
  407b08:	jmp    4079f1 <flatcc_json_printer_int64_field@@Base+0x81>
  407b0d:	nop    DWORD PTR [rax]
  407b10:	cmp    BYTE PTR [rdi+0x34],0x0
  407b14:	je     4079af <flatcc_json_printer_int64_field@@Base+0x3f>
  407b1a:	jmp    407a81 <flatcc_json_printer_int64_field@@Base+0x111>
  407b1f:	nop

0000000000407b20 <flatcc_json_printer_bool_field@@Base>:
  407b20:	endbr64 
  407b24:	push   r14
  407b26:	lea    eax,[rdx+rdx*1+0x4]
  407b2a:	push   r13
  407b2c:	push   r12
  407b2e:	push   rbp
  407b2f:	push   rbx
  407b30:	cmp    eax,DWORD PTR [rsi+0x10]
  407b33:	jge    407c28 <flatcc_json_printer_bool_field@@Base+0x108>
  407b39:	mov    rdx,QWORD PTR [rsi+0x8]
  407b3d:	movzx  eax,WORD PTR [rdx+rax*1]
  407b41:	test   ax,ax
  407b44:	je     407c28 <flatcc_json_printer_bool_field@@Base+0x108>
  407b4a:	add    rax,QWORD PTR [rsi]
  407b4d:	je     407c28 <flatcc_json_printer_bool_field@@Base+0x108>
  407b53:	movzx  r13d,BYTE PTR [rax]
  407b57:	cmp    r9b,r13b
  407b5a:	je     407cb0 <flatcc_json_printer_bool_field@@Base+0x190>
  407b60:	mov    eax,DWORD PTR [rsi+0x18]
  407b63:	lea    edx,[rax+0x1]
  407b66:	mov    DWORD PTR [rsi+0x18],edx
  407b69:	mov    rdx,QWORD PTR [rdi+0x28]
  407b6d:	test   eax,eax
  407b6f:	je     407b80 <flatcc_json_printer_bool_field@@Base+0x60>
  407b71:	lea    rax,[rdx+0x1]
  407b75:	mov    QWORD PTR [rdi+0x28],rax
  407b79:	mov    BYTE PTR [rdx],0x2c
  407b7c:	mov    rdx,QWORD PTR [rdi+0x28]
  407b80:	cmp    BYTE PTR [rdi+0x31],0x0
  407b84:	mov    r14,rcx
  407b87:	mov    rbx,rdi
  407b8a:	movsxd rbp,r8d
  407b8d:	jne    407c50 <flatcc_json_printer_bool_field@@Base+0x130>
  407b93:	cmp    QWORD PTR [rdi+0x20],rdx
  407b97:	ja     407ba2 <flatcc_json_printer_bool_field@@Base+0x82>
  407b99:	xor    esi,esi
  407b9b:	call   QWORD PTR [rdi+0x48]
  407b9e:	mov    rdx,QWORD PTR [rbx+0x28]
  407ba2:	mov    BYTE PTR [rdx],0x22
  407ba5:	xor    edi,edi
  407ba7:	mov    rdx,rbp
  407baa:	cmp    BYTE PTR [rbx+0x32],0x0
  407bae:	sete   dil
  407bb2:	add    rdi,QWORD PTR [rbx+0x28]
  407bb6:	lea    rax,[rdi+rbp*1]
  407bba:	mov    QWORD PTR [rbx+0x28],rdi
  407bbe:	mov    rsi,r14
  407bc1:	cmp    QWORD PTR [rbx+0x20],rax
  407bc5:	jbe    407c40 <flatcc_json_printer_bool_field@@Base+0x120>
  407bc7:	call   403240 <memcpy@plt>
  407bcc:	add    rbp,QWORD PTR [rbx+0x28]
  407bd0:	mov    QWORD PTR [rbx+0x28],rbp
  407bd4:	mov    BYTE PTR [rbp+0x0],0x22
  407bd8:	xor    eax,eax
  407bda:	movzx  edi,r13b
  407bde:	cmp    BYTE PTR [rbx+0x32],0x0
  407be2:	sete   al
  407be5:	add    rax,QWORD PTR [rbx+0x28]
  407be9:	lea    rdx,[rax+0x1]
  407bed:	mov    QWORD PTR [rbx+0x28],rdx
  407bf1:	mov    BYTE PTR [rax],0x3a
  407bf4:	xor    esi,esi
  407bf6:	mov    rax,QWORD PTR [rbx+0x28]
  407bfa:	mov    BYTE PTR [rax],0x20
  407bfd:	cmp    BYTE PTR [rbx+0x31],0x0
  407c01:	setne  sil
  407c05:	add    rsi,QWORD PTR [rbx+0x28]
  407c09:	mov    QWORD PTR [rbx+0x28],rsi
  407c0d:	call   405560 <test_print@@Base+0x1090>
  407c12:	cdqe   
  407c14:	add    QWORD PTR [rbx+0x28],rax
  407c18:	pop    rbx
  407c19:	pop    rbp
  407c1a:	pop    r12
  407c1c:	pop    r13
  407c1e:	pop    r14
  407c20:	ret    
  407c21:	nop    DWORD PTR [rax+0x0]
  407c28:	cmp    BYTE PTR [rdi+0x35],0x0
  407c2c:	je     407c18 <flatcc_json_printer_bool_field@@Base+0xf8>
  407c2e:	mov    r13d,r9d
  407c31:	jmp    407b60 <flatcc_json_printer_bool_field@@Base+0x40>
  407c36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407c40:	mov    rdi,rbx
  407c43:	call   4052c0 <test_print@@Base+0xdf0>
  407c48:	mov    rbp,QWORD PTR [rbx+0x28]
  407c4c:	jmp    407bd4 <flatcc_json_printer_bool_field@@Base+0xb4>
  407c4e:	xchg   ax,ax
  407c50:	lea    rax,[rdx+0x1]
  407c54:	mov    QWORD PTR [rdi+0x28],rax
  407c58:	mov    BYTE PTR [rdx],0xa
  407c5b:	movzx  edx,BYTE PTR [rdi+0x31]
  407c5f:	imul   edx,DWORD PTR [rdi+0x38]
  407c63:	mov    rdi,QWORD PTR [rdi+0x28]
  407c67:	movsxd r12,edx
  407c6a:	lea    rax,[rdi+r12*1]
  407c6e:	cmp    QWORD PTR [rbx+0x20],rax
  407c72:	jae    407c90 <flatcc_json_printer_bool_field@@Base+0x170>
  407c74:	mov    rsi,r12
  407c77:	mov    rdi,rbx
  407c7a:	call   405350 <test_print@@Base+0xe80>
  407c7f:	mov    rdx,QWORD PTR [rbx+0x28]
  407c83:	jmp    407ba2 <flatcc_json_printer_bool_field@@Base+0x82>
  407c88:	nop    DWORD PTR [rax+rax*1+0x0]
  407c90:	mov    rdx,r12
  407c93:	mov    esi,0x20
  407c98:	call   403200 <memset@plt>
  407c9d:	mov    rdx,QWORD PTR [rbx+0x28]
  407ca1:	add    rdx,r12
  407ca4:	mov    QWORD PTR [rbx+0x28],rdx
  407ca8:	jmp    407ba2 <flatcc_json_printer_bool_field@@Base+0x82>
  407cad:	nop    DWORD PTR [rax]
  407cb0:	cmp    BYTE PTR [rdi+0x34],0x0
  407cb4:	je     407b60 <flatcc_json_printer_bool_field@@Base+0x40>
  407cba:	jmp    407c18 <flatcc_json_printer_bool_field@@Base+0xf8>
  407cbf:	nop

0000000000407cc0 <flatcc_json_printer_float_field@@Base>:
  407cc0:	endbr64 
  407cc4:	push   r13
  407cc6:	lea    eax,[rdx+rdx*1+0x4]
  407cca:	push   r12
  407ccc:	push   rbp
  407ccd:	push   rbx
  407cce:	sub    rsp,0x18
  407cd2:	cmp    eax,DWORD PTR [rsi+0x10]
  407cd5:	jge    407d10 <flatcc_json_printer_float_field@@Base+0x50>
  407cd7:	mov    rdx,QWORD PTR [rsi+0x8]
  407cdb:	movzx  eax,WORD PTR [rdx+rax*1]
  407cdf:	test   ax,ax
  407ce2:	je     407d10 <flatcc_json_printer_float_field@@Base+0x50>
  407ce4:	add    rax,QWORD PTR [rsi]
  407ce7:	je     407d10 <flatcc_json_printer_float_field@@Base+0x50>
  407ce9:	vmovss xmm2,DWORD PTR [rax]
  407ced:	vucomiss xmm0,xmm2
  407cf1:	vmovss DWORD PTR [rsp+0xc],xmm2
  407cf7:	jp     407d1c <flatcc_json_printer_float_field@@Base+0x5c>
  407cf9:	jne    407d1c <flatcc_json_printer_float_field@@Base+0x5c>
  407cfb:	cmp    BYTE PTR [rdi+0x34],0x0
  407cff:	je     407d1c <flatcc_json_printer_float_field@@Base+0x5c>
  407d01:	add    rsp,0x18
  407d05:	pop    rbx
  407d06:	pop    rbp
  407d07:	pop    r12
  407d09:	pop    r13
  407d0b:	ret    
  407d0c:	nop    DWORD PTR [rax+0x0]
  407d10:	cmp    BYTE PTR [rdi+0x35],0x0
  407d14:	je     407d01 <flatcc_json_printer_float_field@@Base+0x41>
  407d16:	vmovss DWORD PTR [rsp+0xc],xmm0
  407d1c:	mov    eax,DWORD PTR [rsi+0x18]
  407d1f:	lea    edx,[rax+0x1]
  407d22:	mov    DWORD PTR [rsi+0x18],edx
  407d25:	mov    rdx,QWORD PTR [rdi+0x28]
  407d29:	test   eax,eax
  407d2b:	je     407d3c <flatcc_json_printer_float_field@@Base+0x7c>
  407d2d:	lea    rax,[rdx+0x1]
  407d31:	mov    QWORD PTR [rdi+0x28],rax
  407d35:	mov    BYTE PTR [rdx],0x2c
  407d38:	mov    rdx,QWORD PTR [rdi+0x28]
  407d3c:	cmp    BYTE PTR [rdi+0x31],0x0
  407d40:	mov    r13,rcx
  407d43:	mov    rbx,rdi
  407d46:	movsxd rbp,r8d
  407d49:	jne    407e00 <flatcc_json_printer_float_field@@Base+0x140>
  407d4f:	cmp    QWORD PTR [rdi+0x20],rdx
  407d53:	ja     407d5e <flatcc_json_printer_float_field@@Base+0x9e>
  407d55:	xor    esi,esi
  407d57:	call   QWORD PTR [rdi+0x48]
  407d5a:	mov    rdx,QWORD PTR [rbx+0x28]
  407d5e:	mov    BYTE PTR [rdx],0x22
  407d61:	xor    edi,edi
  407d63:	mov    rdx,rbp
  407d66:	cmp    BYTE PTR [rbx+0x32],0x0
  407d6a:	sete   dil
  407d6e:	add    rdi,QWORD PTR [rbx+0x28]
  407d72:	lea    rax,[rdi+rbp*1]
  407d76:	mov    QWORD PTR [rbx+0x28],rdi
  407d7a:	mov    rsi,r13
  407d7d:	cmp    QWORD PTR [rbx+0x20],rax
  407d81:	jbe    407de8 <flatcc_json_printer_float_field@@Base+0x128>
  407d83:	call   403240 <memcpy@plt>
  407d88:	add    rbp,QWORD PTR [rbx+0x28]
  407d8c:	mov    QWORD PTR [rbx+0x28],rbp
  407d90:	mov    BYTE PTR [rbp+0x0],0x22
  407d94:	xor    eax,eax
  407d96:	vxorpd xmm0,xmm0,xmm0
  407d9a:	cmp    BYTE PTR [rbx+0x32],0x0
  407d9e:	sete   al
  407da1:	add    rax,QWORD PTR [rbx+0x28]
  407da5:	lea    rdx,[rax+0x1]
  407da9:	mov    QWORD PTR [rbx+0x28],rdx
  407dad:	mov    BYTE PTR [rax],0x3a
  407db0:	xor    edi,edi
  407db2:	vcvtss2sd xmm0,xmm0,DWORD PTR [rsp+0xc]
  407db8:	mov    rax,QWORD PTR [rbx+0x28]
  407dbc:	mov    BYTE PTR [rax],0x20
  407dbf:	cmp    BYTE PTR [rbx+0x31],0x0
  407dc3:	setne  dil
  407dc7:	add    rdi,QWORD PTR [rbx+0x28]
  407dcb:	mov    QWORD PTR [rbx+0x28],rdi
  407dcf:	call   405780 <test_print@@Base+0x12b0>
  407dd4:	cdqe   
  407dd6:	add    QWORD PTR [rbx+0x28],rax
  407dda:	add    rsp,0x18
  407dde:	pop    rbx
  407ddf:	pop    rbp
  407de0:	pop    r12
  407de2:	pop    r13
  407de4:	ret    
  407de5:	nop    DWORD PTR [rax]
  407de8:	mov    rdi,rbx
  407deb:	call   4052c0 <test_print@@Base+0xdf0>
  407df0:	mov    rbp,QWORD PTR [rbx+0x28]
  407df4:	jmp    407d90 <flatcc_json_printer_float_field@@Base+0xd0>
  407df6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407e00:	lea    rax,[rdx+0x1]
  407e04:	mov    QWORD PTR [rdi+0x28],rax
  407e08:	mov    BYTE PTR [rdx],0xa
  407e0b:	movzx  edx,BYTE PTR [rdi+0x31]
  407e0f:	imul   edx,DWORD PTR [rdi+0x38]
  407e13:	mov    rdi,QWORD PTR [rdi+0x28]
  407e17:	movsxd r12,edx
  407e1a:	lea    rax,[rdi+r12*1]
  407e1e:	cmp    QWORD PTR [rbx+0x20],rax
  407e22:	jae    407e40 <flatcc_json_printer_float_field@@Base+0x180>
  407e24:	mov    rsi,r12
  407e27:	mov    rdi,rbx
  407e2a:	call   405350 <test_print@@Base+0xe80>
  407e2f:	mov    rdx,QWORD PTR [rbx+0x28]
  407e33:	jmp    407d5e <flatcc_json_printer_float_field@@Base+0x9e>
  407e38:	nop    DWORD PTR [rax+rax*1+0x0]
  407e40:	mov    rdx,r12
  407e43:	mov    esi,0x20
  407e48:	call   403200 <memset@plt>
  407e4d:	mov    rdx,QWORD PTR [rbx+0x28]
  407e51:	add    rdx,r12
  407e54:	mov    QWORD PTR [rbx+0x28],rdx
  407e58:	jmp    407d5e <flatcc_json_printer_float_field@@Base+0x9e>
  407e5d:	nop    DWORD PTR [rax]

0000000000407e60 <flatcc_json_printer_double_field@@Base>:
  407e60:	endbr64 
  407e64:	push   r13
  407e66:	lea    eax,[rdx+rdx*1+0x4]
  407e6a:	push   r12
  407e6c:	push   rbp
  407e6d:	push   rbx
  407e6e:	sub    rsp,0x18
  407e72:	cmp    eax,DWORD PTR [rsi+0x10]
  407e75:	jge    407eb0 <flatcc_json_printer_double_field@@Base+0x50>
  407e77:	mov    rdx,QWORD PTR [rsi+0x8]
  407e7b:	movzx  eax,WORD PTR [rdx+rax*1]
  407e7f:	test   ax,ax
  407e82:	je     407eb0 <flatcc_json_printer_double_field@@Base+0x50>
  407e84:	add    rax,QWORD PTR [rsi]
  407e87:	je     407eb0 <flatcc_json_printer_double_field@@Base+0x50>
  407e89:	vmovsd xmm1,QWORD PTR [rax]
  407e8d:	vucomisd xmm0,xmm1
  407e91:	vmovsd QWORD PTR [rsp+0x8],xmm1
  407e97:	jp     407ebc <flatcc_json_printer_double_field@@Base+0x5c>
  407e99:	jne    407ebc <flatcc_json_printer_double_field@@Base+0x5c>
  407e9b:	cmp    BYTE PTR [rdi+0x34],0x0
  407e9f:	je     407ebc <flatcc_json_printer_double_field@@Base+0x5c>
  407ea1:	add    rsp,0x18
  407ea5:	pop    rbx
  407ea6:	pop    rbp
  407ea7:	pop    r12
  407ea9:	pop    r13
  407eab:	ret    
  407eac:	nop    DWORD PTR [rax+0x0]
  407eb0:	cmp    BYTE PTR [rdi+0x35],0x0
  407eb4:	je     407ea1 <flatcc_json_printer_double_field@@Base+0x41>
  407eb6:	vmovsd QWORD PTR [rsp+0x8],xmm0
  407ebc:	mov    eax,DWORD PTR [rsi+0x18]
  407ebf:	lea    edx,[rax+0x1]
  407ec2:	mov    DWORD PTR [rsi+0x18],edx
  407ec5:	mov    rdx,QWORD PTR [rdi+0x28]
  407ec9:	test   eax,eax
  407ecb:	je     407edc <flatcc_json_printer_double_field@@Base+0x7c>
  407ecd:	lea    rax,[rdx+0x1]
  407ed1:	mov    QWORD PTR [rdi+0x28],rax
  407ed5:	mov    BYTE PTR [rdx],0x2c
  407ed8:	mov    rdx,QWORD PTR [rdi+0x28]
  407edc:	cmp    BYTE PTR [rdi+0x31],0x0
  407ee0:	mov    r13,rcx
  407ee3:	mov    rbx,rdi
  407ee6:	movsxd rbp,r8d
  407ee9:	jne    407fa0 <flatcc_json_printer_double_field@@Base+0x140>
  407eef:	cmp    QWORD PTR [rdi+0x20],rdx
  407ef3:	ja     407efe <flatcc_json_printer_double_field@@Base+0x9e>
  407ef5:	xor    esi,esi
  407ef7:	call   QWORD PTR [rdi+0x48]
  407efa:	mov    rdx,QWORD PTR [rbx+0x28]
  407efe:	mov    BYTE PTR [rdx],0x22
  407f01:	xor    edi,edi
  407f03:	mov    rdx,rbp
  407f06:	cmp    BYTE PTR [rbx+0x32],0x0
  407f0a:	sete   dil
  407f0e:	add    rdi,QWORD PTR [rbx+0x28]
  407f12:	lea    rax,[rdi+rbp*1]
  407f16:	mov    QWORD PTR [rbx+0x28],rdi
  407f1a:	mov    rsi,r13
  407f1d:	cmp    QWORD PTR [rbx+0x20],rax
  407f21:	jbe    407f88 <flatcc_json_printer_double_field@@Base+0x128>
  407f23:	call   403240 <memcpy@plt>
  407f28:	add    rbp,QWORD PTR [rbx+0x28]
  407f2c:	mov    QWORD PTR [rbx+0x28],rbp
  407f30:	mov    BYTE PTR [rbp+0x0],0x22
  407f34:	xor    eax,eax
  407f36:	vmovsd xmm0,QWORD PTR [rsp+0x8]
  407f3c:	cmp    BYTE PTR [rbx+0x32],0x0
  407f40:	sete   al
  407f43:	add    rax,QWORD PTR [rbx+0x28]
  407f47:	lea    rdx,[rax+0x1]
  407f4b:	mov    QWORD PTR [rbx+0x28],rdx
  407f4f:	mov    BYTE PTR [rax],0x3a
  407f52:	xor    edi,edi
  407f54:	mov    rax,QWORD PTR [rbx+0x28]
  407f58:	mov    BYTE PTR [rax],0x20
  407f5b:	cmp    BYTE PTR [rbx+0x31],0x0
  407f5f:	setne  dil
  407f63:	add    rdi,QWORD PTR [rbx+0x28]
  407f67:	mov    QWORD PTR [rbx+0x28],rdi
  407f6b:	call   405780 <test_print@@Base+0x12b0>
  407f70:	cdqe   
  407f72:	add    QWORD PTR [rbx+0x28],rax
  407f76:	add    rsp,0x18
  407f7a:	pop    rbx
  407f7b:	pop    rbp
  407f7c:	pop    r12
  407f7e:	pop    r13
  407f80:	ret    
  407f81:	nop    DWORD PTR [rax+0x0]
  407f88:	mov    rdi,rbx
  407f8b:	call   4052c0 <test_print@@Base+0xdf0>
  407f90:	mov    rbp,QWORD PTR [rbx+0x28]
  407f94:	jmp    407f30 <flatcc_json_printer_double_field@@Base+0xd0>
  407f96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407fa0:	lea    rax,[rdx+0x1]
  407fa4:	mov    QWORD PTR [rdi+0x28],rax
  407fa8:	mov    BYTE PTR [rdx],0xa
  407fab:	movzx  edx,BYTE PTR [rdi+0x31]
  407faf:	imul   edx,DWORD PTR [rdi+0x38]
  407fb3:	mov    rdi,QWORD PTR [rdi+0x28]
  407fb7:	movsxd r12,edx
  407fba:	lea    rax,[rdi+r12*1]
  407fbe:	cmp    QWORD PTR [rbx+0x20],rax
  407fc2:	jae    407fe0 <flatcc_json_printer_double_field@@Base+0x180>
  407fc4:	mov    rsi,r12
  407fc7:	mov    rdi,rbx
  407fca:	call   405350 <test_print@@Base+0xe80>
  407fcf:	mov    rdx,QWORD PTR [rbx+0x28]
  407fd3:	jmp    407efe <flatcc_json_printer_double_field@@Base+0x9e>
  407fd8:	nop    DWORD PTR [rax+rax*1+0x0]
  407fe0:	mov    rdx,r12
  407fe3:	mov    esi,0x20
  407fe8:	call   403200 <memset@plt>
  407fed:	mov    rdx,QWORD PTR [rbx+0x28]
  407ff1:	add    rdx,r12
  407ff4:	mov    QWORD PTR [rbx+0x28],rdx
  407ff8:	jmp    407efe <flatcc_json_printer_double_field@@Base+0x9e>
  407ffd:	nop    DWORD PTR [rax]

0000000000408000 <flatcc_json_printer_uint8_enum_field@@Base>:
  408000:	endbr64 
  408004:	push   r15
  408006:	lea    eax,[rdx+rdx*1+0x4]
  40800a:	push   r14
  40800c:	push   r13
  40800e:	push   r12
  408010:	push   rbp
  408011:	push   rbx
  408012:	sub    rsp,0x8
  408016:	mov    r13,QWORD PTR [rsp+0x40]
  40801b:	cmp    eax,DWORD PTR [rsi+0x10]
  40801e:	jge    408120 <flatcc_json_printer_uint8_enum_field@@Base+0x120>
  408024:	mov    rdx,QWORD PTR [rsi+0x8]
  408028:	movzx  eax,WORD PTR [rdx+rax*1]
  40802c:	test   ax,ax
  40802f:	je     408120 <flatcc_json_printer_uint8_enum_field@@Base+0x120>
  408035:	add    rax,QWORD PTR [rsi]
  408038:	je     408120 <flatcc_json_printer_uint8_enum_field@@Base+0x120>
  40803e:	movzx  r12d,BYTE PTR [rax]
  408042:	cmp    r9b,r12b
  408045:	je     4081c0 <flatcc_json_printer_uint8_enum_field@@Base+0x1c0>
  40804b:	mov    eax,DWORD PTR [rsi+0x18]
  40804e:	lea    edx,[rax+0x1]
  408051:	mov    DWORD PTR [rsi+0x18],edx
  408054:	mov    rdx,QWORD PTR [rdi+0x28]
  408058:	test   eax,eax
  40805a:	je     40806b <flatcc_json_printer_uint8_enum_field@@Base+0x6b>
  40805c:	lea    rax,[rdx+0x1]
  408060:	mov    QWORD PTR [rdi+0x28],rax
  408064:	mov    BYTE PTR [rdx],0x2c
  408067:	mov    rdx,QWORD PTR [rdi+0x28]
  40806b:	cmp    BYTE PTR [rdi+0x31],0x0
  40806f:	mov    r15,rcx
  408072:	mov    rbx,rdi
  408075:	movsxd rbp,r8d
  408078:	jne    408168 <flatcc_json_printer_uint8_enum_field@@Base+0x168>
  40807e:	cmp    QWORD PTR [rdi+0x20],rdx
  408082:	ja     40808d <flatcc_json_printer_uint8_enum_field@@Base+0x8d>
  408084:	xor    esi,esi
  408086:	call   QWORD PTR [rdi+0x48]
  408089:	mov    rdx,QWORD PTR [rbx+0x28]
  40808d:	mov    BYTE PTR [rdx],0x22
  408090:	xor    edi,edi
  408092:	mov    rdx,rbp
  408095:	cmp    BYTE PTR [rbx+0x32],0x0
  408099:	sete   dil
  40809d:	add    rdi,QWORD PTR [rbx+0x28]
  4080a1:	lea    rax,[rdi+rbp*1]
  4080a5:	mov    QWORD PTR [rbx+0x28],rdi
  4080a9:	mov    rsi,r15
  4080ac:	cmp    QWORD PTR [rbx+0x20],rax
  4080b0:	jbe    408150 <flatcc_json_printer_uint8_enum_field@@Base+0x150>
  4080b6:	call   403240 <memcpy@plt>
  4080bb:	add    rbp,QWORD PTR [rbx+0x28]
  4080bf:	mov    QWORD PTR [rbx+0x28],rbp
  4080c3:	mov    BYTE PTR [rbp+0x0],0x22
  4080c7:	xor    eax,eax
  4080c9:	cmp    BYTE PTR [rbx+0x32],0x0
  4080cd:	sete   al
  4080d0:	add    rax,QWORD PTR [rbx+0x28]
  4080d4:	lea    rdx,[rax+0x1]
  4080d8:	mov    QWORD PTR [rbx+0x28],rdx
  4080dc:	mov    BYTE PTR [rax],0x3a
  4080df:	xor    esi,esi
  4080e1:	mov    rax,QWORD PTR [rbx+0x28]
  4080e5:	mov    BYTE PTR [rax],0x20
  4080e8:	cmp    BYTE PTR [rbx+0x31],0x0
  4080ec:	setne  sil
  4080f0:	add    rsi,QWORD PTR [rbx+0x28]
  4080f4:	cmp    BYTE PTR [rbx+0x33],0x0
  4080f8:	mov    QWORD PTR [rbx+0x28],rsi
  4080fc:	jne    408130 <flatcc_json_printer_uint8_enum_field@@Base+0x130>
  4080fe:	add    rsp,0x8
  408102:	mov    rdi,rbx
  408105:	pop    rbx
  408106:	pop    rbp
  408107:	movzx  esi,r12b
  40810b:	pop    r12
  40810d:	mov    rax,r13
  408110:	pop    r13
  408112:	pop    r14
  408114:	pop    r15
  408116:	jmp    rax
  408118:	nop    DWORD PTR [rax+rax*1+0x0]
  408120:	cmp    BYTE PTR [rdi+0x35],0x0
  408124:	je     40813f <flatcc_json_printer_uint8_enum_field@@Base+0x13f>
  408126:	mov    r12d,r9d
  408129:	jmp    40804b <flatcc_json_printer_uint8_enum_field@@Base+0x4b>
  40812e:	xchg   ax,ax
  408130:	movzx  edi,r12b
  408134:	call   405590 <test_print@@Base+0x10c0>
  408139:	cdqe   
  40813b:	add    QWORD PTR [rbx+0x28],rax
  40813f:	add    rsp,0x8
  408143:	pop    rbx
  408144:	pop    rbp
  408145:	pop    r12
  408147:	pop    r13
  408149:	pop    r14
  40814b:	pop    r15
  40814d:	ret    
  40814e:	xchg   ax,ax
  408150:	mov    rdi,rbx
  408153:	call   4052c0 <test_print@@Base+0xdf0>
  408158:	mov    rbp,QWORD PTR [rbx+0x28]
  40815c:	jmp    4080c3 <flatcc_json_printer_uint8_enum_field@@Base+0xc3>
  408161:	nop    DWORD PTR [rax+0x0]
  408168:	lea    rax,[rdx+0x1]
  40816c:	mov    QWORD PTR [rdi+0x28],rax
  408170:	mov    BYTE PTR [rdx],0xa
  408173:	movzx  edx,BYTE PTR [rdi+0x31]
  408177:	imul   edx,DWORD PTR [rdi+0x38]
  40817b:	mov    rdi,QWORD PTR [rdi+0x28]
  40817f:	movsxd r14,edx
  408182:	lea    rax,[rdi+r14*1]
  408186:	cmp    QWORD PTR [rbx+0x20],rax
  40818a:	jae    4081a0 <flatcc_json_printer_uint8_enum_field@@Base+0x1a0>
  40818c:	mov    rsi,r14
  40818f:	mov    rdi,rbx
  408192:	call   405350 <test_print@@Base+0xe80>
  408197:	mov    rdx,QWORD PTR [rbx+0x28]
  40819b:	jmp    40808d <flatcc_json_printer_uint8_enum_field@@Base+0x8d>
  4081a0:	mov    rdx,r14
  4081a3:	mov    esi,0x20
  4081a8:	call   403200 <memset@plt>
  4081ad:	mov    rdx,QWORD PTR [rbx+0x28]
  4081b1:	add    rdx,r14
  4081b4:	mov    QWORD PTR [rbx+0x28],rdx
  4081b8:	jmp    40808d <flatcc_json_printer_uint8_enum_field@@Base+0x8d>
  4081bd:	nop    DWORD PTR [rax]
  4081c0:	cmp    BYTE PTR [rdi+0x34],0x0
  4081c4:	je     40804b <flatcc_json_printer_uint8_enum_field@@Base+0x4b>
  4081ca:	jmp    40813f <flatcc_json_printer_uint8_enum_field@@Base+0x13f>
  4081cf:	nop

00000000004081d0 <flatcc_json_printer_uint16_enum_field@@Base>:
  4081d0:	endbr64 
  4081d4:	push   r15
  4081d6:	lea    eax,[rdx+rdx*1+0x4]
  4081da:	push   r14
  4081dc:	push   r13
  4081de:	push   r12
  4081e0:	push   rbp
  4081e1:	push   rbx
  4081e2:	sub    rsp,0x8
  4081e6:	mov    r13,QWORD PTR [rsp+0x40]
  4081eb:	cmp    eax,DWORD PTR [rsi+0x10]
  4081ee:	jge    4082f0 <flatcc_json_printer_uint16_enum_field@@Base+0x120>
  4081f4:	mov    rdx,QWORD PTR [rsi+0x8]
  4081f8:	movzx  eax,WORD PTR [rdx+rax*1]
  4081fc:	test   ax,ax
  4081ff:	je     4082f0 <flatcc_json_printer_uint16_enum_field@@Base+0x120>
  408205:	add    rax,QWORD PTR [rsi]
  408208:	je     4082f0 <flatcc_json_printer_uint16_enum_field@@Base+0x120>
  40820e:	movzx  r12d,WORD PTR [rax]
  408212:	cmp    r9w,r12w
  408216:	je     408390 <flatcc_json_printer_uint16_enum_field@@Base+0x1c0>
  40821c:	mov    eax,DWORD PTR [rsi+0x18]
  40821f:	lea    edx,[rax+0x1]
  408222:	mov    DWORD PTR [rsi+0x18],edx
  408225:	mov    rdx,QWORD PTR [rdi+0x28]
  408229:	test   eax,eax
  40822b:	je     40823c <flatcc_json_printer_uint16_enum_field@@Base+0x6c>
  40822d:	lea    rax,[rdx+0x1]
  408231:	mov    QWORD PTR [rdi+0x28],rax
  408235:	mov    BYTE PTR [rdx],0x2c
  408238:	mov    rdx,QWORD PTR [rdi+0x28]
  40823c:	cmp    BYTE PTR [rdi+0x31],0x0
  408240:	mov    r15,rcx
  408243:	mov    rbx,rdi
  408246:	movsxd rbp,r8d
  408249:	jne    408338 <flatcc_json_printer_uint16_enum_field@@Base+0x168>
  40824f:	cmp    QWORD PTR [rdi+0x20],rdx
  408253:	ja     40825e <flatcc_json_printer_uint16_enum_field@@Base+0x8e>
  408255:	xor    esi,esi
  408257:	call   QWORD PTR [rdi+0x48]
  40825a:	mov    rdx,QWORD PTR [rbx+0x28]
  40825e:	mov    BYTE PTR [rdx],0x22
  408261:	xor    edi,edi
  408263:	mov    rdx,rbp
  408266:	cmp    BYTE PTR [rbx+0x32],0x0
  40826a:	sete   dil
  40826e:	add    rdi,QWORD PTR [rbx+0x28]
  408272:	lea    rax,[rdi+rbp*1]
  408276:	mov    QWORD PTR [rbx+0x28],rdi
  40827a:	mov    rsi,r15
  40827d:	cmp    QWORD PTR [rbx+0x20],rax
  408281:	jbe    408320 <flatcc_json_printer_uint16_enum_field@@Base+0x150>
  408287:	call   403240 <memcpy@plt>
  40828c:	add    rbp,QWORD PTR [rbx+0x28]
  408290:	mov    QWORD PTR [rbx+0x28],rbp
  408294:	mov    BYTE PTR [rbp+0x0],0x22
  408298:	xor    eax,eax
  40829a:	cmp    BYTE PTR [rbx+0x32],0x0
  40829e:	sete   al
  4082a1:	add    rax,QWORD PTR [rbx+0x28]
  4082a5:	lea    rdx,[rax+0x1]
  4082a9:	mov    QWORD PTR [rbx+0x28],rdx
  4082ad:	mov    BYTE PTR [rax],0x3a
  4082b0:	xor    esi,esi
  4082b2:	mov    rax,QWORD PTR [rbx+0x28]
  4082b6:	mov    BYTE PTR [rax],0x20
  4082b9:	cmp    BYTE PTR [rbx+0x31],0x0
  4082bd:	setne  sil
  4082c1:	add    rsi,QWORD PTR [rbx+0x28]
  4082c5:	cmp    BYTE PTR [rbx+0x33],0x0
  4082c9:	mov    QWORD PTR [rbx+0x28],rsi
  4082cd:	jne    408300 <flatcc_json_printer_uint16_enum_field@@Base+0x130>
  4082cf:	add    rsp,0x8
  4082d3:	mov    rdi,rbx
  4082d6:	pop    rbx
  4082d7:	pop    rbp
  4082d8:	movzx  esi,r12w
  4082dc:	pop    r12
  4082de:	mov    rax,r13
  4082e1:	pop    r13
  4082e3:	pop    r14
  4082e5:	pop    r15
  4082e7:	jmp    rax
  4082e9:	nop    DWORD PTR [rax+0x0]
  4082f0:	cmp    BYTE PTR [rdi+0x35],0x0
  4082f4:	je     40830f <flatcc_json_printer_uint16_enum_field@@Base+0x13f>
  4082f6:	mov    r12d,r9d
  4082f9:	jmp    40821c <flatcc_json_printer_uint16_enum_field@@Base+0x4c>
  4082fe:	xchg   ax,ax
  408300:	movzx  edi,r12w
  408304:	call   404820 <test_print@@Base+0x350>
  408309:	cdqe   
  40830b:	add    QWORD PTR [rbx+0x28],rax
  40830f:	add    rsp,0x8
  408313:	pop    rbx
  408314:	pop    rbp
  408315:	pop    r12
  408317:	pop    r13
  408319:	pop    r14
  40831b:	pop    r15
  40831d:	ret    
  40831e:	xchg   ax,ax
  408320:	mov    rdi,rbx
  408323:	call   4052c0 <test_print@@Base+0xdf0>
  408328:	mov    rbp,QWORD PTR [rbx+0x28]
  40832c:	jmp    408294 <flatcc_json_printer_uint16_enum_field@@Base+0xc4>
  408331:	nop    DWORD PTR [rax+0x0]
  408338:	lea    rax,[rdx+0x1]
  40833c:	mov    QWORD PTR [rdi+0x28],rax
  408340:	mov    BYTE PTR [rdx],0xa
  408343:	movzx  edx,BYTE PTR [rdi+0x31]
  408347:	imul   edx,DWORD PTR [rdi+0x38]
  40834b:	mov    rdi,QWORD PTR [rdi+0x28]
  40834f:	movsxd r14,edx
  408352:	lea    rax,[rdi+r14*1]
  408356:	cmp    QWORD PTR [rbx+0x20],rax
  40835a:	jae    408370 <flatcc_json_printer_uint16_enum_field@@Base+0x1a0>
  40835c:	mov    rsi,r14
  40835f:	mov    rdi,rbx
  408362:	call   405350 <test_print@@Base+0xe80>
  408367:	mov    rdx,QWORD PTR [rbx+0x28]
  40836b:	jmp    40825e <flatcc_json_printer_uint16_enum_field@@Base+0x8e>
  408370:	mov    rdx,r14
  408373:	mov    esi,0x20
  408378:	call   403200 <memset@plt>
  40837d:	mov    rdx,QWORD PTR [rbx+0x28]
  408381:	add    rdx,r14
  408384:	mov    QWORD PTR [rbx+0x28],rdx
  408388:	jmp    40825e <flatcc_json_printer_uint16_enum_field@@Base+0x8e>
  40838d:	nop    DWORD PTR [rax]
  408390:	cmp    BYTE PTR [rdi+0x34],0x0
  408394:	je     40821c <flatcc_json_printer_uint16_enum_field@@Base+0x4c>
  40839a:	jmp    40830f <flatcc_json_printer_uint16_enum_field@@Base+0x13f>
  40839f:	nop

00000000004083a0 <flatcc_json_printer_uint32_enum_field@@Base>:
  4083a0:	endbr64 
  4083a4:	push   r15
  4083a6:	lea    eax,[rdx+rdx*1+0x4]
  4083aa:	push   r14
  4083ac:	push   r13
  4083ae:	push   r12
  4083b0:	push   rbp
  4083b1:	push   rbx
  4083b2:	sub    rsp,0x8
  4083b6:	mov    r13,QWORD PTR [rsp+0x40]
  4083bb:	cmp    eax,DWORD PTR [rsi+0x10]
  4083be:	jge    4084c0 <flatcc_json_printer_uint32_enum_field@@Base+0x120>
  4083c4:	mov    rdx,QWORD PTR [rsi+0x8]
  4083c8:	movzx  eax,WORD PTR [rdx+rax*1]
  4083cc:	test   ax,ax
  4083cf:	je     4084c0 <flatcc_json_printer_uint32_enum_field@@Base+0x120>
  4083d5:	add    rax,QWORD PTR [rsi]
  4083d8:	je     4084c0 <flatcc_json_printer_uint32_enum_field@@Base+0x120>
  4083de:	mov    r12d,DWORD PTR [rax]
  4083e1:	cmp    r9d,r12d
  4083e4:	je     408560 <flatcc_json_printer_uint32_enum_field@@Base+0x1c0>
  4083ea:	mov    eax,DWORD PTR [rsi+0x18]
  4083ed:	lea    edx,[rax+0x1]
  4083f0:	mov    DWORD PTR [rsi+0x18],edx
  4083f3:	mov    rdx,QWORD PTR [rdi+0x28]
  4083f7:	test   eax,eax
  4083f9:	je     40840a <flatcc_json_printer_uint32_enum_field@@Base+0x6a>
  4083fb:	lea    rax,[rdx+0x1]
  4083ff:	mov    QWORD PTR [rdi+0x28],rax
  408403:	mov    BYTE PTR [rdx],0x2c
  408406:	mov    rdx,QWORD PTR [rdi+0x28]
  40840a:	cmp    BYTE PTR [rdi+0x31],0x0
  40840e:	mov    r15,rcx
  408411:	mov    rbx,rdi
  408414:	movsxd rbp,r8d
  408417:	jne    408508 <flatcc_json_printer_uint32_enum_field@@Base+0x168>
  40841d:	cmp    QWORD PTR [rdi+0x20],rdx
  408421:	ja     40842c <flatcc_json_printer_uint32_enum_field@@Base+0x8c>
  408423:	xor    esi,esi
  408425:	call   QWORD PTR [rdi+0x48]
  408428:	mov    rdx,QWORD PTR [rbx+0x28]
  40842c:	mov    BYTE PTR [rdx],0x22
  40842f:	xor    edi,edi
  408431:	mov    rdx,rbp
  408434:	cmp    BYTE PTR [rbx+0x32],0x0
  408438:	sete   dil
  40843c:	add    rdi,QWORD PTR [rbx+0x28]
  408440:	lea    rax,[rdi+rbp*1]
  408444:	mov    QWORD PTR [rbx+0x28],rdi
  408448:	mov    rsi,r15
  40844b:	cmp    QWORD PTR [rbx+0x20],rax
  40844f:	jbe    4084f0 <flatcc_json_printer_uint32_enum_field@@Base+0x150>
  408455:	call   403240 <memcpy@plt>
  40845a:	add    rbp,QWORD PTR [rbx+0x28]
  40845e:	mov    QWORD PTR [rbx+0x28],rbp
  408462:	mov    BYTE PTR [rbp+0x0],0x22
  408466:	xor    eax,eax
  408468:	cmp    BYTE PTR [rbx+0x32],0x0
  40846c:	sete   al
  40846f:	add    rax,QWORD PTR [rbx+0x28]
  408473:	lea    rdx,[rax+0x1]
  408477:	mov    QWORD PTR [rbx+0x28],rdx
  40847b:	mov    BYTE PTR [rax],0x3a
  40847e:	xor    esi,esi
  408480:	mov    rax,QWORD PTR [rbx+0x28]
  408484:	mov    BYTE PTR [rax],0x20
  408487:	cmp    BYTE PTR [rbx+0x31],0x0
  40848b:	setne  sil
  40848f:	add    rsi,QWORD PTR [rbx+0x28]
  408493:	cmp    BYTE PTR [rbx+0x33],0x0
  408497:	mov    QWORD PTR [rbx+0x28],rsi
  40849b:	jne    4084d0 <flatcc_json_printer_uint32_enum_field@@Base+0x130>
  40849d:	add    rsp,0x8
  4084a1:	mov    rdi,rbx
  4084a4:	pop    rbx
  4084a5:	pop    rbp
  4084a6:	mov    esi,r12d
  4084a9:	pop    r12
  4084ab:	mov    rax,r13
  4084ae:	pop    r13
  4084b0:	pop    r14
  4084b2:	pop    r15
  4084b4:	jmp    rax
  4084b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4084c0:	cmp    BYTE PTR [rdi+0x35],0x0
  4084c4:	je     4084de <flatcc_json_printer_uint32_enum_field@@Base+0x13e>
  4084c6:	mov    r12d,r9d
  4084c9:	jmp    4083ea <flatcc_json_printer_uint32_enum_field@@Base+0x4a>
  4084ce:	xchg   ax,ax
  4084d0:	mov    edi,r12d
  4084d3:	call   404950 <test_print@@Base+0x480>
  4084d8:	cdqe   
  4084da:	add    QWORD PTR [rbx+0x28],rax
  4084de:	add    rsp,0x8
  4084e2:	pop    rbx
  4084e3:	pop    rbp
  4084e4:	pop    r12
  4084e6:	pop    r13
  4084e8:	pop    r14
  4084ea:	pop    r15
  4084ec:	ret    
  4084ed:	nop    DWORD PTR [rax]
  4084f0:	mov    rdi,rbx
  4084f3:	call   4052c0 <test_print@@Base+0xdf0>
  4084f8:	mov    rbp,QWORD PTR [rbx+0x28]
  4084fc:	jmp    408462 <flatcc_json_printer_uint32_enum_field@@Base+0xc2>
  408501:	nop    DWORD PTR [rax+0x0]
  408508:	lea    rax,[rdx+0x1]
  40850c:	mov    QWORD PTR [rdi+0x28],rax
  408510:	mov    BYTE PTR [rdx],0xa
  408513:	movzx  edx,BYTE PTR [rdi+0x31]
  408517:	imul   edx,DWORD PTR [rdi+0x38]
  40851b:	mov    rdi,QWORD PTR [rdi+0x28]
  40851f:	movsxd r14,edx
  408522:	lea    rax,[rdi+r14*1]
  408526:	cmp    QWORD PTR [rbx+0x20],rax
  40852a:	jae    408540 <flatcc_json_printer_uint32_enum_field@@Base+0x1a0>
  40852c:	mov    rsi,r14
  40852f:	mov    rdi,rbx
  408532:	call   405350 <test_print@@Base+0xe80>
  408537:	mov    rdx,QWORD PTR [rbx+0x28]
  40853b:	jmp    40842c <flatcc_json_printer_uint32_enum_field@@Base+0x8c>
  408540:	mov    rdx,r14
  408543:	mov    esi,0x20
  408548:	call   403200 <memset@plt>
  40854d:	mov    rdx,QWORD PTR [rbx+0x28]
  408551:	add    rdx,r14
  408554:	mov    QWORD PTR [rbx+0x28],rdx
  408558:	jmp    40842c <flatcc_json_printer_uint32_enum_field@@Base+0x8c>
  40855d:	nop    DWORD PTR [rax]
  408560:	cmp    BYTE PTR [rdi+0x34],0x0
  408564:	je     4083ea <flatcc_json_printer_uint32_enum_field@@Base+0x4a>
  40856a:	jmp    4084de <flatcc_json_printer_uint32_enum_field@@Base+0x13e>
  40856f:	nop

0000000000408570 <flatcc_json_printer_uint64_enum_field@@Base>:
  408570:	endbr64 
  408574:	push   r15
  408576:	lea    eax,[rdx+rdx*1+0x4]
  40857a:	push   r14
  40857c:	push   r13
  40857e:	push   r12
  408580:	push   rbp
  408581:	push   rbx
  408582:	sub    rsp,0x8
  408586:	mov    r13,QWORD PTR [rsp+0x40]
  40858b:	cmp    eax,DWORD PTR [rsi+0x10]
  40858e:	jge    408690 <flatcc_json_printer_uint64_enum_field@@Base+0x120>
  408594:	mov    rdx,QWORD PTR [rsi+0x8]
  408598:	movzx  eax,WORD PTR [rdx+rax*1]
  40859c:	test   ax,ax
  40859f:	je     408690 <flatcc_json_printer_uint64_enum_field@@Base+0x120>
  4085a5:	add    rax,QWORD PTR [rsi]
  4085a8:	je     408690 <flatcc_json_printer_uint64_enum_field@@Base+0x120>
  4085ae:	mov    r12,QWORD PTR [rax]
  4085b1:	cmp    r9,r12
  4085b4:	je     408730 <flatcc_json_printer_uint64_enum_field@@Base+0x1c0>
  4085ba:	mov    eax,DWORD PTR [rsi+0x18]
  4085bd:	lea    edx,[rax+0x1]
  4085c0:	mov    DWORD PTR [rsi+0x18],edx
  4085c3:	mov    rdx,QWORD PTR [rdi+0x28]
  4085c7:	test   eax,eax
  4085c9:	je     4085da <flatcc_json_printer_uint64_enum_field@@Base+0x6a>
  4085cb:	lea    rax,[rdx+0x1]
  4085cf:	mov    QWORD PTR [rdi+0x28],rax
  4085d3:	mov    BYTE PTR [rdx],0x2c
  4085d6:	mov    rdx,QWORD PTR [rdi+0x28]
  4085da:	cmp    BYTE PTR [rdi+0x31],0x0
  4085de:	mov    r15,rcx
  4085e1:	mov    rbx,rdi
  4085e4:	movsxd rbp,r8d
  4085e7:	jne    4086d8 <flatcc_json_printer_uint64_enum_field@@Base+0x168>
  4085ed:	cmp    QWORD PTR [rdi+0x20],rdx
  4085f1:	ja     4085fc <flatcc_json_printer_uint64_enum_field@@Base+0x8c>
  4085f3:	xor    esi,esi
  4085f5:	call   QWORD PTR [rdi+0x48]
  4085f8:	mov    rdx,QWORD PTR [rbx+0x28]
  4085fc:	mov    BYTE PTR [rdx],0x22
  4085ff:	xor    edi,edi
  408601:	mov    rdx,rbp
  408604:	cmp    BYTE PTR [rbx+0x32],0x0
  408608:	sete   dil
  40860c:	add    rdi,QWORD PTR [rbx+0x28]
  408610:	lea    rax,[rdi+rbp*1]
  408614:	mov    QWORD PTR [rbx+0x28],rdi
  408618:	mov    rsi,r15
  40861b:	cmp    QWORD PTR [rbx+0x20],rax
  40861f:	jbe    4086c0 <flatcc_json_printer_uint64_enum_field@@Base+0x150>
  408625:	call   403240 <memcpy@plt>
  40862a:	add    rbp,QWORD PTR [rbx+0x28]
  40862e:	mov    QWORD PTR [rbx+0x28],rbp
  408632:	mov    BYTE PTR [rbp+0x0],0x22
  408636:	xor    eax,eax
  408638:	cmp    BYTE PTR [rbx+0x32],0x0
  40863c:	sete   al
  40863f:	add    rax,QWORD PTR [rbx+0x28]
  408643:	lea    rdx,[rax+0x1]
  408647:	mov    QWORD PTR [rbx+0x28],rdx
  40864b:	mov    BYTE PTR [rax],0x3a
  40864e:	xor    esi,esi
  408650:	mov    rax,QWORD PTR [rbx+0x28]
  408654:	mov    BYTE PTR [rax],0x20
  408657:	cmp    BYTE PTR [rbx+0x31],0x0
  40865b:	setne  sil
  40865f:	add    rsi,QWORD PTR [rbx+0x28]
  408663:	cmp    BYTE PTR [rbx+0x33],0x0
  408667:	mov    QWORD PTR [rbx+0x28],rsi
  40866b:	jne    4086a0 <flatcc_json_printer_uint64_enum_field@@Base+0x130>
  40866d:	add    rsp,0x8
  408671:	mov    rdi,rbx
  408674:	pop    rbx
  408675:	pop    rbp
  408676:	mov    rsi,r12
  408679:	pop    r12
  40867b:	mov    rax,r13
  40867e:	pop    r13
  408680:	pop    r14
  408682:	pop    r15
  408684:	jmp    rax
  408686:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408690:	cmp    BYTE PTR [rdi+0x35],0x0
  408694:	je     4086ae <flatcc_json_printer_uint64_enum_field@@Base+0x13e>
  408696:	mov    r12,r9
  408699:	jmp    4085ba <flatcc_json_printer_uint64_enum_field@@Base+0x4a>
  40869e:	xchg   ax,ax
  4086a0:	mov    rdi,r12
  4086a3:	call   404c00 <test_print@@Base+0x730>
  4086a8:	cdqe   
  4086aa:	add    QWORD PTR [rbx+0x28],rax
  4086ae:	add    rsp,0x8
  4086b2:	pop    rbx
  4086b3:	pop    rbp
  4086b4:	pop    r12
  4086b6:	pop    r13
  4086b8:	pop    r14
  4086ba:	pop    r15
  4086bc:	ret    
  4086bd:	nop    DWORD PTR [rax]
  4086c0:	mov    rdi,rbx
  4086c3:	call   4052c0 <test_print@@Base+0xdf0>
  4086c8:	mov    rbp,QWORD PTR [rbx+0x28]
  4086cc:	jmp    408632 <flatcc_json_printer_uint64_enum_field@@Base+0xc2>
  4086d1:	nop    DWORD PTR [rax+0x0]
  4086d8:	lea    rax,[rdx+0x1]
  4086dc:	mov    QWORD PTR [rdi+0x28],rax
  4086e0:	mov    BYTE PTR [rdx],0xa
  4086e3:	movzx  edx,BYTE PTR [rdi+0x31]
  4086e7:	imul   edx,DWORD PTR [rdi+0x38]
  4086eb:	mov    rdi,QWORD PTR [rdi+0x28]
  4086ef:	movsxd r14,edx
  4086f2:	lea    rax,[rdi+r14*1]
  4086f6:	cmp    QWORD PTR [rbx+0x20],rax
  4086fa:	jae    408710 <flatcc_json_printer_uint64_enum_field@@Base+0x1a0>
  4086fc:	mov    rsi,r14
  4086ff:	mov    rdi,rbx
  408702:	call   405350 <test_print@@Base+0xe80>
  408707:	mov    rdx,QWORD PTR [rbx+0x28]
  40870b:	jmp    4085fc <flatcc_json_printer_uint64_enum_field@@Base+0x8c>
  408710:	mov    rdx,r14
  408713:	mov    esi,0x20
  408718:	call   403200 <memset@plt>
  40871d:	mov    rdx,QWORD PTR [rbx+0x28]
  408721:	add    rdx,r14
  408724:	mov    QWORD PTR [rbx+0x28],rdx
  408728:	jmp    4085fc <flatcc_json_printer_uint64_enum_field@@Base+0x8c>
  40872d:	nop    DWORD PTR [rax]
  408730:	cmp    BYTE PTR [rdi+0x34],0x0
  408734:	je     4085ba <flatcc_json_printer_uint64_enum_field@@Base+0x4a>
  40873a:	jmp    4086ae <flatcc_json_printer_uint64_enum_field@@Base+0x13e>
  40873f:	nop

0000000000408740 <flatcc_json_printer_int8_enum_field@@Base>:
  408740:	endbr64 
  408744:	push   r15
  408746:	lea    eax,[rdx+rdx*1+0x4]
  40874a:	push   r14
  40874c:	push   r13
  40874e:	push   r12
  408750:	push   rbp
  408751:	push   rbx
  408752:	sub    rsp,0x8
  408756:	mov    r13,QWORD PTR [rsp+0x40]
  40875b:	cmp    eax,DWORD PTR [rsi+0x10]
  40875e:	jge    408880 <flatcc_json_printer_int8_enum_field@@Base+0x140>
  408764:	mov    rdx,QWORD PTR [rsi+0x8]
  408768:	movzx  eax,WORD PTR [rdx+rax*1]
  40876c:	test   ax,ax
  40876f:	je     408880 <flatcc_json_printer_int8_enum_field@@Base+0x140>
  408775:	add    rax,QWORD PTR [rsi]
  408778:	je     408880 <flatcc_json_printer_int8_enum_field@@Base+0x140>
  40877e:	movzx  r12d,BYTE PTR [rax]
  408782:	cmp    r9b,r12b
  408785:	je     408920 <flatcc_json_printer_int8_enum_field@@Base+0x1e0>
  40878b:	mov    eax,DWORD PTR [rsi+0x18]
  40878e:	lea    edx,[rax+0x1]
  408791:	mov    DWORD PTR [rsi+0x18],edx
  408794:	mov    rdx,QWORD PTR [rdi+0x28]
  408798:	test   eax,eax
  40879a:	je     4087ab <flatcc_json_printer_int8_enum_field@@Base+0x6b>
  40879c:	lea    rax,[rdx+0x1]
  4087a0:	mov    QWORD PTR [rdi+0x28],rax
  4087a4:	mov    BYTE PTR [rdx],0x2c
  4087a7:	mov    rdx,QWORD PTR [rdi+0x28]
  4087ab:	cmp    BYTE PTR [rdi+0x31],0x0
  4087af:	mov    r15,rcx
  4087b2:	mov    rbx,rdi
  4087b5:	movsxd rbp,r8d
  4087b8:	jne    4088c8 <flatcc_json_printer_int8_enum_field@@Base+0x188>
  4087be:	cmp    QWORD PTR [rdi+0x20],rdx
  4087c2:	ja     4087cd <flatcc_json_printer_int8_enum_field@@Base+0x8d>
  4087c4:	xor    esi,esi
  4087c6:	call   QWORD PTR [rdi+0x48]
  4087c9:	mov    rdx,QWORD PTR [rbx+0x28]
  4087cd:	mov    BYTE PTR [rdx],0x22
  4087d0:	xor    edi,edi
  4087d2:	mov    rdx,rbp
  4087d5:	cmp    BYTE PTR [rbx+0x32],0x0
  4087d9:	sete   dil
  4087dd:	add    rdi,QWORD PTR [rbx+0x28]
  4087e1:	lea    rax,[rdi+rbp*1]
  4087e5:	mov    QWORD PTR [rbx+0x28],rdi
  4087e9:	mov    rsi,r15
  4087ec:	cmp    QWORD PTR [rbx+0x20],rax
  4087f0:	jbe    4088b0 <flatcc_json_printer_int8_enum_field@@Base+0x170>
  4087f6:	call   403240 <memcpy@plt>
  4087fb:	add    rbp,QWORD PTR [rbx+0x28]
  4087ff:	mov    QWORD PTR [rbx+0x28],rbp
  408803:	mov    BYTE PTR [rbp+0x0],0x22
  408807:	xor    eax,eax
  408809:	cmp    BYTE PTR [rbx+0x32],0x0
  40880d:	sete   al
  408810:	add    rax,QWORD PTR [rbx+0x28]
  408814:	lea    rdx,[rax+0x1]
  408818:	mov    QWORD PTR [rbx+0x28],rdx
  40881c:	mov    BYTE PTR [rax],0x3a
  40881f:	xor    esi,esi
  408821:	mov    rax,QWORD PTR [rbx+0x28]
  408825:	mov    BYTE PTR [rax],0x20
  408828:	cmp    BYTE PTR [rbx+0x31],0x0
  40882c:	setne  sil
  408830:	add    rsi,QWORD PTR [rbx+0x28]
  408834:	cmp    BYTE PTR [rbx+0x33],0x0
  408838:	mov    QWORD PTR [rbx+0x28],rsi
  40883c:	je     408890 <flatcc_json_printer_int8_enum_field@@Base+0x150>
  40883e:	movsx  r8d,r12b
  408842:	shr    r8d,0x1f
  408846:	test   r12b,r12b
  408849:	jns    408854 <flatcc_json_printer_int8_enum_field@@Base+0x114>
  40884b:	mov    BYTE PTR [rsi],0x2d
  40884e:	neg    r12d
  408851:	inc    rsi
  408854:	movzx  edi,r12b
  408858:	call   405590 <test_print@@Base+0x10c0>
  40885d:	add    r8d,eax
  408860:	movsxd r8,r8d
  408863:	add    QWORD PTR [rbx+0x28],r8
  408867:	add    rsp,0x8
  40886b:	pop    rbx
  40886c:	pop    rbp
  40886d:	pop    r12
  40886f:	pop    r13
  408871:	pop    r14
  408873:	pop    r15
  408875:	ret    
  408876:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408880:	cmp    BYTE PTR [rdi+0x35],0x0
  408884:	je     408867 <flatcc_json_printer_int8_enum_field@@Base+0x127>
  408886:	mov    r12d,r9d
  408889:	jmp    40878b <flatcc_json_printer_int8_enum_field@@Base+0x4b>
  40888e:	xchg   ax,ax
  408890:	add    rsp,0x8
  408894:	mov    rdi,rbx
  408897:	pop    rbx
  408898:	pop    rbp
  408899:	movsx  esi,r12b
  40889d:	pop    r12
  40889f:	mov    rax,r13
  4088a2:	pop    r13
  4088a4:	pop    r14
  4088a6:	pop    r15
  4088a8:	jmp    rax
  4088aa:	nop    WORD PTR [rax+rax*1+0x0]
  4088b0:	mov    rdi,rbx
  4088b3:	call   4052c0 <test_print@@Base+0xdf0>
  4088b8:	mov    rbp,QWORD PTR [rbx+0x28]
  4088bc:	jmp    408803 <flatcc_json_printer_int8_enum_field@@Base+0xc3>
  4088c1:	nop    DWORD PTR [rax+0x0]
  4088c8:	lea    rax,[rdx+0x1]
  4088cc:	mov    QWORD PTR [rdi+0x28],rax
  4088d0:	mov    BYTE PTR [rdx],0xa
  4088d3:	movzx  edx,BYTE PTR [rdi+0x31]
  4088d7:	imul   edx,DWORD PTR [rdi+0x38]
  4088db:	mov    rdi,QWORD PTR [rdi+0x28]
  4088df:	movsxd r14,edx
  4088e2:	lea    rax,[rdi+r14*1]
  4088e6:	cmp    QWORD PTR [rbx+0x20],rax
  4088ea:	jae    408900 <flatcc_json_printer_int8_enum_field@@Base+0x1c0>
  4088ec:	mov    rsi,r14
  4088ef:	mov    rdi,rbx
  4088f2:	call   405350 <test_print@@Base+0xe80>
  4088f7:	mov    rdx,QWORD PTR [rbx+0x28]
  4088fb:	jmp    4087cd <flatcc_json_printer_int8_enum_field@@Base+0x8d>
  408900:	mov    rdx,r14
  408903:	mov    esi,0x20
  408908:	call   403200 <memset@plt>
  40890d:	mov    rdx,QWORD PTR [rbx+0x28]
  408911:	add    rdx,r14
  408914:	mov    QWORD PTR [rbx+0x28],rdx
  408918:	jmp    4087cd <flatcc_json_printer_int8_enum_field@@Base+0x8d>
  40891d:	nop    DWORD PTR [rax]
  408920:	cmp    BYTE PTR [rdi+0x34],0x0
  408924:	je     40878b <flatcc_json_printer_int8_enum_field@@Base+0x4b>
  40892a:	jmp    408867 <flatcc_json_printer_int8_enum_field@@Base+0x127>
  40892f:	nop

0000000000408930 <flatcc_json_printer_int16_enum_field@@Base>:
  408930:	endbr64 
  408934:	push   r15
  408936:	lea    eax,[rdx+rdx*1+0x4]
  40893a:	push   r14
  40893c:	push   r13
  40893e:	push   r12
  408940:	push   rbp
  408941:	push   rbx
  408942:	sub    rsp,0x8
  408946:	mov    r13,QWORD PTR [rsp+0x40]
  40894b:	cmp    eax,DWORD PTR [rsi+0x10]
  40894e:	jge    408a70 <flatcc_json_printer_int16_enum_field@@Base+0x140>
  408954:	mov    rdx,QWORD PTR [rsi+0x8]
  408958:	movzx  eax,WORD PTR [rdx+rax*1]
  40895c:	test   ax,ax
  40895f:	je     408a70 <flatcc_json_printer_int16_enum_field@@Base+0x140>
  408965:	add    rax,QWORD PTR [rsi]
  408968:	je     408a70 <flatcc_json_printer_int16_enum_field@@Base+0x140>
  40896e:	movzx  r12d,WORD PTR [rax]
  408972:	cmp    r9w,r12w
  408976:	je     408b10 <flatcc_json_printer_int16_enum_field@@Base+0x1e0>
  40897c:	mov    eax,DWORD PTR [rsi+0x18]
  40897f:	lea    edx,[rax+0x1]
  408982:	mov    DWORD PTR [rsi+0x18],edx
  408985:	mov    rdx,QWORD PTR [rdi+0x28]
  408989:	test   eax,eax
  40898b:	je     40899c <flatcc_json_printer_int16_enum_field@@Base+0x6c>
  40898d:	lea    rax,[rdx+0x1]
  408991:	mov    QWORD PTR [rdi+0x28],rax
  408995:	mov    BYTE PTR [rdx],0x2c
  408998:	mov    rdx,QWORD PTR [rdi+0x28]
  40899c:	cmp    BYTE PTR [rdi+0x31],0x0
  4089a0:	mov    r15,rcx
  4089a3:	mov    rbx,rdi
  4089a6:	movsxd rbp,r8d
  4089a9:	jne    408ab8 <flatcc_json_printer_int16_enum_field@@Base+0x188>
  4089af:	cmp    QWORD PTR [rdi+0x20],rdx
  4089b3:	ja     4089be <flatcc_json_printer_int16_enum_field@@Base+0x8e>
  4089b5:	xor    esi,esi
  4089b7:	call   QWORD PTR [rdi+0x48]
  4089ba:	mov    rdx,QWORD PTR [rbx+0x28]
  4089be:	mov    BYTE PTR [rdx],0x22
  4089c1:	xor    edi,edi
  4089c3:	mov    rdx,rbp
  4089c6:	cmp    BYTE PTR [rbx+0x32],0x0
  4089ca:	sete   dil
  4089ce:	add    rdi,QWORD PTR [rbx+0x28]
  4089d2:	lea    rax,[rdi+rbp*1]
  4089d6:	mov    QWORD PTR [rbx+0x28],rdi
  4089da:	mov    rsi,r15
  4089dd:	cmp    QWORD PTR [rbx+0x20],rax
  4089e1:	jbe    408aa0 <flatcc_json_printer_int16_enum_field@@Base+0x170>
  4089e7:	call   403240 <memcpy@plt>
  4089ec:	add    rbp,QWORD PTR [rbx+0x28]
  4089f0:	mov    QWORD PTR [rbx+0x28],rbp
  4089f4:	mov    BYTE PTR [rbp+0x0],0x22
  4089f8:	xor    eax,eax
  4089fa:	cmp    BYTE PTR [rbx+0x32],0x0
  4089fe:	sete   al
  408a01:	add    rax,QWORD PTR [rbx+0x28]
  408a05:	lea    rdx,[rax+0x1]
  408a09:	mov    QWORD PTR [rbx+0x28],rdx
  408a0d:	mov    BYTE PTR [rax],0x3a
  408a10:	xor    esi,esi
  408a12:	mov    rax,QWORD PTR [rbx+0x28]
  408a16:	mov    BYTE PTR [rax],0x20
  408a19:	cmp    BYTE PTR [rbx+0x31],0x0
  408a1d:	setne  sil
  408a21:	add    rsi,QWORD PTR [rbx+0x28]
  408a25:	cmp    BYTE PTR [rbx+0x33],0x0
  408a29:	mov    QWORD PTR [rbx+0x28],rsi
  408a2d:	je     408a80 <flatcc_json_printer_int16_enum_field@@Base+0x150>
  408a2f:	movsx  r11d,r12w
  408a33:	shr    r11d,0x1f
  408a37:	test   r12w,r12w
  408a3b:	jns    408a46 <flatcc_json_printer_int16_enum_field@@Base+0x116>
  408a3d:	mov    BYTE PTR [rsi],0x2d
  408a40:	neg    r12d
  408a43:	inc    rsi
  408a46:	movzx  edi,r12w
  408a4a:	call   404820 <test_print@@Base+0x350>
  408a4f:	add    r11d,eax
  408a52:	movsxd r11,r11d
  408a55:	add    QWORD PTR [rbx+0x28],r11
  408a59:	add    rsp,0x8
  408a5d:	pop    rbx
  408a5e:	pop    rbp
  408a5f:	pop    r12
  408a61:	pop    r13
  408a63:	pop    r14
  408a65:	pop    r15
  408a67:	ret    
  408a68:	nop    DWORD PTR [rax+rax*1+0x0]
  408a70:	cmp    BYTE PTR [rdi+0x35],0x0
  408a74:	je     408a59 <flatcc_json_printer_int16_enum_field@@Base+0x129>
  408a76:	mov    r12d,r9d
  408a79:	jmp    40897c <flatcc_json_printer_int16_enum_field@@Base+0x4c>
  408a7e:	xchg   ax,ax
  408a80:	add    rsp,0x8
  408a84:	mov    rdi,rbx
  408a87:	pop    rbx
  408a88:	pop    rbp
  408a89:	movsx  esi,r12w
  408a8d:	pop    r12
  408a8f:	mov    rax,r13
  408a92:	pop    r13
  408a94:	pop    r14
  408a96:	pop    r15
  408a98:	jmp    rax
  408a9a:	nop    WORD PTR [rax+rax*1+0x0]
  408aa0:	mov    rdi,rbx
  408aa3:	call   4052c0 <test_print@@Base+0xdf0>
  408aa8:	mov    rbp,QWORD PTR [rbx+0x28]
  408aac:	jmp    4089f4 <flatcc_json_printer_int16_enum_field@@Base+0xc4>
  408ab1:	nop    DWORD PTR [rax+0x0]
  408ab8:	lea    rax,[rdx+0x1]
  408abc:	mov    QWORD PTR [rdi+0x28],rax
  408ac0:	mov    BYTE PTR [rdx],0xa
  408ac3:	movzx  edx,BYTE PTR [rdi+0x31]
  408ac7:	imul   edx,DWORD PTR [rdi+0x38]
  408acb:	mov    rdi,QWORD PTR [rdi+0x28]
  408acf:	movsxd r14,edx
  408ad2:	lea    rax,[rdi+r14*1]
  408ad6:	cmp    QWORD PTR [rbx+0x20],rax
  408ada:	jae    408af0 <flatcc_json_printer_int16_enum_field@@Base+0x1c0>
  408adc:	mov    rsi,r14
  408adf:	mov    rdi,rbx
  408ae2:	call   405350 <test_print@@Base+0xe80>
  408ae7:	mov    rdx,QWORD PTR [rbx+0x28]
  408aeb:	jmp    4089be <flatcc_json_printer_int16_enum_field@@Base+0x8e>
  408af0:	mov    rdx,r14
  408af3:	mov    esi,0x20
  408af8:	call   403200 <memset@plt>
  408afd:	mov    rdx,QWORD PTR [rbx+0x28]
  408b01:	add    rdx,r14
  408b04:	mov    QWORD PTR [rbx+0x28],rdx
  408b08:	jmp    4089be <flatcc_json_printer_int16_enum_field@@Base+0x8e>
  408b0d:	nop    DWORD PTR [rax]
  408b10:	cmp    BYTE PTR [rdi+0x34],0x0
  408b14:	je     40897c <flatcc_json_printer_int16_enum_field@@Base+0x4c>
  408b1a:	jmp    408a59 <flatcc_json_printer_int16_enum_field@@Base+0x129>
  408b1f:	nop

0000000000408b20 <flatcc_json_printer_int32_enum_field@@Base>:
  408b20:	endbr64 
  408b24:	push   r15
  408b26:	lea    eax,[rdx+rdx*1+0x4]
  408b2a:	push   r14
  408b2c:	push   r13
  408b2e:	push   r12
  408b30:	push   rbp
  408b31:	push   rbx
  408b32:	sub    rsp,0x8
  408b36:	mov    r13,QWORD PTR [rsp+0x40]
  408b3b:	cmp    eax,DWORD PTR [rsi+0x10]
  408b3e:	jge    408c58 <flatcc_json_printer_int32_enum_field@@Base+0x138>
  408b44:	mov    rdx,QWORD PTR [rsi+0x8]
  408b48:	movzx  eax,WORD PTR [rdx+rax*1]
  408b4c:	test   ax,ax
  408b4f:	je     408c58 <flatcc_json_printer_int32_enum_field@@Base+0x138>
  408b55:	add    rax,QWORD PTR [rsi]
  408b58:	je     408c58 <flatcc_json_printer_int32_enum_field@@Base+0x138>
  408b5e:	mov    r14d,DWORD PTR [rax]
  408b61:	cmp    r9d,r14d
  408b64:	je     408d00 <flatcc_json_printer_int32_enum_field@@Base+0x1e0>
  408b6a:	mov    eax,DWORD PTR [rsi+0x18]
  408b6d:	lea    edx,[rax+0x1]
  408b70:	mov    DWORD PTR [rsi+0x18],edx
  408b73:	mov    rdx,QWORD PTR [rdi+0x28]
  408b77:	test   eax,eax
  408b79:	je     408b8a <flatcc_json_printer_int32_enum_field@@Base+0x6a>
  408b7b:	lea    rax,[rdx+0x1]
  408b7f:	mov    QWORD PTR [rdi+0x28],rax
  408b83:	mov    BYTE PTR [rdx],0x2c
  408b86:	mov    rdx,QWORD PTR [rdi+0x28]
  408b8a:	cmp    BYTE PTR [rdi+0x31],0x0
  408b8e:	mov    r15,rcx
  408b91:	mov    rbx,rdi
  408b94:	movsxd rbp,r8d
  408b97:	jne    408ca8 <flatcc_json_printer_int32_enum_field@@Base+0x188>
  408b9d:	cmp    QWORD PTR [rdi+0x20],rdx
  408ba1:	ja     408bac <flatcc_json_printer_int32_enum_field@@Base+0x8c>
  408ba3:	xor    esi,esi
  408ba5:	call   QWORD PTR [rdi+0x48]
  408ba8:	mov    rdx,QWORD PTR [rbx+0x28]
  408bac:	mov    BYTE PTR [rdx],0x22
  408baf:	xor    edi,edi
  408bb1:	mov    rdx,rbp
  408bb4:	cmp    BYTE PTR [rbx+0x32],0x0
  408bb8:	sete   dil
  408bbc:	add    rdi,QWORD PTR [rbx+0x28]
  408bc0:	lea    rax,[rdi+rbp*1]
  408bc4:	mov    QWORD PTR [rbx+0x28],rdi
  408bc8:	mov    rsi,r15
  408bcb:	cmp    QWORD PTR [rbx+0x20],rax
  408bcf:	jbe    408c90 <flatcc_json_printer_int32_enum_field@@Base+0x170>
  408bd5:	call   403240 <memcpy@plt>
  408bda:	add    rbp,QWORD PTR [rbx+0x28]
  408bde:	mov    QWORD PTR [rbx+0x28],rbp
  408be2:	mov    BYTE PTR [rbp+0x0],0x22
  408be6:	xor    eax,eax
  408be8:	cmp    BYTE PTR [rbx+0x32],0x0
  408bec:	sete   al
  408bef:	add    rax,QWORD PTR [rbx+0x28]
  408bf3:	lea    rdx,[rax+0x1]
  408bf7:	mov    QWORD PTR [rbx+0x28],rdx
  408bfb:	mov    BYTE PTR [rax],0x3a
  408bfe:	xor    esi,esi
  408c00:	mov    rax,QWORD PTR [rbx+0x28]
  408c04:	mov    BYTE PTR [rax],0x20
  408c07:	cmp    BYTE PTR [rbx+0x31],0x0
  408c0b:	setne  sil
  408c0f:	add    rsi,QWORD PTR [rbx+0x28]
  408c13:	cmp    BYTE PTR [rbx+0x33],0x0
  408c17:	mov    QWORD PTR [rbx+0x28],rsi
  408c1b:	je     408c70 <flatcc_json_printer_int32_enum_field@@Base+0x150>
  408c1d:	mov    ebp,r14d
  408c20:	shr    ebp,0x1f
  408c23:	test   r14d,r14d
  408c26:	jns    408c31 <flatcc_json_printer_int32_enum_field@@Base+0x111>
  408c28:	mov    BYTE PTR [rsi],0x2d
  408c2b:	neg    r14d
  408c2e:	inc    rsi
  408c31:	mov    edi,r14d
  408c34:	call   404950 <test_print@@Base+0x480>
  408c39:	add    ebp,eax
  408c3b:	movsxd rbp,ebp
  408c3e:	add    QWORD PTR [rbx+0x28],rbp
  408c42:	add    rsp,0x8
  408c46:	pop    rbx
  408c47:	pop    rbp
  408c48:	pop    r12
  408c4a:	pop    r13
  408c4c:	pop    r14
  408c4e:	pop    r15
  408c50:	ret    
  408c51:	nop    DWORD PTR [rax+0x0]
  408c58:	cmp    BYTE PTR [rdi+0x35],0x0
  408c5c:	je     408c42 <flatcc_json_printer_int32_enum_field@@Base+0x122>
  408c5e:	mov    r14d,r9d
  408c61:	jmp    408b6a <flatcc_json_printer_int32_enum_field@@Base+0x4a>
  408c66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408c70:	add    rsp,0x8
  408c74:	mov    rdi,rbx
  408c77:	pop    rbx
  408c78:	pop    rbp
  408c79:	pop    r12
  408c7b:	mov    rax,r13
  408c7e:	pop    r13
  408c80:	mov    esi,r14d
  408c83:	pop    r14
  408c85:	pop    r15
  408c87:	jmp    rax
  408c89:	nop    DWORD PTR [rax+0x0]
  408c90:	mov    rdi,rbx
  408c93:	call   4052c0 <test_print@@Base+0xdf0>
  408c98:	mov    rbp,QWORD PTR [rbx+0x28]
  408c9c:	jmp    408be2 <flatcc_json_printer_int32_enum_field@@Base+0xc2>
  408ca1:	nop    DWORD PTR [rax+0x0]
  408ca8:	lea    rax,[rdx+0x1]
  408cac:	mov    QWORD PTR [rdi+0x28],rax
  408cb0:	mov    BYTE PTR [rdx],0xa
  408cb3:	movzx  edx,BYTE PTR [rdi+0x31]
  408cb7:	imul   edx,DWORD PTR [rdi+0x38]
  408cbb:	mov    rdi,QWORD PTR [rdi+0x28]
  408cbf:	movsxd r12,edx
  408cc2:	lea    rax,[rdi+r12*1]
  408cc6:	cmp    QWORD PTR [rbx+0x20],rax
  408cca:	jae    408ce0 <flatcc_json_printer_int32_enum_field@@Base+0x1c0>
  408ccc:	mov    rsi,r12
  408ccf:	mov    rdi,rbx
  408cd2:	call   405350 <test_print@@Base+0xe80>
  408cd7:	mov    rdx,QWORD PTR [rbx+0x28]
  408cdb:	jmp    408bac <flatcc_json_printer_int32_enum_field@@Base+0x8c>
  408ce0:	mov    rdx,r12
  408ce3:	mov    esi,0x20
  408ce8:	call   403200 <memset@plt>
  408ced:	mov    rdx,QWORD PTR [rbx+0x28]
  408cf1:	add    rdx,r12
  408cf4:	mov    QWORD PTR [rbx+0x28],rdx
  408cf8:	jmp    408bac <flatcc_json_printer_int32_enum_field@@Base+0x8c>
  408cfd:	nop    DWORD PTR [rax]
  408d00:	cmp    BYTE PTR [rdi+0x34],0x0
  408d04:	je     408b6a <flatcc_json_printer_int32_enum_field@@Base+0x4a>
  408d0a:	jmp    408c42 <flatcc_json_printer_int32_enum_field@@Base+0x122>
  408d0f:	nop

0000000000408d10 <flatcc_json_printer_int64_enum_field@@Base>:
  408d10:	endbr64 
  408d14:	push   r15
  408d16:	lea    eax,[rdx+rdx*1+0x4]
  408d1a:	push   r14
  408d1c:	push   r13
  408d1e:	push   r12
  408d20:	push   rbp
  408d21:	push   rbx
  408d22:	sub    rsp,0x8
  408d26:	mov    r13,QWORD PTR [rsp+0x40]
  408d2b:	cmp    eax,DWORD PTR [rsi+0x10]
  408d2e:	jge    408e48 <flatcc_json_printer_int64_enum_field@@Base+0x138>
  408d34:	mov    rdx,QWORD PTR [rsi+0x8]
  408d38:	movzx  eax,WORD PTR [rdx+rax*1]
  408d3c:	test   ax,ax
  408d3f:	je     408e48 <flatcc_json_printer_int64_enum_field@@Base+0x138>
  408d45:	add    rax,QWORD PTR [rsi]
  408d48:	je     408e48 <flatcc_json_printer_int64_enum_field@@Base+0x138>
  408d4e:	mov    r14,QWORD PTR [rax]
  408d51:	cmp    r9,r14
  408d54:	je     408ef0 <flatcc_json_printer_int64_enum_field@@Base+0x1e0>
  408d5a:	mov    eax,DWORD PTR [rsi+0x18]
  408d5d:	lea    edx,[rax+0x1]
  408d60:	mov    DWORD PTR [rsi+0x18],edx
  408d63:	mov    rdx,QWORD PTR [rdi+0x28]
  408d67:	test   eax,eax
  408d69:	je     408d7a <flatcc_json_printer_int64_enum_field@@Base+0x6a>
  408d6b:	lea    rax,[rdx+0x1]
  408d6f:	mov    QWORD PTR [rdi+0x28],rax
  408d73:	mov    BYTE PTR [rdx],0x2c
  408d76:	mov    rdx,QWORD PTR [rdi+0x28]
  408d7a:	cmp    BYTE PTR [rdi+0x31],0x0
  408d7e:	mov    r15,rcx
  408d81:	mov    rbx,rdi
  408d84:	movsxd rbp,r8d
  408d87:	jne    408e98 <flatcc_json_printer_int64_enum_field@@Base+0x188>
  408d8d:	cmp    QWORD PTR [rdi+0x20],rdx
  408d91:	ja     408d9c <flatcc_json_printer_int64_enum_field@@Base+0x8c>
  408d93:	xor    esi,esi
  408d95:	call   QWORD PTR [rdi+0x48]
  408d98:	mov    rdx,QWORD PTR [rbx+0x28]
  408d9c:	mov    BYTE PTR [rdx],0x22
  408d9f:	xor    edi,edi
  408da1:	mov    rdx,rbp
  408da4:	cmp    BYTE PTR [rbx+0x32],0x0
  408da8:	sete   dil
  408dac:	add    rdi,QWORD PTR [rbx+0x28]
  408db0:	lea    rax,[rdi+rbp*1]
  408db4:	mov    QWORD PTR [rbx+0x28],rdi
  408db8:	mov    rsi,r15
  408dbb:	cmp    QWORD PTR [rbx+0x20],rax
  408dbf:	jbe    408e80 <flatcc_json_printer_int64_enum_field@@Base+0x170>
  408dc5:	call   403240 <memcpy@plt>
  408dca:	add    rbp,QWORD PTR [rbx+0x28]
  408dce:	mov    QWORD PTR [rbx+0x28],rbp
  408dd2:	mov    BYTE PTR [rbp+0x0],0x22
  408dd6:	xor    eax,eax
  408dd8:	cmp    BYTE PTR [rbx+0x32],0x0
  408ddc:	sete   al
  408ddf:	add    rax,QWORD PTR [rbx+0x28]
  408de3:	lea    rdx,[rax+0x1]
  408de7:	mov    QWORD PTR [rbx+0x28],rdx
  408deb:	mov    BYTE PTR [rax],0x3a
  408dee:	xor    esi,esi
  408df0:	mov    rax,QWORD PTR [rbx+0x28]
  408df4:	mov    BYTE PTR [rax],0x20
  408df7:	cmp    BYTE PTR [rbx+0x31],0x0
  408dfb:	setne  sil
  408dff:	add    rsi,QWORD PTR [rbx+0x28]
  408e03:	cmp    BYTE PTR [rbx+0x33],0x0
  408e07:	mov    QWORD PTR [rbx+0x28],rsi
  408e0b:	je     408e60 <flatcc_json_printer_int64_enum_field@@Base+0x150>
  408e0d:	mov    rbp,r14
  408e10:	shr    rbp,0x3f
  408e14:	test   r14,r14
  408e17:	jns    408e22 <flatcc_json_printer_int64_enum_field@@Base+0x112>
  408e19:	mov    BYTE PTR [rsi],0x2d
  408e1c:	neg    r14
  408e1f:	inc    rsi
  408e22:	mov    rdi,r14
  408e25:	call   404c00 <test_print@@Base+0x730>
  408e2a:	add    eax,ebp
  408e2c:	cdqe   
  408e2e:	add    QWORD PTR [rbx+0x28],rax
  408e32:	add    rsp,0x8
  408e36:	pop    rbx
  408e37:	pop    rbp
  408e38:	pop    r12
  408e3a:	pop    r13
  408e3c:	pop    r14
  408e3e:	pop    r15
  408e40:	ret    
  408e41:	nop    DWORD PTR [rax+0x0]
  408e48:	cmp    BYTE PTR [rdi+0x35],0x0
  408e4c:	je     408e32 <flatcc_json_printer_int64_enum_field@@Base+0x122>
  408e4e:	mov    r14,r9
  408e51:	jmp    408d5a <flatcc_json_printer_int64_enum_field@@Base+0x4a>
  408e56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408e60:	add    rsp,0x8
  408e64:	mov    rdi,rbx
  408e67:	pop    rbx
  408e68:	pop    rbp
  408e69:	pop    r12
  408e6b:	mov    rax,r13
  408e6e:	pop    r13
  408e70:	mov    rsi,r14
  408e73:	pop    r14
  408e75:	pop    r15
  408e77:	jmp    rax
  408e79:	nop    DWORD PTR [rax+0x0]
  408e80:	mov    rdi,rbx
  408e83:	call   4052c0 <test_print@@Base+0xdf0>
  408e88:	mov    rbp,QWORD PTR [rbx+0x28]
  408e8c:	jmp    408dd2 <flatcc_json_printer_int64_enum_field@@Base+0xc2>
  408e91:	nop    DWORD PTR [rax+0x0]
  408e98:	lea    rax,[rdx+0x1]
  408e9c:	mov    QWORD PTR [rdi+0x28],rax
  408ea0:	mov    BYTE PTR [rdx],0xa
  408ea3:	movzx  edx,BYTE PTR [rdi+0x31]
  408ea7:	imul   edx,DWORD PTR [rdi+0x38]
  408eab:	mov    rdi,QWORD PTR [rdi+0x28]
  408eaf:	movsxd r12,edx
  408eb2:	lea    rax,[rdi+r12*1]
  408eb6:	cmp    QWORD PTR [rbx+0x20],rax
  408eba:	jae    408ed0 <flatcc_json_printer_int64_enum_field@@Base+0x1c0>
  408ebc:	mov    rsi,r12
  408ebf:	mov    rdi,rbx
  408ec2:	call   405350 <test_print@@Base+0xe80>
  408ec7:	mov    rdx,QWORD PTR [rbx+0x28]
  408ecb:	jmp    408d9c <flatcc_json_printer_int64_enum_field@@Base+0x8c>
  408ed0:	mov    rdx,r12
  408ed3:	mov    esi,0x20
  408ed8:	call   403200 <memset@plt>
  408edd:	mov    rdx,QWORD PTR [rbx+0x28]
  408ee1:	add    rdx,r12
  408ee4:	mov    QWORD PTR [rbx+0x28],rdx
  408ee8:	jmp    408d9c <flatcc_json_printer_int64_enum_field@@Base+0x8c>
  408eed:	nop    DWORD PTR [rax]
  408ef0:	cmp    BYTE PTR [rdi+0x34],0x0
  408ef4:	je     408d5a <flatcc_json_printer_int64_enum_field@@Base+0x4a>
  408efa:	jmp    408e32 <flatcc_json_printer_int64_enum_field@@Base+0x122>
  408eff:	nop

0000000000408f00 <flatcc_json_printer_bool_enum_field@@Base>:
  408f00:	endbr64 
  408f04:	push   r15
  408f06:	lea    eax,[rdx+rdx*1+0x4]
  408f0a:	push   r14
  408f0c:	push   r13
  408f0e:	push   r12
  408f10:	push   rbp
  408f11:	push   rbx
  408f12:	sub    rsp,0x8
  408f16:	mov    r13,QWORD PTR [rsp+0x40]
  408f1b:	cmp    eax,DWORD PTR [rsi+0x10]
  408f1e:	jge    409020 <flatcc_json_printer_bool_enum_field@@Base+0x120>
  408f24:	mov    rdx,QWORD PTR [rsi+0x8]
  408f28:	movzx  eax,WORD PTR [rdx+rax*1]
  408f2c:	test   ax,ax
  408f2f:	je     409020 <flatcc_json_printer_bool_enum_field@@Base+0x120>
  408f35:	add    rax,QWORD PTR [rsi]
  408f38:	je     409020 <flatcc_json_printer_bool_enum_field@@Base+0x120>
  408f3e:	movzx  r12d,BYTE PTR [rax]
  408f42:	cmp    r9b,r12b
  408f45:	je     4090c0 <flatcc_json_printer_bool_enum_field@@Base+0x1c0>
  408f4b:	mov    eax,DWORD PTR [rsi+0x18]
  408f4e:	lea    edx,[rax+0x1]
  408f51:	mov    DWORD PTR [rsi+0x18],edx
  408f54:	mov    rdx,QWORD PTR [rdi+0x28]
  408f58:	test   eax,eax
  408f5a:	je     408f6b <flatcc_json_printer_bool_enum_field@@Base+0x6b>
  408f5c:	lea    rax,[rdx+0x1]
  408f60:	mov    QWORD PTR [rdi+0x28],rax
  408f64:	mov    BYTE PTR [rdx],0x2c
  408f67:	mov    rdx,QWORD PTR [rdi+0x28]
  408f6b:	cmp    BYTE PTR [rdi+0x31],0x0
  408f6f:	mov    r15,rcx
  408f72:	mov    rbx,rdi
  408f75:	movsxd rbp,r8d
  408f78:	jne    409068 <flatcc_json_printer_bool_enum_field@@Base+0x168>
  408f7e:	cmp    QWORD PTR [rdi+0x20],rdx
  408f82:	ja     408f8d <flatcc_json_printer_bool_enum_field@@Base+0x8d>
  408f84:	xor    esi,esi
  408f86:	call   QWORD PTR [rdi+0x48]
  408f89:	mov    rdx,QWORD PTR [rbx+0x28]
  408f8d:	mov    BYTE PTR [rdx],0x22
  408f90:	xor    edi,edi
  408f92:	mov    rdx,rbp
  408f95:	cmp    BYTE PTR [rbx+0x32],0x0
  408f99:	sete   dil
  408f9d:	add    rdi,QWORD PTR [rbx+0x28]
  408fa1:	lea    rax,[rdi+rbp*1]
  408fa5:	mov    QWORD PTR [rbx+0x28],rdi
  408fa9:	mov    rsi,r15
  408fac:	cmp    QWORD PTR [rbx+0x20],rax
  408fb0:	jbe    409050 <flatcc_json_printer_bool_enum_field@@Base+0x150>
  408fb6:	call   403240 <memcpy@plt>
  408fbb:	add    rbp,QWORD PTR [rbx+0x28]
  408fbf:	mov    QWORD PTR [rbx+0x28],rbp
  408fc3:	mov    BYTE PTR [rbp+0x0],0x22
  408fc7:	xor    eax,eax
  408fc9:	cmp    BYTE PTR [rbx+0x32],0x0
  408fcd:	sete   al
  408fd0:	add    rax,QWORD PTR [rbx+0x28]
  408fd4:	lea    rdx,[rax+0x1]
  408fd8:	mov    QWORD PTR [rbx+0x28],rdx
  408fdc:	mov    BYTE PTR [rax],0x3a
  408fdf:	xor    esi,esi
  408fe1:	mov    rax,QWORD PTR [rbx+0x28]
  408fe5:	mov    BYTE PTR [rax],0x20
  408fe8:	cmp    BYTE PTR [rbx+0x31],0x0
  408fec:	setne  sil
  408ff0:	add    rsi,QWORD PTR [rbx+0x28]
  408ff4:	cmp    BYTE PTR [rbx+0x33],0x0
  408ff8:	mov    QWORD PTR [rbx+0x28],rsi
  408ffc:	jne    409030 <flatcc_json_printer_bool_enum_field@@Base+0x130>
  408ffe:	add    rsp,0x8
  409002:	mov    rdi,rbx
  409005:	pop    rbx
  409006:	pop    rbp
  409007:	movzx  esi,r12b
  40900b:	pop    r12
  40900d:	mov    rax,r13
  409010:	pop    r13
  409012:	pop    r14
  409014:	pop    r15
  409016:	jmp    rax
  409018:	nop    DWORD PTR [rax+rax*1+0x0]
  409020:	cmp    BYTE PTR [rdi+0x35],0x0
  409024:	je     40903f <flatcc_json_printer_bool_enum_field@@Base+0x13f>
  409026:	mov    r12d,r9d
  409029:	jmp    408f4b <flatcc_json_printer_bool_enum_field@@Base+0x4b>
  40902e:	xchg   ax,ax
  409030:	movzx  edi,r12b
  409034:	call   405560 <test_print@@Base+0x1090>
  409039:	cdqe   
  40903b:	add    QWORD PTR [rbx+0x28],rax
  40903f:	add    rsp,0x8
  409043:	pop    rbx
  409044:	pop    rbp
  409045:	pop    r12
  409047:	pop    r13
  409049:	pop    r14
  40904b:	pop    r15
  40904d:	ret    
  40904e:	xchg   ax,ax
  409050:	mov    rdi,rbx
  409053:	call   4052c0 <test_print@@Base+0xdf0>
  409058:	mov    rbp,QWORD PTR [rbx+0x28]
  40905c:	jmp    408fc3 <flatcc_json_printer_bool_enum_field@@Base+0xc3>
  409061:	nop    DWORD PTR [rax+0x0]
  409068:	lea    rax,[rdx+0x1]
  40906c:	mov    QWORD PTR [rdi+0x28],rax
  409070:	mov    BYTE PTR [rdx],0xa
  409073:	movzx  edx,BYTE PTR [rdi+0x31]
  409077:	imul   edx,DWORD PTR [rdi+0x38]
  40907b:	mov    rdi,QWORD PTR [rdi+0x28]
  40907f:	movsxd r14,edx
  409082:	lea    rax,[rdi+r14*1]
  409086:	cmp    QWORD PTR [rbx+0x20],rax
  40908a:	jae    4090a0 <flatcc_json_printer_bool_enum_field@@Base+0x1a0>
  40908c:	mov    rsi,r14
  40908f:	mov    rdi,rbx
  409092:	call   405350 <test_print@@Base+0xe80>
  409097:	mov    rdx,QWORD PTR [rbx+0x28]
  40909b:	jmp    408f8d <flatcc_json_printer_bool_enum_field@@Base+0x8d>
  4090a0:	mov    rdx,r14
  4090a3:	mov    esi,0x20
  4090a8:	call   403200 <memset@plt>
  4090ad:	mov    rdx,QWORD PTR [rbx+0x28]
  4090b1:	add    rdx,r14
  4090b4:	mov    QWORD PTR [rbx+0x28],rdx
  4090b8:	jmp    408f8d <flatcc_json_printer_bool_enum_field@@Base+0x8d>
  4090bd:	nop    DWORD PTR [rax]
  4090c0:	cmp    BYTE PTR [rdi+0x34],0x0
  4090c4:	je     408f4b <flatcc_json_printer_bool_enum_field@@Base+0x4b>
  4090ca:	jmp    40903f <flatcc_json_printer_bool_enum_field@@Base+0x13f>
  4090cf:	nop

00000000004090d0 <flatcc_json_printer_uint8_struct_field@@Base>:
  4090d0:	endbr64 
  4090d4:	push   r14
  4090d6:	mov    r14,r8
  4090d9:	push   r13
  4090db:	push   r12
  4090dd:	push   rbp
  4090de:	push   rbx
  4090df:	mov    rbx,rdi
  4090e2:	movzx  r12d,BYTE PTR [rdx+rcx*1]
  4090e7:	mov    rax,QWORD PTR [rdi+0x28]
  4090eb:	test   esi,esi
  4090ed:	je     4090fe <flatcc_json_printer_uint8_struct_field@@Base+0x2e>
  4090ef:	lea    rdx,[rax+0x1]
  4090f3:	mov    QWORD PTR [rdi+0x28],rdx
  4090f7:	mov    BYTE PTR [rax],0x2c
  4090fa:	mov    rax,QWORD PTR [rdi+0x28]
  4090fe:	cmp    BYTE PTR [rbx+0x31],0x0
  409102:	movsxd r13,r9d
  409105:	jne    4091b0 <flatcc_json_printer_uint8_struct_field@@Base+0xe0>
  40910b:	cmp    QWORD PTR [rbx+0x20],rax
  40910f:	ja     40911d <flatcc_json_printer_uint8_struct_field@@Base+0x4d>
  409111:	xor    esi,esi
  409113:	mov    rdi,rbx
  409116:	call   QWORD PTR [rbx+0x48]
  409119:	mov    rax,QWORD PTR [rbx+0x28]
  40911d:	mov    BYTE PTR [rax],0x22
  409120:	xor    edi,edi
  409122:	mov    rdx,r13
  409125:	cmp    BYTE PTR [rbx+0x32],0x0
  409129:	sete   dil
  40912d:	add    rdi,QWORD PTR [rbx+0x28]
  409131:	lea    rax,[rdi+r13*1]
  409135:	mov    QWORD PTR [rbx+0x28],rdi
  409139:	mov    rsi,r14
  40913c:	cmp    QWORD PTR [rbx+0x20],rax
  409140:	ja     4091a0 <flatcc_json_printer_uint8_struct_field@@Base+0xd0>
  409142:	mov    rdi,rbx
  409145:	call   4052c0 <test_print@@Base+0xdf0>
  40914a:	mov    r13,QWORD PTR [rbx+0x28]
  40914e:	mov    BYTE PTR [r13+0x0],0x22
  409153:	xor    eax,eax
  409155:	movzx  edi,r12b
  409159:	cmp    BYTE PTR [rbx+0x32],0x0
  40915d:	sete   al
  409160:	add    rax,QWORD PTR [rbx+0x28]
  409164:	lea    rdx,[rax+0x1]
  409168:	mov    QWORD PTR [rbx+0x28],rdx
  40916c:	mov    BYTE PTR [rax],0x3a
  40916f:	xor    esi,esi
  409171:	mov    rax,QWORD PTR [rbx+0x28]
  409175:	mov    BYTE PTR [rax],0x20
  409178:	cmp    BYTE PTR [rbx+0x31],0x0
  40917c:	setne  sil
  409180:	add    rsi,QWORD PTR [rbx+0x28]
  409184:	mov    QWORD PTR [rbx+0x28],rsi
  409188:	call   405590 <test_print@@Base+0x10c0>
  40918d:	cdqe   
  40918f:	add    QWORD PTR [rbx+0x28],rax
  409193:	pop    rbx
  409194:	pop    rbp
  409195:	pop    r12
  409197:	pop    r13
  409199:	pop    r14
  40919b:	ret    
  40919c:	nop    DWORD PTR [rax+0x0]
  4091a0:	call   403240 <memcpy@plt>
  4091a5:	add    r13,QWORD PTR [rbx+0x28]
  4091a9:	mov    QWORD PTR [rbx+0x28],r13
  4091ad:	jmp    40914e <flatcc_json_printer_uint8_struct_field@@Base+0x7e>
  4091af:	nop
  4091b0:	lea    rdx,[rax+0x1]
  4091b4:	mov    QWORD PTR [rbx+0x28],rdx
  4091b8:	mov    BYTE PTR [rax],0xa
  4091bb:	movzx  eax,BYTE PTR [rbx+0x31]
  4091bf:	mov    rdi,QWORD PTR [rbx+0x28]
  4091c3:	imul   eax,DWORD PTR [rbx+0x38]
  4091c7:	movsxd rbp,eax
  4091ca:	lea    rax,[rdi+rbp*1]
  4091ce:	cmp    QWORD PTR [rbx+0x20],rax
  4091d2:	jae    4091f0 <flatcc_json_printer_uint8_struct_field@@Base+0x120>
  4091d4:	mov    rsi,rbp
  4091d7:	mov    rdi,rbx
  4091da:	call   405350 <test_print@@Base+0xe80>
  4091df:	mov    rax,QWORD PTR [rbx+0x28]
  4091e3:	jmp    40911d <flatcc_json_printer_uint8_struct_field@@Base+0x4d>
  4091e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4091f0:	mov    rdx,rbp
  4091f3:	mov    esi,0x20
  4091f8:	call   403200 <memset@plt>
  4091fd:	mov    rax,QWORD PTR [rbx+0x28]
  409201:	add    rax,rbp
  409204:	mov    QWORD PTR [rbx+0x28],rax
  409208:	jmp    40911d <flatcc_json_printer_uint8_struct_field@@Base+0x4d>
  40920d:	nop    DWORD PTR [rax]

0000000000409210 <flatcc_json_printer_uint16_struct_field@@Base>:
  409210:	endbr64 
  409214:	push   r14
  409216:	mov    r14,r8
  409219:	push   r13
  40921b:	push   r12
  40921d:	push   rbp
  40921e:	push   rbx
  40921f:	mov    rbx,rdi
  409222:	movzx  r12d,WORD PTR [rdx+rcx*1]
  409227:	mov    rax,QWORD PTR [rdi+0x28]
  40922b:	test   esi,esi
  40922d:	je     40923e <flatcc_json_printer_uint16_struct_field@@Base+0x2e>
  40922f:	lea    rdx,[rax+0x1]
  409233:	mov    QWORD PTR [rdi+0x28],rdx
  409237:	mov    BYTE PTR [rax],0x2c
  40923a:	mov    rax,QWORD PTR [rdi+0x28]
  40923e:	cmp    BYTE PTR [rbx+0x31],0x0
  409242:	movsxd r13,r9d
  409245:	jne    4092f0 <flatcc_json_printer_uint16_struct_field@@Base+0xe0>
  40924b:	cmp    QWORD PTR [rbx+0x20],rax
  40924f:	ja     40925d <flatcc_json_printer_uint16_struct_field@@Base+0x4d>
  409251:	xor    esi,esi
  409253:	mov    rdi,rbx
  409256:	call   QWORD PTR [rbx+0x48]
  409259:	mov    rax,QWORD PTR [rbx+0x28]
  40925d:	mov    BYTE PTR [rax],0x22
  409260:	xor    edi,edi
  409262:	mov    rdx,r13
  409265:	cmp    BYTE PTR [rbx+0x32],0x0
  409269:	sete   dil
  40926d:	add    rdi,QWORD PTR [rbx+0x28]
  409271:	lea    rax,[rdi+r13*1]
  409275:	mov    QWORD PTR [rbx+0x28],rdi
  409279:	mov    rsi,r14
  40927c:	cmp    QWORD PTR [rbx+0x20],rax
  409280:	ja     4092e0 <flatcc_json_printer_uint16_struct_field@@Base+0xd0>
  409282:	mov    rdi,rbx
  409285:	call   4052c0 <test_print@@Base+0xdf0>
  40928a:	mov    r13,QWORD PTR [rbx+0x28]
  40928e:	mov    BYTE PTR [r13+0x0],0x22
  409293:	xor    eax,eax
  409295:	movzx  edi,r12w
  409299:	cmp    BYTE PTR [rbx+0x32],0x0
  40929d:	sete   al
  4092a0:	add    rax,QWORD PTR [rbx+0x28]
  4092a4:	lea    rdx,[rax+0x1]
  4092a8:	mov    QWORD PTR [rbx+0x28],rdx
  4092ac:	mov    BYTE PTR [rax],0x3a
  4092af:	xor    esi,esi
  4092b1:	mov    rax,QWORD PTR [rbx+0x28]
  4092b5:	mov    BYTE PTR [rax],0x20
  4092b8:	cmp    BYTE PTR [rbx+0x31],0x0
  4092bc:	setne  sil
  4092c0:	add    rsi,QWORD PTR [rbx+0x28]
  4092c4:	mov    QWORD PTR [rbx+0x28],rsi
  4092c8:	call   404820 <test_print@@Base+0x350>
  4092cd:	cdqe   
  4092cf:	add    QWORD PTR [rbx+0x28],rax
  4092d3:	pop    rbx
  4092d4:	pop    rbp
  4092d5:	pop    r12
  4092d7:	pop    r13
  4092d9:	pop    r14
  4092db:	ret    
  4092dc:	nop    DWORD PTR [rax+0x0]
  4092e0:	call   403240 <memcpy@plt>
  4092e5:	add    r13,QWORD PTR [rbx+0x28]
  4092e9:	mov    QWORD PTR [rbx+0x28],r13
  4092ed:	jmp    40928e <flatcc_json_printer_uint16_struct_field@@Base+0x7e>
  4092ef:	nop
  4092f0:	lea    rdx,[rax+0x1]
  4092f4:	mov    QWORD PTR [rbx+0x28],rdx
  4092f8:	mov    BYTE PTR [rax],0xa
  4092fb:	movzx  eax,BYTE PTR [rbx+0x31]
  4092ff:	mov    rdi,QWORD PTR [rbx+0x28]
  409303:	imul   eax,DWORD PTR [rbx+0x38]
  409307:	movsxd rbp,eax
  40930a:	lea    rax,[rdi+rbp*1]
  40930e:	cmp    QWORD PTR [rbx+0x20],rax
  409312:	jae    409330 <flatcc_json_printer_uint16_struct_field@@Base+0x120>
  409314:	mov    rsi,rbp
  409317:	mov    rdi,rbx
  40931a:	call   405350 <test_print@@Base+0xe80>
  40931f:	mov    rax,QWORD PTR [rbx+0x28]
  409323:	jmp    40925d <flatcc_json_printer_uint16_struct_field@@Base+0x4d>
  409328:	nop    DWORD PTR [rax+rax*1+0x0]
  409330:	mov    rdx,rbp
  409333:	mov    esi,0x20
  409338:	call   403200 <memset@plt>
  40933d:	mov    rax,QWORD PTR [rbx+0x28]
  409341:	add    rax,rbp
  409344:	mov    QWORD PTR [rbx+0x28],rax
  409348:	jmp    40925d <flatcc_json_printer_uint16_struct_field@@Base+0x4d>
  40934d:	nop    DWORD PTR [rax]

0000000000409350 <flatcc_json_printer_uint32_struct_field@@Base>:
  409350:	endbr64 
  409354:	push   r14
  409356:	mov    r14,r8
  409359:	push   r13
  40935b:	push   r12
  40935d:	push   rbp
  40935e:	push   rbx
  40935f:	mov    rbx,rdi
  409362:	mov    r12d,DWORD PTR [rdx+rcx*1]
  409366:	mov    rax,QWORD PTR [rdi+0x28]
  40936a:	test   esi,esi
  40936c:	je     40937d <flatcc_json_printer_uint32_struct_field@@Base+0x2d>
  40936e:	lea    rdx,[rax+0x1]
  409372:	mov    QWORD PTR [rdi+0x28],rdx
  409376:	mov    BYTE PTR [rax],0x2c
  409379:	mov    rax,QWORD PTR [rdi+0x28]
  40937d:	cmp    BYTE PTR [rbx+0x31],0x0
  409381:	movsxd r13,r9d
  409384:	jne    409430 <flatcc_json_printer_uint32_struct_field@@Base+0xe0>
  40938a:	cmp    QWORD PTR [rbx+0x20],rax
  40938e:	ja     40939c <flatcc_json_printer_uint32_struct_field@@Base+0x4c>
  409390:	xor    esi,esi
  409392:	mov    rdi,rbx
  409395:	call   QWORD PTR [rbx+0x48]
  409398:	mov    rax,QWORD PTR [rbx+0x28]
  40939c:	mov    BYTE PTR [rax],0x22
  40939f:	xor    edi,edi
  4093a1:	mov    rdx,r13
  4093a4:	cmp    BYTE PTR [rbx+0x32],0x0
  4093a8:	sete   dil
  4093ac:	add    rdi,QWORD PTR [rbx+0x28]
  4093b0:	lea    rax,[rdi+r13*1]
  4093b4:	mov    QWORD PTR [rbx+0x28],rdi
  4093b8:	mov    rsi,r14
  4093bb:	cmp    QWORD PTR [rbx+0x20],rax
  4093bf:	ja     409420 <flatcc_json_printer_uint32_struct_field@@Base+0xd0>
  4093c1:	mov    rdi,rbx
  4093c4:	call   4052c0 <test_print@@Base+0xdf0>
  4093c9:	mov    r13,QWORD PTR [rbx+0x28]
  4093cd:	mov    BYTE PTR [r13+0x0],0x22
  4093d2:	xor    eax,eax
  4093d4:	mov    edi,r12d
  4093d7:	cmp    BYTE PTR [rbx+0x32],0x0
  4093db:	sete   al
  4093de:	add    rax,QWORD PTR [rbx+0x28]
  4093e2:	lea    rdx,[rax+0x1]
  4093e6:	mov    QWORD PTR [rbx+0x28],rdx
  4093ea:	mov    BYTE PTR [rax],0x3a
  4093ed:	xor    esi,esi
  4093ef:	mov    rax,QWORD PTR [rbx+0x28]
  4093f3:	mov    BYTE PTR [rax],0x20
  4093f6:	cmp    BYTE PTR [rbx+0x31],0x0
  4093fa:	setne  sil
  4093fe:	add    rsi,QWORD PTR [rbx+0x28]
  409402:	mov    QWORD PTR [rbx+0x28],rsi
  409406:	call   404950 <test_print@@Base+0x480>
  40940b:	cdqe   
  40940d:	add    QWORD PTR [rbx+0x28],rax
  409411:	pop    rbx
  409412:	pop    rbp
  409413:	pop    r12
  409415:	pop    r13
  409417:	pop    r14
  409419:	ret    
  40941a:	nop    WORD PTR [rax+rax*1+0x0]
  409420:	call   403240 <memcpy@plt>
  409425:	add    r13,QWORD PTR [rbx+0x28]
  409429:	mov    QWORD PTR [rbx+0x28],r13
  40942d:	jmp    4093cd <flatcc_json_printer_uint32_struct_field@@Base+0x7d>
  40942f:	nop
  409430:	lea    rdx,[rax+0x1]
  409434:	mov    QWORD PTR [rbx+0x28],rdx
  409438:	mov    BYTE PTR [rax],0xa
  40943b:	movzx  eax,BYTE PTR [rbx+0x31]
  40943f:	mov    rdi,QWORD PTR [rbx+0x28]
  409443:	imul   eax,DWORD PTR [rbx+0x38]
  409447:	movsxd rbp,eax
  40944a:	lea    rax,[rdi+rbp*1]
  40944e:	cmp    QWORD PTR [rbx+0x20],rax
  409452:	jae    409470 <flatcc_json_printer_uint32_struct_field@@Base+0x120>
  409454:	mov    rsi,rbp
  409457:	mov    rdi,rbx
  40945a:	call   405350 <test_print@@Base+0xe80>
  40945f:	mov    rax,QWORD PTR [rbx+0x28]
  409463:	jmp    40939c <flatcc_json_printer_uint32_struct_field@@Base+0x4c>
  409468:	nop    DWORD PTR [rax+rax*1+0x0]
  409470:	mov    rdx,rbp
  409473:	mov    esi,0x20
  409478:	call   403200 <memset@plt>
  40947d:	mov    rax,QWORD PTR [rbx+0x28]
  409481:	add    rax,rbp
  409484:	mov    QWORD PTR [rbx+0x28],rax
  409488:	jmp    40939c <flatcc_json_printer_uint32_struct_field@@Base+0x4c>
  40948d:	nop    DWORD PTR [rax]

0000000000409490 <flatcc_json_printer_uint64_struct_field@@Base>:
  409490:	endbr64 
  409494:	push   r14
  409496:	mov    r14,r8
  409499:	push   r13
  40949b:	push   r12
  40949d:	push   rbp
  40949e:	push   rbx
  40949f:	mov    rbx,rdi
  4094a2:	mov    r12,QWORD PTR [rdx+rcx*1]
  4094a6:	mov    rax,QWORD PTR [rdi+0x28]
  4094aa:	test   esi,esi
  4094ac:	je     4094bd <flatcc_json_printer_uint64_struct_field@@Base+0x2d>
  4094ae:	lea    rdx,[rax+0x1]
  4094b2:	mov    QWORD PTR [rdi+0x28],rdx
  4094b6:	mov    BYTE PTR [rax],0x2c
  4094b9:	mov    rax,QWORD PTR [rdi+0x28]
  4094bd:	cmp    BYTE PTR [rbx+0x31],0x0
  4094c1:	movsxd r13,r9d
  4094c4:	jne    409570 <flatcc_json_printer_uint64_struct_field@@Base+0xe0>
  4094ca:	cmp    QWORD PTR [rbx+0x20],rax
  4094ce:	ja     4094dc <flatcc_json_printer_uint64_struct_field@@Base+0x4c>
  4094d0:	xor    esi,esi
  4094d2:	mov    rdi,rbx
  4094d5:	call   QWORD PTR [rbx+0x48]
  4094d8:	mov    rax,QWORD PTR [rbx+0x28]
  4094dc:	mov    BYTE PTR [rax],0x22
  4094df:	xor    edi,edi
  4094e1:	mov    rdx,r13
  4094e4:	cmp    BYTE PTR [rbx+0x32],0x0
  4094e8:	sete   dil
  4094ec:	add    rdi,QWORD PTR [rbx+0x28]
  4094f0:	lea    rax,[rdi+r13*1]
  4094f4:	mov    QWORD PTR [rbx+0x28],rdi
  4094f8:	mov    rsi,r14
  4094fb:	cmp    QWORD PTR [rbx+0x20],rax
  4094ff:	ja     409560 <flatcc_json_printer_uint64_struct_field@@Base+0xd0>
  409501:	mov    rdi,rbx
  409504:	call   4052c0 <test_print@@Base+0xdf0>
  409509:	mov    r13,QWORD PTR [rbx+0x28]
  40950d:	mov    BYTE PTR [r13+0x0],0x22
  409512:	xor    eax,eax
  409514:	mov    rdi,r12
  409517:	cmp    BYTE PTR [rbx+0x32],0x0
  40951b:	sete   al
  40951e:	add    rax,QWORD PTR [rbx+0x28]
  409522:	lea    rdx,[rax+0x1]
  409526:	mov    QWORD PTR [rbx+0x28],rdx
  40952a:	mov    BYTE PTR [rax],0x3a
  40952d:	xor    esi,esi
  40952f:	mov    rax,QWORD PTR [rbx+0x28]
  409533:	mov    BYTE PTR [rax],0x20
  409536:	cmp    BYTE PTR [rbx+0x31],0x0
  40953a:	setne  sil
  40953e:	add    rsi,QWORD PTR [rbx+0x28]
  409542:	mov    QWORD PTR [rbx+0x28],rsi
  409546:	call   404c00 <test_print@@Base+0x730>
  40954b:	cdqe   
  40954d:	add    QWORD PTR [rbx+0x28],rax
  409551:	pop    rbx
  409552:	pop    rbp
  409553:	pop    r12
  409555:	pop    r13
  409557:	pop    r14
  409559:	ret    
  40955a:	nop    WORD PTR [rax+rax*1+0x0]
  409560:	call   403240 <memcpy@plt>
  409565:	add    r13,QWORD PTR [rbx+0x28]
  409569:	mov    QWORD PTR [rbx+0x28],r13
  40956d:	jmp    40950d <flatcc_json_printer_uint64_struct_field@@Base+0x7d>
  40956f:	nop
  409570:	lea    rdx,[rax+0x1]
  409574:	mov    QWORD PTR [rbx+0x28],rdx
  409578:	mov    BYTE PTR [rax],0xa
  40957b:	movzx  eax,BYTE PTR [rbx+0x31]
  40957f:	mov    rdi,QWORD PTR [rbx+0x28]
  409583:	imul   eax,DWORD PTR [rbx+0x38]
  409587:	movsxd rbp,eax
  40958a:	lea    rax,[rdi+rbp*1]
  40958e:	cmp    QWORD PTR [rbx+0x20],rax
  409592:	jae    4095b0 <flatcc_json_printer_uint64_struct_field@@Base+0x120>
  409594:	mov    rsi,rbp
  409597:	mov    rdi,rbx
  40959a:	call   405350 <test_print@@Base+0xe80>
  40959f:	mov    rax,QWORD PTR [rbx+0x28]
  4095a3:	jmp    4094dc <flatcc_json_printer_uint64_struct_field@@Base+0x4c>
  4095a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4095b0:	mov    rdx,rbp
  4095b3:	mov    esi,0x20
  4095b8:	call   403200 <memset@plt>
  4095bd:	mov    rax,QWORD PTR [rbx+0x28]
  4095c1:	add    rax,rbp
  4095c4:	mov    QWORD PTR [rbx+0x28],rax
  4095c8:	jmp    4094dc <flatcc_json_printer_uint64_struct_field@@Base+0x4c>
  4095cd:	nop    DWORD PTR [rax]

00000000004095d0 <flatcc_json_printer_int8_struct_field@@Base>:
  4095d0:	endbr64 
  4095d4:	push   r14
  4095d6:	mov    r14,r8
  4095d9:	push   r13
  4095db:	push   r12
  4095dd:	push   rbp
  4095de:	push   rbx
  4095df:	mov    rbx,rdi
  4095e2:	movzx  r12d,BYTE PTR [rdx+rcx*1]
  4095e7:	mov    rax,QWORD PTR [rdi+0x28]
  4095eb:	test   esi,esi
  4095ed:	je     4095fe <flatcc_json_printer_int8_struct_field@@Base+0x2e>
  4095ef:	lea    rdx,[rax+0x1]
  4095f3:	mov    QWORD PTR [rdi+0x28],rdx
  4095f7:	mov    BYTE PTR [rax],0x2c
  4095fa:	mov    rax,QWORD PTR [rdi+0x28]
  4095fe:	cmp    BYTE PTR [rbx+0x31],0x0
  409602:	movsxd r13,r9d
  409605:	jne    4096d8 <flatcc_json_printer_int8_struct_field@@Base+0x108>
  40960b:	cmp    QWORD PTR [rbx+0x20],rax
  40960f:	ja     40961d <flatcc_json_printer_int8_struct_field@@Base+0x4d>
  409611:	xor    esi,esi
  409613:	mov    rdi,rbx
  409616:	call   QWORD PTR [rbx+0x48]
  409619:	mov    rax,QWORD PTR [rbx+0x28]
  40961d:	mov    BYTE PTR [rax],0x22
  409620:	xor    edi,edi
  409622:	mov    rdx,r13
  409625:	cmp    BYTE PTR [rbx+0x32],0x0
  409629:	sete   dil
  40962d:	add    rdi,QWORD PTR [rbx+0x28]
  409631:	lea    rax,[rdi+r13*1]
  409635:	mov    QWORD PTR [rbx+0x28],rdi
  409639:	mov    rsi,r14
  40963c:	cmp    QWORD PTR [rbx+0x20],rax
  409640:	ja     4096c0 <flatcc_json_printer_int8_struct_field@@Base+0xf0>
  409642:	mov    rdi,rbx
  409645:	call   4052c0 <test_print@@Base+0xdf0>
  40964a:	mov    r13,QWORD PTR [rbx+0x28]
  40964e:	mov    BYTE PTR [r13+0x0],0x22
  409653:	xor    eax,eax
  409655:	movsx  r8d,r12b
  409659:	cmp    BYTE PTR [rbx+0x32],0x0
  40965d:	sete   al
  409660:	add    rax,QWORD PTR [rbx+0x28]
  409664:	lea    rdx,[rax+0x1]
  409668:	mov    QWORD PTR [rbx+0x28],rdx
  40966c:	mov    BYTE PTR [rax],0x3a
  40966f:	xor    esi,esi
  409671:	mov    rax,QWORD PTR [rbx+0x28]
  409675:	mov    BYTE PTR [rax],0x20
  409678:	cmp    BYTE PTR [rbx+0x31],0x0
  40967c:	setne  sil
  409680:	add    rsi,QWORD PTR [rbx+0x28]
  409684:	mov    QWORD PTR [rbx+0x28],rsi
  409688:	shr    r8d,0x1f
  40968c:	test   r12b,r12b
  40968f:	jns    40969a <flatcc_json_printer_int8_struct_field@@Base+0xca>
  409691:	mov    BYTE PTR [rsi],0x2d
  409694:	neg    r12d
  409697:	inc    rsi
  40969a:	movzx  edi,r12b
  40969e:	call   405590 <test_print@@Base+0x10c0>
  4096a3:	add    r8d,eax
  4096a6:	movsxd r8,r8d
  4096a9:	add    QWORD PTR [rbx+0x28],r8
  4096ad:	pop    rbx
  4096ae:	pop    rbp
  4096af:	pop    r12
  4096b1:	pop    r13
  4096b3:	pop    r14
  4096b5:	ret    
  4096b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4096c0:	call   403240 <memcpy@plt>
  4096c5:	add    r13,QWORD PTR [rbx+0x28]
  4096c9:	mov    QWORD PTR [rbx+0x28],r13
  4096cd:	jmp    40964e <flatcc_json_printer_int8_struct_field@@Base+0x7e>
  4096d2:	nop    WORD PTR [rax+rax*1+0x0]
  4096d8:	lea    rdx,[rax+0x1]
  4096dc:	mov    QWORD PTR [rbx+0x28],rdx
  4096e0:	mov    BYTE PTR [rax],0xa
  4096e3:	movzx  eax,BYTE PTR [rbx+0x31]
  4096e7:	mov    rdi,QWORD PTR [rbx+0x28]
  4096eb:	imul   eax,DWORD PTR [rbx+0x38]
  4096ef:	movsxd rbp,eax
  4096f2:	lea    rax,[rdi+rbp*1]
  4096f6:	cmp    QWORD PTR [rbx+0x20],rax
  4096fa:	jae    409710 <flatcc_json_printer_int8_struct_field@@Base+0x140>
  4096fc:	mov    rsi,rbp
  4096ff:	mov    rdi,rbx
  409702:	call   405350 <test_print@@Base+0xe80>
  409707:	mov    rax,QWORD PTR [rbx+0x28]
  40970b:	jmp    40961d <flatcc_json_printer_int8_struct_field@@Base+0x4d>
  409710:	mov    rdx,rbp
  409713:	mov    esi,0x20
  409718:	call   403200 <memset@plt>
  40971d:	mov    rax,QWORD PTR [rbx+0x28]
  409721:	add    rax,rbp
  409724:	mov    QWORD PTR [rbx+0x28],rax
  409728:	jmp    40961d <flatcc_json_printer_int8_struct_field@@Base+0x4d>
  40972d:	nop    DWORD PTR [rax]

0000000000409730 <flatcc_json_printer_int16_struct_field@@Base>:
  409730:	endbr64 
  409734:	push   r14
  409736:	mov    r14,r8
  409739:	push   r13
  40973b:	push   r12
  40973d:	push   rbp
  40973e:	push   rbx
  40973f:	mov    rbx,rdi
  409742:	movzx  r12d,WORD PTR [rdx+rcx*1]
  409747:	mov    rax,QWORD PTR [rdi+0x28]
  40974b:	test   esi,esi
  40974d:	je     40975e <flatcc_json_printer_int16_struct_field@@Base+0x2e>
  40974f:	lea    rdx,[rax+0x1]
  409753:	mov    QWORD PTR [rdi+0x28],rdx
  409757:	mov    BYTE PTR [rax],0x2c
  40975a:	mov    rax,QWORD PTR [rdi+0x28]
  40975e:	cmp    BYTE PTR [rbx+0x31],0x0
  409762:	movsxd r13,r9d
  409765:	jne    409838 <flatcc_json_printer_int16_struct_field@@Base+0x108>
  40976b:	cmp    QWORD PTR [rbx+0x20],rax
  40976f:	ja     40977d <flatcc_json_printer_int16_struct_field@@Base+0x4d>
  409771:	xor    esi,esi
  409773:	mov    rdi,rbx
  409776:	call   QWORD PTR [rbx+0x48]
  409779:	mov    rax,QWORD PTR [rbx+0x28]
  40977d:	mov    BYTE PTR [rax],0x22
  409780:	xor    edi,edi
  409782:	mov    rdx,r13
  409785:	cmp    BYTE PTR [rbx+0x32],0x0
  409789:	sete   dil
  40978d:	add    rdi,QWORD PTR [rbx+0x28]
  409791:	lea    rax,[rdi+r13*1]
  409795:	mov    QWORD PTR [rbx+0x28],rdi
  409799:	mov    rsi,r14
  40979c:	cmp    QWORD PTR [rbx+0x20],rax
  4097a0:	ja     409820 <flatcc_json_printer_int16_struct_field@@Base+0xf0>
  4097a2:	mov    rdi,rbx
  4097a5:	call   4052c0 <test_print@@Base+0xdf0>
  4097aa:	mov    r13,QWORD PTR [rbx+0x28]
  4097ae:	mov    BYTE PTR [r13+0x0],0x22
  4097b3:	xor    eax,eax
  4097b5:	movsx  r11d,r12w
  4097b9:	cmp    BYTE PTR [rbx+0x32],0x0
  4097bd:	sete   al
  4097c0:	add    rax,QWORD PTR [rbx+0x28]
  4097c4:	lea    rdx,[rax+0x1]
  4097c8:	mov    QWORD PTR [rbx+0x28],rdx
  4097cc:	mov    BYTE PTR [rax],0x3a
  4097cf:	xor    esi,esi
  4097d1:	mov    rax,QWORD PTR [rbx+0x28]
  4097d5:	mov    BYTE PTR [rax],0x20
  4097d8:	cmp    BYTE PTR [rbx+0x31],0x0
  4097dc:	setne  sil
  4097e0:	add    rsi,QWORD PTR [rbx+0x28]
  4097e4:	mov    QWORD PTR [rbx+0x28],rsi
  4097e8:	shr    r11d,0x1f
  4097ec:	test   r12w,r12w
  4097f0:	jns    4097fb <flatcc_json_printer_int16_struct_field@@Base+0xcb>
  4097f2:	mov    BYTE PTR [rsi],0x2d
  4097f5:	neg    r12d
  4097f8:	inc    rsi
  4097fb:	movzx  edi,r12w
  4097ff:	call   404820 <test_print@@Base+0x350>
  409804:	add    r11d,eax
  409807:	movsxd r11,r11d
  40980a:	add    QWORD PTR [rbx+0x28],r11
  40980e:	pop    rbx
  40980f:	pop    rbp
  409810:	pop    r12
  409812:	pop    r13
  409814:	pop    r14
  409816:	ret    
  409817:	nop    WORD PTR [rax+rax*1+0x0]
  409820:	call   403240 <memcpy@plt>
  409825:	add    r13,QWORD PTR [rbx+0x28]
  409829:	mov    QWORD PTR [rbx+0x28],r13
  40982d:	jmp    4097ae <flatcc_json_printer_int16_struct_field@@Base+0x7e>
  409832:	nop    WORD PTR [rax+rax*1+0x0]
  409838:	lea    rdx,[rax+0x1]
  40983c:	mov    QWORD PTR [rbx+0x28],rdx
  409840:	mov    BYTE PTR [rax],0xa
  409843:	movzx  eax,BYTE PTR [rbx+0x31]
  409847:	mov    rdi,QWORD PTR [rbx+0x28]
  40984b:	imul   eax,DWORD PTR [rbx+0x38]
  40984f:	movsxd rbp,eax
  409852:	lea    rax,[rdi+rbp*1]
  409856:	cmp    QWORD PTR [rbx+0x20],rax
  40985a:	jae    409870 <flatcc_json_printer_int16_struct_field@@Base+0x140>
  40985c:	mov    rsi,rbp
  40985f:	mov    rdi,rbx
  409862:	call   405350 <test_print@@Base+0xe80>
  409867:	mov    rax,QWORD PTR [rbx+0x28]
  40986b:	jmp    40977d <flatcc_json_printer_int16_struct_field@@Base+0x4d>
  409870:	mov    rdx,rbp
  409873:	mov    esi,0x20
  409878:	call   403200 <memset@plt>
  40987d:	mov    rax,QWORD PTR [rbx+0x28]
  409881:	add    rax,rbp
  409884:	mov    QWORD PTR [rbx+0x28],rax
  409888:	jmp    40977d <flatcc_json_printer_int16_struct_field@@Base+0x4d>
  40988d:	nop    DWORD PTR [rax]

0000000000409890 <flatcc_json_printer_int32_struct_field@@Base>:
  409890:	endbr64 
  409894:	push   r14
  409896:	mov    r14,r8
  409899:	push   r13
  40989b:	push   r12
  40989d:	push   rbp
  40989e:	push   rbx
  40989f:	mov    rbx,rdi
  4098a2:	mov    r13d,DWORD PTR [rdx+rcx*1]
  4098a6:	mov    rax,QWORD PTR [rdi+0x28]
  4098aa:	test   esi,esi
  4098ac:	je     4098bd <flatcc_json_printer_int32_struct_field@@Base+0x2d>
  4098ae:	lea    rdx,[rax+0x1]
  4098b2:	mov    QWORD PTR [rdi+0x28],rdx
  4098b6:	mov    BYTE PTR [rax],0x2c
  4098b9:	mov    rax,QWORD PTR [rdi+0x28]
  4098bd:	cmp    BYTE PTR [rbx+0x31],0x0
  4098c1:	movsxd r12,r9d
  4098c4:	jne    409990 <flatcc_json_printer_int32_struct_field@@Base+0x100>
  4098ca:	cmp    QWORD PTR [rbx+0x20],rax
  4098ce:	ja     4098dc <flatcc_json_printer_int32_struct_field@@Base+0x4c>
  4098d0:	xor    esi,esi
  4098d2:	mov    rdi,rbx
  4098d5:	call   QWORD PTR [rbx+0x48]
  4098d8:	mov    rax,QWORD PTR [rbx+0x28]
  4098dc:	mov    BYTE PTR [rax],0x22
  4098df:	xor    edi,edi
  4098e1:	mov    rdx,r12
  4098e4:	cmp    BYTE PTR [rbx+0x32],0x0
  4098e8:	sete   dil
  4098ec:	add    rdi,QWORD PTR [rbx+0x28]
  4098f0:	lea    rax,[rdi+r12*1]
  4098f4:	mov    QWORD PTR [rbx+0x28],rdi
  4098f8:	mov    rsi,r14
  4098fb:	cmp    QWORD PTR [rbx+0x20],rax
  4098ff:	ja     409978 <flatcc_json_printer_int32_struct_field@@Base+0xe8>
  409901:	mov    rdi,rbx
  409904:	call   4052c0 <test_print@@Base+0xdf0>
  409909:	mov    r12,QWORD PTR [rbx+0x28]
  40990d:	mov    BYTE PTR [r12],0x22
  409912:	xor    eax,eax
  409914:	mov    ebp,r13d
  409917:	cmp    BYTE PTR [rbx+0x32],0x0
  40991b:	sete   al
  40991e:	add    rax,QWORD PTR [rbx+0x28]
  409922:	lea    rdx,[rax+0x1]
  409926:	mov    QWORD PTR [rbx+0x28],rdx
  40992a:	mov    BYTE PTR [rax],0x3a
  40992d:	xor    esi,esi
  40992f:	mov    rax,QWORD PTR [rbx+0x28]
  409933:	mov    BYTE PTR [rax],0x20
  409936:	cmp    BYTE PTR [rbx+0x31],0x0
  40993a:	setne  sil
  40993e:	add    rsi,QWORD PTR [rbx+0x28]
  409942:	mov    QWORD PTR [rbx+0x28],rsi
  409946:	shr    ebp,0x1f
  409949:	test   r13d,r13d
  40994c:	jns    409957 <flatcc_json_printer_int32_struct_field@@Base+0xc7>
  40994e:	mov    BYTE PTR [rsi],0x2d
  409951:	neg    r13d
  409954:	inc    rsi
  409957:	mov    edi,r13d
  40995a:	call   404950 <test_print@@Base+0x480>
  40995f:	add    ebp,eax
  409961:	movsxd rbp,ebp
  409964:	add    QWORD PTR [rbx+0x28],rbp
  409968:	pop    rbx
  409969:	pop    rbp
  40996a:	pop    r12
  40996c:	pop    r13
  40996e:	pop    r14
  409970:	ret    
  409971:	nop    DWORD PTR [rax+0x0]
  409978:	call   403240 <memcpy@plt>
  40997d:	add    r12,QWORD PTR [rbx+0x28]
  409981:	mov    QWORD PTR [rbx+0x28],r12
  409985:	jmp    40990d <flatcc_json_printer_int32_struct_field@@Base+0x7d>
  409987:	nop    WORD PTR [rax+rax*1+0x0]
  409990:	lea    rdx,[rax+0x1]
  409994:	mov    QWORD PTR [rbx+0x28],rdx
  409998:	mov    BYTE PTR [rax],0xa
  40999b:	movzx  eax,BYTE PTR [rbx+0x31]
  40999f:	mov    rdi,QWORD PTR [rbx+0x28]
  4099a3:	imul   eax,DWORD PTR [rbx+0x38]
  4099a7:	movsxd rbp,eax
  4099aa:	lea    rax,[rdi+rbp*1]
  4099ae:	cmp    QWORD PTR [rbx+0x20],rax
  4099b2:	jae    4099d0 <flatcc_json_printer_int32_struct_field@@Base+0x140>
  4099b4:	mov    rsi,rbp
  4099b7:	mov    rdi,rbx
  4099ba:	call   405350 <test_print@@Base+0xe80>
  4099bf:	mov    rax,QWORD PTR [rbx+0x28]
  4099c3:	jmp    4098dc <flatcc_json_printer_int32_struct_field@@Base+0x4c>
  4099c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4099d0:	mov    rdx,rbp
  4099d3:	mov    esi,0x20
  4099d8:	call   403200 <memset@plt>
  4099dd:	mov    rax,QWORD PTR [rbx+0x28]
  4099e1:	add    rax,rbp
  4099e4:	mov    QWORD PTR [rbx+0x28],rax
  4099e8:	jmp    4098dc <flatcc_json_printer_int32_struct_field@@Base+0x4c>
  4099ed:	nop    DWORD PTR [rax]

00000000004099f0 <flatcc_json_printer_int64_struct_field@@Base>:
  4099f0:	endbr64 
  4099f4:	push   r14
  4099f6:	mov    r14,r8
  4099f9:	push   r13
  4099fb:	push   r12
  4099fd:	push   rbp
  4099fe:	push   rbx
  4099ff:	mov    rbx,rdi
  409a02:	mov    r13,QWORD PTR [rdx+rcx*1]
  409a06:	mov    rax,QWORD PTR [rdi+0x28]
  409a0a:	test   esi,esi
  409a0c:	je     409a1d <flatcc_json_printer_int64_struct_field@@Base+0x2d>
  409a0e:	lea    rdx,[rax+0x1]
  409a12:	mov    QWORD PTR [rdi+0x28],rdx
  409a16:	mov    BYTE PTR [rax],0x2c
  409a19:	mov    rax,QWORD PTR [rdi+0x28]
  409a1d:	cmp    BYTE PTR [rbx+0x31],0x0
  409a21:	movsxd r12,r9d
  409a24:	jne    409af0 <flatcc_json_printer_int64_struct_field@@Base+0x100>
  409a2a:	cmp    QWORD PTR [rbx+0x20],rax
  409a2e:	ja     409a3c <flatcc_json_printer_int64_struct_field@@Base+0x4c>
  409a30:	xor    esi,esi
  409a32:	mov    rdi,rbx
  409a35:	call   QWORD PTR [rbx+0x48]
  409a38:	mov    rax,QWORD PTR [rbx+0x28]
  409a3c:	mov    BYTE PTR [rax],0x22
  409a3f:	xor    edi,edi
  409a41:	mov    rdx,r12
  409a44:	cmp    BYTE PTR [rbx+0x32],0x0
  409a48:	sete   dil
  409a4c:	add    rdi,QWORD PTR [rbx+0x28]
  409a50:	lea    rax,[rdi+r12*1]
  409a54:	mov    QWORD PTR [rbx+0x28],rdi
  409a58:	mov    rsi,r14
  409a5b:	cmp    QWORD PTR [rbx+0x20],rax
  409a5f:	ja     409ad8 <flatcc_json_printer_int64_struct_field@@Base+0xe8>
  409a61:	mov    rdi,rbx
  409a64:	call   4052c0 <test_print@@Base+0xdf0>
  409a69:	mov    r12,QWORD PTR [rbx+0x28]
  409a6d:	mov    BYTE PTR [r12],0x22
  409a72:	xor    eax,eax
  409a74:	mov    rbp,r13
  409a77:	cmp    BYTE PTR [rbx+0x32],0x0
  409a7b:	sete   al
  409a7e:	add    rax,QWORD PTR [rbx+0x28]
  409a82:	lea    rdx,[rax+0x1]
  409a86:	mov    QWORD PTR [rbx+0x28],rdx
  409a8a:	mov    BYTE PTR [rax],0x3a
  409a8d:	xor    esi,esi
  409a8f:	mov    rax,QWORD PTR [rbx+0x28]
  409a93:	mov    BYTE PTR [rax],0x20
  409a96:	cmp    BYTE PTR [rbx+0x31],0x0
  409a9a:	setne  sil
  409a9e:	add    rsi,QWORD PTR [rbx+0x28]
  409aa2:	mov    QWORD PTR [rbx+0x28],rsi
  409aa6:	shr    rbp,0x3f
  409aaa:	test   r13,r13
  409aad:	jns    409ab8 <flatcc_json_printer_int64_struct_field@@Base+0xc8>
  409aaf:	mov    BYTE PTR [rsi],0x2d
  409ab2:	neg    r13
  409ab5:	inc    rsi
  409ab8:	mov    rdi,r13
  409abb:	call   404c00 <test_print@@Base+0x730>
  409ac0:	add    eax,ebp
  409ac2:	cdqe   
  409ac4:	add    QWORD PTR [rbx+0x28],rax
  409ac8:	pop    rbx
  409ac9:	pop    rbp
  409aca:	pop    r12
  409acc:	pop    r13
  409ace:	pop    r14
  409ad0:	ret    
  409ad1:	nop    DWORD PTR [rax+0x0]
  409ad8:	call   403240 <memcpy@plt>
  409add:	add    r12,QWORD PTR [rbx+0x28]
  409ae1:	mov    QWORD PTR [rbx+0x28],r12
  409ae5:	jmp    409a6d <flatcc_json_printer_int64_struct_field@@Base+0x7d>
  409ae7:	nop    WORD PTR [rax+rax*1+0x0]
  409af0:	lea    rdx,[rax+0x1]
  409af4:	mov    QWORD PTR [rbx+0x28],rdx
  409af8:	mov    BYTE PTR [rax],0xa
  409afb:	movzx  eax,BYTE PTR [rbx+0x31]
  409aff:	mov    rdi,QWORD PTR [rbx+0x28]
  409b03:	imul   eax,DWORD PTR [rbx+0x38]
  409b07:	movsxd rbp,eax
  409b0a:	lea    rax,[rdi+rbp*1]
  409b0e:	cmp    QWORD PTR [rbx+0x20],rax
  409b12:	jae    409b30 <flatcc_json_printer_int64_struct_field@@Base+0x140>
  409b14:	mov    rsi,rbp
  409b17:	mov    rdi,rbx
  409b1a:	call   405350 <test_print@@Base+0xe80>
  409b1f:	mov    rax,QWORD PTR [rbx+0x28]
  409b23:	jmp    409a3c <flatcc_json_printer_int64_struct_field@@Base+0x4c>
  409b28:	nop    DWORD PTR [rax+rax*1+0x0]
  409b30:	mov    rdx,rbp
  409b33:	mov    esi,0x20
  409b38:	call   403200 <memset@plt>
  409b3d:	mov    rax,QWORD PTR [rbx+0x28]
  409b41:	add    rax,rbp
  409b44:	mov    QWORD PTR [rbx+0x28],rax
  409b48:	jmp    409a3c <flatcc_json_printer_int64_struct_field@@Base+0x4c>
  409b4d:	nop    DWORD PTR [rax]

0000000000409b50 <flatcc_json_printer_bool_struct_field@@Base>:
  409b50:	endbr64 
  409b54:	push   r14
  409b56:	mov    r14,r8
  409b59:	push   r13
  409b5b:	push   r12
  409b5d:	push   rbp
  409b5e:	push   rbx
  409b5f:	mov    rbx,rdi
  409b62:	movzx  r12d,BYTE PTR [rdx+rcx*1]
  409b67:	mov    rax,QWORD PTR [rdi+0x28]
  409b6b:	test   esi,esi
  409b6d:	je     409b7e <flatcc_json_printer_bool_struct_field@@Base+0x2e>
  409b6f:	lea    rdx,[rax+0x1]
  409b73:	mov    QWORD PTR [rdi+0x28],rdx
  409b77:	mov    BYTE PTR [rax],0x2c
  409b7a:	mov    rax,QWORD PTR [rdi+0x28]
  409b7e:	cmp    BYTE PTR [rbx+0x31],0x0
  409b82:	movsxd r13,r9d
  409b85:	jne    409c30 <flatcc_json_printer_bool_struct_field@@Base+0xe0>
  409b8b:	cmp    QWORD PTR [rbx+0x20],rax
  409b8f:	ja     409b9d <flatcc_json_printer_bool_struct_field@@Base+0x4d>
  409b91:	xor    esi,esi
  409b93:	mov    rdi,rbx
  409b96:	call   QWORD PTR [rbx+0x48]
  409b99:	mov    rax,QWORD PTR [rbx+0x28]
  409b9d:	mov    BYTE PTR [rax],0x22
  409ba0:	xor    edi,edi
  409ba2:	mov    rdx,r13
  409ba5:	cmp    BYTE PTR [rbx+0x32],0x0
  409ba9:	sete   dil
  409bad:	add    rdi,QWORD PTR [rbx+0x28]
  409bb1:	lea    rax,[rdi+r13*1]
  409bb5:	mov    QWORD PTR [rbx+0x28],rdi
  409bb9:	mov    rsi,r14
  409bbc:	cmp    QWORD PTR [rbx+0x20],rax
  409bc0:	ja     409c20 <flatcc_json_printer_bool_struct_field@@Base+0xd0>
  409bc2:	mov    rdi,rbx
  409bc5:	call   4052c0 <test_print@@Base+0xdf0>
  409bca:	mov    r13,QWORD PTR [rbx+0x28]
  409bce:	mov    BYTE PTR [r13+0x0],0x22
  409bd3:	xor    eax,eax
  409bd5:	movzx  edi,r12b
  409bd9:	cmp    BYTE PTR [rbx+0x32],0x0
  409bdd:	sete   al
  409be0:	add    rax,QWORD PTR [rbx+0x28]
  409be4:	lea    rdx,[rax+0x1]
  409be8:	mov    QWORD PTR [rbx+0x28],rdx
  409bec:	mov    BYTE PTR [rax],0x3a
  409bef:	xor    esi,esi
  409bf1:	mov    rax,QWORD PTR [rbx+0x28]
  409bf5:	mov    BYTE PTR [rax],0x20
  409bf8:	cmp    BYTE PTR [rbx+0x31],0x0
  409bfc:	setne  sil
  409c00:	add    rsi,QWORD PTR [rbx+0x28]
  409c04:	mov    QWORD PTR [rbx+0x28],rsi
  409c08:	call   405560 <test_print@@Base+0x1090>
  409c0d:	cdqe   
  409c0f:	add    QWORD PTR [rbx+0x28],rax
  409c13:	pop    rbx
  409c14:	pop    rbp
  409c15:	pop    r12
  409c17:	pop    r13
  409c19:	pop    r14
  409c1b:	ret    
  409c1c:	nop    DWORD PTR [rax+0x0]
  409c20:	call   403240 <memcpy@plt>
  409c25:	add    r13,QWORD PTR [rbx+0x28]
  409c29:	mov    QWORD PTR [rbx+0x28],r13
  409c2d:	jmp    409bce <flatcc_json_printer_bool_struct_field@@Base+0x7e>
  409c2f:	nop
  409c30:	lea    rdx,[rax+0x1]
  409c34:	mov    QWORD PTR [rbx+0x28],rdx
  409c38:	mov    BYTE PTR [rax],0xa
  409c3b:	movzx  eax,BYTE PTR [rbx+0x31]
  409c3f:	mov    rdi,QWORD PTR [rbx+0x28]
  409c43:	imul   eax,DWORD PTR [rbx+0x38]
  409c47:	movsxd rbp,eax
  409c4a:	lea    rax,[rdi+rbp*1]
  409c4e:	cmp    QWORD PTR [rbx+0x20],rax
  409c52:	jae    409c70 <flatcc_json_printer_bool_struct_field@@Base+0x120>
  409c54:	mov    rsi,rbp
  409c57:	mov    rdi,rbx
  409c5a:	call   405350 <test_print@@Base+0xe80>
  409c5f:	mov    rax,QWORD PTR [rbx+0x28]
  409c63:	jmp    409b9d <flatcc_json_printer_bool_struct_field@@Base+0x4d>
  409c68:	nop    DWORD PTR [rax+rax*1+0x0]
  409c70:	mov    rdx,rbp
  409c73:	mov    esi,0x20
  409c78:	call   403200 <memset@plt>
  409c7d:	mov    rax,QWORD PTR [rbx+0x28]
  409c81:	add    rax,rbp
  409c84:	mov    QWORD PTR [rbx+0x28],rax
  409c88:	jmp    409b9d <flatcc_json_printer_bool_struct_field@@Base+0x4d>
  409c8d:	nop    DWORD PTR [rax]

0000000000409c90 <flatcc_json_printer_float_struct_field@@Base>:
  409c90:	endbr64 
  409c94:	push   r13
  409c96:	mov    r13,r8
  409c99:	push   r12
  409c9b:	push   rbp
  409c9c:	push   rbx
  409c9d:	mov    rbx,rdi
  409ca0:	sub    rsp,0x18
  409ca4:	vmovss xmm1,DWORD PTR [rdx+rcx*1]
  409ca9:	mov    rax,QWORD PTR [rdi+0x28]
  409cad:	vmovss DWORD PTR [rsp+0xc],xmm1
  409cb3:	test   esi,esi
  409cb5:	je     409cc6 <flatcc_json_printer_float_struct_field@@Base+0x36>
  409cb7:	lea    rdx,[rax+0x1]
  409cbb:	mov    QWORD PTR [rdi+0x28],rdx
  409cbf:	mov    BYTE PTR [rax],0x2c
  409cc2:	mov    rax,QWORD PTR [rdi+0x28]
  409cc6:	cmp    BYTE PTR [rbx+0x31],0x0
  409cca:	movsxd r12,r9d
  409ccd:	jne    409d80 <flatcc_json_printer_float_struct_field@@Base+0xf0>
  409cd3:	cmp    QWORD PTR [rbx+0x20],rax
  409cd7:	ja     409ce5 <flatcc_json_printer_float_struct_field@@Base+0x55>
  409cd9:	xor    esi,esi
  409cdb:	mov    rdi,rbx
  409cde:	call   QWORD PTR [rbx+0x48]
  409ce1:	mov    rax,QWORD PTR [rbx+0x28]
  409ce5:	mov    BYTE PTR [rax],0x22
  409ce8:	xor    edi,edi
  409cea:	mov    rdx,r12
  409ced:	cmp    BYTE PTR [rbx+0x32],0x0
  409cf1:	sete   dil
  409cf5:	add    rdi,QWORD PTR [rbx+0x28]
  409cf9:	lea    rax,[rdi+r12*1]
  409cfd:	mov    QWORD PTR [rbx+0x28],rdi
  409d01:	mov    rsi,r13
  409d04:	cmp    QWORD PTR [rbx+0x20],rax
  409d08:	ja     409d70 <flatcc_json_printer_float_struct_field@@Base+0xe0>
  409d0a:	mov    rdi,rbx
  409d0d:	call   4052c0 <test_print@@Base+0xdf0>
  409d12:	mov    r12,QWORD PTR [rbx+0x28]
  409d16:	mov    BYTE PTR [r12],0x22
  409d1b:	xor    eax,eax
  409d1d:	vxorpd xmm0,xmm0,xmm0
  409d21:	cmp    BYTE PTR [rbx+0x32],0x0
  409d25:	sete   al
  409d28:	add    rax,QWORD PTR [rbx+0x28]
  409d2c:	lea    rdx,[rax+0x1]
  409d30:	mov    QWORD PTR [rbx+0x28],rdx
  409d34:	mov    BYTE PTR [rax],0x3a
  409d37:	xor    edi,edi
  409d39:	vcvtss2sd xmm0,xmm0,DWORD PTR [rsp+0xc]
  409d3f:	mov    rax,QWORD PTR [rbx+0x28]
  409d43:	mov    BYTE PTR [rax],0x20
  409d46:	cmp    BYTE PTR [rbx+0x31],0x0
  409d4a:	setne  dil
  409d4e:	add    rdi,QWORD PTR [rbx+0x28]
  409d52:	mov    QWORD PTR [rbx+0x28],rdi
  409d56:	call   405780 <test_print@@Base+0x12b0>
  409d5b:	cdqe   
  409d5d:	add    QWORD PTR [rbx+0x28],rax
  409d61:	add    rsp,0x18
  409d65:	pop    rbx
  409d66:	pop    rbp
  409d67:	pop    r12
  409d69:	pop    r13
  409d6b:	ret    
  409d6c:	nop    DWORD PTR [rax+0x0]
  409d70:	call   403240 <memcpy@plt>
  409d75:	add    r12,QWORD PTR [rbx+0x28]
  409d79:	mov    QWORD PTR [rbx+0x28],r12
  409d7d:	jmp    409d16 <flatcc_json_printer_float_struct_field@@Base+0x86>
  409d7f:	nop
  409d80:	lea    rdx,[rax+0x1]
  409d84:	mov    QWORD PTR [rbx+0x28],rdx
  409d88:	mov    BYTE PTR [rax],0xa
  409d8b:	movzx  eax,BYTE PTR [rbx+0x31]
  409d8f:	mov    rdi,QWORD PTR [rbx+0x28]
  409d93:	imul   eax,DWORD PTR [rbx+0x38]
  409d97:	movsxd rbp,eax
  409d9a:	lea    rax,[rdi+rbp*1]
  409d9e:	cmp    QWORD PTR [rbx+0x20],rax
  409da2:	jae    409dc0 <flatcc_json_printer_float_struct_field@@Base+0x130>
  409da4:	mov    rsi,rbp
  409da7:	mov    rdi,rbx
  409daa:	call   405350 <test_print@@Base+0xe80>
  409daf:	mov    rax,QWORD PTR [rbx+0x28]
  409db3:	jmp    409ce5 <flatcc_json_printer_float_struct_field@@Base+0x55>
  409db8:	nop    DWORD PTR [rax+rax*1+0x0]
  409dc0:	mov    rdx,rbp
  409dc3:	mov    esi,0x20
  409dc8:	call   403200 <memset@plt>
  409dcd:	mov    rax,QWORD PTR [rbx+0x28]
  409dd1:	add    rax,rbp
  409dd4:	mov    QWORD PTR [rbx+0x28],rax
  409dd8:	jmp    409ce5 <flatcc_json_printer_float_struct_field@@Base+0x55>
  409ddd:	nop    DWORD PTR [rax]

0000000000409de0 <flatcc_json_printer_double_struct_field@@Base>:
  409de0:	endbr64 
  409de4:	push   r13
  409de6:	mov    r13,r8
  409de9:	push   r12
  409deb:	push   rbp
  409dec:	push   rbx
  409ded:	mov    rbx,rdi
  409df0:	sub    rsp,0x18
  409df4:	vmovsd xmm1,QWORD PTR [rdx+rcx*1]
  409df9:	mov    rax,QWORD PTR [rdi+0x28]
  409dfd:	vmovsd QWORD PTR [rsp+0x8],xmm1
  409e03:	test   esi,esi
  409e05:	je     409e16 <flatcc_json_printer_double_struct_field@@Base+0x36>
  409e07:	lea    rdx,[rax+0x1]
  409e0b:	mov    QWORD PTR [rdi+0x28],rdx
  409e0f:	mov    BYTE PTR [rax],0x2c
  409e12:	mov    rax,QWORD PTR [rdi+0x28]
  409e16:	cmp    BYTE PTR [rbx+0x31],0x0
  409e1a:	movsxd r12,r9d
  409e1d:	jne    409ed0 <flatcc_json_printer_double_struct_field@@Base+0xf0>
  409e23:	cmp    QWORD PTR [rbx+0x20],rax
  409e27:	ja     409e35 <flatcc_json_printer_double_struct_field@@Base+0x55>
  409e29:	xor    esi,esi
  409e2b:	mov    rdi,rbx
  409e2e:	call   QWORD PTR [rbx+0x48]
  409e31:	mov    rax,QWORD PTR [rbx+0x28]
  409e35:	mov    BYTE PTR [rax],0x22
  409e38:	xor    edi,edi
  409e3a:	mov    rdx,r12
  409e3d:	cmp    BYTE PTR [rbx+0x32],0x0
  409e41:	sete   dil
  409e45:	add    rdi,QWORD PTR [rbx+0x28]
  409e49:	lea    rax,[rdi+r12*1]
  409e4d:	mov    QWORD PTR [rbx+0x28],rdi
  409e51:	mov    rsi,r13
  409e54:	cmp    QWORD PTR [rbx+0x20],rax
  409e58:	ja     409ec0 <flatcc_json_printer_double_struct_field@@Base+0xe0>
  409e5a:	mov    rdi,rbx
  409e5d:	call   4052c0 <test_print@@Base+0xdf0>
  409e62:	mov    r12,QWORD PTR [rbx+0x28]
  409e66:	mov    BYTE PTR [r12],0x22
  409e6b:	xor    eax,eax
  409e6d:	vmovsd xmm0,QWORD PTR [rsp+0x8]
  409e73:	cmp    BYTE PTR [rbx+0x32],0x0
  409e77:	sete   al
  409e7a:	add    rax,QWORD PTR [rbx+0x28]
  409e7e:	lea    rdx,[rax+0x1]
  409e82:	mov    QWORD PTR [rbx+0x28],rdx
  409e86:	mov    BYTE PTR [rax],0x3a
  409e89:	xor    edi,edi
  409e8b:	mov    rax,QWORD PTR [rbx+0x28]
  409e8f:	mov    BYTE PTR [rax],0x20
  409e92:	cmp    BYTE PTR [rbx+0x31],0x0
  409e96:	setne  dil
  409e9a:	add    rdi,QWORD PTR [rbx+0x28]
  409e9e:	mov    QWORD PTR [rbx+0x28],rdi
  409ea2:	call   405780 <test_print@@Base+0x12b0>
  409ea7:	cdqe   
  409ea9:	add    QWORD PTR [rbx+0x28],rax
  409ead:	add    rsp,0x18
  409eb1:	pop    rbx
  409eb2:	pop    rbp
  409eb3:	pop    r12
  409eb5:	pop    r13
  409eb7:	ret    
  409eb8:	nop    DWORD PTR [rax+rax*1+0x0]
  409ec0:	call   403240 <memcpy@plt>
  409ec5:	add    r12,QWORD PTR [rbx+0x28]
  409ec9:	mov    QWORD PTR [rbx+0x28],r12
  409ecd:	jmp    409e66 <flatcc_json_printer_double_struct_field@@Base+0x86>
  409ecf:	nop
  409ed0:	lea    rdx,[rax+0x1]
  409ed4:	mov    QWORD PTR [rbx+0x28],rdx
  409ed8:	mov    BYTE PTR [rax],0xa
  409edb:	movzx  eax,BYTE PTR [rbx+0x31]
  409edf:	mov    rdi,QWORD PTR [rbx+0x28]
  409ee3:	imul   eax,DWORD PTR [rbx+0x38]
  409ee7:	movsxd rbp,eax
  409eea:	lea    rax,[rdi+rbp*1]
  409eee:	cmp    QWORD PTR [rbx+0x20],rax
  409ef2:	jae    409f10 <flatcc_json_printer_double_struct_field@@Base+0x130>
  409ef4:	mov    rsi,rbp
  409ef7:	mov    rdi,rbx
  409efa:	call   405350 <test_print@@Base+0xe80>
  409eff:	mov    rax,QWORD PTR [rbx+0x28]
  409f03:	jmp    409e35 <flatcc_json_printer_double_struct_field@@Base+0x55>
  409f08:	nop    DWORD PTR [rax+rax*1+0x0]
  409f10:	mov    rdx,rbp
  409f13:	mov    esi,0x20
  409f18:	call   403200 <memset@plt>
  409f1d:	mov    rax,QWORD PTR [rbx+0x28]
  409f21:	add    rax,rbp
  409f24:	mov    QWORD PTR [rbx+0x28],rax
  409f28:	jmp    409e35 <flatcc_json_printer_double_struct_field@@Base+0x55>
  409f2d:	nop    DWORD PTR [rax]

0000000000409f30 <flatcc_json_printer_uint8_enum_struct_field@@Base>:
  409f30:	endbr64 
  409f34:	push   r15
  409f36:	mov    r15,r8
  409f39:	push   r14
  409f3b:	push   r13
  409f3d:	push   r12
  409f3f:	push   rbp
  409f40:	push   rbx
  409f41:	mov    rbx,rdi
  409f44:	sub    rsp,0x8
  409f48:	mov    r13,QWORD PTR [rsp+0x40]
  409f4d:	movzx  r12d,BYTE PTR [rdx+rcx*1]
  409f52:	mov    rax,QWORD PTR [rdi+0x28]
  409f56:	test   esi,esi
  409f58:	je     409f69 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x39>
  409f5a:	lea    rdx,[rax+0x1]
  409f5e:	mov    QWORD PTR [rdi+0x28],rdx
  409f62:	mov    BYTE PTR [rax],0x2c
  409f65:	mov    rax,QWORD PTR [rdi+0x28]
  409f69:	cmp    BYTE PTR [rbx+0x31],0x0
  409f6d:	movsxd r14,r9d
  409f70:	jne    40a040 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x110>
  409f76:	cmp    QWORD PTR [rbx+0x20],rax
  409f7a:	ja     409f88 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x58>
  409f7c:	xor    esi,esi
  409f7e:	mov    rdi,rbx
  409f81:	call   QWORD PTR [rbx+0x48]
  409f84:	mov    rax,QWORD PTR [rbx+0x28]
  409f88:	mov    BYTE PTR [rax],0x22
  409f8b:	xor    edi,edi
  409f8d:	mov    rdx,r14
  409f90:	cmp    BYTE PTR [rbx+0x32],0x0
  409f94:	sete   dil
  409f98:	add    rdi,QWORD PTR [rbx+0x28]
  409f9c:	lea    rax,[rdi+r14*1]
  409fa0:	mov    QWORD PTR [rbx+0x28],rdi
  409fa4:	mov    rsi,r15
  409fa7:	cmp    QWORD PTR [rbx+0x20],rax
  409fab:	ja     40a010 <flatcc_json_printer_uint8_enum_struct_field@@Base+0xe0>
  409fad:	mov    rdi,rbx
  409fb0:	call   4052c0 <test_print@@Base+0xdf0>
  409fb5:	mov    r14,QWORD PTR [rbx+0x28]
  409fb9:	mov    BYTE PTR [r14],0x22
  409fbd:	xor    eax,eax
  409fbf:	cmp    BYTE PTR [rbx+0x32],0x0
  409fc3:	sete   al
  409fc6:	add    rax,QWORD PTR [rbx+0x28]
  409fca:	lea    rdx,[rax+0x1]
  409fce:	mov    QWORD PTR [rbx+0x28],rdx
  409fd2:	mov    BYTE PTR [rax],0x3a
  409fd5:	xor    esi,esi
  409fd7:	mov    rax,QWORD PTR [rbx+0x28]
  409fdb:	mov    BYTE PTR [rax],0x20
  409fde:	cmp    BYTE PTR [rbx+0x31],0x0
  409fe2:	setne  sil
  409fe6:	add    rsi,QWORD PTR [rbx+0x28]
  409fea:	cmp    BYTE PTR [rbx+0x33],0x0
  409fee:	mov    QWORD PTR [rbx+0x28],rsi
  409ff2:	jne    40a020 <flatcc_json_printer_uint8_enum_struct_field@@Base+0xf0>
  409ff4:	add    rsp,0x8
  409ff8:	mov    rdi,rbx
  409ffb:	pop    rbx
  409ffc:	pop    rbp
  409ffd:	movzx  esi,r12b
  40a001:	pop    r12
  40a003:	mov    rax,r13
  40a006:	pop    r13
  40a008:	pop    r14
  40a00a:	pop    r15
  40a00c:	jmp    rax
  40a00e:	xchg   ax,ax
  40a010:	call   403240 <memcpy@plt>
  40a015:	add    r14,QWORD PTR [rbx+0x28]
  40a019:	mov    QWORD PTR [rbx+0x28],r14
  40a01d:	jmp    409fb9 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x89>
  40a01f:	nop
  40a020:	movzx  edi,r12b
  40a024:	call   405590 <test_print@@Base+0x10c0>
  40a029:	cdqe   
  40a02b:	add    QWORD PTR [rbx+0x28],rax
  40a02f:	add    rsp,0x8
  40a033:	pop    rbx
  40a034:	pop    rbp
  40a035:	pop    r12
  40a037:	pop    r13
  40a039:	pop    r14
  40a03b:	pop    r15
  40a03d:	ret    
  40a03e:	xchg   ax,ax
  40a040:	lea    rdx,[rax+0x1]
  40a044:	mov    QWORD PTR [rbx+0x28],rdx
  40a048:	mov    BYTE PTR [rax],0xa
  40a04b:	movzx  eax,BYTE PTR [rbx+0x31]
  40a04f:	mov    rdi,QWORD PTR [rbx+0x28]
  40a053:	imul   eax,DWORD PTR [rbx+0x38]
  40a057:	movsxd rbp,eax
  40a05a:	lea    rax,[rdi+rbp*1]
  40a05e:	cmp    QWORD PTR [rbx+0x20],rax
  40a062:	jae    40a080 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x150>
  40a064:	mov    rsi,rbp
  40a067:	mov    rdi,rbx
  40a06a:	call   405350 <test_print@@Base+0xe80>
  40a06f:	mov    rax,QWORD PTR [rbx+0x28]
  40a073:	jmp    409f88 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x58>
  40a078:	nop    DWORD PTR [rax+rax*1+0x0]
  40a080:	mov    rdx,rbp
  40a083:	mov    esi,0x20
  40a088:	call   403200 <memset@plt>
  40a08d:	mov    rax,QWORD PTR [rbx+0x28]
  40a091:	add    rax,rbp
  40a094:	mov    QWORD PTR [rbx+0x28],rax
  40a098:	jmp    409f88 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x58>
  40a09d:	nop    DWORD PTR [rax]

000000000040a0a0 <flatcc_json_printer_uint16_enum_struct_field@@Base>:
  40a0a0:	endbr64 
  40a0a4:	push   r15
  40a0a6:	mov    r15,r8
  40a0a9:	push   r14
  40a0ab:	push   r13
  40a0ad:	push   r12
  40a0af:	push   rbp
  40a0b0:	push   rbx
  40a0b1:	mov    rbx,rdi
  40a0b4:	sub    rsp,0x8
  40a0b8:	mov    r13,QWORD PTR [rsp+0x40]
  40a0bd:	movzx  r12d,WORD PTR [rdx+rcx*1]
  40a0c2:	mov    rax,QWORD PTR [rdi+0x28]
  40a0c6:	test   esi,esi
  40a0c8:	je     40a0d9 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x39>
  40a0ca:	lea    rdx,[rax+0x1]
  40a0ce:	mov    QWORD PTR [rdi+0x28],rdx
  40a0d2:	mov    BYTE PTR [rax],0x2c
  40a0d5:	mov    rax,QWORD PTR [rdi+0x28]
  40a0d9:	cmp    BYTE PTR [rbx+0x31],0x0
  40a0dd:	movsxd r14,r9d
  40a0e0:	jne    40a1b0 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x110>
  40a0e6:	cmp    QWORD PTR [rbx+0x20],rax
  40a0ea:	ja     40a0f8 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x58>
  40a0ec:	xor    esi,esi
  40a0ee:	mov    rdi,rbx
  40a0f1:	call   QWORD PTR [rbx+0x48]
  40a0f4:	mov    rax,QWORD PTR [rbx+0x28]
  40a0f8:	mov    BYTE PTR [rax],0x22
  40a0fb:	xor    edi,edi
  40a0fd:	mov    rdx,r14
  40a100:	cmp    BYTE PTR [rbx+0x32],0x0
  40a104:	sete   dil
  40a108:	add    rdi,QWORD PTR [rbx+0x28]
  40a10c:	lea    rax,[rdi+r14*1]
  40a110:	mov    QWORD PTR [rbx+0x28],rdi
  40a114:	mov    rsi,r15
  40a117:	cmp    QWORD PTR [rbx+0x20],rax
  40a11b:	ja     40a180 <flatcc_json_printer_uint16_enum_struct_field@@Base+0xe0>
  40a11d:	mov    rdi,rbx
  40a120:	call   4052c0 <test_print@@Base+0xdf0>
  40a125:	mov    r14,QWORD PTR [rbx+0x28]
  40a129:	mov    BYTE PTR [r14],0x22
  40a12d:	xor    eax,eax
  40a12f:	cmp    BYTE PTR [rbx+0x32],0x0
  40a133:	sete   al
  40a136:	add    rax,QWORD PTR [rbx+0x28]
  40a13a:	lea    rdx,[rax+0x1]
  40a13e:	mov    QWORD PTR [rbx+0x28],rdx
  40a142:	mov    BYTE PTR [rax],0x3a
  40a145:	xor    esi,esi
  40a147:	mov    rax,QWORD PTR [rbx+0x28]
  40a14b:	mov    BYTE PTR [rax],0x20
  40a14e:	cmp    BYTE PTR [rbx+0x31],0x0
  40a152:	setne  sil
  40a156:	add    rsi,QWORD PTR [rbx+0x28]
  40a15a:	cmp    BYTE PTR [rbx+0x33],0x0
  40a15e:	mov    QWORD PTR [rbx+0x28],rsi
  40a162:	jne    40a190 <flatcc_json_printer_uint16_enum_struct_field@@Base+0xf0>
  40a164:	add    rsp,0x8
  40a168:	mov    rdi,rbx
  40a16b:	pop    rbx
  40a16c:	pop    rbp
  40a16d:	movzx  esi,r12w
  40a171:	pop    r12
  40a173:	mov    rax,r13
  40a176:	pop    r13
  40a178:	pop    r14
  40a17a:	pop    r15
  40a17c:	jmp    rax
  40a17e:	xchg   ax,ax
  40a180:	call   403240 <memcpy@plt>
  40a185:	add    r14,QWORD PTR [rbx+0x28]
  40a189:	mov    QWORD PTR [rbx+0x28],r14
  40a18d:	jmp    40a129 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x89>
  40a18f:	nop
  40a190:	movzx  edi,r12w
  40a194:	call   404820 <test_print@@Base+0x350>
  40a199:	cdqe   
  40a19b:	add    QWORD PTR [rbx+0x28],rax
  40a19f:	add    rsp,0x8
  40a1a3:	pop    rbx
  40a1a4:	pop    rbp
  40a1a5:	pop    r12
  40a1a7:	pop    r13
  40a1a9:	pop    r14
  40a1ab:	pop    r15
  40a1ad:	ret    
  40a1ae:	xchg   ax,ax
  40a1b0:	lea    rdx,[rax+0x1]
  40a1b4:	mov    QWORD PTR [rbx+0x28],rdx
  40a1b8:	mov    BYTE PTR [rax],0xa
  40a1bb:	movzx  eax,BYTE PTR [rbx+0x31]
  40a1bf:	mov    rdi,QWORD PTR [rbx+0x28]
  40a1c3:	imul   eax,DWORD PTR [rbx+0x38]
  40a1c7:	movsxd rbp,eax
  40a1ca:	lea    rax,[rdi+rbp*1]
  40a1ce:	cmp    QWORD PTR [rbx+0x20],rax
  40a1d2:	jae    40a1f0 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x150>
  40a1d4:	mov    rsi,rbp
  40a1d7:	mov    rdi,rbx
  40a1da:	call   405350 <test_print@@Base+0xe80>
  40a1df:	mov    rax,QWORD PTR [rbx+0x28]
  40a1e3:	jmp    40a0f8 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x58>
  40a1e8:	nop    DWORD PTR [rax+rax*1+0x0]
  40a1f0:	mov    rdx,rbp
  40a1f3:	mov    esi,0x20
  40a1f8:	call   403200 <memset@plt>
  40a1fd:	mov    rax,QWORD PTR [rbx+0x28]
  40a201:	add    rax,rbp
  40a204:	mov    QWORD PTR [rbx+0x28],rax
  40a208:	jmp    40a0f8 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x58>
  40a20d:	nop    DWORD PTR [rax]

000000000040a210 <flatcc_json_printer_uint32_enum_struct_field@@Base>:
  40a210:	endbr64 
  40a214:	push   r15
  40a216:	mov    r15,r8
  40a219:	push   r14
  40a21b:	push   r13
  40a21d:	push   r12
  40a21f:	push   rbp
  40a220:	push   rbx
  40a221:	mov    rbx,rdi
  40a224:	sub    rsp,0x8
  40a228:	mov    r13,QWORD PTR [rsp+0x40]
  40a22d:	mov    r12d,DWORD PTR [rdx+rcx*1]
  40a231:	mov    rax,QWORD PTR [rdi+0x28]
  40a235:	test   esi,esi
  40a237:	je     40a248 <flatcc_json_printer_uint32_enum_struct_field@@Base+0x38>
  40a239:	lea    rdx,[rax+0x1]
  40a23d:	mov    QWORD PTR [rdi+0x28],rdx
  40a241:	mov    BYTE PTR [rax],0x2c
  40a244:	mov    rax,QWORD PTR [rdi+0x28]
  40a248:	cmp    BYTE PTR [rbx+0x31],0x0
  40a24c:	movsxd r14,r9d
  40a24f:	jne    40a320 <flatcc_json_printer_uint32_enum_struct_field@@Base+0x110>
  40a255:	cmp    QWORD PTR [rbx+0x20],rax
  40a259:	ja     40a267 <flatcc_json_printer_uint32_enum_struct_field@@Base+0x57>
  40a25b:	xor    esi,esi
  40a25d:	mov    rdi,rbx
  40a260:	call   QWORD PTR [rbx+0x48]
  40a263:	mov    rax,QWORD PTR [rbx+0x28]
  40a267:	mov    BYTE PTR [rax],0x22
  40a26a:	xor    edi,edi
  40a26c:	mov    rdx,r14
  40a26f:	cmp    BYTE PTR [rbx+0x32],0x0
  40a273:	sete   dil
  40a277:	add    rdi,QWORD PTR [rbx+0x28]
  40a27b:	lea    rax,[rdi+r14*1]
  40a27f:	mov    QWORD PTR [rbx+0x28],rdi
  40a283:	mov    rsi,r15
  40a286:	cmp    QWORD PTR [rbx+0x20],rax
  40a28a:	ja     40a2f0 <flatcc_json_printer_uint32_enum_struct_field@@Base+0xe0>
  40a28c:	mov    rdi,rbx
  40a28f:	call   4052c0 <test_print@@Base+0xdf0>
  40a294:	mov    r14,QWORD PTR [rbx+0x28]
  40a298:	mov    BYTE PTR [r14],0x22
  40a29c:	xor    eax,eax
  40a29e:	cmp    BYTE PTR [rbx+0x32],0x0
  40a2a2:	sete   al
  40a2a5:	add    rax,QWORD PTR [rbx+0x28]
  40a2a9:	lea    rdx,[rax+0x1]
  40a2ad:	mov    QWORD PTR [rbx+0x28],rdx
  40a2b1:	mov    BYTE PTR [rax],0x3a
  40a2b4:	xor    esi,esi
  40a2b6:	mov    rax,QWORD PTR [rbx+0x28]
  40a2ba:	mov    BYTE PTR [rax],0x20
  40a2bd:	cmp    BYTE PTR [rbx+0x31],0x0
  40a2c1:	setne  sil
  40a2c5:	add    rsi,QWORD PTR [rbx+0x28]
  40a2c9:	cmp    BYTE PTR [rbx+0x33],0x0
  40a2cd:	mov    QWORD PTR [rbx+0x28],rsi
  40a2d1:	jne    40a300 <flatcc_json_printer_uint32_enum_struct_field@@Base+0xf0>
  40a2d3:	add    rsp,0x8
  40a2d7:	mov    rdi,rbx
  40a2da:	pop    rbx
  40a2db:	pop    rbp
  40a2dc:	mov    esi,r12d
  40a2df:	pop    r12
  40a2e1:	mov    rax,r13
  40a2e4:	pop    r13
  40a2e6:	pop    r14
  40a2e8:	pop    r15
  40a2ea:	jmp    rax
  40a2ec:	nop    DWORD PTR [rax+0x0]
  40a2f0:	call   403240 <memcpy@plt>
  40a2f5:	add    r14,QWORD PTR [rbx+0x28]
  40a2f9:	mov    QWORD PTR [rbx+0x28],r14
  40a2fd:	jmp    40a298 <flatcc_json_printer_uint32_enum_struct_field@@Base+0x88>
  40a2ff:	nop
  40a300:	mov    edi,r12d
  40a303:	call   404950 <test_print@@Base+0x480>
  40a308:	cdqe   
  40a30a:	add    QWORD PTR [rbx+0x28],rax
  40a30e:	add    rsp,0x8
  40a312:	pop    rbx
  40a313:	pop    rbp
  40a314:	pop    r12
  40a316:	pop    r13
  40a318:	pop    r14
  40a31a:	pop    r15
  40a31c:	ret    
  40a31d:	nop    DWORD PTR [rax]
  40a320:	lea    rdx,[rax+0x1]
  40a324:	mov    QWORD PTR [rbx+0x28],rdx
  40a328:	mov    BYTE PTR [rax],0xa
  40a32b:	movzx  eax,BYTE PTR [rbx+0x31]
  40a32f:	mov    rdi,QWORD PTR [rbx+0x28]
  40a333:	imul   eax,DWORD PTR [rbx+0x38]
  40a337:	movsxd rbp,eax
  40a33a:	lea    rax,[rdi+rbp*1]
  40a33e:	cmp    QWORD PTR [rbx+0x20],rax
  40a342:	jae    40a360 <flatcc_json_printer_uint32_enum_struct_field@@Base+0x150>
  40a344:	mov    rsi,rbp
  40a347:	mov    rdi,rbx
  40a34a:	call   405350 <test_print@@Base+0xe80>
  40a34f:	mov    rax,QWORD PTR [rbx+0x28]
  40a353:	jmp    40a267 <flatcc_json_printer_uint32_enum_struct_field@@Base+0x57>
  40a358:	nop    DWORD PTR [rax+rax*1+0x0]
  40a360:	mov    rdx,rbp
  40a363:	mov    esi,0x20
  40a368:	call   403200 <memset@plt>
  40a36d:	mov    rax,QWORD PTR [rbx+0x28]
  40a371:	add    rax,rbp
  40a374:	mov    QWORD PTR [rbx+0x28],rax
  40a378:	jmp    40a267 <flatcc_json_printer_uint32_enum_struct_field@@Base+0x57>
  40a37d:	nop    DWORD PTR [rax]

000000000040a380 <flatcc_json_printer_uint64_enum_struct_field@@Base>:
  40a380:	endbr64 
  40a384:	push   r15
  40a386:	mov    r15,r8
  40a389:	push   r14
  40a38b:	push   r13
  40a38d:	push   r12
  40a38f:	push   rbp
  40a390:	push   rbx
  40a391:	mov    rbx,rdi
  40a394:	sub    rsp,0x8
  40a398:	mov    r13,QWORD PTR [rsp+0x40]
  40a39d:	mov    r12,QWORD PTR [rdx+rcx*1]
  40a3a1:	mov    rax,QWORD PTR [rdi+0x28]
  40a3a5:	test   esi,esi
  40a3a7:	je     40a3b8 <flatcc_json_printer_uint64_enum_struct_field@@Base+0x38>
  40a3a9:	lea    rdx,[rax+0x1]
  40a3ad:	mov    QWORD PTR [rdi+0x28],rdx
  40a3b1:	mov    BYTE PTR [rax],0x2c
  40a3b4:	mov    rax,QWORD PTR [rdi+0x28]
  40a3b8:	cmp    BYTE PTR [rbx+0x31],0x0
  40a3bc:	movsxd r14,r9d
  40a3bf:	jne    40a490 <flatcc_json_printer_uint64_enum_struct_field@@Base+0x110>
  40a3c5:	cmp    QWORD PTR [rbx+0x20],rax
  40a3c9:	ja     40a3d7 <flatcc_json_printer_uint64_enum_struct_field@@Base+0x57>
  40a3cb:	xor    esi,esi
  40a3cd:	mov    rdi,rbx
  40a3d0:	call   QWORD PTR [rbx+0x48]
  40a3d3:	mov    rax,QWORD PTR [rbx+0x28]
  40a3d7:	mov    BYTE PTR [rax],0x22
  40a3da:	xor    edi,edi
  40a3dc:	mov    rdx,r14
  40a3df:	cmp    BYTE PTR [rbx+0x32],0x0
  40a3e3:	sete   dil
  40a3e7:	add    rdi,QWORD PTR [rbx+0x28]
  40a3eb:	lea    rax,[rdi+r14*1]
  40a3ef:	mov    QWORD PTR [rbx+0x28],rdi
  40a3f3:	mov    rsi,r15
  40a3f6:	cmp    QWORD PTR [rbx+0x20],rax
  40a3fa:	ja     40a460 <flatcc_json_printer_uint64_enum_struct_field@@Base+0xe0>
  40a3fc:	mov    rdi,rbx
  40a3ff:	call   4052c0 <test_print@@Base+0xdf0>
  40a404:	mov    r14,QWORD PTR [rbx+0x28]
  40a408:	mov    BYTE PTR [r14],0x22
  40a40c:	xor    eax,eax
  40a40e:	cmp    BYTE PTR [rbx+0x32],0x0
  40a412:	sete   al
  40a415:	add    rax,QWORD PTR [rbx+0x28]
  40a419:	lea    rdx,[rax+0x1]
  40a41d:	mov    QWORD PTR [rbx+0x28],rdx
  40a421:	mov    BYTE PTR [rax],0x3a
  40a424:	xor    esi,esi
  40a426:	mov    rax,QWORD PTR [rbx+0x28]
  40a42a:	mov    BYTE PTR [rax],0x20
  40a42d:	cmp    BYTE PTR [rbx+0x31],0x0
  40a431:	setne  sil
  40a435:	add    rsi,QWORD PTR [rbx+0x28]
  40a439:	cmp    BYTE PTR [rbx+0x33],0x0
  40a43d:	mov    QWORD PTR [rbx+0x28],rsi
  40a441:	jne    40a470 <flatcc_json_printer_uint64_enum_struct_field@@Base+0xf0>
  40a443:	add    rsp,0x8
  40a447:	mov    rdi,rbx
  40a44a:	pop    rbx
  40a44b:	pop    rbp
  40a44c:	mov    rsi,r12
  40a44f:	pop    r12
  40a451:	mov    rax,r13
  40a454:	pop    r13
  40a456:	pop    r14
  40a458:	pop    r15
  40a45a:	jmp    rax
  40a45c:	nop    DWORD PTR [rax+0x0]
  40a460:	call   403240 <memcpy@plt>
  40a465:	add    r14,QWORD PTR [rbx+0x28]
  40a469:	mov    QWORD PTR [rbx+0x28],r14
  40a46d:	jmp    40a408 <flatcc_json_printer_uint64_enum_struct_field@@Base+0x88>
  40a46f:	nop
  40a470:	mov    rdi,r12
  40a473:	call   404c00 <test_print@@Base+0x730>
  40a478:	cdqe   
  40a47a:	add    QWORD PTR [rbx+0x28],rax
  40a47e:	add    rsp,0x8
  40a482:	pop    rbx
  40a483:	pop    rbp
  40a484:	pop    r12
  40a486:	pop    r13
  40a488:	pop    r14
  40a48a:	pop    r15
  40a48c:	ret    
  40a48d:	nop    DWORD PTR [rax]
  40a490:	lea    rdx,[rax+0x1]
  40a494:	mov    QWORD PTR [rbx+0x28],rdx
  40a498:	mov    BYTE PTR [rax],0xa
  40a49b:	movzx  eax,BYTE PTR [rbx+0x31]
  40a49f:	mov    rdi,QWORD PTR [rbx+0x28]
  40a4a3:	imul   eax,DWORD PTR [rbx+0x38]
  40a4a7:	movsxd rbp,eax
  40a4aa:	lea    rax,[rdi+rbp*1]
  40a4ae:	cmp    QWORD PTR [rbx+0x20],rax
  40a4b2:	jae    40a4d0 <flatcc_json_printer_uint64_enum_struct_field@@Base+0x150>
  40a4b4:	mov    rsi,rbp
  40a4b7:	mov    rdi,rbx
  40a4ba:	call   405350 <test_print@@Base+0xe80>
  40a4bf:	mov    rax,QWORD PTR [rbx+0x28]
  40a4c3:	jmp    40a3d7 <flatcc_json_printer_uint64_enum_struct_field@@Base+0x57>
  40a4c8:	nop    DWORD PTR [rax+rax*1+0x0]
  40a4d0:	mov    rdx,rbp
  40a4d3:	mov    esi,0x20
  40a4d8:	call   403200 <memset@plt>
  40a4dd:	mov    rax,QWORD PTR [rbx+0x28]
  40a4e1:	add    rax,rbp
  40a4e4:	mov    QWORD PTR [rbx+0x28],rax
  40a4e8:	jmp    40a3d7 <flatcc_json_printer_uint64_enum_struct_field@@Base+0x57>
  40a4ed:	nop    DWORD PTR [rax]

000000000040a4f0 <flatcc_json_printer_int8_enum_struct_field@@Base>:
  40a4f0:	endbr64 
  40a4f4:	push   r15
  40a4f6:	mov    r15,r8
  40a4f9:	push   r14
  40a4fb:	push   r13
  40a4fd:	push   r12
  40a4ff:	push   rbp
  40a500:	push   rbx
  40a501:	mov    rbx,rdi
  40a504:	sub    rsp,0x8
  40a508:	mov    r13,QWORD PTR [rsp+0x40]
  40a50d:	movzx  r12d,BYTE PTR [rdx+rcx*1]
  40a512:	mov    rax,QWORD PTR [rdi+0x28]
  40a516:	test   esi,esi
  40a518:	je     40a529 <flatcc_json_printer_int8_enum_struct_field@@Base+0x39>
  40a51a:	lea    rdx,[rax+0x1]
  40a51e:	mov    QWORD PTR [rdi+0x28],rdx
  40a522:	mov    BYTE PTR [rax],0x2c
  40a525:	mov    rax,QWORD PTR [rdi+0x28]
  40a529:	cmp    BYTE PTR [rbx+0x31],0x0
  40a52d:	movsxd r14,r9d
  40a530:	jne    40a628 <flatcc_json_printer_int8_enum_struct_field@@Base+0x138>
  40a536:	cmp    QWORD PTR [rbx+0x20],rax
  40a53a:	ja     40a548 <flatcc_json_printer_int8_enum_struct_field@@Base+0x58>
  40a53c:	xor    esi,esi
  40a53e:	mov    rdi,rbx
  40a541:	call   QWORD PTR [rbx+0x48]
  40a544:	mov    rax,QWORD PTR [rbx+0x28]
  40a548:	mov    BYTE PTR [rax],0x22
  40a54b:	xor    edi,edi
  40a54d:	mov    rdx,r14
  40a550:	cmp    BYTE PTR [rbx+0x32],0x0
  40a554:	sete   dil
  40a558:	add    rdi,QWORD PTR [rbx+0x28]
  40a55c:	lea    rax,[rdi+r14*1]
  40a560:	mov    QWORD PTR [rbx+0x28],rdi
  40a564:	mov    rsi,r15
  40a567:	cmp    QWORD PTR [rbx+0x20],rax
  40a56b:	ja     40a5f0 <flatcc_json_printer_int8_enum_struct_field@@Base+0x100>
  40a571:	mov    rdi,rbx
  40a574:	call   4052c0 <test_print@@Base+0xdf0>
  40a579:	mov    r14,QWORD PTR [rbx+0x28]
  40a57d:	mov    BYTE PTR [r14],0x22
  40a581:	xor    eax,eax
  40a583:	cmp    BYTE PTR [rbx+0x32],0x0
  40a587:	sete   al
  40a58a:	add    rax,QWORD PTR [rbx+0x28]
  40a58e:	lea    rdx,[rax+0x1]
  40a592:	mov    QWORD PTR [rbx+0x28],rdx
  40a596:	mov    BYTE PTR [rax],0x3a
  40a599:	xor    esi,esi
  40a59b:	mov    rax,QWORD PTR [rbx+0x28]
  40a59f:	mov    BYTE PTR [rax],0x20
  40a5a2:	cmp    BYTE PTR [rbx+0x31],0x0
  40a5a6:	setne  sil
  40a5aa:	add    rsi,QWORD PTR [rbx+0x28]
  40a5ae:	cmp    BYTE PTR [rbx+0x33],0x0
  40a5b2:	mov    QWORD PTR [rbx+0x28],rsi
  40a5b6:	je     40a608 <flatcc_json_printer_int8_enum_struct_field@@Base+0x118>
  40a5b8:	movsx  r8d,r12b
  40a5bc:	shr    r8d,0x1f
  40a5c0:	test   r12b,r12b
  40a5c3:	jns    40a5ce <flatcc_json_printer_int8_enum_struct_field@@Base+0xde>
  40a5c5:	mov    BYTE PTR [rsi],0x2d
  40a5c8:	neg    r12d
  40a5cb:	inc    rsi
  40a5ce:	movzx  edi,r12b
  40a5d2:	call   405590 <test_print@@Base+0x10c0>
  40a5d7:	add    r8d,eax
  40a5da:	movsxd r8,r8d
  40a5dd:	add    QWORD PTR [rbx+0x28],r8
  40a5e1:	add    rsp,0x8
  40a5e5:	pop    rbx
  40a5e6:	pop    rbp
  40a5e7:	pop    r12
  40a5e9:	pop    r13
  40a5eb:	pop    r14
  40a5ed:	pop    r15
  40a5ef:	ret    
  40a5f0:	call   403240 <memcpy@plt>
  40a5f5:	add    r14,QWORD PTR [rbx+0x28]
  40a5f9:	mov    QWORD PTR [rbx+0x28],r14
  40a5fd:	jmp    40a57d <flatcc_json_printer_int8_enum_struct_field@@Base+0x8d>
  40a602:	nop    WORD PTR [rax+rax*1+0x0]
  40a608:	add    rsp,0x8
  40a60c:	mov    rdi,rbx
  40a60f:	pop    rbx
  40a610:	pop    rbp
  40a611:	movsx  esi,r12b
  40a615:	pop    r12
  40a617:	mov    rax,r13
  40a61a:	pop    r13
  40a61c:	pop    r14
  40a61e:	pop    r15
  40a620:	jmp    rax
  40a622:	nop    WORD PTR [rax+rax*1+0x0]
  40a628:	lea    rdx,[rax+0x1]
  40a62c:	mov    QWORD PTR [rbx+0x28],rdx
  40a630:	mov    BYTE PTR [rax],0xa
  40a633:	movzx  eax,BYTE PTR [rbx+0x31]
  40a637:	mov    rdi,QWORD PTR [rbx+0x28]
  40a63b:	imul   eax,DWORD PTR [rbx+0x38]
  40a63f:	movsxd rbp,eax
  40a642:	lea    rax,[rdi+rbp*1]
  40a646:	cmp    QWORD PTR [rbx+0x20],rax
  40a64a:	jae    40a660 <flatcc_json_printer_int8_enum_struct_field@@Base+0x170>
  40a64c:	mov    rsi,rbp
  40a64f:	mov    rdi,rbx
  40a652:	call   405350 <test_print@@Base+0xe80>
  40a657:	mov    rax,QWORD PTR [rbx+0x28]
  40a65b:	jmp    40a548 <flatcc_json_printer_int8_enum_struct_field@@Base+0x58>
  40a660:	mov    rdx,rbp
  40a663:	mov    esi,0x20
  40a668:	call   403200 <memset@plt>
  40a66d:	mov    rax,QWORD PTR [rbx+0x28]
  40a671:	add    rax,rbp
  40a674:	mov    QWORD PTR [rbx+0x28],rax
  40a678:	jmp    40a548 <flatcc_json_printer_int8_enum_struct_field@@Base+0x58>
  40a67d:	nop    DWORD PTR [rax]

000000000040a680 <flatcc_json_printer_int16_enum_struct_field@@Base>:
  40a680:	endbr64 
  40a684:	push   r15
  40a686:	mov    r15,r8
  40a689:	push   r14
  40a68b:	push   r13
  40a68d:	push   r12
  40a68f:	push   rbp
  40a690:	push   rbx
  40a691:	mov    rbx,rdi
  40a694:	sub    rsp,0x8
  40a698:	mov    r13,QWORD PTR [rsp+0x40]
  40a69d:	movzx  r12d,WORD PTR [rdx+rcx*1]
  40a6a2:	mov    rax,QWORD PTR [rdi+0x28]
  40a6a6:	test   esi,esi
  40a6a8:	je     40a6b9 <flatcc_json_printer_int16_enum_struct_field@@Base+0x39>
  40a6aa:	lea    rdx,[rax+0x1]
  40a6ae:	mov    QWORD PTR [rdi+0x28],rdx
  40a6b2:	mov    BYTE PTR [rax],0x2c
  40a6b5:	mov    rax,QWORD PTR [rdi+0x28]
  40a6b9:	cmp    BYTE PTR [rbx+0x31],0x0
  40a6bd:	movsxd r14,r9d
  40a6c0:	jne    40a7c0 <flatcc_json_printer_int16_enum_struct_field@@Base+0x140>
  40a6c6:	cmp    QWORD PTR [rbx+0x20],rax
  40a6ca:	ja     40a6d8 <flatcc_json_printer_int16_enum_struct_field@@Base+0x58>
  40a6cc:	xor    esi,esi
  40a6ce:	mov    rdi,rbx
  40a6d1:	call   QWORD PTR [rbx+0x48]
  40a6d4:	mov    rax,QWORD PTR [rbx+0x28]
  40a6d8:	mov    BYTE PTR [rax],0x22
  40a6db:	xor    edi,edi
  40a6dd:	mov    rdx,r14
  40a6e0:	cmp    BYTE PTR [rbx+0x32],0x0
  40a6e4:	sete   dil
  40a6e8:	add    rdi,QWORD PTR [rbx+0x28]
  40a6ec:	lea    rax,[rdi+r14*1]
  40a6f0:	mov    QWORD PTR [rbx+0x28],rdi
  40a6f4:	mov    rsi,r15
  40a6f7:	cmp    QWORD PTR [rbx+0x20],rax
  40a6fb:	ja     40a788 <flatcc_json_printer_int16_enum_struct_field@@Base+0x108>
  40a701:	mov    rdi,rbx
  40a704:	call   4052c0 <test_print@@Base+0xdf0>
  40a709:	mov    r14,QWORD PTR [rbx+0x28]
  40a70d:	mov    BYTE PTR [r14],0x22
  40a711:	xor    eax,eax
  40a713:	cmp    BYTE PTR [rbx+0x32],0x0
  40a717:	sete   al
  40a71a:	add    rax,QWORD PTR [rbx+0x28]
  40a71e:	lea    rdx,[rax+0x1]
  40a722:	mov    QWORD PTR [rbx+0x28],rdx
  40a726:	mov    BYTE PTR [rax],0x3a
  40a729:	xor    esi,esi
  40a72b:	mov    rax,QWORD PTR [rbx+0x28]
  40a72f:	mov    BYTE PTR [rax],0x20
  40a732:	cmp    BYTE PTR [rbx+0x31],0x0
  40a736:	setne  sil
  40a73a:	add    rsi,QWORD PTR [rbx+0x28]
  40a73e:	cmp    BYTE PTR [rbx+0x33],0x0
  40a742:	mov    QWORD PTR [rbx+0x28],rsi
  40a746:	je     40a7a0 <flatcc_json_printer_int16_enum_struct_field@@Base+0x120>
  40a748:	movsx  r11d,r12w
  40a74c:	shr    r11d,0x1f
  40a750:	test   r12w,r12w
  40a754:	jns    40a75f <flatcc_json_printer_int16_enum_struct_field@@Base+0xdf>
  40a756:	mov    BYTE PTR [rsi],0x2d
  40a759:	neg    r12d
  40a75c:	inc    rsi
  40a75f:	movzx  edi,r12w
  40a763:	call   404820 <test_print@@Base+0x350>
  40a768:	add    r11d,eax
  40a76b:	movsxd r11,r11d
  40a76e:	add    QWORD PTR [rbx+0x28],r11
  40a772:	add    rsp,0x8
  40a776:	pop    rbx
  40a777:	pop    rbp
  40a778:	pop    r12
  40a77a:	pop    r13
  40a77c:	pop    r14
  40a77e:	pop    r15
  40a780:	ret    
  40a781:	nop    DWORD PTR [rax+0x0]
  40a788:	call   403240 <memcpy@plt>
  40a78d:	add    r14,QWORD PTR [rbx+0x28]
  40a791:	mov    QWORD PTR [rbx+0x28],r14
  40a795:	jmp    40a70d <flatcc_json_printer_int16_enum_struct_field@@Base+0x8d>
  40a79a:	nop    WORD PTR [rax+rax*1+0x0]
  40a7a0:	add    rsp,0x8
  40a7a4:	mov    rdi,rbx
  40a7a7:	pop    rbx
  40a7a8:	pop    rbp
  40a7a9:	movsx  esi,r12w
  40a7ad:	pop    r12
  40a7af:	mov    rax,r13
  40a7b2:	pop    r13
  40a7b4:	pop    r14
  40a7b6:	pop    r15
  40a7b8:	jmp    rax
  40a7ba:	nop    WORD PTR [rax+rax*1+0x0]
  40a7c0:	lea    rdx,[rax+0x1]
  40a7c4:	mov    QWORD PTR [rbx+0x28],rdx
  40a7c8:	mov    BYTE PTR [rax],0xa
  40a7cb:	movzx  eax,BYTE PTR [rbx+0x31]
  40a7cf:	mov    rdi,QWORD PTR [rbx+0x28]
  40a7d3:	imul   eax,DWORD PTR [rbx+0x38]
  40a7d7:	movsxd rbp,eax
  40a7da:	lea    rax,[rdi+rbp*1]
  40a7de:	cmp    QWORD PTR [rbx+0x20],rax
  40a7e2:	jae    40a800 <flatcc_json_printer_int16_enum_struct_field@@Base+0x180>
  40a7e4:	mov    rsi,rbp
  40a7e7:	mov    rdi,rbx
  40a7ea:	call   405350 <test_print@@Base+0xe80>
  40a7ef:	mov    rax,QWORD PTR [rbx+0x28]
  40a7f3:	jmp    40a6d8 <flatcc_json_printer_int16_enum_struct_field@@Base+0x58>
  40a7f8:	nop    DWORD PTR [rax+rax*1+0x0]
  40a800:	mov    rdx,rbp
  40a803:	mov    esi,0x20
  40a808:	call   403200 <memset@plt>
  40a80d:	mov    rax,QWORD PTR [rbx+0x28]
  40a811:	add    rax,rbp
  40a814:	mov    QWORD PTR [rbx+0x28],rax
  40a818:	jmp    40a6d8 <flatcc_json_printer_int16_enum_struct_field@@Base+0x58>
  40a81d:	nop    DWORD PTR [rax]

000000000040a820 <flatcc_json_printer_int32_enum_struct_field@@Base>:
  40a820:	endbr64 
  40a824:	push   r15
  40a826:	mov    r15,r8
  40a829:	push   r14
  40a82b:	push   r13
  40a82d:	push   r12
  40a82f:	push   rbp
  40a830:	push   rbx
  40a831:	mov    rbx,rdi
  40a834:	sub    rsp,0x8
  40a838:	mov    r13,QWORD PTR [rsp+0x40]
  40a83d:	mov    r12d,DWORD PTR [rdx+rcx*1]
  40a841:	mov    rax,QWORD PTR [rdi+0x28]
  40a845:	test   esi,esi
  40a847:	je     40a858 <flatcc_json_printer_int32_enum_struct_field@@Base+0x38>
  40a849:	lea    rdx,[rax+0x1]
  40a84d:	mov    QWORD PTR [rdi+0x28],rdx
  40a851:	mov    BYTE PTR [rax],0x2c
  40a854:	mov    rax,QWORD PTR [rdi+0x28]
  40a858:	cmp    BYTE PTR [rbx+0x31],0x0
  40a85c:	movsxd r14,r9d
  40a85f:	jne    40a958 <flatcc_json_printer_int32_enum_struct_field@@Base+0x138>
  40a865:	cmp    QWORD PTR [rbx+0x20],rax
  40a869:	ja     40a877 <flatcc_json_printer_int32_enum_struct_field@@Base+0x57>
  40a86b:	xor    esi,esi
  40a86d:	mov    rdi,rbx
  40a870:	call   QWORD PTR [rbx+0x48]
  40a873:	mov    rax,QWORD PTR [rbx+0x28]
  40a877:	mov    BYTE PTR [rax],0x22
  40a87a:	xor    edi,edi
  40a87c:	mov    rdx,r14
  40a87f:	cmp    BYTE PTR [rbx+0x32],0x0
  40a883:	sete   dil
  40a887:	add    rdi,QWORD PTR [rbx+0x28]
  40a88b:	lea    rax,[rdi+r14*1]
  40a88f:	mov    QWORD PTR [rbx+0x28],rdi
  40a893:	mov    rsi,r15
  40a896:	cmp    QWORD PTR [rbx+0x20],rax
  40a89a:	ja     40a920 <flatcc_json_printer_int32_enum_struct_field@@Base+0x100>
  40a8a0:	mov    rdi,rbx
  40a8a3:	call   4052c0 <test_print@@Base+0xdf0>
  40a8a8:	mov    r14,QWORD PTR [rbx+0x28]
  40a8ac:	mov    BYTE PTR [r14],0x22
  40a8b0:	xor    eax,eax
  40a8b2:	cmp    BYTE PTR [rbx+0x32],0x0
  40a8b6:	sete   al
  40a8b9:	add    rax,QWORD PTR [rbx+0x28]
  40a8bd:	lea    rdx,[rax+0x1]
  40a8c1:	mov    QWORD PTR [rbx+0x28],rdx
  40a8c5:	mov    BYTE PTR [rax],0x3a
  40a8c8:	xor    esi,esi
  40a8ca:	mov    rax,QWORD PTR [rbx+0x28]
  40a8ce:	mov    BYTE PTR [rax],0x20
  40a8d1:	cmp    BYTE PTR [rbx+0x31],0x0
  40a8d5:	setne  sil
  40a8d9:	add    rsi,QWORD PTR [rbx+0x28]
  40a8dd:	cmp    BYTE PTR [rbx+0x33],0x0
  40a8e1:	mov    QWORD PTR [rbx+0x28],rsi
  40a8e5:	je     40a938 <flatcc_json_printer_int32_enum_struct_field@@Base+0x118>
  40a8e7:	mov    ebp,r12d
  40a8ea:	shr    ebp,0x1f
  40a8ed:	test   r12d,r12d
  40a8f0:	jns    40a8fb <flatcc_json_printer_int32_enum_struct_field@@Base+0xdb>
  40a8f2:	mov    BYTE PTR [rsi],0x2d
  40a8f5:	neg    r12d
  40a8f8:	inc    rsi
  40a8fb:	mov    edi,r12d
  40a8fe:	call   404950 <test_print@@Base+0x480>
  40a903:	add    ebp,eax
  40a905:	movsxd rbp,ebp
  40a908:	add    QWORD PTR [rbx+0x28],rbp
  40a90c:	add    rsp,0x8
  40a910:	pop    rbx
  40a911:	pop    rbp
  40a912:	pop    r12
  40a914:	pop    r13
  40a916:	pop    r14
  40a918:	pop    r15
  40a91a:	ret    
  40a91b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a920:	call   403240 <memcpy@plt>
  40a925:	add    r14,QWORD PTR [rbx+0x28]
  40a929:	mov    QWORD PTR [rbx+0x28],r14
  40a92d:	jmp    40a8ac <flatcc_json_printer_int32_enum_struct_field@@Base+0x8c>
  40a932:	nop    WORD PTR [rax+rax*1+0x0]
  40a938:	add    rsp,0x8
  40a93c:	mov    rdi,rbx
  40a93f:	pop    rbx
  40a940:	pop    rbp
  40a941:	mov    esi,r12d
  40a944:	pop    r12
  40a946:	mov    rax,r13
  40a949:	pop    r13
  40a94b:	pop    r14
  40a94d:	pop    r15
  40a94f:	jmp    rax
  40a951:	nop    DWORD PTR [rax+0x0]
  40a958:	lea    rdx,[rax+0x1]
  40a95c:	mov    QWORD PTR [rbx+0x28],rdx
  40a960:	mov    BYTE PTR [rax],0xa
  40a963:	movzx  eax,BYTE PTR [rbx+0x31]
  40a967:	mov    rdi,QWORD PTR [rbx+0x28]
  40a96b:	imul   eax,DWORD PTR [rbx+0x38]
  40a96f:	movsxd rbp,eax
  40a972:	lea    rax,[rdi+rbp*1]
  40a976:	cmp    QWORD PTR [rbx+0x20],rax
  40a97a:	jae    40a990 <flatcc_json_printer_int32_enum_struct_field@@Base+0x170>
  40a97c:	mov    rsi,rbp
  40a97f:	mov    rdi,rbx
  40a982:	call   405350 <test_print@@Base+0xe80>
  40a987:	mov    rax,QWORD PTR [rbx+0x28]
  40a98b:	jmp    40a877 <flatcc_json_printer_int32_enum_struct_field@@Base+0x57>
  40a990:	mov    rdx,rbp
  40a993:	mov    esi,0x20
  40a998:	call   403200 <memset@plt>
  40a99d:	mov    rax,QWORD PTR [rbx+0x28]
  40a9a1:	add    rax,rbp
  40a9a4:	mov    QWORD PTR [rbx+0x28],rax
  40a9a8:	jmp    40a877 <flatcc_json_printer_int32_enum_struct_field@@Base+0x57>
  40a9ad:	nop    DWORD PTR [rax]

000000000040a9b0 <flatcc_json_printer_int64_enum_struct_field@@Base>:
  40a9b0:	endbr64 
  40a9b4:	push   r15
  40a9b6:	mov    r15,r8
  40a9b9:	push   r14
  40a9bb:	push   r13
  40a9bd:	push   r12
  40a9bf:	push   rbp
  40a9c0:	push   rbx
  40a9c1:	mov    rbx,rdi
  40a9c4:	sub    rsp,0x8
  40a9c8:	mov    r13,QWORD PTR [rsp+0x40]
  40a9cd:	mov    r12,QWORD PTR [rdx+rcx*1]
  40a9d1:	mov    rax,QWORD PTR [rdi+0x28]
  40a9d5:	test   esi,esi
  40a9d7:	je     40a9e8 <flatcc_json_printer_int64_enum_struct_field@@Base+0x38>
  40a9d9:	lea    rdx,[rax+0x1]
  40a9dd:	mov    QWORD PTR [rdi+0x28],rdx
  40a9e1:	mov    BYTE PTR [rax],0x2c
  40a9e4:	mov    rax,QWORD PTR [rdi+0x28]
  40a9e8:	cmp    BYTE PTR [rbx+0x31],0x0
  40a9ec:	movsxd r14,r9d
  40a9ef:	jne    40aae8 <flatcc_json_printer_int64_enum_struct_field@@Base+0x138>
  40a9f5:	cmp    QWORD PTR [rbx+0x20],rax
  40a9f9:	ja     40aa07 <flatcc_json_printer_int64_enum_struct_field@@Base+0x57>
  40a9fb:	xor    esi,esi
  40a9fd:	mov    rdi,rbx
  40aa00:	call   QWORD PTR [rbx+0x48]
  40aa03:	mov    rax,QWORD PTR [rbx+0x28]
  40aa07:	mov    BYTE PTR [rax],0x22
  40aa0a:	xor    edi,edi
  40aa0c:	mov    rdx,r14
  40aa0f:	cmp    BYTE PTR [rbx+0x32],0x0
  40aa13:	sete   dil
  40aa17:	add    rdi,QWORD PTR [rbx+0x28]
  40aa1b:	lea    rax,[rdi+r14*1]
  40aa1f:	mov    QWORD PTR [rbx+0x28],rdi
  40aa23:	mov    rsi,r15
  40aa26:	cmp    QWORD PTR [rbx+0x20],rax
  40aa2a:	ja     40aab0 <flatcc_json_printer_int64_enum_struct_field@@Base+0x100>
  40aa30:	mov    rdi,rbx
  40aa33:	call   4052c0 <test_print@@Base+0xdf0>
  40aa38:	mov    r14,QWORD PTR [rbx+0x28]
  40aa3c:	mov    BYTE PTR [r14],0x22
  40aa40:	xor    eax,eax
  40aa42:	cmp    BYTE PTR [rbx+0x32],0x0
  40aa46:	sete   al
  40aa49:	add    rax,QWORD PTR [rbx+0x28]
  40aa4d:	lea    rdx,[rax+0x1]
  40aa51:	mov    QWORD PTR [rbx+0x28],rdx
  40aa55:	mov    BYTE PTR [rax],0x3a
  40aa58:	xor    esi,esi
  40aa5a:	mov    rax,QWORD PTR [rbx+0x28]
  40aa5e:	mov    BYTE PTR [rax],0x20
  40aa61:	cmp    BYTE PTR [rbx+0x31],0x0
  40aa65:	setne  sil
  40aa69:	add    rsi,QWORD PTR [rbx+0x28]
  40aa6d:	cmp    BYTE PTR [rbx+0x33],0x0
  40aa71:	mov    QWORD PTR [rbx+0x28],rsi
  40aa75:	je     40aac8 <flatcc_json_printer_int64_enum_struct_field@@Base+0x118>
  40aa77:	mov    rbp,r12
  40aa7a:	shr    rbp,0x3f
  40aa7e:	test   r12,r12
  40aa81:	jns    40aa8c <flatcc_json_printer_int64_enum_struct_field@@Base+0xdc>
  40aa83:	mov    BYTE PTR [rsi],0x2d
  40aa86:	neg    r12
  40aa89:	inc    rsi
  40aa8c:	mov    rdi,r12
  40aa8f:	call   404c00 <test_print@@Base+0x730>
  40aa94:	add    eax,ebp
  40aa96:	cdqe   
  40aa98:	add    QWORD PTR [rbx+0x28],rax
  40aa9c:	add    rsp,0x8
  40aaa0:	pop    rbx
  40aaa1:	pop    rbp
  40aaa2:	pop    r12
  40aaa4:	pop    r13
  40aaa6:	pop    r14
  40aaa8:	pop    r15
  40aaaa:	ret    
  40aaab:	nop    DWORD PTR [rax+rax*1+0x0]
  40aab0:	call   403240 <memcpy@plt>
  40aab5:	add    r14,QWORD PTR [rbx+0x28]
  40aab9:	mov    QWORD PTR [rbx+0x28],r14
  40aabd:	jmp    40aa3c <flatcc_json_printer_int64_enum_struct_field@@Base+0x8c>
  40aac2:	nop    WORD PTR [rax+rax*1+0x0]
  40aac8:	add    rsp,0x8
  40aacc:	mov    rdi,rbx
  40aacf:	pop    rbx
  40aad0:	pop    rbp
  40aad1:	mov    rsi,r12
  40aad4:	pop    r12
  40aad6:	mov    rax,r13
  40aad9:	pop    r13
  40aadb:	pop    r14
  40aadd:	pop    r15
  40aadf:	jmp    rax
  40aae1:	nop    DWORD PTR [rax+0x0]
  40aae8:	lea    rdx,[rax+0x1]
  40aaec:	mov    QWORD PTR [rbx+0x28],rdx
  40aaf0:	mov    BYTE PTR [rax],0xa
  40aaf3:	movzx  eax,BYTE PTR [rbx+0x31]
  40aaf7:	mov    rdi,QWORD PTR [rbx+0x28]
  40aafb:	imul   eax,DWORD PTR [rbx+0x38]
  40aaff:	movsxd rbp,eax
  40ab02:	lea    rax,[rdi+rbp*1]
  40ab06:	cmp    QWORD PTR [rbx+0x20],rax
  40ab0a:	jae    40ab20 <flatcc_json_printer_int64_enum_struct_field@@Base+0x170>
  40ab0c:	mov    rsi,rbp
  40ab0f:	mov    rdi,rbx
  40ab12:	call   405350 <test_print@@Base+0xe80>
  40ab17:	mov    rax,QWORD PTR [rbx+0x28]
  40ab1b:	jmp    40aa07 <flatcc_json_printer_int64_enum_struct_field@@Base+0x57>
  40ab20:	mov    rdx,rbp
  40ab23:	mov    esi,0x20
  40ab28:	call   403200 <memset@plt>
  40ab2d:	mov    rax,QWORD PTR [rbx+0x28]
  40ab31:	add    rax,rbp
  40ab34:	mov    QWORD PTR [rbx+0x28],rax
  40ab38:	jmp    40aa07 <flatcc_json_printer_int64_enum_struct_field@@Base+0x57>
  40ab3d:	nop    DWORD PTR [rax]

000000000040ab40 <flatcc_json_printer_bool_enum_struct_field@@Base>:
  40ab40:	endbr64 
  40ab44:	push   r15
  40ab46:	mov    r15,r8
  40ab49:	push   r14
  40ab4b:	push   r13
  40ab4d:	push   r12
  40ab4f:	push   rbp
  40ab50:	push   rbx
  40ab51:	mov    rbx,rdi
  40ab54:	sub    rsp,0x8
  40ab58:	mov    r13,QWORD PTR [rsp+0x40]
  40ab5d:	movzx  r12d,BYTE PTR [rdx+rcx*1]
  40ab62:	mov    rax,QWORD PTR [rdi+0x28]
  40ab66:	test   esi,esi
  40ab68:	je     40ab79 <flatcc_json_printer_bool_enum_struct_field@@Base+0x39>
  40ab6a:	lea    rdx,[rax+0x1]
  40ab6e:	mov    QWORD PTR [rdi+0x28],rdx
  40ab72:	mov    BYTE PTR [rax],0x2c
  40ab75:	mov    rax,QWORD PTR [rdi+0x28]
  40ab79:	cmp    BYTE PTR [rbx+0x31],0x0
  40ab7d:	movsxd r14,r9d
  40ab80:	jne    40ac50 <flatcc_json_printer_bool_enum_struct_field@@Base+0x110>
  40ab86:	cmp    QWORD PTR [rbx+0x20],rax
  40ab8a:	ja     40ab98 <flatcc_json_printer_bool_enum_struct_field@@Base+0x58>
  40ab8c:	xor    esi,esi
  40ab8e:	mov    rdi,rbx
  40ab91:	call   QWORD PTR [rbx+0x48]
  40ab94:	mov    rax,QWORD PTR [rbx+0x28]
  40ab98:	mov    BYTE PTR [rax],0x22
  40ab9b:	xor    edi,edi
  40ab9d:	mov    rdx,r14
  40aba0:	cmp    BYTE PTR [rbx+0x32],0x0
  40aba4:	sete   dil
  40aba8:	add    rdi,QWORD PTR [rbx+0x28]
  40abac:	lea    rax,[rdi+r14*1]
  40abb0:	mov    QWORD PTR [rbx+0x28],rdi
  40abb4:	mov    rsi,r15
  40abb7:	cmp    QWORD PTR [rbx+0x20],rax
  40abbb:	ja     40ac20 <flatcc_json_printer_bool_enum_struct_field@@Base+0xe0>
  40abbd:	mov    rdi,rbx
  40abc0:	call   4052c0 <test_print@@Base+0xdf0>
  40abc5:	mov    r14,QWORD PTR [rbx+0x28]
  40abc9:	mov    BYTE PTR [r14],0x22
  40abcd:	xor    eax,eax
  40abcf:	cmp    BYTE PTR [rbx+0x32],0x0
  40abd3:	sete   al
  40abd6:	add    rax,QWORD PTR [rbx+0x28]
  40abda:	lea    rdx,[rax+0x1]
  40abde:	mov    QWORD PTR [rbx+0x28],rdx
  40abe2:	mov    BYTE PTR [rax],0x3a
  40abe5:	xor    esi,esi
  40abe7:	mov    rax,QWORD PTR [rbx+0x28]
  40abeb:	mov    BYTE PTR [rax],0x20
  40abee:	cmp    BYTE PTR [rbx+0x31],0x0
  40abf2:	setne  sil
  40abf6:	add    rsi,QWORD PTR [rbx+0x28]
  40abfa:	cmp    BYTE PTR [rbx+0x33],0x0
  40abfe:	mov    QWORD PTR [rbx+0x28],rsi
  40ac02:	jne    40ac30 <flatcc_json_printer_bool_enum_struct_field@@Base+0xf0>
  40ac04:	add    rsp,0x8
  40ac08:	mov    rdi,rbx
  40ac0b:	pop    rbx
  40ac0c:	pop    rbp
  40ac0d:	movzx  esi,r12b
  40ac11:	pop    r12
  40ac13:	mov    rax,r13
  40ac16:	pop    r13
  40ac18:	pop    r14
  40ac1a:	pop    r15
  40ac1c:	jmp    rax
  40ac1e:	xchg   ax,ax
  40ac20:	call   403240 <memcpy@plt>
  40ac25:	add    r14,QWORD PTR [rbx+0x28]
  40ac29:	mov    QWORD PTR [rbx+0x28],r14
  40ac2d:	jmp    40abc9 <flatcc_json_printer_bool_enum_struct_field@@Base+0x89>
  40ac2f:	nop
  40ac30:	movzx  edi,r12b
  40ac34:	call   405560 <test_print@@Base+0x1090>
  40ac39:	cdqe   
  40ac3b:	add    QWORD PTR [rbx+0x28],rax
  40ac3f:	add    rsp,0x8
  40ac43:	pop    rbx
  40ac44:	pop    rbp
  40ac45:	pop    r12
  40ac47:	pop    r13
  40ac49:	pop    r14
  40ac4b:	pop    r15
  40ac4d:	ret    
  40ac4e:	xchg   ax,ax
  40ac50:	lea    rdx,[rax+0x1]
  40ac54:	mov    QWORD PTR [rbx+0x28],rdx
  40ac58:	mov    BYTE PTR [rax],0xa
  40ac5b:	movzx  eax,BYTE PTR [rbx+0x31]
  40ac5f:	mov    rdi,QWORD PTR [rbx+0x28]
  40ac63:	imul   eax,DWORD PTR [rbx+0x38]
  40ac67:	movsxd rbp,eax
  40ac6a:	lea    rax,[rdi+rbp*1]
  40ac6e:	cmp    QWORD PTR [rbx+0x20],rax
  40ac72:	jae    40ac90 <flatcc_json_printer_bool_enum_struct_field@@Base+0x150>
  40ac74:	mov    rsi,rbp
  40ac77:	mov    rdi,rbx
  40ac7a:	call   405350 <test_print@@Base+0xe80>
  40ac7f:	mov    rax,QWORD PTR [rbx+0x28]
  40ac83:	jmp    40ab98 <flatcc_json_printer_bool_enum_struct_field@@Base+0x58>
  40ac88:	nop    DWORD PTR [rax+rax*1+0x0]
  40ac90:	mov    rdx,rbp
  40ac93:	mov    esi,0x20
  40ac98:	call   403200 <memset@plt>
  40ac9d:	mov    rax,QWORD PTR [rbx+0x28]
  40aca1:	add    rax,rbp
  40aca4:	mov    QWORD PTR [rbx+0x28],rax
  40aca8:	jmp    40ab98 <flatcc_json_printer_bool_enum_struct_field@@Base+0x58>
  40acad:	nop    DWORD PTR [rax]

000000000040acb0 <flatcc_json_printer_uint8_vector_field@@Base>:
  40acb0:	endbr64 
  40acb4:	lea    eax,[rdx+rdx*1+0x4]
  40acb8:	cmp    eax,DWORD PTR [rsi+0x10]
  40acbb:	jge    40ae90 <flatcc_json_printer_uint8_vector_field@@Base+0x1e0>
  40acc1:	push   r13
  40acc3:	push   r12
  40acc5:	push   rbp
  40acc6:	push   rbx
  40acc7:	sub    rsp,0x8
  40accb:	mov    rdx,QWORD PTR [rsi+0x8]
  40accf:	movzx  ebp,WORD PTR [rdx+rax*1]
  40acd3:	test   bp,bp
  40acd6:	je     40ae21 <flatcc_json_printer_uint8_vector_field@@Base+0x171>
  40acdc:	add    rbp,QWORD PTR [rsi]
  40acdf:	je     40ae21 <flatcc_json_printer_uint8_vector_field@@Base+0x171>
  40ace5:	mov    eax,DWORD PTR [rsi+0x18]
  40ace8:	lea    edx,[rax+0x1]
  40aceb:	mov    DWORD PTR [rsi+0x18],edx
  40acee:	test   eax,eax
  40acf0:	je     40ad01 <flatcc_json_printer_uint8_vector_field@@Base+0x51>
  40acf2:	mov    rax,QWORD PTR [rdi+0x28]
  40acf6:	lea    rdx,[rax+0x1]
  40acfa:	mov    QWORD PTR [rdi+0x28],rdx
  40acfe:	mov    BYTE PTR [rax],0x2c
  40ad01:	mov    eax,DWORD PTR [rbp+0x0]
  40ad04:	mov    rbx,rdi
  40ad07:	add    rbp,rax
  40ad0a:	movsxd rdx,r8d
  40ad0d:	mov    rsi,rcx
  40ad10:	mov    r12d,DWORD PTR [rbp+0x0]
  40ad14:	call   406380 <test_print@@Base+0x1eb0>
  40ad19:	mov    rax,QWORD PTR [rbx+0x28]
  40ad1d:	inc    DWORD PTR [rbx+0x38]
  40ad20:	lea    rdx,[rax+0x1]
  40ad24:	mov    QWORD PTR [rbx+0x28],rdx
  40ad28:	mov    BYTE PTR [rax],0x5b
  40ad2b:	test   r12d,r12d
  40ad2e:	je     40ae08 <flatcc_json_printer_uint8_vector_field@@Base+0x158>
  40ad34:	cmp    BYTE PTR [rbx+0x31],0x0
  40ad38:	mov    rsi,QWORD PTR [rbx+0x28]
  40ad3c:	jne    40ae30 <flatcc_json_printer_uint8_vector_field@@Base+0x180>
  40ad42:	cmp    QWORD PTR [rbx+0x20],rsi
  40ad46:	ja     40ad54 <flatcc_json_printer_uint8_vector_field@@Base+0xa4>
  40ad48:	xor    esi,esi
  40ad4a:	mov    rdi,rbx
  40ad4d:	call   QWORD PTR [rbx+0x48]
  40ad50:	mov    rsi,QWORD PTR [rbx+0x28]
  40ad54:	movzx  edi,BYTE PTR [rbp+0x4]
  40ad58:	lea    r13,[rbp+0x5]
  40ad5c:	call   405590 <test_print@@Base+0x10c0>
  40ad61:	cdqe   
  40ad63:	add    rax,QWORD PTR [rbx+0x28]
  40ad67:	mov    QWORD PTR [rbx+0x28],rax
  40ad6b:	lea    edx,[r12-0x2]
  40ad70:	cmp    r12d,0x1
  40ad74:	je     40ae0c <flatcc_json_printer_uint8_vector_field@@Base+0x15c>
  40ad7a:	lea    rbp,[rbp+rdx*1+0x6]
  40ad7f:	jmp    40adba <flatcc_json_printer_uint8_vector_field@@Base+0x10a>
  40ad81:	nop    DWORD PTR [rax+0x0]
  40ad88:	mov    rsi,QWORD PTR [rbx+0x28]
  40ad8c:	cmp    rsi,QWORD PTR [rbx+0x20]
  40ad90:	jb     40ad9e <flatcc_json_printer_uint8_vector_field@@Base+0xee>
  40ad92:	xor    esi,esi
  40ad94:	mov    rdi,rbx
  40ad97:	call   QWORD PTR [rbx+0x48]
  40ad9a:	mov    rsi,QWORD PTR [rbx+0x28]
  40ad9e:	movzx  edi,BYTE PTR [r13+0x0]
  40ada3:	inc    r13
  40ada6:	call   405590 <test_print@@Base+0x10c0>
  40adab:	cdqe   
  40adad:	add    rax,QWORD PTR [rbx+0x28]
  40adb1:	mov    QWORD PTR [rbx+0x28],rax
  40adb5:	cmp    r13,rbp
  40adb8:	je     40ae0c <flatcc_json_printer_uint8_vector_field@@Base+0x15c>
  40adba:	lea    rdx,[rax+0x1]
  40adbe:	mov    QWORD PTR [rbx+0x28],rdx
  40adc2:	mov    BYTE PTR [rax],0x2c
  40adc5:	cmp    BYTE PTR [rbx+0x31],0x0
  40adc9:	je     40ad88 <flatcc_json_printer_uint8_vector_field@@Base+0xd8>
  40adcb:	mov    rax,QWORD PTR [rbx+0x28]
  40adcf:	lea    rdx,[rax+0x1]
  40add3:	mov    QWORD PTR [rbx+0x28],rdx
  40add7:	mov    BYTE PTR [rax],0xa
  40adda:	movzx  esi,BYTE PTR [rbx+0x31]
  40adde:	mov    rdi,QWORD PTR [rbx+0x28]
  40ade2:	imul   esi,DWORD PTR [rbx+0x38]
  40ade6:	movsxd r12,esi
  40ade9:	lea    rax,[rdi+r12*1]
  40aded:	cmp    QWORD PTR [rbx+0x20],rax
  40adf1:	jae    40ae70 <flatcc_json_printer_uint8_vector_field@@Base+0x1c0>
  40adf3:	mov    rsi,r12
  40adf6:	mov    rdi,rbx
  40adf9:	call   405350 <test_print@@Base+0xe80>
  40adfe:	mov    rsi,QWORD PTR [rbx+0x28]
  40ae02:	jmp    40ad9e <flatcc_json_printer_uint8_vector_field@@Base+0xee>
  40ae04:	nop    DWORD PTR [rax+0x0]
  40ae08:	mov    rax,QWORD PTR [rbx+0x28]
  40ae0c:	cmp    BYTE PTR [rbx+0x31],0x0
  40ae10:	lea    rdx,[rax+0x1]
  40ae14:	jne    40ae98 <flatcc_json_printer_uint8_vector_field@@Base+0x1e8>
  40ae1a:	mov    QWORD PTR [rbx+0x28],rdx
  40ae1e:	mov    BYTE PTR [rax],0x5d
  40ae21:	add    rsp,0x8
  40ae25:	pop    rbx
  40ae26:	pop    rbp
  40ae27:	pop    r12
  40ae29:	pop    r13
  40ae2b:	ret    
  40ae2c:	nop    DWORD PTR [rax+0x0]
  40ae30:	lea    rax,[rsi+0x1]
  40ae34:	mov    QWORD PTR [rbx+0x28],rax
  40ae38:	mov    BYTE PTR [rsi],0xa
  40ae3b:	movzx  esi,BYTE PTR [rbx+0x31]
  40ae3f:	mov    rdi,QWORD PTR [rbx+0x28]
  40ae43:	imul   esi,DWORD PTR [rbx+0x38]
  40ae47:	movsxd r13,esi
  40ae4a:	lea    rax,[rdi+r13*1]
  40ae4e:	cmp    QWORD PTR [rbx+0x20],rax
  40ae52:	jae    40aefd <flatcc_json_printer_uint8_vector_field@@Base+0x24d>
  40ae58:	mov    rsi,r13
  40ae5b:	mov    rdi,rbx
  40ae5e:	call   405350 <test_print@@Base+0xe80>
  40ae63:	mov    rsi,QWORD PTR [rbx+0x28]
  40ae67:	jmp    40ad54 <flatcc_json_printer_uint8_vector_field@@Base+0xa4>
  40ae6c:	nop    DWORD PTR [rax+0x0]
  40ae70:	mov    esi,0x20
  40ae75:	mov    rdx,r12
  40ae78:	call   403200 <memset@plt>
  40ae7d:	mov    rsi,QWORD PTR [rbx+0x28]
  40ae81:	add    rsi,r12
  40ae84:	mov    QWORD PTR [rbx+0x28],rsi
  40ae88:	jmp    40ad9e <flatcc_json_printer_uint8_vector_field@@Base+0xee>
  40ae8d:	nop    DWORD PTR [rax]
  40ae90:	ret    
  40ae91:	nop    DWORD PTR [rax+0x0]
  40ae98:	mov    QWORD PTR [rbx+0x28],rdx
  40ae9c:	mov    BYTE PTR [rax],0xa
  40ae9f:	mov    eax,DWORD PTR [rbx+0x38]
  40aea2:	mov    rdi,QWORD PTR [rbx+0x28]
  40aea6:	lea    ebp,[rax-0x1]
  40aea9:	movzx  eax,BYTE PTR [rbx+0x31]
  40aead:	mov    DWORD PTR [rbx+0x38],ebp
  40aeb0:	imul   eax,ebp
  40aeb3:	movsxd rbp,eax
  40aeb6:	lea    rax,[rdi+rbp*1]
  40aeba:	cmp    QWORD PTR [rbx+0x20],rax
  40aebe:	jae    40aee0 <flatcc_json_printer_uint8_vector_field@@Base+0x230>
  40aec0:	mov    rsi,rbp
  40aec3:	mov    rdi,rbx
  40aec6:	call   405350 <test_print@@Base+0xe80>
  40aecb:	mov    rax,QWORD PTR [rbx+0x28]
  40aecf:	lea    rdx,[rax+0x1]
  40aed3:	jmp    40ae1a <flatcc_json_printer_uint8_vector_field@@Base+0x16a>
  40aed8:	nop    DWORD PTR [rax+rax*1+0x0]
  40aee0:	mov    rdx,rbp
  40aee3:	mov    esi,0x20
  40aee8:	call   403200 <memset@plt>
  40aeed:	mov    rax,QWORD PTR [rbx+0x28]
  40aef1:	add    rax,rbp
  40aef4:	lea    rdx,[rax+0x1]
  40aef8:	jmp    40ae1a <flatcc_json_printer_uint8_vector_field@@Base+0x16a>
  40aefd:	mov    esi,0x20
  40af02:	mov    rdx,r13
  40af05:	call   403200 <memset@plt>
  40af0a:	mov    rsi,QWORD PTR [rbx+0x28]
  40af0e:	add    rsi,r13
  40af11:	mov    QWORD PTR [rbx+0x28],rsi
  40af15:	jmp    40ad54 <flatcc_json_printer_uint8_vector_field@@Base+0xa4>
  40af1a:	nop    WORD PTR [rax+rax*1+0x0]

000000000040af20 <flatcc_json_printer_utype_vector_field@@Base>:
  40af20:	endbr64 
  40af24:	jmp    40acb0 <flatcc_json_printer_uint8_vector_field@@Base>
  40af29:	nop    DWORD PTR [rax+0x0]

000000000040af30 <flatcc_json_printer_uint16_vector_field@@Base>:
  40af30:	endbr64 
  40af34:	lea    eax,[rdx+rdx*1+0x4]
  40af38:	cmp    eax,DWORD PTR [rsi+0x10]
  40af3b:	jge    40b110 <flatcc_json_printer_uint16_vector_field@@Base+0x1e0>
  40af41:	push   r13
  40af43:	push   r12
  40af45:	push   rbp
  40af46:	push   rbx
  40af47:	sub    rsp,0x8
  40af4b:	mov    rdx,QWORD PTR [rsi+0x8]
  40af4f:	movzx  ebp,WORD PTR [rdx+rax*1]
  40af53:	test   bp,bp
  40af56:	je     40b0a1 <flatcc_json_printer_uint16_vector_field@@Base+0x171>
  40af5c:	add    rbp,QWORD PTR [rsi]
  40af5f:	je     40b0a1 <flatcc_json_printer_uint16_vector_field@@Base+0x171>
  40af65:	mov    eax,DWORD PTR [rsi+0x18]
  40af68:	lea    edx,[rax+0x1]
  40af6b:	mov    DWORD PTR [rsi+0x18],edx
  40af6e:	test   eax,eax
  40af70:	je     40af81 <flatcc_json_printer_uint16_vector_field@@Base+0x51>
  40af72:	mov    rax,QWORD PTR [rdi+0x28]
  40af76:	lea    rdx,[rax+0x1]
  40af7a:	mov    QWORD PTR [rdi+0x28],rdx
  40af7e:	mov    BYTE PTR [rax],0x2c
  40af81:	mov    eax,DWORD PTR [rbp+0x0]
  40af84:	mov    rbx,rdi
  40af87:	add    rbp,rax
  40af8a:	movsxd rdx,r8d
  40af8d:	mov    rsi,rcx
  40af90:	mov    r12d,DWORD PTR [rbp+0x0]
  40af94:	call   406380 <test_print@@Base+0x1eb0>
  40af99:	mov    rax,QWORD PTR [rbx+0x28]
  40af9d:	inc    DWORD PTR [rbx+0x38]
  40afa0:	lea    rdx,[rax+0x1]
  40afa4:	mov    QWORD PTR [rbx+0x28],rdx
  40afa8:	mov    BYTE PTR [rax],0x5b
  40afab:	test   r12d,r12d
  40afae:	je     40b088 <flatcc_json_printer_uint16_vector_field@@Base+0x158>
  40afb4:	cmp    BYTE PTR [rbx+0x31],0x0
  40afb8:	mov    rsi,QWORD PTR [rbx+0x28]
  40afbc:	jne    40b0b0 <flatcc_json_printer_uint16_vector_field@@Base+0x180>
  40afc2:	cmp    QWORD PTR [rbx+0x20],rsi
  40afc6:	ja     40afd4 <flatcc_json_printer_uint16_vector_field@@Base+0xa4>
  40afc8:	xor    esi,esi
  40afca:	mov    rdi,rbx
  40afcd:	call   QWORD PTR [rbx+0x48]
  40afd0:	mov    rsi,QWORD PTR [rbx+0x28]
  40afd4:	movzx  edi,WORD PTR [rbp+0x4]
  40afd8:	lea    r13,[rbp+0x6]
  40afdc:	call   404820 <test_print@@Base+0x350>
  40afe1:	cdqe   
  40afe3:	add    rax,QWORD PTR [rbx+0x28]
  40afe7:	mov    QWORD PTR [rbx+0x28],rax
  40afeb:	lea    edx,[r12-0x2]
  40aff0:	cmp    r12d,0x1
  40aff4:	je     40b08c <flatcc_json_printer_uint16_vector_field@@Base+0x15c>
  40affa:	lea    rbp,[rbp+rdx*2+0x8]
  40afff:	jmp    40b03b <flatcc_json_printer_uint16_vector_field@@Base+0x10b>
  40b001:	nop    DWORD PTR [rax+0x0]
  40b008:	mov    rsi,QWORD PTR [rbx+0x28]
  40b00c:	cmp    rsi,QWORD PTR [rbx+0x20]
  40b010:	jb     40b01e <flatcc_json_printer_uint16_vector_field@@Base+0xee>
  40b012:	xor    esi,esi
  40b014:	mov    rdi,rbx
  40b017:	call   QWORD PTR [rbx+0x48]
  40b01a:	mov    rsi,QWORD PTR [rbx+0x28]
  40b01e:	movzx  edi,WORD PTR [r13+0x0]
  40b023:	add    r13,0x2
  40b027:	call   404820 <test_print@@Base+0x350>
  40b02c:	cdqe   
  40b02e:	add    rax,QWORD PTR [rbx+0x28]
  40b032:	mov    QWORD PTR [rbx+0x28],rax
  40b036:	cmp    r13,rbp
  40b039:	je     40b08c <flatcc_json_printer_uint16_vector_field@@Base+0x15c>
  40b03b:	lea    rdx,[rax+0x1]
  40b03f:	mov    QWORD PTR [rbx+0x28],rdx
  40b043:	mov    BYTE PTR [rax],0x2c
  40b046:	cmp    BYTE PTR [rbx+0x31],0x0
  40b04a:	je     40b008 <flatcc_json_printer_uint16_vector_field@@Base+0xd8>
  40b04c:	mov    rax,QWORD PTR [rbx+0x28]
  40b050:	lea    rdx,[rax+0x1]
  40b054:	mov    QWORD PTR [rbx+0x28],rdx
  40b058:	mov    BYTE PTR [rax],0xa
  40b05b:	movzx  esi,BYTE PTR [rbx+0x31]
  40b05f:	mov    rdi,QWORD PTR [rbx+0x28]
  40b063:	imul   esi,DWORD PTR [rbx+0x38]
  40b067:	movsxd r12,esi
  40b06a:	lea    rax,[rdi+r12*1]
  40b06e:	cmp    QWORD PTR [rbx+0x20],rax
  40b072:	jae    40b0f0 <flatcc_json_printer_uint16_vector_field@@Base+0x1c0>
  40b074:	mov    rsi,r12
  40b077:	mov    rdi,rbx
  40b07a:	call   405350 <test_print@@Base+0xe80>
  40b07f:	mov    rsi,QWORD PTR [rbx+0x28]
  40b083:	jmp    40b01e <flatcc_json_printer_uint16_vector_field@@Base+0xee>
  40b085:	nop    DWORD PTR [rax]
  40b088:	mov    rax,QWORD PTR [rbx+0x28]
  40b08c:	cmp    BYTE PTR [rbx+0x31],0x0
  40b090:	lea    rdx,[rax+0x1]
  40b094:	jne    40b118 <flatcc_json_printer_uint16_vector_field@@Base+0x1e8>
  40b09a:	mov    QWORD PTR [rbx+0x28],rdx
  40b09e:	mov    BYTE PTR [rax],0x5d
  40b0a1:	add    rsp,0x8
  40b0a5:	pop    rbx
  40b0a6:	pop    rbp
  40b0a7:	pop    r12
  40b0a9:	pop    r13
  40b0ab:	ret    
  40b0ac:	nop    DWORD PTR [rax+0x0]
  40b0b0:	lea    rax,[rsi+0x1]
  40b0b4:	mov    QWORD PTR [rbx+0x28],rax
  40b0b8:	mov    BYTE PTR [rsi],0xa
  40b0bb:	movzx  esi,BYTE PTR [rbx+0x31]
  40b0bf:	mov    rdi,QWORD PTR [rbx+0x28]
  40b0c3:	imul   esi,DWORD PTR [rbx+0x38]
  40b0c7:	movsxd r13,esi
  40b0ca:	lea    rax,[rdi+r13*1]
  40b0ce:	cmp    QWORD PTR [rbx+0x20],rax
  40b0d2:	jae    40b17d <flatcc_json_printer_uint16_vector_field@@Base+0x24d>
  40b0d8:	mov    rsi,r13
  40b0db:	mov    rdi,rbx
  40b0de:	call   405350 <test_print@@Base+0xe80>
  40b0e3:	mov    rsi,QWORD PTR [rbx+0x28]
  40b0e7:	jmp    40afd4 <flatcc_json_printer_uint16_vector_field@@Base+0xa4>
  40b0ec:	nop    DWORD PTR [rax+0x0]
  40b0f0:	mov    esi,0x20
  40b0f5:	mov    rdx,r12
  40b0f8:	call   403200 <memset@plt>
  40b0fd:	mov    rsi,QWORD PTR [rbx+0x28]
  40b101:	add    rsi,r12
  40b104:	mov    QWORD PTR [rbx+0x28],rsi
  40b108:	jmp    40b01e <flatcc_json_printer_uint16_vector_field@@Base+0xee>
  40b10d:	nop    DWORD PTR [rax]
  40b110:	ret    
  40b111:	nop    DWORD PTR [rax+0x0]
  40b118:	mov    QWORD PTR [rbx+0x28],rdx
  40b11c:	mov    BYTE PTR [rax],0xa
  40b11f:	mov    eax,DWORD PTR [rbx+0x38]
  40b122:	mov    rdi,QWORD PTR [rbx+0x28]
  40b126:	lea    ebp,[rax-0x1]
  40b129:	movzx  eax,BYTE PTR [rbx+0x31]
  40b12d:	mov    DWORD PTR [rbx+0x38],ebp
  40b130:	imul   eax,ebp
  40b133:	movsxd rbp,eax
  40b136:	lea    rax,[rdi+rbp*1]
  40b13a:	cmp    QWORD PTR [rbx+0x20],rax
  40b13e:	jae    40b160 <flatcc_json_printer_uint16_vector_field@@Base+0x230>
  40b140:	mov    rsi,rbp
  40b143:	mov    rdi,rbx
  40b146:	call   405350 <test_print@@Base+0xe80>
  40b14b:	mov    rax,QWORD PTR [rbx+0x28]
  40b14f:	lea    rdx,[rax+0x1]
  40b153:	jmp    40b09a <flatcc_json_printer_uint16_vector_field@@Base+0x16a>
  40b158:	nop    DWORD PTR [rax+rax*1+0x0]
  40b160:	mov    rdx,rbp
  40b163:	mov    esi,0x20
  40b168:	call   403200 <memset@plt>
  40b16d:	mov    rax,QWORD PTR [rbx+0x28]
  40b171:	add    rax,rbp
  40b174:	lea    rdx,[rax+0x1]
  40b178:	jmp    40b09a <flatcc_json_printer_uint16_vector_field@@Base+0x16a>
  40b17d:	mov    esi,0x20
  40b182:	mov    rdx,r13
  40b185:	call   403200 <memset@plt>
  40b18a:	mov    rsi,QWORD PTR [rbx+0x28]
  40b18e:	add    rsi,r13
  40b191:	mov    QWORD PTR [rbx+0x28],rsi
  40b195:	jmp    40afd4 <flatcc_json_printer_uint16_vector_field@@Base+0xa4>
  40b19a:	nop    WORD PTR [rax+rax*1+0x0]

000000000040b1a0 <flatcc_json_printer_uint32_vector_field@@Base>:
  40b1a0:	endbr64 
  40b1a4:	lea    eax,[rdx+rdx*1+0x4]
  40b1a8:	cmp    eax,DWORD PTR [rsi+0x10]
  40b1ab:	jge    40b2f8 <flatcc_json_printer_uint32_vector_field@@Base+0x158>
  40b1b1:	mov    rdx,QWORD PTR [rsi+0x8]
  40b1b5:	movzx  eax,WORD PTR [rdx+rax*1]
  40b1b9:	test   ax,ax
  40b1bc:	je     40b2f8 <flatcc_json_printer_uint32_vector_field@@Base+0x158>
  40b1c2:	add    rax,QWORD PTR [rsi]
  40b1c5:	je     40b2f8 <flatcc_json_printer_uint32_vector_field@@Base+0x158>
  40b1cb:	push   r13
  40b1cd:	push   r12
  40b1cf:	push   rbp
  40b1d0:	push   rbx
  40b1d1:	sub    rsp,0x8
  40b1d5:	mov    edx,DWORD PTR [rsi+0x18]
  40b1d8:	lea    r9d,[rdx+0x1]
  40b1dc:	mov    DWORD PTR [rsi+0x18],r9d
  40b1e0:	test   edx,edx
  40b1e2:	je     40b1f3 <flatcc_json_printer_uint32_vector_field@@Base+0x53>
  40b1e4:	mov    rdx,QWORD PTR [rdi+0x28]
  40b1e8:	lea    rsi,[rdx+0x1]
  40b1ec:	mov    QWORD PTR [rdi+0x28],rsi
  40b1f0:	mov    BYTE PTR [rdx],0x2c
  40b1f3:	mov    r12d,DWORD PTR [rax]
  40b1f6:	mov    rbx,rdi
  40b1f9:	add    r12,rax
  40b1fc:	movsxd rdx,r8d
  40b1ff:	mov    rsi,rcx
  40b202:	mov    ebp,DWORD PTR [r12]
  40b206:	call   406380 <test_print@@Base+0x1eb0>
  40b20b:	mov    rax,QWORD PTR [rbx+0x28]
  40b20f:	inc    DWORD PTR [rbx+0x38]
  40b212:	lea    rdx,[rax+0x1]
  40b216:	mov    QWORD PTR [rbx+0x28],rdx
  40b21a:	mov    BYTE PTR [rax],0x5b
  40b21d:	test   ebp,ebp
  40b21f:	je     40b300 <flatcc_json_printer_uint32_vector_field@@Base+0x160>
  40b225:	cmp    BYTE PTR [rbx+0x31],0x0
  40b229:	mov    rsi,QWORD PTR [rbx+0x28]
  40b22d:	jne    40b320 <flatcc_json_printer_uint32_vector_field@@Base+0x180>
  40b233:	cmp    QWORD PTR [rbx+0x20],rsi
  40b237:	ja     40b245 <flatcc_json_printer_uint32_vector_field@@Base+0xa5>
  40b239:	xor    esi,esi
  40b23b:	mov    rdi,rbx
  40b23e:	call   QWORD PTR [rbx+0x48]
  40b241:	mov    rsi,QWORD PTR [rbx+0x28]
  40b245:	mov    edi,DWORD PTR [r12+0x4]
  40b24a:	lea    r13,[r12+0x8]
  40b24f:	call   404950 <test_print@@Base+0x480>
  40b254:	cdqe   
  40b256:	add    rax,QWORD PTR [rbx+0x28]
  40b25a:	mov    QWORD PTR [rbx+0x28],rax
  40b25e:	lea    edx,[rbp-0x2]
  40b261:	cmp    ebp,0x1
  40b264:	je     40b304 <flatcc_json_printer_uint32_vector_field@@Base+0x164>
  40b26a:	lea    rbp,[r12+rdx*4+0xc]
  40b26f:	jmp    40b2aa <flatcc_json_printer_uint32_vector_field@@Base+0x10a>
  40b271:	nop    DWORD PTR [rax+0x0]
  40b278:	mov    rsi,QWORD PTR [rbx+0x28]
  40b27c:	cmp    rsi,QWORD PTR [rbx+0x20]
  40b280:	jb     40b28e <flatcc_json_printer_uint32_vector_field@@Base+0xee>
  40b282:	xor    esi,esi
  40b284:	mov    rdi,rbx
  40b287:	call   QWORD PTR [rbx+0x48]
  40b28a:	mov    rsi,QWORD PTR [rbx+0x28]
  40b28e:	mov    edi,DWORD PTR [r13+0x0]
  40b292:	add    r13,0x4
  40b296:	call   404950 <test_print@@Base+0x480>
  40b29b:	cdqe   
  40b29d:	add    rax,QWORD PTR [rbx+0x28]
  40b2a1:	mov    QWORD PTR [rbx+0x28],rax
  40b2a5:	cmp    r13,rbp
  40b2a8:	je     40b304 <flatcc_json_printer_uint32_vector_field@@Base+0x164>
  40b2aa:	lea    rdx,[rax+0x1]
  40b2ae:	mov    QWORD PTR [rbx+0x28],rdx
  40b2b2:	mov    BYTE PTR [rax],0x2c
  40b2b5:	cmp    BYTE PTR [rbx+0x31],0x0
  40b2b9:	je     40b278 <flatcc_json_printer_uint32_vector_field@@Base+0xd8>
  40b2bb:	mov    rax,QWORD PTR [rbx+0x28]
  40b2bf:	lea    rdx,[rax+0x1]
  40b2c3:	mov    QWORD PTR [rbx+0x28],rdx
  40b2c7:	mov    BYTE PTR [rax],0xa
  40b2ca:	movzx  esi,BYTE PTR [rbx+0x31]
  40b2ce:	mov    rdi,QWORD PTR [rbx+0x28]
  40b2d2:	imul   esi,DWORD PTR [rbx+0x38]
  40b2d6:	movsxd r12,esi
  40b2d9:	lea    rax,[rdi+r12*1]
  40b2dd:	cmp    QWORD PTR [rbx+0x20],rax
  40b2e1:	jae    40b360 <flatcc_json_printer_uint32_vector_field@@Base+0x1c0>
  40b2e3:	mov    rsi,r12
  40b2e6:	mov    rdi,rbx
  40b2e9:	call   405350 <test_print@@Base+0xe80>
  40b2ee:	mov    rsi,QWORD PTR [rbx+0x28]
  40b2f2:	jmp    40b28e <flatcc_json_printer_uint32_vector_field@@Base+0xee>
  40b2f4:	nop    DWORD PTR [rax+0x0]
  40b2f8:	ret    
  40b2f9:	nop    DWORD PTR [rax+0x0]
  40b300:	mov    rax,QWORD PTR [rbx+0x28]
  40b304:	cmp    BYTE PTR [rbx+0x31],0x0
  40b308:	lea    rdx,[rax+0x1]
  40b30c:	jne    40b380 <flatcc_json_printer_uint32_vector_field@@Base+0x1e0>
  40b30e:	mov    QWORD PTR [rbx+0x28],rdx
  40b312:	mov    BYTE PTR [rax],0x5d
  40b315:	add    rsp,0x8
  40b319:	pop    rbx
  40b31a:	pop    rbp
  40b31b:	pop    r12
  40b31d:	pop    r13
  40b31f:	ret    
  40b320:	lea    rax,[rsi+0x1]
  40b324:	mov    QWORD PTR [rbx+0x28],rax
  40b328:	mov    BYTE PTR [rsi],0xa
  40b32b:	movzx  esi,BYTE PTR [rbx+0x31]
  40b32f:	mov    rdi,QWORD PTR [rbx+0x28]
  40b333:	imul   esi,DWORD PTR [rbx+0x38]
  40b337:	movsxd r13,esi
  40b33a:	lea    rax,[rdi+r13*1]
  40b33e:	cmp    QWORD PTR [rbx+0x20],rax
  40b342:	jae    40b3dd <flatcc_json_printer_uint32_vector_field@@Base+0x23d>
  40b348:	mov    rsi,r13
  40b34b:	mov    rdi,rbx
  40b34e:	call   405350 <test_print@@Base+0xe80>
  40b353:	mov    rsi,QWORD PTR [rbx+0x28]
  40b357:	jmp    40b245 <flatcc_json_printer_uint32_vector_field@@Base+0xa5>
  40b35c:	nop    DWORD PTR [rax+0x0]
  40b360:	mov    esi,0x20
  40b365:	mov    rdx,r12
  40b368:	call   403200 <memset@plt>
  40b36d:	mov    rsi,QWORD PTR [rbx+0x28]
  40b371:	add    rsi,r12
  40b374:	mov    QWORD PTR [rbx+0x28],rsi
  40b378:	jmp    40b28e <flatcc_json_printer_uint32_vector_field@@Base+0xee>
  40b37d:	nop    DWORD PTR [rax]
  40b380:	mov    QWORD PTR [rbx+0x28],rdx
  40b384:	mov    BYTE PTR [rax],0xa
  40b387:	mov    eax,DWORD PTR [rbx+0x38]
  40b38a:	mov    rdi,QWORD PTR [rbx+0x28]
  40b38e:	lea    ebp,[rax-0x1]
  40b391:	movzx  eax,BYTE PTR [rbx+0x31]
  40b395:	mov    DWORD PTR [rbx+0x38],ebp
  40b398:	imul   eax,ebp
  40b39b:	movsxd rbp,eax
  40b39e:	lea    rax,[rdi+rbp*1]
  40b3a2:	cmp    QWORD PTR [rbx+0x20],rax
  40b3a6:	jae    40b3c0 <flatcc_json_printer_uint32_vector_field@@Base+0x220>
  40b3a8:	mov    rsi,rbp
  40b3ab:	mov    rdi,rbx
  40b3ae:	call   405350 <test_print@@Base+0xe80>
  40b3b3:	mov    rax,QWORD PTR [rbx+0x28]
  40b3b7:	lea    rdx,[rax+0x1]
  40b3bb:	jmp    40b30e <flatcc_json_printer_uint32_vector_field@@Base+0x16e>
  40b3c0:	mov    rdx,rbp
  40b3c3:	mov    esi,0x20
  40b3c8:	call   403200 <memset@plt>
  40b3cd:	mov    rax,QWORD PTR [rbx+0x28]
  40b3d1:	add    rax,rbp
  40b3d4:	lea    rdx,[rax+0x1]
  40b3d8:	jmp    40b30e <flatcc_json_printer_uint32_vector_field@@Base+0x16e>
  40b3dd:	mov    esi,0x20
  40b3e2:	mov    rdx,r13
  40b3e5:	call   403200 <memset@plt>
  40b3ea:	mov    rsi,QWORD PTR [rbx+0x28]
  40b3ee:	add    rsi,r13
  40b3f1:	mov    QWORD PTR [rbx+0x28],rsi
  40b3f5:	jmp    40b245 <flatcc_json_printer_uint32_vector_field@@Base+0xa5>
  40b3fa:	nop    WORD PTR [rax+rax*1+0x0]

000000000040b400 <flatcc_json_printer_uint64_vector_field@@Base>:
  40b400:	endbr64 
  40b404:	lea    eax,[rdx+rdx*1+0x4]
  40b408:	cmp    eax,DWORD PTR [rsi+0x10]
  40b40b:	jge    40b558 <flatcc_json_printer_uint64_vector_field@@Base+0x158>
  40b411:	mov    rdx,QWORD PTR [rsi+0x8]
  40b415:	movzx  eax,WORD PTR [rdx+rax*1]
  40b419:	test   ax,ax
  40b41c:	je     40b558 <flatcc_json_printer_uint64_vector_field@@Base+0x158>
  40b422:	add    rax,QWORD PTR [rsi]
  40b425:	je     40b558 <flatcc_json_printer_uint64_vector_field@@Base+0x158>
  40b42b:	push   r13
  40b42d:	push   r12
  40b42f:	push   rbp
  40b430:	push   rbx
  40b431:	sub    rsp,0x8
  40b435:	mov    edx,DWORD PTR [rsi+0x18]
  40b438:	lea    r9d,[rdx+0x1]
  40b43c:	mov    DWORD PTR [rsi+0x18],r9d
  40b440:	test   edx,edx
  40b442:	je     40b453 <flatcc_json_printer_uint64_vector_field@@Base+0x53>
  40b444:	mov    rdx,QWORD PTR [rdi+0x28]
  40b448:	lea    rsi,[rdx+0x1]
  40b44c:	mov    QWORD PTR [rdi+0x28],rsi
  40b450:	mov    BYTE PTR [rdx],0x2c
  40b453:	mov    r12d,DWORD PTR [rax]
  40b456:	mov    rbx,rdi
  40b459:	add    r12,rax
  40b45c:	movsxd rdx,r8d
  40b45f:	mov    rsi,rcx
  40b462:	mov    ebp,DWORD PTR [r12]
  40b466:	call   406380 <test_print@@Base+0x1eb0>
  40b46b:	mov    rax,QWORD PTR [rbx+0x28]
  40b46f:	inc    DWORD PTR [rbx+0x38]
  40b472:	lea    rdx,[rax+0x1]
  40b476:	mov    QWORD PTR [rbx+0x28],rdx
  40b47a:	mov    BYTE PTR [rax],0x5b
  40b47d:	test   ebp,ebp
  40b47f:	je     40b560 <flatcc_json_printer_uint64_vector_field@@Base+0x160>
  40b485:	cmp    BYTE PTR [rbx+0x31],0x0
  40b489:	mov    rsi,QWORD PTR [rbx+0x28]
  40b48d:	jne    40b580 <flatcc_json_printer_uint64_vector_field@@Base+0x180>
  40b493:	cmp    QWORD PTR [rbx+0x20],rsi
  40b497:	ja     40b4a5 <flatcc_json_printer_uint64_vector_field@@Base+0xa5>
  40b499:	xor    esi,esi
  40b49b:	mov    rdi,rbx
  40b49e:	call   QWORD PTR [rbx+0x48]
  40b4a1:	mov    rsi,QWORD PTR [rbx+0x28]
  40b4a5:	mov    rdi,QWORD PTR [r12+0x4]
  40b4aa:	lea    r13,[r12+0xc]
  40b4af:	call   404c00 <test_print@@Base+0x730>
  40b4b4:	cdqe   
  40b4b6:	add    rax,QWORD PTR [rbx+0x28]
  40b4ba:	mov    QWORD PTR [rbx+0x28],rax
  40b4be:	lea    edx,[rbp-0x2]
  40b4c1:	cmp    ebp,0x1
  40b4c4:	je     40b564 <flatcc_json_printer_uint64_vector_field@@Base+0x164>
  40b4ca:	lea    rbp,[r12+rdx*8+0x14]
  40b4cf:	jmp    40b50a <flatcc_json_printer_uint64_vector_field@@Base+0x10a>
  40b4d1:	nop    DWORD PTR [rax+0x0]
  40b4d8:	mov    rsi,QWORD PTR [rbx+0x28]
  40b4dc:	cmp    rsi,QWORD PTR [rbx+0x20]
  40b4e0:	jb     40b4ee <flatcc_json_printer_uint64_vector_field@@Base+0xee>
  40b4e2:	xor    esi,esi
  40b4e4:	mov    rdi,rbx
  40b4e7:	call   QWORD PTR [rbx+0x48]
  40b4ea:	mov    rsi,QWORD PTR [rbx+0x28]
  40b4ee:	mov    rdi,QWORD PTR [r13+0x0]
  40b4f2:	add    r13,0x8
  40b4f6:	call   404c00 <test_print@@Base+0x730>
  40b4fb:	cdqe   
  40b4fd:	add    rax,QWORD PTR [rbx+0x28]
  40b501:	mov    QWORD PTR [rbx+0x28],rax
  40b505:	cmp    r13,rbp
  40b508:	je     40b564 <flatcc_json_printer_uint64_vector_field@@Base+0x164>
  40b50a:	lea    rdx,[rax+0x1]
  40b50e:	mov    QWORD PTR [rbx+0x28],rdx
  40b512:	mov    BYTE PTR [rax],0x2c
  40b515:	cmp    BYTE PTR [rbx+0x31],0x0
  40b519:	je     40b4d8 <flatcc_json_printer_uint64_vector_field@@Base+0xd8>
  40b51b:	mov    rax,QWORD PTR [rbx+0x28]
  40b51f:	lea    rdx,[rax+0x1]
  40b523:	mov    QWORD PTR [rbx+0x28],rdx
  40b527:	mov    BYTE PTR [rax],0xa
  40b52a:	movzx  esi,BYTE PTR [rbx+0x31]
  40b52e:	mov    rdi,QWORD PTR [rbx+0x28]
  40b532:	imul   esi,DWORD PTR [rbx+0x38]
  40b536:	movsxd r12,esi
  40b539:	lea    rax,[rdi+r12*1]
  40b53d:	cmp    QWORD PTR [rbx+0x20],rax
  40b541:	jae    40b5c0 <flatcc_json_printer_uint64_vector_field@@Base+0x1c0>
  40b543:	mov    rsi,r12
  40b546:	mov    rdi,rbx
  40b549:	call   405350 <test_print@@Base+0xe80>
  40b54e:	mov    rsi,QWORD PTR [rbx+0x28]
  40b552:	jmp    40b4ee <flatcc_json_printer_uint64_vector_field@@Base+0xee>
  40b554:	nop    DWORD PTR [rax+0x0]
  40b558:	ret    
  40b559:	nop    DWORD PTR [rax+0x0]
  40b560:	mov    rax,QWORD PTR [rbx+0x28]
  40b564:	cmp    BYTE PTR [rbx+0x31],0x0
  40b568:	lea    rdx,[rax+0x1]
  40b56c:	jne    40b5e0 <flatcc_json_printer_uint64_vector_field@@Base+0x1e0>
  40b56e:	mov    QWORD PTR [rbx+0x28],rdx
  40b572:	mov    BYTE PTR [rax],0x5d
  40b575:	add    rsp,0x8
  40b579:	pop    rbx
  40b57a:	pop    rbp
  40b57b:	pop    r12
  40b57d:	pop    r13
  40b57f:	ret    
  40b580:	lea    rax,[rsi+0x1]
  40b584:	mov    QWORD PTR [rbx+0x28],rax
  40b588:	mov    BYTE PTR [rsi],0xa
  40b58b:	movzx  esi,BYTE PTR [rbx+0x31]
  40b58f:	mov    rdi,QWORD PTR [rbx+0x28]
  40b593:	imul   esi,DWORD PTR [rbx+0x38]
  40b597:	movsxd r13,esi
  40b59a:	lea    rax,[rdi+r13*1]
  40b59e:	cmp    QWORD PTR [rbx+0x20],rax
  40b5a2:	jae    40b63d <flatcc_json_printer_uint64_vector_field@@Base+0x23d>
  40b5a8:	mov    rsi,r13
  40b5ab:	mov    rdi,rbx
  40b5ae:	call   405350 <test_print@@Base+0xe80>
  40b5b3:	mov    rsi,QWORD PTR [rbx+0x28]
  40b5b7:	jmp    40b4a5 <flatcc_json_printer_uint64_vector_field@@Base+0xa5>
  40b5bc:	nop    DWORD PTR [rax+0x0]
  40b5c0:	mov    esi,0x20
  40b5c5:	mov    rdx,r12
  40b5c8:	call   403200 <memset@plt>
  40b5cd:	mov    rsi,QWORD PTR [rbx+0x28]
  40b5d1:	add    rsi,r12
  40b5d4:	mov    QWORD PTR [rbx+0x28],rsi
  40b5d8:	jmp    40b4ee <flatcc_json_printer_uint64_vector_field@@Base+0xee>
  40b5dd:	nop    DWORD PTR [rax]
  40b5e0:	mov    QWORD PTR [rbx+0x28],rdx
  40b5e4:	mov    BYTE PTR [rax],0xa
  40b5e7:	mov    eax,DWORD PTR [rbx+0x38]
  40b5ea:	mov    rdi,QWORD PTR [rbx+0x28]
  40b5ee:	lea    ebp,[rax-0x1]
  40b5f1:	movzx  eax,BYTE PTR [rbx+0x31]
  40b5f5:	mov    DWORD PTR [rbx+0x38],ebp
  40b5f8:	imul   eax,ebp
  40b5fb:	movsxd rbp,eax
  40b5fe:	lea    rax,[rdi+rbp*1]
  40b602:	cmp    QWORD PTR [rbx+0x20],rax
  40b606:	jae    40b620 <flatcc_json_printer_uint64_vector_field@@Base+0x220>
  40b608:	mov    rsi,rbp
  40b60b:	mov    rdi,rbx
  40b60e:	call   405350 <test_print@@Base+0xe80>
  40b613:	mov    rax,QWORD PTR [rbx+0x28]
  40b617:	lea    rdx,[rax+0x1]
  40b61b:	jmp    40b56e <flatcc_json_printer_uint64_vector_field@@Base+0x16e>
  40b620:	mov    rdx,rbp
  40b623:	mov    esi,0x20
  40b628:	call   403200 <memset@plt>
  40b62d:	mov    rax,QWORD PTR [rbx+0x28]
  40b631:	add    rax,rbp
  40b634:	lea    rdx,[rax+0x1]
  40b638:	jmp    40b56e <flatcc_json_printer_uint64_vector_field@@Base+0x16e>
  40b63d:	mov    esi,0x20
  40b642:	mov    rdx,r13
  40b645:	call   403200 <memset@plt>
  40b64a:	mov    rsi,QWORD PTR [rbx+0x28]
  40b64e:	add    rsi,r13
  40b651:	mov    QWORD PTR [rbx+0x28],rsi
  40b655:	jmp    40b4a5 <flatcc_json_printer_uint64_vector_field@@Base+0xa5>
  40b65a:	nop    WORD PTR [rax+rax*1+0x0]

000000000040b660 <flatcc_json_printer_int8_vector_field@@Base>:
  40b660:	endbr64 
  40b664:	lea    eax,[rdx+rdx*1+0x4]
  40b668:	cmp    eax,DWORD PTR [rsi+0x10]
  40b66b:	jge    40b7f0 <flatcc_json_printer_int8_vector_field@@Base+0x190>
  40b671:	mov    rdx,QWORD PTR [rsi+0x8]
  40b675:	movzx  eax,WORD PTR [rdx+rax*1]
  40b679:	test   ax,ax
  40b67c:	je     40b7f0 <flatcc_json_printer_int8_vector_field@@Base+0x190>
  40b682:	add    rax,QWORD PTR [rsi]
  40b685:	je     40b7f0 <flatcc_json_printer_int8_vector_field@@Base+0x190>
  40b68b:	push   r13
  40b68d:	push   r12
  40b68f:	push   rbp
  40b690:	push   rbx
  40b691:	sub    rsp,0x8
  40b695:	mov    edx,DWORD PTR [rsi+0x18]
  40b698:	lea    r9d,[rdx+0x1]
  40b69c:	mov    DWORD PTR [rsi+0x18],r9d
  40b6a0:	test   edx,edx
  40b6a2:	je     40b6b3 <flatcc_json_printer_int8_vector_field@@Base+0x53>
  40b6a4:	mov    rdx,QWORD PTR [rdi+0x28]
  40b6a8:	lea    rsi,[rdx+0x1]
  40b6ac:	mov    QWORD PTR [rdi+0x28],rsi
  40b6b0:	mov    BYTE PTR [rdx],0x2c
  40b6b3:	mov    r12d,DWORD PTR [rax]
  40b6b6:	mov    rbp,rdi
  40b6b9:	add    r12,rax
  40b6bc:	movsxd rdx,r8d
  40b6bf:	mov    rsi,rcx
  40b6c2:	mov    ebx,DWORD PTR [r12]
  40b6c6:	call   406380 <test_print@@Base+0x1eb0>
  40b6cb:	mov    rax,QWORD PTR [rbp+0x28]
  40b6cf:	inc    DWORD PTR [rbp+0x38]
  40b6d2:	lea    rdx,[rax+0x1]
  40b6d6:	mov    QWORD PTR [rbp+0x28],rdx
  40b6da:	mov    BYTE PTR [rax],0x5b
  40b6dd:	test   ebx,ebx
  40b6df:	je     40b7f8 <flatcc_json_printer_int8_vector_field@@Base+0x198>
  40b6e5:	cmp    BYTE PTR [rbp+0x31],0x0
  40b6e9:	mov    rsi,QWORD PTR [rbp+0x28]
  40b6ed:	jne    40b820 <flatcc_json_printer_int8_vector_field@@Base+0x1c0>
  40b6f3:	cmp    QWORD PTR [rbp+0x20],rsi
  40b6f7:	ja     40b705 <flatcc_json_printer_int8_vector_field@@Base+0xa5>
  40b6f9:	xor    esi,esi
  40b6fb:	mov    rdi,rbp
  40b6fe:	call   QWORD PTR [rbp+0x48]
  40b701:	mov    rsi,QWORD PTR [rbp+0x28]
  40b705:	movsx  r8d,BYTE PTR [r12+0x4]
  40b70b:	mov    edi,r8d
  40b70e:	shr    r8d,0x1f
  40b712:	test   dil,dil
  40b715:	jns    40b71f <flatcc_json_printer_int8_vector_field@@Base+0xbf>
  40b717:	mov    BYTE PTR [rsi],0x2d
  40b71a:	neg    edi
  40b71c:	inc    rsi
  40b71f:	movzx  edi,dil
  40b723:	call   405590 <test_print@@Base+0x10c0>
  40b728:	add    eax,r8d
  40b72b:	cdqe   
  40b72d:	add    rax,QWORD PTR [rbp+0x28]
  40b731:	mov    QWORD PTR [rbp+0x28],rax
  40b735:	lea    r13,[r12+0x5]
  40b73a:	lea    edx,[rbx-0x2]
  40b73d:	cmp    ebx,0x1
  40b740:	je     40b7fc <flatcc_json_printer_int8_vector_field@@Base+0x19c>
  40b746:	lea    rbx,[r12+rdx*1+0x6]
  40b74b:	jmp    40b79d <flatcc_json_printer_int8_vector_field@@Base+0x13d>
  40b74d:	nop    DWORD PTR [rax]
  40b750:	mov    rsi,QWORD PTR [rbp+0x28]
  40b754:	cmp    rsi,QWORD PTR [rbp+0x20]
  40b758:	jb     40b766 <flatcc_json_printer_int8_vector_field@@Base+0x106>
  40b75a:	xor    esi,esi
  40b75c:	mov    rdi,rbp
  40b75f:	call   QWORD PTR [rbp+0x48]
  40b762:	mov    rsi,QWORD PTR [rbp+0x28]
  40b766:	movsx  r8d,BYTE PTR [r13+0x0]
  40b76b:	mov    edi,r8d
  40b76e:	shr    r8d,0x1f
  40b772:	test   dil,dil
  40b775:	jns    40b77f <flatcc_json_printer_int8_vector_field@@Base+0x11f>
  40b777:	mov    BYTE PTR [rsi],0x2d
  40b77a:	neg    edi
  40b77c:	inc    rsi
  40b77f:	movzx  edi,dil
  40b783:	call   405590 <test_print@@Base+0x10c0>
  40b788:	add    eax,r8d
  40b78b:	cdqe   
  40b78d:	add    rax,QWORD PTR [rbp+0x28]
  40b791:	inc    r13
  40b794:	mov    QWORD PTR [rbp+0x28],rax
  40b798:	cmp    rbx,r13
  40b79b:	je     40b7fc <flatcc_json_printer_int8_vector_field@@Base+0x19c>
  40b79d:	lea    rdx,[rax+0x1]
  40b7a1:	mov    QWORD PTR [rbp+0x28],rdx
  40b7a5:	mov    BYTE PTR [rax],0x2c
  40b7a8:	cmp    BYTE PTR [rbp+0x31],0x0
  40b7ac:	je     40b750 <flatcc_json_printer_int8_vector_field@@Base+0xf0>
  40b7ae:	mov    rax,QWORD PTR [rbp+0x28]
  40b7b2:	lea    rdx,[rax+0x1]
  40b7b6:	mov    QWORD PTR [rbp+0x28],rdx
  40b7ba:	mov    BYTE PTR [rax],0xa
  40b7bd:	movzx  esi,BYTE PTR [rbp+0x31]
  40b7c1:	mov    rdi,QWORD PTR [rbp+0x28]
  40b7c5:	imul   esi,DWORD PTR [rbp+0x38]
  40b7c9:	movsxd r12,esi
  40b7cc:	lea    rax,[rdi+r12*1]
  40b7d0:	cmp    QWORD PTR [rbp+0x20],rax
  40b7d4:	jae    40b840 <flatcc_json_printer_int8_vector_field@@Base+0x1e0>
  40b7d6:	mov    rsi,r12
  40b7d9:	mov    rdi,rbp
  40b7dc:	call   405350 <test_print@@Base+0xe80>
  40b7e1:	mov    rsi,QWORD PTR [rbp+0x28]
  40b7e5:	jmp    40b766 <flatcc_json_printer_int8_vector_field@@Base+0x106>
  40b7ea:	nop    WORD PTR [rax+rax*1+0x0]
  40b7f0:	ret    
  40b7f1:	nop    DWORD PTR [rax+0x0]
  40b7f8:	mov    rax,QWORD PTR [rbp+0x28]
  40b7fc:	cmp    BYTE PTR [rbp+0x31],0x0
  40b800:	lea    rdx,[rax+0x1]
  40b804:	jne    40b860 <flatcc_json_printer_int8_vector_field@@Base+0x200>
  40b806:	mov    QWORD PTR [rbp+0x28],rdx
  40b80a:	mov    BYTE PTR [rax],0x5d
  40b80d:	add    rsp,0x8
  40b811:	pop    rbx
  40b812:	pop    rbp
  40b813:	pop    r12
  40b815:	pop    r13
  40b817:	ret    
  40b818:	nop    DWORD PTR [rax+rax*1+0x0]
  40b820:	lea    rax,[rsi+0x1]
  40b824:	mov    QWORD PTR [rbp+0x28],rax
  40b828:	mov    BYTE PTR [rsi],0xa
  40b82b:	mov    rdi,rbp
  40b82e:	call   4053d0 <test_print@@Base+0xf00>
  40b833:	mov    rsi,QWORD PTR [rbp+0x28]
  40b837:	jmp    40b705 <flatcc_json_printer_int8_vector_field@@Base+0xa5>
  40b83c:	nop    DWORD PTR [rax+0x0]
  40b840:	mov    esi,0x20
  40b845:	mov    rdx,r12
  40b848:	call   403200 <memset@plt>
  40b84d:	mov    rsi,QWORD PTR [rbp+0x28]
  40b851:	add    rsi,r12
  40b854:	mov    QWORD PTR [rbp+0x28],rsi
  40b858:	jmp    40b766 <flatcc_json_printer_int8_vector_field@@Base+0x106>
  40b85d:	nop    DWORD PTR [rax]
  40b860:	mov    QWORD PTR [rbp+0x28],rdx
  40b864:	mov    BYTE PTR [rax],0xa
  40b867:	mov    eax,DWORD PTR [rbp+0x38]
  40b86a:	mov    rdi,QWORD PTR [rbp+0x28]
  40b86e:	lea    ebx,[rax-0x1]
  40b871:	movzx  eax,BYTE PTR [rbp+0x31]
  40b875:	mov    DWORD PTR [rbp+0x38],ebx
  40b878:	imul   eax,ebx
  40b87b:	movsxd rbx,eax
  40b87e:	lea    rax,[rdi+rbx*1]
  40b882:	cmp    QWORD PTR [rbp+0x20],rax
  40b886:	jae    40b8a0 <flatcc_json_printer_int8_vector_field@@Base+0x240>
  40b888:	mov    rsi,rbx
  40b88b:	mov    rdi,rbp
  40b88e:	call   405350 <test_print@@Base+0xe80>
  40b893:	mov    rax,QWORD PTR [rbp+0x28]
  40b897:	lea    rdx,[rax+0x1]
  40b89b:	jmp    40b806 <flatcc_json_printer_int8_vector_field@@Base+0x1a6>
  40b8a0:	mov    rdx,rbx
  40b8a3:	mov    esi,0x20
  40b8a8:	call   403200 <memset@plt>
  40b8ad:	mov    rax,QWORD PTR [rbp+0x28]
  40b8b1:	add    rax,rbx
  40b8b4:	lea    rdx,[rax+0x1]
  40b8b8:	jmp    40b806 <flatcc_json_printer_int8_vector_field@@Base+0x1a6>
  40b8bd:	nop    DWORD PTR [rax]

000000000040b8c0 <flatcc_json_printer_int16_vector_field@@Base>:
  40b8c0:	endbr64 
  40b8c4:	lea    eax,[rdx+rdx*1+0x4]
  40b8c8:	cmp    eax,DWORD PTR [rsi+0x10]
  40b8cb:	jge    40ba50 <flatcc_json_printer_int16_vector_field@@Base+0x190>
  40b8d1:	mov    rdx,QWORD PTR [rsi+0x8]
  40b8d5:	movzx  eax,WORD PTR [rdx+rax*1]
  40b8d9:	test   ax,ax
  40b8dc:	je     40ba50 <flatcc_json_printer_int16_vector_field@@Base+0x190>
  40b8e2:	add    rax,QWORD PTR [rsi]
  40b8e5:	je     40ba50 <flatcc_json_printer_int16_vector_field@@Base+0x190>
  40b8eb:	push   r13
  40b8ed:	push   r12
  40b8ef:	push   rbp
  40b8f0:	push   rbx
  40b8f1:	sub    rsp,0x8
  40b8f5:	mov    edx,DWORD PTR [rsi+0x18]
  40b8f8:	lea    r9d,[rdx+0x1]
  40b8fc:	mov    DWORD PTR [rsi+0x18],r9d
  40b900:	test   edx,edx
  40b902:	je     40b913 <flatcc_json_printer_int16_vector_field@@Base+0x53>
  40b904:	mov    rdx,QWORD PTR [rdi+0x28]
  40b908:	lea    rsi,[rdx+0x1]
  40b90c:	mov    QWORD PTR [rdi+0x28],rsi
  40b910:	mov    BYTE PTR [rdx],0x2c
  40b913:	mov    r12d,DWORD PTR [rax]
  40b916:	mov    rbp,rdi
  40b919:	add    r12,rax
  40b91c:	movsxd rdx,r8d
  40b91f:	mov    rsi,rcx
  40b922:	mov    ebx,DWORD PTR [r12]
  40b926:	call   406380 <test_print@@Base+0x1eb0>
  40b92b:	mov    rax,QWORD PTR [rbp+0x28]
  40b92f:	inc    DWORD PTR [rbp+0x38]
  40b932:	lea    rdx,[rax+0x1]
  40b936:	mov    QWORD PTR [rbp+0x28],rdx
  40b93a:	mov    BYTE PTR [rax],0x5b
  40b93d:	test   ebx,ebx
  40b93f:	je     40ba58 <flatcc_json_printer_int16_vector_field@@Base+0x198>
  40b945:	cmp    BYTE PTR [rbp+0x31],0x0
  40b949:	mov    rsi,QWORD PTR [rbp+0x28]
  40b94d:	jne    40ba80 <flatcc_json_printer_int16_vector_field@@Base+0x1c0>
  40b953:	cmp    QWORD PTR [rbp+0x20],rsi
  40b957:	ja     40b965 <flatcc_json_printer_int16_vector_field@@Base+0xa5>
  40b959:	xor    esi,esi
  40b95b:	mov    rdi,rbp
  40b95e:	call   QWORD PTR [rbp+0x48]
  40b961:	mov    rsi,QWORD PTR [rbp+0x28]
  40b965:	movsx  r11d,WORD PTR [r12+0x4]
  40b96b:	mov    edi,r11d
  40b96e:	shr    r11d,0x1f
  40b972:	test   di,di
  40b975:	jns    40b97f <flatcc_json_printer_int16_vector_field@@Base+0xbf>
  40b977:	mov    BYTE PTR [rsi],0x2d
  40b97a:	neg    edi
  40b97c:	inc    rsi
  40b97f:	movzx  edi,di
  40b982:	call   404820 <test_print@@Base+0x350>
  40b987:	add    eax,r11d
  40b98a:	cdqe   
  40b98c:	add    rax,QWORD PTR [rbp+0x28]
  40b990:	mov    QWORD PTR [rbp+0x28],rax
  40b994:	lea    r13,[r12+0x6]
  40b999:	lea    edx,[rbx-0x2]
  40b99c:	cmp    ebx,0x1
  40b99f:	je     40ba5c <flatcc_json_printer_int16_vector_field@@Base+0x19c>
  40b9a5:	lea    rbx,[r12+rdx*2+0x8]
  40b9aa:	jmp    40b9fd <flatcc_json_printer_int16_vector_field@@Base+0x13d>
  40b9ac:	nop    DWORD PTR [rax+0x0]
  40b9b0:	mov    rsi,QWORD PTR [rbp+0x28]
  40b9b4:	cmp    rsi,QWORD PTR [rbp+0x20]
  40b9b8:	jb     40b9c6 <flatcc_json_printer_int16_vector_field@@Base+0x106>
  40b9ba:	xor    esi,esi
  40b9bc:	mov    rdi,rbp
  40b9bf:	call   QWORD PTR [rbp+0x48]
  40b9c2:	mov    rsi,QWORD PTR [rbp+0x28]
  40b9c6:	movsx  r11d,WORD PTR [r13+0x0]
  40b9cb:	mov    edi,r11d
  40b9ce:	shr    r11d,0x1f
  40b9d2:	test   di,di
  40b9d5:	jns    40b9df <flatcc_json_printer_int16_vector_field@@Base+0x11f>
  40b9d7:	mov    BYTE PTR [rsi],0x2d
  40b9da:	neg    edi
  40b9dc:	inc    rsi
  40b9df:	movzx  edi,di
  40b9e2:	call   404820 <test_print@@Base+0x350>
  40b9e7:	add    eax,r11d
  40b9ea:	cdqe   
  40b9ec:	add    rax,QWORD PTR [rbp+0x28]
  40b9f0:	add    r13,0x2
  40b9f4:	mov    QWORD PTR [rbp+0x28],rax
  40b9f8:	cmp    r13,rbx
  40b9fb:	je     40ba5c <flatcc_json_printer_int16_vector_field@@Base+0x19c>
  40b9fd:	lea    rdx,[rax+0x1]
  40ba01:	mov    QWORD PTR [rbp+0x28],rdx
  40ba05:	mov    BYTE PTR [rax],0x2c
  40ba08:	cmp    BYTE PTR [rbp+0x31],0x0
  40ba0c:	je     40b9b0 <flatcc_json_printer_int16_vector_field@@Base+0xf0>
  40ba0e:	mov    rax,QWORD PTR [rbp+0x28]
  40ba12:	lea    rdx,[rax+0x1]
  40ba16:	mov    QWORD PTR [rbp+0x28],rdx
  40ba1a:	mov    BYTE PTR [rax],0xa
  40ba1d:	movzx  esi,BYTE PTR [rbp+0x31]
  40ba21:	mov    rdi,QWORD PTR [rbp+0x28]
  40ba25:	imul   esi,DWORD PTR [rbp+0x38]
  40ba29:	movsxd r12,esi
  40ba2c:	lea    rax,[rdi+r12*1]
  40ba30:	cmp    QWORD PTR [rbp+0x20],rax
  40ba34:	jae    40baa0 <flatcc_json_printer_int16_vector_field@@Base+0x1e0>
  40ba36:	mov    rsi,r12
  40ba39:	mov    rdi,rbp
  40ba3c:	call   405350 <test_print@@Base+0xe80>
  40ba41:	mov    rsi,QWORD PTR [rbp+0x28]
  40ba45:	jmp    40b9c6 <flatcc_json_printer_int16_vector_field@@Base+0x106>
  40ba4a:	nop    WORD PTR [rax+rax*1+0x0]
  40ba50:	ret    
  40ba51:	nop    DWORD PTR [rax+0x0]
  40ba58:	mov    rax,QWORD PTR [rbp+0x28]
  40ba5c:	cmp    BYTE PTR [rbp+0x31],0x0
  40ba60:	lea    rdx,[rax+0x1]
  40ba64:	jne    40bac0 <flatcc_json_printer_int16_vector_field@@Base+0x200>
  40ba66:	mov    QWORD PTR [rbp+0x28],rdx
  40ba6a:	mov    BYTE PTR [rax],0x5d
  40ba6d:	add    rsp,0x8
  40ba71:	pop    rbx
  40ba72:	pop    rbp
  40ba73:	pop    r12
  40ba75:	pop    r13
  40ba77:	ret    
  40ba78:	nop    DWORD PTR [rax+rax*1+0x0]
  40ba80:	lea    rax,[rsi+0x1]
  40ba84:	mov    QWORD PTR [rbp+0x28],rax
  40ba88:	mov    BYTE PTR [rsi],0xa
  40ba8b:	mov    rdi,rbp
  40ba8e:	call   4053d0 <test_print@@Base+0xf00>
  40ba93:	mov    rsi,QWORD PTR [rbp+0x28]
  40ba97:	jmp    40b965 <flatcc_json_printer_int16_vector_field@@Base+0xa5>
  40ba9c:	nop    DWORD PTR [rax+0x0]
  40baa0:	mov    esi,0x20
  40baa5:	mov    rdx,r12
  40baa8:	call   403200 <memset@plt>
  40baad:	mov    rsi,QWORD PTR [rbp+0x28]
  40bab1:	add    rsi,r12
  40bab4:	mov    QWORD PTR [rbp+0x28],rsi
  40bab8:	jmp    40b9c6 <flatcc_json_printer_int16_vector_field@@Base+0x106>
  40babd:	nop    DWORD PTR [rax]
  40bac0:	mov    QWORD PTR [rbp+0x28],rdx
  40bac4:	mov    BYTE PTR [rax],0xa
  40bac7:	mov    eax,DWORD PTR [rbp+0x38]
  40baca:	mov    rdi,QWORD PTR [rbp+0x28]
  40bace:	lea    ebx,[rax-0x1]
  40bad1:	movzx  eax,BYTE PTR [rbp+0x31]
  40bad5:	mov    DWORD PTR [rbp+0x38],ebx
  40bad8:	imul   eax,ebx
  40badb:	movsxd rbx,eax
  40bade:	lea    rax,[rdi+rbx*1]
  40bae2:	cmp    QWORD PTR [rbp+0x20],rax
  40bae6:	jae    40bb00 <flatcc_json_printer_int16_vector_field@@Base+0x240>
  40bae8:	mov    rsi,rbx
  40baeb:	mov    rdi,rbp
  40baee:	call   405350 <test_print@@Base+0xe80>
  40baf3:	mov    rax,QWORD PTR [rbp+0x28]
  40baf7:	lea    rdx,[rax+0x1]
  40bafb:	jmp    40ba66 <flatcc_json_printer_int16_vector_field@@Base+0x1a6>
  40bb00:	mov    rdx,rbx
  40bb03:	mov    esi,0x20
  40bb08:	call   403200 <memset@plt>
  40bb0d:	mov    rax,QWORD PTR [rbp+0x28]
  40bb11:	add    rax,rbx
  40bb14:	lea    rdx,[rax+0x1]
  40bb18:	jmp    40ba66 <flatcc_json_printer_int16_vector_field@@Base+0x1a6>
  40bb1d:	nop    DWORD PTR [rax]

000000000040bb20 <flatcc_json_printer_int32_vector_field@@Base>:
  40bb20:	endbr64 
  40bb24:	lea    eax,[rdx+rdx*1+0x4]
  40bb28:	cmp    eax,DWORD PTR [rsi+0x10]
  40bb2b:	jge    40bd00 <flatcc_json_printer_int32_vector_field@@Base+0x1e0>
  40bb31:	push   r14
  40bb33:	push   r13
  40bb35:	push   r12
  40bb37:	push   rbp
  40bb38:	push   rbx
  40bb39:	mov    rdx,QWORD PTR [rsi+0x8]
  40bb3d:	movzx  r12d,WORD PTR [rdx+rax*1]
  40bb42:	test   r12w,r12w
  40bb46:	je     40bcb5 <flatcc_json_printer_int32_vector_field@@Base+0x195>
  40bb4c:	add    r12,QWORD PTR [rsi]
  40bb4f:	je     40bcb5 <flatcc_json_printer_int32_vector_field@@Base+0x195>
  40bb55:	mov    eax,DWORD PTR [rsi+0x18]
  40bb58:	lea    edx,[rax+0x1]
  40bb5b:	mov    DWORD PTR [rsi+0x18],edx
  40bb5e:	test   eax,eax
  40bb60:	je     40bb71 <flatcc_json_printer_int32_vector_field@@Base+0x51>
  40bb62:	mov    rax,QWORD PTR [rdi+0x28]
  40bb66:	lea    rdx,[rax+0x1]
  40bb6a:	mov    QWORD PTR [rdi+0x28],rdx
  40bb6e:	mov    BYTE PTR [rax],0x2c
  40bb71:	mov    eax,DWORD PTR [r12]
  40bb75:	mov    rbx,rdi
  40bb78:	add    r12,rax
  40bb7b:	movsxd rdx,r8d
  40bb7e:	mov    rsi,rcx
  40bb81:	mov    r13d,DWORD PTR [r12]
  40bb85:	call   406380 <test_print@@Base+0x1eb0>
  40bb8a:	mov    rax,QWORD PTR [rbx+0x28]
  40bb8e:	inc    DWORD PTR [rbx+0x38]
  40bb91:	lea    rdx,[rax+0x1]
  40bb95:	mov    QWORD PTR [rbx+0x28],rdx
  40bb99:	mov    BYTE PTR [rax],0x5b
  40bb9c:	test   r13d,r13d
  40bb9f:	je     40bca0 <flatcc_json_printer_int32_vector_field@@Base+0x180>
  40bba5:	cmp    BYTE PTR [rbx+0x31],0x0
  40bba9:	mov    rsi,QWORD PTR [rbx+0x28]
  40bbad:	jne    40bcc0 <flatcc_json_printer_int32_vector_field@@Base+0x1a0>
  40bbb3:	cmp    QWORD PTR [rbx+0x20],rsi
  40bbb7:	ja     40bbc5 <flatcc_json_printer_int32_vector_field@@Base+0xa5>
  40bbb9:	xor    esi,esi
  40bbbb:	mov    rdi,rbx
  40bbbe:	call   QWORD PTR [rbx+0x48]
  40bbc1:	mov    rsi,QWORD PTR [rbx+0x28]
  40bbc5:	mov    edi,DWORD PTR [r12+0x4]
  40bbca:	mov    ebp,edi
  40bbcc:	shr    ebp,0x1f
  40bbcf:	test   edi,edi
  40bbd1:	jns    40bbdb <flatcc_json_printer_int32_vector_field@@Base+0xbb>
  40bbd3:	mov    BYTE PTR [rsi],0x2d
  40bbd6:	neg    edi
  40bbd8:	inc    rsi
  40bbdb:	call   404950 <test_print@@Base+0x480>
  40bbe0:	add    eax,ebp
  40bbe2:	cdqe   
  40bbe4:	add    rax,QWORD PTR [rbx+0x28]
  40bbe8:	mov    QWORD PTR [rbx+0x28],rax
  40bbec:	lea    r14,[r12+0x8]
  40bbf1:	lea    edx,[r13-0x2]
  40bbf5:	cmp    r13d,0x1
  40bbf9:	je     40bca4 <flatcc_json_printer_int32_vector_field@@Base+0x184>
  40bbff:	lea    r12,[r12+rdx*4+0xc]
  40bc04:	jmp    40bc54 <flatcc_json_printer_int32_vector_field@@Base+0x134>
  40bc06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bc10:	mov    rsi,QWORD PTR [rbx+0x28]
  40bc14:	cmp    rsi,QWORD PTR [rbx+0x20]
  40bc18:	jb     40bc26 <flatcc_json_printer_int32_vector_field@@Base+0x106>
  40bc1a:	xor    esi,esi
  40bc1c:	mov    rdi,rbx
  40bc1f:	call   QWORD PTR [rbx+0x48]
  40bc22:	mov    rsi,QWORD PTR [rbx+0x28]
  40bc26:	mov    edi,DWORD PTR [r14]
  40bc29:	mov    ebp,edi
  40bc2b:	shr    ebp,0x1f
  40bc2e:	test   edi,edi
  40bc30:	jns    40bc3a <flatcc_json_printer_int32_vector_field@@Base+0x11a>
  40bc32:	mov    BYTE PTR [rsi],0x2d
  40bc35:	neg    edi
  40bc37:	inc    rsi
  40bc3a:	call   404950 <test_print@@Base+0x480>
  40bc3f:	add    eax,ebp
  40bc41:	cdqe   
  40bc43:	add    rax,QWORD PTR [rbx+0x28]
  40bc47:	add    r14,0x4
  40bc4b:	mov    QWORD PTR [rbx+0x28],rax
  40bc4f:	cmp    r14,r12
  40bc52:	je     40bca4 <flatcc_json_printer_int32_vector_field@@Base+0x184>
  40bc54:	lea    rdx,[rax+0x1]
  40bc58:	mov    QWORD PTR [rbx+0x28],rdx
  40bc5c:	mov    BYTE PTR [rax],0x2c
  40bc5f:	cmp    BYTE PTR [rbx+0x31],0x0
  40bc63:	je     40bc10 <flatcc_json_printer_int32_vector_field@@Base+0xf0>
  40bc65:	mov    rax,QWORD PTR [rbx+0x28]
  40bc69:	lea    rdx,[rax+0x1]
  40bc6d:	mov    QWORD PTR [rbx+0x28],rdx
  40bc71:	mov    BYTE PTR [rax],0xa
  40bc74:	movzx  esi,BYTE PTR [rbx+0x31]
  40bc78:	mov    rdi,QWORD PTR [rbx+0x28]
  40bc7c:	imul   esi,DWORD PTR [rbx+0x38]
  40bc80:	movsxd rbp,esi
  40bc83:	lea    rax,[rdi+rbp*1]
  40bc87:	cmp    QWORD PTR [rbx+0x20],rax
  40bc8b:	jae    40bce0 <flatcc_json_printer_int32_vector_field@@Base+0x1c0>
  40bc8d:	mov    rsi,rbp
  40bc90:	mov    rdi,rbx
  40bc93:	call   405350 <test_print@@Base+0xe80>
  40bc98:	mov    rsi,QWORD PTR [rbx+0x28]
  40bc9c:	jmp    40bc26 <flatcc_json_printer_int32_vector_field@@Base+0x106>
  40bc9e:	xchg   ax,ax
  40bca0:	mov    rax,QWORD PTR [rbx+0x28]
  40bca4:	cmp    BYTE PTR [rbx+0x31],0x0
  40bca8:	lea    rdx,[rax+0x1]
  40bcac:	jne    40bd08 <flatcc_json_printer_int32_vector_field@@Base+0x1e8>
  40bcae:	mov    QWORD PTR [rbx+0x28],rdx
  40bcb2:	mov    BYTE PTR [rax],0x5d
  40bcb5:	pop    rbx
  40bcb6:	pop    rbp
  40bcb7:	pop    r12
  40bcb9:	pop    r13
  40bcbb:	pop    r14
  40bcbd:	ret    
  40bcbe:	xchg   ax,ax
  40bcc0:	lea    rax,[rsi+0x1]
  40bcc4:	mov    QWORD PTR [rbx+0x28],rax
  40bcc8:	mov    BYTE PTR [rsi],0xa
  40bccb:	mov    rdi,rbx
  40bcce:	call   4053d0 <test_print@@Base+0xf00>
  40bcd3:	mov    rsi,QWORD PTR [rbx+0x28]
  40bcd7:	jmp    40bbc5 <flatcc_json_printer_int32_vector_field@@Base+0xa5>
  40bcdc:	nop    DWORD PTR [rax+0x0]
  40bce0:	mov    esi,0x20
  40bce5:	mov    rdx,rbp
  40bce8:	call   403200 <memset@plt>
  40bced:	mov    rsi,QWORD PTR [rbx+0x28]
  40bcf1:	add    rsi,rbp
  40bcf4:	mov    QWORD PTR [rbx+0x28],rsi
  40bcf8:	jmp    40bc26 <flatcc_json_printer_int32_vector_field@@Base+0x106>
  40bcfd:	nop    DWORD PTR [rax]
  40bd00:	ret    
  40bd01:	nop    DWORD PTR [rax+0x0]
  40bd08:	mov    QWORD PTR [rbx+0x28],rdx
  40bd0c:	mov    BYTE PTR [rax],0xa
  40bd0f:	mov    eax,DWORD PTR [rbx+0x38]
  40bd12:	mov    rdi,QWORD PTR [rbx+0x28]
  40bd16:	lea    ebp,[rax-0x1]
  40bd19:	movzx  eax,BYTE PTR [rbx+0x31]
  40bd1d:	mov    DWORD PTR [rbx+0x38],ebp
  40bd20:	imul   eax,ebp
  40bd23:	movsxd rbp,eax
  40bd26:	lea    rax,[rdi+rbp*1]
  40bd2a:	cmp    QWORD PTR [rbx+0x20],rax
  40bd2e:	jae    40bd50 <flatcc_json_printer_int32_vector_field@@Base+0x230>
  40bd30:	mov    rsi,rbp
  40bd33:	mov    rdi,rbx
  40bd36:	call   405350 <test_print@@Base+0xe80>
  40bd3b:	mov    rax,QWORD PTR [rbx+0x28]
  40bd3f:	lea    rdx,[rax+0x1]
  40bd43:	jmp    40bcae <flatcc_json_printer_int32_vector_field@@Base+0x18e>
  40bd48:	nop    DWORD PTR [rax+rax*1+0x0]
  40bd50:	mov    rdx,rbp
  40bd53:	mov    esi,0x20
  40bd58:	call   403200 <memset@plt>
  40bd5d:	mov    rax,QWORD PTR [rbx+0x28]
  40bd61:	add    rax,rbp
  40bd64:	lea    rdx,[rax+0x1]
  40bd68:	jmp    40bcae <flatcc_json_printer_int32_vector_field@@Base+0x18e>
  40bd6d:	nop    DWORD PTR [rax]

000000000040bd70 <flatcc_json_printer_int64_vector_field@@Base>:
  40bd70:	endbr64 
  40bd74:	lea    eax,[rdx+rdx*1+0x4]
  40bd78:	cmp    eax,DWORD PTR [rsi+0x10]
  40bd7b:	jge    40bf60 <flatcc_json_printer_int64_vector_field@@Base+0x1f0>
  40bd81:	push   r13
  40bd83:	push   r12
  40bd85:	push   rbp
  40bd86:	push   rbx
  40bd87:	sub    rsp,0x8
  40bd8b:	mov    rdx,QWORD PTR [rsi+0x8]
  40bd8f:	movzx  ebp,WORD PTR [rdx+rax*1]
  40bd93:	test   bp,bp
  40bd96:	je     40bf0d <flatcc_json_printer_int64_vector_field@@Base+0x19d>
  40bd9c:	add    rbp,QWORD PTR [rsi]
  40bd9f:	je     40bf0d <flatcc_json_printer_int64_vector_field@@Base+0x19d>
  40bda5:	mov    eax,DWORD PTR [rsi+0x18]
  40bda8:	lea    edx,[rax+0x1]
  40bdab:	mov    DWORD PTR [rsi+0x18],edx
  40bdae:	test   eax,eax
  40bdb0:	je     40bdc1 <flatcc_json_printer_int64_vector_field@@Base+0x51>
  40bdb2:	mov    rax,QWORD PTR [rdi+0x28]
  40bdb6:	lea    rdx,[rax+0x1]
  40bdba:	mov    QWORD PTR [rdi+0x28],rdx
  40bdbe:	mov    BYTE PTR [rax],0x2c
  40bdc1:	mov    eax,DWORD PTR [rbp+0x0]
  40bdc4:	mov    rbx,rdi
  40bdc7:	add    rbp,rax
  40bdca:	movsxd rdx,r8d
  40bdcd:	mov    rsi,rcx
  40bdd0:	mov    r12d,DWORD PTR [rbp+0x0]
  40bdd4:	call   406380 <test_print@@Base+0x1eb0>
  40bdd9:	mov    rax,QWORD PTR [rbx+0x28]
  40bddd:	inc    DWORD PTR [rbx+0x38]
  40bde0:	lea    rdx,[rax+0x1]
  40bde4:	mov    QWORD PTR [rbx+0x28],rdx
  40bde8:	mov    BYTE PTR [rax],0x5b
  40bdeb:	test   r12d,r12d
  40bdee:	je     40bef8 <flatcc_json_printer_int64_vector_field@@Base+0x188>
  40bdf4:	cmp    BYTE PTR [rbx+0x31],0x0
  40bdf8:	mov    rsi,QWORD PTR [rbx+0x28]
  40bdfc:	jne    40bf20 <flatcc_json_printer_int64_vector_field@@Base+0x1b0>
  40be02:	cmp    QWORD PTR [rbx+0x20],rsi
  40be06:	ja     40be14 <flatcc_json_printer_int64_vector_field@@Base+0xa4>
  40be08:	xor    esi,esi
  40be0a:	mov    rdi,rbx
  40be0d:	call   QWORD PTR [rbx+0x48]
  40be10:	mov    rsi,QWORD PTR [rbx+0x28]
  40be14:	mov    rdi,QWORD PTR [rbp+0x4]
  40be18:	mov    r13,rdi
  40be1b:	shr    r13,0x3f
  40be1f:	test   rdi,rdi
  40be22:	jns    40be2d <flatcc_json_printer_int64_vector_field@@Base+0xbd>
  40be24:	mov    BYTE PTR [rsi],0x2d
  40be27:	neg    rdi
  40be2a:	inc    rsi
  40be2d:	call   404c00 <test_print@@Base+0x730>
  40be32:	add    eax,r13d
  40be35:	cdqe   
  40be37:	add    rax,QWORD PTR [rbx+0x28]
  40be3b:	mov    QWORD PTR [rbx+0x28],rax
  40be3f:	lea    r13,[rbp+0xc]
  40be43:	lea    edx,[r12-0x2]
  40be48:	cmp    r12d,0x1
  40be4c:	je     40befc <flatcc_json_printer_int64_vector_field@@Base+0x18c>
  40be52:	lea    rbp,[rbp+rdx*8+0x14]
  40be57:	jmp    40beaa <flatcc_json_printer_int64_vector_field@@Base+0x13a>
  40be59:	nop    DWORD PTR [rax+0x0]
  40be60:	mov    rsi,QWORD PTR [rbx+0x28]
  40be64:	cmp    rsi,QWORD PTR [rbx+0x20]
  40be68:	jb     40be76 <flatcc_json_printer_int64_vector_field@@Base+0x106>
  40be6a:	xor    esi,esi
  40be6c:	mov    rdi,rbx
  40be6f:	call   QWORD PTR [rbx+0x48]
  40be72:	mov    rsi,QWORD PTR [rbx+0x28]
  40be76:	mov    rdi,QWORD PTR [r13+0x0]
  40be7a:	mov    r12,rdi
  40be7d:	shr    r12,0x3f
  40be81:	test   rdi,rdi
  40be84:	jns    40be8f <flatcc_json_printer_int64_vector_field@@Base+0x11f>
  40be86:	mov    BYTE PTR [rsi],0x2d
  40be89:	neg    rdi
  40be8c:	inc    rsi
  40be8f:	call   404c00 <test_print@@Base+0x730>
  40be94:	add    eax,r12d
  40be97:	cdqe   
  40be99:	add    rax,QWORD PTR [rbx+0x28]
  40be9d:	add    r13,0x8
  40bea1:	mov    QWORD PTR [rbx+0x28],rax
  40bea5:	cmp    r13,rbp
  40bea8:	je     40befc <flatcc_json_printer_int64_vector_field@@Base+0x18c>
  40beaa:	lea    rdx,[rax+0x1]
  40beae:	mov    QWORD PTR [rbx+0x28],rdx
  40beb2:	mov    BYTE PTR [rax],0x2c
  40beb5:	cmp    BYTE PTR [rbx+0x31],0x0
  40beb9:	je     40be60 <flatcc_json_printer_int64_vector_field@@Base+0xf0>
  40bebb:	mov    rax,QWORD PTR [rbx+0x28]
  40bebf:	lea    rdx,[rax+0x1]
  40bec3:	mov    QWORD PTR [rbx+0x28],rdx
  40bec7:	mov    BYTE PTR [rax],0xa
  40beca:	movzx  esi,BYTE PTR [rbx+0x31]
  40bece:	mov    rdi,QWORD PTR [rbx+0x28]
  40bed2:	imul   esi,DWORD PTR [rbx+0x38]
  40bed6:	movsxd r12,esi
  40bed9:	lea    rax,[rdi+r12*1]
  40bedd:	cmp    QWORD PTR [rbx+0x20],rax
  40bee1:	jae    40bf40 <flatcc_json_printer_int64_vector_field@@Base+0x1d0>
  40bee3:	mov    rsi,r12
  40bee6:	mov    rdi,rbx
  40bee9:	call   405350 <test_print@@Base+0xe80>
  40beee:	mov    rsi,QWORD PTR [rbx+0x28]
  40bef2:	jmp    40be76 <flatcc_json_printer_int64_vector_field@@Base+0x106>
  40bef4:	nop    DWORD PTR [rax+0x0]
  40bef8:	mov    rax,QWORD PTR [rbx+0x28]
  40befc:	cmp    BYTE PTR [rbx+0x31],0x0
  40bf00:	lea    rdx,[rax+0x1]
  40bf04:	jne    40bf68 <flatcc_json_printer_int64_vector_field@@Base+0x1f8>
  40bf06:	mov    QWORD PTR [rbx+0x28],rdx
  40bf0a:	mov    BYTE PTR [rax],0x5d
  40bf0d:	add    rsp,0x8
  40bf11:	pop    rbx
  40bf12:	pop    rbp
  40bf13:	pop    r12
  40bf15:	pop    r13
  40bf17:	ret    
  40bf18:	nop    DWORD PTR [rax+rax*1+0x0]
  40bf20:	lea    rax,[rsi+0x1]
  40bf24:	mov    QWORD PTR [rbx+0x28],rax
  40bf28:	mov    BYTE PTR [rsi],0xa
  40bf2b:	mov    rdi,rbx
  40bf2e:	call   4053d0 <test_print@@Base+0xf00>
  40bf33:	mov    rsi,QWORD PTR [rbx+0x28]
  40bf37:	jmp    40be14 <flatcc_json_printer_int64_vector_field@@Base+0xa4>
  40bf3c:	nop    DWORD PTR [rax+0x0]
  40bf40:	mov    esi,0x20
  40bf45:	mov    rdx,r12
  40bf48:	call   403200 <memset@plt>
  40bf4d:	mov    rsi,QWORD PTR [rbx+0x28]
  40bf51:	add    rsi,r12
  40bf54:	mov    QWORD PTR [rbx+0x28],rsi
  40bf58:	jmp    40be76 <flatcc_json_printer_int64_vector_field@@Base+0x106>
  40bf5d:	nop    DWORD PTR [rax]
  40bf60:	ret    
  40bf61:	nop    DWORD PTR [rax+0x0]
  40bf68:	mov    QWORD PTR [rbx+0x28],rdx
  40bf6c:	mov    BYTE PTR [rax],0xa
  40bf6f:	mov    eax,DWORD PTR [rbx+0x38]
  40bf72:	mov    rdi,QWORD PTR [rbx+0x28]
  40bf76:	lea    ebp,[rax-0x1]
  40bf79:	movzx  eax,BYTE PTR [rbx+0x31]
  40bf7d:	mov    DWORD PTR [rbx+0x38],ebp
  40bf80:	imul   eax,ebp
  40bf83:	movsxd rbp,eax
  40bf86:	lea    rax,[rdi+rbp*1]
  40bf8a:	cmp    QWORD PTR [rbx+0x20],rax
  40bf8e:	jae    40bfb0 <flatcc_json_printer_int64_vector_field@@Base+0x240>
  40bf90:	mov    rsi,rbp
  40bf93:	mov    rdi,rbx
  40bf96:	call   405350 <test_print@@Base+0xe80>
  40bf9b:	mov    rax,QWORD PTR [rbx+0x28]
  40bf9f:	lea    rdx,[rax+0x1]
  40bfa3:	jmp    40bf06 <flatcc_json_printer_int64_vector_field@@Base+0x196>
  40bfa8:	nop    DWORD PTR [rax+rax*1+0x0]
  40bfb0:	mov    rdx,rbp
  40bfb3:	mov    esi,0x20
  40bfb8:	call   403200 <memset@plt>
  40bfbd:	mov    rax,QWORD PTR [rbx+0x28]
  40bfc1:	add    rax,rbp
  40bfc4:	lea    rdx,[rax+0x1]
  40bfc8:	jmp    40bf06 <flatcc_json_printer_int64_vector_field@@Base+0x196>
  40bfcd:	nop    DWORD PTR [rax]

000000000040bfd0 <flatcc_json_printer_bool_vector_field@@Base>:
  40bfd0:	endbr64 
  40bfd4:	lea    eax,[rdx+rdx*1+0x4]
  40bfd8:	cmp    eax,DWORD PTR [rsi+0x10]
  40bfdb:	jge    40c1b0 <flatcc_json_printer_bool_vector_field@@Base+0x1e0>
  40bfe1:	push   r13
  40bfe3:	push   r12
  40bfe5:	push   rbp
  40bfe6:	push   rbx
  40bfe7:	sub    rsp,0x8
  40bfeb:	mov    rdx,QWORD PTR [rsi+0x8]
  40bfef:	movzx  ebp,WORD PTR [rdx+rax*1]
  40bff3:	test   bp,bp
  40bff6:	je     40c141 <flatcc_json_printer_bool_vector_field@@Base+0x171>
  40bffc:	add    rbp,QWORD PTR [rsi]
  40bfff:	je     40c141 <flatcc_json_printer_bool_vector_field@@Base+0x171>
  40c005:	mov    eax,DWORD PTR [rsi+0x18]
  40c008:	lea    edx,[rax+0x1]
  40c00b:	mov    DWORD PTR [rsi+0x18],edx
  40c00e:	test   eax,eax
  40c010:	je     40c021 <flatcc_json_printer_bool_vector_field@@Base+0x51>
  40c012:	mov    rax,QWORD PTR [rdi+0x28]
  40c016:	lea    rdx,[rax+0x1]
  40c01a:	mov    QWORD PTR [rdi+0x28],rdx
  40c01e:	mov    BYTE PTR [rax],0x2c
  40c021:	mov    eax,DWORD PTR [rbp+0x0]
  40c024:	mov    rbx,rdi
  40c027:	add    rbp,rax
  40c02a:	movsxd rdx,r8d
  40c02d:	mov    rsi,rcx
  40c030:	mov    r12d,DWORD PTR [rbp+0x0]
  40c034:	call   406380 <test_print@@Base+0x1eb0>
  40c039:	mov    rax,QWORD PTR [rbx+0x28]
  40c03d:	inc    DWORD PTR [rbx+0x38]
  40c040:	lea    rdx,[rax+0x1]
  40c044:	mov    QWORD PTR [rbx+0x28],rdx
  40c048:	mov    BYTE PTR [rax],0x5b
  40c04b:	test   r12d,r12d
  40c04e:	je     40c128 <flatcc_json_printer_bool_vector_field@@Base+0x158>
  40c054:	cmp    BYTE PTR [rbx+0x31],0x0
  40c058:	mov    rsi,QWORD PTR [rbx+0x28]
  40c05c:	jne    40c150 <flatcc_json_printer_bool_vector_field@@Base+0x180>
  40c062:	cmp    QWORD PTR [rbx+0x20],rsi
  40c066:	ja     40c074 <flatcc_json_printer_bool_vector_field@@Base+0xa4>
  40c068:	xor    esi,esi
  40c06a:	mov    rdi,rbx
  40c06d:	call   QWORD PTR [rbx+0x48]
  40c070:	mov    rsi,QWORD PTR [rbx+0x28]
  40c074:	movzx  edi,BYTE PTR [rbp+0x4]
  40c078:	lea    r13,[rbp+0x5]
  40c07c:	call   405560 <test_print@@Base+0x1090>
  40c081:	cdqe   
  40c083:	add    rax,QWORD PTR [rbx+0x28]
  40c087:	mov    QWORD PTR [rbx+0x28],rax
  40c08b:	lea    edx,[r12-0x2]
  40c090:	cmp    r12d,0x1
  40c094:	je     40c12c <flatcc_json_printer_bool_vector_field@@Base+0x15c>
  40c09a:	lea    rbp,[rbp+rdx*1+0x6]
  40c09f:	jmp    40c0da <flatcc_json_printer_bool_vector_field@@Base+0x10a>
  40c0a1:	nop    DWORD PTR [rax+0x0]
  40c0a8:	mov    rsi,QWORD PTR [rbx+0x28]
  40c0ac:	cmp    rsi,QWORD PTR [rbx+0x20]
  40c0b0:	jb     40c0be <flatcc_json_printer_bool_vector_field@@Base+0xee>
  40c0b2:	xor    esi,esi
  40c0b4:	mov    rdi,rbx
  40c0b7:	call   QWORD PTR [rbx+0x48]
  40c0ba:	mov    rsi,QWORD PTR [rbx+0x28]
  40c0be:	movzx  edi,BYTE PTR [r13+0x0]
  40c0c3:	inc    r13
  40c0c6:	call   405560 <test_print@@Base+0x1090>
  40c0cb:	cdqe   
  40c0cd:	add    rax,QWORD PTR [rbx+0x28]
  40c0d1:	mov    QWORD PTR [rbx+0x28],rax
  40c0d5:	cmp    r13,rbp
  40c0d8:	je     40c12c <flatcc_json_printer_bool_vector_field@@Base+0x15c>
  40c0da:	lea    rdx,[rax+0x1]
  40c0de:	mov    QWORD PTR [rbx+0x28],rdx
  40c0e2:	mov    BYTE PTR [rax],0x2c
  40c0e5:	cmp    BYTE PTR [rbx+0x31],0x0
  40c0e9:	je     40c0a8 <flatcc_json_printer_bool_vector_field@@Base+0xd8>
  40c0eb:	mov    rax,QWORD PTR [rbx+0x28]
  40c0ef:	lea    rdx,[rax+0x1]
  40c0f3:	mov    QWORD PTR [rbx+0x28],rdx
  40c0f7:	mov    BYTE PTR [rax],0xa
  40c0fa:	movzx  esi,BYTE PTR [rbx+0x31]
  40c0fe:	mov    rdi,QWORD PTR [rbx+0x28]
  40c102:	imul   esi,DWORD PTR [rbx+0x38]
  40c106:	movsxd r12,esi
  40c109:	lea    rax,[rdi+r12*1]
  40c10d:	cmp    QWORD PTR [rbx+0x20],rax
  40c111:	jae    40c190 <flatcc_json_printer_bool_vector_field@@Base+0x1c0>
  40c113:	mov    rsi,r12
  40c116:	mov    rdi,rbx
  40c119:	call   405350 <test_print@@Base+0xe80>
  40c11e:	mov    rsi,QWORD PTR [rbx+0x28]
  40c122:	jmp    40c0be <flatcc_json_printer_bool_vector_field@@Base+0xee>
  40c124:	nop    DWORD PTR [rax+0x0]
  40c128:	mov    rax,QWORD PTR [rbx+0x28]
  40c12c:	cmp    BYTE PTR [rbx+0x31],0x0
  40c130:	lea    rdx,[rax+0x1]
  40c134:	jne    40c1b8 <flatcc_json_printer_bool_vector_field@@Base+0x1e8>
  40c13a:	mov    QWORD PTR [rbx+0x28],rdx
  40c13e:	mov    BYTE PTR [rax],0x5d
  40c141:	add    rsp,0x8
  40c145:	pop    rbx
  40c146:	pop    rbp
  40c147:	pop    r12
  40c149:	pop    r13
  40c14b:	ret    
  40c14c:	nop    DWORD PTR [rax+0x0]
  40c150:	lea    rax,[rsi+0x1]
  40c154:	mov    QWORD PTR [rbx+0x28],rax
  40c158:	mov    BYTE PTR [rsi],0xa
  40c15b:	movzx  esi,BYTE PTR [rbx+0x31]
  40c15f:	mov    rdi,QWORD PTR [rbx+0x28]
  40c163:	imul   esi,DWORD PTR [rbx+0x38]
  40c167:	movsxd r13,esi
  40c16a:	lea    rax,[rdi+r13*1]
  40c16e:	cmp    QWORD PTR [rbx+0x20],rax
  40c172:	jae    40c21d <flatcc_json_printer_bool_vector_field@@Base+0x24d>
  40c178:	mov    rsi,r13
  40c17b:	mov    rdi,rbx
  40c17e:	call   405350 <test_print@@Base+0xe80>
  40c183:	mov    rsi,QWORD PTR [rbx+0x28]
  40c187:	jmp    40c074 <flatcc_json_printer_bool_vector_field@@Base+0xa4>
  40c18c:	nop    DWORD PTR [rax+0x0]
  40c190:	mov    esi,0x20
  40c195:	mov    rdx,r12
  40c198:	call   403200 <memset@plt>
  40c19d:	mov    rsi,QWORD PTR [rbx+0x28]
  40c1a1:	add    rsi,r12
  40c1a4:	mov    QWORD PTR [rbx+0x28],rsi
  40c1a8:	jmp    40c0be <flatcc_json_printer_bool_vector_field@@Base+0xee>
  40c1ad:	nop    DWORD PTR [rax]
  40c1b0:	ret    
  40c1b1:	nop    DWORD PTR [rax+0x0]
  40c1b8:	mov    QWORD PTR [rbx+0x28],rdx
  40c1bc:	mov    BYTE PTR [rax],0xa
  40c1bf:	mov    eax,DWORD PTR [rbx+0x38]
  40c1c2:	mov    rdi,QWORD PTR [rbx+0x28]
  40c1c6:	lea    ebp,[rax-0x1]
  40c1c9:	movzx  eax,BYTE PTR [rbx+0x31]
  40c1cd:	mov    DWORD PTR [rbx+0x38],ebp
  40c1d0:	imul   eax,ebp
  40c1d3:	movsxd rbp,eax
  40c1d6:	lea    rax,[rdi+rbp*1]
  40c1da:	cmp    QWORD PTR [rbx+0x20],rax
  40c1de:	jae    40c200 <flatcc_json_printer_bool_vector_field@@Base+0x230>
  40c1e0:	mov    rsi,rbp
  40c1e3:	mov    rdi,rbx
  40c1e6:	call   405350 <test_print@@Base+0xe80>
  40c1eb:	mov    rax,QWORD PTR [rbx+0x28]
  40c1ef:	lea    rdx,[rax+0x1]
  40c1f3:	jmp    40c13a <flatcc_json_printer_bool_vector_field@@Base+0x16a>
  40c1f8:	nop    DWORD PTR [rax+rax*1+0x0]
  40c200:	mov    rdx,rbp
  40c203:	mov    esi,0x20
  40c208:	call   403200 <memset@plt>
  40c20d:	mov    rax,QWORD PTR [rbx+0x28]
  40c211:	add    rax,rbp
  40c214:	lea    rdx,[rax+0x1]
  40c218:	jmp    40c13a <flatcc_json_printer_bool_vector_field@@Base+0x16a>
  40c21d:	mov    esi,0x20
  40c222:	mov    rdx,r13
  40c225:	call   403200 <memset@plt>
  40c22a:	mov    rsi,QWORD PTR [rbx+0x28]
  40c22e:	add    rsi,r13
  40c231:	mov    QWORD PTR [rbx+0x28],rsi
  40c235:	jmp    40c074 <flatcc_json_printer_bool_vector_field@@Base+0xa4>
  40c23a:	nop    WORD PTR [rax+rax*1+0x0]

000000000040c240 <flatcc_json_printer_float_vector_field@@Base>:
  40c240:	endbr64 
  40c244:	lea    eax,[rdx+rdx*1+0x4]
  40c248:	cmp    eax,DWORD PTR [rsi+0x10]
  40c24b:	jge    40c430 <flatcc_json_printer_float_vector_field@@Base+0x1f0>
  40c251:	push   r13
  40c253:	push   r12
  40c255:	push   rbp
  40c256:	push   rbx
  40c257:	sub    rsp,0x8
  40c25b:	mov    rdx,QWORD PTR [rsi+0x8]
  40c25f:	movzx  ebp,WORD PTR [rdx+rax*1]
  40c263:	test   bp,bp
  40c266:	je     40c3c1 <flatcc_json_printer_float_vector_field@@Base+0x181>
  40c26c:	add    rbp,QWORD PTR [rsi]
  40c26f:	je     40c3c1 <flatcc_json_printer_float_vector_field@@Base+0x181>
  40c275:	mov    eax,DWORD PTR [rsi+0x18]
  40c278:	lea    edx,[rax+0x1]
  40c27b:	mov    DWORD PTR [rsi+0x18],edx
  40c27e:	test   eax,eax
  40c280:	je     40c291 <flatcc_json_printer_float_vector_field@@Base+0x51>
  40c282:	mov    rax,QWORD PTR [rdi+0x28]
  40c286:	lea    rdx,[rax+0x1]
  40c28a:	mov    QWORD PTR [rdi+0x28],rdx
  40c28e:	mov    BYTE PTR [rax],0x2c
  40c291:	mov    eax,DWORD PTR [rbp+0x0]
  40c294:	mov    rbx,rdi
  40c297:	add    rbp,rax
  40c29a:	movsxd rdx,r8d
  40c29d:	mov    rsi,rcx
  40c2a0:	mov    r12d,DWORD PTR [rbp+0x0]
  40c2a4:	call   406380 <test_print@@Base+0x1eb0>
  40c2a9:	mov    rax,QWORD PTR [rbx+0x28]
  40c2ad:	inc    DWORD PTR [rbx+0x38]
  40c2b0:	lea    rdx,[rax+0x1]
  40c2b4:	mov    QWORD PTR [rbx+0x28],rdx
  40c2b8:	mov    BYTE PTR [rax],0x5b
  40c2bb:	test   r12d,r12d
  40c2be:	je     40c3a8 <flatcc_json_printer_float_vector_field@@Base+0x168>
  40c2c4:	cmp    BYTE PTR [rbx+0x31],0x0
  40c2c8:	mov    rdi,QWORD PTR [rbx+0x28]
  40c2cc:	jne    40c3d0 <flatcc_json_printer_float_vector_field@@Base+0x190>
  40c2d2:	cmp    QWORD PTR [rbx+0x20],rdi
  40c2d6:	ja     40c2e4 <flatcc_json_printer_float_vector_field@@Base+0xa4>
  40c2d8:	mov    rdi,rbx
  40c2db:	xor    esi,esi
  40c2dd:	call   QWORD PTR [rbx+0x48]
  40c2e0:	mov    rdi,QWORD PTR [rbx+0x28]
  40c2e4:	vxorpd xmm0,xmm0,xmm0
  40c2e8:	vcvtss2sd xmm0,xmm0,DWORD PTR [rbp+0x4]
  40c2ed:	call   405780 <test_print@@Base+0x12b0>
  40c2f2:	cdqe   
  40c2f4:	add    rax,QWORD PTR [rbx+0x28]
  40c2f8:	mov    QWORD PTR [rbx+0x28],rax
  40c2fc:	lea    r13,[rbp+0x8]
  40c300:	lea    edx,[r12-0x2]
  40c305:	cmp    r12d,0x1
  40c309:	je     40c3ac <flatcc_json_printer_float_vector_field@@Base+0x16c>
  40c30f:	lea    rbp,[rbp+rdx*4+0xc]
  40c314:	jmp    40c358 <flatcc_json_printer_float_vector_field@@Base+0x118>
  40c316:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c320:	mov    rdi,QWORD PTR [rbx+0x28]
  40c324:	cmp    rdi,QWORD PTR [rbx+0x20]
  40c328:	jb     40c336 <flatcc_json_printer_float_vector_field@@Base+0xf6>
  40c32a:	mov    rdi,rbx
  40c32d:	xor    esi,esi
  40c32f:	call   QWORD PTR [rbx+0x48]
  40c332:	mov    rdi,QWORD PTR [rbx+0x28]
  40c336:	vxorpd xmm0,xmm0,xmm0
  40c33a:	vcvtss2sd xmm0,xmm0,DWORD PTR [r13+0x0]
  40c340:	call   405780 <test_print@@Base+0x12b0>
  40c345:	cdqe   
  40c347:	add    rax,QWORD PTR [rbx+0x28]
  40c34b:	add    r13,0x4
  40c34f:	mov    QWORD PTR [rbx+0x28],rax
  40c353:	cmp    r13,rbp
  40c356:	je     40c3ac <flatcc_json_printer_float_vector_field@@Base+0x16c>
  40c358:	lea    rdx,[rax+0x1]
  40c35c:	mov    QWORD PTR [rbx+0x28],rdx
  40c360:	mov    BYTE PTR [rax],0x2c
  40c363:	cmp    BYTE PTR [rbx+0x31],0x0
  40c367:	je     40c320 <flatcc_json_printer_float_vector_field@@Base+0xe0>
  40c369:	mov    rax,QWORD PTR [rbx+0x28]
  40c36d:	lea    rdx,[rax+0x1]
  40c371:	mov    QWORD PTR [rbx+0x28],rdx
  40c375:	mov    BYTE PTR [rax],0xa
  40c378:	movzx  edi,BYTE PTR [rbx+0x31]
  40c37c:	imul   edi,DWORD PTR [rbx+0x38]
  40c380:	movsxd r12,edi
  40c383:	mov    rdi,QWORD PTR [rbx+0x28]
  40c387:	lea    rax,[rdi+r12*1]
  40c38b:	cmp    QWORD PTR [rbx+0x20],rax
  40c38f:	jae    40c410 <flatcc_json_printer_float_vector_field@@Base+0x1d0>
  40c391:	mov    rdi,rbx
  40c394:	mov    rsi,r12
  40c397:	call   405350 <test_print@@Base+0xe80>
  40c39c:	mov    rdi,QWORD PTR [rbx+0x28]
  40c3a0:	jmp    40c336 <flatcc_json_printer_float_vector_field@@Base+0xf6>
  40c3a2:	nop    WORD PTR [rax+rax*1+0x0]
  40c3a8:	mov    rax,QWORD PTR [rbx+0x28]
  40c3ac:	cmp    BYTE PTR [rbx+0x31],0x0
  40c3b0:	lea    rdx,[rax+0x1]
  40c3b4:	jne    40c438 <flatcc_json_printer_float_vector_field@@Base+0x1f8>
  40c3ba:	mov    QWORD PTR [rbx+0x28],rdx
  40c3be:	mov    BYTE PTR [rax],0x5d
  40c3c1:	add    rsp,0x8
  40c3c5:	pop    rbx
  40c3c6:	pop    rbp
  40c3c7:	pop    r12
  40c3c9:	pop    r13
  40c3cb:	ret    
  40c3cc:	nop    DWORD PTR [rax+0x0]
  40c3d0:	lea    rax,[rdi+0x1]
  40c3d4:	mov    QWORD PTR [rbx+0x28],rax
  40c3d8:	mov    BYTE PTR [rdi],0xa
  40c3db:	movzx  edi,BYTE PTR [rbx+0x31]
  40c3df:	imul   edi,DWORD PTR [rbx+0x38]
  40c3e3:	movsxd r13,edi
  40c3e6:	mov    rdi,QWORD PTR [rbx+0x28]
  40c3ea:	lea    rax,[rdi+r13*1]
  40c3ee:	cmp    QWORD PTR [rbx+0x20],rax
  40c3f2:	jae    40c49d <flatcc_json_printer_float_vector_field@@Base+0x25d>
  40c3f8:	mov    rdi,rbx
  40c3fb:	mov    rsi,r13
  40c3fe:	call   405350 <test_print@@Base+0xe80>
  40c403:	mov    rdi,QWORD PTR [rbx+0x28]
  40c407:	jmp    40c2e4 <flatcc_json_printer_float_vector_field@@Base+0xa4>
  40c40c:	nop    DWORD PTR [rax+0x0]
  40c410:	mov    rdx,r12
  40c413:	mov    esi,0x20
  40c418:	call   403200 <memset@plt>
  40c41d:	mov    rdi,QWORD PTR [rbx+0x28]
  40c421:	add    rdi,r12
  40c424:	mov    QWORD PTR [rbx+0x28],rdi
  40c428:	jmp    40c336 <flatcc_json_printer_float_vector_field@@Base+0xf6>
  40c42d:	nop    DWORD PTR [rax]
  40c430:	ret    
  40c431:	nop    DWORD PTR [rax+0x0]
  40c438:	mov    QWORD PTR [rbx+0x28],rdx
  40c43c:	mov    BYTE PTR [rax],0xa
  40c43f:	mov    eax,DWORD PTR [rbx+0x38]
  40c442:	mov    rdi,QWORD PTR [rbx+0x28]
  40c446:	lea    ebp,[rax-0x1]
  40c449:	movzx  eax,BYTE PTR [rbx+0x31]
  40c44d:	mov    DWORD PTR [rbx+0x38],ebp
  40c450:	imul   eax,ebp
  40c453:	movsxd rbp,eax
  40c456:	lea    rax,[rdi+rbp*1]
  40c45a:	cmp    QWORD PTR [rbx+0x20],rax
  40c45e:	jae    40c480 <flatcc_json_printer_float_vector_field@@Base+0x240>
  40c460:	mov    rsi,rbp
  40c463:	mov    rdi,rbx
  40c466:	call   405350 <test_print@@Base+0xe80>
  40c46b:	mov    rax,QWORD PTR [rbx+0x28]
  40c46f:	lea    rdx,[rax+0x1]
  40c473:	jmp    40c3ba <flatcc_json_printer_float_vector_field@@Base+0x17a>
  40c478:	nop    DWORD PTR [rax+rax*1+0x0]
  40c480:	mov    rdx,rbp
  40c483:	mov    esi,0x20
  40c488:	call   403200 <memset@plt>
  40c48d:	mov    rax,QWORD PTR [rbx+0x28]
  40c491:	add    rax,rbp
  40c494:	lea    rdx,[rax+0x1]
  40c498:	jmp    40c3ba <flatcc_json_printer_float_vector_field@@Base+0x17a>
  40c49d:	mov    rdx,r13
  40c4a0:	mov    esi,0x20
  40c4a5:	call   403200 <memset@plt>
  40c4aa:	mov    rdi,QWORD PTR [rbx+0x28]
  40c4ae:	add    rdi,r13
  40c4b1:	mov    QWORD PTR [rbx+0x28],rdi
  40c4b5:	jmp    40c2e4 <flatcc_json_printer_float_vector_field@@Base+0xa4>
  40c4ba:	nop    WORD PTR [rax+rax*1+0x0]

000000000040c4c0 <flatcc_json_printer_double_vector_field@@Base>:
  40c4c0:	endbr64 
  40c4c4:	lea    eax,[rdx+rdx*1+0x4]
  40c4c8:	cmp    eax,DWORD PTR [rsi+0x10]
  40c4cb:	jge    40c620 <flatcc_json_printer_double_vector_field@@Base+0x160>
  40c4d1:	mov    rdx,QWORD PTR [rsi+0x8]
  40c4d5:	movzx  eax,WORD PTR [rdx+rax*1]
  40c4d9:	test   ax,ax
  40c4dc:	je     40c620 <flatcc_json_printer_double_vector_field@@Base+0x160>
  40c4e2:	add    rax,QWORD PTR [rsi]
  40c4e5:	je     40c620 <flatcc_json_printer_double_vector_field@@Base+0x160>
  40c4eb:	push   r13
  40c4ed:	push   r12
  40c4ef:	push   rbp
  40c4f0:	push   rbx
  40c4f1:	sub    rsp,0x8
  40c4f5:	mov    edx,DWORD PTR [rsi+0x18]
  40c4f8:	lea    r9d,[rdx+0x1]
  40c4fc:	mov    DWORD PTR [rsi+0x18],r9d
  40c500:	test   edx,edx
  40c502:	je     40c513 <flatcc_json_printer_double_vector_field@@Base+0x53>
  40c504:	mov    rdx,QWORD PTR [rdi+0x28]
  40c508:	lea    rsi,[rdx+0x1]
  40c50c:	mov    QWORD PTR [rdi+0x28],rsi
  40c510:	mov    BYTE PTR [rdx],0x2c
  40c513:	mov    r12d,DWORD PTR [rax]
  40c516:	mov    rbx,rdi
  40c519:	add    r12,rax
  40c51c:	movsxd rdx,r8d
  40c51f:	mov    rsi,rcx
  40c522:	mov    ebp,DWORD PTR [r12]
  40c526:	call   406380 <test_print@@Base+0x1eb0>
  40c52b:	mov    rax,QWORD PTR [rbx+0x28]
  40c52f:	inc    DWORD PTR [rbx+0x38]
  40c532:	lea    rdx,[rax+0x1]
  40c536:	mov    QWORD PTR [rbx+0x28],rdx
  40c53a:	mov    BYTE PTR [rax],0x5b
  40c53d:	test   ebp,ebp
  40c53f:	je     40c628 <flatcc_json_printer_double_vector_field@@Base+0x168>
  40c545:	cmp    BYTE PTR [rbx+0x31],0x0
  40c549:	mov    rdi,QWORD PTR [rbx+0x28]
  40c54d:	jne    40c650 <flatcc_json_printer_double_vector_field@@Base+0x190>
  40c553:	cmp    QWORD PTR [rbx+0x20],rdi
  40c557:	ja     40c565 <flatcc_json_printer_double_vector_field@@Base+0xa5>
  40c559:	mov    rdi,rbx
  40c55c:	xor    esi,esi
  40c55e:	call   QWORD PTR [rbx+0x48]
  40c561:	mov    rdi,QWORD PTR [rbx+0x28]
  40c565:	vmovsd xmm0,QWORD PTR [r12+0x4]
  40c56c:	lea    r13,[r12+0xc]
  40c571:	call   405780 <test_print@@Base+0x12b0>
  40c576:	cdqe   
  40c578:	add    rax,QWORD PTR [rbx+0x28]
  40c57c:	mov    QWORD PTR [rbx+0x28],rax
  40c580:	lea    edx,[rbp-0x2]
  40c583:	cmp    ebp,0x1
  40c586:	je     40c62c <flatcc_json_printer_double_vector_field@@Base+0x16c>
  40c58c:	lea    rbp,[r12+rdx*8+0x14]
  40c591:	jmp    40c5cc <flatcc_json_printer_double_vector_field@@Base+0x10c>
  40c593:	nop    DWORD PTR [rax+rax*1+0x0]
  40c598:	mov    rdi,QWORD PTR [rbx+0x28]
  40c59c:	cmp    rdi,QWORD PTR [rbx+0x20]
  40c5a0:	jb     40c5ae <flatcc_json_printer_double_vector_field@@Base+0xee>
  40c5a2:	mov    rdi,rbx
  40c5a5:	xor    esi,esi
  40c5a7:	call   QWORD PTR [rbx+0x48]
  40c5aa:	mov    rdi,QWORD PTR [rbx+0x28]
  40c5ae:	vmovsd xmm0,QWORD PTR [r13+0x0]
  40c5b4:	add    r13,0x8
  40c5b8:	call   405780 <test_print@@Base+0x12b0>
  40c5bd:	cdqe   
  40c5bf:	add    rax,QWORD PTR [rbx+0x28]
  40c5c3:	mov    QWORD PTR [rbx+0x28],rax
  40c5c7:	cmp    r13,rbp
  40c5ca:	je     40c62c <flatcc_json_printer_double_vector_field@@Base+0x16c>
  40c5cc:	lea    rdx,[rax+0x1]
  40c5d0:	mov    QWORD PTR [rbx+0x28],rdx
  40c5d4:	mov    BYTE PTR [rax],0x2c
  40c5d7:	cmp    BYTE PTR [rbx+0x31],0x0
  40c5db:	je     40c598 <flatcc_json_printer_double_vector_field@@Base+0xd8>
  40c5dd:	mov    rax,QWORD PTR [rbx+0x28]
  40c5e1:	lea    rdx,[rax+0x1]
  40c5e5:	mov    QWORD PTR [rbx+0x28],rdx
  40c5e9:	mov    BYTE PTR [rax],0xa
  40c5ec:	movzx  edi,BYTE PTR [rbx+0x31]
  40c5f0:	imul   edi,DWORD PTR [rbx+0x38]
  40c5f4:	movsxd r12,edi
  40c5f7:	mov    rdi,QWORD PTR [rbx+0x28]
  40c5fb:	lea    rax,[rdi+r12*1]
  40c5ff:	cmp    QWORD PTR [rbx+0x20],rax
  40c603:	jae    40c690 <flatcc_json_printer_double_vector_field@@Base+0x1d0>
  40c609:	mov    rdi,rbx
  40c60c:	mov    rsi,r12
  40c60f:	call   405350 <test_print@@Base+0xe80>
  40c614:	mov    rdi,QWORD PTR [rbx+0x28]
  40c618:	jmp    40c5ae <flatcc_json_printer_double_vector_field@@Base+0xee>
  40c61a:	nop    WORD PTR [rax+rax*1+0x0]
  40c620:	ret    
  40c621:	nop    DWORD PTR [rax+0x0]
  40c628:	mov    rax,QWORD PTR [rbx+0x28]
  40c62c:	cmp    BYTE PTR [rbx+0x31],0x0
  40c630:	lea    rdx,[rax+0x1]
  40c634:	jne    40c6b0 <flatcc_json_printer_double_vector_field@@Base+0x1f0>
  40c636:	mov    QWORD PTR [rbx+0x28],rdx
  40c63a:	mov    BYTE PTR [rax],0x5d
  40c63d:	add    rsp,0x8
  40c641:	pop    rbx
  40c642:	pop    rbp
  40c643:	pop    r12
  40c645:	pop    r13
  40c647:	ret    
  40c648:	nop    DWORD PTR [rax+rax*1+0x0]
  40c650:	lea    rax,[rdi+0x1]
  40c654:	mov    QWORD PTR [rbx+0x28],rax
  40c658:	mov    BYTE PTR [rdi],0xa
  40c65b:	movzx  edi,BYTE PTR [rbx+0x31]
  40c65f:	imul   edi,DWORD PTR [rbx+0x38]
  40c663:	movsxd r13,edi
  40c666:	mov    rdi,QWORD PTR [rbx+0x28]
  40c66a:	lea    rax,[rdi+r13*1]
  40c66e:	cmp    QWORD PTR [rbx+0x20],rax
  40c672:	jae    40c70d <flatcc_json_printer_double_vector_field@@Base+0x24d>
  40c678:	mov    rdi,rbx
  40c67b:	mov    rsi,r13
  40c67e:	call   405350 <test_print@@Base+0xe80>
  40c683:	mov    rdi,QWORD PTR [rbx+0x28]
  40c687:	jmp    40c565 <flatcc_json_printer_double_vector_field@@Base+0xa5>
  40c68c:	nop    DWORD PTR [rax+0x0]
  40c690:	mov    rdx,r12
  40c693:	mov    esi,0x20
  40c698:	call   403200 <memset@plt>
  40c69d:	mov    rdi,QWORD PTR [rbx+0x28]
  40c6a1:	add    rdi,r12
  40c6a4:	mov    QWORD PTR [rbx+0x28],rdi
  40c6a8:	jmp    40c5ae <flatcc_json_printer_double_vector_field@@Base+0xee>
  40c6ad:	nop    DWORD PTR [rax]
  40c6b0:	mov    QWORD PTR [rbx+0x28],rdx
  40c6b4:	mov    BYTE PTR [rax],0xa
  40c6b7:	mov    eax,DWORD PTR [rbx+0x38]
  40c6ba:	mov    rdi,QWORD PTR [rbx+0x28]
  40c6be:	lea    ebp,[rax-0x1]
  40c6c1:	movzx  eax,BYTE PTR [rbx+0x31]
  40c6c5:	mov    DWORD PTR [rbx+0x38],ebp
  40c6c8:	imul   eax,ebp
  40c6cb:	movsxd rbp,eax
  40c6ce:	lea    rax,[rdi+rbp*1]
  40c6d2:	cmp    QWORD PTR [rbx+0x20],rax
  40c6d6:	jae    40c6f0 <flatcc_json_printer_double_vector_field@@Base+0x230>
  40c6d8:	mov    rsi,rbp
  40c6db:	mov    rdi,rbx
  40c6de:	call   405350 <test_print@@Base+0xe80>
  40c6e3:	mov    rax,QWORD PTR [rbx+0x28]
  40c6e7:	lea    rdx,[rax+0x1]
  40c6eb:	jmp    40c636 <flatcc_json_printer_double_vector_field@@Base+0x176>
  40c6f0:	mov    rdx,rbp
  40c6f3:	mov    esi,0x20
  40c6f8:	call   403200 <memset@plt>
  40c6fd:	mov    rax,QWORD PTR [rbx+0x28]
  40c701:	add    rax,rbp
  40c704:	lea    rdx,[rax+0x1]
  40c708:	jmp    40c636 <flatcc_json_printer_double_vector_field@@Base+0x176>
  40c70d:	mov    rdx,r13
  40c710:	mov    esi,0x20
  40c715:	call   403200 <memset@plt>
  40c71a:	mov    rdi,QWORD PTR [rbx+0x28]
  40c71e:	add    rdi,r13
  40c721:	mov    QWORD PTR [rbx+0x28],rdi
  40c725:	jmp    40c565 <flatcc_json_printer_double_vector_field@@Base+0xa5>
  40c72a:	nop    WORD PTR [rax+rax*1+0x0]

000000000040c730 <flatcc_json_printer_utype_enum_vector_field@@Base>:
  40c730:	endbr64 
  40c734:	cmp    BYTE PTR [rdi+0x33],0x0
  40c738:	jne    40c898 <flatcc_json_printer_utype_enum_vector_field@@Base+0x168>
  40c73e:	lea    eax,[rdx+rdx*1+0x4]
  40c742:	cmp    eax,DWORD PTR [rsi+0x10]
  40c745:	jge    40c890 <flatcc_json_printer_utype_enum_vector_field@@Base+0x160>
  40c74b:	mov    rdx,QWORD PTR [rsi+0x8]
  40c74f:	movzx  eax,WORD PTR [rdx+rax*1]
  40c753:	test   ax,ax
  40c756:	je     40c890 <flatcc_json_printer_utype_enum_vector_field@@Base+0x160>
  40c75c:	add    rax,QWORD PTR [rsi]
  40c75f:	je     40c890 <flatcc_json_printer_utype_enum_vector_field@@Base+0x160>
  40c765:	push   r14
  40c767:	push   r13
  40c769:	push   r12
  40c76b:	push   rbp
  40c76c:	push   rbx
  40c76d:	mov    edx,DWORD PTR [rsi+0x18]
  40c770:	lea    r10d,[rdx+0x1]
  40c774:	mov    DWORD PTR [rsi+0x18],r10d
  40c778:	test   edx,edx
  40c77a:	je     40c78b <flatcc_json_printer_utype_enum_vector_field@@Base+0x5b>
  40c77c:	mov    rdx,QWORD PTR [rdi+0x28]
  40c780:	lea    rsi,[rdx+0x1]
  40c784:	mov    QWORD PTR [rdi+0x28],rsi
  40c788:	mov    BYTE PTR [rdx],0x2c
  40c78b:	mov    r12d,DWORD PTR [rax]
  40c78e:	mov    rbx,rdi
  40c791:	add    r12,rax
  40c794:	movsxd rdx,r8d
  40c797:	mov    rsi,rcx
  40c79a:	mov    r13,r9
  40c79d:	mov    r14d,DWORD PTR [r12]
  40c7a1:	call   406380 <test_print@@Base+0x1eb0>
  40c7a6:	mov    rax,QWORD PTR [rbx+0x28]
  40c7aa:	inc    DWORD PTR [rbx+0x38]
  40c7ad:	lea    rdx,[rax+0x1]
  40c7b1:	mov    QWORD PTR [rbx+0x28],rdx
  40c7b5:	mov    BYTE PTR [rax],0x5b
  40c7b8:	test   r14d,r14d
  40c7bb:	je     40c870 <flatcc_json_printer_utype_enum_vector_field@@Base+0x140>
  40c7c1:	cmp    BYTE PTR [rbx+0x31],0x0
  40c7c5:	mov    rax,QWORD PTR [rbx+0x28]
  40c7c9:	jne    40c900 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1d0>
  40c7cf:	cmp    QWORD PTR [rbx+0x20],rax
  40c7d3:	ja     40c7dd <flatcc_json_printer_utype_enum_vector_field@@Base+0xad>
  40c7d5:	xor    esi,esi
  40c7d7:	mov    rdi,rbx
  40c7da:	call   QWORD PTR [rbx+0x48]
  40c7dd:	movzx  esi,BYTE PTR [r12+0x4]
  40c7e3:	mov    rdi,rbx
  40c7e6:	call   r13
  40c7e9:	lea    rbp,[r12+0x5]
  40c7ee:	lea    eax,[r14-0x2]
  40c7f2:	cmp    r14d,0x1
  40c7f6:	je     40c870 <flatcc_json_printer_utype_enum_vector_field@@Base+0x140>
  40c7f8:	lea    r14,[r12+rax*1+0x6]
  40c7fd:	jmp    40c824 <flatcc_json_printer_utype_enum_vector_field@@Base+0xf4>
  40c7ff:	nop
  40c800:	mov    rax,QWORD PTR [rbx+0x20]
  40c804:	cmp    QWORD PTR [rbx+0x28],rax
  40c808:	jb     40c812 <flatcc_json_printer_utype_enum_vector_field@@Base+0xe2>
  40c80a:	xor    esi,esi
  40c80c:	mov    rdi,rbx
  40c80f:	call   QWORD PTR [rbx+0x48]
  40c812:	movzx  esi,BYTE PTR [rbp+0x0]
  40c816:	mov    rdi,rbx
  40c819:	inc    rbp
  40c81c:	call   r13
  40c81f:	cmp    rbp,r14
  40c822:	je     40c870 <flatcc_json_printer_utype_enum_vector_field@@Base+0x140>
  40c824:	mov    rax,QWORD PTR [rbx+0x28]
  40c828:	lea    rdx,[rax+0x1]
  40c82c:	mov    QWORD PTR [rbx+0x28],rdx
  40c830:	mov    BYTE PTR [rax],0x2c
  40c833:	cmp    BYTE PTR [rbx+0x31],0x0
  40c837:	je     40c800 <flatcc_json_printer_utype_enum_vector_field@@Base+0xd0>
  40c839:	mov    rax,QWORD PTR [rbx+0x28]
  40c83d:	lea    rdx,[rax+0x1]
  40c841:	mov    QWORD PTR [rbx+0x28],rdx
  40c845:	mov    BYTE PTR [rax],0xa
  40c848:	movzx  r12d,BYTE PTR [rbx+0x31]
  40c84d:	mov    rdi,QWORD PTR [rbx+0x28]
  40c851:	imul   r12d,DWORD PTR [rbx+0x38]
  40c856:	movsxd r12,r12d
  40c859:	lea    rax,[rdi+r12*1]
  40c85d:	cmp    QWORD PTR [rbx+0x20],rax
  40c861:	jae    40c8a0 <flatcc_json_printer_utype_enum_vector_field@@Base+0x170>
  40c863:	mov    rsi,r12
  40c866:	mov    rdi,rbx
  40c869:	call   405350 <test_print@@Base+0xe80>
  40c86e:	jmp    40c812 <flatcc_json_printer_utype_enum_vector_field@@Base+0xe2>
  40c870:	mov    rax,QWORD PTR [rbx+0x28]
  40c874:	cmp    BYTE PTR [rbx+0x31],0x0
  40c878:	lea    rdx,[rax+0x1]
  40c87c:	jne    40c8c0 <flatcc_json_printer_utype_enum_vector_field@@Base+0x190>
  40c87e:	mov    QWORD PTR [rbx+0x28],rdx
  40c882:	mov    BYTE PTR [rax],0x5d
  40c885:	pop    rbx
  40c886:	pop    rbp
  40c887:	pop    r12
  40c889:	pop    r13
  40c88b:	pop    r14
  40c88d:	ret    
  40c88e:	xchg   ax,ax
  40c890:	ret    
  40c891:	nop    DWORD PTR [rax+0x0]
  40c898:	jmp    40af20 <flatcc_json_printer_utype_vector_field@@Base>
  40c89d:	nop    DWORD PTR [rax]
  40c8a0:	mov    rdx,r12
  40c8a3:	mov    esi,0x20
  40c8a8:	call   403200 <memset@plt>
  40c8ad:	add    QWORD PTR [rbx+0x28],r12
  40c8b1:	jmp    40c812 <flatcc_json_printer_utype_enum_vector_field@@Base+0xe2>
  40c8b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c8c0:	mov    QWORD PTR [rbx+0x28],rdx
  40c8c4:	mov    BYTE PTR [rax],0xa
  40c8c7:	mov    eax,DWORD PTR [rbx+0x38]
  40c8ca:	mov    rdi,QWORD PTR [rbx+0x28]
  40c8ce:	lea    ebp,[rax-0x1]
  40c8d1:	movzx  eax,BYTE PTR [rbx+0x31]
  40c8d5:	mov    DWORD PTR [rbx+0x38],ebp
  40c8d8:	imul   eax,ebp
  40c8db:	movsxd rbp,eax
  40c8de:	lea    rax,[rdi+rbp*1]
  40c8e2:	cmp    QWORD PTR [rbx+0x20],rax
  40c8e6:	jae    40c920 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1f0>
  40c8e8:	mov    rsi,rbp
  40c8eb:	mov    rdi,rbx
  40c8ee:	call   405350 <test_print@@Base+0xe80>
  40c8f3:	mov    rax,QWORD PTR [rbx+0x28]
  40c8f7:	lea    rdx,[rax+0x1]
  40c8fb:	jmp    40c87e <flatcc_json_printer_utype_enum_vector_field@@Base+0x14e>
  40c8fd:	nop    DWORD PTR [rax]
  40c900:	lea    rdx,[rax+0x1]
  40c904:	mov    QWORD PTR [rbx+0x28],rdx
  40c908:	mov    BYTE PTR [rax],0xa
  40c90b:	mov    rdi,rbx
  40c90e:	call   4053d0 <test_print@@Base+0xf00>
  40c913:	jmp    40c7dd <flatcc_json_printer_utype_enum_vector_field@@Base+0xad>
  40c918:	nop    DWORD PTR [rax+rax*1+0x0]
  40c920:	mov    rdx,rbp
  40c923:	mov    esi,0x20
  40c928:	call   403200 <memset@plt>
  40c92d:	mov    rax,QWORD PTR [rbx+0x28]
  40c931:	add    rax,rbp
  40c934:	lea    rdx,[rax+0x1]
  40c938:	jmp    40c87e <flatcc_json_printer_utype_enum_vector_field@@Base+0x14e>
  40c93d:	nop    DWORD PTR [rax]

000000000040c940 <flatcc_json_printer_uint8_enum_vector_field@@Base>:
  40c940:	endbr64 
  40c944:	cmp    BYTE PTR [rdi+0x33],0x0
  40c948:	jne    40caa8 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x168>
  40c94e:	lea    eax,[rdx+rdx*1+0x4]
  40c952:	cmp    eax,DWORD PTR [rsi+0x10]
  40c955:	jge    40caa0 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x160>
  40c95b:	mov    rdx,QWORD PTR [rsi+0x8]
  40c95f:	movzx  eax,WORD PTR [rdx+rax*1]
  40c963:	test   ax,ax
  40c966:	je     40caa0 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x160>
  40c96c:	add    rax,QWORD PTR [rsi]
  40c96f:	je     40caa0 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x160>
  40c975:	push   r14
  40c977:	push   r13
  40c979:	push   r12
  40c97b:	push   rbp
  40c97c:	push   rbx
  40c97d:	mov    edx,DWORD PTR [rsi+0x18]
  40c980:	lea    r10d,[rdx+0x1]
  40c984:	mov    DWORD PTR [rsi+0x18],r10d
  40c988:	test   edx,edx
  40c98a:	je     40c99b <flatcc_json_printer_uint8_enum_vector_field@@Base+0x5b>
  40c98c:	mov    rdx,QWORD PTR [rdi+0x28]
  40c990:	lea    rsi,[rdx+0x1]
  40c994:	mov    QWORD PTR [rdi+0x28],rsi
  40c998:	mov    BYTE PTR [rdx],0x2c
  40c99b:	mov    r12d,DWORD PTR [rax]
  40c99e:	mov    rbx,rdi
  40c9a1:	add    r12,rax
  40c9a4:	movsxd rdx,r8d
  40c9a7:	mov    rsi,rcx
  40c9aa:	mov    r13,r9
  40c9ad:	mov    r14d,DWORD PTR [r12]
  40c9b1:	call   406380 <test_print@@Base+0x1eb0>
  40c9b6:	mov    rax,QWORD PTR [rbx+0x28]
  40c9ba:	inc    DWORD PTR [rbx+0x38]
  40c9bd:	lea    rdx,[rax+0x1]
  40c9c1:	mov    QWORD PTR [rbx+0x28],rdx
  40c9c5:	mov    BYTE PTR [rax],0x5b
  40c9c8:	test   r14d,r14d
  40c9cb:	je     40ca80 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x140>
  40c9d1:	cmp    BYTE PTR [rbx+0x31],0x0
  40c9d5:	mov    rax,QWORD PTR [rbx+0x28]
  40c9d9:	jne    40cb10 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1d0>
  40c9df:	cmp    QWORD PTR [rbx+0x20],rax
  40c9e3:	ja     40c9ed <flatcc_json_printer_uint8_enum_vector_field@@Base+0xad>
  40c9e5:	xor    esi,esi
  40c9e7:	mov    rdi,rbx
  40c9ea:	call   QWORD PTR [rbx+0x48]
  40c9ed:	movzx  esi,BYTE PTR [r12+0x4]
  40c9f3:	mov    rdi,rbx
  40c9f6:	call   r13
  40c9f9:	lea    rbp,[r12+0x5]
  40c9fe:	lea    eax,[r14-0x2]
  40ca02:	cmp    r14d,0x1
  40ca06:	je     40ca80 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x140>
  40ca08:	lea    r14,[r12+rax*1+0x6]
  40ca0d:	jmp    40ca34 <flatcc_json_printer_uint8_enum_vector_field@@Base+0xf4>
  40ca0f:	nop
  40ca10:	mov    rax,QWORD PTR [rbx+0x20]
  40ca14:	cmp    QWORD PTR [rbx+0x28],rax
  40ca18:	jb     40ca22 <flatcc_json_printer_uint8_enum_vector_field@@Base+0xe2>
  40ca1a:	xor    esi,esi
  40ca1c:	mov    rdi,rbx
  40ca1f:	call   QWORD PTR [rbx+0x48]
  40ca22:	movzx  esi,BYTE PTR [rbp+0x0]
  40ca26:	mov    rdi,rbx
  40ca29:	inc    rbp
  40ca2c:	call   r13
  40ca2f:	cmp    rbp,r14
  40ca32:	je     40ca80 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x140>
  40ca34:	mov    rax,QWORD PTR [rbx+0x28]
  40ca38:	lea    rdx,[rax+0x1]
  40ca3c:	mov    QWORD PTR [rbx+0x28],rdx
  40ca40:	mov    BYTE PTR [rax],0x2c
  40ca43:	cmp    BYTE PTR [rbx+0x31],0x0
  40ca47:	je     40ca10 <flatcc_json_printer_uint8_enum_vector_field@@Base+0xd0>
  40ca49:	mov    rax,QWORD PTR [rbx+0x28]
  40ca4d:	lea    rdx,[rax+0x1]
  40ca51:	mov    QWORD PTR [rbx+0x28],rdx
  40ca55:	mov    BYTE PTR [rax],0xa
  40ca58:	movzx  r12d,BYTE PTR [rbx+0x31]
  40ca5d:	mov    rdi,QWORD PTR [rbx+0x28]
  40ca61:	imul   r12d,DWORD PTR [rbx+0x38]
  40ca66:	movsxd r12,r12d
  40ca69:	lea    rax,[rdi+r12*1]
  40ca6d:	cmp    QWORD PTR [rbx+0x20],rax
  40ca71:	jae    40cab0 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x170>
  40ca73:	mov    rsi,r12
  40ca76:	mov    rdi,rbx
  40ca79:	call   405350 <test_print@@Base+0xe80>
  40ca7e:	jmp    40ca22 <flatcc_json_printer_uint8_enum_vector_field@@Base+0xe2>
  40ca80:	mov    rax,QWORD PTR [rbx+0x28]
  40ca84:	cmp    BYTE PTR [rbx+0x31],0x0
  40ca88:	lea    rdx,[rax+0x1]
  40ca8c:	jne    40cad0 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x190>
  40ca8e:	mov    QWORD PTR [rbx+0x28],rdx
  40ca92:	mov    BYTE PTR [rax],0x5d
  40ca95:	pop    rbx
  40ca96:	pop    rbp
  40ca97:	pop    r12
  40ca99:	pop    r13
  40ca9b:	pop    r14
  40ca9d:	ret    
  40ca9e:	xchg   ax,ax
  40caa0:	ret    
  40caa1:	nop    DWORD PTR [rax+0x0]
  40caa8:	jmp    40acb0 <flatcc_json_printer_uint8_vector_field@@Base>
  40caad:	nop    DWORD PTR [rax]
  40cab0:	mov    rdx,r12
  40cab3:	mov    esi,0x20
  40cab8:	call   403200 <memset@plt>
  40cabd:	add    QWORD PTR [rbx+0x28],r12
  40cac1:	jmp    40ca22 <flatcc_json_printer_uint8_enum_vector_field@@Base+0xe2>
  40cac6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cad0:	mov    QWORD PTR [rbx+0x28],rdx
  40cad4:	mov    BYTE PTR [rax],0xa
  40cad7:	mov    eax,DWORD PTR [rbx+0x38]
  40cada:	mov    rdi,QWORD PTR [rbx+0x28]
  40cade:	lea    ebp,[rax-0x1]
  40cae1:	movzx  eax,BYTE PTR [rbx+0x31]
  40cae5:	mov    DWORD PTR [rbx+0x38],ebp
  40cae8:	imul   eax,ebp
  40caeb:	movsxd rbp,eax
  40caee:	lea    rax,[rdi+rbp*1]
  40caf2:	cmp    QWORD PTR [rbx+0x20],rax
  40caf6:	jae    40cb30 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1f0>
  40caf8:	mov    rsi,rbp
  40cafb:	mov    rdi,rbx
  40cafe:	call   405350 <test_print@@Base+0xe80>
  40cb03:	mov    rax,QWORD PTR [rbx+0x28]
  40cb07:	lea    rdx,[rax+0x1]
  40cb0b:	jmp    40ca8e <flatcc_json_printer_uint8_enum_vector_field@@Base+0x14e>
  40cb0d:	nop    DWORD PTR [rax]
  40cb10:	lea    rdx,[rax+0x1]
  40cb14:	mov    QWORD PTR [rbx+0x28],rdx
  40cb18:	mov    BYTE PTR [rax],0xa
  40cb1b:	mov    rdi,rbx
  40cb1e:	call   4053d0 <test_print@@Base+0xf00>
  40cb23:	jmp    40c9ed <flatcc_json_printer_uint8_enum_vector_field@@Base+0xad>
  40cb28:	nop    DWORD PTR [rax+rax*1+0x0]
  40cb30:	mov    rdx,rbp
  40cb33:	mov    esi,0x20
  40cb38:	call   403200 <memset@plt>
  40cb3d:	mov    rax,QWORD PTR [rbx+0x28]
  40cb41:	add    rax,rbp
  40cb44:	lea    rdx,[rax+0x1]
  40cb48:	jmp    40ca8e <flatcc_json_printer_uint8_enum_vector_field@@Base+0x14e>
  40cb4d:	nop    DWORD PTR [rax]

000000000040cb50 <flatcc_json_printer_uint16_enum_vector_field@@Base>:
  40cb50:	endbr64 
  40cb54:	cmp    BYTE PTR [rdi+0x33],0x0
  40cb58:	jne    40ccc8 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x178>
  40cb5e:	lea    eax,[rdx+rdx*1+0x4]
  40cb62:	cmp    eax,DWORD PTR [rsi+0x10]
  40cb65:	jge    40ccc0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x170>
  40cb6b:	mov    rdx,QWORD PTR [rsi+0x8]
  40cb6f:	movzx  eax,WORD PTR [rdx+rax*1]
  40cb73:	test   ax,ax
  40cb76:	je     40ccc0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x170>
  40cb7c:	add    rax,QWORD PTR [rsi]
  40cb7f:	je     40ccc0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x170>
  40cb85:	push   r14
  40cb87:	push   r13
  40cb89:	push   r12
  40cb8b:	push   rbp
  40cb8c:	push   rbx
  40cb8d:	mov    edx,DWORD PTR [rsi+0x18]
  40cb90:	lea    r10d,[rdx+0x1]
  40cb94:	mov    DWORD PTR [rsi+0x18],r10d
  40cb98:	test   edx,edx
  40cb9a:	je     40cbab <flatcc_json_printer_uint16_enum_vector_field@@Base+0x5b>
  40cb9c:	mov    rdx,QWORD PTR [rdi+0x28]
  40cba0:	lea    rsi,[rdx+0x1]
  40cba4:	mov    QWORD PTR [rdi+0x28],rsi
  40cba8:	mov    BYTE PTR [rdx],0x2c
  40cbab:	mov    r12d,DWORD PTR [rax]
  40cbae:	mov    rbx,rdi
  40cbb1:	add    r12,rax
  40cbb4:	movsxd rdx,r8d
  40cbb7:	mov    rsi,rcx
  40cbba:	mov    r13,r9
  40cbbd:	mov    r14d,DWORD PTR [r12]
  40cbc1:	call   406380 <test_print@@Base+0x1eb0>
  40cbc6:	mov    rax,QWORD PTR [rbx+0x28]
  40cbca:	inc    DWORD PTR [rbx+0x38]
  40cbcd:	lea    rdx,[rax+0x1]
  40cbd1:	mov    QWORD PTR [rbx+0x28],rdx
  40cbd5:	mov    BYTE PTR [rax],0x5b
  40cbd8:	test   r14d,r14d
  40cbdb:	je     40cca0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x150>
  40cbe1:	cmp    BYTE PTR [rbx+0x31],0x0
  40cbe5:	mov    rax,QWORD PTR [rbx+0x28]
  40cbe9:	jne    40cd30 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1e0>
  40cbef:	cmp    QWORD PTR [rbx+0x20],rax
  40cbf3:	ja     40cbfd <flatcc_json_printer_uint16_enum_vector_field@@Base+0xad>
  40cbf5:	xor    esi,esi
  40cbf7:	mov    rdi,rbx
  40cbfa:	call   QWORD PTR [rbx+0x48]
  40cbfd:	movzx  esi,WORD PTR [r12+0x4]
  40cc03:	mov    rdi,rbx
  40cc06:	call   r13
  40cc09:	lea    rbp,[r12+0x6]
  40cc0e:	lea    eax,[r14-0x2]
  40cc12:	cmp    r14d,0x1
  40cc16:	je     40cca0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x150>
  40cc1c:	lea    r14,[r12+rax*2+0x8]
  40cc21:	jmp    40cc4d <flatcc_json_printer_uint16_enum_vector_field@@Base+0xfd>
  40cc23:	nop    DWORD PTR [rax+rax*1+0x0]
  40cc28:	mov    rax,QWORD PTR [rbx+0x20]
  40cc2c:	cmp    QWORD PTR [rbx+0x28],rax
  40cc30:	jb     40cc3a <flatcc_json_printer_uint16_enum_vector_field@@Base+0xea>
  40cc32:	xor    esi,esi
  40cc34:	mov    rdi,rbx
  40cc37:	call   QWORD PTR [rbx+0x48]
  40cc3a:	movzx  esi,WORD PTR [rbp+0x0]
  40cc3e:	mov    rdi,rbx
  40cc41:	add    rbp,0x2
  40cc45:	call   r13
  40cc48:	cmp    rbp,r14
  40cc4b:	je     40cca0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x150>
  40cc4d:	mov    rax,QWORD PTR [rbx+0x28]
  40cc51:	lea    rdx,[rax+0x1]
  40cc55:	mov    QWORD PTR [rbx+0x28],rdx
  40cc59:	mov    BYTE PTR [rax],0x2c
  40cc5c:	cmp    BYTE PTR [rbx+0x31],0x0
  40cc60:	je     40cc28 <flatcc_json_printer_uint16_enum_vector_field@@Base+0xd8>
  40cc62:	mov    rax,QWORD PTR [rbx+0x28]
  40cc66:	lea    rdx,[rax+0x1]
  40cc6a:	mov    QWORD PTR [rbx+0x28],rdx
  40cc6e:	mov    BYTE PTR [rax],0xa
  40cc71:	movzx  r12d,BYTE PTR [rbx+0x31]
  40cc76:	mov    rdi,QWORD PTR [rbx+0x28]
  40cc7a:	imul   r12d,DWORD PTR [rbx+0x38]
  40cc7f:	movsxd r12,r12d
  40cc82:	lea    rax,[rdi+r12*1]
  40cc86:	cmp    QWORD PTR [rbx+0x20],rax
  40cc8a:	jae    40ccd0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x180>
  40cc8c:	mov    rsi,r12
  40cc8f:	mov    rdi,rbx
  40cc92:	call   405350 <test_print@@Base+0xe80>
  40cc97:	jmp    40cc3a <flatcc_json_printer_uint16_enum_vector_field@@Base+0xea>
  40cc99:	nop    DWORD PTR [rax+0x0]
  40cca0:	mov    rax,QWORD PTR [rbx+0x28]
  40cca4:	cmp    BYTE PTR [rbx+0x31],0x0
  40cca8:	lea    rdx,[rax+0x1]
  40ccac:	jne    40ccf0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1a0>
  40ccae:	mov    QWORD PTR [rbx+0x28],rdx
  40ccb2:	mov    BYTE PTR [rax],0x5d
  40ccb5:	pop    rbx
  40ccb6:	pop    rbp
  40ccb7:	pop    r12
  40ccb9:	pop    r13
  40ccbb:	pop    r14
  40ccbd:	ret    
  40ccbe:	xchg   ax,ax
  40ccc0:	ret    
  40ccc1:	nop    DWORD PTR [rax+0x0]
  40ccc8:	jmp    40af30 <flatcc_json_printer_uint16_vector_field@@Base>
  40cccd:	nop    DWORD PTR [rax]
  40ccd0:	mov    rdx,r12
  40ccd3:	mov    esi,0x20
  40ccd8:	call   403200 <memset@plt>
  40ccdd:	add    QWORD PTR [rbx+0x28],r12
  40cce1:	jmp    40cc3a <flatcc_json_printer_uint16_enum_vector_field@@Base+0xea>
  40cce6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ccf0:	mov    QWORD PTR [rbx+0x28],rdx
  40ccf4:	mov    BYTE PTR [rax],0xa
  40ccf7:	mov    eax,DWORD PTR [rbx+0x38]
  40ccfa:	mov    rdi,QWORD PTR [rbx+0x28]
  40ccfe:	lea    ebp,[rax-0x1]
  40cd01:	movzx  eax,BYTE PTR [rbx+0x31]
  40cd05:	mov    DWORD PTR [rbx+0x38],ebp
  40cd08:	imul   eax,ebp
  40cd0b:	movsxd rbp,eax
  40cd0e:	lea    rax,[rdi+rbp*1]
  40cd12:	cmp    QWORD PTR [rbx+0x20],rax
  40cd16:	jae    40cd50 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x200>
  40cd18:	mov    rsi,rbp
  40cd1b:	mov    rdi,rbx
  40cd1e:	call   405350 <test_print@@Base+0xe80>
  40cd23:	mov    rax,QWORD PTR [rbx+0x28]
  40cd27:	lea    rdx,[rax+0x1]
  40cd2b:	jmp    40ccae <flatcc_json_printer_uint16_enum_vector_field@@Base+0x15e>
  40cd30:	lea    rdx,[rax+0x1]
  40cd34:	mov    QWORD PTR [rbx+0x28],rdx
  40cd38:	mov    BYTE PTR [rax],0xa
  40cd3b:	mov    rdi,rbx
  40cd3e:	call   4053d0 <test_print@@Base+0xf00>
  40cd43:	jmp    40cbfd <flatcc_json_printer_uint16_enum_vector_field@@Base+0xad>
  40cd48:	nop    DWORD PTR [rax+rax*1+0x0]
  40cd50:	mov    rdx,rbp
  40cd53:	mov    esi,0x20
  40cd58:	call   403200 <memset@plt>
  40cd5d:	mov    rax,QWORD PTR [rbx+0x28]
  40cd61:	add    rax,rbp
  40cd64:	lea    rdx,[rax+0x1]
  40cd68:	jmp    40ccae <flatcc_json_printer_uint16_enum_vector_field@@Base+0x15e>
  40cd6d:	nop    DWORD PTR [rax]

000000000040cd70 <flatcc_json_printer_uint32_enum_vector_field@@Base>:
  40cd70:	endbr64 
  40cd74:	cmp    BYTE PTR [rdi+0x33],0x0
  40cd78:	jne    40ced8 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x168>
  40cd7e:	lea    eax,[rdx+rdx*1+0x4]
  40cd82:	cmp    eax,DWORD PTR [rsi+0x10]
  40cd85:	jge    40ced0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x160>
  40cd8b:	mov    rdx,QWORD PTR [rsi+0x8]
  40cd8f:	movzx  eax,WORD PTR [rdx+rax*1]
  40cd93:	test   ax,ax
  40cd96:	je     40ced0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x160>
  40cd9c:	add    rax,QWORD PTR [rsi]
  40cd9f:	je     40ced0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x160>
  40cda5:	push   r14
  40cda7:	push   r13
  40cda9:	push   r12
  40cdab:	push   rbp
  40cdac:	push   rbx
  40cdad:	mov    edx,DWORD PTR [rsi+0x18]
  40cdb0:	lea    r10d,[rdx+0x1]
  40cdb4:	mov    DWORD PTR [rsi+0x18],r10d
  40cdb8:	test   edx,edx
  40cdba:	je     40cdcb <flatcc_json_printer_uint32_enum_vector_field@@Base+0x5b>
  40cdbc:	mov    rdx,QWORD PTR [rdi+0x28]
  40cdc0:	lea    rsi,[rdx+0x1]
  40cdc4:	mov    QWORD PTR [rdi+0x28],rsi
  40cdc8:	mov    BYTE PTR [rdx],0x2c
  40cdcb:	mov    r12d,DWORD PTR [rax]
  40cdce:	mov    rbx,rdi
  40cdd1:	add    r12,rax
  40cdd4:	movsxd rdx,r8d
  40cdd7:	mov    rsi,rcx
  40cdda:	mov    r13,r9
  40cddd:	mov    r14d,DWORD PTR [r12]
  40cde1:	call   406380 <test_print@@Base+0x1eb0>
  40cde6:	mov    rax,QWORD PTR [rbx+0x28]
  40cdea:	inc    DWORD PTR [rbx+0x38]
  40cded:	lea    rdx,[rax+0x1]
  40cdf1:	mov    QWORD PTR [rbx+0x28],rdx
  40cdf5:	mov    BYTE PTR [rax],0x5b
  40cdf8:	test   r14d,r14d
  40cdfb:	je     40ceb0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x140>
  40ce01:	cmp    BYTE PTR [rbx+0x31],0x0
  40ce05:	mov    rax,QWORD PTR [rbx+0x28]
  40ce09:	jne    40cf40 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1d0>
  40ce0f:	cmp    QWORD PTR [rbx+0x20],rax
  40ce13:	ja     40ce1d <flatcc_json_printer_uint32_enum_vector_field@@Base+0xad>
  40ce15:	xor    esi,esi
  40ce17:	mov    rdi,rbx
  40ce1a:	call   QWORD PTR [rbx+0x48]
  40ce1d:	mov    esi,DWORD PTR [r12+0x4]
  40ce22:	mov    rdi,rbx
  40ce25:	call   r13
  40ce28:	lea    rbp,[r12+0x8]
  40ce2d:	lea    eax,[r14-0x2]
  40ce31:	cmp    r14d,0x1
  40ce35:	je     40ceb0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x140>
  40ce37:	lea    r14,[r12+rax*4+0xc]
  40ce3c:	jmp    40ce64 <flatcc_json_printer_uint32_enum_vector_field@@Base+0xf4>
  40ce3e:	xchg   ax,ax
  40ce40:	mov    rax,QWORD PTR [rbx+0x20]
  40ce44:	cmp    QWORD PTR [rbx+0x28],rax
  40ce48:	jb     40ce52 <flatcc_json_printer_uint32_enum_vector_field@@Base+0xe2>
  40ce4a:	xor    esi,esi
  40ce4c:	mov    rdi,rbx
  40ce4f:	call   QWORD PTR [rbx+0x48]
  40ce52:	mov    esi,DWORD PTR [rbp+0x0]
  40ce55:	mov    rdi,rbx
  40ce58:	add    rbp,0x4
  40ce5c:	call   r13
  40ce5f:	cmp    rbp,r14
  40ce62:	je     40ceb0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x140>
  40ce64:	mov    rax,QWORD PTR [rbx+0x28]
  40ce68:	lea    rdx,[rax+0x1]
  40ce6c:	mov    QWORD PTR [rbx+0x28],rdx
  40ce70:	mov    BYTE PTR [rax],0x2c
  40ce73:	cmp    BYTE PTR [rbx+0x31],0x0
  40ce77:	je     40ce40 <flatcc_json_printer_uint32_enum_vector_field@@Base+0xd0>
  40ce79:	mov    rax,QWORD PTR [rbx+0x28]
  40ce7d:	lea    rdx,[rax+0x1]
  40ce81:	mov    QWORD PTR [rbx+0x28],rdx
  40ce85:	mov    BYTE PTR [rax],0xa
  40ce88:	movzx  r12d,BYTE PTR [rbx+0x31]
  40ce8d:	mov    rdi,QWORD PTR [rbx+0x28]
  40ce91:	imul   r12d,DWORD PTR [rbx+0x38]
  40ce96:	movsxd r12,r12d
  40ce99:	lea    rax,[rdi+r12*1]
  40ce9d:	cmp    QWORD PTR [rbx+0x20],rax
  40cea1:	jae    40cee0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x170>
  40cea3:	mov    rsi,r12
  40cea6:	mov    rdi,rbx
  40cea9:	call   405350 <test_print@@Base+0xe80>
  40ceae:	jmp    40ce52 <flatcc_json_printer_uint32_enum_vector_field@@Base+0xe2>
  40ceb0:	mov    rax,QWORD PTR [rbx+0x28]
  40ceb4:	cmp    BYTE PTR [rbx+0x31],0x0
  40ceb8:	lea    rdx,[rax+0x1]
  40cebc:	jne    40cf00 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x190>
  40cebe:	mov    QWORD PTR [rbx+0x28],rdx
  40cec2:	mov    BYTE PTR [rax],0x5d
  40cec5:	pop    rbx
  40cec6:	pop    rbp
  40cec7:	pop    r12
  40cec9:	pop    r13
  40cecb:	pop    r14
  40cecd:	ret    
  40cece:	xchg   ax,ax
  40ced0:	ret    
  40ced1:	nop    DWORD PTR [rax+0x0]
  40ced8:	jmp    40b1a0 <flatcc_json_printer_uint32_vector_field@@Base>
  40cedd:	nop    DWORD PTR [rax]
  40cee0:	mov    rdx,r12
  40cee3:	mov    esi,0x20
  40cee8:	call   403200 <memset@plt>
  40ceed:	add    QWORD PTR [rbx+0x28],r12
  40cef1:	jmp    40ce52 <flatcc_json_printer_uint32_enum_vector_field@@Base+0xe2>
  40cef6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cf00:	mov    QWORD PTR [rbx+0x28],rdx
  40cf04:	mov    BYTE PTR [rax],0xa
  40cf07:	mov    eax,DWORD PTR [rbx+0x38]
  40cf0a:	mov    rdi,QWORD PTR [rbx+0x28]
  40cf0e:	lea    ebp,[rax-0x1]
  40cf11:	movzx  eax,BYTE PTR [rbx+0x31]
  40cf15:	mov    DWORD PTR [rbx+0x38],ebp
  40cf18:	imul   eax,ebp
  40cf1b:	movsxd rbp,eax
  40cf1e:	lea    rax,[rdi+rbp*1]
  40cf22:	cmp    QWORD PTR [rbx+0x20],rax
  40cf26:	jae    40cf60 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1f0>
  40cf28:	mov    rsi,rbp
  40cf2b:	mov    rdi,rbx
  40cf2e:	call   405350 <test_print@@Base+0xe80>
  40cf33:	mov    rax,QWORD PTR [rbx+0x28]
  40cf37:	lea    rdx,[rax+0x1]
  40cf3b:	jmp    40cebe <flatcc_json_printer_uint32_enum_vector_field@@Base+0x14e>
  40cf3d:	nop    DWORD PTR [rax]
  40cf40:	lea    rdx,[rax+0x1]
  40cf44:	mov    QWORD PTR [rbx+0x28],rdx
  40cf48:	mov    BYTE PTR [rax],0xa
  40cf4b:	mov    rdi,rbx
  40cf4e:	call   4053d0 <test_print@@Base+0xf00>
  40cf53:	jmp    40ce1d <flatcc_json_printer_uint32_enum_vector_field@@Base+0xad>
  40cf58:	nop    DWORD PTR [rax+rax*1+0x0]
  40cf60:	mov    rdx,rbp
  40cf63:	mov    esi,0x20
  40cf68:	call   403200 <memset@plt>
  40cf6d:	mov    rax,QWORD PTR [rbx+0x28]
  40cf71:	add    rax,rbp
  40cf74:	lea    rdx,[rax+0x1]
  40cf78:	jmp    40cebe <flatcc_json_printer_uint32_enum_vector_field@@Base+0x14e>
  40cf7d:	nop    DWORD PTR [rax]

000000000040cf80 <flatcc_json_printer_uint64_enum_vector_field@@Base>:
  40cf80:	endbr64 
  40cf84:	cmp    BYTE PTR [rdi+0x33],0x0
  40cf88:	jne    40d0f8 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x178>
  40cf8e:	lea    eax,[rdx+rdx*1+0x4]
  40cf92:	cmp    eax,DWORD PTR [rsi+0x10]
  40cf95:	jge    40d0f0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x170>
  40cf9b:	mov    rdx,QWORD PTR [rsi+0x8]
  40cf9f:	movzx  eax,WORD PTR [rdx+rax*1]
  40cfa3:	test   ax,ax
  40cfa6:	je     40d0f0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x170>
  40cfac:	add    rax,QWORD PTR [rsi]
  40cfaf:	je     40d0f0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x170>
  40cfb5:	push   r14
  40cfb7:	push   r13
  40cfb9:	push   r12
  40cfbb:	push   rbp
  40cfbc:	push   rbx
  40cfbd:	mov    edx,DWORD PTR [rsi+0x18]
  40cfc0:	lea    r10d,[rdx+0x1]
  40cfc4:	mov    DWORD PTR [rsi+0x18],r10d
  40cfc8:	test   edx,edx
  40cfca:	je     40cfdb <flatcc_json_printer_uint64_enum_vector_field@@Base+0x5b>
  40cfcc:	mov    rdx,QWORD PTR [rdi+0x28]
  40cfd0:	lea    rsi,[rdx+0x1]
  40cfd4:	mov    QWORD PTR [rdi+0x28],rsi
  40cfd8:	mov    BYTE PTR [rdx],0x2c
  40cfdb:	mov    r12d,DWORD PTR [rax]
  40cfde:	mov    rbx,rdi
  40cfe1:	add    r12,rax
  40cfe4:	movsxd rdx,r8d
  40cfe7:	mov    rsi,rcx
  40cfea:	mov    r13,r9
  40cfed:	mov    r14d,DWORD PTR [r12]
  40cff1:	call   406380 <test_print@@Base+0x1eb0>
  40cff6:	mov    rax,QWORD PTR [rbx+0x28]
  40cffa:	inc    DWORD PTR [rbx+0x38]
  40cffd:	lea    rdx,[rax+0x1]
  40d001:	mov    QWORD PTR [rbx+0x28],rdx
  40d005:	mov    BYTE PTR [rax],0x5b
  40d008:	test   r14d,r14d
  40d00b:	je     40d0d0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x150>
  40d011:	cmp    BYTE PTR [rbx+0x31],0x0
  40d015:	mov    rax,QWORD PTR [rbx+0x28]
  40d019:	jne    40d160 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1e0>
  40d01f:	cmp    QWORD PTR [rbx+0x20],rax
  40d023:	ja     40d02d <flatcc_json_printer_uint64_enum_vector_field@@Base+0xad>
  40d025:	xor    esi,esi
  40d027:	mov    rdi,rbx
  40d02a:	call   QWORD PTR [rbx+0x48]
  40d02d:	mov    rsi,QWORD PTR [r12+0x4]
  40d032:	mov    rdi,rbx
  40d035:	call   r13
  40d038:	lea    rbp,[r12+0xc]
  40d03d:	lea    eax,[r14-0x2]
  40d041:	cmp    r14d,0x1
  40d045:	je     40d0d0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x150>
  40d04b:	lea    r14,[r12+rax*8+0x14]
  40d050:	jmp    40d07d <flatcc_json_printer_uint64_enum_vector_field@@Base+0xfd>
  40d052:	nop    WORD PTR [rax+rax*1+0x0]
  40d058:	mov    rax,QWORD PTR [rbx+0x20]
  40d05c:	cmp    QWORD PTR [rbx+0x28],rax
  40d060:	jb     40d06a <flatcc_json_printer_uint64_enum_vector_field@@Base+0xea>
  40d062:	xor    esi,esi
  40d064:	mov    rdi,rbx
  40d067:	call   QWORD PTR [rbx+0x48]
  40d06a:	mov    rsi,QWORD PTR [rbp+0x0]
  40d06e:	mov    rdi,rbx
  40d071:	add    rbp,0x8
  40d075:	call   r13
  40d078:	cmp    rbp,r14
  40d07b:	je     40d0d0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x150>
  40d07d:	mov    rax,QWORD PTR [rbx+0x28]
  40d081:	lea    rdx,[rax+0x1]
  40d085:	mov    QWORD PTR [rbx+0x28],rdx
  40d089:	mov    BYTE PTR [rax],0x2c
  40d08c:	cmp    BYTE PTR [rbx+0x31],0x0
  40d090:	je     40d058 <flatcc_json_printer_uint64_enum_vector_field@@Base+0xd8>
  40d092:	mov    rax,QWORD PTR [rbx+0x28]
  40d096:	lea    rdx,[rax+0x1]
  40d09a:	mov    QWORD PTR [rbx+0x28],rdx
  40d09e:	mov    BYTE PTR [rax],0xa
  40d0a1:	movzx  r12d,BYTE PTR [rbx+0x31]
  40d0a6:	mov    rdi,QWORD PTR [rbx+0x28]
  40d0aa:	imul   r12d,DWORD PTR [rbx+0x38]
  40d0af:	movsxd r12,r12d
  40d0b2:	lea    rax,[rdi+r12*1]
  40d0b6:	cmp    QWORD PTR [rbx+0x20],rax
  40d0ba:	jae    40d100 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x180>
  40d0bc:	mov    rsi,r12
  40d0bf:	mov    rdi,rbx
  40d0c2:	call   405350 <test_print@@Base+0xe80>
  40d0c7:	jmp    40d06a <flatcc_json_printer_uint64_enum_vector_field@@Base+0xea>
  40d0c9:	nop    DWORD PTR [rax+0x0]
  40d0d0:	mov    rax,QWORD PTR [rbx+0x28]
  40d0d4:	cmp    BYTE PTR [rbx+0x31],0x0
  40d0d8:	lea    rdx,[rax+0x1]
  40d0dc:	jne    40d120 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1a0>
  40d0de:	mov    QWORD PTR [rbx+0x28],rdx
  40d0e2:	mov    BYTE PTR [rax],0x5d
  40d0e5:	pop    rbx
  40d0e6:	pop    rbp
  40d0e7:	pop    r12
  40d0e9:	pop    r13
  40d0eb:	pop    r14
  40d0ed:	ret    
  40d0ee:	xchg   ax,ax
  40d0f0:	ret    
  40d0f1:	nop    DWORD PTR [rax+0x0]
  40d0f8:	jmp    40b400 <flatcc_json_printer_uint64_vector_field@@Base>
  40d0fd:	nop    DWORD PTR [rax]
  40d100:	mov    rdx,r12
  40d103:	mov    esi,0x20
  40d108:	call   403200 <memset@plt>
  40d10d:	add    QWORD PTR [rbx+0x28],r12
  40d111:	jmp    40d06a <flatcc_json_printer_uint64_enum_vector_field@@Base+0xea>
  40d116:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d120:	mov    QWORD PTR [rbx+0x28],rdx
  40d124:	mov    BYTE PTR [rax],0xa
  40d127:	mov    eax,DWORD PTR [rbx+0x38]
  40d12a:	mov    rdi,QWORD PTR [rbx+0x28]
  40d12e:	lea    ebp,[rax-0x1]
  40d131:	movzx  eax,BYTE PTR [rbx+0x31]
  40d135:	mov    DWORD PTR [rbx+0x38],ebp
  40d138:	imul   eax,ebp
  40d13b:	movsxd rbp,eax
  40d13e:	lea    rax,[rdi+rbp*1]
  40d142:	cmp    QWORD PTR [rbx+0x20],rax
  40d146:	jae    40d180 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x200>
  40d148:	mov    rsi,rbp
  40d14b:	mov    rdi,rbx
  40d14e:	call   405350 <test_print@@Base+0xe80>
  40d153:	mov    rax,QWORD PTR [rbx+0x28]
  40d157:	lea    rdx,[rax+0x1]
  40d15b:	jmp    40d0de <flatcc_json_printer_uint64_enum_vector_field@@Base+0x15e>
  40d160:	lea    rdx,[rax+0x1]
  40d164:	mov    QWORD PTR [rbx+0x28],rdx
  40d168:	mov    BYTE PTR [rax],0xa
  40d16b:	mov    rdi,rbx
  40d16e:	call   4053d0 <test_print@@Base+0xf00>
  40d173:	jmp    40d02d <flatcc_json_printer_uint64_enum_vector_field@@Base+0xad>
  40d178:	nop    DWORD PTR [rax+rax*1+0x0]
  40d180:	mov    rdx,rbp
  40d183:	mov    esi,0x20
  40d188:	call   403200 <memset@plt>
  40d18d:	mov    rax,QWORD PTR [rbx+0x28]
  40d191:	add    rax,rbp
  40d194:	lea    rdx,[rax+0x1]
  40d198:	jmp    40d0de <flatcc_json_printer_uint64_enum_vector_field@@Base+0x15e>
  40d19d:	nop    DWORD PTR [rax]

000000000040d1a0 <flatcc_json_printer_int8_enum_vector_field@@Base>:
  40d1a0:	endbr64 
  40d1a4:	cmp    BYTE PTR [rdi+0x33],0x0
  40d1a8:	jne    40d308 <flatcc_json_printer_int8_enum_vector_field@@Base+0x168>
  40d1ae:	lea    eax,[rdx+rdx*1+0x4]
  40d1b2:	cmp    eax,DWORD PTR [rsi+0x10]
  40d1b5:	jge    40d300 <flatcc_json_printer_int8_enum_vector_field@@Base+0x160>
  40d1bb:	mov    rdx,QWORD PTR [rsi+0x8]
  40d1bf:	movzx  eax,WORD PTR [rdx+rax*1]
  40d1c3:	test   ax,ax
  40d1c6:	je     40d300 <flatcc_json_printer_int8_enum_vector_field@@Base+0x160>
  40d1cc:	add    rax,QWORD PTR [rsi]
  40d1cf:	je     40d300 <flatcc_json_printer_int8_enum_vector_field@@Base+0x160>
  40d1d5:	push   r14
  40d1d7:	push   r13
  40d1d9:	push   r12
  40d1db:	push   rbp
  40d1dc:	push   rbx
  40d1dd:	mov    edx,DWORD PTR [rsi+0x18]
  40d1e0:	lea    r10d,[rdx+0x1]
  40d1e4:	mov    DWORD PTR [rsi+0x18],r10d
  40d1e8:	test   edx,edx
  40d1ea:	je     40d1fb <flatcc_json_printer_int8_enum_vector_field@@Base+0x5b>
  40d1ec:	mov    rdx,QWORD PTR [rdi+0x28]
  40d1f0:	lea    rsi,[rdx+0x1]
  40d1f4:	mov    QWORD PTR [rdi+0x28],rsi
  40d1f8:	mov    BYTE PTR [rdx],0x2c
  40d1fb:	mov    r12d,DWORD PTR [rax]
  40d1fe:	mov    rbx,rdi
  40d201:	add    r12,rax
  40d204:	movsxd rdx,r8d
  40d207:	mov    rsi,rcx
  40d20a:	mov    r13,r9
  40d20d:	mov    r14d,DWORD PTR [r12]
  40d211:	call   406380 <test_print@@Base+0x1eb0>
  40d216:	mov    rax,QWORD PTR [rbx+0x28]
  40d21a:	inc    DWORD PTR [rbx+0x38]
  40d21d:	lea    rdx,[rax+0x1]
  40d221:	mov    QWORD PTR [rbx+0x28],rdx
  40d225:	mov    BYTE PTR [rax],0x5b
  40d228:	test   r14d,r14d
  40d22b:	je     40d2e0 <flatcc_json_printer_int8_enum_vector_field@@Base+0x140>
  40d231:	cmp    BYTE PTR [rbx+0x31],0x0
  40d235:	mov    rax,QWORD PTR [rbx+0x28]
  40d239:	jne    40d370 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1d0>
  40d23f:	cmp    QWORD PTR [rbx+0x20],rax
  40d243:	ja     40d24d <flatcc_json_printer_int8_enum_vector_field@@Base+0xad>
  40d245:	xor    esi,esi
  40d247:	mov    rdi,rbx
  40d24a:	call   QWORD PTR [rbx+0x48]
  40d24d:	movsx  esi,BYTE PTR [r12+0x4]
  40d253:	mov    rdi,rbx
  40d256:	call   r13
  40d259:	lea    rbp,[r12+0x5]
  40d25e:	lea    eax,[r14-0x2]
  40d262:	cmp    r14d,0x1
  40d266:	je     40d2e0 <flatcc_json_printer_int8_enum_vector_field@@Base+0x140>
  40d268:	lea    r14,[r12+rax*1+0x6]
  40d26d:	jmp    40d294 <flatcc_json_printer_int8_enum_vector_field@@Base+0xf4>
  40d26f:	nop
  40d270:	mov    rax,QWORD PTR [rbx+0x20]
  40d274:	cmp    QWORD PTR [rbx+0x28],rax
  40d278:	jb     40d282 <flatcc_json_printer_int8_enum_vector_field@@Base+0xe2>
  40d27a:	xor    esi,esi
  40d27c:	mov    rdi,rbx
  40d27f:	call   QWORD PTR [rbx+0x48]
  40d282:	movsx  esi,BYTE PTR [rbp+0x0]
  40d286:	mov    rdi,rbx
  40d289:	inc    rbp
  40d28c:	call   r13
  40d28f:	cmp    rbp,r14
  40d292:	je     40d2e0 <flatcc_json_printer_int8_enum_vector_field@@Base+0x140>
  40d294:	mov    rax,QWORD PTR [rbx+0x28]
  40d298:	lea    rdx,[rax+0x1]
  40d29c:	mov    QWORD PTR [rbx+0x28],rdx
  40d2a0:	mov    BYTE PTR [rax],0x2c
  40d2a3:	cmp    BYTE PTR [rbx+0x31],0x0
  40d2a7:	je     40d270 <flatcc_json_printer_int8_enum_vector_field@@Base+0xd0>
  40d2a9:	mov    rax,QWORD PTR [rbx+0x28]
  40d2ad:	lea    rdx,[rax+0x1]
  40d2b1:	mov    QWORD PTR [rbx+0x28],rdx
  40d2b5:	mov    BYTE PTR [rax],0xa
  40d2b8:	movzx  r12d,BYTE PTR [rbx+0x31]
  40d2bd:	mov    rdi,QWORD PTR [rbx+0x28]
  40d2c1:	imul   r12d,DWORD PTR [rbx+0x38]
  40d2c6:	movsxd r12,r12d
  40d2c9:	lea    rax,[rdi+r12*1]
  40d2cd:	cmp    QWORD PTR [rbx+0x20],rax
  40d2d1:	jae    40d310 <flatcc_json_printer_int8_enum_vector_field@@Base+0x170>
  40d2d3:	mov    rsi,r12
  40d2d6:	mov    rdi,rbx
  40d2d9:	call   405350 <test_print@@Base+0xe80>
  40d2de:	jmp    40d282 <flatcc_json_printer_int8_enum_vector_field@@Base+0xe2>
  40d2e0:	mov    rax,QWORD PTR [rbx+0x28]
  40d2e4:	cmp    BYTE PTR [rbx+0x31],0x0
  40d2e8:	lea    rdx,[rax+0x1]
  40d2ec:	jne    40d330 <flatcc_json_printer_int8_enum_vector_field@@Base+0x190>
  40d2ee:	mov    QWORD PTR [rbx+0x28],rdx
  40d2f2:	mov    BYTE PTR [rax],0x5d
  40d2f5:	pop    rbx
  40d2f6:	pop    rbp
  40d2f7:	pop    r12
  40d2f9:	pop    r13
  40d2fb:	pop    r14
  40d2fd:	ret    
  40d2fe:	xchg   ax,ax
  40d300:	ret    
  40d301:	nop    DWORD PTR [rax+0x0]
  40d308:	jmp    40b660 <flatcc_json_printer_int8_vector_field@@Base>
  40d30d:	nop    DWORD PTR [rax]
  40d310:	mov    rdx,r12
  40d313:	mov    esi,0x20
  40d318:	call   403200 <memset@plt>
  40d31d:	add    QWORD PTR [rbx+0x28],r12
  40d321:	jmp    40d282 <flatcc_json_printer_int8_enum_vector_field@@Base+0xe2>
  40d326:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d330:	mov    QWORD PTR [rbx+0x28],rdx
  40d334:	mov    BYTE PTR [rax],0xa
  40d337:	mov    eax,DWORD PTR [rbx+0x38]
  40d33a:	mov    rdi,QWORD PTR [rbx+0x28]
  40d33e:	lea    ebp,[rax-0x1]
  40d341:	movzx  eax,BYTE PTR [rbx+0x31]
  40d345:	mov    DWORD PTR [rbx+0x38],ebp
  40d348:	imul   eax,ebp
  40d34b:	movsxd rbp,eax
  40d34e:	lea    rax,[rdi+rbp*1]
  40d352:	cmp    QWORD PTR [rbx+0x20],rax
  40d356:	jae    40d390 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1f0>
  40d358:	mov    rsi,rbp
  40d35b:	mov    rdi,rbx
  40d35e:	call   405350 <test_print@@Base+0xe80>
  40d363:	mov    rax,QWORD PTR [rbx+0x28]
  40d367:	lea    rdx,[rax+0x1]
  40d36b:	jmp    40d2ee <flatcc_json_printer_int8_enum_vector_field@@Base+0x14e>
  40d36d:	nop    DWORD PTR [rax]
  40d370:	lea    rdx,[rax+0x1]
  40d374:	mov    QWORD PTR [rbx+0x28],rdx
  40d378:	mov    BYTE PTR [rax],0xa
  40d37b:	mov    rdi,rbx
  40d37e:	call   4053d0 <test_print@@Base+0xf00>
  40d383:	jmp    40d24d <flatcc_json_printer_int8_enum_vector_field@@Base+0xad>
  40d388:	nop    DWORD PTR [rax+rax*1+0x0]
  40d390:	mov    rdx,rbp
  40d393:	mov    esi,0x20
  40d398:	call   403200 <memset@plt>
  40d39d:	mov    rax,QWORD PTR [rbx+0x28]
  40d3a1:	add    rax,rbp
  40d3a4:	lea    rdx,[rax+0x1]
  40d3a8:	jmp    40d2ee <flatcc_json_printer_int8_enum_vector_field@@Base+0x14e>
  40d3ad:	nop    DWORD PTR [rax]

000000000040d3b0 <flatcc_json_printer_int16_enum_vector_field@@Base>:
  40d3b0:	endbr64 
  40d3b4:	cmp    BYTE PTR [rdi+0x33],0x0
  40d3b8:	jne    40d528 <flatcc_json_printer_int16_enum_vector_field@@Base+0x178>
  40d3be:	lea    eax,[rdx+rdx*1+0x4]
  40d3c2:	cmp    eax,DWORD PTR [rsi+0x10]
  40d3c5:	jge    40d520 <flatcc_json_printer_int16_enum_vector_field@@Base+0x170>
  40d3cb:	mov    rdx,QWORD PTR [rsi+0x8]
  40d3cf:	movzx  eax,WORD PTR [rdx+rax*1]
  40d3d3:	test   ax,ax
  40d3d6:	je     40d520 <flatcc_json_printer_int16_enum_vector_field@@Base+0x170>
  40d3dc:	add    rax,QWORD PTR [rsi]
  40d3df:	je     40d520 <flatcc_json_printer_int16_enum_vector_field@@Base+0x170>
  40d3e5:	push   r14
  40d3e7:	push   r13
  40d3e9:	push   r12
  40d3eb:	push   rbp
  40d3ec:	push   rbx
  40d3ed:	mov    edx,DWORD PTR [rsi+0x18]
  40d3f0:	lea    r10d,[rdx+0x1]
  40d3f4:	mov    DWORD PTR [rsi+0x18],r10d
  40d3f8:	test   edx,edx
  40d3fa:	je     40d40b <flatcc_json_printer_int16_enum_vector_field@@Base+0x5b>
  40d3fc:	mov    rdx,QWORD PTR [rdi+0x28]
  40d400:	lea    rsi,[rdx+0x1]
  40d404:	mov    QWORD PTR [rdi+0x28],rsi
  40d408:	mov    BYTE PTR [rdx],0x2c
  40d40b:	mov    r12d,DWORD PTR [rax]
  40d40e:	mov    rbx,rdi
  40d411:	add    r12,rax
  40d414:	movsxd rdx,r8d
  40d417:	mov    rsi,rcx
  40d41a:	mov    r13,r9
  40d41d:	mov    r14d,DWORD PTR [r12]
  40d421:	call   406380 <test_print@@Base+0x1eb0>
  40d426:	mov    rax,QWORD PTR [rbx+0x28]
  40d42a:	inc    DWORD PTR [rbx+0x38]
  40d42d:	lea    rdx,[rax+0x1]
  40d431:	mov    QWORD PTR [rbx+0x28],rdx
  40d435:	mov    BYTE PTR [rax],0x5b
  40d438:	test   r14d,r14d
  40d43b:	je     40d500 <flatcc_json_printer_int16_enum_vector_field@@Base+0x150>
  40d441:	cmp    BYTE PTR [rbx+0x31],0x0
  40d445:	mov    rax,QWORD PTR [rbx+0x28]
  40d449:	jne    40d590 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1e0>
  40d44f:	cmp    QWORD PTR [rbx+0x20],rax
  40d453:	ja     40d45d <flatcc_json_printer_int16_enum_vector_field@@Base+0xad>
  40d455:	xor    esi,esi
  40d457:	mov    rdi,rbx
  40d45a:	call   QWORD PTR [rbx+0x48]
  40d45d:	movsx  esi,WORD PTR [r12+0x4]
  40d463:	mov    rdi,rbx
  40d466:	call   r13
  40d469:	lea    rbp,[r12+0x6]
  40d46e:	lea    eax,[r14-0x2]
  40d472:	cmp    r14d,0x1
  40d476:	je     40d500 <flatcc_json_printer_int16_enum_vector_field@@Base+0x150>
  40d47c:	lea    r14,[r12+rax*2+0x8]
  40d481:	jmp    40d4ad <flatcc_json_printer_int16_enum_vector_field@@Base+0xfd>
  40d483:	nop    DWORD PTR [rax+rax*1+0x0]
  40d488:	mov    rax,QWORD PTR [rbx+0x20]
  40d48c:	cmp    QWORD PTR [rbx+0x28],rax
  40d490:	jb     40d49a <flatcc_json_printer_int16_enum_vector_field@@Base+0xea>
  40d492:	xor    esi,esi
  40d494:	mov    rdi,rbx
  40d497:	call   QWORD PTR [rbx+0x48]
  40d49a:	movsx  esi,WORD PTR [rbp+0x0]
  40d49e:	mov    rdi,rbx
  40d4a1:	add    rbp,0x2
  40d4a5:	call   r13
  40d4a8:	cmp    rbp,r14
  40d4ab:	je     40d500 <flatcc_json_printer_int16_enum_vector_field@@Base+0x150>
  40d4ad:	mov    rax,QWORD PTR [rbx+0x28]
  40d4b1:	lea    rdx,[rax+0x1]
  40d4b5:	mov    QWORD PTR [rbx+0x28],rdx
  40d4b9:	mov    BYTE PTR [rax],0x2c
  40d4bc:	cmp    BYTE PTR [rbx+0x31],0x0
  40d4c0:	je     40d488 <flatcc_json_printer_int16_enum_vector_field@@Base+0xd8>
  40d4c2:	mov    rax,QWORD PTR [rbx+0x28]
  40d4c6:	lea    rdx,[rax+0x1]
  40d4ca:	mov    QWORD PTR [rbx+0x28],rdx
  40d4ce:	mov    BYTE PTR [rax],0xa
  40d4d1:	movzx  r12d,BYTE PTR [rbx+0x31]
  40d4d6:	mov    rdi,QWORD PTR [rbx+0x28]
  40d4da:	imul   r12d,DWORD PTR [rbx+0x38]
  40d4df:	movsxd r12,r12d
  40d4e2:	lea    rax,[rdi+r12*1]
  40d4e6:	cmp    QWORD PTR [rbx+0x20],rax
  40d4ea:	jae    40d530 <flatcc_json_printer_int16_enum_vector_field@@Base+0x180>
  40d4ec:	mov    rsi,r12
  40d4ef:	mov    rdi,rbx
  40d4f2:	call   405350 <test_print@@Base+0xe80>
  40d4f7:	jmp    40d49a <flatcc_json_printer_int16_enum_vector_field@@Base+0xea>
  40d4f9:	nop    DWORD PTR [rax+0x0]
  40d500:	mov    rax,QWORD PTR [rbx+0x28]
  40d504:	cmp    BYTE PTR [rbx+0x31],0x0
  40d508:	lea    rdx,[rax+0x1]
  40d50c:	jne    40d550 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1a0>
  40d50e:	mov    QWORD PTR [rbx+0x28],rdx
  40d512:	mov    BYTE PTR [rax],0x5d
  40d515:	pop    rbx
  40d516:	pop    rbp
  40d517:	pop    r12
  40d519:	pop    r13
  40d51b:	pop    r14
  40d51d:	ret    
  40d51e:	xchg   ax,ax
  40d520:	ret    
  40d521:	nop    DWORD PTR [rax+0x0]
  40d528:	jmp    40b8c0 <flatcc_json_printer_int16_vector_field@@Base>
  40d52d:	nop    DWORD PTR [rax]
  40d530:	mov    rdx,r12
  40d533:	mov    esi,0x20
  40d538:	call   403200 <memset@plt>
  40d53d:	add    QWORD PTR [rbx+0x28],r12
  40d541:	jmp    40d49a <flatcc_json_printer_int16_enum_vector_field@@Base+0xea>
  40d546:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d550:	mov    QWORD PTR [rbx+0x28],rdx
  40d554:	mov    BYTE PTR [rax],0xa
  40d557:	mov    eax,DWORD PTR [rbx+0x38]
  40d55a:	mov    rdi,QWORD PTR [rbx+0x28]
  40d55e:	lea    ebp,[rax-0x1]
  40d561:	movzx  eax,BYTE PTR [rbx+0x31]
  40d565:	mov    DWORD PTR [rbx+0x38],ebp
  40d568:	imul   eax,ebp
  40d56b:	movsxd rbp,eax
  40d56e:	lea    rax,[rdi+rbp*1]
  40d572:	cmp    QWORD PTR [rbx+0x20],rax
  40d576:	jae    40d5b0 <flatcc_json_printer_int16_enum_vector_field@@Base+0x200>
  40d578:	mov    rsi,rbp
  40d57b:	mov    rdi,rbx
  40d57e:	call   405350 <test_print@@Base+0xe80>
  40d583:	mov    rax,QWORD PTR [rbx+0x28]
  40d587:	lea    rdx,[rax+0x1]
  40d58b:	jmp    40d50e <flatcc_json_printer_int16_enum_vector_field@@Base+0x15e>
  40d590:	lea    rdx,[rax+0x1]
  40d594:	mov    QWORD PTR [rbx+0x28],rdx
  40d598:	mov    BYTE PTR [rax],0xa
  40d59b:	mov    rdi,rbx
  40d59e:	call   4053d0 <test_print@@Base+0xf00>
  40d5a3:	jmp    40d45d <flatcc_json_printer_int16_enum_vector_field@@Base+0xad>
  40d5a8:	nop    DWORD PTR [rax+rax*1+0x0]
  40d5b0:	mov    rdx,rbp
  40d5b3:	mov    esi,0x20
  40d5b8:	call   403200 <memset@plt>
  40d5bd:	mov    rax,QWORD PTR [rbx+0x28]
  40d5c1:	add    rax,rbp
  40d5c4:	lea    rdx,[rax+0x1]
  40d5c8:	jmp    40d50e <flatcc_json_printer_int16_enum_vector_field@@Base+0x15e>
  40d5cd:	nop    DWORD PTR [rax]

000000000040d5d0 <flatcc_json_printer_int32_enum_vector_field@@Base>:
  40d5d0:	endbr64 
  40d5d4:	cmp    BYTE PTR [rdi+0x33],0x0
  40d5d8:	jne    40d738 <flatcc_json_printer_int32_enum_vector_field@@Base+0x168>
  40d5de:	lea    eax,[rdx+rdx*1+0x4]
  40d5e2:	cmp    eax,DWORD PTR [rsi+0x10]
  40d5e5:	jge    40d730 <flatcc_json_printer_int32_enum_vector_field@@Base+0x160>
  40d5eb:	mov    rdx,QWORD PTR [rsi+0x8]
  40d5ef:	movzx  eax,WORD PTR [rdx+rax*1]
  40d5f3:	test   ax,ax
  40d5f6:	je     40d730 <flatcc_json_printer_int32_enum_vector_field@@Base+0x160>
  40d5fc:	add    rax,QWORD PTR [rsi]
  40d5ff:	je     40d730 <flatcc_json_printer_int32_enum_vector_field@@Base+0x160>
  40d605:	push   r14
  40d607:	push   r13
  40d609:	push   r12
  40d60b:	push   rbp
  40d60c:	push   rbx
  40d60d:	mov    edx,DWORD PTR [rsi+0x18]
  40d610:	lea    r10d,[rdx+0x1]
  40d614:	mov    DWORD PTR [rsi+0x18],r10d
  40d618:	test   edx,edx
  40d61a:	je     40d62b <flatcc_json_printer_int32_enum_vector_field@@Base+0x5b>
  40d61c:	mov    rdx,QWORD PTR [rdi+0x28]
  40d620:	lea    rsi,[rdx+0x1]
  40d624:	mov    QWORD PTR [rdi+0x28],rsi
  40d628:	mov    BYTE PTR [rdx],0x2c
  40d62b:	mov    r12d,DWORD PTR [rax]
  40d62e:	mov    rbx,rdi
  40d631:	add    r12,rax
  40d634:	movsxd rdx,r8d
  40d637:	mov    rsi,rcx
  40d63a:	mov    r13,r9
  40d63d:	mov    r14d,DWORD PTR [r12]
  40d641:	call   406380 <test_print@@Base+0x1eb0>
  40d646:	mov    rax,QWORD PTR [rbx+0x28]
  40d64a:	inc    DWORD PTR [rbx+0x38]
  40d64d:	lea    rdx,[rax+0x1]
  40d651:	mov    QWORD PTR [rbx+0x28],rdx
  40d655:	mov    BYTE PTR [rax],0x5b
  40d658:	test   r14d,r14d
  40d65b:	je     40d710 <flatcc_json_printer_int32_enum_vector_field@@Base+0x140>
  40d661:	cmp    BYTE PTR [rbx+0x31],0x0
  40d665:	mov    rax,QWORD PTR [rbx+0x28]
  40d669:	jne    40d7a0 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1d0>
  40d66f:	cmp    QWORD PTR [rbx+0x20],rax
  40d673:	ja     40d67d <flatcc_json_printer_int32_enum_vector_field@@Base+0xad>
  40d675:	xor    esi,esi
  40d677:	mov    rdi,rbx
  40d67a:	call   QWORD PTR [rbx+0x48]
  40d67d:	mov    esi,DWORD PTR [r12+0x4]
  40d682:	mov    rdi,rbx
  40d685:	call   r13
  40d688:	lea    rbp,[r12+0x8]
  40d68d:	lea    eax,[r14-0x2]
  40d691:	cmp    r14d,0x1
  40d695:	je     40d710 <flatcc_json_printer_int32_enum_vector_field@@Base+0x140>
  40d697:	lea    r14,[r12+rax*4+0xc]
  40d69c:	jmp    40d6c4 <flatcc_json_printer_int32_enum_vector_field@@Base+0xf4>
  40d69e:	xchg   ax,ax
  40d6a0:	mov    rax,QWORD PTR [rbx+0x20]
  40d6a4:	cmp    QWORD PTR [rbx+0x28],rax
  40d6a8:	jb     40d6b2 <flatcc_json_printer_int32_enum_vector_field@@Base+0xe2>
  40d6aa:	xor    esi,esi
  40d6ac:	mov    rdi,rbx
  40d6af:	call   QWORD PTR [rbx+0x48]
  40d6b2:	mov    esi,DWORD PTR [rbp+0x0]
  40d6b5:	mov    rdi,rbx
  40d6b8:	add    rbp,0x4
  40d6bc:	call   r13
  40d6bf:	cmp    rbp,r14
  40d6c2:	je     40d710 <flatcc_json_printer_int32_enum_vector_field@@Base+0x140>
  40d6c4:	mov    rax,QWORD PTR [rbx+0x28]
  40d6c8:	lea    rdx,[rax+0x1]
  40d6cc:	mov    QWORD PTR [rbx+0x28],rdx
  40d6d0:	mov    BYTE PTR [rax],0x2c
  40d6d3:	cmp    BYTE PTR [rbx+0x31],0x0
  40d6d7:	je     40d6a0 <flatcc_json_printer_int32_enum_vector_field@@Base+0xd0>
  40d6d9:	mov    rax,QWORD PTR [rbx+0x28]
  40d6dd:	lea    rdx,[rax+0x1]
  40d6e1:	mov    QWORD PTR [rbx+0x28],rdx
  40d6e5:	mov    BYTE PTR [rax],0xa
  40d6e8:	movzx  r12d,BYTE PTR [rbx+0x31]
  40d6ed:	mov    rdi,QWORD PTR [rbx+0x28]
  40d6f1:	imul   r12d,DWORD PTR [rbx+0x38]
  40d6f6:	movsxd r12,r12d
  40d6f9:	lea    rax,[rdi+r12*1]
  40d6fd:	cmp    QWORD PTR [rbx+0x20],rax
  40d701:	jae    40d740 <flatcc_json_printer_int32_enum_vector_field@@Base+0x170>
  40d703:	mov    rsi,r12
  40d706:	mov    rdi,rbx
  40d709:	call   405350 <test_print@@Base+0xe80>
  40d70e:	jmp    40d6b2 <flatcc_json_printer_int32_enum_vector_field@@Base+0xe2>
  40d710:	mov    rax,QWORD PTR [rbx+0x28]
  40d714:	cmp    BYTE PTR [rbx+0x31],0x0
  40d718:	lea    rdx,[rax+0x1]
  40d71c:	jne    40d760 <flatcc_json_printer_int32_enum_vector_field@@Base+0x190>
  40d71e:	mov    QWORD PTR [rbx+0x28],rdx
  40d722:	mov    BYTE PTR [rax],0x5d
  40d725:	pop    rbx
  40d726:	pop    rbp
  40d727:	pop    r12
  40d729:	pop    r13
  40d72b:	pop    r14
  40d72d:	ret    
  40d72e:	xchg   ax,ax
  40d730:	ret    
  40d731:	nop    DWORD PTR [rax+0x0]
  40d738:	jmp    40bb20 <flatcc_json_printer_int32_vector_field@@Base>
  40d73d:	nop    DWORD PTR [rax]
  40d740:	mov    rdx,r12
  40d743:	mov    esi,0x20
  40d748:	call   403200 <memset@plt>
  40d74d:	add    QWORD PTR [rbx+0x28],r12
  40d751:	jmp    40d6b2 <flatcc_json_printer_int32_enum_vector_field@@Base+0xe2>
  40d756:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d760:	mov    QWORD PTR [rbx+0x28],rdx
  40d764:	mov    BYTE PTR [rax],0xa
  40d767:	mov    eax,DWORD PTR [rbx+0x38]
  40d76a:	mov    rdi,QWORD PTR [rbx+0x28]
  40d76e:	lea    ebp,[rax-0x1]
  40d771:	movzx  eax,BYTE PTR [rbx+0x31]
  40d775:	mov    DWORD PTR [rbx+0x38],ebp
  40d778:	imul   eax,ebp
  40d77b:	movsxd rbp,eax
  40d77e:	lea    rax,[rdi+rbp*1]
  40d782:	cmp    QWORD PTR [rbx+0x20],rax
  40d786:	jae    40d7c0 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1f0>
  40d788:	mov    rsi,rbp
  40d78b:	mov    rdi,rbx
  40d78e:	call   405350 <test_print@@Base+0xe80>
  40d793:	mov    rax,QWORD PTR [rbx+0x28]
  40d797:	lea    rdx,[rax+0x1]
  40d79b:	jmp    40d71e <flatcc_json_printer_int32_enum_vector_field@@Base+0x14e>
  40d79d:	nop    DWORD PTR [rax]
  40d7a0:	lea    rdx,[rax+0x1]
  40d7a4:	mov    QWORD PTR [rbx+0x28],rdx
  40d7a8:	mov    BYTE PTR [rax],0xa
  40d7ab:	mov    rdi,rbx
  40d7ae:	call   4053d0 <test_print@@Base+0xf00>
  40d7b3:	jmp    40d67d <flatcc_json_printer_int32_enum_vector_field@@Base+0xad>
  40d7b8:	nop    DWORD PTR [rax+rax*1+0x0]
  40d7c0:	mov    rdx,rbp
  40d7c3:	mov    esi,0x20
  40d7c8:	call   403200 <memset@plt>
  40d7cd:	mov    rax,QWORD PTR [rbx+0x28]
  40d7d1:	add    rax,rbp
  40d7d4:	lea    rdx,[rax+0x1]
  40d7d8:	jmp    40d71e <flatcc_json_printer_int32_enum_vector_field@@Base+0x14e>
  40d7dd:	nop    DWORD PTR [rax]

000000000040d7e0 <flatcc_json_printer_int64_enum_vector_field@@Base>:
  40d7e0:	endbr64 
  40d7e4:	cmp    BYTE PTR [rdi+0x33],0x0
  40d7e8:	jne    40d958 <flatcc_json_printer_int64_enum_vector_field@@Base+0x178>
  40d7ee:	lea    eax,[rdx+rdx*1+0x4]
  40d7f2:	cmp    eax,DWORD PTR [rsi+0x10]
  40d7f5:	jge    40d950 <flatcc_json_printer_int64_enum_vector_field@@Base+0x170>
  40d7fb:	mov    rdx,QWORD PTR [rsi+0x8]
  40d7ff:	movzx  eax,WORD PTR [rdx+rax*1]
  40d803:	test   ax,ax
  40d806:	je     40d950 <flatcc_json_printer_int64_enum_vector_field@@Base+0x170>
  40d80c:	add    rax,QWORD PTR [rsi]
  40d80f:	je     40d950 <flatcc_json_printer_int64_enum_vector_field@@Base+0x170>
  40d815:	push   r14
  40d817:	push   r13
  40d819:	push   r12
  40d81b:	push   rbp
  40d81c:	push   rbx
  40d81d:	mov    edx,DWORD PTR [rsi+0x18]
  40d820:	lea    r10d,[rdx+0x1]
  40d824:	mov    DWORD PTR [rsi+0x18],r10d
  40d828:	test   edx,edx
  40d82a:	je     40d83b <flatcc_json_printer_int64_enum_vector_field@@Base+0x5b>
  40d82c:	mov    rdx,QWORD PTR [rdi+0x28]
  40d830:	lea    rsi,[rdx+0x1]
  40d834:	mov    QWORD PTR [rdi+0x28],rsi
  40d838:	mov    BYTE PTR [rdx],0x2c
  40d83b:	mov    r12d,DWORD PTR [rax]
  40d83e:	mov    rbx,rdi
  40d841:	add    r12,rax
  40d844:	movsxd rdx,r8d
  40d847:	mov    rsi,rcx
  40d84a:	mov    r13,r9
  40d84d:	mov    r14d,DWORD PTR [r12]
  40d851:	call   406380 <test_print@@Base+0x1eb0>
  40d856:	mov    rax,QWORD PTR [rbx+0x28]
  40d85a:	inc    DWORD PTR [rbx+0x38]
  40d85d:	lea    rdx,[rax+0x1]
  40d861:	mov    QWORD PTR [rbx+0x28],rdx
  40d865:	mov    BYTE PTR [rax],0x5b
  40d868:	test   r14d,r14d
  40d86b:	je     40d930 <flatcc_json_printer_int64_enum_vector_field@@Base+0x150>
  40d871:	cmp    BYTE PTR [rbx+0x31],0x0
  40d875:	mov    rax,QWORD PTR [rbx+0x28]
  40d879:	jne    40d9c0 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1e0>
  40d87f:	cmp    QWORD PTR [rbx+0x20],rax
  40d883:	ja     40d88d <flatcc_json_printer_int64_enum_vector_field@@Base+0xad>
  40d885:	xor    esi,esi
  40d887:	mov    rdi,rbx
  40d88a:	call   QWORD PTR [rbx+0x48]
  40d88d:	mov    rsi,QWORD PTR [r12+0x4]
  40d892:	mov    rdi,rbx
  40d895:	call   r13
  40d898:	lea    rbp,[r12+0xc]
  40d89d:	lea    eax,[r14-0x2]
  40d8a1:	cmp    r14d,0x1
  40d8a5:	je     40d930 <flatcc_json_printer_int64_enum_vector_field@@Base+0x150>
  40d8ab:	lea    r14,[r12+rax*8+0x14]
  40d8b0:	jmp    40d8dd <flatcc_json_printer_int64_enum_vector_field@@Base+0xfd>
  40d8b2:	nop    WORD PTR [rax+rax*1+0x0]
  40d8b8:	mov    rax,QWORD PTR [rbx+0x20]
  40d8bc:	cmp    QWORD PTR [rbx+0x28],rax
  40d8c0:	jb     40d8ca <flatcc_json_printer_int64_enum_vector_field@@Base+0xea>
  40d8c2:	xor    esi,esi
  40d8c4:	mov    rdi,rbx
  40d8c7:	call   QWORD PTR [rbx+0x48]
  40d8ca:	mov    rsi,QWORD PTR [rbp+0x0]
  40d8ce:	mov    rdi,rbx
  40d8d1:	add    rbp,0x8
  40d8d5:	call   r13
  40d8d8:	cmp    rbp,r14
  40d8db:	je     40d930 <flatcc_json_printer_int64_enum_vector_field@@Base+0x150>
  40d8dd:	mov    rax,QWORD PTR [rbx+0x28]
  40d8e1:	lea    rdx,[rax+0x1]
  40d8e5:	mov    QWORD PTR [rbx+0x28],rdx
  40d8e9:	mov    BYTE PTR [rax],0x2c
  40d8ec:	cmp    BYTE PTR [rbx+0x31],0x0
  40d8f0:	je     40d8b8 <flatcc_json_printer_int64_enum_vector_field@@Base+0xd8>
  40d8f2:	mov    rax,QWORD PTR [rbx+0x28]
  40d8f6:	lea    rdx,[rax+0x1]
  40d8fa:	mov    QWORD PTR [rbx+0x28],rdx
  40d8fe:	mov    BYTE PTR [rax],0xa
  40d901:	movzx  r12d,BYTE PTR [rbx+0x31]
  40d906:	mov    rdi,QWORD PTR [rbx+0x28]
  40d90a:	imul   r12d,DWORD PTR [rbx+0x38]
  40d90f:	movsxd r12,r12d
  40d912:	lea    rax,[rdi+r12*1]
  40d916:	cmp    QWORD PTR [rbx+0x20],rax
  40d91a:	jae    40d960 <flatcc_json_printer_int64_enum_vector_field@@Base+0x180>
  40d91c:	mov    rsi,r12
  40d91f:	mov    rdi,rbx
  40d922:	call   405350 <test_print@@Base+0xe80>
  40d927:	jmp    40d8ca <flatcc_json_printer_int64_enum_vector_field@@Base+0xea>
  40d929:	nop    DWORD PTR [rax+0x0]
  40d930:	mov    rax,QWORD PTR [rbx+0x28]
  40d934:	cmp    BYTE PTR [rbx+0x31],0x0
  40d938:	lea    rdx,[rax+0x1]
  40d93c:	jne    40d980 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1a0>
  40d93e:	mov    QWORD PTR [rbx+0x28],rdx
  40d942:	mov    BYTE PTR [rax],0x5d
  40d945:	pop    rbx
  40d946:	pop    rbp
  40d947:	pop    r12
  40d949:	pop    r13
  40d94b:	pop    r14
  40d94d:	ret    
  40d94e:	xchg   ax,ax
  40d950:	ret    
  40d951:	nop    DWORD PTR [rax+0x0]
  40d958:	jmp    40bd70 <flatcc_json_printer_int64_vector_field@@Base>
  40d95d:	nop    DWORD PTR [rax]
  40d960:	mov    rdx,r12
  40d963:	mov    esi,0x20
  40d968:	call   403200 <memset@plt>
  40d96d:	add    QWORD PTR [rbx+0x28],r12
  40d971:	jmp    40d8ca <flatcc_json_printer_int64_enum_vector_field@@Base+0xea>
  40d976:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d980:	mov    QWORD PTR [rbx+0x28],rdx
  40d984:	mov    BYTE PTR [rax],0xa
  40d987:	mov    eax,DWORD PTR [rbx+0x38]
  40d98a:	mov    rdi,QWORD PTR [rbx+0x28]
  40d98e:	lea    ebp,[rax-0x1]
  40d991:	movzx  eax,BYTE PTR [rbx+0x31]
  40d995:	mov    DWORD PTR [rbx+0x38],ebp
  40d998:	imul   eax,ebp
  40d99b:	movsxd rbp,eax
  40d99e:	lea    rax,[rdi+rbp*1]
  40d9a2:	cmp    QWORD PTR [rbx+0x20],rax
  40d9a6:	jae    40d9e0 <flatcc_json_printer_int64_enum_vector_field@@Base+0x200>
  40d9a8:	mov    rsi,rbp
  40d9ab:	mov    rdi,rbx
  40d9ae:	call   405350 <test_print@@Base+0xe80>
  40d9b3:	mov    rax,QWORD PTR [rbx+0x28]
  40d9b7:	lea    rdx,[rax+0x1]
  40d9bb:	jmp    40d93e <flatcc_json_printer_int64_enum_vector_field@@Base+0x15e>
  40d9c0:	lea    rdx,[rax+0x1]
  40d9c4:	mov    QWORD PTR [rbx+0x28],rdx
  40d9c8:	mov    BYTE PTR [rax],0xa
  40d9cb:	mov    rdi,rbx
  40d9ce:	call   4053d0 <test_print@@Base+0xf00>
  40d9d3:	jmp    40d88d <flatcc_json_printer_int64_enum_vector_field@@Base+0xad>
  40d9d8:	nop    DWORD PTR [rax+rax*1+0x0]
  40d9e0:	mov    rdx,rbp
  40d9e3:	mov    esi,0x20
  40d9e8:	call   403200 <memset@plt>
  40d9ed:	mov    rax,QWORD PTR [rbx+0x28]
  40d9f1:	add    rax,rbp
  40d9f4:	lea    rdx,[rax+0x1]
  40d9f8:	jmp    40d93e <flatcc_json_printer_int64_enum_vector_field@@Base+0x15e>
  40d9fd:	nop    DWORD PTR [rax]

000000000040da00 <flatcc_json_printer_bool_enum_vector_field@@Base>:
  40da00:	endbr64 
  40da04:	cmp    BYTE PTR [rdi+0x33],0x0
  40da08:	jne    40db68 <flatcc_json_printer_bool_enum_vector_field@@Base+0x168>
  40da0e:	lea    eax,[rdx+rdx*1+0x4]
  40da12:	cmp    eax,DWORD PTR [rsi+0x10]
  40da15:	jge    40db60 <flatcc_json_printer_bool_enum_vector_field@@Base+0x160>
  40da1b:	mov    rdx,QWORD PTR [rsi+0x8]
  40da1f:	movzx  eax,WORD PTR [rdx+rax*1]
  40da23:	test   ax,ax
  40da26:	je     40db60 <flatcc_json_printer_bool_enum_vector_field@@Base+0x160>
  40da2c:	add    rax,QWORD PTR [rsi]
  40da2f:	je     40db60 <flatcc_json_printer_bool_enum_vector_field@@Base+0x160>
  40da35:	push   r14
  40da37:	push   r13
  40da39:	push   r12
  40da3b:	push   rbp
  40da3c:	push   rbx
  40da3d:	mov    edx,DWORD PTR [rsi+0x18]
  40da40:	lea    r10d,[rdx+0x1]
  40da44:	mov    DWORD PTR [rsi+0x18],r10d
  40da48:	test   edx,edx
  40da4a:	je     40da5b <flatcc_json_printer_bool_enum_vector_field@@Base+0x5b>
  40da4c:	mov    rdx,QWORD PTR [rdi+0x28]
  40da50:	lea    rsi,[rdx+0x1]
  40da54:	mov    QWORD PTR [rdi+0x28],rsi
  40da58:	mov    BYTE PTR [rdx],0x2c
  40da5b:	mov    r12d,DWORD PTR [rax]
  40da5e:	mov    rbx,rdi
  40da61:	add    r12,rax
  40da64:	movsxd rdx,r8d
  40da67:	mov    rsi,rcx
  40da6a:	mov    r13,r9
  40da6d:	mov    r14d,DWORD PTR [r12]
  40da71:	call   406380 <test_print@@Base+0x1eb0>
  40da76:	mov    rax,QWORD PTR [rbx+0x28]
  40da7a:	inc    DWORD PTR [rbx+0x38]
  40da7d:	lea    rdx,[rax+0x1]
  40da81:	mov    QWORD PTR [rbx+0x28],rdx
  40da85:	mov    BYTE PTR [rax],0x5b
  40da88:	test   r14d,r14d
  40da8b:	je     40db40 <flatcc_json_printer_bool_enum_vector_field@@Base+0x140>
  40da91:	cmp    BYTE PTR [rbx+0x31],0x0
  40da95:	mov    rax,QWORD PTR [rbx+0x28]
  40da99:	jne    40dbd0 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1d0>
  40da9f:	cmp    QWORD PTR [rbx+0x20],rax
  40daa3:	ja     40daad <flatcc_json_printer_bool_enum_vector_field@@Base+0xad>
  40daa5:	xor    esi,esi
  40daa7:	mov    rdi,rbx
  40daaa:	call   QWORD PTR [rbx+0x48]
  40daad:	movzx  esi,BYTE PTR [r12+0x4]
  40dab3:	mov    rdi,rbx
  40dab6:	call   r13
  40dab9:	lea    rbp,[r12+0x5]
  40dabe:	lea    eax,[r14-0x2]
  40dac2:	cmp    r14d,0x1
  40dac6:	je     40db40 <flatcc_json_printer_bool_enum_vector_field@@Base+0x140>
  40dac8:	lea    r14,[r12+rax*1+0x6]
  40dacd:	jmp    40daf4 <flatcc_json_printer_bool_enum_vector_field@@Base+0xf4>
  40dacf:	nop
  40dad0:	mov    rax,QWORD PTR [rbx+0x20]
  40dad4:	cmp    QWORD PTR [rbx+0x28],rax
  40dad8:	jb     40dae2 <flatcc_json_printer_bool_enum_vector_field@@Base+0xe2>
  40dada:	xor    esi,esi
  40dadc:	mov    rdi,rbx
  40dadf:	call   QWORD PTR [rbx+0x48]
  40dae2:	movzx  esi,BYTE PTR [rbp+0x0]
  40dae6:	mov    rdi,rbx
  40dae9:	inc    rbp
  40daec:	call   r13
  40daef:	cmp    rbp,r14
  40daf2:	je     40db40 <flatcc_json_printer_bool_enum_vector_field@@Base+0x140>
  40daf4:	mov    rax,QWORD PTR [rbx+0x28]
  40daf8:	lea    rdx,[rax+0x1]
  40dafc:	mov    QWORD PTR [rbx+0x28],rdx
  40db00:	mov    BYTE PTR [rax],0x2c
  40db03:	cmp    BYTE PTR [rbx+0x31],0x0
  40db07:	je     40dad0 <flatcc_json_printer_bool_enum_vector_field@@Base+0xd0>
  40db09:	mov    rax,QWORD PTR [rbx+0x28]
  40db0d:	lea    rdx,[rax+0x1]
  40db11:	mov    QWORD PTR [rbx+0x28],rdx
  40db15:	mov    BYTE PTR [rax],0xa
  40db18:	movzx  r12d,BYTE PTR [rbx+0x31]
  40db1d:	mov    rdi,QWORD PTR [rbx+0x28]
  40db21:	imul   r12d,DWORD PTR [rbx+0x38]
  40db26:	movsxd r12,r12d
  40db29:	lea    rax,[rdi+r12*1]
  40db2d:	cmp    QWORD PTR [rbx+0x20],rax
  40db31:	jae    40db70 <flatcc_json_printer_bool_enum_vector_field@@Base+0x170>
  40db33:	mov    rsi,r12
  40db36:	mov    rdi,rbx
  40db39:	call   405350 <test_print@@Base+0xe80>
  40db3e:	jmp    40dae2 <flatcc_json_printer_bool_enum_vector_field@@Base+0xe2>
  40db40:	mov    rax,QWORD PTR [rbx+0x28]
  40db44:	cmp    BYTE PTR [rbx+0x31],0x0
  40db48:	lea    rdx,[rax+0x1]
  40db4c:	jne    40db90 <flatcc_json_printer_bool_enum_vector_field@@Base+0x190>
  40db4e:	mov    QWORD PTR [rbx+0x28],rdx
  40db52:	mov    BYTE PTR [rax],0x5d
  40db55:	pop    rbx
  40db56:	pop    rbp
  40db57:	pop    r12
  40db59:	pop    r13
  40db5b:	pop    r14
  40db5d:	ret    
  40db5e:	xchg   ax,ax
  40db60:	ret    
  40db61:	nop    DWORD PTR [rax+0x0]
  40db68:	jmp    40bfd0 <flatcc_json_printer_bool_vector_field@@Base>
  40db6d:	nop    DWORD PTR [rax]
  40db70:	mov    rdx,r12
  40db73:	mov    esi,0x20
  40db78:	call   403200 <memset@plt>
  40db7d:	add    QWORD PTR [rbx+0x28],r12
  40db81:	jmp    40dae2 <flatcc_json_printer_bool_enum_vector_field@@Base+0xe2>
  40db86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40db90:	mov    QWORD PTR [rbx+0x28],rdx
  40db94:	mov    BYTE PTR [rax],0xa
  40db97:	mov    eax,DWORD PTR [rbx+0x38]
  40db9a:	mov    rdi,QWORD PTR [rbx+0x28]
  40db9e:	lea    ebp,[rax-0x1]
  40dba1:	movzx  eax,BYTE PTR [rbx+0x31]
  40dba5:	mov    DWORD PTR [rbx+0x38],ebp
  40dba8:	imul   eax,ebp
  40dbab:	movsxd rbp,eax
  40dbae:	lea    rax,[rdi+rbp*1]
  40dbb2:	cmp    QWORD PTR [rbx+0x20],rax
  40dbb6:	jae    40dbf0 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1f0>
  40dbb8:	mov    rsi,rbp
  40dbbb:	mov    rdi,rbx
  40dbbe:	call   405350 <test_print@@Base+0xe80>
  40dbc3:	mov    rax,QWORD PTR [rbx+0x28]
  40dbc7:	lea    rdx,[rax+0x1]
  40dbcb:	jmp    40db4e <flatcc_json_printer_bool_enum_vector_field@@Base+0x14e>
  40dbcd:	nop    DWORD PTR [rax]
  40dbd0:	lea    rdx,[rax+0x1]
  40dbd4:	mov    QWORD PTR [rbx+0x28],rdx
  40dbd8:	mov    BYTE PTR [rax],0xa
  40dbdb:	mov    rdi,rbx
  40dbde:	call   4053d0 <test_print@@Base+0xf00>
  40dbe3:	jmp    40daad <flatcc_json_printer_bool_enum_vector_field@@Base+0xad>
  40dbe8:	nop    DWORD PTR [rax+rax*1+0x0]
  40dbf0:	mov    rdx,rbp
  40dbf3:	mov    esi,0x20
  40dbf8:	call   403200 <memset@plt>
  40dbfd:	mov    rax,QWORD PTR [rbx+0x28]
  40dc01:	add    rax,rbp
  40dc04:	lea    rdx,[rax+0x1]
  40dc08:	jmp    40db4e <flatcc_json_printer_bool_enum_vector_field@@Base+0x14e>
  40dc0d:	nop    DWORD PTR [rax]

000000000040dc10 <flatcc_json_printer_struct_vector_field@@Base>:
  40dc10:	endbr64 
  40dc14:	push   r15
  40dc16:	lea    eax,[rdx+rdx*1+0x4]
  40dc1a:	push   r14
  40dc1c:	push   r13
  40dc1e:	push   r12
  40dc20:	push   rbp
  40dc21:	push   rbx
  40dc22:	sub    rsp,0x8
  40dc26:	mov    r14,QWORD PTR [rsp+0x40]
  40dc2b:	cmp    eax,DWORD PTR [rsi+0x10]
  40dc2e:	jge    40ddc9 <flatcc_json_printer_struct_vector_field@@Base+0x1b9>
  40dc34:	mov    rdx,QWORD PTR [rsi+0x8]
  40dc38:	movzx  eax,WORD PTR [rdx+rax*1]
  40dc3c:	test   ax,ax
  40dc3f:	je     40ddc9 <flatcc_json_printer_struct_vector_field@@Base+0x1b9>
  40dc45:	add    rax,QWORD PTR [rsi]
  40dc48:	je     40ddc9 <flatcc_json_printer_struct_vector_field@@Base+0x1b9>
  40dc4e:	mov    edx,DWORD PTR [rsi+0x18]
  40dc51:	lea    r10d,[rdx+0x1]
  40dc55:	mov    DWORD PTR [rsi+0x18],r10d
  40dc59:	test   edx,edx
  40dc5b:	je     40dc6c <flatcc_json_printer_struct_vector_field@@Base+0x5c>
  40dc5d:	mov    rdx,QWORD PTR [rdi+0x28]
  40dc61:	lea    rsi,[rdx+0x1]
  40dc65:	mov    QWORD PTR [rdi+0x28],rsi
  40dc69:	mov    BYTE PTR [rdx],0x2c
  40dc6c:	mov    ebp,DWORD PTR [rax]
  40dc6e:	mov    rbx,rdi
  40dc71:	add    rbp,rax
  40dc74:	movsxd rdx,r8d
  40dc77:	mov    rsi,rcx
  40dc7a:	mov    r13,r9
  40dc7d:	mov    r15d,DWORD PTR [rbp+0x0]
  40dc81:	call   406380 <test_print@@Base+0x1eb0>
  40dc86:	mov    rax,QWORD PTR [rbx+0x28]
  40dc8a:	inc    DWORD PTR [rbx+0x38]
  40dc8d:	lea    rdx,[rax+0x1]
  40dc91:	mov    QWORD PTR [rbx+0x28],rdx
  40dc95:	mov    BYTE PTR [rax],0x5b
  40dc98:	test   r15d,r15d
  40dc9b:	je     40ddb0 <flatcc_json_printer_struct_vector_field@@Base+0x1a0>
  40dca1:	cmp    BYTE PTR [rbx+0x31],0x0
  40dca5:	mov    rax,QWORD PTR [rbx+0x28]
  40dca9:	jne    40dde0 <flatcc_json_printer_struct_vector_field@@Base+0x1d0>
  40dcaf:	cmp    QWORD PTR [rbx+0x20],rax
  40dcb3:	ja     40dcc1 <flatcc_json_printer_struct_vector_field@@Base+0xb1>
  40dcb5:	xor    esi,esi
  40dcb7:	mov    rdi,rbx
  40dcba:	call   QWORD PTR [rbx+0x48]
  40dcbd:	mov    rax,QWORD PTR [rbx+0x28]
  40dcc1:	inc    DWORD PTR [rbx+0x38]
  40dcc4:	lea    rdx,[rax+0x1]
  40dcc8:	mov    QWORD PTR [rbx+0x28],rdx
  40dccc:	mov    BYTE PTR [rax],0x7b
  40dccf:	add    rbp,0x4
  40dcd3:	mov    rsi,rbp
  40dcd6:	mov    rdi,rbx
  40dcd9:	call   r14
  40dcdc:	cmp    BYTE PTR [rbx+0x31],0x0
  40dce0:	jne    40ded0 <flatcc_json_printer_struct_vector_field@@Base+0x2c0>
  40dce6:	mov    rax,QWORD PTR [rbx+0x28]
  40dcea:	lea    r12d,[r15-0x2]
  40dcee:	lea    rdx,[rax+0x1]
  40dcf2:	mov    QWORD PTR [rbx+0x28],rdx
  40dcf6:	mov    BYTE PTR [rax],0x7d
  40dcf9:	cmp    r15d,0x1
  40dcfd:	jne    40dd57 <flatcc_json_printer_struct_vector_field@@Base+0x147>
  40dcff:	jmp    40ddb0 <flatcc_json_printer_struct_vector_field@@Base+0x1a0>
  40dd04:	nop    DWORD PTR [rax+0x0]
  40dd08:	mov    rsi,QWORD PTR [rbx+0x28]
  40dd0c:	cmp    rsi,QWORD PTR [rbx+0x20]
  40dd10:	jb     40dd1e <flatcc_json_printer_struct_vector_field@@Base+0x10e>
  40dd12:	xor    esi,esi
  40dd14:	mov    rdi,rbx
  40dd17:	call   QWORD PTR [rbx+0x48]
  40dd1a:	mov    rsi,QWORD PTR [rbx+0x28]
  40dd1e:	inc    DWORD PTR [rbx+0x38]
  40dd21:	lea    rax,[rsi+0x1]
  40dd25:	mov    QWORD PTR [rbx+0x28],rax
  40dd29:	mov    BYTE PTR [rsi],0x7b
  40dd2c:	mov    rdi,rbx
  40dd2f:	mov    rsi,rbp
  40dd32:	call   r14
  40dd35:	cmp    BYTE PTR [rbx+0x31],0x0
  40dd39:	jne    40de00 <flatcc_json_printer_struct_vector_field@@Base+0x1f0>
  40dd3f:	mov    rsi,QWORD PTR [rbx+0x28]
  40dd43:	lea    rax,[rsi+0x1]
  40dd47:	dec    r12d
  40dd4a:	mov    QWORD PTR [rbx+0x28],rax
  40dd4e:	mov    BYTE PTR [rsi],0x7d
  40dd51:	cmp    r12d,0xffffffff
  40dd55:	je     40ddb0 <flatcc_json_printer_struct_vector_field@@Base+0x1a0>
  40dd57:	mov    rax,QWORD PTR [rbx+0x28]
  40dd5b:	add    rbp,r13
  40dd5e:	lea    rdx,[rax+0x1]
  40dd62:	mov    QWORD PTR [rbx+0x28],rdx
  40dd66:	mov    BYTE PTR [rax],0x2c
  40dd69:	cmp    BYTE PTR [rbx+0x31],0x0
  40dd6d:	je     40dd08 <flatcc_json_printer_struct_vector_field@@Base+0xf8>
  40dd6f:	mov    rax,QWORD PTR [rbx+0x28]
  40dd73:	lea    rdx,[rax+0x1]
  40dd77:	mov    QWORD PTR [rbx+0x28],rdx
  40dd7b:	mov    BYTE PTR [rax],0xa
  40dd7e:	movzx  esi,BYTE PTR [rbx+0x31]
  40dd82:	mov    rdi,QWORD PTR [rbx+0x28]
  40dd86:	imul   esi,DWORD PTR [rbx+0x38]
  40dd8a:	movsxd r15,esi
  40dd8d:	lea    rax,[rdi+r15*1]
  40dd91:	cmp    QWORD PTR [rbx+0x20],rax
  40dd95:	jae    40de48 <flatcc_json_printer_struct_vector_field@@Base+0x238>
  40dd9b:	mov    rsi,r15
  40dd9e:	mov    rdi,rbx
  40dda1:	call   405350 <test_print@@Base+0xe80>
  40dda6:	mov    rsi,QWORD PTR [rbx+0x28]
  40ddaa:	jmp    40dd1e <flatcc_json_printer_struct_vector_field@@Base+0x10e>
  40ddaf:	nop
  40ddb0:	mov    rax,QWORD PTR [rbx+0x28]
  40ddb4:	cmp    BYTE PTR [rbx+0x31],0x0
  40ddb8:	lea    rdx,[rax+0x1]
  40ddbc:	jne    40de88 <flatcc_json_printer_struct_vector_field@@Base+0x278>
  40ddc2:	mov    QWORD PTR [rbx+0x28],rdx
  40ddc6:	mov    BYTE PTR [rax],0x5d
  40ddc9:	add    rsp,0x8
  40ddcd:	pop    rbx
  40ddce:	pop    rbp
  40ddcf:	pop    r12
  40ddd1:	pop    r13
  40ddd3:	pop    r14
  40ddd5:	pop    r15
  40ddd7:	ret    
  40ddd8:	nop    DWORD PTR [rax+rax*1+0x0]
  40dde0:	lea    rdx,[rax+0x1]
  40dde4:	mov    QWORD PTR [rbx+0x28],rdx
  40dde8:	mov    BYTE PTR [rax],0xa
  40ddeb:	mov    rdi,rbx
  40ddee:	call   4053d0 <test_print@@Base+0xf00>
  40ddf3:	mov    rax,QWORD PTR [rbx+0x28]
  40ddf7:	jmp    40dcc1 <flatcc_json_printer_struct_vector_field@@Base+0xb1>
  40ddfc:	nop    DWORD PTR [rax+0x0]
  40de00:	mov    rax,QWORD PTR [rbx+0x28]
  40de04:	lea    rdx,[rax+0x1]
  40de08:	mov    QWORD PTR [rbx+0x28],rdx
  40de0c:	mov    BYTE PTR [rax],0xa
  40de0f:	mov    eax,DWORD PTR [rbx+0x38]
  40de12:	movzx  esi,BYTE PTR [rbx+0x31]
  40de16:	lea    r15d,[rax-0x1]
  40de1a:	imul   esi,r15d
  40de1e:	mov    rdi,QWORD PTR [rbx+0x28]
  40de22:	mov    DWORD PTR [rbx+0x38],r15d
  40de26:	movsxd r15,esi
  40de29:	lea    rax,[rdi+r15*1]
  40de2d:	cmp    QWORD PTR [rbx+0x20],rax
  40de31:	jae    40de68 <flatcc_json_printer_struct_vector_field@@Base+0x258>
  40de33:	mov    rsi,r15
  40de36:	mov    rdi,rbx
  40de39:	call   405350 <test_print@@Base+0xe80>
  40de3e:	jmp    40dd3f <flatcc_json_printer_struct_vector_field@@Base+0x12f>
  40de43:	nop    DWORD PTR [rax+rax*1+0x0]
  40de48:	mov    esi,0x20
  40de4d:	mov    rdx,r15
  40de50:	call   403200 <memset@plt>
  40de55:	mov    rsi,QWORD PTR [rbx+0x28]
  40de59:	add    rsi,r15
  40de5c:	jmp    40dd1e <flatcc_json_printer_struct_vector_field@@Base+0x10e>
  40de61:	nop    DWORD PTR [rax+0x0]
  40de68:	mov    esi,0x20
  40de6d:	mov    rdx,r15
  40de70:	call   403200 <memset@plt>
  40de75:	mov    rsi,QWORD PTR [rbx+0x28]
  40de79:	add    rsi,r15
  40de7c:	jmp    40dd43 <flatcc_json_printer_struct_vector_field@@Base+0x133>
  40de81:	nop    DWORD PTR [rax+0x0]
  40de88:	mov    QWORD PTR [rbx+0x28],rdx
  40de8c:	mov    BYTE PTR [rax],0xa
  40de8f:	mov    eax,DWORD PTR [rbx+0x38]
  40de92:	mov    rdi,QWORD PTR [rbx+0x28]
  40de96:	lea    ebp,[rax-0x1]
  40de99:	movzx  eax,BYTE PTR [rbx+0x31]
  40de9d:	mov    DWORD PTR [rbx+0x38],ebp
  40dea0:	imul   eax,ebp
  40dea3:	movsxd rbp,eax
  40dea6:	lea    rax,[rdi+rbp*1]
  40deaa:	cmp    QWORD PTR [rbx+0x20],rax
  40deae:	jae    40def0 <flatcc_json_printer_struct_vector_field@@Base+0x2e0>
  40deb0:	mov    rsi,rbp
  40deb3:	mov    rdi,rbx
  40deb6:	call   405350 <test_print@@Base+0xe80>
  40debb:	mov    rax,QWORD PTR [rbx+0x28]
  40debf:	lea    rdx,[rax+0x1]
  40dec3:	jmp    40ddc2 <flatcc_json_printer_struct_vector_field@@Base+0x1b2>
  40dec8:	nop    DWORD PTR [rax+rax*1+0x0]
  40ded0:	mov    rax,QWORD PTR [rbx+0x28]
  40ded4:	mov    rdi,rbx
  40ded7:	lea    rdx,[rax+0x1]
  40dedb:	mov    QWORD PTR [rbx+0x28],rdx
  40dedf:	mov    BYTE PTR [rax],0xa
  40dee2:	dec    DWORD PTR [rbx+0x38]
  40dee5:	call   4053d0 <test_print@@Base+0xf00>
  40deea:	jmp    40dce6 <flatcc_json_printer_struct_vector_field@@Base+0xd6>
  40deef:	nop
  40def0:	mov    rdx,rbp
  40def3:	mov    esi,0x20
  40def8:	call   403200 <memset@plt>
  40defd:	mov    rax,QWORD PTR [rbx+0x28]
  40df01:	add    rax,rbp
  40df04:	lea    rdx,[rax+0x1]
  40df08:	jmp    40ddc2 <flatcc_json_printer_struct_vector_field@@Base+0x1b2>
  40df0d:	nop    DWORD PTR [rax]

000000000040df10 <flatcc_json_printer_string_vector_field@@Base>:
  40df10:	endbr64 
  40df14:	lea    eax,[rdx+rdx*1+0x4]
  40df18:	cmp    eax,DWORD PTR [rsi+0x10]
  40df1b:	jge    40e0e0 <flatcc_json_printer_string_vector_field@@Base+0x1d0>
  40df21:	mov    rdx,QWORD PTR [rsi+0x8]
  40df25:	movzx  eax,WORD PTR [rdx+rax*1]
  40df29:	test   ax,ax
  40df2c:	je     40e0e0 <flatcc_json_printer_string_vector_field@@Base+0x1d0>
  40df32:	add    rax,QWORD PTR [rsi]
  40df35:	je     40e0e0 <flatcc_json_printer_string_vector_field@@Base+0x1d0>
  40df3b:	push   r15
  40df3d:	push   r14
  40df3f:	push   r13
  40df41:	push   r12
  40df43:	push   rbp
  40df44:	push   rbx
  40df45:	sub    rsp,0x8
  40df49:	mov    r9d,DWORD PTR [rsi+0x18]
  40df4d:	lea    edx,[r9+0x1]
  40df51:	mov    DWORD PTR [rsi+0x18],edx
  40df54:	mov    rdx,QWORD PTR [rdi+0x28]
  40df58:	test   r9d,r9d
  40df5b:	je     40df6c <flatcc_json_printer_string_vector_field@@Base+0x5c>
  40df5d:	lea    rsi,[rdx+0x1]
  40df61:	mov    QWORD PTR [rdi+0x28],rsi
  40df65:	mov    BYTE PTR [rdx],0x2c
  40df68:	mov    rdx,QWORD PTR [rdi+0x28]
  40df6c:	mov    r12d,DWORD PTR [rax]
  40df6f:	mov    r15,rcx
  40df72:	add    r12,rax
  40df75:	cmp    BYTE PTR [rdi+0x31],0x0
  40df79:	mov    rbx,rdi
  40df7c:	mov    r13d,DWORD PTR [r12]
  40df80:	movsxd rbp,r8d
  40df83:	jne    40e1a0 <flatcc_json_printer_string_vector_field@@Base+0x290>
  40df89:	cmp    QWORD PTR [rdi+0x20],rdx
  40df8d:	jbe    40e128 <flatcc_json_printer_string_vector_field@@Base+0x218>
  40df93:	mov    BYTE PTR [rdx],0x22
  40df96:	xor    edi,edi
  40df98:	mov    rdx,rbp
  40df9b:	cmp    BYTE PTR [rbx+0x32],0x0
  40df9f:	sete   dil
  40dfa3:	add    rdi,QWORD PTR [rbx+0x28]
  40dfa7:	lea    rax,[rdi+rbp*1]
  40dfab:	mov    QWORD PTR [rbx+0x28],rdi
  40dfaf:	mov    rsi,r15
  40dfb2:	cmp    QWORD PTR [rbx+0x20],rax
  40dfb6:	jbe    40e110 <flatcc_json_printer_string_vector_field@@Base+0x200>
  40dfbc:	call   403240 <memcpy@plt>
  40dfc1:	add    rbp,QWORD PTR [rbx+0x28]
  40dfc5:	mov    QWORD PTR [rbx+0x28],rbp
  40dfc9:	mov    BYTE PTR [rbp+0x0],0x22
  40dfcd:	xor    eax,eax
  40dfcf:	cmp    BYTE PTR [rbx+0x32],0x0
  40dfd3:	sete   al
  40dfd6:	add    rax,QWORD PTR [rbx+0x28]
  40dfda:	lea    rdx,[rax+0x1]
  40dfde:	mov    QWORD PTR [rbx+0x28],rdx
  40dfe2:	mov    BYTE PTR [rax],0x3a
  40dfe5:	mov    rax,QWORD PTR [rbx+0x28]
  40dfe9:	mov    BYTE PTR [rax],0x20
  40dfec:	xor    eax,eax
  40dfee:	cmp    BYTE PTR [rbx+0x31],0x0
  40dff2:	setne  al
  40dff5:	add    rax,QWORD PTR [rbx+0x28]
  40dff9:	lea    rdx,[rax+0x1]
  40dffd:	inc    DWORD PTR [rbx+0x38]
  40e000:	mov    QWORD PTR [rbx+0x28],rdx
  40e004:	mov    BYTE PTR [rax],0x5b
  40e007:	test   r13d,r13d
  40e00a:	je     40e0e8 <flatcc_json_printer_string_vector_field@@Base+0x1d8>
  40e010:	cmp    BYTE PTR [rbx+0x31],0x0
  40e014:	mov    rax,QWORD PTR [rbx+0x28]
  40e018:	jne    40e140 <flatcc_json_printer_string_vector_field@@Base+0x230>
  40e01e:	cmp    QWORD PTR [rbx+0x20],rax
  40e022:	ja     40e02c <flatcc_json_printer_string_vector_field@@Base+0x11c>
  40e024:	xor    esi,esi
  40e026:	mov    rdi,rbx
  40e029:	call   QWORD PTR [rbx+0x48]
  40e02c:	mov    esi,DWORD PTR [r12+0x4]
  40e031:	lea    rbp,[r12+0x4]
  40e036:	add    rsi,rbp
  40e039:	mov    edx,DWORD PTR [rsi]
  40e03b:	mov    rdi,rbx
  40e03e:	add    rsi,0x4
  40e042:	call   406130 <test_print@@Base+0x1c60>
  40e047:	lea    eax,[r13-0x2]
  40e04b:	cmp    r13d,0x1
  40e04f:	je     40e0e8 <flatcc_json_printer_string_vector_field@@Base+0x1d8>
  40e055:	lea    r12,[r12+rax*4+0x8]
  40e05a:	jmp    40e08b <flatcc_json_printer_string_vector_field@@Base+0x17b>
  40e05c:	nop    DWORD PTR [rax+0x0]
  40e060:	mov    rax,QWORD PTR [rbx+0x20]
  40e064:	cmp    QWORD PTR [rbx+0x28],rax
  40e068:	jb     40e072 <flatcc_json_printer_string_vector_field@@Base+0x162>
  40e06a:	xor    esi,esi
  40e06c:	mov    rdi,rbx
  40e06f:	call   QWORD PTR [rbx+0x48]
  40e072:	mov    esi,DWORD PTR [rbp+0x0]
  40e075:	mov    rdi,rbx
  40e078:	add    rsi,rbp
  40e07b:	mov    edx,DWORD PTR [rsi]
  40e07d:	add    rsi,0x4
  40e081:	call   406130 <test_print@@Base+0x1c60>
  40e086:	cmp    rbp,r12
  40e089:	je     40e0e8 <flatcc_json_printer_string_vector_field@@Base+0x1d8>
  40e08b:	mov    rax,QWORD PTR [rbx+0x28]
  40e08f:	add    rbp,0x4
  40e093:	lea    rdx,[rax+0x1]
  40e097:	mov    QWORD PTR [rbx+0x28],rdx
  40e09b:	mov    BYTE PTR [rax],0x2c
  40e09e:	cmp    BYTE PTR [rbx+0x31],0x0
  40e0a2:	je     40e060 <flatcc_json_printer_string_vector_field@@Base+0x150>
  40e0a4:	mov    rax,QWORD PTR [rbx+0x28]
  40e0a8:	lea    rdx,[rax+0x1]
  40e0ac:	mov    QWORD PTR [rbx+0x28],rdx
  40e0b0:	mov    BYTE PTR [rax],0xa
  40e0b3:	movzx  r13d,BYTE PTR [rbx+0x31]
  40e0b8:	mov    rdi,QWORD PTR [rbx+0x28]
  40e0bc:	imul   r13d,DWORD PTR [rbx+0x38]
  40e0c1:	movsxd r13,r13d
  40e0c4:	lea    rax,[rdi+r13*1]
  40e0c8:	cmp    QWORD PTR [rbx+0x20],rax
  40e0cc:	jae    40e180 <flatcc_json_printer_string_vector_field@@Base+0x270>
  40e0d2:	mov    rsi,r13
  40e0d5:	mov    rdi,rbx
  40e0d8:	call   405350 <test_print@@Base+0xe80>
  40e0dd:	jmp    40e072 <flatcc_json_printer_string_vector_field@@Base+0x162>
  40e0df:	nop
  40e0e0:	ret    
  40e0e1:	nop    DWORD PTR [rax+0x0]
  40e0e8:	mov    rax,QWORD PTR [rbx+0x28]
  40e0ec:	cmp    BYTE PTR [rbx+0x31],0x0
  40e0f0:	lea    rdx,[rax+0x1]
  40e0f4:	jne    40e1e0 <flatcc_json_printer_string_vector_field@@Base+0x2d0>
  40e0fa:	mov    QWORD PTR [rbx+0x28],rdx
  40e0fe:	mov    BYTE PTR [rax],0x5d
  40e101:	add    rsp,0x8
  40e105:	pop    rbx
  40e106:	pop    rbp
  40e107:	pop    r12
  40e109:	pop    r13
  40e10b:	pop    r14
  40e10d:	pop    r15
  40e10f:	ret    
  40e110:	mov    rdi,rbx
  40e113:	call   4052c0 <test_print@@Base+0xdf0>
  40e118:	mov    rbp,QWORD PTR [rbx+0x28]
  40e11c:	jmp    40dfc9 <flatcc_json_printer_string_vector_field@@Base+0xb9>
  40e121:	nop    DWORD PTR [rax+0x0]
  40e128:	xor    esi,esi
  40e12a:	call   QWORD PTR [rdi+0x48]
  40e12d:	mov    rdx,QWORD PTR [rbx+0x28]
  40e131:	jmp    40df93 <flatcc_json_printer_string_vector_field@@Base+0x83>
  40e136:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e140:	lea    rdx,[rax+0x1]
  40e144:	mov    QWORD PTR [rbx+0x28],rdx
  40e148:	mov    BYTE PTR [rax],0xa
  40e14b:	movzx  ebp,BYTE PTR [rbx+0x31]
  40e14f:	mov    rdi,QWORD PTR [rbx+0x28]
  40e153:	imul   ebp,DWORD PTR [rbx+0x38]
  40e157:	movsxd rbp,ebp
  40e15a:	lea    rax,[rdi+rbp*1]
  40e15e:	cmp    QWORD PTR [rbx+0x20],rax
  40e162:	jae    40e25d <flatcc_json_printer_string_vector_field@@Base+0x34d>
  40e168:	mov    rsi,rbp
  40e16b:	mov    rdi,rbx
  40e16e:	call   405350 <test_print@@Base+0xe80>
  40e173:	jmp    40e02c <flatcc_json_printer_string_vector_field@@Base+0x11c>
  40e178:	nop    DWORD PTR [rax+rax*1+0x0]
  40e180:	mov    rdx,r13
  40e183:	mov    esi,0x20
  40e188:	call   403200 <memset@plt>
  40e18d:	add    QWORD PTR [rbx+0x28],r13
  40e191:	jmp    40e072 <flatcc_json_printer_string_vector_field@@Base+0x162>
  40e196:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e1a0:	lea    rax,[rdx+0x1]
  40e1a4:	mov    QWORD PTR [rdi+0x28],rax
  40e1a8:	mov    BYTE PTR [rdx],0xa
  40e1ab:	movzx  edx,BYTE PTR [rdi+0x31]
  40e1af:	imul   edx,DWORD PTR [rdi+0x38]
  40e1b3:	mov    rdi,QWORD PTR [rdi+0x28]
  40e1b7:	movsxd r14,edx
  40e1ba:	lea    rax,[rdi+r14*1]
  40e1be:	cmp    QWORD PTR [rbx+0x20],rax
  40e1c2:	jae    40e220 <flatcc_json_printer_string_vector_field@@Base+0x310>
  40e1c4:	mov    rsi,r14
  40e1c7:	mov    rdi,rbx
  40e1ca:	call   405350 <test_print@@Base+0xe80>
  40e1cf:	mov    rdx,QWORD PTR [rbx+0x28]
  40e1d3:	jmp    40df93 <flatcc_json_printer_string_vector_field@@Base+0x83>
  40e1d8:	nop    DWORD PTR [rax+rax*1+0x0]
  40e1e0:	mov    QWORD PTR [rbx+0x28],rdx
  40e1e4:	mov    BYTE PTR [rax],0xa
  40e1e7:	mov    eax,DWORD PTR [rbx+0x38]
  40e1ea:	mov    rdi,QWORD PTR [rbx+0x28]
  40e1ee:	lea    ebp,[rax-0x1]
  40e1f1:	movzx  eax,BYTE PTR [rbx+0x31]
  40e1f5:	mov    DWORD PTR [rbx+0x38],ebp
  40e1f8:	imul   eax,ebp
  40e1fb:	movsxd rbp,eax
  40e1fe:	lea    rax,[rdi+rbp*1]
  40e202:	cmp    QWORD PTR [rbx+0x20],rax
  40e206:	jae    40e240 <flatcc_json_printer_string_vector_field@@Base+0x330>
  40e208:	mov    rsi,rbp
  40e20b:	mov    rdi,rbx
  40e20e:	call   405350 <test_print@@Base+0xe80>
  40e213:	mov    rax,QWORD PTR [rbx+0x28]
  40e217:	lea    rdx,[rax+0x1]
  40e21b:	jmp    40e0fa <flatcc_json_printer_string_vector_field@@Base+0x1ea>
  40e220:	mov    rdx,r14
  40e223:	mov    esi,0x20
  40e228:	call   403200 <memset@plt>
  40e22d:	mov    rdx,QWORD PTR [rbx+0x28]
  40e231:	add    rdx,r14
  40e234:	mov    QWORD PTR [rbx+0x28],rdx
  40e238:	jmp    40df93 <flatcc_json_printer_string_vector_field@@Base+0x83>
  40e23d:	nop    DWORD PTR [rax]
  40e240:	mov    rdx,rbp
  40e243:	mov    esi,0x20
  40e248:	call   403200 <memset@plt>
  40e24d:	mov    rax,QWORD PTR [rbx+0x28]
  40e251:	add    rax,rbp
  40e254:	lea    rdx,[rax+0x1]
  40e258:	jmp    40e0fa <flatcc_json_printer_string_vector_field@@Base+0x1ea>
  40e25d:	mov    rdx,rbp
  40e260:	mov    esi,0x20
  40e265:	call   403200 <memset@plt>
  40e26a:	add    QWORD PTR [rbx+0x28],rbp
  40e26e:	jmp    40e02c <flatcc_json_printer_string_vector_field@@Base+0x11c>
  40e273:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40e27e:	xchg   ax,ax

000000000040e280 <flatcc_json_printer_table_vector_field@@Base>:
  40e280:	endbr64 
  40e284:	push   r15
  40e286:	push   r14
  40e288:	push   r13
  40e28a:	push   r12
  40e28c:	push   rbp
  40e28d:	push   rbx
  40e28e:	sub    rsp,0x48
  40e292:	mov    rax,QWORD PTR fs:0x28
  40e29b:	mov    QWORD PTR [rsp+0x38],rax
  40e2a0:	xor    eax,eax
  40e2a2:	lea    eax,[rdx+rdx*1+0x4]
  40e2a6:	cmp    eax,DWORD PTR [rsi+0x10]
  40e2a9:	jge    40e3a9 <flatcc_json_printer_table_vector_field@@Base+0x129>
  40e2af:	mov    rdx,QWORD PTR [rsi+0x8]
  40e2b3:	mov    r14,rsi
  40e2b6:	movzx  ebp,WORD PTR [rdx+rax*1]
  40e2ba:	test   bp,bp
  40e2bd:	je     40e3a9 <flatcc_json_printer_table_vector_field@@Base+0x129>
  40e2c3:	add    rbp,QWORD PTR [rsi]
  40e2c6:	je     40e3a9 <flatcc_json_printer_table_vector_field@@Base+0x129>
  40e2cc:	mov    edx,DWORD PTR [rsi+0x18]
  40e2cf:	mov    rbx,rdi
  40e2d2:	lea    eax,[rdx+0x1]
  40e2d5:	mov    DWORD PTR [rsi+0x18],eax
  40e2d8:	mov    r12,r9
  40e2db:	mov    rax,QWORD PTR [rdi+0x28]
  40e2df:	test   edx,edx
  40e2e1:	je     40e2f2 <flatcc_json_printer_table_vector_field@@Base+0x72>
  40e2e3:	lea    rdx,[rax+0x1]
  40e2e7:	mov    QWORD PTR [rdi+0x28],rdx
  40e2eb:	mov    BYTE PTR [rax],0x2c
  40e2ee:	mov    rax,QWORD PTR [rdi+0x28]
  40e2f2:	mov    edx,DWORD PTR [rbp+0x0]
  40e2f5:	movsxd r15,r8d
  40e2f8:	add    rbp,rdx
  40e2fb:	cmp    BYTE PTR [rbx+0x31],0x0
  40e2ff:	mov    r13d,DWORD PTR [rbp+0x0]
  40e303:	jne    40e408 <flatcc_json_printer_table_vector_field@@Base+0x188>
  40e309:	cmp    QWORD PTR [rbx+0x20],rax
  40e30d:	jbe    40e3e8 <flatcc_json_printer_table_vector_field@@Base+0x168>
  40e313:	mov    BYTE PTR [rax],0x22
  40e316:	xor    edi,edi
  40e318:	mov    rdx,r15
  40e31b:	cmp    BYTE PTR [rbx+0x32],0x0
  40e31f:	sete   dil
  40e323:	add    rdi,QWORD PTR [rbx+0x28]
  40e327:	lea    rax,[rdi+r15*1]
  40e32b:	mov    QWORD PTR [rbx+0x28],rdi
  40e32f:	mov    rsi,rcx
  40e332:	cmp    QWORD PTR [rbx+0x20],rax
  40e336:	jbe    40e3d0 <flatcc_json_printer_table_vector_field@@Base+0x150>
  40e33c:	call   403240 <memcpy@plt>
  40e341:	add    r15,QWORD PTR [rbx+0x28]
  40e345:	mov    QWORD PTR [rbx+0x28],r15
  40e349:	mov    BYTE PTR [r15],0x22
  40e34d:	xor    eax,eax
  40e34f:	cmp    BYTE PTR [rbx+0x32],0x0
  40e353:	sete   al
  40e356:	add    rax,QWORD PTR [rbx+0x28]
  40e35a:	lea    rdx,[rax+0x1]
  40e35e:	mov    QWORD PTR [rbx+0x28],rdx
  40e362:	mov    BYTE PTR [rax],0x3a
  40e365:	mov    rax,QWORD PTR [rbx+0x28]
  40e369:	mov    BYTE PTR [rax],0x20
  40e36c:	xor    eax,eax
  40e36e:	cmp    BYTE PTR [rbx+0x31],0x0
  40e372:	setne  al
  40e375:	add    rax,QWORD PTR [rbx+0x28]
  40e379:	lea    rdx,[rax+0x1]
  40e37d:	inc    DWORD PTR [rbx+0x38]
  40e380:	mov    QWORD PTR [rbx+0x28],rdx
  40e384:	mov    BYTE PTR [rax],0x5b
  40e387:	test   r13d,r13d
  40e38a:	jne    40e498 <flatcc_json_printer_table_vector_field@@Base+0x218>
  40e390:	mov    rax,QWORD PTR [rbx+0x28]
  40e394:	lea    rdx,[rax+0x1]
  40e398:	cmp    BYTE PTR [rbx+0x31],0x0
  40e39c:	jne    40e450 <flatcc_json_printer_table_vector_field@@Base+0x1d0>
  40e3a2:	mov    QWORD PTR [rbx+0x28],rdx
  40e3a6:	mov    BYTE PTR [rax],0x5d
  40e3a9:	mov    rax,QWORD PTR [rsp+0x38]
  40e3ae:	xor    rax,QWORD PTR fs:0x28
  40e3b7:	jne    40e6e8 <flatcc_json_printer_table_vector_field@@Base+0x468>
  40e3bd:	add    rsp,0x48
  40e3c1:	pop    rbx
  40e3c2:	pop    rbp
  40e3c3:	pop    r12
  40e3c5:	pop    r13
  40e3c7:	pop    r14
  40e3c9:	pop    r15
  40e3cb:	ret    
  40e3cc:	nop    DWORD PTR [rax+0x0]
  40e3d0:	mov    rdi,rbx
  40e3d3:	call   4052c0 <test_print@@Base+0xdf0>
  40e3d8:	mov    r15,QWORD PTR [rbx+0x28]
  40e3dc:	jmp    40e349 <flatcc_json_printer_table_vector_field@@Base+0xc9>
  40e3e1:	nop    DWORD PTR [rax+0x0]
  40e3e8:	xor    esi,esi
  40e3ea:	mov    rdi,rbx
  40e3ed:	mov    QWORD PTR [rsp],rcx
  40e3f1:	call   QWORD PTR [rbx+0x48]
  40e3f4:	mov    rax,QWORD PTR [rbx+0x28]
  40e3f8:	mov    rcx,QWORD PTR [rsp]
  40e3fc:	jmp    40e313 <flatcc_json_printer_table_vector_field@@Base+0x93>
  40e401:	nop    DWORD PTR [rax+0x0]
  40e408:	lea    rdx,[rax+0x1]
  40e40c:	mov    QWORD PTR [rbx+0x28],rdx
  40e410:	mov    BYTE PTR [rax],0xa
  40e413:	movzx  eax,BYTE PTR [rbx+0x31]
  40e417:	mov    rdi,QWORD PTR [rbx+0x28]
  40e41b:	imul   eax,DWORD PTR [rbx+0x38]
  40e41f:	movsxd r8,eax
  40e422:	lea    rax,[rdi+r8*1]
  40e426:	cmp    QWORD PTR [rbx+0x20],rax
  40e42a:	jae    40e618 <flatcc_json_printer_table_vector_field@@Base+0x398>
  40e430:	mov    rsi,r8
  40e433:	mov    rdi,rbx
  40e436:	mov    QWORD PTR [rsp],rcx
  40e43a:	call   405350 <test_print@@Base+0xe80>
  40e43f:	mov    rax,QWORD PTR [rbx+0x28]
  40e443:	mov    rcx,QWORD PTR [rsp]
  40e447:	jmp    40e313 <flatcc_json_printer_table_vector_field@@Base+0x93>
  40e44c:	nop    DWORD PTR [rax+0x0]
  40e450:	mov    QWORD PTR [rbx+0x28],rdx
  40e454:	mov    BYTE PTR [rax],0xa
  40e457:	mov    eax,DWORD PTR [rbx+0x38]
  40e45a:	mov    rdi,QWORD PTR [rbx+0x28]
  40e45e:	lea    ebp,[rax-0x1]
  40e461:	movzx  eax,BYTE PTR [rbx+0x31]
  40e465:	mov    DWORD PTR [rbx+0x38],ebp
  40e468:	imul   eax,ebp
  40e46b:	movsxd rbp,eax
  40e46e:	lea    rax,[rdi+rbp*1]
  40e472:	cmp    QWORD PTR [rbx+0x20],rax
  40e476:	jae    40e650 <flatcc_json_printer_table_vector_field@@Base+0x3d0>
  40e47c:	mov    rsi,rbp
  40e47f:	mov    rdi,rbx
  40e482:	call   405350 <test_print@@Base+0xe80>
  40e487:	mov    rax,QWORD PTR [rbx+0x28]
  40e48b:	lea    rdx,[rax+0x1]
  40e48f:	jmp    40e3a2 <flatcc_json_printer_table_vector_field@@Base+0x122>
  40e494:	nop    DWORD PTR [rax+0x0]
  40e498:	mov    ecx,DWORD PTR [r14+0x14]
  40e49c:	lea    r15,[rbp+0x4]
  40e4a0:	mov    rax,QWORD PTR [rbx+0x28]
  40e4a4:	dec    ecx
  40e4a6:	je     40e670 <flatcc_json_printer_table_vector_field@@Base+0x3f0>
  40e4ac:	mov    edx,DWORD PTR [rbp+0x4]
  40e4af:	lea    rsi,[rax+0x1]
  40e4b3:	inc    DWORD PTR [rbx+0x38]
  40e4b6:	mov    QWORD PTR [rbx+0x28],rsi
  40e4ba:	mov    BYTE PTR [rax],0x7b
  40e4bd:	mov    DWORD PTR [rsp+0x28],0x0
  40e4c5:	mov    DWORD PTR [rsp+0x24],ecx
  40e4c9:	add    rdx,r15
  40e4cc:	mov    QWORD PTR [rsp+0x10],rdx
  40e4d1:	movsxd rax,DWORD PTR [rdx]
  40e4d4:	lea    rsi,[rsp+0x10]
  40e4d9:	sub    rdx,rax
  40e4dc:	movzx  eax,WORD PTR [rdx]
  40e4df:	mov    rdi,rbx
  40e4e2:	mov    DWORD PTR [rsp+0x20],eax
  40e4e6:	mov    QWORD PTR [rsp+0x18],rdx
  40e4eb:	call   r12
  40e4ee:	cmp    BYTE PTR [rbx+0x31],0x0
  40e4f2:	mov    rax,QWORD PTR [rbx+0x28]
  40e4f6:	jne    40e687 <flatcc_json_printer_table_vector_field@@Base+0x407>
  40e4fc:	lea    rdx,[rax+0x1]
  40e500:	mov    QWORD PTR [rbx+0x28],rdx
  40e504:	mov    BYTE PTR [rax],0x7d
  40e507:	mov    rax,QWORD PTR [rbx+0x28]
  40e50b:	lea    edx,[r13-0x1]
  40e50f:	lea    rbp,[rbp+rdx*4+0x4]
  40e514:	lea    r13,[rsp+0x10]
  40e519:	jmp    40e57d <flatcc_json_printer_table_vector_field@@Base+0x2fd>
  40e51b:	nop    DWORD PTR [rax+rax*1+0x0]
  40e520:	mov    rcx,QWORD PTR [rbx+0x28]
  40e524:	mov    eax,DWORD PTR [r15]
  40e527:	lea    rsi,[rcx+0x1]
  40e52b:	inc    DWORD PTR [rbx+0x38]
  40e52e:	mov    QWORD PTR [rbx+0x28],rsi
  40e532:	mov    BYTE PTR [rcx],0x7b
  40e535:	mov    DWORD PTR [rsp+0x28],0x0
  40e53d:	mov    DWORD PTR [rsp+0x24],edx
  40e541:	add    rax,r15
  40e544:	mov    QWORD PTR [rsp+0x10],rax
  40e549:	movsxd rdx,DWORD PTR [rax]
  40e54c:	mov    rsi,r13
  40e54f:	sub    rax,rdx
  40e552:	mov    QWORD PTR [rsp+0x18],rax
  40e557:	movzx  eax,WORD PTR [rax]
  40e55a:	mov    rdi,rbx
  40e55d:	mov    DWORD PTR [rsp+0x20],eax
  40e561:	call   r12
  40e564:	cmp    BYTE PTR [rbx+0x31],0x0
  40e568:	jne    40e5b0 <flatcc_json_printer_table_vector_field@@Base+0x330>
  40e56a:	mov    rsi,QWORD PTR [rbx+0x28]
  40e56e:	lea    rax,[rsi+0x1]
  40e572:	mov    QWORD PTR [rbx+0x28],rax
  40e576:	mov    BYTE PTR [rsi],0x7d
  40e579:	mov    rax,QWORD PTR [rbx+0x28]
  40e57d:	lea    rdx,[rax+0x1]
  40e581:	cmp    r15,rbp
  40e584:	je     40e398 <flatcc_json_printer_table_vector_field@@Base+0x118>
  40e58a:	mov    QWORD PTR [rbx+0x28],rdx
  40e58e:	mov    BYTE PTR [rax],0x2c
  40e591:	add    r15,0x4
  40e595:	mov    edx,DWORD PTR [r14+0x14]
  40e599:	dec    edx
  40e59b:	jne    40e520 <flatcc_json_printer_table_vector_field@@Base+0x2a0>
  40e59d:	mov    eax,DWORD PTR [rbx+0x3c]
  40e5a0:	test   eax,eax
  40e5a2:	jne    40e579 <flatcc_json_printer_table_vector_field@@Base+0x2f9>
  40e5a4:	mov    DWORD PTR [rbx+0x3c],0x2
  40e5ab:	jmp    40e579 <flatcc_json_printer_table_vector_field@@Base+0x2f9>
  40e5ad:	nop    DWORD PTR [rax]
  40e5b0:	mov    rax,QWORD PTR [rbx+0x28]
  40e5b4:	lea    rdx,[rax+0x1]
  40e5b8:	mov    QWORD PTR [rbx+0x28],rdx
  40e5bc:	mov    BYTE PTR [rax],0xa
  40e5bf:	mov    eax,DWORD PTR [rbx+0x38]
  40e5c2:	movzx  esi,BYTE PTR [rbx+0x31]
  40e5c6:	lea    ecx,[rax-0x1]
  40e5c9:	imul   esi,ecx
  40e5cc:	mov    rdi,QWORD PTR [rbx+0x28]
  40e5d0:	mov    DWORD PTR [rbx+0x38],ecx
  40e5d3:	movsxd rcx,esi
  40e5d6:	lea    rax,[rdi+rcx*1]
  40e5da:	cmp    QWORD PTR [rbx+0x20],rax
  40e5de:	jae    40e5f0 <flatcc_json_printer_table_vector_field@@Base+0x370>
  40e5e0:	mov    rsi,rcx
  40e5e3:	mov    rdi,rbx
  40e5e6:	call   405350 <test_print@@Base+0xe80>
  40e5eb:	jmp    40e56a <flatcc_json_printer_table_vector_field@@Base+0x2ea>
  40e5f0:	mov    rdx,rcx
  40e5f3:	mov    esi,0x20
  40e5f8:	mov    QWORD PTR [rsp],rcx
  40e5fc:	call   403200 <memset@plt>
  40e601:	mov    rcx,QWORD PTR [rsp]
  40e605:	add    rcx,QWORD PTR [rbx+0x28]
  40e609:	mov    rsi,rcx
  40e60c:	jmp    40e56e <flatcc_json_printer_table_vector_field@@Base+0x2ee>
  40e611:	nop    DWORD PTR [rax+0x0]
  40e618:	mov    rdx,r8
  40e61b:	mov    esi,0x20
  40e620:	mov    QWORD PTR [rsp+0x8],rcx
  40e625:	mov    QWORD PTR [rsp],r8
  40e629:	call   403200 <memset@plt>
  40e62e:	mov    rax,QWORD PTR [rbx+0x28]
  40e632:	mov    r8,QWORD PTR [rsp]
  40e636:	mov    rcx,QWORD PTR [rsp+0x8]
  40e63b:	add    rax,r8
  40e63e:	mov    QWORD PTR [rbx+0x28],rax
  40e642:	jmp    40e313 <flatcc_json_printer_table_vector_field@@Base+0x93>
  40e647:	nop    WORD PTR [rax+rax*1+0x0]
  40e650:	mov    rdx,rbp
  40e653:	mov    esi,0x20
  40e658:	call   403200 <memset@plt>
  40e65d:	mov    rax,QWORD PTR [rbx+0x28]
  40e661:	add    rax,rbp
  40e664:	lea    rdx,[rax+0x1]
  40e668:	jmp    40e3a2 <flatcc_json_printer_table_vector_field@@Base+0x122>
  40e66d:	nop    DWORD PTR [rax]
  40e670:	mov    edx,DWORD PTR [rbx+0x3c]
  40e673:	test   edx,edx
  40e675:	jne    40e50b <flatcc_json_printer_table_vector_field@@Base+0x28b>
  40e67b:	mov    DWORD PTR [rbx+0x3c],0x2
  40e682:	jmp    40e50b <flatcc_json_printer_table_vector_field@@Base+0x28b>
  40e687:	lea    rdx,[rax+0x1]
  40e68b:	mov    QWORD PTR [rbx+0x28],rdx
  40e68f:	mov    BYTE PTR [rax],0xa
  40e692:	mov    eax,DWORD PTR [rbx+0x38]
  40e695:	mov    rdi,QWORD PTR [rbx+0x28]
  40e699:	lea    ecx,[rax-0x1]
  40e69c:	movzx  eax,BYTE PTR [rbx+0x31]
  40e6a0:	mov    DWORD PTR [rbx+0x38],ecx
  40e6a3:	imul   eax,ecx
  40e6a6:	movsxd rcx,eax
  40e6a9:	lea    rax,[rdi+rcx*1]
  40e6ad:	cmp    QWORD PTR [rbx+0x20],rax
  40e6b1:	jae    40e6c7 <flatcc_json_printer_table_vector_field@@Base+0x447>
  40e6b3:	mov    rsi,rcx
  40e6b6:	mov    rdi,rbx
  40e6b9:	call   405350 <test_print@@Base+0xe80>
  40e6be:	mov    rax,QWORD PTR [rbx+0x28]
  40e6c2:	jmp    40e4fc <flatcc_json_printer_table_vector_field@@Base+0x27c>
  40e6c7:	mov    rdx,rcx
  40e6ca:	mov    esi,0x20
  40e6cf:	mov    QWORD PTR [rsp],rcx
  40e6d3:	call   403200 <memset@plt>
  40e6d8:	mov    rcx,QWORD PTR [rsp]
  40e6dc:	mov    rax,QWORD PTR [rbx+0x28]
  40e6e0:	add    rax,rcx
  40e6e3:	jmp    40e4fc <flatcc_json_printer_table_vector_field@@Base+0x27c>
  40e6e8:	call   4031d0 <__stack_chk_fail@plt>
  40e6ed:	nop    DWORD PTR [rax]

000000000040e6f0 <flatcc_json_printer_union_vector_field@@Base>:
  40e6f0:	endbr64 
  40e6f4:	push   r15
  40e6f6:	push   r14
  40e6f8:	push   r13
  40e6fa:	mov    r13d,edx
  40e6fd:	push   r12
  40e6ff:	push   rbp
  40e700:	mov    rbp,rsi
  40e703:	push   rbx
  40e704:	mov    rbx,rdi
  40e707:	sub    rsp,0xb8
  40e70e:	mov    QWORD PTR [rsp],rcx
  40e712:	mov    ecx,DWORD PTR [rsi+0x10]
  40e715:	mov    r14,QWORD PTR [rsp+0xf0]
  40e71d:	mov    rax,QWORD PTR fs:0x28
  40e726:	mov    QWORD PTR [rsp+0xa8],rax
  40e72e:	xor    eax,eax
  40e730:	lea    eax,[rdx+rdx*1+0x2]
  40e734:	cmp    eax,ecx
  40e736:	jge    40e950 <flatcc_json_printer_union_vector_field@@Base+0x260>
  40e73c:	mov    rsi,QWORD PTR [rsi+0x8]
  40e740:	mov    edx,eax
  40e742:	movzx  edx,WORD PTR [rsi+rdx*1]
  40e746:	test   dx,dx
  40e749:	je     40e950 <flatcc_json_printer_union_vector_field@@Base+0x260>
  40e74f:	add    rdx,QWORD PTR [rbp+0x0]
  40e753:	mov    QWORD PTR [rsp+0x8],rdx
  40e758:	add    eax,0x2
  40e75b:	mov    edx,DWORD PTR [rbp+0x14]
  40e75e:	cmp    eax,ecx
  40e760:	jge    40e928 <flatcc_json_printer_union_vector_field@@Base+0x238>
  40e766:	mov    rcx,QWORD PTR [rbp+0x8]
  40e76a:	movzx  r12d,WORD PTR [rcx+rax*1]
  40e76f:	test   r12w,r12w
  40e773:	je     40e928 <flatcc_json_printer_union_vector_field@@Base+0x238>
  40e779:	add    r12,QWORD PTR [rbp+0x0]
  40e77d:	mov    DWORD PTR [rsp+0x28],edx
  40e781:	cmp    r8d,0x64
  40e785:	jg     40ea5a <flatcc_json_printer_union_vector_field@@Base+0x36a>
  40e78b:	movsxd r15,r8d
  40e78e:	lea    r11,[rsp+0x30]
  40e793:	mov    rsi,QWORD PTR [rsp]
  40e797:	mov    rdi,r11
  40e79a:	mov    ecx,0x69
  40e79f:	mov    rdx,r15
  40e7a2:	mov    QWORD PTR [rsp+0x18],r9
  40e7a7:	mov    DWORD PTR [rsp+0x14],r8d
  40e7ac:	call   403220 <__memcpy_chk@plt>
  40e7b1:	mov    r11,rax
  40e7b4:	lea    rax,[rax+r15*1]
  40e7b8:	mov    DWORD PTR [rax],0x7079745f
  40e7be:	mov    BYTE PTR [rax+0x4],0x65
  40e7c2:	test   r12,r12
  40e7c5:	je     40e8f9 <flatcc_json_printer_union_vector_field@@Base+0x209>
  40e7cb:	cmp    QWORD PTR [rsp+0x8],0x0
  40e7d1:	je     40e8f9 <flatcc_json_printer_union_vector_field@@Base+0x209>
  40e7d7:	mov    r8d,DWORD PTR [rsp+0x14]
  40e7dc:	mov    r9,QWORD PTR [rsp+0x18]
  40e7e1:	lea    edx,[r13-0x1]
  40e7e5:	add    r8d,0x5
  40e7e9:	mov    rcx,r11
  40e7ec:	mov    rsi,rbp
  40e7ef:	mov    rdi,rbx
  40e7f2:	call   40c730 <flatcc_json_printer_utype_enum_vector_field@@Base>
  40e7f7:	mov    eax,DWORD PTR [rbp+0x18]
  40e7fa:	lea    edx,[rax+0x1]
  40e7fd:	mov    DWORD PTR [rbp+0x18],edx
  40e800:	test   eax,eax
  40e802:	je     40e813 <flatcc_json_printer_union_vector_field@@Base+0x123>
  40e804:	mov    rax,QWORD PTR [rbx+0x28]
  40e808:	lea    rdx,[rax+0x1]
  40e80c:	mov    QWORD PTR [rbx+0x28],rdx
  40e810:	mov    BYTE PTR [rax],0x2c
  40e813:	mov    eax,DWORD PTR [r12]
  40e817:	mov    rsi,QWORD PTR [rsp]
  40e81b:	add    r12,rax
  40e81e:	mov    rax,QWORD PTR [rsp+0x8]
  40e823:	mov    rdx,r15
  40e826:	mov    rdi,rbx
  40e829:	mov    ebp,DWORD PTR [rax]
  40e82b:	mov    r13d,DWORD PTR [r12]
  40e82f:	call   406380 <test_print@@Base+0x1eb0>
  40e834:	mov    rax,QWORD PTR [rbx+0x28]
  40e838:	inc    DWORD PTR [rbx+0x38]
  40e83b:	lea    rdx,[rax+0x1]
  40e83f:	mov    QWORD PTR [rbx+0x28],rdx
  40e843:	mov    BYTE PTR [rax],0x5b
  40e846:	test   r13d,r13d
  40e849:	je     40e8e0 <flatcc_json_printer_union_vector_field@@Base+0x1f0>
  40e84f:	mov    r15d,ebp
  40e852:	add    r15,QWORD PTR [rsp+0x8]
  40e857:	movzx  eax,BYTE PTR [r15+0x4]
  40e85c:	lea    rbp,[r12+0x4]
  40e861:	test   al,al
  40e863:	je     40e9f0 <flatcc_json_printer_union_vector_field@@Base+0x300>
  40e869:	lea    rsi,[rsp+0x20]
  40e86e:	mov    rdi,rbx
  40e871:	mov    BYTE PTR [rsp+0x2c],al
  40e875:	mov    QWORD PTR [rsp+0x20],rbp
  40e87a:	call   r14
  40e87d:	lea    eax,[r13-0x1]
  40e881:	add    r15,0x4
  40e885:	lea    r12,[r12+rax*4+0x4]
  40e88a:	lea    r13,[rsp+0x20]
  40e88f:	nop
  40e890:	mov    rax,QWORD PTR [rbx+0x28]
  40e894:	lea    rcx,[rax+0x1]
  40e898:	cmp    rbp,r12
  40e89b:	je     40e8e8 <flatcc_json_printer_union_vector_field@@Base+0x1f8>
  40e89d:	inc    r15
  40e8a0:	movzx  edx,BYTE PTR [r15]
  40e8a4:	add    rbp,0x4
  40e8a8:	mov    QWORD PTR [rbx+0x28],rcx
  40e8ac:	mov    BYTE PTR [rax],0x2c
  40e8af:	test   dl,dl
  40e8b1:	je     40e960 <flatcc_json_printer_union_vector_field@@Base+0x270>
  40e8b7:	mov    rsi,r13
  40e8ba:	mov    rdi,rbx
  40e8bd:	mov    BYTE PTR [rsp+0x2c],dl
  40e8c1:	mov    QWORD PTR [rsp+0x20],rbp
  40e8c6:	call   r14
  40e8c9:	mov    rax,QWORD PTR [rbx+0x28]
  40e8cd:	lea    rcx,[rax+0x1]
  40e8d1:	cmp    rbp,r12
  40e8d4:	jne    40e89d <flatcc_json_printer_union_vector_field@@Base+0x1ad>
  40e8d6:	jmp    40e8e8 <flatcc_json_printer_union_vector_field@@Base+0x1f8>
  40e8d8:	nop    DWORD PTR [rax+rax*1+0x0]
  40e8e0:	mov    rax,QWORD PTR [rbx+0x28]
  40e8e4:	lea    rcx,[rax+0x1]
  40e8e8:	cmp    BYTE PTR [rbx+0x31],0x0
  40e8ec:	jne    40e9a8 <flatcc_json_printer_union_vector_field@@Base+0x2b8>
  40e8f2:	mov    QWORD PTR [rbx+0x28],rcx
  40e8f6:	mov    BYTE PTR [rax],0x5d
  40e8f9:	mov    rax,QWORD PTR [rsp+0xa8]
  40e901:	xor    rax,QWORD PTR fs:0x28
  40e90a:	jne    40ea55 <flatcc_json_printer_union_vector_field@@Base+0x365>
  40e910:	add    rsp,0xb8
  40e917:	pop    rbx
  40e918:	pop    rbp
  40e919:	pop    r12
  40e91b:	pop    r13
  40e91d:	pop    r14
  40e91f:	pop    r15
  40e921:	ret    
  40e922:	nop    WORD PTR [rax+rax*1+0x0]
  40e928:	mov    DWORD PTR [rsp+0x28],edx
  40e92c:	cmp    r8d,0x64
  40e930:	jg     40ea5a <flatcc_json_printer_union_vector_field@@Base+0x36a>
  40e936:	mov    rsi,QWORD PTR [rsp]
  40e93a:	movsxd rdx,r8d
  40e93d:	lea    rdi,[rsp+0x30]
  40e942:	mov    ecx,0x69
  40e947:	call   403220 <__memcpy_chk@plt>
  40e94c:	jmp    40e8f9 <flatcc_json_printer_union_vector_field@@Base+0x209>
  40e94e:	xchg   ax,ax
  40e950:	mov    QWORD PTR [rsp+0x8],0x0
  40e959:	jmp    40e758 <flatcc_json_printer_union_vector_field@@Base+0x68>
  40e95e:	xchg   ax,ax
  40e960:	mov    rax,QWORD PTR [rbx+0x28]
  40e964:	lea    rdx,[rax+0x1]
  40e968:	mov    QWORD PTR [rbx+0x28],rdx
  40e96c:	mov    BYTE PTR [rax],0x6e
  40e96f:	mov    rax,QWORD PTR [rbx+0x28]
  40e973:	lea    rdx,[rax+0x1]
  40e977:	mov    QWORD PTR [rbx+0x28],rdx
  40e97b:	mov    BYTE PTR [rax],0x75
  40e97e:	mov    rax,QWORD PTR [rbx+0x28]
  40e982:	lea    rdx,[rax+0x1]
  40e986:	mov    QWORD PTR [rbx+0x28],rdx
  40e98a:	mov    BYTE PTR [rax],0x6c
  40e98d:	mov    rax,QWORD PTR [rbx+0x28]
  40e991:	lea    rdx,[rax+0x1]
  40e995:	mov    QWORD PTR [rbx+0x28],rdx
  40e999:	mov    BYTE PTR [rax],0x6c
  40e99c:	jmp    40e890 <flatcc_json_printer_union_vector_field@@Base+0x1a0>
  40e9a1:	nop    DWORD PTR [rax+0x0]
  40e9a8:	mov    QWORD PTR [rbx+0x28],rcx
  40e9ac:	mov    BYTE PTR [rax],0xa
  40e9af:	mov    eax,DWORD PTR [rbx+0x38]
  40e9b2:	mov    rdi,QWORD PTR [rbx+0x28]
  40e9b6:	lea    ebp,[rax-0x1]
  40e9b9:	movzx  eax,BYTE PTR [rbx+0x31]
  40e9bd:	mov    DWORD PTR [rbx+0x38],ebp
  40e9c0:	imul   eax,ebp
  40e9c3:	movsxd rbp,eax
  40e9c6:	lea    rax,[rdi+rbp*1]
  40e9ca:	cmp    QWORD PTR [rbx+0x20],rax
  40e9ce:	jae    40ea38 <flatcc_json_printer_union_vector_field@@Base+0x348>
  40e9d0:	mov    rsi,rbp
  40e9d3:	mov    rdi,rbx
  40e9d6:	call   405350 <test_print@@Base+0xe80>
  40e9db:	mov    rax,QWORD PTR [rbx+0x28]
  40e9df:	lea    rcx,[rax+0x1]
  40e9e3:	jmp    40e8f2 <flatcc_json_printer_union_vector_field@@Base+0x202>
  40e9e8:	nop    DWORD PTR [rax+rax*1+0x0]
  40e9f0:	mov    rax,QWORD PTR [rbx+0x28]
  40e9f4:	lea    rdx,[rax+0x1]
  40e9f8:	mov    QWORD PTR [rbx+0x28],rdx
  40e9fc:	mov    BYTE PTR [rax],0x6e
  40e9ff:	mov    rax,QWORD PTR [rbx+0x28]
  40ea03:	lea    rdx,[rax+0x1]
  40ea07:	mov    QWORD PTR [rbx+0x28],rdx
  40ea0b:	mov    BYTE PTR [rax],0x75
  40ea0e:	mov    rax,QWORD PTR [rbx+0x28]
  40ea12:	lea    rdx,[rax+0x1]
  40ea16:	mov    QWORD PTR [rbx+0x28],rdx
  40ea1a:	mov    BYTE PTR [rax],0x6c
  40ea1d:	mov    rax,QWORD PTR [rbx+0x28]
  40ea21:	lea    rdx,[rax+0x1]
  40ea25:	mov    QWORD PTR [rbx+0x28],rdx
  40ea29:	mov    BYTE PTR [rax],0x6c
  40ea2c:	jmp    40e87d <flatcc_json_printer_union_vector_field@@Base+0x18d>
  40ea31:	nop    DWORD PTR [rax+0x0]
  40ea38:	mov    rdx,rbp
  40ea3b:	mov    esi,0x20
  40ea40:	call   403200 <memset@plt>
  40ea45:	mov    rax,QWORD PTR [rbx+0x28]
  40ea49:	add    rax,rbp
  40ea4c:	lea    rcx,[rax+0x1]
  40ea50:	jmp    40e8f2 <flatcc_json_printer_union_vector_field@@Base+0x202>
  40ea55:	call   4031d0 <__stack_chk_fail@plt>
  40ea5a:	cmp    DWORD PTR [rbx+0x3c],0x0
  40ea5e:	jne    40ea67 <flatcc_json_printer_union_vector_field@@Base+0x377>
  40ea60:	mov    DWORD PTR [rbx+0x3c],0x1
  40ea67:	lea    rcx,[rip+0x1ff2]        # 410a60 <_IO_stdin_used@@Base+0xa60>
  40ea6e:	mov    edx,0x34b
  40ea73:	lea    rsi,[rip+0x1d9e]        # 410818 <_IO_stdin_used@@Base+0x818>
  40ea7a:	lea    rdi,[rip+0x1f60]        # 4109e1 <_IO_stdin_used@@Base+0x9e1>
  40ea81:	call   4031f0 <__assert_fail@plt>
  40ea86:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000040ea90 <flatcc_json_printer_table_field@@Base>:
  40ea90:	endbr64 
  40ea94:	push   r15
  40ea96:	push   r14
  40ea98:	push   r13
  40ea9a:	push   r12
  40ea9c:	push   rbp
  40ea9d:	push   rbx
  40ea9e:	sub    rsp,0x48
  40eaa2:	mov    rax,QWORD PTR fs:0x28
  40eaab:	mov    QWORD PTR [rsp+0x38],rax
  40eab0:	xor    eax,eax
  40eab2:	lea    eax,[rdx+rdx*1+0x4]
  40eab6:	cmp    eax,DWORD PTR [rsi+0x10]
  40eab9:	jge    40ebef <flatcc_json_printer_table_field@@Base+0x15f>
  40eabf:	mov    rdx,QWORD PTR [rsi+0x8]
  40eac3:	mov    r13,rsi
  40eac6:	movzx  eax,WORD PTR [rdx+rax*1]
  40eaca:	test   ax,ax
  40eacd:	je     40ebef <flatcc_json_printer_table_field@@Base+0x15f>
  40ead3:	add    rax,QWORD PTR [rsi]
  40ead6:	mov    rbp,rax
  40ead9:	je     40ebef <flatcc_json_printer_table_field@@Base+0x15f>
  40eadf:	mov    eax,DWORD PTR [rsi+0x18]
  40eae2:	mov    rbx,rdi
  40eae5:	lea    edx,[rax+0x1]
  40eae8:	mov    DWORD PTR [rsi+0x18],edx
  40eaeb:	mov    r12,r9
  40eaee:	mov    rsi,QWORD PTR [rdi+0x28]
  40eaf2:	test   eax,eax
  40eaf4:	je     40eb05 <flatcc_json_printer_table_field@@Base+0x75>
  40eaf6:	lea    rax,[rsi+0x1]
  40eafa:	mov    QWORD PTR [rdi+0x28],rax
  40eafe:	mov    BYTE PTR [rsi],0x2c
  40eb01:	mov    rsi,QWORD PTR [rdi+0x28]
  40eb05:	cmp    BYTE PTR [rbx+0x31],0x0
  40eb09:	movsxd r14,r8d
  40eb0c:	jne    40ec60 <flatcc_json_printer_table_field@@Base+0x1d0>
  40eb12:	cmp    QWORD PTR [rbx+0x20],rsi
  40eb16:	jbe    40ec30 <flatcc_json_printer_table_field@@Base+0x1a0>
  40eb1c:	mov    BYTE PTR [rsi],0x22
  40eb1f:	xor    edi,edi
  40eb21:	mov    rdx,r14
  40eb24:	cmp    BYTE PTR [rbx+0x32],0x0
  40eb28:	sete   dil
  40eb2c:	add    rdi,QWORD PTR [rbx+0x28]
  40eb30:	lea    rax,[rdi+r14*1]
  40eb34:	mov    QWORD PTR [rbx+0x28],rdi
  40eb38:	mov    rsi,rcx
  40eb3b:	cmp    QWORD PTR [rbx+0x20],rax
  40eb3f:	jbe    40ec18 <flatcc_json_printer_table_field@@Base+0x188>
  40eb45:	call   403240 <memcpy@plt>
  40eb4a:	add    r14,QWORD PTR [rbx+0x28]
  40eb4e:	mov    QWORD PTR [rbx+0x28],r14
  40eb52:	mov    BYTE PTR [r14],0x22
  40eb56:	xor    eax,eax
  40eb58:	cmp    BYTE PTR [rbx+0x32],0x0
  40eb5c:	sete   al
  40eb5f:	add    rax,QWORD PTR [rbx+0x28]
  40eb63:	lea    rdx,[rax+0x1]
  40eb67:	mov    QWORD PTR [rbx+0x28],rdx
  40eb6b:	mov    BYTE PTR [rax],0x3a
  40eb6e:	xor    edx,edx
  40eb70:	mov    rax,QWORD PTR [rbx+0x28]
  40eb74:	mov    BYTE PTR [rax],0x20
  40eb77:	cmp    BYTE PTR [rbx+0x31],0x0
  40eb7b:	mov    eax,DWORD PTR [r13+0x14]
  40eb7f:	setne  dl
  40eb82:	add    rdx,QWORD PTR [rbx+0x28]
  40eb86:	dec    eax
  40eb88:	mov    QWORD PTR [rbx+0x28],rdx
  40eb8c:	mov    ecx,eax
  40eb8e:	je     40ec50 <flatcc_json_printer_table_field@@Base+0x1c0>
  40eb94:	mov    eax,DWORD PTR [rbp+0x0]
  40eb97:	lea    rsi,[rdx+0x1]
  40eb9b:	inc    DWORD PTR [rbx+0x38]
  40eb9e:	mov    QWORD PTR [rbx+0x28],rsi
  40eba2:	mov    BYTE PTR [rdx],0x7b
  40eba5:	mov    DWORD PTR [rsp+0x28],0x0
  40ebad:	mov    DWORD PTR [rsp+0x24],ecx
  40ebb1:	add    rax,rbp
  40ebb4:	mov    QWORD PTR [rsp+0x10],rax
  40ebb9:	movsxd rdx,DWORD PTR [rax]
  40ebbc:	lea    rsi,[rsp+0x10]
  40ebc1:	sub    rax,rdx
  40ebc4:	mov    QWORD PTR [rsp+0x18],rax
  40ebc9:	movzx  eax,WORD PTR [rax]
  40ebcc:	mov    rdi,rbx
  40ebcf:	mov    DWORD PTR [rsp+0x20],eax
  40ebd3:	call   r12
  40ebd6:	cmp    BYTE PTR [rbx+0x31],0x0
  40ebda:	jne    40eca8 <flatcc_json_printer_table_field@@Base+0x218>
  40ebe0:	mov    rsi,QWORD PTR [rbx+0x28]
  40ebe4:	lea    rax,[rsi+0x1]
  40ebe8:	mov    QWORD PTR [rbx+0x28],rax
  40ebec:	mov    BYTE PTR [rsi],0x7d
  40ebef:	mov    rax,QWORD PTR [rsp+0x38]
  40ebf4:	xor    rax,QWORD PTR fs:0x28
  40ebfd:	jne    40ed31 <flatcc_json_printer_table_field@@Base+0x2a1>
  40ec03:	add    rsp,0x48
  40ec07:	pop    rbx
  40ec08:	pop    rbp
  40ec09:	pop    r12
  40ec0b:	pop    r13
  40ec0d:	pop    r14
  40ec0f:	pop    r15
  40ec11:	ret    
  40ec12:	nop    WORD PTR [rax+rax*1+0x0]
  40ec18:	mov    rdi,rbx
  40ec1b:	call   4052c0 <test_print@@Base+0xdf0>
  40ec20:	mov    r14,QWORD PTR [rbx+0x28]
  40ec24:	jmp    40eb52 <flatcc_json_printer_table_field@@Base+0xc2>
  40ec29:	nop    DWORD PTR [rax+0x0]
  40ec30:	xor    esi,esi
  40ec32:	mov    rdi,rbx
  40ec35:	mov    QWORD PTR [rsp+0x8],rcx
  40ec3a:	call   QWORD PTR [rbx+0x48]
  40ec3d:	mov    rsi,QWORD PTR [rbx+0x28]
  40ec41:	mov    rcx,QWORD PTR [rsp+0x8]
  40ec46:	jmp    40eb1c <flatcc_json_printer_table_field@@Base+0x8c>
  40ec4b:	nop    DWORD PTR [rax+rax*1+0x0]
  40ec50:	mov    eax,DWORD PTR [rbx+0x3c]
  40ec53:	test   eax,eax
  40ec55:	jne    40ebef <flatcc_json_printer_table_field@@Base+0x15f>
  40ec57:	mov    DWORD PTR [rbx+0x3c],0x2
  40ec5e:	jmp    40ebef <flatcc_json_printer_table_field@@Base+0x15f>
  40ec60:	lea    rax,[rsi+0x1]
  40ec64:	mov    QWORD PTR [rbx+0x28],rax
  40ec68:	mov    BYTE PTR [rsi],0xa
  40ec6b:	mov    QWORD PTR [rsp+0x8],rcx
  40ec70:	movzx  esi,BYTE PTR [rbx+0x31]
  40ec74:	mov    rdi,QWORD PTR [rbx+0x28]
  40ec78:	imul   esi,DWORD PTR [rbx+0x38]
  40ec7c:	movsxd r15,esi
  40ec7f:	lea    rax,[rdi+r15*1]
  40ec83:	cmp    QWORD PTR [rbx+0x20],rax
  40ec87:	jae    40ecf0 <flatcc_json_printer_table_field@@Base+0x260>
  40ec89:	mov    rsi,r15
  40ec8c:	mov    rdi,rbx
  40ec8f:	call   405350 <test_print@@Base+0xe80>
  40ec94:	mov    rsi,QWORD PTR [rbx+0x28]
  40ec98:	mov    rcx,QWORD PTR [rsp+0x8]
  40ec9d:	jmp    40eb1c <flatcc_json_printer_table_field@@Base+0x8c>
  40eca2:	nop    WORD PTR [rax+rax*1+0x0]
  40eca8:	mov    rax,QWORD PTR [rbx+0x28]
  40ecac:	lea    rdx,[rax+0x1]
  40ecb0:	mov    QWORD PTR [rbx+0x28],rdx
  40ecb4:	mov    BYTE PTR [rax],0xa
  40ecb7:	mov    eax,DWORD PTR [rbx+0x38]
  40ecba:	movzx  esi,BYTE PTR [rbx+0x31]
  40ecbe:	lea    ebp,[rax-0x1]
  40ecc1:	imul   esi,ebp
  40ecc4:	mov    rdi,QWORD PTR [rbx+0x28]
  40ecc8:	mov    DWORD PTR [rbx+0x38],ebp
  40eccb:	movsxd rbp,esi
  40ecce:	lea    rax,[rdi+rbp*1]
  40ecd2:	cmp    QWORD PTR [rbx+0x20],rax
  40ecd6:	jae    40ed18 <flatcc_json_printer_table_field@@Base+0x288>
  40ecd8:	mov    rsi,rbp
  40ecdb:	mov    rdi,rbx
  40ecde:	call   405350 <test_print@@Base+0xe80>
  40ece3:	jmp    40ebe0 <flatcc_json_printer_table_field@@Base+0x150>
  40ece8:	nop    DWORD PTR [rax+rax*1+0x0]
  40ecf0:	mov    esi,0x20
  40ecf5:	mov    rdx,r15
  40ecf8:	call   403200 <memset@plt>
  40ecfd:	mov    rsi,QWORD PTR [rbx+0x28]
  40ed01:	mov    rcx,QWORD PTR [rsp+0x8]
  40ed06:	add    rsi,r15
  40ed09:	mov    QWORD PTR [rbx+0x28],rsi
  40ed0d:	jmp    40eb1c <flatcc_json_printer_table_field@@Base+0x8c>
  40ed12:	nop    WORD PTR [rax+rax*1+0x0]
  40ed18:	mov    esi,0x20
  40ed1d:	mov    rdx,rbp
  40ed20:	call   403200 <memset@plt>
  40ed25:	mov    rsi,QWORD PTR [rbx+0x28]
  40ed29:	add    rsi,rbp
  40ed2c:	jmp    40ebe4 <flatcc_json_printer_table_field@@Base+0x154>
  40ed31:	call   4031d0 <__stack_chk_fail@plt>
  40ed36:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000040ed40 <flatcc_json_printer_union_field@@Base>:
  40ed40:	endbr64 
  40ed44:	push   r15
  40ed46:	mov    r15,rdi
  40ed49:	push   r14
  40ed4b:	mov    r14,rsi
  40ed4e:	push   r13
  40ed50:	mov    r13,rcx
  40ed53:	push   r12
  40ed55:	push   rbp
  40ed56:	push   rbx
  40ed57:	sub    rsp,0x48
  40ed5b:	mov    rax,QWORD PTR [rsp+0x80]
  40ed63:	mov    QWORD PTR [rsp+0x8],r9
  40ed68:	mov    QWORD PTR [rsp+0x10],rax
  40ed6d:	mov    ecx,DWORD PTR [rsi+0x10]
  40ed70:	mov    rax,QWORD PTR fs:0x28
  40ed79:	mov    QWORD PTR [rsp+0x38],rax
  40ed7e:	xor    eax,eax
  40ed80:	lea    eax,[rdx+rdx*1+0x2]
  40ed84:	cmp    eax,ecx
  40ed86:	jge    40efc0 <flatcc_json_printer_union_field@@Base+0x280>
  40ed8c:	mov    rsi,QWORD PTR [rsi+0x8]
  40ed90:	mov    edx,eax
  40ed92:	movzx  edx,WORD PTR [rsi+rdx*1]
  40ed96:	test   dx,dx
  40ed99:	je     40efc0 <flatcc_json_printer_union_field@@Base+0x280>
  40ed9f:	add    rdx,QWORD PTR [r14]
  40eda2:	add    eax,0x2
  40eda5:	cmp    eax,ecx
  40eda7:	jge    40ef13 <flatcc_json_printer_union_field@@Base+0x1d3>
  40edad:	mov    rcx,QWORD PTR [r14+0x8]
  40edb1:	movzx  ebx,WORD PTR [rcx+rax*1]
  40edb5:	test   bx,bx
  40edb8:	je     40ef13 <flatcc_json_printer_union_field@@Base+0x1d3>
  40edbe:	add    rbx,QWORD PTR [r14]
  40edc1:	je     40ef13 <flatcc_json_printer_union_field@@Base+0x1d3>
  40edc7:	test   rdx,rdx
  40edca:	je     40ef13 <flatcc_json_printer_union_field@@Base+0x1d3>
  40edd0:	mov    eax,DWORD PTR [r14+0x18]
  40edd4:	movzx  r12d,BYTE PTR [rdx]
  40edd8:	lea    edx,[rax+0x1]
  40eddb:	mov    DWORD PTR [r14+0x18],edx
  40eddf:	mov    rsi,QWORD PTR [r15+0x28]
  40ede3:	test   eax,eax
  40ede5:	je     40edf6 <flatcc_json_printer_union_field@@Base+0xb6>
  40ede7:	lea    rax,[rsi+0x1]
  40edeb:	mov    QWORD PTR [r15+0x28],rax
  40edef:	mov    BYTE PTR [rsi],0x2c
  40edf2:	mov    rsi,QWORD PTR [r15+0x28]
  40edf6:	cmp    BYTE PTR [r15+0x31],0x0
  40edfb:	jne    40ef40 <flatcc_json_printer_union_field@@Base+0x200>
  40ee01:	cmp    QWORD PTR [r15+0x20],rsi
  40ee05:	ja     40ee1e <flatcc_json_printer_union_field@@Base+0xde>
  40ee07:	xor    esi,esi
  40ee09:	mov    rdi,r15
  40ee0c:	mov    DWORD PTR [rsp+0x1c],r8d
  40ee11:	call   QWORD PTR [r15+0x48]
  40ee15:	mov    rsi,QWORD PTR [r15+0x28]
  40ee19:	mov    r8d,DWORD PTR [rsp+0x1c]
  40ee1e:	mov    BYTE PTR [rsi],0x22
  40ee21:	xor    edi,edi
  40ee23:	movsxd rbp,r8d
  40ee26:	cmp    BYTE PTR [r15+0x32],0x0
  40ee2b:	sete   dil
  40ee2f:	add    rdi,QWORD PTR [r15+0x28]
  40ee33:	lea    rax,[rdi+rbp*1]
  40ee37:	mov    QWORD PTR [r15+0x28],rdi
  40ee3b:	mov    rdx,rbp
  40ee3e:	mov    rsi,r13
  40ee41:	cmp    QWORD PTR [r15+0x20],rax
  40ee45:	jbe    40efa8 <flatcc_json_printer_union_field@@Base+0x268>
  40ee4b:	call   403240 <memcpy@plt>
  40ee50:	mov    rax,QWORD PTR [r15+0x28]
  40ee54:	add    rax,rbp
  40ee57:	mov    QWORD PTR [r15+0x28],rax
  40ee5b:	lea    rdx,[rax+0x5]
  40ee5f:	cmp    QWORD PTR [r15+0x20],rdx
  40ee63:	ja     40ef88 <flatcc_json_printer_union_field@@Base+0x248>
  40ee69:	mov    edx,0x5
  40ee6e:	lea    rsi,[rip+0x1b87]        # 4109fc <_IO_stdin_used@@Base+0x9fc>
  40ee75:	mov    rdi,r15
  40ee78:	call   4052c0 <test_print@@Base+0xdf0>
  40ee7d:	mov    rax,QWORD PTR [r15+0x28]
  40ee81:	mov    BYTE PTR [rax],0x22
  40ee84:	xor    eax,eax
  40ee86:	cmp    BYTE PTR [r15+0x32],0x0
  40ee8b:	sete   al
  40ee8e:	add    rax,QWORD PTR [r15+0x28]
  40ee92:	lea    rdx,[rax+0x1]
  40ee96:	mov    QWORD PTR [r15+0x28],rdx
  40ee9a:	mov    BYTE PTR [rax],0x3a
  40ee9d:	xor    esi,esi
  40ee9f:	mov    rax,QWORD PTR [r15+0x28]
  40eea3:	mov    BYTE PTR [rax],0x20
  40eea6:	cmp    BYTE PTR [r15+0x31],0x0
  40eeab:	setne  sil
  40eeaf:	add    rsi,QWORD PTR [r15+0x28]
  40eeb3:	cmp    BYTE PTR [r15+0x33],0x0
  40eeb8:	mov    QWORD PTR [r15+0x28],rsi
  40eebc:	jne    40efd0 <flatcc_json_printer_union_field@@Base+0x290>
  40eec2:	mov    rax,QWORD PTR [rsp+0x8]
  40eec7:	movzx  esi,r12b
  40eecb:	mov    rdi,r15
  40eece:	call   rax
  40eed0:	test   r12b,r12b
  40eed3:	je     40ef13 <flatcc_json_printer_union_field@@Base+0x1d3>
  40eed5:	mov    rax,QWORD PTR [r15+0x28]
  40eed9:	mov    rsi,r13
  40eedc:	lea    rdx,[rax+0x1]
  40eee0:	mov    QWORD PTR [r15+0x28],rdx
  40eee4:	mov    BYTE PTR [rax],0x2c
  40eee7:	mov    rdi,r15
  40eeea:	mov    rdx,rbp
  40eeed:	call   406380 <test_print@@Base+0x1eb0>
  40eef2:	mov    eax,DWORD PTR [r14+0x14]
  40eef6:	lea    rsi,[rsp+0x20]
  40eefb:	mov    DWORD PTR [rsp+0x28],eax
  40eeff:	mov    rax,QWORD PTR [rsp+0x10]
  40ef04:	mov    rdi,r15
  40ef07:	mov    BYTE PTR [rsp+0x2c],r12b
  40ef0c:	mov    QWORD PTR [rsp+0x20],rbx
  40ef11:	call   rax
  40ef13:	mov    rax,QWORD PTR [rsp+0x38]
  40ef18:	xor    rax,QWORD PTR fs:0x28
  40ef21:	jne    40f00a <flatcc_json_printer_union_field@@Base+0x2ca>
  40ef27:	add    rsp,0x48
  40ef2b:	pop    rbx
  40ef2c:	pop    rbp
  40ef2d:	pop    r12
  40ef2f:	pop    r13
  40ef31:	pop    r14
  40ef33:	pop    r15
  40ef35:	ret    
  40ef36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ef40:	lea    rax,[rsi+0x1]
  40ef44:	mov    QWORD PTR [r15+0x28],rax
  40ef48:	mov    BYTE PTR [rsi],0xa
  40ef4b:	mov    DWORD PTR [rsp+0x1c],r8d
  40ef50:	movzx  esi,BYTE PTR [r15+0x31]
  40ef55:	mov    rdi,QWORD PTR [r15+0x28]
  40ef59:	imul   esi,DWORD PTR [r15+0x38]
  40ef5e:	movsxd rbp,esi
  40ef61:	lea    rax,[rdi+rbp*1]
  40ef65:	cmp    QWORD PTR [r15+0x20],rax
  40ef69:	jae    40efe8 <flatcc_json_printer_union_field@@Base+0x2a8>
  40ef6b:	mov    rsi,rbp
  40ef6e:	mov    rdi,r15
  40ef71:	call   405350 <test_print@@Base+0xe80>
  40ef76:	mov    rsi,QWORD PTR [r15+0x28]
  40ef7a:	mov    r8d,DWORD PTR [rsp+0x1c]
  40ef7f:	jmp    40ee1e <flatcc_json_printer_union_field@@Base+0xde>
  40ef84:	nop    DWORD PTR [rax+0x0]
  40ef88:	mov    DWORD PTR [rax],0x7079745f
  40ef8e:	mov    BYTE PTR [rax+0x4],0x65
  40ef92:	mov    rax,QWORD PTR [r15+0x28]
  40ef96:	add    rax,0x5
  40ef9a:	mov    QWORD PTR [r15+0x28],rax
  40ef9e:	jmp    40ee81 <flatcc_json_printer_union_field@@Base+0x141>
  40efa3:	nop    DWORD PTR [rax+rax*1+0x0]
  40efa8:	mov    rdi,r15
  40efab:	call   4052c0 <test_print@@Base+0xdf0>
  40efb0:	mov    rax,QWORD PTR [r15+0x28]
  40efb4:	jmp    40ee5b <flatcc_json_printer_union_field@@Base+0x11b>
  40efb9:	nop    DWORD PTR [rax+0x0]
  40efc0:	xor    edx,edx
  40efc2:	jmp    40eda2 <flatcc_json_printer_union_field@@Base+0x62>
  40efc7:	nop    WORD PTR [rax+rax*1+0x0]
  40efd0:	movzx  edi,r12b
  40efd4:	call   405590 <test_print@@Base+0x10c0>
  40efd9:	cdqe   
  40efdb:	add    QWORD PTR [r15+0x28],rax
  40efdf:	jmp    40eed0 <flatcc_json_printer_union_field@@Base+0x190>
  40efe4:	nop    DWORD PTR [rax+0x0]
  40efe8:	mov    esi,0x20
  40efed:	mov    rdx,rbp
  40eff0:	call   403200 <memset@plt>
  40eff5:	mov    rsi,QWORD PTR [r15+0x28]
  40eff9:	mov    r8d,DWORD PTR [rsp+0x1c]
  40effe:	add    rsi,rbp
  40f001:	mov    QWORD PTR [r15+0x28],rsi
  40f005:	jmp    40ee1e <flatcc_json_printer_union_field@@Base+0xde>
  40f00a:	call   4031d0 <__stack_chk_fail@plt>
  40f00f:	nop

000000000040f010 <flatcc_json_printer_union_table@@Base>:
  40f010:	endbr64 
  40f014:	push   rbp
  40f015:	push   rbx
  40f016:	mov    rbx,rdi
  40f019:	sub    rsp,0x38
  40f01d:	mov    ecx,DWORD PTR [rsi+0x8]
  40f020:	mov    rax,QWORD PTR fs:0x28
  40f029:	mov    QWORD PTR [rsp+0x28],rax
  40f02e:	xor    eax,eax
  40f030:	dec    ecx
  40f032:	je     40f0f0 <flatcc_json_printer_union_table@@Base+0xe0>
  40f038:	mov    rax,QWORD PTR [rsi]
  40f03b:	mov    esi,DWORD PTR [rax]
  40f03d:	inc    DWORD PTR [rdi+0x38]
  40f040:	add    rax,rsi
  40f043:	mov    rsi,QWORD PTR [rdi+0x28]
  40f047:	lea    rdi,[rsi+0x1]
  40f04b:	mov    QWORD PTR [rbx+0x28],rdi
  40f04f:	mov    BYTE PTR [rsi],0x7b
  40f052:	mov    DWORD PTR [rsp+0x18],0x0
  40f05a:	mov    DWORD PTR [rsp+0x14],ecx
  40f05e:	mov    QWORD PTR [rsp],rax
  40f062:	mov    rsi,rsp
  40f065:	movsxd rcx,DWORD PTR [rax]
  40f068:	mov    rdi,rbx
  40f06b:	sub    rax,rcx
  40f06e:	mov    QWORD PTR [rsp+0x8],rax
  40f073:	movzx  eax,WORD PTR [rax]
  40f076:	mov    DWORD PTR [rsp+0x10],eax
  40f07a:	call   rdx
  40f07c:	cmp    BYTE PTR [rbx+0x31],0x0
  40f080:	jne    40f0b0 <flatcc_json_printer_union_table@@Base+0xa0>
  40f082:	mov    rsi,QWORD PTR [rbx+0x28]
  40f086:	lea    rax,[rsi+0x1]
  40f08a:	mov    QWORD PTR [rbx+0x28],rax
  40f08e:	mov    BYTE PTR [rsi],0x7d
  40f091:	mov    rax,QWORD PTR [rsp+0x28]
  40f096:	xor    rax,QWORD PTR fs:0x28
  40f09f:	jne    40f119 <flatcc_json_printer_union_table@@Base+0x109>
  40f0a1:	add    rsp,0x38
  40f0a5:	pop    rbx
  40f0a6:	pop    rbp
  40f0a7:	ret    
  40f0a8:	nop    DWORD PTR [rax+rax*1+0x0]
  40f0b0:	mov    rax,QWORD PTR [rbx+0x28]
  40f0b4:	lea    rdx,[rax+0x1]
  40f0b8:	mov    QWORD PTR [rbx+0x28],rdx
  40f0bc:	mov    BYTE PTR [rax],0xa
  40f0bf:	mov    eax,DWORD PTR [rbx+0x38]
  40f0c2:	movzx  esi,BYTE PTR [rbx+0x31]
  40f0c6:	lea    ebp,[rax-0x1]
  40f0c9:	imul   esi,ebp
  40f0cc:	mov    rdi,QWORD PTR [rbx+0x28]
  40f0d0:	mov    DWORD PTR [rbx+0x38],ebp
  40f0d3:	movsxd rbp,esi
  40f0d6:	lea    rax,[rdi+rbp*1]
  40f0da:	cmp    QWORD PTR [rbx+0x20],rax
  40f0de:	jae    40f100 <flatcc_json_printer_union_table@@Base+0xf0>
  40f0e0:	mov    rsi,rbp
  40f0e3:	mov    rdi,rbx
  40f0e6:	call   405350 <test_print@@Base+0xe80>
  40f0eb:	jmp    40f082 <flatcc_json_printer_union_table@@Base+0x72>
  40f0ed:	nop    DWORD PTR [rax]
  40f0f0:	mov    eax,DWORD PTR [rdi+0x3c]
  40f0f3:	test   eax,eax
  40f0f5:	jne    40f091 <flatcc_json_printer_union_table@@Base+0x81>
  40f0f7:	mov    DWORD PTR [rdi+0x3c],0x2
  40f0fe:	jmp    40f091 <flatcc_json_printer_union_table@@Base+0x81>
  40f100:	mov    esi,0x20
  40f105:	mov    rdx,rbp
  40f108:	call   403200 <memset@plt>
  40f10d:	mov    rsi,QWORD PTR [rbx+0x28]
  40f111:	add    rsi,rbp
  40f114:	jmp    40f086 <flatcc_json_printer_union_table@@Base+0x76>
  40f119:	call   4031d0 <__stack_chk_fail@plt>
  40f11e:	xchg   ax,ax

000000000040f120 <flatcc_json_printer_union_struct@@Base>:
  40f120:	endbr64 
  40f124:	push   rbp
  40f125:	push   rbx
  40f126:	mov    rbx,rdi
  40f129:	sub    rsp,0x8
  40f12d:	mov    rax,QWORD PTR [rdi+0x28]
  40f131:	inc    DWORD PTR [rdi+0x38]
  40f134:	lea    rcx,[rax+0x1]
  40f138:	mov    QWORD PTR [rdi+0x28],rcx
  40f13c:	mov    BYTE PTR [rax],0x7b
  40f13f:	mov    rsi,QWORD PTR [rsi]
  40f142:	mov    eax,DWORD PTR [rsi]
  40f144:	add    rsi,rax
  40f147:	call   rdx
  40f149:	cmp    BYTE PTR [rbx+0x31],0x0
  40f14d:	jne    40f168 <flatcc_json_printer_union_struct@@Base+0x48>
  40f14f:	mov    rsi,QWORD PTR [rbx+0x28]
  40f153:	lea    rax,[rsi+0x1]
  40f157:	mov    QWORD PTR [rbx+0x28],rax
  40f15b:	mov    BYTE PTR [rsi],0x7d
  40f15e:	add    rsp,0x8
  40f162:	pop    rbx
  40f163:	pop    rbp
  40f164:	ret    
  40f165:	nop    DWORD PTR [rax]
  40f168:	mov    rax,QWORD PTR [rbx+0x28]
  40f16c:	lea    rdx,[rax+0x1]
  40f170:	mov    QWORD PTR [rbx+0x28],rdx
  40f174:	mov    BYTE PTR [rax],0xa
  40f177:	mov    eax,DWORD PTR [rbx+0x38]
  40f17a:	movzx  esi,BYTE PTR [rbx+0x31]
  40f17e:	lea    ebp,[rax-0x1]
  40f181:	imul   esi,ebp
  40f184:	mov    rdi,QWORD PTR [rbx+0x28]
  40f188:	mov    DWORD PTR [rbx+0x38],ebp
  40f18b:	movsxd rbp,esi
  40f18e:	lea    rax,[rdi+rbp*1]
  40f192:	cmp    QWORD PTR [rbx+0x20],rax
  40f196:	jae    40f1a8 <flatcc_json_printer_union_struct@@Base+0x88>
  40f198:	mov    rsi,rbp
  40f19b:	mov    rdi,rbx
  40f19e:	call   405350 <test_print@@Base+0xe80>
  40f1a3:	jmp    40f14f <flatcc_json_printer_union_struct@@Base+0x2f>
  40f1a5:	nop    DWORD PTR [rax]
  40f1a8:	mov    esi,0x20
  40f1ad:	mov    rdx,rbp
  40f1b0:	call   403200 <memset@plt>
  40f1b5:	mov    rsi,QWORD PTR [rbx+0x28]
  40f1b9:	add    rsi,rbp
  40f1bc:	jmp    40f153 <flatcc_json_printer_union_struct@@Base+0x33>
  40f1be:	xchg   ax,ax

000000000040f1c0 <flatcc_json_printer_union_string@@Base>:
  40f1c0:	endbr64 
  40f1c4:	mov    rsi,QWORD PTR [rsi]
  40f1c7:	mov    eax,DWORD PTR [rsi]
  40f1c9:	add    rsi,rax
  40f1cc:	mov    edx,DWORD PTR [rsi]
  40f1ce:	add    rsi,0x4
  40f1d2:	jmp    406130 <test_print@@Base+0x1c60>
  40f1d7:	nop    WORD PTR [rax+rax*1+0x0]

000000000040f1e0 <flatcc_json_printer_embedded_struct_field@@Base>:
  40f1e0:	endbr64 
  40f1e4:	push   r15
  40f1e6:	mov    r15,r8
  40f1e9:	push   r14
  40f1eb:	push   r13
  40f1ed:	mov    r13,rcx
  40f1f0:	push   r12
  40f1f2:	mov    r12,rdx
  40f1f5:	push   rbp
  40f1f6:	push   rbx
  40f1f7:	mov    rbx,rdi
  40f1fa:	sub    rsp,0x8
  40f1fe:	mov    rax,QWORD PTR [rdi+0x28]
  40f202:	test   esi,esi
  40f204:	je     40f215 <flatcc_json_printer_embedded_struct_field@@Base+0x35>
  40f206:	lea    rdx,[rax+0x1]
  40f20a:	mov    QWORD PTR [rdi+0x28],rdx
  40f20e:	mov    BYTE PTR [rax],0x2c
  40f211:	mov    rax,QWORD PTR [rdi+0x28]
  40f215:	cmp    BYTE PTR [rbx+0x31],0x0
  40f219:	movsxd r14,r9d
  40f21c:	jne    40f330 <flatcc_json_printer_embedded_struct_field@@Base+0x150>
  40f222:	cmp    QWORD PTR [rbx+0x20],rax
  40f226:	ja     40f234 <flatcc_json_printer_embedded_struct_field@@Base+0x54>
  40f228:	xor    esi,esi
  40f22a:	mov    rdi,rbx
  40f22d:	call   QWORD PTR [rbx+0x48]
  40f230:	mov    rax,QWORD PTR [rbx+0x28]
  40f234:	mov    BYTE PTR [rax],0x22
  40f237:	xor    edi,edi
  40f239:	mov    rdx,r14
  40f23c:	cmp    BYTE PTR [rbx+0x32],0x0
  40f240:	sete   dil
  40f244:	add    rdi,QWORD PTR [rbx+0x28]
  40f248:	lea    rax,[rdi+r14*1]
  40f24c:	mov    QWORD PTR [rbx+0x28],rdi
  40f250:	mov    rsi,r15
  40f253:	cmp    QWORD PTR [rbx+0x20],rax
  40f257:	ja     40f2d8 <flatcc_json_printer_embedded_struct_field@@Base+0xf8>
  40f259:	mov    rdi,rbx
  40f25c:	call   4052c0 <test_print@@Base+0xdf0>
  40f261:	mov    r14,QWORD PTR [rbx+0x28]
  40f265:	mov    BYTE PTR [r14],0x22
  40f269:	xor    eax,eax
  40f26b:	lea    rsi,[r12+r13*1]
  40f26f:	cmp    BYTE PTR [rbx+0x32],0x0
  40f273:	sete   al
  40f276:	add    rax,QWORD PTR [rbx+0x28]
  40f27a:	lea    rdx,[rax+0x1]
  40f27e:	mov    QWORD PTR [rbx+0x28],rdx
  40f282:	mov    BYTE PTR [rax],0x3a
  40f285:	mov    rdi,rbx
  40f288:	mov    rax,QWORD PTR [rbx+0x28]
  40f28c:	mov    BYTE PTR [rax],0x20
  40f28f:	xor    eax,eax
  40f291:	cmp    BYTE PTR [rbx+0x31],0x0
  40f295:	setne  al
  40f298:	add    rax,QWORD PTR [rbx+0x28]
  40f29c:	inc    DWORD PTR [rbx+0x38]
  40f29f:	lea    rdx,[rax+0x1]
  40f2a3:	mov    QWORD PTR [rbx+0x28],rdx
  40f2a7:	mov    BYTE PTR [rax],0x7b
  40f2aa:	call   QWORD PTR [rsp+0x40]
  40f2ae:	cmp    BYTE PTR [rbx+0x31],0x0
  40f2b2:	jne    40f2f0 <flatcc_json_printer_embedded_struct_field@@Base+0x110>
  40f2b4:	mov    rsi,QWORD PTR [rbx+0x28]
  40f2b8:	lea    rax,[rsi+0x1]
  40f2bc:	mov    QWORD PTR [rbx+0x28],rax
  40f2c0:	mov    BYTE PTR [rsi],0x7d
  40f2c3:	add    rsp,0x8
  40f2c7:	pop    rbx
  40f2c8:	pop    rbp
  40f2c9:	pop    r12
  40f2cb:	pop    r13
  40f2cd:	pop    r14
  40f2cf:	pop    r15
  40f2d1:	ret    
  40f2d2:	nop    WORD PTR [rax+rax*1+0x0]
  40f2d8:	call   403240 <memcpy@plt>
  40f2dd:	add    r14,QWORD PTR [rbx+0x28]
  40f2e1:	mov    QWORD PTR [rbx+0x28],r14
  40f2e5:	jmp    40f265 <flatcc_json_printer_embedded_struct_field@@Base+0x85>
  40f2ea:	nop    WORD PTR [rax+rax*1+0x0]
  40f2f0:	mov    rax,QWORD PTR [rbx+0x28]
  40f2f4:	lea    rdx,[rax+0x1]
  40f2f8:	mov    QWORD PTR [rbx+0x28],rdx
  40f2fc:	mov    BYTE PTR [rax],0xa
  40f2ff:	mov    eax,DWORD PTR [rbx+0x38]
  40f302:	movzx  esi,BYTE PTR [rbx+0x31]
  40f306:	lea    ebp,[rax-0x1]
  40f309:	imul   esi,ebp
  40f30c:	mov    rdi,QWORD PTR [rbx+0x28]
  40f310:	mov    DWORD PTR [rbx+0x38],ebp
  40f313:	movsxd rbp,esi
  40f316:	lea    rax,[rdi+rbp*1]
  40f31a:	cmp    QWORD PTR [rbx+0x20],rax
  40f31e:	jae    40f390 <flatcc_json_printer_embedded_struct_field@@Base+0x1b0>
  40f320:	mov    rsi,rbp
  40f323:	mov    rdi,rbx
  40f326:	call   405350 <test_print@@Base+0xe80>
  40f32b:	jmp    40f2b4 <flatcc_json_printer_embedded_struct_field@@Base+0xd4>
  40f32d:	nop    DWORD PTR [rax]
  40f330:	lea    rdx,[rax+0x1]
  40f334:	mov    QWORD PTR [rbx+0x28],rdx
  40f338:	mov    BYTE PTR [rax],0xa
  40f33b:	movzx  eax,BYTE PTR [rbx+0x31]
  40f33f:	mov    rdi,QWORD PTR [rbx+0x28]
  40f343:	imul   eax,DWORD PTR [rbx+0x38]
  40f347:	movsxd rbp,eax
  40f34a:	lea    rax,[rdi+rbp*1]
  40f34e:	cmp    QWORD PTR [rbx+0x20],rax
  40f352:	jae    40f370 <flatcc_json_printer_embedded_struct_field@@Base+0x190>
  40f354:	mov    rsi,rbp
  40f357:	mov    rdi,rbx
  40f35a:	call   405350 <test_print@@Base+0xe80>
  40f35f:	mov    rax,QWORD PTR [rbx+0x28]
  40f363:	jmp    40f234 <flatcc_json_printer_embedded_struct_field@@Base+0x54>
  40f368:	nop    DWORD PTR [rax+rax*1+0x0]
  40f370:	mov    rdx,rbp
  40f373:	mov    esi,0x20
  40f378:	call   403200 <memset@plt>
  40f37d:	mov    rax,QWORD PTR [rbx+0x28]
  40f381:	add    rax,rbp
  40f384:	mov    QWORD PTR [rbx+0x28],rax
  40f388:	jmp    40f234 <flatcc_json_printer_embedded_struct_field@@Base+0x54>
  40f38d:	nop    DWORD PTR [rax]
  40f390:	mov    esi,0x20
  40f395:	mov    rdx,rbp
  40f398:	call   403200 <memset@plt>
  40f39d:	mov    rsi,QWORD PTR [rbx+0x28]
  40f3a1:	add    rsi,rbp
  40f3a4:	jmp    40f2b8 <flatcc_json_printer_embedded_struct_field@@Base+0xd8>
  40f3a9:	nop    DWORD PTR [rax+0x0]

000000000040f3b0 <flatcc_json_printer_struct_field@@Base>:
  40f3b0:	endbr64 
  40f3b4:	lea    eax,[rdx+rdx*1+0x4]
  40f3b8:	cmp    eax,DWORD PTR [rsi+0x10]
  40f3bb:	jge    40f4f0 <flatcc_json_printer_struct_field@@Base+0x140>
  40f3c1:	mov    rdx,QWORD PTR [rsi+0x8]
  40f3c5:	movzx  eax,WORD PTR [rdx+rax*1]
  40f3c9:	test   ax,ax
  40f3cc:	je     40f4f0 <flatcc_json_printer_struct_field@@Base+0x140>
  40f3d2:	push   r15
  40f3d4:	push   r14
  40f3d6:	push   r13
  40f3d8:	push   r12
  40f3da:	push   rbp
  40f3db:	push   rbx
  40f3dc:	sub    rsp,0x8
  40f3e0:	add    rax,QWORD PTR [rsi]
  40f3e3:	mov    r12,rax
  40f3e6:	je     40f4be <flatcc_json_printer_struct_field@@Base+0x10e>
  40f3ec:	mov    edx,DWORD PTR [rsi+0x18]
  40f3ef:	lea    eax,[rdx+0x1]
  40f3f2:	mov    DWORD PTR [rsi+0x18],eax
  40f3f5:	mov    rax,QWORD PTR [rdi+0x28]
  40f3f9:	test   edx,edx
  40f3fb:	je     40f40c <flatcc_json_printer_struct_field@@Base+0x5c>
  40f3fd:	lea    rdx,[rax+0x1]
  40f401:	mov    QWORD PTR [rdi+0x28],rdx
  40f405:	mov    BYTE PTR [rax],0x2c
  40f408:	mov    rax,QWORD PTR [rdi+0x28]
  40f40c:	cmp    BYTE PTR [rdi+0x31],0x0
  40f410:	mov    r13,r9
  40f413:	mov    r15,rcx
  40f416:	mov    rbx,rdi
  40f419:	movsxd rbp,r8d
  40f41c:	jne    40f4f8 <flatcc_json_printer_struct_field@@Base+0x148>
  40f422:	cmp    QWORD PTR [rdi+0x20],rax
  40f426:	jbe    40f4e0 <flatcc_json_printer_struct_field@@Base+0x130>
  40f42c:	mov    BYTE PTR [rax],0x22
  40f42f:	xor    edi,edi
  40f431:	mov    rdx,rbp
  40f434:	cmp    BYTE PTR [rbx+0x32],0x0
  40f438:	sete   dil
  40f43c:	add    rdi,QWORD PTR [rbx+0x28]
  40f440:	lea    rax,[rdi+rbp*1]
  40f444:	mov    QWORD PTR [rbx+0x28],rdi
  40f448:	mov    rsi,r15
  40f44b:	cmp    QWORD PTR [rbx+0x20],rax
  40f44f:	jbe    40f4d0 <flatcc_json_printer_struct_field@@Base+0x120>
  40f451:	call   403240 <memcpy@plt>
  40f456:	add    rbp,QWORD PTR [rbx+0x28]
  40f45a:	mov    QWORD PTR [rbx+0x28],rbp
  40f45e:	mov    BYTE PTR [rbp+0x0],0x22
  40f462:	xor    eax,eax
  40f464:	mov    rsi,r12
  40f467:	cmp    BYTE PTR [rbx+0x32],0x0
  40f46b:	sete   al
  40f46e:	add    rax,QWORD PTR [rbx+0x28]
  40f472:	lea    rdx,[rax+0x1]
  40f476:	mov    QWORD PTR [rbx+0x28],rdx
  40f47a:	mov    BYTE PTR [rax],0x3a
  40f47d:	mov    rdi,rbx
  40f480:	mov    rax,QWORD PTR [rbx+0x28]
  40f484:	mov    BYTE PTR [rax],0x20
  40f487:	xor    eax,eax
  40f489:	cmp    BYTE PTR [rbx+0x31],0x0
  40f48d:	setne  al
  40f490:	add    rax,QWORD PTR [rbx+0x28]
  40f494:	inc    DWORD PTR [rbx+0x38]
  40f497:	lea    rdx,[rax+0x1]
  40f49b:	mov    QWORD PTR [rbx+0x28],rdx
  40f49f:	mov    BYTE PTR [rax],0x7b
  40f4a2:	call   r13
  40f4a5:	cmp    BYTE PTR [rbx+0x31],0x0
  40f4a9:	jne    40f530 <flatcc_json_printer_struct_field@@Base+0x180>
  40f4af:	mov    rsi,QWORD PTR [rbx+0x28]
  40f4b3:	lea    rax,[rsi+0x1]
  40f4b7:	mov    QWORD PTR [rbx+0x28],rax
  40f4bb:	mov    BYTE PTR [rsi],0x7d
  40f4be:	add    rsp,0x8
  40f4c2:	pop    rbx
  40f4c3:	pop    rbp
  40f4c4:	pop    r12
  40f4c6:	pop    r13
  40f4c8:	pop    r14
  40f4ca:	pop    r15
  40f4cc:	ret    
  40f4cd:	nop    DWORD PTR [rax]
  40f4d0:	mov    rdi,rbx
  40f4d3:	call   4052c0 <test_print@@Base+0xdf0>
  40f4d8:	mov    rbp,QWORD PTR [rbx+0x28]
  40f4dc:	jmp    40f45e <flatcc_json_printer_struct_field@@Base+0xae>
  40f4de:	xchg   ax,ax
  40f4e0:	xor    esi,esi
  40f4e2:	call   QWORD PTR [rdi+0x48]
  40f4e5:	mov    rax,QWORD PTR [rbx+0x28]
  40f4e9:	jmp    40f42c <flatcc_json_printer_struct_field@@Base+0x7c>
  40f4ee:	xchg   ax,ax
  40f4f0:	ret    
  40f4f1:	nop    DWORD PTR [rax+0x0]
  40f4f8:	lea    rdx,[rax+0x1]
  40f4fc:	mov    QWORD PTR [rdi+0x28],rdx
  40f500:	mov    BYTE PTR [rax],0xa
  40f503:	movzx  eax,BYTE PTR [rdi+0x31]
  40f507:	imul   eax,DWORD PTR [rdi+0x38]
  40f50b:	mov    rdi,QWORD PTR [rdi+0x28]
  40f50f:	movsxd r14,eax
  40f512:	lea    rax,[rdi+r14*1]
  40f516:	cmp    QWORD PTR [rbx+0x20],rax
  40f51a:	jae    40f570 <flatcc_json_printer_struct_field@@Base+0x1c0>
  40f51c:	mov    rsi,r14
  40f51f:	mov    rdi,rbx
  40f522:	call   405350 <test_print@@Base+0xe80>
  40f527:	mov    rax,QWORD PTR [rbx+0x28]
  40f52b:	jmp    40f42c <flatcc_json_printer_struct_field@@Base+0x7c>
  40f530:	mov    rax,QWORD PTR [rbx+0x28]
  40f534:	lea    rdx,[rax+0x1]
  40f538:	mov    QWORD PTR [rbx+0x28],rdx
  40f53c:	mov    BYTE PTR [rax],0xa
  40f53f:	mov    eax,DWORD PTR [rbx+0x38]
  40f542:	movzx  esi,BYTE PTR [rbx+0x31]
  40f546:	lea    ebp,[rax-0x1]
  40f549:	imul   esi,ebp
  40f54c:	mov    rdi,QWORD PTR [rbx+0x28]
  40f550:	mov    DWORD PTR [rbx+0x38],ebp
  40f553:	movsxd rbp,esi
  40f556:	lea    rax,[rdi+rbp*1]
  40f55a:	cmp    QWORD PTR [rbx+0x20],rax
  40f55e:	jae    40f590 <flatcc_json_printer_struct_field@@Base+0x1e0>
  40f560:	mov    rsi,rbp
  40f563:	mov    rdi,rbx
  40f566:	call   405350 <test_print@@Base+0xe80>
  40f56b:	jmp    40f4af <flatcc_json_printer_struct_field@@Base+0xff>
  40f570:	mov    rdx,r14
  40f573:	mov    esi,0x20
  40f578:	call   403200 <memset@plt>
  40f57d:	mov    rax,QWORD PTR [rbx+0x28]
  40f581:	add    rax,r14
  40f584:	mov    QWORD PTR [rbx+0x28],rax
  40f588:	jmp    40f42c <flatcc_json_printer_struct_field@@Base+0x7c>
  40f58d:	nop    DWORD PTR [rax]
  40f590:	mov    esi,0x20
  40f595:	mov    rdx,rbp
  40f598:	call   403200 <memset@plt>
  40f59d:	mov    rsi,QWORD PTR [rbx+0x28]
  40f5a1:	add    rsi,rbp
  40f5a4:	jmp    40f4b3 <flatcc_json_printer_struct_field@@Base+0x103>
  40f5a9:	nop    DWORD PTR [rax+0x0]

000000000040f5b0 <flatcc_json_printer_struct_as_root@@Base>:
  40f5b0:	endbr64 
  40f5b4:	push   r12
  40f5b6:	mov    r12,r8
  40f5b9:	push   rbp
  40f5ba:	mov    rbp,rsi
  40f5bd:	push   rbx
  40f5be:	mov    rbx,rdi
  40f5c1:	call   405ee0 <test_print@@Base+0x1a10>
  40f5c6:	test   eax,eax
  40f5c8:	je     40f6b0 <flatcc_json_printer_struct_as_root@@Base+0x100>
  40f5ce:	mov    rax,QWORD PTR [rbx+0x28]
  40f5d2:	inc    DWORD PTR [rbx+0x38]
  40f5d5:	lea    rdx,[rax+0x1]
  40f5d9:	mov    QWORD PTR [rbx+0x28],rdx
  40f5dd:	mov    BYTE PTR [rax],0x7b
  40f5e0:	mov    rdi,rbx
  40f5e3:	mov    esi,DWORD PTR [rbp+0x0]
  40f5e6:	add    rsi,rbp
  40f5e9:	call   r12
  40f5ec:	cmp    BYTE PTR [rbx+0x31],0x0
  40f5f0:	jne    40f650 <flatcc_json_printer_struct_as_root@@Base+0xa0>
  40f5f2:	mov    rsi,QWORD PTR [rbx+0x28]
  40f5f6:	lea    rax,[rsi+0x1]
  40f5fa:	mov    QWORD PTR [rbx+0x28],rax
  40f5fe:	mov    BYTE PTR [rsi],0x7d
  40f601:	cmp    BYTE PTR [rbx+0x31],0x0
  40f605:	jne    40f630 <flatcc_json_printer_struct_as_root@@Base+0x80>
  40f607:	mov    esi,0x1
  40f60c:	mov    rdi,rbx
  40f60f:	call   QWORD PTR [rbx+0x48]
  40f612:	mov    eax,DWORD PTR [rbx+0x3c]
  40f615:	test   eax,eax
  40f617:	jne    40f6b0 <flatcc_json_printer_struct_as_root@@Base+0x100>
  40f61d:	mov    rax,QWORD PTR [rbx+0x28]
  40f621:	sub    rax,QWORD PTR [rbx]
  40f624:	add    eax,DWORD PTR [rbx+0x18]
  40f627:	pop    rbx
  40f628:	pop    rbp
  40f629:	pop    r12
  40f62b:	ret    
  40f62c:	nop    DWORD PTR [rax+0x0]
  40f630:	mov    edx,DWORD PTR [rbx+0x38]
  40f633:	test   edx,edx
  40f635:	jne    40f607 <flatcc_json_printer_struct_as_root@@Base+0x57>
  40f637:	mov    rax,QWORD PTR [rbx+0x28]
  40f63b:	lea    rdx,[rax+0x1]
  40f63f:	mov    QWORD PTR [rbx+0x28],rdx
  40f643:	mov    BYTE PTR [rax],0xa
  40f646:	jmp    40f607 <flatcc_json_printer_struct_as_root@@Base+0x57>
  40f648:	nop    DWORD PTR [rax+rax*1+0x0]
  40f650:	mov    rax,QWORD PTR [rbx+0x28]
  40f654:	lea    rdx,[rax+0x1]
  40f658:	mov    QWORD PTR [rbx+0x28],rdx
  40f65c:	mov    BYTE PTR [rax],0xa
  40f65f:	mov    eax,DWORD PTR [rbx+0x38]
  40f662:	movzx  esi,BYTE PTR [rbx+0x31]
  40f666:	lea    ebp,[rax-0x1]
  40f669:	imul   esi,ebp
  40f66c:	mov    rdi,QWORD PTR [rbx+0x28]
  40f670:	mov    DWORD PTR [rbx+0x38],ebp
  40f673:	movsxd rbp,esi
  40f676:	lea    rax,[rdi+rbp*1]
  40f67a:	cmp    QWORD PTR [rbx+0x20],rax
  40f67e:	jae    40f690 <flatcc_json_printer_struct_as_root@@Base+0xe0>
  40f680:	mov    rsi,rbp
  40f683:	mov    rdi,rbx
  40f686:	call   405350 <test_print@@Base+0xe80>
  40f68b:	jmp    40f5f2 <flatcc_json_printer_struct_as_root@@Base+0x42>
  40f690:	mov    esi,0x20
  40f695:	mov    rdx,rbp
  40f698:	call   403200 <memset@plt>
  40f69d:	mov    rsi,QWORD PTR [rbx+0x28]
  40f6a1:	add    rsi,rbp
  40f6a4:	jmp    40f5f6 <flatcc_json_printer_struct_as_root@@Base+0x46>
  40f6a9:	nop    DWORD PTR [rax+0x0]
  40f6b0:	mov    eax,0xffffffff
  40f6b5:	jmp    40f627 <flatcc_json_printer_struct_as_root@@Base+0x77>
  40f6ba:	nop    WORD PTR [rax+rax*1+0x0]

000000000040f6c0 <flatcc_json_printer_table_as_root@@Base>:
  40f6c0:	endbr64 
  40f6c4:	push   r12
  40f6c6:	mov    r12,r8
  40f6c9:	push   rbp
  40f6ca:	mov    rbp,rsi
  40f6cd:	push   rbx
  40f6ce:	mov    rbx,rdi
  40f6d1:	sub    rsp,0x30
  40f6d5:	mov    rax,QWORD PTR fs:0x28
  40f6de:	mov    QWORD PTR [rsp+0x28],rax
  40f6e3:	xor    eax,eax
  40f6e5:	call   405ee0 <test_print@@Base+0x1a10>
  40f6ea:	test   eax,eax
  40f6ec:	je     40f810 <flatcc_json_printer_table_as_root@@Base+0x150>
  40f6f2:	mov    eax,DWORD PTR [rbp+0x0]
  40f6f5:	inc    DWORD PTR [rbx+0x38]
  40f6f8:	add    rbp,rax
  40f6fb:	mov    rax,QWORD PTR [rbx+0x28]
  40f6ff:	mov    rsi,rsp
  40f702:	lea    rdx,[rax+0x1]
  40f706:	mov    QWORD PTR [rbx+0x28],rdx
  40f70a:	mov    BYTE PTR [rax],0x7b
  40f70d:	mov    QWORD PTR [rsp+0x14],0x63
  40f716:	mov    QWORD PTR [rsp],rbp
  40f71a:	mov    rdi,rbx
  40f71d:	movsxd rax,DWORD PTR [rbp+0x0]
  40f721:	sub    rbp,rax
  40f724:	movzx  eax,WORD PTR [rbp+0x0]
  40f728:	mov    QWORD PTR [rsp+0x8],rbp
  40f72d:	mov    DWORD PTR [rsp+0x10],eax
  40f731:	call   r12
  40f734:	cmp    BYTE PTR [rbx+0x31],0x0
  40f738:	jne    40f7b0 <flatcc_json_printer_table_as_root@@Base+0xf0>
  40f73a:	mov    rsi,QWORD PTR [rbx+0x28]
  40f73e:	lea    rax,[rsi+0x1]
  40f742:	mov    QWORD PTR [rbx+0x28],rax
  40f746:	mov    BYTE PTR [rsi],0x7d
  40f749:	cmp    BYTE PTR [rbx+0x31],0x0
  40f74d:	jne    40f790 <flatcc_json_printer_table_as_root@@Base+0xd0>
  40f74f:	mov    esi,0x1
  40f754:	mov    rdi,rbx
  40f757:	call   QWORD PTR [rbx+0x48]
  40f75a:	mov    eax,DWORD PTR [rbx+0x3c]
  40f75d:	test   eax,eax
  40f75f:	jne    40f810 <flatcc_json_printer_table_as_root@@Base+0x150>
  40f765:	mov    rax,QWORD PTR [rbx+0x28]
  40f769:	sub    rax,QWORD PTR [rbx]
  40f76c:	add    eax,DWORD PTR [rbx+0x18]
  40f76f:	mov    rcx,QWORD PTR [rsp+0x28]
  40f774:	xor    rcx,QWORD PTR fs:0x28
  40f77d:	jne    40f81a <flatcc_json_printer_table_as_root@@Base+0x15a>
  40f783:	add    rsp,0x30
  40f787:	pop    rbx
  40f788:	pop    rbp
  40f789:	pop    r12
  40f78b:	ret    
  40f78c:	nop    DWORD PTR [rax+0x0]
  40f790:	mov    edx,DWORD PTR [rbx+0x38]
  40f793:	test   edx,edx
  40f795:	jne    40f74f <flatcc_json_printer_table_as_root@@Base+0x8f>
  40f797:	mov    rax,QWORD PTR [rbx+0x28]
  40f79b:	lea    rdx,[rax+0x1]
  40f79f:	mov    QWORD PTR [rbx+0x28],rdx
  40f7a3:	mov    BYTE PTR [rax],0xa
  40f7a6:	jmp    40f74f <flatcc_json_printer_table_as_root@@Base+0x8f>
  40f7a8:	nop    DWORD PTR [rax+rax*1+0x0]
  40f7b0:	mov    rax,QWORD PTR [rbx+0x28]
  40f7b4:	lea    rdx,[rax+0x1]
  40f7b8:	mov    QWORD PTR [rbx+0x28],rdx
  40f7bc:	mov    BYTE PTR [rax],0xa
  40f7bf:	mov    eax,DWORD PTR [rbx+0x38]
  40f7c2:	movzx  esi,BYTE PTR [rbx+0x31]
  40f7c6:	lea    ebp,[rax-0x1]
  40f7c9:	imul   esi,ebp
  40f7cc:	mov    rdi,QWORD PTR [rbx+0x28]
  40f7d0:	mov    DWORD PTR [rbx+0x38],ebp
  40f7d3:	movsxd rbp,esi
  40f7d6:	lea    rax,[rdi+rbp*1]
  40f7da:	cmp    QWORD PTR [rbx+0x20],rax
  40f7de:	jae    40f7f0 <flatcc_json_printer_table_as_root@@Base+0x130>
  40f7e0:	mov    rsi,rbp
  40f7e3:	mov    rdi,rbx
  40f7e6:	call   405350 <test_print@@Base+0xe80>
  40f7eb:	jmp    40f73a <flatcc_json_printer_table_as_root@@Base+0x7a>
  40f7f0:	mov    esi,0x20
  40f7f5:	mov    rdx,rbp
  40f7f8:	call   403200 <memset@plt>
  40f7fd:	mov    rsi,QWORD PTR [rbx+0x28]
  40f801:	add    rsi,rbp
  40f804:	jmp    40f73e <flatcc_json_printer_table_as_root@@Base+0x7e>
  40f809:	nop    DWORD PTR [rax+0x0]
  40f810:	mov    eax,0xffffffff
  40f815:	jmp    40f76f <flatcc_json_printer_table_as_root@@Base+0xaf>
  40f81a:	call   4031d0 <__stack_chk_fail@plt>
  40f81f:	nop

000000000040f820 <flatcc_json_printer_struct_as_nested_root@@Base>:
  40f820:	endbr64 
  40f824:	lea    eax,[rdx+rdx*1+0x4]
  40f828:	cmp    eax,DWORD PTR [rsi+0x10]
  40f82b:	jge    40f8d0 <flatcc_json_printer_struct_as_nested_root@@Base+0xb0>
  40f831:	mov    r10,QWORD PTR [rsi+0x8]
  40f835:	movzx  eax,WORD PTR [r10+rax*1]
  40f83a:	test   ax,ax
  40f83d:	je     40f8d0 <flatcc_json_printer_struct_as_nested_root@@Base+0xb0>
  40f843:	add    rax,QWORD PTR [rsi]
  40f846:	je     40f8d0 <flatcc_json_printer_struct_as_nested_root@@Base+0xb0>
  40f84c:	push   r14
  40f84e:	mov    r14,rsi
  40f851:	push   r13
  40f853:	mov    r13,rcx
  40f856:	mov    rcx,r9
  40f859:	push   r12
  40f85b:	mov    r12d,r8d
  40f85e:	push   rbp
  40f85f:	mov    rbp,rdi
  40f862:	push   rbx
  40f863:	mov    ebx,DWORD PTR [rax]
  40f865:	add    rbx,rax
  40f868:	mov    edx,DWORD PTR [rbx]
  40f86a:	mov    rsi,rbx
  40f86d:	call   405ee0 <test_print@@Base+0x1a10>
  40f872:	test   eax,eax
  40f874:	je     40f8c6 <flatcc_json_printer_struct_as_nested_root@@Base+0xa6>
  40f876:	mov    eax,DWORD PTR [r14+0x18]
  40f87a:	lea    edx,[rax+0x1]
  40f87d:	mov    DWORD PTR [r14+0x18],edx
  40f881:	test   eax,eax
  40f883:	jne    40f8d8 <flatcc_json_printer_struct_as_nested_root@@Base+0xb8>
  40f885:	movsxd rdx,r12d
  40f888:	mov    rsi,r13
  40f88b:	mov    rdi,rbp
  40f88e:	call   406380 <test_print@@Base+0x1eb0>
  40f893:	mov    rax,QWORD PTR [rbp+0x28]
  40f897:	inc    DWORD PTR [rbp+0x38]
  40f89a:	lea    rdx,[rax+0x1]
  40f89e:	mov    QWORD PTR [rbp+0x28],rdx
  40f8a2:	mov    BYTE PTR [rax],0x7b
  40f8a5:	mov    rdi,rbp
  40f8a8:	mov    esi,DWORD PTR [rbx]
  40f8aa:	add    rsi,rbx
  40f8ad:	call   QWORD PTR [rsp+0x30]
  40f8b1:	cmp    BYTE PTR [rbp+0x31],0x0
  40f8b5:	jne    40f8f0 <flatcc_json_printer_struct_as_nested_root@@Base+0xd0>
  40f8b7:	mov    rsi,QWORD PTR [rbp+0x28]
  40f8bb:	lea    rax,[rsi+0x1]
  40f8bf:	mov    QWORD PTR [rbp+0x28],rax
  40f8c3:	mov    BYTE PTR [rsi],0x7d
  40f8c6:	pop    rbx
  40f8c7:	pop    rbp
  40f8c8:	pop    r12
  40f8ca:	pop    r13
  40f8cc:	pop    r14
  40f8ce:	ret    
  40f8cf:	nop
  40f8d0:	ret    
  40f8d1:	nop    DWORD PTR [rax+0x0]
  40f8d8:	mov    rax,QWORD PTR [rbp+0x28]
  40f8dc:	lea    rdx,[rax+0x1]
  40f8e0:	mov    QWORD PTR [rbp+0x28],rdx
  40f8e4:	mov    BYTE PTR [rax],0x2c
  40f8e7:	jmp    40f885 <flatcc_json_printer_struct_as_nested_root@@Base+0x65>
  40f8e9:	nop    DWORD PTR [rax+0x0]
  40f8f0:	mov    rax,QWORD PTR [rbp+0x28]
  40f8f4:	lea    rdx,[rax+0x1]
  40f8f8:	mov    QWORD PTR [rbp+0x28],rdx
  40f8fc:	mov    BYTE PTR [rax],0xa
  40f8ff:	mov    eax,DWORD PTR [rbp+0x38]
  40f902:	movzx  esi,BYTE PTR [rbp+0x31]
  40f906:	lea    ebx,[rax-0x1]
  40f909:	imul   esi,ebx
  40f90c:	mov    rdi,QWORD PTR [rbp+0x28]
  40f910:	mov    DWORD PTR [rbp+0x38],ebx
  40f913:	movsxd rbx,esi
  40f916:	lea    rax,[rdi+rbx*1]
  40f91a:	cmp    QWORD PTR [rbp+0x20],rax
  40f91e:	jae    40f930 <flatcc_json_printer_struct_as_nested_root@@Base+0x110>
  40f920:	mov    rsi,rbx
  40f923:	mov    rdi,rbp
  40f926:	call   405350 <test_print@@Base+0xe80>
  40f92b:	jmp    40f8b7 <flatcc_json_printer_struct_as_nested_root@@Base+0x97>
  40f92d:	nop    DWORD PTR [rax]
  40f930:	mov    rdx,rbx
  40f933:	mov    esi,0x20
  40f938:	call   403200 <memset@plt>
  40f93d:	add    rbx,QWORD PTR [rbp+0x28]
  40f941:	mov    rsi,rbx
  40f944:	jmp    40f8bb <flatcc_json_printer_struct_as_nested_root@@Base+0x9b>
  40f949:	nop    DWORD PTR [rax+0x0]

000000000040f950 <flatcc_json_printer_table_as_nested_root@@Base>:
  40f950:	endbr64 
  40f954:	push   r15
  40f956:	push   r14
  40f958:	push   r13
  40f95a:	push   r12
  40f95c:	push   rbp
  40f95d:	push   rbx
  40f95e:	sub    rsp,0x48
  40f962:	mov    DWORD PTR [rsp],r8d
  40f966:	mov    r13,QWORD PTR [rsp+0x80]
  40f96e:	mov    rax,QWORD PTR fs:0x28
  40f977:	mov    QWORD PTR [rsp+0x38],rax
  40f97c:	xor    eax,eax
  40f97e:	lea    eax,[rdx+rdx*1+0x4]
  40f982:	cmp    eax,DWORD PTR [rsi+0x10]
  40f985:	jge    40fadd <flatcc_json_printer_table_as_nested_root@@Base+0x18d>
  40f98b:	mov    rdx,QWORD PTR [rsi+0x8]
  40f98f:	mov    r14,rsi
  40f992:	movzx  eax,WORD PTR [rdx+rax*1]
  40f996:	test   ax,ax
  40f999:	je     40fadd <flatcc_json_printer_table_as_nested_root@@Base+0x18d>
  40f99f:	add    rax,QWORD PTR [rsi]
  40f9a2:	je     40fadd <flatcc_json_printer_table_as_nested_root@@Base+0x18d>
  40f9a8:	mov    ebp,DWORD PTR [rax]
  40f9aa:	mov    r12,rcx
  40f9ad:	add    rbp,rax
  40f9b0:	lea    r15,[rbp+0x4]
  40f9b4:	mov    edx,DWORD PTR [rbp+0x0]
  40f9b7:	mov    rcx,r9
  40f9ba:	mov    rsi,r15
  40f9bd:	mov    rbx,rdi
  40f9c0:	call   405ee0 <test_print@@Base+0x1a10>
  40f9c5:	test   eax,eax
  40f9c7:	je     40fadd <flatcc_json_printer_table_as_nested_root@@Base+0x18d>
  40f9cd:	mov    eax,DWORD PTR [r14+0x18]
  40f9d1:	mov    rsi,QWORD PTR [rbx+0x28]
  40f9d5:	lea    edx,[rax+0x1]
  40f9d8:	test   eax,eax
  40f9da:	mov    DWORD PTR [r14+0x18],edx
  40f9de:	movsxd r8,DWORD PTR [rsp]
  40f9e2:	jne    40fb20 <flatcc_json_printer_table_as_nested_root@@Base+0x1d0>
  40f9e8:	cmp    BYTE PTR [rbx+0x31],0x0
  40f9ec:	jne    40fb39 <flatcc_json_printer_table_as_nested_root@@Base+0x1e9>
  40f9f2:	cmp    QWORD PTR [rbx+0x20],rsi
  40f9f6:	ja     40fa0c <flatcc_json_printer_table_as_nested_root@@Base+0xbc>
  40f9f8:	xor    esi,esi
  40f9fa:	mov    rdi,rbx
  40f9fd:	mov    QWORD PTR [rsp],r8
  40fa01:	call   QWORD PTR [rbx+0x48]
  40fa04:	mov    rsi,QWORD PTR [rbx+0x28]
  40fa08:	mov    r8,QWORD PTR [rsp]
  40fa0c:	mov    BYTE PTR [rsi],0x22
  40fa0f:	xor    edi,edi
  40fa11:	mov    rdx,r8
  40fa14:	cmp    BYTE PTR [rbx+0x32],0x0
  40fa18:	sete   dil
  40fa1c:	add    rdi,QWORD PTR [rbx+0x28]
  40fa20:	lea    rax,[rdi+r8*1]
  40fa24:	mov    QWORD PTR [rbx+0x28],rdi
  40fa28:	cmp    QWORD PTR [rbx+0x20],rax
  40fa2c:	ja     40fb00 <flatcc_json_printer_table_as_nested_root@@Base+0x1b0>
  40fa32:	mov    rsi,r12
  40fa35:	mov    rdi,rbx
  40fa38:	call   4052c0 <test_print@@Base+0xdf0>
  40fa3d:	mov    r8,QWORD PTR [rbx+0x28]
  40fa41:	mov    BYTE PTR [r8],0x22
  40fa45:	xor    eax,eax
  40fa47:	cmp    BYTE PTR [rbx+0x32],0x0
  40fa4b:	sete   al
  40fa4e:	add    rax,QWORD PTR [rbx+0x28]
  40fa52:	lea    rdx,[rax+0x1]
  40fa56:	mov    QWORD PTR [rbx+0x28],rdx
  40fa5a:	mov    BYTE PTR [rax],0x3a
  40fa5d:	mov    rax,QWORD PTR [rbx+0x28]
  40fa61:	mov    BYTE PTR [rax],0x20
  40fa64:	xor    eax,eax
  40fa66:	cmp    BYTE PTR [rbx+0x31],0x0
  40fa6a:	setne  al
  40fa6d:	mov    edx,DWORD PTR [r14+0x14]
  40fa71:	add    rax,QWORD PTR [rbx+0x28]
  40fa75:	mov    QWORD PTR [rbx+0x28],rax
  40fa79:	dec    edx
  40fa7b:	je     40fb80 <flatcc_json_printer_table_as_nested_root@@Base+0x230>
  40fa81:	mov    ecx,DWORD PTR [rbp+0x4]
  40fa84:	inc    DWORD PTR [rbx+0x38]
  40fa87:	add    r15,rcx
  40fa8a:	lea    rcx,[rax+0x1]
  40fa8e:	mov    QWORD PTR [rbx+0x28],rcx
  40fa92:	mov    BYTE PTR [rax],0x7b
  40fa95:	mov    DWORD PTR [rsp+0x28],0x0
  40fa9d:	mov    DWORD PTR [rsp+0x24],edx
  40faa1:	mov    QWORD PTR [rsp+0x10],r15
  40faa6:	lea    rsi,[rsp+0x10]
  40faab:	movsxd rax,DWORD PTR [r15]
  40faae:	mov    rdi,rbx
  40fab1:	sub    r15,rax
  40fab4:	movzx  eax,WORD PTR [r15]
  40fab8:	mov    QWORD PTR [rsp+0x18],r15
  40fabd:	mov    DWORD PTR [rsp+0x20],eax
  40fac1:	call   r13
  40fac4:	cmp    BYTE PTR [rbx+0x31],0x0
  40fac8:	jne    40fba0 <flatcc_json_printer_table_as_nested_root@@Base+0x250>
  40face:	mov    rsi,QWORD PTR [rbx+0x28]
  40fad2:	lea    rax,[rsi+0x1]
  40fad6:	mov    QWORD PTR [rbx+0x28],rax
  40fada:	mov    BYTE PTR [rsi],0x7d
  40fadd:	mov    rax,QWORD PTR [rsp+0x38]
  40fae2:	xor    rax,QWORD PTR fs:0x28
  40faeb:	jne    40fc29 <flatcc_json_printer_table_as_nested_root@@Base+0x2d9>
  40faf1:	add    rsp,0x48
  40faf5:	pop    rbx
  40faf6:	pop    rbp
  40faf7:	pop    r12
  40faf9:	pop    r13
  40fafb:	pop    r14
  40fafd:	pop    r15
  40faff:	ret    
  40fb00:	mov    rsi,r12
  40fb03:	mov    QWORD PTR [rsp],r8
  40fb07:	call   403240 <memcpy@plt>
  40fb0c:	mov    r8,QWORD PTR [rsp]
  40fb10:	add    r8,QWORD PTR [rbx+0x28]
  40fb14:	mov    QWORD PTR [rbx+0x28],r8
  40fb18:	jmp    40fa41 <flatcc_json_printer_table_as_nested_root@@Base+0xf1>
  40fb1d:	nop    DWORD PTR [rax]
  40fb20:	lea    rax,[rsi+0x1]
  40fb24:	mov    QWORD PTR [rbx+0x28],rax
  40fb28:	mov    BYTE PTR [rsi],0x2c
  40fb2b:	cmp    BYTE PTR [rbx+0x31],0x0
  40fb2f:	mov    rsi,QWORD PTR [rbx+0x28]
  40fb33:	je     40f9f2 <flatcc_json_printer_table_as_nested_root@@Base+0xa2>
  40fb39:	lea    rax,[rsi+0x1]
  40fb3d:	mov    QWORD PTR [rbx+0x28],rax
  40fb41:	mov    BYTE PTR [rsi],0xa
  40fb44:	movzx  esi,BYTE PTR [rbx+0x31]
  40fb48:	mov    rdi,QWORD PTR [rbx+0x28]
  40fb4c:	imul   esi,DWORD PTR [rbx+0x38]
  40fb50:	movsxd rcx,esi
  40fb53:	lea    rax,[rdi+rcx*1]
  40fb57:	cmp    QWORD PTR [rbx+0x20],rax
  40fb5b:	jae    40fbe0 <flatcc_json_printer_table_as_nested_root@@Base+0x290>
  40fb61:	mov    rsi,rcx
  40fb64:	mov    rdi,rbx
  40fb67:	mov    QWORD PTR [rsp],r8
  40fb6b:	call   405350 <test_print@@Base+0xe80>
  40fb70:	mov    rsi,QWORD PTR [rbx+0x28]
  40fb74:	mov    r8,QWORD PTR [rsp]
  40fb78:	jmp    40fa0c <flatcc_json_printer_table_as_nested_root@@Base+0xbc>
  40fb7d:	nop    DWORD PTR [rax]
  40fb80:	mov    eax,DWORD PTR [rbx+0x3c]
  40fb83:	test   eax,eax
  40fb85:	jne    40fadd <flatcc_json_printer_table_as_nested_root@@Base+0x18d>
  40fb8b:	mov    DWORD PTR [rbx+0x3c],0x2
  40fb92:	jmp    40fadd <flatcc_json_printer_table_as_nested_root@@Base+0x18d>
  40fb97:	nop    WORD PTR [rax+rax*1+0x0]
  40fba0:	mov    rax,QWORD PTR [rbx+0x28]
  40fba4:	lea    rdx,[rax+0x1]
  40fba8:	mov    QWORD PTR [rbx+0x28],rdx
  40fbac:	mov    BYTE PTR [rax],0xa
  40fbaf:	mov    eax,DWORD PTR [rbx+0x38]
  40fbb2:	movzx  esi,BYTE PTR [rbx+0x31]
  40fbb6:	lea    ebp,[rax-0x1]
  40fbb9:	imul   esi,ebp
  40fbbc:	mov    rdi,QWORD PTR [rbx+0x28]
  40fbc0:	mov    DWORD PTR [rbx+0x38],ebp
  40fbc3:	movsxd rbp,esi
  40fbc6:	lea    rax,[rdi+rbp*1]
  40fbca:	cmp    QWORD PTR [rbx+0x20],rax
  40fbce:	jae    40fc10 <flatcc_json_printer_table_as_nested_root@@Base+0x2c0>
  40fbd0:	mov    rsi,rbp
  40fbd3:	mov    rdi,rbx
  40fbd6:	call   405350 <test_print@@Base+0xe80>
  40fbdb:	jmp    40face <flatcc_json_printer_table_as_nested_root@@Base+0x17e>
  40fbe0:	mov    rdx,rcx
  40fbe3:	mov    esi,0x20
  40fbe8:	mov    QWORD PTR [rsp+0x8],r8
  40fbed:	mov    QWORD PTR [rsp],rcx
  40fbf1:	call   403200 <memset@plt>
  40fbf6:	mov    rcx,QWORD PTR [rsp]
  40fbfa:	mov    r8,QWORD PTR [rsp+0x8]
  40fbff:	add    rcx,QWORD PTR [rbx+0x28]
  40fc03:	mov    rsi,rcx
  40fc06:	mov    QWORD PTR [rbx+0x28],rcx
  40fc0a:	jmp    40fa0c <flatcc_json_printer_table_as_nested_root@@Base+0xbc>
  40fc0f:	nop
  40fc10:	mov    esi,0x20
  40fc15:	mov    rdx,rbp
  40fc18:	call   403200 <memset@plt>
  40fc1d:	mov    rsi,QWORD PTR [rbx+0x28]
  40fc21:	add    rsi,rbp
  40fc24:	jmp    40fad2 <flatcc_json_printer_table_as_nested_root@@Base+0x182>
  40fc29:	call   4031d0 <__stack_chk_fail@plt>
  40fc2e:	xchg   ax,ax

000000000040fc30 <flatcc_json_printer_init@@Base>:
  40fc30:	endbr64 
  40fc34:	vpxor  xmm0,xmm0,xmm0
  40fc38:	push   rbx
  40fc39:	mov    rbx,rdi
  40fc3c:	vmovups XMMWORD PTR [rdi],xmm0
  40fc40:	vmovups XMMWORD PTR [rdi+0x10],xmm0
  40fc45:	vmovups XMMWORD PTR [rdi+0x20],xmm0
  40fc4a:	vmovups XMMWORD PTR [rdi+0x30],xmm0
  40fc4f:	vmovups XMMWORD PTR [rdi+0x40],xmm0
  40fc54:	test   rsi,rsi
  40fc57:	je     40fca0 <flatcc_json_printer_init@@Base+0x70>
  40fc59:	lea    rax,[rip+0xffffffffffff57c0]        # 405420 <test_print@@Base+0xf50>
  40fc60:	mov    QWORD PTR [rbx+0x40],rsi
  40fc64:	mov    QWORD PTR [rbx+0x48],rax
  40fc68:	mov    edi,0x4040
  40fc6d:	call   403250 <malloc@plt>
  40fc72:	mov    QWORD PTR [rbx],rax
  40fc75:	test   rax,rax
  40fc78:	je     40fcac <flatcc_json_printer_init@@Base+0x7c>
  40fc7a:	mov    QWORD PTR [rbx+0x28],rax
  40fc7e:	add    rax,0x4000
  40fc84:	mov    QWORD PTR [rbx+0x20],rax
  40fc88:	mov    BYTE PTR [rbx+0x30],0x1
  40fc8c:	mov    QWORD PTR [rbx+0x8],0x4040
  40fc94:	mov    QWORD PTR [rbx+0x10],0x4000
  40fc9c:	xor    eax,eax
  40fc9e:	pop    rbx
  40fc9f:	ret    
  40fca0:	mov    rax,QWORD PTR [rip+0x5339]        # 414fe0 <stdout@GLIBC_2.2.5>
  40fca7:	mov    rsi,QWORD PTR [rax]
  40fcaa:	jmp    40fc59 <flatcc_json_printer_init@@Base+0x29>
  40fcac:	mov    eax,0xffffffff
  40fcb1:	pop    rbx
  40fcb2:	ret    
  40fcb3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40fcbe:	xchg   ax,ax

000000000040fcc0 <flatcc_json_printer_init_buffer@@Base>:
  40fcc0:	endbr64 
  40fcc4:	cmp    rdx,0x3f
  40fcc8:	jbe    40fd05 <flatcc_json_printer_init_buffer@@Base+0x45>
  40fcca:	mov    QWORD PTR [rdi+0x8],rdx
  40fcce:	sub    rdx,0x40
  40fcd2:	vpxor  xmm0,xmm0,xmm0
  40fcd6:	mov    QWORD PTR [rdi+0x10],rdx
  40fcda:	lea    rax,[rip+0xffffffffffff559f]        # 405280 <test_print@@Base+0xdb0>
  40fce1:	add    rdx,rsi
  40fce4:	vmovups XMMWORD PTR [rdi+0x18],xmm0
  40fce9:	vmovups XMMWORD PTR [rdi+0x28],xmm0
  40fcee:	mov    QWORD PTR [rdi+0x48],rax
  40fcf2:	vmovups XMMWORD PTR [rdi+0x38],xmm0
  40fcf7:	mov    QWORD PTR [rdi],rsi
  40fcfa:	mov    QWORD PTR [rdi+0x28],rsi
  40fcfe:	mov    QWORD PTR [rdi+0x20],rdx
  40fd02:	xor    eax,eax
  40fd04:	ret    
  40fd05:	push   rax
  40fd06:	lea    rcx,[rip+0xd13]        # 410a20 <_IO_stdin_used@@Base+0xa20>
  40fd0d:	mov    edx,0x48d
  40fd12:	lea    rsi,[rip+0xaff]        # 410818 <_IO_stdin_used@@Base+0x818>
  40fd19:	lea    rdi,[rip+0xc10]        # 410930 <_IO_stdin_used@@Base+0x930>
  40fd20:	call   4031f0 <__assert_fail@plt>
  40fd25:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000040fd30 <flatcc_json_printer_init_dynamic_buffer@@Base>:
  40fd30:	endbr64 
  40fd34:	push   r12
  40fd36:	push   rbp
  40fd37:	push   rbx
  40fd38:	mov    rbx,rdi
  40fd3b:	test   rsi,rsi
  40fd3e:	je     40fda0 <flatcc_json_printer_init_dynamic_buffer@@Base+0x70>
  40fd40:	cmp    rsi,0x40
  40fd44:	mov    ebp,0x40
  40fd49:	cmovae rbp,rsi
  40fd4d:	lea    r12,[rbp-0x40]
  40fd51:	vpxor  xmm0,xmm0,xmm0
  40fd55:	vmovups XMMWORD PTR [rbx+0x18],xmm0
  40fd5a:	vmovups XMMWORD PTR [rbx+0x28],xmm0
  40fd5f:	vmovups XMMWORD PTR [rbx+0x38],xmm0
  40fd64:	mov    rdi,rbp
  40fd67:	call   403250 <malloc@plt>
  40fd6c:	mov    QWORD PTR [rbx+0x10],r12
  40fd70:	lea    rdx,[rip+0xffffffffffff5749]        # 4054c0 <test_print@@Base+0xff0>
  40fd77:	add    r12,rax
  40fd7a:	mov    QWORD PTR [rbx],rax
  40fd7d:	mov    BYTE PTR [rbx+0x30],0x1
  40fd81:	mov    QWORD PTR [rbx+0x8],rbp
  40fd85:	mov    QWORD PTR [rbx+0x28],rax
  40fd89:	mov    QWORD PTR [rbx+0x20],r12
  40fd8d:	mov    QWORD PTR [rbx+0x48],rdx
  40fd91:	test   rax,rax
  40fd94:	je     40fdad <flatcc_json_printer_init_dynamic_buffer@@Base+0x7d>
  40fd96:	xor    eax,eax
  40fd98:	pop    rbx
  40fd99:	pop    rbp
  40fd9a:	pop    r12
  40fd9c:	ret    
  40fd9d:	nop    DWORD PTR [rax]
  40fda0:	mov    r12d,0xfc0
  40fda6:	mov    ebp,0x1000
  40fdab:	jmp    40fd51 <flatcc_json_printer_init_dynamic_buffer@@Base+0x21>
  40fdad:	mov    edx,DWORD PTR [rbx+0x3c]
  40fdb0:	mov    eax,0xffffffff
  40fdb5:	test   edx,edx
  40fdb7:	jne    40fd98 <flatcc_json_printer_init_dynamic_buffer@@Base+0x68>
  40fdb9:	mov    DWORD PTR [rbx+0x3c],0x3
  40fdc0:	jmp    40fd98 <flatcc_json_printer_init_dynamic_buffer@@Base+0x68>
  40fdc2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40fdcd:	nop    DWORD PTR [rax]

000000000040fdd0 <flatcc_json_printer_get_buffer@@Base>:
  40fdd0:	endbr64 
  40fdd4:	push   rbp
  40fdd5:	mov    rbp,rsi
  40fdd8:	xor    esi,esi
  40fdda:	push   rbx
  40fddb:	mov    rbx,rdi
  40fdde:	sub    rsp,0x8
  40fde2:	call   QWORD PTR [rdi+0x48]
  40fde5:	mov    rax,QWORD PTR [rbx]
  40fde8:	test   rbp,rbp
  40fdeb:	je     40fdf8 <flatcc_json_printer_get_buffer@@Base+0x28>
  40fded:	mov    rdx,QWORD PTR [rbx+0x28]
  40fdf1:	sub    rdx,rax
  40fdf4:	mov    QWORD PTR [rbp+0x0],rdx
  40fdf8:	add    rsp,0x8
  40fdfc:	pop    rbx
  40fdfd:	pop    rbp
  40fdfe:	ret    
  40fdff:	nop

000000000040fe00 <flatcc_json_printer_finalize_dynamic_buffer@@Base>:
  40fe00:	endbr64 
  40fe04:	push   rbx
  40fe05:	mov    rbx,rdi
  40fe08:	call   40fdd0 <flatcc_json_printer_get_buffer@@Base>
  40fe0d:	vpxor  xmm0,xmm0,xmm0
  40fe11:	vmovups XMMWORD PTR [rbx],xmm0
  40fe15:	vmovups XMMWORD PTR [rbx+0x10],xmm0
  40fe1a:	vmovups XMMWORD PTR [rbx+0x20],xmm0
  40fe1f:	vmovups XMMWORD PTR [rbx+0x30],xmm0
  40fe24:	vmovups XMMWORD PTR [rbx+0x40],xmm0
  40fe29:	pop    rbx
  40fe2a:	ret    
  40fe2b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040fe30 <flatcc_json_printer_clear@@Base>:
  40fe30:	endbr64 
  40fe34:	push   rbx
  40fe35:	mov    rbx,rdi
  40fe38:	cmp    BYTE PTR [rdi+0x30],0x0
  40fe3c:	je     40fe4b <flatcc_json_printer_clear@@Base+0x1b>
  40fe3e:	mov    rdi,QWORD PTR [rdi]
  40fe41:	test   rdi,rdi
  40fe44:	je     40fe4b <flatcc_json_printer_clear@@Base+0x1b>
  40fe46:	call   403190 <free@plt>
  40fe4b:	vpxor  xmm0,xmm0,xmm0
  40fe4f:	vmovups XMMWORD PTR [rbx],xmm0
  40fe53:	vmovups XMMWORD PTR [rbx+0x10],xmm0
  40fe58:	vmovups XMMWORD PTR [rbx+0x20],xmm0
  40fe5d:	vmovups XMMWORD PTR [rbx+0x30],xmm0
  40fe62:	vmovups XMMWORD PTR [rbx+0x40],xmm0
  40fe67:	pop    rbx
  40fe68:	ret    
  40fe69:	nop    DWORD PTR [rax+0x0]

000000000040fe70 <__libc_csu_init@@Base>:
  40fe70:	endbr64 
  40fe74:	push   r15
  40fe76:	lea    r15,[rip+0x4f83]        # 414e00 <_IO_stdin_used@@Base+0x4e00>
  40fe7d:	push   r14
  40fe7f:	mov    r14,rdx
  40fe82:	push   r13
  40fe84:	mov    r13,rsi
  40fe87:	push   r12
  40fe89:	mov    r12d,edi
  40fe8c:	push   rbp
  40fe8d:	lea    rbp,[rip+0x4f74]        # 414e08 <_IO_stdin_used@@Base+0x4e08>
  40fe94:	push   rbx
  40fe95:	sub    rbp,r15
  40fe98:	sub    rsp,0x8
  40fe9c:	call   403000 <free@plt-0x190>
  40fea1:	sar    rbp,0x3
  40fea5:	je     40fec6 <__libc_csu_init@@Base+0x56>
  40fea7:	xor    ebx,ebx
  40fea9:	nop    DWORD PTR [rax+0x0]
  40feb0:	mov    rdx,r14
  40feb3:	mov    rsi,r13
  40feb6:	mov    edi,r12d
  40feb9:	call   QWORD PTR [r15+rbx*8]
  40febd:	add    rbx,0x1
  40fec1:	cmp    rbp,rbx
  40fec4:	jne    40feb0 <__libc_csu_init@@Base+0x40>
  40fec6:	add    rsp,0x8
  40feca:	pop    rbx
  40fecb:	pop    rbp
  40fecc:	pop    r12
  40fece:	pop    r13
  40fed0:	pop    r14
  40fed2:	pop    r15
  40fed4:	ret    
  40fed5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000040fee0 <__libc_csu_fini@@Base>:
  40fee0:	endbr64 
  40fee4:	ret    

Disassembly of section .fini:

000000000040fee8 <.fini>:
  40fee8:	endbr64 
  40feec:	sub    rsp,0x8
  40fef0:	add    rsp,0x8
  40fef4:	ret    
