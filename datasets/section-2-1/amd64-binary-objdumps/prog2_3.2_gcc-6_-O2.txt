
../repos/prog2/3.2:     file format elf64-x86-64


Disassembly of section .init:

0000000000401000 <.init>:
  401000:	endbr64 
  401004:	sub    rsp,0x8
  401008:	mov    rax,QWORD PTR [rip+0x2fe9]        # 403ff8 <__gmon_start__>
  40100f:	test   rax,rax
  401012:	je     401016 <puts@plt-0x1a>
  401014:	call   rax
  401016:	add    rsp,0x8
  40101a:	ret    

Disassembly of section .plt:

0000000000401020 <puts@plt-0x10>:
  401020:	push   QWORD PTR [rip+0x2fe2]        # 404008 <_IO_stdin_used@@Base+0x2008>
  401026:	jmp    QWORD PTR [rip+0x2fe4]        # 404010 <_IO_stdin_used@@Base+0x2010>
  40102c:	nop    DWORD PTR [rax+0x0]

0000000000401030 <puts@plt>:
  401030:	jmp    QWORD PTR [rip+0x2fe2]        # 404018 <puts@GLIBC_2.2.5>
  401036:	push   0x0
  40103b:	jmp    401020 <puts@plt-0x10>

0000000000401040 <strlen@plt>:
  401040:	jmp    QWORD PTR [rip+0x2fda]        # 404020 <strlen@GLIBC_2.2.5>
  401046:	push   0x1
  40104b:	jmp    401020 <puts@plt-0x10>

0000000000401050 <__stack_chk_fail@plt>:
  401050:	jmp    QWORD PTR [rip+0x2fd2]        # 404028 <__stack_chk_fail@GLIBC_2.4>
  401056:	push   0x2
  40105b:	jmp    401020 <puts@plt-0x10>

0000000000401060 <__printf_chk@plt>:
  401060:	jmp    QWORD PTR [rip+0x2fca]        # 404030 <__printf_chk@GLIBC_2.3.4>
  401066:	push   0x3
  40106b:	jmp    401020 <puts@plt-0x10>

Disassembly of section .text:

0000000000401070 <main@@Base>:
  401070:	push   r15
  401072:	push   r14
  401074:	lea    rdi,[rip+0xf89]        # 402004 <_IO_stdin_used@@Base+0x4>
  40107b:	push   r13
  40107d:	push   r12
  40107f:	push   rbp
  401080:	push   rbx
  401081:	lea    rbx,[rip+0xf91]        # 402019 <_IO_stdin_used@@Base+0x19>
  401088:	sub    rsp,0x48
  40108c:	lea    r13,[rsp+0x10]
  401091:	mov    DWORD PTR [rsp+0x10],0x3
  401099:	mov    DWORD PTR [rsp+0x14],0xfffffffe
  4010a1:	mov    rax,QWORD PTR fs:0x28
  4010aa:	mov    QWORD PTR [rsp+0x38],rax
  4010af:	xor    eax,eax
  4010b1:	mov    DWORD PTR [rsp+0x18],0x4
  4010b9:	mov    DWORD PTR [rsp+0x1c],0x5
  4010c1:	lea    r14,[r13+0x18]
  4010c5:	mov    DWORD PTR [rsp+0x20],0x9
  4010cd:	mov    DWORD PTR [rsp+0x24],0x1
  4010d5:	mov    r12,r13
  4010d8:	call   401030 <puts@plt>
  4010dd:	lea    rsi,[rip+0xf2e]        # 402012 <_IO_stdin_used@@Base+0x12>
  4010e4:	mov    edi,0x1
  4010e9:	xor    eax,eax
  4010eb:	mov    rbp,r13
  4010ee:	call   401060 <__printf_chk@plt>
  4010f3:	nop    DWORD PTR [rax+rax*1+0x0]
  4010f8:	mov    edx,DWORD PTR [rbp+0x0]
  4010fb:	xor    eax,eax
  4010fd:	mov    rsi,rbx
  401100:	mov    edi,0x1
  401105:	add    rbp,0x4
  401109:	call   401060 <__printf_chk@plt>
  40110e:	cmp    rbp,r14
  401111:	jne    4010f8 <main@@Base+0x88>
  401113:	lea    rdi,[rip+0xf14]        # 40202e <_IO_stdin_used@@Base+0x2e>
  40111a:	lea    r15,[rip+0xef8]        # 402019 <_IO_stdin_used@@Base+0x19>
  401121:	mov    rbx,r13
  401124:	call   401030 <puts@plt>
  401129:	mov    r14,0x401570
  401130:	mov    edx,0x4
  401135:	mov    esi,0x6
  40113a:	mov    rdi,r13
  40113d:	mov    rcx,r14
  401140:	call   4015f0 <sort@@Base>
  401145:	lea    rsi,[rip+0xed1]        # 40201d <_IO_stdin_used@@Base+0x1d>
  40114c:	mov    edi,0x1
  401151:	xor    eax,eax
  401153:	call   401060 <__printf_chk@plt>
  401158:	nop    DWORD PTR [rax+rax*1+0x0]
  401160:	mov    edx,DWORD PTR [rbx]
  401162:	xor    eax,eax
  401164:	mov    rsi,r15
  401167:	mov    edi,0x1
  40116c:	add    rbx,0x4
  401170:	call   401060 <__printf_chk@plt>
  401175:	cmp    rbx,rbp
  401178:	jne    401160 <main@@Base+0xf0>
  40117a:	lea    rdi,[rip+0xead]        # 40202e <_IO_stdin_used@@Base+0x2e>
  401181:	lea    rbp,[rsp+0xc]
  401186:	call   401030 <puts@plt>
  40118b:	lea    rdi,[rip+0xe93]        # 402025 <_IO_stdin_used@@Base+0x25>
  401192:	mov    DWORD PTR [rsp+0x10],0x3
  40119a:	mov    DWORD PTR [rsp+0x14],0xfffffffe
  4011a2:	mov    DWORD PTR [rsp+0x18],0x4
  4011aa:	mov    DWORD PTR [rsp+0x1c],0x5
  4011b2:	mov    DWORD PTR [rsp+0x20],0x9
  4011ba:	mov    DWORD PTR [rsp+0x24],0x1
  4011c2:	call   401030 <puts@plt>
  4011c7:	mov    r8,r14
  4011ca:	mov    ecx,0x4
  4011cf:	mov    edx,0x6
  4011d4:	mov    rsi,r13
  4011d7:	mov    rdi,rbp
  4011da:	mov    DWORD PTR [rsp+0xc],0x4
  4011e2:	call   4016b0 <linear_search@@Base>
  4011e7:	test   rax,rax
  4011ea:	je     40141b <main@@Base+0x3ab>
  4011f0:	sub    rax,r13
  4011f3:	mov    edx,DWORD PTR [rsp+0xc]
  4011f7:	lea    rsi,[rip+0xe52]        # 402050 <_IO_stdin_used@@Base+0x50>
  4011fe:	sar    rax,0x2
  401202:	mov    edi,0x1
  401207:	mov    rcx,rax
  40120a:	xor    eax,eax
  40120c:	call   401060 <__printf_chk@plt>
  401211:	mov    rcx,r14
  401214:	mov    edx,0x4
  401219:	mov    esi,0x6
  40121e:	mov    rdi,r13
  401221:	mov    DWORD PTR [rsp+0x10],0x3
  401229:	mov    DWORD PTR [rsp+0x14],0xfffffffe
  401231:	mov    DWORD PTR [rsp+0x18],0x4
  401239:	mov    DWORD PTR [rsp+0x1c],0x5
  401241:	mov    DWORD PTR [rsp+0x20],0x9
  401249:	mov    DWORD PTR [rsp+0x24],0x1
  401251:	call   4015f0 <sort@@Base>
  401256:	lea    rdi,[rip+0xdd2]        # 40202f <_IO_stdin_used@@Base+0x2f>
  40125d:	call   401030 <puts@plt>
  401262:	mov    r8,r14
  401265:	mov    ecx,0x4
  40126a:	mov    edx,0x6
  40126f:	mov    rsi,r13
  401272:	mov    rdi,rbp
  401275:	call   401730 <binary_search@@Base>
  40127a:	test   rax,rax
  40127d:	je     401437 <main@@Base+0x3c7>
  401283:	sub    rax,r13
  401286:	mov    edx,DWORD PTR [rsp+0xc]
  40128a:	lea    rsi,[rip+0xdbf]        # 402050 <_IO_stdin_used@@Base+0x50>
  401291:	sar    rax,0x2
  401295:	mov    edi,0x1
  40129a:	mov    rcx,rax
  40129d:	xor    eax,eax
  40129f:	call   401060 <__printf_chk@plt>
  4012a4:	lea    rdi,[rip+0xd8e]        # 402039 <_IO_stdin_used@@Base+0x39>
  4012ab:	mov    DWORD PTR [rsp+0x10],0x3
  4012b3:	mov    DWORD PTR [rsp+0x14],0xfffffffe
  4012bb:	mov    DWORD PTR [rsp+0x18],0x4
  4012c3:	mov    DWORD PTR [rsp+0x1c],0x5
  4012cb:	lea    r15,[rip+0xd47]        # 402019 <_IO_stdin_used@@Base+0x19>
  4012d2:	mov    DWORD PTR [rsp+0x20],0x9
  4012da:	mov    DWORD PTR [rsp+0x24],0x1
  4012e2:	mov    rbp,r13
  4012e5:	call   401030 <puts@plt>
  4012ea:	lea    rsi,[rip+0xd21]        # 402012 <_IO_stdin_used@@Base+0x12>
  4012f1:	mov    edi,0x1
  4012f6:	xor    eax,eax
  4012f8:	call   401060 <__printf_chk@plt>
  4012fd:	nop    DWORD PTR [rax]
  401300:	mov    edx,DWORD PTR [rbp+0x0]
  401303:	xor    eax,eax
  401305:	mov    rsi,r15
  401308:	mov    edi,0x1
  40130d:	add    rbp,0x4
  401311:	call   401060 <__printf_chk@plt>
  401316:	cmp    rbp,rbx
  401319:	jne    401300 <main@@Base+0x290>
  40131b:	lea    rdi,[rip+0xd0c]        # 40202e <_IO_stdin_used@@Base+0x2e>
  401322:	lea    rbp,[rip+0xcf0]        # 402019 <_IO_stdin_used@@Base+0x19>
  401329:	call   401030 <puts@plt>
  40132e:	mov    rcx,r14
  401331:	mov    edx,0x4
  401336:	mov    esi,0x6
  40133b:	mov    rdi,r13
  40133e:	call   4017f0 <insertion_sort@@Base>
  401343:	lea    rsi,[rip+0xcd3]        # 40201d <_IO_stdin_used@@Base+0x1d>
  40134a:	mov    edi,0x1
  40134f:	xor    eax,eax
  401351:	call   401060 <__printf_chk@plt>
  401356:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401360:	mov    edx,DWORD PTR [r12]
  401364:	xor    eax,eax
  401366:	mov    rsi,rbp
  401369:	mov    edi,0x1
  40136e:	add    r12,0x4
  401372:	call   401060 <__printf_chk@plt>
  401377:	cmp    rbx,r12
  40137a:	jne    401360 <main@@Base+0x2f0>
  40137c:	lea    rdi,[rip+0xcab]        # 40202e <_IO_stdin_used@@Base+0x2e>
  401383:	lea    rbx,[rsp+0x33]
  401388:	call   401030 <puts@plt>
  40138d:	lea    rdi,[rip+0xcaf]        # 402043 <_IO_stdin_used@@Base+0x43>
  401394:	call   401030 <puts@plt>
  401399:	lea    rsi,[rip+0xc72]        # 402012 <_IO_stdin_used@@Base+0x12>
  4013a0:	mov    edi,0x1
  4013a5:	xor    eax,eax
  4013a7:	mov    DWORD PTR [rsp+0x33],0x615a6241
  4013af:	mov    BYTE PTR [rsp+0x37],0x0
  4013b4:	call   401060 <__printf_chk@plt>
  4013b9:	mov    rdi,rbx
  4013bc:	call   401030 <puts@plt>
  4013c1:	mov    rdi,rbx
  4013c4:	call   401040 <strlen@plt>
  4013c9:	mov    rcx,0x401590
  4013d0:	mov    edx,0x1
  4013d5:	mov    esi,eax
  4013d7:	mov    rdi,rbx
  4013da:	call   4015f0 <sort@@Base>
  4013df:	lea    rsi,[rip+0xc37]        # 40201d <_IO_stdin_used@@Base+0x1d>
  4013e6:	mov    edi,0x1
  4013eb:	xor    eax,eax
  4013ed:	call   401060 <__printf_chk@plt>
  4013f2:	mov    rdi,rbx
  4013f5:	call   401030 <puts@plt>
  4013fa:	xor    eax,eax
  4013fc:	mov    rcx,QWORD PTR [rsp+0x38]
  401401:	xor    rcx,QWORD PTR fs:0x28
  40140a:	jne    401453 <main@@Base+0x3e3>
  40140c:	add    rsp,0x48
  401410:	pop    rbx
  401411:	pop    rbp
  401412:	pop    r12
  401414:	pop    r13
  401416:	pop    r14
  401418:	pop    r15
  40141a:	ret    
  40141b:	mov    edx,DWORD PTR [rsp+0xc]
  40141f:	lea    rsi,[rip+0xc5a]        # 402080 <_IO_stdin_used@@Base+0x80>
  401426:	mov    edi,0x1
  40142b:	xor    eax,eax
  40142d:	call   401060 <__printf_chk@plt>
  401432:	jmp    401211 <main@@Base+0x1a1>
  401437:	mov    edx,DWORD PTR [rsp+0xc]
  40143b:	lea    rsi,[rip+0xc3e]        # 402080 <_IO_stdin_used@@Base+0x80>
  401442:	mov    edi,0x1
  401447:	xor    eax,eax
  401449:	call   401060 <__printf_chk@plt>
  40144e:	jmp    4012a4 <main@@Base+0x234>
  401453:	call   401050 <__stack_chk_fail@plt>
  401458:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401460 <_start@@Base>:
  401460:	endbr64 
  401464:	xor    ebp,ebp
  401466:	mov    r9,rdx
  401469:	pop    rsi
  40146a:	mov    rdx,rsp
  40146d:	and    rsp,0xfffffffffffffff0
  401471:	push   rax
  401472:	push   rsp
  401473:	mov    r8,0x401920
  40147a:	mov    rcx,0x4018b0
  401481:	mov    rdi,0x401070
  401488:	call   QWORD PTR [rip+0x2b62]        # 403ff0 <__libc_start_main@GLIBC_2.2.5>
  40148e:	hlt    
  40148f:	nop
  401490:	endbr64 
  401494:	ret    
  401495:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40149f:	nop
  4014a0:	mov    eax,0x40404f
  4014a5:	push   rbp
  4014a6:	sub    rax,0x404048
  4014ac:	cmp    rax,0xe
  4014b0:	mov    rbp,rsp
  4014b3:	jbe    4014d0 <_start@@Base+0x70>
  4014b5:	mov    eax,0x0
  4014ba:	test   rax,rax
  4014bd:	je     4014d0 <_start@@Base+0x70>
  4014bf:	pop    rbp
  4014c0:	mov    edi,0x404048
  4014c5:	jmp    rax
  4014c7:	nop    WORD PTR [rax+rax*1+0x0]
  4014d0:	pop    rbp
  4014d1:	ret    
  4014d2:	nop    DWORD PTR [rax+0x0]
  4014d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4014e0:	mov    esi,0x404048
  4014e5:	push   rbp
  4014e6:	sub    rsi,0x404048
  4014ed:	sar    rsi,0x3
  4014f1:	mov    rbp,rsp
  4014f4:	mov    rax,rsi
  4014f7:	shr    rax,0x3f
  4014fb:	add    rsi,rax
  4014fe:	sar    rsi,1
  401501:	je     401518 <_start@@Base+0xb8>
  401503:	mov    eax,0x0
  401508:	test   rax,rax
  40150b:	je     401518 <_start@@Base+0xb8>
  40150d:	pop    rbp
  40150e:	mov    edi,0x404048
  401513:	jmp    rax
  401515:	nop    DWORD PTR [rax]
  401518:	pop    rbp
  401519:	ret    
  40151a:	nop    WORD PTR [rax+rax*1+0x0]
  401520:	cmp    BYTE PTR [rip+0x2b21],0x0        # 404048 <__bss_start@@Base>
  401527:	jne    40153a <_start@@Base+0xda>
  401529:	push   rbp
  40152a:	mov    rbp,rsp
  40152d:	call   4014a0 <_start@@Base+0x40>
  401532:	pop    rbp
  401533:	mov    BYTE PTR [rip+0x2b0e],0x1        # 404048 <__bss_start@@Base>
  40153a:	repz ret 
  40153c:	nop    DWORD PTR [rax+0x0]
  401540:	mov    edi,0x403e18
  401545:	cmp    QWORD PTR [rdi],0x0
  401549:	jne    401550 <_start@@Base+0xf0>
  40154b:	jmp    4014e0 <_start@@Base+0x80>
  40154d:	nop    DWORD PTR [rax]
  401550:	mov    eax,0x0
  401555:	test   rax,rax
  401558:	je     40154b <_start@@Base+0xeb>
  40155a:	push   rbp
  40155b:	mov    rbp,rsp
  40155e:	call   rax
  401560:	pop    rbp
  401561:	jmp    4014e0 <_start@@Base+0x80>
  401566:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000401570 <comp_int_asc@@Base>:
  401570:	mov    eax,DWORD PTR [rsi]
  401572:	cmp    DWORD PTR [rdi],eax
  401574:	mov    edx,0xffffffff
  401579:	setg   al
  40157c:	movzx  eax,al
  40157f:	cmovl  eax,edx
  401582:	ret    
  401583:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40158e:	xchg   ax,ax

0000000000401590 <comp_char_desc@@Base>:
  401590:	movzx  eax,BYTE PTR [rsi]
  401593:	movzx  ecx,BYTE PTR [rsi]
  401596:	mov    edx,0x1
  40159b:	cmp    BYTE PTR [rdi],al
  40159d:	setg   al
  4015a0:	movzx  eax,al
  4015a3:	neg    eax
  4015a5:	cmp    BYTE PTR [rdi],cl
  4015a7:	cmovl  eax,edx
  4015aa:	ret    
  4015ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004015b0 <get_elem@@Base>:
  4015b0:	imul   esi,edx
  4015b3:	movsxd rdx,esi
  4015b6:	lea    rax,[rdi+rdx*1]
  4015ba:	ret    
  4015bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004015c0 <swap@@Base>:
  4015c0:	xor    eax,eax
  4015c2:	test   edx,edx
  4015c4:	jle    4015e8 <swap@@Base+0x28>
  4015c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4015d0:	movzx  ecx,BYTE PTR [rdi+rax*1]
  4015d4:	movzx  r8d,BYTE PTR [rsi+rax*1]
  4015d9:	mov    BYTE PTR [rdi+rax*1],r8b
  4015dd:	mov    BYTE PTR [rsi+rax*1],cl
  4015e0:	add    rax,0x1
  4015e4:	cmp    edx,eax
  4015e6:	jg     4015d0 <swap@@Base+0x10>
  4015e8:	repz ret 
  4015ea:	nop    WORD PTR [rax+rax*1+0x0]

00000000004015f0 <sort@@Base>:
  4015f0:	test   esi,esi
  4015f2:	jle    4016a7 <sort@@Base+0xb7>
  4015f8:	push   r15
  4015fa:	push   r14
  4015fc:	mov    r14,rcx
  4015ff:	push   r13
  401601:	push   r12
  401603:	mov    r13,rdi
  401606:	push   rbp
  401607:	push   rbx
  401608:	mov    ebp,edx
  40160a:	sub    rsp,0x18
  40160e:	mov    DWORD PTR [rsp],esi
  401611:	mov    DWORD PTR [rsp+0x4],0x0
  401619:	nop    DWORD PTR [rax+0x0]
  401620:	mov    r15d,DWORD PTR [rsp+0x4]
  401625:	mov    edx,ebp
  401627:	mov    rdi,r13
  40162a:	mov    esi,r15d
  40162d:	call   4015b0 <get_elem@@Base>
  401632:	mov    ecx,r15d
  401635:	mov    QWORD PTR [rsp+0x8],rax
  40163a:	add    ecx,0x1
  40163d:	cmp    DWORD PTR [rsp],ecx
  401640:	mov    DWORD PTR [rsp+0x4],ecx
  401644:	je     40168a <sort@@Base+0x9a>
  401646:	mov    rbx,rax
  401649:	mov    r15d,ecx
  40164c:	nop    DWORD PTR [rax+0x0]
  401650:	mov    esi,r15d
  401653:	mov    edx,ebp
  401655:	mov    rdi,r13
  401658:	call   4015b0 <get_elem@@Base>
  40165d:	mov    rsi,rbx
  401660:	mov    r12,rax
  401663:	mov    rdi,rax
  401666:	call   r14
  401669:	test   eax,eax
  40166b:	cmovs  rbx,r12
  40166f:	add    r15d,0x1
  401673:	cmp    DWORD PTR [rsp],r15d
  401677:	jne    401650 <sort@@Base+0x60>
  401679:	mov    rsi,QWORD PTR [rsp+0x8]
  40167e:	mov    edx,ebp
  401680:	mov    rdi,rbx
  401683:	call   4015c0 <swap@@Base>
  401688:	jmp    401620 <sort@@Base+0x30>
  40168a:	mov    rdi,QWORD PTR [rsp+0x8]
  40168f:	add    rsp,0x18
  401693:	mov    edx,ebp
  401695:	pop    rbx
  401696:	pop    rbp
  401697:	pop    r12
  401699:	pop    r13
  40169b:	pop    r14
  40169d:	pop    r15
  40169f:	mov    rsi,rdi
  4016a2:	jmp    4015c0 <swap@@Base>
  4016a7:	repz ret 
  4016a9:	nop    DWORD PTR [rax+0x0]

00000000004016b0 <linear_search@@Base>:
  4016b0:	test   edx,edx
  4016b2:	jle    401729 <linear_search@@Base+0x79>
  4016b4:	push   r15
  4016b6:	push   r14
  4016b8:	mov    r15d,ecx
  4016bb:	push   r13
  4016bd:	push   r12
  4016bf:	mov    r14,rdi
  4016c2:	push   rbp
  4016c3:	push   rbx
  4016c4:	mov    r12,rsi
  4016c7:	mov    ebp,edx
  4016c9:	mov    r13,r8
  4016cc:	xor    ebx,ebx
  4016ce:	sub    rsp,0x8
  4016d2:	jmp    4016df <linear_search@@Base+0x2f>
  4016d4:	nop    DWORD PTR [rax+0x0]
  4016d8:	add    ebx,0x1
  4016db:	cmp    ebp,ebx
  4016dd:	je     401718 <linear_search@@Base+0x68>
  4016df:	mov    edx,ebp
  4016e1:	mov    esi,ebx
  4016e3:	mov    rdi,r12
  4016e6:	call   4015b0 <get_elem@@Base>
  4016eb:	mov    rsi,r14
  4016ee:	mov    rdi,rax
  4016f1:	call   r13
  4016f4:	test   eax,eax
  4016f6:	jne    4016d8 <linear_search@@Base+0x28>
  4016f8:	add    rsp,0x8
  4016fc:	mov    edx,r15d
  4016ff:	mov    esi,ebx
  401701:	mov    rdi,r12
  401704:	pop    rbx
  401705:	pop    rbp
  401706:	pop    r12
  401708:	pop    r13
  40170a:	pop    r14
  40170c:	pop    r15
  40170e:	jmp    4015b0 <get_elem@@Base>
  401713:	nop    DWORD PTR [rax+rax*1+0x0]
  401718:	add    rsp,0x8
  40171c:	xor    eax,eax
  40171e:	pop    rbx
  40171f:	pop    rbp
  401720:	pop    r12
  401722:	pop    r13
  401724:	pop    r14
  401726:	pop    r15
  401728:	ret    
  401729:	xor    eax,eax
  40172b:	ret    
  40172c:	nop    DWORD PTR [rax+0x0]

0000000000401730 <binary_search@@Base>:
  401730:	push   r15
  401732:	push   r14
  401734:	push   r13
  401736:	push   r12
  401738:	push   rbp
  401739:	push   rbx
  40173a:	sub    rsp,0x18
  40173e:	sub    edx,0x1
  401741:	mov    QWORD PTR [rsp+0x8],rdi
  401746:	js     4017b8 <binary_search@@Base+0x88>
  401748:	mov    r13,rsi
  40174b:	mov    r14d,ecx
  40174e:	mov    r15,r8
  401751:	xor    ebp,ebp
  401753:	mov    r12d,edx
  401756:	jmp    401768 <binary_search@@Base+0x38>
  401758:	nop    DWORD PTR [rax+rax*1+0x0]
  401760:	lea    ebp,[rbx+0x1]
  401763:	cmp    ebp,r12d
  401766:	jg     4017b8 <binary_search@@Base+0x88>
  401768:	lea    eax,[rbp+r12*1+0x0]
  40176d:	mov    edx,r14d
  401770:	mov    rdi,r13
  401773:	mov    ebx,eax
  401775:	shr    ebx,0x1f
  401778:	add    ebx,eax
  40177a:	sar    ebx,1
  40177c:	mov    esi,ebx
  40177e:	call   4015b0 <get_elem@@Base>
  401783:	mov    rdi,QWORD PTR [rsp+0x8]
  401788:	mov    rsi,rax
  40178b:	call   r15
  40178e:	test   eax,eax
  401790:	mov    edx,r14d
  401793:	mov    esi,ebx
  401795:	mov    rdi,r13
  401798:	jne    4017d0 <binary_search@@Base+0xa0>
  40179a:	call   4015b0 <get_elem@@Base>
  40179f:	mov    rdi,QWORD PTR [rsp+0x8]
  4017a4:	mov    rsi,rax
  4017a7:	call   r15
  4017aa:	cmp    eax,0xffffffff
  4017ad:	jne    401760 <binary_search@@Base+0x30>
  4017af:	lea    r12d,[rbx-0x1]
  4017b3:	cmp    ebp,r12d
  4017b6:	jle    401768 <binary_search@@Base+0x38>
  4017b8:	add    rsp,0x18
  4017bc:	xor    eax,eax
  4017be:	pop    rbx
  4017bf:	pop    rbp
  4017c0:	pop    r12
  4017c2:	pop    r13
  4017c4:	pop    r14
  4017c6:	pop    r15
  4017c8:	ret    
  4017c9:	nop    DWORD PTR [rax+0x0]
  4017d0:	add    rsp,0x18
  4017d4:	pop    rbx
  4017d5:	pop    rbp
  4017d6:	pop    r12
  4017d8:	pop    r13
  4017da:	pop    r14
  4017dc:	pop    r15
  4017de:	jmp    4015b0 <get_elem@@Base>
  4017e3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4017ee:	xchg   ax,ax

00000000004017f0 <insertion_sort@@Base>:
  4017f0:	push   r15
  4017f2:	push   r14
  4017f4:	mov    r15,rcx
  4017f7:	push   r13
  4017f9:	push   r12
  4017fb:	mov    r12,rdi
  4017fe:	push   rbp
  4017ff:	push   rbx
  401800:	mov    ebp,edx
  401802:	sub    rsp,0x18
  401806:	cmp    esi,0x1
  401809:	mov    DWORD PTR [rsp+0xc],esi
  40180d:	mov    DWORD PTR [rsp+0x8],0x1
  401815:	jle    401896 <insertion_sort@@Base+0xa6>
  401817:	nop    WORD PTR [rax+rax*1+0x0]
  401820:	mov    ebx,DWORD PTR [rsp+0x8]
  401824:	nop    DWORD PTR [rax+0x0]
  401828:	lea    r13d,[rbx-0x1]
  40182c:	mov    edx,ebp
  40182e:	mov    rdi,r12
  401831:	mov    esi,r13d
  401834:	call   4015b0 <get_elem@@Base>
  401839:	mov    edx,ebp
  40183b:	mov    r14,rax
  40183e:	mov    esi,ebx
  401840:	mov    rdi,r12
  401843:	call   4015b0 <get_elem@@Base>
  401848:	mov    rsi,r14
  40184b:	mov    rdi,rax
  40184e:	call   r15
  401851:	cmp    eax,0xffffffff
  401854:	jne    401887 <insertion_sort@@Base+0x97>
  401856:	mov    edx,ebp
  401858:	mov    esi,r13d
  40185b:	mov    rdi,r12
  40185e:	call   4015b0 <get_elem@@Base>
  401863:	mov    esi,ebx
  401865:	mov    r14,rax
  401868:	mov    edx,ebp
  40186a:	mov    rdi,r12
  40186d:	mov    ebx,r13d
  401870:	call   4015b0 <get_elem@@Base>
  401875:	mov    edx,ebp
  401877:	mov    rsi,r14
  40187a:	mov    rdi,rax
  40187d:	call   4015c0 <swap@@Base>
  401882:	test   r13d,r13d
  401885:	jne    401828 <insertion_sort@@Base+0x38>
  401887:	add    DWORD PTR [rsp+0x8],0x1
  40188c:	mov    eax,DWORD PTR [rsp+0x8]
  401890:	cmp    DWORD PTR [rsp+0xc],eax
  401894:	jne    401820 <insertion_sort@@Base+0x30>
  401896:	add    rsp,0x18
  40189a:	pop    rbx
  40189b:	pop    rbp
  40189c:	pop    r12
  40189e:	pop    r13
  4018a0:	pop    r14
  4018a2:	pop    r15
  4018a4:	ret    
  4018a5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4018af:	nop

00000000004018b0 <__libc_csu_init@@Base>:
  4018b0:	endbr64 
  4018b4:	push   r15
  4018b6:	lea    r15,[rip+0x254b]        # 403e08 <_IO_stdin_used@@Base+0x1e08>
  4018bd:	push   r14
  4018bf:	mov    r14,rdx
  4018c2:	push   r13
  4018c4:	mov    r13,rsi
  4018c7:	push   r12
  4018c9:	mov    r12d,edi
  4018cc:	push   rbp
  4018cd:	lea    rbp,[rip+0x253c]        # 403e10 <_IO_stdin_used@@Base+0x1e10>
  4018d4:	push   rbx
  4018d5:	sub    rbp,r15
  4018d8:	sub    rsp,0x8
  4018dc:	call   401000 <puts@plt-0x30>
  4018e1:	sar    rbp,0x3
  4018e5:	je     401906 <__libc_csu_init@@Base+0x56>
  4018e7:	xor    ebx,ebx
  4018e9:	nop    DWORD PTR [rax+0x0]
  4018f0:	mov    rdx,r14
  4018f3:	mov    rsi,r13
  4018f6:	mov    edi,r12d
  4018f9:	call   QWORD PTR [r15+rbx*8]
  4018fd:	add    rbx,0x1
  401901:	cmp    rbp,rbx
  401904:	jne    4018f0 <__libc_csu_init@@Base+0x40>
  401906:	add    rsp,0x8
  40190a:	pop    rbx
  40190b:	pop    rbp
  40190c:	pop    r12
  40190e:	pop    r13
  401910:	pop    r14
  401912:	pop    r15
  401914:	ret    
  401915:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000401920 <__libc_csu_fini@@Base>:
  401920:	endbr64 
  401924:	ret    

Disassembly of section .fini:

0000000000401928 <.fini>:
  401928:	endbr64 
  40192c:	sub    rsp,0x8
  401930:	add    rsp,0x8
  401934:	ret    
