
../repos/LuaJIT-2.0.5/src/host/buildvm:     file format elf64-x86-64


Disassembly of section .init:

0000000000401000 <.init>:
  401000:	endbr64 
  401004:	sub    rsp,0x8
  401008:	mov    rax,QWORD PTR [rip+0x11fd9]        # 412fe8 <__sprintf_chk@plt+0x11df8>
  40100f:	test   rax,rax
  401012:	je     401016 <free@plt-0x1a>
  401014:	call   rax
  401016:	add    rsp,0x8
  40101a:	ret    

Disassembly of section .plt:

0000000000401020 <free@plt-0x10>:
  401020:	push   QWORD PTR [rip+0x11fe2]        # 413008 <__sprintf_chk@plt+0x11e18>
  401026:	jmp    QWORD PTR [rip+0x11fe4]        # 413010 <__sprintf_chk@plt+0x11e20>
  40102c:	nop    DWORD PTR [rax+0x0]

0000000000401030 <free@plt>:
  401030:	jmp    QWORD PTR [rip+0x11fe2]        # 413018 <__sprintf_chk@plt+0x11e28>
  401036:	push   0x0
  40103b:	jmp    401020 <free@plt-0x10>

0000000000401040 <__errno_location@plt>:
  401040:	jmp    QWORD PTR [rip+0x11fda]        # 413020 <__sprintf_chk@plt+0x11e30>
  401046:	push   0x1
  40104b:	jmp    401020 <free@plt-0x10>

0000000000401050 <strncmp@plt>:
  401050:	jmp    QWORD PTR [rip+0x11fd2]        # 413028 <__sprintf_chk@plt+0x11e38>
  401056:	push   0x2
  40105b:	jmp    401020 <free@plt-0x10>

0000000000401060 <ferror@plt>:
  401060:	jmp    QWORD PTR [rip+0x11fca]        # 413030 <__sprintf_chk@plt+0x11e40>
  401066:	push   0x3
  40106b:	jmp    401020 <free@plt-0x10>

0000000000401070 <strtod@plt>:
  401070:	jmp    QWORD PTR [rip+0x11fc2]        # 413038 <__sprintf_chk@plt+0x11e48>
  401076:	push   0x4
  40107b:	jmp    401020 <free@plt-0x10>

0000000000401080 <fclose@plt>:
  401080:	jmp    QWORD PTR [rip+0x11fba]        # 413040 <__sprintf_chk@plt+0x11e50>
  401086:	push   0x5
  40108b:	jmp    401020 <free@plt-0x10>

0000000000401090 <strlen@plt>:
  401090:	jmp    QWORD PTR [rip+0x11fb2]        # 413048 <__sprintf_chk@plt+0x11e58>
  401096:	push   0x6
  40109b:	jmp    401020 <free@plt-0x10>

00000000004010a0 <__stack_chk_fail@plt>:
  4010a0:	jmp    QWORD PTR [rip+0x11faa]        # 413050 <__sprintf_chk@plt+0x11e60>
  4010a6:	push   0x7
  4010ab:	jmp    401020 <free@plt-0x10>

00000000004010b0 <strchr@plt>:
  4010b0:	jmp    QWORD PTR [rip+0x11fa2]        # 413058 <__sprintf_chk@plt+0x11e68>
  4010b6:	push   0x8
  4010bb:	jmp    401020 <free@plt-0x10>

00000000004010c0 <memset@plt>:
  4010c0:	jmp    QWORD PTR [rip+0x11f9a]        # 413060 <__sprintf_chk@plt+0x11e70>
  4010c6:	push   0x9
  4010cb:	jmp    401020 <free@plt-0x10>

00000000004010d0 <fputc@plt>:
  4010d0:	jmp    QWORD PTR [rip+0x11f92]        # 413068 <__sprintf_chk@plt+0x11e78>
  4010d6:	push   0xa
  4010db:	jmp    401020 <free@plt-0x10>

00000000004010e0 <strcspn@plt>:
  4010e0:	jmp    QWORD PTR [rip+0x11f8a]        # 413070 <__sprintf_chk@plt+0x11e80>
  4010e6:	push   0xb
  4010eb:	jmp    401020 <free@plt-0x10>

00000000004010f0 <fgets@plt>:
  4010f0:	jmp    QWORD PTR [rip+0x11f82]        # 413078 <__sprintf_chk@plt+0x11e88>
  4010f6:	push   0xc
  4010fb:	jmp    401020 <free@plt-0x10>

0000000000401100 <calloc@plt>:
  401100:	jmp    QWORD PTR [rip+0x11f7a]        # 413080 <__sprintf_chk@plt+0x11e90>
  401106:	push   0xd
  40110b:	jmp    401020 <free@plt-0x10>

0000000000401110 <strcmp@plt>:
  401110:	jmp    QWORD PTR [rip+0x11f72]        # 413088 <__sprintf_chk@plt+0x11e98>
  401116:	push   0xe
  40111b:	jmp    401020 <free@plt-0x10>

0000000000401120 <putc@plt>:
  401120:	jmp    QWORD PTR [rip+0x11f6a]        # 413090 <__sprintf_chk@plt+0x11ea0>
  401126:	push   0xf
  40112b:	jmp    401020 <free@plt-0x10>

0000000000401130 <__memcpy_chk@plt>:
  401130:	jmp    QWORD PTR [rip+0x11f62]        # 413098 <__sprintf_chk@plt+0x11ea8>
  401136:	push   0x10
  40113b:	jmp    401020 <free@plt-0x10>

0000000000401140 <strtol@plt>:
  401140:	jmp    QWORD PTR [rip+0x11f5a]        # 4130a0 <__sprintf_chk@plt+0x11eb0>
  401146:	push   0x11
  40114b:	jmp    401020 <free@plt-0x10>

0000000000401150 <memcpy@plt>:
  401150:	jmp    QWORD PTR [rip+0x11f52]        # 4130a8 <__sprintf_chk@plt+0x11eb8>
  401156:	push   0x12
  40115b:	jmp    401020 <free@plt-0x10>

0000000000401160 <malloc@plt>:
  401160:	jmp    QWORD PTR [rip+0x11f4a]        # 4130b0 <__sprintf_chk@plt+0x11ec0>
  401166:	push   0x13
  40116b:	jmp    401020 <free@plt-0x10>

0000000000401170 <fflush@plt>:
  401170:	jmp    QWORD PTR [rip+0x11f42]        # 4130b8 <__sprintf_chk@plt+0x11ec8>
  401176:	push   0x14
  40117b:	jmp    401020 <free@plt-0x10>

0000000000401180 <realloc@plt>:
  401180:	jmp    QWORD PTR [rip+0x11f3a]        # 4130c0 <__sprintf_chk@plt+0x11ed0>
  401186:	push   0x15
  40118b:	jmp    401020 <free@plt-0x10>

0000000000401190 <fopen@plt>:
  401190:	jmp    QWORD PTR [rip+0x11f32]        # 4130c8 <__sprintf_chk@plt+0x11ed8>
  401196:	push   0x16
  40119b:	jmp    401020 <free@plt-0x10>

00000000004011a0 <exit@plt>:
  4011a0:	jmp    QWORD PTR [rip+0x11f2a]        # 4130d0 <__sprintf_chk@plt+0x11ee0>
  4011a6:	push   0x17
  4011ab:	jmp    401020 <free@plt-0x10>

00000000004011b0 <fwrite@plt>:
  4011b0:	jmp    QWORD PTR [rip+0x11f22]        # 4130d8 <__sprintf_chk@plt+0x11ee8>
  4011b6:	push   0x18
  4011bb:	jmp    401020 <free@plt-0x10>

00000000004011c0 <__fprintf_chk@plt>:
  4011c0:	jmp    QWORD PTR [rip+0x11f1a]        # 4130e0 <__sprintf_chk@plt+0x11ef0>
  4011c6:	push   0x19
  4011cb:	jmp    401020 <free@plt-0x10>

00000000004011d0 <strerror@plt>:
  4011d0:	jmp    QWORD PTR [rip+0x11f12]        # 4130e8 <__sprintf_chk@plt+0x11ef8>
  4011d6:	push   0x1a
  4011db:	jmp    401020 <free@plt-0x10>

00000000004011e0 <strstr@plt>:
  4011e0:	jmp    QWORD PTR [rip+0x11f0a]        # 4130f0 <__sprintf_chk@plt+0x11f00>
  4011e6:	push   0x1b
  4011eb:	jmp    401020 <free@plt-0x10>

00000000004011f0 <__sprintf_chk@plt>:
  4011f0:	jmp    QWORD PTR [rip+0x11f02]        # 4130f8 <__sprintf_chk@plt+0x11f08>
  4011f6:	push   0x1c
  4011fb:	jmp    401020 <free@plt-0x10>

Disassembly of section .text:

0000000000401200 <.text>:
  401200:	push   r15
  401202:	push   r14
  401204:	mov    r14,rsi
  401207:	push   r13
  401209:	push   r12
  40120b:	push   rbp
  40120c:	push   rbx
  40120d:	sub    rsp,0xa68
  401214:	mov    rax,QWORD PTR fs:0x28
  40121d:	mov    QWORD PTR [rsp+0xa58],rax
  401225:	xor    eax,eax
  401227:	lea    rax,[rip+0xdf68]        # 40f196 <__sprintf_chk@plt+0xdfa6>
  40122e:	mov    DWORD PTR [rsp+0x18],0xffffffff
  401236:	mov    QWORD PTR [rsp+0x28],rax
  40123b:	mov    rax,QWORD PTR [rsi+0x8]
  40123f:	test   rax,rax
  401242:	je     403fc5 <__sprintf_chk@plt+0x2dd5>
  401248:	cmp    BYTE PTR [rax],0x2d
  40124b:	jne    403fc5 <__sprintf_chk@plt+0x2dd5>
  401251:	lea    r15,[rip+0x7dac]        # 409004 <__sprintf_chk@plt+0x7e14>
  401258:	lea    rbp,[rip+0x107a1]        # 411a00 <__sprintf_chk@plt+0x10810>
  40125f:	mov    r13d,0x2
  401265:	movzx  ecx,BYTE PTR [rax+0x1]
  401269:	lea    edx,[r13-0x1]
  40126d:	cmp    cl,0x2d
  401270:	je     40352b <__sprintf_chk@plt+0x233b>
  401276:	jle    4033b9 <__sprintf_chk@plt+0x21c9>
  40127c:	cmp    cl,0x6d
  40127f:	je     40241b <__sprintf_chk@plt+0x122b>
  401285:	cmp    cl,0x6f
  401288:	jne    4033c4 <__sprintf_chk@plt+0x21d4>
  40128e:	cmp    BYTE PTR [rax+0x2],0x0
  401292:	jne    4033c4 <__sprintf_chk@plt+0x21d4>
  401298:	movsxd rax,r13d
  40129b:	mov    rax,QWORD PTR [r14+rax*8]
  40129f:	test   rax,rax
  4012a2:	je     4033c4 <__sprintf_chk@plt+0x21d4>
  4012a8:	mov    QWORD PTR [rsp+0x28],rax
  4012ad:	lea    edx,[r13+0x1]
  4012b1:	movsxd rdx,edx
  4012b4:	mov    rax,QWORD PTR [r14+rdx*8]
  4012b8:	test   rax,rax
  4012bb:	je     4012d0 <__sprintf_chk@plt+0xe0>
  4012bd:	add    r13d,0x2
  4012c1:	cmp    BYTE PTR [rax],0x2d
  4012c4:	je     401265 <__sprintf_chk@plt+0x75>
  4012c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4012d0:	cmp    DWORD PTR [rsp+0x18],0xffffffff
  4012d5:	lea    rax,[r14+rdx*8]
  4012d9:	mov    QWORD PTR [rsp+0x30],rax
  4012de:	je     4033c4 <__sprintf_chk@plt+0x21d4>
  4012e4:	mov    esi,0x1
  4012e9:	mov    edi,0x518
  4012ee:	mov    DWORD PTR [rsp+0x4c],0xa3
  4012f6:	call   401100 <calloc@plt>
  4012fb:	mov    QWORD PTR [rsp+0x60],rax
  401300:	lea    rax,[rip+0x11419]        # 412720 <__sprintf_chk@plt+0x11530>
  401307:	mov    edi,0x128
  40130c:	mov    DWORD PTR [rsp+0x54],0x0
  401314:	mov    QWORD PTR [rsp+0x88],rax
  40131c:	call   401160 <malloc@plt>
  401321:	lea    rdx,[rip+0x11eac]        # 4131d4 <__sprintf_chk@plt+0x11fe4>
  401328:	mov    QWORD PTR [rsp+0x70],rax
  40132d:	lea    rax,[rip+0x11e0c]        # 413140 <__sprintf_chk@plt+0x11f50>
  401334:	mov    DWORD PTR [rsp+0x58],0x0
  40133c:	nop    DWORD PTR [rax+0x0]
  401340:	mov    DWORD PTR [rax],0xffffffff
  401346:	add    rax,0x4
  40134a:	cmp    rdx,rax
  40134d:	jne    401340 <__sprintf_chk@plt+0x150>
  40134f:	lea    rax,[rip+0x7d2a]        # 409080 <__sprintf_chk@plt+0x7e90>
  401356:	lea    rbx,[rsp+0x10]
  40135b:	mov    esi,0x2
  401360:	lea    r14,[rip+0xa18d]        # 40b4f4 <__sprintf_chk@plt+0xa304>
  401367:	mov    r13d,0xffffffec
  40136d:	mov    r12d,0x1
  401373:	mov    QWORD PTR [rsp+0x90],rax
  40137b:	lea    rax,[rip+0x7d0b]        # 40908d <__sprintf_chk@plt+0x7e9d>
  401382:	mov    rdi,rbx
  401385:	mov    QWORD PTR [rsp+0x98],rax
  40138d:	call   404590 <__sprintf_chk@plt+0x33a0>
  401392:	mov    edx,DWORD PTR [rsp+0x4c]
  401396:	mov    rsi,QWORD PTR [rsp+0x60]
  40139b:	mov    rdi,rbx
  40139e:	call   4046f0 <__sprintf_chk@plt+0x3500>
  4013a3:	lea    rsi,[rip+0xa2f6]        # 40b6a0 <__sprintf_chk@plt+0xa4b0>
  4013aa:	mov    rdi,rbx
  4013ad:	call   4047f0 <__sprintf_chk@plt+0x3600>
  4013b2:	mov    esi,0x5d
  4013b7:	mov    rdi,rbx
  4013ba:	call   404760 <__sprintf_chk@plt+0x3570>
  4013bf:	xor    esi,esi
  4013c1:	xor    eax,eax
  4013c3:	mov    rdi,rbx
  4013c6:	call   404860 <__sprintf_chk@plt+0x3670>
  4013cb:	sub    rsp,0x8
  4013cf:	xor    eax,eax
  4013d1:	mov    r9d,0x1
  4013d7:	push   0xfffffffffffffffe
  4013d9:	push   0xfffffffffffff530
  4013de:	mov    r8d,0x3
  4013e4:	push   0x3
  4013e6:	mov    ecx,0xfffffffd
  4013eb:	mov    edx,0x4
  4013f0:	mov    esi,0x2
  4013f5:	mov    rdi,rbx
  4013f8:	call   404860 <__sprintf_chk@plt+0x3670>
  4013fd:	add    rsp,0x18
  401401:	xor    eax,eax
  401403:	mov    r9d,0x20
  401409:	push   0xffffffffffffffff
  40140b:	mov    r8d,0x30
  401411:	mov    ecx,0x18
  401416:	mov    edx,0x10
  40141b:	mov    esi,0x5c
  401420:	mov    rdi,rbx
  401423:	call   404860 <__sprintf_chk@plt+0x3670>
  401428:	push   0xfffffffffffffffe
  40142a:	push   0xe8
  40142f:	xor    eax,eax
  401431:	mov    r9d,0x8
  401437:	mov    r8d,0x1
  40143d:	mov    ecx,0x18
  401442:	mov    edx,0x18
  401447:	mov    esi,0xc0
  40144c:	mov    rdi,rbx
  40144f:	call   404860 <__sprintf_chk@plt+0x3670>
  401454:	add    rsp,0x18
  401458:	xor    eax,eax
  40145a:	mov    r9d,0x8
  401460:	push   0x14
  401462:	push   0xffffffffffffffff
  401464:	mov    r8d,0x10
  40146a:	push   0xfffffffffffff530
  40146f:	push   0xfffffffffffffffe
  401471:	mov    ecx,0x2
  401476:	push   0xbb8
  40147b:	mov    rdx,0xfffffffffffffffc
  401482:	mov    esi,0x113
  401487:	mov    rdi,rbx
  40148a:	call   404860 <__sprintf_chk@plt+0x3670>
  40148f:	add    rsp,0x30
  401493:	xor    eax,eax
  401495:	mov    r9d,0x10
  40149b:	push   0x7
  40149d:	push   0x30
  40149f:	mov    r8d,0x18
  4014a5:	push   0xbb8
  4014aa:	push   0x8
  4014ac:	mov    ecx,0x10
  4014b1:	push   0x1
  4014b3:	push   0x5
  4014b5:	mov    edx,0xffffffc3
  4014ba:	push   0x10
  4014bc:	push   0x18
  4014be:	mov    esi,0x173
  4014c3:	mov    rdi,rbx
  4014c6:	call   404860 <__sprintf_chk@plt+0x3670>
  4014cb:	add    rsp,0x40
  4014cf:	xor    eax,eax
  4014d1:	mov    r9d,0x10
  4014d7:	push   0x30
  4014d9:	push   0x30
  4014db:	mov    r8d,0x7
  4014e1:	push   0x1
  4014e3:	push   0x5
  4014e5:	mov    ecx,0xffffffff
  4014ea:	push   0x3
  4014ec:	push   0x18
  4014ee:	mov    edx,0xfffff530
  4014f3:	mov    esi,0x20c
  4014f8:	mov    rdi,rbx
  4014fb:	call   404860 <__sprintf_chk@plt+0x3670>
  401500:	add    rsp,0x30
  401504:	xor    eax,eax
  401506:	mov    r9d,0xffffffff
  40150c:	push   0x30
  40150e:	push   0x30
  401510:	mov    r8d,0xfffff530
  401516:	push   0x18
  401518:	push   0x24
  40151a:	mov    ecx,0xbb8
  40151f:	push   0x10
  401521:	push   0xfffffffffffffff7
  401523:	mov    edx,0x8
  401528:	push   0x18
  40152a:	push   0x10
  40152c:	mov    esi,0x282
  401531:	mov    rdi,rbx
  401534:	call   404860 <__sprintf_chk@plt+0x3670>
  401539:	add    rsp,0x40
  40153d:	xor    r8d,r8d
  401540:	xor    eax,eax
  401542:	push   0x10
  401544:	push   0xffffffffffffffd0
  401546:	mov    r9d,0x10
  40154c:	mov    ecx,0xffffffff
  401551:	mov    edx,0x5
  401556:	mov    esi,0x314
  40155b:	mov    rdi,rbx
  40155e:	call   404860 <__sprintf_chk@plt+0x3670>
  401563:	push   0x10
  401565:	push   0x10
  401567:	mov    r9d,0xfffffff4
  40156d:	mov    r8d,0xfffff4e8
  401573:	mov    ecx,0x34
  401578:	mov    edx,0xfffffffb
  40157d:	mov    esi,0x391
  401582:	mov    rdi,rbx
  401585:	xor    eax,eax
  401587:	call   404860 <__sprintf_chk@plt+0x3670>
  40158c:	add    rsp,0x18
  401590:	xor    eax,eax
  401592:	mov    r9d,0xfffffffb
  401598:	push   0xfffffffffffffff4
  40159a:	push   0xfffffffffffff4e8
  40159f:	mov    r8d,0x3
  4015a5:	push   0x35
  4015a7:	mov    ecx,0x2
  4015ac:	mov    edx,0x18
  4015b1:	mov    esi,0x41d
  4015b6:	mov    rdi,rbx
  4015b9:	call   404860 <__sprintf_chk@plt+0x3670>
  4015be:	add    rsp,0x18
  4015c2:	xor    eax,eax
  4015c4:	mov    r9d,0x2
  4015ca:	push   0x10
  4015cc:	push   0x10
  4015ce:	mov    r8d,0x18
  4015d4:	push   0x4
  4015d6:	mov    ecx,0x10
  4015db:	mov    edx,0x10
  4015e0:	mov    esi,0x4a3
  4015e5:	mov    rdi,rbx
  4015e8:	call   404860 <__sprintf_chk@plt+0x3670>
  4015ed:	add    rsp,0x18
  4015f1:	mov    r8d,0xfffffffe
  4015f7:	xor    eax,eax
  4015f9:	push   0x10
  4015fb:	mov    ecx,r8d
  4015fe:	mov    r9d,0x10
  401604:	mov    edx,0xfffe0000
  401609:	mov    esi,0x54e
  40160e:	mov    rdi,rbx
  401611:	call   404860 <__sprintf_chk@plt+0x3670>
  401616:	mov    r9d,0x3
  40161c:	mov    r8d,0x2
  401622:	xor    eax,eax
  401624:	mov    ecx,0x10
  401629:	mov    edx,0x10
  40162e:	mov    esi,0x5d3
  401633:	mov    rdi,rbx
  401636:	call   404860 <__sprintf_chk@plt+0x3670>
  40163b:	mov    ecx,0x10
  401640:	mov    edx,0x10
  401645:	xor    eax,eax
  401647:	mov    esi,0x641
  40164c:	mov    rdi,rbx
  40164f:	call   404860 <__sprintf_chk@plt+0x3670>
  401654:	xor    eax,eax
  401656:	mov    esi,0x673
  40165b:	mov    rdi,rbx
  40165e:	call   404860 <__sprintf_chk@plt+0x3670>
  401663:	push   0xfffffffffffffffe
  401665:	push   0x2
  401667:	xor    eax,eax
  401669:	push   0x4d8
  40166e:	push   0x10
  401670:	mov    r9d,0x10
  401676:	mov    r8d,0x10
  40167c:	mov    ecx,0x10
  401681:	mov    edx,0x10
  401686:	mov    esi,0x678
  40168b:	mov    rdi,rbx
  40168e:	call   404860 <__sprintf_chk@plt+0x3670>
  401693:	add    rsp,0x28
  401697:	xor    eax,eax
  401699:	mov    r9d,0xfffffffb
  40169f:	push   0x3
  4016a1:	mov    r8d,0x20
  4016a7:	mov    ecx,0xd
  4016ac:	mov    edx,0x2
  4016b1:	mov    esi,0x732
  4016b6:	mov    rdi,rbx
  4016b9:	call   404860 <__sprintf_chk@plt+0x3670>
  4016be:	mov    QWORD PTR [rsp],0x18
  4016c6:	push   0x8
  4016c8:	xor    eax,eax
  4016ca:	push   0x1c
  4016cc:	push   0xfffffffffffffff4
  4016ce:	mov    r9d,0xffffffff
  4016d4:	push   0xfffffffffffff58c
  4016d9:	mov    r8d,0x10
  4016df:	mov    ecx,0xfffffff4
  4016e4:	mov    edx,0x2
  4016e9:	mov    esi,0x79a
  4016ee:	mov    rdi,rbx
  4016f1:	call   404860 <__sprintf_chk@plt+0x3670>
  4016f6:	add    rsp,0x30
  4016fa:	xor    eax,eax
  4016fc:	mov    r9d,0x8
  401702:	push   0xffffffffffffffff
  401704:	push   0x10
  401706:	mov    r8d,0xfffffffb
  40170c:	mov    ecx,0xc
  401711:	mov    edx,0x14
  401716:	mov    esi,0x7e3
  40171b:	mov    rdi,rbx
  40171e:	call   404860 <__sprintf_chk@plt+0x3670>
  401723:	mov    DWORD PTR [rsp],0x3
  40172a:	push   0xfffffffffffff5a0
  40172f:	xor    eax,eax
  401731:	push   0xfffffffffffffff2
  401733:	mov    r9d,0xfffffffc
  401739:	mov    r8d,0xfffeffff
  40173f:	mov    ecx,0xfffffff2
  401744:	mov    edx,0xfffffff3
  401749:	mov    esi,0x824
  40174e:	mov    rdi,rbx
  401751:	call   404860 <__sprintf_chk@plt+0x3670>
  401756:	add    rsp,0x20
  40175a:	mov    r8d,0xfffffff4
  401760:	mov    r9d,0x10
  401766:	push   0xfffffffffffff484
  40176b:	push   0xfb
  401770:	mov    edx,r8d
  401773:	push   0x4
  401775:	push   0x4
  401777:	mov    ecx,0x10
  40177c:	push   0x4
  40177e:	push   0xfffffffffffffff4
  401780:	mov    esi,0x85c
  401785:	mov    rdi,rbx
  401788:	xor    eax,eax
  40178a:	call   404860 <__sprintf_chk@plt+0x3670>
  40178f:	add    rsp,0x30
  401793:	mov    r9d,0xfffffff4
  401799:	xor    eax,eax
  40179b:	push   0xfffffffffffeffff
  4017a0:	push   0x2
  4017a2:	mov    r8d,0x3
  4017a8:	mov    ecx,0xc
  4017ad:	mov    edx,0xfffff484
  4017b2:	mov    esi,0x8a1
  4017b7:	mov    rdi,rbx
  4017ba:	call   404860 <__sprintf_chk@plt+0x3670>
  4017bf:	mov    r8d,0xfffffffb
  4017c5:	xor    eax,eax
  4017c7:	mov    r9d,0xfffeffff
  4017cd:	mov    ecx,r8d
  4017d0:	mov    edx,0x2
  4017d5:	mov    esi,0x8f7
  4017da:	mov    rdi,rbx
  4017dd:	mov    DWORD PTR [rsp],0xfffff5d4
  4017e4:	call   404860 <__sprintf_chk@plt+0x3670>
  4017e9:	push   0xfffffffffffffff4
  4017eb:	push   0x2
  4017ed:	xor    eax,eax
  4017ef:	mov    r9d,0x10
  4017f5:	mov    r8d,0x10
  4017fb:	mov    ecx,0xfffff46c
  401800:	mov    edx,0xfffff468
  401805:	mov    esi,0x93d
  40180a:	mov    rdi,rbx
  40180d:	call   404860 <__sprintf_chk@plt+0x3670>
  401812:	add    rsp,0x18
  401816:	mov    r9d,0x3
  40181c:	mov    r8d,0x10
  401822:	push   0x2
  401824:	push   0xffffffffffffffff
  401826:	mov    ecx,0x18
  40182b:	push   0xffffffffffffffff
  40182d:	xor    eax,eax
  40182f:	mov    edx,0x10
  401834:	mov    esi,0x983
  401839:	mov    rdi,rbx
  40183c:	call   404860 <__sprintf_chk@plt+0x3670>
  401841:	add    rsp,0x20
  401845:	xor    eax,eax
  401847:	mov    edx,0xfffffff4
  40184c:	mov    esi,0x9e2
  401851:	mov    rdi,rbx
  401854:	call   404860 <__sprintf_chk@plt+0x3670>
  401859:	push   0x18
  40185b:	push   0x3ff00000
  401860:	xor    eax,eax
  401862:	push   0x0
  401864:	push   0xfffffffffffeffff
  401869:	mov    r9d,0x4
  40186f:	push   0xfffffffffffffff4
  401871:	push   0x3
  401873:	mov    r8d,0xffffffff
  401879:	mov    ecx,0xfffffff7
  40187e:	mov    edx,0x20
  401883:	mov    esi,0x9f7
  401888:	mov    rdi,rbx
  40188b:	call   404860 <__sprintf_chk@plt+0x3670>
  401890:	add    rsp,0x28
  401894:	mov    r9d,0x1
  40189a:	mov    r8d,0x1c
  4018a0:	push   0x2
  4018a2:	mov    ecx,0xffffffff
  4018a7:	xor    eax,eax
  4018a9:	mov    edx,0x8
  4018ae:	mov    esi,0xa5f
  4018b3:	mov    rdi,rbx
  4018b6:	call   404860 <__sprintf_chk@plt+0x3670>
  4018bb:	xor    eax,eax
  4018bd:	mov    edx,0xfffffff4
  4018c2:	mov    esi,0x9e2
  4018c7:	mov    rdi,rbx
  4018ca:	call   404860 <__sprintf_chk@plt+0x3670>
  4018cf:	mov    DWORD PTR [rsp],0xfffffff7
  4018d6:	push   0x3
  4018d8:	xor    eax,eax
  4018da:	push   0x4
  4018dc:	push   0xfffffffffffff4d9
  4018e1:	mov    r9d,0x2
  4018e7:	push   0xe
  4018e9:	mov    r8d,0x4
  4018ef:	mov    ecx,0xfffffff7
  4018f4:	mov    edx,0x20
  4018f9:	mov    esi,0xaab
  4018fe:	mov    rdi,rbx
  401901:	call   404860 <__sprintf_chk@plt+0x3670>
  401906:	add    rsp,0x28
  40190a:	xor    eax,eax
  40190c:	mov    r9d,0xfffffff9
  401912:	push   0x1
  401914:	push   0x7
  401916:	mov    r8d,0x2
  40191c:	push   0x30
  40191e:	mov    ecx,0x16
  401923:	mov    edx,0xfffffff7
  401928:	mov    esi,0xb05
  40192d:	mov    rdi,rbx
  401930:	call   404860 <__sprintf_chk@plt+0x3670>
  401935:	add    rsp,0x20
  401939:	xor    eax,eax
  40193b:	mov    r9d,0x18
  401941:	push   0x18
  401943:	push   0x10
  401945:	mov    r8d,0x20
  40194b:	mov    ecx,0x10
  401950:	mov    edx,0x18
  401955:	mov    esi,0xb5b
  40195a:	mov    rdi,rbx
  40195d:	call   404860 <__sprintf_chk@plt+0x3670>
  401962:	mov    DWORD PTR [rsp],0xfffffffd
  401969:	push   0x20
  40196b:	xor    eax,eax
  40196d:	push   0x18
  40196f:	push   0x18
  401971:	mov    r9d,0x1
  401977:	push   0x10
  401979:	mov    r8d,0x10
  40197f:	mov    ecx,0xffffffff
  401984:	mov    edx,0xfffff530
  401989:	mov    esi,0xbb4
  40198e:	mov    rdi,rbx
  401991:	call   404860 <__sprintf_chk@plt+0x3670>
  401996:	add    rsp,0x28
  40199a:	xor    eax,eax
  40199c:	mov    r9d,0x18
  4019a2:	push   0x30
  4019a4:	push   0x20
  4019a6:	mov    r8d,0x18
  4019ac:	push   0x10
  4019ae:	push   0x18
  4019b0:	mov    ecx,0xfffffffe
  4019b5:	push   0x3
  4019b7:	mov    edx,0x3
  4019bc:	mov    esi,0xc15
  4019c1:	mov    rdi,rbx
  4019c4:	call   404860 <__sprintf_chk@plt+0x3670>
  4019c9:	add    rsp,0x30
  4019cd:	mov    r9d,0x10
  4019d3:	xor    eax,eax
  4019d5:	push   0x18
  4019d7:	push   0x10
  4019d9:	mov    r8d,0x18
  4019df:	push   0x18
  4019e1:	push   0x20
  4019e3:	mov    ecx,0x1
  4019e8:	mov    edx,0x7
  4019ed:	mov    esi,0xc87
  4019f2:	mov    rdi,rbx
  4019f5:	call   404860 <__sprintf_chk@plt+0x3670>
  4019fa:	add    rsp,0x20
  4019fe:	xor    eax,eax
  401a00:	mov    r9d,0x1
  401a06:	push   0x20
  401a08:	push   0x18
  401a0a:	mov    r8d,0x10
  401a10:	push   0x18
  401a12:	push   0x10
  401a14:	mov    ecx,0xffffffff
  401a19:	mov    edx,0xfffff530
  401a1e:	mov    esi,0xccd
  401a23:	mov    rdi,rbx
  401a26:	call   404860 <__sprintf_chk@plt+0x3670>
  401a2b:	add    rsp,0x18
  401a2f:	xor    eax,eax
  401a31:	mov    r9d,0x30
  401a37:	push   0x1
  401a39:	mov    r8d,0x10
  401a3f:	mov    ecx,0x18
  401a44:	mov    edx,0x3
  401a49:	mov    esi,0xd26
  401a4e:	mov    rdi,rbx
  401a51:	call   404860 <__sprintf_chk@plt+0x3670>
  401a56:	mov    DWORD PTR [rsp],0x7fffffff
  401a5d:	push   0xffffffffffffffff
  401a5f:	xor    eax,eax
  401a61:	push   0xfffffffffffeffff
  401a66:	push   0x2
  401a68:	mov    r9d,0x1
  401a6e:	push   0x7
  401a70:	mov    r8d,0x30
  401a76:	mov    ecx,0x18
  401a7b:	mov    edx,0x10
  401a80:	mov    esi,0xd94
  401a85:	mov    rdi,rbx
  401a88:	call   404860 <__sprintf_chk@plt+0x3670>
  401a8d:	add    rsp,0x30
  401a91:	mov    r9d,0xfffeffff
  401a97:	xor    eax,eax
  401a99:	mov    r8d,0xffffffff
  401a9f:	mov    ecx,0x3
  401aa4:	mov    edx,0x2
  401aa9:	mov    esi,0xddb
  401aae:	mov    rdi,rbx
  401ab1:	call   404860 <__sprintf_chk@plt+0x3670>
  401ab6:	mov    r8d,0xfffeffff
  401abc:	xor    eax,eax
  401abe:	mov    ecx,0x2
  401ac3:	mov    edx,r8d
  401ac6:	mov    esi,0xe56
  401acb:	mov    rdi,rbx
  401ace:	call   404860 <__sprintf_chk@plt+0x3670>
  401ad3:	mov    r9d,0xfffeffff
  401ad9:	xor    eax,eax
  401adb:	mov    r8d,0x2
  401ae1:	mov    ecx,r9d
  401ae4:	mov    edx,0x2
  401ae9:	mov    esi,0xe91
  401aee:	mov    rdi,rbx
  401af1:	call   404860 <__sprintf_chk@plt+0x3670>
  401af6:	mov    r9d,0xfffeffff
  401afc:	xor    eax,eax
  401afe:	mov    r8d,0x2
  401b04:	mov    ecx,r9d
  401b07:	mov    edx,0x2
  401b0c:	mov    esi,0xedb
  401b11:	mov    rdi,rbx
  401b14:	call   404860 <__sprintf_chk@plt+0x3670>
  401b19:	sub    rsp,0x8
  401b1d:	mov    r9d,0xfffeffff
  401b23:	xor    eax,eax
  401b25:	push   0x2
  401b27:	mov    ecx,r9d
  401b2a:	mov    r8d,0x2
  401b30:	mov    edx,0x2
  401b35:	mov    esi,0xf14
  401b3a:	mov    rdi,rbx
  401b3d:	call   404860 <__sprintf_chk@plt+0x3670>
  401b42:	mov    r8d,0xfffeffff
  401b48:	xor    eax,eax
  401b4a:	mov    r9d,0x2
  401b50:	mov    edx,r8d
  401b53:	mov    ecx,0x2
  401b58:	mov    esi,0xf57
  401b5d:	mov    rdi,rbx
  401b60:	mov    DWORD PTR [rsp],0xfffeffff
  401b67:	call   404860 <__sprintf_chk@plt+0x3670>
  401b6c:	mov    r9d,0xfffeffff
  401b72:	xor    eax,eax
  401b74:	mov    r8d,0x2
  401b7a:	mov    ecx,r9d
  401b7d:	mov    edx,0x2
  401b82:	mov    esi,0xfb1
  401b87:	mov    rdi,rbx
  401b8a:	call   404860 <__sprintf_chk@plt+0x3670>
  401b8f:	mov    r9d,0xfffeffff
  401b95:	xor    eax,eax
  401b97:	mov    r8d,0x2
  401b9d:	mov    ecx,r9d
  401ba0:	mov    edx,0x2
  401ba5:	mov    esi,0x1009
  401baa:	mov    rdi,rbx
  401bad:	mov    DWORD PTR [rsp],0x20
  401bb4:	call   404860 <__sprintf_chk@plt+0x3670>
  401bb9:	push   0xfffffffffffeffff
  401bbe:	mov    r8d,0xfffeffff
  401bc4:	push   0xfffffffffffeffff
  401bc9:	mov    r9d,0x3
  401bcf:	mov    ecx,r8d
  401bd2:	mov    edx,0x3
  401bd7:	mov    esi,0x1057
  401bdc:	mov    rdi,rbx
  401bdf:	xor    eax,eax
  401be1:	call   404860 <__sprintf_chk@plt+0x3670>
  401be6:	add    rsp,0x20
  401bea:	mov    r8d,0x3
  401bf0:	xor    eax,eax
  401bf2:	mov    ecx,0xfffeffff
  401bf7:	mov    edx,0x2
  401bfc:	mov    esi,0x109a
  401c01:	mov    rdi,rbx
  401c04:	call   404860 <__sprintf_chk@plt+0x3670>
  401c09:	xor    edx,edx
  401c0b:	xor    eax,eax
  401c0d:	mov    r9d,0xfffeffff
  401c13:	mov    r8d,0x2
  401c19:	mov    ecx,0x43500000
  401c1e:	mov    esi,0x1123
  401c23:	mov    rdi,rbx
  401c26:	call   404860 <__sprintf_chk@plt+0x3670>
  401c2b:	mov    r9d,0xfffeffff
  401c31:	xor    eax,eax
  401c33:	mov    ecx,0x3
  401c38:	mov    r8d,r9d
  401c3b:	mov    edx,0x3
  401c40:	mov    esi,0x11ab
  401c45:	mov    rdi,rbx
  401c48:	call   404860 <__sprintf_chk@plt+0x3670>
  401c4d:	mov    r9d,0xfffeffff
  401c53:	xor    eax,eax
  401c55:	mov    edx,0x3
  401c5a:	mov    r8d,r9d
  401c5d:	mov    ecx,r9d
  401c60:	mov    esi,0x11ee
  401c65:	mov    rdi,rbx
  401c68:	call   404860 <__sprintf_chk@plt+0x3670>
  401c6d:	mov    r8d,0xfffeffff
  401c73:	xor    eax,eax
  401c75:	mov    esi,0x123c
  401c7a:	mov    ecx,r8d
  401c7d:	mov    edx,r8d
  401c80:	mov    rdi,rbx
  401c83:	call   404860 <__sprintf_chk@plt+0x3670>
  401c88:	xor    eax,eax
  401c8a:	mov    r9d,0x2
  401c90:	mov    r8d,0xc
  401c96:	mov    ecx,0xfffffffb
  401c9b:	mov    edx,0x2
  401ca0:	mov    esi,0x1295
  401ca5:	mov    rdi,rbx
  401ca8:	call   404860 <__sprintf_chk@plt+0x3670>
  401cad:	push   0x2
  401caf:	push   0xfffffffffffff46c
  401cb4:	xor    eax,eax
  401cb6:	mov    r9d,0xfffff468
  401cbc:	mov    r8d,0x10
  401cc2:	mov    ecx,0xc
  401cc7:	mov    edx,0xfffffffb
  401ccc:	mov    esi,0x12db
  401cd1:	mov    rdi,rbx
  401cd4:	call   404860 <__sprintf_chk@plt+0x3670>
  401cd9:	mov    DWORD PTR [rsp],0x3
  401ce0:	push   0xfffffffffffff46c
  401ce5:	xor    eax,eax
  401ce7:	push   0xfffffffffffff468
  401cec:	mov    r9d,0xfffffffb
  401cf2:	mov    r8d,0x10
  401cf8:	mov    ecx,0x10
  401cfd:	mov    edx,0xfffeffff
  401d02:	mov    esi,0x131b
  401d07:	mov    rdi,rbx
  401d0a:	call   404860 <__sprintf_chk@plt+0x3670>
  401d0f:	mov    r8d,0xfffeffff
  401d15:	add    rsp,0x20
  401d19:	mov    r9d,0xc
  401d1f:	mov    edx,r8d
  401d22:	mov    ecx,0xfffffffb
  401d27:	xor    eax,eax
  401d29:	mov    esi,0x1399
  401d2e:	mov    rdi,rbx
  401d31:	call   404860 <__sprintf_chk@plt+0x3670>
  401d36:	xor    eax,eax
  401d38:	mov    edx,0xf
  401d3d:	mov    esi,0x13ec
  401d42:	mov    rdi,rbx
  401d45:	call   404860 <__sprintf_chk@plt+0x3670>
  401d4a:	sub    rsp,0x8
  401d4e:	xor    eax,eax
  401d50:	mov    r9d,0xfffffffb
  401d56:	push   0xfffffffffffeffff
  401d5b:	mov    r8d,0x3
  401d61:	mov    ecx,0xfffff46c
  401d66:	mov    edx,0xfffff468
  401d6b:	mov    esi,0x1433
  401d70:	mov    rdi,rbx
  401d73:	call   404860 <__sprintf_chk@plt+0x3670>
  401d78:	xor    eax,eax
  401d7a:	mov    r9d,0xfffff4a0
  401d80:	mov    r8d,0x10
  401d86:	mov    ecx,0xfffff4ac
  401d8b:	mov    edx,0xc
  401d90:	mov    esi,0x146e
  401d95:	mov    rdi,rbx
  401d98:	mov    DWORD PTR [rsp],0xfffff4a0
  401d9f:	call   404860 <__sprintf_chk@plt+0x3670>
  401da4:	mov    QWORD PTR [rsp],0x10
  401dac:	push   0xfffffffffffff4ac
  401db1:	xor    eax,eax
  401db3:	push   0xc
  401db5:	mov    r9d,0xfffffffb
  401dbb:	mov    r8d,0xfffff46c
  401dc1:	mov    ecx,0xfffff468
  401dc6:	mov    edx,0x2
  401dcb:	mov    esi,0x14ba
  401dd0:	mov    rdi,rbx
  401dd3:	call   404860 <__sprintf_chk@plt+0x3670>
  401dd8:	add    rsp,0x18
  401ddc:	mov    r9d,0xfffff46c
  401de2:	mov    r8d,0xfffff468
  401de8:	push   0xfffffffffffffffb
  401dea:	mov    ecx,0x2
  401def:	mov    edx,0xfffff4a0
  401df4:	mov    esi,0x14f3
  401df9:	mov    rdi,rbx
  401dfc:	xor    eax,eax
  401dfe:	call   404860 <__sprintf_chk@plt+0x3670>
  401e03:	xor    eax,eax
  401e05:	mov    r9d,0xfffff4a0
  401e0b:	mov    r8d,0x10
  401e11:	mov    ecx,0xfffff4ac
  401e16:	mov    edx,0xc
  401e1b:	mov    esi,0x1541
  401e20:	mov    rdi,rbx
  401e23:	call   404860 <__sprintf_chk@plt+0x3670>
  401e28:	push   0xfffffffffffff4a0
  401e2d:	push   0x10
  401e2f:	mov    r9d,0xfffffffb
  401e35:	push   0xfffffffffffff4ac
  401e3a:	push   0xc
  401e3c:	mov    r8d,0xfffff46c
  401e42:	xor    eax,eax
  401e44:	mov    ecx,0xfffff468
  401e49:	mov    edx,0x2
  401e4e:	mov    esi,0x1597
  401e53:	mov    rdi,rbx
  401e56:	call   404860 <__sprintf_chk@plt+0x3670>
  401e5b:	add    rsp,0x30
  401e5f:	xor    eax,eax
  401e61:	mov    ecx,0xfffffff4
  401e66:	mov    edx,0x2
  401e6b:	mov    esi,0x15dc
  401e70:	mov    rdi,rbx
  401e73:	call   404860 <__sprintf_chk@plt+0x3670>
  401e78:	push   0xfffffffffffeffff
  401e7d:	push   0x43380000
  401e82:	xor    r8d,r8d
  401e85:	push   0x0
  401e87:	push   0x2
  401e89:	xor    eax,eax
  401e8b:	mov    r9d,0x43380000
  401e91:	mov    ecx,0xfffeffff
  401e96:	mov    edx,0x2
  401e9b:	mov    esi,0x1637
  401ea0:	mov    rdi,rbx
  401ea3:	call   404860 <__sprintf_chk@plt+0x3670>
  401ea8:	add    rsp,0x18
  401eac:	xor    r8d,r8d
  401eaf:	xor    eax,eax
  401eb1:	push   0xfffffffffffeffff
  401eb6:	mov    r9d,0x43380000
  401ebc:	mov    ecx,0x2
  401ec1:	mov    edx,0xfffeffff
  401ec6:	mov    esi,0x1682
  401ecb:	mov    rdi,rbx
  401ece:	call   404860 <__sprintf_chk@plt+0x3670>
  401ed3:	xor    r8d,r8d
  401ed6:	xor    eax,eax
  401ed8:	mov    r9d,0x43380000
  401ede:	mov    ecx,0x2
  401ee3:	mov    edx,0xfffeffff
  401ee8:	mov    esi,0x16fb
  401eed:	mov    rdi,rbx
  401ef0:	mov    DWORD PTR [rsp],0xfffeffff
  401ef7:	call   404860 <__sprintf_chk@plt+0x3670>
  401efc:	push   0x2
  401efe:	mov    r8d,0xfffeffff
  401f04:	push   0x43380000
  401f09:	xor    r9d,r9d
  401f0c:	mov    edx,r8d
  401f0f:	xor    eax,eax
  401f11:	mov    ecx,0x2
  401f16:	mov    esi,0x175f
  401f1b:	mov    rdi,rbx
  401f1e:	call   404860 <__sprintf_chk@plt+0x3670>
  401f23:	add    rsp,0x20
  401f27:	xor    ecx,ecx
  401f29:	xor    eax,eax
  401f2b:	push   0xfffffffffffeffff
  401f30:	push   0xfffffffffffeffff
  401f35:	mov    r9d,0x3
  401f3b:	mov    r8d,0x43380000
  401f41:	mov    edx,0xfffeffff
  401f46:	mov    esi,0x17bc
  401f4b:	mov    rdi,rbx
  401f4e:	call   404860 <__sprintf_chk@plt+0x3670>
  401f53:	mov    DWORD PTR [rsp],0x43380000
  401f5a:	push   0x0
  401f5c:	xor    edx,edx
  401f5e:	push   0xfffffffffffeffff
  401f63:	xor    eax,eax
  401f65:	mov    r9d,0xfffeffff
  401f6b:	mov    r8d,0x3
  401f71:	mov    ecx,0x43380000
  401f76:	mov    esi,0x180f
  401f7b:	mov    rdi,rbx
  401f7e:	call   404860 <__sprintf_chk@plt+0x3670>
  401f83:	add    rsp,0x18
  401f87:	mov    r8d,0xfffeffff
  401f8d:	xor    r9d,r9d
  401f90:	push   0xfffffffffffeffff
  401f95:	push   0x3
  401f97:	mov    ecx,r8d
  401f9a:	push   0x43380000
  401f9f:	xor    eax,eax
  401fa1:	mov    edx,0x3
  401fa6:	mov    esi,0x188b
  401fab:	mov    rdi,rbx
  401fae:	call   404860 <__sprintf_chk@plt+0x3670>
  401fb3:	add    rsp,0x20
  401fb7:	mov    r9d,0x3
  401fbd:	xor    ecx,ecx
  401fbf:	push   0x43380000
  401fc4:	push   0x0
  401fc6:	xor    eax,eax
  401fc8:	push   0xfffffffffffeffff
  401fcd:	push   0xfffffffffffeffff
  401fd2:	mov    r8d,0x43380000
  401fd8:	mov    edx,0xfffeffff
  401fdd:	mov    esi,0x18e6
  401fe2:	mov    rdi,rbx
  401fe5:	call   404860 <__sprintf_chk@plt+0x3670>
  401fea:	add    rsp,0x18
  401fee:	xor    eax,eax
  401ff0:	mov    r9d,0xa0
  401ff6:	push   0x18
  401ff8:	push   0x10
  401ffa:	mov    r8d,0x10
  402000:	push   0x18
  402002:	push   0x20
  402004:	mov    ecx,0x2
  402009:	push   0x18
  40200b:	mov    edx,0x3
  402010:	mov    esi,0x1966
  402015:	mov    rdi,rbx
  402018:	call   404860 <__sprintf_chk@plt+0x3670>
  40201d:	add    rsp,0x30
  402021:	xor    eax,eax
  402023:	mov    r9d,0x10
  402029:	push   0x18
  40202b:	push   0x10
  40202d:	mov    r8d,0x14
  402033:	push   0x18
  402035:	push   0x10
  402037:	mov    ecx,0x3
  40203c:	mov    edx,0x10
  402041:	mov    esi,0x19c0
  402046:	mov    rdi,rbx
  402049:	call   404860 <__sprintf_chk@plt+0x3670>
  40204e:	add    rsp,0x18
  402052:	xor    eax,eax
  402054:	mov    r9d,0xc
  40205a:	push   0x10
  40205c:	push   0xfffffffffffff4d9
  402061:	mov    r8d,0x10
  402067:	push   0xfffffffffffff510
  40206c:	mov    ecx,0x20
  402071:	mov    edx,0xfffff4d9
  402076:	mov    esi,0x1a3e
  40207b:	mov    rdi,rbx
  40207e:	call   404860 <__sprintf_chk@plt+0x3670>
  402083:	add    rsp,0x20
  402087:	xor    eax,eax
  402089:	mov    r9d,0xfffff510
  40208f:	push   0x4d8
  402094:	push   0x10
  402096:	mov    r8d,0xc
  40209c:	push   0x10
  40209e:	push   0x4
  4020a0:	mov    ecx,0x10
  4020a5:	mov    edx,0xfffff4d9
  4020aa:	mov    esi,0x1a83
  4020af:	mov    rdi,rbx
  4020b2:	call   404860 <__sprintf_chk@plt+0x3670>
  4020b7:	add    rsp,0x20
  4020bb:	xor    eax,eax
  4020bd:	mov    r9d,0x18
  4020c3:	push   0x18
  4020c5:	push   0x10
  4020c7:	mov    r8d,0x10
  4020cd:	push   0x18
  4020cf:	push   0x10
  4020d1:	mov    ecx,0xffffffc7
  4020d6:	push   0xfffffffffffff640
  4020db:	push   0xfffffffffffff5e0
  4020e0:	mov    edx,0x10
  4020e5:	mov    esi,0x1ad8
  4020ea:	mov    rdi,rbx
  4020ed:	call   404860 <__sprintf_chk@plt+0x3670>
  4020f2:	add    rsp,0x28
  4020f6:	mov    r8,0xfffffffffffffffc
  4020fd:	mov    ecx,0xfffff530
  402102:	push   0x1c
  402104:	push   0x10
  402106:	mov    edx,ecx
  402108:	push   0x18
  40210a:	push   r8
  40210c:	xor    eax,eax
  40210e:	push   0x30
  402110:	push   0xfffffffffffff5e0
  402115:	mov    r9d,0xffffff3c
  40211b:	push   0x10
  40211d:	push   0xfffffffffffff53c
  402122:	mov    esi,0x1b59
  402127:	push   0xfffffffffffff640
  40212c:	push   0xfffffffffffff540
  402131:	mov    rdi,rbx
  402134:	push   0xfffffffffffff53c
  402139:	push   0x80
  40213e:	push   0xffffffffffffff38
  402143:	call   404860 <__sprintf_chk@plt+0x3670>
  402148:	add    rsp,0x70
  40214c:	xor    eax,eax
  40214e:	mov    r9d,0xfffff530
  402154:	push   0x43300000
  402159:	push   0x0
  40215b:	mov    r8d,0xfffff53c
  402161:	push   0x7fffffff
  402166:	push   0xffffffffffffffff
  402168:	mov    ecx,0xffffffd0
  40216d:	push   0x55
  40216f:	push   0xffffffffffffffff
  402171:	mov    edx,0x10
  402176:	mov    esi,0x1c5f
  40217b:	mov    rdi,rbx
  40217e:	call   404860 <__sprintf_chk@plt+0x3670>
  402183:	add    rsp,0x30
  402187:	xor    edx,edx
  402189:	xor    eax,eax
  40218b:	push   0x43300000
  402190:	push   0x0
  402192:	mov    r9d,0x7fffffff
  402198:	push   0x7fffffff
  40219d:	push   0xffffffffffffffff
  40219f:	mov    r8d,0xffffffff
  4021a5:	push   0xffffffffbff00000
  4021aa:	push   0x0
  4021ac:	mov    ecx,0x3ff00000
  4021b1:	push   0x43300000
  4021b6:	push   0x0
  4021b8:	mov    esi,0x1ce8
  4021bd:	mov    rdi,rbx
  4021c0:	call   404860 <__sprintf_chk@plt+0x3670>
  4021c5:	add    rsp,0x40
  4021c9:	mov    r9d,0x7fffffff
  4021cf:	mov    r8d,0xffffffff
  4021d5:	push   0x3ff00000
  4021da:	push   0x0
  4021dc:	xor    edx,edx
  4021de:	push   0x43300000
  4021e3:	push   0x0
  4021e5:	mov    ecx,0x3ff00000
  4021ea:	xor    eax,eax
  4021ec:	mov    esi,0x1d7f
  4021f1:	mov    rdi,rbx
  4021f4:	call   404860 <__sprintf_chk@plt+0x3670>
  4021f9:	add    rsp,0x20
  4021fd:	mov    esi,0x1e77
  402202:	xor    eax,eax
  402204:	mov    rdi,rbx
  402207:	call   404860 <__sprintf_chk@plt+0x3670>
  40220c:	xor    edx,edx
  40220e:	xor    eax,eax
  402210:	mov    ecx,0x3ff00000
  402215:	mov    esi,0x1ee5
  40221a:	mov    rdi,rbx
  40221d:	call   404860 <__sprintf_chk@plt+0x3670>
  402222:	push   0x3ff00000
  402227:	push   0x0
  402229:	xor    r8d,r8d
  40222c:	push   0x7fffffff
  402231:	push   0xffffffffffffffff
  402233:	mov    r9d,0x3ff00000
  402239:	xor    edx,edx
  40223b:	xor    eax,eax
  40223d:	mov    ecx,0x3ff00000
  402242:	mov    esi,0x1f27
  402247:	mov    rdi,rbx
  40224a:	call   404860 <__sprintf_chk@plt+0x3670>
  40224f:	add    rsp,0x20
  402253:	xor    edx,edx
  402255:	mov    ecx,0x7ff00000
  40225a:	xor    eax,eax
  40225c:	mov    esi,0x1fe3
  402261:	mov    rdi,rbx
  402264:	call   404860 <__sprintf_chk@plt+0x3670>
  402269:	xor    eax,eax
  40226b:	mov    esi,0x2045
  402270:	mov    rdi,rbx
  402273:	call   404860 <__sprintf_chk@plt+0x3670>
  402278:	xor    eax,eax
  40227a:	mov    esi,0x2089
  40227f:	mov    rdi,rbx
  402282:	call   404860 <__sprintf_chk@plt+0x3670>
  402287:	xor    eax,eax
  402289:	mov    esi,0x20d4
  40228e:	mov    rdi,rbx
  402291:	call   404860 <__sprintf_chk@plt+0x3670>
  402296:	xor    edx,edx
  402298:	mov    r9d,0x7fffffff
  40229e:	mov    r8d,0xffffffff
  4022a4:	mov    ecx,0x80000000
  4022a9:	xor    eax,eax
  4022ab:	mov    esi,0x2138
  4022b0:	mov    rdi,rbx
  4022b3:	call   404860 <__sprintf_chk@plt+0x3670>
  4022b8:	xor    eax,eax
  4022ba:	mov    esi,0x21af
  4022bf:	mov    rdi,rbx
  4022c2:	call   404860 <__sprintf_chk@plt+0x3670>
  4022c7:	sub    rsp,0x8
  4022cb:	xor    eax,eax
  4022cd:	mov    r9d,0x70
  4022d3:	push   0xb0
  4022d8:	push   0x68
  4022da:	mov    r8d,0xd0
  4022e0:	push   0x60
  4022e2:	push   0x58
  4022e4:	mov    ecx,0xfc
  4022e9:	push   0x50
  4022eb:	push   0x98
  4022f0:	mov    edx,0xbb8
  4022f5:	push   0x90
  4022fa:	push   0x50
  4022fc:	mov    esi,0x21e6
  402301:	push   0x48
  402303:	push   0x40
  402305:	mov    rdi,rbx
  402308:	push   0x38
  40230a:	push   0x30
  40230c:	push   0x88
  402311:	push   0x80
  402316:	push   0x78
  402318:	call   404860 <__sprintf_chk@plt+0x3670>
  40231d:	add    rsp,0x78
  402321:	xor    eax,eax
  402323:	mov    r9d,0x18
  402329:	push   0xc
  40232b:	push   0x8
  40232d:	mov    r8d,0x10
  402333:	push   0x30
  402335:	push   0x70
  402337:	mov    ecx,0xffffffff
  40233c:	push   0x18
  40233e:	push   0x10
  402340:	mov    edx,0xfffff530
  402345:	push   0x10
  402347:	push   0xfffffffffffff544
  40234c:	mov    esi,0x2253
  402351:	push   0x10
  402353:	mov    rdi,rbx
  402356:	call   404860 <__sprintf_chk@plt+0x3670>
  40235b:	add    rsp,0x48
  40235f:	mov    r9d,0x90
  402365:	xor    ecx,ecx
  402367:	push   0x40
  402369:	push   0x30
  40236b:	mov    r8d,0xf
  402371:	push   0x20
  402373:	push   0x10
  402375:	mov    edx,0xc0
  40237a:	push   0xb8
  40237f:	push   0xb0
  402384:	mov    esi,0x22d6
  402389:	push   0xa8
  40238e:	push   0xa0
  402393:	mov    rdi,rbx
  402396:	push   0x98
  40239b:	xor    eax,eax
  40239d:	xor    ebp,ebp
  40239f:	call   404860 <__sprintf_chk@plt+0x3670>
  4023a4:	add    rsp,0x48
  4023a8:	mov    r9d,0x80
  4023ae:	mov    r8d,0x70
  4023b4:	push   0x20
  4023b6:	push   0x98
  4023bb:	mov    ecx,0x60
  4023c0:	push   0x10
  4023c2:	push   0x90
  4023c7:	mov    edx,0x50
  4023cc:	push   0x0
  4023ce:	mov    esi,0x2327
  4023d3:	mov    rdi,rbx
  4023d6:	xor    eax,eax
  4023d8:	call   404860 <__sprintf_chk@plt+0x3670>
  4023dd:	add    rsp,0x30
  4023e1:	mov    esi,0x3818
  4023e6:	mov    rdi,rbx
  4023e9:	xor    eax,eax
  4023eb:	call   404860 <__sprintf_chk@plt+0x3670>
  4023f0:	lea    r15d,[rbp-0x4]
  4023f4:	xor    eax,eax
  4023f6:	mov    edx,ebp
  4023f8:	mov    esi,0x20a
  4023fd:	mov    rdi,rbx
  402400:	call   404860 <__sprintf_chk@plt+0x3670>
  402405:	cmp    r15d,0x58
  402409:	ja     403478 <__sprintf_chk@plt+0x2288>
  40240f:	mov    eax,r15d
  402412:	movsxd rax,DWORD PTR [r14+rax*4]
  402416:	add    rax,r14
  402419:	jmp    rax
  40241b:	cmp    BYTE PTR [rax+0x2],0x0
  40241f:	jne    4033c4 <__sprintf_chk@plt+0x21d4>
  402425:	movsxd rax,r13d
  402428:	mov    r12,QWORD PTR [r14+rax*8]
  40242c:	test   r12,r12
  40242f:	je     4033c4 <__sprintf_chk@plt+0x21d4>
  402435:	xor    ebx,ebx
  402437:	mov    rsi,r15
  40243a:	jmp    402452 <__sprintf_chk@plt+0x1262>
  40243c:	nop    DWORD PTR [rax+0x0]
  402440:	add    rbx,0x1
  402444:	mov    rsi,QWORD PTR [rbp+rbx*8+0x0]
  402449:	test   rsi,rsi
  40244c:	je     4033c4 <__sprintf_chk@plt+0x21d4>
  402452:	mov    rdi,r12
  402455:	call   401110 <strcmp@plt>
  40245a:	test   eax,eax
  40245c:	jne    402440 <__sprintf_chk@plt+0x1250>
  40245e:	mov    DWORD PTR [rsp+0x18],ebx
  402462:	jmp    4012ad <__sprintf_chk@plt+0xbd>
  402467:	nop    WORD PTR [rax+rax*1+0x0]
  402470:	mov    r8d,0x2
  402476:	mov    ecx,0xffffff80
  40247b:	mov    edx,0x7e
  402480:	mov    esi,0x34e4
  402485:	mov    rdi,rbx
  402488:	xor    eax,eax
  40248a:	call   404860 <__sprintf_chk@plt+0x3670>
  40248f:	nop
  402490:	add    ebp,0x1
  402493:	add    r12d,0x1
  402497:	add    r13d,0x1
  40249b:	jmp    4023f0 <__sprintf_chk@plt+0x1200>
  4024a0:	mov    esi,0x30c1
  4024a5:	mov    rdi,rbx
  4024a8:	xor    eax,eax
  4024aa:	call   404860 <__sprintf_chk@plt+0x3670>
  4024af:	jmp    402490 <__sprintf_chk@plt+0x12a0>
  4024b1:	xor    eax,eax
  4024b3:	mov    esi,0x34f9
  4024b8:	mov    rdi,rbx
  4024bb:	call   404860 <__sprintf_chk@plt+0x3670>
  4024c0:	lea    eax,[rbp-0x4c]
  4024c3:	cmp    eax,0x1
  4024c6:	ja     4034bd <__sprintf_chk@plt+0x22cd>
  4024cc:	mov    esi,0x35eb
  4024d1:	mov    rdi,rbx
  4024d4:	xor    eax,eax
  4024d6:	call   404860 <__sprintf_chk@plt+0x3670>
  4024db:	mov    esi,0x35f8
  4024e0:	mov    rdi,rbx
  4024e3:	xor    eax,eax
  4024e5:	call   404860 <__sprintf_chk@plt+0x3670>
  4024ea:	mov    esi,0x3604
  4024ef:	mov    rdi,rbx
  4024f2:	xor    eax,eax
  4024f4:	call   404860 <__sprintf_chk@plt+0x3670>
  4024f9:	xor    eax,eax
  4024fb:	mov    esi,0x361c
  402500:	mov    rdi,rbx
  402503:	call   404860 <__sprintf_chk@plt+0x3670>
  402508:	cmp    ebp,0x49
  40250b:	je     4039b7 <__sprintf_chk@plt+0x27c7>
  402511:	cmp    ebp,0x4a
  402514:	je     4039d0 <__sprintf_chk@plt+0x27e0>
  40251a:	cmp    ebp,0x4c
  40251d:	je     40394e <__sprintf_chk@plt+0x275e>
  402523:	mov    edx,0x53
  402528:	mov    esi,0x363d
  40252d:	mov    rdi,rbx
  402530:	xor    eax,eax
  402532:	call   404860 <__sprintf_chk@plt+0x3670>
  402537:	mov    esi,0x364b
  40253c:	mov    rdi,rbx
  40253f:	xor    eax,eax
  402541:	call   404860 <__sprintf_chk@plt+0x3670>
  402546:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402550:	cmp    r12d,0x5d
  402554:	jne    402490 <__sprintf_chk@plt+0x12a0>
  40255a:	or     esi,0xffffffff
  40255d:	mov    rdi,rbx
  402560:	mov    DWORD PTR [rsp+0x48],0x5d
  402568:	call   405990 <__sprintf_chk@plt+0x47a0>
  40256d:	lea    rsi,[rbx+0x30]
  402571:	mov    rdi,rbx
  402574:	call   404f70 <__sprintf_chk@plt+0x3d80>
  402579:	test   eax,eax
  40257b:	mov    ebp,eax
  40257d:	je     40380d <__sprintf_chk@plt+0x261d>
  402583:	mov    rax,QWORD PTR [rip+0x10a66]        # 412ff0 <__sprintf_chk@plt+0x11e00>
  40258a:	lea    rdx,[rip+0x6be5]        # 409176 <__sprintf_chk@plt+0x7f86>
  402591:	mov    ecx,ebp
  402593:	mov    esi,0x1
  402598:	mov    ebx,0x1
  40259d:	mov    rdi,QWORD PTR [rax]
  4025a0:	xor    eax,eax
  4025a2:	call   4011c0 <__fprintf_chk@plt>
  4025a7:	mov    rcx,QWORD PTR [rsp+0xa58]
  4025af:	xor    rcx,QWORD PTR fs:0x28
  4025b8:	mov    eax,ebx
  4025ba:	jne    40415a <__sprintf_chk@plt+0x2f6a>
  4025c0:	add    rsp,0xa68
  4025c7:	pop    rbx
  4025c8:	pop    rbp
  4025c9:	pop    r12
  4025cb:	pop    r13
  4025cd:	pop    r14
  4025cf:	pop    r15
  4025d1:	ret    
  4025d2:	xor    eax,eax
  4025d4:	mov    r8d,0xffffffc2
  4025da:	mov    ecx,0x20
  4025df:	mov    edx,0xffffffcc
  4025e4:	mov    esi,0x36f1
  4025e9:	mov    rdi,rbx
  4025ec:	call   404860 <__sprintf_chk@plt+0x3670>
  4025f1:	cmp    ebp,0x57
  4025f4:	je     40374a <__sprintf_chk@plt+0x255a>
  4025fa:	mov    esi,0x2399
  4025ff:	mov    rdi,rbx
  402602:	xor    eax,eax
  402604:	call   404860 <__sprintf_chk@plt+0x3670>
  402609:	or     edx,0xffffffff
  40260c:	mov    esi,0x3719
  402611:	mov    rdi,rbx
  402614:	xor    eax,eax
  402616:	call   404860 <__sprintf_chk@plt+0x3670>
  40261b:	jmp    402550 <__sprintf_chk@plt+0x1360>
  402620:	cmp    ebp,0x47
  402623:	je     4035ae <__sprintf_chk@plt+0x23be>
  402629:	xor    eax,eax
  40262b:	mov    esi,0x3424
  402630:	mov    rdi,rbx
  402633:	call   404860 <__sprintf_chk@plt+0x3670>
  402638:	xor    eax,eax
  40263a:	mov    edx,0x3
  40263f:	mov    esi,0x3428
  402644:	mov    rdi,rbx
  402647:	call   404860 <__sprintf_chk@plt+0x3670>
  40264c:	cmp    ebp,0x48
  40264f:	je     403696 <__sprintf_chk@plt+0x24a6>
  402655:	xor    eax,eax
  402657:	mov    esi,0x343b
  40265c:	mov    rdi,rbx
  40265f:	call   404860 <__sprintf_chk@plt+0x3670>
  402664:	mov    edx,0x10
  402669:	mov    esi,0x3486
  40266e:	xor    eax,eax
  402670:	mov    ecx,0xffffffd0
  402675:	mov    rdi,rbx
  402678:	call   404860 <__sprintf_chk@plt+0x3670>
  40267d:	or     edx,0xffffffff
  402680:	cmp    ebp,0x46
  402683:	mov    esi,0x34c1
  402688:	je     40373d <__sprintf_chk@plt+0x254d>
  40268e:	mov    rdi,rbx
  402691:	xor    eax,eax
  402693:	call   404860 <__sprintf_chk@plt+0x3670>
  402698:	mov    ecx,0x7
  40269d:	mov    edx,0xfffffffd
  4026a2:	mov    esi,0x34c8
  4026a7:	mov    rdi,rbx
  4026aa:	xor    eax,eax
  4026ac:	call   404860 <__sprintf_chk@plt+0x3670>
  4026b1:	mov    esi,0x34e0
  4026b6:	mov    rdi,rbx
  4026b9:	xor    eax,eax
  4026bb:	call   404860 <__sprintf_chk@plt+0x3670>
  4026c0:	mov    esi,0x2625
  4026c5:	mov    rdi,rbx
  4026c8:	xor    eax,eax
  4026ca:	call   404860 <__sprintf_chk@plt+0x3670>
  4026cf:	jmp    402550 <__sprintf_chk@plt+0x1360>
  4026d4:	or     edx,0xffffffff
  4026d7:	xor    eax,eax
  4026d9:	mov    esi,0x366c
  4026de:	mov    rdi,rbx
  4026e1:	call   404860 <__sprintf_chk@plt+0x3670>
  4026e6:	cmp    ebp,0x50
  4026e9:	je     403763 <__sprintf_chk@plt+0x2573>
  4026ef:	mov    edx,0xfffe0000
  4026f4:	mov    esi,0x3689
  4026f9:	mov    rdi,rbx
  4026fc:	xor    eax,eax
  4026fe:	call   404860 <__sprintf_chk@plt+0x3670>
  402703:	mov    esi,0x2397
  402708:	mov    rdi,rbx
  40270b:	xor    eax,eax
  40270d:	call   404860 <__sprintf_chk@plt+0x3670>
  402712:	jmp    402550 <__sprintf_chk@plt+0x1360>
  402717:	or     ecx,0xffffffff
  40271a:	mov    rdi,rbx
  40271d:	xor    eax,eax
  40271f:	mov    r8d,0x20
  402725:	mov    edx,0xb
  40272a:	mov    esi,0x3337
  40272f:	call   404860 <__sprintf_chk@plt+0x3670>
  402734:	mov    r9d,0x18
  40273a:	mov    r8d,0x10
  402740:	mov    ecx,0x18
  402745:	mov    edx,0x10
  40274a:	mov    esi,0x33de
  40274f:	mov    rdi,rbx
  402752:	xor    eax,eax
  402754:	call   404860 <__sprintf_chk@plt+0x3670>
  402759:	jmp    402490 <__sprintf_chk@plt+0x12a0>
  40275e:	push   0x18
  402760:	push   0x1c
  402762:	mov    r9d,0xfffe0000
  402768:	or     r8d,0xffffffff
  40276c:	mov    ecx,0x8
  402771:	mov    edx,0x18
  402776:	mov    esi,0x31f7
  40277b:	mov    rdi,rbx
  40277e:	xor    eax,eax
  402780:	call   404860 <__sprintf_chk@plt+0x3670>
  402785:	mov    r9d,0x8
  40278b:	or     r8d,0xffffffff
  40278f:	mov    ecx,0x4
  402794:	mov    edx,0x14
  402799:	mov    esi,0x328f
  40279e:	mov    rdi,rbx
  4027a1:	xor    eax,eax
  4027a3:	mov    DWORD PTR [rsp],0x0
  4027aa:	call   404860 <__sprintf_chk@plt+0x3670>
  4027af:	pop    r9
  4027b1:	pop    r10
  4027b3:	jmp    402490 <__sprintf_chk@plt+0x12a0>
  4027b8:	sub    rsp,0x8
  4027bc:	mov    r9d,0x6
  4027c2:	or     r8d,0xffffffff
  4027c6:	push   0x41
  4027c8:	push   0xfffffffffffe0000
  4027cd:	mov    ecx,0xfffffff4
  4027d2:	push   0x54
  4027d4:	push   0xfffffffffffe0000
  4027d9:	mov    edx,0xfffffff7
  4027de:	push   0x4
  4027e0:	mov    esi,0x32c6
  4027e5:	mov    rdi,rbx
  4027e8:	xor    eax,eax
  4027ea:	call   404860 <__sprintf_chk@plt+0x3670>
  4027ef:	add    rsp,0x30
  4027f3:	jmp    402490 <__sprintf_chk@plt+0x12a0>
  4027f8:	mov    r8d,0x10
  4027fe:	mov    ecx,0x3
  402803:	mov    edx,0xfffffff7
  402808:	mov    esi,0x31af
  40280d:	mov    rdi,rbx
  402810:	xor    eax,eax
  402812:	call   404860 <__sprintf_chk@plt+0x3670>
  402817:	jmp    402490 <__sprintf_chk@plt+0x12a0>
  40281c:	mov    r9d,0x10
  402822:	mov    r8d,0x6
  402828:	mov    ecx,0x3
  40282d:	mov    edx,0xfffffff7
  402832:	mov    esi,0x30f1
  402837:	mov    rdi,rbx
  40283a:	xor    eax,eax
  40283c:	call   404860 <__sprintf_chk@plt+0x3670>
  402841:	push   0x3
  402843:	push   0x7
  402845:	mov    r9d,0x3
  40284b:	mov    r8d,0xffffffd0
  402851:	mov    ecx,0x10
  402856:	mov    edx,0x3
  40285b:	mov    esi,0x3167
  402860:	mov    rdi,rbx
  402863:	xor    eax,eax
  402865:	call   404860 <__sprintf_chk@plt+0x3670>
  40286a:	pop    r11
  40286c:	pop    r15
  40286e:	jmp    402490 <__sprintf_chk@plt+0x12a0>
  402873:	or     r9d,0xffffffff
  402877:	mov    r8d,0xffffffc2
  40287d:	mov    ecx,0x20
  402882:	mov    rdi,rbx
  402885:	xor    eax,eax
  402887:	mov    edx,0x3
  40288c:	mov    esi,0x372f
  402891:	call   404860 <__sprintf_chk@plt+0x3670>
  402896:	mov    rdi,rbx
  402899:	xor    eax,eax
  40289b:	mov    edx,0xffffffcc
  4028a0:	mov    esi,0x3790
  4028a5:	call   404860 <__sprintf_chk@plt+0x3670>
  4028aa:	or     edx,0xffffffff
  4028ad:	mov    esi,0x37a9
  4028b2:	mov    rdi,rbx
  4028b5:	xor    eax,eax
  4028b7:	call   404860 <__sprintf_chk@plt+0x3670>
  4028bc:	jmp    402490 <__sprintf_chk@plt+0x12a0>
  4028c1:	xor    eax,eax
  4028c3:	mov    esi,0x263e
  4028c8:	mov    rdi,rbx
  4028cb:	call   404860 <__sprintf_chk@plt+0x3670>
  4028d0:	cmp    ebp,0x3d
  4028d3:	je     40398f <__sprintf_chk@plt+0x279f>
  4028d9:	mov    ecx,0x10
  4028de:	mov    edx,0xfffffff7
  4028e3:	mov    esi,0x30c6
  4028e8:	mov    rdi,rbx
  4028eb:	xor    eax,eax
  4028ed:	call   404860 <__sprintf_chk@plt+0x3670>
  4028f2:	jmp    402550 <__sprintf_chk@plt+0x1360>
  4028f7:	push   0x10
  4028f9:	push   0x10
  4028fb:	mov    r9d,0x8
  402901:	mov    r8d,0x18
  402907:	mov    ecx,0x4
  40290c:	mov    edx,0x4
  402911:	mov    esi,0x3017
  402916:	mov    rdi,rbx
  402919:	xor    eax,eax
  40291b:	call   404860 <__sprintf_chk@plt+0x3670>
  402920:	mov    r9d,0xfffff484
  402926:	mov    edx,0x4
  40292b:	xor    eax,eax
  40292d:	mov    r8d,r9d
  402930:	mov    ecx,0xfb
  402935:	mov    esi,0x30ad
  40293a:	mov    rdi,rbx
  40293d:	mov    DWORD PTR [rsp],0xc
  402944:	call   404860 <__sprintf_chk@plt+0x3670>
  402949:	pop    rax
  40294a:	pop    rdx
  40294b:	jmp    402490 <__sprintf_chk@plt+0x12a0>
  402950:	sub    rsp,0x8
  402954:	or     r9d,0xffffffff
  402958:	mov    r8d,0x8
  40295e:	push   0x10
  402960:	push   0x4
  402962:	mov    ecx,0x18
  402967:	push   0x4
  402969:	mov    edx,0xfffffff4
  40296e:	mov    esi,0x2f88
  402973:	mov    rdi,rbx
  402976:	xor    eax,eax
  402978:	call   404860 <__sprintf_chk@plt+0x3670>
  40297d:	add    rsp,0x20
  402981:	mov    r9d,0x4
  402987:	mov    r8d,0x2
  40298d:	push   0xc
  40298f:	push   0xfffffffffffff484
  402994:	mov    ecx,0x6
  402999:	push   0xfffffffffffff484
  40299e:	push   0xfb
  4029a3:	mov    edx,0x10
  4029a8:	mov    esi,0x2fe7
  4029ad:	mov    rdi,rbx
  4029b0:	xor    eax,eax
  4029b2:	call   404860 <__sprintf_chk@plt+0x3670>
  4029b7:	add    rsp,0x20
  4029bb:	jmp    402490 <__sprintf_chk@plt+0x12a0>
  4029c0:	push   0xffffffffffffffff
  4029c2:	push   0x8
  4029c4:	mov    r9d,0x18
  4029ca:	push   0xfffffffffffffffb
  4029cc:	push   0xc
  4029ce:	mov    r8d,0x8
  4029d4:	push   0x14
  4029d6:	push   0x6
  4029d8:	mov    ecx,0x1c
  4029dd:	mov    edx,0xfffffff4
  4029e2:	mov    esi,0x2e88
  4029e7:	mov    rdi,rbx
  4029ea:	xor    eax,eax
  4029ec:	call   404860 <__sprintf_chk@plt+0x3670>
  4029f1:	add    rsp,0x28
  4029f5:	mov    r9d,0x10
  4029fb:	mov    r8d,0x10
  402a01:	push   0x10
  402a03:	push   0x2
  402a05:	mov    ecx,0x4
  402a0a:	push   0x6
  402a0c:	mov    edx,0x4
  402a11:	mov    esi,0x2ed5
  402a16:	mov    rdi,rbx
  402a19:	xor    eax,eax
  402a1b:	call   404860 <__sprintf_chk@plt+0x3670>
  402a20:	add    rsp,0x18
  402a24:	mov    r9d,0xfffffffb
  402a2a:	mov    r8d,0x2
  402a30:	push   0xc
  402a32:	push   0xfffffffffffff484
  402a37:	mov    ecx,0x6
  402a3c:	push   0xfffffffffffff484
  402a41:	push   0xfb
  402a46:	mov    edx,0x10
  402a4b:	push   0x4
  402a4d:	push   0x10
  402a4f:	mov    esi,0x2f2c
  402a54:	push   0x10
  402a56:	mov    rdi,rbx
  402a59:	xor    eax,eax
  402a5b:	call   404860 <__sprintf_chk@plt+0x3670>
  402a60:	add    rsp,0x40
  402a64:	jmp    402490 <__sprintf_chk@plt+0x12a0>
  402a69:	sub    rsp,0x8
  402a6d:	mov    rdi,rbx
  402a70:	xor    eax,eax
  402a72:	push   0x4
  402a74:	push   0x4
  402a76:	mov    r9d,0x8
  402a7c:	push   0xffffffffffffffff
  402a7e:	mov    r8d,0x18
  402a84:	mov    ecx,0xfffeffff
  402a89:	mov    edx,0xfffffff4
  402a8e:	mov    esi,0x2dc3
  402a93:	call   404860 <__sprintf_chk@plt+0x3670>
  402a98:	add    rsp,0x18
  402a9c:	mov    rdi,rbx
  402a9f:	xor    eax,eax
  402aa1:	push   0xfb
  402aa6:	push   0x4
  402aa8:	mov    r9d,0x2
  402aae:	push   0xfffffffffffffffb
  402ab0:	mov    r8d,0x6
  402ab6:	mov    ecx,0x10
  402abb:	mov    edx,0x10
  402ac0:	mov    esi,0x2e1f
  402ac5:	call   404860 <__sprintf_chk@plt+0x3670>
  402aca:	mov    ecx,0xfffff484
  402acf:	add    rsp,0x20
  402ad3:	mov    r8d,0xc
  402ad9:	mov    edx,ecx
  402adb:	mov    esi,0x2e73
  402ae0:	mov    rdi,rbx
  402ae3:	xor    eax,eax
  402ae5:	call   404860 <__sprintf_chk@plt+0x3670>
  402aea:	jmp    402490 <__sprintf_chk@plt+0x12a0>
  402aef:	push   0x1
  402af1:	push   0x6
  402af3:	mov    rdi,rbx
  402af6:	push   0x10
  402af8:	push   0x10
  402afa:	xor    eax,eax
  402afc:	or     r9d,0xffffffff
  402b00:	mov    r8d,0x8
  402b06:	mov    ecx,0x18
  402b0b:	mov    edx,0xfffffff4
  402b10:	mov    esi,0x2d52
  402b15:	call   404860 <__sprintf_chk@plt+0x3670>
  402b1a:	add    rsp,0x20
  402b1e:	or     edx,0xffffffff
  402b21:	mov    esi,0x2db2
  402b26:	mov    rdi,rbx
  402b29:	xor    eax,eax
  402b2b:	call   404860 <__sprintf_chk@plt+0x3670>
  402b30:	jmp    402490 <__sprintf_chk@plt+0x12a0>
  402b35:	sub    rsp,0x8
  402b39:	mov    r9d,0x18
  402b3f:	mov    r8d,0x8
  402b45:	push   0xffffffffffffffff
  402b47:	push   0x8
  402b49:	mov    ecx,0x1c
  402b4e:	push   0xfffffffffffffffb
  402b50:	push   0xc
  402b52:	mov    edx,0xfffffff4
  402b57:	push   0x14
  402b59:	mov    esi,0x2cb5
  402b5e:	mov    rdi,rbx
  402b61:	xor    eax,eax
  402b63:	call   404860 <__sprintf_chk@plt+0x3670>
  402b68:	add    rsp,0x28
  402b6c:	mov    ecx,0x10
  402b71:	mov    esi,0x2d0a
  402b76:	push   0x1
  402b78:	mov    r9d,0x6
  402b7e:	mov    r8d,0x10
  402b84:	or     edx,0xffffffff
  402b87:	mov    rdi,rbx
  402b8a:	xor    eax,eax
  402b8c:	call   404860 <__sprintf_chk@plt+0x3670>
  402b91:	pop    rcx
  402b92:	pop    rsi
  402b93:	jmp    402490 <__sprintf_chk@plt+0x12a0>
  402b98:	push   0x10
  402b9a:	push   0xffffffffffffffff
  402b9c:	mov    r9d,0x8
  402ba2:	mov    r8d,0x18
  402ba8:	mov    ecx,0xfffeffff
  402bad:	mov    edx,0xfffffff4
  402bb2:	mov    esi,0x2c0f
  402bb7:	mov    rdi,rbx
  402bba:	xor    eax,eax
  402bbc:	call   404860 <__sprintf_chk@plt+0x3670>
  402bc1:	mov    r8d,0x1
  402bc7:	mov    rdi,rbx
  402bca:	or     r9d,0xffffffff
  402bce:	mov    ecx,0x6
  402bd3:	mov    edx,0x10
  402bd8:	mov    esi,0x2c85
  402bdd:	xor    eax,eax
  402bdf:	mov    DWORD PTR [rsp],0xfffffffb
  402be6:	call   404860 <__sprintf_chk@plt+0x3670>
  402beb:	pop    rdi
  402bec:	pop    r8
  402bee:	jmp    402490 <__sprintf_chk@plt+0x12a0>
  402bf3:	mov    edx,0x8
  402bf8:	mov    esi,0x2bfb
  402bfd:	mov    rdi,rbx
  402c00:	xor    eax,eax
  402c02:	call   404860 <__sprintf_chk@plt+0x3670>
  402c07:	jmp    402490 <__sprintf_chk@plt+0x12a0>
  402c0c:	mov    edx,0x8
  402c11:	mov    esi,0x2be7
  402c16:	mov    rdi,rbx
  402c19:	xor    eax,eax
  402c1b:	call   404860 <__sprintf_chk@plt+0x3670>
  402c20:	jmp    402490 <__sprintf_chk@plt+0x12a0>
  402c25:	sub    rsp,0x8
  402c29:	mov    r9d,0x10
  402c2f:	mov    r8d,0x10
  402c35:	push   0xfffffffffffffff4
  402c37:	mov    ecx,0xfffff46c
  402c3c:	mov    edx,0xfffff468
  402c41:	mov    esi,0x2b84
  402c46:	mov    rdi,rbx
  402c49:	xor    eax,eax
  402c4b:	call   404860 <__sprintf_chk@plt+0x3670>
  402c50:	pop    r9
  402c52:	pop    r10
  402c54:	jmp    402490 <__sprintf_chk@plt+0x12a0>
  402c59:	sub    rsp,0x8
  402c5d:	mov    r9d,0x10
  402c63:	mov    r8d,0xfffff46c
  402c69:	push   0xfffffffffffffff4
  402c6b:	mov    ecx,0xfffff468
  402c70:	mov    edx,0x10
  402c75:	mov    esi,0x2b08
  402c7a:	mov    rdi,rbx
  402c7d:	xor    eax,eax
  402c7f:	call   404860 <__sprintf_chk@plt+0x3670>
  402c84:	pop    r11
  402c86:	pop    r15
  402c88:	jmp    402490 <__sprintf_chk@plt+0x12a0>
  402c8d:	mov    r8d,0xfffffff7
  402c93:	mov    ecx,0x10
  402c98:	mov    edx,0x10
  402c9d:	mov    esi,0x2ac5
  402ca2:	mov    rdi,rbx
  402ca5:	xor    eax,eax
  402ca7:	call   404860 <__sprintf_chk@plt+0x3670>
  402cac:	jmp    402490 <__sprintf_chk@plt+0x12a0>
  402cb1:	mov    r9d,0x10
  402cb7:	mov    r8d,0x10
  402cbd:	mov    ecx,0x28
  402cc2:	mov    edx,0xfffe0000
  402cc7:	mov    esi,0x2a8d
  402ccc:	mov    rdi,rbx
  402ccf:	xor    eax,eax
  402cd1:	call   404860 <__sprintf_chk@plt+0x3670>
  402cd6:	jmp    402490 <__sprintf_chk@plt+0x12a0>
  402cdb:	mov    ecx,0x10
  402ce0:	mov    edx,0x14
  402ce5:	mov    esi,0x2a65
  402cea:	mov    rdi,rbx
  402ced:	xor    eax,eax
  402cef:	call   404860 <__sprintf_chk@plt+0x3670>
  402cf4:	jmp    402490 <__sprintf_chk@plt+0x12a0>
  402cf9:	mov    ecx,0x10
  402cfe:	mov    edx,0x14
  402d03:	mov    esi,0x2a38
  402d08:	mov    rdi,rbx
  402d0b:	xor    eax,eax
  402d0d:	call   404860 <__sprintf_chk@plt+0x3670>
  402d12:	jmp    402490 <__sprintf_chk@plt+0x12a0>
  402d17:	sub    rsp,0x8
  402d1b:	mov    r9d,0x4
  402d21:	mov    r8d,0xfffffffb
  402d27:	push   0xfffffffffffff448
  402d2c:	push   0x6
  402d2e:	mov    ecx,0x10
  402d33:	push   0x3
  402d35:	push   0x4
  402d37:	mov    edx,0x14
  402d3c:	push   0x4
  402d3e:	mov    esi,0x29d8
  402d43:	mov    rdi,rbx
  402d46:	xor    eax,eax
  402d48:	call   404860 <__sprintf_chk@plt+0x3670>
  402d4d:	add    rsp,0x30
  402d51:	jmp    402490 <__sprintf_chk@plt+0x12a0>
  402d56:	push   0xfffffffffffff448
  402d5b:	push   0x3
  402d5d:	mov    rdi,rbx
  402d60:	push   0x4
  402d62:	push   0xfffffffffffffff6
  402d64:	xor    eax,eax
  402d66:	push   0xfffffffffffffffc
  402d68:	push   0x4
  402d6a:	mov    r9d,0xfffffffc
  402d70:	mov    r8d,0x10
  402d76:	mov    ecx,0x6
  402d7b:	mov    edx,0x14
  402d80:	mov    esi,0x296c
  402d85:	call   404860 <__sprintf_chk@plt+0x3670>
  402d8a:	add    rsp,0x30
  402d8e:	mov    esi,0x29cc
  402d93:	mov    rdi,rbx
  402d96:	xor    eax,eax
  402d98:	call   404860 <__sprintf_chk@plt+0x3670>
  402d9d:	jmp    402490 <__sprintf_chk@plt+0x12a0>
  402da2:	mov    ecx,0x10
  402da7:	mov    edx,0x14
  402dac:	mov    esi,0x2943
  402db1:	mov    rdi,rbx
  402db4:	xor    eax,eax
  402db6:	call   404860 <__sprintf_chk@plt+0x3670>
  402dbb:	jmp    402490 <__sprintf_chk@plt+0x12a0>
  402dc0:	or     edx,0xffffffff
  402dc3:	mov    esi,0x2913
  402dc8:	mov    rdi,rbx
  402dcb:	xor    eax,eax
  402dcd:	call   404860 <__sprintf_chk@plt+0x3670>
  402dd2:	jmp    402490 <__sprintf_chk@plt+0x12a0>
  402dd7:	mov    esi,0x28f6
  402ddc:	mov    rdi,rbx
  402ddf:	xor    eax,eax
  402de1:	call   404860 <__sprintf_chk@plt+0x3670>
  402de6:	jmp    402490 <__sprintf_chk@plt+0x12a0>
  402deb:	mov    esi,0x28d4
  402df0:	mov    rdi,rbx
  402df3:	xor    eax,eax
  402df5:	call   404860 <__sprintf_chk@plt+0x3670>
  402dfa:	jmp    402490 <__sprintf_chk@plt+0x12a0>
  402dff:	mov    esi,0x28b1
  402e04:	mov    rdi,rbx
  402e07:	xor    eax,eax
  402e09:	call   404860 <__sprintf_chk@plt+0x3670>
  402e0e:	jmp    402490 <__sprintf_chk@plt+0x12a0>
  402e13:	mov    edx,0xfffffff5
  402e18:	mov    esi,0x288c
  402e1d:	mov    rdi,rbx
  402e20:	xor    eax,eax
  402e22:	call   404860 <__sprintf_chk@plt+0x3670>
  402e27:	jmp    402490 <__sprintf_chk@plt+0x12a0>
  402e2c:	mov    edx,0xfffffffb
  402e31:	mov    esi,0x288c
  402e36:	mov    rdi,rbx
  402e39:	xor    eax,eax
  402e3b:	call   404860 <__sprintf_chk@plt+0x3670>
  402e40:	jmp    402490 <__sprintf_chk@plt+0x12a0>
  402e45:	mov    ecx,0x10
  402e4a:	mov    edx,0x10
  402e4f:	mov    esi,0x2838
  402e54:	mov    rdi,rbx
  402e57:	xor    eax,eax
  402e59:	call   404860 <__sprintf_chk@plt+0x3670>
  402e5e:	jmp    402490 <__sprintf_chk@plt+0x12a0>
  402e63:	mov    rdi,rbx
  402e66:	xor    eax,eax
  402e68:	mov    esi,0x263a
  402e6d:	call   404860 <__sprintf_chk@plt+0x3670>
  402e72:	mov    ecx,0xfffeffff
  402e77:	mov    rdi,rbx
  402e7a:	xor    eax,eax
  402e7c:	mov    edx,ecx
  402e7e:	mov    esi,0x27d2
  402e83:	call   404860 <__sprintf_chk@plt+0x3670>
  402e88:	mov    esi,0x281a
  402e8d:	mov    rdi,rbx
  402e90:	xor    eax,eax
  402e92:	call   404860 <__sprintf_chk@plt+0x3670>
  402e97:	jmp    402490 <__sprintf_chk@plt+0x12a0>
  402e9c:	xor    eax,eax
  402e9e:	mov    esi,0x263a
  402ea3:	mov    rdi,rbx
  402ea6:	call   404860 <__sprintf_chk@plt+0x3670>
  402eab:	mov    eax,r13d
  402eae:	mov    ecx,0x5
  402eb3:	cdq    
  402eb4:	idiv   ecx
  402eb6:	sub    eax,0x1
  402eb9:	jne    403722 <__sprintf_chk@plt+0x2532>
  402ebf:	mov    edx,0xfffeffff
  402ec4:	mov    esi,0x27b8
  402ec9:	mov    rdi,rbx
  402ecc:	xor    eax,eax
  402ece:	call   404860 <__sprintf_chk@plt+0x3670>
  402ed3:	mov    esi,0x2815
  402ed8:	mov    rdi,rbx
  402edb:	xor    eax,eax
  402edd:	call   404860 <__sprintf_chk@plt+0x3670>
  402ee2:	jmp    402550 <__sprintf_chk@plt+0x1360>
  402ee7:	mov    rdi,rbx
  402eea:	xor    eax,eax
  402eec:	mov    esi,0x263a
  402ef1:	call   404860 <__sprintf_chk@plt+0x3670>
  402ef6:	mov    rdi,rbx
  402ef9:	xor    eax,eax
  402efb:	mov    edx,0xfffeffff
  402f00:	mov    esi,0x279e
  402f05:	call   404860 <__sprintf_chk@plt+0x3670>
  402f0a:	mov    esi,0x27f5
  402f0f:	mov    rdi,rbx
  402f12:	xor    eax,eax
  402f14:	call   404860 <__sprintf_chk@plt+0x3670>
  402f19:	jmp    402490 <__sprintf_chk@plt+0x12a0>
  402f1e:	xor    eax,eax
  402f20:	mov    esi,0x263a
  402f25:	mov    rdi,rbx
  402f28:	call   404860 <__sprintf_chk@plt+0x3670>
  402f2d:	mov    eax,r13d
  402f30:	mov    ecx,0x5
  402f35:	cdq    
  402f36:	idiv   ecx
  402f38:	test   eax,eax
  402f3a:	je     403709 <__sprintf_chk@plt+0x2519>
  402f40:	sub    eax,0x1
  402f43:	jne    40367b <__sprintf_chk@plt+0x248b>
  402f49:	mov    edx,0xfffeffff
  402f4e:	mov    esi,0x2761
  402f53:	mov    rdi,rbx
  402f56:	xor    eax,eax
  402f58:	call   404860 <__sprintf_chk@plt+0x3670>
  402f5d:	jmp    403030 <__sprintf_chk@plt+0x1e40>
  402f62:	xor    eax,eax
  402f64:	mov    esi,0x263a
  402f69:	mov    rdi,rbx
  402f6c:	call   404860 <__sprintf_chk@plt+0x3670>
  402f71:	mov    eax,r13d
  402f74:	mov    ecx,0x5
  402f79:	cdq    
  402f7a:	idiv   ecx
  402f7c:	test   eax,eax
  402f7e:	je     4036f0 <__sprintf_chk@plt+0x2500>
  402f84:	sub    eax,0x1
  402f87:	jne    403660 <__sprintf_chk@plt+0x2470>
  402f8d:	mov    edx,0xfffeffff
  402f92:	mov    esi,0x270a
  402f97:	mov    rdi,rbx
  402f9a:	xor    eax,eax
  402f9c:	call   404860 <__sprintf_chk@plt+0x3670>
  402fa1:	jmp    403030 <__sprintf_chk@plt+0x1e40>
  402fa6:	xor    eax,eax
  402fa8:	mov    esi,0x263a
  402fad:	mov    rdi,rbx
  402fb0:	call   404860 <__sprintf_chk@plt+0x3670>
  402fb5:	mov    eax,r13d
  402fb8:	mov    ecx,0x5
  402fbd:	cdq    
  402fbe:	idiv   ecx
  402fc0:	test   eax,eax
  402fc2:	je     4036d7 <__sprintf_chk@plt+0x24e7>
  402fc8:	sub    eax,0x1
  402fcb:	jne    403645 <__sprintf_chk@plt+0x2455>
  402fd1:	mov    edx,0xfffeffff
  402fd6:	mov    esi,0x26b3
  402fdb:	mov    rdi,rbx
  402fde:	xor    eax,eax
  402fe0:	call   404860 <__sprintf_chk@plt+0x3670>
  402fe5:	jmp    403030 <__sprintf_chk@plt+0x1e40>
  402fe7:	xor    eax,eax
  402fe9:	mov    esi,0x263a
  402fee:	mov    rdi,rbx
  402ff1:	call   404860 <__sprintf_chk@plt+0x3670>
  402ff6:	mov    eax,r13d
  402ff9:	mov    ecx,0x5
  402ffe:	cdq    
  402fff:	idiv   ecx
  403001:	test   eax,eax
  403003:	je     4036be <__sprintf_chk@plt+0x24ce>
  403009:	sub    eax,0x1
  40300c:	je     40362c <__sprintf_chk@plt+0x243c>
  403012:	mov    ecx,0xfffeffff
  403017:	mov    esi,0x2676
  40301c:	mov    rdi,rbx
  40301f:	mov    edx,ecx
  403021:	xor    eax,eax
  403023:	call   404860 <__sprintf_chk@plt+0x3670>
  403028:	nop    DWORD PTR [rax+rax*1+0x0]
  403030:	xor    eax,eax
  403032:	mov    esi,0x25a5
  403037:	mov    rdi,rbx
  40303a:	call   404860 <__sprintf_chk@plt+0x3670>
  40303f:	cmp    r12d,0x5d
  403043:	jne    402490 <__sprintf_chk@plt+0x12a0>
  403049:	jmp    40255a <__sprintf_chk@plt+0x136a>
  40304e:	mov    rdi,rbx
  403051:	xor    eax,eax
  403053:	mov    r8d,0xfffffff4
  403059:	mov    ecx,0xc
  40305e:	mov    edx,0xfffffffb
  403063:	mov    esi,0x25c0
  403068:	call   404860 <__sprintf_chk@plt+0x3670>
  40306d:	mov    esi,0x2610
  403072:	mov    rdi,rbx
  403075:	xor    eax,eax
  403077:	call   404860 <__sprintf_chk@plt+0x3670>
  40307c:	jmp    402490 <__sprintf_chk@plt+0x12a0>
  403081:	mov    r8d,0x80000000
  403087:	xor    ecx,ecx
  403089:	mov    edx,0xfffeffff
  40308e:	mov    esi,0x2589
  403093:	mov    rdi,rbx
  403096:	xor    eax,eax
  403098:	call   404860 <__sprintf_chk@plt+0x3670>
  40309d:	jmp    402490 <__sprintf_chk@plt+0x12a0>
  4030a2:	mov    ecx,0xfffffffd
  4030a7:	mov    edx,0xfffffffe
  4030ac:	mov    esi,0x2564
  4030b1:	mov    rdi,rbx
  4030b4:	xor    eax,eax
  4030b6:	call   404860 <__sprintf_chk@plt+0x3670>
  4030bb:	jmp    402490 <__sprintf_chk@plt+0x12a0>
  4030c0:	mov    esi,0x2547
  4030c5:	mov    rdi,rbx
  4030c8:	xor    eax,eax
  4030ca:	call   404860 <__sprintf_chk@plt+0x3670>
  4030cf:	jmp    402490 <__sprintf_chk@plt+0x12a0>
  4030d4:	xor    eax,eax
  4030d6:	mov    edx,0xfffffffe
  4030db:	mov    esi,0x2530
  4030e0:	mov    rdi,rbx
  4030e3:	call   404860 <__sprintf_chk@plt+0x3670>
  4030e8:	mov    eax,ebp
  4030ea:	and    eax,0xfffffffd
  4030ed:	cmp    eax,0xc
  4030f0:	jne    40359a <__sprintf_chk@plt+0x23aa>
  4030f6:	mov    esi,0x2388
  4030fb:	mov    rdi,rbx
  4030fe:	xor    eax,eax
  403100:	call   404860 <__sprintf_chk@plt+0x3670>
  403105:	lea    eax,[rbp-0xc]
  403108:	cmp    eax,0x1
  40310b:	jbe    4039a3 <__sprintf_chk@plt+0x27b3>
  403111:	xor    eax,eax
  403113:	mov    edx,0xfffe0000
  403118:	mov    esi,0x238d
  40311d:	mov    rdi,rbx
  403120:	call   404860 <__sprintf_chk@plt+0x3670>
  403125:	cmp    r12d,0x5d
  403129:	jne    402490 <__sprintf_chk@plt+0x12a0>
  40312f:	jmp    40255a <__sprintf_chk@plt+0x136a>
  403134:	xor    eax,eax
  403136:	mov    esi,0x24c2
  40313b:	mov    rdi,rbx
  40313e:	call   404860 <__sprintf_chk@plt+0x3670>
  403143:	cmp    ebp,0xa
  403146:	je     4037ef <__sprintf_chk@plt+0x25ff>
  40314c:	mov    ecx,0xfffe0000
  403151:	mov    edx,0xfffffff5
  403156:	mov    esi,0x2503
  40315b:	mov    rdi,rbx
  40315e:	xor    eax,eax
  403160:	call   404860 <__sprintf_chk@plt+0x3670>
  403165:	jmp    402550 <__sprintf_chk@plt+0x1360>
  40316a:	xor    r9d,r9d
  40316d:	cmp    ebp,0x8
  403170:	mov    esi,0x249f
  403175:	sete   r9b
  403179:	mov    rdi,rbx
  40317c:	xor    eax,eax
  40317e:	mov    DWORD PTR [rsp+0xc],r9d
  403183:	call   404860 <__sprintf_chk@plt+0x3670>
  403188:	mov    edx,0xfffeffff
  40318d:	mov    esi,0x24a7
  403192:	mov    rdi,rbx
  403195:	xor    eax,eax
  403197:	call   404860 <__sprintf_chk@plt+0x3670>
  40319c:	mov    r9d,DWORD PTR [rsp+0xc]
  4031a1:	test   r9d,r9d
  4031a4:	je     4033c9 <__sprintf_chk@plt+0x21d9>
  4031aa:	xor    eax,eax
  4031ac:	mov    esi,0x23da
  4031b1:	mov    rdi,rbx
  4031b4:	call   404860 <__sprintf_chk@plt+0x3670>
  4031b9:	xor    eax,eax
  4031bb:	mov    edx,0xfffe0000
  4031c0:	mov    esi,0x23ec
  4031c5:	mov    rdi,rbx
  4031c8:	call   404860 <__sprintf_chk@plt+0x3670>
  4031cd:	xor    eax,eax
  4031cf:	mov    esi,0x2399
  4031d4:	mov    rdi,rbx
  4031d7:	call   404860 <__sprintf_chk@plt+0x3670>
  4031dc:	cmp    r15d,0x1
  4031e0:	ja     4032ab <__sprintf_chk@plt+0x20bb>
  4031e6:	sub    rsp,0x8
  4031ea:	mov    ecx,0xfffffff5
  4031ef:	mov    r9d,0xfffffff4
  4031f5:	push   0xfffffffffffffff3
  4031f7:	mov    edx,ecx
  4031f9:	mov    r8d,0xfffffffd
  4031ff:	mov    esi,0x240f
  403204:	mov    rdi,rbx
  403207:	xor    eax,eax
  403209:	call   404860 <__sprintf_chk@plt+0x3670>
  40320e:	mov    ecx,0x6
  403213:	mov    r8d,0x10
  403219:	mov    edx,0x10
  40321e:	mov    esi,0x2450
  403223:	mov    rdi,rbx
  403226:	xor    eax,eax
  403228:	call   404860 <__sprintf_chk@plt+0x3670>
  40322d:	mov    esi,0x2464
  403232:	mov    rdi,rbx
  403235:	xor    eax,eax
  403237:	call   404860 <__sprintf_chk@plt+0x3670>
  40323c:	pop    rcx
  40323d:	pop    rsi
  40323e:	mov    esi,0x246e
  403243:	mov    rdi,rbx
  403246:	xor    eax,eax
  403248:	call   404860 <__sprintf_chk@plt+0x3670>
  40324d:	jmp    402550 <__sprintf_chk@plt+0x1360>
  403252:	xor    eax,eax
  403254:	mov    edx,0xfffffffb
  403259:	mov    esi,0x2484
  40325e:	mov    rdi,rbx
  403261:	call   404860 <__sprintf_chk@plt+0x3670>
  403266:	cmp    ebp,0x6
  403269:	je     4037b8 <__sprintf_chk@plt+0x25c8>
  40326f:	mov    esi,0x1e72
  403274:	mov    rdi,rbx
  403277:	xor    eax,eax
  403279:	call   404860 <__sprintf_chk@plt+0x3670>
  40327e:	xor    eax,eax
  403280:	mov    edx,0xfffe0000
  403285:	mov    esi,0x23fb
  40328a:	mov    rdi,rbx
  40328d:	call   404860 <__sprintf_chk@plt+0x3670>
  403292:	xor    eax,eax
  403294:	mov    esi,0x2399
  403299:	mov    rdi,rbx
  40329c:	call   404860 <__sprintf_chk@plt+0x3670>
  4032a1:	cmp    r15d,0x1
  4032a5:	jbe    40353d <__sprintf_chk@plt+0x234d>
  4032ab:	mov    edx,0xfffffff5
  4032b0:	xor    eax,eax
  4032b2:	mov    esi,0x2473
  4032b7:	mov    rdi,rbx
  4032ba:	call   404860 <__sprintf_chk@plt+0x3670>
  4032bf:	xor    eax,eax
  4032c1:	mov    esi,0x245f
  4032c6:	mov    rdi,rbx
  4032c9:	call   404860 <__sprintf_chk@plt+0x3670>
  4032ce:	xor    eax,eax
  4032d0:	mov    esi,0x247f
  4032d5:	mov    rdi,rbx
  4032d8:	call   404860 <__sprintf_chk@plt+0x3670>
  4032dd:	cmp    r12d,0x5d
  4032e1:	jne    402490 <__sprintf_chk@plt+0x12a0>
  4032e7:	jmp    40255a <__sprintf_chk@plt+0x136a>
  4032ec:	xor    r9d,r9d
  4032ef:	cmp    ebp,0x4
  4032f2:	mov    esi,0x23ae
  4032f7:	sete   r9b
  4032fb:	mov    rdi,rbx
  4032fe:	xor    eax,eax
  403300:	mov    DWORD PTR [rsp+0xc],r9d
  403305:	call   404860 <__sprintf_chk@plt+0x3670>
  40330a:	mov    ecx,0xfffeffff
  40330f:	mov    esi,0x23b6
  403314:	mov    rdi,rbx
  403317:	mov    edx,ecx
  403319:	xor    eax,eax
  40331b:	call   404860 <__sprintf_chk@plt+0x3670>
  403320:	mov    r9d,DWORD PTR [rsp+0xc]
  403325:	jmp    4031a1 <__sprintf_chk@plt+0x1fb1>
  40332a:	mov    esi,0x21e4
  40332f:	mov    rdi,rbx
  403332:	xor    eax,eax
  403334:	call   404860 <__sprintf_chk@plt+0x3670>
  403339:	jmp    402490 <__sprintf_chk@plt+0x12a0>
  40333e:	mov    r8d,0x1
  403344:	mov    ecx,0xffffff80
  403349:	mov    edx,0x7e
  40334e:	mov    esi,0x36dc
  403353:	mov    rdi,rbx
  403356:	xor    eax,eax
  403358:	call   404860 <__sprintf_chk@plt+0x3670>
  40335d:	jmp    402490 <__sprintf_chk@plt+0x12a0>
  403362:	mov    edx,0xfffe0000
  403367:	mov    esi,0x36c2
  40336c:	mov    rdi,rbx
  40336f:	xor    eax,eax
  403371:	call   404860 <__sprintf_chk@plt+0x3670>
  403376:	jmp    402490 <__sprintf_chk@plt+0x12a0>
  40337b:	mov    r9d,0xfffff53c
  403381:	mov    r8d,0xfffff540
  403387:	mov    ecx,0x40
  40338c:	mov    edx,0xfffff710
  403391:	mov    esi,0x3699
  403396:	mov    rdi,rbx
  403399:	xor    eax,eax
  40339b:	call   404860 <__sprintf_chk@plt+0x3670>
  4033a0:	jmp    402490 <__sprintf_chk@plt+0x12a0>
  4033a5:	mov    esi,0x2399
  4033aa:	mov    rdi,rbx
  4033ad:	xor    eax,eax
  4033af:	call   404860 <__sprintf_chk@plt+0x3670>
  4033b4:	jmp    402490 <__sprintf_chk@plt+0x12a0>
  4033b9:	test   cl,cl
  4033bb:	movsxd rdx,edx
  4033be:	je     4012d0 <__sprintf_chk@plt+0xe0>
  4033c4:	call   404310 <__sprintf_chk@plt+0x3120>
  4033c9:	mov    esi,0x23e3
  4033ce:	mov    rdi,rbx
  4033d1:	xor    eax,eax
  4033d3:	call   404860 <__sprintf_chk@plt+0x3670>
  4033d8:	jmp    40327e <__sprintf_chk@plt+0x208e>
  4033dd:	sub    rsp,0x8
  4033e1:	mov    r8d,0xa0
  4033e7:	mov    rdi,rbx
  4033ea:	push   0x18
  4033ec:	xor    eax,eax
  4033ee:	mov    r9d,0x20
  4033f4:	mov    ecx,0x10
  4033f9:	mov    edx,0x18
  4033fe:	mov    esi,0x37bf
  403403:	call   404860 <__sprintf_chk@plt+0x3670>
  403408:	cmp    ebp,0x5b
  40340b:	pop    rdi
  40340c:	pop    r8
  40340e:	je     40377c <__sprintf_chk@plt+0x258c>
  403414:	mov    esi,0x37e1
  403419:	mov    rdi,rbx
  40341c:	xor    eax,eax
  40341e:	call   404860 <__sprintf_chk@plt+0x3670>
  403423:	mov    edx,0xfffff530
  403428:	mov    esi,0x37e9
  40342d:	mov    rdi,rbx
  403430:	xor    eax,eax
  403432:	mov    ecx,0xfffffffe
  403437:	call   404860 <__sprintf_chk@plt+0x3670>
  40343c:	mov    edx,0xfffff520
  403441:	mov    esi,0x37f8
  403446:	mov    rdi,rbx
  403449:	xor    eax,eax
  40344b:	call   404860 <__sprintf_chk@plt+0x3670>
  403450:	mov    r9d,0x18
  403456:	mov    r8d,0x10
  40345c:	or     ecx,0xffffffff
  40345f:	mov    edx,0xfffff530
  403464:	mov    esi,0x37fe
  403469:	mov    rdi,rbx
  40346c:	xor    eax,eax
  40346e:	call   404860 <__sprintf_chk@plt+0x3670>
  403473:	jmp    402550 <__sprintf_chk@plt+0x1360>
  403478:	mov    ecx,0xfffeffff
  40347d:	xor    eax,eax
  40347f:	mov    esi,0x2355
  403484:	mov    edx,ecx
  403486:	mov    rdi,rbx
  403489:	call   404860 <__sprintf_chk@plt+0x3670>
  40348e:	cmp    ebp,0x2
  403491:	je     403967 <__sprintf_chk@plt+0x2777>
  403497:	cmp    ebp,0x3
  40349a:	je     40397b <__sprintf_chk@plt+0x278b>
  4034a0:	cmp    ebp,0x1
  4034a3:	je     4036aa <__sprintf_chk@plt+0x24ba>
  4034a9:	mov    esi,0x1ce3
  4034ae:	mov    rdi,rbx
  4034b1:	xor    eax,eax
  4034b3:	call   404860 <__sprintf_chk@plt+0x3670>
  4034b8:	jmp    403111 <__sprintf_chk@plt+0x1f21>
  4034bd:	mov    rdi,rbx
  4034c0:	xor    eax,eax
  4034c2:	mov    edx,0xfffeffff
  4034c7:	mov    esi,0x35c4
  4034cc:	call   404860 <__sprintf_chk@plt+0x3670>
  4034d1:	mov    edx,0xfffeffff
  4034d6:	mov    rdi,rbx
  4034d9:	xor    eax,eax
  4034db:	mov    esi,0x35ca
  4034e0:	call   404860 <__sprintf_chk@plt+0x3670>
  4034e5:	mov    rdi,rbx
  4034e8:	xor    eax,eax
  4034ea:	mov    esi,0x35eb
  4034ef:	call   404860 <__sprintf_chk@plt+0x3670>
  4034f4:	mov    edx,0xfffeffff
  4034f9:	mov    rdi,rbx
  4034fc:	xor    eax,eax
  4034fe:	mov    esi,0x35ef
  403503:	call   404860 <__sprintf_chk@plt+0x3670>
  403508:	mov    rdi,rbx
  40350b:	xor    eax,eax
  40350d:	mov    esi,0x35f8
  403512:	call   404860 <__sprintf_chk@plt+0x3670>
  403517:	mov    esi,0x3617
  40351c:	mov    rdi,rbx
  40351f:	xor    eax,eax
  403521:	call   404860 <__sprintf_chk@plt+0x3670>
  403526:	jmp    4024f9 <__sprintf_chk@plt+0x1309>
  40352b:	cmp    BYTE PTR [rax+0x2],0x0
  40352f:	movsxd rdx,r13d
  403532:	je     4012d0 <__sprintf_chk@plt+0xe0>
  403538:	jmp    4033c4 <__sprintf_chk@plt+0x21d4>
  40353d:	sub    rsp,0x8
  403541:	mov    ecx,0xfffffff5
  403546:	mov    r9d,0xfffffff4
  40354c:	push   0xfffffffffffffff3
  40354e:	mov    edx,ecx
  403550:	mov    r8d,0xfffffffd
  403556:	mov    esi,0x240f
  40355b:	mov    rdi,rbx
  40355e:	xor    eax,eax
  403560:	call   404860 <__sprintf_chk@plt+0x3670>
  403565:	mov    edx,0x10
  40356a:	mov    r8d,0x10
  403570:	mov    ecx,0x6
  403575:	mov    esi,0x2450
  40357a:	mov    rdi,rbx
  40357d:	xor    eax,eax
  40357f:	call   404860 <__sprintf_chk@plt+0x3670>
  403584:	xor    eax,eax
  403586:	mov    esi,0x2468
  40358b:	mov    rdi,rbx
  40358e:	call   404860 <__sprintf_chk@plt+0x3670>
  403593:	pop    rax
  403594:	pop    rdx
  403595:	jmp    40323e <__sprintf_chk@plt+0x204e>
  40359a:	mov    esi,0x2383
  40359f:	mov    rdi,rbx
  4035a2:	xor    eax,eax
  4035a4:	call   404860 <__sprintf_chk@plt+0x3670>
  4035a9:	jmp    403105 <__sprintf_chk@plt+0x1f15>
  4035ae:	mov    edx,0x3
  4035b3:	mov    esi,0x3428
  4035b8:	mov    rdi,rbx
  4035bb:	xor    eax,eax
  4035bd:	call   404860 <__sprintf_chk@plt+0x3670>
  4035c2:	xor    eax,eax
  4035c4:	mov    esi,0x347b
  4035c9:	mov    rdi,rbx
  4035cc:	call   404860 <__sprintf_chk@plt+0x3670>
  4035d1:	xor    eax,eax
  4035d3:	mov    ecx,0xffffffd0
  4035d8:	mov    edx,0x10
  4035dd:	mov    esi,0x3486
  4035e2:	mov    rdi,rbx
  4035e5:	call   404860 <__sprintf_chk@plt+0x3670>
  4035ea:	cmp    ebp,0x46
  4035ed:	je     40373d <__sprintf_chk@plt+0x254d>
  4035f3:	or     edx,0xffffffff
  4035f6:	xor    eax,eax
  4035f8:	mov    esi,0x34c1
  4035fd:	mov    rdi,rbx
  403600:	call   404860 <__sprintf_chk@plt+0x3670>
  403605:	xor    eax,eax
  403607:	mov    ecx,0x7
  40360c:	mov    edx,0xfffffffd
  403611:	mov    esi,0x34c8
  403616:	mov    rdi,rbx
  403619:	call   404860 <__sprintf_chk@plt+0x3670>
  40361e:	cmp    ebp,0x47
  403621:	je     4026c0 <__sprintf_chk@plt+0x14d0>
  403627:	jmp    4026b1 <__sprintf_chk@plt+0x14c1>
  40362c:	mov    edx,0xfffeffff
  403631:	mov    esi,0x265c
  403636:	mov    rdi,rbx
  403639:	xor    eax,eax
  40363b:	call   404860 <__sprintf_chk@plt+0x3670>
  403640:	jmp    403030 <__sprintf_chk@plt+0x1e40>
  403645:	mov    ecx,0xfffeffff
  40364a:	mov    esi,0x26cd
  40364f:	mov    rdi,rbx
  403652:	mov    edx,ecx
  403654:	xor    eax,eax
  403656:	call   404860 <__sprintf_chk@plt+0x3670>
  40365b:	jmp    403030 <__sprintf_chk@plt+0x1e40>
  403660:	mov    ecx,0xfffeffff
  403665:	mov    esi,0x2724
  40366a:	mov    rdi,rbx
  40366d:	mov    edx,ecx
  40366f:	xor    eax,eax
  403671:	call   404860 <__sprintf_chk@plt+0x3670>
  403676:	jmp    403030 <__sprintf_chk@plt+0x1e40>
  40367b:	mov    ecx,0xfffeffff
  403680:	mov    esi,0x277b
  403685:	mov    rdi,rbx
  403688:	mov    edx,ecx
  40368a:	xor    eax,eax
  40368c:	call   404860 <__sprintf_chk@plt+0x3670>
  403691:	jmp    403030 <__sprintf_chk@plt+0x1e40>
  403696:	mov    esi,0x3471
  40369b:	mov    rdi,rbx
  40369e:	xor    eax,eax
  4036a0:	call   404860 <__sprintf_chk@plt+0x3670>
  4036a5:	jmp    4035c2 <__sprintf_chk@plt+0x23d2>
  4036aa:	mov    esi,0x237e
  4036af:	mov    rdi,rbx
  4036b2:	xor    eax,eax
  4036b4:	call   404860 <__sprintf_chk@plt+0x3670>
  4036b9:	jmp    403111 <__sprintf_chk@plt+0x1f21>
  4036be:	mov    edx,0xfffeffff
  4036c3:	mov    esi,0x2642
  4036c8:	mov    rdi,rbx
  4036cb:	xor    eax,eax
  4036cd:	call   404860 <__sprintf_chk@plt+0x3670>
  4036d2:	jmp    403030 <__sprintf_chk@plt+0x1e40>
  4036d7:	mov    edx,0xfffeffff
  4036dc:	mov    esi,0x2699
  4036e1:	mov    rdi,rbx
  4036e4:	xor    eax,eax
  4036e6:	call   404860 <__sprintf_chk@plt+0x3670>
  4036eb:	jmp    403030 <__sprintf_chk@plt+0x1e40>
  4036f0:	mov    edx,0xfffeffff
  4036f5:	mov    esi,0x26f0
  4036fa:	mov    rdi,rbx
  4036fd:	xor    eax,eax
  4036ff:	call   404860 <__sprintf_chk@plt+0x3670>
  403704:	jmp    403030 <__sprintf_chk@plt+0x1e40>
  403709:	mov    edx,0xfffeffff
  40370e:	mov    esi,0x2747
  403713:	mov    rdi,rbx
  403716:	xor    eax,eax
  403718:	call   404860 <__sprintf_chk@plt+0x3670>
  40371d:	jmp    403030 <__sprintf_chk@plt+0x1e40>
  403722:	mov    ecx,0xfffeffff
  403727:	mov    esi,0x27d2
  40372c:	mov    rdi,rbx
  40372f:	mov    edx,ecx
  403731:	xor    eax,eax
  403733:	call   404860 <__sprintf_chk@plt+0x3670>
  403738:	jmp    402ed3 <__sprintf_chk@plt+0x1ce3>
  40373d:	or     edx,0xffffffff
  403740:	mov    esi,0x34b6
  403745:	jmp    40268e <__sprintf_chk@plt+0x149e>
  40374a:	mov    edx,0x53
  40374f:	mov    esi,0x3710
  403754:	mov    rdi,rbx
  403757:	xor    eax,eax
  403759:	call   404860 <__sprintf_chk@plt+0x3670>
  40375e:	jmp    402609 <__sprintf_chk@plt+0x1419>
  403763:	mov    edx,0x53
  403768:	mov    esi,0x367b
  40376d:	mov    rdi,rbx
  403770:	xor    eax,eax
  403772:	call   404860 <__sprintf_chk@plt+0x3670>
  403777:	jmp    402703 <__sprintf_chk@plt+0x1513>
  40377c:	mov    rdi,rbx
  40377f:	xor    eax,eax
  403781:	mov    esi,0x37dd
  403786:	call   404860 <__sprintf_chk@plt+0x3670>
  40378b:	mov    rdi,rbx
  40378e:	xor    eax,eax
  403790:	mov    ecx,0xfffffffe
  403795:	mov    edx,0xfffff530
  40379a:	mov    esi,0x37e9
  40379f:	call   404860 <__sprintf_chk@plt+0x3670>
  4037a4:	mov    esi,0x37f3
  4037a9:	mov    rdi,rbx
  4037ac:	xor    eax,eax
  4037ae:	call   404860 <__sprintf_chk@plt+0x3670>
  4037b3:	jmp    403450 <__sprintf_chk@plt+0x2260>
  4037b8:	mov    rdi,rbx
  4037bb:	xor    eax,eax
  4037bd:	mov    esi,0x23de
  4037c2:	call   404860 <__sprintf_chk@plt+0x3670>
  4037c7:	mov    rdi,rbx
  4037ca:	xor    eax,eax
  4037cc:	mov    edx,0xfffe0000
  4037d1:	mov    esi,0x23ec
  4037d6:	call   404860 <__sprintf_chk@plt+0x3670>
  4037db:	mov    esi,0x2399
  4037e0:	mov    rdi,rbx
  4037e3:	xor    eax,eax
  4037e5:	call   404860 <__sprintf_chk@plt+0x3670>
  4037ea:	jmp    4032ab <__sprintf_chk@plt+0x20bb>
  4037ef:	mov    ecx,0xfffffff5
  4037f4:	mov    edx,0xfffe0000
  4037f9:	mov    esi,0x24d0
  4037fe:	mov    rdi,rbx
  403801:	xor    eax,eax
  403803:	call   404860 <__sprintf_chk@plt+0x3670>
  403808:	jmp    402490 <__sprintf_chk@plt+0x12a0>
  40380d:	mov    rdi,QWORD PTR [rsp+0x40]
  403812:	call   401160 <malloc@plt>
  403817:	mov    rdi,rbx
  40381a:	mov    rsi,rax
  40381d:	mov    QWORD PTR [rsp+0x38],rax
  403822:	call   405340 <__sprintf_chk@plt+0x4150>
  403827:	test   eax,eax
  403829:	mov    ebp,eax
  40382b:	jne    402583 <__sprintf_chk@plt+0x1393>
  403831:	mov    edi,DWORD PTR [rsp+0x18]
  403835:	lea    rdx,[rip+0x5855]        # 409091 <__sprintf_chk@plt+0x7ea1>
  40383c:	lea    rsi,[rip+0x58d2]        # 409115 <__sprintf_chk@plt+0x7f25>
  403843:	lea    r14,[rip+0x5857]        # 4090a1 <__sprintf_chk@plt+0x7eb1>
  40384a:	call   404400 <__sprintf_chk@plt+0x3210>
  40384f:	mov    r12d,DWORD PTR [rsp+0x48]
  403854:	mov    edi,DWORD PTR [rsp+0x4c]
  403858:	mov    QWORD PTR [rsp+0x80],rax
  403860:	add    edi,r12d
  403863:	add    edi,0x1
  403866:	movsxd rdi,edi
  403869:	shl    rdi,0x4
  40386d:	call   401160 <malloc@plt>
  403872:	movsxd rdi,r12d
  403875:	mov    QWORD PTR [rsp+0x68],rax
  40387a:	mov    DWORD PTR [rsp+0x50],0x0
  403882:	shl    rdi,0x2
  403886:	xor    r12d,r12d
  403889:	call   401160 <malloc@plt>
  40388e:	mov    QWORD PTR [rsp+0x78],rax
  403893:	jmp    4038cd <__sprintf_chk@plt+0x26dd>
  403895:	mov    esi,r12d
  403898:	mov    rdi,rbx
  40389b:	call   405930 <__sprintf_chk@plt+0x4740>
  4038a0:	test   eax,eax
  4038a2:	js     403fcf <__sprintf_chk@plt+0x2ddf>
  4038a8:	mov    rdx,QWORD PTR [rsp+0x78]
  4038ad:	mov    esi,eax
  4038af:	mov    rdi,rbx
  4038b2:	mov    DWORD PTR [rdx+r12*4],eax
  4038b6:	mov    rdx,0x4122e0
  4038bd:	mov    rcx,QWORD PTR [rdx+r12*8]
  4038c1:	mov    rdx,r14
  4038c4:	add    r12,0x1
  4038c8:	call   4044f0 <__sprintf_chk@plt+0x3300>
  4038cd:	cmp    r12d,DWORD PTR [rsp+0x48]
  4038d2:	mov    r13d,r12d
  4038d5:	jl     403895 <__sprintf_chk@plt+0x26a5>
  4038d7:	xor    r13d,r13d
  4038da:	or     r12,0xffffffffffffffff
  4038de:	jmp    4038fb <__sprintf_chk@plt+0x270b>
  4038e0:	sub    rsi,QWORD PTR [rsp+0x38]
  4038e5:	mov    rcx,rdx
  4038e8:	lea    rdx,[rip+0x57d5]        # 4090c4 <__sprintf_chk@plt+0x7ed4>
  4038ef:	mov    rdi,rbx
  4038f2:	call   4044f0 <__sprintf_chk@plt+0x3300>
  4038f7:	add    r13,0x1
  4038fb:	cmp    DWORD PTR [rsp+0x4c],r13d
  403900:	jle    4039ee <__sprintf_chk@plt+0x27fe>
  403906:	lea    rax,[rip+0xee13]        # 412720 <__sprintf_chk@plt+0x11530>
  40390d:	mov    rcx,r12
  403910:	mov    rdx,QWORD PTR [rax+r13*8]
  403914:	xor    eax,eax
  403916:	mov    rdi,rdx
  403919:	repnz scas al,BYTE PTR es:[rdi]
  40391b:	mov    rax,rcx
  40391e:	mov    rcx,QWORD PTR [rsp+0x60]
  403923:	not    rax
  403926:	sub    rax,0x1
  40392a:	mov    rsi,QWORD PTR [rcx+r13*8]
  40392e:	test   rsi,rsi
  403931:	je     40415f <__sprintf_chk@plt+0x2f6f>
  403937:	cmp    eax,0x1
  40393a:	jle    4038e0 <__sprintf_chk@plt+0x26f0>
  40393c:	cdqe   
  40393e:	cmp    BYTE PTR [rdx+rax*1-0x2],0x5f
  403943:	jne    4038e0 <__sprintf_chk@plt+0x26f0>
  403945:	cmp    BYTE PTR [rdx+rax*1-0x1],0x5a
  40394a:	jne    4038e0 <__sprintf_chk@plt+0x26f0>
  40394c:	jmp    4038f7 <__sprintf_chk@plt+0x2707>
  40394e:	mov    edx,0xfffe0000
  403953:	mov    esi,0x3641
  403958:	mov    rdi,rbx
  40395b:	xor    eax,eax
  40395d:	call   404860 <__sprintf_chk@plt+0x3670>
  403962:	jmp    402537 <__sprintf_chk@plt+0x1347>
  403967:	mov    esi,0x2383
  40396c:	mov    rdi,rbx
  40396f:	xor    eax,eax
  403971:	call   404860 <__sprintf_chk@plt+0x3670>
  403976:	jmp    403111 <__sprintf_chk@plt+0x1f21>
  40397b:	mov    esi,0x2388
  403980:	mov    rdi,rbx
  403983:	xor    eax,eax
  403985:	call   404860 <__sprintf_chk@plt+0x3670>
  40398a:	jmp    403111 <__sprintf_chk@plt+0x1f21>
  40398f:	mov    esi,0x30c1
  403994:	mov    rdi,rbx
  403997:	xor    eax,eax
  403999:	call   404860 <__sprintf_chk@plt+0x3670>
  40399e:	jmp    4028d9 <__sprintf_chk@plt+0x16e9>
  4039a3:	mov    esi,0x253c
  4039a8:	mov    rdi,rbx
  4039ab:	xor    eax,eax
  4039ad:	call   404860 <__sprintf_chk@plt+0x3670>
  4039b2:	jmp    403111 <__sprintf_chk@plt+0x1f21>
  4039b7:	mov    edx,0xfffe0000
  4039bc:	mov    esi,0x3629
  4039c1:	mov    rdi,rbx
  4039c4:	xor    eax,eax
  4039c6:	call   404860 <__sprintf_chk@plt+0x3670>
  4039cb:	jmp    402537 <__sprintf_chk@plt+0x1347>
  4039d0:	mov    ecx,0x53
  4039d5:	mov    edx,0xfffe0000
  4039da:	mov    esi,0x3633
  4039df:	mov    rdi,rbx
  4039e2:	xor    eax,eax
  4039e4:	call   404860 <__sprintf_chk@plt+0x3670>
  4039e9:	jmp    402537 <__sprintf_chk@plt+0x1347>
  4039ee:	lea    rcx,[rip+0x5720]        # 409115 <__sprintf_chk@plt+0x7f25>
  4039f5:	mov    esi,DWORD PTR [rsp+0x40]
  4039f9:	mov    rdi,rbx
  4039fc:	mov    rdx,rcx
  4039ff:	call   4044f0 <__sprintf_chk@plt+0x3300>
  403a04:	mov    rdi,rbx
  403a07:	sub    DWORD PTR [rsp+0x50],0x1
  403a0c:	call   404680 <__sprintf_chk@plt+0x3490>
  403a11:	mov    eax,DWORD PTR [rsp+0x18]
  403a15:	sub    eax,0x3
  403a18:	cmp    eax,0x1
  403a1b:	jbe    403f95 <__sprintf_chk@plt+0x2da5>
  403a21:	mov    rdi,QWORD PTR [rsp+0x28]
  403a26:	cmp    BYTE PTR [rdi],0x2d
  403a29:	je     403fdd <__sprintf_chk@plt+0x2ded>
  403a2f:	lea    rsi,[rip+0x6a94]        # 40a4ca <__sprintf_chk@plt+0x92da>
  403a36:	call   401190 <fopen@plt>
  403a3b:	test   rax,rax
  403a3e:	mov    QWORD PTR [rsp+0x20],rax
  403a43:	je     4041bf <__sprintf_chk@plt+0x2fcf>
  403a49:	cmp    DWORD PTR [rsp+0x18],0xa
  403a4e:	ja     403dd4 <__sprintf_chk@plt+0x2be4>
  403a54:	mov    eax,DWORD PTR [rsp+0x18]
  403a58:	lea    rdx,[rip+0x7bf9]        # 40b658 <__sprintf_chk@plt+0xa468>
  403a5f:	movsxd rax,DWORD PTR [rdx+rax*4]
  403a63:	add    rax,rdx
  403a66:	jmp    rax
  403a68:	mov    rcx,QWORD PTR [rsp+0x20]
  403a6d:	lea    rdi,[rip+0x77cc]        # 40b240 <__sprintf_chk@plt+0xa050>
  403a74:	mov    edx,0x2b
  403a79:	mov    esi,0x1
  403a7e:	lea    r12,[rip+0x5688]        # 40910d <__sprintf_chk@plt+0x7f1d>
  403a85:	call   4011b0 <fwrite@plt>
  403a8a:	mov    rcx,QWORD PTR [rsp+0x20]
  403a8f:	lea    rdi,[rip+0x565d]        # 4090f3 <__sprintf_chk@plt+0x7f03>
  403a96:	mov    edx,0xd
  403a9b:	mov    esi,0x1
  403aa0:	call   4011b0 <fwrite@plt>
  403aa5:	mov    rcx,QWORD PTR [rsp+0x20]
  403aaa:	lea    rdi,[rip+0x5650]        # 409101 <__sprintf_chk@plt+0x7f11>
  403ab1:	mov    edx,0xb
  403ab6:	mov    esi,0x1
  403abb:	call   4011b0 <fwrite@plt>
  403ac0:	mov    rax,0x4122e0
  403ac7:	lea    rcx,[rip+0x5594]        # 409062 <__sprintf_chk@plt+0x7e72>
  403ace:	lea    rbp,[rax+0x8]
  403ad2:	nop    WORD PTR [rax+rax*1+0x0]
  403ad8:	mov    rdi,QWORD PTR [rsp+0x20]
  403add:	xor    eax,eax
  403adf:	add    rbp,0x8
  403ae3:	mov    rdx,r12
  403ae6:	mov    esi,0x1
  403aeb:	call   4011c0 <__fprintf_chk@plt>
  403af0:	mov    rcx,QWORD PTR [rbp-0x8]
  403af4:	test   rcx,rcx
  403af7:	jne    403ad8 <__sprintf_chk@plt+0x28e8>
  403af9:	mov    rcx,QWORD PTR [rsp+0x20]
  403afe:	lea    rdi,[rip+0x560d]        # 409112 <__sprintf_chk@plt+0x7f22>
  403b05:	mov    edx,0x3
  403b0a:	mov    esi,0x1
  403b0f:	lea    r12,[rip+0x55f7]        # 40910d <__sprintf_chk@plt+0x7f1d>
  403b16:	call   4011b0 <fwrite@plt>
  403b1b:	mov    rcx,QWORD PTR [rsp+0x20]
  403b20:	lea    rdi,[rip+0x55ef]        # 409116 <__sprintf_chk@plt+0x7f26>
  403b27:	mov    edx,0xb
  403b2c:	mov    esi,0x1
  403b31:	call   4011b0 <fwrite@plt>
  403b36:	mov    rax,0x411fe0
  403b3d:	lea    rcx,[rip+0x5fa4]        # 409ae8 <__sprintf_chk@plt+0x88f8>
  403b44:	lea    rbp,[rax+0x8]
  403b48:	nop    DWORD PTR [rax+rax*1+0x0]
  403b50:	mov    rdi,QWORD PTR [rsp+0x20]
  403b55:	xor    eax,eax
  403b57:	add    rbp,0x8
  403b5b:	mov    rdx,r12
  403b5e:	mov    esi,0x1
  403b63:	call   4011c0 <__fprintf_chk@plt>
  403b68:	mov    rcx,QWORD PTR [rbp-0x8]
  403b6c:	test   rcx,rcx
  403b6f:	jne    403b50 <__sprintf_chk@plt+0x2960>
  403b71:	mov    rcx,QWORD PTR [rsp+0x20]
  403b76:	lea    rdi,[rip+0x5595]        # 409112 <__sprintf_chk@plt+0x7f22>
  403b7d:	mov    edx,0x3
  403b82:	mov    esi,0x1
  403b87:	lea    rbp,[rsp+0xa00]
  403b8f:	lea    r12,[rip+0x559b]        # 409131 <__sprintf_chk@plt+0x7f41>
  403b96:	call   4011b0 <fwrite@plt>
  403b9b:	mov    rcx,QWORD PTR [rsp+0x20]
  403ba0:	lea    rdi,[rip+0x557b]        # 409122 <__sprintf_chk@plt+0x7f32>
  403ba7:	mov    edx,0xe
  403bac:	mov    esi,0x1
  403bb1:	call   4011b0 <fwrite@plt>
  403bb6:	mov    r13,0x411e80
  403bbd:	lea    rdx,[rip+0x54a3]        # 409067 <__sprintf_chk@plt+0x7e77>
  403bc4:	movzx  eax,BYTE PTR [rdx]
  403bc7:	mov    rcx,rbp
  403bca:	test   al,al
  403bcc:	je     403bef <__sprintf_chk@plt+0x29ff>
  403bce:	xchg   ax,ax
  403bd0:	lea    edi,[rax-0x41]
  403bd3:	lea    esi,[rax+0x20]
  403bd6:	add    rcx,0x1
  403bda:	cmp    dil,0x19
  403bde:	cmovbe eax,esi
  403be1:	add    rdx,0x1
  403be5:	mov    BYTE PTR [rcx-0x1],al
  403be8:	movzx  eax,BYTE PTR [rdx]
  403beb:	test   al,al
  403bed:	jne    403bd0 <__sprintf_chk@plt+0x29e0>
  403bef:	mov    rdi,QWORD PTR [rsp+0x20]
  403bf4:	mov    BYTE PTR [rcx],0x0
  403bf7:	mov    rdx,r12
  403bfa:	xor    eax,eax
  403bfc:	add    r13,0x8
  403c00:	mov    rcx,rbp
  403c03:	mov    esi,0x1
  403c08:	call   4011c0 <__fprintf_chk@plt>
  403c0d:	mov    rdx,QWORD PTR [r13+0x0]
  403c11:	test   rdx,rdx
  403c14:	jne    403bc4 <__sprintf_chk@plt+0x29d4>
  403c16:	mov    rcx,QWORD PTR [rsp+0x20]
  403c1b:	lea    rdi,[rip+0x5516]        # 409138 <__sprintf_chk@plt+0x7f48>
  403c22:	mov    edx,0x3
  403c27:	mov    esi,0x1
  403c2c:	lea    r13,[rip+0x54fe]        # 409131 <__sprintf_chk@plt+0x7f41>
  403c33:	call   4011b0 <fwrite@plt>
  403c38:	mov    rcx,QWORD PTR [rsp+0x20]
  403c3d:	lea    rdi,[rip+0x54f8]        # 40913c <__sprintf_chk@plt+0x7f4c>
  403c44:	mov    edx,0x10
  403c49:	mov    esi,0x1
  403c4e:	call   4011b0 <fwrite@plt>
  403c53:	mov    r12,0x411de0
  403c5a:	lea    rdx,[rip+0x540c]        # 40906d <__sprintf_chk@plt+0x7e7d>
  403c61:	movzx  eax,BYTE PTR [rdx]
  403c64:	mov    rcx,rbp
  403c67:	test   al,al
  403c69:	je     403c8f <__sprintf_chk@plt+0x2a9f>
  403c6b:	nop    DWORD PTR [rax+rax*1+0x0]
  403c70:	lea    edi,[rax-0x41]
  403c73:	lea    esi,[rax+0x20]
  403c76:	add    rcx,0x1
  403c7a:	cmp    dil,0x19
  403c7e:	cmovbe eax,esi
  403c81:	add    rdx,0x1
  403c85:	mov    BYTE PTR [rcx-0x1],al
  403c88:	movzx  eax,BYTE PTR [rdx]
  403c8b:	test   al,al
  403c8d:	jne    403c70 <__sprintf_chk@plt+0x2a80>
  403c8f:	mov    BYTE PTR [rcx],0x0
  403c92:	mov    esi,0x5f
  403c97:	mov    rdi,rbp
  403c9a:	call   4010b0 <strchr@plt>
  403c9f:	test   rax,rax
  403ca2:	je     403ca7 <__sprintf_chk@plt+0x2ab7>
  403ca4:	mov    BYTE PTR [rax],0x2e
  403ca7:	mov    rdi,QWORD PTR [rsp+0x20]
  403cac:	mov    rdx,r13
  403caf:	xor    eax,eax
  403cb1:	add    r12,0x8
  403cb5:	mov    rcx,rbp
  403cb8:	mov    esi,0x1
  403cbd:	call   4011c0 <__fprintf_chk@plt>
  403cc2:	mov    rdx,QWORD PTR [r12]
  403cc6:	test   rdx,rdx
  403cc9:	jne    403c61 <__sprintf_chk@plt+0x2a71>
  403ccb:	mov    rcx,QWORD PTR [rsp+0x20]
  403cd0:	lea    rdi,[rip+0x5461]        # 409138 <__sprintf_chk@plt+0x7f48>
  403cd7:	mov    edx,0x3
  403cdc:	mov    esi,0x1
  403ce1:	lea    r12,[rip+0x5475]        # 40915d <__sprintf_chk@plt+0x7f6d>
  403ce8:	call   4011b0 <fwrite@plt>
  403ced:	mov    rcx,QWORD PTR [rsp+0x20]
  403cf2:	lea    rdi,[rip+0x5454]        # 40914d <__sprintf_chk@plt+0x7f5d>
  403cf9:	mov    edx,0xf
  403cfe:	mov    esi,0x1
  403d03:	call   4011b0 <fwrite@plt>
  403d08:	mov    rax,0x411b80
  403d0f:	lea    rcx,[rip+0x535f]        # 409075 <__sprintf_chk@plt+0x7e85>
  403d16:	lea    rbp,[rax+0x8]
  403d1a:	nop    WORD PTR [rax+rax*1+0x0]
  403d20:	mov    rdi,QWORD PTR [rsp+0x20]
  403d25:	xor    eax,eax
  403d27:	add    rbp,0x8
  403d2b:	mov    rdx,r12
  403d2e:	mov    esi,0x1
  403d33:	call   4011c0 <__fprintf_chk@plt>
  403d38:	mov    rcx,QWORD PTR [rbp-0x8]
  403d3c:	test   rcx,rcx
  403d3f:	jne    403d20 <__sprintf_chk@plt+0x2b30>
  403d41:	mov    rcx,QWORD PTR [rsp+0x20]
  403d46:	lea    rdi,[rip+0x53eb]        # 409138 <__sprintf_chk@plt+0x7f48>
  403d4d:	mov    edx,0x3
  403d52:	mov    esi,0x1
  403d57:	lea    rbp,[rip+0xdd0a]        # 411a68 <__sprintf_chk@plt+0x10878>
  403d5e:	lea    r12,[rip+0x53f8]        # 40915d <__sprintf_chk@plt+0x7f6d>
  403d65:	call   4011b0 <fwrite@plt>
  403d6a:	mov    rcx,QWORD PTR [rsp+0x20]
  403d6f:	lea    rdi,[rip+0x53ee]        # 409164 <__sprintf_chk@plt+0x7f74>
  403d76:	mov    edx,0x11
  403d7b:	mov    esi,0x1
  403d80:	call   4011b0 <fwrite@plt>
  403d85:	lea    rcx,[rip+0x68a4]        # 40a630 <__sprintf_chk@plt+0x9440>
  403d8c:	nop    DWORD PTR [rax+0x0]
  403d90:	mov    rdi,QWORD PTR [rsp+0x20]
  403d95:	xor    eax,eax
  403d97:	add    rbp,0x8
  403d9b:	mov    rdx,r12
  403d9e:	mov    esi,0x1
  403da3:	call   4011c0 <__fprintf_chk@plt>
  403da8:	mov    rcx,QWORD PTR [rbp-0x8]
  403dac:	test   rcx,rcx
  403daf:	jne    403d90 <__sprintf_chk@plt+0x2ba0>
  403db1:	mov    rcx,QWORD PTR [rsp+0x20]
  403db6:	lea    rdi,[rip+0x537b]        # 409138 <__sprintf_chk@plt+0x7f48>
  403dbd:	mov    edx,0x3
  403dc2:	mov    esi,0x1
  403dc7:	call   4011b0 <fwrite@plt>
  403dcc:	mov    rdi,rbx
  403dcf:	call   4074a0 <__sprintf_chk@plt+0x62b0>
  403dd4:	mov    rdi,QWORD PTR [rsp+0x20]
  403dd9:	call   401170 <fflush@plt>
  403dde:	mov    rdi,QWORD PTR [rsp+0x20]
  403de3:	call   401060 <ferror@plt>
  403de8:	test   eax,eax
  403dea:	mov    ebx,eax
  403dec:	jne    404189 <__sprintf_chk@plt+0x2f99>
  403df2:	mov    rdi,QWORD PTR [rsp+0x20]
  403df7:	call   401080 <fclose@plt>
  403dfc:	jmp    4025a7 <__sprintf_chk@plt+0x13b7>
  403e01:	mov    rcx,QWORD PTR [rsp+0x20]
  403e06:	lea    rdi,[rip+0x73d3]        # 40b1e0 <__sprintf_chk@plt+0x9ff0>
  403e0d:	mov    edx,0x2e
  403e12:	mov    esi,0x1
  403e17:	xor    ebp,ebp
  403e19:	lea    r12,[rip+0xb3b9]        # 40f1d9 <__sprintf_chk@plt+0xdfe9>
  403e20:	call   4011b0 <fwrite@plt>
  403e25:	mov    rcx,QWORD PTR [rsp+0x20]
  403e2a:	lea    rdi,[rip+0x73df]        # 40b210 <__sprintf_chk@plt+0xa020>
  403e31:	mov    edx,0x2a
  403e36:	mov    esi,0x1
  403e3b:	call   4011b0 <fwrite@plt>
  403e40:	jmp    403e66 <__sprintf_chk@plt+0x2c76>
  403e42:	mov    rax,QWORD PTR [rsp+0x78]
  403e47:	mov    rdi,QWORD PTR [rsp+0x20]
  403e4c:	lea    rdx,[rip+0xb2bb]        # 40f10e <__sprintf_chk@plt+0xdf1e>
  403e53:	mov    esi,0x1
  403e58:	mov    ecx,DWORD PTR [rax+rbp*4]
  403e5b:	xor    eax,eax
  403e5d:	add    rbp,0x1
  403e61:	call   4011c0 <__fprintf_chk@plt>
  403e66:	cmp    ebp,DWORD PTR [rsp+0x48]
  403e6a:	jge    403dcc <__sprintf_chk@plt+0x2bdc>
  403e70:	test   ebp,ebp
  403e72:	je     403e42 <__sprintf_chk@plt+0x2c52>
  403e74:	mov    rcx,QWORD PTR [rsp+0x20]
  403e79:	mov    edx,0x2
  403e7e:	mov    esi,0x1
  403e83:	mov    rdi,r12
  403e86:	call   4011b0 <fwrite@plt>
  403e8b:	jmp    403e42 <__sprintf_chk@plt+0x2c52>
  403e8d:	mov    rdx,QWORD PTR [rsp+0x40]
  403e92:	mov    rsi,QWORD PTR [rsp+0x38]
  403e97:	mov    rdi,rbx
  403e9a:	call   405a20 <__sprintf_chk@plt+0x4830>
  403e9f:	jmp    403dd4 <__sprintf_chk@plt+0x2be4>
  403ea4:	mov    rdi,rbx
  403ea7:	call   406390 <__sprintf_chk@plt+0x51a0>
  403eac:	jmp    403dd4 <__sprintf_chk@plt+0x2be4>
  403eb1:	mov    rdi,rbx
  403eb4:	call   408110 <__sprintf_chk@plt+0x6f20>
  403eb9:	jmp    403dd4 <__sprintf_chk@plt+0x2be4>
  403ebe:	mov    rdi,rbx
  403ec1:	call   405c60 <__sprintf_chk@plt+0x4a70>
  403ec6:	mov    eax,DWORD PTR [rsp+0x18]
  403eca:	test   eax,eax
  403ecc:	je     404041 <__sprintf_chk@plt+0x2e51>
  403ed2:	cmp    eax,0x2
  403ed5:	jne    403dd4 <__sprintf_chk@plt+0x2be4>
  403edb:	mov    rcx,QWORD PTR [rsp+0x20]
  403ee0:	lea    rdi,[rip+0x6e81]        # 40ad68 <__sprintf_chk@plt+0x9b78>
  403ee7:	mov    edx,0x4c
  403eec:	mov    esi,0x1
  403ef1:	xor    ebx,ebx
  403ef3:	lea    r13,[rip+0x51ce]        # 4090c8 <__sprintf_chk@plt+0x7ed8>
  403efa:	call   4011b0 <fwrite@plt>
  403eff:	mov    rcx,QWORD PTR [rsp+0x20]
  403f04:	lea    rdi,[rip+0x6ead]        # 40adb8 <__sprintf_chk@plt+0x9bc8>
  403f0b:	mov    edx,0x11c
  403f10:	mov    esi,0x1
  403f15:	call   4011b0 <fwrite@plt>
  403f1a:	jmp    403f22 <__sprintf_chk@plt+0x2d32>
  403f1c:	mov    ebp,r12d
  403f1f:	mov    rbx,r14
  403f22:	cmp    ebx,DWORD PTR [rsp+0x50]
  403f26:	jge    403fe8 <__sprintf_chk@plt+0x2df8>
  403f2c:	mov    rcx,QWORD PTR [rsp+0x68]
  403f31:	mov    rax,rbx
  403f34:	lea    r14,[rbx+0x1]
  403f38:	shl    rax,0x4
  403f3c:	lea    rdx,[rcx+rax*1]
  403f40:	mov    eax,DWORD PTR [rcx+rax*1+0x18]
  403f44:	sub    eax,DWORD PTR [rdx+0x8]
  403f47:	mov    r12d,eax
  403f4a:	je     403f1f <__sprintf_chk@plt+0x2d2f>
  403f4c:	mov    r15,QWORD PTR [rdx]
  403f4f:	mov    rsi,r13
  403f52:	mov    rdi,r15
  403f55:	call   401110 <strcmp@plt>
  403f5a:	test   eax,eax
  403f5c:	je     403f1c <__sprintf_chk@plt+0x2d2c>
  403f5e:	sub    rsp,0x8
  403f62:	lea    rdx,[rip+0x6f6f]        # 40aed8 <__sprintf_chk@plt+0x9ce8>
  403f69:	mov    r9d,ebx
  403f6c:	push   rbx
  403f6d:	push   0x50
  403f6f:	mov    r8d,ebx
  403f72:	push   r12
  403f74:	push   r15
  403f76:	mov    rcx,r15
  403f79:	push   rbx
  403f7a:	push   rbx
  403f7b:	mov    esi,0x1
  403f80:	push   rbx
  403f81:	push   rbx
  403f82:	xor    eax,eax
  403f84:	push   rbx
  403f85:	mov    rdi,QWORD PTR [rsp+0x70]
  403f8a:	call   4011c0 <__fprintf_chk@plt>
  403f8f:	add    rsp,0x50
  403f93:	jmp    403f1f <__sprintf_chk@plt+0x2d2f>
  403f95:	mov    rdi,QWORD PTR [rsp+0x28]
  403f9a:	cmp    BYTE PTR [rdi],0x2d
  403f9d:	je     403fab <__sprintf_chk@plt+0x2dbb>
  403f9f:	lea    rsi,[rip+0x50b9]        # 40905f <__sprintf_chk@plt+0x7e6f>
  403fa6:	jmp    403a36 <__sprintf_chk@plt+0x2846>
  403fab:	cmp    BYTE PTR [rdi+0x1],0x0
  403faf:	jne    403f9f <__sprintf_chk@plt+0x2daf>
  403fb1:	mov    rax,QWORD PTR [rip+0xf018]        # 412fd0 <__sprintf_chk@plt+0x11de0>
  403fb8:	mov    rax,QWORD PTR [rax]
  403fbb:	mov    QWORD PTR [rsp+0x20],rax
  403fc0:	jmp    403a49 <__sprintf_chk@plt+0x2859>
  403fc5:	mov    edx,0x1
  403fca:	jmp    4012d0 <__sprintf_chk@plt+0xe0>
  403fcf:	mov    ebp,r13d
  403fd2:	or     ebp,0x22000000
  403fd8:	jmp    402583 <__sprintf_chk@plt+0x1393>
  403fdd:	cmp    BYTE PTR [rdi+0x1],0x0
  403fe1:	je     403fb1 <__sprintf_chk@plt+0x2dc1>
  403fe3:	jmp    403a2f <__sprintf_chk@plt+0x283f>
  403fe8:	test   ebp,ebp
  403fea:	je     404021 <__sprintf_chk@plt+0x2e31>
  403fec:	mov    rcx,QWORD PTR [rsp+0x20]
  403ff1:	lea    rdi,[rip+0x6ff0]        # 40afe8 <__sprintf_chk@plt+0x9df8>
  403ff8:	mov    edx,0xe8
  403ffd:	mov    esi,0x1
  404002:	call   4011b0 <fwrite@plt>
  404007:	mov    rdi,QWORD PTR [rsp+0x20]
  40400c:	lea    rdx,[rip+0x70c5]        # 40b0d8 <__sprintf_chk@plt+0x9ee8>
  404013:	mov    ecx,ebp
  404015:	mov    esi,0x1
  40401a:	xor    eax,eax
  40401c:	call   4011c0 <__fprintf_chk@plt>
  404021:	mov    rcx,QWORD PTR [rsp+0x20]
  404026:	lea    rdi,[rip+0x50ab]        # 4090d8 <__sprintf_chk@plt+0x7ee8>
  40402d:	mov    edx,0x1a
  404032:	mov    esi,0x1
  404037:	call   4011b0 <fwrite@plt>
  40403c:	jmp    403dd4 <__sprintf_chk@plt+0x2be4>
  404041:	mov    rax,QWORD PTR [rsp+0x60]
  404046:	mov    rcx,QWORD PTR [rsp+0x20]
  40404b:	lea    rdi,[rip+0x663e]        # 40a690 <__sprintf_chk@plt+0x94a0>
  404052:	mov    edx,0x24
  404057:	mov    esi,0x1
  40405c:	mov    rbx,QWORD PTR [rax+0x4f8]
  404063:	sub    rbx,QWORD PTR [rsp+0x38]
  404068:	call   4011b0 <fwrite@plt>
  40406d:	mov    rcx,QWORD PTR [rsp+0x20]
  404072:	lea    rdi,[rip+0x663f]        # 40a6b8 <__sprintf_chk@plt+0x94c8>
  404079:	mov    edx,0xd2
  40407e:	mov    esi,0x1
  404083:	call   4011b0 <fwrite@plt>
  404088:	mov    rdi,QWORD PTR [rsp+0x20]
  40408d:	lea    rdx,[rip+0x66fc]        # 40a790 <__sprintf_chk@plt+0x95a0>
  404094:	mov    r8d,0x50
  40409a:	mov    ecx,ebx
  40409c:	mov    esi,0x1
  4040a1:	xor    eax,eax
  4040a3:	call   4011c0 <__fprintf_chk@plt>
  4040a8:	mov    ecx,DWORD PTR [rsp+0x40]
  4040ac:	mov    rdi,QWORD PTR [rsp+0x20]
  4040b1:	lea    rdx,[rip+0x67c8]        # 40a880 <__sprintf_chk@plt+0x9690>
  4040b8:	mov    esi,0x1
  4040bd:	xor    eax,eax
  4040bf:	sub    ecx,ebx
  4040c1:	call   4011c0 <__fprintf_chk@plt>
  4040c6:	mov    rcx,QWORD PTR [rsp+0x20]
  4040cb:	lea    rdi,[rip+0x6886]        # 40a958 <__sprintf_chk@plt+0x9768>
  4040d2:	mov    edx,0x22
  4040d7:	mov    esi,0x1
  4040dc:	call   4011b0 <fwrite@plt>
  4040e1:	mov    rcx,QWORD PTR [rsp+0x20]
  4040e6:	lea    rdi,[rip+0x6893]        # 40a980 <__sprintf_chk@plt+0x9790>
  4040ed:	mov    edx,0x10d
  4040f2:	mov    esi,0x1
  4040f7:	call   4011b0 <fwrite@plt>
  4040fc:	mov    rdi,QWORD PTR [rsp+0x20]
  404101:	lea    rdx,[rip+0x6988]        # 40aa90 <__sprintf_chk@plt+0x98a0>
  404108:	mov    r8d,0x50
  40410e:	mov    ecx,ebx
  404110:	mov    esi,0x1
  404115:	xor    eax,eax
  404117:	call   4011c0 <__fprintf_chk@plt>
  40411c:	mov    rcx,QWORD PTR [rsp+0x20]
  404121:	lea    rdi,[rip+0x6a68]        # 40ab90 <__sprintf_chk@plt+0x99a0>
  404128:	mov    edx,0xe3
  40412d:	mov    esi,0x1
  404132:	call   4011b0 <fwrite@plt>
  404137:	mov    ecx,DWORD PTR [rsp+0x40]
  40413b:	mov    rdi,QWORD PTR [rsp+0x20]
  404140:	lea    rdx,[rip+0x6b31]        # 40ac78 <__sprintf_chk@plt+0x9a88>
  404147:	mov    esi,0x1
  40414c:	xor    eax,eax
  40414e:	sub    ecx,ebx
  404150:	call   4011c0 <__fprintf_chk@plt>
  404155:	jmp    403dd4 <__sprintf_chk@plt+0x2be4>
  40415a:	call   4010a0 <__stack_chk_fail@plt>
  40415f:	mov    rax,QWORD PTR [rip+0xee8a]        # 412ff0 <__sprintf_chk@plt+0x11e00>
  404166:	mov    rcx,rdx
  404169:	lea    rdx,[rip+0x4f38]        # 4090a8 <__sprintf_chk@plt+0x7eb8>
  404170:	mov    esi,0x1
  404175:	mov    rdi,QWORD PTR [rax]
  404178:	xor    eax,eax
  40417a:	call   4011c0 <__fprintf_chk@plt>
  40417f:	mov    edi,0x2
  404184:	call   4011a0 <exit@plt>
  404189:	call   401040 <__errno_location@plt>
  40418e:	mov    edi,DWORD PTR [rax]
  404190:	call   4011d0 <strerror@plt>
  404195:	mov    rcx,rax
  404198:	mov    rax,QWORD PTR [rip+0xee51]        # 412ff0 <__sprintf_chk@plt+0x11e00>
  40419f:	lea    rdx,[rip+0x6462]        # 40a608 <__sprintf_chk@plt+0x9418>
  4041a6:	mov    esi,0x1
  4041ab:	mov    rdi,QWORD PTR [rax]
  4041ae:	xor    eax,eax
  4041b0:	call   4011c0 <__fprintf_chk@plt>
  4041b5:	mov    edi,0x1
  4041ba:	call   4011a0 <exit@plt>
  4041bf:	call   401040 <__errno_location@plt>
  4041c4:	mov    edi,DWORD PTR [rax]
  4041c6:	call   4011d0 <strerror@plt>
  4041cb:	mov    r8,rax
  4041ce:	mov    rax,QWORD PTR [rip+0xee1b]        # 412ff0 <__sprintf_chk@plt+0x11e00>
  4041d5:	mov    rcx,QWORD PTR [rsp+0x28]
  4041da:	lea    rdx,[rip+0x647f]        # 40a660 <__sprintf_chk@plt+0x9470>
  4041e1:	mov    esi,0x1
  4041e6:	mov    rdi,QWORD PTR [rax]
  4041e9:	xor    eax,eax
  4041eb:	call   4011c0 <__fprintf_chk@plt>
  4041f0:	mov    edi,0x1
  4041f5:	call   4011a0 <exit@plt>
  4041fa:	nop    WORD PTR [rax+rax*1+0x0]
  404200:	endbr64 
  404204:	xor    ebp,ebp
  404206:	mov    r9,rdx
  404209:	pop    rsi
  40420a:	mov    rdx,rsp
  40420d:	and    rsp,0xfffffffffffffff0
  404211:	push   rax
  404212:	push   rsp
  404213:	mov    r8,0x408630
  40421a:	mov    rcx,0x4085c0
  404221:	mov    rdi,0x401200
  404228:	call   QWORD PTR [rip+0xedb2]        # 412fe0 <__sprintf_chk@plt+0x11df0>
  40422e:	hlt    
  40422f:	nop
  404230:	endbr64 
  404234:	ret    
  404235:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40423f:	nop
  404240:	mov    eax,0x413117
  404245:	push   rbp
  404246:	sub    rax,0x413110
  40424c:	cmp    rax,0xe
  404250:	mov    rbp,rsp
  404253:	jbe    404270 <__sprintf_chk@plt+0x3080>
  404255:	mov    eax,0x0
  40425a:	test   rax,rax
  40425d:	je     404270 <__sprintf_chk@plt+0x3080>
  40425f:	pop    rbp
  404260:	mov    edi,0x413110
  404265:	jmp    rax
  404267:	nop    WORD PTR [rax+rax*1+0x0]
  404270:	pop    rbp
  404271:	ret    
  404272:	nop    DWORD PTR [rax+0x0]
  404276:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404280:	mov    esi,0x413110
  404285:	push   rbp
  404286:	sub    rsi,0x413110
  40428d:	sar    rsi,0x3
  404291:	mov    rbp,rsp
  404294:	mov    rax,rsi
  404297:	shr    rax,0x3f
  40429b:	add    rsi,rax
  40429e:	sar    rsi,1
  4042a1:	je     4042b8 <__sprintf_chk@plt+0x30c8>
  4042a3:	mov    eax,0x0
  4042a8:	test   rax,rax
  4042ab:	je     4042b8 <__sprintf_chk@plt+0x30c8>
  4042ad:	pop    rbp
  4042ae:	mov    edi,0x413110
  4042b3:	jmp    rax
  4042b5:	nop    DWORD PTR [rax]
  4042b8:	pop    rbp
  4042b9:	ret    
  4042ba:	nop    WORD PTR [rax+rax*1+0x0]
  4042c0:	cmp    BYTE PTR [rip+0xee59],0x0        # 413120 <__sprintf_chk@plt+0x11f30>
  4042c7:	jne    4042da <__sprintf_chk@plt+0x30ea>
  4042c9:	push   rbp
  4042ca:	mov    rbp,rsp
  4042cd:	call   404240 <__sprintf_chk@plt+0x3050>
  4042d2:	pop    rbp
  4042d3:	mov    BYTE PTR [rip+0xee46],0x1        # 413120 <__sprintf_chk@plt+0x11f30>
  4042da:	repz ret 
  4042dc:	nop    DWORD PTR [rax+0x0]
  4042e0:	mov    edi,0x4119f8
  4042e5:	cmp    QWORD PTR [rdi],0x0
  4042e9:	jne    4042f0 <__sprintf_chk@plt+0x3100>
  4042eb:	jmp    404280 <__sprintf_chk@plt+0x3090>
  4042ed:	nop    DWORD PTR [rax]
  4042f0:	mov    eax,0x0
  4042f5:	test   rax,rax
  4042f8:	je     4042eb <__sprintf_chk@plt+0x30fb>
  4042fa:	push   rbp
  4042fb:	mov    rbp,rsp
  4042fe:	call   rax
  404300:	pop    rbp
  404301:	jmp    404280 <__sprintf_chk@plt+0x3090>
  404306:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404310:	push   r13
  404312:	push   r12
  404314:	lea    rdi,[rip+0x4cf0]        # 40900b <__sprintf_chk@plt+0x7e1b>
  40431b:	push   rbp
  40431c:	push   rbx
  40431d:	mov    edx,0x19
  404322:	mov    esi,0x1
  404327:	lea    rbx,[rip+0xd6da]        # 411a08 <__sprintf_chk@plt+0x10818>
  40432e:	lea    r13,[rip+0xd723]        # 411a58 <__sprintf_chk@plt+0x10868>
  404335:	sub    rsp,0x8
  404339:	mov    rbp,QWORD PTR [rip+0xecb0]        # 412ff0 <__sprintf_chk@plt+0x11e00>
  404340:	lea    r12,[rip+0x4d0b]        # 409052 <__sprintf_chk@plt+0x7e62>
  404347:	mov    rcx,QWORD PTR [rbp+0x0]
  40434b:	call   4011b0 <fwrite@plt>
  404350:	mov    rcx,QWORD PTR [rbp+0x0]
  404354:	lea    rdi,[rip+0x6205]        # 40a560 <__sprintf_chk@plt+0x9370>
  40435b:	mov    edx,0x36
  404360:	mov    esi,0x1
  404365:	call   4011b0 <fwrite@plt>
  40436a:	mov    rcx,QWORD PTR [rbp+0x0]
  40436e:	lea    rdi,[rip+0x4cb0]        # 409025 <__sprintf_chk@plt+0x7e35>
  404375:	mov    edx,0x1a
  40437a:	mov    esi,0x1
  40437f:	call   4011b0 <fwrite@plt>
  404384:	mov    rcx,QWORD PTR [rbp+0x0]
  404388:	lea    rdi,[rip+0x6209]        # 40a598 <__sprintf_chk@plt+0x93a8>
  40438f:	mov    edx,0x32
  404394:	mov    esi,0x1
  404399:	call   4011b0 <fwrite@plt>
  40439e:	mov    rcx,QWORD PTR [rbp+0x0]
  4043a2:	lea    rdi,[rip+0x4c97]        # 409040 <__sprintf_chk@plt+0x7e50>
  4043a9:	mov    edx,0x11
  4043ae:	mov    esi,0x1
  4043b3:	call   4011b0 <fwrite@plt>
  4043b8:	lea    rcx,[rip+0x4c45]        # 409004 <__sprintf_chk@plt+0x7e14>
  4043bf:	jmp    4043cf <__sprintf_chk@plt+0x31df>
  4043c1:	nop    DWORD PTR [rax+0x0]
  4043c8:	mov    rcx,QWORD PTR [rbx]
  4043cb:	add    rbx,0x8
  4043cf:	mov    rdi,QWORD PTR [rbp+0x0]
  4043d3:	xor    eax,eax
  4043d5:	mov    rdx,r12
  4043d8:	mov    esi,0x1
  4043dd:	call   4011c0 <__fprintf_chk@plt>
  4043e2:	cmp    rbx,r13
  4043e5:	jne    4043c8 <__sprintf_chk@plt+0x31d8>
  4043e7:	mov    edi,0x1
  4043ec:	call   4011a0 <exit@plt>
  4043f1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4043fc:	nop    DWORD PTR [rax+0x0]
  404400:	push   rbp
  404401:	push   rbx
  404402:	lea    r8,[rip+0xad4e]        # 40f157 <__sprintf_chk@plt+0xdf67>
  404409:	lea    rcx,[rip+0x4c48]        # 409058 <__sprintf_chk@plt+0x7e68>
  404410:	mov    r9,rsi
  404413:	mov    esi,0x1
  404418:	sub    rsp,0x118
  40441f:	mov    rax,QWORD PTR fs:0x28
  404428:	mov    QWORD PTR [rsp+0x108],rax
  404430:	xor    eax,eax
  404432:	lea    rax,[rip+0x4cdc]        # 409115 <__sprintf_chk@plt+0x7f25>
  404439:	cmp    edi,0x2
  40443c:	mov    rbp,rsp
  40443f:	mov    rdi,rbp
  404442:	cmovne r8,rax
  404446:	sub    rsp,0x8
  40444a:	xor    eax,eax
  40444c:	push   rdx
  40444d:	mov    edx,0x100
  404452:	call   4011f0 <__sprintf_chk@plt>
  404457:	mov    esi,0x40
  40445c:	mov    rdi,rbp
  40445f:	call   4010b0 <strchr@plt>
  404464:	test   rax,rax
  404467:	pop    rdx
  404468:	pop    rcx
  404469:	je     40446e <__sprintf_chk@plt+0x327e>
  40446b:	mov    BYTE PTR [rax],0x0
  40446e:	mov    rdx,rbp
  404471:	mov    ecx,DWORD PTR [rdx]
  404473:	add    rdx,0x4
  404477:	lea    eax,[rcx-0x1010101]
  40447d:	andn   eax,ecx,eax
  404482:	and    eax,0x80808080
  404487:	je     404471 <__sprintf_chk@plt+0x3281>
  404489:	mov    ecx,eax
  40448b:	shr    ecx,0x10
  40448e:	test   eax,0x8080
  404493:	cmove  eax,ecx
  404496:	lea    rcx,[rdx+0x2]
  40449a:	mov    ebx,eax
  40449c:	cmove  rdx,rcx
  4044a0:	add    bl,al
  4044a2:	sbb    rdx,0x3
  4044a6:	sub    rdx,rbp
  4044a9:	lea    rbx,[rdx+0x1]
  4044ad:	mov    rdi,rbx
  4044b0:	call   401160 <malloc@plt>
  4044b5:	mov    rdx,rbx
  4044b8:	mov    rsi,rbp
  4044bb:	mov    rdi,rax
  4044be:	call   401150 <memcpy@plt>
  4044c3:	mov    rbx,QWORD PTR [rsp+0x108]
  4044cb:	xor    rbx,QWORD PTR fs:0x28
  4044d4:	jne    4044e0 <__sprintf_chk@plt+0x32f0>
  4044d6:	add    rsp,0x118
  4044dd:	pop    rbx
  4044de:	pop    rbp
  4044df:	ret    
  4044e0:	call   4010a0 <__stack_chk_fail@plt>
  4044e5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4044f0:	push   rbp
  4044f1:	push   rbx
  4044f2:	mov    rbp,rdx
  4044f5:	mov    rdx,rcx
  4044f8:	sub    rsp,0x8
  4044fc:	movsxd r8,DWORD PTR [rdi+0x40]
  404500:	lea    eax,[r8+0x1]
  404504:	test   r8,r8
  404507:	mov    DWORD PTR [rdi+0x40],eax
  40450a:	jle    404576 <__sprintf_chk@plt+0x3386>
  40450c:	mov    r9,QWORD PTR [rdi+0x58]
  404510:	mov    r11,r8
  404513:	sub    r8,0x1
  404517:	shl    r11,0x4
  40451b:	mov    rax,r8
  40451e:	shl    rax,0x4
  404522:	lea    rbx,[r9+r11*1-0x10]
  404527:	cmp    esi,DWORD PTR [rbx+0x8]
  40452a:	jl     404549 <__sprintf_chk@plt+0x3359>
  40452c:	jmp    404583 <__sprintf_chk@plt+0x3393>
  40452e:	xchg   ax,ax
  404530:	cmp    DWORD PTR [r9+rax*1-0x8],esi
  404535:	lea    r10,[rax-0x10]
  404539:	mov    r11,rax
  40453c:	lea    rbx,[r9+r10*1]
  404540:	jle    40455a <__sprintf_chk@plt+0x336a>
  404542:	mov    rax,r10
  404545:	sub    r8,0x1
  404549:	vmovdqu xmm1,XMMWORD PTR [rbx]
  40454d:	test   r8,r8
  404550:	vmovups XMMWORD PTR [r9+r11*1],xmm1
  404556:	jne    404530 <__sprintf_chk@plt+0x3340>
  404558:	xor    eax,eax
  40455a:	lea    rbx,[r9+rax*1]
  40455e:	mov    edi,DWORD PTR [rdi+0x8]
  404561:	mov    DWORD PTR [rbx+0x8],esi
  404564:	mov    rsi,rbp
  404567:	call   404400 <__sprintf_chk@plt+0x3210>
  40456c:	mov    QWORD PTR [rbx],rax
  40456f:	add    rsp,0x8
  404573:	pop    rbx
  404574:	pop    rbp
  404575:	ret    
  404576:	mov    rax,r8
  404579:	mov    r9,QWORD PTR [rdi+0x58]
  40457d:	shl    rax,0x4
  404581:	jmp    40455a <__sprintf_chk@plt+0x336a>
  404583:	mov    rax,r11
  404586:	jmp    40455a <__sprintf_chk@plt+0x336a>
  404588:	nop    DWORD PTR [rax+rax*1+0x0]
  404590:	lea    eax,[rsi-0x1]
  404593:	push   r12
  404595:	push   rbp
  404596:	push   rbx
  404597:	mov    ebx,esi
  404599:	mov    QWORD PTR [rdi],0x0
  4045a0:	cdqe   
  4045a2:	lea    rax,[rax+rax*4]
  4045a6:	lea    rbp,[rax*8+0x78]
  4045ae:	test   rbp,rbp
  4045b1:	je     4045f0 <__sprintf_chk@plt+0x3400>
  4045b3:	cmp    rbp,0x10
  4045b7:	mov    r12,rdi
  4045ba:	jbe    404669 <__sprintf_chk@plt+0x3479>
  4045c0:	mov    eax,0x10
  4045c5:	nop    DWORD PTR [rax]
  4045c8:	add    rax,rax
  4045cb:	cmp    rbp,rax
  4045ce:	ja     4045c8 <__sprintf_chk@plt+0x33d8>
  4045d0:	mov    rbp,rax
  4045d3:	xor    edi,edi
  4045d5:	mov    rsi,rbp
  4045d8:	call   401180 <realloc@plt>
  4045dd:	test   rax,rax
  4045e0:	mov    QWORD PTR [r12],rax
  4045e4:	jne    4045f2 <__sprintf_chk@plt+0x3402>
  4045e6:	mov    edi,0x1
  4045eb:	call   4011a0 <exit@plt>
  4045f0:	xor    eax,eax
  4045f2:	xor    ecx,ecx
  4045f4:	test   ebx,ebx
  4045f6:	mov    QWORD PTR [rax],rbp
  4045f9:	mov    QWORD PTR [rax+0x10],0x0
  404601:	mov    QWORD PTR [rax+0x18],0x0
  404609:	lea    rdx,[rax+0x50]
  40460d:	mov    QWORD PTR [rax+0x20],0x0
  404615:	mov    QWORD PTR [rax+0x28],0x0
  40461d:	mov    QWORD PTR [rax+0x30],0x0
  404625:	mov    DWORD PTR [rax+0x48],ebx
  404628:	jle    404664 <__sprintf_chk@plt+0x3474>
  40462a:	nop    WORD PTR [rax+rax*1+0x0]
  404630:	mov    eax,ecx
  404632:	add    ecx,0x1
  404635:	mov    QWORD PTR [rdx+0x8],0x0
  40463d:	shl    eax,0x18
  404640:	mov    QWORD PTR [rdx+0x10],0x0
  404648:	mov    DWORD PTR [rdx+0x1c],0x0
  40464f:	cdqe   
  404651:	add    rdx,0x28
  404655:	shl    rax,0x2
  404659:	neg    rax
  40465c:	mov    QWORD PTR [rdx-0x28],rax
  404660:	cmp    ebx,ecx
  404662:	jne    404630 <__sprintf_chk@plt+0x3440>
  404664:	pop    rbx
  404665:	pop    rbp
  404666:	pop    r12
  404668:	ret    
  404669:	mov    ebp,0x10
  40466e:	jmp    4045d3 <__sprintf_chk@plt+0x33e3>
  404673:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40467e:	xchg   ax,ax
  404680:	push   r12
  404682:	push   rbp
  404683:	push   rbx
  404684:	mov    r12,QWORD PTR [rdi]
  404687:	xor    ebx,ebx
  404689:	mov    eax,DWORD PTR [r12+0x48]
  40468e:	lea    rbp,[r12+0x58]
  404693:	test   eax,eax
  404695:	jle    4046bc <__sprintf_chk@plt+0x34cc>
  404697:	nop    WORD PTR [rax+rax*1+0x0]
  4046a0:	mov    rdi,QWORD PTR [rbp+0x0]
  4046a4:	test   rdi,rdi
  4046a7:	je     4046ae <__sprintf_chk@plt+0x34be>
  4046a9:	call   401030 <free@plt>
  4046ae:	add    ebx,0x1
  4046b1:	add    rbp,0x28
  4046b5:	cmp    DWORD PTR [r12+0x48],ebx
  4046ba:	jg     4046a0 <__sprintf_chk@plt+0x34b0>
  4046bc:	mov    rdi,QWORD PTR [r12+0x20]
  4046c1:	test   rdi,rdi
  4046c4:	je     4046cb <__sprintf_chk@plt+0x34db>
  4046c6:	call   401030 <free@plt>
  4046cb:	mov    rdi,QWORD PTR [r12+0x10]
  4046d0:	test   rdi,rdi
  4046d3:	je     4046da <__sprintf_chk@plt+0x34ea>
  4046d5:	call   401030 <free@plt>
  4046da:	pop    rbx
  4046db:	mov    rdi,r12
  4046de:	pop    rbp
  4046df:	pop    r12
  4046e1:	jmp    401030 <free@plt>
  4046e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4046f0:	push   rbp
  4046f1:	push   rbx
  4046f2:	lea    eax,[rdx+0xa]
  4046f5:	sub    rsi,0x50
  4046f9:	sub    rsp,0x8
  4046fd:	mov    rbp,QWORD PTR [rdi]
  404700:	shl    rax,0x2
  404704:	mov    rbx,QWORD PTR [rbp+0x18]
  404708:	mov    QWORD PTR [rbp+0x30],rsi
  40470c:	cmp    rbx,rax
  40470f:	jae    404749 <__sprintf_chk@plt+0x3559>
  404711:	cmp    rbx,0x10
  404715:	mov    edx,0x10
  40471a:	cmovb  rbx,rdx
  40471e:	cmp    rax,rbx
  404721:	jbe    404730 <__sprintf_chk@plt+0x3540>
  404723:	nop    DWORD PTR [rax+rax*1+0x0]
  404728:	add    rbx,rbx
  40472b:	cmp    rax,rbx
  40472e:	ja     404728 <__sprintf_chk@plt+0x3538>
  404730:	mov    rdi,QWORD PTR [rbp+0x10]
  404734:	mov    rsi,rbx
  404737:	call   401180 <realloc@plt>
  40473c:	test   rax,rax
  40473f:	mov    QWORD PTR [rbp+0x10],rax
  404743:	je     404750 <__sprintf_chk@plt+0x3560>
  404745:	mov    QWORD PTR [rbp+0x18],rbx
  404749:	add    rsp,0x8
  40474d:	pop    rbx
  40474e:	pop    rbp
  40474f:	ret    
  404750:	mov    edi,0x1
  404755:	call   4011a0 <exit@plt>
  40475a:	nop    WORD PTR [rax+rax*1+0x0]
  404760:	push   r12
  404762:	push   rbp
  404763:	mov    esi,esi
  404765:	push   rbx
  404766:	mov    r12,QWORD PTR [rdi]
  404769:	shl    rsi,0x2
  40476d:	mov    rbp,QWORD PTR [r12+0x28]
  404772:	cmp    rbp,rsi
  404775:	jae    4047d0 <__sprintf_chk@plt+0x35e0>
  404777:	cmp    rbp,0x10
  40477b:	mov    ebx,0x10
  404780:	cmovae rbx,rbp
  404784:	cmp    rbx,rsi
  404787:	jae    404798 <__sprintf_chk@plt+0x35a8>
  404789:	nop    DWORD PTR [rax+0x0]
  404790:	add    rbx,rbx
  404793:	cmp    rsi,rbx
  404796:	ja     404790 <__sprintf_chk@plt+0x35a0>
  404798:	mov    rdi,QWORD PTR [r12+0x20]
  40479d:	mov    rsi,rbx
  4047a0:	call   401180 <realloc@plt>
  4047a5:	test   rax,rax
  4047a8:	mov    QWORD PTR [r12+0x20],rax
  4047ad:	je     4047e6 <__sprintf_chk@plt+0x35f6>
  4047af:	mov    rdx,rbx
  4047b2:	mov    QWORD PTR [r12+0x28],rbx
  4047b7:	lea    rdi,[rax+rbp*1]
  4047bb:	pop    rbx
  4047bc:	sub    rdx,rbp
  4047bf:	xor    esi,esi
  4047c1:	pop    rbp
  4047c2:	pop    r12
  4047c4:	jmp    4010c0 <memset@plt>
  4047c9:	nop    DWORD PTR [rax+0x0]
  4047d0:	mov    rax,QWORD PTR [r12+0x20]
  4047d5:	xor    edx,edx
  4047d7:	xor    esi,esi
  4047d9:	pop    rbx
  4047da:	lea    rdi,[rax+rbp*1]
  4047de:	pop    rbp
  4047df:	pop    r12
  4047e1:	jmp    4010c0 <memset@plt>
  4047e6:	mov    edi,0x1
  4047eb:	call   4011a0 <exit@plt>
  4047f0:	push   rbx
  4047f1:	mov    rbx,QWORD PTR [rdi]
  4047f4:	lea    rax,[rbx+0x50]
  4047f8:	mov    rdi,QWORD PTR [rbx+0x10]
  4047fc:	mov    rdx,QWORD PTR [rbx+0x18]
  404800:	mov    QWORD PTR [rbx+0x8],rsi
  404804:	mov    DWORD PTR [rbx+0x4c],0x0
  40480b:	xor    esi,esi
  40480d:	mov    QWORD PTR [rbx+0x38],rax
  404811:	call   4010c0 <memset@plt>
  404816:	mov    rdi,QWORD PTR [rbx+0x20]
  40481a:	test   rdi,rdi
  40481d:	je     40482a <__sprintf_chk@plt+0x363a>
  40481f:	mov    rdx,QWORD PTR [rbx+0x28]
  404823:	xor    esi,esi
  404825:	call   4010c0 <memset@plt>
  40482a:	mov    esi,DWORD PTR [rbx+0x48]
  40482d:	xor    edx,edx
  40482f:	lea    rax,[rbx+0x68]
  404833:	test   esi,esi
  404835:	jle    40485a <__sprintf_chk@plt+0x366a>
  404837:	nop    WORD PTR [rax+rax*1+0x0]
  404840:	mov    ecx,edx
  404842:	add    edx,0x1
  404845:	mov    DWORD PTR [rax+0x8],0x0
  40484c:	shl    ecx,0x18
  40484f:	add    rax,0x28
  404853:	mov    DWORD PTR [rax-0x28],ecx
  404856:	cmp    edx,esi
  404858:	jne    404840 <__sprintf_chk@plt+0x3650>
  40485a:	pop    rbx
  40485b:	ret    
  40485c:	nop    DWORD PTR [rax+0x0]
  404860:	push   r15
  404862:	push   r14
  404864:	push   r13
  404866:	push   r12
  404868:	push   rbp
  404869:	push   rbx
  40486a:	movsxd rbx,esi
  40486d:	mov    r15,rbx
  404870:	sub    rsp,0x78
  404874:	mov    QWORD PTR [rsp+0x50],rdx
  404879:	mov    QWORD PTR [rsp+0x58],rcx
  40487e:	mov    QWORD PTR [rsp+0x60],r8
  404883:	mov    QWORD PTR [rsp+0x68],r9
  404888:	mov    r12,QWORD PTR [rdi]
  40488b:	mov    rax,QWORD PTR fs:0x28
  404894:	mov    QWORD PTR [rsp+0x38],rax
  404899:	xor    eax,eax
  40489b:	mov    r13,QWORD PTR [r12+0x38]
  4048a0:	add    rbx,QWORD PTR [r12+0x8]
  4048a5:	movsxd rdx,DWORD PTR [r13+0x18]
  4048a9:	mov    ebp,DWORD PTR [r13+0x20]
  4048ad:	cmp    edx,DWORD PTR [r13+0x1c]
  4048b1:	jl     404c60 <__sprintf_chk@plt+0x3a70>
  4048b7:	mov    r14,QWORD PTR [r13+0x10]
  4048bb:	lea    rax,[r14+0xc8]
  4048c2:	cmp    r14,rax
  4048c5:	jb     404978 <__sprintf_chk@plt+0x3788>
  4048cb:	mov    rax,QWORD PTR [r13+0x8]
  4048cf:	mov    esi,edx
  4048d1:	movsxd r14,r14d
  4048d4:	and    esi,0xff000000
  4048da:	shr    r14,0x2
  4048de:	mov    ecx,esi
  4048e0:	shl    rcx,0x2
  4048e4:	sub    rax,rcx
  4048e7:	lea    ecx,[rsi+r14*1-0x19]
  4048ec:	mov    QWORD PTR [r13+0x0],rax
  4048f0:	mov    DWORD PTR [r13+0x1c],ecx
  4048f4:	lea    rdi,[rsp+0xb0]
  4048fc:	mov    DWORD PTR [rax+rdx*4],r15d
  404900:	lea    ecx,[rdx+0x1]
  404903:	movzx  edx,BYTE PTR [rbx]
  404906:	lea    r9,[rip+0x6b03]        # 40b410 <__sprintf_chk@plt+0xa220>
  40490d:	mov    DWORD PTR [rsp+0x20],0x10
  404915:	mov    QWORD PTR [rsp+0x28],rdi
  40491a:	lea    rdi,[rsp+0x40]
  40491f:	mov    r15d,0x10
  404925:	mov    BYTE PTR [rsp+0x17],0x0
  40492a:	mov    BYTE PTR [rsp+0x10],0x0
  40492f:	mov    r11d,0x4
  404935:	mov    QWORD PTR [rsp+0x30],rdi
  40493a:	mov    QWORD PTR [rsp+0x18],rdi
  40493f:	lea    rdi,[rsp+0xb0]
  404947:	mov    QWORD PTR [rsp+0x8],rdi
  40494c:	lea    rdi,[rip+0x6a8d]        # 40b3e0 <__sprintf_chk@plt+0xa1f0>
  404953:	nop    DWORD PTR [rax+rax*1+0x0]
  404958:	movzx  r8d,dl
  40495c:	lea    rsi,[rbx+0x1]
  404960:	cmp    r8d,0xe8
  404967:	jg     4049c8 <__sprintf_chk@plt+0x37d8>
  404969:	movzx  edx,BYTE PTR [rbx+0x1]
  40496d:	add    ebp,0x1
  404970:	mov    rbx,rsi
  404973:	jmp    404958 <__sprintf_chk@plt+0x3768>
  404975:	nop    DWORD PTR [rax]
  404978:	cmp    r14,0x10
  40497c:	mov    ecx,0x10
  404981:	cmovb  r14,rcx
  404985:	cmp    r14,rax
  404988:	jae    404998 <__sprintf_chk@plt+0x37a8>
  40498a:	nop    WORD PTR [rax+rax*1+0x0]
  404990:	add    r14,r14
  404993:	cmp    rax,r14
  404996:	ja     404990 <__sprintf_chk@plt+0x37a0>
  404998:	mov    rdi,QWORD PTR [r13+0x8]
  40499c:	mov    rsi,r14
  40499f:	mov    DWORD PTR [rsp+0x10],edx
  4049a3:	call   401180 <realloc@plt>
  4049a8:	test   rax,rax
  4049ab:	mov    QWORD PTR [r13+0x8],rax
  4049af:	movsxd rdx,DWORD PTR [rsp+0x10]
  4049b4:	je     404f39 <__sprintf_chk@plt+0x3d49>
  4049ba:	mov    QWORD PTR [r13+0x10],r14
  4049be:	jmp    4048cf <__sprintf_chk@plt+0x36df>
  4049c3:	nop    DWORD PTR [rax+rax*1+0x0]
  4049c8:	cmp    r8d,0xf3
  4049cf:	jle    404ce8 <__sprintf_chk@plt+0x3af8>
  4049d5:	add    edx,0xc
  4049d8:	cmp    dl,0xb
  4049db:	ja     404a75 <__sprintf_chk@plt+0x3885>
  4049e1:	movzx  edx,dl
  4049e4:	movsxd rdx,DWORD PTR [rdi+rdx*4]
  4049e8:	add    rdx,rdi
  4049eb:	jmp    rdx
  4049ed:	nop    DWORD PTR [rax]
  4049f0:	lea    rax,[rdx+rdx*4]
  4049f4:	lea    rax,[r12+rax*8+0x50]
  4049f9:	mov    QWORD PTR [r12+0x38],rax
  4049fe:	mov    DWORD PTR [r13+0x18],ecx
  404a02:	mov    DWORD PTR [r13+0x20],ebp
  404a06:	mov    rax,QWORD PTR [rsp+0x38]
  404a0b:	xor    rax,QWORD PTR fs:0x28
  404a14:	jne    404ce0 <__sprintf_chk@plt+0x3af0>
  404a1a:	add    rsp,0x78
  404a1e:	pop    rbx
  404a1f:	pop    rbp
  404a20:	pop    r12
  404a22:	pop    r13
  404a24:	pop    r14
  404a26:	pop    r15
  404a28:	ret    
  404a29:	nop    DWORD PTR [rax+0x0]
  404a30:	cmp    BYTE PTR [rsp+0x10],0x0
  404a35:	jne    404f0a <__sprintf_chk@plt+0x3d1a>
  404a3b:	cmp    BYTE PTR [rsp+0x17],0x0
  404a40:	jne    404ee0 <__sprintf_chk@plt+0x3cf0>
  404a46:	movzx  edx,BYTE PTR [rbx+0x1]
  404a4a:	cmp    edx,DWORD PTR [r12+0x48]
  404a4f:	jl     4049f0 <__sprintf_chk@plt+0x3800>
  404a51:	sub    rsi,QWORD PTR [r12+0x8]
  404a56:	sub    esi,0x1
  404a59:	or     esi,0x12000000
  404a5f:	mov    DWORD PTR [r12+0x4c],esi
  404a64:	jmp    404a06 <__sprintf_chk@plt+0x3816>
  404a66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404a70:	movzx  r11d,BYTE PTR [rbx-0x1]
  404a75:	movzx  edx,BYTE PTR [rbx+0x1]
  404a79:	mov    rbx,rsi
  404a7c:	jmp    404958 <__sprintf_chk@plt+0x3768>
  404a81:	nop    DWORD PTR [rax+0x0]
  404a88:	cmp    r15d,0x2f
  404a8c:	mov    r10,QWORD PTR [r12+0x20]
  404a91:	ja     404eef <__sprintf_chk@plt+0x3cff>
  404a97:	mov    edx,r15d
  404a9a:	add    rdx,QWORD PTR [rsp+0x18]
  404a9f:	add    r15d,0x8
  404aa3:	mov    BYTE PTR [rsp+0x10],0x1
  404aa8:	movsxd rdx,DWORD PTR [rdx]
  404aab:	shl    rdx,0x2
  404aaf:	add    r10,rdx
  404ab2:	cmp    rdx,QWORD PTR [r12+0x28]
  404ab7:	jb     404aff <__sprintf_chk@plt+0x390f>
  404ab9:	cmp    BYTE PTR [rsp+0x10],0x0
  404abe:	jne    404f5e <__sprintf_chk@plt+0x3d6e>
  404ac4:	mov    rax,rsi
  404ac7:	sub    rax,QWORD PTR [r12+0x8]
  404acc:	sub    eax,0x1
  404acf:	or     eax,0x14000000
  404ad4:	mov    DWORD PTR [r12+0x4c],eax
  404ad9:	jmp    404a06 <__sprintf_chk@plt+0x3816>
  404ade:	xchg   ax,ax
  404ae0:	movzx  edx,BYTE PTR [rbx+0x1]
  404ae4:	lea    rsi,[rbx+0x2]
  404ae8:	shl    rdx,0x2
  404aec:	mov    r10,rdx
  404aef:	add    r10,QWORD PTR [r12+0x10]
  404af4:	cmp    rdx,QWORD PTR [r12+0x18]
  404af9:	jae    404cbb <__sprintf_chk@plt+0x3acb>
  404aff:	movsxd r8,DWORD PTR [r10]
  404b02:	test   r8d,r8d
  404b05:	jle    404b30 <__sprintf_chk@plt+0x3940>
  404b07:	nop    WORD PTR [rax+rax*1+0x0]
  404b10:	mov    edx,r8d
  404b13:	sar    edx,0x18
  404b16:	movsxd rdx,edx
  404b19:	lea    rdx,[rdx+rdx*4]
  404b1d:	mov    rdx,QWORD PTR [r12+rdx*8+0x50]
  404b22:	lea    rdx,[rdx+r8*4]
  404b26:	movsxd r8,DWORD PTR [rdx]
  404b29:	mov    DWORD PTR [rdx],ecx
  404b2b:	test   r8d,r8d
  404b2e:	jg     404b10 <__sprintf_chk@plt+0x3920>
  404b30:	mov    edx,ecx
  404b32:	mov    rbx,rsi
  404b35:	neg    edx
  404b37:	mov    DWORD PTR [r10],edx
  404b3a:	movsxd rdx,ecx
  404b3d:	add    ecx,0x1
  404b40:	mov    DWORD PTR [rax+rdx*4],ebp
  404b43:	movzx  edx,BYTE PTR [rsi]
  404b46:	jmp    404958 <__sprintf_chk@plt+0x3768>
  404b4b:	nop    DWORD PTR [rax+rax*1+0x0]
  404b50:	cmp    r15d,0x2f
  404b54:	mov    rdx,QWORD PTR [r12+0x20]
  404b59:	ja     404f43 <__sprintf_chk@plt+0x3d53>
  404b5f:	mov    r10d,r15d
  404b62:	add    r10,QWORD PTR [rsp+0x18]
  404b67:	add    r15d,0x8
  404b6b:	mov    BYTE PTR [rsp+0x10],0x1
  404b70:	movsxd r10,DWORD PTR [r10]
  404b73:	shl    r10,0x2
  404b77:	add    rdx,r10
  404b7a:	cmp    r10,QWORD PTR [r12+0x28]
  404b7f:	jae    404ab9 <__sprintf_chk@plt+0x38c9>
  404b85:	mov    r10d,DWORD PTR [rdx]
  404b88:	test   r10d,r10d
  404b8b:	js     404c06 <__sprintf_chk@plt+0x3a16>
  404b8d:	movsxd rbx,ecx
  404b90:	mov    DWORD PTR [rax+rbx*4],r10d
  404b94:	mov    DWORD PTR [rdx],ecx
  404b96:	mov    rbx,rsi
  404b99:	sub    r8d,0xf4
  404ba0:	add    ebp,0x4
  404ba3:	lea    r10d,[rcx+0x1]
  404ba7:	cmp    r8d,0x1
  404bab:	jbe    404c70 <__sprintf_chk@plt+0x3a80>
  404bb1:	movzx  edx,BYTE PTR [rsi]
  404bb4:	mov    ecx,r10d
  404bb7:	jmp    404958 <__sprintf_chk@plt+0x3768>
  404bbc:	nop    DWORD PTR [rax+0x0]
  404bc0:	movzx  r10d,BYTE PTR [rbx+0x1]
  404bc5:	lea    rsi,[rbx+0x2]
  404bc9:	mov    rdx,r10
  404bcc:	shl    rdx,0x2
  404bd0:	mov    rbx,rdx
  404bd3:	add    rbx,QWORD PTR [r12+0x10]
  404bd8:	cmp    r10d,0xf6
  404bdf:	jg     404c88 <__sprintf_chk@plt+0x3a98>
  404be5:	cmp    r10d,0x9
  404be9:	jg     404cac <__sprintf_chk@plt+0x3abc>
  404bef:	mov    r10d,DWORD PTR [rbx]
  404bf2:	test   r10d,r10d
  404bf5:	jns    404cbb <__sprintf_chk@plt+0x3acb>
  404bfb:	cmp    rdx,QWORD PTR [r12+0x18]
  404c00:	jae    404cbb <__sprintf_chk@plt+0x3acb>
  404c06:	movsxd rdx,ecx
  404c09:	neg    r10d
  404c0c:	mov    rbx,rsi
  404c0f:	mov    DWORD PTR [rax+rdx*4],r10d
  404c13:	jmp    404b99 <__sprintf_chk@plt+0x39a9>
  404c15:	nop    DWORD PTR [rax]
  404c18:	movzx  edx,BYTE PTR [rbx+0x3]
  404c1c:	add    ebp,0x4
  404c1f:	add    rbx,0x3
  404c23:	jmp    404958 <__sprintf_chk@plt+0x3768>
  404c28:	nop    DWORD PTR [rax+rax*1+0x0]
  404c30:	movzx  edx,BYTE PTR [rbx+0x2]
  404c34:	add    ebp,0x1
  404c37:	add    rbx,0x2
  404c3b:	jmp    404958 <__sprintf_chk@plt+0x3768>
  404c40:	movzx  edx,BYTE PTR [rbx+0x1]
  404c44:	add    rbx,0x2
  404c48:	add    ebp,edx
  404c4a:	movsxd rdx,ecx
  404c4d:	add    ecx,0x1
  404c50:	mov    DWORD PTR [rax+rdx*4],ebp
  404c53:	movzx  edx,BYTE PTR [rbx]
  404c56:	jmp    404958 <__sprintf_chk@plt+0x3768>
  404c5b:	nop    DWORD PTR [rax+rax*1+0x0]
  404c60:	mov    rax,QWORD PTR [r13+0x0]
  404c64:	jmp    4048f4 <__sprintf_chk@plt+0x3704>
  404c69:	nop    DWORD PTR [rax+0x0]
  404c70:	movsxd r10,r10d
  404c73:	add    ecx,0x2
  404c76:	mov    DWORD PTR [rax+r10*4],ebp
  404c7a:	movzx  edx,BYTE PTR [rsi]
  404c7d:	jmp    404958 <__sprintf_chk@plt+0x3768>
  404c82:	nop    WORD PTR [rax+rax*1+0x0]
  404c88:	mov    r10d,DWORD PTR [rbx-0x3d8]
  404c8f:	lea    rdx,[rbx-0x3d8]
  404c96:	test   r10d,r10d
  404c99:	mov    r10d,0x0
  404c9f:	cmovns r10d,DWORD PTR [rbx-0x3d8]
  404ca7:	jmp    404b8d <__sprintf_chk@plt+0x399d>
  404cac:	cmp    rdx,QWORD PTR [r12+0x18]
  404cb1:	jae    404cbb <__sprintf_chk@plt+0x3acb>
  404cb3:	mov    rdx,rbx
  404cb6:	jmp    404b85 <__sprintf_chk@plt+0x3995>
  404cbb:	cmp    BYTE PTR [rsp+0x10],0x0
  404cc0:	jne    404f14 <__sprintf_chk@plt+0x3d24>
  404cc6:	mov    rax,rsi
  404cc9:	sub    rax,QWORD PTR [r12+0x8]
  404cce:	sub    eax,0x1
  404cd1:	or     eax,0x13000000
  404cd6:	mov    DWORD PTR [r12+0x4c],eax
  404cdb:	jmp    404a06 <__sprintf_chk@plt+0x3816>
  404ce0:	call   4010a0 <__stack_chk_fail@plt>
  404ce5:	nop    DWORD PTR [rax]
  404ce8:	cmp    r15d,0x2f
  404cec:	ja     404f1e <__sprintf_chk@plt+0x3d2e>
  404cf2:	mov    r8d,r15d
  404cf5:	add    r8,QWORD PTR [rsp+0x18]
  404cfa:	add    r15d,0x8
  404cfe:	mov    BYTE PTR [rsp+0x10],0x1
  404d03:	mov    r8d,DWORD PTR [r8]
  404d06:	add    edx,0x17
  404d09:	lea    r10d,[rcx+0x1]
  404d0d:	cmp    dl,0xa
  404d10:	movsxd rcx,ecx
  404d13:	lea    r14,[rcx*4+0x0]
  404d1b:	mov    DWORD PTR [rax+rcx*4],r8d
  404d1f:	ja     404e7d <__sprintf_chk@plt+0x3c8d>
  404d25:	movzx  edx,dl
  404d28:	movsxd rdx,DWORD PTR [r9+rdx*4]
  404d2c:	add    rdx,r9
  404d2f:	jmp    rdx
  404d31:	nop    DWORD PTR [rax+0x0]
  404d38:	movzx  edx,BYTE PTR [rbx+0x1]
  404d3c:	add    ebp,0x4
  404d3f:	mov    ecx,r10d
  404d42:	mov    rbx,rsi
  404d45:	mov    r11d,0x4
  404d4b:	jmp    404958 <__sprintf_chk@plt+0x3768>
  404d50:	lea    edx,[r8+0x80]
  404d57:	and    edx,0xffffff00
  404d5d:	je     404d8d <__sprintf_chk@plt+0x3b9d>
  404d5f:	and    r8d,0xffff0000
  404d66:	jne    404db1 <__sprintf_chk@plt+0x3bc1>
  404d68:	movzx  edx,BYTE PTR [rbx+0x1]
  404d6c:	add    ebp,0x2
  404d6f:	mov    ecx,r10d
  404d72:	mov    rbx,rsi
  404d75:	mov    r11d,0x4
  404d7b:	jmp    404958 <__sprintf_chk@plt+0x3768>
  404d80:	sub    r8d,0xffffff80
  404d84:	and    r8d,0xffffff00
  404d8b:	jne    404d38 <__sprintf_chk@plt+0x3b48>
  404d8d:	movzx  edx,BYTE PTR [rbx+0x1]
  404d91:	add    ebp,0x1
  404d94:	mov    ecx,r10d
  404d97:	mov    rbx,rsi
  404d9a:	mov    r11d,0x4
  404da0:	jmp    404958 <__sprintf_chk@plt+0x3768>
  404da5:	nop    DWORD PTR [rax]
  404da8:	and    r8d,0xffffff00
  404daf:	je     404d8d <__sprintf_chk@plt+0x3b9d>
  404db1:	cmp    BYTE PTR [rsp+0x10],0x0
  404db6:	jne    404ecf <__sprintf_chk@plt+0x3cdf>
  404dbc:	mov    rax,rsi
  404dbf:	sub    rax,QWORD PTR [r12+0x8]
  404dc4:	sub    eax,0x1
  404dc7:	or     eax,0x11000000
  404dcc:	mov    DWORD PTR [r12+0x4c],eax
  404dd1:	jmp    404a06 <__sprintf_chk@plt+0x3816>
  404dd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404de0:	sub    r8d,0xffffff80
  404de4:	and    r8d,0xffffff00
  404deb:	je     404d8d <__sprintf_chk@plt+0x3b9d>
  404ded:	jmp    404db1 <__sprintf_chk@plt+0x3bc1>
  404def:	nop
  404df0:	movzx  edx,BYTE PTR [rbx+0x2]
  404df4:	add    ebp,r8d
  404df7:	mov    ecx,r10d
  404dfa:	add    rbx,0x2
  404dfe:	mov    r11d,0x4
  404e04:	jmp    404958 <__sprintf_chk@plt+0x3768>
  404e09:	nop    DWORD PTR [rax+0x0]
  404e10:	test   r8d,0xfffffff8
  404e17:	jne    404e97 <__sprintf_chk@plt+0x3ca7>
  404e19:	cmp    r8d,0x4
  404e1d:	movzx  edx,BYTE PTR [rbx+0x1]
  404e21:	je     404e92 <__sprintf_chk@plt+0x3ca2>
  404e23:	cmp    dl,0x1
  404e26:	lea    rsi,[rbx+0x2]
  404e2a:	movzx  edx,BYTE PTR [rbx+0x2]
  404e2e:	je     404eb8 <__sprintf_chk@plt+0x3cc8>
  404e34:	mov    ecx,r10d
  404e37:	mov    rbx,rsi
  404e3a:	jmp    404958 <__sprintf_chk@plt+0x3768>
  404e3f:	nop
  404e40:	mov    DWORD PTR [rax+r14*1-0x4],0xc0000000
  404e49:	mov    ecx,r10d
  404e4c:	movzx  edx,BYTE PTR [rbx+0x1]
  404e50:	mov    r11d,0x4
  404e56:	mov    rbx,rsi
  404e59:	jmp    404958 <__sprintf_chk@plt+0x3768>
  404e5e:	xchg   ax,ax
  404e60:	test   r8d,r8d
  404e63:	jne    404d80 <__sprintf_chk@plt+0x3b90>
  404e69:	and    r11d,0x7
  404e6d:	cmp    r11d,0x4
  404e71:	je     404ec4 <__sprintf_chk@plt+0x3cd4>
  404e73:	cmp    r11d,0x5
  404e77:	je     404d8d <__sprintf_chk@plt+0x3b9d>
  404e7d:	movzx  edx,BYTE PTR [rbx+0x1]
  404e81:	mov    ecx,r10d
  404e84:	mov    rbx,rsi
  404e87:	mov    r11d,0x4
  404e8d:	jmp    404958 <__sprintf_chk@plt+0x3768>
  404e92:	test   dl,0x1
  404e95:	je     404e23 <__sprintf_chk@plt+0x3c33>
  404e97:	cmp    BYTE PTR [rsp+0x10],0x0
  404e9c:	jne    404ed9 <__sprintf_chk@plt+0x3ce9>
  404e9e:	mov    rax,rsi
  404ea1:	sub    rax,QWORD PTR [r12+0x8]
  404ea6:	sub    eax,0x1
  404ea9:	or     eax,0x15000000
  404eae:	mov    DWORD PTR [r12+0x4c],eax
  404eb3:	jmp    404a06 <__sprintf_chk@plt+0x3816>
  404eb8:	cmp    dl,0xe9
  404ebb:	cmove  r11d,r8d
  404ebf:	jmp    404e34 <__sprintf_chk@plt+0x3c44>
  404ec4:	movzx  r11d,BYTE PTR [rbx-0x1]
  404ec9:	and    r11d,0x7
  404ecd:	jmp    404e73 <__sprintf_chk@plt+0x3c83>
  404ecf:	mov    DWORD PTR [rsp+0x20],r15d
  404ed4:	jmp    404dbc <__sprintf_chk@plt+0x3bcc>
  404ed9:	mov    DWORD PTR [rsp+0x20],r15d
  404ede:	jmp    404e9e <__sprintf_chk@plt+0x3cae>
  404ee0:	mov    rax,QWORD PTR [rsp+0x8]
  404ee5:	mov    QWORD PTR [rsp+0x28],rax
  404eea:	jmp    404a46 <__sprintf_chk@plt+0x3856>
  404eef:	mov    rbx,QWORD PTR [rsp+0x8]
  404ef4:	mov    BYTE PTR [rsp+0x17],0x1
  404ef9:	mov    rdx,rbx
  404efc:	add    rbx,0x8
  404f00:	mov    QWORD PTR [rsp+0x8],rbx
  404f05:	jmp    404aa8 <__sprintf_chk@plt+0x38b8>
  404f0a:	mov    DWORD PTR [rsp+0x20],r15d
  404f0f:	jmp    404a3b <__sprintf_chk@plt+0x384b>
  404f14:	mov    DWORD PTR [rsp+0x20],r15d
  404f19:	jmp    404cc6 <__sprintf_chk@plt+0x3ad6>
  404f1e:	mov    r14,QWORD PTR [rsp+0x8]
  404f23:	mov    BYTE PTR [rsp+0x17],0x1
  404f28:	mov    r8,r14
  404f2b:	add    r14,0x8
  404f2f:	mov    QWORD PTR [rsp+0x8],r14
  404f34:	jmp    404d03 <__sprintf_chk@plt+0x3b13>
  404f39:	mov    edi,0x1
  404f3e:	call   4011a0 <exit@plt>
  404f43:	mov    rbx,QWORD PTR [rsp+0x8]
  404f48:	mov    BYTE PTR [rsp+0x17],0x1
  404f4d:	mov    r10,rbx
  404f50:	add    rbx,0x8
  404f54:	mov    QWORD PTR [rsp+0x8],rbx
  404f59:	jmp    404b70 <__sprintf_chk@plt+0x3980>
  404f5e:	mov    DWORD PTR [rsp+0x20],r15d
  404f63:	jmp    404ac4 <__sprintf_chk@plt+0x38d4>
  404f68:	nop    DWORD PTR [rax+rax*1+0x0]
  404f70:	push   r15
  404f72:	push   r14
  404f74:	push   r13
  404f76:	push   r12
  404f78:	push   rbp
  404f79:	push   rbx
  404f7a:	mov    r15,QWORD PTR [rdi]
  404f7d:	mov    QWORD PTR [rsi],0x0
  404f84:	mov    QWORD PTR [rsp-0x8],rsi
  404f89:	mov    eax,DWORD PTR [r15+0x4c]
  404f8d:	test   eax,eax
  404f8f:	mov    DWORD PTR [rsp-0xc],eax
  404f93:	jne    405117 <__sprintf_chk@plt+0x3f27>
  404f99:	mov    rcx,QWORD PTR [r15+0x28]
  404f9d:	test   rcx,rcx
  404fa0:	je     404fdf <__sprintf_chk@plt+0x3def>
  404fa2:	mov    rdi,QWORD PTR [r15+0x20]
  404fa6:	mov    esi,DWORD PTR [rdi]
  404fa8:	test   esi,esi
  404faa:	jg     405326 <__sprintf_chk@plt+0x4136>
  404fb0:	mov    eax,0x1
  404fb5:	jmp    404fd0 <__sprintf_chk@plt+0x3de0>
  404fb7:	nop    WORD PTR [rax+rax*1+0x0]
  404fc0:	add    rax,0x1
  404fc4:	mov    edx,DWORD PTR [rdi+rax*4-0x4]
  404fc8:	test   edx,edx
  404fca:	jg     40530d <__sprintf_chk@plt+0x411d>
  404fd0:	lea    rdx,[rax*4+0x0]
  404fd8:	mov    esi,eax
  404fda:	cmp    rdx,rcx
  404fdd:	jb     404fc0 <__sprintf_chk@plt+0x3dd0>
  404fdf:	mov    rdi,QWORD PTR [r15+0x18]
  404fe3:	cmp    rdi,0x28
  404fe7:	jbe    40503a <__sprintf_chk@plt+0x3e4a>
  404fe9:	mov    r8,QWORD PTR [r15+0x10]
  404fed:	mov    ecx,0xfffffff6
  404ff2:	mov    esi,0x28
  404ff7:	nop    WORD PTR [rax+rax*1+0x0]
  405000:	movsxd rax,DWORD PTR [r8+rsi*1]
  405004:	test   eax,eax
  405006:	jle    40502e <__sprintf_chk@plt+0x3e3e>
  405008:	nop    DWORD PTR [rax+rax*1+0x0]
  405010:	mov    edx,eax
  405012:	sar    edx,0x18
  405015:	movsxd rdx,edx
  405018:	lea    rdx,[rdx+rdx*4]
  40501c:	mov    rdx,QWORD PTR [r15+rdx*8+0x50]
  405021:	lea    rdx,[rdx+rax*4]
  405025:	movsxd rax,DWORD PTR [rdx]
  405028:	mov    DWORD PTR [rdx],ecx
  40502a:	test   eax,eax
  40502c:	jg     405010 <__sprintf_chk@plt+0x3e20>
  40502e:	add    rsi,0x4
  405032:	sub    ecx,0x1
  405035:	cmp    rsi,rdi
  405038:	jb     405000 <__sprintf_chk@plt+0x3e10>
  40503a:	mov    eax,DWORD PTR [r15+0x48]
  40503e:	xor    edi,edi
  405040:	test   eax,eax
  405042:	jle    40510b <__sprintf_chk@plt+0x3f1b>
  405048:	lea    rax,[r15+0x50]
  40504c:	xor    r14d,r14d
  40504f:	xor    esi,esi
  405051:	lea    rcx,[rip+0x63e4]        # 40b43c <__sprintf_chk@plt+0xa24c>
  405058:	mov    QWORD PTR [rsp-0x20],r15
  40505d:	xor    edi,edi
  40505f:	mov    QWORD PTR [rsp-0x18],rax
  405064:	mov    rax,r14
  405067:	mov    r14d,esi
  40506a:	mov    rbx,QWORD PTR [rsp-0x18]
  40506f:	mov    edx,r14d
  405072:	shl    edx,0x18
  405075:	mov    r12d,DWORD PTR [rbx+0x18]
  405079:	mov    rsi,QWORD PTR [rbx]
  40507c:	cmp    edx,r12d
  40507f:	je     4050d5 <__sprintf_chk@plt+0x3ee5>
  405081:	add    rax,0x1
  405085:	mov    r13,QWORD PTR [r15+0x8]
  405089:	mov    QWORD PTR [rsp-0x28],rax
  40508e:	mov    eax,r14d
  405091:	not    eax
  405093:	mov    DWORD PTR [rsp-0x10],eax
  405097:	nop    WORD PTR [rax+rax*1+0x0]
  4050a0:	movsxd rax,edx
  4050a3:	add    edx,0x1
  4050a6:	movsxd rax,DWORD PTR [rsi+rax*4]
  4050aa:	add    rax,r13
  4050ad:	nop    DWORD PTR [rax]
  4050b0:	lea    r9,[rax+0x1]
  4050b4:	movzx  ebx,BYTE PTR [r9-0x1]
  4050b9:	lea    r8d,[rbx+0x17]
  4050bd:	cmp    r8b,0x16
  4050c1:	ja     4052c8 <__sprintf_chk@plt+0x40d8>
  4050c7:	movzx  r8d,r8b
  4050cb:	movsxd r8,DWORD PTR [rcx+r8*4]
  4050cf:	add    r8,rcx
  4050d2:	jmp    r8
  4050d5:	add    rax,0x1
  4050d9:	mov    QWORD PTR [rsp-0x28],rax
  4050de:	mov    rsi,QWORD PTR [rsp-0x18]
  4050e3:	add    r14d,0x1
  4050e7:	add    QWORD PTR [rsp-0x20],0x28
  4050ed:	mov    rax,QWORD PTR [rsp-0x28]
  4050f2:	add    edi,DWORD PTR [rsi+0x20]
  4050f5:	add    rsi,0x28
  4050f9:	cmp    DWORD PTR [r15+0x48],r14d
  4050fd:	mov    QWORD PTR [rsp-0x18],rsi
  405102:	jg     40506a <__sprintf_chk@plt+0x3e7a>
  405108:	movsxd rdi,edi
  40510b:	mov    rax,QWORD PTR [rsp-0x8]
  405110:	mov    QWORD PTR [r15+0x40],rdi
  405114:	mov    QWORD PTR [rax],rdi
  405117:	mov    eax,DWORD PTR [rsp-0xc]
  40511b:	pop    rbx
  40511c:	pop    rbp
  40511d:	pop    r12
  40511f:	pop    r13
  405121:	pop    r14
  405123:	pop    r15
  405125:	ret    
  405126:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405130:	mov    rax,r9
  405133:	movsxd r8,edx
  405136:	add    edx,0x1
  405139:	add    DWORD PTR [rsi+r8*4],edi
  40513d:	jmp    4050b0 <__sprintf_chk@plt+0x3ec0>
  405142:	nop    WORD PTR [rax+rax*1+0x0]
  405148:	mov    rax,r9
  40514b:	add    edx,0x1
  40514e:	jmp    4050b0 <__sprintf_chk@plt+0x3ec0>
  405153:	nop    DWORD PTR [rax+rax*1+0x0]
  405158:	add    rax,0x2
  40515c:	jmp    405133 <__sprintf_chk@plt+0x3f43>
  40515e:	xchg   ax,ax
  405160:	movzx  r8d,BYTE PTR [r9-0x2]
  405165:	mov    rax,r9
  405168:	cmp    r8d,0xe9
  40516f:	je     4051b2 <__sprintf_chk@plt+0x3fc2>
  405171:	and    r8d,0xf0
  405178:	add    r8d,0xffffff80
  40517c:	je     4052d0 <__sprintf_chk@plt+0x40e0>
  405182:	movsxd r8,edx
  405185:	xor    r10d,r10d
  405188:	lea    r8,[rsi+r8*4+0x4]
  40518d:	mov    DWORD PTR [r8],r10d
  405190:	add    edx,0x2
  405193:	jmp    4050b0 <__sprintf_chk@plt+0x3ec0>
  405198:	nop    DWORD PTR [rax+rax*1+0x0]
  4051a0:	movzx  r8d,BYTE PTR [r9-0x2]
  4051a5:	add    rax,0x2
  4051a9:	cmp    r8d,0xe9
  4051b0:	jne    405171 <__sprintf_chk@plt+0x3f81>
  4051b2:	mov    r10d,0x3
  4051b8:	movsxd r8,edx
  4051bb:	lea    rbx,[r8*4+0x0]
  4051c3:	mov    r8d,DWORD PTR [rsi+r8*4]
  4051c7:	test   r8d,r8d
  4051ca:	js     405300 <__sprintf_chk@plt+0x4110>
  4051d0:	mov    r11d,r8d
  4051d3:	movsxd rbp,r8d
  4051d6:	sar    r11d,0x18
  4051da:	cmp    edx,r8d
  4051dd:	movsxd r9,r11d
  4051e0:	lea    r9,[r9+r9*4]
  4051e4:	mov    r9,QWORD PTR [r15+r9*8+0x50]
  4051e9:	mov    r9d,DWORD PTR [r9+rbp*4]
  4051ed:	jge    4052e0 <__sprintf_chk@plt+0x40f0>
  4051f3:	cmp    r11d,r14d
  4051f6:	jle    405225 <__sprintf_chk@plt+0x4035>
  4051f8:	mov    r8d,DWORD PTR [rsp-0x10]
  4051fd:	add    r8d,r11d
  405200:	add    r8,QWORD PTR [rsp-0x28]
  405205:	lea    r8,[r8+r8*4]
  405209:	lea    r11,[r15+r8*8]
  40520d:	mov    r8,QWORD PTR [rsp-0x20]
  405212:	nop    WORD PTR [rax+rax*1+0x0]
  405218:	add    r9d,DWORD PTR [r8+0x70]
  40521c:	add    r8,0x28
  405220:	cmp    r11,r8
  405223:	jne    405218 <__sprintf_chk@plt+0x4028>
  405225:	lea    r8,[rsi+rbx*1+0x4]
  40522a:	mov    r11d,0xffffff80
  405230:	sub    r11d,r10d
  405233:	sub    r9d,DWORD PTR [r8]
  405236:	cmp    r9d,r11d
  405239:	jl     4052f0 <__sprintf_chk@plt+0x4100>
  40523f:	cmp    r9d,0x7f
  405243:	jg     4052f0 <__sprintf_chk@plt+0x4100>
  405249:	sub    edi,r10d
  40524c:	jmp    40518d <__sprintf_chk@plt+0x3f9d>
  405251:	nop    DWORD PTR [rax+0x0]
  405258:	add    rax,0x2
  40525c:	jmp    40514b <__sprintf_chk@plt+0x3f5b>
  405261:	nop    DWORD PTR [rax+0x0]
  405268:	cmp    edx,r12d
  40526b:	jne    4050a0 <__sprintf_chk@plt+0x3eb0>
  405271:	jmp    4050de <__sprintf_chk@plt+0x3eee>
  405276:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405280:	add    rax,0x2
  405284:	jmp    4050b0 <__sprintf_chk@plt+0x3ec0>
  405289:	nop    DWORD PTR [rax+0x0]
  405290:	add    rax,0x3
  405294:	jmp    4050b0 <__sprintf_chk@plt+0x3ec0>
  405299:	nop    DWORD PTR [rax+0x0]
  4052a0:	movsxd r8,edx
  4052a3:	movzx  r9d,BYTE PTR [r9]
  4052a7:	add    rax,0x2
  4052ab:	mov    ebx,DWORD PTR [rsi+r8*4]
  4052af:	add    edx,0x1
  4052b2:	add    ebx,edi
  4052b4:	mov    r8d,ebx
  4052b7:	and    r8d,r9d
  4052ba:	sub    edi,r8d
  4052bd:	jmp    4050b0 <__sprintf_chk@plt+0x3ec0>
  4052c2:	nop    WORD PTR [rax+rax*1+0x0]
  4052c8:	mov    rax,r9
  4052cb:	jmp    4050b0 <__sprintf_chk@plt+0x3ec0>
  4052d0:	mov    r10d,0x4
  4052d6:	jmp    4051b8 <__sprintf_chk@plt+0x3fc8>
  4052db:	nop    DWORD PTR [rax+rax*1+0x0]
  4052e0:	sub    r9d,edi
  4052e3:	jmp    405225 <__sprintf_chk@plt+0x4035>
  4052e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4052f0:	xor    r10d,r10d
  4052f3:	jmp    40518d <__sprintf_chk@plt+0x3f9d>
  4052f8:	nop    DWORD PTR [rax+rax*1+0x0]
  405300:	lea    r8,[rsi+rbx*1+0x4]
  405305:	xor    r10d,r10d
  405308:	jmp    40518d <__sprintf_chk@plt+0x3f9d>
  40530d:	or     esi,0x22000000
  405313:	mov    DWORD PTR [rsp-0xc],esi
  405317:	mov    eax,DWORD PTR [rsp-0xc]
  40531b:	pop    rbx
  40531c:	pop    rbp
  40531d:	pop    r12
  40531f:	pop    r13
  405321:	pop    r14
  405323:	pop    r15
  405325:	ret    
  405326:	mov    DWORD PTR [rsp-0xc],0x22000000
  40532e:	jmp    405117 <__sprintf_chk@plt+0x3f27>
  405333:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40533e:	xchg   ax,ax
  405340:	push   r15
  405342:	push   r14
  405344:	mov    r15,rsi
  405347:	push   r13
  405349:	push   r12
  40534b:	push   rbp
  40534c:	push   rbx
  40534d:	sub    rsp,0x48
  405351:	mov    r11,QWORD PTR [rdi]
  405354:	mov    eax,DWORD PTR [r11+0x48]
  405358:	test   eax,eax
  40535a:	jle    4058ef <__sprintf_chk@plt+0x46ff>
  405360:	lea    rax,[r11+0x50]
  405364:	lea    r13,[rip+0x612d]        # 40b498 <__sprintf_chk@plt+0xa2a8>
  40536b:	lea    r8,[rip+0xddce]        # 413140 <__sprintf_chk@plt+0x11f50>
  405372:	mov    rbx,rsi
  405375:	mov    DWORD PTR [rsp+0x34],0x0
  40537d:	mov    r10,rdi
  405380:	mov    QWORD PTR [rsp+0x38],rax
  405385:	mov    rax,QWORD PTR [rsp+0x38]
  40538a:	movsxd rdx,DWORD PTR [rax+0x18]
  40538e:	mov    r12,QWORD PTR [rax+0x8]
  405392:	mov    rax,QWORD PTR [rax]
  405395:	lea    rax,[rax+rdx*4]
  405399:	cmp    r12,rax
  40539c:	mov    QWORD PTR [rsp],rax
  4053a0:	je     40561a <__sprintf_chk@plt+0x442a>
  4053a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4053b0:	movsxd rbp,DWORD PTR [r12]
  4053b4:	xor    r14d,r14d
  4053b7:	add    r12,0x4
  4053bb:	add    rbp,QWORD PTR [r11+0x8]
  4053bf:	nop
  4053c0:	movzx  esi,BYTE PTR [rbp+0x0]
  4053c4:	xor    eax,eax
  4053c6:	lea    rdx,[rbp+0x1]
  4053ca:	lea    edi,[rsi-0xe9]
  4053d0:	mov    ecx,esi
  4053d2:	cmp    edi,0x11
  4053d5:	ja     4053df <__sprintf_chk@plt+0x41ef>
  4053d7:	movsxd rax,DWORD PTR [r12]
  4053db:	add    r12,0x4
  4053df:	add    ecx,0x17
  4053e2:	cmp    cl,0x16
  4053e5:	ja     4057a8 <__sprintf_chk@plt+0x45b8>
  4053eb:	movzx  ecx,cl
  4053ee:	movsxd rcx,DWORD PTR [r13+rcx*4+0x0]
  4053f3:	add    rcx,r13
  4053f6:	jmp    rcx
  4053f8:	nop    DWORD PTR [rax+rax*1+0x0]
  405400:	test   eax,eax
  405402:	lea    rdx,[rbp+0x2]
  405406:	js     405790 <__sprintf_chk@plt+0x45a0>
  40540c:	mov    ecx,eax
  40540e:	sar    ecx,0x18
  405411:	movsxd rcx,ecx
  405414:	lea    rcx,[rcx+rcx*4]
  405418:	mov    rcx,QWORD PTR [r11+rcx*8+0x50]
  40541d:	lea    rcx,[rcx+rax*4]
  405421:	mov    eax,DWORD PTR [rcx]
  405423:	test   eax,eax
  405425:	js     405818 <__sprintf_chk@plt+0x4628>
  40542b:	add    eax,r15d
  40542e:	mov    ecx,eax
  405430:	mov    edi,eax
  405432:	mov    esi,eax
  405434:	shr    ecx,0x10
  405437:	shr    edi,0x8
  40543a:	shr    eax,0x18
  40543d:	mov    r9d,ecx
  405440:	lea    rcx,[rbx+0x4]
  405444:	mov    rbp,rdx
  405447:	mov    BYTE PTR [rbx],sil
  40544a:	mov    BYTE PTR [rbx+0x1],dil
  40544e:	mov    BYTE PTR [rbx+0x2],r9b
  405452:	mov    BYTE PTR [rbx+0x3],al
  405455:	mov    rbx,rcx
  405458:	jmp    4053c0 <__sprintf_chk@plt+0x41d0>
  40545d:	nop    DWORD PTR [rax]
  405460:	cmp    edi,0x4
  405463:	je     4058ba <__sprintf_chk@plt+0x46ca>
  405469:	mov    BYTE PTR [rbx-0x1],0xeb
  40546d:	mov    r12,rcx
  405470:	mov    BYTE PTR [rbx],al
  405472:	mov    rbp,rdx
  405475:	add    rbx,0x1
  405479:	jmp    4053c0 <__sprintf_chk@plt+0x41d0>
  40547e:	xchg   ax,ax
  405480:	mov    r14,rbx
  405483:	mov    rbp,rdx
  405486:	jmp    4053c0 <__sprintf_chk@plt+0x41d0>
  40548b:	nop    DWORD PTR [rax+rax*1+0x0]
  405490:	test   eax,eax
  405492:	lea    rdx,[rbp+0x2]
  405496:	jns    4054d0 <__sprintf_chk@plt+0x42e0>
  405498:	mov    rcx,QWORD PTR [r11+0x30]
  40549c:	neg    eax
  40549e:	add    r12,0x4
  4054a2:	cdqe   
  4054a4:	mov    eax,DWORD PTR [rcx+rax*8]
  4054a7:	nop    WORD PTR [rax+rax*1+0x0]
  4054b0:	lea    rcx,[rbx+0x4]
  4054b4:	mov    rbp,rdx
  4054b7:	sub    eax,ecx
  4054b9:	mov    edi,eax
  4054bb:	mov    r9d,eax
  4054be:	mov    esi,eax
  4054c0:	shr    edi,0x8
  4054c3:	shr    r9d,0x10
  4054c7:	shr    eax,0x18
  4054ca:	jmp    405447 <__sprintf_chk@plt+0x4257>
  4054cf:	nop
  4054d0:	mov    esi,eax
  4054d2:	lea    rcx,[r12+0x4]
  4054d7:	sar    esi,0x18
  4054da:	movsxd rsi,esi
  4054dd:	lea    rsi,[rsi+rsi*4]
  4054e1:	mov    rsi,QWORD PTR [r11+rsi*8+0x50]
  4054e6:	lea    rsi,[rsi+rax*4]
  4054ea:	mov    eax,DWORD PTR [rsi]
  4054ec:	test   eax,eax
  4054ee:	js     405808 <__sprintf_chk@plt+0x4618>
  4054f4:	mov    edi,DWORD PTR [r12]
  4054f8:	mov    rsi,rbx
  4054fb:	sub    rsi,r15
  4054fe:	add    esi,0x4
  405501:	sub    esi,edi
  405503:	sub    eax,esi
  405505:	test   edi,edi
  405507:	jne    405460 <__sprintf_chk@plt+0x4270>
  40550d:	mov    edi,eax
  40550f:	mov    r9d,eax
  405512:	mov    esi,eax
  405514:	mov    r12,rcx
  405517:	shr    edi,0x8
  40551a:	shr    r9d,0x10
  40551e:	shr    eax,0x18
  405521:	mov    rbp,rdx
  405524:	lea    rcx,[rbx+0x4]
  405528:	jmp    405447 <__sprintf_chk@plt+0x4257>
  40552d:	nop    DWORD PTR [rax]
  405530:	lea    ecx,[rax+0x80]
  405536:	and    ecx,0xffffff00
  40553c:	je     4057b0 <__sprintf_chk@plt+0x45c0>
  405542:	xor    r14d,r14d
  405545:	mov    BYTE PTR [rbx],al
  405547:	sar    eax,0x8
  40554a:	mov    rbp,rdx
  40554d:	mov    BYTE PTR [rbx+0x1],al
  405550:	add    rbx,0x2
  405554:	jmp    4053c0 <__sprintf_chk@plt+0x41d0>
  405559:	nop    DWORD PTR [rax+0x0]
  405560:	test   eax,eax
  405562:	lea    rdi,[rbp+0x2]
  405566:	movzx  edx,BYTE PTR [rbp+0x1]
  40556a:	lea    esi,[rax-0x1]
  40556d:	je     405591 <__sprintf_chk@plt+0x43a1>
  40556f:	lea    rcx,[rbx+rsi*1+0x1]
  405574:	mov    rax,rbx
  405577:	nop    WORD PTR [rax+rax*1+0x0]
  405580:	add    rax,0x1
  405584:	mov    BYTE PTR [rax-0x1],dl
  405587:	cmp    rax,rcx
  40558a:	jne    405580 <__sprintf_chk@plt+0x4390>
  40558c:	lea    rbx,[rbx+rsi*1+0x1]
  405591:	mov    rbp,rdi
  405594:	jmp    4053c0 <__sprintf_chk@plt+0x41d0>
  405599:	nop    DWORD PTR [rax+0x0]
  4055a0:	movzx  edx,BYTE PTR [rbp+0x1]
  4055a4:	mov    rax,rbx
  4055a7:	lea    rcx,[rbp+0x2]
  4055ab:	sub    rax,r15
  4055ae:	test   rax,rdx
  4055b1:	je     4055cb <__sprintf_chk@plt+0x43db>
  4055b3:	nop    DWORD PTR [rax+rax*1+0x0]
  4055b8:	add    rbx,0x1
  4055bc:	mov    BYTE PTR [rbx-0x1],0x90
  4055c0:	mov    rax,rbx
  4055c3:	sub    rax,r15
  4055c6:	test   rax,rdx
  4055c9:	jne    4055b8 <__sprintf_chk@plt+0x43c8>
  4055cb:	mov    rbp,rcx
  4055ce:	jmp    4053c0 <__sprintf_chk@plt+0x41d0>
  4055d3:	nop    DWORD PTR [rax+rax*1+0x0]
  4055d8:	movzx  esi,BYTE PTR [rbp+0x1]
  4055dc:	lea    rcx,[rbp+0x2]
  4055e0:	cmp    esi,0x9
  4055e3:	mov    rdx,rsi
  4055e6:	jle    4055cb <__sprintf_chk@plt+0x43db>
  4055e8:	cmp    BYTE PTR [rbp+0x2],0xf2
  4055ec:	mov    rsi,QWORD PTR [r11+0x30]
  4055f0:	lea    rdx,[rsi+rdx*8]
  4055f4:	je     4058da <__sprintf_chk@plt+0x46ea>
  4055fa:	add    rax,r15
  4055fd:	mov    rbp,rcx
  405600:	mov    QWORD PTR [rdx],rax
  405603:	jmp    4053c0 <__sprintf_chk@plt+0x41d0>
  405608:	nop    DWORD PTR [rax+rax*1+0x0]
  405610:	cmp    r12,QWORD PTR [rsp]
  405614:	jne    4053b0 <__sprintf_chk@plt+0x41c0>
  40561a:	add    DWORD PTR [rsp+0x34],0x1
  40561f:	add    QWORD PTR [rsp+0x38],0x28
  405625:	mov    eax,DWORD PTR [rsp+0x34]
  405629:	cmp    DWORD PTR [r11+0x48],eax
  40562d:	jg     405385 <__sprintf_chk@plt+0x4195>
  405633:	add    r15,QWORD PTR [r11+0x40]
  405637:	xor    eax,eax
  405639:	cmp    rbx,r15
  40563c:	setne  al
  40563f:	add    rsp,0x48
  405643:	pop    rbx
  405644:	shl    eax,0x19
  405647:	pop    rbp
  405648:	pop    r12
  40564a:	pop    r13
  40564c:	pop    r14
  40564e:	pop    r15
  405650:	ret    
  405651:	nop    DWORD PTR [rax+0x0]
  405658:	movzx  esi,BYTE PTR [rbp+0x1]
  40565c:	add    rbp,0x2
  405660:	mov    BYTE PTR [rbx],sil
  405663:	add    rbx,0x1
  405667:	jmp    4053c0 <__sprintf_chk@plt+0x41d0>
  40566c:	nop    DWORD PTR [rax+0x0]
  405670:	mov    eax,DWORD PTR [r10+0x44]
  405674:	movzx  r9d,BYTE PTR [rbp+0x1]
  405679:	movzx  ecx,BYTE PTR [rbp+0x2]
  40567d:	cmp    eax,0xc7
  405682:	jg     4058f7 <__sprintf_chk@plt+0x4707>
  405688:	mov    esi,DWORD PTR [r8+rcx*4]
  40568c:	test   esi,esi
  40568e:	js     40583e <__sprintf_chk@plt+0x464e>
  405694:	movsxd rdx,eax
  405697:	mov    rcx,rbx
  40569a:	sub    rcx,QWORD PTR [r10+0x28]
  40569e:	lea    rdx,[rdx+rdx*2]
  4056a2:	add    eax,0x1
  4056a5:	add    rbp,0x3
  4056a9:	xor    edi,edi
  4056ab:	lea    rdx,[r10+rdx*4]
  4056af:	mov    DWORD PTR [rdx+0x90],ecx
  4056b5:	mov    DWORD PTR [rdx+0x94],esi
  4056bb:	lea    rcx,[rbx+0x4]
  4056bf:	mov    DWORD PTR [rdx+0x98],r9d
  4056c6:	xor    esi,esi
  4056c8:	mov    DWORD PTR [r10+0x44],eax
  4056cc:	xor    r9d,r9d
  4056cf:	xor    eax,eax
  4056d1:	jmp    405447 <__sprintf_chk@plt+0x4257>
  4056d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4056e0:	lea    ecx,[rax+0x80]
  4056e6:	and    ecx,0xffffff00
  4056ec:	je     4057b0 <__sprintf_chk@plt+0x45c0>
  4056f2:	mov    ecx,eax
  4056f4:	mov    edi,eax
  4056f6:	mov    esi,eax
  4056f8:	shr    ecx,0x10
  4056fb:	shr    edi,0x8
  4056fe:	shr    eax,0x18
  405701:	mov    r9d,ecx
  405704:	mov    rbp,rdx
  405707:	xor    r14d,r14d
  40570a:	lea    rcx,[rbx+0x4]
  40570e:	jmp    405447 <__sprintf_chk@plt+0x4257>
  405713:	nop    DWORD PTR [rax+rax*1+0x0]
  405718:	movzx  ecx,BYTE PTR [rbp+0x1]
  40571c:	test   r14,r14
  40571f:	cmove  r14,rbx
  405723:	add    ecx,0x12
  405726:	cmp    cl,0x1
  405729:	mov    ecx,0x0
  40572e:	cmovbe rcx,r14
  405732:	test   eax,eax
  405734:	jne    4057d0 <__sprintf_chk@plt+0x45e0>
  40573a:	movzx  esi,BYTE PTR [r14-0x1]
  40573f:	mov    edi,esi
  405741:	and    edi,0x7
  405744:	cmp    dil,0x4
  405748:	je     4058e3 <__sprintf_chk@plt+0x46f3>
  40574e:	cmp    dil,0x5
  405752:	je     405825 <__sprintf_chk@plt+0x4635>
  405758:	add    esi,0xffffff80
  40575b:	mov    rbp,rdx
  40575e:	mov    BYTE PTR [r14-0x1],sil
  405762:	mov    r14,rcx
  405765:	jmp    4053c0 <__sprintf_chk@plt+0x41d0>
  40576a:	nop    WORD PTR [rax+rax*1+0x0]
  405770:	movzx  ecx,BYTE PTR [rbp+0x1]
  405774:	lea    edx,[rax*8+0x0]
  40577b:	cmp    ecx,0x2
  40577e:	cmovge eax,edx
  405781:	add    rbp,0x2
  405785:	or     BYTE PTR [rbx-0x1],al
  405788:	jmp    4053c0 <__sprintf_chk@plt+0x41d0>
  40578d:	nop    DWORD PTR [rax]
  405790:	mov    rcx,QWORD PTR [r11+0x30]
  405794:	neg    eax
  405796:	cdqe   
  405798:	mov    rax,QWORD PTR [rcx+rax*8]
  40579c:	jmp    40542e <__sprintf_chk@plt+0x423e>
  4057a1:	nop    DWORD PTR [rax+0x0]
  4057a8:	mov    rbp,rdx
  4057ab:	jmp    405660 <__sprintf_chk@plt+0x4470>
  4057b0:	test   r14,r14
  4057b3:	mov    rbp,rdx
  4057b6:	cmove  r14,rbx
  4057ba:	add    rbx,0x1
  4057be:	add    BYTE PTR [r14-0x2],0x2
  4057c3:	mov    BYTE PTR [rbx-0x1],al
  4057c6:	xor    r14d,r14d
  4057c9:	jmp    4053c0 <__sprintf_chk@plt+0x41d0>
  4057ce:	xchg   ax,ax
  4057d0:	lea    esi,[rax+0x80]
  4057d6:	and    esi,0xffffff00
  4057dc:	je     405820 <__sprintf_chk@plt+0x4630>
  4057de:	mov    r14d,eax
  4057e1:	mov    edi,eax
  4057e3:	mov    esi,eax
  4057e5:	shr    r14d,0x10
  4057e9:	shr    edi,0x8
  4057ec:	shr    eax,0x18
  4057ef:	mov    r9d,r14d
  4057f2:	mov    rbp,rdx
  4057f5:	mov    r14,rcx
  4057f8:	lea    rcx,[rbx+0x4]
  4057fc:	jmp    405447 <__sprintf_chk@plt+0x4257>
  405801:	nop    DWORD PTR [rax+0x0]
  405808:	mov    eax,DWORD PTR [rsi+0x4]
  40580b:	mov    r12,rcx
  40580e:	jmp    4054b0 <__sprintf_chk@plt+0x42c0>
  405813:	nop    DWORD PTR [rax+rax*1+0x0]
  405818:	mov    eax,DWORD PTR [rcx+0x4]
  40581b:	jmp    40542e <__sprintf_chk@plt+0x423e>
  405820:	movzx  esi,BYTE PTR [r14-0x1]
  405825:	sub    esi,0x40
  405828:	mov    rbp,rdx
  40582b:	add    rbx,0x1
  40582f:	mov    BYTE PTR [r14-0x1],sil
  405833:	mov    BYTE PTR [rbx-0x1],al
  405836:	mov    r14,rcx
  405839:	jmp    4053c0 <__sprintf_chk@plt+0x41d0>
  40583e:	movsxd rax,DWORD PTR [r10+0x48]
  405842:	mov    rdx,QWORD PTR [r10+0x60]
  405846:	lea    rdi,[rip+0xcd93]        # 4125e0 <__sprintf_chk@plt+0x113f0>
  40584d:	lea    rsi,[rip+0x38c1]        # 409115 <__sprintf_chk@plt+0x7f25>
  405854:	mov    QWORD PTR [rsp+0x28],r11
  405859:	mov    DWORD PTR [rsp+0x30],r9d
  40585e:	mov    QWORD PTR [rsp+0x20],r8
  405863:	mov    QWORD PTR [rsp+0x18],rcx
  405868:	mov    QWORD PTR [rsp+0x10],r10
  40586d:	mov    DWORD PTR [r8+rcx*4],eax
  405871:	lea    rax,[rdx+rax*8]
  405875:	mov    rdx,QWORD PTR [rdi+rcx*8]
  405879:	mov    edi,DWORD PTR [r10+0x8]
  40587d:	mov    QWORD PTR [rsp+0x8],rax
  405882:	call   404400 <__sprintf_chk@plt+0x3210>
  405887:	mov    r10,QWORD PTR [rsp+0x10]
  40588c:	mov    rdx,QWORD PTR [rsp+0x8]
  405891:	mov    rcx,QWORD PTR [rsp+0x18]
  405896:	mov    r8,QWORD PTR [rsp+0x20]
  40589b:	mov    r11,QWORD PTR [rsp+0x28]
  4058a0:	mov    r9d,DWORD PTR [rsp+0x30]
  4058a5:	mov    QWORD PTR [rdx],rax
  4058a8:	add    DWORD PTR [r10+0x48],0x1
  4058ad:	mov    eax,DWORD PTR [r10+0x44]
  4058b1:	mov    esi,DWORD PTR [r8+rcx*4]
  4058b5:	jmp    405694 <__sprintf_chk@plt+0x44a4>
  4058ba:	movzx  edi,BYTE PTR [rbx-0x1]
  4058be:	sub    rbx,0x1
  4058c2:	mov    r12,rcx
  4058c5:	mov    rbp,rdx
  4058c8:	lea    esi,[rdi-0x10]
  4058cb:	mov    BYTE PTR [rbx-0x1],sil
  4058cf:	mov    BYTE PTR [rbx],al
  4058d1:	add    rbx,0x1
  4058d5:	jmp    4053c0 <__sprintf_chk@plt+0x41d0>
  4058da:	movsxd rax,DWORD PTR [r12]
  4058de:	jmp    4055fa <__sprintf_chk@plt+0x440a>
  4058e3:	movzx  edi,BYTE PTR [r14]
  4058e7:	and    edi,0x7
  4058ea:	jmp    40574e <__sprintf_chk@plt+0x455e>
  4058ef:	mov    rbx,rsi
  4058f2:	jmp    405633 <__sprintf_chk@plt+0x4443>
  4058f7:	mov    rax,QWORD PTR [rip+0xd6f2]        # 412ff0 <__sprintf_chk@plt+0x11e00>
  4058fe:	lea    rdi,[rip+0x4ccb]        # 40a5d0 <__sprintf_chk@plt+0x93e0>
  405905:	mov    edx,0x37
  40590a:	mov    esi,0x1
  40590f:	mov    rcx,QWORD PTR [rax]
  405912:	call   4011b0 <fwrite@plt>
  405917:	mov    edi,0x1
  40591c:	call   4011a0 <exit@plt>
  405921:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40592c:	nop    DWORD PTR [rax+0x0]
  405930:	mov    rax,QWORD PTR [rdi]
  405933:	mov    esi,esi
  405935:	lea    rdx,[rsi*4+0x0]
  40593d:	cmp    rdx,QWORD PTR [rax+0x28]
  405941:	jae    405980 <__sprintf_chk@plt+0x4790>
  405943:	mov    rdx,QWORD PTR [rax+0x20]
  405947:	mov    edx,DWORD PTR [rdx+rsi*4]
  40594a:	test   edx,edx
  40594c:	js     405960 <__sprintf_chk@plt+0x4770>
  40594e:	setne  al
  405951:	movzx  eax,al
  405954:	sub    eax,0x2
  405957:	ret    
  405958:	nop    DWORD PTR [rax+rax*1+0x0]
  405960:	neg    edx
  405962:	mov    ecx,edx
  405964:	movsxd rdx,edx
  405967:	sar    ecx,0x18
  40596a:	movsxd rcx,ecx
  40596d:	lea    rcx,[rcx+rcx*4]
  405971:	mov    rax,QWORD PTR [rax+rcx*8+0x50]
  405976:	mov    eax,DWORD PTR [rax+rdx*4]
  405979:	ret    
  40597a:	nop    WORD PTR [rax+rax*1+0x0]
  405980:	mov    eax,0xfffffffe
  405985:	ret    
  405986:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405990:	mov    rdi,QWORD PTR [rdi]
  405993:	mov    eax,DWORD PTR [rdi+0x4c]
  405996:	test   eax,eax
  405998:	jne    405a01 <__sprintf_chk@plt+0x4811>
  40599a:	mov    rcx,QWORD PTR [rdi+0x10]
  40599e:	mov    edx,0x1
  4059a3:	nop    DWORD PTR [rax+rax*1+0x0]
  4059a8:	mov    r9d,DWORD PTR [rcx+rdx*4]
  4059ac:	test   r9d,r9d
  4059af:	jg     405a08 <__sprintf_chk@plt+0x4818>
  4059b1:	mov    DWORD PTR [rcx+rdx*4],0x0
  4059b8:	add    rdx,0x1
  4059bc:	cmp    rdx,0xa
  4059c0:	jne    4059a8 <__sprintf_chk@plt+0x47b8>
  4059c2:	mov    edx,DWORD PTR [rdi+0x4c]
  4059c5:	test   edx,edx
  4059c7:	jne    4059ff <__sprintf_chk@plt+0x480f>
  4059c9:	test   esi,esi
  4059cb:	js     4059ff <__sprintf_chk@plt+0x480f>
  4059cd:	movsxd rsi,esi
  4059d0:	mov    rdx,QWORD PTR [rdi+0x38]
  4059d4:	lea    rcx,[rsi+rsi*4]
  4059d8:	lea    rcx,[rdi+rcx*8+0x50]
  4059dd:	cmp    rdx,rcx
  4059e0:	je     405a01 <__sprintf_chk@plt+0x4811>
  4059e2:	lea    rax,[rdi+0x50]
  4059e6:	sub    rdx,rax
  4059e9:	mov    rax,rdx
  4059ec:	sar    rax,0x3
  4059f0:	imul   eax,eax,0xcccccccd
  4059f6:	or     eax,0x3000000
  4059fb:	mov    DWORD PTR [rdi+0x4c],eax
  4059fe:	ret    
  4059ff:	mov    eax,edx
  405a01:	repz ret 
  405a03:	nop    DWORD PTR [rax+rax*1+0x0]
  405a08:	mov    eax,edx
  405a0a:	or     eax,0x21000000
  405a0f:	mov    DWORD PTR [rdi+0x4c],eax
  405a12:	ret    
  405a13:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  405a1e:	xchg   ax,ax
  405a20:	push   rbx
  405a21:	mov    rcx,QWORD PTR [rdi+0x10]
  405a25:	mov    rax,rsi
  405a28:	mov    rbx,rdx
  405a2b:	mov    esi,0x1
  405a30:	mov    rdi,rax
  405a33:	call   4011b0 <fwrite@plt>
  405a38:	cmp    rbx,rax
  405a3b:	jne    405a3f <__sprintf_chk@plt+0x484f>
  405a3d:	pop    rbx
  405a3e:	ret    
  405a3f:	call   401040 <__errno_location@plt>
  405a44:	mov    edi,DWORD PTR [rax]
  405a46:	call   4011d0 <strerror@plt>
  405a4b:	mov    rcx,rax
  405a4e:	mov    rax,QWORD PTR [rip+0xd59b]        # 412ff0 <__sprintf_chk@plt+0x11e00>
  405a55:	lea    rdx,[rip+0x4bac]        # 40a608 <__sprintf_chk@plt+0x9418>
  405a5c:	mov    esi,0x1
  405a61:	mov    rdi,QWORD PTR [rax]
  405a64:	xor    eax,eax
  405a66:	call   4011c0 <__fprintf_chk@plt>
  405a6b:	mov    edi,0x1
  405a70:	call   4011a0 <exit@plt>
  405a75:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405a7f:	nop
  405a80:	push   rbp
  405a81:	push   rbx
  405a82:	mov    rbp,rsi
  405a85:	mov    rbx,rdx
  405a88:	sub    rsp,0x18
  405a8c:	cmp    edi,0x1
  405a8f:	je     405b08 <__sprintf_chk@plt+0x4918>
  405a91:	jb     405ac0 <__sprintf_chk@plt+0x48d0>
  405a93:	cmp    edi,0x2
  405a96:	jne    405afd <__sprintf_chk@plt+0x490d>
  405a98:	mov    rdi,QWORD PTR [rbp+0x0]
  405a9c:	add    rsp,0x18
  405aa0:	mov    r9,rdx
  405aa3:	pop    rbx
  405aa4:	pop    rbp
  405aa5:	mov    r8,rdx
  405aa8:	mov    rcx,rdx
  405aab:	lea    rdx,[rip+0x956e]        # 40f020 <__sprintf_chk@plt+0xde30>
  405ab2:	mov    esi,0x1
  405ab7:	xor    eax,eax
  405ab9:	jmp    4011c0 <__fprintf_chk@plt>
  405abe:	xchg   ax,ax
  405ac0:	lea    rdx,[rip+0x93fc]        # 40eec3 <__sprintf_chk@plt+0xdcd3>
  405ac7:	lea    rax,[rip+0x93ec]        # 40eeba <__sprintf_chk@plt+0xdcca>
  405ace:	test   r8d,r8d
  405ad1:	push   rbx
  405ad2:	push   rcx
  405ad3:	mov    r9,rbx
  405ad6:	cmove  rax,rdx
  405ada:	push   rbx
  405adb:	lea    rdx,[rip+0x94d6]        # 40efb8 <__sprintf_chk@plt+0xddc8>
  405ae2:	push   rax
  405ae3:	mov    rdi,QWORD PTR [rbp+0x0]
  405ae7:	mov    r8,rbx
  405aea:	mov    rcx,rbx
  405aed:	mov    esi,0x1
  405af2:	xor    eax,eax
  405af4:	call   4011c0 <__fprintf_chk@plt>
  405af9:	add    rsp,0x20
  405afd:	add    rsp,0x18
  405b01:	pop    rbx
  405b02:	pop    rbp
  405b03:	ret    
  405b04:	nop    DWORD PTR [rax+0x0]
  405b08:	mov    rdi,QWORD PTR [rbp+0x0]
  405b0c:	mov    rcx,rdx
  405b0f:	lea    rdx,[rip+0x93b4]        # 40eeca <__sprintf_chk@plt+0xdcda>
  405b16:	xor    eax,eax
  405b18:	mov    esi,0x1
  405b1d:	mov    DWORD PTR [rsp+0xc],r8d
  405b22:	call   4011c0 <__fprintf_chk@plt>
  405b27:	mov    r8d,DWORD PTR [rsp+0xc]
  405b2c:	test   r8d,r8d
  405b2f:	jne    405b58 <__sprintf_chk@plt+0x4968>
  405b31:	mov    rdi,QWORD PTR [rbp+0x0]
  405b35:	add    rsp,0x18
  405b39:	mov    rcx,rbx
  405b3c:	pop    rbx
  405b3d:	pop    rbp
  405b3e:	lea    rdx,[rip+0x9392]        # 40eed7 <__sprintf_chk@plt+0xdce7>
  405b45:	mov    esi,0x1
  405b4a:	xor    eax,eax
  405b4c:	jmp    4011c0 <__fprintf_chk@plt>
  405b51:	nop    DWORD PTR [rax+0x0]
  405b58:	mov    rdi,QWORD PTR [rbp+0x0]
  405b5c:	lea    rdx,[rip+0x9495]        # 40eff8 <__sprintf_chk@plt+0xde08>
  405b63:	mov    rcx,rbx
  405b66:	mov    esi,0x1
  405b6b:	xor    eax,eax
  405b6d:	call   4011c0 <__fprintf_chk@plt>
  405b72:	jmp    405b31 <__sprintf_chk@plt+0x4941>
  405b74:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  405b7f:	nop
  405b80:	push   r15
  405b82:	push   r14
  405b84:	push   r13
  405b86:	push   r12
  405b88:	mov    r12,rdi
  405b8b:	push   rbp
  405b8c:	push   rbx
  405b8d:	sub    rsp,0x18
  405b91:	test   edx,edx
  405b93:	mov    DWORD PTR [rsp+0xc],edx
  405b97:	jle    405c20 <__sprintf_chk@plt+0x4a30>
  405b9d:	mov    eax,DWORD PTR [rsp+0xc]
  405ba1:	mov    rbp,rsi
  405ba4:	mov    rbx,rsi
  405ba7:	lea    r14,[rip+0x9338]        # 40eee6 <__sprintf_chk@plt+0xdcf6>
  405bae:	sub    eax,0x1
  405bb1:	lea    r13,[rsi+rax*1+0x1]
  405bb6:	jmp    405be0 <__sprintf_chk@plt+0x49f0>
  405bb8:	nop    DWORD PTR [rax+rax*1+0x0]
  405bc0:	mov    rdi,QWORD PTR [r12]
  405bc4:	lea    rdx,[rip+0x9311]        # 40eedc <__sprintf_chk@plt+0xdcec>
  405bcb:	mov    esi,0x1
  405bd0:	xor    eax,eax
  405bd2:	call   4011c0 <__fprintf_chk@plt>
  405bd7:	add    rbx,0x1
  405bdb:	cmp    rbx,r13
  405bde:	je     405c20 <__sprintf_chk@plt+0x4a30>
  405be0:	mov    eax,ebx
  405be2:	movzx  ecx,BYTE PTR [rbx]
  405be5:	sub    eax,ebp
  405be7:	and    eax,0xf
  405bea:	mov    r15d,eax
  405bed:	je     405bc0 <__sprintf_chk@plt+0x49d0>
  405bef:	mov    rdi,QWORD PTR [r12]
  405bf3:	xor    eax,eax
  405bf5:	mov    rdx,r14
  405bf8:	mov    esi,0x1
  405bfd:	call   4011c0 <__fprintf_chk@plt>
  405c02:	cmp    r15d,0xf
  405c06:	jne    405bd7 <__sprintf_chk@plt+0x49e7>
  405c08:	mov    rsi,QWORD PTR [r12]
  405c0c:	mov    edi,0xa
  405c11:	add    rbx,0x1
  405c15:	call   401120 <putc@plt>
  405c1a:	cmp    rbx,r13
  405c1d:	jne    405be0 <__sprintf_chk@plt+0x49f0>
  405c1f:	nop
  405c20:	test   BYTE PTR [rsp+0xc],0xf
  405c25:	jne    405c40 <__sprintf_chk@plt+0x4a50>
  405c27:	add    rsp,0x18
  405c2b:	pop    rbx
  405c2c:	pop    rbp
  405c2d:	pop    r12
  405c2f:	pop    r13
  405c31:	pop    r14
  405c33:	pop    r15
  405c35:	ret    
  405c36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405c40:	mov    rsi,QWORD PTR [r12]
  405c44:	add    rsp,0x18
  405c48:	mov    edi,0xa
  405c4d:	pop    rbx
  405c4e:	pop    rbp
  405c4f:	pop    r12
  405c51:	pop    r13
  405c53:	pop    r14
  405c55:	pop    r15
  405c57:	jmp    401120 <putc@plt>
  405c5c:	nop    DWORD PTR [rax+0x0]
  405c60:	push   r15
  405c62:	push   r14
  405c64:	mov    r15,rdi
  405c67:	push   r13
  405c69:	push   r12
  405c6b:	lea    rdx,[rip+0x927c]        # 40eeee <__sprintf_chk@plt+0xdcfe>
  405c72:	push   rbp
  405c73:	push   rbx
  405c74:	mov    esi,0x1
  405c79:	xor    eax,eax
  405c7b:	sub    rsp,0x38
  405c7f:	mov    rcx,QWORD PTR [rdi+0x88]
  405c86:	mov    rdi,QWORD PTR [rdi+0x10]
  405c8a:	call   4011c0 <__fprintf_chk@plt>
  405c8f:	mov    rcx,QWORD PTR [r15+0x10]
  405c93:	lea    rdi,[rip+0x926e]        # 40ef08 <__sprintf_chk@plt+0xdd18>
  405c9a:	mov    edx,0x7
  405c9f:	mov    esi,0x1
  405ca4:	call   4011b0 <fwrite@plt>
  405ca9:	mov    edi,DWORD PTR [r15+0x8]
  405cad:	lea    rax,[r15+0x10]
  405cb1:	mov    QWORD PTR [rsp],rax
  405cb5:	cmp    edi,0x1
  405cb8:	jbe    406083 <__sprintf_chk@plt+0x4e93>
  405cbe:	cmp    edi,0x2
  405cc1:	je     406021 <__sprintf_chk@plt+0x4e31>
  405cc7:	mov    rdx,QWORD PTR [r15+0x70]
  405ccb:	lea    rsi,[r15+0x10]
  405ccf:	xor    r8d,r8d
  405cd2:	xor    ecx,ecx
  405cd4:	call   405a80 <__sprintf_chk@plt+0x4890>
  405cd9:	cmp    DWORD PTR [r15+0x8],0x2
  405cde:	je     405cfa <__sprintf_chk@plt+0x4b0a>
  405ce0:	mov    rcx,QWORD PTR [r15+0x10]
  405ce4:	lea    rdi,[rip+0x923f]        # 40ef2a <__sprintf_chk@plt+0xdd3a>
  405ceb:	mov    edx,0x9
  405cf0:	mov    esi,0x1
  405cf5:	call   4011b0 <fwrite@plt>
  405cfa:	mov    edx,DWORD PTR [r15+0x40]
  405cfe:	xor    ecx,ecx
  405d00:	xor    r13d,r13d
  405d03:	mov    DWORD PTR [rsp+0x24],0x0
  405d0b:	mov    r14,r15
  405d0e:	test   edx,edx
  405d10:	jle    405ef3 <__sprintf_chk@plt+0x4d03>
  405d16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405d20:	mov    rdx,QWORD PTR [r14+0x58]
  405d24:	mov    edi,DWORD PTR [r14+0x8]
  405d28:	mov    r8d,0x1
  405d2e:	mov    rsi,QWORD PTR [rsp]
  405d32:	lea    rax,[rdx+rcx*1]
  405d36:	add    rcx,0x10
  405d3a:	mov    QWORD PTR [rsp+0x28],rcx
  405d3f:	mov    ecx,DWORD PTR [rdx+rcx*1+0x8]
  405d43:	mov    ebp,DWORD PTR [rax+0x8]
  405d46:	mov    rdx,QWORD PTR [rax]
  405d49:	mov    r15d,ecx
  405d4c:	mov    DWORD PTR [rsp+0x20],ecx
  405d50:	sub    r15d,ebp
  405d53:	mov    ecx,r15d
  405d56:	call   405a80 <__sprintf_chk@plt+0x4890>
  405d5b:	cmp    r13d,DWORD PTR [r14+0x44]
  405d5f:	jge    405ec5 <__sprintf_chk@plt+0x4cd5>
  405d65:	movsxd r12,r13d
  405d68:	lea    rax,[r12+r12*2]
  405d6c:	shl    rax,0x2
  405d70:	mov    ebx,DWORD PTR [r14+rax*1+0x90]
  405d78:	cmp    DWORD PTR [rsp+0x20],ebx
  405d7c:	jl     405ec5 <__sprintf_chk@plt+0x4cd5>
  405d82:	lea    r15,[r14+rax*1+0x94]
  405d8a:	lea    rax,[r12*4+0x0]
  405d92:	sub    r12,rax
  405d95:	lea    eax,[r13+0x1]
  405d99:	shl    r12,0x2
  405d9d:	cdqe   
  405d9f:	lea    rax,[rax+rax*2]
  405da3:	shl    rax,0x2
  405da7:	mov    QWORD PTR [rsp+0x8],rax
  405dac:	mov    rax,r12
  405daf:	mov    r12,r15
  405db2:	mov    r15,rax
  405db5:	jmp    405e43 <__sprintf_chk@plt+0x4c53>
  405dba:	nop    WORD PTR [rax+rax*1+0x0]
  405dc0:	cmp    eax,0x1
  405dc3:	jne    405f58 <__sprintf_chk@plt+0x4d68>
  405dc9:	mov    rdi,QWORD PTR [r14+0x10]
  405dcd:	lea    rdx,[rip+0x9224]        # 40eff8 <__sprintf_chk@plt+0xde08>
  405dd4:	mov    rcx,r8
  405dd7:	xor    eax,eax
  405dd9:	mov    esi,0x1
  405dde:	mov    DWORD PTR [rsp+0x18],r11d
  405de3:	mov    QWORD PTR [rsp+0x10],r8
  405de8:	call   4011c0 <__fprintf_chk@plt>
  405ded:	mov    r11d,DWORD PTR [rsp+0x18]
  405df2:	mov    r8,QWORD PTR [rsp+0x10]
  405df7:	mov    rdi,QWORD PTR [r14+0x10]
  405dfb:	test   r11d,r11d
  405dfe:	mov    rcx,r8
  405e01:	je     405e98 <__sprintf_chk@plt+0x4ca8>
  405e07:	lea    rdx,[rip+0x912e]        # 40ef3c <__sprintf_chk@plt+0xdd4c>
  405e0e:	mov    esi,0x1
  405e13:	xor    eax,eax
  405e15:	call   4011c0 <__fprintf_chk@plt>
  405e1a:	add    r13d,0x1
  405e1e:	cmp    DWORD PTR [r14+0x44],r13d
  405e22:	lea    ebp,[rbx+rbp*1+0x4]
  405e26:	jle    405ebd <__sprintf_chk@plt+0x4ccd>
  405e2c:	add    r12,0xc
  405e30:	mov    rcx,QWORD PTR [rsp+0x8]
  405e35:	lea    rax,[r15+r12*1]
  405e39:	mov    ebx,DWORD PTR [rax+rcx*1-0x10]
  405e3d:	cmp    DWORD PTR [rsp+0x20],ebx
  405e41:	jl     405ebd <__sprintf_chk@plt+0x4ccd>
  405e43:	sub    ebx,ebp
  405e45:	cmp    DWORD PTR [r14+0x8],0x2
  405e4a:	jne    405e59 <__sprintf_chk@plt+0x4c69>
  405e4c:	mov    eax,DWORD PTR [r12+0x4]
  405e51:	test   eax,eax
  405e53:	jne    405f68 <__sprintf_chk@plt+0x4d78>
  405e59:	movsxd rsi,ebp
  405e5c:	add    rsi,QWORD PTR [r14+0x28]
  405e60:	mov    rdi,QWORD PTR [rsp]
  405e64:	mov    edx,ebx
  405e66:	call   405b80 <__sprintf_chk@plt+0x4990>
  405e6b:	movsxd rdx,DWORD PTR [r12]
  405e6f:	mov    rax,QWORD PTR [r14+0x60]
  405e73:	mov    r11d,DWORD PTR [r12+0x4]
  405e78:	mov    r8,QWORD PTR [rax+rdx*8]
  405e7c:	mov    eax,DWORD PTR [r14+0x8]
  405e80:	test   eax,eax
  405e82:	jne    405dc0 <__sprintf_chk@plt+0x4bd0>
  405e88:	test   r11d,r11d
  405e8b:	mov    rdi,QWORD PTR [r14+0x10]
  405e8f:	mov    rcx,r8
  405e92:	jne    405e07 <__sprintf_chk@plt+0x4c17>
  405e98:	lea    rdx,[rip+0x90ac]        # 40ef4b <__sprintf_chk@plt+0xdd5b>
  405e9f:	xor    eax,eax
  405ea1:	mov    esi,0x1
  405ea6:	add    r13d,0x1
  405eaa:	lea    ebp,[rbx+rbp*1+0x4]
  405eae:	call   4011c0 <__fprintf_chk@plt>
  405eb3:	cmp    DWORD PTR [r14+0x44],r13d
  405eb7:	jg     405e2c <__sprintf_chk@plt+0x4c3c>
  405ebd:	mov    r15d,DWORD PTR [rsp+0x20]
  405ec2:	sub    r15d,ebp
  405ec5:	movsxd rsi,ebp
  405ec8:	add    rsi,QWORD PTR [r14+0x28]
  405ecc:	mov    rdi,QWORD PTR [rsp]
  405ed0:	mov    edx,r15d
  405ed3:	call   405b80 <__sprintf_chk@plt+0x4990>
  405ed8:	add    DWORD PTR [rsp+0x24],0x1
  405edd:	mov    rcx,QWORD PTR [rsp+0x28]
  405ee2:	mov    eax,DWORD PTR [rsp+0x24]
  405ee6:	cmp    DWORD PTR [r14+0x40],eax
  405eea:	jg     405d20 <__sprintf_chk@plt+0x4b30>
  405ef0:	mov    r15,r14
  405ef3:	mov    rsi,QWORD PTR [r15+0x10]
  405ef7:	mov    edi,0xa
  405efc:	call   4010d0 <fputc@plt>
  405f01:	mov    eax,DWORD PTR [r15+0x8]
  405f05:	cmp    eax,0x1
  405f08:	je     406060 <__sprintf_chk@plt+0x4e70>
  405f0e:	jb     406046 <__sprintf_chk@plt+0x4e56>
  405f14:	cmp    eax,0x2
  405f17:	jne    405f37 <__sprintf_chk@plt+0x4d47>
  405f19:	mov    rcx,QWORD PTR [r15+0x80]
  405f20:	mov    rdi,QWORD PTR [r15+0x10]
  405f24:	lea    rdx,[rip+0x9039]        # 40ef64 <__sprintf_chk@plt+0xdd74>
  405f2b:	mov    esi,0x1
  405f30:	xor    eax,eax
  405f32:	call   4011c0 <__fprintf_chk@plt>
  405f37:	mov    rsi,QWORD PTR [r15+0x10]
  405f3b:	add    rsp,0x38
  405f3f:	mov    edi,0xa
  405f44:	pop    rbx
  405f45:	pop    rbp
  405f46:	pop    r12
  405f48:	pop    r13
  405f4a:	pop    r14
  405f4c:	pop    r15
  405f4e:	jmp    4010d0 <fputc@plt>
  405f53:	nop    DWORD PTR [rax+rax*1+0x0]
  405f58:	mov    rdi,QWORD PTR [r14+0x10]
  405f5c:	mov    rcx,r8
  405f5f:	jmp    405e98 <__sprintf_chk@plt+0x4ca8>
  405f64:	nop    DWORD PTR [rax+0x0]
  405f68:	movsxd rdx,DWORD PTR [r12]
  405f6c:	mov    rax,QWORD PTR [r14+0x60]
  405f70:	movsxd rsi,ebp
  405f73:	add    rsi,QWORD PTR [r14+0x28]
  405f77:	mov    r8,QWORD PTR [rax+rdx*8]
  405f7b:	mov    edx,ebx
  405f7d:	sub    edx,0x1
  405f80:	js     4060a8 <__sprintf_chk@plt+0x4eb8>
  405f86:	movsxd rcx,edx
  405f89:	movzx  eax,BYTE PTR [rsi+rcx*1]
  405f8d:	cmp    al,0xe8
  405f8f:	je     406018 <__sprintf_chk@plt+0x4e28>
  405f95:	cmp    al,0xe9
  405f97:	je     406008 <__sprintf_chk@plt+0x4e18>
  405f99:	lea    edi,[rax-0x80]
  405f9c:	cmp    dil,0xf
  405fa0:	ja     4060a8 <__sprintf_chk@plt+0x4eb8>
  405fa6:	test   edx,edx
  405fa8:	je     4060a8 <__sprintf_chk@plt+0x4eb8>
  405fae:	cmp    BYTE PTR [rsi+rcx*1-0x1],0xf
  405fb3:	jne    4060a8 <__sprintf_chk@plt+0x4eb8>
  405fb9:	add    eax,0xffffff80
  405fbc:	lea    rdi,[rip+0xcc7d]        # 412c40 <__sprintf_chk@plt+0x11a50>
  405fc3:	lea    edx,[rbx-0x2]
  405fc6:	cdqe   
  405fc8:	mov    rcx,QWORD PTR [rdi+rax*8]
  405fcc:	mov    rdi,QWORD PTR [rsp]
  405fd0:	mov    QWORD PTR [rsp+0x18],r8
  405fd5:	mov    QWORD PTR [rsp+0x10],rcx
  405fda:	call   405b80 <__sprintf_chk@plt+0x4990>
  405fdf:	mov    rdi,QWORD PTR [r14+0x10]
  405fe3:	mov    r8,QWORD PTR [rsp+0x18]
  405fe8:	lea    rdx,[rip+0x8f45]        # 40ef34 <__sprintf_chk@plt+0xdd44>
  405fef:	mov    rcx,QWORD PTR [rsp+0x10]
  405ff4:	mov    esi,0x1
  405ff9:	xor    eax,eax
  405ffb:	call   4011c0 <__fprintf_chk@plt>
  406000:	jmp    405e1a <__sprintf_chk@plt+0x4c2a>
  406005:	nop    DWORD PTR [rax]
  406008:	lea    rcx,[rip+0x8edb]        # 40eeea <__sprintf_chk@plt+0xdcfa>
  40600f:	jmp    405fcc <__sprintf_chk@plt+0x4ddc>
  406011:	nop    DWORD PTR [rax+0x0]
  406018:	lea    rcx,[rip+0x3be0]        # 409bff <__sprintf_chk@plt+0x8a0f>
  40601f:	jmp    405fcc <__sprintf_chk@plt+0x4ddc>
  406021:	mov    rdi,QWORD PTR [r15+0x10]
  406025:	lea    rdx,[rip+0x8ef2]        # 40ef1e <__sprintf_chk@plt+0xdd2e>
  40602c:	mov    ecx,0x4
  406031:	mov    esi,0x1
  406036:	xor    eax,eax
  406038:	call   4011c0 <__fprintf_chk@plt>
  40603d:	mov    edi,DWORD PTR [r15+0x8]
  406041:	jmp    405cc7 <__sprintf_chk@plt+0x4ad7>
  406046:	mov    rcx,QWORD PTR [r15+0x10]
  40604a:	lea    rdi,[rip+0x9037]        # 40f088 <__sprintf_chk@plt+0xde98>
  406051:	mov    edx,0x27
  406056:	mov    esi,0x1
  40605b:	call   4011b0 <fwrite@plt>
  406060:	mov    rcx,QWORD PTR [r15+0x80]
  406067:	mov    rdi,QWORD PTR [r15+0x10]
  40606b:	lea    rdx,[rip+0x8ee4]        # 40ef56 <__sprintf_chk@plt+0xdd66>
  406072:	mov    esi,0x1
  406077:	xor    eax,eax
  406079:	call   4011c0 <__fprintf_chk@plt>
  40607e:	jmp    405f37 <__sprintf_chk@plt+0x4d47>
  406083:	mov    rdi,QWORD PTR [r15+0x10]
  406087:	lea    rdx,[rip+0x8e82]        # 40ef10 <__sprintf_chk@plt+0xdd20>
  40608e:	mov    ecx,0x4
  406093:	mov    esi,0x1
  406098:	xor    eax,eax
  40609a:	call   4011c0 <__fprintf_chk@plt>
  40609f:	mov    edi,DWORD PTR [r15+0x8]
  4060a3:	jmp    405cc7 <__sprintf_chk@plt+0x4ad7>
  4060a8:	mov    rax,QWORD PTR [rip+0xcf41]        # 412ff0 <__sprintf_chk@plt+0x11e00>
  4060af:	lea    rdx,[rip+0x8f9a]        # 40f050 <__sprintf_chk@plt+0xde60>
  4060b6:	mov    rcx,r8
  4060b9:	mov    esi,0x1
  4060be:	mov    rdi,QWORD PTR [rax]
  4060c1:	xor    eax,eax
  4060c3:	call   4011c0 <__fprintf_chk@plt>
  4060c8:	mov    edi,0x1
  4060cd:	call   4011a0 <exit@plt>
  4060d2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4060dc:	nop    DWORD PTR [rax+0x0]
  4060e0:	push   r15
  4060e2:	push   r14
  4060e4:	mov    r15d,edx
  4060e7:	push   r13
  4060e9:	push   r12
  4060eb:	mov    r12,rdi
  4060ee:	push   rbp
  4060ef:	push   rbx
  4060f0:	mov    rdi,rsi
  4060f3:	mov    ebp,ecx
  4060f5:	mov    r14d,r8d
  4060f8:	mov    r13d,r9d
  4060fb:	sub    rsp,0x38
  4060ff:	mov    rax,QWORD PTR fs:0x28
  406108:	mov    QWORD PTR [rsp+0x28],rax
  40610d:	xor    eax,eax
  40610f:	mov    QWORD PTR [rsp],rsi
  406113:	call   401090 <strlen@plt>
  406118:	mov    rcx,QWORD PTR [rip+0xd0c1]        # 4131e0 <__sprintf_chk@plt+0x11ff0>
  40611f:	mov    rbx,rax
  406122:	mov    rsi,QWORD PTR [rsp]
  406126:	test   rcx,rcx
  406129:	je     406280 <__sprintf_chk@plt+0x5090>
  40612f:	cmp    rax,0x8
  406133:	jbe    4061d8 <__sprintf_chk@plt+0x4fe8>
  406139:	mov    r8,QWORD PTR [rip+0xd098]        # 4131d8 <__sprintf_chk@plt+0x11fe8>
  406140:	mov    rdx,rax
  406143:	mov    QWORD PTR [rsp],rcx
  406147:	mov    DWORD PTR [rsp+0x10],0x0
  40614f:	lea    rdi,[rcx+r8*1]
  406153:	mov    DWORD PTR [rsp+0x14],r8d
  406158:	mov    QWORD PTR [rsp+0x8],r8
  40615d:	call   401150 <memcpy@plt>
  406162:	mov    r8,QWORD PTR [rsp+0x8]
  406167:	mov    rcx,QWORD PTR [rsp]
  40616b:	add    rbx,r8
  40616e:	lea    r8,[rsp+0x10]
  406173:	mov    BYTE PTR [rcx+rbx*1],0x0
  406177:	add    rbx,0x1
  40617b:	mov    QWORD PTR [rip+0xd056],rbx        # 4131d8 <__sprintf_chk@plt+0x11fe8>
  406182:	add    ebp,0x1
  406185:	mov    edx,0x12
  40618a:	mov    rsi,r8
  40618d:	mov    rdi,r12
  406190:	mov    DWORD PTR [rsp+0x18],r15d
  406195:	mov    WORD PTR [rsp+0x1c],bp
  40619a:	mov    WORD PTR [rsp+0x1e],r14w
  4061a0:	mov    BYTE PTR [rsp+0x20],r13b
  4061a5:	mov    BYTE PTR [rsp+0x21],0x0
  4061aa:	call   405a20 <__sprintf_chk@plt+0x4830>
  4061af:	mov    rax,QWORD PTR [rsp+0x28]
  4061b4:	xor    rax,QWORD PTR fs:0x28
  4061bd:	jne    4062bd <__sprintf_chk@plt+0x50cd>
  4061c3:	add    rsp,0x38
  4061c7:	pop    rbx
  4061c8:	pop    rbp
  4061c9:	pop    r12
  4061cb:	pop    r13
  4061cd:	pop    r14
  4061cf:	pop    r15
  4061d1:	ret    
  4061d2:	nop    WORD PTR [rax+rax*1+0x0]
  4061d8:	lea    r8,[rsp+0x10]
  4061dd:	mov    ecx,0x14
  4061e2:	mov    rdx,rax
  4061e5:	mov    rdi,r8
  4061e8:	call   401130 <__memcpy_chk@plt>
  4061ed:	mov    r8,rax
  4061f0:	mov    eax,0x8
  4061f5:	sub    rax,rbx
  4061f8:	add    rbx,r8
  4061fb:	cmp    eax,0x8
  4061fe:	jae    406230 <__sprintf_chk@plt+0x5040>
  406200:	test   al,0x4
  406202:	jne    4062a8 <__sprintf_chk@plt+0x50b8>
  406208:	test   eax,eax
  40620a:	je     406182 <__sprintf_chk@plt+0x4f92>
  406210:	test   al,0x2
  406212:	mov    BYTE PTR [rbx],0x0
  406215:	je     406182 <__sprintf_chk@plt+0x4f92>
  40621b:	mov    edx,eax
  40621d:	xor    eax,eax
  40621f:	mov    WORD PTR [rbx+rdx*1-0x2],ax
  406224:	jmp    406182 <__sprintf_chk@plt+0x4f92>
  406229:	nop    DWORD PTR [rax+0x0]
  406230:	mov    edx,eax
  406232:	mov    QWORD PTR [rbx],0x0
  406239:	mov    QWORD PTR [rbx+rdx*1-0x8],0x0
  406242:	lea    rdx,[rbx+0x8]
  406246:	and    rdx,0xfffffffffffffff8
  40624a:	sub    rbx,rdx
  40624d:	add    eax,ebx
  40624f:	and    eax,0xfffffff8
  406252:	cmp    eax,0x8
  406255:	jb     406182 <__sprintf_chk@plt+0x4f92>
  40625b:	and    eax,0xfffffff8
  40625e:	xor    ecx,ecx
  406260:	mov    esi,ecx
  406262:	add    ecx,0x8
  406265:	cmp    ecx,eax
  406267:	mov    QWORD PTR [rdx+rsi*1],0x0
  40626f:	jb     406260 <__sprintf_chk@plt+0x5070>
  406271:	jmp    406182 <__sprintf_chk@plt+0x4f92>
  406276:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406280:	cmp    rax,0x8
  406284:	jbe    4061af <__sprintf_chk@plt+0x4fbf>
  40628a:	mov    rax,QWORD PTR [rip+0xcf47]        # 4131d8 <__sprintf_chk@plt+0x11fe8>
  406291:	lea    rax,[rbx+rax*1+0x1]
  406296:	mov    QWORD PTR [rip+0xcf3b],rax        # 4131d8 <__sprintf_chk@plt+0x11fe8>
  40629d:	jmp    4061af <__sprintf_chk@plt+0x4fbf>
  4062a2:	nop    WORD PTR [rax+rax*1+0x0]
  4062a8:	mov    edx,eax
  4062aa:	mov    DWORD PTR [rbx],0x0
  4062b0:	mov    DWORD PTR [rbx+rdx*1-0x4],0x0
  4062b8:	jmp    406182 <__sprintf_chk@plt+0x4f92>
  4062bd:	call   4010a0 <__stack_chk_fail@plt>
  4062c2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4062cd:	nop    DWORD PTR [rax]
  4062d0:	push   rbp
  4062d1:	push   rbx
  4062d2:	mov    rbp,rdi
  4062d5:	sub    rsp,0x48
  4062d9:	mov    rax,QWORD PTR fs:0x28
  4062e2:	mov    QWORD PTR [rsp+0x38],rax
  4062e7:	xor    eax,eax
  4062e9:	movsxd rax,edx
  4062ec:	add    edx,0x1
  4062ef:	mov    DWORD PTR [rsp+0x8],0x0
  4062f7:	lea    rax,[rax+rax*4]
  4062fb:	mov    WORD PTR [rsp+0xc],dx
  406300:	mov    edx,0x12
  406305:	mov    BYTE PTR [rsp+0x10],0x3
  40630a:	mov    BYTE PTR [rsp+0x11],0x1
  40630f:	lea    rbx,[rsi+rax*8]
  406313:	mov    rsi,rsp
  406316:	mov    rax,QWORD PTR [rbx]
  406319:	mov    QWORD PTR [rsp],rax
  40631d:	xor    eax,eax
  40631f:	mov    WORD PTR [rsp+0xe],ax
  406324:	call   405a20 <__sprintf_chk@plt+0x4830>
  406329:	mov    eax,DWORD PTR [rbx+0x10]
  40632c:	mov    QWORD PTR [rsp+0x20],0x0
  406335:	lea    rsi,[rsp+0x20]
  40633a:	mov    edx,0x12
  40633f:	mov    rdi,rbp
  406342:	mov    QWORD PTR [rsp+0x28],0x0
  40634b:	mov    DWORD PTR [rsp+0x30],0x0
  406353:	mov    DWORD PTR [rsp+0x20],eax
  406357:	movzx  eax,WORD PTR [rbx+0x20]
  40635b:	mov    WORD PTR [rsp+0x24],ax
  406360:	call   405a20 <__sprintf_chk@plt+0x4830>
  406365:	mov    rax,QWORD PTR [rsp+0x38]
  40636a:	xor    rax,QWORD PTR fs:0x28
  406373:	jne    40637c <__sprintf_chk@plt+0x518c>
  406375:	add    rsp,0x48
  406379:	pop    rbx
  40637a:	pop    rbp
  40637b:	ret    
  40637c:	call   4010a0 <__stack_chk_fail@plt>
  406381:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40638c:	nop    DWORD PTR [rax+0x0]
  406390:	push   r15
  406392:	push   r14
  406394:	mov    ecx,0x14
  406399:	push   r13
  40639b:	push   r12
  40639d:	mov    esi,0x6174
  4063a2:	push   rbp
  4063a3:	push   rbx
  4063a4:	mov    rbx,rdi
  4063a7:	sub    rsp,0x118
  4063ae:	mov    edx,DWORD PTR [rbx+0x44]
  4063b1:	lea    r12,[rsp+0x60]
  4063b6:	mov    rax,QWORD PTR fs:0x28
  4063bf:	mov    QWORD PTR [rsp+0x108],rax
  4063c7:	xor    eax,eax
  4063c9:	mov    rdi,r12
  4063cc:	rep stos QWORD PTR es:[rdi],rax
  4063cf:	mov    rax,QWORD PTR [rbx+0x30]
  4063d3:	mov    WORD PTR [rsp+0x80],dx
  4063db:	movzx  edx,dx
  4063de:	lea    edx,[rdx+rdx*4]
  4063e1:	mov    DWORD PTR [rsp+0x88],0x6164702e
  4063ec:	mov    ecx,0x6
  4063f1:	mov    edi,0x1
  4063f6:	mov    WORD PTR [rsp+0xa8],cx
  4063fe:	mov    DWORD PTR [rsp+0xb0],0x6164782e
  406409:	mov    DWORD PTR [rsp+0x70],eax
  40640d:	add    eax,0xb4
  406412:	mov    WORD PTR [r12+0x54],si
  406418:	mov    DWORD PTR [rsp+0x78],eax
  40641c:	lea    eax,[rax+rdx*2]
  40641f:	mov    edx,0x6174
  406424:	mov    WORD PTR [r12+0x2c],dx
  40642a:	mov    WORD PTR [rsp+0xd0],di
  406432:	lea    edx,[rax+0x18]
  406435:	lea    ebp,[rax+0x7e]
  406438:	mov    DWORD PTR [rsp+0x9c],eax
  40643f:	mov    DWORD PTR [rsp+0x60],0x7865742e
  406447:	mov    BYTE PTR [rsp+0x64],0x74
  40644c:	mov    DWORD PTR [rsp+0xa0],edx
  406453:	lea    edx,[rax+0x54]
  406456:	mov    DWORD PTR [rsp+0x74],0xb4
  40645e:	mov    DWORD PTR [rsp+0x84],0x60500020
  406469:	mov    DWORD PTR [rsp+0x98],0x18
  406474:	mov    DWORD PTR [rsp+0xc4],edx
  40647b:	lea    edx,[rax+0x74]
  40647e:	movabs rax,0x5a2461746164722e
  406488:	mov    DWORD PTR [rsp+0xac],0x40300040
  406493:	mov    DWORD PTR [rsp+0xc0],0x20
  40649e:	mov    DWORD PTR [rsp+0xc8],edx
  4064a5:	mov    DWORD PTR [rsp+0xd4],0x40300040
  4064b0:	mov    QWORD PTR [rsp+0xd8],rax
  4064b8:	mov    rdi,QWORD PTR [rbx+0x80]
  4064bf:	mov    DWORD PTR [rsp+0xec],ebp
  4064c6:	call   401090 <strlen@plt>
  4064cb:	add    eax,0x1
  4064ce:	lea    rsi,[rsp+0x20]
  4064d3:	xor    r10d,r10d
  4064d6:	mov    DWORD PTR [rsp+0xe8],eax
  4064dd:	add    eax,ebp
  4064df:	xor    r11d,r11d
  4064e2:	mov    DWORD PTR [rsp+0x28],eax
  4064e6:	mov    eax,DWORD PTR [rbx+0x48]
  4064e9:	mov    r8d,0xffff8664
  4064ef:	mov    r9d,0x4
  4064f5:	mov    edx,0x14
  4064fa:	mov    rdi,rbx
  4064fd:	mov    WORD PTR [rsp+0x20],r8w
  406503:	mov    WORD PTR [rsp+0x22],r9w
  406509:	mov    ecx,eax
  40650b:	mov    DWORD PTR [rsp+0x8],eax
  40650f:	mov    eax,DWORD PTR [rbx+0x40]
  406512:	mov    WORD PTR [rsp+0x30],r10w
  406518:	mov    WORD PTR [rsp+0x32],r11w
  40651e:	mov    DWORD PTR [rsp+0xfc],0x40300040
  406529:	mov    DWORD PTR [rsp+0x24],0x0
  406531:	lea    eax,[rcx+rax*1+0xb]
  406535:	mov    DWORD PTR [rsp+0x2c],eax
  406539:	call   405a20 <__sprintf_chk@plt+0x4830>
  40653e:	mov    edx,0xa0
  406543:	mov    rsi,r12
  406546:	mov    rdi,rbx
  406549:	call   405a20 <__sprintf_chk@plt+0x4830>
  40654e:	mov    rdx,QWORD PTR [rbx+0x30]
  406552:	mov    rsi,QWORD PTR [rbx+0x28]
  406556:	mov    rdi,rbx
  406559:	call   405a20 <__sprintf_chk@plt+0x4830>
  40655e:	mov    ebp,DWORD PTR [rbx+0x44]
  406561:	test   ebp,ebp
  406563:	jle    4069fd <__sprintf_chk@plt+0x580d>
  406569:	lea    rbp,[rbx+0x90]
  406570:	lea    r14,[rsp+0x14]
  406575:	xor    r15d,r15d
  406578:	nop    DWORD PTR [rax+rax*1+0x0]
  406580:	mov    eax,DWORD PTR [rbp+0x0]
  406583:	mov    edx,0xa
  406588:	mov    rsi,r14
  40658b:	mov    rdi,rbx
  40658e:	mov    DWORD PTR [rsp+0x14],eax
  406592:	mov    eax,DWORD PTR [rbp+0x4]
  406595:	add    eax,0x3
  406598:	cmp    DWORD PTR [rbp+0x8],0x1
  40659c:	mov    DWORD PTR [rsp+0x18],eax
  4065a0:	sbb    eax,eax
  4065a2:	add    r15d,0x1
  4065a6:	add    rbp,0xc
  4065aa:	and    eax,0xfffffffe
  4065ad:	add    eax,0x4
  4065b0:	mov    WORD PTR [rsp+0x1c],ax
  4065b5:	call   405a20 <__sprintf_chk@plt+0x4830>
  4065ba:	cmp    DWORD PTR [rbx+0x44],r15d
  4065be:	jg     406580 <__sprintf_chk@plt+0x5390>
  4065c0:	movsxd rax,DWORD PTR [rbx+0x40]
  4065c4:	lea    r15,[rsp+0x40]
  4065c9:	mov    edx,0xc
  4065ce:	mov    rdi,rbx
  4065d1:	mov    rsi,r15
  4065d4:	shl    rax,0x4
  4065d8:	add    rax,QWORD PTR [rbx+0x58]
  4065dc:	mov    ebp,DWORD PTR [rax-0x8]
  4065df:	mov    DWORD PTR [rsp+0x40],0x0
  4065e7:	mov    DWORD PTR [rsp+0x48],0x0
  4065ef:	mov    DWORD PTR [rsp+0x44],ebp
  4065f3:	call   405a20 <__sprintf_chk@plt+0x4830>
  4065f8:	mov    rax,QWORD PTR [rbx+0x30]
  4065fc:	mov    rsi,r15
  4065ff:	mov    edx,0xc
  406604:	mov    rdi,rbx
  406607:	mov    DWORD PTR [rsp+0x40],ebp
  40660b:	mov    DWORD PTR [rsp+0x48],0x14
  406613:	mov    DWORD PTR [rsp+0x44],eax
  406617:	call   405a20 <__sprintf_chk@plt+0x4830>
  40661c:	mov    r13d,DWORD PTR [rsp+0x8]
  406621:	mov    esi,0x3
  406626:	mov    edx,0xa
  40662b:	mov    WORD PTR [rsp+0x1c],si
  406630:	mov    rdi,rbx
  406633:	mov    rsi,r14
  406636:	mov    DWORD PTR [rsp+0x14],0x0
  40663e:	lea    ebp,[r13+0x8]
  406642:	mov    DWORD PTR [rsp+0x18],ebp
  406646:	call   405a20 <__sprintf_chk@plt+0x4830>
  40664b:	mov    edi,0x3
  406650:	mov    rsi,r14
  406653:	mov    edx,0xa
  406658:	mov    WORD PTR [rsp+0x1c],di
  40665d:	mov    rdi,rbx
  406660:	mov    DWORD PTR [rsp+0x18],ebp
  406664:	mov    DWORD PTR [rsp+0x14],0x4
  40666c:	call   405a20 <__sprintf_chk@plt+0x4830>
  406671:	mov    eax,r13d
  406674:	mov    r8d,0x3
  40667a:	mov    rsi,r14
  40667d:	add    eax,0x5
  406680:	mov    edx,0xa
  406685:	mov    rdi,rbx
  406688:	mov    WORD PTR [rsp+0x1c],r8w
  40668e:	mov    DWORD PTR [rsp+0x18],eax
  406692:	mov    DWORD PTR [rsp+0xc],eax
  406696:	mov    DWORD PTR [rsp+0x14],0x8
  40669e:	call   405a20 <__sprintf_chk@plt+0x4830>
  4066a3:	mov    r9d,0x3
  4066a9:	mov    rsi,r14
  4066ac:	mov    edx,0xa
  4066b1:	mov    rdi,rbx
  4066b4:	mov    WORD PTR [rsp+0x1c],r9w
  4066ba:	mov    DWORD PTR [rsp+0x18],ebp
  4066be:	mov    DWORD PTR [rsp+0x14],0xc
  4066c6:	call   405a20 <__sprintf_chk@plt+0x4830>
  4066cb:	mov    r10d,0x3
  4066d1:	mov    rsi,r14
  4066d4:	mov    edx,0xa
  4066d9:	mov    rdi,rbx
  4066dc:	mov    WORD PTR [rsp+0x1c],r10w
  4066e2:	mov    DWORD PTR [rsp+0x18],ebp
  4066e6:	mov    DWORD PTR [rsp+0x14],0x10
  4066ee:	mov    ebp,0x19
  4066f3:	call   405a20 <__sprintf_chk@plt+0x4830>
  4066f8:	mov    eax,DWORD PTR [rsp+0xc]
  4066fc:	mov    r11d,0x3
  406702:	mov    rsi,r14
  406705:	mov    edx,0xa
  40670a:	mov    rdi,rbx
  40670d:	mov    WORD PTR [rsp+0x1c],r11w
  406713:	mov    DWORD PTR [rsp+0x14],0x14
  40671b:	mov    DWORD PTR [rsp+0x18],eax
  40671f:	call   405a20 <__sprintf_chk@plt+0x4830>
  406724:	mov    eax,0x5
  406729:	xor    edx,edx
  40672b:	xor    esi,esi
  40672d:	mov    WORD PTR [rsp+0x42],ax
  406732:	mov    eax,0x4200
  406737:	mov    edi,0x1
  40673c:	mov    WORD PTR [rsp+0x44],ax
  406741:	mov    eax,0x3000
  406746:	xor    ecx,ecx
  406748:	mov    WORD PTR [rsp+0x46],ax
  40674d:	mov    eax,0x6000
  406752:	mov    r8d,0x1504
  406758:	mov    WORD PTR [rsp+0x48],ax
  40675d:	mov    eax,0x7000
  406762:	mov    r9d,0x300
  406768:	mov    r10d,0x200
  40676e:	mov    r11d,0x3000
  406774:	mov    WORD PTR [rsp+0x40],bp
  406779:	mov    WORD PTR [rsp+0x4a],ax
  40677e:	mov    WORD PTR [rsp+0x4e],dx
  406783:	mov    eax,0x5000
  406788:	mov    WORD PTR [rsp+0x50],si
  40678d:	mov    WORD PTR [rsp+0x54],di
  406792:	mov    rsi,r15
  406795:	mov    ebp,0x5000
  40679a:	mov    edx,0x20
  40679f:	mov    rdi,rbx
  4067a2:	mov    WORD PTR [rsp+0x52],cx
  4067a7:	mov    WORD PTR [rsp+0x56],r8w
  4067ad:	mov    r15d,0x3
  4067b3:	mov    WORD PTR [rsp+0x58],r9w
  4067b9:	mov    WORD PTR [rsp+0x5a],r10w
  4067bf:	mov    WORD PTR [rsp+0x5c],r11w
  4067c5:	mov    WORD PTR [rsp+0x4c],ax
  4067ca:	mov    WORD PTR [rsp+0x5e],bp
  4067cf:	call   405a20 <__sprintf_chk@plt+0x4830>
  4067d4:	mov    eax,r13d
  4067d7:	mov    rsi,r14
  4067da:	mov    edx,0xa
  4067df:	add    eax,0x7
  4067e2:	mov    rdi,rbx
  4067e5:	mov    WORD PTR [rsp+0x1c],r15w
  4067eb:	mov    DWORD PTR [rsp+0x18],eax
  4067ef:	mov    DWORD PTR [rsp+0x14],0x10
  4067f7:	mov    r14d,0xffffffff
  4067fd:	call   405a20 <__sprintf_chk@plt+0x4830>
  406802:	mov    rbp,QWORD PTR [rbx+0x80]
  406809:	mov    rdi,rbp
  40680c:	call   401090 <strlen@plt>
  406811:	lea    rdx,[rax+0x1]
  406815:	mov    rsi,rbp
  406818:	mov    rdi,rbx
  40681b:	call   405a20 <__sprintf_chk@plt+0x4830>
  406820:	mov    eax,r13d
  406823:	mov    QWORD PTR [rip+0xc9b2],0x0        # 4131e0 <__sprintf_chk@plt+0x11ff0>
  40682e:	sub    eax,0x1
  406831:	lea    r15,[rax*8+0x8]
  406839:	nop    DWORD PTR [rax+0x0]
  406840:	lea    rsi,[rip+0x8869]        # 40f0b0 <__sprintf_chk@plt+0xdec0>
  406847:	xor    r8d,r8d
  40684a:	mov    r9d,0x3
  406850:	mov    ecx,0xfffffffe
  406855:	mov    edx,0x1
  40685a:	mov    rdi,rbx
  40685d:	mov    QWORD PTR [rip+0xc970],0x4        # 4131d8 <__sprintf_chk@plt+0x11fe8>
  406868:	call   4060e0 <__sprintf_chk@plt+0x4ef0>
  40686d:	cmp    QWORD PTR [rip+0xc96b],0x0        # 4131e0 <__sprintf_chk@plt+0x11ff0>
  406875:	je     4069b8 <__sprintf_chk@plt+0x57c8>
  40687b:	xor    edx,edx
  40687d:	mov    rsi,r12
  406880:	mov    rdi,rbx
  406883:	call   4062d0 <__sprintf_chk@plt+0x50e0>
  406888:	mov    ecx,DWORD PTR [rsp+0x8]
  40688c:	test   ecx,ecx
  40688e:	jle    4068c2 <__sprintf_chk@plt+0x56d2>
  406890:	xor    ebp,ebp
  406892:	nop    WORD PTR [rax+rax*1+0x0]
  406898:	mov    rax,QWORD PTR [rbx+0x60]
  40689c:	xor    edx,edx
  40689e:	mov    r9d,0x2
  4068a4:	mov    r8d,0x20
  4068aa:	mov    ecx,r14d
  4068ad:	mov    rdi,rbx
  4068b0:	mov    rsi,QWORD PTR [rax+rbp*1]
  4068b4:	add    rbp,0x8
  4068b8:	call   4060e0 <__sprintf_chk@plt+0x4ef0>
  4068bd:	cmp    r15,rbp
  4068c0:	jne    406898 <__sprintf_chk@plt+0x56a8>
  4068c2:	cmp    QWORD PTR [rip+0xc916],0x0        # 4131e0 <__sprintf_chk@plt+0x11ff0>
  4068ca:	je     4068f6 <__sprintf_chk@plt+0x5706>
  4068cc:	mov    edx,0x1
  4068d1:	mov    rsi,r12
  4068d4:	mov    rdi,rbx
  4068d7:	call   4062d0 <__sprintf_chk@plt+0x50e0>
  4068dc:	cmp    QWORD PTR [rip+0xc8fc],0x0        # 4131e0 <__sprintf_chk@plt+0x11ff0>
  4068e4:	je     4068f6 <__sprintf_chk@plt+0x5706>
  4068e6:	mov    edx,0x2
  4068eb:	mov    rsi,r12
  4068ee:	mov    rdi,rbx
  4068f1:	call   4062d0 <__sprintf_chk@plt+0x50e0>
  4068f6:	lea    rsi,[rip+0x87bc]        # 40f0b9 <__sprintf_chk@plt+0xdec9>
  4068fd:	xor    edx,edx
  4068ff:	mov    r9d,0x2
  406905:	mov    r8d,0x20
  40690b:	mov    ecx,r14d
  40690e:	mov    rdi,rbx
  406911:	call   4060e0 <__sprintf_chk@plt+0x4ef0>
  406916:	mov    rsi,QWORD PTR [rbx+0x70]
  40691a:	xor    edx,edx
  40691c:	xor    r8d,r8d
  40691f:	xor    ecx,ecx
  406921:	mov    r9d,0x2
  406927:	mov    rdi,rbx
  40692a:	xor    r13d,r13d
  40692d:	xor    ebp,ebp
  40692f:	call   4060e0 <__sprintf_chk@plt+0x4ef0>
  406934:	mov    edx,DWORD PTR [rbx+0x40]
  406937:	test   edx,edx
  406939:	jle    40696f <__sprintf_chk@plt+0x577f>
  40693b:	nop    DWORD PTR [rax+rax*1+0x0]
  406940:	mov    rsi,r13
  406943:	add    rsi,QWORD PTR [rbx+0x58]
  406947:	xor    ecx,ecx
  406949:	mov    r9d,0x2
  40694f:	mov    r8d,0x20
  406955:	mov    rdi,rbx
  406958:	add    ebp,0x1
  40695b:	add    r13,0x10
  40695f:	mov    edx,DWORD PTR [rsi+0x8]
  406962:	mov    rsi,QWORD PTR [rsi]
  406965:	call   4060e0 <__sprintf_chk@plt+0x4ef0>
  40696a:	cmp    DWORD PTR [rbx+0x40],ebp
  40696d:	jg     406940 <__sprintf_chk@plt+0x5750>
  40696f:	cmp    QWORD PTR [rip+0xc869],0x0        # 4131e0 <__sprintf_chk@plt+0x11ff0>
  406977:	je     406995 <__sprintf_chk@plt+0x57a5>
  406979:	mov    rsi,r12
  40697c:	mov    edx,0x3
  406981:	mov    rdi,rbx
  406984:	call   4062d0 <__sprintf_chk@plt+0x50e0>
  406989:	mov    rsi,QWORD PTR [rip+0xc850]        # 4131e0 <__sprintf_chk@plt+0x11ff0>
  406990:	test   rsi,rsi
  406993:	jne    4069c9 <__sprintf_chk@plt+0x57d9>
  406995:	mov    rbp,QWORD PTR [rip+0xc83c]        # 4131d8 <__sprintf_chk@plt+0x11fe8>
  40699c:	mov    rdi,rbp
  40699f:	call   401160 <malloc@plt>
  4069a4:	mov    QWORD PTR [rip+0xc835],rax        # 4131e0 <__sprintf_chk@plt+0x11ff0>
  4069ab:	mov    DWORD PTR [rax],ebp
  4069ad:	jmp    406840 <__sprintf_chk@plt+0x5650>
  4069b2:	nop    WORD PTR [rax+rax*1+0x0]
  4069b8:	mov    eax,DWORD PTR [rsp+0x8]
  4069bc:	test   eax,eax
  4069be:	jg     406890 <__sprintf_chk@plt+0x56a0>
  4069c4:	jmp    4068f6 <__sprintf_chk@plt+0x5706>
  4069c9:	mov    rdx,QWORD PTR [rip+0xc808]        # 4131d8 <__sprintf_chk@plt+0x11fe8>
  4069d0:	mov    rdi,rbx
  4069d3:	call   405a20 <__sprintf_chk@plt+0x4830>
  4069d8:	mov    rax,QWORD PTR [rsp+0x108]
  4069e0:	xor    rax,QWORD PTR fs:0x28
  4069e9:	jne    406a07 <__sprintf_chk@plt+0x5817>
  4069eb:	add    rsp,0x118
  4069f2:	pop    rbx
  4069f3:	pop    rbp
  4069f4:	pop    r12
  4069f6:	pop    r13
  4069f8:	pop    r14
  4069fa:	pop    r15
  4069fc:	ret    
  4069fd:	lea    r14,[rsp+0x14]
  406a02:	jmp    4065c0 <__sprintf_chk@plt+0x53d0>
  406a07:	call   4010a0 <__stack_chk_fail@plt>
  406a0c:	nop    DWORD PTR [rax+0x0]
  406a10:	mov    DWORD PTR [rip+0xc7f6],edx        # 41320c <__sprintf_chk@plt+0x1201c>
  406a16:	ret    
  406a17:	nop    WORD PTR [rax+rax*1+0x0]
  406a20:	push   r13
  406a22:	push   r12
  406a24:	mov    r12,rdi
  406a27:	push   rbp
  406a28:	push   rbx
  406a29:	mov    ebp,esi
  406a2b:	sub    rsp,0x8
  406a2f:	call   401090 <strlen@plt>
  406a34:	cmp    ebp,0xc0
  406a3a:	mov    rbx,rax
  406a3d:	je     406a4b <__sprintf_chk@plt+0x585b>
  406a3f:	mov    r13,QWORD PTR [rip+0xc82a]        # 413270 <__sprintf_chk@plt+0x12080>
  406a46:	cmp    rax,r13
  406a49:	ja     406aa0 <__sprintf_chk@plt+0x58b0>
  406a4b:	cmp    rbx,0x39
  406a4f:	ja     406aca <__sprintf_chk@plt+0x58da>
  406a51:	mov    rax,QWORD PTR [rip+0xc878]        # 4132d0 <__sprintf_chk@plt+0x120e0>
  406a58:	lea    rdx,[rip+0xe881]        # 4152e0 <__sprintf_chk@plt+0x140f0>
  406a5f:	lea    rcx,[rax+rbx*1+0x3]
  406a64:	cmp    rcx,rdx
  406a67:	ja     406af4 <__sprintf_chk@plt+0x5904>
  406a6d:	lea    r8,[rax+0x1]
  406a71:	or     ebp,ebx
  406a73:	mov    rdx,rbx
  406a76:	mov    BYTE PTR [rax],bpl
  406a79:	mov    rsi,r12
  406a7c:	mov    rdi,r8
  406a7f:	call   401150 <memcpy@plt>
  406a84:	add    rbx,rax
  406a87:	mov    QWORD PTR [rip+0xc842],rbx        # 4132d0 <__sprintf_chk@plt+0x120e0>
  406a8e:	add    rsp,0x8
  406a92:	pop    rbx
  406a93:	pop    rbp
  406a94:	pop    r12
  406a96:	pop    r13
  406a98:	ret    
  406a99:	nop    DWORD PTR [rax+0x0]
  406aa0:	cmp    BYTE PTR [r12+r13*1],0x5f
  406aa5:	jne    406a4b <__sprintf_chk@plt+0x585b>
  406aa7:	lea    rsi,[rip+0xc7d2]        # 413280 <__sprintf_chk@plt+0x12090>
  406aae:	mov    rdx,r13
  406ab1:	mov    rdi,r12
  406ab4:	call   401050 <strncmp@plt>
  406ab9:	test   eax,eax
  406abb:	jne    406a4b <__sprintf_chk@plt+0x585b>
  406abd:	lea    r12,[r12+r13*1+0x1]
  406ac2:	not    r13
  406ac5:	add    rbx,r13
  406ac8:	jmp    406a4b <__sprintf_chk@plt+0x585b>
  406aca:	mov    rax,QWORD PTR [rip+0xc51f]        # 412ff0 <__sprintf_chk@plt+0x11e00>
  406ad1:	lea    rdx,[rip+0x85f5]        # 40f0cd <__sprintf_chk@plt+0xdedd>
  406ad8:	mov    rcx,r12
  406adb:	mov    esi,0x1
  406ae0:	mov    rdi,QWORD PTR [rax]
  406ae3:	xor    eax,eax
  406ae5:	call   4011c0 <__fprintf_chk@plt>
  406aea:	mov    edi,0x1
  406aef:	call   4011a0 <exit@plt>
  406af4:	mov    rax,QWORD PTR [rip+0xc4f5]        # 412ff0 <__sprintf_chk@plt+0x11e00>
  406afb:	lea    rdi,[rip+0x875e]        # 40f260 <__sprintf_chk@plt+0xe070>
  406b02:	mov    edx,0x1e
  406b07:	mov    esi,0x1
  406b0c:	mov    rcx,QWORD PTR [rax]
  406b0f:	call   4011b0 <fwrite@plt>
  406b14:	mov    edi,0x1
  406b19:	call   4011a0 <exit@plt>
  406b1e:	xchg   ax,ax
  406b20:	test   edx,edx
  406b22:	push   r14
  406b24:	mov    r14,rdi
  406b27:	push   r13
  406b29:	mov    r13,rsi
  406b2c:	push   r12
  406b2e:	push   rbp
  406b2f:	push   rbx
  406b30:	mov    ebx,edx
  406b32:	je     406b3b <__sprintf_chk@plt+0x594b>
  406b34:	add    DWORD PTR [rip+0xc6c5],0x1        # 413200 <__sprintf_chk@plt+0x12010>
  406b3b:	mov    eax,DWORD PTR [r14+0x8]
  406b3f:	cmp    eax,0x7
  406b42:	je     406bff <__sprintf_chk@plt+0x5a0f>
  406b48:	cmp    eax,0x6
  406b4b:	je     406d62 <__sprintf_chk@plt+0x5b72>
  406b51:	cmp    eax,0x8
  406b54:	je     406ca3 <__sprintf_chk@plt+0x5ab3>
  406b5a:	cmp    eax,0x9
  406b5d:	je     406cd2 <__sprintf_chk@plt+0x5ae2>
  406b63:	cmp    eax,0x5
  406b66:	jne    406be5 <__sprintf_chk@plt+0x59f5>
  406b68:	test   ebx,ebx
  406b6a:	je     406be5 <__sprintf_chk@plt+0x59f5>
  406b6c:	mov    eax,DWORD PTR [r14+0x3c]
  406b70:	test   eax,eax
  406b72:	jle    406d81 <__sprintf_chk@plt+0x5b91>
  406b78:	sub    eax,0x1
  406b7b:	mov    r12,QWORD PTR [r14+0x78]
  406b7f:	xor    ebx,ebx
  406b81:	lea    rbp,[rax*8+0x8]
  406b89:	jmp    406b9d <__sprintf_chk@plt+0x59ad>
  406b8b:	nop    DWORD PTR [rax+rax*1+0x0]
  406b90:	add    rbx,0x8
  406b94:	cmp    rbp,rbx
  406b97:	je     406d81 <__sprintf_chk@plt+0x5b91>
  406b9d:	mov    rdi,QWORD PTR [r12+rbx*1]
  406ba1:	cmp    BYTE PTR [rdi],0x66
  406ba4:	jne    406b90 <__sprintf_chk@plt+0x59a0>
  406ba6:	cmp    BYTE PTR [rdi+0x1],0x66
  406baa:	jne    406b90 <__sprintf_chk@plt+0x59a0>
  406bac:	cmp    BYTE PTR [rdi+0x2],0x5f
  406bb0:	jne    406b90 <__sprintf_chk@plt+0x59a0>
  406bb2:	add    rdi,0x3
  406bb6:	mov    rsi,r13
  406bb9:	call   401110 <strcmp@plt>
  406bbe:	test   eax,eax
  406bc0:	jne    406b90 <__sprintf_chk@plt+0x59a0>
  406bc2:	mov    rax,QWORD PTR [r14+0x50]
  406bc6:	mov    rdi,QWORD PTR [r14+0x10]
  406bca:	lea    rdx,[rip+0x853b]        # 40f10c <__sprintf_chk@plt+0xdf1c>
  406bd1:	mov    esi,0x1
  406bd6:	mov    rcx,QWORD PTR [rax+rbx*1]
  406bda:	sub    rcx,QWORD PTR [r14+0x28]
  406bde:	xor    eax,eax
  406be0:	call   4011c0 <__fprintf_chk@plt>
  406be5:	pop    rbx
  406be6:	add    DWORD PTR [rip+0xc61b],0x1        # 413208 <__sprintf_chk@plt+0x12018>
  406bed:	mov    DWORD PTR [rip+0xc615],0x0        # 41320c <__sprintf_chk@plt+0x1201c>
  406bf7:	pop    rbp
  406bf8:	pop    r12
  406bfa:	pop    r13
  406bfc:	pop    r14
  406bfe:	ret    
  406bff:	mov    edx,DWORD PTR [rip+0xc60b]        # 413210 <__sprintf_chk@plt+0x12020>
  406c05:	test   edx,edx
  406c07:	je     406ddc <__sprintf_chk@plt+0x5bec>
  406c0d:	mov    eax,DWORD PTR [rip+0xc5f9]        # 41320c <__sprintf_chk@plt+0x1201c>
  406c13:	cmp    eax,0x1
  406c16:	je     406d38 <__sprintf_chk@plt+0x5b48>
  406c1c:	cmp    ebx,0x80
  406c22:	je     406c81 <__sprintf_chk@plt+0x5a91>
  406c24:	cmp    edx,0x1
  406c27:	je     406c43 <__sprintf_chk@plt+0x5a53>
  406c29:	mov    rcx,QWORD PTR [r14+0x10]
  406c2d:	lea    rdi,[rip+0x85a5]        # 40f1d9 <__sprintf_chk@plt+0xdfe9>
  406c34:	mov    edx,0x2
  406c39:	mov    esi,0x1
  406c3e:	call   4011b0 <fwrite@plt>
  406c43:	lea    rax,[rip+0x84a1]        # 40f0eb <__sprintf_chk@plt+0xdefb>
  406c4a:	lea    rcx,[rip+0x84a2]        # 40f0f3 <__sprintf_chk@plt+0xdf03>
  406c51:	mov    rdi,QWORD PTR [r14+0x10]
  406c55:	test   ebx,ebx
  406c57:	lea    rdx,[rip+0x849c]        # 40f0fa <__sprintf_chk@plt+0xdf0a>
  406c5e:	mov    r8,r13
  406c61:	cmovne rcx,rax
  406c65:	mov    esi,0x1
  406c6a:	xor    eax,eax
  406c6c:	mov    DWORD PTR [rip+0xc59a],0x2        # 413210 <__sprintf_chk@plt+0x12020>
  406c76:	call   4011c0 <__fprintf_chk@plt>
  406c7b:	mov    eax,DWORD PTR [rip+0xc58b]        # 41320c <__sprintf_chk@plt+0x1201c>
  406c81:	cmp    eax,0x2
  406c84:	lea    rdi,[rip+0x248a]        # 409115 <__sprintf_chk@plt+0x7f25>
  406c8b:	je     406c97 <__sprintf_chk@plt+0x5aa7>
  406c8d:	add    BYTE PTR [rip+0xc64e],0x1        # 4132e2 <__sprintf_chk@plt+0x120f2>
  406c94:	mov    rdi,r13
  406c97:	mov    esi,ebx
  406c99:	call   406a20 <__sprintf_chk@plt+0x5830>
  406c9e:	jmp    406be5 <__sprintf_chk@plt+0x59f5>
  406ca3:	mov    rdi,r13
  406ca6:	call   401090 <strlen@plt>
  406cab:	cmp    rax,0x4f
  406caf:	ja     406db2 <__sprintf_chk@plt+0x5bc2>
  406cb5:	lea    rdx,[rax+0x1]
  406cb9:	lea    rdi,[rip+0xc560]        # 413220 <__sprintf_chk@plt+0x12030>
  406cc0:	mov    ecx,0x50
  406cc5:	mov    rsi,r13
  406cc8:	call   401130 <__memcpy_chk@plt>
  406ccd:	jmp    406be5 <__sprintf_chk@plt+0x59f5>
  406cd2:	movzx  edx,BYTE PTR [r13+0x1]
  406cd7:	test   dl,dl
  406cd9:	je     406d19 <__sprintf_chk@plt+0x5b29>
  406cdb:	cmp    BYTE PTR [rip+0xc59e],0x0        # 413280 <__sprintf_chk@plt+0x12090>
  406ce2:	je     406d19 <__sprintf_chk@plt+0x5b29>
  406ce4:	mov    eax,0x1
  406ce9:	lea    rcx,[rip+0xc58f]        # 41327f <__sprintf_chk@plt+0x1208f>
  406cf0:	jmp    406d0c <__sprintf_chk@plt+0x5b1c>
  406cf2:	nop    WORD PTR [rax+rax*1+0x0]
  406cf8:	movzx  edx,BYTE PTR [r13+rax*1+0x1]
  406cfe:	test   dl,dl
  406d00:	je     406d19 <__sprintf_chk@plt+0x5b29>
  406d02:	add    rax,0x1
  406d06:	cmp    BYTE PTR [rax+rcx*1],0x0
  406d0a:	je     406d19 <__sprintf_chk@plt+0x5b29>
  406d0c:	cmp    dl,0x5f
  406d0f:	jne    406cf8 <__sprintf_chk@plt+0x5b08>
  406d11:	mov    BYTE PTR [r13+rax*1+0x0],0x2e
  406d17:	jmp    406cf8 <__sprintf_chk@plt+0x5b08>
  406d19:	mov    rdi,QWORD PTR [r14+0x10]
  406d1d:	lea    rdx,[rip+0x2439]        # 40915d <__sprintf_chk@plt+0x7f6d>
  406d24:	mov    rcx,r13
  406d27:	mov    esi,0x1
  406d2c:	xor    eax,eax
  406d2e:	call   4011c0 <__fprintf_chk@plt>
  406d33:	jmp    406be5 <__sprintf_chk@plt+0x59f5>
  406d38:	mov    rax,QWORD PTR [rip+0xc591]        # 4132d0 <__sprintf_chk@plt+0x120e0>
  406d3f:	lea    rcx,[rip+0xe59a]        # 4152e0 <__sprintf_chk@plt+0x140f0>
  406d46:	lea    rdx,[rax+0x1]
  406d4a:	cmp    rdx,rcx
  406d4d:	ja     406de8 <__sprintf_chk@plt+0x5bf8>
  406d53:	mov    QWORD PTR [rip+0xc576],rdx        # 4132d0 <__sprintf_chk@plt+0x120e0>
  406d5a:	mov    BYTE PTR [rax],0xfe
  406d5d:	jmp    406be5 <__sprintf_chk@plt+0x59f5>
  406d62:	mov    rdi,QWORD PTR [r14+0x10]
  406d66:	lea    rdx,[rip+0x8394]        # 40f101 <__sprintf_chk@plt+0xdf11>
  406d6d:	mov    rcx,r13
  406d70:	mov    esi,0x1
  406d75:	xor    eax,eax
  406d77:	call   4011c0 <__fprintf_chk@plt>
  406d7c:	jmp    406be5 <__sprintf_chk@plt+0x59f5>
  406d81:	mov    rax,QWORD PTR [rip+0xc268]        # 412ff0 <__sprintf_chk@plt+0x11e00>
  406d88:	lea    rcx,[rip+0x8382]        # 40f111 <__sprintf_chk@plt+0xdf21>
  406d8f:	lea    rdx,[rip+0x8542]        # 40f2d8 <__sprintf_chk@plt+0xe0e8>
  406d96:	mov    r8,r13
  406d99:	mov    esi,0x1
  406d9e:	mov    rdi,QWORD PTR [rax]
  406da1:	xor    eax,eax
  406da3:	call   4011c0 <__fprintf_chk@plt>
  406da8:	mov    edi,0x1
  406dad:	call   4011a0 <exit@plt>
  406db2:	lea    rdx,[rip+0x84f7]        # 40f2b0 <__sprintf_chk@plt+0xe0c0>
  406db9:	mov    rcx,r13
  406dbc:	mov    rax,QWORD PTR [rip+0xc22d]        # 412ff0 <__sprintf_chk@plt+0x11e00>
  406dc3:	mov    esi,0x1
  406dc8:	mov    rdi,QWORD PTR [rax]
  406dcb:	xor    eax,eax
  406dcd:	call   4011c0 <__fprintf_chk@plt>
  406dd2:	mov    edi,0x1
  406dd7:	call   4011a0 <exit@plt>
  406ddc:	mov    rcx,r13
  406ddf:	lea    rdx,[rip+0x849a]        # 40f280 <__sprintf_chk@plt+0xe090>
  406de6:	jmp    406dbc <__sprintf_chk@plt+0x5bcc>
  406de8:	mov    rax,QWORD PTR [rip+0xc201]        # 412ff0 <__sprintf_chk@plt+0x11e00>
  406def:	lea    rdi,[rip+0x846a]        # 40f260 <__sprintf_chk@plt+0xe070>
  406df6:	mov    edx,0x1e
  406dfb:	mov    esi,0x1
  406e00:	mov    rcx,QWORD PTR [rax]
  406e03:	call   4011b0 <fwrite@plt>
  406e08:	mov    edi,0x1
  406e0d:	call   4011a0 <exit@plt>
  406e12:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  406e1d:	nop    DWORD PTR [rax]
  406e20:	push   r14
  406e22:	push   r13
  406e24:	push   r12
  406e26:	push   rbp
  406e27:	push   rbx
  406e28:	sub    rsp,0x60
  406e2c:	mov    rax,QWORD PTR fs:0x28
  406e35:	mov    QWORD PTR [rsp+0x58],rax
  406e3a:	xor    eax,eax
  406e3c:	mov    eax,DWORD PTR [rip+0xc3ce]        # 413210 <__sprintf_chk@plt+0x12020>
  406e42:	test   eax,eax
  406e44:	je     406f42 <__sprintf_chk@plt+0x5d52>
  406e4a:	cmp    eax,0x1
  406e4d:	mov    r13,rdi
  406e50:	je     406f60 <__sprintf_chk@plt+0x5d70>
  406e56:	mov    rcx,QWORD PTR [r13+0x0]
  406e5a:	lea    rdi,[rip+0x82ca]        # 40f12b <__sprintf_chk@plt+0xdf3b>
  406e61:	mov    edx,0x4
  406e66:	mov    esi,0x1
  406e6b:	lea    rbp,[rip+0xc46e]        # 4132e0 <__sprintf_chk@plt+0x120f0>
  406e72:	xor    ebx,ebx
  406e74:	mov    r12,rsp
  406e77:	lea    r14,[rip+0x82d0]        # 40f14e <__sprintf_chk@plt+0xdf5e>
  406e7e:	call   4011b0 <fwrite@plt>
  406e83:	mov    rdi,QWORD PTR [r13+0x0]
  406e87:	lea    r8,[rip+0xc3f2]        # 413280 <__sprintf_chk@plt+0x12090>
  406e8e:	lea    rcx,[rip+0x829b]        # 40f130 <__sprintf_chk@plt+0xdf40>
  406e95:	lea    rdx,[rip+0x8464]        # 40f300 <__sprintf_chk@plt+0xe110>
  406e9c:	xor    eax,eax
  406e9e:	mov    esi,0x1
  406ea3:	call   4011c0 <__fprintf_chk@plt>
  406ea8:	cmp    QWORD PTR [rip+0xc421],rbp        # 4132d0 <__sprintf_chk@plt+0x120e0>
  406eaf:	mov    BYTE PTR [rsp],0x0
  406eb3:	ja     406ecd <__sprintf_chk@plt+0x5cdd>
  406eb5:	jmp    406f7e <__sprintf_chk@plt+0x5d8e>
  406eba:	nop    WORD PTR [rax+rax*1+0x0]
  406ec0:	add    rbp,0x1
  406ec4:	cmp    rbp,QWORD PTR [rip+0xc405]        # 4132d0 <__sprintf_chk@plt+0x120e0>
  406ecb:	jae    406f22 <__sprintf_chk@plt+0x5d32>
  406ecd:	movzx  r8d,BYTE PTR [rbp+0x0]
  406ed2:	movsxd rdi,ebx
  406ed5:	xor    eax,eax
  406ed7:	add    rdi,r12
  406eda:	mov    rcx,r14
  406edd:	mov    rdx,0xffffffffffffffff
  406ee4:	mov    esi,0x1
  406ee9:	call   4011f0 <__sprintf_chk@plt>
  406eee:	add    ebx,eax
  406ef0:	cmp    ebx,0x4a
  406ef3:	jle    406ec0 <__sprintf_chk@plt+0x5cd0>
  406ef5:	mov    rdi,QWORD PTR [r13+0x0]
  406ef9:	lea    rdx,[rip+0x2154]        # 409054 <__sprintf_chk@plt+0x7e64>
  406f00:	xor    eax,eax
  406f02:	mov    rcx,r12
  406f05:	mov    esi,0x1
  406f0a:	xor    ebx,ebx
  406f0c:	add    rbp,0x1
  406f10:	call   4011c0 <__fprintf_chk@plt>
  406f15:	cmp    rbp,QWORD PTR [rip+0xc3b4]        # 4132d0 <__sprintf_chk@plt+0x120e0>
  406f1c:	mov    BYTE PTR [rsp],0x0
  406f20:	jb     406ecd <__sprintf_chk@plt+0x5cdd>
  406f22:	mov    rdi,QWORD PTR [r13+0x0]
  406f26:	lea    rdx,[rip+0x8210]        # 40f13d <__sprintf_chk@plt+0xdf4d>
  406f2d:	mov    r8d,0xff
  406f33:	mov    rcx,r12
  406f36:	mov    esi,0x1
  406f3b:	xor    eax,eax
  406f3d:	call   4011c0 <__fprintf_chk@plt>
  406f42:	mov    rax,QWORD PTR [rsp+0x58]
  406f47:	xor    rax,QWORD PTR fs:0x28
  406f50:	jne    406f83 <__sprintf_chk@plt+0x5d93>
  406f52:	add    rsp,0x60
  406f56:	pop    rbx
  406f57:	pop    rbp
  406f58:	pop    r12
  406f5a:	pop    r13
  406f5c:	pop    r14
  406f5e:	ret    
  406f5f:	nop
  406f60:	mov    rcx,QWORD PTR [rdi]
  406f63:	lea    rdi,[rip+0x81ae]        # 40f118 <__sprintf_chk@plt+0xdf28>
  406f6a:	mov    edx,0x12
  406f6f:	mov    esi,0x1
  406f74:	call   4011b0 <fwrite@plt>
  406f79:	jmp    406e56 <__sprintf_chk@plt+0x5c66>
  406f7e:	mov    r12,rsp
  406f81:	jmp    406f22 <__sprintf_chk@plt+0x5d32>
  406f83:	call   4010a0 <__stack_chk_fail@plt>
  406f88:	nop    DWORD PTR [rax+rax*1+0x0]
  406f90:	push   rbp
  406f91:	push   rbx
  406f92:	mov    rbx,rsi
  406f95:	sub    rsp,0x8
  406f99:	cmp    DWORD PTR [rdi+0x8],0x7
  406f9d:	je     406fe0 <__sprintf_chk@plt+0x5df0>
  406f9f:	mov    rdi,rbx
  406fa2:	call   401090 <strlen@plt>
  406fa7:	cmp    rax,0x4f
  406fab:	mov    QWORD PTR [rip+0xc2be],rax        # 413270 <__sprintf_chk@plt+0x12080>
  406fb2:	ja     40708b <__sprintf_chk@plt+0x5e9b>
  406fb8:	add    rsp,0x8
  406fbc:	mov    rsi,rbx
  406fbf:	lea    rdx,[rax+0x1]
  406fc3:	pop    rbx
  406fc4:	pop    rbp
  406fc5:	lea    rdi,[rip+0xc2b4]        # 413280 <__sprintf_chk@plt+0x12090>
  406fcc:	mov    ecx,0x50
  406fd1:	jmp    401130 <__memcpy_chk@plt>
  406fd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406fe0:	mov    rbp,rdi
  406fe3:	lea    rdi,[rdi+0x10]
  406fe7:	call   406e20 <__sprintf_chk@plt+0x5c30>
  406fec:	mov    eax,DWORD PTR [rip+0xc216]        # 413208 <__sprintf_chk@plt+0x12018>
  406ff2:	mov    rdi,QWORD PTR [rbp+0x10]
  406ff6:	lea    rcx,[rip+0x8155]        # 40f152 <__sprintf_chk@plt+0xdf62>
  406ffd:	lea    rdx,[rip+0x8155]        # 40f159 <__sprintf_chk@plt+0xdf69>
  407004:	mov    r8,rbx
  407007:	mov    esi,0x1
  40700c:	mov    BYTE PTR [rip+0xc2cf],0x0        # 4132e2 <__sprintf_chk@plt+0x120f2>
  407013:	mov    DWORD PTR [rip+0xc1f3],0x1        # 413210 <__sprintf_chk@plt+0x12020>
  40701d:	mov    BYTE PTR [rip+0xc2bd],al        # 4132e0 <__sprintf_chk@plt+0x120f0>
  407023:	mov    eax,DWORD PTR [rip+0xc1d7]        # 413200 <__sprintf_chk@plt+0x12010>
  407029:	mov    BYTE PTR [rip+0xc2b2],al        # 4132e1 <__sprintf_chk@plt+0x120f1>
  40702f:	lea    rax,[rip+0xc2ad]        # 4132e3 <__sprintf_chk@plt+0x120f3>
  407036:	mov    QWORD PTR [rip+0xc293],rax        # 4132d0 <__sprintf_chk@plt+0x120e0>
  40703d:	xor    eax,eax
  40703f:	call   4011c0 <__fprintf_chk@plt>
  407044:	mov    rdi,QWORD PTR [rbp+0x10]
  407048:	lea    rcx,[rip+0x8103]        # 40f152 <__sprintf_chk@plt+0xdf62>
  40704f:	lea    rdx,[rip+0x8117]        # 40f16d <__sprintf_chk@plt+0xdf7d>
  407056:	mov    r8,rbx
  407059:	mov    esi,0x1
  40705e:	xor    eax,eax
  407060:	call   4011c0 <__fprintf_chk@plt>
  407065:	mov    rdi,QWORD PTR [rbp+0x10]
  407069:	lea    rcx,[rip+0x8111]        # 40f181 <__sprintf_chk@plt+0xdf91>
  407070:	lea    rdx,[rip+0x82b1]        # 40f328 <__sprintf_chk@plt+0xe138>
  407077:	mov    r8,rbx
  40707a:	mov    esi,0x1
  40707f:	xor    eax,eax
  407081:	call   4011c0 <__fprintf_chk@plt>
  407086:	jmp    406f9f <__sprintf_chk@plt+0x5daf>
  40708b:	mov    rax,QWORD PTR [rip+0xbf5e]        # 412ff0 <__sprintf_chk@plt+0x11e00>
  407092:	lea    rdx,[rip+0x82b7]        # 40f350 <__sprintf_chk@plt+0xe160>
  407099:	mov    rcx,rbx
  40709c:	mov    esi,0x1
  4070a1:	mov    rdi,QWORD PTR [rax]
  4070a4:	xor    eax,eax
  4070a6:	call   4011c0 <__fprintf_chk@plt>
  4070ab:	mov    edi,0x1
  4070b0:	call   4011a0 <exit@plt>
  4070b5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4070c0:	cmp    DWORD PTR [rdi+0x8],0x7
  4070c4:	je     4070d0 <__sprintf_chk@plt+0x5ee0>
  4070c6:	ret    
  4070c7:	nop    WORD PTR [rax+rax*1+0x0]
  4070d0:	sub    rsp,0x8
  4070d4:	cmp    BYTE PTR [rsi],0x21
  4070d7:	je     407110 <__sprintf_chk@plt+0x5f20>
  4070d9:	mov    rdi,rsi
  4070dc:	mov    esi,0xc0
  4070e1:	call   406a20 <__sprintf_chk@plt+0x5830>
  4070e6:	mov    rax,QWORD PTR [rip+0xc1e3]        # 4132d0 <__sprintf_chk@plt+0x120e0>
  4070ed:	lea    rdx,[rax+0x1]
  4070f1:	mov    BYTE PTR [rax],0xfa
  4070f4:	add    BYTE PTR [rip+0xc1e7],0x1        # 4132e2 <__sprintf_chk@plt+0x120f2>
  4070fb:	mov    QWORD PTR [rip+0xc1ce],rdx        # 4132d0 <__sprintf_chk@plt+0x120e0>
  407102:	add    rsp,0x8
  407106:	ret    
  407107:	nop    WORD PTR [rax+rax*1+0x0]
  407110:	cmp    BYTE PTR [rsi+0x1],0x0
  407114:	jne    4070d9 <__sprintf_chk@plt+0x5ee9>
  407116:	mov    BYTE PTR [rsi],0x0
  407119:	jmp    4070d9 <__sprintf_chk@plt+0x5ee9>
  40711b:	nop    DWORD PTR [rax+rax*1+0x0]
  407120:	push   rbp
  407121:	push   rbx
  407122:	sub    rsp,0x18
  407126:	mov    rax,QWORD PTR fs:0x28
  40712f:	mov    QWORD PTR [rsp+0x8],rax
  407134:	xor    eax,eax
  407136:	cmp    DWORD PTR [rdi+0x8],0x7
  40713a:	je     407160 <__sprintf_chk@plt+0x5f70>
  40713c:	mov    rax,QWORD PTR [rsp+0x8]
  407141:	xor    rax,QWORD PTR fs:0x28
  40714a:	jne    407292 <__sprintf_chk@plt+0x60a2>
  407150:	add    rsp,0x18
  407154:	pop    rbx
  407155:	pop    rbp
  407156:	ret    
  407157:	nop    WORD PTR [rax+rax*1+0x0]
  407160:	mov    rbx,rsi
  407163:	mov    rdi,rsi
  407166:	call   401090 <strlen@plt>
  40716b:	movzx  edx,BYTE PTR [rbx]
  40716e:	cmp    dl,0x22
  407171:	je     407210 <__sprintf_chk@plt+0x6020>
  407177:	sub    edx,0x30
  40717a:	cmp    dl,0x9
  40717d:	jbe    4071c0 <__sprintf_chk@plt+0x5fd0>
  40717f:	lea    rdi,[rip+0x8006]        # 40f18c <__sprintf_chk@plt+0xdf9c>
  407186:	mov    ecx,0x7
  40718b:	mov    rsi,rbx
  40718e:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  407190:	jne    407240 <__sprintf_chk@plt+0x6050>
  407196:	mov    rax,QWORD PTR [rip+0xc133]        # 4132d0 <__sprintf_chk@plt+0x120e0>
  40719d:	lea    rcx,[rip+0xe13c]        # 4152e0 <__sprintf_chk@plt+0x140f0>
  4071a4:	lea    rdx,[rax+0x1]
  4071a8:	cmp    rdx,rcx
  4071ab:	ja     4072c8 <__sprintf_chk@plt+0x60d8>
  4071b1:	mov    QWORD PTR [rip+0xc118],rdx        # 4132d0 <__sprintf_chk@plt+0x120e0>
  4071b8:	mov    BYTE PTR [rax],0xfd
  4071bb:	jmp    40713c <__sprintf_chk@plt+0x5f4c>
  4071c0:	mov    rsi,rsp
  4071c3:	mov    rdi,rbx
  4071c6:	call   401070 <strtod@plt>
  4071cb:	mov    rax,QWORD PTR [rsp]
  4071cf:	cmp    BYTE PTR [rax],0x0
  4071d2:	jne    407297 <__sprintf_chk@plt+0x60a7>
  4071d8:	mov    rax,QWORD PTR [rip+0xc0f1]        # 4132d0 <__sprintf_chk@plt+0x120e0>
  4071df:	lea    rcx,[rip+0xe0fa]        # 4152e0 <__sprintf_chk@plt+0x140f0>
  4071e6:	lea    rdx,[rax+0x9]
  4071ea:	cmp    rdx,rcx
  4071ed:	ja     4072c8 <__sprintf_chk@plt+0x60d8>
  4071f3:	mov    BYTE PTR [rax],0xfb
  4071f6:	vmovq  QWORD PTR [rax+0x1],xmm0
  4071fb:	mov    QWORD PTR [rip+0xc0ce],rdx        # 4132d0 <__sprintf_chk@plt+0x120e0>
  407202:	jmp    40713c <__sprintf_chk@plt+0x5f4c>
  407207:	nop    WORD PTR [rax+rax*1+0x0]
  407210:	cmp    eax,0x1
  407213:	jle    407297 <__sprintf_chk@plt+0x60a7>
  407219:	cdqe   
  40721b:	lea    rax,[rbx+rax*1-0x1]
  407220:	cmp    BYTE PTR [rax],0x22
  407223:	jne    407297 <__sprintf_chk@plt+0x60a7>
  407225:	lea    rdi,[rbx+0x1]
  407229:	mov    BYTE PTR [rax],0x0
  40722c:	mov    esi,0xc0
  407231:	call   406a20 <__sprintf_chk@plt+0x5830>
  407236:	jmp    40713c <__sprintf_chk@plt+0x5f4c>
  40723b:	nop    DWORD PTR [rax+rax*1+0x0]
  407240:	cmp    eax,0x4
  407243:	jle    407297 <__sprintf_chk@plt+0x60a7>
  407245:	lea    rdi,[rip+0x7f47]        # 40f193 <__sprintf_chk@plt+0xdfa3>
  40724c:	mov    ecx,0x4
  407251:	mov    rsi,rbx
  407254:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  407256:	jne    407297 <__sprintf_chk@plt+0x60a7>
  407258:	mov    rbp,QWORD PTR [rip+0xc071]        # 4132d0 <__sprintf_chk@plt+0x120e0>
  40725f:	lea    rdx,[rip+0xe07a]        # 4152e0 <__sprintf_chk@plt+0x140f0>
  407266:	lea    rax,[rbp+0x2]
  40726a:	cmp    rax,rdx
  40726d:	ja     4072c8 <__sprintf_chk@plt+0x60d8>
  40726f:	lea    rdi,[rbx+0x4]
  407273:	mov    BYTE PTR [rbp+0x0],0xfc
  407277:	mov    edx,0xa
  40727c:	xor    esi,esi
  40727e:	mov    QWORD PTR [rip+0xc04b],rax        # 4132d0 <__sprintf_chk@plt+0x120e0>
  407285:	call   401140 <strtol@plt>
  40728a:	mov    BYTE PTR [rbp+0x1],al
  40728d:	jmp    40713c <__sprintf_chk@plt+0x5f4c>
  407292:	call   4010a0 <__stack_chk_fail@plt>
  407297:	mov    rax,QWORD PTR [rip+0xbd52]        # 412ff0 <__sprintf_chk@plt+0x11e00>
  40729e:	lea    rcx,[rip+0x7ead]        # 40f152 <__sprintf_chk@plt+0xdf62>
  4072a5:	lea    rdx,[rip+0x80cc]        # 40f378 <__sprintf_chk@plt+0xe188>
  4072ac:	mov    r8,rbx
  4072af:	mov    esi,0x1
  4072b4:	mov    rdi,QWORD PTR [rax]
  4072b7:	xor    eax,eax
  4072b9:	call   4011c0 <__fprintf_chk@plt>
  4072be:	mov    edi,0x1
  4072c3:	call   4011a0 <exit@plt>
  4072c8:	mov    rax,QWORD PTR [rip+0xbd21]        # 412ff0 <__sprintf_chk@plt+0x11e00>
  4072cf:	lea    rdi,[rip+0x7f8a]        # 40f260 <__sprintf_chk@plt+0xe070>
  4072d6:	mov    edx,0x1e
  4072db:	mov    esi,0x1
  4072e0:	mov    rcx,QWORD PTR [rax]
  4072e3:	call   4011b0 <fwrite@plt>
  4072e8:	mov    edi,0x1
  4072ed:	call   4011a0 <exit@plt>
  4072f2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4072fd:	nop    DWORD PTR [rax]
  407300:	cmp    DWORD PTR [rdi+0x8],0x8
  407304:	je     407310 <__sprintf_chk@plt+0x6120>
  407306:	repz ret 
  407308:	nop    DWORD PTR [rax+rax*1+0x0]
  407310:	mov    eax,DWORD PTR [rip+0xbeee]        # 413204 <__sprintf_chk@plt+0x12014>
  407316:	mov    edx,DWORD PTR [rip+0xbeec]        # 413208 <__sprintf_chk@plt+0x12018>
  40731c:	push   r14
  40731e:	push   r13
  407320:	push   r12
  407322:	mov    r12,rdi
  407325:	push   rbp
  407326:	add    eax,0x1
  407329:	push   rbx
  40732a:	mov    rbp,rsi
  40732d:	cmp    edx,eax
  40732f:	jle    407373 <__sprintf_chk@plt+0x6183>
  407331:	lea    rbx,[rip+0x7e60]        # 40f198 <__sprintf_chk@plt+0xdfa8>
  407338:	nop    DWORD PTR [rax+rax*1+0x0]
  407340:	mov    rcx,QWORD PTR [r12+0x10]
  407345:	mov    edx,0x3
  40734a:	mov    esi,0x1
  40734f:	mov    rdi,rbx
  407352:	call   4011b0 <fwrite@plt>
  407357:	mov    eax,DWORD PTR [rip+0xbea7]        # 413204 <__sprintf_chk@plt+0x12014>
  40735d:	lea    edx,[rax+0x1]
  407360:	add    eax,0x2
  407363:	mov    DWORD PTR [rip+0xbe9b],edx        # 413204 <__sprintf_chk@plt+0x12014>
  407369:	mov    edx,DWORD PTR [rip+0xbe99]        # 413208 <__sprintf_chk@plt+0x12018>
  40736f:	cmp    eax,edx
  407371:	jl     407340 <__sprintf_chk@plt+0x6150>
  407373:	cmp    BYTE PTR [rbp+0x0],0x2e
  407377:	lea    rax,[rip+0xbea2]        # 413220 <__sprintf_chk@plt+0x12030>
  40737e:	mov    esi,0x20
  407383:	mov    DWORD PTR [rip+0xbe7b],edx        # 413204 <__sprintf_chk@plt+0x12014>
  407389:	cmove  rbp,rax
  40738d:	mov    rdi,rbp
  407390:	call   4010b0 <strchr@plt>
  407395:	test   rax,rax
  407398:	je     407460 <__sprintf_chk@plt+0x6270>
  40739e:	lea    r14,[rax+0x1]
  4073a2:	mov    BYTE PTR [rax],0x0
  4073a5:	cmp    BYTE PTR [rip+0xbf34],0x0        # 4132e0 <__sprintf_chk@plt+0x120f0>
  4073ac:	mov    r13d,0x2
  4073b2:	lea    rbx,[rip+0xbf27]        # 4132e0 <__sprintf_chk@plt+0x120f0>
  4073b9:	jne    4073d6 <__sprintf_chk@plt+0x61e6>
  4073bb:	jmp    407410 <__sprintf_chk@plt+0x6220>
  4073bd:	nop    DWORD PTR [rax]
  4073c0:	mov    rdi,rbx
  4073c3:	add    r13d,0x1
  4073c7:	call   401090 <strlen@plt>
  4073cc:	lea    rbx,[rbx+rax*1+0x1]
  4073d1:	cmp    BYTE PTR [rbx],0x0
  4073d4:	je     407410 <__sprintf_chk@plt+0x6220>
  4073d6:	mov    rsi,rbp
  4073d9:	mov    rdi,rbx
  4073dc:	call   401110 <strcmp@plt>
  4073e1:	test   eax,eax
  4073e3:	jne    4073c0 <__sprintf_chk@plt+0x61d0>
  4073e5:	test   r14,r14
  4073e8:	mov    rdi,QWORD PTR [r12+0x10]
  4073ed:	je     407440 <__sprintf_chk@plt+0x6250>
  4073ef:	pop    rbx
  4073f0:	mov    r8,r14
  4073f3:	mov    ecx,r13d
  4073f6:	lea    rdx,[rip+0x7d9f]        # 40f19c <__sprintf_chk@plt+0xdfac>
  4073fd:	pop    rbp
  4073fe:	pop    r12
  407400:	pop    r13
  407402:	pop    r14
  407404:	mov    esi,0x1
  407409:	xor    eax,eax
  40740b:	jmp    4011c0 <__fprintf_chk@plt>
  407410:	mov    rdi,rbp
  407413:	call   401090 <strlen@plt>
  407418:	lea    rdx,[rax+0x1]
  40741c:	lea    rax,[rip+0xdebd]        # 4152e0 <__sprintf_chk@plt+0x140f0>
  407423:	lea    rcx,[rbx+rdx*1]
  407427:	cmp    rcx,rax
  40742a:	jae    407468 <__sprintf_chk@plt+0x6278>
  40742c:	mov    rsi,rbp
  40742f:	mov    rdi,rbx
  407432:	call   401150 <memcpy@plt>
  407437:	jmp    4073e5 <__sprintf_chk@plt+0x61f5>
  407439:	nop    DWORD PTR [rax+0x0]
  407440:	pop    rbx
  407441:	mov    ecx,r13d
  407444:	lea    rdx,[rip+0x7d61]        # 40f1ac <__sprintf_chk@plt+0xdfbc>
  40744b:	mov    esi,0x1
  407450:	pop    rbp
  407451:	pop    r12
  407453:	pop    r13
  407455:	pop    r14
  407457:	xor    eax,eax
  407459:	jmp    4011c0 <__fprintf_chk@plt>
  40745e:	xchg   ax,ax
  407460:	xor    r14d,r14d
  407463:	jmp    4073a5 <__sprintf_chk@plt+0x61b5>
  407468:	mov    rax,QWORD PTR [rip+0xbb81]        # 412ff0 <__sprintf_chk@plt+0x11e00>
  40746f:	lea    rdi,[rip+0x7dea]        # 40f260 <__sprintf_chk@plt+0xe070>
  407476:	mov    edx,0x1e
  40747b:	mov    esi,0x1
  407480:	mov    rcx,QWORD PTR [rax]
  407483:	call   4011b0 <fwrite@plt>
  407488:	mov    edi,0x1
  40748d:	call   4011a0 <exit@plt>
  407492:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40749d:	nop    DWORD PTR [rax]
  4074a0:	push   r15
  4074a2:	push   r14
  4074a4:	mov    r14,rdi
  4074a7:	push   r13
  4074a9:	push   r12
  4074ab:	push   rbp
  4074ac:	push   rbx
  4074ad:	sub    rsp,0x138
  4074b4:	mov    rax,QWORD PTR fs:0x28
  4074bd:	mov    QWORD PTR [rsp+0x128],rax
  4074c5:	xor    eax,eax
  4074c7:	mov    eax,DWORD PTR [rdi+0x8]
  4074ca:	lea    edx,[rax-0x6]
  4074cd:	cmp    edx,0x2
  4074d0:	jbe    4079eb <__sprintf_chk@plt+0x67fb>
  4074d6:	cmp    eax,0x9
  4074d9:	je     407817 <__sprintf_chk@plt+0x6627>
  4074df:	mov    rax,QWORD PTR [r14+0x20]
  4074e3:	mov    DWORD PTR [rip+0xbd1b],0x2        # 413208 <__sprintf_chk@plt+0x12018>
  4074ed:	lea    r13,[rip+0x7cc3]        # 40f1b7 <__sprintf_chk@plt+0xdfc7>
  4074f4:	mov    DWORD PTR [rip+0xbd06],0x2        # 413204 <__sprintf_chk@plt+0x12014>
  4074fe:	mov    DWORD PTR [rip+0xbcf8],0x0        # 413200 <__sprintf_chk@plt+0x12010>
  407508:	mov    rbx,QWORD PTR [rax]
  40750b:	lea    rdx,[rax+0x8]
  40750f:	lea    rax,[rsp+0x20]
  407514:	mov    QWORD PTR [r14+0x20],rdx
  407518:	mov    QWORD PTR [rsp+0x10],rax
  40751d:	test   rbx,rbx
  407520:	je     407742 <__sprintf_chk@plt+0x6552>
  407526:	cmp    BYTE PTR [rbx],0x2d
  407529:	jne    407798 <__sprintf_chk@plt+0x65a8>
  40752f:	cmp    BYTE PTR [rbx+0x1],0x0
  407533:	jne    407798 <__sprintf_chk@plt+0x65a8>
  407539:	mov    rax,QWORD PTR [rip+0xba98]        # 412fd8 <__sprintf_chk@plt+0x11de8>
  407540:	mov    rax,QWORD PTR [rax]
  407543:	mov    QWORD PTR [rsp+0x18],rax
  407548:	mov    DWORD PTR [rip+0xbcbe],0x0        # 413210 <__sprintf_chk@plt+0x12020>
  407552:	mov    DWORD PTR [rip+0xbcb0],0x0        # 41320c <__sprintf_chk@plt+0x1201c>
  40755c:	mov    rdx,QWORD PTR [rsp+0x18]
  407561:	mov    rdi,QWORD PTR [rsp+0x10]
  407566:	mov    esi,0x100
  40756b:	call   4010f0 <fgets@plt>
  407570:	test   rax,rax
  407573:	je     407715 <__sprintf_chk@plt+0x6525>
  407579:	cmp    BYTE PTR [rsp+0x20],0x23
  40757e:	mov    r12,QWORD PTR [rsp+0x10]
  407583:	je     40769a <__sprintf_chk@plt+0x64aa>
  407589:	nop    DWORD PTR [rax+0x0]
  407590:	lea    rsi,[rip+0x7bbb]        # 40f152 <__sprintf_chk@plt+0xdf62>
  407597:	mov    rdi,r12
  40759a:	call   4011e0 <strstr@plt>
  40759f:	test   rax,rax
  4075a2:	je     40755c <__sprintf_chk@plt+0x636c>
  4075a4:	lea    r12,[rax+0x6]
  4075a8:	mov    ebp,0x7
  4075ad:	mov    r15,r13
  4075b0:	lea    rbx,[rip+0xb709]        # 412cc0 <__sprintf_chk@plt+0x11ad0>
  4075b7:	jmp    4075d7 <__sprintf_chk@plt+0x63e7>
  4075b9:	nop    DWORD PTR [rax+0x0]
  4075c0:	add    rbx,0x20
  4075c4:	mov    r15,QWORD PTR [rbx]
  4075c7:	test   r15,r15
  4075ca:	je     407610 <__sprintf_chk@plt+0x6420>
  4075cc:	mov    rdi,r15
  4075cf:	call   401090 <strlen@plt>
  4075d4:	mov    rbp,rax
  4075d7:	mov    rdx,rbp
  4075da:	mov    rsi,r15
  4075dd:	mov    rdi,r12
  4075e0:	call   401050 <strncmp@plt>
  4075e5:	test   eax,eax
  4075e7:	jne    4075c0 <__sprintf_chk@plt+0x63d0>
  4075e9:	mov    rsi,QWORD PTR [rbx+0x8]
  4075ed:	add    r12,rbp
  4075f0:	test   rsi,rsi
  4075f3:	je     407693 <__sprintf_chk@plt+0x64a3>
  4075f9:	mov    rdi,r12
  4075fc:	call   4010e0 <strcspn@plt>
  407601:	lea    rdx,[r12+rax*1]
  407605:	cmp    BYTE PTR [rdx],0x0
  407608:	jne    407670 <__sprintf_chk@plt+0x6480>
  40760a:	cmp    QWORD PTR [rbx],0x0
  40760e:	jne    407590 <__sprintf_chk@plt+0x63a0>
  407610:	mov    rdx,QWORD PTR [rsp+0x10]
  407615:	mov    ecx,DWORD PTR [rdx]
  407617:	add    rdx,0x4
  40761b:	lea    eax,[rcx-0x1010101]
  407621:	andn   eax,ecx,eax
  407626:	and    eax,0x80808080
  40762b:	je     407615 <__sprintf_chk@plt+0x6425>
  40762d:	mov    ecx,eax
  40762f:	mov    r8,r12
  407632:	shr    ecx,0x10
  407635:	test   eax,0x8080
  40763a:	cmove  eax,ecx
  40763d:	lea    rcx,[rdx+0x2]
  407641:	cmove  rdx,rcx
  407645:	mov    ecx,eax
  407647:	add    cl,al
  407649:	lea    rcx,[rip+0x7b02]        # 40f152 <__sprintf_chk@plt+0xdf62>
  407650:	sbb    rdx,0x3
  407654:	sub    rdx,QWORD PTR [rsp+0x10]
  407659:	mov    BYTE PTR [rsp+rdx*1+0x1f],0x0
  40765e:	lea    rdx,[rip+0x7d9b]        # 40f400 <__sprintf_chk@plt+0xe210>
  407665:	jmp    4077ce <__sprintf_chk@plt+0x65de>
  40766a:	nop    WORD PTR [rax+rax*1+0x0]
  407670:	mov    QWORD PTR [rsp+0x8],rax
  407675:	mov    BYTE PTR [rdx],0x0
  407678:	mov    rsi,r12
  40767b:	mov    edx,DWORD PTR [rbx+0x18]
  40767e:	mov    rdi,r14
  407681:	call   QWORD PTR [rbx+0x10]
  407684:	mov    rax,QWORD PTR [rsp+0x8]
  407689:	lea    r12,[r12+rax*1+0x1]
  40768e:	jmp    40760a <__sprintf_chk@plt+0x641a>
  407693:	xor    eax,eax
  407695:	jmp    407601 <__sprintf_chk@plt+0x6411>
  40769a:	cmp    BYTE PTR [rsp+0x21],0x69
  40769f:	jne    407590 <__sprintf_chk@plt+0x63a0>
  4076a5:	cmp    BYTE PTR [rsp+0x22],0x66
  4076aa:	jne    407590 <__sprintf_chk@plt+0x63a0>
  4076b0:	lea    rdi,[rip+0x7b25]        # 40f1dc <__sprintf_chk@plt+0xdfec>
  4076b7:	mov    ecx,0xb
  4076bc:	mov    rsi,r12
  4076bf:	mov    ebx,0x1
  4076c4:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4076c6:	je     4076ef <__sprintf_chk@plt+0x64ff>
  4076c8:	mov    r12,QWORD PTR [rsp+0x10]
  4076cd:	jmp    407590 <__sprintf_chk@plt+0x63a0>
  4076d2:	movzx  eax,BYTE PTR [rsp+0x21]
  4076d7:	cmp    al,0x65
  4076d9:	je     4077f0 <__sprintf_chk@plt+0x6600>
  4076df:	cmp    al,0x69
  4076e1:	jne    4076ef <__sprintf_chk@plt+0x64ff>
  4076e3:	xor    eax,eax
  4076e5:	cmp    BYTE PTR [rsp+0x22],0x66
  4076ea:	sete   al
  4076ed:	add    ebx,eax
  4076ef:	mov    rdx,QWORD PTR [rsp+0x18]
  4076f4:	mov    rdi,QWORD PTR [rsp+0x10]
  4076f9:	mov    esi,0x100
  4076fe:	call   4010f0 <fgets@plt>
  407703:	test   rax,rax
  407706:	je     40755c <__sprintf_chk@plt+0x636c>
  40770c:	cmp    BYTE PTR [rsp+0x20],0x23
  407711:	jne    4076ef <__sprintf_chk@plt+0x64ff>
  407713:	jmp    4076d2 <__sprintf_chk@plt+0x64e2>
  407715:	mov    rdi,QWORD PTR [rsp+0x18]
  40771a:	call   401080 <fclose@plt>
  40771f:	cmp    DWORD PTR [r14+0x8],0x7
  407724:	je     407809 <__sprintf_chk@plt+0x6619>
  40772a:	mov    rax,QWORD PTR [r14+0x20]
  40772e:	mov    rbx,QWORD PTR [rax]
  407731:	lea    rdx,[rax+0x8]
  407735:	mov    QWORD PTR [r14+0x20],rdx
  407739:	test   rbx,rbx
  40773c:	jne    407526 <__sprintf_chk@plt+0x6336>
  407742:	mov    eax,DWORD PTR [r14+0x8]
  407746:	cmp    eax,0x6
  407749:	je     4079af <__sprintf_chk@plt+0x67bf>
  40774f:	cmp    eax,0x9
  407752:	je     407990 <__sprintf_chk@plt+0x67a0>
  407758:	cmp    eax,0x5
  40775b:	je     4078f4 <__sprintf_chk@plt+0x6704>
  407761:	cmp    eax,0x8
  407764:	je     407862 <__sprintf_chk@plt+0x6672>
  40776a:	mov    rax,QWORD PTR [rsp+0x128]
  407772:	xor    rax,QWORD PTR fs:0x28
  40777b:	jne    40785d <__sprintf_chk@plt+0x666d>
  407781:	add    rsp,0x138
  407788:	pop    rbx
  407789:	pop    rbp
  40778a:	pop    r12
  40778c:	pop    r13
  40778e:	pop    r14
  407790:	pop    r15
  407792:	ret    
  407793:	nop    DWORD PTR [rax+rax*1+0x0]
  407798:	lea    rsi,[rip+0x2b41]        # 40a2e0 <__sprintf_chk@plt+0x90f0>
  40779f:	mov    rdi,rbx
  4077a2:	call   401190 <fopen@plt>
  4077a7:	test   rax,rax
  4077aa:	mov    QWORD PTR [rsp+0x18],rax
  4077af:	jne    407548 <__sprintf_chk@plt+0x6358>
  4077b5:	call   401040 <__errno_location@plt>
  4077ba:	mov    edi,DWORD PTR [rax]
  4077bc:	call   4011d0 <strerror@plt>
  4077c1:	lea    rdx,[rip+0x7c10]        # 40f3d8 <__sprintf_chk@plt+0xe1e8>
  4077c8:	mov    r8,rax
  4077cb:	mov    rcx,rbx
  4077ce:	mov    rax,QWORD PTR [rip+0xb81b]        # 412ff0 <__sprintf_chk@plt+0x11e00>
  4077d5:	mov    esi,0x1
  4077da:	mov    rdi,QWORD PTR [rax]
  4077dd:	xor    eax,eax
  4077df:	call   4011c0 <__fprintf_chk@plt>
  4077e4:	mov    edi,0x1
  4077e9:	call   4011a0 <exit@plt>
  4077ee:	xchg   ax,ax
  4077f0:	cmp    BYTE PTR [rsp+0x22],0x6e
  4077f5:	jne    4076ef <__sprintf_chk@plt+0x64ff>
  4077fb:	sub    ebx,0x1
  4077fe:	jne    4076ef <__sprintf_chk@plt+0x64ff>
  407804:	jmp    40755c <__sprintf_chk@plt+0x636c>
  407809:	lea    rdi,[r14+0x10]
  40780d:	call   406e20 <__sprintf_chk@plt+0x5c30>
  407812:	jmp    40772a <__sprintf_chk@plt+0x653a>
  407817:	mov    rcx,QWORD PTR [rdi+0x10]
  40781b:	lea    rdi,[rip+0x799d]        # 40f1bf <__sprintf_chk@plt+0xdfcf>
  407822:	mov    edx,0x1c
  407827:	mov    esi,0x1
  40782c:	call   4011b0 <fwrite@plt>
  407831:	mov    eax,DWORD PTR [r14+0x8]
  407835:	cmp    eax,0x8
  407838:	jne    4074df <__sprintf_chk@plt+0x62ef>
  40783e:	mov    rcx,QWORD PTR [r14+0x10]
  407842:	lea    rdi,[rip+0x7b57]        # 40f3a0 <__sprintf_chk@plt+0xe1b0>
  407849:	mov    edx,0x31
  40784e:	mov    esi,0x1
  407853:	call   4011b0 <fwrite@plt>
  407858:	jmp    4074df <__sprintf_chk@plt+0x62ef>
  40785d:	call   4010a0 <__stack_chk_fail@plt>
  407862:	mov    rcx,QWORD PTR [r14+0x10]
  407866:	lea    rdi,[rip+0x79a2]        # 40f20f <__sprintf_chk@plt+0xe01f>
  40786d:	mov    edx,0x5
  407872:	mov    esi,0x1
  407877:	lea    rbx,[rip+0xba62]        # 4132e0 <__sprintf_chk@plt+0x120f0>
  40787e:	lea    rbp,[rip+0x799c]        # 40f221 <__sprintf_chk@plt+0xe031>
  407885:	call   4011b0 <fwrite@plt>
  40788a:	mov    rcx,QWORD PTR [r14+0x10]
  40788e:	lea    rdi,[rip+0x7c0b]        # 40f4a0 <__sprintf_chk@plt+0xe2b0>
  407895:	mov    edx,0x3b
  40789a:	mov    esi,0x1
  40789f:	call   4011b0 <fwrite@plt>
  4078a4:	cmp    BYTE PTR [rip+0xba35],0x0        # 4132e0 <__sprintf_chk@plt+0x120f0>
  4078ab:	je     4078d5 <__sprintf_chk@plt+0x66e5>
  4078ad:	mov    rdi,QWORD PTR [r14+0x10]
  4078b1:	mov    rcx,rbx
  4078b4:	mov    rdx,rbp
  4078b7:	mov    esi,0x1
  4078bc:	xor    eax,eax
  4078be:	call   4011c0 <__fprintf_chk@plt>
  4078c3:	mov    rdi,rbx
  4078c6:	call   401090 <strlen@plt>
  4078cb:	lea    rbx,[rbx+rax*1+0x1]
  4078d0:	cmp    BYTE PTR [rbx],0x0
  4078d3:	jne    4078ad <__sprintf_chk@plt+0x66bd>
  4078d5:	mov    rcx,QWORD PTR [r14+0x10]
  4078d9:	lea    rdi,[rip+0x792f]        # 40f20f <__sprintf_chk@plt+0xe01f>
  4078e0:	mov    edx,0x5
  4078e5:	mov    esi,0x1
  4078ea:	call   4011b0 <fwrite@plt>
  4078ef:	jmp    40776a <__sprintf_chk@plt+0x657a>
  4078f4:	mov    rcx,QWORD PTR [r14+0x10]
  4078f8:	lea    rdi,[rip+0x7910]        # 40f20f <__sprintf_chk@plt+0xe01f>
  4078ff:	mov    edx,0x5
  407904:	mov    esi,0x1
  407909:	lea    rbp,[rip+0x7905]        # 40f215 <__sprintf_chk@plt+0xe025>
  407910:	call   4011b0 <fwrite@plt>
  407915:	mov    rcx,QWORD PTR [r14+0x10]
  407919:	lea    rdi,[rip+0x7b50]        # 40f470 <__sprintf_chk@plt+0xe280>
  407920:	mov    edx,0x2b
  407925:	mov    esi,0x1
  40792a:	call   4011b0 <fwrite@plt>
  40792f:	mov    rcx,QWORD PTR [r14+0x10]
  407933:	lea    rdi,[rip+0x78bd]        # 40f1f7 <__sprintf_chk@plt+0xe007>
  40793a:	mov    edx,0xe
  40793f:	mov    esi,0x1
  407944:	call   4011b0 <fwrite@plt>
  407949:	mov    eax,DWORD PTR [rip+0xb8b1]        # 413200 <__sprintf_chk@plt+0x12010>
  40794f:	lea    ebx,[rax-0x1]
  407952:	test   ebx,ebx
  407954:	jle    407971 <__sprintf_chk@plt+0x6781>
  407956:	mov    rcx,QWORD PTR [r14+0x10]
  40795a:	mov    edx,0xb
  40795f:	mov    esi,0x1
  407964:	mov    rdi,rbp
  407967:	call   4011b0 <fwrite@plt>
  40796c:	sub    ebx,0x1
  40796f:	jne    407956 <__sprintf_chk@plt+0x6766>
  407971:	mov    rcx,QWORD PTR [r14+0x10]
  407975:	lea    rdi,[rip+0x788a]        # 40f206 <__sprintf_chk@plt+0xe016>
  40797c:	mov    edx,0xe
  407981:	mov    esi,0x1
  407986:	call   4011b0 <fwrite@plt>
  40798b:	jmp    40776a <__sprintf_chk@plt+0x657a>
  407990:	mov    rcx,QWORD PTR [r14+0x10]
  407994:	lea    rdi,[rip+0x179d]        # 409138 <__sprintf_chk@plt+0x7f48>
  40799b:	mov    edx,0x3
  4079a0:	mov    esi,0x1
  4079a5:	call   4011b0 <fwrite@plt>
  4079aa:	jmp    40776a <__sprintf_chk@plt+0x657a>
  4079af:	mov    rcx,QWORD PTR [r14+0x10]
  4079b3:	lea    rdi,[rip+0x782d]        # 40f1e7 <__sprintf_chk@plt+0xdff7>
  4079ba:	mov    edx,0xf
  4079bf:	mov    esi,0x1
  4079c4:	call   4011b0 <fwrite@plt>
  4079c9:	mov    rdi,QWORD PTR [r14+0x10]
  4079cd:	mov    ecx,DWORD PTR [rip+0xb82d]        # 413200 <__sprintf_chk@plt+0x12010>
  4079d3:	lea    rdx,[rip+0x7a56]        # 40f430 <__sprintf_chk@plt+0xe240>
  4079da:	mov    esi,0x1
  4079df:	xor    eax,eax
  4079e1:	call   4011c0 <__fprintf_chk@plt>
  4079e6:	jmp    40776a <__sprintf_chk@plt+0x657a>
  4079eb:	mov    rcx,QWORD PTR [rdi+0x10]
  4079ef:	lea    rdi,[rip+0x37ea]        # 40b1e0 <__sprintf_chk@plt+0x9ff0>
  4079f6:	mov    edx,0x2e
  4079fb:	mov    esi,0x1
  407a00:	call   4011b0 <fwrite@plt>
  407a05:	mov    eax,DWORD PTR [r14+0x8]
  407a09:	jmp    407835 <__sprintf_chk@plt+0x6645>
  407a0e:	xchg   ax,ax
  407a10:	push   r15
  407a12:	push   r14
  407a14:	push   r13
  407a16:	push   r12
  407a18:	push   rbp
  407a19:	push   rbx
  407a1a:	sub    rsp,0x28
  407a1e:	mov    rbp,QWORD PTR [rdi]
  407a21:	test   rbp,rbp
  407a24:	je     407d40 <__sprintf_chk@plt+0x6b50>
  407a2a:	mov    r13d,esi
  407a2d:	mov    r12,rdi
  407a30:	mov    esi,0x20
  407a35:	mov    rdi,rbp
  407a38:	mov    ebx,edx
  407a3a:	call   4010b0 <strchr@plt>
  407a3f:	test   rax,rax
  407a42:	je     407d30 <__sprintf_chk@plt+0x6b40>
  407a48:	lea    rdx,[rax+0x1]
  407a4c:	mov    BYTE PTR [rax],0x0
  407a4f:	test   r13d,r13d
  407a52:	mov    QWORD PTR [r12],rdx
  407a56:	je     407ac0 <__sprintf_chk@plt+0x68d0>
  407a58:	lea    rdi,[rip+0x7a7d]        # 40f4dc <__sprintf_chk@plt+0xe2ec>
  407a5f:	mov    ecx,0x6
  407a64:	mov    rsi,rbp
  407a67:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  407a69:	jne    407b08 <__sprintf_chk@plt+0x6918>
  407a6f:	mov    r12,0x411e80
  407a76:	mov    rdi,QWORD PTR [r12]
  407a7a:	test   rdi,rdi
  407a7d:	je     407cf7 <__sprintf_chk@plt+0x6b07>
  407a83:	lea    r13,[rbp+0x6]
  407a87:	xor    ebx,ebx
  407a89:	jmp    407aa3 <__sprintf_chk@plt+0x68b3>
  407a8b:	nop    DWORD PTR [rax+rax*1+0x0]
  407a90:	lea    eax,[rbx+0x1]
  407a93:	mov    rdi,QWORD PTR [r12+rax*8]
  407a97:	mov    rbx,rax
  407a9a:	test   rdi,rdi
  407a9d:	je     407cf7 <__sprintf_chk@plt+0x6b07>
  407aa3:	mov    rsi,r13
  407aa6:	call   401110 <strcmp@plt>
  407aab:	test   eax,eax
  407aad:	jne    407a90 <__sprintf_chk@plt+0x68a0>
  407aaf:	add    rsp,0x28
  407ab3:	mov    eax,ebx
  407ab5:	pop    rbx
  407ab6:	pop    rbp
  407ab7:	pop    r12
  407ab9:	pop    r13
  407abb:	pop    r14
  407abd:	pop    r15
  407abf:	ret    
  407ac0:	test   ebx,ebx
  407ac2:	jne    407c88 <__sprintf_chk@plt+0x6a98>
  407ac8:	mov    r12,0x411fe0
  407acf:	mov    rdi,QWORD PTR [r12]
  407ad3:	test   rdi,rdi
  407ad6:	je     407cf7 <__sprintf_chk@plt+0x6b07>
  407adc:	xor    ebx,ebx
  407ade:	jmp    407af3 <__sprintf_chk@plt+0x6903>
  407ae0:	lea    eax,[rbx+0x1]
  407ae3:	mov    rdi,QWORD PTR [r12+rax*8]
  407ae7:	mov    rbx,rax
  407aea:	test   rdi,rdi
  407aed:	je     407cf7 <__sprintf_chk@plt+0x6b07>
  407af3:	mov    rsi,rbp
  407af6:	call   401110 <strcmp@plt>
  407afb:	test   eax,eax
  407afd:	jne    407ae0 <__sprintf_chk@plt+0x68f0>
  407aff:	jmp    407aaf <__sprintf_chk@plt+0x68bf>
  407b01:	nop    DWORD PTR [rax+0x0]
  407b08:	lea    rdi,[rip+0x79d4]        # 40f4e3 <__sprintf_chk@plt+0xe2f3>
  407b0f:	mov    ecx,0x5
  407b14:	mov    rsi,rbp
  407b17:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  407b19:	jne    407b68 <__sprintf_chk@plt+0x6978>
  407b1b:	mov    r12,0x411de0
  407b22:	mov    rdi,QWORD PTR [r12]
  407b26:	test   rdi,rdi
  407b29:	je     407cf7 <__sprintf_chk@plt+0x6b07>
  407b2f:	lea    r13,[rbp+0x5]
  407b33:	xor    ebx,ebx
  407b35:	jmp    407b53 <__sprintf_chk@plt+0x6963>
  407b37:	nop    WORD PTR [rax+rax*1+0x0]
  407b40:	lea    eax,[rbx+0x1]
  407b43:	mov    rdi,QWORD PTR [r12+rax*8]
  407b47:	mov    rbx,rax
  407b4a:	test   rdi,rdi
  407b4d:	je     407cf7 <__sprintf_chk@plt+0x6b07>
  407b53:	mov    rsi,r13
  407b56:	call   401110 <strcmp@plt>
  407b5b:	test   eax,eax
  407b5d:	jne    407b40 <__sprintf_chk@plt+0x6950>
  407b5f:	jmp    407aaf <__sprintf_chk@plt+0x68bf>
  407b64:	nop    DWORD PTR [rax+0x0]
  407b68:	lea    rdi,[rip+0x797a]        # 40f4e9 <__sprintf_chk@plt+0xe2f9>
  407b6f:	mov    ecx,0x7
  407b74:	mov    rsi,rbp
  407b77:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  407b79:	je     407c40 <__sprintf_chk@plt+0x6a50>
  407b7f:	lea    rdi,[rip+0x796b]        # 40f4f1 <__sprintf_chk@plt+0xe301>
  407b86:	mov    ecx,0x7
  407b8b:	mov    rsi,rbp
  407b8e:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  407b90:	jne    407cc0 <__sprintf_chk@plt+0x6ad0>
  407b96:	mov    r12,0x411f00
  407b9d:	mov    rax,QWORD PTR [r12]
  407ba1:	test   rax,rax
  407ba4:	mov    rbx,rax
  407ba7:	mov    QWORD PTR [rsp+0x18],rax
  407bac:	je     407cf7 <__sprintf_chk@plt+0x6b07>
  407bb2:	lea    rax,[rbp+0x7]
  407bb6:	mov    esi,0x5f
  407bbb:	mov    rdi,rax
  407bbe:	mov    r15,rax
  407bc1:	mov    QWORD PTR [rsp+0x8],rax
  407bc6:	call   4010b0 <strchr@plt>
  407bcb:	mov    r14,rax
  407bce:	mov    rcx,rax
  407bd1:	mov    rdi,rbx
  407bd4:	sub    rcx,r15
  407bd7:	lea    r13,[r14+0x1]
  407bdb:	xor    ebx,ebx
  407bdd:	mov    QWORD PTR [rsp+0x10],rcx
  407be2:	test   r14,r14
  407be5:	je     407ca8 <__sprintf_chk@plt+0x6ab8>
  407beb:	mov    rdx,QWORD PTR [rsp+0x10]
  407bf0:	mov    rsi,QWORD PTR [rsp+0x8]
  407bf5:	call   401050 <strncmp@plt>
  407bfa:	test   eax,eax
  407bfc:	jne    407ca8 <__sprintf_chk@plt+0x6ab8>
  407c02:	mov    rdi,QWORD PTR [rsp+0x18]
  407c07:	xor    r15d,r15d
  407c0a:	jmp    407c24 <__sprintf_chk@plt+0x6a34>
  407c0c:	nop    DWORD PTR [rax+0x0]
  407c10:	lea    eax,[r15+0x1]
  407c14:	mov    rdi,QWORD PTR [r12+rax*8]
  407c18:	mov    r15,rax
  407c1b:	test   rdi,rdi
  407c1e:	je     407ca8 <__sprintf_chk@plt+0x6ab8>
  407c24:	mov    rsi,r13
  407c27:	call   401110 <strcmp@plt>
  407c2c:	test   eax,eax
  407c2e:	jne    407c10 <__sprintf_chk@plt+0x6a20>
  407c30:	shl    ebx,0x5
  407c33:	add    ebx,r15d
  407c36:	jmp    407aaf <__sprintf_chk@plt+0x68bf>
  407c3b:	nop    DWORD PTR [rax+rax*1+0x0]
  407c40:	mov    r13,0x411b80
  407c47:	mov    rdi,QWORD PTR [r13+0x0]
  407c4b:	test   rdi,rdi
  407c4e:	je     407cf7 <__sprintf_chk@plt+0x6b07>
  407c54:	lea    r12,[rbp+0x7]
  407c58:	xor    ebx,ebx
  407c5a:	jmp    407c74 <__sprintf_chk@plt+0x6a84>
  407c5c:	nop    DWORD PTR [rax+0x0]
  407c60:	lea    eax,[rbx+0x1]
  407c63:	mov    rdi,QWORD PTR [r13+rax*8+0x0]
  407c68:	mov    rbx,rax
  407c6b:	test   rdi,rdi
  407c6e:	je     407cf7 <__sprintf_chk@plt+0x6b07>
  407c74:	mov    rsi,r12
  407c77:	call   401110 <strcmp@plt>
  407c7c:	test   eax,eax
  407c7e:	jne    407c60 <__sprintf_chk@plt+0x6a70>
  407c80:	jmp    407aaf <__sprintf_chk@plt+0x68bf>
  407c85:	nop    DWORD PTR [rax]
  407c88:	lea    rsi,[rip+0x786a]        # 40f4f9 <__sprintf_chk@plt+0xe309>
  407c8f:	mov    ecx,0x4
  407c94:	mov    rdi,rbp
  407c97:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  407c99:	jne    407ac8 <__sprintf_chk@plt+0x68d8>
  407c9f:	jmp    407aaf <__sprintf_chk@plt+0x68bf>
  407ca4:	nop    DWORD PTR [rax+0x0]
  407ca8:	lea    eax,[rbx+0x1]
  407cab:	mov    rdi,QWORD PTR [r12+rax*8]
  407caf:	mov    rbx,rax
  407cb2:	test   rdi,rdi
  407cb5:	jne    407be2 <__sprintf_chk@plt+0x69f2>
  407cbb:	jmp    407cf7 <__sprintf_chk@plt+0x6b07>
  407cbd:	nop    DWORD PTR [rax]
  407cc0:	movsx  eax,BYTE PTR [rbp+0x0]
  407cc4:	lea    edx,[rax-0x30]
  407cc7:	cmp    dl,0x9
  407cca:	ja     407ac0 <__sprintf_chk@plt+0x68d0>
  407cd0:	xor    ebx,ebx
  407cd2:	nop    WORD PTR [rax+rax*1+0x0]
  407cd8:	lea    edx,[rbx+rbx*4]
  407cdb:	add    rbp,0x1
  407cdf:	lea    ebx,[rax+rdx*2-0x30]
  407ce3:	movsx  eax,BYTE PTR [rbp+0x0]
  407ce7:	lea    edx,[rax-0x30]
  407cea:	cmp    dl,0x9
  407ced:	jbe    407cd8 <__sprintf_chk@plt+0x6ae8>
  407cef:	test   al,al
  407cf1:	je     407aaf <__sprintf_chk@plt+0x68bf>
  407cf7:	mov    rax,QWORD PTR [rip+0xb2f2]        # 412ff0 <__sprintf_chk@plt+0x11e00>
  407cfe:	mov    r8d,DWORD PTR [rip+0x115ff]        # 419304 <__sprintf_chk@plt+0x18114>
  407d05:	lea    rdx,[rip+0x7814]        # 40f520 <__sprintf_chk@plt+0xe330>
  407d0c:	mov    rcx,rbp
  407d0f:	mov    esi,0x1
  407d14:	mov    rdi,QWORD PTR [rax]
  407d17:	xor    eax,eax
  407d19:	call   4011c0 <__fprintf_chk@plt>
  407d1e:	mov    edi,0x1
  407d23:	call   4011a0 <exit@plt>
  407d28:	nop    DWORD PTR [rax+rax*1+0x0]
  407d30:	xor    edx,edx
  407d32:	jmp    407a4f <__sprintf_chk@plt+0x685f>
  407d37:	nop    WORD PTR [rax+rax*1+0x0]
  407d40:	xor    ebx,ebx
  407d42:	jmp    407aaf <__sprintf_chk@plt+0x68bf>
  407d47:	nop    WORD PTR [rax+rax*1+0x0]
  407d50:	push   r15
  407d52:	push   r14
  407d54:	push   r13
  407d56:	push   r12
  407d58:	mov    r12d,ecx
  407d5b:	push   rbp
  407d5c:	mov    ebp,edx
  407d5e:	push   rbx
  407d5f:	lea    edx,[rsi+0x1]
  407d62:	mov    ebx,esi
  407d64:	mov    esi,0xff
  407d69:	sub    rsp,0x18
  407d6d:	shl    rdx,0x2
  407d71:	call   4010c0 <memset@plt>
  407d76:	mov    r14d,DWORD PTR [rip+0xd563]        # 4152e0 <__sprintf_chk@plt+0x140f0>
  407d7d:	mov    ecx,ebp
  407d7f:	shr    ecx,0x5
  407d82:	test   r14d,r14d
  407d85:	je     407e9d <__sprintf_chk@plt+0x6cad>
  407d8b:	mov    r9,rax
  407d8e:	mov    eax,ebp
  407d90:	xor    esi,esi
  407d92:	neg    eax
  407d94:	lea    r15,[rip+0xd565]        # 415300 <__sprintf_chk@plt+0x14110>
  407d9b:	and    ebp,0x1f
  407d9e:	and    eax,0x1f
  407da1:	mov    DWORD PTR [rsp+0x8],eax
  407da5:	lea    eax,[rbx-0x1]
  407da8:	mov    DWORD PTR [rsp+0xc],eax
  407dac:	jmp    407e5b <__sprintf_chk@plt+0x6c6b>
  407db1:	nop    DWORD PTR [rax+0x0]
  407db8:	movzx  eax,BYTE PTR [rsp+0x8]
  407dbd:	mov    edx,r8d
  407dc0:	rol    edx,cl
  407dc2:	sub    edx,r8d
  407dc5:	shrx   eax,edx,eax
  407dca:	shlx   edx,edx,ebp
  407dcf:	or     eax,edx
  407dd1:	xor    edx,edx
  407dd3:	div    ebx
  407dd5:	mov    eax,edx
  407dd7:	lea    rax,[r9+rax*4]
  407ddb:	cmp    DWORD PTR [rax],0xffffffff
  407dde:	je     407e92 <__sprintf_chk@plt+0x6ca2>
  407de4:	lea    eax,[rdx+0x1]
  407de7:	lea    r10,[r9+rax*4]
  407deb:	mov    r11,rax
  407dee:	mov    r8d,DWORD PTR [r10]
  407df1:	cmp    r8d,0xffffffff
  407df5:	je     407e4f <__sprintf_chk@plt+0x6c5f>
  407df7:	cmp    edx,DWORD PTR [rsp+0xc]
  407dfb:	jae    407ed1 <__sprintf_chk@plt+0x6ce1>
  407e01:	lea    eax,[rdx+0x2]
  407e04:	lea    r13,[r9+rax*4]
  407e08:	cmp    DWORD PTR [r13+0x0],0xffffffff
  407e0d:	jne    407ed1 <__sprintf_chk@plt+0x6ce1>
  407e13:	mov    edx,r8d
  407e16:	and    edx,0xffffff
  407e1c:	test   r12d,r12d
  407e1f:	je     407eb8 <__sprintf_chk@plt+0x6cc8>
  407e25:	mov    eax,edx
  407e27:	rol    eax,cl
  407e29:	sub    eax,edx
  407e2b:	mov    edx,eax
  407e2d:	movzx  eax,BYTE PTR [rsp+0x8]
  407e32:	shrx   eax,edx,eax
  407e37:	shlx   edx,edx,ebp
  407e3c:	or     eax,edx
  407e3e:	xor    edx,edx
  407e40:	div    ebx
  407e42:	cmp    r11d,edx
  407e45:	jne    407ed1 <__sprintf_chk@plt+0x6ce1>
  407e4b:	mov    DWORD PTR [r13+0x0],r8d
  407e4f:	add    rsi,0x1
  407e53:	mov    DWORD PTR [r10],edi
  407e56:	cmp    r14d,esi
  407e59:	jbe    407e9d <__sprintf_chk@plt+0x6cad>
  407e5b:	mov    edi,DWORD PTR [r15+rsi*4]
  407e5f:	mov    r8d,edi
  407e62:	and    r8d,0xffffff
  407e69:	test   r12d,r12d
  407e6c:	jne    407db8 <__sprintf_chk@plt+0x6bc8>
  407e72:	shlx   eax,r8d,ecx
  407e77:	xor    edx,edx
  407e79:	sub    eax,r8d
  407e7c:	shlx   eax,eax,ebp
  407e81:	div    ebx
  407e83:	mov    eax,edx
  407e85:	lea    rax,[r9+rax*4]
  407e89:	cmp    DWORD PTR [rax],0xffffffff
  407e8c:	jne    407de4 <__sprintf_chk@plt+0x6bf4>
  407e92:	add    rsi,0x1
  407e96:	mov    DWORD PTR [rax],edi
  407e98:	cmp    r14d,esi
  407e9b:	ja     407e5b <__sprintf_chk@plt+0x6c6b>
  407e9d:	add    rsp,0x18
  407ea1:	mov    eax,0x1
  407ea6:	pop    rbx
  407ea7:	pop    rbp
  407ea8:	pop    r12
  407eaa:	pop    r13
  407eac:	pop    r14
  407eae:	pop    r15
  407eb0:	ret    
  407eb1:	nop    DWORD PTR [rax+0x0]
  407eb8:	shlx   eax,edx,ecx
  407ebd:	sub    eax,edx
  407ebf:	xor    edx,edx
  407ec1:	shlx   eax,eax,ebp
  407ec6:	div    ebx
  407ec8:	cmp    r11d,edx
  407ecb:	je     407e4b <__sprintf_chk@plt+0x6c5b>
  407ed1:	add    rsp,0x18
  407ed5:	xor    eax,eax
  407ed7:	pop    rbx
  407ed8:	pop    rbp
  407ed9:	pop    r12
  407edb:	pop    r13
  407edd:	pop    r14
  407edf:	pop    r15
  407ee1:	ret    
  407ee2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  407eed:	nop    DWORD PTR [rax]
  407ef0:	push   r13
  407ef2:	push   r12
  407ef4:	mov    r13d,edx
  407ef7:	push   rbp
  407ef8:	push   rbx
  407ef9:	mov    rbp,rdi
  407efc:	lea    ebx,[rdx+0x1]
  407eff:	lea    rdx,[rip+0x7652]        # 40f558 <__sprintf_chk@plt+0xe368>
  407f06:	xor    eax,eax
  407f08:	sub    rsp,0x8
  407f0c:	mov    r8d,DWORD PTR [rsi]
  407f0f:	mov    rdi,QWORD PTR [rdi]
  407f12:	mov    r12,rsi
  407f15:	mov    ecx,ebx
  407f17:	mov    esi,0x1
  407f1c:	call   4011c0 <__fprintf_chk@plt>
  407f21:	cmp    ebx,0x1
  407f24:	jbe    407f5e <__sprintf_chk@plt+0x6d6e>
  407f26:	lea    eax,[r13-0x1]
  407f2a:	lea    rbx,[r12+0x4]
  407f2f:	lea    r13,[r12+rax*4+0x8]
  407f34:	lea    r12,[rip+0x75c2]        # 40f4fd <__sprintf_chk@plt+0xe30d>
  407f3b:	nop    DWORD PTR [rax+rax*1+0x0]
  407f40:	mov    ecx,DWORD PTR [rbx]
  407f42:	mov    rdi,QWORD PTR [rbp+0x0]
  407f46:	xor    eax,eax
  407f48:	mov    rdx,r12
  407f4b:	mov    esi,0x1
  407f50:	add    rbx,0x4
  407f54:	call   4011c0 <__fprintf_chk@plt>
  407f59:	cmp    rbx,r13
  407f5c:	jne    407f40 <__sprintf_chk@plt+0x6d50>
  407f5e:	mov    rcx,QWORD PTR [rbp+0x0]
  407f62:	add    rsp,0x8
  407f66:	lea    rdi,[rip+0x72a2]        # 40f20f <__sprintf_chk@plt+0xe01f>
  407f6d:	pop    rbx
  407f6e:	pop    rbp
  407f6f:	pop    r12
  407f71:	pop    r13
  407f73:	mov    edx,0x5
  407f78:	mov    esi,0x1
  407f7d:	jmp    4011b0 <fwrite@plt>
  407f82:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  407f8d:	nop    DWORD PTR [rax]
  407f90:	push   r15
  407f92:	push   r14
  407f94:	push   r13
  407f96:	push   r12
  407f98:	push   rbp
  407f99:	push   rbx
  407f9a:	sub    rsp,0x8018
  407fa1:	mov    ebp,DWORD PTR [rip+0xd339]        # 4152e0 <__sprintf_chk@plt+0x140f0>
  407fa7:	mov    rax,QWORD PTR fs:0x28
  407fb0:	mov    QWORD PTR [rsp+0x8008],rax
  407fb8:	xor    eax,eax
  407fba:	or     ebp,0x1
  407fbd:	cmp    ebp,0x1fff
  407fc3:	ja     4080d7 <__sprintf_chk@plt+0x6ee7>
  407fc9:	mov    r13,rdi
  407fcc:	mov    r12,rsp
  407fcf:	xor    ebx,ebx
  407fd1:	jmp    407fe3 <__sprintf_chk@plt+0x6df3>
  407fd3:	nop    DWORD PTR [rax+rax*1+0x0]
  407fd8:	add    ebx,0x1
  407fdb:	cmp    ebx,0x400
  407fe1:	je     408058 <__sprintf_chk@plt+0x6e68>
  407fe3:	xor    ecx,ecx
  407fe5:	mov    edx,ebx
  407fe7:	mov    esi,ebp
  407fe9:	mov    rdi,r12
  407fec:	call   407d50 <__sprintf_chk@plt+0x6b60>
  407ff1:	test   eax,eax
  407ff3:	je     407fd8 <__sprintf_chk@plt+0x6de8>
  407ff5:	lea    rdi,[r13+0x10]
  407ff9:	mov    edx,ebp
  407ffb:	mov    rsi,r12
  407ffe:	call   407ef0 <__sprintf_chk@plt+0x6d00>
  408003:	mov    rdi,QWORD PTR [r13+0x10]
  408007:	mov    ecx,ebx
  408009:	lea    rdx,[rip+0x75a0]        # 40f5b0 <__sprintf_chk@plt+0xe3c0>
  408010:	and    ebx,0x1f
  408013:	shr    ecx,0x5
  408016:	mov    r9d,ebp
  408019:	mov    r8d,ebx
  40801c:	mov    esi,0x1
  408021:	xor    eax,eax
  408023:	call   4011c0 <__fprintf_chk@plt>
  408028:	mov    rax,QWORD PTR [rsp+0x8008]
  408030:	xor    rax,QWORD PTR fs:0x28
  408039:	jne    408101 <__sprintf_chk@plt+0x6f11>
  40803f:	add    rsp,0x8018
  408046:	pop    rbx
  408047:	pop    rbp
  408048:	pop    r12
  40804a:	pop    r13
  40804c:	pop    r14
  40804e:	pop    r15
  408050:	ret    
  408051:	nop    DWORD PTR [rax+0x0]
  408058:	xor    ebx,ebx
  40805a:	nop    WORD PTR [rax+rax*1+0x0]
  408060:	add    ebx,0x1
  408063:	cmp    ebx,0x400
  408069:	je     4080c8 <__sprintf_chk@plt+0x6ed8>
  40806b:	mov    r15d,ebx
  40806e:	and    r15d,0x1f
  408072:	je     408060 <__sprintf_chk@plt+0x6e70>
  408074:	mov    r14d,ebx
  408077:	shr    r14d,0x5
  40807b:	test   r14d,r14d
  40807e:	je     408060 <__sprintf_chk@plt+0x6e70>
  408080:	mov    ecx,0x1
  408085:	mov    edx,ebx
  408087:	mov    esi,ebp
  408089:	mov    rdi,r12
  40808c:	call   407d50 <__sprintf_chk@plt+0x6b60>
  408091:	test   eax,eax
  408093:	je     408060 <__sprintf_chk@plt+0x6e70>
  408095:	lea    rdi,[r13+0x10]
  408099:	mov    edx,ebp
  40809b:	mov    rsi,r12
  40809e:	call   407ef0 <__sprintf_chk@plt+0x6d00>
  4080a3:	mov    rdi,QWORD PTR [r13+0x10]
  4080a7:	lea    rdx,[rip+0x753a]        # 40f5e8 <__sprintf_chk@plt+0xe3f8>
  4080ae:	mov    r9d,ebp
  4080b1:	mov    r8d,r15d
  4080b4:	mov    ecx,r14d
  4080b7:	mov    esi,0x1
  4080bc:	xor    eax,eax
  4080be:	call   4011c0 <__fprintf_chk@plt>
  4080c3:	jmp    408028 <__sprintf_chk@plt+0x6e38>
  4080c8:	add    ebp,0x2
  4080cb:	cmp    ebp,0x1fff
  4080d1:	jbe    407fcf <__sprintf_chk@plt+0x6ddf>
  4080d7:	mov    rax,QWORD PTR [rip+0xaf12]        # 412ff0 <__sprintf_chk@plt+0x11e00>
  4080de:	lea    rdi,[rip+0x74a3]        # 40f588 <__sprintf_chk@plt+0xe398>
  4080e5:	mov    edx,0x26
  4080ea:	mov    esi,0x1
  4080ef:	mov    rcx,QWORD PTR [rax]
  4080f2:	call   4011b0 <fwrite@plt>
  4080f7:	mov    edi,0x1
  4080fc:	call   4011a0 <exit@plt>
  408101:	call   4010a0 <__stack_chk_fail@plt>
  408106:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408110:	push   r15
  408112:	push   r14
  408114:	push   r13
  408116:	push   r12
  408118:	push   rbp
  408119:	push   rbx
  40811a:	sub    rsp,0x138
  408121:	mov    rax,QWORD PTR fs:0x28
  40812a:	mov    QWORD PTR [rsp+0x128],rax
  408132:	xor    eax,eax
  408134:	mov    rax,QWORD PTR [rdi+0x20]
  408138:	mov    rbx,QWORD PTR [rax]
  40813b:	test   rbx,rbx
  40813e:	je     4084b8 <__sprintf_chk@plt+0x72c8>
  408144:	cmp    BYTE PTR [rbx],0x2d
  408147:	mov    r13,rdi
  40814a:	je     408420 <__sprintf_chk@plt+0x7230>
  408150:	lea    rsi,[rip+0x2189]        # 40a2e0 <__sprintf_chk@plt+0x90f0>
  408157:	mov    rdi,rbx
  40815a:	call   401190 <fopen@plt>
  40815f:	test   rax,rax
  408162:	mov    rbp,rax
  408165:	je     408511 <__sprintf_chk@plt+0x7321>
  40816b:	mov    rcx,QWORD PTR [r13+0x10]
  40816f:	lea    rdi,[rip+0x306a]        # 40b1e0 <__sprintf_chk@plt+0x9ff0>
  408176:	mov    edx,0x2e
  40817b:	mov    esi,0x1
  408180:	lea    rbx,[rsp+0x20]
  408185:	lea    r12,[rip+0x737a]        # 40f506 <__sprintf_chk@plt+0xe316>
  40818c:	call   4011b0 <fwrite@plt>
  408191:	mov    rcx,QWORD PTR [r13+0x10]
  408195:	lea    rdi,[rip+0x74ac]        # 40f648 <__sprintf_chk@plt+0xe458>
  40819c:	mov    edx,0x26
  4081a1:	mov    esi,0x1
  4081a6:	lea    r14,[rbx+0x6]
  4081aa:	call   4011b0 <fwrite@plt>
  4081af:	lea    rax,[rsp+0x18]
  4081b4:	mov    DWORD PTR [rip+0x11146],0x0        # 419304 <__sprintf_chk@plt+0x18114>
  4081be:	mov    DWORD PTR [rip+0x11138],0x0        # 419300 <__sprintf_chk@plt+0x18110>
  4081c8:	mov    DWORD PTR [rip+0xd10e],0x0        # 4152e0 <__sprintf_chk@plt+0x140f0>
  4081d2:	mov    QWORD PTR [rsp],rax
  4081d6:	jmp    408200 <__sprintf_chk@plt+0x7010>
  4081d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4081e0:	mov    eax,DWORD PTR [rip+0x1111e]        # 419304 <__sprintf_chk@plt+0x18114>
  4081e6:	mov    ecx,0x6
  4081eb:	mov    rsi,rbx
  4081ee:	mov    rdi,r12
  4081f1:	lea    r15d,[rax+0x1]
  4081f5:	mov    DWORD PTR [rip+0x11108],r15d        # 419304 <__sprintf_chk@plt+0x18114>
  4081fc:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4081fe:	je     408270 <__sprintf_chk@plt+0x7080>
  408200:	mov    rdx,rbp
  408203:	mov    esi,0x100
  408208:	mov    rdi,rbx
  40820b:	call   4010f0 <fgets@plt>
  408210:	test   rax,rax
  408213:	jne    4081e0 <__sprintf_chk@plt+0x6ff0>
  408215:	mov    rdi,rbp
  408218:	call   401080 <fclose@plt>
  40821d:	mov    rcx,QWORD PTR [r13+0x10]
  408221:	lea    rdi,[rip+0x6fe7]        # 40f20f <__sprintf_chk@plt+0xe01f>
  408228:	mov    edx,0x5
  40822d:	mov    esi,0x1
  408232:	call   4011b0 <fwrite@plt>
  408237:	mov    rdi,r13
  40823a:	call   407f90 <__sprintf_chk@plt+0x6da0>
  40823f:	mov    rax,QWORD PTR [rsp+0x128]
  408247:	xor    rax,QWORD PTR fs:0x28
  408250:	jne    40850c <__sprintf_chk@plt+0x731c>
  408256:	add    rsp,0x138
  40825d:	pop    rbx
  40825e:	pop    rbp
  40825f:	pop    r12
  408261:	pop    r13
  408263:	pop    r14
  408265:	pop    r15
  408267:	ret    
  408268:	nop    DWORD PTR [rax+rax*1+0x0]
  408270:	mov    esi,0x29
  408275:	mov    rdi,r14
  408278:	call   4010b0 <strchr@plt>
  40827d:	movzx  edx,BYTE PTR [rsp+0x26]
  408282:	test   rax,rax
  408285:	setne  cl
  408288:	cmp    dl,0x28
  40828b:	jne    4083c0 <__sprintf_chk@plt+0x71d0>
  408291:	test   cl,cl
  408293:	je     4083c0 <__sprintf_chk@plt+0x71d0>
  408299:	mov    r15,QWORD PTR [rsp]
  40829d:	mov    BYTE PTR [rax],0x0
  4082a0:	lea    rax,[rbx+0x7]
  4082a4:	xor    edx,edx
  4082a6:	xor    esi,esi
  4082a8:	mov    QWORD PTR [rsp+0x18],rax
  4082ad:	mov    rdi,r15
  4082b0:	call   407a10 <__sprintf_chk@plt+0x6820>
  4082b5:	xor    esi,esi
  4082b7:	mov    rdi,r15
  4082ba:	mov    edx,0x7f
  4082bf:	mov    QWORD PTR [rsp],r15
  4082c3:	mov    DWORD PTR [rsp+0xc],eax
  4082c7:	call   407a10 <__sprintf_chk@plt+0x6820>
  4082cc:	mov    rdi,QWORD PTR [rsp]
  4082d0:	mov    edx,0x3ff
  4082d5:	mov    esi,0x1
  4082da:	mov    r15d,eax
  4082dd:	call   407a10 <__sprintf_chk@plt+0x6820>
  4082e2:	mov    ecx,0x18
  4082e7:	shlx   r8d,DWORD PTR [rip+0x11010],ecx        # 419300 <__sprintf_chk@plt+0x18110>
  4082f0:	mov    r10d,DWORD PTR [rip+0xcfe9]        # 4152e0 <__sprintf_chk@plt+0x140f0>
  4082f7:	or     r8d,eax
  4082fa:	mov    eax,DWORD PTR [rsp+0xc]
  4082fe:	shl    eax,0x11
  408301:	or     r8d,eax
  408304:	mov    eax,r15d
  408307:	shl    eax,0xa
  40830a:	or     r8d,eax
  40830d:	cmp    r10d,0xfff
  408314:	ja     4084e2 <__sprintf_chk@plt+0x72f2>
  40831a:	test   r10d,r10d
  40831d:	je     408477 <__sprintf_chk@plt+0x7287>
  408323:	lea    eax,[r10-0x1]
  408327:	lea    r9,[rip+0xcfd2]        # 415300 <__sprintf_chk@plt+0x14110>
  40832e:	mov    r11d,r8d
  408331:	and    r11d,0xffffff
  408338:	mov    rdx,rax
  40833b:	mov    eax,DWORD PTR [r9+rax*4]
  40833f:	mov    ecx,eax
  408341:	and    ecx,0xffffff
  408347:	cmp    r11d,ecx
  40834a:	ja     408483 <__sprintf_chk@plt+0x7293>
  408350:	mov    ecx,r8d
  408353:	xor    ecx,eax
  408355:	and    ecx,0xffffff
  40835b:	je     40848b <__sprintf_chk@plt+0x729b>
  408361:	mov    ecx,r10d
  408364:	lea    rcx,[r9+rcx*4]
  408368:	jmp    40839e <__sprintf_chk@plt+0x71ae>
  40836a:	nop    WORD PTR [rax+rax*1+0x0]
  408370:	lea    eax,[rdx-0x1]
  408373:	mov    rsi,rax
  408376:	mov    eax,DWORD PTR [r9+rax*4]
  40837a:	mov    edi,eax
  40837c:	and    edi,0xffffff
  408382:	cmp    edi,r11d
  408385:	jb     4083a6 <__sprintf_chk@plt+0x71b6>
  408387:	mov    edx,r8d
  40838a:	sub    rcx,0x4
  40838e:	xor    edx,eax
  408390:	and    edx,0xffffff
  408396:	je     40848b <__sprintf_chk@plt+0x729b>
  40839c:	mov    edx,esi
  40839e:	test   edx,edx
  4083a0:	mov    DWORD PTR [rcx],eax
  4083a2:	jne    408370 <__sprintf_chk@plt+0x7180>
  4083a4:	xor    edx,edx
  4083a6:	add    r10d,0x1
  4083aa:	mov    DWORD PTR [r9+rdx*4],r8d
  4083ae:	mov    DWORD PTR [rip+0xcf2b],r10d        # 4152e0 <__sprintf_chk@plt+0x140f0>
  4083b5:	jmp    408200 <__sprintf_chk@plt+0x7010>
  4083ba:	nop    WORD PTR [rax+rax*1+0x0]
  4083c0:	cmp    dl,0x46
  4083c3:	je     4083ce <__sprintf_chk@plt+0x71de>
  4083c5:	cmp    dl,0x58
  4083c8:	jne    40854a <__sprintf_chk@plt+0x735a>
  4083ce:	cmp    BYTE PTR [rsp+0x27],0x28
  4083d3:	jne    40854a <__sprintf_chk@plt+0x735a>
  4083d9:	test   cl,cl
  4083db:	je     40854a <__sprintf_chk@plt+0x735a>
  4083e1:	mov    BYTE PTR [rax],0x0
  4083e4:	mov    eax,DWORD PTR [rip+0x10f16]        # 419300 <__sprintf_chk@plt+0x18110>
  4083ea:	test   eax,eax
  4083ec:	jne    408439 <__sprintf_chk@plt+0x7249>
  4083ee:	cmp    BYTE PTR [rsp+0x26],0x58
  4083f3:	lea    rcx,[rbx+0x8]
  4083f7:	mov    rdi,QWORD PTR [r13+0x10]
  4083fb:	je     408462 <__sprintf_chk@plt+0x7272>
  4083fd:	lea    rdx,[rip+0x710e]        # 40f512 <__sprintf_chk@plt+0xe322>
  408404:	mov    esi,0x1
  408409:	xor    eax,eax
  40840b:	call   4011c0 <__fprintf_chk@plt>
  408410:	add    DWORD PTR [rip+0x10ee9],0x1        # 419300 <__sprintf_chk@plt+0x18110>
  408417:	jmp    408200 <__sprintf_chk@plt+0x7010>
  40841c:	nop    DWORD PTR [rax+0x0]
  408420:	cmp    BYTE PTR [rbx+0x1],0x0
  408424:	jne    408150 <__sprintf_chk@plt+0x6f60>
  40842a:	mov    rax,QWORD PTR [rip+0xaba7]        # 412fd8 <__sprintf_chk@plt+0x11de8>
  408431:	mov    rbp,QWORD PTR [rax]
  408434:	jmp    40816b <__sprintf_chk@plt+0x6f7b>
  408439:	mov    rcx,QWORD PTR [r13+0x10]
  40843d:	lea    rdi,[rip+0x6d95]        # 40f1d9 <__sprintf_chk@plt+0xdfe9>
  408444:	mov    edx,0x2
  408449:	mov    esi,0x1
  40844e:	call   4011b0 <fwrite@plt>
  408453:	cmp    BYTE PTR [rsp+0x26],0x58
  408458:	lea    rcx,[rbx+0x8]
  40845c:	mov    rdi,QWORD PTR [r13+0x10]
  408460:	jne    4083fd <__sprintf_chk@plt+0x720d>
  408462:	lea    rdx,[rip+0x70a4]        # 40f50d <__sprintf_chk@plt+0xe31d>
  408469:	mov    esi,0x1
  40846e:	xor    eax,eax
  408470:	call   4011c0 <__fprintf_chk@plt>
  408475:	jmp    408410 <__sprintf_chk@plt+0x7220>
  408477:	lea    r9,[rip+0xce82]        # 415300 <__sprintf_chk@plt+0x14110>
  40847e:	jmp    4083a4 <__sprintf_chk@plt+0x71b4>
  408483:	mov    edx,r10d
  408486:	jmp    4083a6 <__sprintf_chk@plt+0x71b6>
  40848b:	mov    rax,QWORD PTR [rip+0xab5e]        # 412ff0 <__sprintf_chk@plt+0x11e00>
  408492:	mov    ecx,DWORD PTR [rip+0x10e6c]        # 419304 <__sprintf_chk@plt+0x18114>
  408498:	lea    rdx,[rip+0x71d1]        # 40f670 <__sprintf_chk@plt+0xe480>
  40849f:	mov    esi,0x1
  4084a4:	mov    rdi,QWORD PTR [rax]
  4084a7:	xor    eax,eax
  4084a9:	call   4011c0 <__fprintf_chk@plt>
  4084ae:	mov    edi,0x1
  4084b3:	call   4011a0 <exit@plt>
  4084b8:	mov    rax,QWORD PTR [rip+0xab31]        # 412ff0 <__sprintf_chk@plt+0x11e00>
  4084bf:	lea    rdi,[rip+0x7162]        # 40f628 <__sprintf_chk@plt+0xe438>
  4084c6:	mov    edx,0x1e
  4084cb:	mov    esi,0x1
  4084d0:	mov    rcx,QWORD PTR [rax]
  4084d3:	call   4011b0 <fwrite@plt>
  4084d8:	mov    edi,0x1
  4084dd:	call   4011a0 <exit@plt>
  4084e2:	mov    rax,QWORD PTR [rip+0xab07]        # 412ff0 <__sprintf_chk@plt+0x11e00>
  4084e9:	lea    rdi,[rip+0x71b0]        # 40f6a0 <__sprintf_chk@plt+0xe4b0>
  4084f0:	mov    edx,0x35
  4084f5:	mov    esi,0x1
  4084fa:	mov    rcx,QWORD PTR [rax]
  4084fd:	call   4011b0 <fwrite@plt>
  408502:	mov    edi,0x1
  408507:	call   4011a0 <exit@plt>
  40850c:	call   4010a0 <__stack_chk_fail@plt>
  408511:	call   401040 <__errno_location@plt>
  408516:	mov    edi,DWORD PTR [rax]
  408518:	call   4011d0 <strerror@plt>
  40851d:	mov    r8,rax
  408520:	mov    rax,QWORD PTR [rip+0xaac9]        # 412ff0 <__sprintf_chk@plt+0x11e00>
  408527:	lea    rdx,[rip+0x6eaa]        # 40f3d8 <__sprintf_chk@plt+0xe1e8>
  40852e:	mov    rcx,rbx
  408531:	mov    esi,0x1
  408536:	mov    rdi,QWORD PTR [rax]
  408539:	xor    eax,eax
  40853b:	call   4011c0 <__fprintf_chk@plt>
  408540:	mov    edi,0x1
  408545:	call   4011a0 <exit@plt>
  40854a:	mov    rdx,rbx
  40854d:	mov    ecx,DWORD PTR [rdx]
  40854f:	add    rdx,0x4
  408553:	lea    eax,[rcx-0x1010101]
  408559:	andn   eax,ecx,eax
  40855e:	and    eax,0x80808080
  408563:	je     40854d <__sprintf_chk@plt+0x735d>
  408565:	mov    ecx,eax
  408567:	lea    r8,[rbx+0x6]
  40856b:	mov    r9d,r15d
  40856e:	shr    ecx,0x10
  408571:	test   eax,0x8080
  408576:	mov    esi,0x1
  40857b:	cmove  eax,ecx
  40857e:	lea    rcx,[rdx+0x2]
  408582:	cmove  rdx,rcx
  408586:	mov    ecx,eax
  408588:	add    cl,al
  40858a:	mov    rax,QWORD PTR [rip+0xaa5f]        # 412ff0 <__sprintf_chk@plt+0x11e00>
  408591:	lea    rcx,[rip+0x6f6e]        # 40f506 <__sprintf_chk@plt+0xe316>
  408598:	sbb    rdx,0x3
  40859c:	sub    rdx,rbx
  40859f:	mov    rdi,QWORD PTR [rax]
  4085a2:	mov    BYTE PTR [rsp+rdx*1+0x1f],0x0
  4085a7:	lea    rdx,[rip+0x712a]        # 40f6d8 <__sprintf_chk@plt+0xe4e8>
  4085ae:	xor    eax,eax
  4085b0:	call   4011c0 <__fprintf_chk@plt>
  4085b5:	mov    edi,0x1
  4085ba:	call   4011a0 <exit@plt>
  4085bf:	nop
  4085c0:	endbr64 
  4085c4:	push   r15
  4085c6:	lea    r15,[rip+0x941b]        # 4119e8 <__sprintf_chk@plt+0x107f8>
  4085cd:	push   r14
  4085cf:	mov    r14,rdx
  4085d2:	push   r13
  4085d4:	mov    r13,rsi
  4085d7:	push   r12
  4085d9:	mov    r12d,edi
  4085dc:	push   rbp
  4085dd:	lea    rbp,[rip+0x940c]        # 4119f0 <__sprintf_chk@plt+0x10800>
  4085e4:	push   rbx
  4085e5:	sub    rbp,r15
  4085e8:	sub    rsp,0x8
  4085ec:	call   401000 <free@plt-0x30>
  4085f1:	sar    rbp,0x3
  4085f5:	je     408616 <__sprintf_chk@plt+0x7426>
  4085f7:	xor    ebx,ebx
  4085f9:	nop    DWORD PTR [rax+0x0]
  408600:	mov    rdx,r14
  408603:	mov    rsi,r13
  408606:	mov    edi,r12d
  408609:	call   QWORD PTR [r15+rbx*8]
  40860d:	add    rbx,0x1
  408611:	cmp    rbp,rbx
  408614:	jne    408600 <__sprintf_chk@plt+0x7410>
  408616:	add    rsp,0x8
  40861a:	pop    rbx
  40861b:	pop    rbp
  40861c:	pop    r12
  40861e:	pop    r13
  408620:	pop    r14
  408622:	pop    r15
  408624:	ret    
  408625:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  408630:	endbr64 
  408634:	ret    

Disassembly of section .fini:

0000000000408638 <.fini>:
  408638:	endbr64 
  40863c:	sub    rsp,0x8
  408640:	add    rsp,0x8
  408644:	ret    
