
../repos/prog2/0.11.1:     file format elf64-x86-64


Disassembly of section .init:

0000000000401000 <.init>:
  401000:	endbr64 
  401004:	sub    rsp,0x8
  401008:	mov    rax,QWORD PTR [rip+0x2fe9]        # 403ff8 <__gmon_start__>
  40100f:	test   rax,rax
  401012:	je     401016 <__stack_chk_fail@plt-0x1a>
  401014:	call   rax
  401016:	add    rsp,0x8
  40101a:	ret    

Disassembly of section .plt:

0000000000401020 <__stack_chk_fail@plt-0x10>:
  401020:	push   QWORD PTR [rip+0x2fe2]        # 404008 <_IO_stdin_used@@Base+0x2008>
  401026:	jmp    QWORD PTR [rip+0x2fe4]        # 404010 <_IO_stdin_used@@Base+0x2010>
  40102c:	nop    DWORD PTR [rax+0x0]

0000000000401030 <__stack_chk_fail@plt>:
  401030:	jmp    QWORD PTR [rip+0x2fe2]        # 404018 <__stack_chk_fail@GLIBC_2.4>
  401036:	push   0x0
  40103b:	jmp    401020 <__stack_chk_fail@plt-0x10>

0000000000401040 <__printf_chk@plt>:
  401040:	jmp    QWORD PTR [rip+0x2fda]        # 404020 <__printf_chk@GLIBC_2.3.4>
  401046:	push   0x1
  40104b:	jmp    401020 <__stack_chk_fail@plt-0x10>

0000000000401050 <__isoc99_scanf@plt>:
  401050:	jmp    QWORD PTR [rip+0x2fd2]        # 404028 <__isoc99_scanf@GLIBC_2.7>
  401056:	push   0x2
  40105b:	jmp    401020 <__stack_chk_fail@plt-0x10>

Disassembly of section .text:

0000000000401060 <main@@Base>:
  401060:	push   r14
  401062:	push   r13
  401064:	lea    rdi,[rip+0xf9c]        # 402007 <_IO_stdin_used@@Base+0x7>
  40106b:	push   r12
  40106d:	push   rbp
  40106e:	push   rbx
  40106f:	sub    rsp,0x20
  401073:	mov    rax,QWORD PTR fs:0x28
  40107c:	mov    QWORD PTR [rsp+0x18],rax
  401081:	xor    eax,eax
  401083:	lea    rsi,[rsp+0xc]
  401088:	call   401050 <__isoc99_scanf@plt>
  40108d:	mov    eax,DWORD PTR [rsp+0xc]
  401091:	test   eax,eax
  401093:	jle    4010fa <main@@Base+0x9a>
  401095:	lea    r14,[rsp+0x14]
  40109a:	lea    r13,[rsp+0x10]
  40109f:	lea    r12,[rip+0xf5e]        # 402004 <_IO_stdin_used@@Base+0x4>
  4010a6:	xor    ebp,ebp
  4010a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4010b0:	mov    rdx,r14
  4010b3:	mov    rsi,r13
  4010b6:	mov    rdi,r12
  4010b9:	xor    eax,eax
  4010bb:	add    ebp,0x1
  4010be:	call   401050 <__isoc99_scanf@plt>
  4010c3:	mov    edi,DWORD PTR [rsp+0x10]
  4010c7:	call   401230 <invert@@Base>
  4010cc:	mov    edi,DWORD PTR [rsp+0x14]
  4010d0:	mov    ebx,eax
  4010d2:	call   401230 <invert@@Base>
  4010d7:	lea    edi,[rbx+rax*1]
  4010da:	call   401230 <invert@@Base>
  4010df:	lea    rsi,[rip+0xf24]        # 40200a <_IO_stdin_used@@Base+0xa>
  4010e6:	mov    edx,eax
  4010e8:	mov    edi,0x1
  4010ed:	xor    eax,eax
  4010ef:	call   401040 <__printf_chk@plt>
  4010f4:	cmp    DWORD PTR [rsp+0xc],ebp
  4010f8:	jg     4010b0 <main@@Base+0x50>
  4010fa:	xor    eax,eax
  4010fc:	mov    rcx,QWORD PTR [rsp+0x18]
  401101:	xor    rcx,QWORD PTR fs:0x28
  40110a:	jne    401119 <main@@Base+0xb9>
  40110c:	add    rsp,0x20
  401110:	pop    rbx
  401111:	pop    rbp
  401112:	pop    r12
  401114:	pop    r13
  401116:	pop    r14
  401118:	ret    
  401119:	call   401030 <__stack_chk_fail@plt>
  40111e:	xchg   ax,ax

0000000000401120 <_start@@Base>:
  401120:	endbr64 
  401124:	xor    ebp,ebp
  401126:	mov    r9,rdx
  401129:	pop    rsi
  40112a:	mov    rdx,rsp
  40112d:	and    rsp,0xfffffffffffffff0
  401131:	push   rax
  401132:	push   rsp
  401133:	mov    r8,0x4012e0
  40113a:	mov    rcx,0x401270
  401141:	mov    rdi,0x401060
  401148:	call   QWORD PTR [rip+0x2ea2]        # 403ff0 <__libc_start_main@GLIBC_2.2.5>
  40114e:	hlt    
  40114f:	nop
  401150:	endbr64 
  401154:	ret    
  401155:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40115f:	nop
  401160:	mov    eax,0x404047
  401165:	push   rbp
  401166:	sub    rax,0x404040
  40116c:	cmp    rax,0xe
  401170:	mov    rbp,rsp
  401173:	jbe    401190 <_start@@Base+0x70>
  401175:	mov    eax,0x0
  40117a:	test   rax,rax
  40117d:	je     401190 <_start@@Base+0x70>
  40117f:	pop    rbp
  401180:	mov    edi,0x404040
  401185:	jmp    rax
  401187:	nop    WORD PTR [rax+rax*1+0x0]
  401190:	pop    rbp
  401191:	ret    
  401192:	nop    DWORD PTR [rax+0x0]
  401196:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4011a0:	mov    esi,0x404040
  4011a5:	push   rbp
  4011a6:	sub    rsi,0x404040
  4011ad:	sar    rsi,0x3
  4011b1:	mov    rbp,rsp
  4011b4:	mov    rax,rsi
  4011b7:	shr    rax,0x3f
  4011bb:	add    rsi,rax
  4011be:	sar    rsi,1
  4011c1:	je     4011d8 <_start@@Base+0xb8>
  4011c3:	mov    eax,0x0
  4011c8:	test   rax,rax
  4011cb:	je     4011d8 <_start@@Base+0xb8>
  4011cd:	pop    rbp
  4011ce:	mov    edi,0x404040
  4011d3:	jmp    rax
  4011d5:	nop    DWORD PTR [rax]
  4011d8:	pop    rbp
  4011d9:	ret    
  4011da:	nop    WORD PTR [rax+rax*1+0x0]
  4011e0:	cmp    BYTE PTR [rip+0x2e59],0x0        # 404040 <__bss_start@@Base>
  4011e7:	jne    4011fa <_start@@Base+0xda>
  4011e9:	push   rbp
  4011ea:	mov    rbp,rsp
  4011ed:	call   401160 <_start@@Base+0x40>
  4011f2:	pop    rbp
  4011f3:	mov    BYTE PTR [rip+0x2e46],0x1        # 404040 <__bss_start@@Base>
  4011fa:	repz ret 
  4011fc:	nop    DWORD PTR [rax+0x0]
  401200:	mov    edi,0x403e18
  401205:	cmp    QWORD PTR [rdi],0x0
  401209:	jne    401210 <_start@@Base+0xf0>
  40120b:	jmp    4011a0 <_start@@Base+0x80>
  40120d:	nop    DWORD PTR [rax]
  401210:	mov    eax,0x0
  401215:	test   rax,rax
  401218:	je     40120b <_start@@Base+0xeb>
  40121a:	push   rbp
  40121b:	mov    rbp,rsp
  40121e:	call   rax
  401220:	pop    rbp
  401221:	jmp    4011a0 <_start@@Base+0x80>
  401226:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000401230 <invert@@Base>:
  401230:	xor    eax,eax
  401232:	test   edi,edi
  401234:	je     401263 <invert@@Base+0x33>
  401236:	mov    esi,0x66666667
  40123b:	nop    DWORD PTR [rax+rax*1+0x0]
  401240:	lea    ecx,[rax+rax*4]
  401243:	mov    eax,edi
  401245:	imul   esi
  401247:	mov    eax,edi
  401249:	sar    eax,0x1f
  40124c:	sar    edx,0x2
  40124f:	sub    edx,eax
  401251:	lea    eax,[rdx+rdx*4]
  401254:	add    eax,eax
  401256:	sub    edi,eax
  401258:	test   edx,edx
  40125a:	lea    eax,[rdi+rcx*2]
  40125d:	mov    edi,edx
  40125f:	jne    401240 <invert@@Base+0x10>
  401261:	repz ret 
  401263:	repz ret 
  401265:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40126f:	nop

0000000000401270 <__libc_csu_init@@Base>:
  401270:	endbr64 
  401274:	push   r15
  401276:	lea    r15,[rip+0x2b8b]        # 403e08 <_IO_stdin_used@@Base+0x1e08>
  40127d:	push   r14
  40127f:	mov    r14,rdx
  401282:	push   r13
  401284:	mov    r13,rsi
  401287:	push   r12
  401289:	mov    r12d,edi
  40128c:	push   rbp
  40128d:	lea    rbp,[rip+0x2b7c]        # 403e10 <_IO_stdin_used@@Base+0x1e10>
  401294:	push   rbx
  401295:	sub    rbp,r15
  401298:	sub    rsp,0x8
  40129c:	call   401000 <__stack_chk_fail@plt-0x30>
  4012a1:	sar    rbp,0x3
  4012a5:	je     4012c6 <__libc_csu_init@@Base+0x56>
  4012a7:	xor    ebx,ebx
  4012a9:	nop    DWORD PTR [rax+0x0]
  4012b0:	mov    rdx,r14
  4012b3:	mov    rsi,r13
  4012b6:	mov    edi,r12d
  4012b9:	call   QWORD PTR [r15+rbx*8]
  4012bd:	add    rbx,0x1
  4012c1:	cmp    rbp,rbx
  4012c4:	jne    4012b0 <__libc_csu_init@@Base+0x40>
  4012c6:	add    rsp,0x8
  4012ca:	pop    rbx
  4012cb:	pop    rbp
  4012cc:	pop    r12
  4012ce:	pop    r13
  4012d0:	pop    r14
  4012d2:	pop    r15
  4012d4:	ret    
  4012d5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

00000000004012e0 <__libc_csu_fini@@Base>:
  4012e0:	endbr64 
  4012e4:	ret    

Disassembly of section .fini:

00000000004012e8 <.fini>:
  4012e8:	endbr64 
  4012ec:	sub    rsp,0x8
  4012f0:	add    rsp,0x8
  4012f4:	ret    
