
../repos/Snaipe-Mimick-1dc4659/sample/strdup/strdup_test:     file format elf64-x86-64


Disassembly of section .init:

0000000000402000 <.init>:
  402000:	endbr64 
  402004:	sub    rsp,0x8
  402008:	mov    rax,QWORD PTR [rip+0x5fd1]        # 407fe0 <__gmon_start__>
  40200f:	test   rax,rax
  402012:	je     402016 <free@plt-0x1a>
  402014:	call   rax
  402016:	add    rsp,0x8
  40201a:	ret    

Disassembly of section .plt:

0000000000402020 <free@plt-0x10>:
  402020:	push   QWORD PTR [rip+0x5fe2]        # 408008 <_IO_stdin_used@@Base+0x3008>
  402026:	jmp    QWORD PTR [rip+0x5fe4]        # 408010 <_IO_stdin_used@@Base+0x3010>
  40202c:	nop    DWORD PTR [rax+0x0]

0000000000402030 <free@plt>:
  402030:	jmp    QWORD PTR [rip+0x5fe2]        # 408018 <free@GLIBC_2.2.5>
  402036:	push   0x0
  40203b:	jmp    402020 <free@plt-0x10>

0000000000402040 <abort@plt>:
  402040:	jmp    QWORD PTR [rip+0x5fda]        # 408020 <abort@GLIBC_2.2.5>
  402046:	push   0x1
  40204b:	jmp    402020 <free@plt-0x10>

0000000000402050 <__errno_location@plt>:
  402050:	jmp    QWORD PTR [rip+0x5fd2]        # 408028 <__errno_location@GLIBC_2.2.5>
  402056:	push   0x2
  40205b:	jmp    402020 <free@plt-0x10>

0000000000402060 <strncmp@plt>:
  402060:	jmp    QWORD PTR [rip+0x5fca]        # 408030 <strncmp@GLIBC_2.2.5>
  402066:	push   0x3
  40206b:	jmp    402020 <free@plt-0x10>

0000000000402070 <strlen@plt>:
  402070:	jmp    QWORD PTR [rip+0x5fc2]        # 408038 <strlen@GLIBC_2.2.5>
  402076:	push   0x4
  40207b:	jmp    402020 <free@plt-0x10>

0000000000402080 <mmap@plt>:
  402080:	jmp    QWORD PTR [rip+0x5fba]        # 408040 <mmap@GLIBC_2.2.5>
  402086:	push   0x5
  40208b:	jmp    402020 <free@plt-0x10>

0000000000402090 <strchr@plt>:
  402090:	jmp    QWORD PTR [rip+0x5fb2]        # 408048 <strchr@GLIBC_2.2.5>
  402096:	push   0x6
  40209b:	jmp    402020 <free@plt-0x10>

00000000004020a0 <snprintf@plt>:
  4020a0:	jmp    QWORD PTR [rip+0x5faa]        # 408050 <snprintf@GLIBC_2.2.5>
  4020a6:	push   0x7
  4020ab:	jmp    402020 <free@plt-0x10>

00000000004020b0 <memset@plt>:
  4020b0:	jmp    QWORD PTR [rip+0x5fa2]        # 408058 <memset@GLIBC_2.2.5>
  4020b6:	push   0x8
  4020bb:	jmp    402020 <free@plt-0x10>

00000000004020c0 <__tls_get_addr@plt>:
  4020c0:	jmp    QWORD PTR [rip+0x5f9a]        # 408060 <__tls_get_addr@GLIBC_2.3>
  4020c6:	push   0x9
  4020cb:	jmp    402020 <free@plt-0x10>

00000000004020d0 <strcmp@plt>:
  4020d0:	jmp    QWORD PTR [rip+0x5f92]        # 408068 <strcmp@GLIBC_2.2.5>
  4020d6:	push   0xa
  4020db:	jmp    402020 <free@plt-0x10>

00000000004020e0 <fprintf@plt>:
  4020e0:	jmp    QWORD PTR [rip+0x5f8a]        # 408070 <fprintf@GLIBC_2.2.5>
  4020e6:	push   0xb
  4020eb:	jmp    402020 <free@plt-0x10>

00000000004020f0 <memcpy@plt>:
  4020f0:	jmp    QWORD PTR [rip+0x5f82]        # 408078 <memcpy@GLIBC_2.14>
  4020f6:	push   0xc
  4020fb:	jmp    402020 <free@plt-0x10>

0000000000402100 <realloc@plt>:
  402100:	jmp    QWORD PTR [rip+0x5f7a]        # 408080 <realloc@GLIBC_2.2.5>
  402106:	push   0xd
  40210b:	jmp    402020 <free@plt-0x10>

0000000000402110 <munmap@plt>:
  402110:	jmp    QWORD PTR [rip+0x5f72]        # 408088 <munmap@GLIBC_2.2.5>
  402116:	push   0xe
  40211b:	jmp    402020 <free@plt-0x10>

0000000000402120 <my_strdup@plt>:
  402120:	jmp    QWORD PTR [rip+0x5f6a]        # 408090 <my_strdup>
  402126:	push   0xf
  40212b:	jmp    402020 <free@plt-0x10>

0000000000402130 <mprotect@plt>:
  402130:	jmp    QWORD PTR [rip+0x5f62]        # 408098 <mprotect@GLIBC_2.2.5>
  402136:	push   0x10
  40213b:	jmp    402020 <free@plt-0x10>

0000000000402140 <strstr@plt>:
  402140:	jmp    QWORD PTR [rip+0x5f5a]        # 4080a0 <strstr@GLIBC_2.2.5>
  402146:	push   0x11
  40214b:	jmp    402020 <free@plt-0x10>

Disassembly of section .plt.got:

0000000000402150 <malloc@plt>:
  402150:	jmp    QWORD PTR [rip+0x5e9a]        # 407ff0 <malloc@GLIBC_2.2.5>
  402156:	xchg   ax,ax

Disassembly of section .text:

0000000000402160 <_start@@Base>:
  402160:	endbr64 
  402164:	xor    ebp,ebp
  402166:	mov    r9,rdx
  402169:	pop    rsi
  40216a:	mov    rdx,rsp
  40216d:	and    rsp,0xfffffffffffffff0
  402171:	push   rax
  402172:	push   rsp
  402173:	mov    r8,0x404f30
  40217a:	mov    rcx,0x404ec0
  402181:	mov    rdi,0x402530
  402188:	call   QWORD PTR [rip+0x5e4a]        # 407fd8 <__libc_start_main@GLIBC_2.2.5>
  40218e:	hlt    
  40218f:	nop
  402190:	endbr64 
  402194:	ret    
  402195:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40219f:	nop
  4021a0:	mov    eax,0x4080c8
  4021a5:	cmp    rax,0x4080c8
  4021ab:	je     4021c0 <_start@@Base+0x60>
  4021ad:	mov    eax,0x0
  4021b2:	test   rax,rax
  4021b5:	je     4021c0 <_start@@Base+0x60>
  4021b7:	mov    edi,0x4080c8
  4021bc:	jmp    rax
  4021be:	xchg   ax,ax
  4021c0:	ret    
  4021c1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4021cc:	nop    DWORD PTR [rax+0x0]
  4021d0:	mov    esi,0x4080c8
  4021d5:	sub    rsi,0x4080c8
  4021dc:	mov    rax,rsi
  4021df:	shr    rsi,0x3f
  4021e3:	sar    rax,0x3
  4021e7:	add    rsi,rax
  4021ea:	sar    rsi,1
  4021ed:	je     402200 <_start@@Base+0xa0>
  4021ef:	mov    eax,0x0
  4021f4:	test   rax,rax
  4021f7:	je     402200 <_start@@Base+0xa0>
  4021f9:	mov    edi,0x4080c8
  4021fe:	jmp    rax
  402200:	ret    
  402201:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40220c:	nop    DWORD PTR [rax+0x0]
  402210:	endbr64 
  402214:	cmp    BYTE PTR [rip+0x5ead],0x0        # 4080c8 <__bss_start@@Base>
  40221b:	jne    402230 <_start@@Base+0xd0>
  40221d:	push   rbp
  40221e:	mov    rbp,rsp
  402221:	call   4021a0 <_start@@Base+0x40>
  402226:	mov    BYTE PTR [rip+0x5e9b],0x1        # 4080c8 <__bss_start@@Base>
  40222d:	pop    rbp
  40222e:	ret    
  40222f:	nop
  402230:	ret    
  402231:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40223c:	nop    DWORD PTR [rax+0x0]
  402240:	endbr64 
  402244:	jmp    4021d0 <_start@@Base+0x70>
  402246:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000402250 <test_simple_case@@Base>:
  402250:	push   rbp
  402251:	mov    rbp,rsp
  402254:	sub    rsp,0xa0
  40225b:	lea    rdi,[rip+0x2da2]        # 405004 <_IO_stdin_used@@Base+0x4>
  402262:	call   402400 <test_simple_case@@Base+0x1b0>
  402267:	xor    edi,edi
  402269:	mov    QWORD PTR [rbp-0x70],rax
  40226d:	call   402ce0 <mmk_matcher_init@@Base>
  402272:	lea    rax,[rbp-0x6]
  402276:	xor    esi,esi
  402278:	lea    rcx,[rbp-0x28]
  40227c:	mov    rdx,rcx
  40227f:	mov    rdi,rdx
  402282:	mov    edx,0x20
  402287:	mov    QWORD PTR [rbp-0x78],rax
  40228b:	mov    QWORD PTR [rbp-0x80],rcx
  40228f:	call   4020b0 <memset@plt>
  402294:	mov    rax,QWORD PTR [rbp-0x78]
  402298:	mov    QWORD PTR [rbp-0x30],rax
  40229c:	lea    rcx,[rbp-0x30]
  4022a0:	mov    QWORD PTR [rbp-0x20],rcx
  4022a4:	mov    rdi,QWORD PTR [rbp-0x80]
  4022a8:	call   404d30 <mmk_when_init@@Base>
  4022ad:	mov    edi,0x6
  4022b2:	call   402150 <malloc@plt>
  4022b7:	mov    QWORD PTR [rbp-0x88],rax
  4022be:	call   402d50 <mmk_matcher_term@@Base>
  4022c3:	lea    rdi,[rip+0x2d4c]        # 405016 <_IO_stdin_used@@Base+0x16>
  4022ca:	call   402120 <my_strdup@plt>
  4022cf:	mov    QWORD PTR [rbp-0x38],rax
  4022d3:	mov    edi,0x1
  4022d8:	call   402ce0 <mmk_matcher_init@@Base>
  4022dd:	xor    esi,esi
  4022df:	mov    edi,0x8000000a
  4022e4:	call   402d90 <mmk_matcher_add@@Base>
  4022e9:	mov    edi,0x6
  4022ee:	call   402150 <malloc@plt>
  4022f3:	mov    QWORD PTR [rbp-0x90],rax
  4022fa:	call   402d50 <mmk_matcher_term@@Base>
  4022ff:	mov    DWORD PTR [rbp-0x68],0x1
  402306:	mov    DWORD PTR [rbp-0x64],0x0
  40230d:	mov    QWORD PTR [rbp-0x60],0x0
  402315:	mov    QWORD PTR [rbp-0x58],0x0
  40231d:	mov    QWORD PTR [rbp-0x50],0x1
  402325:	mov    QWORD PTR [rbp-0x48],0x0
  40232d:	lea    rdi,[rbp-0x68]
  402331:	call   404390 <mmk_verify_times@@Base>
  402336:	mov    DWORD PTR [rbp-0x3c],eax
  402339:	cmp    DWORD PTR [rbp-0x3c],0x0
  40233d:	jne    402379 <test_simple_case@@Base+0x129>
  402343:	mov    rax,QWORD PTR [rip+0x5cae]        # 407ff8 <stderr@GLIBC_2.2.5>
  40234a:	mov    rdi,QWORD PTR [rax]
  40234d:	lea    rsi,[rip+0x2cc8]        # 40501c <_IO_stdin_used@@Base+0x1c>
  402354:	lea    rdx,[rip+0x2cde]        # 405039 <_IO_stdin_used@@Base+0x39>
  40235b:	mov    ecx,0x17
  402360:	lea    r8,[rip+0x2d2e]        # 405095 <_IO_stdin_used@@Base+0x95>
  402367:	mov    al,0x0
  402369:	call   4020e0 <fprintf@plt>
  40236e:	mov    DWORD PTR [rbp-0x94],eax
  402374:	call   402040 <abort@plt>
  402379:	jmp    40237e <test_simple_case@@Base+0x12e>
  40237e:	jmp    402383 <test_simple_case@@Base+0x133>
  402383:	lea    rax,[rbp-0x6]
  402387:	mov    rcx,QWORD PTR [rbp-0x38]
  40238b:	cmp    rcx,rax
  40238e:	jne    4023ad <test_simple_case@@Base+0x15d>
  402394:	lea    rsi,[rbp-0x6]
  402398:	lea    rdi,[rip+0x5d19]        # 4080b8 <__data_start@@Base+0x10>
  40239f:	call   4020d0 <strcmp@plt>
  4023a4:	cmp    eax,0x0
  4023a7:	je     4023e3 <test_simple_case@@Base+0x193>
  4023ad:	mov    rax,QWORD PTR [rip+0x5c44]        # 407ff8 <stderr@GLIBC_2.2.5>
  4023b4:	mov    rdi,QWORD PTR [rax]
  4023b7:	lea    rsi,[rip+0x2c5e]        # 40501c <_IO_stdin_used@@Base+0x1c>
  4023be:	lea    rdx,[rip+0x2c74]        # 405039 <_IO_stdin_used@@Base+0x39>
  4023c5:	mov    ecx,0x18
  4023ca:	lea    r8,[rip+0x2cc9]        # 40509a <_IO_stdin_used@@Base+0x9a>
  4023d1:	mov    al,0x0
  4023d3:	call   4020e0 <fprintf@plt>
  4023d8:	mov    DWORD PTR [rbp-0x98],eax
  4023de:	call   402040 <abort@plt>
  4023e3:	jmp    4023e8 <test_simple_case@@Base+0x198>
  4023e8:	mov    rax,QWORD PTR [rip+0x5c01]        # 407ff0 <malloc@GLIBC_2.2.5>
  4023ef:	mov    rdi,rax
  4023f2:	call   402c90 <mmk_reset@@Base>
  4023f7:	add    rsp,0xa0
  4023fe:	pop    rbp
  4023ff:	ret    
  402400:	push   rbp
  402401:	mov    rbp,rsp
  402404:	sub    rsp,0x10
  402408:	lea    rax,[rip+0x151]        # 402560 <main@@Base+0x30>
  40240f:	mov    QWORD PTR [rbp-0x8],rdi
  402413:	mov    rdi,QWORD PTR [rbp-0x8]
  402417:	mov    rsi,rax
  40241a:	call   402ea0 <mmk_mock_create_internal@@Base>
  40241f:	add    rsp,0x10
  402423:	pop    rbp
  402424:	ret    
  402425:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40242f:	nop

0000000000402430 <test_error_case@@Base>:
  402430:	push   rbp
  402431:	mov    rbp,rsp
  402434:	sub    rsp,0x60
  402438:	lea    rdi,[rip+0x2bc5]        # 405004 <_IO_stdin_used@@Base+0x4>
  40243f:	call   402400 <test_simple_case@@Base+0x1b0>
  402444:	xor    edi,edi
  402446:	mov    QWORD PTR [rbp-0x8],rax
  40244a:	call   402ce0 <mmk_matcher_init@@Base>
  40244f:	mov    DWORD PTR [rbp-0x28],0x0
  402456:	mov    DWORD PTR [rbp-0x24],0xc
  40245d:	mov    QWORD PTR [rbp-0x30],0x0
  402465:	lea    rax,[rbp-0x30]
  402469:	mov    QWORD PTR [rbp-0x20],rax
  40246d:	mov    QWORD PTR [rbp-0x18],0x0
  402475:	mov    QWORD PTR [rbp-0x10],0x0
  40247d:	lea    rdi,[rbp-0x28]
  402481:	call   404d30 <mmk_when_init@@Base>
  402486:	xor    edi,edi
  402488:	mov    rax,QWORD PTR [rbp-0x8]
  40248c:	mov    esi,0x1
  402491:	mov    QWORD PTR [rbp-0x48],rax
  402495:	call   402d90 <mmk_matcher_add@@Base>
  40249a:	mov    QWORD PTR [rbp-0x38],0x0
  4024a2:	mov    rdi,QWORD PTR [rbp-0x38]
  4024a6:	mov    rax,QWORD PTR [rbp-0x48]
  4024aa:	call   rax
  4024ac:	mov    QWORD PTR [rbp-0x50],rax
  4024b0:	call   402d50 <mmk_matcher_term@@Base>
  4024b5:	lea    rdi,[rip+0x2bfe]        # 4050ba <_IO_stdin_used@@Base+0xba>
  4024bc:	call   402120 <my_strdup@plt>
  4024c1:	mov    QWORD PTR [rbp-0x40],rax
  4024c5:	cmp    QWORD PTR [rbp-0x40],0x0
  4024ca:	jne    4024de <test_error_case@@Base+0xae>
  4024d0:	call   402050 <__errno_location@plt>
  4024d5:	cmp    DWORD PTR [rax],0xc
  4024d8:	je     402511 <test_error_case@@Base+0xe1>
  4024de:	mov    rax,QWORD PTR [rip+0x5b13]        # 407ff8 <stderr@GLIBC_2.2.5>
  4024e5:	mov    rdi,QWORD PTR [rax]
  4024e8:	lea    rsi,[rip+0x2b2d]        # 40501c <_IO_stdin_used@@Base+0x1c>
  4024ef:	lea    rdx,[rip+0x2b43]        # 405039 <_IO_stdin_used@@Base+0x39>
  4024f6:	mov    ecx,0x27
  4024fb:	lea    r8,[rip+0x2bbc]        # 4050be <_IO_stdin_used@@Base+0xbe>
  402502:	mov    al,0x0
  402504:	call   4020e0 <fprintf@plt>
  402509:	mov    DWORD PTR [rbp-0x54],eax
  40250c:	call   402040 <abort@plt>
  402511:	jmp    402516 <test_error_case@@Base+0xe6>
  402516:	mov    rax,QWORD PTR [rbp-0x8]
  40251a:	mov    rdi,rax
  40251d:	call   402c90 <mmk_reset@@Base>
  402522:	add    rsp,0x60
  402526:	pop    rbp
  402527:	ret    
  402528:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402530 <main@@Base>:
  402530:	push   rbp
  402531:	mov    rbp,rsp
  402534:	sub    rsp,0x10
  402538:	mov    DWORD PTR [rbp-0x4],0x0
  40253f:	call   402250 <test_simple_case@@Base>
  402544:	call   402430 <test_error_case@@Base>
  402549:	xor    eax,eax
  40254b:	add    rsp,0x10
  40254f:	pop    rbp
  402550:	ret    
  402551:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40255b:	nop    DWORD PTR [rax+rax*1+0x0]
  402560:	push   rbp
  402561:	mov    rbp,rsp
  402564:	sub    rsp,0xd0
  40256b:	mov    QWORD PTR [rbp-0x10],rdi
  40256f:	jmp    402574 <main@@Base+0x44>
  402574:	call   402d70 <mmk_matcher_ctx@@Base>
  402579:	mov    QWORD PTR [rbp-0x18],rax
  40257d:	cmp    QWORD PTR [rbp-0x18],0x0
  402582:	je     402822 <main@@Base+0x2f2>
  402588:	call   404070 <mmk_ctx@@Base>
  40258d:	mov    rdi,rax
  402590:	call   403dc0 <mmk_stub_context@@Base>
  402595:	mov    QWORD PTR [rbp-0x20],rax
  402599:	mov    rax,QWORD PTR [rbp-0x18]
  40259d:	cmp    DWORD PTR [rax],0x0
  4025a0:	jne    402610 <main@@Base+0xe0>
  4025a6:	mov    edi,0x50
  4025ab:	call   404b50 <mmk_malloc@@Base>
  4025b0:	mov    QWORD PTR [rbp-0x28],rax
  4025b4:	mov    rax,QWORD PTR [rbp-0x28]
  4025b8:	mov    QWORD PTR [rbp-0xc0],rax
  4025bf:	call   404d70 <mmk_when_get_result@@Base>
  4025c4:	mov    rcx,QWORD PTR [rax]
  4025c7:	mov    rdx,QWORD PTR [rbp-0xc0]
  4025ce:	mov    QWORD PTR [rdx+0x10],rcx
  4025d2:	mov    rcx,QWORD PTR [rax+0x8]
  4025d6:	mov    QWORD PTR [rdx+0x18],rcx
  4025da:	mov    rcx,QWORD PTR [rax+0x10]
  4025de:	mov    QWORD PTR [rdx+0x20],rcx
  4025e2:	mov    rax,QWORD PTR [rax+0x18]
  4025e6:	mov    QWORD PTR [rdx+0x28],rax
  4025ea:	mov    rax,QWORD PTR [rbp-0x10]
  4025ee:	mov    rcx,QWORD PTR [rbp-0x28]
  4025f2:	mov    QWORD PTR [rcx+0x48],rax
  4025f6:	jmp    4025fb <main@@Base+0xcb>
  4025fb:	mov    rdi,QWORD PTR [rbp-0x20]
  4025ff:	mov    rax,QWORD PTR [rbp-0x28]
  402603:	mov    rsi,rax
  402606:	call   404d90 <mmk_when_impl@@Base>
  40260b:	jmp    402808 <main@@Base+0x2d8>
  402610:	mov    rax,QWORD PTR [rbp-0x18]
  402614:	cmp    DWORD PTR [rax],0x1
  402617:	jne    402803 <main@@Base+0x2d3>
  40261d:	mov    QWORD PTR [rbp-0x30],0x0
  402625:	mov    rdi,QWORD PTR [rbp-0x20]
  402629:	call   403170 <mmk_mock_params_begin@@Base>
  40262e:	mov    QWORD PTR [rbp-0x38],rax
  402632:	cmp    QWORD PTR [rbp-0x38],0x0
  402637:	je     4027c2 <main@@Base+0x292>
  40263d:	mov    rax,QWORD PTR [rbp-0x18]
  402641:	mov    QWORD PTR [rbp-0x40],rax
  402645:	mov    rax,QWORD PTR [rbp-0x40]
  402649:	cmp    QWORD PTR [rax+0x10],0x0
  40264e:	je     40275a <main@@Base+0x22a>
  402654:	mov    rax,QWORD PTR [rbp-0x40]
  402658:	mov    rax,QWORD PTR [rax+0x10]
  40265c:	mov    QWORD PTR [rbp-0x40],rax
  402660:	mov    rax,QWORD PTR [rbp-0x40]
  402664:	cmp    DWORD PTR [rax],0x0
  402667:	jne    402672 <main@@Base+0x142>
  40266d:	jmp    402755 <main@@Base+0x225>
  402672:	mov    rax,QWORD PTR [rbp-0x40]
  402676:	mov    ecx,DWORD PTR [rax]
  402678:	and    ecx,0x80000000
  40267e:	cmp    ecx,0x0
  402681:	je     402710 <main@@Base+0x1e0>
  402687:	mov    rax,QWORD PTR [rbp-0x38]
  40268b:	add    rax,0x18
  402691:	lea    rcx,[rbp-0x10]
  402695:	mov    rdi,rax
  402698:	mov    rsi,rcx
  40269b:	mov    edx,0x8
  4026a0:	call   404760 <mmk_memcmp@@Base>
  4026a5:	mov    DWORD PTR [rbp-0x44],eax
  4026a8:	cmp    DWORD PTR [rbp-0x44],0x0
  4026ac:	jne    4026c9 <main@@Base+0x199>
  4026b2:	mov    rax,QWORD PTR [rbp-0x40]
  4026b6:	mov    ecx,DWORD PTR [rax]
  4026b8:	and    ecx,0x2
  4026bb:	cmp    ecx,0x0
  4026be:	jne    4026c9 <main@@Base+0x199>
  4026c4:	jmp    4027a4 <main@@Base+0x274>
  4026c9:	cmp    DWORD PTR [rbp-0x44],0x0
  4026cd:	jge    4026ea <main@@Base+0x1ba>
  4026d3:	mov    rax,QWORD PTR [rbp-0x40]
  4026d7:	mov    ecx,DWORD PTR [rax]
  4026d9:	and    ecx,0x4
  4026dc:	cmp    ecx,0x0
  4026df:	jne    4026ea <main@@Base+0x1ba>
  4026e5:	jmp    4027a4 <main@@Base+0x274>
  4026ea:	cmp    DWORD PTR [rbp-0x44],0x0
  4026ee:	jle    40270b <main@@Base+0x1db>
  4026f4:	mov    rax,QWORD PTR [rbp-0x40]
  4026f8:	mov    ecx,DWORD PTR [rax]
  4026fa:	and    ecx,0x8
  4026fd:	cmp    ecx,0x0
  402700:	jne    40270b <main@@Base+0x1db>
  402706:	jmp    4027a4 <main@@Base+0x274>
  40270b:	jmp    402750 <main@@Base+0x220>
  402710:	mov    rax,QWORD PTR [rbp-0x40]
  402714:	cmp    DWORD PTR [rax],0x1
  402717:	jne    40274b <main@@Base+0x21b>
  40271d:	mov    rdi,QWORD PTR [rbp-0x40]
  402721:	call   402e80 <mmk_matcher_get_predicate@@Base>
  402726:	mov    QWORD PTR [rbp-0x50],rax
  40272a:	mov    rax,QWORD PTR [rbp-0x50]
  40272e:	mov    rcx,QWORD PTR [rbp-0x38]
  402732:	mov    rdi,QWORD PTR [rcx+0x18]
  402736:	call   rax
  402738:	cmp    eax,0x0
  40273b:	jne    402746 <main@@Base+0x216>
  402741:	jmp    4027a4 <main@@Base+0x274>
  402746:	jmp    40274b <main@@Base+0x21b>
  40274b:	jmp    402750 <main@@Base+0x220>
  402750:	jmp    402755 <main@@Base+0x225>
  402755:	jmp    40278b <main@@Base+0x25b>
  40275a:	mov    rax,QWORD PTR [rbp-0x38]
  40275e:	add    rax,0x18
  402764:	lea    rcx,[rbp-0x10]
  402768:	mov    rdi,rax
  40276b:	mov    rsi,rcx
  40276e:	mov    edx,0x8
  402773:	call   404760 <mmk_memcmp@@Base>
  402778:	cmp    eax,0x0
  40277b:	je     402786 <main@@Base+0x256>
  402781:	jmp    4027a4 <main@@Base+0x274>
  402786:	jmp    40278b <main@@Base+0x25b>
  40278b:	jmp    402790 <main@@Base+0x260>
  402790:	jmp    402795 <main@@Base+0x265>
  402795:	mov    rax,QWORD PTR [rbp-0x38]
  402799:	mov    rax,QWORD PTR [rax]
  40279c:	add    rax,QWORD PTR [rbp-0x30]
  4027a0:	mov    QWORD PTR [rbp-0x30],rax
  4027a4:	jmp    4027a9 <main@@Base+0x279>
  4027a9:	mov    rdi,QWORD PTR [rbp-0x20]
  4027ad:	mov    rax,QWORD PTR [rbp-0x38]
  4027b1:	mov    rsi,rax
  4027b4:	call   4031c0 <mmk_mock_params_next@@Base>
  4027b9:	mov    QWORD PTR [rbp-0x38],rax
  4027bd:	jmp    402632 <main@@Base+0x102>
  4027c2:	mov    rax,QWORD PTR [rbp-0x18]
  4027c6:	mov    QWORD PTR [rbp-0x58],rax
  4027ca:	cmp    QWORD PTR [rbp-0x58],0x0
  4027cf:	je     4027fa <main@@Base+0x2ca>
  4027d5:	mov    rax,QWORD PTR [rbp-0x58]
  4027d9:	mov    rax,QWORD PTR [rax+0x10]
  4027dd:	mov    QWORD PTR [rbp-0x60],rax
  4027e1:	mov    rax,QWORD PTR [rbp-0x58]
  4027e5:	mov    rdi,rax
  4027e8:	call   404bb0 <mmk_free@@Base>
  4027ed:	mov    rax,QWORD PTR [rbp-0x60]
  4027f1:	mov    QWORD PTR [rbp-0x58],rax
  4027f5:	jmp    4027ca <main@@Base+0x29a>
  4027fa:	mov    rdi,QWORD PTR [rbp-0x30]
  4027fe:	call   404350 <mmk_verify_set_times@@Base>
  402803:	jmp    402808 <main@@Base+0x2d8>
  402808:	jmp    40280d <main@@Base+0x2dd>
  40280d:	jmp    402812 <main@@Base+0x2e2>
  402812:	mov    rax,QWORD PTR [rip+0x58b7]        # 4080d0 <__bss_start@@Base+0x8>
  402819:	mov    QWORD PTR [rbp-0x8],rax
  40281d:	jmp    402b8b <main@@Base+0x65b>
  402822:	mov    QWORD PTR [rbp-0x88],0x0
  40282d:	mov    QWORD PTR [rbp-0x80],0x0
  402835:	mov    QWORD PTR [rbp-0x78],0x0
  40283d:	mov    rax,QWORD PTR [rbp-0x10]
  402841:	mov    QWORD PTR [rbp-0x70],rax
  402845:	lea    rax,[rbp-0x88]
  40284c:	mov    QWORD PTR [rbp-0x68],rax
  402850:	jmp    402855 <main@@Base+0x325>
  402855:	mov    rax,QWORD PTR [rbp-0x68]
  402859:	mov    rdi,rax
  40285c:	mov    esi,0x20
  402861:	call   4044a0 <mmk_verify_register_call@@Base>
  402866:	call   403230 <mmk_mock_get_params@@Base>
  40286b:	mov    QWORD PTR [rbp-0x90],rax
  402872:	cmp    QWORD PTR [rbp-0x90],0x0
  40287a:	je     402b76 <main@@Base+0x646>
  402880:	mov    rax,QWORD PTR [rbp-0x90]
  402887:	mov    QWORD PTR [rbp-0x98],rax
  40288e:	mov    rax,QWORD PTR [rbp-0x90]
  402895:	mov    rax,QWORD PTR [rax]
  402898:	mov    QWORD PTR [rbp-0xa0],rax
  40289f:	mov    rax,QWORD PTR [rbp-0xa0]
  4028a6:	cmp    QWORD PTR [rax+0x10],0x0
  4028ab:	je     4029d9 <main@@Base+0x4a9>
  4028b1:	mov    rax,QWORD PTR [rbp-0xa0]
  4028b8:	mov    rax,QWORD PTR [rax+0x10]
  4028bc:	mov    QWORD PTR [rbp-0xa0],rax
  4028c3:	mov    rax,QWORD PTR [rbp-0xa0]
  4028ca:	cmp    DWORD PTR [rax],0x0
  4028cd:	jne    4028d8 <main@@Base+0x3a8>
  4028d3:	jmp    4029d4 <main@@Base+0x4a4>
  4028d8:	mov    rax,QWORD PTR [rbp-0xa0]
  4028df:	mov    ecx,DWORD PTR [rax]
  4028e1:	and    ecx,0x80000000
  4028e7:	cmp    ecx,0x0
  4028ea:	je     402987 <main@@Base+0x457>
  4028f0:	lea    rax,[rbp-0x10]
  4028f4:	mov    rcx,rax
  4028f7:	mov    rdi,rcx
  4028fa:	mov    rsi,rax
  4028fd:	mov    edx,0x8
  402902:	call   404760 <mmk_memcmp@@Base>
  402907:	mov    DWORD PTR [rbp-0xa4],eax
  40290d:	cmp    DWORD PTR [rbp-0xa4],0x0
  402914:	jne    402934 <main@@Base+0x404>
  40291a:	mov    rax,QWORD PTR [rbp-0xa0]
  402921:	mov    ecx,DWORD PTR [rax]
  402923:	and    ecx,0x2
  402926:	cmp    ecx,0x0
  402929:	jne    402934 <main@@Base+0x404>
  40292f:	jmp    402b5f <main@@Base+0x62f>
  402934:	cmp    DWORD PTR [rbp-0xa4],0x0
  40293b:	jge    40295b <main@@Base+0x42b>
  402941:	mov    rax,QWORD PTR [rbp-0xa0]
  402948:	mov    ecx,DWORD PTR [rax]
  40294a:	and    ecx,0x4
  40294d:	cmp    ecx,0x0
  402950:	jne    40295b <main@@Base+0x42b>
  402956:	jmp    402b5f <main@@Base+0x62f>
  40295b:	cmp    DWORD PTR [rbp-0xa4],0x0
  402962:	jle    402982 <main@@Base+0x452>
  402968:	mov    rax,QWORD PTR [rbp-0xa0]
  40296f:	mov    ecx,DWORD PTR [rax]
  402971:	and    ecx,0x8
  402974:	cmp    ecx,0x0
  402977:	jne    402982 <main@@Base+0x452>
  40297d:	jmp    402b5f <main@@Base+0x62f>
  402982:	jmp    4029cf <main@@Base+0x49f>
  402987:	mov    rax,QWORD PTR [rbp-0xa0]
  40298e:	cmp    DWORD PTR [rax],0x1
  402991:	jne    4029ca <main@@Base+0x49a>
  402997:	mov    rdi,QWORD PTR [rbp-0xa0]
  40299e:	call   402e80 <mmk_matcher_get_predicate@@Base>
  4029a3:	mov    QWORD PTR [rbp-0xb0],rax
  4029aa:	mov    rax,QWORD PTR [rbp-0xb0]
  4029b1:	mov    rdi,QWORD PTR [rbp-0x10]
  4029b5:	call   rax
  4029b7:	cmp    eax,0x0
  4029ba:	jne    4029c5 <main@@Base+0x495>
  4029c0:	jmp    402b5f <main@@Base+0x62f>
  4029c5:	jmp    4029ca <main@@Base+0x49a>
  4029ca:	jmp    4029cf <main@@Base+0x49f>
  4029cf:	jmp    4029d4 <main@@Base+0x4a4>
  4029d4:	jmp    402a15 <main@@Base+0x4e5>
  4029d9:	lea    rax,[rbp-0x10]
  4029dd:	mov    rcx,QWORD PTR [rbp-0x98]
  4029e4:	add    rcx,0x30
  4029eb:	add    rcx,0x18
  4029f2:	mov    rdi,rax
  4029f5:	mov    rsi,rcx
  4029f8:	mov    edx,0x8
  4029fd:	call   404760 <mmk_memcmp@@Base>
  402a02:	cmp    eax,0x0
  402a05:	je     402a10 <main@@Base+0x4e0>
  402a0b:	jmp    402b5f <main@@Base+0x62f>
  402a10:	jmp    402a15 <main@@Base+0x4e5>
  402a15:	mov    rax,QWORD PTR [rbp-0x98]
  402a1c:	cmp    DWORD PTR [rax+0x14],0x0
  402a20:	je     402a43 <main@@Base+0x513>
  402a26:	mov    rax,QWORD PTR [rbp-0x98]
  402a2d:	mov    ecx,DWORD PTR [rax+0x14]
  402a30:	mov    DWORD PTR [rbp-0xc4],ecx
  402a36:	call   402050 <__errno_location@plt>
  402a3b:	mov    ecx,DWORD PTR [rbp-0xc4]
  402a41:	mov    DWORD PTR [rax],ecx
  402a43:	mov    rax,QWORD PTR [rbp-0x98]
  402a4a:	cmp    QWORD PTR [rax+0x20],0x0
  402a4f:	je     402aad <main@@Base+0x57d>
  402a55:	mov    rax,QWORD PTR [rbp-0x98]
  402a5c:	cmp    QWORD PTR [rax+0x18],0x0
  402a61:	jne    402aad <main@@Base+0x57d>
  402a67:	jmp    402a6c <main@@Base+0x53c>
  402a6c:	jmp    402a71 <main@@Base+0x541>
  402a71:	jmp    402a76 <main@@Base+0x546>
  402a76:	mov    rax,QWORD PTR [rbp-0x98]
  402a7d:	mov    rax,QWORD PTR [rax+0x20]
  402a81:	mov    rdi,QWORD PTR [rbp-0x10]
  402a85:	call   rax
  402a87:	mov    QWORD PTR [rbp-0xb8],rax
  402a8e:	jmp    402a93 <main@@Base+0x563>
  402a93:	jmp    402a98 <main@@Base+0x568>
  402a98:	jmp    402a9d <main@@Base+0x56d>
  402a9d:	mov    rax,QWORD PTR [rbp-0xb8]
  402aa4:	mov    QWORD PTR [rbp-0x8],rax
  402aa8:	jmp    402b8b <main@@Base+0x65b>
  402aad:	mov    rax,QWORD PTR [rbp-0x98]
  402ab4:	cmp    QWORD PTR [rax+0x20],0x0
  402ab9:	je     402b12 <main@@Base+0x5e2>
  402abf:	mov    rax,QWORD PTR [rbp-0x98]
  402ac6:	cmp    QWORD PTR [rax+0x18],0x0
  402acb:	je     402b12 <main@@Base+0x5e2>
  402ad1:	jmp    402ad6 <main@@Base+0x5a6>
  402ad6:	jmp    402adb <main@@Base+0x5ab>
  402adb:	mov    rax,QWORD PTR [rbp-0x98]
  402ae2:	mov    rax,QWORD PTR [rax+0x20]
  402ae6:	mov    rdi,QWORD PTR [rbp-0x10]
  402aea:	call   rax
  402aec:	jmp    402af1 <main@@Base+0x5c1>
  402af1:	jmp    402af6 <main@@Base+0x5c6>
  402af6:	jmp    402afb <main@@Base+0x5cb>
  402afb:	mov    rax,QWORD PTR [rbp-0x98]
  402b02:	mov    rax,QWORD PTR [rax+0x18]
  402b06:	mov    rax,QWORD PTR [rax]
  402b09:	mov    QWORD PTR [rbp-0x8],rax
  402b0d:	jmp    402b8b <main@@Base+0x65b>
  402b12:	mov    rax,QWORD PTR [rbp-0x98]
  402b19:	cmp    QWORD PTR [rax+0x18],0x0
  402b1e:	je     402b45 <main@@Base+0x615>
  402b24:	jmp    402b29 <main@@Base+0x5f9>
  402b29:	jmp    402b2e <main@@Base+0x5fe>
  402b2e:	mov    rax,QWORD PTR [rbp-0x98]
  402b35:	mov    rax,QWORD PTR [rax+0x18]
  402b39:	mov    rax,QWORD PTR [rax]
  402b3c:	mov    QWORD PTR [rbp-0x8],rax
  402b40:	jmp    402b8b <main@@Base+0x65b>
  402b45:	jmp    402b4a <main@@Base+0x61a>
  402b4a:	jmp    402b4f <main@@Base+0x61f>
  402b4f:	mov    rax,QWORD PTR [rip+0x557a]        # 4080d0 <__bss_start@@Base+0x8>
  402b56:	mov    QWORD PTR [rbp-0x8],rax
  402b5a:	jmp    402b8b <main@@Base+0x65b>
  402b5f:	mov    rax,QWORD PTR [rbp-0x90]
  402b66:	mov    rax,QWORD PTR [rax+0x8]
  402b6a:	mov    QWORD PTR [rbp-0x90],rax
  402b71:	jmp    402872 <main@@Base+0x342>
  402b76:	jmp    402b7b <main@@Base+0x64b>
  402b7b:	jmp    402b80 <main@@Base+0x650>
  402b80:	mov    rax,QWORD PTR [rip+0x5549]        # 4080d0 <__bss_start@@Base+0x8>
  402b87:	mov    QWORD PTR [rbp-0x8],rax
  402b8b:	mov    rax,QWORD PTR [rbp-0x8]
  402b8f:	add    rsp,0xd0
  402b96:	pop    rbp
  402b97:	ret    
  402b98:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402ba0 <mmk_init@@Base>:
  402ba0:	push   rbp
  402ba1:	mov    rbp,rsp
  402ba4:	sub    rsp,0x10
  402ba8:	cmp    DWORD PTR [rip+0x5529],0x0        # 4080d8 <__bss_start@@Base+0x10>
  402baf:	je     402bba <mmk_init@@Base+0x1a>
  402bb5:	jmp    402c28 <mmk_init@@Base+0x88>
  402bba:	call   403260 <plt_init_ctx@@Base>
  402bbf:	mov    QWORD PTR [rip+0x551a],rax        # 4080e0 <__bss_start@@Base+0x18>
  402bc6:	mov    rax,0xffffffffffffffff
  402bcd:	cmp    QWORD PTR [rip+0x550c],rax        # 4080e0 <__bss_start@@Base+0x18>
  402bd4:	jne    402c0d <mmk_init@@Base+0x6d>
  402bda:	mov    rax,QWORD PTR [rip+0x5417]        # 407ff8 <stderr@GLIBC_2.2.5>
  402be1:	mov    rdi,QWORD PTR [rax]
  402be4:	lea    rsi,[rip+0x2431]        # 40501c <_IO_stdin_used@@Base+0x1c>
  402beb:	lea    rdx,[rip+0x24eb]        # 4050dd <_IO_stdin_used@@Base+0xdd>
  402bf2:	mov    ecx,0x2d
  402bf7:	lea    r8,[rip+0x2531]        # 40512f <_IO_stdin_used@@Base+0x12f>
  402bfe:	mov    al,0x0
  402c00:	call   4020e0 <fprintf@plt>
  402c05:	mov    DWORD PTR [rbp-0x4],eax
  402c08:	call   402040 <abort@plt>
  402c0d:	jmp    402c12 <mmk_init@@Base+0x72>
  402c12:	mov    rdi,QWORD PTR [rip+0x54c7]        # 4080e0 <__bss_start@@Base+0x18>
  402c19:	call   404be0 <mmk_init_vital_functions@@Base>
  402c1e:	mov    DWORD PTR [rip+0x54b0],0x1        # 4080d8 <__bss_start@@Base+0x10>
  402c28:	add    rsp,0x10
  402c2c:	pop    rbp
  402c2d:	ret    
  402c2e:	xchg   ax,ax

0000000000402c30 <mmk_plt_ctx@@Base>:
  402c30:	push   rbp
  402c31:	mov    rbp,rsp
  402c34:	sub    rsp,0x10
  402c38:	jmp    402c3d <mmk_plt_ctx@@Base+0xd>
  402c3d:	cmp    DWORD PTR [rip+0x5494],0x0        # 4080d8 <__bss_start@@Base+0x10>
  402c44:	jne    402c7d <mmk_plt_ctx@@Base+0x4d>
  402c4a:	mov    rax,QWORD PTR [rip+0x53a7]        # 407ff8 <stderr@GLIBC_2.2.5>
  402c51:	mov    rdi,QWORD PTR [rax]
  402c54:	lea    rsi,[rip+0x23c1]        # 40501c <_IO_stdin_used@@Base+0x1c>
  402c5b:	lea    rdx,[rip+0x247b]        # 4050dd <_IO_stdin_used@@Base+0xdd>
  402c62:	mov    ecx,0x36
  402c67:	lea    r8,[rip+0x24d8]        # 405146 <_IO_stdin_used@@Base+0x146>
  402c6e:	mov    al,0x0
  402c70:	call   4020e0 <fprintf@plt>
  402c75:	mov    DWORD PTR [rbp-0x4],eax
  402c78:	call   402040 <abort@plt>
  402c7d:	jmp    402c82 <mmk_plt_ctx@@Base+0x52>
  402c82:	mov    rax,QWORD PTR [rip+0x5457]        # 4080e0 <__bss_start@@Base+0x18>
  402c89:	add    rsp,0x10
  402c8d:	pop    rbp
  402c8e:	ret    
  402c8f:	nop

0000000000402c90 <mmk_reset@@Base>:
  402c90:	push   rbp
  402c91:	mov    rbp,rsp
  402c94:	sub    rsp,0x20
  402c98:	mov    QWORD PTR [rbp-0x8],rdi
  402c9c:	cmp    QWORD PTR [rbp-0x8],0x0
  402ca1:	jne    402cac <mmk_reset@@Base+0x1c>
  402ca7:	jmp    402ccf <mmk_reset@@Base+0x3f>
  402cac:	mov    rdi,QWORD PTR [rbp-0x8]
  402cb0:	call   4041a0 <mmk_ask_ctx@@Base>
  402cb5:	mov    QWORD PTR [rbp-0x10],rax
  402cb9:	mov    rdi,QWORD PTR [rbp-0x10]
  402cbd:	call   403dc0 <mmk_stub_context@@Base>
  402cc2:	mov    QWORD PTR [rbp-0x18],rax
  402cc6:	mov    rdi,QWORD PTR [rbp-0x18]
  402cca:	call   403090 <mmk_mock_destroy_internal@@Base>
  402ccf:	add    rsp,0x20
  402cd3:	pop    rbp
  402cd4:	ret    
  402cd5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402cdf:	nop

0000000000402ce0 <mmk_matcher_init@@Base>:
  402ce0:	push   rbp
  402ce1:	mov    rbp,rsp
  402ce4:	sub    rsp,0x40
  402ce8:	mov    DWORD PTR [rbp-0x4],edi
  402ceb:	mov    edi,0x18
  402cf0:	call   404b50 <mmk_malloc@@Base>
  402cf5:	mov    QWORD PTR [rbp-0x10],rax
  402cf9:	mov    rax,QWORD PTR [rbp-0x10]
  402cfd:	vxorps xmm0,xmm0,xmm0
  402d01:	vmovdqa XMMWORD PTR [rbp-0x30],xmm0
  402d06:	mov    QWORD PTR [rbp-0x20],0x0
  402d0e:	mov    ecx,DWORD PTR [rbp-0x4]
  402d11:	mov    DWORD PTR [rbp-0x30],ecx
  402d14:	mov    rdx,QWORD PTR [rbp-0x20]
  402d18:	mov    QWORD PTR [rax+0x10],rdx
  402d1c:	vmovdqa xmm0,XMMWORD PTR [rbp-0x30]
  402d21:	vmovdqu XMMWORD PTR [rax],xmm0
  402d25:	mov    rax,QWORD PTR [rbp-0x10]
  402d29:	mov    QWORD PTR [rbp-0x38],rax
  402d2d:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  402d39:	mov    rcx,QWORD PTR [rbp-0x38]
  402d3d:	mov    QWORD PTR [rax-0x28],rcx
  402d44:	add    rsp,0x40
  402d48:	pop    rbp
  402d49:	ret    
  402d4a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000402d50 <mmk_matcher_term@@Base>:
  402d50:	push   rbp
  402d51:	mov    rbp,rsp
  402d54:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  402d60:	mov    QWORD PTR [rax-0x28],0x0
  402d6b:	pop    rbp
  402d6c:	ret    
  402d6d:	nop    DWORD PTR [rax]

0000000000402d70 <mmk_matcher_ctx@@Base>:
  402d70:	push   rbp
  402d71:	mov    rbp,rsp
  402d74:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  402d80:	mov    rax,QWORD PTR [rax-0x28]
  402d87:	pop    rbp
  402d88:	ret    
  402d89:	nop    DWORD PTR [rax+0x0]

0000000000402d90 <mmk_matcher_add@@Base>:
  402d90:	push   rbp
  402d91:	mov    rbp,rsp
  402d94:	push   rbx
  402d95:	sub    rsp,0x48
  402d99:	mov    DWORD PTR [rbp-0xc],edi
  402d9c:	mov    DWORD PTR [rbp-0x10],esi
  402d9f:	mov    edi,0x18
  402da4:	call   404b50 <mmk_malloc@@Base>
  402da9:	mov    QWORD PTR [rbp-0x18],rax
  402dad:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  402db9:	mov    rcx,QWORD PTR [rax-0x28]
  402dc0:	mov    QWORD PTR [rbp-0x20],rcx
  402dc4:	mov    rcx,QWORD PTR [rbp-0x18]
  402dc8:	mov    ebx,DWORD PTR [rbp-0xc]
  402dcb:	mov    DWORD PTR [rbp-0x38],ebx
  402dce:	movsxd rdx,DWORD PTR [rbp-0x10]
  402dd2:	mov    QWORD PTR [rbp-0x30],rdx
  402dd6:	mov    QWORD PTR [rbp-0x28],0x0
  402dde:	mov    rdx,QWORD PTR [rbp-0x28]
  402de2:	mov    QWORD PTR [rcx+0x10],rdx
  402de6:	vmovdqu xmm0,XMMWORD PTR [rbp-0x38]
  402deb:	vmovdqu XMMWORD PTR [rcx],xmm0
  402def:	mov    rax,QWORD PTR [rax-0x28]
  402df6:	mov    rax,QWORD PTR [rax+0x10]
  402dfa:	mov    QWORD PTR [rbp-0x40],rax
  402dfe:	xor    eax,eax
  402e00:	cmp    QWORD PTR [rbp-0x40],0x0
  402e05:	mov    BYTE PTR [rbp-0x41],al
  402e08:	je     402e24 <mmk_matcher_add@@Base+0x94>
  402e0e:	mov    rax,QWORD PTR [rbp-0x40]
  402e12:	mov    rax,QWORD PTR [rax+0x8]
  402e16:	mov    rcx,QWORD PTR [rbp-0x18]
  402e1a:	cmp    rax,QWORD PTR [rcx+0x8]
  402e1e:	setb   dl
  402e21:	mov    BYTE PTR [rbp-0x41],dl
  402e24:	mov    al,BYTE PTR [rbp-0x41]
  402e27:	test   al,0x1
  402e29:	jne    402e34 <mmk_matcher_add@@Base+0xa4>
  402e2f:	jmp    402e52 <mmk_matcher_add@@Base+0xc2>
  402e34:	jmp    402e39 <mmk_matcher_add@@Base+0xa9>
  402e39:	mov    rax,QWORD PTR [rbp-0x40]
  402e3d:	mov    QWORD PTR [rbp-0x20],rax
  402e41:	mov    rax,QWORD PTR [rbp-0x40]
  402e45:	mov    rax,QWORD PTR [rax+0x10]
  402e49:	mov    QWORD PTR [rbp-0x40],rax
  402e4d:	jmp    402dfe <mmk_matcher_add@@Base+0x6e>
  402e52:	mov    rax,QWORD PTR [rbp-0x20]
  402e56:	mov    rax,QWORD PTR [rax+0x10]
  402e5a:	mov    rcx,QWORD PTR [rbp-0x18]
  402e5e:	mov    QWORD PTR [rcx+0x10],rax
  402e62:	mov    rax,QWORD PTR [rbp-0x18]
  402e66:	mov    rcx,QWORD PTR [rbp-0x20]
  402e6a:	mov    QWORD PTR [rcx+0x10],rax
  402e6e:	add    rsp,0x48
  402e72:	pop    rbx
  402e73:	pop    rbp
  402e74:	ret    
  402e75:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402e7f:	nop

0000000000402e80 <mmk_matcher_get_predicate@@Base>:
  402e80:	push   rbp
  402e81:	mov    rbp,rsp
  402e84:	mov    QWORD PTR [rbp-0x8],rdi
  402e88:	mov    rax,QWORD PTR [rbp-0x8]
  402e8c:	add    rax,0x18
  402e92:	pop    rbp
  402e93:	ret    
  402e94:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402e9e:	xchg   ax,ax

0000000000402ea0 <mmk_mock_create_internal@@Base>:
  402ea0:	push   rbp
  402ea1:	mov    rbp,rsp
  402ea4:	sub    rsp,0x80
  402eab:	mov    QWORD PTR [rbp-0x8],rdi
  402eaf:	mov    QWORD PTR [rbp-0x10],rsi
  402eb3:	call   402ba0 <mmk_init@@Base>
  402eb8:	mov    edi,0x28
  402ebd:	call   404b50 <mmk_malloc@@Base>
  402ec2:	mov    QWORD PTR [rbp-0x18],rax
  402ec6:	cmp    QWORD PTR [rbp-0x18],0x0
  402ecb:	jne    402f04 <mmk_mock_create_internal@@Base+0x64>
  402ed1:	mov    rax,QWORD PTR [rip+0x5120]        # 407ff8 <stderr@GLIBC_2.2.5>
  402ed8:	mov    rdi,QWORD PTR [rax]
  402edb:	lea    rsi,[rip+0x213a]        # 40501c <_IO_stdin_used@@Base+0x1c>
  402ee2:	lea    rdx,[rip+0x226e]        # 405157 <_IO_stdin_used@@Base+0x157>
  402ee9:	mov    ecx,0x24
  402eee:	lea    r8,[rip+0x22b4]        # 4051a9 <_IO_stdin_used@@Base+0x1a9>
  402ef5:	mov    al,0x0
  402ef7:	call   4020e0 <fprintf@plt>
  402efc:	mov    DWORD PTR [rbp-0x60],eax
  402eff:	call   402040 <abort@plt>
  402f04:	jmp    402f09 <mmk_mock_create_internal@@Base+0x69>
  402f09:	xor    esi,esi
  402f0b:	mov    rax,QWORD PTR [rbp-0x18]
  402f0f:	lea    rcx,[rbp-0x40]
  402f13:	mov    rdx,rcx
  402f16:	mov    rdi,rdx
  402f19:	mov    edx,0x28
  402f1e:	mov    QWORD PTR [rbp-0x68],rdx
  402f22:	mov    QWORD PTR [rbp-0x70],rax
  402f26:	mov    QWORD PTR [rbp-0x78],rcx
  402f2a:	call   4020b0 <memset@plt>
  402f2f:	mov    rax,QWORD PTR [rbp-0x70]
  402f33:	mov    rcx,QWORD PTR [rbp-0x78]
  402f37:	mov    rdi,rax
  402f3a:	mov    rsi,rcx
  402f3d:	mov    rdx,QWORD PTR [rbp-0x68]
  402f41:	call   4020f0 <memcpy@plt>
  402f46:	mov    rdi,QWORD PTR [rbp-0x8]
  402f4a:	mov    esi,0x40
  402f4f:	call   404960 <mmk_strchr@@Base>
  402f54:	mov    QWORD PTR [rbp-0x48],rax
  402f58:	cmp    QWORD PTR [rbp-0x48],0x0
  402f5d:	jne    402f75 <mmk_mock_create_internal@@Base+0xd5>
  402f63:	mov    rdi,QWORD PTR [rbp-0x8]
  402f67:	call   404ab0 <mmk_strlen@@Base>
  402f6c:	mov    QWORD PTR [rbp-0x50],rax
  402f70:	jmp    402f84 <mmk_mock_create_internal@@Base+0xe4>
  402f75:	mov    rax,QWORD PTR [rbp-0x48]
  402f79:	mov    rcx,QWORD PTR [rbp-0x8]
  402f7d:	sub    rax,rcx
  402f80:	mov    QWORD PTR [rbp-0x50],rax
  402f84:	mov    rax,QWORD PTR [rbp-0x50]
  402f88:	add    rax,0x1
  402f8e:	mov    rdi,rax
  402f91:	call   404b50 <mmk_malloc@@Base>
  402f96:	mov    QWORD PTR [rbp-0x58],rax
  402f9a:	mov    rdi,QWORD PTR [rbp-0x58]
  402f9e:	mov    rsi,QWORD PTR [rbp-0x8]
  402fa2:	mov    rdx,QWORD PTR [rbp-0x50]
  402fa6:	call   404a20 <mmk_strncpy@@Base>
  402fab:	mov    rcx,QWORD PTR [rbp-0x58]
  402faf:	mov    rdx,QWORD PTR [rbp-0x50]
  402fb3:	mov    BYTE PTR [rcx+rdx*1],0x0
  402fb7:	cmp    QWORD PTR [rbp-0x48],0x0
  402fbc:	mov    r8b,0x1
  402fbf:	mov    BYTE PTR [rbp-0x79],r8b
  402fc3:	je     402ff0 <mmk_mock_create_internal@@Base+0x150>
  402fc9:	mov    rax,QWORD PTR [rbp-0x48]
  402fcd:	add    rax,0x1
  402fd3:	mov    rdi,rax
  402fd6:	lea    rsi,[rip+0x21d0]        # 4051ad <_IO_stdin_used@@Base+0x1ad>
  402fdd:	mov    edx,0x4
  402fe2:	call   404880 <mmk_strneq@@Base>
  402fe7:	cmp    eax,0x0
  402fea:	setne  cl
  402fed:	mov    BYTE PTR [rbp-0x79],cl
  402ff0:	mov    al,BYTE PTR [rbp-0x79]
  402ff3:	and    al,0x1
  402ff5:	movzx  ecx,al
  402ff8:	mov    DWORD PTR [rbp-0x5c],ecx
  402ffb:	mov    rdi,QWORD PTR [rbp-0x8]
  402fff:	mov    rsi,QWORD PTR [rbp-0x10]
  403003:	mov    rdx,QWORD PTR [rbp-0x18]
  403007:	call   404090 <mmk_stub_create@@Base>
  40300c:	mov    rdx,QWORD PTR [rbp-0x18]
  403010:	mov    QWORD PTR [rdx+0x8],rax
  403014:	mov    rax,QWORD PTR [rbp-0x18]
  403018:	cmp    QWORD PTR [rax+0x8],0x0
  40301d:	jne    403047 <mmk_mock_create_internal@@Base+0x1a7>
  403023:	mov    rax,QWORD PTR [rip+0x4fce]        # 407ff8 <stderr@GLIBC_2.2.5>
  40302a:	mov    rdi,QWORD PTR [rax]
  40302d:	mov    rdx,QWORD PTR [rbp-0x8]
  403031:	lea    rsi,[rip+0x217a]        # 4051b2 <_IO_stdin_used@@Base+0x1b2>
  403038:	mov    al,0x0
  40303a:	call   4020e0 <fprintf@plt>
  40303f:	mov    DWORD PTR [rbp-0x80],eax
  403042:	call   402040 <abort@plt>
  403047:	cmp    DWORD PTR [rbp-0x5c],0x0
  40304b:	jne    403071 <mmk_mock_create_internal@@Base+0x1d1>
  403051:	mov    rdi,QWORD PTR [rbp-0x58]
  403055:	mov    rsi,QWORD PTR [rbp-0x10]
  403059:	mov    rax,QWORD PTR [rbp-0x18]
  40305d:	mov    rdx,rax
  403060:	call   404090 <mmk_stub_create@@Base>
  403065:	mov    rcx,QWORD PTR [rbp-0x18]
  403069:	mov    rcx,QWORD PTR [rcx+0x8]
  40306d:	mov    QWORD PTR [rcx+0x48],rax
  403071:	mov    rdi,QWORD PTR [rbp-0x58]
  403075:	call   404bb0 <mmk_free@@Base>
  40307a:	mov    rax,QWORD PTR [rbp-0x18]
  40307e:	mov    rax,QWORD PTR [rax+0x8]
  403082:	mov    rax,QWORD PTR [rax+0x40]
  403086:	add    rsp,0x80
  40308d:	pop    rbp
  40308e:	ret    
  40308f:	nop

0000000000403090 <mmk_mock_destroy_internal@@Base>:
  403090:	push   rbp
  403091:	mov    rbp,rsp
  403094:	sub    rsp,0x40
  403098:	mov    QWORD PTR [rbp-0x8],rdi
  40309c:	mov    rax,QWORD PTR [rbp-0x8]
  4030a0:	mov    rax,QWORD PTR [rax+0x8]
  4030a4:	mov    QWORD PTR [rbp-0x10],rax
  4030a8:	cmp    QWORD PTR [rbp-0x10],0x0
  4030ad:	je     4030d5 <mmk_mock_destroy_internal@@Base+0x45>
  4030b3:	mov    rax,QWORD PTR [rbp-0x10]
  4030b7:	mov    rax,QWORD PTR [rax+0x48]
  4030bb:	mov    QWORD PTR [rbp-0x18],rax
  4030bf:	mov    rdi,QWORD PTR [rbp-0x10]
  4030c3:	call   404170 <mmk_stub_destroy@@Base>
  4030c8:	mov    rax,QWORD PTR [rbp-0x18]
  4030cc:	mov    QWORD PTR [rbp-0x10],rax
  4030d0:	jmp    4030a8 <mmk_mock_destroy_internal@@Base+0x18>
  4030d5:	mov    rax,QWORD PTR [rbp-0x8]
  4030d9:	mov    rdi,QWORD PTR [rax+0x10]
  4030dd:	call   404bb0 <mmk_free@@Base>
  4030e2:	mov    rax,QWORD PTR [rbp-0x8]
  4030e6:	mov    rax,QWORD PTR [rax]
  4030e9:	mov    QWORD PTR [rbp-0x20],rax
  4030ed:	cmp    QWORD PTR [rbp-0x20],0x0
  4030f2:	je     403158 <mmk_mock_destroy_internal@@Base+0xc8>
  4030f8:	mov    rax,QWORD PTR [rbp-0x20]
  4030fc:	mov    rax,QWORD PTR [rax+0x8]
  403100:	mov    QWORD PTR [rbp-0x28],rax
  403104:	mov    rax,QWORD PTR [rbp-0x20]
  403108:	mov    rax,QWORD PTR [rax]
  40310b:	mov    QWORD PTR [rbp-0x30],rax
  40310f:	cmp    QWORD PTR [rbp-0x30],0x0
  403114:	je     40313f <mmk_mock_destroy_internal@@Base+0xaf>
  40311a:	mov    rax,QWORD PTR [rbp-0x30]
  40311e:	mov    rax,QWORD PTR [rax+0x10]
  403122:	mov    QWORD PTR [rbp-0x38],rax
  403126:	mov    rax,QWORD PTR [rbp-0x30]
  40312a:	mov    rdi,rax
  40312d:	call   404bb0 <mmk_free@@Base>
  403132:	mov    rax,QWORD PTR [rbp-0x38]
  403136:	mov    QWORD PTR [rbp-0x30],rax
  40313a:	jmp    40310f <mmk_mock_destroy_internal@@Base+0x7f>
  40313f:	mov    rax,QWORD PTR [rbp-0x20]
  403143:	mov    rdi,rax
  403146:	call   404bb0 <mmk_free@@Base>
  40314b:	mov    rax,QWORD PTR [rbp-0x28]
  40314f:	mov    QWORD PTR [rbp-0x20],rax
  403153:	jmp    4030ed <mmk_mock_destroy_internal@@Base+0x5d>
  403158:	mov    rax,QWORD PTR [rbp-0x8]
  40315c:	mov    rdi,rax
  40315f:	call   404bb0 <mmk_free@@Base>
  403164:	add    rsp,0x40
  403168:	pop    rbp
  403169:	ret    
  40316a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000403170 <mmk_mock_params_begin@@Base>:
  403170:	push   rbp
  403171:	mov    rbp,rsp
  403174:	mov    QWORD PTR [rbp-0x10],rdi
  403178:	mov    rax,QWORD PTR [rbp-0x10]
  40317c:	cmp    QWORD PTR [rax+0x10],0x0
  403181:	je     403196 <mmk_mock_params_begin@@Base+0x26>
  403187:	mov    rax,QWORD PTR [rbp-0x10]
  40318b:	cmp    QWORD PTR [rax+0x18],0x0
  403190:	jne    4031a3 <mmk_mock_params_begin@@Base+0x33>
  403196:	mov    QWORD PTR [rbp-0x8],0x0
  40319e:	jmp    4031b5 <mmk_mock_params_begin@@Base+0x45>
  4031a3:	mov    rax,QWORD PTR [rbp-0x10]
  4031a7:	mov    rax,QWORD PTR [rax+0x10]
  4031ab:	add    rax,0x8
  4031b1:	mov    QWORD PTR [rbp-0x8],rax
  4031b5:	mov    rax,QWORD PTR [rbp-0x8]
  4031b9:	pop    rbp
  4031ba:	ret    
  4031bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004031c0 <mmk_mock_params_next@@Base>:
  4031c0:	push   rbp
  4031c1:	mov    rbp,rsp
  4031c4:	mov    QWORD PTR [rbp-0x10],rdi
  4031c8:	mov    QWORD PTR [rbp-0x18],rsi
  4031cc:	mov    rax,QWORD PTR [rbp-0x18]
  4031d0:	mov    QWORD PTR [rbp-0x20],rax
  4031d4:	mov    rax,QWORD PTR [rbp-0x20]
  4031d8:	mov    rax,QWORD PTR [rax-0x8]
  4031dc:	mov    QWORD PTR [rbp-0x28],rax
  4031e0:	mov    rax,QWORD PTR [rbp-0x28]
  4031e4:	add    rax,0x8
  4031ea:	add    rax,QWORD PTR [rbp-0x20]
  4031ee:	mov    QWORD PTR [rbp-0x20],rax
  4031f2:	mov    rax,QWORD PTR [rbp-0x20]
  4031f6:	mov    rcx,QWORD PTR [rbp-0x10]
  4031fa:	mov    rcx,QWORD PTR [rcx+0x10]
  4031fe:	mov    rdx,QWORD PTR [rbp-0x10]
  403202:	add    rcx,QWORD PTR [rdx+0x18]
  403206:	cmp    rax,rcx
  403209:	jb     40321c <mmk_mock_params_next@@Base+0x5c>
  40320f:	mov    QWORD PTR [rbp-0x8],0x0
  403217:	jmp    403224 <mmk_mock_params_next@@Base+0x64>
  40321c:	mov    rax,QWORD PTR [rbp-0x20]
  403220:	mov    QWORD PTR [rbp-0x8],rax
  403224:	mov    rax,QWORD PTR [rbp-0x8]
  403228:	pop    rbp
  403229:	ret    
  40322a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000403230 <mmk_mock_get_params@@Base>:
  403230:	push   rbp
  403231:	mov    rbp,rsp
  403234:	sub    rsp,0x10
  403238:	call   404070 <mmk_ctx@@Base>
  40323d:	mov    rdi,rax
  403240:	call   403dc0 <mmk_stub_context@@Base>
  403245:	mov    QWORD PTR [rbp-0x8],rax
  403249:	mov    rax,QWORD PTR [rbp-0x8]
  40324d:	mov    rax,QWORD PTR [rax]
  403250:	add    rsp,0x10
  403254:	pop    rbp
  403255:	ret    
  403256:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000403260 <plt_init_ctx@@Base>:
  403260:	push   rbp
  403261:	mov    rbp,rsp
  403264:	mov    rax,0xffffffffffffffff
  40326b:	cmp    QWORD PTR [rip+0x4e4e],rax        # 4080c0 <__data_start@@Base+0x18>
  403272:	jne    403284 <plt_init_ctx@@Base+0x24>
  403278:	call   403290 <plt_init_ctx@@Base+0x30>
  40327d:	mov    QWORD PTR [rip+0x4e3c],rax        # 4080c0 <__data_start@@Base+0x18>
  403284:	mov    rax,QWORD PTR [rip+0x4e35]        # 4080c0 <__data_start@@Base+0x18>
  40328b:	pop    rbp
  40328c:	ret    
  40328d:	nop    DWORD PTR [rax]
  403290:	push   rbp
  403291:	mov    rbp,rsp
  403294:	sub    rsp,0x30
  403298:	mov    rax,QWORD PTR [rip+0x4d31]        # 407fd0 <_r_debug@GLIBC_2.2.5>
  40329f:	mov    QWORD PTR [rbp-0x8],0x0
  4032a7:	mov    QWORD PTR [rbp-0x8],rax
  4032ab:	cmp    QWORD PTR [rbp-0x8],0x0
  4032b0:	jne    40334d <plt_init_ctx@@Base+0xed>
  4032b6:	mov    rax,QWORD PTR [rip+0x4d2b]        # 407fe8 <environ@GLIBC_2.2.5>
  4032bd:	mov    rax,QWORD PTR [rax]
  4032c0:	mov    QWORD PTR [rbp-0x10],rax
  4032c4:	mov    rax,QWORD PTR [rbp-0x10]
  4032c8:	mov    rcx,rax
  4032cb:	add    rcx,0x8
  4032d2:	mov    QWORD PTR [rbp-0x10],rcx
  4032d6:	cmp    QWORD PTR [rax],0x0
  4032da:	je     4032e5 <plt_init_ctx@@Base+0x85>
  4032e0:	jmp    4032c4 <plt_init_ctx@@Base+0x64>
  4032e5:	mov    rax,QWORD PTR [rbp-0x10]
  4032e9:	mov    QWORD PTR [rbp-0x18],rax
  4032ed:	mov    rdi,QWORD PTR [rbp-0x18]
  4032f1:	mov    esi,0x3
  4032f6:	call   403a50 <plt_get_real_fn@@Base+0x80>
  4032fb:	mov    QWORD PTR [rbp-0x20],rax
  4032ff:	mov    rdi,QWORD PTR [rbp-0x18]
  403303:	mov    esi,0x4
  403308:	call   403a50 <plt_get_real_fn@@Base+0x80>
  40330d:	mov    QWORD PTR [rbp-0x28],rax
  403311:	cmp    QWORD PTR [rbp-0x20],0xffffffffffffffff
  403316:	je     403348 <plt_init_ctx@@Base+0xe8>
  40331c:	cmp    QWORD PTR [rbp-0x28],0xffffffffffffffff
  403321:	je     403348 <plt_init_ctx@@Base+0xe8>
  403327:	mov    rax,QWORD PTR [rbp-0x20]
  40332b:	mov    rsi,QWORD PTR [rbp-0x28]
  40332f:	mov    rdi,rax
  403332:	call   403ac0 <plt_get_real_fn@@Base+0xf0>
  403337:	mov    QWORD PTR [rbp-0x30],rax
  40333b:	mov    rdi,QWORD PTR [rbp-0x30]
  40333f:	call   403b40 <plt_get_real_fn@@Base+0x170>
  403344:	mov    QWORD PTR [rbp-0x8],rax
  403348:	jmp    40334d <plt_init_ctx@@Base+0xed>
  40334d:	mov    rax,QWORD PTR [rbp-0x8]
  403351:	add    rsp,0x30
  403355:	pop    rbp
  403356:	ret    
  403357:	nop    WORD PTR [rax+rax*1+0x0]

0000000000403360 <plt_get_lib@@Base>:
  403360:	push   rbp
  403361:	mov    rbp,rsp
  403364:	sub    rsp,0x90
  40336b:	mov    QWORD PTR [rbp-0x10],rdi
  40336f:	mov    QWORD PTR [rbp-0x18],rsi
  403373:	cmp    QWORD PTR [rbp-0x18],0x0
  403378:	jne    403389 <plt_get_lib@@Base+0x29>
  40337e:	lea    rax,[rip+0x1e28]        # 4051ad <_IO_stdin_used@@Base+0x1ad>
  403385:	mov    QWORD PTR [rbp-0x18],rax
  403389:	mov    DWORD PTR [rbp-0x1c],0x0
  403390:	mov    rdi,QWORD PTR [rbp-0x18]
  403394:	lea    rsi,[rip+0x1e4a]        # 4051e5 <_IO_stdin_used@@Base+0x1e5>
  40339b:	mov    edx,0x4
  4033a0:	call   402060 <strncmp@plt>
  4033a5:	cmp    eax,0x0
  4033a8:	jne    4033ba <plt_get_lib@@Base+0x5a>
  4033ae:	mov    DWORD PTR [rbp-0x1c],0x1
  4033b5:	jmp    4034c1 <plt_get_lib@@Base+0x161>
  4033ba:	mov    rdi,QWORD PTR [rbp-0x18]
  4033be:	lea    rsi,[rip+0x1e25]        # 4051ea <_IO_stdin_used@@Base+0x1ea>
  4033c5:	mov    edx,0x5
  4033ca:	call   402060 <strncmp@plt>
  4033cf:	cmp    eax,0x0
  4033d2:	jne    4033e4 <plt_get_lib@@Base+0x84>
  4033d8:	mov    DWORD PTR [rbp-0x1c],0x2
  4033df:	jmp    4034bc <plt_get_lib@@Base+0x15c>
  4033e4:	mov    rdi,QWORD PTR [rbp-0x18]
  4033e8:	lea    rsi,[rip+0x1e01]        # 4051f0 <_IO_stdin_used@@Base+0x1f0>
  4033ef:	mov    edx,0x4
  4033f4:	call   402060 <strncmp@plt>
  4033f9:	cmp    eax,0x0
  4033fc:	jne    40340e <plt_get_lib@@Base+0xae>
  403402:	mov    DWORD PTR [rbp-0x1c],0x3
  403409:	jmp    4034b7 <plt_get_lib@@Base+0x157>
  40340e:	mov    rdi,QWORD PTR [rbp-0x18]
  403412:	lea    rsi,[rip+0x1d94]        # 4051ad <_IO_stdin_used@@Base+0x1ad>
  403419:	call   4020d0 <strcmp@plt>
  40341e:	cmp    eax,0x0
  403421:	jne    403437 <plt_get_lib@@Base+0xd7>
  403427:	lea    rax,[rip+0x1e0b]        # 405239 <_IO_stdin_used@@Base+0x239>
  40342e:	mov    QWORD PTR [rbp-0x18],rax
  403432:	jmp    4034b2 <plt_get_lib@@Base+0x152>
  403437:	mov    rdi,QWORD PTR [rbp-0x18]
  40343b:	mov    esi,0x3a
  403440:	call   402090 <strchr@plt>
  403445:	mov    QWORD PTR [rbp-0x28],rax
  403449:	cmp    QWORD PTR [rbp-0x28],0x0
  40344e:	je     403491 <plt_get_lib@@Base+0x131>
  403454:	mov    rax,QWORD PTR [rip+0x4b9d]        # 407ff8 <stderr@GLIBC_2.2.5>
  40345b:	mov    rcx,QWORD PTR [rbp-0x28]
  40345f:	mov    rdx,QWORD PTR [rbp-0x18]
  403463:	sub    rcx,rdx
  403466:	add    rcx,0x1
  40346d:	mov    QWORD PTR [rbp-0x30],rcx
  403471:	mov    rdi,QWORD PTR [rax]
  403474:	mov    rax,QWORD PTR [rbp-0x30]
  403478:	mov    rcx,QWORD PTR [rbp-0x18]
  40347c:	lea    rsi,[rip+0x1d72]        # 4051f5 <_IO_stdin_used@@Base+0x1f5>
  403483:	mov    edx,eax
  403485:	mov    al,0x0
  403487:	call   4020e0 <fprintf@plt>
  40348c:	jmp    4034ad <plt_get_lib@@Base+0x14d>
  403491:	mov    rax,QWORD PTR [rip+0x4b60]        # 407ff8 <stderr@GLIBC_2.2.5>
  403498:	mov    rdi,QWORD PTR [rax]
  40349b:	mov    rdx,QWORD PTR [rbp-0x18]
  40349f:	lea    rsi,[rip+0x1d71]        # 405217 <_IO_stdin_used@@Base+0x217>
  4034a6:	mov    al,0x0
  4034a8:	call   4020e0 <fprintf@plt>
  4034ad:	call   402040 <abort@plt>
  4034b2:	jmp    4034b7 <plt_get_lib@@Base+0x157>
  4034b7:	jmp    4034bc <plt_get_lib@@Base+0x15c>
  4034bc:	jmp    4034c1 <plt_get_lib@@Base+0x161>
  4034c1:	cmp    DWORD PTR [rbp-0x1c],0x0
  4034c5:	jne    4034d8 <plt_get_lib@@Base+0x178>
  4034cb:	mov    rax,QWORD PTR [rbp-0x18]
  4034cf:	mov    QWORD PTR [rbp-0x80],rax
  4034d3:	jmp    4034f0 <plt_get_lib@@Base+0x190>
  4034d8:	mov    rdi,QWORD PTR [rbp-0x18]
  4034dc:	mov    esi,0x3a
  4034e1:	call   402090 <strchr@plt>
  4034e6:	add    rax,0x1
  4034ec:	mov    QWORD PTR [rbp-0x80],rax
  4034f0:	mov    rax,QWORD PTR [rbp-0x80]
  4034f4:	mov    QWORD PTR [rbp-0x38],rax
  4034f8:	mov    rdi,QWORD PTR [rbp-0x38]
  4034fc:	call   402070 <strlen@plt>
  403501:	mov    QWORD PTR [rbp-0x40],rax
  403505:	mov    rdi,QWORD PTR [rbp-0x38]
  403509:	lea    rsi,[rip+0x1d9c]        # 4052ac <_IO_stdin_used@@Base+0x2ac>
  403510:	call   4020d0 <strcmp@plt>
  403515:	cmp    eax,0x0
  403518:	setne  cl
  40351b:	xor    cl,0xff
  40351e:	and    cl,0x1
  403521:	movzx  eax,cl
  403524:	mov    DWORD PTR [rbp-0x44],eax
  403527:	mov    rdx,QWORD PTR [rbp-0x10]
  40352b:	mov    rdx,QWORD PTR [rdx+0x8]
  40352f:	mov    QWORD PTR [rbp-0x50],rdx
  403533:	cmp    QWORD PTR [rbp-0x50],0x0
  403538:	je     4036ef <plt_get_lib@@Base+0x38f>
  40353e:	cmp    DWORD PTR [rbp-0x1c],0x1
  403542:	jne    403657 <plt_get_lib@@Base+0x2f7>
  403548:	cmp    DWORD PTR [rbp-0x44],0x0
  40354c:	je     4035a0 <plt_get_lib@@Base+0x240>
  403552:	mov    rax,QWORD PTR [rbp-0x50]
  403556:	mov    rdi,QWORD PTR [rax+0x8]
  40355a:	lea    rsi,[rip+0x1cd9]        # 40523a <_IO_stdin_used@@Base+0x23a>
  403561:	call   402140 <strstr@plt>
  403566:	cmp    rax,0x0
  40356a:	jne    40358e <plt_get_lib@@Base+0x22e>
  403570:	mov    rax,QWORD PTR [rbp-0x50]
  403574:	mov    rdi,QWORD PTR [rax+0x8]
  403578:	lea    rsi,[rip+0x1cc4]        # 405243 <_IO_stdin_used@@Base+0x243>
  40357f:	call   402140 <strstr@plt>
  403584:	cmp    rax,0x0
  403588:	je     40359b <plt_get_lib@@Base+0x23b>
  40358e:	mov    rax,QWORD PTR [rbp-0x50]
  403592:	mov    QWORD PTR [rbp-0x8],rax
  403596:	jmp    4036f7 <plt_get_lib@@Base+0x397>
  40359b:	jmp    403652 <plt_get_lib@@Base+0x2f2>
  4035a0:	mov    rax,QWORD PTR [rbp-0x40]
  4035a4:	add    rax,0x8
  4035a8:	mov    QWORD PTR [rbp-0x58],rax
  4035ac:	mov    rax,QWORD PTR [rbp-0x58]
  4035b0:	mov    rcx,rsp
  4035b3:	mov    QWORD PTR [rbp-0x60],rcx
  4035b7:	mov    rcx,rax
  4035ba:	add    rcx,0xf
  4035be:	and    rcx,0xfffffffffffffff0
  4035c2:	mov    rdx,rsp
  4035c5:	sub    rdx,rcx
  4035c8:	mov    rsp,rdx
  4035cb:	mov    QWORD PTR [rbp-0x68],rax
  4035cf:	mov    rsi,QWORD PTR [rbp-0x58]
  4035d3:	mov    rcx,QWORD PTR [rbp-0x38]
  4035d7:	mov    rdi,rdx
  4035da:	lea    rax,[rip+0x1c6b]        # 40524c <_IO_stdin_used@@Base+0x24c>
  4035e1:	mov    QWORD PTR [rbp-0x88],rdx
  4035e8:	mov    rdx,rax
  4035eb:	mov    al,0x0
  4035ed:	call   4020a0 <snprintf@plt>
  4035f2:	mov    rcx,QWORD PTR [rbp-0x50]
  4035f6:	mov    rdi,QWORD PTR [rcx+0x8]
  4035fa:	mov    rsi,QWORD PTR [rbp-0x88]
  403601:	mov    DWORD PTR [rbp-0x8c],eax
  403607:	call   402140 <strstr@plt>
  40360c:	cmp    rax,0x0
  403610:	je     40362a <plt_get_lib@@Base+0x2ca>
  403616:	mov    rax,QWORD PTR [rbp-0x50]
  40361a:	mov    QWORD PTR [rbp-0x8],rax
  40361e:	mov    DWORD PTR [rbp-0x6c],0x1
  403625:	jmp    403631 <plt_get_lib@@Base+0x2d1>
  40362a:	mov    DWORD PTR [rbp-0x6c],0x0
  403631:	mov    rax,QWORD PTR [rbp-0x60]
  403635:	mov    rsp,rax
  403638:	mov    ecx,DWORD PTR [rbp-0x6c]
  40363b:	test   ecx,ecx
  40363d:	je     40364d <plt_get_lib@@Base+0x2ed>
  403643:	jmp    403648 <plt_get_lib@@Base+0x2e8>
  403648:	jmp    4036f7 <plt_get_lib@@Base+0x397>
  40364d:	jmp    403652 <plt_get_lib@@Base+0x2f2>
  403652:	jmp    4036d9 <plt_get_lib@@Base+0x379>
  403657:	cmp    DWORD PTR [rbp-0x1c],0x0
  40365b:	je     40366b <plt_get_lib@@Base+0x30b>
  403661:	cmp    DWORD PTR [rbp-0x1c],0x2
  403665:	jne    403697 <plt_get_lib@@Base+0x337>
  40366b:	mov    rdi,QWORD PTR [rbp-0x18]
  40366f:	mov    rax,QWORD PTR [rbp-0x50]
  403673:	mov    rsi,QWORD PTR [rax+0x8]
  403677:	call   4020d0 <strcmp@plt>
  40367c:	cmp    eax,0x0
  40367f:	jne    403692 <plt_get_lib@@Base+0x332>
  403685:	mov    rax,QWORD PTR [rbp-0x50]
  403689:	mov    QWORD PTR [rbp-0x8],rax
  40368d:	jmp    4036f7 <plt_get_lib@@Base+0x397>
  403692:	jmp    4036d4 <plt_get_lib@@Base+0x374>
  403697:	cmp    DWORD PTR [rbp-0x1c],0x3
  40369b:	jne    4036cf <plt_get_lib@@Base+0x36f>
  4036a1:	mov    rdi,QWORD PTR [rbp-0x50]
  4036a5:	mov    rsi,QWORD PTR [rbp-0x38]
  4036a9:	call   403700 <plt_get_lib@@Base+0x3a0>
  4036ae:	mov    QWORD PTR [rbp-0x78],rax
  4036b2:	cmp    QWORD PTR [rbp-0x78],0x0
  4036b7:	je     4036ca <plt_get_lib@@Base+0x36a>
  4036bd:	mov    rax,QWORD PTR [rbp-0x50]
  4036c1:	mov    QWORD PTR [rbp-0x8],rax
  4036c5:	jmp    4036f7 <plt_get_lib@@Base+0x397>
  4036ca:	jmp    4036cf <plt_get_lib@@Base+0x36f>
  4036cf:	jmp    4036d4 <plt_get_lib@@Base+0x374>
  4036d4:	jmp    4036d9 <plt_get_lib@@Base+0x379>
  4036d9:	jmp    4036de <plt_get_lib@@Base+0x37e>
  4036de:	mov    rax,QWORD PTR [rbp-0x50]
  4036e2:	mov    rax,QWORD PTR [rax+0x18]
  4036e6:	mov    QWORD PTR [rbp-0x50],rax
  4036ea:	jmp    403533 <plt_get_lib@@Base+0x1d3>
  4036ef:	mov    QWORD PTR [rbp-0x8],0x0
  4036f7:	mov    rax,QWORD PTR [rbp-0x8]
  4036fb:	mov    rsp,rbp
  4036fe:	pop    rbp
  4036ff:	ret    
  403700:	push   rbp
  403701:	mov    rbp,rsp
  403704:	sub    rsp,0x70
  403708:	mov    QWORD PTR [rbp-0x10],rdi
  40370c:	mov    QWORD PTR [rbp-0x18],rsi
  403710:	mov    rdi,QWORD PTR [rbp-0x10]
  403714:	mov    esi,0x6
  403719:	call   403bb0 <plt_get_real_fn@@Base+0x1e0>
  40371e:	mov    QWORD PTR [rbp-0x20],rax
  403722:	mov    rdi,QWORD PTR [rbp-0x10]
  403726:	mov    esi,0x5
  40372b:	call   403bb0 <plt_get_real_fn@@Base+0x1e0>
  403730:	mov    QWORD PTR [rbp-0x28],rax
  403734:	mov    rdi,QWORD PTR [rbp-0x10]
  403738:	mov    esi,0x14
  40373d:	call   403c60 <plt_get_real_fn@@Base+0x290>
  403742:	mov    QWORD PTR [rbp-0x30],rax
  403746:	mov    rdi,QWORD PTR [rbp-0x10]
  40374a:	mov    esi,0x17
  40374f:	call   403bb0 <plt_get_real_fn@@Base+0x1e0>
  403754:	mov    QWORD PTR [rbp-0x38],rax
  403758:	mov    rdi,QWORD PTR [rbp-0x10]
  40375c:	mov    esi,0x2
  403761:	call   403c60 <plt_get_real_fn@@Base+0x290>
  403766:	mov    QWORD PTR [rbp-0x40],rax
  40376a:	mov    rdi,QWORD PTR [rbp-0x10]
  40376e:	mov    rax,QWORD PTR [rbp-0x30]
  403772:	add    rax,0x2
  403778:	mov    rsi,rax
  40377b:	call   403c60 <plt_get_real_fn@@Base+0x290>
  403780:	mov    QWORD PTR [rbp-0x48],rax
  403784:	cmp    QWORD PTR [rbp-0x20],0x0
  403789:	je     4037c6 <plt_get_lib@@Base+0x466>
  40378f:	cmp    QWORD PTR [rbp-0x28],0x0
  403794:	je     4037c6 <plt_get_lib@@Base+0x466>
  40379a:	cmp    QWORD PTR [rbp-0x30],0x0
  40379f:	je     4037c6 <plt_get_lib@@Base+0x466>
  4037a5:	cmp    QWORD PTR [rbp-0x38],0x0
  4037aa:	je     4037c6 <plt_get_lib@@Base+0x466>
  4037b0:	cmp    QWORD PTR [rbp-0x40],0x0
  4037b5:	je     4037c6 <plt_get_lib@@Base+0x466>
  4037bb:	cmp    QWORD PTR [rbp-0x48],0x0
  4037c0:	jne    4037d3 <plt_get_lib@@Base+0x473>
  4037c6:	mov    QWORD PTR [rbp-0x8],0x0
  4037ce:	jmp    403833 <plt_get_lib@@Base+0x4d3>
  4037d3:	mov    rax,QWORD PTR [rbp-0x38]
  4037d7:	mov    QWORD PTR [rbp-0x60],rax
  4037db:	mov    rax,QWORD PTR [rbp-0x40]
  4037df:	mov    QWORD PTR [rbp-0x58],rax
  4037e3:	mov    rax,QWORD PTR [rbp-0x48]
  4037e7:	mov    QWORD PTR [rbp-0x50],rax
  4037eb:	mov    rax,QWORD PTR [rbp-0x10]
  4037ef:	mov    rax,QWORD PTR [rax]
  4037f2:	mov    QWORD PTR [rbp-0x68],rax
  4037f6:	mov    rsi,QWORD PTR [rbp-0x20]
  4037fa:	mov    rdx,QWORD PTR [rbp-0x28]
  4037fe:	mov    rcx,QWORD PTR [rbp-0x18]
  403802:	lea    rdi,[rbp-0x60]
  403806:	call   403cd0 <plt_get_real_fn@@Base+0x300>
  40380b:	mov    QWORD PTR [rbp-0x70],rax
  40380f:	cmp    QWORD PTR [rbp-0x70],0x0
  403814:	je     40382b <plt_get_lib@@Base+0x4cb>
  40381a:	mov    rax,QWORD PTR [rbp-0x70]
  40381e:	add    rax,QWORD PTR [rbp-0x68]
  403822:	mov    QWORD PTR [rbp-0x8],rax
  403826:	jmp    403833 <plt_get_lib@@Base+0x4d3>
  40382b:	mov    QWORD PTR [rbp-0x8],0x0
  403833:	mov    rax,QWORD PTR [rbp-0x8]
  403837:	add    rsp,0x70
  40383b:	pop    rbp
  40383c:	ret    
  40383d:	nop    DWORD PTR [rax]

0000000000403840 <plt_get_offsets@@Base>:
  403840:	push   rbp
  403841:	mov    rbp,rsp
  403844:	sub    rsp,0x40
  403848:	mov    QWORD PTR [rbp-0x10],rdi
  40384c:	mov    QWORD PTR [rbp-0x18],rsi
  403850:	mov    QWORD PTR [rbp-0x20],rdx
  403854:	mov    rdi,QWORD PTR [rbp-0x10]
  403858:	mov    rsi,QWORD PTR [rbp-0x18]
  40385c:	call   403700 <plt_get_lib@@Base+0x3a0>
  403861:	mov    QWORD PTR [rbp-0x28],rax
  403865:	cmp    QWORD PTR [rbp-0x28],0x0
  40386a:	je     4038b9 <plt_get_offsets@@Base+0x79>
  403870:	mov    edi,0x10
  403875:	call   404b50 <mmk_malloc@@Base>
  40387a:	mov    QWORD PTR [rbp-0x30],rax
  40387e:	mov    rax,QWORD PTR [rbp-0x20]
  403882:	mov    QWORD PTR [rax],0x1
  403889:	mov    rax,QWORD PTR [rbp-0x30]
  40388d:	mov    rcx,QWORD PTR [rbp-0x28]
  403891:	mov    QWORD PTR [rbp-0x40],rcx
  403895:	mov    QWORD PTR [rbp-0x38],0x0
  40389d:	mov    rcx,QWORD PTR [rbp-0x40]
  4038a1:	mov    QWORD PTR [rax],rcx
  4038a4:	mov    rcx,QWORD PTR [rbp-0x38]
  4038a8:	mov    QWORD PTR [rax+0x8],rcx
  4038ac:	mov    rax,QWORD PTR [rbp-0x30]
  4038b0:	mov    QWORD PTR [rbp-0x8],rax
  4038b4:	jmp    4038c1 <plt_get_offsets@@Base+0x81>
  4038b9:	mov    QWORD PTR [rbp-0x8],0x0
  4038c1:	mov    rax,QWORD PTR [rbp-0x8]
  4038c5:	add    rsp,0x40
  4038c9:	pop    rbp
  4038ca:	ret    
  4038cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004038d0 <plt_set_offsets@@Base>:
  4038d0:	push   rbp
  4038d1:	mov    rbp,rsp
  4038d4:	mov    QWORD PTR [rbp-0x8],rdi
  4038d8:	mov    QWORD PTR [rbp-0x10],rsi
  4038dc:	mov    QWORD PTR [rbp-0x18],rdx
  4038e0:	mov    QWORD PTR [rbp-0x20],0x0
  4038e8:	mov    rax,QWORD PTR [rbp-0x20]
  4038ec:	cmp    rax,QWORD PTR [rbp-0x10]
  4038f0:	jae    403964 <plt_set_offsets@@Base+0x94>
  4038f6:	mov    rax,QWORD PTR [rbp-0x8]
  4038fa:	mov    rcx,QWORD PTR [rbp-0x20]
  4038fe:	shl    rcx,0x4
  403902:	add    rax,rcx
  403905:	cmp    QWORD PTR [rax+0x8],0x0
  40390a:	jne    403938 <plt_set_offsets@@Base+0x68>
  403910:	mov    rax,QWORD PTR [rbp-0x8]
  403914:	mov    rcx,QWORD PTR [rbp-0x20]
  403918:	shl    rcx,0x4
  40391c:	add    rax,rcx
  40391f:	mov    rax,QWORD PTR [rax]
  403922:	mov    rax,QWORD PTR [rax]
  403925:	mov    rcx,QWORD PTR [rbp-0x8]
  403929:	mov    rdx,QWORD PTR [rbp-0x20]
  40392d:	shl    rdx,0x4
  403931:	add    rcx,rdx
  403934:	mov    QWORD PTR [rcx+0x8],rax
  403938:	mov    rax,QWORD PTR [rbp-0x18]
  40393c:	mov    rcx,QWORD PTR [rbp-0x8]
  403940:	mov    rdx,QWORD PTR [rbp-0x20]
  403944:	shl    rdx,0x4
  403948:	add    rcx,rdx
  40394b:	mov    rcx,QWORD PTR [rcx]
  40394e:	mov    QWORD PTR [rcx],rax
  403951:	mov    rax,QWORD PTR [rbp-0x20]
  403955:	add    rax,0x1
  40395b:	mov    QWORD PTR [rbp-0x20],rax
  40395f:	jmp    4038e8 <plt_set_offsets@@Base+0x18>
  403964:	pop    rbp
  403965:	ret    
  403966:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000403970 <plt_reset_offsets@@Base>:
  403970:	push   rbp
  403971:	mov    rbp,rsp
  403974:	mov    QWORD PTR [rbp-0x8],rdi
  403978:	mov    QWORD PTR [rbp-0x10],rsi
  40397c:	mov    QWORD PTR [rbp-0x18],0x0
  403984:	mov    rax,QWORD PTR [rbp-0x18]
  403988:	cmp    rax,QWORD PTR [rbp-0x10]
  40398c:	jae    4039cd <plt_reset_offsets@@Base+0x5d>
  403992:	mov    rax,QWORD PTR [rbp-0x8]
  403996:	mov    rcx,QWORD PTR [rbp-0x18]
  40399a:	shl    rcx,0x4
  40399e:	add    rax,rcx
  4039a1:	mov    rax,QWORD PTR [rax+0x8]
  4039a5:	mov    rcx,QWORD PTR [rbp-0x8]
  4039a9:	mov    rdx,QWORD PTR [rbp-0x18]
  4039ad:	shl    rdx,0x4
  4039b1:	add    rcx,rdx
  4039b4:	mov    rcx,QWORD PTR [rcx]
  4039b7:	mov    QWORD PTR [rcx],rax
  4039ba:	mov    rax,QWORD PTR [rbp-0x18]
  4039be:	add    rax,0x1
  4039c4:	mov    QWORD PTR [rbp-0x18],rax
  4039c8:	jmp    403984 <plt_reset_offsets@@Base+0x14>
  4039cd:	pop    rbp
  4039ce:	ret    
  4039cf:	nop

00000000004039d0 <plt_get_real_fn@@Base>:
  4039d0:	push   rbp
  4039d1:	mov    rbp,rsp
  4039d4:	sub    rsp,0x30
  4039d8:	mov    QWORD PTR [rbp-0x10],rdi
  4039dc:	mov    QWORD PTR [rbp-0x18],rsi
  4039e0:	mov    rax,QWORD PTR [rbp-0x10]
  4039e4:	mov    rax,QWORD PTR [rax+0x8]
  4039e8:	mov    QWORD PTR [rbp-0x20],rax
  4039ec:	cmp    QWORD PTR [rbp-0x20],0x0
  4039f1:	je     403a39 <plt_get_real_fn@@Base+0x69>
  4039f7:	mov    rdi,QWORD PTR [rbp-0x20]
  4039fb:	mov    rsi,QWORD PTR [rbp-0x18]
  4039ff:	call   403700 <plt_get_lib@@Base+0x3a0>
  403a04:	mov    QWORD PTR [rbp-0x28],rax
  403a08:	cmp    QWORD PTR [rbp-0x28],0x0
  403a0d:	je     403a23 <plt_get_real_fn@@Base+0x53>
  403a13:	mov    rax,QWORD PTR [rbp-0x28]
  403a17:	mov    rax,QWORD PTR [rax]
  403a1a:	mov    QWORD PTR [rbp-0x8],rax
  403a1e:	jmp    403a41 <plt_get_real_fn@@Base+0x71>
  403a23:	jmp    403a28 <plt_get_real_fn@@Base+0x58>
  403a28:	mov    rax,QWORD PTR [rbp-0x20]
  403a2c:	mov    rax,QWORD PTR [rax+0x18]
  403a30:	mov    QWORD PTR [rbp-0x20],rax
  403a34:	jmp    4039ec <plt_get_real_fn@@Base+0x1c>
  403a39:	mov    QWORD PTR [rbp-0x8],0x0
  403a41:	mov    rax,QWORD PTR [rbp-0x8]
  403a45:	add    rsp,0x30
  403a49:	pop    rbp
  403a4a:	ret    
  403a4b:	nop    DWORD PTR [rax+rax*1+0x0]
  403a50:	push   rbp
  403a51:	mov    rbp,rsp
  403a54:	mov    QWORD PTR [rbp-0x10],rdi
  403a58:	mov    QWORD PTR [rbp-0x18],rsi
  403a5c:	mov    rax,QWORD PTR [rbp-0x10]
  403a60:	cmp    QWORD PTR [rax],0x0
  403a64:	je     403aa4 <plt_get_real_fn@@Base+0xd4>
  403a6a:	mov    rax,QWORD PTR [rbp-0x10]
  403a6e:	mov    rax,QWORD PTR [rax]
  403a71:	cmp    rax,QWORD PTR [rbp-0x18]
  403a75:	jne    403a8c <plt_get_real_fn@@Base+0xbc>
  403a7b:	mov    rax,QWORD PTR [rbp-0x10]
  403a7f:	mov    rax,QWORD PTR [rax+0x8]
  403a83:	mov    QWORD PTR [rbp-0x8],rax
  403a87:	jmp    403aac <plt_get_real_fn@@Base+0xdc>
  403a8c:	jmp    403a91 <plt_get_real_fn@@Base+0xc1>
  403a91:	mov    rax,QWORD PTR [rbp-0x10]
  403a95:	add    rax,0x10
  403a9b:	mov    QWORD PTR [rbp-0x10],rax
  403a9f:	jmp    403a5c <plt_get_real_fn@@Base+0x8c>
  403aa4:	mov    QWORD PTR [rbp-0x8],0xffffffffffffffff
  403aac:	mov    rax,QWORD PTR [rbp-0x8]
  403ab0:	pop    rbp
  403ab1:	ret    
  403ab2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403abc:	nop    DWORD PTR [rax+0x0]
  403ac0:	push   rbp
  403ac1:	mov    rbp,rsp
  403ac4:	mov    QWORD PTR [rbp-0x10],rdi
  403ac8:	mov    QWORD PTR [rbp-0x18],rsi
  403acc:	mov    QWORD PTR [rbp-0x20],0x0
  403ad4:	mov    rax,QWORD PTR [rbp-0x20]
  403ad8:	cmp    rax,QWORD PTR [rbp-0x18]
  403adc:	jae    403b2e <plt_get_real_fn@@Base+0x15e>
  403ae2:	mov    rax,QWORD PTR [rbp-0x10]
  403ae6:	imul   rcx,QWORD PTR [rbp-0x20],0x38
  403aee:	add    rax,rcx
  403af1:	cmp    DWORD PTR [rax],0x2
  403af4:	jne    403b16 <plt_get_real_fn@@Base+0x146>
  403afa:	mov    rax,QWORD PTR [rbp-0x10]
  403afe:	imul   rcx,QWORD PTR [rbp-0x20],0x38
  403b06:	add    rax,rcx
  403b09:	mov    rax,QWORD PTR [rax+0x10]
  403b0d:	mov    QWORD PTR [rbp-0x8],rax
  403b11:	jmp    403b36 <plt_get_real_fn@@Base+0x166>
  403b16:	jmp    403b1b <plt_get_real_fn@@Base+0x14b>
  403b1b:	mov    rax,QWORD PTR [rbp-0x20]
  403b1f:	add    rax,0x1
  403b25:	mov    QWORD PTR [rbp-0x20],rax
  403b29:	jmp    403ad4 <plt_get_real_fn@@Base+0x104>
  403b2e:	mov    QWORD PTR [rbp-0x8],0x0
  403b36:	mov    rax,QWORD PTR [rbp-0x8]
  403b3a:	pop    rbp
  403b3b:	ret    
  403b3c:	nop    DWORD PTR [rax+0x0]
  403b40:	push   rbp
  403b41:	mov    rbp,rsp
  403b44:	mov    QWORD PTR [rbp-0x10],rdi
  403b48:	mov    rax,QWORD PTR [rbp-0x10]
  403b4c:	mov    QWORD PTR [rbp-0x18],rax
  403b50:	mov    rax,QWORD PTR [rbp-0x18]
  403b54:	cmp    QWORD PTR [rax],0x0
  403b58:	je     403b95 <plt_get_real_fn@@Base+0x1c5>
  403b5e:	mov    rax,QWORD PTR [rbp-0x18]
  403b62:	cmp    QWORD PTR [rax],0x15
  403b66:	jne    403b7d <plt_get_real_fn@@Base+0x1ad>
  403b6c:	mov    rax,QWORD PTR [rbp-0x18]
  403b70:	mov    rax,QWORD PTR [rax+0x8]
  403b74:	mov    QWORD PTR [rbp-0x8],rax
  403b78:	jmp    403b9d <plt_get_real_fn@@Base+0x1cd>
  403b7d:	jmp    403b82 <plt_get_real_fn@@Base+0x1b2>
  403b82:	mov    rax,QWORD PTR [rbp-0x18]
  403b86:	add    rax,0x10
  403b8c:	mov    QWORD PTR [rbp-0x18],rax
  403b90:	jmp    403b50 <plt_get_real_fn@@Base+0x180>
  403b95:	mov    QWORD PTR [rbp-0x8],0x0
  403b9d:	mov    rax,QWORD PTR [rbp-0x8]
  403ba1:	pop    rbp
  403ba2:	ret    
  403ba3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403bad:	nop    DWORD PTR [rax]
  403bb0:	push   rbp
  403bb1:	mov    rbp,rsp
  403bb4:	mov    QWORD PTR [rbp-0x10],rdi
  403bb8:	mov    QWORD PTR [rbp-0x18],rsi
  403bbc:	mov    rax,QWORD PTR [rbp-0x10]
  403bc0:	mov    rax,QWORD PTR [rax]
  403bc3:	mov    QWORD PTR [rbp-0x20],rax
  403bc7:	mov    rax,QWORD PTR [rbp-0x10]
  403bcb:	mov    rax,QWORD PTR [rax+0x10]
  403bcf:	mov    QWORD PTR [rbp-0x28],rax
  403bd3:	mov    rax,QWORD PTR [rbp-0x28]
  403bd7:	cmp    QWORD PTR [rax],0x0
  403bdb:	je     403c51 <plt_get_real_fn@@Base+0x281>
  403be1:	mov    rax,QWORD PTR [rbp-0x28]
  403be5:	mov    rax,QWORD PTR [rax]
  403be8:	cmp    rax,QWORD PTR [rbp-0x18]
  403bec:	jne    403c39 <plt_get_real_fn@@Base+0x269>
  403bf2:	mov    rax,QWORD PTR [rbp-0x28]
  403bf6:	mov    rax,QWORD PTR [rax+0x8]
  403bfa:	cmp    rax,QWORD PTR [rbp-0x20]
  403bfe:	jb     403c24 <plt_get_real_fn@@Base+0x254>
  403c04:	mov    rax,QWORD PTR [rbp-0x28]
  403c08:	cmp    QWORD PTR [rax+0x8],0x0
  403c0d:	jl     403c24 <plt_get_real_fn@@Base+0x254>
  403c13:	mov    rax,QWORD PTR [rbp-0x28]
  403c17:	mov    rax,QWORD PTR [rax+0x8]
  403c1b:	mov    QWORD PTR [rbp-0x8],rax
  403c1f:	jmp    403c59 <plt_get_real_fn@@Base+0x289>
  403c24:	mov    rax,QWORD PTR [rbp-0x20]
  403c28:	mov    rcx,QWORD PTR [rbp-0x28]
  403c2c:	add    rax,QWORD PTR [rcx+0x8]
  403c30:	mov    QWORD PTR [rbp-0x8],rax
  403c34:	jmp    403c59 <plt_get_real_fn@@Base+0x289>
  403c39:	jmp    403c3e <plt_get_real_fn@@Base+0x26e>
  403c3e:	mov    rax,QWORD PTR [rbp-0x28]
  403c42:	add    rax,0x10
  403c48:	mov    QWORD PTR [rbp-0x28],rax
  403c4c:	jmp    403bd3 <plt_get_real_fn@@Base+0x203>
  403c51:	mov    QWORD PTR [rbp-0x8],0x0
  403c59:	mov    rax,QWORD PTR [rbp-0x8]
  403c5d:	pop    rbp
  403c5e:	ret    
  403c5f:	nop
  403c60:	push   rbp
  403c61:	mov    rbp,rsp
  403c64:	mov    QWORD PTR [rbp-0x10],rdi
  403c68:	mov    QWORD PTR [rbp-0x18],rsi
  403c6c:	mov    rax,QWORD PTR [rbp-0x10]
  403c70:	mov    rax,QWORD PTR [rax+0x10]
  403c74:	mov    QWORD PTR [rbp-0x20],rax
  403c78:	mov    rax,QWORD PTR [rbp-0x20]
  403c7c:	cmp    QWORD PTR [rax],0x0
  403c80:	je     403cc0 <plt_get_real_fn@@Base+0x2f0>
  403c86:	mov    rax,QWORD PTR [rbp-0x20]
  403c8a:	mov    rax,QWORD PTR [rax]
  403c8d:	cmp    rax,QWORD PTR [rbp-0x18]
  403c91:	jne    403ca8 <plt_get_real_fn@@Base+0x2d8>
  403c97:	mov    rax,QWORD PTR [rbp-0x20]
  403c9b:	mov    rax,QWORD PTR [rax+0x8]
  403c9f:	mov    QWORD PTR [rbp-0x8],rax
  403ca3:	jmp    403cc8 <plt_get_real_fn@@Base+0x2f8>
  403ca8:	jmp    403cad <plt_get_real_fn@@Base+0x2dd>
  403cad:	mov    rax,QWORD PTR [rbp-0x20]
  403cb1:	add    rax,0x10
  403cb7:	mov    QWORD PTR [rbp-0x20],rax
  403cbb:	jmp    403c78 <plt_get_real_fn@@Base+0x2a8>
  403cc0:	mov    QWORD PTR [rbp-0x8],0x0
  403cc8:	mov    rax,QWORD PTR [rbp-0x8]
  403ccc:	pop    rbp
  403ccd:	ret    
  403cce:	xchg   ax,ax
  403cd0:	push   rbp
  403cd1:	mov    rbp,rsp
  403cd4:	sub    rsp,0x50
  403cd8:	mov    QWORD PTR [rbp-0x10],rdi
  403cdc:	mov    QWORD PTR [rbp-0x18],rsi
  403ce0:	mov    QWORD PTR [rbp-0x20],rdx
  403ce4:	mov    QWORD PTR [rbp-0x28],rcx
  403ce8:	mov    rax,QWORD PTR [rbp-0x10]
  403cec:	mov    rax,QWORD PTR [rax]
  403cef:	mov    QWORD PTR [rbp-0x30],rax
  403cf3:	mov    QWORD PTR [rbp-0x38],0x0
  403cfb:	mov    rax,QWORD PTR [rbp-0x38]
  403cff:	mov    rcx,QWORD PTR [rbp-0x10]
  403d03:	mov    rcx,QWORD PTR [rcx+0x8]
  403d07:	mov    rdx,QWORD PTR [rbp-0x10]
  403d0b:	mov    QWORD PTR [rbp-0x48],rax
  403d0f:	mov    rax,rcx
  403d12:	xor    esi,esi
  403d14:	mov    QWORD PTR [rbp-0x50],rdx
  403d18:	mov    edx,esi
  403d1a:	mov    rcx,QWORD PTR [rbp-0x50]
  403d1e:	div    QWORD PTR [rcx+0x10]
  403d22:	mov    rdi,QWORD PTR [rbp-0x48]
  403d26:	cmp    rdi,rax
  403d29:	jae    403da9 <plt_get_real_fn@@Base+0x3d9>
  403d2f:	mov    rax,QWORD PTR [rbp-0x18]
  403d33:	mov    rcx,QWORD PTR [rbp-0x30]
  403d37:	mov    rcx,QWORD PTR [rcx+0x8]
  403d3b:	shr    rcx,0x20
  403d3f:	imul   rcx,rcx,0x18
  403d46:	add    rax,rcx
  403d49:	mov    QWORD PTR [rbp-0x40],rax
  403d4d:	mov    rax,QWORD PTR [rbp-0x20]
  403d51:	mov    rcx,QWORD PTR [rbp-0x40]
  403d55:	mov    edx,DWORD PTR [rcx]
  403d57:	mov    ecx,edx
  403d59:	add    rax,rcx
  403d5c:	mov    rsi,QWORD PTR [rbp-0x28]
  403d60:	mov    rdi,rax
  403d63:	call   4020d0 <strcmp@plt>
  403d68:	cmp    eax,0x0
  403d6b:	jne    403d81 <plt_get_real_fn@@Base+0x3b1>
  403d71:	mov    rax,QWORD PTR [rbp-0x30]
  403d75:	mov    rax,QWORD PTR [rax]
  403d78:	mov    QWORD PTR [rbp-0x8],rax
  403d7c:	jmp    403db1 <plt_get_real_fn@@Base+0x3e1>
  403d81:	jmp    403d86 <plt_get_real_fn@@Base+0x3b6>
  403d86:	mov    rax,QWORD PTR [rbp-0x38]
  403d8a:	add    rax,0x1
  403d90:	mov    QWORD PTR [rbp-0x38],rax
  403d94:	mov    rax,QWORD PTR [rbp-0x30]
  403d98:	mov    rcx,QWORD PTR [rbp-0x10]
  403d9c:	add    rax,QWORD PTR [rcx+0x10]
  403da0:	mov    QWORD PTR [rbp-0x30],rax
  403da4:	jmp    403cfb <plt_get_real_fn@@Base+0x32b>
  403da9:	mov    QWORD PTR [rbp-0x8],0x0
  403db1:	mov    rax,QWORD PTR [rbp-0x8]
  403db5:	add    rsp,0x50
  403db9:	pop    rbp
  403dba:	ret    
  403dbb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403dc0 <mmk_stub_context@@Base>:
  403dc0:	push   rbp
  403dc1:	mov    rbp,rsp
  403dc4:	mov    QWORD PTR [rbp-0x10],rdi
  403dc8:	cmp    QWORD PTR [rbp-0x10],0x0
  403dcd:	jne    403de0 <mmk_stub_context@@Base+0x20>
  403dd3:	mov    QWORD PTR [rbp-0x8],0x0
  403ddb:	jmp    403dec <mmk_stub_context@@Base+0x2c>
  403de0:	mov    rax,QWORD PTR [rbp-0x10]
  403de4:	mov    rax,QWORD PTR [rax+0x18]
  403de8:	mov    QWORD PTR [rbp-0x8],rax
  403dec:	mov    rax,QWORD PTR [rbp-0x8]
  403df0:	pop    rbp
  403df1:	ret    
  403df2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403dfc:	nop    DWORD PTR [rax+0x0]

0000000000403e00 <mmk_stub_create_static@@Base>:
  403e00:	push   rbp
  403e01:	mov    rbp,rsp
  403e04:	sub    rsp,0xb0
  403e0b:	mov    QWORD PTR [rbp-0x10],rdi
  403e0f:	mov    QWORD PTR [rbp-0x18],rsi
  403e13:	mov    QWORD PTR [rbp-0x20],rdx
  403e17:	mov    QWORD PTR [rbp-0x28],rcx
  403e1b:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  403e27:	mov    DWORD PTR [rax-0x20],0x0
  403e31:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  403e3d:	mov    QWORD PTR [rax-0x18],0x0
  403e48:	mov    rdi,QWORD PTR [rbp-0x18]
  403e4c:	call   404ab0 <mmk_strlen@@Base>
  403e51:	add    rax,0x1
  403e57:	mov    rdi,rax
  403e5a:	call   404b50 <mmk_malloc@@Base>
  403e5f:	mov    QWORD PTR [rbp-0x30],rax
  403e63:	cmp    QWORD PTR [rbp-0x30],0x0
  403e68:	jne    403e7a <mmk_stub_create_static@@Base+0x7a>
  403e6e:	mov    DWORD PTR [rbp-0x4],0xfffffff4
  403e75:	jmp    403fea <mmk_stub_create_static@@Base+0x1ea>
  403e7a:	mov    rdi,QWORD PTR [rbp-0x30]
  403e7e:	mov    rsi,QWORD PTR [rbp-0x18]
  403e82:	call   4049c0 <mmk_strcpy@@Base>
  403e87:	mov    QWORD PTR [rbp-0x38],0x0
  403e8f:	mov    rdi,QWORD PTR [rbp-0x30]
  403e93:	mov    esi,0x40
  403e98:	mov    QWORD PTR [rbp-0xb0],rax
  403e9f:	call   404960 <mmk_strchr@@Base>
  403ea4:	mov    QWORD PTR [rbp-0x40],rax
  403ea8:	cmp    QWORD PTR [rbp-0x40],0x0
  403ead:	je     403ec8 <mmk_stub_create_static@@Base+0xc8>
  403eb3:	mov    rax,QWORD PTR [rbp-0x40]
  403eb7:	mov    BYTE PTR [rax],0x0
  403eba:	mov    rax,QWORD PTR [rbp-0x40]
  403ebe:	add    rax,0x1
  403ec4:	mov    QWORD PTR [rbp-0x38],rax
  403ec8:	call   402c30 <mmk_plt_ctx@@Base>
  403ecd:	mov    rsi,QWORD PTR [rbp-0x38]
  403ed1:	mov    rdi,rax
  403ed4:	call   403360 <plt_get_lib@@Base>
  403ed9:	mov    QWORD PTR [rbp-0x48],rax
  403edd:	cmp    QWORD PTR [rbp-0x48],0x0
  403ee2:	jne    403ef4 <mmk_stub_create_static@@Base+0xf4>
  403ee8:	mov    DWORD PTR [rbp-0x4],0xfffffffe
  403eef:	jmp    403fea <mmk_stub_create_static@@Base+0x1ea>
  403ef4:	mov    QWORD PTR [rbp-0x50],0x0
  403efc:	mov    rdi,QWORD PTR [rbp-0x48]
  403f00:	mov    rsi,QWORD PTR [rbp-0x30]
  403f04:	lea    rdx,[rbp-0x50]
  403f08:	call   403840 <plt_get_offsets@@Base>
  403f0d:	mov    QWORD PTR [rbp-0x58],rax
  403f11:	cmp    QWORD PTR [rbp-0x58],0x0
  403f16:	je     403f27 <mmk_stub_create_static@@Base+0x127>
  403f1c:	cmp    QWORD PTR [rbp-0x50],0x0
  403f21:	jne    403f33 <mmk_stub_create_static@@Base+0x133>
  403f27:	mov    DWORD PTR [rbp-0x4],0xfffffffe
  403f2e:	jmp    403fea <mmk_stub_create_static@@Base+0x1ea>
  403f33:	lea    rax,[rip+0x136]        # 404070 <mmk_ctx@@Base>
  403f3a:	lea    rcx,[rip+0xef]        # 404030 <mmk_set_ctx@@Base>
  403f41:	lea    rdx,[rip+0xb8]        # 404000 <mmk_ctx_asked@@Base>
  403f48:	mov    rsi,QWORD PTR [rbp-0x10]
  403f4c:	mov    QWORD PTR [rbp-0xa8],rdx
  403f53:	mov    QWORD PTR [rbp-0xa0],rcx
  403f5a:	mov    QWORD PTR [rbp-0x98],rax
  403f61:	mov    rax,QWORD PTR [rbp-0x28]
  403f65:	mov    QWORD PTR [rbp-0x90],rax
  403f6c:	mov    rax,QWORD PTR [rbp-0x30]
  403f70:	mov    QWORD PTR [rbp-0x88],rax
  403f77:	mov    rax,QWORD PTR [rbp-0x38]
  403f7b:	mov    QWORD PTR [rbp-0x80],rax
  403f7f:	mov    rax,QWORD PTR [rbp-0x58]
  403f83:	mov    QWORD PTR [rbp-0x78],rax
  403f87:	mov    rax,QWORD PTR [rbp-0x50]
  403f8b:	mov    QWORD PTR [rbp-0x70],rax
  403f8f:	mov    QWORD PTR [rbp-0x68],0x0
  403f97:	mov    QWORD PTR [rbp-0x60],0x0
  403f9f:	lea    rax,[rbp-0xa8]
  403fa6:	mov    rdi,rsi
  403fa9:	mov    rsi,rax
  403fac:	mov    edx,0x50
  403fb1:	call   4020f0 <memcpy@plt>
  403fb6:	mov    rax,QWORD PTR [rbp-0x10]
  403fba:	mov    rsi,QWORD PTR [rbp-0x20]
  403fbe:	mov    rdi,rax
  403fc1:	call   4041d0 <create_trampoline@@Base>
  403fc6:	mov    rcx,QWORD PTR [rbp-0x10]
  403fca:	mov    QWORD PTR [rcx+0x40],rax
  403fce:	mov    rdi,QWORD PTR [rbp-0x58]
  403fd2:	mov    rsi,QWORD PTR [rbp-0x50]
  403fd6:	mov    rax,QWORD PTR [rbp-0x10]
  403fda:	mov    rdx,QWORD PTR [rax+0x40]
  403fde:	call   4038d0 <plt_set_offsets@@Base>
  403fe3:	mov    DWORD PTR [rbp-0x4],0x0
  403fea:	mov    eax,DWORD PTR [rbp-0x4]
  403fed:	add    rsp,0xb0
  403ff4:	pop    rbp
  403ff5:	ret    
  403ff6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000404000 <mmk_ctx_asked@@Base>:
  404000:	push   rbp
  404001:	mov    rbp,rsp
  404004:	push   rbx
  404005:	push   rax
  404006:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  404012:	mov    ebx,DWORD PTR [rax-0x20]
  404018:	mov    DWORD PTR [rbp-0xc],ebx
  40401b:	mov    DWORD PTR [rax-0x20],0x0
  404025:	mov    eax,DWORD PTR [rbp-0xc]
  404028:	add    rsp,0x8
  40402c:	pop    rbx
  40402d:	pop    rbp
  40402e:	ret    
  40402f:	nop

0000000000404030 <mmk_set_ctx@@Base>:
  404030:	push   rbp
  404031:	mov    rbp,rsp
  404034:	sub    rsp,0x10
  404038:	mov    QWORD PTR [rbp-0x8],rdi
  40403c:	mov    rax,QWORD PTR [rbp-0x8]
  404040:	mov    QWORD PTR [rbp-0x10],rax
  404044:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  404050:	mov    rcx,QWORD PTR [rbp-0x10]
  404054:	mov    QWORD PTR [rax-0x18],rcx
  40405b:	add    rsp,0x10
  40405f:	pop    rbp
  404060:	ret    
  404061:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40406b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404070 <mmk_ctx@@Base>:
  404070:	push   rbp
  404071:	mov    rbp,rsp
  404074:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  404080:	mov    rax,QWORD PTR [rax-0x18]
  404087:	pop    rbp
  404088:	ret    
  404089:	nop    DWORD PTR [rax+0x0]

0000000000404090 <mmk_stub_create@@Base>:
  404090:	push   rbp
  404091:	mov    rbp,rsp
  404094:	sub    rsp,0x30
  404098:	mov    QWORD PTR [rbp-0x8],rdi
  40409c:	mov    QWORD PTR [rbp-0x10],rsi
  4040a0:	mov    QWORD PTR [rbp-0x18],rdx
  4040a4:	call   402ba0 <mmk_init@@Base>
  4040a9:	mov    edi,0x50
  4040ae:	call   404b50 <mmk_malloc@@Base>
  4040b3:	mov    QWORD PTR [rbp-0x20],rax
  4040b7:	mov    rdi,QWORD PTR [rbp-0x20]
  4040bb:	mov    rsi,QWORD PTR [rbp-0x8]
  4040bf:	mov    rdx,QWORD PTR [rbp-0x10]
  4040c3:	mov    rcx,QWORD PTR [rbp-0x18]
  4040c7:	call   403e00 <mmk_stub_create_static@@Base>
  4040cc:	mov    DWORD PTR [rbp-0x24],eax
  4040cf:	cmp    DWORD PTR [rbp-0x24],0x0
  4040d3:	jge    4040fd <mmk_stub_create@@Base+0x6d>
  4040d9:	mov    rax,QWORD PTR [rbp-0x20]
  4040dd:	mov    rdi,rax
  4040e0:	call   404bb0 <mmk_free@@Base>
  4040e5:	mov    ecx,DWORD PTR [rbp-0x24]
  4040e8:	mov    DWORD PTR [rbp-0x28],ecx
  4040eb:	call   402050 <__errno_location@plt>
  4040f0:	mov    ecx,DWORD PTR [rbp-0x28]
  4040f3:	mov    DWORD PTR [rax],ecx
  4040f5:	mov    QWORD PTR [rbp-0x20],0x0
  4040fd:	mov    rax,QWORD PTR [rbp-0x20]
  404101:	add    rsp,0x30
  404105:	pop    rbp
  404106:	ret    
  404107:	nop    WORD PTR [rax+rax*1+0x0]

0000000000404110 <mmk_stub_destroy_static@@Base>:
  404110:	push   rbp
  404111:	mov    rbp,rsp
  404114:	sub    rsp,0x10
  404118:	mov    QWORD PTR [rbp-0x8],rdi
  40411c:	mov    rax,QWORD PTR [rbp-0x8]
  404120:	mov    rdi,QWORD PTR [rax+0x30]
  404124:	mov    rax,QWORD PTR [rbp-0x8]
  404128:	mov    rsi,QWORD PTR [rax+0x38]
  40412c:	call   403970 <plt_reset_offsets@@Base>
  404131:	mov    rax,QWORD PTR [rbp-0x8]
  404135:	mov    rax,QWORD PTR [rax+0x30]
  404139:	mov    rdi,rax
  40413c:	call   404bb0 <mmk_free@@Base>
  404141:	mov    rax,QWORD PTR [rbp-0x8]
  404145:	mov    rdi,QWORD PTR [rax+0x40]
  404149:	call   404320 <destroy_trampoline@@Base>
  40414e:	mov    rax,QWORD PTR [rbp-0x8]
  404152:	mov    rdi,QWORD PTR [rax+0x20]
  404156:	call   404bb0 <mmk_free@@Base>
  40415b:	add    rsp,0x10
  40415f:	pop    rbp
  404160:	ret    
  404161:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40416b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404170 <mmk_stub_destroy@@Base>:
  404170:	push   rbp
  404171:	mov    rbp,rsp
  404174:	sub    rsp,0x10
  404178:	mov    QWORD PTR [rbp-0x8],rdi
  40417c:	mov    rdi,QWORD PTR [rbp-0x8]
  404180:	call   404110 <mmk_stub_destroy_static@@Base>
  404185:	mov    rax,QWORD PTR [rbp-0x8]
  404189:	mov    rdi,rax
  40418c:	call   404bb0 <mmk_free@@Base>
  404191:	add    rsp,0x10
  404195:	pop    rbp
  404196:	ret    
  404197:	nop    WORD PTR [rax+rax*1+0x0]

00000000004041a0 <mmk_ask_ctx@@Base>:
  4041a0:	push   rbp
  4041a1:	mov    rbp,rsp
  4041a4:	sub    rsp,0x10
  4041a8:	mov    QWORD PTR [rbp-0x8],rdi
  4041ac:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  4041b8:	mov    DWORD PTR [rax-0x20],0x1
  4041c2:	call   QWORD PTR [rbp-0x8]
  4041c5:	add    rsp,0x10
  4041c9:	pop    rbp
  4041ca:	ret    
  4041cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004041d0 <create_trampoline@@Base>:
  4041d0:	push   rbp
  4041d1:	mov    rbp,rsp
  4041d4:	sub    rsp,0x40
  4041d8:	lea    rax,[rip+0xcd1]        # 404eb0 <mmk_trampoline_end@@Base>
  4041df:	lea    rcx,[rip+0xbee]        # 404dd4 <mmk_trampoline@@Base>
  4041e6:	sub    rax,rcx
  4041e9:	mov    QWORD PTR [rbp-0x8],rdi
  4041ed:	mov    QWORD PTR [rbp-0x10],rsi
  4041f1:	mov    QWORD PTR [rbp-0x18],rax
  4041f5:	cmp    QWORD PTR [rbp-0x18],0x1000
  4041fd:	jb     404236 <create_trampoline@@Base+0x66>
  404203:	mov    rax,QWORD PTR [rip+0x3dee]        # 407ff8 <stderr@GLIBC_2.2.5>
  40420a:	mov    rdi,QWORD PTR [rax]
  40420d:	lea    rsi,[rip+0xe08]        # 40501c <_IO_stdin_used@@Base+0x1c>
  404214:	lea    rdx,[rip+0x103b]        # 405256 <_IO_stdin_used@@Base+0x256>
  40421b:	mov    ecx,0x2d
  404220:	lea    r8,[rip+0x1087]        # 4052ae <_IO_stdin_used@@Base+0x2ae>
  404227:	mov    al,0x0
  404229:	call   4020e0 <fprintf@plt>
  40422e:	mov    DWORD PTR [rbp-0x24],eax
  404231:	call   402040 <abort@plt>
  404236:	jmp    40423b <create_trampoline@@Base+0x6b>
  40423b:	xor    eax,eax
  40423d:	mov    ecx,eax
  40423f:	mov    rdi,rcx
  404242:	mov    esi,0x1000
  404247:	mov    edx,0x7
  40424c:	mov    eax,0x22
  404251:	mov    QWORD PTR [rbp-0x30],rcx
  404255:	mov    ecx,eax
  404257:	mov    r8d,0xffffffff
  40425d:	mov    r9,QWORD PTR [rbp-0x30]
  404261:	call   402080 <mmap@plt>
  404266:	mov    QWORD PTR [rbp-0x20],rax
  40426a:	mov    rax,0xffffffffffffffff
  404271:	cmp    QWORD PTR [rbp-0x20],rax
  404275:	jne    4042ae <create_trampoline@@Base+0xde>
  40427b:	mov    rax,QWORD PTR [rip+0x3d76]        # 407ff8 <stderr@GLIBC_2.2.5>
  404282:	mov    rdi,QWORD PTR [rax]
  404285:	lea    rsi,[rip+0xd90]        # 40501c <_IO_stdin_used@@Base+0x1c>
  40428c:	lea    rdx,[rip+0xfc3]        # 405256 <_IO_stdin_used@@Base+0x256>
  404293:	mov    ecx,0x45
  404298:	lea    r8,[rip+0x1029]        # 4052c8 <_IO_stdin_used@@Base+0x2c8>
  40429f:	mov    al,0x0
  4042a1:	call   4020e0 <fprintf@plt>
  4042a6:	mov    DWORD PTR [rbp-0x34],eax
  4042a9:	call   402040 <abort@plt>
  4042ae:	jmp    4042b3 <create_trampoline@@Base+0xe3>
  4042b3:	lea    rax,[rip+0xb1a]        # 404dd4 <mmk_trampoline@@Base>
  4042ba:	mov    rcx,QWORD PTR [rbp-0x8]
  4042be:	mov    rdx,QWORD PTR [rbp-0x20]
  4042c2:	mov    QWORD PTR [rdx],rcx
  4042c5:	mov    rcx,QWORD PTR [rbp-0x10]
  4042c9:	mov    rdx,QWORD PTR [rbp-0x20]
  4042cd:	mov    QWORD PTR [rdx+0x8],rcx
  4042d1:	mov    rcx,QWORD PTR [rbp-0x20]
  4042d5:	add    rcx,0x10
  4042dc:	mov    rdx,QWORD PTR [rbp-0x18]
  4042e0:	mov    rdi,rcx
  4042e3:	mov    rsi,rax
  4042e6:	call   4020f0 <memcpy@plt>
  4042eb:	mov    rax,QWORD PTR [rbp-0x20]
  4042ef:	mov    rdi,rax
  4042f2:	mov    esi,0x1000
  4042f7:	mov    edx,0x5
  4042fc:	call   402130 <mprotect@plt>
  404301:	mov    rcx,QWORD PTR [rbp-0x20]
  404305:	add    rcx,0x10
  40430c:	mov    DWORD PTR [rbp-0x38],eax
  40430f:	mov    rax,rcx
  404312:	add    rsp,0x40
  404316:	pop    rbp
  404317:	ret    
  404318:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404320 <destroy_trampoline@@Base>:
  404320:	push   rbp
  404321:	mov    rbp,rsp
  404324:	sub    rsp,0x10
  404328:	mov    QWORD PTR [rbp-0x8],rdi
  40432c:	mov    rax,QWORD PTR [rbp-0x8]
  404330:	add    rax,0xfffffffffffffff0
  404336:	mov    rdi,rax
  404339:	mov    esi,0x1000
  40433e:	call   402110 <munmap@plt>
  404343:	add    rsp,0x10
  404347:	pop    rbp
  404348:	ret    
  404349:	nop    DWORD PTR [rax+0x0]

0000000000404350 <mmk_verify_set_times@@Base>:
  404350:	push   rbp
  404351:	mov    rbp,rsp
  404354:	sub    rsp,0x10
  404358:	mov    QWORD PTR [rbp-0x8],rdi
  40435c:	mov    rax,QWORD PTR [rbp-0x8]
  404360:	mov    QWORD PTR [rbp-0x10],rax
  404364:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  404370:	mov    rcx,QWORD PTR [rbp-0x10]
  404374:	mov    QWORD PTR [rax-0x10],rcx
  40437b:	add    rsp,0x10
  40437f:	pop    rbp
  404380:	ret    
  404381:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40438b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404390 <mmk_verify_times@@Base>:
  404390:	push   rbp
  404391:	mov    rbp,rsp
  404394:	sub    rsp,0x30
  404398:	mov    QWORD PTR [rbp-0x10],rdi
  40439c:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  4043a8:	mov    rax,QWORD PTR [rax-0x10]
  4043af:	mov    QWORD PTR [rbp-0x18],rax
  4043b3:	mov    rax,QWORD PTR [rbp-0x10]
  4043b7:	cmp    DWORD PTR [rax+0x4],0x0
  4043bb:	je     4043d6 <mmk_verify_times@@Base+0x46>
  4043c1:	cmp    QWORD PTR [rbp-0x18],0x0
  4043c6:	sete   al
  4043c9:	and    al,0x1
  4043cb:	movzx  ecx,al
  4043ce:	mov    DWORD PTR [rbp-0x4],ecx
  4043d1:	jmp    404496 <mmk_verify_times@@Base+0x106>
  4043d6:	mov    rax,QWORD PTR [rbp-0x10]
  4043da:	cmp    QWORD PTR [rax+0x8],0x0
  4043df:	jne    4043f4 <mmk_verify_times@@Base+0x64>
  4043e5:	mov    rax,QWORD PTR [rbp-0x10]
  4043e9:	cmp    QWORD PTR [rax+0x10],0x0
  4043ee:	je     404459 <mmk_verify_times@@Base+0xc9>
  4043f4:	mov    rax,QWORD PTR [rbp-0x10]
  4043f8:	cmp    QWORD PTR [rax+0x10],0x0
  4043fd:	je     404414 <mmk_verify_times@@Base+0x84>
  404403:	mov    rax,QWORD PTR [rbp-0x10]
  404407:	mov    rax,QWORD PTR [rax+0x10]
  40440b:	mov    QWORD PTR [rbp-0x28],rax
  40440f:	jmp    40441c <mmk_verify_times@@Base+0x8c>
  404414:	mov    rax,QWORD PTR [rbp-0x18]
  404418:	mov    QWORD PTR [rbp-0x28],rax
  40441c:	mov    rax,QWORD PTR [rbp-0x28]
  404420:	xor    ecx,ecx
  404422:	mov    QWORD PTR [rbp-0x20],rax
  404426:	mov    rax,QWORD PTR [rbp-0x18]
  40442a:	mov    rdx,QWORD PTR [rbp-0x10]
  40442e:	cmp    rax,QWORD PTR [rdx+0x8]
  404432:	mov    BYTE PTR [rbp-0x29],cl
  404435:	jb     404449 <mmk_verify_times@@Base+0xb9>
  40443b:	mov    rax,QWORD PTR [rbp-0x18]
  40443f:	cmp    rax,QWORD PTR [rbp-0x20]
  404443:	setbe  cl
  404446:	mov    BYTE PTR [rbp-0x29],cl
  404449:	mov    al,BYTE PTR [rbp-0x29]
  40444c:	and    al,0x1
  40444e:	movzx  ecx,al
  404451:	mov    DWORD PTR [rbp-0x4],ecx
  404454:	jmp    404496 <mmk_verify_times@@Base+0x106>
  404459:	mov    rax,QWORD PTR [rbp-0x10]
  40445d:	cmp    QWORD PTR [rax+0x20],0x0
  404462:	je     40447e <mmk_verify_times@@Base+0xee>
  404468:	mov    rax,QWORD PTR [rbp-0x10]
  40446c:	mov    rax,QWORD PTR [rax+0x20]
  404470:	mov    rdi,QWORD PTR [rbp-0x18]
  404474:	call   rax
  404476:	mov    DWORD PTR [rbp-0x4],eax
  404479:	jmp    404496 <mmk_verify_times@@Base+0x106>
  40447e:	mov    rax,QWORD PTR [rbp-0x10]
  404482:	mov    rax,QWORD PTR [rax+0x18]
  404486:	cmp    rax,QWORD PTR [rbp-0x18]
  40448a:	sete   cl
  40448d:	and    cl,0x1
  404490:	movzx  edx,cl
  404493:	mov    DWORD PTR [rbp-0x4],edx
  404496:	mov    eax,DWORD PTR [rbp-0x4]
  404499:	add    rsp,0x30
  40449d:	pop    rbp
  40449e:	ret    
  40449f:	nop

00000000004044a0 <mmk_verify_register_call@@Base>:
  4044a0:	push   rbp
  4044a1:	mov    rbp,rsp
  4044a4:	sub    rsp,0x30
  4044a8:	mov    QWORD PTR [rbp-0x8],rdi
  4044ac:	mov    QWORD PTR [rbp-0x10],rsi
  4044b0:	call   404070 <mmk_ctx@@Base>
  4044b5:	mov    rdi,rax
  4044b8:	call   403dc0 <mmk_stub_context@@Base>
  4044bd:	mov    QWORD PTR [rbp-0x18],rax
  4044c1:	mov    rax,QWORD PTR [rbp-0x18]
  4044c5:	cmp    QWORD PTR [rax+0x10],0x0
  4044ca:	jne    404535 <mmk_verify_register_call@@Base+0x95>
  4044d0:	mov    edi,0x1000
  4044d5:	call   404b50 <mmk_malloc@@Base>
  4044da:	mov    rcx,QWORD PTR [rbp-0x18]
  4044de:	mov    QWORD PTR [rcx+0x10],rax
  4044e2:	mov    rax,QWORD PTR [rbp-0x18]
  4044e6:	cmp    QWORD PTR [rax+0x10],0x0
  4044eb:	jne    404524 <mmk_verify_register_call@@Base+0x84>
  4044f1:	mov    rax,QWORD PTR [rip+0x3b00]        # 407ff8 <stderr@GLIBC_2.2.5>
  4044f8:	mov    rdi,QWORD PTR [rax]
  4044fb:	lea    rsi,[rip+0xb1a]        # 40501c <_IO_stdin_used@@Base+0x1c>
  404502:	lea    rdx,[rip+0xdd1]        # 4052da <_IO_stdin_used@@Base+0x2da>
  404509:	mov    ecx,0x4f
  40450e:	lea    r8,[rip+0xe19]        # 40532e <_IO_stdin_used@@Base+0x32e>
  404515:	mov    al,0x0
  404517:	call   4020e0 <fprintf@plt>
  40451c:	mov    DWORD PTR [rbp-0x24],eax
  40451f:	call   402040 <abort@plt>
  404524:	jmp    404529 <mmk_verify_register_call@@Base+0x89>
  404529:	mov    rax,QWORD PTR [rbp-0x18]
  40452d:	mov    QWORD PTR [rax+0x20],0x1000
  404535:	mov    rdi,QWORD PTR [rbp-0x18]
  404539:	mov    rsi,QWORD PTR [rbp-0x8]
  40453d:	mov    rdx,QWORD PTR [rbp-0x10]
  404541:	call   4046a0 <mmk_verify_register_call@@Base+0x200>
  404546:	cmp    eax,0x0
  404549:	je     404554 <mmk_verify_register_call@@Base+0xb4>
  40454f:	jmp    40468e <mmk_verify_register_call@@Base+0x1ee>
  404554:	mov    rax,QWORD PTR [rbp-0x18]
  404558:	mov    rax,QWORD PTR [rax+0x18]
  40455c:	add    rax,QWORD PTR [rbp-0x10]
  404560:	add    rax,0x8
  404566:	mov    rcx,QWORD PTR [rbp-0x18]
  40456a:	cmp    rax,QWORD PTR [rcx+0x20]
  40456e:	jb     40461a <mmk_verify_register_call@@Base+0x17a>
  404574:	jmp    404579 <mmk_verify_register_call@@Base+0xd9>
  404579:	mov    rax,QWORD PTR [rbp-0x18]
  40457d:	mov    rax,QWORD PTR [rax+0x18]
  404581:	add    rax,QWORD PTR [rbp-0x10]
  404585:	add    rax,0x8
  40458b:	mov    rcx,QWORD PTR [rbp-0x18]
  40458f:	cmp    rax,QWORD PTR [rcx+0x20]
  404593:	jb     4045b1 <mmk_verify_register_call@@Base+0x111>
  404599:	mov    rax,QWORD PTR [rbp-0x18]
  40459d:	mov    rcx,QWORD PTR [rax+0x20]
  4045a1:	add    rcx,0x1000
  4045a8:	mov    QWORD PTR [rax+0x20],rcx
  4045ac:	jmp    404579 <mmk_verify_register_call@@Base+0xd9>
  4045b1:	mov    rax,QWORD PTR [rbp-0x18]
  4045b5:	mov    rdi,QWORD PTR [rax+0x10]
  4045b9:	mov    rax,QWORD PTR [rbp-0x18]
  4045bd:	mov    rsi,QWORD PTR [rax+0x20]
  4045c1:	call   404b80 <mmk_realloc@@Base>
  4045c6:	mov    rcx,QWORD PTR [rbp-0x18]
  4045ca:	mov    QWORD PTR [rcx+0x10],rax
  4045ce:	mov    rax,QWORD PTR [rbp-0x18]
  4045d2:	cmp    QWORD PTR [rax+0x10],0x0
  4045d7:	jne    404610 <mmk_verify_register_call@@Base+0x170>
  4045dd:	mov    rax,QWORD PTR [rip+0x3a14]        # 407ff8 <stderr@GLIBC_2.2.5>
  4045e4:	mov    rdi,QWORD PTR [rax]
  4045e7:	lea    rsi,[rip+0xa2e]        # 40501c <_IO_stdin_used@@Base+0x1c>
  4045ee:	lea    rdx,[rip+0xce5]        # 4052da <_IO_stdin_used@@Base+0x2da>
  4045f5:	mov    ecx,0x5b
  4045fa:	lea    r8,[rip+0xd2d]        # 40532e <_IO_stdin_used@@Base+0x32e>
  404601:	mov    al,0x0
  404603:	call   4020e0 <fprintf@plt>
  404608:	mov    DWORD PTR [rbp-0x28],eax
  40460b:	call   402040 <abort@plt>
  404610:	jmp    404615 <mmk_verify_register_call@@Base+0x175>
  404615:	jmp    40461a <mmk_verify_register_call@@Base+0x17a>
  40461a:	mov    rax,QWORD PTR [rbp-0x18]
  40461e:	mov    rax,QWORD PTR [rax+0x10]
  404622:	mov    rcx,QWORD PTR [rbp-0x18]
  404626:	add    rax,QWORD PTR [rcx+0x18]
  40462a:	lea    rcx,[rbp-0x10]
  40462e:	mov    rdi,rax
  404631:	mov    rsi,rcx
  404634:	mov    edx,0x8
  404639:	call   404810 <mmk_memcpy@@Base>
  40463e:	mov    rcx,QWORD PTR [rbp-0x18]
  404642:	mov    rcx,QWORD PTR [rcx+0x10]
  404646:	mov    rdx,QWORD PTR [rbp-0x18]
  40464a:	add    rcx,QWORD PTR [rdx+0x18]
  40464e:	add    rcx,0x8
  404655:	mov    rsi,QWORD PTR [rbp-0x8]
  404659:	mov    rdx,QWORD PTR [rbp-0x10]
  40465d:	mov    rdi,rcx
  404660:	mov    QWORD PTR [rbp-0x30],rax
  404664:	call   404810 <mmk_memcpy@@Base>
  404669:	mov    QWORD PTR [rbp-0x20],rax
  40466d:	mov    rax,QWORD PTR [rbp-0x20]
  404671:	mov    QWORD PTR [rax],0x1
  404678:	mov    rax,QWORD PTR [rbp-0x10]
  40467c:	add    rax,0x8
  404682:	mov    rcx,QWORD PTR [rbp-0x18]
  404686:	add    rax,QWORD PTR [rcx+0x18]
  40468a:	mov    QWORD PTR [rcx+0x18],rax
  40468e:	add    rsp,0x30
  404692:	pop    rbp
  404693:	ret    
  404694:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40469e:	xchg   ax,ax
  4046a0:	push   rbp
  4046a1:	mov    rbp,rsp
  4046a4:	sub    rsp,0x40
  4046a8:	mov    QWORD PTR [rbp-0x10],rdi
  4046ac:	mov    QWORD PTR [rbp-0x18],rsi
  4046b0:	mov    QWORD PTR [rbp-0x20],rdx
  4046b4:	mov    rax,QWORD PTR [rbp-0x18]
  4046b8:	add    rax,0x8
  4046be:	mov    QWORD PTR [rbp-0x18],rax
  4046c2:	mov    rax,QWORD PTR [rbp-0x20]
  4046c6:	sub    rax,0x8
  4046cc:	mov    QWORD PTR [rbp-0x20],rax
  4046d0:	mov    rdi,QWORD PTR [rbp-0x10]
  4046d4:	call   403170 <mmk_mock_params_begin@@Base>
  4046d9:	mov    QWORD PTR [rbp-0x28],rax
  4046dd:	cmp    QWORD PTR [rbp-0x28],0x0
  4046e2:	je     40474f <mmk_verify_register_call@@Base+0x2af>
  4046e8:	mov    rax,QWORD PTR [rbp-0x28]
  4046ec:	add    rax,0x8
  4046f2:	mov    rsi,QWORD PTR [rbp-0x18]
  4046f6:	mov    rdx,QWORD PTR [rbp-0x20]
  4046fa:	mov    rdi,rax
  4046fd:	call   404760 <mmk_memcmp@@Base>
  404702:	mov    DWORD PTR [rbp-0x2c],eax
  404705:	cmp    DWORD PTR [rbp-0x2c],0x0
  404709:	jne    404734 <mmk_verify_register_call@@Base+0x294>
  40470f:	mov    rax,QWORD PTR [rbp-0x28]
  404713:	mov    QWORD PTR [rbp-0x38],rax
  404717:	mov    rax,QWORD PTR [rbp-0x38]
  40471b:	mov    rcx,QWORD PTR [rax]
  40471e:	add    rcx,0x1
  404725:	mov    QWORD PTR [rax],rcx
  404728:	mov    DWORD PTR [rbp-0x4],0x1
  40472f:	jmp    404756 <mmk_verify_register_call@@Base+0x2b6>
  404734:	jmp    404739 <mmk_verify_register_call@@Base+0x299>
  404739:	mov    rdi,QWORD PTR [rbp-0x10]
  40473d:	mov    rsi,QWORD PTR [rbp-0x28]
  404741:	call   4031c0 <mmk_mock_params_next@@Base>
  404746:	mov    QWORD PTR [rbp-0x28],rax
  40474a:	jmp    4046dd <mmk_verify_register_call@@Base+0x23d>
  40474f:	mov    DWORD PTR [rbp-0x4],0x0
  404756:	mov    eax,DWORD PTR [rbp-0x4]
  404759:	add    rsp,0x40
  40475d:	pop    rbp
  40475e:	ret    
  40475f:	nop

0000000000404760 <mmk_memcmp@@Base>:
  404760:	push   rbp
  404761:	mov    rbp,rsp
  404764:	mov    QWORD PTR [rbp-0x10],rdi
  404768:	mov    QWORD PTR [rbp-0x18],rsi
  40476c:	mov    QWORD PTR [rbp-0x20],rdx
  404770:	mov    rax,QWORD PTR [rbp-0x10]
  404774:	mov    QWORD PTR [rbp-0x28],rax
  404778:	mov    rax,QWORD PTR [rbp-0x18]
  40477c:	mov    QWORD PTR [rbp-0x30],rax
  404780:	cmp    QWORD PTR [rbp-0x20],0x0
  404785:	je     4047fa <mmk_memcmp@@Base+0x9a>
  40478b:	mov    rax,QWORD PTR [rbp-0x28]
  40478f:	movsx  ecx,BYTE PTR [rax]
  404792:	mov    rax,QWORD PTR [rbp-0x30]
  404796:	movsx  edx,BYTE PTR [rax]
  404799:	cmp    ecx,edx
  40479b:	je     4047c6 <mmk_memcmp@@Base+0x66>
  4047a1:	mov    rax,QWORD PTR [rbp-0x28]
  4047a5:	movsx  ecx,BYTE PTR [rax]
  4047a8:	mov    rax,QWORD PTR [rbp-0x30]
  4047ac:	movsx  edx,BYTE PTR [rax]
  4047af:	cmp    ecx,edx
  4047b1:	mov    ecx,0xffffffff
  4047b6:	mov    edx,0x1
  4047bb:	cmovl  edx,ecx
  4047be:	mov    DWORD PTR [rbp-0x4],edx
  4047c1:	jmp    404801 <mmk_memcmp@@Base+0xa1>
  4047c6:	jmp    4047cb <mmk_memcmp@@Base+0x6b>
  4047cb:	mov    rax,QWORD PTR [rbp-0x28]
  4047cf:	add    rax,0x1
  4047d5:	mov    QWORD PTR [rbp-0x28],rax
  4047d9:	mov    rax,QWORD PTR [rbp-0x30]
  4047dd:	add    rax,0x1
  4047e3:	mov    QWORD PTR [rbp-0x30],rax
  4047e7:	mov    rax,QWORD PTR [rbp-0x20]
  4047eb:	add    rax,0xffffffffffffffff
  4047f1:	mov    QWORD PTR [rbp-0x20],rax
  4047f5:	jmp    404780 <mmk_memcmp@@Base+0x20>
  4047fa:	mov    DWORD PTR [rbp-0x4],0x0
  404801:	mov    eax,DWORD PTR [rbp-0x4]
  404804:	pop    rbp
  404805:	ret    
  404806:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000404810 <mmk_memcpy@@Base>:
  404810:	push   rbp
  404811:	mov    rbp,rsp
  404814:	mov    QWORD PTR [rbp-0x8],rdi
  404818:	mov    QWORD PTR [rbp-0x10],rsi
  40481c:	mov    QWORD PTR [rbp-0x18],rdx
  404820:	mov    rax,QWORD PTR [rbp-0x10]
  404824:	mov    QWORD PTR [rbp-0x20],rax
  404828:	mov    rax,QWORD PTR [rbp-0x8]
  40482c:	mov    QWORD PTR [rbp-0x28],rax
  404830:	cmp    QWORD PTR [rbp-0x18],0x0
  404835:	je     404876 <mmk_memcpy@@Base+0x66>
  40483b:	mov    rax,QWORD PTR [rbp-0x20]
  40483f:	mov    cl,BYTE PTR [rax]
  404841:	mov    rax,QWORD PTR [rbp-0x28]
  404845:	mov    BYTE PTR [rax],cl
  404847:	mov    rax,QWORD PTR [rbp-0x28]
  40484b:	add    rax,0x1
  404851:	mov    QWORD PTR [rbp-0x28],rax
  404855:	mov    rax,QWORD PTR [rbp-0x20]
  404859:	add    rax,0x1
  40485f:	mov    QWORD PTR [rbp-0x20],rax
  404863:	mov    rax,QWORD PTR [rbp-0x18]
  404867:	add    rax,0xffffffffffffffff
  40486d:	mov    QWORD PTR [rbp-0x18],rax
  404871:	jmp    404830 <mmk_memcpy@@Base+0x20>
  404876:	mov    rax,QWORD PTR [rbp-0x8]
  40487a:	pop    rbp
  40487b:	ret    
  40487c:	nop    DWORD PTR [rax+0x0]

0000000000404880 <mmk_strneq@@Base>:
  404880:	push   rbp
  404881:	mov    rbp,rsp
  404884:	mov    QWORD PTR [rbp-0x10],rdi
  404888:	mov    QWORD PTR [rbp-0x18],rsi
  40488c:	mov    QWORD PTR [rbp-0x20],rdx
  404890:	xor    eax,eax
  404892:	mov    rcx,QWORD PTR [rbp-0x10]
  404896:	movsx  edx,BYTE PTR [rcx]
  404899:	cmp    edx,0x0
  40489c:	mov    BYTE PTR [rbp-0x21],al
  40489f:	je     4048c5 <mmk_strneq@@Base+0x45>
  4048a5:	xor    eax,eax
  4048a7:	mov    rcx,QWORD PTR [rbp-0x18]
  4048ab:	movsx  edx,BYTE PTR [rcx]
  4048ae:	cmp    edx,0x0
  4048b1:	mov    BYTE PTR [rbp-0x21],al
  4048b4:	je     4048c5 <mmk_strneq@@Base+0x45>
  4048ba:	cmp    QWORD PTR [rbp-0x20],0x0
  4048bf:	setne  al
  4048c2:	mov    BYTE PTR [rbp-0x21],al
  4048c5:	mov    al,BYTE PTR [rbp-0x21]
  4048c8:	test   al,0x1
  4048ca:	jne    4048d5 <mmk_strneq@@Base+0x55>
  4048d0:	jmp    40492b <mmk_strneq@@Base+0xab>
  4048d5:	mov    rax,QWORD PTR [rbp-0x10]
  4048d9:	movsx  ecx,BYTE PTR [rax]
  4048dc:	mov    rax,QWORD PTR [rbp-0x18]
  4048e0:	movsx  edx,BYTE PTR [rax]
  4048e3:	cmp    ecx,edx
  4048e5:	je     4048f7 <mmk_strneq@@Base+0x77>
  4048eb:	mov    DWORD PTR [rbp-0x4],0x0
  4048f2:	jmp    404956 <mmk_strneq@@Base+0xd6>
  4048f7:	jmp    4048fc <mmk_strneq@@Base+0x7c>
  4048fc:	mov    rax,QWORD PTR [rbp-0x10]
  404900:	add    rax,0x1
  404906:	mov    QWORD PTR [rbp-0x10],rax
  40490a:	mov    rax,QWORD PTR [rbp-0x18]
  40490e:	add    rax,0x1
  404914:	mov    QWORD PTR [rbp-0x18],rax
  404918:	mov    rax,QWORD PTR [rbp-0x20]
  40491c:	add    rax,0xffffffffffffffff
  404922:	mov    QWORD PTR [rbp-0x20],rax
  404926:	jmp    404890 <mmk_strneq@@Base+0x10>
  40492b:	cmp    QWORD PTR [rbp-0x20],0x0
  404930:	mov    al,0x1
  404932:	mov    BYTE PTR [rbp-0x22],al
  404935:	je     40494b <mmk_strneq@@Base+0xcb>
  40493b:	mov    rax,QWORD PTR [rbp-0x18]
  40493f:	cmp    BYTE PTR [rax],0x0
  404942:	setne  cl
  404945:	xor    cl,0xff
  404948:	mov    BYTE PTR [rbp-0x22],cl
  40494b:	mov    al,BYTE PTR [rbp-0x22]
  40494e:	and    al,0x1
  404950:	movzx  ecx,al
  404953:	mov    DWORD PTR [rbp-0x4],ecx
  404956:	mov    eax,DWORD PTR [rbp-0x4]
  404959:	pop    rbp
  40495a:	ret    
  40495b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404960 <mmk_strchr@@Base>:
  404960:	push   rbp
  404961:	mov    rbp,rsp
  404964:	mov    QWORD PTR [rbp-0x10],rdi
  404968:	mov    DWORD PTR [rbp-0x14],esi
  40496b:	mov    rax,QWORD PTR [rbp-0x10]
  40496f:	cmp    BYTE PTR [rax],0x0
  404972:	je     4049ad <mmk_strchr@@Base+0x4d>
  404978:	mov    rax,QWORD PTR [rbp-0x10]
  40497c:	movsx  ecx,BYTE PTR [rax]
  40497f:	cmp    ecx,DWORD PTR [rbp-0x14]
  404982:	jne    404995 <mmk_strchr@@Base+0x35>
  404988:	mov    rax,QWORD PTR [rbp-0x10]
  40498c:	mov    QWORD PTR [rbp-0x8],rax
  404990:	jmp    4049b5 <mmk_strchr@@Base+0x55>
  404995:	jmp    40499a <mmk_strchr@@Base+0x3a>
  40499a:	mov    rax,QWORD PTR [rbp-0x10]
  40499e:	add    rax,0x1
  4049a4:	mov    QWORD PTR [rbp-0x10],rax
  4049a8:	jmp    40496b <mmk_strchr@@Base+0xb>
  4049ad:	mov    QWORD PTR [rbp-0x8],0x0
  4049b5:	mov    rax,QWORD PTR [rbp-0x8]
  4049b9:	pop    rbp
  4049ba:	ret    
  4049bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004049c0 <mmk_strcpy@@Base>:
  4049c0:	push   rbp
  4049c1:	mov    rbp,rsp
  4049c4:	mov    QWORD PTR [rbp-0x8],rdi
  4049c8:	mov    QWORD PTR [rbp-0x10],rsi
  4049cc:	mov    rax,QWORD PTR [rbp-0x10]
  4049d0:	cmp    BYTE PTR [rax],0x0
  4049d3:	je     404a06 <mmk_strcpy@@Base+0x46>
  4049d9:	mov    rax,QWORD PTR [rbp-0x10]
  4049dd:	mov    cl,BYTE PTR [rax]
  4049df:	mov    rax,QWORD PTR [rbp-0x8]
  4049e3:	mov    BYTE PTR [rax],cl
  4049e5:	mov    rax,QWORD PTR [rbp-0x8]
  4049e9:	add    rax,0x1
  4049ef:	mov    QWORD PTR [rbp-0x8],rax
  4049f3:	mov    rax,QWORD PTR [rbp-0x10]
  4049f7:	add    rax,0x1
  4049fd:	mov    QWORD PTR [rbp-0x10],rax
  404a01:	jmp    4049cc <mmk_strcpy@@Base+0xc>
  404a06:	mov    rax,QWORD PTR [rbp-0x8]
  404a0a:	mov    BYTE PTR [rax],0x0
  404a0d:	mov    rax,QWORD PTR [rbp-0x8]
  404a11:	pop    rbp
  404a12:	ret    
  404a13:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404a1d:	nop    DWORD PTR [rax]

0000000000404a20 <mmk_strncpy@@Base>:
  404a20:	push   rbp
  404a21:	mov    rbp,rsp
  404a24:	mov    QWORD PTR [rbp-0x8],rdi
  404a28:	mov    QWORD PTR [rbp-0x10],rsi
  404a2c:	mov    QWORD PTR [rbp-0x18],rdx
  404a30:	xor    eax,eax
  404a32:	mov    rcx,QWORD PTR [rbp-0x10]
  404a36:	movsx  edx,BYTE PTR [rcx]
  404a39:	cmp    edx,0x0
  404a3c:	mov    BYTE PTR [rbp-0x19],al
  404a3f:	je     404a50 <mmk_strncpy@@Base+0x30>
  404a45:	cmp    QWORD PTR [rbp-0x18],0x0
  404a4a:	setne  al
  404a4d:	mov    BYTE PTR [rbp-0x19],al
  404a50:	mov    al,BYTE PTR [rbp-0x19]
  404a53:	test   al,0x1
  404a55:	jne    404a60 <mmk_strncpy@@Base+0x40>
  404a5b:	jmp    404a9b <mmk_strncpy@@Base+0x7b>
  404a60:	mov    rax,QWORD PTR [rbp-0x10]
  404a64:	mov    cl,BYTE PTR [rax]
  404a66:	mov    rax,QWORD PTR [rbp-0x8]
  404a6a:	mov    BYTE PTR [rax],cl
  404a6c:	mov    rax,QWORD PTR [rbp-0x8]
  404a70:	add    rax,0x1
  404a76:	mov    QWORD PTR [rbp-0x8],rax
  404a7a:	mov    rax,QWORD PTR [rbp-0x10]
  404a7e:	add    rax,0x1
  404a84:	mov    QWORD PTR [rbp-0x10],rax
  404a88:	mov    rax,QWORD PTR [rbp-0x18]
  404a8c:	add    rax,0xffffffffffffffff
  404a92:	mov    QWORD PTR [rbp-0x18],rax
  404a96:	jmp    404a30 <mmk_strncpy@@Base+0x10>
  404a9b:	mov    rax,QWORD PTR [rbp-0x8]
  404a9f:	mov    BYTE PTR [rax],0x0
  404aa2:	mov    rax,QWORD PTR [rbp-0x8]
  404aa6:	pop    rbp
  404aa7:	ret    
  404aa8:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404ab0 <mmk_strlen@@Base>:
  404ab0:	push   rbp
  404ab1:	mov    rbp,rsp
  404ab4:	mov    QWORD PTR [rbp-0x8],rdi
  404ab8:	mov    QWORD PTR [rbp-0x10],0x0
  404ac0:	mov    rax,QWORD PTR [rbp-0x8]
  404ac4:	cmp    BYTE PTR [rax],0x0
  404ac7:	je     404af3 <mmk_strlen@@Base+0x43>
  404acd:	jmp    404ad2 <mmk_strlen@@Base+0x22>
  404ad2:	mov    rax,QWORD PTR [rbp-0x10]
  404ad6:	add    rax,0x1
  404adc:	mov    QWORD PTR [rbp-0x10],rax
  404ae0:	mov    rax,QWORD PTR [rbp-0x8]
  404ae4:	add    rax,0x1
  404aea:	mov    QWORD PTR [rbp-0x8],rax
  404aee:	jmp    404ac0 <mmk_strlen@@Base+0x10>
  404af3:	mov    rax,QWORD PTR [rbp-0x10]
  404af7:	pop    rbp
  404af8:	ret    
  404af9:	nop    DWORD PTR [rax+0x0]

0000000000404b00 <mmk_isspace@@Base>:
  404b00:	push   rbp
  404b01:	mov    rbp,rsp
  404b04:	mov    DWORD PTR [rbp-0x4],edi
  404b07:	cmp    DWORD PTR [rbp-0x4],0x20
  404b0b:	mov    al,0x1
  404b0d:	mov    BYTE PTR [rbp-0x5],al
  404b10:	je     404b3e <mmk_isspace@@Base+0x3e>
  404b16:	cmp    DWORD PTR [rbp-0x4],0x9
  404b1a:	mov    al,0x1
  404b1c:	mov    BYTE PTR [rbp-0x5],al
  404b1f:	je     404b3e <mmk_isspace@@Base+0x3e>
  404b25:	cmp    DWORD PTR [rbp-0x4],0xd
  404b29:	mov    al,0x1
  404b2b:	mov    BYTE PTR [rbp-0x5],al
  404b2e:	je     404b3e <mmk_isspace@@Base+0x3e>
  404b34:	cmp    DWORD PTR [rbp-0x4],0xa
  404b38:	sete   al
  404b3b:	mov    BYTE PTR [rbp-0x5],al
  404b3e:	mov    al,BYTE PTR [rbp-0x5]
  404b41:	and    al,0x1
  404b43:	movzx  eax,al
  404b46:	pop    rbp
  404b47:	ret    
  404b48:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404b50 <mmk_malloc@@Base>:
  404b50:	push   rbp
  404b51:	mov    rbp,rsp
  404b54:	sub    rsp,0x10
  404b58:	lea    rax,[rip+0x3599]        # 4080f8 <mmk_malloc_@@Base>
  404b5f:	mov    QWORD PTR [rbp-0x8],rdi
  404b63:	mov    rax,QWORD PTR [rax]
  404b66:	mov    rdi,QWORD PTR [rbp-0x8]
  404b6a:	call   rax
  404b6c:	add    rsp,0x10
  404b70:	pop    rbp
  404b71:	ret    
  404b72:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404b7c:	nop    DWORD PTR [rax+0x0]

0000000000404b80 <mmk_realloc@@Base>:
  404b80:	push   rbp
  404b81:	mov    rbp,rsp
  404b84:	sub    rsp,0x10
  404b88:	lea    rax,[rip+0x3559]        # 4080e8 <mmk_realloc_@@Base>
  404b8f:	mov    QWORD PTR [rbp-0x8],rdi
  404b93:	mov    QWORD PTR [rbp-0x10],rsi
  404b97:	mov    rax,QWORD PTR [rax]
  404b9a:	mov    rdi,QWORD PTR [rbp-0x8]
  404b9e:	mov    rsi,QWORD PTR [rbp-0x10]
  404ba2:	call   rax
  404ba4:	add    rsp,0x10
  404ba8:	pop    rbp
  404ba9:	ret    
  404baa:	nop    WORD PTR [rax+rax*1+0x0]

0000000000404bb0 <mmk_free@@Base>:
  404bb0:	push   rbp
  404bb1:	mov    rbp,rsp
  404bb4:	sub    rsp,0x10
  404bb8:	lea    rax,[rip+0x3531]        # 4080f0 <mmk_free_@@Base>
  404bbf:	mov    QWORD PTR [rbp-0x8],rdi
  404bc3:	mov    rax,QWORD PTR [rax]
  404bc6:	mov    rdi,QWORD PTR [rbp-0x8]
  404bca:	call   rax
  404bcc:	add    rsp,0x10
  404bd0:	pop    rbp
  404bd1:	ret    
  404bd2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404bdc:	nop    DWORD PTR [rax+0x0]

0000000000404be0 <mmk_init_vital_functions@@Base>:
  404be0:	push   rbp
  404be1:	mov    rbp,rsp
  404be4:	sub    rsp,0x20
  404be8:	xor    eax,eax
  404bea:	mov    ecx,eax
  404bec:	mov    QWORD PTR [rbp-0x8],rdi
  404bf0:	mov    rdi,rcx
  404bf3:	call   402150 <malloc@plt>
  404bf8:	xor    edx,edx
  404bfa:	mov    esi,edx
  404bfc:	mov    rdi,rax
  404bff:	call   402100 <realloc@plt>
  404c04:	mov    rdi,rax
  404c07:	call   402030 <free@plt>
  404c0c:	mov    rdi,QWORD PTR [rbp-0x8]
  404c10:	lea    rsi,[rip+0x727]        # 40533e <_IO_stdin_used@@Base+0x33e>
  404c17:	call   4039d0 <plt_get_real_fn@@Base>
  404c1c:	lea    rcx,[rip+0x34d5]        # 4080f8 <mmk_malloc_@@Base>
  404c23:	mov    QWORD PTR [rcx],rax
  404c26:	cmp    rax,0x0
  404c2a:	jne    404c63 <mmk_init_vital_functions@@Base+0x83>
  404c30:	mov    rax,QWORD PTR [rip+0x33c1]        # 407ff8 <stderr@GLIBC_2.2.5>
  404c37:	mov    rdi,QWORD PTR [rax]
  404c3a:	lea    rsi,[rip+0x3db]        # 40501c <_IO_stdin_used@@Base+0x1c>
  404c41:	lea    rdx,[rip+0x6fd]        # 405345 <_IO_stdin_used@@Base+0x345>
  404c48:	mov    ecx,0x58
  404c4d:	lea    r8,[rip+0x745]        # 405399 <_IO_stdin_used@@Base+0x399>
  404c54:	mov    al,0x0
  404c56:	call   4020e0 <fprintf@plt>
  404c5b:	mov    DWORD PTR [rbp-0xc],eax
  404c5e:	call   402040 <abort@plt>
  404c63:	jmp    404c68 <mmk_init_vital_functions@@Base+0x88>
  404c68:	jmp    404c6d <mmk_init_vital_functions@@Base+0x8d>
  404c6d:	mov    rdi,QWORD PTR [rbp-0x8]
  404c71:	lea    rsi,[rip+0x757]        # 4053cf <_IO_stdin_used@@Base+0x3cf>
  404c78:	call   4039d0 <plt_get_real_fn@@Base>
  404c7d:	lea    rcx,[rip+0x3464]        # 4080e8 <mmk_realloc_@@Base>
  404c84:	mov    QWORD PTR [rcx],rax
  404c87:	cmp    rax,0x0
  404c8b:	jne    404cc4 <mmk_init_vital_functions@@Base+0xe4>
  404c91:	mov    rax,QWORD PTR [rip+0x3360]        # 407ff8 <stderr@GLIBC_2.2.5>
  404c98:	mov    rdi,QWORD PTR [rax]
  404c9b:	lea    rsi,[rip+0x37a]        # 40501c <_IO_stdin_used@@Base+0x1c>
  404ca2:	lea    rdx,[rip+0x69c]        # 405345 <_IO_stdin_used@@Base+0x345>
  404ca9:	mov    ecx,0x59
  404cae:	lea    r8,[rip+0x722]        # 4053d7 <_IO_stdin_used@@Base+0x3d7>
  404cb5:	mov    al,0x0
  404cb7:	call   4020e0 <fprintf@plt>
  404cbc:	mov    DWORD PTR [rbp-0x10],eax
  404cbf:	call   402040 <abort@plt>
  404cc4:	jmp    404cc9 <mmk_init_vital_functions@@Base+0xe9>
  404cc9:	jmp    404cce <mmk_init_vital_functions@@Base+0xee>
  404cce:	mov    rdi,QWORD PTR [rbp-0x8]
  404cd2:	lea    rsi,[rip+0x736]        # 40540f <_IO_stdin_used@@Base+0x40f>
  404cd9:	call   4039d0 <plt_get_real_fn@@Base>
  404cde:	lea    rcx,[rip+0x340b]        # 4080f0 <mmk_free_@@Base>
  404ce5:	mov    QWORD PTR [rcx],rax
  404ce8:	cmp    rax,0x0
  404cec:	jne    404d25 <mmk_init_vital_functions@@Base+0x145>
  404cf2:	mov    rax,QWORD PTR [rip+0x32ff]        # 407ff8 <stderr@GLIBC_2.2.5>
  404cf9:	mov    rdi,QWORD PTR [rax]
  404cfc:	lea    rsi,[rip+0x319]        # 40501c <_IO_stdin_used@@Base+0x1c>
  404d03:	lea    rdx,[rip+0x63b]        # 405345 <_IO_stdin_used@@Base+0x345>
  404d0a:	mov    ecx,0x5a
  404d0f:	lea    r8,[rip+0x6fe]        # 405414 <_IO_stdin_used@@Base+0x414>
  404d16:	mov    al,0x0
  404d18:	call   4020e0 <fprintf@plt>
  404d1d:	mov    DWORD PTR [rbp-0x14],eax
  404d20:	call   402040 <abort@plt>
  404d25:	jmp    404d2a <mmk_init_vital_functions@@Base+0x14a>
  404d2a:	add    rsp,0x20
  404d2e:	pop    rbp
  404d2f:	ret    

0000000000404d30 <mmk_when_init@@Base>:
  404d30:	push   rbp
  404d31:	mov    rbp,rsp
  404d34:	sub    rsp,0x10
  404d38:	mov    QWORD PTR [rbp-0x8],rdi
  404d3c:	mov    rax,QWORD PTR [rbp-0x8]
  404d40:	mov    QWORD PTR [rbp-0x10],rax
  404d44:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  404d50:	mov    rcx,QWORD PTR [rbp-0x10]
  404d54:	mov    QWORD PTR [rax-0x8],rcx
  404d5b:	add    rsp,0x10
  404d5f:	pop    rbp
  404d60:	ret    
  404d61:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404d6b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404d70 <mmk_when_get_result@@Base>:
  404d70:	push   rbp
  404d71:	mov    rbp,rsp
  404d74:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  404d80:	mov    rax,QWORD PTR [rax-0x8]
  404d87:	pop    rbp
  404d88:	ret    
  404d89:	nop    DWORD PTR [rax+0x0]

0000000000404d90 <mmk_when_impl@@Base>:
  404d90:	push   rbp
  404d91:	mov    rbp,rsp
  404d94:	sub    rsp,0x20
  404d98:	mov    QWORD PTR [rbp-0x8],rdi
  404d9c:	mov    QWORD PTR [rbp-0x10],rsi
  404da0:	mov    rax,QWORD PTR [rbp-0x10]
  404da4:	mov    QWORD PTR [rbp-0x18],rax
  404da8:	call   402d70 <mmk_matcher_ctx@@Base>
  404dad:	mov    rcx,QWORD PTR [rbp-0x18]
  404db1:	mov    QWORD PTR [rcx],rax
  404db4:	mov    rax,QWORD PTR [rbp-0x8]
  404db8:	mov    rax,QWORD PTR [rax]
  404dbb:	mov    rcx,QWORD PTR [rbp-0x18]
  404dbf:	mov    QWORD PTR [rcx+0x8],rax
  404dc3:	mov    rax,QWORD PTR [rbp-0x18]
  404dc7:	mov    rcx,QWORD PTR [rbp-0x8]
  404dcb:	mov    QWORD PTR [rcx],rax
  404dce:	add    rsp,0x20
  404dd2:	pop    rbp
  404dd3:	ret    

0000000000404dd4 <mmk_trampoline@@Base>:
  404dd4:	call   404dd9 <mmk_trampoline@@Base+0x5>
  404dd9:	pop    rax
  404dda:	push   rax
  404ddb:	mov    rax,QWORD PTR [rax-0x15]
  404de2:	push   rdi
  404de3:	push   rsi
  404de4:	push   rdx
  404de5:	push   rcx
  404de6:	push   r8
  404de8:	push   r9
  404dea:	sub    rsp,0x10
  404dee:	movdqu XMMWORD PTR [rsp],xmm0
  404df3:	sub    rsp,0x10
  404df7:	movdqu XMMWORD PTR [rsp],xmm1
  404dfc:	sub    rsp,0x10
  404e00:	movdqu XMMWORD PTR [rsp],xmm2
  404e05:	sub    rsp,0x10
  404e09:	movdqu XMMWORD PTR [rsp],xmm3
  404e0e:	sub    rsp,0x10
  404e12:	movdqu XMMWORD PTR [rsp],xmm4
  404e17:	sub    rsp,0x10
  404e1b:	movdqu XMMWORD PTR [rsp],xmm5
  404e20:	sub    rsp,0x10
  404e24:	movdqu XMMWORD PTR [rsp],xmm6
  404e29:	sub    rsp,0x10
  404e2d:	movdqu XMMWORD PTR [rsp],xmm7
  404e32:	mov    rdi,rax
  404e35:	push   rax
  404e36:	mov    rax,QWORD PTR [rax+0x8]
  404e3a:	call   rax
  404e3c:	pop    rax
  404e3d:	mov    rax,QWORD PTR [rax]
  404e40:	call   rax
  404e42:	movdqu xmm7,XMMWORD PTR [rsp]
  404e47:	add    rsp,0x10
  404e4b:	movdqu xmm6,XMMWORD PTR [rsp]
  404e50:	add    rsp,0x10
  404e54:	movdqu xmm5,XMMWORD PTR [rsp]
  404e59:	add    rsp,0x10
  404e5d:	movdqu xmm4,XMMWORD PTR [rsp]
  404e62:	add    rsp,0x10
  404e66:	movdqu xmm3,XMMWORD PTR [rsp]
  404e6b:	add    rsp,0x10
  404e6f:	movdqu xmm2,XMMWORD PTR [rsp]
  404e74:	add    rsp,0x10
  404e78:	movdqu xmm1,XMMWORD PTR [rsp]
  404e7d:	add    rsp,0x10
  404e81:	movdqu xmm0,XMMWORD PTR [rsp]
  404e86:	add    rsp,0x10
  404e8a:	pop    r9
  404e8c:	pop    r8
  404e8e:	pop    rcx
  404e8f:	pop    rdx
  404e90:	pop    rsi
  404e91:	pop    rdi
  404e92:	test   rax,rax
  404e95:	jne    404ea1 <mmk_trampoline@@Base+0xcd>
  404e97:	pop    rax
  404e98:	mov    rax,QWORD PTR [rax-0xd]
  404e9f:	jmp    rax
  404ea1:	pop    rax
  404ea2:	mov    rax,QWORD PTR [rax-0x15]
  404ea9:	mov    rax,QWORD PTR [rax+0x10]
  404ead:	call   rax
  404eaf:	ret    

0000000000404eb0 <mmk_trampoline_end@@Base>:
  404eb0:	nop
  404eb1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404ebb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404ec0 <__libc_csu_init@@Base>:
  404ec0:	endbr64 
  404ec4:	push   r15
  404ec6:	lea    r15,[rip+0x2ee3]        # 407db0 <_IO_stdin_used@@Base+0x2db0>
  404ecd:	push   r14
  404ecf:	mov    r14,rdx
  404ed2:	push   r13
  404ed4:	mov    r13,rsi
  404ed7:	push   r12
  404ed9:	mov    r12d,edi
  404edc:	push   rbp
  404edd:	lea    rbp,[rip+0x2ed4]        # 407db8 <_IO_stdin_used@@Base+0x2db8>
  404ee4:	push   rbx
  404ee5:	sub    rbp,r15
  404ee8:	sub    rsp,0x8
  404eec:	call   402000 <free@plt-0x30>
  404ef1:	sar    rbp,0x3
  404ef5:	je     404f16 <__libc_csu_init@@Base+0x56>
  404ef7:	xor    ebx,ebx
  404ef9:	nop    DWORD PTR [rax+0x0]
  404f00:	mov    rdx,r14
  404f03:	mov    rsi,r13
  404f06:	mov    edi,r12d
  404f09:	call   QWORD PTR [r15+rbx*8]
  404f0d:	add    rbx,0x1
  404f11:	cmp    rbp,rbx
  404f14:	jne    404f00 <__libc_csu_init@@Base+0x40>
  404f16:	add    rsp,0x8
  404f1a:	pop    rbx
  404f1b:	pop    rbp
  404f1c:	pop    r12
  404f1e:	pop    r13
  404f20:	pop    r14
  404f22:	pop    r15
  404f24:	ret    
  404f25:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000404f30 <__libc_csu_fini@@Base>:
  404f30:	endbr64 
  404f34:	ret    

Disassembly of section .fini:

0000000000404f38 <.fini>:
  404f38:	endbr64 
  404f3c:	sub    rsp,0x8
  404f40:	add    rsp,0x8
  404f44:	ret    
