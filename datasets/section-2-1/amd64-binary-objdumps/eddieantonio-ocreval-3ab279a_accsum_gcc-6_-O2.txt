
../repos/eddieantonio-ocreval-3ab279a/accsum/accsum:     file format elf64-x86-64


Disassembly of section .init:

0000000000401000 <.init>:
  401000:	endbr64 
  401004:	sub    rsp,0x8
  401008:	mov    rax,QWORD PTR [rip+0x5fd9]        # 406fe8 <__gmon_start__>
  40100f:	test   rax,rax
  401012:	je     401016 <free@plt-0x1a>
  401014:	call   rax
  401016:	add    rsp,0x8
  40101a:	ret    

Disassembly of section .plt:

0000000000401020 <free@plt-0x10>:
  401020:	push   QWORD PTR [rip+0x5fe2]        # 407008 <error@@Base+0x40e8>
  401026:	jmp    QWORD PTR [rip+0x5fe4]        # 407010 <error@@Base+0x40f0>
  40102c:	nop    DWORD PTR [rax+0x0]

0000000000401030 <free@plt>:
  401030:	jmp    QWORD PTR [rip+0x5fe2]        # 407018 <free@GLIBC_2.2.5>
  401036:	push   0x0
  40103b:	jmp    401020 <free@plt-0x10>

0000000000401040 <unlink@plt>:
  401040:	jmp    QWORD PTR [rip+0x5fda]        # 407020 <unlink@GLIBC_2.2.5>
  401046:	push   0x1
  40104b:	jmp    401020 <free@plt-0x10>

0000000000401050 <utf8proc_get_property@plt>:
  401050:	jmp    QWORD PTR [rip+0x5fd2]        # 407028 <utf8proc_get_property>
  401056:	push   0x2
  40105b:	jmp    401020 <free@plt-0x10>

0000000000401060 <utf8proc_encode_char@plt>:
  401060:	jmp    QWORD PTR [rip+0x5fca]        # 407030 <utf8proc_encode_char>
  401066:	push   0x3
  40106b:	jmp    401020 <free@plt-0x10>

0000000000401070 <getpid@plt>:
  401070:	jmp    QWORD PTR [rip+0x5fc2]        # 407038 <getpid@GLIBC_2.2.5>
  401076:	push   0x4
  40107b:	jmp    401020 <free@plt-0x10>

0000000000401080 <fclose@plt>:
  401080:	jmp    QWORD PTR [rip+0x5fba]        # 407040 <fclose@GLIBC_2.2.5>
  401086:	push   0x5
  40108b:	jmp    401020 <free@plt-0x10>

0000000000401090 <strlen@plt>:
  401090:	jmp    QWORD PTR [rip+0x5fb2]        # 407048 <strlen@GLIBC_2.2.5>
  401096:	push   0x6
  40109b:	jmp    401020 <free@plt-0x10>

00000000004010a0 <__stack_chk_fail@plt>:
  4010a0:	jmp    QWORD PTR [rip+0x5faa]        # 407050 <__stack_chk_fail@GLIBC_2.4>
  4010a6:	push   0x7
  4010ab:	jmp    401020 <free@plt-0x10>

00000000004010b0 <rewind@plt>:
  4010b0:	jmp    QWORD PTR [rip+0x5fa2]        # 407058 <rewind@GLIBC_2.2.5>
  4010b6:	push   0x8
  4010bb:	jmp    401020 <free@plt-0x10>

00000000004010c0 <utf8proc_tolower@plt>:
  4010c0:	jmp    QWORD PTR [rip+0x5f9a]        # 407060 <utf8proc_tolower>
  4010c6:	push   0x9
  4010cb:	jmp    401020 <free@plt-0x10>

00000000004010d0 <fputs@plt>:
  4010d0:	jmp    QWORD PTR [rip+0x5f92]        # 407068 <fputs@GLIBC_2.2.5>
  4010d6:	push   0xa
  4010db:	jmp    401020 <free@plt-0x10>

00000000004010e0 <fgets@plt>:
  4010e0:	jmp    QWORD PTR [rip+0x5f8a]        # 407070 <fgets@GLIBC_2.2.5>
  4010e6:	push   0xb
  4010eb:	jmp    401020 <free@plt-0x10>

00000000004010f0 <utf8proc_iterate@plt>:
  4010f0:	jmp    QWORD PTR [rip+0x5f82]        # 407078 <utf8proc_iterate>
  4010f6:	push   0xc
  4010fb:	jmp    401020 <free@plt-0x10>

0000000000401100 <calloc@plt>:
  401100:	jmp    QWORD PTR [rip+0x5f7a]        # 407080 <calloc@GLIBC_2.2.5>
  401106:	push   0xd
  40110b:	jmp    401020 <free@plt-0x10>

0000000000401110 <strcmp@plt>:
  401110:	jmp    QWORD PTR [rip+0x5f72]        # 407088 <strcmp@GLIBC_2.2.5>
  401116:	push   0xe
  40111b:	jmp    401020 <free@plt-0x10>

0000000000401120 <__sysv_signal@plt>:
  401120:	jmp    QWORD PTR [rip+0x5f6a]        # 407090 <__sysv_signal@GLIBC_2.2.5>
  401126:	push   0xf
  40112b:	jmp    401020 <free@plt-0x10>

0000000000401130 <utf8proc_category@plt>:
  401130:	jmp    QWORD PTR [rip+0x5f62]        # 407098 <utf8proc_category>
  401136:	push   0x10
  40113b:	jmp    401020 <free@plt-0x10>

0000000000401140 <__xstat@plt>:
  401140:	jmp    QWORD PTR [rip+0x5f5a]        # 4070a0 <__xstat@GLIBC_2.2.5>
  401146:	push   0x11
  40114b:	jmp    401020 <free@plt-0x10>

0000000000401150 <__isoc99_sscanf@plt>:
  401150:	jmp    QWORD PTR [rip+0x5f52]        # 4070a8 <__isoc99_sscanf@GLIBC_2.7>
  401156:	push   0x12
  40115b:	jmp    401020 <free@plt-0x10>

0000000000401160 <__fread_chk@plt>:
  401160:	jmp    QWORD PTR [rip+0x5f4a]        # 4070b0 <__fread_chk@GLIBC_2.7>
  401166:	push   0x13
  40116b:	jmp    401020 <free@plt-0x10>

0000000000401170 <fopen@plt>:
  401170:	jmp    QWORD PTR [rip+0x5f42]        # 4070b8 <fopen@GLIBC_2.2.5>
  401176:	push   0x14
  40117b:	jmp    401020 <free@plt-0x10>

0000000000401180 <exit@plt>:
  401180:	jmp    QWORD PTR [rip+0x5f3a]        # 4070c0 <exit@GLIBC_2.2.5>
  401186:	push   0x15
  40118b:	jmp    401020 <free@plt-0x10>

0000000000401190 <fwrite@plt>:
  401190:	jmp    QWORD PTR [rip+0x5f32]        # 4070c8 <fwrite@GLIBC_2.2.5>
  401196:	push   0x16
  40119b:	jmp    401020 <free@plt-0x10>

00000000004011a0 <__fprintf_chk@plt>:
  4011a0:	jmp    QWORD PTR [rip+0x5f2a]        # 4070d0 <__fprintf_chk@GLIBC_2.3.4>
  4011a6:	push   0x17
  4011ab:	jmp    401020 <free@plt-0x10>

00000000004011b0 <utf8proc_errmsg@plt>:
  4011b0:	jmp    QWORD PTR [rip+0x5f22]        # 4070d8 <utf8proc_errmsg>
  4011b6:	push   0x18
  4011bb:	jmp    401020 <free@plt-0x10>

00000000004011c0 <strdup@plt>:
  4011c0:	jmp    QWORD PTR [rip+0x5f1a]        # 4070e0 <strdup@GLIBC_2.2.5>
  4011c6:	push   0x19
  4011cb:	jmp    401020 <free@plt-0x10>

00000000004011d0 <getc@plt>:
  4011d0:	jmp    QWORD PTR [rip+0x5f12]        # 4070e8 <getc@GLIBC_2.2.5>
  4011d6:	push   0x1a
  4011db:	jmp    401020 <free@plt-0x10>

00000000004011e0 <__sprintf_chk@plt>:
  4011e0:	jmp    QWORD PTR [rip+0x5f0a]        # 4070f0 <__sprintf_chk@GLIBC_2.3.4>
  4011e6:	push   0x1b
  4011eb:	jmp    401020 <free@plt-0x10>

Disassembly of section .text:

00000000004011f0 <error@@Base-0x1d30>:
  4011f0:	push   r12
  4011f2:	push   rbp
  4011f3:	lea    rdx,[rip+0x2e0e]        # 404008 <error@@Base+0x10e8>
  4011fa:	push   rbx
  4011fb:	xor    ecx,ecx
  4011fd:	xor    eax,eax
  4011ff:	mov    rbp,rsi
  401202:	sub    rsp,0x10
  401206:	mov    DWORD PTR [rsp+0xc],edi
  40120a:	lea    rdi,[rsp+0xc]
  40120f:	call   403080 <error@@Base+0x160>
  401214:	cmp    DWORD PTR [rsp+0xc],0x1
  401219:	jle    40125e <__sprintf_chk@plt+0x7e>
  40121b:	mov    r12,0x5179e0
  401222:	mov    ebx,0x1
  401227:	nop    WORD PTR [rax+rax*1+0x0]
  401230:	mov    rsi,QWORD PTR [rbp+rbx*8-0x8]
  401235:	xor    eax,eax
  401237:	mov    rdi,r12
  40123a:	call   401750 <__sprintf_chk@plt+0x570>
  40123f:	mov    eax,ebx
  401241:	add    rbx,0x1
  401245:	cmp    DWORD PTR [rsp+0xc],eax
  401249:	jg     401230 <__sprintf_chk@plt+0x50>
  40124b:	xor    eax,eax
  40124d:	xor    esi,esi
  40124f:	mov    rdi,r12
  401252:	call   401b10 <__sprintf_chk@plt+0x930>
  401257:	xor    eax,eax
  401259:	call   402ec0 <__sprintf_chk@plt+0x1ce0>
  40125e:	lea    rdi,[rip+0x2dda]        # 40403f <error@@Base+0x111f>
  401265:	xor    eax,eax
  401267:	call   402f20 <error@@Base>
  40126c:	nop    DWORD PTR [rax+0x0]
  401270:	endbr64 
  401274:	xor    ebp,ebp
  401276:	mov    r9,rdx
  401279:	pop    rsi
  40127a:	mov    rdx,rsp
  40127d:	and    rsp,0xfffffffffffffff0
  401281:	push   rax
  401282:	push   rsp
  401283:	mov    r8,0x4035d0
  40128a:	mov    rcx,0x403560
  401291:	mov    rdi,0x4011f0
  401298:	call   QWORD PTR [rip+0x5d42]        # 406fe0 <error@@Base+0x40c0>
  40129e:	hlt    
  40129f:	nop
  4012a0:	endbr64 
  4012a4:	ret    
  4012a5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4012af:	nop
  4012b0:	mov    eax,0x407117
  4012b5:	push   rbp
  4012b6:	sub    rax,0x407110
  4012bc:	cmp    rax,0xe
  4012c0:	mov    rbp,rsp
  4012c3:	jbe    4012e0 <__sprintf_chk@plt+0x100>
  4012c5:	mov    eax,0x0
  4012ca:	test   rax,rax
  4012cd:	je     4012e0 <__sprintf_chk@plt+0x100>
  4012cf:	pop    rbp
  4012d0:	mov    edi,0x407110
  4012d5:	jmp    rax
  4012d7:	nop    WORD PTR [rax+rax*1+0x0]
  4012e0:	pop    rbp
  4012e1:	ret    
  4012e2:	nop    DWORD PTR [rax+0x0]
  4012e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4012f0:	mov    esi,0x407110
  4012f5:	push   rbp
  4012f6:	sub    rsi,0x407110
  4012fd:	sar    rsi,0x3
  401301:	mov    rbp,rsp
  401304:	mov    rax,rsi
  401307:	shr    rax,0x3f
  40130b:	add    rsi,rax
  40130e:	sar    rsi,1
  401311:	je     401328 <__sprintf_chk@plt+0x148>
  401313:	mov    eax,0x0
  401318:	test   rax,rax
  40131b:	je     401328 <__sprintf_chk@plt+0x148>
  40131d:	pop    rbp
  40131e:	mov    edi,0x407110
  401323:	jmp    rax
  401325:	nop    DWORD PTR [rax]
  401328:	pop    rbp
  401329:	ret    
  40132a:	nop    WORD PTR [rax+rax*1+0x0]
  401330:	cmp    BYTE PTR [rip+0x5de9],0x0        # 407120 <error@@Base+0x4200>
  401337:	jne    40134a <__sprintf_chk@plt+0x16a>
  401339:	push   rbp
  40133a:	mov    rbp,rsp
  40133d:	call   4012b0 <__sprintf_chk@plt+0xd0>
  401342:	pop    rbp
  401343:	mov    BYTE PTR [rip+0x5dd6],0x1        # 407120 <error@@Base+0x4200>
  40134a:	repz ret 
  40134c:	nop    DWORD PTR [rax+0x0]
  401350:	mov    edi,0x406838
  401355:	cmp    QWORD PTR [rdi],0x0
  401359:	jne    401360 <__sprintf_chk@plt+0x180>
  40135b:	jmp    4012f0 <__sprintf_chk@plt+0x110>
  40135d:	nop    DWORD PTR [rax]
  401360:	mov    eax,0x0
  401365:	test   rax,rax
  401368:	je     40135b <__sprintf_chk@plt+0x17b>
  40136a:	push   rbp
  40136b:	mov    rbp,rsp
  40136e:	call   rax
  401370:	pop    rbp
  401371:	jmp    4012f0 <__sprintf_chk@plt+0x110>
  401376:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401380:	push   rbp
  401381:	push   rbx
  401382:	mov    rbp,rdx
  401385:	mov    rdx,rdi
  401388:	lea    rdi,[rip+0x5db1]        # 407140 <error@@Base+0x4220>
  40138f:	mov    rbx,rsi
  401392:	sub    rsp,0x8
  401396:	mov    esi,0x63
  40139b:	call   4010e0 <fgets@plt>
  4013a0:	test   rax,rax
  4013a3:	je     4013c2 <__sprintf_chk@plt+0x1e2>
  4013a5:	lea    rsi,[rip+0x2cb6]        # 404062 <error@@Base+0x1142>
  4013ac:	lea    rdi,[rip+0x5d8d]        # 407140 <error@@Base+0x4220>
  4013b3:	xor    eax,eax
  4013b5:	mov    rdx,rbx
  4013b8:	call   401150 <__isoc99_sscanf@plt>
  4013bd:	cmp    eax,0x1
  4013c0:	je     4013d0 <__sprintf_chk@plt+0x1f0>
  4013c2:	add    rsp,0x8
  4013c6:	xor    eax,eax
  4013c8:	pop    rbx
  4013c9:	pop    rbp
  4013ca:	ret    
  4013cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4013d0:	mov    rax,QWORD PTR [rbx]
  4013d3:	add    QWORD PTR [rbp+0x0],rax
  4013d7:	add    rsp,0x8
  4013db:	mov    eax,0x1
  4013e0:	pop    rbx
  4013e1:	pop    rbp
  4013e2:	ret    
  4013e3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4013ee:	xchg   ax,ax
  4013f0:	push   rbx
  4013f1:	mov    rdx,rdi
  4013f4:	lea    rdi,[rip+0x5d45]        # 407140 <error@@Base+0x4220>
  4013fb:	mov    rbx,rsi
  4013fe:	mov    esi,0x63
  401403:	sub    rsp,0x30
  401407:	mov    rax,QWORD PTR fs:0x28
  401410:	mov    QWORD PTR [rsp+0x28],rax
  401415:	xor    eax,eax
  401417:	call   4010e0 <fgets@plt>
  40141c:	test   rax,rax
  40141f:	je     40144d <__sprintf_chk@plt+0x26d>
  401421:	lea    rcx,[rsp+0x8]
  401426:	lea    r9,[rsp+0x18]
  40142b:	lea    r8,[rsp+0x10]
  401430:	lea    rsi,[rip+0x2c1f]        # 404056 <error@@Base+0x1136>
  401437:	lea    rdi,[rip+0x5d02]        # 407140 <error@@Base+0x4220>
  40143e:	xor    eax,eax
  401440:	mov    rdx,rsp
  401443:	call   401150 <__isoc99_sscanf@plt>
  401448:	cmp    eax,0x4
  40144b:	je     401468 <__sprintf_chk@plt+0x288>
  40144d:	xor    eax,eax
  40144f:	mov    rbx,QWORD PTR [rsp+0x28]
  401454:	xor    rbx,QWORD PTR fs:0x28
  40145d:	jne    401491 <__sprintf_chk@plt+0x2b1>
  40145f:	add    rsp,0x30
  401463:	pop    rbx
  401464:	ret    
  401465:	nop    DWORD PTR [rax]
  401468:	mov    rax,QWORD PTR [rsp]
  40146c:	add    QWORD PTR [rbx],rax
  40146f:	mov    rax,QWORD PTR [rsp+0x8]
  401474:	add    QWORD PTR [rbx+0x8],rax
  401478:	mov    rax,QWORD PTR [rsp+0x10]
  40147d:	add    QWORD PTR [rbx+0x10],rax
  401481:	mov    rax,QWORD PTR [rsp+0x18]
  401486:	add    QWORD PTR [rbx+0x18],rax
  40148a:	mov    eax,0x1
  40148f:	jmp    40144f <__sprintf_chk@plt+0x26f>
  401491:	call   4010a0 <__stack_chk_fail@plt>
  401496:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4014a0:	push   rbp
  4014a1:	push   rbx
  4014a2:	mov    rbp,rdx
  4014a5:	mov    rdx,rdi
  4014a8:	lea    rdi,[rip+0x5c91]        # 407140 <error@@Base+0x4220>
  4014af:	mov    rbx,rsi
  4014b2:	sub    rsp,0x8
  4014b6:	mov    esi,0x63
  4014bb:	call   4010e0 <fgets@plt>
  4014c0:	xor    edx,edx
  4014c2:	test   rax,rax
  4014c5:	je     4014e8 <__sprintf_chk@plt+0x308>
  4014c7:	lea    rsi,[rip+0x2b90]        # 40405e <error@@Base+0x113e>
  4014ce:	lea    rdi,[rip+0x5c6b]        # 407140 <error@@Base+0x4220>
  4014d5:	mov    rdx,rbx
  4014d8:	xor    eax,eax
  4014da:	mov    rcx,rbp
  4014dd:	call   401150 <__isoc99_sscanf@plt>
  4014e2:	cmp    eax,0x2
  4014e5:	sete   dl
  4014e8:	add    rsp,0x8
  4014ec:	mov    eax,edx
  4014ee:	pop    rbx
  4014ef:	pop    rbp
  4014f0:	ret    
  4014f1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4014fc:	nop    DWORD PTR [rax+0x0]
  401500:	test   rdx,rdx
  401503:	je     401540 <__sprintf_chk@plt+0x360>
  401505:	vxorpd xmm0,xmm0,xmm0
  401509:	mov    eax,0x1
  40150e:	vxorpd xmm1,xmm1,xmm1
  401512:	vcvtsi2sd xmm0,xmm0,rsi
  401517:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x2d19]        # 404238 <error@@Base+0x1318>
  40151f:	mov    esi,0x1
  401524:	vcvtsi2sd xmm1,xmm1,rdx
  401529:	lea    rdx,[rip+0x2b3f]        # 40406f <error@@Base+0x114f>
  401530:	vdivsd xmm0,xmm0,xmm1
  401534:	jmp    4011a0 <__fprintf_chk@plt>
  401539:	nop    DWORD PTR [rax+0x0]
  401540:	lea    rdx,[rip+0x2b1f]        # 404066 <error@@Base+0x1146>
  401547:	mov    esi,0x1
  40154c:	xor    eax,eax
  40154e:	jmp    4011a0 <__fprintf_chk@plt>
  401553:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40155e:	xchg   ax,ax
  401560:	mov    rdx,QWORD PTR [rdi+0x18]
  401564:	mov    rax,QWORD PTR [rsi+0x18]
  401568:	cmp    rdx,rax
  40156b:	je     401570 <__sprintf_chk@plt+0x390>
  40156d:	sub    eax,edx
  40156f:	ret    
  401570:	mov    rdx,QWORD PTR [rdi+0x20]
  401574:	mov    rax,QWORD PTR [rsi+0x20]
  401578:	cmp    rdx,rax
  40157b:	jne    40156d <__sprintf_chk@plt+0x38d>
  40157d:	mov    rsi,QWORD PTR [rsi+0x10]
  401581:	mov    rdi,QWORD PTR [rdi+0x10]
  401585:	xor    eax,eax
  401587:	jmp    402d70 <__sprintf_chk@plt+0x1b90>
  40158c:	nop    DWORD PTR [rax+0x0]
  401590:	push   r13
  401592:	push   r12
  401594:	mov    r13d,ecx
  401597:	push   rbp
  401598:	push   rbx
  401599:	mov    r12,rdx
  40159c:	lea    rdx,[rip+0x2ad2]        # 404075 <error@@Base+0x1155>
  4015a3:	mov    rbx,rsi
  4015a6:	mov    rbp,rdi
  4015a9:	sub    rsp,0x28
  4015ad:	mov    r8,QWORD PTR [rsi+0x8]
  4015b1:	mov    rcx,QWORD PTR [rsi]
  4015b4:	mov    rax,QWORD PTR fs:0x28
  4015bd:	mov    QWORD PTR [rsp+0x18],rax
  4015c2:	xor    eax,eax
  4015c4:	mov    esi,0x1
  4015c9:	call   4011a0 <__fprintf_chk@plt>
  4015ce:	mov    rdx,QWORD PTR [rbx]
  4015d1:	xor    eax,eax
  4015d3:	mov    rdi,rbp
  4015d6:	mov    rsi,rdx
  4015d9:	sub    rsi,QWORD PTR [rbx+0x8]
  4015dd:	call   401500 <__sprintf_chk@plt+0x320>
  4015e2:	test   r12,r12
  4015e5:	je     401620 <__sprintf_chk@plt+0x440>
  4015e7:	lea    rdx,[rip+0x2b2a]        # 404118 <error@@Base+0x11f8>
  4015ee:	mov    rcx,r12
  4015f1:	mov    esi,0x1
  4015f6:	mov    rdi,rbp
  4015f9:	xor    eax,eax
  4015fb:	call   4011a0 <__fprintf_chk@plt>
  401600:	mov    rax,QWORD PTR [rsp+0x18]
  401605:	xor    rax,QWORD PTR fs:0x28
  40160e:	jne    401654 <__sprintf_chk@plt+0x474>
  401610:	add    rsp,0x28
  401614:	pop    rbx
  401615:	pop    rbp
  401616:	pop    r12
  401618:	pop    r13
  40161a:	ret    
  40161b:	nop    DWORD PTR [rax+rax*1+0x0]
  401620:	lea    rbx,[rsp+0xf]
  401625:	mov    esi,r13d
  401628:	xor    edi,edi
  40162a:	xor    eax,eax
  40162c:	mov    ecx,0x1
  401631:	mov    rdx,rbx
  401634:	call   402980 <__sprintf_chk@plt+0x17a0>
  401639:	lea    rdx,[rip+0x2a40]        # 404080 <error@@Base+0x1160>
  401640:	mov    rcx,rbx
  401643:	mov    esi,0x1
  401648:	mov    rdi,rbp
  40164b:	xor    eax,eax
  40164d:	call   4011a0 <__fprintf_chk@plt>
  401652:	jmp    401600 <__sprintf_chk@plt+0x420>
  401654:	call   4010a0 <__stack_chk_fail@plt>
  401659:	nop    DWORD PTR [rax+0x0]
  401660:	push   r13
  401662:	push   r12
  401664:	xor    eax,eax
  401666:	push   rbp
  401667:	push   rbx
  401668:	mov    ebp,esi
  40166a:	mov    rbx,rdi
  40166d:	mov    edi,ebp
  40166f:	mov    r13,rdx
  401672:	sub    rsp,0x8
  401676:	mov    r12,rcx
  401679:	shl    rbp,0x4
  40167d:	call   401fa0 <__sprintf_chk@plt+0xdc0>
  401682:	movzx  eax,al
  401685:	shl    rax,0x4
  401689:	add    rax,rbx
  40168c:	add    QWORD PTR [rax+0x88],r13
  401693:	add    QWORD PTR [rax+0x90],r12
  40169a:	add    QWORD PTR [rbx+0x1088],r13
  4016a1:	add    QWORD PTR [rbx+0x1090],r12
  4016a8:	add    rbx,rbp
  4016ab:	add    QWORD PTR [rbx+0x4f88],r13
  4016b2:	add    QWORD PTR [rbx+0x4f90],r12
  4016b9:	add    rsp,0x8
  4016bd:	pop    rbx
  4016be:	pop    rbp
  4016bf:	pop    r12
  4016c1:	pop    r13
  4016c3:	ret    
  4016c4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4016cf:	nop
  4016d0:	push   r14
  4016d2:	push   r13
  4016d4:	xor    eax,eax
  4016d6:	push   r12
  4016d8:	push   rbp
  4016d9:	mov    r13,rdx
  4016dc:	push   rbx
  4016dd:	lea    rbx,[rdi+0x1098]
  4016e4:	mov    rbp,rsi
  4016e7:	mov    r12,rcx
  4016ea:	mov    rdi,rbx
  4016ed:	call   402270 <__sprintf_chk@plt+0x1090>
  4016f2:	test   rax,rax
  4016f5:	je     401710 <__sprintf_chk@plt+0x530>
  4016f7:	add    QWORD PTR [rax+0x18],r13
  4016fb:	add    QWORD PTR [rax+0x20],r12
  4016ff:	pop    rbx
  401700:	pop    rbp
  401701:	pop    r12
  401703:	pop    r13
  401705:	pop    r14
  401707:	ret    
  401708:	nop    DWORD PTR [rax+rax*1+0x0]
  401710:	mov    esi,0x28
  401715:	mov    edi,0x1
  40171a:	xor    eax,eax
  40171c:	call   402f60 <error@@Base+0x40>
  401721:	mov    rdi,rbp
  401724:	mov    r14,rax
  401727:	call   4011c0 <strdup@plt>
  40172c:	mov    QWORD PTR [r14+0x18],r13
  401730:	mov    QWORD PTR [r14+0x10],rax
  401734:	mov    rsi,r14
  401737:	mov    QWORD PTR [r14+0x20],r12
  40173b:	mov    rdi,rbx
  40173e:	xor    eax,eax
  401740:	pop    rbx
  401741:	pop    rbp
  401742:	pop    r12
  401744:	pop    r13
  401746:	pop    r14
  401748:	jmp    402310 <__sprintf_chk@plt+0x1130>
  40174d:	nop    DWORD PTR [rax]
  401750:	push   r14
  401752:	push   r13
  401754:	mov    r14,rsi
  401757:	push   r12
  401759:	push   rbp
  40175a:	lea    rsi,[rip+0x30f7]        # 404858 <error@@Base+0x1938>
  401761:	push   rbx
  401762:	mov    rbp,rdi
  401765:	mov    rdi,r14
  401768:	sub    rsp,0x30
  40176c:	mov    rax,QWORD PTR fs:0x28
  401775:	mov    QWORD PTR [rsp+0x28],rax
  40177a:	xor    eax,eax
  40177c:	call   403000 <error@@Base+0xe0>
  401781:	lea    rdi,[rip+0x59b8]        # 407140 <error@@Base+0x4220>
  401788:	mov    rdx,rax
  40178b:	mov    esi,0x63
  401790:	mov    rbx,rax
  401793:	call   4010e0 <fgets@plt>
  401798:	test   rax,rax
  40179b:	je     401ae2 <__sprintf_chk@plt+0x902>
  4017a1:	lea    r12,[rip+0x5998]        # 407140 <error@@Base+0x4220>
  4017a8:	lea    rdi,[rip+0x29b9]        # 404168 <error@@Base+0x1248>
  4017af:	mov    ecx,0x28
  4017b4:	mov    rsi,r12
  4017b7:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4017b9:	jne    401ae2 <__sprintf_chk@plt+0x902>
  4017bf:	mov    rdx,rbx
  4017c2:	mov    esi,0x63
  4017c7:	mov    rdi,r12
  4017ca:	call   4010e0 <fgets@plt>
  4017cf:	test   rax,rax
  4017d2:	je     401ae2 <__sprintf_chk@plt+0x902>
  4017d8:	lea    rdi,[rip+0x29b9]        # 404198 <error@@Base+0x1278>
  4017df:	mov    ecx,0x2b
  4017e4:	mov    rsi,r12
  4017e7:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4017e9:	jne    401ae2 <__sprintf_chk@plt+0x902>
  4017ef:	xor    eax,eax
  4017f1:	mov    rsi,rsp
  4017f4:	mov    rdx,rbp
  4017f7:	mov    rdi,rbx
  4017fa:	call   401380 <__sprintf_chk@plt+0x1a0>
  4017ff:	test   al,al
  401801:	je     401ae2 <__sprintf_chk@plt+0x902>
  401807:	lea    rdx,[rbp+0x8]
  40180b:	lea    rsi,[rsp+0x8]
  401810:	xor    eax,eax
  401812:	mov    rdi,rbx
  401815:	call   401380 <__sprintf_chk@plt+0x1a0>
  40181a:	test   al,al
  40181c:	je     401ae2 <__sprintf_chk@plt+0x902>
  401822:	mov    rdx,rbx
  401825:	mov    esi,0x63
  40182a:	mov    rdi,r12
  40182d:	call   4010e0 <fgets@plt>
  401832:	test   rax,rax
  401835:	je     401ae2 <__sprintf_chk@plt+0x902>
  40183b:	mov    rdx,rbx
  40183e:	mov    esi,0x63
  401843:	mov    rdi,r12
  401846:	call   4010e0 <fgets@plt>
  40184b:	test   rax,rax
  40184e:	je     401ae2 <__sprintf_chk@plt+0x902>
  401854:	lea    r13,[rsp+0x10]
  401859:	lea    rdx,[rbp+0x10]
  40185d:	xor    eax,eax
  40185f:	mov    rdi,rbx
  401862:	mov    rsi,r13
  401865:	call   401380 <__sprintf_chk@plt+0x1a0>
  40186a:	test   al,al
  40186c:	je     401ae2 <__sprintf_chk@plt+0x902>
  401872:	lea    rdx,[rbp+0x18]
  401876:	xor    eax,eax
  401878:	mov    rsi,r13
  40187b:	mov    rdi,rbx
  40187e:	call   401380 <__sprintf_chk@plt+0x1a0>
  401883:	test   al,al
  401885:	je     401ae2 <__sprintf_chk@plt+0x902>
  40188b:	lea    rdx,[rbp+0x20]
  40188f:	xor    eax,eax
  401891:	mov    rsi,r13
  401894:	mov    rdi,rbx
  401897:	call   401380 <__sprintf_chk@plt+0x1a0>
  40189c:	test   al,al
  40189e:	je     401ae2 <__sprintf_chk@plt+0x902>
  4018a4:	mov    rdx,rbx
  4018a7:	mov    esi,0x63
  4018ac:	mov    rdi,r12
  4018af:	call   4010e0 <fgets@plt>
  4018b4:	test   rax,rax
  4018b7:	je     401ae2 <__sprintf_chk@plt+0x902>
  4018bd:	mov    rdx,rbx
  4018c0:	mov    esi,0x63
  4018c5:	mov    rdi,r12
  4018c8:	call   4010e0 <fgets@plt>
  4018cd:	test   rax,rax
  4018d0:	je     401ae2 <__sprintf_chk@plt+0x902>
  4018d6:	mov    rdx,rbx
  4018d9:	mov    esi,0x63
  4018de:	mov    rdi,r12
  4018e1:	call   4010e0 <fgets@plt>
  4018e6:	test   rax,rax
  4018e9:	je     401ae2 <__sprintf_chk@plt+0x902>
  4018ef:	mov    rdx,rbx
  4018f2:	mov    esi,0x63
  4018f7:	mov    rdi,r12
  4018fa:	call   4010e0 <fgets@plt>
  4018ff:	test   rax,rax
  401902:	je     401ae2 <__sprintf_chk@plt+0x902>
  401908:	lea    rsi,[rbp+0x28]
  40190c:	xor    eax,eax
  40190e:	mov    rdi,rbx
  401911:	call   4013f0 <__sprintf_chk@plt+0x210>
  401916:	test   al,al
  401918:	je     401ae2 <__sprintf_chk@plt+0x902>
  40191e:	lea    rsi,[rbp+0x48]
  401922:	xor    eax,eax
  401924:	mov    rdi,rbx
  401927:	call   4013f0 <__sprintf_chk@plt+0x210>
  40192c:	test   al,al
  40192e:	je     401ae2 <__sprintf_chk@plt+0x902>
  401934:	lea    rsi,[rbp+0x68]
  401938:	xor    eax,eax
  40193a:	mov    rdi,rbx
  40193d:	call   4013f0 <__sprintf_chk@plt+0x210>
  401942:	test   al,al
  401944:	je     401ae2 <__sprintf_chk@plt+0x902>
  40194a:	mov    rdx,rbx
  40194d:	mov    esi,0x63
  401952:	mov    rdi,r12
  401955:	call   4010e0 <fgets@plt>
  40195a:	test   rax,rax
  40195d:	je     401ae2 <__sprintf_chk@plt+0x902>
  401963:	mov    r14,r12
  401966:	jmp    401977 <__sprintf_chk@plt+0x797>
  401968:	nop    DWORD PTR [rax+rax*1+0x0]
  401970:	cmp    BYTE PTR [r12],0xa
  401975:	je     40198c <__sprintf_chk@plt+0x7ac>
  401977:	mov    rdx,rbx
  40197a:	mov    esi,0x63
  40197f:	mov    rdi,r14
  401982:	call   4010e0 <fgets@plt>
  401987:	test   rax,rax
  40198a:	jne    401970 <__sprintf_chk@plt+0x790>
  40198c:	cmp    QWORD PTR [rsp+0x8],0x0
  401992:	jle    4019c0 <__sprintf_chk@plt+0x7e0>
  401994:	lea    rdi,[rip+0x57a5]        # 407140 <error@@Base+0x4220>
  40199b:	mov    rdx,rbx
  40199e:	mov    esi,0x63
  4019a3:	lea    r12,[rsp+0x18]
  4019a8:	lea    r14,[rip+0x57a5]        # 407154 <error@@Base+0x4234>
  4019af:	call   4010e0 <fgets@plt>
  4019b4:	test   rax,rax
  4019b7:	jne    401a77 <__sprintf_chk@plt+0x897>
  4019bd:	nop    DWORD PTR [rax]
  4019c0:	cmp    QWORD PTR [rsp],0x0
  4019c5:	jle    401aa0 <__sprintf_chk@plt+0x8c0>
  4019cb:	lea    rdi,[rip+0x576e]        # 407140 <error@@Base+0x4220>
  4019d2:	mov    rdx,rbx
  4019d5:	mov    esi,0x63
  4019da:	lea    r12,[rsp+0x18]
  4019df:	lea    r14,[rsp+0x20]
  4019e4:	call   4010e0 <fgets@plt>
  4019e9:	test   rax,rax
  4019ec:	jne    401a1a <__sprintf_chk@plt+0x83a>
  4019ee:	jmp    401aa0 <__sprintf_chk@plt+0x8c0>
  4019f3:	nop    DWORD PTR [rax+rax*1+0x0]
  4019f8:	mov    QWORD PTR [rsp+0x20],0xa
  401a01:	mov    esi,0xa
  401a06:	mov    rcx,QWORD PTR [rsp+0x18]
  401a0b:	mov    rdx,QWORD PTR [rsp+0x10]
  401a10:	mov    rdi,rbp
  401a13:	xor    eax,eax
  401a15:	call   401660 <__sprintf_chk@plt+0x480>
  401a1a:	xor    eax,eax
  401a1c:	mov    rdx,r12
  401a1f:	mov    rsi,r13
  401a22:	mov    rdi,rbx
  401a25:	call   4014a0 <__sprintf_chk@plt+0x2c0>
  401a2a:	test   al,al
  401a2c:	je     401aa0 <__sprintf_chk@plt+0x8c0>
  401a2e:	movzx  eax,BYTE PTR [rip+0x572a]        # 40715f <error@@Base+0x423f>
  401a35:	cmp    al,0x7d
  401a37:	je     401ad0 <__sprintf_chk@plt+0x8f0>
  401a3d:	cmp    al,0x5c
  401a3f:	je     4019f8 <__sprintf_chk@plt+0x818>
  401a41:	lea    rsi,[rip+0x2647]        # 40408f <error@@Base+0x116f>
  401a48:	lea    rdi,[rip+0x5710]        # 40715f <error@@Base+0x423f>
  401a4f:	mov    rdx,r14
  401a52:	xor    eax,eax
  401a54:	call   401150 <__isoc99_sscanf@plt>
  401a59:	mov    rsi,QWORD PTR [rsp+0x20]
  401a5e:	jmp    401a06 <__sprintf_chk@plt+0x826>
  401a60:	mov    rcx,QWORD PTR [rsp+0x18]
  401a65:	mov    rdx,QWORD PTR [rsp+0x10]
  401a6a:	mov    rsi,r14
  401a6d:	mov    rdi,rbp
  401a70:	xor    eax,eax
  401a72:	call   4016d0 <__sprintf_chk@plt+0x4f0>
  401a77:	xor    eax,eax
  401a79:	mov    rdx,r12
  401a7c:	mov    rsi,r13
  401a7f:	mov    rdi,rbx
  401a82:	call   4014a0 <__sprintf_chk@plt+0x2c0>
  401a87:	test   al,al
  401a89:	jne    401a60 <__sprintf_chk@plt+0x880>
  401a8b:	cmp    QWORD PTR [rsp],0x0
  401a90:	jg     4019cb <__sprintf_chk@plt+0x7eb>
  401a96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401aa0:	xor    eax,eax
  401aa2:	mov    rdi,rbx
  401aa5:	call   402dc0 <__sprintf_chk@plt+0x1be0>
  401aaa:	mov    rax,QWORD PTR [rsp+0x28]
  401aaf:	xor    rax,QWORD PTR fs:0x28
  401ab8:	jne    401b01 <__sprintf_chk@plt+0x921>
  401aba:	add    rsp,0x30
  401abe:	pop    rbx
  401abf:	pop    rbp
  401ac0:	pop    r12
  401ac2:	pop    r13
  401ac4:	pop    r14
  401ac6:	ret    
  401ac7:	nop    WORD PTR [rax+rax*1+0x0]
  401ad0:	movsx  rsi,BYTE PTR [rip+0x5686]        # 40715e <error@@Base+0x423e>
  401ad8:	mov    QWORD PTR [rsp+0x20],rsi
  401add:	jmp    401a06 <__sprintf_chk@plt+0x826>
  401ae2:	lea    rax,[rip+0x25a0]        # 404089 <error@@Base+0x1169>
  401ae9:	test   r14,r14
  401aec:	lea    rdi,[rip+0x25a0]        # 404093 <error@@Base+0x1173>
  401af3:	cmove  r14,rax
  401af7:	xor    eax,eax
  401af9:	mov    rsi,r14
  401afc:	call   402fb0 <error@@Base+0x90>
  401b01:	call   4010a0 <__stack_chk_fail@plt>
  401b06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401b10:	push   r13
  401b12:	push   r12
  401b14:	mov    r12,rdi
  401b17:	push   rbp
  401b18:	push   rbx
  401b19:	mov    rdi,rsi
  401b1c:	lea    rsi,[rip+0x290d]        # 404430 <error@@Base+0x1510>
  401b23:	xor    eax,eax
  401b25:	lea    rbp,[r12+0x88]
  401b2d:	sub    rsp,0x8
  401b31:	call   403000 <error@@Base+0xe0>
  401b36:	lea    r8,[rip+0x265b]        # 404198 <error@@Base+0x1278>
  401b3d:	lea    rcx,[rip+0x2624]        # 404168 <error@@Base+0x1248>
  401b44:	lea    rdx,[rip+0x255a]        # 4040a5 <error@@Base+0x1185>
  401b4b:	mov    r13,rax
  401b4e:	mov    rdi,rax
  401b51:	mov    esi,0x1
  401b56:	xor    eax,eax
  401b58:	call   4011a0 <__fprintf_chk@plt>
  401b5d:	mov    rcx,QWORD PTR [r12]
  401b61:	lea    r8,[rip+0x27ba]        # 404322 <error@@Base+0x1402>
  401b68:	lea    rdx,[rip+0x25a5]        # 404114 <error@@Base+0x11f4>
  401b6f:	mov    esi,0x1
  401b74:	mov    rdi,r13
  401b77:	xor    eax,eax
  401b79:	call   4011a0 <__fprintf_chk@plt>
  401b7e:	mov    rcx,QWORD PTR [r12+0x8]
  401b83:	lea    r8,[rip+0x2520]        # 4040aa <error@@Base+0x118a>
  401b8a:	lea    rdx,[rip+0x2583]        # 404114 <error@@Base+0x11f4>
  401b91:	mov    esi,0x1
  401b96:	mov    rdi,r13
  401b99:	xor    eax,eax
  401b9b:	call   4011a0 <__fprintf_chk@plt>
  401ba0:	mov    rdx,QWORD PTR [r12]
  401ba4:	xor    eax,eax
  401ba6:	mov    rdi,r13
  401ba9:	mov    rsi,rdx
  401bac:	sub    rsi,QWORD PTR [r12+0x8]
  401bb1:	call   401500 <__sprintf_chk@plt+0x320>
  401bb6:	lea    rdx,[rip+0x24f4]        # 4040b1 <error@@Base+0x1191>
  401bbd:	mov    esi,0x1
  401bc2:	mov    rdi,r13
  401bc5:	xor    eax,eax
  401bc7:	call   4011a0 <__fprintf_chk@plt>
  401bcc:	mov    rcx,QWORD PTR [r12+0x10]
  401bd1:	lea    r8,[rip+0x24e8]        # 4040c0 <error@@Base+0x11a0>
  401bd8:	lea    rdx,[rip+0x2535]        # 404114 <error@@Base+0x11f4>
  401bdf:	mov    esi,0x1
  401be4:	mov    rdi,r13
  401be7:	xor    eax,eax
  401be9:	call   4011a0 <__fprintf_chk@plt>
  401bee:	mov    rcx,QWORD PTR [r12+0x18]
  401bf3:	lea    r8,[rip+0x24d8]        # 4040d2 <error@@Base+0x11b2>
  401bfa:	lea    rdx,[rip+0x2513]        # 404114 <error@@Base+0x11f4>
  401c01:	mov    esi,0x1
  401c06:	mov    rdi,r13
  401c09:	xor    eax,eax
  401c0b:	call   4011a0 <__fprintf_chk@plt>
  401c10:	mov    rcx,QWORD PTR [r12+0x20]
  401c15:	lea    r8,[rip+0x24c6]        # 4040e2 <error@@Base+0x11c2>
  401c1c:	lea    rdx,[rip+0x24f1]        # 404114 <error@@Base+0x11f4>
  401c23:	mov    esi,0x1
  401c28:	mov    rdi,r13
  401c2b:	xor    eax,eax
  401c2d:	call   4011a0 <__fprintf_chk@plt>
  401c32:	mov    rsi,QWORD PTR [r12+0x18]
  401c37:	add    rsi,QWORD PTR [r12+0x10]
  401c3c:	xor    eax,eax
  401c3e:	mov    rdx,QWORD PTR [r12]
  401c42:	mov    rdi,r13
  401c45:	call   401500 <__sprintf_chk@plt+0x320>
  401c4a:	lea    rdx,[rip+0x249d]        # 4040ee <error@@Base+0x11ce>
  401c51:	mov    esi,0x1
  401c56:	mov    rdi,r13
  401c59:	xor    eax,eax
  401c5b:	call   4011a0 <__fprintf_chk@plt>
  401c60:	mov    rdx,QWORD PTR [r12]
  401c64:	xor    eax,eax
  401c66:	mov    rdi,r13
  401c69:	mov    rsi,rdx
  401c6c:	sub    rsi,QWORD PTR [r12+0x60]
  401c71:	call   401500 <__sprintf_chk@plt+0x320>
  401c76:	lea    rdx,[rip+0x254b]        # 4041c8 <error@@Base+0x12a8>
  401c7d:	mov    esi,0x1
  401c82:	mov    rdi,r13
  401c85:	xor    eax,eax
  401c87:	call   4011a0 <__fprintf_chk@plt>
  401c8c:	lea    rdx,[rip+0x2555]        # 4041e8 <error@@Base+0x12c8>
  401c93:	mov    esi,0x1
  401c98:	mov    rdi,r13
  401c9b:	xor    eax,eax
  401c9d:	call   4011a0 <__fprintf_chk@plt>
  401ca2:	lea    rax,[rip+0x2476]        # 40411f <error@@Base+0x11ff>
  401ca9:	mov    rcx,QWORD PTR [r12+0x28]
  401cae:	lea    rdx,[rip+0x2450]        # 404105 <error@@Base+0x11e5>
  401cb5:	mov    esi,0x1
  401cba:	mov    rdi,r13
  401cbd:	push   rax
  401cbe:	push   QWORD PTR [r12+0x40]
  401cc3:	xor    eax,eax
  401cc5:	mov    r9,QWORD PTR [r12+0x38]
  401cca:	mov    r8,QWORD PTR [r12+0x30]
  401ccf:	xor    ebx,ebx
  401cd1:	call   4011a0 <__fprintf_chk@plt>
  401cd6:	lea    rax,[rip+0x2449]        # 404126 <error@@Base+0x1206>
  401cdd:	mov    rcx,QWORD PTR [r12+0x48]
  401ce2:	lea    rdx,[rip+0x241c]        # 404105 <error@@Base+0x11e5>
  401ce9:	mov    esi,0x1
  401cee:	mov    rdi,r13
  401cf1:	push   rax
  401cf2:	push   QWORD PTR [r12+0x60]
  401cf7:	xor    eax,eax
  401cf9:	mov    r9,QWORD PTR [r12+0x58]
  401cfe:	mov    r8,QWORD PTR [r12+0x50]
  401d03:	call   4011a0 <__fprintf_chk@plt>
  401d08:	lea    rax,[rip+0x2420]        # 40412f <error@@Base+0x120f>
  401d0f:	add    rsp,0x20
  401d13:	mov    rcx,QWORD PTR [r12+0x68]
  401d18:	lea    rdx,[rip+0x23e6]        # 404105 <error@@Base+0x11e5>
  401d1f:	mov    esi,0x1
  401d24:	mov    rdi,r13
  401d27:	push   rax
  401d28:	push   QWORD PTR [r12+0x80]
  401d30:	xor    eax,eax
  401d32:	mov    r9,QWORD PTR [r12+0x78]
  401d37:	mov    r8,QWORD PTR [r12+0x70]
  401d3c:	call   4011a0 <__fprintf_chk@plt>
  401d41:	lea    rdx,[rip+0x23ed]        # 404135 <error@@Base+0x1215>
  401d48:	mov    esi,0x1
  401d4d:	mov    rdi,r13
  401d50:	xor    eax,eax
  401d52:	call   4011a0 <__fprintf_chk@plt>
  401d57:	pop    rax
  401d58:	pop    rdx
  401d59:	nop    DWORD PTR [rax+0x0]
  401d60:	cmp    QWORD PTR [rbp+0x0],0x0
  401d65:	jle    401d83 <__sprintf_chk@plt+0xba3>
  401d67:	mov    rdi,rbx
  401d6a:	xor    eax,eax
  401d6c:	call   401fd0 <__sprintf_chk@plt+0xdf0>
  401d71:	xor    ecx,ecx
  401d73:	mov    rdx,rax
  401d76:	mov    rsi,rbp
  401d79:	mov    rdi,r13
  401d7c:	xor    eax,eax
  401d7e:	call   401590 <__sprintf_chk@plt+0x3b0>
  401d83:	add    rbx,0x1
  401d87:	add    rbp,0x10
  401d8b:	cmp    rbx,0x100
  401d92:	jne    401d60 <__sprintf_chk@plt+0xb80>
  401d94:	lea    rsi,[r12+0x1088]
  401d9c:	lea    rdx,[rip+0x238c]        # 40412f <error@@Base+0x120f>
  401da3:	xor    ecx,ecx
  401da5:	xor    eax,eax
  401da7:	mov    rdi,r13
  401daa:	call   401590 <__sprintf_chk@plt+0x3b0>
  401daf:	cmp    QWORD PTR [r12+0x8],0x0
  401db5:	jle    401e50 <__sprintf_chk@plt+0xc70>
  401dbb:	lea    rdi,[r12+0x1098]
  401dc3:	xor    eax,eax
  401dc5:	call   402430 <__sprintf_chk@plt+0x1250>
  401dca:	mov    rsi,QWORD PTR [r12+0x4f78]
  401dd2:	mov    rdi,QWORD PTR [r12+0x4f80]
  401dda:	lea    rdx,[rip+0xfffffffffffff77f]        # 401560 <__sprintf_chk@plt+0x380>
  401de1:	xor    eax,eax
  401de3:	call   4021f0 <__sprintf_chk@plt+0x1010>
  401de8:	lea    rdx,[rip+0x2421]        # 404210 <error@@Base+0x12f0>
  401def:	xor    eax,eax
  401df1:	mov    esi,0x1
  401df6:	mov    rdi,r13
  401df9:	call   4011a0 <__fprintf_chk@plt>
  401dfe:	cmp    QWORD PTR [r12+0x4f80],0x0
  401e07:	jle    401e50 <__sprintf_chk@plt+0xc70>
  401e09:	lea    rbp,[rip+0x2343]        # 404153 <error@@Base+0x1233>
  401e10:	xor    ebx,ebx
  401e12:	nop    WORD PTR [rax+rax*1+0x0]
  401e18:	mov    rax,QWORD PTR [r12+0x4f78]
  401e20:	mov    rdx,rbp
  401e23:	mov    esi,0x1
  401e28:	mov    rdi,r13
  401e2b:	mov    rax,QWORD PTR [rax+rbx*8]
  401e2f:	add    rbx,0x1
  401e33:	mov    rcx,QWORD PTR [rax+0x18]
  401e37:	mov    r9,QWORD PTR [rax+0x10]
  401e3b:	mov    r8,QWORD PTR [rax+0x20]
  401e3f:	xor    eax,eax
  401e41:	call   4011a0 <__fprintf_chk@plt>
  401e46:	cmp    QWORD PTR [r12+0x4f80],rbx
  401e4e:	jg     401e18 <__sprintf_chk@plt+0xc38>
  401e50:	cmp    QWORD PTR [r12],0x0
  401e55:	jle    401eaa <__sprintf_chk@plt+0xcca>
  401e57:	lea    rdx,[rip+0x22d7]        # 404135 <error@@Base+0x1215>
  401e5e:	mov    esi,0x1
  401e63:	mov    rdi,r13
  401e66:	xor    eax,eax
  401e68:	add    r12,0x4f88
  401e6f:	xor    ebp,ebp
  401e71:	call   4011a0 <__fprintf_chk@plt>
  401e76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401e80:	cmp    QWORD PTR [r12],0x0
  401e85:	jle    401e99 <__sprintf_chk@plt+0xcb9>
  401e87:	mov    rcx,rbp
  401e8a:	xor    edx,edx
  401e8c:	mov    rsi,r12
  401e8f:	mov    rdi,r13
  401e92:	xor    eax,eax
  401e94:	call   401590 <__sprintf_chk@plt+0x3b0>
  401e99:	add    rbp,0x1
  401e9d:	add    r12,0x10
  401ea1:	cmp    rbp,0x10ffff
  401ea8:	jne    401e80 <__sprintf_chk@plt+0xca0>
  401eaa:	add    rsp,0x8
  401eae:	mov    rdi,r13
  401eb1:	xor    eax,eax
  401eb3:	pop    rbx
  401eb4:	pop    rbp
  401eb5:	pop    r12
  401eb7:	pop    r13
  401eb9:	jmp    402dc0 <__sprintf_chk@plt+0x1be0>
  401ebe:	xchg   ax,ax
  401ec0:	push   r15
  401ec2:	push   r14
  401ec4:	push   r13
  401ec6:	push   r12
  401ec8:	lea    r12,[rip+0x1152f1]        # 5171c0 <error@@Base+0x1142a0>
  401ecf:	push   rbp
  401ed0:	push   rbx
  401ed1:	lea    rbx,[rip+0x4968]        # 406840 <error@@Base+0x3920>
  401ed8:	sub    rsp,0x8
  401edc:	nop    DWORD PTR [rax+0x0]
  401ee0:	movsx  r13,WORD PTR [rip+0x115ad8]        # 5179c0 <error@@Base+0x114aa0>
  401ee8:	test   r13,r13
  401eeb:	mov    r15,r13
  401eee:	jle    401f88 <__sprintf_chk@plt+0xda8>
  401ef4:	mov    r14,QWORD PTR [rbx+0x8]
  401ef8:	xor    ebp,ebp
  401efa:	jmp    401f09 <__sprintf_chk@plt+0xd29>
  401efc:	nop    DWORD PTR [rax+0x0]
  401f00:	add    rbp,0x1
  401f04:	cmp    rbp,r13
  401f07:	je     401f6a <__sprintf_chk@plt+0xd8a>
  401f09:	mov    rsi,QWORD PTR [r12+rbp*8]
  401f0d:	mov    rdi,r14
  401f10:	call   401110 <strcmp@plt>
  401f15:	test   eax,eax
  401f17:	jne    401f00 <__sprintf_chk@plt+0xd20>
  401f19:	cmp    r13,rbp
  401f1c:	je     401f6a <__sprintf_chk@plt+0xd8a>
  401f1e:	mov    eax,DWORD PTR [rbx]
  401f20:	mov    edx,DWORD PTR [rbx+0x4]
  401f23:	cmp    rax,rdx
  401f26:	jg     401f4b <__sprintf_chk@plt+0xd6b>
  401f28:	lea    rdi,[rip+0x5291]        # 4071c0 <error@@Base+0x42a0>
  401f2f:	mov    ecx,ebp
  401f31:	lea    rdx,[rdi+rdx*1+0x1]
  401f36:	add    rax,rdi
  401f39:	nop    DWORD PTR [rax+0x0]
  401f40:	mov    BYTE PTR [rax],cl
  401f42:	add    rax,0x1
  401f46:	cmp    rdx,rax
  401f49:	jne    401f40 <__sprintf_chk@plt+0xd60>
  401f4b:	lea    rax,[rip+0x4e9e]        # 406df0 <error@@Base+0x3ed0>
  401f52:	add    rbx,0x10
  401f56:	cmp    rbx,rax
  401f59:	jne    401ee0 <__sprintf_chk@plt+0xd00>
  401f5b:	add    rsp,0x8
  401f5f:	pop    rbx
  401f60:	pop    rbp
  401f61:	pop    r12
  401f63:	pop    r13
  401f65:	pop    r14
  401f67:	pop    r15
  401f69:	ret    
  401f6a:	cmp    r15w,0x100
  401f70:	je     401f8c <__sprintf_chk@plt+0xdac>
  401f72:	mov    rax,QWORD PTR [rbx+0x8]
  401f76:	add    r15d,0x1
  401f7a:	mov    WORD PTR [rip+0x115a3e],r15w        # 5179c0 <error@@Base+0x114aa0>
  401f82:	mov    QWORD PTR [r12+r13*8],rax
  401f86:	jmp    401f1e <__sprintf_chk@plt+0xd3e>
  401f88:	xor    ebp,ebp
  401f8a:	jmp    401f19 <__sprintf_chk@plt+0xd39>
  401f8c:	lea    rdi,[rip+0x22ad]        # 404240 <error@@Base+0x1320>
  401f93:	xor    eax,eax
  401f95:	call   402f20 <error@@Base>
  401f9a:	nop    WORD PTR [rax+rax*1+0x0]
  401fa0:	cmp    WORD PTR [rip+0x115a18],0x0        # 5179c0 <error@@Base+0x114aa0>
  401fa8:	push   rbx
  401fa9:	mov    ebx,edi
  401fab:	jne    401fb4 <__sprintf_chk@plt+0xdd4>
  401fad:	xor    eax,eax
  401faf:	call   401ec0 <__sprintf_chk@plt+0xce0>
  401fb4:	lea    rax,[rip+0x5205]        # 4071c0 <error@@Base+0x42a0>
  401fbb:	movzx  eax,BYTE PTR [rax+rbx*1]
  401fbf:	pop    rbx
  401fc0:	ret    
  401fc1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  401fcc:	nop    DWORD PTR [rax+0x0]
  401fd0:	sub    rsp,0x18
  401fd4:	movsx  eax,WORD PTR [rip+0x1159e5]        # 5179c0 <error@@Base+0x114aa0>
  401fdb:	test   ax,ax
  401fde:	je     402000 <__sprintf_chk@plt+0xe20>
  401fe0:	movzx  edi,dil
  401fe4:	cmp    edi,eax
  401fe6:	jge    402016 <__sprintf_chk@plt+0xe36>
  401fe8:	lea    rax,[rip+0x1151d1]        # 5171c0 <error@@Base+0x1142a0>
  401fef:	mov    rax,QWORD PTR [rax+rdi*8]
  401ff3:	add    rsp,0x18
  401ff7:	ret    
  401ff8:	nop    DWORD PTR [rax+rax*1+0x0]
  402000:	mov    DWORD PTR [rsp+0xc],edi
  402004:	call   401ec0 <__sprintf_chk@plt+0xce0>
  402009:	movsx  eax,WORD PTR [rip+0x1159b0]        # 5179c0 <error@@Base+0x114aa0>
  402010:	mov    edi,DWORD PTR [rsp+0xc]
  402014:	jmp    401fe0 <__sprintf_chk@plt+0xe00>
  402016:	lea    rdi,[rip+0x223e]        # 40425b <error@@Base+0x133b>
  40201d:	xor    eax,eax
  40201f:	call   402f20 <error@@Base>
  402024:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40202e:	xchg   ax,ax
  402030:	push   r15
  402032:	push   r14
  402034:	mov    rax,rsi
  402037:	push   r13
  402039:	push   r12
  40203b:	shl    rax,0x3
  40203f:	push   rbp
  402040:	push   rbx
  402041:	sub    rsp,0x28
  402045:	mov    QWORD PTR [rsp+0x8],rdi
  40204a:	mov    QWORD PTR [rsp+0x10],rsi
  40204f:	mov    QWORD PTR [rsp+0x18],rax
  402054:	mov    rdx,QWORD PTR [rsp+0x8]
  402059:	mov    rcx,QWORD PTR [rsp+0x10]
  40205e:	mov    rax,QWORD PTR [rip+0x11596b]        # 5179d0 <error@@Base+0x114ab0>
  402065:	cmp    rdx,rcx
  402068:	mov    r13,rdx
  40206b:	mov    rbx,rcx
  40206e:	mov    r12,QWORD PTR [rax+rdx*8]
  402072:	jge    4021cf <__sprintf_chk@plt+0xfef>
  402078:	nop    DWORD PTR [rax+rax*1+0x0]
  402080:	lea    rbp,[rbx*8+0x0]
  402088:	jmp    402097 <__sprintf_chk@plt+0xeb7>
  40208a:	nop    WORD PTR [rax+rax*1+0x0]
  402090:	mov    rax,QWORD PTR [rip+0x115939]        # 5179d0 <error@@Base+0x114ab0>
  402097:	mov    rsi,QWORD PTR [rax+rbp*1]
  40209b:	mov    rdi,r12
  40209e:	xor    eax,eax
  4020a0:	call   QWORD PTR [rip+0x115922]        # 5179c8 <error@@Base+0x114aa8>
  4020a6:	test   eax,eax
  4020a8:	jns    402108 <__sprintf_chk@plt+0xf28>
  4020aa:	sub    rbx,0x1
  4020ae:	sub    rbp,0x8
  4020b2:	cmp    rbx,r13
  4020b5:	jg     402090 <__sprintf_chk@plt+0xeb0>
  4020b7:	jne    402100 <__sprintf_chk@plt+0xf20>
  4020b9:	mov    rax,QWORD PTR [rip+0x115910]        # 5179d0 <error@@Base+0x114ab0>
  4020c0:	mov    r15,rbx
  4020c3:	lea    rsi,[rax+r15*8]
  4020c7:	mov    QWORD PTR [rsi],r12
  4020ca:	lea    rsi,[r15-0x1]
  4020ce:	cmp    QWORD PTR [rsp+0x8],rsi
  4020d3:	jl     4021af <__sprintf_chk@plt+0xfcf>
  4020d9:	lea    rax,[rbx+0x1]
  4020dd:	cmp    rax,QWORD PTR [rsp+0x10]
  4020e2:	mov    QWORD PTR [rsp+0x8],rax
  4020e7:	jl     402054 <__sprintf_chk@plt+0xe74>
  4020ed:	add    rsp,0x28
  4020f1:	pop    rbx
  4020f2:	pop    rbp
  4020f3:	pop    r12
  4020f5:	pop    r13
  4020f7:	pop    r14
  4020f9:	pop    r15
  4020fb:	ret    
  4020fc:	nop    DWORD PTR [rax+0x0]
  402100:	lea    rbp,[rbx*8+0x0]
  402108:	mov    rax,QWORD PTR [rip+0x1158c1]        # 5179d0 <error@@Base+0x114ab0>
  40210f:	lea    r15,[r13+0x1]
  402113:	lea    rcx,[r13*8+0x0]
  40211b:	cmp    r15,rbx
  40211e:	lea    rsi,[rax+rbp*1]
  402122:	mov    rdi,QWORD PTR [rsi]
  402125:	mov    QWORD PTR [rax+r13*8],rdi
  402129:	jge    4021c0 <__sprintf_chk@plt+0xfe0>
  40212f:	lea    r14,[rcx+0x8]
  402133:	jmp    40214c <__sprintf_chk@plt+0xf6c>
  402135:	nop    DWORD PTR [rax]
  402138:	add    r15,0x1
  40213c:	add    r14,0x8
  402140:	cmp    r15,rbx
  402143:	je     402190 <__sprintf_chk@plt+0xfb0>
  402145:	mov    rax,QWORD PTR [rip+0x115884]        # 5179d0 <error@@Base+0x114ab0>
  40214c:	mov    rsi,QWORD PTR [rax+r14*1]
  402150:	mov    rdi,r12
  402153:	xor    eax,eax
  402155:	call   QWORD PTR [rip+0x11586d]        # 5179c8 <error@@Base+0x114aa8>
  40215b:	test   eax,eax
  40215d:	jg     402138 <__sprintf_chk@plt+0xf58>
  40215f:	mov    rax,QWORD PTR [rip+0x11586a]        # 5179d0 <error@@Base+0x114ab0>
  402166:	mov    r13,r15
  402169:	lea    rsi,[rax+rbp*1]
  40216d:	mov    rcx,QWORD PTR [rax+r14*1]
  402171:	sub    rbx,0x1
  402175:	cmp    rbx,r15
  402178:	mov    QWORD PTR [rsi],rcx
  40217b:	jg     402080 <__sprintf_chk@plt+0xea0>
  402181:	mov    r15,rbx
  402184:	mov    rbx,r13
  402187:	jmp    4020c3 <__sprintf_chk@plt+0xee3>
  40218c:	nop    DWORD PTR [rax+0x0]
  402190:	mov    rsi,rbp
  402193:	add    rsi,QWORD PTR [rip+0x115836]        # 5179d0 <error@@Base+0x114ab0>
  40219a:	mov    QWORD PTR [rsi],r12
  40219d:	lea    rsi,[r15-0x1]
  4021a1:	cmp    QWORD PTR [rsp+0x8],rsi
  4021a6:	mov    rbx,r15
  4021a9:	jge    4020d9 <__sprintf_chk@plt+0xef9>
  4021af:	mov    rdi,QWORD PTR [rsp+0x8]
  4021b4:	xor    eax,eax
  4021b6:	call   402030 <__sprintf_chk@plt+0xe50>
  4021bb:	jmp    4020d9 <__sprintf_chk@plt+0xef9>
  4021c0:	je     40219a <__sprintf_chk@plt+0xfba>
  4021c2:	lea    r14,[r15*8+0x0]
  4021ca:	mov    r13,r15
  4021cd:	jmp    40216d <__sprintf_chk@plt+0xf8d>
  4021cf:	mov    rdx,QWORD PTR [rsp+0x18]
  4021d4:	mov    r15,rcx
  4021d7:	mov    rbx,r13
  4021da:	lea    rsi,[rax+rdx*1]
  4021de:	jmp    4020c7 <__sprintf_chk@plt+0xee7>
  4021e3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4021ee:	xchg   ax,ax
  4021f0:	cmp    rdi,0x1
  4021f4:	jle    402218 <__sprintf_chk@plt+0x1038>
  4021f6:	mov    QWORD PTR [rip+0x1157d3],rsi        # 5179d0 <error@@Base+0x114ab0>
  4021fd:	lea    rsi,[rdi-0x1]
  402201:	xor    eax,eax
  402203:	xor    edi,edi
  402205:	mov    QWORD PTR [rip+0x1157bc],rdx        # 5179c8 <error@@Base+0x114aa8>
  40220c:	jmp    402030 <__sprintf_chk@plt+0xe50>
  402211:	nop    DWORD PTR [rax+0x0]
  402218:	repz ret 
  40221a:	nop    WORD PTR [rax+rax*1+0x0]
  402220:	push   r12
  402222:	push   rbp
  402223:	lea    rbp,[rdi+0x3ee0]
  40222a:	push   rbx
  40222b:	mov    r12,rdi
  40222e:	mov    rbx,rdi
  402231:	nop    DWORD PTR [rax+0x0]
  402238:	mov    rdi,rbx
  40223b:	xor    eax,eax
  40223d:	add    rbx,0x20
  402241:	call   4032f0 <error@@Base+0x3d0>
  402246:	cmp    rbx,rbp
  402249:	jne    402238 <__sprintf_chk@plt+0x1058>
  40224b:	pop    rbx
  40224c:	mov    QWORD PTR [r12+0x3ee0],0x0
  402258:	mov    QWORD PTR [r12+0x3ee8],0x0
  402264:	pop    rbp
  402265:	pop    r12
  402267:	ret    
  402268:	nop    DWORD PTR [rax+rax*1+0x0]
  402270:	push   rbp
  402271:	push   rbx
  402272:	mov    rbp,rsi
  402275:	sub    rsp,0x8
  402279:	movzx  eax,BYTE PTR [rsi]
  40227c:	test   al,al
  40227e:	je     402303 <__sprintf_chk@plt+0x1123>
  402284:	lea    rdx,[rsi+0x1]
  402288:	xor    ecx,ecx
  40228a:	nop    WORD PTR [rax+rax*1+0x0]
  402290:	add    rdx,0x1
  402294:	add    rcx,rax
  402297:	movzx  eax,BYTE PTR [rdx-0x1]
  40229b:	test   al,al
  40229d:	jne    402290 <__sprintf_chk@plt+0x10b0>
  40229f:	mov    rax,rcx
  4022a2:	movabs rdx,0x824a4e60b3262bc5
  4022ac:	imul   rdx
  4022af:	lea    rax,[rdx+rcx*1]
  4022b3:	mov    rdx,rcx
  4022b6:	sar    rdx,0x3f
  4022ba:	sar    rax,0x8
  4022be:	sub    rax,rdx
  4022c1:	imul   rax,rax,0x1f7
  4022c8:	sub    ecx,eax
  4022ca:	movsxd rcx,ecx
  4022cd:	shl    rcx,0x5
  4022d1:	mov    rbx,QWORD PTR [rdi+rcx*1]
  4022d5:	test   rbx,rbx
  4022d8:	jne    4022e9 <__sprintf_chk@plt+0x1109>
  4022da:	jmp    4022f9 <__sprintf_chk@plt+0x1119>
  4022dc:	nop    DWORD PTR [rax+0x0]
  4022e0:	mov    rbx,QWORD PTR [rbx+0x8]
  4022e4:	test   rbx,rbx
  4022e7:	je     4022f9 <__sprintf_chk@plt+0x1119>
  4022e9:	mov    rsi,QWORD PTR [rbx+0x10]
  4022ed:	mov    rdi,rbp
  4022f0:	call   401110 <strcmp@plt>
  4022f5:	test   eax,eax
  4022f7:	jne    4022e0 <__sprintf_chk@plt+0x1100>
  4022f9:	add    rsp,0x8
  4022fd:	mov    rax,rbx
  402300:	pop    rbx
  402301:	pop    rbp
  402302:	ret    
  402303:	xor    ecx,ecx
  402305:	jmp    4022ca <__sprintf_chk@plt+0x10ea>
  402307:	nop    WORD PTR [rax+rax*1+0x0]
  402310:	mov    rdx,QWORD PTR [rsi+0x10]
  402314:	push   rbx
  402315:	mov    rbx,rdi
  402318:	movzx  eax,BYTE PTR [rdx]
  40231b:	test   al,al
  40231d:	je     402397 <__sprintf_chk@plt+0x11b7>
  40231f:	add    rdx,0x1
  402323:	xor    edi,edi
  402325:	nop    DWORD PTR [rax]
  402328:	add    rdx,0x1
  40232c:	add    rdi,rax
  40232f:	movzx  eax,BYTE PTR [rdx-0x1]
  402333:	test   al,al
  402335:	jne    402328 <__sprintf_chk@plt+0x1148>
  402337:	mov    rax,rdi
  40233a:	movabs rdx,0x824a4e60b3262bc5
  402344:	imul   rdx
  402347:	lea    rax,[rdx+rdi*1]
  40234b:	mov    rdx,rdi
  40234e:	sar    rdx,0x3f
  402352:	sar    rax,0x8
  402356:	sub    rax,rdx
  402359:	imul   rax,rax,0x1f7
  402360:	sub    rdi,rax
  402363:	shl    rdi,0x5
  402367:	add    rdi,rbx
  40236a:	xor    eax,eax
  40236c:	call   403310 <error@@Base+0x3f0>
  402371:	mov    rdi,QWORD PTR [rbx+0x3ee0]
  402378:	test   rdi,rdi
  40237b:	je     40238d <__sprintf_chk@plt+0x11ad>
  40237d:	call   401030 <free@plt>
  402382:	mov    QWORD PTR [rbx+0x3ee0],0x0
  40238d:	add    QWORD PTR [rbx+0x3ee8],0x1
  402395:	pop    rbx
  402396:	ret    
  402397:	xor    edi,edi
  402399:	jmp    402367 <__sprintf_chk@plt+0x1187>
  40239b:	nop    DWORD PTR [rax+rax*1+0x0]
  4023a0:	mov    rdx,QWORD PTR [rsi+0x10]
  4023a4:	push   rbx
  4023a5:	mov    rbx,rdi
  4023a8:	movzx  eax,BYTE PTR [rdx]
  4023ab:	test   al,al
  4023ad:	je     402427 <__sprintf_chk@plt+0x1247>
  4023af:	add    rdx,0x1
  4023b3:	xor    edi,edi
  4023b5:	nop    DWORD PTR [rax]
  4023b8:	add    rdx,0x1
  4023bc:	add    rdi,rax
  4023bf:	movzx  eax,BYTE PTR [rdx-0x1]
  4023c3:	test   al,al
  4023c5:	jne    4023b8 <__sprintf_chk@plt+0x11d8>
  4023c7:	mov    rax,rdi
  4023ca:	movabs rdx,0x824a4e60b3262bc5
  4023d4:	imul   rdx
  4023d7:	lea    rax,[rdx+rdi*1]
  4023db:	mov    rdx,rdi
  4023de:	sar    rdx,0x3f
  4023e2:	sar    rax,0x8
  4023e6:	sub    rax,rdx
  4023e9:	imul   rax,rax,0x1f7
  4023f0:	sub    rdi,rax
  4023f3:	shl    rdi,0x5
  4023f7:	add    rdi,rbx
  4023fa:	xor    eax,eax
  4023fc:	call   403450 <error@@Base+0x530>
  402401:	mov    rdi,QWORD PTR [rbx+0x3ee0]
  402408:	test   rdi,rdi
  40240b:	je     40241d <__sprintf_chk@plt+0x123d>
  40240d:	call   401030 <free@plt>
  402412:	mov    QWORD PTR [rbx+0x3ee0],0x0
  40241d:	sub    QWORD PTR [rbx+0x3ee8],0x1
  402425:	pop    rbx
  402426:	ret    
  402427:	xor    edi,edi
  402429:	jmp    4023f7 <__sprintf_chk@plt+0x1217>
  40242b:	nop    DWORD PTR [rax+rax*1+0x0]
  402430:	cmp    QWORD PTR [rdi+0x3ee0],0x0
  402438:	je     402440 <__sprintf_chk@plt+0x1260>
  40243a:	repz ret 
  40243c:	nop    DWORD PTR [rax+0x0]
  402440:	mov    rax,QWORD PTR [rdi+0x3ee8]
  402447:	test   rax,rax
  40244a:	je     40243a <__sprintf_chk@plt+0x125a>
  40244c:	push   rbx
  40244d:	mov    esi,0x8
  402452:	mov    rbx,rdi
  402455:	mov    rdi,rax
  402458:	xor    eax,eax
  40245a:	call   402f60 <error@@Base+0x40>
  40245f:	lea    rdi,[rbx+0x3ee0]
  402466:	mov    QWORD PTR [rbx+0x3ee0],rax
  40246d:	mov    rsi,rbx
  402470:	xor    ecx,ecx
  402472:	nop    WORD PTR [rax+rax*1+0x0]
  402478:	mov    rdx,QWORD PTR [rsi]
  40247b:	test   rdx,rdx
  40247e:	je     402492 <__sprintf_chk@plt+0x12b2>
  402480:	add    rcx,0x1
  402484:	mov    QWORD PTR [rax+rcx*8-0x8],rdx
  402489:	mov    rdx,QWORD PTR [rdx+0x8]
  40248d:	test   rdx,rdx
  402490:	jne    402480 <__sprintf_chk@plt+0x12a0>
  402492:	add    rsi,0x20
  402496:	cmp    rsi,rdi
  402499:	jne    402478 <__sprintf_chk@plt+0x1298>
  40249b:	pop    rbx
  40249c:	ret    
  40249d:	nop    DWORD PTR [rax]
  4024a0:	push   r13
  4024a2:	push   r12
  4024a4:	mov    r13,rdi
  4024a7:	push   rbp
  4024a8:	push   rbx
  4024a9:	lea    rbp,[rdi+0x3ee0]
  4024b0:	mov    r12,rsi
  4024b3:	mov    rbx,rdi
  4024b6:	sub    rsp,0x8
  4024ba:	nop    WORD PTR [rax+rax*1+0x0]
  4024c0:	mov    rdi,rbx
  4024c3:	xor    eax,eax
  4024c5:	mov    rsi,r12
  4024c8:	add    rbx,0x20
  4024cc:	call   403520 <error@@Base+0x600>
  4024d1:	cmp    rbx,rbp
  4024d4:	jne    4024c0 <__sprintf_chk@plt+0x12e0>
  4024d6:	mov    rdi,QWORD PTR [r13+0x3ee0]
  4024dd:	test   rdi,rdi
  4024e0:	je     4024f2 <__sprintf_chk@plt+0x1312>
  4024e2:	call   401030 <free@plt>
  4024e7:	mov    QWORD PTR [r13+0x3ee0],0x0
  4024f2:	mov    QWORD PTR [r13+0x3ee8],0x0
  4024fd:	add    rsp,0x8
  402501:	pop    rbx
  402502:	pop    rbp
  402503:	pop    r12
  402505:	pop    r13
  402507:	ret    
  402508:	nop    DWORD PTR [rax+rax*1+0x0]
  402510:	push   r12
  402512:	push   rbp
  402513:	mov    r12d,esi
  402516:	push   rbx
  402517:	mov    ebp,edx
  402519:	mov    rbx,rdi
  40251c:	mov    esi,0x18
  402521:	mov    edi,0x1
  402526:	xor    eax,eax
  402528:	call   402f60 <error@@Base+0x40>
  40252d:	mov    rdi,rbx
  402530:	mov    BYTE PTR [rax+0x10],r12b
  402534:	mov    DWORD PTR [rax+0x14],ebp
  402537:	pop    rbx
  402538:	pop    rbp
  402539:	pop    r12
  40253b:	mov    rsi,rax
  40253e:	xor    eax,eax
  402540:	jmp    403360 <error@@Base+0x440>
  402545:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402550:	push   r15
  402552:	push   r14
  402554:	push   r13
  402556:	push   r12
  402558:	push   rbp
  402559:	push   rbx
  40255a:	sub    rsp,0xc8
  402561:	mov    rcx,QWORD PTR fs:0x28
  40256a:	mov    QWORD PTR [rsp+0xb8],rcx
  402572:	xor    ecx,ecx
  402574:	cmp    BYTE PTR [rdx],0x0
  402577:	mov    QWORD PTR [rsp+0x20],rdi
  40257c:	mov    rdi,rsi
  40257f:	mov    QWORD PTR [rsp+0x30],rdx
  402584:	je     40258f <__sprintf_chk@plt+0x13af>
  402586:	test   rsi,rsi
  402589:	je     40292f <__sprintf_chk@plt+0x174f>
  40258f:	mov    rax,QWORD PTR [rsp+0x20]
  402594:	lea    rsi,[rip+0x22bd]        # 404858 <error@@Base+0x1938>
  40259b:	mov    rax,QWORD PTR [rax+0x8]
  40259f:	mov    QWORD PTR [rsp+0x38],rax
  4025a4:	xor    eax,eax
  4025a6:	call   403000 <error@@Base+0xe0>
  4025ab:	mov    rbp,rax
  4025ae:	mov    rax,QWORD PTR [rsp+0x30]
  4025b3:	cmp    BYTE PTR [rax],0x0
  4025b6:	jne    40284d <__sprintf_chk@plt+0x166d>
  4025bc:	mov    rcx,QWORD PTR [rsp+0x30]
  4025c1:	mov    rdi,rbp
  4025c4:	mov    eax,DWORD PTR [rcx+0x4]
  4025c7:	movzx  r15d,BYTE PTR [rcx+0x1]
  4025cc:	test   eax,eax
  4025ce:	mov    ebx,eax
  4025d0:	mov    eax,0x5e
  4025d5:	cmovne eax,ebx
  4025d8:	mov    DWORD PTR [rsp+0x2c],eax
  4025dc:	call   4011d0 <getc@plt>
  4025e1:	cmp    eax,0xffffffff
  4025e4:	je     4026e8 <__sprintf_chk@plt+0x1508>
  4025ea:	mov    r13,QWORD PTR [rip+0x49ff]        # 406ff0 <error@@Base+0x40d0>
  4025f1:	movsxd rdx,eax
  4025f4:	movsx  r14,BYTE PTR [r13+rdx*1+0x0]
  4025fa:	test   r14,r14
  4025fd:	jle    402913 <__sprintf_chk@plt+0x1733>
  402603:	lea    rcx,[rsp+0x50]
  402608:	xor    ebx,ebx
  40260a:	mov    r12,r14
  40260d:	mov    QWORD PTR [rsp+0x8],rcx
  402612:	lea    rcx,[rsp+0x51]
  402617:	mov    QWORD PTR [rsp+0x18],rcx
  40261c:	lea    rcx,[rsp+0x4c]
  402621:	mov    QWORD PTR [rsp+0x10],rcx
  402626:	jmp    402664 <__sprintf_chk@plt+0x1484>
  402628:	nop    DWORD PTR [rax+rax*1+0x0]
  402630:	mov    rdi,QWORD PTR [rsp+0x20]
  402635:	movsx  esi,bl
  402638:	xor    eax,eax
  40263a:	xor    ebx,ebx
  40263c:	call   402510 <__sprintf_chk@plt+0x1330>
  402641:	mov    rdi,rbp
  402644:	call   4011d0 <getc@plt>
  402649:	cmp    eax,0xffffffff
  40264c:	je     4026e8 <__sprintf_chk@plt+0x1508>
  402652:	movsxd rdx,eax
  402655:	movsx  r12,BYTE PTR [r13+rdx*1+0x0]
  40265b:	test   r12,r12
  40265e:	jle    402913 <__sprintf_chk@plt+0x1733>
  402664:	cmp    r12,0x1
  402668:	mov    BYTE PTR [rsp+0x50],al
  40266c:	je     402698 <__sprintf_chk@plt+0x14b8>
  40266e:	lea    r14,[r12-0x1]
  402673:	mov    rdi,QWORD PTR [rsp+0x18]
  402678:	mov    r8,rbp
  40267b:	mov    edx,0x1
  402680:	mov    esi,0x3
  402685:	mov    rcx,r14
  402688:	call   401160 <__fread_chk@plt>
  40268d:	cdqe   
  40268f:	cmp    r14,rax
  402692:	jne    402921 <__sprintf_chk@plt+0x1741>
  402698:	mov    rdx,QWORD PTR [rsp+0x10]
  40269d:	mov    rdi,QWORD PTR [rsp+0x8]
  4026a2:	mov    esi,0x4
  4026a7:	call   4010f0 <utf8proc_iterate@plt>
  4026ac:	cdqe   
  4026ae:	cmp    rax,r12
  4026b1:	jne    402901 <__sprintf_chk@plt+0x1721>
  4026b7:	test   r15b,r15b
  4026ba:	mov    edx,DWORD PTR [rsp+0x4c]
  4026be:	je     402630 <__sprintf_chk@plt+0x1450>
  4026c4:	cmp    edx,DWORD PTR [rsp+0x2c]
  4026c8:	jne    402630 <__sprintf_chk@plt+0x1450>
  4026ce:	mov    rdi,rbp
  4026d1:	mov    ebx,0x1
  4026d6:	call   4011d0 <getc@plt>
  4026db:	cmp    eax,0xffffffff
  4026de:	jne    402652 <__sprintf_chk@plt+0x1472>
  4026e4:	nop    DWORD PTR [rax+0x0]
  4026e8:	xor    eax,eax
  4026ea:	mov    rdi,rbp
  4026ed:	call   402dc0 <__sprintf_chk@plt+0x1be0>
  4026f2:	mov    rax,QWORD PTR [rsp+0x30]
  4026f7:	cmp    BYTE PTR [rax+0x9],0x0
  4026fb:	je     4027ed <__sprintf_chk@plt+0x160d>
  402701:	mov    rax,QWORD PTR [rsp+0x38]
  402706:	test   rax,rax
  402709:	je     4028f4 <__sprintf_chk@plt+0x1714>
  40270f:	mov    rbp,QWORD PTR [rax+0x8]
  402713:	test   rbp,rbp
  402716:	je     4027ed <__sprintf_chk@plt+0x160d>
  40271c:	mov    r12,rbp
  40271f:	jmp    402741 <__sprintf_chk@plt+0x1561>
  402721:	nop    DWORD PTR [rax+0x0]
  402728:	cmp    ebx,0xb
  40272b:	jae    402766 <__sprintf_chk@plt+0x1586>
  40272d:	cmp    ebx,0x9
  402730:	je     402766 <__sprintf_chk@plt+0x1586>
  402732:	cmp    ebx,0xa
  402735:	jne    40275a <__sprintf_chk@plt+0x157a>
  402737:	mov    r12,QWORD PTR [r12+0x8]
  40273c:	test   r12,r12
  40273f:	je     402779 <__sprintf_chk@plt+0x1599>
  402741:	mov    ebx,DWORD PTR [r12+0x14]
  402746:	mov    edi,ebx
  402748:	call   401050 <utf8proc_get_property@plt>
  40274d:	cmp    ebx,0xd
  402750:	jbe    402728 <__sprintf_chk@plt+0x1548>
  402752:	cmp    ebx,0xa0
  402758:	je     402766 <__sprintf_chk@plt+0x1586>
  40275a:	movzx  eax,WORD PTR [rax]
  40275d:	sub    eax,0x17
  402760:	cmp    ax,0x2
  402764:	ja     402737 <__sprintf_chk@plt+0x1557>
  402766:	mov    DWORD PTR [r12+0x14],0x20
  40276f:	mov    r12,QWORD PTR [r12+0x8]
  402774:	test   r12,r12
  402777:	jne    402741 <__sprintf_chk@plt+0x1561>
  402779:	mov    r13,QWORD PTR [rsp+0x20]
  40277e:	jmp    4027bb <__sprintf_chk@plt+0x15db>
  402780:	cmp    eax,0xa
  402783:	jne    4027de <__sprintf_chk@plt+0x15fe>
  402785:	test   r12b,r12b
  402788:	jne    4027de <__sprintf_chk@plt+0x15fe>
  40278a:	test   rbx,rbx
  40278d:	je     40279e <__sprintf_chk@plt+0x15be>
  40278f:	test   r12b,r12b
  402792:	je     40279e <__sprintf_chk@plt+0x15be>
  402794:	cmp    DWORD PTR [rbx+0x14],0x20
  402798:	je     4028c4 <__sprintf_chk@plt+0x16e4>
  40279e:	mov    rsi,rbp
  4027a1:	xor    eax,eax
  4027a3:	mov    rdi,r13
  4027a6:	call   403450 <error@@Base+0x530>
  4027ab:	mov    rdi,rbp
  4027ae:	mov    rbp,rbx
  4027b1:	call   401030 <free@plt>
  4027b6:	test   rbx,rbx
  4027b9:	je     4027ed <__sprintf_chk@plt+0x160d>
  4027bb:	mov    eax,DWORD PTR [rbp+0x14]
  4027be:	mov    rbx,QWORD PTR [rbp+0x8]
  4027c2:	cmp    eax,0x20
  4027c5:	jne    402780 <__sprintf_chk@plt+0x15a0>
  4027c7:	test   r12b,r12b
  4027ca:	je     40278a <__sprintf_chk@plt+0x15aa>
  4027cc:	test   rbx,rbx
  4027cf:	je     40278a <__sprintf_chk@plt+0x15aa>
  4027d1:	mov    edx,DWORD PTR [rbx+0x14]
  4027d4:	cmp    edx,0x20
  4027d7:	je     40278a <__sprintf_chk@plt+0x15aa>
  4027d9:	cmp    edx,0xa
  4027dc:	je     40278a <__sprintf_chk@plt+0x15aa>
  4027de:	cmp    eax,0xa
  4027e1:	mov    rbp,rbx
  4027e4:	setne  r12b
  4027e8:	test   rbx,rbx
  4027eb:	jne    4027bb <__sprintf_chk@plt+0x15db>
  4027ed:	mov    rax,QWORD PTR [rsp+0x30]
  4027f2:	cmp    BYTE PTR [rax+0xa],0x0
  4027f6:	je     402824 <__sprintf_chk@plt+0x1644>
  4027f8:	mov    rax,QWORD PTR [rsp+0x38]
  4027fd:	test   rax,rax
  402800:	je     4028e7 <__sprintf_chk@plt+0x1707>
  402806:	mov    rbx,QWORD PTR [rax+0x8]
  40280a:	jmp    40281f <__sprintf_chk@plt+0x163f>
  40280c:	nop    DWORD PTR [rax+0x0]
  402810:	mov    edi,DWORD PTR [rbx+0x14]
  402813:	call   4010c0 <utf8proc_tolower@plt>
  402818:	mov    DWORD PTR [rbx+0x14],eax
  40281b:	mov    rbx,QWORD PTR [rbx+0x8]
  40281f:	test   rbx,rbx
  402822:	jne    402810 <__sprintf_chk@plt+0x1630>
  402824:	mov    rax,QWORD PTR [rsp+0xb8]
  40282c:	xor    rax,QWORD PTR fs:0x28
  402835:	jne    402944 <__sprintf_chk@plt+0x1764>
  40283b:	add    rsp,0xc8
  402842:	pop    rbx
  402843:	pop    rbp
  402844:	pop    r12
  402846:	pop    r13
  402848:	pop    r14
  40284a:	pop    r15
  40284c:	ret    
  40284d:	lea    rsi,[rsp+0x50]
  402852:	mov    rdx,rbp
  402855:	mov    rbx,rsi
  402858:	mov    esi,0x63
  40285d:	mov    rdi,rbx
  402860:	mov    r12,rbx
  402863:	call   4010e0 <fgets@plt>
  402868:	test   rax,rax
  40286b:	je     4028d0 <__sprintf_chk@plt+0x16f0>
  40286d:	lea    rdi,[rip+0x202c]        # 4048a0 <error@@Base+0x1980>
  402874:	mov    ecx,0x33
  402879:	mov    rsi,rbx
  40287c:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40287e:	jne    4028d0 <__sprintf_chk@plt+0x16f0>
  402880:	lea    r13,[rip+0x2051]        # 4048d8 <error@@Base+0x19b8>
  402887:	xor    ebx,ebx
  402889:	nop    DWORD PTR [rax+0x0]
  402890:	mov    rdx,rbp
  402893:	mov    esi,0x63
  402898:	mov    rdi,r12
  40289b:	call   4010e0 <fgets@plt>
  4028a0:	test   rax,rax
  4028a3:	je     4028bd <__sprintf_chk@plt+0x16dd>
  4028a5:	mov    ecx,0x38
  4028aa:	mov    rsi,r12
  4028ad:	mov    rdi,r13
  4028b0:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4028b2:	jne    402890 <__sprintf_chk@plt+0x16b0>
  4028b4:	add    ebx,0x1
  4028b7:	cmp    bx,0x1
  4028bb:	jle    402890 <__sprintf_chk@plt+0x16b0>
  4028bd:	mov    eax,0x1
  4028c2:	jmp    4028da <__sprintf_chk@plt+0x16fa>
  4028c4:	movzx  eax,BYTE PTR [rbp+0x10]
  4028c8:	or     BYTE PTR [rbx+0x10],al
  4028cb:	jmp    40279e <__sprintf_chk@plt+0x15be>
  4028d0:	mov    rdi,rbp
  4028d3:	call   4010b0 <rewind@plt>
  4028d8:	xor    eax,eax
  4028da:	mov    rcx,QWORD PTR [rsp+0x30]
  4028df:	mov    BYTE PTR [rcx+0xb],al
  4028e2:	jmp    4025bc <__sprintf_chk@plt+0x13dc>
  4028e7:	mov    rax,QWORD PTR [rsp+0x20]
  4028ec:	mov    rbx,QWORD PTR [rax]
  4028ef:	jmp    40281f <__sprintf_chk@plt+0x163f>
  4028f4:	mov    rax,QWORD PTR [rsp+0x20]
  4028f9:	mov    rbp,QWORD PTR [rax]
  4028fc:	jmp    402713 <__sprintf_chk@plt+0x1533>
  402901:	mov    rdi,rax
  402904:	call   4011b0 <utf8proc_errmsg@plt>
  402909:	mov    rdi,rax
  40290c:	xor    eax,eax
  40290e:	call   402f20 <error@@Base>
  402913:	lea    rdi,[rip+0x1f28]        # 404842 <error@@Base+0x1922>
  40291a:	xor    eax,eax
  40291c:	call   402f20 <error@@Base>
  402921:	lea    rdi,[rip+0x1f32]        # 40485a <error@@Base+0x193a>
  402928:	xor    eax,eax
  40292a:	call   402f20 <error@@Base>
  40292f:	lea    rsi,[rip+0x1ef2]        # 404828 <error@@Base+0x1908>
  402936:	lea    rdi,[rip+0x1ef5]        # 404832 <error@@Base+0x1912>
  40293d:	xor    eax,eax
  40293f:	call   402fb0 <error@@Base+0x90>
  402944:	call   4010a0 <__stack_chk_fail@plt>
  402949:	nop    DWORD PTR [rax+0x0]
  402950:	sub    rsp,0x8
  402954:	call   401060 <utf8proc_encode_char@plt>
  402959:	test   rax,rax
  40295c:	jle    402963 <__sprintf_chk@plt+0x1783>
  40295e:	add    rsp,0x8
  402962:	ret    
  402963:	lea    rdi,[rip+0x1f08]        # 404872 <error@@Base+0x1952>
  40296a:	xor    eax,eax
  40296c:	call   402f20 <error@@Base>
  402971:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40297c:	nop    DWORD PTR [rax+0x0]
  402980:	push   r13
  402982:	push   r12
  402984:	xor    r12d,r12d
  402987:	push   rbp
  402988:	push   rbx
  402989:	xor    ebx,ebx
  40298b:	mov    r13d,esi
  40298e:	mov    rbp,rdx
  402991:	sub    rsp,0x18
  402995:	test   dil,dil
  402998:	jne    402a50 <__sprintf_chk@plt+0x1870>
  40299e:	cmp    r13d,0xa
  4029a2:	je     402a10 <__sprintf_chk@plt+0x1830>
  4029a4:	mov    edi,r13d
  4029a7:	call   401050 <utf8proc_get_property@plt>
  4029ac:	cmp    r13d,0x20
  4029b0:	je     402a78 <__sprintf_chk@plt+0x1898>
  4029b6:	movzx  eax,WORD PTR [rax]
  4029b9:	cmp    ax,0x1d
  4029bd:	ja     4029d4 <__sprintf_chk@plt+0x17f4>
  4029bf:	mov    edx,0x1
  4029c4:	shlx   rax,rdx,rax
  4029c9:	test   eax,0x207ffffe
  4029ce:	jne    402a78 <__sprintf_chk@plt+0x1898>
  4029d4:	cmp    r13d,0xff
  4029db:	jbe    402ad0 <__sprintf_chk@plt+0x18f0>
  4029e1:	lea    rdi,[rbp+rbx*1+0x0]
  4029e6:	lea    rcx,[rip+0x1ea8]        # 404895 <error@@Base+0x1975>
  4029ed:	mov    r8d,r13d
  4029f0:	add    rsp,0x18
  4029f4:	mov    rdx,0xffffffffffffffff
  4029fb:	mov    esi,0x1
  402a00:	pop    rbx
  402a01:	pop    rbp
  402a02:	pop    r12
  402a04:	pop    r13
  402a06:	xor    eax,eax
  402a08:	jmp    4011e0 <__sprintf_chk@plt>
  402a0d:	nop    DWORD PTR [rax]
  402a10:	test   cl,cl
  402a12:	lea    rax,[rip+0x1e70]        # 404889 <error@@Base+0x1969>
  402a19:	lea    rcx,[rip+0x169e]        # 4040be <error@@Base+0x119e>
  402a20:	lea    rdi,[rbp+rbx*1+0x0]
  402a25:	mov    rdx,0xffffffffffffffff
  402a2c:	mov    esi,0x1
  402a31:	cmovne rcx,rax
  402a35:	add    rsp,0x18
  402a39:	xor    eax,eax
  402a3b:	pop    rbx
  402a3c:	pop    rbp
  402a3d:	pop    r12
  402a3f:	pop    r13
  402a41:	jmp    4011e0 <__sprintf_chk@plt>
  402a46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402a50:	mov    rsi,rdx
  402a53:	mov    edi,0x5e
  402a58:	xor    eax,eax
  402a5a:	mov    DWORD PTR [rsp+0xc],ecx
  402a5e:	call   402950 <__sprintf_chk@plt+0x1770>
  402a63:	mov    ecx,DWORD PTR [rsp+0xc]
  402a67:	movsx  r12w,al
  402a6c:	movsx  rbx,al
  402a70:	jmp    40299e <__sprintf_chk@plt+0x17be>
  402a75:	nop    DWORD PTR [rax]
  402a78:	mov    edi,r13d
  402a7b:	call   401130 <utf8proc_category@plt>
  402a80:	sub    eax,0x6
  402a83:	cmp    eax,0x2
  402a86:	ja     402aa2 <__sprintf_chk@plt+0x18c2>
  402a88:	lea    rsi,[rbp+rbx*1+0x0]
  402a8d:	mov    edi,0x25cc
  402a92:	xor    eax,eax
  402a94:	call   402950 <__sprintf_chk@plt+0x1770>
  402a99:	cbw    
  402a9b:	add    r12d,eax
  402a9e:	movsx  rbx,r12w
  402aa2:	lea    rsi,[rbp+rbx*1+0x0]
  402aa7:	mov    edi,r13d
  402aaa:	xor    eax,eax
  402aac:	call   402950 <__sprintf_chk@plt+0x1770>
  402ab1:	cbw    
  402ab3:	add    r12d,eax
  402ab6:	movsx  r12,r12w
  402aba:	mov    BYTE PTR [rbp+r12*1+0x0],0x0
  402ac0:	add    rsp,0x18
  402ac4:	pop    rbx
  402ac5:	pop    rbp
  402ac6:	pop    r12
  402ac8:	pop    r13
  402aca:	ret    
  402acb:	nop    DWORD PTR [rax+rax*1+0x0]
  402ad0:	lea    rdi,[rbp+rbx*1+0x0]
  402ad5:	mov    r8d,r13d
  402ad8:	lea    rcx,[rip+0x1daf]        # 40488e <error@@Base+0x196e>
  402adf:	jmp    4029f0 <__sprintf_chk@plt+0x1810>
  402ae4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402aef:	nop
  402af0:	push   r12
  402af2:	push   rbp
  402af3:	mov    rbp,rdi
  402af6:	push   rbx
  402af7:	mov    rdi,rsi
  402afa:	lea    rsi,[rip+0x192f]        # 404430 <error@@Base+0x1510>
  402b01:	mov    rbx,rdx
  402b04:	sub    rsp,0x20
  402b08:	mov    rax,QWORD PTR fs:0x28
  402b11:	mov    QWORD PTR [rsp+0x18],rax
  402b16:	xor    eax,eax
  402b18:	call   403000 <error@@Base+0xe0>
  402b1d:	test   rbx,rbx
  402b20:	mov    r12,rax
  402b23:	je     402b77 <__sprintf_chk@plt+0x1997>
  402b25:	lea    rdi,[rip+0x1d74]        # 4048a0 <error@@Base+0x1980>
  402b2c:	mov    rcx,rax
  402b2f:	mov    edx,0x37
  402b34:	mov    esi,0x1
  402b39:	call   401190 <fwrite@plt>
  402b3e:	lea    rdi,[rip+0x1d93]        # 4048d8 <error@@Base+0x19b8>
  402b45:	mov    rcx,r12
  402b48:	mov    edx,0x37
  402b4d:	mov    esi,0x1
  402b52:	call   401190 <fwrite@plt>
  402b57:	mov    rdi,r12
  402b5a:	xor    eax,eax
  402b5c:	call   rbx
  402b5e:	lea    rdi,[rip+0x1d73]        # 4048d8 <error@@Base+0x19b8>
  402b65:	mov    rcx,r12
  402b68:	mov    edx,0x37
  402b6d:	mov    esi,0x1
  402b72:	call   401190 <fwrite@plt>
  402b77:	mov    rbx,QWORD PTR [rbp+0x0]
  402b7b:	lea    rbp,[rsp+0xf]
  402b80:	test   rbx,rbx
  402b83:	je     402baf <__sprintf_chk@plt+0x19cf>
  402b85:	nop    DWORD PTR [rax]
  402b88:	movsx  edi,BYTE PTR [rbx+0x10]
  402b8c:	mov    esi,DWORD PTR [rbx+0x14]
  402b8f:	xor    ecx,ecx
  402b91:	xor    eax,eax
  402b93:	mov    rdx,rbp
  402b96:	call   402980 <__sprintf_chk@plt+0x17a0>
  402b9b:	mov    rsi,r12
  402b9e:	mov    rdi,rbp
  402ba1:	call   4010d0 <fputs@plt>
  402ba6:	mov    rbx,QWORD PTR [rbx+0x8]
  402baa:	test   rbx,rbx
  402bad:	jne    402b88 <__sprintf_chk@plt+0x19a8>
  402baf:	xor    eax,eax
  402bb1:	mov    rdi,r12
  402bb4:	call   402dc0 <__sprintf_chk@plt+0x1be0>
  402bb9:	mov    rax,QWORD PTR [rsp+0x18]
  402bbe:	xor    rax,QWORD PTR fs:0x28
  402bc7:	jne    402bd2 <__sprintf_chk@plt+0x19f2>
  402bc9:	add    rsp,0x20
  402bcd:	pop    rbx
  402bce:	pop    rbp
  402bcf:	pop    r12
  402bd1:	ret    
  402bd2:	call   4010a0 <__stack_chk_fail@plt>
  402bd7:	nop    WORD PTR [rax+rax*1+0x0]
  402be0:	push   r14
  402be2:	push   r13
  402be4:	push   r12
  402be6:	push   rbp
  402be7:	push   rbx
  402be8:	sub    rsp,0x10
  402bec:	mov    rax,QWORD PTR fs:0x28
  402bf5:	mov    QWORD PTR [rsp+0x8],rax
  402bfa:	xor    eax,eax
  402bfc:	cmp    BYTE PTR [rsi],0x0
  402bff:	mov    DWORD PTR [rsp+0x4],0x0
  402c07:	je     402c58 <__sprintf_chk@plt+0x1a78>
  402c09:	mov    r14,rdi
  402c0c:	mov    rbp,rsi
  402c0f:	lea    r13,[rsp+0x4]
  402c14:	mov    r12,0xffffffffffffffff
  402c1b:	jmp    402c3c <__sprintf_chk@plt+0x1a5c>
  402c1d:	nop    DWORD PTR [rax]
  402c20:	mov    edx,DWORD PTR [rsp+0x4]
  402c24:	movsxd rbx,ebx
  402c27:	xor    esi,esi
  402c29:	xor    eax,eax
  402c2b:	mov    rdi,r14
  402c2e:	add    rbp,rbx
  402c31:	call   402510 <__sprintf_chk@plt+0x1330>
  402c36:	cmp    BYTE PTR [rbp+0x0],0x0
  402c3a:	je     402c58 <__sprintf_chk@plt+0x1a78>
  402c3c:	mov    rdx,r13
  402c3f:	mov    rsi,r12
  402c42:	mov    rdi,rbp
  402c45:	call   4010f0 <utf8proc_iterate@plt>
  402c4a:	test   eax,eax
  402c4c:	mov    rbx,rax
  402c4f:	jg     402c20 <__sprintf_chk@plt+0x1a40>
  402c51:	xor    eax,eax
  402c53:	jmp    402c5d <__sprintf_chk@plt+0x1a7d>
  402c55:	nop    DWORD PTR [rax]
  402c58:	mov    eax,0x1
  402c5d:	mov    rcx,QWORD PTR [rsp+0x8]
  402c62:	xor    rcx,QWORD PTR fs:0x28
  402c6b:	jne    402c7a <__sprintf_chk@plt+0x1a9a>
  402c6d:	add    rsp,0x10
  402c71:	pop    rbx
  402c72:	pop    rbp
  402c73:	pop    r12
  402c75:	pop    r13
  402c77:	pop    r14
  402c79:	ret    
  402c7a:	call   4010a0 <__stack_chk_fail@plt>
  402c7f:	nop
  402c80:	push   rbp
  402c81:	push   rbx
  402c82:	mov    ebx,edi
  402c84:	movsx  ebx,bx
  402c87:	sub    rsp,0x78
  402c8b:	mov    rax,QWORD PTR fs:0x28
  402c94:	mov    QWORD PTR [rsp+0x68],rax
  402c99:	xor    eax,eax
  402c9b:	mov    rbp,rsp
  402c9e:	call   401070 <getpid@plt>
  402ca3:	mov    r9d,eax
  402ca6:	mov    rax,0x161c960
  402cad:	sub    rsp,0x8
  402cb1:	push   rbx
  402cb2:	lea    rcx,[rip+0x1c57]        # 404910 <error@@Base+0x19f0>
  402cb9:	mov    edx,0x64
  402cbe:	mov    esi,0x1
  402cc3:	mov    rdi,rbp
  402cc6:	mov    r8,QWORD PTR [rax]
  402cc9:	xor    eax,eax
  402ccb:	call   4011e0 <__sprintf_chk@plt>
  402cd0:	mov    rdi,rbp
  402cd3:	call   4011c0 <strdup@plt>
  402cd8:	pop    rdx
  402cd9:	pop    rcx
  402cda:	mov    rdx,QWORD PTR [rsp+0x68]
  402cdf:	xor    rdx,QWORD PTR fs:0x28
  402ce8:	jne    402cf1 <__sprintf_chk@plt+0x1b11>
  402cea:	add    rsp,0x78
  402cee:	pop    rbx
  402cef:	pop    rbp
  402cf0:	ret    
  402cf1:	call   4010a0 <__stack_chk_fail@plt>
  402cf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402d00:	mov    rax,0x161c968
  402d07:	push   r12
  402d09:	mov    r12d,edi
  402d0c:	push   rbp
  402d0d:	push   rbx
  402d0e:	mov    rdx,QWORD PTR [rax]
  402d11:	test   rdx,rdx
  402d14:	je     402d1a <__sprintf_chk@plt+0x1b3a>
  402d16:	xor    eax,eax
  402d18:	call   rdx
  402d1a:	cmp    WORD PTR [rip+0x114cb8],0x0        # 5179da <error@@Base+0x114aba>
  402d22:	mov    ebx,0x1
  402d27:	jle    402d5b <__sprintf_chk@plt+0x1b7b>
  402d29:	nop    DWORD PTR [rax+0x0]
  402d30:	movsx  edi,bx
  402d33:	xor    eax,eax
  402d35:	add    ebx,0x1
  402d38:	call   402c80 <__sprintf_chk@plt+0x1aa0>
  402d3d:	mov    rdi,rax
  402d40:	mov    rbp,rax
  402d43:	xor    eax,eax
  402d45:	call   401040 <unlink@plt>
  402d4a:	mov    rdi,rbp
  402d4d:	call   401030 <free@plt>
  402d52:	cmp    WORD PTR [rip+0x114c81],bx        # 5179da <error@@Base+0x114aba>
  402d59:	jge    402d30 <__sprintf_chk@plt+0x1b50>
  402d5b:	mov    edi,r12d
  402d5e:	call   401180 <exit@plt>
  402d63:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402d6e:	xchg   ax,ax
  402d70:	movzx  edx,BYTE PTR [rdi]
  402d73:	test   dl,dl
  402d75:	je     402dbb <__sprintf_chk@plt+0x1bdb>
  402d77:	movzx  ecx,BYTE PTR [rsi]
  402d7a:	cmp    cl,dl
  402d7c:	jne    402da9 <__sprintf_chk@plt+0x1bc9>
  402d7e:	xor    eax,eax
  402d80:	jmp    402d90 <__sprintf_chk@plt+0x1bb0>
  402d82:	nop    WORD PTR [rax+rax*1+0x0]
  402d88:	movzx  ecx,BYTE PTR [rsi+rax*1]
  402d8c:	cmp    dl,cl
  402d8e:	jne    402da9 <__sprintf_chk@plt+0x1bc9>
  402d90:	add    rax,0x1
  402d94:	movzx  edx,BYTE PTR [rdi+rax*1]
  402d98:	mov    rcx,rax
  402d9b:	test   dl,dl
  402d9d:	jne    402d88 <__sprintf_chk@plt+0x1ba8>
  402d9f:	movzx  ecx,BYTE PTR [rsi+rcx*1]
  402da3:	xor    edx,edx
  402da5:	test   cl,cl
  402da7:	je     402db8 <__sprintf_chk@plt+0x1bd8>
  402da9:	cmp    dl,cl
  402dab:	sbb    eax,eax
  402dad:	or     eax,0x1
  402db0:	ret    
  402db1:	nop    DWORD PTR [rax+0x0]
  402db8:	xor    eax,eax
  402dba:	ret    
  402dbb:	xor    ecx,ecx
  402dbd:	jmp    402d9f <__sprintf_chk@plt+0x1bbf>
  402dbf:	nop
  402dc0:	mov    rax,QWORD PTR [rip+0x4211]        # 406fd8 <error@@Base+0x40b8>
  402dc7:	cmp    QWORD PTR [rax],rdi
  402dca:	je     402de0 <__sprintf_chk@plt+0x1c00>
  402dcc:	mov    rax,QWORD PTR [rip+0x41fd]        # 406fd0 <error@@Base+0x40b0>
  402dd3:	cmp    rdi,QWORD PTR [rax]
  402dd6:	je     402de0 <__sprintf_chk@plt+0x1c00>
  402dd8:	jmp    401080 <fclose@plt>
  402ddd:	nop    DWORD PTR [rax]
  402de0:	repz ret 
  402de2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402ded:	nop    DWORD PTR [rax]
  402df0:	sub    rsp,0xa8
  402df7:	mov    rsi,rdi
  402dfa:	mov    edi,0x1
  402dff:	mov    rdx,rsp
  402e02:	mov    rax,QWORD PTR fs:0x28
  402e0b:	mov    QWORD PTR [rsp+0x98],rax
  402e13:	xor    eax,eax
  402e15:	call   401140 <__xstat@plt>
  402e1a:	test   eax,eax
  402e1c:	sete   al
  402e1f:	mov    rcx,QWORD PTR [rsp+0x98]
  402e27:	xor    rcx,QWORD PTR fs:0x28
  402e30:	jne    402e3a <__sprintf_chk@plt+0x1c5a>
  402e32:	add    rsp,0xa8
  402e39:	ret    
  402e3a:	call   4010a0 <__stack_chk_fail@plt>
  402e3f:	nop
  402e40:	movzx  eax,WORD PTR [rip+0x114b93]        # 5179da <error@@Base+0x114aba>
  402e47:	push   rbx
  402e48:	lea    edi,[rax+0x1]
  402e4b:	xor    eax,eax
  402e4d:	mov    WORD PTR [rip+0x114b86],di        # 5179da <error@@Base+0x114aba>
  402e54:	movsx  edi,di
  402e57:	call   402c80 <__sprintf_chk@plt+0x1aa0>
  402e5c:	mov    rbx,rax
  402e5f:	mov    rdi,rax
  402e62:	xor    eax,eax
  402e64:	call   401040 <unlink@plt>
  402e69:	mov    rax,rbx
  402e6c:	pop    rbx
  402e6d:	ret    
  402e6e:	xchg   ax,ax
  402e70:	push   rbx
  402e71:	mov    rbx,rdi
  402e74:	call   401090 <strlen@plt>
  402e79:	sub    ax,0x1
  402e7d:	movsx  rdx,ax
  402e81:	js     402eaa <__sprintf_chk@plt+0x1cca>
  402e83:	cmp    BYTE PTR [rbx+rdx*1],0x2f
  402e87:	jne    402e9a <__sprintf_chk@plt+0x1cba>
  402e89:	jmp    402eaa <__sprintf_chk@plt+0x1cca>
  402e8b:	nop    DWORD PTR [rax+rax*1+0x0]
  402e90:	movsx  rdx,ax
  402e94:	cmp    BYTE PTR [rbx+rdx*1],0x2f
  402e98:	je     402eaa <__sprintf_chk@plt+0x1cca>
  402e9a:	sub    eax,0x1
  402e9d:	cmp    ax,0xffff
  402ea1:	jne    402e90 <__sprintf_chk@plt+0x1cb0>
  402ea3:	mov    rdx,0xffffffffffffffff
  402eaa:	lea    rax,[rbx+rdx*1+0x1]
  402eaf:	pop    rbx
  402eb0:	ret    
  402eb1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402ebc:	nop    DWORD PTR [rax+0x0]
  402ec0:	sub    rsp,0x8
  402ec4:	xor    edi,edi
  402ec6:	xor    eax,eax
  402ec8:	call   402d00 <__sprintf_chk@plt+0x1b20>
  402ecd:	nop    DWORD PTR [rax]
  402ed0:	sub    rsp,0x8
  402ed4:	mov    rax,0x161c958
  402edb:	mov    rdx,QWORD PTR [rax]
  402ede:	test   rdx,rdx
  402ee1:	je     402eee <__sprintf_chk@plt+0x1d0e>
  402ee3:	xor    eax,eax
  402ee5:	call   rdx
  402ee7:	xor    eax,eax
  402ee9:	call   402ec0 <__sprintf_chk@plt+0x1ce0>
  402eee:	mov    rax,0x161c960
  402ef5:	mov    r8,rdi
  402ef8:	lea    rdx,[rip+0x1a1f]        # 40491e <error@@Base+0x19fe>
  402eff:	mov    esi,0x1
  402f04:	mov    rcx,QWORD PTR [rax]
  402f07:	mov    rax,QWORD PTR [rip+0x40ea]        # 406ff8 <error@@Base+0x40d8>
  402f0e:	mov    rdi,QWORD PTR [rax]
  402f11:	xor    eax,eax
  402f13:	call   4011a0 <__fprintf_chk@plt>
  402f18:	jmp    402ee7 <__sprintf_chk@plt+0x1d07>
  402f1a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000402f20 <error@@Base>:
  402f20:	sub    rsp,0x8
  402f24:	mov    rax,0x161c960
  402f2b:	mov    r8,rdi
  402f2e:	lea    rdx,[rip+0x19f8]        # 40492d <error@@Base+0x1a0d>
  402f35:	mov    esi,0x1
  402f3a:	mov    rcx,QWORD PTR [rax]
  402f3d:	mov    rax,QWORD PTR [rip+0x40b4]        # 406ff8 <error@@Base+0x40d8>
  402f44:	mov    rdi,QWORD PTR [rax]
  402f47:	xor    eax,eax
  402f49:	call   4011a0 <__fprintf_chk@plt>
  402f4e:	mov    rax,0x407108
  402f55:	mov    edi,DWORD PTR [rax]
  402f57:	xor    eax,eax
  402f59:	call   402d00 <__sprintf_chk@plt+0x1b20>
  402f5e:	xchg   ax,ax
  402f60:	sub    rsp,0x8
  402f64:	call   401100 <calloc@plt>
  402f69:	test   rax,rax
  402f6c:	je     402f73 <error@@Base+0x53>
  402f6e:	add    rsp,0x8
  402f72:	ret    
  402f73:	lea    rdi,[rip+0x19bb]        # 404935 <error@@Base+0x1a15>
  402f7a:	call   402f20 <error@@Base>
  402f7f:	nop
  402f80:	cmp    BYTE PTR [rip+0x114a51],0x0        # 5179d8 <error@@Base+0x114ab8>
  402f87:	je     402f8b <error@@Base+0x6b>
  402f89:	repz ret 
  402f8b:	lea    rdi,[rip+0x19bd]        # 40494f <error@@Base+0x1a2f>
  402f92:	sub    rsp,0x8
  402f96:	xor    eax,eax
  402f98:	mov    BYTE PTR [rip+0x114a39],0x1        # 5179d8 <error@@Base+0x114ab8>
  402f9f:	call   402f20 <error@@Base>
  402fa4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402faf:	nop
  402fb0:	sub    rsp,0x8
  402fb4:	mov    rax,0x161c960
  402fbb:	mov    r8,rdi
  402fbe:	lea    rdx,[rip+0x1999]        # 40495e <error@@Base+0x1a3e>
  402fc5:	mov    r9,rsi
  402fc8:	mov    esi,0x1
  402fcd:	mov    rcx,QWORD PTR [rax]
  402fd0:	mov    rax,QWORD PTR [rip+0x4021]        # 406ff8 <error@@Base+0x40d8>
  402fd7:	mov    rdi,QWORD PTR [rax]
  402fda:	xor    eax,eax
  402fdc:	call   4011a0 <__fprintf_chk@plt>
  402fe1:	mov    rax,0x407108
  402fe8:	mov    edi,DWORD PTR [rax]
  402fea:	xor    eax,eax
  402fec:	call   402d00 <__sprintf_chk@plt+0x1b20>
  402ff1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402ffc:	nop    DWORD PTR [rax+0x0]
  403000:	test   rdi,rdi
  403003:	je     403028 <error@@Base+0x108>
  403005:	push   rbp
  403006:	push   rbx
  403007:	mov    rbp,rsi
  40300a:	mov    rbx,rdi
  40300d:	sub    rsp,0x8
  403011:	call   401170 <fopen@plt>
  403016:	test   rax,rax
  403019:	je     403040 <error@@Base+0x120>
  40301b:	add    rsp,0x8
  40301f:	pop    rbx
  403020:	pop    rbp
  403021:	ret    
  403022:	nop    WORD PTR [rax+rax*1+0x0]
  403028:	cmp    BYTE PTR [rsi],0x72
  40302b:	je     403060 <error@@Base+0x140>
  40302d:	mov    rax,QWORD PTR [rip+0x3f9c]        # 406fd0 <error@@Base+0x40b0>
  403034:	mov    rax,QWORD PTR [rax]
  403037:	ret    
  403038:	nop    DWORD PTR [rax+rax*1+0x0]
  403040:	cmp    BYTE PTR [rbp+0x0],0x77
  403044:	mov    rsi,rbx
  403047:	je     403070 <error@@Base+0x150>
  403049:	lea    rdi,[rip+0x1931]        # 404981 <error@@Base+0x1a61>
  403050:	xor    eax,eax
  403052:	call   402fb0 <error@@Base+0x90>
  403057:	nop    WORD PTR [rax+rax*1+0x0]
  403060:	mov    rax,QWORD PTR [rip+0x3f71]        # 406fd8 <error@@Base+0x40b8>
  403067:	mov    rax,QWORD PTR [rax]
  40306a:	ret    
  40306b:	nop    DWORD PTR [rax+rax*1+0x0]
  403070:	lea    rdi,[rip+0x18f4]        # 40496b <error@@Base+0x1a4b>
  403077:	call   402fb0 <error@@Base+0x90>
  40307c:	nop    DWORD PTR [rax+0x0]
  403080:	push   r15
  403082:	push   r14
  403084:	xor    eax,eax
  403086:	push   r13
  403088:	push   r12
  40308a:	mov    r15,rsi
  40308d:	push   rbp
  40308e:	push   rbx
  40308f:	mov    rbx,rdi
  403092:	sub    rsp,0x38
  403096:	mov    QWORD PTR [rsp+0x20],rdi
  40309b:	mov    rdi,QWORD PTR [rsi]
  40309e:	mov    QWORD PTR [rsp+0x28],rdx
  4030a3:	mov    QWORD PTR [rsp+0x8],rcx
  4030a8:	call   402e70 <__sprintf_chk@plt+0x1c90>
  4030ad:	mov    rcx,0x161c960
  4030b4:	lea    rsi,[rip+0xfffffffffffffec5]        # 402f80 <error@@Base+0x60>
  4030bb:	mov    edi,0x2
  4030c0:	mov    QWORD PTR [rcx],rax
  4030c3:	call   401120 <__sysv_signal@plt>
  4030c8:	lea    rsi,[rip+0xfffffffffffffeb1]        # 402f80 <error@@Base+0x60>
  4030cf:	mov    edi,0xf
  4030d4:	call   401120 <__sysv_signal@plt>
  4030d9:	mov    r9d,DWORD PTR [rbx]
  4030dc:	cmp    r9d,0x1
  4030e0:	je     40328c <error@@Base+0x36c>
  4030e6:	mov    rdx,QWORD PTR [rsp+0x8]
  4030eb:	jle    403298 <error@@Base+0x378>
  4030f1:	mov    r13d,0x1
  4030f7:	xor    r12d,r12d
  4030fa:	mov    ebx,0x1
  4030ff:	mov    r8d,r13d
  403102:	mov    r14,rdx
  403105:	mov    r13d,r9d
  403108:	jmp    40312c <error@@Base+0x20c>
  40310a:	nop    WORD PTR [rax+rax*1+0x0]
  403110:	movsx  rax,r12w
  403114:	add    r12d,0x1
  403118:	mov    QWORD PTR [r15+rax*8],rbp
  40311c:	add    ebx,0x1
  40311f:	movsx  r8d,bx
  403123:	cmp    r8d,r13d
  403126:	jge    403240 <error@@Base+0x320>
  40312c:	movsx  rax,bx
  403130:	mov    rbp,QWORD PTR [r15+rax*8]
  403134:	lea    r9,[rax*8+0x0]
  40313c:	cmp    BYTE PTR [rbp+0x0],0x2d
  403140:	jne    403110 <error@@Base+0x1f0>
  403142:	movzx  edx,BYTE PTR [rbp+0x1]
  403146:	mov    DWORD PTR [rsp+0x14],r8d
  40314b:	mov    QWORD PTR [rsp+0x18],r9
  403150:	test   dl,dl
  403152:	mov    BYTE PTR [rsp+0x8],dl
  403156:	je     403110 <error@@Base+0x1f0>
  403158:	mov    rdi,rbp
  40315b:	call   401090 <strlen@plt>
  403160:	mov    ecx,0x6
  403165:	cmp    rax,0x6
  403169:	lea    rsi,[rip+0x1825]        # 404995 <error@@Base+0x1a75>
  403170:	cmovle rcx,rax
  403174:	mov    rdi,rbp
  403177:	cmp    rcx,rcx
  40317a:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40317c:	je     40329d <error@@Base+0x37d>
  403182:	mov    r8d,DWORD PTR [rsp+0x14]
  403187:	xor    edi,edi
  403189:	movzx  edx,BYTE PTR [rsp+0x8]
  40318e:	add    r8d,0x1
  403192:	cmp    r8d,r13d
  403195:	jge    4031a1 <error@@Base+0x281>
  403197:	mov    r9,QWORD PTR [rsp+0x18]
  40319c:	mov    rdi,QWORD PTR [r15+r9*1+0x8]
  4031a1:	test   r14,r14
  4031a4:	je     4031da <error@@Base+0x2ba>
  4031a6:	movzx  eax,BYTE PTR [r14]
  4031aa:	test   al,al
  4031ac:	je     4031da <error@@Base+0x2ba>
  4031ae:	cmp    al,dl
  4031b0:	je     4031f0 <error@@Base+0x2d0>
  4031b2:	xor    eax,eax
  4031b4:	jmp    4031c4 <error@@Base+0x2a4>
  4031b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4031c0:	cmp    dl,cl
  4031c2:	je     4031f8 <error@@Base+0x2d8>
  4031c4:	add    eax,0x1
  4031c7:	movsx  rcx,ax
  4031cb:	lea    rcx,[rcx+rcx*2]
  4031cf:	lea    rsi,[r14+rcx*8]
  4031d3:	movzx  ecx,BYTE PTR [rsi]
  4031d6:	test   cl,cl
  4031d8:	jne    4031c0 <error@@Base+0x2a0>
  4031da:	lea    rdi,[rip+0x17ba]        # 40499b <error@@Base+0x1a7b>
  4031e1:	mov    rsi,rbp
  4031e4:	xor    eax,eax
  4031e6:	call   402fb0 <error@@Base+0x90>
  4031eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4031f0:	mov    rsi,r14
  4031f3:	nop    DWORD PTR [rax+rax*1+0x0]
  4031f8:	mov    rax,QWORD PTR [rsi+0x8]
  4031fc:	test   rax,rax
  4031ff:	je     403260 <error@@Base+0x340>
  403201:	test   rdi,rdi
  403204:	movzx  edx,BYTE PTR [rbp+0x2]
  403208:	jne    40320e <error@@Base+0x2ee>
  40320a:	test   dl,dl
  40320c:	je     403260 <error@@Base+0x340>
  40320e:	cmp    QWORD PTR [rax],0x0
  403212:	jne    4032a9 <error@@Base+0x389>
  403218:	lea    rcx,[rbp+0x2]
  40321c:	test   dl,dl
  40321e:	cmovne rdi,rcx
  403222:	mov    QWORD PTR [rax],rdi
  403225:	cmp    BYTE PTR [rbp+0x2],0x0
  403229:	lea    eax,[rbx+0x1]
  40322c:	cmove  ebx,eax
  40322f:	add    ebx,0x1
  403232:	movsx  r8d,bx
  403236:	cmp    r8d,r13d
  403239:	jl     40312c <error@@Base+0x20c>
  40323f:	nop
  403240:	movsx  r12d,r12w
  403244:	mov    rax,QWORD PTR [rsp+0x20]
  403249:	mov    DWORD PTR [rax],r12d
  40324c:	add    rsp,0x38
  403250:	pop    rbx
  403251:	pop    rbp
  403252:	pop    r12
  403254:	pop    r13
  403256:	pop    r14
  403258:	pop    r15
  40325a:	ret    
  40325b:	nop    DWORD PTR [rax+rax*1+0x0]
  403260:	mov    rax,QWORD PTR [rsi+0x10]
  403264:	test   rax,rax
  403267:	je     4031da <error@@Base+0x2ba>
  40326d:	cmp    BYTE PTR [rbp+0x2],0x0
  403271:	jne    4031da <error@@Base+0x2ba>
  403277:	cmp    BYTE PTR [rax],0x0
  40327a:	jne    4032a9 <error@@Base+0x389>
  40327c:	mov    BYTE PTR [rax],0x1
  40327f:	mov    rax,QWORD PTR [rsp+0x20]
  403284:	mov    r13d,DWORD PTR [rax]
  403287:	jmp    40311c <error@@Base+0x1fc>
  40328c:	mov    rax,0x40710c
  403293:	cmp    BYTE PTR [rax],0x0
  403296:	jne    40329d <error@@Base+0x37d>
  403298:	xor    r12d,r12d
  40329b:	jmp    403244 <error@@Base+0x324>
  40329d:	mov    rdi,QWORD PTR [rsp+0x28]
  4032a2:	xor    eax,eax
  4032a4:	call   402ed0 <__sprintf_chk@plt+0x1cf0>
  4032a9:	lea    rdi,[rip+0x16fa]        # 4049aa <error@@Base+0x1a8a>
  4032b0:	mov    rsi,rbp
  4032b3:	xor    eax,eax
  4032b5:	call   402fb0 <error@@Base+0x90>
  4032ba:	nop    WORD PTR [rax+rax*1+0x0]
  4032c0:	mov    rax,0x161c960
  4032c7:	mov    r8,rdi
  4032ca:	lea    rdx,[rip+0x168d]        # 40495e <error@@Base+0x1a3e>
  4032d1:	mov    r9,rsi
  4032d4:	mov    esi,0x1
  4032d9:	mov    rcx,QWORD PTR [rax]
  4032dc:	mov    rax,QWORD PTR [rip+0x3d15]        # 406ff8 <error@@Base+0x40d8>
  4032e3:	mov    rdi,QWORD PTR [rax]
  4032e6:	xor    eax,eax
  4032e8:	jmp    4011a0 <__fprintf_chk@plt>
  4032ed:	nop    DWORD PTR [rax]
  4032f0:	mov    QWORD PTR [rdi+0x8],0x0
  4032f8:	mov    QWORD PTR [rdi],0x0
  4032ff:	mov    QWORD PTR [rdi+0x10],0x0
  403307:	mov    QWORD PTR [rdi+0x18],0x0
  40330f:	ret    
  403310:	push   rbx
  403311:	mov    rax,QWORD PTR [rdi]
  403314:	mov    rbx,rdi
  403317:	mov    QWORD PTR [rsi],0x0
  40331e:	test   rax,rax
  403321:	mov    QWORD PTR [rsi+0x8],rax
  403325:	mov    QWORD PTR [rdi],rsi
  403328:	je     403350 <error@@Base+0x430>
  40332a:	mov    QWORD PTR [rax],rsi
  40332d:	mov    rdi,QWORD PTR [rbx+0x10]
  403331:	test   rdi,rdi
  403334:	je     403343 <error@@Base+0x423>
  403336:	call   401030 <free@plt>
  40333b:	mov    QWORD PTR [rbx+0x10],0x0
  403343:	add    QWORD PTR [rbx+0x18],0x1
  403348:	pop    rbx
  403349:	ret    
  40334a:	nop    WORD PTR [rax+rax*1+0x0]
  403350:	mov    QWORD PTR [rdi+0x8],rsi
  403354:	jmp    40332d <error@@Base+0x40d>
  403356:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403360:	push   rbx
  403361:	mov    rax,QWORD PTR [rdi+0x8]
  403365:	mov    rbx,rdi
  403368:	mov    QWORD PTR [rsi+0x8],0x0
  403370:	test   rax,rax
  403373:	mov    QWORD PTR [rsi],rax
  403376:	je     4033a0 <error@@Base+0x480>
  403378:	mov    QWORD PTR [rax+0x8],rsi
  40337c:	mov    rdi,QWORD PTR [rbx+0x10]
  403380:	mov    QWORD PTR [rbx+0x8],rsi
  403384:	test   rdi,rdi
  403387:	je     403396 <error@@Base+0x476>
  403389:	call   401030 <free@plt>
  40338e:	mov    QWORD PTR [rbx+0x10],0x0
  403396:	add    QWORD PTR [rbx+0x18],0x1
  40339b:	pop    rbx
  40339c:	ret    
  40339d:	nop    DWORD PTR [rax]
  4033a0:	mov    QWORD PTR [rdi],rsi
  4033a3:	jmp    40337c <error@@Base+0x45c>
  4033a5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4033b0:	mov    rax,QWORD PTR [rdx]
  4033b3:	push   rbx
  4033b4:	mov    rbx,rdi
  4033b7:	mov    QWORD PTR [rsi+0x8],rdx
  4033bb:	test   rax,rax
  4033be:	mov    QWORD PTR [rsi],rax
  4033c1:	je     4033f0 <error@@Base+0x4d0>
  4033c3:	mov    QWORD PTR [rax+0x8],rsi
  4033c7:	mov    rdi,QWORD PTR [rbx+0x10]
  4033cb:	mov    QWORD PTR [rdx],rsi
  4033ce:	test   rdi,rdi
  4033d1:	je     4033e0 <error@@Base+0x4c0>
  4033d3:	call   401030 <free@plt>
  4033d8:	mov    QWORD PTR [rbx+0x10],0x0
  4033e0:	add    QWORD PTR [rbx+0x18],0x1
  4033e5:	pop    rbx
  4033e6:	ret    
  4033e7:	nop    WORD PTR [rax+rax*1+0x0]
  4033f0:	mov    QWORD PTR [rdi],rsi
  4033f3:	jmp    4033c7 <error@@Base+0x4a7>
  4033f5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  403400:	mov    rax,QWORD PTR [rsi+0x8]
  403404:	push   rbx
  403405:	mov    rbx,rdi
  403408:	mov    QWORD PTR [rdx],rsi
  40340b:	test   rax,rax
  40340e:	mov    QWORD PTR [rdx+0x8],rax
  403412:	mov    QWORD PTR [rsi+0x8],rdx
  403416:	je     403440 <error@@Base+0x520>
  403418:	mov    QWORD PTR [rax],rdx
  40341b:	mov    rdi,QWORD PTR [rbx+0x10]
  40341f:	test   rdi,rdi
  403422:	je     403431 <error@@Base+0x511>
  403424:	call   401030 <free@plt>
  403429:	mov    QWORD PTR [rbx+0x10],0x0
  403431:	add    QWORD PTR [rbx+0x18],0x1
  403436:	pop    rbx
  403437:	ret    
  403438:	nop    DWORD PTR [rax+rax*1+0x0]
  403440:	mov    QWORD PTR [rdi+0x8],rdx
  403444:	jmp    40341b <error@@Base+0x4fb>
  403446:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403450:	mov    rax,QWORD PTR [rsi]
  403453:	push   rbx
  403454:	mov    rbx,rdi
  403457:	mov    rdx,QWORD PTR [rsi+0x8]
  40345b:	test   rax,rax
  40345e:	je     4034a0 <error@@Base+0x580>
  403460:	mov    QWORD PTR [rax+0x8],rdx
  403464:	mov    rdx,QWORD PTR [rsi+0x8]
  403468:	test   rdx,rdx
  40346b:	je     4034b0 <error@@Base+0x590>
  40346d:	mov    QWORD PTR [rdx],rax
  403470:	mov    rdi,QWORD PTR [rbx+0x10]
  403474:	mov    QWORD PTR [rsi+0x8],0x0
  40347c:	mov    QWORD PTR [rsi],0x0
  403483:	test   rdi,rdi
  403486:	je     403495 <error@@Base+0x575>
  403488:	call   401030 <free@plt>
  40348d:	mov    QWORD PTR [rbx+0x10],0x0
  403495:	sub    QWORD PTR [rbx+0x18],0x1
  40349a:	pop    rbx
  40349b:	ret    
  40349c:	nop    DWORD PTR [rax+0x0]
  4034a0:	test   rdx,rdx
  4034a3:	mov    QWORD PTR [rdi],rdx
  4034a6:	jne    40346d <error@@Base+0x54d>
  4034a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4034b0:	mov    QWORD PTR [rbx+0x8],rax
  4034b4:	jmp    403470 <error@@Base+0x550>
  4034b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4034c0:	cmp    QWORD PTR [rdi+0x10],0x0
  4034c5:	je     4034d0 <error@@Base+0x5b0>
  4034c7:	ret    
  4034c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4034d0:	mov    rax,QWORD PTR [rdi+0x18]
  4034d4:	test   rax,rax
  4034d7:	je     4034c7 <error@@Base+0x5a7>
  4034d9:	push   rbx
  4034da:	mov    esi,0x8
  4034df:	mov    rbx,rdi
  4034e2:	mov    rdi,rax
  4034e5:	xor    eax,eax
  4034e7:	call   402f60 <error@@Base+0x40>
  4034ec:	mov    rdx,QWORD PTR [rbx]
  4034ef:	mov    QWORD PTR [rbx+0x10],rax
  4034f3:	test   rdx,rdx
  4034f6:	je     403510 <error@@Base+0x5f0>
  4034f8:	nop    DWORD PTR [rax+rax*1+0x0]
  403500:	mov    QWORD PTR [rax],rdx
  403503:	mov    rdx,QWORD PTR [rdx+0x8]
  403507:	add    rax,0x8
  40350b:	test   rdx,rdx
  40350e:	jne    403500 <error@@Base+0x5e0>
  403510:	pop    rbx
  403511:	ret    
  403512:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40351d:	nop    DWORD PTR [rax]
  403520:	push   r12
  403522:	push   rbp
  403523:	push   rbx
  403524:	mov    rbx,QWORD PTR [rdi]
  403527:	test   rbx,rbx
  40352a:	je     403556 <error@@Base+0x636>
  40352c:	mov    rbp,rdi
  40352f:	mov    r12,rsi
  403532:	nop    WORD PTR [rax+rax*1+0x0]
  403538:	mov    rsi,rbx
  40353b:	xor    eax,eax
  40353d:	mov    rdi,rbp
  403540:	call   403450 <error@@Base+0x530>
  403545:	mov    rdi,rbx
  403548:	xor    eax,eax
  40354a:	call   r12
  40354d:	mov    rbx,QWORD PTR [rbp+0x0]
  403551:	test   rbx,rbx
  403554:	jne    403538 <error@@Base+0x618>
  403556:	pop    rbx
  403557:	pop    rbp
  403558:	pop    r12
  40355a:	ret    
  40355b:	nop    DWORD PTR [rax+rax*1+0x0]
  403560:	endbr64 
  403564:	push   r15
  403566:	lea    r15,[rip+0x32bb]        # 406828 <error@@Base+0x3908>
  40356d:	push   r14
  40356f:	mov    r14,rdx
  403572:	push   r13
  403574:	mov    r13,rsi
  403577:	push   r12
  403579:	mov    r12d,edi
  40357c:	push   rbp
  40357d:	lea    rbp,[rip+0x32ac]        # 406830 <error@@Base+0x3910>
  403584:	push   rbx
  403585:	sub    rbp,r15
  403588:	sub    rsp,0x8
  40358c:	call   401000 <free@plt-0x30>
  403591:	sar    rbp,0x3
  403595:	je     4035b6 <error@@Base+0x696>
  403597:	xor    ebx,ebx
  403599:	nop    DWORD PTR [rax+0x0]
  4035a0:	mov    rdx,r14
  4035a3:	mov    rsi,r13
  4035a6:	mov    edi,r12d
  4035a9:	call   QWORD PTR [r15+rbx*8]
  4035ad:	add    rbx,0x1
  4035b1:	cmp    rbp,rbx
  4035b4:	jne    4035a0 <error@@Base+0x680>
  4035b6:	add    rsp,0x8
  4035ba:	pop    rbx
  4035bb:	pop    rbp
  4035bc:	pop    r12
  4035be:	pop    r13
  4035c0:	pop    r14
  4035c2:	pop    r15
  4035c4:	ret    
  4035c5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4035d0:	endbr64 
  4035d4:	ret    

Disassembly of section .fini:

00000000004035d8 <.fini>:
  4035d8:	endbr64 
  4035dc:	sub    rsp,0x8
  4035e0:	add    rsp,0x8
  4035e4:	ret    
