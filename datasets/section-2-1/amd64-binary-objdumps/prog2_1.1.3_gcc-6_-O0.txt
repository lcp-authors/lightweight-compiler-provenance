
../repos/prog2/1.1.3:     file format elf64-x86-64


Disassembly of section .init:

0000000000401000 <.init>:
  401000:	endbr64 
  401004:	sub    rsp,0x8
  401008:	mov    rax,QWORD PTR [rip+0x2fe9]        # 403ff8 <__gmon_start__>
  40100f:	test   rax,rax
  401012:	je     401016 <fclose@plt-0x1a>
  401014:	call   rax
  401016:	add    rsp,0x8
  40101a:	ret    

Disassembly of section .plt:

0000000000401020 <fclose@plt-0x10>:
  401020:	push   QWORD PTR [rip+0x2fe2]        # 404008 <_IO_stdin_used@@Base+0x2008>
  401026:	jmp    QWORD PTR [rip+0x2fe4]        # 404010 <_IO_stdin_used@@Base+0x2010>
  40102c:	nop    DWORD PTR [rax+0x0]

0000000000401030 <fclose@plt>:
  401030:	jmp    QWORD PTR [rip+0x2fe2]        # 404018 <fclose@GLIBC_2.2.5>
  401036:	push   0x0
  40103b:	jmp    401020 <fclose@plt-0x10>

0000000000401040 <__stack_chk_fail@plt>:
  401040:	jmp    QWORD PTR [rip+0x2fda]        # 404020 <__stack_chk_fail@GLIBC_2.4>
  401046:	push   0x1
  40104b:	jmp    401020 <fclose@plt-0x10>

0000000000401050 <printf@plt>:
  401050:	jmp    QWORD PTR [rip+0x2fd2]        # 404028 <printf@GLIBC_2.2.5>
  401056:	push   0x2
  40105b:	jmp    401020 <fclose@plt-0x10>

0000000000401060 <fopen@plt>:
  401060:	jmp    QWORD PTR [rip+0x2fca]        # 404030 <fopen@GLIBC_2.2.5>
  401066:	push   0x3
  40106b:	jmp    401020 <fclose@plt-0x10>

0000000000401070 <getc@plt>:
  401070:	jmp    QWORD PTR [rip+0x2fc2]        # 404038 <getc@GLIBC_2.2.5>
  401076:	push   0x4
  40107b:	jmp    401020 <fclose@plt-0x10>

Disassembly of section .text:

0000000000401080 <_start@@Base>:
  401080:	endbr64 
  401084:	xor    ebp,ebp
  401086:	mov    r9,rdx
  401089:	pop    rsi
  40108a:	mov    rdx,rsp
  40108d:	and    rsp,0xfffffffffffffff0
  401091:	push   rax
  401092:	push   rsp
  401093:	mov    r8,0x401400
  40109a:	mov    rcx,0x401390
  4010a1:	mov    rdi,0x4011d9
  4010a8:	call   QWORD PTR [rip+0x2f42]        # 403ff0 <__libc_start_main@GLIBC_2.2.5>
  4010ae:	hlt    
  4010af:	nop
  4010b0:	endbr64 
  4010b4:	ret    
  4010b5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4010bf:	nop
  4010c0:	mov    eax,0x404057
  4010c5:	push   rbp
  4010c6:	sub    rax,0x404050
  4010cc:	cmp    rax,0xe
  4010d0:	mov    rbp,rsp
  4010d3:	jbe    4010f0 <_start@@Base+0x70>
  4010d5:	mov    eax,0x0
  4010da:	test   rax,rax
  4010dd:	je     4010f0 <_start@@Base+0x70>
  4010df:	pop    rbp
  4010e0:	mov    edi,0x404050
  4010e5:	jmp    rax
  4010e7:	nop    WORD PTR [rax+rax*1+0x0]
  4010f0:	pop    rbp
  4010f1:	ret    
  4010f2:	nop    DWORD PTR [rax+0x0]
  4010f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401100:	mov    esi,0x404050
  401105:	push   rbp
  401106:	sub    rsi,0x404050
  40110d:	sar    rsi,0x3
  401111:	mov    rbp,rsp
  401114:	mov    rax,rsi
  401117:	shr    rax,0x3f
  40111b:	add    rsi,rax
  40111e:	sar    rsi,1
  401121:	je     401138 <_start@@Base+0xb8>
  401123:	mov    eax,0x0
  401128:	test   rax,rax
  40112b:	je     401138 <_start@@Base+0xb8>
  40112d:	pop    rbp
  40112e:	mov    edi,0x404050
  401133:	jmp    rax
  401135:	nop    DWORD PTR [rax]
  401138:	pop    rbp
  401139:	ret    
  40113a:	nop    WORD PTR [rax+rax*1+0x0]
  401140:	cmp    BYTE PTR [rip+0x2f09],0x0        # 404050 <__bss_start@@Base>
  401147:	jne    40115a <_start@@Base+0xda>
  401149:	push   rbp
  40114a:	mov    rbp,rsp
  40114d:	call   4010c0 <_start@@Base+0x40>
  401152:	pop    rbp
  401153:	mov    BYTE PTR [rip+0x2ef6],0x1        # 404050 <__bss_start@@Base>
  40115a:	repz ret 
  40115c:	nop    DWORD PTR [rax+0x0]
  401160:	mov    edi,0x403e18
  401165:	cmp    QWORD PTR [rdi],0x0
  401169:	jne    401170 <_start@@Base+0xf0>
  40116b:	jmp    401100 <_start@@Base+0x80>
  40116d:	nop    DWORD PTR [rax]
  401170:	mov    eax,0x0
  401175:	test   rax,rax
  401178:	je     40116b <_start@@Base+0xeb>
  40117a:	push   rbp
  40117b:	mov    rbp,rsp
  40117e:	call   rax
  401180:	pop    rbp
  401181:	jmp    401100 <_start@@Base+0x80>

0000000000401186 <in_array@@Base>:
  401186:	push   rbp
  401187:	mov    rbp,rsp
  40118a:	mov    DWORD PTR [rbp-0x14],edi
  40118d:	mov    QWORD PTR [rbp-0x20],rsi
  401191:	mov    DWORD PTR [rbp-0x18],edx
  401194:	mov    DWORD PTR [rbp-0x4],0x0
  40119b:	mov    DWORD PTR [rbp-0x4],0x0
  4011a2:	jmp    4011ca <in_array@@Base+0x44>
  4011a4:	mov    eax,DWORD PTR [rbp-0x4]
  4011a7:	cdqe   
  4011a9:	lea    rdx,[rax*4+0x0]
  4011b1:	mov    rax,QWORD PTR [rbp-0x20]
  4011b5:	add    rax,rdx
  4011b8:	mov    eax,DWORD PTR [rax]
  4011ba:	cmp    eax,DWORD PTR [rbp-0x14]
  4011bd:	jne    4011c6 <in_array@@Base+0x40>
  4011bf:	mov    eax,0x1
  4011c4:	jmp    4011d7 <in_array@@Base+0x51>
  4011c6:	add    DWORD PTR [rbp-0x4],0x1
  4011ca:	mov    eax,DWORD PTR [rbp-0x4]
  4011cd:	cmp    eax,DWORD PTR [rbp-0x18]
  4011d0:	jle    4011a4 <in_array@@Base+0x1e>
  4011d2:	mov    eax,0x0
  4011d7:	pop    rbp
  4011d8:	ret    

00000000004011d9 <main@@Base>:
  4011d9:	push   rbp
  4011da:	mov    rbp,rsp
  4011dd:	sub    rsp,0x50
  4011e1:	mov    rax,QWORD PTR fs:0x28
  4011ea:	mov    QWORD PTR [rbp-0x8],rax
  4011ee:	xor    eax,eax
  4011f0:	mov    DWORD PTR [rbp-0x30],0x83
  4011f7:	mov    DWORD PTR [rbp-0x2c],0xa3
  4011fe:	mov    DWORD PTR [rbp-0x28],0x95
  401205:	mov    DWORD PTR [rbp-0x24],0xb5
  40120c:	mov    DWORD PTR [rbp-0x20],0x87
  401213:	mov    DWORD PTR [rbp-0x1c],0xa7
  40121a:	lea    rsi,[rip+0xde3]        # 402004 <_IO_stdin_used@@Base+0x4>
  401221:	lea    rdi,[rip+0xdde]        # 402006 <_IO_stdin_used@@Base+0x6>
  401228:	call   401060 <fopen@plt>
  40122d:	mov    QWORD PTR [rbp-0x38],rax
  401231:	mov    DWORD PTR [rbp-0x44],0x0
  401238:	mov    QWORD PTR [rbp-0x18],0x0
  401240:	mov    DWORD PTR [rbp-0x10],0x0
  401247:	mov    BYTE PTR [rbp-0xb],0x41
  40124b:	mov    BYTE PTR [rbp-0xa],0x4f
  40124f:	mov    BYTE PTR [rbp-0x9],0x43
  401253:	jmp    4012ec <main@@Base+0x113>
  401258:	mov    rax,QWORD PTR [rbp-0x38]
  40125c:	mov    rdi,rax
  40125f:	call   401070 <getc@plt>
  401264:	mov    DWORD PTR [rbp-0x44],eax
  401267:	cmp    DWORD PTR [rbp-0x44],0xc3
  40126e:	jne    4012ec <main@@Base+0x113>
  401270:	mov    rax,QWORD PTR [rbp-0x38]
  401274:	mov    rdi,rax
  401277:	call   401070 <getc@plt>
  40127c:	mov    DWORD PTR [rbp-0x44],eax
  40127f:	lea    rcx,[rbp-0x30]
  401283:	mov    eax,DWORD PTR [rbp-0x44]
  401286:	mov    edx,0x2
  40128b:	mov    rsi,rcx
  40128e:	mov    edi,eax
  401290:	call   401186 <in_array@@Base>
  401295:	test   eax,eax
  401297:	je     4012a4 <main@@Base+0xcb>
  401299:	mov    eax,DWORD PTR [rbp-0x18]
  40129c:	add    eax,0x1
  40129f:	mov    DWORD PTR [rbp-0x18],eax
  4012a2:	jmp    4012ec <main@@Base+0x113>
  4012a4:	lea    rcx,[rbp-0x28]
  4012a8:	mov    eax,DWORD PTR [rbp-0x44]
  4012ab:	mov    edx,0x2
  4012b0:	mov    rsi,rcx
  4012b3:	mov    edi,eax
  4012b5:	call   401186 <in_array@@Base>
  4012ba:	test   eax,eax
  4012bc:	je     4012c9 <main@@Base+0xf0>
  4012be:	mov    eax,DWORD PTR [rbp-0x14]
  4012c1:	add    eax,0x1
  4012c4:	mov    DWORD PTR [rbp-0x14],eax
  4012c7:	jmp    4012ec <main@@Base+0x113>
  4012c9:	lea    rcx,[rbp-0x20]
  4012cd:	mov    eax,DWORD PTR [rbp-0x44]
  4012d0:	mov    edx,0x2
  4012d5:	mov    rsi,rcx
  4012d8:	mov    edi,eax
  4012da:	call   401186 <in_array@@Base>
  4012df:	test   eax,eax
  4012e1:	je     4012ec <main@@Base+0x113>
  4012e3:	mov    eax,DWORD PTR [rbp-0x10]
  4012e6:	add    eax,0x1
  4012e9:	mov    DWORD PTR [rbp-0x10],eax
  4012ec:	cmp    DWORD PTR [rbp-0x44],0xffffffff
  4012f0:	jne    401258 <main@@Base+0x7f>
  4012f6:	mov    eax,DWORD PTR [rbp-0x40]
  4012f9:	mov    DWORD PTR [rbp-0x3c],eax
  4012fc:	mov    rax,QWORD PTR [rbp-0x38]
  401300:	mov    rdi,rax
  401303:	call   401030 <fclose@plt>
  401308:	mov    DWORD PTR [rbp-0x40],0x0
  40130f:	jmp    40133e <main@@Base+0x165>
  401311:	mov    eax,DWORD PTR [rbp-0x40]
  401314:	cdqe   
  401316:	mov    edx,DWORD PTR [rbp+rax*4-0x18]
  40131a:	mov    eax,DWORD PTR [rbp-0x40]
  40131d:	cdqe   
  40131f:	movzx  eax,BYTE PTR [rbp+rax*1-0xb]
  401324:	movsx  eax,al
  401327:	mov    esi,eax
  401329:	lea    rdi,[rip+0xcf2]        # 402022 <_IO_stdin_used@@Base+0x22>
  401330:	mov    eax,0x0
  401335:	call   401050 <printf@plt>
  40133a:	add    DWORD PTR [rbp-0x40],0x1
  40133e:	cmp    DWORD PTR [rbp-0x40],0x1
  401342:	jle    401311 <main@@Base+0x138>
  401344:	mov    edx,DWORD PTR [rbp-0x10]
  401347:	mov    eax,DWORD PTR [rbp-0x40]
  40134a:	cdqe   
  40134c:	movzx  eax,BYTE PTR [rbp+rax*1-0xb]
  401351:	movsx  eax,al
  401354:	mov    esi,eax
  401356:	lea    rdi,[rip+0xcdc]        # 402039 <_IO_stdin_used@@Base+0x39>
  40135d:	mov    eax,0x0
  401362:	call   401050 <printf@plt>
  401367:	mov    eax,0x0
  40136c:	mov    rcx,QWORD PTR [rbp-0x8]
  401370:	xor    rcx,QWORD PTR fs:0x28
  401379:	je     401380 <main@@Base+0x1a7>
  40137b:	call   401040 <__stack_chk_fail@plt>
  401380:	leave  
  401381:	ret    
  401382:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40138c:	nop    DWORD PTR [rax+0x0]

0000000000401390 <__libc_csu_init@@Base>:
  401390:	endbr64 
  401394:	push   r15
  401396:	lea    r15,[rip+0x2a6b]        # 403e08 <_IO_stdin_used@@Base+0x1e08>
  40139d:	push   r14
  40139f:	mov    r14,rdx
  4013a2:	push   r13
  4013a4:	mov    r13,rsi
  4013a7:	push   r12
  4013a9:	mov    r12d,edi
  4013ac:	push   rbp
  4013ad:	lea    rbp,[rip+0x2a5c]        # 403e10 <_IO_stdin_used@@Base+0x1e10>
  4013b4:	push   rbx
  4013b5:	sub    rbp,r15
  4013b8:	sub    rsp,0x8
  4013bc:	call   401000 <fclose@plt-0x30>
  4013c1:	sar    rbp,0x3
  4013c5:	je     4013e6 <__libc_csu_init@@Base+0x56>
  4013c7:	xor    ebx,ebx
  4013c9:	nop    DWORD PTR [rax+0x0]
  4013d0:	mov    rdx,r14
  4013d3:	mov    rsi,r13
  4013d6:	mov    edi,r12d
  4013d9:	call   QWORD PTR [r15+rbx*8]
  4013dd:	add    rbx,0x1
  4013e1:	cmp    rbp,rbx
  4013e4:	jne    4013d0 <__libc_csu_init@@Base+0x40>
  4013e6:	add    rsp,0x8
  4013ea:	pop    rbx
  4013eb:	pop    rbp
  4013ec:	pop    r12
  4013ee:	pop    r13
  4013f0:	pop    r14
  4013f2:	pop    r15
  4013f4:	ret    
  4013f5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000401400 <__libc_csu_fini@@Base>:
  401400:	endbr64 
  401404:	ret    

Disassembly of section .fini:

0000000000401408 <.fini>:
  401408:	endbr64 
  40140c:	sub    rsp,0x8
  401410:	add    rsp,0x8
  401414:	ret    
