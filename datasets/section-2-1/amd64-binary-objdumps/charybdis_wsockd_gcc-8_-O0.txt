
../repos/charybdis/wsockd/.libs/wsockd:     file format elf64-x86-64


Disassembly of section .init:

0000000000402000 <.init>:
  402000:	endbr64 
  402004:	sub    rsp,0x8
  402008:	mov    rax,QWORD PTR [rip+0x6fd9]        # 408fe8 <rb_base64_encode@plt+0x6908>
  40200f:	test   rax,rax
  402012:	je     402016 <dup2@plt-0x37a>
  402014:	call   rax
  402016:	add    rsp,0x8
  40201a:	ret    

Disassembly of section .plt:

0000000000402020 <.plt>:
  402020:	push   QWORD PTR [rip+0x6fe2]        # 409008 <rb_base64_encode@plt+0x6928>
  402026:	bnd jmp QWORD PTR [rip+0x6fe3]        # 409010 <rb_base64_encode@plt+0x6930>
  40202d:	nop    DWORD PTR [rax]
  402030:	endbr64 
  402034:	push   0x0
  402039:	bnd jmp 402020 <dup2@plt-0x370>
  40203f:	nop
  402040:	endbr64 
  402044:	push   0x1
  402049:	bnd jmp 402020 <dup2@plt-0x370>
  40204f:	nop
  402050:	endbr64 
  402054:	push   0x2
  402059:	bnd jmp 402020 <dup2@plt-0x370>
  40205f:	nop
  402060:	endbr64 
  402064:	push   0x3
  402069:	bnd jmp 402020 <dup2@plt-0x370>
  40206f:	nop
  402070:	endbr64 
  402074:	push   0x4
  402079:	bnd jmp 402020 <dup2@plt-0x370>
  40207f:	nop
  402080:	endbr64 
  402084:	push   0x5
  402089:	bnd jmp 402020 <dup2@plt-0x370>
  40208f:	nop
  402090:	endbr64 
  402094:	push   0x6
  402099:	bnd jmp 402020 <dup2@plt-0x370>
  40209f:	nop
  4020a0:	endbr64 
  4020a4:	push   0x7
  4020a9:	bnd jmp 402020 <dup2@plt-0x370>
  4020af:	nop
  4020b0:	endbr64 
  4020b4:	push   0x8
  4020b9:	bnd jmp 402020 <dup2@plt-0x370>
  4020bf:	nop
  4020c0:	endbr64 
  4020c4:	push   0x9
  4020c9:	bnd jmp 402020 <dup2@plt-0x370>
  4020cf:	nop
  4020d0:	endbr64 
  4020d4:	push   0xa
  4020d9:	bnd jmp 402020 <dup2@plt-0x370>
  4020df:	nop
  4020e0:	endbr64 
  4020e4:	push   0xb
  4020e9:	bnd jmp 402020 <dup2@plt-0x370>
  4020ef:	nop
  4020f0:	endbr64 
  4020f4:	push   0xc
  4020f9:	bnd jmp 402020 <dup2@plt-0x370>
  4020ff:	nop
  402100:	endbr64 
  402104:	push   0xd
  402109:	bnd jmp 402020 <dup2@plt-0x370>
  40210f:	nop
  402110:	endbr64 
  402114:	push   0xe
  402119:	bnd jmp 402020 <dup2@plt-0x370>
  40211f:	nop
  402120:	endbr64 
  402124:	push   0xf
  402129:	bnd jmp 402020 <dup2@plt-0x370>
  40212f:	nop
  402130:	endbr64 
  402134:	push   0x10
  402139:	bnd jmp 402020 <dup2@plt-0x370>
  40213f:	nop
  402140:	endbr64 
  402144:	push   0x11
  402149:	bnd jmp 402020 <dup2@plt-0x370>
  40214f:	nop
  402150:	endbr64 
  402154:	push   0x12
  402159:	bnd jmp 402020 <dup2@plt-0x370>
  40215f:	nop
  402160:	endbr64 
  402164:	push   0x13
  402169:	bnd jmp 402020 <dup2@plt-0x370>
  40216f:	nop
  402170:	endbr64 
  402174:	push   0x14
  402179:	bnd jmp 402020 <dup2@plt-0x370>
  40217f:	nop
  402180:	endbr64 
  402184:	push   0x15
  402189:	bnd jmp 402020 <dup2@plt-0x370>
  40218f:	nop
  402190:	endbr64 
  402194:	push   0x16
  402199:	bnd jmp 402020 <dup2@plt-0x370>
  40219f:	nop
  4021a0:	endbr64 
  4021a4:	push   0x17
  4021a9:	bnd jmp 402020 <dup2@plt-0x370>
  4021af:	nop
  4021b0:	endbr64 
  4021b4:	push   0x18
  4021b9:	bnd jmp 402020 <dup2@plt-0x370>
  4021bf:	nop
  4021c0:	endbr64 
  4021c4:	push   0x19
  4021c9:	bnd jmp 402020 <dup2@plt-0x370>
  4021cf:	nop
  4021d0:	endbr64 
  4021d4:	push   0x1a
  4021d9:	bnd jmp 402020 <dup2@plt-0x370>
  4021df:	nop
  4021e0:	endbr64 
  4021e4:	push   0x1b
  4021e9:	bnd jmp 402020 <dup2@plt-0x370>
  4021ef:	nop
  4021f0:	endbr64 
  4021f4:	push   0x1c
  4021f9:	bnd jmp 402020 <dup2@plt-0x370>
  4021ff:	nop
  402200:	endbr64 
  402204:	push   0x1d
  402209:	bnd jmp 402020 <dup2@plt-0x370>
  40220f:	nop
  402210:	endbr64 
  402214:	push   0x1e
  402219:	bnd jmp 402020 <dup2@plt-0x370>
  40221f:	nop
  402220:	endbr64 
  402224:	push   0x1f
  402229:	bnd jmp 402020 <dup2@plt-0x370>
  40222f:	nop
  402230:	endbr64 
  402234:	push   0x20
  402239:	bnd jmp 402020 <dup2@plt-0x370>
  40223f:	nop
  402240:	endbr64 
  402244:	push   0x21
  402249:	bnd jmp 402020 <dup2@plt-0x370>
  40224f:	nop
  402250:	endbr64 
  402254:	push   0x22
  402259:	bnd jmp 402020 <dup2@plt-0x370>
  40225f:	nop
  402260:	endbr64 
  402264:	push   0x23
  402269:	bnd jmp 402020 <dup2@plt-0x370>
  40226f:	nop
  402270:	endbr64 
  402274:	push   0x24
  402279:	bnd jmp 402020 <dup2@plt-0x370>
  40227f:	nop
  402280:	endbr64 
  402284:	push   0x25
  402289:	bnd jmp 402020 <dup2@plt-0x370>
  40228f:	nop
  402290:	endbr64 
  402294:	push   0x26
  402299:	bnd jmp 402020 <dup2@plt-0x370>
  40229f:	nop
  4022a0:	endbr64 
  4022a4:	push   0x27
  4022a9:	bnd jmp 402020 <dup2@plt-0x370>
  4022af:	nop
  4022b0:	endbr64 
  4022b4:	push   0x28
  4022b9:	bnd jmp 402020 <dup2@plt-0x370>
  4022bf:	nop
  4022c0:	endbr64 
  4022c4:	push   0x29
  4022c9:	bnd jmp 402020 <dup2@plt-0x370>
  4022cf:	nop
  4022d0:	endbr64 
  4022d4:	push   0x2a
  4022d9:	bnd jmp 402020 <dup2@plt-0x370>
  4022df:	nop
  4022e0:	endbr64 
  4022e4:	push   0x2b
  4022e9:	bnd jmp 402020 <dup2@plt-0x370>
  4022ef:	nop
  4022f0:	endbr64 
  4022f4:	push   0x2c
  4022f9:	bnd jmp 402020 <dup2@plt-0x370>
  4022ff:	nop
  402300:	endbr64 
  402304:	push   0x2d
  402309:	bnd jmp 402020 <dup2@plt-0x370>
  40230f:	nop
  402310:	endbr64 
  402314:	push   0x2e
  402319:	bnd jmp 402020 <dup2@plt-0x370>
  40231f:	nop
  402320:	endbr64 
  402324:	push   0x2f
  402329:	bnd jmp 402020 <dup2@plt-0x370>
  40232f:	nop
  402330:	endbr64 
  402334:	push   0x30
  402339:	bnd jmp 402020 <dup2@plt-0x370>
  40233f:	nop
  402340:	endbr64 
  402344:	push   0x31
  402349:	bnd jmp 402020 <dup2@plt-0x370>
  40234f:	nop
  402350:	endbr64 
  402354:	push   0x32
  402359:	bnd jmp 402020 <dup2@plt-0x370>
  40235f:	nop
  402360:	endbr64 
  402364:	push   0x33
  402369:	bnd jmp 402020 <dup2@plt-0x370>
  40236f:	nop
  402370:	endbr64 
  402374:	push   0x34
  402379:	bnd jmp 402020 <dup2@plt-0x370>
  40237f:	nop
  402380:	endbr64 
  402384:	push   0x35
  402389:	bnd jmp 402020 <dup2@plt-0x370>
  40238f:	nop

Disassembly of section .plt.sec:

0000000000402390 <dup2@plt>:
  402390:	endbr64 
  402394:	bnd jmp QWORD PTR [rip+0x6c7d]        # 409018 <rb_base64_encode@plt+0x6938>
  40239b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004023a0 <rb_get_type@plt>:
  4023a0:	endbr64 
  4023a4:	bnd jmp QWORD PTR [rip+0x6c75]        # 409020 <rb_base64_encode@plt+0x6940>
  4023ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004023b0 <memset@plt>:
  4023b0:	endbr64 
  4023b4:	bnd jmp QWORD PTR [rip+0x6c6d]        # 409028 <rb_base64_encode@plt+0x6948>
  4023bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004023c0 <rb_event_addish@plt>:
  4023c0:	endbr64 
  4023c4:	bnd jmp QWORD PTR [rip+0x6c65]        # 409030 <rb_base64_encode@plt+0x6950>
  4023cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004023d0 <rb_ignore_errno@plt>:
  4023d0:	endbr64 
  4023d4:	bnd jmp QWORD PTR [rip+0x6c5d]        # 409038 <rb_base64_encode@plt+0x6958>
  4023db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004023e0 <close@plt>:
  4023e0:	endbr64 
  4023e4:	bnd jmp QWORD PTR [rip+0x6c55]        # 409040 <rb_base64_encode@plt+0x6960>
  4023eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004023f0 <rb_setselect@plt>:
  4023f0:	endbr64 
  4023f4:	bnd jmp QWORD PTR [rip+0x6c4d]        # 409048 <rb_base64_encode@plt+0x6968>
  4023fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402400 <rb_send_fd_buf@plt>:
  402400:	endbr64 
  402404:	bnd jmp QWORD PTR [rip+0x6c45]        # 409050 <rb_base64_encode@plt+0x6970>
  40240b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402410 <htons@plt>:
  402410:	endbr64 
  402414:	bnd jmp QWORD PTR [rip+0x6c3d]        # 409058 <rb_base64_encode@plt+0x6978>
  40241b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402420 <exit@plt>:
  402420:	endbr64 
  402424:	bnd jmp QWORD PTR [rip+0x6c35]        # 409060 <rb_base64_encode@plt+0x6980>
  40242b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402430 <__assert_fail@plt>:
  402430:	endbr64 
  402434:	bnd jmp QWORD PTR [rip+0x6c2d]        # 409068 <rb_base64_encode@plt+0x6988>
  40243b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402440 <rb_set_nb@plt>:
  402440:	endbr64 
  402444:	bnd jmp QWORD PTR [rip+0x6c25]        # 409070 <rb_base64_encode@plt+0x6990>
  40244b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402450 <rb_linebuf_parse@plt>:
  402450:	endbr64 
  402454:	bnd jmp QWORD PTR [rip+0x6c1d]        # 409078 <rb_base64_encode@plt+0x6998>
  40245b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402460 <rb_strlcpy@plt>:
  402460:	endbr64 
  402464:	bnd jmp QWORD PTR [rip+0x6c15]        # 409080 <rb_base64_encode@plt+0x69a0>
  40246b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402470 <rb_init_rawbuffers@plt>:
  402470:	endbr64 
  402474:	bnd jmp QWORD PTR [rip+0x6c0d]        # 409088 <rb_base64_encode@plt+0x69a8>
  40247b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402480 <free@plt>:
  402480:	endbr64 
  402484:	bnd jmp QWORD PTR [rip+0x6c05]        # 409090 <rb_base64_encode@plt+0x69b0>
  40248b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402490 <strlen@plt>:
  402490:	endbr64 
  402494:	bnd jmp QWORD PTR [rip+0x6bfd]        # 409098 <rb_base64_encode@plt+0x69b8>
  40249b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004024a0 <rb_lib_loop@plt>:
  4024a0:	endbr64 
  4024a4:	bnd jmp QWORD PTR [rip+0x6bf5]        # 4090a0 <rb_base64_encode@plt+0x69c0>
  4024ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004024b0 <rb_read@plt>:
  4024b0:	endbr64 
  4024b4:	bnd jmp QWORD PTR [rip+0x6bed]        # 4090a8 <rb_base64_encode@plt+0x69c8>
  4024bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004024c0 <rb_set_type@plt>:
  4024c0:	endbr64 
  4024c4:	bnd jmp QWORD PTR [rip+0x6be5]        # 4090b0 <rb_base64_encode@plt+0x69d0>
  4024cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004024d0 <rb_linebuf_get@plt>:
  4024d0:	endbr64 
  4024d4:	bnd jmp QWORD PTR [rip+0x6bdd]        # 4090b8 <rb_base64_encode@plt+0x69d8>
  4024db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004024e0 <ntohs@plt>:
  4024e0:	endbr64 
  4024e4:	bnd jmp QWORD PTR [rip+0x6bd5]        # 4090c0 <rb_base64_encode@plt+0x69e0>
  4024eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004024f0 <rb_linebuf_flush@plt>:
  4024f0:	endbr64 
  4024f4:	bnd jmp QWORD PTR [rip+0x6bcd]        # 4090c8 <rb_base64_encode@plt+0x69e8>
  4024fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402500 <rb_linebuf_donebuf@plt>:
  402500:	endbr64 
  402504:	bnd jmp QWORD PTR [rip+0x6bc5]        # 4090d0 <rb_base64_encode@plt+0x69f0>
  40250b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402510 <strerror@plt>:
  402510:	endbr64 
  402514:	bnd jmp QWORD PTR [rip+0x6bbd]        # 4090d8 <rb_base64_encode@plt+0x69f8>
  40251b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402520 <sigaction@plt>:
  402520:	endbr64 
  402524:	bnd jmp QWORD PTR [rip+0x6bb5]        # 4090e0 <rb_base64_encode@plt+0x6a00>
  40252b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402530 <rb_strcasestr@plt>:
  402530:	endbr64 
  402534:	bnd jmp QWORD PTR [rip+0x6bad]        # 4090e8 <rb_base64_encode@plt+0x6a08>
  40253b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402540 <rb_close@plt>:
  402540:	endbr64 
  402544:	bnd jmp QWORD PTR [rip+0x6ba5]        # 4090f0 <rb_base64_encode@plt+0x6a10>
  40254b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402550 <atoi@plt>:
  402550:	endbr64 
  402554:	bnd jmp QWORD PTR [rip+0x6b9d]        # 4090f8 <rb_base64_encode@plt+0x6a18>
  40255b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402560 <rb_rawbuf_length@plt>:
  402560:	endbr64 
  402564:	bnd jmp QWORD PTR [rip+0x6b95]        # 409100 <rb_base64_encode@plt+0x6a20>
  40256b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402570 <rb_free_rawbuffer@plt>:
  402570:	endbr64 
  402574:	bnd jmp QWORD PTR [rip+0x6b8d]        # 409108 <rb_base64_encode@plt+0x6a28>
  40257b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402580 <vsnprintf@plt>:
  402580:	endbr64 
  402584:	bnd jmp QWORD PTR [rip+0x6b85]        # 409110 <rb_base64_encode@plt+0x6a30>
  40258b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402590 <getenv@plt>:
  402590:	endbr64 
  402594:	bnd jmp QWORD PTR [rip+0x6b7d]        # 409118 <rb_base64_encode@plt+0x6a38>
  40259b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004025a0 <rb_outofmemory@plt>:
  4025a0:	endbr64 
  4025a4:	bnd jmp QWORD PTR [rip+0x6b75]        # 409120 <rb_base64_encode@plt+0x6a40>
  4025ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004025b0 <__errno_location@plt>:
  4025b0:	endbr64 
  4025b4:	bnd jmp QWORD PTR [rip+0x6b6d]        # 409128 <rb_base64_encode@plt+0x6a48>
  4025bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004025c0 <sigaddset@plt>:
  4025c0:	endbr64 
  4025c4:	bnd jmp QWORD PTR [rip+0x6b65]        # 409130 <rb_base64_encode@plt+0x6a50>
  4025cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004025d0 <__stack_chk_fail@plt>:
  4025d0:	endbr64 
  4025d4:	bnd jmp QWORD PTR [rip+0x6b5d]        # 409138 <rb_base64_encode@plt+0x6a58>
  4025db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004025e0 <rb_rawbuf_get@plt>:
  4025e0:	endbr64 
  4025e4:	bnd jmp QWORD PTR [rip+0x6b55]        # 409140 <rb_base64_encode@plt+0x6a60>
  4025eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004025f0 <rb_lib_init@plt>:
  4025f0:	endbr64 
  4025f4:	bnd jmp QWORD PTR [rip+0x6b4d]        # 409148 <rb_base64_encode@plt+0x6a68>
  4025fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402600 <rb_new_rawbuffer@plt>:
  402600:	endbr64 
  402604:	bnd jmp QWORD PTR [rip+0x6b45]        # 409150 <rb_base64_encode@plt+0x6a70>
  40260b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402610 <rb_open@plt>:
  402610:	endbr64 
  402614:	bnd jmp QWORD PTR [rip+0x6b3d]        # 409158 <rb_base64_encode@plt+0x6a78>
  40261b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402620 <rb_recv_fd_buf@plt>:
  402620:	endbr64 
  402624:	bnd jmp QWORD PTR [rip+0x6b35]        # 409160 <rb_base64_encode@plt+0x6a80>
  40262b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402630 <calloc@plt>:
  402630:	endbr64 
  402634:	bnd jmp QWORD PTR [rip+0x6b2d]        # 409168 <rb_base64_encode@plt+0x6a88>
  40263b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402640 <getrlimit@plt>:
  402640:	endbr64 
  402644:	bnd jmp QWORD PTR [rip+0x6b25]        # 409170 <rb_base64_encode@plt+0x6a90>
  40264b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402650 <rb_linebuf_newbuf@plt>:
  402650:	endbr64 
  402654:	bnd jmp QWORD PTR [rip+0x6b1d]        # 409178 <rb_base64_encode@plt+0x6a98>
  40265b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402660 <rb_linebuf_init@plt>:
  402660:	endbr64 
  402664:	bnd jmp QWORD PTR [rip+0x6b15]        # 409180 <rb_base64_encode@plt+0x6aa0>
  40266b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402670 <sigemptyset@plt>:
  402670:	endbr64 
  402674:	bnd jmp QWORD PTR [rip+0x6b0d]        # 409188 <rb_base64_encode@plt+0x6aa8>
  40267b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402680 <fwrite@plt>:
  402680:	endbr64 
  402684:	bnd jmp QWORD PTR [rip+0x6b05]        # 409190 <rb_base64_encode@plt+0x6ab0>
  40268b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402690 <htonl@plt>:
  402690:	endbr64 
  402694:	bnd jmp QWORD PTR [rip+0x6afd]        # 409198 <rb_base64_encode@plt+0x6ab8>
  40269b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004026a0 <rb_rawbuf_append@plt>:
  4026a0:	endbr64 
  4026a4:	bnd jmp QWORD PTR [rip+0x6af5]        # 4091a0 <rb_base64_encode@plt+0x6ac0>
  4026ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004026b0 <rb_rawbuf_flush@plt>:
  4026b0:	endbr64 
  4026b4:	bnd jmp QWORD PTR [rip+0x6aed]        # 4091a8 <rb_base64_encode@plt+0x6ac8>
  4026bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004026c0 <memcpy@plt>:
  4026c0:	endbr64 
  4026c4:	bnd jmp QWORD PTR [rip+0x6ae5]        # 4091b0 <rb_base64_encode@plt+0x6ad0>
  4026cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004026d0 <open@plt>:
  4026d0:	endbr64 
  4026d4:	bnd jmp QWORD PTR [rip+0x6add]        # 4091b8 <rb_base64_encode@plt+0x6ad8>
  4026db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004026e0 <rb_base64_encode@plt>:
  4026e0:	endbr64 
  4026e4:	bnd jmp QWORD PTR [rip+0x6ad5]        # 4091c0 <rb_base64_encode@plt+0x6ae0>
  4026eb:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

00000000004026f0 <.text>:
  4026f0:	endbr64 
  4026f4:	xor    ebp,ebp
  4026f6:	mov    r9,rdx
  4026f9:	pop    rsi
  4026fa:	mov    rdx,rsp
  4026fd:	and    rsp,0xfffffffffffffff0
  402701:	push   rax
  402702:	push   rsp
  402703:	mov    r8,0x4069c0
  40270a:	mov    rcx,0x406950
  402711:	mov    rdi,0x404db6
  402718:	call   QWORD PTR [rip+0x68d2]        # 408ff0 <rb_base64_encode@plt+0x6910>
  40271e:	hlt    
  40271f:	nop
  402720:	endbr64 
  402724:	ret    
  402725:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40272f:	nop
  402730:	mov    eax,0x4091e0
  402735:	cmp    rax,0x4091e0
  40273b:	je     402750 <rb_base64_encode@plt+0x70>
  40273d:	mov    eax,0x0
  402742:	test   rax,rax
  402745:	je     402750 <rb_base64_encode@plt+0x70>
  402747:	mov    edi,0x4091e0
  40274c:	jmp    rax
  40274e:	xchg   ax,ax
  402750:	ret    
  402751:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40275c:	nop    DWORD PTR [rax+0x0]
  402760:	mov    esi,0x4091e0
  402765:	sub    rsi,0x4091e0
  40276c:	sar    rsi,0x3
  402770:	mov    rax,rsi
  402773:	shr    rax,0x3f
  402777:	add    rsi,rax
  40277a:	sar    rsi,1
  40277d:	je     402790 <rb_base64_encode@plt+0xb0>
  40277f:	mov    eax,0x0
  402784:	test   rax,rax
  402787:	je     402790 <rb_base64_encode@plt+0xb0>
  402789:	mov    edi,0x4091e0
  40278e:	jmp    rax
  402790:	ret    
  402791:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40279c:	nop    DWORD PTR [rax+0x0]
  4027a0:	endbr64 
  4027a4:	cmp    BYTE PTR [rip+0x6a35],0x0        # 4091e0 <rb_base64_encode@plt+0x6b00>
  4027ab:	jne    4027c0 <rb_base64_encode@plt+0xe0>
  4027ad:	push   rbp
  4027ae:	mov    rbp,rsp
  4027b1:	call   402730 <rb_base64_encode@plt+0x50>
  4027b6:	mov    BYTE PTR [rip+0x6a23],0x1        # 4091e0 <rb_base64_encode@plt+0x6b00>
  4027bd:	pop    rbp
  4027be:	ret    
  4027bf:	nop
  4027c0:	ret    
  4027c1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4027cc:	nop    DWORD PTR [rax+0x0]
  4027d0:	endbr64 
  4027d4:	jmp    402760 <rb_base64_encode@plt+0x80>
  4027d6:	push   rbp
  4027d7:	mov    rbp,rsp
  4027da:	sub    rsp,0x20
  4027de:	mov    QWORD PTR [rbp-0x8],rdi
  4027e2:	mov    QWORD PTR [rbp-0x10],rsi
  4027e6:	mov    QWORD PTR [rbp-0x18],rdx
  4027ea:	cmp    QWORD PTR [rbp-0x8],0x0
  4027ef:	jne    402810 <rb_base64_encode@plt+0x130>
  4027f1:	lea    rcx,[rip+0x4ac0]        # 4072b8 <rb_base64_encode@plt+0x4bd8>
  4027f8:	mov    edx,0x8f
  4027fd:	lea    rsi,[rip+0x480c]        # 407010 <rb_base64_encode@plt+0x4930>
  402804:	lea    rdi,[rip+0x4821]        # 40702c <rb_base64_encode@plt+0x494c>
  40280b:	call   402430 <__assert_fail@plt>
  402810:	cmp    QWORD PTR [rbp-0x10],0x0
  402815:	jne    402836 <rb_base64_encode@plt+0x156>
  402817:	lea    rcx,[rip+0x4a9a]        # 4072b8 <rb_base64_encode@plt+0x4bd8>
  40281e:	mov    edx,0x90
  402823:	lea    rsi,[rip+0x47e6]        # 407010 <rb_base64_encode@plt+0x4930>
  40282a:	lea    rdi,[rip+0x4808]        # 407039 <rb_base64_encode@plt+0x4959>
  402831:	call   402430 <__assert_fail@plt>
  402836:	cmp    QWORD PTR [rbp-0x18],0x0
  40283b:	jne    40285c <rb_base64_encode@plt+0x17c>
  40283d:	lea    rcx,[rip+0x4a74]        # 4072b8 <rb_base64_encode@plt+0x4bd8>
  402844:	mov    edx,0x91
  402849:	lea    rsi,[rip+0x47c0]        # 407010 <rb_base64_encode@plt+0x4930>
  402850:	lea    rdi,[rip+0x47ec]        # 407043 <rb_base64_encode@plt+0x4963>
  402857:	call   402430 <__assert_fail@plt>
  40285c:	mov    rax,QWORD PTR [rbp-0x10]
  402860:	mov    rdx,QWORD PTR [rbp-0x8]
  402864:	mov    QWORD PTR [rax],rdx
  402867:	mov    rax,QWORD PTR [rbp-0x10]
  40286b:	mov    QWORD PTR [rax+0x8],0x0
  402873:	mov    rax,QWORD PTR [rbp-0x18]
  402877:	mov    rdx,QWORD PTR [rax]
  40287a:	mov    rax,QWORD PTR [rbp-0x10]
  40287e:	mov    QWORD PTR [rax+0x10],rdx
  402882:	mov    rax,QWORD PTR [rbp-0x18]
  402886:	mov    rax,QWORD PTR [rax]
  402889:	test   rax,rax
  40288c:	je     40289f <rb_base64_encode@plt+0x1bf>
  40288e:	mov    rax,QWORD PTR [rbp-0x18]
  402892:	mov    rax,QWORD PTR [rax]
  402895:	mov    rdx,QWORD PTR [rbp-0x10]
  402899:	mov    QWORD PTR [rax+0x8],rdx
  40289d:	jmp    4028b8 <rb_base64_encode@plt+0x1d8>
  40289f:	mov    rax,QWORD PTR [rbp-0x18]
  4028a3:	mov    rax,QWORD PTR [rax+0x8]
  4028a7:	test   rax,rax
  4028aa:	jne    4028b8 <rb_base64_encode@plt+0x1d8>
  4028ac:	mov    rax,QWORD PTR [rbp-0x18]
  4028b0:	mov    rdx,QWORD PTR [rbp-0x10]
  4028b4:	mov    QWORD PTR [rax+0x8],rdx
  4028b8:	mov    rax,QWORD PTR [rbp-0x18]
  4028bc:	mov    rdx,QWORD PTR [rbp-0x10]
  4028c0:	mov    QWORD PTR [rax],rdx
  4028c3:	mov    rax,QWORD PTR [rbp-0x18]
  4028c7:	mov    rax,QWORD PTR [rax+0x10]
  4028cb:	lea    rdx,[rax+0x1]
  4028cf:	mov    rax,QWORD PTR [rbp-0x18]
  4028d3:	mov    QWORD PTR [rax+0x10],rdx
  4028d7:	nop
  4028d8:	leave  
  4028d9:	ret    
  4028da:	push   rbp
  4028db:	mov    rbp,rsp
  4028de:	sub    rsp,0x20
  4028e2:	mov    QWORD PTR [rbp-0x8],rdi
  4028e6:	mov    QWORD PTR [rbp-0x10],rsi
  4028ea:	mov    QWORD PTR [rbp-0x18],rdx
  4028ee:	cmp    QWORD PTR [rbp-0x10],0x0
  4028f3:	jne    402914 <rb_base64_encode@plt+0x234>
  4028f5:	lea    rcx,[rip+0x49e4]        # 4072e0 <rb_base64_encode@plt+0x4c00>
  4028fc:	mov    edx,0xd3
  402901:	lea    rsi,[rip+0x4708]        # 407010 <rb_base64_encode@plt+0x4930>
  402908:	lea    rdi,[rip+0x472a]        # 407039 <rb_base64_encode@plt+0x4959>
  40290f:	call   402430 <__assert_fail@plt>
  402914:	cmp    QWORD PTR [rbp-0x18],0x0
  402919:	jne    40293a <rb_base64_encode@plt+0x25a>
  40291b:	lea    rcx,[rip+0x49be]        # 4072e0 <rb_base64_encode@plt+0x4c00>
  402922:	mov    edx,0xd4
  402927:	lea    rsi,[rip+0x46e2]        # 407010 <rb_base64_encode@plt+0x4930>
  40292e:	lea    rdi,[rip+0x470e]        # 407043 <rb_base64_encode@plt+0x4963>
  402935:	call   402430 <__assert_fail@plt>
  40293a:	cmp    QWORD PTR [rbp-0x8],0x0
  40293f:	jne    402960 <rb_base64_encode@plt+0x280>
  402941:	lea    rcx,[rip+0x4998]        # 4072e0 <rb_base64_encode@plt+0x4c00>
  402948:	mov    edx,0xd5
  40294d:	lea    rsi,[rip+0x46bc]        # 407010 <rb_base64_encode@plt+0x4930>
  402954:	lea    rdi,[rip+0x46d1]        # 40702c <rb_base64_encode@plt+0x494c>
  40295b:	call   402430 <__assert_fail@plt>
  402960:	mov    rax,QWORD PTR [rbp-0x10]
  402964:	mov    rdx,QWORD PTR [rbp-0x8]
  402968:	mov    QWORD PTR [rax],rdx
  40296b:	mov    rax,QWORD PTR [rbp-0x10]
  40296f:	mov    QWORD PTR [rax+0x10],0x0
  402977:	mov    rax,QWORD PTR [rbp-0x18]
  40297b:	mov    rdx,QWORD PTR [rax+0x8]
  40297f:	mov    rax,QWORD PTR [rbp-0x10]
  402983:	mov    QWORD PTR [rax+0x8],rdx
  402987:	mov    rax,QWORD PTR [rbp-0x18]
  40298b:	mov    rax,QWORD PTR [rax+0x8]
  40298f:	test   rax,rax
  402992:	je     4029a6 <rb_base64_encode@plt+0x2c6>
  402994:	mov    rax,QWORD PTR [rbp-0x18]
  402998:	mov    rax,QWORD PTR [rax+0x8]
  40299c:	mov    rdx,QWORD PTR [rbp-0x10]
  4029a0:	mov    QWORD PTR [rax+0x10],rdx
  4029a4:	jmp    4029bd <rb_base64_encode@plt+0x2dd>
  4029a6:	mov    rax,QWORD PTR [rbp-0x18]
  4029aa:	mov    rax,QWORD PTR [rax]
  4029ad:	test   rax,rax
  4029b0:	jne    4029bd <rb_base64_encode@plt+0x2dd>
  4029b2:	mov    rax,QWORD PTR [rbp-0x18]
  4029b6:	mov    rdx,QWORD PTR [rbp-0x10]
  4029ba:	mov    QWORD PTR [rax],rdx
  4029bd:	mov    rax,QWORD PTR [rbp-0x18]
  4029c1:	mov    rdx,QWORD PTR [rbp-0x10]
  4029c5:	mov    QWORD PTR [rax+0x8],rdx
  4029c9:	mov    rax,QWORD PTR [rbp-0x18]
  4029cd:	mov    rax,QWORD PTR [rax+0x10]
  4029d1:	lea    rdx,[rax+0x1]
  4029d5:	mov    rax,QWORD PTR [rbp-0x18]
  4029d9:	mov    QWORD PTR [rax+0x10],rdx
  4029dd:	nop
  4029de:	leave  
  4029df:	ret    
  4029e0:	push   rbp
  4029e1:	mov    rbp,rsp
  4029e4:	sub    rsp,0x10
  4029e8:	mov    QWORD PTR [rbp-0x8],rdi
  4029ec:	mov    QWORD PTR [rbp-0x10],rsi
  4029f0:	cmp    QWORD PTR [rbp-0x8],0x0
  4029f5:	jne    402a16 <rb_base64_encode@plt+0x336>
  4029f7:	lea    rcx,[rip+0x48ca]        # 4072c8 <rb_base64_encode@plt+0x4be8>
  4029fe:	mov    edx,0xeb
  402a03:	lea    rsi,[rip+0x4606]        # 407010 <rb_base64_encode@plt+0x4930>
  402a0a:	lea    rdi,[rip+0x4628]        # 407039 <rb_base64_encode@plt+0x4959>
  402a11:	call   402430 <__assert_fail@plt>
  402a16:	cmp    QWORD PTR [rbp-0x10],0x0
  402a1b:	jne    402a3c <rb_base64_encode@plt+0x35c>
  402a1d:	lea    rcx,[rip+0x48a4]        # 4072c8 <rb_base64_encode@plt+0x4be8>
  402a24:	mov    edx,0xec
  402a29:	lea    rsi,[rip+0x45e0]        # 407010 <rb_base64_encode@plt+0x4930>
  402a30:	lea    rdi,[rip+0x460c]        # 407043 <rb_base64_encode@plt+0x4963>
  402a37:	call   402430 <__assert_fail@plt>
  402a3c:	mov    rax,QWORD PTR [rbp-0x8]
  402a40:	mov    rax,QWORD PTR [rax+0x10]
  402a44:	test   rax,rax
  402a47:	je     402a5f <rb_base64_encode@plt+0x37f>
  402a49:	mov    rax,QWORD PTR [rbp-0x8]
  402a4d:	mov    rax,QWORD PTR [rax+0x10]
  402a51:	mov    rdx,QWORD PTR [rbp-0x8]
  402a55:	mov    rdx,QWORD PTR [rdx+0x8]
  402a59:	mov    QWORD PTR [rax+0x8],rdx
  402a5d:	jmp    402a6f <rb_base64_encode@plt+0x38f>
  402a5f:	mov    rax,QWORD PTR [rbp-0x8]
  402a63:	mov    rdx,QWORD PTR [rax+0x8]
  402a67:	mov    rax,QWORD PTR [rbp-0x10]
  402a6b:	mov    QWORD PTR [rax+0x8],rdx
  402a6f:	mov    rax,QWORD PTR [rbp-0x8]
  402a73:	mov    rax,QWORD PTR [rax+0x8]
  402a77:	test   rax,rax
  402a7a:	je     402a92 <rb_base64_encode@plt+0x3b2>
  402a7c:	mov    rax,QWORD PTR [rbp-0x8]
  402a80:	mov    rax,QWORD PTR [rax+0x8]
  402a84:	mov    rdx,QWORD PTR [rbp-0x8]
  402a88:	mov    rdx,QWORD PTR [rdx+0x10]
  402a8c:	mov    QWORD PTR [rax+0x10],rdx
  402a90:	jmp    402aa1 <rb_base64_encode@plt+0x3c1>
  402a92:	mov    rax,QWORD PTR [rbp-0x8]
  402a96:	mov    rdx,QWORD PTR [rax+0x10]
  402a9a:	mov    rax,QWORD PTR [rbp-0x10]
  402a9e:	mov    QWORD PTR [rax],rdx
  402aa1:	mov    rax,QWORD PTR [rbp-0x8]
  402aa5:	mov    QWORD PTR [rax+0x8],0x0
  402aad:	mov    rax,QWORD PTR [rbp-0x8]
  402ab1:	mov    rdx,QWORD PTR [rax+0x8]
  402ab5:	mov    rax,QWORD PTR [rbp-0x8]
  402ab9:	mov    QWORD PTR [rax+0x10],rdx
  402abd:	mov    rax,QWORD PTR [rbp-0x10]
  402ac1:	mov    rax,QWORD PTR [rax+0x10]
  402ac5:	lea    rdx,[rax-0x1]
  402ac9:	mov    rax,QWORD PTR [rbp-0x10]
  402acd:	mov    QWORD PTR [rax+0x10],rdx
  402ad1:	nop
  402ad2:	leave  
  402ad3:	ret    
  402ad4:	push   rbp
  402ad5:	mov    rbp,rsp
  402ad8:	sub    rsp,0x20
  402adc:	mov    QWORD PTR [rbp-0x18],rdi
  402ae0:	mov    rax,QWORD PTR [rbp-0x18]
  402ae4:	mov    rsi,rax
  402ae7:	mov    edi,0x1
  402aec:	call   402630 <calloc@plt>
  402af1:	mov    QWORD PTR [rbp-0x8],rax
  402af5:	cmp    QWORD PTR [rbp-0x8],0x0
  402afa:	sete   al
  402afd:	movzx  eax,al
  402b00:	test   rax,rax
  402b03:	je     402b0a <rb_base64_encode@plt+0x42a>
  402b05:	call   4025a0 <rb_outofmemory@plt>
  402b0a:	mov    rax,QWORD PTR [rbp-0x8]
  402b0e:	leave  
  402b0f:	ret    
  402b10:	push   rbp
  402b11:	mov    rbp,rsp
  402b14:	sub    rsp,0x10
  402b18:	mov    QWORD PTR [rbp-0x8],rdi
  402b1c:	cmp    QWORD PTR [rbp-0x8],0x0
  402b21:	setne  al
  402b24:	movzx  eax,al
  402b27:	test   rax,rax
  402b2a:	je     402b38 <rb_base64_encode@plt+0x458>
  402b2c:	mov    rax,QWORD PTR [rbp-0x8]
  402b30:	mov    rdi,rax
  402b33:	call   402480 <free@plt>
  402b38:	nop
  402b39:	leave  
  402b3a:	ret    
  402b3b:	push   rbp
  402b3c:	mov    rbp,rsp
  402b3f:	sub    rsp,0x20
  402b43:	mov    QWORD PTR [rbp-0x18],rdi
  402b47:	mov    rax,QWORD PTR fs:0x28
  402b50:	mov    QWORD PTR [rbp-0x8],rax
  402b54:	xor    eax,eax
  402b56:	mov    rax,QWORD PTR [rbp-0x18]
  402b5a:	mov    eax,DWORD PTR [rax]
  402b5c:	mov    DWORD PTR [rbp-0xc],eax
  402b5f:	mov    eax,DWORD PTR [rbp-0xc]
  402b62:	mov    rdx,QWORD PTR [rbp-0x8]
  402b66:	xor    rdx,QWORD PTR fs:0x28
  402b6f:	je     402b76 <rb_base64_encode@plt+0x496>
  402b71:	call   4025d0 <__stack_chk_fail@plt>
  402b76:	leave  
  402b77:	ret    
  402b78:	push   rbp
  402b79:	mov    rbp,rsp
  402b7c:	mov    QWORD PTR [rbp-0x8],rdi
  402b80:	mov    DWORD PTR [rbp-0xc],esi
  402b83:	mov    edx,DWORD PTR [rbp-0xc]
  402b86:	mov    rax,QWORD PTR [rbp-0x8]
  402b8a:	mov    DWORD PTR [rax],edx
  402b8c:	nop
  402b8d:	pop    rbp
  402b8e:	ret    
  402b8f:	push   rbp
  402b90:	mov    rbp,rsp
  402b93:	mov    QWORD PTR [rbp-0x8],rdi
  402b97:	mov    DWORD PTR [rbp-0xc],esi
  402b9a:	mov    rax,QWORD PTR [rbp-0x8]
  402b9e:	movzx  eax,BYTE PTR [rax]
  402ba1:	and    eax,0xfffffff0
  402ba4:	mov    rdx,QWORD PTR [rbp-0x8]
  402ba8:	mov    BYTE PTR [rdx],al
  402baa:	mov    rax,QWORD PTR [rbp-0x8]
  402bae:	movzx  eax,BYTE PTR [rax]
  402bb1:	mov    edx,eax
  402bb3:	mov    eax,DWORD PTR [rbp-0xc]
  402bb6:	and    eax,0xf
  402bb9:	or     eax,edx
  402bbb:	mov    edx,eax
  402bbd:	mov    rax,QWORD PTR [rbp-0x8]
  402bc1:	mov    BYTE PTR [rax],dl
  402bc3:	nop
  402bc4:	pop    rbp
  402bc5:	ret    
  402bc6:	push   rbp
  402bc7:	mov    rbp,rsp
  402bca:	mov    QWORD PTR [rbp-0x8],rdi
  402bce:	mov    DWORD PTR [rbp-0xc],esi
  402bd1:	mov    rax,QWORD PTR [rbp-0x8]
  402bd5:	movzx  eax,BYTE PTR [rax]
  402bd8:	and    eax,0x7f
  402bdb:	mov    rdx,QWORD PTR [rbp-0x8]
  402bdf:	mov    BYTE PTR [rdx],al
  402be1:	mov    rax,QWORD PTR [rbp-0x8]
  402be5:	movzx  eax,BYTE PTR [rax]
  402be8:	mov    edx,eax
  402bea:	mov    eax,DWORD PTR [rbp-0xc]
  402bed:	shl    eax,0x7
  402bf0:	or     eax,edx
  402bf2:	mov    edx,eax
  402bf4:	mov    rax,QWORD PTR [rbp-0x8]
  402bf8:	mov    BYTE PTR [rax],dl
  402bfa:	nop
  402bfb:	pop    rbp
  402bfc:	ret    
  402bfd:	endbr64 
  402c01:	push   rbp
  402c02:	mov    rbp,rsp
  402c05:	mov    DWORD PTR [rbp-0x4],edi
  402c08:	nop
  402c09:	pop    rbp
  402c0a:	ret    
  402c0b:	endbr64 
  402c0f:	push   rbp
  402c10:	mov    rbp,rsp
  402c13:	sub    rsp,0xa0
  402c1a:	mov    rax,QWORD PTR fs:0x28
  402c23:	mov    QWORD PTR [rbp-0x8],rax
  402c27:	xor    eax,eax
  402c29:	mov    DWORD PTR [rbp-0x18],0x0
  402c30:	mov    QWORD PTR [rbp-0xa0],0x1
  402c3b:	lea    rax,[rbp-0xa0]
  402c42:	add    rax,0x8
  402c46:	mov    rdi,rax
  402c49:	call   402670 <sigemptyset@plt>
  402c4e:	lea    rax,[rbp-0xa0]
  402c55:	add    rax,0x8
  402c59:	mov    esi,0xd
  402c5e:	mov    rdi,rax
  402c61:	call   4025c0 <sigaddset@plt>
  402c66:	lea    rax,[rbp-0xa0]
  402c6d:	add    rax,0x8
  402c71:	mov    esi,0xe
  402c76:	mov    rdi,rax
  402c79:	call   4025c0 <sigaddset@plt>
  402c7e:	lea    rax,[rbp-0xa0]
  402c85:	add    rax,0x8
  402c89:	mov    esi,0x5
  402c8e:	mov    rdi,rax
  402c91:	call   4025c0 <sigaddset@plt>
  402c96:	lea    rax,[rbp-0xa0]
  402c9d:	add    rax,0x8
  402ca1:	mov    esi,0x1c
  402ca6:	mov    rdi,rax
  402ca9:	call   4025c0 <sigaddset@plt>
  402cae:	lea    rax,[rbp-0xa0]
  402cb5:	mov    edx,0x0
  402cba:	mov    rsi,rax
  402cbd:	mov    edi,0x1c
  402cc2:	call   402520 <sigaction@plt>
  402cc7:	lea    rax,[rbp-0xa0]
  402cce:	mov    edx,0x0
  402cd3:	mov    rsi,rax
  402cd6:	mov    edi,0xd
  402cdb:	call   402520 <sigaction@plt>
  402ce0:	lea    rax,[rbp-0xa0]
  402ce7:	mov    edx,0x0
  402cec:	mov    rsi,rax
  402cef:	mov    edi,0x5
  402cf4:	call   402520 <sigaction@plt>
  402cf9:	lea    rax,[rip+0xfffffffffffffefd]        # 402bfd <rb_base64_encode@plt+0x51d>
  402d00:	mov    QWORD PTR [rbp-0xa0],rax
  402d07:	lea    rax,[rbp-0xa0]
  402d0e:	mov    edx,0x0
  402d13:	mov    rsi,rax
  402d16:	mov    edi,0xe
  402d1b:	call   402520 <sigaction@plt>
  402d20:	nop
  402d21:	mov    rax,QWORD PTR [rbp-0x8]
  402d25:	xor    rax,QWORD PTR fs:0x28
  402d2e:	je     402d35 <rb_base64_encode@plt+0x655>
  402d30:	call   4025d0 <__stack_chk_fail@plt>
  402d35:	leave  
  402d36:	ret    
  402d37:	endbr64 
  402d3b:	push   rbp
  402d3c:	mov    rbp,rsp
  402d3f:	sub    rsp,0x20
  402d43:	mov    rax,QWORD PTR fs:0x28
  402d4c:	mov    QWORD PTR [rbp-0x8],rax
  402d50:	xor    eax,eax
  402d52:	lea    rax,[rbp-0x20]
  402d56:	mov    rsi,rax
  402d59:	mov    edi,0x7
  402d5e:	call   402640 <getrlimit@plt>
  402d63:	test   eax,eax
  402d65:	jne    402d6d <rb_base64_encode@plt+0x68d>
  402d67:	mov    rax,QWORD PTR [rbp-0x20]
  402d6b:	jmp    402d72 <rb_base64_encode@plt+0x692>
  402d6d:	mov    eax,0xffff
  402d72:	mov    rdx,QWORD PTR [rbp-0x8]
  402d76:	xor    rdx,QWORD PTR fs:0x28
  402d7f:	je     402d86 <rb_base64_encode@plt+0x6a6>
  402d81:	call   4025d0 <__stack_chk_fail@plt>
  402d86:	leave  
  402d87:	ret    
  402d88:	endbr64 
  402d8c:	push   rbp
  402d8d:	mov    rbp,rsp
  402d90:	sub    rsp,0x10
  402d94:	mov    QWORD PTR [rbp-0x8],rdi
  402d98:	mov    DWORD PTR [rbp-0xc],esi
  402d9b:	mov    rax,QWORD PTR [rbp-0x8]
  402d9f:	mov    edx,DWORD PTR [rbp-0xc]
  402da2:	mov    DWORD PTR [rax+0x80],edx
  402da8:	mov    ecx,DWORD PTR [rbp-0xc]
  402dab:	mov    edx,0x10624dd3
  402db0:	mov    eax,ecx
  402db2:	mul    edx
  402db4:	mov    eax,edx
  402db6:	shr    eax,0x7
  402db9:	imul   eax,eax,0x7d0
  402dbf:	sub    ecx,eax
  402dc1:	mov    eax,ecx
  402dc3:	mov    edx,eax
  402dc5:	mov    rax,rdx
  402dc8:	add    rax,rax
  402dcb:	add    rax,rdx
  402dce:	shl    rax,0x3
  402dd2:	lea    rdx,[rip+0x6447]        # 409220 <rb_base64_encode@plt+0x6b40>
  402dd9:	add    rdx,rax
  402ddc:	mov    rcx,QWORD PTR [rbp-0x8]
  402de0:	mov    rax,QWORD PTR [rbp-0x8]
  402de4:	mov    rsi,rcx
  402de7:	mov    rdi,rax
  402dea:	call   4027d6 <rb_base64_encode@plt+0xf6>
  402def:	nop
  402df0:	leave  
  402df1:	ret    
  402df2:	endbr64 
  402df6:	push   rbp
  402df7:	mov    rbp,rsp
  402dfa:	sub    rsp,0x10
  402dfe:	mov    QWORD PTR [rbp-0x8],rdi
  402e02:	mov    rax,QWORD PTR [rbp-0x8]
  402e06:	add    rax,0x58
  402e0a:	mov    rdi,rax
  402e0d:	call   402500 <rb_linebuf_donebuf@plt>
  402e12:	mov    rax,QWORD PTR [rbp-0x8]
  402e16:	add    rax,0x30
  402e1a:	mov    rdi,rax
  402e1d:	call   402500 <rb_linebuf_donebuf@plt>
  402e22:	mov    rax,QWORD PTR [rbp-0x8]
  402e26:	mov    rax,QWORD PTR [rax+0x28]
  402e2a:	mov    rdi,rax
  402e2d:	call   402570 <rb_free_rawbuffer@plt>
  402e32:	mov    rax,QWORD PTR [rbp-0x8]
  402e36:	mov    rax,QWORD PTR [rax+0x20]
  402e3a:	mov    rdi,rax
  402e3d:	call   402570 <rb_free_rawbuffer@plt>
  402e42:	mov    rax,QWORD PTR [rbp-0x8]
  402e46:	mov    rdi,rax
  402e49:	call   402b10 <rb_base64_encode@plt+0x430>
  402e4e:	nop
  402e4f:	leave  
  402e50:	ret    
  402e51:	endbr64 
  402e55:	push   rbp
  402e56:	mov    rbp,rsp
  402e59:	sub    rsp,0x30
  402e5d:	mov    QWORD PTR [rbp-0x28],rdi
  402e61:	mov    rax,QWORD PTR [rip+0x11f38]        # 414da0 <rb_base64_encode@plt+0x126c0>
  402e68:	mov    QWORD PTR [rbp-0x18],rax
  402e6c:	cmp    QWORD PTR [rbp-0x18],0x0
  402e71:	je     402e7d <rb_base64_encode@plt+0x79d>
  402e73:	mov    rax,QWORD PTR [rbp-0x18]
  402e77:	mov    rax,QWORD PTR [rax+0x10]
  402e7b:	jmp    402e82 <rb_base64_encode@plt+0x7a2>
  402e7d:	mov    eax,0x0
  402e82:	mov    QWORD PTR [rbp-0x10],rax
  402e86:	jmp    402ec1 <rb_base64_encode@plt+0x7e1>
  402e88:	mov    rax,QWORD PTR [rbp-0x18]
  402e8c:	mov    rax,QWORD PTR [rax]
  402e8f:	mov    QWORD PTR [rbp-0x8],rax
  402e93:	mov    rax,QWORD PTR [rbp-0x8]
  402e97:	mov    rdi,rax
  402e9a:	call   402df2 <rb_base64_encode@plt+0x712>
  402e9f:	mov    rax,QWORD PTR [rbp-0x10]
  402ea3:	mov    QWORD PTR [rbp-0x18],rax
  402ea7:	cmp    QWORD PTR [rbp-0x18],0x0
  402eac:	je     402eb8 <rb_base64_encode@plt+0x7d8>
  402eae:	mov    rax,QWORD PTR [rbp-0x18]
  402eb2:	mov    rax,QWORD PTR [rax+0x10]
  402eb6:	jmp    402ebd <rb_base64_encode@plt+0x7dd>
  402eb8:	mov    eax,0x0
  402ebd:	mov    QWORD PTR [rbp-0x10],rax
  402ec1:	cmp    QWORD PTR [rbp-0x18],0x0
  402ec6:	jne    402e88 <rb_base64_encode@plt+0x7a8>
  402ec8:	mov    QWORD PTR [rip+0x11ecd],0x0        # 414da0 <rb_base64_encode@plt+0x126c0>
  402ed3:	mov    rax,QWORD PTR [rip+0x11ec6]        # 414da0 <rb_base64_encode@plt+0x126c0>
  402eda:	mov    QWORD PTR [rip+0x11ec7],rax        # 414da8 <rb_base64_encode@plt+0x126c8>
  402ee1:	nop
  402ee2:	leave  
  402ee3:	ret    
  402ee4:	endbr64 
  402ee8:	push   rbp
  402ee9:	mov    rbp,rsp
  402eec:	sub    rsp,0x20
  402ef0:	mov    QWORD PTR [rbp-0x18],rdi
  402ef4:	mov    QWORD PTR [rbp-0x20],rsi
  402ef8:	mov    rax,QWORD PTR [rbp-0x20]
  402efc:	mov    QWORD PTR [rbp-0x8],rax
  402f00:	mov    rax,QWORD PTR [rbp-0x8]
  402f04:	movzx  eax,BYTE PTR [rax+0xb8]
  402f0b:	movzx  eax,al
  402f0e:	and    eax,0x2
  402f11:	test   eax,eax
  402f13:	jne    402feb <rb_base64_encode@plt+0x90b>
  402f19:	jmp    402f39 <rb_base64_encode@plt+0x859>
  402f1b:	mov    rax,QWORD PTR [rbp-0x8]
  402f1f:	mov    rdx,QWORD PTR [rax+0xb0]
  402f26:	mov    eax,DWORD PTR [rbp-0xc]
  402f29:	cdqe   
  402f2b:	add    rdx,rax
  402f2e:	mov    rax,QWORD PTR [rbp-0x8]
  402f32:	mov    QWORD PTR [rax+0xb0],rdx
  402f39:	mov    rax,QWORD PTR [rbp-0x8]
  402f3d:	lea    rdx,[rax+0x30]
  402f41:	mov    rax,QWORD PTR [rbp-0x18]
  402f45:	mov    rsi,rdx
  402f48:	mov    rdi,rax
  402f4b:	call   4024f0 <rb_linebuf_flush@plt>
  402f50:	mov    DWORD PTR [rbp-0xc],eax
  402f53:	cmp    DWORD PTR [rbp-0xc],0x0
  402f57:	jg     402f1b <rb_base64_encode@plt+0x83b>
  402f59:	cmp    DWORD PTR [rbp-0xc],0x0
  402f5d:	je     402f77 <rb_base64_encode@plt+0x897>
  402f5f:	cmp    DWORD PTR [rbp-0xc],0x0
  402f63:	jns    402f94 <rb_base64_encode@plt+0x8b4>
  402f65:	call   4025b0 <__errno_location@plt>
  402f6a:	mov    eax,DWORD PTR [rax]
  402f6c:	mov    edi,eax
  402f6e:	call   4023d0 <rb_ignore_errno@plt>
  402f73:	test   eax,eax
  402f75:	jne    402f94 <rb_base64_encode@plt+0x8b4>
  402f77:	mov    rax,QWORD PTR [rbp-0x20]
  402f7b:	mov    edx,0x0
  402f80:	mov    esi,0x0
  402f85:	mov    rdi,rax
  402f88:	mov    eax,0x0
  402f8d:	call   40360e <rb_base64_encode@plt+0xf2e>
  402f92:	jmp    402fec <rb_base64_encode@plt+0x90c>
  402f94:	mov    rax,QWORD PTR [rbp-0x8]
  402f98:	mov    eax,DWORD PTR [rax+0x4c]
  402f9b:	test   eax,eax
  402f9d:	jle    402fc7 <rb_base64_encode@plt+0x8e7>
  402f9f:	mov    rax,QWORD PTR [rbp-0x8]
  402fa3:	mov    rax,QWORD PTR [rax+0x90]
  402faa:	mov    rdx,QWORD PTR [rbp-0x8]
  402fae:	mov    rcx,rdx
  402fb1:	lea    rdx,[rip+0xffffffffffffff2c]        # 402ee4 <rb_base64_encode@plt+0x804>
  402fb8:	mov    esi,0x2
  402fbd:	mov    rdi,rax
  402fc0:	call   4023f0 <rb_setselect@plt>
  402fc5:	jmp    402fec <rb_base64_encode@plt+0x90c>
  402fc7:	mov    rax,QWORD PTR [rbp-0x8]
  402fcb:	mov    rax,QWORD PTR [rax+0x90]
  402fd2:	mov    ecx,0x0
  402fd7:	mov    edx,0x0
  402fdc:	mov    esi,0x2
  402fe1:	mov    rdi,rax
  402fe4:	call   4023f0 <rb_setselect@plt>
  402fe9:	jmp    402fec <rb_base64_encode@plt+0x90c>
  402feb:	nop
  402fec:	leave  
  402fed:	ret    
  402fee:	endbr64 
  402ff2:	push   rbp
  402ff3:	mov    rbp,rsp
  402ff6:	sub    rsp,0x30
  402ffa:	mov    QWORD PTR [rbp-0x28],rdi
  402ffe:	mov    QWORD PTR [rbp-0x30],rsi
  403002:	mov    rax,QWORD PTR [rbp-0x30]
  403006:	mov    QWORD PTR [rbp-0x10],rax
  40300a:	mov    rax,QWORD PTR [rbp-0x10]
  40300e:	movzx  eax,BYTE PTR [rax+0xb8]
  403015:	movzx  eax,al
  403018:	and    eax,0x2
  40301b:	test   eax,eax
  40301d:	jne    4031a4 <rb_base64_encode@plt+0xac4>
  403023:	jmp    403043 <rb_base64_encode@plt+0x963>
  403025:	mov    rax,QWORD PTR [rbp-0x10]
  403029:	mov    rdx,QWORD PTR [rax+0x98]
  403030:	mov    eax,DWORD PTR [rbp-0x14]
  403033:	cdqe   
  403035:	add    rdx,rax
  403038:	mov    rax,QWORD PTR [rbp-0x10]
  40303c:	mov    QWORD PTR [rax+0x98],rdx
  403043:	mov    rax,QWORD PTR [rbp-0x10]
  403047:	mov    rax,QWORD PTR [rax+0x20]
  40304b:	mov    rdx,QWORD PTR [rbp-0x28]
  40304f:	mov    rsi,rdx
  403052:	mov    rdi,rax
  403055:	call   4026b0 <rb_rawbuf_flush@plt>
  40305a:	mov    DWORD PTR [rbp-0x14],eax
  40305d:	cmp    DWORD PTR [rbp-0x14],0x0
  403061:	jg     403025 <rb_base64_encode@plt+0x945>
  403063:	cmp    DWORD PTR [rbp-0x14],0x0
  403067:	je     403081 <rb_base64_encode@plt+0x9a1>
  403069:	cmp    DWORD PTR [rbp-0x14],0x0
  40306d:	jns    4030e9 <rb_base64_encode@plt+0xa09>
  40306f:	call   4025b0 <__errno_location@plt>
  403074:	mov    eax,DWORD PTR [rax]
  403076:	mov    edi,eax
  403078:	call   4023d0 <rb_ignore_errno@plt>
  40307d:	test   eax,eax
  40307f:	jne    4030e9 <rb_base64_encode@plt+0xa09>
  403081:	cmp    DWORD PTR [rbp-0x14],0x0
  403085:	jne    4030ae <rb_base64_encode@plt+0x9ce>
  403087:	mov    rdx,QWORD PTR [rip+0x614a]        # 4091d8 <rb_base64_encode@plt+0x6af8>
  40308e:	mov    rax,QWORD PTR [rbp-0x10]
  403092:	mov    rcx,rdx
  403095:	lea    rdx,[rip+0x3fd6]        # 407072 <rb_base64_encode@plt+0x4992>
  40309c:	mov    esi,0x1
  4030a1:	mov    rdi,rax
  4030a4:	mov    eax,0x0
  4030a9:	call   40360e <rb_base64_encode@plt+0xf2e>
  4030ae:	call   4025b0 <__errno_location@plt>
  4030b3:	mov    eax,DWORD PTR [rax]
  4030b5:	mov    edi,eax
  4030b7:	call   402510 <strerror@plt>
  4030bc:	mov    QWORD PTR [rbp-0x8],rax
  4030c0:	mov    rdx,QWORD PTR [rbp-0x8]
  4030c4:	mov    rax,QWORD PTR [rbp-0x10]
  4030c8:	mov    rcx,rdx
  4030cb:	lea    rdx,[rip+0x3fa3]        # 407075 <rb_base64_encode@plt+0x4995>
  4030d2:	mov    esi,0x1
  4030d7:	mov    rdi,rax
  4030da:	mov    eax,0x0
  4030df:	call   40360e <rb_base64_encode@plt+0xf2e>
  4030e4:	jmp    4031a5 <rb_base64_encode@plt+0xac5>
  4030e9:	mov    rax,QWORD PTR [rbp-0x10]
  4030ed:	mov    rax,QWORD PTR [rax+0x20]
  4030f1:	mov    rdi,rax
  4030f4:	call   402560 <rb_rawbuf_length@plt>
  4030f9:	test   eax,eax
  4030fb:	jle    403125 <rb_base64_encode@plt+0xa45>
  4030fd:	mov    rax,QWORD PTR [rbp-0x10]
  403101:	mov    rax,QWORD PTR [rax+0x88]
  403108:	mov    rdx,QWORD PTR [rbp-0x10]
  40310c:	mov    rcx,rdx
  40310f:	lea    rdx,[rip+0xfffffffffffffed8]        # 402fee <rb_base64_encode@plt+0x90e>
  403116:	mov    esi,0x2
  40311b:	mov    rdi,rax
  40311e:	call   4023f0 <rb_setselect@plt>
  403123:	jmp    403147 <rb_base64_encode@plt+0xa67>
  403125:	mov    rax,QWORD PTR [rbp-0x10]
  403129:	mov    rax,QWORD PTR [rax+0x88]
  403130:	mov    ecx,0x0
  403135:	mov    edx,0x0
  40313a:	mov    esi,0x2
  40313f:	mov    rdi,rax
  403142:	call   4023f0 <rb_setselect@plt>
  403147:	mov    rax,QWORD PTR [rbp-0x10]
  40314b:	movzx  eax,BYTE PTR [rax+0xb8]
  403152:	movzx  eax,al
  403155:	and    eax,0x1
  403158:	test   eax,eax
  40315a:	je     4031a5 <rb_base64_encode@plt+0xac5>
  40315c:	mov    rax,QWORD PTR [rbp-0x10]
  403160:	mov    rax,QWORD PTR [rax+0x20]
  403164:	mov    rdi,rax
  403167:	call   402560 <rb_rawbuf_length@plt>
  40316c:	test   eax,eax
  40316e:	jne    4031a5 <rb_base64_encode@plt+0xac5>
  403170:	mov    rax,QWORD PTR [rbp-0x10]
  403174:	movzx  eax,BYTE PTR [rax+0xb8]
  40317b:	and    eax,0xfffffffe
  40317e:	mov    rdx,QWORD PTR [rbp-0x10]
  403182:	mov    BYTE PTR [rdx+0xb8],al
  403188:	mov    rax,QWORD PTR [rbp-0x10]
  40318c:	mov    rax,QWORD PTR [rax+0x90]
  403193:	mov    rdx,QWORD PTR [rbp-0x10]
  403197:	mov    rsi,rdx
  40319a:	mov    rdi,rax
  40319d:	call   4045df <rb_base64_encode@plt+0x1eff>
  4031a2:	jmp    4031a5 <rb_base64_encode@plt+0xac5>
  4031a4:	nop
  4031a5:	leave  
  4031a6:	ret    
  4031a7:	endbr64 
  4031ab:	push   rbp
  4031ac:	mov    rbp,rsp
  4031af:	sub    rsp,0x20
  4031b3:	mov    QWORD PTR [rbp-0x8],rdi
  4031b7:	mov    QWORD PTR [rbp-0x10],rsi
  4031bb:	mov    QWORD PTR [rbp-0x18],rdx
  4031bf:	mov    rax,QWORD PTR [rbp-0x8]
  4031c3:	movzx  eax,BYTE PTR [rax+0xb8]
  4031ca:	movzx  eax,al
  4031cd:	and    eax,0x2
  4031d0:	test   eax,eax
  4031d2:	jne    4031f3 <rb_base64_encode@plt+0xb13>
  4031d4:	mov    rax,QWORD PTR [rbp-0x18]
  4031d8:	mov    edx,eax
  4031da:	mov    rax,QWORD PTR [rbp-0x8]
  4031de:	mov    rax,QWORD PTR [rax+0x20]
  4031e2:	mov    rcx,QWORD PTR [rbp-0x10]
  4031e6:	mov    rsi,rcx
  4031e9:	mov    rdi,rax
  4031ec:	call   4026a0 <rb_rawbuf_append@plt>
  4031f1:	jmp    4031f4 <rb_base64_encode@plt+0xb14>
  4031f3:	nop
  4031f4:	leave  
  4031f5:	ret    
  4031f6:	endbr64 
  4031fa:	push   rbp
  4031fb:	mov    rbp,rsp
  4031fe:	sub    rsp,0x30
  403202:	mov    QWORD PTR [rbp-0x18],rdi
  403206:	mov    QWORD PTR [rbp-0x20],rsi
  40320a:	mov    DWORD PTR [rbp-0x24],edx
  40320d:	mov    rax,QWORD PTR fs:0x28
  403216:	mov    QWORD PTR [rbp-0x8],rax
  40321a:	xor    eax,eax
  40321c:	mov    BYTE PTR [rbp-0xa],0x0
  403220:	mov    BYTE PTR [rbp-0x9],0x0
  403224:	lea    rax,[rbp-0xa]
  403228:	mov    esi,0x1
  40322d:	mov    rdi,rax
  403230:	call   402b8f <rb_base64_encode@plt+0x4af>
  403235:	lea    rax,[rbp-0xa]
  403239:	mov    esi,0x1
  40323e:	mov    rdi,rax
  403241:	call   402bc6 <rb_base64_encode@plt+0x4e6>
  403246:	mov    eax,DWORD PTR [rbp-0x24]
  403249:	add    eax,0x2
  40324c:	and    eax,0x7f
  40324f:	mov    BYTE PTR [rbp-0x9],al
  403252:	lea    rcx,[rbp-0xa]
  403256:	mov    rax,QWORD PTR [rbp-0x18]
  40325a:	mov    edx,0x2
  40325f:	mov    rsi,rcx
  403262:	mov    rdi,rax
  403265:	call   4031a7 <rb_base64_encode@plt+0xac7>
  40326a:	mov    eax,DWORD PTR [rbp-0x24]
  40326d:	movsxd rdx,eax
  403270:	mov    rcx,QWORD PTR [rbp-0x20]
  403274:	mov    rax,QWORD PTR [rbp-0x18]
  403278:	mov    rsi,rcx
  40327b:	mov    rdi,rax
  40327e:	call   4031a7 <rb_base64_encode@plt+0xac7>
  403283:	mov    rax,QWORD PTR [rbp-0x18]
  403287:	mov    edx,0x2
  40328c:	lea    rsi,[rip+0x3df2]        # 407085 <rb_base64_encode@plt+0x49a5>
  403293:	mov    rdi,rax
  403296:	call   4031a7 <rb_base64_encode@plt+0xac7>
  40329b:	nop
  40329c:	mov    rax,QWORD PTR [rbp-0x8]
  4032a0:	xor    rax,QWORD PTR fs:0x28
  4032a9:	je     4032b0 <rb_base64_encode@plt+0xbd0>
  4032ab:	call   4025d0 <__stack_chk_fail@plt>
  4032b0:	leave  
  4032b1:	ret    
  4032b2:	endbr64 
  4032b6:	push   rbp
  4032b7:	mov    rbp,rsp
  4032ba:	sub    rsp,0x30
  4032be:	mov    QWORD PTR [rbp-0x18],rdi
  4032c2:	mov    QWORD PTR [rbp-0x20],rsi
  4032c6:	mov    DWORD PTR [rbp-0x24],edx
  4032c9:	mov    rax,QWORD PTR fs:0x28
  4032d2:	mov    QWORD PTR [rbp-0x8],rax
  4032d6:	xor    eax,eax
  4032d8:	mov    BYTE PTR [rbp-0xc],0x0
  4032dc:	mov    BYTE PTR [rbp-0xb],0x0
  4032e0:	mov    WORD PTR [rbp-0xa],0x0
  4032e6:	lea    rax,[rbp-0xc]
  4032ea:	mov    esi,0x1
  4032ef:	mov    rdi,rax
  4032f2:	call   402b8f <rb_base64_encode@plt+0x4af>
  4032f7:	lea    rax,[rbp-0xc]
  4032fb:	mov    esi,0x1
  403300:	mov    rdi,rax
  403303:	call   402bc6 <rb_base64_encode@plt+0x4e6>
  403308:	mov    BYTE PTR [rbp-0xb],0x7e
  40330c:	mov    eax,DWORD PTR [rbp-0x24]
  40330f:	add    eax,0x2
  403312:	movzx  eax,ax
  403315:	mov    edi,eax
  403317:	call   402410 <htons@plt>
  40331c:	mov    WORD PTR [rbp-0xa],ax
  403320:	lea    rcx,[rbp-0xc]
  403324:	mov    rax,QWORD PTR [rbp-0x18]
  403328:	mov    edx,0x4
  40332d:	mov    rsi,rcx
  403330:	mov    rdi,rax
  403333:	call   4031a7 <rb_base64_encode@plt+0xac7>
  403338:	mov    eax,DWORD PTR [rbp-0x24]
  40333b:	movsxd rdx,eax
  40333e:	mov    rcx,QWORD PTR [rbp-0x20]
  403342:	mov    rax,QWORD PTR [rbp-0x18]
  403346:	mov    rsi,rcx
  403349:	mov    rdi,rax
  40334c:	call   4031a7 <rb_base64_encode@plt+0xac7>
  403351:	mov    rax,QWORD PTR [rbp-0x18]
  403355:	mov    edx,0x2
  40335a:	lea    rsi,[rip+0x3d24]        # 407085 <rb_base64_encode@plt+0x49a5>
  403361:	mov    rdi,rax
  403364:	call   4031a7 <rb_base64_encode@plt+0xac7>
  403369:	nop
  40336a:	mov    rax,QWORD PTR [rbp-0x8]
  40336e:	xor    rax,QWORD PTR fs:0x28
  403377:	je     40337e <rb_base64_encode@plt+0xc9e>
  403379:	call   4025d0 <__stack_chk_fail@plt>
  40337e:	leave  
  40337f:	ret    
  403380:	endbr64 
  403384:	push   rbp
  403385:	mov    rbp,rsp
  403388:	sub    rsp,0x20
  40338c:	mov    QWORD PTR [rbp-0x8],rdi
  403390:	mov    QWORD PTR [rbp-0x10],rsi
  403394:	mov    DWORD PTR [rbp-0x14],edx
  403397:	mov    rax,QWORD PTR [rbp-0x8]
  40339b:	movzx  eax,BYTE PTR [rax+0xb8]
  4033a2:	movzx  eax,al
  4033a5:	and    eax,0x2
  4033a8:	test   eax,eax
  4033aa:	jne    4033e2 <rb_base64_encode@plt+0xd02>
  4033ac:	cmp    DWORD PTR [rbp-0x14],0x7a
  4033b0:	jg     4033ca <rb_base64_encode@plt+0xcea>
  4033b2:	mov    edx,DWORD PTR [rbp-0x14]
  4033b5:	mov    rcx,QWORD PTR [rbp-0x10]
  4033b9:	mov    rax,QWORD PTR [rbp-0x8]
  4033bd:	mov    rsi,rcx
  4033c0:	mov    rdi,rax
  4033c3:	call   4031f6 <rb_base64_encode@plt+0xb16>
  4033c8:	jmp    4033e3 <rb_base64_encode@plt+0xd03>
  4033ca:	mov    edx,DWORD PTR [rbp-0x14]
  4033cd:	mov    rcx,QWORD PTR [rbp-0x10]
  4033d1:	mov    rax,QWORD PTR [rbp-0x8]
  4033d5:	mov    rsi,rcx
  4033d8:	mov    rdi,rax
  4033db:	call   4032b2 <rb_base64_encode@plt+0xbd2>
  4033e0:	jmp    4033e3 <rb_base64_encode@plt+0xd03>
  4033e2:	nop
  4033e3:	leave  
  4033e4:	ret    
  4033e5:	endbr64 
  4033e9:	push   rbp
  4033ea:	mov    rbp,rsp
  4033ed:	sub    rsp,0x40
  4033f1:	mov    QWORD PTR [rbp-0x38],rdi
  4033f5:	mov    QWORD PTR [rbp-0x40],rsi
  4033f9:	mov    rax,QWORD PTR [rbp-0x40]
  4033fd:	mov    QWORD PTR [rbp-0x10],rax
  403401:	mov    rax,QWORD PTR [rbp-0x10]
  403405:	mov    rax,QWORD PTR [rax+0x48]
  403409:	mov    QWORD PTR [rbp-0x20],rax
  40340d:	cmp    QWORD PTR [rbp-0x20],0x0
  403412:	je     40341e <rb_base64_encode@plt+0xd3e>
  403414:	mov    rax,QWORD PTR [rbp-0x20]
  403418:	mov    rax,QWORD PTR [rax+0x10]
  40341c:	jmp    403423 <rb_base64_encode@plt+0xd43>
  40341e:	mov    eax,0x0
  403423:	mov    QWORD PTR [rbp-0x18],rax
  403427:	jmp    40352c <rb_base64_encode@plt+0xe4c>
  40342c:	mov    rax,QWORD PTR [rbp-0x20]
  403430:	mov    rax,QWORD PTR [rax]
  403433:	mov    QWORD PTR [rbp-0x8],rax
  403437:	mov    r8d,DWORD PTR [rip+0x5dc2]        # 409200 <rb_base64_encode@plt+0x6b20>
  40343e:	mov    rax,QWORD PTR [rbp-0x8]
  403442:	mov    rdi,QWORD PTR [rax+0x20]
  403446:	mov    rax,QWORD PTR [rbp-0x8]
  40344a:	mov    rcx,QWORD PTR [rax+0x18]
  40344e:	mov    rax,QWORD PTR [rbp-0x8]
  403452:	mov    edx,DWORD PTR [rax+0x48]
  403455:	mov    rax,QWORD PTR [rbp-0x8]
  403459:	lea    rsi,[rax+0x28]
  40345d:	mov    rax,QWORD PTR [rbp-0x10]
  403461:	mov    rax,QWORD PTR [rax+0x20]
  403465:	mov    r9d,r8d
  403468:	mov    r8,rdi
  40346b:	mov    rdi,rax
  40346e:	call   402400 <rb_send_fd_buf@plt>
  403473:	mov    DWORD PTR [rbp-0x24],eax
  403476:	cmp    DWORD PTR [rbp-0x24],0x0
  40347a:	jle    4034e2 <rb_base64_encode@plt+0xe02>
  40347c:	mov    rax,QWORD PTR [rbp-0x10]
  403480:	lea    rdx,[rax+0x48]
  403484:	mov    rax,QWORD PTR [rbp-0x20]
  403488:	mov    rsi,rdx
  40348b:	mov    rdi,rax
  40348e:	call   4029e0 <rb_base64_encode@plt+0x300>
  403493:	mov    DWORD PTR [rbp-0x28],0x0
  40349a:	jmp    4034ba <rb_base64_encode@plt+0xdda>
  40349c:	mov    rax,QWORD PTR [rbp-0x8]
  4034a0:	mov    edx,DWORD PTR [rbp-0x28]
  4034a3:	movsxd rdx,edx
  4034a6:	add    rdx,0x4
  4034aa:	mov    rax,QWORD PTR [rax+rdx*8+0x8]
  4034af:	mov    rdi,rax
  4034b2:	call   402540 <rb_close@plt>
  4034b7:	inc    DWORD PTR [rbp-0x28]
  4034ba:	mov    rax,QWORD PTR [rbp-0x8]
  4034be:	mov    eax,DWORD PTR [rax+0x48]
  4034c1:	cmp    DWORD PTR [rbp-0x28],eax
  4034c4:	jl     40349c <rb_base64_encode@plt+0xdbc>
  4034c6:	mov    rax,QWORD PTR [rbp-0x8]
  4034ca:	mov    rax,QWORD PTR [rax+0x18]
  4034ce:	mov    rdi,rax
  4034d1:	call   402b10 <rb_base64_encode@plt+0x430>
  4034d6:	mov    rax,QWORD PTR [rbp-0x8]
  4034da:	mov    rdi,rax
  4034dd:	call   402b10 <rb_base64_encode@plt+0x430>
  4034e2:	cmp    DWORD PTR [rbp-0x24],0x0
  4034e6:	je     403500 <rb_base64_encode@plt+0xe20>
  4034e8:	cmp    DWORD PTR [rbp-0x24],0x0
  4034ec:	jns    40350a <rb_base64_encode@plt+0xe2a>
  4034ee:	call   4025b0 <__errno_location@plt>
  4034f3:	mov    eax,DWORD PTR [rax]
  4034f5:	mov    edi,eax
  4034f7:	call   4023d0 <rb_ignore_errno@plt>
  4034fc:	test   eax,eax
  4034fe:	jne    40350a <rb_base64_encode@plt+0xe2a>
  403500:	mov    edi,0x0
  403505:	call   402420 <exit@plt>
  40350a:	mov    rax,QWORD PTR [rbp-0x18]
  40350e:	mov    QWORD PTR [rbp-0x20],rax
  403512:	cmp    QWORD PTR [rbp-0x20],0x0
  403517:	je     403523 <rb_base64_encode@plt+0xe43>
  403519:	mov    rax,QWORD PTR [rbp-0x20]
  40351d:	mov    rax,QWORD PTR [rax+0x10]
  403521:	jmp    403528 <rb_base64_encode@plt+0xe48>
  403523:	mov    eax,0x0
  403528:	mov    QWORD PTR [rbp-0x18],rax
  40352c:	cmp    QWORD PTR [rbp-0x20],0x0
  403531:	jne    40342c <rb_base64_encode@plt+0xd4c>
  403537:	mov    rax,QWORD PTR [rbp-0x10]
  40353b:	mov    rax,QWORD PTR [rax+0x58]
  40353f:	test   rax,rax
  403542:	je     403567 <rb_base64_encode@plt+0xe87>
  403544:	mov    rax,QWORD PTR [rbp-0x10]
  403548:	mov    rax,QWORD PTR [rax+0x20]
  40354c:	mov    rdx,QWORD PTR [rbp-0x10]
  403550:	mov    rcx,rdx
  403553:	lea    rdx,[rip+0xfffffffffffffe8b]        # 4033e5 <rb_base64_encode@plt+0xd05>
  40355a:	mov    esi,0x2
  40355f:	mov    rdi,rax
  403562:	call   4023f0 <rb_setselect@plt>
  403567:	nop
  403568:	leave  
  403569:	ret    
  40356a:	endbr64 
  40356e:	push   rbp
  40356f:	mov    rbp,rsp
  403572:	sub    rsp,0x30
  403576:	mov    QWORD PTR [rbp-0x18],rdi
  40357a:	mov    QWORD PTR [rbp-0x20],rsi
  40357e:	mov    QWORD PTR [rbp-0x28],rdx
  403582:	mov    edi,0x50
  403587:	call   402ad4 <rb_base64_encode@plt+0x3f4>
  40358c:	mov    QWORD PTR [rbp-0x8],rax
  403590:	mov    rax,QWORD PTR [rbp-0x28]
  403594:	mov    rdi,rax
  403597:	call   402ad4 <rb_base64_encode@plt+0x3f4>
  40359c:	mov    rdx,rax
  40359f:	mov    rax,QWORD PTR [rbp-0x8]
  4035a3:	mov    QWORD PTR [rax+0x18],rdx
  4035a7:	mov    rax,QWORD PTR [rbp-0x8]
  4035ab:	mov    rdx,QWORD PTR [rbp-0x28]
  4035af:	mov    QWORD PTR [rax+0x20],rdx
  4035b3:	mov    rax,QWORD PTR [rbp-0x8]
  4035b7:	mov    rax,QWORD PTR [rax+0x18]
  4035bb:	mov    rdx,QWORD PTR [rbp-0x28]
  4035bf:	mov    rcx,QWORD PTR [rbp-0x20]
  4035c3:	mov    rsi,rcx
  4035c6:	mov    rdi,rax
  4035c9:	call   4026c0 <memcpy@plt>
  4035ce:	mov    rax,QWORD PTR [rbp-0x8]
  4035d2:	mov    DWORD PTR [rax+0x48],0x0
  4035d9:	mov    rax,QWORD PTR [rbp-0x18]
  4035dd:	lea    rdx,[rax+0x48]
  4035e1:	mov    rcx,QWORD PTR [rbp-0x8]
  4035e5:	mov    rax,QWORD PTR [rbp-0x8]
  4035e9:	mov    rsi,rcx
  4035ec:	mov    rdi,rax
  4035ef:	call   4028da <rb_base64_encode@plt+0x1fa>
  4035f4:	mov    rax,QWORD PTR [rbp-0x18]
  4035f8:	mov    rax,QWORD PTR [rax+0x20]
  4035fc:	mov    rdx,QWORD PTR [rbp-0x18]
  403600:	mov    rsi,rdx
  403603:	mov    rdi,rax
  403606:	call   4033e5 <rb_base64_encode@plt+0xd05>
  40360b:	nop
  40360c:	leave  
  40360d:	ret    
  40360e:	endbr64 
  403612:	push   rbp
  403613:	mov    rbp,rsp
  403616:	sub    rsp,0x280
  40361d:	mov    QWORD PTR [rbp-0x268],rdi
  403624:	mov    DWORD PTR [rbp-0x26c],esi
  40362a:	mov    QWORD PTR [rbp-0x278],rdx
  403631:	mov    QWORD PTR [rbp-0x98],rcx
  403638:	mov    QWORD PTR [rbp-0x90],r8
  40363f:	mov    QWORD PTR [rbp-0x88],r9
  403646:	test   al,al
  403648:	je     403672 <rb_base64_encode@plt+0xf92>
  40364a:	vmovaps XMMWORD PTR [rbp-0x80],xmm0
  40364f:	vmovaps XMMWORD PTR [rbp-0x70],xmm1
  403654:	vmovaps XMMWORD PTR [rbp-0x60],xmm2
  403659:	vmovaps XMMWORD PTR [rbp-0x50],xmm3
  40365e:	vmovaps XMMWORD PTR [rbp-0x40],xmm4
  403663:	vmovaps XMMWORD PTR [rbp-0x30],xmm5
  403668:	vmovaps XMMWORD PTR [rbp-0x20],xmm6
  40366d:	vmovaps XMMWORD PTR [rbp-0x10],xmm7
  403672:	mov    rax,QWORD PTR fs:0x28
  40367b:	mov    QWORD PTR [rbp-0xb8],rax
  403682:	xor    eax,eax
  403684:	mov    rax,QWORD PTR [rbp-0x268]
  40368b:	movzx  eax,BYTE PTR [rax+0xb8]
  403692:	movzx  eax,al
  403695:	and    eax,0x2
  403698:	test   eax,eax
  40369a:	jne    40390d <rb_base64_encode@plt+0x122d>
  4036a0:	mov    rax,QWORD PTR [rbp-0x268]
  4036a7:	movzx  eax,BYTE PTR [rax+0xb8]
  4036ae:	movzx  eax,al
  4036b1:	and    eax,0x8
  4036b4:	test   eax,eax
  4036b6:	je     4036c7 <rb_base64_encode@plt+0xfe7>
  4036b8:	mov    rax,QWORD PTR [rbp-0x268]
  4036bf:	mov    rdi,rax
  4036c2:	call   4044e1 <rb_base64_encode@plt+0x1e01>
  4036c7:	mov    rax,QWORD PTR [rbp-0x268]
  4036ce:	mov    rdx,QWORD PTR [rax+0x88]
  4036d5:	mov    rax,QWORD PTR [rbp-0x268]
  4036dc:	mov    rax,QWORD PTR [rax+0x20]
  4036e0:	mov    rsi,rdx
  4036e3:	mov    rdi,rax
  4036e6:	call   4026b0 <rb_rawbuf_flush@plt>
  4036eb:	mov    rax,QWORD PTR [rbp-0x268]
  4036f2:	lea    rdx,[rax+0x30]
  4036f6:	mov    rax,QWORD PTR [rbp-0x268]
  4036fd:	mov    rax,QWORD PTR [rax+0x90]
  403704:	mov    rsi,rdx
  403707:	mov    rdi,rax
  40370a:	call   4024f0 <rb_linebuf_flush@plt>
  40370f:	mov    rax,QWORD PTR [rbp-0x268]
  403716:	mov    rax,QWORD PTR [rax+0x88]
  40371d:	mov    rdi,rax
  403720:	call   402540 <rb_close@plt>
  403725:	mov    rax,QWORD PTR [rbp-0x268]
  40372c:	movzx  eax,BYTE PTR [rax+0xb8]
  403733:	or     eax,0x2
  403736:	mov    edx,eax
  403738:	mov    rax,QWORD PTR [rbp-0x268]
  40373f:	mov    BYTE PTR [rax+0xb8],dl
  403745:	mov    rax,QWORD PTR [rbp-0x268]
  40374c:	mov    ecx,DWORD PTR [rax+0x80]
  403752:	mov    edx,0x10624dd3
  403757:	mov    eax,ecx
  403759:	mul    edx
  40375b:	mov    eax,edx
  40375d:	shr    eax,0x7
  403760:	imul   eax,eax,0x7d0
  403766:	sub    ecx,eax
  403768:	mov    eax,ecx
  40376a:	mov    edx,eax
  40376c:	mov    rax,rdx
  40376f:	add    rax,rax
  403772:	add    rax,rdx
  403775:	shl    rax,0x3
  403779:	lea    rdx,[rip+0x5aa0]        # 409220 <rb_base64_encode@plt+0x6b40>
  403780:	add    rdx,rax
  403783:	mov    rax,QWORD PTR [rbp-0x268]
  40378a:	mov    rsi,rdx
  40378d:	mov    rdi,rax
  403790:	call   4029e0 <rb_base64_encode@plt+0x300>
  403795:	cmp    DWORD PTR [rbp-0x26c],0x0
  40379c:	je     4037a8 <rb_base64_encode@plt+0x10c8>
  40379e:	cmp    QWORD PTR [rbp-0x278],0x0
  4037a6:	jne    4037e3 <rb_base64_encode@plt+0x1103>
  4037a8:	mov    rax,QWORD PTR [rbp-0x268]
  4037af:	mov    rax,QWORD PTR [rax+0x90]
  4037b6:	mov    rdi,rax
  4037b9:	call   402540 <rb_close@plt>
  4037be:	mov    rcx,QWORD PTR [rbp-0x268]
  4037c5:	mov    rax,QWORD PTR [rbp-0x268]
  4037cc:	lea    rdx,[rip+0x115cd]        # 414da0 <rb_base64_encode@plt+0x126c0>
  4037d3:	mov    rsi,rcx
  4037d6:	mov    rdi,rax
  4037d9:	call   4027d6 <rb_base64_encode@plt+0xf6>
  4037de:	jmp    40390e <rb_base64_encode@plt+0x122e>
  4037e3:	mov    rax,QWORD PTR [rbp-0x268]
  4037ea:	mov    rax,QWORD PTR [rax+0x90]
  4037f1:	mov    rdx,QWORD PTR [rbp-0x268]
  4037f8:	mov    rcx,rdx
  4037fb:	lea    rdx,[rip+0x1029]        # 40482b <rb_base64_encode@plt+0x214b>
  403802:	mov    esi,0x1
  403807:	mov    rdi,rax
  40380a:	call   4023f0 <rb_setselect@plt>
  40380f:	mov    rax,QWORD PTR [rbp-0x268]
  403816:	mov    rax,QWORD PTR [rax+0x90]
  40381d:	mov    ecx,0x0
  403822:	mov    edx,0x0
  403827:	mov    esi,0x2
  40382c:	mov    rdi,rax
  40382f:	call   4023f0 <rb_setselect@plt>
  403834:	mov    DWORD PTR [rbp-0x258],0x18
  40383e:	mov    DWORD PTR [rbp-0x254],0x30
  403848:	lea    rax,[rbp+0x10]
  40384c:	mov    QWORD PTR [rbp-0x250],rax
  403853:	lea    rax,[rbp-0xb0]
  40385a:	mov    QWORD PTR [rbp-0x248],rax
  403861:	lea    rcx,[rbp-0x258]
  403868:	mov    rdx,QWORD PTR [rbp-0x278]
  40386f:	lea    rax,[rbp-0x240]
  403876:	mov    esi,0x80
  40387b:	mov    rdi,rax
  40387e:	call   402580 <vsnprintf@plt>
  403883:	mov    BYTE PTR [rbp-0x1c0],0x44
  40388a:	mov    rax,QWORD PTR [rbp-0x268]
  403891:	mov    eax,DWORD PTR [rax+0x80]
  403897:	lea    rdx,[rbp-0x1c0]
  40389e:	inc    rdx
  4038a1:	mov    esi,eax
  4038a3:	mov    rdi,rdx
  4038a6:	call   402b78 <rb_base64_encode@plt+0x498>
  4038ab:	lea    rax,[rbp-0x240]
  4038b2:	lea    rdx,[rbp-0x1c0]
  4038b9:	lea    rcx,[rdx+0x5]
  4038bd:	mov    edx,0xfb
  4038c2:	mov    rsi,rax
  4038c5:	mov    rdi,rcx
  4038c8:	call   402460 <rb_strlcpy@plt>
  4038cd:	lea    rax,[rbp-0x240]
  4038d4:	mov    rdi,rax
  4038d7:	call   402490 <strlen@plt>
  4038dc:	add    eax,0x6
  4038df:	mov    DWORD PTR [rbp-0x25c],eax
  4038e5:	mov    eax,DWORD PTR [rbp-0x25c]
  4038eb:	movsxd rdx,eax
  4038ee:	mov    rax,QWORD PTR [rbp-0x268]
  4038f5:	mov    rax,QWORD PTR [rax+0x18]
  4038f9:	lea    rcx,[rbp-0x1c0]
  403900:	mov    rsi,rcx
  403903:	mov    rdi,rax
  403906:	call   40356a <rb_base64_encode@plt+0xe8a>
  40390b:	jmp    40390e <rb_base64_encode@plt+0x122e>
  40390d:	nop
  40390e:	mov    rax,QWORD PTR [rbp-0xb8]
  403915:	xor    rax,QWORD PTR fs:0x28
  40391e:	je     403925 <rb_base64_encode@plt+0x1245>
  403920:	call   4025d0 <__stack_chk_fail@plt>
  403925:	leave  
  403926:	ret    
  403927:	endbr64 
  40392b:	push   rbp
  40392c:	mov    rbp,rsp
  40392f:	sub    rsp,0x30
  403933:	mov    QWORD PTR [rbp-0x18],rdi
  403937:	mov    QWORD PTR [rbp-0x20],rsi
  40393b:	mov    QWORD PTR [rbp-0x28],rdx
  40393f:	mov    edi,0xe0
  403944:	call   402ad4 <rb_base64_encode@plt+0x3f4>
  403949:	mov    QWORD PTR [rbp-0x8],rax
  40394d:	mov    rax,QWORD PTR [rbp-0x8]
  403951:	mov    rdx,QWORD PTR [rbp-0x18]
  403955:	mov    QWORD PTR [rax+0x18],rdx
  403959:	mov    rax,QWORD PTR [rbp-0x8]
  40395d:	mov    rdx,QWORD PTR [rbp-0x20]
  403961:	mov    QWORD PTR [rax+0x88],rdx
  403968:	mov    rax,QWORD PTR [rbp-0x8]
  40396c:	mov    rdx,QWORD PTR [rbp-0x28]
  403970:	mov    QWORD PTR [rax+0x90],rdx
  403977:	mov    rax,QWORD PTR [rbp-0x8]
  40397b:	mov    DWORD PTR [rax+0x80],0xffffffff
  403985:	mov    rax,QWORD PTR [rbp-0x20]
  403989:	mov    rdi,rax
  40398c:	call   402440 <rb_set_nb@plt>
  403991:	mov    rax,QWORD PTR [rbp-0x28]
  403995:	mov    rdi,rax
  403998:	call   402440 <rb_set_nb@plt>
  40399d:	mov    rax,QWORD PTR [rbp-0x8]
  4039a1:	add    rax,0x58
  4039a5:	mov    rdi,rax
  4039a8:	call   402650 <rb_linebuf_newbuf@plt>
  4039ad:	mov    rax,QWORD PTR [rbp-0x8]
  4039b1:	add    rax,0x30
  4039b5:	mov    rdi,rax
  4039b8:	call   402650 <rb_linebuf_newbuf@plt>
  4039bd:	call   402600 <rb_new_rawbuffer@plt>
  4039c2:	mov    rdx,rax
  4039c5:	mov    rax,QWORD PTR [rbp-0x8]
  4039c9:	mov    QWORD PTR [rax+0x28],rdx
  4039cd:	call   402600 <rb_new_rawbuffer@plt>
  4039d2:	mov    rdx,rax
  4039d5:	mov    rax,QWORD PTR [rbp-0x8]
  4039d9:	mov    QWORD PTR [rax+0x20],rdx
  4039dd:	mov    rax,QWORD PTR [rbp-0x8]
  4039e1:	leave  
  4039e2:	ret    
  4039e3:	endbr64 
  4039e7:	push   rbp
  4039e8:	mov    rbp,rsp
  4039eb:	sub    rsp,0x20
  4039ef:	mov    QWORD PTR [rbp-0x18],rdi
  4039f3:	mov    QWORD PTR [rbp-0x20],rsi
  4039f7:	mov    DWORD PTR [rbp-0x4],0x0
  4039fe:	jmp    403a1e <rb_base64_encode@plt+0x133e>
  403a00:	mov    rax,QWORD PTR [rbp-0x20]
  403a04:	mov    edx,DWORD PTR [rbp-0x4]
  403a07:	movsxd rdx,edx
  403a0a:	add    rdx,0x4
  403a0e:	mov    rax,QWORD PTR [rax+rdx*8+0x8]
  403a13:	mov    rdi,rax
  403a16:	call   402540 <rb_close@plt>
  403a1b:	inc    DWORD PTR [rbp-0x4]
  403a1e:	mov    rax,QWORD PTR [rbp-0x20]
  403a22:	mov    eax,DWORD PTR [rax+0x48]
  403a25:	cmp    DWORD PTR [rbp-0x4],eax
  403a28:	jl     403a00 <rb_base64_encode@plt+0x1320>
  403a2a:	nop
  403a2b:	leave  
  403a2c:	ret    
  403a2d:	endbr64 
  403a31:	push   rbp
  403a32:	mov    rbp,rsp
  403a35:	mov    QWORD PTR [rbp-0x18],rdi
  403a39:	mov    DWORD PTR [rbp-0x1c],esi
  403a3c:	mov    QWORD PTR [rbp-0x28],rdx
  403a40:	mov    DWORD PTR [rbp-0x4],0x0
  403a47:	jmp    403a8c <rb_base64_encode@plt+0x13ac>
  403a49:	mov    eax,DWORD PTR [rbp-0x4]
  403a4c:	movsxd rdx,eax
  403a4f:	mov    rax,QWORD PTR [rbp-0x18]
  403a53:	add    rax,rdx
  403a56:	movzx  ecx,BYTE PTR [rax]
  403a59:	mov    eax,DWORD PTR [rbp-0x4]
  403a5c:	cdq    
  403a5d:	shr    edx,0x1e
  403a60:	add    eax,edx
  403a62:	and    eax,0x3
  403a65:	sub    eax,edx
  403a67:	movsxd rdx,eax
  403a6a:	mov    rax,QWORD PTR [rbp-0x28]
  403a6e:	add    rax,rdx
  403a71:	movzx  eax,BYTE PTR [rax]
  403a74:	mov    esi,eax
  403a76:	mov    eax,DWORD PTR [rbp-0x4]
  403a79:	movsxd rdx,eax
  403a7c:	mov    rax,QWORD PTR [rbp-0x18]
  403a80:	add    rdx,rax
  403a83:	mov    eax,ecx
  403a85:	xor    eax,esi
  403a87:	mov    BYTE PTR [rdx],al
  403a89:	inc    DWORD PTR [rbp-0x4]
  403a8c:	mov    eax,DWORD PTR [rbp-0x4]
  403a8f:	cmp    eax,DWORD PTR [rbp-0x1c]
  403a92:	jl     403a49 <rb_base64_encode@plt+0x1369>
  403a94:	nop
  403a95:	pop    rbp
  403a96:	ret    
  403a97:	endbr64 
  403a9b:	push   rbp
  403a9c:	mov    rbp,rsp
  403a9f:	sub    rsp,0xc0
  403aa6:	mov    QWORD PTR [rbp-0xa8],rdi
  403aad:	mov    QWORD PTR [rbp-0xb0],rsi
  403ab4:	mov    DWORD PTR [rbp-0xb4],edx
  403aba:	mov    rax,QWORD PTR fs:0x28
  403ac3:	mov    QWORD PTR [rbp-0x8],rax
  403ac7:	xor    eax,eax
  403ac9:	cmp    DWORD PTR [rbp-0xb4],0x0
  403ad0:	je     403b28 <rb_base64_encode@plt+0x1448>
  403ad2:	mov    rax,QWORD PTR [rbp-0xa8]
  403ad9:	mov    rax,QWORD PTR [rax+0x28]
  403add:	lea    rcx,[rbp-0x94]
  403ae4:	mov    edx,0x4
  403ae9:	mov    rsi,rcx
  403aec:	mov    rdi,rax
  403aef:	call   4025e0 <rb_rawbuf_get@plt>
  403af4:	mov    DWORD PTR [rbp-0x98],eax
  403afa:	cmp    DWORD PTR [rbp-0x98],0x0
  403b01:	jne    403b28 <rb_base64_encode@plt+0x1448>
  403b03:	mov    rax,QWORD PTR [rbp-0xa8]
  403b0a:	lea    rdx,[rip+0x3577]        # 407088 <rb_base64_encode@plt+0x49a8>
  403b11:	mov    esi,0x1
  403b16:	mov    rdi,rax
  403b19:	mov    eax,0x0
  403b1e:	call   40360e <rb_base64_encode@plt+0xf2e>
  403b23:	jmp    403bd0 <rb_base64_encode@plt+0x14f0>
  403b28:	mov    rax,QWORD PTR [rbp-0xb0]
  403b2f:	movzx  eax,BYTE PTR [rax+0x1]
  403b33:	movzx  edx,al
  403b36:	mov    rax,QWORD PTR [rbp-0xa8]
  403b3d:	mov    rax,QWORD PTR [rax+0x28]
  403b41:	lea    rcx,[rbp-0x90]
  403b48:	mov    rsi,rcx
  403b4b:	mov    rdi,rax
  403b4e:	call   4025e0 <rb_rawbuf_get@plt>
  403b53:	mov    DWORD PTR [rbp-0x98],eax
  403b59:	cmp    DWORD PTR [rbp-0x98],0x0
  403b60:	jne    403b84 <rb_base64_encode@plt+0x14a4>
  403b62:	mov    rax,QWORD PTR [rbp-0xa8]
  403b69:	lea    rdx,[rip+0x3548]        # 4070b8 <rb_base64_encode@plt+0x49d8>
  403b70:	mov    esi,0x1
  403b75:	mov    rdi,rax
  403b78:	mov    eax,0x0
  403b7d:	call   40360e <rb_base64_encode@plt+0xf2e>
  403b82:	jmp    403bd0 <rb_base64_encode@plt+0x14f0>
  403b84:	cmp    DWORD PTR [rbp-0xb4],0x0
  403b8b:	je     403bab <rb_base64_encode@plt+0x14cb>
  403b8d:	lea    rdx,[rbp-0x94]
  403b94:	mov    ecx,DWORD PTR [rbp-0x98]
  403b9a:	lea    rax,[rbp-0x90]
  403ba1:	mov    esi,ecx
  403ba3:	mov    rdi,rax
  403ba6:	call   403a2d <rb_base64_encode@plt+0x134d>
  403bab:	mov    rax,QWORD PTR [rbp-0xa8]
  403bb2:	lea    rdi,[rax+0x30]
  403bb6:	mov    edx,DWORD PTR [rbp-0x98]
  403bbc:	lea    rax,[rbp-0x90]
  403bc3:	mov    ecx,0x1
  403bc8:	mov    rsi,rax
  403bcb:	call   402450 <rb_linebuf_parse@plt>
  403bd0:	mov    rax,QWORD PTR [rbp-0x8]
  403bd4:	xor    rax,QWORD PTR fs:0x28
  403bdd:	je     403be4 <rb_base64_encode@plt+0x1504>
  403bdf:	call   4025d0 <__stack_chk_fail@plt>
  403be4:	leave  
  403be5:	ret    
  403be6:	endbr64 
  403bea:	push   rbp
  403beb:	mov    rbp,rsp
  403bee:	lea    r11,[rsp-0x4000]
  403bf6:	sub    rsp,0x1000
  403bfd:	or     QWORD PTR [rsp],0x0
  403c02:	cmp    rsp,r11
  403c05:	jne    403bf6 <rb_base64_encode@plt+0x1516>
  403c07:	sub    rsp,0x40
  403c0b:	mov    QWORD PTR [rbp-0x4028],rdi
  403c12:	mov    QWORD PTR [rbp-0x4030],rsi
  403c19:	mov    DWORD PTR [rbp-0x4034],edx
  403c1f:	mov    rax,QWORD PTR fs:0x28
  403c28:	mov    QWORD PTR [rbp-0x8],rax
  403c2c:	xor    eax,eax
  403c2e:	lea    rax,[rbp-0x4010]
  403c35:	mov    edx,0x4000
  403c3a:	mov    esi,0x0
  403c3f:	mov    rdi,rax
  403c42:	call   4023b0 <memset@plt>
  403c47:	mov    rax,QWORD PTR [rbp-0x4028]
  403c4e:	mov    rax,QWORD PTR [rax+0x28]
  403c52:	lea    rcx,[rbp-0x401a]
  403c59:	mov    edx,0x2
  403c5e:	mov    rsi,rcx
  403c61:	mov    rdi,rax
  403c64:	call   4025e0 <rb_rawbuf_get@plt>
  403c69:	mov    DWORD PTR [rbp-0x4018],eax
  403c6f:	cmp    DWORD PTR [rbp-0x4018],0x0
  403c76:	jne    403c9d <rb_base64_encode@plt+0x15bd>
  403c78:	mov    rax,QWORD PTR [rbp-0x4028]
  403c7f:	lea    rdx,[rip+0x3462]        # 4070e8 <rb_base64_encode@plt+0x4a08>
  403c86:	mov    esi,0x1
  403c8b:	mov    rdi,rax
  403c8e:	mov    eax,0x0
  403c93:	call   40360e <rb_base64_encode@plt+0xf2e>
  403c98:	jmp    403db8 <rb_base64_encode@plt+0x16d8>
  403c9d:	movzx  eax,WORD PTR [rbp-0x401a]
  403ca4:	movzx  eax,ax
  403ca7:	mov    edi,eax
  403ca9:	call   4024e0 <ntohs@plt>
  403cae:	mov    WORD PTR [rbp-0x401a],ax
  403cb5:	cmp    DWORD PTR [rbp-0x4034],0x0
  403cbc:	je     403d14 <rb_base64_encode@plt+0x1634>
  403cbe:	mov    rax,QWORD PTR [rbp-0x4028]
  403cc5:	mov    rax,QWORD PTR [rax+0x28]
  403cc9:	lea    rcx,[rbp-0x4014]
  403cd0:	mov    edx,0x4
  403cd5:	mov    rsi,rcx
  403cd8:	mov    rdi,rax
  403cdb:	call   4025e0 <rb_rawbuf_get@plt>
  403ce0:	mov    DWORD PTR [rbp-0x4018],eax
  403ce6:	cmp    DWORD PTR [rbp-0x4018],0x0
  403ced:	jne    403d14 <rb_base64_encode@plt+0x1634>
  403cef:	mov    rax,QWORD PTR [rbp-0x4028]
  403cf6:	lea    rdx,[rip+0x338b]        # 407088 <rb_base64_encode@plt+0x49a8>
  403cfd:	mov    esi,0x1
  403d02:	mov    rdi,rax
  403d05:	mov    eax,0x0
  403d0a:	call   40360e <rb_base64_encode@plt+0xf2e>
  403d0f:	jmp    403db8 <rb_base64_encode@plt+0x16d8>
  403d14:	movzx  eax,WORD PTR [rbp-0x401a]
  403d1b:	movzx  edx,ax
  403d1e:	mov    rax,QWORD PTR [rbp-0x4028]
  403d25:	mov    rax,QWORD PTR [rax+0x28]
  403d29:	lea    rcx,[rbp-0x4010]
  403d30:	mov    rsi,rcx
  403d33:	mov    rdi,rax
  403d36:	call   4025e0 <rb_rawbuf_get@plt>
  403d3b:	mov    DWORD PTR [rbp-0x4018],eax
  403d41:	cmp    DWORD PTR [rbp-0x4018],0x0
  403d48:	jne    403d6c <rb_base64_encode@plt+0x168c>
  403d4a:	mov    rax,QWORD PTR [rbp-0x4028]
  403d51:	lea    rdx,[rip+0x3360]        # 4070b8 <rb_base64_encode@plt+0x49d8>
  403d58:	mov    esi,0x1
  403d5d:	mov    rdi,rax
  403d60:	mov    eax,0x0
  403d65:	call   40360e <rb_base64_encode@plt+0xf2e>
  403d6a:	jmp    403db8 <rb_base64_encode@plt+0x16d8>
  403d6c:	cmp    DWORD PTR [rbp-0x4034],0x0
  403d73:	je     403d93 <rb_base64_encode@plt+0x16b3>
  403d75:	lea    rdx,[rbp-0x4014]
  403d7c:	mov    ecx,DWORD PTR [rbp-0x4018]
  403d82:	lea    rax,[rbp-0x4010]
  403d89:	mov    esi,ecx
  403d8b:	mov    rdi,rax
  403d8e:	call   403a2d <rb_base64_encode@plt+0x134d>
  403d93:	mov    rax,QWORD PTR [rbp-0x4028]
  403d9a:	lea    rdi,[rax+0x30]
  403d9e:	mov    edx,DWORD PTR [rbp-0x4018]
  403da4:	lea    rax,[rbp-0x4010]
  403dab:	mov    ecx,0x1
  403db0:	mov    rsi,rax
  403db3:	call   402450 <rb_linebuf_parse@plt>
  403db8:	mov    rax,QWORD PTR [rbp-0x8]
  403dbc:	xor    rax,QWORD PTR fs:0x28
  403dc5:	je     403dcc <rb_base64_encode@plt+0x16ec>
  403dc7:	call   4025d0 <__stack_chk_fail@plt>
  403dcc:	leave  
  403dcd:	ret    
  403dce:	endbr64 
  403dd2:	push   rbp
  403dd3:	mov    rbp,rsp
  403dd6:	mov    QWORD PTR [rbp-0x8],rdi
  403dda:	mov    QWORD PTR [rbp-0x10],rsi
  403dde:	mov    DWORD PTR [rbp-0x14],edx
  403de1:	nop
  403de2:	pop    rbp
  403de3:	ret    
  403de4:	endbr64 
  403de8:	push   rbp
  403de9:	mov    rbp,rsp
  403dec:	sub    rsp,0x30
  403df0:	mov    QWORD PTR [rbp-0x28],rdi
  403df4:	mov    rax,QWORD PTR fs:0x28
  403dfd:	mov    QWORD PTR [rbp-0x8],rax
  403e01:	xor    eax,eax
  403e03:	mov    rax,QWORD PTR [rbp-0x28]
  403e07:	mov    rax,QWORD PTR [rax+0x28]
  403e0b:	lea    rcx,[rbp-0x12]
  403e0f:	mov    edx,0x2
  403e14:	mov    rsi,rcx
  403e17:	mov    rdi,rax
  403e1a:	call   4025e0 <rb_rawbuf_get@plt>
  403e1f:	mov    DWORD PTR [rbp-0x10],eax
  403e22:	cmp    DWORD PTR [rbp-0x10],0x2
  403e26:	jne    403ea3 <rb_base64_encode@plt+0x17c3>
  403e28:	movzx  eax,BYTE PTR [rbp-0x11]
  403e2c:	shr    al,0x7
  403e2f:	cmp    al,0x1
  403e31:	sete   al
  403e34:	movzx  eax,al
  403e37:	mov    DWORD PTR [rbp-0xc],eax
  403e3a:	movzx  eax,BYTE PTR [rbp-0x11]
  403e3e:	and    eax,0x7f
  403e41:	mov    BYTE PTR [rbp-0x11],al
  403e44:	movzx  eax,BYTE PTR [rbp-0x11]
  403e48:	movzx  eax,al
  403e4b:	cmp    eax,0x7e
  403e4e:	je     403e57 <rb_base64_encode@plt+0x1777>
  403e50:	cmp    eax,0x7f
  403e53:	je     403e6f <rb_base64_encode@plt+0x178f>
  403e55:	jmp    403e87 <rb_base64_encode@plt+0x17a7>
  403e57:	mov    edx,DWORD PTR [rbp-0xc]
  403e5a:	lea    rcx,[rbp-0x12]
  403e5e:	mov    rax,QWORD PTR [rbp-0x28]
  403e62:	mov    rsi,rcx
  403e65:	mov    rdi,rax
  403e68:	call   403be6 <rb_base64_encode@plt+0x1506>
  403e6d:	jmp    403e9e <rb_base64_encode@plt+0x17be>
  403e6f:	mov    edx,DWORD PTR [rbp-0xc]
  403e72:	lea    rcx,[rbp-0x12]
  403e76:	mov    rax,QWORD PTR [rbp-0x28]
  403e7a:	mov    rsi,rcx
  403e7d:	mov    rdi,rax
  403e80:	call   403dce <rb_base64_encode@plt+0x16ee>
  403e85:	jmp    403e9e <rb_base64_encode@plt+0x17be>
  403e87:	mov    edx,DWORD PTR [rbp-0xc]
  403e8a:	lea    rcx,[rbp-0x12]
  403e8e:	mov    rax,QWORD PTR [rbp-0x28]
  403e92:	mov    rsi,rcx
  403e95:	mov    rdi,rax
  403e98:	call   403a97 <rb_base64_encode@plt+0x13b7>
  403e9d:	nop
  403e9e:	jmp    403e03 <rb_base64_encode@plt+0x1723>
  403ea3:	nop
  403ea4:	mov    rax,QWORD PTR [rbp-0x28]
  403ea8:	mov    rax,QWORD PTR [rax+0x90]
  403eaf:	mov    rdx,QWORD PTR [rbp-0x28]
  403eb3:	mov    rsi,rdx
  403eb6:	mov    rdi,rax
  403eb9:	call   402ee4 <rb_base64_encode@plt+0x804>
  403ebe:	nop
  403ebf:	mov    rax,QWORD PTR [rbp-0x8]
  403ec3:	xor    rax,QWORD PTR fs:0x28
  403ecc:	je     403ed3 <rb_base64_encode@plt+0x17f3>
  403ece:	call   4025d0 <__stack_chk_fail@plt>
  403ed3:	leave  
  403ed4:	ret    
  403ed5:	endbr64 
  403ed9:	push   rbp
  403eda:	mov    rbp,rsp
  403edd:	lea    r11,[rsp-0x4000]
  403ee5:	sub    rsp,0x1000
  403eec:	or     QWORD PTR [rsp],0x0
  403ef1:	cmp    rsp,r11
  403ef4:	jne    403ee5 <rb_base64_encode@plt+0x1805>
  403ef6:	sub    rsp,0xd0
  403efd:	mov    QWORD PTR [rbp-0x40c8],rdi
  403f04:	mov    rax,QWORD PTR fs:0x28
  403f0d:	mov    QWORD PTR [rbp-0x8],rax
  403f11:	xor    eax,eax
  403f13:	lea    rax,[rbp-0x4010]
  403f1a:	mov    edx,0x4000
  403f1f:	mov    esi,0x0
  403f24:	mov    rdi,rax
  403f27:	call   4023b0 <memset@plt>
  403f2c:	mov    QWORD PTR [rbp-0x40a0],0x0
  403f37:	mov    rax,QWORD PTR [rbp-0x40c8]
  403f3e:	mov    rax,QWORD PTR [rax+0x28]
  403f42:	lea    rcx,[rbp-0x4010]
  403f49:	mov    edx,0x4000
  403f4e:	mov    rsi,rcx
  403f51:	mov    rdi,rax
  403f54:	call   4025e0 <rb_rawbuf_get@plt>
  403f59:	mov    DWORD PTR [rbp-0x40b4],eax
  403f5f:	cmp    DWORD PTR [rbp-0x40b4],0x0
  403f66:	je     40409e <rb_base64_encode@plt+0x19be>
  403f6c:	lea    rax,[rbp-0x4010]
  403f73:	lea    rsi,[rip+0x319c]        # 407116 <rb_base64_encode@plt+0x4a36>
  403f7a:	mov    rdi,rax
  403f7d:	call   402530 <rb_strcasestr@plt>
  403f82:	mov    QWORD PTR [rbp-0x40a0],rax
  403f89:	cmp    QWORD PTR [rbp-0x40a0],0x0
  403f91:	je     403f2c <rb_base64_encode@plt+0x184c>
  403f93:	mov    rax,QWORD PTR [rbp-0x40a0]
  403f9a:	add    rax,0x12
  403f9e:	mov    QWORD PTR [rbp-0x40b0],rax
  403fa5:	jmp    403fca <rb_base64_encode@plt+0x18ea>
  403fa7:	mov    rax,QWORD PTR [rbp-0x40b0]
  403fae:	movzx  eax,BYTE PTR [rax]
  403fb1:	cmp    al,0x20
  403fb3:	je     403fc3 <rb_base64_encode@plt+0x18e3>
  403fb5:	mov    rax,QWORD PTR [rbp-0x40b0]
  403fbc:	movzx  eax,BYTE PTR [rax]
  403fbf:	cmp    al,0x9
  403fc1:	jne    403ff0 <rb_base64_encode@plt+0x1910>
  403fc3:	inc    QWORD PTR [rbp-0x40b0]
  403fca:	lea    rax,[rbp-0x4010]
  403fd1:	add    rax,0x4000
  403fd7:	cmp    QWORD PTR [rbp-0x40b0],rax
  403fde:	jae    403ff1 <rb_base64_encode@plt+0x1911>
  403fe0:	mov    rax,QWORD PTR [rbp-0x40b0]
  403fe7:	movzx  eax,BYTE PTR [rax]
  403fea:	test   al,al
  403fec:	jne    403fa7 <rb_base64_encode@plt+0x18c7>
  403fee:	jmp    403ff1 <rb_base64_encode@plt+0x1911>
  403ff0:	nop
  403ff1:	mov    rax,QWORD PTR [rbp-0x40b0]
  403ff8:	mov    QWORD PTR [rbp-0x40a8],rax
  403fff:	jmp    404030 <rb_base64_encode@plt+0x1950>
  404001:	mov    rax,QWORD PTR [rbp-0x40a8]
  404008:	movzx  eax,BYTE PTR [rax]
  40400b:	cmp    al,0xd
  40400d:	je     40401d <rb_base64_encode@plt+0x193d>
  40400f:	mov    rax,QWORD PTR [rbp-0x40a8]
  404016:	movzx  eax,BYTE PTR [rax]
  404019:	cmp    al,0xa
  40401b:	jne    404029 <rb_base64_encode@plt+0x1949>
  40401d:	mov    rax,QWORD PTR [rbp-0x40a8]
  404024:	mov    BYTE PTR [rax],0x0
  404027:	jmp    404054 <rb_base64_encode@plt+0x1974>
  404029:	inc    QWORD PTR [rbp-0x40a8]
  404030:	lea    rax,[rbp-0x4010]
  404037:	add    rax,0x4000
  40403d:	cmp    QWORD PTR [rbp-0x40a8],rax
  404044:	jae    404054 <rb_base64_encode@plt+0x1974>
  404046:	mov    rax,QWORD PTR [rbp-0x40a8]
  40404d:	movzx  eax,BYTE PTR [rax]
  404050:	test   al,al
  404052:	jne    404001 <rb_base64_encode@plt+0x1921>
  404054:	mov    rax,QWORD PTR [rbp-0x40c8]
  40405b:	lea    rcx,[rax+0xb9]
  404062:	mov    rax,QWORD PTR [rbp-0x40b0]
  404069:	mov    edx,0x25
  40406e:	mov    rsi,rax
  404071:	mov    rdi,rcx
  404074:	call   402460 <rb_strlcpy@plt>
  404079:	mov    rax,QWORD PTR [rbp-0x40c8]
  404080:	movzx  eax,BYTE PTR [rax+0xb8]
  404087:	or     eax,0x8
  40408a:	mov    edx,eax
  40408c:	mov    rax,QWORD PTR [rbp-0x40c8]
  404093:	mov    BYTE PTR [rax+0xb8],dl
  404099:	jmp    403f2c <rb_base64_encode@plt+0x184c>
  40409e:	nop
  40409f:	mov    rax,QWORD PTR [rbp-0x40c8]
  4040a6:	movzx  eax,BYTE PTR [rax+0xb8]
  4040ad:	movzx  eax,al
  4040b0:	and    eax,0x8
  4040b3:	test   eax,eax
  4040b5:	je     4041c1 <rb_base64_encode@plt+0x1ae1>
  4040bb:	lea    rax,[rbp-0x4090]
  4040c2:	mov    rdi,rax
  4040c5:	call   4066c8 <rb_base64_encode@plt+0x3fe8>
  4040ca:	mov    rax,QWORD PTR [rbp-0x40c8]
  4040d1:	add    rax,0xb9
  4040d7:	mov    rdi,rax
  4040da:	call   402490 <strlen@plt>
  4040df:	mov    rdx,rax
  4040e2:	mov    rax,QWORD PTR [rbp-0x40c8]
  4040e9:	lea    rcx,[rax+0xb9]
  4040f0:	lea    rax,[rbp-0x4090]
  4040f7:	mov    rsi,rcx
  4040fa:	mov    rdi,rax
  4040fd:	call   406719 <rb_base64_encode@plt+0x4039>
  404102:	lea    rax,[rbp-0x4090]
  404109:	mov    edx,0x24
  40410e:	lea    rsi,[rip+0x301b]        # 407130 <rb_base64_encode@plt+0x4a50>
  404115:	mov    rdi,rax
  404118:	call   406719 <rb_base64_encode@plt+0x4039>
  40411d:	lea    rdx,[rbp-0x4030]
  404124:	lea    rax,[rbp-0x4090]
  40412b:	mov    rsi,rdx
  40412e:	mov    rdi,rax
  404131:	call   40682d <rb_base64_encode@plt+0x414d>
  404136:	lea    rax,[rbp-0x4030]
  40413d:	mov    esi,0x14
  404142:	mov    rdi,rax
  404145:	call   4026e0 <rb_base64_encode@plt>
  40414a:	mov    QWORD PTR [rbp-0x4098],rax
  404151:	mov    rax,QWORD PTR [rbp-0x40c8]
  404158:	mov    edx,0x81
  40415d:	lea    rsi,[rip+0x2ff4]        # 407158 <rb_base64_encode@plt+0x4a78>
  404164:	mov    rdi,rax
  404167:	call   4031a7 <rb_base64_encode@plt+0xac7>
  40416c:	mov    rax,QWORD PTR [rbp-0x4098]
  404173:	mov    rdi,rax
  404176:	call   402490 <strlen@plt>
  40417b:	mov    rdx,rax
  40417e:	mov    rcx,QWORD PTR [rbp-0x4098]
  404185:	mov    rax,QWORD PTR [rbp-0x40c8]
  40418c:	mov    rsi,rcx
  40418f:	mov    rdi,rax
  404192:	call   4031a7 <rb_base64_encode@plt+0xac7>
  404197:	mov    rax,QWORD PTR [rbp-0x40c8]
  40419e:	mov    edx,0x4
  4041a3:	lea    rsi,[rip+0x3030]        # 4071da <rb_base64_encode@plt+0x4afa>
  4041aa:	mov    rdi,rax
  4041ad:	call   4031a7 <rb_base64_encode@plt+0xac7>
  4041b2:	mov    rax,QWORD PTR [rbp-0x4098]
  4041b9:	mov    rdi,rax
  4041bc:	call   402b10 <rb_base64_encode@plt+0x430>
  4041c1:	mov    rax,QWORD PTR [rbp-0x40c8]
  4041c8:	mov    rax,QWORD PTR [rax+0x88]
  4041cf:	mov    rdx,QWORD PTR [rbp-0x40c8]
  4041d6:	mov    rsi,rdx
  4041d9:	mov    rdi,rax
  4041dc:	call   402fee <rb_base64_encode@plt+0x90e>
  4041e1:	nop
  4041e2:	mov    rax,QWORD PTR [rbp-0x8]
  4041e6:	xor    rax,QWORD PTR fs:0x28
  4041ef:	je     4041f6 <rb_base64_encode@plt+0x1b16>
  4041f1:	call   4025d0 <__stack_chk_fail@plt>
  4041f6:	leave  
  4041f7:	ret    
  4041f8:	endbr64 
  4041fc:	push   rbp
  4041fd:	mov    rbp,rsp
  404200:	lea    r11,[rsp-0x4000]
  404208:	sub    rsp,0x1000
  40420f:	or     QWORD PTR [rsp],0x0
  404214:	cmp    rsp,r11
  404217:	jne    404208 <rb_base64_encode@plt+0x1b28>
  404219:	sub    rsp,0x30
  40421d:	mov    QWORD PTR [rbp-0x4028],rdi
  404224:	mov    QWORD PTR [rbp-0x4030],rsi
  40422b:	mov    rax,QWORD PTR fs:0x28
  404234:	mov    QWORD PTR [rbp-0x8],rax
  404238:	xor    eax,eax
  40423a:	lea    rax,[rbp-0x4010]
  404241:	mov    edx,0x4000
  404246:	mov    esi,0x0
  40424b:	mov    rdi,rax
  40424e:	call   4023b0 <memset@plt>
  404253:	mov    rax,QWORD PTR [rbp-0x4030]
  40425a:	mov    QWORD PTR [rbp-0x4018],rax
  404261:	mov    DWORD PTR [rbp-0x401c],0x0
  40426b:	cmp    QWORD PTR [rbp-0x4018],0x0
  404273:	je     404424 <rb_base64_encode@plt+0x1d44>
  404279:	mov    rax,QWORD PTR [rbp-0x4018]
  404280:	movzx  eax,BYTE PTR [rax+0xb8]
  404287:	movzx  eax,al
  40428a:	and    eax,0x2
  40428d:	test   eax,eax
  40428f:	jne    404427 <rb_base64_encode@plt+0x1d47>
  404295:	mov    rax,QWORD PTR [rbp-0x4018]
  40429c:	movzx  eax,BYTE PTR [rax+0xb8]
  4042a3:	movzx  eax,al
  4042a6:	and    eax,0x2
  4042a9:	test   eax,eax
  4042ab:	jne    40442a <rb_base64_encode@plt+0x1d4a>
  4042b1:	lea    rcx,[rbp-0x4010]
  4042b8:	mov    rax,QWORD PTR [rbp-0x4028]
  4042bf:	mov    edx,0x4000
  4042c4:	mov    rsi,rcx
  4042c7:	mov    rdi,rax
  4042ca:	call   4024b0 <rb_read@plt>
  4042cf:	mov    DWORD PTR [rbp-0x401c],eax
  4042d5:	cmp    DWORD PTR [rbp-0x401c],0x0
  4042dc:	jns    404363 <rb_base64_encode@plt+0x1c83>
  4042e2:	call   4025b0 <__errno_location@plt>
  4042e7:	mov    eax,DWORD PTR [rax]
  4042e9:	mov    edi,eax
  4042eb:	call   4023d0 <rb_ignore_errno@plt>
  4042f0:	test   eax,eax
  4042f2:	je     40433e <rb_base64_encode@plt+0x1c5e>
  4042f4:	mov    rdx,QWORD PTR [rbp-0x4018]
  4042fb:	mov    rax,QWORD PTR [rbp-0x4028]
  404302:	mov    rcx,rdx
  404305:	lea    rdx,[rip+0xfffffffffffffeec]        # 4041f8 <rb_base64_encode@plt+0x1b18>
  40430c:	mov    esi,0x1
  404311:	mov    rdi,rax
  404314:	call   4023f0 <rb_setselect@plt>
  404319:	mov    rax,QWORD PTR [rbp-0x4018]
  404320:	mov    rax,QWORD PTR [rax+0x90]
  404327:	mov    rdx,QWORD PTR [rbp-0x4018]
  40432e:	mov    rsi,rdx
  404331:	mov    rdi,rax
  404334:	call   402ee4 <rb_base64_encode@plt+0x804>
  404339:	jmp    40442b <rb_base64_encode@plt+0x1d4b>
  40433e:	mov    rax,QWORD PTR [rbp-0x4018]
  404345:	lea    rdx,[rip+0x2e93]        # 4071df <rb_base64_encode@plt+0x4aff>
  40434c:	mov    esi,0x0
  404351:	mov    rdi,rax
  404354:	mov    eax,0x0
  404359:	call   40360e <rb_base64_encode@plt+0xf2e>
  40435e:	jmp    40442b <rb_base64_encode@plt+0x1d4b>
  404363:	cmp    DWORD PTR [rbp-0x401c],0x0
  40436a:	jne    404391 <rb_base64_encode@plt+0x1cb1>
  40436c:	mov    rax,QWORD PTR [rbp-0x4018]
  404373:	lea    rdx,[rip+0x2e65]        # 4071df <rb_base64_encode@plt+0x4aff>
  40437a:	mov    esi,0x0
  40437f:	mov    rdi,rax
  404382:	mov    eax,0x0
  404387:	call   40360e <rb_base64_encode@plt+0xf2e>
  40438c:	jmp    40442b <rb_base64_encode@plt+0x1d4b>
  404391:	mov    rax,QWORD PTR [rbp-0x4018]
  404398:	mov    rax,QWORD PTR [rax+0x28]
  40439c:	mov    edx,DWORD PTR [rbp-0x401c]
  4043a2:	lea    rcx,[rbp-0x4010]
  4043a9:	mov    rsi,rcx
  4043ac:	mov    rdi,rax
  4043af:	call   4026a0 <rb_rawbuf_append@plt>
  4043b4:	mov    rax,QWORD PTR [rbp-0x4018]
  4043bb:	movzx  eax,BYTE PTR [rax+0xb8]
  4043c2:	movzx  eax,al
  4043c5:	and    eax,0x8
  4043c8:	test   eax,eax
  4043ca:	jne    4043dd <rb_base64_encode@plt+0x1cfd>
  4043cc:	mov    rax,QWORD PTR [rbp-0x4018]
  4043d3:	mov    rdi,rax
  4043d6:	call   403ed5 <rb_base64_encode@plt+0x17f5>
  4043db:	jmp    4043ec <rb_base64_encode@plt+0x1d0c>
  4043dd:	mov    rax,QWORD PTR [rbp-0x4018]
  4043e4:	mov    rdi,rax
  4043e7:	call   403de4 <rb_base64_encode@plt+0x1704>
  4043ec:	mov    eax,DWORD PTR [rbp-0x401c]
  4043f2:	cmp    eax,0x3fff
  4043f7:	ja     404295 <rb_base64_encode@plt+0x1bb5>
  4043fd:	mov    rdx,QWORD PTR [rbp-0x4018]
  404404:	mov    rax,QWORD PTR [rbp-0x4028]
  40440b:	mov    rcx,rdx
  40440e:	lea    rdx,[rip+0xfffffffffffffde3]        # 4041f8 <rb_base64_encode@plt+0x1b18>
  404415:	mov    esi,0x1
  40441a:	mov    rdi,rax
  40441d:	call   4023f0 <rb_setselect@plt>
  404422:	jmp    40442b <rb_base64_encode@plt+0x1d4b>
  404424:	nop
  404425:	jmp    40442b <rb_base64_encode@plt+0x1d4b>
  404427:	nop
  404428:	jmp    40442b <rb_base64_encode@plt+0x1d4b>
  40442a:	nop
  40442b:	mov    rax,QWORD PTR [rbp-0x8]
  40442f:	xor    rax,QWORD PTR fs:0x28
  404438:	je     40443f <rb_base64_encode@plt+0x1d5f>
  40443a:	call   4025d0 <__stack_chk_fail@plt>
  40443f:	leave  
  404440:	ret    
  404441:	endbr64 
  404445:	push   rbp
  404446:	mov    rbp,rsp
  404449:	sub    rsp,0x10
  40444d:	mov    QWORD PTR [rbp-0x8],rdi
  404451:	mov    rax,QWORD PTR [rbp-0x8]
  404455:	mov    rax,QWORD PTR [rax+0x20]
  404459:	mov    rdi,rax
  40445c:	call   402560 <rb_rawbuf_length@plt>
  404461:	cmp    eax,0xfff
  404466:	jle    4044da <rb_base64_encode@plt+0x1dfa>
  404468:	mov    rax,QWORD PTR [rbp-0x8]
  40446c:	movzx  eax,BYTE PTR [rax+0xb8]
  404473:	or     eax,0x1
  404476:	mov    edx,eax
  404478:	mov    rax,QWORD PTR [rbp-0x8]
  40447c:	mov    BYTE PTR [rax+0xb8],dl
  404482:	mov    rax,QWORD PTR [rbp-0x8]
  404486:	mov    rax,QWORD PTR [rax+0x90]
  40448d:	mov    ecx,0x0
  404492:	mov    edx,0x0
  404497:	mov    esi,0x1
  40449c:	mov    rdi,rax
  40449f:	call   4023f0 <rb_setselect@plt>
  4044a4:	mov    rax,QWORD PTR [rbp-0x8]
  4044a8:	movzx  eax,BYTE PTR [rax+0xb8]
  4044af:	movzx  eax,al
  4044b2:	and    eax,0x8
  4044b5:	test   eax,eax
  4044b7:	je     4044d3 <rb_base64_encode@plt+0x1df3>
  4044b9:	mov    rax,QWORD PTR [rbp-0x8]
  4044bd:	mov    rax,QWORD PTR [rax+0x88]
  4044c4:	mov    rdx,QWORD PTR [rbp-0x8]
  4044c8:	mov    rsi,rdx
  4044cb:	mov    rdi,rax
  4044ce:	call   402fee <rb_base64_encode@plt+0x90e>
  4044d3:	mov    eax,0x1
  4044d8:	jmp    4044df <rb_base64_encode@plt+0x1dff>
  4044da:	mov    eax,0x0
  4044df:	leave  
  4044e0:	ret    
  4044e1:	endbr64 
  4044e5:	push   rbp
  4044e6:	mov    rbp,rsp
  4044e9:	lea    r11,[rsp-0x4000]
  4044f1:	sub    rsp,0x1000
  4044f8:	or     QWORD PTR [rsp],0x0
  4044fd:	cmp    rsp,r11
  404500:	jne    4044f1 <rb_base64_encode@plt+0x1e11>
  404502:	sub    rsp,0x30
  404506:	mov    QWORD PTR [rbp-0x4028],rdi
  40450d:	mov    rax,QWORD PTR fs:0x28
  404516:	mov    QWORD PTR [rbp-0x8],rax
  40451a:	xor    eax,eax
  40451c:	lea    rax,[rbp-0x4010]
  404523:	mov    edx,0x4000
  404528:	mov    esi,0x0
  40452d:	mov    rdi,rax
  404530:	call   4023b0 <memset@plt>
  404535:	mov    rax,QWORD PTR [rbp-0x4028]
  40453c:	lea    rdi,[rax+0x58]
  404540:	lea    rax,[rbp-0x4010]
  404547:	mov    r8d,0x0
  40454d:	mov    ecx,0x0
  404552:	mov    edx,0x4000
  404557:	mov    rsi,rax
  40455a:	call   4024d0 <rb_linebuf_get@plt>
  40455f:	mov    DWORD PTR [rbp-0x4014],eax
  404565:	cmp    DWORD PTR [rbp-0x4014],0x0
  40456c:	je     40458f <rb_base64_encode@plt+0x1eaf>
  40456e:	mov    edx,DWORD PTR [rbp-0x4014]
  404574:	lea    rcx,[rbp-0x4010]
  40457b:	mov    rax,QWORD PTR [rbp-0x4028]
  404582:	mov    rsi,rcx
  404585:	mov    rdi,rax
  404588:	call   403380 <rb_base64_encode@plt+0xca0>
  40458d:	jmp    404535 <rb_base64_encode@plt+0x1e55>
  40458f:	nop
  404590:	mov    rax,QWORD PTR [rbp-0x4028]
  404597:	movzx  eax,BYTE PTR [rax+0xb8]
  40459e:	movzx  eax,al
  4045a1:	and    eax,0x8
  4045a4:	test   eax,eax
  4045a6:	je     4045c8 <rb_base64_encode@plt+0x1ee8>
  4045a8:	mov    rax,QWORD PTR [rbp-0x4028]
  4045af:	mov    rax,QWORD PTR [rax+0x88]
  4045b6:	mov    rdx,QWORD PTR [rbp-0x4028]
  4045bd:	mov    rsi,rdx
  4045c0:	mov    rdi,rax
  4045c3:	call   402fee <rb_base64_encode@plt+0x90e>
  4045c8:	nop
  4045c9:	mov    rax,QWORD PTR [rbp-0x8]
  4045cd:	xor    rax,QWORD PTR fs:0x28
  4045d6:	je     4045dd <rb_base64_encode@plt+0x1efd>
  4045d8:	call   4025d0 <__stack_chk_fail@plt>
  4045dd:	leave  
  4045de:	ret    
  4045df:	endbr64 
  4045e3:	push   rbp
  4045e4:	mov    rbp,rsp
  4045e7:	lea    r11,[rsp-0x4000]
  4045ef:	sub    rsp,0x1000
  4045f6:	or     QWORD PTR [rsp],0x0
  4045fb:	cmp    rsp,r11
  4045fe:	jne    4045ef <rb_base64_encode@plt+0x1f0f>
  404600:	sub    rsp,0x30
  404604:	mov    QWORD PTR [rbp-0x4028],rdi
  40460b:	mov    QWORD PTR [rbp-0x4030],rsi
  404612:	mov    rax,QWORD PTR fs:0x28
  40461b:	mov    QWORD PTR [rbp-0x8],rax
  40461f:	xor    eax,eax
  404621:	lea    rax,[rbp-0x4010]
  404628:	mov    edx,0x4000
  40462d:	mov    esi,0x0
  404632:	mov    rdi,rax
  404635:	call   4023b0 <memset@plt>
  40463a:	mov    rax,QWORD PTR [rbp-0x4030]
  404641:	mov    QWORD PTR [rbp-0x4018],rax
  404648:	mov    DWORD PTR [rbp-0x401c],0x0
  404652:	cmp    QWORD PTR [rbp-0x4018],0x0
  40465a:	je     404802 <rb_base64_encode@plt+0x2122>
  404660:	mov    rax,QWORD PTR [rbp-0x4018]
  404667:	movzx  eax,BYTE PTR [rax+0xb8]
  40466e:	movzx  eax,al
  404671:	and    eax,0x2
  404674:	test   eax,eax
  404676:	jne    404805 <rb_base64_encode@plt+0x2125>
  40467c:	mov    rax,QWORD PTR [rbp-0x4018]
  404683:	mov    rdi,rax
  404686:	call   404441 <rb_base64_encode@plt+0x1d61>
  40468b:	test   al,al
  40468d:	jne    404808 <rb_base64_encode@plt+0x2128>
  404693:	mov    rax,QWORD PTR [rbp-0x4018]
  40469a:	movzx  eax,BYTE PTR [rax+0xb8]
  4046a1:	movzx  eax,al
  4046a4:	and    eax,0x2
  4046a7:	test   eax,eax
  4046a9:	jne    40480b <rb_base64_encode@plt+0x212b>
  4046af:	mov    rax,QWORD PTR [rbp-0x4018]
  4046b6:	mov    rax,QWORD PTR [rax+0x90]
  4046bd:	lea    rcx,[rbp-0x4010]
  4046c4:	mov    edx,0x4000
  4046c9:	mov    rsi,rcx
  4046cc:	mov    rdi,rax
  4046cf:	call   4024b0 <rb_read@plt>
  4046d4:	mov    DWORD PTR [rbp-0x401c],eax
  4046da:	cmp    DWORD PTR [rbp-0x401c],0x0
  4046e1:	je     4046fe <rb_base64_encode@plt+0x201e>
  4046e3:	cmp    DWORD PTR [rbp-0x401c],0x0
  4046ea:	jns    404721 <rb_base64_encode@plt+0x2041>
  4046ec:	call   4025b0 <__errno_location@plt>
  4046f1:	mov    eax,DWORD PTR [rax]
  4046f3:	mov    edi,eax
  4046f5:	call   4023d0 <rb_ignore_errno@plt>
  4046fa:	test   eax,eax
  4046fc:	jne    404721 <rb_base64_encode@plt+0x2041>
  4046fe:	mov    rax,QWORD PTR [rbp-0x4018]
  404705:	mov    edx,0x0
  40470a:	mov    esi,0x0
  40470f:	mov    rdi,rax
  404712:	mov    eax,0x0
  404717:	call   40360e <rb_base64_encode@plt+0xf2e>
  40471c:	jmp    404815 <rb_base64_encode@plt+0x2135>
  404721:	cmp    DWORD PTR [rbp-0x401c],0x0
  404728:	jns    404786 <rb_base64_encode@plt+0x20a6>
  40472a:	mov    rax,QWORD PTR [rbp-0x4018]
  404731:	mov    rax,QWORD PTR [rax+0x90]
  404738:	mov    rdx,QWORD PTR [rbp-0x4018]
  40473f:	mov    rcx,rdx
  404742:	lea    rdx,[rip+0xfffffffffffffe96]        # 4045df <rb_base64_encode@plt+0x1eff>
  404749:	mov    esi,0x1
  40474e:	mov    rdi,rax
  404751:	call   4023f0 <rb_setselect@plt>
  404756:	mov    rax,QWORD PTR [rbp-0x4018]
  40475d:	movzx  eax,BYTE PTR [rax+0xb8]
  404764:	movzx  eax,al
  404767:	and    eax,0x8
  40476a:	test   eax,eax
  40476c:	je     40480e <rb_base64_encode@plt+0x212e>
  404772:	mov    rax,QWORD PTR [rbp-0x4018]
  404779:	mov    rdi,rax
  40477c:	call   4044e1 <rb_base64_encode@plt+0x1e01>
  404781:	jmp    40480e <rb_base64_encode@plt+0x212e>
  404786:	mov    rax,QWORD PTR [rbp-0x4018]
  40478d:	mov    rdx,QWORD PTR [rax+0xa8]
  404794:	mov    eax,DWORD PTR [rbp-0x401c]
  40479a:	cdqe   
  40479c:	add    rdx,rax
  40479f:	mov    rax,QWORD PTR [rbp-0x4018]
  4047a6:	mov    QWORD PTR [rax+0xa8],rdx
  4047ad:	mov    rax,QWORD PTR [rbp-0x4018]
  4047b4:	lea    rdi,[rax+0x58]
  4047b8:	mov    edx,DWORD PTR [rbp-0x401c]
  4047be:	lea    rax,[rbp-0x4010]
  4047c5:	mov    ecx,0x0
  4047ca:	mov    rsi,rax
  4047cd:	call   402450 <rb_linebuf_parse@plt>
  4047d2:	mov    rax,QWORD PTR [rbp-0x4018]
  4047d9:	movzx  eax,BYTE PTR [rax+0xb8]
  4047e0:	movzx  eax,al
  4047e3:	and    eax,0x2
  4047e6:	test   eax,eax
  4047e8:	jne    404811 <rb_base64_encode@plt+0x2131>
  4047ea:	mov    rax,QWORD PTR [rbp-0x4018]
  4047f1:	mov    rdi,rax
  4047f4:	call   404441 <rb_base64_encode@plt+0x1d61>
  4047f9:	test   al,al
  4047fb:	jne    404814 <rb_base64_encode@plt+0x2134>
  4047fd:	jmp    404693 <rb_base64_encode@plt+0x1fb3>
  404802:	nop
  404803:	jmp    404815 <rb_base64_encode@plt+0x2135>
  404805:	nop
  404806:	jmp    404815 <rb_base64_encode@plt+0x2135>
  404808:	nop
  404809:	jmp    404815 <rb_base64_encode@plt+0x2135>
  40480b:	nop
  40480c:	jmp    404815 <rb_base64_encode@plt+0x2135>
  40480e:	nop
  40480f:	jmp    404815 <rb_base64_encode@plt+0x2135>
  404811:	nop
  404812:	jmp    404815 <rb_base64_encode@plt+0x2135>
  404814:	nop
  404815:	mov    rax,QWORD PTR [rbp-0x8]
  404819:	xor    rax,QWORD PTR fs:0x28
  404822:	je     404829 <rb_base64_encode@plt+0x2149>
  404824:	call   4025d0 <__stack_chk_fail@plt>
  404829:	leave  
  40482a:	ret    
  40482b:	endbr64 
  40482f:	push   rbp
  404830:	mov    rbp,rsp
  404833:	lea    r11,[rsp-0x4000]
  40483b:	sub    rsp,0x1000
  404842:	or     QWORD PTR [rsp],0x0
  404847:	cmp    rsp,r11
  40484a:	jne    40483b <rb_base64_encode@plt+0x215b>
  40484c:	sub    rsp,0x30
  404850:	mov    QWORD PTR [rbp-0x4028],rdi
  404857:	mov    QWORD PTR [rbp-0x4030],rsi
  40485e:	mov    rax,QWORD PTR fs:0x28
  404867:	mov    QWORD PTR [rbp-0x8],rax
  40486b:	xor    eax,eax
  40486d:	mov    rax,QWORD PTR [rbp-0x4030]
  404874:	mov    QWORD PTR [rbp-0x4018],rax
  40487b:	mov    DWORD PTR [rbp-0x401c],0x0
  404885:	cmp    QWORD PTR [rbp-0x4018],0x0
  40488d:	je     404955 <rb_base64_encode@plt+0x2275>
  404893:	mov    rax,QWORD PTR [rbp-0x4018]
  40489a:	mov    rax,QWORD PTR [rax+0x90]
  4048a1:	lea    rcx,[rbp-0x4010]
  4048a8:	mov    edx,0x4000
  4048ad:	mov    rsi,rcx
  4048b0:	mov    rdi,rax
  4048b3:	call   4024b0 <rb_read@plt>
  4048b8:	mov    DWORD PTR [rbp-0x401c],eax
  4048be:	cmp    DWORD PTR [rbp-0x401c],0x0
  4048c5:	je     4048e2 <rb_base64_encode@plt+0x2202>
  4048c7:	cmp    DWORD PTR [rbp-0x401c],0x0
  4048ce:	jns    40491a <rb_base64_encode@plt+0x223a>
  4048d0:	call   4025b0 <__errno_location@plt>
  4048d5:	mov    eax,DWORD PTR [rax]
  4048d7:	mov    edi,eax
  4048d9:	call   4023d0 <rb_ignore_errno@plt>
  4048de:	test   eax,eax
  4048e0:	jne    40491a <rb_base64_encode@plt+0x223a>
  4048e2:	mov    rax,QWORD PTR [rbp-0x4018]
  4048e9:	mov    rax,QWORD PTR [rax+0x90]
  4048f0:	mov    rdi,rax
  4048f3:	call   402540 <rb_close@plt>
  4048f8:	mov    rcx,QWORD PTR [rbp-0x4018]
  4048ff:	mov    rax,QWORD PTR [rbp-0x4018]
  404906:	lea    rdx,[rip+0x10493]        # 414da0 <rb_base64_encode@plt+0x126c0>
  40490d:	mov    rsi,rcx
  404910:	mov    rdi,rax
  404913:	call   4027d6 <rb_base64_encode@plt+0xf6>
  404918:	jmp    404956 <rb_base64_encode@plt+0x2276>
  40491a:	cmp    DWORD PTR [rbp-0x401c],0x0
  404921:	jns    404893 <rb_base64_encode@plt+0x21b3>
  404927:	mov    rax,QWORD PTR [rbp-0x4018]
  40492e:	mov    rax,QWORD PTR [rax+0x90]
  404935:	mov    rdx,QWORD PTR [rbp-0x4018]
  40493c:	mov    rcx,rdx
  40493f:	lea    rdx,[rip+0xfffffffffffffee5]        # 40482b <rb_base64_encode@plt+0x214b>
  404946:	mov    esi,0x1
  40494b:	mov    rdi,rax
  40494e:	call   4023f0 <rb_setselect@plt>
  404953:	jmp    404956 <rb_base64_encode@plt+0x2276>
  404955:	nop
  404956:	mov    rax,QWORD PTR [rbp-0x8]
  40495a:	xor    rax,QWORD PTR fs:0x28
  404963:	je     40496a <rb_base64_encode@plt+0x228a>
  404965:	call   4025d0 <__stack_chk_fail@plt>
  40496a:	leave  
  40496b:	ret    
  40496c:	endbr64 
  404970:	push   rbp
  404971:	mov    rbp,rsp
  404974:	sub    rsp,0x20
  404978:	mov    QWORD PTR [rbp-0x18],rdi
  40497c:	mov    QWORD PTR [rbp-0x20],rsi
  404980:	mov    rax,QWORD PTR [rbp-0x20]
  404984:	mov    rdx,QWORD PTR [rax+0x30]
  404988:	mov    rax,QWORD PTR [rbp-0x20]
  40498c:	mov    rcx,QWORD PTR [rax+0x28]
  404990:	mov    rax,QWORD PTR [rbp-0x18]
  404994:	mov    rsi,rcx
  404997:	mov    rdi,rax
  40499a:	call   403927 <rb_base64_encode@plt+0x1247>
  40499f:	mov    QWORD PTR [rbp-0x8],rax
  4049a3:	mov    rax,QWORD PTR [rbp-0x20]
  4049a7:	mov    rax,QWORD PTR [rax+0x18]
  4049ab:	inc    rax
  4049ae:	mov    rdi,rax
  4049b1:	call   402b3b <rb_base64_encode@plt+0x45b>
  4049b6:	mov    DWORD PTR [rbp-0xc],eax
  4049b9:	mov    edx,DWORD PTR [rbp-0xc]
  4049bc:	mov    rax,QWORD PTR [rbp-0x8]
  4049c0:	mov    esi,edx
  4049c2:	mov    rdi,rax
  4049c5:	call   402d88 <rb_base64_encode@plt+0x6a8>
  4049ca:	mov    rax,QWORD PTR [rbp-0x8]
  4049ce:	movzx  eax,BYTE PTR [rax+0xb8]
  4049d5:	or     eax,0x4
  4049d8:	mov    edx,eax
  4049da:	mov    rax,QWORD PTR [rbp-0x8]
  4049de:	mov    BYTE PTR [rax+0xb8],dl
  4049e4:	mov    rax,QWORD PTR [rbp-0x8]
  4049e8:	mov    rax,QWORD PTR [rax+0x88]
  4049ef:	mov    rdi,rax
  4049f2:	call   4023a0 <rb_get_type@plt>
  4049f7:	movzx  eax,al
  4049fa:	and    eax,0x40
  4049fd:	test   eax,eax
  4049ff:	je     404a19 <rb_base64_encode@plt+0x2339>
  404a01:	mov    rax,QWORD PTR [rbp-0x8]
  404a05:	mov    rax,QWORD PTR [rax+0x88]
  404a0c:	mov    esi,0x4
  404a11:	mov    rdi,rax
  404a14:	call   4024c0 <rb_set_type@plt>
  404a19:	mov    rax,QWORD PTR [rbp-0x8]
  404a1d:	mov    rax,QWORD PTR [rax+0x90]
  404a24:	mov    rdi,rax
  404a27:	call   4023a0 <rb_get_type@plt>
  404a2c:	cmp    al,0x40
  404a2e:	jne    404a48 <rb_base64_encode@plt+0x2368>
  404a30:	mov    rax,QWORD PTR [rbp-0x8]
  404a34:	mov    rax,QWORD PTR [rax+0x90]
  404a3b:	mov    esi,0x4
  404a40:	mov    rdi,rax
  404a43:	call   4024c0 <rb_set_type@plt>
  404a48:	mov    rax,QWORD PTR [rbp-0x8]
  404a4c:	mov    rax,QWORD PTR [rax+0x88]
  404a53:	mov    rdx,QWORD PTR [rbp-0x8]
  404a57:	mov    rsi,rdx
  404a5a:	mov    rdi,rax
  404a5d:	call   4041f8 <rb_base64_encode@plt+0x1b18>
  404a62:	mov    rax,QWORD PTR [rbp-0x8]
  404a66:	mov    rax,QWORD PTR [rax+0x90]
  404a6d:	mov    rdx,QWORD PTR [rbp-0x8]
  404a71:	mov    rsi,rdx
  404a74:	mov    rdi,rax
  404a77:	call   4045df <rb_base64_encode@plt+0x1eff>
  404a7c:	nop
  404a7d:	leave  
  404a7e:	ret    
  404a7f:	endbr64 
  404a83:	push   rbp
  404a84:	mov    rbp,rsp
  404a87:	sub    rsp,0x30
  404a8b:	mov    QWORD PTR [rbp-0x28],rdi
  404a8f:	mov    rax,QWORD PTR [rbp-0x28]
  404a93:	mov    rax,QWORD PTR [rax+0x30]
  404a97:	mov    QWORD PTR [rbp-0x18],rax
  404a9b:	cmp    QWORD PTR [rbp-0x18],0x0
  404aa0:	je     404aac <rb_base64_encode@plt+0x23cc>
  404aa2:	mov    rax,QWORD PTR [rbp-0x18]
  404aa6:	mov    rax,QWORD PTR [rax+0x10]
  404aaa:	jmp    404ab1 <rb_base64_encode@plt+0x23d1>
  404aac:	mov    eax,0x0
  404ab1:	mov    QWORD PTR [rbp-0x10],rax
  404ab5:	jmp    404b72 <rb_base64_encode@plt+0x2492>
  404aba:	mov    rax,QWORD PTR [rbp-0x18]
  404abe:	mov    rax,QWORD PTR [rax]
  404ac1:	mov    QWORD PTR [rbp-0x8],rax
  404ac5:	mov    rax,QWORD PTR [rbp-0x8]
  404ac9:	mov    rax,QWORD PTR [rax+0x18]
  404acd:	movzx  eax,BYTE PTR [rax]
  404ad0:	movzx  eax,al
  404ad3:	cmp    eax,0x41
  404ad6:	jne    404b1c <rb_base64_encode@plt+0x243c>
  404ad8:	mov    rax,QWORD PTR [rbp-0x8]
  404adc:	mov    eax,DWORD PTR [rax+0x48]
  404adf:	cmp    eax,0x2
  404ae2:	jne    404af2 <rb_base64_encode@plt+0x2412>
  404ae4:	mov    rax,QWORD PTR [rbp-0x8]
  404ae8:	mov    rax,QWORD PTR [rax+0x20]
  404aec:	cmp    rax,0x5
  404af0:	je     404b07 <rb_base64_encode@plt+0x2427>
  404af2:	mov    rdx,QWORD PTR [rbp-0x8]
  404af6:	mov    rax,QWORD PTR [rbp-0x28]
  404afa:	mov    rsi,rdx
  404afd:	mov    rdi,rax
  404b00:	call   4039e3 <rb_base64_encode@plt+0x1303>
  404b05:	jmp    404b1d <rb_base64_encode@plt+0x243d>
  404b07:	mov    rdx,QWORD PTR [rbp-0x8]
  404b0b:	mov    rax,QWORD PTR [rbp-0x28]
  404b0f:	mov    rsi,rdx
  404b12:	mov    rdi,rax
  404b15:	call   40496c <rb_base64_encode@plt+0x228c>
  404b1a:	jmp    404b1d <rb_base64_encode@plt+0x243d>
  404b1c:	nop
  404b1d:	mov    rax,QWORD PTR [rbp-0x28]
  404b21:	lea    rdx,[rax+0x30]
  404b25:	mov    rax,QWORD PTR [rbp-0x18]
  404b29:	mov    rsi,rdx
  404b2c:	mov    rdi,rax
  404b2f:	call   4029e0 <rb_base64_encode@plt+0x300>
  404b34:	mov    rax,QWORD PTR [rbp-0x8]
  404b38:	mov    rax,QWORD PTR [rax+0x18]
  404b3c:	mov    rdi,rax
  404b3f:	call   402b10 <rb_base64_encode@plt+0x430>
  404b44:	mov    rax,QWORD PTR [rbp-0x8]
  404b48:	mov    rdi,rax
  404b4b:	call   402b10 <rb_base64_encode@plt+0x430>
  404b50:	mov    rax,QWORD PTR [rbp-0x10]
  404b54:	mov    QWORD PTR [rbp-0x18],rax
  404b58:	cmp    QWORD PTR [rbp-0x18],0x0
  404b5d:	je     404b69 <rb_base64_encode@plt+0x2489>
  404b5f:	mov    rax,QWORD PTR [rbp-0x18]
  404b63:	mov    rax,QWORD PTR [rax+0x10]
  404b67:	jmp    404b6e <rb_base64_encode@plt+0x248e>
  404b69:	mov    eax,0x0
  404b6e:	mov    QWORD PTR [rbp-0x10],rax
  404b72:	cmp    QWORD PTR [rbp-0x18],0x0
  404b77:	jne    404aba <rb_base64_encode@plt+0x23da>
  404b7d:	nop
  404b7e:	leave  
  404b7f:	ret    
  404b80:	endbr64 
  404b84:	push   rbp
  404b85:	mov    rbp,rsp
  404b88:	sub    rsp,0x30
  404b8c:	mov    QWORD PTR [rbp-0x28],rdi
  404b90:	mov    QWORD PTR [rbp-0x30],rsi
  404b94:	mov    rax,QWORD PTR [rbp-0x30]
  404b98:	mov    QWORD PTR [rbp-0x10],rax
  404b9c:	mov    edi,0x50
  404ba1:	call   402ad4 <rb_base64_encode@plt+0x3f4>
  404ba6:	mov    QWORD PTR [rbp-0x8],rax
  404baa:	mov    edi,0x4000
  404baf:	call   402ad4 <rb_base64_encode@plt+0x3f4>
  404bb4:	mov    rdx,rax
  404bb7:	mov    rax,QWORD PTR [rbp-0x8]
  404bbb:	mov    QWORD PTR [rax+0x18],rdx
  404bbf:	mov    rax,QWORD PTR [rbp-0x8]
  404bc3:	mov    QWORD PTR [rax+0x20],0x4000
  404bcb:	mov    rax,QWORD PTR [rbp-0x8]
  404bcf:	lea    rcx,[rax+0x28]
  404bd3:	mov    rax,QWORD PTR [rbp-0x8]
  404bd7:	mov    rdx,QWORD PTR [rax+0x20]
  404bdb:	mov    rax,QWORD PTR [rbp-0x8]
  404bdf:	mov    rsi,QWORD PTR [rax+0x18]
  404be3:	mov    rax,QWORD PTR [rbp-0x10]
  404be7:	mov    rax,QWORD PTR [rax+0x20]
  404beb:	mov    r8d,0x4
  404bf1:	mov    rdi,rax
  404bf4:	call   402620 <rb_recv_fd_buf@plt>
  404bf9:	mov    DWORD PTR [rbp-0x14],eax
  404bfc:	cmp    DWORD PTR [rbp-0x14],0x0
  404c00:	jg     404c20 <rb_base64_encode@plt+0x2540>
  404c02:	mov    rax,QWORD PTR [rbp-0x8]
  404c06:	mov    rax,QWORD PTR [rax+0x18]
  404c0a:	mov    rdi,rax
  404c0d:	call   402b10 <rb_base64_encode@plt+0x430>
  404c12:	mov    rax,QWORD PTR [rbp-0x8]
  404c16:	mov    rdi,rax
  404c19:	call   402b10 <rb_base64_encode@plt+0x430>
  404c1e:	jmp    404c7d <rb_base64_encode@plt+0x259d>
  404c20:	mov    eax,DWORD PTR [rbp-0x14]
  404c23:	movsxd rdx,eax
  404c26:	mov    rax,QWORD PTR [rbp-0x8]
  404c2a:	mov    QWORD PTR [rax+0x20],rdx
  404c2e:	mov    rax,QWORD PTR [rbp-0x10]
  404c32:	lea    rdx,[rax+0x30]
  404c36:	mov    rcx,QWORD PTR [rbp-0x8]
  404c3a:	mov    rax,QWORD PTR [rbp-0x8]
  404c3e:	mov    rsi,rcx
  404c41:	mov    rdi,rax
  404c44:	call   4028da <rb_base64_encode@plt+0x1fa>
  404c49:	mov    DWORD PTR [rbp-0x18],0x0
  404c50:	jmp    404c55 <rb_base64_encode@plt+0x2575>
  404c52:	inc    DWORD PTR [rbp-0x18]
  404c55:	cmp    DWORD PTR [rbp-0x18],0x3
  404c59:	jg     404c73 <rb_base64_encode@plt+0x2593>
  404c5b:	mov    rax,QWORD PTR [rbp-0x8]
  404c5f:	mov    edx,DWORD PTR [rbp-0x18]
  404c62:	movsxd rdx,edx
  404c65:	add    rdx,0x4
  404c69:	mov    rax,QWORD PTR [rax+rdx*8+0x8]
  404c6e:	test   rax,rax
  404c71:	jne    404c52 <rb_base64_encode@plt+0x2572>
  404c73:	mov    rax,QWORD PTR [rbp-0x8]
  404c77:	mov    edx,DWORD PTR [rbp-0x18]
  404c7a:	mov    DWORD PTR [rax+0x48],edx
  404c7d:	cmp    DWORD PTR [rbp-0x14],0x0
  404c81:	jg     404b9c <rb_base64_encode@plt+0x24bc>
  404c87:	cmp    DWORD PTR [rbp-0x14],0x0
  404c8b:	je     404ca5 <rb_base64_encode@plt+0x25c5>
  404c8d:	cmp    DWORD PTR [rbp-0x14],0x0
  404c91:	jns    404caf <rb_base64_encode@plt+0x25cf>
  404c93:	call   4025b0 <__errno_location@plt>
  404c98:	mov    eax,DWORD PTR [rax]
  404c9a:	mov    edi,eax
  404c9c:	call   4023d0 <rb_ignore_errno@plt>
  404ca1:	test   eax,eax
  404ca3:	jne    404caf <rb_base64_encode@plt+0x25cf>
  404ca5:	mov    edi,0x0
  404caa:	call   402420 <exit@plt>
  404caf:	mov    rax,QWORD PTR [rbp-0x10]
  404cb3:	mov    rdi,rax
  404cb6:	call   404a7f <rb_base64_encode@plt+0x239f>
  404cbb:	mov    rax,QWORD PTR [rbp-0x10]
  404cbf:	mov    rax,QWORD PTR [rax+0x20]
  404cc3:	mov    rdx,QWORD PTR [rbp-0x10]
  404cc7:	mov    rcx,rdx
  404cca:	lea    rdx,[rip+0xfffffffffffffeaf]        # 404b80 <rb_base64_encode@plt+0x24a0>
  404cd1:	mov    esi,0x1
  404cd6:	mov    rdi,rax
  404cd9:	call   4023f0 <rb_setselect@plt>
  404cde:	nop
  404cdf:	leave  
  404ce0:	ret    
  404ce1:	endbr64 
  404ce5:	push   rbp
  404ce6:	mov    rbp,rsp
  404ce9:	lea    r11,[rsp-0x4000]
  404cf1:	sub    rsp,0x1000
  404cf8:	or     QWORD PTR [rsp],0x0
  404cfd:	cmp    rsp,r11
  404d00:	jne    404cf1 <rb_base64_encode@plt+0x2611>
  404d02:	sub    rsp,0x30
  404d06:	mov    QWORD PTR [rbp-0x4028],rdi
  404d0d:	mov    QWORD PTR [rbp-0x4030],rsi
  404d14:	mov    rax,QWORD PTR fs:0x28
  404d1d:	mov    QWORD PTR [rbp-0x8],rax
  404d21:	xor    eax,eax
  404d23:	nop
  404d24:	lea    rcx,[rbp-0x4010]
  404d2b:	mov    rax,QWORD PTR [rbp-0x4028]
  404d32:	mov    edx,0x4000
  404d37:	mov    rsi,rcx
  404d3a:	mov    rdi,rax
  404d3d:	call   4024b0 <rb_read@plt>
  404d42:	mov    DWORD PTR [rbp-0x4014],eax
  404d48:	cmp    DWORD PTR [rbp-0x4014],0x0
  404d4f:	jg     404d24 <rb_base64_encode@plt+0x2644>
  404d51:	cmp    DWORD PTR [rbp-0x4014],0x0
  404d58:	je     404d75 <rb_base64_encode@plt+0x2695>
  404d5a:	cmp    DWORD PTR [rbp-0x4014],0x0
  404d61:	jns    404d7f <rb_base64_encode@plt+0x269f>
  404d63:	call   4025b0 <__errno_location@plt>
  404d68:	mov    eax,DWORD PTR [rax]
  404d6a:	mov    edi,eax
  404d6c:	call   4023d0 <rb_ignore_errno@plt>
  404d71:	test   eax,eax
  404d73:	jne    404d7f <rb_base64_encode@plt+0x269f>
  404d75:	mov    edi,0x0
  404d7a:	call   402420 <exit@plt>
  404d7f:	mov    rax,QWORD PTR [rbp-0x4028]
  404d86:	mov    ecx,0x0
  404d8b:	lea    rdx,[rip+0xffffffffffffff4f]        # 404ce1 <rb_base64_encode@plt+0x2601>
  404d92:	mov    esi,0x1
  404d97:	mov    rdi,rax
  404d9a:	call   4023f0 <rb_setselect@plt>
  404d9f:	nop
  404da0:	mov    rax,QWORD PTR [rbp-0x8]
  404da4:	xor    rax,QWORD PTR fs:0x28
  404dad:	je     404db4 <rb_base64_encode@plt+0x26d4>
  404daf:	call   4025d0 <__stack_chk_fail@plt>
  404db4:	leave  
  404db5:	ret    
  404db6:	endbr64 
  404dba:	push   rbp
  404dbb:	mov    rbp,rsp
  404dbe:	push   rbx
  404dbf:	sub    rsp,0x48
  404dc3:	mov    DWORD PTR [rbp-0x44],edi
  404dc6:	mov    QWORD PTR [rbp-0x50],rsi
  404dca:	call   402d37 <rb_base64_encode@plt+0x657>
  404dcf:	mov    DWORD PTR [rbp-0x34],eax
  404dd2:	lea    rdi,[rip+0x2418]        # 4071f1 <rb_base64_encode@plt+0x4b11>
  404dd9:	call   402590 <getenv@plt>
  404dde:	mov    QWORD PTR [rbp-0x28],rax
  404de2:	lea    rdi,[rip+0x240f]        # 4071f8 <rb_base64_encode@plt+0x4b18>
  404de9:	call   402590 <getenv@plt>
  404dee:	mov    QWORD PTR [rbp-0x20],rax
  404df2:	lea    rdi,[rip+0x2408]        # 407201 <rb_base64_encode@plt+0x4b21>
  404df9:	call   402590 <getenv@plt>
  404dfe:	mov    QWORD PTR [rbp-0x18],rax
  404e02:	cmp    QWORD PTR [rbp-0x28],0x0
  404e07:	je     404e17 <rb_base64_encode@plt+0x2737>
  404e09:	cmp    QWORD PTR [rbp-0x20],0x0
  404e0e:	je     404e17 <rb_base64_encode@plt+0x2737>
  404e10:	cmp    QWORD PTR [rbp-0x18],0x0
  404e15:	jne    404e67 <rb_base64_encode@plt+0x2787>
  404e17:	mov    rax,QWORD PTR [rip+0x41da]        # 408ff8 <rb_base64_encode@plt+0x6918>
  404e1e:	mov    rax,QWORD PTR [rax]
  404e21:	mov    rcx,rax
  404e24:	mov    edx,0x34
  404e29:	mov    esi,0x1
  404e2e:	lea    rdi,[rip+0x23db]        # 407210 <rb_base64_encode@plt+0x4b30>
  404e35:	call   402680 <fwrite@plt>
  404e3a:	mov    rax,QWORD PTR [rip+0x41b7]        # 408ff8 <rb_base64_encode@plt+0x6918>
  404e41:	mov    rax,QWORD PTR [rax]
  404e44:	mov    rcx,rax
  404e47:	mov    edx,0x31
  404e4c:	mov    esi,0x1
  404e51:	lea    rdi,[rip+0x23f0]        # 407248 <rb_base64_encode@plt+0x4b68>
  404e58:	call   402680 <fwrite@plt>
  404e5d:	mov    edi,0x1
  404e62:	call   402420 <exit@plt>
  404e67:	mov    rax,QWORD PTR [rbp-0x28]
  404e6b:	mov    rdi,rax
  404e6e:	call   402550 <atoi@plt>
  404e73:	mov    DWORD PTR [rbp-0x30],eax
  404e76:	mov    rax,QWORD PTR [rbp-0x20]
  404e7a:	mov    rdi,rax
  404e7d:	call   402550 <atoi@plt>
  404e82:	mov    DWORD PTR [rbp-0x2c],eax
  404e85:	mov    rax,QWORD PTR [rbp-0x18]
  404e89:	mov    rdi,rax
  404e8c:	call   402550 <atoi@plt>
  404e91:	mov    DWORD PTR [rip+0x4369],eax        # 409200 <rb_base64_encode@plt+0x6b20>
  404e97:	mov    DWORD PTR [rbp-0x38],0x0
  404e9e:	mov    DWORD PTR [rbp-0x38],0x0
  404ea5:	jmp    404eca <rb_base64_encode@plt+0x27ea>
  404ea7:	mov    eax,DWORD PTR [rbp-0x38]
  404eaa:	cmp    eax,DWORD PTR [rbp-0x30]
  404ead:	je     404ec7 <rb_base64_encode@plt+0x27e7>
  404eaf:	mov    eax,DWORD PTR [rbp-0x38]
  404eb2:	cmp    eax,DWORD PTR [rbp-0x2c]
  404eb5:	je     404ec7 <rb_base64_encode@plt+0x27e7>
  404eb7:	cmp    DWORD PTR [rbp-0x38],0x2
  404ebb:	jle    404ec7 <rb_base64_encode@plt+0x27e7>
  404ebd:	mov    eax,DWORD PTR [rbp-0x38]
  404ec0:	mov    edi,eax
  404ec2:	call   4023e0 <close@plt>
  404ec7:	inc    DWORD PTR [rbp-0x38]
  404eca:	mov    eax,DWORD PTR [rbp-0x38]
  404ecd:	cmp    eax,DWORD PTR [rbp-0x34]
  404ed0:	jl     404ea7 <rb_base64_encode@plt+0x27c7>
  404ed2:	mov    esi,0x2
  404ed7:	lea    rdi,[rip+0x239c]        # 40727a <rb_base64_encode@plt+0x4b9a>
  404ede:	mov    eax,0x0
  404ee3:	call   4026d0 <open@plt>
  404ee8:	mov    DWORD PTR [rbp-0x38],eax
  404eeb:	cmp    DWORD PTR [rbp-0x38],0x0
  404eef:	js     404f52 <rb_base64_encode@plt+0x2872>
  404ef1:	cmp    DWORD PTR [rbp-0x30],0x0
  404ef5:	je     404f0c <rb_base64_encode@plt+0x282c>
  404ef7:	cmp    DWORD PTR [rbp-0x2c],0x0
  404efb:	je     404f0c <rb_base64_encode@plt+0x282c>
  404efd:	mov    eax,DWORD PTR [rbp-0x38]
  404f00:	mov    esi,0x0
  404f05:	mov    edi,eax
  404f07:	call   402390 <dup2@plt>
  404f0c:	cmp    DWORD PTR [rbp-0x30],0x1
  404f10:	je     404f27 <rb_base64_encode@plt+0x2847>
  404f12:	cmp    DWORD PTR [rbp-0x2c],0x1
  404f16:	je     404f27 <rb_base64_encode@plt+0x2847>
  404f18:	mov    eax,DWORD PTR [rbp-0x38]
  404f1b:	mov    esi,0x1
  404f20:	mov    edi,eax
  404f22:	call   402390 <dup2@plt>
  404f27:	cmp    DWORD PTR [rbp-0x30],0x2
  404f2b:	je     404f42 <rb_base64_encode@plt+0x2862>
  404f2d:	cmp    DWORD PTR [rbp-0x2c],0x2
  404f31:	je     404f42 <rb_base64_encode@plt+0x2862>
  404f33:	mov    eax,DWORD PTR [rbp-0x38]
  404f36:	mov    esi,0x2
  404f3b:	mov    edi,eax
  404f3d:	call   402390 <dup2@plt>
  404f42:	cmp    DWORD PTR [rbp-0x38],0x2
  404f46:	jle    404f52 <rb_base64_encode@plt+0x2872>
  404f48:	mov    eax,DWORD PTR [rbp-0x38]
  404f4b:	mov    edi,eax
  404f4d:	call   4023e0 <close@plt>
  404f52:	call   402c0b <rb_base64_encode@plt+0x52b>
  404f57:	mov    eax,DWORD PTR [rbp-0x34]
  404f5a:	sub    rsp,0x8
  404f5e:	push   0x1000
  404f63:	mov    r9d,0x400
  404f69:	mov    r8d,eax
  404f6c:	mov    ecx,0x0
  404f71:	mov    edx,0x0
  404f76:	mov    esi,0x0
  404f7b:	mov    edi,0x0
  404f80:	call   4025f0 <rb_lib_init@plt>
  404f85:	add    rsp,0x10
  404f89:	mov    edi,0x1000
  404f8e:	call   402660 <rb_linebuf_init@plt>
  404f93:	mov    edi,0x1000
  404f98:	call   402470 <rb_init_rawbuffers@plt>
  404f9d:	mov    edi,0x60
  404fa2:	call   402ad4 <rb_base64_encode@plt+0x3f4>
  404fa7:	mov    QWORD PTR [rip+0x425a],rax        # 409208 <rb_base64_encode@plt+0x6b28>
  404fae:	mov    rbx,QWORD PTR [rip+0x4253]        # 409208 <rb_base64_encode@plt+0x6b28>
  404fb5:	mov    eax,DWORD PTR [rbp-0x30]
  404fb8:	lea    rdx,[rip+0x22c5]        # 407284 <rb_base64_encode@plt+0x4ba4>
  404fbf:	mov    esi,0x4
  404fc4:	mov    edi,eax
  404fc6:	call   402610 <rb_open@plt>
  404fcb:	mov    QWORD PTR [rbx+0x20],rax
  404fcf:	mov    rbx,QWORD PTR [rip+0x4232]        # 409208 <rb_base64_encode@plt+0x6b28>
  404fd6:	mov    eax,DWORD PTR [rbp-0x2c]
  404fd9:	lea    rdx,[rip+0x22b8]        # 407298 <rb_base64_encode@plt+0x4bb8>
  404fe0:	mov    esi,0x8
  404fe5:	mov    edi,eax
  404fe7:	call   402610 <rb_open@plt>
  404fec:	mov    QWORD PTR [rbx+0x28],rax
  404ff0:	mov    rax,QWORD PTR [rip+0x4211]        # 409208 <rb_base64_encode@plt+0x6b28>
  404ff7:	mov    rax,QWORD PTR [rax+0x20]
  404ffb:	mov    rdi,rax
  404ffe:	call   402440 <rb_set_nb@plt>
  405003:	mov    rax,QWORD PTR [rip+0x41fe]        # 409208 <rb_base64_encode@plt+0x6b28>
  40500a:	mov    rax,QWORD PTR [rax+0x28]
  40500e:	mov    rdi,rax
  405011:	call   402440 <rb_set_nb@plt>
  405016:	mov    ecx,0xa
  40501b:	mov    edx,0x0
  405020:	lea    rsi,[rip+0xffffffffffffde2a]        # 402e51 <rb_base64_encode@plt+0x771>
  405027:	lea    rdi,[rip+0x2274]        # 4072a2 <rb_base64_encode@plt+0x4bc2>
  40502e:	call   4023c0 <rb_event_addish@plt>
  405033:	mov    rax,QWORD PTR [rip+0x41ce]        # 409208 <rb_base64_encode@plt+0x6b28>
  40503a:	mov    rax,QWORD PTR [rax+0x28]
  40503e:	mov    esi,0x0
  405043:	mov    rdi,rax
  405046:	call   404ce1 <rb_base64_encode@plt+0x2601>
  40504b:	mov    rdx,QWORD PTR [rip+0x41b6]        # 409208 <rb_base64_encode@plt+0x6b28>
  405052:	mov    rax,QWORD PTR [rip+0x41af]        # 409208 <rb_base64_encode@plt+0x6b28>
  405059:	mov    rax,QWORD PTR [rax+0x20]
  40505d:	mov    rsi,rdx
  405060:	mov    rdi,rax
  405063:	call   404b80 <rb_base64_encode@plt+0x24a0>
  405068:	mov    edi,0x0
  40506d:	call   4024a0 <rb_lib_loop@plt>
  405072:	endbr64 
  405076:	push   rbp
  405077:	mov    rbp,rsp
  40507a:	push   rbx
  40507b:	sub    rsp,0x88
  405082:	mov    QWORD PTR [rbp-0x88],rdi
  405089:	mov    QWORD PTR [rbp-0x90],rsi
  405090:	mov    rax,QWORD PTR fs:0x28
  405099:	mov    QWORD PTR [rbp-0x18],rax
  40509d:	xor    eax,eax
  40509f:	mov    rax,QWORD PTR [rbp-0x90]
  4050a6:	mov    rdx,QWORD PTR [rax]
  4050a9:	mov    rcx,QWORD PTR [rax+0x8]
  4050ad:	mov    QWORD PTR [rbp-0x60],rdx
  4050b1:	mov    QWORD PTR [rbp-0x58],rcx
  4050b5:	mov    rdx,QWORD PTR [rax+0x10]
  4050b9:	mov    rcx,QWORD PTR [rax+0x18]
  4050bd:	mov    QWORD PTR [rbp-0x50],rdx
  4050c1:	mov    QWORD PTR [rbp-0x48],rcx
  4050c5:	mov    rdx,QWORD PTR [rax+0x20]
  4050c9:	mov    rcx,QWORD PTR [rax+0x28]
  4050cd:	mov    QWORD PTR [rbp-0x40],rdx
  4050d1:	mov    QWORD PTR [rbp-0x38],rcx
  4050d5:	mov    rdx,QWORD PTR [rax+0x38]
  4050d9:	mov    rax,QWORD PTR [rax+0x30]
  4050dd:	mov    QWORD PTR [rbp-0x30],rax
  4050e1:	mov    QWORD PTR [rbp-0x28],rdx
  4050e5:	mov    rax,QWORD PTR [rbp-0x88]
  4050ec:	mov    eax,DWORD PTR [rax]
  4050ee:	mov    DWORD PTR [rbp-0x74],eax
  4050f1:	mov    rax,QWORD PTR [rbp-0x88]
  4050f8:	mov    eax,DWORD PTR [rax+0x4]
  4050fb:	mov    DWORD PTR [rbp-0x70],eax
  4050fe:	mov    rax,QWORD PTR [rbp-0x88]
  405105:	mov    eax,DWORD PTR [rax+0x8]
  405108:	mov    DWORD PTR [rbp-0x6c],eax
  40510b:	mov    rax,QWORD PTR [rbp-0x88]
  405112:	mov    eax,DWORD PTR [rax+0xc]
  405115:	mov    DWORD PTR [rbp-0x68],eax
  405118:	mov    rax,QWORD PTR [rbp-0x88]
  40511f:	mov    eax,DWORD PTR [rax+0x10]
  405122:	mov    DWORD PTR [rbp-0x64],eax
  405125:	mov    eax,DWORD PTR [rbp-0x6c]
  405128:	xor    eax,DWORD PTR [rbp-0x68]
  40512b:	and    eax,DWORD PTR [rbp-0x70]
  40512e:	xor    eax,DWORD PTR [rbp-0x68]
  405131:	mov    ebx,eax
  405133:	mov    eax,DWORD PTR [rbp-0x60]
  405136:	mov    edi,eax
  405138:	call   402690 <htonl@plt>
  40513d:	mov    DWORD PTR [rbp-0x60],eax
  405140:	mov    eax,DWORD PTR [rbp-0x60]
  405143:	lea    edx,[rbx+rax*1]
  405146:	mov    eax,DWORD PTR [rbp-0x74]
  405149:	rorx   eax,eax,0x1b
  40514f:	add    eax,edx
  405151:	add    eax,0x5a827999
  405156:	add    DWORD PTR [rbp-0x64],eax
  405159:	ror    DWORD PTR [rbp-0x70],0x2
  40515d:	mov    eax,DWORD PTR [rbp-0x70]
  405160:	xor    eax,DWORD PTR [rbp-0x6c]
  405163:	and    eax,DWORD PTR [rbp-0x74]
  405166:	xor    eax,DWORD PTR [rbp-0x6c]
  405169:	mov    ebx,eax
  40516b:	mov    eax,DWORD PTR [rbp-0x5c]
  40516e:	mov    edi,eax
  405170:	call   402690 <htonl@plt>
  405175:	mov    DWORD PTR [rbp-0x5c],eax
  405178:	mov    eax,DWORD PTR [rbp-0x5c]
  40517b:	lea    edx,[rbx+rax*1]
  40517e:	mov    eax,DWORD PTR [rbp-0x64]
  405181:	rorx   eax,eax,0x1b
  405187:	add    eax,edx
  405189:	add    eax,0x5a827999
  40518e:	add    DWORD PTR [rbp-0x68],eax
  405191:	ror    DWORD PTR [rbp-0x74],0x2
  405195:	mov    eax,DWORD PTR [rbp-0x74]
  405198:	xor    eax,DWORD PTR [rbp-0x70]
  40519b:	and    eax,DWORD PTR [rbp-0x64]
  40519e:	xor    eax,DWORD PTR [rbp-0x70]
  4051a1:	mov    ebx,eax
  4051a3:	mov    eax,DWORD PTR [rbp-0x58]
  4051a6:	mov    edi,eax
  4051a8:	call   402690 <htonl@plt>
  4051ad:	mov    DWORD PTR [rbp-0x58],eax
  4051b0:	mov    eax,DWORD PTR [rbp-0x58]
  4051b3:	lea    edx,[rbx+rax*1]
  4051b6:	mov    eax,DWORD PTR [rbp-0x68]
  4051b9:	rorx   eax,eax,0x1b
  4051bf:	add    eax,edx
  4051c1:	add    eax,0x5a827999
  4051c6:	add    DWORD PTR [rbp-0x6c],eax
  4051c9:	ror    DWORD PTR [rbp-0x64],0x2
  4051cd:	mov    eax,DWORD PTR [rbp-0x64]
  4051d0:	xor    eax,DWORD PTR [rbp-0x74]
  4051d3:	and    eax,DWORD PTR [rbp-0x68]
  4051d6:	xor    eax,DWORD PTR [rbp-0x74]
  4051d9:	mov    ebx,eax
  4051db:	mov    eax,DWORD PTR [rbp-0x54]
  4051de:	mov    edi,eax
  4051e0:	call   402690 <htonl@plt>
  4051e5:	mov    DWORD PTR [rbp-0x54],eax
  4051e8:	mov    eax,DWORD PTR [rbp-0x54]
  4051eb:	lea    edx,[rbx+rax*1]
  4051ee:	mov    eax,DWORD PTR [rbp-0x6c]
  4051f1:	rorx   eax,eax,0x1b
  4051f7:	add    eax,edx
  4051f9:	add    eax,0x5a827999
  4051fe:	add    DWORD PTR [rbp-0x70],eax
  405201:	ror    DWORD PTR [rbp-0x68],0x2
  405205:	mov    eax,DWORD PTR [rbp-0x68]
  405208:	xor    eax,DWORD PTR [rbp-0x64]
  40520b:	and    eax,DWORD PTR [rbp-0x6c]
  40520e:	xor    eax,DWORD PTR [rbp-0x64]
  405211:	mov    ebx,eax
  405213:	mov    eax,DWORD PTR [rbp-0x50]
  405216:	mov    edi,eax
  405218:	call   402690 <htonl@plt>
  40521d:	mov    DWORD PTR [rbp-0x50],eax
  405220:	mov    eax,DWORD PTR [rbp-0x50]
  405223:	lea    edx,[rbx+rax*1]
  405226:	mov    eax,DWORD PTR [rbp-0x70]
  405229:	rorx   eax,eax,0x1b
  40522f:	add    eax,edx
  405231:	add    eax,0x5a827999
  405236:	add    DWORD PTR [rbp-0x74],eax
  405239:	ror    DWORD PTR [rbp-0x6c],0x2
  40523d:	mov    eax,DWORD PTR [rbp-0x6c]
  405240:	xor    eax,DWORD PTR [rbp-0x68]
  405243:	and    eax,DWORD PTR [rbp-0x70]
  405246:	xor    eax,DWORD PTR [rbp-0x68]
  405249:	mov    ebx,eax
  40524b:	mov    eax,DWORD PTR [rbp-0x4c]
  40524e:	mov    edi,eax
  405250:	call   402690 <htonl@plt>
  405255:	mov    DWORD PTR [rbp-0x4c],eax
  405258:	mov    eax,DWORD PTR [rbp-0x4c]
  40525b:	lea    edx,[rbx+rax*1]
  40525e:	mov    eax,DWORD PTR [rbp-0x74]
  405261:	rorx   eax,eax,0x1b
  405267:	add    eax,edx
  405269:	add    eax,0x5a827999
  40526e:	add    DWORD PTR [rbp-0x64],eax
  405271:	ror    DWORD PTR [rbp-0x70],0x2
  405275:	mov    eax,DWORD PTR [rbp-0x70]
  405278:	xor    eax,DWORD PTR [rbp-0x6c]
  40527b:	and    eax,DWORD PTR [rbp-0x74]
  40527e:	xor    eax,DWORD PTR [rbp-0x6c]
  405281:	mov    ebx,eax
  405283:	mov    eax,DWORD PTR [rbp-0x48]
  405286:	mov    edi,eax
  405288:	call   402690 <htonl@plt>
  40528d:	mov    DWORD PTR [rbp-0x48],eax
  405290:	mov    eax,DWORD PTR [rbp-0x48]
  405293:	lea    edx,[rbx+rax*1]
  405296:	mov    eax,DWORD PTR [rbp-0x64]
  405299:	rorx   eax,eax,0x1b
  40529f:	add    eax,edx
  4052a1:	add    eax,0x5a827999
  4052a6:	add    DWORD PTR [rbp-0x68],eax
  4052a9:	ror    DWORD PTR [rbp-0x74],0x2
  4052ad:	mov    eax,DWORD PTR [rbp-0x74]
  4052b0:	xor    eax,DWORD PTR [rbp-0x70]
  4052b3:	and    eax,DWORD PTR [rbp-0x64]
  4052b6:	xor    eax,DWORD PTR [rbp-0x70]
  4052b9:	mov    ebx,eax
  4052bb:	mov    eax,DWORD PTR [rbp-0x44]
  4052be:	mov    edi,eax
  4052c0:	call   402690 <htonl@plt>
  4052c5:	mov    DWORD PTR [rbp-0x44],eax
  4052c8:	mov    eax,DWORD PTR [rbp-0x44]
  4052cb:	lea    edx,[rbx+rax*1]
  4052ce:	mov    eax,DWORD PTR [rbp-0x68]
  4052d1:	rorx   eax,eax,0x1b
  4052d7:	add    eax,edx
  4052d9:	add    eax,0x5a827999
  4052de:	add    DWORD PTR [rbp-0x6c],eax
  4052e1:	ror    DWORD PTR [rbp-0x64],0x2
  4052e5:	mov    eax,DWORD PTR [rbp-0x64]
  4052e8:	xor    eax,DWORD PTR [rbp-0x74]
  4052eb:	and    eax,DWORD PTR [rbp-0x68]
  4052ee:	xor    eax,DWORD PTR [rbp-0x74]
  4052f1:	mov    ebx,eax
  4052f3:	mov    eax,DWORD PTR [rbp-0x40]
  4052f6:	mov    edi,eax
  4052f8:	call   402690 <htonl@plt>
  4052fd:	mov    DWORD PTR [rbp-0x40],eax
  405300:	mov    eax,DWORD PTR [rbp-0x40]
  405303:	lea    edx,[rbx+rax*1]
  405306:	mov    eax,DWORD PTR [rbp-0x6c]
  405309:	rorx   eax,eax,0x1b
  40530f:	add    eax,edx
  405311:	add    eax,0x5a827999
  405316:	add    DWORD PTR [rbp-0x70],eax
  405319:	ror    DWORD PTR [rbp-0x68],0x2
  40531d:	mov    eax,DWORD PTR [rbp-0x68]
  405320:	xor    eax,DWORD PTR [rbp-0x64]
  405323:	and    eax,DWORD PTR [rbp-0x6c]
  405326:	xor    eax,DWORD PTR [rbp-0x64]
  405329:	mov    ebx,eax
  40532b:	mov    eax,DWORD PTR [rbp-0x3c]
  40532e:	mov    edi,eax
  405330:	call   402690 <htonl@plt>
  405335:	mov    DWORD PTR [rbp-0x3c],eax
  405338:	mov    eax,DWORD PTR [rbp-0x3c]
  40533b:	lea    edx,[rbx+rax*1]
  40533e:	mov    eax,DWORD PTR [rbp-0x70]
  405341:	rorx   eax,eax,0x1b
  405347:	add    eax,edx
  405349:	add    eax,0x5a827999
  40534e:	add    DWORD PTR [rbp-0x74],eax
  405351:	ror    DWORD PTR [rbp-0x6c],0x2
  405355:	mov    eax,DWORD PTR [rbp-0x6c]
  405358:	xor    eax,DWORD PTR [rbp-0x68]
  40535b:	and    eax,DWORD PTR [rbp-0x70]
  40535e:	xor    eax,DWORD PTR [rbp-0x68]
  405361:	mov    ebx,eax
  405363:	mov    eax,DWORD PTR [rbp-0x38]
  405366:	mov    edi,eax
  405368:	call   402690 <htonl@plt>
  40536d:	mov    DWORD PTR [rbp-0x38],eax
  405370:	mov    eax,DWORD PTR [rbp-0x38]
  405373:	lea    edx,[rbx+rax*1]
  405376:	mov    eax,DWORD PTR [rbp-0x74]
  405379:	rorx   eax,eax,0x1b
  40537f:	add    eax,edx
  405381:	add    eax,0x5a827999
  405386:	add    DWORD PTR [rbp-0x64],eax
  405389:	ror    DWORD PTR [rbp-0x70],0x2
  40538d:	mov    eax,DWORD PTR [rbp-0x70]
  405390:	xor    eax,DWORD PTR [rbp-0x6c]
  405393:	and    eax,DWORD PTR [rbp-0x74]
  405396:	xor    eax,DWORD PTR [rbp-0x6c]
  405399:	mov    ebx,eax
  40539b:	mov    eax,DWORD PTR [rbp-0x34]
  40539e:	mov    edi,eax
  4053a0:	call   402690 <htonl@plt>
  4053a5:	mov    DWORD PTR [rbp-0x34],eax
  4053a8:	mov    eax,DWORD PTR [rbp-0x34]
  4053ab:	lea    edx,[rbx+rax*1]
  4053ae:	mov    eax,DWORD PTR [rbp-0x64]
  4053b1:	rorx   eax,eax,0x1b
  4053b7:	add    eax,edx
  4053b9:	add    eax,0x5a827999
  4053be:	add    DWORD PTR [rbp-0x68],eax
  4053c1:	ror    DWORD PTR [rbp-0x74],0x2
  4053c5:	mov    eax,DWORD PTR [rbp-0x74]
  4053c8:	xor    eax,DWORD PTR [rbp-0x70]
  4053cb:	and    eax,DWORD PTR [rbp-0x64]
  4053ce:	xor    eax,DWORD PTR [rbp-0x70]
  4053d1:	mov    ebx,eax
  4053d3:	mov    eax,DWORD PTR [rbp-0x30]
  4053d6:	mov    edi,eax
  4053d8:	call   402690 <htonl@plt>
  4053dd:	mov    DWORD PTR [rbp-0x30],eax
  4053e0:	mov    eax,DWORD PTR [rbp-0x30]
  4053e3:	lea    edx,[rbx+rax*1]
  4053e6:	mov    eax,DWORD PTR [rbp-0x68]
  4053e9:	rorx   eax,eax,0x1b
  4053ef:	add    eax,edx
  4053f1:	add    eax,0x5a827999
  4053f6:	add    DWORD PTR [rbp-0x6c],eax
  4053f9:	ror    DWORD PTR [rbp-0x64],0x2
  4053fd:	mov    eax,DWORD PTR [rbp-0x64]
  405400:	xor    eax,DWORD PTR [rbp-0x74]
  405403:	and    eax,DWORD PTR [rbp-0x68]
  405406:	xor    eax,DWORD PTR [rbp-0x74]
  405409:	mov    ebx,eax
  40540b:	mov    eax,DWORD PTR [rbp-0x2c]
  40540e:	mov    edi,eax
  405410:	call   402690 <htonl@plt>
  405415:	mov    DWORD PTR [rbp-0x2c],eax
  405418:	mov    eax,DWORD PTR [rbp-0x2c]
  40541b:	lea    edx,[rbx+rax*1]
  40541e:	mov    eax,DWORD PTR [rbp-0x6c]
  405421:	rorx   eax,eax,0x1b
  405427:	add    eax,edx
  405429:	add    eax,0x5a827999
  40542e:	add    DWORD PTR [rbp-0x70],eax
  405431:	ror    DWORD PTR [rbp-0x68],0x2
  405435:	mov    eax,DWORD PTR [rbp-0x68]
  405438:	xor    eax,DWORD PTR [rbp-0x64]
  40543b:	and    eax,DWORD PTR [rbp-0x6c]
  40543e:	xor    eax,DWORD PTR [rbp-0x64]
  405441:	mov    ebx,eax
  405443:	mov    eax,DWORD PTR [rbp-0x28]
  405446:	mov    edi,eax
  405448:	call   402690 <htonl@plt>
  40544d:	mov    DWORD PTR [rbp-0x28],eax
  405450:	mov    eax,DWORD PTR [rbp-0x28]
  405453:	lea    edx,[rbx+rax*1]
  405456:	mov    eax,DWORD PTR [rbp-0x70]
  405459:	rorx   eax,eax,0x1b
  40545f:	add    eax,edx
  405461:	add    eax,0x5a827999
  405466:	add    DWORD PTR [rbp-0x74],eax
  405469:	ror    DWORD PTR [rbp-0x6c],0x2
  40546d:	mov    eax,DWORD PTR [rbp-0x6c]
  405470:	xor    eax,DWORD PTR [rbp-0x68]
  405473:	and    eax,DWORD PTR [rbp-0x70]
  405476:	xor    eax,DWORD PTR [rbp-0x68]
  405479:	mov    ebx,eax
  40547b:	mov    eax,DWORD PTR [rbp-0x24]
  40547e:	mov    edi,eax
  405480:	call   402690 <htonl@plt>
  405485:	mov    DWORD PTR [rbp-0x24],eax
  405488:	mov    eax,DWORD PTR [rbp-0x24]
  40548b:	lea    edx,[rbx+rax*1]
  40548e:	mov    eax,DWORD PTR [rbp-0x74]
  405491:	rorx   eax,eax,0x1b
  405497:	add    eax,edx
  405499:	add    eax,0x5a827999
  40549e:	add    DWORD PTR [rbp-0x64],eax
  4054a1:	ror    DWORD PTR [rbp-0x70],0x2
  4054a5:	mov    eax,DWORD PTR [rbp-0x70]
  4054a8:	xor    eax,DWORD PTR [rbp-0x6c]
  4054ab:	and    eax,DWORD PTR [rbp-0x74]
  4054ae:	xor    eax,DWORD PTR [rbp-0x6c]
  4054b1:	mov    edx,eax
  4054b3:	mov    ecx,DWORD PTR [rbp-0x2c]
  4054b6:	mov    eax,DWORD PTR [rbp-0x40]
  4054b9:	xor    ecx,eax
  4054bb:	mov    eax,DWORD PTR [rbp-0x58]
  4054be:	xor    ecx,eax
  4054c0:	mov    eax,DWORD PTR [rbp-0x60]
  4054c3:	xor    eax,ecx
  4054c5:	rorx   eax,eax,0x1f
  4054cb:	mov    DWORD PTR [rbp-0x60],eax
  4054ce:	mov    eax,DWORD PTR [rbp-0x60]
  4054d1:	add    edx,eax
  4054d3:	mov    eax,DWORD PTR [rbp-0x64]
  4054d6:	rorx   eax,eax,0x1b
  4054dc:	add    eax,edx
  4054de:	add    eax,0x5a827999
  4054e3:	add    DWORD PTR [rbp-0x68],eax
  4054e6:	ror    DWORD PTR [rbp-0x74],0x2
  4054ea:	mov    eax,DWORD PTR [rbp-0x74]
  4054ed:	xor    eax,DWORD PTR [rbp-0x70]
  4054f0:	and    eax,DWORD PTR [rbp-0x64]
  4054f3:	xor    eax,DWORD PTR [rbp-0x70]
  4054f6:	mov    edx,eax
  4054f8:	mov    ecx,DWORD PTR [rbp-0x28]
  4054fb:	mov    eax,DWORD PTR [rbp-0x3c]
  4054fe:	xor    ecx,eax
  405500:	mov    eax,DWORD PTR [rbp-0x54]
  405503:	xor    ecx,eax
  405505:	mov    eax,DWORD PTR [rbp-0x5c]
  405508:	xor    eax,ecx
  40550a:	rorx   eax,eax,0x1f
  405510:	mov    DWORD PTR [rbp-0x5c],eax
  405513:	mov    eax,DWORD PTR [rbp-0x5c]
  405516:	add    edx,eax
  405518:	mov    eax,DWORD PTR [rbp-0x68]
  40551b:	rorx   eax,eax,0x1b
  405521:	add    eax,edx
  405523:	add    eax,0x5a827999
  405528:	add    DWORD PTR [rbp-0x6c],eax
  40552b:	ror    DWORD PTR [rbp-0x64],0x2
  40552f:	mov    eax,DWORD PTR [rbp-0x64]
  405532:	xor    eax,DWORD PTR [rbp-0x74]
  405535:	and    eax,DWORD PTR [rbp-0x68]
  405538:	xor    eax,DWORD PTR [rbp-0x74]
  40553b:	mov    edx,eax
  40553d:	mov    ecx,DWORD PTR [rbp-0x24]
  405540:	mov    eax,DWORD PTR [rbp-0x38]
  405543:	xor    ecx,eax
  405545:	mov    eax,DWORD PTR [rbp-0x50]
  405548:	xor    ecx,eax
  40554a:	mov    eax,DWORD PTR [rbp-0x58]
  40554d:	xor    eax,ecx
  40554f:	rorx   eax,eax,0x1f
  405555:	mov    DWORD PTR [rbp-0x58],eax
  405558:	mov    eax,DWORD PTR [rbp-0x58]
  40555b:	add    edx,eax
  40555d:	mov    eax,DWORD PTR [rbp-0x6c]
  405560:	rorx   eax,eax,0x1b
  405566:	add    eax,edx
  405568:	add    eax,0x5a827999
  40556d:	add    DWORD PTR [rbp-0x70],eax
  405570:	ror    DWORD PTR [rbp-0x68],0x2
  405574:	mov    eax,DWORD PTR [rbp-0x68]
  405577:	xor    eax,DWORD PTR [rbp-0x64]
  40557a:	and    eax,DWORD PTR [rbp-0x6c]
  40557d:	xor    eax,DWORD PTR [rbp-0x64]
  405580:	mov    edx,eax
  405582:	mov    ecx,DWORD PTR [rbp-0x60]
  405585:	mov    eax,DWORD PTR [rbp-0x34]
  405588:	xor    ecx,eax
  40558a:	mov    eax,DWORD PTR [rbp-0x4c]
  40558d:	xor    ecx,eax
  40558f:	mov    eax,DWORD PTR [rbp-0x54]
  405592:	xor    eax,ecx
  405594:	rorx   eax,eax,0x1f
  40559a:	mov    DWORD PTR [rbp-0x54],eax
  40559d:	mov    eax,DWORD PTR [rbp-0x54]
  4055a0:	add    edx,eax
  4055a2:	mov    eax,DWORD PTR [rbp-0x70]
  4055a5:	rorx   eax,eax,0x1b
  4055ab:	add    eax,edx
  4055ad:	add    eax,0x5a827999
  4055b2:	add    DWORD PTR [rbp-0x74],eax
  4055b5:	ror    DWORD PTR [rbp-0x6c],0x2
  4055b9:	mov    eax,DWORD PTR [rbp-0x70]
  4055bc:	xor    eax,DWORD PTR [rbp-0x6c]
  4055bf:	xor    eax,DWORD PTR [rbp-0x68]
  4055c2:	mov    edx,eax
  4055c4:	mov    ecx,DWORD PTR [rbp-0x5c]
  4055c7:	mov    eax,DWORD PTR [rbp-0x30]
  4055ca:	xor    ecx,eax
  4055cc:	mov    eax,DWORD PTR [rbp-0x48]
  4055cf:	xor    ecx,eax
  4055d1:	mov    eax,DWORD PTR [rbp-0x50]
  4055d4:	xor    eax,ecx
  4055d6:	rorx   eax,eax,0x1f
  4055dc:	mov    DWORD PTR [rbp-0x50],eax
  4055df:	mov    eax,DWORD PTR [rbp-0x50]
  4055e2:	add    edx,eax
  4055e4:	mov    eax,DWORD PTR [rbp-0x74]
  4055e7:	rorx   eax,eax,0x1b
  4055ed:	add    eax,edx
  4055ef:	add    eax,0x6ed9eba1
  4055f4:	add    DWORD PTR [rbp-0x64],eax
  4055f7:	ror    DWORD PTR [rbp-0x70],0x2
  4055fb:	mov    eax,DWORD PTR [rbp-0x74]
  4055fe:	xor    eax,DWORD PTR [rbp-0x70]
  405601:	xor    eax,DWORD PTR [rbp-0x6c]
  405604:	mov    edx,eax
  405606:	mov    ecx,DWORD PTR [rbp-0x58]
  405609:	mov    eax,DWORD PTR [rbp-0x2c]
  40560c:	xor    ecx,eax
  40560e:	mov    eax,DWORD PTR [rbp-0x44]
  405611:	xor    ecx,eax
  405613:	mov    eax,DWORD PTR [rbp-0x4c]
  405616:	xor    eax,ecx
  405618:	rorx   eax,eax,0x1f
  40561e:	mov    DWORD PTR [rbp-0x4c],eax
  405621:	mov    eax,DWORD PTR [rbp-0x4c]
  405624:	add    edx,eax
  405626:	mov    eax,DWORD PTR [rbp-0x64]
  405629:	rorx   eax,eax,0x1b
  40562f:	add    eax,edx
  405631:	add    eax,0x6ed9eba1
  405636:	add    DWORD PTR [rbp-0x68],eax
  405639:	ror    DWORD PTR [rbp-0x74],0x2
  40563d:	mov    eax,DWORD PTR [rbp-0x64]
  405640:	xor    eax,DWORD PTR [rbp-0x74]
  405643:	xor    eax,DWORD PTR [rbp-0x70]
  405646:	mov    edx,eax
  405648:	mov    ecx,DWORD PTR [rbp-0x54]
  40564b:	mov    eax,DWORD PTR [rbp-0x28]
  40564e:	xor    ecx,eax
  405650:	mov    eax,DWORD PTR [rbp-0x40]
  405653:	xor    ecx,eax
  405655:	mov    eax,DWORD PTR [rbp-0x48]
  405658:	xor    eax,ecx
  40565a:	rorx   eax,eax,0x1f
  405660:	mov    DWORD PTR [rbp-0x48],eax
  405663:	mov    eax,DWORD PTR [rbp-0x48]
  405666:	add    edx,eax
  405668:	mov    eax,DWORD PTR [rbp-0x68]
  40566b:	rorx   eax,eax,0x1b
  405671:	add    eax,edx
  405673:	add    eax,0x6ed9eba1
  405678:	add    DWORD PTR [rbp-0x6c],eax
  40567b:	ror    DWORD PTR [rbp-0x64],0x2
  40567f:	mov    eax,DWORD PTR [rbp-0x68]
  405682:	xor    eax,DWORD PTR [rbp-0x64]
  405685:	xor    eax,DWORD PTR [rbp-0x74]
  405688:	mov    edx,eax
  40568a:	mov    ecx,DWORD PTR [rbp-0x50]
  40568d:	mov    eax,DWORD PTR [rbp-0x24]
  405690:	xor    ecx,eax
  405692:	mov    eax,DWORD PTR [rbp-0x3c]
  405695:	xor    ecx,eax
  405697:	mov    eax,DWORD PTR [rbp-0x44]
  40569a:	xor    eax,ecx
  40569c:	rorx   eax,eax,0x1f
  4056a2:	mov    DWORD PTR [rbp-0x44],eax
  4056a5:	mov    eax,DWORD PTR [rbp-0x44]
  4056a8:	add    edx,eax
  4056aa:	mov    eax,DWORD PTR [rbp-0x6c]
  4056ad:	rorx   eax,eax,0x1b
  4056b3:	add    eax,edx
  4056b5:	add    eax,0x6ed9eba1
  4056ba:	add    DWORD PTR [rbp-0x70],eax
  4056bd:	ror    DWORD PTR [rbp-0x68],0x2
  4056c1:	mov    eax,DWORD PTR [rbp-0x6c]
  4056c4:	xor    eax,DWORD PTR [rbp-0x68]
  4056c7:	xor    eax,DWORD PTR [rbp-0x64]
  4056ca:	mov    edx,eax
  4056cc:	mov    ecx,DWORD PTR [rbp-0x4c]
  4056cf:	mov    eax,DWORD PTR [rbp-0x60]
  4056d2:	xor    ecx,eax
  4056d4:	mov    eax,DWORD PTR [rbp-0x38]
  4056d7:	xor    ecx,eax
  4056d9:	mov    eax,DWORD PTR [rbp-0x40]
  4056dc:	xor    eax,ecx
  4056de:	rorx   eax,eax,0x1f
  4056e4:	mov    DWORD PTR [rbp-0x40],eax
  4056e7:	mov    eax,DWORD PTR [rbp-0x40]
  4056ea:	add    edx,eax
  4056ec:	mov    eax,DWORD PTR [rbp-0x70]
  4056ef:	rorx   eax,eax,0x1b
  4056f5:	add    eax,edx
  4056f7:	add    eax,0x6ed9eba1
  4056fc:	add    DWORD PTR [rbp-0x74],eax
  4056ff:	ror    DWORD PTR [rbp-0x6c],0x2
  405703:	mov    eax,DWORD PTR [rbp-0x70]
  405706:	xor    eax,DWORD PTR [rbp-0x6c]
  405709:	xor    eax,DWORD PTR [rbp-0x68]
  40570c:	mov    edx,eax
  40570e:	mov    ecx,DWORD PTR [rbp-0x48]
  405711:	mov    eax,DWORD PTR [rbp-0x5c]
  405714:	xor    ecx,eax
  405716:	mov    eax,DWORD PTR [rbp-0x34]
  405719:	xor    ecx,eax
  40571b:	mov    eax,DWORD PTR [rbp-0x3c]
  40571e:	xor    eax,ecx
  405720:	rorx   eax,eax,0x1f
  405726:	mov    DWORD PTR [rbp-0x3c],eax
  405729:	mov    eax,DWORD PTR [rbp-0x3c]
  40572c:	add    edx,eax
  40572e:	mov    eax,DWORD PTR [rbp-0x74]
  405731:	rorx   eax,eax,0x1b
  405737:	add    eax,edx
  405739:	add    eax,0x6ed9eba1
  40573e:	add    DWORD PTR [rbp-0x64],eax
  405741:	ror    DWORD PTR [rbp-0x70],0x2
  405745:	mov    eax,DWORD PTR [rbp-0x74]
  405748:	xor    eax,DWORD PTR [rbp-0x70]
  40574b:	xor    eax,DWORD PTR [rbp-0x6c]
  40574e:	mov    edx,eax
  405750:	mov    ecx,DWORD PTR [rbp-0x44]
  405753:	mov    eax,DWORD PTR [rbp-0x58]
  405756:	xor    ecx,eax
  405758:	mov    eax,DWORD PTR [rbp-0x30]
  40575b:	xor    ecx,eax
  40575d:	mov    eax,DWORD PTR [rbp-0x38]
  405760:	xor    eax,ecx
  405762:	rorx   eax,eax,0x1f
  405768:	mov    DWORD PTR [rbp-0x38],eax
  40576b:	mov    eax,DWORD PTR [rbp-0x38]
  40576e:	add    edx,eax
  405770:	mov    eax,DWORD PTR [rbp-0x64]
  405773:	rorx   eax,eax,0x1b
  405779:	add    eax,edx
  40577b:	add    eax,0x6ed9eba1
  405780:	add    DWORD PTR [rbp-0x68],eax
  405783:	ror    DWORD PTR [rbp-0x74],0x2
  405787:	mov    eax,DWORD PTR [rbp-0x64]
  40578a:	xor    eax,DWORD PTR [rbp-0x74]
  40578d:	xor    eax,DWORD PTR [rbp-0x70]
  405790:	mov    edx,eax
  405792:	mov    ecx,DWORD PTR [rbp-0x40]
  405795:	mov    eax,DWORD PTR [rbp-0x54]
  405798:	xor    ecx,eax
  40579a:	mov    eax,DWORD PTR [rbp-0x2c]
  40579d:	xor    ecx,eax
  40579f:	mov    eax,DWORD PTR [rbp-0x34]
  4057a2:	xor    eax,ecx
  4057a4:	rorx   eax,eax,0x1f
  4057aa:	mov    DWORD PTR [rbp-0x34],eax
  4057ad:	mov    eax,DWORD PTR [rbp-0x34]
  4057b0:	add    edx,eax
  4057b2:	mov    eax,DWORD PTR [rbp-0x68]
  4057b5:	rorx   eax,eax,0x1b
  4057bb:	add    eax,edx
  4057bd:	add    eax,0x6ed9eba1
  4057c2:	add    DWORD PTR [rbp-0x6c],eax
  4057c5:	ror    DWORD PTR [rbp-0x64],0x2
  4057c9:	mov    eax,DWORD PTR [rbp-0x68]
  4057cc:	xor    eax,DWORD PTR [rbp-0x64]
  4057cf:	xor    eax,DWORD PTR [rbp-0x74]
  4057d2:	mov    edx,eax
  4057d4:	mov    ecx,DWORD PTR [rbp-0x3c]
  4057d7:	mov    eax,DWORD PTR [rbp-0x50]
  4057da:	xor    ecx,eax
  4057dc:	mov    eax,DWORD PTR [rbp-0x28]
  4057df:	xor    ecx,eax
  4057e1:	mov    eax,DWORD PTR [rbp-0x30]
  4057e4:	xor    eax,ecx
  4057e6:	rorx   eax,eax,0x1f
  4057ec:	mov    DWORD PTR [rbp-0x30],eax
  4057ef:	mov    eax,DWORD PTR [rbp-0x30]
  4057f2:	add    edx,eax
  4057f4:	mov    eax,DWORD PTR [rbp-0x6c]
  4057f7:	rorx   eax,eax,0x1b
  4057fd:	add    eax,edx
  4057ff:	add    eax,0x6ed9eba1
  405804:	add    DWORD PTR [rbp-0x70],eax
  405807:	ror    DWORD PTR [rbp-0x68],0x2
  40580b:	mov    eax,DWORD PTR [rbp-0x6c]
  40580e:	xor    eax,DWORD PTR [rbp-0x68]
  405811:	xor    eax,DWORD PTR [rbp-0x64]
  405814:	mov    edx,eax
  405816:	mov    ecx,DWORD PTR [rbp-0x38]
  405819:	mov    eax,DWORD PTR [rbp-0x4c]
  40581c:	xor    ecx,eax
  40581e:	mov    eax,DWORD PTR [rbp-0x24]
  405821:	xor    ecx,eax
  405823:	mov    eax,DWORD PTR [rbp-0x2c]
  405826:	xor    eax,ecx
  405828:	rorx   eax,eax,0x1f
  40582e:	mov    DWORD PTR [rbp-0x2c],eax
  405831:	mov    eax,DWORD PTR [rbp-0x2c]
  405834:	add    edx,eax
  405836:	mov    eax,DWORD PTR [rbp-0x70]
  405839:	rorx   eax,eax,0x1b
  40583f:	add    eax,edx
  405841:	add    eax,0x6ed9eba1
  405846:	add    DWORD PTR [rbp-0x74],eax
  405849:	ror    DWORD PTR [rbp-0x6c],0x2
  40584d:	mov    eax,DWORD PTR [rbp-0x70]
  405850:	xor    eax,DWORD PTR [rbp-0x6c]
  405853:	xor    eax,DWORD PTR [rbp-0x68]
  405856:	mov    edx,eax
  405858:	mov    ecx,DWORD PTR [rbp-0x34]
  40585b:	mov    eax,DWORD PTR [rbp-0x48]
  40585e:	xor    ecx,eax
  405860:	mov    eax,DWORD PTR [rbp-0x60]
  405863:	xor    ecx,eax
  405865:	mov    eax,DWORD PTR [rbp-0x28]
  405868:	xor    eax,ecx
  40586a:	rorx   eax,eax,0x1f
  405870:	mov    DWORD PTR [rbp-0x28],eax
  405873:	mov    eax,DWORD PTR [rbp-0x28]
  405876:	add    edx,eax
  405878:	mov    eax,DWORD PTR [rbp-0x74]
  40587b:	rorx   eax,eax,0x1b
  405881:	add    eax,edx
  405883:	add    eax,0x6ed9eba1
  405888:	add    DWORD PTR [rbp-0x64],eax
  40588b:	ror    DWORD PTR [rbp-0x70],0x2
  40588f:	mov    eax,DWORD PTR [rbp-0x74]
  405892:	xor    eax,DWORD PTR [rbp-0x70]
  405895:	xor    eax,DWORD PTR [rbp-0x6c]
  405898:	mov    edx,eax
  40589a:	mov    ecx,DWORD PTR [rbp-0x30]
  40589d:	mov    eax,DWORD PTR [rbp-0x44]
  4058a0:	xor    ecx,eax
  4058a2:	mov    eax,DWORD PTR [rbp-0x5c]
  4058a5:	xor    ecx,eax
  4058a7:	mov    eax,DWORD PTR [rbp-0x24]
  4058aa:	xor    eax,ecx
  4058ac:	rorx   eax,eax,0x1f
  4058b2:	mov    DWORD PTR [rbp-0x24],eax
  4058b5:	mov    eax,DWORD PTR [rbp-0x24]
  4058b8:	add    edx,eax
  4058ba:	mov    eax,DWORD PTR [rbp-0x64]
  4058bd:	rorx   eax,eax,0x1b
  4058c3:	add    eax,edx
  4058c5:	add    eax,0x6ed9eba1
  4058ca:	add    DWORD PTR [rbp-0x68],eax
  4058cd:	ror    DWORD PTR [rbp-0x74],0x2
  4058d1:	mov    eax,DWORD PTR [rbp-0x64]
  4058d4:	xor    eax,DWORD PTR [rbp-0x74]
  4058d7:	xor    eax,DWORD PTR [rbp-0x70]
  4058da:	mov    edx,eax
  4058dc:	mov    ecx,DWORD PTR [rbp-0x2c]
  4058df:	mov    eax,DWORD PTR [rbp-0x40]
  4058e2:	xor    ecx,eax
  4058e4:	mov    eax,DWORD PTR [rbp-0x58]
  4058e7:	xor    ecx,eax
  4058e9:	mov    eax,DWORD PTR [rbp-0x60]
  4058ec:	xor    eax,ecx
  4058ee:	rorx   eax,eax,0x1f
  4058f4:	mov    DWORD PTR [rbp-0x60],eax
  4058f7:	mov    eax,DWORD PTR [rbp-0x60]
  4058fa:	add    edx,eax
  4058fc:	mov    eax,DWORD PTR [rbp-0x68]
  4058ff:	rorx   eax,eax,0x1b
  405905:	add    eax,edx
  405907:	add    eax,0x6ed9eba1
  40590c:	add    DWORD PTR [rbp-0x6c],eax
  40590f:	ror    DWORD PTR [rbp-0x64],0x2
  405913:	mov    eax,DWORD PTR [rbp-0x68]
  405916:	xor    eax,DWORD PTR [rbp-0x64]
  405919:	xor    eax,DWORD PTR [rbp-0x74]
  40591c:	mov    edx,eax
  40591e:	mov    ecx,DWORD PTR [rbp-0x28]
  405921:	mov    eax,DWORD PTR [rbp-0x3c]
  405924:	xor    ecx,eax
  405926:	mov    eax,DWORD PTR [rbp-0x54]
  405929:	xor    ecx,eax
  40592b:	mov    eax,DWORD PTR [rbp-0x5c]
  40592e:	xor    eax,ecx
  405930:	rorx   eax,eax,0x1f
  405936:	mov    DWORD PTR [rbp-0x5c],eax
  405939:	mov    eax,DWORD PTR [rbp-0x5c]
  40593c:	add    edx,eax
  40593e:	mov    eax,DWORD PTR [rbp-0x6c]
  405941:	rorx   eax,eax,0x1b
  405947:	add    eax,edx
  405949:	add    eax,0x6ed9eba1
  40594e:	add    DWORD PTR [rbp-0x70],eax
  405951:	ror    DWORD PTR [rbp-0x68],0x2
  405955:	mov    eax,DWORD PTR [rbp-0x6c]
  405958:	xor    eax,DWORD PTR [rbp-0x68]
  40595b:	xor    eax,DWORD PTR [rbp-0x64]
  40595e:	mov    edx,eax
  405960:	mov    ecx,DWORD PTR [rbp-0x24]
  405963:	mov    eax,DWORD PTR [rbp-0x38]
  405966:	xor    ecx,eax
  405968:	mov    eax,DWORD PTR [rbp-0x50]
  40596b:	xor    ecx,eax
  40596d:	mov    eax,DWORD PTR [rbp-0x58]
  405970:	xor    eax,ecx
  405972:	rorx   eax,eax,0x1f
  405978:	mov    DWORD PTR [rbp-0x58],eax
  40597b:	mov    eax,DWORD PTR [rbp-0x58]
  40597e:	add    edx,eax
  405980:	mov    eax,DWORD PTR [rbp-0x70]
  405983:	rorx   eax,eax,0x1b
  405989:	add    eax,edx
  40598b:	add    eax,0x6ed9eba1
  405990:	add    DWORD PTR [rbp-0x74],eax
  405993:	ror    DWORD PTR [rbp-0x6c],0x2
  405997:	mov    eax,DWORD PTR [rbp-0x70]
  40599a:	xor    eax,DWORD PTR [rbp-0x6c]
  40599d:	xor    eax,DWORD PTR [rbp-0x68]
  4059a0:	mov    edx,eax
  4059a2:	mov    ecx,DWORD PTR [rbp-0x60]
  4059a5:	mov    eax,DWORD PTR [rbp-0x34]
  4059a8:	xor    ecx,eax
  4059aa:	mov    eax,DWORD PTR [rbp-0x4c]
  4059ad:	xor    ecx,eax
  4059af:	mov    eax,DWORD PTR [rbp-0x54]
  4059b2:	xor    eax,ecx
  4059b4:	rorx   eax,eax,0x1f
  4059ba:	mov    DWORD PTR [rbp-0x54],eax
  4059bd:	mov    eax,DWORD PTR [rbp-0x54]
  4059c0:	add    edx,eax
  4059c2:	mov    eax,DWORD PTR [rbp-0x74]
  4059c5:	rorx   eax,eax,0x1b
  4059cb:	add    eax,edx
  4059cd:	add    eax,0x6ed9eba1
  4059d2:	add    DWORD PTR [rbp-0x64],eax
  4059d5:	ror    DWORD PTR [rbp-0x70],0x2
  4059d9:	mov    eax,DWORD PTR [rbp-0x74]
  4059dc:	xor    eax,DWORD PTR [rbp-0x70]
  4059df:	xor    eax,DWORD PTR [rbp-0x6c]
  4059e2:	mov    edx,eax
  4059e4:	mov    ecx,DWORD PTR [rbp-0x5c]
  4059e7:	mov    eax,DWORD PTR [rbp-0x30]
  4059ea:	xor    ecx,eax
  4059ec:	mov    eax,DWORD PTR [rbp-0x48]
  4059ef:	xor    ecx,eax
  4059f1:	mov    eax,DWORD PTR [rbp-0x50]
  4059f4:	xor    eax,ecx
  4059f6:	rorx   eax,eax,0x1f
  4059fc:	mov    DWORD PTR [rbp-0x50],eax
  4059ff:	mov    eax,DWORD PTR [rbp-0x50]
  405a02:	add    edx,eax
  405a04:	mov    eax,DWORD PTR [rbp-0x64]
  405a07:	rorx   eax,eax,0x1b
  405a0d:	add    eax,edx
  405a0f:	add    eax,0x6ed9eba1
  405a14:	add    DWORD PTR [rbp-0x68],eax
  405a17:	ror    DWORD PTR [rbp-0x74],0x2
  405a1b:	mov    eax,DWORD PTR [rbp-0x64]
  405a1e:	xor    eax,DWORD PTR [rbp-0x74]
  405a21:	xor    eax,DWORD PTR [rbp-0x70]
  405a24:	mov    edx,eax
  405a26:	mov    ecx,DWORD PTR [rbp-0x58]
  405a29:	mov    eax,DWORD PTR [rbp-0x2c]
  405a2c:	xor    ecx,eax
  405a2e:	mov    eax,DWORD PTR [rbp-0x44]
  405a31:	xor    ecx,eax
  405a33:	mov    eax,DWORD PTR [rbp-0x4c]
  405a36:	xor    eax,ecx
  405a38:	rorx   eax,eax,0x1f
  405a3e:	mov    DWORD PTR [rbp-0x4c],eax
  405a41:	mov    eax,DWORD PTR [rbp-0x4c]
  405a44:	add    edx,eax
  405a46:	mov    eax,DWORD PTR [rbp-0x68]
  405a49:	rorx   eax,eax,0x1b
  405a4f:	add    eax,edx
  405a51:	add    eax,0x6ed9eba1
  405a56:	add    DWORD PTR [rbp-0x6c],eax
  405a59:	ror    DWORD PTR [rbp-0x64],0x2
  405a5d:	mov    eax,DWORD PTR [rbp-0x68]
  405a60:	xor    eax,DWORD PTR [rbp-0x64]
  405a63:	xor    eax,DWORD PTR [rbp-0x74]
  405a66:	mov    edx,eax
  405a68:	mov    ecx,DWORD PTR [rbp-0x54]
  405a6b:	mov    eax,DWORD PTR [rbp-0x28]
  405a6e:	xor    ecx,eax
  405a70:	mov    eax,DWORD PTR [rbp-0x40]
  405a73:	xor    ecx,eax
  405a75:	mov    eax,DWORD PTR [rbp-0x48]
  405a78:	xor    eax,ecx
  405a7a:	rorx   eax,eax,0x1f
  405a80:	mov    DWORD PTR [rbp-0x48],eax
  405a83:	mov    eax,DWORD PTR [rbp-0x48]
  405a86:	add    edx,eax
  405a88:	mov    eax,DWORD PTR [rbp-0x6c]
  405a8b:	rorx   eax,eax,0x1b
  405a91:	add    eax,edx
  405a93:	add    eax,0x6ed9eba1
  405a98:	add    DWORD PTR [rbp-0x70],eax
  405a9b:	ror    DWORD PTR [rbp-0x68],0x2
  405a9f:	mov    eax,DWORD PTR [rbp-0x6c]
  405aa2:	xor    eax,DWORD PTR [rbp-0x68]
  405aa5:	xor    eax,DWORD PTR [rbp-0x64]
  405aa8:	mov    edx,eax
  405aaa:	mov    ecx,DWORD PTR [rbp-0x50]
  405aad:	mov    eax,DWORD PTR [rbp-0x24]
  405ab0:	xor    ecx,eax
  405ab2:	mov    eax,DWORD PTR [rbp-0x3c]
  405ab5:	xor    ecx,eax
  405ab7:	mov    eax,DWORD PTR [rbp-0x44]
  405aba:	xor    eax,ecx
  405abc:	rorx   eax,eax,0x1f
  405ac2:	mov    DWORD PTR [rbp-0x44],eax
  405ac5:	mov    eax,DWORD PTR [rbp-0x44]
  405ac8:	add    edx,eax
  405aca:	mov    eax,DWORD PTR [rbp-0x70]
  405acd:	rorx   eax,eax,0x1b
  405ad3:	add    eax,edx
  405ad5:	add    eax,0x6ed9eba1
  405ada:	add    DWORD PTR [rbp-0x74],eax
  405add:	ror    DWORD PTR [rbp-0x6c],0x2
  405ae1:	mov    eax,DWORD PTR [rbp-0x70]
  405ae4:	or     eax,DWORD PTR [rbp-0x6c]
  405ae7:	and    eax,DWORD PTR [rbp-0x68]
  405aea:	mov    edx,eax
  405aec:	mov    eax,DWORD PTR [rbp-0x70]
  405aef:	and    eax,DWORD PTR [rbp-0x6c]
  405af2:	mov    ecx,edx
  405af4:	or     ecx,eax
  405af6:	mov    edx,DWORD PTR [rbp-0x4c]
  405af9:	mov    eax,DWORD PTR [rbp-0x60]
  405afc:	xor    edx,eax
  405afe:	mov    eax,DWORD PTR [rbp-0x38]
  405b01:	xor    edx,eax
  405b03:	mov    eax,DWORD PTR [rbp-0x40]
  405b06:	xor    eax,edx
  405b08:	rorx   eax,eax,0x1f
  405b0e:	mov    DWORD PTR [rbp-0x40],eax
  405b11:	mov    eax,DWORD PTR [rbp-0x40]
  405b14:	lea    edx,[rcx+rax*1]
  405b17:	mov    eax,DWORD PTR [rbp-0x74]
  405b1a:	rorx   eax,eax,0x1b
  405b20:	add    eax,edx
  405b22:	sub    eax,0x70e44324
  405b27:	add    DWORD PTR [rbp-0x64],eax
  405b2a:	ror    DWORD PTR [rbp-0x70],0x2
  405b2e:	mov    eax,DWORD PTR [rbp-0x74]
  405b31:	or     eax,DWORD PTR [rbp-0x70]
  405b34:	and    eax,DWORD PTR [rbp-0x6c]
  405b37:	mov    edx,eax
  405b39:	mov    eax,DWORD PTR [rbp-0x74]
  405b3c:	and    eax,DWORD PTR [rbp-0x70]
  405b3f:	mov    ecx,edx
  405b41:	or     ecx,eax
  405b43:	mov    edx,DWORD PTR [rbp-0x48]
  405b46:	mov    eax,DWORD PTR [rbp-0x5c]
  405b49:	xor    edx,eax
  405b4b:	mov    eax,DWORD PTR [rbp-0x34]
  405b4e:	xor    edx,eax
  405b50:	mov    eax,DWORD PTR [rbp-0x3c]
  405b53:	xor    eax,edx
  405b55:	rorx   eax,eax,0x1f
  405b5b:	mov    DWORD PTR [rbp-0x3c],eax
  405b5e:	mov    eax,DWORD PTR [rbp-0x3c]
  405b61:	lea    edx,[rcx+rax*1]
  405b64:	mov    eax,DWORD PTR [rbp-0x64]
  405b67:	rorx   eax,eax,0x1b
  405b6d:	add    eax,edx
  405b6f:	sub    eax,0x70e44324
  405b74:	add    DWORD PTR [rbp-0x68],eax
  405b77:	ror    DWORD PTR [rbp-0x74],0x2
  405b7b:	mov    eax,DWORD PTR [rbp-0x64]
  405b7e:	or     eax,DWORD PTR [rbp-0x74]
  405b81:	and    eax,DWORD PTR [rbp-0x70]
  405b84:	mov    edx,eax
  405b86:	mov    eax,DWORD PTR [rbp-0x64]
  405b89:	and    eax,DWORD PTR [rbp-0x74]
  405b8c:	mov    ecx,edx
  405b8e:	or     ecx,eax
  405b90:	mov    edx,DWORD PTR [rbp-0x44]
  405b93:	mov    eax,DWORD PTR [rbp-0x58]
  405b96:	xor    edx,eax
  405b98:	mov    eax,DWORD PTR [rbp-0x30]
  405b9b:	xor    edx,eax
  405b9d:	mov    eax,DWORD PTR [rbp-0x38]
  405ba0:	xor    eax,edx
  405ba2:	rorx   eax,eax,0x1f
  405ba8:	mov    DWORD PTR [rbp-0x38],eax
  405bab:	mov    eax,DWORD PTR [rbp-0x38]
  405bae:	lea    edx,[rcx+rax*1]
  405bb1:	mov    eax,DWORD PTR [rbp-0x68]
  405bb4:	rorx   eax,eax,0x1b
  405bba:	add    eax,edx
  405bbc:	sub    eax,0x70e44324
  405bc1:	add    DWORD PTR [rbp-0x6c],eax
  405bc4:	ror    DWORD PTR [rbp-0x64],0x2
  405bc8:	mov    eax,DWORD PTR [rbp-0x68]
  405bcb:	or     eax,DWORD PTR [rbp-0x64]
  405bce:	and    eax,DWORD PTR [rbp-0x74]
  405bd1:	mov    edx,eax
  405bd3:	mov    eax,DWORD PTR [rbp-0x68]
  405bd6:	and    eax,DWORD PTR [rbp-0x64]
  405bd9:	mov    ecx,edx
  405bdb:	or     ecx,eax
  405bdd:	mov    edx,DWORD PTR [rbp-0x40]
  405be0:	mov    eax,DWORD PTR [rbp-0x54]
  405be3:	xor    edx,eax
  405be5:	mov    eax,DWORD PTR [rbp-0x2c]
  405be8:	xor    edx,eax
  405bea:	mov    eax,DWORD PTR [rbp-0x34]
  405bed:	xor    eax,edx
  405bef:	rorx   eax,eax,0x1f
  405bf5:	mov    DWORD PTR [rbp-0x34],eax
  405bf8:	mov    eax,DWORD PTR [rbp-0x34]
  405bfb:	lea    edx,[rcx+rax*1]
  405bfe:	mov    eax,DWORD PTR [rbp-0x6c]
  405c01:	rorx   eax,eax,0x1b
  405c07:	add    eax,edx
  405c09:	sub    eax,0x70e44324
  405c0e:	add    DWORD PTR [rbp-0x70],eax
  405c11:	ror    DWORD PTR [rbp-0x68],0x2
  405c15:	mov    eax,DWORD PTR [rbp-0x6c]
  405c18:	or     eax,DWORD PTR [rbp-0x68]
  405c1b:	and    eax,DWORD PTR [rbp-0x64]
  405c1e:	mov    edx,eax
  405c20:	mov    eax,DWORD PTR [rbp-0x6c]
  405c23:	and    eax,DWORD PTR [rbp-0x68]
  405c26:	mov    ecx,edx
  405c28:	or     ecx,eax
  405c2a:	mov    edx,DWORD PTR [rbp-0x3c]
  405c2d:	mov    eax,DWORD PTR [rbp-0x50]
  405c30:	xor    edx,eax
  405c32:	mov    eax,DWORD PTR [rbp-0x28]
  405c35:	xor    edx,eax
  405c37:	mov    eax,DWORD PTR [rbp-0x30]
  405c3a:	xor    eax,edx
  405c3c:	rorx   eax,eax,0x1f
  405c42:	mov    DWORD PTR [rbp-0x30],eax
  405c45:	mov    eax,DWORD PTR [rbp-0x30]
  405c48:	lea    edx,[rcx+rax*1]
  405c4b:	mov    eax,DWORD PTR [rbp-0x70]
  405c4e:	rorx   eax,eax,0x1b
  405c54:	add    eax,edx
  405c56:	sub    eax,0x70e44324
  405c5b:	add    DWORD PTR [rbp-0x74],eax
  405c5e:	ror    DWORD PTR [rbp-0x6c],0x2
  405c62:	mov    eax,DWORD PTR [rbp-0x70]
  405c65:	or     eax,DWORD PTR [rbp-0x6c]
  405c68:	and    eax,DWORD PTR [rbp-0x68]
  405c6b:	mov    edx,eax
  405c6d:	mov    eax,DWORD PTR [rbp-0x70]
  405c70:	and    eax,DWORD PTR [rbp-0x6c]
  405c73:	mov    ecx,edx
  405c75:	or     ecx,eax
  405c77:	mov    edx,DWORD PTR [rbp-0x38]
  405c7a:	mov    eax,DWORD PTR [rbp-0x4c]
  405c7d:	xor    edx,eax
  405c7f:	mov    eax,DWORD PTR [rbp-0x24]
  405c82:	xor    edx,eax
  405c84:	mov    eax,DWORD PTR [rbp-0x2c]
  405c87:	xor    eax,edx
  405c89:	rorx   eax,eax,0x1f
  405c8f:	mov    DWORD PTR [rbp-0x2c],eax
  405c92:	mov    eax,DWORD PTR [rbp-0x2c]
  405c95:	lea    edx,[rcx+rax*1]
  405c98:	mov    eax,DWORD PTR [rbp-0x74]
  405c9b:	rorx   eax,eax,0x1b
  405ca1:	add    eax,edx
  405ca3:	sub    eax,0x70e44324
  405ca8:	add    DWORD PTR [rbp-0x64],eax
  405cab:	ror    DWORD PTR [rbp-0x70],0x2
  405caf:	mov    eax,DWORD PTR [rbp-0x74]
  405cb2:	or     eax,DWORD PTR [rbp-0x70]
  405cb5:	and    eax,DWORD PTR [rbp-0x6c]
  405cb8:	mov    edx,eax
  405cba:	mov    eax,DWORD PTR [rbp-0x74]
  405cbd:	and    eax,DWORD PTR [rbp-0x70]
  405cc0:	mov    ecx,edx
  405cc2:	or     ecx,eax
  405cc4:	mov    edx,DWORD PTR [rbp-0x34]
  405cc7:	mov    eax,DWORD PTR [rbp-0x48]
  405cca:	xor    edx,eax
  405ccc:	mov    eax,DWORD PTR [rbp-0x60]
  405ccf:	xor    edx,eax
  405cd1:	mov    eax,DWORD PTR [rbp-0x28]
  405cd4:	xor    eax,edx
  405cd6:	rorx   eax,eax,0x1f
  405cdc:	mov    DWORD PTR [rbp-0x28],eax
  405cdf:	mov    eax,DWORD PTR [rbp-0x28]
  405ce2:	lea    edx,[rcx+rax*1]
  405ce5:	mov    eax,DWORD PTR [rbp-0x64]
  405ce8:	rorx   eax,eax,0x1b
  405cee:	add    eax,edx
  405cf0:	sub    eax,0x70e44324
  405cf5:	add    DWORD PTR [rbp-0x68],eax
  405cf8:	ror    DWORD PTR [rbp-0x74],0x2
  405cfc:	mov    eax,DWORD PTR [rbp-0x64]
  405cff:	or     eax,DWORD PTR [rbp-0x74]
  405d02:	and    eax,DWORD PTR [rbp-0x70]
  405d05:	mov    edx,eax
  405d07:	mov    eax,DWORD PTR [rbp-0x64]
  405d0a:	and    eax,DWORD PTR [rbp-0x74]
  405d0d:	mov    ecx,edx
  405d0f:	or     ecx,eax
  405d11:	mov    edx,DWORD PTR [rbp-0x30]
  405d14:	mov    eax,DWORD PTR [rbp-0x44]
  405d17:	xor    edx,eax
  405d19:	mov    eax,DWORD PTR [rbp-0x5c]
  405d1c:	xor    edx,eax
  405d1e:	mov    eax,DWORD PTR [rbp-0x24]
  405d21:	xor    eax,edx
  405d23:	rorx   eax,eax,0x1f
  405d29:	mov    DWORD PTR [rbp-0x24],eax
  405d2c:	mov    eax,DWORD PTR [rbp-0x24]
  405d2f:	lea    edx,[rcx+rax*1]
  405d32:	mov    eax,DWORD PTR [rbp-0x68]
  405d35:	rorx   eax,eax,0x1b
  405d3b:	add    eax,edx
  405d3d:	sub    eax,0x70e44324
  405d42:	add    DWORD PTR [rbp-0x6c],eax
  405d45:	ror    DWORD PTR [rbp-0x64],0x2
  405d49:	mov    eax,DWORD PTR [rbp-0x68]
  405d4c:	or     eax,DWORD PTR [rbp-0x64]
  405d4f:	and    eax,DWORD PTR [rbp-0x74]
  405d52:	mov    edx,eax
  405d54:	mov    eax,DWORD PTR [rbp-0x68]
  405d57:	and    eax,DWORD PTR [rbp-0x64]
  405d5a:	mov    ecx,edx
  405d5c:	or     ecx,eax
  405d5e:	mov    edx,DWORD PTR [rbp-0x2c]
  405d61:	mov    eax,DWORD PTR [rbp-0x40]
  405d64:	xor    edx,eax
  405d66:	mov    eax,DWORD PTR [rbp-0x58]
  405d69:	xor    edx,eax
  405d6b:	mov    eax,DWORD PTR [rbp-0x60]
  405d6e:	xor    eax,edx
  405d70:	rorx   eax,eax,0x1f
  405d76:	mov    DWORD PTR [rbp-0x60],eax
  405d79:	mov    eax,DWORD PTR [rbp-0x60]
  405d7c:	lea    edx,[rcx+rax*1]
  405d7f:	mov    eax,DWORD PTR [rbp-0x6c]
  405d82:	rorx   eax,eax,0x1b
  405d88:	add    eax,edx
  405d8a:	sub    eax,0x70e44324
  405d8f:	add    DWORD PTR [rbp-0x70],eax
  405d92:	ror    DWORD PTR [rbp-0x68],0x2
  405d96:	mov    eax,DWORD PTR [rbp-0x6c]
  405d99:	or     eax,DWORD PTR [rbp-0x68]
  405d9c:	and    eax,DWORD PTR [rbp-0x64]
  405d9f:	mov    edx,eax
  405da1:	mov    eax,DWORD PTR [rbp-0x6c]
  405da4:	and    eax,DWORD PTR [rbp-0x68]
  405da7:	mov    ecx,edx
  405da9:	or     ecx,eax
  405dab:	mov    edx,DWORD PTR [rbp-0x28]
  405dae:	mov    eax,DWORD PTR [rbp-0x3c]
  405db1:	xor    edx,eax
  405db3:	mov    eax,DWORD PTR [rbp-0x54]
  405db6:	xor    edx,eax
  405db8:	mov    eax,DWORD PTR [rbp-0x5c]
  405dbb:	xor    eax,edx
  405dbd:	rorx   eax,eax,0x1f
  405dc3:	mov    DWORD PTR [rbp-0x5c],eax
  405dc6:	mov    eax,DWORD PTR [rbp-0x5c]
  405dc9:	lea    edx,[rcx+rax*1]
  405dcc:	mov    eax,DWORD PTR [rbp-0x70]
  405dcf:	rorx   eax,eax,0x1b
  405dd5:	add    eax,edx
  405dd7:	sub    eax,0x70e44324
  405ddc:	add    DWORD PTR [rbp-0x74],eax
  405ddf:	ror    DWORD PTR [rbp-0x6c],0x2
  405de3:	mov    eax,DWORD PTR [rbp-0x70]
  405de6:	or     eax,DWORD PTR [rbp-0x6c]
  405de9:	and    eax,DWORD PTR [rbp-0x68]
  405dec:	mov    edx,eax
  405dee:	mov    eax,DWORD PTR [rbp-0x70]
  405df1:	and    eax,DWORD PTR [rbp-0x6c]
  405df4:	mov    ecx,edx
  405df6:	or     ecx,eax
  405df8:	mov    edx,DWORD PTR [rbp-0x24]
  405dfb:	mov    eax,DWORD PTR [rbp-0x38]
  405dfe:	xor    edx,eax
  405e00:	mov    eax,DWORD PTR [rbp-0x50]
  405e03:	xor    edx,eax
  405e05:	mov    eax,DWORD PTR [rbp-0x58]
  405e08:	xor    eax,edx
  405e0a:	rorx   eax,eax,0x1f
  405e10:	mov    DWORD PTR [rbp-0x58],eax
  405e13:	mov    eax,DWORD PTR [rbp-0x58]
  405e16:	lea    edx,[rcx+rax*1]
  405e19:	mov    eax,DWORD PTR [rbp-0x74]
  405e1c:	rorx   eax,eax,0x1b
  405e22:	add    eax,edx
  405e24:	sub    eax,0x70e44324
  405e29:	add    DWORD PTR [rbp-0x64],eax
  405e2c:	ror    DWORD PTR [rbp-0x70],0x2
  405e30:	mov    eax,DWORD PTR [rbp-0x74]
  405e33:	or     eax,DWORD PTR [rbp-0x70]
  405e36:	and    eax,DWORD PTR [rbp-0x6c]
  405e39:	mov    edx,eax
  405e3b:	mov    eax,DWORD PTR [rbp-0x74]
  405e3e:	and    eax,DWORD PTR [rbp-0x70]
  405e41:	mov    ecx,edx
  405e43:	or     ecx,eax
  405e45:	mov    edx,DWORD PTR [rbp-0x60]
  405e48:	mov    eax,DWORD PTR [rbp-0x34]
  405e4b:	xor    edx,eax
  405e4d:	mov    eax,DWORD PTR [rbp-0x4c]
  405e50:	xor    edx,eax
  405e52:	mov    eax,DWORD PTR [rbp-0x54]
  405e55:	xor    eax,edx
  405e57:	rorx   eax,eax,0x1f
  405e5d:	mov    DWORD PTR [rbp-0x54],eax
  405e60:	mov    eax,DWORD PTR [rbp-0x54]
  405e63:	lea    edx,[rcx+rax*1]
  405e66:	mov    eax,DWORD PTR [rbp-0x64]
  405e69:	rorx   eax,eax,0x1b
  405e6f:	add    eax,edx
  405e71:	sub    eax,0x70e44324
  405e76:	add    DWORD PTR [rbp-0x68],eax
  405e79:	ror    DWORD PTR [rbp-0x74],0x2
  405e7d:	mov    eax,DWORD PTR [rbp-0x64]
  405e80:	or     eax,DWORD PTR [rbp-0x74]
  405e83:	and    eax,DWORD PTR [rbp-0x70]
  405e86:	mov    edx,eax
  405e88:	mov    eax,DWORD PTR [rbp-0x64]
  405e8b:	and    eax,DWORD PTR [rbp-0x74]
  405e8e:	mov    ecx,edx
  405e90:	or     ecx,eax
  405e92:	mov    edx,DWORD PTR [rbp-0x5c]
  405e95:	mov    eax,DWORD PTR [rbp-0x30]
  405e98:	xor    edx,eax
  405e9a:	mov    eax,DWORD PTR [rbp-0x48]
  405e9d:	xor    edx,eax
  405e9f:	mov    eax,DWORD PTR [rbp-0x50]
  405ea2:	xor    eax,edx
  405ea4:	rorx   eax,eax,0x1f
  405eaa:	mov    DWORD PTR [rbp-0x50],eax
  405ead:	mov    eax,DWORD PTR [rbp-0x50]
  405eb0:	lea    edx,[rcx+rax*1]
  405eb3:	mov    eax,DWORD PTR [rbp-0x68]
  405eb6:	rorx   eax,eax,0x1b
  405ebc:	add    eax,edx
  405ebe:	sub    eax,0x70e44324
  405ec3:	add    DWORD PTR [rbp-0x6c],eax
  405ec6:	ror    DWORD PTR [rbp-0x64],0x2
  405eca:	mov    eax,DWORD PTR [rbp-0x68]
  405ecd:	or     eax,DWORD PTR [rbp-0x64]
  405ed0:	and    eax,DWORD PTR [rbp-0x74]
  405ed3:	mov    edx,eax
  405ed5:	mov    eax,DWORD PTR [rbp-0x68]
  405ed8:	and    eax,DWORD PTR [rbp-0x64]
  405edb:	mov    ecx,edx
  405edd:	or     ecx,eax
  405edf:	mov    edx,DWORD PTR [rbp-0x58]
  405ee2:	mov    eax,DWORD PTR [rbp-0x2c]
  405ee5:	xor    edx,eax
  405ee7:	mov    eax,DWORD PTR [rbp-0x44]
  405eea:	xor    edx,eax
  405eec:	mov    eax,DWORD PTR [rbp-0x4c]
  405eef:	xor    eax,edx
  405ef1:	rorx   eax,eax,0x1f
  405ef7:	mov    DWORD PTR [rbp-0x4c],eax
  405efa:	mov    eax,DWORD PTR [rbp-0x4c]
  405efd:	lea    edx,[rcx+rax*1]
  405f00:	mov    eax,DWORD PTR [rbp-0x6c]
  405f03:	rorx   eax,eax,0x1b
  405f09:	add    eax,edx
  405f0b:	sub    eax,0x70e44324
  405f10:	add    DWORD PTR [rbp-0x70],eax
  405f13:	ror    DWORD PTR [rbp-0x68],0x2
  405f17:	mov    eax,DWORD PTR [rbp-0x6c]
  405f1a:	or     eax,DWORD PTR [rbp-0x68]
  405f1d:	and    eax,DWORD PTR [rbp-0x64]
  405f20:	mov    edx,eax
  405f22:	mov    eax,DWORD PTR [rbp-0x6c]
  405f25:	and    eax,DWORD PTR [rbp-0x68]
  405f28:	mov    ecx,edx
  405f2a:	or     ecx,eax
  405f2c:	mov    edx,DWORD PTR [rbp-0x54]
  405f2f:	mov    eax,DWORD PTR [rbp-0x28]
  405f32:	xor    edx,eax
  405f34:	mov    eax,DWORD PTR [rbp-0x40]
  405f37:	xor    edx,eax
  405f39:	mov    eax,DWORD PTR [rbp-0x48]
  405f3c:	xor    eax,edx
  405f3e:	rorx   eax,eax,0x1f
  405f44:	mov    DWORD PTR [rbp-0x48],eax
  405f47:	mov    eax,DWORD PTR [rbp-0x48]
  405f4a:	lea    edx,[rcx+rax*1]
  405f4d:	mov    eax,DWORD PTR [rbp-0x70]
  405f50:	rorx   eax,eax,0x1b
  405f56:	add    eax,edx
  405f58:	sub    eax,0x70e44324
  405f5d:	add    DWORD PTR [rbp-0x74],eax
  405f60:	ror    DWORD PTR [rbp-0x6c],0x2
  405f64:	mov    eax,DWORD PTR [rbp-0x70]
  405f67:	or     eax,DWORD PTR [rbp-0x6c]
  405f6a:	and    eax,DWORD PTR [rbp-0x68]
  405f6d:	mov    edx,eax
  405f6f:	mov    eax,DWORD PTR [rbp-0x70]
  405f72:	and    eax,DWORD PTR [rbp-0x6c]
  405f75:	mov    ecx,edx
  405f77:	or     ecx,eax
  405f79:	mov    edx,DWORD PTR [rbp-0x50]
  405f7c:	mov    eax,DWORD PTR [rbp-0x24]
  405f7f:	xor    edx,eax
  405f81:	mov    eax,DWORD PTR [rbp-0x3c]
  405f84:	xor    edx,eax
  405f86:	mov    eax,DWORD PTR [rbp-0x44]
  405f89:	xor    eax,edx
  405f8b:	rorx   eax,eax,0x1f
  405f91:	mov    DWORD PTR [rbp-0x44],eax
  405f94:	mov    eax,DWORD PTR [rbp-0x44]
  405f97:	lea    edx,[rcx+rax*1]
  405f9a:	mov    eax,DWORD PTR [rbp-0x74]
  405f9d:	rorx   eax,eax,0x1b
  405fa3:	add    eax,edx
  405fa5:	sub    eax,0x70e44324
  405faa:	add    DWORD PTR [rbp-0x64],eax
  405fad:	ror    DWORD PTR [rbp-0x70],0x2
  405fb1:	mov    eax,DWORD PTR [rbp-0x74]
  405fb4:	or     eax,DWORD PTR [rbp-0x70]
  405fb7:	and    eax,DWORD PTR [rbp-0x6c]
  405fba:	mov    edx,eax
  405fbc:	mov    eax,DWORD PTR [rbp-0x74]
  405fbf:	and    eax,DWORD PTR [rbp-0x70]
  405fc2:	mov    ecx,edx
  405fc4:	or     ecx,eax
  405fc6:	mov    edx,DWORD PTR [rbp-0x4c]
  405fc9:	mov    eax,DWORD PTR [rbp-0x60]
  405fcc:	xor    edx,eax
  405fce:	mov    eax,DWORD PTR [rbp-0x38]
  405fd1:	xor    edx,eax
  405fd3:	mov    eax,DWORD PTR [rbp-0x40]
  405fd6:	xor    eax,edx
  405fd8:	rorx   eax,eax,0x1f
  405fde:	mov    DWORD PTR [rbp-0x40],eax
  405fe1:	mov    eax,DWORD PTR [rbp-0x40]
  405fe4:	lea    edx,[rcx+rax*1]
  405fe7:	mov    eax,DWORD PTR [rbp-0x64]
  405fea:	rorx   eax,eax,0x1b
  405ff0:	add    eax,edx
  405ff2:	sub    eax,0x70e44324
  405ff7:	add    DWORD PTR [rbp-0x68],eax
  405ffa:	ror    DWORD PTR [rbp-0x74],0x2
  405ffe:	mov    eax,DWORD PTR [rbp-0x64]
  406001:	or     eax,DWORD PTR [rbp-0x74]
  406004:	and    eax,DWORD PTR [rbp-0x70]
  406007:	mov    edx,eax
  406009:	mov    eax,DWORD PTR [rbp-0x64]
  40600c:	and    eax,DWORD PTR [rbp-0x74]
  40600f:	mov    ecx,edx
  406011:	or     ecx,eax
  406013:	mov    edx,DWORD PTR [rbp-0x48]
  406016:	mov    eax,DWORD PTR [rbp-0x5c]
  406019:	xor    edx,eax
  40601b:	mov    eax,DWORD PTR [rbp-0x34]
  40601e:	xor    edx,eax
  406020:	mov    eax,DWORD PTR [rbp-0x3c]
  406023:	xor    eax,edx
  406025:	rorx   eax,eax,0x1f
  40602b:	mov    DWORD PTR [rbp-0x3c],eax
  40602e:	mov    eax,DWORD PTR [rbp-0x3c]
  406031:	lea    edx,[rcx+rax*1]
  406034:	mov    eax,DWORD PTR [rbp-0x68]
  406037:	rorx   eax,eax,0x1b
  40603d:	add    eax,edx
  40603f:	sub    eax,0x70e44324
  406044:	add    DWORD PTR [rbp-0x6c],eax
  406047:	ror    DWORD PTR [rbp-0x64],0x2
  40604b:	mov    eax,DWORD PTR [rbp-0x68]
  40604e:	or     eax,DWORD PTR [rbp-0x64]
  406051:	and    eax,DWORD PTR [rbp-0x74]
  406054:	mov    edx,eax
  406056:	mov    eax,DWORD PTR [rbp-0x68]
  406059:	and    eax,DWORD PTR [rbp-0x64]
  40605c:	mov    ecx,edx
  40605e:	or     ecx,eax
  406060:	mov    edx,DWORD PTR [rbp-0x44]
  406063:	mov    eax,DWORD PTR [rbp-0x58]
  406066:	xor    edx,eax
  406068:	mov    eax,DWORD PTR [rbp-0x30]
  40606b:	xor    edx,eax
  40606d:	mov    eax,DWORD PTR [rbp-0x38]
  406070:	xor    eax,edx
  406072:	rorx   eax,eax,0x1f
  406078:	mov    DWORD PTR [rbp-0x38],eax
  40607b:	mov    eax,DWORD PTR [rbp-0x38]
  40607e:	lea    edx,[rcx+rax*1]
  406081:	mov    eax,DWORD PTR [rbp-0x6c]
  406084:	rorx   eax,eax,0x1b
  40608a:	add    eax,edx
  40608c:	sub    eax,0x70e44324
  406091:	add    DWORD PTR [rbp-0x70],eax
  406094:	ror    DWORD PTR [rbp-0x68],0x2
  406098:	mov    eax,DWORD PTR [rbp-0x6c]
  40609b:	or     eax,DWORD PTR [rbp-0x68]
  40609e:	and    eax,DWORD PTR [rbp-0x64]
  4060a1:	mov    edx,eax
  4060a3:	mov    eax,DWORD PTR [rbp-0x6c]
  4060a6:	and    eax,DWORD PTR [rbp-0x68]
  4060a9:	mov    ecx,edx
  4060ab:	or     ecx,eax
  4060ad:	mov    edx,DWORD PTR [rbp-0x40]
  4060b0:	mov    eax,DWORD PTR [rbp-0x54]
  4060b3:	xor    edx,eax
  4060b5:	mov    eax,DWORD PTR [rbp-0x2c]
  4060b8:	xor    edx,eax
  4060ba:	mov    eax,DWORD PTR [rbp-0x34]
  4060bd:	xor    eax,edx
  4060bf:	rorx   eax,eax,0x1f
  4060c5:	mov    DWORD PTR [rbp-0x34],eax
  4060c8:	mov    eax,DWORD PTR [rbp-0x34]
  4060cb:	lea    edx,[rcx+rax*1]
  4060ce:	mov    eax,DWORD PTR [rbp-0x70]
  4060d1:	rorx   eax,eax,0x1b
  4060d7:	add    eax,edx
  4060d9:	sub    eax,0x70e44324
  4060de:	add    DWORD PTR [rbp-0x74],eax
  4060e1:	ror    DWORD PTR [rbp-0x6c],0x2
  4060e5:	mov    eax,DWORD PTR [rbp-0x70]
  4060e8:	xor    eax,DWORD PTR [rbp-0x6c]
  4060eb:	xor    eax,DWORD PTR [rbp-0x68]
  4060ee:	mov    edx,eax
  4060f0:	mov    ecx,DWORD PTR [rbp-0x3c]
  4060f3:	mov    eax,DWORD PTR [rbp-0x50]
  4060f6:	xor    ecx,eax
  4060f8:	mov    eax,DWORD PTR [rbp-0x28]
  4060fb:	xor    ecx,eax
  4060fd:	mov    eax,DWORD PTR [rbp-0x30]
  406100:	xor    eax,ecx
  406102:	rorx   eax,eax,0x1f
  406108:	mov    DWORD PTR [rbp-0x30],eax
  40610b:	mov    eax,DWORD PTR [rbp-0x30]
  40610e:	add    edx,eax
  406110:	mov    eax,DWORD PTR [rbp-0x74]
  406113:	rorx   eax,eax,0x1b
  406119:	add    eax,edx
  40611b:	sub    eax,0x359d3e2a
  406120:	add    DWORD PTR [rbp-0x64],eax
  406123:	ror    DWORD PTR [rbp-0x70],0x2
  406127:	mov    eax,DWORD PTR [rbp-0x74]
  40612a:	xor    eax,DWORD PTR [rbp-0x70]
  40612d:	xor    eax,DWORD PTR [rbp-0x6c]
  406130:	mov    edx,eax
  406132:	mov    ecx,DWORD PTR [rbp-0x38]
  406135:	mov    eax,DWORD PTR [rbp-0x4c]
  406138:	xor    ecx,eax
  40613a:	mov    eax,DWORD PTR [rbp-0x24]
  40613d:	xor    ecx,eax
  40613f:	mov    eax,DWORD PTR [rbp-0x2c]
  406142:	xor    eax,ecx
  406144:	rorx   eax,eax,0x1f
  40614a:	mov    DWORD PTR [rbp-0x2c],eax
  40614d:	mov    eax,DWORD PTR [rbp-0x2c]
  406150:	add    edx,eax
  406152:	mov    eax,DWORD PTR [rbp-0x64]
  406155:	rorx   eax,eax,0x1b
  40615b:	add    eax,edx
  40615d:	sub    eax,0x359d3e2a
  406162:	add    DWORD PTR [rbp-0x68],eax
  406165:	ror    DWORD PTR [rbp-0x74],0x2
  406169:	mov    eax,DWORD PTR [rbp-0x64]
  40616c:	xor    eax,DWORD PTR [rbp-0x74]
  40616f:	xor    eax,DWORD PTR [rbp-0x70]
  406172:	mov    edx,eax
  406174:	mov    ecx,DWORD PTR [rbp-0x34]
  406177:	mov    eax,DWORD PTR [rbp-0x48]
  40617a:	xor    ecx,eax
  40617c:	mov    eax,DWORD PTR [rbp-0x60]
  40617f:	xor    ecx,eax
  406181:	mov    eax,DWORD PTR [rbp-0x28]
  406184:	xor    eax,ecx
  406186:	rorx   eax,eax,0x1f
  40618c:	mov    DWORD PTR [rbp-0x28],eax
  40618f:	mov    eax,DWORD PTR [rbp-0x28]
  406192:	add    edx,eax
  406194:	mov    eax,DWORD PTR [rbp-0x68]
  406197:	rorx   eax,eax,0x1b
  40619d:	add    eax,edx
  40619f:	sub    eax,0x359d3e2a
  4061a4:	add    DWORD PTR [rbp-0x6c],eax
  4061a7:	ror    DWORD PTR [rbp-0x64],0x2
  4061ab:	mov    eax,DWORD PTR [rbp-0x68]
  4061ae:	xor    eax,DWORD PTR [rbp-0x64]
  4061b1:	xor    eax,DWORD PTR [rbp-0x74]
  4061b4:	mov    edx,eax
  4061b6:	mov    ecx,DWORD PTR [rbp-0x30]
  4061b9:	mov    eax,DWORD PTR [rbp-0x44]
  4061bc:	xor    ecx,eax
  4061be:	mov    eax,DWORD PTR [rbp-0x5c]
  4061c1:	xor    ecx,eax
  4061c3:	mov    eax,DWORD PTR [rbp-0x24]
  4061c6:	xor    eax,ecx
  4061c8:	rorx   eax,eax,0x1f
  4061ce:	mov    DWORD PTR [rbp-0x24],eax
  4061d1:	mov    eax,DWORD PTR [rbp-0x24]
  4061d4:	add    edx,eax
  4061d6:	mov    eax,DWORD PTR [rbp-0x6c]
  4061d9:	rorx   eax,eax,0x1b
  4061df:	add    eax,edx
  4061e1:	sub    eax,0x359d3e2a
  4061e6:	add    DWORD PTR [rbp-0x70],eax
  4061e9:	ror    DWORD PTR [rbp-0x68],0x2
  4061ed:	mov    eax,DWORD PTR [rbp-0x6c]
  4061f0:	xor    eax,DWORD PTR [rbp-0x68]
  4061f3:	xor    eax,DWORD PTR [rbp-0x64]
  4061f6:	mov    edx,eax
  4061f8:	mov    ecx,DWORD PTR [rbp-0x2c]
  4061fb:	mov    eax,DWORD PTR [rbp-0x40]
  4061fe:	xor    ecx,eax
  406200:	mov    eax,DWORD PTR [rbp-0x58]
  406203:	xor    ecx,eax
  406205:	mov    eax,DWORD PTR [rbp-0x60]
  406208:	xor    eax,ecx
  40620a:	rorx   eax,eax,0x1f
  406210:	mov    DWORD PTR [rbp-0x60],eax
  406213:	mov    eax,DWORD PTR [rbp-0x60]
  406216:	add    edx,eax
  406218:	mov    eax,DWORD PTR [rbp-0x70]
  40621b:	rorx   eax,eax,0x1b
  406221:	add    eax,edx
  406223:	sub    eax,0x359d3e2a
  406228:	add    DWORD PTR [rbp-0x74],eax
  40622b:	ror    DWORD PTR [rbp-0x6c],0x2
  40622f:	mov    eax,DWORD PTR [rbp-0x70]
  406232:	xor    eax,DWORD PTR [rbp-0x6c]
  406235:	xor    eax,DWORD PTR [rbp-0x68]
  406238:	mov    edx,eax
  40623a:	mov    ecx,DWORD PTR [rbp-0x28]
  40623d:	mov    eax,DWORD PTR [rbp-0x3c]
  406240:	xor    ecx,eax
  406242:	mov    eax,DWORD PTR [rbp-0x54]
  406245:	xor    ecx,eax
  406247:	mov    eax,DWORD PTR [rbp-0x5c]
  40624a:	xor    eax,ecx
  40624c:	rorx   eax,eax,0x1f
  406252:	mov    DWORD PTR [rbp-0x5c],eax
  406255:	mov    eax,DWORD PTR [rbp-0x5c]
  406258:	add    edx,eax
  40625a:	mov    eax,DWORD PTR [rbp-0x74]
  40625d:	rorx   eax,eax,0x1b
  406263:	add    eax,edx
  406265:	sub    eax,0x359d3e2a
  40626a:	add    DWORD PTR [rbp-0x64],eax
  40626d:	ror    DWORD PTR [rbp-0x70],0x2
  406271:	mov    eax,DWORD PTR [rbp-0x74]
  406274:	xor    eax,DWORD PTR [rbp-0x70]
  406277:	xor    eax,DWORD PTR [rbp-0x6c]
  40627a:	mov    edx,eax
  40627c:	mov    ecx,DWORD PTR [rbp-0x24]
  40627f:	mov    eax,DWORD PTR [rbp-0x38]
  406282:	xor    ecx,eax
  406284:	mov    eax,DWORD PTR [rbp-0x50]
  406287:	xor    ecx,eax
  406289:	mov    eax,DWORD PTR [rbp-0x58]
  40628c:	xor    eax,ecx
  40628e:	rorx   eax,eax,0x1f
  406294:	mov    DWORD PTR [rbp-0x58],eax
  406297:	mov    eax,DWORD PTR [rbp-0x58]
  40629a:	add    edx,eax
  40629c:	mov    eax,DWORD PTR [rbp-0x64]
  40629f:	rorx   eax,eax,0x1b
  4062a5:	add    eax,edx
  4062a7:	sub    eax,0x359d3e2a
  4062ac:	add    DWORD PTR [rbp-0x68],eax
  4062af:	ror    DWORD PTR [rbp-0x74],0x2
  4062b3:	mov    eax,DWORD PTR [rbp-0x64]
  4062b6:	xor    eax,DWORD PTR [rbp-0x74]
  4062b9:	xor    eax,DWORD PTR [rbp-0x70]
  4062bc:	mov    edx,eax
  4062be:	mov    ecx,DWORD PTR [rbp-0x60]
  4062c1:	mov    eax,DWORD PTR [rbp-0x34]
  4062c4:	xor    ecx,eax
  4062c6:	mov    eax,DWORD PTR [rbp-0x4c]
  4062c9:	xor    ecx,eax
  4062cb:	mov    eax,DWORD PTR [rbp-0x54]
  4062ce:	xor    eax,ecx
  4062d0:	rorx   eax,eax,0x1f
  4062d6:	mov    DWORD PTR [rbp-0x54],eax
  4062d9:	mov    eax,DWORD PTR [rbp-0x54]
  4062dc:	add    edx,eax
  4062de:	mov    eax,DWORD PTR [rbp-0x68]
  4062e1:	rorx   eax,eax,0x1b
  4062e7:	add    eax,edx
  4062e9:	sub    eax,0x359d3e2a
  4062ee:	add    DWORD PTR [rbp-0x6c],eax
  4062f1:	ror    DWORD PTR [rbp-0x64],0x2
  4062f5:	mov    eax,DWORD PTR [rbp-0x68]
  4062f8:	xor    eax,DWORD PTR [rbp-0x64]
  4062fb:	xor    eax,DWORD PTR [rbp-0x74]
  4062fe:	mov    edx,eax
  406300:	mov    ecx,DWORD PTR [rbp-0x5c]
  406303:	mov    eax,DWORD PTR [rbp-0x30]
  406306:	xor    ecx,eax
  406308:	mov    eax,DWORD PTR [rbp-0x48]
  40630b:	xor    ecx,eax
  40630d:	mov    eax,DWORD PTR [rbp-0x50]
  406310:	xor    eax,ecx
  406312:	rorx   eax,eax,0x1f
  406318:	mov    DWORD PTR [rbp-0x50],eax
  40631b:	mov    eax,DWORD PTR [rbp-0x50]
  40631e:	add    edx,eax
  406320:	mov    eax,DWORD PTR [rbp-0x6c]
  406323:	rorx   eax,eax,0x1b
  406329:	add    eax,edx
  40632b:	sub    eax,0x359d3e2a
  406330:	add    DWORD PTR [rbp-0x70],eax
  406333:	ror    DWORD PTR [rbp-0x68],0x2
  406337:	mov    eax,DWORD PTR [rbp-0x6c]
  40633a:	xor    eax,DWORD PTR [rbp-0x68]
  40633d:	xor    eax,DWORD PTR [rbp-0x64]
  406340:	mov    edx,eax
  406342:	mov    ecx,DWORD PTR [rbp-0x58]
  406345:	mov    eax,DWORD PTR [rbp-0x2c]
  406348:	xor    ecx,eax
  40634a:	mov    eax,DWORD PTR [rbp-0x44]
  40634d:	xor    ecx,eax
  40634f:	mov    eax,DWORD PTR [rbp-0x4c]
  406352:	xor    eax,ecx
  406354:	rorx   eax,eax,0x1f
  40635a:	mov    DWORD PTR [rbp-0x4c],eax
  40635d:	mov    eax,DWORD PTR [rbp-0x4c]
  406360:	add    edx,eax
  406362:	mov    eax,DWORD PTR [rbp-0x70]
  406365:	rorx   eax,eax,0x1b
  40636b:	add    eax,edx
  40636d:	sub    eax,0x359d3e2a
  406372:	add    DWORD PTR [rbp-0x74],eax
  406375:	ror    DWORD PTR [rbp-0x6c],0x2
  406379:	mov    eax,DWORD PTR [rbp-0x70]
  40637c:	xor    eax,DWORD PTR [rbp-0x6c]
  40637f:	xor    eax,DWORD PTR [rbp-0x68]
  406382:	mov    edx,eax
  406384:	mov    ecx,DWORD PTR [rbp-0x54]
  406387:	mov    eax,DWORD PTR [rbp-0x28]
  40638a:	xor    ecx,eax
  40638c:	mov    eax,DWORD PTR [rbp-0x40]
  40638f:	xor    ecx,eax
  406391:	mov    eax,DWORD PTR [rbp-0x48]
  406394:	xor    eax,ecx
  406396:	rorx   eax,eax,0x1f
  40639c:	mov    DWORD PTR [rbp-0x48],eax
  40639f:	mov    eax,DWORD PTR [rbp-0x48]
  4063a2:	add    edx,eax
  4063a4:	mov    eax,DWORD PTR [rbp-0x74]
  4063a7:	rorx   eax,eax,0x1b
  4063ad:	add    eax,edx
  4063af:	sub    eax,0x359d3e2a
  4063b4:	add    DWORD PTR [rbp-0x64],eax
  4063b7:	ror    DWORD PTR [rbp-0x70],0x2
  4063bb:	mov    eax,DWORD PTR [rbp-0x74]
  4063be:	xor    eax,DWORD PTR [rbp-0x70]
  4063c1:	xor    eax,DWORD PTR [rbp-0x6c]
  4063c4:	mov    edx,eax
  4063c6:	mov    ecx,DWORD PTR [rbp-0x50]
  4063c9:	mov    eax,DWORD PTR [rbp-0x24]
  4063cc:	xor    ecx,eax
  4063ce:	mov    eax,DWORD PTR [rbp-0x3c]
  4063d1:	xor    ecx,eax
  4063d3:	mov    eax,DWORD PTR [rbp-0x44]
  4063d6:	xor    eax,ecx
  4063d8:	rorx   eax,eax,0x1f
  4063de:	mov    DWORD PTR [rbp-0x44],eax
  4063e1:	mov    eax,DWORD PTR [rbp-0x44]
  4063e4:	add    edx,eax
  4063e6:	mov    eax,DWORD PTR [rbp-0x64]
  4063e9:	rorx   eax,eax,0x1b
  4063ef:	add    eax,edx
  4063f1:	sub    eax,0x359d3e2a
  4063f6:	add    DWORD PTR [rbp-0x68],eax
  4063f9:	ror    DWORD PTR [rbp-0x74],0x2
  4063fd:	mov    eax,DWORD PTR [rbp-0x64]
  406400:	xor    eax,DWORD PTR [rbp-0x74]
  406403:	xor    eax,DWORD PTR [rbp-0x70]
  406406:	mov    edx,eax
  406408:	mov    ecx,DWORD PTR [rbp-0x4c]
  40640b:	mov    eax,DWORD PTR [rbp-0x60]
  40640e:	xor    ecx,eax
  406410:	mov    eax,DWORD PTR [rbp-0x38]
  406413:	xor    ecx,eax
  406415:	mov    eax,DWORD PTR [rbp-0x40]
  406418:	xor    eax,ecx
  40641a:	rorx   eax,eax,0x1f
  406420:	mov    DWORD PTR [rbp-0x40],eax
  406423:	mov    eax,DWORD PTR [rbp-0x40]
  406426:	add    edx,eax
  406428:	mov    eax,DWORD PTR [rbp-0x68]
  40642b:	rorx   eax,eax,0x1b
  406431:	add    eax,edx
  406433:	sub    eax,0x359d3e2a
  406438:	add    DWORD PTR [rbp-0x6c],eax
  40643b:	ror    DWORD PTR [rbp-0x64],0x2
  40643f:	mov    eax,DWORD PTR [rbp-0x68]
  406442:	xor    eax,DWORD PTR [rbp-0x64]
  406445:	xor    eax,DWORD PTR [rbp-0x74]
  406448:	mov    edx,eax
  40644a:	mov    ecx,DWORD PTR [rbp-0x48]
  40644d:	mov    eax,DWORD PTR [rbp-0x5c]
  406450:	xor    ecx,eax
  406452:	mov    eax,DWORD PTR [rbp-0x34]
  406455:	xor    ecx,eax
  406457:	mov    eax,DWORD PTR [rbp-0x3c]
  40645a:	xor    eax,ecx
  40645c:	rorx   eax,eax,0x1f
  406462:	mov    DWORD PTR [rbp-0x3c],eax
  406465:	mov    eax,DWORD PTR [rbp-0x3c]
  406468:	add    edx,eax
  40646a:	mov    eax,DWORD PTR [rbp-0x6c]
  40646d:	rorx   eax,eax,0x1b
  406473:	add    eax,edx
  406475:	sub    eax,0x359d3e2a
  40647a:	add    DWORD PTR [rbp-0x70],eax
  40647d:	ror    DWORD PTR [rbp-0x68],0x2
  406481:	mov    eax,DWORD PTR [rbp-0x6c]
  406484:	xor    eax,DWORD PTR [rbp-0x68]
  406487:	xor    eax,DWORD PTR [rbp-0x64]
  40648a:	mov    edx,eax
  40648c:	mov    ecx,DWORD PTR [rbp-0x44]
  40648f:	mov    eax,DWORD PTR [rbp-0x58]
  406492:	xor    ecx,eax
  406494:	mov    eax,DWORD PTR [rbp-0x30]
  406497:	xor    ecx,eax
  406499:	mov    eax,DWORD PTR [rbp-0x38]
  40649c:	xor    eax,ecx
  40649e:	rorx   eax,eax,0x1f
  4064a4:	mov    DWORD PTR [rbp-0x38],eax
  4064a7:	mov    eax,DWORD PTR [rbp-0x38]
  4064aa:	add    edx,eax
  4064ac:	mov    eax,DWORD PTR [rbp-0x70]
  4064af:	rorx   eax,eax,0x1b
  4064b5:	add    eax,edx
  4064b7:	sub    eax,0x359d3e2a
  4064bc:	add    DWORD PTR [rbp-0x74],eax
  4064bf:	ror    DWORD PTR [rbp-0x6c],0x2
  4064c3:	mov    eax,DWORD PTR [rbp-0x70]
  4064c6:	xor    eax,DWORD PTR [rbp-0x6c]
  4064c9:	xor    eax,DWORD PTR [rbp-0x68]
  4064cc:	mov    edx,eax
  4064ce:	mov    ecx,DWORD PTR [rbp-0x40]
  4064d1:	mov    eax,DWORD PTR [rbp-0x54]
  4064d4:	xor    ecx,eax
  4064d6:	mov    eax,DWORD PTR [rbp-0x2c]
  4064d9:	xor    ecx,eax
  4064db:	mov    eax,DWORD PTR [rbp-0x34]
  4064de:	xor    eax,ecx
  4064e0:	rorx   eax,eax,0x1f
  4064e6:	mov    DWORD PTR [rbp-0x34],eax
  4064e9:	mov    eax,DWORD PTR [rbp-0x34]
  4064ec:	add    edx,eax
  4064ee:	mov    eax,DWORD PTR [rbp-0x74]
  4064f1:	rorx   eax,eax,0x1b
  4064f7:	add    eax,edx
  4064f9:	sub    eax,0x359d3e2a
  4064fe:	add    DWORD PTR [rbp-0x64],eax
  406501:	ror    DWORD PTR [rbp-0x70],0x2
  406505:	mov    eax,DWORD PTR [rbp-0x74]
  406508:	xor    eax,DWORD PTR [rbp-0x70]
  40650b:	xor    eax,DWORD PTR [rbp-0x6c]
  40650e:	mov    edx,eax
  406510:	mov    ecx,DWORD PTR [rbp-0x3c]
  406513:	mov    eax,DWORD PTR [rbp-0x50]
  406516:	xor    ecx,eax
  406518:	mov    eax,DWORD PTR [rbp-0x28]
  40651b:	xor    ecx,eax
  40651d:	mov    eax,DWORD PTR [rbp-0x30]
  406520:	xor    eax,ecx
  406522:	rorx   eax,eax,0x1f
  406528:	mov    DWORD PTR [rbp-0x30],eax
  40652b:	mov    eax,DWORD PTR [rbp-0x30]
  40652e:	add    edx,eax
  406530:	mov    eax,DWORD PTR [rbp-0x64]
  406533:	rorx   eax,eax,0x1b
  406539:	add    eax,edx
  40653b:	sub    eax,0x359d3e2a
  406540:	add    DWORD PTR [rbp-0x68],eax
  406543:	ror    DWORD PTR [rbp-0x74],0x2
  406547:	mov    eax,DWORD PTR [rbp-0x64]
  40654a:	xor    eax,DWORD PTR [rbp-0x74]
  40654d:	xor    eax,DWORD PTR [rbp-0x70]
  406550:	mov    edx,eax
  406552:	mov    ecx,DWORD PTR [rbp-0x38]
  406555:	mov    eax,DWORD PTR [rbp-0x4c]
  406558:	xor    ecx,eax
  40655a:	mov    eax,DWORD PTR [rbp-0x24]
  40655d:	xor    ecx,eax
  40655f:	mov    eax,DWORD PTR [rbp-0x2c]
  406562:	xor    eax,ecx
  406564:	rorx   eax,eax,0x1f
  40656a:	mov    DWORD PTR [rbp-0x2c],eax
  40656d:	mov    eax,DWORD PTR [rbp-0x2c]
  406570:	add    edx,eax
  406572:	mov    eax,DWORD PTR [rbp-0x68]
  406575:	rorx   eax,eax,0x1b
  40657b:	add    eax,edx
  40657d:	sub    eax,0x359d3e2a
  406582:	add    DWORD PTR [rbp-0x6c],eax
  406585:	ror    DWORD PTR [rbp-0x64],0x2
  406589:	mov    eax,DWORD PTR [rbp-0x68]
  40658c:	xor    eax,DWORD PTR [rbp-0x64]
  40658f:	xor    eax,DWORD PTR [rbp-0x74]
  406592:	mov    edx,eax
  406594:	mov    ecx,DWORD PTR [rbp-0x34]
  406597:	mov    eax,DWORD PTR [rbp-0x48]
  40659a:	xor    ecx,eax
  40659c:	mov    eax,DWORD PTR [rbp-0x60]
  40659f:	xor    ecx,eax
  4065a1:	mov    eax,DWORD PTR [rbp-0x28]
  4065a4:	xor    eax,ecx
  4065a6:	rorx   eax,eax,0x1f
  4065ac:	mov    DWORD PTR [rbp-0x28],eax
  4065af:	mov    eax,DWORD PTR [rbp-0x28]
  4065b2:	add    edx,eax
  4065b4:	mov    eax,DWORD PTR [rbp-0x6c]
  4065b7:	rorx   eax,eax,0x1b
  4065bd:	add    eax,edx
  4065bf:	sub    eax,0x359d3e2a
  4065c4:	add    DWORD PTR [rbp-0x70],eax
  4065c7:	ror    DWORD PTR [rbp-0x68],0x2
  4065cb:	mov    eax,DWORD PTR [rbp-0x6c]
  4065ce:	xor    eax,DWORD PTR [rbp-0x68]
  4065d1:	xor    eax,DWORD PTR [rbp-0x64]
  4065d4:	mov    edx,eax
  4065d6:	mov    ecx,DWORD PTR [rbp-0x30]
  4065d9:	mov    eax,DWORD PTR [rbp-0x44]
  4065dc:	xor    ecx,eax
  4065de:	mov    eax,DWORD PTR [rbp-0x5c]
  4065e1:	xor    ecx,eax
  4065e3:	mov    eax,DWORD PTR [rbp-0x24]
  4065e6:	xor    eax,ecx
  4065e8:	rorx   eax,eax,0x1f
  4065ee:	mov    DWORD PTR [rbp-0x24],eax
  4065f1:	mov    eax,DWORD PTR [rbp-0x24]
  4065f4:	add    edx,eax
  4065f6:	mov    eax,DWORD PTR [rbp-0x70]
  4065f9:	rorx   eax,eax,0x1b
  4065ff:	add    eax,edx
  406601:	sub    eax,0x359d3e2a
  406606:	add    DWORD PTR [rbp-0x74],eax
  406609:	ror    DWORD PTR [rbp-0x6c],0x2
  40660d:	mov    rax,QWORD PTR [rbp-0x88]
  406614:	mov    edx,DWORD PTR [rax]
  406616:	mov    eax,DWORD PTR [rbp-0x74]
  406619:	add    edx,eax
  40661b:	mov    rax,QWORD PTR [rbp-0x88]
  406622:	mov    DWORD PTR [rax],edx
  406624:	mov    rax,QWORD PTR [rbp-0x88]
  40662b:	mov    edx,DWORD PTR [rax+0x4]
  40662e:	mov    eax,DWORD PTR [rbp-0x70]
  406631:	add    edx,eax
  406633:	mov    rax,QWORD PTR [rbp-0x88]
  40663a:	mov    DWORD PTR [rax+0x4],edx
  40663d:	mov    rax,QWORD PTR [rbp-0x88]
  406644:	mov    edx,DWORD PTR [rax+0x8]
  406647:	mov    eax,DWORD PTR [rbp-0x6c]
  40664a:	add    edx,eax
  40664c:	mov    rax,QWORD PTR [rbp-0x88]
  406653:	mov    DWORD PTR [rax+0x8],edx
  406656:	mov    rax,QWORD PTR [rbp-0x88]
  40665d:	mov    edx,DWORD PTR [rax+0xc]
  406660:	mov    eax,DWORD PTR [rbp-0x68]
  406663:	add    edx,eax
  406665:	mov    rax,QWORD PTR [rbp-0x88]
  40666c:	mov    DWORD PTR [rax+0xc],edx
  40666f:	mov    rax,QWORD PTR [rbp-0x88]
  406676:	mov    edx,DWORD PTR [rax+0x10]
  406679:	mov    eax,DWORD PTR [rbp-0x64]
  40667c:	add    edx,eax
  40667e:	mov    rax,QWORD PTR [rbp-0x88]
  406685:	mov    DWORD PTR [rax+0x10],edx
  406688:	mov    DWORD PTR [rbp-0x64],0x0
  40668f:	mov    eax,DWORD PTR [rbp-0x64]
  406692:	mov    DWORD PTR [rbp-0x68],eax
  406695:	mov    eax,DWORD PTR [rbp-0x68]
  406698:	mov    DWORD PTR [rbp-0x6c],eax
  40669b:	mov    eax,DWORD PTR [rbp-0x6c]
  40669e:	mov    DWORD PTR [rbp-0x70],eax
  4066a1:	mov    eax,DWORD PTR [rbp-0x70]
  4066a4:	mov    DWORD PTR [rbp-0x74],eax
  4066a7:	mov    eax,DWORD PTR [rbp-0x74]
  4066aa:	mov    rsi,QWORD PTR [rbp-0x18]
  4066ae:	xor    rsi,QWORD PTR fs:0x28
  4066b7:	je     4066be <rb_base64_encode@plt+0x3fde>
  4066b9:	call   4025d0 <__stack_chk_fail@plt>
  4066be:	add    rsp,0x88
  4066c5:	pop    rbx
  4066c6:	pop    rbp
  4066c7:	ret    
  4066c8:	endbr64 
  4066cc:	push   rbp
  4066cd:	mov    rbp,rsp
  4066d0:	mov    QWORD PTR [rbp-0x8],rdi
  4066d4:	mov    rax,QWORD PTR [rbp-0x8]
  4066d8:	mov    DWORD PTR [rax],0x67452301
  4066de:	mov    rax,QWORD PTR [rbp-0x8]
  4066e2:	mov    DWORD PTR [rax+0x4],0xefcdab89
  4066e9:	mov    rax,QWORD PTR [rbp-0x8]
  4066ed:	mov    DWORD PTR [rax+0x8],0x98badcfe
  4066f4:	mov    rax,QWORD PTR [rbp-0x8]
  4066f8:	mov    DWORD PTR [rax+0xc],0x10325476
  4066ff:	mov    rax,QWORD PTR [rbp-0x8]
  406703:	mov    DWORD PTR [rax+0x10],0xc3d2e1f0
  40670a:	mov    rax,QWORD PTR [rbp-0x8]
  40670e:	mov    QWORD PTR [rax+0x18],0x0
  406716:	nop
  406717:	pop    rbp
  406718:	ret    
  406719:	endbr64 
  40671d:	push   rbp
  40671e:	mov    rbp,rsp
  406721:	sub    rsp,0x30
  406725:	mov    QWORD PTR [rbp-0x18],rdi
  406729:	mov    QWORD PTR [rbp-0x20],rsi
  40672d:	mov    QWORD PTR [rbp-0x28],rdx
  406731:	mov    rax,QWORD PTR [rbp-0x18]
  406735:	mov    rax,QWORD PTR [rax+0x18]
  406739:	shr    rax,0x3
  40673d:	and    eax,0x3f
  406740:	mov    QWORD PTR [rbp-0x8],rax
  406744:	mov    rax,QWORD PTR [rbp-0x18]
  406748:	mov    rax,QWORD PTR [rax+0x18]
  40674c:	mov    rdx,QWORD PTR [rbp-0x28]
  406750:	shl    rdx,0x3
  406754:	add    rdx,rax
  406757:	mov    rax,QWORD PTR [rbp-0x18]
  40675b:	mov    QWORD PTR [rax+0x18],rdx
  40675f:	mov    rdx,QWORD PTR [rbp-0x8]
  406763:	mov    rax,QWORD PTR [rbp-0x28]
  406767:	add    rax,rdx
  40676a:	cmp    rax,0x3f
  40676e:	jbe    4067f4 <rb_base64_encode@plt+0x4114>
  406774:	mov    eax,0x40
  406779:	sub    rax,QWORD PTR [rbp-0x8]
  40677d:	mov    QWORD PTR [rbp-0x10],rax
  406781:	mov    rax,QWORD PTR [rbp-0x8]
  406785:	lea    rdx,[rax+0x20]
  406789:	mov    rax,QWORD PTR [rbp-0x18]
  40678d:	lea    rcx,[rdx+rax*1]
  406791:	mov    rdx,QWORD PTR [rbp-0x10]
  406795:	mov    rax,QWORD PTR [rbp-0x20]
  406799:	mov    rsi,rax
  40679c:	mov    rdi,rcx
  40679f:	call   4026c0 <memcpy@plt>
  4067a4:	mov    rax,QWORD PTR [rbp-0x18]
  4067a8:	lea    rdx,[rax+0x20]
  4067ac:	mov    rax,QWORD PTR [rbp-0x18]
  4067b0:	mov    rsi,rdx
  4067b3:	mov    rdi,rax
  4067b6:	call   405072 <rb_base64_encode@plt+0x2992>
  4067bb:	jmp    4067dc <rb_base64_encode@plt+0x40fc>
  4067bd:	mov    rdx,QWORD PTR [rbp-0x20]
  4067c1:	mov    rax,QWORD PTR [rbp-0x10]
  4067c5:	add    rdx,rax
  4067c8:	mov    rax,QWORD PTR [rbp-0x18]
  4067cc:	mov    rsi,rdx
  4067cf:	mov    rdi,rax
  4067d2:	call   405072 <rb_base64_encode@plt+0x2992>
  4067d7:	add    QWORD PTR [rbp-0x10],0x40
  4067dc:	mov    rax,QWORD PTR [rbp-0x10]
  4067e0:	add    rax,0x3f
  4067e4:	cmp    QWORD PTR [rbp-0x28],rax
  4067e8:	ja     4067bd <rb_base64_encode@plt+0x40dd>
  4067ea:	mov    QWORD PTR [rbp-0x8],0x0
  4067f2:	jmp    4067fc <rb_base64_encode@plt+0x411c>
  4067f4:	mov    QWORD PTR [rbp-0x10],0x0
  4067fc:	mov    rax,QWORD PTR [rbp-0x28]
  406800:	sub    rax,QWORD PTR [rbp-0x10]
  406804:	mov    rcx,QWORD PTR [rbp-0x20]
  406808:	mov    rdx,QWORD PTR [rbp-0x10]
  40680c:	lea    rsi,[rcx+rdx*1]
  406810:	mov    rdx,QWORD PTR [rbp-0x8]
  406814:	lea    rcx,[rdx+0x20]
  406818:	mov    rdx,QWORD PTR [rbp-0x18]
  40681c:	add    rcx,rdx
  40681f:	mov    rdx,rax
  406822:	mov    rdi,rcx
  406825:	call   4026c0 <memcpy@plt>
  40682a:	nop
  40682b:	leave  
  40682c:	ret    
  40682d:	endbr64 
  406831:	push   rbp
  406832:	mov    rbp,rsp
  406835:	sub    rsp,0x30
  406839:	mov    QWORD PTR [rbp-0x28],rdi
  40683d:	mov    QWORD PTR [rbp-0x30],rsi
  406841:	mov    rax,QWORD PTR fs:0x28
  40684a:	mov    QWORD PTR [rbp-0x8],rax
  40684e:	xor    eax,eax
  406850:	mov    DWORD PTR [rbp-0x14],0x0
  406857:	jmp    40687d <rb_base64_encode@plt+0x419d>
  406859:	mov    rax,QWORD PTR [rbp-0x28]
  40685d:	mov    rdx,QWORD PTR [rax+0x18]
  406861:	mov    eax,DWORD PTR [rbp-0x14]
  406864:	not    eax
  406866:	and    eax,0x7
  406869:	shl    eax,0x3
  40686c:	shrx   rax,rdx,rax
  406871:	mov    edx,eax
  406873:	mov    eax,DWORD PTR [rbp-0x14]
  406876:	mov    BYTE PTR [rbp+rax*1-0x10],dl
  40687a:	inc    DWORD PTR [rbp-0x14]
  40687d:	cmp    DWORD PTR [rbp-0x14],0x7
  406881:	jbe    406859 <rb_base64_encode@plt+0x4179>
  406883:	mov    rax,QWORD PTR [rbp-0x28]
  406887:	mov    edx,0x1
  40688c:	lea    rsi,[rip+0xa5d]        # 4072f0 <rb_base64_encode@plt+0x4c10>
  406893:	mov    rdi,rax
  406896:	call   406719 <rb_base64_encode@plt+0x4039>
  40689b:	jmp    4068b5 <rb_base64_encode@plt+0x41d5>
  40689d:	mov    rax,QWORD PTR [rbp-0x28]
  4068a1:	mov    edx,0x1
  4068a6:	lea    rsi,[rip+0xa45]        # 4072f2 <rb_base64_encode@plt+0x4c12>
  4068ad:	mov    rdi,rax
  4068b0:	call   406719 <rb_base64_encode@plt+0x4039>
  4068b5:	mov    rax,QWORD PTR [rbp-0x28]
  4068b9:	mov    rax,QWORD PTR [rax+0x18]
  4068bd:	and    eax,0x1f8
  4068c2:	cmp    rax,0x1c0
  4068c8:	jne    40689d <rb_base64_encode@plt+0x41bd>
  4068ca:	lea    rcx,[rbp-0x10]
  4068ce:	mov    rax,QWORD PTR [rbp-0x28]
  4068d2:	mov    edx,0x8
  4068d7:	mov    rsi,rcx
  4068da:	mov    rdi,rax
  4068dd:	call   406719 <rb_base64_encode@plt+0x4039>
  4068e2:	mov    DWORD PTR [rbp-0x14],0x0
  4068e9:	jmp    40691d <rb_base64_encode@plt+0x423d>
  4068eb:	mov    eax,DWORD PTR [rbp-0x14]
  4068ee:	shr    eax,0x2
  4068f1:	mov    edx,eax
  4068f3:	mov    rax,QWORD PTR [rbp-0x28]
  4068f7:	mov    edx,edx
  4068f9:	mov    edx,DWORD PTR [rax+rdx*4]
  4068fc:	mov    eax,DWORD PTR [rbp-0x14]
  4068ff:	not    eax
  406901:	and    eax,0x3
  406904:	shl    eax,0x3
  406907:	shrx   ecx,edx,eax
  40690c:	mov    edx,DWORD PTR [rbp-0x14]
  40690f:	mov    rax,QWORD PTR [rbp-0x30]
  406913:	add    rdx,rax
  406916:	mov    eax,ecx
  406918:	mov    BYTE PTR [rdx],al
  40691a:	inc    DWORD PTR [rbp-0x14]
  40691d:	cmp    DWORD PTR [rbp-0x14],0x13
  406921:	jbe    4068eb <rb_base64_encode@plt+0x420b>
  406923:	mov    rax,QWORD PTR [rbp-0x28]
  406927:	mov    edx,0x60
  40692c:	mov    esi,0x0
  406931:	mov    rdi,rax
  406934:	call   4023b0 <memset@plt>
  406939:	nop
  40693a:	mov    rax,QWORD PTR [rbp-0x8]
  40693e:	xor    rax,QWORD PTR fs:0x28
  406947:	je     40694e <rb_base64_encode@plt+0x426e>
  406949:	call   4025d0 <__stack_chk_fail@plt>
  40694e:	leave  
  40694f:	ret    
  406950:	endbr64 
  406954:	push   r15
  406956:	lea    r15,[rip+0x248b]        # 408de8 <rb_base64_encode@plt+0x6708>
  40695d:	push   r14
  40695f:	mov    r14,rdx
  406962:	push   r13
  406964:	mov    r13,rsi
  406967:	push   r12
  406969:	mov    r12d,edi
  40696c:	push   rbp
  40696d:	lea    rbp,[rip+0x247c]        # 408df0 <rb_base64_encode@plt+0x6710>
  406974:	push   rbx
  406975:	sub    rbp,r15
  406978:	sub    rsp,0x8
  40697c:	call   402000 <dup2@plt-0x390>
  406981:	sar    rbp,0x3
  406985:	je     4069a6 <rb_base64_encode@plt+0x42c6>
  406987:	xor    ebx,ebx
  406989:	nop    DWORD PTR [rax+0x0]
  406990:	mov    rdx,r14
  406993:	mov    rsi,r13
  406996:	mov    edi,r12d
  406999:	call   QWORD PTR [r15+rbx*8]
  40699d:	add    rbx,0x1
  4069a1:	cmp    rbp,rbx
  4069a4:	jne    406990 <rb_base64_encode@plt+0x42b0>
  4069a6:	add    rsp,0x8
  4069aa:	pop    rbx
  4069ab:	pop    rbp
  4069ac:	pop    r12
  4069ae:	pop    r13
  4069b0:	pop    r14
  4069b2:	pop    r15
  4069b4:	ret    
  4069b5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4069c0:	endbr64 
  4069c4:	ret    

Disassembly of section .fini:

00000000004069c8 <.fini>:
  4069c8:	endbr64 
  4069cc:	sub    rsp,0x8
  4069d0:	add    rsp,0x8
  4069d4:	ret    
