
../repos/eddieantonio-ocreval-3ab279a/vote/vote:     file format elf64-x86-64


Disassembly of section .init:

0000000000401000 <.init>:
  401000:	endbr64 
  401004:	sub    rsp,0x8
  401008:	mov    rax,QWORD PTR [rip+0x6fd9]        # 407fe8 <__gmon_start__>
  40100f:	test   rax,rax
  401012:	je     401016 <__strcat_chk@plt-0x1ea>
  401014:	call   rax
  401016:	add    rsp,0x8
  40101a:	ret    

Disassembly of section .plt:

0000000000401020 <.plt>:
  401020:	push   QWORD PTR [rip+0x6fe2]        # 408008 <error@@Base+0x42f8>
  401026:	bnd jmp QWORD PTR [rip+0x6fe3]        # 408010 <error@@Base+0x4300>
  40102d:	nop    DWORD PTR [rax]
  401030:	endbr64 
  401034:	push   0x0
  401039:	bnd jmp 401020 <__strcat_chk@plt-0x1e0>
  40103f:	nop
  401040:	endbr64 
  401044:	push   0x1
  401049:	bnd jmp 401020 <__strcat_chk@plt-0x1e0>
  40104f:	nop
  401050:	endbr64 
  401054:	push   0x2
  401059:	bnd jmp 401020 <__strcat_chk@plt-0x1e0>
  40105f:	nop
  401060:	endbr64 
  401064:	push   0x3
  401069:	bnd jmp 401020 <__strcat_chk@plt-0x1e0>
  40106f:	nop
  401070:	endbr64 
  401074:	push   0x4
  401079:	bnd jmp 401020 <__strcat_chk@plt-0x1e0>
  40107f:	nop
  401080:	endbr64 
  401084:	push   0x5
  401089:	bnd jmp 401020 <__strcat_chk@plt-0x1e0>
  40108f:	nop
  401090:	endbr64 
  401094:	push   0x6
  401099:	bnd jmp 401020 <__strcat_chk@plt-0x1e0>
  40109f:	nop
  4010a0:	endbr64 
  4010a4:	push   0x7
  4010a9:	bnd jmp 401020 <__strcat_chk@plt-0x1e0>
  4010af:	nop
  4010b0:	endbr64 
  4010b4:	push   0x8
  4010b9:	bnd jmp 401020 <__strcat_chk@plt-0x1e0>
  4010bf:	nop
  4010c0:	endbr64 
  4010c4:	push   0x9
  4010c9:	bnd jmp 401020 <__strcat_chk@plt-0x1e0>
  4010cf:	nop
  4010d0:	endbr64 
  4010d4:	push   0xa
  4010d9:	bnd jmp 401020 <__strcat_chk@plt-0x1e0>
  4010df:	nop
  4010e0:	endbr64 
  4010e4:	push   0xb
  4010e9:	bnd jmp 401020 <__strcat_chk@plt-0x1e0>
  4010ef:	nop
  4010f0:	endbr64 
  4010f4:	push   0xc
  4010f9:	bnd jmp 401020 <__strcat_chk@plt-0x1e0>
  4010ff:	nop
  401100:	endbr64 
  401104:	push   0xd
  401109:	bnd jmp 401020 <__strcat_chk@plt-0x1e0>
  40110f:	nop
  401110:	endbr64 
  401114:	push   0xe
  401119:	bnd jmp 401020 <__strcat_chk@plt-0x1e0>
  40111f:	nop
  401120:	endbr64 
  401124:	push   0xf
  401129:	bnd jmp 401020 <__strcat_chk@plt-0x1e0>
  40112f:	nop
  401130:	endbr64 
  401134:	push   0x10
  401139:	bnd jmp 401020 <__strcat_chk@plt-0x1e0>
  40113f:	nop
  401140:	endbr64 
  401144:	push   0x11
  401149:	bnd jmp 401020 <__strcat_chk@plt-0x1e0>
  40114f:	nop
  401150:	endbr64 
  401154:	push   0x12
  401159:	bnd jmp 401020 <__strcat_chk@plt-0x1e0>
  40115f:	nop
  401160:	endbr64 
  401164:	push   0x13
  401169:	bnd jmp 401020 <__strcat_chk@plt-0x1e0>
  40116f:	nop
  401170:	endbr64 
  401174:	push   0x14
  401179:	bnd jmp 401020 <__strcat_chk@plt-0x1e0>
  40117f:	nop
  401180:	endbr64 
  401184:	push   0x15
  401189:	bnd jmp 401020 <__strcat_chk@plt-0x1e0>
  40118f:	nop
  401190:	endbr64 
  401194:	push   0x16
  401199:	bnd jmp 401020 <__strcat_chk@plt-0x1e0>
  40119f:	nop
  4011a0:	endbr64 
  4011a4:	push   0x17
  4011a9:	bnd jmp 401020 <__strcat_chk@plt-0x1e0>
  4011af:	nop
  4011b0:	endbr64 
  4011b4:	push   0x18
  4011b9:	bnd jmp 401020 <__strcat_chk@plt-0x1e0>
  4011bf:	nop
  4011c0:	endbr64 
  4011c4:	push   0x19
  4011c9:	bnd jmp 401020 <__strcat_chk@plt-0x1e0>
  4011cf:	nop
  4011d0:	endbr64 
  4011d4:	push   0x1a
  4011d9:	bnd jmp 401020 <__strcat_chk@plt-0x1e0>
  4011df:	nop
  4011e0:	endbr64 
  4011e4:	push   0x1b
  4011e9:	bnd jmp 401020 <__strcat_chk@plt-0x1e0>
  4011ef:	nop
  4011f0:	endbr64 
  4011f4:	push   0x1c
  4011f9:	bnd jmp 401020 <__strcat_chk@plt-0x1e0>
  4011ff:	nop

Disassembly of section .plt.sec:

0000000000401200 <__strcat_chk@plt>:
  401200:	endbr64 
  401204:	bnd jmp QWORD PTR [rip+0x6e0d]        # 408018 <__strcat_chk@GLIBC_2.3.4>
  40120b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401210 <free@plt>:
  401210:	endbr64 
  401214:	bnd jmp QWORD PTR [rip+0x6e05]        # 408020 <free@GLIBC_2.2.5>
  40121b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401220 <unlink@plt>:
  401220:	endbr64 
  401224:	bnd jmp QWORD PTR [rip+0x6dfd]        # 408028 <unlink@GLIBC_2.2.5>
  40122b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401230 <utf8proc_get_property@plt>:
  401230:	endbr64 
  401234:	bnd jmp QWORD PTR [rip+0x6df5]        # 408030 <utf8proc_get_property>
  40123b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401240 <utf8proc_encode_char@plt>:
  401240:	endbr64 
  401244:	bnd jmp QWORD PTR [rip+0x6ded]        # 408038 <utf8proc_encode_char>
  40124b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401250 <getpid@plt>:
  401250:	endbr64 
  401254:	bnd jmp QWORD PTR [rip+0x6de5]        # 408040 <getpid@GLIBC_2.2.5>
  40125b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401260 <fclose@plt>:
  401260:	endbr64 
  401264:	bnd jmp QWORD PTR [rip+0x6ddd]        # 408048 <fclose@GLIBC_2.2.5>
  40126b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401270 <strlen@plt>:
  401270:	endbr64 
  401274:	bnd jmp QWORD PTR [rip+0x6dd5]        # 408050 <strlen@GLIBC_2.2.5>
  40127b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401280 <__stack_chk_fail@plt>:
  401280:	endbr64 
  401284:	bnd jmp QWORD PTR [rip+0x6dcd]        # 408058 <__stack_chk_fail@GLIBC_2.4>
  40128b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401290 <rewind@plt>:
  401290:	endbr64 
  401294:	bnd jmp QWORD PTR [rip+0x6dc5]        # 408060 <rewind@GLIBC_2.2.5>
  40129b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004012a0 <utf8proc_tolower@plt>:
  4012a0:	endbr64 
  4012a4:	bnd jmp QWORD PTR [rip+0x6dbd]        # 408068 <utf8proc_tolower>
  4012ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004012b0 <fputs@plt>:
  4012b0:	endbr64 
  4012b4:	bnd jmp QWORD PTR [rip+0x6db5]        # 408070 <fputs@GLIBC_2.2.5>
  4012bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004012c0 <fgets@plt>:
  4012c0:	endbr64 
  4012c4:	bnd jmp QWORD PTR [rip+0x6dad]        # 408078 <fgets@GLIBC_2.2.5>
  4012cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004012d0 <utf8proc_iterate@plt>:
  4012d0:	endbr64 
  4012d4:	bnd jmp QWORD PTR [rip+0x6da5]        # 408080 <utf8proc_iterate>
  4012db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004012e0 <calloc@plt>:
  4012e0:	endbr64 
  4012e4:	bnd jmp QWORD PTR [rip+0x6d9d]        # 408088 <calloc@GLIBC_2.2.5>
  4012eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004012f0 <strcmp@plt>:
  4012f0:	endbr64 
  4012f4:	bnd jmp QWORD PTR [rip+0x6d95]        # 408090 <strcmp@GLIBC_2.2.5>
  4012fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401300 <__sysv_signal@plt>:
  401300:	endbr64 
  401304:	bnd jmp QWORD PTR [rip+0x6d8d]        # 408098 <__sysv_signal@GLIBC_2.2.5>
  40130b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401310 <utf8proc_category@plt>:
  401310:	endbr64 
  401314:	bnd jmp QWORD PTR [rip+0x6d85]        # 4080a0 <utf8proc_category>
  40131b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401320 <__xstat@plt>:
  401320:	endbr64 
  401324:	bnd jmp QWORD PTR [rip+0x6d7d]        # 4080a8 <__xstat@GLIBC_2.2.5>
  40132b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401330 <__printf_chk@plt>:
  401330:	endbr64 
  401334:	bnd jmp QWORD PTR [rip+0x6d75]        # 4080b0 <__printf_chk@GLIBC_2.3.4>
  40133b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401340 <__fread_chk@plt>:
  401340:	endbr64 
  401344:	bnd jmp QWORD PTR [rip+0x6d6d]        # 4080b8 <__fread_chk@GLIBC_2.7>
  40134b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401350 <fopen@plt>:
  401350:	endbr64 
  401354:	bnd jmp QWORD PTR [rip+0x6d65]        # 4080c0 <fopen@GLIBC_2.2.5>
  40135b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401360 <exit@plt>:
  401360:	endbr64 
  401364:	bnd jmp QWORD PTR [rip+0x6d5d]        # 4080c8 <exit@GLIBC_2.2.5>
  40136b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401370 <fwrite@plt>:
  401370:	endbr64 
  401374:	bnd jmp QWORD PTR [rip+0x6d55]        # 4080d0 <fwrite@GLIBC_2.2.5>
  40137b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401380 <__fprintf_chk@plt>:
  401380:	endbr64 
  401384:	bnd jmp QWORD PTR [rip+0x6d4d]        # 4080d8 <__fprintf_chk@GLIBC_2.3.4>
  40138b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401390 <utf8proc_errmsg@plt>:
  401390:	endbr64 
  401394:	bnd jmp QWORD PTR [rip+0x6d45]        # 4080e0 <utf8proc_errmsg>
  40139b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004013a0 <strdup@plt>:
  4013a0:	endbr64 
  4013a4:	bnd jmp QWORD PTR [rip+0x6d3d]        # 4080e8 <strdup@GLIBC_2.2.5>
  4013ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004013b0 <getc@plt>:
  4013b0:	endbr64 
  4013b4:	bnd jmp QWORD PTR [rip+0x6d35]        # 4080f0 <getc@GLIBC_2.2.5>
  4013bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004013c0 <__sprintf_chk@plt>:
  4013c0:	endbr64 
  4013c4:	bnd jmp QWORD PTR [rip+0x6d2d]        # 4080f8 <__sprintf_chk@GLIBC_2.3.4>
  4013cb:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

00000000004013d0 <error@@Base-0x2940>:
  4013d0:	endbr64 
  4013d4:	push   rbx
  4013d5:	lea    rdx,[rip+0x3c74]        # 405050 <error@@Base+0x1340>
  4013dc:	mov    rbx,rsi
  4013df:	sub    rsp,0x40
  4013e3:	mov    DWORD PTR [rsp+0xc],edi
  4013e7:	mov    rcx,0x408140
  4013ee:	lea    rdi,[rsp+0xc]
  4013f3:	mov    rax,QWORD PTR fs:0x28
  4013fc:	mov    QWORD PTR [rsp+0x38],rax
  401401:	xor    eax,eax
  401403:	call   403e90 <error@@Base+0x180>
  401408:	mov    edi,DWORD PTR [rsp+0xc]
  40140c:	mov    rsi,rbx
  40140f:	xor    eax,eax
  401411:	call   4015f0 <__sprintf_chk@plt+0x230>
  401416:	xor    eax,eax
  401418:	call   401b00 <__sprintf_chk@plt+0x740>
  40141d:	mov    rax,0x408114
  401424:	mov    rdx,0x4083c0
  40142b:	movsx  esi,WORD PTR [rax]
  40142e:	lea    rbx,[rsp+0x10]
  401433:	mov    rdi,rbx
  401436:	xor    eax,eax
  401438:	call   4029e0 <__sprintf_chk@plt+0x1620>
  40143d:	mov    rdi,rbx
  401440:	xor    eax,eax
  401442:	call   401ec0 <__sprintf_chk@plt+0xb00>
  401447:	mov    rax,0x4085c0
  40144e:	mov    rdi,0x4085e0
  401455:	mov    rsi,QWORD PTR [rax]
  401458:	xor    edx,edx
  40145a:	xor    eax,eax
  40145c:	call   4038a0 <__sprintf_chk@plt+0x24e0>
  401461:	xor    eax,eax
  401463:	call   403ca0 <__sprintf_chk@plt+0x28e0>
  401468:	nop    DWORD PTR [rax+rax*1+0x0]
  401470:	endbr64 
  401474:	xor    ebp,ebp
  401476:	mov    r9,rdx
  401479:	pop    rsi
  40147a:	mov    rdx,rsp
  40147d:	and    rsp,0xfffffffffffffff0
  401481:	push   rax
  401482:	push   rsp
  401483:	mov    r8,0x404450
  40148a:	mov    rcx,0x4043e0
  401491:	mov    rdi,0x4013d0
  401498:	call   QWORD PTR [rip+0x6b42]        # 407fe0 <error@@Base+0x42d0>
  40149e:	hlt    
  40149f:	nop
  4014a0:	endbr64 
  4014a4:	ret    
  4014a5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4014af:	nop
  4014b0:	mov    eax,0x4081d8
  4014b5:	cmp    rax,0x4081d8
  4014bb:	je     4014d0 <__sprintf_chk@plt+0x110>
  4014bd:	mov    eax,0x0
  4014c2:	test   rax,rax
  4014c5:	je     4014d0 <__sprintf_chk@plt+0x110>
  4014c7:	mov    edi,0x4081d8
  4014cc:	jmp    rax
  4014ce:	xchg   ax,ax
  4014d0:	ret    
  4014d1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4014dc:	nop    DWORD PTR [rax+0x0]
  4014e0:	mov    esi,0x4081d8
  4014e5:	sub    rsi,0x4081d8
  4014ec:	sar    rsi,0x3
  4014f0:	mov    rax,rsi
  4014f3:	shr    rax,0x3f
  4014f7:	add    rsi,rax
  4014fa:	sar    rsi,1
  4014fd:	je     401510 <__sprintf_chk@plt+0x150>
  4014ff:	mov    eax,0x0
  401504:	test   rax,rax
  401507:	je     401510 <__sprintf_chk@plt+0x150>
  401509:	mov    edi,0x4081d8
  40150e:	jmp    rax
  401510:	ret    
  401511:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40151c:	nop    DWORD PTR [rax+0x0]
  401520:	endbr64 
  401524:	cmp    BYTE PTR [rip+0x6cb5],0x0        # 4081e0 <error@@Base+0x44d0>
  40152b:	jne    401540 <__sprintf_chk@plt+0x180>
  40152d:	push   rbp
  40152e:	mov    rbp,rsp
  401531:	call   4014b0 <__sprintf_chk@plt+0xf0>
  401536:	mov    BYTE PTR [rip+0x6ca3],0x1        # 4081e0 <error@@Base+0x44d0>
  40153d:	pop    rbp
  40153e:	ret    
  40153f:	nop
  401540:	ret    
  401541:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40154c:	nop    DWORD PTR [rax+0x0]
  401550:	endbr64 
  401554:	jmp    4014e0 <__sprintf_chk@plt+0x120>
  401556:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401560:	endbr64 
  401564:	mov    rax,QWORD PTR [rdi]
  401567:	sub    eax,DWORD PTR [rsi]
  401569:	ret    
  40156a:	nop    WORD PTR [rax+rax*1+0x0]
  401570:	endbr64 
  401574:	vmovsd xmm0,QWORD PTR [rdi+0x30]
  401579:	vmovsd xmm1,QWORD PTR [rsi+0x30]
  40157e:	vucomisd xmm0,xmm1
  401582:	jp     401590 <__sprintf_chk@plt+0x1d0>
  401584:	jne    401590 <__sprintf_chk@plt+0x1d0>
  401586:	movsx  eax,WORD PTR [rdi]
  401589:	movsx  edx,WORD PTR [rsi]
  40158c:	sub    eax,edx
  40158e:	ret    
  40158f:	nop
  401590:	xor    eax,eax
  401592:	vucomisd xmm1,xmm0
  401596:	setbe  al
  401599:	lea    eax,[rax+rax*1-0x1]
  40159d:	ret    
  40159e:	xchg   ax,ax
  4015a0:	endbr64 
  4015a4:	movsx  cx,BYTE PTR [rdi]
  4015a8:	xor    eax,eax
  4015aa:	cmp    cl,0x30
  4015ad:	jle    4015ea <__sprintf_chk@plt+0x22a>
  4015af:	cmp    BYTE PTR [rdi+0x1],0x2f
  4015b3:	jne    4015ea <__sprintf_chk@plt+0x22a>
  4015b5:	movzx  r8d,BYTE PTR [rdi+0x2]
  4015ba:	cmp    cl,r8b
  4015bd:	jg     4015e8 <__sprintf_chk@plt+0x228>
  4015bf:	cmp    r8b,0x39
  4015c3:	jg     4015e8 <__sprintf_chk@plt+0x228>
  4015c5:	cmp    BYTE PTR [rdi+0x3],0x0
  4015c9:	jne    4015ea <__sprintf_chk@plt+0x22a>
  4015cb:	sub    ecx,0x30
  4015ce:	mov    WORD PTR [rsi],cx
  4015d1:	movsx  ax,BYTE PTR [rdi+0x2]
  4015d6:	sub    eax,0x30
  4015d9:	mov    WORD PTR [rdx],ax
  4015dc:	mov    eax,0x1
  4015e1:	ret    
  4015e2:	nop    WORD PTR [rax+rax*1+0x0]
  4015e8:	xor    eax,eax
  4015ea:	ret    
  4015eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4015f0:	endbr64 
  4015f4:	push   r15
  4015f6:	push   r14
  4015f8:	push   r13
  4015fa:	push   r12
  4015fc:	push   rbp
  4015fd:	push   rbx
  4015fe:	sub    rsp,0x18
  401602:	mov    rax,QWORD PTR fs:0x28
  40160b:	mov    QWORD PTR [rsp+0x8],rax
  401610:	xor    eax,eax
  401612:	lea    eax,[rdi-0x2]
  401615:	cmp    eax,0xe
  401618:	ja     40174e <__sprintf_chk@plt+0x38e>
  40161e:	mov    r13,0x408340
  401625:	mov    r12,0x408118
  40162c:	mov    ebp,edi
  40162e:	mov    r15,rsi
  401631:	xor    ebx,ebx
  401633:	xor    r14d,r14d
  401636:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401640:	mov    esi,0x38
  401645:	mov    edi,0x1
  40164a:	xor    eax,eax
  40164c:	call   403d60 <error@@Base+0x50>
  401651:	mov    rdx,QWORD PTR [r15]
  401654:	mov    QWORD PTR [r13+r14*8+0x0],rax
  401659:	mov    QWORD PTR [rax+0x8],rdx
  40165d:	mov    WORD PTR [rax],bx
  401660:	inc    ebx
  401662:	mov    rsi,QWORD PTR [r15]
  401665:	lea    rdi,[rax+0x10]
  401669:	mov    rdx,r12
  40166c:	xor    eax,eax
  40166e:	movzx  r14d,bx
  401672:	call   4032f0 <__sprintf_chk@plt+0x1f30>
  401677:	add    r15,0x8
  40167b:	cmp    ebp,r14d
  40167e:	jg     401640 <__sprintf_chk@plt+0x280>
  401680:	mov    rax,0x4085c8
  401687:	mov    rbx,0x408114
  40168e:	mov    WORD PTR [rax],bp
  401691:	mov    rax,0x408601
  401698:	cmp    BYTE PTR [rax],0x0
  40169b:	jne    401740 <__sprintf_chk@plt+0x380>
  4016a1:	mov    WORD PTR [rbx],bp
  4016a4:	mov    rbp,0x408728
  4016ab:	mov    rdi,QWORD PTR [rbp+0x0]
  4016af:	test   rdi,rdi
  4016b2:	je     4016d1 <__sprintf_chk@plt+0x311>
  4016b4:	mov    rdx,0x408110
  4016bb:	mov    rsi,0x408112
  4016c2:	xor    eax,eax
  4016c4:	call   4015a0 <__sprintf_chk@plt+0x1e0>
  4016c9:	test   al,al
  4016cb:	je     401773 <__sprintf_chk@plt+0x3b3>
  4016d1:	mov    rbp,0x408608
  4016d8:	mov    rdi,QWORD PTR [rbp+0x0]
  4016dc:	test   rdi,rdi
  4016df:	je     401720 <__sprintf_chk@plt+0x360>
  4016e1:	xor    eax,eax
  4016e3:	lea    rdx,[rsp+0x6]
  4016e8:	lea    rsi,[rsp+0x4]
  4016ed:	call   4015a0 <__sprintf_chk@plt+0x1e0>
  4016f2:	test   al,al
  4016f4:	je     401761 <__sprintf_chk@plt+0x3a1>
  4016f6:	mov    rdx,0x408110
  4016fd:	movsx  eax,WORD PTR [rbx]
  401700:	movsx  edx,WORD PTR [rdx]
  401703:	movsx  ecx,WORD PTR [rsp+0x6]
  401708:	imul   eax,edx
  40170b:	movsx  edx,WORD PTR [rsp+0x4]
  401710:	imul   eax,edx
  401713:	cdq    
  401714:	idiv   ecx
  401716:	mov    rdx,0x40c630
  40171d:	mov    WORD PTR [rdx],ax
  401720:	mov    rax,QWORD PTR [rsp+0x8]
  401725:	xor    rax,QWORD PTR fs:0x28
  40172e:	jne    40175c <__sprintf_chk@plt+0x39c>
  401730:	add    rsp,0x18
  401734:	pop    rbx
  401735:	pop    rbp
  401736:	pop    r12
  401738:	pop    r13
  40173a:	pop    r14
  40173c:	pop    r15
  40173e:	ret    
  40173f:	nop
  401740:	cmp    bp,WORD PTR [rbx]
  401743:	jge    4016a4 <__sprintf_chk@plt+0x2e4>
  401749:	jmp    4016a1 <__sprintf_chk@plt+0x2e1>
  40174e:	lea    rdi,[rip+0x38af]        # 405004 <error@@Base+0x12f4>
  401755:	xor    eax,eax
  401757:	call   403d10 <error@@Base>
  40175c:	call   401280 <__stack_chk_fail@plt>
  401761:	mov    rsi,QWORD PTR [rbp+0x0]
  401765:	lea    rdi,[rip+0x38c0]        # 40502c <error@@Base+0x131c>
  40176c:	xor    eax,eax
  40176e:	call   403dc0 <error@@Base+0xb0>
  401773:	mov    rsi,QWORD PTR [rbp+0x0]
  401777:	lea    rdi,[rip+0x389f]        # 40501d <error@@Base+0x130d>
  40177e:	call   403dc0 <error@@Base+0xb0>
  401783:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40178e:	xchg   ax,ax
  401790:	endbr64 
  401794:	push   r13
  401796:	mov    r13d,esi
  401799:	mov    rsi,rdi
  40179c:	push   r12
  40179e:	mov    r12,rdi
  4017a1:	xor    eax,eax
  4017a3:	push   rbp
  4017a4:	push   rbx
  4017a5:	mov    ebx,edx
  4017a7:	sub    rsp,0x8
  4017ab:	mov    rdi,0x408740
  4017b2:	call   403040 <__sprintf_chk@plt+0x1c80>
  4017b7:	mov    rbp,rax
  4017ba:	test   rax,rax
  4017bd:	je     4017d8 <__sprintf_chk@plt+0x418>
  4017bf:	movsx  rdx,bx
  4017c3:	inc    QWORD PTR [rbp+rdx*8+0x18]
  4017c8:	add    rsp,0x8
  4017cc:	pop    rbx
  4017cd:	pop    rbp
  4017ce:	pop    r12
  4017d0:	pop    r13
  4017d2:	ret    
  4017d3:	nop    DWORD PTR [rax+rax*1+0x0]
  4017d8:	mov    esi,0xa0
  4017dd:	mov    edi,0x1
  4017e2:	xor    eax,eax
  4017e4:	call   403d60 <error@@Base+0x50>
  4017e9:	mov    rdi,r12
  4017ec:	mov    rbp,rax
  4017ef:	call   4013a0 <strdup@plt>
  4017f4:	mov    QWORD PTR [rbp+0x10],rax
  4017f8:	test   r13b,r13b
  4017fb:	jne    401807 <__sprintf_chk@plt+0x447>
  4017fd:	mov    DWORD PTR [rbp+0x98],0x3f800000
  401807:	mov    rdi,0x408740
  40180e:	mov    rsi,rbp
  401811:	xor    eax,eax
  401813:	call   4030d0 <__sprintf_chk@plt+0x1d10>
  401818:	jmp    4017bf <__sprintf_chk@plt+0x3ff>
  40181a:	nop    WORD PTR [rax+rax*1+0x0]
  401820:	endbr64 
  401824:	push   r15
  401826:	movsx  rdx,di
  40182a:	push   r14
  40182c:	push   r13
  40182e:	push   r12
  401830:	push   rbp
  401831:	push   rbx
  401832:	sub    rsp,0x48
  401836:	mov    rax,QWORD PTR fs:0x28
  40183f:	mov    QWORD PTR [rsp+0x38],rax
  401844:	xor    eax,eax
  401846:	mov    rax,0x408340
  40184d:	mov    DWORD PTR [rsp+0xc],edx
  401851:	mov    rax,QWORD PTR [rax+rdx*8]
  401855:	mov    r13,QWORD PTR [rax+0x10]
  401859:	test   r13,r13
  40185c:	je     4018f0 <__sprintf_chk@plt+0x530>
  401862:	mov    BYTE PTR [rsp+0x20],0x0
  401867:	mov    QWORD PTR [rsp],r13
  40186b:	xor    ebp,ebp
  40186d:	xor    r15d,r15d
  401870:	lea    rbx,[rsp+0x17]
  401875:	lea    r12,[rsp+0x20]
  40187a:	mov    r14d,0x1
  401880:	mov    esi,DWORD PTR [r13+0x14]
  401884:	xor    ecx,ecx
  401886:	xor    edi,edi
  401888:	xor    eax,eax
  40188a:	mov    rdx,rbx
  40188d:	call   403750 <__sprintf_chk@plt+0x2390>
  401892:	mov    edx,0x12
  401897:	mov    rsi,rbx
  40189a:	mov    rdi,r12
  40189d:	call   401200 <__strcat_chk@plt>
  4018a2:	cmp    DWORD PTR [r13+0x14],0x7e
  4018a7:	cmove  r15d,r14d
  4018ab:	cmp    bp,0x1
  4018af:	jne    4018e0 <__sprintf_chk@plt+0x520>
  4018b1:	mov    edx,DWORD PTR [rsp+0xc]
  4018b5:	xor    eax,eax
  4018b7:	movsx  esi,r15b
  4018bb:	mov    rdi,r12
  4018be:	call   401790 <__sprintf_chk@plt+0x3d0>
  4018c3:	mov    rax,QWORD PTR [rsp]
  4018c7:	mov    r13,QWORD PTR [rax+0x8]
  4018cb:	test   r13,r13
  4018ce:	je     4018f0 <__sprintf_chk@plt+0x530>
  4018d0:	mov    BYTE PTR [rsp+0x20],0x0
  4018d5:	mov    QWORD PTR [rsp],r13
  4018d9:	xor    ebp,ebp
  4018db:	xor    r15d,r15d
  4018de:	jmp    401880 <__sprintf_chk@plt+0x4c0>
  4018e0:	mov    r13,QWORD PTR [r13+0x8]
  4018e4:	test   r13,r13
  4018e7:	je     4018f0 <__sprintf_chk@plt+0x530>
  4018e9:	mov    ebp,0x1
  4018ee:	jmp    401880 <__sprintf_chk@plt+0x4c0>
  4018f0:	mov    rax,QWORD PTR [rsp+0x38]
  4018f5:	xor    rax,QWORD PTR fs:0x28
  4018fe:	jne    40190f <__sprintf_chk@plt+0x54f>
  401900:	add    rsp,0x48
  401904:	pop    rbx
  401905:	pop    rbp
  401906:	pop    r12
  401908:	pop    r13
  40190a:	pop    r14
  40190c:	pop    r15
  40190e:	ret    
  40190f:	call   401280 <__stack_chk_fail@plt>
  401914:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40191f:	nop
  401920:	endbr64 
  401924:	vxorps xmm0,xmm0,xmm0
  401928:	vucomiss xmm0,DWORD PTR [rdi+0x98]
  401930:	jnp    4019f8 <__sprintf_chk@plt+0x638>
  401936:	push   r13
  401938:	push   r12
  40193a:	lea    r12,[rip+0x68bf]        # 408200 <error@@Base+0x44f0>
  401941:	push   rbp
  401942:	mov    rbp,rdi
  401945:	push   rbx
  401946:	sub    rsp,0x8
  40194a:	mov    r13,0x4085c8
  401951:	cmp    QWORD PTR [rip+0x68a7],0x0        # 408200 <error@@Base+0x44f0>
  401959:	movsx  rcx,WORD PTR [r13+0x0]
  40195e:	je     401a00 <__sprintf_chk@plt+0x640>
  401964:	xor    ebx,ebx
  401966:	test   rcx,rcx
  401969:	jle    401a40 <__sprintf_chk@plt+0x680>
  40196f:	nop
  401970:	mov    rdx,QWORD PTR [rbp+rbx*8+0x18]
  401975:	mov    rax,QWORD PTR [r12+rbx*8]
  401979:	inc    rbx
  40197c:	mov    QWORD PTR [rax],rdx
  40197f:	cmp    rbx,rcx
  401982:	jne    401970 <__sprintf_chk@plt+0x5b0>
  401984:	mov    rdx,0x401560
  40198b:	xor    eax,eax
  40198d:	mov    rdi,rbx
  401990:	lea    rsi,[rip+0x6869]        # 408200 <error@@Base+0x44f0>
  401997:	call   4020e0 <__sprintf_chk@plt+0xd20>
  40199c:	mov    rax,rbx
  40199f:	sar    rax,1
  4019a2:	and    ebx,0x1
  4019a5:	je     4019d0 <__sprintf_chk@plt+0x610>
  4019a7:	mov    rax,QWORD PTR [r12+rax*8]
  4019ab:	vxorpd xmm0,xmm0,xmm0
  4019af:	vcvtsi2sd xmm0,xmm0,QWORD PTR [rax]
  4019b4:	vxorps xmm1,xmm1,xmm1
  4019b8:	vcvtsd2ss xmm1,xmm1,xmm0
  4019bc:	vmovss DWORD PTR [rbp+0x98],xmm1
  4019c4:	add    rsp,0x8
  4019c8:	pop    rbx
  4019c9:	pop    rbp
  4019ca:	pop    r12
  4019cc:	pop    r13
  4019ce:	ret    
  4019cf:	nop
  4019d0:	lea    rdx,[rax-0x1]
  4019d4:	mov    rax,QWORD PTR [r12+rax*8]
  4019d8:	mov    rdx,QWORD PTR [r12+rdx*8]
  4019dc:	mov    rax,QWORD PTR [rax]
  4019df:	vxorpd xmm0,xmm0,xmm0
  4019e3:	add    rax,QWORD PTR [rdx]
  4019e6:	vcvtsi2sd xmm0,xmm0,rax
  4019eb:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x369d]        # 405090 <error@@Base+0x1380>
  4019f3:	jmp    4019b4 <__sprintf_chk@plt+0x5f4>
  4019f5:	nop    DWORD PTR [rax]
  4019f8:	jne    401936 <__sprintf_chk@plt+0x576>
  4019fe:	ret    
  4019ff:	nop
  401a00:	xor    ebx,ebx
  401a02:	test   cx,cx
  401a05:	jle    401a40 <__sprintf_chk@plt+0x680>
  401a07:	nop    WORD PTR [rax+rax*1+0x0]
  401a10:	mov    esi,0x8
  401a15:	mov    edi,0x1
  401a1a:	xor    eax,eax
  401a1c:	call   403d60 <error@@Base+0x50>
  401a21:	movsx  rcx,WORD PTR [r13+0x0]
  401a26:	mov    QWORD PTR [r12+rbx*8],rax
  401a2a:	inc    rbx
  401a2d:	cmp    rbx,rcx
  401a30:	jl     401a10 <__sprintf_chk@plt+0x650>
  401a32:	jmp    401964 <__sprintf_chk@plt+0x5a4>
  401a37:	nop    WORD PTR [rax+rax*1+0x0]
  401a40:	mov    rdx,0x401560
  401a47:	xor    eax,eax
  401a49:	lea    rsi,[rip+0x67b0]        # 408200 <error@@Base+0x44f0>
  401a50:	xor    edi,edi
  401a52:	call   4020e0 <__sprintf_chk@plt+0xd20>
  401a57:	mov    rdx,0xffffffffffffffff
  401a5e:	xor    eax,eax
  401a60:	jmp    4019d4 <__sprintf_chk@plt+0x614>
  401a65:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  401a70:	endbr64 
  401a74:	mov    rax,0x408740
  401a7b:	mov    rdx,QWORD PTR [rax+0x3ee8]
  401a82:	test   rdx,rdx
  401a85:	jle    401af2 <__sprintf_chk@plt+0x732>
  401a87:	mov    rcx,0x408340
  401a8e:	movsx  rdi,di
  401a92:	mov    rsi,QWORD PTR [rcx+rdi*8]
  401a96:	mov    rax,QWORD PTR [rax+0x3ee0]
  401a9d:	vmovsd xmm2,QWORD PTR [rsi+0x30]
  401aa2:	vmovq  xmm4,QWORD PTR [rip+0x35f6]        # 4050a0 <error@@Base+0x1390>
  401aaa:	lea    rcx,[rax+rdx*8]
  401aae:	vxorps xmm3,xmm3,xmm3
  401ab2:	nop    WORD PTR [rax+rax*1+0x0]
  401ab8:	mov    rdx,QWORD PTR [rax]
  401abb:	vxorps xmm0,xmm0,xmm0
  401abf:	vcvtsi2ss xmm0,xmm0,QWORD PTR [rdx+rdi*8+0x18]
  401ac6:	vxorpd xmm1,xmm1,xmm1
  401aca:	vsubss xmm0,xmm0,DWORD PTR [rdx+0x98]
  401ad2:	vcomiss xmm3,xmm0
  401ad6:	vcvtss2sd xmm1,xmm1,xmm0
  401ada:	jbe    401ae0 <__sprintf_chk@plt+0x720>
  401adc:	vxorpd xmm1,xmm1,xmm4
  401ae0:	add    rax,0x8
  401ae4:	vaddsd xmm2,xmm2,xmm1
  401ae8:	cmp    rcx,rax
  401aeb:	jne    401ab8 <__sprintf_chk@plt+0x6f8>
  401aed:	vmovsd QWORD PTR [rsi+0x30],xmm2
  401af2:	ret    
  401af3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  401afe:	xchg   ax,ax
  401b00:	endbr64 
  401b04:	push   r13
  401b06:	push   r12
  401b08:	push   rbp
  401b09:	push   rbx
  401b0a:	sub    rsp,0x8
  401b0e:	mov    rax,0x408601
  401b15:	cmp    BYTE PTR [rax],0x0
  401b18:	je     401c1c <__sprintf_chk@plt+0x85c>
  401b1e:	mov    rbp,0x4085c8
  401b25:	xor    ebx,ebx
  401b27:	cmp    WORD PTR [rbp+0x0],0x0
  401b2c:	jle    401b47 <__sprintf_chk@plt+0x787>
  401b2e:	xchg   ax,ax
  401b30:	mov    rdi,rbx
  401b33:	xor    eax,eax
  401b35:	call   401820 <__sprintf_chk@plt+0x460>
  401b3a:	movsx  rax,WORD PTR [rbp+0x0]
  401b3f:	inc    rbx
  401b42:	cmp    rax,rbx
  401b45:	jg     401b30 <__sprintf_chk@plt+0x770>
  401b47:	mov    r12,0x408740
  401b4e:	xor    eax,eax
  401b50:	mov    rdi,r12
  401b53:	call   4031d0 <__sprintf_chk@plt+0x1e10>
  401b58:	cmp    QWORD PTR [r12+0x3ee8],0x0
  401b61:	jle    401b88 <__sprintf_chk@plt+0x7c8>
  401b63:	xor    ebx,ebx
  401b65:	nop    DWORD PTR [rax]
  401b68:	mov    rax,QWORD PTR [r12+0x3ee0]
  401b70:	mov    rdi,QWORD PTR [rax+rbx*8]
  401b74:	xor    eax,eax
  401b76:	inc    rbx
  401b79:	call   401920 <__sprintf_chk@plt+0x560>
  401b7e:	cmp    QWORD PTR [r12+0x3ee8],rbx
  401b86:	jg     401b68 <__sprintf_chk@plt+0x7a8>
  401b88:	xor    ebx,ebx
  401b8a:	cmp    WORD PTR [rbp+0x0],0x0
  401b8f:	jle    401baf <__sprintf_chk@plt+0x7ef>
  401b91:	nop    DWORD PTR [rax+0x0]
  401b98:	mov    rdi,rbx
  401b9b:	xor    eax,eax
  401b9d:	call   401a70 <__sprintf_chk@plt+0x6b0>
  401ba2:	movsx  rax,WORD PTR [rbp+0x0]
  401ba7:	inc    rbx
  401baa:	cmp    rax,rbx
  401bad:	jg     401b98 <__sprintf_chk@plt+0x7d8>
  401baf:	mov    r12,0x408340
  401bb6:	mov    rdx,0x401570
  401bbd:	xor    eax,eax
  401bbf:	mov    rsi,r12
  401bc2:	mov    rdi,rbx
  401bc5:	call   4020e0 <__sprintf_chk@plt+0xd20>
  401bca:	mov    rax,0x408600
  401bd1:	cmp    BYTE PTR [rax],0x0
  401bd4:	je     401c1c <__sprintf_chk@plt+0x85c>
  401bd6:	cmp    WORD PTR [rbp+0x0],0x0
  401bdb:	jle    401c1c <__sprintf_chk@plt+0x85c>
  401bdd:	xor    ebx,ebx
  401bdf:	lea    r13,[rip+0x3458]        # 40503e <error@@Base+0x132e>
  401be6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401bf0:	mov    rax,QWORD PTR [r12+rbx*8]
  401bf4:	mov    rsi,r13
  401bf7:	mov    rdx,QWORD PTR [rax+0x8]
  401bfb:	vmovsd xmm0,QWORD PTR [rax+0x30]
  401c00:	mov    edi,0x1
  401c05:	mov    eax,0x1
  401c0a:	call   401330 <__printf_chk@plt>
  401c0f:	movsx  rax,WORD PTR [rbp+0x0]
  401c14:	inc    rbx
  401c17:	cmp    rax,rbx
  401c1a:	jg     401bf0 <__sprintf_chk@plt+0x830>
  401c1c:	mov    rax,0x408114
  401c23:	movsx  rcx,WORD PTR [rax]
  401c27:	test   cx,cx
  401c2a:	jle    401c64 <__sprintf_chk@plt+0x8a4>
  401c2c:	mov    rax,0x408340
  401c33:	mov    rdx,0x4083c0
  401c3a:	lea    rsi,[rax+rcx*8]
  401c3e:	xchg   ax,ax
  401c40:	mov    rcx,QWORD PTR [rax]
  401c43:	add    rax,0x8
  401c47:	vmovdqu xmm1,XMMWORD PTR [rcx+0x10]
  401c4c:	add    rdx,0x20
  401c50:	vmovaps XMMWORD PTR [rdx-0x20],xmm1
  401c55:	vmovdqu xmm2,XMMWORD PTR [rcx+0x20]
  401c5a:	vmovaps XMMWORD PTR [rdx-0x10],xmm2
  401c5f:	cmp    rsi,rax
  401c62:	jne    401c40 <__sprintf_chk@plt+0x880>
  401c64:	add    rsp,0x8
  401c68:	pop    rbx
  401c69:	pop    rbp
  401c6a:	pop    r12
  401c6c:	pop    r13
  401c6e:	ret    
  401c6f:	nop
  401c70:	endbr64 
  401c74:	push   r12
  401c76:	mov    rax,0x408110
  401c7d:	push   rbp
  401c7e:	push   rbx
  401c7f:	movzx  ebx,WORD PTR [rax]
  401c82:	test   rdi,rdi
  401c85:	je     401d30 <__sprintf_chk@plt+0x970>
  401c8b:	mov    r12d,DWORD PTR [rdi+0x14]
  401c8f:	cmp    r12d,0x7e
  401c93:	je     401d17 <__sprintf_chk@plt+0x957>
  401c99:	cmp    BYTE PTR [rdi+0x10],0x0
  401c9d:	jne    401d20 <__sprintf_chk@plt+0x960>
  401ca3:	mov    rbp,0x408720
  401caa:	movzx  r10d,WORD PTR [rbp+0x0]
  401caf:	test   r10w,r10w
  401cb3:	jle    401db1 <__sprintf_chk@plt+0x9f1>
  401cb9:	mov    r11,0x408620
  401cc0:	lea    r9d,[r10-0x1]
  401cc4:	mov    rcx,r11
  401cc7:	movzx  r9d,r9w
  401ccb:	xor    eax,eax
  401ccd:	jmp    401cd3 <__sprintf_chk@plt+0x913>
  401ccf:	nop
  401cd0:	mov    rax,rsi
  401cd3:	mov    rsi,QWORD PTR [rcx]
  401cd6:	mov    edx,eax
  401cd8:	mov    r8d,eax
  401cdb:	test   rsi,rsi
  401cde:	je     401cea <__sprintf_chk@plt+0x92a>
  401ce0:	cmp    r12d,DWORD PTR [rsi+0x14]
  401ce4:	je     401d98 <__sprintf_chk@plt+0x9d8>
  401cea:	inc    edx
  401cec:	lea    rsi,[rax+0x1]
  401cf0:	add    rcx,0x10
  401cf4:	cmp    rax,r9
  401cf7:	jne    401cd0 <__sprintf_chk@plt+0x910>
  401cf9:	movsx  r8d,dx
  401cfd:	movsxd rdx,r8d
  401d00:	shl    rdx,0x4
  401d04:	add    r11,rdx
  401d07:	inc    r10d
  401d0a:	mov    WORD PTR [rbp+0x0],r10w
  401d0f:	mov    QWORD PTR [r11],rdi
  401d12:	mov    WORD PTR [r11+0x8],bx
  401d17:	pop    rbx
  401d18:	pop    rbp
  401d19:	pop    r12
  401d1b:	ret    
  401d1c:	nop    DWORD PTR [rax+0x0]
  401d20:	mov    rax,0x408112
  401d27:	movzx  ebx,WORD PTR [rax]
  401d2a:	jmp    401ca3 <__sprintf_chk@plt+0x8e3>
  401d2f:	nop
  401d30:	mov    rbp,0x408720
  401d37:	movzx  r10d,WORD PTR [rbp+0x0]
  401d3c:	test   r10w,r10w
  401d40:	jle    401db1 <__sprintf_chk@plt+0x9f1>
  401d42:	mov    r11,0x408620
  401d49:	xor    r8d,r8d
  401d4c:	cmp    QWORD PTR [r11],0x0
  401d50:	je     401d7f <__sprintf_chk@plt+0x9bf>
  401d52:	lea    esi,[r10-0x1]
  401d56:	movzx  esi,si
  401d59:	lea    rdx,[r11+0x10]
  401d5d:	inc    rsi
  401d60:	mov    eax,0x1
  401d65:	nop    DWORD PTR [rax]
  401d68:	mov    r8d,eax
  401d6b:	cmp    rsi,rax
  401d6e:	je     401cfd <__sprintf_chk@plt+0x93d>
  401d70:	mov    rcx,QWORD PTR [rdx]
  401d73:	inc    rax
  401d76:	add    rdx,0x10
  401d7a:	test   rcx,rcx
  401d7d:	jne    401d68 <__sprintf_chk@plt+0x9a8>
  401d7f:	movsxd rdx,r8d
  401d82:	shl    rdx,0x4
  401d86:	add    WORD PTR [r11+rdx*1+0x8],bx
  401d8c:	pop    rbx
  401d8d:	pop    rbp
  401d8e:	pop    r12
  401d90:	ret    
  401d91:	nop    DWORD PTR [rax+0x0]
  401d98:	cmp    r10w,ax
  401d9c:	jle    401cfd <__sprintf_chk@plt+0x93d>
  401da2:	movsxd rdx,r8d
  401da5:	shl    rdx,0x4
  401da9:	add    WORD PTR [r11+rdx*1+0x8],bx
  401daf:	jmp    401d8c <__sprintf_chk@plt+0x9cc>
  401db1:	xor    r8d,r8d
  401db4:	mov    r11,0x408620
  401dbb:	jmp    401cfd <__sprintf_chk@plt+0x93d>
  401dc0:	endbr64 
  401dc4:	sub    rsp,0x8
  401dc8:	mov    r11,0x408720
  401dcf:	movzx  r9d,WORD PTR [r11]
  401dd3:	test   r9w,r9w
  401dd7:	je     401e88 <__sprintf_chk@plt+0xac8>
  401ddd:	cmp    r9w,0x1
  401de2:	jle    401eb0 <__sprintf_chk@plt+0xaf0>
  401de8:	mov    r10,0x408620
  401def:	sub    r9d,0x2
  401df3:	movzx  r9d,r9w
  401df7:	lea    rdi,[r10+0x18]
  401dfb:	add    r9,0x2
  401dff:	mov    edx,0x1
  401e04:	xor    esi,esi
  401e06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401e10:	movsx  rax,si
  401e14:	mov    rcx,rax
  401e17:	movzx  r8d,WORD PTR [rdi]
  401e1b:	shl    rax,0x4
  401e1f:	add    rax,r10
  401e22:	cmp    r8w,WORD PTR [rax+0x8]
  401e27:	cmovg  ecx,edx
  401e2a:	cmovg  esi,edx
  401e2d:	inc    rdx
  401e30:	add    rdi,0x10
  401e34:	cmp    rdx,r9
  401e37:	jne    401e10 <__sprintf_chk@plt+0xa50>
  401e39:	movsxd rcx,ecx
  401e3c:	shl    rcx,0x4
  401e40:	add    rcx,r10
  401e43:	mov    rdx,QWORD PTR [rcx]
  401e46:	xor    eax,eax
  401e48:	mov    WORD PTR [r11],ax
  401e4c:	xor    eax,eax
  401e4e:	test   rdx,rdx
  401e51:	je     401e7d <__sprintf_chk@plt+0xabd>
  401e53:	mov    rax,0x40c630
  401e5a:	xor    esi,esi
  401e5c:	movzx  eax,WORD PTR [rax]
  401e5f:	mov    edx,DWORD PTR [rdx+0x14]
  401e62:	cmp    WORD PTR [rcx+0x8],ax
  401e66:	mov    rdi,0x4085e0
  401e6d:	setle  sil
  401e71:	xor    eax,eax
  401e73:	call   4032b0 <__sprintf_chk@plt+0x1ef0>
  401e78:	mov    eax,0x1
  401e7d:	add    rsp,0x8
  401e81:	ret    
  401e82:	nop    WORD PTR [rax+rax*1+0x0]
  401e88:	mov    rdi,0x4085e0
  401e8f:	xor    eax,eax
  401e91:	mov    edx,0x7e
  401e96:	xor    esi,esi
  401e98:	call   4032b0 <__sprintf_chk@plt+0x1ef0>
  401e9d:	mov    eax,0x1
  401ea2:	add    rsp,0x8
  401ea6:	ret    
  401ea7:	nop    WORD PTR [rax+rax*1+0x0]
  401eb0:	xor    ecx,ecx
  401eb2:	mov    r10,0x408620
  401eb9:	jmp    401e39 <__sprintf_chk@plt+0xa79>
  401ebe:	xchg   ax,ax
  401ec0:	endbr64 
  401ec4:	push   r12
  401ec6:	push   rbp
  401ec7:	push   rbx
  401ec8:	mov    r12,QWORD PTR [rdi]
  401ecb:	test   r12,r12
  401ece:	je     401f5d <__sprintf_chk@plt+0xb9d>
  401ed4:	mov    rbp,0x408114
  401edb:	nop    DWORD PTR [rax+rax*1+0x0]
  401ee0:	cmp    WORD PTR [rbp+0x0],0x0
  401ee5:	jle    401f48 <__sprintf_chk@plt+0xb88>
  401ee7:	xor    ebx,ebx
  401ee9:	jmp    401f1d <__sprintf_chk@plt+0xb5d>
  401eeb:	nop    DWORD PTR [rax+rax*1+0x0]
  401ef0:	movsx  rcx,bx
  401ef4:	shl    rcx,0x5
  401ef8:	add    rcx,0x4083c0
  401eff:	mov    rcx,QWORD PTR [rcx+0x10]
  401f03:	lea    rsi,[rdx+0x1]
  401f07:	mov    QWORD PTR [rax],rsi
  401f0a:	mov    rdi,QWORD PTR [rcx+rdx*8]
  401f0e:	xor    eax,eax
  401f10:	inc    ebx
  401f12:	call   401c70 <__sprintf_chk@plt+0x8b0>
  401f17:	cmp    WORD PTR [rbp+0x0],bx
  401f1b:	jle    401f48 <__sprintf_chk@plt+0xb88>
  401f1d:	movsx  rax,bx
  401f21:	lea    rdx,[rax+rax*2]
  401f25:	mov    rax,QWORD PTR [r12+0x10]
  401f2a:	lea    rax,[rax+rdx*8]
  401f2e:	mov    rdx,QWORD PTR [rax]
  401f31:	cmp    rdx,QWORD PTR [rax+0x8]
  401f35:	jle    401ef0 <__sprintf_chk@plt+0xb30>
  401f37:	xor    edi,edi
  401f39:	xor    eax,eax
  401f3b:	inc    ebx
  401f3d:	call   401c70 <__sprintf_chk@plt+0x8b0>
  401f42:	cmp    WORD PTR [rbp+0x0],bx
  401f46:	jg     401f1d <__sprintf_chk@plt+0xb5d>
  401f48:	xor    eax,eax
  401f4a:	call   401dc0 <__sprintf_chk@plt+0xa00>
  401f4f:	test   al,al
  401f51:	jne    401ee0 <__sprintf_chk@plt+0xb20>
  401f53:	mov    r12,QWORD PTR [r12+0x8]
  401f58:	test   r12,r12
  401f5b:	jne    401ee0 <__sprintf_chk@plt+0xb20>
  401f5d:	pop    rbx
  401f5e:	pop    rbp
  401f5f:	pop    r12
  401f61:	ret    
  401f62:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401f6c:	nop    DWORD PTR [rax+0x0]
  401f70:	push   r15
  401f72:	mov    rax,rsi
  401f75:	shl    rax,0x3
  401f79:	push   r14
  401f7b:	push   r13
  401f7d:	mov    r13,rdi
  401f80:	push   r12
  401f82:	push   rbp
  401f83:	push   rbx
  401f84:	sub    rsp,0x18
  401f88:	mov    QWORD PTR [rsp],rsi
  401f8c:	mov    QWORD PTR [rsp+0x8],rax
  401f91:	mov    rax,QWORD PTR [rip+0x62f0]        # 408288 <error@@Base+0x4578>
  401f98:	mov    rdx,QWORD PTR [rsp]
  401f9c:	mov    rbx,QWORD PTR [rax+r13*8]
  401fa0:	mov    r15,rdx
  401fa3:	mov    rbp,r13
  401fa6:	cmp    r13,rdx
  401fa9:	jge    4020c3 <__sprintf_chk@plt+0xd03>
  401faf:	nop
  401fb0:	mov    rsi,QWORD PTR [rax+r15*8]
  401fb4:	mov    rdi,rbx
  401fb7:	xor    eax,eax
  401fb9:	lea    r12,[r15*8+0x0]
  401fc1:	call   QWORD PTR [rip+0x62b9]        # 408280 <error@@Base+0x4570>
  401fc7:	test   eax,eax
  401fc9:	jns    402068 <__sprintf_chk@plt+0xca8>
  401fcf:	dec    r15
  401fd2:	mov    rax,QWORD PTR [rip+0x62af]        # 408288 <error@@Base+0x4578>
  401fd9:	lea    r12,[r15*8+0x0]
  401fe1:	cmp    rbp,r15
  401fe4:	jl     401fb0 <__sprintf_chk@plt+0xbf0>
  401fe6:	lea    rsi,[rax+r12*1]
  401fea:	cmp    r15,rbp
  401fed:	je     40207f <__sprintf_chk@plt+0xcbf>
  401ff3:	mov    rsi,QWORD PTR [rsi]
  401ff6:	lea    r14,[rbp+0x1]
  401ffa:	lea    rdi,[rbp*8+0x0]
  402002:	mov    QWORD PTR [rax+rbp*8],rsi
  402006:	cmp    r15,r14
  402009:	jg     40201f <__sprintf_chk@plt+0xc5f>
  40200b:	jmp    4020ab <__sprintf_chk@plt+0xceb>
  402010:	inc    r14
  402013:	mov    rax,QWORD PTR [rip+0x626e]        # 408288 <error@@Base+0x4578>
  40201a:	cmp    r15,r14
  40201d:	je     402078 <__sprintf_chk@plt+0xcb8>
  40201f:	mov    rsi,QWORD PTR [rax+r14*8]
  402023:	mov    rdi,rbx
  402026:	xor    eax,eax
  402028:	lea    rbp,[r14*8+0x0]
  402030:	call   QWORD PTR [rip+0x624a]        # 408280 <error@@Base+0x4570>
  402036:	test   eax,eax
  402038:	jg     402010 <__sprintf_chk@plt+0xc50>
  40203a:	mov    rax,QWORD PTR [rip+0x6247]        # 408288 <error@@Base+0x4578>
  402041:	lea    rsi,[rax+rbp*1]
  402045:	mov    rbp,r14
  402048:	mov    rsi,QWORD PTR [rsi]
  40204b:	dec    r15
  40204e:	mov    QWORD PTR [rax+r12*1],rsi
  402052:	cmp    r15,r14
  402055:	jg     401fb0 <__sprintf_chk@plt+0xbf0>
  40205b:	lea    rsi,[rax+r15*8]
  40205f:	jmp    402082 <__sprintf_chk@plt+0xcc2>
  402061:	nop    DWORD PTR [rax+0x0]
  402068:	mov    rax,QWORD PTR [rip+0x6219]        # 408288 <error@@Base+0x4578>
  40206f:	jmp    401fe6 <__sprintf_chk@plt+0xc26>
  402074:	nop    DWORD PTR [rax+0x0]
  402078:	lea    rsi,[rax+r15*8]
  40207c:	mov    rbp,r15
  40207f:	mov    r15,rbp
  402082:	mov    QWORD PTR [rsi],rbx
  402085:	lea    rsi,[r15-0x1]
  402089:	cmp    r13,rsi
  40208c:	jl     4020b7 <__sprintf_chk@plt+0xcf7>
  40208e:	lea    r13,[rbp+0x1]
  402092:	cmp    r13,QWORD PTR [rsp]
  402096:	jl     401f91 <__sprintf_chk@plt+0xbd1>
  40209c:	add    rsp,0x18
  4020a0:	pop    rbx
  4020a1:	pop    rbp
  4020a2:	pop    r12
  4020a4:	pop    r13
  4020a6:	pop    r14
  4020a8:	pop    r15
  4020aa:	ret    
  4020ab:	lea    rsi,[rax+rdi*1+0x8]
  4020b0:	je     40207c <__sprintf_chk@plt+0xcbc>
  4020b2:	mov    rbp,r14
  4020b5:	jmp    402048 <__sprintf_chk@plt+0xc88>
  4020b7:	mov    rdi,r13
  4020ba:	xor    eax,eax
  4020bc:	call   401f70 <__sprintf_chk@plt+0xbb0>
  4020c1:	jmp    40208e <__sprintf_chk@plt+0xcce>
  4020c3:	mov    rcx,QWORD PTR [rsp+0x8]
  4020c8:	mov    r15,QWORD PTR [rsp]
  4020cc:	lea    rsi,[rax+rcx*1]
  4020d0:	jmp    402082 <__sprintf_chk@plt+0xcc2>
  4020d2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4020dd:	nop    DWORD PTR [rax]
  4020e0:	endbr64 
  4020e4:	cmp    rdi,0x1
  4020e8:	jle    402108 <__sprintf_chk@plt+0xd48>
  4020ea:	mov    QWORD PTR [rip+0x6197],rsi        # 408288 <error@@Base+0x4578>
  4020f1:	xor    eax,eax
  4020f3:	lea    rsi,[rdi-0x1]
  4020f7:	xor    edi,edi
  4020f9:	mov    QWORD PTR [rip+0x6180],rdx        # 408280 <error@@Base+0x4570>
  402100:	jmp    401f70 <__sprintf_chk@plt+0xbb0>
  402105:	nop    DWORD PTR [rax]
  402108:	ret    
  402109:	nop    DWORD PTR [rax+0x0]
  402110:	push   r15
  402112:	mov    rax,rcx
  402115:	sub    rax,rdi
  402118:	push   r14
  40211a:	mov    r15,rdi
  40211d:	push   r13
  40211f:	push   r12
  402121:	mov    r12,rdi
  402124:	push   rbp
  402125:	push   rbx
  402126:	mov    rbx,QWORD PTR [rsp+0x38]
  40212b:	mov    QWORD PTR [rsp-0x10],r9
  402130:	mov    rbp,rbx
  402133:	mov    QWORD PTR [rsp-0x8],rax
  402138:	sub    rbp,rdi
  40213b:	cmp    rax,rdx
  40213e:	jl     402251 <__sprintf_chk@plt+0xe91>
  402144:	nop    DWORD PTR [rax+0x0]
  402148:	lea    r15,[rdx+0x1]
  40214c:	cmp    QWORD PTR [rsp-0x10],rbp
  402151:	jg     402240 <__sprintf_chk@plt+0xe80>
  402157:	mov    rax,QWORD PTR [rsi+rdx*8]
  40215b:	lea    r15,[rdx+0x1]
  40215f:	mov    r13d,DWORD PTR [rax+0x14]
  402163:	mov    r9,QWORD PTR [rsp-0x10]
  402168:	cmp    r13d,0x7e
  40216c:	setne  r14b
  402170:	jmp    402184 <__sprintf_chk@plt+0xdc4>
  402172:	nop    WORD PTR [rax+rax*1+0x0]
  402178:	mov    r9,r11
  40217b:	cmp    rbp,r11
  40217e:	jl     402240 <__sprintf_chk@plt+0xe80>
  402184:	mov    rax,QWORD PTR [r8+r9*8]
  402188:	lea    r11,[r9+0x1]
  40218c:	cmp    DWORD PTR [rax+0x14],r13d
  402190:	jne    402178 <__sprintf_chk@plt+0xdb8>
  402192:	test   r14b,r14b
  402195:	je     402178 <__sprintf_chk@plt+0xdb8>
  402197:	cmp    r15,rcx
  40219a:	jg     402260 <__sprintf_chk@plt+0xea0>
  4021a0:	cmp    rbx,r11
  4021a3:	jl     402260 <__sprintf_chk@plt+0xea0>
  4021a9:	mov    rax,QWORD PTR [rsi+rdx*8+0x8]
  4021ae:	mov    rdi,QWORD PTR [r8+r11*8]
  4021b2:	mov    eax,DWORD PTR [rax+0x14]
  4021b5:	cmp    DWORD PTR [rdi+0x14],eax
  4021b8:	jne    402260 <__sprintf_chk@plt+0xea0>
  4021be:	cmp    eax,0x7e
  4021c1:	je     402260 <__sprintf_chk@plt+0xea0>
  4021c7:	mov    rdi,r11
  4021ca:	mov    rax,r15
  4021cd:	mov    QWORD PTR [rsp-0x18],rdx
  4021d2:	jmp    4021de <__sprintf_chk@plt+0xe1e>
  4021d4:	nop    DWORD PTR [rax+0x0]
  4021d8:	cmp    r10d,0x7e
  4021dc:	je     402200 <__sprintf_chk@plt+0xe40>
  4021de:	inc    rax
  4021e1:	inc    rdi
  4021e4:	cmp    rcx,rax
  4021e7:	jl     402200 <__sprintf_chk@plt+0xe40>
  4021e9:	cmp    rbx,rdi
  4021ec:	jl     402200 <__sprintf_chk@plt+0xe40>
  4021ee:	mov    r10,QWORD PTR [rsi+rax*8]
  4021f2:	mov    rdx,QWORD PTR [r8+rdi*8]
  4021f6:	mov    r10d,DWORD PTR [r10+0x14]
  4021fa:	cmp    DWORD PTR [rdx+0x14],r10d
  4021fe:	je     4021d8 <__sprintf_chk@plt+0xe18>
  402200:	mov    rdx,QWORD PTR [rsp-0x18]
  402205:	sub    rax,rdx
  402208:	mov    rdi,rax
  40220b:	sub    rdi,r12
  40220e:	test   rdi,rdi
  402211:	jle    402178 <__sprintf_chk@plt+0xdb8>
  402217:	sub    QWORD PTR [rsp-0x8],rdi
  40221c:	sub    rbp,rdi
  40221f:	mov    rdi,QWORD PTR [rsp+0x40]
  402224:	mov    r12,rax
  402227:	mov    QWORD PTR [rdi],rdx
  40222a:	mov    rdi,QWORD PTR [rsp+0x48]
  40222f:	mov    QWORD PTR [rdi],r9
  402232:	mov    r9,r11
  402235:	cmp    rbp,r11
  402238:	jge    402184 <__sprintf_chk@plt+0xdc4>
  40223e:	xchg   ax,ax
  402240:	mov    rdx,r15
  402243:	cmp    r15,QWORD PTR [rsp-0x8]
  402248:	jle    402148 <__sprintf_chk@plt+0xd88>
  40224e:	mov    r15,r12
  402251:	pop    rbx
  402252:	pop    rbp
  402253:	pop    r12
  402255:	pop    r13
  402257:	pop    r14
  402259:	mov    rax,r15
  40225c:	pop    r15
  40225e:	ret    
  40225f:	nop
  402260:	mov    rax,r15
  402263:	jmp    402205 <__sprintf_chk@plt+0xe45>
  402265:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402270:	test   rsi,rsi
  402273:	je     4022e0 <__sprintf_chk@plt+0xf20>
  402275:	mov    r8,QWORD PTR [rsi+0x18]
  402279:	lea    rcx,[rdi-0x1]
  40227d:	cmp    rcx,r8
  402280:	lea    r10,[rdi+0x1]
  402284:	cmovl  rcx,r8
  402288:	cmp    QWORD PTR [rsi+0x20],r10
  40228c:	cmovle r10,QWORD PTR [rsi+0x20]
  402291:	cmp    rcx,r10
  402294:	jg     4022e3 <__sprintf_chk@plt+0xf23>
  402296:	mov    r11,QWORD PTR [rsi+0x28]
  40229a:	inc    r10
  40229d:	xor    eax,eax
  40229f:	jmp    4022ac <__sprintf_chk@plt+0xeec>
  4022a1:	nop    DWORD PTR [rax+0x0]
  4022a8:	mov    r8,QWORD PTR [rsi+0x18]
  4022ac:	mov    r9,rcx
  4022af:	sub    r9,r8
  4022b2:	movzx  r8d,WORD PTR [r11+r9*2]
  4022b7:	xor    r9d,r9d
  4022ba:	cmp    rdi,rcx
  4022bd:	setle  r9b
  4022c1:	add    r8,r9
  4022c4:	cmp    r8,rax
  4022c7:	jl     4022cf <__sprintf_chk@plt+0xf0f>
  4022c9:	mov    QWORD PTR [rdx],rcx
  4022cc:	mov    rax,r8
  4022cf:	inc    rcx
  4022d2:	cmp    rcx,r10
  4022d5:	jne    4022a8 <__sprintf_chk@plt+0xee8>
  4022d7:	ret    
  4022d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4022e0:	xor    eax,eax
  4022e2:	ret    
  4022e3:	push   rax
  4022e4:	lea    rdi,[rip+0x2dc5]        # 4050b0 <error@@Base+0x13a0>
  4022eb:	xor    eax,eax
  4022ed:	call   403d10 <error@@Base>
  4022f2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4022fd:	nop    DWORD PTR [rax]
  402300:	push   rbp
  402301:	mov    esi,0x20
  402306:	xor    eax,eax
  402308:	push   rbx
  402309:	mov    ebx,edi
  40230b:	mov    edi,0x1
  402310:	sub    rsp,0x8
  402314:	call   403d60 <error@@Base+0x50>
  402319:	mov    rbp,rax
  40231c:	movsx  rdi,bx
  402320:	mov    esi,0x18
  402325:	xor    eax,eax
  402327:	call   403d60 <error@@Base+0x50>
  40232c:	mov    QWORD PTR [rbp+0x10],rax
  402330:	add    rsp,0x8
  402334:	mov    rax,rbp
  402337:	pop    rbx
  402338:	pop    rbp
  402339:	ret    
  40233a:	nop    WORD PTR [rax+rax*1+0x0]
  402340:	push   r15
  402342:	xor    eax,eax
  402344:	xor    r15d,r15d
  402347:	push   r14
  402349:	push   r13
  40234b:	mov    r13d,esi
  40234e:	push   r12
  402350:	mov    r12,rdi
  402353:	push   rbp
  402354:	push   rbx
  402355:	mov    rbx,rdx
  402358:	sub    rsp,0x8
  40235c:	call   404160 <error@@Base+0x450>
  402361:	movsx  edi,r13w
  402365:	xor    eax,eax
  402367:	dec    r13d
  40236a:	call   402300 <__sprintf_chk@plt+0xf40>
  40236f:	movzx  r13d,r13w
  402373:	mov    rbp,rax
  402376:	mov    rax,r13
  402379:	shl    rax,0x5
  40237d:	lea    r14,[rbx+rax*1+0x20]
  402382:	nop    WORD PTR [rax+rax*1+0x0]
  402388:	mov    rdi,rbx
  40238b:	xor    eax,eax
  40238d:	call   404330 <error@@Base+0x620>
  402392:	mov    rdi,QWORD PTR [rbp+0x10]
  402396:	add    rbx,0x20
  40239a:	lea    rax,[rdi+r15*1]
  40239e:	mov    QWORD PTR [rax],0x0
  4023a5:	add    r15,0x18
  4023a9:	mov    rdx,QWORD PTR [rbx-0x8]
  4023ad:	lea    rcx,[rdx-0x1]
  4023b1:	mov    QWORD PTR [rax+0x8],rcx
  4023b5:	mov    QWORD PTR [rax+0x10],rdx
  4023b9:	cmp    rbx,r14
  4023bc:	jne    402388 <__sprintf_chk@plt+0xfc8>
  4023be:	lea    rdx,[r13+r13*2+0x0]
  4023c3:	lea    rax,[rdi+0x10]
  4023c7:	lea    rdx,[rdi+rdx*8+0x28]
  4023cc:	nop    DWORD PTR [rax+0x0]
  4023d0:	cmp    QWORD PTR [rax],0x0
  4023d4:	jg     402400 <__sprintf_chk@plt+0x1040>
  4023d6:	add    rax,0x18
  4023da:	cmp    rdx,rax
  4023dd:	jne    4023d0 <__sprintf_chk@plt+0x1010>
  4023df:	call   401210 <free@plt>
  4023e4:	add    rsp,0x8
  4023e8:	pop    rbx
  4023e9:	mov    rdi,rbp
  4023ec:	pop    rbp
  4023ed:	pop    r12
  4023ef:	pop    r13
  4023f1:	pop    r14
  4023f3:	pop    r15
  4023f5:	jmp    401210 <free@plt>
  4023fa:	nop    WORD PTR [rax+rax*1+0x0]
  402400:	add    rsp,0x8
  402404:	pop    rbx
  402405:	mov    rsi,rbp
  402408:	pop    rbp
  402409:	mov    rdi,r12
  40240c:	pop    r12
  40240e:	pop    r13
  402410:	pop    r14
  402412:	xor    eax,eax
  402414:	pop    r15
  402416:	jmp    404190 <error@@Base+0x480>
  40241b:	nop    DWORD PTR [rax+rax*1+0x0]
  402420:	push   r15
  402422:	xor    eax,eax
  402424:	mov    r15,rcx
  402427:	push   r14
  402429:	mov    r14,r8
  40242c:	push   r13
  40242e:	movsx  r13d,si
  402432:	push   r12
  402434:	mov    r12d,esi
  402437:	push   rbp
  402438:	mov    ebp,esi
  40243a:	push   rbx
  40243b:	mov    rbx,rdx
  40243e:	sub    rsp,0x28
  402442:	mov    QWORD PTR [rsp+0x8],rdi
  402447:	mov    edi,r13d
  40244a:	mov    QWORD PTR [rsp+0x10],r9
  40244f:	call   402300 <__sprintf_chk@plt+0xf40>
  402454:	mov    QWORD PTR [rsp],rax
  402458:	mov    edi,r13d
  40245b:	xor    eax,eax
  40245d:	call   402300 <__sprintf_chk@plt+0xf40>
  402462:	mov    r13,rax
  402465:	test   bp,bp
  402468:	jle    4025d0 <__sprintf_chk@plt+0x1210>
  40246e:	mov    rax,QWORD PTR [rsp]
  402472:	dec    ebp
  402474:	mov    rdi,QWORD PTR [rax+0x10]
  402478:	movzx  edx,bp
  40247b:	mov    rax,QWORD PTR [rbx+0x10]
  40247f:	mov    r9,QWORD PTR [r13+0x10]
  402483:	mov    rcx,r15
  402486:	mov    QWORD PTR [rsp+0x18],rdx
  40248b:	lea    r15,[r15+rdx*8+0x8]
  402490:	mov    r10,rdi
  402493:	mov    rdx,rdi
  402496:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4024a0:	mov    rbp,QWORD PTR [rax]
  4024a3:	mov    r11,QWORD PTR [rcx]
  4024a6:	mov    QWORD PTR [rdx],rbp
  4024a9:	add    r11,r14
  4024ac:	lea    r8,[r11-0x1]
  4024b0:	mov    rsi,QWORD PTR [rcx]
  4024b3:	add    rcx,0x8
  4024b7:	dec    rsi
  4024ba:	mov    QWORD PTR [rdx+0x8],rsi
  4024be:	add    rax,0x18
  4024c2:	add    rdx,0x18
  4024c6:	mov    rsi,QWORD PTR [rcx-0x8]
  4024ca:	add    r9,0x18
  4024ce:	sub    rsi,rbp
  4024d1:	mov    QWORD PTR [rdx-0x8],rsi
  4024d5:	mov    QWORD PTR [r9-0x18],r11
  4024d9:	mov    rsi,QWORD PTR [rax-0x10]
  4024dd:	mov    QWORD PTR [r9-0x10],rsi
  4024e1:	mov    rsi,QWORD PTR [rax-0x10]
  4024e5:	sub    rsi,r8
  4024e8:	mov    QWORD PTR [r9-0x8],rsi
  4024ec:	mov    rsi,QWORD PTR [rcx-0x8]
  4024f0:	mov    QWORD PTR [rax-0x10],r8
  4024f4:	mov    QWORD PTR [rax-0x18],rsi
  4024f8:	mov    QWORD PTR [rax-0x8],r14
  4024fc:	cmp    rcx,r15
  4024ff:	jne    4024a0 <__sprintf_chk@plt+0x10e0>
  402501:	mov    rax,QWORD PTR [rsp+0x10]
  402506:	cmp    QWORD PTR [rdi+0x10],0x0
  40250b:	mov    QWORD PTR [rbx+0x18],rax
  40250f:	jg     4025b0 <__sprintf_chk@plt+0x11f0>
  402515:	mov    rax,QWORD PTR [rsp+0x18]
  40251a:	lea    rax,[rax+rax*2]
  40251e:	lea    rax,[rdi+rax*8]
  402522:	jmp    402533 <__sprintf_chk@plt+0x1173>
  402524:	nop    DWORD PTR [rax+0x0]
  402528:	add    r10,0x18
  40252c:	cmp    QWORD PTR [r10+0x10],0x0
  402531:	jg     4025b0 <__sprintf_chk@plt+0x11f0>
  402533:	cmp    rax,r10
  402536:	jne    402528 <__sprintf_chk@plt+0x1168>
  402538:	call   401210 <free@plt>
  40253d:	mov    rdi,QWORD PTR [rsp]
  402541:	call   401210 <free@plt>
  402546:	mov    rdi,QWORD PTR [r13+0x10]
  40254a:	cmp    QWORD PTR [rdi+0x10],0x0
  40254f:	jg     402590 <__sprintf_chk@plt+0x11d0>
  402551:	lea    rdx,[rdi+0x28]
  402555:	xor    eax,eax
  402557:	jmp    40256b <__sprintf_chk@plt+0x11ab>
  402559:	nop    DWORD PTR [rax+0x0]
  402560:	add    rdx,0x18
  402564:	cmp    QWORD PTR [rdx-0x18],0x0
  402569:	jg     402590 <__sprintf_chk@plt+0x11d0>
  40256b:	inc    eax
  40256d:	cmp    r12w,ax
  402571:	jg     402560 <__sprintf_chk@plt+0x11a0>
  402573:	call   401210 <free@plt>
  402578:	add    rsp,0x28
  40257c:	pop    rbx
  40257d:	pop    rbp
  40257e:	pop    r12
  402580:	mov    rdi,r13
  402583:	pop    r13
  402585:	pop    r14
  402587:	pop    r15
  402589:	jmp    401210 <free@plt>
  40258e:	xchg   ax,ax
  402590:	mov    rdi,QWORD PTR [rsp+0x8]
  402595:	add    rsp,0x28
  402599:	mov    rsi,rbx
  40259c:	pop    rbx
  40259d:	pop    rbp
  40259e:	pop    r12
  4025a0:	mov    rdx,r13
  4025a3:	pop    r13
  4025a5:	pop    r14
  4025a7:	xor    eax,eax
  4025a9:	pop    r15
  4025ab:	jmp    404280 <error@@Base+0x570>
  4025b0:	mov    rsi,QWORD PTR [rsp]
  4025b4:	mov    rdi,QWORD PTR [rsp+0x8]
  4025b9:	mov    rdx,rbx
  4025bc:	xor    eax,eax
  4025be:	call   404230 <error@@Base+0x520>
  4025c3:	jmp    402546 <__sprintf_chk@plt+0x1186>
  4025c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4025d0:	mov    rax,QWORD PTR [rsp+0x10]
  4025d5:	mov    QWORD PTR [rbx+0x18],rax
  4025d9:	mov    rbx,QWORD PTR [rsp]
  4025dd:	mov    rdi,QWORD PTR [rbx+0x10]
  4025e1:	call   401210 <free@plt>
  4025e6:	mov    rdi,rbx
  4025e9:	call   401210 <free@plt>
  4025ee:	mov    rdi,QWORD PTR [r13+0x10]
  4025f2:	jmp    402573 <__sprintf_chk@plt+0x11b3>
  4025f7:	nop    WORD PTR [rax+rax*1+0x0]
  402600:	push   r15
  402602:	mov    r15,rdx
  402605:	push   r14
  402607:	push   r13
  402609:	push   r12
  40260b:	push   rbp
  40260c:	mov    rbp,rcx
  40260f:	push   rbx
  402610:	sub    rsp,0xc8
  402617:	mov    QWORD PTR [rsp+0x10],rdi
  40261c:	mov    DWORD PTR [rsp+0xc],esi
  402620:	mov    rcx,QWORD PTR [rcx+0x10]
  402624:	mov    rax,QWORD PTR fs:0x28
  40262d:	mov    QWORD PTR [rsp+0xb8],rax
  402635:	xor    eax,eax
  402637:	mov    r8,QWORD PTR [rcx+0x10]
  40263b:	test   si,si
  40263e:	jle    4027ed <__sprintf_chk@plt+0x142d>
  402644:	test   r8,r8
  402647:	je     4027c8 <__sprintf_chk@plt+0x1408>
  40264d:	mov    ebx,esi
  40264f:	lea    edx,[rbx-0x1]
  402652:	movzx  edx,dx
  402655:	lea    rdx,[rdx+rdx*2]
  402659:	mov    rax,rcx
  40265c:	lea    rdx,[rcx+rdx*8]
  402660:	jmp    402677 <__sprintf_chk@plt+0x12b7>
  402662:	nop    WORD PTR [rax+rax*1+0x0]
  402668:	add    rax,0x18
  40266c:	cmp    QWORD PTR [rax+0x10],0x0
  402671:	je     4027c8 <__sprintf_chk@plt+0x1408>
  402677:	cmp    rax,rdx
  40267a:	jne    402668 <__sprintf_chk@plt+0x12a8>
  40267c:	mov    rdx,QWORD PTR [rcx]
  40267f:	lea    rax,[rsp+0x30]
  402684:	cmp    WORD PTR [rsp+0xc],0x1
  40268a:	mov    QWORD PTR [rsp+0x30],rdx
  40268f:	mov    QWORD PTR [rsp],rax
  402693:	jle    402751 <__sprintf_chk@plt+0x1391>
  402699:	movzx  eax,WORD PTR [rsp+0xc]
  40269e:	lea    r14,[rsp+0x38]
  4026a3:	lea    r12d,[rax-0x2]
  4026a7:	mov    rdi,r15
  4026aa:	movzx  r12d,r12w
  4026ae:	mov    r15,r14
  4026b1:	shl    r12,0x3
  4026b5:	xor    ebx,ebx
  4026b7:	lea    r13,[rsp+0x28]
  4026bc:	mov    rax,r8
  4026bf:	mov    r14,rdi
  4026c2:	jmp    4026de <__sprintf_chk@plt+0x131e>
  4026c4:	nop    DWORD PTR [rax+0x0]
  4026c8:	add    r15,0x8
  4026cc:	cmp    r12,rbx
  4026cf:	je     40274b <__sprintf_chk@plt+0x138b>
  4026d1:	mov    rcx,QWORD PTR [rbp+0x10]
  4026d5:	mov    rdx,QWORD PTR [rsp+0x30]
  4026da:	add    rbx,0x8
  4026de:	mov    r8,QWORD PTR [r14+rbx*4+0x30]
  4026e3:	mov    rsi,QWORD PTR [r14+0x10]
  4026e7:	push   r15
  4026e9:	lea    rdi,[rbx+rbx*2+0x18]
  4026ee:	add    rdi,rcx
  4026f1:	push   r13
  4026f3:	lea    rcx,[rax+rdx*1-0x1]
  4026f8:	xor    eax,eax
  4026fa:	push   QWORD PTR [rdi+0x8]
  4026fd:	mov    r9,QWORD PTR [rdi]
  402700:	xor    edi,edi
  402702:	call   402110 <__sprintf_chk@plt+0xd50>
  402707:	add    rsp,0x18
  40270b:	test   rax,rax
  40270e:	je     4027c8 <__sprintf_chk@plt+0x1408>
  402714:	mov    rcx,QWORD PTR [rsp+0x30]
  402719:	mov    rsi,QWORD PTR [rsp+0x28]
  40271e:	sub    rsi,rcx
  402721:	test   rsi,rsi
  402724:	jle    4026c8 <__sprintf_chk@plt+0x1308>
  402726:	mov    rdx,QWORD PTR [rsp]
  40272a:	jmp    402733 <__sprintf_chk@plt+0x1373>
  40272c:	nop    DWORD PTR [rax+0x0]
  402730:	mov    rcx,QWORD PTR [rdx]
  402733:	add    rcx,rsi
  402736:	mov    QWORD PTR [rdx],rcx
  402739:	add    rdx,0x8
  40273d:	cmp    r15,rdx
  402740:	jne    402730 <__sprintf_chk@plt+0x1370>
  402742:	add    r15,0x8
  402746:	cmp    r12,rbx
  402749:	jne    4026d1 <__sprintf_chk@plt+0x1311>
  40274b:	mov    r8,rax
  40274e:	mov    r15,r14
  402751:	mov    esi,0x8
  402756:	mov    edi,0x1
  40275b:	xor    eax,eax
  40275d:	mov    QWORD PTR [rsp+0x18],r8
  402762:	call   403d60 <error@@Base+0x50>
  402767:	movsx  r14d,WORD PTR [rsp+0xc]
  40276d:	mov    rbx,QWORD PTR [rsp+0x10]
  402772:	mov    rcx,QWORD PTR [rsp]
  402776:	mov    r8,QWORD PTR [rsp+0x18]
  40277b:	mov    r9,rax
  40277e:	mov    rdx,rbp
  402781:	mov    esi,r14d
  402784:	mov    rdi,rbx
  402787:	xor    eax,eax
  402789:	call   402420 <__sprintf_chk@plt+0x1060>
  40278e:	mov    rcx,QWORD PTR [rbp+0x0]
  402792:	test   rcx,rcx
  402795:	je     4027a7 <__sprintf_chk@plt+0x13e7>
  402797:	mov    rdx,r15
  40279a:	mov    esi,r14d
  40279d:	mov    rdi,rbx
  4027a0:	xor    eax,eax
  4027a2:	call   402600 <__sprintf_chk@plt+0x1240>
  4027a7:	mov    rcx,QWORD PTR [rbp+0x8]
  4027ab:	test   rcx,rcx
  4027ae:	je     4027c8 <__sprintf_chk@plt+0x1408>
  4027b0:	mov    rdi,QWORD PTR [rsp+0x10]
  4027b5:	mov    rdx,r15
  4027b8:	mov    esi,r14d
  4027bb:	xor    eax,eax
  4027bd:	call   402600 <__sprintf_chk@plt+0x1240>
  4027c2:	nop    WORD PTR [rax+rax*1+0x0]
  4027c8:	mov    rax,QWORD PTR [rsp+0xb8]
  4027d0:	xor    rax,QWORD PTR fs:0x28
  4027d9:	jne    402803 <__sprintf_chk@plt+0x1443>
  4027db:	add    rsp,0xc8
  4027e2:	pop    rbx
  4027e3:	pop    rbp
  4027e4:	pop    r12
  4027e6:	pop    r13
  4027e8:	pop    r14
  4027ea:	pop    r15
  4027ec:	ret    
  4027ed:	mov    rax,QWORD PTR [rcx]
  4027f0:	mov    QWORD PTR [rsp+0x30],rax
  4027f5:	lea    rax,[rsp+0x30]
  4027fa:	mov    QWORD PTR [rsp],rax
  4027fe:	jmp    402751 <__sprintf_chk@plt+0x1391>
  402803:	call   401280 <__stack_chk_fail@plt>
  402808:	nop    DWORD PTR [rax+rax*1+0x0]
  402810:	push   r12
  402812:	mov    r12,rsi
  402815:	push   rbp
  402816:	mov    rbp,rdi
  402819:	push   rbx
  40281a:	sub    rsp,0x10
  40281e:	mov    rax,QWORD PTR fs:0x28
  402827:	mov    QWORD PTR [rsp+0x8],rax
  40282c:	xor    eax,eax
  40282e:	mov    rsi,QWORD PTR [rsi]
  402831:	mov    rdx,rsp
  402834:	call   402270 <__sprintf_chk@plt+0xeb0>
  402839:	mov    rdi,QWORD PTR [rip+0x5a80]        # 4082c0 <error@@Base+0x45b0>
  402840:	mov    rbx,rax
  402843:	mov    rsi,QWORD PTR [rip+0x5a6e]        # 4082b8 <error@@Base+0x45a8>
  40284a:	add    rax,rbp
  40284d:	cmp    rbx,rdi
  402850:	jge    402990 <__sprintf_chk@plt+0x15d0>
  402856:	cmp    rax,rsi
  402859:	jge    4028a1 <__sprintf_chk@plt+0x14e1>
  40285b:	lea    r8,[rsi+rbx*1]
  40285f:	mov    r10,QWORD PTR [rip+0x5a6a]        # 4082d0 <error@@Base+0x45c0>
  402866:	mov    r9,QWORD PTR [rip+0x5a5b]        # 4082c8 <error@@Base+0x45b8>
  40286d:	sub    r8,rax
  402870:	jmp    402891 <__sprintf_chk@plt+0x14d1>
  402872:	nop    WORD PTR [rax+rax*1+0x0]
  402878:	cmp    edx,0x7e
  40287b:	je     4028a1 <__sprintf_chk@plt+0x14e1>
  40287d:	inc    rbx
  402880:	inc    rax
  402883:	cmp    rbx,rdi
  402886:	je     402996 <__sprintf_chk@plt+0x15d6>
  40288c:	cmp    rbx,r8
  40288f:	je     4028a1 <__sprintf_chk@plt+0x14e1>
  402891:	mov    rdx,QWORD PTR [r10+rbx*8]
  402895:	mov    rcx,QWORD PTR [r9+rax*8]
  402899:	mov    edx,DWORD PTR [rdx+0x14]
  40289c:	cmp    DWORD PTR [rcx+0x14],edx
  40289f:	je     402878 <__sprintf_chk@plt+0x14b8>
  4028a1:	mov    r8,QWORD PTR [rip+0x5a00]        # 4082a8 <error@@Base+0x4598>
  4028a8:	cmp    rax,rsi
  4028ab:	je     402980 <__sprintf_chk@plt+0x15c0>
  4028b1:	mov    rcx,QWORD PTR [rip+0x59e8]        # 4082a0 <error@@Base+0x4590>
  4028b8:	sub    rsi,rbp
  4028bb:	cmp    rsi,rdi
  4028be:	cmovl  rsi,rdi
  4028c2:	mov    rax,QWORD PTR [rip+0x59e7]        # 4082b0 <error@@Base+0x45a0>
  4028c9:	add    rsi,QWORD PTR [r12+0x10]
  4028ce:	sub    rsi,rbx
  4028d1:	mov    rdx,rax
  4028d4:	sub    rdx,rsi
  4028d7:	inc    rdx
  4028da:	sar    rdx,1
  4028dd:	cmp    rdx,r8
  4028e0:	jle    4028e9 <__sprintf_chk@plt+0x1529>
  4028e2:	mov    QWORD PTR [rip+0x59bf],rdx        # 4082a8 <error@@Base+0x4598>
  4028e9:	add    rsi,rax
  4028ec:	sar    rsi,1
  4028ef:	mov    QWORD PTR [rsp],rsi
  4028f3:	cmp    rsi,rcx
  4028f6:	jge    4028ff <__sprintf_chk@plt+0x153f>
  4028f8:	mov    QWORD PTR [rip+0x59a1],rsi        # 4082a0 <error@@Base+0x4590>
  4028ff:	xor    eax,eax
  402901:	mov    esi,0x18
  402906:	mov    edi,0x1
  40290b:	call   403d60 <error@@Base+0x50>
  402910:	cmp    QWORD PTR [rip+0x5a00],0x0        # 408318 <error@@Base+0x4608>
  402918:	mov    WORD PTR [rax+0x10],bx
  40291c:	je     4029b0 <__sprintf_chk@plt+0x15f0>
  402922:	cmp    QWORD PTR [r12+0x18],rbp
  402927:	jg     402960 <__sprintf_chk@plt+0x15a0>
  402929:	mov    QWORD PTR [r12+0x20],rbp
  40292e:	mov    rsi,rax
  402931:	lea    rdi,[rip+0x59c8]        # 408300 <error@@Base+0x45f0>
  402938:	xor    eax,eax
  40293a:	call   4041e0 <error@@Base+0x4d0>
  40293f:	mov    rax,QWORD PTR [rsp+0x8]
  402944:	xor    rax,QWORD PTR fs:0x28
  40294d:	jne    4029d0 <__sprintf_chk@plt+0x1610>
  402953:	add    rsp,0x10
  402957:	pop    rbx
  402958:	pop    rbp
  402959:	pop    r12
  40295b:	ret    
  40295c:	nop    DWORD PTR [rax+0x0]
  402960:	mov    QWORD PTR [r12+0x18],rbp
  402965:	mov    rsi,rax
  402968:	lea    rdi,[rip+0x5991]        # 408300 <error@@Base+0x45f0>
  40296f:	xor    eax,eax
  402971:	call   404190 <error@@Base+0x480>
  402976:	jmp    40293f <__sprintf_chk@plt+0x157f>
  402978:	nop    DWORD PTR [rax+rax*1+0x0]
  402980:	lea    rcx,[rbp-0x1]
  402984:	mov    QWORD PTR [rip+0x5915],rcx        # 4082a0 <error@@Base+0x4590>
  40298b:	jmp    4028b8 <__sprintf_chk@plt+0x14f8>
  402990:	jne    4028a1 <__sprintf_chk@plt+0x14e1>
  402996:	lea    r8,[rbp+0x1]
  40299a:	mov    QWORD PTR [rip+0x5907],r8        # 4082a8 <error@@Base+0x4598>
  4029a1:	jmp    4028a8 <__sprintf_chk@plt+0x14e8>
  4029a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4029b0:	mov    QWORD PTR [r12+0x20],rbp
  4029b5:	mov    QWORD PTR [r12+0x18],rbp
  4029ba:	mov    rsi,rax
  4029bd:	lea    rdi,[rip+0x593c]        # 408300 <error@@Base+0x45f0>
  4029c4:	xor    eax,eax
  4029c6:	call   4041e0 <error@@Base+0x4d0>
  4029cb:	jmp    40293f <__sprintf_chk@plt+0x157f>
  4029d0:	call   401280 <__stack_chk_fail@plt>
  4029d5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4029e0:	endbr64 
  4029e4:	push   r12
  4029e6:	lea    eax,[rsi-0x2]
  4029e9:	push   rbp
  4029ea:	push   rbx
  4029eb:	cmp    ax,0xe
  4029ef:	ja     402a4d <__sprintf_chk@plt+0x168d>
  4029f1:	movsx  ebx,si
  4029f4:	mov    rbp,rdi
  4029f7:	mov    esi,ebx
  4029f9:	xor    eax,eax
  4029fb:	mov    r12,rdx
  4029fe:	call   402340 <__sprintf_chk@plt+0xf80>
  402a03:	mov    rcx,QWORD PTR [rbp+0x0]
  402a07:	test   rcx,rcx
  402a0a:	je     402a48 <__sprintf_chk@plt+0x1688>
  402a0c:	xor    eax,eax
  402a0e:	mov    rdx,r12
  402a11:	mov    esi,ebx
  402a13:	mov    rdi,rbp
  402a16:	call   402600 <__sprintf_chk@plt+0x1240>
  402a1b:	mov    rax,QWORD PTR [rbp+0x0]
  402a1f:	test   rax,rax
  402a22:	je     402a48 <__sprintf_chk@plt+0x1688>
  402a24:	xor    ecx,ecx
  402a26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402a30:	mov    rdx,QWORD PTR [rax+0x18]
  402a34:	test   rdx,rdx
  402a37:	je     402a3f <__sprintf_chk@plt+0x167f>
  402a39:	inc    rcx
  402a3c:	mov    QWORD PTR [rdx],rcx
  402a3f:	mov    rax,QWORD PTR [rax+0x8]
  402a43:	test   rax,rax
  402a46:	jne    402a30 <__sprintf_chk@plt+0x1670>
  402a48:	pop    rbx
  402a49:	pop    rbp
  402a4a:	pop    r12
  402a4c:	ret    
  402a4d:	lea    rdi,[rip+0x267c]        # 4050d0 <error@@Base+0x13c0>
  402a54:	xor    eax,eax
  402a56:	call   403d10 <error@@Base>
  402a5b:	nop    DWORD PTR [rax+rax*1+0x0]
  402a60:	endbr64 
  402a64:	push   r15
  402a66:	push   r14
  402a68:	push   r13
  402a6a:	push   r12
  402a6c:	mov    r12,rsi
  402a6f:	mov    esi,0x1
  402a74:	push   rbp
  402a75:	mov    rbp,rdi
  402a78:	push   rbx
  402a79:	mov    rbx,rcx
  402a7c:	sub    rsp,0x58
  402a80:	mov    QWORD PTR [rsp+0x20],rdx
  402a85:	mov    QWORD PTR [rsp+0x28],rcx
  402a8a:	lea    r14,[rsp+0x40]
  402a8f:	lea    r13,[rsp+0x38]
  402a94:	mov    rax,QWORD PTR fs:0x28
  402a9d:	mov    QWORD PTR [rsp+0x48],rax
  402aa2:	xor    eax,eax
  402aa4:	call   402340 <__sprintf_chk@plt+0xf80>
  402aa9:	mov    rdx,rbx
  402aac:	mov    esi,0x1
  402ab1:	mov    rdi,r12
  402ab4:	xor    eax,eax
  402ab6:	call   402340 <__sprintf_chk@plt+0xf80>
  402abb:	mov    rbx,QWORD PTR [rbp+0x0]
  402abf:	test   rbx,rbx
  402ac2:	je     402beb <__sprintf_chk@plt+0x182b>
  402ac8:	nop    DWORD PTR [rax+rax*1+0x0]
  402ad0:	xor    r15d,r15d
  402ad3:	mov    r10,rbp
  402ad6:	jmp    402aed <__sprintf_chk@plt+0x172d>
  402ad8:	nop    DWORD PTR [rax+rax*1+0x0]
  402ae0:	mov    rbx,QWORD PTR [rbx+0x8]
  402ae4:	test   rbx,rbx
  402ae7:	je     402b88 <__sprintf_chk@plt+0x17c8>
  402aed:	cmp    QWORD PTR [rbx+0x18],0x0
  402af2:	jne    402ae0 <__sprintf_chk@plt+0x1720>
  402af4:	mov    rax,QWORD PTR [rbx+0x10]
  402af8:	cmp    QWORD PTR [rax+0x10],r15
  402afc:	jle    402ae0 <__sprintf_chk@plt+0x1720>
  402afe:	mov    rbp,QWORD PTR [r12]
  402b02:	test   rbp,rbp
  402b05:	jne    402b19 <__sprintf_chk@plt+0x1759>
  402b07:	jmp    402ae0 <__sprintf_chk@plt+0x1720>
  402b09:	nop    DWORD PTR [rax+0x0]
  402b10:	mov    rbp,QWORD PTR [rbp+0x8]
  402b14:	test   rbp,rbp
  402b17:	je     402ae0 <__sprintf_chk@plt+0x1720>
  402b19:	cmp    QWORD PTR [rbp+0x18],0x0
  402b1e:	jne    402b10 <__sprintf_chk@plt+0x1750>
  402b20:	mov    rax,QWORD PTR [rbp+0x10]
  402b24:	cmp    QWORD PTR [rax+0x10],r15
  402b28:	jle    402b10 <__sprintf_chk@plt+0x1750>
  402b2a:	mov    rdi,QWORD PTR [rsp+0x20]
  402b2f:	mov    rdx,QWORD PTR [rbx+0x10]
  402b33:	mov    QWORD PTR [rsp+0x18],r10
  402b38:	sub    rsp,0x8
  402b3c:	mov    rcx,QWORD PTR [rdx+0x8]
  402b40:	mov    rsi,QWORD PTR [rdi+0x10]
  402b44:	push   r14
  402b46:	mov    rdi,r15
  402b49:	push   r13
  402b4b:	push   QWORD PTR [rax+0x8]
  402b4e:	mov    r9,QWORD PTR [rax]
  402b51:	mov    rax,QWORD PTR [rsp+0x48]
  402b56:	mov    rdx,QWORD PTR [rdx]
  402b59:	mov    r8,QWORD PTR [rax+0x10]
  402b5d:	xor    eax,eax
  402b5f:	call   402110 <__sprintf_chk@plt+0xd50>
  402b64:	add    rsp,0x20
  402b68:	cmp    rax,r15
  402b6b:	mov    r10,QWORD PTR [rsp+0x18]
  402b70:	jle    402b10 <__sprintf_chk@plt+0x1750>
  402b72:	mov    QWORD PTR [rsp+0x10],rbp
  402b77:	mov    QWORD PTR [rsp+0x8],rbx
  402b7c:	mov    r15,rax
  402b7f:	jmp    402b10 <__sprintf_chk@plt+0x1750>
  402b81:	nop    DWORD PTR [rax+0x0]
  402b88:	mov    rbp,r10
  402b8b:	test   r15,r15
  402b8e:	je     402c0a <__sprintf_chk@plt+0x184a>
  402b90:	mov    esi,0x8
  402b95:	mov    edi,0x1
  402b9a:	xor    eax,eax
  402b9c:	call   403d60 <error@@Base+0x50>
  402ba1:	mov    rdx,QWORD PTR [rsp+0x8]
  402ba6:	mov    rbx,rax
  402ba9:	mov    r9,rax
  402bac:	mov    r8,r15
  402baf:	mov    rcx,r13
  402bb2:	mov    esi,0x1
  402bb7:	mov    rdi,rbp
  402bba:	xor    eax,eax
  402bbc:	call   402420 <__sprintf_chk@plt+0x1060>
  402bc1:	mov    rdx,QWORD PTR [rsp+0x10]
  402bc6:	mov    r9,rbx
  402bc9:	mov    r8,r15
  402bcc:	mov    rcx,r14
  402bcf:	mov    esi,0x1
  402bd4:	mov    rdi,r12
  402bd7:	xor    eax,eax
  402bd9:	call   402420 <__sprintf_chk@plt+0x1060>
  402bde:	mov    rbx,QWORD PTR [rbp+0x0]
  402be2:	test   rbx,rbx
  402be5:	jne    402ad0 <__sprintf_chk@plt+0x1710>
  402beb:	mov    rax,QWORD PTR [rsp+0x48]
  402bf0:	xor    rax,QWORD PTR fs:0x28
  402bf9:	jne    402c32 <__sprintf_chk@plt+0x1872>
  402bfb:	add    rsp,0x58
  402bff:	pop    rbx
  402c00:	pop    rbp
  402c01:	pop    r12
  402c03:	pop    r13
  402c05:	pop    r14
  402c07:	pop    r15
  402c09:	ret    
  402c0a:	mov    rax,QWORD PTR [r10]
  402c0d:	test   rax,rax
  402c10:	je     402beb <__sprintf_chk@plt+0x182b>
  402c12:	nop    WORD PTR [rax+rax*1+0x0]
  402c18:	mov    rdx,QWORD PTR [rax+0x18]
  402c1c:	test   rdx,rdx
  402c1f:	je     402c27 <__sprintf_chk@plt+0x1867>
  402c21:	inc    r15
  402c24:	mov    QWORD PTR [rdx],r15
  402c27:	mov    rax,QWORD PTR [rax+0x8]
  402c2b:	test   rax,rax
  402c2e:	jne    402c18 <__sprintf_chk@plt+0x1858>
  402c30:	jmp    402beb <__sprintf_chk@plt+0x182b>
  402c32:	call   401280 <__stack_chk_fail@plt>
  402c37:	nop    WORD PTR [rax+rax*1+0x0]
  402c40:	endbr64 
  402c44:	push   r15
  402c46:	push   r14
  402c48:	push   r13
  402c4a:	push   r12
  402c4c:	push   rbp
  402c4d:	push   rbx
  402c4e:	sub    rsp,0x48
  402c52:	mov    QWORD PTR [rsp+0x8],rdi
  402c57:	mov    rax,QWORD PTR fs:0x28
  402c60:	mov    QWORD PTR [rsp+0x38],rax
  402c65:	xor    eax,eax
  402c67:	cmp    QWORD PTR [rsi+0x18],0xffff
  402c6f:	jg     402fd7 <__sprintf_chk@plt+0x1c17>
  402c75:	mov    rdi,QWORD PTR [rsp+0x8]
  402c7a:	mov    rbx,rsi
  402c7d:	mov    rdx,rsi
  402c80:	xor    eax,eax
  402c82:	mov    esi,0x2
  402c87:	call   402340 <__sprintf_chk@plt+0xf80>
  402c8c:	mov    rax,QWORD PTR [rbx+0x10]
  402c90:	mov    rdx,QWORD PTR [rbx+0x38]
  402c94:	mov    QWORD PTR [rip+0x5635],rax        # 4082d0 <error@@Base+0x45c0>
  402c9b:	mov    rax,QWORD PTR [rbx+0x30]
  402c9f:	mov    rbp,rdx
  402ca2:	mov    QWORD PTR [rip+0x561f],rax        # 4082c8 <error@@Base+0x45b8>
  402ca9:	mov    rax,QWORD PTR [rbx+0x18]
  402cad:	mov    QWORD PTR [rip+0x5604],rdx        # 4082b8 <error@@Base+0x45a8>
  402cb4:	sub    rbp,rax
  402cb7:	mov    QWORD PTR [rip+0x5602],rax        # 4082c0 <error@@Base+0x45b0>
  402cbe:	neg    rax
  402cc1:	mov    QWORD PTR [rip+0x55e8],rbp        # 4082b0 <error@@Base+0x45a0>
  402cc8:	mov    QWORD PTR [rip+0x55d9],rax        # 4082a8 <error@@Base+0x4598>
  402ccf:	mov    QWORD PTR [rip+0x55ca],rdx        # 4082a0 <error@@Base+0x4590>
  402cd6:	mov    rbx,0xffffffffffffffff
  402cdd:	cmp    rbp,rax
  402ce0:	jl     402e37 <__sprintf_chk@plt+0x1a77>
  402ce6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402cf0:	mov    esi,0x30
  402cf5:	mov    edi,0x1
  402cfa:	xor    eax,eax
  402cfc:	call   403d60 <error@@Base+0x50>
  402d01:	inc    rbx
  402d04:	mov    QWORD PTR [rax+0x10],rbx
  402d08:	mov    rsi,rax
  402d0b:	mov    rbp,rax
  402d0e:	lea    rdi,[rip+0x55cb]        # 4082e0 <error@@Base+0x45d0>
  402d15:	xor    eax,eax
  402d17:	call   4041e0 <error@@Base+0x4d0>
  402d1c:	mov    rax,QWORD PTR [rip+0x5595]        # 4082b8 <error@@Base+0x45a8>
  402d23:	mov    r12,rbx
  402d26:	neg    r12
  402d29:	cmp    QWORD PTR [rip+0x5590],rax        # 4082c0 <error@@Base+0x45b0>
  402d30:	jg     402f00 <__sprintf_chk@plt+0x1b40>
  402d36:	mov    rax,QWORD PTR [rip+0x5573]        # 4082b0 <error@@Base+0x45a0>
  402d3d:	mov    rdx,r12
  402d40:	cmp    rbx,rax
  402d43:	mov    r13,rax
  402d46:	cmovle r13,rbx
  402d4a:	cmp    QWORD PTR [rip+0x5557],r12        # 4082a8 <error@@Base+0x4598>
  402d51:	cmovge rdx,QWORD PTR [rip+0x554f]        # 4082a8 <error@@Base+0x4598>
  402d59:	cmp    r13,rdx
  402d5c:	jl     402d8e <__sprintf_chk@plt+0x19ce>
  402d5e:	xchg   ax,ax
  402d60:	xor    eax,eax
  402d62:	mov    rdi,r13
  402d65:	mov    rsi,rbp
  402d68:	call   402810 <__sprintf_chk@plt+0x1450>
  402d6d:	dec    r13
  402d70:	mov    rax,r12
  402d73:	cmp    QWORD PTR [rip+0x552e],r12        # 4082a8 <error@@Base+0x4598>
  402d7a:	cmovge rax,QWORD PTR [rip+0x5526]        # 4082a8 <error@@Base+0x4598>
  402d82:	cmp    r13,rax
  402d85:	jge    402d60 <__sprintf_chk@plt+0x19a0>
  402d87:	mov    rax,QWORD PTR [rip+0x5522]        # 4082b0 <error@@Base+0x45a0>
  402d8e:	lea    r12,[rax+0x1]
  402d92:	jmp    402da8 <__sprintf_chk@plt+0x19e8>
  402d94:	nop    DWORD PTR [rax+0x0]
  402d98:	mov    rdi,r12
  402d9b:	mov    rsi,rbp
  402d9e:	xor    eax,eax
  402da0:	call   402810 <__sprintf_chk@plt+0x1450>
  402da5:	inc    r12
  402da8:	cmp    QWORD PTR [rip+0x54f1],rbx        # 4082a0 <error@@Base+0x4590>
  402daf:	mov    rax,rbx
  402db2:	cmovle rax,QWORD PTR [rip+0x54e6]        # 4082a0 <error@@Base+0x4590>
  402dba:	cmp    r12,rax
  402dbd:	jle    402d98 <__sprintf_chk@plt+0x19d8>
  402dbf:	mov    rdi,QWORD PTR [rip+0x5552]        # 408318 <error@@Base+0x4608>
  402dc6:	mov    esi,0x2
  402dcb:	xor    eax,eax
  402dcd:	call   403d60 <error@@Base+0x50>
  402dd2:	mov    r15,QWORD PTR [rip+0x5527]        # 408300 <error@@Base+0x45f0>
  402dd9:	lea    r13,[rip+0x5520]        # 408300 <error@@Base+0x45f0>
  402de0:	mov    QWORD PTR [rbp+0x28],rax
  402de4:	xor    r12d,r12d
  402de7:	mov    r14,r13
  402dea:	test   r15,r15
  402ded:	je     402e20 <__sprintf_chk@plt+0x1a60>
  402def:	nop
  402df0:	mov    rsi,r15
  402df3:	mov    rdi,r14
  402df6:	xor    eax,eax
  402df8:	call   4042d0 <error@@Base+0x5c0>
  402dfd:	movzx  ecx,WORD PTR [r15+0x10]
  402e02:	mov    rax,QWORD PTR [rbp+0x28]
  402e06:	mov    rdi,r15
  402e09:	mov    WORD PTR [rax+r12*1],cx
  402e0e:	add    r12,0x2
  402e12:	call   401210 <free@plt>
  402e17:	mov    r15,QWORD PTR [r13+0x0]
  402e1b:	test   r15,r15
  402e1e:	jne    402df0 <__sprintf_chk@plt+0x1a30>
  402e20:	mov    rax,QWORD PTR [rip+0x5481]        # 4082a8 <error@@Base+0x4598>
  402e27:	mov    rbp,QWORD PTR [rip+0x5482]        # 4082b0 <error@@Base+0x45a0>
  402e2e:	cmp    rbp,rax
  402e31:	jge    402cf0 <__sprintf_chk@plt+0x1930>
  402e37:	mov    rbx,QWORD PTR [rip+0x54aa]        # 4082e8 <error@@Base+0x45d8>
  402e3e:	lea    r13,[rsp+0x18]
  402e43:	lea    r14,[rsp+0x20]
  402e48:	test   rbx,rbx
  402e4b:	jne    402e8f <__sprintf_chk@plt+0x1acf>
  402e4d:	jmp    402f90 <__sprintf_chk@plt+0x1bd0>
  402e52:	nop    WORD PTR [rax+rax*1+0x0]
  402e58:	mov    rsi,rbx
  402e5b:	xor    eax,eax
  402e5d:	lea    rdi,[rip+0x547c]        # 4082e0 <error@@Base+0x45d0>
  402e64:	call   4042d0 <error@@Base+0x5c0>
  402e69:	mov    rdi,QWORD PTR [rbx+0x28]
  402e6d:	call   401210 <free@plt>
  402e72:	mov    rdi,rbx
  402e75:	call   401210 <free@plt>
  402e7a:	mov    rbx,QWORD PTR [rip+0x5467]        # 4082e8 <error@@Base+0x45d8>
  402e81:	mov    rbp,QWORD PTR [rsp+0x18]
  402e86:	test   rbx,rbx
  402e89:	je     402f90 <__sprintf_chk@plt+0x1bd0>
  402e8f:	mov    rax,QWORD PTR [rbx+0x28]
  402e93:	mov    rdx,rbp
  402e96:	sub    rdx,QWORD PTR [rbx+0x18]
  402e9a:	mov    rsi,QWORD PTR [rbx]
  402e9d:	movzx  r12d,WORD PTR [rax+rdx*2]
  402ea2:	mov    rdi,rbp
  402ea5:	mov    rdx,r13
  402ea8:	xor    eax,eax
  402eaa:	call   402270 <__sprintf_chk@plt+0xeb0>
  402eaf:	mov    QWORD PTR [rsp+0x20],rax
  402eb4:	cmp    r12,rax
  402eb7:	jle    402e58 <__sprintf_chk@plt+0x1a98>
  402eb9:	add    rax,rbp
  402ebc:	mov    QWORD PTR [rsp+0x28],rax
  402ec1:	mov    esi,0x8
  402ec6:	mov    edi,0x1
  402ecb:	xor    eax,eax
  402ecd:	call   403d60 <error@@Base+0x50>
  402ed2:	mov    r9,rax
  402ed5:	mov    rax,QWORD PTR [rsp+0x8]
  402eda:	mov    r8,r12
  402edd:	mov    rdx,QWORD PTR [rax]
  402ee0:	mov    rdi,rax
  402ee3:	sub    r8,QWORD PTR [rsp+0x20]
  402ee8:	mov    rcx,r14
  402eeb:	mov    esi,0x2
  402ef0:	xor    eax,eax
  402ef2:	call   402420 <__sprintf_chk@plt+0x1060>
  402ef7:	jmp    402e58 <__sprintf_chk@plt+0x1a98>
  402efc:	nop    DWORD PTR [rax+0x0]
  402f00:	mov    r13,QWORD PTR [rip+0x53a9]        # 4082b0 <error@@Base+0x45a0>
  402f07:	mov    rax,rbx
  402f0a:	cmp    r12,r13
  402f0d:	mov    r14,r13
  402f10:	cmovge r14,r12
  402f14:	cmp    QWORD PTR [rip+0x5385],rbx        # 4082a0 <error@@Base+0x4590>
  402f1b:	cmovle rax,QWORD PTR [rip+0x537d]        # 4082a0 <error@@Base+0x4590>
  402f23:	cmp    r14,rax
  402f26:	jg     402f6d <__sprintf_chk@plt+0x1bad>
  402f28:	nop    DWORD PTR [rax+rax*1+0x0]
  402f30:	xor    eax,eax
  402f32:	mov    rdi,r14
  402f35:	mov    rsi,rbp
  402f38:	call   402810 <__sprintf_chk@plt+0x1450>
  402f3d:	inc    r14
  402f40:	mov    rax,rbx
  402f43:	cmp    QWORD PTR [rip+0x5356],rbx        # 4082a0 <error@@Base+0x4590>
  402f4a:	cmovle rax,QWORD PTR [rip+0x534e]        # 4082a0 <error@@Base+0x4590>
  402f52:	cmp    r14,rax
  402f55:	jle    402f30 <__sprintf_chk@plt+0x1b70>
  402f57:	mov    r13,QWORD PTR [rip+0x5352]        # 4082b0 <error@@Base+0x45a0>
  402f5e:	jmp    402f6d <__sprintf_chk@plt+0x1bad>
  402f60:	mov    rsi,rbp
  402f63:	mov    rdi,r13
  402f66:	xor    eax,eax
  402f68:	call   402810 <__sprintf_chk@plt+0x1450>
  402f6d:	dec    r13
  402f70:	mov    rax,r12
  402f73:	cmp    QWORD PTR [rip+0x532e],r12        # 4082a8 <error@@Base+0x4598>
  402f7a:	cmovge rax,QWORD PTR [rip+0x5326]        # 4082a8 <error@@Base+0x4598>
  402f82:	cmp    r13,rax
  402f85:	jge    402f60 <__sprintf_chk@plt+0x1ba0>
  402f87:	jmp    402dbf <__sprintf_chk@plt+0x19ff>
  402f8c:	nop    DWORD PTR [rax+0x0]
  402f90:	mov    rax,QWORD PTR [rsp+0x8]
  402f95:	xor    ecx,ecx
  402f97:	mov    rax,QWORD PTR [rax]
  402f9a:	test   rax,rax
  402f9d:	je     402fb8 <__sprintf_chk@plt+0x1bf8>
  402f9f:	nop
  402fa0:	mov    rdx,QWORD PTR [rax+0x18]
  402fa4:	test   rdx,rdx
  402fa7:	je     402faf <__sprintf_chk@plt+0x1bef>
  402fa9:	inc    rcx
  402fac:	mov    QWORD PTR [rdx],rcx
  402faf:	mov    rax,QWORD PTR [rax+0x8]
  402fb3:	test   rax,rax
  402fb6:	jne    402fa0 <__sprintf_chk@plt+0x1be0>
  402fb8:	mov    rax,QWORD PTR [rsp+0x38]
  402fbd:	xor    rax,QWORD PTR fs:0x28
  402fc6:	jne    402fe3 <__sprintf_chk@plt+0x1c23>
  402fc8:	add    rsp,0x48
  402fcc:	pop    rbx
  402fcd:	pop    rbp
  402fce:	pop    r12
  402fd0:	pop    r13
  402fd2:	pop    r14
  402fd4:	pop    r15
  402fd6:	ret    
  402fd7:	lea    rdi,[rip+0x2111]        # 4050ef <error@@Base+0x13df>
  402fde:	call   403d10 <error@@Base>
  402fe3:	call   401280 <__stack_chk_fail@plt>
  402fe8:	nop    DWORD PTR [rax+rax*1+0x0]
  402ff0:	endbr64 
  402ff4:	push   r12
  402ff6:	mov    r12,rdi
  402ff9:	push   rbp
  402ffa:	lea    rbp,[rdi+0x3ee0]
  403001:	push   rbx
  403002:	mov    rbx,rdi
  403005:	nop    DWORD PTR [rax]
  403008:	mov    rdi,rbx
  40300b:	xor    eax,eax
  40300d:	add    rbx,0x20
  403011:	call   404160 <error@@Base+0x450>
  403016:	cmp    rbx,rbp
  403019:	jne    403008 <__sprintf_chk@plt+0x1c48>
  40301b:	pop    rbx
  40301c:	pop    rbp
  40301d:	mov    QWORD PTR [r12+0x3ee0],0x0
  403029:	mov    QWORD PTR [r12+0x3ee8],0x0
  403035:	pop    r12
  403037:	ret    
  403038:	nop    DWORD PTR [rax+rax*1+0x0]
  403040:	endbr64 
  403044:	push   rbp
  403045:	mov    rbp,rsi
  403048:	push   rbx
  403049:	sub    rsp,0x8
  40304d:	movzx  eax,BYTE PTR [rsi]
  403050:	test   al,al
  403052:	je     4030c8 <__sprintf_chk@plt+0x1d08>
  403054:	lea    rdx,[rsi+0x1]
  403058:	xor    ecx,ecx
  40305a:	nop    WORD PTR [rax+rax*1+0x0]
  403060:	inc    rdx
  403063:	add    rcx,rax
  403066:	movzx  eax,BYTE PTR [rdx-0x1]
  40306a:	test   al,al
  40306c:	jne    403060 <__sprintf_chk@plt+0x1ca0>
  40306e:	mov    rax,rcx
  403071:	movabs rdx,0x824a4e60b3262bc5
  40307b:	mul    rdx
  40307e:	shr    rdx,0x8
  403082:	imul   rdx,rdx,0x1f7
  403089:	sub    ecx,edx
  40308b:	movsxd rcx,ecx
  40308e:	shl    rcx,0x5
  403092:	mov    rbx,QWORD PTR [rdi+rcx*1]
  403096:	test   rbx,rbx
  403099:	jne    4030a9 <__sprintf_chk@plt+0x1ce9>
  40309b:	jmp    4030b9 <__sprintf_chk@plt+0x1cf9>
  40309d:	nop    DWORD PTR [rax]
  4030a0:	mov    rbx,QWORD PTR [rbx+0x8]
  4030a4:	test   rbx,rbx
  4030a7:	je     4030b9 <__sprintf_chk@plt+0x1cf9>
  4030a9:	mov    rsi,QWORD PTR [rbx+0x10]
  4030ad:	mov    rdi,rbp
  4030b0:	call   4012f0 <strcmp@plt>
  4030b5:	test   eax,eax
  4030b7:	jne    4030a0 <__sprintf_chk@plt+0x1ce0>
  4030b9:	add    rsp,0x8
  4030bd:	mov    rax,rbx
  4030c0:	pop    rbx
  4030c1:	pop    rbp
  4030c2:	ret    
  4030c3:	nop    DWORD PTR [rax+rax*1+0x0]
  4030c8:	xor    ecx,ecx
  4030ca:	jmp    40308b <__sprintf_chk@plt+0x1ccb>
  4030cc:	nop    DWORD PTR [rax+0x0]
  4030d0:	endbr64 
  4030d4:	push   rbx
  4030d5:	mov    rdx,QWORD PTR [rsi+0x10]
  4030d9:	mov    rbx,rdi
  4030dc:	movzx  eax,BYTE PTR [rdx]
  4030df:	test   al,al
  4030e1:	je     403123 <__sprintf_chk@plt+0x1d63>
  4030e3:	inc    rdx
  4030e6:	xor    edi,edi
  4030e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4030f0:	inc    rdx
  4030f3:	add    rdi,rax
  4030f6:	movzx  eax,BYTE PTR [rdx-0x1]
  4030fa:	test   al,al
  4030fc:	jne    4030f0 <__sprintf_chk@plt+0x1d30>
  4030fe:	mov    rax,rdi
  403101:	movabs rdx,0x824a4e60b3262bc5
  40310b:	mul    rdx
  40310e:	shr    rdx,0x8
  403112:	imul   rdx,rdx,0x1f7
  403119:	sub    rdi,rdx
  40311c:	shl    rdi,0x5
  403120:	add    rdi,rbx
  403123:	xor    eax,eax
  403125:	call   404190 <error@@Base+0x480>
  40312a:	mov    rdi,QWORD PTR [rbx+0x3ee0]
  403131:	test   rdi,rdi
  403134:	je     403146 <__sprintf_chk@plt+0x1d86>
  403136:	call   401210 <free@plt>
  40313b:	mov    QWORD PTR [rbx+0x3ee0],0x0
  403146:	inc    QWORD PTR [rbx+0x3ee8]
  40314d:	pop    rbx
  40314e:	ret    
  40314f:	nop
  403150:	endbr64 
  403154:	push   rbx
  403155:	mov    rdx,QWORD PTR [rsi+0x10]
  403159:	mov    rbx,rdi
  40315c:	movzx  eax,BYTE PTR [rdx]
  40315f:	test   al,al
  403161:	je     4031a3 <__sprintf_chk@plt+0x1de3>
  403163:	inc    rdx
  403166:	xor    edi,edi
  403168:	nop    DWORD PTR [rax+rax*1+0x0]
  403170:	inc    rdx
  403173:	add    rdi,rax
  403176:	movzx  eax,BYTE PTR [rdx-0x1]
  40317a:	test   al,al
  40317c:	jne    403170 <__sprintf_chk@plt+0x1db0>
  40317e:	mov    rax,rdi
  403181:	movabs rdx,0x824a4e60b3262bc5
  40318b:	mul    rdx
  40318e:	shr    rdx,0x8
  403192:	imul   rdx,rdx,0x1f7
  403199:	sub    rdi,rdx
  40319c:	shl    rdi,0x5
  4031a0:	add    rdi,rbx
  4031a3:	xor    eax,eax
  4031a5:	call   4042d0 <error@@Base+0x5c0>
  4031aa:	mov    rdi,QWORD PTR [rbx+0x3ee0]
  4031b1:	test   rdi,rdi
  4031b4:	je     4031c6 <__sprintf_chk@plt+0x1e06>
  4031b6:	call   401210 <free@plt>
  4031bb:	mov    QWORD PTR [rbx+0x3ee0],0x0
  4031c6:	dec    QWORD PTR [rbx+0x3ee8]
  4031cd:	pop    rbx
  4031ce:	ret    
  4031cf:	nop
  4031d0:	endbr64 
  4031d4:	cmp    QWORD PTR [rdi+0x3ee0],0x0
  4031dc:	je     4031df <__sprintf_chk@plt+0x1e1f>
  4031de:	ret    
  4031df:	mov    rax,QWORD PTR [rdi+0x3ee8]
  4031e6:	test   rax,rax
  4031e9:	je     4031de <__sprintf_chk@plt+0x1e1e>
  4031eb:	push   rbx
  4031ec:	mov    esi,0x8
  4031f1:	mov    rbx,rdi
  4031f4:	mov    rdi,rax
  4031f7:	xor    eax,eax
  4031f9:	call   403d60 <error@@Base+0x50>
  4031fe:	mov    QWORD PTR [rbx+0x3ee0],rax
  403205:	mov    rsi,rbx
  403208:	lea    rdi,[rbx+0x3ee0]
  40320f:	xor    ecx,ecx
  403211:	nop    DWORD PTR [rax+0x0]
  403218:	mov    rdx,QWORD PTR [rsi]
  40321b:	test   rdx,rdx
  40321e:	je     403231 <__sprintf_chk@plt+0x1e71>
  403220:	inc    rcx
  403223:	mov    QWORD PTR [rax+rcx*8-0x8],rdx
  403228:	mov    rdx,QWORD PTR [rdx+0x8]
  40322c:	test   rdx,rdx
  40322f:	jne    403220 <__sprintf_chk@plt+0x1e60>
  403231:	add    rsi,0x20
  403235:	cmp    rsi,rdi
  403238:	jne    403218 <__sprintf_chk@plt+0x1e58>
  40323a:	pop    rbx
  40323b:	ret    
  40323c:	nop    DWORD PTR [rax+0x0]
  403240:	endbr64 
  403244:	push   r13
  403246:	mov    r13,rdi
  403249:	push   r12
  40324b:	mov    r12,rsi
  40324e:	push   rbp
  40324f:	lea    rbp,[rdi+0x3ee0]
  403256:	push   rbx
  403257:	mov    rbx,rdi
  40325a:	sub    rsp,0x8
  40325e:	xchg   ax,ax
  403260:	mov    rdi,rbx
  403263:	mov    rsi,r12
  403266:	xor    eax,eax
  403268:	add    rbx,0x20
  40326c:	call   404390 <error@@Base+0x680>
  403271:	cmp    rbx,rbp
  403274:	jne    403260 <__sprintf_chk@plt+0x1ea0>
  403276:	mov    rdi,QWORD PTR [r13+0x3ee0]
  40327d:	test   rdi,rdi
  403280:	je     403292 <__sprintf_chk@plt+0x1ed2>
  403282:	call   401210 <free@plt>
  403287:	mov    QWORD PTR [r13+0x3ee0],0x0
  403292:	mov    QWORD PTR [r13+0x3ee8],0x0
  40329d:	add    rsp,0x8
  4032a1:	pop    rbx
  4032a2:	pop    rbp
  4032a3:	pop    r12
  4032a5:	pop    r13
  4032a7:	ret    
  4032a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4032b0:	endbr64 
  4032b4:	push   r12
  4032b6:	xor    eax,eax
  4032b8:	mov    r12d,esi
  4032bb:	push   rbp
  4032bc:	mov    esi,0x18
  4032c1:	mov    ebp,edx
  4032c3:	push   rbx
  4032c4:	mov    rbx,rdi
  4032c7:	mov    edi,0x1
  4032cc:	call   403d60 <error@@Base+0x50>
  4032d1:	mov    BYTE PTR [rax+0x10],r12b
  4032d5:	mov    DWORD PTR [rax+0x14],ebp
  4032d8:	mov    rdi,rbx
  4032db:	mov    rsi,rax
  4032de:	pop    rbx
  4032df:	pop    rbp
  4032e0:	xor    eax,eax
  4032e2:	pop    r12
  4032e4:	jmp    4041e0 <error@@Base+0x4d0>
  4032e9:	nop    DWORD PTR [rax+0x0]
  4032f0:	endbr64 
  4032f4:	push   r15
  4032f6:	push   r14
  4032f8:	push   r13
  4032fa:	push   r12
  4032fc:	push   rbp
  4032fd:	push   rbx
  4032fe:	sub    rsp,0xb8
  403305:	mov    QWORD PTR [rsp+0x8],rdi
  40330a:	mov    QWORD PTR [rsp+0x20],rdx
  40330f:	mov    rdi,rsi
  403312:	mov    rsi,QWORD PTR fs:0x28
  40331b:	mov    QWORD PTR [rsp+0xa8],rsi
  403323:	xor    esi,esi
  403325:	cmp    BYTE PTR [rdx],0x0
  403328:	je     403333 <__sprintf_chk@plt+0x1f73>
  40332a:	test   rdi,rdi
  40332d:	je     4036c5 <__sprintf_chk@plt+0x2305>
  403333:	mov    rax,QWORD PTR [rsp+0x8]
  403338:	lea    rsi,[rip+0x1df8]        # 405137 <error@@Base+0x1427>
  40333f:	mov    rax,QWORD PTR [rax+0x8]
  403343:	mov    QWORD PTR [rsp+0x28],rax
  403348:	xor    eax,eax
  40334a:	call   403e10 <error@@Base+0x100>
  40334f:	mov    r12,rax
  403352:	mov    rax,QWORD PTR [rsp+0x20]
  403357:	cmp    BYTE PTR [rax],0x0
  40335a:	jne    403608 <__sprintf_chk@plt+0x2248>
  403360:	mov    rsi,QWORD PTR [rsp+0x20]
  403365:	mov    eax,0x5e
  40336a:	mov    ecx,DWORD PTR [rsi+0x4]
  40336d:	mov    rdi,r12
  403370:	test   ecx,ecx
  403372:	cmovne eax,ecx
  403375:	movzx  r15d,BYTE PTR [rsi+0x1]
  40337a:	mov    DWORD PTR [rsp+0x14],eax
  40337e:	call   4013b0 <getc@plt>
  403383:	cmp    eax,0xffffffff
  403386:	je     403477 <__sprintf_chk@plt+0x20b7>
  40338c:	mov    rsi,QWORD PTR [rip+0x4c5d]        # 407ff0 <error@@Base+0x42e0>
  403393:	movsxd rdx,eax
  403396:	movsx  rcx,BYTE PTR [rsi+rdx*1]
  40339b:	mov    rbx,rcx
  40339e:	test   rcx,rcx
  4033a1:	jle    4036f2 <__sprintf_chk@plt+0x2332>
  4033a7:	lea    rsi,[rsp+0x3c]
  4033ac:	xor    ebp,ebp
  4033ae:	lea    r13,[rsp+0x40]
  4033b3:	mov    QWORD PTR [rsp+0x18],rsi
  4033b8:	jmp    4033fe <__sprintf_chk@plt+0x203e>
  4033ba:	nop    WORD PTR [rax+rax*1+0x0]
  4033c0:	mov    rdi,QWORD PTR [rsp+0x8]
  4033c5:	movsx  esi,bpl
  4033c9:	xor    eax,eax
  4033cb:	call   4032b0 <__sprintf_chk@plt+0x1ef0>
  4033d0:	mov    rdi,r12
  4033d3:	xor    ebp,ebp
  4033d5:	call   4013b0 <getc@plt>
  4033da:	cmp    eax,0xffffffff
  4033dd:	je     403477 <__sprintf_chk@plt+0x20b7>
  4033e3:	mov    rcx,QWORD PTR [rip+0x4c06]        # 407ff0 <error@@Base+0x42e0>
  4033ea:	movsxd rdx,eax
  4033ed:	movsx  rcx,BYTE PTR [rcx+rdx*1]
  4033f2:	mov    rbx,rcx
  4033f5:	test   rcx,rcx
  4033f8:	jle    4036f2 <__sprintf_chk@plt+0x2332>
  4033fe:	mov    BYTE PTR [rsp+0x40],al
  403402:	cmp    rcx,0x1
  403406:	je     403430 <__sprintf_chk@plt+0x2070>
  403408:	lea    r14,[rcx-0x1]
  40340c:	lea    rdi,[r13+0x1]
  403410:	mov    r8,r12
  403413:	mov    rcx,r14
  403416:	mov    edx,0x1
  40341b:	mov    esi,0x3
  403420:	call   401340 <__fread_chk@plt>
  403425:	cdqe   
  403427:	cmp    r14,rax
  40342a:	jne    403700 <__sprintf_chk@plt+0x2340>
  403430:	mov    rdx,QWORD PTR [rsp+0x18]
  403435:	mov    esi,0x4
  40343a:	mov    rdi,r13
  40343d:	call   4012d0 <utf8proc_iterate@plt>
  403442:	cmp    eax,ebx
  403444:	jne    4036e0 <__sprintf_chk@plt+0x2320>
  40344a:	mov    edx,DWORD PTR [rsp+0x3c]
  40344e:	test   r15b,r15b
  403451:	je     4033c0 <__sprintf_chk@plt+0x2000>
  403457:	cmp    DWORD PTR [rsp+0x14],edx
  40345b:	jne    4033c0 <__sprintf_chk@plt+0x2000>
  403461:	mov    rdi,r12
  403464:	mov    ebp,0x1
  403469:	call   4013b0 <getc@plt>
  40346e:	cmp    eax,0xffffffff
  403471:	jne    4033e3 <__sprintf_chk@plt+0x2023>
  403477:	xor    eax,eax
  403479:	mov    rdi,r12
  40347c:	call   403b80 <__sprintf_chk@plt+0x27c0>
  403481:	mov    rax,QWORD PTR [rsp+0x20]
  403486:	cmp    BYTE PTR [rax+0x9],0x0
  40348a:	je     403590 <__sprintf_chk@plt+0x21d0>
  403490:	mov    rax,QWORD PTR [rsp+0x28]
  403495:	test   rax,rax
  403498:	je     4036b8 <__sprintf_chk@plt+0x22f8>
  40349e:	mov    rbp,QWORD PTR [rax+0x8]
  4034a2:	test   rbp,rbp
  4034a5:	je     403590 <__sprintf_chk@plt+0x21d0>
  4034ab:	mov    r12,rbp
  4034ae:	jmp    4034ba <__sprintf_chk@plt+0x20fa>
  4034b0:	mov    r12,QWORD PTR [r12+0x8]
  4034b5:	test   r12,r12
  4034b8:	je     403503 <__sprintf_chk@plt+0x2143>
  4034ba:	mov    ebx,DWORD PTR [r12+0x14]
  4034bf:	mov    edi,ebx
  4034c1:	call   401230 <utf8proc_get_property@plt>
  4034c6:	cmp    ebx,0xd
  4034c9:	ja     4035f0 <__sprintf_chk@plt+0x2230>
  4034cf:	cmp    ebx,0xb
  4034d2:	jae    4034f0 <__sprintf_chk@plt+0x2130>
  4034d4:	cmp    ebx,0x9
  4034d7:	je     4034f0 <__sprintf_chk@plt+0x2130>
  4034d9:	cmp    ebx,0xa
  4034dc:	je     4034b0 <__sprintf_chk@plt+0x20f0>
  4034de:	movsx  eax,WORD PTR [rax]
  4034e1:	sub    eax,0x17
  4034e4:	cmp    eax,0x2
  4034e7:	ja     4034b0 <__sprintf_chk@plt+0x20f0>
  4034e9:	nop    DWORD PTR [rax+0x0]
  4034f0:	mov    DWORD PTR [r12+0x14],0x20
  4034f9:	mov    r12,QWORD PTR [r12+0x8]
  4034fe:	test   r12,r12
  403501:	jne    4034ba <__sprintf_chk@plt+0x20fa>
  403503:	mov    r13,QWORD PTR [rsp+0x8]
  403508:	jmp    403529 <__sprintf_chk@plt+0x2169>
  40350a:	nop    WORD PTR [rax+rax*1+0x0]
  403510:	test   r12b,r12b
  403513:	jne    40351a <__sprintf_chk@plt+0x215a>
  403515:	cmp    eax,0xa
  403518:	je     403570 <__sprintf_chk@plt+0x21b0>
  40351a:	cmp    eax,0xa
  40351d:	setne  r12b
  403521:	mov    rbp,rbx
  403524:	test   rbx,rbx
  403527:	je     403590 <__sprintf_chk@plt+0x21d0>
  403529:	mov    eax,DWORD PTR [rbp+0x14]
  40352c:	mov    rbx,QWORD PTR [rbp+0x8]
  403530:	cmp    eax,0x20
  403533:	jne    403510 <__sprintf_chk@plt+0x2150>
  403535:	test   r12b,r12b
  403538:	je     403550 <__sprintf_chk@plt+0x2190>
  40353a:	test   rbx,rbx
  40353d:	je     403550 <__sprintf_chk@plt+0x2190>
  40353f:	mov    edx,DWORD PTR [rbx+0x14]
  403542:	cmp    edx,0x20
  403545:	je     403550 <__sprintf_chk@plt+0x2190>
  403547:	cmp    edx,0xa
  40354a:	jne    40351a <__sprintf_chk@plt+0x215a>
  40354c:	nop    DWORD PTR [rax+0x0]
  403550:	test   rbx,rbx
  403553:	je     403570 <__sprintf_chk@plt+0x21b0>
  403555:	test   r12b,r12b
  403558:	je     403570 <__sprintf_chk@plt+0x21b0>
  40355a:	cmp    DWORD PTR [rbx+0x14],0x20
  40355e:	jne    403570 <__sprintf_chk@plt+0x21b0>
  403560:	movzx  eax,BYTE PTR [rbp+0x10]
  403564:	or     BYTE PTR [rbx+0x10],al
  403567:	nop    WORD PTR [rax+rax*1+0x0]
  403570:	mov    rsi,rbp
  403573:	mov    rdi,r13
  403576:	xor    eax,eax
  403578:	call   4042d0 <error@@Base+0x5c0>
  40357d:	mov    rdi,rbp
  403580:	call   401210 <free@plt>
  403585:	mov    rbp,rbx
  403588:	test   rbx,rbx
  40358b:	jne    403529 <__sprintf_chk@plt+0x2169>
  40358d:	nop    DWORD PTR [rax]
  403590:	mov    rax,QWORD PTR [rsp+0x20]
  403595:	cmp    BYTE PTR [rax+0xa],0x0
  403599:	je     4035c4 <__sprintf_chk@plt+0x2204>
  40359b:	mov    rax,QWORD PTR [rsp+0x28]
  4035a0:	test   rax,rax
  4035a3:	je     4036a8 <__sprintf_chk@plt+0x22e8>
  4035a9:	mov    rbx,QWORD PTR [rax+0x8]
  4035ad:	jmp    4035bf <__sprintf_chk@plt+0x21ff>
  4035af:	nop
  4035b0:	mov    edi,DWORD PTR [rbx+0x14]
  4035b3:	call   4012a0 <utf8proc_tolower@plt>
  4035b8:	mov    DWORD PTR [rbx+0x14],eax
  4035bb:	mov    rbx,QWORD PTR [rbx+0x8]
  4035bf:	test   rbx,rbx
  4035c2:	jne    4035b0 <__sprintf_chk@plt+0x21f0>
  4035c4:	mov    rax,QWORD PTR [rsp+0xa8]
  4035cc:	xor    rax,QWORD PTR fs:0x28
  4035d5:	jne    40370e <__sprintf_chk@plt+0x234e>
  4035db:	add    rsp,0xb8
  4035e2:	pop    rbx
  4035e3:	pop    rbp
  4035e4:	pop    r12
  4035e6:	pop    r13
  4035e8:	pop    r14
  4035ea:	pop    r15
  4035ec:	ret    
  4035ed:	nop    DWORD PTR [rax]
  4035f0:	cmp    ebx,0xa0
  4035f6:	jne    4034de <__sprintf_chk@plt+0x211e>
  4035fc:	jmp    4034f0 <__sprintf_chk@plt+0x2130>
  403601:	nop    DWORD PTR [rax+0x0]
  403608:	lea    r13,[rsp+0x40]
  40360d:	mov    rdx,r12
  403610:	mov    esi,0x63
  403615:	mov    rdi,r13
  403618:	call   4012c0 <fgets@plt>
  40361d:	test   rax,rax
  403620:	je     40363c <__sprintf_chk@plt+0x227c>
  403622:	mov    ecx,0x33
  403627:	lea    rdi,[rip+0x1b52]        # 405180 <error@@Base+0x1470>
  40362e:	mov    rsi,r13
  403631:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  403633:	seta   al
  403636:	sbb    al,0x0
  403638:	test   al,al
  40363a:	je     403658 <__sprintf_chk@plt+0x2298>
  40363c:	mov    rdi,r12
  40363f:	call   401290 <rewind@plt>
  403644:	xor    eax,eax
  403646:	mov    rsi,QWORD PTR [rsp+0x20]
  40364b:	mov    BYTE PTR [rsi+0xb],al
  40364e:	jmp    403360 <__sprintf_chk@plt+0x1fa0>
  403653:	nop    DWORD PTR [rax+rax*1+0x0]
  403658:	xor    ebx,ebx
  40365a:	lea    rbp,[rip+0x1b57]        # 4051b8 <error@@Base+0x14a8>
  403661:	nop    DWORD PTR [rax+0x0]
  403668:	mov    rdx,r12
  40366b:	mov    esi,0x63
  403670:	mov    rdi,r13
  403673:	call   4012c0 <fgets@plt>
  403678:	test   rax,rax
  40367b:	je     40369b <__sprintf_chk@plt+0x22db>
  40367d:	mov    ecx,0x38
  403682:	mov    rsi,r13
  403685:	mov    rdi,rbp
  403688:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40368a:	seta   al
  40368d:	sbb    al,0x0
  40368f:	test   al,al
  403691:	jne    403668 <__sprintf_chk@plt+0x22a8>
  403693:	inc    ebx
  403695:	cmp    bx,0x2
  403699:	jne    403668 <__sprintf_chk@plt+0x22a8>
  40369b:	mov    eax,0x1
  4036a0:	jmp    403646 <__sprintf_chk@plt+0x2286>
  4036a2:	nop    WORD PTR [rax+rax*1+0x0]
  4036a8:	mov    rax,QWORD PTR [rsp+0x8]
  4036ad:	mov    rbx,QWORD PTR [rax]
  4036b0:	jmp    4035bf <__sprintf_chk@plt+0x21ff>
  4036b5:	nop    DWORD PTR [rax]
  4036b8:	mov    rax,QWORD PTR [rsp+0x8]
  4036bd:	mov    rbp,QWORD PTR [rax]
  4036c0:	jmp    4034a2 <__sprintf_chk@plt+0x20e2>
  4036c5:	lea    rsi,[rip+0x1a3b]        # 405107 <error@@Base+0x13f7>
  4036cc:	lea    rdi,[rip+0x1a3e]        # 405111 <error@@Base+0x1401>
  4036d3:	xor    eax,eax
  4036d5:	call   403dc0 <error@@Base+0xb0>
  4036da:	nop    WORD PTR [rax+rax*1+0x0]
  4036e0:	movsxd rdi,eax
  4036e3:	call   401390 <utf8proc_errmsg@plt>
  4036e8:	mov    rdi,rax
  4036eb:	xor    eax,eax
  4036ed:	call   403d10 <error@@Base>
  4036f2:	lea    rdi,[rip+0x1a28]        # 405121 <error@@Base+0x1411>
  4036f9:	xor    eax,eax
  4036fb:	call   403d10 <error@@Base>
  403700:	lea    rdi,[rip+0x1a32]        # 405139 <error@@Base+0x1429>
  403707:	xor    eax,eax
  403709:	call   403d10 <error@@Base>
  40370e:	call   401280 <__stack_chk_fail@plt>
  403713:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40371e:	xchg   ax,ax
  403720:	endbr64 
  403724:	sub    rsp,0x8
  403728:	call   401240 <utf8proc_encode_char@plt>
  40372d:	test   rax,rax
  403730:	jle    403737 <__sprintf_chk@plt+0x2377>
  403732:	add    rsp,0x8
  403736:	ret    
  403737:	lea    rdi,[rip+0x1a13]        # 405151 <error@@Base+0x1441>
  40373e:	xor    eax,eax
  403740:	call   403d10 <error@@Base>
  403745:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  403750:	endbr64 
  403754:	push   r13
  403756:	xor    r13d,r13d
  403759:	push   r12
  40375b:	mov    r12,rdx
  40375e:	push   rbp
  40375f:	mov    ebp,esi
  403761:	push   rbx
  403762:	mov    rbx,rdx
  403765:	sub    rsp,0x18
  403769:	test   dil,dil
  40376c:	jne    403868 <__sprintf_chk@plt+0x24a8>
  403772:	cmp    ebp,0xa
  403775:	jne    4037b0 <__sprintf_chk@plt+0x23f0>
  403777:	test   cl,cl
  403779:	lea    rax,[rip+0x1ac9]        # 405249 <error@@Base+0x1539>
  403780:	lea    rcx,[rip+0x19e1]        # 405168 <error@@Base+0x1458>
  403787:	cmove  rcx,rax
  40378b:	add    rsp,0x18
  40378f:	mov    rdi,rbx
  403792:	pop    rbx
  403793:	pop    rbp
  403794:	pop    r12
  403796:	mov    rdx,0xffffffffffffffff
  40379d:	mov    esi,0x1
  4037a2:	xor    eax,eax
  4037a4:	pop    r13
  4037a6:	jmp    4013c0 <__sprintf_chk@plt>
  4037ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4037b0:	mov    edi,ebp
  4037b2:	call   401230 <utf8proc_get_property@plt>
  4037b7:	cmp    ebp,0x20
  4037ba:	je     4037d6 <__sprintf_chk@plt+0x2416>
  4037bc:	movzx  eax,WORD PTR [rax]
  4037bf:	cmp    ax,0x1d
  4037c3:	ja     403828 <__sprintf_chk@plt+0x2468>
  4037c5:	mov    edx,0x1
  4037ca:	shlx   rax,rdx,rax
  4037cf:	test   eax,0x207ffffe
  4037d4:	je     403828 <__sprintf_chk@plt+0x2468>
  4037d6:	mov    edi,ebp
  4037d8:	call   401310 <utf8proc_category@plt>
  4037dd:	sub    eax,0x6
  4037e0:	cmp    eax,0x2
  4037e3:	ja     403800 <__sprintf_chk@plt+0x2440>
  4037e5:	mov    rsi,rbx
  4037e8:	mov    edi,0x25cc
  4037ed:	xor    eax,eax
  4037ef:	call   403720 <__sprintf_chk@plt+0x2360>
  4037f4:	cbw    
  4037f6:	add    r13d,eax
  4037f9:	movsx  rbx,r13w
  4037fd:	add    rbx,r12
  403800:	mov    rsi,rbx
  403803:	mov    edi,ebp
  403805:	xor    eax,eax
  403807:	call   403720 <__sprintf_chk@plt+0x2360>
  40380c:	cbw    
  40380e:	add    r13d,eax
  403811:	movsx  r13,r13w
  403815:	mov    BYTE PTR [r12+r13*1],0x0
  40381a:	add    rsp,0x18
  40381e:	pop    rbx
  40381f:	pop    rbp
  403820:	pop    r12
  403822:	pop    r13
  403824:	ret    
  403825:	nop    DWORD PTR [rax]
  403828:	mov    r8d,ebp
  40382b:	lea    rcx,[rip+0x193b]        # 40516d <error@@Base+0x145d>
  403832:	cmp    ebp,0xff
  403838:	jbe    403841 <__sprintf_chk@plt+0x2481>
  40383a:	lea    rcx,[rip+0x1933]        # 405174 <error@@Base+0x1464>
  403841:	add    rsp,0x18
  403845:	mov    rdi,rbx
  403848:	pop    rbx
  403849:	pop    rbp
  40384a:	pop    r12
  40384c:	mov    rdx,0xffffffffffffffff
  403853:	mov    esi,0x1
  403858:	xor    eax,eax
  40385a:	pop    r13
  40385c:	jmp    4013c0 <__sprintf_chk@plt>
  403861:	nop    DWORD PTR [rax+0x0]
  403868:	mov    rsi,rdx
  40386b:	mov    edi,0x5e
  403870:	xor    eax,eax
  403872:	mov    DWORD PTR [rsp+0xc],ecx
  403876:	call   403720 <__sprintf_chk@plt+0x2360>
  40387b:	movsx  r13w,al
  403880:	movsx  rax,al
  403884:	lea    rbx,[r12+rax*1]
  403888:	mov    ecx,DWORD PTR [rsp+0xc]
  40388c:	jmp    403772 <__sprintf_chk@plt+0x23b2>
  403891:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40389c:	nop    DWORD PTR [rax+0x0]
  4038a0:	endbr64 
  4038a4:	push   r12
  4038a6:	push   rbp
  4038a7:	mov    rbp,rdi
  4038aa:	mov    rdi,rsi
  4038ad:	push   rbx
  4038ae:	lea    rsi,[rip+0x18c6]        # 40517b <error@@Base+0x146b>
  4038b5:	mov    rbx,rdx
  4038b8:	sub    rsp,0x20
  4038bc:	mov    rax,QWORD PTR fs:0x28
  4038c5:	mov    QWORD PTR [rsp+0x18],rax
  4038ca:	xor    eax,eax
  4038cc:	call   403e10 <error@@Base+0x100>
  4038d1:	mov    r12,rax
  4038d4:	test   rbx,rbx
  4038d7:	je     40392b <__sprintf_chk@plt+0x256b>
  4038d9:	mov    rcx,rax
  4038dc:	mov    edx,0x37
  4038e1:	mov    esi,0x1
  4038e6:	lea    rdi,[rip+0x1893]        # 405180 <error@@Base+0x1470>
  4038ed:	call   401370 <fwrite@plt>
  4038f2:	mov    rcx,r12
  4038f5:	mov    edx,0x37
  4038fa:	mov    esi,0x1
  4038ff:	lea    rdi,[rip+0x18b2]        # 4051b8 <error@@Base+0x14a8>
  403906:	call   401370 <fwrite@plt>
  40390b:	mov    rdi,r12
  40390e:	xor    eax,eax
  403910:	call   rbx
  403912:	mov    rcx,r12
  403915:	mov    edx,0x37
  40391a:	mov    esi,0x1
  40391f:	lea    rdi,[rip+0x1892]        # 4051b8 <error@@Base+0x14a8>
  403926:	call   401370 <fwrite@plt>
  40392b:	mov    rbx,QWORD PTR [rbp+0x0]
  40392f:	test   rbx,rbx
  403932:	je     403967 <__sprintf_chk@plt+0x25a7>
  403934:	lea    rbp,[rsp+0xf]
  403939:	nop    DWORD PTR [rax+0x0]
  403940:	mov    esi,DWORD PTR [rbx+0x14]
  403943:	movsx  edi,BYTE PTR [rbx+0x10]
  403947:	xor    ecx,ecx
  403949:	mov    rdx,rbp
  40394c:	xor    eax,eax
  40394e:	call   403750 <__sprintf_chk@plt+0x2390>
  403953:	mov    rsi,r12
  403956:	mov    rdi,rbp
  403959:	call   4012b0 <fputs@plt>
  40395e:	mov    rbx,QWORD PTR [rbx+0x8]
  403962:	test   rbx,rbx
  403965:	jne    403940 <__sprintf_chk@plt+0x2580>
  403967:	xor    eax,eax
  403969:	mov    rdi,r12
  40396c:	call   403b80 <__sprintf_chk@plt+0x27c0>
  403971:	mov    rax,QWORD PTR [rsp+0x18]
  403976:	xor    rax,QWORD PTR fs:0x28
  40397f:	jne    40398a <__sprintf_chk@plt+0x25ca>
  403981:	add    rsp,0x20
  403985:	pop    rbx
  403986:	pop    rbp
  403987:	pop    r12
  403989:	ret    
  40398a:	call   401280 <__stack_chk_fail@plt>
  40398f:	nop
  403990:	endbr64 
  403994:	push   r14
  403996:	push   r13
  403998:	push   r12
  40399a:	push   rbp
  40399b:	push   rbx
  40399c:	sub    rsp,0x10
  4039a0:	mov    rax,QWORD PTR fs:0x28
  4039a9:	mov    QWORD PTR [rsp+0x8],rax
  4039ae:	xor    eax,eax
  4039b0:	cmp    BYTE PTR [rsi],0x0
  4039b3:	mov    DWORD PTR [rsp+0x4],0x0
  4039bb:	je     403a10 <__sprintf_chk@plt+0x2650>
  4039bd:	mov    r14,rdi
  4039c0:	mov    rbp,rsi
  4039c3:	lea    r13,[rsp+0x4]
  4039c8:	mov    r12,0xffffffffffffffff
  4039cf:	jmp    4039f4 <__sprintf_chk@plt+0x2634>
  4039d1:	nop    DWORD PTR [rax+0x0]
  4039d8:	mov    edx,DWORD PTR [rsp+0x4]
  4039dc:	movsxd rbx,ebx
  4039df:	xor    esi,esi
  4039e1:	xor    eax,eax
  4039e3:	mov    rdi,r14
  4039e6:	add    rbp,rbx
  4039e9:	call   4032b0 <__sprintf_chk@plt+0x1ef0>
  4039ee:	cmp    BYTE PTR [rbp+0x0],0x0
  4039f2:	je     403a10 <__sprintf_chk@plt+0x2650>
  4039f4:	mov    rdx,r13
  4039f7:	mov    rsi,r12
  4039fa:	mov    rdi,rbp
  4039fd:	call   4012d0 <utf8proc_iterate@plt>
  403a02:	mov    rbx,rax
  403a05:	test   eax,eax
  403a07:	jg     4039d8 <__sprintf_chk@plt+0x2618>
  403a09:	xor    eax,eax
  403a0b:	jmp    403a15 <__sprintf_chk@plt+0x2655>
  403a0d:	nop    DWORD PTR [rax]
  403a10:	mov    eax,0x1
  403a15:	mov    rcx,QWORD PTR [rsp+0x8]
  403a1a:	xor    rcx,QWORD PTR fs:0x28
  403a23:	jne    403a32 <__sprintf_chk@plt+0x2672>
  403a25:	add    rsp,0x10
  403a29:	pop    rbx
  403a2a:	pop    rbp
  403a2b:	pop    r12
  403a2d:	pop    r13
  403a2f:	pop    r14
  403a31:	ret    
  403a32:	call   401280 <__stack_chk_fail@plt>
  403a37:	nop    WORD PTR [rax+rax*1+0x0]
  403a40:	push   rbp
  403a41:	push   rbx
  403a42:	mov    ebx,edi
  403a44:	movsx  ebx,bx
  403a47:	sub    rsp,0x78
  403a4b:	mov    rax,QWORD PTR fs:0x28
  403a54:	mov    QWORD PTR [rsp+0x68],rax
  403a59:	xor    eax,eax
  403a5b:	mov    rbp,rsp
  403a5e:	call   401250 <getpid@plt>
  403a63:	mov    r9d,eax
  403a66:	sub    rsp,0x8
  403a6a:	mov    rax,0x40c640
  403a71:	push   rbx
  403a72:	mov    r8,QWORD PTR [rax]
  403a75:	lea    rcx,[rip+0x1774]        # 4051f0 <error@@Base+0x14e0>
  403a7c:	mov    edx,0x64
  403a81:	mov    esi,0x1
  403a86:	mov    rdi,rbp
  403a89:	xor    eax,eax
  403a8b:	call   4013c0 <__sprintf_chk@plt>
  403a90:	mov    rdi,rbp
  403a93:	call   4013a0 <strdup@plt>
  403a98:	pop    rdx
  403a99:	pop    rcx
  403a9a:	mov    rdx,QWORD PTR [rsp+0x68]
  403a9f:	xor    rdx,QWORD PTR fs:0x28
  403aa8:	jne    403ab1 <__sprintf_chk@plt+0x26f1>
  403aaa:	add    rsp,0x78
  403aae:	pop    rbx
  403aaf:	pop    rbp
  403ab0:	ret    
  403ab1:	call   401280 <__stack_chk_fail@plt>
  403ab6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403ac0:	push   r12
  403ac2:	mov    rax,0x40c648
  403ac9:	mov    r12d,edi
  403acc:	push   rbp
  403acd:	push   rbx
  403ace:	mov    rdx,QWORD PTR [rax]
  403ad1:	test   rdx,rdx
  403ad4:	je     403ada <__sprintf_chk@plt+0x271a>
  403ad6:	xor    eax,eax
  403ad8:	call   rdx
  403ada:	cmp    WORD PTR [rip+0x4840],0x0        # 408322 <error@@Base+0x4612>
  403ae2:	jle    403b1a <__sprintf_chk@plt+0x275a>
  403ae4:	mov    ebx,0x1
  403ae9:	nop    DWORD PTR [rax+0x0]
  403af0:	movsx  edi,bx
  403af3:	xor    eax,eax
  403af5:	call   403a40 <__sprintf_chk@plt+0x2680>
  403afa:	mov    rdi,rax
  403afd:	mov    rbp,rax
  403b00:	xor    eax,eax
  403b02:	call   401220 <unlink@plt>
  403b07:	inc    ebx
  403b09:	mov    rdi,rbp
  403b0c:	call   401210 <free@plt>
  403b11:	cmp    bx,WORD PTR [rip+0x480a]        # 408322 <error@@Base+0x4612>
  403b18:	jle    403af0 <__sprintf_chk@plt+0x2730>
  403b1a:	mov    edi,r12d
  403b1d:	call   401360 <exit@plt>
  403b22:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  403b2d:	nop    DWORD PTR [rax]
  403b30:	endbr64 
  403b34:	movzx  edx,BYTE PTR [rdi]
  403b37:	movzx  ecx,BYTE PTR [rsi]
  403b3a:	test   dl,dl
  403b3c:	je     403b63 <__sprintf_chk@plt+0x27a3>
  403b3e:	cmp    cl,dl
  403b40:	jne    403b69 <__sprintf_chk@plt+0x27a9>
  403b42:	xor    eax,eax
  403b44:	jmp    403b54 <__sprintf_chk@plt+0x2794>
  403b46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403b50:	cmp    dl,cl
  403b52:	jne    403b69 <__sprintf_chk@plt+0x27a9>
  403b54:	inc    rax
  403b57:	movzx  edx,BYTE PTR [rdi+rax*1]
  403b5b:	movzx  ecx,BYTE PTR [rsi+rax*1]
  403b5f:	test   dl,dl
  403b61:	jne    403b50 <__sprintf_chk@plt+0x2790>
  403b63:	test   cl,cl
  403b65:	je     403b78 <__sprintf_chk@plt+0x27b8>
  403b67:	xor    edx,edx
  403b69:	cmp    dl,cl
  403b6b:	sbb    eax,eax
  403b6d:	or     eax,0x1
  403b70:	ret    
  403b71:	nop    DWORD PTR [rax+0x0]
  403b78:	xor    eax,eax
  403b7a:	ret    
  403b7b:	nop    DWORD PTR [rax+rax*1+0x0]
  403b80:	endbr64 
  403b84:	mov    rax,QWORD PTR [rip+0x444d]        # 407fd8 <error@@Base+0x42c8>
  403b8b:	cmp    QWORD PTR [rax],rdi
  403b8e:	je     403ba8 <__sprintf_chk@plt+0x27e8>
  403b90:	mov    rax,QWORD PTR [rip+0x4439]        # 407fd0 <error@@Base+0x42c0>
  403b97:	cmp    QWORD PTR [rax],rdi
  403b9a:	je     403ba8 <__sprintf_chk@plt+0x27e8>
  403b9c:	jmp    401260 <fclose@plt>
  403ba1:	nop    DWORD PTR [rax+0x0]
  403ba8:	ret    
  403ba9:	nop    DWORD PTR [rax+0x0]
  403bb0:	endbr64 
  403bb4:	sub    rsp,0xa8
  403bbb:	mov    rsi,rdi
  403bbe:	mov    rdx,rsp
  403bc1:	mov    edi,0x1
  403bc6:	mov    rax,QWORD PTR fs:0x28
  403bcf:	mov    QWORD PTR [rsp+0x98],rax
  403bd7:	xor    eax,eax
  403bd9:	call   401320 <__xstat@plt>
  403bde:	test   eax,eax
  403be0:	sete   al
  403be3:	mov    rcx,QWORD PTR [rsp+0x98]
  403beb:	xor    rcx,QWORD PTR fs:0x28
  403bf4:	jne    403bfe <__sprintf_chk@plt+0x283e>
  403bf6:	add    rsp,0xa8
  403bfd:	ret    
  403bfe:	call   401280 <__stack_chk_fail@plt>
  403c03:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  403c0e:	xchg   ax,ax
  403c10:	endbr64 
  403c14:	movzx  eax,WORD PTR [rip+0x4707]        # 408322 <error@@Base+0x4612>
  403c1b:	push   rbx
  403c1c:	lea    edi,[rax+0x1]
  403c1f:	mov    WORD PTR [rip+0x46fc],di        # 408322 <error@@Base+0x4612>
  403c26:	xor    eax,eax
  403c28:	movsx  edi,di
  403c2b:	call   403a40 <__sprintf_chk@plt+0x2680>
  403c30:	mov    rbx,rax
  403c33:	mov    rdi,rax
  403c36:	xor    eax,eax
  403c38:	call   401220 <unlink@plt>
  403c3d:	mov    rax,rbx
  403c40:	pop    rbx
  403c41:	ret    
  403c42:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  403c4d:	nop    DWORD PTR [rax]
  403c50:	endbr64 
  403c54:	push   rbx
  403c55:	mov    rbx,rdi
  403c58:	call   401270 <strlen@plt>
  403c5d:	lea    ecx,[rax-0x1]
  403c60:	movsx  rdx,cx
  403c64:	test   cx,cx
  403c67:	js     403c93 <__sprintf_chk@plt+0x28d3>
  403c69:	cmp    BYTE PTR [rbx+rdx*1],0x2f
  403c6d:	je     403c93 <__sprintf_chk@plt+0x28d3>
  403c6f:	sub    eax,0x2
  403c72:	movsx  rdx,ax
  403c76:	jmp    403c8e <__sprintf_chk@plt+0x28ce>
  403c78:	nop    DWORD PTR [rax+rax*1+0x0]
  403c80:	lea    rax,[rdx-0x1]
  403c84:	cmp    BYTE PTR [rbx+rax*1+0x1],0x2f
  403c89:	je     403c93 <__sprintf_chk@plt+0x28d3>
  403c8b:	mov    rdx,rax
  403c8e:	test   dx,dx
  403c91:	jns    403c80 <__sprintf_chk@plt+0x28c0>
  403c93:	lea    rax,[rbx+rdx*1+0x1]
  403c98:	pop    rbx
  403c99:	ret    
  403c9a:	nop    WORD PTR [rax+rax*1+0x0]
  403ca0:	endbr64 
  403ca4:	push   rax
  403ca5:	pop    rax
  403ca6:	xor    edi,edi
  403ca8:	xor    eax,eax
  403caa:	sub    rsp,0x8
  403cae:	call   403ac0 <__sprintf_chk@plt+0x2700>
  403cb3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  403cbe:	xchg   ax,ax
  403cc0:	push   rax
  403cc1:	pop    rax
  403cc2:	sub    rsp,0x8
  403cc6:	mov    rax,0x40c638
  403ccd:	mov    rdx,QWORD PTR [rax]
  403cd0:	test   rdx,rdx
  403cd3:	je     403ce0 <__sprintf_chk@plt+0x2920>
  403cd5:	xor    eax,eax
  403cd7:	call   rdx
  403cd9:	xor    eax,eax
  403cdb:	call   403ca0 <__sprintf_chk@plt+0x28e0>
  403ce0:	mov    rax,0x40c640
  403ce7:	mov    r8,rdi
  403cea:	mov    rcx,QWORD PTR [rax]
  403ced:	mov    rax,QWORD PTR [rip+0x4304]        # 407ff8 <error@@Base+0x42e8>
  403cf4:	lea    rdx,[rip+0x1503]        # 4051fe <error@@Base+0x14ee>
  403cfb:	mov    rdi,QWORD PTR [rax]
  403cfe:	mov    esi,0x1
  403d03:	xor    eax,eax
  403d05:	call   401380 <__fprintf_chk@plt>
  403d0a:	jmp    403cd9 <__sprintf_chk@plt+0x2919>
  403d0c:	nop    DWORD PTR [rax+0x0]

0000000000403d10 <error@@Base>:
  403d10:	endbr64 
  403d14:	push   rax
  403d15:	pop    rax
  403d16:	lea    rdx,[rip+0x14f0]        # 40520d <error@@Base+0x14fd>
  403d1d:	mov    esi,0x1
  403d22:	sub    rsp,0x8
  403d26:	mov    rax,0x40c640
  403d2d:	mov    r8,rdi
  403d30:	mov    rcx,QWORD PTR [rax]
  403d33:	mov    rax,QWORD PTR [rip+0x42be]        # 407ff8 <error@@Base+0x42e8>
  403d3a:	mov    rdi,QWORD PTR [rax]
  403d3d:	xor    eax,eax
  403d3f:	call   401380 <__fprintf_chk@plt>
  403d44:	mov    rax,0x4081d0
  403d4b:	mov    edi,DWORD PTR [rax]
  403d4d:	xor    eax,eax
  403d4f:	call   403ac0 <__sprintf_chk@plt+0x2700>
  403d54:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  403d5f:	nop
  403d60:	endbr64 
  403d64:	sub    rsp,0x8
  403d68:	call   4012e0 <calloc@plt>
  403d6d:	test   rax,rax
  403d70:	je     403d77 <error@@Base+0x67>
  403d72:	add    rsp,0x8
  403d76:	ret    
  403d77:	lea    rdi,[rip+0x1497]        # 405215 <error@@Base+0x1505>
  403d7e:	call   403d10 <error@@Base>
  403d83:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  403d8e:	xchg   ax,ax
  403d90:	endbr64 
  403d94:	cmp    BYTE PTR [rip+0x4585],0x0        # 408320 <error@@Base+0x4610>
  403d9b:	je     403d9e <error@@Base+0x8e>
  403d9d:	ret    
  403d9e:	push   rax
  403d9f:	lea    rdi,[rip+0x1489]        # 40522f <error@@Base+0x151f>
  403da6:	xor    eax,eax
  403da8:	mov    BYTE PTR [rip+0x4571],0x1        # 408320 <error@@Base+0x4610>
  403daf:	call   403d10 <error@@Base>
  403db4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  403dbf:	nop
  403dc0:	endbr64 
  403dc4:	push   rax
  403dc5:	pop    rax
  403dc6:	lea    rdx,[rip+0x1471]        # 40523e <error@@Base+0x152e>
  403dcd:	sub    rsp,0x8
  403dd1:	mov    rax,0x40c640
  403dd8:	mov    r8,rdi
  403ddb:	mov    rcx,QWORD PTR [rax]
  403dde:	mov    rax,QWORD PTR [rip+0x4213]        # 407ff8 <error@@Base+0x42e8>
  403de5:	mov    r9,rsi
  403de8:	mov    rdi,QWORD PTR [rax]
  403deb:	mov    esi,0x1
  403df0:	xor    eax,eax
  403df2:	call   401380 <__fprintf_chk@plt>
  403df7:	mov    rax,0x4081d0
  403dfe:	mov    edi,DWORD PTR [rax]
  403e00:	xor    eax,eax
  403e02:	call   403ac0 <__sprintf_chk@plt+0x2700>
  403e07:	nop    WORD PTR [rax+rax*1+0x0]
  403e10:	endbr64 
  403e14:	test   rdi,rdi
  403e17:	je     403e60 <error@@Base+0x150>
  403e19:	push   rbp
  403e1a:	mov    rbp,rsi
  403e1d:	push   rbx
  403e1e:	mov    rbx,rdi
  403e21:	sub    rsp,0x8
  403e25:	call   401350 <fopen@plt>
  403e2a:	test   rax,rax
  403e2d:	je     403e40 <error@@Base+0x130>
  403e2f:	add    rsp,0x8
  403e33:	pop    rbx
  403e34:	pop    rbp
  403e35:	ret    
  403e36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403e40:	cmp    BYTE PTR [rbp+0x0],0x77
  403e44:	mov    rsi,rbx
  403e47:	je     403e70 <error@@Base+0x160>
  403e49:	lea    rdi,[rip+0x1411]        # 405261 <error@@Base+0x1551>
  403e50:	xor    eax,eax
  403e52:	call   403dc0 <error@@Base+0xb0>
  403e57:	nop    WORD PTR [rax+rax*1+0x0]
  403e60:	cmp    BYTE PTR [rsi],0x72
  403e63:	je     403e80 <error@@Base+0x170>
  403e65:	mov    rax,QWORD PTR [rip+0x4164]        # 407fd0 <error@@Base+0x42c0>
  403e6c:	mov    rax,QWORD PTR [rax]
  403e6f:	ret    
  403e70:	lea    rdi,[rip+0x13d4]        # 40524b <error@@Base+0x153b>
  403e77:	call   403dc0 <error@@Base+0xb0>
  403e7c:	nop    DWORD PTR [rax+0x0]
  403e80:	mov    rax,QWORD PTR [rip+0x4151]        # 407fd8 <error@@Base+0x42c8>
  403e87:	mov    rax,QWORD PTR [rax]
  403e8a:	ret    
  403e8b:	nop    DWORD PTR [rax+rax*1+0x0]
  403e90:	endbr64 
  403e94:	push   r15
  403e96:	xor    eax,eax
  403e98:	push   r14
  403e9a:	mov    r14,rsi
  403e9d:	push   r13
  403e9f:	push   r12
  403ea1:	push   rbp
  403ea2:	push   rbx
  403ea3:	sub    rsp,0x38
  403ea7:	mov    QWORD PTR [rsp+0x8],rdi
  403eac:	mov    rdi,QWORD PTR [rsi]
  403eaf:	mov    QWORD PTR [rsp+0x28],rdx
  403eb4:	mov    QWORD PTR [rsp+0x10],rcx
  403eb9:	call   403c50 <__sprintf_chk@plt+0x2890>
  403ebe:	mov    rcx,0x40c640
  403ec5:	lea    rsi,[rip+0xfffffffffffffec4]        # 403d90 <error@@Base+0x80>
  403ecc:	mov    edi,0x2
  403ed1:	mov    QWORD PTR [rcx],rax
  403ed4:	call   401300 <__sysv_signal@plt>
  403ed9:	lea    rsi,[rip+0xfffffffffffffeb0]        # 403d90 <error@@Base+0x80>
  403ee0:	mov    edi,0xf
  403ee5:	call   401300 <__sysv_signal@plt>
  403eea:	mov    r9,QWORD PTR [rsp+0x8]
  403eef:	mov    r15d,DWORD PTR [r9]
  403ef2:	cmp    r15d,0x1
  403ef6:	je     4040c0 <error@@Base+0x3b0>
  403efc:	mov    rdx,QWORD PTR [rsp+0x10]
  403f01:	jle    4040cc <error@@Base+0x3bc>
  403f07:	mov    r8d,r15d
  403f0a:	xor    r12d,r12d
  403f0d:	mov    r15,rdx
  403f10:	mov    r13d,0x1
  403f16:	mov    ebx,0x1
  403f1b:	mov    rdx,r14
  403f1e:	jmp    403f3a <error@@Base+0x22a>
  403f20:	movsx  rax,r12w
  403f24:	mov    QWORD PTR [rdx+rax*8],rbp
  403f28:	inc    ebx
  403f2a:	inc    r12d
  403f2d:	movsx  r13d,bx
  403f31:	cmp    r13d,r8d
  403f34:	jge    404060 <error@@Base+0x350>
  403f3a:	movsx  rax,bx
  403f3e:	mov    rbp,QWORD PTR [rdx+rax*8]
  403f42:	lea    r10,[rax*8+0x0]
  403f4a:	cmp    BYTE PTR [rbp+0x0],0x2d
  403f4e:	jne    403f20 <error@@Base+0x210>
  403f50:	movzx  r14d,BYTE PTR [rbp+0x1]
  403f55:	mov    QWORD PTR [rsp+0x20],r10
  403f5a:	test   r14b,r14b
  403f5d:	je     403f20 <error@@Base+0x210>
  403f5f:	mov    rdi,rbp
  403f62:	mov    DWORD PTR [rsp+0x1c],r8d
  403f67:	mov    QWORD PTR [rsp+0x10],rdx
  403f6c:	mov    QWORD PTR [rsp+0x8],r9
  403f71:	call   401270 <strlen@plt>
  403f76:	cmp    rax,0x6
  403f7a:	mov    ecx,0x6
  403f7f:	cmovle rcx,rax
  403f83:	lea    rsi,[rip+0x12eb]        # 405275 <error@@Base+0x1565>
  403f8a:	cmp    rcx,rcx
  403f8d:	mov    rdi,rbp
  403f90:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  403f92:	seta   al
  403f95:	sbb    al,0x0
  403f97:	test   al,al
  403f99:	je     4040f0 <error@@Base+0x3e0>
  403f9f:	mov    r8d,DWORD PTR [rsp+0x1c]
  403fa4:	inc    r13d
  403fa7:	xor    eax,eax
  403fa9:	cmp    r13d,r8d
  403fac:	mov    r9,QWORD PTR [rsp+0x8]
  403fb1:	mov    rdx,QWORD PTR [rsp+0x10]
  403fb6:	jge    403fc2 <error@@Base+0x2b2>
  403fb8:	mov    r10,QWORD PTR [rsp+0x20]
  403fbd:	mov    rax,QWORD PTR [rdx+r10*1+0x8]
  403fc2:	test   r15,r15
  403fc5:	je     403ffb <error@@Base+0x2eb>
  403fc7:	movzx  ecx,BYTE PTR [r15]
  403fcb:	test   cl,cl
  403fcd:	je     403ffb <error@@Base+0x2eb>
  403fcf:	cmp    r14b,cl
  403fd2:	je     404010 <error@@Base+0x300>
  403fd4:	xor    ecx,ecx
  403fd6:	jmp    403fe5 <error@@Base+0x2d5>
  403fd8:	nop    DWORD PTR [rax+rax*1+0x0]
  403fe0:	cmp    r14b,dil
  403fe3:	je     404018 <error@@Base+0x308>
  403fe5:	inc    ecx
  403fe7:	movsx  rsi,cx
  403feb:	lea    rsi,[rsi+rsi*2]
  403fef:	lea    rsi,[r15+rsi*8]
  403ff3:	movzx  edi,BYTE PTR [rsi]
  403ff6:	test   dil,dil
  403ff9:	jne    403fe0 <error@@Base+0x2d0>
  403ffb:	mov    rsi,rbp
  403ffe:	lea    rdi,[rip+0x1276]        # 40527b <error@@Base+0x156b>
  404005:	xor    eax,eax
  404007:	call   403dc0 <error@@Base+0xb0>
  40400c:	nop    DWORD PTR [rax+0x0]
  404010:	mov    rsi,r15
  404013:	nop    DWORD PTR [rax+rax*1+0x0]
  404018:	mov    rcx,QWORD PTR [rsi+0x8]
  40401c:	test   rcx,rcx
  40401f:	je     404090 <error@@Base+0x380>
  404021:	cmp    BYTE PTR [rbp+0x2],0x0
  404025:	jne    404080 <error@@Base+0x370>
  404027:	test   rax,rax
  40402a:	je     4040d8 <error@@Base+0x3c8>
  404030:	cmp    QWORD PTR [rcx],0x0
  404034:	jne    404100 <error@@Base+0x3f0>
  40403a:	mov    QWORD PTR [rcx],rax
  40403d:	mov    eax,ebx
  40403f:	inc    ebx
  404041:	cmp    BYTE PTR [rbp+0x2],0x0
  404045:	jne    403f2d <error@@Base+0x21d>
  40404b:	lea    ebx,[rax+0x2]
  40404e:	movsx  r13d,bx
  404052:	cmp    r13d,r8d
  404055:	jl     403f3a <error@@Base+0x22a>
  40405b:	nop    DWORD PTR [rax+rax*1+0x0]
  404060:	movsx  r12d,r12w
  404064:	mov    DWORD PTR [r9],r12d
  404067:	add    rsp,0x38
  40406b:	pop    rbx
  40406c:	pop    rbp
  40406d:	pop    r12
  40406f:	pop    r13
  404071:	pop    r14
  404073:	pop    r15
  404075:	ret    
  404076:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404080:	cmp    QWORD PTR [rcx],0x0
  404084:	jne    404100 <error@@Base+0x3f0>
  404086:	lea    rax,[rbp+0x2]
  40408a:	jmp    40403a <error@@Base+0x32a>
  40408c:	nop    DWORD PTR [rax+0x0]
  404090:	mov    rax,QWORD PTR [rsi+0x10]
  404094:	test   rax,rax
  404097:	je     403ffb <error@@Base+0x2eb>
  40409d:	cmp    BYTE PTR [rbp+0x2],0x0
  4040a1:	jne    403ffb <error@@Base+0x2eb>
  4040a7:	cmp    BYTE PTR [rax],0x0
  4040aa:	jne    404100 <error@@Base+0x3f0>
  4040ac:	mov    BYTE PTR [rax],0x1
  4040af:	inc    ebx
  4040b1:	mov    r8d,DWORD PTR [r9]
  4040b4:	jmp    403f2d <error@@Base+0x21d>
  4040b9:	nop    DWORD PTR [rax+0x0]
  4040c0:	mov    rax,0x4081d4
  4040c7:	cmp    BYTE PTR [rax],0x0
  4040ca:	jne    4040f0 <error@@Base+0x3e0>
  4040cc:	xor    r12d,r12d
  4040cf:	jmp    404064 <error@@Base+0x354>
  4040d1:	nop    DWORD PTR [rax+0x0]
  4040d8:	mov    rax,QWORD PTR [rsi+0x10]
  4040dc:	test   rax,rax
  4040df:	jne    4040a7 <error@@Base+0x397>
  4040e1:	jmp    403ffb <error@@Base+0x2eb>
  4040e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4040f0:	mov    rdi,QWORD PTR [rsp+0x28]
  4040f5:	xor    eax,eax
  4040f7:	call   403cc0 <__sprintf_chk@plt+0x2900>
  4040fc:	nop    DWORD PTR [rax+0x0]
  404100:	mov    rsi,rbp
  404103:	lea    rdi,[rip+0x1180]        # 40528a <error@@Base+0x157a>
  40410a:	xor    eax,eax
  40410c:	call   403dc0 <error@@Base+0xb0>
  404111:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40411c:	nop    DWORD PTR [rax+0x0]
  404120:	endbr64 
  404124:	mov    rax,0x40c640
  40412b:	mov    r8,rdi
  40412e:	mov    rcx,QWORD PTR [rax]
  404131:	mov    rax,QWORD PTR [rip+0x3ec0]        # 407ff8 <error@@Base+0x42e8>
  404138:	mov    r9,rsi
  40413b:	mov    rdi,QWORD PTR [rax]
  40413e:	lea    rdx,[rip+0x10f9]        # 40523e <error@@Base+0x152e>
  404145:	mov    esi,0x1
  40414a:	xor    eax,eax
  40414c:	jmp    401380 <__fprintf_chk@plt>
  404151:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40415b:	nop    DWORD PTR [rax+rax*1+0x0]
  404160:	endbr64 
  404164:	mov    QWORD PTR [rdi+0x8],0x0
  40416c:	mov    QWORD PTR [rdi],0x0
  404173:	mov    QWORD PTR [rdi+0x10],0x0
  40417b:	mov    QWORD PTR [rdi+0x18],0x0
  404183:	ret    
  404184:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40418f:	nop
  404190:	endbr64 
  404194:	push   rbx
  404195:	mov    rbx,rdi
  404198:	mov    rax,QWORD PTR [rdi]
  40419b:	mov    QWORD PTR [rsi],0x0
  4041a2:	mov    QWORD PTR [rsi+0x8],rax
  4041a6:	mov    QWORD PTR [rdi],rsi
  4041a9:	test   rax,rax
  4041ac:	je     4041d0 <error@@Base+0x4c0>
  4041ae:	mov    QWORD PTR [rax],rsi
  4041b1:	mov    rdi,QWORD PTR [rbx+0x10]
  4041b5:	test   rdi,rdi
  4041b8:	je     4041c7 <error@@Base+0x4b7>
  4041ba:	call   401210 <free@plt>
  4041bf:	mov    QWORD PTR [rbx+0x10],0x0
  4041c7:	inc    QWORD PTR [rbx+0x18]
  4041cb:	pop    rbx
  4041cc:	ret    
  4041cd:	nop    DWORD PTR [rax]
  4041d0:	mov    QWORD PTR [rdi+0x8],rsi
  4041d4:	jmp    4041b1 <error@@Base+0x4a1>
  4041d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4041e0:	endbr64 
  4041e4:	push   rbx
  4041e5:	mov    rbx,rdi
  4041e8:	mov    rax,QWORD PTR [rdi+0x8]
  4041ec:	mov    QWORD PTR [rsi+0x8],0x0
  4041f4:	mov    QWORD PTR [rsi],rax
  4041f7:	test   rax,rax
  4041fa:	je     404220 <error@@Base+0x510>
  4041fc:	mov    QWORD PTR [rax+0x8],rsi
  404200:	mov    rdi,QWORD PTR [rbx+0x10]
  404204:	mov    QWORD PTR [rbx+0x8],rsi
  404208:	test   rdi,rdi
  40420b:	je     40421a <error@@Base+0x50a>
  40420d:	call   401210 <free@plt>
  404212:	mov    QWORD PTR [rbx+0x10],0x0
  40421a:	inc    QWORD PTR [rbx+0x18]
  40421e:	pop    rbx
  40421f:	ret    
  404220:	mov    QWORD PTR [rdi],rsi
  404223:	jmp    404200 <error@@Base+0x4f0>
  404225:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  404230:	endbr64 
  404234:	mov    rax,QWORD PTR [rdx]
  404237:	push   rbx
  404238:	mov    QWORD PTR [rsi],rax
  40423b:	mov    rbx,rdi
  40423e:	mov    QWORD PTR [rsi+0x8],rdx
  404242:	test   rax,rax
  404245:	je     404270 <error@@Base+0x560>
  404247:	mov    QWORD PTR [rax+0x8],rsi
  40424b:	mov    rdi,QWORD PTR [rbx+0x10]
  40424f:	mov    QWORD PTR [rdx],rsi
  404252:	test   rdi,rdi
  404255:	je     404264 <error@@Base+0x554>
  404257:	call   401210 <free@plt>
  40425c:	mov    QWORD PTR [rbx+0x10],0x0
  404264:	inc    QWORD PTR [rbx+0x18]
  404268:	pop    rbx
  404269:	ret    
  40426a:	nop    WORD PTR [rax+rax*1+0x0]
  404270:	mov    QWORD PTR [rdi],rsi
  404273:	jmp    40424b <error@@Base+0x53b>
  404275:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  404280:	endbr64 
  404284:	mov    rax,QWORD PTR [rsi+0x8]
  404288:	push   rbx
  404289:	mov    QWORD PTR [rdx],rsi
  40428c:	mov    QWORD PTR [rdx+0x8],rax
  404290:	mov    rbx,rdi
  404293:	mov    QWORD PTR [rsi+0x8],rdx
  404297:	test   rax,rax
  40429a:	je     4042c0 <error@@Base+0x5b0>
  40429c:	mov    QWORD PTR [rax],rdx
  40429f:	mov    rdi,QWORD PTR [rbx+0x10]
  4042a3:	test   rdi,rdi
  4042a6:	je     4042b5 <error@@Base+0x5a5>
  4042a8:	call   401210 <free@plt>
  4042ad:	mov    QWORD PTR [rbx+0x10],0x0
  4042b5:	inc    QWORD PTR [rbx+0x18]
  4042b9:	pop    rbx
  4042ba:	ret    
  4042bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4042c0:	mov    QWORD PTR [rdi+0x8],rdx
  4042c4:	jmp    40429f <error@@Base+0x58f>
  4042c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4042d0:	endbr64 
  4042d4:	mov    rdx,QWORD PTR [rsi]
  4042d7:	push   rbx
  4042d8:	mov    rax,QWORD PTR [rsi+0x8]
  4042dc:	mov    rbx,rdi
  4042df:	test   rdx,rdx
  4042e2:	je     404320 <error@@Base+0x610>
  4042e4:	mov    QWORD PTR [rdx+0x8],rax
  4042e8:	mov    rax,QWORD PTR [rsi+0x8]
  4042ec:	test   rax,rax
  4042ef:	je     404328 <error@@Base+0x618>
  4042f1:	mov    QWORD PTR [rax],rdx
  4042f4:	mov    rdi,QWORD PTR [rbx+0x10]
  4042f8:	mov    QWORD PTR [rsi+0x8],0x0
  404300:	mov    QWORD PTR [rsi],0x0
  404307:	test   rdi,rdi
  40430a:	je     404319 <error@@Base+0x609>
  40430c:	call   401210 <free@plt>
  404311:	mov    QWORD PTR [rbx+0x10],0x0
  404319:	dec    QWORD PTR [rbx+0x18]
  40431d:	pop    rbx
  40431e:	ret    
  40431f:	nop
  404320:	mov    QWORD PTR [rdi],rax
  404323:	test   rax,rax
  404326:	jne    4042f1 <error@@Base+0x5e1>
  404328:	mov    QWORD PTR [rbx+0x8],rdx
  40432c:	jmp    4042f4 <error@@Base+0x5e4>
  40432e:	xchg   ax,ax
  404330:	endbr64 
  404334:	cmp    QWORD PTR [rdi+0x10],0x0
  404339:	je     404340 <error@@Base+0x630>
  40433b:	ret    
  40433c:	nop    DWORD PTR [rax+0x0]
  404340:	mov    rax,QWORD PTR [rdi+0x18]
  404344:	test   rax,rax
  404347:	je     40433b <error@@Base+0x62b>
  404349:	push   rbx
  40434a:	mov    esi,0x8
  40434f:	mov    rbx,rdi
  404352:	mov    rdi,rax
  404355:	xor    eax,eax
  404357:	call   403d60 <error@@Base+0x50>
  40435c:	mov    rdx,QWORD PTR [rbx]
  40435f:	mov    QWORD PTR [rbx+0x10],rax
  404363:	test   rdx,rdx
  404366:	je     404380 <error@@Base+0x670>
  404368:	nop    DWORD PTR [rax+rax*1+0x0]
  404370:	mov    QWORD PTR [rax],rdx
  404373:	add    rax,0x8
  404377:	mov    rdx,QWORD PTR [rdx+0x8]
  40437b:	test   rdx,rdx
  40437e:	jne    404370 <error@@Base+0x660>
  404380:	pop    rbx
  404381:	ret    
  404382:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40438d:	nop    DWORD PTR [rax]
  404390:	endbr64 
  404394:	push   r12
  404396:	push   rbp
  404397:	push   rbx
  404398:	mov    rbx,QWORD PTR [rdi]
  40439b:	test   rbx,rbx
  40439e:	je     4043ce <error@@Base+0x6be>
  4043a0:	mov    rbp,rdi
  4043a3:	mov    r12,rsi
  4043a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4043b0:	mov    rsi,rbx
  4043b3:	mov    rdi,rbp
  4043b6:	xor    eax,eax
  4043b8:	call   4042d0 <error@@Base+0x5c0>
  4043bd:	mov    rdi,rbx
  4043c0:	xor    eax,eax
  4043c2:	call   r12
  4043c5:	mov    rbx,QWORD PTR [rbp+0x0]
  4043c9:	test   rbx,rbx
  4043cc:	jne    4043b0 <error@@Base+0x6a0>
  4043ce:	pop    rbx
  4043cf:	pop    rbp
  4043d0:	pop    r12
  4043d2:	ret    
  4043d3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4043dd:	nop    DWORD PTR [rax]
  4043e0:	endbr64 
  4043e4:	push   r15
  4043e6:	lea    r15,[rip+0x39f3]        # 407de0 <error@@Base+0x40d0>
  4043ed:	push   r14
  4043ef:	mov    r14,rdx
  4043f2:	push   r13
  4043f4:	mov    r13,rsi
  4043f7:	push   r12
  4043f9:	mov    r12d,edi
  4043fc:	push   rbp
  4043fd:	lea    rbp,[rip+0x39e4]        # 407de8 <error@@Base+0x40d8>
  404404:	push   rbx
  404405:	sub    rbp,r15
  404408:	sub    rsp,0x8
  40440c:	call   401000 <__strcat_chk@plt-0x200>
  404411:	sar    rbp,0x3
  404415:	je     404436 <error@@Base+0x726>
  404417:	xor    ebx,ebx
  404419:	nop    DWORD PTR [rax+0x0]
  404420:	mov    rdx,r14
  404423:	mov    rsi,r13
  404426:	mov    edi,r12d
  404429:	call   QWORD PTR [r15+rbx*8]
  40442d:	add    rbx,0x1
  404431:	cmp    rbp,rbx
  404434:	jne    404420 <error@@Base+0x710>
  404436:	add    rsp,0x8
  40443a:	pop    rbx
  40443b:	pop    rbp
  40443c:	pop    r12
  40443e:	pop    r13
  404440:	pop    r14
  404442:	pop    r15
  404444:	ret    
  404445:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  404450:	endbr64 
  404454:	ret    

Disassembly of section .fini:

0000000000404458 <.fini>:
  404458:	endbr64 
  40445c:	sub    rsp,0x8
  404460:	add    rsp,0x8
  404464:	ret    
