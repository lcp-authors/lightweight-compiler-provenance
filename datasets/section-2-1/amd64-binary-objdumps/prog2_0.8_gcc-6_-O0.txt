
../repos/prog2/0.8:     file format elf64-x86-64


Disassembly of section .init:

0000000000401000 <.init>:
  401000:	endbr64 
  401004:	sub    rsp,0x8
  401008:	mov    rax,QWORD PTR [rip+0x2fe9]        # 403ff8 <__gmon_start__>
  40100f:	test   rax,rax
  401012:	je     401016 <strcpy@plt-0x1a>
  401014:	call   rax
  401016:	add    rsp,0x8
  40101a:	ret    

Disassembly of section .plt:

0000000000401020 <strcpy@plt-0x10>:
  401020:	push   QWORD PTR [rip+0x2fe2]        # 404008 <_IO_stdin_used@@Base+0x2008>
  401026:	jmp    QWORD PTR [rip+0x2fe4]        # 404010 <_IO_stdin_used@@Base+0x2010>
  40102c:	nop    DWORD PTR [rax+0x0]

0000000000401030 <strcpy@plt>:
  401030:	jmp    QWORD PTR [rip+0x2fe2]        # 404018 <strcpy@GLIBC_2.2.5>
  401036:	push   0x0
  40103b:	jmp    401020 <strcpy@plt-0x10>

0000000000401040 <__stack_chk_fail@plt>:
  401040:	jmp    QWORD PTR [rip+0x2fda]        # 404020 <__stack_chk_fail@GLIBC_2.4>
  401046:	push   0x1
  40104b:	jmp    401020 <strcpy@plt-0x10>

0000000000401050 <printf@plt>:
  401050:	jmp    QWORD PTR [rip+0x2fd2]        # 404028 <printf@GLIBC_2.2.5>
  401056:	push   0x2
  40105b:	jmp    401020 <strcpy@plt-0x10>

0000000000401060 <__isoc99_scanf@plt>:
  401060:	jmp    QWORD PTR [rip+0x2fca]        # 404030 <__isoc99_scanf@GLIBC_2.7>
  401066:	push   0x3
  40106b:	jmp    401020 <strcpy@plt-0x10>

Disassembly of section .text:

0000000000401070 <_start@@Base>:
  401070:	endbr64 
  401074:	xor    ebp,ebp
  401076:	mov    r9,rdx
  401079:	pop    rsi
  40107a:	mov    rdx,rsp
  40107d:	and    rsp,0xfffffffffffffff0
  401081:	push   rax
  401082:	push   rsp
  401083:	mov    r8,0x4014f0
  40108a:	mov    rcx,0x401480
  401091:	mov    rdi,0x401351
  401098:	call   QWORD PTR [rip+0x2f52]        # 403ff0 <__libc_start_main@GLIBC_2.2.5>
  40109e:	hlt    
  40109f:	nop
  4010a0:	endbr64 
  4010a4:	ret    
  4010a5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4010af:	nop
  4010b0:	mov    eax,0x40404f
  4010b5:	push   rbp
  4010b6:	sub    rax,0x404048
  4010bc:	cmp    rax,0xe
  4010c0:	mov    rbp,rsp
  4010c3:	jbe    4010e0 <_start@@Base+0x70>
  4010c5:	mov    eax,0x0
  4010ca:	test   rax,rax
  4010cd:	je     4010e0 <_start@@Base+0x70>
  4010cf:	pop    rbp
  4010d0:	mov    edi,0x404048
  4010d5:	jmp    rax
  4010d7:	nop    WORD PTR [rax+rax*1+0x0]
  4010e0:	pop    rbp
  4010e1:	ret    
  4010e2:	nop    DWORD PTR [rax+0x0]
  4010e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4010f0:	mov    esi,0x404048
  4010f5:	push   rbp
  4010f6:	sub    rsi,0x404048
  4010fd:	sar    rsi,0x3
  401101:	mov    rbp,rsp
  401104:	mov    rax,rsi
  401107:	shr    rax,0x3f
  40110b:	add    rsi,rax
  40110e:	sar    rsi,1
  401111:	je     401128 <_start@@Base+0xb8>
  401113:	mov    eax,0x0
  401118:	test   rax,rax
  40111b:	je     401128 <_start@@Base+0xb8>
  40111d:	pop    rbp
  40111e:	mov    edi,0x404048
  401123:	jmp    rax
  401125:	nop    DWORD PTR [rax]
  401128:	pop    rbp
  401129:	ret    
  40112a:	nop    WORD PTR [rax+rax*1+0x0]
  401130:	cmp    BYTE PTR [rip+0x2f11],0x0        # 404048 <__bss_start@@Base>
  401137:	jne    40114a <_start@@Base+0xda>
  401139:	push   rbp
  40113a:	mov    rbp,rsp
  40113d:	call   4010b0 <_start@@Base+0x40>
  401142:	pop    rbp
  401143:	mov    BYTE PTR [rip+0x2efe],0x1        # 404048 <__bss_start@@Base>
  40114a:	repz ret 
  40114c:	nop    DWORD PTR [rax+0x0]
  401150:	mov    edi,0x403e18
  401155:	cmp    QWORD PTR [rdi],0x0
  401159:	jne    401160 <_start@@Base+0xf0>
  40115b:	jmp    4010f0 <_start@@Base+0x80>
  40115d:	nop    DWORD PTR [rax]
  401160:	mov    eax,0x0
  401165:	test   rax,rax
  401168:	je     40115b <_start@@Base+0xeb>
  40116a:	push   rbp
  40116b:	mov    rbp,rsp
  40116e:	call   rax
  401170:	pop    rbp
  401171:	jmp    4010f0 <_start@@Base+0x80>

0000000000401176 <lerpontuacoes@@Base>:
  401176:	push   rbp
  401177:	mov    rbp,rsp
  40117a:	sub    rsp,0x20
  40117e:	mov    QWORD PTR [rbp-0x18],rdi
  401182:	mov    QWORD PTR [rbp-0x20],rsi
  401186:	mov    rax,QWORD PTR fs:0x28
  40118f:	mov    QWORD PTR [rbp-0x8],rax
  401193:	xor    eax,eax
  401195:	lea    rax,[rbp-0x10]
  401199:	mov    rsi,rax
  40119c:	lea    rdi,[rip+0xe61]        # 402004 <_IO_stdin_used@@Base+0x4>
  4011a3:	mov    eax,0x0
  4011a8:	call   401060 <__isoc99_scanf@plt>
  4011ad:	mov    DWORD PTR [rbp-0xc],0x0
  4011b4:	jmp    40120e <lerpontuacoes@@Base+0x98>
  4011b6:	mov    eax,DWORD PTR [rbp-0xc]
  4011b9:	cdqe   
  4011bb:	lea    rdx,[rax*4+0x0]
  4011c3:	mov    rax,QWORD PTR [rbp-0x20]
  4011c7:	lea    rcx,[rdx+rax*1]
  4011cb:	mov    eax,DWORD PTR [rbp-0xc]
  4011ce:	movsxd rdx,eax
  4011d1:	mov    rax,rdx
  4011d4:	shl    rax,0x2
  4011d8:	add    rax,rdx
  4011db:	lea    rdx,[rax*4+0x0]
  4011e3:	add    rax,rdx
  4011e6:	add    rax,rax
  4011e9:	mov    rdx,rax
  4011ec:	mov    rax,QWORD PTR [rbp-0x18]
  4011f0:	add    rax,rdx
  4011f3:	mov    rdx,rcx
  4011f6:	mov    rsi,rax
  4011f9:	lea    rdi,[rip+0xe07]        # 402007 <_IO_stdin_used@@Base+0x7>
  401200:	mov    eax,0x0
  401205:	call   401060 <__isoc99_scanf@plt>
  40120a:	add    DWORD PTR [rbp-0xc],0x1
  40120e:	mov    eax,DWORD PTR [rbp-0x10]
  401211:	cmp    DWORD PTR [rbp-0xc],eax
  401214:	jl     4011b6 <lerpontuacoes@@Base+0x40>
  401216:	mov    eax,DWORD PTR [rbp-0x10]
  401219:	mov    rcx,QWORD PTR [rbp-0x8]
  40121d:	xor    rcx,QWORD PTR fs:0x28
  401226:	je     40122d <lerpontuacoes@@Base+0xb7>
  401228:	call   401040 <__stack_chk_fail@plt>
  40122d:	leave  
  40122e:	ret    

000000000040122f <primeiroUltimo@@Base>:
  40122f:	push   rbp
  401230:	mov    rbp,rsp
  401233:	sub    rsp,0x40
  401237:	mov    QWORD PTR [rbp-0x18],rdi
  40123b:	mov    QWORD PTR [rbp-0x20],rsi
  40123f:	mov    DWORD PTR [rbp-0x24],edx
  401242:	mov    QWORD PTR [rbp-0x30],rcx
  401246:	mov    QWORD PTR [rbp-0x38],r8
  40124a:	mov    rax,QWORD PTR [rbp-0x20]
  40124e:	mov    eax,DWORD PTR [rax]
  401250:	mov    DWORD PTR [rbp-0x8],eax
  401253:	mov    rax,QWORD PTR [rbp-0x20]
  401257:	mov    eax,DWORD PTR [rax]
  401259:	mov    DWORD PTR [rbp-0x4],eax
  40125c:	mov    DWORD PTR [rbp-0xc],0x1
  401263:	jmp    401342 <primeiroUltimo@@Base+0x113>
  401268:	mov    eax,DWORD PTR [rbp-0xc]
  40126b:	cdqe   
  40126d:	lea    rdx,[rax*4+0x0]
  401275:	mov    rax,QWORD PTR [rbp-0x20]
  401279:	add    rax,rdx
  40127c:	mov    eax,DWORD PTR [rax]
  40127e:	cmp    eax,DWORD PTR [rbp-0x8]
  401281:	jle    4012d3 <primeiroUltimo@@Base+0xa4>
  401283:	mov    eax,DWORD PTR [rbp-0xc]
  401286:	cdqe   
  401288:	lea    rdx,[rax*4+0x0]
  401290:	mov    rax,QWORD PTR [rbp-0x20]
  401294:	add    rax,rdx
  401297:	mov    eax,DWORD PTR [rax]
  401299:	mov    DWORD PTR [rbp-0x8],eax
  40129c:	mov    eax,DWORD PTR [rbp-0xc]
  40129f:	movsxd rdx,eax
  4012a2:	mov    rax,rdx
  4012a5:	shl    rax,0x2
  4012a9:	add    rax,rdx
  4012ac:	lea    rdx,[rax*4+0x0]
  4012b4:	add    rax,rdx
  4012b7:	add    rax,rax
  4012ba:	mov    rdx,rax
  4012bd:	mov    rax,QWORD PTR [rbp-0x18]
  4012c1:	add    rdx,rax
  4012c4:	mov    rax,QWORD PTR [rbp-0x30]
  4012c8:	mov    rsi,rdx
  4012cb:	mov    rdi,rax
  4012ce:	call   401030 <strcpy@plt>
  4012d3:	mov    eax,DWORD PTR [rbp-0xc]
  4012d6:	cdqe   
  4012d8:	lea    rdx,[rax*4+0x0]
  4012e0:	mov    rax,QWORD PTR [rbp-0x20]
  4012e4:	add    rax,rdx
  4012e7:	mov    eax,DWORD PTR [rax]
  4012e9:	cmp    eax,DWORD PTR [rbp-0x4]
  4012ec:	jge    40133e <primeiroUltimo@@Base+0x10f>
  4012ee:	mov    eax,DWORD PTR [rbp-0xc]
  4012f1:	cdqe   
  4012f3:	lea    rdx,[rax*4+0x0]
  4012fb:	mov    rax,QWORD PTR [rbp-0x20]
  4012ff:	add    rax,rdx
  401302:	mov    eax,DWORD PTR [rax]
  401304:	mov    DWORD PTR [rbp-0x4],eax
  401307:	mov    eax,DWORD PTR [rbp-0xc]
  40130a:	movsxd rdx,eax
  40130d:	mov    rax,rdx
  401310:	shl    rax,0x2
  401314:	add    rax,rdx
  401317:	lea    rdx,[rax*4+0x0]
  40131f:	add    rax,rdx
  401322:	add    rax,rax
  401325:	mov    rdx,rax
  401328:	mov    rax,QWORD PTR [rbp-0x18]
  40132c:	add    rdx,rax
  40132f:	mov    rax,QWORD PTR [rbp-0x38]
  401333:	mov    rsi,rdx
  401336:	mov    rdi,rax
  401339:	call   401030 <strcpy@plt>
  40133e:	add    DWORD PTR [rbp-0xc],0x1
  401342:	mov    eax,DWORD PTR [rbp-0xc]
  401345:	cmp    eax,DWORD PTR [rbp-0x24]
  401348:	jl     401268 <primeiroUltimo@@Base+0x39>
  40134e:	nop
  40134f:	leave  
  401350:	ret    

0000000000401351 <main@@Base>:
  401351:	push   rbp
  401352:	mov    rbp,rsp
  401355:	sub    rsp,0x4d0
  40135c:	mov    rax,QWORD PTR fs:0x28
  401365:	mov    QWORD PTR [rbp-0x8],rax
  401369:	xor    eax,eax
  40136b:	lea    rdx,[rbp-0x4c0]
  401372:	mov    eax,0x0
  401377:	mov    ecx,0xa
  40137c:	mov    rdi,rdx
  40137f:	rep stos QWORD PTR es:[rdi],rax
  401382:	lea    rdx,[rbp-0x470]
  401389:	mov    eax,0x0
  40138e:	mov    ecx,0x7d
  401393:	mov    rdi,rdx
  401396:	rep stos QWORD PTR es:[rdi],rax
  401399:	lea    rdx,[rbp-0x80]
  40139d:	mov    eax,0x0
  4013a2:	mov    ecx,0x6
  4013a7:	mov    rdi,rdx
  4013aa:	rep stos QWORD PTR es:[rdi],rax
  4013ad:	mov    rdx,rdi
  4013b0:	mov    WORD PTR [rdx],ax
  4013b3:	add    rdx,0x2
  4013b7:	lea    rdx,[rbp-0x40]
  4013bb:	mov    eax,0x0
  4013c0:	mov    ecx,0x6
  4013c5:	mov    rdi,rdx
  4013c8:	rep stos QWORD PTR es:[rdi],rax
  4013cb:	mov    rdx,rdi
  4013ce:	mov    WORD PTR [rdx],ax
  4013d1:	add    rdx,0x2
  4013d5:	lea    rdx,[rbp-0x4c0]
  4013dc:	lea    rax,[rbp-0x470]
  4013e3:	mov    rsi,rdx
  4013e6:	mov    rdi,rax
  4013e9:	call   401176 <lerpontuacoes@@Base>
  4013ee:	mov    DWORD PTR [rbp-0x4c4],eax
  4013f4:	lea    rdi,[rbp-0x40]
  4013f8:	lea    rcx,[rbp-0x80]
  4013fc:	mov    edx,DWORD PTR [rbp-0x4c4]
  401402:	lea    rsi,[rbp-0x4c0]
  401409:	lea    rax,[rbp-0x470]
  401410:	mov    r8,rdi
  401413:	mov    rdi,rax
  401416:	call   40122f <primeiroUltimo@@Base>
  40141b:	mov    eax,DWORD PTR [rbp-0x4c4]
  401421:	mov    esi,eax
  401423:	lea    rdi,[rip+0xbe3]        # 40200d <_IO_stdin_used@@Base+0xd>
  40142a:	mov    eax,0x0
  40142f:	call   401050 <printf@plt>
  401434:	lea    rax,[rbp-0x80]
  401438:	mov    rsi,rax
  40143b:	lea    rdi,[rip+0xbe7]        # 402029 <_IO_stdin_used@@Base+0x29>
  401442:	mov    eax,0x0
  401447:	call   401050 <printf@plt>
  40144c:	lea    rax,[rbp-0x40]
  401450:	mov    rsi,rax
  401453:	lea    rdi,[rip+0xbdc]        # 402036 <_IO_stdin_used@@Base+0x36>
  40145a:	mov    eax,0x0
  40145f:	call   401050 <printf@plt>
  401464:	mov    eax,0x0
  401469:	mov    rsi,QWORD PTR [rbp-0x8]
  40146d:	xor    rsi,QWORD PTR fs:0x28
  401476:	je     40147d <main@@Base+0x12c>
  401478:	call   401040 <__stack_chk_fail@plt>
  40147d:	leave  
  40147e:	ret    
  40147f:	nop

0000000000401480 <__libc_csu_init@@Base>:
  401480:	endbr64 
  401484:	push   r15
  401486:	lea    r15,[rip+0x297b]        # 403e08 <_IO_stdin_used@@Base+0x1e08>
  40148d:	push   r14
  40148f:	mov    r14,rdx
  401492:	push   r13
  401494:	mov    r13,rsi
  401497:	push   r12
  401499:	mov    r12d,edi
  40149c:	push   rbp
  40149d:	lea    rbp,[rip+0x296c]        # 403e10 <_IO_stdin_used@@Base+0x1e10>
  4014a4:	push   rbx
  4014a5:	sub    rbp,r15
  4014a8:	sub    rsp,0x8
  4014ac:	call   401000 <strcpy@plt-0x30>
  4014b1:	sar    rbp,0x3
  4014b5:	je     4014d6 <__libc_csu_init@@Base+0x56>
  4014b7:	xor    ebx,ebx
  4014b9:	nop    DWORD PTR [rax+0x0]
  4014c0:	mov    rdx,r14
  4014c3:	mov    rsi,r13
  4014c6:	mov    edi,r12d
  4014c9:	call   QWORD PTR [r15+rbx*8]
  4014cd:	add    rbx,0x1
  4014d1:	cmp    rbp,rbx
  4014d4:	jne    4014c0 <__libc_csu_init@@Base+0x40>
  4014d6:	add    rsp,0x8
  4014da:	pop    rbx
  4014db:	pop    rbp
  4014dc:	pop    r12
  4014de:	pop    r13
  4014e0:	pop    r14
  4014e2:	pop    r15
  4014e4:	ret    
  4014e5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

00000000004014f0 <__libc_csu_fini@@Base>:
  4014f0:	endbr64 
  4014f4:	ret    

Disassembly of section .fini:

00000000004014f8 <.fini>:
  4014f8:	endbr64 
  4014fc:	sub    rsp,0x8
  401500:	add    rsp,0x8
  401504:	ret    
