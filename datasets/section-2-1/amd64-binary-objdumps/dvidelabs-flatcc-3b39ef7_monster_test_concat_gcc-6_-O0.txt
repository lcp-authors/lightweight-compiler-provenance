
../repos/dvidelabs-flatcc-3b39ef7/test/monster_test_concat/monster_test_concat:     file format elf64-x86-64


Disassembly of section .init:

0000000000403000 <.init>:
  403000:	endbr64 
  403004:	sub    rsp,0x8
  403008:	mov    rax,QWORD PTR [rip+0xefe9]        # 411ff8 <__gmon_start__>
  40300f:	test   rax,rax
  403012:	je     403016 <free@plt-0x1a>
  403014:	call   rax
  403016:	add    rsp,0x8
  40301a:	ret    

Disassembly of section .plt:

0000000000403020 <free@plt-0x10>:
  403020:	push   QWORD PTR [rip+0xefe2]        # 412008 <flatcc_builder_padding_base@@Base+0x4e48>
  403026:	jmp    QWORD PTR [rip+0xefe4]        # 412010 <flatcc_builder_padding_base@@Base+0x4e50>
  40302c:	nop    DWORD PTR [rax+0x0]

0000000000403030 <free@plt>:
  403030:	jmp    QWORD PTR [rip+0xefe2]        # 412018 <free@GLIBC_2.2.5>
  403036:	push   0x0
  40303b:	jmp    403020 <free@plt-0x10>

0000000000403040 <strncpy@plt>:
  403040:	jmp    QWORD PTR [rip+0xefda]        # 412020 <strncpy@GLIBC_2.2.5>
  403046:	push   0x1
  40304b:	jmp    403020 <free@plt-0x10>

0000000000403050 <strlen@plt>:
  403050:	jmp    QWORD PTR [rip+0xefd2]        # 412028 <strlen@GLIBC_2.2.5>
  403056:	push   0x2
  40305b:	jmp    403020 <free@plt-0x10>

0000000000403060 <__stack_chk_fail@plt>:
  403060:	jmp    QWORD PTR [rip+0xefca]        # 412030 <__stack_chk_fail@GLIBC_2.4>
  403066:	push   0x3
  40306b:	jmp    403020 <free@plt-0x10>

0000000000403070 <__assert_fail@plt>:
  403070:	jmp    QWORD PTR [rip+0xefc2]        # 412038 <__assert_fail@GLIBC_2.2.5>
  403076:	push   0x4
  40307b:	jmp    403020 <free@plt-0x10>

0000000000403080 <memset@plt>:
  403080:	jmp    QWORD PTR [rip+0xefba]        # 412040 <memset@GLIBC_2.2.5>
  403086:	push   0x5
  40308b:	jmp    403020 <free@plt-0x10>

0000000000403090 <memchr@plt>:
  403090:	jmp    QWORD PTR [rip+0xefb2]        # 412048 <memchr@GLIBC_2.2.5>
  403096:	push   0x6
  40309b:	jmp    403020 <free@plt-0x10>

00000000004030a0 <memcmp@plt>:
  4030a0:	jmp    QWORD PTR [rip+0xefaa]        # 412050 <memcmp@GLIBC_2.2.5>
  4030a6:	push   0x7
  4030ab:	jmp    403020 <free@plt-0x10>

00000000004030b0 <memcpy@plt>:
  4030b0:	jmp    QWORD PTR [rip+0xefa2]        # 412058 <memcpy@GLIBC_2.14>
  4030b6:	push   0x8
  4030bb:	jmp    403020 <free@plt-0x10>

00000000004030c0 <malloc@plt>:
  4030c0:	jmp    QWORD PTR [rip+0xef9a]        # 412060 <malloc@GLIBC_2.2.5>
  4030c6:	push   0x9
  4030cb:	jmp    403020 <free@plt-0x10>

00000000004030d0 <realloc@plt>:
  4030d0:	jmp    QWORD PTR [rip+0xef92]        # 412068 <realloc@GLIBC_2.2.5>
  4030d6:	push   0xa
  4030db:	jmp    403020 <free@plt-0x10>

00000000004030e0 <posix_memalign@plt>:
  4030e0:	jmp    QWORD PTR [rip+0xef8a]        # 412070 <posix_memalign@GLIBC_2.2.5>
  4030e6:	push   0xb
  4030eb:	jmp    403020 <free@plt-0x10>

Disassembly of section .text:

00000000004030f0 <_start@@Base>:
  4030f0:	endbr64 
  4030f4:	xor    ebp,ebp
  4030f6:	mov    r9,rdx
  4030f9:	pop    rsi
  4030fa:	mov    rdx,rsp
  4030fd:	and    rsp,0xfffffffffffffff0
  403101:	push   rax
  403102:	push   rsp
  403103:	mov    r8,0x40c530
  40310a:	mov    rcx,0x40c4c0
  403111:	mov    rdi,0x4045e5
  403118:	call   QWORD PTR [rip+0xeed2]        # 411ff0 <__libc_start_main@GLIBC_2.2.5>
  40311e:	hlt    
  40311f:	nop
  403120:	endbr64 
  403124:	ret    
  403125:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40312f:	nop
  403130:	mov    eax,0x41209f
  403135:	push   rbp
  403136:	sub    rax,0x412098
  40313c:	cmp    rax,0xe
  403140:	mov    rbp,rsp
  403143:	jbe    403160 <_start@@Base+0x70>
  403145:	mov    eax,0x0
  40314a:	test   rax,rax
  40314d:	je     403160 <_start@@Base+0x70>
  40314f:	pop    rbp
  403150:	mov    edi,0x412098
  403155:	jmp    rax
  403157:	nop    WORD PTR [rax+rax*1+0x0]
  403160:	pop    rbp
  403161:	ret    
  403162:	nop    DWORD PTR [rax+0x0]
  403166:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403170:	mov    esi,0x412098
  403175:	push   rbp
  403176:	sub    rsi,0x412098
  40317d:	sar    rsi,0x3
  403181:	mov    rbp,rsp
  403184:	mov    rax,rsi
  403187:	shr    rax,0x3f
  40318b:	add    rsi,rax
  40318e:	sar    rsi,1
  403191:	je     4031a8 <_start@@Base+0xb8>
  403193:	mov    eax,0x0
  403198:	test   rax,rax
  40319b:	je     4031a8 <_start@@Base+0xb8>
  40319d:	pop    rbp
  40319e:	mov    edi,0x412098
  4031a3:	jmp    rax
  4031a5:	nop    DWORD PTR [rax]
  4031a8:	pop    rbp
  4031a9:	ret    
  4031aa:	nop    WORD PTR [rax+rax*1+0x0]
  4031b0:	cmp    BYTE PTR [rip+0xeee1],0x0        # 412098 <__bss_start@@Base>
  4031b7:	jne    4031ca <_start@@Base+0xda>
  4031b9:	push   rbp
  4031ba:	mov    rbp,rsp
  4031bd:	call   403130 <_start@@Base+0x40>
  4031c2:	pop    rbp
  4031c3:	mov    BYTE PTR [rip+0xeece],0x1        # 412098 <__bss_start@@Base>
  4031ca:	repz ret 
  4031cc:	nop    DWORD PTR [rax+0x0]
  4031d0:	mov    edi,0x411e18
  4031d5:	cmp    QWORD PTR [rdi],0x0
  4031d9:	jne    4031e0 <_start@@Base+0xf0>
  4031db:	jmp    403170 <_start@@Base+0x80>
  4031dd:	nop    DWORD PTR [rax]
  4031e0:	mov    eax,0x0
  4031e5:	test   rax,rax
  4031e8:	je     4031db <_start@@Base+0xeb>
  4031ea:	push   rbp
  4031eb:	mov    rbp,rsp
  4031ee:	call   rax
  4031f0:	pop    rbp
  4031f1:	jmp    403170 <_start@@Base+0x80>
  4031f6:	push   rbp
  4031f7:	mov    rbp,rsp
  4031fa:	sub    rsp,0x10
  4031fe:	mov    QWORD PTR [rbp-0x8],rdi
  403202:	mov    QWORD PTR [rbp-0x10],rsi
  403206:	mov    rsi,QWORD PTR [rbp-0x10]
  40320a:	mov    rax,QWORD PTR [rbp-0x8]
  40320e:	mov    ecx,0x0
  403213:	mov    edx,0x0
  403218:	mov    rdi,rax
  40321b:	call   406644 <flatcc_builder_start_buffer@@Base>
  403220:	leave  
  403221:	ret    
  403222:	push   rbp
  403223:	mov    rbp,rsp
  403226:	sub    rsp,0x10
  40322a:	mov    QWORD PTR [rbp-0x8],rdi
  40322e:	mov    DWORD PTR [rbp-0xc],esi
  403231:	mov    edx,DWORD PTR [rbp-0xc]
  403234:	mov    rax,QWORD PTR [rbp-0x8]
  403238:	mov    esi,edx
  40323a:	mov    rdi,rax
  40323d:	call   40678d <flatcc_builder_end_buffer@@Base>
  403242:	leave  
  403243:	ret    
  403244:	push   rbp
  403245:	mov    rbp,rsp
  403248:	sub    rsp,0x10
  40324c:	mov    QWORD PTR [rbp-0x8],rdi
  403250:	mov    rax,QWORD PTR [rbp-0x8]
  403254:	mov    esi,0x24
  403259:	mov    rdi,rax
  40325c:	call   4073a9 <flatcc_builder_start_table@@Base>
  403261:	leave  
  403262:	ret    
  403263:	push   rbp
  403264:	mov    rbp,rsp
  403267:	sub    rsp,0x10
  40326b:	mov    QWORD PTR [rbp-0x8],rdi
  40326f:	mov    rax,QWORD PTR [rbp-0x8]
  403273:	mov    edx,0x1
  403278:	lea    rsi,[rip+0x9dad]        # 40d02c <_IO_stdin_used@@Base+0x2c>
  40327f:	mov    rdi,rax
  403282:	call   407e00 <flatcc_builder_check_required@@Base>
  403287:	test   eax,eax
  403289:	jne    4032aa <_start@@Base+0x1ba>
  40328b:	lea    rcx,[rip+0x9ede]        # 40d170 <_IO_stdin_used@@Base+0x170>
  403292:	mov    edx,0x95e
  403297:	lea    rsi,[rip+0x9d92]        # 40d030 <_IO_stdin_used@@Base+0x30>
  40329e:	lea    rdi,[rip+0x9e0b]        # 40d0b0 <_IO_stdin_used@@Base+0xb0>
  4032a5:	call   403070 <__assert_fail@plt>
  4032aa:	mov    rax,QWORD PTR [rbp-0x8]
  4032ae:	mov    rdi,rax
  4032b1:	call   407eab <flatcc_builder_end_table@@Base>
  4032b6:	leave  
  4032b7:	ret    
  4032b8:	push   rbp
  4032b9:	mov    rbp,rsp
  4032bc:	sub    rsp,0x20
  4032c0:	mov    QWORD PTR [rbp-0x18],rdi
  4032c4:	mov    DWORD PTR [rbp-0x1c],esi
  4032c7:	cmp    DWORD PTR [rbp-0x1c],0x0
  4032cb:	je     4032f9 <_start@@Base+0x209>
  4032cd:	mov    rax,QWORD PTR [rbp-0x18]
  4032d1:	mov    esi,0x3
  4032d6:	mov    rdi,rax
  4032d9:	call   4096db <flatcc_builder_table_add_offset@@Base>
  4032de:	mov    QWORD PTR [rbp-0x8],rax
  4032e2:	cmp    QWORD PTR [rbp-0x8],0x0
  4032e7:	je     4032f9 <_start@@Base+0x209>
  4032e9:	mov    rax,QWORD PTR [rbp-0x8]
  4032ed:	mov    edx,DWORD PTR [rbp-0x1c]
  4032f0:	mov    DWORD PTR [rax],edx
  4032f2:	mov    eax,0x0
  4032f7:	jmp    4032fe <_start@@Base+0x20e>
  4032f9:	mov    eax,0xffffffff
  4032fe:	leave  
  4032ff:	ret    
  403300:	push   rbp
  403301:	mov    rbp,rsp
  403304:	sub    rsp,0x10
  403308:	mov    QWORD PTR [rbp-0x8],rdi
  40330c:	mov    QWORD PTR [rbp-0x10],rsi
  403310:	mov    rdx,QWORD PTR [rbp-0x10]
  403314:	mov    rax,QWORD PTR [rbp-0x8]
  403318:	mov    rsi,rdx
  40331b:	mov    rdi,rax
  40331e:	call   4093be <flatcc_builder_create_string_str@@Base>
  403323:	mov    edx,eax
  403325:	mov    rax,QWORD PTR [rbp-0x8]
  403329:	mov    esi,edx
  40332b:	mov    rdi,rax
  40332e:	call   4032b8 <_start@@Base+0x1c8>
  403333:	leave  
  403334:	ret    
  403335:	push   rbp
  403336:	mov    rbp,rsp
  403339:	sub    rsp,0x10
  40333d:	mov    QWORD PTR [rbp-0x8],rdi
  403341:	mov    rax,QWORD PTR [rbp-0x8]
  403345:	lea    rsi,[rip+0x9e0c]        # 40d158 <_IO_stdin_used@@Base+0x158>
  40334c:	mov    rdi,rax
  40334f:	call   4031f6 <_start@@Base+0x106>
  403354:	test   eax,eax
  403356:	jne    403366 <_start@@Base+0x276>
  403358:	mov    rax,QWORD PTR [rbp-0x8]
  40335c:	mov    rdi,rax
  40335f:	call   403244 <_start@@Base+0x154>
  403364:	jmp    40336b <_start@@Base+0x27b>
  403366:	mov    eax,0xffffffff
  40336b:	leave  
  40336c:	ret    
  40336d:	push   rbp
  40336e:	mov    rbp,rsp
  403371:	sub    rsp,0x10
  403375:	mov    QWORD PTR [rbp-0x8],rdi
  403379:	mov    rax,QWORD PTR [rbp-0x8]
  40337d:	mov    rdi,rax
  403380:	call   403263 <_start@@Base+0x173>
  403385:	mov    edx,eax
  403387:	mov    rax,QWORD PTR [rbp-0x8]
  40338b:	mov    esi,edx
  40338d:	mov    rdi,rax
  403390:	call   403222 <_start@@Base+0x132>
  403395:	leave  
  403396:	ret    
  403397:	push   rbp
  403398:	mov    rbp,rsp
  40339b:	sub    rsp,0x10
  40339f:	mov    QWORD PTR [rbp-0x8],rdi
  4033a3:	mov    rax,QWORD PTR [rbp-0x8]
  4033a7:	movzx  eax,BYTE PTR [rax+0x10]
  4033ab:	movzx  eax,al
  4033ae:	cmp    eax,0x1
  4033b1:	jne    4033c8 <_start@@Base+0x2d8>
  4033b3:	mov    rax,QWORD PTR [rbp-0x8]
  4033b7:	lea    rsi,[rip+0x163]        # 403521 <_start@@Base+0x431>
  4033be:	mov    rdi,rax
  4033c1:	call   40ba2b <flatcc_verify_union_table@@Base>
  4033c6:	jmp    4033cd <_start@@Base+0x2dd>
  4033c8:	mov    eax,0x0
  4033cd:	leave  
  4033ce:	ret    
  4033cf:	push   rbp
  4033d0:	mov    rbp,rsp
  4033d3:	sub    rsp,0x10
  4033d7:	mov    QWORD PTR [rbp-0x8],rdi
  4033db:	mov    rax,QWORD PTR [rbp-0x8]
  4033df:	movzx  eax,BYTE PTR [rax+0x10]
  4033e3:	movzx  eax,al
  4033e6:	cmp    eax,0x2
  4033e9:	je     403418 <_start@@Base+0x328>
  4033eb:	cmp    eax,0x2
  4033ee:	jg     4033f7 <_start@@Base+0x307>
  4033f0:	cmp    eax,0x1
  4033f3:	je     403403 <_start@@Base+0x313>
  4033f5:	jmp    403457 <_start@@Base+0x367>
  4033f7:	cmp    eax,0x3
  4033fa:	je     40342d <_start@@Base+0x33d>
  4033fc:	cmp    eax,0x4
  4033ff:	je     403442 <_start@@Base+0x352>
  403401:	jmp    403457 <_start@@Base+0x367>
  403403:	mov    rax,QWORD PTR [rbp-0x8]
  403407:	lea    rsi,[rip+0x7fd]        # 403c0b <_start@@Base+0xb1b>
  40340e:	mov    rdi,rax
  403411:	call   40ba2b <flatcc_verify_union_table@@Base>
  403416:	jmp    40345c <_start@@Base+0x36c>
  403418:	mov    rax,QWORD PTR [rbp-0x8]
  40341c:	lea    rsi,[rip+0x167]        # 40358a <_start@@Base+0x49a>
  403423:	mov    rdi,rax
  403426:	call   40ba2b <flatcc_verify_union_table@@Base>
  40342b:	jmp    40345c <_start@@Base+0x36c>
  40342d:	mov    rax,QWORD PTR [rbp-0x8]
  403431:	lea    rsi,[rip+0xf8]        # 403530 <_start@@Base+0x440>
  403438:	mov    rdi,rax
  40343b:	call   40ba2b <flatcc_verify_union_table@@Base>
  403440:	jmp    40345c <_start@@Base+0x36c>
  403442:	mov    rax,QWORD PTR [rbp-0x8]
  403446:	lea    rsi,[rip+0x392]        # 4037df <_start@@Base+0x6ef>
  40344d:	mov    rdi,rax
  403450:	call   40ba2b <flatcc_verify_union_table@@Base>
  403455:	jmp    40345c <_start@@Base+0x36c>
  403457:	mov    eax,0x0
  40345c:	leave  
  40345d:	ret    
  40345e:	push   rbp
  40345f:	mov    rbp,rsp
  403462:	sub    rsp,0x10
  403466:	mov    QWORD PTR [rbp-0x8],rdi
  40346a:	mov    rax,QWORD PTR [rbp-0x8]
  40346e:	movzx  eax,BYTE PTR [rax+0x10]
  403472:	movzx  eax,al
  403475:	cmp    eax,0x9
  403478:	je     4034ce <_start@@Base+0x3de>
  40347a:	cmp    eax,0x9
  40347d:	jg     40348e <_start@@Base+0x39e>
  40347f:	cmp    eax,0x2
  403482:	je     4034a1 <_start@@Base+0x3b1>
  403484:	cmp    eax,0x8
  403487:	je     4034b6 <_start@@Base+0x3c6>
  403489:	jmp    40351a <_start@@Base+0x42a>
  40348e:	cmp    eax,0xb
  403491:	je     4034fe <_start@@Base+0x40e>
  403493:	cmp    eax,0xb
  403496:	jl     4034e6 <_start@@Base+0x3f6>
  403498:	cmp    eax,0xff
  40349d:	je     40350c <_start@@Base+0x41c>
  40349f:	jmp    40351a <_start@@Base+0x42a>
  4034a1:	mov    rax,QWORD PTR [rbp-0x8]
  4034a5:	lea    rsi,[rip+0x100d]        # 4044b9 <_start@@Base+0x13c9>
  4034ac:	mov    rdi,rax
  4034af:	call   40ba2b <flatcc_verify_union_table@@Base>
  4034b4:	jmp    40351f <_start@@Base+0x42f>
  4034b6:	mov    rax,QWORD PTR [rbp-0x8]
  4034ba:	mov    edx,0x2
  4034bf:	mov    esi,0x2
  4034c4:	mov    rdi,rax
  4034c7:	call   40ba72 <flatcc_verify_union_struct@@Base>
  4034cc:	jmp    40351f <_start@@Base+0x42f>
  4034ce:	mov    rax,QWORD PTR [rbp-0x8]
  4034d2:	mov    edx,0x4
  4034d7:	mov    esi,0x4
  4034dc:	mov    rdi,rax
  4034df:	call   40ba72 <flatcc_verify_union_struct@@Base>
  4034e4:	jmp    40351f <_start@@Base+0x42f>
  4034e6:	mov    rax,QWORD PTR [rbp-0x8]
  4034ea:	mov    edx,0x4
  4034ef:	mov    esi,0x4
  4034f4:	mov    rdi,rax
  4034f7:	call   40ba72 <flatcc_verify_union_struct@@Base>
  4034fc:	jmp    40351f <_start@@Base+0x42f>
  4034fe:	mov    rax,QWORD PTR [rbp-0x8]
  403502:	mov    rdi,rax
  403505:	call   40bab5 <flatcc_verify_union_string@@Base>
  40350a:	jmp    40351f <_start@@Base+0x42f>
  40350c:	mov    rax,QWORD PTR [rbp-0x8]
  403510:	mov    rdi,rax
  403513:	call   40bab5 <flatcc_verify_union_string@@Base>
  403518:	jmp    40351f <_start@@Base+0x42f>
  40351a:	mov    eax,0x0
  40351f:	leave  
  403520:	ret    
  403521:	push   rbp
  403522:	mov    rbp,rsp
  403525:	mov    QWORD PTR [rbp-0x8],rdi
  403529:	mov    eax,0x0
  40352e:	pop    rbp
  40352f:	ret    
  403530:	push   rbp
  403531:	mov    rbp,rsp
  403534:	mov    QWORD PTR [rbp-0x8],rdi
  403538:	mov    eax,0x0
  40353d:	pop    rbp
  40353e:	ret    
  40353f:	push   rbp
  403540:	mov    rbp,rsp
  403543:	mov    QWORD PTR [rbp-0x8],rdi
  403547:	mov    eax,0x0
  40354c:	pop    rbp
  40354d:	ret    
  40354e:	push   rbp
  40354f:	mov    rbp,rsp
  403552:	sub    rsp,0x20
  403556:	mov    QWORD PTR [rbp-0x18],rdi
  40355a:	mov    rax,QWORD PTR [rbp-0x18]
  40355e:	mov    ecx,0x1
  403563:	mov    edx,0x0
  403568:	mov    esi,0x0
  40356d:	mov    rdi,rax
  403570:	call   40b662 <flatcc_verify_field@@Base>
  403575:	mov    DWORD PTR [rbp-0x4],eax
  403578:	cmp    DWORD PTR [rbp-0x4],0x0
  40357c:	je     403583 <_start@@Base+0x493>
  40357e:	mov    eax,DWORD PTR [rbp-0x4]
  403581:	jmp    403588 <_start@@Base+0x498>
  403583:	mov    eax,0x0
  403588:	leave  
  403589:	ret    
  40358a:	push   rbp
  40358b:	mov    rbp,rsp
  40358e:	sub    rsp,0x20
  403592:	mov    QWORD PTR [rbp-0x18],rdi
  403596:	mov    rax,QWORD PTR [rbp-0x18]
  40359a:	mov    ecx,0x1
  40359f:	mov    edx,0x1
  4035a4:	mov    esi,0x0
  4035a9:	mov    rdi,rax
  4035ac:	call   40b662 <flatcc_verify_field@@Base>
  4035b1:	mov    DWORD PTR [rbp-0x4],eax
  4035b4:	cmp    DWORD PTR [rbp-0x4],0x0
  4035b8:	je     4035c2 <_start@@Base+0x4d2>
  4035ba:	mov    eax,DWORD PTR [rbp-0x4]
  4035bd:	jmp    403642 <_start@@Base+0x552>
  4035c2:	mov    rax,QWORD PTR [rbp-0x18]
  4035c6:	mov    ecx,0x1
  4035cb:	mov    edx,0x1
  4035d0:	mov    esi,0x1
  4035d5:	mov    rdi,rax
  4035d8:	call   40b662 <flatcc_verify_field@@Base>
  4035dd:	mov    DWORD PTR [rbp-0x4],eax
  4035e0:	cmp    DWORD PTR [rbp-0x4],0x0
  4035e4:	je     4035eb <_start@@Base+0x4fb>
  4035e6:	mov    eax,DWORD PTR [rbp-0x4]
  4035e9:	jmp    403642 <_start@@Base+0x552>
  4035eb:	mov    rax,QWORD PTR [rbp-0x18]
  4035ef:	mov    ecx,0x1
  4035f4:	mov    edx,0x1
  4035f9:	mov    esi,0x2
  4035fe:	mov    rdi,rax
  403601:	call   40b662 <flatcc_verify_field@@Base>
  403606:	mov    DWORD PTR [rbp-0x4],eax
  403609:	cmp    DWORD PTR [rbp-0x4],0x0
  40360d:	je     403614 <_start@@Base+0x524>
  40360f:	mov    eax,DWORD PTR [rbp-0x4]
  403612:	jmp    403642 <_start@@Base+0x552>
  403614:	mov    rax,QWORD PTR [rbp-0x18]
  403618:	mov    ecx,0x1
  40361d:	mov    edx,0x1
  403622:	mov    esi,0x3
  403627:	mov    rdi,rax
  40362a:	call   40b662 <flatcc_verify_field@@Base>
  40362f:	mov    DWORD PTR [rbp-0x4],eax
  403632:	cmp    DWORD PTR [rbp-0x4],0x0
  403636:	je     40363d <_start@@Base+0x54d>
  403638:	mov    eax,DWORD PTR [rbp-0x4]
  40363b:	jmp    403642 <_start@@Base+0x552>
  40363d:	mov    eax,0x0
  403642:	leave  
  403643:	ret    
  403644:	push   rbp
  403645:	mov    rbp,rsp
  403648:	sub    rsp,0x20
  40364c:	mov    QWORD PTR [rbp-0x18],rdi
  403650:	mov    rax,QWORD PTR [rbp-0x18]
  403654:	mov    ecx,0x1
  403659:	mov    edx,0x0
  40365e:	mov    esi,0x0
  403663:	mov    rdi,rax
  403666:	call   40b662 <flatcc_verify_field@@Base>
  40366b:	mov    DWORD PTR [rbp-0x4],eax
  40366e:	cmp    DWORD PTR [rbp-0x4],0x0
  403672:	je     40367c <_start@@Base+0x58c>
  403674:	mov    eax,DWORD PTR [rbp-0x4]
  403677:	jmp    403754 <_start@@Base+0x664>
  40367c:	mov    rax,QWORD PTR [rbp-0x18]
  403680:	mov    ecx,0x8
  403685:	mov    edx,0x8
  40368a:	mov    esi,0x1
  40368f:	mov    rdi,rax
  403692:	call   40b662 <flatcc_verify_field@@Base>
  403697:	mov    DWORD PTR [rbp-0x4],eax
  40369a:	cmp    DWORD PTR [rbp-0x4],0x0
  40369e:	je     4036a8 <_start@@Base+0x5b8>
  4036a0:	mov    eax,DWORD PTR [rbp-0x4]
  4036a3:	jmp    403754 <_start@@Base+0x664>
  4036a8:	mov    rax,QWORD PTR [rbp-0x18]
  4036ac:	mov    ecx,0x8
  4036b1:	mov    edx,0x8
  4036b6:	mov    esi,0x2
  4036bb:	mov    rdi,rax
  4036be:	call   40b662 <flatcc_verify_field@@Base>
  4036c3:	mov    DWORD PTR [rbp-0x4],eax
  4036c6:	cmp    DWORD PTR [rbp-0x4],0x0
  4036ca:	je     4036d4 <_start@@Base+0x5e4>
  4036cc:	mov    eax,DWORD PTR [rbp-0x4]
  4036cf:	jmp    403754 <_start@@Base+0x664>
  4036d4:	mov    rax,QWORD PTR [rbp-0x18]
  4036d8:	mov    ecx,0x4
  4036dd:	mov    edx,0x4
  4036e2:	mov    esi,0x3
  4036e7:	mov    rdi,rax
  4036ea:	call   40b662 <flatcc_verify_field@@Base>
  4036ef:	mov    DWORD PTR [rbp-0x4],eax
  4036f2:	cmp    DWORD PTR [rbp-0x4],0x0
  4036f6:	je     4036fd <_start@@Base+0x60d>
  4036f8:	mov    eax,DWORD PTR [rbp-0x4]
  4036fb:	jmp    403754 <_start@@Base+0x664>
  4036fd:	mov    rax,QWORD PTR [rbp-0x18]
  403701:	mov    ecx,0x8
  403706:	mov    edx,0x8
  40370b:	mov    esi,0x4
  403710:	mov    rdi,rax
  403713:	call   40b662 <flatcc_verify_field@@Base>
  403718:	mov    DWORD PTR [rbp-0x4],eax
  40371b:	cmp    DWORD PTR [rbp-0x4],0x0
  40371f:	je     403726 <_start@@Base+0x636>
  403721:	mov    eax,DWORD PTR [rbp-0x4]
  403724:	jmp    403754 <_start@@Base+0x664>
  403726:	mov    rax,QWORD PTR [rbp-0x18]
  40372a:	mov    ecx,0x8
  40372f:	mov    edx,0x8
  403734:	mov    esi,0x5
  403739:	mov    rdi,rax
  40373c:	call   40b662 <flatcc_verify_field@@Base>
  403741:	mov    DWORD PTR [rbp-0x4],eax
  403744:	cmp    DWORD PTR [rbp-0x4],0x0
  403748:	je     40374f <_start@@Base+0x65f>
  40374a:	mov    eax,DWORD PTR [rbp-0x4]
  40374d:	jmp    403754 <_start@@Base+0x664>
  40374f:	mov    eax,0x0
  403754:	leave  
  403755:	ret    
  403756:	push   rbp
  403757:	mov    rbp,rsp
  40375a:	sub    rsp,0x20
  40375e:	mov    QWORD PTR [rbp-0x18],rdi
  403762:	mov    rax,QWORD PTR [rbp-0x18]
  403766:	mov    edx,0x0
  40376b:	mov    esi,0x0
  403770:	mov    rdi,rax
  403773:	call   40b6cd <flatcc_verify_string_field@@Base>
  403778:	mov    DWORD PTR [rbp-0x4],eax
  40377b:	cmp    DWORD PTR [rbp-0x4],0x0
  40377f:	je     403786 <_start@@Base+0x696>
  403781:	mov    eax,DWORD PTR [rbp-0x4]
  403784:	jmp    4037dd <_start@@Base+0x6ed>
  403786:	mov    rax,QWORD PTR [rbp-0x18]
  40378a:	mov    ecx,0x8
  40378f:	mov    edx,0x8
  403794:	mov    esi,0x1
  403799:	mov    rdi,rax
  40379c:	call   40b662 <flatcc_verify_field@@Base>
  4037a1:	mov    DWORD PTR [rbp-0x4],eax
  4037a4:	cmp    DWORD PTR [rbp-0x4],0x0
  4037a8:	je     4037af <_start@@Base+0x6bf>
  4037aa:	mov    eax,DWORD PTR [rbp-0x4]
  4037ad:	jmp    4037dd <_start@@Base+0x6ed>
  4037af:	mov    rax,QWORD PTR [rbp-0x18]
  4037b3:	mov    ecx,0x2
  4037b8:	mov    edx,0x2
  4037bd:	mov    esi,0x2
  4037c2:	mov    rdi,rax
  4037c5:	call   40b662 <flatcc_verify_field@@Base>
  4037ca:	mov    DWORD PTR [rbp-0x4],eax
  4037cd:	cmp    DWORD PTR [rbp-0x4],0x0
  4037d1:	je     4037d8 <_start@@Base+0x6e8>
  4037d3:	mov    eax,DWORD PTR [rbp-0x4]
  4037d6:	jmp    4037dd <_start@@Base+0x6ed>
  4037d8:	mov    eax,0x0
  4037dd:	leave  
  4037de:	ret    
  4037df:	push   rbp
  4037e0:	mov    rbp,rsp
  4037e3:	sub    rsp,0x20
  4037e7:	mov    QWORD PTR [rbp-0x18],rdi
  4037eb:	mov    rax,QWORD PTR [rbp-0x18]
  4037ef:	lea    rcx,[rip+0x7d]        # 403873 <_start@@Base+0x783>
  4037f6:	mov    edx,0x0
  4037fb:	mov    esi,0x0
  403800:	mov    rdi,rax
  403803:	call   40b8c7 <flatcc_verify_table_field@@Base>
  403808:	mov    DWORD PTR [rbp-0x4],eax
  40380b:	cmp    DWORD PTR [rbp-0x4],0x0
  40380f:	je     403816 <_start@@Base+0x726>
  403811:	mov    eax,DWORD PTR [rbp-0x4]
  403814:	jmp    403871 <_start@@Base+0x781>
  403816:	mov    rax,QWORD PTR [rbp-0x18]
  40381a:	lea    rcx,[rip+0xcd4]        # 4044f5 <_start@@Base+0x1405>
  403821:	mov    edx,0x0
  403826:	mov    esi,0x1
  40382b:	mov    rdi,rax
  40382e:	call   40b8c7 <flatcc_verify_table_field@@Base>
  403833:	mov    DWORD PTR [rbp-0x4],eax
  403836:	cmp    DWORD PTR [rbp-0x4],0x0
  40383a:	je     403841 <_start@@Base+0x751>
  40383c:	mov    eax,DWORD PTR [rbp-0x4]
  40383f:	jmp    403871 <_start@@Base+0x781>
  403841:	mov    rax,QWORD PTR [rbp-0x18]
  403845:	lea    rcx,[rip+0xfffffffffffffb83]        # 4033cf <_start@@Base+0x2df>
  40384c:	mov    edx,0x0
  403851:	mov    esi,0x3
  403856:	mov    rdi,rax
  403859:	call   40c2db <flatcc_verify_union_vector_field@@Base>
  40385e:	mov    DWORD PTR [rbp-0x4],eax
  403861:	cmp    DWORD PTR [rbp-0x4],0x0
  403865:	je     40386c <_start@@Base+0x77c>
  403867:	mov    eax,DWORD PTR [rbp-0x4]
  40386a:	jmp    403871 <_start@@Base+0x781>
  40386c:	mov    eax,0x0
  403871:	leave  
  403872:	ret    
  403873:	push   rbp
  403874:	mov    rbp,rsp
  403877:	sub    rsp,0x20
  40387b:	mov    QWORD PTR [rbp-0x18],rdi
  40387f:	mov    rax,QWORD PTR [rbp-0x18]
  403883:	lea    rcx,[rip+0x7d]        # 403907 <_start@@Base+0x817>
  40388a:	mov    edx,0x0
  40388f:	mov    esi,0x0
  403894:	mov    rdi,rax
  403897:	call   40b8c7 <flatcc_verify_table_field@@Base>
  40389c:	mov    DWORD PTR [rbp-0x4],eax
  40389f:	cmp    DWORD PTR [rbp-0x4],0x0
  4038a3:	je     4038aa <_start@@Base+0x7ba>
  4038a5:	mov    eax,DWORD PTR [rbp-0x4]
  4038a8:	jmp    403905 <_start@@Base+0x815>
  4038aa:	mov    rax,QWORD PTR [rbp-0x18]
  4038ae:	lea    rcx,[rip+0x1d9]        # 403a8e <_start@@Base+0x99e>
  4038b5:	mov    edx,0x0
  4038ba:	mov    esi,0x1
  4038bf:	mov    rdi,rax
  4038c2:	call   40b8c7 <flatcc_verify_table_field@@Base>
  4038c7:	mov    DWORD PTR [rbp-0x4],eax
  4038ca:	cmp    DWORD PTR [rbp-0x4],0x0
  4038ce:	je     4038d5 <_start@@Base+0x7e5>
  4038d0:	mov    eax,DWORD PTR [rbp-0x4]
  4038d3:	jmp    403905 <_start@@Base+0x815>
  4038d5:	mov    rax,QWORD PTR [rbp-0x18]
  4038d9:	lea    rcx,[rip+0x213]        # 403af3 <_start@@Base+0xa03>
  4038e0:	mov    edx,0x0
  4038e5:	mov    esi,0x2
  4038ea:	mov    rdi,rax
  4038ed:	call   40b8c7 <flatcc_verify_table_field@@Base>
  4038f2:	mov    DWORD PTR [rbp-0x4],eax
  4038f5:	cmp    DWORD PTR [rbp-0x4],0x0
  4038f9:	je     403900 <_start@@Base+0x810>
  4038fb:	mov    eax,DWORD PTR [rbp-0x4]
  4038fe:	jmp    403905 <_start@@Base+0x815>
  403900:	mov    eax,0x0
  403905:	leave  
  403906:	ret    
  403907:	push   rbp
  403908:	mov    rbp,rsp
  40390b:	sub    rsp,0x20
  40390f:	mov    QWORD PTR [rbp-0x18],rdi
  403913:	mov    rax,QWORD PTR [rbp-0x18]
  403917:	mov    edx,0x0
  40391c:	mov    esi,0x0
  403921:	mov    rdi,rax
  403924:	call   40b6cd <flatcc_verify_string_field@@Base>
  403929:	mov    DWORD PTR [rbp-0x4],eax
  40392c:	cmp    DWORD PTR [rbp-0x4],0x0
  403930:	je     40393a <_start@@Base+0x84a>
  403932:	mov    eax,DWORD PTR [rbp-0x4]
  403935:	jmp    403a8c <_start@@Base+0x99c>
  40393a:	mov    rax,QWORD PTR [rbp-0x18]
  40393e:	mov    ecx,0x4
  403943:	mov    edx,0x4
  403948:	mov    esi,0x1
  40394d:	mov    rdi,rax
  403950:	call   40b662 <flatcc_verify_field@@Base>
  403955:	mov    DWORD PTR [rbp-0x4],eax
  403958:	cmp    DWORD PTR [rbp-0x4],0x0
  40395c:	je     403966 <_start@@Base+0x876>
  40395e:	mov    eax,DWORD PTR [rbp-0x4]
  403961:	jmp    403a8c <_start@@Base+0x99c>
  403966:	mov    rax,QWORD PTR [rbp-0x18]
  40396a:	mov    edx,0x0
  40396f:	mov    esi,0x2
  403974:	mov    rdi,rax
  403977:	call   40b6cd <flatcc_verify_string_field@@Base>
  40397c:	mov    DWORD PTR [rbp-0x4],eax
  40397f:	cmp    DWORD PTR [rbp-0x4],0x0
  403983:	je     40398d <_start@@Base+0x89d>
  403985:	mov    eax,DWORD PTR [rbp-0x4]
  403988:	jmp    403a8c <_start@@Base+0x99c>
  40398d:	mov    rax,QWORD PTR [rbp-0x18]
  403991:	mov    ecx,0x8
  403996:	mov    edx,0x8
  40399b:	mov    esi,0x3
  4039a0:	mov    rdi,rax
  4039a3:	call   40b662 <flatcc_verify_field@@Base>
  4039a8:	mov    DWORD PTR [rbp-0x4],eax
  4039ab:	cmp    DWORD PTR [rbp-0x4],0x0
  4039af:	je     4039b9 <_start@@Base+0x8c9>
  4039b1:	mov    eax,DWORD PTR [rbp-0x4]
  4039b4:	jmp    403a8c <_start@@Base+0x99c>
  4039b9:	mov    rax,QWORD PTR [rbp-0x18]
  4039bd:	mov    edx,0x0
  4039c2:	mov    esi,0x4
  4039c7:	mov    rdi,rax
  4039ca:	call   40b6cd <flatcc_verify_string_field@@Base>
  4039cf:	mov    DWORD PTR [rbp-0x4],eax
  4039d2:	cmp    DWORD PTR [rbp-0x4],0x0
  4039d6:	je     4039e0 <_start@@Base+0x8f0>
  4039d8:	mov    eax,DWORD PTR [rbp-0x4]
  4039db:	jmp    403a8c <_start@@Base+0x99c>
  4039e0:	mov    rax,QWORD PTR [rbp-0x18]
  4039e4:	mov    ecx,0x8
  4039e9:	mov    edx,0x8
  4039ee:	mov    esi,0x5
  4039f3:	mov    rdi,rax
  4039f6:	call   40b662 <flatcc_verify_field@@Base>
  4039fb:	mov    DWORD PTR [rbp-0x4],eax
  4039fe:	cmp    DWORD PTR [rbp-0x4],0x0
  403a02:	je     403a0c <_start@@Base+0x91c>
  403a04:	mov    eax,DWORD PTR [rbp-0x4]
  403a07:	jmp    403a8c <_start@@Base+0x99c>
  403a0c:	mov    rax,QWORD PTR [rbp-0x18]
  403a10:	mov    ecx,0x4
  403a15:	mov    edx,0x4
  403a1a:	mov    esi,0x6
  403a1f:	mov    rdi,rax
  403a22:	call   40b662 <flatcc_verify_field@@Base>
  403a27:	mov    DWORD PTR [rbp-0x4],eax
  403a2a:	cmp    DWORD PTR [rbp-0x4],0x0
  403a2e:	je     403a35 <_start@@Base+0x945>
  403a30:	mov    eax,DWORD PTR [rbp-0x4]
  403a33:	jmp    403a8c <_start@@Base+0x99c>
  403a35:	mov    rax,QWORD PTR [rbp-0x18]
  403a39:	mov    ecx,0x8
  403a3e:	mov    edx,0x8
  403a43:	mov    esi,0x7
  403a48:	mov    rdi,rax
  403a4b:	call   40b662 <flatcc_verify_field@@Base>
  403a50:	mov    DWORD PTR [rbp-0x4],eax
  403a53:	cmp    DWORD PTR [rbp-0x4],0x0
  403a57:	je     403a5e <_start@@Base+0x96e>
  403a59:	mov    eax,DWORD PTR [rbp-0x4]
  403a5c:	jmp    403a8c <_start@@Base+0x99c>
  403a5e:	mov    rax,QWORD PTR [rbp-0x18]
  403a62:	mov    ecx,0x4
  403a67:	mov    edx,0x4
  403a6c:	mov    esi,0x8
  403a71:	mov    rdi,rax
  403a74:	call   40b662 <flatcc_verify_field@@Base>
  403a79:	mov    DWORD PTR [rbp-0x4],eax
  403a7c:	cmp    DWORD PTR [rbp-0x4],0x0
  403a80:	je     403a87 <_start@@Base+0x997>
  403a82:	mov    eax,DWORD PTR [rbp-0x4]
  403a85:	jmp    403a8c <_start@@Base+0x99c>
  403a87:	mov    eax,0x0
  403a8c:	leave  
  403a8d:	ret    
  403a8e:	push   rbp
  403a8f:	mov    rbp,rsp
  403a92:	sub    rsp,0x20
  403a96:	mov    QWORD PTR [rbp-0x18],rdi
  403a9a:	mov    rax,QWORD PTR [rbp-0x18]
  403a9e:	mov    ecx,0x8
  403aa3:	mov    edx,0x8
  403aa8:	mov    esi,0x0
  403aad:	mov    rdi,rax
  403ab0:	call   40b662 <flatcc_verify_field@@Base>
  403ab5:	mov    DWORD PTR [rbp-0x4],eax
  403ab8:	cmp    DWORD PTR [rbp-0x4],0x0
  403abc:	je     403ac3 <_start@@Base+0x9d3>
  403abe:	mov    eax,DWORD PTR [rbp-0x4]
  403ac1:	jmp    403af1 <_start@@Base+0xa01>
  403ac3:	mov    rax,QWORD PTR [rbp-0x18]
  403ac7:	mov    ecx,0x4
  403acc:	mov    edx,0x4
  403ad1:	mov    esi,0x1
  403ad6:	mov    rdi,rax
  403ad9:	call   40b662 <flatcc_verify_field@@Base>
  403ade:	mov    DWORD PTR [rbp-0x4],eax
  403ae1:	cmp    DWORD PTR [rbp-0x4],0x0
  403ae5:	je     403aec <_start@@Base+0x9fc>
  403ae7:	mov    eax,DWORD PTR [rbp-0x4]
  403aea:	jmp    403af1 <_start@@Base+0xa01>
  403aec:	mov    eax,0x0
  403af1:	leave  
  403af2:	ret    
  403af3:	push   rbp
  403af4:	mov    rbp,rsp
  403af7:	sub    rsp,0x20
  403afb:	mov    QWORD PTR [rbp-0x18],rdi
  403aff:	mov    rax,QWORD PTR [rbp-0x18]
  403b03:	mov    ecx,0x8
  403b08:	mov    edx,0x8
  403b0d:	mov    esi,0x0
  403b12:	mov    rdi,rax
  403b15:	call   40b662 <flatcc_verify_field@@Base>
  403b1a:	mov    DWORD PTR [rbp-0x4],eax
  403b1d:	cmp    DWORD PTR [rbp-0x4],0x0
  403b21:	je     403b28 <_start@@Base+0xa38>
  403b23:	mov    eax,DWORD PTR [rbp-0x4]
  403b26:	jmp    403b56 <_start@@Base+0xa66>
  403b28:	mov    rax,QWORD PTR [rbp-0x18]
  403b2c:	mov    ecx,0x4
  403b31:	mov    edx,0x4
  403b36:	mov    esi,0x1
  403b3b:	mov    rdi,rax
  403b3e:	call   40b662 <flatcc_verify_field@@Base>
  403b43:	mov    DWORD PTR [rbp-0x4],eax
  403b46:	cmp    DWORD PTR [rbp-0x4],0x0
  403b4a:	je     403b51 <_start@@Base+0xa61>
  403b4c:	mov    eax,DWORD PTR [rbp-0x4]
  403b4f:	jmp    403b56 <_start@@Base+0xa66>
  403b51:	mov    eax,0x0
  403b56:	leave  
  403b57:	ret    
  403b58:	push   rbp
  403b59:	mov    rbp,rsp
  403b5c:	sub    rsp,0x20
  403b60:	mov    QWORD PTR [rbp-0x18],rdi
  403b64:	mov    rax,QWORD PTR [rbp-0x18]
  403b68:	mov    r9d,0xffffffff
  403b6e:	mov    r8d,0x1
  403b74:	mov    ecx,0x1
  403b79:	mov    edx,0x0
  403b7e:	mov    esi,0x0
  403b83:	mov    rdi,rax
  403b86:	call   40b762 <flatcc_verify_vector_field@@Base>
  403b8b:	mov    DWORD PTR [rbp-0x4],eax
  403b8e:	cmp    DWORD PTR [rbp-0x4],0x0
  403b92:	je     403b99 <_start@@Base+0xaa9>
  403b94:	mov    eax,DWORD PTR [rbp-0x4]
  403b97:	jmp    403c09 <_start@@Base+0xb19>
  403b99:	mov    rax,QWORD PTR [rbp-0x18]
  403b9d:	mov    r9d,0xffffffff
  403ba3:	mov    r8d,0x1
  403ba9:	mov    ecx,0x1
  403bae:	mov    edx,0x0
  403bb3:	mov    esi,0x1
  403bb8:	mov    rdi,rax
  403bbb:	call   40b762 <flatcc_verify_vector_field@@Base>
  403bc0:	mov    DWORD PTR [rbp-0x4],eax
  403bc3:	cmp    DWORD PTR [rbp-0x4],0x0
  403bc7:	je     403bce <_start@@Base+0xade>
  403bc9:	mov    eax,DWORD PTR [rbp-0x4]
  403bcc:	jmp    403c09 <_start@@Base+0xb19>
  403bce:	mov    rax,QWORD PTR [rbp-0x18]
  403bd2:	lea    r9,[rip+0x32]        # 403c0b <_start@@Base+0xb1b>
  403bd9:	mov    r8d,0x1
  403bdf:	mov    ecx,0x0
  403be4:	mov    edx,0x0
  403be9:	mov    esi,0x2
  403bee:	mov    rdi,rax
  403bf1:	call   40bf91 <flatcc_verify_table_as_nested_root@@Base>
  403bf6:	mov    DWORD PTR [rbp-0x4],eax
  403bf9:	cmp    DWORD PTR [rbp-0x4],0x0
  403bfd:	je     403c04 <_start@@Base+0xb14>
  403bff:	mov    eax,DWORD PTR [rbp-0x4]
  403c02:	jmp    403c09 <_start@@Base+0xb19>
  403c04:	mov    eax,0x0
  403c09:	leave  
  403c0a:	ret    
  403c0b:	push   rbp
  403c0c:	mov    rbp,rsp
  403c0f:	sub    rsp,0x20
  403c13:	mov    QWORD PTR [rbp-0x18],rdi
  403c17:	mov    rax,QWORD PTR [rbp-0x18]
  403c1b:	mov    ecx,0x10
  403c20:	mov    edx,0x20
  403c25:	mov    esi,0x0
  403c2a:	mov    rdi,rax
  403c2d:	call   40b662 <flatcc_verify_field@@Base>
  403c32:	mov    DWORD PTR [rbp-0x4],eax
  403c35:	cmp    DWORD PTR [rbp-0x4],0x0
  403c39:	je     403c43 <_start@@Base+0xb53>
  403c3b:	mov    eax,DWORD PTR [rbp-0x4]
  403c3e:	jmp    404255 <_start@@Base+0x1165>
  403c43:	mov    rax,QWORD PTR [rbp-0x18]
  403c47:	mov    ecx,0x2
  403c4c:	mov    edx,0x2
  403c51:	mov    esi,0x2
  403c56:	mov    rdi,rax
  403c59:	call   40b662 <flatcc_verify_field@@Base>
  403c5e:	mov    DWORD PTR [rbp-0x4],eax
  403c61:	cmp    DWORD PTR [rbp-0x4],0x0
  403c65:	je     403c6f <_start@@Base+0xb7f>
  403c67:	mov    eax,DWORD PTR [rbp-0x4]
  403c6a:	jmp    404255 <_start@@Base+0x1165>
  403c6f:	mov    rax,QWORD PTR [rbp-0x18]
  403c73:	mov    ecx,0x2
  403c78:	mov    edx,0x2
  403c7d:	mov    esi,0x1
  403c82:	mov    rdi,rax
  403c85:	call   40b662 <flatcc_verify_field@@Base>
  403c8a:	mov    DWORD PTR [rbp-0x4],eax
  403c8d:	cmp    DWORD PTR [rbp-0x4],0x0
  403c91:	je     403c9b <_start@@Base+0xbab>
  403c93:	mov    eax,DWORD PTR [rbp-0x4]
  403c96:	jmp    404255 <_start@@Base+0x1165>
  403c9b:	mov    rax,QWORD PTR [rbp-0x18]
  403c9f:	mov    edx,0x1
  403ca4:	mov    esi,0x3
  403ca9:	mov    rdi,rax
  403cac:	call   40b6cd <flatcc_verify_string_field@@Base>
  403cb1:	mov    DWORD PTR [rbp-0x4],eax
  403cb4:	cmp    DWORD PTR [rbp-0x4],0x0
  403cb8:	je     403cc2 <_start@@Base+0xbd2>
  403cba:	mov    eax,DWORD PTR [rbp-0x4]
  403cbd:	jmp    404255 <_start@@Base+0x1165>
  403cc2:	mov    rax,QWORD PTR [rbp-0x18]
  403cc6:	mov    ecx,0x1
  403ccb:	mov    edx,0x1
  403cd0:	mov    esi,0x6
  403cd5:	mov    rdi,rax
  403cd8:	call   40b662 <flatcc_verify_field@@Base>
  403cdd:	mov    DWORD PTR [rbp-0x4],eax
  403ce0:	cmp    DWORD PTR [rbp-0x4],0x0
  403ce4:	je     403cee <_start@@Base+0xbfe>
  403ce6:	mov    eax,DWORD PTR [rbp-0x4]
  403ce9:	jmp    404255 <_start@@Base+0x1165>
  403cee:	mov    rax,QWORD PTR [rbp-0x18]
  403cf2:	mov    r9d,0xffffffff
  403cf8:	mov    r8d,0x1
  403cfe:	mov    ecx,0x1
  403d03:	mov    edx,0x0
  403d08:	mov    esi,0x5
  403d0d:	mov    rdi,rax
  403d10:	call   40b762 <flatcc_verify_vector_field@@Base>
  403d15:	mov    DWORD PTR [rbp-0x4],eax
  403d18:	cmp    DWORD PTR [rbp-0x4],0x0
  403d1c:	je     403d26 <_start@@Base+0xc36>
  403d1e:	mov    eax,DWORD PTR [rbp-0x4]
  403d21:	jmp    404255 <_start@@Base+0x1165>
  403d26:	mov    rax,QWORD PTR [rbp-0x18]
  403d2a:	lea    rcx,[rip+0xfffffffffffffeda]        # 403c0b <_start@@Base+0xb1b>
  403d31:	mov    edx,0x0
  403d36:	mov    esi,0xb
  403d3b:	mov    rdi,rax
  403d3e:	call   40b979 <flatcc_verify_table_vector_field@@Base>
  403d43:	mov    DWORD PTR [rbp-0x4],eax
  403d46:	cmp    DWORD PTR [rbp-0x4],0x0
  403d4a:	je     403d54 <_start@@Base+0xc64>
  403d4c:	mov    eax,DWORD PTR [rbp-0x4]
  403d4f:	jmp    404255 <_start@@Base+0x1165>
  403d54:	mov    rax,QWORD PTR [rbp-0x18]
  403d58:	mov    edx,0x0
  403d5d:	mov    esi,0xa
  403d62:	mov    rdi,rax
  403d65:	call   40b832 <flatcc_verify_string_vector_field@@Base>
  403d6a:	mov    DWORD PTR [rbp-0x4],eax
  403d6d:	cmp    DWORD PTR [rbp-0x4],0x0
  403d71:	je     403d7b <_start@@Base+0xc8b>
  403d73:	mov    eax,DWORD PTR [rbp-0x4]
  403d76:	jmp    404255 <_start@@Base+0x1165>
  403d7b:	mov    rax,QWORD PTR [rbp-0x18]
  403d7f:	mov    edx,0x0
  403d84:	mov    esi,0x1c
  403d89:	mov    rdi,rax
  403d8c:	call   40b832 <flatcc_verify_string_vector_field@@Base>
  403d91:	mov    DWORD PTR [rbp-0x4],eax
  403d94:	cmp    DWORD PTR [rbp-0x4],0x0
  403d98:	je     403da2 <_start@@Base+0xcb2>
  403d9a:	mov    eax,DWORD PTR [rbp-0x4]
  403d9d:	jmp    404255 <_start@@Base+0x1165>
  403da2:	mov    rax,QWORD PTR [rbp-0x18]
  403da6:	mov    r9d,0xffffffff
  403dac:	mov    r8d,0x1
  403db2:	mov    ecx,0x1
  403db7:	mov    edx,0x0
  403dbc:	mov    esi,0x18
  403dc1:	mov    rdi,rax
  403dc4:	call   40b762 <flatcc_verify_vector_field@@Base>
  403dc9:	mov    DWORD PTR [rbp-0x4],eax
  403dcc:	cmp    DWORD PTR [rbp-0x4],0x0
  403dd0:	je     403dda <_start@@Base+0xcea>
  403dd2:	mov    eax,DWORD PTR [rbp-0x4]
  403dd5:	jmp    404255 <_start@@Base+0x1165>
  403dda:	mov    rax,QWORD PTR [rbp-0x18]
  403dde:	mov    r9d,0x1fffffff
  403de4:	mov    r8d,0x4
  403dea:	mov    ecx,0x8
  403def:	mov    edx,0x0
  403df4:	mov    esi,0x1d
  403df9:	mov    rdi,rax
  403dfc:	call   40b762 <flatcc_verify_vector_field@@Base>
  403e01:	mov    DWORD PTR [rbp-0x4],eax
  403e04:	cmp    DWORD PTR [rbp-0x4],0x0
  403e08:	je     403e12 <_start@@Base+0xd22>
  403e0a:	mov    eax,DWORD PTR [rbp-0x4]
  403e0d:	jmp    404255 <_start@@Base+0x1165>
  403e12:	mov    rax,QWORD PTR [rbp-0x18]
  403e16:	lea    rcx,[rip+0xfffffffffffffdee]        # 403c0b <_start@@Base+0xb1b>
  403e1d:	mov    edx,0x0
  403e22:	mov    esi,0xc
  403e27:	mov    rdi,rax
  403e2a:	call   40b8c7 <flatcc_verify_table_field@@Base>
  403e2f:	mov    DWORD PTR [rbp-0x4],eax
  403e32:	cmp    DWORD PTR [rbp-0x4],0x0
  403e36:	je     403e40 <_start@@Base+0xd50>
  403e38:	mov    eax,DWORD PTR [rbp-0x4]
  403e3b:	jmp    404255 <_start@@Base+0x1165>
  403e40:	mov    rax,QWORD PTR [rbp-0x18]
  403e44:	lea    rcx,[rip+0xfffffffffffff584]        # 4033cf <_start@@Base+0x2df>
  403e4b:	mov    edx,0x0
  403e50:	mov    esi,0x8
  403e55:	mov    rdi,rax
  403e58:	call   40c0d4 <flatcc_verify_union_field@@Base>
  403e5d:	mov    DWORD PTR [rbp-0x4],eax
  403e60:	cmp    DWORD PTR [rbp-0x4],0x0
  403e64:	je     403e6e <_start@@Base+0xd7e>
  403e66:	mov    eax,DWORD PTR [rbp-0x4]
  403e69:	jmp    404255 <_start@@Base+0x1165>
  403e6e:	mov    rax,QWORD PTR [rbp-0x18]
  403e72:	mov    r9d,0x3fffffff
  403e78:	mov    r8d,0x2
  403e7e:	mov    ecx,0x4
  403e83:	mov    edx,0x0
  403e88:	mov    esi,0x9
  403e8d:	mov    rdi,rax
  403e90:	call   40b762 <flatcc_verify_vector_field@@Base>
  403e95:	mov    DWORD PTR [rbp-0x4],eax
  403e98:	cmp    DWORD PTR [rbp-0x4],0x0
  403e9c:	je     403ea6 <_start@@Base+0xdb6>
  403e9e:	mov    eax,DWORD PTR [rbp-0x4]
  403ea1:	jmp    404255 <_start@@Base+0x1165>
  403ea6:	mov    rax,QWORD PTR [rbp-0x18]
  403eaa:	mov    r9d,0x3fffffff
  403eb0:	mov    r8d,0x2
  403eb6:	mov    ecx,0x4
  403ebb:	mov    edx,0x0
  403ec0:	mov    esi,0x1f
  403ec5:	mov    rdi,rax
  403ec8:	call   40b762 <flatcc_verify_vector_field@@Base>
  403ecd:	mov    DWORD PTR [rbp-0x4],eax
  403ed0:	cmp    DWORD PTR [rbp-0x4],0x0
  403ed4:	je     403ede <_start@@Base+0xdee>
  403ed6:	mov    eax,DWORD PTR [rbp-0x4]
  403ed9:	jmp    404255 <_start@@Base+0x1165>
  403ede:	mov    rax,QWORD PTR [rbp-0x18]
  403ee2:	lea    r9,[rip+0xfffffffffffffd22]        # 403c0b <_start@@Base+0xb1b>
  403ee9:	mov    r8d,0x1
  403eef:	mov    ecx,0x0
  403ef4:	mov    edx,0x0
  403ef9:	mov    esi,0xd
  403efe:	mov    rdi,rax
  403f01:	call   40bf91 <flatcc_verify_table_as_nested_root@@Base>
  403f06:	mov    DWORD PTR [rbp-0x4],eax
  403f09:	cmp    DWORD PTR [rbp-0x4],0x0
  403f0d:	je     403f17 <_start@@Base+0xe27>
  403f0f:	mov    eax,DWORD PTR [rbp-0x4]
  403f12:	jmp    404255 <_start@@Base+0x1165>
  403f17:	mov    rax,QWORD PTR [rbp-0x18]
  403f1b:	lea    rcx,[rip+0xfffffffffffff834]        # 403756 <_start@@Base+0x666>
  403f22:	mov    edx,0x0
  403f27:	mov    esi,0xe
  403f2c:	mov    rdi,rax
  403f2f:	call   40b8c7 <flatcc_verify_table_field@@Base>
  403f34:	mov    DWORD PTR [rbp-0x4],eax
  403f37:	cmp    DWORD PTR [rbp-0x4],0x0
  403f3b:	je     403f45 <_start@@Base+0xe55>
  403f3d:	mov    eax,DWORD PTR [rbp-0x4]
  403f40:	jmp    404255 <_start@@Base+0x1165>
  403f45:	mov    rax,QWORD PTR [rbp-0x18]
  403f49:	mov    ecx,0x1
  403f4e:	mov    edx,0x1
  403f53:	mov    esi,0xf
  403f58:	mov    rdi,rax
  403f5b:	call   40b662 <flatcc_verify_field@@Base>
  403f60:	mov    DWORD PTR [rbp-0x4],eax
  403f63:	cmp    DWORD PTR [rbp-0x4],0x0
  403f67:	je     403f71 <_start@@Base+0xe81>
  403f69:	mov    eax,DWORD PTR [rbp-0x4]
  403f6c:	jmp    404255 <_start@@Base+0x1165>
  403f71:	mov    rax,QWORD PTR [rbp-0x18]
  403f75:	mov    ecx,0x4
  403f7a:	mov    edx,0x4
  403f7f:	mov    esi,0x10
  403f84:	mov    rdi,rax
  403f87:	call   40b662 <flatcc_verify_field@@Base>
  403f8c:	mov    DWORD PTR [rbp-0x4],eax
  403f8f:	cmp    DWORD PTR [rbp-0x4],0x0
  403f93:	je     403f9d <_start@@Base+0xead>
  403f95:	mov    eax,DWORD PTR [rbp-0x4]
  403f98:	jmp    404255 <_start@@Base+0x1165>
  403f9d:	mov    rax,QWORD PTR [rbp-0x18]
  403fa1:	mov    ecx,0x4
  403fa6:	mov    edx,0x4
  403fab:	mov    esi,0x11
  403fb0:	mov    rdi,rax
  403fb3:	call   40b662 <flatcc_verify_field@@Base>
  403fb8:	mov    DWORD PTR [rbp-0x4],eax
  403fbb:	cmp    DWORD PTR [rbp-0x4],0x0
  403fbf:	je     403fc9 <_start@@Base+0xed9>
  403fc1:	mov    eax,DWORD PTR [rbp-0x4]
  403fc4:	jmp    404255 <_start@@Base+0x1165>
  403fc9:	mov    rax,QWORD PTR [rbp-0x18]
  403fcd:	mov    ecx,0x8
  403fd2:	mov    edx,0x8
  403fd7:	mov    esi,0x12
  403fdc:	mov    rdi,rax
  403fdf:	call   40b662 <flatcc_verify_field@@Base>
  403fe4:	mov    DWORD PTR [rbp-0x4],eax
  403fe7:	cmp    DWORD PTR [rbp-0x4],0x0
  403feb:	je     403ff5 <_start@@Base+0xf05>
  403fed:	mov    eax,DWORD PTR [rbp-0x4]
  403ff0:	jmp    404255 <_start@@Base+0x1165>
  403ff5:	mov    rax,QWORD PTR [rbp-0x18]
  403ff9:	mov    ecx,0x8
  403ffe:	mov    edx,0x8
  404003:	mov    esi,0x13
  404008:	mov    rdi,rax
  40400b:	call   40b662 <flatcc_verify_field@@Base>
  404010:	mov    DWORD PTR [rbp-0x4],eax
  404013:	cmp    DWORD PTR [rbp-0x4],0x0
  404017:	je     404021 <_start@@Base+0xf31>
  404019:	mov    eax,DWORD PTR [rbp-0x4]
  40401c:	jmp    404255 <_start@@Base+0x1165>
  404021:	mov    rax,QWORD PTR [rbp-0x18]
  404025:	mov    ecx,0x4
  40402a:	mov    edx,0x4
  40402f:	mov    esi,0x14
  404034:	mov    rdi,rax
  404037:	call   40b662 <flatcc_verify_field@@Base>
  40403c:	mov    DWORD PTR [rbp-0x4],eax
  40403f:	cmp    DWORD PTR [rbp-0x4],0x0
  404043:	je     40404d <_start@@Base+0xf5d>
  404045:	mov    eax,DWORD PTR [rbp-0x4]
  404048:	jmp    404255 <_start@@Base+0x1165>
  40404d:	mov    rax,QWORD PTR [rbp-0x18]
  404051:	mov    ecx,0x4
  404056:	mov    edx,0x4
  40405b:	mov    esi,0x15
  404060:	mov    rdi,rax
  404063:	call   40b662 <flatcc_verify_field@@Base>
  404068:	mov    DWORD PTR [rbp-0x4],eax
  40406b:	cmp    DWORD PTR [rbp-0x4],0x0
  40406f:	je     404079 <_start@@Base+0xf89>
  404071:	mov    eax,DWORD PTR [rbp-0x4]
  404074:	jmp    404255 <_start@@Base+0x1165>
  404079:	mov    rax,QWORD PTR [rbp-0x18]
  40407d:	mov    ecx,0x8
  404082:	mov    edx,0x8
  404087:	mov    esi,0x16
  40408c:	mov    rdi,rax
  40408f:	call   40b662 <flatcc_verify_field@@Base>
  404094:	mov    DWORD PTR [rbp-0x4],eax
  404097:	cmp    DWORD PTR [rbp-0x4],0x0
  40409b:	je     4040a5 <_start@@Base+0xfb5>
  40409d:	mov    eax,DWORD PTR [rbp-0x4]
  4040a0:	jmp    404255 <_start@@Base+0x1165>
  4040a5:	mov    rax,QWORD PTR [rbp-0x18]
  4040a9:	mov    ecx,0x8
  4040ae:	mov    edx,0x8
  4040b3:	mov    esi,0x17
  4040b8:	mov    rdi,rax
  4040bb:	call   40b662 <flatcc_verify_field@@Base>
  4040c0:	mov    DWORD PTR [rbp-0x4],eax
  4040c3:	cmp    DWORD PTR [rbp-0x4],0x0
  4040c7:	je     4040d1 <_start@@Base+0xfe1>
  4040c9:	mov    eax,DWORD PTR [rbp-0x4]
  4040cc:	jmp    404255 <_start@@Base+0x1165>
  4040d1:	mov    rax,QWORD PTR [rbp-0x18]
  4040d5:	mov    ecx,0x4
  4040da:	mov    edx,0x4
  4040df:	mov    esi,0x19
  4040e4:	mov    rdi,rax
  4040e7:	call   40b662 <flatcc_verify_field@@Base>
  4040ec:	mov    DWORD PTR [rbp-0x4],eax
  4040ef:	cmp    DWORD PTR [rbp-0x4],0x0
  4040f3:	je     4040fd <_start@@Base+0x100d>
  4040f5:	mov    eax,DWORD PTR [rbp-0x4]
  4040f8:	jmp    404255 <_start@@Base+0x1165>
  4040fd:	mov    rax,QWORD PTR [rbp-0x18]
  404101:	mov    ecx,0x4
  404106:	mov    edx,0x4
  40410b:	mov    esi,0x1a
  404110:	mov    rdi,rax
  404113:	call   40b662 <flatcc_verify_field@@Base>
  404118:	mov    DWORD PTR [rbp-0x4],eax
  40411b:	cmp    DWORD PTR [rbp-0x4],0x0
  40411f:	je     404129 <_start@@Base+0x1039>
  404121:	mov    eax,DWORD PTR [rbp-0x4]
  404124:	jmp    404255 <_start@@Base+0x1165>
  404129:	mov    rax,QWORD PTR [rbp-0x18]
  40412d:	mov    ecx,0x4
  404132:	mov    edx,0x4
  404137:	mov    esi,0x1b
  40413c:	mov    rdi,rax
  40413f:	call   40b662 <flatcc_verify_field@@Base>
  404144:	mov    DWORD PTR [rbp-0x4],eax
  404147:	cmp    DWORD PTR [rbp-0x4],0x0
  40414b:	je     404155 <_start@@Base+0x1065>
  40414d:	mov    eax,DWORD PTR [rbp-0x4]
  404150:	jmp    404255 <_start@@Base+0x1165>
  404155:	mov    rax,QWORD PTR [rbp-0x18]
  404159:	mov    r9d,0xffffffff
  40415f:	mov    r8d,0x1
  404165:	mov    ecx,0x1
  40416a:	mov    edx,0x0
  40416f:	mov    esi,0x1e
  404174:	mov    rdi,rax
  404177:	call   40b762 <flatcc_verify_vector_field@@Base>
  40417c:	mov    DWORD PTR [rbp-0x4],eax
  40417f:	cmp    DWORD PTR [rbp-0x4],0x0
  404183:	je     40418d <_start@@Base+0x109d>
  404185:	mov    eax,DWORD PTR [rbp-0x4]
  404188:	jmp    404255 <_start@@Base+0x1165>
  40418d:	mov    rax,QWORD PTR [rbp-0x18]
  404191:	mov    r9d,0x1fffffff
  404197:	mov    r8d,0x8
  40419d:	mov    ecx,0x8
  4041a2:	mov    edx,0x0
  4041a7:	mov    esi,0x20
  4041ac:	mov    rdi,rax
  4041af:	call   40b762 <flatcc_verify_vector_field@@Base>
  4041b4:	mov    DWORD PTR [rbp-0x4],eax
  4041b7:	cmp    DWORD PTR [rbp-0x4],0x0
  4041bb:	je     4041c5 <_start@@Base+0x10d5>
  4041bd:	mov    eax,DWORD PTR [rbp-0x4]
  4041c0:	jmp    404255 <_start@@Base+0x1165>
  4041c5:	mov    rax,QWORD PTR [rbp-0x18]
  4041c9:	mov    r9d,0x1fffffff
  4041cf:	mov    r8d,0x8
  4041d5:	mov    ecx,0x8
  4041da:	mov    edx,0x0
  4041df:	mov    esi,0x21
  4041e4:	mov    rdi,rax
  4041e7:	call   40b762 <flatcc_verify_vector_field@@Base>
  4041ec:	mov    DWORD PTR [rbp-0x4],eax
  4041ef:	cmp    DWORD PTR [rbp-0x4],0x0
  4041f3:	je     4041fa <_start@@Base+0x110a>
  4041f5:	mov    eax,DWORD PTR [rbp-0x4]
  4041f8:	jmp    404255 <_start@@Base+0x1165>
  4041fa:	mov    rax,QWORD PTR [rbp-0x18]
  4041fe:	lea    rcx,[rip+0xfffffffffffff31c]        # 403521 <_start@@Base+0x431>
  404205:	mov    edx,0x0
  40420a:	mov    esi,0x22
  40420f:	mov    rdi,rax
  404212:	call   40b8c7 <flatcc_verify_table_field@@Base>
  404217:	mov    DWORD PTR [rbp-0x4],eax
  40421a:	cmp    DWORD PTR [rbp-0x4],0x0
  40421e:	je     404225 <_start@@Base+0x1135>
  404220:	mov    eax,DWORD PTR [rbp-0x4]
  404223:	jmp    404255 <_start@@Base+0x1165>
  404225:	mov    rax,QWORD PTR [rbp-0x18]
  404229:	lea    rcx,[rip+0xfffffffffffff928]        # 403b58 <_start@@Base+0xa68>
  404230:	mov    edx,0x0
  404235:	mov    esi,0x23
  40423a:	mov    rdi,rax
  40423d:	call   40b8c7 <flatcc_verify_table_field@@Base>
  404242:	mov    DWORD PTR [rbp-0x4],eax
  404245:	cmp    DWORD PTR [rbp-0x4],0x0
  404249:	je     404250 <_start@@Base+0x1160>
  40424b:	mov    eax,DWORD PTR [rbp-0x4]
  40424e:	jmp    404255 <_start@@Base+0x1165>
  404250:	mov    eax,0x0
  404255:	leave  
  404256:	ret    
  404257:	push   rbp
  404258:	mov    rbp,rsp
  40425b:	sub    rsp,0x10
  40425f:	mov    QWORD PTR [rbp-0x8],rdi
  404263:	mov    QWORD PTR [rbp-0x10],rsi
  404267:	mov    rsi,QWORD PTR [rbp-0x10]
  40426b:	mov    rax,QWORD PTR [rbp-0x8]
  40426f:	lea    rcx,[rip+0xfffffffffffff995]        # 403c0b <_start@@Base+0xb1b>
  404276:	lea    rdx,[rip+0x8edb]        # 40d158 <_IO_stdin_used@@Base+0x158>
  40427d:	mov    rdi,rax
  404280:	call   40bd97 <flatcc_verify_table_as_root@@Base>
  404285:	leave  
  404286:	ret    
  404287:	push   rbp
  404288:	mov    rbp,rsp
  40428b:	sub    rsp,0x20
  40428f:	mov    QWORD PTR [rbp-0x18],rdi
  404293:	mov    rax,QWORD PTR [rbp-0x18]
  404297:	mov    ecx,0x1
  40429c:	mov    edx,0x1
  4042a1:	mov    esi,0x0
  4042a6:	mov    rdi,rax
  4042a9:	call   40b662 <flatcc_verify_field@@Base>
  4042ae:	mov    DWORD PTR [rbp-0x4],eax
  4042b1:	cmp    DWORD PTR [rbp-0x4],0x0
  4042b5:	je     4042bf <_start@@Base+0x11cf>
  4042b7:	mov    eax,DWORD PTR [rbp-0x4]
  4042ba:	jmp    4044b7 <_start@@Base+0x13c7>
  4042bf:	mov    rax,QWORD PTR [rbp-0x18]
  4042c3:	mov    ecx,0x1
  4042c8:	mov    edx,0x1
  4042cd:	mov    esi,0x1
  4042d2:	mov    rdi,rax
  4042d5:	call   40b662 <flatcc_verify_field@@Base>
  4042da:	mov    DWORD PTR [rbp-0x4],eax
  4042dd:	cmp    DWORD PTR [rbp-0x4],0x0
  4042e1:	je     4042eb <_start@@Base+0x11fb>
  4042e3:	mov    eax,DWORD PTR [rbp-0x4]
  4042e6:	jmp    4044b7 <_start@@Base+0x13c7>
  4042eb:	mov    rax,QWORD PTR [rbp-0x18]
  4042ef:	mov    ecx,0x2
  4042f4:	mov    edx,0x2
  4042f9:	mov    esi,0x2
  4042fe:	mov    rdi,rax
  404301:	call   40b662 <flatcc_verify_field@@Base>
  404306:	mov    DWORD PTR [rbp-0x4],eax
  404309:	cmp    DWORD PTR [rbp-0x4],0x0
  40430d:	je     404317 <_start@@Base+0x1227>
  40430f:	mov    eax,DWORD PTR [rbp-0x4]
  404312:	jmp    4044b7 <_start@@Base+0x13c7>
  404317:	mov    rax,QWORD PTR [rbp-0x18]
  40431b:	mov    ecx,0x2
  404320:	mov    edx,0x2
  404325:	mov    esi,0x3
  40432a:	mov    rdi,rax
  40432d:	call   40b662 <flatcc_verify_field@@Base>
  404332:	mov    DWORD PTR [rbp-0x4],eax
  404335:	cmp    DWORD PTR [rbp-0x4],0x0
  404339:	je     404343 <_start@@Base+0x1253>
  40433b:	mov    eax,DWORD PTR [rbp-0x4]
  40433e:	jmp    4044b7 <_start@@Base+0x13c7>
  404343:	mov    rax,QWORD PTR [rbp-0x18]
  404347:	mov    ecx,0x4
  40434c:	mov    edx,0x4
  404351:	mov    esi,0x4
  404356:	mov    rdi,rax
  404359:	call   40b662 <flatcc_verify_field@@Base>
  40435e:	mov    DWORD PTR [rbp-0x4],eax
  404361:	cmp    DWORD PTR [rbp-0x4],0x0
  404365:	je     40436f <_start@@Base+0x127f>
  404367:	mov    eax,DWORD PTR [rbp-0x4]
  40436a:	jmp    4044b7 <_start@@Base+0x13c7>
  40436f:	mov    rax,QWORD PTR [rbp-0x18]
  404373:	mov    ecx,0x4
  404378:	mov    edx,0x4
  40437d:	mov    esi,0x5
  404382:	mov    rdi,rax
  404385:	call   40b662 <flatcc_verify_field@@Base>
  40438a:	mov    DWORD PTR [rbp-0x4],eax
  40438d:	cmp    DWORD PTR [rbp-0x4],0x0
  404391:	je     40439b <_start@@Base+0x12ab>
  404393:	mov    eax,DWORD PTR [rbp-0x4]
  404396:	jmp    4044b7 <_start@@Base+0x13c7>
  40439b:	mov    rax,QWORD PTR [rbp-0x18]
  40439f:	mov    ecx,0x8
  4043a4:	mov    edx,0x8
  4043a9:	mov    esi,0x6
  4043ae:	mov    rdi,rax
  4043b1:	call   40b662 <flatcc_verify_field@@Base>
  4043b6:	mov    DWORD PTR [rbp-0x4],eax
  4043b9:	cmp    DWORD PTR [rbp-0x4],0x0
  4043bd:	je     4043c7 <_start@@Base+0x12d7>
  4043bf:	mov    eax,DWORD PTR [rbp-0x4]
  4043c2:	jmp    4044b7 <_start@@Base+0x13c7>
  4043c7:	mov    rax,QWORD PTR [rbp-0x18]
  4043cb:	mov    ecx,0x8
  4043d0:	mov    edx,0x8
  4043d5:	mov    esi,0x7
  4043da:	mov    rdi,rax
  4043dd:	call   40b662 <flatcc_verify_field@@Base>
  4043e2:	mov    DWORD PTR [rbp-0x4],eax
  4043e5:	cmp    DWORD PTR [rbp-0x4],0x0
  4043e9:	je     4043f3 <_start@@Base+0x1303>
  4043eb:	mov    eax,DWORD PTR [rbp-0x4]
  4043ee:	jmp    4044b7 <_start@@Base+0x13c7>
  4043f3:	mov    rax,QWORD PTR [rbp-0x18]
  4043f7:	mov    ecx,0x4
  4043fc:	mov    edx,0x4
  404401:	mov    esi,0x8
  404406:	mov    rdi,rax
  404409:	call   40b662 <flatcc_verify_field@@Base>
  40440e:	mov    DWORD PTR [rbp-0x4],eax
  404411:	cmp    DWORD PTR [rbp-0x4],0x0
  404415:	je     40441f <_start@@Base+0x132f>
  404417:	mov    eax,DWORD PTR [rbp-0x4]
  40441a:	jmp    4044b7 <_start@@Base+0x13c7>
  40441f:	mov    rax,QWORD PTR [rbp-0x18]
  404423:	mov    ecx,0x8
  404428:	mov    edx,0x8
  40442d:	mov    esi,0x9
  404432:	mov    rdi,rax
  404435:	call   40b662 <flatcc_verify_field@@Base>
  40443a:	mov    DWORD PTR [rbp-0x4],eax
  40443d:	cmp    DWORD PTR [rbp-0x4],0x0
  404441:	je     404448 <_start@@Base+0x1358>
  404443:	mov    eax,DWORD PTR [rbp-0x4]
  404446:	jmp    4044b7 <_start@@Base+0x13c7>
  404448:	mov    rax,QWORD PTR [rbp-0x18]
  40444c:	mov    r9d,0xffffffff
  404452:	mov    r8d,0x1
  404458:	mov    ecx,0x1
  40445d:	mov    edx,0x0
  404462:	mov    esi,0xa
  404467:	mov    rdi,rax
  40446a:	call   40b762 <flatcc_verify_vector_field@@Base>
  40446f:	mov    DWORD PTR [rbp-0x4],eax
  404472:	cmp    DWORD PTR [rbp-0x4],0x0
  404476:	je     40447d <_start@@Base+0x138d>
  404478:	mov    eax,DWORD PTR [rbp-0x4]
  40447b:	jmp    4044b7 <_start@@Base+0x13c7>
  40447d:	mov    rax,QWORD PTR [rbp-0x18]
  404481:	mov    r9d,0x1fffffff
  404487:	mov    r8d,0x8
  40448d:	mov    ecx,0x8
  404492:	mov    edx,0x0
  404497:	mov    esi,0xb
  40449c:	mov    rdi,rax
  40449f:	call   40b762 <flatcc_verify_vector_field@@Base>
  4044a4:	mov    DWORD PTR [rbp-0x4],eax
  4044a7:	cmp    DWORD PTR [rbp-0x4],0x0
  4044ab:	je     4044b2 <_start@@Base+0x13c2>
  4044ad:	mov    eax,DWORD PTR [rbp-0x4]
  4044b0:	jmp    4044b7 <_start@@Base+0x13c7>
  4044b2:	mov    eax,0x0
  4044b7:	leave  
  4044b8:	ret    
  4044b9:	push   rbp
  4044ba:	mov    rbp,rsp
  4044bd:	sub    rsp,0x20
  4044c1:	mov    QWORD PTR [rbp-0x18],rdi
  4044c5:	mov    rax,QWORD PTR [rbp-0x18]
  4044c9:	mov    ecx,0x4
  4044ce:	mov    edx,0x4
  4044d3:	mov    esi,0x0
  4044d8:	mov    rdi,rax
  4044db:	call   40b662 <flatcc_verify_field@@Base>
  4044e0:	mov    DWORD PTR [rbp-0x4],eax
  4044e3:	cmp    DWORD PTR [rbp-0x4],0x0
  4044e7:	je     4044ee <_start@@Base+0x13fe>
  4044e9:	mov    eax,DWORD PTR [rbp-0x4]
  4044ec:	jmp    4044f3 <_start@@Base+0x1403>
  4044ee:	mov    eax,0x0
  4044f3:	leave  
  4044f4:	ret    
  4044f5:	push   rbp
  4044f6:	mov    rbp,rsp
  4044f9:	sub    rsp,0x20
  4044fd:	mov    QWORD PTR [rbp-0x18],rdi
  404501:	mov    rax,QWORD PTR [rbp-0x18]
  404505:	lea    rcx,[rip+0xffffffffffffef52]        # 40345e <_start@@Base+0x36e>
  40450c:	mov    edx,0x0
  404511:	mov    esi,0x1
  404516:	mov    rdi,rax
  404519:	call   40c0d4 <flatcc_verify_union_field@@Base>
  40451e:	mov    DWORD PTR [rbp-0x4],eax
  404521:	cmp    DWORD PTR [rbp-0x4],0x0
  404525:	je     40452f <_start@@Base+0x143f>
  404527:	mov    eax,DWORD PTR [rbp-0x4]
  40452a:	jmp    4045e3 <_start@@Base+0x14f3>
  40452f:	mov    rax,QWORD PTR [rbp-0x18]
  404533:	lea    rcx,[rip+0xffffffffffffef24]        # 40345e <_start@@Base+0x36e>
  40453a:	mov    edx,0x0
  40453f:	mov    esi,0x3
  404544:	mov    rdi,rax
  404547:	call   40c0d4 <flatcc_verify_union_field@@Base>
  40454c:	mov    DWORD PTR [rbp-0x4],eax
  40454f:	cmp    DWORD PTR [rbp-0x4],0x0
  404553:	je     40455d <_start@@Base+0x146d>
  404555:	mov    eax,DWORD PTR [rbp-0x4]
  404558:	jmp    4045e3 <_start@@Base+0x14f3>
  40455d:	mov    rax,QWORD PTR [rbp-0x18]
  404561:	lea    rcx,[rip+0xffffffffffffeef6]        # 40345e <_start@@Base+0x36e>
  404568:	mov    edx,0x0
  40456d:	mov    esi,0x5
  404572:	mov    rdi,rax
  404575:	call   40c0d4 <flatcc_verify_union_field@@Base>
  40457a:	mov    DWORD PTR [rbp-0x4],eax
  40457d:	cmp    DWORD PTR [rbp-0x4],0x0
  404581:	je     404588 <_start@@Base+0x1498>
  404583:	mov    eax,DWORD PTR [rbp-0x4]
  404586:	jmp    4045e3 <_start@@Base+0x14f3>
  404588:	mov    rax,QWORD PTR [rbp-0x18]
  40458c:	lea    rcx,[rip+0xffffffffffffeecb]        # 40345e <_start@@Base+0x36e>
  404593:	mov    edx,0x0
  404598:	mov    esi,0x7
  40459d:	mov    rdi,rax
  4045a0:	call   40c0d4 <flatcc_verify_union_field@@Base>
  4045a5:	mov    DWORD PTR [rbp-0x4],eax
  4045a8:	cmp    DWORD PTR [rbp-0x4],0x0
  4045ac:	je     4045b3 <_start@@Base+0x14c3>
  4045ae:	mov    eax,DWORD PTR [rbp-0x4]
  4045b1:	jmp    4045e3 <_start@@Base+0x14f3>
  4045b3:	mov    rax,QWORD PTR [rbp-0x18]
  4045b7:	lea    rcx,[rip+0xffffffffffffeea0]        # 40345e <_start@@Base+0x36e>
  4045be:	mov    edx,0x0
  4045c3:	mov    esi,0x9
  4045c8:	mov    rdi,rax
  4045cb:	call   40c2db <flatcc_verify_union_vector_field@@Base>
  4045d0:	mov    DWORD PTR [rbp-0x4],eax
  4045d3:	cmp    DWORD PTR [rbp-0x4],0x0
  4045d7:	je     4045de <_start@@Base+0x14ee>
  4045d9:	mov    eax,DWORD PTR [rbp-0x4]
  4045dc:	jmp    4045e3 <_start@@Base+0x14f3>
  4045de:	mov    eax,0x0
  4045e3:	leave  
  4045e4:	ret    

00000000004045e5 <main@@Base>:
  4045e5:	push   rbp
  4045e6:	mov    rbp,rsp
  4045e9:	sub    rsp,0x1c0
  4045f0:	mov    DWORD PTR [rbp-0x1b4],edi
  4045f6:	mov    QWORD PTR [rbp-0x1c0],rsi
  4045fd:	mov    rax,QWORD PTR fs:0x28
  404606:	mov    QWORD PTR [rbp-0x8],rax
  40460a:	xor    eax,eax
  40460c:	lea    rax,[rbp-0x190]
  404613:	mov    QWORD PTR [rbp-0x1a0],rax
  40461a:	mov    rax,QWORD PTR [rbp-0x1a0]
  404621:	mov    rdi,rax
  404624:	call   40516a <flatcc_builder_init@@Base>
  404629:	mov    rax,QWORD PTR [rbp-0x1a0]
  404630:	mov    rdi,rax
  404633:	call   403335 <_start@@Base+0x245>
  404638:	mov    rax,QWORD PTR [rbp-0x1a0]
  40463f:	lea    rsi,[rip+0x8b17]        # 40d15d <_IO_stdin_used@@Base+0x15d>
  404646:	mov    rdi,rax
  404649:	call   403300 <_start@@Base+0x210>
  40464e:	mov    rax,QWORD PTR [rbp-0x1a0]
  404655:	mov    rdi,rax
  404658:	call   40336d <_start@@Base+0x27d>
  40465d:	lea    rdx,[rbp-0x1a8]
  404664:	mov    rax,QWORD PTR [rbp-0x1a0]
  40466b:	mov    rsi,rdx
  40466e:	mov    rdi,rax
  404671:	call   4099e5 <flatcc_builder_get_direct_buffer@@Base>
  404676:	mov    QWORD PTR [rbp-0x198],rax
  40467d:	mov    rdx,QWORD PTR [rbp-0x1a8]
  404684:	mov    rax,QWORD PTR [rbp-0x198]
  40468b:	mov    rsi,rdx
  40468e:	mov    rdi,rax
  404691:	call   404257 <_start@@Base+0x1167>
  404696:	mov    DWORD PTR [rbp-0x1ac],eax
  40469c:	mov    rax,QWORD PTR [rbp-0x1a0]
  4046a3:	mov    rdi,rax
  4046a6:	call   4053ce <flatcc_builder_clear@@Base>
  4046ab:	mov    eax,DWORD PTR [rbp-0x1ac]
  4046b1:	mov    rcx,QWORD PTR [rbp-0x8]
  4046b5:	xor    rcx,QWORD PTR fs:0x28
  4046be:	je     4046c5 <main@@Base+0xe0>
  4046c0:	call   403060 <__stack_chk_fail@plt>
  4046c5:	leave  
  4046c6:	ret    
  4046c7:	push   rbp
  4046c8:	mov    rbp,rsp
  4046cb:	sub    rsp,0x30
  4046cf:	mov    QWORD PTR [rbp-0x28],rdi
  4046d3:	mov    QWORD PTR [rbp-0x30],rsi
  4046d7:	mov    rax,QWORD PTR fs:0x28
  4046e0:	mov    QWORD PTR [rbp-0x8],rax
  4046e4:	xor    eax,eax
  4046e6:	mov    QWORD PTR [rbp-0x10],0x0
  4046ee:	cmp    QWORD PTR [rbp-0x28],0x7
  4046f3:	ja     4046fd <main@@Base+0x118>
  4046f5:	mov    QWORD PTR [rbp-0x28],0x8
  4046fd:	mov    rdx,QWORD PTR [rbp-0x30]
  404701:	mov    rcx,QWORD PTR [rbp-0x28]
  404705:	lea    rax,[rbp-0x10]
  404709:	mov    rsi,rcx
  40470c:	mov    rdi,rax
  40470f:	call   4030e0 <posix_memalign@plt>
  404714:	mov    DWORD PTR [rbp-0x14],eax
  404717:	cmp    DWORD PTR [rbp-0x14],0x0
  40471b:	je     40473a <main@@Base+0x155>
  40471d:	mov    rax,QWORD PTR [rbp-0x10]
  404721:	test   rax,rax
  404724:	je     40473a <main@@Base+0x155>
  404726:	mov    rax,QWORD PTR [rbp-0x10]
  40472a:	mov    rdi,rax
  40472d:	call   403030 <free@plt>
  404732:	mov    QWORD PTR [rbp-0x10],0x0
  40473a:	mov    rax,QWORD PTR [rbp-0x10]
  40473e:	mov    rcx,QWORD PTR [rbp-0x8]
  404742:	xor    rcx,QWORD PTR fs:0x28
  40474b:	je     404752 <main@@Base+0x16d>
  40474d:	call   403060 <__stack_chk_fail@plt>
  404752:	leave  
  404753:	ret    
  404754:	push   rbp
  404755:	mov    rbp,rsp
  404758:	mov    DWORD PTR [rbp-0x4],edi
  40475b:	mov    eax,DWORD PTR [rbp-0x4]
  40475e:	pop    rbp
  40475f:	ret    
  404760:	push   rbp
  404761:	mov    rbp,rsp
  404764:	mov    eax,edi
  404766:	mov    BYTE PTR [rbp-0x4],al
  404769:	movzx  eax,BYTE PTR [rbp-0x4]
  40476d:	pop    rbp
  40476e:	ret    
  40476f:	push   rbp
  404770:	mov    rbp,rsp
  404773:	mov    DWORD PTR [rbp-0x4],edi
  404776:	mov    eax,DWORD PTR [rbp-0x4]
  404779:	pop    rbp
  40477a:	ret    
  40477b:	push   rbp
  40477c:	mov    rbp,rsp
  40477f:	mov    QWORD PTR [rbp-0x8],rdi
  404783:	mov    QWORD PTR [rbp-0x10],rsi
  404787:	mov    rax,QWORD PTR [rbp-0x8]
  40478b:	mov    rdx,QWORD PTR [rax]
  40478e:	mov    rax,QWORD PTR [rbp-0x8]
  404792:	mov    rax,QWORD PTR [rax+0x8]
  404796:	cmp    rdx,rax
  404799:	jne    4047bb <main@@Base+0x1d6>
  40479b:	cmp    QWORD PTR [rbp-0x10],0x0
  4047a0:	je     4047b1 <main@@Base+0x1cc>
  4047a2:	mov    rax,QWORD PTR [rbp-0x8]
  4047a6:	mov    rdx,QWORD PTR [rax+0x30]
  4047aa:	mov    rax,QWORD PTR [rbp-0x10]
  4047ae:	mov    QWORD PTR [rax],rdx
  4047b1:	mov    rax,QWORD PTR [rbp-0x8]
  4047b5:	mov    rax,QWORD PTR [rax+0x10]
  4047b9:	jmp    4047d2 <main@@Base+0x1ed>
  4047bb:	cmp    QWORD PTR [rbp-0x10],0x0
  4047c0:	je     4047cd <main@@Base+0x1e8>
  4047c2:	mov    rax,QWORD PTR [rbp-0x10]
  4047c6:	mov    QWORD PTR [rax],0x0
  4047cd:	mov    eax,0x0
  4047d2:	pop    rbp
  4047d3:	ret    
  4047d4:	push   rbp
  4047d5:	mov    rbp,rsp
  4047d8:	sub    rsp,0x20
  4047dc:	mov    QWORD PTR [rbp-0x18],rdi
  4047e0:	mov    QWORD PTR [rbp-0x20],rsi
  4047e4:	mov    rdx,QWORD PTR [rbp-0x20]
  4047e8:	mov    rax,QWORD PTR [rbp-0x18]
  4047ec:	mov    esi,0x0
  4047f1:	mov    rdi,rax
  4047f4:	call   403090 <memchr@plt>
  4047f9:	mov    QWORD PTR [rbp-0x8],rax
  4047fd:	cmp    QWORD PTR [rbp-0x8],0x0
  404802:	je     404814 <main@@Base+0x22f>
  404804:	mov    rdx,QWORD PTR [rbp-0x8]
  404808:	mov    rax,QWORD PTR [rbp-0x18]
  40480c:	sub    rdx,rax
  40480f:	mov    rax,rdx
  404812:	jmp    404818 <main@@Base+0x233>
  404814:	mov    rax,QWORD PTR [rbp-0x20]
  404818:	leave  
  404819:	ret    

000000000040481a <flatcc_builder_default_alloc@@Base>:
  40481a:	push   rbp
  40481b:	mov    rbp,rsp
  40481e:	sub    rsp,0x30
  404822:	mov    QWORD PTR [rbp-0x18],rdi
  404826:	mov    QWORD PTR [rbp-0x20],rsi
  40482a:	mov    QWORD PTR [rbp-0x28],rdx
  40482e:	mov    DWORD PTR [rbp-0x2c],ecx
  404831:	mov    DWORD PTR [rbp-0x30],r8d
  404835:	cmp    QWORD PTR [rbp-0x28],0x0
  40483a:	jne    404878 <flatcc_builder_default_alloc@@Base+0x5e>
  40483c:	mov    rax,QWORD PTR [rbp-0x20]
  404840:	mov    rax,QWORD PTR [rax]
  404843:	test   rax,rax
  404846:	je     40486e <flatcc_builder_default_alloc@@Base+0x54>
  404848:	mov    rax,QWORD PTR [rbp-0x20]
  40484c:	mov    rax,QWORD PTR [rax]
  40484f:	mov    rdi,rax
  404852:	call   403030 <free@plt>
  404857:	mov    rax,QWORD PTR [rbp-0x20]
  40485b:	mov    QWORD PTR [rax],0x0
  404862:	mov    rax,QWORD PTR [rbp-0x20]
  404866:	mov    QWORD PTR [rax+0x8],0x0
  40486e:	mov    eax,0x0
  404873:	jmp    404985 <flatcc_builder_default_alloc@@Base+0x16b>
  404878:	mov    eax,DWORD PTR [rbp-0x30]
  40487b:	cmp    eax,0x4
  40487e:	je     4048ac <flatcc_builder_default_alloc@@Base+0x92>
  404880:	cmp    eax,0x4
  404883:	jg     40488c <flatcc_builder_default_alloc@@Base+0x72>
  404885:	cmp    eax,0x1
  404888:	je     404898 <flatcc_builder_default_alloc@@Base+0x7e>
  40488a:	jmp    4048c0 <flatcc_builder_default_alloc@@Base+0xa6>
  40488c:	cmp    eax,0x5
  40488f:	je     4048a2 <flatcc_builder_default_alloc@@Base+0x88>
  404891:	cmp    eax,0x7
  404894:	je     4048b6 <flatcc_builder_default_alloc@@Base+0x9c>
  404896:	jmp    4048c0 <flatcc_builder_default_alloc@@Base+0xa6>
  404898:	mov    QWORD PTR [rbp-0x10],0x100
  4048a0:	jmp    4048c9 <flatcc_builder_default_alloc@@Base+0xaf>
  4048a2:	mov    rax,QWORD PTR [rbp-0x28]
  4048a6:	mov    QWORD PTR [rbp-0x10],rax
  4048aa:	jmp    4048c9 <flatcc_builder_default_alloc@@Base+0xaf>
  4048ac:	mov    QWORD PTR [rbp-0x10],0x120
  4048b4:	jmp    4048c9 <flatcc_builder_default_alloc@@Base+0xaf>
  4048b6:	mov    QWORD PTR [rbp-0x10],0x40
  4048be:	jmp    4048c9 <flatcc_builder_default_alloc@@Base+0xaf>
  4048c0:	mov    QWORD PTR [rbp-0x10],0x20
  4048c8:	nop
  4048c9:	jmp    4048cf <flatcc_builder_default_alloc@@Base+0xb5>
  4048cb:	shl    QWORD PTR [rbp-0x10],1
  4048cf:	mov    rax,QWORD PTR [rbp-0x10]
  4048d3:	cmp    rax,QWORD PTR [rbp-0x28]
  4048d7:	jb     4048cb <flatcc_builder_default_alloc@@Base+0xb1>
  4048d9:	mov    rax,QWORD PTR [rbp-0x20]
  4048dd:	mov    rax,QWORD PTR [rax+0x8]
  4048e1:	cmp    rax,QWORD PTR [rbp-0x28]
  4048e5:	jb     404902 <flatcc_builder_default_alloc@@Base+0xe8>
  4048e7:	mov    rax,QWORD PTR [rbp-0x20]
  4048eb:	mov    rax,QWORD PTR [rax+0x8]
  4048ef:	shr    rax,1
  4048f2:	cmp    rax,QWORD PTR [rbp-0x10]
  4048f6:	jb     404902 <flatcc_builder_default_alloc@@Base+0xe8>
  4048f8:	mov    eax,0x0
  4048fd:	jmp    404985 <flatcc_builder_default_alloc@@Base+0x16b>
  404902:	mov    rax,QWORD PTR [rbp-0x20]
  404906:	mov    rax,QWORD PTR [rax]
  404909:	mov    rdx,QWORD PTR [rbp-0x10]
  40490d:	mov    rsi,rdx
  404910:	mov    rdi,rax
  404913:	call   4030d0 <realloc@plt>
  404918:	mov    QWORD PTR [rbp-0x8],rax
  40491c:	cmp    QWORD PTR [rbp-0x8],0x0
  404921:	jne    40492a <flatcc_builder_default_alloc@@Base+0x110>
  404923:	mov    eax,0xffffffff
  404928:	jmp    404985 <flatcc_builder_default_alloc@@Base+0x16b>
  40492a:	cmp    DWORD PTR [rbp-0x2c],0x0
  40492e:	je     404969 <flatcc_builder_default_alloc@@Base+0x14f>
  404930:	mov    rax,QWORD PTR [rbp-0x20]
  404934:	mov    rax,QWORD PTR [rax+0x8]
  404938:	cmp    rax,QWORD PTR [rbp-0x10]
  40493c:	jae    404969 <flatcc_builder_default_alloc@@Base+0x14f>
  40493e:	mov    rax,QWORD PTR [rbp-0x20]
  404942:	mov    rax,QWORD PTR [rax+0x8]
  404946:	mov    rdx,QWORD PTR [rbp-0x10]
  40494a:	sub    rdx,rax
  40494d:	mov    rax,QWORD PTR [rbp-0x20]
  404951:	mov    rcx,QWORD PTR [rax+0x8]
  404955:	mov    rax,QWORD PTR [rbp-0x8]
  404959:	add    rax,rcx
  40495c:	mov    esi,0x0
  404961:	mov    rdi,rax
  404964:	call   403080 <memset@plt>
  404969:	mov    rax,QWORD PTR [rbp-0x20]
  40496d:	mov    rdx,QWORD PTR [rbp-0x8]
  404971:	mov    QWORD PTR [rax],rdx
  404974:	mov    rax,QWORD PTR [rbp-0x20]
  404978:	mov    rdx,QWORD PTR [rbp-0x10]
  40497c:	mov    QWORD PTR [rax+0x8],rdx
  404980:	mov    eax,0x0
  404985:	leave  
  404986:	ret    
  404987:	push   rbp
  404988:	mov    rbp,rsp
  40498b:	mov    QWORD PTR [rbp-0x18],rdi
  40498f:	mov    DWORD PTR [rbp-0x1c],esi
  404992:	mov    rax,QWORD PTR [rbp-0x18]
  404996:	add    rax,0x58
  40499a:	add    rax,0x10
  40499e:	mov    QWORD PTR [rbp-0x8],rax
  4049a2:	mov    rax,QWORD PTR [rbp-0x18]
  4049a6:	mov    rdx,QWORD PTR [rax+0x68]
  4049aa:	mov    rax,QWORD PTR [rbp-0x18]
  4049ae:	mov    eax,DWORD PTR [rax+0x28]
  4049b1:	mov    eax,eax
  4049b3:	add    rdx,rax
  4049b6:	mov    rax,QWORD PTR [rbp-0x18]
  4049ba:	mov    QWORD PTR [rax+0x18],rdx
  4049be:	mov    rax,QWORD PTR [rbp-0x8]
  4049c2:	mov    rax,QWORD PTR [rax+0x8]
  4049c6:	mov    edx,eax
  4049c8:	mov    rax,QWORD PTR [rbp-0x18]
  4049cc:	mov    eax,DWORD PTR [rax+0x28]
  4049cf:	sub    edx,eax
  4049d1:	mov    rax,QWORD PTR [rbp-0x18]
  4049d5:	mov    DWORD PTR [rax+0x24],edx
  4049d8:	mov    rax,QWORD PTR [rbp-0x18]
  4049dc:	mov    eax,DWORD PTR [rax+0x24]
  4049df:	cmp    eax,DWORD PTR [rbp-0x1c]
  4049e2:	jbe    4049ee <flatcc_builder_default_alloc@@Base+0x1d4>
  4049e4:	mov    rax,QWORD PTR [rbp-0x18]
  4049e8:	mov    edx,DWORD PTR [rbp-0x1c]
  4049eb:	mov    DWORD PTR [rax+0x24],edx
  4049ee:	mov    rax,QWORD PTR [rbp-0x18]
  4049f2:	mov    rax,QWORD PTR [rax+0x30]
  4049f6:	mov    edx,DWORD PTR [rbp-0x1c]
  4049f9:	mov    DWORD PTR [rax+0x4],edx
  4049fc:	nop
  4049fd:	pop    rbp
  4049fe:	ret    
  4049ff:	push   rbp
  404a00:	mov    rbp,rsp
  404a03:	sub    rsp,0x30
  404a07:	mov    QWORD PTR [rbp-0x18],rdi
  404a0b:	mov    QWORD PTR [rbp-0x20],rsi
  404a0f:	mov    DWORD PTR [rbp-0x24],edx
  404a12:	mov    rax,QWORD PTR [rbp-0x18]
  404a16:	add    rax,0x58
  404a1a:	add    rax,0x10
  404a1e:	mov    QWORD PTR [rbp-0x8],rax
  404a22:	mov    rax,QWORD PTR [rbp-0x18]
  404a26:	mov    rax,QWORD PTR [rax+0x50]
  404a2a:	mov    rdx,QWORD PTR [rbp-0x18]
  404a2e:	mov    edx,DWORD PTR [rdx+0x28]
  404a31:	mov    ecx,edx
  404a33:	mov    rdx,QWORD PTR [rbp-0x20]
  404a37:	lea    r9,[rcx+rdx*1]
  404a3b:	mov    rdx,QWORD PTR [rbp-0x18]
  404a3f:	mov    rdi,QWORD PTR [rdx+0x40]
  404a43:	mov    rsi,QWORD PTR [rbp-0x8]
  404a47:	mov    r8d,0x1
  404a4d:	mov    ecx,0x1
  404a52:	mov    rdx,r9
  404a55:	call   rax
  404a57:	test   eax,eax
  404a59:	je     404a62 <flatcc_builder_default_alloc@@Base+0x248>
  404a5b:	mov    eax,0xffffffff
  404a60:	jmp    404a78 <flatcc_builder_default_alloc@@Base+0x25e>
  404a62:	mov    edx,DWORD PTR [rbp-0x24]
  404a65:	mov    rax,QWORD PTR [rbp-0x18]
  404a69:	mov    esi,edx
  404a6b:	mov    rdi,rax
  404a6e:	call   404987 <flatcc_builder_default_alloc@@Base+0x16d>
  404a73:	mov    eax,0x0
  404a78:	leave  
  404a79:	ret    
  404a7a:	push   rbp
  404a7b:	mov    rbp,rsp
  404a7e:	sub    rsp,0x20
  404a82:	mov    QWORD PTR [rbp-0x18],rdi
  404a86:	mov    DWORD PTR [rbp-0x1c],esi
  404a89:	mov    rax,QWORD PTR [rbp-0x18]
  404a8d:	mov    eax,DWORD PTR [rax+0x20]
  404a90:	mov    eax,eax
  404a92:	mov    QWORD PTR [rbp-0x8],rax
  404a96:	mov    rax,QWORD PTR [rbp-0x18]
  404a9a:	mov    edx,DWORD PTR [rax+0x20]
  404a9d:	mov    eax,DWORD PTR [rbp-0x1c]
  404aa0:	add    edx,eax
  404aa2:	mov    rax,QWORD PTR [rbp-0x18]
  404aa6:	mov    DWORD PTR [rax+0x20],edx
  404aa9:	mov    rax,QWORD PTR [rbp-0x18]
  404aad:	mov    edx,DWORD PTR [rax+0x20]
  404ab0:	mov    rax,QWORD PTR [rbp-0x18]
  404ab4:	mov    eax,DWORD PTR [rax+0x24]
  404ab7:	cmp    edx,eax
  404ab9:	jb     404ae6 <flatcc_builder_default_alloc@@Base+0x2cc>
  404abb:	mov    rax,QWORD PTR [rbp-0x18]
  404abf:	mov    eax,DWORD PTR [rax+0x20]
  404ac2:	add    eax,0x1
  404ac5:	mov    ecx,eax
  404ac7:	mov    rax,QWORD PTR [rbp-0x18]
  404acb:	mov    edx,0xfffffffc
  404ad0:	mov    rsi,rcx
  404ad3:	mov    rdi,rax
  404ad6:	call   4049ff <flatcc_builder_default_alloc@@Base+0x1e5>
  404adb:	test   eax,eax
  404add:	je     404ae6 <flatcc_builder_default_alloc@@Base+0x2cc>
  404adf:	mov    eax,0x0
  404ae4:	jmp    404af5 <flatcc_builder_default_alloc@@Base+0x2db>
  404ae6:	mov    rax,QWORD PTR [rbp-0x18]
  404aea:	mov    rdx,QWORD PTR [rax+0x18]
  404aee:	mov    rax,QWORD PTR [rbp-0x8]
  404af2:	add    rax,rdx
  404af5:	leave  
  404af6:	ret    
  404af7:	push   rbp
  404af8:	mov    rbp,rsp
  404afb:	sub    rsp,0x10
  404aff:	mov    QWORD PTR [rbp-0x8],rdi
  404b03:	mov    DWORD PTR [rbp-0xc],esi
  404b06:	mov    rax,QWORD PTR [rbp-0x8]
  404b0a:	mov    eax,DWORD PTR [rax+0x20]
  404b0d:	sub    eax,DWORD PTR [rbp-0xc]
  404b10:	mov    edx,eax
  404b12:	mov    rax,QWORD PTR [rbp-0x8]
  404b16:	mov    DWORD PTR [rax+0x20],edx
  404b19:	mov    eax,DWORD PTR [rbp-0xc]
  404b1c:	mov    rdx,QWORD PTR [rbp-0x8]
  404b20:	mov    rcx,QWORD PTR [rdx+0x18]
  404b24:	mov    rdx,QWORD PTR [rbp-0x8]
  404b28:	mov    edx,DWORD PTR [rdx+0x20]
  404b2b:	mov    edx,edx
  404b2d:	add    rcx,rdx
  404b30:	mov    rdx,rax
  404b33:	mov    esi,0x0
  404b38:	mov    rdi,rcx
  404b3b:	call   403080 <memset@plt>
  404b40:	nop
  404b41:	leave  
  404b42:	ret    
  404b43:	push   rbp
  404b44:	mov    rbp,rsp
  404b47:	sub    rsp,0x30
  404b4b:	mov    QWORD PTR [rbp-0x18],rdi
  404b4f:	mov    QWORD PTR [rbp-0x20],rsi
  404b53:	mov    DWORD PTR [rbp-0x24],edx
  404b56:	mov    edx,DWORD PTR [rbp-0x24]
  404b59:	mov    rax,QWORD PTR [rbp-0x18]
  404b5d:	mov    esi,edx
  404b5f:	mov    rdi,rax
  404b62:	call   404a7a <flatcc_builder_default_alloc@@Base+0x260>
  404b67:	mov    QWORD PTR [rbp-0x8],rax
  404b6b:	cmp    QWORD PTR [rbp-0x8],0x0
  404b70:	jne    404b79 <flatcc_builder_default_alloc@@Base+0x35f>
  404b72:	mov    eax,0x0
  404b77:	jmp    404b93 <flatcc_builder_default_alloc@@Base+0x379>
  404b79:	mov    edx,DWORD PTR [rbp-0x24]
  404b7c:	mov    rcx,QWORD PTR [rbp-0x20]
  404b80:	mov    rax,QWORD PTR [rbp-0x8]
  404b84:	mov    rsi,rcx
  404b87:	mov    rdi,rax
  404b8a:	call   4030b0 <memcpy@plt>
  404b8f:	mov    rax,QWORD PTR [rbp-0x8]
  404b93:	leave  
  404b94:	ret    
  404b95:	push   rbp
  404b96:	mov    rbp,rsp
  404b99:	sub    rsp,0x30
  404b9d:	mov    QWORD PTR [rbp-0x18],rdi
  404ba1:	mov    DWORD PTR [rbp-0x1c],esi
  404ba4:	mov    eax,ecx
  404ba6:	mov    WORD PTR [rbp-0x20],dx
  404baa:	mov    WORD PTR [rbp-0x24],ax
  404bae:	mov    rax,QWORD PTR [rbp-0x18]
  404bb2:	mov    edx,DWORD PTR [rax+0x20]
  404bb5:	movzx  eax,WORD PTR [rbp-0x20]
  404bb9:	add    eax,edx
  404bbb:	lea    edx,[rax-0x1]
  404bbe:	movzx  eax,WORD PTR [rbp-0x20]
  404bc2:	neg    eax
  404bc4:	and    eax,edx
  404bc6:	mov    DWORD PTR [rbp-0x4],eax
  404bc9:	mov    edx,DWORD PTR [rbp-0x4]
  404bcc:	mov    eax,DWORD PTR [rbp-0x1c]
  404bcf:	add    edx,eax
  404bd1:	mov    rax,QWORD PTR [rbp-0x18]
  404bd5:	mov    DWORD PTR [rax+0x20],edx
  404bd8:	mov    rax,QWORD PTR [rbp-0x18]
  404bdc:	mov    edx,DWORD PTR [rax+0x20]
  404bdf:	mov    rax,QWORD PTR [rbp-0x18]
  404be3:	mov    eax,DWORD PTR [rax+0x24]
  404be6:	cmp    edx,eax
  404be8:	jb     404c15 <flatcc_builder_default_alloc@@Base+0x3fb>
  404bea:	mov    rax,QWORD PTR [rbp-0x18]
  404bee:	mov    eax,DWORD PTR [rax+0x20]
  404bf1:	add    eax,0x1
  404bf4:	mov    ecx,eax
  404bf6:	mov    rax,QWORD PTR [rbp-0x18]
  404bfa:	mov    edx,0xfffc
  404bff:	mov    rsi,rcx
  404c02:	mov    rdi,rax
  404c05:	call   4049ff <flatcc_builder_default_alloc@@Base+0x1e5>
  404c0a:	test   eax,eax
  404c0c:	je     404c15 <flatcc_builder_default_alloc@@Base+0x3fb>
  404c0e:	mov    eax,0x0
  404c13:	jmp    404c5b <flatcc_builder_default_alloc@@Base+0x441>
  404c15:	mov    rax,QWORD PTR [rbp-0x18]
  404c19:	mov    rax,QWORD PTR [rax+0x8]
  404c1d:	movzx  edx,WORD PTR [rbp-0x24]
  404c21:	add    rdx,rdx
  404c24:	add    rax,rdx
  404c27:	mov    edx,DWORD PTR [rbp-0x4]
  404c2a:	add    edx,0x4
  404c2d:	mov    WORD PTR [rax],dx
  404c30:	mov    rax,QWORD PTR [rbp-0x18]
  404c34:	movzx  eax,WORD PTR [rax+0x10]
  404c38:	cmp    ax,WORD PTR [rbp-0x24]
  404c3c:	ja     404c4d <flatcc_builder_default_alloc@@Base+0x433>
  404c3e:	movzx  eax,WORD PTR [rbp-0x24]
  404c42:	lea    edx,[rax+0x1]
  404c45:	mov    rax,QWORD PTR [rbp-0x18]
  404c49:	mov    WORD PTR [rax+0x10],dx
  404c4d:	mov    rax,QWORD PTR [rbp-0x18]
  404c51:	mov    rdx,QWORD PTR [rax+0x18]
  404c55:	mov    eax,DWORD PTR [rbp-0x4]
  404c58:	add    rax,rdx
  404c5b:	leave  
  404c5c:	ret    
  404c5d:	push   rbp
  404c5e:	mov    rbp,rsp
  404c61:	sub    rsp,0x20
  404c65:	mov    QWORD PTR [rbp-0x18],rdi
  404c69:	mov    eax,esi
  404c6b:	mov    WORD PTR [rbp-0x1c],ax
  404c6f:	mov    rax,QWORD PTR [rbp-0x18]
  404c73:	mov    eax,DWORD PTR [rax+0x20]
  404c76:	add    eax,0x3
  404c79:	and    eax,0xfffffffc
  404c7c:	mov    DWORD PTR [rbp-0x4],eax
  404c7f:	mov    eax,DWORD PTR [rbp-0x4]
  404c82:	lea    edx,[rax+0x4]
  404c85:	mov    rax,QWORD PTR [rbp-0x18]
  404c89:	mov    DWORD PTR [rax+0x20],edx
  404c8c:	mov    rax,QWORD PTR [rbp-0x18]
  404c90:	mov    edx,DWORD PTR [rax+0x20]
  404c93:	mov    rax,QWORD PTR [rbp-0x18]
  404c97:	mov    eax,DWORD PTR [rax+0x24]
  404c9a:	cmp    edx,eax
  404c9c:	jbe    404cc6 <flatcc_builder_default_alloc@@Base+0x4ac>
  404c9e:	mov    rax,QWORD PTR [rbp-0x18]
  404ca2:	mov    eax,DWORD PTR [rax+0x20]
  404ca5:	mov    ecx,eax
  404ca7:	mov    rax,QWORD PTR [rbp-0x18]
  404cab:	mov    edx,0xfffc
  404cb0:	mov    rsi,rcx
  404cb3:	mov    rdi,rax
  404cb6:	call   4049ff <flatcc_builder_default_alloc@@Base+0x1e5>
  404cbb:	test   eax,eax
  404cbd:	je     404cc6 <flatcc_builder_default_alloc@@Base+0x4ac>
  404cbf:	mov    eax,0x0
  404cc4:	jmp    404d24 <flatcc_builder_default_alloc@@Base+0x50a>
  404cc6:	mov    rax,QWORD PTR [rbp-0x18]
  404cca:	mov    rax,QWORD PTR [rax+0x8]
  404cce:	movzx  edx,WORD PTR [rbp-0x1c]
  404cd2:	add    rdx,rdx
  404cd5:	add    rax,rdx
  404cd8:	mov    edx,DWORD PTR [rbp-0x4]
  404cdb:	add    edx,0x4
  404cde:	mov    WORD PTR [rax],dx
  404ce1:	mov    rax,QWORD PTR [rbp-0x18]
  404ce5:	movzx  eax,WORD PTR [rax+0x10]
  404ce9:	cmp    ax,WORD PTR [rbp-0x1c]
  404ced:	ja     404cfe <flatcc_builder_default_alloc@@Base+0x4e4>
  404cef:	movzx  eax,WORD PTR [rbp-0x1c]
  404cf3:	lea    edx,[rax+0x1]
  404cf6:	mov    rax,QWORD PTR [rbp-0x18]
  404cfa:	mov    WORD PTR [rax+0x10],dx
  404cfe:	mov    rax,QWORD PTR [rbp-0x18]
  404d02:	mov    rax,QWORD PTR [rax]
  404d05:	lea    rcx,[rax+0x2]
  404d09:	mov    rdx,QWORD PTR [rbp-0x18]
  404d0d:	mov    QWORD PTR [rdx],rcx
  404d10:	mov    edx,DWORD PTR [rbp-0x4]
  404d13:	mov    WORD PTR [rax],dx
  404d16:	mov    rax,QWORD PTR [rbp-0x18]
  404d1a:	mov    rdx,QWORD PTR [rax+0x18]
  404d1e:	mov    eax,DWORD PTR [rbp-0x4]
  404d21:	add    rax,rdx
  404d24:	leave  
  404d25:	ret    
  404d26:	push   rbp
  404d27:	mov    rbp,rsp
  404d2a:	sub    rsp,0x30
  404d2e:	mov    QWORD PTR [rbp-0x18],rdi
  404d32:	mov    DWORD PTR [rbp-0x1c],esi
  404d35:	mov    QWORD PTR [rbp-0x28],rdx
  404d39:	mov    QWORD PTR [rbp-0x30],rcx
  404d3d:	mov    DWORD PTR [rbp-0x20],r8d
  404d41:	mov    rax,QWORD PTR [rbp-0x18]
  404d45:	lea    rdx,[rax+0x58]
  404d49:	mov    eax,DWORD PTR [rbp-0x1c]
  404d4c:	cdqe   
  404d4e:	shl    rax,0x4
  404d52:	add    rax,rdx
  404d55:	mov    QWORD PTR [rbp-0x8],rax
  404d59:	mov    rdx,QWORD PTR [rbp-0x28]
  404d5d:	mov    rax,QWORD PTR [rbp-0x30]
  404d61:	add    rdx,rax
  404d64:	mov    rax,QWORD PTR [rbp-0x8]
  404d68:	mov    rax,QWORD PTR [rax+0x8]
  404d6c:	cmp    rdx,rax
  404d6f:	jbe    404dc4 <flatcc_builder_default_alloc@@Base+0x5aa>
  404d71:	mov    rax,QWORD PTR [rbp-0x18]
  404d75:	mov    rax,QWORD PTR [rax+0x50]
  404d79:	mov    rcx,QWORD PTR [rbp-0x28]
  404d7d:	mov    rdx,QWORD PTR [rbp-0x30]
  404d81:	lea    r9,[rcx+rdx*1]
  404d85:	mov    rdx,QWORD PTR [rbp-0x18]
  404d89:	mov    rdi,QWORD PTR [rdx+0x40]
  404d8d:	mov    ecx,DWORD PTR [rbp-0x1c]
  404d90:	mov    edx,DWORD PTR [rbp-0x20]
  404d93:	mov    rsi,QWORD PTR [rbp-0x8]
  404d97:	mov    r8d,ecx
  404d9a:	mov    ecx,edx
  404d9c:	mov    rdx,r9
  404d9f:	call   rax
  404da1:	test   eax,eax
  404da3:	je     404dc4 <flatcc_builder_default_alloc@@Base+0x5aa>
  404da5:	lea    rcx,[rip+0x8a6c]        # 40d818 <flatcc_builder_padding_base@@Base+0x658>
  404dac:	mov    edx,0x134
  404db1:	lea    rsi,[rip+0x8608]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  404db8:	lea    rdi,[rip+0x8661]        # 40d420 <flatcc_builder_padding_base@@Base+0x260>
  404dbf:	call   403070 <__assert_fail@plt>
  404dc4:	mov    rax,QWORD PTR [rbp-0x8]
  404dc8:	mov    rax,QWORD PTR [rax]
  404dcb:	mov    rdx,rax
  404dce:	mov    rax,QWORD PTR [rbp-0x28]
  404dd2:	add    rax,rdx
  404dd5:	leave  
  404dd6:	ret    
  404dd7:	push   rbp
  404dd8:	mov    rbp,rsp
  404ddb:	sub    rsp,0x20
  404ddf:	mov    QWORD PTR [rbp-0x18],rdi
  404de3:	mov    DWORD PTR [rbp-0x1c],esi
  404de6:	mov    rax,QWORD PTR [rbp-0x18]
  404dea:	mov    rax,QWORD PTR [rax+0x30]
  404dee:	mov    edx,DWORD PTR [rax+0x10]
  404df1:	mov    rax,QWORD PTR [rbp-0x18]
  404df5:	mov    rax,QWORD PTR [rax+0x30]
  404df9:	movzx  eax,WORD PTR [rax+0x1c]
  404dfd:	movzx  eax,ax
  404e00:	add    eax,eax
  404e02:	add    eax,edx
  404e04:	mov    DWORD PTR [rbp-0x8],eax
  404e07:	mov    eax,DWORD PTR [rbp-0x1c]
  404e0a:	add    eax,0x2
  404e0d:	cdqe   
  404e0f:	add    eax,eax
  404e11:	mov    DWORD PTR [rbp-0x4],eax
  404e14:	mov    ecx,DWORD PTR [rbp-0x4]
  404e17:	mov    edx,DWORD PTR [rbp-0x8]
  404e1a:	mov    rax,QWORD PTR [rbp-0x18]
  404e1e:	mov    r8d,0x1
  404e24:	mov    esi,0x0
  404e29:	mov    rdi,rax
  404e2c:	call   404d26 <flatcc_builder_default_alloc@@Base+0x50c>
  404e31:	mov    rdx,rax
  404e34:	mov    rax,QWORD PTR [rbp-0x18]
  404e38:	mov    QWORD PTR [rax+0x8],rdx
  404e3c:	mov    rax,QWORD PTR [rbp-0x18]
  404e40:	mov    rax,QWORD PTR [rax+0x8]
  404e44:	test   rax,rax
  404e47:	jne    404e50 <flatcc_builder_default_alloc@@Base+0x636>
  404e49:	mov    eax,0xffffffff
  404e4e:	jmp    404ebe <flatcc_builder_default_alloc@@Base+0x6a4>
  404e50:	mov    rax,QWORD PTR [rbp-0x18]
  404e54:	mov    rax,QWORD PTR [rax+0x8]
  404e58:	lea    rdx,[rax+0x4]
  404e5c:	mov    rax,QWORD PTR [rbp-0x18]
  404e60:	mov    QWORD PTR [rax+0x8],rdx
  404e64:	mov    rax,QWORD PTR [rbp-0x18]
  404e68:	mov    rax,QWORD PTR [rax+0x30]
  404e6c:	mov    eax,DWORD PTR [rax+0x14]
  404e6f:	mov    DWORD PTR [rbp-0x8],eax
  404e72:	mov    eax,DWORD PTR [rbp-0x1c]
  404e75:	cdqe   
  404e77:	add    eax,eax
  404e79:	add    eax,0x1
  404e7c:	mov    DWORD PTR [rbp-0x4],eax
  404e7f:	mov    ecx,DWORD PTR [rbp-0x4]
  404e82:	mov    edx,DWORD PTR [rbp-0x8]
  404e85:	mov    rax,QWORD PTR [rbp-0x18]
  404e89:	mov    r8d,0x0
  404e8f:	mov    esi,0x3
  404e94:	mov    rdi,rax
  404e97:	call   404d26 <flatcc_builder_default_alloc@@Base+0x50c>
  404e9c:	mov    rdx,rax
  404e9f:	mov    rax,QWORD PTR [rbp-0x18]
  404ea3:	mov    QWORD PTR [rax],rdx
  404ea6:	mov    rax,QWORD PTR [rbp-0x18]
  404eaa:	mov    rax,QWORD PTR [rax]
  404ead:	test   rax,rax
  404eb0:	jne    404eb9 <flatcc_builder_default_alloc@@Base+0x69f>
  404eb2:	mov    eax,0xffffffff
  404eb7:	jmp    404ebe <flatcc_builder_default_alloc@@Base+0x6a4>
  404eb9:	mov    eax,0x0
  404ebe:	leave  
  404ebf:	ret    
  404ec0:	push   rbp
  404ec1:	mov    rbp,rsp
  404ec4:	sub    rsp,0x30
  404ec8:	mov    QWORD PTR [rbp-0x28],rdi
  404ecc:	mov    rax,QWORD PTR [rbp-0x28]
  404ed0:	add    rax,0x58
  404ed4:	add    rax,0x50
  404ed8:	mov    QWORD PTR [rbp-0x8],rax
  404edc:	mov    rax,QWORD PTR [rbp-0x28]
  404ee0:	mov    eax,DWORD PTR [rax+0xe4]
  404ee6:	test   eax,eax
  404ee8:	je     404f09 <flatcc_builder_default_alloc@@Base+0x6ef>
  404eea:	lea    rcx,[rip+0x8917]        # 40d808 <flatcc_builder_padding_base@@Base+0x648>
  404ef1:	mov    edx,0x156
  404ef6:	lea    rsi,[rip+0x84c3]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  404efd:	lea    rdi,[rip+0x851e]        # 40d422 <flatcc_builder_padding_base@@Base+0x262>
  404f04:	call   403070 <__assert_fail@plt>
  404f09:	mov    rax,QWORD PTR [rbp-0x28]
  404f0d:	mov    eax,DWORD PTR [rax+0xe4]
  404f13:	mov    edx,eax
  404f15:	mov    rax,QWORD PTR [rbp-0x28]
  404f19:	mov    r8d,0x0
  404f1f:	mov    ecx,0x10
  404f24:	mov    esi,0x6
  404f29:	mov    rdi,rax
  404f2c:	call   404d26 <flatcc_builder_default_alloc@@Base+0x50c>
  404f31:	test   rax,rax
  404f34:	jne    404f40 <flatcc_builder_default_alloc@@Base+0x726>
  404f36:	mov    eax,0xffffffff
  404f3b:	jmp    404fe2 <flatcc_builder_default_alloc@@Base+0x7c8>
  404f40:	mov    rax,QWORD PTR [rbp-0x28]
  404f44:	mov    DWORD PTR [rax+0xe4],0x10
  404f4e:	mov    QWORD PTR [rbp-0x18],0x100
  404f56:	mov    rax,QWORD PTR [rbp-0x28]
  404f5a:	mov    rax,QWORD PTR [rax+0x50]
  404f5e:	mov    rdx,QWORD PTR [rbp-0x28]
  404f62:	mov    rdi,QWORD PTR [rdx+0x40]
  404f66:	mov    rdx,QWORD PTR [rbp-0x18]
  404f6a:	mov    rsi,QWORD PTR [rbp-0x8]
  404f6e:	mov    r8d,0x5
  404f74:	mov    ecx,0x1
  404f79:	call   rax
  404f7b:	test   eax,eax
  404f7d:	je     404f8a <flatcc_builder_default_alloc@@Base+0x770>
  404f7f:	mov    eax,0xffffffff
  404f84:	jmp    404fe2 <flatcc_builder_default_alloc@@Base+0x7c8>
  404f86:	shl    QWORD PTR [rbp-0x18],1
  404f8a:	mov    rax,QWORD PTR [rbp-0x18]
  404f8e:	lea    rdx,[rax+rax*1]
  404f92:	mov    rax,QWORD PTR [rbp-0x8]
  404f96:	mov    rax,QWORD PTR [rax+0x8]
  404f9a:	cmp    rdx,rax
  404f9d:	jbe    404f86 <flatcc_builder_default_alloc@@Base+0x76c>
  404f9f:	mov    rax,QWORD PTR [rbp-0x18]
  404fa3:	shr    rax,0x2
  404fa7:	mov    QWORD PTR [rbp-0x18],rax
  404fab:	mov    QWORD PTR [rbp-0x10],0x0
  404fb3:	jmp    404fba <flatcc_builder_default_alloc@@Base+0x7a0>
  404fb5:	add    QWORD PTR [rbp-0x10],0x1
  404fba:	mov    rax,QWORD PTR [rbp-0x10]
  404fbe:	mov    edx,0x1
  404fc3:	shlx   rax,rdx,rax
  404fc8:	cmp    rax,QWORD PTR [rbp-0x18]
  404fcc:	jb     404fb5 <flatcc_builder_default_alloc@@Base+0x79b>
  404fce:	mov    rax,QWORD PTR [rbp-0x28]
  404fd2:	mov    rdx,QWORD PTR [rbp-0x10]
  404fd6:	mov    QWORD PTR [rax+0xd8],rdx
  404fdd:	mov    eax,0x0
  404fe2:	leave  
  404fe3:	ret    
  404fe4:	push   rbp
  404fe5:	mov    rbp,rsp
  404fe8:	sub    rsp,0x20
  404fec:	mov    QWORD PTR [rbp-0x18],rdi
  404ff0:	mov    DWORD PTR [rbp-0x1c],esi
  404ff3:	mov    rax,QWORD PTR [rbp-0x18]
  404ff7:	mov    rax,QWORD PTR [rax+0xd8]
  404ffe:	test   rax,rax
  405001:	jne    40501a <flatcc_builder_default_alloc@@Base+0x800>
  405003:	mov    rax,QWORD PTR [rbp-0x18]
  405007:	mov    rdi,rax
  40500a:	call   404ec0 <flatcc_builder_default_alloc@@Base+0x6a6>
  40500f:	test   eax,eax
  405011:	je     40501a <flatcc_builder_default_alloc@@Base+0x800>
  405013:	mov    eax,0x0
  405018:	jmp    405056 <flatcc_builder_default_alloc@@Base+0x83c>
  40501a:	mov    rax,QWORD PTR [rbp-0x18]
  40501e:	mov    rax,QWORD PTR [rax+0xa8]
  405025:	mov    QWORD PTR [rbp-0x8],rax
  405029:	mov    rax,QWORD PTR [rbp-0x18]
  40502d:	mov    rax,QWORD PTR [rax+0xd8]
  405034:	mov    edx,0x20
  405039:	sub    edx,eax
  40503b:	mov    eax,edx
  40503d:	mov    edx,DWORD PTR [rbp-0x1c]
  405040:	shrx   eax,edx,eax
  405045:	mov    eax,eax
  405047:	lea    rdx,[rax*4+0x0]
  40504f:	mov    rax,QWORD PTR [rbp-0x8]
  405053:	add    rax,rdx
  405056:	leave  
  405057:	ret    

0000000000405058 <flatcc_builder_flush_vtable_cache@@Base>:
  405058:	push   rbp
  405059:	mov    rbp,rsp
  40505c:	sub    rsp,0x20
  405060:	mov    QWORD PTR [rbp-0x18],rdi
  405064:	mov    rax,QWORD PTR [rbp-0x18]
  405068:	add    rax,0x58
  40506c:	add    rax,0x50
  405070:	mov    QWORD PTR [rbp-0x8],rax
  405074:	mov    rax,QWORD PTR [rbp-0x18]
  405078:	mov    rax,QWORD PTR [rax+0xd8]
  40507f:	test   rax,rax
  405082:	je     4050be <flatcc_builder_flush_vtable_cache@@Base+0x66>
  405084:	mov    rax,QWORD PTR [rbp-0x8]
  405088:	mov    rdx,QWORD PTR [rax+0x8]
  40508c:	mov    rax,QWORD PTR [rbp-0x8]
  405090:	mov    rax,QWORD PTR [rax]
  405093:	mov    esi,0x0
  405098:	mov    rdi,rax
  40509b:	call   403080 <memset@plt>
  4050a0:	mov    rax,QWORD PTR [rbp-0x18]
  4050a4:	mov    DWORD PTR [rax+0xe4],0x10
  4050ae:	mov    rax,QWORD PTR [rbp-0x18]
  4050b2:	mov    DWORD PTR [rax+0xe0],0x0
  4050bc:	jmp    4050bf <flatcc_builder_flush_vtable_cache@@Base+0x67>
  4050be:	nop
  4050bf:	leave  
  4050c0:	ret    

00000000004050c1 <flatcc_builder_custom_init@@Base>:
  4050c1:	push   rbp
  4050c2:	mov    rbp,rsp
  4050c5:	sub    rsp,0x30
  4050c9:	mov    QWORD PTR [rbp-0x8],rdi
  4050cd:	mov    QWORD PTR [rbp-0x10],rsi
  4050d1:	mov    QWORD PTR [rbp-0x18],rdx
  4050d5:	mov    QWORD PTR [rbp-0x20],rcx
  4050d9:	mov    QWORD PTR [rbp-0x28],r8
  4050dd:	mov    rax,QWORD PTR [rbp-0x8]
  4050e1:	mov    edx,0x188
  4050e6:	mov    esi,0x0
  4050eb:	mov    rdi,rax
  4050ee:	call   403080 <memset@plt>
  4050f3:	cmp    QWORD PTR [rbp-0x10],0x0
  4050f8:	jne    405121 <flatcc_builder_custom_init@@Base+0x60>
  4050fa:	mov    rax,QWORD PTR [rbp-0x8]
  4050fe:	mov    DWORD PTR [rax+0x128],0x1
  405108:	mov    rax,0x40a4f4
  40510f:	mov    QWORD PTR [rbp-0x10],rax
  405113:	mov    rax,QWORD PTR [rbp-0x8]
  405117:	add    rax,0x130
  40511d:	mov    QWORD PTR [rbp-0x18],rax
  405121:	cmp    QWORD PTR [rbp-0x20],0x0
  405126:	jne    405133 <flatcc_builder_custom_init@@Base+0x72>
  405128:	mov    rax,0x40481a
  40512f:	mov    QWORD PTR [rbp-0x20],rax
  405133:	mov    rax,QWORD PTR [rbp-0x8]
  405137:	mov    rdx,QWORD PTR [rbp-0x28]
  40513b:	mov    QWORD PTR [rax+0x40],rdx
  40513f:	mov    rax,QWORD PTR [rbp-0x8]
  405143:	mov    rdx,QWORD PTR [rbp-0x20]
  405147:	mov    QWORD PTR [rax+0x50],rdx
  40514b:	mov    rax,QWORD PTR [rbp-0x8]
  40514f:	mov    rdx,QWORD PTR [rbp-0x18]
  405153:	mov    QWORD PTR [rax+0x38],rdx
  405157:	mov    rax,QWORD PTR [rbp-0x8]
  40515b:	mov    rdx,QWORD PTR [rbp-0x10]
  40515f:	mov    QWORD PTR [rax+0x48],rdx
  405163:	mov    eax,0x0
  405168:	leave  
  405169:	ret    

000000000040516a <flatcc_builder_init@@Base>:
  40516a:	push   rbp
  40516b:	mov    rbp,rsp
  40516e:	sub    rsp,0x10
  405172:	mov    QWORD PTR [rbp-0x8],rdi
  405176:	mov    rax,QWORD PTR [rbp-0x8]
  40517a:	mov    r8d,0x0
  405180:	mov    ecx,0x0
  405185:	mov    edx,0x0
  40518a:	mov    esi,0x0
  40518f:	mov    rdi,rax
  405192:	call   4050c1 <flatcc_builder_custom_init@@Base>
  405197:	leave  
  405198:	ret    

0000000000405199 <flatcc_builder_custom_reset@@Base>:
  405199:	push   rbp
  40519a:	mov    rbp,rsp
  40519d:	sub    rsp,0x20
  4051a1:	mov    QWORD PTR [rbp-0x18],rdi
  4051a5:	mov    DWORD PTR [rbp-0x1c],esi
  4051a8:	mov    DWORD PTR [rbp-0x20],edx
  4051ab:	mov    DWORD PTR [rbp-0xc],0x0
  4051b2:	jmp    405269 <flatcc_builder_custom_reset@@Base+0xd0>
  4051b7:	mov    rax,QWORD PTR [rbp-0x18]
  4051bb:	lea    rdx,[rax+0x58]
  4051bf:	mov    eax,DWORD PTR [rbp-0xc]
  4051c2:	cdqe   
  4051c4:	shl    rax,0x4
  4051c8:	add    rax,rdx
  4051cb:	mov    QWORD PTR [rbp-0x8],rax
  4051cf:	mov    rax,QWORD PTR [rbp-0x8]
  4051d3:	mov    rax,QWORD PTR [rax]
  4051d6:	test   rax,rax
  4051d9:	je     405239 <flatcc_builder_custom_reset@@Base+0xa0>
  4051db:	cmp    DWORD PTR [rbp-0xc],0x5
  4051df:	je     40521b <flatcc_builder_custom_reset@@Base+0x82>
  4051e1:	cmp    DWORD PTR [rbp-0x20],0x0
  4051e5:	je     40521b <flatcc_builder_custom_reset@@Base+0x82>
  4051e7:	mov    rax,QWORD PTR [rbp-0x18]
  4051eb:	mov    rax,QWORD PTR [rax+0x50]
  4051ef:	mov    rdx,QWORD PTR [rbp-0x18]
  4051f3:	mov    rdi,QWORD PTR [rdx+0x40]
  4051f7:	mov    edx,DWORD PTR [rbp-0xc]
  4051fa:	mov    rsi,QWORD PTR [rbp-0x8]
  4051fe:	mov    r8d,edx
  405201:	mov    ecx,0x1
  405206:	mov    edx,0x1
  40520b:	call   rax
  40520d:	test   eax,eax
  40520f:	je     40521b <flatcc_builder_custom_reset@@Base+0x82>
  405211:	mov    eax,0xffffffff
  405216:	jmp    4053a8 <flatcc_builder_custom_reset@@Base+0x20f>
  40521b:	mov    rax,QWORD PTR [rbp-0x8]
  40521f:	mov    rdx,QWORD PTR [rax+0x8]
  405223:	mov    rax,QWORD PTR [rbp-0x8]
  405227:	mov    rax,QWORD PTR [rax]
  40522a:	mov    esi,0x0
  40522f:	mov    rdi,rax
  405232:	call   403080 <memset@plt>
  405237:	jmp    405265 <flatcc_builder_custom_reset@@Base+0xcc>
  405239:	mov    rax,QWORD PTR [rbp-0x8]
  40523d:	mov    rax,QWORD PTR [rax+0x8]
  405241:	test   rax,rax
  405244:	je     405265 <flatcc_builder_custom_reset@@Base+0xcc>
  405246:	lea    rcx,[rip+0x85e3]        # 40d830 <flatcc_builder_padding_base@@Base+0x670>
  40524d:	mov    edx,0x1b2
  405252:	lea    rsi,[rip+0x8167]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  405259:	lea    rdi,[rip+0x81d1]        # 40d431 <flatcc_builder_padding_base@@Base+0x271>
  405260:	call   403070 <__assert_fail@plt>
  405265:	add    DWORD PTR [rbp-0xc],0x1
  405269:	cmp    DWORD PTR [rbp-0xc],0x7
  40526d:	jle    4051b7 <flatcc_builder_custom_reset@@Base+0x1e>
  405273:	mov    rax,QWORD PTR [rbp-0x18]
  405277:	mov    DWORD PTR [rax+0xe0],0x0
  405281:	mov    rax,QWORD PTR [rbp-0x18]
  405285:	mov    eax,DWORD PTR [rax+0xe4]
  40528b:	test   eax,eax
  40528d:	je     40529d <flatcc_builder_custom_reset@@Base+0x104>
  40528f:	mov    rax,QWORD PTR [rbp-0x18]
  405293:	mov    DWORD PTR [rax+0xe4],0x10
  40529d:	mov    rax,QWORD PTR [rbp-0x18]
  4052a1:	mov    WORD PTR [rax+0xe8],0x0
  4052aa:	mov    rax,QWORD PTR [rbp-0x18]
  4052ae:	mov    DWORD PTR [rax+0xf0],0x0
  4052b8:	mov    rax,QWORD PTR [rbp-0x18]
  4052bc:	mov    DWORD PTR [rax+0xf4],0x0
  4052c6:	mov    rax,QWORD PTR [rbp-0x18]
  4052ca:	mov    DWORD PTR [rax+0x104],0x0
  4052d4:	mov    rax,QWORD PTR [rbp-0x18]
  4052d8:	mov    DWORD PTR [rax+0x108],0x0
  4052e2:	mov    rax,QWORD PTR [rbp-0x18]
  4052e6:	mov    DWORD PTR [rax+0x20],0x0
  4052ed:	mov    rax,QWORD PTR [rbp-0x18]
  4052f1:	mov    DWORD PTR [rax+0x24],0x0
  4052f8:	mov    rax,QWORD PTR [rbp-0x18]
  4052fc:	mov    DWORD PTR [rax+0xfc],0x0
  405306:	mov    rax,QWORD PTR [rbp-0x18]
  40530a:	mov    DWORD PTR [rax+0x100],0x0
  405314:	mov    rax,QWORD PTR [rbp-0x18]
  405318:	mov    rdx,QWORD PTR [rax+0x68]
  40531c:	mov    rax,QWORD PTR [rbp-0x18]
  405320:	mov    QWORD PTR [rax+0x18],rdx
  405324:	mov    rax,QWORD PTR [rbp-0x18]
  405328:	mov    rdx,QWORD PTR [rax+0x88]
  40532f:	mov    rax,QWORD PTR [rbp-0x18]
  405333:	mov    QWORD PTR [rax],rdx
  405336:	mov    rax,QWORD PTR [rbp-0x18]
  40533a:	mov    rdx,QWORD PTR [rax+0x58]
  40533e:	mov    rax,QWORD PTR [rbp-0x18]
  405342:	mov    QWORD PTR [rax+0x8],rdx
  405346:	mov    rax,QWORD PTR [rbp-0x18]
  40534a:	mov    QWORD PTR [rax+0x30],0x0
  405352:	cmp    DWORD PTR [rbp-0x1c],0x0
  405356:	je     405383 <flatcc_builder_custom_reset@@Base+0x1ea>
  405358:	mov    rax,QWORD PTR [rbp-0x18]
  40535c:	mov    QWORD PTR [rax+0x118],0x0
  405367:	mov    rax,QWORD PTR [rbp-0x18]
  40536b:	mov    DWORD PTR [rax+0x120],0x0
  405375:	mov    rax,QWORD PTR [rbp-0x18]
  405379:	mov    DWORD PTR [rax+0x124],0x0
  405383:	mov    rax,QWORD PTR [rbp-0x18]
  405387:	mov    eax,DWORD PTR [rax+0x128]
  40538d:	test   eax,eax
  40538f:	je     4053a3 <flatcc_builder_custom_reset@@Base+0x20a>
  405391:	mov    rax,QWORD PTR [rbp-0x18]
  405395:	add    rax,0x130
  40539b:	mov    rdi,rax
  40539e:	call   40a2d9 <flatcc_emitter_reset@@Base>
  4053a3:	mov    eax,0x0
  4053a8:	leave  
  4053a9:	ret    

00000000004053aa <flatcc_builder_reset@@Base>:
  4053aa:	push   rbp
  4053ab:	mov    rbp,rsp
  4053ae:	sub    rsp,0x10
  4053b2:	mov    QWORD PTR [rbp-0x8],rdi
  4053b6:	mov    rax,QWORD PTR [rbp-0x8]
  4053ba:	mov    edx,0x0
  4053bf:	mov    esi,0x0
  4053c4:	mov    rdi,rax
  4053c7:	call   405199 <flatcc_builder_custom_reset@@Base>
  4053cc:	leave  
  4053cd:	ret    

00000000004053ce <flatcc_builder_clear@@Base>:
  4053ce:	push   rbp
  4053cf:	mov    rbp,rsp
  4053d2:	sub    rsp,0x20
  4053d6:	mov    QWORD PTR [rbp-0x18],rdi
  4053da:	mov    DWORD PTR [rbp-0xc],0x0
  4053e1:	jmp    405425 <flatcc_builder_clear@@Base+0x57>
  4053e3:	mov    rax,QWORD PTR [rbp-0x18]
  4053e7:	lea    rdx,[rax+0x58]
  4053eb:	mov    eax,DWORD PTR [rbp-0xc]
  4053ee:	cdqe   
  4053f0:	shl    rax,0x4
  4053f4:	add    rax,rdx
  4053f7:	mov    QWORD PTR [rbp-0x8],rax
  4053fb:	mov    rax,QWORD PTR [rbp-0x18]
  4053ff:	mov    rax,QWORD PTR [rax+0x50]
  405403:	mov    rdx,QWORD PTR [rbp-0x18]
  405407:	mov    rdi,QWORD PTR [rdx+0x40]
  40540b:	mov    edx,DWORD PTR [rbp-0xc]
  40540e:	mov    rsi,QWORD PTR [rbp-0x8]
  405412:	mov    r8d,edx
  405415:	mov    ecx,0x0
  40541a:	mov    edx,0x0
  40541f:	call   rax
  405421:	add    DWORD PTR [rbp-0xc],0x1
  405425:	cmp    DWORD PTR [rbp-0xc],0x7
  405429:	jle    4053e3 <flatcc_builder_clear@@Base+0x15>
  40542b:	mov    rax,QWORD PTR [rbp-0x18]
  40542f:	mov    eax,DWORD PTR [rax+0x128]
  405435:	test   eax,eax
  405437:	je     40544b <flatcc_builder_clear@@Base+0x7d>
  405439:	mov    rax,QWORD PTR [rbp-0x18]
  40543d:	add    rax,0x130
  405443:	mov    rdi,rax
  405446:	call   40a465 <flatcc_emitter_clear@@Base>
  40544b:	mov    rax,QWORD PTR [rbp-0x18]
  40544f:	mov    edx,0x188
  405454:	mov    esi,0x0
  405459:	mov    rdi,rax
  40545c:	call   403080 <memset@plt>
  405461:	nop
  405462:	leave  
  405463:	ret    
  405464:	push   rbp
  405465:	mov    rbp,rsp
  405468:	mov    QWORD PTR [rbp-0x8],rdi
  40546c:	mov    eax,esi
  40546e:	mov    WORD PTR [rbp-0xc],ax
  405472:	mov    rax,QWORD PTR [rbp-0x8]
  405476:	movzx  eax,WORD PTR [rax+0xe8]
  40547d:	cmp    ax,WORD PTR [rbp-0xc]
  405481:	jae    405492 <flatcc_builder_clear@@Base+0xc4>
  405483:	mov    rax,QWORD PTR [rbp-0x8]
  405487:	movzx  edx,WORD PTR [rbp-0xc]
  40548b:	mov    WORD PTR [rax+0xe8],dx
  405492:	nop
  405493:	pop    rbp
  405494:	ret    
  405495:	push   rbp
  405496:	mov    rbp,rsp
  405499:	mov    QWORD PTR [rbp-0x8],rdi
  40549d:	mov    eax,esi
  40549f:	mov    WORD PTR [rbp-0xc],ax
  4054a3:	mov    rax,QWORD PTR [rbp-0x8]
  4054a7:	movzx  eax,WORD PTR [rax]
  4054aa:	cmp    ax,WORD PTR [rbp-0xc]
  4054ae:	jae    4054bb <flatcc_builder_clear@@Base+0xed>
  4054b0:	mov    rax,QWORD PTR [rbp-0x8]
  4054b4:	movzx  edx,WORD PTR [rbp-0xc]
  4054b8:	mov    WORD PTR [rax],dx
  4054bb:	nop
  4054bc:	pop    rbp
  4054bd:	ret    

00000000004054be <flatcc_builder_enter_user_frame_ptr@@Base>:
  4054be:	push   rbp
  4054bf:	mov    rbp,rsp
  4054c2:	sub    rsp,0x20
  4054c6:	mov    QWORD PTR [rbp-0x18],rdi
  4054ca:	mov    QWORD PTR [rbp-0x20],rsi
  4054ce:	mov    rax,QWORD PTR [rbp-0x20]
  4054d2:	add    rax,0x7
  4054d6:	and    rax,0xfffffffffffffff8
  4054da:	add    rax,0x8
  4054de:	mov    QWORD PTR [rbp-0x20],rax
  4054e2:	mov    rax,QWORD PTR [rbp-0x18]
  4054e6:	mov    rdx,QWORD PTR [rax+0x180]
  4054ed:	mov    rcx,QWORD PTR [rbp-0x20]
  4054f1:	mov    rax,QWORD PTR [rbp-0x18]
  4054f5:	mov    r8d,0x0
  4054fb:	mov    esi,0x7
  405500:	mov    rdi,rax
  405503:	call   404d26 <flatcc_builder_default_alloc@@Base+0x50c>
  405508:	mov    QWORD PTR [rbp-0x8],rax
  40550c:	cmp    QWORD PTR [rbp-0x8],0x0
  405511:	jne    40551a <flatcc_builder_enter_user_frame_ptr@@Base+0x5c>
  405513:	mov    eax,0x0
  405518:	jmp    405584 <flatcc_builder_enter_user_frame_ptr@@Base+0xc6>
  40551a:	mov    rdx,QWORD PTR [rbp-0x20]
  40551e:	mov    rax,QWORD PTR [rbp-0x8]
  405522:	mov    esi,0x0
  405527:	mov    rdi,rax
  40552a:	call   403080 <memset@plt>
  40552f:	mov    rax,QWORD PTR [rbp-0x8]
  405533:	lea    rdx,[rax+0x8]
  405537:	mov    QWORD PTR [rbp-0x8],rdx
  40553b:	mov    rdx,QWORD PTR [rbp-0x18]
  40553f:	mov    rdx,QWORD PTR [rdx+0x178]
  405546:	mov    QWORD PTR [rax],rdx
  405549:	mov    rax,QWORD PTR [rbp-0x18]
  40554d:	mov    rax,QWORD PTR [rax+0x180]
  405554:	lea    rdx,[rax+0x8]
  405558:	mov    rax,QWORD PTR [rbp-0x18]
  40555c:	mov    QWORD PTR [rax+0x178],rdx
  405563:	mov    rax,QWORD PTR [rbp-0x18]
  405567:	mov    rdx,QWORD PTR [rax+0x180]
  40556e:	mov    rax,QWORD PTR [rbp-0x20]
  405572:	add    rdx,rax
  405575:	mov    rax,QWORD PTR [rbp-0x18]
  405579:	mov    QWORD PTR [rax+0x180],rdx
  405580:	mov    rax,QWORD PTR [rbp-0x8]
  405584:	leave  
  405585:	ret    

0000000000405586 <flatcc_builder_enter_user_frame@@Base>:
  405586:	push   rbp
  405587:	mov    rbp,rsp
  40558a:	sub    rsp,0x20
  40558e:	mov    QWORD PTR [rbp-0x18],rdi
  405592:	mov    QWORD PTR [rbp-0x20],rsi
  405596:	mov    rax,QWORD PTR [rbp-0x20]
  40559a:	add    rax,0x7
  40559e:	and    rax,0xfffffffffffffff8
  4055a2:	add    rax,0x8
  4055a6:	mov    QWORD PTR [rbp-0x20],rax
  4055aa:	mov    rax,QWORD PTR [rbp-0x18]
  4055ae:	mov    rdx,QWORD PTR [rax+0x180]
  4055b5:	mov    rcx,QWORD PTR [rbp-0x20]
  4055b9:	mov    rax,QWORD PTR [rbp-0x18]
  4055bd:	mov    r8d,0x0
  4055c3:	mov    esi,0x7
  4055c8:	mov    rdi,rax
  4055cb:	call   404d26 <flatcc_builder_default_alloc@@Base+0x50c>
  4055d0:	mov    QWORD PTR [rbp-0x8],rax
  4055d4:	cmp    QWORD PTR [rbp-0x8],0x0
  4055d9:	jne    4055e2 <flatcc_builder_enter_user_frame@@Base+0x5c>
  4055db:	mov    eax,0x0
  4055e0:	jmp    405653 <flatcc_builder_enter_user_frame@@Base+0xcd>
  4055e2:	mov    rdx,QWORD PTR [rbp-0x20]
  4055e6:	mov    rax,QWORD PTR [rbp-0x8]
  4055ea:	mov    esi,0x0
  4055ef:	mov    rdi,rax
  4055f2:	call   403080 <memset@plt>
  4055f7:	mov    rax,QWORD PTR [rbp-0x8]
  4055fb:	lea    rdx,[rax+0x8]
  4055ff:	mov    QWORD PTR [rbp-0x8],rdx
  405603:	mov    rdx,QWORD PTR [rbp-0x18]
  405607:	mov    rdx,QWORD PTR [rdx+0x178]
  40560e:	mov    QWORD PTR [rax],rdx
  405611:	mov    rax,QWORD PTR [rbp-0x18]
  405615:	mov    rax,QWORD PTR [rax+0x180]
  40561c:	lea    rdx,[rax+0x8]
  405620:	mov    rax,QWORD PTR [rbp-0x18]
  405624:	mov    QWORD PTR [rax+0x178],rdx
  40562b:	mov    rax,QWORD PTR [rbp-0x18]
  40562f:	mov    rdx,QWORD PTR [rax+0x180]
  405636:	mov    rax,QWORD PTR [rbp-0x20]
  40563a:	add    rdx,rax
  40563d:	mov    rax,QWORD PTR [rbp-0x18]
  405641:	mov    QWORD PTR [rax+0x180],rdx
  405648:	mov    rax,QWORD PTR [rbp-0x18]
  40564c:	mov    rax,QWORD PTR [rax+0x178]
  405653:	leave  
  405654:	ret    

0000000000405655 <flatcc_builder_exit_user_frame@@Base>:
  405655:	push   rbp
  405656:	mov    rbp,rsp
  405659:	sub    rsp,0x20
  40565d:	mov    QWORD PTR [rbp-0x18],rdi
  405661:	mov    rax,QWORD PTR [rbp-0x18]
  405665:	mov    rax,QWORD PTR [rax+0x178]
  40566c:	test   rax,rax
  40566f:	jne    405690 <flatcc_builder_exit_user_frame@@Base+0x3b>
  405671:	lea    rcx,[rip+0x81d8]        # 40d850 <flatcc_builder_padding_base@@Base+0x690>
  405678:	mov    edx,0x21e
  40567d:	lea    rsi,[rip+0x7d3c]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  405684:	lea    rdi,[rip+0x7db8]        # 40d443 <flatcc_builder_padding_base@@Base+0x283>
  40568b:	call   403070 <__assert_fail@plt>
  405690:	mov    rax,QWORD PTR [rbp-0x18]
  405694:	mov    rdx,QWORD PTR [rax+0xc8]
  40569b:	mov    rax,QWORD PTR [rbp-0x18]
  40569f:	mov    rax,QWORD PTR [rax+0x178]
  4056a6:	mov    eax,eax
  4056a8:	add    rax,rdx
  4056ab:	mov    QWORD PTR [rbp-0x8],rax
  4056af:	mov    rax,QWORD PTR [rbp-0x18]
  4056b3:	mov    rax,QWORD PTR [rax+0x178]
  4056ba:	lea    rdx,[rax-0x8]
  4056be:	mov    rax,QWORD PTR [rbp-0x18]
  4056c2:	mov    QWORD PTR [rax+0x180],rdx
  4056c9:	mov    rax,QWORD PTR [rbp-0x8]
  4056cd:	mov    rdx,QWORD PTR [rax-0x8]
  4056d1:	mov    rax,QWORD PTR [rbp-0x18]
  4056d5:	mov    QWORD PTR [rax+0x178],rdx
  4056dc:	mov    rax,QWORD PTR [rbp-0x18]
  4056e0:	mov    rax,QWORD PTR [rax+0x178]
  4056e7:	leave  
  4056e8:	ret    

00000000004056e9 <flatcc_builder_exit_user_frame_at@@Base>:
  4056e9:	push   rbp
  4056ea:	mov    rbp,rsp
  4056ed:	sub    rsp,0x10
  4056f1:	mov    QWORD PTR [rbp-0x8],rdi
  4056f5:	mov    QWORD PTR [rbp-0x10],rsi
  4056f9:	mov    rax,QWORD PTR [rbp-0x8]
  4056fd:	mov    rax,QWORD PTR [rax+0x178]
  405704:	cmp    rax,QWORD PTR [rbp-0x10]
  405708:	jae    405729 <flatcc_builder_exit_user_frame_at@@Base+0x40>
  40570a:	lea    rcx,[rip+0x816f]        # 40d880 <flatcc_builder_padding_base@@Base+0x6c0>
  405711:	mov    edx,0x227
  405716:	lea    rsi,[rip+0x7ca3]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  40571d:	lea    rdi,[rip+0x7d3c]        # 40d460 <flatcc_builder_padding_base@@Base+0x2a0>
  405724:	call   403070 <__assert_fail@plt>
  405729:	mov    rax,QWORD PTR [rbp-0x8]
  40572d:	mov    rdx,QWORD PTR [rbp-0x10]
  405731:	mov    QWORD PTR [rax+0x178],rdx
  405738:	mov    rax,QWORD PTR [rbp-0x8]
  40573c:	mov    rdi,rax
  40573f:	call   405655 <flatcc_builder_exit_user_frame@@Base>
  405744:	leave  
  405745:	ret    

0000000000405746 <flatcc_builder_get_current_user_frame@@Base>:
  405746:	push   rbp
  405747:	mov    rbp,rsp
  40574a:	mov    QWORD PTR [rbp-0x8],rdi
  40574e:	mov    rax,QWORD PTR [rbp-0x8]
  405752:	mov    rax,QWORD PTR [rax+0x178]
  405759:	pop    rbp
  40575a:	ret    

000000000040575b <flatcc_builder_get_user_frame_ptr@@Base>:
  40575b:	push   rbp
  40575c:	mov    rbp,rsp
  40575f:	mov    QWORD PTR [rbp-0x8],rdi
  405763:	mov    QWORD PTR [rbp-0x10],rsi
  405767:	mov    rax,QWORD PTR [rbp-0x8]
  40576b:	mov    rax,QWORD PTR [rax+0xc8]
  405772:	mov    rdx,QWORD PTR [rbp-0x10]
  405776:	mov    edx,edx
  405778:	add    rax,rdx
  40577b:	pop    rbp
  40577c:	ret    
  40577d:	push   rbp
  40577e:	mov    rbp,rsp
  405781:	sub    rsp,0x10
  405785:	mov    QWORD PTR [rbp-0x8],rdi
  405789:	mov    eax,esi
  40578b:	mov    WORD PTR [rbp-0xc],ax
  40578f:	mov    rax,QWORD PTR [rbp-0x8]
  405793:	mov    eax,DWORD PTR [rax+0x104]
  405799:	lea    edx,[rax+0x1]
  40579c:	mov    rax,QWORD PTR [rbp-0x8]
  4057a0:	mov    DWORD PTR [rax+0x104],edx
  4057a6:	mov    rax,QWORD PTR [rbp-0x8]
  4057aa:	mov    edx,DWORD PTR [rax+0x104]
  4057b0:	mov    rax,QWORD PTR [rbp-0x8]
  4057b4:	mov    eax,DWORD PTR [rax+0x108]
  4057ba:	cmp    edx,eax
  4057bc:	jle    4058b8 <flatcc_builder_get_user_frame_ptr@@Base+0x15d>
  4057c2:	mov    rax,QWORD PTR [rbp-0x8]
  4057c6:	mov    eax,DWORD PTR [rax+0x120]
  4057cc:	test   eax,eax
  4057ce:	jle    4057f2 <flatcc_builder_get_user_frame_ptr@@Base+0x97>
  4057d0:	mov    rax,QWORD PTR [rbp-0x8]
  4057d4:	mov    edx,DWORD PTR [rax+0x104]
  4057da:	mov    rax,QWORD PTR [rbp-0x8]
  4057de:	mov    eax,DWORD PTR [rax+0x120]
  4057e4:	cmp    edx,eax
  4057e6:	jle    4057f2 <flatcc_builder_get_user_frame_ptr@@Base+0x97>
  4057e8:	mov    eax,0xffffffff
  4057ed:	jmp    405953 <flatcc_builder_get_user_frame_ptr@@Base+0x1f8>
  4057f2:	mov    rax,QWORD PTR [rbp-0x8]
  4057f6:	mov    eax,DWORD PTR [rax+0x104]
  4057fc:	sub    eax,0x1
  4057ff:	movsxd rdx,eax
  405802:	mov    rax,rdx
  405805:	shl    rax,0x3
  405809:	add    rax,rdx
  40580c:	shl    rax,0x2
  405810:	mov    rdx,rax
  405813:	mov    rax,QWORD PTR [rbp-0x8]
  405817:	mov    r8d,0x0
  40581d:	mov    ecx,0x24
  405822:	mov    esi,0x4
  405827:	mov    rdi,rax
  40582a:	call   404d26 <flatcc_builder_default_alloc@@Base+0x50c>
  40582f:	mov    rdx,rax
  405832:	mov    rax,QWORD PTR [rbp-0x8]
  405836:	mov    QWORD PTR [rax+0x30],rdx
  40583a:	mov    rax,QWORD PTR [rbp-0x8]
  40583e:	mov    rax,QWORD PTR [rax+0x30]
  405842:	test   rax,rax
  405845:	jne    405851 <flatcc_builder_get_user_frame_ptr@@Base+0xf6>
  405847:	mov    eax,0xffffffff
  40584c:	jmp    405953 <flatcc_builder_get_user_frame_ptr@@Base+0x1f8>
  405851:	mov    rax,QWORD PTR [rbp-0x8]
  405855:	mov    rax,QWORD PTR [rax+0xa0]
  40585c:	movabs rdx,0xe38e38e38e38e38f
  405866:	mul    rdx
  405869:	mov    rax,rdx
  40586c:	shr    rax,0x5
  405870:	mov    edx,eax
  405872:	mov    rax,QWORD PTR [rbp-0x8]
  405876:	mov    DWORD PTR [rax+0x108],edx
  40587c:	mov    rax,QWORD PTR [rbp-0x8]
  405880:	mov    eax,DWORD PTR [rax+0x120]
  405886:	test   eax,eax
  405888:	jle    4058cc <flatcc_builder_get_user_frame_ptr@@Base+0x171>
  40588a:	mov    rax,QWORD PTR [rbp-0x8]
  40588e:	mov    edx,DWORD PTR [rax+0x120]
  405894:	mov    rax,QWORD PTR [rbp-0x8]
  405898:	mov    eax,DWORD PTR [rax+0x108]
  40589e:	cmp    edx,eax
  4058a0:	jge    4058cc <flatcc_builder_get_user_frame_ptr@@Base+0x171>
  4058a2:	mov    rax,QWORD PTR [rbp-0x8]
  4058a6:	mov    edx,DWORD PTR [rax+0x120]
  4058ac:	mov    rax,QWORD PTR [rbp-0x8]
  4058b0:	mov    DWORD PTR [rax+0x108],edx
  4058b6:	jmp    4058cc <flatcc_builder_get_user_frame_ptr@@Base+0x171>
  4058b8:	mov    rax,QWORD PTR [rbp-0x8]
  4058bc:	mov    rax,QWORD PTR [rax+0x30]
  4058c0:	lea    rdx,[rax+0x24]
  4058c4:	mov    rax,QWORD PTR [rbp-0x8]
  4058c8:	mov    QWORD PTR [rax+0x30],rdx
  4058cc:	mov    rax,QWORD PTR [rbp-0x8]
  4058d0:	mov    rax,QWORD PTR [rax+0x30]
  4058d4:	mov    rdx,QWORD PTR [rbp-0x8]
  4058d8:	mov    edx,DWORD PTR [rdx+0x20]
  4058db:	mov    DWORD PTR [rax+0x8],edx
  4058de:	mov    rax,QWORD PTR [rbp-0x8]
  4058e2:	mov    rax,QWORD PTR [rax+0x30]
  4058e6:	mov    rdx,QWORD PTR [rbp-0x8]
  4058ea:	movzx  edx,WORD PTR [rdx+0xea]
  4058f1:	mov    WORD PTR [rax+0xc],dx
  4058f5:	mov    rax,QWORD PTR [rbp-0x8]
  4058f9:	movzx  edx,WORD PTR [rbp-0xc]
  4058fd:	mov    WORD PTR [rax+0xea],dx
  405904:	mov    rax,QWORD PTR [rbp-0x8]
  405908:	mov    rax,QWORD PTR [rax+0x30]
  40590c:	mov    rdx,QWORD PTR [rbp-0x8]
  405910:	mov    edx,DWORD PTR [rdx+0x28]
  405913:	mov    DWORD PTR [rax],edx
  405915:	mov    rax,QWORD PTR [rbp-0x8]
  405919:	mov    rax,QWORD PTR [rax+0x30]
  40591d:	mov    DWORD PTR [rax+0x4],0xfffffffc
  405924:	mov    rax,QWORD PTR [rbp-0x8]
  405928:	mov    edx,DWORD PTR [rax+0x28]
  40592b:	mov    rax,QWORD PTR [rbp-0x8]
  40592f:	mov    eax,DWORD PTR [rax+0x20]
  405932:	add    eax,edx
  405934:	add    eax,0x7
  405937:	and    eax,0xfffffff8
  40593a:	mov    edx,eax
  40593c:	mov    rax,QWORD PTR [rbp-0x8]
  405940:	mov    DWORD PTR [rax+0x28],edx
  405943:	mov    rax,QWORD PTR [rbp-0x8]
  405947:	mov    DWORD PTR [rax+0x20],0x0
  40594e:	mov    eax,0x0
  405953:	leave  
  405954:	ret    
  405955:	push   rbp
  405956:	mov    rbp,rsp
  405959:	sub    rsp,0x10
  40595d:	mov    QWORD PTR [rbp-0x8],rdi
  405961:	mov    rax,QWORD PTR [rbp-0x8]
  405965:	mov    eax,DWORD PTR [rax+0x20]
  405968:	mov    edx,eax
  40596a:	mov    rax,QWORD PTR [rbp-0x8]
  40596e:	mov    rax,QWORD PTR [rax+0x18]
  405972:	mov    esi,0x0
  405977:	mov    rdi,rax
  40597a:	call   403080 <memset@plt>
  40597f:	mov    rax,QWORD PTR [rbp-0x8]
  405983:	mov    rax,QWORD PTR [rax+0x30]
  405987:	mov    edx,DWORD PTR [rax+0x8]
  40598a:	mov    rax,QWORD PTR [rbp-0x8]
  40598e:	mov    DWORD PTR [rax+0x20],edx
  405991:	mov    rax,QWORD PTR [rbp-0x8]
  405995:	mov    rax,QWORD PTR [rax+0x30]
  405999:	mov    edx,DWORD PTR [rax]
  40599b:	mov    rax,QWORD PTR [rbp-0x8]
  40599f:	mov    DWORD PTR [rax+0x28],edx
  4059a2:	mov    rax,QWORD PTR [rbp-0x8]
  4059a6:	mov    rax,QWORD PTR [rax+0x30]
  4059aa:	mov    edx,DWORD PTR [rax+0x4]
  4059ad:	mov    rax,QWORD PTR [rbp-0x8]
  4059b1:	mov    esi,edx
  4059b3:	mov    rdi,rax
  4059b6:	call   404987 <flatcc_builder_default_alloc@@Base+0x16d>
  4059bb:	mov    rax,QWORD PTR [rbp-0x8]
  4059bf:	movzx  eax,WORD PTR [rax+0xea]
  4059c6:	movzx  edx,ax
  4059c9:	mov    rax,QWORD PTR [rbp-0x8]
  4059cd:	mov    esi,edx
  4059cf:	mov    rdi,rax
  4059d2:	call   405464 <flatcc_builder_clear@@Base+0x96>
  4059d7:	mov    rax,QWORD PTR [rbp-0x8]
  4059db:	mov    rax,QWORD PTR [rax+0x30]
  4059df:	movzx  edx,WORD PTR [rax+0xc]
  4059e3:	mov    rax,QWORD PTR [rbp-0x8]
  4059e7:	mov    WORD PTR [rax+0xea],dx
  4059ee:	mov    rax,QWORD PTR [rbp-0x8]
  4059f2:	mov    rax,QWORD PTR [rax+0x30]
  4059f6:	lea    rdx,[rax-0x24]
  4059fa:	mov    rax,QWORD PTR [rbp-0x8]
  4059fe:	mov    QWORD PTR [rax+0x30],rdx
  405a02:	mov    rax,QWORD PTR [rbp-0x8]
  405a06:	mov    eax,DWORD PTR [rax+0x104]
  405a0c:	lea    edx,[rax-0x1]
  405a0f:	mov    rax,QWORD PTR [rbp-0x8]
  405a13:	mov    DWORD PTR [rax+0x104],edx
  405a19:	nop
  405a1a:	leave  
  405a1b:	ret    
  405a1c:	push   rbp
  405a1d:	mov    rbp,rsp
  405a20:	mov    QWORD PTR [rbp-0x8],rdi
  405a24:	mov    DWORD PTR [rbp-0xc],esi
  405a27:	mov    eax,edx
  405a29:	mov    WORD PTR [rbp-0x10],ax
  405a2d:	mov    rax,QWORD PTR [rbp-0x8]
  405a31:	mov    eax,DWORD PTR [rax+0xf0]
  405a37:	sub    eax,DWORD PTR [rbp-0xc]
  405a3a:	movzx  edx,WORD PTR [rbp-0x10]
  405a3e:	sub    edx,0x1
  405a41:	and    eax,edx
  405a43:	pop    rbp
  405a44:	ret    
  405a45:	push   rbp
  405a46:	mov    rbp,rsp
  405a49:	mov    QWORD PTR [rbp-0x8],rdi
  405a4d:	mov    eax,esi
  405a4f:	mov    WORD PTR [rbp-0xc],ax
  405a53:	mov    rax,QWORD PTR [rbp-0x8]
  405a57:	mov    eax,DWORD PTR [rax+0xf4]
  405a5d:	movzx  edx,WORD PTR [rbp-0xc]
  405a61:	sub    edx,0x1
  405a64:	and    eax,edx
  405a66:	pop    rbp
  405a67:	ret    
  405a68:	push   rbp
  405a69:	mov    rbp,rsp
  405a6c:	sub    rsp,0x20
  405a70:	mov    QWORD PTR [rbp-0x18],rdi
  405a74:	mov    QWORD PTR [rbp-0x20],rsi
  405a78:	mov    rax,QWORD PTR [rbp-0x18]
  405a7c:	mov    edx,DWORD PTR [rax+0xf0]
  405a82:	mov    rax,QWORD PTR [rbp-0x20]
  405a86:	mov    rax,QWORD PTR [rax]
  405a89:	sub    edx,eax
  405a8b:	mov    eax,edx
  405a8d:	mov    DWORD PTR [rbp-0x4],eax
  405a90:	mov    rax,QWORD PTR [rbp-0x20]
  405a94:	mov    rax,QWORD PTR [rax]
  405a97:	cmp    rax,0x10
  405a9b:	jbe    405ab2 <flatcc_builder_get_user_frame_ptr@@Base+0x357>
  405a9d:	mov    rax,QWORD PTR [rbp-0x20]
  405aa1:	mov    rax,QWORD PTR [rax]
  405aa4:	lea    rdx,[rax-0x10]
  405aa8:	mov    eax,0xffffffff
  405aad:	cmp    rdx,rax
  405ab0:	ja     405ac1 <flatcc_builder_get_user_frame_ptr@@Base+0x366>
  405ab2:	mov    rax,QWORD PTR [rbp-0x18]
  405ab6:	mov    eax,DWORD PTR [rax+0xf0]
  405abc:	cmp    eax,DWORD PTR [rbp-0x4]
  405abf:	jg     405ae0 <flatcc_builder_get_user_frame_ptr@@Base+0x385>
  405ac1:	lea    rcx,[rip+0x7e00]        # 40d8c8 <flatcc_builder_padding_base@@Base+0x708>
  405ac8:	mov    edx,0x287
  405acd:	lea    rsi,[rip+0x78ec]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  405ad4:	lea    rdi,[rip+0x7945]        # 40d420 <flatcc_builder_padding_base@@Base+0x260>
  405adb:	call   403070 <__assert_fail@plt>
  405ae0:	mov    rax,QWORD PTR [rbp-0x18]
  405ae4:	mov    rax,QWORD PTR [rax+0x48]
  405ae8:	mov    rdx,QWORD PTR [rbp-0x20]
  405aec:	mov    r8,QWORD PTR [rdx]
  405aef:	mov    rdx,QWORD PTR [rbp-0x20]
  405af3:	mov    edx,DWORD PTR [rdx+0x8]
  405af6:	mov    rcx,QWORD PTR [rbp-0x20]
  405afa:	lea    rsi,[rcx+0x10]
  405afe:	mov    rcx,QWORD PTR [rbp-0x18]
  405b02:	mov    rdi,QWORD PTR [rcx+0x38]
  405b06:	mov    ecx,DWORD PTR [rbp-0x4]
  405b09:	call   rax
  405b0b:	test   eax,eax
  405b0d:	je     405b2e <flatcc_builder_get_user_frame_ptr@@Base+0x3d3>
  405b0f:	lea    rcx,[rip+0x7db2]        # 40d8c8 <flatcc_builder_padding_base@@Base+0x708>
  405b16:	mov    edx,0x28b
  405b1b:	lea    rsi,[rip+0x789e]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  405b22:	lea    rdi,[rip+0x78f7]        # 40d420 <flatcc_builder_padding_base@@Base+0x260>
  405b29:	call   403070 <__assert_fail@plt>
  405b2e:	mov    rax,QWORD PTR [rbp-0x18]
  405b32:	mov    edx,DWORD PTR [rbp-0x4]
  405b35:	mov    DWORD PTR [rax+0xf0],edx
  405b3b:	mov    rax,QWORD PTR [rbp-0x18]
  405b3f:	mov    eax,DWORD PTR [rax+0xf0]
  405b45:	leave  
  405b46:	ret    
  405b47:	push   rbp
  405b48:	mov    rbp,rsp
  405b4b:	sub    rsp,0x20
  405b4f:	mov    QWORD PTR [rbp-0x18],rdi
  405b53:	mov    QWORD PTR [rbp-0x20],rsi
  405b57:	mov    rax,QWORD PTR [rbp-0x18]
  405b5b:	mov    eax,DWORD PTR [rax+0xf4]
  405b61:	mov    DWORD PTR [rbp-0x4],eax
  405b64:	mov    rax,QWORD PTR [rbp-0x20]
  405b68:	mov    rax,QWORD PTR [rax]
  405b6b:	mov    edx,eax
  405b6d:	mov    eax,DWORD PTR [rbp-0x4]
  405b70:	add    edx,eax
  405b72:	mov    rax,QWORD PTR [rbp-0x18]
  405b76:	mov    DWORD PTR [rax+0xf4],edx
  405b7c:	mov    rax,QWORD PTR [rbp-0x18]
  405b80:	mov    eax,DWORD PTR [rax+0xf4]
  405b86:	cmp    eax,DWORD PTR [rbp-0x4]
  405b89:	jge    405baa <flatcc_builder_get_user_frame_ptr@@Base+0x44f>
  405b8b:	lea    rcx,[rip+0x7d26]        # 40d8b8 <flatcc_builder_padding_base@@Base+0x6f8>
  405b92:	mov    edx,0x2a1
  405b97:	lea    rsi,[rip+0x7822]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  405b9e:	lea    rdi,[rip+0x787b]        # 40d420 <flatcc_builder_padding_base@@Base+0x260>
  405ba5:	call   403070 <__assert_fail@plt>
  405baa:	mov    rax,QWORD PTR [rbp-0x18]
  405bae:	mov    rax,QWORD PTR [rax+0x48]
  405bb2:	mov    rdx,QWORD PTR [rbp-0x20]
  405bb6:	mov    r8,QWORD PTR [rdx]
  405bb9:	mov    rdx,QWORD PTR [rbp-0x20]
  405bbd:	mov    edx,DWORD PTR [rdx+0x8]
  405bc0:	mov    rcx,QWORD PTR [rbp-0x20]
  405bc4:	lea    rsi,[rcx+0x10]
  405bc8:	mov    rcx,QWORD PTR [rbp-0x18]
  405bcc:	mov    rdi,QWORD PTR [rcx+0x38]
  405bd0:	mov    ecx,DWORD PTR [rbp-0x4]
  405bd3:	call   rax
  405bd5:	test   eax,eax
  405bd7:	je     405bf8 <flatcc_builder_get_user_frame_ptr@@Base+0x49d>
  405bd9:	lea    rcx,[rip+0x7cd8]        # 40d8b8 <flatcc_builder_padding_base@@Base+0x6f8>
  405be0:	mov    edx,0x2a5
  405be5:	lea    rsi,[rip+0x77d4]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  405bec:	lea    rdi,[rip+0x782d]        # 40d420 <flatcc_builder_padding_base@@Base+0x260>
  405bf3:	call   403070 <__assert_fail@plt>
  405bf8:	mov    eax,DWORD PTR [rbp-0x4]
  405bfb:	add    eax,0x1
  405bfe:	leave  
  405bff:	ret    
  405c00:	push   rbp
  405c01:	mov    rbp,rsp
  405c04:	sub    rsp,0xd0
  405c0b:	mov    QWORD PTR [rbp-0xb8],rdi
  405c12:	mov    QWORD PTR [rbp-0xc0],rsi
  405c19:	mov    eax,edx
  405c1b:	mov    DWORD PTR [rbp-0xc8],ecx
  405c21:	mov    WORD PTR [rbp-0xc4],ax
  405c28:	mov    rax,QWORD PTR fs:0x28
  405c31:	mov    QWORD PTR [rbp-0x8],rax
  405c35:	xor    eax,eax
  405c37:	cmp    WORD PTR [rbp-0xc4],0x0
  405c3f:	jne    405c6b <flatcc_builder_get_user_frame_ptr@@Base+0x510>
  405c41:	mov    rax,QWORD PTR [rbp-0xb8]
  405c48:	movzx  eax,WORD PTR [rax+0xec]
  405c4f:	test   ax,ax
  405c52:	je     405c64 <flatcc_builder_get_user_frame_ptr@@Base+0x509>
  405c54:	mov    rax,QWORD PTR [rbp-0xb8]
  405c5b:	movzx  eax,WORD PTR [rax+0xec]
  405c62:	jmp    405c72 <flatcc_builder_get_user_frame_ptr@@Base+0x517>
  405c64:	mov    eax,0x1
  405c69:	jmp    405c72 <flatcc_builder_get_user_frame_ptr@@Base+0x517>
  405c6b:	movzx  eax,WORD PTR [rbp-0xc4]
  405c72:	mov    WORD PTR [rbp-0xc4],ax
  405c79:	mov    rax,QWORD PTR [rbp-0xc0]
  405c80:	mov    esi,0x4
  405c85:	mov    rdi,rax
  405c88:	call   405495 <flatcc_builder_clear@@Base+0xc7>
  405c8d:	movzx  edx,WORD PTR [rbp-0xc4]
  405c94:	mov    rax,QWORD PTR [rbp-0xc0]
  405c9b:	mov    esi,edx
  405c9d:	mov    rdi,rax
  405ca0:	call   405495 <flatcc_builder_clear@@Base+0xc7>
  405ca5:	cmp    DWORD PTR [rbp-0xc8],0x0
  405cac:	jne    405da2 <flatcc_builder_get_user_frame_ptr@@Base+0x647>
  405cb2:	movzx  edx,WORD PTR [rbp-0xc4]
  405cb9:	mov    rax,QWORD PTR [rbp-0xb8]
  405cc0:	mov    esi,edx
  405cc2:	mov    rdi,rax
  405cc5:	call   405a45 <flatcc_builder_get_user_frame_ptr@@Base+0x2ea>
  405cca:	mov    eax,eax
  405ccc:	mov    QWORD PTR [rbp-0xa8],rax
  405cd3:	cmp    QWORD PTR [rbp-0xa8],0x0
  405cdb:	je     405da2 <flatcc_builder_get_user_frame_ptr@@Base+0x647>
  405ce1:	mov    QWORD PTR [rbp-0xa0],0x0
  405cec:	mov    DWORD PTR [rbp-0x98],0x0
  405cf6:	cmp    QWORD PTR [rbp-0xa8],0x0
  405cfe:	je     405d66 <flatcc_builder_get_user_frame_ptr@@Base+0x60b>
  405d00:	mov    rdx,QWORD PTR [rbp-0xa0]
  405d07:	mov    rax,QWORD PTR [rbp-0xa8]
  405d0e:	add    rax,rdx
  405d11:	mov    QWORD PTR [rbp-0xa0],rax
  405d18:	mov    eax,DWORD PTR [rbp-0x98]
  405d1e:	cdqe   
  405d20:	shl    rax,0x4
  405d24:	add    rax,rbp
  405d27:	sub    rax,0x90
  405d2d:	mov    rdx,0x40d1c0
  405d34:	mov    QWORD PTR [rax],rdx
  405d37:	mov    eax,DWORD PTR [rbp-0x98]
  405d3d:	cdqe   
  405d3f:	shl    rax,0x4
  405d43:	add    rax,rbp
  405d46:	lea    rdx,[rax-0x88]
  405d4d:	mov    rax,QWORD PTR [rbp-0xa8]
  405d54:	mov    QWORD PTR [rdx],rax
  405d57:	mov    eax,DWORD PTR [rbp-0x98]
  405d5d:	add    eax,0x1
  405d60:	mov    DWORD PTR [rbp-0x98],eax
  405d66:	lea    rdx,[rbp-0xa0]
  405d6d:	mov    rax,QWORD PTR [rbp-0xb8]
  405d74:	mov    rsi,rdx
  405d77:	mov    rdi,rax
  405d7a:	call   405b47 <flatcc_builder_get_user_frame_ptr@@Base+0x3ec>
  405d7f:	test   eax,eax
  405d81:	jne    405da2 <flatcc_builder_get_user_frame_ptr@@Base+0x647>
  405d83:	lea    rcx,[rip+0x7b1e]        # 40d8a8 <flatcc_builder_padding_base@@Base+0x6e8>
  405d8a:	mov    edx,0x2be
  405d8f:	lea    rsi,[rip+0x762a]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  405d96:	lea    rdi,[rip+0x7683]        # 40d420 <flatcc_builder_padding_base@@Base+0x260>
  405d9d:	call   403070 <__assert_fail@plt>
  405da2:	mov    eax,0x0
  405da7:	mov    rcx,QWORD PTR [rbp-0x8]
  405dab:	xor    rcx,QWORD PTR fs:0x28
  405db4:	je     405dbb <flatcc_builder_get_user_frame_ptr@@Base+0x660>
  405db6:	call   403060 <__stack_chk_fail@plt>
  405dbb:	leave  
  405dbc:	ret    

0000000000405dbd <flatcc_builder_embed_buffer@@Base>:
  405dbd:	push   rbp
  405dbe:	mov    rbp,rsp
  405dc1:	sub    rsp,0xe0
  405dc8:	mov    QWORD PTR [rbp-0xb8],rdi
  405dcf:	mov    eax,esi
  405dd1:	mov    QWORD PTR [rbp-0xc8],rdx
  405dd8:	mov    QWORD PTR [rbp-0xd0],rcx
  405ddf:	mov    edx,r8d
  405de2:	mov    DWORD PTR [rbp-0xd4],r9d
  405de9:	mov    WORD PTR [rbp-0xbc],ax
  405df0:	mov    WORD PTR [rbp-0xc0],dx
  405df7:	mov    rax,QWORD PTR fs:0x28
  405e00:	mov    QWORD PTR [rbp-0x8],rax
  405e04:	xor    eax,eax
  405e06:	mov    eax,DWORD PTR [rbp-0xd4]
  405e0c:	and    eax,0x2
  405e0f:	mov    DWORD PTR [rbp-0xa8],eax
  405e15:	mov    rax,QWORD PTR [rbp-0xb8]
  405e1c:	mov    eax,DWORD PTR [rax+0x100]
  405e22:	test   eax,eax
  405e24:	setne  al
  405e27:	movzx  ecx,al
  405e2a:	movzx  edx,WORD PTR [rbp-0xbc]
  405e31:	lea    rsi,[rbp-0xc0]
  405e38:	mov    rax,QWORD PTR [rbp-0xb8]
  405e3f:	mov    rdi,rax
  405e42:	call   405c00 <flatcc_builder_get_user_frame_ptr@@Base+0x4a5>
  405e47:	test   eax,eax
  405e49:	je     405e55 <flatcc_builder_embed_buffer@@Base+0x98>
  405e4b:	mov    eax,0x0
  405e50:	jmp    40602f <flatcc_builder_embed_buffer@@Base+0x272>
  405e55:	movzx  eax,WORD PTR [rbp-0xc0]
  405e5c:	movzx  edx,ax
  405e5f:	mov    rax,QWORD PTR [rbp-0xd0]
  405e66:	mov    ecx,eax
  405e68:	cmp    DWORD PTR [rbp-0xa8],0x0
  405e6f:	je     405e78 <flatcc_builder_embed_buffer@@Base+0xbb>
  405e71:	mov    eax,0x4
  405e76:	jmp    405e7d <flatcc_builder_embed_buffer@@Base+0xc0>
  405e78:	mov    eax,0x0
  405e7d:	add    ecx,eax
  405e7f:	mov    rax,QWORD PTR [rbp-0xb8]
  405e86:	mov    esi,ecx
  405e88:	mov    rdi,rax
  405e8b:	call   405a1c <flatcc_builder_get_user_frame_ptr@@Base+0x2c1>
  405e90:	mov    DWORD PTR [rbp-0xa4],eax
  405e96:	mov    rax,QWORD PTR [rbp-0xd0]
  405e9d:	mov    edx,eax
  405e9f:	mov    eax,DWORD PTR [rbp-0xa4]
  405ea5:	add    eax,edx
  405ea7:	mov    edi,eax
  405ea9:	call   404754 <main@@Base+0x16f>
  405eae:	mov    DWORD PTR [rbp-0xac],eax
  405eb4:	mov    QWORD PTR [rbp-0xa0],0x0
  405ebf:	mov    DWORD PTR [rbp-0x98],0x0
  405ec9:	mov    rax,QWORD PTR [rbp-0xb8]
  405ed0:	mov    eax,DWORD PTR [rax+0x100]
  405ed6:	test   eax,eax
  405ed8:	je     405f37 <flatcc_builder_embed_buffer@@Base+0x17a>
  405eda:	mov    rax,QWORD PTR [rbp-0xa0]
  405ee1:	add    rax,0x4
  405ee5:	mov    QWORD PTR [rbp-0xa0],rax
  405eec:	mov    eax,DWORD PTR [rbp-0x98]
  405ef2:	cdqe   
  405ef4:	shl    rax,0x4
  405ef8:	add    rax,rbp
  405efb:	lea    rdx,[rax-0x90]
  405f02:	lea    rax,[rbp-0xac]
  405f09:	mov    QWORD PTR [rdx],rax
  405f0c:	mov    eax,DWORD PTR [rbp-0x98]
  405f12:	cdqe   
  405f14:	shl    rax,0x4
  405f18:	add    rax,rbp
  405f1b:	sub    rax,0x88
  405f21:	mov    QWORD PTR [rax],0x4
  405f28:	mov    eax,DWORD PTR [rbp-0x98]
  405f2e:	add    eax,0x1
  405f31:	mov    DWORD PTR [rbp-0x98],eax
  405f37:	cmp    QWORD PTR [rbp-0xd0],0x0
  405f3f:	je     405fa8 <flatcc_builder_embed_buffer@@Base+0x1eb>
  405f41:	mov    rdx,QWORD PTR [rbp-0xa0]
  405f48:	mov    rax,QWORD PTR [rbp-0xd0]
  405f4f:	add    rax,rdx
  405f52:	mov    QWORD PTR [rbp-0xa0],rax
  405f59:	mov    eax,DWORD PTR [rbp-0x98]
  405f5f:	cdqe   
  405f61:	shl    rax,0x4
  405f65:	add    rax,rbp
  405f68:	lea    rdx,[rax-0x90]
  405f6f:	mov    rax,QWORD PTR [rbp-0xc8]
  405f76:	mov    QWORD PTR [rdx],rax
  405f79:	mov    eax,DWORD PTR [rbp-0x98]
  405f7f:	cdqe   
  405f81:	shl    rax,0x4
  405f85:	add    rax,rbp
  405f88:	lea    rdx,[rax-0x88]
  405f8f:	mov    rax,QWORD PTR [rbp-0xd0]
  405f96:	mov    QWORD PTR [rdx],rax
  405f99:	mov    eax,DWORD PTR [rbp-0x98]
  405f9f:	add    eax,0x1
  405fa2:	mov    DWORD PTR [rbp-0x98],eax
  405fa8:	cmp    DWORD PTR [rbp-0xa4],0x0
  405faf:	je     406016 <flatcc_builder_embed_buffer@@Base+0x259>
  405fb1:	mov    rdx,QWORD PTR [rbp-0xa0]
  405fb8:	mov    eax,DWORD PTR [rbp-0xa4]
  405fbe:	add    rax,rdx
  405fc1:	mov    QWORD PTR [rbp-0xa0],rax
  405fc8:	mov    eax,DWORD PTR [rbp-0x98]
  405fce:	cdqe   
  405fd0:	shl    rax,0x4
  405fd4:	add    rax,rbp
  405fd7:	sub    rax,0x90
  405fdd:	mov    rdx,0x40d1c0
  405fe4:	mov    QWORD PTR [rax],rdx
  405fe7:	mov    edx,DWORD PTR [rbp-0x98]
  405fed:	mov    eax,DWORD PTR [rbp-0xa4]
  405ff3:	movsxd rdx,edx
  405ff6:	shl    rdx,0x4
  405ffa:	add    rdx,rbp
  405ffd:	sub    rdx,0x88
  406004:	mov    QWORD PTR [rdx],rax
  406007:	mov    eax,DWORD PTR [rbp-0x98]
  40600d:	add    eax,0x1
  406010:	mov    DWORD PTR [rbp-0x98],eax
  406016:	lea    rdx,[rbp-0xa0]
  40601d:	mov    rax,QWORD PTR [rbp-0xb8]
  406024:	mov    rsi,rdx
  406027:	mov    rdi,rax
  40602a:	call   405a68 <flatcc_builder_get_user_frame_ptr@@Base+0x30d>
  40602f:	mov    rdi,QWORD PTR [rbp-0x8]
  406033:	xor    rdi,QWORD PTR fs:0x28
  40603c:	je     406043 <flatcc_builder_embed_buffer@@Base+0x286>
  40603e:	call   403060 <__stack_chk_fail@plt>
  406043:	leave  
  406044:	ret    

0000000000406045 <flatcc_builder_create_buffer@@Base>:
  406045:	push   rbp
  406046:	mov    rbp,rsp
  406049:	sub    rsp,0xf0
  406050:	mov    QWORD PTR [rbp-0xd8],rdi
  406057:	mov    QWORD PTR [rbp-0xe0],rsi
  40605e:	mov    eax,edx
  406060:	mov    DWORD PTR [rbp-0xe8],ecx
  406066:	mov    edx,r8d
  406069:	mov    DWORD PTR [rbp-0xf0],r9d
  406070:	mov    WORD PTR [rbp-0xe4],ax
  406077:	mov    WORD PTR [rbp-0xec],dx
  40607e:	mov    rax,QWORD PTR fs:0x28
  406087:	mov    QWORD PTR [rbp-0x8],rax
  40608b:	xor    eax,eax
  40608d:	mov    DWORD PTR [rbp-0xb8],0x0
  406097:	mov    DWORD PTR [rbp-0xbc],0x0
  4060a1:	mov    eax,DWORD PTR [rbp-0xf0]
  4060a7:	and    eax,0x1
  4060aa:	test   eax,eax
  4060ac:	setne  al
  4060af:	movzx  eax,al
  4060b2:	mov    DWORD PTR [rbp-0xb4],eax
  4060b8:	mov    eax,DWORD PTR [rbp-0xf0]
  4060be:	and    eax,0x2
  4060c1:	test   eax,eax
  4060c3:	setne  al
  4060c6:	movzx  eax,al
  4060c9:	mov    DWORD PTR [rbp-0xb0],eax
  4060cf:	movzx  edx,WORD PTR [rbp-0xe4]
  4060d6:	mov    ecx,DWORD PTR [rbp-0xb4]
  4060dc:	lea    rsi,[rbp-0xec]
  4060e3:	mov    rax,QWORD PTR [rbp-0xd8]
  4060ea:	mov    rdi,rax
  4060ed:	call   405c00 <flatcc_builder_get_user_frame_ptr@@Base+0x4a5>
  4060f2:	test   eax,eax
  4060f4:	je     406100 <flatcc_builder_create_buffer@@Base+0xbb>
  4060f6:	mov    eax,0x0
  4060fb:	jmp    406466 <flatcc_builder_create_buffer@@Base+0x421>
  406100:	movzx  eax,WORD PTR [rbp-0xec]
  406107:	movzx  edx,ax
  40610a:	mov    rax,QWORD PTR [rbp-0xd8]
  406111:	mov    esi,edx
  406113:	mov    rdi,rax
  406116:	call   405464 <flatcc_builder_clear@@Base+0x96>
  40611b:	cmp    QWORD PTR [rbp-0xe0],0x0
  406123:	je     40615a <flatcc_builder_create_buffer@@Base+0x115>
  406125:	mov    rax,QWORD PTR [rbp-0xe0]
  40612c:	mov    eax,DWORD PTR [rax]
  40612e:	mov    DWORD PTR [rbp-0xbc],eax
  406134:	mov    eax,DWORD PTR [rbp-0xbc]
  40613a:	mov    edi,eax
  40613c:	call   40476f <main@@Base+0x18a>
  406141:	mov    DWORD PTR [rbp-0xbc],eax
  406147:	mov    eax,DWORD PTR [rbp-0xbc]
  40614d:	mov    edi,eax
  40614f:	call   404754 <main@@Base+0x16f>
  406154:	mov    DWORD PTR [rbp-0xbc],eax
  40615a:	mov    eax,DWORD PTR [rbp-0xbc]
  406160:	test   eax,eax
  406162:	je     40616b <flatcc_builder_create_buffer@@Base+0x126>
  406164:	mov    eax,0x4
  406169:	jmp    406170 <flatcc_builder_create_buffer@@Base+0x12b>
  40616b:	mov    eax,0x0
  406170:	mov    DWORD PTR [rbp-0xb8],eax
  406176:	movzx  eax,WORD PTR [rbp-0xec]
  40617d:	movzx  edx,ax
  406180:	cmp    DWORD PTR [rbp-0xb0],0x0
  406187:	je     406190 <flatcc_builder_create_buffer@@Base+0x14b>
  406189:	mov    ecx,0x4
  40618e:	jmp    406195 <flatcc_builder_create_buffer@@Base+0x150>
  406190:	mov    ecx,0x0
  406195:	mov    eax,DWORD PTR [rbp-0xb8]
  40619b:	add    eax,ecx
  40619d:	lea    ecx,[rax+0x4]
  4061a0:	mov    rax,QWORD PTR [rbp-0xd8]
  4061a7:	mov    esi,ecx
  4061a9:	mov    rdi,rax
  4061ac:	call   405a1c <flatcc_builder_get_user_frame_ptr@@Base+0x2c1>
  4061b1:	mov    DWORD PTR [rbp-0xac],eax
  4061b7:	mov    QWORD PTR [rbp-0xa0],0x0
  4061c2:	mov    DWORD PTR [rbp-0x98],0x0
  4061cc:	cmp    DWORD PTR [rbp-0xb4],0x0
  4061d3:	jne    4061de <flatcc_builder_create_buffer@@Base+0x199>
  4061d5:	cmp    DWORD PTR [rbp-0xb0],0x0
  4061dc:	je     40623b <flatcc_builder_create_buffer@@Base+0x1f6>
  4061de:	mov    rax,QWORD PTR [rbp-0xa0]
  4061e5:	add    rax,0x4
  4061e9:	mov    QWORD PTR [rbp-0xa0],rax
  4061f0:	mov    eax,DWORD PTR [rbp-0x98]
  4061f6:	cdqe   
  4061f8:	shl    rax,0x4
  4061fc:	add    rax,rbp
  4061ff:	lea    rdx,[rax-0x90]
  406206:	lea    rax,[rbp-0xc0]
  40620d:	mov    QWORD PTR [rdx],rax
  406210:	mov    eax,DWORD PTR [rbp-0x98]
  406216:	cdqe   
  406218:	shl    rax,0x4
  40621c:	add    rax,rbp
  40621f:	sub    rax,0x88
  406225:	mov    QWORD PTR [rax],0x4
  40622c:	mov    eax,DWORD PTR [rbp-0x98]
  406232:	add    eax,0x1
  406235:	mov    DWORD PTR [rbp-0x98],eax
  40623b:	mov    rax,QWORD PTR [rbp-0xa0]
  406242:	add    rax,0x4
  406246:	mov    QWORD PTR [rbp-0xa0],rax
  40624d:	mov    eax,DWORD PTR [rbp-0x98]
  406253:	cdqe   
  406255:	shl    rax,0x4
  406259:	add    rax,rbp
  40625c:	lea    rdx,[rax-0x90]
  406263:	lea    rax,[rbp-0xc4]
  40626a:	mov    QWORD PTR [rdx],rax
  40626d:	mov    eax,DWORD PTR [rbp-0x98]
  406273:	cdqe   
  406275:	shl    rax,0x4
  406279:	add    rax,rbp
  40627c:	sub    rax,0x88
  406282:	mov    QWORD PTR [rax],0x4
  406289:	mov    eax,DWORD PTR [rbp-0x98]
  40628f:	add    eax,0x1
  406292:	mov    DWORD PTR [rbp-0x98],eax
  406298:	cmp    DWORD PTR [rbp-0xb8],0x0
  40629f:	je     406307 <flatcc_builder_create_buffer@@Base+0x2c2>
  4062a1:	mov    rdx,QWORD PTR [rbp-0xa0]
  4062a8:	mov    eax,DWORD PTR [rbp-0xb8]
  4062ae:	add    rax,rdx
  4062b1:	mov    QWORD PTR [rbp-0xa0],rax
  4062b8:	mov    eax,DWORD PTR [rbp-0x98]
  4062be:	cdqe   
  4062c0:	shl    rax,0x4
  4062c4:	add    rax,rbp
  4062c7:	lea    rdx,[rax-0x90]
  4062ce:	lea    rax,[rbp-0xbc]
  4062d5:	mov    QWORD PTR [rdx],rax
  4062d8:	mov    edx,DWORD PTR [rbp-0x98]
  4062de:	mov    eax,DWORD PTR [rbp-0xb8]
  4062e4:	movsxd rdx,edx
  4062e7:	shl    rdx,0x4
  4062eb:	add    rdx,rbp
  4062ee:	sub    rdx,0x88
  4062f5:	mov    QWORD PTR [rdx],rax
  4062f8:	mov    eax,DWORD PTR [rbp-0x98]
  4062fe:	add    eax,0x1
  406301:	mov    DWORD PTR [rbp-0x98],eax
  406307:	cmp    DWORD PTR [rbp-0xac],0x0
  40630e:	je     406375 <flatcc_builder_create_buffer@@Base+0x330>
  406310:	mov    rdx,QWORD PTR [rbp-0xa0]
  406317:	mov    eax,DWORD PTR [rbp-0xac]
  40631d:	add    rax,rdx
  406320:	mov    QWORD PTR [rbp-0xa0],rax
  406327:	mov    eax,DWORD PTR [rbp-0x98]
  40632d:	cdqe   
  40632f:	shl    rax,0x4
  406333:	add    rax,rbp
  406336:	sub    rax,0x90
  40633c:	mov    rdx,0x40d1c0
  406343:	mov    QWORD PTR [rax],rdx
  406346:	mov    edx,DWORD PTR [rbp-0x98]
  40634c:	mov    eax,DWORD PTR [rbp-0xac]
  406352:	movsxd rdx,edx
  406355:	shl    rdx,0x4
  406359:	add    rdx,rbp
  40635c:	sub    rdx,0x88
  406363:	mov    QWORD PTR [rdx],rax
  406366:	mov    eax,DWORD PTR [rbp-0x98]
  40636c:	add    eax,0x1
  40636f:	mov    DWORD PTR [rbp-0x98],eax
  406375:	mov    rax,QWORD PTR [rbp-0xd8]
  40637c:	mov    eax,DWORD PTR [rax+0xf0]
  406382:	mov    edx,eax
  406384:	mov    rax,QWORD PTR [rbp-0xa0]
  40638b:	sub    edx,eax
  40638d:	mov    eax,edx
  40638f:	cmp    DWORD PTR [rbp-0xb4],0x0
  406396:	jne    4063a1 <flatcc_builder_create_buffer@@Base+0x35c>
  406398:	cmp    DWORD PTR [rbp-0xb0],0x0
  40639f:	je     4063a8 <flatcc_builder_create_buffer@@Base+0x363>
  4063a1:	mov    edx,0x4
  4063a6:	jmp    4063ad <flatcc_builder_create_buffer@@Base+0x368>
  4063a8:	mov    edx,0x0
  4063ad:	add    eax,edx
  4063af:	mov    DWORD PTR [rbp-0xa8],eax
  4063b5:	cmp    DWORD PTR [rbp-0xb4],0x0
  4063bc:	je     4063e0 <flatcc_builder_create_buffer@@Base+0x39b>
  4063be:	mov    rax,QWORD PTR [rbp-0xd8]
  4063c5:	mov    eax,DWORD PTR [rax+0xf8]
  4063cb:	sub    eax,DWORD PTR [rbp-0xa8]
  4063d1:	mov    edi,eax
  4063d3:	call   404754 <main@@Base+0x16f>
  4063d8:	mov    DWORD PTR [rbp-0xc0],eax
  4063de:	jmp    406400 <flatcc_builder_create_buffer@@Base+0x3bb>
  4063e0:	mov    rax,QWORD PTR [rbp-0xd8]
  4063e7:	mov    eax,DWORD PTR [rax+0xf4]
  4063ed:	sub    eax,DWORD PTR [rbp-0xa8]
  4063f3:	mov    edi,eax
  4063f5:	call   404754 <main@@Base+0x16f>
  4063fa:	mov    DWORD PTR [rbp-0xc0],eax
  406400:	mov    eax,DWORD PTR [rbp-0xe8]
  406406:	sub    eax,DWORD PTR [rbp-0xa8]
  40640c:	mov    edi,eax
  40640e:	call   404754 <main@@Base+0x16f>
  406413:	mov    DWORD PTR [rbp-0xc4],eax
  406419:	lea    rdx,[rbp-0xa0]
  406420:	mov    rax,QWORD PTR [rbp-0xd8]
  406427:	mov    rsi,rdx
  40642a:	mov    rdi,rax
  40642d:	call   405a68 <flatcc_builder_get_user_frame_ptr@@Base+0x30d>
  406432:	mov    DWORD PTR [rbp-0xa4],eax
  406438:	cmp    DWORD PTR [rbp-0xa4],0x0
  40643f:	jne    406460 <flatcc_builder_create_buffer@@Base+0x41b>
  406441:	lea    rcx,[rip+0x7498]        # 40d8e0 <flatcc_builder_padding_base@@Base+0x720>
  406448:	mov    edx,0x304
  40644d:	lea    rsi,[rip+0x6f6c]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  406454:	lea    rdi,[rip+0x6fc5]        # 40d420 <flatcc_builder_padding_base@@Base+0x260>
  40645b:	call   403070 <__assert_fail@plt>
  406460:	mov    eax,DWORD PTR [rbp-0xa4]
  406466:	mov    rsi,QWORD PTR [rbp-0x8]
  40646a:	xor    rsi,QWORD PTR fs:0x28
  406473:	je     40647a <flatcc_builder_create_buffer@@Base+0x435>
  406475:	call   403060 <__stack_chk_fail@plt>
  40647a:	leave  
  40647b:	ret    

000000000040647c <flatcc_builder_create_struct@@Base>:
  40647c:	push   rbp
  40647d:	mov    rbp,rsp
  406480:	sub    rsp,0xd0
  406487:	mov    QWORD PTR [rbp-0xb8],rdi
  40648e:	mov    QWORD PTR [rbp-0xc0],rsi
  406495:	mov    QWORD PTR [rbp-0xc8],rdx
  40649c:	mov    eax,ecx
  40649e:	mov    WORD PTR [rbp-0xcc],ax
  4064a5:	mov    rax,QWORD PTR fs:0x28
  4064ae:	mov    QWORD PTR [rbp-0x8],rax
  4064b2:	xor    eax,eax
  4064b4:	cmp    WORD PTR [rbp-0xcc],0x0
  4064bc:	jne    4064dd <flatcc_builder_create_struct@@Base+0x61>
  4064be:	lea    rcx,[rip+0x743b]        # 40d900 <flatcc_builder_padding_base@@Base+0x740>
  4064c5:	mov    edx,0x30f
  4064ca:	lea    rsi,[rip+0x6eef]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  4064d1:	lea    rdi,[rip+0x6fa7]        # 40d47f <flatcc_builder_padding_base@@Base+0x2bf>
  4064d8:	call   403070 <__assert_fail@plt>
  4064dd:	movzx  edx,WORD PTR [rbp-0xcc]
  4064e4:	mov    rax,QWORD PTR [rbp-0xb8]
  4064eb:	mov    esi,edx
  4064ed:	mov    rdi,rax
  4064f0:	call   405464 <flatcc_builder_clear@@Base+0x96>
  4064f5:	movzx  edx,WORD PTR [rbp-0xcc]
  4064fc:	mov    rax,QWORD PTR [rbp-0xc8]
  406503:	mov    ecx,eax
  406505:	mov    rax,QWORD PTR [rbp-0xb8]
  40650c:	mov    esi,ecx
  40650e:	mov    rdi,rax
  406511:	call   405a1c <flatcc_builder_get_user_frame_ptr@@Base+0x2c1>
  406516:	mov    eax,eax
  406518:	mov    QWORD PTR [rbp-0xa8],rax
  40651f:	mov    QWORD PTR [rbp-0xa0],0x0
  40652a:	mov    DWORD PTR [rbp-0x98],0x0
  406534:	cmp    QWORD PTR [rbp-0xc8],0x0
  40653c:	je     4065a5 <flatcc_builder_create_struct@@Base+0x129>
  40653e:	mov    rdx,QWORD PTR [rbp-0xa0]
  406545:	mov    rax,QWORD PTR [rbp-0xc8]
  40654c:	add    rax,rdx
  40654f:	mov    QWORD PTR [rbp-0xa0],rax
  406556:	mov    eax,DWORD PTR [rbp-0x98]
  40655c:	cdqe   
  40655e:	shl    rax,0x4
  406562:	add    rax,rbp
  406565:	lea    rdx,[rax-0x90]
  40656c:	mov    rax,QWORD PTR [rbp-0xc0]
  406573:	mov    QWORD PTR [rdx],rax
  406576:	mov    eax,DWORD PTR [rbp-0x98]
  40657c:	cdqe   
  40657e:	shl    rax,0x4
  406582:	add    rax,rbp
  406585:	lea    rdx,[rax-0x88]
  40658c:	mov    rax,QWORD PTR [rbp-0xc8]
  406593:	mov    QWORD PTR [rdx],rax
  406596:	mov    eax,DWORD PTR [rbp-0x98]
  40659c:	add    eax,0x1
  40659f:	mov    DWORD PTR [rbp-0x98],eax
  4065a5:	cmp    QWORD PTR [rbp-0xa8],0x0
  4065ad:	je     406615 <flatcc_builder_create_struct@@Base+0x199>
  4065af:	mov    rdx,QWORD PTR [rbp-0xa0]
  4065b6:	mov    rax,QWORD PTR [rbp-0xa8]
  4065bd:	add    rax,rdx
  4065c0:	mov    QWORD PTR [rbp-0xa0],rax
  4065c7:	mov    eax,DWORD PTR [rbp-0x98]
  4065cd:	cdqe   
  4065cf:	shl    rax,0x4
  4065d3:	add    rax,rbp
  4065d6:	sub    rax,0x90
  4065dc:	mov    rdx,0x40d1c0
  4065e3:	mov    QWORD PTR [rax],rdx
  4065e6:	mov    eax,DWORD PTR [rbp-0x98]
  4065ec:	cdqe   
  4065ee:	shl    rax,0x4
  4065f2:	add    rax,rbp
  4065f5:	lea    rdx,[rax-0x88]
  4065fc:	mov    rax,QWORD PTR [rbp-0xa8]
  406603:	mov    QWORD PTR [rdx],rax
  406606:	mov    eax,DWORD PTR [rbp-0x98]
  40660c:	add    eax,0x1
  40660f:	mov    DWORD PTR [rbp-0x98],eax
  406615:	lea    rdx,[rbp-0xa0]
  40661c:	mov    rax,QWORD PTR [rbp-0xb8]
  406623:	mov    rsi,rdx
  406626:	mov    rdi,rax
  406629:	call   405a68 <flatcc_builder_get_user_frame_ptr@@Base+0x30d>
  40662e:	mov    rcx,QWORD PTR [rbp-0x8]
  406632:	xor    rcx,QWORD PTR fs:0x28
  40663b:	je     406642 <flatcc_builder_create_struct@@Base+0x1c6>
  40663d:	call   403060 <__stack_chk_fail@plt>
  406642:	leave  
  406643:	ret    

0000000000406644 <flatcc_builder_start_buffer@@Base>:
  406644:	push   rbp
  406645:	mov    rbp,rsp
  406648:	sub    rsp,0x20
  40664c:	mov    QWORD PTR [rbp-0x8],rdi
  406650:	mov    QWORD PTR [rbp-0x10],rsi
  406654:	mov    eax,edx
  406656:	mov    DWORD PTR [rbp-0x18],ecx
  406659:	mov    WORD PTR [rbp-0x14],ax
  40665d:	mov    rax,QWORD PTR [rbp-0x8]
  406661:	movzx  eax,WORD PTR [rax+0xe8]
  406668:	movzx  edx,ax
  40666b:	mov    rax,QWORD PTR [rbp-0x8]
  40666f:	mov    esi,edx
  406671:	mov    rdi,rax
  406674:	call   40577d <flatcc_builder_get_user_frame_ptr@@Base+0x22>
  406679:	test   eax,eax
  40667b:	je     406687 <flatcc_builder_start_buffer@@Base+0x43>
  40667d:	mov    eax,0xffffffff
  406682:	jmp    40678b <flatcc_builder_start_buffer@@Base+0x147>
  406687:	mov    rax,QWORD PTR [rbp-0x8]
  40668b:	mov    WORD PTR [rax+0xe8],0x1
  406694:	mov    rax,QWORD PTR [rbp-0x8]
  406698:	mov    rax,QWORD PTR [rax+0x30]
  40669c:	mov    rdx,QWORD PTR [rbp-0x8]
  4066a0:	movzx  edx,WORD PTR [rdx+0xec]
  4066a7:	mov    WORD PTR [rax+0x22],dx
  4066ab:	mov    rax,QWORD PTR [rbp-0x8]
  4066af:	movzx  edx,WORD PTR [rbp-0x14]
  4066b3:	mov    WORD PTR [rax+0xec],dx
  4066ba:	mov    rax,QWORD PTR [rbp-0x8]
  4066be:	mov    rax,QWORD PTR [rax+0x30]
  4066c2:	mov    rdx,QWORD PTR [rbp-0x8]
  4066c6:	movzx  edx,WORD PTR [rdx+0x10c]
  4066cd:	mov    WORD PTR [rax+0x20],dx
  4066d1:	mov    eax,DWORD PTR [rbp-0x18]
  4066d4:	mov    edx,eax
  4066d6:	mov    rax,QWORD PTR [rbp-0x8]
  4066da:	mov    WORD PTR [rax+0x10c],dx
  4066e1:	mov    rax,QWORD PTR [rbp-0x8]
  4066e5:	mov    rax,QWORD PTR [rax+0x30]
  4066e9:	mov    rdx,QWORD PTR [rbp-0x8]
  4066ed:	mov    edx,DWORD PTR [rdx+0xf8]
  4066f3:	mov    DWORD PTR [rax+0x14],edx
  4066f6:	mov    rax,QWORD PTR [rbp-0x8]
  4066fa:	mov    rax,QWORD PTR [rax+0x30]
  4066fe:	mov    rdx,QWORD PTR [rbp-0x8]
  406702:	mov    edx,DWORD PTR [rdx+0x100]
  406708:	mov    DWORD PTR [rax+0x1c],edx
  40670b:	mov    rax,QWORD PTR [rbp-0x8]
  40670f:	mov    edx,DWORD PTR [rax+0xf0]
  406715:	mov    rax,QWORD PTR [rbp-0x8]
  406719:	mov    DWORD PTR [rax+0xf8],edx
  40671f:	mov    rax,QWORD PTR [rbp-0x8]
  406723:	mov    eax,DWORD PTR [rax+0xfc]
  406729:	lea    ecx,[rax+0x1]
  40672c:	mov    rdx,QWORD PTR [rbp-0x8]
  406730:	mov    DWORD PTR [rdx+0xfc],ecx
  406736:	mov    rdx,QWORD PTR [rbp-0x8]
  40673a:	mov    DWORD PTR [rdx+0x100],eax
  406740:	mov    rax,QWORD PTR [rbp-0x8]
  406744:	mov    rax,QWORD PTR [rax+0x30]
  406748:	mov    rdx,QWORD PTR [rbp-0x8]
  40674c:	mov    edx,DWORD PTR [rdx+0x110]
  406752:	mov    DWORD PTR [rax+0x10],edx
  406755:	cmp    QWORD PTR [rbp-0x10],0x0
  40675a:	je     406762 <flatcc_builder_start_buffer@@Base+0x11e>
  40675c:	mov    rax,QWORD PTR [rbp-0x10]
  406760:	jmp    406769 <flatcc_builder_start_buffer@@Base+0x125>
  406762:	mov    rax,0x40d1c0
  406769:	mov    rdx,QWORD PTR [rbp-0x8]
  40676d:	add    rdx,0x110
  406774:	mov    eax,DWORD PTR [rax]
  406776:	mov    DWORD PTR [rdx],eax
  406778:	mov    rax,QWORD PTR [rbp-0x8]
  40677c:	mov    rax,QWORD PTR [rax+0x30]
  406780:	mov    WORD PTR [rax+0xe],0x1
  406786:	mov    eax,0x0
  40678b:	leave  
  40678c:	ret    

000000000040678d <flatcc_builder_end_buffer@@Base>:
  40678d:	push   rbp
  40678e:	mov    rbp,rsp
  406791:	sub    rsp,0x20
  406795:	mov    QWORD PTR [rbp-0x18],rdi
  406799:	mov    DWORD PTR [rbp-0x1c],esi
  40679c:	mov    rax,QWORD PTR [rbp-0x18]
  4067a0:	movzx  eax,WORD PTR [rax+0x10c]
  4067a7:	movzx  eax,ax
  4067aa:	and    eax,0x2
  4067ad:	mov    DWORD PTR [rbp-0x8],eax
  4067b0:	mov    rax,QWORD PTR [rbp-0x18]
  4067b4:	mov    eax,DWORD PTR [rax+0x100]
  4067ba:	test   eax,eax
  4067bc:	setne  al
  4067bf:	movzx  eax,al
  4067c2:	or     DWORD PTR [rbp-0x8],eax
  4067c5:	mov    rax,QWORD PTR [rbp-0x18]
  4067c9:	mov    rax,QWORD PTR [rax+0x30]
  4067cd:	movzx  eax,WORD PTR [rax+0xe]
  4067d1:	cmp    ax,0x1
  4067d5:	je     4067f6 <flatcc_builder_end_buffer@@Base+0x69>
  4067d7:	lea    rcx,[rip+0x7142]        # 40d920 <flatcc_builder_padding_base@@Base+0x760>
  4067de:	mov    edx,0x346
  4067e3:	lea    rsi,[rip+0x6bd6]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  4067ea:	lea    rdi,[rip+0x6c9f]        # 40d490 <flatcc_builder_padding_base@@Base+0x2d0>
  4067f1:	call   403070 <__assert_fail@plt>
  4067f6:	mov    rax,QWORD PTR [rbp-0x18]
  4067fa:	movzx  eax,WORD PTR [rax+0xec]
  406801:	movzx  edx,ax
  406804:	mov    rax,QWORD PTR [rbp-0x18]
  406808:	mov    esi,edx
  40680a:	mov    rdi,rax
  40680d:	call   405464 <flatcc_builder_clear@@Base+0x96>
  406812:	mov    rax,QWORD PTR [rbp-0x18]
  406816:	movzx  eax,WORD PTR [rax+0xe8]
  40681d:	movzx  edi,ax
  406820:	mov    rax,QWORD PTR [rbp-0x18]
  406824:	movzx  eax,WORD PTR [rax+0xec]
  40682b:	movzx  edx,ax
  40682e:	mov    rax,QWORD PTR [rbp-0x18]
  406832:	lea    rsi,[rax+0x110]
  406839:	mov    r8d,DWORD PTR [rbp-0x8]
  40683d:	mov    ecx,DWORD PTR [rbp-0x1c]
  406840:	mov    rax,QWORD PTR [rbp-0x18]
  406844:	mov    r9d,r8d
  406847:	mov    r8d,edi
  40684a:	mov    rdi,rax
  40684d:	call   406045 <flatcc_builder_create_buffer@@Base>
  406852:	mov    DWORD PTR [rbp-0x4],eax
  406855:	cmp    DWORD PTR [rbp-0x4],0x0
  406859:	jne    406862 <flatcc_builder_end_buffer@@Base+0xd5>
  40685b:	mov    eax,0x0
  406860:	jmp    4068c7 <flatcc_builder_end_buffer@@Base+0x13a>
  406862:	mov    rax,QWORD PTR [rbp-0x18]
  406866:	mov    rax,QWORD PTR [rax+0x30]
  40686a:	mov    edx,DWORD PTR [rax+0x14]
  40686d:	mov    rax,QWORD PTR [rbp-0x18]
  406871:	mov    DWORD PTR [rax+0xf8],edx
  406877:	mov    rax,QWORD PTR [rbp-0x18]
  40687b:	mov    rax,QWORD PTR [rax+0x30]
  40687f:	mov    edx,DWORD PTR [rax+0x1c]
  406882:	mov    rax,QWORD PTR [rbp-0x18]
  406886:	mov    DWORD PTR [rax+0x100],edx
  40688c:	mov    rax,QWORD PTR [rbp-0x18]
  406890:	mov    rax,QWORD PTR [rax+0x30]
  406894:	mov    edx,DWORD PTR [rax+0x10]
  406897:	mov    rax,QWORD PTR [rbp-0x18]
  40689b:	mov    DWORD PTR [rax+0x110],edx
  4068a1:	mov    rax,QWORD PTR [rbp-0x18]
  4068a5:	mov    rax,QWORD PTR [rax+0x30]
  4068a9:	movzx  edx,WORD PTR [rax+0x20]
  4068ad:	mov    rax,QWORD PTR [rbp-0x18]
  4068b1:	mov    WORD PTR [rax+0x10c],dx
  4068b8:	mov    rax,QWORD PTR [rbp-0x18]
  4068bc:	mov    rdi,rax
  4068bf:	call   405955 <flatcc_builder_get_user_frame_ptr@@Base+0x1fa>
  4068c4:	mov    eax,DWORD PTR [rbp-0x4]
  4068c7:	leave  
  4068c8:	ret    

00000000004068c9 <flatcc_builder_start_struct@@Base>:
  4068c9:	push   rbp
  4068ca:	mov    rbp,rsp
  4068cd:	sub    rsp,0x20
  4068d1:	mov    QWORD PTR [rbp-0x8],rdi
  4068d5:	mov    QWORD PTR [rbp-0x10],rsi
  4068d9:	mov    eax,edx
  4068db:	mov    WORD PTR [rbp-0x14],ax
  4068df:	movzx  edx,WORD PTR [rbp-0x14]
  4068e3:	mov    rax,QWORD PTR [rbp-0x8]
  4068e7:	mov    esi,edx
  4068e9:	mov    rdi,rax
  4068ec:	call   40577d <flatcc_builder_get_user_frame_ptr@@Base+0x22>
  4068f1:	test   eax,eax
  4068f3:	je     4068fc <flatcc_builder_start_struct@@Base+0x33>
  4068f5:	mov    eax,0x0
  4068fa:	jmp    40692f <flatcc_builder_start_struct@@Base+0x66>
  4068fc:	mov    rax,QWORD PTR [rbp-0x8]
  406900:	mov    rax,QWORD PTR [rax+0x30]
  406904:	mov    WORD PTR [rax+0xe],0x2
  40690a:	mov    rax,QWORD PTR [rbp-0x8]
  40690e:	mov    esi,0xfffffffc
  406913:	mov    rdi,rax
  406916:	call   404987 <flatcc_builder_default_alloc@@Base+0x16d>
  40691b:	mov    rax,QWORD PTR [rbp-0x10]
  40691f:	mov    edx,eax
  406921:	mov    rax,QWORD PTR [rbp-0x8]
  406925:	mov    esi,edx
  406927:	mov    rdi,rax
  40692a:	call   404a7a <flatcc_builder_default_alloc@@Base+0x260>
  40692f:	leave  
  406930:	ret    

0000000000406931 <flatcc_builder_struct_edit@@Base>:
  406931:	push   rbp
  406932:	mov    rbp,rsp
  406935:	mov    QWORD PTR [rbp-0x8],rdi
  406939:	mov    rax,QWORD PTR [rbp-0x8]
  40693d:	mov    rax,QWORD PTR [rax+0x18]
  406941:	pop    rbp
  406942:	ret    

0000000000406943 <flatcc_builder_end_struct@@Base>:
  406943:	push   rbp
  406944:	mov    rbp,rsp
  406947:	sub    rsp,0x20
  40694b:	mov    QWORD PTR [rbp-0x18],rdi
  40694f:	mov    rax,QWORD PTR [rbp-0x18]
  406953:	mov    rax,QWORD PTR [rax+0x30]
  406957:	movzx  eax,WORD PTR [rax+0xe]
  40695b:	cmp    ax,0x2
  40695f:	je     406980 <flatcc_builder_end_struct@@Base+0x3d>
  406961:	lea    rcx,[rip+0x6fd8]        # 40d940 <flatcc_builder_padding_base@@Base+0x780>
  406968:	mov    edx,0x368
  40696d:	lea    rsi,[rip+0x6a4c]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  406974:	lea    rdi,[rip+0x6b45]        # 40d4c0 <flatcc_builder_padding_base@@Base+0x300>
  40697b:	call   403070 <__assert_fail@plt>
  406980:	mov    rax,QWORD PTR [rbp-0x18]
  406984:	movzx  eax,WORD PTR [rax+0xea]
  40698b:	movzx  edx,ax
  40698e:	mov    rax,QWORD PTR [rbp-0x18]
  406992:	mov    eax,DWORD PTR [rax+0x20]
  406995:	mov    edi,eax
  406997:	mov    rax,QWORD PTR [rbp-0x18]
  40699b:	mov    rsi,QWORD PTR [rax+0x18]
  40699f:	mov    rax,QWORD PTR [rbp-0x18]
  4069a3:	mov    ecx,edx
  4069a5:	mov    rdx,rdi
  4069a8:	mov    rdi,rax
  4069ab:	call   40647c <flatcc_builder_create_struct@@Base>
  4069b0:	mov    DWORD PTR [rbp-0x4],eax
  4069b3:	cmp    DWORD PTR [rbp-0x4],0x0
  4069b7:	jne    4069c0 <flatcc_builder_end_struct@@Base+0x7d>
  4069b9:	mov    eax,0x0
  4069be:	jmp    4069cf <flatcc_builder_end_struct@@Base+0x8c>
  4069c0:	mov    rax,QWORD PTR [rbp-0x18]
  4069c4:	mov    rdi,rax
  4069c7:	call   405955 <flatcc_builder_get_user_frame_ptr@@Base+0x1fa>
  4069cc:	mov    eax,DWORD PTR [rbp-0x4]
  4069cf:	leave  
  4069d0:	ret    
  4069d1:	push   rbp
  4069d2:	mov    rbp,rsp
  4069d5:	sub    rsp,0x20
  4069d9:	mov    QWORD PTR [rbp-0x18],rdi
  4069dd:	mov    DWORD PTR [rbp-0x1c],esi
  4069e0:	mov    DWORD PTR [rbp-0x20],edx
  4069e3:	mov    rax,QWORD PTR [rbp-0x18]
  4069e7:	mov    rax,QWORD PTR [rax+0x30]
  4069eb:	mov    eax,DWORD PTR [rax+0x14]
  4069ee:	mov    DWORD PTR [rbp-0x8],eax
  4069f1:	mov    edx,DWORD PTR [rbp-0x8]
  4069f4:	mov    eax,DWORD PTR [rbp-0x1c]
  4069f7:	add    eax,edx
  4069f9:	mov    DWORD PTR [rbp-0x4],eax
  4069fc:	mov    eax,DWORD PTR [rbp-0x8]
  4069ff:	cmp    eax,DWORD PTR [rbp-0x4]
  406a02:	ja     406a0c <flatcc_builder_end_struct@@Base+0xc9>
  406a04:	mov    eax,DWORD PTR [rbp-0x4]
  406a07:	cmp    eax,DWORD PTR [rbp-0x20]
  406a0a:	jbe    406a42 <flatcc_builder_end_struct@@Base+0xff>
  406a0c:	mov    eax,DWORD PTR [rbp-0x8]
  406a0f:	cmp    eax,DWORD PTR [rbp-0x4]
  406a12:	ja     406a1c <flatcc_builder_end_struct@@Base+0xd9>
  406a14:	mov    eax,DWORD PTR [rbp-0x4]
  406a17:	cmp    eax,DWORD PTR [rbp-0x20]
  406a1a:	jbe    406a3b <flatcc_builder_end_struct@@Base+0xf8>
  406a1c:	lea    rcx,[rip+0x6f3d]        # 40d960 <flatcc_builder_padding_base@@Base+0x7a0>
  406a23:	mov    edx,0x37c
  406a28:	lea    rsi,[rip+0x6991]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  406a2f:	lea    rdi,[rip+0x6ab6]        # 40d4ec <flatcc_builder_padding_base@@Base+0x32c>
  406a36:	call   403070 <__assert_fail@plt>
  406a3b:	mov    eax,0xffffffff
  406a40:	jmp    406a55 <flatcc_builder_end_struct@@Base+0x112>
  406a42:	mov    rax,QWORD PTR [rbp-0x18]
  406a46:	mov    rax,QWORD PTR [rax+0x30]
  406a4a:	mov    edx,DWORD PTR [rbp-0x4]
  406a4d:	mov    DWORD PTR [rax+0x14],edx
  406a50:	mov    eax,0x0
  406a55:	leave  
  406a56:	ret    

0000000000406a57 <flatcc_builder_extend_vector@@Base>:
  406a57:	push   rbp
  406a58:	mov    rbp,rsp
  406a5b:	sub    rsp,0x10
  406a5f:	mov    QWORD PTR [rbp-0x8],rdi
  406a63:	mov    QWORD PTR [rbp-0x10],rsi
  406a67:	mov    rax,QWORD PTR [rbp-0x8]
  406a6b:	mov    rax,QWORD PTR [rax+0x30]
  406a6f:	mov    edx,DWORD PTR [rax+0x18]
  406a72:	mov    rax,QWORD PTR [rbp-0x10]
  406a76:	mov    ecx,eax
  406a78:	mov    rax,QWORD PTR [rbp-0x8]
  406a7c:	mov    esi,ecx
  406a7e:	mov    rdi,rax
  406a81:	call   4069d1 <flatcc_builder_end_struct@@Base+0x8e>
  406a86:	test   eax,eax
  406a88:	je     406a91 <flatcc_builder_extend_vector@@Base+0x3a>
  406a8a:	mov    eax,0x0
  406a8f:	jmp    406ab1 <flatcc_builder_extend_vector@@Base+0x5a>
  406a91:	mov    rax,QWORD PTR [rbp-0x8]
  406a95:	mov    rax,QWORD PTR [rax+0x30]
  406a99:	mov    eax,DWORD PTR [rax+0x10]
  406a9c:	mov    rdx,QWORD PTR [rbp-0x10]
  406aa0:	imul   edx,eax
  406aa3:	mov    rax,QWORD PTR [rbp-0x8]
  406aa7:	mov    esi,edx
  406aa9:	mov    rdi,rax
  406aac:	call   404a7a <flatcc_builder_default_alloc@@Base+0x260>
  406ab1:	leave  
  406ab2:	ret    

0000000000406ab3 <flatcc_builder_vector_push@@Base>:
  406ab3:	push   rbp
  406ab4:	mov    rbp,rsp
  406ab7:	sub    rsp,0x10
  406abb:	mov    QWORD PTR [rbp-0x8],rdi
  406abf:	mov    QWORD PTR [rbp-0x10],rsi
  406ac3:	mov    rax,QWORD PTR [rbp-0x8]
  406ac7:	mov    rax,QWORD PTR [rax+0x30]
  406acb:	movzx  eax,WORD PTR [rax+0xe]
  406acf:	cmp    ax,0x4
  406ad3:	je     406af4 <flatcc_builder_vector_push@@Base+0x41>
  406ad5:	lea    rcx,[rip+0x6ea4]        # 40d980 <flatcc_builder_padding_base@@Base+0x7c0>
  406adc:	mov    edx,0x38b
  406ae1:	lea    rsi,[rip+0x68d8]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  406ae8:	lea    rdi,[rip+0x6a19]        # 40d508 <flatcc_builder_padding_base@@Base+0x348>
  406aef:	call   403070 <__assert_fail@plt>
  406af4:	mov    rax,QWORD PTR [rbp-0x8]
  406af8:	mov    rax,QWORD PTR [rax+0x30]
  406afc:	mov    edx,DWORD PTR [rax+0x14]
  406aff:	mov    rax,QWORD PTR [rbp-0x8]
  406b03:	mov    rax,QWORD PTR [rax+0x30]
  406b07:	mov    eax,DWORD PTR [rax+0x18]
  406b0a:	cmp    edx,eax
  406b0c:	jbe    406b4e <flatcc_builder_vector_push@@Base+0x9b>
  406b0e:	mov    rax,QWORD PTR [rbp-0x8]
  406b12:	mov    rax,QWORD PTR [rax+0x30]
  406b16:	mov    edx,DWORD PTR [rax+0x14]
  406b19:	mov    rax,QWORD PTR [rbp-0x8]
  406b1d:	mov    rax,QWORD PTR [rax+0x30]
  406b21:	mov    eax,DWORD PTR [rax+0x18]
  406b24:	cmp    edx,eax
  406b26:	jbe    406b47 <flatcc_builder_vector_push@@Base+0x94>
  406b28:	lea    rcx,[rip+0x6e51]        # 40d980 <flatcc_builder_padding_base@@Base+0x7c0>
  406b2f:	mov    edx,0x38c
  406b34:	lea    rsi,[rip+0x6885]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  406b3b:	lea    rdi,[rip+0x69f6]        # 40d538 <flatcc_builder_padding_base@@Base+0x378>
  406b42:	call   403070 <__assert_fail@plt>
  406b47:	mov    eax,0x0
  406b4c:	jmp    406b85 <flatcc_builder_vector_push@@Base+0xd2>
  406b4e:	mov    rax,QWORD PTR [rbp-0x8]
  406b52:	mov    rax,QWORD PTR [rax+0x30]
  406b56:	mov    rdx,QWORD PTR [rbp-0x8]
  406b5a:	mov    rdx,QWORD PTR [rdx+0x30]
  406b5e:	mov    edx,DWORD PTR [rdx+0x14]
  406b61:	add    edx,0x1
  406b64:	mov    DWORD PTR [rax+0x14],edx
  406b67:	mov    rax,QWORD PTR [rbp-0x8]
  406b6b:	mov    rax,QWORD PTR [rax+0x30]
  406b6f:	mov    edx,DWORD PTR [rax+0x10]
  406b72:	mov    rcx,QWORD PTR [rbp-0x10]
  406b76:	mov    rax,QWORD PTR [rbp-0x8]
  406b7a:	mov    rsi,rcx
  406b7d:	mov    rdi,rax
  406b80:	call   404b43 <flatcc_builder_default_alloc@@Base+0x329>
  406b85:	leave  
  406b86:	ret    

0000000000406b87 <flatcc_builder_append_vector@@Base>:
  406b87:	push   rbp
  406b88:	mov    rbp,rsp
  406b8b:	sub    rsp,0x20
  406b8f:	mov    QWORD PTR [rbp-0x8],rdi
  406b93:	mov    QWORD PTR [rbp-0x10],rsi
  406b97:	mov    QWORD PTR [rbp-0x18],rdx
  406b9b:	mov    rax,QWORD PTR [rbp-0x8]
  406b9f:	mov    rax,QWORD PTR [rax+0x30]
  406ba3:	movzx  eax,WORD PTR [rax+0xe]
  406ba7:	cmp    ax,0x4
  406bab:	je     406bcc <flatcc_builder_append_vector@@Base+0x45>
  406bad:	lea    rcx,[rip+0x6dec]        # 40d9a0 <flatcc_builder_padding_base@@Base+0x7e0>
  406bb4:	mov    edx,0x393
  406bb9:	lea    rsi,[rip+0x6800]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  406bc0:	lea    rdi,[rip+0x6941]        # 40d508 <flatcc_builder_padding_base@@Base+0x348>
  406bc7:	call   403070 <__assert_fail@plt>
  406bcc:	mov    rax,QWORD PTR [rbp-0x8]
  406bd0:	mov    rax,QWORD PTR [rax+0x30]
  406bd4:	mov    edx,DWORD PTR [rax+0x18]
  406bd7:	mov    rax,QWORD PTR [rbp-0x18]
  406bdb:	mov    ecx,eax
  406bdd:	mov    rax,QWORD PTR [rbp-0x8]
  406be1:	mov    esi,ecx
  406be3:	mov    rdi,rax
  406be6:	call   4069d1 <flatcc_builder_end_struct@@Base+0x8e>
  406beb:	test   eax,eax
  406bed:	je     406bf6 <flatcc_builder_append_vector@@Base+0x6f>
  406bef:	mov    eax,0x0
  406bf4:	jmp    406c1b <flatcc_builder_append_vector@@Base+0x94>
  406bf6:	mov    rax,QWORD PTR [rbp-0x8]
  406bfa:	mov    rax,QWORD PTR [rax+0x30]
  406bfe:	mov    eax,DWORD PTR [rax+0x10]
  406c01:	mov    rdx,QWORD PTR [rbp-0x18]
  406c05:	imul   edx,eax
  406c08:	mov    rcx,QWORD PTR [rbp-0x10]
  406c0c:	mov    rax,QWORD PTR [rbp-0x8]
  406c10:	mov    rsi,rcx
  406c13:	mov    rdi,rax
  406c16:	call   404b43 <flatcc_builder_default_alloc@@Base+0x329>
  406c1b:	leave  
  406c1c:	ret    

0000000000406c1d <flatcc_builder_extend_offset_vector@@Base>:
  406c1d:	push   rbp
  406c1e:	mov    rbp,rsp
  406c21:	sub    rsp,0x10
  406c25:	mov    QWORD PTR [rbp-0x8],rdi
  406c29:	mov    QWORD PTR [rbp-0x10],rsi
  406c2d:	mov    rax,QWORD PTR [rbp-0x10]
  406c31:	mov    ecx,eax
  406c33:	mov    rax,QWORD PTR [rbp-0x8]
  406c37:	mov    edx,0x3fffffff
  406c3c:	mov    esi,ecx
  406c3e:	mov    rdi,rax
  406c41:	call   4069d1 <flatcc_builder_end_struct@@Base+0x8e>
  406c46:	test   eax,eax
  406c48:	je     406c51 <flatcc_builder_extend_offset_vector@@Base+0x34>
  406c4a:	mov    eax,0x0
  406c4f:	jmp    406c6a <flatcc_builder_extend_offset_vector@@Base+0x4d>
  406c51:	mov    rax,QWORD PTR [rbp-0x10]
  406c55:	lea    edx,[rax*4+0x0]
  406c5c:	mov    rax,QWORD PTR [rbp-0x8]
  406c60:	mov    esi,edx
  406c62:	mov    rdi,rax
  406c65:	call   404a7a <flatcc_builder_default_alloc@@Base+0x260>
  406c6a:	leave  
  406c6b:	ret    

0000000000406c6c <flatcc_builder_offset_vector_push@@Base>:
  406c6c:	push   rbp
  406c6d:	mov    rbp,rsp
  406c70:	sub    rsp,0x20
  406c74:	mov    QWORD PTR [rbp-0x18],rdi
  406c78:	mov    DWORD PTR [rbp-0x1c],esi
  406c7b:	mov    rax,QWORD PTR [rbp-0x18]
  406c7f:	mov    rax,QWORD PTR [rax+0x30]
  406c83:	movzx  eax,WORD PTR [rax+0xe]
  406c87:	cmp    ax,0x5
  406c8b:	je     406cac <flatcc_builder_offset_vector_push@@Base+0x40>
  406c8d:	lea    rcx,[rip+0x6d2c]        # 40d9c0 <flatcc_builder_padding_base@@Base+0x800>
  406c94:	mov    edx,0x3a6
  406c99:	lea    rsi,[rip+0x6720]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  406ca0:	lea    rdi,[rip+0x68d1]        # 40d578 <flatcc_builder_padding_base@@Base+0x3b8>
  406ca7:	call   403070 <__assert_fail@plt>
  406cac:	mov    rax,QWORD PTR [rbp-0x18]
  406cb0:	mov    rax,QWORD PTR [rax+0x30]
  406cb4:	mov    eax,DWORD PTR [rax+0x14]
  406cb7:	cmp    eax,0x3fffffff
  406cbc:	jne    406cc5 <flatcc_builder_offset_vector_push@@Base+0x59>
  406cbe:	mov    eax,0x0
  406cc3:	jmp    406d0e <flatcc_builder_offset_vector_push@@Base+0xa2>
  406cc5:	mov    rax,QWORD PTR [rbp-0x18]
  406cc9:	mov    rax,QWORD PTR [rax+0x30]
  406ccd:	mov    rdx,QWORD PTR [rbp-0x18]
  406cd1:	mov    rdx,QWORD PTR [rdx+0x30]
  406cd5:	mov    edx,DWORD PTR [rdx+0x14]
  406cd8:	add    edx,0x1
  406cdb:	mov    DWORD PTR [rax+0x14],edx
  406cde:	mov    rax,QWORD PTR [rbp-0x18]
  406ce2:	mov    esi,0x4
  406ce7:	mov    rdi,rax
  406cea:	call   404a7a <flatcc_builder_default_alloc@@Base+0x260>
  406cef:	mov    QWORD PTR [rbp-0x8],rax
  406cf3:	cmp    QWORD PTR [rbp-0x8],0x0
  406cf8:	jne    406d01 <flatcc_builder_offset_vector_push@@Base+0x95>
  406cfa:	mov    eax,0x0
  406cff:	jmp    406d0e <flatcc_builder_offset_vector_push@@Base+0xa2>
  406d01:	mov    rax,QWORD PTR [rbp-0x8]
  406d05:	mov    edx,DWORD PTR [rbp-0x1c]
  406d08:	mov    DWORD PTR [rax],edx
  406d0a:	mov    rax,QWORD PTR [rbp-0x8]
  406d0e:	leave  
  406d0f:	ret    

0000000000406d10 <flatcc_builder_append_offset_vector@@Base>:
  406d10:	push   rbp
  406d11:	mov    rbp,rsp
  406d14:	sub    rsp,0x20
  406d18:	mov    QWORD PTR [rbp-0x8],rdi
  406d1c:	mov    QWORD PTR [rbp-0x10],rsi
  406d20:	mov    QWORD PTR [rbp-0x18],rdx
  406d24:	mov    rax,QWORD PTR [rbp-0x8]
  406d28:	mov    rax,QWORD PTR [rax+0x30]
  406d2c:	movzx  eax,WORD PTR [rax+0xe]
  406d30:	cmp    ax,0x5
  406d34:	je     406d55 <flatcc_builder_append_offset_vector@@Base+0x45>
  406d36:	lea    rcx,[rip+0x6cc3]        # 40da00 <flatcc_builder_padding_base@@Base+0x840>
  406d3d:	mov    edx,0x3b4
  406d42:	lea    rsi,[rip+0x6677]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  406d49:	lea    rdi,[rip+0x6828]        # 40d578 <flatcc_builder_padding_base@@Base+0x3b8>
  406d50:	call   403070 <__assert_fail@plt>
  406d55:	mov    rax,QWORD PTR [rbp-0x18]
  406d59:	mov    ecx,eax
  406d5b:	mov    rax,QWORD PTR [rbp-0x8]
  406d5f:	mov    edx,0x3fffffff
  406d64:	mov    esi,ecx
  406d66:	mov    rdi,rax
  406d69:	call   4069d1 <flatcc_builder_end_struct@@Base+0x8e>
  406d6e:	test   eax,eax
  406d70:	je     406d79 <flatcc_builder_append_offset_vector@@Base+0x69>
  406d72:	mov    eax,0x0
  406d77:	jmp    406d97 <flatcc_builder_append_offset_vector@@Base+0x87>
  406d79:	mov    rax,QWORD PTR [rbp-0x18]
  406d7d:	lea    edx,[rax*4+0x0]
  406d84:	mov    rcx,QWORD PTR [rbp-0x10]
  406d88:	mov    rax,QWORD PTR [rbp-0x8]
  406d8c:	mov    rsi,rcx
  406d8f:	mov    rdi,rax
  406d92:	call   404b43 <flatcc_builder_default_alloc@@Base+0x329>
  406d97:	leave  
  406d98:	ret    

0000000000406d99 <flatcc_builder_extend_string@@Base>:
  406d99:	push   rbp
  406d9a:	mov    rbp,rsp
  406d9d:	sub    rsp,0x10
  406da1:	mov    QWORD PTR [rbp-0x8],rdi
  406da5:	mov    QWORD PTR [rbp-0x10],rsi
  406da9:	mov    rax,QWORD PTR [rbp-0x8]
  406dad:	mov    rax,QWORD PTR [rax+0x30]
  406db1:	movzx  eax,WORD PTR [rax+0xe]
  406db5:	cmp    ax,0x6
  406db9:	je     406dda <flatcc_builder_extend_string@@Base+0x41>
  406dbb:	lea    rcx,[rip+0x6c6e]        # 40da30 <flatcc_builder_padding_base@@Base+0x870>
  406dc2:	mov    edx,0x3bd
  406dc7:	lea    rsi,[rip+0x65f2]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  406dce:	lea    rdi,[rip+0x67db]        # 40d5b0 <flatcc_builder_padding_base@@Base+0x3f0>
  406dd5:	call   403070 <__assert_fail@plt>
  406dda:	mov    rax,QWORD PTR [rbp-0x10]
  406dde:	mov    ecx,eax
  406de0:	mov    rax,QWORD PTR [rbp-0x8]
  406de4:	mov    edx,0xffffffff
  406de9:	mov    esi,ecx
  406deb:	mov    rdi,rax
  406dee:	call   4069d1 <flatcc_builder_end_struct@@Base+0x8e>
  406df3:	test   eax,eax
  406df5:	je     406dfe <flatcc_builder_extend_string@@Base+0x65>
  406df7:	mov    eax,0x0
  406dfc:	jmp    406e12 <flatcc_builder_extend_string@@Base+0x79>
  406dfe:	mov    rax,QWORD PTR [rbp-0x10]
  406e02:	mov    edx,eax
  406e04:	mov    rax,QWORD PTR [rbp-0x8]
  406e08:	mov    esi,edx
  406e0a:	mov    rdi,rax
  406e0d:	call   404a7a <flatcc_builder_default_alloc@@Base+0x260>
  406e12:	leave  
  406e13:	ret    

0000000000406e14 <flatcc_builder_append_string@@Base>:
  406e14:	push   rbp
  406e15:	mov    rbp,rsp
  406e18:	sub    rsp,0x20
  406e1c:	mov    QWORD PTR [rbp-0x8],rdi
  406e20:	mov    QWORD PTR [rbp-0x10],rsi
  406e24:	mov    QWORD PTR [rbp-0x18],rdx
  406e28:	mov    rax,QWORD PTR [rbp-0x8]
  406e2c:	mov    rax,QWORD PTR [rax+0x30]
  406e30:	movzx  eax,WORD PTR [rax+0xe]
  406e34:	cmp    ax,0x6
  406e38:	je     406e59 <flatcc_builder_append_string@@Base+0x45>
  406e3a:	lea    rcx,[rip+0x6c0f]        # 40da50 <flatcc_builder_padding_base@@Base+0x890>
  406e41:	mov    edx,0x3c6
  406e46:	lea    rsi,[rip+0x6573]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  406e4d:	lea    rdi,[rip+0x675c]        # 40d5b0 <flatcc_builder_padding_base@@Base+0x3f0>
  406e54:	call   403070 <__assert_fail@plt>
  406e59:	mov    rax,QWORD PTR [rbp-0x18]
  406e5d:	mov    ecx,eax
  406e5f:	mov    rax,QWORD PTR [rbp-0x8]
  406e63:	mov    edx,0xffffffff
  406e68:	mov    esi,ecx
  406e6a:	mov    rdi,rax
  406e6d:	call   4069d1 <flatcc_builder_end_struct@@Base+0x8e>
  406e72:	test   eax,eax
  406e74:	je     406e7d <flatcc_builder_append_string@@Base+0x69>
  406e76:	mov    eax,0x0
  406e7b:	jmp    406e96 <flatcc_builder_append_string@@Base+0x82>
  406e7d:	mov    rax,QWORD PTR [rbp-0x18]
  406e81:	mov    edx,eax
  406e83:	mov    rcx,QWORD PTR [rbp-0x10]
  406e87:	mov    rax,QWORD PTR [rbp-0x8]
  406e8b:	mov    rsi,rcx
  406e8e:	mov    rdi,rax
  406e91:	call   404b43 <flatcc_builder_default_alloc@@Base+0x329>
  406e96:	leave  
  406e97:	ret    

0000000000406e98 <flatcc_builder_append_string_str@@Base>:
  406e98:	push   rbp
  406e99:	mov    rbp,rsp
  406e9c:	sub    rsp,0x10
  406ea0:	mov    QWORD PTR [rbp-0x8],rdi
  406ea4:	mov    QWORD PTR [rbp-0x10],rsi
  406ea8:	mov    rax,QWORD PTR [rbp-0x10]
  406eac:	mov    rdi,rax
  406eaf:	call   403050 <strlen@plt>
  406eb4:	mov    rdx,rax
  406eb7:	mov    rcx,QWORD PTR [rbp-0x10]
  406ebb:	mov    rax,QWORD PTR [rbp-0x8]
  406ebf:	mov    rsi,rcx
  406ec2:	mov    rdi,rax
  406ec5:	call   406e14 <flatcc_builder_append_string@@Base>
  406eca:	leave  
  406ecb:	ret    

0000000000406ecc <flatcc_builder_append_string_strn@@Base>:
  406ecc:	push   rbp
  406ecd:	mov    rbp,rsp
  406ed0:	sub    rsp,0x20
  406ed4:	mov    QWORD PTR [rbp-0x8],rdi
  406ed8:	mov    QWORD PTR [rbp-0x10],rsi
  406edc:	mov    QWORD PTR [rbp-0x18],rdx
  406ee0:	mov    rdx,QWORD PTR [rbp-0x18]
  406ee4:	mov    rax,QWORD PTR [rbp-0x10]
  406ee8:	mov    rsi,rdx
  406eeb:	mov    rdi,rax
  406eee:	call   4047d4 <main@@Base+0x1ef>
  406ef3:	mov    rdx,rax
  406ef6:	mov    rcx,QWORD PTR [rbp-0x10]
  406efa:	mov    rax,QWORD PTR [rbp-0x8]
  406efe:	mov    rsi,rcx
  406f01:	mov    rdi,rax
  406f04:	call   406e14 <flatcc_builder_append_string@@Base>
  406f09:	leave  
  406f0a:	ret    

0000000000406f0b <flatcc_builder_truncate_vector@@Base>:
  406f0b:	push   rbp
  406f0c:	mov    rbp,rsp
  406f0f:	sub    rsp,0x10
  406f13:	mov    QWORD PTR [rbp-0x8],rdi
  406f17:	mov    QWORD PTR [rbp-0x10],rsi
  406f1b:	mov    rax,QWORD PTR [rbp-0x8]
  406f1f:	mov    rax,QWORD PTR [rax+0x30]
  406f23:	movzx  eax,WORD PTR [rax+0xe]
  406f27:	cmp    ax,0x4
  406f2b:	je     406f4c <flatcc_builder_truncate_vector@@Base+0x41>
  406f2d:	lea    rcx,[rip+0x6b3c]        # 40da70 <flatcc_builder_padding_base@@Base+0x8b0>
  406f34:	mov    edx,0x3d9
  406f39:	lea    rsi,[rip+0x6480]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  406f40:	lea    rdi,[rip+0x65c1]        # 40d508 <flatcc_builder_padding_base@@Base+0x348>
  406f47:	call   403070 <__assert_fail@plt>
  406f4c:	mov    rax,QWORD PTR [rbp-0x8]
  406f50:	mov    rax,QWORD PTR [rax+0x30]
  406f54:	mov    eax,DWORD PTR [rax+0x14]
  406f57:	mov    eax,eax
  406f59:	cmp    rax,QWORD PTR [rbp-0x10]
  406f5d:	jae    406f98 <flatcc_builder_truncate_vector@@Base+0x8d>
  406f5f:	mov    rax,QWORD PTR [rbp-0x8]
  406f63:	mov    rax,QWORD PTR [rax+0x30]
  406f67:	mov    eax,DWORD PTR [rax+0x14]
  406f6a:	mov    eax,eax
  406f6c:	cmp    rax,QWORD PTR [rbp-0x10]
  406f70:	jae    406f91 <flatcc_builder_truncate_vector@@Base+0x86>
  406f72:	lea    rcx,[rip+0x6af7]        # 40da70 <flatcc_builder_padding_base@@Base+0x8b0>
  406f79:	mov    edx,0x3da
  406f7e:	lea    rsi,[rip+0x643b]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  406f85:	lea    rdi,[rip+0x6654]        # 40d5e0 <flatcc_builder_padding_base@@Base+0x420>
  406f8c:	call   403070 <__assert_fail@plt>
  406f91:	mov    eax,0xffffffff
  406f96:	jmp    406fd9 <flatcc_builder_truncate_vector@@Base+0xce>
  406f98:	mov    rax,QWORD PTR [rbp-0x8]
  406f9c:	mov    rax,QWORD PTR [rax+0x30]
  406fa0:	mov    rdx,QWORD PTR [rbp-0x8]
  406fa4:	mov    rdx,QWORD PTR [rdx+0x30]
  406fa8:	mov    edx,DWORD PTR [rdx+0x14]
  406fab:	mov    rcx,QWORD PTR [rbp-0x10]
  406faf:	sub    edx,ecx
  406fb1:	mov    DWORD PTR [rax+0x14],edx
  406fb4:	mov    rax,QWORD PTR [rbp-0x8]
  406fb8:	mov    rax,QWORD PTR [rax+0x30]
  406fbc:	mov    eax,DWORD PTR [rax+0x10]
  406fbf:	mov    rdx,QWORD PTR [rbp-0x10]
  406fc3:	imul   edx,eax
  406fc6:	mov    rax,QWORD PTR [rbp-0x8]
  406fca:	mov    esi,edx
  406fcc:	mov    rdi,rax
  406fcf:	call   404af7 <flatcc_builder_default_alloc@@Base+0x2dd>
  406fd4:	mov    eax,0x0
  406fd9:	leave  
  406fda:	ret    

0000000000406fdb <flatcc_builder_truncate_offset_vector@@Base>:
  406fdb:	push   rbp
  406fdc:	mov    rbp,rsp
  406fdf:	sub    rsp,0x10
  406fe3:	mov    QWORD PTR [rbp-0x8],rdi
  406fe7:	mov    QWORD PTR [rbp-0x10],rsi
  406feb:	mov    rax,QWORD PTR [rbp-0x8]
  406fef:	mov    rax,QWORD PTR [rax+0x30]
  406ff3:	movzx  eax,WORD PTR [rax+0xe]
  406ff7:	cmp    ax,0x5
  406ffb:	je     40701c <flatcc_builder_truncate_offset_vector@@Base+0x41>
  406ffd:	lea    rcx,[rip+0x6a9c]        # 40daa0 <flatcc_builder_padding_base@@Base+0x8e0>
  407004:	mov    edx,0x3e2
  407009:	lea    rsi,[rip+0x63b0]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  407010:	lea    rdi,[rip+0x6561]        # 40d578 <flatcc_builder_padding_base@@Base+0x3b8>
  407017:	call   403070 <__assert_fail@plt>
  40701c:	mov    rax,QWORD PTR [rbp-0x8]
  407020:	mov    rax,QWORD PTR [rax+0x30]
  407024:	mov    eax,DWORD PTR [rax+0x14]
  407027:	mov    rdx,QWORD PTR [rbp-0x10]
  40702b:	cmp    eax,edx
  40702d:	jae    407068 <flatcc_builder_truncate_offset_vector@@Base+0x8d>
  40702f:	mov    rax,QWORD PTR [rbp-0x8]
  407033:	mov    rax,QWORD PTR [rax+0x30]
  407037:	mov    eax,DWORD PTR [rax+0x14]
  40703a:	mov    rdx,QWORD PTR [rbp-0x10]
  40703e:	cmp    eax,edx
  407040:	jae    407061 <flatcc_builder_truncate_offset_vector@@Base+0x86>
  407042:	lea    rcx,[rip+0x6a57]        # 40daa0 <flatcc_builder_padding_base@@Base+0x8e0>
  407049:	mov    edx,0x3e3
  40704e:	lea    rsi,[rip+0x636b]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  407055:	lea    rdi,[rip+0x65ac]        # 40d608 <flatcc_builder_padding_base@@Base+0x448>
  40705c:	call   403070 <__assert_fail@plt>
  407061:	mov    eax,0xffffffff
  407066:	jmp    4070a9 <flatcc_builder_truncate_offset_vector@@Base+0xce>
  407068:	mov    rax,QWORD PTR [rbp-0x8]
  40706c:	mov    rax,QWORD PTR [rax+0x30]
  407070:	mov    rdx,QWORD PTR [rbp-0x8]
  407074:	mov    rdx,QWORD PTR [rdx+0x30]
  407078:	mov    edx,DWORD PTR [rdx+0x14]
  40707b:	mov    rcx,QWORD PTR [rbp-0x10]
  40707f:	sub    edx,ecx
  407081:	mov    DWORD PTR [rax+0x14],edx
  407084:	mov    rax,QWORD PTR [rbp-0x8]
  407088:	mov    rax,QWORD PTR [rax+0x30]
  40708c:	mov    eax,DWORD PTR [rax+0x10]
  40708f:	mov    rdx,QWORD PTR [rbp-0x10]
  407093:	imul   edx,eax
  407096:	mov    rax,QWORD PTR [rbp-0x8]
  40709a:	mov    esi,edx
  40709c:	mov    rdi,rax
  40709f:	call   404af7 <flatcc_builder_default_alloc@@Base+0x2dd>
  4070a4:	mov    eax,0x0
  4070a9:	leave  
  4070aa:	ret    

00000000004070ab <flatcc_builder_truncate_string@@Base>:
  4070ab:	push   rbp
  4070ac:	mov    rbp,rsp
  4070af:	sub    rsp,0x10
  4070b3:	mov    QWORD PTR [rbp-0x8],rdi
  4070b7:	mov    QWORD PTR [rbp-0x10],rsi
  4070bb:	mov    rax,QWORD PTR [rbp-0x8]
  4070bf:	mov    rax,QWORD PTR [rax+0x30]
  4070c3:	movzx  eax,WORD PTR [rax+0xe]
  4070c7:	cmp    ax,0x6
  4070cb:	je     4070ec <flatcc_builder_truncate_string@@Base+0x41>
  4070cd:	lea    rcx,[rip+0x69fc]        # 40dad0 <flatcc_builder_padding_base@@Base+0x910>
  4070d4:	mov    edx,0x3eb
  4070d9:	lea    rsi,[rip+0x62e0]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  4070e0:	lea    rdi,[rip+0x64c9]        # 40d5b0 <flatcc_builder_padding_base@@Base+0x3f0>
  4070e7:	call   403070 <__assert_fail@plt>
  4070ec:	mov    rax,QWORD PTR [rbp-0x8]
  4070f0:	mov    rax,QWORD PTR [rax+0x30]
  4070f4:	mov    eax,DWORD PTR [rax+0x14]
  4070f7:	mov    eax,eax
  4070f9:	cmp    rax,QWORD PTR [rbp-0x10]
  4070fd:	jae    407138 <flatcc_builder_truncate_string@@Base+0x8d>
  4070ff:	mov    rax,QWORD PTR [rbp-0x8]
  407103:	mov    rax,QWORD PTR [rax+0x30]
  407107:	mov    eax,DWORD PTR [rax+0x14]
  40710a:	mov    eax,eax
  40710c:	cmp    rax,QWORD PTR [rbp-0x10]
  407110:	jae    407131 <flatcc_builder_truncate_string@@Base+0x86>
  407112:	lea    rcx,[rip+0x69b7]        # 40dad0 <flatcc_builder_padding_base@@Base+0x910>
  407119:	mov    edx,0x3ec
  40711e:	lea    rsi,[rip+0x629b]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  407125:	lea    rdi,[rip+0x651c]        # 40d648 <flatcc_builder_padding_base@@Base+0x488>
  40712c:	call   403070 <__assert_fail@plt>
  407131:	mov    eax,0xffffffff
  407136:	jmp    40716d <flatcc_builder_truncate_string@@Base+0xc2>
  407138:	mov    rax,QWORD PTR [rbp-0x8]
  40713c:	mov    rax,QWORD PTR [rax+0x30]
  407140:	mov    rdx,QWORD PTR [rbp-0x8]
  407144:	mov    rdx,QWORD PTR [rdx+0x30]
  407148:	mov    edx,DWORD PTR [rdx+0x14]
  40714b:	mov    rcx,QWORD PTR [rbp-0x10]
  40714f:	sub    edx,ecx
  407151:	mov    DWORD PTR [rax+0x14],edx
  407154:	mov    rax,QWORD PTR [rbp-0x10]
  407158:	mov    edx,eax
  40715a:	mov    rax,QWORD PTR [rbp-0x8]
  40715e:	mov    esi,edx
  407160:	mov    rdi,rax
  407163:	call   404af7 <flatcc_builder_default_alloc@@Base+0x2dd>
  407168:	mov    eax,0x0
  40716d:	leave  
  40716e:	ret    

000000000040716f <flatcc_builder_start_vector@@Base>:
  40716f:	push   rbp
  407170:	mov    rbp,rsp
  407173:	sub    rsp,0x20
  407177:	mov    QWORD PTR [rbp-0x8],rdi
  40717b:	mov    QWORD PTR [rbp-0x10],rsi
  40717f:	mov    eax,edx
  407181:	mov    QWORD PTR [rbp-0x20],rcx
  407185:	mov    WORD PTR [rbp-0x14],ax
  407189:	lea    rax,[rbp-0x14]
  40718d:	mov    esi,0x4
  407192:	mov    rdi,rax
  407195:	call   405495 <flatcc_builder_clear@@Base+0xc7>
  40719a:	movzx  eax,WORD PTR [rbp-0x14]
  40719e:	movzx  edx,ax
  4071a1:	mov    rax,QWORD PTR [rbp-0x8]
  4071a5:	mov    esi,edx
  4071a7:	mov    rdi,rax
  4071aa:	call   40577d <flatcc_builder_get_user_frame_ptr@@Base+0x22>
  4071af:	test   eax,eax
  4071b1:	je     4071ba <flatcc_builder_start_vector@@Base+0x4b>
  4071b3:	mov    eax,0xffffffff
  4071b8:	jmp    40720b <flatcc_builder_start_vector@@Base+0x9c>
  4071ba:	mov    rax,QWORD PTR [rbp-0x8]
  4071be:	mov    rax,QWORD PTR [rax+0x30]
  4071c2:	mov    rdx,QWORD PTR [rbp-0x10]
  4071c6:	mov    DWORD PTR [rax+0x10],edx
  4071c9:	mov    rax,QWORD PTR [rbp-0x8]
  4071cd:	mov    rax,QWORD PTR [rax+0x30]
  4071d1:	mov    DWORD PTR [rax+0x14],0x0
  4071d8:	mov    rax,QWORD PTR [rbp-0x8]
  4071dc:	mov    rax,QWORD PTR [rax+0x30]
  4071e0:	mov    rdx,QWORD PTR [rbp-0x20]
  4071e4:	mov    DWORD PTR [rax+0x18],edx
  4071e7:	mov    rax,QWORD PTR [rbp-0x8]
  4071eb:	mov    rax,QWORD PTR [rax+0x30]
  4071ef:	mov    WORD PTR [rax+0xe],0x4
  4071f5:	mov    rax,QWORD PTR [rbp-0x8]
  4071f9:	mov    esi,0xfffffffc
  4071fe:	mov    rdi,rax
  407201:	call   404987 <flatcc_builder_default_alloc@@Base+0x16d>
  407206:	mov    eax,0x0
  40720b:	leave  
  40720c:	ret    

000000000040720d <flatcc_builder_start_offset_vector@@Base>:
  40720d:	push   rbp
  40720e:	mov    rbp,rsp
  407211:	sub    rsp,0x10
  407215:	mov    QWORD PTR [rbp-0x8],rdi
  407219:	mov    rax,QWORD PTR [rbp-0x8]
  40721d:	mov    esi,0x4
  407222:	mov    rdi,rax
  407225:	call   40577d <flatcc_builder_get_user_frame_ptr@@Base+0x22>
  40722a:	test   eax,eax
  40722c:	je     407235 <flatcc_builder_start_offset_vector@@Base+0x28>
  40722e:	mov    eax,0xffffffff
  407233:	jmp    407277 <flatcc_builder_start_offset_vector@@Base+0x6a>
  407235:	mov    rax,QWORD PTR [rbp-0x8]
  407239:	mov    rax,QWORD PTR [rax+0x30]
  40723d:	mov    DWORD PTR [rax+0x10],0x4
  407244:	mov    rax,QWORD PTR [rbp-0x8]
  407248:	mov    rax,QWORD PTR [rax+0x30]
  40724c:	mov    DWORD PTR [rax+0x14],0x0
  407253:	mov    rax,QWORD PTR [rbp-0x8]
  407257:	mov    rax,QWORD PTR [rax+0x30]
  40725b:	mov    WORD PTR [rax+0xe],0x5
  407261:	mov    rax,QWORD PTR [rbp-0x8]
  407265:	mov    esi,0xfffffffc
  40726a:	mov    rdi,rax
  40726d:	call   404987 <flatcc_builder_default_alloc@@Base+0x16d>
  407272:	mov    eax,0x0
  407277:	leave  
  407278:	ret    

0000000000407279 <flatcc_builder_create_offset_vector@@Base>:
  407279:	push   rbp
  40727a:	mov    rbp,rsp
  40727d:	sub    rsp,0x30
  407281:	mov    QWORD PTR [rbp-0x18],rdi
  407285:	mov    QWORD PTR [rbp-0x20],rsi
  407289:	mov    QWORD PTR [rbp-0x28],rdx
  40728d:	mov    rax,QWORD PTR [rbp-0x18]
  407291:	mov    rdi,rax
  407294:	call   40720d <flatcc_builder_start_offset_vector@@Base>
  407299:	test   eax,eax
  40729b:	je     4072a4 <flatcc_builder_create_offset_vector@@Base+0x2b>
  40729d:	mov    eax,0x0
  4072a2:	jmp    4072f4 <flatcc_builder_create_offset_vector@@Base+0x7b>
  4072a4:	mov    rdx,QWORD PTR [rbp-0x28]
  4072a8:	mov    rax,QWORD PTR [rbp-0x18]
  4072ac:	mov    rsi,rdx
  4072af:	mov    rdi,rax
  4072b2:	call   406c1d <flatcc_builder_extend_offset_vector@@Base>
  4072b7:	mov    QWORD PTR [rbp-0x8],rax
  4072bb:	cmp    QWORD PTR [rbp-0x8],0x0
  4072c0:	jne    4072c9 <flatcc_builder_create_offset_vector@@Base+0x50>
  4072c2:	mov    eax,0x0
  4072c7:	jmp    4072f4 <flatcc_builder_create_offset_vector@@Base+0x7b>
  4072c9:	mov    rax,QWORD PTR [rbp-0x28]
  4072cd:	lea    rdx,[rax*4+0x0]
  4072d5:	mov    rcx,QWORD PTR [rbp-0x20]
  4072d9:	mov    rax,QWORD PTR [rbp-0x8]
  4072dd:	mov    rsi,rcx
  4072e0:	mov    rdi,rax
  4072e3:	call   4030b0 <memcpy@plt>
  4072e8:	mov    rax,QWORD PTR [rbp-0x18]
  4072ec:	mov    rdi,rax
  4072ef:	call   4087ff <flatcc_builder_end_offset_vector@@Base>
  4072f4:	leave  
  4072f5:	ret    

00000000004072f6 <flatcc_builder_start_string@@Base>:
  4072f6:	push   rbp
  4072f7:	mov    rbp,rsp
  4072fa:	sub    rsp,0x10
  4072fe:	mov    QWORD PTR [rbp-0x8],rdi
  407302:	mov    rax,QWORD PTR [rbp-0x8]
  407306:	mov    esi,0x1
  40730b:	mov    rdi,rax
  40730e:	call   40577d <flatcc_builder_get_user_frame_ptr@@Base+0x22>
  407313:	test   eax,eax
  407315:	je     40731e <flatcc_builder_start_string@@Base+0x28>
  407317:	mov    eax,0xffffffff
  40731c:	jmp    407360 <flatcc_builder_start_string@@Base+0x6a>
  40731e:	mov    rax,QWORD PTR [rbp-0x8]
  407322:	mov    rax,QWORD PTR [rax+0x30]
  407326:	mov    DWORD PTR [rax+0x10],0x1
  40732d:	mov    rax,QWORD PTR [rbp-0x8]
  407331:	mov    rax,QWORD PTR [rax+0x30]
  407335:	mov    DWORD PTR [rax+0x14],0x0
  40733c:	mov    rax,QWORD PTR [rbp-0x8]
  407340:	mov    rax,QWORD PTR [rax+0x30]
  407344:	mov    WORD PTR [rax+0xe],0x6
  40734a:	mov    rax,QWORD PTR [rbp-0x8]
  40734e:	mov    esi,0xfffffffc
  407353:	mov    rdi,rax
  407356:	call   404987 <flatcc_builder_default_alloc@@Base+0x16d>
  40735b:	mov    eax,0x0
  407360:	leave  
  407361:	ret    

0000000000407362 <flatcc_builder_reserve_table@@Base>:
  407362:	push   rbp
  407363:	mov    rbp,rsp
  407366:	sub    rsp,0x10
  40736a:	mov    QWORD PTR [rbp-0x8],rdi
  40736e:	mov    DWORD PTR [rbp-0xc],esi
  407371:	cmp    DWORD PTR [rbp-0xc],0x0
  407375:	jns    407396 <flatcc_builder_reserve_table@@Base+0x34>
  407377:	lea    rcx,[rip+0x6772]        # 40daf0 <flatcc_builder_padding_base@@Base+0x930>
  40737e:	mov    edx,0x429
  407383:	lea    rsi,[rip+0x6036]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  40738a:	lea    rdi,[rip+0x62d9]        # 40d66a <flatcc_builder_padding_base@@Base+0x4aa>
  407391:	call   403070 <__assert_fail@plt>
  407396:	mov    edx,DWORD PTR [rbp-0xc]
  407399:	mov    rax,QWORD PTR [rbp-0x8]
  40739d:	mov    esi,edx
  40739f:	mov    rdi,rax
  4073a2:	call   404dd7 <flatcc_builder_default_alloc@@Base+0x5bd>
  4073a7:	leave  
  4073a8:	ret    

00000000004073a9 <flatcc_builder_start_table@@Base>:
  4073a9:	push   rbp
  4073aa:	mov    rbp,rsp
  4073ad:	sub    rsp,0x10
  4073b1:	mov    QWORD PTR [rbp-0x8],rdi
  4073b5:	mov    DWORD PTR [rbp-0xc],esi
  4073b8:	mov    rax,QWORD PTR [rbp-0x8]
  4073bc:	mov    esi,0x4
  4073c1:	mov    rdi,rax
  4073c4:	call   40577d <flatcc_builder_get_user_frame_ptr@@Base+0x22>
  4073c9:	test   eax,eax
  4073cb:	je     4073d7 <flatcc_builder_start_table@@Base+0x2e>
  4073cd:	mov    eax,0xffffffff
  4073d2:	jmp    4074a7 <flatcc_builder_start_table@@Base+0xfe>
  4073d7:	mov    rax,QWORD PTR [rbp-0x8]
  4073db:	mov    rax,QWORD PTR [rax+0x30]
  4073df:	mov    rdx,QWORD PTR [rbp-0x8]
  4073e3:	mov    rdx,QWORD PTR [rdx+0x8]
  4073e7:	mov    rcx,rdx
  4073ea:	mov    rdx,QWORD PTR [rbp-0x8]
  4073ee:	mov    rdx,QWORD PTR [rdx+0x58]
  4073f2:	sub    rcx,rdx
  4073f5:	mov    rdx,rcx
  4073f8:	mov    DWORD PTR [rax+0x10],edx
  4073fb:	mov    rax,QWORD PTR [rbp-0x8]
  4073ff:	mov    rax,QWORD PTR [rax+0x30]
  407403:	mov    rdx,QWORD PTR [rbp-0x8]
  407407:	mov    rdx,QWORD PTR [rdx]
  40740a:	mov    rcx,rdx
  40740d:	mov    rdx,QWORD PTR [rbp-0x8]
  407411:	mov    rdx,QWORD PTR [rdx+0x88]
  407418:	sub    rcx,rdx
  40741b:	mov    rdx,rcx
  40741e:	mov    DWORD PTR [rax+0x14],edx
  407421:	mov    rax,QWORD PTR [rbp-0x8]
  407425:	mov    rax,QWORD PTR [rax+0x30]
  407429:	mov    rdx,QWORD PTR [rbp-0x8]
  40742d:	mov    edx,DWORD PTR [rdx+0x14]
  407430:	mov    DWORD PTR [rax+0x18],edx
  407433:	mov    rax,QWORD PTR [rbp-0x8]
  407437:	mov    rax,QWORD PTR [rax+0x30]
  40743b:	mov    rdx,QWORD PTR [rbp-0x8]
  40743f:	movzx  edx,WORD PTR [rdx+0x10]
  407443:	mov    WORD PTR [rax+0x1c],dx
  407447:	mov    rax,QWORD PTR [rbp-0x8]
  40744b:	mov    DWORD PTR [rax+0x14],0x0
  407452:	mov    rax,QWORD PTR [rbp-0x8]
  407456:	mov    DWORD PTR [rax+0x14],0x2f693b52
  40745d:	mov    rax,QWORD PTR [rbp-0x8]
  407461:	mov    WORD PTR [rax+0x10],0x0
  407467:	mov    rax,QWORD PTR [rbp-0x8]
  40746b:	mov    rax,QWORD PTR [rax+0x30]
  40746f:	mov    WORD PTR [rax+0xe],0x3
  407475:	mov    edx,DWORD PTR [rbp-0xc]
  407478:	mov    rax,QWORD PTR [rbp-0x8]
  40747c:	mov    esi,edx
  40747e:	mov    rdi,rax
  407481:	call   404dd7 <flatcc_builder_default_alloc@@Base+0x5bd>
  407486:	test   eax,eax
  407488:	je     407491 <flatcc_builder_start_table@@Base+0xe8>
  40748a:	mov    eax,0xffffffff
  40748f:	jmp    4074a7 <flatcc_builder_start_table@@Base+0xfe>
  407491:	mov    rax,QWORD PTR [rbp-0x8]
  407495:	mov    esi,0xfffc
  40749a:	mov    rdi,rax
  40749d:	call   404987 <flatcc_builder_default_alloc@@Base+0x16d>
  4074a2:	mov    eax,0x0
  4074a7:	leave  
  4074a8:	ret    

00000000004074a9 <flatcc_builder_create_vtable@@Base>:
  4074a9:	push   rbp
  4074aa:	mov    rbp,rsp
  4074ad:	sub    rsp,0xd0
  4074b4:	mov    QWORD PTR [rbp-0xb8],rdi
  4074bb:	mov    QWORD PTR [rbp-0xc0],rsi
  4074c2:	mov    eax,edx
  4074c4:	mov    WORD PTR [rbp-0xc4],ax
  4074cb:	mov    rax,QWORD PTR fs:0x28
  4074d4:	mov    QWORD PTR [rbp-0x8],rax
  4074d8:	xor    eax,eax
  4074da:	mov    QWORD PTR [rbp-0xa0],0x0
  4074e5:	mov    DWORD PTR [rbp-0x98],0x0
  4074ef:	cmp    WORD PTR [rbp-0xc4],0x0
  4074f7:	je     407561 <flatcc_builder_create_vtable@@Base+0xb8>
  4074f9:	mov    rdx,QWORD PTR [rbp-0xa0]
  407500:	movzx  eax,WORD PTR [rbp-0xc4]
  407507:	add    rax,rdx
  40750a:	mov    QWORD PTR [rbp-0xa0],rax
  407511:	mov    eax,DWORD PTR [rbp-0x98]
  407517:	cdqe   
  407519:	shl    rax,0x4
  40751d:	add    rax,rbp
  407520:	lea    rdx,[rax-0x90]
  407527:	mov    rax,QWORD PTR [rbp-0xc0]
  40752e:	mov    QWORD PTR [rdx],rax
  407531:	mov    edx,DWORD PTR [rbp-0x98]
  407537:	movzx  eax,WORD PTR [rbp-0xc4]
  40753e:	movsxd rdx,edx
  407541:	shl    rdx,0x4
  407545:	add    rdx,rbp
  407548:	sub    rdx,0x88
  40754f:	mov    QWORD PTR [rdx],rax
  407552:	mov    eax,DWORD PTR [rbp-0x98]
  407558:	add    eax,0x1
  40755b:	mov    DWORD PTR [rbp-0x98],eax
  407561:	mov    rax,QWORD PTR [rbp-0xb8]
  407568:	mov    eax,DWORD PTR [rax+0x100]
  40756e:	test   eax,eax
  407570:	jne    4075b2 <flatcc_builder_create_vtable@@Base+0x109>
  407572:	mov    rax,QWORD PTR [rbp-0xb8]
  407579:	mov    eax,DWORD PTR [rax+0x124]
  40757f:	test   eax,eax
  407581:	jne    4075b2 <flatcc_builder_create_vtable@@Base+0x109>
  407583:	lea    rdx,[rbp-0xa0]
  40758a:	mov    rax,QWORD PTR [rbp-0xb8]
  407591:	mov    rsi,rdx
  407594:	mov    rdi,rax
  407597:	call   405b47 <flatcc_builder_get_user_frame_ptr@@Base+0x3ec>
  40759c:	mov    DWORD PTR [rbp-0xa4],eax
  4075a2:	cmp    DWORD PTR [rbp-0xa4],0x0
  4075a9:	jne    4075e8 <flatcc_builder_create_vtable@@Base+0x13f>
  4075ab:	mov    eax,0x0
  4075b0:	jmp    4075ee <flatcc_builder_create_vtable@@Base+0x145>
  4075b2:	lea    rdx,[rbp-0xa0]
  4075b9:	mov    rax,QWORD PTR [rbp-0xb8]
  4075c0:	mov    rsi,rdx
  4075c3:	mov    rdi,rax
  4075c6:	call   405a68 <flatcc_builder_get_user_frame_ptr@@Base+0x30d>
  4075cb:	mov    DWORD PTR [rbp-0xa4],eax
  4075d1:	cmp    DWORD PTR [rbp-0xa4],0x0
  4075d8:	jne    4075e1 <flatcc_builder_create_vtable@@Base+0x138>
  4075da:	mov    eax,0x0
  4075df:	jmp    4075ee <flatcc_builder_create_vtable@@Base+0x145>
  4075e1:	add    DWORD PTR [rbp-0xa4],0x1
  4075e8:	mov    eax,DWORD PTR [rbp-0xa4]
  4075ee:	mov    rcx,QWORD PTR [rbp-0x8]
  4075f2:	xor    rcx,QWORD PTR fs:0x28
  4075fb:	je     407602 <flatcc_builder_create_vtable@@Base+0x159>
  4075fd:	call   403060 <__stack_chk_fail@plt>
  407602:	leave  
  407603:	ret    

0000000000407604 <flatcc_builder_create_cached_vtable@@Base>:
  407604:	push   rbp
  407605:	mov    rbp,rsp
  407608:	sub    rsp,0x50
  40760c:	mov    QWORD PTR [rbp-0x38],rdi
  407610:	mov    QWORD PTR [rbp-0x40],rsi
  407614:	mov    eax,edx
  407616:	mov    DWORD PTR [rbp-0x48],ecx
  407619:	mov    WORD PTR [rbp-0x44],ax
  40761d:	mov    edx,DWORD PTR [rbp-0x48]
  407620:	mov    rax,QWORD PTR [rbp-0x38]
  407624:	mov    esi,edx
  407626:	mov    rdi,rax
  407629:	call   404fe4 <flatcc_builder_default_alloc@@Base+0x7ca>
  40762e:	mov    QWORD PTR [rbp-0x18],rax
  407632:	cmp    QWORD PTR [rbp-0x18],0x0
  407637:	jne    407643 <flatcc_builder_create_cached_vtable@@Base+0x3f>
  407639:	mov    eax,0x0
  40763e:	jmp    4078e4 <flatcc_builder_create_cached_vtable@@Base+0x2e0>
  407643:	mov    rax,QWORD PTR [rbp-0x18]
  407647:	mov    QWORD PTR [rbp-0x20],rax
  40764b:	mov    rax,QWORD PTR [rbp-0x20]
  40764f:	mov    eax,DWORD PTR [rax]
  407651:	mov    DWORD PTR [rbp-0x2c],eax
  407654:	mov    QWORD PTR [rbp-0x28],0x0
  40765c:	jmp    40773b <flatcc_builder_create_cached_vtable@@Base+0x137>
  407661:	mov    rax,QWORD PTR [rbp-0x38]
  407665:	mov    rdx,QWORD PTR [rax+0xb8]
  40766c:	mov    eax,DWORD PTR [rbp-0x2c]
  40766f:	add    rax,rdx
  407672:	mov    QWORD PTR [rbp-0x10],rax
  407676:	mov    rax,QWORD PTR [rbp-0x38]
  40767a:	mov    rdx,QWORD PTR [rax+0x78]
  40767e:	mov    rax,QWORD PTR [rbp-0x10]
  407682:	mov    eax,DWORD PTR [rax+0x8]
  407685:	mov    eax,eax
  407687:	add    rax,rdx
  40768a:	mov    QWORD PTR [rbp-0x8],rax
  40768e:	mov    rax,QWORD PTR [rbp-0x8]
  407692:	movzx  eax,WORD PTR [rax]
  407695:	cmp    ax,WORD PTR [rbp-0x44]
  407699:	jne    4076b6 <flatcc_builder_create_cached_vtable@@Base+0xb2>
  40769b:	movzx  edx,WORD PTR [rbp-0x44]
  40769f:	mov    rcx,QWORD PTR [rbp-0x8]
  4076a3:	mov    rax,QWORD PTR [rbp-0x40]
  4076a7:	mov    rsi,rcx
  4076aa:	mov    rdi,rax
  4076ad:	call   4030a0 <memcmp@plt>
  4076b2:	test   eax,eax
  4076b4:	je     4076ce <flatcc_builder_create_cached_vtable@@Base+0xca>
  4076b6:	mov    rax,QWORD PTR [rbp-0x10]
  4076ba:	add    rax,0xc
  4076be:	mov    QWORD PTR [rbp-0x20],rax
  4076c2:	mov    rax,QWORD PTR [rbp-0x10]
  4076c6:	mov    eax,DWORD PTR [rax+0xc]
  4076c9:	mov    DWORD PTR [rbp-0x2c],eax
  4076cc:	jmp    40773b <flatcc_builder_create_cached_vtable@@Base+0x137>
  4076ce:	mov    rax,QWORD PTR [rbp-0x10]
  4076d2:	mov    edx,DWORD PTR [rax+0x4]
  4076d5:	mov    rax,QWORD PTR [rbp-0x38]
  4076d9:	mov    eax,DWORD PTR [rax+0x100]
  4076df:	cmp    edx,eax
  4076e1:	je     407703 <flatcc_builder_create_cached_vtable@@Base+0xff>
  4076e3:	mov    rax,QWORD PTR [rbp-0x10]
  4076e7:	mov    QWORD PTR [rbp-0x28],rax
  4076eb:	mov    rax,QWORD PTR [rbp-0x10]
  4076ef:	add    rax,0xc
  4076f3:	mov    QWORD PTR [rbp-0x20],rax
  4076f7:	mov    rax,QWORD PTR [rbp-0x10]
  4076fb:	mov    eax,DWORD PTR [rax+0xc]
  4076fe:	mov    DWORD PTR [rbp-0x2c],eax
  407701:	jmp    40773b <flatcc_builder_create_cached_vtable@@Base+0x137>
  407703:	mov    rax,QWORD PTR [rbp-0x20]
  407707:	cmp    rax,QWORD PTR [rbp-0x18]
  40770b:	je     407730 <flatcc_builder_create_cached_vtable@@Base+0x12c>
  40770d:	mov    rax,QWORD PTR [rbp-0x10]
  407711:	mov    edx,DWORD PTR [rax+0xc]
  407714:	mov    rax,QWORD PTR [rbp-0x20]
  407718:	mov    DWORD PTR [rax],edx
  40771a:	mov    rax,QWORD PTR [rbp-0x18]
  40771e:	mov    edx,DWORD PTR [rax]
  407720:	mov    rax,QWORD PTR [rbp-0x10]
  407724:	mov    DWORD PTR [rax+0xc],edx
  407727:	mov    rax,QWORD PTR [rbp-0x18]
  40772b:	mov    edx,DWORD PTR [rbp-0x2c]
  40772e:	mov    DWORD PTR [rax],edx
  407730:	mov    rax,QWORD PTR [rbp-0x10]
  407734:	mov    eax,DWORD PTR [rax]
  407736:	jmp    4078e4 <flatcc_builder_create_cached_vtable@@Base+0x2e0>
  40773b:	cmp    DWORD PTR [rbp-0x2c],0x0
  40773f:	jne    407661 <flatcc_builder_create_cached_vtable@@Base+0x5d>
  407745:	mov    rax,QWORD PTR [rbp-0x38]
  407749:	mov    eax,DWORD PTR [rax+0xe4]
  40774f:	mov    edx,eax
  407751:	mov    rax,QWORD PTR [rbp-0x38]
  407755:	mov    r8d,0x0
  40775b:	mov    ecx,0x10
  407760:	mov    esi,0x6
  407765:	mov    rdi,rax
  407768:	call   404d26 <flatcc_builder_default_alloc@@Base+0x50c>
  40776d:	mov    QWORD PTR [rbp-0x10],rax
  407771:	cmp    QWORD PTR [rbp-0x10],0x0
  407776:	jne    407782 <flatcc_builder_create_cached_vtable@@Base+0x17e>
  407778:	mov    eax,0x0
  40777d:	jmp    4078e4 <flatcc_builder_create_cached_vtable@@Base+0x2e0>
  407782:	mov    rax,QWORD PTR [rbp-0x38]
  407786:	mov    eax,DWORD PTR [rax+0xe4]
  40778c:	mov    DWORD PTR [rbp-0x2c],eax
  40778f:	mov    rax,QWORD PTR [rbp-0x38]
  407793:	mov    eax,DWORD PTR [rax+0xe4]
  407799:	lea    edx,[rax+0x10]
  40779c:	mov    rax,QWORD PTR [rbp-0x38]
  4077a0:	mov    DWORD PTR [rax+0xe4],edx
  4077a6:	mov    rax,QWORD PTR [rbp-0x38]
  4077aa:	mov    edx,DWORD PTR [rax+0x100]
  4077b0:	mov    rax,QWORD PTR [rbp-0x10]
  4077b4:	mov    DWORD PTR [rax+0x4],edx
  4077b7:	mov    rax,QWORD PTR [rbp-0x18]
  4077bb:	mov    edx,DWORD PTR [rax]
  4077bd:	mov    rax,QWORD PTR [rbp-0x10]
  4077c1:	mov    DWORD PTR [rax+0xc],edx
  4077c4:	mov    rax,QWORD PTR [rbp-0x18]
  4077c8:	mov    edx,DWORD PTR [rbp-0x2c]
  4077cb:	mov    DWORD PTR [rax],edx
  4077cd:	movzx  edx,WORD PTR [rbp-0x44]
  4077d1:	mov    rcx,QWORD PTR [rbp-0x40]
  4077d5:	mov    rax,QWORD PTR [rbp-0x38]
  4077d9:	mov    rsi,rcx
  4077dc:	mov    rdi,rax
  4077df:	call   4074a9 <flatcc_builder_create_vtable@@Base>
  4077e4:	mov    edx,eax
  4077e6:	mov    rax,QWORD PTR [rbp-0x10]
  4077ea:	mov    DWORD PTR [rax],edx
  4077ec:	mov    rax,QWORD PTR [rbp-0x10]
  4077f0:	mov    eax,DWORD PTR [rax]
  4077f2:	test   eax,eax
  4077f4:	jne    407800 <flatcc_builder_create_cached_vtable@@Base+0x1fc>
  4077f6:	mov    eax,0x0
  4077fb:	jmp    4078e4 <flatcc_builder_create_cached_vtable@@Base+0x2e0>
  407800:	cmp    QWORD PTR [rbp-0x28],0x0
  407805:	je     40781a <flatcc_builder_create_cached_vtable@@Base+0x216>
  407807:	mov    rax,QWORD PTR [rbp-0x28]
  40780b:	mov    edx,DWORD PTR [rax+0x8]
  40780e:	mov    rax,QWORD PTR [rbp-0x10]
  407812:	mov    DWORD PTR [rax+0x8],edx
  407815:	jmp    4078de <flatcc_builder_create_cached_vtable@@Base+0x2da>
  40781a:	mov    rax,QWORD PTR [rbp-0x38]
  40781e:	mov    rax,QWORD PTR [rax+0x118]
  407825:	test   rax,rax
  407828:	je     40785d <flatcc_builder_create_cached_vtable@@Base+0x259>
  40782a:	mov    rax,QWORD PTR [rbp-0x38]
  40782e:	mov    rdx,QWORD PTR [rax+0x118]
  407835:	mov    rax,QWORD PTR [rbp-0x38]
  407839:	mov    ecx,DWORD PTR [rax+0xe0]
  40783f:	movzx  eax,WORD PTR [rbp-0x44]
  407843:	add    eax,ecx
  407845:	mov    eax,eax
  407847:	cmp    rdx,rax
  40784a:	jae    40785d <flatcc_builder_create_cached_vtable@@Base+0x259>
  40784c:	mov    rax,QWORD PTR [rbp-0x38]
  407850:	mov    rdi,rax
  407853:	call   405058 <flatcc_builder_flush_vtable_cache@@Base>
  407858:	jmp    4078de <flatcc_builder_create_cached_vtable@@Base+0x2da>
  40785d:	movzx  edx,WORD PTR [rbp-0x44]
  407861:	mov    rax,QWORD PTR [rbp-0x38]
  407865:	mov    eax,DWORD PTR [rax+0xe0]
  40786b:	mov    esi,eax
  40786d:	mov    rax,QWORD PTR [rbp-0x38]
  407871:	mov    r8d,0x0
  407877:	mov    rcx,rdx
  40787a:	mov    rdx,rsi
  40787d:	mov    esi,0x2
  407882:	mov    rdi,rax
  407885:	call   404d26 <flatcc_builder_default_alloc@@Base+0x50c>
  40788a:	mov    QWORD PTR [rbp-0x8],rax
  40788e:	cmp    QWORD PTR [rbp-0x8],0x0
  407893:	jne    40789c <flatcc_builder_create_cached_vtable@@Base+0x298>
  407895:	mov    eax,0xffffffff
  40789a:	jmp    4078e4 <flatcc_builder_create_cached_vtable@@Base+0x2e0>
  40789c:	mov    rax,QWORD PTR [rbp-0x38]
  4078a0:	mov    edx,DWORD PTR [rax+0xe0]
  4078a6:	mov    rax,QWORD PTR [rbp-0x10]
  4078aa:	mov    DWORD PTR [rax+0x8],edx
  4078ad:	mov    rax,QWORD PTR [rbp-0x38]
  4078b1:	mov    edx,DWORD PTR [rax+0xe0]
  4078b7:	movzx  eax,WORD PTR [rbp-0x44]
  4078bb:	add    edx,eax
  4078bd:	mov    rax,QWORD PTR [rbp-0x38]
  4078c1:	mov    DWORD PTR [rax+0xe0],edx
  4078c7:	movzx  edx,WORD PTR [rbp-0x44]
  4078cb:	mov    rcx,QWORD PTR [rbp-0x40]
  4078cf:	mov    rax,QWORD PTR [rbp-0x8]
  4078d3:	mov    rsi,rcx
  4078d6:	mov    rdi,rax
  4078d9:	call   4030b0 <memcpy@plt>
  4078de:	mov    rax,QWORD PTR [rbp-0x10]
  4078e2:	mov    eax,DWORD PTR [rax]
  4078e4:	leave  
  4078e5:	ret    

00000000004078e6 <flatcc_builder_create_table@@Base>:
  4078e6:	push   rbp
  4078e7:	mov    rbp,rsp
  4078ea:	sub    rsp,0x100
  4078f1:	mov    QWORD PTR [rbp-0xd8],rdi
  4078f8:	mov    QWORD PTR [rbp-0xe0],rsi
  4078ff:	mov    QWORD PTR [rbp-0xe8],rdx
  407906:	mov    eax,ecx
  407908:	mov    QWORD PTR [rbp-0xf8],r8
  40790f:	mov    DWORD PTR [rbp-0xf0],r9d
  407916:	mov    WORD PTR [rbp-0xec],ax
  40791d:	mov    rax,QWORD PTR fs:0x28
  407926:	mov    QWORD PTR [rbp-0x8],rax
  40792a:	xor    eax,eax
  40792c:	cmp    DWORD PTR [rbp-0xf0],0x0
  407933:	jns    407954 <flatcc_builder_create_table@@Base+0x6e>
  407935:	lea    rcx,[rip+0x61d4]        # 40db10 <flatcc_builder_padding_base@@Base+0x950>
  40793c:	mov    edx,0x4d5
  407941:	lea    rsi,[rip+0x5a78]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  407948:	lea    rdi,[rip+0x5d26]        # 40d675 <flatcc_builder_padding_base@@Base+0x4b5>
  40794f:	call   403070 <__assert_fail@plt>
  407954:	mov    eax,DWORD PTR [rbp+0x10]
  407957:	and    eax,0x1
  40795a:	test   eax,eax
  40795c:	jne    40797d <flatcc_builder_create_table@@Base+0x97>
  40795e:	lea    rcx,[rip+0x61ab]        # 40db10 <flatcc_builder_padding_base@@Base+0x950>
  407965:	mov    edx,0x4db
  40796a:	lea    rsi,[rip+0x5a4f]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  407971:	lea    rdi,[rip+0x5d0f]        # 40d687 <flatcc_builder_padding_base@@Base+0x4c7>
  407978:	call   403070 <__assert_fail@plt>
  40797d:	lea    rax,[rbp-0xec]
  407984:	mov    esi,0x4
  407989:	mov    rdi,rax
  40798c:	call   405495 <flatcc_builder_clear@@Base+0xc7>
  407991:	movzx  eax,WORD PTR [rbp-0xec]
  407998:	movzx  edx,ax
  40799b:	mov    rax,QWORD PTR [rbp-0xd8]
  4079a2:	mov    esi,edx
  4079a4:	mov    rdi,rax
  4079a7:	call   405464 <flatcc_builder_clear@@Base+0x96>
  4079ac:	movzx  eax,WORD PTR [rbp-0xec]
  4079b3:	movzx  edx,ax
  4079b6:	mov    rax,QWORD PTR [rbp-0xe8]
  4079bd:	mov    ecx,eax
  4079bf:	mov    rax,QWORD PTR [rbp-0xd8]
  4079c6:	mov    esi,ecx
  4079c8:	mov    rdi,rax
  4079cb:	call   405a1c <flatcc_builder_get_user_frame_ptr@@Base+0x2c1>
  4079d0:	mov    DWORD PTR [rbp-0xbc],eax
  4079d6:	mov    rax,QWORD PTR [rbp-0xd8]
  4079dd:	mov    eax,DWORD PTR [rax+0xf0]
  4079e3:	mov    edx,eax
  4079e5:	mov    rax,QWORD PTR [rbp-0xe8]
  4079ec:	mov    ecx,eax
  4079ee:	mov    eax,DWORD PTR [rbp-0xbc]
  4079f4:	add    eax,ecx
  4079f6:	sub    edx,eax
  4079f8:	mov    eax,edx
  4079fa:	sub    eax,0x4
  4079fd:	mov    DWORD PTR [rbp-0xb8],eax
  407a03:	mov    eax,DWORD PTR [rbp+0x10]
  407a06:	sub    eax,0x1
  407a09:	mov    DWORD PTR [rbp-0xb4],eax
  407a0f:	mov    eax,DWORD PTR [rbp-0xb8]
  407a15:	sub    eax,DWORD PTR [rbp-0xb4]
  407a1b:	mov    DWORD PTR [rbp-0xb0],eax
  407a21:	mov    eax,DWORD PTR [rbp-0xb8]
  407a27:	sub    eax,DWORD PTR [rbp-0xb0]
  407a2d:	cmp    eax,DWORD PTR [rbp-0xb4]
  407a33:	je     407a3f <flatcc_builder_create_table@@Base+0x159>
  407a35:	mov    eax,0xffffffff
  407a3a:	jmp    407c63 <flatcc_builder_create_table@@Base+0x37d>
  407a3f:	mov    eax,DWORD PTR [rbp-0xb0]
  407a45:	mov    edi,eax
  407a47:	call   404754 <main@@Base+0x16f>
  407a4c:	mov    DWORD PTR [rbp-0xc4],eax
  407a52:	mov    DWORD PTR [rbp-0xc0],0x0
  407a5c:	jmp    407ae7 <flatcc_builder_create_table@@Base+0x201>
  407a61:	mov    eax,DWORD PTR [rbp-0xc0]
  407a67:	cdqe   
  407a69:	lea    rdx,[rax+rax*1]
  407a6d:	mov    rax,QWORD PTR [rbp-0xf8]
  407a74:	add    rax,rdx
  407a77:	movzx  eax,WORD PTR [rax]
  407a7a:	movzx  edx,ax
  407a7d:	mov    rax,QWORD PTR [rbp-0xe0]
  407a84:	add    rax,rdx
  407a87:	mov    QWORD PTR [rbp-0xa8],rax
  407a8e:	mov    rax,QWORD PTR [rbp-0xa8]
  407a95:	mov    eax,DWORD PTR [rax]
  407a97:	sub    eax,DWORD PTR [rbp-0xb8]
  407a9d:	mov    edx,eax
  407a9f:	mov    eax,DWORD PTR [rbp-0xc0]
  407aa5:	cdqe   
  407aa7:	lea    rcx,[rax+rax*1]
  407aab:	mov    rax,QWORD PTR [rbp-0xf8]
  407ab2:	add    rax,rcx
  407ab5:	movzx  eax,WORD PTR [rax]
  407ab8:	movzx  eax,ax
  407abb:	sub    edx,eax
  407abd:	mov    eax,edx
  407abf:	sub    eax,0x4
  407ac2:	mov    DWORD PTR [rbp-0xac],eax
  407ac8:	mov    eax,DWORD PTR [rbp-0xac]
  407ace:	mov    edi,eax
  407ad0:	call   404754 <main@@Base+0x16f>
  407ad5:	mov    edx,eax
  407ad7:	mov    rax,QWORD PTR [rbp-0xa8]
  407ade:	mov    DWORD PTR [rax],edx
  407ae0:	add    DWORD PTR [rbp-0xc0],0x1
  407ae7:	mov    eax,DWORD PTR [rbp-0xc0]
  407aed:	cmp    eax,DWORD PTR [rbp-0xf0]
  407af3:	jl     407a61 <flatcc_builder_create_table@@Base+0x17b>
  407af9:	mov    QWORD PTR [rbp-0xa0],0x0
  407b04:	mov    DWORD PTR [rbp-0x98],0x0
  407b0e:	mov    rax,QWORD PTR [rbp-0xa0]
  407b15:	add    rax,0x4
  407b19:	mov    QWORD PTR [rbp-0xa0],rax
  407b20:	mov    eax,DWORD PTR [rbp-0x98]
  407b26:	cdqe   
  407b28:	shl    rax,0x4
  407b2c:	add    rax,rbp
  407b2f:	lea    rdx,[rax-0x90]
  407b36:	lea    rax,[rbp-0xc4]
  407b3d:	mov    QWORD PTR [rdx],rax
  407b40:	mov    eax,DWORD PTR [rbp-0x98]
  407b46:	cdqe   
  407b48:	shl    rax,0x4
  407b4c:	add    rax,rbp
  407b4f:	sub    rax,0x88
  407b55:	mov    QWORD PTR [rax],0x4
  407b5c:	mov    eax,DWORD PTR [rbp-0x98]
  407b62:	add    eax,0x1
  407b65:	mov    DWORD PTR [rbp-0x98],eax
  407b6b:	cmp    QWORD PTR [rbp-0xe8],0x0
  407b73:	je     407bdc <flatcc_builder_create_table@@Base+0x2f6>
  407b75:	mov    rdx,QWORD PTR [rbp-0xa0]
  407b7c:	mov    rax,QWORD PTR [rbp-0xe8]
  407b83:	add    rax,rdx
  407b86:	mov    QWORD PTR [rbp-0xa0],rax
  407b8d:	mov    eax,DWORD PTR [rbp-0x98]
  407b93:	cdqe   
  407b95:	shl    rax,0x4
  407b99:	add    rax,rbp
  407b9c:	lea    rdx,[rax-0x90]
  407ba3:	mov    rax,QWORD PTR [rbp-0xe0]
  407baa:	mov    QWORD PTR [rdx],rax
  407bad:	mov    eax,DWORD PTR [rbp-0x98]
  407bb3:	cdqe   
  407bb5:	shl    rax,0x4
  407bb9:	add    rax,rbp
  407bbc:	lea    rdx,[rax-0x88]
  407bc3:	mov    rax,QWORD PTR [rbp-0xe8]
  407bca:	mov    QWORD PTR [rdx],rax
  407bcd:	mov    eax,DWORD PTR [rbp-0x98]
  407bd3:	add    eax,0x1
  407bd6:	mov    DWORD PTR [rbp-0x98],eax
  407bdc:	cmp    DWORD PTR [rbp-0xbc],0x0
  407be3:	je     407c4a <flatcc_builder_create_table@@Base+0x364>
  407be5:	mov    rdx,QWORD PTR [rbp-0xa0]
  407bec:	mov    eax,DWORD PTR [rbp-0xbc]
  407bf2:	add    rax,rdx
  407bf5:	mov    QWORD PTR [rbp-0xa0],rax
  407bfc:	mov    eax,DWORD PTR [rbp-0x98]
  407c02:	cdqe   
  407c04:	shl    rax,0x4
  407c08:	add    rax,rbp
  407c0b:	sub    rax,0x90
  407c11:	mov    rdx,0x40d1c0
  407c18:	mov    QWORD PTR [rax],rdx
  407c1b:	mov    edx,DWORD PTR [rbp-0x98]
  407c21:	mov    eax,DWORD PTR [rbp-0xbc]
  407c27:	movsxd rdx,edx
  407c2a:	shl    rdx,0x4
  407c2e:	add    rdx,rbp
  407c31:	sub    rdx,0x88
  407c38:	mov    QWORD PTR [rdx],rax
  407c3b:	mov    eax,DWORD PTR [rbp-0x98]
  407c41:	add    eax,0x1
  407c44:	mov    DWORD PTR [rbp-0x98],eax
  407c4a:	lea    rdx,[rbp-0xa0]
  407c51:	mov    rax,QWORD PTR [rbp-0xd8]
  407c58:	mov    rsi,rdx
  407c5b:	mov    rdi,rax
  407c5e:	call   405a68 <flatcc_builder_get_user_frame_ptr@@Base+0x30d>
  407c63:	mov    rsi,QWORD PTR [rbp-0x8]
  407c67:	xor    rsi,QWORD PTR fs:0x28
  407c70:	je     407c77 <flatcc_builder_create_table@@Base+0x391>
  407c72:	call   403060 <__stack_chk_fail@plt>
  407c77:	leave  
  407c78:	ret    

0000000000407c79 <flatcc_builder_check_required_field@@Base>:
  407c79:	push   rbp
  407c7a:	mov    rbp,rsp
  407c7d:	sub    rsp,0x10
  407c81:	mov    QWORD PTR [rbp-0x8],rdi
  407c85:	mov    eax,esi
  407c87:	mov    WORD PTR [rbp-0xc],ax
  407c8b:	mov    rax,QWORD PTR [rbp-0x8]
  407c8f:	mov    rax,QWORD PTR [rax+0x30]
  407c93:	movzx  eax,WORD PTR [rax+0xe]
  407c97:	cmp    ax,0x3
  407c9b:	je     407cbc <flatcc_builder_check_required_field@@Base+0x43>
  407c9d:	lea    rcx,[rip+0x5e9c]        # 40db40 <flatcc_builder_padding_base@@Base+0x980>
  407ca4:	mov    edx,0x4f8
  407ca9:	lea    rsi,[rip+0x5710]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  407cb0:	lea    rdi,[rip+0x59e1]        # 40d698 <flatcc_builder_padding_base@@Base+0x4d8>
  407cb7:	call   403070 <__assert_fail@plt>
  407cbc:	mov    rax,QWORD PTR [rbp-0x8]
  407cc0:	movzx  eax,WORD PTR [rax+0x10]
  407cc4:	cmp    ax,WORD PTR [rbp-0xc]
  407cc8:	jbe    407ceb <flatcc_builder_check_required_field@@Base+0x72>
  407cca:	mov    rax,QWORD PTR [rbp-0x8]
  407cce:	mov    rax,QWORD PTR [rax+0x8]
  407cd2:	movzx  edx,WORD PTR [rbp-0xc]
  407cd6:	add    rdx,rdx
  407cd9:	add    rax,rdx
  407cdc:	movzx  eax,WORD PTR [rax]
  407cdf:	test   ax,ax
  407ce2:	je     407ceb <flatcc_builder_check_required_field@@Base+0x72>
  407ce4:	mov    eax,0x1
  407ce9:	jmp    407cf0 <flatcc_builder_check_required_field@@Base+0x77>
  407ceb:	mov    eax,0x0
  407cf0:	leave  
  407cf1:	ret    

0000000000407cf2 <flatcc_builder_check_union_field@@Base>:
  407cf2:	push   rbp
  407cf3:	mov    rbp,rsp
  407cf6:	sub    rsp,0x10
  407cfa:	mov    QWORD PTR [rbp-0x8],rdi
  407cfe:	mov    eax,esi
  407d00:	mov    WORD PTR [rbp-0xc],ax
  407d04:	mov    rax,QWORD PTR [rbp-0x8]
  407d08:	mov    rax,QWORD PTR [rax+0x30]
  407d0c:	movzx  eax,WORD PTR [rax+0xe]
  407d10:	cmp    ax,0x3
  407d14:	je     407d35 <flatcc_builder_check_union_field@@Base+0x43>
  407d16:	lea    rcx,[rip+0x5e63]        # 40db80 <flatcc_builder_padding_base@@Base+0x9c0>
  407d1d:	mov    edx,0x4ff
  407d22:	lea    rsi,[rip+0x5697]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  407d29:	lea    rdi,[rip+0x5968]        # 40d698 <flatcc_builder_padding_base@@Base+0x4d8>
  407d30:	call   403070 <__assert_fail@plt>
  407d35:	cmp    WORD PTR [rbp-0xc],0x0
  407d3a:	je     407d4a <flatcc_builder_check_union_field@@Base+0x58>
  407d3c:	mov    rax,QWORD PTR [rbp-0x8]
  407d40:	movzx  eax,WORD PTR [rax+0x10]
  407d44:	cmp    ax,WORD PTR [rbp-0xc]
  407d48:	ja     407d54 <flatcc_builder_check_union_field@@Base+0x62>
  407d4a:	mov    eax,0x0
  407d4f:	jmp    407dfe <flatcc_builder_check_union_field@@Base+0x10c>
  407d54:	mov    rax,QWORD PTR [rbp-0x8]
  407d58:	mov    rax,QWORD PTR [rax+0x8]
  407d5c:	movzx  edx,WORD PTR [rbp-0xc]
  407d60:	add    rdx,rdx
  407d63:	sub    rdx,0x2
  407d67:	add    rax,rdx
  407d6a:	movzx  eax,WORD PTR [rax]
  407d6d:	test   ax,ax
  407d70:	jne    407d92 <flatcc_builder_check_union_field@@Base+0xa0>
  407d72:	mov    rax,QWORD PTR [rbp-0x8]
  407d76:	mov    rax,QWORD PTR [rax+0x8]
  407d7a:	movzx  edx,WORD PTR [rbp-0xc]
  407d7e:	add    rdx,rdx
  407d81:	add    rax,rdx
  407d84:	movzx  eax,WORD PTR [rax]
  407d87:	test   ax,ax
  407d8a:	sete   al
  407d8d:	movzx  eax,al
  407d90:	jmp    407dfe <flatcc_builder_check_union_field@@Base+0x10c>
  407d92:	mov    rax,QWORD PTR [rbp-0x8]
  407d96:	mov    rdx,QWORD PTR [rax+0x18]
  407d9a:	mov    rax,QWORD PTR [rbp-0x8]
  407d9e:	mov    rax,QWORD PTR [rax+0x8]
  407da2:	movzx  ecx,WORD PTR [rbp-0xc]
  407da6:	add    rcx,rcx
  407da9:	sub    rcx,0x2
  407dad:	add    rax,rcx
  407db0:	movzx  eax,WORD PTR [rax]
  407db3:	movzx  eax,ax
  407db6:	add    rax,rdx
  407db9:	movzx  eax,BYTE PTR [rax]
  407dbc:	test   al,al
  407dbe:	je     407de0 <flatcc_builder_check_union_field@@Base+0xee>
  407dc0:	mov    rax,QWORD PTR [rbp-0x8]
  407dc4:	mov    rax,QWORD PTR [rax+0x8]
  407dc8:	movzx  edx,WORD PTR [rbp-0xc]
  407dcc:	add    rdx,rdx
  407dcf:	add    rax,rdx
  407dd2:	movzx  eax,WORD PTR [rax]
  407dd5:	test   ax,ax
  407dd8:	setne  al
  407ddb:	movzx  eax,al
  407dde:	jmp    407dfe <flatcc_builder_check_union_field@@Base+0x10c>
  407de0:	mov    rax,QWORD PTR [rbp-0x8]
  407de4:	mov    rax,QWORD PTR [rax+0x8]
  407de8:	movzx  edx,WORD PTR [rbp-0xc]
  407dec:	add    rdx,rdx
  407def:	add    rax,rdx
  407df2:	movzx  eax,WORD PTR [rax]
  407df5:	test   ax,ax
  407df8:	sete   al
  407dfb:	movzx  eax,al
  407dfe:	leave  
  407dff:	ret    

0000000000407e00 <flatcc_builder_check_required@@Base>:
  407e00:	push   rbp
  407e01:	mov    rbp,rsp
  407e04:	sub    rsp,0x30
  407e08:	mov    QWORD PTR [rbp-0x18],rdi
  407e0c:	mov    QWORD PTR [rbp-0x20],rsi
  407e10:	mov    DWORD PTR [rbp-0x24],edx
  407e13:	mov    rax,QWORD PTR [rbp-0x18]
  407e17:	mov    rax,QWORD PTR [rax+0x30]
  407e1b:	movzx  eax,WORD PTR [rax+0xe]
  407e1f:	cmp    ax,0x3
  407e23:	je     407e44 <flatcc_builder_check_required@@Base+0x44>
  407e25:	lea    rcx,[rip+0x5d84]        # 40dbb0 <flatcc_builder_padding_base@@Base+0x9f0>
  407e2c:	mov    edx,0x511
  407e31:	lea    rsi,[rip+0x5588]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  407e38:	lea    rdi,[rip+0x5859]        # 40d698 <flatcc_builder_padding_base@@Base+0x4d8>
  407e3f:	call   403070 <__assert_fail@plt>
  407e44:	mov    rax,QWORD PTR [rbp-0x18]
  407e48:	movzx  eax,WORD PTR [rax+0x10]
  407e4c:	movzx  eax,ax
  407e4f:	cmp    eax,DWORD PTR [rbp-0x24]
  407e52:	jge    407e5b <flatcc_builder_check_required@@Base+0x5b>
  407e54:	mov    eax,0x0
  407e59:	jmp    407ea9 <flatcc_builder_check_required@@Base+0xa9>
  407e5b:	mov    DWORD PTR [rbp-0x4],0x0
  407e62:	jmp    407e9c <flatcc_builder_check_required@@Base+0x9c>
  407e64:	mov    rax,QWORD PTR [rbp-0x18]
  407e68:	mov    rax,QWORD PTR [rax+0x8]
  407e6c:	mov    edx,DWORD PTR [rbp-0x4]
  407e6f:	movsxd rdx,edx
  407e72:	lea    rcx,[rdx+rdx*1]
  407e76:	mov    rdx,QWORD PTR [rbp-0x20]
  407e7a:	add    rdx,rcx
  407e7d:	movzx  edx,WORD PTR [rdx]
  407e80:	movzx  edx,dx
  407e83:	add    rdx,rdx
  407e86:	add    rax,rdx
  407e89:	movzx  eax,WORD PTR [rax]
  407e8c:	test   ax,ax
  407e8f:	jne    407e98 <flatcc_builder_check_required@@Base+0x98>
  407e91:	mov    eax,0x0
  407e96:	jmp    407ea9 <flatcc_builder_check_required@@Base+0xa9>
  407e98:	add    DWORD PTR [rbp-0x4],0x1
  407e9c:	mov    eax,DWORD PTR [rbp-0x4]
  407e9f:	cmp    eax,DWORD PTR [rbp-0x24]
  407ea2:	jl     407e64 <flatcc_builder_check_required@@Base+0x64>
  407ea4:	mov    eax,0x1
  407ea9:	leave  
  407eaa:	ret    

0000000000407eab <flatcc_builder_end_table@@Base>:
  407eab:	push   rbp
  407eac:	mov    rbp,rsp
  407eaf:	sub    rsp,0x30
  407eb3:	mov    QWORD PTR [rbp-0x28],rdi
  407eb7:	mov    rax,QWORD PTR [rbp-0x28]
  407ebb:	mov    rax,QWORD PTR [rax+0x30]
  407ebf:	movzx  eax,WORD PTR [rax+0xe]
  407ec3:	cmp    ax,0x3
  407ec7:	je     407ee8 <flatcc_builder_end_table@@Base+0x3d>
  407ec9:	lea    rcx,[rip+0x5d00]        # 40dbd0 <flatcc_builder_padding_base@@Base+0xa10>
  407ed0:	mov    edx,0x525
  407ed5:	lea    rsi,[rip+0x54e4]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  407edc:	lea    rdi,[rip+0x57b5]        # 40d698 <flatcc_builder_padding_base@@Base+0x4d8>
  407ee3:	call   403070 <__assert_fail@plt>
  407ee8:	mov    rax,QWORD PTR [rbp-0x28]
  407eec:	mov    rax,QWORD PTR [rax+0x8]
  407ef0:	sub    rax,0x4
  407ef4:	mov    QWORD PTR [rbp-0x10],rax
  407ef8:	mov    rax,QWORD PTR [rbp-0x28]
  407efc:	movzx  eax,WORD PTR [rax+0x10]
  407f00:	movzx  eax,ax
  407f03:	add    eax,0x2
  407f06:	cdqe   
  407f08:	add    eax,eax
  407f0a:	mov    WORD PTR [rbp-0x1e],ax
  407f0e:	mov    rax,QWORD PTR [rbp-0x10]
  407f12:	movzx  edx,WORD PTR [rbp-0x1e]
  407f16:	mov    WORD PTR [rax],dx
  407f19:	mov    rax,QWORD PTR [rbp-0x10]
  407f1d:	lea    rdx,[rax+0x2]
  407f21:	mov    rax,QWORD PTR [rbp-0x28]
  407f25:	mov    eax,DWORD PTR [rax+0x20]
  407f28:	add    eax,0x4
  407f2b:	mov    WORD PTR [rdx],ax
  407f2e:	mov    rax,QWORD PTR [rbp-0x10]
  407f32:	movzx  eax,WORD PTR [rax]
  407f35:	movzx  edx,ax
  407f38:	mov    rax,QWORD PTR [rbp-0x28]
  407f3c:	mov    eax,DWORD PTR [rax+0x14]
  407f3f:	xor    eax,edx
  407f41:	imul   edx,eax,0x9e3779b1
  407f47:	mov    rax,QWORD PTR [rbp-0x10]
  407f4b:	add    rax,0x2
  407f4f:	movzx  eax,WORD PTR [rax]
  407f52:	movzx  eax,ax
  407f55:	xor    eax,edx
  407f57:	imul   edx,eax,0x9e3779b1
  407f5d:	mov    rax,QWORD PTR [rbp-0x28]
  407f61:	mov    DWORD PTR [rax+0x14],edx
  407f64:	mov    rax,QWORD PTR [rbp-0x28]
  407f68:	mov    ecx,DWORD PTR [rax+0x14]
  407f6b:	movzx  edx,WORD PTR [rbp-0x1e]
  407f6f:	mov    rsi,QWORD PTR [rbp-0x10]
  407f73:	mov    rax,QWORD PTR [rbp-0x28]
  407f77:	mov    rdi,rax
  407f7a:	call   407604 <flatcc_builder_create_cached_vtable@@Base>
  407f7f:	mov    DWORD PTR [rbp-0x1c],eax
  407f82:	cmp    DWORD PTR [rbp-0x1c],0x0
  407f86:	jne    407f92 <flatcc_builder_end_table@@Base+0xe7>
  407f88:	mov    eax,0x0
  407f8d:	jmp    4080b2 <flatcc_builder_end_table@@Base+0x207>
  407f92:	movzx  edx,WORD PTR [rbp-0x1e]
  407f96:	mov    rax,QWORD PTR [rbp-0x10]
  407f9a:	mov    esi,0x0
  407f9f:	mov    rdi,rax
  407fa2:	call   403080 <memset@plt>
  407fa7:	mov    rax,QWORD PTR [rbp-0x28]
  407fab:	mov    rdx,QWORD PTR [rax+0x88]
  407fb2:	mov    rax,QWORD PTR [rbp-0x28]
  407fb6:	mov    rax,QWORD PTR [rax+0x30]
  407fba:	mov    eax,DWORD PTR [rax+0x14]
  407fbd:	mov    eax,eax
  407fbf:	add    rax,rdx
  407fc2:	mov    QWORD PTR [rbp-0x8],rax
  407fc6:	mov    rax,QWORD PTR [rbp-0x28]
  407fca:	mov    rax,QWORD PTR [rax]
  407fcd:	mov    rdx,rax
  407fd0:	mov    rax,QWORD PTR [rbp-0x8]
  407fd4:	sub    rdx,rax
  407fd7:	mov    rax,rdx
  407fda:	sar    rax,1
  407fdd:	mov    DWORD PTR [rbp-0x18],eax
  407fe0:	mov    rax,QWORD PTR [rbp-0x28]
  407fe4:	movzx  eax,WORD PTR [rax+0xea]
  407feb:	movzx  edx,ax
  407fee:	mov    rax,QWORD PTR [rbp-0x28]
  407ff2:	mov    eax,DWORD PTR [rax+0x20]
  407ff5:	mov    r10d,eax
  407ff8:	mov    rax,QWORD PTR [rbp-0x28]
  407ffc:	mov    rsi,QWORD PTR [rax+0x18]
  408000:	mov    r8d,DWORD PTR [rbp-0x18]
  408004:	mov    rdi,QWORD PTR [rbp-0x8]
  408008:	mov    rax,QWORD PTR [rbp-0x28]
  40800c:	sub    rsp,0x8
  408010:	mov    ecx,DWORD PTR [rbp-0x1c]
  408013:	push   rcx
  408014:	mov    r9d,r8d
  408017:	mov    r8,rdi
  40801a:	mov    ecx,edx
  40801c:	mov    rdx,r10
  40801f:	mov    rdi,rax
  408022:	call   4078e6 <flatcc_builder_create_table@@Base>
  408027:	add    rsp,0x10
  40802b:	mov    DWORD PTR [rbp-0x14],eax
  40802e:	cmp    DWORD PTR [rbp-0x14],0x0
  408032:	jne    40803b <flatcc_builder_end_table@@Base+0x190>
  408034:	mov    eax,0x0
  408039:	jmp    4080b2 <flatcc_builder_end_table@@Base+0x207>
  40803b:	mov    rax,QWORD PTR [rbp-0x28]
  40803f:	mov    rax,QWORD PTR [rax+0x30]
  408043:	mov    edx,DWORD PTR [rax+0x18]
  408046:	mov    rax,QWORD PTR [rbp-0x28]
  40804a:	mov    DWORD PTR [rax+0x14],edx
  40804d:	mov    rax,QWORD PTR [rbp-0x28]
  408051:	mov    rax,QWORD PTR [rax+0x30]
  408055:	movzx  edx,WORD PTR [rax+0x1c]
  408059:	mov    rax,QWORD PTR [rbp-0x28]
  40805d:	mov    WORD PTR [rax+0x10],dx
  408061:	mov    rax,QWORD PTR [rbp-0x28]
  408065:	mov    rdx,QWORD PTR [rax+0x58]
  408069:	mov    rax,QWORD PTR [rbp-0x28]
  40806d:	mov    rax,QWORD PTR [rax+0x30]
  408071:	mov    eax,DWORD PTR [rax+0x10]
  408074:	mov    eax,eax
  408076:	add    rdx,rax
  408079:	mov    rax,QWORD PTR [rbp-0x28]
  40807d:	mov    QWORD PTR [rax+0x8],rdx
  408081:	mov    rax,QWORD PTR [rbp-0x28]
  408085:	mov    rdx,QWORD PTR [rax+0x88]
  40808c:	mov    rax,QWORD PTR [rbp-0x28]
  408090:	mov    rax,QWORD PTR [rax+0x30]
  408094:	mov    eax,DWORD PTR [rax+0x14]
  408097:	mov    eax,eax
  408099:	add    rdx,rax
  40809c:	mov    rax,QWORD PTR [rbp-0x28]
  4080a0:	mov    QWORD PTR [rax],rdx
  4080a3:	mov    rax,QWORD PTR [rbp-0x28]
  4080a7:	mov    rdi,rax
  4080aa:	call   405955 <flatcc_builder_get_user_frame_ptr@@Base+0x1fa>
  4080af:	mov    eax,DWORD PTR [rbp-0x14]
  4080b2:	leave  
  4080b3:	ret    

00000000004080b4 <flatcc_builder_create_vector@@Base>:
  4080b4:	push   rbp
  4080b5:	mov    rbp,rsp
  4080b8:	sub    rsp,0xe0
  4080bf:	mov    QWORD PTR [rbp-0xb8],rdi
  4080c6:	mov    QWORD PTR [rbp-0xc0],rsi
  4080cd:	mov    QWORD PTR [rbp-0xc8],rdx
  4080d4:	mov    QWORD PTR [rbp-0xd0],rcx
  4080db:	mov    eax,r8d
  4080de:	mov    QWORD PTR [rbp-0xe0],r9
  4080e5:	mov    WORD PTR [rbp-0xd4],ax
  4080ec:	mov    rax,QWORD PTR fs:0x28
  4080f5:	mov    QWORD PTR [rbp-0x8],rax
  4080f9:	xor    eax,eax
  4080fb:	mov    rax,QWORD PTR [rbp-0xc8]
  408102:	cmp    rax,QWORD PTR [rbp-0xe0]
  408109:	jbe    408144 <flatcc_builder_create_vector@@Base+0x90>
  40810b:	mov    rax,QWORD PTR [rbp-0xc8]
  408112:	cmp    rax,QWORD PTR [rbp-0xe0]
  408119:	jbe    40813a <flatcc_builder_create_vector@@Base+0x86>
  40811b:	lea    rcx,[rip+0x5ace]        # 40dbf0 <flatcc_builder_padding_base@@Base+0xa30>
  408122:	mov    edx,0x555
  408127:	lea    rsi,[rip+0x5292]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  40812e:	lea    rdi,[rip+0x558e]        # 40d6c3 <flatcc_builder_padding_base@@Base+0x503>
  408135:	call   403070 <__assert_fail@plt>
  40813a:	mov    eax,0x0
  40813f:	jmp    40832f <flatcc_builder_create_vector@@Base+0x27b>
  408144:	lea    rax,[rbp-0xd4]
  40814b:	mov    esi,0x4
  408150:	mov    rdi,rax
  408153:	call   405495 <flatcc_builder_clear@@Base+0xc7>
  408158:	movzx  eax,WORD PTR [rbp-0xd4]
  40815f:	movzx  edx,ax
  408162:	mov    rax,QWORD PTR [rbp-0xb8]
  408169:	mov    esi,edx
  40816b:	mov    rdi,rax
  40816e:	call   405464 <flatcc_builder_clear@@Base+0x96>
  408173:	mov    rax,QWORD PTR [rbp-0xc8]
  40817a:	mov    edx,eax
  40817c:	mov    rax,QWORD PTR [rbp-0xd0]
  408183:	imul   eax,edx
  408186:	mov    DWORD PTR [rbp-0xa8],eax
  40818c:	mov    rax,QWORD PTR [rbp-0xc8]
  408193:	mov    edi,eax
  408195:	call   404754 <main@@Base+0x16f>
  40819a:	mov    DWORD PTR [rbp-0xac],eax
  4081a0:	movzx  eax,WORD PTR [rbp-0xd4]
  4081a7:	movzx  edx,ax
  4081aa:	mov    ecx,DWORD PTR [rbp-0xa8]
  4081b0:	mov    rax,QWORD PTR [rbp-0xb8]
  4081b7:	mov    esi,ecx
  4081b9:	mov    rdi,rax
  4081bc:	call   405a1c <flatcc_builder_get_user_frame_ptr@@Base+0x2c1>
  4081c1:	mov    DWORD PTR [rbp-0xa4],eax
  4081c7:	mov    QWORD PTR [rbp-0xa0],0x0
  4081d2:	mov    DWORD PTR [rbp-0x98],0x0
  4081dc:	mov    rax,QWORD PTR [rbp-0xa0]
  4081e3:	add    rax,0x4
  4081e7:	mov    QWORD PTR [rbp-0xa0],rax
  4081ee:	mov    eax,DWORD PTR [rbp-0x98]
  4081f4:	cdqe   
  4081f6:	shl    rax,0x4
  4081fa:	add    rax,rbp
  4081fd:	lea    rdx,[rax-0x90]
  408204:	lea    rax,[rbp-0xac]
  40820b:	mov    QWORD PTR [rdx],rax
  40820e:	mov    eax,DWORD PTR [rbp-0x98]
  408214:	cdqe   
  408216:	shl    rax,0x4
  40821a:	add    rax,rbp
  40821d:	sub    rax,0x88
  408223:	mov    QWORD PTR [rax],0x4
  40822a:	mov    eax,DWORD PTR [rbp-0x98]
  408230:	add    eax,0x1
  408233:	mov    DWORD PTR [rbp-0x98],eax
  408239:	cmp    DWORD PTR [rbp-0xa8],0x0
  408240:	je     4082a8 <flatcc_builder_create_vector@@Base+0x1f4>
  408242:	mov    rdx,QWORD PTR [rbp-0xa0]
  408249:	mov    eax,DWORD PTR [rbp-0xa8]
  40824f:	add    rax,rdx
  408252:	mov    QWORD PTR [rbp-0xa0],rax
  408259:	mov    eax,DWORD PTR [rbp-0x98]
  40825f:	cdqe   
  408261:	shl    rax,0x4
  408265:	add    rax,rbp
  408268:	lea    rdx,[rax-0x90]
  40826f:	mov    rax,QWORD PTR [rbp-0xc0]
  408276:	mov    QWORD PTR [rdx],rax
  408279:	mov    edx,DWORD PTR [rbp-0x98]
  40827f:	mov    eax,DWORD PTR [rbp-0xa8]
  408285:	movsxd rdx,edx
  408288:	shl    rdx,0x4
  40828c:	add    rdx,rbp
  40828f:	sub    rdx,0x88
  408296:	mov    QWORD PTR [rdx],rax
  408299:	mov    eax,DWORD PTR [rbp-0x98]
  40829f:	add    eax,0x1
  4082a2:	mov    DWORD PTR [rbp-0x98],eax
  4082a8:	cmp    DWORD PTR [rbp-0xa4],0x0
  4082af:	je     408316 <flatcc_builder_create_vector@@Base+0x262>
  4082b1:	mov    rdx,QWORD PTR [rbp-0xa0]
  4082b8:	mov    eax,DWORD PTR [rbp-0xa4]
  4082be:	add    rax,rdx
  4082c1:	mov    QWORD PTR [rbp-0xa0],rax
  4082c8:	mov    eax,DWORD PTR [rbp-0x98]
  4082ce:	cdqe   
  4082d0:	shl    rax,0x4
  4082d4:	add    rax,rbp
  4082d7:	sub    rax,0x90
  4082dd:	mov    rdx,0x40d1c0
  4082e4:	mov    QWORD PTR [rax],rdx
  4082e7:	mov    edx,DWORD PTR [rbp-0x98]
  4082ed:	mov    eax,DWORD PTR [rbp-0xa4]
  4082f3:	movsxd rdx,edx
  4082f6:	shl    rdx,0x4
  4082fa:	add    rdx,rbp
  4082fd:	sub    rdx,0x88
  408304:	mov    QWORD PTR [rdx],rax
  408307:	mov    eax,DWORD PTR [rbp-0x98]
  40830d:	add    eax,0x1
  408310:	mov    DWORD PTR [rbp-0x98],eax
  408316:	lea    rdx,[rbp-0xa0]
  40831d:	mov    rax,QWORD PTR [rbp-0xb8]
  408324:	mov    rsi,rdx
  408327:	mov    rdi,rax
  40832a:	call   405a68 <flatcc_builder_get_user_frame_ptr@@Base+0x30d>
  40832f:	mov    rcx,QWORD PTR [rbp-0x8]
  408333:	xor    rcx,QWORD PTR fs:0x28
  40833c:	je     408343 <flatcc_builder_create_vector@@Base+0x28f>
  40833e:	call   403060 <__stack_chk_fail@plt>
  408343:	leave  
  408344:	ret    

0000000000408345 <flatcc_builder_end_vector@@Base>:
  408345:	push   rbp
  408346:	mov    rbp,rsp
  408349:	sub    rsp,0x20
  40834d:	mov    QWORD PTR [rbp-0x18],rdi
  408351:	mov    rax,QWORD PTR [rbp-0x18]
  408355:	mov    rax,QWORD PTR [rax+0x30]
  408359:	movzx  eax,WORD PTR [rax+0xe]
  40835d:	cmp    ax,0x4
  408361:	je     408382 <flatcc_builder_end_vector@@Base+0x3d>
  408363:	lea    rcx,[rip+0x58a6]        # 40dc10 <flatcc_builder_padding_base@@Base+0xa50>
  40836a:	mov    edx,0x578
  40836f:	lea    rsi,[rip+0x504a]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  408376:	lea    rdi,[rip+0x518b]        # 40d508 <flatcc_builder_padding_base@@Base+0x348>
  40837d:	call   403070 <__assert_fail@plt>
  408382:	mov    rax,QWORD PTR [rbp-0x18]
  408386:	mov    rax,QWORD PTR [rax+0x30]
  40838a:	mov    eax,DWORD PTR [rax+0x18]
  40838d:	mov    r8d,eax
  408390:	mov    rax,QWORD PTR [rbp-0x18]
  408394:	movzx  eax,WORD PTR [rax+0xea]
  40839b:	movzx  edx,ax
  40839e:	mov    rax,QWORD PTR [rbp-0x18]
  4083a2:	mov    rax,QWORD PTR [rax+0x30]
  4083a6:	mov    eax,DWORD PTR [rax+0x10]
  4083a9:	mov    ecx,eax
  4083ab:	mov    rax,QWORD PTR [rbp-0x18]
  4083af:	mov    rax,QWORD PTR [rax+0x30]
  4083b3:	mov    eax,DWORD PTR [rax+0x14]
  4083b6:	mov    edi,eax
  4083b8:	mov    rax,QWORD PTR [rbp-0x18]
  4083bc:	mov    rsi,QWORD PTR [rax+0x18]
  4083c0:	mov    rax,QWORD PTR [rbp-0x18]
  4083c4:	mov    r9,r8
  4083c7:	mov    r8d,edx
  4083ca:	mov    rdx,rdi
  4083cd:	mov    rdi,rax
  4083d0:	call   4080b4 <flatcc_builder_create_vector@@Base>
  4083d5:	mov    DWORD PTR [rbp-0x4],eax
  4083d8:	cmp    DWORD PTR [rbp-0x4],0x0
  4083dc:	jne    4083e5 <flatcc_builder_end_vector@@Base+0xa0>
  4083de:	mov    eax,0x0
  4083e3:	jmp    4083f4 <flatcc_builder_end_vector@@Base+0xaf>
  4083e5:	mov    rax,QWORD PTR [rbp-0x18]
  4083e9:	mov    rdi,rax
  4083ec:	call   405955 <flatcc_builder_get_user_frame_ptr@@Base+0x1fa>
  4083f1:	mov    eax,DWORD PTR [rbp-0x4]
  4083f4:	leave  
  4083f5:	ret    

00000000004083f6 <flatcc_builder_vector_count@@Base>:
  4083f6:	push   rbp
  4083f7:	mov    rbp,rsp
  4083fa:	mov    QWORD PTR [rbp-0x8],rdi
  4083fe:	mov    rax,QWORD PTR [rbp-0x8]
  408402:	mov    rax,QWORD PTR [rax+0x30]
  408406:	mov    eax,DWORD PTR [rax+0x14]
  408409:	mov    eax,eax
  40840b:	pop    rbp
  40840c:	ret    

000000000040840d <flatcc_builder_vector_edit@@Base>:
  40840d:	push   rbp
  40840e:	mov    rbp,rsp
  408411:	mov    QWORD PTR [rbp-0x8],rdi
  408415:	mov    rax,QWORD PTR [rbp-0x8]
  408419:	mov    rax,QWORD PTR [rax+0x18]
  40841d:	pop    rbp
  40841e:	ret    
  40841f:	push   rbp
  408420:	mov    rbp,rsp
  408423:	push   rbx
  408424:	sub    rsp,0xe8
  40842b:	mov    QWORD PTR [rbp-0xd8],rdi
  408432:	mov    QWORD PTR [rbp-0xe0],rsi
  408439:	mov    QWORD PTR [rbp-0xe8],rdx
  408440:	mov    QWORD PTR [rbp-0xf0],rcx
  408447:	mov    rax,QWORD PTR fs:0x28
  408450:	mov    QWORD PTR [rbp-0x18],rax
  408454:	xor    eax,eax
  408456:	mov    rax,QWORD PTR [rbp-0xe8]
  40845d:	cmp    eax,0x3fffffff
  408462:	jbe    40846e <flatcc_builder_vector_edit@@Base+0x61>
  408464:	mov    eax,0x0
  408469:	jmp    4087b2 <flatcc_builder_vector_edit@@Base+0x3a5>
  40846e:	mov    rax,QWORD PTR [rbp-0xd8]
  408475:	mov    esi,0x4
  40847a:	mov    rdi,rax
  40847d:	call   405464 <flatcc_builder_clear@@Base+0x96>
  408482:	mov    rax,QWORD PTR [rbp-0xe8]
  408489:	shl    eax,0x2
  40848c:	mov    DWORD PTR [rbp-0xc0],eax
  408492:	mov    rax,QWORD PTR [rbp-0xe8]
  408499:	mov    edi,eax
  40849b:	call   404754 <main@@Base+0x16f>
  4084a0:	mov    DWORD PTR [rbp-0xc8],eax
  4084a6:	mov    ecx,DWORD PTR [rbp-0xc0]
  4084ac:	mov    rax,QWORD PTR [rbp-0xd8]
  4084b3:	mov    edx,0x4
  4084b8:	mov    esi,ecx
  4084ba:	mov    rdi,rax
  4084bd:	call   405a1c <flatcc_builder_get_user_frame_ptr@@Base+0x2c1>
  4084c2:	mov    DWORD PTR [rbp-0xbc],eax
  4084c8:	mov    QWORD PTR [rbp-0xb0],0x0
  4084d3:	mov    DWORD PTR [rbp-0xa8],0x0
  4084dd:	mov    rax,QWORD PTR [rbp-0xb0]
  4084e4:	add    rax,0x4
  4084e8:	mov    QWORD PTR [rbp-0xb0],rax
  4084ef:	mov    eax,DWORD PTR [rbp-0xa8]
  4084f5:	cdqe   
  4084f7:	shl    rax,0x4
  4084fb:	lea    rbx,[rbp-0x10]
  4084ff:	add    rax,rbx
  408502:	lea    rdx,[rax-0x90]
  408509:	lea    rax,[rbp-0xc8]
  408510:	mov    QWORD PTR [rdx],rax
  408513:	mov    eax,DWORD PTR [rbp-0xa8]
  408519:	cdqe   
  40851b:	shl    rax,0x4
  40851f:	lea    rbx,[rbp-0x10]
  408523:	add    rax,rbx
  408526:	sub    rax,0x88
  40852c:	mov    QWORD PTR [rax],0x4
  408533:	mov    eax,DWORD PTR [rbp-0xa8]
  408539:	add    eax,0x1
  40853c:	mov    DWORD PTR [rbp-0xa8],eax
  408542:	cmp    DWORD PTR [rbp-0xc0],0x0
  408549:	je     4085b9 <flatcc_builder_vector_edit@@Base+0x1ac>
  40854b:	mov    rdx,QWORD PTR [rbp-0xb0]
  408552:	mov    eax,DWORD PTR [rbp-0xc0]
  408558:	add    rax,rdx
  40855b:	mov    QWORD PTR [rbp-0xb0],rax
  408562:	mov    eax,DWORD PTR [rbp-0xa8]
  408568:	cdqe   
  40856a:	shl    rax,0x4
  40856e:	lea    rcx,[rbp-0x10]
  408572:	add    rax,rcx
  408575:	lea    rdx,[rax-0x90]
  40857c:	mov    rax,QWORD PTR [rbp-0xe0]
  408583:	mov    QWORD PTR [rdx],rax
  408586:	mov    edx,DWORD PTR [rbp-0xa8]
  40858c:	mov    eax,DWORD PTR [rbp-0xc0]
  408592:	movsxd rdx,edx
  408595:	shl    rdx,0x4
  408599:	lea    rbx,[rbp-0x10]
  40859d:	add    rdx,rbx
  4085a0:	sub    rdx,0x88
  4085a7:	mov    QWORD PTR [rdx],rax
  4085aa:	mov    eax,DWORD PTR [rbp-0xa8]
  4085b0:	add    eax,0x1
  4085b3:	mov    DWORD PTR [rbp-0xa8],eax
  4085b9:	cmp    DWORD PTR [rbp-0xbc],0x0
  4085c0:	je     40862f <flatcc_builder_vector_edit@@Base+0x222>
  4085c2:	mov    rdx,QWORD PTR [rbp-0xb0]
  4085c9:	mov    eax,DWORD PTR [rbp-0xbc]
  4085cf:	add    rax,rdx
  4085d2:	mov    QWORD PTR [rbp-0xb0],rax
  4085d9:	mov    eax,DWORD PTR [rbp-0xa8]
  4085df:	cdqe   
  4085e1:	shl    rax,0x4
  4085e5:	lea    rsi,[rbp-0x10]
  4085e9:	add    rax,rsi
  4085ec:	sub    rax,0x90
  4085f2:	mov    rdx,0x40d1c0
  4085f9:	mov    QWORD PTR [rax],rdx
  4085fc:	mov    edx,DWORD PTR [rbp-0xa8]
  408602:	mov    eax,DWORD PTR [rbp-0xbc]
  408608:	movsxd rdx,edx
  40860b:	shl    rdx,0x4
  40860f:	lea    rcx,[rbp-0x10]
  408613:	add    rdx,rcx
  408616:	sub    rdx,0x88
  40861d:	mov    QWORD PTR [rdx],rax
  408620:	mov    eax,DWORD PTR [rbp-0xa8]
  408626:	add    eax,0x1
  408629:	mov    DWORD PTR [rbp-0xa8],eax
  40862f:	mov    rax,QWORD PTR [rbp-0xd8]
  408636:	mov    eax,DWORD PTR [rax+0xf0]
  40863c:	mov    edx,eax
  40863e:	mov    rax,QWORD PTR [rbp-0xb0]
  408645:	sub    edx,eax
  408647:	mov    eax,edx
  408649:	mov    DWORD PTR [rbp-0xb8],eax
  40864f:	mov    DWORD PTR [rbp-0xc4],0x0
  408659:	jmp    408786 <flatcc_builder_vector_edit@@Base+0x379>
  40865e:	mov    eax,DWORD PTR [rbp-0xc4]
  408664:	lea    rdx,[rax*4+0x0]
  40866c:	mov    rax,QWORD PTR [rbp-0xe0]
  408673:	add    rax,rdx
  408676:	mov    eax,DWORD PTR [rax]
  408678:	test   eax,eax
  40867a:	je     408720 <flatcc_builder_vector_edit@@Base+0x313>
  408680:	mov    eax,DWORD PTR [rbp-0xc4]
  408686:	lea    rdx,[rax*4+0x0]
  40868e:	mov    rax,QWORD PTR [rbp-0xe0]
  408695:	add    rax,rdx
  408698:	mov    eax,DWORD PTR [rax]
  40869a:	sub    eax,DWORD PTR [rbp-0xb8]
  4086a0:	mov    edx,DWORD PTR [rbp-0xc4]
  4086a6:	shl    edx,0x2
  4086a9:	sub    eax,edx
  4086ab:	sub    eax,0x4
  4086ae:	mov    DWORD PTR [rbp-0xb4],eax
  4086b4:	mov    eax,DWORD PTR [rbp-0xc4]
  4086ba:	lea    rdx,[rax*4+0x0]
  4086c2:	mov    rax,QWORD PTR [rbp-0xe0]
  4086c9:	lea    rbx,[rdx+rax*1]
  4086cd:	mov    eax,DWORD PTR [rbp-0xb4]
  4086d3:	mov    edi,eax
  4086d5:	call   404754 <main@@Base+0x16f>
  4086da:	mov    DWORD PTR [rbx],eax
  4086dc:	cmp    QWORD PTR [rbp-0xf0],0x0
  4086e4:	je     40877f <flatcc_builder_vector_edit@@Base+0x372>
  4086ea:	mov    edx,DWORD PTR [rbp-0xc4]
  4086f0:	mov    rax,QWORD PTR [rbp-0xf0]
  4086f7:	add    rax,rdx
  4086fa:	movzx  eax,BYTE PTR [rax]
  4086fd:	test   al,al
  4086ff:	jne    40877f <flatcc_builder_vector_edit@@Base+0x372>
  408701:	lea    rcx,[rip+0x5528]        # 40dc30 <flatcc_builder_padding_base@@Base+0xa70>
  408708:	mov    edx,0x5b1
  40870d:	lea    rsi,[rip+0x4cac]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  408714:	lea    rdi,[rip+0x4fbb]        # 40d6d6 <flatcc_builder_padding_base@@Base+0x516>
  40871b:	call   403070 <__assert_fail@plt>
  408720:	cmp    QWORD PTR [rbp-0xf0],0x0
  408728:	je     408760 <flatcc_builder_vector_edit@@Base+0x353>
  40872a:	mov    edx,DWORD PTR [rbp-0xc4]
  408730:	mov    rax,QWORD PTR [rbp-0xf0]
  408737:	add    rax,rdx
  40873a:	movzx  eax,BYTE PTR [rax]
  40873d:	test   al,al
  40873f:	je     40877f <flatcc_builder_vector_edit@@Base+0x372>
  408741:	lea    rcx,[rip+0x54e8]        # 40dc30 <flatcc_builder_padding_base@@Base+0xa70>
  408748:	mov    edx,0x5b5
  40874d:	lea    rsi,[rip+0x4c6c]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  408754:	lea    rdi,[rip+0x4f89]        # 40d6e4 <flatcc_builder_padding_base@@Base+0x524>
  40875b:	call   403070 <__assert_fail@plt>
  408760:	lea    rcx,[rip+0x54c9]        # 40dc30 <flatcc_builder_padding_base@@Base+0xa70>
  408767:	mov    edx,0x5b7
  40876c:	lea    rsi,[rip+0x4c4d]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  408773:	lea    rdi,[rip+0x4ca6]        # 40d420 <flatcc_builder_padding_base@@Base+0x260>
  40877a:	call   403070 <__assert_fail@plt>
  40877f:	add    DWORD PTR [rbp-0xc4],0x1
  408786:	mov    rax,QWORD PTR [rbp-0xe8]
  40878d:	cmp    eax,DWORD PTR [rbp-0xc4]
  408793:	ja     40865e <flatcc_builder_vector_edit@@Base+0x251>
  408799:	lea    rdx,[rbp-0xb0]
  4087a0:	mov    rax,QWORD PTR [rbp-0xd8]
  4087a7:	mov    rsi,rdx
  4087aa:	mov    rdi,rax
  4087ad:	call   405a68 <flatcc_builder_get_user_frame_ptr@@Base+0x30d>
  4087b2:	mov    rbx,QWORD PTR [rbp-0x18]
  4087b6:	xor    rbx,QWORD PTR fs:0x28
  4087bf:	je     4087c6 <flatcc_builder_vector_edit@@Base+0x3b9>
  4087c1:	call   403060 <__stack_chk_fail@plt>
  4087c6:	add    rsp,0xe8
  4087cd:	pop    rbx
  4087ce:	pop    rbp
  4087cf:	ret    

00000000004087d0 <flatcc_builder_create_offset_vector_direct@@Base>:
  4087d0:	push   rbp
  4087d1:	mov    rbp,rsp
  4087d4:	sub    rsp,0x20
  4087d8:	mov    QWORD PTR [rbp-0x8],rdi
  4087dc:	mov    QWORD PTR [rbp-0x10],rsi
  4087e0:	mov    QWORD PTR [rbp-0x18],rdx
  4087e4:	mov    rdx,QWORD PTR [rbp-0x18]
  4087e8:	mov    rsi,QWORD PTR [rbp-0x10]
  4087ec:	mov    rax,QWORD PTR [rbp-0x8]
  4087f0:	mov    ecx,0x0
  4087f5:	mov    rdi,rax
  4087f8:	call   40841f <flatcc_builder_vector_edit@@Base+0x12>
  4087fd:	leave  
  4087fe:	ret    

00000000004087ff <flatcc_builder_end_offset_vector@@Base>:
  4087ff:	push   rbp
  408800:	mov    rbp,rsp
  408803:	sub    rsp,0x20
  408807:	mov    QWORD PTR [rbp-0x18],rdi
  40880b:	mov    rax,QWORD PTR [rbp-0x18]
  40880f:	mov    rax,QWORD PTR [rax+0x30]
  408813:	movzx  eax,WORD PTR [rax+0xe]
  408817:	cmp    ax,0x5
  40881b:	je     40883c <flatcc_builder_end_offset_vector@@Base+0x3d>
  40881d:	lea    rcx,[rip+0x543c]        # 40dc60 <flatcc_builder_padding_base@@Base+0xaa0>
  408824:	mov    edx,0x5c8
  408829:	lea    rsi,[rip+0x4b90]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  408830:	lea    rdi,[rip+0x4d41]        # 40d578 <flatcc_builder_padding_base@@Base+0x3b8>
  408837:	call   403070 <__assert_fail@plt>
  40883c:	mov    rax,QWORD PTR [rbp-0x18]
  408840:	mov    rax,QWORD PTR [rax+0x30]
  408844:	mov    eax,DWORD PTR [rax+0x14]
  408847:	mov    edx,eax
  408849:	mov    rax,QWORD PTR [rbp-0x18]
  40884d:	mov    rcx,QWORD PTR [rax+0x18]
  408851:	mov    rax,QWORD PTR [rbp-0x18]
  408855:	mov    rsi,rcx
  408858:	mov    rdi,rax
  40885b:	call   4087d0 <flatcc_builder_create_offset_vector_direct@@Base>
  408860:	mov    DWORD PTR [rbp-0x4],eax
  408863:	cmp    DWORD PTR [rbp-0x4],0x0
  408867:	jne    408870 <flatcc_builder_end_offset_vector@@Base+0x71>
  408869:	mov    eax,0x0
  40886e:	jmp    40887f <flatcc_builder_end_offset_vector@@Base+0x80>
  408870:	mov    rax,QWORD PTR [rbp-0x18]
  408874:	mov    rdi,rax
  408877:	call   405955 <flatcc_builder_get_user_frame_ptr@@Base+0x1fa>
  40887c:	mov    eax,DWORD PTR [rbp-0x4]
  40887f:	leave  
  408880:	ret    

0000000000408881 <flatcc_builder_end_offset_vector_for_unions@@Base>:
  408881:	push   rbp
  408882:	mov    rbp,rsp
  408885:	sub    rsp,0x20
  408889:	mov    QWORD PTR [rbp-0x18],rdi
  40888d:	mov    QWORD PTR [rbp-0x20],rsi
  408891:	mov    rax,QWORD PTR [rbp-0x18]
  408895:	mov    rax,QWORD PTR [rax+0x30]
  408899:	movzx  eax,WORD PTR [rax+0xe]
  40889d:	cmp    ax,0x5
  4088a1:	je     4088c2 <flatcc_builder_end_offset_vector_for_unions@@Base+0x41>
  4088a3:	lea    rcx,[rip+0x53f6]        # 40dca0 <flatcc_builder_padding_base@@Base+0xae0>
  4088aa:	mov    edx,0x5d5
  4088af:	lea    rsi,[rip+0x4b0a]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  4088b6:	lea    rdi,[rip+0x4cbb]        # 40d578 <flatcc_builder_padding_base@@Base+0x3b8>
  4088bd:	call   403070 <__assert_fail@plt>
  4088c2:	mov    rax,QWORD PTR [rbp-0x18]
  4088c6:	mov    rax,QWORD PTR [rax+0x30]
  4088ca:	mov    eax,DWORD PTR [rax+0x14]
  4088cd:	mov    edi,eax
  4088cf:	mov    rax,QWORD PTR [rbp-0x18]
  4088d3:	mov    rsi,QWORD PTR [rax+0x18]
  4088d7:	mov    rdx,QWORD PTR [rbp-0x20]
  4088db:	mov    rax,QWORD PTR [rbp-0x18]
  4088df:	mov    rcx,rdx
  4088e2:	mov    rdx,rdi
  4088e5:	mov    rdi,rax
  4088e8:	call   40841f <flatcc_builder_vector_edit@@Base+0x12>
  4088ed:	mov    DWORD PTR [rbp-0x4],eax
  4088f0:	cmp    DWORD PTR [rbp-0x4],0x0
  4088f4:	jne    4088fd <flatcc_builder_end_offset_vector_for_unions@@Base+0x7c>
  4088f6:	mov    eax,0x0
  4088fb:	jmp    40890c <flatcc_builder_end_offset_vector_for_unions@@Base+0x8b>
  4088fd:	mov    rax,QWORD PTR [rbp-0x18]
  408901:	mov    rdi,rax
  408904:	call   405955 <flatcc_builder_get_user_frame_ptr@@Base+0x1fa>
  408909:	mov    eax,DWORD PTR [rbp-0x4]
  40890c:	leave  
  40890d:	ret    

000000000040890e <flatcc_builder_offset_vector_edit@@Base>:
  40890e:	push   rbp
  40890f:	mov    rbp,rsp
  408912:	mov    QWORD PTR [rbp-0x8],rdi
  408916:	mov    rax,QWORD PTR [rbp-0x8]
  40891a:	mov    rax,QWORD PTR [rax+0x18]
  40891e:	pop    rbp
  40891f:	ret    

0000000000408920 <flatcc_builder_offset_vector_count@@Base>:
  408920:	push   rbp
  408921:	mov    rbp,rsp
  408924:	mov    QWORD PTR [rbp-0x8],rdi
  408928:	mov    rax,QWORD PTR [rbp-0x8]
  40892c:	mov    rax,QWORD PTR [rax+0x30]
  408930:	mov    eax,DWORD PTR [rax+0x14]
  408933:	mov    eax,eax
  408935:	pop    rbp
  408936:	ret    

0000000000408937 <flatcc_builder_table_add_union@@Base>:
  408937:	push   rbp
  408938:	mov    rbp,rsp
  40893b:	sub    rsp,0x30
  40893f:	mov    QWORD PTR [rbp-0x18],rdi
  408943:	mov    DWORD PTR [rbp-0x1c],esi
  408946:	mov    QWORD PTR [rbp-0x24],rdx
  40894a:	mov    rax,QWORD PTR [rbp-0x18]
  40894e:	mov    rax,QWORD PTR [rax+0x30]
  408952:	movzx  eax,WORD PTR [rax+0xe]
  408956:	cmp    ax,0x3
  40895a:	je     40897b <flatcc_builder_table_add_union@@Base+0x44>
  40895c:	lea    rcx,[rip+0x536d]        # 40dcd0 <flatcc_builder_padding_base@@Base+0xb10>
  408963:	mov    edx,0x5ee
  408968:	lea    rsi,[rip+0x4a51]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  40896f:	lea    rdi,[rip+0x4d22]        # 40d698 <flatcc_builder_padding_base@@Base+0x4d8>
  408976:	call   403070 <__assert_fail@plt>
  40897b:	movzx  eax,BYTE PTR [rbp-0x24]
  40897f:	test   al,al
  408981:	jne    4089c2 <flatcc_builder_table_add_union@@Base+0x8b>
  408983:	mov    eax,DWORD PTR [rbp-0x20]
  408986:	test   eax,eax
  408988:	je     4089c2 <flatcc_builder_table_add_union@@Base+0x8b>
  40898a:	movzx  eax,BYTE PTR [rbp-0x24]
  40898e:	test   al,al
  408990:	jne    4089b8 <flatcc_builder_table_add_union@@Base+0x81>
  408992:	mov    eax,DWORD PTR [rbp-0x20]
  408995:	test   eax,eax
  408997:	je     4089b8 <flatcc_builder_table_add_union@@Base+0x81>
  408999:	lea    rcx,[rip+0x5330]        # 40dcd0 <flatcc_builder_padding_base@@Base+0xb10>
  4089a0:	mov    edx,0x5ef
  4089a5:	lea    rsi,[rip+0x4a14]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  4089ac:	lea    rdi,[rip+0x4d45]        # 40d6f8 <flatcc_builder_padding_base@@Base+0x538>
  4089b3:	call   403070 <__assert_fail@plt>
  4089b8:	mov    eax,0xffffffff
  4089bd:	jmp    408a8a <flatcc_builder_table_add_union@@Base+0x153>
  4089c2:	mov    eax,DWORD PTR [rbp-0x20]
  4089c5:	test   eax,eax
  4089c7:	je     408a1b <flatcc_builder_table_add_union@@Base+0xe4>
  4089c9:	mov    edx,DWORD PTR [rbp-0x1c]
  4089cc:	mov    rax,QWORD PTR [rbp-0x18]
  4089d0:	mov    esi,edx
  4089d2:	mov    rdi,rax
  4089d5:	call   4096db <flatcc_builder_table_add_offset@@Base>
  4089da:	mov    QWORD PTR [rbp-0x10],rax
  4089de:	cmp    QWORD PTR [rbp-0x10],0x0
  4089e3:	jne    408a12 <flatcc_builder_table_add_union@@Base+0xdb>
  4089e5:	cmp    QWORD PTR [rbp-0x10],0x0
  4089ea:	jne    408a0b <flatcc_builder_table_add_union@@Base+0xd4>
  4089ec:	lea    rcx,[rip+0x52dd]        # 40dcd0 <flatcc_builder_padding_base@@Base+0xb10>
  4089f3:	mov    edx,0x5f2
  4089f8:	lea    rsi,[rip+0x49c1]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  4089ff:	lea    rdi,[rip+0x4d14]        # 40d71a <flatcc_builder_padding_base@@Base+0x55a>
  408a06:	call   403070 <__assert_fail@plt>
  408a0b:	mov    eax,0xffffffff
  408a10:	jmp    408a8a <flatcc_builder_table_add_union@@Base+0x153>
  408a12:	mov    edx,DWORD PTR [rbp-0x20]
  408a15:	mov    rax,QWORD PTR [rbp-0x10]
  408a19:	mov    DWORD PTR [rax],edx
  408a1b:	mov    eax,DWORD PTR [rbp-0x1c]
  408a1e:	lea    esi,[rax-0x1]
  408a21:	mov    rax,QWORD PTR [rbp-0x18]
  408a25:	mov    ecx,0x1
  408a2a:	mov    edx,0x1
  408a2f:	mov    rdi,rax
  408a32:	call   40950d <flatcc_builder_table_add@@Base>
  408a37:	mov    QWORD PTR [rbp-0x8],rax
  408a3b:	cmp    QWORD PTR [rbp-0x8],0x0
  408a40:	jne    408a6f <flatcc_builder_table_add_union@@Base+0x138>
  408a42:	cmp    QWORD PTR [rbp-0x8],0x0
  408a47:	jne    408a68 <flatcc_builder_table_add_union@@Base+0x131>
  408a49:	lea    rcx,[rip+0x5280]        # 40dcd0 <flatcc_builder_padding_base@@Base+0xb10>
  408a50:	mov    edx,0x5f6
  408a55:	lea    rsi,[rip+0x4964]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  408a5c:	lea    rdi,[rip+0x4cc1]        # 40d724 <flatcc_builder_padding_base@@Base+0x564>
  408a63:	call   403070 <__assert_fail@plt>
  408a68:	mov    eax,0xffffffff
  408a6d:	jmp    408a8a <flatcc_builder_table_add_union@@Base+0x153>
  408a6f:	movzx  eax,BYTE PTR [rbp-0x24]
  408a73:	movzx  eax,al
  408a76:	mov    edi,eax
  408a78:	call   404760 <main@@Base+0x17b>
  408a7d:	mov    edx,eax
  408a7f:	mov    rax,QWORD PTR [rbp-0x8]
  408a83:	mov    BYTE PTR [rax],dl
  408a85:	mov    eax,0x0
  408a8a:	leave  
  408a8b:	ret    

0000000000408a8c <flatcc_builder_table_add_union_vector@@Base>:
  408a8c:	push   rbp
  408a8d:	mov    rbp,rsp
  408a90:	sub    rsp,0x30
  408a94:	mov    QWORD PTR [rbp-0x18],rdi
  408a98:	mov    DWORD PTR [rbp-0x1c],esi
  408a9b:	mov    QWORD PTR [rbp-0x24],rdx
  408a9f:	mov    rax,QWORD PTR [rbp-0x18]
  408aa3:	mov    rax,QWORD PTR [rax+0x30]
  408aa7:	movzx  eax,WORD PTR [rax+0xe]
  408aab:	cmp    ax,0x3
  408aaf:	je     408ad0 <flatcc_builder_table_add_union_vector@@Base+0x44>
  408ab1:	lea    rcx,[rip+0x5248]        # 40dd00 <flatcc_builder_padding_base@@Base+0xb40>
  408ab8:	mov    edx,0x600
  408abd:	lea    rsi,[rip+0x48fc]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  408ac4:	lea    rdi,[rip+0x4bcd]        # 40d698 <flatcc_builder_padding_base@@Base+0x4d8>
  408acb:	call   403070 <__assert_fail@plt>
  408ad0:	mov    eax,DWORD PTR [rbp-0x24]
  408ad3:	test   eax,eax
  408ad5:	sete   dl
  408ad8:	mov    eax,DWORD PTR [rbp-0x20]
  408adb:	test   eax,eax
  408add:	sete   al
  408ae0:	xor    eax,edx
  408ae2:	test   al,al
  408ae4:	je     408b25 <flatcc_builder_table_add_union_vector@@Base+0x99>
  408ae6:	mov    eax,DWORD PTR [rbp-0x24]
  408ae9:	test   eax,eax
  408aeb:	setne  dl
  408aee:	mov    eax,DWORD PTR [rbp-0x20]
  408af1:	test   eax,eax
  408af3:	sete   al
  408af6:	xor    eax,edx
  408af8:	test   al,al
  408afa:	jne    408b1b <flatcc_builder_table_add_union_vector@@Base+0x8f>
  408afc:	lea    rcx,[rip+0x51fd]        # 40dd00 <flatcc_builder_padding_base@@Base+0xb40>
  408b03:	mov    edx,0x601
  408b08:	lea    rsi,[rip+0x48b1]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  408b0f:	lea    rdi,[rip+0x4c1a]        # 40d730 <flatcc_builder_padding_base@@Base+0x570>
  408b16:	call   403070 <__assert_fail@plt>
  408b1b:	mov    eax,0xffffffff
  408b20:	jmp    408bdc <flatcc_builder_table_add_union_vector@@Base+0x150>
  408b25:	mov    eax,DWORD PTR [rbp-0x24]
  408b28:	test   eax,eax
  408b2a:	je     408bd7 <flatcc_builder_table_add_union_vector@@Base+0x14b>
  408b30:	mov    eax,DWORD PTR [rbp-0x1c]
  408b33:	lea    edx,[rax-0x1]
  408b36:	mov    rax,QWORD PTR [rbp-0x18]
  408b3a:	mov    esi,edx
  408b3c:	mov    rdi,rax
  408b3f:	call   4096db <flatcc_builder_table_add_offset@@Base>
  408b44:	mov    QWORD PTR [rbp-0x8],rax
  408b48:	cmp    QWORD PTR [rbp-0x8],0x0
  408b4d:	jne    408b7c <flatcc_builder_table_add_union_vector@@Base+0xf0>
  408b4f:	cmp    QWORD PTR [rbp-0x8],0x0
  408b54:	jne    408b75 <flatcc_builder_table_add_union_vector@@Base+0xe9>
  408b56:	lea    rcx,[rip+0x51a3]        # 40dd00 <flatcc_builder_padding_base@@Base+0xb40>
  408b5d:	mov    edx,0x604
  408b62:	lea    rsi,[rip+0x4857]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  408b69:	lea    rdi,[rip+0x4baa]        # 40d71a <flatcc_builder_padding_base@@Base+0x55a>
  408b70:	call   403070 <__assert_fail@plt>
  408b75:	mov    eax,0xffffffff
  408b7a:	jmp    408bdc <flatcc_builder_table_add_union_vector@@Base+0x150>
  408b7c:	mov    edx,DWORD PTR [rbp-0x24]
  408b7f:	mov    rax,QWORD PTR [rbp-0x8]
  408b83:	mov    DWORD PTR [rax],edx
  408b85:	mov    edx,DWORD PTR [rbp-0x1c]
  408b88:	mov    rax,QWORD PTR [rbp-0x18]
  408b8c:	mov    esi,edx
  408b8e:	mov    rdi,rax
  408b91:	call   4096db <flatcc_builder_table_add_offset@@Base>
  408b96:	mov    QWORD PTR [rbp-0x8],rax
  408b9a:	cmp    QWORD PTR [rbp-0x8],0x0
  408b9f:	jne    408bce <flatcc_builder_table_add_union_vector@@Base+0x142>
  408ba1:	cmp    QWORD PTR [rbp-0x8],0x0
  408ba6:	jne    408bc7 <flatcc_builder_table_add_union_vector@@Base+0x13b>
  408ba8:	lea    rcx,[rip+0x5151]        # 40dd00 <flatcc_builder_padding_base@@Base+0xb40>
  408baf:	mov    edx,0x608
  408bb4:	lea    rsi,[rip+0x4805]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  408bbb:	lea    rdi,[rip+0x4b58]        # 40d71a <flatcc_builder_padding_base@@Base+0x55a>
  408bc2:	call   403070 <__assert_fail@plt>
  408bc7:	mov    eax,0xffffffff
  408bcc:	jmp    408bdc <flatcc_builder_table_add_union_vector@@Base+0x150>
  408bce:	mov    edx,DWORD PTR [rbp-0x20]
  408bd1:	mov    rax,QWORD PTR [rbp-0x8]
  408bd5:	mov    DWORD PTR [rax],edx
  408bd7:	mov    eax,0x0
  408bdc:	leave  
  408bdd:	ret    

0000000000408bde <flatcc_builder_create_union_vector@@Base>:
  408bde:	push   rbp
  408bdf:	mov    rbp,rsp
  408be2:	sub    rsp,0x40
  408be6:	mov    QWORD PTR [rbp-0x28],rdi
  408bea:	mov    QWORD PTR [rbp-0x30],rsi
  408bee:	mov    QWORD PTR [rbp-0x38],rdx
  408bf2:	mov    DWORD PTR [rbp-0x8],0x0
  408bf9:	mov    DWORD PTR [rbp-0x4],0x0
  408c00:	mov    rax,QWORD PTR [rbp-0x28]
  408c04:	mov    rdi,rax
  408c07:	call   40720d <flatcc_builder_start_offset_vector@@Base>
  408c0c:	test   eax,eax
  408c0e:	je     408c19 <flatcc_builder_create_union_vector@@Base+0x3b>
  408c10:	mov    rax,QWORD PTR [rbp-0x8]
  408c14:	jmp    408d05 <flatcc_builder_create_union_vector@@Base+0x127>
  408c19:	mov    rdx,QWORD PTR [rbp-0x38]
  408c1d:	mov    rax,QWORD PTR [rbp-0x28]
  408c21:	mov    rsi,rdx
  408c24:	mov    rdi,rax
  408c27:	call   406c1d <flatcc_builder_extend_offset_vector@@Base>
  408c2c:	test   rax,rax
  408c2f:	jne    408c3a <flatcc_builder_create_union_vector@@Base+0x5c>
  408c31:	mov    rax,QWORD PTR [rbp-0x8]
  408c35:	jmp    408d05 <flatcc_builder_create_union_vector@@Base+0x127>
  408c3a:	mov    rax,QWORD PTR [rbp-0x38]
  408c3e:	mov    edx,eax
  408c40:	mov    rax,QWORD PTR [rbp-0x28]
  408c44:	mov    esi,edx
  408c46:	mov    rdi,rax
  408c49:	call   404a7a <flatcc_builder_default_alloc@@Base+0x260>
  408c4e:	mov    QWORD PTR [rbp-0x18],rax
  408c52:	cmp    QWORD PTR [rbp-0x18],0x0
  408c57:	jne    408c62 <flatcc_builder_create_union_vector@@Base+0x84>
  408c59:	mov    rax,QWORD PTR [rbp-0x8]
  408c5d:	jmp    408d05 <flatcc_builder_create_union_vector@@Base+0x127>
  408c62:	mov    rax,QWORD PTR [rbp-0x28]
  408c66:	mov    rdi,rax
  408c69:	call   40890e <flatcc_builder_offset_vector_edit@@Base>
  408c6e:	mov    QWORD PTR [rbp-0x10],rax
  408c72:	mov    QWORD PTR [rbp-0x20],0x0
  408c7a:	jmp    408ccf <flatcc_builder_create_union_vector@@Base+0xf1>
  408c7c:	mov    rdx,QWORD PTR [rbp-0x18]
  408c80:	mov    rax,QWORD PTR [rbp-0x20]
  408c84:	add    rdx,rax
  408c87:	mov    rax,QWORD PTR [rbp-0x20]
  408c8b:	lea    rcx,[rax*8+0x0]
  408c93:	mov    rax,QWORD PTR [rbp-0x30]
  408c97:	add    rax,rcx
  408c9a:	movzx  eax,BYTE PTR [rax]
  408c9d:	mov    BYTE PTR [rdx],al
  408c9f:	mov    rax,QWORD PTR [rbp-0x20]
  408ca3:	lea    rdx,[rax*4+0x0]
  408cab:	mov    rax,QWORD PTR [rbp-0x10]
  408caf:	add    rdx,rax
  408cb2:	mov    rax,QWORD PTR [rbp-0x20]
  408cb6:	lea    rcx,[rax*8+0x0]
  408cbe:	mov    rax,QWORD PTR [rbp-0x30]
  408cc2:	add    rax,rcx
  408cc5:	mov    eax,DWORD PTR [rax+0x4]
  408cc8:	mov    DWORD PTR [rdx],eax
  408cca:	add    QWORD PTR [rbp-0x20],0x1
  408ccf:	mov    rax,QWORD PTR [rbp-0x20]
  408cd3:	cmp    rax,QWORD PTR [rbp-0x38]
  408cd7:	jb     408c7c <flatcc_builder_create_union_vector@@Base+0x9e>
  408cd9:	mov    rcx,QWORD PTR [rbp-0x38]
  408cdd:	mov    rdx,QWORD PTR [rbp-0x10]
  408ce1:	mov    rsi,QWORD PTR [rbp-0x18]
  408ce5:	mov    rax,QWORD PTR [rbp-0x28]
  408ce9:	mov    rdi,rax
  408cec:	call   408d07 <flatcc_builder_create_union_vector_direct@@Base>
  408cf1:	mov    QWORD PTR [rbp-0x8],rax
  408cf5:	mov    rax,QWORD PTR [rbp-0x28]
  408cf9:	mov    rdi,rax
  408cfc:	call   405955 <flatcc_builder_get_user_frame_ptr@@Base+0x1fa>
  408d01:	mov    rax,QWORD PTR [rbp-0x8]
  408d05:	leave  
  408d06:	ret    

0000000000408d07 <flatcc_builder_create_union_vector_direct@@Base>:
  408d07:	push   rbp
  408d08:	mov    rbp,rsp
  408d0b:	sub    rsp,0x30
  408d0f:	mov    QWORD PTR [rbp-0x18],rdi
  408d13:	mov    QWORD PTR [rbp-0x20],rsi
  408d17:	mov    QWORD PTR [rbp-0x28],rdx
  408d1b:	mov    QWORD PTR [rbp-0x30],rcx
  408d1f:	mov    DWORD PTR [rbp-0x8],0x0
  408d26:	mov    DWORD PTR [rbp-0x4],0x0
  408d2d:	mov    rcx,QWORD PTR [rbp-0x20]
  408d31:	mov    rdx,QWORD PTR [rbp-0x30]
  408d35:	mov    rsi,QWORD PTR [rbp-0x28]
  408d39:	mov    rax,QWORD PTR [rbp-0x18]
  408d3d:	mov    rdi,rax
  408d40:	call   40841f <flatcc_builder_vector_edit@@Base+0x12>
  408d45:	mov    DWORD PTR [rbp-0x4],eax
  408d48:	mov    eax,DWORD PTR [rbp-0x4]
  408d4b:	test   eax,eax
  408d4d:	jne    408d55 <flatcc_builder_create_union_vector_direct@@Base+0x4e>
  408d4f:	mov    rax,QWORD PTR [rbp-0x8]
  408d53:	jmp    408d8e <flatcc_builder_create_union_vector_direct@@Base+0x87>
  408d55:	mov    rdx,QWORD PTR [rbp-0x30]
  408d59:	mov    rsi,QWORD PTR [rbp-0x20]
  408d5d:	mov    rax,QWORD PTR [rbp-0x18]
  408d61:	mov    r9d,0xffffffff
  408d67:	mov    r8d,0x1
  408d6d:	mov    ecx,0x1
  408d72:	mov    rdi,rax
  408d75:	call   4080b4 <flatcc_builder_create_vector@@Base>
  408d7a:	mov    DWORD PTR [rbp-0x8],eax
  408d7d:	mov    eax,DWORD PTR [rbp-0x8]
  408d80:	test   eax,eax
  408d82:	jne    408d8a <flatcc_builder_create_union_vector_direct@@Base+0x83>
  408d84:	mov    rax,QWORD PTR [rbp-0x8]
  408d88:	jmp    408d8e <flatcc_builder_create_union_vector_direct@@Base+0x87>
  408d8a:	mov    rax,QWORD PTR [rbp-0x8]
  408d8e:	leave  
  408d8f:	ret    

0000000000408d90 <flatcc_builder_start_union_vector@@Base>:
  408d90:	push   rbp
  408d91:	mov    rbp,rsp
  408d94:	sub    rsp,0x10
  408d98:	mov    QWORD PTR [rbp-0x8],rdi
  408d9c:	mov    rax,QWORD PTR [rbp-0x8]
  408da0:	mov    esi,0x4
  408da5:	mov    rdi,rax
  408da8:	call   40577d <flatcc_builder_get_user_frame_ptr@@Base+0x22>
  408dad:	test   eax,eax
  408daf:	je     408db8 <flatcc_builder_start_union_vector@@Base+0x28>
  408db1:	mov    eax,0xffffffff
  408db6:	jmp    408dfa <flatcc_builder_start_union_vector@@Base+0x6a>
  408db8:	mov    rax,QWORD PTR [rbp-0x8]
  408dbc:	mov    rax,QWORD PTR [rax+0x30]
  408dc0:	mov    DWORD PTR [rax+0x10],0x8
  408dc7:	mov    rax,QWORD PTR [rbp-0x8]
  408dcb:	mov    rax,QWORD PTR [rax+0x30]
  408dcf:	mov    DWORD PTR [rax+0x14],0x0
  408dd6:	mov    rax,QWORD PTR [rbp-0x8]
  408dda:	mov    rax,QWORD PTR [rax+0x30]
  408dde:	mov    WORD PTR [rax+0xe],0x7
  408de4:	mov    rax,QWORD PTR [rbp-0x8]
  408de8:	mov    esi,0xfffffffc
  408ded:	mov    rdi,rax
  408df0:	call   404987 <flatcc_builder_default_alloc@@Base+0x16d>
  408df5:	mov    eax,0x0
  408dfa:	leave  
  408dfb:	ret    

0000000000408dfc <flatcc_builder_end_union_vector@@Base>:
  408dfc:	push   rbp
  408dfd:	mov    rbp,rsp
  408e00:	sub    rsp,0x40
  408e04:	mov    QWORD PTR [rbp-0x38],rdi
  408e08:	mov    DWORD PTR [rbp-0x8],0x0
  408e0f:	mov    DWORD PTR [rbp-0x4],0x0
  408e16:	mov    rax,QWORD PTR [rbp-0x38]
  408e1a:	mov    rax,QWORD PTR [rax+0x30]
  408e1e:	movzx  eax,WORD PTR [rax+0xe]
  408e22:	cmp    ax,0x7
  408e26:	je     408e47 <flatcc_builder_end_union_vector@@Base+0x4b>
  408e28:	lea    rcx,[rip+0x4f11]        # 40dd40 <flatcc_builder_padding_base@@Base+0xb80>
  408e2f:	mov    edx,0x651
  408e34:	lea    rsi,[rip+0x4585]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  408e3b:	lea    rdi,[rip+0x4916]        # 40d758 <flatcc_builder_padding_base@@Base+0x598>
  408e42:	call   403070 <__assert_fail@plt>
  408e47:	mov    rax,QWORD PTR [rbp-0x38]
  408e4b:	mov    rdi,rax
  408e4e:	call   408f54 <flatcc_builder_union_vector_count@@Base>
  408e53:	mov    QWORD PTR [rbp-0x28],rax
  408e57:	mov    rax,QWORD PTR [rbp-0x28]
  408e5b:	mov    edx,eax
  408e5d:	mov    eax,edx
  408e5f:	shl    eax,0x2
  408e62:	add    edx,eax
  408e64:	mov    rax,QWORD PTR [rbp-0x38]
  408e68:	mov    esi,edx
  408e6a:	mov    rdi,rax
  408e6d:	call   404a7a <flatcc_builder_default_alloc@@Base+0x260>
  408e72:	mov    QWORD PTR [rbp-0x20],rax
  408e76:	cmp    QWORD PTR [rbp-0x20],0x0
  408e7b:	jne    408e86 <flatcc_builder_end_union_vector@@Base+0x8a>
  408e7d:	mov    rax,QWORD PTR [rbp-0x8]
  408e81:	jmp    408f40 <flatcc_builder_end_union_vector@@Base+0x144>
  408e86:	mov    rax,QWORD PTR [rbp-0x28]
  408e8a:	lea    rdx,[rax*4+0x0]
  408e92:	mov    rax,QWORD PTR [rbp-0x20]
  408e96:	add    rax,rdx
  408e99:	mov    QWORD PTR [rbp-0x18],rax
  408e9d:	mov    rax,QWORD PTR [rbp-0x38]
  408ea1:	mov    rdi,rax
  408ea4:	call   408f42 <flatcc_builder_union_vector_edit@@Base>
  408ea9:	mov    QWORD PTR [rbp-0x10],rax
  408ead:	mov    QWORD PTR [rbp-0x30],0x0
  408eb5:	jmp    408f0a <flatcc_builder_end_union_vector@@Base+0x10e>
  408eb7:	mov    rdx,QWORD PTR [rbp-0x18]
  408ebb:	mov    rax,QWORD PTR [rbp-0x30]
  408ebf:	add    rdx,rax
  408ec2:	mov    rax,QWORD PTR [rbp-0x30]
  408ec6:	lea    rcx,[rax*8+0x0]
  408ece:	mov    rax,QWORD PTR [rbp-0x10]
  408ed2:	add    rax,rcx
  408ed5:	movzx  eax,BYTE PTR [rax]
  408ed8:	mov    BYTE PTR [rdx],al
  408eda:	mov    rax,QWORD PTR [rbp-0x30]
  408ede:	lea    rdx,[rax*4+0x0]
  408ee6:	mov    rax,QWORD PTR [rbp-0x20]
  408eea:	add    rdx,rax
  408eed:	mov    rax,QWORD PTR [rbp-0x30]
  408ef1:	lea    rcx,[rax*8+0x0]
  408ef9:	mov    rax,QWORD PTR [rbp-0x10]
  408efd:	add    rax,rcx
  408f00:	mov    eax,DWORD PTR [rax+0x4]
  408f03:	mov    DWORD PTR [rdx],eax
  408f05:	add    QWORD PTR [rbp-0x30],0x1
  408f0a:	mov    rax,QWORD PTR [rbp-0x30]
  408f0e:	cmp    rax,QWORD PTR [rbp-0x28]
  408f12:	jb     408eb7 <flatcc_builder_end_union_vector@@Base+0xbb>
  408f14:	mov    rcx,QWORD PTR [rbp-0x28]
  408f18:	mov    rdx,QWORD PTR [rbp-0x20]
  408f1c:	mov    rsi,QWORD PTR [rbp-0x18]
  408f20:	mov    rax,QWORD PTR [rbp-0x38]
  408f24:	mov    rdi,rax
  408f27:	call   408d07 <flatcc_builder_create_union_vector_direct@@Base>
  408f2c:	mov    QWORD PTR [rbp-0x8],rax
  408f30:	mov    rax,QWORD PTR [rbp-0x38]
  408f34:	mov    rdi,rax
  408f37:	call   405955 <flatcc_builder_get_user_frame_ptr@@Base+0x1fa>
  408f3c:	mov    rax,QWORD PTR [rbp-0x8]
  408f40:	leave  
  408f41:	ret    

0000000000408f42 <flatcc_builder_union_vector_edit@@Base>:
  408f42:	push   rbp
  408f43:	mov    rbp,rsp
  408f46:	mov    QWORD PTR [rbp-0x8],rdi
  408f4a:	mov    rax,QWORD PTR [rbp-0x8]
  408f4e:	mov    rax,QWORD PTR [rax+0x18]
  408f52:	pop    rbp
  408f53:	ret    

0000000000408f54 <flatcc_builder_union_vector_count@@Base>:
  408f54:	push   rbp
  408f55:	mov    rbp,rsp
  408f58:	mov    QWORD PTR [rbp-0x8],rdi
  408f5c:	mov    rax,QWORD PTR [rbp-0x8]
  408f60:	mov    rax,QWORD PTR [rax+0x30]
  408f64:	mov    eax,DWORD PTR [rax+0x14]
  408f67:	mov    eax,eax
  408f69:	pop    rbp
  408f6a:	ret    

0000000000408f6b <flatcc_builder_extend_union_vector@@Base>:
  408f6b:	push   rbp
  408f6c:	mov    rbp,rsp
  408f6f:	sub    rsp,0x10
  408f73:	mov    QWORD PTR [rbp-0x8],rdi
  408f77:	mov    QWORD PTR [rbp-0x10],rsi
  408f7b:	mov    rax,QWORD PTR [rbp-0x10]
  408f7f:	mov    ecx,eax
  408f81:	mov    rax,QWORD PTR [rbp-0x8]
  408f85:	mov    edx,0x1fffffff
  408f8a:	mov    esi,ecx
  408f8c:	mov    rdi,rax
  408f8f:	call   4069d1 <flatcc_builder_end_struct@@Base+0x8e>
  408f94:	test   eax,eax
  408f96:	je     408f9f <flatcc_builder_extend_union_vector@@Base+0x34>
  408f98:	mov    eax,0x0
  408f9d:	jmp    408fb8 <flatcc_builder_extend_union_vector@@Base+0x4d>
  408f9f:	mov    rax,QWORD PTR [rbp-0x10]
  408fa3:	lea    edx,[rax*8+0x0]
  408faa:	mov    rax,QWORD PTR [rbp-0x8]
  408fae:	mov    esi,edx
  408fb0:	mov    rdi,rax
  408fb3:	call   404a7a <flatcc_builder_default_alloc@@Base+0x260>
  408fb8:	leave  
  408fb9:	ret    

0000000000408fba <flatcc_builder_truncate_union_vector@@Base>:
  408fba:	push   rbp
  408fbb:	mov    rbp,rsp
  408fbe:	sub    rsp,0x10
  408fc2:	mov    QWORD PTR [rbp-0x8],rdi
  408fc6:	mov    QWORD PTR [rbp-0x10],rsi
  408fca:	mov    rax,QWORD PTR [rbp-0x8]
  408fce:	mov    rax,QWORD PTR [rax+0x30]
  408fd2:	movzx  eax,WORD PTR [rax+0xe]
  408fd6:	cmp    ax,0x7
  408fda:	je     408ffb <flatcc_builder_truncate_union_vector@@Base+0x41>
  408fdc:	lea    rcx,[rip+0x4d7d]        # 40dd60 <flatcc_builder_padding_base@@Base+0xba0>
  408fe3:	mov    edx,0x681
  408fe8:	lea    rsi,[rip+0x43d1]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  408fef:	lea    rdi,[rip+0x4762]        # 40d758 <flatcc_builder_padding_base@@Base+0x598>
  408ff6:	call   403070 <__assert_fail@plt>
  408ffb:	mov    rax,QWORD PTR [rbp-0x8]
  408fff:	mov    rax,QWORD PTR [rax+0x30]
  409003:	mov    eax,DWORD PTR [rax+0x14]
  409006:	mov    rdx,QWORD PTR [rbp-0x10]
  40900a:	cmp    eax,edx
  40900c:	jae    409047 <flatcc_builder_truncate_union_vector@@Base+0x8d>
  40900e:	mov    rax,QWORD PTR [rbp-0x8]
  409012:	mov    rax,QWORD PTR [rax+0x30]
  409016:	mov    eax,DWORD PTR [rax+0x14]
  409019:	mov    rdx,QWORD PTR [rbp-0x10]
  40901d:	cmp    eax,edx
  40901f:	jae    409040 <flatcc_builder_truncate_union_vector@@Base+0x86>
  409021:	lea    rcx,[rip+0x4d38]        # 40dd60 <flatcc_builder_padding_base@@Base+0xba0>
  409028:	mov    edx,0x682
  40902d:	lea    rsi,[rip+0x438c]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  409034:	lea    rdi,[rip+0x45cd]        # 40d608 <flatcc_builder_padding_base@@Base+0x448>
  40903b:	call   403070 <__assert_fail@plt>
  409040:	mov    eax,0xffffffff
  409045:	jmp    409088 <flatcc_builder_truncate_union_vector@@Base+0xce>
  409047:	mov    rax,QWORD PTR [rbp-0x8]
  40904b:	mov    rax,QWORD PTR [rax+0x30]
  40904f:	mov    rdx,QWORD PTR [rbp-0x8]
  409053:	mov    rdx,QWORD PTR [rdx+0x30]
  409057:	mov    edx,DWORD PTR [rdx+0x14]
  40905a:	mov    rcx,QWORD PTR [rbp-0x10]
  40905e:	sub    edx,ecx
  409060:	mov    DWORD PTR [rax+0x14],edx
  409063:	mov    rax,QWORD PTR [rbp-0x8]
  409067:	mov    rax,QWORD PTR [rax+0x30]
  40906b:	mov    eax,DWORD PTR [rax+0x10]
  40906e:	mov    rdx,QWORD PTR [rbp-0x10]
  409072:	imul   edx,eax
  409075:	mov    rax,QWORD PTR [rbp-0x8]
  409079:	mov    esi,edx
  40907b:	mov    rdi,rax
  40907e:	call   404af7 <flatcc_builder_default_alloc@@Base+0x2dd>
  409083:	mov    eax,0x0
  409088:	leave  
  409089:	ret    

000000000040908a <flatcc_builder_union_vector_push@@Base>:
  40908a:	push   rbp
  40908b:	mov    rbp,rsp
  40908e:	sub    rsp,0x20
  409092:	mov    QWORD PTR [rbp-0x18],rdi
  409096:	mov    QWORD PTR [rbp-0x20],rsi
  40909a:	mov    rax,QWORD PTR [rbp-0x18]
  40909e:	mov    rax,QWORD PTR [rax+0x30]
  4090a2:	movzx  eax,WORD PTR [rax+0xe]
  4090a6:	cmp    ax,0x7
  4090aa:	je     4090cb <flatcc_builder_union_vector_push@@Base+0x41>
  4090ac:	lea    rcx,[rip+0x4ced]        # 40dda0 <flatcc_builder_padding_base@@Base+0xbe0>
  4090b3:	mov    edx,0x68d
  4090b8:	lea    rsi,[rip+0x4301]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  4090bf:	lea    rdi,[rip+0x4692]        # 40d758 <flatcc_builder_padding_base@@Base+0x598>
  4090c6:	call   403070 <__assert_fail@plt>
  4090cb:	mov    rax,QWORD PTR [rbp-0x18]
  4090cf:	mov    rax,QWORD PTR [rax+0x30]
  4090d3:	mov    eax,DWORD PTR [rax+0x14]
  4090d6:	cmp    eax,0x1fffffff
  4090db:	jne    4090e4 <flatcc_builder_union_vector_push@@Base+0x5a>
  4090dd:	mov    eax,0x0
  4090e2:	jmp    40912f <flatcc_builder_union_vector_push@@Base+0xa5>
  4090e4:	mov    rax,QWORD PTR [rbp-0x18]
  4090e8:	mov    rax,QWORD PTR [rax+0x30]
  4090ec:	mov    rdx,QWORD PTR [rbp-0x18]
  4090f0:	mov    rdx,QWORD PTR [rdx+0x30]
  4090f4:	mov    edx,DWORD PTR [rdx+0x14]
  4090f7:	add    edx,0x1
  4090fa:	mov    DWORD PTR [rax+0x14],edx
  4090fd:	mov    rax,QWORD PTR [rbp-0x18]
  409101:	mov    esi,0x8
  409106:	mov    rdi,rax
  409109:	call   404a7a <flatcc_builder_default_alloc@@Base+0x260>
  40910e:	mov    QWORD PTR [rbp-0x8],rax
  409112:	cmp    QWORD PTR [rbp-0x8],0x0
  409117:	jne    409120 <flatcc_builder_union_vector_push@@Base+0x96>
  409119:	mov    eax,0x0
  40911e:	jmp    40912f <flatcc_builder_union_vector_push@@Base+0xa5>
  409120:	mov    rax,QWORD PTR [rbp-0x8]
  409124:	mov    rdx,QWORD PTR [rbp-0x20]
  409128:	mov    QWORD PTR [rax],rdx
  40912b:	mov    rax,QWORD PTR [rbp-0x8]
  40912f:	leave  
  409130:	ret    

0000000000409131 <flatcc_builder_append_union_vector@@Base>:
  409131:	push   rbp
  409132:	mov    rbp,rsp
  409135:	sub    rsp,0x20
  409139:	mov    QWORD PTR [rbp-0x8],rdi
  40913d:	mov    QWORD PTR [rbp-0x10],rsi
  409141:	mov    QWORD PTR [rbp-0x18],rdx
  409145:	mov    rax,QWORD PTR [rbp-0x8]
  409149:	mov    rax,QWORD PTR [rax+0x30]
  40914d:	movzx  eax,WORD PTR [rax+0xe]
  409151:	cmp    ax,0x7
  409155:	je     409176 <flatcc_builder_append_union_vector@@Base+0x45>
  409157:	lea    rcx,[rip+0x4c82]        # 40dde0 <flatcc_builder_padding_base@@Base+0xc20>
  40915e:	mov    edx,0x69c
  409163:	lea    rsi,[rip+0x4256]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  40916a:	lea    rdi,[rip+0x45e7]        # 40d758 <flatcc_builder_padding_base@@Base+0x598>
  409171:	call   403070 <__assert_fail@plt>
  409176:	mov    rax,QWORD PTR [rbp-0x18]
  40917a:	mov    ecx,eax
  40917c:	mov    rax,QWORD PTR [rbp-0x8]
  409180:	mov    edx,0x1fffffff
  409185:	mov    esi,ecx
  409187:	mov    rdi,rax
  40918a:	call   4069d1 <flatcc_builder_end_struct@@Base+0x8e>
  40918f:	test   eax,eax
  409191:	je     40919a <flatcc_builder_append_union_vector@@Base+0x69>
  409193:	mov    eax,0x0
  409198:	jmp    4091b8 <flatcc_builder_append_union_vector@@Base+0x87>
  40919a:	mov    rax,QWORD PTR [rbp-0x18]
  40919e:	lea    edx,[rax*8+0x0]
  4091a5:	mov    rcx,QWORD PTR [rbp-0x10]
  4091a9:	mov    rax,QWORD PTR [rbp-0x8]
  4091ad:	mov    rsi,rcx
  4091b0:	mov    rdi,rax
  4091b3:	call   404b43 <flatcc_builder_default_alloc@@Base+0x329>
  4091b8:	leave  
  4091b9:	ret    

00000000004091ba <flatcc_builder_create_string@@Base>:
  4091ba:	push   rbp
  4091bb:	mov    rbp,rsp
  4091be:	sub    rsp,0xd0
  4091c5:	mov    QWORD PTR [rbp-0xb8],rdi
  4091cc:	mov    QWORD PTR [rbp-0xc0],rsi
  4091d3:	mov    QWORD PTR [rbp-0xc8],rdx
  4091da:	mov    rax,QWORD PTR fs:0x28
  4091e3:	mov    QWORD PTR [rbp-0x8],rax
  4091e7:	xor    eax,eax
  4091e9:	mov    eax,0xffffffff
  4091ee:	cmp    QWORD PTR [rbp-0xc8],rax
  4091f5:	jbe    409201 <flatcc_builder_create_string@@Base+0x47>
  4091f7:	mov    eax,0x0
  4091fc:	jmp    4093a8 <flatcc_builder_create_string@@Base+0x1ee>
  409201:	mov    rax,QWORD PTR [rbp-0xc8]
  409208:	mov    edi,eax
  40920a:	call   404754 <main@@Base+0x16f>
  40920f:	mov    DWORD PTR [rbp-0xa8],eax
  409215:	mov    rax,QWORD PTR [rbp-0xc8]
  40921c:	lea    ecx,[rax+0x1]
  40921f:	mov    rax,QWORD PTR [rbp-0xb8]
  409226:	mov    edx,0x4
  40922b:	mov    esi,ecx
  40922d:	mov    rdi,rax
  409230:	call   405a1c <flatcc_builder_get_user_frame_ptr@@Base+0x2c1>
  409235:	add    eax,0x1
  409238:	mov    DWORD PTR [rbp-0xa4],eax
  40923e:	mov    QWORD PTR [rbp-0xa0],0x0
  409249:	mov    DWORD PTR [rbp-0x98],0x0
  409253:	mov    rax,QWORD PTR [rbp-0xa0]
  40925a:	add    rax,0x4
  40925e:	mov    QWORD PTR [rbp-0xa0],rax
  409265:	mov    eax,DWORD PTR [rbp-0x98]
  40926b:	cdqe   
  40926d:	shl    rax,0x4
  409271:	add    rax,rbp
  409274:	lea    rdx,[rax-0x90]
  40927b:	lea    rax,[rbp-0xa8]
  409282:	mov    QWORD PTR [rdx],rax
  409285:	mov    eax,DWORD PTR [rbp-0x98]
  40928b:	cdqe   
  40928d:	shl    rax,0x4
  409291:	add    rax,rbp
  409294:	sub    rax,0x88
  40929a:	mov    QWORD PTR [rax],0x4
  4092a1:	mov    eax,DWORD PTR [rbp-0x98]
  4092a7:	add    eax,0x1
  4092aa:	mov    DWORD PTR [rbp-0x98],eax
  4092b0:	cmp    QWORD PTR [rbp-0xc8],0x0
  4092b8:	je     409321 <flatcc_builder_create_string@@Base+0x167>
  4092ba:	mov    rdx,QWORD PTR [rbp-0xa0]
  4092c1:	mov    rax,QWORD PTR [rbp-0xc8]
  4092c8:	add    rax,rdx
  4092cb:	mov    QWORD PTR [rbp-0xa0],rax
  4092d2:	mov    eax,DWORD PTR [rbp-0x98]
  4092d8:	cdqe   
  4092da:	shl    rax,0x4
  4092de:	add    rax,rbp
  4092e1:	lea    rdx,[rax-0x90]
  4092e8:	mov    rax,QWORD PTR [rbp-0xc0]
  4092ef:	mov    QWORD PTR [rdx],rax
  4092f2:	mov    eax,DWORD PTR [rbp-0x98]
  4092f8:	cdqe   
  4092fa:	shl    rax,0x4
  4092fe:	add    rax,rbp
  409301:	lea    rdx,[rax-0x88]
  409308:	mov    rax,QWORD PTR [rbp-0xc8]
  40930f:	mov    QWORD PTR [rdx],rax
  409312:	mov    eax,DWORD PTR [rbp-0x98]
  409318:	add    eax,0x1
  40931b:	mov    DWORD PTR [rbp-0x98],eax
  409321:	cmp    DWORD PTR [rbp-0xa4],0x0
  409328:	je     40938f <flatcc_builder_create_string@@Base+0x1d5>
  40932a:	mov    rdx,QWORD PTR [rbp-0xa0]
  409331:	mov    eax,DWORD PTR [rbp-0xa4]
  409337:	add    rax,rdx
  40933a:	mov    QWORD PTR [rbp-0xa0],rax
  409341:	mov    eax,DWORD PTR [rbp-0x98]
  409347:	cdqe   
  409349:	shl    rax,0x4
  40934d:	add    rax,rbp
  409350:	sub    rax,0x90
  409356:	mov    rdx,0x40d1c0
  40935d:	mov    QWORD PTR [rax],rdx
  409360:	mov    edx,DWORD PTR [rbp-0x98]
  409366:	mov    eax,DWORD PTR [rbp-0xa4]
  40936c:	movsxd rdx,edx
  40936f:	shl    rdx,0x4
  409373:	add    rdx,rbp
  409376:	sub    rdx,0x88
  40937d:	mov    QWORD PTR [rdx],rax
  409380:	mov    eax,DWORD PTR [rbp-0x98]
  409386:	add    eax,0x1
  409389:	mov    DWORD PTR [rbp-0x98],eax
  40938f:	lea    rdx,[rbp-0xa0]
  409396:	mov    rax,QWORD PTR [rbp-0xb8]
  40939d:	mov    rsi,rdx
  4093a0:	mov    rdi,rax
  4093a3:	call   405a68 <flatcc_builder_get_user_frame_ptr@@Base+0x30d>
  4093a8:	mov    rcx,QWORD PTR [rbp-0x8]
  4093ac:	xor    rcx,QWORD PTR fs:0x28
  4093b5:	je     4093bc <flatcc_builder_create_string@@Base+0x202>
  4093b7:	call   403060 <__stack_chk_fail@plt>
  4093bc:	leave  
  4093bd:	ret    

00000000004093be <flatcc_builder_create_string_str@@Base>:
  4093be:	push   rbp
  4093bf:	mov    rbp,rsp
  4093c2:	sub    rsp,0x10
  4093c6:	mov    QWORD PTR [rbp-0x8],rdi
  4093ca:	mov    QWORD PTR [rbp-0x10],rsi
  4093ce:	mov    rax,QWORD PTR [rbp-0x10]
  4093d2:	mov    rdi,rax
  4093d5:	call   403050 <strlen@plt>
  4093da:	mov    rdx,rax
  4093dd:	mov    rcx,QWORD PTR [rbp-0x10]
  4093e1:	mov    rax,QWORD PTR [rbp-0x8]
  4093e5:	mov    rsi,rcx
  4093e8:	mov    rdi,rax
  4093eb:	call   4091ba <flatcc_builder_create_string@@Base>
  4093f0:	leave  
  4093f1:	ret    

00000000004093f2 <flatcc_builder_create_string_strn@@Base>:
  4093f2:	push   rbp
  4093f3:	mov    rbp,rsp
  4093f6:	sub    rsp,0x20
  4093fa:	mov    QWORD PTR [rbp-0x8],rdi
  4093fe:	mov    QWORD PTR [rbp-0x10],rsi
  409402:	mov    QWORD PTR [rbp-0x18],rdx
  409406:	mov    rdx,QWORD PTR [rbp-0x18]
  40940a:	mov    rax,QWORD PTR [rbp-0x10]
  40940e:	mov    rsi,rdx
  409411:	mov    rdi,rax
  409414:	call   4047d4 <main@@Base+0x1ef>
  409419:	mov    rdx,rax
  40941c:	mov    rcx,QWORD PTR [rbp-0x10]
  409420:	mov    rax,QWORD PTR [rbp-0x8]
  409424:	mov    rsi,rcx
  409427:	mov    rdi,rax
  40942a:	call   4091ba <flatcc_builder_create_string@@Base>
  40942f:	leave  
  409430:	ret    

0000000000409431 <flatcc_builder_end_string@@Base>:
  409431:	push   rbp
  409432:	mov    rbp,rsp
  409435:	sub    rsp,0x20
  409439:	mov    QWORD PTR [rbp-0x18],rdi
  40943d:	mov    rax,QWORD PTR [rbp-0x18]
  409441:	mov    rax,QWORD PTR [rax+0x30]
  409445:	movzx  eax,WORD PTR [rax+0xe]
  409449:	cmp    ax,0x6
  40944d:	je     40946e <flatcc_builder_end_string@@Base+0x3d>
  40944f:	lea    rcx,[rip+0x49ba]        # 40de10 <flatcc_builder_padding_base@@Base+0xc50>
  409456:	mov    edx,0x6c4
  40945b:	lea    rsi,[rip+0x3f5e]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  409462:	lea    rdi,[rip+0x4147]        # 40d5b0 <flatcc_builder_padding_base@@Base+0x3f0>
  409469:	call   403070 <__assert_fail@plt>
  40946e:	mov    rax,QWORD PTR [rbp-0x18]
  409472:	mov    rax,QWORD PTR [rax+0x30]
  409476:	mov    edx,DWORD PTR [rax+0x14]
  409479:	mov    rax,QWORD PTR [rbp-0x18]
  40947d:	mov    eax,DWORD PTR [rax+0x20]
  409480:	cmp    edx,eax
  409482:	je     4094a3 <flatcc_builder_end_string@@Base+0x72>
  409484:	lea    rcx,[rip+0x4985]        # 40de10 <flatcc_builder_padding_base@@Base+0xc50>
  40948b:	mov    edx,0x6c5
  409490:	lea    rsi,[rip+0x3f29]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  409497:	lea    rdi,[rip+0x42f2]        # 40d790 <flatcc_builder_padding_base@@Base+0x5d0>
  40949e:	call   403070 <__assert_fail@plt>
  4094a3:	mov    rax,QWORD PTR [rbp-0x18]
  4094a7:	mov    eax,DWORD PTR [rax+0x20]
  4094aa:	mov    edx,eax
  4094ac:	mov    rax,QWORD PTR [rbp-0x18]
  4094b0:	mov    rcx,QWORD PTR [rax+0x18]
  4094b4:	mov    rax,QWORD PTR [rbp-0x18]
  4094b8:	mov    rsi,rcx
  4094bb:	mov    rdi,rax
  4094be:	call   4091ba <flatcc_builder_create_string@@Base>
  4094c3:	mov    DWORD PTR [rbp-0x4],eax
  4094c6:	cmp    DWORD PTR [rbp-0x4],0x0
  4094ca:	jne    4094d3 <flatcc_builder_end_string@@Base+0xa2>
  4094cc:	mov    eax,0x0
  4094d1:	jmp    4094e2 <flatcc_builder_end_string@@Base+0xb1>
  4094d3:	mov    rax,QWORD PTR [rbp-0x18]
  4094d7:	mov    rdi,rax
  4094da:	call   405955 <flatcc_builder_get_user_frame_ptr@@Base+0x1fa>
  4094df:	mov    eax,DWORD PTR [rbp-0x4]
  4094e2:	leave  
  4094e3:	ret    

00000000004094e4 <flatcc_builder_string_edit@@Base>:
  4094e4:	push   rbp
  4094e5:	mov    rbp,rsp
  4094e8:	mov    QWORD PTR [rbp-0x8],rdi
  4094ec:	mov    rax,QWORD PTR [rbp-0x8]
  4094f0:	mov    rax,QWORD PTR [rax+0x18]
  4094f4:	pop    rbp
  4094f5:	ret    

00000000004094f6 <flatcc_builder_string_len@@Base>:
  4094f6:	push   rbp
  4094f7:	mov    rbp,rsp
  4094fa:	mov    QWORD PTR [rbp-0x8],rdi
  4094fe:	mov    rax,QWORD PTR [rbp-0x8]
  409502:	mov    rax,QWORD PTR [rax+0x30]
  409506:	mov    eax,DWORD PTR [rax+0x14]
  409509:	mov    eax,eax
  40950b:	pop    rbp
  40950c:	ret    

000000000040950d <flatcc_builder_table_add@@Base>:
  40950d:	push   rbp
  40950e:	mov    rbp,rsp
  409511:	sub    rsp,0x20
  409515:	mov    QWORD PTR [rbp-0x8],rdi
  409519:	mov    DWORD PTR [rbp-0xc],esi
  40951c:	mov    QWORD PTR [rbp-0x18],rdx
  409520:	mov    eax,ecx
  409522:	mov    WORD PTR [rbp-0x10],ax
  409526:	mov    rax,QWORD PTR [rbp-0x8]
  40952a:	mov    rax,QWORD PTR [rax+0x30]
  40952e:	movzx  eax,WORD PTR [rax+0xe]
  409532:	cmp    ax,0x3
  409536:	je     409557 <flatcc_builder_table_add@@Base+0x4a>
  409538:	lea    rcx,[rip+0x48f1]        # 40de30 <flatcc_builder_padding_base@@Base+0xc70>
  40953f:	mov    edx,0x6ed
  409544:	lea    rsi,[rip+0x3e75]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  40954b:	lea    rdi,[rip+0x4146]        # 40d698 <flatcc_builder_padding_base@@Base+0x4d8>
  409552:	call   403070 <__assert_fail@plt>
  409557:	cmp    DWORD PTR [rbp-0xc],0x0
  40955b:	js     409566 <flatcc_builder_table_add@@Base+0x59>
  40955d:	cmp    DWORD PTR [rbp-0xc],0x7ffc
  409564:	jle    409585 <flatcc_builder_table_add@@Base+0x78>
  409566:	lea    rcx,[rip+0x48c3]        # 40de30 <flatcc_builder_padding_base@@Base+0xc70>
  40956d:	mov    edx,0x6ee
  409572:	lea    rsi,[rip+0x3e47]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  409579:	lea    rdi,[rip+0x4238]        # 40d7b8 <flatcc_builder_padding_base@@Base+0x5f8>
  409580:	call   403070 <__assert_fail@plt>
  409585:	mov    rax,QWORD PTR [rbp-0x8]
  409589:	movzx  eax,WORD PTR [rax+0xea]
  409590:	cmp    ax,WORD PTR [rbp-0x10]
  409594:	jae    4095a5 <flatcc_builder_table_add@@Base+0x98>
  409596:	mov    rax,QWORD PTR [rbp-0x8]
  40959a:	movzx  edx,WORD PTR [rbp-0x10]
  40959e:	mov    WORD PTR [rax+0xea],dx
  4095a5:	mov    rax,QWORD PTR [rbp-0x8]
  4095a9:	mov    rax,QWORD PTR [rax+0x8]
  4095ad:	mov    edx,DWORD PTR [rbp-0xc]
  4095b0:	movsxd rdx,edx
  4095b3:	add    rdx,rdx
  4095b6:	add    rax,rdx
  4095b9:	movzx  eax,WORD PTR [rax]
  4095bc:	test   ax,ax
  4095bf:	je     4095e0 <flatcc_builder_table_add@@Base+0xd3>
  4095c1:	lea    rcx,[rip+0x4868]        # 40de30 <flatcc_builder_padding_base@@Base+0xc70>
  4095c8:	mov    edx,0x6f8
  4095cd:	lea    rsi,[rip+0x3dec]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  4095d4:	lea    rdi,[rip+0x3e45]        # 40d420 <flatcc_builder_padding_base@@Base+0x260>
  4095db:	call   403070 <__assert_fail@plt>
  4095e0:	mov    rax,QWORD PTR [rbp-0x8]
  4095e4:	mov    edx,DWORD PTR [rax+0x14]
  4095e7:	mov    eax,DWORD PTR [rbp-0xc]
  4095ea:	xor    eax,edx
  4095ec:	imul   eax,eax,0x9e3779b1
  4095f2:	mov    rdx,QWORD PTR [rbp-0x18]
  4095f6:	xor    eax,edx
  4095f8:	imul   edx,eax,0x9e3779b1
  4095fe:	mov    rax,QWORD PTR [rbp-0x8]
  409602:	mov    DWORD PTR [rax+0x14],edx
  409605:	mov    eax,DWORD PTR [rbp-0xc]
  409608:	movzx  ecx,ax
  40960b:	movzx  edx,WORD PTR [rbp-0x10]
  40960f:	mov    rax,QWORD PTR [rbp-0x18]
  409613:	mov    esi,eax
  409615:	mov    rax,QWORD PTR [rbp-0x8]
  409619:	mov    rdi,rax
  40961c:	call   404b95 <flatcc_builder_default_alloc@@Base+0x37b>
  409621:	leave  
  409622:	ret    

0000000000409623 <flatcc_builder_table_edit@@Base>:
  409623:	push   rbp
  409624:	mov    rbp,rsp
  409627:	sub    rsp,0x10
  40962b:	mov    QWORD PTR [rbp-0x8],rdi
  40962f:	mov    QWORD PTR [rbp-0x10],rsi
  409633:	mov    rax,QWORD PTR [rbp-0x8]
  409637:	mov    rax,QWORD PTR [rax+0x30]
  40963b:	movzx  eax,WORD PTR [rax+0xe]
  40963f:	cmp    ax,0x3
  409643:	je     409664 <flatcc_builder_table_edit@@Base+0x41>
  409645:	lea    rcx,[rip+0x4804]        # 40de50 <flatcc_builder_padding_base@@Base+0xc90>
  40964c:	mov    edx,0x702
  409651:	lea    rsi,[rip+0x3d68]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  409658:	lea    rdi,[rip+0x4039]        # 40d698 <flatcc_builder_padding_base@@Base+0x4d8>
  40965f:	call   403070 <__assert_fail@plt>
  409664:	mov    rax,QWORD PTR [rbp-0x8]
  409668:	mov    rdx,QWORD PTR [rax+0x18]
  40966c:	mov    rax,QWORD PTR [rbp-0x8]
  409670:	mov    eax,DWORD PTR [rax+0x20]
  409673:	mov    eax,eax
  409675:	sub    rax,QWORD PTR [rbp-0x10]
  409679:	add    rax,rdx
  40967c:	leave  
  40967d:	ret    

000000000040967e <flatcc_builder_table_add_copy@@Base>:
  40967e:	push   rbp
  40967f:	mov    rbp,rsp
  409682:	sub    rsp,0x30
  409686:	mov    QWORD PTR [rbp-0x18],rdi
  40968a:	mov    DWORD PTR [rbp-0x1c],esi
  40968d:	mov    QWORD PTR [rbp-0x28],rdx
  409691:	mov    QWORD PTR [rbp-0x30],rcx
  409695:	mov    eax,r8d
  409698:	mov    WORD PTR [rbp-0x20],ax
  40969c:	movzx  ecx,WORD PTR [rbp-0x20]
  4096a0:	mov    rdx,QWORD PTR [rbp-0x30]
  4096a4:	mov    esi,DWORD PTR [rbp-0x1c]
  4096a7:	mov    rax,QWORD PTR [rbp-0x18]
  4096ab:	mov    rdi,rax
  4096ae:	call   40950d <flatcc_builder_table_add@@Base>
  4096b3:	mov    QWORD PTR [rbp-0x8],rax
  4096b7:	cmp    QWORD PTR [rbp-0x8],0x0
  4096bc:	je     4096d5 <flatcc_builder_table_add_copy@@Base+0x57>
  4096be:	mov    rdx,QWORD PTR [rbp-0x30]
  4096c2:	mov    rcx,QWORD PTR [rbp-0x28]
  4096c6:	mov    rax,QWORD PTR [rbp-0x8]
  4096ca:	mov    rsi,rcx
  4096cd:	mov    rdi,rax
  4096d0:	call   4030b0 <memcpy@plt>
  4096d5:	mov    rax,QWORD PTR [rbp-0x8]
  4096d9:	leave  
  4096da:	ret    

00000000004096db <flatcc_builder_table_add_offset@@Base>:
  4096db:	push   rbp
  4096dc:	mov    rbp,rsp
  4096df:	sub    rsp,0x10
  4096e3:	mov    QWORD PTR [rbp-0x8],rdi
  4096e7:	mov    DWORD PTR [rbp-0xc],esi
  4096ea:	mov    rax,QWORD PTR [rbp-0x8]
  4096ee:	mov    rax,QWORD PTR [rax+0x30]
  4096f2:	movzx  eax,WORD PTR [rax+0xe]
  4096f6:	cmp    ax,0x3
  4096fa:	je     40971b <flatcc_builder_table_add_offset@@Base+0x40>
  4096fc:	lea    rcx,[rip+0x477d]        # 40de80 <flatcc_builder_padding_base@@Base+0xcc0>
  409703:	mov    edx,0x713
  409708:	lea    rsi,[rip+0x3cb1]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  40970f:	lea    rdi,[rip+0x3f82]        # 40d698 <flatcc_builder_padding_base@@Base+0x4d8>
  409716:	call   403070 <__assert_fail@plt>
  40971b:	cmp    DWORD PTR [rbp-0xc],0x0
  40971f:	js     40972a <flatcc_builder_table_add_offset@@Base+0x4f>
  409721:	cmp    DWORD PTR [rbp-0xc],0x7ffc
  409728:	jle    409749 <flatcc_builder_table_add_offset@@Base+0x6e>
  40972a:	lea    rcx,[rip+0x474f]        # 40de80 <flatcc_builder_padding_base@@Base+0xcc0>
  409731:	mov    edx,0x714
  409736:	lea    rsi,[rip+0x3c83]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  40973d:	lea    rdi,[rip+0x4074]        # 40d7b8 <flatcc_builder_padding_base@@Base+0x5f8>
  409744:	call   403070 <__assert_fail@plt>
  409749:	mov    rax,QWORD PTR [rbp-0x8]
  40974d:	mov    rax,QWORD PTR [rax+0x8]
  409751:	mov    edx,DWORD PTR [rbp-0xc]
  409754:	movsxd rdx,edx
  409757:	add    rdx,rdx
  40975a:	add    rax,rdx
  40975d:	movzx  eax,WORD PTR [rax]
  409760:	test   ax,ax
  409763:	je     409784 <flatcc_builder_table_add_offset@@Base+0xa9>
  409765:	lea    rcx,[rip+0x4714]        # 40de80 <flatcc_builder_padding_base@@Base+0xcc0>
  40976c:	mov    edx,0x71b
  409771:	lea    rsi,[rip+0x3c48]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  409778:	lea    rdi,[rip+0x3ca1]        # 40d420 <flatcc_builder_padding_base@@Base+0x260>
  40977f:	call   403070 <__assert_fail@plt>
  409784:	mov    rax,QWORD PTR [rbp-0x8]
  409788:	mov    edx,DWORD PTR [rax+0x14]
  40978b:	mov    eax,DWORD PTR [rbp-0xc]
  40978e:	xor    eax,edx
  409790:	imul   eax,eax,0x9e3779b1
  409796:	xor    eax,0x4
  409799:	imul   edx,eax,0x9e3779b1
  40979f:	mov    rax,QWORD PTR [rbp-0x8]
  4097a3:	mov    DWORD PTR [rax+0x14],edx
  4097a6:	mov    eax,DWORD PTR [rbp-0xc]
  4097a9:	movzx  edx,ax
  4097ac:	mov    rax,QWORD PTR [rbp-0x8]
  4097b0:	mov    esi,edx
  4097b2:	mov    rdi,rax
  4097b5:	call   404c5d <flatcc_builder_default_alloc@@Base+0x443>
  4097ba:	leave  
  4097bb:	ret    

00000000004097bc <flatcc_builder_push_buffer_alignment@@Base>:
  4097bc:	push   rbp
  4097bd:	mov    rbp,rsp
  4097c0:	mov    QWORD PTR [rbp-0x18],rdi
  4097c4:	mov    rax,QWORD PTR [rbp-0x18]
  4097c8:	movzx  eax,WORD PTR [rax+0xe8]
  4097cf:	mov    WORD PTR [rbp-0x2],ax
  4097d3:	mov    rax,QWORD PTR [rbp-0x18]
  4097d7:	mov    WORD PTR [rax+0xe8],0x4
  4097e0:	movzx  eax,WORD PTR [rbp-0x2]
  4097e4:	pop    rbp
  4097e5:	ret    

00000000004097e6 <flatcc_builder_pop_buffer_alignment@@Base>:
  4097e6:	push   rbp
  4097e7:	mov    rbp,rsp
  4097ea:	sub    rsp,0x10
  4097ee:	mov    QWORD PTR [rbp-0x8],rdi
  4097f2:	mov    eax,esi
  4097f4:	mov    WORD PTR [rbp-0xc],ax
  4097f8:	movzx  edx,WORD PTR [rbp-0xc]
  4097fc:	mov    rax,QWORD PTR [rbp-0x8]
  409800:	mov    esi,edx
  409802:	mov    rdi,rax
  409805:	call   405464 <flatcc_builder_clear@@Base+0x96>
  40980a:	nop
  40980b:	leave  
  40980c:	ret    

000000000040980d <flatcc_builder_get_buffer_alignment@@Base>:
  40980d:	push   rbp
  40980e:	mov    rbp,rsp
  409811:	mov    QWORD PTR [rbp-0x8],rdi
  409815:	mov    rax,QWORD PTR [rbp-0x8]
  409819:	movzx  eax,WORD PTR [rax+0xe8]
  409820:	pop    rbp
  409821:	ret    

0000000000409822 <flatcc_builder_set_vtable_clustering@@Base>:
  409822:	push   rbp
  409823:	mov    rbp,rsp
  409826:	mov    QWORD PTR [rbp-0x8],rdi
  40982a:	mov    DWORD PTR [rbp-0xc],esi
  40982d:	cmp    DWORD PTR [rbp-0xc],0x0
  409831:	sete   al
  409834:	movzx  edx,al
  409837:	mov    rax,QWORD PTR [rbp-0x8]
  40983b:	mov    DWORD PTR [rax+0x124],edx
  409841:	nop
  409842:	pop    rbp
  409843:	ret    

0000000000409844 <flatcc_builder_set_block_align@@Base>:
  409844:	push   rbp
  409845:	mov    rbp,rsp
  409848:	mov    QWORD PTR [rbp-0x8],rdi
  40984c:	mov    eax,esi
  40984e:	mov    WORD PTR [rbp-0xc],ax
  409852:	mov    rax,QWORD PTR [rbp-0x8]
  409856:	movzx  edx,WORD PTR [rbp-0xc]
  40985a:	mov    WORD PTR [rax+0xec],dx
  409861:	nop
  409862:	pop    rbp
  409863:	ret    

0000000000409864 <flatcc_builder_get_level@@Base>:
  409864:	push   rbp
  409865:	mov    rbp,rsp
  409868:	mov    QWORD PTR [rbp-0x8],rdi
  40986c:	mov    rax,QWORD PTR [rbp-0x8]
  409870:	mov    eax,DWORD PTR [rax+0x104]
  409876:	pop    rbp
  409877:	ret    

0000000000409878 <flatcc_builder_set_max_level@@Base>:
  409878:	push   rbp
  409879:	mov    rbp,rsp
  40987c:	mov    QWORD PTR [rbp-0x8],rdi
  409880:	mov    DWORD PTR [rbp-0xc],esi
  409883:	mov    rax,QWORD PTR [rbp-0x8]
  409887:	mov    edx,DWORD PTR [rbp-0xc]
  40988a:	mov    DWORD PTR [rax+0x120],edx
  409890:	mov    rax,QWORD PTR [rbp-0x8]
  409894:	mov    edx,DWORD PTR [rax+0x108]
  40989a:	mov    rax,QWORD PTR [rbp-0x8]
  40989e:	mov    eax,DWORD PTR [rax+0x120]
  4098a4:	cmp    edx,eax
  4098a6:	jge    4098bc <flatcc_builder_set_max_level@@Base+0x44>
  4098a8:	mov    rax,QWORD PTR [rbp-0x8]
  4098ac:	mov    edx,DWORD PTR [rax+0x120]
  4098b2:	mov    rax,QWORD PTR [rbp-0x8]
  4098b6:	mov    DWORD PTR [rax+0x108],edx
  4098bc:	nop
  4098bd:	pop    rbp
  4098be:	ret    

00000000004098bf <flatcc_builder_get_buffer_size@@Base>:
  4098bf:	push   rbp
  4098c0:	mov    rbp,rsp
  4098c3:	mov    QWORD PTR [rbp-0x8],rdi
  4098c7:	mov    rax,QWORD PTR [rbp-0x8]
  4098cb:	mov    edx,DWORD PTR [rax+0xf4]
  4098d1:	mov    rax,QWORD PTR [rbp-0x8]
  4098d5:	mov    eax,DWORD PTR [rax+0xf0]
  4098db:	sub    edx,eax
  4098dd:	mov    eax,edx
  4098df:	cdqe   
  4098e1:	pop    rbp
  4098e2:	ret    

00000000004098e3 <flatcc_builder_get_buffer_start@@Base>:
  4098e3:	push   rbp
  4098e4:	mov    rbp,rsp
  4098e7:	mov    QWORD PTR [rbp-0x8],rdi
  4098eb:	mov    rax,QWORD PTR [rbp-0x8]
  4098ef:	mov    eax,DWORD PTR [rax+0xf0]
  4098f5:	pop    rbp
  4098f6:	ret    

00000000004098f7 <flatcc_builder_get_buffer_end@@Base>:
  4098f7:	push   rbp
  4098f8:	mov    rbp,rsp
  4098fb:	mov    QWORD PTR [rbp-0x8],rdi
  4098ff:	mov    rax,QWORD PTR [rbp-0x8]
  409903:	mov    eax,DWORD PTR [rax+0xf4]
  409909:	pop    rbp
  40990a:	ret    

000000000040990b <flatcc_builder_set_vtable_cache_limit@@Base>:
  40990b:	push   rbp
  40990c:	mov    rbp,rsp
  40990f:	mov    QWORD PTR [rbp-0x8],rdi
  409913:	mov    QWORD PTR [rbp-0x10],rsi
  409917:	mov    rax,QWORD PTR [rbp-0x8]
  40991b:	mov    rdx,QWORD PTR [rbp-0x10]
  40991f:	mov    QWORD PTR [rax+0x118],rdx
  409926:	nop
  409927:	pop    rbp
  409928:	ret    

0000000000409929 <flatcc_builder_set_identifier@@Base>:
  409929:	push   rbp
  40992a:	mov    rbp,rsp
  40992d:	mov    QWORD PTR [rbp-0x8],rdi
  409931:	mov    QWORD PTR [rbp-0x10],rsi
  409935:	cmp    QWORD PTR [rbp-0x10],0x0
  40993a:	je     409942 <flatcc_builder_set_identifier@@Base+0x19>
  40993c:	mov    rax,QWORD PTR [rbp-0x10]
  409940:	jmp    409949 <flatcc_builder_set_identifier@@Base+0x20>
  409942:	mov    rax,0x40d1c0
  409949:	mov    rdx,QWORD PTR [rbp-0x8]
  40994d:	add    rdx,0x110
  409954:	mov    eax,DWORD PTR [rax]
  409956:	mov    DWORD PTR [rdx],eax
  409958:	nop
  409959:	pop    rbp
  40995a:	ret    

000000000040995b <flatcc_builder_get_type@@Base>:
  40995b:	push   rbp
  40995c:	mov    rbp,rsp
  40995f:	mov    QWORD PTR [rbp-0x8],rdi
  409963:	mov    rax,QWORD PTR [rbp-0x8]
  409967:	mov    rax,QWORD PTR [rax+0x30]
  40996b:	test   rax,rax
  40996e:	je     409981 <flatcc_builder_get_type@@Base+0x26>
  409970:	mov    rax,QWORD PTR [rbp-0x8]
  409974:	mov    rax,QWORD PTR [rax+0x30]
  409978:	movzx  eax,WORD PTR [rax+0xe]
  40997c:	movzx  eax,ax
  40997f:	jmp    409986 <flatcc_builder_get_type@@Base+0x2b>
  409981:	mov    eax,0x0
  409986:	pop    rbp
  409987:	ret    

0000000000409988 <flatcc_builder_get_type_at@@Base>:
  409988:	push   rbp
  409989:	mov    rbp,rsp
  40998c:	mov    QWORD PTR [rbp-0x8],rdi
  409990:	mov    DWORD PTR [rbp-0xc],esi
  409993:	cmp    DWORD PTR [rbp-0xc],0x0
  409997:	jle    4099a8 <flatcc_builder_get_type_at@@Base+0x20>
  409999:	mov    rax,QWORD PTR [rbp-0x8]
  40999d:	mov    eax,DWORD PTR [rax+0x104]
  4099a3:	cmp    eax,DWORD PTR [rbp-0xc]
  4099a6:	jge    4099af <flatcc_builder_get_type_at@@Base+0x27>
  4099a8:	mov    eax,0x0
  4099ad:	jmp    4099e3 <flatcc_builder_get_type_at@@Base+0x5b>
  4099af:	mov    rax,QWORD PTR [rbp-0x8]
  4099b3:	mov    rcx,QWORD PTR [rax+0x30]
  4099b7:	mov    rax,QWORD PTR [rbp-0x8]
  4099bb:	mov    eax,DWORD PTR [rax+0x104]
  4099c1:	mov    edx,DWORD PTR [rbp-0xc]
  4099c4:	sub    edx,eax
  4099c6:	mov    eax,edx
  4099c8:	movsxd rdx,eax
  4099cb:	mov    rax,rdx
  4099ce:	shl    rax,0x3
  4099d2:	add    rax,rdx
  4099d5:	shl    rax,0x2
  4099d9:	add    rax,rcx
  4099dc:	movzx  eax,WORD PTR [rax+0xe]
  4099e0:	movzx  eax,ax
  4099e3:	pop    rbp
  4099e4:	ret    

00000000004099e5 <flatcc_builder_get_direct_buffer@@Base>:
  4099e5:	push   rbp
  4099e6:	mov    rbp,rsp
  4099e9:	sub    rsp,0x10
  4099ed:	mov    QWORD PTR [rbp-0x8],rdi
  4099f1:	mov    QWORD PTR [rbp-0x10],rsi
  4099f5:	mov    rax,QWORD PTR [rbp-0x8]
  4099f9:	mov    eax,DWORD PTR [rax+0x128]
  4099ff:	test   eax,eax
  409a01:	je     409a1f <flatcc_builder_get_direct_buffer@@Base+0x3a>
  409a03:	mov    rax,QWORD PTR [rbp-0x8]
  409a07:	lea    rdx,[rax+0x130]
  409a0e:	mov    rax,QWORD PTR [rbp-0x10]
  409a12:	mov    rsi,rax
  409a15:	mov    rdi,rdx
  409a18:	call   40477b <main@@Base+0x196>
  409a1d:	jmp    409a36 <flatcc_builder_get_direct_buffer@@Base+0x51>
  409a1f:	cmp    QWORD PTR [rbp-0x10],0x0
  409a24:	je     409a31 <flatcc_builder_get_direct_buffer@@Base+0x4c>
  409a26:	mov    rax,QWORD PTR [rbp-0x10]
  409a2a:	mov    QWORD PTR [rax],0x0
  409a31:	mov    eax,0x0
  409a36:	leave  
  409a37:	ret    

0000000000409a38 <flatcc_builder_copy_buffer@@Base>:
  409a38:	push   rbp
  409a39:	mov    rbp,rsp
  409a3c:	sub    rsp,0x20
  409a40:	mov    QWORD PTR [rbp-0x8],rdi
  409a44:	mov    QWORD PTR [rbp-0x10],rsi
  409a48:	mov    QWORD PTR [rbp-0x18],rdx
  409a4c:	mov    rax,QWORD PTR [rbp-0x8]
  409a50:	mov    eax,DWORD PTR [rax+0x128]
  409a56:	test   eax,eax
  409a58:	jne    409a61 <flatcc_builder_copy_buffer@@Base+0x29>
  409a5a:	mov    eax,0x0
  409a5f:	jmp    409aad <flatcc_builder_copy_buffer@@Base+0x75>
  409a61:	mov    rax,QWORD PTR [rbp-0x8]
  409a65:	lea    rcx,[rax+0x130]
  409a6c:	mov    rdx,QWORD PTR [rbp-0x18]
  409a70:	mov    rax,QWORD PTR [rbp-0x10]
  409a74:	mov    rsi,rax
  409a77:	mov    rdi,rcx
  409a7a:	call   40a6aa <flatcc_emitter_copy_buffer@@Base>
  409a7f:	mov    QWORD PTR [rbp-0x10],rax
  409a83:	cmp    QWORD PTR [rbp-0x10],0x0
  409a88:	jne    409aa9 <flatcc_builder_copy_buffer@@Base+0x71>
  409a8a:	lea    rcx,[rip+0x440f]        # 40dea0 <flatcc_builder_padding_base@@Base+0xce0>
  409a91:	mov    edx,0x786
  409a96:	lea    rsi,[rip+0x3923]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  409a9d:	lea    rdi,[rip+0x3d58]        # 40d7fc <flatcc_builder_padding_base@@Base+0x63c>
  409aa4:	call   403070 <__assert_fail@plt>
  409aa9:	mov    rax,QWORD PTR [rbp-0x10]
  409aad:	leave  
  409aae:	ret    

0000000000409aaf <flatcc_builder_finalize_buffer@@Base>:
  409aaf:	push   rbp
  409ab0:	mov    rbp,rsp
  409ab3:	sub    rsp,0x20
  409ab7:	mov    QWORD PTR [rbp-0x18],rdi
  409abb:	mov    QWORD PTR [rbp-0x20],rsi
  409abf:	mov    rax,QWORD PTR [rbp-0x18]
  409ac3:	mov    rdi,rax
  409ac6:	call   4098bf <flatcc_builder_get_buffer_size@@Base>
  409acb:	mov    QWORD PTR [rbp-0x10],rax
  409acf:	cmp    QWORD PTR [rbp-0x20],0x0
  409ad4:	je     409ae1 <flatcc_builder_finalize_buffer@@Base+0x32>
  409ad6:	mov    rax,QWORD PTR [rbp-0x20]
  409ada:	mov    rdx,QWORD PTR [rbp-0x10]
  409ade:	mov    QWORD PTR [rax],rdx
  409ae1:	mov    rax,QWORD PTR [rbp-0x10]
  409ae5:	mov    rdi,rax
  409ae8:	call   4030c0 <malloc@plt>
  409aed:	mov    QWORD PTR [rbp-0x8],rax
  409af1:	cmp    QWORD PTR [rbp-0x8],0x0
  409af6:	jne    409b17 <flatcc_builder_finalize_buffer@@Base+0x68>
  409af8:	lea    rcx,[rip+0x43c1]        # 40dec0 <flatcc_builder_padding_base@@Base+0xd00>
  409aff:	mov    edx,0x798
  409b04:	lea    rsi,[rip+0x38b5]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  409b0b:	lea    rdi,[rip+0x390e]        # 40d420 <flatcc_builder_padding_base@@Base+0x260>
  409b12:	call   403070 <__assert_fail@plt>
  409b17:	mov    rdx,QWORD PTR [rbp-0x10]
  409b1b:	mov    rcx,QWORD PTR [rbp-0x8]
  409b1f:	mov    rax,QWORD PTR [rbp-0x18]
  409b23:	mov    rsi,rcx
  409b26:	mov    rdi,rax
  409b29:	call   409a38 <flatcc_builder_copy_buffer@@Base>
  409b2e:	test   rax,rax
  409b31:	jne    409b52 <flatcc_builder_finalize_buffer@@Base+0xa3>
  409b33:	lea    rcx,[rip+0x4386]        # 40dec0 <flatcc_builder_padding_base@@Base+0xd00>
  409b3a:	mov    edx,0x79c
  409b3f:	lea    rsi,[rip+0x387a]        # 40d3c0 <flatcc_builder_padding_base@@Base+0x200>
  409b46:	lea    rdi,[rip+0x38d3]        # 40d420 <flatcc_builder_padding_base@@Base+0x260>
  409b4d:	call   403070 <__assert_fail@plt>
  409b52:	cmp    QWORD PTR [rbp-0x8],0x0
  409b57:	jne    409b6b <flatcc_builder_finalize_buffer@@Base+0xbc>
  409b59:	cmp    QWORD PTR [rbp-0x20],0x0
  409b5e:	je     409b6b <flatcc_builder_finalize_buffer@@Base+0xbc>
  409b60:	mov    rax,QWORD PTR [rbp-0x20]
  409b64:	mov    QWORD PTR [rax],0x0
  409b6b:	mov    rax,QWORD PTR [rbp-0x8]
  409b6f:	leave  
  409b70:	ret    

0000000000409b71 <flatcc_builder_finalize_aligned_buffer@@Base>:
  409b71:	push   rbp
  409b72:	mov    rbp,rsp
  409b75:	sub    rsp,0x30
  409b79:	mov    QWORD PTR [rbp-0x28],rdi
  409b7d:	mov    QWORD PTR [rbp-0x30],rsi
  409b81:	mov    rax,QWORD PTR [rbp-0x28]
  409b85:	mov    rdi,rax
  409b88:	call   4098bf <flatcc_builder_get_buffer_size@@Base>
  409b8d:	mov    QWORD PTR [rbp-0x10],rax
  409b91:	cmp    QWORD PTR [rbp-0x30],0x0
  409b96:	je     409ba3 <flatcc_builder_finalize_aligned_buffer@@Base+0x32>
  409b98:	mov    rax,QWORD PTR [rbp-0x30]
  409b9c:	mov    rdx,QWORD PTR [rbp-0x10]
  409ba0:	mov    QWORD PTR [rax],rdx
  409ba3:	mov    rax,QWORD PTR [rbp-0x28]
  409ba7:	mov    rdi,rax
  409baa:	call   40980d <flatcc_builder_get_buffer_alignment@@Base>
  409baf:	movzx  eax,ax
  409bb2:	mov    QWORD PTR [rbp-0x8],rax
  409bb6:	mov    rdx,QWORD PTR [rbp-0x10]
  409bba:	mov    rax,QWORD PTR [rbp-0x8]
  409bbe:	add    rax,rdx
  409bc1:	lea    rdx,[rax-0x1]
  409bc5:	mov    rax,QWORD PTR [rbp-0x8]
  409bc9:	neg    rax
  409bcc:	and    rax,rdx
  409bcf:	mov    QWORD PTR [rbp-0x10],rax
  409bd3:	mov    rdx,QWORD PTR [rbp-0x10]
  409bd7:	mov    rax,QWORD PTR [rbp-0x8]
  409bdb:	mov    rsi,rdx
  409bde:	mov    rdi,rax
  409be1:	call   4046c7 <main@@Base+0xe2>
  409be6:	mov    QWORD PTR [rbp-0x18],rax
  409bea:	cmp    QWORD PTR [rbp-0x18],0x0
  409bef:	je     409c23 <flatcc_builder_finalize_aligned_buffer@@Base+0xb2>
  409bf1:	mov    rdx,QWORD PTR [rbp-0x10]
  409bf5:	mov    rcx,QWORD PTR [rbp-0x18]
  409bf9:	mov    rax,QWORD PTR [rbp-0x28]
  409bfd:	mov    rsi,rcx
  409c00:	mov    rdi,rax
  409c03:	call   409a38 <flatcc_builder_copy_buffer@@Base>
  409c08:	test   rax,rax
  409c0b:	jne    409c24 <flatcc_builder_finalize_aligned_buffer@@Base+0xb3>
  409c0d:	mov    rax,QWORD PTR [rbp-0x18]
  409c11:	mov    rdi,rax
  409c14:	call   403030 <free@plt>
  409c19:	mov    QWORD PTR [rbp-0x18],0x0
  409c21:	jmp    409c24 <flatcc_builder_finalize_aligned_buffer@@Base+0xb3>
  409c23:	nop
  409c24:	cmp    QWORD PTR [rbp-0x18],0x0
  409c29:	jne    409c3d <flatcc_builder_finalize_aligned_buffer@@Base+0xcc>
  409c2b:	cmp    QWORD PTR [rbp-0x30],0x0
  409c30:	je     409c3d <flatcc_builder_finalize_aligned_buffer@@Base+0xcc>
  409c32:	mov    rax,QWORD PTR [rbp-0x30]
  409c36:	mov    QWORD PTR [rax],0x0
  409c3d:	mov    rax,QWORD PTR [rbp-0x18]
  409c41:	leave  
  409c42:	ret    

0000000000409c43 <flatcc_builder_aligned_alloc@@Base>:
  409c43:	push   rbp
  409c44:	mov    rbp,rsp
  409c47:	sub    rsp,0x10
  409c4b:	mov    QWORD PTR [rbp-0x8],rdi
  409c4f:	mov    QWORD PTR [rbp-0x10],rsi
  409c53:	mov    rdx,QWORD PTR [rbp-0x10]
  409c57:	mov    rax,QWORD PTR [rbp-0x8]
  409c5b:	mov    rsi,rdx
  409c5e:	mov    rdi,rax
  409c61:	call   4046c7 <main@@Base+0xe2>
  409c66:	leave  
  409c67:	ret    

0000000000409c68 <flatcc_builder_aligned_free@@Base>:
  409c68:	push   rbp
  409c69:	mov    rbp,rsp
  409c6c:	sub    rsp,0x10
  409c70:	mov    QWORD PTR [rbp-0x8],rdi
  409c74:	mov    rax,QWORD PTR [rbp-0x8]
  409c78:	mov    rdi,rax
  409c7b:	call   403030 <free@plt>
  409c80:	nop
  409c81:	leave  
  409c82:	ret    

0000000000409c83 <flatcc_builder_get_emit_context@@Base>:
  409c83:	push   rbp
  409c84:	mov    rbp,rsp
  409c87:	mov    QWORD PTR [rbp-0x8],rdi
  409c8b:	mov    rax,QWORD PTR [rbp-0x8]
  409c8f:	mov    rax,QWORD PTR [rax+0x38]
  409c93:	pop    rbp
  409c94:	ret    
  409c95:	push   rbp
  409c96:	mov    rbp,rsp
  409c99:	sub    rsp,0x20
  409c9d:	mov    QWORD PTR [rbp-0x18],rdi
  409ca1:	mov    QWORD PTR [rbp-0x8],0x0
  409ca9:	mov    rax,QWORD PTR [rbp-0x18]
  409cad:	mov    rax,QWORD PTR [rax]
  409cb0:	test   rax,rax
  409cb3:	je     409d11 <flatcc_builder_get_emit_context@@Base+0x8e>
  409cb5:	mov    rax,QWORD PTR [rbp-0x18]
  409cb9:	mov    rax,QWORD PTR [rax]
  409cbc:	mov    rdx,QWORD PTR [rax+0xb88]
  409cc3:	mov    rax,QWORD PTR [rbp-0x18]
  409cc7:	mov    rax,QWORD PTR [rax+0x8]
  409ccb:	cmp    rdx,rax
  409cce:	je     409d11 <flatcc_builder_get_emit_context@@Base+0x8e>
  409cd0:	mov    rax,QWORD PTR [rbp-0x18]
  409cd4:	mov    rax,QWORD PTR [rax]
  409cd7:	mov    rax,QWORD PTR [rax+0xb88]
  409cde:	mov    rdx,QWORD PTR [rbp-0x18]
  409ce2:	mov    rdx,QWORD PTR [rdx]
  409ce5:	mov    edx,DWORD PTR [rdx+0xb90]
  409ceb:	sub    edx,0xb80
  409cf1:	mov    DWORD PTR [rax+0xb90],edx
  409cf7:	mov    rax,QWORD PTR [rbp-0x18]
  409cfb:	mov    rax,QWORD PTR [rax]
  409cfe:	mov    rdx,QWORD PTR [rax+0xb88]
  409d05:	mov    rax,QWORD PTR [rbp-0x18]
  409d09:	mov    QWORD PTR [rax],rdx
  409d0c:	jmp    409e49 <flatcc_builder_get_emit_context@@Base+0x1c6>
  409d11:	mov    edi,0xb98
  409d16:	call   4030c0 <malloc@plt>
  409d1b:	mov    QWORD PTR [rbp-0x8],rax
  409d1f:	cmp    QWORD PTR [rbp-0x8],0x0
  409d24:	jne    409d30 <flatcc_builder_get_emit_context@@Base+0xad>
  409d26:	mov    eax,0xffffffff
  409d2b:	jmp    409e97 <flatcc_builder_get_emit_context@@Base+0x214>
  409d30:	mov    rax,QWORD PTR [rbp-0x18]
  409d34:	mov    rax,QWORD PTR [rax+0x38]
  409d38:	lea    rdx,[rax+0xb80]
  409d3f:	mov    rax,QWORD PTR [rbp-0x18]
  409d43:	mov    QWORD PTR [rax+0x38],rdx
  409d47:	mov    rax,QWORD PTR [rbp-0x18]
  409d4b:	mov    rax,QWORD PTR [rax]
  409d4e:	test   rax,rax
  409d51:	je     409dad <flatcc_builder_get_emit_context@@Base+0x12a>
  409d53:	mov    rax,QWORD PTR [rbp-0x18]
  409d57:	mov    rdx,QWORD PTR [rax+0x8]
  409d5b:	mov    rax,QWORD PTR [rbp-0x8]
  409d5f:	mov    QWORD PTR [rax+0xb88],rdx
  409d66:	mov    rax,QWORD PTR [rbp-0x18]
  409d6a:	mov    rdx,QWORD PTR [rax]
  409d6d:	mov    rax,QWORD PTR [rbp-0x8]
  409d71:	mov    QWORD PTR [rax+0xb80],rdx
  409d78:	mov    rax,QWORD PTR [rbp-0x18]
  409d7c:	mov    rax,QWORD PTR [rax]
  409d7f:	mov    rdx,QWORD PTR [rbp-0x8]
  409d83:	mov    QWORD PTR [rax+0xb88],rdx
  409d8a:	mov    rax,QWORD PTR [rbp-0x18]
  409d8e:	mov    rax,QWORD PTR [rax+0x8]
  409d92:	mov    rdx,QWORD PTR [rbp-0x8]
  409d96:	mov    QWORD PTR [rax+0xb80],rdx
  409d9d:	mov    rax,QWORD PTR [rbp-0x18]
  409da1:	mov    rdx,QWORD PTR [rbp-0x8]
  409da5:	mov    QWORD PTR [rax],rdx
  409da8:	jmp    409e49 <flatcc_builder_get_emit_context@@Base+0x1c6>
  409dad:	mov    rax,QWORD PTR [rbp-0x18]
  409db1:	mov    rdx,QWORD PTR [rbp-0x8]
  409db5:	mov    QWORD PTR [rax],rdx
  409db8:	mov    rax,QWORD PTR [rbp-0x18]
  409dbc:	mov    rdx,QWORD PTR [rbp-0x8]
  409dc0:	mov    QWORD PTR [rax+0x8],rdx
  409dc4:	mov    rax,QWORD PTR [rbp-0x8]
  409dc8:	mov    rdx,QWORD PTR [rbp-0x8]
  409dcc:	mov    QWORD PTR [rax+0xb80],rdx
  409dd3:	mov    rax,QWORD PTR [rbp-0x8]
  409dd7:	mov    rdx,QWORD PTR [rbp-0x8]
  409ddb:	mov    QWORD PTR [rax+0xb88],rdx
  409de2:	mov    rax,QWORD PTR [rbp-0x18]
  409de6:	mov    rax,QWORD PTR [rax]
  409de9:	lea    rdx,[rax+0x5c0]
  409df0:	mov    rax,QWORD PTR [rbp-0x18]
  409df4:	mov    QWORD PTR [rax+0x10],rdx
  409df8:	mov    rax,QWORD PTR [rbp-0x18]
  409dfc:	mov    rdx,QWORD PTR [rax+0x10]
  409e00:	mov    rax,QWORD PTR [rbp-0x18]
  409e04:	mov    QWORD PTR [rax+0x20],rdx
  409e08:	mov    rax,QWORD PTR [rbp-0x18]
  409e0c:	mov    QWORD PTR [rax+0x18],0x5c0
  409e14:	mov    rax,QWORD PTR [rbp-0x18]
  409e18:	mov    rax,QWORD PTR [rax+0x18]
  409e1c:	mov    edx,0xb80
  409e21:	sub    rdx,rax
  409e24:	mov    rax,QWORD PTR [rbp-0x18]
  409e28:	mov    QWORD PTR [rax+0x28],rdx
  409e2c:	mov    rax,QWORD PTR [rbp-0x18]
  409e30:	mov    rax,QWORD PTR [rax+0x18]
  409e34:	neg    eax
  409e36:	mov    edx,eax
  409e38:	mov    rax,QWORD PTR [rbp-0x8]
  409e3c:	mov    DWORD PTR [rax+0xb90],edx
  409e42:	mov    eax,0x0
  409e47:	jmp    409e97 <flatcc_builder_get_emit_context@@Base+0x214>
  409e49:	mov    rax,QWORD PTR [rbp-0x18]
  409e4d:	mov    rax,QWORD PTR [rax]
  409e50:	lea    rdx,[rax+0xb80]
  409e57:	mov    rax,QWORD PTR [rbp-0x18]
  409e5b:	mov    QWORD PTR [rax+0x10],rdx
  409e5f:	mov    rax,QWORD PTR [rbp-0x18]
  409e63:	mov    QWORD PTR [rax+0x18],0xb80
  409e6b:	mov    rax,QWORD PTR [rbp-0x18]
  409e6f:	mov    rax,QWORD PTR [rax]
  409e72:	mov    rdx,QWORD PTR [rbp-0x18]
  409e76:	mov    rdx,QWORD PTR [rdx]
  409e79:	mov    rdx,QWORD PTR [rdx+0xb80]
  409e80:	mov    edx,DWORD PTR [rdx+0xb90]
  409e86:	sub    edx,0xb80
  409e8c:	mov    DWORD PTR [rax+0xb90],edx
  409e92:	mov    eax,0x0
  409e97:	leave  
  409e98:	ret    
  409e99:	push   rbp
  409e9a:	mov    rbp,rsp
  409e9d:	sub    rsp,0x20
  409ea1:	mov    QWORD PTR [rbp-0x18],rdi
  409ea5:	mov    QWORD PTR [rbp-0x8],0x0
  409ead:	mov    rax,QWORD PTR [rbp-0x18]
  409eb1:	mov    rax,QWORD PTR [rax+0x8]
  409eb5:	test   rax,rax
  409eb8:	je     409ef1 <flatcc_builder_get_emit_context@@Base+0x26e>
  409eba:	mov    rax,QWORD PTR [rbp-0x18]
  409ebe:	mov    rax,QWORD PTR [rax+0x8]
  409ec2:	mov    rdx,QWORD PTR [rax+0xb80]
  409ec9:	mov    rax,QWORD PTR [rbp-0x18]
  409ecd:	mov    rax,QWORD PTR [rax]
  409ed0:	cmp    rdx,rax
  409ed3:	je     409ef1 <flatcc_builder_get_emit_context@@Base+0x26e>
  409ed5:	mov    rax,QWORD PTR [rbp-0x18]
  409ed9:	mov    rax,QWORD PTR [rax+0x8]
  409edd:	mov    rdx,QWORD PTR [rax+0xb80]
  409ee4:	mov    rax,QWORD PTR [rbp-0x18]
  409ee8:	mov    QWORD PTR [rax+0x8],rdx
  409eec:	jmp    40a02b <flatcc_builder_get_emit_context@@Base+0x3a8>
  409ef1:	mov    edi,0xb98
  409ef6:	call   4030c0 <malloc@plt>
  409efb:	mov    QWORD PTR [rbp-0x8],rax
  409eff:	cmp    QWORD PTR [rbp-0x8],0x0
  409f04:	jne    409f10 <flatcc_builder_get_emit_context@@Base+0x28d>
  409f06:	mov    eax,0xffffffff
  409f0b:	jmp    40a078 <flatcc_builder_get_emit_context@@Base+0x3f5>
  409f10:	mov    rax,QWORD PTR [rbp-0x18]
  409f14:	mov    rax,QWORD PTR [rax+0x38]
  409f18:	lea    rdx,[rax+0xb80]
  409f1f:	mov    rax,QWORD PTR [rbp-0x18]
  409f23:	mov    QWORD PTR [rax+0x38],rdx
  409f27:	mov    rax,QWORD PTR [rbp-0x18]
  409f2b:	mov    rax,QWORD PTR [rax+0x8]
  409f2f:	test   rax,rax
  409f32:	je     409f8f <flatcc_builder_get_emit_context@@Base+0x30c>
  409f34:	mov    rax,QWORD PTR [rbp-0x18]
  409f38:	mov    rdx,QWORD PTR [rax+0x8]
  409f3c:	mov    rax,QWORD PTR [rbp-0x8]
  409f40:	mov    QWORD PTR [rax+0xb88],rdx
  409f47:	mov    rax,QWORD PTR [rbp-0x18]
  409f4b:	mov    rdx,QWORD PTR [rax]
  409f4e:	mov    rax,QWORD PTR [rbp-0x8]
  409f52:	mov    QWORD PTR [rax+0xb80],rdx
  409f59:	mov    rax,QWORD PTR [rbp-0x18]
  409f5d:	mov    rax,QWORD PTR [rax]
  409f60:	mov    rdx,QWORD PTR [rbp-0x8]
  409f64:	mov    QWORD PTR [rax+0xb88],rdx
  409f6b:	mov    rax,QWORD PTR [rbp-0x18]
  409f6f:	mov    rax,QWORD PTR [rax+0x8]
  409f73:	mov    rdx,QWORD PTR [rbp-0x8]
  409f77:	mov    QWORD PTR [rax+0xb80],rdx
  409f7e:	mov    rax,QWORD PTR [rbp-0x18]
  409f82:	mov    rdx,QWORD PTR [rbp-0x8]
  409f86:	mov    QWORD PTR [rax+0x8],rdx
  409f8a:	jmp    40a02b <flatcc_builder_get_emit_context@@Base+0x3a8>
  409f8f:	mov    rax,QWORD PTR [rbp-0x18]
  409f93:	mov    rdx,QWORD PTR [rbp-0x8]
  409f97:	mov    QWORD PTR [rax],rdx
  409f9a:	mov    rax,QWORD PTR [rbp-0x18]
  409f9e:	mov    rdx,QWORD PTR [rbp-0x8]
  409fa2:	mov    QWORD PTR [rax+0x8],rdx
  409fa6:	mov    rax,QWORD PTR [rbp-0x8]
  409faa:	mov    rdx,QWORD PTR [rbp-0x8]
  409fae:	mov    QWORD PTR [rax+0xb80],rdx
  409fb5:	mov    rax,QWORD PTR [rbp-0x8]
  409fb9:	mov    rdx,QWORD PTR [rbp-0x8]
  409fbd:	mov    QWORD PTR [rax+0xb88],rdx
  409fc4:	mov    rax,QWORD PTR [rbp-0x18]
  409fc8:	mov    rax,QWORD PTR [rax]
  409fcb:	lea    rdx,[rax+0x5c0]
  409fd2:	mov    rax,QWORD PTR [rbp-0x18]
  409fd6:	mov    QWORD PTR [rax+0x10],rdx
  409fda:	mov    rax,QWORD PTR [rbp-0x18]
  409fde:	mov    rdx,QWORD PTR [rax+0x10]
  409fe2:	mov    rax,QWORD PTR [rbp-0x18]
  409fe6:	mov    QWORD PTR [rax+0x20],rdx
  409fea:	mov    rax,QWORD PTR [rbp-0x18]
  409fee:	mov    QWORD PTR [rax+0x18],0x5c0
  409ff6:	mov    rax,QWORD PTR [rbp-0x18]
  409ffa:	mov    rax,QWORD PTR [rax+0x18]
  409ffe:	mov    edx,0xb80
  40a003:	sub    rdx,rax
  40a006:	mov    rax,QWORD PTR [rbp-0x18]
  40a00a:	mov    QWORD PTR [rax+0x28],rdx
  40a00e:	mov    rax,QWORD PTR [rbp-0x18]
  40a012:	mov    rax,QWORD PTR [rax+0x18]
  40a016:	neg    eax
  40a018:	mov    edx,eax
  40a01a:	mov    rax,QWORD PTR [rbp-0x8]
  40a01e:	mov    DWORD PTR [rax+0xb90],edx
  40a024:	mov    eax,0x0
  40a029:	jmp    40a078 <flatcc_builder_get_emit_context@@Base+0x3f5>
  40a02b:	mov    rax,QWORD PTR [rbp-0x18]
  40a02f:	mov    rax,QWORD PTR [rax+0x8]
  40a033:	mov    rdx,rax
  40a036:	mov    rax,QWORD PTR [rbp-0x18]
  40a03a:	mov    QWORD PTR [rax+0x20],rdx
  40a03e:	mov    rax,QWORD PTR [rbp-0x18]
  40a042:	mov    QWORD PTR [rax+0x28],0xb80
  40a04a:	mov    rax,QWORD PTR [rbp-0x18]
  40a04e:	mov    rax,QWORD PTR [rax+0x8]
  40a052:	mov    rdx,QWORD PTR [rbp-0x18]
  40a056:	mov    rdx,QWORD PTR [rdx+0x8]
  40a05a:	mov    rdx,QWORD PTR [rdx+0xb88]
  40a061:	mov    edx,DWORD PTR [rdx+0xb90]
  40a067:	add    edx,0xb80
  40a06d:	mov    DWORD PTR [rax+0xb90],edx
  40a073:	mov    eax,0x0
  40a078:	leave  
  40a079:	ret    
  40a07a:	push   rbp
  40a07b:	mov    rbp,rsp
  40a07e:	sub    rsp,0x30
  40a082:	mov    QWORD PTR [rbp-0x18],rdi
  40a086:	mov    QWORD PTR [rbp-0x20],rsi
  40a08a:	mov    QWORD PTR [rbp-0x28],rdx
  40a08e:	mov    rax,QWORD PTR [rbp-0x28]
  40a092:	add    QWORD PTR [rbp-0x20],rax
  40a096:	jmp    40a13a <flatcc_builder_get_emit_context@@Base+0x4b7>
  40a09b:	mov    rax,QWORD PTR [rbp-0x28]
  40a09f:	mov    QWORD PTR [rbp-0x8],rax
  40a0a3:	mov    rax,QWORD PTR [rbp-0x18]
  40a0a7:	mov    rax,QWORD PTR [rax+0x18]
  40a0ab:	cmp    rax,QWORD PTR [rbp-0x8]
  40a0af:	jae    40a0db <flatcc_builder_get_emit_context@@Base+0x458>
  40a0b1:	mov    rax,QWORD PTR [rbp-0x18]
  40a0b5:	mov    rax,QWORD PTR [rax+0x18]
  40a0b9:	mov    QWORD PTR [rbp-0x8],rax
  40a0bd:	cmp    QWORD PTR [rbp-0x8],0x0
  40a0c2:	jne    40a0db <flatcc_builder_get_emit_context@@Base+0x458>
  40a0c4:	mov    rax,QWORD PTR [rbp-0x18]
  40a0c8:	mov    rdi,rax
  40a0cb:	call   409c95 <flatcc_builder_get_emit_context@@Base+0x12>
  40a0d0:	test   eax,eax
  40a0d2:	je     40a13a <flatcc_builder_get_emit_context@@Base+0x4b7>
  40a0d4:	mov    eax,0xffffffff
  40a0d9:	jmp    40a14a <flatcc_builder_get_emit_context@@Base+0x4c7>
  40a0db:	mov    rax,QWORD PTR [rbp-0x18]
  40a0df:	mov    rax,QWORD PTR [rax+0x10]
  40a0e3:	mov    rdx,QWORD PTR [rbp-0x8]
  40a0e7:	neg    rdx
  40a0ea:	add    rdx,rax
  40a0ed:	mov    rax,QWORD PTR [rbp-0x18]
  40a0f1:	mov    QWORD PTR [rax+0x10],rdx
  40a0f5:	mov    rax,QWORD PTR [rbp-0x18]
  40a0f9:	mov    rax,QWORD PTR [rax+0x18]
  40a0fd:	sub    rax,QWORD PTR [rbp-0x8]
  40a101:	mov    rdx,rax
  40a104:	mov    rax,QWORD PTR [rbp-0x18]
  40a108:	mov    QWORD PTR [rax+0x18],rdx
  40a10c:	mov    rax,QWORD PTR [rbp-0x8]
  40a110:	neg    rax
  40a113:	add    QWORD PTR [rbp-0x20],rax
  40a117:	mov    rax,QWORD PTR [rbp-0x8]
  40a11b:	sub    QWORD PTR [rbp-0x28],rax
  40a11f:	mov    rax,QWORD PTR [rbp-0x18]
  40a123:	mov    rax,QWORD PTR [rax+0x10]
  40a127:	mov    rdx,QWORD PTR [rbp-0x8]
  40a12b:	mov    rcx,QWORD PTR [rbp-0x20]
  40a12f:	mov    rsi,rcx
  40a132:	mov    rdi,rax
  40a135:	call   4030b0 <memcpy@plt>
  40a13a:	cmp    QWORD PTR [rbp-0x28],0x0
  40a13f:	jne    40a09b <flatcc_builder_get_emit_context@@Base+0x418>
  40a145:	mov    eax,0x0
  40a14a:	leave  
  40a14b:	ret    
  40a14c:	push   rbp
  40a14d:	mov    rbp,rsp
  40a150:	sub    rsp,0x30
  40a154:	mov    QWORD PTR [rbp-0x18],rdi
  40a158:	mov    QWORD PTR [rbp-0x20],rsi
  40a15c:	mov    QWORD PTR [rbp-0x28],rdx
  40a160:	jmp    40a1fe <flatcc_builder_get_emit_context@@Base+0x57b>
  40a165:	mov    rax,QWORD PTR [rbp-0x28]
  40a169:	mov    QWORD PTR [rbp-0x8],rax
  40a16d:	mov    rax,QWORD PTR [rbp-0x18]
  40a171:	mov    rax,QWORD PTR [rax+0x28]
  40a175:	cmp    rax,QWORD PTR [rbp-0x8]
  40a179:	jae    40a1a5 <flatcc_builder_get_emit_context@@Base+0x522>
  40a17b:	mov    rax,QWORD PTR [rbp-0x18]
  40a17f:	mov    rax,QWORD PTR [rax+0x28]
  40a183:	mov    QWORD PTR [rbp-0x8],rax
  40a187:	cmp    QWORD PTR [rbp-0x8],0x0
  40a18c:	jne    40a1a5 <flatcc_builder_get_emit_context@@Base+0x522>
  40a18e:	mov    rax,QWORD PTR [rbp-0x18]
  40a192:	mov    rdi,rax
  40a195:	call   409e99 <flatcc_builder_get_emit_context@@Base+0x216>
  40a19a:	test   eax,eax
  40a19c:	je     40a1fe <flatcc_builder_get_emit_context@@Base+0x57b>
  40a19e:	mov    eax,0xffffffff
  40a1a3:	jmp    40a20e <flatcc_builder_get_emit_context@@Base+0x58b>
  40a1a5:	mov    rax,QWORD PTR [rbp-0x18]
  40a1a9:	mov    rax,QWORD PTR [rax+0x20]
  40a1ad:	mov    rdx,QWORD PTR [rbp-0x8]
  40a1b1:	mov    rcx,QWORD PTR [rbp-0x20]
  40a1b5:	mov    rsi,rcx
  40a1b8:	mov    rdi,rax
  40a1bb:	call   4030b0 <memcpy@plt>
  40a1c0:	mov    rax,QWORD PTR [rbp-0x8]
  40a1c4:	sub    QWORD PTR [rbp-0x28],rax
  40a1c8:	mov    rax,QWORD PTR [rbp-0x8]
  40a1cc:	add    QWORD PTR [rbp-0x20],rax
  40a1d0:	mov    rax,QWORD PTR [rbp-0x18]
  40a1d4:	mov    rdx,QWORD PTR [rax+0x20]
  40a1d8:	mov    rax,QWORD PTR [rbp-0x8]
  40a1dc:	add    rdx,rax
  40a1df:	mov    rax,QWORD PTR [rbp-0x18]
  40a1e3:	mov    QWORD PTR [rax+0x20],rdx
  40a1e7:	mov    rax,QWORD PTR [rbp-0x18]
  40a1eb:	mov    rax,QWORD PTR [rax+0x28]
  40a1ef:	sub    rax,QWORD PTR [rbp-0x8]
  40a1f3:	mov    rdx,rax
  40a1f6:	mov    rax,QWORD PTR [rbp-0x18]
  40a1fa:	mov    QWORD PTR [rax+0x28],rdx
  40a1fe:	cmp    QWORD PTR [rbp-0x28],0x0
  40a203:	jne    40a165 <flatcc_builder_get_emit_context@@Base+0x4e2>
  40a209:	mov    eax,0x0
  40a20e:	leave  
  40a20f:	ret    

000000000040a210 <flatcc_emitter_recycle_page@@Base>:
  40a210:	push   rbp
  40a211:	mov    rbp,rsp
  40a214:	mov    QWORD PTR [rbp-0x8],rdi
  40a218:	mov    QWORD PTR [rbp-0x10],rsi
  40a21c:	mov    rax,QWORD PTR [rbp-0x8]
  40a220:	mov    rax,QWORD PTR [rax]
  40a223:	cmp    rax,QWORD PTR [rbp-0x10]
  40a227:	je     40a237 <flatcc_emitter_recycle_page@@Base+0x27>
  40a229:	mov    rax,QWORD PTR [rbp-0x8]
  40a22d:	mov    rax,QWORD PTR [rax+0x8]
  40a231:	cmp    rax,QWORD PTR [rbp-0x10]
  40a235:	jne    40a241 <flatcc_emitter_recycle_page@@Base+0x31>
  40a237:	mov    eax,0xffffffff
  40a23c:	jmp    40a2d7 <flatcc_emitter_recycle_page@@Base+0xc7>
  40a241:	mov    rax,QWORD PTR [rbp-0x10]
  40a245:	mov    rax,QWORD PTR [rax+0xb80]
  40a24c:	mov    rdx,QWORD PTR [rbp-0x10]
  40a250:	mov    rdx,QWORD PTR [rdx+0xb88]
  40a257:	mov    QWORD PTR [rax+0xb88],rdx
  40a25e:	mov    rax,QWORD PTR [rbp-0x10]
  40a262:	mov    rax,QWORD PTR [rax+0xb88]
  40a269:	mov    rdx,QWORD PTR [rbp-0x10]
  40a26d:	mov    rdx,QWORD PTR [rdx+0xb80]
  40a274:	mov    QWORD PTR [rax+0xb80],rdx
  40a27b:	mov    rax,QWORD PTR [rbp-0x8]
  40a27f:	mov    rax,QWORD PTR [rax]
  40a282:	mov    rdx,QWORD PTR [rax+0xb88]
  40a289:	mov    rax,QWORD PTR [rbp-0x10]
  40a28d:	mov    QWORD PTR [rax+0xb88],rdx
  40a294:	mov    rax,QWORD PTR [rbp-0x8]
  40a298:	mov    rdx,QWORD PTR [rax]
  40a29b:	mov    rax,QWORD PTR [rbp-0x10]
  40a29f:	mov    QWORD PTR [rax+0xb80],rdx
  40a2a6:	mov    rax,QWORD PTR [rbp-0x10]
  40a2aa:	mov    rax,QWORD PTR [rax+0xb88]
  40a2b1:	mov    rdx,QWORD PTR [rbp-0x10]
  40a2b5:	mov    QWORD PTR [rax+0xb80],rdx
  40a2bc:	mov    rax,QWORD PTR [rbp-0x10]
  40a2c0:	mov    rax,QWORD PTR [rax+0xb80]
  40a2c7:	mov    rdx,QWORD PTR [rbp-0x10]
  40a2cb:	mov    QWORD PTR [rax+0xb88],rdx
  40a2d2:	mov    eax,0x0
  40a2d7:	pop    rbp
  40a2d8:	ret    

000000000040a2d9 <flatcc_emitter_reset@@Base>:
  40a2d9:	push   rbp
  40a2da:	mov    rbp,rsp
  40a2dd:	sub    rsp,0x20
  40a2e1:	mov    QWORD PTR [rbp-0x18],rdi
  40a2e5:	mov    rax,QWORD PTR [rbp-0x18]
  40a2e9:	mov    rax,QWORD PTR [rax]
  40a2ec:	mov    QWORD PTR [rbp-0x8],rax
  40a2f0:	mov    rax,QWORD PTR [rbp-0x18]
  40a2f4:	mov    rax,QWORD PTR [rax]
  40a2f7:	test   rax,rax
  40a2fa:	je     40a462 <flatcc_emitter_reset@@Base+0x189>
  40a300:	mov    rax,QWORD PTR [rbp-0x18]
  40a304:	mov    rdx,QWORD PTR [rax]
  40a307:	mov    rax,QWORD PTR [rbp-0x18]
  40a30b:	mov    QWORD PTR [rax+0x8],rdx
  40a30f:	mov    rax,QWORD PTR [rbp-0x18]
  40a313:	mov    rax,QWORD PTR [rax]
  40a316:	lea    rdx,[rax+0x5c0]
  40a31d:	mov    rax,QWORD PTR [rbp-0x18]
  40a321:	mov    QWORD PTR [rax+0x10],rdx
  40a325:	mov    rax,QWORD PTR [rbp-0x18]
  40a329:	mov    rdx,QWORD PTR [rax+0x10]
  40a32d:	mov    rax,QWORD PTR [rbp-0x18]
  40a331:	mov    QWORD PTR [rax+0x20],rdx
  40a335:	mov    rax,QWORD PTR [rbp-0x18]
  40a339:	mov    QWORD PTR [rax+0x18],0x5c0
  40a341:	mov    rax,QWORD PTR [rbp-0x18]
  40a345:	mov    QWORD PTR [rax+0x28],0x5c0
  40a34d:	mov    rax,QWORD PTR [rbp-0x18]
  40a351:	mov    rax,QWORD PTR [rax]
  40a354:	mov    rdx,QWORD PTR [rbp-0x18]
  40a358:	mov    rdx,QWORD PTR [rdx+0x18]
  40a35c:	neg    edx
  40a35e:	mov    DWORD PTR [rax+0xb90],edx
  40a364:	mov    rax,QWORD PTR [rbp-0x18]
  40a368:	mov    rax,QWORD PTR [rax+0x40]
  40a36c:	test   rax,rax
  40a36f:	jne    40a381 <flatcc_emitter_reset@@Base+0xa8>
  40a371:	mov    rax,QWORD PTR [rbp-0x18]
  40a375:	mov    rdx,QWORD PTR [rax+0x30]
  40a379:	mov    rax,QWORD PTR [rbp-0x18]
  40a37d:	mov    QWORD PTR [rax+0x40],rdx
  40a381:	mov    rax,QWORD PTR [rbp-0x18]
  40a385:	mov    rdx,QWORD PTR [rax+0x40]
  40a389:	mov    rax,rdx
  40a38c:	add    rax,rax
  40a38f:	add    rax,rdx
  40a392:	shr    rax,0x2
  40a396:	mov    rdx,rax
  40a399:	mov    rax,QWORD PTR [rbp-0x18]
  40a39d:	mov    rax,QWORD PTR [rax+0x30]
  40a3a1:	shr    rax,0x2
  40a3a5:	add    rdx,rax
  40a3a8:	mov    rax,QWORD PTR [rbp-0x18]
  40a3ac:	mov    QWORD PTR [rax+0x40],rdx
  40a3b0:	mov    rax,QWORD PTR [rbp-0x18]
  40a3b4:	mov    QWORD PTR [rax+0x30],0x0
  40a3bc:	jmp    40a428 <flatcc_emitter_reset@@Base+0x14f>
  40a3be:	mov    rax,QWORD PTR [rbp-0x18]
  40a3c2:	mov    rax,QWORD PTR [rax+0x8]
  40a3c6:	mov    rax,QWORD PTR [rax+0xb80]
  40a3cd:	mov    QWORD PTR [rbp-0x8],rax
  40a3d1:	mov    rax,QWORD PTR [rbp-0x18]
  40a3d5:	mov    rax,QWORD PTR [rax+0x8]
  40a3d9:	mov    rdx,QWORD PTR [rbp-0x8]
  40a3dd:	mov    rdx,QWORD PTR [rdx+0xb80]
  40a3e4:	mov    QWORD PTR [rax+0xb80],rdx
  40a3eb:	mov    rax,QWORD PTR [rbp-0x8]
  40a3ef:	mov    rax,QWORD PTR [rax+0xb80]
  40a3f6:	mov    rdx,QWORD PTR [rbp-0x18]
  40a3fa:	mov    rdx,QWORD PTR [rdx+0x8]
  40a3fe:	mov    QWORD PTR [rax+0xb88],rdx
  40a405:	mov    rax,QWORD PTR [rbp-0x8]
  40a409:	mov    rdi,rax
  40a40c:	call   403030 <free@plt>
  40a411:	mov    rax,QWORD PTR [rbp-0x18]
  40a415:	mov    rax,QWORD PTR [rax+0x38]
  40a419:	lea    rdx,[rax-0xb80]
  40a420:	mov    rax,QWORD PTR [rbp-0x18]
  40a424:	mov    QWORD PTR [rax+0x38],rdx
  40a428:	mov    rax,QWORD PTR [rbp-0x18]
  40a42c:	mov    rax,QWORD PTR [rax+0x40]
  40a430:	lea    rdx,[rax+rax*1]
  40a434:	mov    rax,QWORD PTR [rbp-0x18]
  40a438:	mov    rax,QWORD PTR [rax+0x38]
  40a43c:	cmp    rdx,rax
  40a43f:	jae    40a463 <flatcc_emitter_reset@@Base+0x18a>
  40a441:	mov    rax,QWORD PTR [rbp-0x18]
  40a445:	mov    rax,QWORD PTR [rax+0x8]
  40a449:	mov    rdx,QWORD PTR [rax+0xb80]
  40a450:	mov    rax,QWORD PTR [rbp-0x18]
  40a454:	mov    rax,QWORD PTR [rax]
  40a457:	cmp    rdx,rax
  40a45a:	jne    40a3be <flatcc_emitter_reset@@Base+0xe5>
  40a460:	jmp    40a463 <flatcc_emitter_reset@@Base+0x18a>
  40a462:	nop
  40a463:	leave  
  40a464:	ret    

000000000040a465 <flatcc_emitter_clear@@Base>:
  40a465:	push   rbp
  40a466:	mov    rbp,rsp
  40a469:	sub    rsp,0x20
  40a46d:	mov    QWORD PTR [rbp-0x18],rdi
  40a471:	mov    rax,QWORD PTR [rbp-0x18]
  40a475:	mov    rax,QWORD PTR [rax]
  40a478:	mov    QWORD PTR [rbp-0x8],rax
  40a47c:	cmp    QWORD PTR [rbp-0x8],0x0
  40a481:	je     40a4f1 <flatcc_emitter_clear@@Base+0x8c>
  40a483:	mov    rax,QWORD PTR [rbp-0x8]
  40a487:	mov    rax,QWORD PTR [rax+0xb88]
  40a48e:	mov    QWORD PTR [rax+0xb80],0x0
  40a499:	jmp    40a4bd <flatcc_emitter_clear@@Base+0x58>
  40a49b:	mov    rax,QWORD PTR [rbp-0x8]
  40a49f:	mov    rax,QWORD PTR [rax+0xb80]
  40a4a6:	mov    QWORD PTR [rbp-0x8],rax
  40a4aa:	mov    rax,QWORD PTR [rbp-0x8]
  40a4ae:	mov    rax,QWORD PTR [rax+0xb88]
  40a4b5:	mov    rdi,rax
  40a4b8:	call   403030 <free@plt>
  40a4bd:	mov    rax,QWORD PTR [rbp-0x8]
  40a4c1:	mov    rax,QWORD PTR [rax+0xb80]
  40a4c8:	test   rax,rax
  40a4cb:	jne    40a49b <flatcc_emitter_clear@@Base+0x36>
  40a4cd:	mov    rax,QWORD PTR [rbp-0x8]
  40a4d1:	mov    rdi,rax
  40a4d4:	call   403030 <free@plt>
  40a4d9:	mov    rax,QWORD PTR [rbp-0x18]
  40a4dd:	mov    edx,0x48
  40a4e2:	mov    esi,0x0
  40a4e7:	mov    rdi,rax
  40a4ea:	call   403080 <memset@plt>
  40a4ef:	jmp    40a4f2 <flatcc_emitter_clear@@Base+0x8d>
  40a4f1:	nop
  40a4f2:	leave  
  40a4f3:	ret    

000000000040a4f4 <flatcc_emitter@@Base>:
  40a4f4:	push   rbp
  40a4f5:	mov    rbp,rsp
  40a4f8:	sub    rsp,0x30
  40a4fc:	mov    QWORD PTR [rbp-0x18],rdi
  40a500:	mov    QWORD PTR [rbp-0x20],rsi
  40a504:	mov    DWORD PTR [rbp-0x24],edx
  40a507:	mov    DWORD PTR [rbp-0x28],ecx
  40a50a:	mov    QWORD PTR [rbp-0x30],r8
  40a50e:	mov    rax,QWORD PTR [rbp-0x18]
  40a512:	mov    QWORD PTR [rbp-0x8],rax
  40a516:	mov    rax,QWORD PTR [rbp-0x8]
  40a51a:	mov    rdx,QWORD PTR [rax+0x30]
  40a51e:	mov    rax,QWORD PTR [rbp-0x30]
  40a522:	add    rdx,rax
  40a525:	mov    rax,QWORD PTR [rbp-0x8]
  40a529:	mov    QWORD PTR [rax+0x30],rdx
  40a52d:	cmp    DWORD PTR [rbp-0x28],0x0
  40a531:	jns    40a5d9 <flatcc_emitter@@Base+0xe5>
  40a537:	mov    rax,QWORD PTR [rbp-0x8]
  40a53b:	mov    rax,QWORD PTR [rax+0x18]
  40a53f:	cmp    rax,QWORD PTR [rbp-0x30]
  40a543:	jb     40a587 <flatcc_emitter@@Base+0x93>
  40a545:	mov    rax,QWORD PTR [rbp-0x8]
  40a549:	mov    rax,QWORD PTR [rax+0x10]
  40a54d:	mov    rdx,QWORD PTR [rbp-0x30]
  40a551:	neg    rdx
  40a554:	add    rdx,rax
  40a557:	mov    rax,QWORD PTR [rbp-0x8]
  40a55b:	mov    QWORD PTR [rax+0x10],rdx
  40a55f:	mov    rax,QWORD PTR [rbp-0x8]
  40a563:	mov    rax,QWORD PTR [rax+0x18]
  40a567:	sub    rax,QWORD PTR [rbp-0x30]
  40a56b:	mov    rdx,rax
  40a56e:	mov    rax,QWORD PTR [rbp-0x8]
  40a572:	mov    QWORD PTR [rax+0x18],rdx
  40a576:	mov    rax,QWORD PTR [rbp-0x8]
  40a57a:	mov    rax,QWORD PTR [rax+0x10]
  40a57e:	mov    QWORD PTR [rbp-0x10],rax
  40a582:	jmp    40a665 <flatcc_emitter@@Base+0x171>
  40a587:	mov    eax,DWORD PTR [rbp-0x24]
  40a58a:	cdqe   
  40a58c:	shl    rax,0x4
  40a590:	add    QWORD PTR [rbp-0x20],rax
  40a594:	jmp    40a5c7 <flatcc_emitter@@Base+0xd3>
  40a596:	sub    QWORD PTR [rbp-0x20],0x10
  40a59b:	mov    rax,QWORD PTR [rbp-0x20]
  40a59f:	mov    rdx,QWORD PTR [rax+0x8]
  40a5a3:	mov    rax,QWORD PTR [rbp-0x20]
  40a5a7:	mov    rcx,QWORD PTR [rax]
  40a5aa:	mov    rax,QWORD PTR [rbp-0x8]
  40a5ae:	mov    rsi,rcx
  40a5b1:	mov    rdi,rax
  40a5b4:	call   40a07a <flatcc_builder_get_emit_context@@Base+0x3f7>
  40a5b9:	test   eax,eax
  40a5bb:	je     40a5c7 <flatcc_emitter@@Base+0xd3>
  40a5bd:	mov    eax,0xffffffff
  40a5c2:	jmp    40a6a8 <flatcc_emitter@@Base+0x1b4>
  40a5c7:	mov    eax,DWORD PTR [rbp-0x24]
  40a5ca:	lea    edx,[rax-0x1]
  40a5cd:	mov    DWORD PTR [rbp-0x24],edx
  40a5d0:	test   eax,eax
  40a5d2:	jne    40a596 <flatcc_emitter@@Base+0xa2>
  40a5d4:	jmp    40a65e <flatcc_emitter@@Base+0x16a>
  40a5d9:	mov    rax,QWORD PTR [rbp-0x8]
  40a5dd:	mov    rax,QWORD PTR [rax+0x28]
  40a5e1:	cmp    rax,QWORD PTR [rbp-0x30]
  40a5e5:	jb     40a651 <flatcc_emitter@@Base+0x15d>
  40a5e7:	mov    rax,QWORD PTR [rbp-0x8]
  40a5eb:	mov    rax,QWORD PTR [rax+0x20]
  40a5ef:	mov    QWORD PTR [rbp-0x10],rax
  40a5f3:	mov    rax,QWORD PTR [rbp-0x8]
  40a5f7:	mov    rdx,QWORD PTR [rax+0x20]
  40a5fb:	mov    rax,QWORD PTR [rbp-0x30]
  40a5ff:	add    rdx,rax
  40a602:	mov    rax,QWORD PTR [rbp-0x8]
  40a606:	mov    QWORD PTR [rax+0x20],rdx
  40a60a:	mov    rax,QWORD PTR [rbp-0x8]
  40a60e:	mov    rax,QWORD PTR [rax+0x28]
  40a612:	sub    rax,QWORD PTR [rbp-0x30]
  40a616:	mov    rdx,rax
  40a619:	mov    rax,QWORD PTR [rbp-0x8]
  40a61d:	mov    QWORD PTR [rax+0x28],rdx
  40a621:	jmp    40a665 <flatcc_emitter@@Base+0x171>
  40a623:	mov    rax,QWORD PTR [rbp-0x20]
  40a627:	mov    rdx,QWORD PTR [rax+0x8]
  40a62b:	mov    rax,QWORD PTR [rbp-0x20]
  40a62f:	mov    rcx,QWORD PTR [rax]
  40a632:	mov    rax,QWORD PTR [rbp-0x8]
  40a636:	mov    rsi,rcx
  40a639:	mov    rdi,rax
  40a63c:	call   40a14c <flatcc_builder_get_emit_context@@Base+0x4c9>
  40a641:	test   eax,eax
  40a643:	je     40a64c <flatcc_emitter@@Base+0x158>
  40a645:	mov    eax,0xffffffff
  40a64a:	jmp    40a6a8 <flatcc_emitter@@Base+0x1b4>
  40a64c:	add    QWORD PTR [rbp-0x20],0x10
  40a651:	mov    eax,DWORD PTR [rbp-0x24]
  40a654:	lea    edx,[rax-0x1]
  40a657:	mov    DWORD PTR [rbp-0x24],edx
  40a65a:	test   eax,eax
  40a65c:	jne    40a623 <flatcc_emitter@@Base+0x12f>
  40a65e:	mov    eax,0x0
  40a663:	jmp    40a6a8 <flatcc_emitter@@Base+0x1b4>
  40a665:	jmp    40a696 <flatcc_emitter@@Base+0x1a2>
  40a667:	mov    rax,QWORD PTR [rbp-0x20]
  40a66b:	mov    rdx,QWORD PTR [rax+0x8]
  40a66f:	mov    rax,QWORD PTR [rbp-0x20]
  40a673:	mov    rcx,QWORD PTR [rax]
  40a676:	mov    rax,QWORD PTR [rbp-0x10]
  40a67a:	mov    rsi,rcx
  40a67d:	mov    rdi,rax
  40a680:	call   4030b0 <memcpy@plt>
  40a685:	mov    rax,QWORD PTR [rbp-0x20]
  40a689:	mov    rax,QWORD PTR [rax+0x8]
  40a68d:	add    QWORD PTR [rbp-0x10],rax
  40a691:	add    QWORD PTR [rbp-0x20],0x10
  40a696:	mov    eax,DWORD PTR [rbp-0x24]
  40a699:	lea    edx,[rax-0x1]
  40a69c:	mov    DWORD PTR [rbp-0x24],edx
  40a69f:	test   eax,eax
  40a6a1:	jne    40a667 <flatcc_emitter@@Base+0x173>
  40a6a3:	mov    eax,0x0
  40a6a8:	leave  
  40a6a9:	ret    

000000000040a6aa <flatcc_emitter_copy_buffer@@Base>:
  40a6aa:	push   rbp
  40a6ab:	mov    rbp,rsp
  40a6ae:	sub    rsp,0x30
  40a6b2:	mov    QWORD PTR [rbp-0x18],rdi
  40a6b6:	mov    QWORD PTR [rbp-0x20],rsi
  40a6ba:	mov    QWORD PTR [rbp-0x28],rdx
  40a6be:	mov    rax,QWORD PTR [rbp-0x18]
  40a6c2:	mov    rax,QWORD PTR [rax+0x30]
  40a6c6:	cmp    rax,QWORD PTR [rbp-0x28]
  40a6ca:	jbe    40a6d6 <flatcc_emitter_copy_buffer@@Base+0x2c>
  40a6cc:	mov    eax,0x0
  40a6d1:	jmp    40a7da <flatcc_emitter_copy_buffer@@Base+0x130>
  40a6d6:	mov    rax,QWORD PTR [rbp-0x18]
  40a6da:	mov    rax,QWORD PTR [rax]
  40a6dd:	test   rax,rax
  40a6e0:	jne    40a6ec <flatcc_emitter_copy_buffer@@Base+0x42>
  40a6e2:	mov    eax,0x0
  40a6e7:	jmp    40a7da <flatcc_emitter_copy_buffer@@Base+0x130>
  40a6ec:	mov    rax,QWORD PTR [rbp-0x18]
  40a6f0:	mov    rdx,QWORD PTR [rax]
  40a6f3:	mov    rax,QWORD PTR [rbp-0x18]
  40a6f7:	mov    rax,QWORD PTR [rax+0x8]
  40a6fb:	cmp    rdx,rax
  40a6fe:	jne    40a728 <flatcc_emitter_copy_buffer@@Base+0x7e>
  40a700:	mov    rax,QWORD PTR [rbp-0x18]
  40a704:	mov    rdx,QWORD PTR [rax+0x30]
  40a708:	mov    rax,QWORD PTR [rbp-0x18]
  40a70c:	mov    rcx,QWORD PTR [rax+0x10]
  40a710:	mov    rax,QWORD PTR [rbp-0x20]
  40a714:	mov    rsi,rcx
  40a717:	mov    rdi,rax
  40a71a:	call   4030b0 <memcpy@plt>
  40a71f:	mov    rax,QWORD PTR [rbp-0x20]
  40a723:	jmp    40a7da <flatcc_emitter_copy_buffer@@Base+0x130>
  40a728:	mov    rax,QWORD PTR [rbp-0x18]
  40a72c:	mov    rax,QWORD PTR [rax+0x18]
  40a730:	mov    edx,0xb80
  40a735:	sub    rdx,rax
  40a738:	mov    rax,rdx
  40a73b:	mov    QWORD PTR [rbp-0x8],rax
  40a73f:	mov    rax,QWORD PTR [rbp-0x18]
  40a743:	mov    rcx,QWORD PTR [rax+0x10]
  40a747:	mov    rdx,QWORD PTR [rbp-0x8]
  40a74b:	mov    rax,QWORD PTR [rbp-0x20]
  40a74f:	mov    rsi,rcx
  40a752:	mov    rdi,rax
  40a755:	call   4030b0 <memcpy@plt>
  40a75a:	mov    rax,QWORD PTR [rbp-0x8]
  40a75e:	add    QWORD PTR [rbp-0x20],rax
  40a762:	mov    rax,QWORD PTR [rbp-0x18]
  40a766:	mov    rax,QWORD PTR [rax]
  40a769:	mov    rax,QWORD PTR [rax+0xb80]
  40a770:	mov    QWORD PTR [rbp-0x10],rax
  40a774:	jmp    40a7a5 <flatcc_emitter_copy_buffer@@Base+0xfb>
  40a776:	mov    rcx,QWORD PTR [rbp-0x10]
  40a77a:	mov    rax,QWORD PTR [rbp-0x20]
  40a77e:	mov    edx,0xb80
  40a783:	mov    rsi,rcx
  40a786:	mov    rdi,rax
  40a789:	call   4030b0 <memcpy@plt>
  40a78e:	add    QWORD PTR [rbp-0x20],0xb80
  40a796:	mov    rax,QWORD PTR [rbp-0x10]
  40a79a:	mov    rax,QWORD PTR [rax+0xb80]
  40a7a1:	mov    QWORD PTR [rbp-0x10],rax
  40a7a5:	mov    rax,QWORD PTR [rbp-0x18]
  40a7a9:	mov    rax,QWORD PTR [rax+0x8]
  40a7ad:	cmp    rax,QWORD PTR [rbp-0x10]
  40a7b1:	jne    40a776 <flatcc_emitter_copy_buffer@@Base+0xcc>
  40a7b3:	mov    rax,QWORD PTR [rbp-0x18]
  40a7b7:	mov    rax,QWORD PTR [rax+0x28]
  40a7bb:	mov    edx,0xb80
  40a7c0:	sub    rdx,rax
  40a7c3:	mov    rcx,QWORD PTR [rbp-0x10]
  40a7c7:	mov    rax,QWORD PTR [rbp-0x20]
  40a7cb:	mov    rsi,rcx
  40a7ce:	mov    rdi,rax
  40a7d1:	call   4030b0 <memcpy@plt>
  40a7d6:	mov    rax,QWORD PTR [rbp-0x20]
  40a7da:	leave  
  40a7db:	ret    
  40a7dc:	push   rbp
  40a7dd:	mov    rbp,rsp
  40a7e0:	mov    DWORD PTR [rbp-0x4],edi
  40a7e3:	mov    eax,DWORD PTR [rbp-0x4]
  40a7e6:	pop    rbp
  40a7e7:	ret    
  40a7e8:	push   rbp
  40a7e9:	mov    rbp,rsp
  40a7ec:	sub    rsp,0x8
  40a7f0:	mov    QWORD PTR [rbp-0x8],rdi
  40a7f4:	mov    rax,QWORD PTR [rbp-0x8]
  40a7f8:	mov    eax,DWORD PTR [rax]
  40a7fa:	mov    edi,eax
  40a7fc:	call   40a7dc <flatcc_emitter_copy_buffer@@Base+0x132>
  40a801:	leave  
  40a802:	ret    
  40a803:	push   rbp
  40a804:	mov    rbp,rsp
  40a807:	mov    eax,edi
  40a809:	mov    WORD PTR [rbp-0x4],ax
  40a80d:	movzx  eax,WORD PTR [rbp-0x4]
  40a811:	pop    rbp
  40a812:	ret    
  40a813:	push   rbp
  40a814:	mov    rbp,rsp
  40a817:	sub    rsp,0x8
  40a81b:	mov    QWORD PTR [rbp-0x8],rdi
  40a81f:	mov    rax,QWORD PTR [rbp-0x8]
  40a823:	movzx  eax,WORD PTR [rax]
  40a826:	movzx  eax,ax
  40a829:	mov    edi,eax
  40a82b:	call   40a803 <flatcc_emitter_copy_buffer@@Base+0x159>
  40a830:	leave  
  40a831:	ret    
  40a832:	push   rbp
  40a833:	mov    rbp,rsp
  40a836:	mov    DWORD PTR [rbp-0x4],edi
  40a839:	mov    eax,DWORD PTR [rbp-0x4]
  40a83c:	pop    rbp
  40a83d:	ret    
  40a83e:	push   rbp
  40a83f:	mov    rbp,rsp
  40a842:	mov    DWORD PTR [rbp-0x4],edi
  40a845:	mov    eax,DWORD PTR [rbp-0x4]
  40a848:	pop    rbp
  40a849:	ret    
  40a84a:	push   rbp
  40a84b:	mov    rbp,rsp
  40a84e:	sub    rsp,0x8
  40a852:	mov    QWORD PTR [rbp-0x8],rdi
  40a856:	mov    rax,QWORD PTR [rbp-0x8]
  40a85a:	mov    eax,DWORD PTR [rax]
  40a85c:	mov    edi,eax
  40a85e:	call   40a832 <flatcc_emitter_copy_buffer@@Base+0x188>
  40a863:	leave  
  40a864:	ret    

000000000040a865 <flatcc_verify_error_string@@Base>:
  40a865:	push   rbp
  40a866:	mov    rbp,rsp
  40a869:	mov    DWORD PTR [rbp-0x4],edi
  40a86c:	cmp    DWORD PTR [rbp-0x4],0x24
  40a870:	ja     40aa2c <flatcc_verify_error_string@@Base+0x1c7>
  40a876:	mov    eax,DWORD PTR [rbp-0x4]
  40a879:	lea    rdx,[rax*4+0x0]
  40a881:	lea    rax,[rip+0x3b08]        # 40e390 <flatcc_builder_padding_base@@Base+0x11d0>
  40a888:	mov    eax,DWORD PTR [rdx+rax*1]
  40a88b:	movsxd rdx,eax
  40a88e:	lea    rax,[rip+0x3afb]        # 40e390 <flatcc_builder_padding_base@@Base+0x11d0>
  40a895:	add    rax,rdx
  40a898:	jmp    rax
  40a89a:	lea    rax,[rip+0x3649]        # 40deea <flatcc_builder_padding_base@@Base+0xd2a>
  40a8a1:	jmp    40aa33 <flatcc_verify_error_string@@Base+0x1ce>
  40a8a6:	lea    rax,[rip+0x3640]        # 40deed <flatcc_builder_padding_base@@Base+0xd2d>
  40a8ad:	jmp    40aa33 <flatcc_verify_error_string@@Base+0x1ce>
  40a8b2:	lea    rax,[rip+0x364c]        # 40df05 <flatcc_builder_padding_base@@Base+0xd45>
  40a8b9:	jmp    40aa33 <flatcc_verify_error_string@@Base+0x1ce>
  40a8be:	lea    rax,[rip+0x3654]        # 40df19 <flatcc_builder_padding_base@@Base+0xd59>
  40a8c5:	jmp    40aa33 <flatcc_verify_error_string@@Base+0x1ce>
  40a8ca:	lea    rax,[rip+0x3662]        # 40df33 <flatcc_builder_padding_base@@Base+0xd73>
  40a8d1:	jmp    40aa33 <flatcc_verify_error_string@@Base+0x1ce>
  40a8d6:	lea    rax,[rip+0x3673]        # 40df50 <flatcc_builder_padding_base@@Base+0xd90>
  40a8dd:	jmp    40aa33 <flatcc_verify_error_string@@Base+0x1ce>
  40a8e2:	lea    rax,[rip+0x368f]        # 40df78 <flatcc_builder_padding_base@@Base+0xdb8>
  40a8e9:	jmp    40aa33 <flatcc_verify_error_string@@Base+0x1ce>
  40a8ee:	lea    rax,[rip+0x36a2]        # 40df97 <flatcc_builder_padding_base@@Base+0xdd7>
  40a8f5:	jmp    40aa33 <flatcc_verify_error_string@@Base+0x1ce>
  40a8fa:	lea    rax,[rip+0x36b1]        # 40dfb2 <flatcc_builder_padding_base@@Base+0xdf2>
  40a901:	jmp    40aa33 <flatcc_verify_error_string@@Base+0x1ce>
  40a906:	lea    rax,[rip+0x36b9]        # 40dfc6 <flatcc_builder_padding_base@@Base+0xe06>
  40a90d:	jmp    40aa33 <flatcc_verify_error_string@@Base+0x1ce>
  40a912:	lea    rax,[rip+0x36c1]        # 40dfda <flatcc_builder_padding_base@@Base+0xe1a>
  40a919:	jmp    40aa33 <flatcc_verify_error_string@@Base+0x1ce>
  40a91e:	lea    rax,[rip+0x36ca]        # 40dfef <flatcc_builder_padding_base@@Base+0xe2f>
  40a925:	jmp    40aa33 <flatcc_verify_error_string@@Base+0x1ce>
  40a92a:	lea    rax,[rip+0x36cf]        # 40e000 <flatcc_builder_padding_base@@Base+0xe40>
  40a931:	jmp    40aa33 <flatcc_verify_error_string@@Base+0x1ce>
  40a936:	lea    rax,[rip+0x36db]        # 40e018 <flatcc_builder_padding_base@@Base+0xe58>
  40a93d:	jmp    40aa33 <flatcc_verify_error_string@@Base+0x1ce>
  40a942:	lea    rax,[rip+0x36e8]        # 40e031 <flatcc_builder_padding_base@@Base+0xe71>
  40a949:	jmp    40aa33 <flatcc_verify_error_string@@Base+0x1ce>
  40a94e:	lea    rax,[rip+0x36fb]        # 40e050 <flatcc_builder_padding_base@@Base+0xe90>
  40a955:	jmp    40aa33 <flatcc_verify_error_string@@Base+0x1ce>
  40a95a:	lea    rax,[rip+0x3717]        # 40e078 <flatcc_builder_padding_base@@Base+0xeb8>
  40a961:	jmp    40aa33 <flatcc_verify_error_string@@Base+0x1ce>
  40a966:	lea    rax,[rip+0x3733]        # 40e0a0 <flatcc_builder_padding_base@@Base+0xee0>
  40a96d:	jmp    40aa33 <flatcc_verify_error_string@@Base+0x1ce>
  40a972:	lea    rax,[rip+0x374f]        # 40e0c8 <flatcc_builder_padding_base@@Base+0xf08>
  40a979:	jmp    40aa33 <flatcc_verify_error_string@@Base+0x1ce>
  40a97e:	lea    rax,[rip+0x375b]        # 40e0e0 <flatcc_builder_padding_base@@Base+0xf20>
  40a985:	jmp    40aa33 <flatcc_verify_error_string@@Base+0x1ce>
  40a98a:	lea    rax,[rip+0x3776]        # 40e107 <flatcc_builder_padding_base@@Base+0xf47>
  40a991:	jmp    40aa33 <flatcc_verify_error_string@@Base+0x1ce>
  40a996:	lea    rax,[rip+0x3783]        # 40e120 <flatcc_builder_padding_base@@Base+0xf60>
  40a99d:	jmp    40aa33 <flatcc_verify_error_string@@Base+0x1ce>
  40a9a2:	lea    rax,[rip+0x37a7]        # 40e150 <flatcc_builder_padding_base@@Base+0xf90>
  40a9a9:	jmp    40aa33 <flatcc_verify_error_string@@Base+0x1ce>
  40a9ae:	lea    rax,[rip+0x37d3]        # 40e188 <flatcc_builder_padding_base@@Base+0xfc8>
  40a9b5:	jmp    40aa33 <flatcc_verify_error_string@@Base+0x1ce>
  40a9b7:	lea    rax,[rip+0x37fa]        # 40e1b8 <flatcc_builder_padding_base@@Base+0xff8>
  40a9be:	jmp    40aa33 <flatcc_verify_error_string@@Base+0x1ce>
  40a9c0:	lea    rax,[rip+0x3821]        # 40e1e8 <flatcc_builder_padding_base@@Base+0x1028>
  40a9c7:	jmp    40aa33 <flatcc_verify_error_string@@Base+0x1ce>
  40a9c9:	lea    rax,[rip+0x3847]        # 40e217 <flatcc_builder_padding_base@@Base+0x1057>
  40a9d0:	jmp    40aa33 <flatcc_verify_error_string@@Base+0x1ce>
  40a9d2:	lea    rax,[rip+0x3852]        # 40e22b <flatcc_builder_padding_base@@Base+0x106b>
  40a9d9:	jmp    40aa33 <flatcc_verify_error_string@@Base+0x1ce>
  40a9db:	lea    rax,[rip+0x3864]        # 40e246 <flatcc_builder_padding_base@@Base+0x1086>
  40a9e2:	jmp    40aa33 <flatcc_verify_error_string@@Base+0x1ce>
  40a9e4:	lea    rax,[rip+0x3875]        # 40e260 <flatcc_builder_padding_base@@Base+0x10a0>
  40a9eb:	jmp    40aa33 <flatcc_verify_error_string@@Base+0x1ce>
  40a9ed:	lea    rax,[rip+0x3894]        # 40e288 <flatcc_builder_padding_base@@Base+0x10c8>
  40a9f4:	jmp    40aa33 <flatcc_verify_error_string@@Base+0x1ce>
  40a9f6:	lea    rax,[rip+0x38b1]        # 40e2ae <flatcc_builder_padding_base@@Base+0x10ee>
  40a9fd:	jmp    40aa33 <flatcc_verify_error_string@@Base+0x1ce>
  40a9ff:	lea    rax,[rip+0x38c2]        # 40e2c8 <flatcc_builder_padding_base@@Base+0x1108>
  40aa06:	jmp    40aa33 <flatcc_verify_error_string@@Base+0x1ce>
  40aa08:	lea    rax,[rip+0x38e1]        # 40e2f0 <flatcc_builder_padding_base@@Base+0x1130>
  40aa0f:	jmp    40aa33 <flatcc_verify_error_string@@Base+0x1ce>
  40aa11:	lea    rax,[rip+0x3900]        # 40e318 <flatcc_builder_padding_base@@Base+0x1158>
  40aa18:	jmp    40aa33 <flatcc_verify_error_string@@Base+0x1ce>
  40aa1a:	lea    rax,[rip+0x392f]        # 40e350 <flatcc_builder_padding_base@@Base+0x1190>
  40aa21:	jmp    40aa33 <flatcc_verify_error_string@@Base+0x1ce>
  40aa23:	lea    rax,[rip+0x394e]        # 40e378 <flatcc_builder_padding_base@@Base+0x11b8>
  40aa2a:	jmp    40aa33 <flatcc_verify_error_string@@Base+0x1ce>
  40aa2c:	lea    rax,[rip+0x3953]        # 40e386 <flatcc_builder_padding_base@@Base+0x11c6>
  40aa33:	pop    rbp
  40aa34:	ret    
  40aa35:	push   rbp
  40aa36:	mov    rbp,rsp
  40aa39:	sub    rsp,0x10
  40aa3d:	mov    QWORD PTR [rbp-0x8],rdi
  40aa41:	mov    DWORD PTR [rbp-0xc],esi
  40aa44:	mov    edx,DWORD PTR [rbp-0xc]
  40aa47:	mov    rax,QWORD PTR [rbp-0x8]
  40aa4b:	add    rax,rdx
  40aa4e:	mov    rdi,rax
  40aa51:	call   40a7e8 <flatcc_emitter_copy_buffer@@Base+0x13e>
  40aa56:	leave  
  40aa57:	ret    
  40aa58:	push   rbp
  40aa59:	mov    rbp,rsp
  40aa5c:	sub    rsp,0x20
  40aa60:	mov    QWORD PTR [rbp-0x18],rdi
  40aa64:	mov    rax,QWORD PTR fs:0x28
  40aa6d:	mov    QWORD PTR [rbp-0x8],rax
  40aa71:	xor    eax,eax
  40aa73:	mov    DWORD PTR [rbp-0xc],0x0
  40aa7a:	mov    rcx,QWORD PTR [rbp-0x18]
  40aa7e:	lea    rax,[rbp-0xc]
  40aa82:	mov    edx,0x4
  40aa87:	mov    rsi,rcx
  40aa8a:	mov    rdi,rax
  40aa8d:	call   403040 <strncpy@plt>
  40aa92:	mov    eax,DWORD PTR [rbp-0xc]
  40aa95:	mov    edi,eax
  40aa97:	call   40a83e <flatcc_emitter_copy_buffer@@Base+0x194>
  40aa9c:	mov    rdx,QWORD PTR [rbp-0x8]
  40aaa0:	xor    rdx,QWORD PTR fs:0x28
  40aaa9:	je     40aab0 <flatcc_verify_error_string@@Base+0x24b>
  40aaab:	call   403060 <__stack_chk_fail@plt>
  40aab0:	leave  
  40aab1:	ret    
  40aab2:	push   rbp
  40aab3:	mov    rbp,rsp
  40aab6:	sub    rsp,0x10
  40aaba:	mov    QWORD PTR [rbp-0x8],rdi
  40aabe:	mov    DWORD PTR [rbp-0xc],esi
  40aac1:	mov    edx,DWORD PTR [rbp-0xc]
  40aac4:	mov    rax,QWORD PTR [rbp-0x8]
  40aac8:	add    rax,rdx
  40aacb:	mov    rdi,rax
  40aace:	call   40a84a <flatcc_emitter_copy_buffer@@Base+0x1a0>
  40aad3:	leave  
  40aad4:	ret    
  40aad5:	push   rbp
  40aad6:	mov    rbp,rsp
  40aad9:	sub    rsp,0x10
  40aadd:	mov    QWORD PTR [rbp-0x8],rdi
  40aae1:	mov    DWORD PTR [rbp-0xc],esi
  40aae4:	mov    edx,DWORD PTR [rbp-0xc]
  40aae7:	mov    rax,QWORD PTR [rbp-0x8]
  40aaeb:	add    rax,rdx
  40aaee:	mov    rdi,rax
  40aaf1:	call   40a813 <flatcc_emitter_copy_buffer@@Base+0x169>
  40aaf6:	leave  
  40aaf7:	ret    
  40aaf8:	push   rbp
  40aaf9:	mov    rbp,rsp
  40aafc:	mov    DWORD PTR [rbp-0x14],edi
  40aaff:	mov    DWORD PTR [rbp-0x18],esi
  40ab02:	mov    DWORD PTR [rbp-0x1c],edx
  40ab05:	mov    edx,DWORD PTR [rbp-0x18]
  40ab08:	mov    eax,DWORD PTR [rbp-0x1c]
  40ab0b:	add    eax,edx
  40ab0d:	mov    DWORD PTR [rbp-0x4],eax
  40ab10:	mov    eax,DWORD PTR [rbp-0x4]
  40ab13:	cmp    eax,DWORD PTR [rbp-0x18]
  40ab16:	jbe    40ab39 <flatcc_verify_error_string@@Base+0x2d4>
  40ab18:	mov    eax,DWORD PTR [rbp-0x4]
  40ab1b:	lea    rdx,[rax+0x4]
  40ab1f:	mov    eax,DWORD PTR [rbp-0x14]
  40ab22:	cmp    rdx,rax
  40ab25:	ja     40ab39 <flatcc_verify_error_string@@Base+0x2d4>
  40ab27:	mov    eax,DWORD PTR [rbp-0x4]
  40ab2a:	and    eax,0x3
  40ab2d:	test   rax,rax
  40ab30:	jne    40ab39 <flatcc_verify_error_string@@Base+0x2d4>
  40ab32:	mov    eax,0x1
  40ab37:	jmp    40ab3e <flatcc_verify_error_string@@Base+0x2d9>
  40ab39:	mov    eax,0x0
  40ab3e:	pop    rbp
  40ab3f:	ret    
  40ab40:	push   rbp
  40ab41:	mov    rbp,rsp
  40ab44:	mov    DWORD PTR [rbp-0x14],edi
  40ab47:	mov    DWORD PTR [rbp-0x18],esi
  40ab4a:	mov    DWORD PTR [rbp-0x1c],edx
  40ab4d:	mov    eax,ecx
  40ab4f:	mov    WORD PTR [rbp-0x20],ax
  40ab53:	mov    edx,DWORD PTR [rbp-0x18]
  40ab56:	mov    eax,DWORD PTR [rbp-0x1c]
  40ab59:	add    eax,edx
  40ab5b:	mov    DWORD PTR [rbp-0x4],eax
  40ab5e:	mov    eax,0x4
  40ab63:	cmp    WORD PTR [rbp-0x20],0x4
  40ab68:	cmovae ax,WORD PTR [rbp-0x20]
  40ab6d:	mov    WORD PTR [rbp-0x20],ax
  40ab71:	mov    eax,DWORD PTR [rbp-0x4]
  40ab74:	cmp    eax,DWORD PTR [rbp-0x18]
  40ab77:	jbe    40abaa <flatcc_verify_error_string@@Base+0x345>
  40ab79:	mov    eax,DWORD PTR [rbp-0x4]
  40ab7c:	lea    rdx,[rax+0x4]
  40ab80:	mov    eax,DWORD PTR [rbp-0x14]
  40ab83:	cmp    rdx,rax
  40ab86:	ja     40abaa <flatcc_verify_error_string@@Base+0x345>
  40ab88:	mov    eax,DWORD PTR [rbp-0x4]
  40ab8b:	lea    rdx,[rax+0x4]
  40ab8f:	movzx  eax,WORD PTR [rbp-0x20]
  40ab93:	sub    eax,0x1
  40ab96:	or     eax,0x3
  40ab99:	cdqe   
  40ab9b:	and    rax,rdx
  40ab9e:	test   rax,rax
  40aba1:	jne    40abaa <flatcc_verify_error_string@@Base+0x345>
  40aba3:	mov    eax,0x1
  40aba8:	jmp    40abaf <flatcc_verify_error_string@@Base+0x34a>
  40abaa:	mov    eax,0x0
  40abaf:	pop    rbp
  40abb0:	ret    
  40abb1:	push   rbp
  40abb2:	mov    rbp,rsp
  40abb5:	mov    DWORD PTR [rbp-0x14],edi
  40abb8:	mov    DWORD PTR [rbp-0x18],esi
  40abbb:	mov    DWORD PTR [rbp-0x1c],edx
  40abbe:	mov    DWORD PTR [rbp-0x20],ecx
  40abc1:	mov    eax,r8d
  40abc4:	mov    WORD PTR [rbp-0x24],ax
  40abc8:	cmp    DWORD PTR [rbp-0x1c],0x0
  40abcc:	je     40abdb <flatcc_verify_error_string@@Base+0x376>
  40abce:	mov    edx,DWORD PTR [rbp-0x18]
  40abd1:	mov    eax,DWORD PTR [rbp-0x1c]
  40abd4:	add    eax,edx
  40abd6:	cmp    eax,DWORD PTR [rbp-0x14]
  40abd9:	jbe    40abe2 <flatcc_verify_error_string@@Base+0x37d>
  40abdb:	mov    eax,0x12
  40abe0:	jmp    40ac51 <flatcc_verify_error_string@@Base+0x3ec>
  40abe2:	mov    eax,DWORD PTR [rbp-0x1c]
  40abe5:	add    DWORD PTR [rbp-0x18],eax
  40abe8:	mov    edx,DWORD PTR [rbp-0x18]
  40abeb:	mov    eax,DWORD PTR [rbp-0x20]
  40abee:	add    eax,edx
  40abf0:	cmp    eax,DWORD PTR [rbp-0x18]
  40abf3:	setae  al
  40abf6:	movzx  eax,al
  40abf9:	mov    DWORD PTR [rbp-0xc],eax
  40abfc:	cmp    DWORD PTR [rbp-0xc],0x0
  40ac00:	jne    40ac09 <flatcc_verify_error_string@@Base+0x3a4>
  40ac02:	mov    eax,0xa
  40ac07:	jmp    40ac51 <flatcc_verify_error_string@@Base+0x3ec>
  40ac09:	mov    edx,DWORD PTR [rbp-0x18]
  40ac0c:	mov    eax,DWORD PTR [rbp-0x20]
  40ac0f:	add    eax,edx
  40ac11:	cmp    eax,DWORD PTR [rbp-0x14]
  40ac14:	setbe  al
  40ac17:	movzx  eax,al
  40ac1a:	mov    DWORD PTR [rbp-0x8],eax
  40ac1d:	cmp    DWORD PTR [rbp-0x8],0x0
  40ac21:	jne    40ac2a <flatcc_verify_error_string@@Base+0x3c5>
  40ac23:	mov    eax,0x9
  40ac28:	jmp    40ac51 <flatcc_verify_error_string@@Base+0x3ec>
  40ac2a:	movzx  eax,WORD PTR [rbp-0x24]
  40ac2e:	sub    eax,0x1
  40ac31:	and    eax,DWORD PTR [rbp-0x18]
  40ac34:	test   eax,eax
  40ac36:	sete   al
  40ac39:	movzx  eax,al
  40ac3c:	mov    DWORD PTR [rbp-0x4],eax
  40ac3f:	cmp    DWORD PTR [rbp-0x4],0x0
  40ac43:	jne    40ac4c <flatcc_verify_error_string@@Base+0x3e7>
  40ac45:	mov    eax,0xb
  40ac4a:	jmp    40ac51 <flatcc_verify_error_string@@Base+0x3ec>
  40ac4c:	mov    eax,0x0
  40ac51:	pop    rbp
  40ac52:	ret    
  40ac53:	push   rbp
  40ac54:	mov    rbp,rsp
  40ac57:	sub    rsp,0x20
  40ac5b:	mov    QWORD PTR [rbp-0x18],rdi
  40ac5f:	mov    eax,esi
  40ac61:	mov    WORD PTR [rbp-0x1c],ax
  40ac65:	movzx  eax,WORD PTR [rbp-0x1c]
  40ac69:	add    eax,0x2
  40ac6c:	cdqe   
  40ac6e:	add    eax,eax
  40ac70:	mov    WORD PTR [rbp-0x2],ax
  40ac74:	mov    rax,QWORD PTR [rbp-0x18]
  40ac78:	movzx  eax,WORD PTR [rax+0x1e]
  40ac7c:	cmp    ax,WORD PTR [rbp-0x2]
  40ac80:	ja     40ac89 <flatcc_verify_error_string@@Base+0x424>
  40ac82:	mov    eax,0x0
  40ac87:	jmp    40aca2 <flatcc_verify_error_string@@Base+0x43d>
  40ac89:	movzx  edx,WORD PTR [rbp-0x2]
  40ac8d:	mov    rax,QWORD PTR [rbp-0x18]
  40ac91:	mov    rax,QWORD PTR [rax+0x10]
  40ac95:	mov    esi,edx
  40ac97:	mov    rdi,rax
  40ac9a:	call   40aad5 <flatcc_verify_error_string@@Base+0x270>
  40ac9f:	movzx  eax,ax
  40aca2:	leave  
  40aca3:	ret    
  40aca4:	push   rbp
  40aca5:	mov    rbp,rsp
  40aca8:	sub    rsp,0x20
  40acac:	mov    QWORD PTR [rbp-0x18],rdi
  40acb0:	mov    eax,esi
  40acb2:	mov    WORD PTR [rbp-0x1c],ax
  40acb6:	movzx  edx,WORD PTR [rbp-0x1c]
  40acba:	mov    rax,QWORD PTR [rbp-0x18]
  40acbe:	mov    esi,edx
  40acc0:	mov    rdi,rax
  40acc3:	call   40ac53 <flatcc_verify_error_string@@Base+0x3ee>
  40acc8:	mov    WORD PTR [rbp-0x2],ax
  40accc:	cmp    WORD PTR [rbp-0x2],0x0
  40acd1:	je     40acef <flatcc_verify_error_string@@Base+0x48a>
  40acd3:	mov    rax,QWORD PTR [rbp-0x18]
  40acd7:	mov    rdx,QWORD PTR [rax]
  40acda:	mov    rax,QWORD PTR [rbp-0x18]
  40acde:	mov    eax,DWORD PTR [rax+0x18]
  40ace1:	mov    ecx,eax
  40ace3:	movzx  eax,WORD PTR [rbp-0x2]
  40ace7:	add    rax,rcx
  40acea:	add    rax,rdx
  40aced:	jmp    40acf4 <flatcc_verify_error_string@@Base+0x48f>
  40acef:	mov    eax,0x0
  40acf4:	leave  
  40acf5:	ret    
  40acf6:	push   rbp
  40acf7:	mov    rbp,rsp
  40acfa:	sub    rsp,0x38
  40acfe:	mov    QWORD PTR [rbp-0x28],rdi
  40ad02:	mov    eax,esi
  40ad04:	mov    DWORD PTR [rbp-0x30],edx
  40ad07:	mov    DWORD PTR [rbp-0x34],ecx
  40ad0a:	mov    edx,r8d
  40ad0d:	mov    WORD PTR [rbp-0x2c],ax
  40ad11:	mov    WORD PTR [rbp-0x38],dx
  40ad15:	mov    rax,QWORD PTR [rbp-0x28]
  40ad19:	mov    rax,QWORD PTR [rax]
  40ad1c:	mov    DWORD PTR [rbp-0x1c],eax
  40ad1f:	movzx  edx,WORD PTR [rbp-0x2c]
  40ad23:	mov    rax,QWORD PTR [rbp-0x28]
  40ad27:	mov    esi,edx
  40ad29:	mov    rdi,rax
  40ad2c:	call   40ac53 <flatcc_verify_error_string@@Base+0x3ee>
  40ad31:	mov    WORD PTR [rbp-0x1e],ax
  40ad35:	cmp    WORD PTR [rbp-0x1e],0x0
  40ad3a:	jne    40ad63 <flatcc_verify_error_string@@Base+0x4fe>
  40ad3c:	cmp    DWORD PTR [rbp-0x30],0x0
  40ad40:	sete   al
  40ad43:	movzx  eax,al
  40ad46:	mov    DWORD PTR [rbp-0x18],eax
  40ad49:	cmp    DWORD PTR [rbp-0x18],0x0
  40ad4d:	jne    40ad59 <flatcc_verify_error_string@@Base+0x4f4>
  40ad4f:	mov    eax,0x4
  40ad54:	jmp    40ade3 <flatcc_verify_error_string@@Base+0x57e>
  40ad59:	mov    eax,0x0
  40ad5e:	jmp    40ade3 <flatcc_verify_error_string@@Base+0x57e>
  40ad63:	movzx  eax,WORD PTR [rbp-0x1e]
  40ad67:	mov    DWORD PTR [rbp-0x14],eax
  40ad6a:	mov    edx,DWORD PTR [rbp-0x14]
  40ad6d:	mov    eax,DWORD PTR [rbp-0x34]
  40ad70:	add    eax,edx
  40ad72:	mov    DWORD PTR [rbp-0x10],eax
  40ad75:	mov    rax,QWORD PTR [rbp-0x28]
  40ad79:	movzx  eax,WORD PTR [rax+0x1c]
  40ad7d:	movzx  eax,ax
  40ad80:	cmp    eax,DWORD PTR [rbp-0x10]
  40ad83:	setae  al
  40ad86:	movzx  eax,al
  40ad89:	mov    DWORD PTR [rbp-0xc],eax
  40ad8c:	cmp    DWORD PTR [rbp-0xc],0x0
  40ad90:	jne    40ad99 <flatcc_verify_error_string@@Base+0x534>
  40ad92:	mov    eax,0xd
  40ad97:	jmp    40ade3 <flatcc_verify_error_string@@Base+0x57e>
  40ad99:	mov    DWORD PTR [rbp-0x8],0x1
  40ada0:	cmp    DWORD PTR [rbp-0x8],0x0
  40ada4:	jne    40adad <flatcc_verify_error_string@@Base+0x548>
  40ada6:	mov    eax,0xe
  40adab:	jmp    40ade3 <flatcc_verify_error_string@@Base+0x57e>
  40adad:	mov    rax,QWORD PTR [rbp-0x28]
  40adb1:	mov    edx,DWORD PTR [rax+0x18]
  40adb4:	mov    eax,DWORD PTR [rbp-0x1c]
  40adb7:	add    eax,edx
  40adb9:	add    DWORD PTR [rbp-0x14],eax
  40adbc:	movzx  eax,WORD PTR [rbp-0x38]
  40adc0:	sub    eax,0x1
  40adc3:	and    eax,DWORD PTR [rbp-0x14]
  40adc6:	test   eax,eax
  40adc8:	sete   al
  40adcb:	movzx  eax,al
  40adce:	mov    DWORD PTR [rbp-0x4],eax
  40add1:	cmp    DWORD PTR [rbp-0x4],0x0
  40add5:	jne    40adde <flatcc_verify_error_string@@Base+0x579>
  40add7:	mov    eax,0xc
  40addc:	jmp    40ade3 <flatcc_verify_error_string@@Base+0x57e>
  40adde:	mov    eax,0x0
  40ade3:	leave  
  40ade4:	ret    
  40ade5:	push   rbp
  40ade6:	mov    rbp,rsp
  40ade9:	sub    rsp,0x38
  40aded:	mov    QWORD PTR [rbp-0x28],rdi
  40adf1:	mov    eax,esi
  40adf3:	mov    DWORD PTR [rbp-0x30],edx
  40adf6:	mov    QWORD PTR [rbp-0x38],rcx
  40adfa:	mov    WORD PTR [rbp-0x2c],ax
  40adfe:	movzx  edx,WORD PTR [rbp-0x2c]
  40ae02:	mov    rax,QWORD PTR [rbp-0x28]
  40ae06:	mov    esi,edx
  40ae08:	mov    rdi,rax
  40ae0b:	call   40ac53 <flatcc_verify_error_string@@Base+0x3ee>
  40ae10:	mov    WORD PTR [rbp-0x16],ax
  40ae14:	cmp    WORD PTR [rbp-0x16],0x0
  40ae19:	jne    40ae3c <flatcc_verify_error_string@@Base+0x5d7>
  40ae1b:	mov    rax,QWORD PTR [rbp-0x38]
  40ae1f:	mov    DWORD PTR [rax],0x0
  40ae25:	cmp    DWORD PTR [rbp-0x30],0x0
  40ae29:	je     40ae35 <flatcc_verify_error_string@@Base+0x5d0>
  40ae2b:	mov    eax,0x4
  40ae30:	jmp    40aebb <flatcc_verify_error_string@@Base+0x656>
  40ae35:	mov    eax,0x0
  40ae3a:	jmp    40aebb <flatcc_verify_error_string@@Base+0x656>
  40ae3c:	movzx  eax,WORD PTR [rbp-0x16]
  40ae40:	mov    DWORD PTR [rbp-0x14],eax
  40ae43:	mov    eax,DWORD PTR [rbp-0x14]
  40ae46:	add    eax,0x4
  40ae49:	mov    DWORD PTR [rbp-0x10],eax
  40ae4c:	mov    rax,QWORD PTR [rbp-0x28]
  40ae50:	movzx  eax,WORD PTR [rax+0x1c]
  40ae54:	movzx  eax,ax
  40ae57:	cmp    eax,DWORD PTR [rbp-0x10]
  40ae5a:	setae  al
  40ae5d:	movzx  eax,al
  40ae60:	mov    DWORD PTR [rbp-0xc],eax
  40ae63:	cmp    DWORD PTR [rbp-0xc],0x0
  40ae67:	jne    40ae70 <flatcc_verify_error_string@@Base+0x60b>
  40ae69:	mov    eax,0xd
  40ae6e:	jmp    40aebb <flatcc_verify_error_string@@Base+0x656>
  40ae70:	mov    DWORD PTR [rbp-0x8],0x1
  40ae77:	cmp    DWORD PTR [rbp-0x8],0x0
  40ae7b:	jne    40ae84 <flatcc_verify_error_string@@Base+0x61f>
  40ae7d:	mov    eax,0xe
  40ae82:	jmp    40aebb <flatcc_verify_error_string@@Base+0x656>
  40ae84:	mov    rax,QWORD PTR [rbp-0x28]
  40ae88:	mov    eax,DWORD PTR [rax+0x18]
  40ae8b:	add    DWORD PTR [rbp-0x14],eax
  40ae8e:	mov    eax,DWORD PTR [rbp-0x14]
  40ae91:	and    eax,0x3
  40ae94:	test   rax,rax
  40ae97:	sete   al
  40ae9a:	movzx  eax,al
  40ae9d:	mov    DWORD PTR [rbp-0x4],eax
  40aea0:	cmp    DWORD PTR [rbp-0x4],0x0
  40aea4:	jne    40aead <flatcc_verify_error_string@@Base+0x648>
  40aea6:	mov    eax,0xc
  40aeab:	jmp    40aebb <flatcc_verify_error_string@@Base+0x656>
  40aead:	mov    rax,QWORD PTR [rbp-0x38]
  40aeb1:	mov    edx,DWORD PTR [rbp-0x14]
  40aeb4:	mov    DWORD PTR [rax],edx
  40aeb6:	mov    eax,0x0
  40aebb:	leave  
  40aebc:	ret    
  40aebd:	push   rbp
  40aebe:	mov    rbp,rsp
  40aec1:	sub    rsp,0x28
  40aec5:	mov    QWORD PTR [rbp-0x18],rdi
  40aec9:	mov    DWORD PTR [rbp-0x1c],esi
  40aecc:	mov    DWORD PTR [rbp-0x20],edx
  40aecf:	mov    DWORD PTR [rbp-0x24],ecx
  40aed2:	mov    edx,DWORD PTR [rbp-0x24]
  40aed5:	mov    ecx,DWORD PTR [rbp-0x20]
  40aed8:	mov    eax,DWORD PTR [rbp-0x1c]
  40aedb:	mov    esi,ecx
  40aedd:	mov    edi,eax
  40aedf:	call   40aaf8 <flatcc_verify_error_string@@Base+0x293>
  40aee4:	mov    DWORD PTR [rbp-0x10],eax
  40aee7:	cmp    DWORD PTR [rbp-0x10],0x0
  40aeeb:	jne    40aef4 <flatcc_verify_error_string@@Base+0x68f>
  40aeed:	mov    eax,0x11
  40aef2:	jmp    40af66 <flatcc_verify_error_string@@Base+0x701>
  40aef4:	mov    eax,DWORD PTR [rbp-0x24]
  40aef7:	add    DWORD PTR [rbp-0x20],eax
  40aefa:	mov    edx,DWORD PTR [rbp-0x20]
  40aefd:	mov    rax,QWORD PTR [rbp-0x18]
  40af01:	mov    esi,edx
  40af03:	mov    rdi,rax
  40af06:	call   40aa35 <flatcc_verify_error_string@@Base+0x1d0>
  40af0b:	mov    DWORD PTR [rbp-0xc],eax
  40af0e:	add    DWORD PTR [rbp-0x20],0x4
  40af12:	mov    eax,DWORD PTR [rbp-0x1c]
  40af15:	sub    eax,DWORD PTR [rbp-0x20]
  40af18:	mov    edx,DWORD PTR [rbp-0xc]
  40af1b:	add    edx,0x1
  40af1e:	cmp    eax,edx
  40af20:	setae  al
  40af23:	movzx  eax,al
  40af26:	mov    DWORD PTR [rbp-0x8],eax
  40af29:	cmp    DWORD PTR [rbp-0x8],0x0
  40af2d:	jne    40af36 <flatcc_verify_error_string@@Base+0x6d1>
  40af2f:	mov    eax,0x8
  40af34:	jmp    40af66 <flatcc_verify_error_string@@Base+0x701>
  40af36:	mov    edx,DWORD PTR [rbp-0x20]
  40af39:	mov    eax,DWORD PTR [rbp-0xc]
  40af3c:	add    rdx,rax
  40af3f:	mov    rax,QWORD PTR [rbp-0x18]
  40af43:	add    rax,rdx
  40af46:	movzx  eax,BYTE PTR [rax]
  40af49:	test   al,al
  40af4b:	sete   al
  40af4e:	movzx  eax,al
  40af51:	mov    DWORD PTR [rbp-0x4],eax
  40af54:	cmp    DWORD PTR [rbp-0x4],0x0
  40af58:	jne    40af61 <flatcc_verify_error_string@@Base+0x6fc>
  40af5a:	mov    eax,0x7
  40af5f:	jmp    40af66 <flatcc_verify_error_string@@Base+0x701>
  40af61:	mov    eax,0x0
  40af66:	leave  
  40af67:	ret    
  40af68:	push   rbp
  40af69:	mov    rbp,rsp
  40af6c:	sub    rsp,0x30
  40af70:	mov    QWORD PTR [rbp-0x18],rdi
  40af74:	mov    DWORD PTR [rbp-0x1c],esi
  40af77:	mov    DWORD PTR [rbp-0x20],edx
  40af7a:	mov    DWORD PTR [rbp-0x24],ecx
  40af7d:	mov    DWORD PTR [rbp-0x28],r8d
  40af81:	mov    eax,r9d
  40af84:	mov    WORD PTR [rbp-0x2c],ax
  40af88:	movzx  ecx,WORD PTR [rbp-0x2c]
  40af8c:	mov    edx,DWORD PTR [rbp-0x24]
  40af8f:	mov    esi,DWORD PTR [rbp-0x20]
  40af92:	mov    eax,DWORD PTR [rbp-0x1c]
  40af95:	mov    edi,eax
  40af97:	call   40ab40 <flatcc_verify_error_string@@Base+0x2db>
  40af9c:	mov    DWORD PTR [rbp-0x10],eax
  40af9f:	cmp    DWORD PTR [rbp-0x10],0x0
  40afa3:	jne    40afac <flatcc_verify_error_string@@Base+0x747>
  40afa5:	mov    eax,0x10
  40afaa:	jmp    40b012 <flatcc_verify_error_string@@Base+0x7ad>
  40afac:	mov    eax,DWORD PTR [rbp-0x24]
  40afaf:	add    DWORD PTR [rbp-0x20],eax
  40afb2:	mov    edx,DWORD PTR [rbp-0x20]
  40afb5:	mov    rax,QWORD PTR [rbp-0x18]
  40afb9:	mov    esi,edx
  40afbb:	mov    rdi,rax
  40afbe:	call   40aa35 <flatcc_verify_error_string@@Base+0x1d0>
  40afc3:	mov    DWORD PTR [rbp-0xc],eax
  40afc6:	add    DWORD PTR [rbp-0x20],0x4
  40afca:	mov    eax,DWORD PTR [rbp-0xc]
  40afcd:	cmp    eax,DWORD PTR [rbp+0x10]
  40afd0:	setbe  al
  40afd3:	movzx  eax,al
  40afd6:	mov    DWORD PTR [rbp-0x8],eax
  40afd9:	cmp    DWORD PTR [rbp-0x8],0x0
  40afdd:	jne    40afe6 <flatcc_verify_error_string@@Base+0x781>
  40afdf:	mov    eax,0x19
  40afe4:	jmp    40b012 <flatcc_verify_error_string@@Base+0x7ad>
  40afe6:	mov    eax,DWORD PTR [rbp-0x1c]
  40afe9:	sub    eax,DWORD PTR [rbp-0x20]
  40afec:	mov    edx,eax
  40afee:	mov    eax,DWORD PTR [rbp-0xc]
  40aff1:	imul   eax,DWORD PTR [rbp-0x28]
  40aff5:	cmp    edx,eax
  40aff7:	setae  al
  40affa:	movzx  eax,al
  40affd:	mov    DWORD PTR [rbp-0x4],eax
  40b000:	cmp    DWORD PTR [rbp-0x4],0x0
  40b004:	jne    40b00d <flatcc_verify_error_string@@Base+0x7a8>
  40b006:	mov    eax,0x1a
  40b00b:	jmp    40b012 <flatcc_verify_error_string@@Base+0x7ad>
  40b00d:	mov    eax,0x0
  40b012:	leave  
  40b013:	ret    
  40b014:	push   rbp
  40b015:	mov    rbp,rsp
  40b018:	sub    rsp,0x28
  40b01c:	mov    QWORD PTR [rbp-0x18],rdi
  40b020:	mov    DWORD PTR [rbp-0x1c],esi
  40b023:	mov    DWORD PTR [rbp-0x20],edx
  40b026:	mov    DWORD PTR [rbp-0x24],ecx
  40b029:	mov    ecx,DWORD PTR [rbp-0x24]
  40b02c:	mov    edx,DWORD PTR [rbp-0x20]
  40b02f:	mov    esi,DWORD PTR [rbp-0x1c]
  40b032:	mov    rax,QWORD PTR [rbp-0x18]
  40b036:	push   0x3fffffff
  40b03b:	mov    r9d,0x4
  40b041:	mov    r8d,0x4
  40b047:	mov    rdi,rax
  40b04a:	call   40af68 <flatcc_verify_error_string@@Base+0x703>
  40b04f:	add    rsp,0x8
  40b053:	test   eax,eax
  40b055:	je     40b086 <flatcc_verify_error_string@@Base+0x821>
  40b057:	mov    ecx,DWORD PTR [rbp-0x24]
  40b05a:	mov    edx,DWORD PTR [rbp-0x20]
  40b05d:	mov    esi,DWORD PTR [rbp-0x1c]
  40b060:	mov    rax,QWORD PTR [rbp-0x18]
  40b064:	push   0x3fffffff
  40b069:	mov    r9d,0x4
  40b06f:	mov    r8d,0x4
  40b075:	mov    rdi,rax
  40b078:	call   40af68 <flatcc_verify_error_string@@Base+0x703>
  40b07d:	add    rsp,0x8
  40b081:	jmp    40b112 <flatcc_verify_error_string@@Base+0x8ad>
  40b086:	mov    eax,DWORD PTR [rbp-0x24]
  40b089:	add    DWORD PTR [rbp-0x20],eax
  40b08c:	mov    edx,DWORD PTR [rbp-0x20]
  40b08f:	mov    rax,QWORD PTR [rbp-0x18]
  40b093:	mov    esi,edx
  40b095:	mov    rdi,rax
  40b098:	call   40aa35 <flatcc_verify_error_string@@Base+0x1d0>
  40b09d:	mov    DWORD PTR [rbp-0x4],eax
  40b0a0:	add    DWORD PTR [rbp-0x20],0x4
  40b0a4:	mov    DWORD PTR [rbp-0x8],0x0
  40b0ab:	jmp    40b105 <flatcc_verify_error_string@@Base+0x8a0>
  40b0ad:	mov    edx,DWORD PTR [rbp-0x20]
  40b0b0:	mov    rax,QWORD PTR [rbp-0x18]
  40b0b4:	mov    esi,edx
  40b0b6:	mov    rdi,rax
  40b0b9:	call   40aa35 <flatcc_verify_error_string@@Base+0x1d0>
  40b0be:	mov    ecx,eax
  40b0c0:	mov    edx,DWORD PTR [rbp-0x20]
  40b0c3:	mov    esi,DWORD PTR [rbp-0x1c]
  40b0c6:	mov    rax,QWORD PTR [rbp-0x18]
  40b0ca:	mov    rdi,rax
  40b0cd:	call   40aebd <flatcc_verify_error_string@@Base+0x658>
  40b0d2:	test   eax,eax
  40b0d4:	je     40b0fd <flatcc_verify_error_string@@Base+0x898>
  40b0d6:	mov    edx,DWORD PTR [rbp-0x20]
  40b0d9:	mov    rax,QWORD PTR [rbp-0x18]
  40b0dd:	mov    esi,edx
  40b0df:	mov    rdi,rax
  40b0e2:	call   40aa35 <flatcc_verify_error_string@@Base+0x1d0>
  40b0e7:	mov    ecx,eax
  40b0e9:	mov    edx,DWORD PTR [rbp-0x20]
  40b0ec:	mov    esi,DWORD PTR [rbp-0x1c]
  40b0ef:	mov    rax,QWORD PTR [rbp-0x18]
  40b0f3:	mov    rdi,rax
  40b0f6:	call   40aebd <flatcc_verify_error_string@@Base+0x658>
  40b0fb:	jmp    40b112 <flatcc_verify_error_string@@Base+0x8ad>
  40b0fd:	add    DWORD PTR [rbp-0x8],0x1
  40b101:	add    DWORD PTR [rbp-0x20],0x4
  40b105:	mov    eax,DWORD PTR [rbp-0x8]
  40b108:	cmp    eax,DWORD PTR [rbp-0x4]
  40b10b:	jb     40b0ad <flatcc_verify_error_string@@Base+0x848>
  40b10d:	mov    eax,0x0
  40b112:	leave  
  40b113:	ret    
  40b114:	push   rbp
  40b115:	mov    rbp,rsp
  40b118:	push   rbx
  40b119:	sub    rsp,0x88
  40b120:	mov    QWORD PTR [rbp-0x78],rdi
  40b124:	mov    DWORD PTR [rbp-0x7c],esi
  40b127:	mov    DWORD PTR [rbp-0x80],edx
  40b12a:	mov    DWORD PTR [rbp-0x84],ecx
  40b130:	mov    DWORD PTR [rbp-0x88],r8d
  40b137:	mov    QWORD PTR [rbp-0x90],r9
  40b13e:	mov    rax,QWORD PTR fs:0x28
  40b147:	mov    QWORD PTR [rbp-0x18],rax
  40b14b:	xor    eax,eax
  40b14d:	mov    eax,DWORD PTR [rbp-0x88]
  40b153:	sub    eax,0x1
  40b156:	mov    DWORD PTR [rbp-0x34],eax
  40b159:	mov    eax,DWORD PTR [rbp-0x34]
  40b15c:	mov    DWORD PTR [rbp-0x68],eax
  40b15f:	cmp    DWORD PTR [rbp-0x68],0x0
  40b163:	jne    40b16f <flatcc_verify_error_string@@Base+0x90a>
  40b165:	mov    eax,0x3
  40b16a:	jmp    40b311 <flatcc_verify_error_string@@Base+0xaac>
  40b16f:	mov    edx,DWORD PTR [rbp-0x84]
  40b175:	mov    ecx,DWORD PTR [rbp-0x80]
  40b178:	mov    eax,DWORD PTR [rbp-0x7c]
  40b17b:	mov    esi,ecx
  40b17d:	mov    edi,eax
  40b17f:	call   40aaf8 <flatcc_verify_error_string@@Base+0x293>
  40b184:	mov    DWORD PTR [rbp-0x64],eax
  40b187:	cmp    DWORD PTR [rbp-0x64],0x0
  40b18b:	jne    40b197 <flatcc_verify_error_string@@Base+0x932>
  40b18d:	mov    eax,0xf
  40b192:	jmp    40b311 <flatcc_verify_error_string@@Base+0xaac>
  40b197:	mov    edx,DWORD PTR [rbp-0x80]
  40b19a:	mov    eax,DWORD PTR [rbp-0x84]
  40b1a0:	add    eax,edx
  40b1a2:	mov    DWORD PTR [rbp-0x28],eax
  40b1a5:	mov    ebx,DWORD PTR [rbp-0x28]
  40b1a8:	mov    edx,DWORD PTR [rbp-0x28]
  40b1ab:	mov    rax,QWORD PTR [rbp-0x78]
  40b1af:	mov    esi,edx
  40b1b1:	mov    rdi,rax
  40b1b4:	call   40aa35 <flatcc_verify_error_string@@Base+0x1d0>
  40b1b9:	sub    ebx,eax
  40b1bb:	mov    eax,ebx
  40b1bd:	mov    DWORD PTR [rbp-0x60],eax
  40b1c0:	mov    eax,DWORD PTR [rbp-0x60]
  40b1c3:	test   eax,eax
  40b1c5:	js     40b1d9 <flatcc_verify_error_string@@Base+0x974>
  40b1c7:	mov    eax,DWORD PTR [rbp-0x60]
  40b1ca:	and    eax,0x1
  40b1cd:	test   rax,rax
  40b1d0:	jne    40b1d9 <flatcc_verify_error_string@@Base+0x974>
  40b1d2:	mov    eax,0x1
  40b1d7:	jmp    40b1de <flatcc_verify_error_string@@Base+0x979>
  40b1d9:	mov    eax,0x0
  40b1de:	mov    DWORD PTR [rbp-0x5c],eax
  40b1e1:	cmp    DWORD PTR [rbp-0x5c],0x0
  40b1e5:	jne    40b1f1 <flatcc_verify_error_string@@Base+0x98c>
  40b1e7:	mov    eax,0x1d
  40b1ec:	jmp    40b311 <flatcc_verify_error_string@@Base+0xaac>
  40b1f1:	mov    eax,DWORD PTR [rbp-0x60]
  40b1f4:	lea    rdx,[rax+0x2]
  40b1f8:	mov    eax,DWORD PTR [rbp-0x7c]
  40b1fb:	cmp    rdx,rax
  40b1fe:	setbe  al
  40b201:	movzx  eax,al
  40b204:	mov    DWORD PTR [rbp-0x58],eax
  40b207:	cmp    DWORD PTR [rbp-0x58],0x0
  40b20b:	jne    40b217 <flatcc_verify_error_string@@Base+0x9b2>
  40b20d:	mov    eax,0x1b
  40b212:	jmp    40b311 <flatcc_verify_error_string@@Base+0xaac>
  40b217:	mov    edx,DWORD PTR [rbp-0x60]
  40b21a:	mov    rax,QWORD PTR [rbp-0x78]
  40b21e:	mov    esi,edx
  40b220:	mov    rdi,rax
  40b223:	call   40aad5 <flatcc_verify_error_string@@Base+0x270>
  40b228:	mov    WORD PTR [rbp-0x22],ax
  40b22c:	movzx  eax,WORD PTR [rbp-0x22]
  40b230:	movzx  edx,ax
  40b233:	mov    eax,DWORD PTR [rbp-0x60]
  40b236:	add    eax,edx
  40b238:	mov    DWORD PTR [rbp-0x54],eax
  40b23b:	mov    eax,DWORD PTR [rbp-0x54]
  40b23e:	cmp    eax,DWORD PTR [rbp-0x7c]
  40b241:	ja     40b259 <flatcc_verify_error_string@@Base+0x9f4>
  40b243:	movzx  eax,WORD PTR [rbp-0x22]
  40b247:	movzx  eax,ax
  40b24a:	and    eax,0x1
  40b24d:	test   rax,rax
  40b250:	jne    40b259 <flatcc_verify_error_string@@Base+0x9f4>
  40b252:	mov    eax,0x1
  40b257:	jmp    40b25e <flatcc_verify_error_string@@Base+0x9f9>
  40b259:	mov    eax,0x0
  40b25e:	mov    DWORD PTR [rbp-0x50],eax
  40b261:	cmp    DWORD PTR [rbp-0x50],0x0
  40b265:	jne    40b271 <flatcc_verify_error_string@@Base+0xa0c>
  40b267:	mov    eax,0x1e
  40b26c:	jmp    40b311 <flatcc_verify_error_string@@Base+0xaac>
  40b271:	mov    DWORD PTR [rbp-0x4c],0x1
  40b278:	cmp    DWORD PTR [rbp-0x4c],0x0
  40b27c:	jne    40b288 <flatcc_verify_error_string@@Base+0xa23>
  40b27e:	mov    eax,0x1f
  40b283:	jmp    40b311 <flatcc_verify_error_string@@Base+0xaac>
  40b288:	movzx  eax,WORD PTR [rbp-0x22]
  40b28c:	cmp    ax,0x3
  40b290:	seta   al
  40b293:	movzx  eax,al
  40b296:	mov    DWORD PTR [rbp-0x48],eax
  40b299:	cmp    DWORD PTR [rbp-0x48],0x0
  40b29d:	jne    40b2a6 <flatcc_verify_error_string@@Base+0xa41>
  40b29f:	mov    eax,0x1c
  40b2a4:	jmp    40b311 <flatcc_verify_error_string@@Base+0xaac>
  40b2a6:	mov    eax,DWORD PTR [rbp-0x60]
  40b2a9:	lea    edx,[rax+0x2]
  40b2ac:	mov    rax,QWORD PTR [rbp-0x78]
  40b2b0:	mov    esi,edx
  40b2b2:	mov    rdi,rax
  40b2b5:	call   40aad5 <flatcc_verify_error_string@@Base+0x270>
  40b2ba:	mov    WORD PTR [rbp-0x24],ax
  40b2be:	mov    eax,DWORD PTR [rbp-0x28]
  40b2c1:	mov    edx,DWORD PTR [rbp-0x7c]
  40b2c4:	sub    edx,eax
  40b2c6:	movzx  eax,WORD PTR [rbp-0x24]
  40b2ca:	movzx  eax,ax
  40b2cd:	cmp    edx,eax
  40b2cf:	setae  al
  40b2d2:	movzx  eax,al
  40b2d5:	mov    DWORD PTR [rbp-0x44],eax
  40b2d8:	cmp    DWORD PTR [rbp-0x44],0x0
  40b2dc:	jne    40b2e5 <flatcc_verify_error_string@@Base+0xa80>
  40b2de:	mov    eax,0x14
  40b2e3:	jmp    40b311 <flatcc_verify_error_string@@Base+0xaac>
  40b2e5:	mov    edx,DWORD PTR [rbp-0x60]
  40b2e8:	mov    rax,QWORD PTR [rbp-0x78]
  40b2ec:	add    rax,rdx
  40b2ef:	mov    QWORD PTR [rbp-0x30],rax
  40b2f3:	mov    rax,QWORD PTR [rbp-0x78]
  40b2f7:	mov    QWORD PTR [rbp-0x40],rax
  40b2fb:	mov    eax,DWORD PTR [rbp-0x7c]
  40b2fe:	mov    DWORD PTR [rbp-0x38],eax
  40b301:	lea    rdx,[rbp-0x40]
  40b305:	mov    rax,QWORD PTR [rbp-0x90]
  40b30c:	mov    rdi,rdx
  40b30f:	call   rax
  40b311:	mov    rcx,QWORD PTR [rbp-0x18]
  40b315:	xor    rcx,QWORD PTR fs:0x28
  40b31e:	je     40b325 <flatcc_verify_error_string@@Base+0xac0>
  40b320:	call   403060 <__stack_chk_fail@plt>
  40b325:	add    rsp,0x88
  40b32c:	pop    rbx
  40b32d:	pop    rbp
  40b32e:	ret    
  40b32f:	push   rbp
  40b330:	mov    rbp,rsp
  40b333:	sub    rsp,0x30
  40b337:	mov    QWORD PTR [rbp-0x18],rdi
  40b33b:	mov    DWORD PTR [rbp-0x1c],esi
  40b33e:	mov    DWORD PTR [rbp-0x20],edx
  40b341:	mov    DWORD PTR [rbp-0x24],ecx
  40b344:	mov    DWORD PTR [rbp-0x28],r8d
  40b348:	mov    QWORD PTR [rbp-0x30],r9
  40b34c:	mov    eax,DWORD PTR [rbp-0x28]
  40b34f:	lea    edx,[rax-0x1]
  40b352:	mov    DWORD PTR [rbp-0x28],edx
  40b355:	test   eax,eax
  40b357:	setg   al
  40b35a:	movzx  eax,al
  40b35d:	mov    DWORD PTR [rbp-0x8],eax
  40b360:	cmp    DWORD PTR [rbp-0x8],0x0
  40b364:	jne    40b370 <flatcc_verify_error_string@@Base+0xb0b>
  40b366:	mov    eax,0x3
  40b36b:	jmp    40b47f <flatcc_verify_error_string@@Base+0xc1a>
  40b370:	mov    ecx,DWORD PTR [rbp-0x24]
  40b373:	mov    edx,DWORD PTR [rbp-0x20]
  40b376:	mov    esi,DWORD PTR [rbp-0x1c]
  40b379:	mov    rax,QWORD PTR [rbp-0x18]
  40b37d:	push   0x3fffffff
  40b382:	mov    r9d,0x4
  40b388:	mov    r8d,0x4
  40b38e:	mov    rdi,rax
  40b391:	call   40af68 <flatcc_verify_error_string@@Base+0x703>
  40b396:	add    rsp,0x8
  40b39a:	test   eax,eax
  40b39c:	je     40b3cd <flatcc_verify_error_string@@Base+0xb68>
  40b39e:	mov    ecx,DWORD PTR [rbp-0x24]
  40b3a1:	mov    edx,DWORD PTR [rbp-0x20]
  40b3a4:	mov    esi,DWORD PTR [rbp-0x1c]
  40b3a7:	mov    rax,QWORD PTR [rbp-0x18]
  40b3ab:	push   0x3fffffff
  40b3b0:	mov    r9d,0x4
  40b3b6:	mov    r8d,0x4
  40b3bc:	mov    rdi,rax
  40b3bf:	call   40af68 <flatcc_verify_error_string@@Base+0x703>
  40b3c4:	add    rsp,0x8
  40b3c8:	jmp    40b47f <flatcc_verify_error_string@@Base+0xc1a>
  40b3cd:	mov    eax,DWORD PTR [rbp-0x24]
  40b3d0:	add    DWORD PTR [rbp-0x20],eax
  40b3d3:	mov    edx,DWORD PTR [rbp-0x20]
  40b3d6:	mov    rax,QWORD PTR [rbp-0x18]
  40b3da:	mov    esi,edx
  40b3dc:	mov    rdi,rax
  40b3df:	call   40aa35 <flatcc_verify_error_string@@Base+0x1d0>
  40b3e4:	mov    DWORD PTR [rbp-0x4],eax
  40b3e7:	add    DWORD PTR [rbp-0x20],0x4
  40b3eb:	mov    DWORD PTR [rbp-0xc],0x0
  40b3f2:	jmp    40b46e <flatcc_verify_error_string@@Base+0xc09>
  40b3f4:	mov    edx,DWORD PTR [rbp-0x20]
  40b3f7:	mov    rax,QWORD PTR [rbp-0x18]
  40b3fb:	mov    esi,edx
  40b3fd:	mov    rdi,rax
  40b400:	call   40aa35 <flatcc_verify_error_string@@Base+0x1d0>
  40b405:	mov    r10d,eax
  40b408:	mov    rdi,QWORD PTR [rbp-0x30]
  40b40c:	mov    ecx,DWORD PTR [rbp-0x28]
  40b40f:	mov    edx,DWORD PTR [rbp-0x20]
  40b412:	mov    esi,DWORD PTR [rbp-0x1c]
  40b415:	mov    rax,QWORD PTR [rbp-0x18]
  40b419:	mov    r9,rdi
  40b41c:	mov    r8d,ecx
  40b41f:	mov    ecx,r10d
  40b422:	mov    rdi,rax
  40b425:	call   40b114 <flatcc_verify_error_string@@Base+0x8af>
  40b42a:	test   eax,eax
  40b42c:	je     40b466 <flatcc_verify_error_string@@Base+0xc01>
  40b42e:	mov    edx,DWORD PTR [rbp-0x20]
  40b431:	mov    rax,QWORD PTR [rbp-0x18]
  40b435:	mov    esi,edx
  40b437:	mov    rdi,rax
  40b43a:	call   40aa35 <flatcc_verify_error_string@@Base+0x1d0>
  40b43f:	mov    r10d,eax
  40b442:	mov    rdi,QWORD PTR [rbp-0x30]
  40b446:	mov    ecx,DWORD PTR [rbp-0x28]
  40b449:	mov    edx,DWORD PTR [rbp-0x20]
  40b44c:	mov    esi,DWORD PTR [rbp-0x1c]
  40b44f:	mov    rax,QWORD PTR [rbp-0x18]
  40b453:	mov    r9,rdi
  40b456:	mov    r8d,ecx
  40b459:	mov    ecx,r10d
  40b45c:	mov    rdi,rax
  40b45f:	call   40b114 <flatcc_verify_error_string@@Base+0x8af>
  40b464:	jmp    40b47f <flatcc_verify_error_string@@Base+0xc1a>
  40b466:	add    DWORD PTR [rbp-0xc],0x1
  40b46a:	add    DWORD PTR [rbp-0x20],0x4
  40b46e:	mov    eax,DWORD PTR [rbp-0xc]
  40b471:	cmp    eax,DWORD PTR [rbp-0x4]
  40b474:	jb     40b3f4 <flatcc_verify_error_string@@Base+0xb8f>
  40b47a:	mov    eax,0x0
  40b47f:	leave  
  40b480:	ret    
  40b481:	push   rbp
  40b482:	mov    rbp,rsp
  40b485:	add    rsp,0xffffffffffffff80
  40b489:	mov    QWORD PTR [rbp-0x58],rdi
  40b48d:	mov    DWORD PTR [rbp-0x5c],esi
  40b490:	mov    DWORD PTR [rbp-0x60],edx
  40b493:	mov    DWORD PTR [rbp-0x64],ecx
  40b496:	mov    DWORD PTR [rbp-0x68],r8d
  40b49a:	mov    QWORD PTR [rbp-0x70],r9
  40b49e:	mov    rax,QWORD PTR [rbp+0x18]
  40b4a2:	mov    QWORD PTR [rbp-0x78],rax
  40b4a6:	mov    rax,QWORD PTR fs:0x28
  40b4af:	mov    QWORD PTR [rbp-0x8],rax
  40b4b3:	xor    eax,eax
  40b4b5:	mov    eax,DWORD PTR [rbp+0x10]
  40b4b8:	lea    edx,[rax-0x1]
  40b4bb:	mov    DWORD PTR [rbp+0x10],edx
  40b4be:	test   eax,eax
  40b4c0:	setg   al
  40b4c3:	movzx  eax,al
  40b4c6:	mov    DWORD PTR [rbp-0x48],eax
  40b4c9:	cmp    DWORD PTR [rbp-0x48],0x0
  40b4cd:	jne    40b4d9 <flatcc_verify_error_string@@Base+0xc74>
  40b4cf:	mov    eax,0x3
  40b4d4:	jmp    40b64c <flatcc_verify_error_string@@Base+0xde7>
  40b4d9:	mov    ecx,DWORD PTR [rbp-0x64]
  40b4dc:	mov    edx,DWORD PTR [rbp-0x60]
  40b4df:	mov    esi,DWORD PTR [rbp-0x5c]
  40b4e2:	mov    rax,QWORD PTR [rbp-0x58]
  40b4e6:	push   0x3fffffff
  40b4eb:	mov    r9d,0x4
  40b4f1:	mov    r8d,0x4
  40b4f7:	mov    rdi,rax
  40b4fa:	call   40af68 <flatcc_verify_error_string@@Base+0x703>
  40b4ff:	add    rsp,0x8
  40b503:	test   eax,eax
  40b505:	je     40b536 <flatcc_verify_error_string@@Base+0xcd1>
  40b507:	mov    ecx,DWORD PTR [rbp-0x64]
  40b50a:	mov    edx,DWORD PTR [rbp-0x60]
  40b50d:	mov    esi,DWORD PTR [rbp-0x5c]
  40b510:	mov    rax,QWORD PTR [rbp-0x58]
  40b514:	push   0x3fffffff
  40b519:	mov    r9d,0x4
  40b51f:	mov    r8d,0x4
  40b525:	mov    rdi,rax
  40b528:	call   40af68 <flatcc_verify_error_string@@Base+0x703>
  40b52d:	add    rsp,0x8
  40b531:	jmp    40b64c <flatcc_verify_error_string@@Base+0xde7>
  40b536:	mov    eax,DWORD PTR [rbp-0x64]
  40b539:	add    DWORD PTR [rbp-0x60],eax
  40b53c:	mov    edx,DWORD PTR [rbp-0x60]
  40b53f:	mov    rax,QWORD PTR [rbp-0x58]
  40b543:	mov    esi,edx
  40b545:	mov    rdi,rax
  40b548:	call   40aa35 <flatcc_verify_error_string@@Base+0x1d0>
  40b54d:	mov    DWORD PTR [rbp-0x44],eax
  40b550:	mov    eax,DWORD PTR [rbp-0x44]
  40b553:	cmp    eax,DWORD PTR [rbp-0x68]
  40b556:	sete   al
  40b559:	movzx  eax,al
  40b55c:	mov    DWORD PTR [rbp-0x40],eax
  40b55f:	cmp    DWORD PTR [rbp-0x40],0x0
  40b563:	jne    40b56f <flatcc_verify_error_string@@Base+0xd0a>
  40b565:	mov    eax,0x22
  40b56a:	jmp    40b64c <flatcc_verify_error_string@@Base+0xde7>
  40b56f:	add    DWORD PTR [rbp-0x60],0x4
  40b573:	mov    rax,QWORD PTR [rbp-0x58]
  40b577:	mov    QWORD PTR [rbp-0x30],rax
  40b57b:	mov    eax,DWORD PTR [rbp-0x5c]
  40b57e:	mov    DWORD PTR [rbp-0x28],eax
  40b581:	mov    eax,DWORD PTR [rbp+0x10]
  40b584:	mov    DWORD PTR [rbp-0x24],eax
  40b587:	mov    DWORD PTR [rbp-0x4c],0x0
  40b58e:	jmp    40b63b <flatcc_verify_error_string@@Base+0xdd6>
  40b593:	mov    edx,DWORD PTR [rbp-0x60]
  40b596:	mov    rax,QWORD PTR [rbp-0x58]
  40b59a:	mov    esi,edx
  40b59c:	mov    rdi,rax
  40b59f:	call   40aa35 <flatcc_verify_error_string@@Base+0x1d0>
  40b5a4:	mov    DWORD PTR [rbp-0x3c],eax
  40b5a7:	cmp    DWORD PTR [rbp-0x3c],0x0
  40b5ab:	jne    40b5d2 <flatcc_verify_error_string@@Base+0xd6d>
  40b5ad:	mov    edx,DWORD PTR [rbp-0x4c]
  40b5b0:	mov    rax,QWORD PTR [rbp-0x70]
  40b5b4:	add    rax,rdx
  40b5b7:	movzx  eax,BYTE PTR [rax]
  40b5ba:	test   al,al
  40b5bc:	sete   al
  40b5bf:	movzx  eax,al
  40b5c2:	mov    DWORD PTR [rbp-0x34],eax
  40b5c5:	cmp    DWORD PTR [rbp-0x34],0x0
  40b5c9:	jne    40b633 <flatcc_verify_error_string@@Base+0xdce>
  40b5cb:	mov    eax,0x20
  40b5d0:	jmp    40b64c <flatcc_verify_error_string@@Base+0xde7>
  40b5d2:	mov    edx,DWORD PTR [rbp-0x4c]
  40b5d5:	mov    rax,QWORD PTR [rbp-0x70]
  40b5d9:	add    rax,rdx
  40b5dc:	movzx  eax,BYTE PTR [rax]
  40b5df:	test   al,al
  40b5e1:	setne  al
  40b5e4:	movzx  eax,al
  40b5e7:	mov    DWORD PTR [rbp-0x38],eax
  40b5ea:	cmp    DWORD PTR [rbp-0x38],0x0
  40b5ee:	jne    40b5f7 <flatcc_verify_error_string@@Base+0xd92>
  40b5f0:	mov    eax,0x21
  40b5f5:	jmp    40b64c <flatcc_verify_error_string@@Base+0xde7>
  40b5f7:	mov    edx,DWORD PTR [rbp-0x4c]
  40b5fa:	mov    rax,QWORD PTR [rbp-0x70]
  40b5fe:	add    rax,rdx
  40b601:	movzx  eax,BYTE PTR [rax]
  40b604:	mov    BYTE PTR [rbp-0x20],al
  40b607:	mov    eax,DWORD PTR [rbp-0x60]
  40b60a:	mov    DWORD PTR [rbp-0x1c],eax
  40b60d:	mov    eax,DWORD PTR [rbp-0x3c]
  40b610:	mov    DWORD PTR [rbp-0x18],eax
  40b613:	lea    rdx,[rbp-0x30]
  40b617:	mov    rax,QWORD PTR [rbp-0x78]
  40b61b:	mov    rdi,rdx
  40b61e:	call   rax
  40b620:	test   eax,eax
  40b622:	je     40b633 <flatcc_verify_error_string@@Base+0xdce>
  40b624:	lea    rdx,[rbp-0x30]
  40b628:	mov    rax,QWORD PTR [rbp-0x78]
  40b62c:	mov    rdi,rdx
  40b62f:	call   rax
  40b631:	jmp    40b64c <flatcc_verify_error_string@@Base+0xde7>
  40b633:	add    DWORD PTR [rbp-0x4c],0x1
  40b637:	add    DWORD PTR [rbp-0x60],0x4
  40b63b:	mov    eax,DWORD PTR [rbp-0x4c]
  40b63e:	cmp    eax,DWORD PTR [rbp-0x44]
  40b641:	jb     40b593 <flatcc_verify_error_string@@Base+0xd2e>
  40b647:	mov    eax,0x0
  40b64c:	mov    rcx,QWORD PTR [rbp-0x8]
  40b650:	xor    rcx,QWORD PTR fs:0x28
  40b659:	je     40b660 <flatcc_verify_error_string@@Base+0xdfb>
  40b65b:	call   403060 <__stack_chk_fail@plt>
  40b660:	leave  
  40b661:	ret    

000000000040b662 <flatcc_verify_field@@Base>:
  40b662:	push   rbp
  40b663:	mov    rbp,rsp
  40b666:	sub    rsp,0x18
  40b66a:	mov    QWORD PTR [rbp-0x8],rdi
  40b66e:	mov    QWORD PTR [rbp-0x18],rdx
  40b672:	mov    eax,ecx
  40b674:	mov    WORD PTR [rbp-0xc],si
  40b678:	mov    WORD PTR [rbp-0x10],ax
  40b67c:	movzx  edx,WORD PTR [rbp-0x10]
  40b680:	mov    rax,QWORD PTR [rbp-0x18]
  40b684:	mov    ecx,eax
  40b686:	movzx  esi,WORD PTR [rbp-0xc]
  40b68a:	mov    rax,QWORD PTR [rbp-0x8]
  40b68e:	mov    r8d,edx
  40b691:	mov    edx,0x0
  40b696:	mov    rdi,rax
  40b699:	call   40acf6 <flatcc_verify_error_string@@Base+0x491>
  40b69e:	test   eax,eax
  40b6a0:	je     40b6c6 <flatcc_verify_field@@Base+0x64>
  40b6a2:	movzx  edx,WORD PTR [rbp-0x10]
  40b6a6:	mov    rax,QWORD PTR [rbp-0x18]
  40b6aa:	mov    ecx,eax
  40b6ac:	movzx  esi,WORD PTR [rbp-0xc]
  40b6b0:	mov    rax,QWORD PTR [rbp-0x8]
  40b6b4:	mov    r8d,edx
  40b6b7:	mov    edx,0x0
  40b6bc:	mov    rdi,rax
  40b6bf:	call   40acf6 <flatcc_verify_error_string@@Base+0x491>
  40b6c4:	jmp    40b6cb <flatcc_verify_field@@Base+0x69>
  40b6c6:	mov    eax,0x0
  40b6cb:	leave  
  40b6cc:	ret    

000000000040b6cd <flatcc_verify_string_field@@Base>:
  40b6cd:	push   rbp
  40b6ce:	mov    rbp,rsp
  40b6d1:	sub    rsp,0x20
  40b6d5:	mov    QWORD PTR [rbp-0x18],rdi
  40b6d9:	mov    eax,esi
  40b6db:	mov    DWORD PTR [rbp-0x20],edx
  40b6de:	mov    WORD PTR [rbp-0x1c],ax
  40b6e2:	mov    rax,QWORD PTR fs:0x28
  40b6eb:	mov    QWORD PTR [rbp-0x8],rax
  40b6ef:	xor    eax,eax
  40b6f1:	movzx  esi,WORD PTR [rbp-0x1c]
  40b6f5:	lea    rcx,[rbp-0x10]
  40b6f9:	mov    edx,DWORD PTR [rbp-0x20]
  40b6fc:	mov    rax,QWORD PTR [rbp-0x18]
  40b700:	mov    rdi,rax
  40b703:	call   40ade5 <flatcc_verify_error_string@@Base+0x580>
  40b708:	mov    DWORD PTR [rbp-0xc],eax
  40b70b:	cmp    DWORD PTR [rbp-0xc],0x0
  40b70f:	jne    40b718 <flatcc_verify_string_field@@Base+0x4b>
  40b711:	mov    eax,DWORD PTR [rbp-0x10]
  40b714:	test   eax,eax
  40b716:	jne    40b71d <flatcc_verify_string_field@@Base+0x50>
  40b718:	mov    eax,DWORD PTR [rbp-0xc]
  40b71b:	jmp    40b74c <flatcc_verify_string_field@@Base+0x7f>
  40b71d:	mov    edx,DWORD PTR [rbp-0x10]
  40b720:	mov    rax,QWORD PTR [rbp-0x18]
  40b724:	mov    rax,QWORD PTR [rax]
  40b727:	mov    esi,edx
  40b729:	mov    rdi,rax
  40b72c:	call   40aa35 <flatcc_verify_error_string@@Base+0x1d0>
  40b731:	mov    ecx,eax
  40b733:	mov    edx,DWORD PTR [rbp-0x10]
  40b736:	mov    rax,QWORD PTR [rbp-0x18]
  40b73a:	mov    esi,DWORD PTR [rax+0x8]
  40b73d:	mov    rax,QWORD PTR [rbp-0x18]
  40b741:	mov    rax,QWORD PTR [rax]
  40b744:	mov    rdi,rax
  40b747:	call   40aebd <flatcc_verify_error_string@@Base+0x658>
  40b74c:	mov    rdi,QWORD PTR [rbp-0x8]
  40b750:	xor    rdi,QWORD PTR fs:0x28
  40b759:	je     40b760 <flatcc_verify_string_field@@Base+0x93>
  40b75b:	call   403060 <__stack_chk_fail@plt>
  40b760:	leave  
  40b761:	ret    

000000000040b762 <flatcc_verify_vector_field@@Base>:
  40b762:	push   rbp
  40b763:	mov    rbp,rsp
  40b766:	push   r13
  40b768:	push   r12
  40b76a:	push   rbx
  40b76b:	sub    rsp,0x48
  40b76f:	mov    QWORD PTR [rbp-0x38],rdi
  40b773:	mov    eax,esi
  40b775:	mov    DWORD PTR [rbp-0x40],edx
  40b778:	mov    QWORD PTR [rbp-0x48],rcx
  40b77c:	mov    edx,r8d
  40b77f:	mov    QWORD PTR [rbp-0x58],r9
  40b783:	mov    WORD PTR [rbp-0x3c],ax
  40b787:	mov    WORD PTR [rbp-0x4c],dx
  40b78b:	mov    rax,QWORD PTR fs:0x28
  40b794:	mov    QWORD PTR [rbp-0x28],rax
  40b798:	xor    eax,eax
  40b79a:	movzx  esi,WORD PTR [rbp-0x3c]
  40b79e:	lea    rcx,[rbp-0x30]
  40b7a2:	mov    edx,DWORD PTR [rbp-0x40]
  40b7a5:	mov    rax,QWORD PTR [rbp-0x38]
  40b7a9:	mov    rdi,rax
  40b7ac:	call   40ade5 <flatcc_verify_error_string@@Base+0x580>
  40b7b1:	mov    DWORD PTR [rbp-0x2c],eax
  40b7b4:	cmp    DWORD PTR [rbp-0x2c],0x0
  40b7b8:	jne    40b7c1 <flatcc_verify_vector_field@@Base+0x5f>
  40b7ba:	mov    eax,DWORD PTR [rbp-0x30]
  40b7bd:	test   eax,eax
  40b7bf:	jne    40b7c6 <flatcc_verify_vector_field@@Base+0x64>
  40b7c1:	mov    eax,DWORD PTR [rbp-0x2c]
  40b7c4:	jmp    40b813 <flatcc_verify_vector_field@@Base+0xb1>
  40b7c6:	mov    rax,QWORD PTR [rbp-0x58]
  40b7ca:	mov    r12d,eax
  40b7cd:	movzx  ebx,WORD PTR [rbp-0x4c]
  40b7d1:	mov    rax,QWORD PTR [rbp-0x48]
  40b7d5:	mov    r13d,eax
  40b7d8:	mov    edx,DWORD PTR [rbp-0x30]
  40b7db:	mov    rax,QWORD PTR [rbp-0x38]
  40b7df:	mov    rax,QWORD PTR [rax]
  40b7e2:	mov    esi,edx
  40b7e4:	mov    rdi,rax
  40b7e7:	call   40aa35 <flatcc_verify_error_string@@Base+0x1d0>
  40b7ec:	mov    ecx,eax
  40b7ee:	mov    edx,DWORD PTR [rbp-0x30]
  40b7f1:	mov    rax,QWORD PTR [rbp-0x38]
  40b7f5:	mov    esi,DWORD PTR [rax+0x8]
  40b7f8:	mov    rax,QWORD PTR [rbp-0x38]
  40b7fc:	mov    rax,QWORD PTR [rax]
  40b7ff:	push   r12
  40b801:	mov    r9d,ebx
  40b804:	mov    r8d,r13d
  40b807:	mov    rdi,rax
  40b80a:	call   40af68 <flatcc_verify_error_string@@Base+0x703>
  40b80f:	add    rsp,0x8
  40b813:	mov    rbx,QWORD PTR [rbp-0x28]
  40b817:	xor    rbx,QWORD PTR fs:0x28
  40b820:	je     40b827 <flatcc_verify_vector_field@@Base+0xc5>
  40b822:	call   403060 <__stack_chk_fail@plt>
  40b827:	lea    rsp,[rbp-0x18]
  40b82b:	pop    rbx
  40b82c:	pop    r12
  40b82e:	pop    r13
  40b830:	pop    rbp
  40b831:	ret    

000000000040b832 <flatcc_verify_string_vector_field@@Base>:
  40b832:	push   rbp
  40b833:	mov    rbp,rsp
  40b836:	sub    rsp,0x20
  40b83a:	mov    QWORD PTR [rbp-0x18],rdi
  40b83e:	mov    eax,esi
  40b840:	mov    DWORD PTR [rbp-0x20],edx
  40b843:	mov    WORD PTR [rbp-0x1c],ax
  40b847:	mov    rax,QWORD PTR fs:0x28
  40b850:	mov    QWORD PTR [rbp-0x8],rax
  40b854:	xor    eax,eax
  40b856:	movzx  esi,WORD PTR [rbp-0x1c]
  40b85a:	lea    rcx,[rbp-0x10]
  40b85e:	mov    edx,DWORD PTR [rbp-0x20]
  40b861:	mov    rax,QWORD PTR [rbp-0x18]
  40b865:	mov    rdi,rax
  40b868:	call   40ade5 <flatcc_verify_error_string@@Base+0x580>
  40b86d:	mov    DWORD PTR [rbp-0xc],eax
  40b870:	cmp    DWORD PTR [rbp-0xc],0x0
  40b874:	jne    40b87d <flatcc_verify_string_vector_field@@Base+0x4b>
  40b876:	mov    eax,DWORD PTR [rbp-0x10]
  40b879:	test   eax,eax
  40b87b:	jne    40b882 <flatcc_verify_string_vector_field@@Base+0x50>
  40b87d:	mov    eax,DWORD PTR [rbp-0xc]
  40b880:	jmp    40b8b1 <flatcc_verify_string_vector_field@@Base+0x7f>
  40b882:	mov    edx,DWORD PTR [rbp-0x10]
  40b885:	mov    rax,QWORD PTR [rbp-0x18]
  40b889:	mov    rax,QWORD PTR [rax]
  40b88c:	mov    esi,edx
  40b88e:	mov    rdi,rax
  40b891:	call   40aa35 <flatcc_verify_error_string@@Base+0x1d0>
  40b896:	mov    ecx,eax
  40b898:	mov    edx,DWORD PTR [rbp-0x10]
  40b89b:	mov    rax,QWORD PTR [rbp-0x18]
  40b89f:	mov    esi,DWORD PTR [rax+0x8]
  40b8a2:	mov    rax,QWORD PTR [rbp-0x18]
  40b8a6:	mov    rax,QWORD PTR [rax]
  40b8a9:	mov    rdi,rax
  40b8ac:	call   40b014 <flatcc_verify_error_string@@Base+0x7af>
  40b8b1:	mov    rdi,QWORD PTR [rbp-0x8]
  40b8b5:	xor    rdi,QWORD PTR fs:0x28
  40b8be:	je     40b8c5 <flatcc_verify_string_vector_field@@Base+0x93>
  40b8c0:	call   403060 <__stack_chk_fail@plt>
  40b8c5:	leave  
  40b8c6:	ret    

000000000040b8c7 <flatcc_verify_table_field@@Base>:
  40b8c7:	push   rbp
  40b8c8:	mov    rbp,rsp
  40b8cb:	push   rbx
  40b8cc:	sub    rsp,0x38
  40b8d0:	mov    QWORD PTR [rbp-0x28],rdi
  40b8d4:	mov    eax,esi
  40b8d6:	mov    DWORD PTR [rbp-0x30],edx
  40b8d9:	mov    QWORD PTR [rbp-0x38],rcx
  40b8dd:	mov    WORD PTR [rbp-0x2c],ax
  40b8e1:	mov    rax,QWORD PTR fs:0x28
  40b8ea:	mov    QWORD PTR [rbp-0x18],rax
  40b8ee:	xor    eax,eax
  40b8f0:	movzx  esi,WORD PTR [rbp-0x2c]
  40b8f4:	lea    rcx,[rbp-0x20]
  40b8f8:	mov    edx,DWORD PTR [rbp-0x30]
  40b8fb:	mov    rax,QWORD PTR [rbp-0x28]
  40b8ff:	mov    rdi,rax
  40b902:	call   40ade5 <flatcc_verify_error_string@@Base+0x580>
  40b907:	mov    DWORD PTR [rbp-0x1c],eax
  40b90a:	cmp    DWORD PTR [rbp-0x1c],0x0
  40b90e:	jne    40b917 <flatcc_verify_table_field@@Base+0x50>
  40b910:	mov    eax,DWORD PTR [rbp-0x20]
  40b913:	test   eax,eax
  40b915:	jne    40b91c <flatcc_verify_table_field@@Base+0x55>
  40b917:	mov    eax,DWORD PTR [rbp-0x1c]
  40b91a:	jmp    40b95e <flatcc_verify_table_field@@Base+0x97>
  40b91c:	mov    rax,QWORD PTR [rbp-0x28]
  40b920:	mov    ebx,DWORD PTR [rax+0xc]
  40b923:	mov    edx,DWORD PTR [rbp-0x20]
  40b926:	mov    rax,QWORD PTR [rbp-0x28]
  40b92a:	mov    rax,QWORD PTR [rax]
  40b92d:	mov    esi,edx
  40b92f:	mov    rdi,rax
  40b932:	call   40aa35 <flatcc_verify_error_string@@Base+0x1d0>
  40b937:	mov    edi,eax
  40b939:	mov    edx,DWORD PTR [rbp-0x20]
  40b93c:	mov    rax,QWORD PTR [rbp-0x28]
  40b940:	mov    esi,DWORD PTR [rax+0x8]
  40b943:	mov    rax,QWORD PTR [rbp-0x28]
  40b947:	mov    rax,QWORD PTR [rax]
  40b94a:	mov    rcx,QWORD PTR [rbp-0x38]
  40b94e:	mov    r9,rcx
  40b951:	mov    r8d,ebx
  40b954:	mov    ecx,edi
  40b956:	mov    rdi,rax
  40b959:	call   40b114 <flatcc_verify_error_string@@Base+0x8af>
  40b95e:	mov    rbx,QWORD PTR [rbp-0x18]
  40b962:	xor    rbx,QWORD PTR fs:0x28
  40b96b:	je     40b972 <flatcc_verify_table_field@@Base+0xab>
  40b96d:	call   403060 <__stack_chk_fail@plt>
  40b972:	add    rsp,0x38
  40b976:	pop    rbx
  40b977:	pop    rbp
  40b978:	ret    

000000000040b979 <flatcc_verify_table_vector_field@@Base>:
  40b979:	push   rbp
  40b97a:	mov    rbp,rsp
  40b97d:	push   rbx
  40b97e:	sub    rsp,0x38
  40b982:	mov    QWORD PTR [rbp-0x28],rdi
  40b986:	mov    eax,esi
  40b988:	mov    DWORD PTR [rbp-0x30],edx
  40b98b:	mov    QWORD PTR [rbp-0x38],rcx
  40b98f:	mov    WORD PTR [rbp-0x2c],ax
  40b993:	mov    rax,QWORD PTR fs:0x28
  40b99c:	mov    QWORD PTR [rbp-0x18],rax
  40b9a0:	xor    eax,eax
  40b9a2:	movzx  esi,WORD PTR [rbp-0x2c]
  40b9a6:	lea    rcx,[rbp-0x20]
  40b9aa:	mov    edx,DWORD PTR [rbp-0x30]
  40b9ad:	mov    rax,QWORD PTR [rbp-0x28]
  40b9b1:	mov    rdi,rax
  40b9b4:	call   40ade5 <flatcc_verify_error_string@@Base+0x580>
  40b9b9:	mov    DWORD PTR [rbp-0x1c],eax
  40b9bc:	cmp    DWORD PTR [rbp-0x1c],0x0
  40b9c0:	jne    40b9c9 <flatcc_verify_table_vector_field@@Base+0x50>
  40b9c2:	mov    eax,DWORD PTR [rbp-0x20]
  40b9c5:	test   eax,eax
  40b9c7:	jne    40b9ce <flatcc_verify_table_vector_field@@Base+0x55>
  40b9c9:	mov    eax,DWORD PTR [rbp-0x1c]
  40b9cc:	jmp    40ba10 <flatcc_verify_table_vector_field@@Base+0x97>
  40b9ce:	mov    rax,QWORD PTR [rbp-0x28]
  40b9d2:	mov    ebx,DWORD PTR [rax+0xc]
  40b9d5:	mov    edx,DWORD PTR [rbp-0x20]
  40b9d8:	mov    rax,QWORD PTR [rbp-0x28]
  40b9dc:	mov    rax,QWORD PTR [rax]
  40b9df:	mov    esi,edx
  40b9e1:	mov    rdi,rax
  40b9e4:	call   40aa35 <flatcc_verify_error_string@@Base+0x1d0>
  40b9e9:	mov    edi,eax
  40b9eb:	mov    edx,DWORD PTR [rbp-0x20]
  40b9ee:	mov    rax,QWORD PTR [rbp-0x28]
  40b9f2:	mov    esi,DWORD PTR [rax+0x8]
  40b9f5:	mov    rax,QWORD PTR [rbp-0x28]
  40b9f9:	mov    rax,QWORD PTR [rax]
  40b9fc:	mov    rcx,QWORD PTR [rbp-0x38]
  40ba00:	mov    r9,rcx
  40ba03:	mov    r8d,ebx
  40ba06:	mov    ecx,edi
  40ba08:	mov    rdi,rax
  40ba0b:	call   40b32f <flatcc_verify_error_string@@Base+0xaca>
  40ba10:	mov    rbx,QWORD PTR [rbp-0x18]
  40ba14:	xor    rbx,QWORD PTR fs:0x28
  40ba1d:	je     40ba24 <flatcc_verify_table_vector_field@@Base+0xab>
  40ba1f:	call   403060 <__stack_chk_fail@plt>
  40ba24:	add    rsp,0x38
  40ba28:	pop    rbx
  40ba29:	pop    rbp
  40ba2a:	ret    

000000000040ba2b <flatcc_verify_union_table@@Base>:
  40ba2b:	push   rbp
  40ba2c:	mov    rbp,rsp
  40ba2f:	sub    rsp,0x10
  40ba33:	mov    QWORD PTR [rbp-0x8],rdi
  40ba37:	mov    QWORD PTR [rbp-0x10],rsi
  40ba3b:	mov    rax,QWORD PTR [rbp-0x8]
  40ba3f:	mov    edi,DWORD PTR [rax+0xc]
  40ba42:	mov    rax,QWORD PTR [rbp-0x8]
  40ba46:	mov    ecx,DWORD PTR [rax+0x18]
  40ba49:	mov    rax,QWORD PTR [rbp-0x8]
  40ba4d:	mov    edx,DWORD PTR [rax+0x14]
  40ba50:	mov    rax,QWORD PTR [rbp-0x8]
  40ba54:	mov    esi,DWORD PTR [rax+0x8]
  40ba57:	mov    rax,QWORD PTR [rbp-0x8]
  40ba5b:	mov    rax,QWORD PTR [rax]
  40ba5e:	mov    r8,QWORD PTR [rbp-0x10]
  40ba62:	mov    r9,r8
  40ba65:	mov    r8d,edi
  40ba68:	mov    rdi,rax
  40ba6b:	call   40b114 <flatcc_verify_error_string@@Base+0x8af>
  40ba70:	leave  
  40ba71:	ret    

000000000040ba72 <flatcc_verify_union_struct@@Base>:
  40ba72:	push   rbp
  40ba73:	mov    rbp,rsp
  40ba76:	sub    rsp,0x18
  40ba7a:	mov    QWORD PTR [rbp-0x8],rdi
  40ba7e:	mov    QWORD PTR [rbp-0x10],rsi
  40ba82:	mov    eax,edx
  40ba84:	mov    WORD PTR [rbp-0x14],ax
  40ba88:	movzx  ecx,WORD PTR [rbp-0x14]
  40ba8c:	mov    rax,QWORD PTR [rbp-0x10]
  40ba90:	mov    edi,eax
  40ba92:	mov    rax,QWORD PTR [rbp-0x8]
  40ba96:	mov    edx,DWORD PTR [rax+0x18]
  40ba99:	mov    rax,QWORD PTR [rbp-0x8]
  40ba9d:	mov    esi,DWORD PTR [rax+0x14]
  40baa0:	mov    rax,QWORD PTR [rbp-0x8]
  40baa4:	mov    eax,DWORD PTR [rax+0x8]
  40baa7:	mov    r8d,ecx
  40baaa:	mov    ecx,edi
  40baac:	mov    edi,eax
  40baae:	call   40abb1 <flatcc_verify_error_string@@Base+0x34c>
  40bab3:	leave  
  40bab4:	ret    

000000000040bab5 <flatcc_verify_union_string@@Base>:
  40bab5:	push   rbp
  40bab6:	mov    rbp,rsp
  40bab9:	sub    rsp,0x8
  40babd:	mov    QWORD PTR [rbp-0x8],rdi
  40bac1:	mov    rax,QWORD PTR [rbp-0x8]
  40bac5:	mov    ecx,DWORD PTR [rax+0x18]
  40bac8:	mov    rax,QWORD PTR [rbp-0x8]
  40bacc:	mov    edx,DWORD PTR [rax+0x14]
  40bacf:	mov    rax,QWORD PTR [rbp-0x8]
  40bad3:	mov    esi,DWORD PTR [rax+0x8]
  40bad6:	mov    rax,QWORD PTR [rbp-0x8]
  40bada:	mov    rax,QWORD PTR [rax]
  40badd:	mov    rdi,rax
  40bae0:	call   40aebd <flatcc_verify_error_string@@Base+0x658>
  40bae5:	leave  
  40bae6:	ret    

000000000040bae7 <flatcc_verify_buffer_header@@Base>:
  40bae7:	push   rbp
  40bae8:	mov    rbp,rsp
  40baeb:	sub    rsp,0x40
  40baef:	mov    QWORD PTR [rbp-0x28],rdi
  40baf3:	mov    QWORD PTR [rbp-0x30],rsi
  40baf7:	mov    QWORD PTR [rbp-0x38],rdx
  40bafb:	mov    rax,QWORD PTR [rbp-0x28]
  40baff:	and    eax,0x3
  40bb02:	test   rax,rax
  40bb05:	sete   al
  40bb08:	movzx  eax,al
  40bb0b:	mov    DWORD PTR [rbp-0x18],eax
  40bb0e:	cmp    DWORD PTR [rbp-0x18],0x0
  40bb12:	jne    40bb1e <flatcc_verify_buffer_header@@Base+0x37>
  40bb14:	mov    eax,0x5
  40bb19:	jmp    40bbb1 <flatcc_verify_buffer_header@@Base+0xca>
  40bb1e:	mov    eax,0xfffffff7
  40bb23:	cmp    QWORD PTR [rbp-0x30],rax
  40bb27:	setbe  al
  40bb2a:	movzx  eax,al
  40bb2d:	mov    DWORD PTR [rbp-0x14],eax
  40bb30:	cmp    DWORD PTR [rbp-0x14],0x0
  40bb34:	jne    40bb3d <flatcc_verify_buffer_header@@Base+0x56>
  40bb36:	mov    eax,0x6
  40bb3b:	jmp    40bbb1 <flatcc_verify_buffer_header@@Base+0xca>
  40bb3d:	cmp    QWORD PTR [rbp-0x30],0x7
  40bb42:	seta   al
  40bb45:	movzx  eax,al
  40bb48:	mov    DWORD PTR [rbp-0x10],eax
  40bb4b:	cmp    DWORD PTR [rbp-0x10],0x0
  40bb4f:	jne    40bb58 <flatcc_verify_buffer_header@@Base+0x71>
  40bb51:	mov    eax,0x1
  40bb56:	jmp    40bbb1 <flatcc_verify_buffer_header@@Base+0xca>
  40bb58:	cmp    QWORD PTR [rbp-0x38],0x0
  40bb5d:	je     40bbac <flatcc_verify_buffer_header@@Base+0xc5>
  40bb5f:	mov    rax,QWORD PTR [rbp-0x38]
  40bb63:	mov    rdi,rax
  40bb66:	call   40aa58 <flatcc_verify_error_string@@Base+0x1f3>
  40bb6b:	mov    DWORD PTR [rbp-0xc],eax
  40bb6e:	mov    rax,QWORD PTR [rbp-0x28]
  40bb72:	mov    esi,0x4
  40bb77:	mov    rdi,rax
  40bb7a:	call   40aab2 <flatcc_verify_error_string@@Base+0x24d>
  40bb7f:	mov    DWORD PTR [rbp-0x8],eax
  40bb82:	cmp    DWORD PTR [rbp-0xc],0x0
  40bb86:	je     40bb90 <flatcc_verify_buffer_header@@Base+0xa9>
  40bb88:	mov    eax,DWORD PTR [rbp-0x8]
  40bb8b:	cmp    eax,DWORD PTR [rbp-0xc]
  40bb8e:	jne    40bb97 <flatcc_verify_buffer_header@@Base+0xb0>
  40bb90:	mov    eax,0x1
  40bb95:	jmp    40bb9c <flatcc_verify_buffer_header@@Base+0xb5>
  40bb97:	mov    eax,0x0
  40bb9c:	mov    DWORD PTR [rbp-0x4],eax
  40bb9f:	cmp    DWORD PTR [rbp-0x4],0x0
  40bba3:	jne    40bbac <flatcc_verify_buffer_header@@Base+0xc5>
  40bba5:	mov    eax,0x2
  40bbaa:	jmp    40bbb1 <flatcc_verify_buffer_header@@Base+0xca>
  40bbac:	mov    eax,0x0
  40bbb1:	leave  
  40bbb2:	ret    

000000000040bbb3 <flatcc_verify_typed_buffer_header@@Base>:
  40bbb3:	push   rbp
  40bbb4:	mov    rbp,rsp
  40bbb7:	sub    rsp,0x38
  40bbbb:	mov    QWORD PTR [rbp-0x28],rdi
  40bbbf:	mov    QWORD PTR [rbp-0x30],rsi
  40bbc3:	mov    DWORD PTR [rbp-0x34],edx
  40bbc6:	mov    rax,QWORD PTR [rbp-0x28]
  40bbca:	and    eax,0x3
  40bbcd:	test   rax,rax
  40bbd0:	sete   al
  40bbd3:	movzx  eax,al
  40bbd6:	mov    DWORD PTR [rbp-0x18],eax
  40bbd9:	cmp    DWORD PTR [rbp-0x18],0x0
  40bbdd:	jne    40bbe9 <flatcc_verify_typed_buffer_header@@Base+0x36>
  40bbdf:	mov    eax,0x5
  40bbe4:	jmp    40bc72 <flatcc_verify_typed_buffer_header@@Base+0xbf>
  40bbe9:	mov    eax,0xfffffff7
  40bbee:	cmp    QWORD PTR [rbp-0x30],rax
  40bbf2:	setbe  al
  40bbf5:	movzx  eax,al
  40bbf8:	mov    DWORD PTR [rbp-0x14],eax
  40bbfb:	cmp    DWORD PTR [rbp-0x14],0x0
  40bbff:	jne    40bc08 <flatcc_verify_typed_buffer_header@@Base+0x55>
  40bc01:	mov    eax,0x6
  40bc06:	jmp    40bc72 <flatcc_verify_typed_buffer_header@@Base+0xbf>
  40bc08:	cmp    QWORD PTR [rbp-0x30],0x7
  40bc0d:	seta   al
  40bc10:	movzx  eax,al
  40bc13:	mov    DWORD PTR [rbp-0x10],eax
  40bc16:	cmp    DWORD PTR [rbp-0x10],0x0
  40bc1a:	jne    40bc23 <flatcc_verify_typed_buffer_header@@Base+0x70>
  40bc1c:	mov    eax,0x1
  40bc21:	jmp    40bc72 <flatcc_verify_typed_buffer_header@@Base+0xbf>
  40bc23:	cmp    DWORD PTR [rbp-0x34],0x0
  40bc27:	je     40bc6d <flatcc_verify_typed_buffer_header@@Base+0xba>
  40bc29:	mov    eax,DWORD PTR [rbp-0x34]
  40bc2c:	mov    DWORD PTR [rbp-0xc],eax
  40bc2f:	mov    rax,QWORD PTR [rbp-0x28]
  40bc33:	mov    esi,0x4
  40bc38:	mov    rdi,rax
  40bc3b:	call   40aab2 <flatcc_verify_error_string@@Base+0x24d>
  40bc40:	mov    DWORD PTR [rbp-0x8],eax
  40bc43:	cmp    DWORD PTR [rbp-0xc],0x0
  40bc47:	je     40bc51 <flatcc_verify_typed_buffer_header@@Base+0x9e>
  40bc49:	mov    eax,DWORD PTR [rbp-0x8]
  40bc4c:	cmp    eax,DWORD PTR [rbp-0xc]
  40bc4f:	jne    40bc58 <flatcc_verify_typed_buffer_header@@Base+0xa5>
  40bc51:	mov    eax,0x1
  40bc56:	jmp    40bc5d <flatcc_verify_typed_buffer_header@@Base+0xaa>
  40bc58:	mov    eax,0x0
  40bc5d:	mov    DWORD PTR [rbp-0x4],eax
  40bc60:	cmp    DWORD PTR [rbp-0x4],0x0
  40bc64:	jne    40bc6d <flatcc_verify_typed_buffer_header@@Base+0xba>
  40bc66:	mov    eax,0x2
  40bc6b:	jmp    40bc72 <flatcc_verify_typed_buffer_header@@Base+0xbf>
  40bc6d:	mov    eax,0x0
  40bc72:	leave  
  40bc73:	ret    

000000000040bc74 <flatcc_verify_struct_as_root@@Base>:
  40bc74:	push   rbp
  40bc75:	mov    rbp,rsp
  40bc78:	push   r12
  40bc7a:	push   rbx
  40bc7b:	sub    rsp,0x30
  40bc7f:	mov    QWORD PTR [rbp-0x18],rdi
  40bc83:	mov    QWORD PTR [rbp-0x20],rsi
  40bc87:	mov    QWORD PTR [rbp-0x28],rdx
  40bc8b:	mov    QWORD PTR [rbp-0x30],rcx
  40bc8f:	mov    eax,r8d
  40bc92:	mov    WORD PTR [rbp-0x34],ax
  40bc96:	mov    rdx,QWORD PTR [rbp-0x28]
  40bc9a:	mov    rcx,QWORD PTR [rbp-0x20]
  40bc9e:	mov    rax,QWORD PTR [rbp-0x18]
  40bca2:	mov    rsi,rcx
  40bca5:	mov    rdi,rax
  40bca8:	call   40bae7 <flatcc_verify_buffer_header@@Base>
  40bcad:	test   eax,eax
  40bcaf:	je     40bcca <flatcc_verify_struct_as_root@@Base+0x56>
  40bcb1:	mov    rdx,QWORD PTR [rbp-0x28]
  40bcb5:	mov    rcx,QWORD PTR [rbp-0x20]
  40bcb9:	mov    rax,QWORD PTR [rbp-0x18]
  40bcbd:	mov    rsi,rcx
  40bcc0:	mov    rdi,rax
  40bcc3:	call   40bae7 <flatcc_verify_buffer_header@@Base>
  40bcc8:	jmp    40bcfe <flatcc_verify_struct_as_root@@Base+0x8a>
  40bcca:	movzx  ebx,WORD PTR [rbp-0x34]
  40bcce:	mov    rax,QWORD PTR [rbp-0x30]
  40bcd2:	mov    r12d,eax
  40bcd5:	mov    rax,QWORD PTR [rbp-0x18]
  40bcd9:	mov    esi,0x0
  40bcde:	mov    rdi,rax
  40bce1:	call   40aa35 <flatcc_verify_error_string@@Base+0x1d0>
  40bce6:	mov    edx,eax
  40bce8:	mov    rax,QWORD PTR [rbp-0x20]
  40bcec:	mov    r8d,ebx
  40bcef:	mov    ecx,r12d
  40bcf2:	mov    esi,0x0
  40bcf7:	mov    edi,eax
  40bcf9:	call   40abb1 <flatcc_verify_error_string@@Base+0x34c>
  40bcfe:	add    rsp,0x30
  40bd02:	pop    rbx
  40bd03:	pop    r12
  40bd05:	pop    rbp
  40bd06:	ret    

000000000040bd07 <flatcc_verify_struct_as_typed_root@@Base>:
  40bd07:	push   rbp
  40bd08:	mov    rbp,rsp
  40bd0b:	push   r12
  40bd0d:	push   rbx
  40bd0e:	sub    rsp,0x20
  40bd12:	mov    QWORD PTR [rbp-0x18],rdi
  40bd16:	mov    QWORD PTR [rbp-0x20],rsi
  40bd1a:	mov    DWORD PTR [rbp-0x24],edx
  40bd1d:	mov    QWORD PTR [rbp-0x30],rcx
  40bd21:	mov    eax,r8d
  40bd24:	mov    WORD PTR [rbp-0x28],ax
  40bd28:	mov    edx,DWORD PTR [rbp-0x24]
  40bd2b:	mov    rcx,QWORD PTR [rbp-0x20]
  40bd2f:	mov    rax,QWORD PTR [rbp-0x18]
  40bd33:	mov    rsi,rcx
  40bd36:	mov    rdi,rax
  40bd39:	call   40bbb3 <flatcc_verify_typed_buffer_header@@Base>
  40bd3e:	test   eax,eax
  40bd40:	je     40bd5a <flatcc_verify_struct_as_typed_root@@Base+0x53>
  40bd42:	mov    edx,DWORD PTR [rbp-0x24]
  40bd45:	mov    rcx,QWORD PTR [rbp-0x20]
  40bd49:	mov    rax,QWORD PTR [rbp-0x18]
  40bd4d:	mov    rsi,rcx
  40bd50:	mov    rdi,rax
  40bd53:	call   40bbb3 <flatcc_verify_typed_buffer_header@@Base>
  40bd58:	jmp    40bd8e <flatcc_verify_struct_as_typed_root@@Base+0x87>
  40bd5a:	movzx  ebx,WORD PTR [rbp-0x28]
  40bd5e:	mov    rax,QWORD PTR [rbp-0x30]
  40bd62:	mov    r12d,eax
  40bd65:	mov    rax,QWORD PTR [rbp-0x18]
  40bd69:	mov    esi,0x0
  40bd6e:	mov    rdi,rax
  40bd71:	call   40aa35 <flatcc_verify_error_string@@Base+0x1d0>
  40bd76:	mov    edx,eax
  40bd78:	mov    rax,QWORD PTR [rbp-0x20]
  40bd7c:	mov    r8d,ebx
  40bd7f:	mov    ecx,r12d
  40bd82:	mov    esi,0x0
  40bd87:	mov    edi,eax
  40bd89:	call   40abb1 <flatcc_verify_error_string@@Base+0x34c>
  40bd8e:	add    rsp,0x20
  40bd92:	pop    rbx
  40bd93:	pop    r12
  40bd95:	pop    rbp
  40bd96:	ret    

000000000040bd97 <flatcc_verify_table_as_root@@Base>:
  40bd97:	push   rbp
  40bd98:	mov    rbp,rsp
  40bd9b:	sub    rsp,0x20
  40bd9f:	mov    QWORD PTR [rbp-0x8],rdi
  40bda3:	mov    QWORD PTR [rbp-0x10],rsi
  40bda7:	mov    QWORD PTR [rbp-0x18],rdx
  40bdab:	mov    QWORD PTR [rbp-0x20],rcx
  40bdaf:	mov    rax,QWORD PTR [rbp-0x10]
  40bdb3:	mov    ecx,eax
  40bdb5:	mov    rdx,QWORD PTR [rbp-0x18]
  40bdb9:	mov    rax,QWORD PTR [rbp-0x8]
  40bdbd:	mov    rsi,rcx
  40bdc0:	mov    rdi,rax
  40bdc3:	call   40bae7 <flatcc_verify_buffer_header@@Base>
  40bdc8:	test   eax,eax
  40bdca:	je     40bde7 <flatcc_verify_table_as_root@@Base+0x50>
  40bdcc:	mov    rax,QWORD PTR [rbp-0x10]
  40bdd0:	mov    ecx,eax
  40bdd2:	mov    rdx,QWORD PTR [rbp-0x18]
  40bdd6:	mov    rax,QWORD PTR [rbp-0x8]
  40bdda:	mov    rsi,rcx
  40bddd:	mov    rdi,rax
  40bde0:	call   40bae7 <flatcc_verify_buffer_header@@Base>
  40bde5:	jmp    40be1e <flatcc_verify_table_as_root@@Base+0x87>
  40bde7:	mov    rax,QWORD PTR [rbp-0x8]
  40bdeb:	mov    esi,0x0
  40bdf0:	mov    rdi,rax
  40bdf3:	call   40aa35 <flatcc_verify_error_string@@Base+0x1d0>
  40bdf8:	mov    ecx,eax
  40bdfa:	mov    rax,QWORD PTR [rbp-0x10]
  40bdfe:	mov    esi,eax
  40be00:	mov    rdx,QWORD PTR [rbp-0x20]
  40be04:	mov    rax,QWORD PTR [rbp-0x8]
  40be08:	mov    r9,rdx
  40be0b:	mov    r8d,0x64
  40be11:	mov    edx,0x0
  40be16:	mov    rdi,rax
  40be19:	call   40b114 <flatcc_verify_error_string@@Base+0x8af>
  40be1e:	leave  
  40be1f:	ret    

000000000040be20 <flatcc_verify_table_as_typed_root@@Base>:
  40be20:	push   rbp
  40be21:	mov    rbp,rsp
  40be24:	sub    rsp,0x20
  40be28:	mov    QWORD PTR [rbp-0x8],rdi
  40be2c:	mov    QWORD PTR [rbp-0x10],rsi
  40be30:	mov    DWORD PTR [rbp-0x14],edx
  40be33:	mov    QWORD PTR [rbp-0x20],rcx
  40be37:	mov    rax,QWORD PTR [rbp-0x10]
  40be3b:	mov    ecx,eax
  40be3d:	mov    edx,DWORD PTR [rbp-0x14]
  40be40:	mov    rax,QWORD PTR [rbp-0x8]
  40be44:	mov    rsi,rcx
  40be47:	mov    rdi,rax
  40be4a:	call   40bbb3 <flatcc_verify_typed_buffer_header@@Base>
  40be4f:	test   eax,eax
  40be51:	je     40be6d <flatcc_verify_table_as_typed_root@@Base+0x4d>
  40be53:	mov    rax,QWORD PTR [rbp-0x10]
  40be57:	mov    ecx,eax
  40be59:	mov    edx,DWORD PTR [rbp-0x14]
  40be5c:	mov    rax,QWORD PTR [rbp-0x8]
  40be60:	mov    rsi,rcx
  40be63:	mov    rdi,rax
  40be66:	call   40bbb3 <flatcc_verify_typed_buffer_header@@Base>
  40be6b:	jmp    40bea4 <flatcc_verify_table_as_typed_root@@Base+0x84>
  40be6d:	mov    rax,QWORD PTR [rbp-0x8]
  40be71:	mov    esi,0x0
  40be76:	mov    rdi,rax
  40be79:	call   40aa35 <flatcc_verify_error_string@@Base+0x1d0>
  40be7e:	mov    ecx,eax
  40be80:	mov    rax,QWORD PTR [rbp-0x10]
  40be84:	mov    esi,eax
  40be86:	mov    rdx,QWORD PTR [rbp-0x20]
  40be8a:	mov    rax,QWORD PTR [rbp-0x8]
  40be8e:	mov    r9,rdx
  40be91:	mov    r8d,0x64
  40be97:	mov    edx,0x0
  40be9c:	mov    rdi,rax
  40be9f:	call   40b114 <flatcc_verify_error_string@@Base+0x8af>
  40bea4:	leave  
  40bea5:	ret    

000000000040bea6 <flatcc_verify_struct_as_nested_root@@Base>:
  40bea6:	push   rbp
  40bea7:	mov    rbp,rsp
  40beaa:	sub    rsp,0x40
  40beae:	mov    QWORD PTR [rbp-0x18],rdi
  40beb2:	mov    eax,esi
  40beb4:	mov    DWORD PTR [rbp-0x20],edx
  40beb7:	mov    QWORD PTR [rbp-0x28],rcx
  40bebb:	mov    QWORD PTR [rbp-0x30],r8
  40bebf:	mov    edx,r9d
  40bec2:	mov    WORD PTR [rbp-0x1c],ax
  40bec6:	mov    WORD PTR [rbp-0x34],dx
  40beca:	movzx  ecx,WORD PTR [rbp-0x34]
  40bece:	movzx  esi,WORD PTR [rbp-0x1c]
  40bed2:	mov    edx,DWORD PTR [rbp-0x20]
  40bed5:	mov    rax,QWORD PTR [rbp-0x18]
  40bed9:	mov    r9d,0xffffffff
  40bedf:	mov    r8d,0x1
  40bee5:	mov    rdi,rax
  40bee8:	call   40b762 <flatcc_verify_vector_field@@Base>
  40beed:	test   eax,eax
  40beef:	je     40bf16 <flatcc_verify_struct_as_nested_root@@Base+0x70>
  40bef1:	movzx  ecx,WORD PTR [rbp-0x34]
  40bef5:	movzx  esi,WORD PTR [rbp-0x1c]
  40bef9:	mov    edx,DWORD PTR [rbp-0x20]
  40befc:	mov    rax,QWORD PTR [rbp-0x18]
  40bf00:	mov    r9d,0xffffffff
  40bf06:	mov    r8d,0x1
  40bf0c:	mov    rdi,rax
  40bf0f:	call   40b762 <flatcc_verify_vector_field@@Base>
  40bf14:	jmp    40bf8f <flatcc_verify_struct_as_nested_root@@Base+0xe9>
  40bf16:	movzx  edx,WORD PTR [rbp-0x1c]
  40bf1a:	mov    rax,QWORD PTR [rbp-0x18]
  40bf1e:	mov    esi,edx
  40bf20:	mov    rdi,rax
  40bf23:	call   40aca4 <flatcc_verify_error_string@@Base+0x43f>
  40bf28:	mov    QWORD PTR [rbp-0x8],rax
  40bf2c:	cmp    QWORD PTR [rbp-0x8],0x0
  40bf31:	jne    40bf3a <flatcc_verify_struct_as_nested_root@@Base+0x94>
  40bf33:	mov    eax,0x0
  40bf38:	jmp    40bf8f <flatcc_verify_struct_as_nested_root@@Base+0xe9>
  40bf3a:	mov    rax,QWORD PTR [rbp-0x8]
  40bf3e:	mov    esi,0x0
  40bf43:	mov    rdi,rax
  40bf46:	call   40aa35 <flatcc_verify_error_string@@Base+0x1d0>
  40bf4b:	mov    edx,eax
  40bf4d:	mov    rax,QWORD PTR [rbp-0x8]
  40bf51:	add    rax,rdx
  40bf54:	mov    QWORD PTR [rbp-0x8],rax
  40bf58:	mov    rax,QWORD PTR [rbp-0x8]
  40bf5c:	mov    esi,0x0
  40bf61:	mov    rdi,rax
  40bf64:	call   40aa35 <flatcc_verify_error_string@@Base+0x1d0>
  40bf69:	mov    DWORD PTR [rbp-0xc],eax
  40bf6c:	add    QWORD PTR [rbp-0x8],0x4
  40bf71:	movzx  edi,WORD PTR [rbp-0x34]
  40bf75:	mov    esi,DWORD PTR [rbp-0xc]
  40bf78:	mov    rcx,QWORD PTR [rbp-0x30]
  40bf7c:	mov    rdx,QWORD PTR [rbp-0x28]
  40bf80:	mov    rax,QWORD PTR [rbp-0x8]
  40bf84:	mov    r8d,edi
  40bf87:	mov    rdi,rax
  40bf8a:	call   40bc74 <flatcc_verify_struct_as_root@@Base>
  40bf8f:	leave  
  40bf90:	ret    

000000000040bf91 <flatcc_verify_table_as_nested_root@@Base>:
  40bf91:	push   rbp
  40bf92:	mov    rbp,rsp
  40bf95:	push   rbx
  40bf96:	sub    rsp,0x48
  40bf9a:	mov    QWORD PTR [rbp-0x28],rdi
  40bf9e:	mov    eax,esi
  40bfa0:	mov    DWORD PTR [rbp-0x30],edx
  40bfa3:	mov    QWORD PTR [rbp-0x38],rcx
  40bfa7:	mov    edx,r8d
  40bfaa:	mov    QWORD PTR [rbp-0x48],r9
  40bfae:	mov    WORD PTR [rbp-0x2c],ax
  40bfb2:	mov    WORD PTR [rbp-0x3c],dx
  40bfb6:	movzx  ecx,WORD PTR [rbp-0x3c]
  40bfba:	movzx  esi,WORD PTR [rbp-0x2c]
  40bfbe:	mov    edx,DWORD PTR [rbp-0x30]
  40bfc1:	mov    rax,QWORD PTR [rbp-0x28]
  40bfc5:	mov    r9d,0xffffffff
  40bfcb:	mov    r8d,0x1
  40bfd1:	mov    rdi,rax
  40bfd4:	call   40b762 <flatcc_verify_vector_field@@Base>
  40bfd9:	test   eax,eax
  40bfdb:	je     40c005 <flatcc_verify_table_as_nested_root@@Base+0x74>
  40bfdd:	movzx  ecx,WORD PTR [rbp-0x3c]
  40bfe1:	movzx  esi,WORD PTR [rbp-0x2c]
  40bfe5:	mov    edx,DWORD PTR [rbp-0x30]
  40bfe8:	mov    rax,QWORD PTR [rbp-0x28]
  40bfec:	mov    r9d,0xffffffff
  40bff2:	mov    r8d,0x1
  40bff8:	mov    rdi,rax
  40bffb:	call   40b762 <flatcc_verify_vector_field@@Base>
  40c000:	jmp    40c0cd <flatcc_verify_table_as_nested_root@@Base+0x13c>
  40c005:	movzx  edx,WORD PTR [rbp-0x2c]
  40c009:	mov    rax,QWORD PTR [rbp-0x28]
  40c00d:	mov    esi,edx
  40c00f:	mov    rdi,rax
  40c012:	call   40aca4 <flatcc_verify_error_string@@Base+0x43f>
  40c017:	mov    QWORD PTR [rbp-0x18],rax
  40c01b:	cmp    QWORD PTR [rbp-0x18],0x0
  40c020:	jne    40c02c <flatcc_verify_table_as_nested_root@@Base+0x9b>
  40c022:	mov    eax,0x0
  40c027:	jmp    40c0cd <flatcc_verify_table_as_nested_root@@Base+0x13c>
  40c02c:	mov    rax,QWORD PTR [rbp-0x18]
  40c030:	mov    esi,0x0
  40c035:	mov    rdi,rax
  40c038:	call   40aa35 <flatcc_verify_error_string@@Base+0x1d0>
  40c03d:	mov    edx,eax
  40c03f:	mov    rax,QWORD PTR [rbp-0x18]
  40c043:	add    rax,rdx
  40c046:	mov    QWORD PTR [rbp-0x18],rax
  40c04a:	mov    rax,QWORD PTR [rbp-0x18]
  40c04e:	mov    esi,0x0
  40c053:	mov    rdi,rax
  40c056:	call   40aa35 <flatcc_verify_error_string@@Base+0x1d0>
  40c05b:	mov    DWORD PTR [rbp-0x1c],eax
  40c05e:	add    QWORD PTR [rbp-0x18],0x4
  40c063:	mov    ecx,DWORD PTR [rbp-0x1c]
  40c066:	mov    rdx,QWORD PTR [rbp-0x38]
  40c06a:	mov    rax,QWORD PTR [rbp-0x18]
  40c06e:	mov    rsi,rcx
  40c071:	mov    rdi,rax
  40c074:	call   40bae7 <flatcc_verify_buffer_header@@Base>
  40c079:	test   eax,eax
  40c07b:	je     40c095 <flatcc_verify_table_as_nested_root@@Base+0x104>
  40c07d:	mov    ecx,DWORD PTR [rbp-0x1c]
  40c080:	mov    rdx,QWORD PTR [rbp-0x38]
  40c084:	mov    rax,QWORD PTR [rbp-0x18]
  40c088:	mov    rsi,rcx
  40c08b:	mov    rdi,rax
  40c08e:	call   40bae7 <flatcc_verify_buffer_header@@Base>
  40c093:	jmp    40c0cd <flatcc_verify_table_as_nested_root@@Base+0x13c>
  40c095:	mov    rax,QWORD PTR [rbp-0x28]
  40c099:	mov    ebx,DWORD PTR [rax+0xc]
  40c09c:	mov    rax,QWORD PTR [rbp-0x18]
  40c0a0:	mov    esi,0x0
  40c0a5:	mov    rdi,rax
  40c0a8:	call   40aa35 <flatcc_verify_error_string@@Base+0x1d0>
  40c0ad:	mov    ecx,eax
  40c0af:	mov    rdx,QWORD PTR [rbp-0x48]
  40c0b3:	mov    esi,DWORD PTR [rbp-0x1c]
  40c0b6:	mov    rax,QWORD PTR [rbp-0x18]
  40c0ba:	mov    r9,rdx
  40c0bd:	mov    r8d,ebx
  40c0c0:	mov    edx,0x0
  40c0c5:	mov    rdi,rax
  40c0c8:	call   40b114 <flatcc_verify_error_string@@Base+0x8af>
  40c0cd:	add    rsp,0x48
  40c0d1:	pop    rbx
  40c0d2:	pop    rbp
  40c0d3:	ret    

000000000040c0d4 <flatcc_verify_union_field@@Base>:
  40c0d4:	push   rbp
  40c0d5:	mov    rbp,rsp
  40c0d8:	sub    rsp,0x70
  40c0dc:	mov    QWORD PTR [rbp-0x58],rdi
  40c0e0:	mov    eax,esi
  40c0e2:	mov    DWORD PTR [rbp-0x60],edx
  40c0e5:	mov    QWORD PTR [rbp-0x68],rcx
  40c0e9:	mov    WORD PTR [rbp-0x5c],ax
  40c0ed:	mov    rax,QWORD PTR fs:0x28
  40c0f6:	mov    QWORD PTR [rbp-0x8],rax
  40c0fa:	xor    eax,eax
  40c0fc:	movzx  eax,WORD PTR [rbp-0x5c]
  40c100:	sub    eax,0x1
  40c103:	movzx  edx,ax
  40c106:	mov    rax,QWORD PTR [rbp-0x58]
  40c10a:	mov    esi,edx
  40c10c:	mov    rdi,rax
  40c10f:	call   40ac53 <flatcc_verify_error_string@@Base+0x3ee>
  40c114:	mov    WORD PTR [rbp-0x50],ax
  40c118:	cmp    WORD PTR [rbp-0x50],0x0
  40c11d:	jne    40c17a <flatcc_verify_union_field@@Base+0xa6>
  40c11f:	movzx  edx,WORD PTR [rbp-0x5c]
  40c123:	mov    rax,QWORD PTR [rbp-0x58]
  40c127:	mov    esi,edx
  40c129:	mov    rdi,rax
  40c12c:	call   40ac53 <flatcc_verify_error_string@@Base+0x3ee>
  40c131:	mov    WORD PTR [rbp-0x4e],ax
  40c135:	cmp    WORD PTR [rbp-0x4e],0x0
  40c13a:	sete   al
  40c13d:	movzx  eax,al
  40c140:	mov    DWORD PTR [rbp-0x48],eax
  40c143:	cmp    DWORD PTR [rbp-0x48],0x0
  40c147:	jne    40c153 <flatcc_verify_union_field@@Base+0x7f>
  40c149:	mov    eax,0x17
  40c14e:	jmp    40c2c5 <flatcc_verify_union_field@@Base+0x1f1>
  40c153:	cmp    DWORD PTR [rbp-0x60],0x0
  40c157:	sete   al
  40c15a:	movzx  eax,al
  40c15d:	mov    DWORD PTR [rbp-0x44],eax
  40c160:	cmp    DWORD PTR [rbp-0x44],0x0
  40c164:	jne    40c170 <flatcc_verify_union_field@@Base+0x9c>
  40c166:	mov    eax,0x15
  40c16b:	jmp    40c2c5 <flatcc_verify_union_field@@Base+0x1f1>
  40c170:	mov    eax,0x0
  40c175:	jmp    40c2c5 <flatcc_verify_union_field@@Base+0x1f1>
  40c17a:	movzx  eax,WORD PTR [rbp-0x5c]
  40c17e:	sub    eax,0x1
  40c181:	movzx  esi,ax
  40c184:	mov    rax,QWORD PTR [rbp-0x58]
  40c188:	mov    r8d,0x1
  40c18e:	mov    ecx,0x1
  40c193:	mov    edx,0x0
  40c198:	mov    rdi,rax
  40c19b:	call   40acf6 <flatcc_verify_error_string@@Base+0x491>
  40c1a0:	test   eax,eax
  40c1a2:	je     40c1cf <flatcc_verify_union_field@@Base+0xfb>
  40c1a4:	movzx  eax,WORD PTR [rbp-0x5c]
  40c1a8:	sub    eax,0x1
  40c1ab:	movzx  esi,ax
  40c1ae:	mov    rax,QWORD PTR [rbp-0x58]
  40c1b2:	mov    r8d,0x1
  40c1b8:	mov    ecx,0x1
  40c1bd:	mov    edx,0x0
  40c1c2:	mov    rdi,rax
  40c1c5:	call   40acf6 <flatcc_verify_error_string@@Base+0x491>
  40c1ca:	jmp    40c2c5 <flatcc_verify_union_field@@Base+0x1f1>
  40c1cf:	movzx  edx,WORD PTR [rbp-0x5c]
  40c1d3:	mov    rax,QWORD PTR [rbp-0x58]
  40c1d7:	mov    esi,edx
  40c1d9:	mov    rdi,rax
  40c1dc:	call   40ac53 <flatcc_verify_error_string@@Base+0x3ee>
  40c1e1:	mov    WORD PTR [rbp-0x4e],ax
  40c1e5:	mov    rax,QWORD PTR [rbp-0x58]
  40c1e9:	mov    rdx,QWORD PTR [rax]
  40c1ec:	mov    rax,QWORD PTR [rbp-0x58]
  40c1f0:	mov    eax,DWORD PTR [rax+0x18]
  40c1f3:	mov    ecx,eax
  40c1f5:	movzx  eax,WORD PTR [rbp-0x50]
  40c1f9:	add    rax,rcx
  40c1fc:	add    rax,rdx
  40c1ff:	mov    QWORD PTR [rbp-0x38],rax
  40c203:	mov    rax,QWORD PTR [rbp-0x38]
  40c207:	movzx  eax,BYTE PTR [rax]
  40c20a:	test   al,al
  40c20c:	jne    40c215 <flatcc_verify_union_field@@Base+0x141>
  40c20e:	cmp    WORD PTR [rbp-0x4e],0x0
  40c213:	jne    40c21c <flatcc_verify_union_field@@Base+0x148>
  40c215:	mov    eax,0x1
  40c21a:	jmp    40c221 <flatcc_verify_union_field@@Base+0x14d>
  40c21c:	mov    eax,0x0
  40c221:	mov    DWORD PTR [rbp-0x40],eax
  40c224:	cmp    DWORD PTR [rbp-0x40],0x0
  40c228:	jne    40c234 <flatcc_verify_union_field@@Base+0x160>
  40c22a:	mov    eax,0x18
  40c22f:	jmp    40c2c5 <flatcc_verify_union_field@@Base+0x1f1>
  40c234:	mov    rax,QWORD PTR [rbp-0x38]
  40c238:	movzx  eax,BYTE PTR [rax]
  40c23b:	test   al,al
  40c23d:	jne    40c246 <flatcc_verify_union_field@@Base+0x172>
  40c23f:	mov    eax,0x0
  40c244:	jmp    40c2c5 <flatcc_verify_union_field@@Base+0x1f1>
  40c246:	movzx  esi,WORD PTR [rbp-0x5c]
  40c24a:	lea    rcx,[rbp-0x4c]
  40c24e:	mov    edx,DWORD PTR [rbp-0x60]
  40c251:	mov    rax,QWORD PTR [rbp-0x58]
  40c255:	mov    rdi,rax
  40c258:	call   40ade5 <flatcc_verify_error_string@@Base+0x580>
  40c25d:	mov    DWORD PTR [rbp-0x3c],eax
  40c260:	cmp    DWORD PTR [rbp-0x3c],0x0
  40c264:	jne    40c26d <flatcc_verify_union_field@@Base+0x199>
  40c266:	mov    eax,DWORD PTR [rbp-0x4c]
  40c269:	test   eax,eax
  40c26b:	jne    40c272 <flatcc_verify_union_field@@Base+0x19e>
  40c26d:	mov    eax,DWORD PTR [rbp-0x3c]
  40c270:	jmp    40c2c5 <flatcc_verify_union_field@@Base+0x1f1>
  40c272:	mov    rax,QWORD PTR [rbp-0x58]
  40c276:	mov    rax,QWORD PTR [rax]
  40c279:	mov    QWORD PTR [rbp-0x30],rax
  40c27d:	mov    rax,QWORD PTR [rbp-0x58]
  40c281:	mov    eax,DWORD PTR [rax+0x8]
  40c284:	mov    DWORD PTR [rbp-0x28],eax
  40c287:	mov    rax,QWORD PTR [rbp-0x58]
  40c28b:	mov    eax,DWORD PTR [rax+0xc]
  40c28e:	mov    DWORD PTR [rbp-0x24],eax
  40c291:	mov    eax,DWORD PTR [rbp-0x4c]
  40c294:	mov    DWORD PTR [rbp-0x1c],eax
  40c297:	mov    edx,DWORD PTR [rbp-0x4c]
  40c29a:	mov    rax,QWORD PTR [rbp-0x58]
  40c29e:	mov    rax,QWORD PTR [rax]
  40c2a1:	mov    esi,edx
  40c2a3:	mov    rdi,rax
  40c2a6:	call   40aa35 <flatcc_verify_error_string@@Base+0x1d0>
  40c2ab:	mov    DWORD PTR [rbp-0x18],eax
  40c2ae:	mov    rax,QWORD PTR [rbp-0x38]
  40c2b2:	movzx  eax,BYTE PTR [rax]
  40c2b5:	mov    BYTE PTR [rbp-0x20],al
  40c2b8:	lea    rdx,[rbp-0x30]
  40c2bc:	mov    rax,QWORD PTR [rbp-0x68]
  40c2c0:	mov    rdi,rdx
  40c2c3:	call   rax
  40c2c5:	mov    rcx,QWORD PTR [rbp-0x8]
  40c2c9:	xor    rcx,QWORD PTR fs:0x28
  40c2d2:	je     40c2d9 <flatcc_verify_union_field@@Base+0x205>
  40c2d4:	call   403060 <__stack_chk_fail@plt>
  40c2d9:	leave  
  40c2da:	ret    

000000000040c2db <flatcc_verify_union_vector_field@@Base>:
  40c2db:	push   rbp
  40c2dc:	mov    rbp,rsp
  40c2df:	push   rbx
  40c2e0:	sub    rsp,0x58
  40c2e4:	mov    QWORD PTR [rbp-0x48],rdi
  40c2e8:	mov    eax,esi
  40c2ea:	mov    DWORD PTR [rbp-0x50],edx
  40c2ed:	mov    QWORD PTR [rbp-0x58],rcx
  40c2f1:	mov    WORD PTR [rbp-0x4c],ax
  40c2f5:	mov    rax,QWORD PTR fs:0x28
  40c2fe:	mov    QWORD PTR [rbp-0x18],rax
  40c302:	xor    eax,eax
  40c304:	movzx  eax,WORD PTR [rbp-0x4c]
  40c308:	sub    eax,0x1
  40c30b:	movzx  edx,ax
  40c30e:	mov    rax,QWORD PTR [rbp-0x48]
  40c312:	mov    esi,edx
  40c314:	mov    rdi,rax
  40c317:	call   40ac53 <flatcc_verify_error_string@@Base+0x3ee>
  40c31c:	mov    WORD PTR [rbp-0x3c],ax
  40c320:	cmp    WORD PTR [rbp-0x3c],0x0
  40c325:	jne    40c361 <flatcc_verify_union_vector_field@@Base+0x86>
  40c327:	movzx  edx,WORD PTR [rbp-0x4c]
  40c32b:	mov    rax,QWORD PTR [rbp-0x48]
  40c32f:	mov    esi,edx
  40c331:	mov    rdi,rax
  40c334:	call   40ac53 <flatcc_verify_error_string@@Base+0x3ee>
  40c339:	mov    WORD PTR [rbp-0x3a],ax
  40c33d:	cmp    WORD PTR [rbp-0x3a],0x0
  40c342:	jne    40c361 <flatcc_verify_union_vector_field@@Base+0x86>
  40c344:	cmp    DWORD PTR [rbp-0x50],0x0
  40c348:	sete   al
  40c34b:	movzx  eax,al
  40c34e:	mov    DWORD PTR [rbp-0x34],eax
  40c351:	cmp    DWORD PTR [rbp-0x34],0x0
  40c355:	jne    40c361 <flatcc_verify_union_vector_field@@Base+0x86>
  40c357:	mov    eax,0x16
  40c35c:	jmp    40c4a5 <flatcc_verify_union_vector_field@@Base+0x1ca>
  40c361:	movzx  eax,WORD PTR [rbp-0x4c]
  40c365:	sub    eax,0x1
  40c368:	movzx  esi,ax
  40c36b:	mov    edx,DWORD PTR [rbp-0x50]
  40c36e:	mov    rax,QWORD PTR [rbp-0x48]
  40c372:	mov    r9d,0xffffffff
  40c378:	mov    r8d,0x1
  40c37e:	mov    ecx,0x1
  40c383:	mov    rdi,rax
  40c386:	call   40b762 <flatcc_verify_vector_field@@Base>
  40c38b:	test   eax,eax
  40c38d:	je     40c3be <flatcc_verify_union_vector_field@@Base+0xe3>
  40c38f:	movzx  eax,WORD PTR [rbp-0x4c]
  40c393:	sub    eax,0x1
  40c396:	movzx  esi,ax
  40c399:	mov    edx,DWORD PTR [rbp-0x50]
  40c39c:	mov    rax,QWORD PTR [rbp-0x48]
  40c3a0:	mov    r9d,0xffffffff
  40c3a6:	mov    r8d,0x1
  40c3ac:	mov    ecx,0x1
  40c3b1:	mov    rdi,rax
  40c3b4:	call   40b762 <flatcc_verify_vector_field@@Base>
  40c3b9:	jmp    40c4a5 <flatcc_verify_union_vector_field@@Base+0x1ca>
  40c3be:	movzx  eax,WORD PTR [rbp-0x4c]
  40c3c2:	sub    eax,0x1
  40c3c5:	movzx  edx,ax
  40c3c8:	mov    rax,QWORD PTR [rbp-0x48]
  40c3cc:	mov    esi,edx
  40c3ce:	mov    rdi,rax
  40c3d1:	call   40aca4 <flatcc_verify_error_string@@Base+0x43f>
  40c3d6:	mov    QWORD PTR [rbp-0x28],rax
  40c3da:	cmp    QWORD PTR [rbp-0x28],0x0
  40c3df:	jne    40c3eb <flatcc_verify_union_vector_field@@Base+0x110>
  40c3e1:	mov    eax,0x0
  40c3e6:	jmp    40c4a5 <flatcc_verify_union_vector_field@@Base+0x1ca>
  40c3eb:	mov    rax,QWORD PTR [rbp-0x28]
  40c3ef:	mov    esi,0x0
  40c3f4:	mov    rdi,rax
  40c3f7:	call   40aa35 <flatcc_verify_error_string@@Base+0x1d0>
  40c3fc:	mov    edx,eax
  40c3fe:	mov    rax,QWORD PTR [rbp-0x28]
  40c402:	add    rax,rdx
  40c405:	mov    QWORD PTR [rbp-0x28],rax
  40c409:	mov    rax,QWORD PTR [rbp-0x28]
  40c40d:	mov    esi,0x0
  40c412:	mov    rdi,rax
  40c415:	call   40aa35 <flatcc_verify_error_string@@Base+0x1d0>
  40c41a:	mov    DWORD PTR [rbp-0x30],eax
  40c41d:	add    QWORD PTR [rbp-0x28],0x4
  40c422:	mov    rax,QWORD PTR [rbp-0x28]
  40c426:	mov    QWORD PTR [rbp-0x20],rax
  40c42a:	movzx  esi,WORD PTR [rbp-0x4c]
  40c42e:	lea    rcx,[rbp-0x38]
  40c432:	mov    edx,DWORD PTR [rbp-0x50]
  40c435:	mov    rax,QWORD PTR [rbp-0x48]
  40c439:	mov    rdi,rax
  40c43c:	call   40ade5 <flatcc_verify_error_string@@Base+0x580>
  40c441:	mov    DWORD PTR [rbp-0x2c],eax
  40c444:	cmp    DWORD PTR [rbp-0x2c],0x0
  40c448:	jne    40c451 <flatcc_verify_union_vector_field@@Base+0x176>
  40c44a:	mov    eax,DWORD PTR [rbp-0x38]
  40c44d:	test   eax,eax
  40c44f:	jne    40c456 <flatcc_verify_union_vector_field@@Base+0x17b>
  40c451:	mov    eax,DWORD PTR [rbp-0x2c]
  40c454:	jmp    40c4a5 <flatcc_verify_union_vector_field@@Base+0x1ca>
  40c456:	mov    rax,QWORD PTR [rbp-0x48]
  40c45a:	mov    ebx,DWORD PTR [rax+0xc]
  40c45d:	mov    edx,DWORD PTR [rbp-0x38]
  40c460:	mov    rax,QWORD PTR [rbp-0x48]
  40c464:	mov    rax,QWORD PTR [rax]
  40c467:	mov    esi,edx
  40c469:	mov    rdi,rax
  40c46c:	call   40aa35 <flatcc_verify_error_string@@Base+0x1d0>
  40c471:	mov    r10d,eax
  40c474:	mov    edx,DWORD PTR [rbp-0x38]
  40c477:	mov    rax,QWORD PTR [rbp-0x48]
  40c47b:	mov    esi,DWORD PTR [rax+0x8]
  40c47e:	mov    rax,QWORD PTR [rbp-0x48]
  40c482:	mov    rax,QWORD PTR [rax]
  40c485:	mov    rdi,QWORD PTR [rbp-0x20]
  40c489:	mov    ecx,DWORD PTR [rbp-0x30]
  40c48c:	push   QWORD PTR [rbp-0x58]
  40c48f:	push   rbx
  40c490:	mov    r9,rdi
  40c493:	mov    r8d,ecx
  40c496:	mov    ecx,r10d
  40c499:	mov    rdi,rax
  40c49c:	call   40b481 <flatcc_verify_error_string@@Base+0xc1c>
  40c4a1:	add    rsp,0x10
  40c4a5:	mov    rbx,QWORD PTR [rbp-0x18]
  40c4a9:	xor    rbx,QWORD PTR fs:0x28
  40c4b2:	je     40c4b9 <flatcc_verify_union_vector_field@@Base+0x1de>
  40c4b4:	call   403060 <__stack_chk_fail@plt>
  40c4b9:	mov    rbx,QWORD PTR [rbp-0x8]
  40c4bd:	leave  
  40c4be:	ret    
  40c4bf:	nop

000000000040c4c0 <__libc_csu_init@@Base>:
  40c4c0:	endbr64 
  40c4c4:	push   r15
  40c4c6:	lea    r15,[rip+0x593b]        # 411e08 <flatcc_builder_padding_base@@Base+0x4c48>
  40c4cd:	push   r14
  40c4cf:	mov    r14,rdx
  40c4d2:	push   r13
  40c4d4:	mov    r13,rsi
  40c4d7:	push   r12
  40c4d9:	mov    r12d,edi
  40c4dc:	push   rbp
  40c4dd:	lea    rbp,[rip+0x592c]        # 411e10 <flatcc_builder_padding_base@@Base+0x4c50>
  40c4e4:	push   rbx
  40c4e5:	sub    rbp,r15
  40c4e8:	sub    rsp,0x8
  40c4ec:	call   403000 <free@plt-0x30>
  40c4f1:	sar    rbp,0x3
  40c4f5:	je     40c516 <__libc_csu_init@@Base+0x56>
  40c4f7:	xor    ebx,ebx
  40c4f9:	nop    DWORD PTR [rax+0x0]
  40c500:	mov    rdx,r14
  40c503:	mov    rsi,r13
  40c506:	mov    edi,r12d
  40c509:	call   QWORD PTR [r15+rbx*8]
  40c50d:	add    rbx,0x1
  40c511:	cmp    rbp,rbx
  40c514:	jne    40c500 <__libc_csu_init@@Base+0x40>
  40c516:	add    rsp,0x8
  40c51a:	pop    rbx
  40c51b:	pop    rbp
  40c51c:	pop    r12
  40c51e:	pop    r13
  40c520:	pop    r14
  40c522:	pop    r15
  40c524:	ret    
  40c525:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000040c530 <__libc_csu_fini@@Base>:
  40c530:	endbr64 
  40c534:	ret    

Disassembly of section .fini:

000000000040c538 <.fini>:
  40c538:	endbr64 
  40c53c:	sub    rsp,0x8
  40c540:	add    rsp,0x8
  40c544:	ret    
