
../repos/eddieantonio-ocreval-3ab279a/accci/accci:     file format elf64-x86-64


Disassembly of section .init:

0000000000401000 <.init>:
  401000:	endbr64 
  401004:	sub    rsp,0x8
  401008:	mov    rax,QWORD PTR [rip+0x5fc9]        # 406fd8 <__gmon_start__>
  40100f:	test   rax,rax
  401012:	je     401016 <free@plt-0x1fa>
  401014:	call   rax
  401016:	add    rsp,0x8
  40101a:	ret    

Disassembly of section .plt:

0000000000401020 <.plt>:
  401020:	push   QWORD PTR [rip+0x5fe2]        # 407008 <error@@Base+0x38d8>
  401026:	bnd jmp QWORD PTR [rip+0x5fe3]        # 407010 <error@@Base+0x38e0>
  40102d:	nop    DWORD PTR [rax]
  401030:	endbr64 
  401034:	push   0x0
  401039:	bnd jmp 401020 <free@plt-0x1f0>
  40103f:	nop
  401040:	endbr64 
  401044:	push   0x1
  401049:	bnd jmp 401020 <free@plt-0x1f0>
  40104f:	nop
  401050:	endbr64 
  401054:	push   0x2
  401059:	bnd jmp 401020 <free@plt-0x1f0>
  40105f:	nop
  401060:	endbr64 
  401064:	push   0x3
  401069:	bnd jmp 401020 <free@plt-0x1f0>
  40106f:	nop
  401070:	endbr64 
  401074:	push   0x4
  401079:	bnd jmp 401020 <free@plt-0x1f0>
  40107f:	nop
  401080:	endbr64 
  401084:	push   0x5
  401089:	bnd jmp 401020 <free@plt-0x1f0>
  40108f:	nop
  401090:	endbr64 
  401094:	push   0x6
  401099:	bnd jmp 401020 <free@plt-0x1f0>
  40109f:	nop
  4010a0:	endbr64 
  4010a4:	push   0x7
  4010a9:	bnd jmp 401020 <free@plt-0x1f0>
  4010af:	nop
  4010b0:	endbr64 
  4010b4:	push   0x8
  4010b9:	bnd jmp 401020 <free@plt-0x1f0>
  4010bf:	nop
  4010c0:	endbr64 
  4010c4:	push   0x9
  4010c9:	bnd jmp 401020 <free@plt-0x1f0>
  4010cf:	nop
  4010d0:	endbr64 
  4010d4:	push   0xa
  4010d9:	bnd jmp 401020 <free@plt-0x1f0>
  4010df:	nop
  4010e0:	endbr64 
  4010e4:	push   0xb
  4010e9:	bnd jmp 401020 <free@plt-0x1f0>
  4010ef:	nop
  4010f0:	endbr64 
  4010f4:	push   0xc
  4010f9:	bnd jmp 401020 <free@plt-0x1f0>
  4010ff:	nop
  401100:	endbr64 
  401104:	push   0xd
  401109:	bnd jmp 401020 <free@plt-0x1f0>
  40110f:	nop
  401110:	endbr64 
  401114:	push   0xe
  401119:	bnd jmp 401020 <free@plt-0x1f0>
  40111f:	nop
  401120:	endbr64 
  401124:	push   0xf
  401129:	bnd jmp 401020 <free@plt-0x1f0>
  40112f:	nop
  401130:	endbr64 
  401134:	push   0x10
  401139:	bnd jmp 401020 <free@plt-0x1f0>
  40113f:	nop
  401140:	endbr64 
  401144:	push   0x11
  401149:	bnd jmp 401020 <free@plt-0x1f0>
  40114f:	nop
  401150:	endbr64 
  401154:	push   0x12
  401159:	bnd jmp 401020 <free@plt-0x1f0>
  40115f:	nop
  401160:	endbr64 
  401164:	push   0x13
  401169:	bnd jmp 401020 <free@plt-0x1f0>
  40116f:	nop
  401170:	endbr64 
  401174:	push   0x14
  401179:	bnd jmp 401020 <free@plt-0x1f0>
  40117f:	nop
  401180:	endbr64 
  401184:	push   0x15
  401189:	bnd jmp 401020 <free@plt-0x1f0>
  40118f:	nop
  401190:	endbr64 
  401194:	push   0x16
  401199:	bnd jmp 401020 <free@plt-0x1f0>
  40119f:	nop
  4011a0:	endbr64 
  4011a4:	push   0x17
  4011a9:	bnd jmp 401020 <free@plt-0x1f0>
  4011af:	nop
  4011b0:	endbr64 
  4011b4:	push   0x18
  4011b9:	bnd jmp 401020 <free@plt-0x1f0>
  4011bf:	nop
  4011c0:	endbr64 
  4011c4:	push   0x19
  4011c9:	bnd jmp 401020 <free@plt-0x1f0>
  4011cf:	nop
  4011d0:	endbr64 
  4011d4:	push   0x1a
  4011d9:	bnd jmp 401020 <free@plt-0x1f0>
  4011df:	nop
  4011e0:	endbr64 
  4011e4:	push   0x1b
  4011e9:	bnd jmp 401020 <free@plt-0x1f0>
  4011ef:	nop
  4011f0:	endbr64 
  4011f4:	push   0x1c
  4011f9:	bnd jmp 401020 <free@plt-0x1f0>
  4011ff:	nop
  401200:	endbr64 
  401204:	push   0x1d
  401209:	bnd jmp 401020 <free@plt-0x1f0>
  40120f:	nop

Disassembly of section .plt.sec:

0000000000401210 <free@plt>:
  401210:	endbr64 
  401214:	bnd jmp QWORD PTR [rip+0x5dfd]        # 407018 <free@GLIBC_2.2.5>
  40121b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401220 <unlink@plt>:
  401220:	endbr64 
  401224:	bnd jmp QWORD PTR [rip+0x5df5]        # 407020 <unlink@GLIBC_2.2.5>
  40122b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401230 <utf8proc_get_property@plt>:
  401230:	endbr64 
  401234:	bnd jmp QWORD PTR [rip+0x5ded]        # 407028 <utf8proc_get_property>
  40123b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401240 <utf8proc_encode_char@plt>:
  401240:	endbr64 
  401244:	bnd jmp QWORD PTR [rip+0x5de5]        # 407030 <utf8proc_encode_char>
  40124b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401250 <getpid@plt>:
  401250:	endbr64 
  401254:	bnd jmp QWORD PTR [rip+0x5ddd]        # 407038 <getpid@GLIBC_2.2.5>
  40125b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401260 <fclose@plt>:
  401260:	endbr64 
  401264:	bnd jmp QWORD PTR [rip+0x5dd5]        # 407040 <fclose@GLIBC_2.2.5>
  40126b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401270 <strlen@plt>:
  401270:	endbr64 
  401274:	bnd jmp QWORD PTR [rip+0x5dcd]        # 407048 <strlen@GLIBC_2.2.5>
  40127b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401280 <__stack_chk_fail@plt>:
  401280:	endbr64 
  401284:	bnd jmp QWORD PTR [rip+0x5dc5]        # 407050 <__stack_chk_fail@GLIBC_2.4>
  40128b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401290 <rewind@plt>:
  401290:	endbr64 
  401294:	bnd jmp QWORD PTR [rip+0x5dbd]        # 407058 <rewind@GLIBC_2.2.5>
  40129b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004012a0 <utf8proc_tolower@plt>:
  4012a0:	endbr64 
  4012a4:	bnd jmp QWORD PTR [rip+0x5db5]        # 407060 <utf8proc_tolower>
  4012ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004012b0 <fputs@plt>:
  4012b0:	endbr64 
  4012b4:	bnd jmp QWORD PTR [rip+0x5dad]        # 407068 <fputs@GLIBC_2.2.5>
  4012bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004012c0 <fgets@plt>:
  4012c0:	endbr64 
  4012c4:	bnd jmp QWORD PTR [rip+0x5da5]        # 407070 <fgets@GLIBC_2.2.5>
  4012cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004012d0 <utf8proc_iterate@plt>:
  4012d0:	endbr64 
  4012d4:	bnd jmp QWORD PTR [rip+0x5d9d]        # 407078 <utf8proc_iterate>
  4012db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004012e0 <calloc@plt>:
  4012e0:	endbr64 
  4012e4:	bnd jmp QWORD PTR [rip+0x5d95]        # 407080 <calloc@GLIBC_2.2.5>
  4012eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004012f0 <strcmp@plt>:
  4012f0:	endbr64 
  4012f4:	bnd jmp QWORD PTR [rip+0x5d8d]        # 407088 <strcmp@GLIBC_2.2.5>
  4012fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401300 <__sysv_signal@plt>:
  401300:	endbr64 
  401304:	bnd jmp QWORD PTR [rip+0x5d85]        # 407090 <__sysv_signal@GLIBC_2.2.5>
  40130b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401310 <utf8proc_category@plt>:
  401310:	endbr64 
  401314:	bnd jmp QWORD PTR [rip+0x5d7d]        # 407098 <utf8proc_category>
  40131b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401320 <__xstat@plt>:
  401320:	endbr64 
  401324:	bnd jmp QWORD PTR [rip+0x5d75]        # 4070a0 <__xstat@GLIBC_2.2.5>
  40132b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401330 <__isoc99_sscanf@plt>:
  401330:	endbr64 
  401334:	bnd jmp QWORD PTR [rip+0x5d6d]        # 4070a8 <__isoc99_sscanf@GLIBC_2.7>
  40133b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401340 <__printf_chk@plt>:
  401340:	endbr64 
  401344:	bnd jmp QWORD PTR [rip+0x5d65]        # 4070b0 <__printf_chk@GLIBC_2.3.4>
  40134b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401350 <__fread_chk@plt>:
  401350:	endbr64 
  401354:	bnd jmp QWORD PTR [rip+0x5d5d]        # 4070b8 <__fread_chk@GLIBC_2.7>
  40135b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401360 <fopen@plt>:
  401360:	endbr64 
  401364:	bnd jmp QWORD PTR [rip+0x5d55]        # 4070c0 <fopen@GLIBC_2.2.5>
  40136b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401370 <exit@plt>:
  401370:	endbr64 
  401374:	bnd jmp QWORD PTR [rip+0x5d4d]        # 4070c8 <exit@GLIBC_2.2.5>
  40137b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401380 <fwrite@plt>:
  401380:	endbr64 
  401384:	bnd jmp QWORD PTR [rip+0x5d45]        # 4070d0 <fwrite@GLIBC_2.2.5>
  40138b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401390 <__fprintf_chk@plt>:
  401390:	endbr64 
  401394:	bnd jmp QWORD PTR [rip+0x5d3d]        # 4070d8 <__fprintf_chk@GLIBC_2.3.4>
  40139b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004013a0 <utf8proc_errmsg@plt>:
  4013a0:	endbr64 
  4013a4:	bnd jmp QWORD PTR [rip+0x5d35]        # 4070e0 <utf8proc_errmsg>
  4013ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004013b0 <sqrt@plt>:
  4013b0:	endbr64 
  4013b4:	bnd jmp QWORD PTR [rip+0x5d2d]        # 4070e8 <sqrt@GLIBC_2.2.5>
  4013bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004013c0 <strdup@plt>:
  4013c0:	endbr64 
  4013c4:	bnd jmp QWORD PTR [rip+0x5d25]        # 4070f0 <strdup@GLIBC_2.2.5>
  4013cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004013d0 <getc@plt>:
  4013d0:	endbr64 
  4013d4:	bnd jmp QWORD PTR [rip+0x5d1d]        # 4070f8 <getc@GLIBC_2.2.5>
  4013db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004013e0 <__sprintf_chk@plt>:
  4013e0:	endbr64 
  4013e4:	bnd jmp QWORD PTR [rip+0x5d15]        # 407100 <__sprintf_chk@GLIBC_2.3.4>
  4013eb:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

00000000004013f0 <error@@Base-0x2340>:
  4013f0:	endbr64 
  4013f4:	push   rbp
  4013f5:	xor    ecx,ecx
  4013f7:	xor    eax,eax
  4013f9:	push   rbx
  4013fa:	lea    rdx,[rip+0x2cb7]        # 4040b8 <error@@Base+0x988>
  401401:	mov    rbp,rsi
  401404:	sub    rsp,0x18
  401408:	mov    DWORD PTR [rsp+0xc],edi
  40140c:	lea    rdi,[rsp+0xc]
  401411:	call   4038b0 <error@@Base+0x180>
  401416:	xor    ebx,ebx
  401418:	cmp    DWORD PTR [rsp+0xc],0x1
  40141d:	jle    401443 <__sprintf_chk@plt+0x63>
  40141f:	nop
  401420:	mov    rdi,QWORD PTR [rbp+rbx*8+0x0]
  401425:	xor    eax,eax
  401427:	inc    rbx
  40142a:	call   401550 <__sprintf_chk@plt+0x170>
  40142f:	cmp    DWORD PTR [rsp+0xc],ebx
  401433:	jg     401420 <__sprintf_chk@plt+0x40>
  401435:	xor    eax,eax
  401437:	call   4015a0 <__sprintf_chk@plt+0x1c0>
  40143c:	xor    eax,eax
  40143e:	call   4036c0 <__sprintf_chk@plt+0x22e0>
  401443:	lea    rdi,[rip+0x2c1d]        # 404067 <error@@Base+0x937>
  40144a:	xor    eax,eax
  40144c:	call   403730 <error@@Base>
  401451:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40145b:	nop    DWORD PTR [rax+rax*1+0x0]
  401460:	endbr64 
  401464:	xor    ebp,ebp
  401466:	mov    r9,rdx
  401469:	pop    rsi
  40146a:	mov    rdx,rsp
  40146d:	and    rsp,0xfffffffffffffff0
  401471:	push   rax
  401472:	push   rsp
  401473:	mov    r8,0x403bf0
  40147a:	mov    rcx,0x403b80
  401481:	mov    rdi,0x4013f0
  401488:	call   QWORD PTR [rip+0x5b42]        # 406fd0 <error@@Base+0x38a0>
  40148e:	hlt    
  40148f:	nop
  401490:	endbr64 
  401494:	ret    
  401495:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40149f:	nop
  4014a0:	mov    eax,0x407120
  4014a5:	cmp    rax,0x407120
  4014ab:	je     4014c0 <__sprintf_chk@plt+0xe0>
  4014ad:	mov    eax,0x0
  4014b2:	test   rax,rax
  4014b5:	je     4014c0 <__sprintf_chk@plt+0xe0>
  4014b7:	mov    edi,0x407120
  4014bc:	jmp    rax
  4014be:	xchg   ax,ax
  4014c0:	ret    
  4014c1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4014cc:	nop    DWORD PTR [rax+0x0]
  4014d0:	mov    esi,0x407120
  4014d5:	sub    rsi,0x407120
  4014dc:	sar    rsi,0x3
  4014e0:	mov    rax,rsi
  4014e3:	shr    rax,0x3f
  4014e7:	add    rsi,rax
  4014ea:	sar    rsi,1
  4014ed:	je     401500 <__sprintf_chk@plt+0x120>
  4014ef:	mov    eax,0x0
  4014f4:	test   rax,rax
  4014f7:	je     401500 <__sprintf_chk@plt+0x120>
  4014f9:	mov    edi,0x407120
  4014fe:	jmp    rax
  401500:	ret    
  401501:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40150c:	nop    DWORD PTR [rax+0x0]
  401510:	endbr64 
  401514:	cmp    BYTE PTR [rip+0x5c05],0x0        # 407120 <error@@Base+0x39f0>
  40151b:	jne    401530 <__sprintf_chk@plt+0x150>
  40151d:	push   rbp
  40151e:	mov    rbp,rsp
  401521:	call   4014a0 <__sprintf_chk@plt+0xc0>
  401526:	mov    BYTE PTR [rip+0x5bf3],0x1        # 407120 <error@@Base+0x39f0>
  40152d:	pop    rbp
  40152e:	ret    
  40152f:	nop
  401530:	ret    
  401531:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40153c:	nop    DWORD PTR [rax+0x0]
  401540:	endbr64 
  401544:	jmp    4014d0 <__sprintf_chk@plt+0xf0>
  401546:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401550:	endbr64 
  401554:	push   r12
  401556:	mov    rsi,rdi
  401559:	xor    eax,eax
  40155b:	push   rbp
  40155c:	push   rbx
  40155d:	mov    rbx,0x5179e0
  401564:	mov    rdi,rbx
  401567:	mov    rbp,QWORD PTR [rbx]
  40156a:	mov    r12,QWORD PTR [rbx+0x8]
  40156e:	call   401a80 <__sprintf_chk@plt+0x6a0>
  401573:	mov    rsi,QWORD PTR [rbx]
  401576:	mov    rdx,QWORD PTR [rbx+0x8]
  40157a:	pop    rbx
  40157b:	sub    rsi,rbp
  40157e:	mov    rdi,0x161c960
  401585:	pop    rbp
  401586:	sub    rdx,r12
  401589:	xor    eax,eax
  40158b:	pop    r12
  40158d:	jmp    4023b0 <__sprintf_chk@plt+0xfd0>
  401592:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40159d:	nop    DWORD PTR [rax]
  4015a0:	endbr64 
  4015a4:	push   rbx
  4015a5:	sub    rsp,0x20
  4015a9:	mov    rax,QWORD PTR fs:0x28
  4015b2:	mov    QWORD PTR [rsp+0x18],rax
  4015b7:	xor    eax,eax
  4015b9:	mov    rbx,0x161c960
  4015c0:	lea    rdx,[rsp+0x10]
  4015c5:	mov    rdi,rbx
  4015c8:	lea    rsi,[rsp+0x8]
  4015cd:	call   402400 <__sprintf_chk@plt+0x1020>
  4015d2:	mov    rdx,QWORD PTR [rbx+0x18]
  4015d6:	lea    rsi,[rip+0x2a27]        # 404004 <error@@Base+0x8d4>
  4015dd:	mov    edi,0x1
  4015e2:	xor    eax,eax
  4015e4:	call   401340 <__printf_chk@plt>
  4015e9:	mov    rbx,0x5179e0
  4015f0:	lea    rsi,[rip+0x2a23]        # 40401a <error@@Base+0x8ea>
  4015f7:	mov    rdx,QWORD PTR [rbx]
  4015fa:	mov    edi,0x1
  4015ff:	xor    eax,eax
  401601:	call   401340 <__printf_chk@plt>
  401606:	mov    rdx,QWORD PTR [rbx+0x8]
  40160a:	lea    rsi,[rip+0x2a1d]        # 40402e <error@@Base+0x8fe>
  401611:	mov    edi,0x1
  401616:	xor    eax,eax
  401618:	call   401340 <__printf_chk@plt>
  40161d:	mov    rdx,QWORD PTR [rbx]
  401620:	vxorpd xmm0,xmm0,xmm0
  401624:	mov    rax,rdx
  401627:	sub    rax,QWORD PTR [rbx+0x8]
  40162b:	vcvtsi2sd xmm0,xmm0,rax
  401630:	vxorpd xmm1,xmm1,xmm1
  401634:	vcvtsi2sd xmm1,xmm1,rdx
  401639:	lea    rsi,[rip+0x29fe]        # 40403e <error@@Base+0x90e>
  401640:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x2aa8]        # 4040f0 <error@@Base+0x9c0>
  401648:	mov    edi,0x1
  40164d:	mov    eax,0x1
  401652:	vdivsd xmm0,xmm0,xmm1
  401656:	call   401340 <__printf_chk@plt>
  40165b:	vmovsd xmm1,QWORD PTR [rsp+0x10]
  401661:	vmovsd xmm0,QWORD PTR [rsp+0x8]
  401667:	lea    rdx,[rip+0x2a12]        # 404080 <error@@Base+0x950>
  40166e:	lea    rsi,[rip+0x29dd]        # 404052 <error@@Base+0x922>
  401675:	mov    edi,0x1
  40167a:	mov    eax,0x2
  40167f:	call   401340 <__printf_chk@plt>
  401684:	mov    rax,QWORD PTR [rsp+0x18]
  401689:	xor    rax,QWORD PTR fs:0x28
  401692:	jne    40169a <__sprintf_chk@plt+0x2ba>
  401694:	add    rsp,0x20
  401698:	pop    rbx
  401699:	ret    
  40169a:	call   401280 <__stack_chk_fail@plt>
  40169f:	nop
  4016a0:	push   rbp
  4016a1:	mov    rbp,rdx
  4016a4:	mov    rdx,rdi
  4016a7:	push   rbx
  4016a8:	lea    rdi,[rip+0x5a91]        # 407140 <error@@Base+0x3a10>
  4016af:	mov    rbx,rsi
  4016b2:	sub    rsp,0x8
  4016b6:	mov    esi,0x63
  4016bb:	call   4012c0 <fgets@plt>
  4016c0:	test   rax,rax
  4016c3:	je     4016e2 <__sprintf_chk@plt+0x302>
  4016c5:	xor    eax,eax
  4016c7:	mov    rdx,rbx
  4016ca:	lea    rsi,[rip+0x2a33]        # 404104 <error@@Base+0x9d4>
  4016d1:	lea    rdi,[rip+0x5a68]        # 407140 <error@@Base+0x3a10>
  4016d8:	call   401330 <__isoc99_sscanf@plt>
  4016dd:	cmp    eax,0x1
  4016e0:	je     4016f0 <__sprintf_chk@plt+0x310>
  4016e2:	add    rsp,0x8
  4016e6:	pop    rbx
  4016e7:	xor    eax,eax
  4016e9:	pop    rbp
  4016ea:	ret    
  4016eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4016f0:	mov    rax,QWORD PTR [rbx]
  4016f3:	add    QWORD PTR [rbp+0x0],rax
  4016f7:	add    rsp,0x8
  4016fb:	pop    rbx
  4016fc:	mov    eax,0x1
  401701:	pop    rbp
  401702:	ret    
  401703:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40170e:	xchg   ax,ax
  401710:	push   rbx
  401711:	mov    rdx,rdi
  401714:	mov    rbx,rsi
  401717:	sub    rsp,0x30
  40171b:	mov    esi,0x63
  401720:	lea    rdi,[rip+0x5a19]        # 407140 <error@@Base+0x3a10>
  401727:	mov    rax,QWORD PTR fs:0x28
  401730:	mov    QWORD PTR [rsp+0x28],rax
  401735:	xor    eax,eax
  401737:	call   4012c0 <fgets@plt>
  40173c:	test   rax,rax
  40173f:	je     40176a <__sprintf_chk@plt+0x38a>
  401741:	mov    rdx,rsp
  401744:	xor    eax,eax
  401746:	lea    rcx,[rdx+0x8]
  40174a:	lea    r9,[rdx+0x18]
  40174e:	lea    r8,[rdx+0x10]
  401752:	lea    rsi,[rip+0x299f]        # 4040f8 <error@@Base+0x9c8>
  401759:	lea    rdi,[rip+0x59e0]        # 407140 <error@@Base+0x3a10>
  401760:	call   401330 <__isoc99_sscanf@plt>
  401765:	cmp    eax,0x4
  401768:	je     401788 <__sprintf_chk@plt+0x3a8>
  40176a:	xor    eax,eax
  40176c:	mov    rbx,QWORD PTR [rsp+0x28]
  401771:	xor    rbx,QWORD PTR fs:0x28
  40177a:	jne    4017b1 <__sprintf_chk@plt+0x3d1>
  40177c:	add    rsp,0x30
  401780:	pop    rbx
  401781:	ret    
  401782:	nop    WORD PTR [rax+rax*1+0x0]
  401788:	mov    rax,QWORD PTR [rsp]
  40178c:	add    QWORD PTR [rbx],rax
  40178f:	mov    rax,QWORD PTR [rsp+0x8]
  401794:	add    QWORD PTR [rbx+0x8],rax
  401798:	mov    rax,QWORD PTR [rsp+0x10]
  40179d:	add    QWORD PTR [rbx+0x10],rax
  4017a1:	mov    rax,QWORD PTR [rsp+0x18]
  4017a6:	add    QWORD PTR [rbx+0x18],rax
  4017aa:	mov    eax,0x1
  4017af:	jmp    40176c <__sprintf_chk@plt+0x38c>
  4017b1:	call   401280 <__stack_chk_fail@plt>
  4017b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4017c0:	push   rbp
  4017c1:	mov    rbp,rdx
  4017c4:	mov    rdx,rdi
  4017c7:	push   rbx
  4017c8:	lea    rdi,[rip+0x5971]        # 407140 <error@@Base+0x3a10>
  4017cf:	mov    rbx,rsi
  4017d2:	sub    rsp,0x8
  4017d6:	mov    esi,0x63
  4017db:	call   4012c0 <fgets@plt>
  4017e0:	xor    edx,edx
  4017e2:	test   rax,rax
  4017e5:	je     401808 <__sprintf_chk@plt+0x428>
  4017e7:	mov    rdx,rbx
  4017ea:	xor    eax,eax
  4017ec:	mov    rcx,rbp
  4017ef:	lea    rsi,[rip+0x290a]        # 404100 <error@@Base+0x9d0>
  4017f6:	lea    rdi,[rip+0x5943]        # 407140 <error@@Base+0x3a10>
  4017fd:	call   401330 <__isoc99_sscanf@plt>
  401802:	cmp    eax,0x2
  401805:	sete   dl
  401808:	add    rsp,0x8
  40180c:	pop    rbx
  40180d:	mov    eax,edx
  40180f:	pop    rbp
  401810:	ret    
  401811:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40181c:	nop    DWORD PTR [rax+0x0]
  401820:	test   rdx,rdx
  401823:	jne    401840 <__sprintf_chk@plt+0x460>
  401825:	lea    rdx,[rip+0x28dc]        # 404108 <error@@Base+0x9d8>
  40182c:	mov    esi,0x1
  401831:	xor    eax,eax
  401833:	jmp    401390 <__fprintf_chk@plt>
  401838:	nop    DWORD PTR [rax+rax*1+0x0]
  401840:	vxorpd xmm0,xmm0,xmm0
  401844:	vcvtsi2sd xmm0,xmm0,rsi
  401849:	vxorpd xmm1,xmm1,xmm1
  40184d:	vcvtsi2sd xmm1,xmm1,rdx
  401852:	mov    esi,0x1
  401857:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x2891]        # 4040f0 <error@@Base+0x9c0>
  40185f:	lea    rdx,[rip+0x28ab]        # 404111 <error@@Base+0x9e1>
  401866:	mov    eax,0x1
  40186b:	vdivsd xmm0,xmm0,xmm1
  40186f:	jmp    401390 <__fprintf_chk@plt>
  401874:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40187f:	nop
  401880:	endbr64 
  401884:	mov    rdx,QWORD PTR [rdi+0x18]
  401888:	mov    rax,QWORD PTR [rsi+0x18]
  40188c:	cmp    rdx,rax
  40188f:	jne    40189e <__sprintf_chk@plt+0x4be>
  401891:	mov    rdx,QWORD PTR [rdi+0x20]
  401895:	mov    rax,QWORD PTR [rsi+0x20]
  401899:	cmp    rdx,rax
  40189c:	je     4018a8 <__sprintf_chk@plt+0x4c8>
  40189e:	sub    eax,edx
  4018a0:	ret    
  4018a1:	nop    DWORD PTR [rax+0x0]
  4018a8:	mov    rsi,QWORD PTR [rsi+0x10]
  4018ac:	mov    rdi,QWORD PTR [rdi+0x10]
  4018b0:	xor    eax,eax
  4018b2:	jmp    403550 <__sprintf_chk@plt+0x2170>
  4018b7:	nop    WORD PTR [rax+rax*1+0x0]
  4018c0:	push   r13
  4018c2:	mov    r13d,ecx
  4018c5:	push   r12
  4018c7:	mov    r12,rdx
  4018ca:	lea    rdx,[rip+0x2846]        # 404117 <error@@Base+0x9e7>
  4018d1:	push   rbp
  4018d2:	mov    rbp,rdi
  4018d5:	push   rbx
  4018d6:	mov    rbx,rsi
  4018d9:	sub    rsp,0x28
  4018dd:	mov    rax,QWORD PTR fs:0x28
  4018e6:	mov    QWORD PTR [rsp+0x18],rax
  4018eb:	xor    eax,eax
  4018ed:	mov    r8,QWORD PTR [rsi+0x8]
  4018f1:	mov    rcx,QWORD PTR [rsi]
  4018f4:	mov    esi,0x1
  4018f9:	call   401390 <__fprintf_chk@plt>
  4018fe:	mov    rdx,QWORD PTR [rbx]
  401901:	xor    eax,eax
  401903:	mov    rsi,rdx
  401906:	sub    rsi,QWORD PTR [rbx+0x8]
  40190a:	mov    rdi,rbp
  40190d:	call   401820 <__sprintf_chk@plt+0x440>
  401912:	test   r12,r12
  401915:	je     401950 <__sprintf_chk@plt+0x570>
  401917:	mov    rcx,r12
  40191a:	lea    rdx,[rip+0x2899]        # 4041ba <error@@Base+0xa8a>
  401921:	mov    esi,0x1
  401926:	mov    rdi,rbp
  401929:	xor    eax,eax
  40192b:	call   401390 <__fprintf_chk@plt>
  401930:	mov    rax,QWORD PTR [rsp+0x18]
  401935:	xor    rax,QWORD PTR fs:0x28
  40193e:	jne    401984 <__sprintf_chk@plt+0x5a4>
  401940:	add    rsp,0x28
  401944:	pop    rbx
  401945:	pop    rbp
  401946:	pop    r12
  401948:	pop    r13
  40194a:	ret    
  40194b:	nop    DWORD PTR [rax+rax*1+0x0]
  401950:	lea    rbx,[rsp+0xf]
  401955:	mov    rdx,rbx
  401958:	mov    esi,r13d
  40195b:	xor    edi,edi
  40195d:	xor    eax,eax
  40195f:	mov    ecx,0x1
  401964:	call   403170 <__sprintf_chk@plt+0x1d90>
  401969:	mov    rcx,rbx
  40196c:	lea    rdx,[rip+0x27af]        # 404122 <error@@Base+0x9f2>
  401973:	mov    esi,0x1
  401978:	mov    rdi,rbp
  40197b:	xor    eax,eax
  40197d:	call   401390 <__fprintf_chk@plt>
  401982:	jmp    401930 <__sprintf_chk@plt+0x550>
  401984:	call   401280 <__stack_chk_fail@plt>
  401989:	nop    DWORD PTR [rax+0x0]
  401990:	endbr64 
  401994:	push   r13
  401996:	xor    eax,eax
  401998:	mov    r13,rdx
  40199b:	push   r12
  40199d:	mov    r12,rcx
  4019a0:	push   rbp
  4019a1:	mov    rbp,rdi
  4019a4:	push   rbx
  4019a5:	mov    ebx,esi
  4019a7:	mov    edi,ebx
  4019a9:	sub    rsp,0x8
  4019ad:	call   402300 <__sprintf_chk@plt+0xf20>
  4019b2:	movzx  eax,al
  4019b5:	shl    rax,0x4
  4019b9:	lea    rax,[rbp+rax*1+0x88]
  4019c1:	add    QWORD PTR [rax],r13
  4019c4:	add    QWORD PTR [rax+0x8],r12
  4019c8:	shl    rbx,0x4
  4019cc:	lea    rax,[rbp+rbx*1+0x4f88]
  4019d4:	add    QWORD PTR [rbp+0x1088],r13
  4019db:	add    QWORD PTR [rbp+0x1090],r12
  4019e2:	add    QWORD PTR [rax],r13
  4019e5:	add    QWORD PTR [rax+0x8],r12
  4019e9:	add    rsp,0x8
  4019ed:	pop    rbx
  4019ee:	pop    rbp
  4019ef:	pop    r12
  4019f1:	pop    r13
  4019f3:	ret    
  4019f4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4019ff:	nop
  401a00:	endbr64 
  401a04:	push   r14
  401a06:	xor    eax,eax
  401a08:	push   r13
  401a0a:	mov    r13,rdx
  401a0d:	push   r12
  401a0f:	mov    r12,rcx
  401a12:	push   rbp
  401a13:	mov    rbp,rsi
  401a16:	push   rbx
  401a17:	lea    rbx,[rdi+0x1098]
  401a1e:	mov    rdi,rbx
  401a21:	call   402a60 <__sprintf_chk@plt+0x1680>
  401a26:	test   rax,rax
  401a29:	je     401a40 <__sprintf_chk@plt+0x660>
  401a2b:	add    QWORD PTR [rax+0x18],r13
  401a2f:	add    QWORD PTR [rax+0x20],r12
  401a33:	pop    rbx
  401a34:	pop    rbp
  401a35:	pop    r12
  401a37:	pop    r13
  401a39:	pop    r14
  401a3b:	ret    
  401a3c:	nop    DWORD PTR [rax+0x0]
  401a40:	mov    esi,0x28
  401a45:	mov    edi,0x1
  401a4a:	xor    eax,eax
  401a4c:	call   403780 <error@@Base+0x50>
  401a51:	mov    rdi,rbp
  401a54:	mov    r14,rax
  401a57:	call   4013c0 <strdup@plt>
  401a5c:	mov    QWORD PTR [r14+0x10],rax
  401a60:	mov    QWORD PTR [r14+0x18],r13
  401a64:	mov    QWORD PTR [r14+0x20],r12
  401a68:	mov    rdi,rbx
  401a6b:	mov    rsi,r14
  401a6e:	pop    rbx
  401a6f:	pop    rbp
  401a70:	pop    r12
  401a72:	pop    r13
  401a74:	xor    eax,eax
  401a76:	pop    r14
  401a78:	jmp    402af0 <__sprintf_chk@plt+0x1710>
  401a7d:	nop    DWORD PTR [rax]
  401a80:	endbr64 
  401a84:	push   r14
  401a86:	push   r13
  401a88:	mov    r13,rsi
  401a8b:	lea    rsi,[rip+0x2e7e]        # 404910 <error@@Base+0x11e0>
  401a92:	push   r12
  401a94:	mov    r12,rdi
  401a97:	mov    rdi,r13
  401a9a:	push   rbp
  401a9b:	push   rbx
  401a9c:	sub    rsp,0x30
  401aa0:	mov    rax,QWORD PTR fs:0x28
  401aa9:	mov    QWORD PTR [rsp+0x28],rax
  401aae:	xor    eax,eax
  401ab0:	call   403830 <error@@Base+0x100>
  401ab5:	mov    rdx,rax
  401ab8:	mov    esi,0x63
  401abd:	lea    rdi,[rip+0x567c]        # 407140 <error@@Base+0x3a10>
  401ac4:	mov    rbx,rax
  401ac7:	call   4012c0 <fgets@plt>
  401acc:	test   rax,rax
  401acf:	je     401e1f <__sprintf_chk@plt+0xa3f>
  401ad5:	lea    rbp,[rip+0x5664]        # 407140 <error@@Base+0x3a10>
  401adc:	mov    ecx,0x28
  401ae1:	lea    rdi,[rip+0x2720]        # 404208 <error@@Base+0xad8>
  401ae8:	mov    rsi,rbp
  401aeb:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  401aed:	seta   al
  401af0:	sbb    al,0x0
  401af2:	test   al,al
  401af4:	jne    401e1f <__sprintf_chk@plt+0xa3f>
  401afa:	mov    rdx,rbx
  401afd:	mov    esi,0x63
  401b02:	mov    rdi,rbp
  401b05:	call   4012c0 <fgets@plt>
  401b0a:	test   rax,rax
  401b0d:	je     401e1f <__sprintf_chk@plt+0xa3f>
  401b13:	mov    ecx,0x2b
  401b18:	lea    rdi,[rip+0x2719]        # 404238 <error@@Base+0xb08>
  401b1f:	mov    rsi,rbp
  401b22:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  401b24:	seta   al
  401b27:	sbb    al,0x0
  401b29:	test   al,al
  401b2b:	jne    401e1f <__sprintf_chk@plt+0xa3f>
  401b31:	mov    rsi,rsp
  401b34:	mov    rdx,r12
  401b37:	mov    rdi,rbx
  401b3a:	call   4016a0 <__sprintf_chk@plt+0x2c0>
  401b3f:	test   al,al
  401b41:	je     401e1f <__sprintf_chk@plt+0xa3f>
  401b47:	xor    eax,eax
  401b49:	lea    rdx,[r12+0x8]
  401b4e:	lea    rsi,[rsp+0x8]
  401b53:	mov    rdi,rbx
  401b56:	call   4016a0 <__sprintf_chk@plt+0x2c0>
  401b5b:	test   al,al
  401b5d:	je     401e1f <__sprintf_chk@plt+0xa3f>
  401b63:	mov    rdx,rbx
  401b66:	mov    esi,0x63
  401b6b:	mov    rdi,rbp
  401b6e:	call   4012c0 <fgets@plt>
  401b73:	test   rax,rax
  401b76:	je     401e1f <__sprintf_chk@plt+0xa3f>
  401b7c:	mov    rdx,rbx
  401b7f:	mov    esi,0x63
  401b84:	mov    rdi,rbp
  401b87:	call   4012c0 <fgets@plt>
  401b8c:	test   rax,rax
  401b8f:	je     401e1f <__sprintf_chk@plt+0xa3f>
  401b95:	lea    r14,[rsp+0x10]
  401b9a:	xor    eax,eax
  401b9c:	lea    rdx,[r12+0x10]
  401ba1:	mov    rsi,r14
  401ba4:	mov    rdi,rbx
  401ba7:	call   4016a0 <__sprintf_chk@plt+0x2c0>
  401bac:	test   al,al
  401bae:	je     401e1f <__sprintf_chk@plt+0xa3f>
  401bb4:	xor    eax,eax
  401bb6:	lea    rdx,[r12+0x18]
  401bbb:	mov    rsi,r14
  401bbe:	mov    rdi,rbx
  401bc1:	call   4016a0 <__sprintf_chk@plt+0x2c0>
  401bc6:	test   al,al
  401bc8:	je     401e1f <__sprintf_chk@plt+0xa3f>
  401bce:	xor    eax,eax
  401bd0:	lea    rdx,[r12+0x20]
  401bd5:	mov    rsi,r14
  401bd8:	mov    rdi,rbx
  401bdb:	call   4016a0 <__sprintf_chk@plt+0x2c0>
  401be0:	test   al,al
  401be2:	je     401e1f <__sprintf_chk@plt+0xa3f>
  401be8:	mov    rdx,rbx
  401beb:	mov    esi,0x63
  401bf0:	mov    rdi,rbp
  401bf3:	call   4012c0 <fgets@plt>
  401bf8:	test   rax,rax
  401bfb:	je     401e1f <__sprintf_chk@plt+0xa3f>
  401c01:	mov    rdx,rbx
  401c04:	mov    esi,0x63
  401c09:	mov    rdi,rbp
  401c0c:	call   4012c0 <fgets@plt>
  401c11:	test   rax,rax
  401c14:	je     401e1f <__sprintf_chk@plt+0xa3f>
  401c1a:	mov    rdx,rbx
  401c1d:	mov    esi,0x63
  401c22:	mov    rdi,rbp
  401c25:	call   4012c0 <fgets@plt>
  401c2a:	test   rax,rax
  401c2d:	je     401e1f <__sprintf_chk@plt+0xa3f>
  401c33:	mov    rdx,rbx
  401c36:	mov    esi,0x63
  401c3b:	mov    rdi,rbp
  401c3e:	call   4012c0 <fgets@plt>
  401c43:	test   rax,rax
  401c46:	je     401e1f <__sprintf_chk@plt+0xa3f>
  401c4c:	xor    eax,eax
  401c4e:	lea    rsi,[r12+0x28]
  401c53:	mov    rdi,rbx
  401c56:	call   401710 <__sprintf_chk@plt+0x330>
  401c5b:	test   al,al
  401c5d:	je     401e1f <__sprintf_chk@plt+0xa3f>
  401c63:	xor    eax,eax
  401c65:	lea    rsi,[r12+0x48]
  401c6a:	mov    rdi,rbx
  401c6d:	call   401710 <__sprintf_chk@plt+0x330>
  401c72:	test   al,al
  401c74:	je     401e1f <__sprintf_chk@plt+0xa3f>
  401c7a:	xor    eax,eax
  401c7c:	lea    rsi,[r12+0x68]
  401c81:	mov    rdi,rbx
  401c84:	call   401710 <__sprintf_chk@plt+0x330>
  401c89:	test   al,al
  401c8b:	je     401e1f <__sprintf_chk@plt+0xa3f>
  401c91:	mov    rdx,rbx
  401c94:	mov    esi,0x63
  401c99:	mov    rdi,rbp
  401c9c:	call   4012c0 <fgets@plt>
  401ca1:	test   rax,rax
  401ca4:	je     401e1f <__sprintf_chk@plt+0xa3f>
  401caa:	mov    r13,rbp
  401cad:	jmp    401cb6 <__sprintf_chk@plt+0x8d6>
  401caf:	nop
  401cb0:	cmp    BYTE PTR [rbp+0x0],0xa
  401cb4:	je     401ccb <__sprintf_chk@plt+0x8eb>
  401cb6:	mov    rdx,rbx
  401cb9:	mov    esi,0x63
  401cbe:	mov    rdi,r13
  401cc1:	call   4012c0 <fgets@plt>
  401cc6:	test   rax,rax
  401cc9:	jne    401cb0 <__sprintf_chk@plt+0x8d0>
  401ccb:	cmp    QWORD PTR [rsp+0x8],0x0
  401cd1:	jg     401d10 <__sprintf_chk@plt+0x930>
  401cd3:	cmp    QWORD PTR [rsp],0x0
  401cd8:	jg     401d76 <__sprintf_chk@plt+0x996>
  401cde:	xor    eax,eax
  401ce0:	mov    rdi,rbx
  401ce3:	call   4035a0 <__sprintf_chk@plt+0x21c0>
  401ce8:	mov    rax,QWORD PTR [rsp+0x28]
  401ced:	xor    rax,QWORD PTR fs:0x28
  401cf6:	jne    401e3e <__sprintf_chk@plt+0xa5e>
  401cfc:	add    rsp,0x30
  401d00:	pop    rbx
  401d01:	pop    rbp
  401d02:	pop    r12
  401d04:	pop    r13
  401d06:	pop    r14
  401d08:	ret    
  401d09:	nop    DWORD PTR [rax+0x0]
  401d10:	mov    rdx,rbx
  401d13:	mov    esi,0x63
  401d18:	lea    rdi,[rip+0x5421]        # 407140 <error@@Base+0x3a10>
  401d1f:	call   4012c0 <fgets@plt>
  401d24:	lea    rbp,[rsp+0x18]
  401d29:	lea    r13,[rip+0x5424]        # 407154 <error@@Base+0x3a24>
  401d30:	test   rax,rax
  401d33:	jne    401d57 <__sprintf_chk@plt+0x977>
  401d35:	jmp    401cd3 <__sprintf_chk@plt+0x8f3>
  401d37:	nop    WORD PTR [rax+rax*1+0x0]
  401d40:	mov    rcx,QWORD PTR [rsp+0x18]
  401d45:	mov    rdx,QWORD PTR [rsp+0x10]
  401d4a:	mov    rsi,r13
  401d4d:	mov    rdi,r12
  401d50:	xor    eax,eax
  401d52:	call   401a00 <__sprintf_chk@plt+0x620>
  401d57:	xor    eax,eax
  401d59:	mov    rdx,rbp
  401d5c:	mov    rsi,r14
  401d5f:	mov    rdi,rbx
  401d62:	call   4017c0 <__sprintf_chk@plt+0x3e0>
  401d67:	test   al,al
  401d69:	jne    401d40 <__sprintf_chk@plt+0x960>
  401d6b:	cmp    QWORD PTR [rsp],0x0
  401d70:	jle    401cde <__sprintf_chk@plt+0x8fe>
  401d76:	mov    rdx,rbx
  401d79:	mov    esi,0x63
  401d7e:	lea    rdi,[rip+0x53bb]        # 407140 <error@@Base+0x3a10>
  401d85:	call   4012c0 <fgets@plt>
  401d8a:	lea    rbp,[rsp+0x18]
  401d8f:	lea    r13,[rsp+0x20]
  401d94:	test   rax,rax
  401d97:	jne    401dc6 <__sprintf_chk@plt+0x9e6>
  401d99:	jmp    401cde <__sprintf_chk@plt+0x8fe>
  401d9e:	xchg   ax,ax
  401da0:	cmp    al,0x5c
  401da2:	jne    401e00 <__sprintf_chk@plt+0xa20>
  401da4:	mov    QWORD PTR [rsp+0x20],0xa
  401dad:	mov    esi,0xa
  401db2:	mov    rcx,QWORD PTR [rsp+0x18]
  401db7:	mov    rdx,QWORD PTR [rsp+0x10]
  401dbc:	mov    rdi,r12
  401dbf:	xor    eax,eax
  401dc1:	call   401990 <__sprintf_chk@plt+0x5b0>
  401dc6:	xor    eax,eax
  401dc8:	mov    rdx,rbp
  401dcb:	mov    rsi,r14
  401dce:	mov    rdi,rbx
  401dd1:	call   4017c0 <__sprintf_chk@plt+0x3e0>
  401dd6:	test   al,al
  401dd8:	je     401cde <__sprintf_chk@plt+0x8fe>
  401dde:	movzx  eax,BYTE PTR [rip+0x537a]        # 40715f <error@@Base+0x3a2f>
  401de5:	cmp    al,0x7d
  401de7:	jne    401da0 <__sprintf_chk@plt+0x9c0>
  401de9:	movsx  rsi,BYTE PTR [rip+0x536d]        # 40715e <error@@Base+0x3a2e>
  401df1:	mov    QWORD PTR [rsp+0x20],rsi
  401df6:	jmp    401db2 <__sprintf_chk@plt+0x9d2>
  401df8:	nop    DWORD PTR [rax+rax*1+0x0]
  401e00:	lea    rsi,[rip+0x232a]        # 404131 <error@@Base+0xa01>
  401e07:	mov    rdx,r13
  401e0a:	lea    rdi,[rip+0x534e]        # 40715f <error@@Base+0x3a2f>
  401e11:	xor    eax,eax
  401e13:	call   401330 <__isoc99_sscanf@plt>
  401e18:	mov    rsi,QWORD PTR [rsp+0x20]
  401e1d:	jmp    401db2 <__sprintf_chk@plt+0x9d2>
  401e1f:	test   r13,r13
  401e22:	lea    rax,[rip+0x2302]        # 40412b <error@@Base+0x9fb>
  401e29:	cmove  r13,rax
  401e2d:	lea    rdi,[rip+0x2301]        # 404135 <error@@Base+0xa05>
  401e34:	mov    rsi,r13
  401e37:	xor    eax,eax
  401e39:	call   4037e0 <error@@Base+0xb0>
  401e3e:	call   401280 <__stack_chk_fail@plt>
  401e43:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  401e4e:	xchg   ax,ax
  401e50:	endbr64 
  401e54:	push   r13
  401e56:	xor    eax,eax
  401e58:	push   r12
  401e5a:	mov    r12,rdi
  401e5d:	mov    rdi,rsi
  401e60:	push   rbp
  401e61:	lea    rsi,[rip+0x2660]        # 4044c8 <error@@Base+0xd98>
  401e68:	lea    rbp,[r12+0x88]
  401e70:	push   rbx
  401e71:	sub    rsp,0x8
  401e75:	call   403830 <error@@Base+0x100>
  401e7a:	mov    r13,rax
  401e7d:	mov    rdi,rax
  401e80:	lea    r8,[rip+0x23b1]        # 404238 <error@@Base+0xb08>
  401e87:	lea    rcx,[rip+0x237a]        # 404208 <error@@Base+0xad8>
  401e8e:	lea    rdx,[rip+0x22b2]        # 404147 <error@@Base+0xa17>
  401e95:	mov    esi,0x1
  401e9a:	xor    eax,eax
  401e9c:	call   401390 <__fprintf_chk@plt>
  401ea1:	mov    rcx,QWORD PTR [r12]
  401ea5:	lea    r8,[rip+0x250e]        # 4043ba <error@@Base+0xc8a>
  401eac:	lea    rdx,[rip+0x2303]        # 4041b6 <error@@Base+0xa86>
  401eb3:	mov    esi,0x1
  401eb8:	mov    rdi,r13
  401ebb:	xor    eax,eax
  401ebd:	call   401390 <__fprintf_chk@plt>
  401ec2:	mov    rcx,QWORD PTR [r12+0x8]
  401ec7:	lea    r8,[rip+0x227e]        # 40414c <error@@Base+0xa1c>
  401ece:	lea    rdx,[rip+0x22e1]        # 4041b6 <error@@Base+0xa86>
  401ed5:	mov    esi,0x1
  401eda:	mov    rdi,r13
  401edd:	xor    eax,eax
  401edf:	call   401390 <__fprintf_chk@plt>
  401ee4:	mov    rdx,QWORD PTR [r12]
  401ee8:	xor    eax,eax
  401eea:	mov    rsi,rdx
  401eed:	sub    rsi,QWORD PTR [r12+0x8]
  401ef2:	mov    rdi,r13
  401ef5:	call   401820 <__sprintf_chk@plt+0x440>
  401efa:	lea    rdx,[rip+0x2252]        # 404153 <error@@Base+0xa23>
  401f01:	mov    esi,0x1
  401f06:	mov    rdi,r13
  401f09:	xor    eax,eax
  401f0b:	call   401390 <__fprintf_chk@plt>
  401f10:	mov    rcx,QWORD PTR [r12+0x10]
  401f15:	lea    r8,[rip+0x2246]        # 404162 <error@@Base+0xa32>
  401f1c:	lea    rdx,[rip+0x2293]        # 4041b6 <error@@Base+0xa86>
  401f23:	mov    esi,0x1
  401f28:	mov    rdi,r13
  401f2b:	xor    eax,eax
  401f2d:	call   401390 <__fprintf_chk@plt>
  401f32:	mov    rcx,QWORD PTR [r12+0x18]
  401f37:	lea    r8,[rip+0x2236]        # 404174 <error@@Base+0xa44>
  401f3e:	lea    rdx,[rip+0x2271]        # 4041b6 <error@@Base+0xa86>
  401f45:	mov    esi,0x1
  401f4a:	mov    rdi,r13
  401f4d:	xor    eax,eax
  401f4f:	call   401390 <__fprintf_chk@plt>
  401f54:	mov    rcx,QWORD PTR [r12+0x20]
  401f59:	lea    r8,[rip+0x2224]        # 404184 <error@@Base+0xa54>
  401f60:	lea    rdx,[rip+0x224f]        # 4041b6 <error@@Base+0xa86>
  401f67:	mov    esi,0x1
  401f6c:	mov    rdi,r13
  401f6f:	xor    eax,eax
  401f71:	call   401390 <__fprintf_chk@plt>
  401f76:	mov    rsi,QWORD PTR [r12+0x18]
  401f7b:	mov    rdx,QWORD PTR [r12]
  401f7f:	add    rsi,QWORD PTR [r12+0x10]
  401f84:	xor    eax,eax
  401f86:	mov    rdi,r13
  401f89:	call   401820 <__sprintf_chk@plt+0x440>
  401f8e:	lea    rdx,[rip+0x21fb]        # 404190 <error@@Base+0xa60>
  401f95:	mov    esi,0x1
  401f9a:	mov    rdi,r13
  401f9d:	xor    eax,eax
  401f9f:	call   401390 <__fprintf_chk@plt>
  401fa4:	mov    rdx,QWORD PTR [r12]
  401fa8:	xor    eax,eax
  401faa:	mov    rsi,rdx
  401fad:	sub    rsi,QWORD PTR [r12+0x60]
  401fb2:	mov    rdi,r13
  401fb5:	call   401820 <__sprintf_chk@plt+0x440>
  401fba:	lea    rdx,[rip+0x22a7]        # 404268 <error@@Base+0xb38>
  401fc1:	mov    esi,0x1
  401fc6:	mov    rdi,r13
  401fc9:	xor    eax,eax
  401fcb:	call   401390 <__fprintf_chk@plt>
  401fd0:	lea    rdx,[rip+0x22b1]        # 404288 <error@@Base+0xb58>
  401fd7:	mov    esi,0x1
  401fdc:	mov    rdi,r13
  401fdf:	xor    eax,eax
  401fe1:	call   401390 <__fprintf_chk@plt>
  401fe6:	lea    rax,[rip+0x21d4]        # 4041c1 <error@@Base+0xa91>
  401fed:	mov    rcx,QWORD PTR [r12+0x28]
  401ff2:	push   rax
  401ff3:	lea    rdx,[rip+0x21ad]        # 4041a7 <error@@Base+0xa77>
  401ffa:	xor    eax,eax
  401ffc:	push   QWORD PTR [r12+0x40]
  402001:	mov    esi,0x1
  402006:	mov    rdi,r13
  402009:	mov    r9,QWORD PTR [r12+0x38]
  40200e:	mov    r8,QWORD PTR [r12+0x30]
  402013:	xor    ebx,ebx
  402015:	call   401390 <__fprintf_chk@plt>
  40201a:	lea    rax,[rip+0x21a7]        # 4041c8 <error@@Base+0xa98>
  402021:	mov    rcx,QWORD PTR [r12+0x48]
  402026:	push   rax
  402027:	lea    rdx,[rip+0x2179]        # 4041a7 <error@@Base+0xa77>
  40202e:	mov    esi,0x1
  402033:	push   QWORD PTR [r12+0x60]
  402038:	mov    rdi,r13
  40203b:	xor    eax,eax
  40203d:	mov    r9,QWORD PTR [r12+0x58]
  402042:	mov    r8,QWORD PTR [r12+0x50]
  402047:	call   401390 <__fprintf_chk@plt>
  40204c:	add    rsp,0x20
  402050:	lea    rax,[rip+0x217a]        # 4041d1 <error@@Base+0xaa1>
  402057:	mov    rcx,QWORD PTR [r12+0x68]
  40205c:	push   rax
  40205d:	lea    rdx,[rip+0x2143]        # 4041a7 <error@@Base+0xa77>
  402064:	mov    esi,0x1
  402069:	push   QWORD PTR [r12+0x80]
  402071:	mov    rdi,r13
  402074:	xor    eax,eax
  402076:	mov    r9,QWORD PTR [r12+0x78]
  40207b:	mov    r8,QWORD PTR [r12+0x70]
  402080:	call   401390 <__fprintf_chk@plt>
  402085:	lea    rdx,[rip+0x214b]        # 4041d7 <error@@Base+0xaa7>
  40208c:	mov    esi,0x1
  402091:	mov    rdi,r13
  402094:	xor    eax,eax
  402096:	call   401390 <__fprintf_chk@plt>
  40209b:	pop    rax
  40209c:	pop    rdx
  40209d:	nop    DWORD PTR [rax]
  4020a0:	cmp    QWORD PTR [rbp+0x0],0x0
  4020a5:	jle    4020c3 <__sprintf_chk@plt+0xce3>
  4020a7:	mov    rdi,rbx
  4020aa:	xor    eax,eax
  4020ac:	call   402350 <__sprintf_chk@plt+0xf70>
  4020b1:	mov    rdx,rax
  4020b4:	xor    ecx,ecx
  4020b6:	mov    rsi,rbp
  4020b9:	mov    rdi,r13
  4020bc:	xor    eax,eax
  4020be:	call   4018c0 <__sprintf_chk@plt+0x4e0>
  4020c3:	inc    rbx
  4020c6:	add    rbp,0x10
  4020ca:	cmp    rbx,0x100
  4020d1:	jne    4020a0 <__sprintf_chk@plt+0xcc0>
  4020d3:	xor    ecx,ecx
  4020d5:	xor    eax,eax
  4020d7:	lea    rsi,[r12+0x1088]
  4020df:	lea    rdx,[rip+0x20eb]        # 4041d1 <error@@Base+0xaa1>
  4020e6:	mov    rdi,r13
  4020e9:	call   4018c0 <__sprintf_chk@plt+0x4e0>
  4020ee:	cmp    QWORD PTR [r12+0x8],0x0
  4020f4:	jg     402115 <__sprintf_chk@plt+0xd35>
  4020f6:	cmp    QWORD PTR [r12],0x0
  4020fb:	jg     4021b2 <__sprintf_chk@plt+0xdd2>
  402101:	add    rsp,0x8
  402105:	pop    rbx
  402106:	pop    rbp
  402107:	pop    r12
  402109:	mov    rdi,r13
  40210c:	xor    eax,eax
  40210e:	pop    r13
  402110:	jmp    4035a0 <__sprintf_chk@plt+0x21c0>
  402115:	xor    eax,eax
  402117:	lea    rdi,[r12+0x1098]
  40211f:	call   402bf0 <__sprintf_chk@plt+0x1810>
  402124:	mov    rsi,QWORD PTR [r12+0x4f78]
  40212c:	mov    rdi,QWORD PTR [r12+0x4f80]
  402134:	xor    eax,eax
  402136:	lea    rdx,[rip+0xfffffffffffff743]        # 401880 <__sprintf_chk@plt+0x4a0>
  40213d:	call   4029e0 <__sprintf_chk@plt+0x1600>
  402142:	xor    eax,eax
  402144:	lea    rdx,[rip+0x2165]        # 4042b0 <error@@Base+0xb80>
  40214b:	mov    esi,0x1
  402150:	mov    rdi,r13
  402153:	call   401390 <__fprintf_chk@plt>
  402158:	cmp    QWORD PTR [r12+0x4f80],0x0
  402161:	jle    4020f6 <__sprintf_chk@plt+0xd16>
  402163:	xor    ebx,ebx
  402165:	lea    rbp,[rip+0x2089]        # 4041f5 <error@@Base+0xac5>
  40216c:	nop    DWORD PTR [rax+0x0]
  402170:	mov    rax,QWORD PTR [r12+0x4f78]
  402178:	mov    rdx,rbp
  40217b:	mov    rax,QWORD PTR [rax+rbx*8]
  40217f:	mov    esi,0x1
  402184:	mov    rcx,QWORD PTR [rax+0x18]
  402188:	mov    r9,QWORD PTR [rax+0x10]
  40218c:	mov    r8,QWORD PTR [rax+0x20]
  402190:	mov    rdi,r13
  402193:	xor    eax,eax
  402195:	inc    rbx
  402198:	call   401390 <__fprintf_chk@plt>
  40219d:	cmp    QWORD PTR [r12+0x4f80],rbx
  4021a5:	jg     402170 <__sprintf_chk@plt+0xd90>
  4021a7:	cmp    QWORD PTR [r12],0x0
  4021ac:	jle    402101 <__sprintf_chk@plt+0xd21>
  4021b2:	lea    rdx,[rip+0x201e]        # 4041d7 <error@@Base+0xaa7>
  4021b9:	mov    esi,0x1
  4021be:	mov    rdi,r13
  4021c1:	xor    eax,eax
  4021c3:	call   401390 <__fprintf_chk@plt>
  4021c8:	add    r12,0x4f88
  4021cf:	xor    ebp,ebp
  4021d1:	nop    DWORD PTR [rax+0x0]
  4021d8:	cmp    QWORD PTR [r12],0x0
  4021dd:	jle    4021f1 <__sprintf_chk@plt+0xe11>
  4021df:	mov    rcx,rbp
  4021e2:	xor    edx,edx
  4021e4:	mov    rsi,r12
  4021e7:	mov    rdi,r13
  4021ea:	xor    eax,eax
  4021ec:	call   4018c0 <__sprintf_chk@plt+0x4e0>
  4021f1:	inc    rbp
  4021f4:	add    r12,0x10
  4021f8:	cmp    rbp,0x10ffff
  4021ff:	jne    4021d8 <__sprintf_chk@plt+0xdf8>
  402201:	jmp    402101 <__sprintf_chk@plt+0xd21>
  402206:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402210:	push   r15
  402212:	lea    r15,[rip+0x114fa7]        # 5171c0 <error@@Base+0x113a90>
  402219:	push   r14
  40221b:	push   r13
  40221d:	push   r12
  40221f:	lea    r12,[rip+0x45fa]        # 406820 <error@@Base+0x30f0>
  402226:	push   rbp
  402227:	push   rbx
  402228:	sub    rsp,0x8
  40222c:	nop    DWORD PTR [rax+0x0]
  402230:	movsx  rbx,WORD PTR [rip+0x115788]        # 5179c0 <error@@Base+0x114290>
  402238:	mov    r13,rbx
  40223b:	test   rbx,rbx
  40223e:	jle    4022b9 <__sprintf_chk@plt+0xed9>
  402240:	mov    rbp,QWORD PTR [r12+0x8]
  402245:	xor    r14d,r14d
  402248:	jmp    402258 <__sprintf_chk@plt+0xe78>
  40224a:	nop    WORD PTR [rax+rax*1+0x0]
  402250:	inc    r14
  402253:	cmp    rbx,r14
  402256:	je     4022c8 <__sprintf_chk@plt+0xee8>
  402258:	mov    rsi,QWORD PTR [r15+r14*8]
  40225c:	mov    rdi,rbp
  40225f:	call   4012f0 <strcmp@plt>
  402264:	test   eax,eax
  402266:	jne    402250 <__sprintf_chk@plt+0xe70>
  402268:	mov    eax,DWORD PTR [r12]
  40226c:	mov    esi,DWORD PTR [r12+0x4]
  402271:	cmp    eax,esi
  402273:	ja     40229a <__sprintf_chk@plt+0xeba>
  402275:	lea    rcx,[rip+0x4f44]        # 4071c0 <error@@Base+0x3a90>
  40227c:	add    rax,rcx
  40227f:	inc    rcx
  402282:	mov    edx,r14d
  402285:	add    rsi,rcx
  402288:	nop    DWORD PTR [rax+rax*1+0x0]
  402290:	mov    BYTE PTR [rax],dl
  402292:	inc    rax
  402295:	cmp    rsi,rax
  402298:	jne    402290 <__sprintf_chk@plt+0xeb0>
  40229a:	add    r12,0x10
  40229e:	lea    rax,[rip+0x4b2b]        # 406dd0 <error@@Base+0x36a0>
  4022a5:	cmp    r12,rax
  4022a8:	jne    402230 <__sprintf_chk@plt+0xe50>
  4022aa:	add    rsp,0x8
  4022ae:	pop    rbx
  4022af:	pop    rbp
  4022b0:	pop    r12
  4022b2:	pop    r13
  4022b4:	pop    r14
  4022b6:	pop    r15
  4022b8:	ret    
  4022b9:	mov    r14d,0x0
  4022bf:	jne    402268 <__sprintf_chk@plt+0xe88>
  4022c1:	nop    DWORD PTR [rax+0x0]
  4022c8:	cmp    r13w,0x100
  4022ce:	je     4022e6 <__sprintf_chk@plt+0xf06>
  4022d0:	mov    rax,QWORD PTR [r12+0x8]
  4022d5:	inc    r13d
  4022d8:	mov    WORD PTR [rip+0x1156e0],r13w        # 5179c0 <error@@Base+0x114290>
  4022e0:	mov    QWORD PTR [r15+r14*8],rax
  4022e4:	jmp    402268 <__sprintf_chk@plt+0xe88>
  4022e6:	lea    rdi,[rip+0x1feb]        # 4042d8 <error@@Base+0xba8>
  4022ed:	xor    eax,eax
  4022ef:	call   403730 <error@@Base>
  4022f4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4022ff:	nop
  402300:	endbr64 
  402304:	cmp    WORD PTR [rip+0x1156b4],0x0        # 5179c0 <error@@Base+0x114290>
  40230c:	je     402320 <__sprintf_chk@plt+0xf40>
  40230e:	mov    edi,edi
  402310:	lea    rax,[rip+0x4ea9]        # 4071c0 <error@@Base+0x3a90>
  402317:	movzx  eax,BYTE PTR [rax+rdi*1]
  40231b:	ret    
  40231c:	nop    DWORD PTR [rax+0x0]
  402320:	sub    rsp,0x18
  402324:	xor    eax,eax
  402326:	mov    DWORD PTR [rsp+0xc],edi
  40232a:	call   402210 <__sprintf_chk@plt+0xe30>
  40232f:	mov    edi,DWORD PTR [rsp+0xc]
  402333:	lea    rax,[rip+0x4e86]        # 4071c0 <error@@Base+0x3a90>
  40233a:	mov    edi,edi
  40233c:	movzx  eax,BYTE PTR [rax+rdi*1]
  402340:	add    rsp,0x18
  402344:	ret    
  402345:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402350:	endbr64 
  402354:	sub    rsp,0x18
  402358:	movsx  eax,WORD PTR [rip+0x115661]        # 5179c0 <error@@Base+0x114290>
  40235f:	test   ax,ax
  402362:	je     402380 <__sprintf_chk@plt+0xfa0>
  402364:	movzx  edi,dil
  402368:	cmp    edi,eax
  40236a:	jge    402396 <__sprintf_chk@plt+0xfb6>
  40236c:	lea    rax,[rip+0x114e4d]        # 5171c0 <error@@Base+0x113a90>
  402373:	mov    rax,QWORD PTR [rax+rdi*8]
  402377:	add    rsp,0x18
  40237b:	ret    
  40237c:	nop    DWORD PTR [rax+0x0]
  402380:	mov    DWORD PTR [rsp+0xc],edi
  402384:	call   402210 <__sprintf_chk@plt+0xe30>
  402389:	movsx  eax,WORD PTR [rip+0x115630]        # 5179c0 <error@@Base+0x114290>
  402390:	mov    edi,DWORD PTR [rsp+0xc]
  402394:	jmp    402364 <__sprintf_chk@plt+0xf84>
  402396:	lea    rdi,[rip+0x1f56]        # 4042f3 <error@@Base+0xbc3>
  40239d:	xor    eax,eax
  40239f:	call   403730 <error@@Base>
  4023a4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4023ae:	xchg   ax,ax
  4023b0:	endbr64 
  4023b4:	push   r12
  4023b6:	xor    eax,eax
  4023b8:	mov    r12,rsi
  4023bb:	push   rbp
  4023bc:	mov    esi,0x30
  4023c1:	mov    rbp,rdx
  4023c4:	push   rbx
  4023c5:	mov    rbx,rdi
  4023c8:	mov    edi,0x1
  4023cd:	call   403780 <error@@Base+0x50>
  4023d2:	mov    QWORD PTR [rax+0x10],r12
  4023d6:	mov    QWORD PTR [rax+0x18],rbp
  4023da:	mov    rdi,rbx
  4023dd:	add    QWORD PTR [rbx+0x30],r12
  4023e1:	add    QWORD PTR [rbx+0x38],rbp
  4023e5:	pop    rbx
  4023e6:	pop    rbp
  4023e7:	mov    rsi,rax
  4023ea:	pop    r12
  4023ec:	xor    eax,eax
  4023ee:	jmp    402670 <__sprintf_chk@plt+0x1290>
  4023f3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4023fe:	xchg   ax,ax
  402400:	endbr64 
  402404:	push   rbx
  402405:	sub    rsp,0x20
  402409:	mov    r9,QWORD PTR [rdi]
  40240c:	test   r9,r9
  40240f:	je     4025d8 <__sprintf_chk@plt+0x11f8>
  402415:	mov    rax,r9
  402418:	xor    ecx,ecx
  40241a:	nop    WORD PTR [rax+rax*1+0x0]
  402420:	xor    r8d,r8d
  402423:	cmp    QWORD PTR [rax+0x10],0x0
  402428:	mov    rax,QWORD PTR [rax+0x8]
  40242c:	setg   r8b
  402430:	add    rcx,r8
  402433:	test   rax,rax
  402436:	jne    402420 <__sprintf_chk@plt+0x1040>
  402438:	cmp    rcx,0x1
  40243c:	jle    4025d8 <__sprintf_chk@plt+0x11f8>
  402442:	mov    r10,QWORD PTR [rdi+0x30]
  402446:	mov    r11,QWORD PTR [rdi+0x38]
  40244a:	mov    rax,r10
  40244d:	sub    rax,r11
  402450:	vxorpd xmm2,xmm2,xmm2
  402454:	vcvtsi2sd xmm2,xmm2,rax
  402459:	vmovsd xmm5,QWORD PTR [rip+0x1c8f]        # 4040f0 <error@@Base+0x9c0>
  402461:	vxorpd xmm3,xmm3,xmm3
  402465:	vcvtsi2sd xmm3,xmm3,r10
  40246a:	vmulsd xmm2,xmm2,xmm5
  40246e:	mov    rcx,QWORD PTR [rdi+0x18]
  402472:	vxorpd xmm7,xmm7,xmm7
  402476:	vcvtsi2sd xmm7,xmm7,rcx
  40247b:	vxorpd xmm8,xmm8,xmm8
  402480:	vdivsd xmm2,xmm2,xmm3
  402484:	dec    rcx
  402487:	vcvtsi2sd xmm8,xmm8,rcx
  40248c:	vxorpd xmm6,xmm6,xmm6
  402490:	mov    rcx,r9
  402493:	vxorpd xmm0,xmm0,xmm0
  402497:	vmulsd xmm3,xmm7,xmm2
  40249b:	vmovsd QWORD PTR [rdi+0x40],xmm2
  4024a0:	mov    r8,r10
  4024a3:	sub    r8,QWORD PTR [rcx+0x10]
  4024a7:	mov    rax,r11
  4024aa:	sub    rax,QWORD PTR [rcx+0x18]
  4024ae:	mov    rbx,r8
  4024b1:	sub    rbx,rax
  4024b4:	vxorpd xmm1,xmm1,xmm1
  4024b8:	vcvtsi2sd xmm1,xmm1,rbx
  4024bd:	vxorpd xmm2,xmm2,xmm2
  4024c1:	vcvtsi2sd xmm2,xmm2,r8
  4024c6:	vmulsd xmm1,xmm1,xmm5
  4024ca:	vdivsd xmm1,xmm1,xmm2
  4024ce:	vmulsd xmm4,xmm1,xmm8
  4024d3:	vmovsd QWORD PTR [rcx+0x20],xmm1
  4024d8:	vaddsd xmm0,xmm0,xmm1
  4024dc:	vsubsd xmm4,xmm3,xmm4
  4024e0:	vmovsd QWORD PTR [rcx+0x28],xmm4
  4024e5:	mov    rcx,QWORD PTR [rcx+0x8]
  4024e9:	test   rcx,rcx
  4024ec:	jne    4024a0 <__sprintf_chk@plt+0x10c0>
  4024ee:	vmulsd xmm2,xmm0,xmm8
  4024f3:	vxorpd xmm0,xmm0,xmm0
  4024f7:	vdivsd xmm2,xmm2,xmm7
  4024fb:	vsubsd xmm2,xmm3,xmm2
  4024ff:	vmovsd QWORD PTR [rdi+0x48],xmm2
  402504:	nop    DWORD PTR [rax+0x0]
  402508:	vmovsd xmm1,QWORD PTR [r9+0x28]
  40250e:	mov    r9,QWORD PTR [r9+0x8]
  402512:	vsubsd xmm1,xmm1,xmm2
  402516:	vmulsd xmm1,xmm1,xmm1
  40251a:	vaddsd xmm0,xmm0,xmm1
  40251e:	test   r9,r9
  402521:	jne    402508 <__sprintf_chk@plt+0x1128>
  402523:	vdivsd xmm0,xmm0,xmm8
  402528:	vdivsd xmm0,xmm0,xmm7
  40252c:	vucomisd xmm6,xmm0
  402530:	vsqrtsd xmm1,xmm1,xmm0
  402534:	ja     402591 <__sprintf_chk@plt+0x11b1>
  402536:	vmulsd xmm0,xmm1,QWORD PTR [rip+0x239a]        # 4048d8 <error@@Base+0x11a8>
  40253e:	vsubsd xmm2,xmm2,xmm0
  402542:	vcomisd xmm2,xmm5
  402546:	ja     402570 <__sprintf_chk@plt+0x1190>
  402548:	vmaxsd xmm2,xmm6,xmm2
  40254c:	vmovsd QWORD PTR [rsi],xmm2
  402550:	vaddsd xmm0,xmm0,QWORD PTR [rdi+0x48]
  402555:	vcomisd xmm0,xmm5
  402559:	ja     402583 <__sprintf_chk@plt+0x11a3>
  40255b:	vmaxsd xmm0,xmm6,xmm0
  40255f:	vmovsd QWORD PTR [rdx],xmm0
  402563:	add    rsp,0x20
  402567:	pop    rbx
  402568:	ret    
  402569:	nop    DWORD PTR [rax+0x0]
  402570:	vmovapd xmm2,xmm5
  402574:	vmovsd QWORD PTR [rsi],xmm2
  402578:	vaddsd xmm0,xmm0,QWORD PTR [rdi+0x48]
  40257d:	vcomisd xmm0,xmm5
  402581:	jbe    40255b <__sprintf_chk@plt+0x117b>
  402583:	vmovapd xmm0,xmm5
  402587:	vmovsd QWORD PTR [rdx],xmm0
  40258b:	add    rsp,0x20
  40258f:	pop    rbx
  402590:	ret    
  402591:	mov    QWORD PTR [rsp+0x18],rdx
  402596:	mov    QWORD PTR [rsp+0x10],rsi
  40259b:	mov    QWORD PTR [rsp+0x8],rdi
  4025a0:	vmovsd QWORD PTR [rsp],xmm1
  4025a5:	call   4013b0 <sqrt@plt>
  4025aa:	mov    rdi,QWORD PTR [rsp+0x8]
  4025af:	mov    rax,QWORD PTR [rip+0x1b3a]        # 4040f0 <error@@Base+0x9c0>
  4025b6:	vmovsd xmm2,QWORD PTR [rdi+0x48]
  4025bb:	vmovq  xmm5,rax
  4025c0:	vxorpd xmm6,xmm6,xmm6
  4025c4:	mov    rdx,QWORD PTR [rsp+0x18]
  4025c9:	mov    rsi,QWORD PTR [rsp+0x10]
  4025ce:	vmovsd xmm1,QWORD PTR [rsp]
  4025d3:	jmp    402536 <__sprintf_chk@plt+0x1156>
  4025d8:	lea    rdi,[rip+0x22e1]        # 4048c0 <error@@Base+0x1190>
  4025df:	xor    eax,eax
  4025e1:	call   403730 <error@@Base>
  4025e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4025f0:	endbr64 
  4025f4:	mov    QWORD PTR [rdi+0x8],0x0
  4025fc:	mov    QWORD PTR [rdi],0x0
  402603:	mov    QWORD PTR [rdi+0x10],0x0
  40260b:	mov    QWORD PTR [rdi+0x18],0x0
  402613:	ret    
  402614:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40261f:	nop
  402620:	endbr64 
  402624:	push   rbx
  402625:	mov    rbx,rdi
  402628:	mov    rax,QWORD PTR [rdi]
  40262b:	mov    QWORD PTR [rsi],0x0
  402632:	mov    QWORD PTR [rsi+0x8],rax
  402636:	mov    QWORD PTR [rdi],rsi
  402639:	test   rax,rax
  40263c:	je     402660 <__sprintf_chk@plt+0x1280>
  40263e:	mov    QWORD PTR [rax],rsi
  402641:	mov    rdi,QWORD PTR [rbx+0x10]
  402645:	test   rdi,rdi
  402648:	je     402657 <__sprintf_chk@plt+0x1277>
  40264a:	call   401210 <free@plt>
  40264f:	mov    QWORD PTR [rbx+0x10],0x0
  402657:	inc    QWORD PTR [rbx+0x18]
  40265b:	pop    rbx
  40265c:	ret    
  40265d:	nop    DWORD PTR [rax]
  402660:	mov    QWORD PTR [rdi+0x8],rsi
  402664:	jmp    402641 <__sprintf_chk@plt+0x1261>
  402666:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402670:	endbr64 
  402674:	push   rbx
  402675:	mov    rbx,rdi
  402678:	mov    rax,QWORD PTR [rdi+0x8]
  40267c:	mov    QWORD PTR [rsi+0x8],0x0
  402684:	mov    QWORD PTR [rsi],rax
  402687:	test   rax,rax
  40268a:	je     4026b0 <__sprintf_chk@plt+0x12d0>
  40268c:	mov    QWORD PTR [rax+0x8],rsi
  402690:	mov    rdi,QWORD PTR [rbx+0x10]
  402694:	mov    QWORD PTR [rbx+0x8],rsi
  402698:	test   rdi,rdi
  40269b:	je     4026aa <__sprintf_chk@plt+0x12ca>
  40269d:	call   401210 <free@plt>
  4026a2:	mov    QWORD PTR [rbx+0x10],0x0
  4026aa:	inc    QWORD PTR [rbx+0x18]
  4026ae:	pop    rbx
  4026af:	ret    
  4026b0:	mov    QWORD PTR [rdi],rsi
  4026b3:	jmp    402690 <__sprintf_chk@plt+0x12b0>
  4026b5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4026c0:	endbr64 
  4026c4:	mov    rax,QWORD PTR [rdx]
  4026c7:	push   rbx
  4026c8:	mov    QWORD PTR [rsi],rax
  4026cb:	mov    rbx,rdi
  4026ce:	mov    QWORD PTR [rsi+0x8],rdx
  4026d2:	test   rax,rax
  4026d5:	je     402700 <__sprintf_chk@plt+0x1320>
  4026d7:	mov    QWORD PTR [rax+0x8],rsi
  4026db:	mov    rdi,QWORD PTR [rbx+0x10]
  4026df:	mov    QWORD PTR [rdx],rsi
  4026e2:	test   rdi,rdi
  4026e5:	je     4026f4 <__sprintf_chk@plt+0x1314>
  4026e7:	call   401210 <free@plt>
  4026ec:	mov    QWORD PTR [rbx+0x10],0x0
  4026f4:	inc    QWORD PTR [rbx+0x18]
  4026f8:	pop    rbx
  4026f9:	ret    
  4026fa:	nop    WORD PTR [rax+rax*1+0x0]
  402700:	mov    QWORD PTR [rdi],rsi
  402703:	jmp    4026db <__sprintf_chk@plt+0x12fb>
  402705:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402710:	endbr64 
  402714:	mov    rax,QWORD PTR [rsi+0x8]
  402718:	push   rbx
  402719:	mov    QWORD PTR [rdx],rsi
  40271c:	mov    QWORD PTR [rdx+0x8],rax
  402720:	mov    rbx,rdi
  402723:	mov    QWORD PTR [rsi+0x8],rdx
  402727:	test   rax,rax
  40272a:	je     402750 <__sprintf_chk@plt+0x1370>
  40272c:	mov    QWORD PTR [rax],rdx
  40272f:	mov    rdi,QWORD PTR [rbx+0x10]
  402733:	test   rdi,rdi
  402736:	je     402745 <__sprintf_chk@plt+0x1365>
  402738:	call   401210 <free@plt>
  40273d:	mov    QWORD PTR [rbx+0x10],0x0
  402745:	inc    QWORD PTR [rbx+0x18]
  402749:	pop    rbx
  40274a:	ret    
  40274b:	nop    DWORD PTR [rax+rax*1+0x0]
  402750:	mov    QWORD PTR [rdi+0x8],rdx
  402754:	jmp    40272f <__sprintf_chk@plt+0x134f>
  402756:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402760:	endbr64 
  402764:	mov    rdx,QWORD PTR [rsi]
  402767:	push   rbx
  402768:	mov    rax,QWORD PTR [rsi+0x8]
  40276c:	mov    rbx,rdi
  40276f:	test   rdx,rdx
  402772:	je     4027b0 <__sprintf_chk@plt+0x13d0>
  402774:	mov    QWORD PTR [rdx+0x8],rax
  402778:	mov    rax,QWORD PTR [rsi+0x8]
  40277c:	test   rax,rax
  40277f:	je     4027b8 <__sprintf_chk@plt+0x13d8>
  402781:	mov    QWORD PTR [rax],rdx
  402784:	mov    rdi,QWORD PTR [rbx+0x10]
  402788:	mov    QWORD PTR [rsi+0x8],0x0
  402790:	mov    QWORD PTR [rsi],0x0
  402797:	test   rdi,rdi
  40279a:	je     4027a9 <__sprintf_chk@plt+0x13c9>
  40279c:	call   401210 <free@plt>
  4027a1:	mov    QWORD PTR [rbx+0x10],0x0
  4027a9:	dec    QWORD PTR [rbx+0x18]
  4027ad:	pop    rbx
  4027ae:	ret    
  4027af:	nop
  4027b0:	mov    QWORD PTR [rdi],rax
  4027b3:	test   rax,rax
  4027b6:	jne    402781 <__sprintf_chk@plt+0x13a1>
  4027b8:	mov    QWORD PTR [rbx+0x8],rdx
  4027bc:	jmp    402784 <__sprintf_chk@plt+0x13a4>
  4027be:	xchg   ax,ax
  4027c0:	endbr64 
  4027c4:	cmp    QWORD PTR [rdi+0x10],0x0
  4027c9:	je     4027d0 <__sprintf_chk@plt+0x13f0>
  4027cb:	ret    
  4027cc:	nop    DWORD PTR [rax+0x0]
  4027d0:	mov    rax,QWORD PTR [rdi+0x18]
  4027d4:	test   rax,rax
  4027d7:	je     4027cb <__sprintf_chk@plt+0x13eb>
  4027d9:	push   rbx
  4027da:	mov    esi,0x8
  4027df:	mov    rbx,rdi
  4027e2:	mov    rdi,rax
  4027e5:	xor    eax,eax
  4027e7:	call   403780 <error@@Base+0x50>
  4027ec:	mov    rdx,QWORD PTR [rbx]
  4027ef:	mov    QWORD PTR [rbx+0x10],rax
  4027f3:	test   rdx,rdx
  4027f6:	je     402810 <__sprintf_chk@plt+0x1430>
  4027f8:	nop    DWORD PTR [rax+rax*1+0x0]
  402800:	mov    QWORD PTR [rax],rdx
  402803:	add    rax,0x8
  402807:	mov    rdx,QWORD PTR [rdx+0x8]
  40280b:	test   rdx,rdx
  40280e:	jne    402800 <__sprintf_chk@plt+0x1420>
  402810:	pop    rbx
  402811:	ret    
  402812:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40281d:	nop    DWORD PTR [rax]
  402820:	endbr64 
  402824:	push   r12
  402826:	push   rbp
  402827:	push   rbx
  402828:	mov    rbx,QWORD PTR [rdi]
  40282b:	test   rbx,rbx
  40282e:	je     40285e <__sprintf_chk@plt+0x147e>
  402830:	mov    rbp,rdi
  402833:	mov    r12,rsi
  402836:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402840:	mov    rsi,rbx
  402843:	mov    rdi,rbp
  402846:	xor    eax,eax
  402848:	call   402760 <__sprintf_chk@plt+0x1380>
  40284d:	mov    rdi,rbx
  402850:	xor    eax,eax
  402852:	call   r12
  402855:	mov    rbx,QWORD PTR [rbp+0x0]
  402859:	test   rbx,rbx
  40285c:	jne    402840 <__sprintf_chk@plt+0x1460>
  40285e:	pop    rbx
  40285f:	pop    rbp
  402860:	pop    r12
  402862:	ret    
  402863:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40286d:	nop    DWORD PTR [rax]
  402870:	push   r15
  402872:	mov    rax,rsi
  402875:	shl    rax,0x3
  402879:	push   r14
  40287b:	push   r13
  40287d:	mov    r13,rdi
  402880:	push   r12
  402882:	push   rbp
  402883:	push   rbx
  402884:	sub    rsp,0x18
  402888:	mov    QWORD PTR [rsp],rsi
  40288c:	mov    QWORD PTR [rsp+0x8],rax
  402891:	mov    rax,QWORD PTR [rip+0x115138]        # 5179d0 <error@@Base+0x1142a0>
  402898:	mov    rdx,QWORD PTR [rsp]
  40289c:	mov    rbx,QWORD PTR [rax+r13*8]
  4028a0:	mov    r15,rdx
  4028a3:	mov    rbp,r13
  4028a6:	cmp    r13,rdx
  4028a9:	jge    4029c3 <__sprintf_chk@plt+0x15e3>
  4028af:	nop
  4028b0:	mov    rsi,QWORD PTR [rax+r15*8]
  4028b4:	mov    rdi,rbx
  4028b7:	xor    eax,eax
  4028b9:	lea    r12,[r15*8+0x0]
  4028c1:	call   QWORD PTR [rip+0x115101]        # 5179c8 <error@@Base+0x114298>
  4028c7:	test   eax,eax
  4028c9:	jns    402968 <__sprintf_chk@plt+0x1588>
  4028cf:	dec    r15
  4028d2:	mov    rax,QWORD PTR [rip+0x1150f7]        # 5179d0 <error@@Base+0x1142a0>
  4028d9:	lea    r12,[r15*8+0x0]
  4028e1:	cmp    rbp,r15
  4028e4:	jl     4028b0 <__sprintf_chk@plt+0x14d0>
  4028e6:	lea    rsi,[rax+r12*1]
  4028ea:	cmp    r15,rbp
  4028ed:	je     40297f <__sprintf_chk@plt+0x159f>
  4028f3:	mov    rsi,QWORD PTR [rsi]
  4028f6:	lea    r14,[rbp+0x1]
  4028fa:	lea    rdi,[rbp*8+0x0]
  402902:	mov    QWORD PTR [rax+rbp*8],rsi
  402906:	cmp    r15,r14
  402909:	jg     40291f <__sprintf_chk@plt+0x153f>
  40290b:	jmp    4029ab <__sprintf_chk@plt+0x15cb>
  402910:	inc    r14
  402913:	mov    rax,QWORD PTR [rip+0x1150b6]        # 5179d0 <error@@Base+0x1142a0>
  40291a:	cmp    r15,r14
  40291d:	je     402978 <__sprintf_chk@plt+0x1598>
  40291f:	mov    rsi,QWORD PTR [rax+r14*8]
  402923:	mov    rdi,rbx
  402926:	xor    eax,eax
  402928:	lea    rbp,[r14*8+0x0]
  402930:	call   QWORD PTR [rip+0x115092]        # 5179c8 <error@@Base+0x114298>
  402936:	test   eax,eax
  402938:	jg     402910 <__sprintf_chk@plt+0x1530>
  40293a:	mov    rax,QWORD PTR [rip+0x11508f]        # 5179d0 <error@@Base+0x1142a0>
  402941:	lea    rsi,[rax+rbp*1]
  402945:	mov    rbp,r14
  402948:	mov    rsi,QWORD PTR [rsi]
  40294b:	dec    r15
  40294e:	mov    QWORD PTR [rax+r12*1],rsi
  402952:	cmp    r15,r14
  402955:	jg     4028b0 <__sprintf_chk@plt+0x14d0>
  40295b:	lea    rsi,[rax+r15*8]
  40295f:	jmp    402982 <__sprintf_chk@plt+0x15a2>
  402961:	nop    DWORD PTR [rax+0x0]
  402968:	mov    rax,QWORD PTR [rip+0x115061]        # 5179d0 <error@@Base+0x1142a0>
  40296f:	jmp    4028e6 <__sprintf_chk@plt+0x1506>
  402974:	nop    DWORD PTR [rax+0x0]
  402978:	lea    rsi,[rax+r15*8]
  40297c:	mov    rbp,r15
  40297f:	mov    r15,rbp
  402982:	mov    QWORD PTR [rsi],rbx
  402985:	lea    rsi,[r15-0x1]
  402989:	cmp    r13,rsi
  40298c:	jl     4029b7 <__sprintf_chk@plt+0x15d7>
  40298e:	lea    r13,[rbp+0x1]
  402992:	cmp    r13,QWORD PTR [rsp]
  402996:	jl     402891 <__sprintf_chk@plt+0x14b1>
  40299c:	add    rsp,0x18
  4029a0:	pop    rbx
  4029a1:	pop    rbp
  4029a2:	pop    r12
  4029a4:	pop    r13
  4029a6:	pop    r14
  4029a8:	pop    r15
  4029aa:	ret    
  4029ab:	lea    rsi,[rax+rdi*1+0x8]
  4029b0:	je     40297c <__sprintf_chk@plt+0x159c>
  4029b2:	mov    rbp,r14
  4029b5:	jmp    402948 <__sprintf_chk@plt+0x1568>
  4029b7:	mov    rdi,r13
  4029ba:	xor    eax,eax
  4029bc:	call   402870 <__sprintf_chk@plt+0x1490>
  4029c1:	jmp    40298e <__sprintf_chk@plt+0x15ae>
  4029c3:	mov    rcx,QWORD PTR [rsp+0x8]
  4029c8:	mov    r15,QWORD PTR [rsp]
  4029cc:	lea    rsi,[rax+rcx*1]
  4029d0:	jmp    402982 <__sprintf_chk@plt+0x15a2>
  4029d2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4029dd:	nop    DWORD PTR [rax]
  4029e0:	endbr64 
  4029e4:	cmp    rdi,0x1
  4029e8:	jle    402a08 <__sprintf_chk@plt+0x1628>
  4029ea:	mov    QWORD PTR [rip+0x114fdf],rsi        # 5179d0 <error@@Base+0x1142a0>
  4029f1:	xor    eax,eax
  4029f3:	lea    rsi,[rdi-0x1]
  4029f7:	xor    edi,edi
  4029f9:	mov    QWORD PTR [rip+0x114fc8],rdx        # 5179c8 <error@@Base+0x114298>
  402a00:	jmp    402870 <__sprintf_chk@plt+0x1490>
  402a05:	nop    DWORD PTR [rax]
  402a08:	ret    
  402a09:	nop    DWORD PTR [rax+0x0]
  402a10:	endbr64 
  402a14:	push   r12
  402a16:	mov    r12,rdi
  402a19:	push   rbp
  402a1a:	lea    rbp,[rdi+0x3ee0]
  402a21:	push   rbx
  402a22:	mov    rbx,rdi
  402a25:	nop    DWORD PTR [rax]
  402a28:	mov    rdi,rbx
  402a2b:	xor    eax,eax
  402a2d:	add    rbx,0x20
  402a31:	call   4025f0 <__sprintf_chk@plt+0x1210>
  402a36:	cmp    rbx,rbp
  402a39:	jne    402a28 <__sprintf_chk@plt+0x1648>
  402a3b:	pop    rbx
  402a3c:	pop    rbp
  402a3d:	mov    QWORD PTR [r12+0x3ee0],0x0
  402a49:	mov    QWORD PTR [r12+0x3ee8],0x0
  402a55:	pop    r12
  402a57:	ret    
  402a58:	nop    DWORD PTR [rax+rax*1+0x0]
  402a60:	endbr64 
  402a64:	push   rbp
  402a65:	mov    rbp,rsi
  402a68:	push   rbx
  402a69:	sub    rsp,0x8
  402a6d:	movzx  eax,BYTE PTR [rsi]
  402a70:	test   al,al
  402a72:	je     402ae8 <__sprintf_chk@plt+0x1708>
  402a74:	lea    rdx,[rsi+0x1]
  402a78:	xor    ecx,ecx
  402a7a:	nop    WORD PTR [rax+rax*1+0x0]
  402a80:	inc    rdx
  402a83:	add    rcx,rax
  402a86:	movzx  eax,BYTE PTR [rdx-0x1]
  402a8a:	test   al,al
  402a8c:	jne    402a80 <__sprintf_chk@plt+0x16a0>
  402a8e:	mov    rax,rcx
  402a91:	movabs rdx,0x824a4e60b3262bc5
  402a9b:	mul    rdx
  402a9e:	shr    rdx,0x8
  402aa2:	imul   rdx,rdx,0x1f7
  402aa9:	sub    ecx,edx
  402aab:	movsxd rcx,ecx
  402aae:	shl    rcx,0x5
  402ab2:	mov    rbx,QWORD PTR [rdi+rcx*1]
  402ab6:	test   rbx,rbx
  402ab9:	jne    402ac9 <__sprintf_chk@plt+0x16e9>
  402abb:	jmp    402ad9 <__sprintf_chk@plt+0x16f9>
  402abd:	nop    DWORD PTR [rax]
  402ac0:	mov    rbx,QWORD PTR [rbx+0x8]
  402ac4:	test   rbx,rbx
  402ac7:	je     402ad9 <__sprintf_chk@plt+0x16f9>
  402ac9:	mov    rsi,QWORD PTR [rbx+0x10]
  402acd:	mov    rdi,rbp
  402ad0:	call   4012f0 <strcmp@plt>
  402ad5:	test   eax,eax
  402ad7:	jne    402ac0 <__sprintf_chk@plt+0x16e0>
  402ad9:	add    rsp,0x8
  402add:	mov    rax,rbx
  402ae0:	pop    rbx
  402ae1:	pop    rbp
  402ae2:	ret    
  402ae3:	nop    DWORD PTR [rax+rax*1+0x0]
  402ae8:	xor    ecx,ecx
  402aea:	jmp    402aab <__sprintf_chk@plt+0x16cb>
  402aec:	nop    DWORD PTR [rax+0x0]
  402af0:	endbr64 
  402af4:	push   rbx
  402af5:	mov    rdx,QWORD PTR [rsi+0x10]
  402af9:	mov    rbx,rdi
  402afc:	movzx  eax,BYTE PTR [rdx]
  402aff:	test   al,al
  402b01:	je     402b43 <__sprintf_chk@plt+0x1763>
  402b03:	inc    rdx
  402b06:	xor    edi,edi
  402b08:	nop    DWORD PTR [rax+rax*1+0x0]
  402b10:	inc    rdx
  402b13:	add    rdi,rax
  402b16:	movzx  eax,BYTE PTR [rdx-0x1]
  402b1a:	test   al,al
  402b1c:	jne    402b10 <__sprintf_chk@plt+0x1730>
  402b1e:	mov    rax,rdi
  402b21:	movabs rdx,0x824a4e60b3262bc5
  402b2b:	mul    rdx
  402b2e:	shr    rdx,0x8
  402b32:	imul   rdx,rdx,0x1f7
  402b39:	sub    rdi,rdx
  402b3c:	shl    rdi,0x5
  402b40:	add    rdi,rbx
  402b43:	xor    eax,eax
  402b45:	call   402620 <__sprintf_chk@plt+0x1240>
  402b4a:	mov    rdi,QWORD PTR [rbx+0x3ee0]
  402b51:	test   rdi,rdi
  402b54:	je     402b66 <__sprintf_chk@plt+0x1786>
  402b56:	call   401210 <free@plt>
  402b5b:	mov    QWORD PTR [rbx+0x3ee0],0x0
  402b66:	inc    QWORD PTR [rbx+0x3ee8]
  402b6d:	pop    rbx
  402b6e:	ret    
  402b6f:	nop
  402b70:	endbr64 
  402b74:	push   rbx
  402b75:	mov    rdx,QWORD PTR [rsi+0x10]
  402b79:	mov    rbx,rdi
  402b7c:	movzx  eax,BYTE PTR [rdx]
  402b7f:	test   al,al
  402b81:	je     402bc3 <__sprintf_chk@plt+0x17e3>
  402b83:	inc    rdx
  402b86:	xor    edi,edi
  402b88:	nop    DWORD PTR [rax+rax*1+0x0]
  402b90:	inc    rdx
  402b93:	add    rdi,rax
  402b96:	movzx  eax,BYTE PTR [rdx-0x1]
  402b9a:	test   al,al
  402b9c:	jne    402b90 <__sprintf_chk@plt+0x17b0>
  402b9e:	mov    rax,rdi
  402ba1:	movabs rdx,0x824a4e60b3262bc5
  402bab:	mul    rdx
  402bae:	shr    rdx,0x8
  402bb2:	imul   rdx,rdx,0x1f7
  402bb9:	sub    rdi,rdx
  402bbc:	shl    rdi,0x5
  402bc0:	add    rdi,rbx
  402bc3:	xor    eax,eax
  402bc5:	call   402760 <__sprintf_chk@plt+0x1380>
  402bca:	mov    rdi,QWORD PTR [rbx+0x3ee0]
  402bd1:	test   rdi,rdi
  402bd4:	je     402be6 <__sprintf_chk@plt+0x1806>
  402bd6:	call   401210 <free@plt>
  402bdb:	mov    QWORD PTR [rbx+0x3ee0],0x0
  402be6:	dec    QWORD PTR [rbx+0x3ee8]
  402bed:	pop    rbx
  402bee:	ret    
  402bef:	nop
  402bf0:	endbr64 
  402bf4:	cmp    QWORD PTR [rdi+0x3ee0],0x0
  402bfc:	je     402bff <__sprintf_chk@plt+0x181f>
  402bfe:	ret    
  402bff:	mov    rax,QWORD PTR [rdi+0x3ee8]
  402c06:	test   rax,rax
  402c09:	je     402bfe <__sprintf_chk@plt+0x181e>
  402c0b:	push   rbx
  402c0c:	mov    esi,0x8
  402c11:	mov    rbx,rdi
  402c14:	mov    rdi,rax
  402c17:	xor    eax,eax
  402c19:	call   403780 <error@@Base+0x50>
  402c1e:	mov    QWORD PTR [rbx+0x3ee0],rax
  402c25:	mov    rsi,rbx
  402c28:	lea    rdi,[rbx+0x3ee0]
  402c2f:	xor    ecx,ecx
  402c31:	nop    DWORD PTR [rax+0x0]
  402c38:	mov    rdx,QWORD PTR [rsi]
  402c3b:	test   rdx,rdx
  402c3e:	je     402c51 <__sprintf_chk@plt+0x1871>
  402c40:	inc    rcx
  402c43:	mov    QWORD PTR [rax+rcx*8-0x8],rdx
  402c48:	mov    rdx,QWORD PTR [rdx+0x8]
  402c4c:	test   rdx,rdx
  402c4f:	jne    402c40 <__sprintf_chk@plt+0x1860>
  402c51:	add    rsi,0x20
  402c55:	cmp    rsi,rdi
  402c58:	jne    402c38 <__sprintf_chk@plt+0x1858>
  402c5a:	pop    rbx
  402c5b:	ret    
  402c5c:	nop    DWORD PTR [rax+0x0]
  402c60:	endbr64 
  402c64:	push   r13
  402c66:	mov    r13,rdi
  402c69:	push   r12
  402c6b:	mov    r12,rsi
  402c6e:	push   rbp
  402c6f:	lea    rbp,[rdi+0x3ee0]
  402c76:	push   rbx
  402c77:	mov    rbx,rdi
  402c7a:	sub    rsp,0x8
  402c7e:	xchg   ax,ax
  402c80:	mov    rdi,rbx
  402c83:	mov    rsi,r12
  402c86:	xor    eax,eax
  402c88:	add    rbx,0x20
  402c8c:	call   402820 <__sprintf_chk@plt+0x1440>
  402c91:	cmp    rbx,rbp
  402c94:	jne    402c80 <__sprintf_chk@plt+0x18a0>
  402c96:	mov    rdi,QWORD PTR [r13+0x3ee0]
  402c9d:	test   rdi,rdi
  402ca0:	je     402cb2 <__sprintf_chk@plt+0x18d2>
  402ca2:	call   401210 <free@plt>
  402ca7:	mov    QWORD PTR [r13+0x3ee0],0x0
  402cb2:	mov    QWORD PTR [r13+0x3ee8],0x0
  402cbd:	add    rsp,0x8
  402cc1:	pop    rbx
  402cc2:	pop    rbp
  402cc3:	pop    r12
  402cc5:	pop    r13
  402cc7:	ret    
  402cc8:	nop    DWORD PTR [rax+rax*1+0x0]
  402cd0:	endbr64 
  402cd4:	push   r12
  402cd6:	xor    eax,eax
  402cd8:	mov    r12d,esi
  402cdb:	push   rbp
  402cdc:	mov    esi,0x18
  402ce1:	mov    ebp,edx
  402ce3:	push   rbx
  402ce4:	mov    rbx,rdi
  402ce7:	mov    edi,0x1
  402cec:	call   403780 <error@@Base+0x50>
  402cf1:	mov    BYTE PTR [rax+0x10],r12b
  402cf5:	mov    DWORD PTR [rax+0x14],ebp
  402cf8:	mov    rdi,rbx
  402cfb:	mov    rsi,rax
  402cfe:	pop    rbx
  402cff:	pop    rbp
  402d00:	xor    eax,eax
  402d02:	pop    r12
  402d04:	jmp    402670 <__sprintf_chk@plt+0x1290>
  402d09:	nop    DWORD PTR [rax+0x0]
  402d10:	endbr64 
  402d14:	push   r15
  402d16:	push   r14
  402d18:	push   r13
  402d1a:	push   r12
  402d1c:	push   rbp
  402d1d:	push   rbx
  402d1e:	sub    rsp,0xb8
  402d25:	mov    QWORD PTR [rsp+0x8],rdi
  402d2a:	mov    QWORD PTR [rsp+0x20],rdx
  402d2f:	mov    rdi,rsi
  402d32:	mov    rsi,QWORD PTR fs:0x28
  402d3b:	mov    QWORD PTR [rsp+0xa8],rsi
  402d43:	xor    esi,esi
  402d45:	cmp    BYTE PTR [rdx],0x0
  402d48:	je     402d53 <__sprintf_chk@plt+0x1973>
  402d4a:	test   rdi,rdi
  402d4d:	je     4030e5 <__sprintf_chk@plt+0x1d05>
  402d53:	mov    rax,QWORD PTR [rsp+0x8]
  402d58:	lea    rsi,[rip+0x1bb1]        # 404910 <error@@Base+0x11e0>
  402d5f:	mov    rax,QWORD PTR [rax+0x8]
  402d63:	mov    QWORD PTR [rsp+0x28],rax
  402d68:	xor    eax,eax
  402d6a:	call   403830 <error@@Base+0x100>
  402d6f:	mov    r12,rax
  402d72:	mov    rax,QWORD PTR [rsp+0x20]
  402d77:	cmp    BYTE PTR [rax],0x0
  402d7a:	jne    403028 <__sprintf_chk@plt+0x1c48>
  402d80:	mov    rsi,QWORD PTR [rsp+0x20]
  402d85:	mov    eax,0x5e
  402d8a:	mov    ecx,DWORD PTR [rsi+0x4]
  402d8d:	mov    rdi,r12
  402d90:	test   ecx,ecx
  402d92:	cmovne eax,ecx
  402d95:	movzx  r15d,BYTE PTR [rsi+0x1]
  402d9a:	mov    DWORD PTR [rsp+0x14],eax
  402d9e:	call   4013d0 <getc@plt>
  402da3:	cmp    eax,0xffffffff
  402da6:	je     402e97 <__sprintf_chk@plt+0x1ab7>
  402dac:	mov    rsi,QWORD PTR [rip+0x422d]        # 406fe0 <error@@Base+0x38b0>
  402db3:	movsxd rdx,eax
  402db6:	movsx  rcx,BYTE PTR [rsi+rdx*1]
  402dbb:	mov    rbx,rcx
  402dbe:	test   rcx,rcx
  402dc1:	jle    403112 <__sprintf_chk@plt+0x1d32>
  402dc7:	lea    rsi,[rsp+0x3c]
  402dcc:	xor    ebp,ebp
  402dce:	lea    r13,[rsp+0x40]
  402dd3:	mov    QWORD PTR [rsp+0x18],rsi
  402dd8:	jmp    402e1e <__sprintf_chk@plt+0x1a3e>
  402dda:	nop    WORD PTR [rax+rax*1+0x0]
  402de0:	mov    rdi,QWORD PTR [rsp+0x8]
  402de5:	movsx  esi,bpl
  402de9:	xor    eax,eax
  402deb:	call   402cd0 <__sprintf_chk@plt+0x18f0>
  402df0:	mov    rdi,r12
  402df3:	xor    ebp,ebp
  402df5:	call   4013d0 <getc@plt>
  402dfa:	cmp    eax,0xffffffff
  402dfd:	je     402e97 <__sprintf_chk@plt+0x1ab7>
  402e03:	mov    rcx,QWORD PTR [rip+0x41d6]        # 406fe0 <error@@Base+0x38b0>
  402e0a:	movsxd rdx,eax
  402e0d:	movsx  rcx,BYTE PTR [rcx+rdx*1]
  402e12:	mov    rbx,rcx
  402e15:	test   rcx,rcx
  402e18:	jle    403112 <__sprintf_chk@plt+0x1d32>
  402e1e:	mov    BYTE PTR [rsp+0x40],al
  402e22:	cmp    rcx,0x1
  402e26:	je     402e50 <__sprintf_chk@plt+0x1a70>
  402e28:	lea    r14,[rcx-0x1]
  402e2c:	lea    rdi,[r13+0x1]
  402e30:	mov    r8,r12
  402e33:	mov    rcx,r14
  402e36:	mov    edx,0x1
  402e3b:	mov    esi,0x3
  402e40:	call   401350 <__fread_chk@plt>
  402e45:	cdqe   
  402e47:	cmp    r14,rax
  402e4a:	jne    403120 <__sprintf_chk@plt+0x1d40>
  402e50:	mov    rdx,QWORD PTR [rsp+0x18]
  402e55:	mov    esi,0x4
  402e5a:	mov    rdi,r13
  402e5d:	call   4012d0 <utf8proc_iterate@plt>
  402e62:	cmp    eax,ebx
  402e64:	jne    403100 <__sprintf_chk@plt+0x1d20>
  402e6a:	mov    edx,DWORD PTR [rsp+0x3c]
  402e6e:	test   r15b,r15b
  402e71:	je     402de0 <__sprintf_chk@plt+0x1a00>
  402e77:	cmp    DWORD PTR [rsp+0x14],edx
  402e7b:	jne    402de0 <__sprintf_chk@plt+0x1a00>
  402e81:	mov    rdi,r12
  402e84:	mov    ebp,0x1
  402e89:	call   4013d0 <getc@plt>
  402e8e:	cmp    eax,0xffffffff
  402e91:	jne    402e03 <__sprintf_chk@plt+0x1a23>
  402e97:	xor    eax,eax
  402e99:	mov    rdi,r12
  402e9c:	call   4035a0 <__sprintf_chk@plt+0x21c0>
  402ea1:	mov    rax,QWORD PTR [rsp+0x20]
  402ea6:	cmp    BYTE PTR [rax+0x9],0x0
  402eaa:	je     402fb0 <__sprintf_chk@plt+0x1bd0>
  402eb0:	mov    rax,QWORD PTR [rsp+0x28]
  402eb5:	test   rax,rax
  402eb8:	je     4030d8 <__sprintf_chk@plt+0x1cf8>
  402ebe:	mov    rbp,QWORD PTR [rax+0x8]
  402ec2:	test   rbp,rbp
  402ec5:	je     402fb0 <__sprintf_chk@plt+0x1bd0>
  402ecb:	mov    r12,rbp
  402ece:	jmp    402eda <__sprintf_chk@plt+0x1afa>
  402ed0:	mov    r12,QWORD PTR [r12+0x8]
  402ed5:	test   r12,r12
  402ed8:	je     402f23 <__sprintf_chk@plt+0x1b43>
  402eda:	mov    ebx,DWORD PTR [r12+0x14]
  402edf:	mov    edi,ebx
  402ee1:	call   401230 <utf8proc_get_property@plt>
  402ee6:	cmp    ebx,0xd
  402ee9:	ja     403010 <__sprintf_chk@plt+0x1c30>
  402eef:	cmp    ebx,0xb
  402ef2:	jae    402f10 <__sprintf_chk@plt+0x1b30>
  402ef4:	cmp    ebx,0x9
  402ef7:	je     402f10 <__sprintf_chk@plt+0x1b30>
  402ef9:	cmp    ebx,0xa
  402efc:	je     402ed0 <__sprintf_chk@plt+0x1af0>
  402efe:	movsx  eax,WORD PTR [rax]
  402f01:	sub    eax,0x17
  402f04:	cmp    eax,0x2
  402f07:	ja     402ed0 <__sprintf_chk@plt+0x1af0>
  402f09:	nop    DWORD PTR [rax+0x0]
  402f10:	mov    DWORD PTR [r12+0x14],0x20
  402f19:	mov    r12,QWORD PTR [r12+0x8]
  402f1e:	test   r12,r12
  402f21:	jne    402eda <__sprintf_chk@plt+0x1afa>
  402f23:	mov    r13,QWORD PTR [rsp+0x8]
  402f28:	jmp    402f49 <__sprintf_chk@plt+0x1b69>
  402f2a:	nop    WORD PTR [rax+rax*1+0x0]
  402f30:	test   r12b,r12b
  402f33:	jne    402f3a <__sprintf_chk@plt+0x1b5a>
  402f35:	cmp    eax,0xa
  402f38:	je     402f90 <__sprintf_chk@plt+0x1bb0>
  402f3a:	cmp    eax,0xa
  402f3d:	setne  r12b
  402f41:	mov    rbp,rbx
  402f44:	test   rbx,rbx
  402f47:	je     402fb0 <__sprintf_chk@plt+0x1bd0>
  402f49:	mov    eax,DWORD PTR [rbp+0x14]
  402f4c:	mov    rbx,QWORD PTR [rbp+0x8]
  402f50:	cmp    eax,0x20
  402f53:	jne    402f30 <__sprintf_chk@plt+0x1b50>
  402f55:	test   r12b,r12b
  402f58:	je     402f70 <__sprintf_chk@plt+0x1b90>
  402f5a:	test   rbx,rbx
  402f5d:	je     402f70 <__sprintf_chk@plt+0x1b90>
  402f5f:	mov    edx,DWORD PTR [rbx+0x14]
  402f62:	cmp    edx,0x20
  402f65:	je     402f70 <__sprintf_chk@plt+0x1b90>
  402f67:	cmp    edx,0xa
  402f6a:	jne    402f3a <__sprintf_chk@plt+0x1b5a>
  402f6c:	nop    DWORD PTR [rax+0x0]
  402f70:	test   rbx,rbx
  402f73:	je     402f90 <__sprintf_chk@plt+0x1bb0>
  402f75:	test   r12b,r12b
  402f78:	je     402f90 <__sprintf_chk@plt+0x1bb0>
  402f7a:	cmp    DWORD PTR [rbx+0x14],0x20
  402f7e:	jne    402f90 <__sprintf_chk@plt+0x1bb0>
  402f80:	movzx  eax,BYTE PTR [rbp+0x10]
  402f84:	or     BYTE PTR [rbx+0x10],al
  402f87:	nop    WORD PTR [rax+rax*1+0x0]
  402f90:	mov    rsi,rbp
  402f93:	mov    rdi,r13
  402f96:	xor    eax,eax
  402f98:	call   402760 <__sprintf_chk@plt+0x1380>
  402f9d:	mov    rdi,rbp
  402fa0:	call   401210 <free@plt>
  402fa5:	mov    rbp,rbx
  402fa8:	test   rbx,rbx
  402fab:	jne    402f49 <__sprintf_chk@plt+0x1b69>
  402fad:	nop    DWORD PTR [rax]
  402fb0:	mov    rax,QWORD PTR [rsp+0x20]
  402fb5:	cmp    BYTE PTR [rax+0xa],0x0
  402fb9:	je     402fe4 <__sprintf_chk@plt+0x1c04>
  402fbb:	mov    rax,QWORD PTR [rsp+0x28]
  402fc0:	test   rax,rax
  402fc3:	je     4030c8 <__sprintf_chk@plt+0x1ce8>
  402fc9:	mov    rbx,QWORD PTR [rax+0x8]
  402fcd:	jmp    402fdf <__sprintf_chk@plt+0x1bff>
  402fcf:	nop
  402fd0:	mov    edi,DWORD PTR [rbx+0x14]
  402fd3:	call   4012a0 <utf8proc_tolower@plt>
  402fd8:	mov    DWORD PTR [rbx+0x14],eax
  402fdb:	mov    rbx,QWORD PTR [rbx+0x8]
  402fdf:	test   rbx,rbx
  402fe2:	jne    402fd0 <__sprintf_chk@plt+0x1bf0>
  402fe4:	mov    rax,QWORD PTR [rsp+0xa8]
  402fec:	xor    rax,QWORD PTR fs:0x28
  402ff5:	jne    40312e <__sprintf_chk@plt+0x1d4e>
  402ffb:	add    rsp,0xb8
  403002:	pop    rbx
  403003:	pop    rbp
  403004:	pop    r12
  403006:	pop    r13
  403008:	pop    r14
  40300a:	pop    r15
  40300c:	ret    
  40300d:	nop    DWORD PTR [rax]
  403010:	cmp    ebx,0xa0
  403016:	jne    402efe <__sprintf_chk@plt+0x1b1e>
  40301c:	jmp    402f10 <__sprintf_chk@plt+0x1b30>
  403021:	nop    DWORD PTR [rax+0x0]
  403028:	lea    r13,[rsp+0x40]
  40302d:	mov    rdx,r12
  403030:	mov    esi,0x63
  403035:	mov    rdi,r13
  403038:	call   4012c0 <fgets@plt>
  40303d:	test   rax,rax
  403040:	je     40305c <__sprintf_chk@plt+0x1c7c>
  403042:	mov    ecx,0x33
  403047:	lea    rdi,[rip+0x190a]        # 404958 <error@@Base+0x1228>
  40304e:	mov    rsi,r13
  403051:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  403053:	seta   al
  403056:	sbb    al,0x0
  403058:	test   al,al
  40305a:	je     403078 <__sprintf_chk@plt+0x1c98>
  40305c:	mov    rdi,r12
  40305f:	call   401290 <rewind@plt>
  403064:	xor    eax,eax
  403066:	mov    rsi,QWORD PTR [rsp+0x20]
  40306b:	mov    BYTE PTR [rsi+0xb],al
  40306e:	jmp    402d80 <__sprintf_chk@plt+0x19a0>
  403073:	nop    DWORD PTR [rax+rax*1+0x0]
  403078:	xor    ebx,ebx
  40307a:	lea    rbp,[rip+0x190f]        # 404990 <error@@Base+0x1260>
  403081:	nop    DWORD PTR [rax+0x0]
  403088:	mov    rdx,r12
  40308b:	mov    esi,0x63
  403090:	mov    rdi,r13
  403093:	call   4012c0 <fgets@plt>
  403098:	test   rax,rax
  40309b:	je     4030bb <__sprintf_chk@plt+0x1cdb>
  40309d:	mov    ecx,0x38
  4030a2:	mov    rsi,r13
  4030a5:	mov    rdi,rbp
  4030a8:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4030aa:	seta   al
  4030ad:	sbb    al,0x0
  4030af:	test   al,al
  4030b1:	jne    403088 <__sprintf_chk@plt+0x1ca8>
  4030b3:	inc    ebx
  4030b5:	cmp    bx,0x2
  4030b9:	jne    403088 <__sprintf_chk@plt+0x1ca8>
  4030bb:	mov    eax,0x1
  4030c0:	jmp    403066 <__sprintf_chk@plt+0x1c86>
  4030c2:	nop    WORD PTR [rax+rax*1+0x0]
  4030c8:	mov    rax,QWORD PTR [rsp+0x8]
  4030cd:	mov    rbx,QWORD PTR [rax]
  4030d0:	jmp    402fdf <__sprintf_chk@plt+0x1bff>
  4030d5:	nop    DWORD PTR [rax]
  4030d8:	mov    rax,QWORD PTR [rsp+0x8]
  4030dd:	mov    rbp,QWORD PTR [rax]
  4030e0:	jmp    402ec2 <__sprintf_chk@plt+0x1ae2>
  4030e5:	lea    rsi,[rip+0x17f4]        # 4048e0 <error@@Base+0x11b0>
  4030ec:	lea    rdi,[rip+0x17f7]        # 4048ea <error@@Base+0x11ba>
  4030f3:	xor    eax,eax
  4030f5:	call   4037e0 <error@@Base+0xb0>
  4030fa:	nop    WORD PTR [rax+rax*1+0x0]
  403100:	movsxd rdi,eax
  403103:	call   4013a0 <utf8proc_errmsg@plt>
  403108:	mov    rdi,rax
  40310b:	xor    eax,eax
  40310d:	call   403730 <error@@Base>
  403112:	lea    rdi,[rip+0x17e1]        # 4048fa <error@@Base+0x11ca>
  403119:	xor    eax,eax
  40311b:	call   403730 <error@@Base>
  403120:	lea    rdi,[rip+0x17eb]        # 404912 <error@@Base+0x11e2>
  403127:	xor    eax,eax
  403129:	call   403730 <error@@Base>
  40312e:	call   401280 <__stack_chk_fail@plt>
  403133:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40313e:	xchg   ax,ax
  403140:	endbr64 
  403144:	sub    rsp,0x8
  403148:	call   401240 <utf8proc_encode_char@plt>
  40314d:	test   rax,rax
  403150:	jle    403157 <__sprintf_chk@plt+0x1d77>
  403152:	add    rsp,0x8
  403156:	ret    
  403157:	lea    rdi,[rip+0x17cc]        # 40492a <error@@Base+0x11fa>
  40315e:	xor    eax,eax
  403160:	call   403730 <error@@Base>
  403165:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  403170:	endbr64 
  403174:	push   r13
  403176:	xor    r13d,r13d
  403179:	push   r12
  40317b:	mov    r12,rdx
  40317e:	push   rbp
  40317f:	mov    ebp,esi
  403181:	push   rbx
  403182:	mov    rbx,rdx
  403185:	sub    rsp,0x18
  403189:	test   dil,dil
  40318c:	jne    403288 <__sprintf_chk@plt+0x1ea8>
  403192:	cmp    ebp,0xa
  403195:	jne    4031d0 <__sprintf_chk@plt+0x1df0>
  403197:	test   cl,cl
  403199:	lea    rax,[rip+0xfc0]        # 404160 <error@@Base+0xa30>
  4031a0:	lea    rcx,[rip+0x179a]        # 404941 <error@@Base+0x1211>
  4031a7:	cmove  rcx,rax
  4031ab:	add    rsp,0x18
  4031af:	mov    rdi,rbx
  4031b2:	pop    rbx
  4031b3:	pop    rbp
  4031b4:	pop    r12
  4031b6:	mov    rdx,0xffffffffffffffff
  4031bd:	mov    esi,0x1
  4031c2:	xor    eax,eax
  4031c4:	pop    r13
  4031c6:	jmp    4013e0 <__sprintf_chk@plt>
  4031cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4031d0:	mov    edi,ebp
  4031d2:	call   401230 <utf8proc_get_property@plt>
  4031d7:	cmp    ebp,0x20
  4031da:	je     4031f6 <__sprintf_chk@plt+0x1e16>
  4031dc:	movzx  eax,WORD PTR [rax]
  4031df:	cmp    ax,0x1d
  4031e3:	ja     403248 <__sprintf_chk@plt+0x1e68>
  4031e5:	mov    edx,0x1
  4031ea:	shlx   rax,rdx,rax
  4031ef:	test   eax,0x207ffffe
  4031f4:	je     403248 <__sprintf_chk@plt+0x1e68>
  4031f6:	mov    edi,ebp
  4031f8:	call   401310 <utf8proc_category@plt>
  4031fd:	sub    eax,0x6
  403200:	cmp    eax,0x2
  403203:	ja     403220 <__sprintf_chk@plt+0x1e40>
  403205:	mov    rsi,rbx
  403208:	mov    edi,0x25cc
  40320d:	xor    eax,eax
  40320f:	call   403140 <__sprintf_chk@plt+0x1d60>
  403214:	cbw    
  403216:	add    r13d,eax
  403219:	movsx  rbx,r13w
  40321d:	add    rbx,r12
  403220:	mov    rsi,rbx
  403223:	mov    edi,ebp
  403225:	xor    eax,eax
  403227:	call   403140 <__sprintf_chk@plt+0x1d60>
  40322c:	cbw    
  40322e:	add    r13d,eax
  403231:	movsx  r13,r13w
  403235:	mov    BYTE PTR [r12+r13*1],0x0
  40323a:	add    rsp,0x18
  40323e:	pop    rbx
  40323f:	pop    rbp
  403240:	pop    r12
  403242:	pop    r13
  403244:	ret    
  403245:	nop    DWORD PTR [rax]
  403248:	mov    r8d,ebp
  40324b:	lea    rcx,[rip+0x16f4]        # 404946 <error@@Base+0x1216>
  403252:	cmp    ebp,0xff
  403258:	jbe    403261 <__sprintf_chk@plt+0x1e81>
  40325a:	lea    rcx,[rip+0x16ec]        # 40494d <error@@Base+0x121d>
  403261:	add    rsp,0x18
  403265:	mov    rdi,rbx
  403268:	pop    rbx
  403269:	pop    rbp
  40326a:	pop    r12
  40326c:	mov    rdx,0xffffffffffffffff
  403273:	mov    esi,0x1
  403278:	xor    eax,eax
  40327a:	pop    r13
  40327c:	jmp    4013e0 <__sprintf_chk@plt>
  403281:	nop    DWORD PTR [rax+0x0]
  403288:	mov    rsi,rdx
  40328b:	mov    edi,0x5e
  403290:	xor    eax,eax
  403292:	mov    DWORD PTR [rsp+0xc],ecx
  403296:	call   403140 <__sprintf_chk@plt+0x1d60>
  40329b:	movsx  r13w,al
  4032a0:	movsx  rax,al
  4032a4:	lea    rbx,[r12+rax*1]
  4032a8:	mov    ecx,DWORD PTR [rsp+0xc]
  4032ac:	jmp    403192 <__sprintf_chk@plt+0x1db2>
  4032b1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4032bc:	nop    DWORD PTR [rax+0x0]
  4032c0:	endbr64 
  4032c4:	push   r12
  4032c6:	push   rbp
  4032c7:	mov    rbp,rdi
  4032ca:	mov    rdi,rsi
  4032cd:	push   rbx
  4032ce:	lea    rsi,[rip+0x11f3]        # 4044c8 <error@@Base+0xd98>
  4032d5:	mov    rbx,rdx
  4032d8:	sub    rsp,0x20
  4032dc:	mov    rax,QWORD PTR fs:0x28
  4032e5:	mov    QWORD PTR [rsp+0x18],rax
  4032ea:	xor    eax,eax
  4032ec:	call   403830 <error@@Base+0x100>
  4032f1:	mov    r12,rax
  4032f4:	test   rbx,rbx
  4032f7:	je     40334b <__sprintf_chk@plt+0x1f6b>
  4032f9:	mov    rcx,rax
  4032fc:	mov    edx,0x37
  403301:	mov    esi,0x1
  403306:	lea    rdi,[rip+0x164b]        # 404958 <error@@Base+0x1228>
  40330d:	call   401380 <fwrite@plt>
  403312:	mov    rcx,r12
  403315:	mov    edx,0x37
  40331a:	mov    esi,0x1
  40331f:	lea    rdi,[rip+0x166a]        # 404990 <error@@Base+0x1260>
  403326:	call   401380 <fwrite@plt>
  40332b:	mov    rdi,r12
  40332e:	xor    eax,eax
  403330:	call   rbx
  403332:	mov    rcx,r12
  403335:	mov    edx,0x37
  40333a:	mov    esi,0x1
  40333f:	lea    rdi,[rip+0x164a]        # 404990 <error@@Base+0x1260>
  403346:	call   401380 <fwrite@plt>
  40334b:	mov    rbx,QWORD PTR [rbp+0x0]
  40334f:	test   rbx,rbx
  403352:	je     403387 <__sprintf_chk@plt+0x1fa7>
  403354:	lea    rbp,[rsp+0xf]
  403359:	nop    DWORD PTR [rax+0x0]
  403360:	mov    esi,DWORD PTR [rbx+0x14]
  403363:	movsx  edi,BYTE PTR [rbx+0x10]
  403367:	xor    ecx,ecx
  403369:	mov    rdx,rbp
  40336c:	xor    eax,eax
  40336e:	call   403170 <__sprintf_chk@plt+0x1d90>
  403373:	mov    rsi,r12
  403376:	mov    rdi,rbp
  403379:	call   4012b0 <fputs@plt>
  40337e:	mov    rbx,QWORD PTR [rbx+0x8]
  403382:	test   rbx,rbx
  403385:	jne    403360 <__sprintf_chk@plt+0x1f80>
  403387:	xor    eax,eax
  403389:	mov    rdi,r12
  40338c:	call   4035a0 <__sprintf_chk@plt+0x21c0>
  403391:	mov    rax,QWORD PTR [rsp+0x18]
  403396:	xor    rax,QWORD PTR fs:0x28
  40339f:	jne    4033aa <__sprintf_chk@plt+0x1fca>
  4033a1:	add    rsp,0x20
  4033a5:	pop    rbx
  4033a6:	pop    rbp
  4033a7:	pop    r12
  4033a9:	ret    
  4033aa:	call   401280 <__stack_chk_fail@plt>
  4033af:	nop
  4033b0:	endbr64 
  4033b4:	push   r14
  4033b6:	push   r13
  4033b8:	push   r12
  4033ba:	push   rbp
  4033bb:	push   rbx
  4033bc:	sub    rsp,0x10
  4033c0:	mov    rax,QWORD PTR fs:0x28
  4033c9:	mov    QWORD PTR [rsp+0x8],rax
  4033ce:	xor    eax,eax
  4033d0:	cmp    BYTE PTR [rsi],0x0
  4033d3:	mov    DWORD PTR [rsp+0x4],0x0
  4033db:	je     403430 <__sprintf_chk@plt+0x2050>
  4033dd:	mov    r14,rdi
  4033e0:	mov    rbp,rsi
  4033e3:	lea    r13,[rsp+0x4]
  4033e8:	mov    r12,0xffffffffffffffff
  4033ef:	jmp    403414 <__sprintf_chk@plt+0x2034>
  4033f1:	nop    DWORD PTR [rax+0x0]
  4033f8:	mov    edx,DWORD PTR [rsp+0x4]
  4033fc:	movsxd rbx,ebx
  4033ff:	xor    esi,esi
  403401:	xor    eax,eax
  403403:	mov    rdi,r14
  403406:	add    rbp,rbx
  403409:	call   402cd0 <__sprintf_chk@plt+0x18f0>
  40340e:	cmp    BYTE PTR [rbp+0x0],0x0
  403412:	je     403430 <__sprintf_chk@plt+0x2050>
  403414:	mov    rdx,r13
  403417:	mov    rsi,r12
  40341a:	mov    rdi,rbp
  40341d:	call   4012d0 <utf8proc_iterate@plt>
  403422:	mov    rbx,rax
  403425:	test   eax,eax
  403427:	jg     4033f8 <__sprintf_chk@plt+0x2018>
  403429:	xor    eax,eax
  40342b:	jmp    403435 <__sprintf_chk@plt+0x2055>
  40342d:	nop    DWORD PTR [rax]
  403430:	mov    eax,0x1
  403435:	mov    rcx,QWORD PTR [rsp+0x8]
  40343a:	xor    rcx,QWORD PTR fs:0x28
  403443:	jne    403452 <__sprintf_chk@plt+0x2072>
  403445:	add    rsp,0x10
  403449:	pop    rbx
  40344a:	pop    rbp
  40344b:	pop    r12
  40344d:	pop    r13
  40344f:	pop    r14
  403451:	ret    
  403452:	call   401280 <__stack_chk_fail@plt>
  403457:	nop    WORD PTR [rax+rax*1+0x0]
  403460:	push   rbp
  403461:	push   rbx
  403462:	mov    ebx,edi
  403464:	movsx  ebx,bx
  403467:	sub    rsp,0x78
  40346b:	mov    rax,QWORD PTR fs:0x28
  403474:	mov    QWORD PTR [rsp+0x68],rax
  403479:	xor    eax,eax
  40347b:	mov    rbp,rsp
  40347e:	call   401250 <getpid@plt>
  403483:	mov    r9d,eax
  403486:	sub    rsp,0x8
  40348a:	mov    rax,0x161c9b8
  403491:	push   rbx
  403492:	mov    r8,QWORD PTR [rax]
  403495:	lea    rcx,[rip+0x152c]        # 4049c8 <error@@Base+0x1298>
  40349c:	mov    edx,0x64
  4034a1:	mov    esi,0x1
  4034a6:	mov    rdi,rbp
  4034a9:	xor    eax,eax
  4034ab:	call   4013e0 <__sprintf_chk@plt>
  4034b0:	mov    rdi,rbp
  4034b3:	call   4013c0 <strdup@plt>
  4034b8:	pop    rdx
  4034b9:	pop    rcx
  4034ba:	mov    rdx,QWORD PTR [rsp+0x68]
  4034bf:	xor    rdx,QWORD PTR fs:0x28
  4034c8:	jne    4034d1 <__sprintf_chk@plt+0x20f1>
  4034ca:	add    rsp,0x78
  4034ce:	pop    rbx
  4034cf:	pop    rbp
  4034d0:	ret    
  4034d1:	call   401280 <__stack_chk_fail@plt>
  4034d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4034e0:	push   r12
  4034e2:	mov    rax,0x161c9c0
  4034e9:	mov    r12d,edi
  4034ec:	push   rbp
  4034ed:	push   rbx
  4034ee:	mov    rdx,QWORD PTR [rax]
  4034f1:	test   rdx,rdx
  4034f4:	je     4034fa <__sprintf_chk@plt+0x211a>
  4034f6:	xor    eax,eax
  4034f8:	call   rdx
  4034fa:	cmp    WORD PTR [rip+0x1144d8],0x0        # 5179da <error@@Base+0x1142aa>
  403502:	jle    40353a <__sprintf_chk@plt+0x215a>
  403504:	mov    ebx,0x1
  403509:	nop    DWORD PTR [rax+0x0]
  403510:	movsx  edi,bx
  403513:	xor    eax,eax
  403515:	call   403460 <__sprintf_chk@plt+0x2080>
  40351a:	mov    rdi,rax
  40351d:	mov    rbp,rax
  403520:	xor    eax,eax
  403522:	call   401220 <unlink@plt>
  403527:	inc    ebx
  403529:	mov    rdi,rbp
  40352c:	call   401210 <free@plt>
  403531:	cmp    bx,WORD PTR [rip+0x1144a2]        # 5179da <error@@Base+0x1142aa>
  403538:	jle    403510 <__sprintf_chk@plt+0x2130>
  40353a:	mov    edi,r12d
  40353d:	call   401370 <exit@plt>
  403542:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40354d:	nop    DWORD PTR [rax]
  403550:	endbr64 
  403554:	movzx  edx,BYTE PTR [rdi]
  403557:	movzx  ecx,BYTE PTR [rsi]
  40355a:	test   dl,dl
  40355c:	je     403583 <__sprintf_chk@plt+0x21a3>
  40355e:	cmp    cl,dl
  403560:	jne    403589 <__sprintf_chk@plt+0x21a9>
  403562:	xor    eax,eax
  403564:	jmp    403574 <__sprintf_chk@plt+0x2194>
  403566:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403570:	cmp    dl,cl
  403572:	jne    403589 <__sprintf_chk@plt+0x21a9>
  403574:	inc    rax
  403577:	movzx  edx,BYTE PTR [rdi+rax*1]
  40357b:	movzx  ecx,BYTE PTR [rsi+rax*1]
  40357f:	test   dl,dl
  403581:	jne    403570 <__sprintf_chk@plt+0x2190>
  403583:	test   cl,cl
  403585:	je     403598 <__sprintf_chk@plt+0x21b8>
  403587:	xor    edx,edx
  403589:	cmp    dl,cl
  40358b:	sbb    eax,eax
  40358d:	or     eax,0x1
  403590:	ret    
  403591:	nop    DWORD PTR [rax+0x0]
  403598:	xor    eax,eax
  40359a:	ret    
  40359b:	nop    DWORD PTR [rax+rax*1+0x0]
  4035a0:	endbr64 
  4035a4:	mov    rax,QWORD PTR [rip+0x3a1d]        # 406fc8 <error@@Base+0x3898>
  4035ab:	cmp    QWORD PTR [rax],rdi
  4035ae:	je     4035c8 <__sprintf_chk@plt+0x21e8>
  4035b0:	mov    rax,QWORD PTR [rip+0x3a09]        # 406fc0 <error@@Base+0x3890>
  4035b7:	cmp    QWORD PTR [rax],rdi
  4035ba:	je     4035c8 <__sprintf_chk@plt+0x21e8>
  4035bc:	jmp    401260 <fclose@plt>
  4035c1:	nop    DWORD PTR [rax+0x0]
  4035c8:	ret    
  4035c9:	nop    DWORD PTR [rax+0x0]
  4035d0:	endbr64 
  4035d4:	sub    rsp,0xa8
  4035db:	mov    rsi,rdi
  4035de:	mov    rdx,rsp
  4035e1:	mov    edi,0x1
  4035e6:	mov    rax,QWORD PTR fs:0x28
  4035ef:	mov    QWORD PTR [rsp+0x98],rax
  4035f7:	xor    eax,eax
  4035f9:	call   401320 <__xstat@plt>
  4035fe:	test   eax,eax
  403600:	sete   al
  403603:	mov    rcx,QWORD PTR [rsp+0x98]
  40360b:	xor    rcx,QWORD PTR fs:0x28
  403614:	jne    40361e <__sprintf_chk@plt+0x223e>
  403616:	add    rsp,0xa8
  40361d:	ret    
  40361e:	call   401280 <__stack_chk_fail@plt>
  403623:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40362e:	xchg   ax,ax
  403630:	endbr64 
  403634:	movzx  eax,WORD PTR [rip+0x11439f]        # 5179da <error@@Base+0x1142aa>
  40363b:	push   rbx
  40363c:	lea    edi,[rax+0x1]
  40363f:	mov    WORD PTR [rip+0x114394],di        # 5179da <error@@Base+0x1142aa>
  403646:	xor    eax,eax
  403648:	movsx  edi,di
  40364b:	call   403460 <__sprintf_chk@plt+0x2080>
  403650:	mov    rbx,rax
  403653:	mov    rdi,rax
  403656:	xor    eax,eax
  403658:	call   401220 <unlink@plt>
  40365d:	mov    rax,rbx
  403660:	pop    rbx
  403661:	ret    
  403662:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40366d:	nop    DWORD PTR [rax]
  403670:	endbr64 
  403674:	push   rbx
  403675:	mov    rbx,rdi
  403678:	call   401270 <strlen@plt>
  40367d:	lea    ecx,[rax-0x1]
  403680:	movsx  rdx,cx
  403684:	test   cx,cx
  403687:	js     4036b3 <__sprintf_chk@plt+0x22d3>
  403689:	cmp    BYTE PTR [rbx+rdx*1],0x2f
  40368d:	je     4036b3 <__sprintf_chk@plt+0x22d3>
  40368f:	sub    eax,0x2
  403692:	movsx  rdx,ax
  403696:	jmp    4036ae <__sprintf_chk@plt+0x22ce>
  403698:	nop    DWORD PTR [rax+rax*1+0x0]
  4036a0:	lea    rax,[rdx-0x1]
  4036a4:	cmp    BYTE PTR [rbx+rax*1+0x1],0x2f
  4036a9:	je     4036b3 <__sprintf_chk@plt+0x22d3>
  4036ab:	mov    rdx,rax
  4036ae:	test   dx,dx
  4036b1:	jns    4036a0 <__sprintf_chk@plt+0x22c0>
  4036b3:	lea    rax,[rbx+rdx*1+0x1]
  4036b8:	pop    rbx
  4036b9:	ret    
  4036ba:	nop    WORD PTR [rax+rax*1+0x0]
  4036c0:	endbr64 
  4036c4:	push   rax
  4036c5:	pop    rax
  4036c6:	xor    edi,edi
  4036c8:	xor    eax,eax
  4036ca:	sub    rsp,0x8
  4036ce:	call   4034e0 <__sprintf_chk@plt+0x2100>
  4036d3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4036de:	xchg   ax,ax
  4036e0:	push   rax
  4036e1:	pop    rax
  4036e2:	sub    rsp,0x8
  4036e6:	mov    rax,0x161c9b0
  4036ed:	mov    rdx,QWORD PTR [rax]
  4036f0:	test   rdx,rdx
  4036f3:	je     403700 <__sprintf_chk@plt+0x2320>
  4036f5:	xor    eax,eax
  4036f7:	call   rdx
  4036f9:	xor    eax,eax
  4036fb:	call   4036c0 <__sprintf_chk@plt+0x22e0>
  403700:	mov    rax,0x161c9b8
  403707:	mov    r8,rdi
  40370a:	mov    rcx,QWORD PTR [rax]
  40370d:	mov    rax,QWORD PTR [rip+0x38d4]        # 406fe8 <error@@Base+0x38b8>
  403714:	lea    rdx,[rip+0x12bb]        # 4049d6 <error@@Base+0x12a6>
  40371b:	mov    rdi,QWORD PTR [rax]
  40371e:	mov    esi,0x1
  403723:	xor    eax,eax
  403725:	call   401390 <__fprintf_chk@plt>
  40372a:	jmp    4036f9 <__sprintf_chk@plt+0x2319>
  40372c:	nop    DWORD PTR [rax+0x0]

0000000000403730 <error@@Base>:
  403730:	endbr64 
  403734:	push   rax
  403735:	pop    rax
  403736:	lea    rdx,[rip+0x12a8]        # 4049e5 <error@@Base+0x12b5>
  40373d:	mov    esi,0x1
  403742:	sub    rsp,0x8
  403746:	mov    rax,0x161c9b8
  40374d:	mov    r8,rdi
  403750:	mov    rcx,QWORD PTR [rax]
  403753:	mov    rax,QWORD PTR [rip+0x388e]        # 406fe8 <error@@Base+0x38b8>
  40375a:	mov    rdi,QWORD PTR [rax]
  40375d:	xor    eax,eax
  40375f:	call   401390 <__fprintf_chk@plt>
  403764:	mov    rax,0x407118
  40376b:	mov    edi,DWORD PTR [rax]
  40376d:	xor    eax,eax
  40376f:	call   4034e0 <__sprintf_chk@plt+0x2100>
  403774:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40377f:	nop
  403780:	endbr64 
  403784:	sub    rsp,0x8
  403788:	call   4012e0 <calloc@plt>
  40378d:	test   rax,rax
  403790:	je     403797 <error@@Base+0x67>
  403792:	add    rsp,0x8
  403796:	ret    
  403797:	lea    rdi,[rip+0x124f]        # 4049ed <error@@Base+0x12bd>
  40379e:	call   403730 <error@@Base>
  4037a3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4037ae:	xchg   ax,ax
  4037b0:	endbr64 
  4037b4:	cmp    BYTE PTR [rip+0x11421d],0x0        # 5179d8 <error@@Base+0x1142a8>
  4037bb:	je     4037be <error@@Base+0x8e>
  4037bd:	ret    
  4037be:	push   rax
  4037bf:	lea    rdi,[rip+0x1241]        # 404a07 <error@@Base+0x12d7>
  4037c6:	xor    eax,eax
  4037c8:	mov    BYTE PTR [rip+0x114209],0x1        # 5179d8 <error@@Base+0x1142a8>
  4037cf:	call   403730 <error@@Base>
  4037d4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4037df:	nop
  4037e0:	endbr64 
  4037e4:	push   rax
  4037e5:	pop    rax
  4037e6:	lea    rdx,[rip+0x1229]        # 404a16 <error@@Base+0x12e6>
  4037ed:	sub    rsp,0x8
  4037f1:	mov    rax,0x161c9b8
  4037f8:	mov    r8,rdi
  4037fb:	mov    rcx,QWORD PTR [rax]
  4037fe:	mov    rax,QWORD PTR [rip+0x37e3]        # 406fe8 <error@@Base+0x38b8>
  403805:	mov    r9,rsi
  403808:	mov    rdi,QWORD PTR [rax]
  40380b:	mov    esi,0x1
  403810:	xor    eax,eax
  403812:	call   401390 <__fprintf_chk@plt>
  403817:	mov    rax,0x407118
  40381e:	mov    edi,DWORD PTR [rax]
  403820:	xor    eax,eax
  403822:	call   4034e0 <__sprintf_chk@plt+0x2100>
  403827:	nop    WORD PTR [rax+rax*1+0x0]
  403830:	endbr64 
  403834:	test   rdi,rdi
  403837:	je     403880 <error@@Base+0x150>
  403839:	push   rbp
  40383a:	mov    rbp,rsi
  40383d:	push   rbx
  40383e:	mov    rbx,rdi
  403841:	sub    rsp,0x8
  403845:	call   401360 <fopen@plt>
  40384a:	test   rax,rax
  40384d:	je     403860 <error@@Base+0x130>
  40384f:	add    rsp,0x8
  403853:	pop    rbx
  403854:	pop    rbp
  403855:	ret    
  403856:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403860:	cmp    BYTE PTR [rbp+0x0],0x77
  403864:	mov    rsi,rbx
  403867:	je     403890 <error@@Base+0x160>
  403869:	lea    rdi,[rip+0x11c9]        # 404a39 <error@@Base+0x1309>
  403870:	xor    eax,eax
  403872:	call   4037e0 <error@@Base+0xb0>
  403877:	nop    WORD PTR [rax+rax*1+0x0]
  403880:	cmp    BYTE PTR [rsi],0x72
  403883:	je     4038a0 <error@@Base+0x170>
  403885:	mov    rax,QWORD PTR [rip+0x3734]        # 406fc0 <error@@Base+0x3890>
  40388c:	mov    rax,QWORD PTR [rax]
  40388f:	ret    
  403890:	lea    rdi,[rip+0x118c]        # 404a23 <error@@Base+0x12f3>
  403897:	call   4037e0 <error@@Base+0xb0>
  40389c:	nop    DWORD PTR [rax+0x0]
  4038a0:	mov    rax,QWORD PTR [rip+0x3721]        # 406fc8 <error@@Base+0x3898>
  4038a7:	mov    rax,QWORD PTR [rax]
  4038aa:	ret    
  4038ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4038b0:	endbr64 
  4038b4:	push   r15
  4038b6:	xor    eax,eax
  4038b8:	push   r14
  4038ba:	mov    r14,rsi
  4038bd:	push   r13
  4038bf:	push   r12
  4038c1:	push   rbp
  4038c2:	push   rbx
  4038c3:	sub    rsp,0x38
  4038c7:	mov    QWORD PTR [rsp+0x8],rdi
  4038cc:	mov    rdi,QWORD PTR [rsi]
  4038cf:	mov    QWORD PTR [rsp+0x28],rdx
  4038d4:	mov    QWORD PTR [rsp+0x10],rcx
  4038d9:	call   403670 <__sprintf_chk@plt+0x2290>
  4038de:	mov    rcx,0x161c9b8
  4038e5:	lea    rsi,[rip+0xfffffffffffffec4]        # 4037b0 <error@@Base+0x80>
  4038ec:	mov    edi,0x2
  4038f1:	mov    QWORD PTR [rcx],rax
  4038f4:	call   401300 <__sysv_signal@plt>
  4038f9:	lea    rsi,[rip+0xfffffffffffffeb0]        # 4037b0 <error@@Base+0x80>
  403900:	mov    edi,0xf
  403905:	call   401300 <__sysv_signal@plt>
  40390a:	mov    r9,QWORD PTR [rsp+0x8]
  40390f:	mov    r15d,DWORD PTR [r9]
  403912:	cmp    r15d,0x1
  403916:	je     403ae0 <error@@Base+0x3b0>
  40391c:	mov    rdx,QWORD PTR [rsp+0x10]
  403921:	jle    403aec <error@@Base+0x3bc>
  403927:	mov    r8d,r15d
  40392a:	xor    r12d,r12d
  40392d:	mov    r15,rdx
  403930:	mov    r13d,0x1
  403936:	mov    ebx,0x1
  40393b:	mov    rdx,r14
  40393e:	jmp    40395a <error@@Base+0x22a>
  403940:	movsx  rax,r12w
  403944:	mov    QWORD PTR [rdx+rax*8],rbp
  403948:	inc    ebx
  40394a:	inc    r12d
  40394d:	movsx  r13d,bx
  403951:	cmp    r13d,r8d
  403954:	jge    403a80 <error@@Base+0x350>
  40395a:	movsx  rax,bx
  40395e:	mov    rbp,QWORD PTR [rdx+rax*8]
  403962:	lea    r10,[rax*8+0x0]
  40396a:	cmp    BYTE PTR [rbp+0x0],0x2d
  40396e:	jne    403940 <error@@Base+0x210>
  403970:	movzx  r14d,BYTE PTR [rbp+0x1]
  403975:	mov    QWORD PTR [rsp+0x20],r10
  40397a:	test   r14b,r14b
  40397d:	je     403940 <error@@Base+0x210>
  40397f:	mov    rdi,rbp
  403982:	mov    DWORD PTR [rsp+0x1c],r8d
  403987:	mov    QWORD PTR [rsp+0x10],rdx
  40398c:	mov    QWORD PTR [rsp+0x8],r9
  403991:	call   401270 <strlen@plt>
  403996:	cmp    rax,0x6
  40399a:	mov    ecx,0x6
  40399f:	cmovle rcx,rax
  4039a3:	lea    rsi,[rip+0x10a3]        # 404a4d <error@@Base+0x131d>
  4039aa:	cmp    rcx,rcx
  4039ad:	mov    rdi,rbp
  4039b0:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4039b2:	seta   al
  4039b5:	sbb    al,0x0
  4039b7:	test   al,al
  4039b9:	je     403b10 <error@@Base+0x3e0>
  4039bf:	mov    r8d,DWORD PTR [rsp+0x1c]
  4039c4:	inc    r13d
  4039c7:	xor    eax,eax
  4039c9:	cmp    r13d,r8d
  4039cc:	mov    r9,QWORD PTR [rsp+0x8]
  4039d1:	mov    rdx,QWORD PTR [rsp+0x10]
  4039d6:	jge    4039e2 <error@@Base+0x2b2>
  4039d8:	mov    r10,QWORD PTR [rsp+0x20]
  4039dd:	mov    rax,QWORD PTR [rdx+r10*1+0x8]
  4039e2:	test   r15,r15
  4039e5:	je     403a1b <error@@Base+0x2eb>
  4039e7:	movzx  ecx,BYTE PTR [r15]
  4039eb:	test   cl,cl
  4039ed:	je     403a1b <error@@Base+0x2eb>
  4039ef:	cmp    r14b,cl
  4039f2:	je     403a30 <error@@Base+0x300>
  4039f4:	xor    ecx,ecx
  4039f6:	jmp    403a05 <error@@Base+0x2d5>
  4039f8:	nop    DWORD PTR [rax+rax*1+0x0]
  403a00:	cmp    r14b,dil
  403a03:	je     403a38 <error@@Base+0x308>
  403a05:	inc    ecx
  403a07:	movsx  rsi,cx
  403a0b:	lea    rsi,[rsi+rsi*2]
  403a0f:	lea    rsi,[r15+rsi*8]
  403a13:	movzx  edi,BYTE PTR [rsi]
  403a16:	test   dil,dil
  403a19:	jne    403a00 <error@@Base+0x2d0>
  403a1b:	mov    rsi,rbp
  403a1e:	lea    rdi,[rip+0x102e]        # 404a53 <error@@Base+0x1323>
  403a25:	xor    eax,eax
  403a27:	call   4037e0 <error@@Base+0xb0>
  403a2c:	nop    DWORD PTR [rax+0x0]
  403a30:	mov    rsi,r15
  403a33:	nop    DWORD PTR [rax+rax*1+0x0]
  403a38:	mov    rcx,QWORD PTR [rsi+0x8]
  403a3c:	test   rcx,rcx
  403a3f:	je     403ab0 <error@@Base+0x380>
  403a41:	cmp    BYTE PTR [rbp+0x2],0x0
  403a45:	jne    403aa0 <error@@Base+0x370>
  403a47:	test   rax,rax
  403a4a:	je     403af8 <error@@Base+0x3c8>
  403a50:	cmp    QWORD PTR [rcx],0x0
  403a54:	jne    403b20 <error@@Base+0x3f0>
  403a5a:	mov    QWORD PTR [rcx],rax
  403a5d:	mov    eax,ebx
  403a5f:	inc    ebx
  403a61:	cmp    BYTE PTR [rbp+0x2],0x0
  403a65:	jne    40394d <error@@Base+0x21d>
  403a6b:	lea    ebx,[rax+0x2]
  403a6e:	movsx  r13d,bx
  403a72:	cmp    r13d,r8d
  403a75:	jl     40395a <error@@Base+0x22a>
  403a7b:	nop    DWORD PTR [rax+rax*1+0x0]
  403a80:	movsx  r12d,r12w
  403a84:	mov    DWORD PTR [r9],r12d
  403a87:	add    rsp,0x38
  403a8b:	pop    rbx
  403a8c:	pop    rbp
  403a8d:	pop    r12
  403a8f:	pop    r13
  403a91:	pop    r14
  403a93:	pop    r15
  403a95:	ret    
  403a96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403aa0:	cmp    QWORD PTR [rcx],0x0
  403aa4:	jne    403b20 <error@@Base+0x3f0>
  403aa6:	lea    rax,[rbp+0x2]
  403aaa:	jmp    403a5a <error@@Base+0x32a>
  403aac:	nop    DWORD PTR [rax+0x0]
  403ab0:	mov    rax,QWORD PTR [rsi+0x10]
  403ab4:	test   rax,rax
  403ab7:	je     403a1b <error@@Base+0x2eb>
  403abd:	cmp    BYTE PTR [rbp+0x2],0x0
  403ac1:	jne    403a1b <error@@Base+0x2eb>
  403ac7:	cmp    BYTE PTR [rax],0x0
  403aca:	jne    403b20 <error@@Base+0x3f0>
  403acc:	mov    BYTE PTR [rax],0x1
  403acf:	inc    ebx
  403ad1:	mov    r8d,DWORD PTR [r9]
  403ad4:	jmp    40394d <error@@Base+0x21d>
  403ad9:	nop    DWORD PTR [rax+0x0]
  403ae0:	mov    rax,0x40711c
  403ae7:	cmp    BYTE PTR [rax],0x0
  403aea:	jne    403b10 <error@@Base+0x3e0>
  403aec:	xor    r12d,r12d
  403aef:	jmp    403a84 <error@@Base+0x354>
  403af1:	nop    DWORD PTR [rax+0x0]
  403af8:	mov    rax,QWORD PTR [rsi+0x10]
  403afc:	test   rax,rax
  403aff:	jne    403ac7 <error@@Base+0x397>
  403b01:	jmp    403a1b <error@@Base+0x2eb>
  403b06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403b10:	mov    rdi,QWORD PTR [rsp+0x28]
  403b15:	xor    eax,eax
  403b17:	call   4036e0 <__sprintf_chk@plt+0x2300>
  403b1c:	nop    DWORD PTR [rax+0x0]
  403b20:	mov    rsi,rbp
  403b23:	lea    rdi,[rip+0xf38]        # 404a62 <error@@Base+0x1332>
  403b2a:	xor    eax,eax
  403b2c:	call   4037e0 <error@@Base+0xb0>
  403b31:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  403b3c:	nop    DWORD PTR [rax+0x0]
  403b40:	endbr64 
  403b44:	mov    rax,0x161c9b8
  403b4b:	mov    r8,rdi
  403b4e:	mov    rcx,QWORD PTR [rax]
  403b51:	mov    rax,QWORD PTR [rip+0x3490]        # 406fe8 <error@@Base+0x38b8>
  403b58:	mov    r9,rsi
  403b5b:	mov    rdi,QWORD PTR [rax]
  403b5e:	lea    rdx,[rip+0xeb1]        # 404a16 <error@@Base+0x12e6>
  403b65:	mov    esi,0x1
  403b6a:	xor    eax,eax
  403b6c:	jmp    401390 <__fprintf_chk@plt>
  403b71:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403b7b:	nop    DWORD PTR [rax+rax*1+0x0]
  403b80:	endbr64 
  403b84:	push   r15
  403b86:	lea    r15,[rip+0x2c83]        # 406810 <error@@Base+0x30e0>
  403b8d:	push   r14
  403b8f:	mov    r14,rdx
  403b92:	push   r13
  403b94:	mov    r13,rsi
  403b97:	push   r12
  403b99:	mov    r12d,edi
  403b9c:	push   rbp
  403b9d:	lea    rbp,[rip+0x2c74]        # 406818 <error@@Base+0x30e8>
  403ba4:	push   rbx
  403ba5:	sub    rbp,r15
  403ba8:	sub    rsp,0x8
  403bac:	call   401000 <free@plt-0x210>
  403bb1:	sar    rbp,0x3
  403bb5:	je     403bd6 <error@@Base+0x4a6>
  403bb7:	xor    ebx,ebx
  403bb9:	nop    DWORD PTR [rax+0x0]
  403bc0:	mov    rdx,r14
  403bc3:	mov    rsi,r13
  403bc6:	mov    edi,r12d
  403bc9:	call   QWORD PTR [r15+rbx*8]
  403bcd:	add    rbx,0x1
  403bd1:	cmp    rbp,rbx
  403bd4:	jne    403bc0 <error@@Base+0x490>
  403bd6:	add    rsp,0x8
  403bda:	pop    rbx
  403bdb:	pop    rbp
  403bdc:	pop    r12
  403bde:	pop    r13
  403be0:	pop    r14
  403be2:	pop    r15
  403be4:	ret    
  403be5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  403bf0:	endbr64 
  403bf4:	ret    

Disassembly of section .fini:

0000000000403bf8 <.fini>:
  403bf8:	endbr64 
  403bfc:	sub    rsp,0x8
  403c00:	add    rsp,0x8
  403c04:	ret    
