
../repos/dvidelabs-flatcc-3b39ef7/test/flatc_compat/flatc_compat:     file format elf64-x86-64


Disassembly of section .init:

0000000000401000 <.init>:
  401000:	endbr64 
  401004:	sub    rsp,0x8
  401008:	mov    rax,QWORD PTR [rip+0x6fe1]        # 407ff0 <__gmon_start__>
  40100f:	test   rax,rax
  401012:	je     401016 <free@plt-0x11a>
  401014:	call   rax
  401016:	add    rsp,0x8
  40101a:	ret    

Disassembly of section .plt:

0000000000401020 <.plt>:
  401020:	push   QWORD PTR [rip+0x6fe2]        # 408008 <_IO_stdin_used@@Base+0x3008>
  401026:	bnd jmp QWORD PTR [rip+0x6fe3]        # 408010 <_IO_stdin_used@@Base+0x3010>
  40102d:	nop    DWORD PTR [rax]
  401030:	endbr64 
  401034:	push   0x0
  401039:	bnd jmp 401020 <free@plt-0x110>
  40103f:	nop
  401040:	endbr64 
  401044:	push   0x1
  401049:	bnd jmp 401020 <free@plt-0x110>
  40104f:	nop
  401050:	endbr64 
  401054:	push   0x2
  401059:	bnd jmp 401020 <free@plt-0x110>
  40105f:	nop
  401060:	endbr64 
  401064:	push   0x3
  401069:	bnd jmp 401020 <free@plt-0x110>
  40106f:	nop
  401070:	endbr64 
  401074:	push   0x4
  401079:	bnd jmp 401020 <free@plt-0x110>
  40107f:	nop
  401080:	endbr64 
  401084:	push   0x5
  401089:	bnd jmp 401020 <free@plt-0x110>
  40108f:	nop
  401090:	endbr64 
  401094:	push   0x6
  401099:	bnd jmp 401020 <free@plt-0x110>
  40109f:	nop
  4010a0:	endbr64 
  4010a4:	push   0x7
  4010a9:	bnd jmp 401020 <free@plt-0x110>
  4010af:	nop
  4010b0:	endbr64 
  4010b4:	push   0x8
  4010b9:	bnd jmp 401020 <free@plt-0x110>
  4010bf:	nop
  4010c0:	endbr64 
  4010c4:	push   0x9
  4010c9:	bnd jmp 401020 <free@plt-0x110>
  4010cf:	nop
  4010d0:	endbr64 
  4010d4:	push   0xa
  4010d9:	bnd jmp 401020 <free@plt-0x110>
  4010df:	nop
  4010e0:	endbr64 
  4010e4:	push   0xb
  4010e9:	bnd jmp 401020 <free@plt-0x110>
  4010ef:	nop
  4010f0:	endbr64 
  4010f4:	push   0xc
  4010f9:	bnd jmp 401020 <free@plt-0x110>
  4010ff:	nop
  401100:	endbr64 
  401104:	push   0xd
  401109:	bnd jmp 401020 <free@plt-0x110>
  40110f:	nop
  401110:	endbr64 
  401114:	push   0xe
  401119:	bnd jmp 401020 <free@plt-0x110>
  40111f:	nop
  401120:	endbr64 
  401124:	push   0xf
  401129:	bnd jmp 401020 <free@plt-0x110>
  40112f:	nop

Disassembly of section .plt.sec:

0000000000401130 <free@plt>:
  401130:	endbr64 
  401134:	bnd jmp QWORD PTR [rip+0x6edd]        # 408018 <free@GLIBC_2.2.5>
  40113b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401140 <strncpy@plt>:
  401140:	endbr64 
  401144:	bnd jmp QWORD PTR [rip+0x6ed5]        # 408020 <strncpy@GLIBC_2.2.5>
  40114b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401150 <fread@plt>:
  401150:	endbr64 
  401154:	bnd jmp QWORD PTR [rip+0x6ecd]        # 408028 <fread@GLIBC_2.2.5>
  40115b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401160 <fclose@plt>:
  401160:	endbr64 
  401164:	bnd jmp QWORD PTR [rip+0x6ec5]        # 408030 <fclose@GLIBC_2.2.5>
  40116b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401170 <__stack_chk_fail@plt>:
  401170:	endbr64 
  401174:	bnd jmp QWORD PTR [rip+0x6ebd]        # 408038 <__stack_chk_fail@GLIBC_2.4>
  40117b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401180 <rewind@plt>:
  401180:	endbr64 
  401184:	bnd jmp QWORD PTR [rip+0x6eb5]        # 408040 <rewind@GLIBC_2.2.5>
  40118b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401190 <__assert_fail@plt>:
  401190:	endbr64 
  401194:	bnd jmp QWORD PTR [rip+0x6ead]        # 408048 <__assert_fail@GLIBC_2.2.5>
  40119b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004011a0 <ftell@plt>:
  4011a0:	endbr64 
  4011a4:	bnd jmp QWORD PTR [rip+0x6ea5]        # 408050 <ftell@GLIBC_2.2.5>
  4011ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004011b0 <memcpy@plt>:
  4011b0:	endbr64 
  4011b4:	bnd jmp QWORD PTR [rip+0x6e9d]        # 408058 <memcpy@GLIBC_2.14>
  4011bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004011c0 <malloc@plt>:
  4011c0:	endbr64 
  4011c4:	bnd jmp QWORD PTR [rip+0x6e95]        # 408060 <malloc@GLIBC_2.2.5>
  4011cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004011d0 <fseek@plt>:
  4011d0:	endbr64 
  4011d4:	bnd jmp QWORD PTR [rip+0x6e8d]        # 408068 <fseek@GLIBC_2.2.5>
  4011db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004011e0 <__printf_chk@plt>:
  4011e0:	endbr64 
  4011e4:	bnd jmp QWORD PTR [rip+0x6e85]        # 408070 <__printf_chk@GLIBC_2.3.4>
  4011eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004011f0 <fopen@plt>:
  4011f0:	endbr64 
  4011f4:	bnd jmp QWORD PTR [rip+0x6e7d]        # 408078 <fopen@GLIBC_2.2.5>
  4011fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401200 <exit@plt>:
  401200:	endbr64 
  401204:	bnd jmp QWORD PTR [rip+0x6e75]        # 408080 <exit@GLIBC_2.2.5>
  40120b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401210 <__fprintf_chk@plt>:
  401210:	endbr64 
  401214:	bnd jmp QWORD PTR [rip+0x6e6d]        # 408088 <__fprintf_chk@GLIBC_2.3.4>
  40121b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401220 <posix_memalign@plt>:
  401220:	endbr64 
  401224:	bnd jmp QWORD PTR [rip+0x6e65]        # 408090 <posix_memalign@GLIBC_2.2.5>
  40122b:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

0000000000401230 <main@@Base>:
  401230:	endbr64 
  401234:	push   r15
  401236:	push   r14
  401238:	push   r13
  40123a:	push   r12
  40123c:	push   rbp
  40123d:	push   rbx
  40123e:	sub    rsp,0x58
  401242:	mov    rax,QWORD PTR fs:0x28
  40124b:	mov    QWORD PTR [rsp+0x48],rax
  401250:	xor    eax,eax
  401252:	lea    eax,[rdi-0x1]
  401255:	cmp    eax,0x1
  401258:	ja     4015a9 <main@@Base+0x379>
  40125e:	mov    rax,0x4080a8
  401265:	cmp    edi,0x2
  401268:	jne    401271 <main@@Base+0x41>
  40126a:	mov    rdx,QWORD PTR [rsi+0x8]
  40126e:	mov    QWORD PTR [rax],rdx
  401271:	mov    rdi,QWORD PTR [rax]
  401274:	lea    rsi,[rip+0x4473]        # 4056ee <_IO_stdin_used@@Base+0x6ee>
  40127b:	call   4011f0 <fopen@plt>
  401280:	mov    rbp,rax
  401283:	test   rax,rax
  401286:	je     401558 <main@@Base+0x328>
  40128c:	mov    edx,0x2
  401291:	xor    esi,esi
  401293:	mov    rdi,rax
  401296:	call   4011d0 <fseek@plt>
  40129b:	mov    rdi,rbp
  40129e:	call   4011a0 <ftell@plt>
  4012a3:	mov    rbx,rax
  4012a6:	mov    rdi,rbp
  4012a9:	cmp    rax,0x400
  4012af:	ja     40154b <main@@Base+0x31b>
  4012b5:	call   401180 <rewind@plt>
  4012ba:	test   rbx,rbx
  4012bd:	mov    edi,0x1
  4012c2:	cmovne rdi,rbx
  4012c6:	call   4011c0 <malloc@plt>
  4012cb:	mov    r12,rax
  4012ce:	test   rax,rax
  4012d1:	je     401571 <main@@Base+0x341>
  4012d7:	xor    r13d,r13d
  4012da:	jmp    4012e3 <main@@Base+0xb3>
  4012dc:	nop    DWORD PTR [rax+0x0]
  4012e0:	add    r13,rax
  4012e3:	mov    rdx,rbx
  4012e6:	sub    rdx,r13
  4012e9:	lea    rdi,[r12+r13*1]
  4012ed:	mov    rcx,rbp
  4012f0:	mov    esi,0x1
  4012f5:	call   401150 <fread@plt>
  4012fa:	test   rax,rax
  4012fd:	jne    4012e0 <main@@Base+0xb0>
  4012ff:	mov    rdi,rbp
  401302:	cmp    rbx,r13
  401305:	jne    401454 <main@@Base+0x224>
  40130b:	call   401160 <fclose@plt>
  401310:	lea    rdx,[rbx+0xff]
  401317:	xor    dl,dl
  401319:	lea    rdi,[rsp+0x28]
  40131e:	mov    esi,0x100
  401323:	mov    QWORD PTR [rsp+0x28],0x0
  40132c:	call   401220 <posix_memalign@plt>
  401331:	mov    rbp,QWORD PTR [rsp+0x28]
  401336:	test   eax,eax
  401338:	je     401352 <main@@Base+0x122>
  40133a:	test   rbp,rbp
  40133d:	je     401352 <main@@Base+0x122>
  40133f:	mov    rdi,rbp
  401342:	call   401130 <free@plt>
  401347:	mov    QWORD PTR [rsp+0x28],0x0
  401350:	xor    ebp,ebp
  401352:	mov    rsi,r12
  401355:	mov    rdx,rbx
  401358:	mov    rdi,rbp
  40135b:	call   4011b0 <memcpy@plt>
  401360:	mov    rdi,r12
  401363:	call   401130 <free@plt>
  401368:	mov    rax,QWORD PTR [rip+0x6c89]        # 407ff8 <stderr@GLIBC_2.2.5>
  40136f:	lea    rcx,[rip+0x437b]        # 4056f1 <_IO_stdin_used@@Base+0x6f1>
  401376:	mov    r12,QWORD PTR [rax]
  401379:	lea    rdx,[rip+0x4386]        # 405706 <_IO_stdin_used@@Base+0x706>
  401380:	mov    esi,0x1
  401385:	mov    rdi,r12
  401388:	xor    eax,eax
  40138a:	call   401210 <__fprintf_chk@plt>
  40138f:	mov    r14d,ebx
  401392:	test   ebx,ebx
  401394:	je     401562 <main@@Base+0x332>
  40139a:	lea    eax,[rbx-0x1]
  40139d:	mov    QWORD PTR [rsp+0x10],rax
  4013a2:	lea    rax,[rsp+0x30]
  4013a7:	xor    r15d,r15d
  4013aa:	mov    QWORD PTR [rsp+0x8],rax
  4013af:	jmp    401428 <main@@Base+0x1f8>
  4013b1:	nop    DWORD PTR [rax+0x0]
  4013b8:	test   r15d,r15d
  4013bb:	jne    401470 <main@@Base+0x240>
  4013c1:	mov    ecx,r15d
  4013c4:	lea    rdx,[rip+0x434b]        # 405716 <_IO_stdin_used@@Base+0x716>
  4013cb:	mov    esi,0x1
  4013d0:	mov    rdi,r12
  4013d3:	xor    eax,eax
  4013d5:	call   401210 <__fprintf_chk@plt>
  4013da:	movzx  ecx,BYTE PTR [rbp+r15*1+0x0]
  4013e0:	lea    rdx,[rip+0x4337]        # 40571e <_IO_stdin_used@@Base+0x71e>
  4013e7:	xor    eax,eax
  4013e9:	mov    esi,0x1
  4013ee:	mov    rdi,r12
  4013f1:	call   401210 <__fprintf_chk@plt>
  4013f6:	movzx  eax,BYTE PTR [rbp+r15*1+0x0]
  4013fc:	mov    ecx,0x2e
  401401:	lea    edx,[rax-0x20]
  401404:	cmp    dl,0x5f
  401407:	cmovae eax,ecx
  40140a:	mov    edx,r13d
  40140d:	inc    r13d
  401410:	mov    BYTE PTR [rsp+rdx*1+0x30],al
  401414:	mov    BYTE PTR [rsp+r13*1+0x30],0x0
  40141a:	lea    rax,[r15+0x1]
  40141e:	cmp    QWORD PTR [rsp+0x10],r15
  401423:	je     401490 <main@@Base+0x260>
  401425:	mov    r15,rax
  401428:	mov    r13d,r15d
  40142b:	mov    DWORD PTR [rsp+0x1c],r15d
  401430:	and    r13d,0xf
  401434:	je     4013b8 <main@@Base+0x188>
  401436:	test   r15b,0x7
  40143a:	jne    4013da <main@@Base+0x1aa>
  40143c:	lea    rdx,[rip+0x42e3]        # 405726 <_IO_stdin_used@@Base+0x726>
  401443:	mov    esi,0x1
  401448:	mov    rdi,r12
  40144b:	xor    eax,eax
  40144d:	call   401210 <__fprintf_chk@plt>
  401452:	jmp    4013da <main@@Base+0x1aa>
  401454:	call   401160 <fclose@plt>
  401459:	mov    rdi,r12
  40145c:	call   401130 <free@plt>
  401461:	xor    r12d,r12d
  401464:	jmp    401310 <main@@Base+0xe0>
  401469:	nop    DWORD PTR [rax+0x0]
  401470:	mov    rcx,QWORD PTR [rsp+0x8]
  401475:	lea    rdx,[rip+0x428f]        # 40570b <_IO_stdin_used@@Base+0x70b>
  40147c:	mov    esi,0x1
  401481:	mov    rdi,r12
  401484:	xor    eax,eax
  401486:	call   401210 <__fprintf_chk@plt>
  40148b:	jmp    4013c1 <main@@Base+0x191>
  401490:	test   r14b,0xf
  401494:	je     4014bb <main@@Base+0x28b>
  401496:	lea    r13,[rip+0x4287]        # 405724 <_IO_stdin_used@@Base+0x724>
  40149d:	nop    DWORD PTR [rax]
  4014a0:	mov    rdx,r13
  4014a3:	mov    esi,0x1
  4014a8:	mov    rdi,r12
  4014ab:	xor    eax,eax
  4014ad:	inc    r14d
  4014b0:	call   401210 <__fprintf_chk@plt>
  4014b5:	test   r14b,0xf
  4014b9:	jne    4014a0 <main@@Base+0x270>
  4014bb:	mov    rcx,QWORD PTR [rsp+0x8]
  4014c0:	lea    rdx,[rip+0x4244]        # 40570b <_IO_stdin_used@@Base+0x70b>
  4014c7:	mov    esi,0x1
  4014cc:	mov    rdi,r12
  4014cf:	xor    eax,eax
  4014d1:	call   401210 <__fprintf_chk@plt>
  4014d6:	lea    rcx,[rip+0x4b3]        # 401990 <_start@@Base+0x3c0>
  4014dd:	lea    rdx,[rip+0x422d]        # 405711 <_IO_stdin_used@@Base+0x711>
  4014e4:	mov    rsi,rbx
  4014e7:	mov    rdi,rbp
  4014ea:	call   403780 <flatcc_verify_table_as_root@@Base>
  4014ef:	test   eax,eax
  4014f1:	jne    401579 <main@@Base+0x349>
  4014f7:	lea    rcx,[rip+0x492]        # 401990 <_start@@Base+0x3c0>
  4014fe:	lea    rdx,[rip+0x420c]        # 405711 <_IO_stdin_used@@Base+0x711>
  401505:	mov    rsi,rbx
  401508:	mov    rdi,rbp
  40150b:	call   403780 <flatcc_verify_table_as_root@@Base>
  401510:	test   eax,eax
  401512:	jne    40159b <main@@Base+0x36b>
  401518:	mov    rdi,rbp
  40151b:	call   402070 <verify_monster@@Base>
  401520:	mov    ebx,eax
  401522:	mov    rdi,rbp
  401525:	call   401130 <free@plt>
  40152a:	mov    rcx,QWORD PTR [rsp+0x48]
  40152f:	xor    rcx,QWORD PTR fs:0x28
  401538:	mov    eax,ebx
  40153a:	jne    4015a4 <main@@Base+0x374>
  40153c:	add    rsp,0x58
  401540:	pop    rbx
  401541:	pop    rbp
  401542:	pop    r12
  401544:	pop    r13
  401546:	pop    r14
  401548:	pop    r15
  40154a:	ret    
  40154b:	call   401160 <fclose@plt>
  401550:	xor    r12d,r12d
  401553:	jmp    401310 <main@@Base+0xe0>
  401558:	xor    r12d,r12d
  40155b:	xor    ebx,ebx
  40155d:	jmp    401310 <main@@Base+0xe0>
  401562:	lea    rax,[rsp+0x30]
  401567:	mov    QWORD PTR [rsp+0x8],rax
  40156c:	jmp    4014bb <main@@Base+0x28b>
  401571:	mov    rdi,rbp
  401574:	jmp    40130b <main@@Base+0xdb>
  401579:	lea    rdx,[rip+0x3f58]        # 4054d8 <_IO_stdin_used@@Base+0x4d8>
  401580:	mov    rax,QWORD PTR [rip+0x6a71]        # 407ff8 <stderr@GLIBC_2.2.5>
  401587:	mov    esi,0x1
  40158c:	mov    rdi,QWORD PTR [rax]
  40158f:	xor    eax,eax
  401591:	call   401210 <__fprintf_chk@plt>
  401596:	or     ebx,0xffffffff
  401599:	jmp    401522 <main@@Base+0x2f2>
  40159b:	lea    rdx,[rip+0x3f5e]        # 405500 <_IO_stdin_used@@Base+0x500>
  4015a2:	jmp    401580 <main@@Base+0x350>
  4015a4:	call   401170 <__stack_chk_fail@plt>
  4015a9:	mov    rax,QWORD PTR [rip+0x6a48]        # 407ff8 <stderr@GLIBC_2.2.5>
  4015b0:	lea    rdx,[rip+0x3ee1]        # 405498 <_IO_stdin_used@@Base+0x498>
  4015b7:	mov    rdi,QWORD PTR [rax]
  4015ba:	mov    esi,0x1
  4015bf:	xor    eax,eax
  4015c1:	call   401210 <__fprintf_chk@plt>
  4015c6:	mov    edi,0x1
  4015cb:	call   401200 <exit@plt>

00000000004015d0 <_start@@Base>:
  4015d0:	endbr64 
  4015d4:	xor    ebp,ebp
  4015d6:	mov    r9,rdx
  4015d9:	pop    rsi
  4015da:	mov    rdx,rsp
  4015dd:	and    rsp,0xfffffffffffffff0
  4015e1:	push   rax
  4015e2:	push   rsp
  4015e3:	mov    r8,0x4041f0
  4015ea:	mov    rcx,0x404180
  4015f1:	mov    rdi,0x401230
  4015f8:	call   QWORD PTR [rip+0x69ea]        # 407fe8 <__libc_start_main@GLIBC_2.2.5>
  4015fe:	hlt    
  4015ff:	nop
  401600:	endbr64 
  401604:	ret    
  401605:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40160f:	nop
  401610:	mov    eax,0x4080b0
  401615:	cmp    rax,0x4080b0
  40161b:	je     401630 <_start@@Base+0x60>
  40161d:	mov    eax,0x0
  401622:	test   rax,rax
  401625:	je     401630 <_start@@Base+0x60>
  401627:	mov    edi,0x4080b0
  40162c:	jmp    rax
  40162e:	xchg   ax,ax
  401630:	ret    
  401631:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40163c:	nop    DWORD PTR [rax+0x0]
  401640:	mov    esi,0x4080b0
  401645:	sub    rsi,0x4080b0
  40164c:	sar    rsi,0x3
  401650:	mov    rax,rsi
  401653:	shr    rax,0x3f
  401657:	add    rsi,rax
  40165a:	sar    rsi,1
  40165d:	je     401670 <_start@@Base+0xa0>
  40165f:	mov    eax,0x0
  401664:	test   rax,rax
  401667:	je     401670 <_start@@Base+0xa0>
  401669:	mov    edi,0x4080b0
  40166e:	jmp    rax
  401670:	ret    
  401671:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40167c:	nop    DWORD PTR [rax+0x0]
  401680:	endbr64 
  401684:	cmp    BYTE PTR [rip+0x6a25],0x0        # 4080b0 <__bss_start@@Base>
  40168b:	jne    4016a0 <_start@@Base+0xd0>
  40168d:	push   rbp
  40168e:	mov    rbp,rsp
  401691:	call   401610 <_start@@Base+0x40>
  401696:	mov    BYTE PTR [rip+0x6a13],0x1        # 4080b0 <__bss_start@@Base>
  40169d:	pop    rbp
  40169e:	ret    
  40169f:	nop
  4016a0:	ret    
  4016a1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4016ac:	nop    DWORD PTR [rax+0x0]
  4016b0:	endbr64 
  4016b4:	jmp    401640 <_start@@Base+0x70>
  4016b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4016c0:	endbr64 
  4016c4:	xor    eax,eax
  4016c6:	ret    
  4016c7:	nop    WORD PTR [rax+rax*1+0x0]
  4016d0:	endbr64 
  4016d4:	mov    ecx,0x4
  4016d9:	mov    edx,0x4
  4016de:	xor    esi,esi
  4016e0:	jmp    402b30 <flatcc_verify_field@@Base>
  4016e5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4016f0:	push   rax
  4016f1:	pop    rax
  4016f2:	lea    rcx,[rip+0x4037]        # 405730 <_IO_stdin_used@@Base+0x730>
  4016f9:	mov    edx,0x2bb
  4016fe:	lea    rsi,[rip+0x3903]        # 405008 <_IO_stdin_used@@Base+0x8>
  401705:	lea    rdi,[rip+0x397c]        # 405088 <_IO_stdin_used@@Base+0x88>
  40170c:	sub    rsp,0x8
  401710:	call   401190 <__assert_fail@plt>
  401715:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  401720:	endbr64 
  401724:	push   rbx
  401725:	xor    esi,esi
  401727:	mov    ecx,0x8
  40172c:	mov    edx,0x8
  401731:	mov    rbx,rdi
  401734:	call   402b30 <flatcc_verify_field@@Base>
  401739:	test   eax,eax
  40173b:	je     401740 <_start@@Base+0x170>
  40173d:	pop    rbx
  40173e:	ret    
  40173f:	nop
  401740:	mov    rdi,rbx
  401743:	mov    ecx,0x4
  401748:	mov    edx,0x4
  40174d:	mov    esi,0x1
  401752:	pop    rbx
  401753:	jmp    402b30 <flatcc_verify_field@@Base>
  401758:	nop    DWORD PTR [rax+rax*1+0x0]
  401760:	endbr64 
  401764:	push   rbx
  401765:	xor    esi,esi
  401767:	mov    ecx,0x1
  40176c:	mov    edx,0x1
  401771:	mov    rbx,rdi
  401774:	call   402b30 <flatcc_verify_field@@Base>
  401779:	test   eax,eax
  40177b:	je     401780 <_start@@Base+0x1b0>
  40177d:	pop    rbx
  40177e:	ret    
  40177f:	nop
  401780:	mov    ecx,0x1
  401785:	mov    edx,0x1
  40178a:	mov    esi,0x1
  40178f:	mov    rdi,rbx
  401792:	call   402b30 <flatcc_verify_field@@Base>
  401797:	test   eax,eax
  401799:	jne    40177d <_start@@Base+0x1ad>
  40179b:	mov    ecx,0x1
  4017a0:	mov    edx,0x1
  4017a5:	mov    esi,0x2
  4017aa:	mov    rdi,rbx
  4017ad:	call   402b30 <flatcc_verify_field@@Base>
  4017b2:	test   eax,eax
  4017b4:	jne    40177d <_start@@Base+0x1ad>
  4017b6:	mov    rdi,rbx
  4017b9:	mov    ecx,0x1
  4017be:	mov    edx,0x1
  4017c3:	mov    esi,0x3
  4017c8:	pop    rbx
  4017c9:	jmp    402b30 <flatcc_verify_field@@Base>
  4017ce:	xchg   ax,ax
  4017d0:	endbr64 
  4017d4:	push   rbx
  4017d5:	xor    edx,edx
  4017d7:	xor    esi,esi
  4017d9:	mov    rbx,rdi
  4017dc:	call   402b80 <flatcc_verify_string_field@@Base>
  4017e1:	test   eax,eax
  4017e3:	je     4017f0 <_start@@Base+0x220>
  4017e5:	pop    rbx
  4017e6:	ret    
  4017e7:	nop    WORD PTR [rax+rax*1+0x0]
  4017f0:	mov    ecx,0x8
  4017f5:	mov    edx,0x8
  4017fa:	mov    esi,0x1
  4017ff:	mov    rdi,rbx
  401802:	call   402b30 <flatcc_verify_field@@Base>
  401807:	test   eax,eax
  401809:	jne    4017e5 <_start@@Base+0x215>
  40180b:	mov    rdi,rbx
  40180e:	mov    ecx,0x2
  401813:	mov    edx,0x2
  401818:	mov    esi,0x2
  40181d:	pop    rbx
  40181e:	jmp    402b30 <flatcc_verify_field@@Base>
  401823:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40182e:	xchg   ax,ax
  401830:	endbr64 
  401834:	push   rbx
  401835:	xor    edx,edx
  401837:	xor    esi,esi
  401839:	mov    rbx,rdi
  40183c:	call   402b80 <flatcc_verify_string_field@@Base>
  401841:	test   eax,eax
  401843:	je     401850 <_start@@Base+0x280>
  401845:	pop    rbx
  401846:	ret    
  401847:	nop    WORD PTR [rax+rax*1+0x0]
  401850:	mov    ecx,0x4
  401855:	mov    edx,0x4
  40185a:	mov    esi,0x1
  40185f:	mov    rdi,rbx
  401862:	call   402b30 <flatcc_verify_field@@Base>
  401867:	test   eax,eax
  401869:	jne    401845 <_start@@Base+0x275>
  40186b:	xor    edx,edx
  40186d:	mov    esi,0x2
  401872:	mov    rdi,rbx
  401875:	call   402b80 <flatcc_verify_string_field@@Base>
  40187a:	test   eax,eax
  40187c:	jne    401845 <_start@@Base+0x275>
  40187e:	mov    ecx,0x8
  401883:	mov    edx,0x8
  401888:	mov    esi,0x3
  40188d:	mov    rdi,rbx
  401890:	call   402b30 <flatcc_verify_field@@Base>
  401895:	test   eax,eax
  401897:	jne    401845 <_start@@Base+0x275>
  401899:	xor    edx,edx
  40189b:	mov    esi,0x4
  4018a0:	mov    rdi,rbx
  4018a3:	call   402b80 <flatcc_verify_string_field@@Base>
  4018a8:	test   eax,eax
  4018aa:	jne    401845 <_start@@Base+0x275>
  4018ac:	mov    ecx,0x8
  4018b1:	mov    edx,0x8
  4018b6:	mov    esi,0x5
  4018bb:	mov    rdi,rbx
  4018be:	call   402b30 <flatcc_verify_field@@Base>
  4018c3:	test   eax,eax
  4018c5:	jne    401845 <_start@@Base+0x275>
  4018cb:	mov    ecx,0x4
  4018d0:	mov    edx,0x4
  4018d5:	mov    esi,0x6
  4018da:	mov    rdi,rbx
  4018dd:	call   402b30 <flatcc_verify_field@@Base>
  4018e2:	test   eax,eax
  4018e4:	jne    401845 <_start@@Base+0x275>
  4018ea:	mov    ecx,0x8
  4018ef:	mov    edx,0x8
  4018f4:	mov    esi,0x7
  4018f9:	mov    rdi,rbx
  4018fc:	call   402b30 <flatcc_verify_field@@Base>
  401901:	test   eax,eax
  401903:	jne    401845 <_start@@Base+0x275>
  401909:	mov    rdi,rbx
  40190c:	mov    ecx,0x4
  401911:	mov    edx,0x4
  401916:	mov    esi,0x8
  40191b:	pop    rbx
  40191c:	jmp    402b30 <flatcc_verify_field@@Base>
  401921:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40192c:	nop    DWORD PTR [rax+0x0]
  401930:	endbr64 
  401934:	push   rbx
  401935:	xor    edx,edx
  401937:	xor    esi,esi
  401939:	lea    rcx,[rip+0xfffffffffffffef0]        # 401830 <_start@@Base+0x260>
  401940:	mov    rbx,rdi
  401943:	call   402ec0 <flatcc_verify_table_field@@Base>
  401948:	test   eax,eax
  40194a:	je     401950 <_start@@Base+0x380>
  40194c:	pop    rbx
  40194d:	ret    
  40194e:	xchg   ax,ax
  401950:	xor    edx,edx
  401952:	lea    rcx,[rip+0x6d7]        # 402030 <_start@@Base+0xa60>
  401959:	mov    esi,0x1
  40195e:	mov    rdi,rbx
  401961:	call   402ec0 <flatcc_verify_table_field@@Base>
  401966:	test   eax,eax
  401968:	jne    40194c <_start@@Base+0x37c>
  40196a:	mov    rdi,rbx
  40196d:	lea    rcx,[rip+0xfffffffffffffdac]        # 401720 <_start@@Base+0x150>
  401974:	xor    edx,edx
  401976:	mov    esi,0x2
  40197b:	pop    rbx
  40197c:	jmp    402ec0 <flatcc_verify_table_field@@Base>
  401981:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40198c:	nop    DWORD PTR [rax+0x0]
  401990:	endbr64 
  401994:	push   rbx
  401995:	xor    esi,esi
  401997:	mov    ecx,0x10
  40199c:	mov    edx,0x20
  4019a1:	mov    rbx,rdi
  4019a4:	call   402b30 <flatcc_verify_field@@Base>
  4019a9:	test   eax,eax
  4019ab:	je     4019b0 <_start@@Base+0x3e0>
  4019ad:	pop    rbx
  4019ae:	ret    
  4019af:	nop
  4019b0:	mov    ecx,0x2
  4019b5:	mov    edx,0x2
  4019ba:	mov    esi,0x2
  4019bf:	mov    rdi,rbx
  4019c2:	call   402b30 <flatcc_verify_field@@Base>
  4019c7:	test   eax,eax
  4019c9:	jne    4019ad <_start@@Base+0x3dd>
  4019cb:	mov    ecx,0x2
  4019d0:	mov    edx,0x2
  4019d5:	mov    esi,0x1
  4019da:	mov    rdi,rbx
  4019dd:	call   402b30 <flatcc_verify_field@@Base>
  4019e2:	test   eax,eax
  4019e4:	jne    4019ad <_start@@Base+0x3dd>
  4019e6:	mov    edx,0x1
  4019eb:	mov    esi,0x3
  4019f0:	mov    rdi,rbx
  4019f3:	call   402b80 <flatcc_verify_string_field@@Base>
  4019f8:	test   eax,eax
  4019fa:	jne    4019ad <_start@@Base+0x3dd>
  4019fc:	mov    ecx,0x1
  401a01:	mov    edx,0x1
  401a06:	mov    esi,0x6
  401a0b:	mov    rdi,rbx
  401a0e:	call   402b30 <flatcc_verify_field@@Base>
  401a13:	test   eax,eax
  401a15:	jne    4019ad <_start@@Base+0x3dd>
  401a17:	xor    edx,edx
  401a19:	mov    r9d,0xffffffff
  401a1f:	mov    r8d,0x1
  401a25:	mov    ecx,0x1
  401a2a:	mov    esi,0x5
  401a2f:	mov    rdi,rbx
  401a32:	call   402c30 <flatcc_verify_vector_field@@Base>
  401a37:	test   eax,eax
  401a39:	jne    4019ad <_start@@Base+0x3dd>
  401a3f:	xor    edx,edx
  401a41:	lea    rcx,[rip+0xffffffffffffff48]        # 401990 <_start@@Base+0x3c0>
  401a48:	mov    esi,0xb
  401a4d:	mov    rdi,rbx
  401a50:	call   403040 <flatcc_verify_table_vector_field@@Base>
  401a55:	test   eax,eax
  401a57:	jne    4019ad <_start@@Base+0x3dd>
  401a5d:	xor    edx,edx
  401a5f:	mov    esi,0xa
  401a64:	mov    rdi,rbx
  401a67:	call   402d00 <flatcc_verify_string_vector_field@@Base>
  401a6c:	test   eax,eax
  401a6e:	jne    4019ad <_start@@Base+0x3dd>
  401a74:	xor    edx,edx
  401a76:	mov    esi,0x1c
  401a7b:	mov    rdi,rbx
  401a7e:	call   402d00 <flatcc_verify_string_vector_field@@Base>
  401a83:	test   eax,eax
  401a85:	jne    4019ad <_start@@Base+0x3dd>
  401a8b:	xor    edx,edx
  401a8d:	mov    r9d,0xffffffff
  401a93:	mov    r8d,0x1
  401a99:	mov    ecx,0x1
  401a9e:	mov    esi,0x18
  401aa3:	mov    rdi,rbx
  401aa6:	call   402c30 <flatcc_verify_vector_field@@Base>
  401aab:	test   eax,eax
  401aad:	jne    4019ad <_start@@Base+0x3dd>
  401ab3:	xor    edx,edx
  401ab5:	mov    r9d,0x1fffffff
  401abb:	mov    r8d,0x4
  401ac1:	mov    ecx,0x8
  401ac6:	mov    esi,0x1d
  401acb:	mov    rdi,rbx
  401ace:	call   402c30 <flatcc_verify_vector_field@@Base>
  401ad3:	test   eax,eax
  401ad5:	jne    4019ad <_start@@Base+0x3dd>
  401adb:	xor    edx,edx
  401add:	lea    rcx,[rip+0xfffffffffffffeac]        # 401990 <_start@@Base+0x3c0>
  401ae4:	mov    esi,0xc
  401ae9:	mov    rdi,rbx
  401aec:	call   402ec0 <flatcc_verify_table_field@@Base>
  401af1:	test   eax,eax
  401af3:	jne    4019ad <_start@@Base+0x3dd>
  401af9:	xor    edx,edx
  401afb:	lea    rcx,[rip+0x34e]        # 401e50 <_start@@Base+0x880>
  401b02:	mov    esi,0x8
  401b07:	mov    rdi,rbx
  401b0a:	call   403ce0 <flatcc_verify_union_field@@Base>
  401b0f:	test   eax,eax
  401b11:	jne    4019ad <_start@@Base+0x3dd>
  401b17:	xor    edx,edx
  401b19:	mov    r9d,0x3fffffff
  401b1f:	mov    r8d,0x2
  401b25:	mov    ecx,0x4
  401b2a:	mov    esi,0x9
  401b2f:	mov    rdi,rbx
  401b32:	call   402c30 <flatcc_verify_vector_field@@Base>
  401b37:	test   eax,eax
  401b39:	jne    4019ad <_start@@Base+0x3dd>
  401b3f:	xor    edx,edx
  401b41:	mov    r9d,0x3fffffff
  401b47:	mov    r8d,0x2
  401b4d:	mov    ecx,0x4
  401b52:	mov    esi,0x1f
  401b57:	mov    rdi,rbx
  401b5a:	call   402c30 <flatcc_verify_vector_field@@Base>
  401b5f:	test   eax,eax
  401b61:	jne    4019ad <_start@@Base+0x3dd>
  401b67:	xor    ecx,ecx
  401b69:	xor    edx,edx
  401b6b:	lea    r9,[rip+0xfffffffffffffe1e]        # 401990 <_start@@Base+0x3c0>
  401b72:	mov    r8d,0x1
  401b78:	mov    esi,0xd
  401b7d:	mov    rdi,rbx
  401b80:	call   403b00 <flatcc_verify_table_as_nested_root@@Base>
  401b85:	test   eax,eax
  401b87:	jne    4019ad <_start@@Base+0x3dd>
  401b8d:	xor    edx,edx
  401b8f:	lea    rcx,[rip+0xfffffffffffffc3a]        # 4017d0 <_start@@Base+0x200>
  401b96:	mov    esi,0xe
  401b9b:	mov    rdi,rbx
  401b9e:	call   402ec0 <flatcc_verify_table_field@@Base>
  401ba3:	test   eax,eax
  401ba5:	jne    4019ad <_start@@Base+0x3dd>
  401bab:	mov    ecx,0x1
  401bb0:	mov    edx,0x1
  401bb5:	mov    esi,0xf
  401bba:	mov    rdi,rbx
  401bbd:	call   402b30 <flatcc_verify_field@@Base>
  401bc2:	test   eax,eax
  401bc4:	jne    4019ad <_start@@Base+0x3dd>
  401bca:	mov    ecx,0x4
  401bcf:	mov    edx,0x4
  401bd4:	mov    esi,0x10
  401bd9:	mov    rdi,rbx
  401bdc:	call   402b30 <flatcc_verify_field@@Base>
  401be1:	test   eax,eax
  401be3:	jne    4019ad <_start@@Base+0x3dd>
  401be9:	mov    ecx,0x4
  401bee:	mov    edx,0x4
  401bf3:	mov    esi,0x11
  401bf8:	mov    rdi,rbx
  401bfb:	call   402b30 <flatcc_verify_field@@Base>
  401c00:	test   eax,eax
  401c02:	jne    4019ad <_start@@Base+0x3dd>
  401c08:	mov    ecx,0x8
  401c0d:	mov    edx,0x8
  401c12:	mov    esi,0x12
  401c17:	mov    rdi,rbx
  401c1a:	call   402b30 <flatcc_verify_field@@Base>
  401c1f:	test   eax,eax
  401c21:	jne    4019ad <_start@@Base+0x3dd>
  401c27:	mov    ecx,0x8
  401c2c:	mov    edx,0x8
  401c31:	mov    esi,0x13
  401c36:	mov    rdi,rbx
  401c39:	call   402b30 <flatcc_verify_field@@Base>
  401c3e:	test   eax,eax
  401c40:	jne    4019ad <_start@@Base+0x3dd>
  401c46:	mov    ecx,0x4
  401c4b:	mov    edx,0x4
  401c50:	mov    esi,0x14
  401c55:	mov    rdi,rbx
  401c58:	call   402b30 <flatcc_verify_field@@Base>
  401c5d:	test   eax,eax
  401c5f:	jne    4019ad <_start@@Base+0x3dd>
  401c65:	mov    ecx,0x4
  401c6a:	mov    edx,0x4
  401c6f:	mov    esi,0x15
  401c74:	mov    rdi,rbx
  401c77:	call   402b30 <flatcc_verify_field@@Base>
  401c7c:	test   eax,eax
  401c7e:	jne    4019ad <_start@@Base+0x3dd>
  401c84:	mov    ecx,0x8
  401c89:	mov    edx,0x8
  401c8e:	mov    esi,0x16
  401c93:	mov    rdi,rbx
  401c96:	call   402b30 <flatcc_verify_field@@Base>
  401c9b:	test   eax,eax
  401c9d:	jne    4019ad <_start@@Base+0x3dd>
  401ca3:	mov    ecx,0x8
  401ca8:	mov    edx,0x8
  401cad:	mov    esi,0x17
  401cb2:	mov    rdi,rbx
  401cb5:	call   402b30 <flatcc_verify_field@@Base>
  401cba:	test   eax,eax
  401cbc:	jne    4019ad <_start@@Base+0x3dd>
  401cc2:	mov    ecx,0x4
  401cc7:	mov    edx,0x4
  401ccc:	mov    esi,0x19
  401cd1:	mov    rdi,rbx
  401cd4:	call   402b30 <flatcc_verify_field@@Base>
  401cd9:	test   eax,eax
  401cdb:	jne    4019ad <_start@@Base+0x3dd>
  401ce1:	mov    ecx,0x4
  401ce6:	mov    edx,0x4
  401ceb:	mov    esi,0x1a
  401cf0:	mov    rdi,rbx
  401cf3:	call   402b30 <flatcc_verify_field@@Base>
  401cf8:	test   eax,eax
  401cfa:	jne    4019ad <_start@@Base+0x3dd>
  401d00:	mov    ecx,0x4
  401d05:	mov    edx,0x4
  401d0a:	mov    esi,0x1b
  401d0f:	mov    rdi,rbx
  401d12:	call   402b30 <flatcc_verify_field@@Base>
  401d17:	test   eax,eax
  401d19:	jne    4019ad <_start@@Base+0x3dd>
  401d1f:	xor    edx,edx
  401d21:	mov    r9d,0xffffffff
  401d27:	mov    r8d,0x1
  401d2d:	mov    ecx,0x1
  401d32:	mov    esi,0x1e
  401d37:	mov    rdi,rbx
  401d3a:	call   402c30 <flatcc_verify_vector_field@@Base>
  401d3f:	test   eax,eax
  401d41:	jne    4019ad <_start@@Base+0x3dd>
  401d47:	xor    edx,edx
  401d49:	mov    r9d,0x1fffffff
  401d4f:	mov    r8d,0x8
  401d55:	mov    ecx,0x8
  401d5a:	mov    esi,0x20
  401d5f:	mov    rdi,rbx
  401d62:	call   402c30 <flatcc_verify_vector_field@@Base>
  401d67:	test   eax,eax
  401d69:	jne    4019ad <_start@@Base+0x3dd>
  401d6f:	xor    edx,edx
  401d71:	mov    r9d,0x1fffffff
  401d77:	mov    r8d,0x8
  401d7d:	mov    ecx,0x8
  401d82:	mov    esi,0x21
  401d87:	mov    rdi,rbx
  401d8a:	call   402c30 <flatcc_verify_vector_field@@Base>
  401d8f:	test   eax,eax
  401d91:	jne    4019ad <_start@@Base+0x3dd>
  401d97:	xor    edx,edx
  401d99:	lea    rcx,[rip+0xfffffffffffff920]        # 4016c0 <_start@@Base+0xf0>
  401da0:	mov    esi,0x22
  401da5:	mov    rdi,rbx
  401da8:	call   402ec0 <flatcc_verify_table_field@@Base>
  401dad:	test   eax,eax
  401daf:	jne    4019ad <_start@@Base+0x3dd>
  401db5:	mov    rdi,rbx
  401db8:	lea    rcx,[rip+0x11]        # 401dd0 <_start@@Base+0x800>
  401dbf:	xor    edx,edx
  401dc1:	mov    esi,0x23
  401dc6:	pop    rbx
  401dc7:	jmp    402ec0 <flatcc_verify_table_field@@Base>
  401dcc:	nop    DWORD PTR [rax+0x0]
  401dd0:	endbr64 
  401dd4:	push   rbx
  401dd5:	xor    edx,edx
  401dd7:	xor    esi,esi
  401dd9:	mov    r9d,0xffffffff
  401ddf:	mov    r8d,0x1
  401de5:	mov    ecx,0x1
  401dea:	mov    rbx,rdi
  401ded:	call   402c30 <flatcc_verify_vector_field@@Base>
  401df2:	test   eax,eax
  401df4:	je     401e00 <_start@@Base+0x830>
  401df6:	pop    rbx
  401df7:	ret    
  401df8:	nop    DWORD PTR [rax+rax*1+0x0]
  401e00:	xor    edx,edx
  401e02:	mov    r9d,0xffffffff
  401e08:	mov    r8d,0x1
  401e0e:	mov    ecx,0x1
  401e13:	mov    esi,0x1
  401e18:	mov    rdi,rbx
  401e1b:	call   402c30 <flatcc_verify_vector_field@@Base>
  401e20:	test   eax,eax
  401e22:	jne    401df6 <_start@@Base+0x826>
  401e24:	mov    rdi,rbx
  401e27:	lea    r9,[rip+0xfffffffffffffb62]        # 401990 <_start@@Base+0x3c0>
  401e2e:	mov    r8d,0x1
  401e34:	xor    ecx,ecx
  401e36:	xor    edx,edx
  401e38:	mov    esi,0x2
  401e3d:	pop    rbx
  401e3e:	jmp    403b00 <flatcc_verify_table_as_nested_root@@Base>
  401e43:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  401e4e:	xchg   ax,ax
  401e50:	endbr64 
  401e54:	movzx  eax,BYTE PTR [rdi+0x10]
  401e58:	cmp    al,0x2
  401e5a:	je     401e90 <_start@@Base+0x8c0>
  401e5c:	jbe    401e78 <_start@@Base+0x8a8>
  401e5e:	cmp    al,0x3
  401e60:	je     401ea0 <_start@@Base+0x8d0>
  401e62:	cmp    al,0x4
  401e64:	jne    401eb0 <_start@@Base+0x8e0>
  401e66:	lea    rsi,[rip+0x53]        # 401ec0 <_start@@Base+0x8f0>
  401e6d:	jmp    4033a0 <flatcc_verify_union_table@@Base>
  401e72:	nop    WORD PTR [rax+rax*1+0x0]
  401e78:	cmp    al,0x1
  401e7a:	jne    401eb0 <_start@@Base+0x8e0>
  401e7c:	lea    rsi,[rip+0xfffffffffffffb0d]        # 401990 <_start@@Base+0x3c0>
  401e83:	jmp    4033a0 <flatcc_verify_union_table@@Base>
  401e88:	nop    DWORD PTR [rax+rax*1+0x0]
  401e90:	lea    rsi,[rip+0xfffffffffffff8c9]        # 401760 <_start@@Base+0x190>
  401e97:	jmp    4033a0 <flatcc_verify_union_table@@Base>
  401e9c:	nop    DWORD PTR [rax+0x0]
  401ea0:	lea    rsi,[rip+0x179]        # 402020 <_start@@Base+0xa50>
  401ea7:	jmp    4033a0 <flatcc_verify_union_table@@Base>
  401eac:	nop    DWORD PTR [rax+0x0]
  401eb0:	xor    eax,eax
  401eb2:	ret    
  401eb3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  401ebe:	xchg   ax,ax
  401ec0:	endbr64 
  401ec4:	push   rbx
  401ec5:	xor    edx,edx
  401ec7:	xor    esi,esi
  401ec9:	lea    rcx,[rip+0xfffffffffffffa60]        # 401930 <_start@@Base+0x360>
  401ed0:	mov    rbx,rdi
  401ed3:	call   402ec0 <flatcc_verify_table_field@@Base>
  401ed8:	test   eax,eax
  401eda:	je     401ee0 <_start@@Base+0x910>
  401edc:	pop    rbx
  401edd:	ret    
  401ede:	xchg   ax,ax
  401ee0:	xor    edx,edx
  401ee2:	lea    rcx,[rip+0x37]        # 401f20 <_start@@Base+0x950>
  401ee9:	mov    esi,0x1
  401eee:	mov    rdi,rbx
  401ef1:	call   402ec0 <flatcc_verify_table_field@@Base>
  401ef6:	test   eax,eax
  401ef8:	jne    401edc <_start@@Base+0x90c>
  401efa:	mov    rdi,rbx
  401efd:	lea    rcx,[rip+0xffffffffffffff4c]        # 401e50 <_start@@Base+0x880>
  401f04:	xor    edx,edx
  401f06:	mov    esi,0x3
  401f0b:	pop    rbx
  401f0c:	jmp    403e50 <flatcc_verify_union_vector_field@@Base>
  401f11:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  401f1c:	nop    DWORD PTR [rax+0x0]
  401f20:	endbr64 
  401f24:	push   rbx
  401f25:	xor    edx,edx
  401f27:	lea    rcx,[rip+0x82]        # 401fb0 <_start@@Base+0x9e0>
  401f2e:	mov    esi,0x1
  401f33:	mov    rbx,rdi
  401f36:	call   403ce0 <flatcc_verify_union_field@@Base>
  401f3b:	test   eax,eax
  401f3d:	je     401f48 <_start@@Base+0x978>
  401f3f:	pop    rbx
  401f40:	ret    
  401f41:	nop    DWORD PTR [rax+0x0]
  401f48:	xor    edx,edx
  401f4a:	lea    rcx,[rip+0x5f]        # 401fb0 <_start@@Base+0x9e0>
  401f51:	mov    esi,0x3
  401f56:	mov    rdi,rbx
  401f59:	call   403ce0 <flatcc_verify_union_field@@Base>
  401f5e:	test   eax,eax
  401f60:	jne    401f3f <_start@@Base+0x96f>
  401f62:	xor    edx,edx
  401f64:	lea    rcx,[rip+0x45]        # 401fb0 <_start@@Base+0x9e0>
  401f6b:	mov    esi,0x5
  401f70:	mov    rdi,rbx
  401f73:	call   403ce0 <flatcc_verify_union_field@@Base>
  401f78:	test   eax,eax
  401f7a:	jne    401f3f <_start@@Base+0x96f>
  401f7c:	xor    edx,edx
  401f7e:	lea    rcx,[rip+0x2b]        # 401fb0 <_start@@Base+0x9e0>
  401f85:	mov    esi,0x7
  401f8a:	mov    rdi,rbx
  401f8d:	call   403ce0 <flatcc_verify_union_field@@Base>
  401f92:	test   eax,eax
  401f94:	jne    401f3f <_start@@Base+0x96f>
  401f96:	mov    rdi,rbx
  401f99:	lea    rcx,[rip+0x10]        # 401fb0 <_start@@Base+0x9e0>
  401fa0:	xor    edx,edx
  401fa2:	mov    esi,0x9
  401fa7:	pop    rbx
  401fa8:	jmp    403e50 <flatcc_verify_union_vector_field@@Base>
  401fad:	nop    DWORD PTR [rax]
  401fb0:	endbr64 
  401fb4:	movzx  eax,BYTE PTR [rdi+0x10]
  401fb8:	cmp    al,0xa
  401fba:	ja     401fe0 <_start@@Base+0xa10>
  401fbc:	cmp    al,0x9
  401fbe:	jae    401ff0 <_start@@Base+0xa20>
  401fc0:	cmp    al,0x2
  401fc2:	je     402008 <_start@@Base+0xa38>
  401fc4:	cmp    al,0x8
  401fc6:	jne    402000 <_start@@Base+0xa30>
  401fc8:	mov    edx,0x2
  401fcd:	mov    esi,0x2
  401fd2:	jmp    4034c0 <flatcc_verify_union_struct@@Base>
  401fd7:	nop    WORD PTR [rax+rax*1+0x0]
  401fe0:	cmp    al,0xb
  401fe2:	je     401fe8 <_start@@Base+0xa18>
  401fe4:	cmp    al,0xff
  401fe6:	jne    402000 <_start@@Base+0xa30>
  401fe8:	jmp    403510 <flatcc_verify_union_string@@Base>
  401fed:	nop    DWORD PTR [rax]
  401ff0:	mov    edx,0x4
  401ff5:	mov    esi,0x4
  401ffa:	jmp    4034c0 <flatcc_verify_union_struct@@Base>
  401fff:	nop
  402000:	xor    eax,eax
  402002:	ret    
  402003:	nop    DWORD PTR [rax+rax*1+0x0]
  402008:	lea    rsi,[rip+0xfffffffffffff6c1]        # 4016d0 <_start@@Base+0x100>
  40200f:	jmp    4033a0 <flatcc_verify_union_table@@Base>
  402014:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40201f:	nop
  402020:	endbr64 
  402024:	xor    eax,eax
  402026:	ret    
  402027:	nop    WORD PTR [rax+rax*1+0x0]
  402030:	endbr64 
  402034:	push   rbx
  402035:	xor    esi,esi
  402037:	mov    ecx,0x8
  40203c:	mov    edx,0x8
  402041:	mov    rbx,rdi
  402044:	call   402b30 <flatcc_verify_field@@Base>
  402049:	test   eax,eax
  40204b:	je     402050 <_start@@Base+0xa80>
  40204d:	pop    rbx
  40204e:	ret    
  40204f:	nop
  402050:	mov    rdi,rbx
  402053:	mov    ecx,0x4
  402058:	mov    edx,0x4
  40205d:	mov    esi,0x1
  402062:	pop    rbx
  402063:	jmp    402b30 <flatcc_verify_field@@Base>
  402068:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402070 <verify_monster@@Base>:
  402070:	endbr64 
  402074:	sub    rsp,0x8
  402078:	test   rdi,rdi
  40207b:	je     402086 <verify_monster@@Base+0x16>
  40207d:	cmp    DWORD PTR [rdi+0x4],0x534e4f4d
  402084:	je     4020a8 <verify_monster@@Base+0x38>
  402086:	lea    rsi,[rip+0x34b2]        # 40553f <_IO_stdin_used@@Base+0x53f>
  40208d:	mov    edi,0x1
  402092:	xor    eax,eax
  402094:	call   4011e0 <__printf_chk@plt>
  402099:	mov    eax,0xffffffff
  40209e:	add    rsp,0x8
  4020a2:	ret    
  4020a3:	nop    DWORD PTR [rax+rax*1+0x0]
  4020a8:	mov    r8d,DWORD PTR [rdi]
  4020ab:	add    r8,rdi
  4020ae:	je     402086 <verify_monster@@Base+0x16>
  4020b0:	movsxd rax,DWORD PTR [r8]
  4020b3:	mov    r9,r8
  4020b6:	sub    r9,rax
  4020b9:	movzx  r10d,WORD PTR [r9]
  4020bd:	cmp    r10w,0x9
  4020c2:	jbe    4023f0 <verify_monster@@Base+0x380>
  4020c8:	movzx  eax,WORD PTR [r9+0x8]
  4020cd:	test   ax,ax
  4020d0:	je     4023f0 <verify_monster@@Base+0x380>
  4020d6:	cmp    WORD PTR [r8+rax*1],0x50
  4020dc:	jne    4023f0 <verify_monster@@Base+0x380>
  4020e2:	movzx  eax,WORD PTR [r9+0x4]
  4020e7:	test   ax,ax
  4020ea:	je     4027e0 <verify_monster@@Base+0x770>
  4020f0:	add    rax,r8
  4020f3:	je     4027e0 <verify_monster@@Base+0x770>
  4020f9:	mov    rdx,rax
  4020fc:	sub    rdx,rdi
  4020ff:	and    edx,0xf
  402102:	jne    402711 <verify_monster@@Base+0x6a1>
  402108:	vmovss xmm0,DWORD PTR [rip+0x3650]        # 405760 <_IO_stdin_used@@Base+0x760>
  402110:	vucomiss xmm0,DWORD PTR [rax]
  402114:	jp     4026d7 <verify_monster@@Base+0x667>
  40211a:	jne    4026d7 <verify_monster@@Base+0x667>
  402120:	vmovss xmm0,DWORD PTR [rax+0x4]
  402125:	vucomiss xmm0,DWORD PTR [rip+0x3637]        # 405764 <_IO_stdin_used@@Base+0x764>
  40212d:	jp     4026f4 <verify_monster@@Base+0x684>
  402133:	jne    4026f4 <verify_monster@@Base+0x684>
  402139:	vmovss xmm0,DWORD PTR [rax+0x8]
  40213e:	vucomiss xmm0,DWORD PTR [rip+0x3622]        # 405768 <_IO_stdin_used@@Base+0x768>
  402146:	jp     40274b <verify_monster@@Base+0x6db>
  40214c:	jne    40274b <verify_monster@@Base+0x6db>
  402152:	vmovsd xmm0,QWORD PTR [rip+0x3616]        # 405770 <_IO_stdin_used@@Base+0x770>
  40215a:	vucomisd xmm0,QWORD PTR [rax+0x10]
  40215f:	jp     40272e <verify_monster@@Base+0x6be>
  402165:	jne    40272e <verify_monster@@Base+0x6be>
  40216b:	cmp    BYTE PTR [rax+0x18],0x2
  40216f:	jne    40269d <verify_monster@@Base+0x62d>
  402175:	cmp    WORD PTR [rax+0x1a],0x5
  40217a:	jne    402680 <verify_monster@@Base+0x610>
  402180:	cmp    BYTE PTR [rax+0x1c],0x6
  402184:	jne    402680 <verify_monster@@Base+0x610>
  40218a:	cmp    r10w,0xb
  40218f:	jbe    40286d <verify_monster@@Base+0x7fd>
  402195:	movzx  eax,WORD PTR [r9+0xa]
  40219a:	test   ax,ax
  40219d:	je     40286d <verify_monster@@Base+0x7fd>
  4021a3:	add    rax,r8
  4021a6:	mov    ecx,DWORD PTR [rax]
  4021a8:	lea    rsi,[rax+rcx*1+0x4]
  4021ad:	test   rsi,rsi
  4021b0:	je     4023d0 <verify_monster@@Base+0x360>
  4021b6:	cmp    DWORD PTR [rsi-0x4],0x9
  4021ba:	jne    4023d0 <verify_monster@@Base+0x360>
  4021c0:	mov    ecx,0xa
  4021c5:	lea    rdi,[rip+0x33fe]        # 4055ca <_IO_stdin_used@@Base+0x5ca>
  4021cc:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4021ce:	seta   al
  4021d1:	sbb    al,0x0
  4021d3:	test   al,al
  4021d5:	jne    4026ba <verify_monster@@Base+0x64a>
  4021db:	cmp    r10w,0xf
  4021e0:	jbe    4023b0 <verify_monster@@Base+0x340>
  4021e6:	movzx  eax,WORD PTR [r9+0xe]
  4021eb:	test   ax,ax
  4021ee:	je     4023b0 <verify_monster@@Base+0x340>
  4021f4:	add    rax,r8
  4021f7:	mov    ecx,DWORD PTR [rax]
  4021f9:	lea    rcx,[rax+rcx*1+0x4]
  4021fe:	test   rcx,rcx
  402201:	je     4023b0 <verify_monster@@Base+0x340>
  402207:	cmp    DWORD PTR [rcx-0x4],0x5
  40220b:	jne    4023b0 <verify_monster@@Base+0x340>
  402211:	movzx  eax,BYTE PTR [rcx+rdx*1]
  402215:	cmp    eax,edx
  402217:	jne    402450 <verify_monster@@Base+0x3e0>
  40221d:	inc    rdx
  402220:	cmp    rdx,0x5
  402224:	jne    402211 <verify_monster@@Base+0x1a1>
  402226:	cmp    r10w,0x19
  40222b:	jbe    40288c <verify_monster@@Base+0x81c>
  402231:	movzx  eax,WORD PTR [r9+0x18]
  402236:	test   ax,ax
  402239:	je     40288c <verify_monster@@Base+0x81c>
  40223f:	add    rax,r8
  402242:	mov    edx,DWORD PTR [rax]
  402244:	lea    rax,[rax+rdx*1+0x4]
  402249:	test   rax,rax
  40224c:	je     40288c <verify_monster@@Base+0x81c>
  402252:	cmp    DWORD PTR [rax-0x4],0x2
  402256:	jne    402785 <verify_monster@@Base+0x715>
  40225c:	mov    edx,DWORD PTR [rax]
  40225e:	mov    ecx,0x6
  402263:	lea    rsi,[rax+rdx*1+0x4]
  402268:	lea    rdi,[rip+0x33d0]        # 40563f <_IO_stdin_used@@Base+0x63f>
  40226f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402271:	seta   dl
  402274:	sbb    dl,0x0
  402277:	test   dl,dl
  402279:	jne    402837 <verify_monster@@Base+0x7c7>
  40227f:	mov    edx,DWORD PTR [rax+0x4]
  402282:	mov    ecx,0x6
  402287:	lea    rsi,[rax+rdx*1+0x8]
  40228c:	lea    rdi,[rip+0x33b2]        # 405645 <_IO_stdin_used@@Base+0x645>
  402293:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402295:	seta   al
  402298:	sbb    al,0x0
  40229a:	test   al,al
  40229c:	jne    402768 <verify_monster@@Base+0x6f8>
  4022a2:	movzx  eax,WORD PTR [r9+0x12]
  4022a7:	test   ax,ax
  4022aa:	je     402410 <verify_monster@@Base+0x3a0>
  4022b0:	cmp    BYTE PTR [r8+rax*1],0x1
  4022b5:	jne    402410 <verify_monster@@Base+0x3a0>
  4022bb:	movzx  eax,WORD PTR [r9+0x14]
  4022c0:	test   ax,ax
  4022c3:	je     402852 <verify_monster@@Base+0x7e2>
  4022c9:	add    rax,r8
  4022cc:	mov    edx,DWORD PTR [rax]
  4022ce:	add    rax,rdx
  4022d1:	je     402852 <verify_monster@@Base+0x7e2>
  4022d7:	movsxd rdx,DWORD PTR [rax]
  4022da:	mov    rsi,rax
  4022dd:	sub    rsi,rdx
  4022e0:	cmp    WORD PTR [rsi],0xb
  4022e4:	jbe    40286d <verify_monster@@Base+0x7fd>
  4022ea:	movzx  edx,WORD PTR [rsi+0xa]
  4022ee:	test   dx,dx
  4022f1:	je     40286d <verify_monster@@Base+0x7fd>
  4022f7:	add    rax,rdx
  4022fa:	mov    edx,DWORD PTR [rax]
  4022fc:	mov    ecx,0x5
  402301:	lea    rsi,[rax+rdx*1+0x4]
  402306:	lea    rdi,[rip+0x3367]        # 405674 <_IO_stdin_used@@Base+0x674>
  40230d:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40230f:	seta   al
  402312:	sbb    al,0x0
  402314:	movsx  eax,al
  402317:	test   eax,eax
  402319:	jne    4027a2 <verify_monster@@Base+0x732>
  40231f:	movzx  edx,WORD PTR [r9+0x16]
  402324:	test   dx,dx
  402327:	je     402430 <verify_monster@@Base+0x3c0>
  40232d:	add    rdx,r8
  402330:	mov    ecx,DWORD PTR [rdx]
  402332:	lea    rdx,[rdx+rcx*1+0x4]
  402337:	test   rdx,rdx
  40233a:	je     402430 <verify_monster@@Base+0x3c0>
  402340:	cmp    DWORD PTR [rdx-0x4],0x2
  402344:	jne    402430 <verify_monster@@Base+0x3c0>
  40234a:	cmp    WORD PTR [rdx],0xa
  40234e:	jne    40281a <verify_monster@@Base+0x7aa>
  402354:	cmp    BYTE PTR [rdx+0x2],0x14
  402358:	jne    4027fd <verify_monster@@Base+0x78d>
  40235e:	cmp    rdx,0xfffffffffffffffc
  402362:	je     402660 <verify_monster@@Base+0x5f0>
  402368:	cmp    WORD PTR [rdx+0x4],0x1e
  40236d:	jne    402660 <verify_monster@@Base+0x5f0>
  402373:	cmp    BYTE PTR [rdx+0x6],0x28
  402377:	jne    4027bf <verify_monster@@Base+0x74f>
  40237d:	cmp    r10w,0x25
  402382:	ja     402470 <verify_monster@@Base+0x400>
  402388:	lea    rcx,[rip+0x33c1]        # 405750 <_IO_stdin_used@@Base+0x750>
  40238f:	mov    edx,0x94
  402394:	lea    rsi,[rip+0x2ead]        # 405248 <_IO_stdin_used@@Base+0x248>
  40239b:	lea    rdi,[rip+0x2f16]        # 4052b8 <_IO_stdin_used@@Base+0x2b8>
  4023a2:	call   401190 <__assert_fail@plt>
  4023a7:	nop    WORD PTR [rax+rax*1+0x0]
  4023b0:	lea    rsi,[rip+0x3232]        # 4055e9 <_IO_stdin_used@@Base+0x5e9>
  4023b7:	mov    edi,0x1
  4023bc:	xor    eax,eax
  4023be:	call   4011e0 <__printf_chk@plt>
  4023c3:	mov    eax,0xffffffff
  4023c8:	jmp    40209e <verify_monster@@Base+0x2e>
  4023cd:	nop    DWORD PTR [rax]
  4023d0:	lea    rsi,[rip+0x31d7]        # 4055ae <_IO_stdin_used@@Base+0x5ae>
  4023d7:	mov    edi,0x1
  4023dc:	xor    eax,eax
  4023de:	call   4011e0 <__printf_chk@plt>
  4023e3:	mov    eax,0xffffffff
  4023e8:	add    rsp,0x8
  4023ec:	ret    
  4023ed:	nop    DWORD PTR [rax]
  4023f0:	lea    rsi,[rip+0x2cb9]        # 4050b0 <_IO_stdin_used@@Base+0xb0>
  4023f7:	mov    edi,0x1
  4023fc:	xor    eax,eax
  4023fe:	call   4011e0 <__printf_chk@plt>
  402403:	mov    eax,0xffffffff
  402408:	jmp    40209e <verify_monster@@Base+0x2e>
  40240d:	nop    DWORD PTR [rax]
  402410:	lea    rsi,[rip+0x3234]        # 40564b <_IO_stdin_used@@Base+0x64b>
  402417:	mov    edi,0x1
  40241c:	xor    eax,eax
  40241e:	call   4011e0 <__printf_chk@plt>
  402423:	mov    eax,0xffffffff
  402428:	jmp    40209e <verify_monster@@Base+0x2e>
  40242d:	nop    DWORD PTR [rax]
  402430:	lea    rsi,[rip+0x2de9]        # 405220 <_IO_stdin_used@@Base+0x220>
  402437:	mov    edi,0x1
  40243c:	xor    eax,eax
  40243e:	call   4011e0 <__printf_chk@plt>
  402443:	mov    eax,0xffffffff
  402448:	jmp    40209e <verify_monster@@Base+0x2e>
  40244d:	nop    DWORD PTR [rax]
  402450:	lea    rsi,[rip+0x31ae]        # 405605 <_IO_stdin_used@@Base+0x605>
  402457:	mov    edi,0x1
  40245c:	xor    eax,eax
  40245e:	call   4011e0 <__printf_chk@plt>
  402463:	mov    eax,0xffffffff
  402468:	jmp    40209e <verify_monster@@Base+0x2e>
  40246d:	nop    DWORD PTR [rax]
  402470:	movzx  edx,WORD PTR [r9+0x24]
  402475:	test   dx,dx
  402478:	je     402388 <verify_monster@@Base+0x318>
  40247e:	cmp    DWORD PTR [r8+rdx*1],0xdd79c941
  402486:	jne    402388 <verify_monster@@Base+0x318>
  40248c:	cmp    r10w,0x27
  402491:	ja     4024b8 <verify_monster@@Base+0x448>
  402493:	lea    rcx,[rip+0x32b6]        # 405750 <_IO_stdin_used@@Base+0x750>
  40249a:	mov    edx,0x95
  40249f:	lea    rsi,[rip+0x2da2]        # 405248 <_IO_stdin_used@@Base+0x248>
  4024a6:	lea    rdi,[rip+0x2e43]        # 4052f0 <_IO_stdin_used@@Base+0x2f0>
  4024ad:	call   401190 <__assert_fail@plt>
  4024b2:	nop    WORD PTR [rax+rax*1+0x0]
  4024b8:	movzx  edx,WORD PTR [r9+0x26]
  4024bd:	test   dx,dx
  4024c0:	je     402493 <verify_monster@@Base+0x423>
  4024c2:	cmp    DWORD PTR [r8+rdx*1],0xdd79c941
  4024ca:	jne    402493 <verify_monster@@Base+0x423>
  4024cc:	cmp    r10w,0x29
  4024d1:	ja     4024f8 <verify_monster@@Base+0x488>
  4024d3:	lea    rcx,[rip+0x3276]        # 405750 <_IO_stdin_used@@Base+0x750>
  4024da:	mov    edx,0x96
  4024df:	lea    rsi,[rip+0x2d62]        # 405248 <_IO_stdin_used@@Base+0x248>
  4024e6:	lea    rdi,[rip+0x2e3b]        # 405328 <_IO_stdin_used@@Base+0x328>
  4024ed:	call   401190 <__assert_fail@plt>
  4024f2:	nop    WORD PTR [rax+rax*1+0x0]
  4024f8:	movzx  edx,WORD PTR [r9+0x28]
  4024fd:	test   dx,dx
  402500:	je     4024d3 <verify_monster@@Base+0x463>
  402502:	movabs rcx,0x6e0f80cdf27b9181
  40250c:	cmp    QWORD PTR [r8+rdx*1],rcx
  402510:	jne    4024d3 <verify_monster@@Base+0x463>
  402512:	cmp    r10w,0x2b
  402517:	ja     402540 <verify_monster@@Base+0x4d0>
  402519:	lea    rcx,[rip+0x3230]        # 405750 <_IO_stdin_used@@Base+0x750>
  402520:	mov    edx,0x97
  402525:	lea    rsi,[rip+0x2d1c]        # 405248 <_IO_stdin_used@@Base+0x248>
  40252c:	lea    rdi,[rip+0x2e35]        # 405368 <_IO_stdin_used@@Base+0x368>
  402533:	call   401190 <__assert_fail@plt>
  402538:	nop    DWORD PTR [rax+rax*1+0x0]
  402540:	movzx  edx,WORD PTR [r9+0x2a]
  402545:	test   dx,dx
  402548:	je     402519 <verify_monster@@Base+0x4a9>
  40254a:	cmp    QWORD PTR [r8+rdx*1],rcx
  40254e:	jne    402519 <verify_monster@@Base+0x4a9>
  402550:	cmp    r10w,0x2d
  402555:	ja     402580 <verify_monster@@Base+0x510>
  402557:	lea    rcx,[rip+0x31f2]        # 405750 <_IO_stdin_used@@Base+0x750>
  40255e:	mov    edx,0x98
  402563:	lea    rsi,[rip+0x2cde]        # 405248 <_IO_stdin_used@@Base+0x248>
  40256a:	lea    rdi,[rip+0x2e37]        # 4053a8 <_IO_stdin_used@@Base+0x3a8>
  402571:	call   401190 <__assert_fail@plt>
  402576:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402580:	movzx  edx,WORD PTR [r9+0x2c]
  402585:	test   dx,dx
  402588:	je     402557 <verify_monster@@Base+0x4e7>
  40258a:	cmp    DWORD PTR [r8+rdx*1],0x8e81a471
  402592:	jne    402557 <verify_monster@@Base+0x4e7>
  402594:	cmp    r10w,0x2f
  402599:	ja     4025c0 <verify_monster@@Base+0x550>
  40259b:	lea    rcx,[rip+0x31ae]        # 405750 <_IO_stdin_used@@Base+0x750>
  4025a2:	mov    edx,0x99
  4025a7:	lea    rsi,[rip+0x2c9a]        # 405248 <_IO_stdin_used@@Base+0x248>
  4025ae:	lea    rdi,[rip+0x2e2b]        # 4053e0 <_IO_stdin_used@@Base+0x3e0>
  4025b5:	call   401190 <__assert_fail@plt>
  4025ba:	nop    WORD PTR [rax+rax*1+0x0]
  4025c0:	movzx  edx,WORD PTR [r9+0x2e]
  4025c5:	test   dx,dx
  4025c8:	je     40259b <verify_monster@@Base+0x52b>
  4025ca:	cmp    DWORD PTR [r8+rdx*1],0x8e81a471
  4025d2:	jne    40259b <verify_monster@@Base+0x52b>
  4025d4:	cmp    r10w,0x31
  4025d9:	ja     402600 <verify_monster@@Base+0x590>
  4025db:	lea    rcx,[rip+0x316e]        # 405750 <_IO_stdin_used@@Base+0x750>
  4025e2:	mov    edx,0x9a
  4025e7:	lea    rsi,[rip+0x2c5a]        # 405248 <_IO_stdin_used@@Base+0x248>
  4025ee:	lea    rdi,[rip+0x2e23]        # 405418 <_IO_stdin_used@@Base+0x418>
  4025f5:	call   401190 <__assert_fail@plt>
  4025fa:	nop    WORD PTR [rax+rax*1+0x0]
  402600:	movzx  edx,WORD PTR [r9+0x30]
  402605:	test   dx,dx
  402608:	je     4025db <verify_monster@@Base+0x56b>
  40260a:	movabs rcx,0x43f948dcc767ddf1
  402614:	cmp    QWORD PTR [r8+rdx*1],rcx
  402618:	jne    4025db <verify_monster@@Base+0x56b>
  40261a:	cmp    r10w,0x33
  40261f:	ja     402640 <verify_monster@@Base+0x5d0>
  402621:	lea    rcx,[rip+0x3128]        # 405750 <_IO_stdin_used@@Base+0x750>
  402628:	mov    edx,0x9b
  40262d:	lea    rsi,[rip+0x2c14]        # 405248 <_IO_stdin_used@@Base+0x248>
  402634:	lea    rdi,[rip+0x2e1d]        # 405458 <_IO_stdin_used@@Base+0x458>
  40263b:	call   401190 <__assert_fail@plt>
  402640:	movzx  edx,WORD PTR [r9+0x32]
  402645:	test   dx,dx
  402648:	je     402621 <verify_monster@@Base+0x5b1>
  40264a:	cmp    QWORD PTR [r8+rdx*1],rcx
  40264e:	je     40209e <verify_monster@@Base+0x2e>
  402654:	jmp    402621 <verify_monster@@Base+0x5b1>
  402656:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402660:	lea    rsi,[rip+0x3059]        # 4056c0 <_IO_stdin_used@@Base+0x6c0>
  402667:	mov    edi,0x1
  40266c:	xor    eax,eax
  40266e:	call   4011e0 <__printf_chk@plt>
  402673:	mov    eax,0xffffffff
  402678:	jmp    40209e <verify_monster@@Base+0x2e>
  40267d:	nop    DWORD PTR [rax]
  402680:	lea    rsi,[rip+0x2f0e]        # 405595 <_IO_stdin_used@@Base+0x595>
  402687:	mov    edi,0x1
  40268c:	xor    eax,eax
  40268e:	call   4011e0 <__printf_chk@plt>
  402693:	mov    eax,0xffffffff
  402698:	jmp    40209e <verify_monster@@Base+0x2e>
  40269d:	lea    rsi,[rip+0x2edb]        # 40557f <_IO_stdin_used@@Base+0x57f>
  4026a4:	mov    edi,0x1
  4026a9:	xor    eax,eax
  4026ab:	call   4011e0 <__printf_chk@plt>
  4026b0:	mov    eax,0xffffffff
  4026b5:	jmp    40209e <verify_monster@@Base+0x2e>
  4026ba:	lea    rsi,[rip+0x2f13]        # 4055d4 <_IO_stdin_used@@Base+0x5d4>
  4026c1:	mov    edi,0x1
  4026c6:	xor    eax,eax
  4026c8:	call   4011e0 <__printf_chk@plt>
  4026cd:	mov    eax,0xffffffff
  4026d2:	jmp    40209e <verify_monster@@Base+0x2e>
  4026d7:	lea    rsi,[rip+0x2a22]        # 405100 <_IO_stdin_used@@Base+0x100>
  4026de:	mov    edi,0x1
  4026e3:	xor    eax,eax
  4026e5:	call   4011e0 <__printf_chk@plt>
  4026ea:	mov    eax,0xffffffff
  4026ef:	jmp    40209e <verify_monster@@Base+0x2e>
  4026f4:	lea    rsi,[rip+0x2a2d]        # 405128 <_IO_stdin_used@@Base+0x128>
  4026fb:	mov    edi,0x1
  402700:	xor    eax,eax
  402702:	call   4011e0 <__printf_chk@plt>
  402707:	mov    eax,0xffffffff
  40270c:	jmp    40209e <verify_monster@@Base+0x2e>
  402711:	lea    rsi,[rip+0x29c0]        # 4050d8 <_IO_stdin_used@@Base+0xd8>
  402718:	mov    edi,0x1
  40271d:	xor    eax,eax
  40271f:	call   4011e0 <__printf_chk@plt>
  402724:	mov    eax,0xffffffff
  402729:	jmp    40209e <verify_monster@@Base+0x2e>
  40272e:	lea    rsi,[rip+0x2e35]        # 40556a <_IO_stdin_used@@Base+0x56a>
  402735:	mov    edi,0x1
  40273a:	xor    eax,eax
  40273c:	call   4011e0 <__printf_chk@plt>
  402741:	mov    eax,0xffffffff
  402746:	jmp    40209e <verify_monster@@Base+0x2e>
  40274b:	lea    rsi,[rip+0x29fe]        # 405150 <_IO_stdin_used@@Base+0x150>
  402752:	mov    edi,0x1
  402757:	xor    eax,eax
  402759:	call   4011e0 <__printf_chk@plt>
  40275e:	mov    eax,0xffffffff
  402763:	jmp    40209e <verify_monster@@Base+0x2e>
  402768:	lea    rsi,[rip+0x2a89]        # 4051f8 <_IO_stdin_used@@Base+0x1f8>
  40276f:	mov    edi,0x1
  402774:	xor    eax,eax
  402776:	call   4011e0 <__printf_chk@plt>
  40277b:	mov    eax,0xffffffff
  402780:	jmp    40209e <verify_monster@@Base+0x2e>
  402785:	lea    rsi,[rip+0x2a14]        # 4051a0 <_IO_stdin_used@@Base+0x1a0>
  40278c:	mov    edi,0x1
  402791:	xor    eax,eax
  402793:	call   4011e0 <__printf_chk@plt>
  402798:	mov    eax,0xffffffff
  40279d:	jmp    40209e <verify_monster@@Base+0x2e>
  4027a2:	lea    rsi,[rip+0x2ed0]        # 405679 <_IO_stdin_used@@Base+0x679>
  4027a9:	mov    edi,0x1
  4027ae:	xor    eax,eax
  4027b0:	call   4011e0 <__printf_chk@plt>
  4027b5:	mov    eax,0xffffffff
  4027ba:	jmp    40209e <verify_monster@@Base+0x2e>
  4027bf:	lea    rsi,[rip+0x2f11]        # 4056d7 <_IO_stdin_used@@Base+0x6d7>
  4027c6:	mov    edi,0x1
  4027cb:	xor    eax,eax
  4027cd:	call   4011e0 <__printf_chk@plt>
  4027d2:	mov    eax,0xffffffff
  4027d7:	jmp    40209e <verify_monster@@Base+0x2e>
  4027dc:	nop    DWORD PTR [rax+0x0]
  4027e0:	lea    rsi,[rip+0x2d6f]        # 405556 <_IO_stdin_used@@Base+0x556>
  4027e7:	mov    edi,0x1
  4027ec:	xor    eax,eax
  4027ee:	call   4011e0 <__printf_chk@plt>
  4027f3:	mov    eax,0xffffffff
  4027f8:	jmp    40209e <verify_monster@@Base+0x2e>
  4027fd:	lea    rsi,[rip+0x2ea5]        # 4056a9 <_IO_stdin_used@@Base+0x6a9>
  402804:	mov    edi,0x1
  402809:	xor    eax,eax
  40280b:	call   4011e0 <__printf_chk@plt>
  402810:	mov    eax,0xffffffff
  402815:	jmp    40209e <verify_monster@@Base+0x2e>
  40281a:	lea    rsi,[rip+0x2e71]        # 405692 <_IO_stdin_used@@Base+0x692>
  402821:	mov    edi,0x1
  402826:	xor    eax,eax
  402828:	call   4011e0 <__printf_chk@plt>
  40282d:	mov    eax,0xffffffff
  402832:	jmp    40209e <verify_monster@@Base+0x2e>
  402837:	lea    rsi,[rip+0x2992]        # 4051d0 <_IO_stdin_used@@Base+0x1d0>
  40283e:	mov    edi,0x1
  402843:	xor    eax,eax
  402845:	call   4011e0 <__printf_chk@plt>
  40284a:	or     eax,0xffffffff
  40284d:	jmp    40209e <verify_monster@@Base+0x2e>
  402852:	lea    rsi,[rip+0x2e03]        # 40565c <_IO_stdin_used@@Base+0x65c>
  402859:	mov    edi,0x1
  40285e:	xor    eax,eax
  402860:	call   4011e0 <__printf_chk@plt>
  402865:	or     eax,0xffffffff
  402868:	jmp    40209e <verify_monster@@Base+0x2e>
  40286d:	lea    rcx,[rip+0x2ebc]        # 405730 <_IO_stdin_used@@Base+0x730>
  402874:	mov    edx,0x2bb
  402879:	lea    rsi,[rip+0x2788]        # 405008 <_IO_stdin_used@@Base+0x8>
  402880:	lea    rdi,[rip+0x28f1]        # 405178 <_IO_stdin_used@@Base+0x178>
  402887:	call   401190 <__assert_fail@plt>
  40288c:	lea    rsi,[rip+0x2d8f]        # 405622 <_IO_stdin_used@@Base+0x622>
  402893:	mov    edi,0x1
  402898:	xor    eax,eax
  40289a:	call   4011e0 <__printf_chk@plt>
  40289f:	or     eax,0xffffffff
  4028a2:	jmp    40209e <verify_monster@@Base+0x2e>
  4028a7:	nop    WORD PTR [rax+rax*1+0x0]

00000000004028b0 <flatcc_verify_error_string@@Base>:
  4028b0:	endbr64 
  4028b4:	cmp    edi,0x24
  4028b7:	ja     402b20 <flatcc_verify_error_string@@Base+0x270>
  4028bd:	lea    rdx,[rip+0x334c]        # 405c10 <_IO_stdin_used@@Base+0xc10>
  4028c4:	mov    edi,edi
  4028c6:	movsxd rax,DWORD PTR [rdx+rdi*4]
  4028ca:	add    rax,rdx
  4028cd:	notrack jmp rax
  4028d0:	lea    rax,[rip+0x2ea9]        # 405780 <_IO_stdin_used@@Base+0x780>
  4028d7:	ret    
  4028d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4028e0:	lea    rax,[rip+0x301d]        # 405904 <_IO_stdin_used@@Base+0x904>
  4028e7:	ret    
  4028e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4028f0:	lea    rax,[rip+0x32f1]        # 405be8 <_IO_stdin_used@@Base+0xbe8>
  4028f7:	ret    
  4028f8:	nop    DWORD PTR [rax+rax*1+0x0]
  402900:	lea    rax,[rip+0x32a9]        # 405bb0 <_IO_stdin_used@@Base+0xbb0>
  402907:	ret    
  402908:	nop    DWORD PTR [rax+rax*1+0x0]
  402910:	lea    rax,[rip+0x3271]        # 405b88 <_IO_stdin_used@@Base+0xb88>
  402917:	ret    
  402918:	nop    DWORD PTR [rax+rax*1+0x0]
  402920:	lea    rax,[rip+0x3239]        # 405b60 <_IO_stdin_used@@Base+0xb60>
  402927:	ret    
  402928:	nop    DWORD PTR [rax+rax*1+0x0]
  402930:	lea    rax,[rip+0x2fb8]        # 4058ef <_IO_stdin_used@@Base+0x8ef>
  402937:	ret    
  402938:	nop    DWORD PTR [rax+rax*1+0x0]
  402940:	lea    rax,[rip+0x31f1]        # 405b38 <_IO_stdin_used@@Base+0xb38>
  402947:	ret    
  402948:	nop    DWORD PTR [rax+rax*1+0x0]
  402950:	lea    rax,[rip+0x31b9]        # 405b10 <_IO_stdin_used@@Base+0xb10>
  402957:	ret    
  402958:	nop    DWORD PTR [rax+rax*1+0x0]
  402960:	lea    rax,[rip+0x2f70]        # 4058d7 <_IO_stdin_used@@Base+0x8d7>
  402967:	ret    
  402968:	nop    DWORD PTR [rax+rax*1+0x0]
  402970:	lea    rax,[rip+0x2f45]        # 4058bc <_IO_stdin_used@@Base+0x8bc>
  402977:	ret    
  402978:	nop    DWORD PTR [rax+rax*1+0x0]
  402980:	lea    rax,[rip+0x2f21]        # 4058a8 <_IO_stdin_used@@Base+0x8a8>
  402987:	ret    
  402988:	nop    DWORD PTR [rax+rax*1+0x0]
  402990:	lea    rax,[rip+0x3149]        # 405ae0 <_IO_stdin_used@@Base+0xae0>
  402997:	ret    
  402998:	nop    DWORD PTR [rax+rax*1+0x0]
  4029a0:	lea    rax,[rip+0x3109]        # 405ab0 <_IO_stdin_used@@Base+0xab0>
  4029a7:	ret    
  4029a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4029b0:	lea    rax,[rip+0x30c9]        # 405a80 <_IO_stdin_used@@Base+0xa80>
  4029b7:	ret    
  4029b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4029c0:	lea    rax,[rip+0x3081]        # 405a48 <_IO_stdin_used@@Base+0xa48>
  4029c7:	ret    
  4029c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4029d0:	lea    rax,[rip+0x3041]        # 405a18 <_IO_stdin_used@@Base+0xa18>
  4029d7:	ret    
  4029d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4029e0:	lea    rax,[rip+0x2ea9]        # 405890 <_IO_stdin_used@@Base+0x890>
  4029e7:	ret    
  4029e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4029f0:	lea    rax,[rip+0x2ff9]        # 4059f0 <_IO_stdin_used@@Base+0x9f0>
  4029f7:	ret    
  4029f8:	nop    DWORD PTR [rax+rax*1+0x0]
  402a00:	lea    rax,[rip+0x2e75]        # 40587c <_IO_stdin_used@@Base+0x87c>
  402a07:	ret    
  402a08:	nop    DWORD PTR [rax+rax*1+0x0]
  402a10:	lea    rax,[rip+0x2fb1]        # 4059c8 <_IO_stdin_used@@Base+0x9c8>
  402a17:	ret    
  402a18:	nop    DWORD PTR [rax+rax*1+0x0]
  402a20:	lea    rax,[rip+0x2f79]        # 4059a0 <_IO_stdin_used@@Base+0x9a0>
  402a27:	ret    
  402a28:	nop    DWORD PTR [rax+rax*1+0x0]
  402a30:	lea    rax,[rip+0x2f41]        # 405978 <_IO_stdin_used@@Base+0x978>
  402a37:	ret    
  402a38:	nop    DWORD PTR [rax+rax*1+0x0]
  402a40:	lea    rax,[rip+0x2e1b]        # 405862 <_IO_stdin_used@@Base+0x862>
  402a47:	ret    
  402a48:	nop    DWORD PTR [rax+rax*1+0x0]
  402a50:	lea    rax,[rip+0x2df2]        # 405849 <_IO_stdin_used@@Base+0x849>
  402a57:	ret    
  402a58:	nop    DWORD PTR [rax+rax*1+0x0]
  402a60:	lea    rax,[rip+0x2dca]        # 405831 <_IO_stdin_used@@Base+0x831>
  402a67:	ret    
  402a68:	nop    DWORD PTR [rax+rax*1+0x0]
  402a70:	lea    rax,[rip+0x2da9]        # 405820 <_IO_stdin_used@@Base+0x820>
  402a77:	ret    
  402a78:	nop    DWORD PTR [rax+rax*1+0x0]
  402a80:	lea    rax,[rip+0x2d84]        # 40580b <_IO_stdin_used@@Base+0x80b>
  402a87:	ret    
  402a88:	nop    DWORD PTR [rax+rax*1+0x0]
  402a90:	lea    rax,[rip+0x2d60]        # 4057f7 <_IO_stdin_used@@Base+0x7f7>
  402a97:	ret    
  402a98:	nop    DWORD PTR [rax+rax*1+0x0]
  402aa0:	lea    rax,[rip+0x2d3c]        # 4057e3 <_IO_stdin_used@@Base+0x7e3>
  402aa7:	ret    
  402aa8:	nop    DWORD PTR [rax+rax*1+0x0]
  402ab0:	lea    rax,[rip+0x2d11]        # 4057c8 <_IO_stdin_used@@Base+0x7c8>
  402ab7:	ret    
  402ab8:	nop    DWORD PTR [rax+rax*1+0x0]
  402ac0:	lea    rax,[rip+0x2e91]        # 405958 <_IO_stdin_used@@Base+0x958>
  402ac7:	ret    
  402ac8:	nop    DWORD PTR [rax+rax*1+0x0]
  402ad0:	lea    rax,[rip+0x2e59]        # 405930 <_IO_stdin_used@@Base+0x930>
  402ad7:	ret    
  402ad8:	nop    DWORD PTR [rax+rax*1+0x0]
  402ae0:	lea    rax,[rip+0x2cca]        # 4057b1 <_IO_stdin_used@@Base+0x7b1>
  402ae7:	ret    
  402ae8:	nop    DWORD PTR [rax+rax*1+0x0]
  402af0:	lea    rax,[rip+0x2ca0]        # 405797 <_IO_stdin_used@@Base+0x797>
  402af7:	ret    
  402af8:	nop    DWORD PTR [rax+rax*1+0x0]
  402b00:	lea    rax,[rip+0x2c7c]        # 405783 <_IO_stdin_used@@Base+0x783>
  402b07:	ret    
  402b08:	nop    DWORD PTR [rax+rax*1+0x0]
  402b10:	lea    rax,[rip+0x2dfb]        # 405912 <_IO_stdin_used@@Base+0x912>
  402b17:	ret    
  402b18:	nop    DWORD PTR [rax+rax*1+0x0]
  402b20:	lea    rax,[rip+0x2c51]        # 405778 <_IO_stdin_used@@Base+0x778>
  402b27:	ret    
  402b28:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402b30 <flatcc_verify_field@@Base>:
  402b30:	endbr64 
  402b34:	lea    esi,[rsi+rsi*1+0x4]
  402b38:	xor    eax,eax
  402b3a:	cmp    si,WORD PTR [rdi+0x1e]
  402b3e:	jae    402b79 <flatcc_verify_field@@Base+0x49>
  402b40:	mov    r8,QWORD PTR [rdi+0x10]
  402b44:	movzx  esi,si
  402b47:	movzx  esi,WORD PTR [r8+rsi*1]
  402b4c:	test   esi,esi
  402b4e:	je     402b79 <flatcc_verify_field@@Base+0x49>
  402b50:	movzx  r8d,WORD PTR [rdi+0x1c]
  402b55:	add    edx,esi
  402b57:	mov    eax,0xd
  402b5c:	cmp    edx,r8d
  402b5f:	ja     402b79 <flatcc_verify_field@@Base+0x49>
  402b61:	mov    eax,DWORD PTR [rdi+0x18]
  402b64:	movzx  ecx,cx
  402b67:	add    eax,DWORD PTR [rdi]
  402b69:	add    eax,esi
  402b6b:	dec    ecx
  402b6d:	and    eax,ecx
  402b6f:	cmp    eax,0x1
  402b72:	sbb    eax,eax
  402b74:	not    eax
  402b76:	and    eax,0xc
  402b79:	ret    
  402b7a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000402b80 <flatcc_verify_string_field@@Base>:
  402b80:	endbr64 
  402b84:	lea    esi,[rsi+rsi*1+0x4]
  402b88:	cmp    si,WORD PTR [rdi+0x1e]
  402b8c:	jae    402c20 <flatcc_verify_string_field@@Base+0xa0>
  402b92:	mov    rax,QWORD PTR [rdi+0x10]
  402b96:	movzx  esi,si
  402b99:	movzx  ecx,WORD PTR [rax+rsi*1]
  402b9d:	test   ecx,ecx
  402b9f:	je     402c20 <flatcc_verify_string_field@@Base+0xa0>
  402ba1:	movzx  edx,WORD PTR [rdi+0x1c]
  402ba5:	lea    esi,[rcx+0x4]
  402ba8:	mov    eax,0xd
  402bad:	cmp    esi,edx
  402baf:	ja     402c1a <flatcc_verify_string_field@@Base+0x9a>
  402bb1:	add    ecx,DWORD PTR [rdi+0x18]
  402bb4:	mov    edx,ecx
  402bb6:	mov    eax,0xc
  402bbb:	test   cl,0x3
  402bbe:	jne    402c1a <flatcc_verify_string_field@@Base+0x9a>
  402bc0:	test   ecx,ecx
  402bc2:	je     402c18 <flatcc_verify_string_field@@Base+0x98>
  402bc4:	mov    rsi,QWORD PTR [rdi]
  402bc7:	mov    eax,ecx
  402bc9:	add    ecx,DWORD PTR [rsi+rax*1]
  402bcc:	mov    eax,0x11
  402bd1:	cmp    edx,ecx
  402bd3:	jae    402c1a <flatcc_verify_string_field@@Base+0x9a>
  402bd5:	mov    r9d,DWORD PTR [rdi+0x8]
  402bd9:	mov    edi,ecx
  402bdb:	lea    r8,[rdi+0x4]
  402bdf:	mov    rdx,r9
  402be2:	cmp    r8,r9
  402be5:	ja     402c1a <flatcc_verify_string_field@@Base+0x9a>
  402be7:	mov    r9d,ecx
  402bea:	and    r9d,0x3
  402bee:	jne    402c1a <flatcc_verify_string_field@@Base+0x9a>
  402bf0:	mov    edi,DWORD PTR [rsi+rdi*1]
  402bf3:	sub    edx,0x4
  402bf6:	sub    edx,ecx
  402bf8:	lea    ecx,[rdi+0x1]
  402bfb:	mov    eax,0x8
  402c00:	cmp    edx,ecx
  402c02:	jb     402c1a <flatcc_verify_string_field@@Base+0x9a>
  402c04:	add    rsi,r8
  402c07:	cmp    BYTE PTR [rsi+rdi*1],0x0
  402c0b:	mov    eax,0x7
  402c10:	cmove  eax,r9d
  402c14:	ret    
  402c15:	nop    DWORD PTR [rax]
  402c18:	xor    eax,eax
  402c1a:	ret    
  402c1b:	nop    DWORD PTR [rax+rax*1+0x0]
  402c20:	xor    eax,eax
  402c22:	test   edx,edx
  402c24:	setne  al
  402c27:	shl    eax,0x2
  402c2a:	ret    
  402c2b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402c30 <flatcc_verify_vector_field@@Base>:
  402c30:	endbr64 
  402c34:	lea    esi,[rsi+rsi*1+0x4]
  402c38:	cmp    si,WORD PTR [rdi+0x1e]
  402c3c:	jae    402ce8 <flatcc_verify_vector_field@@Base+0xb8>
  402c42:	mov    rax,QWORD PTR [rdi+0x10]
  402c46:	movzx  esi,si
  402c49:	movzx  esi,WORD PTR [rax+rsi*1]
  402c4d:	test   esi,esi
  402c4f:	je     402ce8 <flatcc_verify_vector_field@@Base+0xb8>
  402c55:	movzx  edx,WORD PTR [rdi+0x1c]
  402c59:	lea    r10d,[rsi+0x4]
  402c5d:	mov    eax,0xd
  402c62:	cmp    r10d,edx
  402c65:	ja     402ce0 <flatcc_verify_vector_field@@Base+0xb0>
  402c67:	mov    edx,DWORD PTR [rdi+0x18]
  402c6a:	mov    eax,0xc
  402c6f:	add    edx,esi
  402c71:	test   dl,0x3
  402c74:	jne    402ce0 <flatcc_verify_vector_field@@Base+0xb0>
  402c76:	test   edx,edx
  402c78:	je     402cf8 <flatcc_verify_vector_field@@Base+0xc8>
  402c7a:	mov    r10,QWORD PTR [rdi]
  402c7d:	mov    eax,edx
  402c7f:	mov    esi,DWORD PTR [r10+rax*1]
  402c83:	mov    eax,0x10
  402c88:	add    esi,edx
  402c8a:	cmp    edx,esi
  402c8c:	jae    402ce0 <flatcc_verify_vector_field@@Base+0xb0>
  402c8e:	push   rbx
  402c8f:	mov    ebx,esi
  402c91:	lea    r11,[rbx+0x4]
  402c95:	mov    edx,DWORD PTR [rdi+0x8]
  402c98:	mov    rdi,rdx
  402c9b:	cmp    r11,rdx
  402c9e:	ja     402cdb <flatcc_verify_vector_field@@Base+0xab>
  402ca0:	cmp    r8w,0x4
  402ca5:	mov    edx,0x4
  402caa:	cmovae edx,r8d
  402cae:	movzx  edx,dx
  402cb1:	dec    edx
  402cb3:	or     edx,0x3
  402cb6:	movsxd rdx,edx
  402cb9:	test   rdx,r11
  402cbc:	jne    402cdb <flatcc_verify_vector_field@@Base+0xab>
  402cbe:	mov    edx,DWORD PTR [r10+rbx*1]
  402cc2:	sub    edi,0x4
  402cc5:	mov    eax,0x19
  402cca:	cmp    edx,r9d
  402ccd:	ja     402cdb <flatcc_verify_vector_field@@Base+0xab>
  402ccf:	imul   ecx,edx
  402cd2:	sub    edi,esi
  402cd4:	cmp    edi,ecx
  402cd6:	sbb    eax,eax
  402cd8:	and    eax,0x1a
  402cdb:	pop    rbx
  402cdc:	ret    
  402cdd:	nop    DWORD PTR [rax]
  402ce0:	ret    
  402ce1:	nop    DWORD PTR [rax+0x0]
  402ce8:	xor    eax,eax
  402cea:	test   edx,edx
  402cec:	setne  al
  402cef:	shl    eax,0x2
  402cf2:	ret    
  402cf3:	nop    DWORD PTR [rax+rax*1+0x0]
  402cf8:	xor    eax,eax
  402cfa:	ret    
  402cfb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402d00 <flatcc_verify_string_vector_field@@Base>:
  402d00:	endbr64 
  402d04:	lea    esi,[rsi+rsi*1+0x4]
  402d08:	cmp    si,WORD PTR [rdi+0x1e]
  402d0c:	jae    402e60 <flatcc_verify_string_vector_field@@Base+0x160>
  402d12:	mov    rax,QWORD PTR [rdi+0x10]
  402d16:	movzx  esi,si
  402d19:	movzx  ecx,WORD PTR [rax+rsi*1]
  402d1d:	test   ecx,ecx
  402d1f:	je     402e60 <flatcc_verify_string_vector_field@@Base+0x160>
  402d25:	movzx  edx,WORD PTR [rdi+0x1c]
  402d29:	lea    esi,[rcx+0x4]
  402d2c:	mov    eax,0xd
  402d31:	cmp    esi,edx
  402d33:	ja     402e58 <flatcc_verify_string_vector_field@@Base+0x158>
  402d39:	add    ecx,DWORD PTR [rdi+0x18]
  402d3c:	mov    edx,ecx
  402d3e:	mov    eax,0xc
  402d43:	test   cl,0x3
  402d46:	jne    402e58 <flatcc_verify_string_vector_field@@Base+0x158>
  402d4c:	test   ecx,ecx
  402d4e:	je     402ea0 <flatcc_verify_string_vector_field@@Base+0x1a0>
  402d54:	mov    rcx,QWORD PTR [rdi]
  402d57:	mov    eax,edx
  402d59:	mov    esi,DWORD PTR [rcx+rax*1]
  402d5c:	mov    eax,0x10
  402d61:	add    esi,edx
  402d63:	cmp    edx,esi
  402d65:	jae    402e58 <flatcc_verify_string_vector_field@@Base+0x158>
  402d6b:	mov    r9d,DWORD PTR [rdi+0x8]
  402d6f:	mov    r10d,esi
  402d72:	lea    r8,[r10+0x4]
  402d76:	mov    rdi,r9
  402d79:	cmp    r8,r9
  402d7c:	ja     402e58 <flatcc_verify_string_vector_field@@Base+0x158>
  402d82:	push   rbx
  402d83:	test   r8b,0x3
  402d87:	jne    402e70 <flatcc_verify_string_vector_field@@Base+0x170>
  402d8d:	mov    eax,DWORD PTR [rcx+r10*1]
  402d91:	lea    edx,[rsi+0x4]
  402d94:	cmp    eax,0x3fffffff
  402d99:	ja     402e70 <flatcc_verify_string_vector_field@@Base+0x170>
  402d9f:	mov    ebx,r9d
  402da2:	lea    r11d,[rax*4+0x0]
  402daa:	sub    ebx,edx
  402dac:	cmp    ebx,r11d
  402daf:	jb     402e70 <flatcc_verify_string_vector_field@@Base+0x170>
  402db5:	test   eax,eax
  402db7:	je     402ea8 <flatcc_verify_string_vector_field@@Base+0x1a8>
  402dbd:	mov    r8d,DWORD PTR [rcx+r10*1+0x4]
  402dc2:	mov    eax,0x11
  402dc7:	add    r8d,edx
  402dca:	cmp    r8d,edx
  402dcd:	jbe    402e53 <flatcc_verify_string_vector_field@@Base+0x153>
  402dd3:	mov    r10d,r8d
  402dd6:	lea    rsi,[r10+0x4]
  402dda:	cmp    rsi,r9
  402ddd:	ja     402e53 <flatcc_verify_string_vector_field@@Base+0x153>
  402ddf:	test   r8b,0x3
  402de3:	jne    402e53 <flatcc_verify_string_vector_field@@Base+0x153>
  402de5:	mov    r10d,DWORD PTR [rcx+r10*1]
  402de9:	sub    edi,0x4
  402dec:	mov    ebx,edi
  402dee:	sub    ebx,r8d
  402df1:	lea    r8d,[r10+0x1]
  402df5:	mov    eax,0x8
  402dfa:	cmp    ebx,r8d
  402dfd:	jb     402e53 <flatcc_verify_string_vector_field@@Base+0x153>
  402dff:	lea    r8d,[rdx+r11*1]
  402e03:	jmp    402e2f <flatcc_verify_string_vector_field@@Base+0x12f>
  402e05:	nop    DWORD PTR [rax]
  402e08:	mov    r10d,ebx
  402e0b:	lea    rsi,[r10+0x4]
  402e0f:	cmp    r9,rsi
  402e12:	jb     402e4e <flatcc_verify_string_vector_field@@Base+0x14e>
  402e14:	test   al,0x3
  402e16:	jne    402e4e <flatcc_verify_string_vector_field@@Base+0x14e>
  402e18:	mov    r10d,DWORD PTR [rcx+r10*1]
  402e1c:	mov    r11d,edi
  402e1f:	sub    r11d,ebx
  402e22:	lea    eax,[r10+0x1]
  402e26:	cmp    r11d,eax
  402e29:	jb     402eac <flatcc_verify_string_vector_field@@Base+0x1ac>
  402e2f:	add    rsi,rcx
  402e32:	cmp    BYTE PTR [rsi+r10*1],0x0
  402e37:	jne    402eb3 <flatcc_verify_string_vector_field@@Base+0x1b3>
  402e39:	add    edx,0x4
  402e3c:	cmp    edx,r8d
  402e3f:	je     402ea8 <flatcc_verify_string_vector_field@@Base+0x1a8>
  402e41:	mov    eax,edx
  402e43:	mov    ebx,DWORD PTR [rcx+rax*1]
  402e46:	add    ebx,edx
  402e48:	mov    eax,ebx
  402e4a:	cmp    edx,ebx
  402e4c:	jb     402e08 <flatcc_verify_string_vector_field@@Base+0x108>
  402e4e:	mov    eax,0x11
  402e53:	pop    rbx
  402e54:	ret    
  402e55:	nop    DWORD PTR [rax]
  402e58:	ret    
  402e59:	nop    DWORD PTR [rax+0x0]
  402e60:	xor    eax,eax
  402e62:	test   edx,edx
  402e64:	setne  al
  402e67:	shl    eax,0x2
  402e6a:	ret    
  402e6b:	nop    DWORD PTR [rax+rax*1+0x0]
  402e70:	and    r8d,0x3
  402e74:	mov    eax,0x10
  402e79:	jne    402e53 <flatcc_verify_string_vector_field@@Base+0x153>
  402e7b:	mov    edx,DWORD PTR [rcx+r10*1]
  402e7f:	sub    edi,0x4
  402e82:	mov    eax,0x19
  402e87:	cmp    edx,0x3fffffff
  402e8d:	ja     402e53 <flatcc_verify_string_vector_field@@Base+0x153>
  402e8f:	sub    edi,esi
  402e91:	shl    edx,0x2
  402e94:	cmp    edi,edx
  402e96:	sbb    eax,eax
  402e98:	and    eax,0x1a
  402e9b:	pop    rbx
  402e9c:	ret    
  402e9d:	nop    DWORD PTR [rax]
  402ea0:	xor    eax,eax
  402ea2:	ret    
  402ea3:	nop    DWORD PTR [rax+rax*1+0x0]
  402ea8:	xor    eax,eax
  402eaa:	pop    rbx
  402eab:	ret    
  402eac:	mov    eax,0x8
  402eb1:	pop    rbx
  402eb2:	ret    
  402eb3:	mov    eax,0x7
  402eb8:	pop    rbx
  402eb9:	ret    
  402eba:	nop    WORD PTR [rax+rax*1+0x0]

0000000000402ec0 <flatcc_verify_table_field@@Base>:
  402ec0:	endbr64 
  402ec4:	sub    rsp,0x38
  402ec8:	lea    esi,[rsi+rsi*1+0x4]
  402ecc:	mov    rax,QWORD PTR fs:0x28
  402ed5:	mov    QWORD PTR [rsp+0x28],rax
  402eda:	xor    eax,eax
  402edc:	cmp    si,WORD PTR [rdi+0x1e]
  402ee0:	jae    403018 <flatcc_verify_table_field@@Base+0x158>
  402ee6:	mov    rax,QWORD PTR [rdi+0x10]
  402eea:	movzx  esi,si
  402eed:	movzx  esi,WORD PTR [rax+rsi*1]
  402ef1:	test   esi,esi
  402ef3:	je     403018 <flatcc_verify_table_field@@Base+0x158>
  402ef9:	movzx  edx,WORD PTR [rdi+0x1c]
  402efd:	lea    r8d,[rsi+0x4]
  402f01:	mov    eax,0xd
  402f06:	cmp    r8d,edx
  402f09:	ja     403000 <flatcc_verify_table_field@@Base+0x140>
  402f0f:	add    esi,DWORD PTR [rdi+0x18]
  402f12:	mov    eax,0xc
  402f17:	test   sil,0x3
  402f1b:	jne    403000 <flatcc_verify_table_field@@Base+0x140>
  402f21:	test   esi,esi
  402f23:	je     403028 <flatcc_verify_table_field@@Base+0x168>
  402f29:	mov    edx,DWORD PTR [rdi+0xc]
  402f2c:	mov    r9,QWORD PTR [rdi]
  402f2f:	mov    eax,esi
  402f31:	dec    edx
  402f33:	mov    r8d,DWORD PTR [r9+rax*1]
  402f37:	mov    r10d,DWORD PTR [rdi+0x8]
  402f3b:	mov    DWORD PTR [rsp+0xc],edx
  402f3f:	mov    eax,0x3
  402f44:	je     403000 <flatcc_verify_table_field@@Base+0x140>
  402f4a:	lea    edx,[rsi+r8*1]
  402f4e:	mov    eax,0xf
  402f53:	cmp    esi,edx
  402f55:	jae    403000 <flatcc_verify_table_field@@Base+0x140>
  402f5b:	mov    esi,edx
  402f5d:	mov    edi,r10d
  402f60:	lea    r8,[rsi+0x4]
  402f64:	cmp    r8,rdi
  402f67:	ja     403000 <flatcc_verify_table_field@@Base+0x140>
  402f6d:	test   dl,0x3
  402f70:	jne    403000 <flatcc_verify_table_field@@Base+0x140>
  402f76:	mov    DWORD PTR [rsp+0x18],edx
  402f7a:	mov    eax,edx
  402f7c:	sub    eax,DWORD PTR [r9+rsi*1]
  402f80:	mov    esi,eax
  402f82:	js     40302c <flatcc_verify_table_field@@Base+0x16c>
  402f88:	mov    r8d,eax
  402f8b:	mov    eax,0x1d
  402f90:	test   sil,0x1
  402f94:	jne    403000 <flatcc_verify_table_field@@Base+0x140>
  402f96:	lea    r11,[r8+0x2]
  402f9a:	mov    eax,0x1b
  402f9f:	cmp    rdi,r11
  402fa2:	jb     403000 <flatcc_verify_table_field@@Base+0x140>
  402fa4:	lea    r11,[r9+r8*1]
  402fa8:	movzx  eax,WORD PTR [r11]
  402fac:	add    esi,eax
  402fae:	mov    edi,eax
  402fb0:	mov    WORD PTR [rsp+0x1e],ax
  402fb5:	mov    eax,0x1e
  402fba:	cmp    r10d,esi
  402fbd:	jb     403000 <flatcc_verify_table_field@@Base+0x140>
  402fbf:	test   dil,0x1
  402fc3:	jne    403000 <flatcc_verify_table_field@@Base+0x140>
  402fc5:	mov    eax,0x1c
  402fca:	cmp    di,0x3
  402fce:	jbe    403000 <flatcc_verify_table_field@@Base+0x140>
  402fd0:	movzx  eax,WORD PTR [r9+r8*1+0x2]
  402fd6:	mov    esi,r10d
  402fd9:	sub    esi,edx
  402fdb:	movzx  edx,ax
  402fde:	mov    WORD PTR [rsp+0x1c],ax
  402fe3:	mov    eax,0x14
  402fe8:	cmp    esi,edx
  402fea:	jb     403000 <flatcc_verify_table_field@@Base+0x140>
  402fec:	mov    rdi,rsp
  402fef:	mov    QWORD PTR [rsp+0x10],r11
  402ff4:	mov    QWORD PTR [rsp],r9
  402ff8:	mov    DWORD PTR [rsp+0x8],r10d
  402ffd:	call   rcx
  402fff:	nop
  403000:	mov    rcx,QWORD PTR [rsp+0x28]
  403005:	xor    rcx,QWORD PTR fs:0x28
  40300e:	jne    403033 <flatcc_verify_table_field@@Base+0x173>
  403010:	add    rsp,0x38
  403014:	ret    
  403015:	nop    DWORD PTR [rax]
  403018:	xor    eax,eax
  40301a:	test   edx,edx
  40301c:	setne  al
  40301f:	shl    eax,0x2
  403022:	jmp    403000 <flatcc_verify_table_field@@Base+0x140>
  403024:	nop    DWORD PTR [rax+0x0]
  403028:	xor    eax,eax
  40302a:	jmp    403000 <flatcc_verify_table_field@@Base+0x140>
  40302c:	mov    eax,0x1d
  403031:	jmp    403000 <flatcc_verify_table_field@@Base+0x140>
  403033:	call   401170 <__stack_chk_fail@plt>
  403038:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403040 <flatcc_verify_table_vector_field@@Base>:
  403040:	endbr64 
  403044:	push   r15
  403046:	lea    esi,[rsi+rsi*1+0x4]
  40304a:	push   r14
  40304c:	push   r13
  40304e:	push   r12
  403050:	push   rbp
  403051:	push   rbx
  403052:	sub    rsp,0x58
  403056:	mov    rax,QWORD PTR fs:0x28
  40305f:	mov    QWORD PTR [rsp+0x48],rax
  403064:	xor    eax,eax
  403066:	cmp    si,WORD PTR [rdi+0x1e]
  40306a:	jae    403268 <flatcc_verify_table_vector_field@@Base+0x228>
  403070:	mov    rax,QWORD PTR [rdi+0x10]
  403074:	movzx  esi,si
  403077:	movzx  esi,WORD PTR [rax+rsi*1]
  40307b:	test   esi,esi
  40307d:	je     403268 <flatcc_verify_table_vector_field@@Base+0x228>
  403083:	movzx  edx,WORD PTR [rdi+0x1c]
  403087:	lea    r8d,[rsi+0x4]
  40308b:	mov    eax,0xd
  403090:	cmp    r8d,edx
  403093:	ja     403240 <flatcc_verify_table_vector_field@@Base+0x200>
  403099:	add    esi,DWORD PTR [rdi+0x18]
  40309c:	mov    eax,0xc
  4030a1:	test   sil,0x3
  4030a5:	jne    403240 <flatcc_verify_table_vector_field@@Base+0x200>
  4030ab:	test   esi,esi
  4030ad:	je     403271 <flatcc_verify_table_vector_field@@Base+0x231>
  4030b3:	mov    r12,QWORD PTR [rdi]
  4030b6:	mov    r8d,DWORD PTR [rdi+0xc]
  4030ba:	mov    eax,esi
  4030bc:	mov    edx,DWORD PTR [r12+rax*1]
  4030c0:	test   r8d,r8d
  4030c3:	jle    4032d0 <flatcc_verify_table_vector_field@@Base+0x290>
  4030c9:	add    edx,esi
  4030cb:	mov    eax,0x10
  4030d0:	cmp    esi,edx
  4030d2:	jae    403240 <flatcc_verify_table_vector_field@@Base+0x200>
  4030d8:	mov    r15d,DWORD PTR [rdi+0x8]
  4030dc:	mov    edi,edx
  4030de:	lea    rsi,[rdi+0x4]
  4030e2:	mov    r14,r15
  4030e5:	cmp    rsi,r15
  4030e8:	ja     403240 <flatcc_verify_table_vector_field@@Base+0x200>
  4030ee:	test   sil,0x3
  4030f2:	jne    403278 <flatcc_verify_table_vector_field@@Base+0x238>
  4030f8:	mov    eax,DWORD PTR [r12+rdi*1]
  4030fc:	lea    ebp,[rdx+0x4]
  4030ff:	cmp    eax,0x3fffffff
  403104:	ja     403278 <flatcc_verify_table_vector_field@@Base+0x238>
  40310a:	mov    r10d,r15d
  40310d:	lea    r9d,[rax*4+0x0]
  403115:	sub    r10d,ebp
  403118:	cmp    r10d,r9d
  40311b:	jb     403278 <flatcc_verify_table_vector_field@@Base+0x238>
  403121:	test   eax,eax
  403123:	je     403271 <flatcc_verify_table_vector_field@@Base+0x231>
  403129:	lea    rbx,[r12+rsi*1]
  40312d:	lea    r13d,[r8-0x2]
  403131:	mov    edx,DWORD PTR [rbx]
  403133:	mov    eax,0x3
  403138:	mov    DWORD PTR [rsp+0x2c],r13d
  40313d:	test   r13d,r13d
  403140:	je     403240 <flatcc_verify_table_vector_field@@Base+0x200>
  403146:	lea    eax,[rbp+rdx*1+0x0]
  40314a:	cmp    ebp,eax
  40314c:	jae    403227 <flatcc_verify_table_vector_field@@Base+0x1e7>
  403152:	mov    esi,eax
  403154:	lea    rdx,[rsi+0x4]
  403158:	cmp    r15,rdx
  40315b:	jb     403227 <flatcc_verify_table_vector_field@@Base+0x1e7>
  403161:	test   al,0x3
  403163:	jne    403227 <flatcc_verify_table_vector_field@@Base+0x1e7>
  403169:	lea    rdi,[rsp+0x20]
  40316e:	mov    QWORD PTR [rsp+0x18],rdi
  403173:	lea    edx,[rbp+r9*1+0x0]
  403178:	nop    DWORD PTR [rax+rax*1+0x0]
  403180:	mov    DWORD PTR [rsp+0x38],eax
  403184:	mov    DWORD PTR [rsp+0xc],edx
  403188:	mov    edx,eax
  40318a:	sub    edx,DWORD PTR [r12+rsi*1]
  40318e:	mov    esi,edx
  403190:	js     403227 <flatcc_verify_table_vector_field@@Base+0x1e7>
  403196:	mov    edi,edx
  403198:	test   dl,0x1
  40319b:	jne    403227 <flatcc_verify_table_vector_field@@Base+0x1e7>
  4031a1:	lea    r9,[rdi+0x2]
  4031a5:	cmp    r15,r9
  4031a8:	jb     403227 <flatcc_verify_table_vector_field@@Base+0x1e7>
  4031aa:	lea    r10,[r12+rdi*1]
  4031ae:	movzx  r11d,WORD PTR [r10]
  4031b2:	add    esi,r11d
  4031b5:	mov    WORD PTR [rsp+0x3e],r11w
  4031bb:	cmp    r14d,esi
  4031be:	jb     403227 <flatcc_verify_table_vector_field@@Base+0x1e7>
  4031c0:	test   r11b,0x1
  4031c4:	jne    403227 <flatcc_verify_table_vector_field@@Base+0x1e7>
  4031c6:	cmp    r11w,0x3
  4031cb:	jbe    403227 <flatcc_verify_table_vector_field@@Base+0x1e7>
  4031cd:	movzx  esi,WORD PTR [r12+rdi*1+0x2]
  4031d3:	mov    edx,r14d
  4031d6:	sub    edx,eax
  4031d8:	mov    WORD PTR [rsp+0x3c],si
  4031dd:	cmp    edx,esi
  4031df:	jb     403227 <flatcc_verify_table_vector_field@@Base+0x1e7>
  4031e1:	mov    rdi,QWORD PTR [rsp+0x18]
  4031e6:	mov    QWORD PTR [rsp+0x10],rcx
  4031eb:	mov    QWORD PTR [rsp+0x30],r10
  4031f0:	mov    QWORD PTR [rsp+0x20],r12
  4031f5:	mov    DWORD PTR [rsp+0x28],r14d
  4031fa:	call   rcx
  4031fc:	test   eax,eax
  4031fe:	mov    rcx,QWORD PTR [rsp+0x10]
  403203:	mov    edx,DWORD PTR [rsp+0xc]
  403207:	jne    403227 <flatcc_verify_table_vector_field@@Base+0x1e7>
  403209:	add    ebp,0x4
  40320c:	cmp    ebp,edx
  40320e:	je     403271 <flatcc_verify_table_vector_field@@Base+0x231>
  403210:	mov    esi,ebp
  403212:	lea    rbx,[r12+rsi*1]
  403216:	mov    eax,DWORD PTR [rbx]
  403218:	mov    DWORD PTR [rsp+0x2c],r13d
  40321d:	add    eax,ebp
  40321f:	cmp    ebp,eax
  403221:	jb     4032b0 <flatcc_verify_table_vector_field@@Base+0x270>
  403227:	mov    edx,DWORD PTR [rbx]
  403229:	mov    DWORD PTR [rsp+0x2c],r13d
  40322e:	add    edx,ebp
  403230:	cmp    edx,ebp
  403232:	ja     4032da <flatcc_verify_table_vector_field@@Base+0x29a>
  403238:	mov    eax,0xf
  40323d:	nop    DWORD PTR [rax]
  403240:	mov    rbx,QWORD PTR [rsp+0x48]
  403245:	xor    rbx,QWORD PTR fs:0x28
  40324e:	jne    403366 <flatcc_verify_table_vector_field@@Base+0x326>
  403254:	add    rsp,0x58
  403258:	pop    rbx
  403259:	pop    rbp
  40325a:	pop    r12
  40325c:	pop    r13
  40325e:	pop    r14
  403260:	pop    r15
  403262:	ret    
  403263:	nop    DWORD PTR [rax+rax*1+0x0]
  403268:	mov    eax,0x4
  40326d:	test   edx,edx
  40326f:	jne    403240 <flatcc_verify_table_vector_field@@Base+0x200>
  403271:	xor    eax,eax
  403273:	jmp    403240 <flatcc_verify_table_vector_field@@Base+0x200>
  403275:	nop    DWORD PTR [rax]
  403278:	and    esi,0x3
  40327b:	mov    eax,0x10
  403280:	jne    403240 <flatcc_verify_table_vector_field@@Base+0x200>
  403282:	mov    ecx,DWORD PTR [r12+rdi*1]
  403286:	sub    r14d,0x4
  40328a:	mov    eax,0x19
  40328f:	cmp    ecx,0x3fffffff
  403295:	ja     403240 <flatcc_verify_table_vector_field@@Base+0x200>
  403297:	sub    r14d,edx
  40329a:	shl    ecx,0x2
  40329d:	mov    eax,0x1a
  4032a2:	cmp    r14d,ecx
  4032a5:	jb     403240 <flatcc_verify_table_vector_field@@Base+0x200>
  4032a7:	xor    eax,eax
  4032a9:	jmp    403240 <flatcc_verify_table_vector_field@@Base+0x200>
  4032ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4032b0:	mov    esi,eax
  4032b2:	lea    rdi,[rsi+0x4]
  4032b6:	cmp    r15,rdi
  4032b9:	jb     403227 <flatcc_verify_table_vector_field@@Base+0x1e7>
  4032bf:	test   al,0x3
  4032c1:	je     403180 <flatcc_verify_table_vector_field@@Base+0x140>
  4032c7:	jmp    403227 <flatcc_verify_table_vector_field@@Base+0x1e7>
  4032cc:	nop    DWORD PTR [rax+0x0]
  4032d0:	mov    eax,0x3
  4032d5:	jmp    403240 <flatcc_verify_table_vector_field@@Base+0x200>
  4032da:	mov    esi,edx
  4032dc:	lea    rdi,[rsi+0x4]
  4032e0:	mov    eax,0xf
  4032e5:	cmp    r15,rdi
  4032e8:	jb     403240 <flatcc_verify_table_vector_field@@Base+0x200>
  4032ee:	test   dl,0x3
  4032f1:	jne    403240 <flatcc_verify_table_vector_field@@Base+0x200>
  4032f7:	mov    DWORD PTR [rsp+0x38],edx
  4032fb:	mov    r8d,edx
  4032fe:	sub    r8d,DWORD PTR [r12+rsi*1]
  403302:	js     40336b <flatcc_verify_table_vector_field@@Base+0x32b>
  403304:	mov    esi,r8d
  403307:	test   r8b,0x1
  40330b:	jne    40336b <flatcc_verify_table_vector_field@@Base+0x32b>
  40330d:	lea    rax,[rsi+0x2]
  403311:	cmp    r15,rax
  403314:	jb     403393 <flatcc_verify_table_vector_field@@Base+0x353>
  403316:	lea    r9,[r12+rsi*1]
  40331a:	movzx  edi,WORD PTR [r9]
  40331e:	mov    eax,edi
  403320:	mov    WORD PTR [rsp+0x3e],di
  403325:	add    edi,r8d
  403328:	cmp    r14d,edi
  40332b:	jb     403375 <flatcc_verify_table_vector_field@@Base+0x335>
  40332d:	test   al,0x1
  40332f:	jne    403375 <flatcc_verify_table_vector_field@@Base+0x335>
  403331:	cmp    ax,0x3
  403335:	jbe    40337f <flatcc_verify_table_vector_field@@Base+0x33f>
  403337:	movzx  eax,WORD PTR [r12+rsi*1+0x2]
  40333d:	mov    ebx,r14d
  403340:	sub    ebx,edx
  403342:	mov    WORD PTR [rsp+0x3c],ax
  403347:	cmp    ebx,eax
  403349:	jb     403389 <flatcc_verify_table_vector_field@@Base+0x349>
  40334b:	lea    rdi,[rsp+0x20]
  403350:	mov    QWORD PTR [rsp+0x30],r9
  403355:	mov    QWORD PTR [rsp+0x20],r12
  40335a:	mov    DWORD PTR [rsp+0x28],r14d
  40335f:	call   rcx
  403361:	jmp    403240 <flatcc_verify_table_vector_field@@Base+0x200>
  403366:	call   401170 <__stack_chk_fail@plt>
  40336b:	mov    eax,0x1d
  403370:	jmp    403240 <flatcc_verify_table_vector_field@@Base+0x200>
  403375:	mov    eax,0x1e
  40337a:	jmp    403240 <flatcc_verify_table_vector_field@@Base+0x200>
  40337f:	mov    eax,0x1c
  403384:	jmp    403240 <flatcc_verify_table_vector_field@@Base+0x200>
  403389:	mov    eax,0x14
  40338e:	jmp    403240 <flatcc_verify_table_vector_field@@Base+0x200>
  403393:	mov    eax,0x1b
  403398:	jmp    403240 <flatcc_verify_table_vector_field@@Base+0x200>
  40339d:	nop    DWORD PTR [rax]

00000000004033a0 <flatcc_verify_union_table@@Base>:
  4033a0:	endbr64 
  4033a4:	sub    rsp,0x38
  4033a8:	mov    edx,DWORD PTR [rdi+0xc]
  4033ab:	mov    rax,QWORD PTR fs:0x28
  4033b4:	mov    QWORD PTR [rsp+0x28],rax
  4033b9:	xor    eax,eax
  4033bb:	dec    edx
  4033bd:	mov    r8d,DWORD PTR [rdi+0x18]
  4033c1:	mov    ecx,DWORD PTR [rdi+0x14]
  4033c4:	mov    r9d,DWORD PTR [rdi+0x8]
  4033c8:	mov    r10,QWORD PTR [rdi]
  4033cb:	mov    DWORD PTR [rsp+0xc],edx
  4033cf:	mov    eax,0x3
  4033d4:	je     4033e3 <flatcc_verify_union_table@@Base+0x43>
  4033d6:	lea    edx,[r8+rcx*1]
  4033da:	mov    eax,0xf
  4033df:	cmp    ecx,edx
  4033e1:	jb     403400 <flatcc_verify_union_table@@Base+0x60>
  4033e3:	mov    rsi,QWORD PTR [rsp+0x28]
  4033e8:	xor    rsi,QWORD PTR fs:0x28
  4033f1:	jne    4034ba <flatcc_verify_union_table@@Base+0x11a>
  4033f7:	add    rsp,0x38
  4033fb:	ret    
  4033fc:	nop    DWORD PTR [rax+0x0]
  403400:	mov    ecx,edx
  403402:	mov    edi,r9d
  403405:	lea    r8,[rcx+0x4]
  403409:	cmp    r8,rdi
  40340c:	ja     4033e3 <flatcc_verify_union_table@@Base+0x43>
  40340e:	test   dl,0x3
  403411:	jne    4033e3 <flatcc_verify_union_table@@Base+0x43>
  403413:	mov    DWORD PTR [rsp+0x18],edx
  403417:	mov    eax,edx
  403419:	sub    eax,DWORD PTR [r10+rcx*1]
  40341d:	mov    ecx,eax
  40341f:	js     4034b0 <flatcc_verify_union_table@@Base+0x110>
  403425:	mov    r8d,eax
  403428:	mov    eax,0x1d
  40342d:	test   cl,0x1
  403430:	jne    4033e3 <flatcc_verify_union_table@@Base+0x43>
  403432:	lea    r11,[r8+0x2]
  403436:	mov    eax,0x1b
  40343b:	cmp    rdi,r11
  40343e:	jb     4033e3 <flatcc_verify_union_table@@Base+0x43>
  403440:	lea    r11,[r10+r8*1]
  403444:	movzx  eax,WORD PTR [r11]
  403448:	add    ecx,eax
  40344a:	mov    edi,eax
  40344c:	mov    WORD PTR [rsp+0x1e],ax
  403451:	mov    eax,0x1e
  403456:	cmp    r9d,ecx
  403459:	jb     4033e3 <flatcc_verify_union_table@@Base+0x43>
  40345b:	test   dil,0x1
  40345f:	jne    4033e3 <flatcc_verify_union_table@@Base+0x43>
  403461:	mov    eax,0x1c
  403466:	cmp    di,0x3
  40346a:	jbe    4033e3 <flatcc_verify_union_table@@Base+0x43>
  403470:	movzx  eax,WORD PTR [r10+r8*1+0x2]
  403476:	mov    ecx,r9d
  403479:	sub    ecx,edx
  40347b:	movzx  edx,ax
  40347e:	mov    WORD PTR [rsp+0x1c],ax
  403483:	mov    eax,0x14
  403488:	cmp    ecx,edx
  40348a:	jb     4033e3 <flatcc_verify_union_table@@Base+0x43>
  403490:	mov    rdi,rsp
  403493:	mov    QWORD PTR [rsp+0x10],r11
  403498:	mov    QWORD PTR [rsp],r10
  40349c:	mov    DWORD PTR [rsp+0x8],r9d
  4034a1:	call   rsi
  4034a3:	jmp    4033e3 <flatcc_verify_union_table@@Base+0x43>
  4034a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4034b0:	mov    eax,0x1d
  4034b5:	jmp    4033e3 <flatcc_verify_union_table@@Base+0x43>
  4034ba:	call   401170 <__stack_chk_fail@plt>
  4034bf:	nop

00000000004034c0 <flatcc_verify_union_struct@@Base>:
  4034c0:	endbr64 
  4034c4:	mov    ecx,DWORD PTR [rdi+0x18]
  4034c7:	mov    r8d,DWORD PTR [rdi+0x14]
  4034cb:	mov    eax,0x12
  4034d0:	mov    edi,DWORD PTR [rdi+0x8]
  4034d3:	test   ecx,ecx
  4034d5:	je     4034fc <flatcc_verify_union_struct@@Base+0x3c>
  4034d7:	add    ecx,r8d
  4034da:	cmp    edi,ecx
  4034dc:	jb     4034fc <flatcc_verify_union_struct@@Base+0x3c>
  4034de:	add    esi,ecx
  4034e0:	jb     403501 <flatcc_verify_union_struct@@Base+0x41>
  4034e2:	mov    eax,0x9
  4034e7:	cmp    edi,esi
  4034e9:	jb     403500 <flatcc_verify_union_struct@@Base+0x40>
  4034eb:	movzx  edx,dx
  4034ee:	dec    edx
  4034f0:	and    ecx,edx
  4034f2:	cmp    ecx,0x1
  4034f5:	sbb    eax,eax
  4034f7:	not    eax
  4034f9:	and    eax,0xb
  4034fc:	ret    
  4034fd:	nop    DWORD PTR [rax]
  403500:	ret    
  403501:	mov    eax,0xa
  403506:	ret    
  403507:	nop    WORD PTR [rax+rax*1+0x0]

0000000000403510 <flatcc_verify_union_string@@Base>:
  403510:	endbr64 
  403514:	mov    ecx,DWORD PTR [rdi+0x14]
  403517:	mov    edx,DWORD PTR [rdi+0x18]
  40351a:	mov    eax,0x11
  40351f:	add    edx,ecx
  403521:	cmp    ecx,edx
  403523:	jae    403568 <flatcc_verify_union_string@@Base+0x58>
  403525:	mov    r9d,DWORD PTR [rdi+0x8]
  403529:	mov    esi,edx
  40352b:	lea    r8,[rsi+0x4]
  40352f:	mov    rcx,r9
  403532:	cmp    r8,r9
  403535:	ja     403568 <flatcc_verify_union_string@@Base+0x58>
  403537:	mov    r9d,edx
  40353a:	and    r9d,0x3
  40353e:	jne    403568 <flatcc_verify_union_string@@Base+0x58>
  403540:	mov    rdi,QWORD PTR [rdi]
  403543:	sub    ecx,0x4
  403546:	mov    esi,DWORD PTR [rdi+rsi*1]
  403549:	sub    ecx,edx
  40354b:	lea    edx,[rsi+0x1]
  40354e:	mov    eax,0x8
  403553:	cmp    ecx,edx
  403555:	jb     403568 <flatcc_verify_union_string@@Base+0x58>
  403557:	add    r8,rdi
  40355a:	cmp    BYTE PTR [r8+rsi*1],0x0
  40355f:	mov    eax,0x7
  403564:	cmove  eax,r9d
  403568:	ret    
  403569:	nop    DWORD PTR [rax+0x0]

0000000000403570 <flatcc_verify_buffer_header@@Base>:
  403570:	endbr64 
  403574:	push   rbx
  403575:	sub    rsp,0x10
  403579:	mov    rax,QWORD PTR fs:0x28
  403582:	mov    QWORD PTR [rsp+0x8],rax
  403587:	xor    eax,eax
  403589:	mov    eax,0x5
  40358e:	test   dil,0x3
  403592:	jne    4035da <flatcc_verify_buffer_header@@Base+0x6a>
  403594:	mov    rcx,rdx
  403597:	mov    edx,0xfffffff7
  40359c:	mov    eax,0x6
  4035a1:	cmp    rsi,rdx
  4035a4:	ja     4035da <flatcc_verify_buffer_header@@Base+0x6a>
  4035a6:	mov    eax,0x1
  4035ab:	cmp    rsi,0x7
  4035af:	jbe    4035da <flatcc_verify_buffer_header@@Base+0x6a>
  4035b1:	test   rcx,rcx
  4035b4:	je     4035d8 <flatcc_verify_buffer_header@@Base+0x68>
  4035b6:	mov    rbx,rdi
  4035b9:	mov    edx,0x4
  4035be:	lea    rdi,[rsp+0x4]
  4035c3:	mov    rsi,rcx
  4035c6:	call   401140 <strncpy@plt>
  4035cb:	mov    eax,DWORD PTR [rsp+0x4]
  4035cf:	cmp    DWORD PTR [rbx+0x4],eax
  4035d2:	je     4035d8 <flatcc_verify_buffer_header@@Base+0x68>
  4035d4:	test   eax,eax
  4035d6:	jne    4035f0 <flatcc_verify_buffer_header@@Base+0x80>
  4035d8:	xor    eax,eax
  4035da:	mov    rcx,QWORD PTR [rsp+0x8]
  4035df:	xor    rcx,QWORD PTR fs:0x28
  4035e8:	jne    4035f7 <flatcc_verify_buffer_header@@Base+0x87>
  4035ea:	add    rsp,0x10
  4035ee:	pop    rbx
  4035ef:	ret    
  4035f0:	mov    eax,0x2
  4035f5:	jmp    4035da <flatcc_verify_buffer_header@@Base+0x6a>
  4035f7:	call   401170 <__stack_chk_fail@plt>
  4035fc:	nop    DWORD PTR [rax+0x0]

0000000000403600 <flatcc_verify_typed_buffer_header@@Base>:
  403600:	endbr64 
  403604:	mov    eax,0x5
  403609:	test   dil,0x3
  40360d:	jne    403639 <flatcc_verify_typed_buffer_header@@Base+0x39>
  40360f:	mov    ecx,0xfffffff7
  403614:	mov    eax,0x6
  403619:	cmp    rsi,rcx
  40361c:	ja     403639 <flatcc_verify_typed_buffer_header@@Base+0x39>
  40361e:	mov    eax,0x1
  403623:	cmp    rsi,0x7
  403627:	jbe    403639 <flatcc_verify_typed_buffer_header@@Base+0x39>
  403629:	xor    eax,eax
  40362b:	test   edx,edx
  40362d:	je     403639 <flatcc_verify_typed_buffer_header@@Base+0x39>
  40362f:	xor    eax,eax
  403631:	cmp    edx,DWORD PTR [rdi+0x4]
  403634:	setne  al
  403637:	add    eax,eax
  403639:	ret    
  40363a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000403640 <flatcc_verify_struct_as_root@@Base>:
  403640:	endbr64 
  403644:	push   r14
  403646:	mov    r14,rdx
  403649:	push   r13
  40364b:	mov    r13d,r8d
  40364e:	push   r12
  403650:	mov    r12,rdi
  403653:	push   rbp
  403654:	mov    rbp,rsi
  403657:	push   rbx
  403658:	mov    rbx,rcx
  40365b:	call   403570 <flatcc_verify_buffer_header@@Base>
  403660:	test   eax,eax
  403662:	jne    4036b0 <flatcc_verify_struct_as_root@@Base+0x70>
  403664:	mov    edx,DWORD PTR [r12]
  403668:	test   edx,edx
  40366a:	je     403698 <flatcc_verify_struct_as_root@@Base+0x58>
  40366c:	cmp    edx,ebp
  40366e:	ja     403698 <flatcc_verify_struct_as_root@@Base+0x58>
  403670:	add    ebx,edx
  403672:	jb     4036d7 <flatcc_verify_struct_as_root@@Base+0x97>
  403674:	cmp    ebp,ebx
  403676:	jb     4036d0 <flatcc_verify_struct_as_root@@Base+0x90>
  403678:	movzx  r13d,r13w
  40367c:	dec    r13d
  40367f:	test   r13d,edx
  403682:	mov    edx,0xb
  403687:	cmovne eax,edx
  40368a:	pop    rbx
  40368b:	pop    rbp
  40368c:	pop    r12
  40368e:	pop    r13
  403690:	pop    r14
  403692:	ret    
  403693:	nop    DWORD PTR [rax+rax*1+0x0]
  403698:	pop    rbx
  403699:	pop    rbp
  40369a:	pop    r12
  40369c:	pop    r13
  40369e:	mov    eax,0x12
  4036a3:	pop    r14
  4036a5:	ret    
  4036a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4036b0:	pop    rbx
  4036b1:	mov    rsi,rbp
  4036b4:	pop    rbp
  4036b5:	mov    rdi,r12
  4036b8:	pop    r12
  4036ba:	pop    r13
  4036bc:	mov    rdx,r14
  4036bf:	pop    r14
  4036c1:	jmp    403570 <flatcc_verify_buffer_header@@Base>
  4036c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4036d0:	mov    eax,0x9
  4036d5:	jmp    40368a <flatcc_verify_struct_as_root@@Base+0x4a>
  4036d7:	mov    eax,0xa
  4036dc:	jmp    40368a <flatcc_verify_struct_as_root@@Base+0x4a>
  4036de:	xchg   ax,ax

00000000004036e0 <flatcc_verify_struct_as_typed_root@@Base>:
  4036e0:	endbr64 
  4036e4:	push   r14
  4036e6:	mov    r14d,edx
  4036e9:	push   r13
  4036eb:	mov    r13d,r8d
  4036ee:	push   r12
  4036f0:	mov    r12,rdi
  4036f3:	push   rbp
  4036f4:	mov    rbp,rsi
  4036f7:	push   rbx
  4036f8:	mov    rbx,rcx
  4036fb:	call   403600 <flatcc_verify_typed_buffer_header@@Base>
  403700:	test   eax,eax
  403702:	jne    403750 <flatcc_verify_struct_as_typed_root@@Base+0x70>
  403704:	mov    edx,DWORD PTR [r12]
  403708:	test   edx,edx
  40370a:	je     403738 <flatcc_verify_struct_as_typed_root@@Base+0x58>
  40370c:	cmp    edx,ebp
  40370e:	ja     403738 <flatcc_verify_struct_as_typed_root@@Base+0x58>
  403710:	add    ebx,edx
  403712:	jb     403777 <flatcc_verify_struct_as_typed_root@@Base+0x97>
  403714:	cmp    ebp,ebx
  403716:	jb     403770 <flatcc_verify_struct_as_typed_root@@Base+0x90>
  403718:	movzx  r13d,r13w
  40371c:	dec    r13d
  40371f:	test   r13d,edx
  403722:	mov    edx,0xb
  403727:	cmovne eax,edx
  40372a:	pop    rbx
  40372b:	pop    rbp
  40372c:	pop    r12
  40372e:	pop    r13
  403730:	pop    r14
  403732:	ret    
  403733:	nop    DWORD PTR [rax+rax*1+0x0]
  403738:	pop    rbx
  403739:	pop    rbp
  40373a:	pop    r12
  40373c:	pop    r13
  40373e:	mov    eax,0x12
  403743:	pop    r14
  403745:	ret    
  403746:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403750:	pop    rbx
  403751:	mov    rsi,rbp
  403754:	pop    rbp
  403755:	mov    rdi,r12
  403758:	pop    r12
  40375a:	pop    r13
  40375c:	mov    edx,r14d
  40375f:	pop    r14
  403761:	jmp    403600 <flatcc_verify_typed_buffer_header@@Base>
  403766:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403770:	mov    eax,0x9
  403775:	jmp    40372a <flatcc_verify_struct_as_typed_root@@Base+0x4a>
  403777:	mov    eax,0xa
  40377c:	jmp    40372a <flatcc_verify_struct_as_typed_root@@Base+0x4a>
  40377e:	xchg   ax,ax

0000000000403780 <flatcc_verify_table_as_root@@Base>:
  403780:	endbr64 
  403784:	push   r14
  403786:	mov    r14,rcx
  403789:	push   r13
  40378b:	mov    r13,rsi
  40378e:	push   r12
  403790:	mov    r12,rdx
  403793:	push   rbp
  403794:	mov    ebp,esi
  403796:	mov    rsi,rbp
  403799:	push   rbx
  40379a:	mov    rbx,rdi
  40379d:	sub    rsp,0x30
  4037a1:	mov    rax,QWORD PTR fs:0x28
  4037aa:	mov    QWORD PTR [rsp+0x28],rax
  4037af:	xor    eax,eax
  4037b1:	call   403570 <flatcc_verify_buffer_header@@Base>
  4037b6:	test   eax,eax
  4037b8:	jne    4038a0 <flatcc_verify_table_as_root@@Base+0x120>
  4037be:	mov    edx,DWORD PTR [rbx]
  4037c0:	mov    DWORD PTR [rsp+0xc],0x63
  4037c8:	mov    eax,0xf
  4037cd:	test   edx,edx
  4037cf:	jne    4037f8 <flatcc_verify_table_as_root@@Base+0x78>
  4037d1:	mov    rcx,QWORD PTR [rsp+0x28]
  4037d6:	xor    rcx,QWORD PTR fs:0x28
  4037df:	jne    4038c2 <flatcc_verify_table_as_root@@Base+0x142>
  4037e5:	add    rsp,0x30
  4037e9:	pop    rbx
  4037ea:	pop    rbp
  4037eb:	pop    r12
  4037ed:	pop    r13
  4037ef:	pop    r14
  4037f1:	ret    
  4037f2:	nop    WORD PTR [rax+rax*1+0x0]
  4037f8:	mov    ecx,edx
  4037fa:	lea    rsi,[rcx+0x4]
  4037fe:	cmp    rbp,rsi
  403801:	jb     4037d1 <flatcc_verify_table_as_root@@Base+0x51>
  403803:	test   dl,0x3
  403806:	jne    4037d1 <flatcc_verify_table_as_root@@Base+0x51>
  403808:	mov    eax,edx
  40380a:	sub    eax,DWORD PTR [rbx+rcx*1]
  40380d:	mov    DWORD PTR [rsp+0x18],edx
  403811:	mov    ecx,eax
  403813:	js     4038b8 <flatcc_verify_table_as_root@@Base+0x138>
  403819:	mov    edi,eax
  40381b:	mov    eax,0x1d
  403820:	test   cl,0x1
  403823:	jne    4037d1 <flatcc_verify_table_as_root@@Base+0x51>
  403825:	lea    rsi,[rdi+0x2]
  403829:	mov    eax,0x1b
  40382e:	cmp    rbp,rsi
  403831:	jb     4037d1 <flatcc_verify_table_as_root@@Base+0x51>
  403833:	lea    r8,[rbx+rdi*1]
  403837:	movzx  eax,WORD PTR [r8]
  40383b:	add    ecx,eax
  40383d:	mov    esi,eax
  40383f:	mov    WORD PTR [rsp+0x1e],ax
  403844:	mov    eax,0x1e
  403849:	cmp    r13d,ecx
  40384c:	jb     4037d1 <flatcc_verify_table_as_root@@Base+0x51>
  40384e:	test   sil,0x1
  403852:	jne    4037d1 <flatcc_verify_table_as_root@@Base+0x51>
  403858:	mov    eax,0x1c
  40385d:	cmp    si,0x3
  403861:	jbe    4037d1 <flatcc_verify_table_as_root@@Base+0x51>
  403867:	movzx  eax,WORD PTR [rbx+rdi*1+0x2]
  40386c:	mov    ecx,r13d
  40386f:	sub    ecx,edx
  403871:	movzx  edx,ax
  403874:	mov    WORD PTR [rsp+0x1c],ax
  403879:	mov    eax,0x14
  40387e:	cmp    ecx,edx
  403880:	jb     4037d1 <flatcc_verify_table_as_root@@Base+0x51>
  403886:	mov    rdi,rsp
  403889:	mov    QWORD PTR [rsp+0x10],r8
  40388e:	mov    QWORD PTR [rsp],rbx
  403892:	mov    DWORD PTR [rsp+0x8],r13d
  403897:	call   r14
  40389a:	jmp    4037d1 <flatcc_verify_table_as_root@@Base+0x51>
  40389f:	nop
  4038a0:	mov    rdx,r12
  4038a3:	mov    rsi,rbp
  4038a6:	mov    rdi,rbx
  4038a9:	call   403570 <flatcc_verify_buffer_header@@Base>
  4038ae:	jmp    4037d1 <flatcc_verify_table_as_root@@Base+0x51>
  4038b3:	nop    DWORD PTR [rax+rax*1+0x0]
  4038b8:	mov    eax,0x1d
  4038bd:	jmp    4037d1 <flatcc_verify_table_as_root@@Base+0x51>
  4038c2:	call   401170 <__stack_chk_fail@plt>
  4038c7:	nop    WORD PTR [rax+rax*1+0x0]

00000000004038d0 <flatcc_verify_table_as_typed_root@@Base>:
  4038d0:	endbr64 
  4038d4:	push   r14
  4038d6:	mov    r14,rcx
  4038d9:	push   r13
  4038db:	mov    r13,rsi
  4038de:	push   r12
  4038e0:	mov    r12d,edx
  4038e3:	push   rbp
  4038e4:	mov    ebp,esi
  4038e6:	mov    rsi,rbp
  4038e9:	push   rbx
  4038ea:	mov    rbx,rdi
  4038ed:	sub    rsp,0x30
  4038f1:	mov    rax,QWORD PTR fs:0x28
  4038fa:	mov    QWORD PTR [rsp+0x28],rax
  4038ff:	xor    eax,eax
  403901:	call   403600 <flatcc_verify_typed_buffer_header@@Base>
  403906:	test   eax,eax
  403908:	jne    4039f0 <flatcc_verify_table_as_typed_root@@Base+0x120>
  40390e:	mov    edx,DWORD PTR [rbx]
  403910:	mov    DWORD PTR [rsp+0xc],0x63
  403918:	mov    eax,0xf
  40391d:	test   edx,edx
  40391f:	jne    403948 <flatcc_verify_table_as_typed_root@@Base+0x78>
  403921:	mov    rcx,QWORD PTR [rsp+0x28]
  403926:	xor    rcx,QWORD PTR fs:0x28
  40392f:	jne    403a12 <flatcc_verify_table_as_typed_root@@Base+0x142>
  403935:	add    rsp,0x30
  403939:	pop    rbx
  40393a:	pop    rbp
  40393b:	pop    r12
  40393d:	pop    r13
  40393f:	pop    r14
  403941:	ret    
  403942:	nop    WORD PTR [rax+rax*1+0x0]
  403948:	mov    ecx,edx
  40394a:	lea    rsi,[rcx+0x4]
  40394e:	cmp    rbp,rsi
  403951:	jb     403921 <flatcc_verify_table_as_typed_root@@Base+0x51>
  403953:	test   dl,0x3
  403956:	jne    403921 <flatcc_verify_table_as_typed_root@@Base+0x51>
  403958:	mov    eax,edx
  40395a:	sub    eax,DWORD PTR [rbx+rcx*1]
  40395d:	mov    DWORD PTR [rsp+0x18],edx
  403961:	mov    ecx,eax
  403963:	js     403a08 <flatcc_verify_table_as_typed_root@@Base+0x138>
  403969:	mov    edi,eax
  40396b:	mov    eax,0x1d
  403970:	test   cl,0x1
  403973:	jne    403921 <flatcc_verify_table_as_typed_root@@Base+0x51>
  403975:	lea    rsi,[rdi+0x2]
  403979:	mov    eax,0x1b
  40397e:	cmp    rbp,rsi
  403981:	jb     403921 <flatcc_verify_table_as_typed_root@@Base+0x51>
  403983:	lea    r8,[rbx+rdi*1]
  403987:	movzx  eax,WORD PTR [r8]
  40398b:	add    ecx,eax
  40398d:	mov    esi,eax
  40398f:	mov    WORD PTR [rsp+0x1e],ax
  403994:	mov    eax,0x1e
  403999:	cmp    r13d,ecx
  40399c:	jb     403921 <flatcc_verify_table_as_typed_root@@Base+0x51>
  40399e:	test   sil,0x1
  4039a2:	jne    403921 <flatcc_verify_table_as_typed_root@@Base+0x51>
  4039a8:	mov    eax,0x1c
  4039ad:	cmp    si,0x3
  4039b1:	jbe    403921 <flatcc_verify_table_as_typed_root@@Base+0x51>
  4039b7:	movzx  eax,WORD PTR [rbx+rdi*1+0x2]
  4039bc:	mov    ecx,r13d
  4039bf:	sub    ecx,edx
  4039c1:	movzx  edx,ax
  4039c4:	mov    WORD PTR [rsp+0x1c],ax
  4039c9:	mov    eax,0x14
  4039ce:	cmp    ecx,edx
  4039d0:	jb     403921 <flatcc_verify_table_as_typed_root@@Base+0x51>
  4039d6:	mov    rdi,rsp
  4039d9:	mov    QWORD PTR [rsp+0x10],r8
  4039de:	mov    QWORD PTR [rsp],rbx
  4039e2:	mov    DWORD PTR [rsp+0x8],r13d
  4039e7:	call   r14
  4039ea:	jmp    403921 <flatcc_verify_table_as_typed_root@@Base+0x51>
  4039ef:	nop
  4039f0:	mov    edx,r12d
  4039f3:	mov    rsi,rbp
  4039f6:	mov    rdi,rbx
  4039f9:	call   403600 <flatcc_verify_typed_buffer_header@@Base>
  4039fe:	jmp    403921 <flatcc_verify_table_as_typed_root@@Base+0x51>
  403a03:	nop    DWORD PTR [rax+rax*1+0x0]
  403a08:	mov    eax,0x1d
  403a0d:	jmp    403921 <flatcc_verify_table_as_typed_root@@Base+0x51>
  403a12:	call   401170 <__stack_chk_fail@plt>
  403a17:	nop    WORD PTR [rax+rax*1+0x0]

0000000000403a20 <flatcc_verify_struct_as_nested_root@@Base>:
  403a20:	endbr64 
  403a24:	push   r15
  403a26:	push   r14
  403a28:	mov    r14,r8
  403a2b:	mov    r8d,0x1
  403a31:	push   r13
  403a33:	mov    r13d,r9d
  403a36:	push   r12
  403a38:	mov    r12d,edx
  403a3b:	push   rbp
  403a3c:	mov    rbp,rdi
  403a3f:	push   rbx
  403a40:	mov    ebx,esi
  403a42:	movzx  esi,si
  403a45:	sub    rsp,0x18
  403a49:	mov    QWORD PTR [rsp+0x8],rcx
  403a4e:	movzx  ecx,r9w
  403a52:	mov    r9d,0xffffffff
  403a58:	mov    r15,rcx
  403a5b:	call   402c30 <flatcc_verify_vector_field@@Base>
  403a60:	test   eax,eax
  403a62:	jne    403ad0 <flatcc_verify_struct_as_nested_root@@Base+0xb0>
  403a64:	lea    ebx,[rbx+rbx*1+0x4]
  403a68:	cmp    bx,WORD PTR [rbp+0x1e]
  403a6c:	jae    403ab8 <flatcc_verify_struct_as_nested_root@@Base+0x98>
  403a6e:	mov    rax,QWORD PTR [rbp+0x10]
  403a72:	movzx  ebx,bx
  403a75:	movzx  eax,WORD PTR [rax+rbx*1]
  403a79:	test   ax,ax
  403a7c:	je     403ab8 <flatcc_verify_struct_as_nested_root@@Base+0x98>
  403a7e:	mov    edi,DWORD PTR [rbp+0x18]
  403a81:	add    rdi,rax
  403a84:	add    rdi,QWORD PTR [rbp+0x0]
  403a88:	je     403ab8 <flatcc_verify_struct_as_nested_root@@Base+0x98>
  403a8a:	mov    eax,DWORD PTR [rdi]
  403a8c:	mov    rdx,QWORD PTR [rsp+0x8]
  403a91:	add    rdi,rax
  403a94:	mov    esi,DWORD PTR [rdi]
  403a96:	add    rsp,0x18
  403a9a:	pop    rbx
  403a9b:	pop    rbp
  403a9c:	pop    r12
  403a9e:	movzx  r8d,r13w
  403aa2:	pop    r13
  403aa4:	mov    rcx,r14
  403aa7:	pop    r14
  403aa9:	add    rdi,0x4
  403aad:	pop    r15
  403aaf:	jmp    403640 <flatcc_verify_struct_as_root@@Base>
  403ab4:	nop    DWORD PTR [rax+0x0]
  403ab8:	add    rsp,0x18
  403abc:	pop    rbx
  403abd:	pop    rbp
  403abe:	pop    r12
  403ac0:	pop    r13
  403ac2:	pop    r14
  403ac4:	xor    eax,eax
  403ac6:	pop    r15
  403ac8:	ret    
  403ac9:	nop    DWORD PTR [rax+0x0]
  403ad0:	add    rsp,0x18
  403ad4:	movzx  esi,bx
  403ad7:	pop    rbx
  403ad8:	mov    rdi,rbp
  403adb:	pop    rbp
  403adc:	mov    edx,r12d
  403adf:	pop    r12
  403ae1:	pop    r13
  403ae3:	pop    r14
  403ae5:	movzx  ecx,r15w
  403ae9:	mov    r9d,0xffffffff
  403aef:	mov    r8d,0x1
  403af5:	pop    r15
  403af7:	jmp    402c30 <flatcc_verify_vector_field@@Base>
  403afc:	nop    DWORD PTR [rax+0x0]

0000000000403b00 <flatcc_verify_table_as_nested_root@@Base>:
  403b00:	endbr64 
  403b04:	push   r15
  403b06:	push   r14
  403b08:	mov    r14d,edx
  403b0b:	push   r13
  403b0d:	mov    r13,rdi
  403b10:	push   r12
  403b12:	mov    r12,r9
  403b15:	mov    r9d,0xffffffff
  403b1b:	push   rbp
  403b1c:	mov    rbp,rcx
  403b1f:	movzx  ecx,r8w
  403b23:	push   rbx
  403b24:	mov    r8d,0x1
  403b2a:	mov    ebx,esi
  403b2c:	sub    rsp,0x48
  403b30:	movzx  esi,si
  403b33:	mov    rax,QWORD PTR fs:0x28
  403b3c:	mov    QWORD PTR [rsp+0x38],rax
  403b41:	xor    eax,eax
  403b43:	mov    r15,rcx
  403b46:	call   402c30 <flatcc_verify_vector_field@@Base>
  403b4b:	test   eax,eax
  403b4d:	jne    403ca0 <flatcc_verify_table_as_nested_root@@Base+0x1a0>
  403b53:	lea    ebx,[rbx+rbx*1+0x4]
  403b57:	cmp    bx,WORD PTR [r13+0x1e]
  403b5c:	jae    403c80 <flatcc_verify_table_as_nested_root@@Base+0x180>
  403b62:	mov    rdx,QWORD PTR [r13+0x10]
  403b66:	movzx  ebx,bx
  403b69:	movzx  ecx,WORD PTR [rdx+rbx*1]
  403b6d:	test   cx,cx
  403b70:	je     403c80 <flatcc_verify_table_as_nested_root@@Base+0x180>
  403b76:	mov    edx,DWORD PTR [r13+0x18]
  403b7a:	add    rdx,rcx
  403b7d:	add    rdx,QWORD PTR [r13+0x0]
  403b81:	je     403c80 <flatcc_verify_table_as_nested_root@@Base+0x180>
  403b87:	mov    ebx,DWORD PTR [rdx]
  403b89:	add    rbx,rdx
  403b8c:	mov    r15d,DWORD PTR [rbx]
  403b8f:	lea    r14,[rbx+0x4]
  403b93:	mov    rdx,rbp
  403b96:	mov    rsi,r15
  403b99:	mov    rdi,r14
  403b9c:	mov    DWORD PTR [rsp+0xc],r15d
  403ba1:	call   403570 <flatcc_verify_buffer_header@@Base>
  403ba6:	test   eax,eax
  403ba8:	jne    403cc0 <flatcc_verify_table_as_nested_root@@Base+0x1c0>
  403bae:	mov    edx,DWORD PTR [r13+0xc]
  403bb2:	mov    esi,DWORD PTR [rbx+0x4]
  403bb5:	dec    edx
  403bb7:	mov    DWORD PTR [rsp+0x1c],edx
  403bbb:	mov    eax,0x3
  403bc0:	je     403c80 <flatcc_verify_table_as_nested_root@@Base+0x180>
  403bc6:	mov    eax,0xf
  403bcb:	test   esi,esi
  403bcd:	je     403c80 <flatcc_verify_table_as_nested_root@@Base+0x180>
  403bd3:	mov    edx,esi
  403bd5:	lea    rdi,[rdx+0x4]
  403bd9:	cmp    r15,rdi
  403bdc:	jb     403c80 <flatcc_verify_table_as_nested_root@@Base+0x180>
  403be2:	test   sil,0x3
  403be6:	jne    403c80 <flatcc_verify_table_as_nested_root@@Base+0x180>
  403bec:	mov    DWORD PTR [rsp+0x28],esi
  403bf0:	mov    edi,esi
  403bf2:	sub    edi,DWORD PTR [rbx+rdx*1+0x4]
  403bf6:	js     403cd0 <flatcc_verify_table_as_nested_root@@Base+0x1d0>
  403bfc:	mov    edx,edi
  403bfe:	mov    eax,0x1d
  403c03:	test   dil,0x1
  403c07:	jne    403c80 <flatcc_verify_table_as_nested_root@@Base+0x180>
  403c09:	lea    r9,[rdx+0x2]
  403c0d:	mov    eax,0x1b
  403c12:	cmp    r15,r9
  403c15:	jb     403c80 <flatcc_verify_table_as_nested_root@@Base+0x180>
  403c17:	add    rdx,r14
  403c1a:	movzx  eax,WORD PTR [rdx]
  403c1d:	mov    ecx,DWORD PTR [rsp+0xc]
  403c21:	add    edi,eax
  403c23:	mov    r8d,eax
  403c26:	mov    WORD PTR [rsp+0x2e],ax
  403c2b:	mov    eax,0x1e
  403c30:	cmp    ecx,edi
  403c32:	jb     403c80 <flatcc_verify_table_as_nested_root@@Base+0x180>
  403c34:	test   r8b,0x1
  403c38:	jne    403c80 <flatcc_verify_table_as_nested_root@@Base+0x180>
  403c3a:	mov    eax,0x1c
  403c3f:	cmp    r8w,0x3
  403c44:	jbe    403c80 <flatcc_verify_table_as_nested_root@@Base+0x180>
  403c46:	movzx  eax,WORD PTR [rbx+r9*1+0x4]
  403c4c:	mov    edi,ecx
  403c4e:	sub    edi,esi
  403c50:	movzx  esi,ax
  403c53:	mov    WORD PTR [rsp+0x2c],ax
  403c58:	mov    eax,0x14
  403c5d:	cmp    edi,esi
  403c5f:	jb     403c80 <flatcc_verify_table_as_nested_root@@Base+0x180>
  403c61:	lea    rdi,[rsp+0x10]
  403c66:	mov    QWORD PTR [rsp+0x20],rdx
  403c6b:	mov    QWORD PTR [rsp+0x10],r14
  403c70:	mov    DWORD PTR [rsp+0x18],ecx
  403c74:	call   r12
  403c77:	nop    WORD PTR [rax+rax*1+0x0]
  403c80:	mov    rdi,QWORD PTR [rsp+0x38]
  403c85:	xor    rdi,QWORD PTR fs:0x28
  403c8e:	jne    403cd7 <flatcc_verify_table_as_nested_root@@Base+0x1d7>
  403c90:	add    rsp,0x48
  403c94:	pop    rbx
  403c95:	pop    rbp
  403c96:	pop    r12
  403c98:	pop    r13
  403c9a:	pop    r14
  403c9c:	pop    r15
  403c9e:	ret    
  403c9f:	nop
  403ca0:	mov    r9d,0xffffffff
  403ca6:	mov    r8d,0x1
  403cac:	movzx  ecx,r15w
  403cb0:	mov    edx,r14d
  403cb3:	movzx  esi,bx
  403cb6:	mov    rdi,r13
  403cb9:	call   402c30 <flatcc_verify_vector_field@@Base>
  403cbe:	jmp    403c80 <flatcc_verify_table_as_nested_root@@Base+0x180>
  403cc0:	mov    rdx,rbp
  403cc3:	mov    rsi,r15
  403cc6:	mov    rdi,r14
  403cc9:	call   403570 <flatcc_verify_buffer_header@@Base>
  403cce:	jmp    403c80 <flatcc_verify_table_as_nested_root@@Base+0x180>
  403cd0:	mov    eax,0x1d
  403cd5:	jmp    403c80 <flatcc_verify_table_as_nested_root@@Base+0x180>
  403cd7:	call   401170 <__stack_chk_fail@plt>
  403cdc:	nop    DWORD PTR [rax+0x0]

0000000000403ce0 <flatcc_verify_union_field@@Base>:
  403ce0:	endbr64 
  403ce4:	push   r12
  403ce6:	lea    esi,[rsi+rsi*1+0x2]
  403cea:	push   rbp
  403ceb:	push   rbx
  403cec:	sub    rsp,0x30
  403cf0:	movzx  r8d,WORD PTR [rdi+0x1e]
  403cf5:	mov    rax,QWORD PTR fs:0x28
  403cfe:	mov    QWORD PTR [rsp+0x28],rax
  403d03:	xor    eax,eax
  403d05:	cmp    si,r8w
  403d09:	jae    403de0 <flatcc_verify_union_field@@Base+0x100>
  403d0f:	mov    r11,QWORD PTR [rdi+0x10]
  403d13:	movzx  eax,si
  403d16:	movzx  eax,WORD PTR [r11+rax*1]
  403d1b:	mov    r10,rax
  403d1e:	test   eax,eax
  403d20:	je     403de0 <flatcc_verify_union_field@@Base+0x100>
  403d26:	movzx  ebx,WORD PTR [rdi+0x1c]
  403d2a:	lea    r9d,[rax+0x1]
  403d2e:	mov    eax,0xd
  403d33:	cmp    r9d,ebx
  403d36:	ja     403dc0 <flatcc_verify_union_field@@Base+0xe0>
  403d3c:	mov    r9d,DWORD PTR [rdi+0x18]
  403d40:	mov    rbp,QWORD PTR [rdi]
  403d43:	add    r10,r9
  403d46:	add    r10,rbp
  403d49:	add    esi,0x2
  403d4c:	mov    r12,r9
  403d4f:	movzx  r9d,BYTE PTR [r10]
  403d53:	cmp    r8w,si
  403d57:	jbe    403e20 <flatcc_verify_union_field@@Base+0x140>
  403d5d:	movzx  esi,si
  403d60:	movzx  esi,WORD PTR [r11+rsi*1]
  403d65:	test   r9b,r9b
  403d68:	je     403e10 <flatcc_verify_union_field@@Base+0x130>
  403d6e:	test   esi,esi
  403d70:	je     403e25 <flatcc_verify_union_field@@Base+0x145>
  403d76:	lea    edx,[rsi+0x4]
  403d79:	cmp    ebx,edx
  403d7b:	jb     403dc0 <flatcc_verify_union_field@@Base+0xe0>
  403d7d:	add    r12d,esi
  403d80:	mov    eax,0xc
  403d85:	test   r12b,0x3
  403d89:	jne    403dc0 <flatcc_verify_union_field@@Base+0xe0>
  403d8b:	test   r12d,r12d
  403d8e:	je     403e38 <flatcc_verify_union_field@@Base+0x158>
  403d94:	mov    rax,QWORD PTR [rdi+0x8]
  403d98:	mov    DWORD PTR [rsp+0x14],r12d
  403d9d:	mov    QWORD PTR [rsp+0x8],rax
  403da2:	mov    QWORD PTR [rsp],rbp
  403da6:	mov    rdi,rsp
  403da9:	mov    eax,DWORD PTR [rbp+r12*1+0x0]
  403dae:	mov    DWORD PTR [rsp+0x18],eax
  403db2:	movzx  eax,BYTE PTR [r10]
  403db6:	mov    BYTE PTR [rsp+0x10],al
  403dba:	call   rcx
  403dbc:	nop    DWORD PTR [rax+0x0]
  403dc0:	mov    rbx,QWORD PTR [rsp+0x28]
  403dc5:	xor    rbx,QWORD PTR fs:0x28
  403dce:	jne    403e3c <flatcc_verify_union_field@@Base+0x15c>
  403dd0:	add    rsp,0x30
  403dd4:	pop    rbx
  403dd5:	pop    rbp
  403dd6:	pop    r12
  403dd8:	ret    
  403dd9:	nop    DWORD PTR [rax+0x0]
  403de0:	add    esi,0x2
  403de3:	cmp    r8w,si
  403de7:	jbe    403dfc <flatcc_verify_union_field@@Base+0x11c>
  403de9:	mov    rcx,QWORD PTR [rdi+0x10]
  403ded:	movzx  esi,si
  403df0:	cmp    WORD PTR [rcx+rsi*1],0x0
  403df5:	mov    eax,0x17
  403dfa:	jne    403dc0 <flatcc_verify_union_field@@Base+0xe0>
  403dfc:	cmp    edx,0x1
  403dff:	sbb    eax,eax
  403e01:	not    eax
  403e03:	and    eax,0x15
  403e06:	jmp    403dc0 <flatcc_verify_union_field@@Base+0xe0>
  403e08:	nop    DWORD PTR [rax+rax*1+0x0]
  403e10:	cmp    esi,0x1
  403e13:	sbb    eax,eax
  403e15:	not    eax
  403e17:	and    eax,0x18
  403e1a:	jmp    403dc0 <flatcc_verify_union_field@@Base+0xe0>
  403e1c:	nop    DWORD PTR [rax+0x0]
  403e20:	test   r9b,r9b
  403e23:	je     403e38 <flatcc_verify_union_field@@Base+0x158>
  403e25:	xor    eax,eax
  403e27:	test   edx,edx
  403e29:	setne  al
  403e2c:	shl    eax,0x2
  403e2f:	jmp    403dc0 <flatcc_verify_union_field@@Base+0xe0>
  403e31:	nop    DWORD PTR [rax+0x0]
  403e38:	xor    eax,eax
  403e3a:	jmp    403dc0 <flatcc_verify_union_field@@Base+0xe0>
  403e3c:	call   401170 <__stack_chk_fail@plt>
  403e41:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  403e4c:	nop    DWORD PTR [rax+0x0]

0000000000403e50 <flatcc_verify_union_vector_field@@Base>:
  403e50:	endbr64 
  403e54:	push   r15
  403e56:	mov    r15d,edx
  403e59:	push   r14
  403e5b:	lea    r14d,[rsi-0x1]
  403e5f:	movzx  r14d,r14w
  403e63:	push   r13
  403e65:	mov    r13,rcx
  403e68:	push   r12
  403e6a:	push   rbp
  403e6b:	mov    rbp,rdi
  403e6e:	push   rbx
  403e6f:	lea    ebx,[rsi+rsi*1+0x2]
  403e73:	sub    rsp,0x48
  403e77:	mov    rax,QWORD PTR fs:0x28
  403e80:	mov    QWORD PTR [rsp+0x38],rax
  403e85:	xor    eax,eax
  403e87:	movzx  eax,WORD PTR [rdi+0x1e]
  403e8b:	cmp    bx,ax
  403e8e:	jae    404070 <flatcc_verify_union_vector_field@@Base+0x220>
  403e94:	mov    rcx,QWORD PTR [rdi+0x10]
  403e98:	movzx  edx,bx
  403e9b:	cmp    WORD PTR [rcx+rdx*1],0x0
  403ea0:	je     404070 <flatcc_verify_union_vector_field@@Base+0x220>
  403ea6:	mov    r9d,0xffffffff
  403eac:	mov    r8d,0x1
  403eb2:	mov    ecx,0x1
  403eb7:	mov    edx,r15d
  403eba:	mov    esi,r14d
  403ebd:	mov    rdi,rbp
  403ec0:	call   402c30 <flatcc_verify_vector_field@@Base>
  403ec5:	mov    r12d,eax
  403ec8:	test   eax,eax
  403eca:	jne    4040c0 <flatcc_verify_union_vector_field@@Base+0x270>
  403ed0:	movzx  edi,WORD PTR [rbp+0x1e]
  403ed4:	cmp    bx,di
  403ed7:	jae    404040 <flatcc_verify_union_vector_field@@Base+0x1f0>
  403edd:	mov    rsi,QWORD PTR [rbp+0x10]
  403ee1:	movzx  eax,bx
  403ee4:	movzx  edx,WORD PTR [rsi+rax*1]
  403ee8:	test   dx,dx
  403eeb:	je     404040 <flatcc_verify_union_vector_field@@Base+0x1f0>
  403ef1:	mov    eax,DWORD PTR [rbp+0x18]
  403ef4:	mov    r14,QWORD PTR [rbp+0x0]
  403ef8:	mov    rcx,rax
  403efb:	add    rax,rdx
  403efe:	add    rax,r14
  403f01:	je     404040 <flatcc_verify_union_vector_field@@Base+0x1f0>
  403f07:	add    ebx,0x2
  403f0a:	cmp    di,bx
  403f0d:	jbe    4040a0 <flatcc_verify_union_vector_field@@Base+0x250>
  403f13:	movzx  ebx,bx
  403f16:	movzx  edx,WORD PTR [rsi+rbx*1]
  403f1a:	test   edx,edx
  403f1c:	je     4040a0 <flatcc_verify_union_vector_field@@Base+0x250>
  403f22:	movzx  esi,WORD PTR [rbp+0x1c]
  403f26:	lea    edi,[rdx+0x4]
  403f29:	cmp    edi,esi
  403f2b:	ja     4040f0 <flatcc_verify_union_vector_field@@Base+0x2a0>
  403f31:	add    ecx,edx
  403f33:	test   cl,0x3
  403f36:	jne    404100 <flatcc_verify_union_vector_field@@Base+0x2b0>
  403f3c:	test   ecx,ecx
  403f3e:	je     404040 <flatcc_verify_union_vector_field@@Base+0x1f0>
  403f44:	mov    edi,DWORD PTR [rbp+0xc]
  403f47:	mov    esi,ecx
  403f49:	mov    edx,DWORD PTR [r14+rsi*1]
  403f4d:	test   edi,edi
  403f4f:	jle    404140 <flatcc_verify_union_vector_field@@Base+0x2f0>
  403f55:	add    edx,ecx
  403f57:	cmp    ecx,edx
  403f59:	jae    4040b0 <flatcc_verify_union_vector_field@@Base+0x260>
  403f5f:	mov    ecx,DWORD PTR [rbp+0x8]
  403f62:	mov    r9d,edx
  403f65:	lea    r8,[r9+0x4]
  403f69:	mov    rsi,rcx
  403f6c:	cmp    r8,rcx
  403f6f:	ja     4040b0 <flatcc_verify_union_vector_field@@Base+0x260>
  403f75:	test   r8b,0x3
  403f79:	jne    404110 <flatcc_verify_union_vector_field@@Base+0x2c0>
  403f7f:	mov    r10d,DWORD PTR [r14+r9*1]
  403f83:	lea    r15d,[rdx+0x4]
  403f87:	cmp    r10d,0x3fffffff
  403f8e:	ja     404110 <flatcc_verify_union_vector_field@@Base+0x2c0>
  403f94:	mov    r11d,ecx
  403f97:	lea    ebp,[r10*4+0x0]
  403f9f:	sub    r11d,r15d
  403fa2:	cmp    r11d,ebp
  403fa5:	jb     404110 <flatcc_verify_union_vector_field@@Base+0x2c0>
  403fab:	mov    ebx,DWORD PTR [rax]
  403fad:	add    rax,rbx
  403fb0:	cmp    DWORD PTR [rax],r10d
  403fb3:	jne    40414b <flatcc_verify_union_vector_field@@Base+0x2fb>
  403fb9:	lea    edx,[rdi-0x1]
  403fbc:	mov    QWORD PTR [rsp+0x10],r14
  403fc1:	mov    DWORD PTR [rsp+0x18],ecx
  403fc5:	mov    DWORD PTR [rsp+0x1c],edx
  403fc9:	test   r10d,r10d
  403fcc:	je     404040 <flatcc_verify_union_vector_field@@Base+0x1f0>
  403fce:	lea    rbx,[rax+0x4]
  403fd2:	lea    rax,[rsp+0x10]
  403fd7:	add    ebp,r15d
  403fda:	mov    QWORD PTR [rsp+0x8],rax
  403fdf:	jmp    403ffc <flatcc_verify_union_vector_field@@Base+0x1ac>
  403fe1:	nop    DWORD PTR [rax+0x0]
  403fe8:	test   dl,dl
  403fea:	jne    404161 <flatcc_verify_union_vector_field@@Base+0x311>
  403ff0:	add    r15d,0x4
  403ff4:	inc    rbx
  403ff7:	cmp    r15d,ebp
  403ffa:	je     404040 <flatcc_verify_union_vector_field@@Base+0x1f0>
  403ffc:	mov    eax,r15d
  403fff:	mov    eax,DWORD PTR [r14+rax*1]
  404003:	movzx  edx,BYTE PTR [rbx]
  404006:	test   eax,eax
  404008:	je     403fe8 <flatcc_verify_union_vector_field@@Base+0x198>
  40400a:	test   dl,dl
  40400c:	je     40416c <flatcc_verify_union_vector_field@@Base+0x31c>
  404012:	mov    rdi,QWORD PTR [rsp+0x8]
  404017:	mov    BYTE PTR [rsp+0x20],dl
  40401b:	mov    DWORD PTR [rsp+0x24],r15d
  404020:	mov    DWORD PTR [rsp+0x28],eax
  404024:	call   r13
  404027:	test   eax,eax
  404029:	je     403ff0 <flatcc_verify_union_vector_field@@Base+0x1a0>
  40402b:	mov    rdi,QWORD PTR [rsp+0x8]
  404030:	call   r13
  404033:	mov    r12d,eax
  404036:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404040:	mov    rdi,QWORD PTR [rsp+0x38]
  404045:	xor    rdi,QWORD PTR fs:0x28
  40404e:	mov    eax,r12d
  404051:	jne    404177 <flatcc_verify_union_vector_field@@Base+0x327>
  404057:	add    rsp,0x48
  40405b:	pop    rbx
  40405c:	pop    rbp
  40405d:	pop    r12
  40405f:	pop    r13
  404061:	pop    r14
  404063:	pop    r15
  404065:	ret    
  404066:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404070:	lea    edx,[rbx+0x2]
  404073:	cmp    ax,dx
  404076:	jbe    40408a <flatcc_verify_union_vector_field@@Base+0x23a>
  404078:	mov    rax,QWORD PTR [rbp+0x10]
  40407c:	movzx  edx,dx
  40407f:	cmp    WORD PTR [rax+rdx*1],0x0
  404084:	jne    403ea6 <flatcc_verify_union_vector_field@@Base+0x56>
  40408a:	mov    r12d,0x16
  404090:	test   r15d,r15d
  404093:	je     403ea6 <flatcc_verify_union_vector_field@@Base+0x56>
  404099:	jmp    404040 <flatcc_verify_union_vector_field@@Base+0x1f0>
  40409b:	nop    DWORD PTR [rax+rax*1+0x0]
  4040a0:	xor    r12d,r12d
  4040a3:	test   r15d,r15d
  4040a6:	setne  r12b
  4040aa:	shl    r12d,0x2
  4040ae:	jmp    404040 <flatcc_verify_union_vector_field@@Base+0x1f0>
  4040b0:	mov    r12d,0x10
  4040b6:	jmp    404040 <flatcc_verify_union_vector_field@@Base+0x1f0>
  4040b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4040c0:	mov    r9d,0xffffffff
  4040c6:	mov    r8d,0x1
  4040cc:	mov    ecx,0x1
  4040d1:	mov    edx,r15d
  4040d4:	mov    esi,r14d
  4040d7:	mov    rdi,rbp
  4040da:	call   402c30 <flatcc_verify_vector_field@@Base>
  4040df:	mov    r12d,eax
  4040e2:	jmp    404040 <flatcc_verify_union_vector_field@@Base+0x1f0>
  4040e7:	nop    WORD PTR [rax+rax*1+0x0]
  4040f0:	mov    r12d,0xd
  4040f6:	jmp    404040 <flatcc_verify_union_vector_field@@Base+0x1f0>
  4040fb:	nop    DWORD PTR [rax+rax*1+0x0]
  404100:	mov    r12d,0xc
  404106:	jmp    404040 <flatcc_verify_union_vector_field@@Base+0x1f0>
  40410b:	nop    DWORD PTR [rax+rax*1+0x0]
  404110:	and    r8d,0x3
  404114:	jne    4040b0 <flatcc_verify_union_vector_field@@Base+0x260>
  404116:	mov    eax,DWORD PTR [r14+r9*1]
  40411a:	sub    esi,0x4
  40411d:	cmp    eax,0x3fffffff
  404122:	ja     404156 <flatcc_verify_union_vector_field@@Base+0x306>
  404124:	shl    eax,0x2
  404127:	sub    esi,edx
  404129:	cmp    esi,eax
  40412b:	mov    eax,0x1a
  404130:	cmovb  r12d,eax
  404134:	jmp    404040 <flatcc_verify_union_vector_field@@Base+0x1f0>
  404139:	nop    DWORD PTR [rax+0x0]
  404140:	mov    r12d,0x3
  404146:	jmp    404040 <flatcc_verify_union_vector_field@@Base+0x1f0>
  40414b:	mov    r12d,0x22
  404151:	jmp    404040 <flatcc_verify_union_vector_field@@Base+0x1f0>
  404156:	mov    r12d,0x19
  40415c:	jmp    404040 <flatcc_verify_union_vector_field@@Base+0x1f0>
  404161:	mov    r12d,0x20
  404167:	jmp    404040 <flatcc_verify_union_vector_field@@Base+0x1f0>
  40416c:	mov    r12d,0x21
  404172:	jmp    404040 <flatcc_verify_union_vector_field@@Base+0x1f0>
  404177:	call   401170 <__stack_chk_fail@plt>
  40417c:	nop    DWORD PTR [rax+0x0]

0000000000404180 <__libc_csu_init@@Base>:
  404180:	endbr64 
  404184:	push   r15
  404186:	lea    r15,[rip+0x3c7b]        # 407e08 <_IO_stdin_used@@Base+0x2e08>
  40418d:	push   r14
  40418f:	mov    r14,rdx
  404192:	push   r13
  404194:	mov    r13,rsi
  404197:	push   r12
  404199:	mov    r12d,edi
  40419c:	push   rbp
  40419d:	lea    rbp,[rip+0x3c6c]        # 407e10 <_IO_stdin_used@@Base+0x2e10>
  4041a4:	push   rbx
  4041a5:	sub    rbp,r15
  4041a8:	sub    rsp,0x8
  4041ac:	call   401000 <free@plt-0x130>
  4041b1:	sar    rbp,0x3
  4041b5:	je     4041d6 <__libc_csu_init@@Base+0x56>
  4041b7:	xor    ebx,ebx
  4041b9:	nop    DWORD PTR [rax+0x0]
  4041c0:	mov    rdx,r14
  4041c3:	mov    rsi,r13
  4041c6:	mov    edi,r12d
  4041c9:	call   QWORD PTR [r15+rbx*8]
  4041cd:	add    rbx,0x1
  4041d1:	cmp    rbp,rbx
  4041d4:	jne    4041c0 <__libc_csu_init@@Base+0x40>
  4041d6:	add    rsp,0x8
  4041da:	pop    rbx
  4041db:	pop    rbp
  4041dc:	pop    r12
  4041de:	pop    r13
  4041e0:	pop    r14
  4041e2:	pop    r15
  4041e4:	ret    
  4041e5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

00000000004041f0 <__libc_csu_fini@@Base>:
  4041f0:	endbr64 
  4041f4:	ret    

Disassembly of section .fini:

00000000004041f8 <.fini>:
  4041f8:	endbr64 
  4041fc:	sub    rsp,0x8
  404200:	add    rsp,0x8
  404204:	ret    
