
../repos/prog2/0.6:     file format elf64-x86-64


Disassembly of section .init:

0000000000401000 <.init>:
  401000:	endbr64 
  401004:	sub    rsp,0x8
  401008:	mov    rax,QWORD PTR [rip+0x2fe9]        # 403ff8 <__gmon_start__>
  40100f:	test   rax,rax
  401012:	je     401016 <__stack_chk_fail@plt-0x7a>
  401014:	call   rax
  401016:	add    rsp,0x8
  40101a:	ret    

Disassembly of section .plt:

0000000000401020 <.plt>:
  401020:	push   QWORD PTR [rip+0x2fe2]        # 404008 <_IO_stdin_used@@Base+0x2008>
  401026:	bnd jmp QWORD PTR [rip+0x2fe3]        # 404010 <_IO_stdin_used@@Base+0x2010>
  40102d:	nop    DWORD PTR [rax]
  401030:	endbr64 
  401034:	push   0x0
  401039:	bnd jmp 401020 <__stack_chk_fail@plt-0x70>
  40103f:	nop
  401040:	endbr64 
  401044:	push   0x1
  401049:	bnd jmp 401020 <__stack_chk_fail@plt-0x70>
  40104f:	nop
  401050:	endbr64 
  401054:	push   0x2
  401059:	bnd jmp 401020 <__stack_chk_fail@plt-0x70>
  40105f:	nop
  401060:	endbr64 
  401064:	push   0x3
  401069:	bnd jmp 401020 <__stack_chk_fail@plt-0x70>
  40106f:	nop
  401070:	endbr64 
  401074:	push   0x4
  401079:	bnd jmp 401020 <__stack_chk_fail@plt-0x70>
  40107f:	nop
  401080:	endbr64 
  401084:	push   0x5
  401089:	bnd jmp 401020 <__stack_chk_fail@plt-0x70>
  40108f:	nop

Disassembly of section .plt.sec:

0000000000401090 <__stack_chk_fail@plt>:
  401090:	endbr64 
  401094:	bnd jmp QWORD PTR [rip+0x2f7d]        # 404018 <__stack_chk_fail@GLIBC_2.4>
  40109b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004010a0 <memcpy@plt>:
  4010a0:	endbr64 
  4010a4:	bnd jmp QWORD PTR [rip+0x2f75]        # 404020 <memcpy@GLIBC_2.14>
  4010ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004010b0 <malloc@plt>:
  4010b0:	endbr64 
  4010b4:	bnd jmp QWORD PTR [rip+0x2f6d]        # 404028 <malloc@GLIBC_2.2.5>
  4010bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004010c0 <realloc@plt>:
  4010c0:	endbr64 
  4010c4:	bnd jmp QWORD PTR [rip+0x2f65]        # 404030 <realloc@GLIBC_2.2.5>
  4010cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004010d0 <__printf_chk@plt>:
  4010d0:	endbr64 
  4010d4:	bnd jmp QWORD PTR [rip+0x2f5d]        # 404038 <__printf_chk@GLIBC_2.3.4>
  4010db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004010e0 <__isoc99_scanf@plt>:
  4010e0:	endbr64 
  4010e4:	bnd jmp QWORD PTR [rip+0x2f55]        # 404040 <__isoc99_scanf@GLIBC_2.7>
  4010eb:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

00000000004010f0 <main@@Base>:
  4010f0:	endbr64 
  4010f4:	push   r15
  4010f6:	lea    rsi,[rip+0xf07]        # 402004 <_IO_stdin_used@@Base+0x4>
  4010fd:	mov    edi,0x1
  401102:	push   r14
  401104:	xor    r15d,r15d
  401107:	push   r13
  401109:	push   r12
  40110b:	xor    r12d,r12d
  40110e:	push   rbp
  40110f:	push   rbx
  401110:	sub    rsp,0x28
  401114:	mov    rax,QWORD PTR fs:0x28
  40111d:	mov    QWORD PTR [rsp+0x18],rax
  401122:	xor    eax,eax
  401124:	lea    r14,[rsp+0x17]
  401129:	call   4010d0 <__printf_chk@plt>
  40112e:	mov    edi,0x1
  401133:	call   4010b0 <malloc@plt>
  401138:	mov    edi,0x1
  40113d:	mov    rbp,rax
  401140:	call   4010b0 <malloc@plt>
  401145:	mov    DWORD PTR [rsp+0xc],0x0
  40114d:	mov    rbx,rax
  401150:	xor    eax,eax
  401152:	mov    rsi,r14
  401155:	lea    rdi,[rip+0xeb0]        # 40200c <_IO_stdin_used@@Base+0xc>
  40115c:	call   4010e0 <__isoc99_scanf@plt>
  401161:	cmp    eax,0x1
  401164:	jne    401260 <main@@Base+0x170>
  40116a:	movzx  r13d,BYTE PTR [rsp+0x17]
  401170:	cmp    r13b,0x20
  401174:	je     4011a8 <main@@Base+0xb8>
  401176:	cmp    r13b,0xa
  40117a:	je     4011a8 <main@@Base+0xb8>
  40117c:	lea    edx,[r15+0x1]
  401180:	movsxd rsi,edx
  401183:	mov    rdi,rbx
  401186:	mov    DWORD PTR [rsp+0x8],edx
  40118a:	call   4010c0 <realloc@plt>
  40118f:	mov    edx,DWORD PTR [rsp+0x8]
  401193:	mov    BYTE PTR [rax+r15*1],r13b
  401197:	mov    rbx,rax
  40119a:	inc    DWORD PTR [rsp+0xc]
  40119e:	movsxd r15,edx
  4011a1:	jmp    401150 <main@@Base+0x60>
  4011a3:	nop    DWORD PTR [rax+rax*1+0x0]
  4011a8:	mov    r15,rbx
  4011ab:	mov    edx,DWORD PTR [r15]
  4011ae:	add    r15,0x4
  4011b2:	lea    eax,[rdx-0x1010101]
  4011b8:	andn   eax,edx,eax
  4011bd:	and    eax,0x80808080
  4011c2:	je     4011ab <main@@Base+0xbb>
  4011c4:	mov    edx,eax
  4011c6:	shr    edx,0x10
  4011c9:	test   eax,0x8080
  4011ce:	cmove  eax,edx
  4011d1:	lea    rdx,[r15+0x2]
  4011d5:	cmove  r15,rdx
  4011d9:	mov    ecx,eax
  4011db:	add    cl,al
  4011dd:	sbb    r15,0x3
  4011e1:	sub    r15,rbx
  4011e4:	mov    rdx,rbp
  4011e7:	mov    esi,DWORD PTR [rdx]
  4011e9:	add    rdx,0x4
  4011ed:	lea    eax,[rsi-0x1010101]
  4011f3:	andn   eax,esi,eax
  4011f8:	and    eax,0x80808080
  4011fd:	je     4011e7 <main@@Base+0xf7>
  4011ff:	mov    esi,eax
  401201:	shr    esi,0x10
  401204:	test   eax,0x8080
  401209:	cmove  eax,esi
  40120c:	lea    rsi,[rdx+0x2]
  401210:	cmove  rdx,rsi
  401214:	mov    ecx,eax
  401216:	add    cl,al
  401218:	sbb    rdx,0x3
  40121c:	sub    rdx,rbp
  40121f:	cmp    r15,rdx
  401222:	ja     401238 <main@@Base+0x148>
  401224:	inc    r12d
  401227:	cmp    r13b,0xa
  40122b:	je     401260 <main@@Base+0x170>
  40122d:	xor    r15d,r15d
  401230:	jmp    401150 <main@@Base+0x60>
  401235:	nop    DWORD PTR [rax]
  401238:	mov    rdi,rbp
  40123b:	mov    rsi,r15
  40123e:	call   4010c0 <realloc@plt>
  401243:	mov    rdi,rax
  401246:	lea    rdx,[r15+0x1]
  40124a:	mov    rsi,rbx
  40124d:	mov    rbp,rax
  401250:	inc    r12d
  401253:	call   4010a0 <memcpy@plt>
  401258:	cmp    r13b,0xa
  40125c:	jne    40122d <main@@Base+0x13d>
  40125e:	xchg   ax,ax
  401260:	mov    edx,r12d
  401263:	lea    rsi,[rip+0xda5]        # 40200f <_IO_stdin_used@@Base+0xf>
  40126a:	mov    edi,0x1
  40126f:	xor    eax,eax
  401271:	call   4010d0 <__printf_chk@plt>
  401276:	mov    rdx,rbp
  401279:	lea    rsi,[rip+0xda7]        # 402027 <_IO_stdin_used@@Base+0x27>
  401280:	mov    edi,0x1
  401285:	xor    eax,eax
  401287:	call   4010d0 <__printf_chk@plt>
  40128c:	vxorps xmm1,xmm1,xmm1
  401290:	vxorps xmm0,xmm0,xmm0
  401294:	vcvtsi2ss xmm1,xmm1,DWORD PTR [rsp+0xc]
  40129a:	vcvtsi2ss xmm0,xmm0,r12d
  40129f:	mov    edi,0x1
  4012a4:	lea    rsi,[rip+0xd8f]        # 40203a <_IO_stdin_used@@Base+0x3a>
  4012ab:	mov    eax,0x1
  4012b0:	vdivss xmm0,xmm1,xmm0
  4012b4:	vcvtss2sd xmm0,xmm0,xmm0
  4012b8:	call   4010d0 <__printf_chk@plt>
  4012bd:	xor    eax,eax
  4012bf:	mov    rdi,QWORD PTR [rsp+0x18]
  4012c4:	xor    rdi,QWORD PTR fs:0x28
  4012cd:	jne    4012de <main@@Base+0x1ee>
  4012cf:	add    rsp,0x28
  4012d3:	pop    rbx
  4012d4:	pop    rbp
  4012d5:	pop    r12
  4012d7:	pop    r13
  4012d9:	pop    r14
  4012db:	pop    r15
  4012dd:	ret    
  4012de:	call   401090 <__stack_chk_fail@plt>
  4012e3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4012ed:	nop    DWORD PTR [rax]

00000000004012f0 <_start@@Base>:
  4012f0:	endbr64 
  4012f4:	xor    ebp,ebp
  4012f6:	mov    r9,rdx
  4012f9:	pop    rsi
  4012fa:	mov    rdx,rsp
  4012fd:	and    rsp,0xfffffffffffffff0
  401301:	push   rax
  401302:	push   rsp
  401303:	mov    r8,0x401450
  40130a:	mov    rcx,0x4013e0
  401311:	mov    rdi,0x4010f0
  401318:	call   QWORD PTR [rip+0x2cd2]        # 403ff0 <__libc_start_main@GLIBC_2.2.5>
  40131e:	hlt    
  40131f:	nop
  401320:	endbr64 
  401324:	ret    
  401325:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40132f:	nop
  401330:	mov    eax,0x404058
  401335:	cmp    rax,0x404058
  40133b:	je     401350 <_start@@Base+0x60>
  40133d:	mov    eax,0x0
  401342:	test   rax,rax
  401345:	je     401350 <_start@@Base+0x60>
  401347:	mov    edi,0x404058
  40134c:	jmp    rax
  40134e:	xchg   ax,ax
  401350:	ret    
  401351:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40135c:	nop    DWORD PTR [rax+0x0]
  401360:	mov    esi,0x404058
  401365:	sub    rsi,0x404058
  40136c:	sar    rsi,0x3
  401370:	mov    rax,rsi
  401373:	shr    rax,0x3f
  401377:	add    rsi,rax
  40137a:	sar    rsi,1
  40137d:	je     401390 <_start@@Base+0xa0>
  40137f:	mov    eax,0x0
  401384:	test   rax,rax
  401387:	je     401390 <_start@@Base+0xa0>
  401389:	mov    edi,0x404058
  40138e:	jmp    rax
  401390:	ret    
  401391:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40139c:	nop    DWORD PTR [rax+0x0]
  4013a0:	endbr64 
  4013a4:	cmp    BYTE PTR [rip+0x2cad],0x0        # 404058 <__bss_start@@Base>
  4013ab:	jne    4013c0 <_start@@Base+0xd0>
  4013ad:	push   rbp
  4013ae:	mov    rbp,rsp
  4013b1:	call   401330 <_start@@Base+0x40>
  4013b6:	mov    BYTE PTR [rip+0x2c9b],0x1        # 404058 <__bss_start@@Base>
  4013bd:	pop    rbp
  4013be:	ret    
  4013bf:	nop
  4013c0:	ret    
  4013c1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4013cc:	nop    DWORD PTR [rax+0x0]
  4013d0:	endbr64 
  4013d4:	jmp    401360 <_start@@Base+0x70>
  4013d6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004013e0 <__libc_csu_init@@Base>:
  4013e0:	endbr64 
  4013e4:	push   r15
  4013e6:	lea    r15,[rip+0x2a23]        # 403e10 <_IO_stdin_used@@Base+0x1e10>
  4013ed:	push   r14
  4013ef:	mov    r14,rdx
  4013f2:	push   r13
  4013f4:	mov    r13,rsi
  4013f7:	push   r12
  4013f9:	mov    r12d,edi
  4013fc:	push   rbp
  4013fd:	lea    rbp,[rip+0x2a14]        # 403e18 <_IO_stdin_used@@Base+0x1e18>
  401404:	push   rbx
  401405:	sub    rbp,r15
  401408:	sub    rsp,0x8
  40140c:	call   401000 <__stack_chk_fail@plt-0x90>
  401411:	sar    rbp,0x3
  401415:	je     401436 <__libc_csu_init@@Base+0x56>
  401417:	xor    ebx,ebx
  401419:	nop    DWORD PTR [rax+0x0]
  401420:	mov    rdx,r14
  401423:	mov    rsi,r13
  401426:	mov    edi,r12d
  401429:	call   QWORD PTR [r15+rbx*8]
  40142d:	add    rbx,0x1
  401431:	cmp    rbp,rbx
  401434:	jne    401420 <__libc_csu_init@@Base+0x40>
  401436:	add    rsp,0x8
  40143a:	pop    rbx
  40143b:	pop    rbp
  40143c:	pop    r12
  40143e:	pop    r13
  401440:	pop    r14
  401442:	pop    r15
  401444:	ret    
  401445:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000401450 <__libc_csu_fini@@Base>:
  401450:	endbr64 
  401454:	ret    

Disassembly of section .fini:

0000000000401458 <.fini>:
  401458:	endbr64 
  40145c:	sub    rsp,0x8
  401460:	add    rsp,0x8
  401464:	ret    
