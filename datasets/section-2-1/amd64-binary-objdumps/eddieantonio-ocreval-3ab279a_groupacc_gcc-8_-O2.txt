
../repos/eddieantonio-ocreval-3ab279a/groupacc/groupacc:     file format elf64-x86-64


Disassembly of section .init:

0000000000401000 <.init>:
  401000:	endbr64 
  401004:	sub    rsp,0x8
  401008:	mov    rax,QWORD PTR [rip+0x5fd9]        # 406fe8 <__gmon_start__>
  40100f:	test   rax,rax
  401012:	je     401016 <free@plt-0x1da>
  401014:	call   rax
  401016:	add    rsp,0x8
  40101a:	ret    

Disassembly of section .plt:

0000000000401020 <.plt>:
  401020:	push   QWORD PTR [rip+0x5fe2]        # 407008 <error@@Base+0x3cf8>
  401026:	bnd jmp QWORD PTR [rip+0x5fe3]        # 407010 <error@@Base+0x3d00>
  40102d:	nop    DWORD PTR [rax]
  401030:	endbr64 
  401034:	push   0x0
  401039:	bnd jmp 401020 <free@plt-0x1d0>
  40103f:	nop
  401040:	endbr64 
  401044:	push   0x1
  401049:	bnd jmp 401020 <free@plt-0x1d0>
  40104f:	nop
  401050:	endbr64 
  401054:	push   0x2
  401059:	bnd jmp 401020 <free@plt-0x1d0>
  40105f:	nop
  401060:	endbr64 
  401064:	push   0x3
  401069:	bnd jmp 401020 <free@plt-0x1d0>
  40106f:	nop
  401070:	endbr64 
  401074:	push   0x4
  401079:	bnd jmp 401020 <free@plt-0x1d0>
  40107f:	nop
  401080:	endbr64 
  401084:	push   0x5
  401089:	bnd jmp 401020 <free@plt-0x1d0>
  40108f:	nop
  401090:	endbr64 
  401094:	push   0x6
  401099:	bnd jmp 401020 <free@plt-0x1d0>
  40109f:	nop
  4010a0:	endbr64 
  4010a4:	push   0x7
  4010a9:	bnd jmp 401020 <free@plt-0x1d0>
  4010af:	nop
  4010b0:	endbr64 
  4010b4:	push   0x8
  4010b9:	bnd jmp 401020 <free@plt-0x1d0>
  4010bf:	nop
  4010c0:	endbr64 
  4010c4:	push   0x9
  4010c9:	bnd jmp 401020 <free@plt-0x1d0>
  4010cf:	nop
  4010d0:	endbr64 
  4010d4:	push   0xa
  4010d9:	bnd jmp 401020 <free@plt-0x1d0>
  4010df:	nop
  4010e0:	endbr64 
  4010e4:	push   0xb
  4010e9:	bnd jmp 401020 <free@plt-0x1d0>
  4010ef:	nop
  4010f0:	endbr64 
  4010f4:	push   0xc
  4010f9:	bnd jmp 401020 <free@plt-0x1d0>
  4010ff:	nop
  401100:	endbr64 
  401104:	push   0xd
  401109:	bnd jmp 401020 <free@plt-0x1d0>
  40110f:	nop
  401110:	endbr64 
  401114:	push   0xe
  401119:	bnd jmp 401020 <free@plt-0x1d0>
  40111f:	nop
  401120:	endbr64 
  401124:	push   0xf
  401129:	bnd jmp 401020 <free@plt-0x1d0>
  40112f:	nop
  401130:	endbr64 
  401134:	push   0x10
  401139:	bnd jmp 401020 <free@plt-0x1d0>
  40113f:	nop
  401140:	endbr64 
  401144:	push   0x11
  401149:	bnd jmp 401020 <free@plt-0x1d0>
  40114f:	nop
  401150:	endbr64 
  401154:	push   0x12
  401159:	bnd jmp 401020 <free@plt-0x1d0>
  40115f:	nop
  401160:	endbr64 
  401164:	push   0x13
  401169:	bnd jmp 401020 <free@plt-0x1d0>
  40116f:	nop
  401170:	endbr64 
  401174:	push   0x14
  401179:	bnd jmp 401020 <free@plt-0x1d0>
  40117f:	nop
  401180:	endbr64 
  401184:	push   0x15
  401189:	bnd jmp 401020 <free@plt-0x1d0>
  40118f:	nop
  401190:	endbr64 
  401194:	push   0x16
  401199:	bnd jmp 401020 <free@plt-0x1d0>
  40119f:	nop
  4011a0:	endbr64 
  4011a4:	push   0x17
  4011a9:	bnd jmp 401020 <free@plt-0x1d0>
  4011af:	nop
  4011b0:	endbr64 
  4011b4:	push   0x18
  4011b9:	bnd jmp 401020 <free@plt-0x1d0>
  4011bf:	nop
  4011c0:	endbr64 
  4011c4:	push   0x19
  4011c9:	bnd jmp 401020 <free@plt-0x1d0>
  4011cf:	nop
  4011d0:	endbr64 
  4011d4:	push   0x1a
  4011d9:	bnd jmp 401020 <free@plt-0x1d0>
  4011df:	nop
  4011e0:	endbr64 
  4011e4:	push   0x1b
  4011e9:	bnd jmp 401020 <free@plt-0x1d0>
  4011ef:	nop

Disassembly of section .plt.sec:

00000000004011f0 <free@plt>:
  4011f0:	endbr64 
  4011f4:	bnd jmp QWORD PTR [rip+0x5e1d]        # 407018 <free@GLIBC_2.2.5>
  4011fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401200 <unlink@plt>:
  401200:	endbr64 
  401204:	bnd jmp QWORD PTR [rip+0x5e15]        # 407020 <unlink@GLIBC_2.2.5>
  40120b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401210 <utf8proc_get_property@plt>:
  401210:	endbr64 
  401214:	bnd jmp QWORD PTR [rip+0x5e0d]        # 407028 <utf8proc_get_property>
  40121b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401220 <utf8proc_encode_char@plt>:
  401220:	endbr64 
  401224:	bnd jmp QWORD PTR [rip+0x5e05]        # 407030 <utf8proc_encode_char>
  40122b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401230 <getpid@plt>:
  401230:	endbr64 
  401234:	bnd jmp QWORD PTR [rip+0x5dfd]        # 407038 <getpid@GLIBC_2.2.5>
  40123b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401240 <fclose@plt>:
  401240:	endbr64 
  401244:	bnd jmp QWORD PTR [rip+0x5df5]        # 407040 <fclose@GLIBC_2.2.5>
  40124b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401250 <strlen@plt>:
  401250:	endbr64 
  401254:	bnd jmp QWORD PTR [rip+0x5ded]        # 407048 <strlen@GLIBC_2.2.5>
  40125b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401260 <__stack_chk_fail@plt>:
  401260:	endbr64 
  401264:	bnd jmp QWORD PTR [rip+0x5de5]        # 407050 <__stack_chk_fail@GLIBC_2.4>
  40126b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401270 <rewind@plt>:
  401270:	endbr64 
  401274:	bnd jmp QWORD PTR [rip+0x5ddd]        # 407058 <rewind@GLIBC_2.2.5>
  40127b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401280 <utf8proc_tolower@plt>:
  401280:	endbr64 
  401284:	bnd jmp QWORD PTR [rip+0x5dd5]        # 407060 <utf8proc_tolower>
  40128b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401290 <fputs@plt>:
  401290:	endbr64 
  401294:	bnd jmp QWORD PTR [rip+0x5dcd]        # 407068 <fputs@GLIBC_2.2.5>
  40129b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004012a0 <fgets@plt>:
  4012a0:	endbr64 
  4012a4:	bnd jmp QWORD PTR [rip+0x5dc5]        # 407070 <fgets@GLIBC_2.2.5>
  4012ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004012b0 <utf8proc_iterate@plt>:
  4012b0:	endbr64 
  4012b4:	bnd jmp QWORD PTR [rip+0x5dbd]        # 407078 <utf8proc_iterate>
  4012bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004012c0 <calloc@plt>:
  4012c0:	endbr64 
  4012c4:	bnd jmp QWORD PTR [rip+0x5db5]        # 407080 <calloc@GLIBC_2.2.5>
  4012cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004012d0 <strcmp@plt>:
  4012d0:	endbr64 
  4012d4:	bnd jmp QWORD PTR [rip+0x5dad]        # 407088 <strcmp@GLIBC_2.2.5>
  4012db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004012e0 <__sysv_signal@plt>:
  4012e0:	endbr64 
  4012e4:	bnd jmp QWORD PTR [rip+0x5da5]        # 407090 <__sysv_signal@GLIBC_2.2.5>
  4012eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004012f0 <utf8proc_category@plt>:
  4012f0:	endbr64 
  4012f4:	bnd jmp QWORD PTR [rip+0x5d9d]        # 407098 <utf8proc_category>
  4012fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401300 <__xstat@plt>:
  401300:	endbr64 
  401304:	bnd jmp QWORD PTR [rip+0x5d95]        # 4070a0 <__xstat@GLIBC_2.2.5>
  40130b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401310 <__isoc99_sscanf@plt>:
  401310:	endbr64 
  401314:	bnd jmp QWORD PTR [rip+0x5d8d]        # 4070a8 <__isoc99_sscanf@GLIBC_2.7>
  40131b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401320 <__fread_chk@plt>:
  401320:	endbr64 
  401324:	bnd jmp QWORD PTR [rip+0x5d85]        # 4070b0 <__fread_chk@GLIBC_2.7>
  40132b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401330 <fopen@plt>:
  401330:	endbr64 
  401334:	bnd jmp QWORD PTR [rip+0x5d7d]        # 4070b8 <fopen@GLIBC_2.2.5>
  40133b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401340 <exit@plt>:
  401340:	endbr64 
  401344:	bnd jmp QWORD PTR [rip+0x5d75]        # 4070c0 <exit@GLIBC_2.2.5>
  40134b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401350 <fwrite@plt>:
  401350:	endbr64 
  401354:	bnd jmp QWORD PTR [rip+0x5d6d]        # 4070c8 <fwrite@GLIBC_2.2.5>
  40135b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401360 <__fprintf_chk@plt>:
  401360:	endbr64 
  401364:	bnd jmp QWORD PTR [rip+0x5d65]        # 4070d0 <__fprintf_chk@GLIBC_2.3.4>
  40136b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401370 <utf8proc_errmsg@plt>:
  401370:	endbr64 
  401374:	bnd jmp QWORD PTR [rip+0x5d5d]        # 4070d8 <utf8proc_errmsg>
  40137b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401380 <strdup@plt>:
  401380:	endbr64 
  401384:	bnd jmp QWORD PTR [rip+0x5d55]        # 4070e0 <strdup@GLIBC_2.2.5>
  40138b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401390 <getc@plt>:
  401390:	endbr64 
  401394:	bnd jmp QWORD PTR [rip+0x5d4d]        # 4070e8 <getc@GLIBC_2.2.5>
  40139b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004013a0 <__sprintf_chk@plt>:
  4013a0:	endbr64 
  4013a4:	bnd jmp QWORD PTR [rip+0x5d45]        # 4070f0 <__sprintf_chk@GLIBC_2.3.4>
  4013ab:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

00000000004013b0 <error@@Base-0x1f60>:
  4013b0:	endbr64 
  4013b4:	push   rbx
  4013b5:	xor    eax,eax
  4013b7:	xor    ecx,ecx
  4013b9:	sub    rsp,0x10
  4013bd:	mov    DWORD PTR [rsp+0xc],edi
  4013c1:	lea    rdx,[rip+0x2c80]        # 404048 <error@@Base+0xd38>
  4013c8:	lea    rdi,[rsp+0xc]
  4013cd:	mov    rbx,rsi
  4013d0:	call   403490 <error@@Base+0x180>
  4013d5:	mov    eax,DWORD PTR [rsp+0xc]
  4013d9:	sub    eax,0x2
  4013dc:	cmp    eax,0x1
  4013df:	jbe    4013ef <__sprintf_chk@plt+0x4f>
  4013e1:	lea    rdi,[rip+0x2c43]        # 40402b <error@@Base+0xd1b>
  4013e8:	xor    eax,eax
  4013ea:	call   403310 <error@@Base>
  4013ef:	mov    rdx,0x407108
  4013f6:	mov    rsi,QWORD PTR [rbx]
  4013f9:	mov    rdi,0x5179e0
  401400:	xor    eax,eax
  401402:	call   4028f0 <__sprintf_chk@plt+0x1550>
  401407:	mov    rdi,0x517a00
  40140e:	mov    rsi,QWORD PTR [rbx+0x8]
  401412:	xor    eax,eax
  401414:	call   401b20 <__sprintf_chk@plt+0x780>
  401419:	xor    edi,edi
  40141b:	cmp    DWORD PTR [rsp+0xc],0x3
  401420:	jne    401426 <__sprintf_chk@plt+0x86>
  401422:	mov    rdi,QWORD PTR [rbx+0x10]
  401426:	xor    eax,eax
  401428:	call   4015d0 <__sprintf_chk@plt+0x230>
  40142d:	xor    eax,eax
  40142f:	call   4032a0 <__sprintf_chk@plt+0x1f00>
  401434:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40143e:	xchg   ax,ax
  401440:	endbr64 
  401444:	xor    ebp,ebp
  401446:	mov    r9,rdx
  401449:	pop    rsi
  40144a:	mov    rdx,rsp
  40144d:	and    rsp,0xfffffffffffffff0
  401451:	push   rax
  401452:	push   rsp
  401453:	mov    r8,0x403a50
  40145a:	mov    rcx,0x4039e0
  401461:	mov    rdi,0x4013b0
  401468:	call   QWORD PTR [rip+0x5b72]        # 406fe0 <error@@Base+0x3cd0>
  40146e:	hlt    
  40146f:	nop
  401470:	endbr64 
  401474:	ret    
  401475:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40147f:	nop
  401480:	mov    eax,0x407120
  401485:	cmp    rax,0x407120
  40148b:	je     4014a0 <__sprintf_chk@plt+0x100>
  40148d:	mov    eax,0x0
  401492:	test   rax,rax
  401495:	je     4014a0 <__sprintf_chk@plt+0x100>
  401497:	mov    edi,0x407120
  40149c:	jmp    rax
  40149e:	xchg   ax,ax
  4014a0:	ret    
  4014a1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4014ac:	nop    DWORD PTR [rax+0x0]
  4014b0:	mov    esi,0x407120
  4014b5:	sub    rsi,0x407120
  4014bc:	sar    rsi,0x3
  4014c0:	mov    rax,rsi
  4014c3:	shr    rax,0x3f
  4014c7:	add    rsi,rax
  4014ca:	sar    rsi,1
  4014cd:	je     4014e0 <__sprintf_chk@plt+0x140>
  4014cf:	mov    eax,0x0
  4014d4:	test   rax,rax
  4014d7:	je     4014e0 <__sprintf_chk@plt+0x140>
  4014d9:	mov    edi,0x407120
  4014de:	jmp    rax
  4014e0:	ret    
  4014e1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4014ec:	nop    DWORD PTR [rax+0x0]
  4014f0:	endbr64 
  4014f4:	cmp    BYTE PTR [rip+0x5c25],0x0        # 407120 <error@@Base+0x3e10>
  4014fb:	jne    401510 <__sprintf_chk@plt+0x170>
  4014fd:	push   rbp
  4014fe:	mov    rbp,rsp
  401501:	call   401480 <__sprintf_chk@plt+0xe0>
  401506:	mov    BYTE PTR [rip+0x5c13],0x1        # 407120 <error@@Base+0x3e10>
  40150d:	pop    rbp
  40150e:	ret    
  40150f:	nop
  401510:	ret    
  401511:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40151c:	nop    DWORD PTR [rax+0x0]
  401520:	endbr64 
  401524:	jmp    4014b0 <__sprintf_chk@plt+0x110>
  401526:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401530:	endbr64 
  401534:	push   r12
  401536:	mov    r8,rdx
  401539:	mov    r12,rdx
  40153c:	push   rbp
  40153d:	mov    rcx,rsi
  401540:	xor    eax,eax
  401542:	push   rbx
  401543:	lea    rdx,[rip+0x2aba]        # 404004 <error@@Base+0xcf4>
  40154a:	mov    rbx,rsi
  40154d:	mov    esi,0x1
  401552:	mov    rbp,rdi
  401555:	call   401360 <__fprintf_chk@plt>
  40155a:	test   rbx,rbx
  40155d:	jne    401580 <__sprintf_chk@plt+0x1e0>
  40155f:	pop    rbx
  401560:	mov    rdi,rbp
  401563:	pop    rbp
  401564:	lea    rdx,[rip+0x2aa4]        # 40400f <error@@Base+0xcff>
  40156b:	mov    esi,0x1
  401570:	xor    eax,eax
  401572:	pop    r12
  401574:	jmp    401360 <__fprintf_chk@plt>
  401579:	nop    DWORD PTR [rax+0x0]
  401580:	mov    rax,rbx
  401583:	sub    rax,r12
  401586:	vxorpd xmm0,xmm0,xmm0
  40158a:	vcvtsi2sd xmm0,xmm0,rax
  40158f:	mov    rdi,rbp
  401592:	lea    rdx,[rip+0x2a82]        # 40401b <error@@Base+0xd0b>
  401599:	mov    esi,0x1
  40159e:	vmulsd xmm1,xmm0,QWORD PTR [rip+0x2ad2]        # 404078 <error@@Base+0xd68>
  4015a6:	vxorpd xmm0,xmm0,xmm0
  4015aa:	vcvtsi2sd xmm0,xmm0,rbx
  4015af:	pop    rbx
  4015b0:	pop    rbp
  4015b1:	mov    eax,0x1
  4015b6:	vdivsd xmm0,xmm1,xmm0
  4015ba:	pop    r12
  4015bc:	jmp    401360 <__fprintf_chk@plt>
  4015c1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4015cc:	nop    DWORD PTR [rax+0x0]
  4015d0:	endbr64 
  4015d4:	push   r15
  4015d6:	lea    rsi,[rip+0x2e6b]        # 404448 <error@@Base+0x1138>
  4015dd:	xor    r15d,r15d
  4015e0:	push   r14
  4015e2:	xor    r14d,r14d
  4015e5:	push   r13
  4015e7:	push   r12
  4015e9:	push   rbp
  4015ea:	push   rbx
  4015eb:	sub    rsp,0x38
  4015ef:	mov    rax,QWORD PTR fs:0x28
  4015f8:	mov    QWORD PTR [rsp+0x28],rax
  4015fd:	xor    eax,eax
  4015ff:	call   403410 <error@@Base+0x100>
  401604:	mov    rdi,rax
  401607:	mov    rbx,rax
  40160a:	lea    rdx,[rip+0x2b44]        # 404155 <error@@Base+0xe45>
  401611:	mov    esi,0x1
  401616:	xor    eax,eax
  401618:	call   401360 <__fprintf_chk@plt>
  40161d:	mov    rax,0x5179e0
  401624:	mov    r12,QWORD PTR [rax]
  401627:	test   r12,r12
  40162a:	je     4016e8 <__sprintf_chk@plt+0x348>
  401630:	mov    r13,0x517a00
  401637:	lea    rbp,[rsp+0x1f]
  40163c:	jmp    40164e <__sprintf_chk@plt+0x2ae>
  40163e:	xchg   ax,ax
  401640:	mov    r12,QWORD PTR [r12+0x8]
  401645:	test   r12,r12
  401648:	je     4016e8 <__sprintf_chk@plt+0x348>
  40164e:	mov    eax,DWORD PTR [r12+0x14]
  401653:	mov    rdx,rax
  401656:	add    rax,0x4f8
  40165c:	shl    rax,0x4
  401660:	add    rax,r13
  401663:	cmp    edx,0x20
  401666:	setne  cl
  401669:	cmp    edx,0xa
  40166c:	setne  dl
  40166f:	mov    r8,QWORD PTR [rax+0x8]
  401673:	test   cl,dl
  401675:	je     401640 <__sprintf_chk@plt+0x2a0>
  401677:	test   r8,r8
  40167a:	jle    401640 <__sprintf_chk@plt+0x2a0>
  40167c:	mov    r9,QWORD PTR [rax+0x10]
  401680:	mov    rsi,r8
  401683:	mov    rdx,r9
  401686:	mov    rdi,rbx
  401689:	xor    eax,eax
  40168b:	mov    QWORD PTR [rsp+0x8],r9
  401690:	mov    QWORD PTR [rsp],r8
  401694:	call   401530 <__sprintf_chk@plt+0x190>
  401699:	mov    esi,DWORD PTR [r12+0x14]
  40169e:	mov    ecx,0x1
  4016a3:	mov    rdx,rbp
  4016a6:	xor    edi,edi
  4016a8:	xor    eax,eax
  4016aa:	call   402d50 <__sprintf_chk@plt+0x19b0>
  4016af:	mov    rcx,rbp
  4016b2:	lea    rdx,[rip+0x29e9]        # 4040a2 <error@@Base+0xd92>
  4016b9:	mov    esi,0x1
  4016be:	mov    rdi,rbx
  4016c1:	xor    eax,eax
  4016c3:	call   401360 <__fprintf_chk@plt>
  4016c8:	mov    r8,QWORD PTR [rsp]
  4016cc:	mov    r9,QWORD PTR [rsp+0x8]
  4016d1:	mov    r12,QWORD PTR [r12+0x8]
  4016d6:	add    r14,r8
  4016d9:	add    r15,r9
  4016dc:	test   r12,r12
  4016df:	jne    40164e <__sprintf_chk@plt+0x2ae>
  4016e5:	nop    DWORD PTR [rax]
  4016e8:	xor    eax,eax
  4016ea:	mov    rdx,r15
  4016ed:	mov    rsi,r14
  4016f0:	mov    rdi,rbx
  4016f3:	call   401530 <__sprintf_chk@plt+0x190>
  4016f8:	lea    rdx,[rip+0x2925]        # 404024 <error@@Base+0xd14>
  4016ff:	mov    esi,0x1
  401704:	mov    rdi,rbx
  401707:	xor    eax,eax
  401709:	call   401360 <__fprintf_chk@plt>
  40170e:	xor    eax,eax
  401710:	mov    rdi,rbx
  401713:	call   403180 <__sprintf_chk@plt+0x1de0>
  401718:	mov    rax,QWORD PTR [rsp+0x28]
  40171d:	xor    rax,QWORD PTR fs:0x28
  401726:	jne    401737 <__sprintf_chk@plt+0x397>
  401728:	add    rsp,0x38
  40172c:	pop    rbx
  40172d:	pop    rbp
  40172e:	pop    r12
  401730:	pop    r13
  401732:	pop    r14
  401734:	pop    r15
  401736:	ret    
  401737:	call   401260 <__stack_chk_fail@plt>
  40173c:	nop    DWORD PTR [rax+0x0]
  401740:	push   rbp
  401741:	mov    rbp,rdx
  401744:	mov    rdx,rdi
  401747:	push   rbx
  401748:	lea    rdi,[rip+0x59f1]        # 407140 <error@@Base+0x3e30>
  40174f:	mov    rbx,rsi
  401752:	sub    rsp,0x8
  401756:	mov    esi,0x63
  40175b:	call   4012a0 <fgets@plt>
  401760:	test   rax,rax
  401763:	je     401782 <__sprintf_chk@plt+0x3e2>
  401765:	xor    eax,eax
  401767:	mov    rdx,rbx
  40176a:	lea    rsi,[rip+0x291b]        # 40408c <error@@Base+0xd7c>
  401771:	lea    rdi,[rip+0x59c8]        # 407140 <error@@Base+0x3e30>
  401778:	call   401310 <__isoc99_sscanf@plt>
  40177d:	cmp    eax,0x1
  401780:	je     401790 <__sprintf_chk@plt+0x3f0>
  401782:	add    rsp,0x8
  401786:	pop    rbx
  401787:	xor    eax,eax
  401789:	pop    rbp
  40178a:	ret    
  40178b:	nop    DWORD PTR [rax+rax*1+0x0]
  401790:	mov    rax,QWORD PTR [rbx]
  401793:	add    QWORD PTR [rbp+0x0],rax
  401797:	add    rsp,0x8
  40179b:	pop    rbx
  40179c:	mov    eax,0x1
  4017a1:	pop    rbp
  4017a2:	ret    
  4017a3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4017ae:	xchg   ax,ax
  4017b0:	push   rbx
  4017b1:	mov    rdx,rdi
  4017b4:	mov    rbx,rsi
  4017b7:	sub    rsp,0x30
  4017bb:	mov    esi,0x63
  4017c0:	lea    rdi,[rip+0x5979]        # 407140 <error@@Base+0x3e30>
  4017c7:	mov    rax,QWORD PTR fs:0x28
  4017d0:	mov    QWORD PTR [rsp+0x28],rax
  4017d5:	xor    eax,eax
  4017d7:	call   4012a0 <fgets@plt>
  4017dc:	test   rax,rax
  4017df:	je     40180a <__sprintf_chk@plt+0x46a>
  4017e1:	mov    rdx,rsp
  4017e4:	xor    eax,eax
  4017e6:	lea    rcx,[rdx+0x8]
  4017ea:	lea    r9,[rdx+0x18]
  4017ee:	lea    r8,[rdx+0x10]
  4017f2:	lea    rsi,[rip+0x2887]        # 404080 <error@@Base+0xd70>
  4017f9:	lea    rdi,[rip+0x5940]        # 407140 <error@@Base+0x3e30>
  401800:	call   401310 <__isoc99_sscanf@plt>
  401805:	cmp    eax,0x4
  401808:	je     401828 <__sprintf_chk@plt+0x488>
  40180a:	xor    eax,eax
  40180c:	mov    rbx,QWORD PTR [rsp+0x28]
  401811:	xor    rbx,QWORD PTR fs:0x28
  40181a:	jne    401851 <__sprintf_chk@plt+0x4b1>
  40181c:	add    rsp,0x30
  401820:	pop    rbx
  401821:	ret    
  401822:	nop    WORD PTR [rax+rax*1+0x0]
  401828:	mov    rax,QWORD PTR [rsp]
  40182c:	add    QWORD PTR [rbx],rax
  40182f:	mov    rax,QWORD PTR [rsp+0x8]
  401834:	add    QWORD PTR [rbx+0x8],rax
  401838:	mov    rax,QWORD PTR [rsp+0x10]
  40183d:	add    QWORD PTR [rbx+0x10],rax
  401841:	mov    rax,QWORD PTR [rsp+0x18]
  401846:	add    QWORD PTR [rbx+0x18],rax
  40184a:	mov    eax,0x1
  40184f:	jmp    40180c <__sprintf_chk@plt+0x46c>
  401851:	call   401260 <__stack_chk_fail@plt>
  401856:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401860:	push   rbp
  401861:	mov    rbp,rdx
  401864:	mov    rdx,rdi
  401867:	push   rbx
  401868:	lea    rdi,[rip+0x58d1]        # 407140 <error@@Base+0x3e30>
  40186f:	mov    rbx,rsi
  401872:	sub    rsp,0x8
  401876:	mov    esi,0x63
  40187b:	call   4012a0 <fgets@plt>
  401880:	xor    edx,edx
  401882:	test   rax,rax
  401885:	je     4018a8 <__sprintf_chk@plt+0x508>
  401887:	mov    rdx,rbx
  40188a:	xor    eax,eax
  40188c:	mov    rcx,rbp
  40188f:	lea    rsi,[rip+0x27f2]        # 404088 <error@@Base+0xd78>
  401896:	lea    rdi,[rip+0x58a3]        # 407140 <error@@Base+0x3e30>
  40189d:	call   401310 <__isoc99_sscanf@plt>
  4018a2:	cmp    eax,0x2
  4018a5:	sete   dl
  4018a8:	add    rsp,0x8
  4018ac:	pop    rbx
  4018ad:	mov    eax,edx
  4018af:	pop    rbp
  4018b0:	ret    
  4018b1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4018bc:	nop    DWORD PTR [rax+0x0]
  4018c0:	test   rdx,rdx
  4018c3:	jne    4018e0 <__sprintf_chk@plt+0x540>
  4018c5:	lea    rdx,[rip+0x27c4]        # 404090 <error@@Base+0xd80>
  4018cc:	mov    esi,0x1
  4018d1:	xor    eax,eax
  4018d3:	jmp    401360 <__fprintf_chk@plt>
  4018d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4018e0:	vxorpd xmm0,xmm0,xmm0
  4018e4:	vcvtsi2sd xmm0,xmm0,rsi
  4018e9:	vxorpd xmm1,xmm1,xmm1
  4018ed:	vcvtsi2sd xmm1,xmm1,rdx
  4018f2:	mov    esi,0x1
  4018f7:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x2779]        # 404078 <error@@Base+0xd68>
  4018ff:	lea    rdx,[rip+0x2793]        # 404099 <error@@Base+0xd89>
  401906:	mov    eax,0x1
  40190b:	vdivsd xmm0,xmm0,xmm1
  40190f:	jmp    401360 <__fprintf_chk@plt>
  401914:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40191f:	nop
  401920:	endbr64 
  401924:	mov    rdx,QWORD PTR [rdi+0x18]
  401928:	mov    rax,QWORD PTR [rsi+0x18]
  40192c:	cmp    rdx,rax
  40192f:	jne    40193e <__sprintf_chk@plt+0x59e>
  401931:	mov    rdx,QWORD PTR [rdi+0x20]
  401935:	mov    rax,QWORD PTR [rsi+0x20]
  401939:	cmp    rdx,rax
  40193c:	je     401948 <__sprintf_chk@plt+0x5a8>
  40193e:	sub    eax,edx
  401940:	ret    
  401941:	nop    DWORD PTR [rax+0x0]
  401948:	mov    rsi,QWORD PTR [rsi+0x10]
  40194c:	mov    rdi,QWORD PTR [rdi+0x10]
  401950:	xor    eax,eax
  401952:	jmp    403130 <__sprintf_chk@plt+0x1d90>
  401957:	nop    WORD PTR [rax+rax*1+0x0]
  401960:	push   r13
  401962:	mov    r13d,ecx
  401965:	push   r12
  401967:	mov    r12,rdx
  40196a:	lea    rdx,[rip+0x2693]        # 404004 <error@@Base+0xcf4>
  401971:	push   rbp
  401972:	mov    rbp,rdi
  401975:	push   rbx
  401976:	mov    rbx,rsi
  401979:	sub    rsp,0x28
  40197d:	mov    rax,QWORD PTR fs:0x28
  401986:	mov    QWORD PTR [rsp+0x18],rax
  40198b:	xor    eax,eax
  40198d:	mov    r8,QWORD PTR [rsi+0x8]
  401991:	mov    rcx,QWORD PTR [rsi]
  401994:	mov    esi,0x1
  401999:	call   401360 <__fprintf_chk@plt>
  40199e:	mov    rdx,QWORD PTR [rbx]
  4019a1:	xor    eax,eax
  4019a3:	mov    rsi,rdx
  4019a6:	sub    rsi,QWORD PTR [rbx+0x8]
  4019aa:	mov    rdi,rbp
  4019ad:	call   4018c0 <__sprintf_chk@plt+0x520>
  4019b2:	test   r12,r12
  4019b5:	je     4019f0 <__sprintf_chk@plt+0x650>
  4019b7:	mov    rcx,r12
  4019ba:	lea    rdx,[rip+0x2776]        # 404137 <error@@Base+0xe27>
  4019c1:	mov    esi,0x1
  4019c6:	mov    rdi,rbp
  4019c9:	xor    eax,eax
  4019cb:	call   401360 <__fprintf_chk@plt>
  4019d0:	mov    rax,QWORD PTR [rsp+0x18]
  4019d5:	xor    rax,QWORD PTR fs:0x28
  4019de:	jne    401a24 <__sprintf_chk@plt+0x684>
  4019e0:	add    rsp,0x28
  4019e4:	pop    rbx
  4019e5:	pop    rbp
  4019e6:	pop    r12
  4019e8:	pop    r13
  4019ea:	ret    
  4019eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4019f0:	lea    rbx,[rsp+0xf]
  4019f5:	mov    rdx,rbx
  4019f8:	mov    esi,r13d
  4019fb:	xor    edi,edi
  4019fd:	xor    eax,eax
  4019ff:	mov    ecx,0x1
  401a04:	call   402d50 <__sprintf_chk@plt+0x19b0>
  401a09:	mov    rcx,rbx
  401a0c:	lea    rdx,[rip+0x268c]        # 40409f <error@@Base+0xd8f>
  401a13:	mov    esi,0x1
  401a18:	mov    rdi,rbp
  401a1b:	xor    eax,eax
  401a1d:	call   401360 <__fprintf_chk@plt>
  401a22:	jmp    4019d0 <__sprintf_chk@plt+0x630>
  401a24:	call   401260 <__stack_chk_fail@plt>
  401a29:	nop    DWORD PTR [rax+0x0]
  401a30:	endbr64 
  401a34:	push   r13
  401a36:	xor    eax,eax
  401a38:	mov    r13,rdx
  401a3b:	push   r12
  401a3d:	mov    r12,rcx
  401a40:	push   rbp
  401a41:	mov    rbp,rdi
  401a44:	push   rbx
  401a45:	mov    ebx,esi
  401a47:	mov    edi,ebx
  401a49:	sub    rsp,0x8
  401a4d:	call   4023a0 <__sprintf_chk@plt+0x1000>
  401a52:	movzx  eax,al
  401a55:	shl    rax,0x4
  401a59:	lea    rax,[rbp+rax*1+0x88]
  401a61:	add    QWORD PTR [rax],r13
  401a64:	add    QWORD PTR [rax+0x8],r12
  401a68:	shl    rbx,0x4
  401a6c:	lea    rax,[rbp+rbx*1+0x4f88]
  401a74:	add    QWORD PTR [rbp+0x1088],r13
  401a7b:	add    QWORD PTR [rbp+0x1090],r12
  401a82:	add    QWORD PTR [rax],r13
  401a85:	add    QWORD PTR [rax+0x8],r12
  401a89:	add    rsp,0x8
  401a8d:	pop    rbx
  401a8e:	pop    rbp
  401a8f:	pop    r12
  401a91:	pop    r13
  401a93:	ret    
  401a94:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  401a9f:	nop
  401aa0:	endbr64 
  401aa4:	push   r14
  401aa6:	xor    eax,eax
  401aa8:	push   r13
  401aaa:	mov    r13,rdx
  401aad:	push   r12
  401aaf:	mov    r12,rcx
  401ab2:	push   rbp
  401ab3:	mov    rbp,rsi
  401ab6:	push   rbx
  401ab7:	lea    rbx,[rdi+0x1098]
  401abe:	mov    rdi,rbx
  401ac1:	call   402640 <__sprintf_chk@plt+0x12a0>
  401ac6:	test   rax,rax
  401ac9:	je     401ae0 <__sprintf_chk@plt+0x740>
  401acb:	add    QWORD PTR [rax+0x18],r13
  401acf:	add    QWORD PTR [rax+0x20],r12
  401ad3:	pop    rbx
  401ad4:	pop    rbp
  401ad5:	pop    r12
  401ad7:	pop    r13
  401ad9:	pop    r14
  401adb:	ret    
  401adc:	nop    DWORD PTR [rax+0x0]
  401ae0:	mov    esi,0x28
  401ae5:	mov    edi,0x1
  401aea:	xor    eax,eax
  401aec:	call   403360 <error@@Base+0x50>
  401af1:	mov    rdi,rbp
  401af4:	mov    r14,rax
  401af7:	call   401380 <strdup@plt>
  401afc:	mov    QWORD PTR [r14+0x10],rax
  401b00:	mov    QWORD PTR [r14+0x18],r13
  401b04:	mov    QWORD PTR [r14+0x20],r12
  401b08:	mov    rdi,rbx
  401b0b:	mov    rsi,r14
  401b0e:	pop    rbx
  401b0f:	pop    rbp
  401b10:	pop    r12
  401b12:	pop    r13
  401b14:	xor    eax,eax
  401b16:	pop    r14
  401b18:	jmp    4026d0 <__sprintf_chk@plt+0x1330>
  401b1d:	nop    DWORD PTR [rax]
  401b20:	endbr64 
  401b24:	push   r14
  401b26:	push   r13
  401b28:	mov    r13,rsi
  401b2b:	lea    rsi,[rip+0x2d3e]        # 404870 <error@@Base+0x1560>
  401b32:	push   r12
  401b34:	mov    r12,rdi
  401b37:	mov    rdi,r13
  401b3a:	push   rbp
  401b3b:	push   rbx
  401b3c:	sub    rsp,0x30
  401b40:	mov    rax,QWORD PTR fs:0x28
  401b49:	mov    QWORD PTR [rsp+0x28],rax
  401b4e:	xor    eax,eax
  401b50:	call   403410 <error@@Base+0x100>
  401b55:	mov    rdx,rax
  401b58:	mov    esi,0x63
  401b5d:	lea    rdi,[rip+0x55dc]        # 407140 <error@@Base+0x3e30>
  401b64:	mov    rbx,rax
  401b67:	call   4012a0 <fgets@plt>
  401b6c:	test   rax,rax
  401b6f:	je     401ebf <__sprintf_chk@plt+0xb1f>
  401b75:	lea    rbp,[rip+0x55c4]        # 407140 <error@@Base+0x3e30>
  401b7c:	mov    ecx,0x28
  401b81:	lea    rdi,[rip+0x2600]        # 404188 <error@@Base+0xe78>
  401b88:	mov    rsi,rbp
  401b8b:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  401b8d:	seta   al
  401b90:	sbb    al,0x0
  401b92:	test   al,al
  401b94:	jne    401ebf <__sprintf_chk@plt+0xb1f>
  401b9a:	mov    rdx,rbx
  401b9d:	mov    esi,0x63
  401ba2:	mov    rdi,rbp
  401ba5:	call   4012a0 <fgets@plt>
  401baa:	test   rax,rax
  401bad:	je     401ebf <__sprintf_chk@plt+0xb1f>
  401bb3:	mov    ecx,0x2b
  401bb8:	lea    rdi,[rip+0x25f9]        # 4041b8 <error@@Base+0xea8>
  401bbf:	mov    rsi,rbp
  401bc2:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  401bc4:	seta   al
  401bc7:	sbb    al,0x0
  401bc9:	test   al,al
  401bcb:	jne    401ebf <__sprintf_chk@plt+0xb1f>
  401bd1:	mov    rsi,rsp
  401bd4:	mov    rdx,r12
  401bd7:	mov    rdi,rbx
  401bda:	call   401740 <__sprintf_chk@plt+0x3a0>
  401bdf:	test   al,al
  401be1:	je     401ebf <__sprintf_chk@plt+0xb1f>
  401be7:	xor    eax,eax
  401be9:	lea    rdx,[r12+0x8]
  401bee:	lea    rsi,[rsp+0x8]
  401bf3:	mov    rdi,rbx
  401bf6:	call   401740 <__sprintf_chk@plt+0x3a0>
  401bfb:	test   al,al
  401bfd:	je     401ebf <__sprintf_chk@plt+0xb1f>
  401c03:	mov    rdx,rbx
  401c06:	mov    esi,0x63
  401c0b:	mov    rdi,rbp
  401c0e:	call   4012a0 <fgets@plt>
  401c13:	test   rax,rax
  401c16:	je     401ebf <__sprintf_chk@plt+0xb1f>
  401c1c:	mov    rdx,rbx
  401c1f:	mov    esi,0x63
  401c24:	mov    rdi,rbp
  401c27:	call   4012a0 <fgets@plt>
  401c2c:	test   rax,rax
  401c2f:	je     401ebf <__sprintf_chk@plt+0xb1f>
  401c35:	lea    r14,[rsp+0x10]
  401c3a:	xor    eax,eax
  401c3c:	lea    rdx,[r12+0x10]
  401c41:	mov    rsi,r14
  401c44:	mov    rdi,rbx
  401c47:	call   401740 <__sprintf_chk@plt+0x3a0>
  401c4c:	test   al,al
  401c4e:	je     401ebf <__sprintf_chk@plt+0xb1f>
  401c54:	xor    eax,eax
  401c56:	lea    rdx,[r12+0x18]
  401c5b:	mov    rsi,r14
  401c5e:	mov    rdi,rbx
  401c61:	call   401740 <__sprintf_chk@plt+0x3a0>
  401c66:	test   al,al
  401c68:	je     401ebf <__sprintf_chk@plt+0xb1f>
  401c6e:	xor    eax,eax
  401c70:	lea    rdx,[r12+0x20]
  401c75:	mov    rsi,r14
  401c78:	mov    rdi,rbx
  401c7b:	call   401740 <__sprintf_chk@plt+0x3a0>
  401c80:	test   al,al
  401c82:	je     401ebf <__sprintf_chk@plt+0xb1f>
  401c88:	mov    rdx,rbx
  401c8b:	mov    esi,0x63
  401c90:	mov    rdi,rbp
  401c93:	call   4012a0 <fgets@plt>
  401c98:	test   rax,rax
  401c9b:	je     401ebf <__sprintf_chk@plt+0xb1f>
  401ca1:	mov    rdx,rbx
  401ca4:	mov    esi,0x63
  401ca9:	mov    rdi,rbp
  401cac:	call   4012a0 <fgets@plt>
  401cb1:	test   rax,rax
  401cb4:	je     401ebf <__sprintf_chk@plt+0xb1f>
  401cba:	mov    rdx,rbx
  401cbd:	mov    esi,0x63
  401cc2:	mov    rdi,rbp
  401cc5:	call   4012a0 <fgets@plt>
  401cca:	test   rax,rax
  401ccd:	je     401ebf <__sprintf_chk@plt+0xb1f>
  401cd3:	mov    rdx,rbx
  401cd6:	mov    esi,0x63
  401cdb:	mov    rdi,rbp
  401cde:	call   4012a0 <fgets@plt>
  401ce3:	test   rax,rax
  401ce6:	je     401ebf <__sprintf_chk@plt+0xb1f>
  401cec:	xor    eax,eax
  401cee:	lea    rsi,[r12+0x28]
  401cf3:	mov    rdi,rbx
  401cf6:	call   4017b0 <__sprintf_chk@plt+0x410>
  401cfb:	test   al,al
  401cfd:	je     401ebf <__sprintf_chk@plt+0xb1f>
  401d03:	xor    eax,eax
  401d05:	lea    rsi,[r12+0x48]
  401d0a:	mov    rdi,rbx
  401d0d:	call   4017b0 <__sprintf_chk@plt+0x410>
  401d12:	test   al,al
  401d14:	je     401ebf <__sprintf_chk@plt+0xb1f>
  401d1a:	xor    eax,eax
  401d1c:	lea    rsi,[r12+0x68]
  401d21:	mov    rdi,rbx
  401d24:	call   4017b0 <__sprintf_chk@plt+0x410>
  401d29:	test   al,al
  401d2b:	je     401ebf <__sprintf_chk@plt+0xb1f>
  401d31:	mov    rdx,rbx
  401d34:	mov    esi,0x63
  401d39:	mov    rdi,rbp
  401d3c:	call   4012a0 <fgets@plt>
  401d41:	test   rax,rax
  401d44:	je     401ebf <__sprintf_chk@plt+0xb1f>
  401d4a:	mov    r13,rbp
  401d4d:	jmp    401d56 <__sprintf_chk@plt+0x9b6>
  401d4f:	nop
  401d50:	cmp    BYTE PTR [rbp+0x0],0xa
  401d54:	je     401d6b <__sprintf_chk@plt+0x9cb>
  401d56:	mov    rdx,rbx
  401d59:	mov    esi,0x63
  401d5e:	mov    rdi,r13
  401d61:	call   4012a0 <fgets@plt>
  401d66:	test   rax,rax
  401d69:	jne    401d50 <__sprintf_chk@plt+0x9b0>
  401d6b:	cmp    QWORD PTR [rsp+0x8],0x0
  401d71:	jg     401db0 <__sprintf_chk@plt+0xa10>
  401d73:	cmp    QWORD PTR [rsp],0x0
  401d78:	jg     401e16 <__sprintf_chk@plt+0xa76>
  401d7e:	xor    eax,eax
  401d80:	mov    rdi,rbx
  401d83:	call   403180 <__sprintf_chk@plt+0x1de0>
  401d88:	mov    rax,QWORD PTR [rsp+0x28]
  401d8d:	xor    rax,QWORD PTR fs:0x28
  401d96:	jne    401ede <__sprintf_chk@plt+0xb3e>
  401d9c:	add    rsp,0x30
  401da0:	pop    rbx
  401da1:	pop    rbp
  401da2:	pop    r12
  401da4:	pop    r13
  401da6:	pop    r14
  401da8:	ret    
  401da9:	nop    DWORD PTR [rax+0x0]
  401db0:	mov    rdx,rbx
  401db3:	mov    esi,0x63
  401db8:	lea    rdi,[rip+0x5381]        # 407140 <error@@Base+0x3e30>
  401dbf:	call   4012a0 <fgets@plt>
  401dc4:	lea    rbp,[rsp+0x18]
  401dc9:	lea    r13,[rip+0x5384]        # 407154 <error@@Base+0x3e44>
  401dd0:	test   rax,rax
  401dd3:	jne    401df7 <__sprintf_chk@plt+0xa57>
  401dd5:	jmp    401d73 <__sprintf_chk@plt+0x9d3>
  401dd7:	nop    WORD PTR [rax+rax*1+0x0]
  401de0:	mov    rcx,QWORD PTR [rsp+0x18]
  401de5:	mov    rdx,QWORD PTR [rsp+0x10]
  401dea:	mov    rsi,r13
  401ded:	mov    rdi,r12
  401df0:	xor    eax,eax
  401df2:	call   401aa0 <__sprintf_chk@plt+0x700>
  401df7:	xor    eax,eax
  401df9:	mov    rdx,rbp
  401dfc:	mov    rsi,r14
  401dff:	mov    rdi,rbx
  401e02:	call   401860 <__sprintf_chk@plt+0x4c0>
  401e07:	test   al,al
  401e09:	jne    401de0 <__sprintf_chk@plt+0xa40>
  401e0b:	cmp    QWORD PTR [rsp],0x0
  401e10:	jle    401d7e <__sprintf_chk@plt+0x9de>
  401e16:	mov    rdx,rbx
  401e19:	mov    esi,0x63
  401e1e:	lea    rdi,[rip+0x531b]        # 407140 <error@@Base+0x3e30>
  401e25:	call   4012a0 <fgets@plt>
  401e2a:	lea    rbp,[rsp+0x18]
  401e2f:	lea    r13,[rsp+0x20]
  401e34:	test   rax,rax
  401e37:	jne    401e66 <__sprintf_chk@plt+0xac6>
  401e39:	jmp    401d7e <__sprintf_chk@plt+0x9de>
  401e3e:	xchg   ax,ax
  401e40:	cmp    al,0x5c
  401e42:	jne    401ea0 <__sprintf_chk@plt+0xb00>
  401e44:	mov    QWORD PTR [rsp+0x20],0xa
  401e4d:	mov    esi,0xa
  401e52:	mov    rcx,QWORD PTR [rsp+0x18]
  401e57:	mov    rdx,QWORD PTR [rsp+0x10]
  401e5c:	mov    rdi,r12
  401e5f:	xor    eax,eax
  401e61:	call   401a30 <__sprintf_chk@plt+0x690>
  401e66:	xor    eax,eax
  401e68:	mov    rdx,rbp
  401e6b:	mov    rsi,r14
  401e6e:	mov    rdi,rbx
  401e71:	call   401860 <__sprintf_chk@plt+0x4c0>
  401e76:	test   al,al
  401e78:	je     401d7e <__sprintf_chk@plt+0x9de>
  401e7e:	movzx  eax,BYTE PTR [rip+0x52da]        # 40715f <error@@Base+0x3e4f>
  401e85:	cmp    al,0x7d
  401e87:	jne    401e40 <__sprintf_chk@plt+0xaa0>
  401e89:	movsx  rsi,BYTE PTR [rip+0x52cd]        # 40715e <error@@Base+0x3e4e>
  401e91:	mov    QWORD PTR [rsp+0x20],rsi
  401e96:	jmp    401e52 <__sprintf_chk@plt+0xab2>
  401e98:	nop    DWORD PTR [rax+rax*1+0x0]
  401ea0:	lea    rsi,[rip+0x2207]        # 4040ae <error@@Base+0xd9e>
  401ea7:	mov    rdx,r13
  401eaa:	lea    rdi,[rip+0x52ae]        # 40715f <error@@Base+0x3e4f>
  401eb1:	xor    eax,eax
  401eb3:	call   401310 <__isoc99_sscanf@plt>
  401eb8:	mov    rsi,QWORD PTR [rsp+0x20]
  401ebd:	jmp    401e52 <__sprintf_chk@plt+0xab2>
  401ebf:	test   r13,r13
  401ec2:	lea    rax,[rip+0x21df]        # 4040a8 <error@@Base+0xd98>
  401ec9:	cmove  r13,rax
  401ecd:	lea    rdi,[rip+0x21de]        # 4040b2 <error@@Base+0xda2>
  401ed4:	mov    rsi,r13
  401ed7:	xor    eax,eax
  401ed9:	call   4033c0 <error@@Base+0xb0>
  401ede:	call   401260 <__stack_chk_fail@plt>
  401ee3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  401eee:	xchg   ax,ax
  401ef0:	endbr64 
  401ef4:	push   r13
  401ef6:	xor    eax,eax
  401ef8:	push   r12
  401efa:	mov    r12,rdi
  401efd:	mov    rdi,rsi
  401f00:	push   rbp
  401f01:	lea    rsi,[rip+0x2540]        # 404448 <error@@Base+0x1138>
  401f08:	lea    rbp,[r12+0x88]
  401f10:	push   rbx
  401f11:	sub    rsp,0x8
  401f15:	call   403410 <error@@Base+0x100>
  401f1a:	mov    r13,rax
  401f1d:	mov    rdi,rax
  401f20:	lea    r8,[rip+0x2291]        # 4041b8 <error@@Base+0xea8>
  401f27:	lea    rcx,[rip+0x225a]        # 404188 <error@@Base+0xe78>
  401f2e:	lea    rdx,[rip+0x218f]        # 4040c4 <error@@Base+0xdb4>
  401f35:	mov    esi,0x1
  401f3a:	xor    eax,eax
  401f3c:	call   401360 <__fprintf_chk@plt>
  401f41:	mov    rcx,QWORD PTR [r12]
  401f45:	lea    r8,[rip+0x23ee]        # 40433a <error@@Base+0x102a>
  401f4c:	lea    rdx,[rip+0x21e0]        # 404133 <error@@Base+0xe23>
  401f53:	mov    esi,0x1
  401f58:	mov    rdi,r13
  401f5b:	xor    eax,eax
  401f5d:	call   401360 <__fprintf_chk@plt>
  401f62:	mov    rcx,QWORD PTR [r12+0x8]
  401f67:	lea    r8,[rip+0x215b]        # 4040c9 <error@@Base+0xdb9>
  401f6e:	lea    rdx,[rip+0x21be]        # 404133 <error@@Base+0xe23>
  401f75:	mov    esi,0x1
  401f7a:	mov    rdi,r13
  401f7d:	xor    eax,eax
  401f7f:	call   401360 <__fprintf_chk@plt>
  401f84:	mov    rdx,QWORD PTR [r12]
  401f88:	xor    eax,eax
  401f8a:	mov    rsi,rdx
  401f8d:	sub    rsi,QWORD PTR [r12+0x8]
  401f92:	mov    rdi,r13
  401f95:	call   4018c0 <__sprintf_chk@plt+0x520>
  401f9a:	lea    rdx,[rip+0x212f]        # 4040d0 <error@@Base+0xdc0>
  401fa1:	mov    esi,0x1
  401fa6:	mov    rdi,r13
  401fa9:	xor    eax,eax
  401fab:	call   401360 <__fprintf_chk@plt>
  401fb0:	mov    rcx,QWORD PTR [r12+0x10]
  401fb5:	lea    r8,[rip+0x2123]        # 4040df <error@@Base+0xdcf>
  401fbc:	lea    rdx,[rip+0x2170]        # 404133 <error@@Base+0xe23>
  401fc3:	mov    esi,0x1
  401fc8:	mov    rdi,r13
  401fcb:	xor    eax,eax
  401fcd:	call   401360 <__fprintf_chk@plt>
  401fd2:	mov    rcx,QWORD PTR [r12+0x18]
  401fd7:	lea    r8,[rip+0x2113]        # 4040f1 <error@@Base+0xde1>
  401fde:	lea    rdx,[rip+0x214e]        # 404133 <error@@Base+0xe23>
  401fe5:	mov    esi,0x1
  401fea:	mov    rdi,r13
  401fed:	xor    eax,eax
  401fef:	call   401360 <__fprintf_chk@plt>
  401ff4:	mov    rcx,QWORD PTR [r12+0x20]
  401ff9:	lea    r8,[rip+0x2101]        # 404101 <error@@Base+0xdf1>
  402000:	lea    rdx,[rip+0x212c]        # 404133 <error@@Base+0xe23>
  402007:	mov    esi,0x1
  40200c:	mov    rdi,r13
  40200f:	xor    eax,eax
  402011:	call   401360 <__fprintf_chk@plt>
  402016:	mov    rsi,QWORD PTR [r12+0x18]
  40201b:	mov    rdx,QWORD PTR [r12]
  40201f:	add    rsi,QWORD PTR [r12+0x10]
  402024:	xor    eax,eax
  402026:	mov    rdi,r13
  402029:	call   4018c0 <__sprintf_chk@plt+0x520>
  40202e:	lea    rdx,[rip+0x20d8]        # 40410d <error@@Base+0xdfd>
  402035:	mov    esi,0x1
  40203a:	mov    rdi,r13
  40203d:	xor    eax,eax
  40203f:	call   401360 <__fprintf_chk@plt>
  402044:	mov    rdx,QWORD PTR [r12]
  402048:	xor    eax,eax
  40204a:	mov    rsi,rdx
  40204d:	sub    rsi,QWORD PTR [r12+0x60]
  402052:	mov    rdi,r13
  402055:	call   4018c0 <__sprintf_chk@plt+0x520>
  40205a:	lea    rdx,[rip+0x2187]        # 4041e8 <error@@Base+0xed8>
  402061:	mov    esi,0x1
  402066:	mov    rdi,r13
  402069:	xor    eax,eax
  40206b:	call   401360 <__fprintf_chk@plt>
  402070:	lea    rdx,[rip+0x2191]        # 404208 <error@@Base+0xef8>
  402077:	mov    esi,0x1
  40207c:	mov    rdi,r13
  40207f:	xor    eax,eax
  402081:	call   401360 <__fprintf_chk@plt>
  402086:	lea    rax,[rip+0x20b1]        # 40413e <error@@Base+0xe2e>
  40208d:	mov    rcx,QWORD PTR [r12+0x28]
  402092:	push   rax
  402093:	lea    rdx,[rip+0x208a]        # 404124 <error@@Base+0xe14>
  40209a:	xor    eax,eax
  40209c:	push   QWORD PTR [r12+0x40]
  4020a1:	mov    esi,0x1
  4020a6:	mov    rdi,r13
  4020a9:	mov    r9,QWORD PTR [r12+0x38]
  4020ae:	mov    r8,QWORD PTR [r12+0x30]
  4020b3:	xor    ebx,ebx
  4020b5:	call   401360 <__fprintf_chk@plt>
  4020ba:	lea    rax,[rip+0x2084]        # 404145 <error@@Base+0xe35>
  4020c1:	mov    rcx,QWORD PTR [r12+0x48]
  4020c6:	push   rax
  4020c7:	lea    rdx,[rip+0x2056]        # 404124 <error@@Base+0xe14>
  4020ce:	mov    esi,0x1
  4020d3:	push   QWORD PTR [r12+0x60]
  4020d8:	mov    rdi,r13
  4020db:	xor    eax,eax
  4020dd:	mov    r9,QWORD PTR [r12+0x58]
  4020e2:	mov    r8,QWORD PTR [r12+0x50]
  4020e7:	call   401360 <__fprintf_chk@plt>
  4020ec:	add    rsp,0x20
  4020f0:	lea    rax,[rip+0x2057]        # 40414e <error@@Base+0xe3e>
  4020f7:	mov    rcx,QWORD PTR [r12+0x68]
  4020fc:	push   rax
  4020fd:	lea    rdx,[rip+0x2020]        # 404124 <error@@Base+0xe14>
  402104:	mov    esi,0x1
  402109:	push   QWORD PTR [r12+0x80]
  402111:	mov    rdi,r13
  402114:	xor    eax,eax
  402116:	mov    r9,QWORD PTR [r12+0x78]
  40211b:	mov    r8,QWORD PTR [r12+0x70]
  402120:	call   401360 <__fprintf_chk@plt>
  402125:	lea    rdx,[rip+0x2028]        # 404154 <error@@Base+0xe44>
  40212c:	mov    esi,0x1
  402131:	mov    rdi,r13
  402134:	xor    eax,eax
  402136:	call   401360 <__fprintf_chk@plt>
  40213b:	pop    rax
  40213c:	pop    rdx
  40213d:	nop    DWORD PTR [rax]
  402140:	cmp    QWORD PTR [rbp+0x0],0x0
  402145:	jle    402163 <__sprintf_chk@plt+0xdc3>
  402147:	mov    rdi,rbx
  40214a:	xor    eax,eax
  40214c:	call   4023f0 <__sprintf_chk@plt+0x1050>
  402151:	mov    rdx,rax
  402154:	xor    ecx,ecx
  402156:	mov    rsi,rbp
  402159:	mov    rdi,r13
  40215c:	xor    eax,eax
  40215e:	call   401960 <__sprintf_chk@plt+0x5c0>
  402163:	inc    rbx
  402166:	add    rbp,0x10
  40216a:	cmp    rbx,0x100
  402171:	jne    402140 <__sprintf_chk@plt+0xda0>
  402173:	xor    ecx,ecx
  402175:	xor    eax,eax
  402177:	lea    rsi,[r12+0x1088]
  40217f:	lea    rdx,[rip+0x1fc8]        # 40414e <error@@Base+0xe3e>
  402186:	mov    rdi,r13
  402189:	call   401960 <__sprintf_chk@plt+0x5c0>
  40218e:	cmp    QWORD PTR [r12+0x8],0x0
  402194:	jg     4021b5 <__sprintf_chk@plt+0xe15>
  402196:	cmp    QWORD PTR [r12],0x0
  40219b:	jg     402252 <__sprintf_chk@plt+0xeb2>
  4021a1:	add    rsp,0x8
  4021a5:	pop    rbx
  4021a6:	pop    rbp
  4021a7:	pop    r12
  4021a9:	mov    rdi,r13
  4021ac:	xor    eax,eax
  4021ae:	pop    r13
  4021b0:	jmp    403180 <__sprintf_chk@plt+0x1de0>
  4021b5:	xor    eax,eax
  4021b7:	lea    rdi,[r12+0x1098]
  4021bf:	call   4027d0 <__sprintf_chk@plt+0x1430>
  4021c4:	mov    rsi,QWORD PTR [r12+0x4f78]
  4021cc:	mov    rdi,QWORD PTR [r12+0x4f80]
  4021d4:	xor    eax,eax
  4021d6:	lea    rdx,[rip+0xfffffffffffff743]        # 401920 <__sprintf_chk@plt+0x580>
  4021dd:	call   4025c0 <__sprintf_chk@plt+0x1220>
  4021e2:	xor    eax,eax
  4021e4:	lea    rdx,[rip+0x2045]        # 404230 <error@@Base+0xf20>
  4021eb:	mov    esi,0x1
  4021f0:	mov    rdi,r13
  4021f3:	call   401360 <__fprintf_chk@plt>
  4021f8:	cmp    QWORD PTR [r12+0x4f80],0x0
  402201:	jle    402196 <__sprintf_chk@plt+0xdf6>
  402203:	xor    ebx,ebx
  402205:	lea    rbp,[rip+0x1f66]        # 404172 <error@@Base+0xe62>
  40220c:	nop    DWORD PTR [rax+0x0]
  402210:	mov    rax,QWORD PTR [r12+0x4f78]
  402218:	mov    rdx,rbp
  40221b:	mov    rax,QWORD PTR [rax+rbx*8]
  40221f:	mov    esi,0x1
  402224:	mov    rcx,QWORD PTR [rax+0x18]
  402228:	mov    r9,QWORD PTR [rax+0x10]
  40222c:	mov    r8,QWORD PTR [rax+0x20]
  402230:	mov    rdi,r13
  402233:	xor    eax,eax
  402235:	inc    rbx
  402238:	call   401360 <__fprintf_chk@plt>
  40223d:	cmp    QWORD PTR [r12+0x4f80],rbx
  402245:	jg     402210 <__sprintf_chk@plt+0xe70>
  402247:	cmp    QWORD PTR [r12],0x0
  40224c:	jle    4021a1 <__sprintf_chk@plt+0xe01>
  402252:	lea    rdx,[rip+0x1efb]        # 404154 <error@@Base+0xe44>
  402259:	mov    esi,0x1
  40225e:	mov    rdi,r13
  402261:	xor    eax,eax
  402263:	call   401360 <__fprintf_chk@plt>
  402268:	add    r12,0x4f88
  40226f:	xor    ebp,ebp
  402271:	nop    DWORD PTR [rax+0x0]
  402278:	cmp    QWORD PTR [r12],0x0
  40227d:	jle    402291 <__sprintf_chk@plt+0xef1>
  40227f:	mov    rcx,rbp
  402282:	xor    edx,edx
  402284:	mov    rsi,r12
  402287:	mov    rdi,r13
  40228a:	xor    eax,eax
  40228c:	call   401960 <__sprintf_chk@plt+0x5c0>
  402291:	inc    rbp
  402294:	add    r12,0x10
  402298:	cmp    rbp,0x10ffff
  40229f:	jne    402278 <__sprintf_chk@plt+0xed8>
  4022a1:	jmp    4021a1 <__sprintf_chk@plt+0xe01>
  4022a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4022b0:	push   r15
  4022b2:	lea    r15,[rip+0x114f07]        # 5171c0 <error@@Base+0x113eb0>
  4022b9:	push   r14
  4022bb:	push   r13
  4022bd:	push   r12
  4022bf:	lea    r12,[rip+0x457a]        # 406840 <error@@Base+0x3530>
  4022c6:	push   rbp
  4022c7:	push   rbx
  4022c8:	sub    rsp,0x8
  4022cc:	nop    DWORD PTR [rax+0x0]
  4022d0:	movsx  rbx,WORD PTR [rip+0x1156e8]        # 5179c0 <error@@Base+0x1146b0>
  4022d8:	mov    r13,rbx
  4022db:	test   rbx,rbx
  4022de:	jle    402359 <__sprintf_chk@plt+0xfb9>
  4022e0:	mov    rbp,QWORD PTR [r12+0x8]
  4022e5:	xor    r14d,r14d
  4022e8:	jmp    4022f8 <__sprintf_chk@plt+0xf58>
  4022ea:	nop    WORD PTR [rax+rax*1+0x0]
  4022f0:	inc    r14
  4022f3:	cmp    rbx,r14
  4022f6:	je     402368 <__sprintf_chk@plt+0xfc8>
  4022f8:	mov    rsi,QWORD PTR [r15+r14*8]
  4022fc:	mov    rdi,rbp
  4022ff:	call   4012d0 <strcmp@plt>
  402304:	test   eax,eax
  402306:	jne    4022f0 <__sprintf_chk@plt+0xf50>
  402308:	mov    eax,DWORD PTR [r12]
  40230c:	mov    esi,DWORD PTR [r12+0x4]
  402311:	cmp    eax,esi
  402313:	ja     40233a <__sprintf_chk@plt+0xf9a>
  402315:	lea    rcx,[rip+0x4ea4]        # 4071c0 <error@@Base+0x3eb0>
  40231c:	add    rax,rcx
  40231f:	inc    rcx
  402322:	mov    edx,r14d
  402325:	add    rsi,rcx
  402328:	nop    DWORD PTR [rax+rax*1+0x0]
  402330:	mov    BYTE PTR [rax],dl
  402332:	inc    rax
  402335:	cmp    rsi,rax
  402338:	jne    402330 <__sprintf_chk@plt+0xf90>
  40233a:	add    r12,0x10
  40233e:	lea    rax,[rip+0x4aab]        # 406df0 <error@@Base+0x3ae0>
  402345:	cmp    r12,rax
  402348:	jne    4022d0 <__sprintf_chk@plt+0xf30>
  40234a:	add    rsp,0x8
  40234e:	pop    rbx
  40234f:	pop    rbp
  402350:	pop    r12
  402352:	pop    r13
  402354:	pop    r14
  402356:	pop    r15
  402358:	ret    
  402359:	mov    r14d,0x0
  40235f:	jne    402308 <__sprintf_chk@plt+0xf68>
  402361:	nop    DWORD PTR [rax+0x0]
  402368:	cmp    r13w,0x100
  40236e:	je     402386 <__sprintf_chk@plt+0xfe6>
  402370:	mov    rax,QWORD PTR [r12+0x8]
  402375:	inc    r13d
  402378:	mov    WORD PTR [rip+0x115640],r13w        # 5179c0 <error@@Base+0x1146b0>
  402380:	mov    QWORD PTR [r15+r14*8],rax
  402384:	jmp    402308 <__sprintf_chk@plt+0xf68>
  402386:	lea    rdi,[rip+0x1ecb]        # 404258 <error@@Base+0xf48>
  40238d:	xor    eax,eax
  40238f:	call   403310 <error@@Base>
  402394:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40239f:	nop
  4023a0:	endbr64 
  4023a4:	cmp    WORD PTR [rip+0x115614],0x0        # 5179c0 <error@@Base+0x1146b0>
  4023ac:	je     4023c0 <__sprintf_chk@plt+0x1020>
  4023ae:	mov    edi,edi
  4023b0:	lea    rax,[rip+0x4e09]        # 4071c0 <error@@Base+0x3eb0>
  4023b7:	movzx  eax,BYTE PTR [rax+rdi*1]
  4023bb:	ret    
  4023bc:	nop    DWORD PTR [rax+0x0]
  4023c0:	sub    rsp,0x18
  4023c4:	xor    eax,eax
  4023c6:	mov    DWORD PTR [rsp+0xc],edi
  4023ca:	call   4022b0 <__sprintf_chk@plt+0xf10>
  4023cf:	mov    edi,DWORD PTR [rsp+0xc]
  4023d3:	lea    rax,[rip+0x4de6]        # 4071c0 <error@@Base+0x3eb0>
  4023da:	mov    edi,edi
  4023dc:	movzx  eax,BYTE PTR [rax+rdi*1]
  4023e0:	add    rsp,0x18
  4023e4:	ret    
  4023e5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4023f0:	endbr64 
  4023f4:	sub    rsp,0x18
  4023f8:	movsx  eax,WORD PTR [rip+0x1155c1]        # 5179c0 <error@@Base+0x1146b0>
  4023ff:	test   ax,ax
  402402:	je     402420 <__sprintf_chk@plt+0x1080>
  402404:	movzx  edi,dil
  402408:	cmp    edi,eax
  40240a:	jge    402436 <__sprintf_chk@plt+0x1096>
  40240c:	lea    rax,[rip+0x114dad]        # 5171c0 <error@@Base+0x113eb0>
  402413:	mov    rax,QWORD PTR [rax+rdi*8]
  402417:	add    rsp,0x18
  40241b:	ret    
  40241c:	nop    DWORD PTR [rax+0x0]
  402420:	mov    DWORD PTR [rsp+0xc],edi
  402424:	call   4022b0 <__sprintf_chk@plt+0xf10>
  402429:	movsx  eax,WORD PTR [rip+0x115590]        # 5179c0 <error@@Base+0x1146b0>
  402430:	mov    edi,DWORD PTR [rsp+0xc]
  402434:	jmp    402404 <__sprintf_chk@plt+0x1064>
  402436:	lea    rdi,[rip+0x1e36]        # 404273 <error@@Base+0xf63>
  40243d:	xor    eax,eax
  40243f:	call   403310 <error@@Base>
  402444:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40244e:	xchg   ax,ax
  402450:	push   r15
  402452:	mov    rax,rsi
  402455:	shl    rax,0x3
  402459:	push   r14
  40245b:	push   r13
  40245d:	mov    r13,rdi
  402460:	push   r12
  402462:	push   rbp
  402463:	push   rbx
  402464:	sub    rsp,0x18
  402468:	mov    QWORD PTR [rsp],rsi
  40246c:	mov    QWORD PTR [rsp+0x8],rax
  402471:	mov    rax,QWORD PTR [rip+0x115558]        # 5179d0 <error@@Base+0x1146c0>
  402478:	mov    rdx,QWORD PTR [rsp]
  40247c:	mov    rbx,QWORD PTR [rax+r13*8]
  402480:	mov    r15,rdx
  402483:	mov    rbp,r13
  402486:	cmp    r13,rdx
  402489:	jge    4025a3 <__sprintf_chk@plt+0x1203>
  40248f:	nop
  402490:	mov    rsi,QWORD PTR [rax+r15*8]
  402494:	mov    rdi,rbx
  402497:	xor    eax,eax
  402499:	lea    r12,[r15*8+0x0]
  4024a1:	call   QWORD PTR [rip+0x115521]        # 5179c8 <error@@Base+0x1146b8>
  4024a7:	test   eax,eax
  4024a9:	jns    402548 <__sprintf_chk@plt+0x11a8>
  4024af:	dec    r15
  4024b2:	mov    rax,QWORD PTR [rip+0x115517]        # 5179d0 <error@@Base+0x1146c0>
  4024b9:	lea    r12,[r15*8+0x0]
  4024c1:	cmp    rbp,r15
  4024c4:	jl     402490 <__sprintf_chk@plt+0x10f0>
  4024c6:	lea    rsi,[rax+r12*1]
  4024ca:	cmp    r15,rbp
  4024cd:	je     40255f <__sprintf_chk@plt+0x11bf>
  4024d3:	mov    rsi,QWORD PTR [rsi]
  4024d6:	lea    r14,[rbp+0x1]
  4024da:	lea    rdi,[rbp*8+0x0]
  4024e2:	mov    QWORD PTR [rax+rbp*8],rsi
  4024e6:	cmp    r15,r14
  4024e9:	jg     4024ff <__sprintf_chk@plt+0x115f>
  4024eb:	jmp    40258b <__sprintf_chk@plt+0x11eb>
  4024f0:	inc    r14
  4024f3:	mov    rax,QWORD PTR [rip+0x1154d6]        # 5179d0 <error@@Base+0x1146c0>
  4024fa:	cmp    r15,r14
  4024fd:	je     402558 <__sprintf_chk@plt+0x11b8>
  4024ff:	mov    rsi,QWORD PTR [rax+r14*8]
  402503:	mov    rdi,rbx
  402506:	xor    eax,eax
  402508:	lea    rbp,[r14*8+0x0]
  402510:	call   QWORD PTR [rip+0x1154b2]        # 5179c8 <error@@Base+0x1146b8>
  402516:	test   eax,eax
  402518:	jg     4024f0 <__sprintf_chk@plt+0x1150>
  40251a:	mov    rax,QWORD PTR [rip+0x1154af]        # 5179d0 <error@@Base+0x1146c0>
  402521:	lea    rsi,[rax+rbp*1]
  402525:	mov    rbp,r14
  402528:	mov    rsi,QWORD PTR [rsi]
  40252b:	dec    r15
  40252e:	mov    QWORD PTR [rax+r12*1],rsi
  402532:	cmp    r15,r14
  402535:	jg     402490 <__sprintf_chk@plt+0x10f0>
  40253b:	lea    rsi,[rax+r15*8]
  40253f:	jmp    402562 <__sprintf_chk@plt+0x11c2>
  402541:	nop    DWORD PTR [rax+0x0]
  402548:	mov    rax,QWORD PTR [rip+0x115481]        # 5179d0 <error@@Base+0x1146c0>
  40254f:	jmp    4024c6 <__sprintf_chk@plt+0x1126>
  402554:	nop    DWORD PTR [rax+0x0]
  402558:	lea    rsi,[rax+r15*8]
  40255c:	mov    rbp,r15
  40255f:	mov    r15,rbp
  402562:	mov    QWORD PTR [rsi],rbx
  402565:	lea    rsi,[r15-0x1]
  402569:	cmp    r13,rsi
  40256c:	jl     402597 <__sprintf_chk@plt+0x11f7>
  40256e:	lea    r13,[rbp+0x1]
  402572:	cmp    r13,QWORD PTR [rsp]
  402576:	jl     402471 <__sprintf_chk@plt+0x10d1>
  40257c:	add    rsp,0x18
  402580:	pop    rbx
  402581:	pop    rbp
  402582:	pop    r12
  402584:	pop    r13
  402586:	pop    r14
  402588:	pop    r15
  40258a:	ret    
  40258b:	lea    rsi,[rax+rdi*1+0x8]
  402590:	je     40255c <__sprintf_chk@plt+0x11bc>
  402592:	mov    rbp,r14
  402595:	jmp    402528 <__sprintf_chk@plt+0x1188>
  402597:	mov    rdi,r13
  40259a:	xor    eax,eax
  40259c:	call   402450 <__sprintf_chk@plt+0x10b0>
  4025a1:	jmp    40256e <__sprintf_chk@plt+0x11ce>
  4025a3:	mov    rcx,QWORD PTR [rsp+0x8]
  4025a8:	mov    r15,QWORD PTR [rsp]
  4025ac:	lea    rsi,[rax+rcx*1]
  4025b0:	jmp    402562 <__sprintf_chk@plt+0x11c2>
  4025b2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4025bd:	nop    DWORD PTR [rax]
  4025c0:	endbr64 
  4025c4:	cmp    rdi,0x1
  4025c8:	jle    4025e8 <__sprintf_chk@plt+0x1248>
  4025ca:	mov    QWORD PTR [rip+0x1153ff],rsi        # 5179d0 <error@@Base+0x1146c0>
  4025d1:	xor    eax,eax
  4025d3:	lea    rsi,[rdi-0x1]
  4025d7:	xor    edi,edi
  4025d9:	mov    QWORD PTR [rip+0x1153e8],rdx        # 5179c8 <error@@Base+0x1146b8>
  4025e0:	jmp    402450 <__sprintf_chk@plt+0x10b0>
  4025e5:	nop    DWORD PTR [rax]
  4025e8:	ret    
  4025e9:	nop    DWORD PTR [rax+0x0]
  4025f0:	endbr64 
  4025f4:	push   r12
  4025f6:	mov    r12,rdi
  4025f9:	push   rbp
  4025fa:	lea    rbp,[rdi+0x3ee0]
  402601:	push   rbx
  402602:	mov    rbx,rdi
  402605:	nop    DWORD PTR [rax]
  402608:	mov    rdi,rbx
  40260b:	xor    eax,eax
  40260d:	add    rbx,0x20
  402611:	call   403760 <error@@Base+0x450>
  402616:	cmp    rbx,rbp
  402619:	jne    402608 <__sprintf_chk@plt+0x1268>
  40261b:	pop    rbx
  40261c:	pop    rbp
  40261d:	mov    QWORD PTR [r12+0x3ee0],0x0
  402629:	mov    QWORD PTR [r12+0x3ee8],0x0
  402635:	pop    r12
  402637:	ret    
  402638:	nop    DWORD PTR [rax+rax*1+0x0]
  402640:	endbr64 
  402644:	push   rbp
  402645:	mov    rbp,rsi
  402648:	push   rbx
  402649:	sub    rsp,0x8
  40264d:	movzx  eax,BYTE PTR [rsi]
  402650:	test   al,al
  402652:	je     4026c8 <__sprintf_chk@plt+0x1328>
  402654:	lea    rdx,[rsi+0x1]
  402658:	xor    ecx,ecx
  40265a:	nop    WORD PTR [rax+rax*1+0x0]
  402660:	inc    rdx
  402663:	add    rcx,rax
  402666:	movzx  eax,BYTE PTR [rdx-0x1]
  40266a:	test   al,al
  40266c:	jne    402660 <__sprintf_chk@plt+0x12c0>
  40266e:	mov    rax,rcx
  402671:	movabs rdx,0x824a4e60b3262bc5
  40267b:	mul    rdx
  40267e:	shr    rdx,0x8
  402682:	imul   rdx,rdx,0x1f7
  402689:	sub    ecx,edx
  40268b:	movsxd rcx,ecx
  40268e:	shl    rcx,0x5
  402692:	mov    rbx,QWORD PTR [rdi+rcx*1]
  402696:	test   rbx,rbx
  402699:	jne    4026a9 <__sprintf_chk@plt+0x1309>
  40269b:	jmp    4026b9 <__sprintf_chk@plt+0x1319>
  40269d:	nop    DWORD PTR [rax]
  4026a0:	mov    rbx,QWORD PTR [rbx+0x8]
  4026a4:	test   rbx,rbx
  4026a7:	je     4026b9 <__sprintf_chk@plt+0x1319>
  4026a9:	mov    rsi,QWORD PTR [rbx+0x10]
  4026ad:	mov    rdi,rbp
  4026b0:	call   4012d0 <strcmp@plt>
  4026b5:	test   eax,eax
  4026b7:	jne    4026a0 <__sprintf_chk@plt+0x1300>
  4026b9:	add    rsp,0x8
  4026bd:	mov    rax,rbx
  4026c0:	pop    rbx
  4026c1:	pop    rbp
  4026c2:	ret    
  4026c3:	nop    DWORD PTR [rax+rax*1+0x0]
  4026c8:	xor    ecx,ecx
  4026ca:	jmp    40268b <__sprintf_chk@plt+0x12eb>
  4026cc:	nop    DWORD PTR [rax+0x0]
  4026d0:	endbr64 
  4026d4:	push   rbx
  4026d5:	mov    rdx,QWORD PTR [rsi+0x10]
  4026d9:	mov    rbx,rdi
  4026dc:	movzx  eax,BYTE PTR [rdx]
  4026df:	test   al,al
  4026e1:	je     402723 <__sprintf_chk@plt+0x1383>
  4026e3:	inc    rdx
  4026e6:	xor    edi,edi
  4026e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4026f0:	inc    rdx
  4026f3:	add    rdi,rax
  4026f6:	movzx  eax,BYTE PTR [rdx-0x1]
  4026fa:	test   al,al
  4026fc:	jne    4026f0 <__sprintf_chk@plt+0x1350>
  4026fe:	mov    rax,rdi
  402701:	movabs rdx,0x824a4e60b3262bc5
  40270b:	mul    rdx
  40270e:	shr    rdx,0x8
  402712:	imul   rdx,rdx,0x1f7
  402719:	sub    rdi,rdx
  40271c:	shl    rdi,0x5
  402720:	add    rdi,rbx
  402723:	xor    eax,eax
  402725:	call   403790 <error@@Base+0x480>
  40272a:	mov    rdi,QWORD PTR [rbx+0x3ee0]
  402731:	test   rdi,rdi
  402734:	je     402746 <__sprintf_chk@plt+0x13a6>
  402736:	call   4011f0 <free@plt>
  40273b:	mov    QWORD PTR [rbx+0x3ee0],0x0
  402746:	inc    QWORD PTR [rbx+0x3ee8]
  40274d:	pop    rbx
  40274e:	ret    
  40274f:	nop
  402750:	endbr64 
  402754:	push   rbx
  402755:	mov    rdx,QWORD PTR [rsi+0x10]
  402759:	mov    rbx,rdi
  40275c:	movzx  eax,BYTE PTR [rdx]
  40275f:	test   al,al
  402761:	je     4027a3 <__sprintf_chk@plt+0x1403>
  402763:	inc    rdx
  402766:	xor    edi,edi
  402768:	nop    DWORD PTR [rax+rax*1+0x0]
  402770:	inc    rdx
  402773:	add    rdi,rax
  402776:	movzx  eax,BYTE PTR [rdx-0x1]
  40277a:	test   al,al
  40277c:	jne    402770 <__sprintf_chk@plt+0x13d0>
  40277e:	mov    rax,rdi
  402781:	movabs rdx,0x824a4e60b3262bc5
  40278b:	mul    rdx
  40278e:	shr    rdx,0x8
  402792:	imul   rdx,rdx,0x1f7
  402799:	sub    rdi,rdx
  40279c:	shl    rdi,0x5
  4027a0:	add    rdi,rbx
  4027a3:	xor    eax,eax
  4027a5:	call   4038d0 <error@@Base+0x5c0>
  4027aa:	mov    rdi,QWORD PTR [rbx+0x3ee0]
  4027b1:	test   rdi,rdi
  4027b4:	je     4027c6 <__sprintf_chk@plt+0x1426>
  4027b6:	call   4011f0 <free@plt>
  4027bb:	mov    QWORD PTR [rbx+0x3ee0],0x0
  4027c6:	dec    QWORD PTR [rbx+0x3ee8]
  4027cd:	pop    rbx
  4027ce:	ret    
  4027cf:	nop
  4027d0:	endbr64 
  4027d4:	cmp    QWORD PTR [rdi+0x3ee0],0x0
  4027dc:	je     4027df <__sprintf_chk@plt+0x143f>
  4027de:	ret    
  4027df:	mov    rax,QWORD PTR [rdi+0x3ee8]
  4027e6:	test   rax,rax
  4027e9:	je     4027de <__sprintf_chk@plt+0x143e>
  4027eb:	push   rbx
  4027ec:	mov    esi,0x8
  4027f1:	mov    rbx,rdi
  4027f4:	mov    rdi,rax
  4027f7:	xor    eax,eax
  4027f9:	call   403360 <error@@Base+0x50>
  4027fe:	mov    QWORD PTR [rbx+0x3ee0],rax
  402805:	mov    rsi,rbx
  402808:	lea    rdi,[rbx+0x3ee0]
  40280f:	xor    ecx,ecx
  402811:	nop    DWORD PTR [rax+0x0]
  402818:	mov    rdx,QWORD PTR [rsi]
  40281b:	test   rdx,rdx
  40281e:	je     402831 <__sprintf_chk@plt+0x1491>
  402820:	inc    rcx
  402823:	mov    QWORD PTR [rax+rcx*8-0x8],rdx
  402828:	mov    rdx,QWORD PTR [rdx+0x8]
  40282c:	test   rdx,rdx
  40282f:	jne    402820 <__sprintf_chk@plt+0x1480>
  402831:	add    rsi,0x20
  402835:	cmp    rsi,rdi
  402838:	jne    402818 <__sprintf_chk@plt+0x1478>
  40283a:	pop    rbx
  40283b:	ret    
  40283c:	nop    DWORD PTR [rax+0x0]
  402840:	endbr64 
  402844:	push   r13
  402846:	mov    r13,rdi
  402849:	push   r12
  40284b:	mov    r12,rsi
  40284e:	push   rbp
  40284f:	lea    rbp,[rdi+0x3ee0]
  402856:	push   rbx
  402857:	mov    rbx,rdi
  40285a:	sub    rsp,0x8
  40285e:	xchg   ax,ax
  402860:	mov    rdi,rbx
  402863:	mov    rsi,r12
  402866:	xor    eax,eax
  402868:	add    rbx,0x20
  40286c:	call   403990 <error@@Base+0x680>
  402871:	cmp    rbx,rbp
  402874:	jne    402860 <__sprintf_chk@plt+0x14c0>
  402876:	mov    rdi,QWORD PTR [r13+0x3ee0]
  40287d:	test   rdi,rdi
  402880:	je     402892 <__sprintf_chk@plt+0x14f2>
  402882:	call   4011f0 <free@plt>
  402887:	mov    QWORD PTR [r13+0x3ee0],0x0
  402892:	mov    QWORD PTR [r13+0x3ee8],0x0
  40289d:	add    rsp,0x8
  4028a1:	pop    rbx
  4028a2:	pop    rbp
  4028a3:	pop    r12
  4028a5:	pop    r13
  4028a7:	ret    
  4028a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4028b0:	endbr64 
  4028b4:	push   r12
  4028b6:	xor    eax,eax
  4028b8:	mov    r12d,esi
  4028bb:	push   rbp
  4028bc:	mov    esi,0x18
  4028c1:	mov    ebp,edx
  4028c3:	push   rbx
  4028c4:	mov    rbx,rdi
  4028c7:	mov    edi,0x1
  4028cc:	call   403360 <error@@Base+0x50>
  4028d1:	mov    BYTE PTR [rax+0x10],r12b
  4028d5:	mov    DWORD PTR [rax+0x14],ebp
  4028d8:	mov    rdi,rbx
  4028db:	mov    rsi,rax
  4028de:	pop    rbx
  4028df:	pop    rbp
  4028e0:	xor    eax,eax
  4028e2:	pop    r12
  4028e4:	jmp    4037e0 <error@@Base+0x4d0>
  4028e9:	nop    DWORD PTR [rax+0x0]
  4028f0:	endbr64 
  4028f4:	push   r15
  4028f6:	push   r14
  4028f8:	push   r13
  4028fa:	push   r12
  4028fc:	push   rbp
  4028fd:	push   rbx
  4028fe:	sub    rsp,0xb8
  402905:	mov    QWORD PTR [rsp+0x8],rdi
  40290a:	mov    QWORD PTR [rsp+0x20],rdx
  40290f:	mov    rdi,rsi
  402912:	mov    rsi,QWORD PTR fs:0x28
  40291b:	mov    QWORD PTR [rsp+0xa8],rsi
  402923:	xor    esi,esi
  402925:	cmp    BYTE PTR [rdx],0x0
  402928:	je     402933 <__sprintf_chk@plt+0x1593>
  40292a:	test   rdi,rdi
  40292d:	je     402cc5 <__sprintf_chk@plt+0x1925>
  402933:	mov    rax,QWORD PTR [rsp+0x8]
  402938:	lea    rsi,[rip+0x1f31]        # 404870 <error@@Base+0x1560>
  40293f:	mov    rax,QWORD PTR [rax+0x8]
  402943:	mov    QWORD PTR [rsp+0x28],rax
  402948:	xor    eax,eax
  40294a:	call   403410 <error@@Base+0x100>
  40294f:	mov    r12,rax
  402952:	mov    rax,QWORD PTR [rsp+0x20]
  402957:	cmp    BYTE PTR [rax],0x0
  40295a:	jne    402c08 <__sprintf_chk@plt+0x1868>
  402960:	mov    rsi,QWORD PTR [rsp+0x20]
  402965:	mov    eax,0x5e
  40296a:	mov    ecx,DWORD PTR [rsi+0x4]
  40296d:	mov    rdi,r12
  402970:	test   ecx,ecx
  402972:	cmovne eax,ecx
  402975:	movzx  r15d,BYTE PTR [rsi+0x1]
  40297a:	mov    DWORD PTR [rsp+0x14],eax
  40297e:	call   401390 <getc@plt>
  402983:	cmp    eax,0xffffffff
  402986:	je     402a77 <__sprintf_chk@plt+0x16d7>
  40298c:	mov    rsi,QWORD PTR [rip+0x465d]        # 406ff0 <error@@Base+0x3ce0>
  402993:	movsxd rdx,eax
  402996:	movsx  rcx,BYTE PTR [rsi+rdx*1]
  40299b:	mov    rbx,rcx
  40299e:	test   rcx,rcx
  4029a1:	jle    402cf2 <__sprintf_chk@plt+0x1952>
  4029a7:	lea    rsi,[rsp+0x3c]
  4029ac:	xor    ebp,ebp
  4029ae:	lea    r13,[rsp+0x40]
  4029b3:	mov    QWORD PTR [rsp+0x18],rsi
  4029b8:	jmp    4029fe <__sprintf_chk@plt+0x165e>
  4029ba:	nop    WORD PTR [rax+rax*1+0x0]
  4029c0:	mov    rdi,QWORD PTR [rsp+0x8]
  4029c5:	movsx  esi,bpl
  4029c9:	xor    eax,eax
  4029cb:	call   4028b0 <__sprintf_chk@plt+0x1510>
  4029d0:	mov    rdi,r12
  4029d3:	xor    ebp,ebp
  4029d5:	call   401390 <getc@plt>
  4029da:	cmp    eax,0xffffffff
  4029dd:	je     402a77 <__sprintf_chk@plt+0x16d7>
  4029e3:	mov    rcx,QWORD PTR [rip+0x4606]        # 406ff0 <error@@Base+0x3ce0>
  4029ea:	movsxd rdx,eax
  4029ed:	movsx  rcx,BYTE PTR [rcx+rdx*1]
  4029f2:	mov    rbx,rcx
  4029f5:	test   rcx,rcx
  4029f8:	jle    402cf2 <__sprintf_chk@plt+0x1952>
  4029fe:	mov    BYTE PTR [rsp+0x40],al
  402a02:	cmp    rcx,0x1
  402a06:	je     402a30 <__sprintf_chk@plt+0x1690>
  402a08:	lea    r14,[rcx-0x1]
  402a0c:	lea    rdi,[r13+0x1]
  402a10:	mov    r8,r12
  402a13:	mov    rcx,r14
  402a16:	mov    edx,0x1
  402a1b:	mov    esi,0x3
  402a20:	call   401320 <__fread_chk@plt>
  402a25:	cdqe   
  402a27:	cmp    r14,rax
  402a2a:	jne    402d00 <__sprintf_chk@plt+0x1960>
  402a30:	mov    rdx,QWORD PTR [rsp+0x18]
  402a35:	mov    esi,0x4
  402a3a:	mov    rdi,r13
  402a3d:	call   4012b0 <utf8proc_iterate@plt>
  402a42:	cmp    eax,ebx
  402a44:	jne    402ce0 <__sprintf_chk@plt+0x1940>
  402a4a:	mov    edx,DWORD PTR [rsp+0x3c]
  402a4e:	test   r15b,r15b
  402a51:	je     4029c0 <__sprintf_chk@plt+0x1620>
  402a57:	cmp    DWORD PTR [rsp+0x14],edx
  402a5b:	jne    4029c0 <__sprintf_chk@plt+0x1620>
  402a61:	mov    rdi,r12
  402a64:	mov    ebp,0x1
  402a69:	call   401390 <getc@plt>
  402a6e:	cmp    eax,0xffffffff
  402a71:	jne    4029e3 <__sprintf_chk@plt+0x1643>
  402a77:	xor    eax,eax
  402a79:	mov    rdi,r12
  402a7c:	call   403180 <__sprintf_chk@plt+0x1de0>
  402a81:	mov    rax,QWORD PTR [rsp+0x20]
  402a86:	cmp    BYTE PTR [rax+0x9],0x0
  402a8a:	je     402b90 <__sprintf_chk@plt+0x17f0>
  402a90:	mov    rax,QWORD PTR [rsp+0x28]
  402a95:	test   rax,rax
  402a98:	je     402cb8 <__sprintf_chk@plt+0x1918>
  402a9e:	mov    rbp,QWORD PTR [rax+0x8]
  402aa2:	test   rbp,rbp
  402aa5:	je     402b90 <__sprintf_chk@plt+0x17f0>
  402aab:	mov    r12,rbp
  402aae:	jmp    402aba <__sprintf_chk@plt+0x171a>
  402ab0:	mov    r12,QWORD PTR [r12+0x8]
  402ab5:	test   r12,r12
  402ab8:	je     402b03 <__sprintf_chk@plt+0x1763>
  402aba:	mov    ebx,DWORD PTR [r12+0x14]
  402abf:	mov    edi,ebx
  402ac1:	call   401210 <utf8proc_get_property@plt>
  402ac6:	cmp    ebx,0xd
  402ac9:	ja     402bf0 <__sprintf_chk@plt+0x1850>
  402acf:	cmp    ebx,0xb
  402ad2:	jae    402af0 <__sprintf_chk@plt+0x1750>
  402ad4:	cmp    ebx,0x9
  402ad7:	je     402af0 <__sprintf_chk@plt+0x1750>
  402ad9:	cmp    ebx,0xa
  402adc:	je     402ab0 <__sprintf_chk@plt+0x1710>
  402ade:	movsx  eax,WORD PTR [rax]
  402ae1:	sub    eax,0x17
  402ae4:	cmp    eax,0x2
  402ae7:	ja     402ab0 <__sprintf_chk@plt+0x1710>
  402ae9:	nop    DWORD PTR [rax+0x0]
  402af0:	mov    DWORD PTR [r12+0x14],0x20
  402af9:	mov    r12,QWORD PTR [r12+0x8]
  402afe:	test   r12,r12
  402b01:	jne    402aba <__sprintf_chk@plt+0x171a>
  402b03:	mov    r13,QWORD PTR [rsp+0x8]
  402b08:	jmp    402b29 <__sprintf_chk@plt+0x1789>
  402b0a:	nop    WORD PTR [rax+rax*1+0x0]
  402b10:	test   r12b,r12b
  402b13:	jne    402b1a <__sprintf_chk@plt+0x177a>
  402b15:	cmp    eax,0xa
  402b18:	je     402b70 <__sprintf_chk@plt+0x17d0>
  402b1a:	cmp    eax,0xa
  402b1d:	setne  r12b
  402b21:	mov    rbp,rbx
  402b24:	test   rbx,rbx
  402b27:	je     402b90 <__sprintf_chk@plt+0x17f0>
  402b29:	mov    eax,DWORD PTR [rbp+0x14]
  402b2c:	mov    rbx,QWORD PTR [rbp+0x8]
  402b30:	cmp    eax,0x20
  402b33:	jne    402b10 <__sprintf_chk@plt+0x1770>
  402b35:	test   r12b,r12b
  402b38:	je     402b50 <__sprintf_chk@plt+0x17b0>
  402b3a:	test   rbx,rbx
  402b3d:	je     402b50 <__sprintf_chk@plt+0x17b0>
  402b3f:	mov    edx,DWORD PTR [rbx+0x14]
  402b42:	cmp    edx,0x20
  402b45:	je     402b50 <__sprintf_chk@plt+0x17b0>
  402b47:	cmp    edx,0xa
  402b4a:	jne    402b1a <__sprintf_chk@plt+0x177a>
  402b4c:	nop    DWORD PTR [rax+0x0]
  402b50:	test   rbx,rbx
  402b53:	je     402b70 <__sprintf_chk@plt+0x17d0>
  402b55:	test   r12b,r12b
  402b58:	je     402b70 <__sprintf_chk@plt+0x17d0>
  402b5a:	cmp    DWORD PTR [rbx+0x14],0x20
  402b5e:	jne    402b70 <__sprintf_chk@plt+0x17d0>
  402b60:	movzx  eax,BYTE PTR [rbp+0x10]
  402b64:	or     BYTE PTR [rbx+0x10],al
  402b67:	nop    WORD PTR [rax+rax*1+0x0]
  402b70:	mov    rsi,rbp
  402b73:	mov    rdi,r13
  402b76:	xor    eax,eax
  402b78:	call   4038d0 <error@@Base+0x5c0>
  402b7d:	mov    rdi,rbp
  402b80:	call   4011f0 <free@plt>
  402b85:	mov    rbp,rbx
  402b88:	test   rbx,rbx
  402b8b:	jne    402b29 <__sprintf_chk@plt+0x1789>
  402b8d:	nop    DWORD PTR [rax]
  402b90:	mov    rax,QWORD PTR [rsp+0x20]
  402b95:	cmp    BYTE PTR [rax+0xa],0x0
  402b99:	je     402bc4 <__sprintf_chk@plt+0x1824>
  402b9b:	mov    rax,QWORD PTR [rsp+0x28]
  402ba0:	test   rax,rax
  402ba3:	je     402ca8 <__sprintf_chk@plt+0x1908>
  402ba9:	mov    rbx,QWORD PTR [rax+0x8]
  402bad:	jmp    402bbf <__sprintf_chk@plt+0x181f>
  402baf:	nop
  402bb0:	mov    edi,DWORD PTR [rbx+0x14]
  402bb3:	call   401280 <utf8proc_tolower@plt>
  402bb8:	mov    DWORD PTR [rbx+0x14],eax
  402bbb:	mov    rbx,QWORD PTR [rbx+0x8]
  402bbf:	test   rbx,rbx
  402bc2:	jne    402bb0 <__sprintf_chk@plt+0x1810>
  402bc4:	mov    rax,QWORD PTR [rsp+0xa8]
  402bcc:	xor    rax,QWORD PTR fs:0x28
  402bd5:	jne    402d0e <__sprintf_chk@plt+0x196e>
  402bdb:	add    rsp,0xb8
  402be2:	pop    rbx
  402be3:	pop    rbp
  402be4:	pop    r12
  402be6:	pop    r13
  402be8:	pop    r14
  402bea:	pop    r15
  402bec:	ret    
  402bed:	nop    DWORD PTR [rax]
  402bf0:	cmp    ebx,0xa0
  402bf6:	jne    402ade <__sprintf_chk@plt+0x173e>
  402bfc:	jmp    402af0 <__sprintf_chk@plt+0x1750>
  402c01:	nop    DWORD PTR [rax+0x0]
  402c08:	lea    r13,[rsp+0x40]
  402c0d:	mov    rdx,r12
  402c10:	mov    esi,0x63
  402c15:	mov    rdi,r13
  402c18:	call   4012a0 <fgets@plt>
  402c1d:	test   rax,rax
  402c20:	je     402c3c <__sprintf_chk@plt+0x189c>
  402c22:	mov    ecx,0x33
  402c27:	lea    rdi,[rip+0x1c8a]        # 4048b8 <error@@Base+0x15a8>
  402c2e:	mov    rsi,r13
  402c31:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402c33:	seta   al
  402c36:	sbb    al,0x0
  402c38:	test   al,al
  402c3a:	je     402c58 <__sprintf_chk@plt+0x18b8>
  402c3c:	mov    rdi,r12
  402c3f:	call   401270 <rewind@plt>
  402c44:	xor    eax,eax
  402c46:	mov    rsi,QWORD PTR [rsp+0x20]
  402c4b:	mov    BYTE PTR [rsi+0xb],al
  402c4e:	jmp    402960 <__sprintf_chk@plt+0x15c0>
  402c53:	nop    DWORD PTR [rax+rax*1+0x0]
  402c58:	xor    ebx,ebx
  402c5a:	lea    rbp,[rip+0x1c8f]        # 4048f0 <error@@Base+0x15e0>
  402c61:	nop    DWORD PTR [rax+0x0]
  402c68:	mov    rdx,r12
  402c6b:	mov    esi,0x63
  402c70:	mov    rdi,r13
  402c73:	call   4012a0 <fgets@plt>
  402c78:	test   rax,rax
  402c7b:	je     402c9b <__sprintf_chk@plt+0x18fb>
  402c7d:	mov    ecx,0x38
  402c82:	mov    rsi,r13
  402c85:	mov    rdi,rbp
  402c88:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402c8a:	seta   al
  402c8d:	sbb    al,0x0
  402c8f:	test   al,al
  402c91:	jne    402c68 <__sprintf_chk@plt+0x18c8>
  402c93:	inc    ebx
  402c95:	cmp    bx,0x2
  402c99:	jne    402c68 <__sprintf_chk@plt+0x18c8>
  402c9b:	mov    eax,0x1
  402ca0:	jmp    402c46 <__sprintf_chk@plt+0x18a6>
  402ca2:	nop    WORD PTR [rax+rax*1+0x0]
  402ca8:	mov    rax,QWORD PTR [rsp+0x8]
  402cad:	mov    rbx,QWORD PTR [rax]
  402cb0:	jmp    402bbf <__sprintf_chk@plt+0x181f>
  402cb5:	nop    DWORD PTR [rax]
  402cb8:	mov    rax,QWORD PTR [rsp+0x8]
  402cbd:	mov    rbp,QWORD PTR [rax]
  402cc0:	jmp    402aa2 <__sprintf_chk@plt+0x1702>
  402cc5:	lea    rsi,[rip+0x1b74]        # 404840 <error@@Base+0x1530>
  402ccc:	lea    rdi,[rip+0x1b77]        # 40484a <error@@Base+0x153a>
  402cd3:	xor    eax,eax
  402cd5:	call   4033c0 <error@@Base+0xb0>
  402cda:	nop    WORD PTR [rax+rax*1+0x0]
  402ce0:	movsxd rdi,eax
  402ce3:	call   401370 <utf8proc_errmsg@plt>
  402ce8:	mov    rdi,rax
  402ceb:	xor    eax,eax
  402ced:	call   403310 <error@@Base>
  402cf2:	lea    rdi,[rip+0x1b61]        # 40485a <error@@Base+0x154a>
  402cf9:	xor    eax,eax
  402cfb:	call   403310 <error@@Base>
  402d00:	lea    rdi,[rip+0x1b6b]        # 404872 <error@@Base+0x1562>
  402d07:	xor    eax,eax
  402d09:	call   403310 <error@@Base>
  402d0e:	call   401260 <__stack_chk_fail@plt>
  402d13:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402d1e:	xchg   ax,ax
  402d20:	endbr64 
  402d24:	sub    rsp,0x8
  402d28:	call   401220 <utf8proc_encode_char@plt>
  402d2d:	test   rax,rax
  402d30:	jle    402d37 <__sprintf_chk@plt+0x1997>
  402d32:	add    rsp,0x8
  402d36:	ret    
  402d37:	lea    rdi,[rip+0x1b4c]        # 40488a <error@@Base+0x157a>
  402d3e:	xor    eax,eax
  402d40:	call   403310 <error@@Base>
  402d45:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402d50:	endbr64 
  402d54:	push   r13
  402d56:	xor    r13d,r13d
  402d59:	push   r12
  402d5b:	mov    r12,rdx
  402d5e:	push   rbp
  402d5f:	mov    ebp,esi
  402d61:	push   rbx
  402d62:	mov    rbx,rdx
  402d65:	sub    rsp,0x18
  402d69:	test   dil,dil
  402d6c:	jne    402e68 <__sprintf_chk@plt+0x1ac8>
  402d72:	cmp    ebp,0xa
  402d75:	jne    402db0 <__sprintf_chk@plt+0x1a10>
  402d77:	test   cl,cl
  402d79:	lea    rax,[rip+0x135d]        # 4040dd <error@@Base+0xdcd>
  402d80:	lea    rcx,[rip+0x1b1a]        # 4048a1 <error@@Base+0x1591>
  402d87:	cmove  rcx,rax
  402d8b:	add    rsp,0x18
  402d8f:	mov    rdi,rbx
  402d92:	pop    rbx
  402d93:	pop    rbp
  402d94:	pop    r12
  402d96:	mov    rdx,0xffffffffffffffff
  402d9d:	mov    esi,0x1
  402da2:	xor    eax,eax
  402da4:	pop    r13
  402da6:	jmp    4013a0 <__sprintf_chk@plt>
  402dab:	nop    DWORD PTR [rax+rax*1+0x0]
  402db0:	mov    edi,ebp
  402db2:	call   401210 <utf8proc_get_property@plt>
  402db7:	cmp    ebp,0x20
  402dba:	je     402dd6 <__sprintf_chk@plt+0x1a36>
  402dbc:	movzx  eax,WORD PTR [rax]
  402dbf:	cmp    ax,0x1d
  402dc3:	ja     402e28 <__sprintf_chk@plt+0x1a88>
  402dc5:	mov    edx,0x1
  402dca:	shlx   rax,rdx,rax
  402dcf:	test   eax,0x207ffffe
  402dd4:	je     402e28 <__sprintf_chk@plt+0x1a88>
  402dd6:	mov    edi,ebp
  402dd8:	call   4012f0 <utf8proc_category@plt>
  402ddd:	sub    eax,0x6
  402de0:	cmp    eax,0x2
  402de3:	ja     402e00 <__sprintf_chk@plt+0x1a60>
  402de5:	mov    rsi,rbx
  402de8:	mov    edi,0x25cc
  402ded:	xor    eax,eax
  402def:	call   402d20 <__sprintf_chk@plt+0x1980>
  402df4:	cbw    
  402df6:	add    r13d,eax
  402df9:	movsx  rbx,r13w
  402dfd:	add    rbx,r12
  402e00:	mov    rsi,rbx
  402e03:	mov    edi,ebp
  402e05:	xor    eax,eax
  402e07:	call   402d20 <__sprintf_chk@plt+0x1980>
  402e0c:	cbw    
  402e0e:	add    r13d,eax
  402e11:	movsx  r13,r13w
  402e15:	mov    BYTE PTR [r12+r13*1],0x0
  402e1a:	add    rsp,0x18
  402e1e:	pop    rbx
  402e1f:	pop    rbp
  402e20:	pop    r12
  402e22:	pop    r13
  402e24:	ret    
  402e25:	nop    DWORD PTR [rax]
  402e28:	mov    r8d,ebp
  402e2b:	lea    rcx,[rip+0x1a74]        # 4048a6 <error@@Base+0x1596>
  402e32:	cmp    ebp,0xff
  402e38:	jbe    402e41 <__sprintf_chk@plt+0x1aa1>
  402e3a:	lea    rcx,[rip+0x1a6c]        # 4048ad <error@@Base+0x159d>
  402e41:	add    rsp,0x18
  402e45:	mov    rdi,rbx
  402e48:	pop    rbx
  402e49:	pop    rbp
  402e4a:	pop    r12
  402e4c:	mov    rdx,0xffffffffffffffff
  402e53:	mov    esi,0x1
  402e58:	xor    eax,eax
  402e5a:	pop    r13
  402e5c:	jmp    4013a0 <__sprintf_chk@plt>
  402e61:	nop    DWORD PTR [rax+0x0]
  402e68:	mov    rsi,rdx
  402e6b:	mov    edi,0x5e
  402e70:	xor    eax,eax
  402e72:	mov    DWORD PTR [rsp+0xc],ecx
  402e76:	call   402d20 <__sprintf_chk@plt+0x1980>
  402e7b:	movsx  r13w,al
  402e80:	movsx  rax,al
  402e84:	lea    rbx,[r12+rax*1]
  402e88:	mov    ecx,DWORD PTR [rsp+0xc]
  402e8c:	jmp    402d72 <__sprintf_chk@plt+0x19d2>
  402e91:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402e9c:	nop    DWORD PTR [rax+0x0]
  402ea0:	endbr64 
  402ea4:	push   r12
  402ea6:	push   rbp
  402ea7:	mov    rbp,rdi
  402eaa:	mov    rdi,rsi
  402ead:	push   rbx
  402eae:	lea    rsi,[rip+0x1593]        # 404448 <error@@Base+0x1138>
  402eb5:	mov    rbx,rdx
  402eb8:	sub    rsp,0x20
  402ebc:	mov    rax,QWORD PTR fs:0x28
  402ec5:	mov    QWORD PTR [rsp+0x18],rax
  402eca:	xor    eax,eax
  402ecc:	call   403410 <error@@Base+0x100>
  402ed1:	mov    r12,rax
  402ed4:	test   rbx,rbx
  402ed7:	je     402f2b <__sprintf_chk@plt+0x1b8b>
  402ed9:	mov    rcx,rax
  402edc:	mov    edx,0x37
  402ee1:	mov    esi,0x1
  402ee6:	lea    rdi,[rip+0x19cb]        # 4048b8 <error@@Base+0x15a8>
  402eed:	call   401350 <fwrite@plt>
  402ef2:	mov    rcx,r12
  402ef5:	mov    edx,0x37
  402efa:	mov    esi,0x1
  402eff:	lea    rdi,[rip+0x19ea]        # 4048f0 <error@@Base+0x15e0>
  402f06:	call   401350 <fwrite@plt>
  402f0b:	mov    rdi,r12
  402f0e:	xor    eax,eax
  402f10:	call   rbx
  402f12:	mov    rcx,r12
  402f15:	mov    edx,0x37
  402f1a:	mov    esi,0x1
  402f1f:	lea    rdi,[rip+0x19ca]        # 4048f0 <error@@Base+0x15e0>
  402f26:	call   401350 <fwrite@plt>
  402f2b:	mov    rbx,QWORD PTR [rbp+0x0]
  402f2f:	test   rbx,rbx
  402f32:	je     402f67 <__sprintf_chk@plt+0x1bc7>
  402f34:	lea    rbp,[rsp+0xf]
  402f39:	nop    DWORD PTR [rax+0x0]
  402f40:	mov    esi,DWORD PTR [rbx+0x14]
  402f43:	movsx  edi,BYTE PTR [rbx+0x10]
  402f47:	xor    ecx,ecx
  402f49:	mov    rdx,rbp
  402f4c:	xor    eax,eax
  402f4e:	call   402d50 <__sprintf_chk@plt+0x19b0>
  402f53:	mov    rsi,r12
  402f56:	mov    rdi,rbp
  402f59:	call   401290 <fputs@plt>
  402f5e:	mov    rbx,QWORD PTR [rbx+0x8]
  402f62:	test   rbx,rbx
  402f65:	jne    402f40 <__sprintf_chk@plt+0x1ba0>
  402f67:	xor    eax,eax
  402f69:	mov    rdi,r12
  402f6c:	call   403180 <__sprintf_chk@plt+0x1de0>
  402f71:	mov    rax,QWORD PTR [rsp+0x18]
  402f76:	xor    rax,QWORD PTR fs:0x28
  402f7f:	jne    402f8a <__sprintf_chk@plt+0x1bea>
  402f81:	add    rsp,0x20
  402f85:	pop    rbx
  402f86:	pop    rbp
  402f87:	pop    r12
  402f89:	ret    
  402f8a:	call   401260 <__stack_chk_fail@plt>
  402f8f:	nop
  402f90:	endbr64 
  402f94:	push   r14
  402f96:	push   r13
  402f98:	push   r12
  402f9a:	push   rbp
  402f9b:	push   rbx
  402f9c:	sub    rsp,0x10
  402fa0:	mov    rax,QWORD PTR fs:0x28
  402fa9:	mov    QWORD PTR [rsp+0x8],rax
  402fae:	xor    eax,eax
  402fb0:	cmp    BYTE PTR [rsi],0x0
  402fb3:	mov    DWORD PTR [rsp+0x4],0x0
  402fbb:	je     403010 <__sprintf_chk@plt+0x1c70>
  402fbd:	mov    r14,rdi
  402fc0:	mov    rbp,rsi
  402fc3:	lea    r13,[rsp+0x4]
  402fc8:	mov    r12,0xffffffffffffffff
  402fcf:	jmp    402ff4 <__sprintf_chk@plt+0x1c54>
  402fd1:	nop    DWORD PTR [rax+0x0]
  402fd8:	mov    edx,DWORD PTR [rsp+0x4]
  402fdc:	movsxd rbx,ebx
  402fdf:	xor    esi,esi
  402fe1:	xor    eax,eax
  402fe3:	mov    rdi,r14
  402fe6:	add    rbp,rbx
  402fe9:	call   4028b0 <__sprintf_chk@plt+0x1510>
  402fee:	cmp    BYTE PTR [rbp+0x0],0x0
  402ff2:	je     403010 <__sprintf_chk@plt+0x1c70>
  402ff4:	mov    rdx,r13
  402ff7:	mov    rsi,r12
  402ffa:	mov    rdi,rbp
  402ffd:	call   4012b0 <utf8proc_iterate@plt>
  403002:	mov    rbx,rax
  403005:	test   eax,eax
  403007:	jg     402fd8 <__sprintf_chk@plt+0x1c38>
  403009:	xor    eax,eax
  40300b:	jmp    403015 <__sprintf_chk@plt+0x1c75>
  40300d:	nop    DWORD PTR [rax]
  403010:	mov    eax,0x1
  403015:	mov    rcx,QWORD PTR [rsp+0x8]
  40301a:	xor    rcx,QWORD PTR fs:0x28
  403023:	jne    403032 <__sprintf_chk@plt+0x1c92>
  403025:	add    rsp,0x10
  403029:	pop    rbx
  40302a:	pop    rbp
  40302b:	pop    r12
  40302d:	pop    r13
  40302f:	pop    r14
  403031:	ret    
  403032:	call   401260 <__stack_chk_fail@plt>
  403037:	nop    WORD PTR [rax+rax*1+0x0]
  403040:	push   rbp
  403041:	push   rbx
  403042:	mov    ebx,edi
  403044:	movsx  ebx,bx
  403047:	sub    rsp,0x78
  40304b:	mov    rax,QWORD PTR fs:0x28
  403054:	mov    QWORD PTR [rsp+0x68],rax
  403059:	xor    eax,eax
  40305b:	mov    rbp,rsp
  40305e:	call   401230 <getpid@plt>
  403063:	mov    r9d,eax
  403066:	sub    rsp,0x8
  40306a:	mov    rax,0x161c980
  403071:	push   rbx
  403072:	mov    r8,QWORD PTR [rax]
  403075:	lea    rcx,[rip+0x18ac]        # 404928 <error@@Base+0x1618>
  40307c:	mov    edx,0x64
  403081:	mov    esi,0x1
  403086:	mov    rdi,rbp
  403089:	xor    eax,eax
  40308b:	call   4013a0 <__sprintf_chk@plt>
  403090:	mov    rdi,rbp
  403093:	call   401380 <strdup@plt>
  403098:	pop    rdx
  403099:	pop    rcx
  40309a:	mov    rdx,QWORD PTR [rsp+0x68]
  40309f:	xor    rdx,QWORD PTR fs:0x28
  4030a8:	jne    4030b1 <__sprintf_chk@plt+0x1d11>
  4030aa:	add    rsp,0x78
  4030ae:	pop    rbx
  4030af:	pop    rbp
  4030b0:	ret    
  4030b1:	call   401260 <__stack_chk_fail@plt>
  4030b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4030c0:	push   r12
  4030c2:	mov    rax,0x161c988
  4030c9:	mov    r12d,edi
  4030cc:	push   rbp
  4030cd:	push   rbx
  4030ce:	mov    rdx,QWORD PTR [rax]
  4030d1:	test   rdx,rdx
  4030d4:	je     4030da <__sprintf_chk@plt+0x1d3a>
  4030d6:	xor    eax,eax
  4030d8:	call   rdx
  4030da:	cmp    WORD PTR [rip+0x1148f8],0x0        # 5179da <error@@Base+0x1146ca>
  4030e2:	jle    40311a <__sprintf_chk@plt+0x1d7a>
  4030e4:	mov    ebx,0x1
  4030e9:	nop    DWORD PTR [rax+0x0]
  4030f0:	movsx  edi,bx
  4030f3:	xor    eax,eax
  4030f5:	call   403040 <__sprintf_chk@plt+0x1ca0>
  4030fa:	mov    rdi,rax
  4030fd:	mov    rbp,rax
  403100:	xor    eax,eax
  403102:	call   401200 <unlink@plt>
  403107:	inc    ebx
  403109:	mov    rdi,rbp
  40310c:	call   4011f0 <free@plt>
  403111:	cmp    bx,WORD PTR [rip+0x1148c2]        # 5179da <error@@Base+0x1146ca>
  403118:	jle    4030f0 <__sprintf_chk@plt+0x1d50>
  40311a:	mov    edi,r12d
  40311d:	call   401340 <exit@plt>
  403122:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40312d:	nop    DWORD PTR [rax]
  403130:	endbr64 
  403134:	movzx  edx,BYTE PTR [rdi]
  403137:	movzx  ecx,BYTE PTR [rsi]
  40313a:	test   dl,dl
  40313c:	je     403163 <__sprintf_chk@plt+0x1dc3>
  40313e:	cmp    cl,dl
  403140:	jne    403169 <__sprintf_chk@plt+0x1dc9>
  403142:	xor    eax,eax
  403144:	jmp    403154 <__sprintf_chk@plt+0x1db4>
  403146:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403150:	cmp    dl,cl
  403152:	jne    403169 <__sprintf_chk@plt+0x1dc9>
  403154:	inc    rax
  403157:	movzx  edx,BYTE PTR [rdi+rax*1]
  40315b:	movzx  ecx,BYTE PTR [rsi+rax*1]
  40315f:	test   dl,dl
  403161:	jne    403150 <__sprintf_chk@plt+0x1db0>
  403163:	test   cl,cl
  403165:	je     403178 <__sprintf_chk@plt+0x1dd8>
  403167:	xor    edx,edx
  403169:	cmp    dl,cl
  40316b:	sbb    eax,eax
  40316d:	or     eax,0x1
  403170:	ret    
  403171:	nop    DWORD PTR [rax+0x0]
  403178:	xor    eax,eax
  40317a:	ret    
  40317b:	nop    DWORD PTR [rax+rax*1+0x0]
  403180:	endbr64 
  403184:	mov    rax,QWORD PTR [rip+0x3e4d]        # 406fd8 <error@@Base+0x3cc8>
  40318b:	cmp    QWORD PTR [rax],rdi
  40318e:	je     4031a8 <__sprintf_chk@plt+0x1e08>
  403190:	mov    rax,QWORD PTR [rip+0x3e39]        # 406fd0 <error@@Base+0x3cc0>
  403197:	cmp    QWORD PTR [rax],rdi
  40319a:	je     4031a8 <__sprintf_chk@plt+0x1e08>
  40319c:	jmp    401240 <fclose@plt>
  4031a1:	nop    DWORD PTR [rax+0x0]
  4031a8:	ret    
  4031a9:	nop    DWORD PTR [rax+0x0]
  4031b0:	endbr64 
  4031b4:	sub    rsp,0xa8
  4031bb:	mov    rsi,rdi
  4031be:	mov    rdx,rsp
  4031c1:	mov    edi,0x1
  4031c6:	mov    rax,QWORD PTR fs:0x28
  4031cf:	mov    QWORD PTR [rsp+0x98],rax
  4031d7:	xor    eax,eax
  4031d9:	call   401300 <__xstat@plt>
  4031de:	test   eax,eax
  4031e0:	sete   al
  4031e3:	mov    rcx,QWORD PTR [rsp+0x98]
  4031eb:	xor    rcx,QWORD PTR fs:0x28
  4031f4:	jne    4031fe <__sprintf_chk@plt+0x1e5e>
  4031f6:	add    rsp,0xa8
  4031fd:	ret    
  4031fe:	call   401260 <__stack_chk_fail@plt>
  403203:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40320e:	xchg   ax,ax
  403210:	endbr64 
  403214:	movzx  eax,WORD PTR [rip+0x1147bf]        # 5179da <error@@Base+0x1146ca>
  40321b:	push   rbx
  40321c:	lea    edi,[rax+0x1]
  40321f:	mov    WORD PTR [rip+0x1147b4],di        # 5179da <error@@Base+0x1146ca>
  403226:	xor    eax,eax
  403228:	movsx  edi,di
  40322b:	call   403040 <__sprintf_chk@plt+0x1ca0>
  403230:	mov    rbx,rax
  403233:	mov    rdi,rax
  403236:	xor    eax,eax
  403238:	call   401200 <unlink@plt>
  40323d:	mov    rax,rbx
  403240:	pop    rbx
  403241:	ret    
  403242:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40324d:	nop    DWORD PTR [rax]
  403250:	endbr64 
  403254:	push   rbx
  403255:	mov    rbx,rdi
  403258:	call   401250 <strlen@plt>
  40325d:	lea    ecx,[rax-0x1]
  403260:	movsx  rdx,cx
  403264:	test   cx,cx
  403267:	js     403293 <__sprintf_chk@plt+0x1ef3>
  403269:	cmp    BYTE PTR [rbx+rdx*1],0x2f
  40326d:	je     403293 <__sprintf_chk@plt+0x1ef3>
  40326f:	sub    eax,0x2
  403272:	movsx  rdx,ax
  403276:	jmp    40328e <__sprintf_chk@plt+0x1eee>
  403278:	nop    DWORD PTR [rax+rax*1+0x0]
  403280:	lea    rax,[rdx-0x1]
  403284:	cmp    BYTE PTR [rbx+rax*1+0x1],0x2f
  403289:	je     403293 <__sprintf_chk@plt+0x1ef3>
  40328b:	mov    rdx,rax
  40328e:	test   dx,dx
  403291:	jns    403280 <__sprintf_chk@plt+0x1ee0>
  403293:	lea    rax,[rbx+rdx*1+0x1]
  403298:	pop    rbx
  403299:	ret    
  40329a:	nop    WORD PTR [rax+rax*1+0x0]
  4032a0:	endbr64 
  4032a4:	push   rax
  4032a5:	pop    rax
  4032a6:	xor    edi,edi
  4032a8:	xor    eax,eax
  4032aa:	sub    rsp,0x8
  4032ae:	call   4030c0 <__sprintf_chk@plt+0x1d20>
  4032b3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4032be:	xchg   ax,ax
  4032c0:	push   rax
  4032c1:	pop    rax
  4032c2:	sub    rsp,0x8
  4032c6:	mov    rax,0x161c978
  4032cd:	mov    rdx,QWORD PTR [rax]
  4032d0:	test   rdx,rdx
  4032d3:	je     4032e0 <__sprintf_chk@plt+0x1f40>
  4032d5:	xor    eax,eax
  4032d7:	call   rdx
  4032d9:	xor    eax,eax
  4032db:	call   4032a0 <__sprintf_chk@plt+0x1f00>
  4032e0:	mov    rax,0x161c980
  4032e7:	mov    r8,rdi
  4032ea:	mov    rcx,QWORD PTR [rax]
  4032ed:	mov    rax,QWORD PTR [rip+0x3d04]        # 406ff8 <error@@Base+0x3ce8>
  4032f4:	lea    rdx,[rip+0x163b]        # 404936 <error@@Base+0x1626>
  4032fb:	mov    rdi,QWORD PTR [rax]
  4032fe:	mov    esi,0x1
  403303:	xor    eax,eax
  403305:	call   401360 <__fprintf_chk@plt>
  40330a:	jmp    4032d9 <__sprintf_chk@plt+0x1f39>
  40330c:	nop    DWORD PTR [rax+0x0]

0000000000403310 <error@@Base>:
  403310:	endbr64 
  403314:	push   rax
  403315:	pop    rax
  403316:	lea    rdx,[rip+0x1628]        # 404945 <error@@Base+0x1635>
  40331d:	mov    esi,0x1
  403322:	sub    rsp,0x8
  403326:	mov    rax,0x161c980
  40332d:	mov    r8,rdi
  403330:	mov    rcx,QWORD PTR [rax]
  403333:	mov    rax,QWORD PTR [rip+0x3cbe]        # 406ff8 <error@@Base+0x3ce8>
  40333a:	mov    rdi,QWORD PTR [rax]
  40333d:	xor    eax,eax
  40333f:	call   401360 <__fprintf_chk@plt>
  403344:	mov    rax,0x407114
  40334b:	mov    edi,DWORD PTR [rax]
  40334d:	xor    eax,eax
  40334f:	call   4030c0 <__sprintf_chk@plt+0x1d20>
  403354:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40335f:	nop
  403360:	endbr64 
  403364:	sub    rsp,0x8
  403368:	call   4012c0 <calloc@plt>
  40336d:	test   rax,rax
  403370:	je     403377 <error@@Base+0x67>
  403372:	add    rsp,0x8
  403376:	ret    
  403377:	lea    rdi,[rip+0x15cf]        # 40494d <error@@Base+0x163d>
  40337e:	call   403310 <error@@Base>
  403383:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40338e:	xchg   ax,ax
  403390:	endbr64 
  403394:	cmp    BYTE PTR [rip+0x11463d],0x0        # 5179d8 <error@@Base+0x1146c8>
  40339b:	je     40339e <error@@Base+0x8e>
  40339d:	ret    
  40339e:	push   rax
  40339f:	lea    rdi,[rip+0x15c1]        # 404967 <error@@Base+0x1657>
  4033a6:	xor    eax,eax
  4033a8:	mov    BYTE PTR [rip+0x114629],0x1        # 5179d8 <error@@Base+0x1146c8>
  4033af:	call   403310 <error@@Base>
  4033b4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4033bf:	nop
  4033c0:	endbr64 
  4033c4:	push   rax
  4033c5:	pop    rax
  4033c6:	lea    rdx,[rip+0x15a9]        # 404976 <error@@Base+0x1666>
  4033cd:	sub    rsp,0x8
  4033d1:	mov    rax,0x161c980
  4033d8:	mov    r8,rdi
  4033db:	mov    rcx,QWORD PTR [rax]
  4033de:	mov    rax,QWORD PTR [rip+0x3c13]        # 406ff8 <error@@Base+0x3ce8>
  4033e5:	mov    r9,rsi
  4033e8:	mov    rdi,QWORD PTR [rax]
  4033eb:	mov    esi,0x1
  4033f0:	xor    eax,eax
  4033f2:	call   401360 <__fprintf_chk@plt>
  4033f7:	mov    rax,0x407114
  4033fe:	mov    edi,DWORD PTR [rax]
  403400:	xor    eax,eax
  403402:	call   4030c0 <__sprintf_chk@plt+0x1d20>
  403407:	nop    WORD PTR [rax+rax*1+0x0]
  403410:	endbr64 
  403414:	test   rdi,rdi
  403417:	je     403460 <error@@Base+0x150>
  403419:	push   rbp
  40341a:	mov    rbp,rsi
  40341d:	push   rbx
  40341e:	mov    rbx,rdi
  403421:	sub    rsp,0x8
  403425:	call   401330 <fopen@plt>
  40342a:	test   rax,rax
  40342d:	je     403440 <error@@Base+0x130>
  40342f:	add    rsp,0x8
  403433:	pop    rbx
  403434:	pop    rbp
  403435:	ret    
  403436:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403440:	cmp    BYTE PTR [rbp+0x0],0x77
  403444:	mov    rsi,rbx
  403447:	je     403470 <error@@Base+0x160>
  403449:	lea    rdi,[rip+0x1549]        # 404999 <error@@Base+0x1689>
  403450:	xor    eax,eax
  403452:	call   4033c0 <error@@Base+0xb0>
  403457:	nop    WORD PTR [rax+rax*1+0x0]
  403460:	cmp    BYTE PTR [rsi],0x72
  403463:	je     403480 <error@@Base+0x170>
  403465:	mov    rax,QWORD PTR [rip+0x3b64]        # 406fd0 <error@@Base+0x3cc0>
  40346c:	mov    rax,QWORD PTR [rax]
  40346f:	ret    
  403470:	lea    rdi,[rip+0x150c]        # 404983 <error@@Base+0x1673>
  403477:	call   4033c0 <error@@Base+0xb0>
  40347c:	nop    DWORD PTR [rax+0x0]
  403480:	mov    rax,QWORD PTR [rip+0x3b51]        # 406fd8 <error@@Base+0x3cc8>
  403487:	mov    rax,QWORD PTR [rax]
  40348a:	ret    
  40348b:	nop    DWORD PTR [rax+rax*1+0x0]
  403490:	endbr64 
  403494:	push   r15
  403496:	xor    eax,eax
  403498:	push   r14
  40349a:	mov    r14,rsi
  40349d:	push   r13
  40349f:	push   r12
  4034a1:	push   rbp
  4034a2:	push   rbx
  4034a3:	sub    rsp,0x38
  4034a7:	mov    QWORD PTR [rsp+0x8],rdi
  4034ac:	mov    rdi,QWORD PTR [rsi]
  4034af:	mov    QWORD PTR [rsp+0x28],rdx
  4034b4:	mov    QWORD PTR [rsp+0x10],rcx
  4034b9:	call   403250 <__sprintf_chk@plt+0x1eb0>
  4034be:	mov    rcx,0x161c980
  4034c5:	lea    rsi,[rip+0xfffffffffffffec4]        # 403390 <error@@Base+0x80>
  4034cc:	mov    edi,0x2
  4034d1:	mov    QWORD PTR [rcx],rax
  4034d4:	call   4012e0 <__sysv_signal@plt>
  4034d9:	lea    rsi,[rip+0xfffffffffffffeb0]        # 403390 <error@@Base+0x80>
  4034e0:	mov    edi,0xf
  4034e5:	call   4012e0 <__sysv_signal@plt>
  4034ea:	mov    r9,QWORD PTR [rsp+0x8]
  4034ef:	mov    r15d,DWORD PTR [r9]
  4034f2:	cmp    r15d,0x1
  4034f6:	je     4036c0 <error@@Base+0x3b0>
  4034fc:	mov    rdx,QWORD PTR [rsp+0x10]
  403501:	jle    4036cc <error@@Base+0x3bc>
  403507:	mov    r8d,r15d
  40350a:	xor    r12d,r12d
  40350d:	mov    r15,rdx
  403510:	mov    r13d,0x1
  403516:	mov    ebx,0x1
  40351b:	mov    rdx,r14
  40351e:	jmp    40353a <error@@Base+0x22a>
  403520:	movsx  rax,r12w
  403524:	mov    QWORD PTR [rdx+rax*8],rbp
  403528:	inc    ebx
  40352a:	inc    r12d
  40352d:	movsx  r13d,bx
  403531:	cmp    r13d,r8d
  403534:	jge    403660 <error@@Base+0x350>
  40353a:	movsx  rax,bx
  40353e:	mov    rbp,QWORD PTR [rdx+rax*8]
  403542:	lea    r10,[rax*8+0x0]
  40354a:	cmp    BYTE PTR [rbp+0x0],0x2d
  40354e:	jne    403520 <error@@Base+0x210>
  403550:	movzx  r14d,BYTE PTR [rbp+0x1]
  403555:	mov    QWORD PTR [rsp+0x20],r10
  40355a:	test   r14b,r14b
  40355d:	je     403520 <error@@Base+0x210>
  40355f:	mov    rdi,rbp
  403562:	mov    DWORD PTR [rsp+0x1c],r8d
  403567:	mov    QWORD PTR [rsp+0x10],rdx
  40356c:	mov    QWORD PTR [rsp+0x8],r9
  403571:	call   401250 <strlen@plt>
  403576:	cmp    rax,0x6
  40357a:	mov    ecx,0x6
  40357f:	cmovle rcx,rax
  403583:	lea    rsi,[rip+0x1423]        # 4049ad <error@@Base+0x169d>
  40358a:	cmp    rcx,rcx
  40358d:	mov    rdi,rbp
  403590:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  403592:	seta   al
  403595:	sbb    al,0x0
  403597:	test   al,al
  403599:	je     4036f0 <error@@Base+0x3e0>
  40359f:	mov    r8d,DWORD PTR [rsp+0x1c]
  4035a4:	inc    r13d
  4035a7:	xor    eax,eax
  4035a9:	cmp    r13d,r8d
  4035ac:	mov    r9,QWORD PTR [rsp+0x8]
  4035b1:	mov    rdx,QWORD PTR [rsp+0x10]
  4035b6:	jge    4035c2 <error@@Base+0x2b2>
  4035b8:	mov    r10,QWORD PTR [rsp+0x20]
  4035bd:	mov    rax,QWORD PTR [rdx+r10*1+0x8]
  4035c2:	test   r15,r15
  4035c5:	je     4035fb <error@@Base+0x2eb>
  4035c7:	movzx  ecx,BYTE PTR [r15]
  4035cb:	test   cl,cl
  4035cd:	je     4035fb <error@@Base+0x2eb>
  4035cf:	cmp    r14b,cl
  4035d2:	je     403610 <error@@Base+0x300>
  4035d4:	xor    ecx,ecx
  4035d6:	jmp    4035e5 <error@@Base+0x2d5>
  4035d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4035e0:	cmp    r14b,dil
  4035e3:	je     403618 <error@@Base+0x308>
  4035e5:	inc    ecx
  4035e7:	movsx  rsi,cx
  4035eb:	lea    rsi,[rsi+rsi*2]
  4035ef:	lea    rsi,[r15+rsi*8]
  4035f3:	movzx  edi,BYTE PTR [rsi]
  4035f6:	test   dil,dil
  4035f9:	jne    4035e0 <error@@Base+0x2d0>
  4035fb:	mov    rsi,rbp
  4035fe:	lea    rdi,[rip+0x13ae]        # 4049b3 <error@@Base+0x16a3>
  403605:	xor    eax,eax
  403607:	call   4033c0 <error@@Base+0xb0>
  40360c:	nop    DWORD PTR [rax+0x0]
  403610:	mov    rsi,r15
  403613:	nop    DWORD PTR [rax+rax*1+0x0]
  403618:	mov    rcx,QWORD PTR [rsi+0x8]
  40361c:	test   rcx,rcx
  40361f:	je     403690 <error@@Base+0x380>
  403621:	cmp    BYTE PTR [rbp+0x2],0x0
  403625:	jne    403680 <error@@Base+0x370>
  403627:	test   rax,rax
  40362a:	je     4036d8 <error@@Base+0x3c8>
  403630:	cmp    QWORD PTR [rcx],0x0
  403634:	jne    403700 <error@@Base+0x3f0>
  40363a:	mov    QWORD PTR [rcx],rax
  40363d:	mov    eax,ebx
  40363f:	inc    ebx
  403641:	cmp    BYTE PTR [rbp+0x2],0x0
  403645:	jne    40352d <error@@Base+0x21d>
  40364b:	lea    ebx,[rax+0x2]
  40364e:	movsx  r13d,bx
  403652:	cmp    r13d,r8d
  403655:	jl     40353a <error@@Base+0x22a>
  40365b:	nop    DWORD PTR [rax+rax*1+0x0]
  403660:	movsx  r12d,r12w
  403664:	mov    DWORD PTR [r9],r12d
  403667:	add    rsp,0x38
  40366b:	pop    rbx
  40366c:	pop    rbp
  40366d:	pop    r12
  40366f:	pop    r13
  403671:	pop    r14
  403673:	pop    r15
  403675:	ret    
  403676:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403680:	cmp    QWORD PTR [rcx],0x0
  403684:	jne    403700 <error@@Base+0x3f0>
  403686:	lea    rax,[rbp+0x2]
  40368a:	jmp    40363a <error@@Base+0x32a>
  40368c:	nop    DWORD PTR [rax+0x0]
  403690:	mov    rax,QWORD PTR [rsi+0x10]
  403694:	test   rax,rax
  403697:	je     4035fb <error@@Base+0x2eb>
  40369d:	cmp    BYTE PTR [rbp+0x2],0x0
  4036a1:	jne    4035fb <error@@Base+0x2eb>
  4036a7:	cmp    BYTE PTR [rax],0x0
  4036aa:	jne    403700 <error@@Base+0x3f0>
  4036ac:	mov    BYTE PTR [rax],0x1
  4036af:	inc    ebx
  4036b1:	mov    r8d,DWORD PTR [r9]
  4036b4:	jmp    40352d <error@@Base+0x21d>
  4036b9:	nop    DWORD PTR [rax+0x0]
  4036c0:	mov    rax,0x407118
  4036c7:	cmp    BYTE PTR [rax],0x0
  4036ca:	jne    4036f0 <error@@Base+0x3e0>
  4036cc:	xor    r12d,r12d
  4036cf:	jmp    403664 <error@@Base+0x354>
  4036d1:	nop    DWORD PTR [rax+0x0]
  4036d8:	mov    rax,QWORD PTR [rsi+0x10]
  4036dc:	test   rax,rax
  4036df:	jne    4036a7 <error@@Base+0x397>
  4036e1:	jmp    4035fb <error@@Base+0x2eb>
  4036e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4036f0:	mov    rdi,QWORD PTR [rsp+0x28]
  4036f5:	xor    eax,eax
  4036f7:	call   4032c0 <__sprintf_chk@plt+0x1f20>
  4036fc:	nop    DWORD PTR [rax+0x0]
  403700:	mov    rsi,rbp
  403703:	lea    rdi,[rip+0x12b8]        # 4049c2 <error@@Base+0x16b2>
  40370a:	xor    eax,eax
  40370c:	call   4033c0 <error@@Base+0xb0>
  403711:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40371c:	nop    DWORD PTR [rax+0x0]
  403720:	endbr64 
  403724:	mov    rax,0x161c980
  40372b:	mov    r8,rdi
  40372e:	mov    rcx,QWORD PTR [rax]
  403731:	mov    rax,QWORD PTR [rip+0x38c0]        # 406ff8 <error@@Base+0x3ce8>
  403738:	mov    r9,rsi
  40373b:	mov    rdi,QWORD PTR [rax]
  40373e:	lea    rdx,[rip+0x1231]        # 404976 <error@@Base+0x1666>
  403745:	mov    esi,0x1
  40374a:	xor    eax,eax
  40374c:	jmp    401360 <__fprintf_chk@plt>
  403751:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40375b:	nop    DWORD PTR [rax+rax*1+0x0]
  403760:	endbr64 
  403764:	mov    QWORD PTR [rdi+0x8],0x0
  40376c:	mov    QWORD PTR [rdi],0x0
  403773:	mov    QWORD PTR [rdi+0x10],0x0
  40377b:	mov    QWORD PTR [rdi+0x18],0x0
  403783:	ret    
  403784:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40378f:	nop
  403790:	endbr64 
  403794:	push   rbx
  403795:	mov    rbx,rdi
  403798:	mov    rax,QWORD PTR [rdi]
  40379b:	mov    QWORD PTR [rsi],0x0
  4037a2:	mov    QWORD PTR [rsi+0x8],rax
  4037a6:	mov    QWORD PTR [rdi],rsi
  4037a9:	test   rax,rax
  4037ac:	je     4037d0 <error@@Base+0x4c0>
  4037ae:	mov    QWORD PTR [rax],rsi
  4037b1:	mov    rdi,QWORD PTR [rbx+0x10]
  4037b5:	test   rdi,rdi
  4037b8:	je     4037c7 <error@@Base+0x4b7>
  4037ba:	call   4011f0 <free@plt>
  4037bf:	mov    QWORD PTR [rbx+0x10],0x0
  4037c7:	inc    QWORD PTR [rbx+0x18]
  4037cb:	pop    rbx
  4037cc:	ret    
  4037cd:	nop    DWORD PTR [rax]
  4037d0:	mov    QWORD PTR [rdi+0x8],rsi
  4037d4:	jmp    4037b1 <error@@Base+0x4a1>
  4037d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4037e0:	endbr64 
  4037e4:	push   rbx
  4037e5:	mov    rbx,rdi
  4037e8:	mov    rax,QWORD PTR [rdi+0x8]
  4037ec:	mov    QWORD PTR [rsi+0x8],0x0
  4037f4:	mov    QWORD PTR [rsi],rax
  4037f7:	test   rax,rax
  4037fa:	je     403820 <error@@Base+0x510>
  4037fc:	mov    QWORD PTR [rax+0x8],rsi
  403800:	mov    rdi,QWORD PTR [rbx+0x10]
  403804:	mov    QWORD PTR [rbx+0x8],rsi
  403808:	test   rdi,rdi
  40380b:	je     40381a <error@@Base+0x50a>
  40380d:	call   4011f0 <free@plt>
  403812:	mov    QWORD PTR [rbx+0x10],0x0
  40381a:	inc    QWORD PTR [rbx+0x18]
  40381e:	pop    rbx
  40381f:	ret    
  403820:	mov    QWORD PTR [rdi],rsi
  403823:	jmp    403800 <error@@Base+0x4f0>
  403825:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  403830:	endbr64 
  403834:	mov    rax,QWORD PTR [rdx]
  403837:	push   rbx
  403838:	mov    QWORD PTR [rsi],rax
  40383b:	mov    rbx,rdi
  40383e:	mov    QWORD PTR [rsi+0x8],rdx
  403842:	test   rax,rax
  403845:	je     403870 <error@@Base+0x560>
  403847:	mov    QWORD PTR [rax+0x8],rsi
  40384b:	mov    rdi,QWORD PTR [rbx+0x10]
  40384f:	mov    QWORD PTR [rdx],rsi
  403852:	test   rdi,rdi
  403855:	je     403864 <error@@Base+0x554>
  403857:	call   4011f0 <free@plt>
  40385c:	mov    QWORD PTR [rbx+0x10],0x0
  403864:	inc    QWORD PTR [rbx+0x18]
  403868:	pop    rbx
  403869:	ret    
  40386a:	nop    WORD PTR [rax+rax*1+0x0]
  403870:	mov    QWORD PTR [rdi],rsi
  403873:	jmp    40384b <error@@Base+0x53b>
  403875:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  403880:	endbr64 
  403884:	mov    rax,QWORD PTR [rsi+0x8]
  403888:	push   rbx
  403889:	mov    QWORD PTR [rdx],rsi
  40388c:	mov    QWORD PTR [rdx+0x8],rax
  403890:	mov    rbx,rdi
  403893:	mov    QWORD PTR [rsi+0x8],rdx
  403897:	test   rax,rax
  40389a:	je     4038c0 <error@@Base+0x5b0>
  40389c:	mov    QWORD PTR [rax],rdx
  40389f:	mov    rdi,QWORD PTR [rbx+0x10]
  4038a3:	test   rdi,rdi
  4038a6:	je     4038b5 <error@@Base+0x5a5>
  4038a8:	call   4011f0 <free@plt>
  4038ad:	mov    QWORD PTR [rbx+0x10],0x0
  4038b5:	inc    QWORD PTR [rbx+0x18]
  4038b9:	pop    rbx
  4038ba:	ret    
  4038bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4038c0:	mov    QWORD PTR [rdi+0x8],rdx
  4038c4:	jmp    40389f <error@@Base+0x58f>
  4038c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4038d0:	endbr64 
  4038d4:	mov    rdx,QWORD PTR [rsi]
  4038d7:	push   rbx
  4038d8:	mov    rax,QWORD PTR [rsi+0x8]
  4038dc:	mov    rbx,rdi
  4038df:	test   rdx,rdx
  4038e2:	je     403920 <error@@Base+0x610>
  4038e4:	mov    QWORD PTR [rdx+0x8],rax
  4038e8:	mov    rax,QWORD PTR [rsi+0x8]
  4038ec:	test   rax,rax
  4038ef:	je     403928 <error@@Base+0x618>
  4038f1:	mov    QWORD PTR [rax],rdx
  4038f4:	mov    rdi,QWORD PTR [rbx+0x10]
  4038f8:	mov    QWORD PTR [rsi+0x8],0x0
  403900:	mov    QWORD PTR [rsi],0x0
  403907:	test   rdi,rdi
  40390a:	je     403919 <error@@Base+0x609>
  40390c:	call   4011f0 <free@plt>
  403911:	mov    QWORD PTR [rbx+0x10],0x0
  403919:	dec    QWORD PTR [rbx+0x18]
  40391d:	pop    rbx
  40391e:	ret    
  40391f:	nop
  403920:	mov    QWORD PTR [rdi],rax
  403923:	test   rax,rax
  403926:	jne    4038f1 <error@@Base+0x5e1>
  403928:	mov    QWORD PTR [rbx+0x8],rdx
  40392c:	jmp    4038f4 <error@@Base+0x5e4>
  40392e:	xchg   ax,ax
  403930:	endbr64 
  403934:	cmp    QWORD PTR [rdi+0x10],0x0
  403939:	je     403940 <error@@Base+0x630>
  40393b:	ret    
  40393c:	nop    DWORD PTR [rax+0x0]
  403940:	mov    rax,QWORD PTR [rdi+0x18]
  403944:	test   rax,rax
  403947:	je     40393b <error@@Base+0x62b>
  403949:	push   rbx
  40394a:	mov    esi,0x8
  40394f:	mov    rbx,rdi
  403952:	mov    rdi,rax
  403955:	xor    eax,eax
  403957:	call   403360 <error@@Base+0x50>
  40395c:	mov    rdx,QWORD PTR [rbx]
  40395f:	mov    QWORD PTR [rbx+0x10],rax
  403963:	test   rdx,rdx
  403966:	je     403980 <error@@Base+0x670>
  403968:	nop    DWORD PTR [rax+rax*1+0x0]
  403970:	mov    QWORD PTR [rax],rdx
  403973:	add    rax,0x8
  403977:	mov    rdx,QWORD PTR [rdx+0x8]
  40397b:	test   rdx,rdx
  40397e:	jne    403970 <error@@Base+0x660>
  403980:	pop    rbx
  403981:	ret    
  403982:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40398d:	nop    DWORD PTR [rax]
  403990:	endbr64 
  403994:	push   r12
  403996:	push   rbp
  403997:	push   rbx
  403998:	mov    rbx,QWORD PTR [rdi]
  40399b:	test   rbx,rbx
  40399e:	je     4039ce <error@@Base+0x6be>
  4039a0:	mov    rbp,rdi
  4039a3:	mov    r12,rsi
  4039a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4039b0:	mov    rsi,rbx
  4039b3:	mov    rdi,rbp
  4039b6:	xor    eax,eax
  4039b8:	call   4038d0 <error@@Base+0x5c0>
  4039bd:	mov    rdi,rbx
  4039c0:	xor    eax,eax
  4039c2:	call   r12
  4039c5:	mov    rbx,QWORD PTR [rbp+0x0]
  4039c9:	test   rbx,rbx
  4039cc:	jne    4039b0 <error@@Base+0x6a0>
  4039ce:	pop    rbx
  4039cf:	pop    rbp
  4039d0:	pop    r12
  4039d2:	ret    
  4039d3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4039dd:	nop    DWORD PTR [rax]
  4039e0:	endbr64 
  4039e4:	push   r15
  4039e6:	lea    r15,[rip+0x2e43]        # 406830 <error@@Base+0x3520>
  4039ed:	push   r14
  4039ef:	mov    r14,rdx
  4039f2:	push   r13
  4039f4:	mov    r13,rsi
  4039f7:	push   r12
  4039f9:	mov    r12d,edi
  4039fc:	push   rbp
  4039fd:	lea    rbp,[rip+0x2e34]        # 406838 <error@@Base+0x3528>
  403a04:	push   rbx
  403a05:	sub    rbp,r15
  403a08:	sub    rsp,0x8
  403a0c:	call   401000 <free@plt-0x1f0>
  403a11:	sar    rbp,0x3
  403a15:	je     403a36 <error@@Base+0x726>
  403a17:	xor    ebx,ebx
  403a19:	nop    DWORD PTR [rax+0x0]
  403a20:	mov    rdx,r14
  403a23:	mov    rsi,r13
  403a26:	mov    edi,r12d
  403a29:	call   QWORD PTR [r15+rbx*8]
  403a2d:	add    rbx,0x1
  403a31:	cmp    rbp,rbx
  403a34:	jne    403a20 <error@@Base+0x710>
  403a36:	add    rsp,0x8
  403a3a:	pop    rbx
  403a3b:	pop    rbp
  403a3c:	pop    r12
  403a3e:	pop    r13
  403a40:	pop    r14
  403a42:	pop    r15
  403a44:	ret    
  403a45:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  403a50:	endbr64 
  403a54:	ret    

Disassembly of section .fini:

0000000000403a58 <.fini>:
  403a58:	endbr64 
  403a5c:	sub    rsp,0x8
  403a60:	add    rsp,0x8
  403a64:	ret    
