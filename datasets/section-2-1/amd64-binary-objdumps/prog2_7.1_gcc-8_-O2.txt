
../repos/prog2/7.1:     file format elf64-x86-64


Disassembly of section .init:

0000000000402000 <.init>:
  402000:	endbr64 
  402004:	sub    rsp,0x8
  402008:	mov    rax,QWORD PTR [rip+0x3fe9]        # 405ff8 <__gmon_start__>
  40200f:	test   rax,rax
  402012:	je     402016 <free@plt-0x12a>
  402014:	call   rax
  402016:	add    rsp,0x8
  40201a:	ret    

Disassembly of section .plt:

0000000000402020 <.plt>:
  402020:	push   QWORD PTR [rip+0x3fe2]        # 406008 <_IO_stdin_used@@Base+0x2008>
  402026:	bnd jmp QWORD PTR [rip+0x3fe3]        # 406010 <_IO_stdin_used@@Base+0x2010>
  40202d:	nop    DWORD PTR [rax]
  402030:	endbr64 
  402034:	push   0x0
  402039:	bnd jmp 402020 <free@plt-0x120>
  40203f:	nop
  402040:	endbr64 
  402044:	push   0x1
  402049:	bnd jmp 402020 <free@plt-0x120>
  40204f:	nop
  402050:	endbr64 
  402054:	push   0x2
  402059:	bnd jmp 402020 <free@plt-0x120>
  40205f:	nop
  402060:	endbr64 
  402064:	push   0x3
  402069:	bnd jmp 402020 <free@plt-0x120>
  40206f:	nop
  402070:	endbr64 
  402074:	push   0x4
  402079:	bnd jmp 402020 <free@plt-0x120>
  40207f:	nop
  402080:	endbr64 
  402084:	push   0x5
  402089:	bnd jmp 402020 <free@plt-0x120>
  40208f:	nop
  402090:	endbr64 
  402094:	push   0x6
  402099:	bnd jmp 402020 <free@plt-0x120>
  40209f:	nop
  4020a0:	endbr64 
  4020a4:	push   0x7
  4020a9:	bnd jmp 402020 <free@plt-0x120>
  4020af:	nop
  4020b0:	endbr64 
  4020b4:	push   0x8
  4020b9:	bnd jmp 402020 <free@plt-0x120>
  4020bf:	nop
  4020c0:	endbr64 
  4020c4:	push   0x9
  4020c9:	bnd jmp 402020 <free@plt-0x120>
  4020cf:	nop
  4020d0:	endbr64 
  4020d4:	push   0xa
  4020d9:	bnd jmp 402020 <free@plt-0x120>
  4020df:	nop
  4020e0:	endbr64 
  4020e4:	push   0xb
  4020e9:	bnd jmp 402020 <free@plt-0x120>
  4020ef:	nop
  4020f0:	endbr64 
  4020f4:	push   0xc
  4020f9:	bnd jmp 402020 <free@plt-0x120>
  4020ff:	nop
  402100:	endbr64 
  402104:	push   0xd
  402109:	bnd jmp 402020 <free@plt-0x120>
  40210f:	nop
  402110:	endbr64 
  402114:	push   0xe
  402119:	bnd jmp 402020 <free@plt-0x120>
  40211f:	nop
  402120:	endbr64 
  402124:	push   0xf
  402129:	bnd jmp 402020 <free@plt-0x120>
  40212f:	nop
  402130:	endbr64 
  402134:	push   0x10
  402139:	bnd jmp 402020 <free@plt-0x120>
  40213f:	nop

Disassembly of section .plt.sec:

0000000000402140 <free@plt>:
  402140:	endbr64 
  402144:	bnd jmp QWORD PTR [rip+0x3ecd]        # 406018 <free@GLIBC_2.2.5>
  40214b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402150 <putchar@plt>:
  402150:	endbr64 
  402154:	bnd jmp QWORD PTR [rip+0x3ec5]        # 406020 <putchar@GLIBC_2.2.5>
  40215b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402160 <strcpy@plt>:
  402160:	endbr64 
  402164:	bnd jmp QWORD PTR [rip+0x3ebd]        # 406028 <strcpy@GLIBC_2.2.5>
  40216b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402170 <puts@plt>:
  402170:	endbr64 
  402174:	bnd jmp QWORD PTR [rip+0x3eb5]        # 406030 <puts@GLIBC_2.2.5>
  40217b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402180 <fclose@plt>:
  402180:	endbr64 
  402184:	bnd jmp QWORD PTR [rip+0x3ead]        # 406038 <fclose@GLIBC_2.2.5>
  40218b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402190 <strlen@plt>:
  402190:	endbr64 
  402194:	bnd jmp QWORD PTR [rip+0x3ea5]        # 406040 <strlen@GLIBC_2.2.5>
  40219b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004021a0 <__stack_chk_fail@plt>:
  4021a0:	endbr64 
  4021a4:	bnd jmp QWORD PTR [rip+0x3e9d]        # 406048 <__stack_chk_fail@GLIBC_2.4>
  4021ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004021b0 <fgets@plt>:
  4021b0:	endbr64 
  4021b4:	bnd jmp QWORD PTR [rip+0x3e95]        # 406050 <fgets@GLIBC_2.2.5>
  4021bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004021c0 <strcmp@plt>:
  4021c0:	endbr64 
  4021c4:	bnd jmp QWORD PTR [rip+0x3e8d]        # 406058 <strcmp@GLIBC_2.2.5>
  4021cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004021d0 <memcpy@plt>:
  4021d0:	endbr64 
  4021d4:	bnd jmp QWORD PTR [rip+0x3e85]        # 406060 <memcpy@GLIBC_2.14>
  4021db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004021e0 <__stpcpy_chk@plt>:
  4021e0:	endbr64 
  4021e4:	bnd jmp QWORD PTR [rip+0x3e7d]        # 406068 <__stpcpy_chk@GLIBC_2.3.4>
  4021eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004021f0 <malloc@plt>:
  4021f0:	endbr64 
  4021f4:	bnd jmp QWORD PTR [rip+0x3e75]        # 406070 <malloc@GLIBC_2.2.5>
  4021fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402200 <realloc@plt>:
  402200:	endbr64 
  402204:	bnd jmp QWORD PTR [rip+0x3e6d]        # 406078 <realloc@GLIBC_2.2.5>
  40220b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402210 <__strcpy_chk@plt>:
  402210:	endbr64 
  402214:	bnd jmp QWORD PTR [rip+0x3e65]        # 406080 <__strcpy_chk@GLIBC_2.3.4>
  40221b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402220 <__printf_chk@plt>:
  402220:	endbr64 
  402224:	bnd jmp QWORD PTR [rip+0x3e5d]        # 406088 <__printf_chk@GLIBC_2.3.4>
  40222b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402230 <fopen@plt>:
  402230:	endbr64 
  402234:	bnd jmp QWORD PTR [rip+0x3e55]        # 406090 <fopen@GLIBC_2.2.5>
  40223b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402240 <strtok@plt>:
  402240:	endbr64 
  402244:	bnd jmp QWORD PTR [rip+0x3e4d]        # 406098 <strtok@GLIBC_2.2.5>
  40224b:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

0000000000402250 <main@@Base>:
  402250:	endbr64 
  402254:	push   r13
  402256:	lea    rdi,[rip+0x1da9]        # 404006 <_IO_stdin_used@@Base+0x6>
  40225d:	push   r12
  40225f:	push   rbp
  402260:	lea    rbp,[rip+0x1d9d]        # 404004 <_IO_stdin_used@@Base+0x4>
  402267:	push   rbx
  402268:	sub    rsp,0xc8
  40226f:	mov    rax,QWORD PTR fs:0x28
  402278:	mov    QWORD PTR [rsp+0xb8],rax
  402280:	xor    eax,eax
  402282:	call   402170 <puts@plt>
  402287:	lea    rax,[rip+0x1d7c]        # 40400a <_IO_stdin_used@@Base+0xa>
  40228e:	mov    QWORD PTR [rsp+0x8],rax
  402293:	lea    rax,[rip+0x1d72]        # 40400c <_IO_stdin_used@@Base+0xc>
  40229a:	mov    QWORD PTR [rsp+0x10],rax
  40229f:	lea    rax,[rip+0x1d68]        # 40400e <_IO_stdin_used@@Base+0xe>
  4022a6:	mov    QWORD PTR [rsp+0x18],rax
  4022ab:	lea    rax,[rip+0x1d7e]        # 404030 <_IO_stdin_used@@Base+0x30>
  4022b2:	mov    QWORD PTR [rsp+0x20],rax
  4022b7:	lea    rax,[rip+0x1d52]        # 404010 <_IO_stdin_used@@Base+0x10>
  4022be:	mov    QWORD PTR [rsp+0x28],rax
  4022c3:	lea    rax,[rip+0x1d48]        # 404012 <_IO_stdin_used@@Base+0x12>
  4022ca:	mov    QWORD PTR [rsp+0x30],rax
  4022cf:	lea    rax,[rip+0x1d3e]        # 404014 <_IO_stdin_used@@Base+0x14>
  4022d6:	mov    QWORD PTR [rsp+0x38],rax
  4022db:	lea    rax,[rip+0x1d34]        # 404016 <_IO_stdin_used@@Base+0x16>
  4022e2:	mov    QWORD PTR [rsp+0x40],rax
  4022e7:	lea    rax,[rip+0x1d2a]        # 404018 <_IO_stdin_used@@Base+0x18>
  4022ee:	mov    QWORD PTR [rsp+0x48],rax
  4022f3:	xor    eax,eax
  4022f5:	mov    r12,rsp
  4022f8:	mov    QWORD PTR [rsp],rbp
  4022fc:	call   402d10 <bst_nova@@Base>
  402301:	lea    rbx,[r12+0x8]
  402306:	mov    r13,rax
  402309:	add    r12,0x50
  40230d:	mov    rsi,rbp
  402310:	jmp    40231f <main@@Base+0xcf>
  402312:	nop    WORD PTR [rax+rax*1+0x0]
  402318:	mov    rsi,QWORD PTR [rbx]
  40231b:	add    rbx,0x8
  40231f:	mov    rdi,r13
  402322:	call   402f40 <bst_insere@@Base>
  402327:	cmp    r12,rbx
  40232a:	jne    402318 <main@@Base+0xc8>
  40232c:	mov    rdi,QWORD PTR [r13+0x0]
  402330:	lea    rbx,[rsp+0x50]
  402335:	call   403130 <bst_altura@@Base>
  40233a:	mov    edx,eax
  40233c:	lea    rsi,[rip+0x1cd7]        # 40401a <_IO_stdin_used@@Base+0x1a>
  402343:	mov    edi,0x1
  402348:	xor    eax,eax
  40234a:	call   402220 <__printf_chk@plt>
  40234f:	mov    rdi,r13
  402352:	call   403220 <bst_imprime@@Base>
  402357:	lea    rdi,[rip+0x1cd0]        # 40402e <_IO_stdin_used@@Base+0x2e>
  40235e:	call   402170 <puts@plt>
  402363:	xor    eax,eax
  402365:	call   4025a0 <avl_nova@@Base>
  40236a:	lea    rsi,[rip+0x1cc1]        # 404032 <_IO_stdin_used@@Base+0x32>
  402371:	lea    rdi,[rip+0x1cbc]        # 404034 <_IO_stdin_used@@Base+0x34>
  402378:	mov    r12,rax
  40237b:	call   402230 <fopen@plt>
  402380:	mov    r13,rax
  402383:	lea    rbp,[rip+0x1cb6]        # 404040 <_IO_stdin_used@@Base+0x40>
  40238a:	jmp    4023d8 <main@@Base+0x188>
  40238c:	nop    DWORD PTR [rax+0x0]
  402390:	mov    rsi,rbp
  402393:	mov    rdi,rbx
  402396:	call   402240 <strtok@plt>
  40239b:	mov    rsi,rax
  40239e:	mov    edx,0x64
  4023a3:	mov    rdi,rbx
  4023a6:	call   402210 <__strcpy_chk@plt>
  4023ab:	mov    rsi,rbp
  4023ae:	xor    edi,edi
  4023b0:	call   402240 <strtok@plt>
  4023b5:	mov    rsi,rax
  4023b8:	mov    rdi,rbx
  4023bb:	mov    edx,0x64
  4023c0:	call   4021e0 <__stpcpy_chk@plt>
  4023c5:	sub    rax,rbx
  4023c8:	mov    rsi,rbx
  4023cb:	mov    rdi,r12
  4023ce:	mov    BYTE PTR [rsp+rax*1+0x4f],0x0
  4023d3:	call   402940 <avl_insere@@Base>
  4023d8:	mov    rdx,r13
  4023db:	mov    esi,0x64
  4023e0:	mov    rdi,rbx
  4023e3:	call   4021b0 <fgets@plt>
  4023e8:	test   rax,rax
  4023eb:	jne    402390 <main@@Base+0x140>
  4023ed:	mov    rdi,r13
  4023f0:	call   402180 <fclose@plt>
  4023f5:	lea    rsi,[rip+0x1c46]        # 404042 <_IO_stdin_used@@Base+0x42>
  4023fc:	mov    rdi,r12
  4023ff:	call   4027e0 <avl_pesquisa@@Base>
  402404:	test   rax,rax
  402407:	je     402422 <main@@Base+0x1d2>
  402409:	mov    ecx,DWORD PTR [rax+0x1c]
  40240c:	mov    rdx,QWORD PTR [rax]
  40240f:	lea    rsi,[rip+0x1c35]        # 40404b <_IO_stdin_used@@Base+0x4b>
  402416:	mov    edi,0x1
  40241b:	xor    eax,eax
  40241d:	call   402220 <__printf_chk@plt>
  402422:	lea    rsi,[rip+0x1c2b]        # 404054 <_IO_stdin_used@@Base+0x54>
  402429:	mov    rdi,r12
  40242c:	call   4027e0 <avl_pesquisa@@Base>
  402431:	test   rax,rax
  402434:	je     40244f <main@@Base+0x1ff>
  402436:	mov    ecx,DWORD PTR [rax+0x1c]
  402439:	mov    rdx,QWORD PTR [rax]
  40243c:	lea    rsi,[rip+0x1c08]        # 40404b <_IO_stdin_used@@Base+0x4b>
  402443:	mov    edi,0x1
  402448:	xor    eax,eax
  40244a:	call   402220 <__printf_chk@plt>
  40244f:	lea    rsi,[rip+0x1c04]        # 40405a <_IO_stdin_used@@Base+0x5a>
  402456:	mov    rdi,r12
  402459:	call   4027e0 <avl_pesquisa@@Base>
  40245e:	test   rax,rax
  402461:	je     40247c <main@@Base+0x22c>
  402463:	mov    ecx,DWORD PTR [rax+0x1c]
  402466:	mov    rdx,QWORD PTR [rax]
  402469:	lea    rsi,[rip+0x1bdb]        # 40404b <_IO_stdin_used@@Base+0x4b>
  402470:	mov    edi,0x1
  402475:	xor    eax,eax
  402477:	call   402220 <__printf_chk@plt>
  40247c:	xor    eax,eax
  40247e:	mov    rcx,QWORD PTR [rsp+0xb8]
  402486:	xor    rcx,QWORD PTR fs:0x28
  40248f:	jne    40249f <main@@Base+0x24f>
  402491:	add    rsp,0xc8
  402498:	pop    rbx
  402499:	pop    rbp
  40249a:	pop    r12
  40249c:	pop    r13
  40249e:	ret    
  40249f:	call   4021a0 <__stack_chk_fail@plt>
  4024a4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4024ae:	xchg   ax,ax

00000000004024b0 <_start@@Base>:
  4024b0:	endbr64 
  4024b4:	xor    ebp,ebp
  4024b6:	mov    r9,rdx
  4024b9:	pop    rsi
  4024ba:	mov    rdx,rsp
  4024bd:	and    rsp,0xfffffffffffffff0
  4024c1:	push   rax
  4024c2:	push   rsp
  4024c3:	mov    r8,0x4032d0
  4024ca:	mov    rcx,0x403260
  4024d1:	mov    rdi,0x402250
  4024d8:	call   QWORD PTR [rip+0x3b12]        # 405ff0 <__libc_start_main@GLIBC_2.2.5>
  4024de:	hlt    
  4024df:	nop
  4024e0:	endbr64 
  4024e4:	ret    
  4024e5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4024ef:	nop
  4024f0:	mov    eax,0x4060b0
  4024f5:	cmp    rax,0x4060b0
  4024fb:	je     402510 <_start@@Base+0x60>
  4024fd:	mov    eax,0x0
  402502:	test   rax,rax
  402505:	je     402510 <_start@@Base+0x60>
  402507:	mov    edi,0x4060b0
  40250c:	jmp    rax
  40250e:	xchg   ax,ax
  402510:	ret    
  402511:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40251c:	nop    DWORD PTR [rax+0x0]
  402520:	mov    esi,0x4060b0
  402525:	sub    rsi,0x4060b0
  40252c:	sar    rsi,0x3
  402530:	mov    rax,rsi
  402533:	shr    rax,0x3f
  402537:	add    rsi,rax
  40253a:	sar    rsi,1
  40253d:	je     402550 <_start@@Base+0xa0>
  40253f:	mov    eax,0x0
  402544:	test   rax,rax
  402547:	je     402550 <_start@@Base+0xa0>
  402549:	mov    edi,0x4060b0
  40254e:	jmp    rax
  402550:	ret    
  402551:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40255c:	nop    DWORD PTR [rax+0x0]
  402560:	endbr64 
  402564:	cmp    BYTE PTR [rip+0x3b45],0x0        # 4060b0 <__bss_start@@Base>
  40256b:	jne    402580 <_start@@Base+0xd0>
  40256d:	push   rbp
  40256e:	mov    rbp,rsp
  402571:	call   4024f0 <_start@@Base+0x40>
  402576:	mov    BYTE PTR [rip+0x3b33],0x1        # 4060b0 <__bss_start@@Base>
  40257d:	pop    rbp
  40257e:	ret    
  40257f:	nop
  402580:	ret    
  402581:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40258c:	nop    DWORD PTR [rax+0x0]
  402590:	endbr64 
  402594:	jmp    402520 <_start@@Base+0x70>
  402596:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004025a0 <avl_nova@@Base>:
  4025a0:	endbr64 
  4025a4:	sub    rsp,0x8
  4025a8:	mov    edi,0x8
  4025ad:	call   4021f0 <malloc@plt>
  4025b2:	test   rax,rax
  4025b5:	je     4025be <avl_nova@@Base+0x1e>
  4025b7:	mov    QWORD PTR [rax],0x0
  4025be:	add    rsp,0x8
  4025c2:	ret    
  4025c3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4025ce:	xchg   ax,ax

00000000004025d0 <avl_altura@@Base>:
  4025d0:	endbr64 
  4025d4:	test   rdi,rdi
  4025d7:	je     4025dd <avl_altura@@Base+0xd>
  4025d9:	mov    eax,DWORD PTR [rdi+0x18]
  4025dc:	ret    
  4025dd:	mov    eax,0xffffffff
  4025e2:	ret    
  4025e3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4025ee:	xchg   ax,ax

00000000004025f0 <max@@Base>:
  4025f0:	endbr64 
  4025f4:	cmp    esi,edi
  4025f6:	mov    eax,edi
  4025f8:	cmovge eax,esi
  4025fb:	ret    
  4025fc:	nop    DWORD PTR [rax+0x0]

0000000000402600 <avl_novo_no@@Base>:
  402600:	endbr64 
  402604:	push   r12
  402606:	mov    r12,rdi
  402609:	mov    edi,0x20
  40260e:	push   rbp
  40260f:	push   rbx
  402610:	call   4021f0 <malloc@plt>
  402615:	mov    rdi,r12
  402618:	mov    rbx,rax
  40261b:	call   402190 <strlen@plt>
  402620:	lea    rbp,[rax+0x1]
  402624:	mov    rdi,rbp
  402627:	call   4021f0 <malloc@plt>
  40262c:	mov    rdi,rax
  40262f:	mov    rdx,rbp
  402632:	mov    rsi,r12
  402635:	mov    QWORD PTR [rbx],rax
  402638:	call   4021d0 <memcpy@plt>
  40263d:	movabs rax,0x100000000
  402647:	mov    QWORD PTR [rbx+0x18],rax
  40264b:	mov    QWORD PTR [rbx+0x8],0x0
  402653:	mov    rax,rbx
  402656:	mov    QWORD PTR [rbx+0x10],0x0
  40265e:	pop    rbx
  40265f:	pop    rbp
  402660:	pop    r12
  402662:	ret    
  402663:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40266e:	xchg   ax,ax

0000000000402670 <roda_direita@@Base>:
  402670:	endbr64 
  402674:	push   r12
  402676:	push   rbp
  402677:	mov    rbp,rdi
  40267a:	push   rbx
  40267b:	mov    rbx,QWORD PTR [rdi+0x8]
  40267f:	mov    rax,QWORD PTR [rbx+0x10]
  402683:	mov    QWORD PTR [rbx+0x10],rdi
  402687:	mov    QWORD PTR [rdi+0x8],rax
  40268b:	mov    rdi,QWORD PTR [rdi+0x10]
  40268f:	call   4025d0 <avl_altura@@Base>
  402694:	mov    rdi,QWORD PTR [rbp+0x8]
  402698:	mov    r12d,eax
  40269b:	call   4025d0 <avl_altura@@Base>
  4026a0:	mov    edi,eax
  4026a2:	mov    esi,r12d
  4026a5:	call   4025f0 <max@@Base>
  4026aa:	inc    eax
  4026ac:	mov    DWORD PTR [rbp+0x18],eax
  4026af:	mov    rdi,QWORD PTR [rbx+0x10]
  4026b3:	call   4025d0 <avl_altura@@Base>
  4026b8:	mov    rdi,QWORD PTR [rbx+0x8]
  4026bc:	mov    ebp,eax
  4026be:	call   4025d0 <avl_altura@@Base>
  4026c3:	mov    edi,eax
  4026c5:	mov    esi,ebp
  4026c7:	call   4025f0 <max@@Base>
  4026cc:	inc    eax
  4026ce:	mov    DWORD PTR [rbx+0x18],eax
  4026d1:	mov    rax,rbx
  4026d4:	pop    rbx
  4026d5:	pop    rbp
  4026d6:	pop    r12
  4026d8:	ret    
  4026d9:	nop    DWORD PTR [rax+0x0]

00000000004026e0 <roda_esquerda@@Base>:
  4026e0:	endbr64 
  4026e4:	push   r12
  4026e6:	push   rbp
  4026e7:	mov    rbp,rdi
  4026ea:	push   rbx
  4026eb:	mov    rbx,QWORD PTR [rdi+0x10]
  4026ef:	mov    rdi,QWORD PTR [rbx+0x8]
  4026f3:	mov    QWORD PTR [rbx+0x8],rbp
  4026f7:	mov    QWORD PTR [rbp+0x10],rdi
  4026fb:	call   4025d0 <avl_altura@@Base>
  402700:	mov    rdi,QWORD PTR [rbp+0x8]
  402704:	mov    r12d,eax
  402707:	call   4025d0 <avl_altura@@Base>
  40270c:	mov    edi,eax
  40270e:	mov    esi,r12d
  402711:	call   4025f0 <max@@Base>
  402716:	inc    eax
  402718:	mov    DWORD PTR [rbp+0x18],eax
  40271b:	mov    rdi,QWORD PTR [rbx+0x10]
  40271f:	call   4025d0 <avl_altura@@Base>
  402724:	mov    rdi,QWORD PTR [rbx+0x8]
  402728:	mov    ebp,eax
  40272a:	call   4025d0 <avl_altura@@Base>
  40272f:	mov    edi,eax
  402731:	mov    esi,ebp
  402733:	call   4025f0 <max@@Base>
  402738:	inc    eax
  40273a:	mov    DWORD PTR [rbx+0x18],eax
  40273d:	mov    rax,rbx
  402740:	pop    rbx
  402741:	pop    rbp
  402742:	pop    r12
  402744:	ret    
  402745:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000402750 <calc_balanceamento@@Base>:
  402750:	endbr64 
  402754:	test   rdi,rdi
  402757:	je     402788 <calc_balanceamento@@Base+0x38>
  402759:	push   rbp
  40275a:	push   rbx
  40275b:	mov    rbx,rdi
  40275e:	sub    rsp,0x8
  402762:	mov    rdi,QWORD PTR [rdi+0x10]
  402766:	call   4025d0 <avl_altura@@Base>
  40276b:	mov    rdi,QWORD PTR [rbx+0x8]
  40276f:	mov    ebp,eax
  402771:	call   4025d0 <avl_altura@@Base>
  402776:	add    rsp,0x8
  40277a:	sub    ebp,eax
  40277c:	pop    rbx
  40277d:	mov    eax,ebp
  40277f:	pop    rbp
  402780:	ret    
  402781:	nop    DWORD PTR [rax+0x0]
  402788:	xor    eax,eax
  40278a:	ret    
  40278b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402790 <avl_pesquisa_impl@@Base>:
  402790:	endbr64 
  402794:	push   rbp
  402795:	mov    rbp,rsi
  402798:	push   rbx
  402799:	mov    rbx,rdi
  40279c:	sub    rsp,0x8
  4027a0:	test   rdi,rdi
  4027a3:	jne    4027bb <avl_pesquisa_impl@@Base+0x2b>
  4027a5:	jmp    4027d3 <avl_pesquisa_impl@@Base+0x43>
  4027a7:	nop    WORD PTR [rax+rax*1+0x0]
  4027b0:	je     4027d3 <avl_pesquisa_impl@@Base+0x43>
  4027b2:	mov    rbx,QWORD PTR [rbx+0x10]
  4027b6:	test   rbx,rbx
  4027b9:	je     4027d3 <avl_pesquisa_impl@@Base+0x43>
  4027bb:	mov    rsi,QWORD PTR [rbx]
  4027be:	mov    rdi,rbp
  4027c1:	call   4021c0 <strcmp@plt>
  4027c6:	test   eax,eax
  4027c8:	jns    4027b0 <avl_pesquisa_impl@@Base+0x20>
  4027ca:	mov    rbx,QWORD PTR [rbx+0x8]
  4027ce:	test   rbx,rbx
  4027d1:	jne    4027bb <avl_pesquisa_impl@@Base+0x2b>
  4027d3:	add    rsp,0x8
  4027d7:	mov    rax,rbx
  4027da:	pop    rbx
  4027db:	pop    rbp
  4027dc:	ret    
  4027dd:	nop    DWORD PTR [rax]

00000000004027e0 <avl_pesquisa@@Base>:
  4027e0:	endbr64 
  4027e4:	test   rdi,rdi
  4027e7:	je     402800 <avl_pesquisa@@Base+0x20>
  4027e9:	test   rsi,rsi
  4027ec:	je     402800 <avl_pesquisa@@Base+0x20>
  4027ee:	mov    rdi,QWORD PTR [rdi]
  4027f1:	jmp    402790 <avl_pesquisa_impl@@Base>
  4027f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402800:	xor    eax,eax
  402802:	ret    
  402803:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40280e:	xchg   ax,ax

0000000000402810 <avl_insere_impl@@Base>:
  402810:	endbr64 
  402814:	test   rdi,rdi
  402817:	je     402900 <avl_insere_impl@@Base+0xf0>
  40281d:	push   rbp
  40281e:	mov    rbp,rsi
  402821:	push   rbx
  402822:	mov    rbx,rdi
  402825:	sub    rsp,0x8
  402829:	mov    rsi,QWORD PTR [rdi]
  40282c:	mov    rdi,rbp
  40282f:	call   4021c0 <strcmp@plt>
  402834:	test   eax,eax
  402836:	js     4028c0 <avl_insere_impl@@Base+0xb0>
  40283c:	je     402890 <avl_insere_impl@@Base+0x80>
  40283e:	mov    rdi,QWORD PTR [rbx+0x10]
  402842:	mov    rsi,rbp
  402845:	call   402810 <avl_insere_impl@@Base>
  40284a:	mov    QWORD PTR [rbx+0x10],rax
  40284e:	mov    rdi,rax
  402851:	call   4025d0 <avl_altura@@Base>
  402856:	mov    rdi,QWORD PTR [rbx+0x8]
  40285a:	mov    ebp,eax
  40285c:	call   4025d0 <avl_altura@@Base>
  402861:	mov    edi,eax
  402863:	mov    esi,ebp
  402865:	call   4025f0 <max@@Base>
  40286a:	inc    eax
  40286c:	mov    DWORD PTR [rbx+0x18],eax
  40286f:	mov    rdi,rbx
  402872:	call   402750 <calc_balanceamento@@Base>
  402877:	cmp    eax,0x1
  40287a:	jg     4028a0 <avl_insere_impl@@Base+0x90>
  40287c:	cmp    eax,0xffffffff
  40287f:	jl     402910 <avl_insere_impl@@Base+0x100>
  402885:	add    rsp,0x8
  402889:	mov    rax,rbx
  40288c:	pop    rbx
  40288d:	pop    rbp
  40288e:	ret    
  40288f:	nop
  402890:	inc    DWORD PTR [rbx+0x1c]
  402893:	add    rsp,0x8
  402897:	mov    rax,rbx
  40289a:	pop    rbx
  40289b:	pop    rbp
  40289c:	ret    
  40289d:	nop    DWORD PTR [rax]
  4028a0:	mov    rdi,QWORD PTR [rbx+0x10]
  4028a4:	call   402750 <calc_balanceamento@@Base>
  4028a9:	test   eax,eax
  4028ab:	js     4028e0 <avl_insere_impl@@Base+0xd0>
  4028ad:	add    rsp,0x8
  4028b1:	mov    rdi,rbx
  4028b4:	pop    rbx
  4028b5:	pop    rbp
  4028b6:	jmp    4026e0 <roda_esquerda@@Base>
  4028bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4028c0:	mov    rdi,QWORD PTR [rbx+0x8]
  4028c4:	mov    rsi,rbp
  4028c7:	call   402810 <avl_insere_impl@@Base>
  4028cc:	mov    QWORD PTR [rbx+0x8],rax
  4028d0:	mov    rdi,QWORD PTR [rbx+0x10]
  4028d4:	jmp    402851 <avl_insere_impl@@Base+0x41>
  4028d9:	nop    DWORD PTR [rax+0x0]
  4028e0:	mov    rdi,QWORD PTR [rbx+0x10]
  4028e4:	call   402670 <roda_direita@@Base>
  4028e9:	mov    QWORD PTR [rbx+0x10],rax
  4028ed:	add    rsp,0x8
  4028f1:	mov    rdi,rbx
  4028f4:	pop    rbx
  4028f5:	pop    rbp
  4028f6:	jmp    4026e0 <roda_esquerda@@Base>
  4028fb:	nop    DWORD PTR [rax+rax*1+0x0]
  402900:	mov    rdi,rsi
  402903:	jmp    402600 <avl_novo_no@@Base>
  402908:	nop    DWORD PTR [rax+rax*1+0x0]
  402910:	mov    rdi,QWORD PTR [rbx+0x8]
  402914:	call   402750 <calc_balanceamento@@Base>
  402919:	test   eax,eax
  40291b:	jle    40292a <avl_insere_impl@@Base+0x11a>
  40291d:	mov    rdi,QWORD PTR [rbx+0x8]
  402921:	call   4026e0 <roda_esquerda@@Base>
  402926:	mov    QWORD PTR [rbx+0x8],rax
  40292a:	add    rsp,0x8
  40292e:	mov    rdi,rbx
  402931:	pop    rbx
  402932:	pop    rbp
  402933:	jmp    402670 <roda_direita@@Base>
  402938:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402940 <avl_insere@@Base>:
  402940:	endbr64 
  402944:	test   rdi,rdi
  402947:	je     402968 <avl_insere@@Base+0x28>
  402949:	test   rsi,rsi
  40294c:	je     402968 <avl_insere@@Base+0x28>
  40294e:	push   rbx
  40294f:	mov    rbx,rdi
  402952:	mov    rdi,QWORD PTR [rdi]
  402955:	call   402810 <avl_insere_impl@@Base>
  40295a:	mov    QWORD PTR [rbx],rax
  40295d:	xor    eax,eax
  40295f:	pop    rbx
  402960:	ret    
  402961:	nop    DWORD PTR [rax+0x0]
  402968:	mov    eax,0xffffffff
  40296d:	ret    
  40296e:	xchg   ax,ax

0000000000402970 <avl_no_valormin@@Base>:
  402970:	endbr64 
  402974:	mov    rax,rdi
  402977:	jmp    402983 <avl_no_valormin@@Base+0x13>
  402979:	nop    DWORD PTR [rax+0x0]
  402980:	mov    rax,rdx
  402983:	mov    rdx,QWORD PTR [rax+0x8]
  402987:	test   rdx,rdx
  40298a:	jne    402980 <avl_no_valormin@@Base+0x10>
  40298c:	ret    
  40298d:	nop    DWORD PTR [rax]

0000000000402990 <avl_min@@Base>:
  402990:	endbr64 
  402994:	test   rdi,rdi
  402997:	je     4029b0 <avl_min@@Base+0x20>
  402999:	sub    rsp,0x8
  40299d:	mov    rdi,QWORD PTR [rdi]
  4029a0:	call   402970 <avl_no_valormin@@Base>
  4029a5:	mov    rax,QWORD PTR [rax]
  4029a8:	add    rsp,0x8
  4029ac:	ret    
  4029ad:	nop    DWORD PTR [rax]
  4029b0:	xor    eax,eax
  4029b2:	ret    
  4029b3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4029be:	xchg   ax,ax

00000000004029c0 <avl_no_valormax@@Base>:
  4029c0:	endbr64 
  4029c4:	mov    rax,rdi
  4029c7:	jmp    4029d3 <avl_no_valormax@@Base+0x13>
  4029c9:	nop    DWORD PTR [rax+0x0]
  4029d0:	mov    rax,rdx
  4029d3:	mov    rdx,QWORD PTR [rax+0x10]
  4029d7:	test   rdx,rdx
  4029da:	jne    4029d0 <avl_no_valormax@@Base+0x10>
  4029dc:	ret    
  4029dd:	nop    DWORD PTR [rax]

00000000004029e0 <avl_max@@Base>:
  4029e0:	endbr64 
  4029e4:	test   rdi,rdi
  4029e7:	je     402a00 <avl_max@@Base+0x20>
  4029e9:	sub    rsp,0x8
  4029ed:	mov    rdi,QWORD PTR [rdi]
  4029f0:	call   4029c0 <avl_no_valormax@@Base>
  4029f5:	mov    rax,QWORD PTR [rax]
  4029f8:	add    rsp,0x8
  4029fc:	ret    
  4029fd:	nop    DWORD PTR [rax]
  402a00:	xor    eax,eax
  402a02:	ret    
  402a03:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402a0e:	xchg   ax,ax

0000000000402a10 <avl_remove_impl@@Base>:
  402a10:	endbr64 
  402a14:	push   r13
  402a16:	push   r12
  402a18:	push   rbp
  402a19:	push   rbx
  402a1a:	sub    rsp,0x8
  402a1e:	test   rdi,rdi
  402a21:	je     402c08 <avl_remove_impl@@Base+0x1f8>
  402a27:	mov    r13,QWORD PTR [rdi]
  402a2a:	mov    rbp,rsi
  402a2d:	mov    rbx,rdi
  402a30:	mov    rsi,r13
  402a33:	mov    rdi,rbp
  402a36:	call   4021c0 <strcmp@plt>
  402a3b:	test   eax,eax
  402a3d:	js     402b20 <avl_remove_impl@@Base+0x110>
  402a43:	mov    r12,QWORD PTR [rbx+0x10]
  402a47:	jne    402aa8 <avl_remove_impl@@Base+0x98>
  402a49:	mov    rbp,QWORD PTR [rbx+0x8]
  402a4d:	test   rbp,rbp
  402a50:	je     402bb0 <avl_remove_impl@@Base+0x1a0>
  402a56:	test   r12,r12
  402a59:	je     402b58 <avl_remove_impl@@Base+0x148>
  402a5f:	mov    rdi,r12
  402a62:	call   402970 <avl_no_valormin@@Base>
  402a67:	mov    rdi,QWORD PTR [rax]
  402a6a:	mov    rbp,rax
  402a6d:	call   402190 <strlen@plt>
  402a72:	mov    rdi,QWORD PTR [rbx]
  402a75:	lea    rsi,[rax+0x1]
  402a79:	call   402200 <realloc@plt>
  402a7e:	mov    QWORD PTR [rbx],rax
  402a81:	mov    rdi,rax
  402a84:	mov    rsi,QWORD PTR [rbp+0x0]
  402a88:	call   402160 <strcpy@plt>
  402a8d:	mov    rdi,QWORD PTR [rbx+0x10]
  402a91:	mov    rsi,QWORD PTR [rbp+0x0]
  402a95:	call   402a10 <avl_remove_impl@@Base>
  402a9a:	mov    rdi,rax
  402a9d:	mov    QWORD PTR [rbx+0x10],rax
  402aa1:	jmp    402aba <avl_remove_impl@@Base+0xaa>
  402aa3:	nop    DWORD PTR [rax+rax*1+0x0]
  402aa8:	mov    rdi,r12
  402aab:	mov    rsi,rbp
  402aae:	call   402a10 <avl_remove_impl@@Base>
  402ab3:	mov    QWORD PTR [rbx+0x10],rax
  402ab7:	mov    rdi,rax
  402aba:	call   4025d0 <avl_altura@@Base>
  402abf:	mov    rdi,QWORD PTR [rbx+0x8]
  402ac3:	mov    ebp,eax
  402ac5:	call   4025d0 <avl_altura@@Base>
  402aca:	mov    edi,eax
  402acc:	mov    esi,ebp
  402ace:	call   4025f0 <max@@Base>
  402ad3:	inc    eax
  402ad5:	mov    DWORD PTR [rbx+0x18],eax
  402ad8:	mov    rdi,rbx
  402adb:	call   402750 <calc_balanceamento@@Base>
  402ae0:	cmp    eax,0x1
  402ae3:	jg     402b00 <avl_remove_impl@@Base+0xf0>
  402ae5:	mov    r12,rbx
  402ae8:	cmp    eax,0xffffffff
  402aeb:	jl     402bd8 <avl_remove_impl@@Base+0x1c8>
  402af1:	add    rsp,0x8
  402af5:	pop    rbx
  402af6:	pop    rbp
  402af7:	mov    rax,r12
  402afa:	pop    r12
  402afc:	pop    r13
  402afe:	ret    
  402aff:	nop
  402b00:	mov    rdi,QWORD PTR [rbx+0x10]
  402b04:	call   402750 <calc_balanceamento@@Base>
  402b09:	test   eax,eax
  402b0b:	js     402b40 <avl_remove_impl@@Base+0x130>
  402b0d:	add    rsp,0x8
  402b11:	mov    rdi,rbx
  402b14:	pop    rbx
  402b15:	pop    rbp
  402b16:	pop    r12
  402b18:	pop    r13
  402b1a:	jmp    4026e0 <roda_esquerda@@Base>
  402b1f:	nop
  402b20:	mov    rdi,QWORD PTR [rbx+0x8]
  402b24:	mov    rsi,rbp
  402b27:	call   402a10 <avl_remove_impl@@Base>
  402b2c:	mov    QWORD PTR [rbx+0x8],rax
  402b30:	mov    rdi,QWORD PTR [rbx+0x10]
  402b34:	jmp    402aba <avl_remove_impl@@Base+0xaa>
  402b36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402b40:	mov    rdi,QWORD PTR [rbx+0x10]
  402b44:	call   402670 <roda_direita@@Base>
  402b49:	mov    QWORD PTR [rbx+0x10],rax
  402b4d:	jmp    402b0d <avl_remove_impl@@Base+0xfd>
  402b4f:	mov    rbp,r12
  402b52:	nop    WORD PTR [rax+rax*1+0x0]
  402b58:	mov    rdi,QWORD PTR [rbp+0x0]
  402b5c:	call   402190 <strlen@plt>
  402b61:	lea    rsi,[rax+0x1]
  402b65:	mov    rdi,r13
  402b68:	call   402200 <realloc@plt>
  402b6d:	mov    QWORD PTR [rbx],rax
  402b70:	mov    rdi,rax
  402b73:	mov    rsi,QWORD PTR [rbp+0x0]
  402b77:	call   402160 <strcpy@plt>
  402b7c:	mov    rax,QWORD PTR [rbp+0x8]
  402b80:	mov    rdi,QWORD PTR [rbp+0x0]
  402b84:	mov    QWORD PTR [rbx+0x8],rax
  402b88:	mov    rax,QWORD PTR [rbp+0x10]
  402b8c:	mov    QWORD PTR [rbx+0x10],rax
  402b90:	mov    eax,DWORD PTR [rbp+0x18]
  402b93:	mov    DWORD PTR [rbx+0x18],eax
  402b96:	call   402140 <free@plt>
  402b9b:	mov    rdi,rbp
  402b9e:	call   402140 <free@plt>
  402ba3:	mov    rdi,QWORD PTR [rbx+0x10]
  402ba7:	jmp    402aba <avl_remove_impl@@Base+0xaa>
  402bac:	nop    DWORD PTR [rax+0x0]
  402bb0:	test   r12,r12
  402bb3:	jne    402b4f <avl_remove_impl@@Base+0x13f>
  402bb5:	mov    rdi,r13
  402bb8:	call   402140 <free@plt>
  402bbd:	mov    rdi,rbx
  402bc0:	call   402140 <free@plt>
  402bc5:	add    rsp,0x8
  402bc9:	pop    rbx
  402bca:	pop    rbp
  402bcb:	mov    rax,r12
  402bce:	pop    r12
  402bd0:	pop    r13
  402bd2:	ret    
  402bd3:	nop    DWORD PTR [rax+rax*1+0x0]
  402bd8:	mov    rdi,QWORD PTR [rbx+0x8]
  402bdc:	call   402750 <calc_balanceamento@@Base>
  402be1:	test   eax,eax
  402be3:	jle    402bf2 <avl_remove_impl@@Base+0x1e2>
  402be5:	mov    rdi,QWORD PTR [rbx+0x8]
  402be9:	call   4026e0 <roda_esquerda@@Base>
  402bee:	mov    QWORD PTR [rbx+0x8],rax
  402bf2:	add    rsp,0x8
  402bf6:	mov    rdi,rbx
  402bf9:	pop    rbx
  402bfa:	pop    rbp
  402bfb:	pop    r12
  402bfd:	pop    r13
  402bff:	jmp    402670 <roda_direita@@Base>
  402c04:	nop    DWORD PTR [rax+0x0]
  402c08:	xor    r12d,r12d
  402c0b:	jmp    402af1 <avl_remove_impl@@Base+0xe1>

0000000000402c10 <avl_apaga@@Base>:
  402c10:	endbr64 
  402c14:	test   rdi,rdi
  402c17:	je     402c48 <avl_apaga@@Base+0x38>
  402c19:	push   rbx
  402c1a:	mov    rbx,rdi
  402c1d:	mov    rax,QWORD PTR [rdi]
  402c20:	test   rax,rax
  402c23:	je     402c3b <avl_apaga@@Base+0x2b>
  402c25:	nop    DWORD PTR [rax]
  402c28:	mov    rsi,QWORD PTR [rax]
  402c2b:	mov    rdi,rax
  402c2e:	call   402a10 <avl_remove_impl@@Base>
  402c33:	mov    QWORD PTR [rbx],rax
  402c36:	test   rax,rax
  402c39:	jne    402c28 <avl_apaga@@Base+0x18>
  402c3b:	mov    rdi,rbx
  402c3e:	pop    rbx
  402c3f:	jmp    402140 <free@plt>
  402c44:	nop    DWORD PTR [rax+0x0]
  402c48:	ret    
  402c49:	nop    DWORD PTR [rax+0x0]

0000000000402c50 <avl_remove@@Base>:
  402c50:	endbr64 
  402c54:	test   rdi,rdi
  402c57:	je     402c78 <avl_remove@@Base+0x28>
  402c59:	test   rsi,rsi
  402c5c:	je     402c78 <avl_remove@@Base+0x28>
  402c5e:	push   rbx
  402c5f:	mov    rbx,rdi
  402c62:	mov    rdi,QWORD PTR [rdi]
  402c65:	call   402a10 <avl_remove_impl@@Base>
  402c6a:	mov    QWORD PTR [rbx],rax
  402c6d:	xor    eax,eax
  402c6f:	pop    rbx
  402c70:	ret    
  402c71:	nop    DWORD PTR [rax+0x0]
  402c78:	mov    eax,0xffffffff
  402c7d:	ret    
  402c7e:	xchg   ax,ax

0000000000402c80 <avl_preordem_impl@@Base>:
  402c80:	endbr64 
  402c84:	test   rdi,rdi
  402c87:	je     402cd0 <avl_preordem_impl@@Base+0x50>
  402c89:	push   rbp
  402c8a:	lea    rbp,[rip+0x13d0]        # 404061 <_IO_stdin_used@@Base+0x61>
  402c91:	push   rbx
  402c92:	mov    rbx,rdi
  402c95:	sub    rsp,0x8
  402c99:	mov    ecx,DWORD PTR [rbx+0x1c]
  402c9c:	mov    rdx,QWORD PTR [rbx]
  402c9f:	mov    rsi,rbp
  402ca2:	mov    edi,0x1
  402ca7:	xor    eax,eax
  402ca9:	call   402220 <__printf_chk@plt>
  402cae:	mov    rdi,QWORD PTR [rbx+0x8]
  402cb2:	call   402c80 <avl_preordem_impl@@Base>
  402cb7:	mov    rbx,QWORD PTR [rbx+0x10]
  402cbb:	test   rbx,rbx
  402cbe:	jne    402c99 <avl_preordem_impl@@Base+0x19>
  402cc0:	add    rsp,0x8
  402cc4:	pop    rbx
  402cc5:	pop    rbp
  402cc6:	ret    
  402cc7:	nop    WORD PTR [rax+rax*1+0x0]
  402cd0:	ret    
  402cd1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402cdc:	nop    DWORD PTR [rax+0x0]

0000000000402ce0 <avl_imprime@@Base>:
  402ce0:	endbr64 
  402ce4:	test   rdi,rdi
  402ce7:	je     402d08 <avl_imprime@@Base+0x28>
  402ce9:	sub    rsp,0x8
  402ced:	mov    rdi,QWORD PTR [rdi]
  402cf0:	call   402c80 <avl_preordem_impl@@Base>
  402cf5:	mov    edi,0xa
  402cfa:	add    rsp,0x8
  402cfe:	jmp    402150 <putchar@plt>
  402d03:	nop    DWORD PTR [rax+rax*1+0x0]
  402d08:	ret    
  402d09:	nop    DWORD PTR [rax+0x0]

0000000000402d10 <bst_nova@@Base>:
  402d10:	endbr64 
  402d14:	sub    rsp,0x8
  402d18:	mov    edi,0x8
  402d1d:	call   4021f0 <malloc@plt>
  402d22:	test   rax,rax
  402d25:	je     402d2e <bst_nova@@Base+0x1e>
  402d27:	mov    QWORD PTR [rax],0x0
  402d2e:	add    rsp,0x8
  402d32:	ret    
  402d33:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402d3e:	xchg   ax,ax

0000000000402d40 <bst_novo_no@@Base>:
  402d40:	endbr64 
  402d44:	push   r12
  402d46:	mov    r12,rdi
  402d49:	mov    edi,0x18
  402d4e:	push   rbp
  402d4f:	push   rbx
  402d50:	call   4021f0 <malloc@plt>
  402d55:	mov    rdi,r12
  402d58:	mov    rbx,rax
  402d5b:	call   402190 <strlen@plt>
  402d60:	lea    rbp,[rax+0x1]
  402d64:	mov    rdi,rbp
  402d67:	call   4021f0 <malloc@plt>
  402d6c:	mov    rdi,rax
  402d6f:	mov    rdx,rbp
  402d72:	mov    rsi,r12
  402d75:	mov    QWORD PTR [rbx],rax
  402d78:	call   4021d0 <memcpy@plt>
  402d7d:	mov    rax,rbx
  402d80:	mov    QWORD PTR [rbx+0x8],0x0
  402d88:	mov    QWORD PTR [rbx+0x10],0x0
  402d90:	pop    rbx
  402d91:	pop    rbp
  402d92:	pop    r12
  402d94:	ret    
  402d95:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000402da0 <bst_no_valormin@@Base>:
  402da0:	endbr64 
  402da4:	mov    rax,rdi
  402da7:	jmp    402db3 <bst_no_valormin@@Base+0x13>
  402da9:	nop    DWORD PTR [rax+0x0]
  402db0:	mov    rax,rdx
  402db3:	mov    rdx,QWORD PTR [rax+0x8]
  402db7:	test   rdx,rdx
  402dba:	jne    402db0 <bst_no_valormin@@Base+0x10>
  402dbc:	ret    
  402dbd:	nop    DWORD PTR [rax]

0000000000402dc0 <bst_min@@Base>:
  402dc0:	endbr64 
  402dc4:	test   rdi,rdi
  402dc7:	je     402de0 <bst_min@@Base+0x20>
  402dc9:	sub    rsp,0x8
  402dcd:	mov    rdi,QWORD PTR [rdi]
  402dd0:	call   402da0 <bst_no_valormin@@Base>
  402dd5:	mov    rax,QWORD PTR [rax]
  402dd8:	add    rsp,0x8
  402ddc:	ret    
  402ddd:	nop    DWORD PTR [rax]
  402de0:	xor    eax,eax
  402de2:	ret    
  402de3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402dee:	xchg   ax,ax

0000000000402df0 <bst_no_valormax@@Base>:
  402df0:	endbr64 
  402df4:	mov    rax,rdi
  402df7:	jmp    402e03 <bst_no_valormax@@Base+0x13>
  402df9:	nop    DWORD PTR [rax+0x0]
  402e00:	mov    rax,rdx
  402e03:	mov    rdx,QWORD PTR [rax+0x10]
  402e07:	test   rdx,rdx
  402e0a:	jne    402e00 <bst_no_valormax@@Base+0x10>
  402e0c:	ret    
  402e0d:	nop    DWORD PTR [rax]

0000000000402e10 <bst_max@@Base>:
  402e10:	endbr64 
  402e14:	test   rdi,rdi
  402e17:	je     402e30 <bst_max@@Base+0x20>
  402e19:	sub    rsp,0x8
  402e1d:	mov    rdi,QWORD PTR [rdi]
  402e20:	call   402df0 <bst_no_valormax@@Base>
  402e25:	mov    rax,QWORD PTR [rax]
  402e28:	add    rsp,0x8
  402e2c:	ret    
  402e2d:	nop    DWORD PTR [rax]
  402e30:	xor    eax,eax
  402e32:	ret    
  402e33:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402e3e:	xchg   ax,ax

0000000000402e40 <bst_pesquisa_impl@@Base>:
  402e40:	endbr64 
  402e44:	push   rbp
  402e45:	mov    rbp,rsi
  402e48:	push   rbx
  402e49:	mov    rbx,rdi
  402e4c:	sub    rsp,0x8
  402e50:	test   rdi,rdi
  402e53:	jne    402e6b <bst_pesquisa_impl@@Base+0x2b>
  402e55:	jmp    402e83 <bst_pesquisa_impl@@Base+0x43>
  402e57:	nop    WORD PTR [rax+rax*1+0x0]
  402e60:	je     402e83 <bst_pesquisa_impl@@Base+0x43>
  402e62:	mov    rbx,QWORD PTR [rbx+0x10]
  402e66:	test   rbx,rbx
  402e69:	je     402e83 <bst_pesquisa_impl@@Base+0x43>
  402e6b:	mov    rsi,QWORD PTR [rbx]
  402e6e:	mov    rdi,rbp
  402e71:	call   4021c0 <strcmp@plt>
  402e76:	test   eax,eax
  402e78:	jns    402e60 <bst_pesquisa_impl@@Base+0x20>
  402e7a:	mov    rbx,QWORD PTR [rbx+0x8]
  402e7e:	test   rbx,rbx
  402e81:	jne    402e6b <bst_pesquisa_impl@@Base+0x2b>
  402e83:	add    rsp,0x8
  402e87:	mov    rax,rbx
  402e8a:	pop    rbx
  402e8b:	pop    rbp
  402e8c:	ret    
  402e8d:	nop    DWORD PTR [rax]

0000000000402e90 <bst_pesquisa@@Base>:
  402e90:	endbr64 
  402e94:	test   rdi,rdi
  402e97:	je     402eb0 <bst_pesquisa@@Base+0x20>
  402e99:	test   rsi,rsi
  402e9c:	je     402eb0 <bst_pesquisa@@Base+0x20>
  402e9e:	mov    rdi,QWORD PTR [rdi]
  402ea1:	jmp    402e40 <bst_pesquisa_impl@@Base>
  402ea6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402eb0:	xor    eax,eax
  402eb2:	ret    
  402eb3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402ebe:	xchg   ax,ax

0000000000402ec0 <bst_insere_impl@@Base>:
  402ec0:	endbr64 
  402ec4:	test   rdi,rdi
  402ec7:	je     402f30 <bst_insere_impl@@Base+0x70>
  402ec9:	push   rbp
  402eca:	mov    rbp,rsi
  402ecd:	push   rbx
  402ece:	mov    rbx,rdi
  402ed1:	sub    rsp,0x8
  402ed5:	mov    rsi,QWORD PTR [rdi]
  402ed8:	mov    rdi,rbp
  402edb:	call   4021c0 <strcmp@plt>
  402ee0:	test   eax,eax
  402ee2:	js     402f10 <bst_insere_impl@@Base+0x50>
  402ee4:	jne    402ef0 <bst_insere_impl@@Base+0x30>
  402ee6:	add    rsp,0x8
  402eea:	mov    rax,rbx
  402eed:	pop    rbx
  402eee:	pop    rbp
  402eef:	ret    
  402ef0:	mov    rdi,QWORD PTR [rbx+0x10]
  402ef4:	mov    rsi,rbp
  402ef7:	call   402ec0 <bst_insere_impl@@Base>
  402efc:	mov    QWORD PTR [rbx+0x10],rax
  402f00:	add    rsp,0x8
  402f04:	mov    rax,rbx
  402f07:	pop    rbx
  402f08:	pop    rbp
  402f09:	ret    
  402f0a:	nop    WORD PTR [rax+rax*1+0x0]
  402f10:	mov    rdi,QWORD PTR [rbx+0x8]
  402f14:	mov    rsi,rbp
  402f17:	call   402ec0 <bst_insere_impl@@Base>
  402f1c:	mov    QWORD PTR [rbx+0x8],rax
  402f20:	add    rsp,0x8
  402f24:	mov    rax,rbx
  402f27:	pop    rbx
  402f28:	pop    rbp
  402f29:	ret    
  402f2a:	nop    WORD PTR [rax+rax*1+0x0]
  402f30:	mov    rdi,rsi
  402f33:	jmp    402d40 <bst_novo_no@@Base>
  402f38:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402f40 <bst_insere@@Base>:
  402f40:	endbr64 
  402f44:	test   rdi,rdi
  402f47:	je     402f68 <bst_insere@@Base+0x28>
  402f49:	test   rsi,rsi
  402f4c:	je     402f68 <bst_insere@@Base+0x28>
  402f4e:	push   rbx
  402f4f:	mov    rbx,rdi
  402f52:	mov    rdi,QWORD PTR [rdi]
  402f55:	call   402ec0 <bst_insere_impl@@Base>
  402f5a:	mov    QWORD PTR [rbx],rax
  402f5d:	xor    eax,eax
  402f5f:	pop    rbx
  402f60:	ret    
  402f61:	nop    DWORD PTR [rax+0x0]
  402f68:	mov    eax,0xffffffff
  402f6d:	ret    
  402f6e:	xchg   ax,ax

0000000000402f70 <bst_remove_impl@@Base>:
  402f70:	endbr64 
  402f74:	test   rdi,rdi
  402f77:	je     4030c8 <bst_remove_impl@@Base+0x158>
  402f7d:	push   r12
  402f7f:	push   rbp
  402f80:	mov    rbp,rsi
  402f83:	push   rbx
  402f84:	mov    rbx,rdi
  402f87:	sub    rsp,0x10
  402f8b:	mov    r12,QWORD PTR [rdi]
  402f8e:	mov    rdi,rbp
  402f91:	mov    rsi,r12
  402f94:	call   4021c0 <strcmp@plt>
  402f99:	test   eax,eax
  402f9b:	js     403030 <bst_remove_impl@@Base+0xc0>
  402fa1:	mov    rax,QWORD PTR [rbx+0x10]
  402fa5:	jne    403010 <bst_remove_impl@@Base+0xa0>
  402fa7:	mov    rbp,QWORD PTR [rbx+0x8]
  402fab:	test   rbp,rbp
  402fae:	je     403050 <bst_remove_impl@@Base+0xe0>
  402fb4:	test   rax,rax
  402fb7:	je     403060 <bst_remove_impl@@Base+0xf0>
  402fbd:	mov    rdi,rax
  402fc0:	call   402da0 <bst_no_valormin@@Base>
  402fc5:	mov    rdi,QWORD PTR [rax]
  402fc8:	mov    rbp,rax
  402fcb:	call   402190 <strlen@plt>
  402fd0:	mov    rdi,QWORD PTR [rbx]
  402fd3:	lea    rsi,[rax+0x1]
  402fd7:	call   402200 <realloc@plt>
  402fdc:	mov    QWORD PTR [rbx],rax
  402fdf:	mov    rdi,rax
  402fe2:	mov    rsi,QWORD PTR [rbp+0x0]
  402fe6:	call   402160 <strcpy@plt>
  402feb:	mov    rdi,QWORD PTR [rbx+0x10]
  402fef:	mov    rsi,QWORD PTR [rbp+0x0]
  402ff3:	call   402f70 <bst_remove_impl@@Base>
  402ff8:	mov    QWORD PTR [rbx+0x10],rax
  402ffc:	add    rsp,0x10
  403000:	mov    rax,rbx
  403003:	pop    rbx
  403004:	pop    rbp
  403005:	pop    r12
  403007:	ret    
  403008:	nop    DWORD PTR [rax+rax*1+0x0]
  403010:	mov    rsi,rbp
  403013:	mov    rdi,rax
  403016:	call   402f70 <bst_remove_impl@@Base>
  40301b:	mov    QWORD PTR [rbx+0x10],rax
  40301f:	add    rsp,0x10
  403023:	mov    rax,rbx
  403026:	pop    rbx
  403027:	pop    rbp
  403028:	pop    r12
  40302a:	ret    
  40302b:	nop    DWORD PTR [rax+rax*1+0x0]
  403030:	mov    rdi,QWORD PTR [rbx+0x8]
  403034:	mov    rsi,rbp
  403037:	call   402f70 <bst_remove_impl@@Base>
  40303c:	mov    QWORD PTR [rbx+0x8],rax
  403040:	add    rsp,0x10
  403044:	mov    rax,rbx
  403047:	pop    rbx
  403048:	pop    rbp
  403049:	pop    r12
  40304b:	ret    
  40304c:	nop    DWORD PTR [rax+0x0]
  403050:	test   rax,rax
  403053:	je     40309e <bst_remove_impl@@Base+0x12e>
  403055:	mov    rbp,rax
  403058:	nop    DWORD PTR [rax+rax*1+0x0]
  403060:	mov    rdi,QWORD PTR [rbp+0x0]
  403064:	call   402190 <strlen@plt>
  403069:	lea    rsi,[rax+0x1]
  40306d:	mov    rdi,r12
  403070:	call   402200 <realloc@plt>
  403075:	mov    QWORD PTR [rbx],rax
  403078:	mov    rdi,rax
  40307b:	mov    rsi,QWORD PTR [rbp+0x0]
  40307f:	call   402160 <strcpy@plt>
  403084:	mov    rax,QWORD PTR [rbp+0x8]
  403088:	mov    r12,QWORD PTR [rbp+0x0]
  40308c:	mov    QWORD PTR [rbx+0x8],rax
  403090:	mov    rax,QWORD PTR [rbp+0x10]
  403094:	mov    QWORD PTR [rbx+0x10],rax
  403098:	mov    rax,rbx
  40309b:	mov    rbx,rbp
  40309e:	mov    rdi,r12
  4030a1:	mov    QWORD PTR [rsp+0x8],rax
  4030a6:	call   402140 <free@plt>
  4030ab:	mov    rdi,rbx
  4030ae:	call   402140 <free@plt>
  4030b3:	mov    rax,QWORD PTR [rsp+0x8]
  4030b8:	add    rsp,0x10
  4030bc:	pop    rbx
  4030bd:	pop    rbp
  4030be:	pop    r12
  4030c0:	ret    
  4030c1:	nop    DWORD PTR [rax+0x0]
  4030c8:	xor    eax,eax
  4030ca:	ret    
  4030cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004030d0 <bst_apaga@@Base>:
  4030d0:	endbr64 
  4030d4:	push   rbx
  4030d5:	mov    rbx,rdi
  4030d8:	mov    rax,QWORD PTR [rdi]
  4030db:	test   rax,rax
  4030de:	je     4030f3 <bst_apaga@@Base+0x23>
  4030e0:	mov    rsi,QWORD PTR [rax]
  4030e3:	mov    rdi,rax
  4030e6:	call   402f70 <bst_remove_impl@@Base>
  4030eb:	mov    QWORD PTR [rbx],rax
  4030ee:	test   rax,rax
  4030f1:	jne    4030e0 <bst_apaga@@Base+0x10>
  4030f3:	mov    rdi,rbx
  4030f6:	pop    rbx
  4030f7:	jmp    402140 <free@plt>
  4030fc:	nop    DWORD PTR [rax+0x0]

0000000000403100 <bst_remove@@Base>:
  403100:	endbr64 
  403104:	test   rdi,rdi
  403107:	je     403128 <bst_remove@@Base+0x28>
  403109:	test   rsi,rsi
  40310c:	je     403128 <bst_remove@@Base+0x28>
  40310e:	push   rbx
  40310f:	mov    rbx,rdi
  403112:	mov    rdi,QWORD PTR [rdi]
  403115:	call   402f70 <bst_remove_impl@@Base>
  40311a:	mov    QWORD PTR [rbx],rax
  40311d:	xor    eax,eax
  40311f:	pop    rbx
  403120:	ret    
  403121:	nop    DWORD PTR [rax+0x0]
  403128:	mov    eax,0xffffffff
  40312d:	ret    
  40312e:	xchg   ax,ax

0000000000403130 <bst_altura@@Base>:
  403130:	endbr64 
  403134:	push   r14
  403136:	push   r13
  403138:	mov    r13d,0xffffffff
  40313e:	push   r12
  403140:	push   rbp
  403141:	push   rbx
  403142:	test   rdi,rdi
  403145:	je     4031a5 <bst_altura@@Base+0x75>
  403147:	mov    rbx,rdi
  40314a:	xor    ebp,ebp
  40314c:	mov    r12,QWORD PTR [rbx+0x10]
  403150:	mov    r13d,ebp
  403153:	mov    rbx,QWORD PTR [rbx+0x8]
  403157:	test   r12,r12
  40315a:	je     403189 <bst_altura@@Base+0x59>
  40315c:	mov    rdi,rbx
  40315f:	call   403130 <bst_altura@@Base>
  403164:	mov    rdi,r12
  403167:	mov    r14d,eax
  40316a:	call   403130 <bst_altura@@Base>
  40316f:	cmp    r14d,eax
  403172:	jg     4031b8 <bst_altura@@Base+0x88>
  403174:	mov    rbx,r12
  403177:	mov    r12,QWORD PTR [rbx+0x10]
  40317b:	inc    ebp
  40317d:	mov    r13d,ebp
  403180:	mov    rbx,QWORD PTR [rbx+0x8]
  403184:	test   r12,r12
  403187:	jne    40315c <bst_altura@@Base+0x2c>
  403189:	test   rbx,rbx
  40318c:	je     4031a5 <bst_altura@@Base+0x75>
  40318e:	mov    rdi,rbx
  403191:	call   403130 <bst_altura@@Base>
  403196:	xor    edi,edi
  403198:	mov    r12d,eax
  40319b:	call   403130 <bst_altura@@Base>
  4031a0:	cmp    eax,r12d
  4031a3:	jl     4031c8 <bst_altura@@Base+0x98>
  4031a5:	pop    rbx
  4031a6:	pop    rbp
  4031a7:	pop    r12
  4031a9:	mov    eax,r13d
  4031ac:	pop    r13
  4031ae:	pop    r14
  4031b0:	ret    
  4031b1:	nop    DWORD PTR [rax+0x0]
  4031b8:	inc    ebp
  4031ba:	test   rbx,rbx
  4031bd:	jne    40314c <bst_altura@@Base+0x1c>
  4031bf:	jmp    4031a5 <bst_altura@@Base+0x75>
  4031c1:	nop    DWORD PTR [rax+0x0]
  4031c8:	inc    ebp
  4031ca:	jmp    40314c <bst_altura@@Base+0x1c>
  4031cc:	nop    DWORD PTR [rax+0x0]

00000000004031d0 <bst_preordem_impl@@Base>:
  4031d0:	endbr64 
  4031d4:	test   rdi,rdi
  4031d7:	je     403218 <bst_preordem_impl@@Base+0x48>
  4031d9:	push   rbp
  4031da:	lea    rbp,[rip+0xe87]        # 404068 <_IO_stdin_used@@Base+0x68>
  4031e1:	push   rbx
  4031e2:	mov    rbx,rdi
  4031e5:	sub    rsp,0x8
  4031e9:	mov    rdx,QWORD PTR [rbx]
  4031ec:	mov    rsi,rbp
  4031ef:	mov    edi,0x1
  4031f4:	xor    eax,eax
  4031f6:	call   402220 <__printf_chk@plt>
  4031fb:	mov    rdi,QWORD PTR [rbx+0x8]
  4031ff:	call   4031d0 <bst_preordem_impl@@Base>
  403204:	mov    rbx,QWORD PTR [rbx+0x10]
  403208:	test   rbx,rbx
  40320b:	jne    4031e9 <bst_preordem_impl@@Base+0x19>
  40320d:	add    rsp,0x8
  403211:	pop    rbx
  403212:	pop    rbp
  403213:	ret    
  403214:	nop    DWORD PTR [rax+0x0]
  403218:	ret    
  403219:	nop    DWORD PTR [rax+0x0]

0000000000403220 <bst_imprime@@Base>:
  403220:	endbr64 
  403224:	test   rdi,rdi
  403227:	je     403258 <bst_imprime@@Base+0x38>
  403229:	push   rbx
  40322a:	lea    rsi,[rip+0xe3b]        # 40406c <_IO_stdin_used@@Base+0x6c>
  403231:	mov    rbx,rdi
  403234:	xor    eax,eax
  403236:	mov    edi,0x1
  40323b:	call   402220 <__printf_chk@plt>
  403240:	mov    rdi,QWORD PTR [rbx]
  403243:	call   4031d0 <bst_preordem_impl@@Base>
  403248:	mov    edi,0xa
  40324d:	pop    rbx
  40324e:	jmp    402150 <putchar@plt>
  403253:	nop    DWORD PTR [rax+rax*1+0x0]
  403258:	ret    
  403259:	nop    DWORD PTR [rax+0x0]

0000000000403260 <__libc_csu_init@@Base>:
  403260:	endbr64 
  403264:	push   r15
  403266:	lea    r15,[rip+0x2ba3]        # 405e10 <_IO_stdin_used@@Base+0x1e10>
  40326d:	push   r14
  40326f:	mov    r14,rdx
  403272:	push   r13
  403274:	mov    r13,rsi
  403277:	push   r12
  403279:	mov    r12d,edi
  40327c:	push   rbp
  40327d:	lea    rbp,[rip+0x2b94]        # 405e18 <_IO_stdin_used@@Base+0x1e18>
  403284:	push   rbx
  403285:	sub    rbp,r15
  403288:	sub    rsp,0x8
  40328c:	call   402000 <free@plt-0x140>
  403291:	sar    rbp,0x3
  403295:	je     4032b6 <__libc_csu_init@@Base+0x56>
  403297:	xor    ebx,ebx
  403299:	nop    DWORD PTR [rax+0x0]
  4032a0:	mov    rdx,r14
  4032a3:	mov    rsi,r13
  4032a6:	mov    edi,r12d
  4032a9:	call   QWORD PTR [r15+rbx*8]
  4032ad:	add    rbx,0x1
  4032b1:	cmp    rbp,rbx
  4032b4:	jne    4032a0 <__libc_csu_init@@Base+0x40>
  4032b6:	add    rsp,0x8
  4032ba:	pop    rbx
  4032bb:	pop    rbp
  4032bc:	pop    r12
  4032be:	pop    r13
  4032c0:	pop    r14
  4032c2:	pop    r15
  4032c4:	ret    
  4032c5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

00000000004032d0 <__libc_csu_fini@@Base>:
  4032d0:	endbr64 
  4032d4:	ret    

Disassembly of section .fini:

00000000004032d8 <.fini>:
  4032d8:	endbr64 
  4032dc:	sub    rsp,0x8
  4032e0:	add    rsp,0x8
  4032e4:	ret    
