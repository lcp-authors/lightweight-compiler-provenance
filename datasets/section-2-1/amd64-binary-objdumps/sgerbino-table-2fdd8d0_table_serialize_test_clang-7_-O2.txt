
../repos/sgerbino-table-2fdd8d0/bin/table_serialize_test:     file format elf64-x86-64


Disassembly of section .init:

0000000000403000 <.init>:
  403000:	endbr64 
  403004:	sub    rsp,0x8
  403008:	mov    rax,QWORD PTR [rip+0x6fe9]        # 409ff8 <__gmon_start__>
  40300f:	test   rax,rax
  403012:	je     403016 <free@plt-0x1a>
  403014:	call   rax
  403016:	add    rsp,0x8
  40301a:	ret    

Disassembly of section .plt:

0000000000403020 <free@plt-0x10>:
  403020:	push   QWORD PTR [rip+0x6fe2]        # 40a008 <_IO_stdin_used@@Base+0x3008>
  403026:	jmp    QWORD PTR [rip+0x6fe4]        # 40a010 <_IO_stdin_used@@Base+0x3010>
  40302c:	nop    DWORD PTR [rax+0x0]

0000000000403030 <free@plt>:
  403030:	jmp    QWORD PTR [rip+0x6fe2]        # 40a018 <free@GLIBC_2.2.5>
  403036:	push   0x0
  40303b:	jmp    403020 <free@plt-0x10>

0000000000403040 <strncpy@plt>:
  403040:	jmp    QWORD PTR [rip+0x6fda]        # 40a020 <strncpy@GLIBC_2.2.5>
  403046:	push   0x1
  40304b:	jmp    403020 <free@plt-0x10>

0000000000403050 <strcpy@plt>:
  403050:	jmp    QWORD PTR [rip+0x6fd2]        # 40a028 <strcpy@GLIBC_2.2.5>
  403056:	push   0x2
  40305b:	jmp    403020 <free@plt-0x10>

0000000000403060 <strlen@plt>:
  403060:	jmp    QWORD PTR [rip+0x6fca]        # 40a030 <strlen@GLIBC_2.2.5>
  403066:	push   0x3
  40306b:	jmp    403020 <free@plt-0x10>

0000000000403070 <printf@plt>:
  403070:	jmp    QWORD PTR [rip+0x6fc2]        # 40a038 <printf@GLIBC_2.2.5>
  403076:	push   0x4
  40307b:	jmp    403020 <free@plt-0x10>

0000000000403080 <snprintf@plt>:
  403080:	jmp    QWORD PTR [rip+0x6fba]        # 40a040 <snprintf@GLIBC_2.2.5>
  403086:	push   0x5
  40308b:	jmp    403020 <free@plt-0x10>

0000000000403090 <srand@plt>:
  403090:	jmp    QWORD PTR [rip+0x6fb2]        # 40a048 <srand@GLIBC_2.2.5>
  403096:	push   0x6
  40309b:	jmp    403020 <free@plt-0x10>

00000000004030a0 <strcmp@plt>:
  4030a0:	jmp    QWORD PTR [rip+0x6faa]        # 40a050 <strcmp@GLIBC_2.2.5>
  4030a6:	push   0x7
  4030ab:	jmp    403020 <free@plt-0x10>

00000000004030b0 <time@plt>:
  4030b0:	jmp    QWORD PTR [rip+0x6fa2]        # 40a058 <time@GLIBC_2.2.5>
  4030b6:	push   0x8
  4030bb:	jmp    403020 <free@plt-0x10>

00000000004030c0 <malloc@plt>:
  4030c0:	jmp    QWORD PTR [rip+0x6f9a]        # 40a060 <malloc@GLIBC_2.2.5>
  4030c6:	push   0x9
  4030cb:	jmp    403020 <free@plt-0x10>

00000000004030d0 <__isoc99_sscanf@plt>:
  4030d0:	jmp    QWORD PTR [rip+0x6f92]        # 40a068 <__isoc99_sscanf@GLIBC_2.7>
  4030d6:	push   0xa
  4030db:	jmp    403020 <free@plt-0x10>

00000000004030e0 <realloc@plt>:
  4030e0:	jmp    QWORD PTR [rip+0x6f8a]        # 40a070 <realloc@GLIBC_2.2.5>
  4030e6:	push   0xb
  4030eb:	jmp    403020 <free@plt-0x10>

00000000004030f0 <rand@plt>:
  4030f0:	jmp    QWORD PTR [rip+0x6f82]        # 40a078 <rand@GLIBC_2.2.5>
  4030f6:	push   0xc
  4030fb:	jmp    403020 <free@plt-0x10>

Disassembly of section .text:

0000000000403100 <_start@@Base>:
  403100:	endbr64 
  403104:	xor    ebp,ebp
  403106:	mov    r9,rdx
  403109:	pop    rsi
  40310a:	mov    rdx,rsp
  40310d:	and    rsp,0xfffffffffffffff0
  403111:	push   rax
  403112:	push   rsp
  403113:	mov    r8,0x406fa0
  40311a:	mov    rcx,0x406f30
  403121:	mov    rdi,0x4031f0
  403128:	call   QWORD PTR [rip+0x6ec2]        # 409ff0 <__libc_start_main@GLIBC_2.2.5>
  40312e:	hlt    
  40312f:	nop
  403130:	endbr64 
  403134:	ret    
  403135:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40313f:	nop
  403140:	mov    eax,0x40a090
  403145:	cmp    rax,0x40a090
  40314b:	je     403160 <_start@@Base+0x60>
  40314d:	mov    eax,0x0
  403152:	test   rax,rax
  403155:	je     403160 <_start@@Base+0x60>
  403157:	mov    edi,0x40a090
  40315c:	jmp    rax
  40315e:	xchg   ax,ax
  403160:	ret    
  403161:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40316c:	nop    DWORD PTR [rax+0x0]
  403170:	mov    esi,0x40a090
  403175:	sub    rsi,0x40a090
  40317c:	mov    rax,rsi
  40317f:	shr    rsi,0x3f
  403183:	sar    rax,0x3
  403187:	add    rsi,rax
  40318a:	sar    rsi,1
  40318d:	je     4031a0 <_start@@Base+0xa0>
  40318f:	mov    eax,0x0
  403194:	test   rax,rax
  403197:	je     4031a0 <_start@@Base+0xa0>
  403199:	mov    edi,0x40a090
  40319e:	jmp    rax
  4031a0:	ret    
  4031a1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4031ac:	nop    DWORD PTR [rax+0x0]
  4031b0:	endbr64 
  4031b4:	cmp    BYTE PTR [rip+0x6ed5],0x0        # 40a090 <__bss_start@@Base>
  4031bb:	jne    4031d0 <_start@@Base+0xd0>
  4031bd:	push   rbp
  4031be:	mov    rbp,rsp
  4031c1:	call   403140 <_start@@Base+0x40>
  4031c6:	mov    BYTE PTR [rip+0x6ec3],0x1        # 40a090 <__bss_start@@Base>
  4031cd:	pop    rbp
  4031ce:	ret    
  4031cf:	nop
  4031d0:	ret    
  4031d1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4031dc:	nop    DWORD PTR [rax+0x0]
  4031e0:	endbr64 
  4031e4:	jmp    403170 <_start@@Base+0x70>
  4031e6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004031f0 <main@@Base>:
  4031f0:	push   rbp
  4031f1:	push   r15
  4031f3:	push   r14
  4031f5:	push   r13
  4031f7:	push   r12
  4031f9:	push   rbx
  4031fa:	sub    rsp,0x18738
  403201:	lea    rdi,[rsp+0x18]
  403206:	call   4030b0 <time@plt>
  40320b:	mov    edi,eax
  40320d:	call   403090 <srand@plt>
  403212:	call   4030f0 <rand@plt>
  403217:	mov    r15d,eax
  40321a:	cdqe   
  40321c:	imul   rax,rax,0x51eb851f
  403223:	mov    rcx,rax
  403226:	shr    rcx,0x3f
  40322a:	sar    rax,0x25
  40322e:	add    eax,ecx
  403230:	imul   ebp,eax,0x64
  403233:	neg    ebp
  403235:	lea    rbx,[rsp+0x20]
  40323a:	mov    rdi,rbx
  40323d:	call   403860 <table_init@@Base>
  403242:	lea    rsi,[rip+0x3e1b]        # 407064 <_IO_stdin_used@@Base+0x64>
  403249:	xor    edx,edx
  40324b:	mov    rdi,rbx
  40324e:	call   404270 <table_add_column@@Base>
  403253:	mov    r14d,eax
  403256:	lea    rsi,[rip+0x3e0a]        # 407067 <_IO_stdin_used@@Base+0x67>
  40325d:	mov    edx,0x15
  403262:	mov    rdi,rbx
  403265:	call   404270 <table_add_column@@Base>
  40326a:	mov    r12d,eax
  40326d:	lea    r15d,[r15+rbp*1]
  403271:	add    r15d,0x63
  403275:	mov    ebp,0xffffffff
  40327a:	lea    r13,[rsp+0x90]
  403282:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40328c:	nop    DWORD PTR [rax+0x0]
  403290:	add    ebp,0x1
  403293:	mov    esi,0xff
  403298:	xor    eax,eax
  40329a:	mov    rdi,r13
  40329d:	lea    rdx,[rip+0x3e3f]        # 4070e3 <_IO_stdin_used@@Base+0xe3>
  4032a4:	mov    ecx,ebp
  4032a6:	call   403080 <snprintf@plt>
  4032ab:	mov    rdi,rbx
  4032ae:	call   404f00 <table_add_row@@Base>
  4032b3:	mov    rdi,rbx
  4032b6:	mov    esi,ebp
  4032b8:	mov    edx,r14d
  4032bb:	mov    ecx,ebp
  4032bd:	call   4054b0 <table_set_int@@Base>
  4032c2:	mov    rdi,rbx
  4032c5:	mov    esi,ebp
  4032c7:	mov    edx,r12d
  4032ca:	mov    rcx,r13
  4032cd:	call   405e70 <table_set_string@@Base>
  4032d2:	cmp    ebp,r15d
  4032d5:	jl     403290 <main@@Base+0xa0>
  4032d7:	lea    rbx,[rsp+0x20]
  4032dc:	lea    rbp,[rsp+0x90]
  4032e4:	mov    edx,0x186a0
  4032e9:	mov    rdi,rbx
  4032ec:	mov    rsi,rbp
  4032ef:	call   405fe0 <table_serialize@@Base>
  4032f4:	mov    esi,0x186a0
  4032f9:	mov    rdi,rbp
  4032fc:	call   406220 <table_deserialize@@Base>
  403301:	mov    r15,rax
  403304:	mov    rdi,rbx
  403307:	call   404ef0 <table_get_row_length@@Base>
  40330c:	mov    ebp,eax
  40330e:	mov    rdi,r15
  403311:	call   404ef0 <table_get_row_length@@Base>
  403316:	mov    ebx,eax
  403318:	xor    r14d,r14d
  40331b:	mov    DWORD PTR [rsp+0x4],ebp
  40331f:	cmp    eax,ebp
  403321:	je     40333d <main@@Base+0x14d>
  403323:	lea    rdi,[rip+0x3d43]        # 40706d <_IO_stdin_used@@Base+0x6d>
  40332a:	xor    eax,eax
  40332c:	mov    esi,DWORD PTR [rsp+0x4]
  403330:	mov    edx,ebx
  403332:	call   403070 <printf@plt>
  403337:	mov    r14d,0xffffffff
  40333d:	lea    rdi,[rsp+0x20]
  403342:	call   4041e0 <table_get_column_length@@Base>
  403347:	mov    ebp,eax
  403349:	mov    rdi,r15
  40334c:	call   4041e0 <table_get_column_length@@Base>
  403351:	cmp    eax,ebp
  403353:	jne    4037ac <main@@Base+0x5bc>
  403359:	mov    DWORD PTR [rsp],r14d
  40335d:	cmp    ebx,DWORD PTR [rsp+0x4]
  403361:	jne    4037c7 <main@@Base+0x5d7>
  403367:	test   ebx,ebx
  403369:	jle    4037c7 <main@@Base+0x5d7>
  40336f:	lea    r12,[rsp+0x20]
  403374:	xor    r13d,r13d
  403377:	nop    WORD PTR [rax+rax*1+0x0]
  403380:	test   ebp,ebp
  403382:	jle    40379b <main@@Base+0x5ab>
  403388:	xor    r14d,r14d
  40338b:	nop    DWORD PTR [rax+rax*1+0x0]
  403390:	mov    rdi,r12
  403393:	mov    esi,r14d
  403396:	call   404260 <table_get_column_data_type@@Base>
  40339b:	cmp    eax,0x17
  40339e:	ja     403765 <main@@Base+0x575>
  4033a4:	mov    eax,eax
  4033a6:	lea    rcx,[rip+0x3c57]        # 407004 <_IO_stdin_used@@Base+0x4>
  4033ad:	movsxd rax,DWORD PTR [rcx+rax*4]
  4033b1:	add    rax,rcx
  4033b4:	jmp    rax
  4033b6:	mov    rdi,r12
  4033b9:	mov    esi,r13d
  4033bc:	mov    edx,r14d
  4033bf:	call   404cd0 <table_get_int@@Base>
  4033c4:	mov    rbx,r15
  4033c7:	mov    r15d,eax
  4033ca:	mov    rdi,rbx
  4033cd:	mov    esi,r13d
  4033d0:	mov    edx,r14d
  4033d3:	call   404cd0 <table_get_int@@Base>
  4033d8:	cmp    r15d,eax
  4033db:	mov    r15,rbx
  4033de:	je     403765 <main@@Base+0x575>
  4033e4:	jmp    403780 <main@@Base+0x590>
  4033e9:	mov    rdi,r12
  4033ec:	mov    esi,r13d
  4033ef:	mov    edx,r14d
  4033f2:	call   404ce0 <table_get_uint@@Base>
  4033f7:	mov    ebx,eax
  4033f9:	mov    rdi,r15
  4033fc:	mov    esi,r13d
  4033ff:	mov    edx,r14d
  403402:	call   404ce0 <table_get_uint@@Base>
  403407:	jmp    4034d6 <main@@Base+0x2e6>
  40340c:	mov    rdi,r12
  40340f:	mov    esi,r13d
  403412:	mov    edx,r14d
  403415:	call   404cf0 <table_get_int8@@Base>
  40341a:	mov    ebx,eax
  40341c:	mov    rdi,r15
  40341f:	mov    esi,r13d
  403422:	mov    edx,r14d
  403425:	call   404cf0 <table_get_int8@@Base>
  40342a:	jmp    4036da <main@@Base+0x4ea>
  40342f:	mov    rdi,r12
  403432:	mov    esi,r13d
  403435:	mov    edx,r14d
  403438:	call   404d00 <table_get_uint8@@Base>
  40343d:	mov    ebx,eax
  40343f:	mov    rdi,r15
  403442:	mov    esi,r13d
  403445:	mov    edx,r14d
  403448:	call   404d00 <table_get_uint8@@Base>
  40344d:	jmp    4036da <main@@Base+0x4ea>
  403452:	mov    rdi,r12
  403455:	mov    esi,r13d
  403458:	mov    edx,r14d
  40345b:	call   404d10 <table_get_int16@@Base>
  403460:	mov    ebx,eax
  403462:	mov    rdi,r15
  403465:	mov    esi,r13d
  403468:	mov    edx,r14d
  40346b:	call   404d10 <table_get_int16@@Base>
  403470:	jmp    403569 <main@@Base+0x379>
  403475:	mov    rdi,r12
  403478:	mov    esi,r13d
  40347b:	mov    edx,r14d
  40347e:	call   404d20 <table_get_uint16@@Base>
  403483:	mov    ebx,eax
  403485:	mov    rdi,r15
  403488:	mov    esi,r13d
  40348b:	mov    edx,r14d
  40348e:	call   404d20 <table_get_uint16@@Base>
  403493:	jmp    403569 <main@@Base+0x379>
  403498:	mov    rdi,r12
  40349b:	mov    esi,r13d
  40349e:	mov    edx,r14d
  4034a1:	call   404d30 <table_get_int32@@Base>
  4034a6:	mov    ebx,eax
  4034a8:	mov    rdi,r15
  4034ab:	mov    esi,r13d
  4034ae:	mov    edx,r14d
  4034b1:	call   404d30 <table_get_int32@@Base>
  4034b6:	jmp    4034d6 <main@@Base+0x2e6>
  4034b8:	mov    rdi,r12
  4034bb:	mov    esi,r13d
  4034be:	mov    edx,r14d
  4034c1:	call   404d40 <table_get_uint32@@Base>
  4034c6:	mov    ebx,eax
  4034c8:	mov    rdi,r15
  4034cb:	mov    esi,r13d
  4034ce:	mov    edx,r14d
  4034d1:	call   404d40 <table_get_uint32@@Base>
  4034d6:	cmp    ebx,eax
  4034d8:	je     403765 <main@@Base+0x575>
  4034de:	jmp    403780 <main@@Base+0x590>
  4034e3:	mov    rdi,r12
  4034e6:	mov    esi,r13d
  4034e9:	mov    edx,r14d
  4034ec:	call   404d50 <table_get_int64@@Base>
  4034f1:	mov    rbx,rax
  4034f4:	mov    rdi,r15
  4034f7:	mov    esi,r13d
  4034fa:	mov    edx,r14d
  4034fd:	call   404d50 <table_get_int64@@Base>
  403502:	jmp    403760 <main@@Base+0x570>
  403507:	mov    rdi,r12
  40350a:	mov    esi,r13d
  40350d:	mov    edx,r14d
  403510:	call   404d60 <table_get_uint64@@Base>
  403515:	mov    rbx,rax
  403518:	mov    rdi,r15
  40351b:	mov    esi,r13d
  40351e:	mov    edx,r14d
  403521:	call   404d60 <table_get_uint64@@Base>
  403526:	jmp    403760 <main@@Base+0x570>
  40352b:	mov    rdi,r12
  40352e:	mov    esi,r13d
  403531:	mov    edx,r14d
  403534:	call   404d70 <table_get_short@@Base>
  403539:	mov    ebx,eax
  40353b:	mov    rdi,r15
  40353e:	mov    esi,r13d
  403541:	mov    edx,r14d
  403544:	call   404d70 <table_get_short@@Base>
  403549:	jmp    403569 <main@@Base+0x379>
  40354b:	mov    rdi,r12
  40354e:	mov    esi,r13d
  403551:	mov    edx,r14d
  403554:	call   404d80 <table_get_ushort@@Base>
  403559:	mov    ebx,eax
  40355b:	mov    rdi,r15
  40355e:	mov    esi,r13d
  403561:	mov    edx,r14d
  403564:	call   404d80 <table_get_ushort@@Base>
  403569:	cmp    bx,ax
  40356c:	je     403765 <main@@Base+0x575>
  403572:	jmp    403780 <main@@Base+0x590>
  403577:	mov    rdi,r12
  40357a:	mov    esi,r13d
  40357d:	mov    edx,r14d
  403580:	call   404d90 <table_get_long@@Base>
  403585:	mov    rbx,rax
  403588:	mov    rdi,r15
  40358b:	mov    esi,r13d
  40358e:	mov    edx,r14d
  403591:	call   404d90 <table_get_long@@Base>
  403596:	jmp    403760 <main@@Base+0x570>
  40359b:	mov    rdi,r12
  40359e:	mov    esi,r13d
  4035a1:	mov    edx,r14d
  4035a4:	call   404da0 <table_get_ulong@@Base>
  4035a9:	mov    rbx,rax
  4035ac:	mov    rdi,r15
  4035af:	mov    esi,r13d
  4035b2:	mov    edx,r14d
  4035b5:	call   404da0 <table_get_ulong@@Base>
  4035ba:	jmp    403760 <main@@Base+0x570>
  4035bf:	mov    rdi,r12
  4035c2:	mov    esi,r13d
  4035c5:	mov    edx,r14d
  4035c8:	call   404db0 <table_get_llong@@Base>
  4035cd:	mov    rbx,rax
  4035d0:	mov    rdi,r15
  4035d3:	mov    esi,r13d
  4035d6:	mov    edx,r14d
  4035d9:	call   404db0 <table_get_llong@@Base>
  4035de:	jmp    403760 <main@@Base+0x570>
  4035e3:	mov    rdi,r12
  4035e6:	mov    esi,r13d
  4035e9:	mov    edx,r14d
  4035ec:	call   404dc0 <table_get_ullong@@Base>
  4035f1:	mov    rbx,rax
  4035f4:	mov    rdi,r15
  4035f7:	mov    esi,r13d
  4035fa:	mov    edx,r14d
  4035fd:	call   404dc0 <table_get_ullong@@Base>
  403602:	jmp    403760 <main@@Base+0x570>
  403607:	mov    rdi,r12
  40360a:	mov    esi,r13d
  40360d:	mov    edx,r14d
  403610:	call   404dd0 <table_get_float@@Base>
  403615:	vmovss DWORD PTR [rsp+0x8],xmm0
  40361b:	mov    rdi,r15
  40361e:	mov    esi,r13d
  403621:	mov    edx,r14d
  403624:	call   404dd0 <table_get_float@@Base>
  403629:	vmovss xmm1,DWORD PTR [rsp+0x8]
  40362f:	vucomiss xmm1,xmm0
  403633:	jmp    40368b <main@@Base+0x49b>
  403635:	mov    rdi,r12
  403638:	mov    esi,r13d
  40363b:	mov    edx,r14d
  40363e:	call   404de0 <table_get_double@@Base>
  403643:	vmovsd QWORD PTR [rsp+0x8],xmm0
  403649:	mov    rdi,r15
  40364c:	mov    esi,r13d
  40364f:	mov    edx,r14d
  403652:	call   404de0 <table_get_double@@Base>
  403657:	vmovsd xmm1,QWORD PTR [rsp+0x8]
  40365d:	vucomisd xmm1,xmm0
  403661:	jmp    40368b <main@@Base+0x49b>
  403663:	mov    rdi,r12
  403666:	mov    esi,r13d
  403669:	mov    edx,r14d
  40366c:	call   404df0 <table_get_ldouble@@Base>
  403671:	fstp   TBYTE PTR [rsp+0x8]
  403675:	mov    rdi,r15
  403678:	mov    esi,r13d
  40367b:	mov    edx,r14d
  40367e:	call   404df0 <table_get_ldouble@@Base>
  403683:	fld    TBYTE PTR [rsp+0x8]
  403687:	fucomip st,st(1)
  403689:	fstp   st(0)
  40368b:	jne    403780 <main@@Base+0x590>
  403691:	jnp    403765 <main@@Base+0x575>
  403697:	jmp    403780 <main@@Base+0x590>
  40369c:	mov    rdi,r12
  40369f:	mov    esi,r13d
  4036a2:	mov    edx,r14d
  4036a5:	call   404e00 <table_get_char@@Base>
  4036aa:	mov    ebx,eax
  4036ac:	mov    rdi,r15
  4036af:	mov    esi,r13d
  4036b2:	mov    edx,r14d
  4036b5:	call   404e00 <table_get_char@@Base>
  4036ba:	jmp    4036da <main@@Base+0x4ea>
  4036bc:	mov    rdi,r12
  4036bf:	mov    esi,r13d
  4036c2:	mov    edx,r14d
  4036c5:	call   404e10 <table_get_uchar@@Base>
  4036ca:	mov    ebx,eax
  4036cc:	mov    rdi,r15
  4036cf:	mov    esi,r13d
  4036d2:	mov    edx,r14d
  4036d5:	call   404e10 <table_get_uchar@@Base>
  4036da:	cmp    bl,al
  4036dc:	je     403765 <main@@Base+0x575>
  4036e2:	jmp    403780 <main@@Base+0x590>
  4036e7:	mov    rdi,r12
  4036ea:	mov    esi,r13d
  4036ed:	mov    edx,r14d
  4036f0:	call   404e20 <table_get_string@@Base>
  4036f5:	mov    rbx,rax
  4036f8:	mov    rdi,r15
  4036fb:	mov    esi,r13d
  4036fe:	mov    edx,r14d
  403701:	call   404e20 <table_get_string@@Base>
  403706:	mov    rdi,rbx
  403709:	mov    rsi,rax
  40370c:	call   4030a0 <strcmp@plt>
  403711:	test   eax,eax
  403713:	je     403765 <main@@Base+0x575>
  403715:	jmp    403780 <main@@Base+0x590>
  403717:	mov    rdi,r12
  40371a:	mov    esi,r13d
  40371d:	mov    edx,r14d
  403720:	call   404cc0 <table_get_bool@@Base>
  403725:	mov    ebx,eax
  403727:	mov    rdi,r15
  40372a:	mov    esi,r13d
  40372d:	mov    edx,r14d
  403730:	call   404cc0 <table_get_bool@@Base>
  403735:	xor    al,bl
  403737:	cmp    al,0x1
  403739:	jne    403765 <main@@Base+0x575>
  40373b:	jmp    403780 <main@@Base+0x590>
  40373d:	mov    rdi,r12
  403740:	mov    esi,r13d
  403743:	mov    edx,r14d
  403746:	call   404e30 <table_get_ptr@@Base>
  40374b:	mov    rbx,rax
  40374e:	mov    rdi,r15
  403751:	mov    esi,r13d
  403754:	mov    edx,r14d
  403757:	call   404e30 <table_get_ptr@@Base>
  40375c:	nop    DWORD PTR [rax+0x0]
  403760:	cmp    rbx,rax
  403763:	jne    403780 <main@@Base+0x590>
  403765:	add    r14d,0x1
  403769:	cmp    r14d,ebp
  40376c:	jl     403390 <main@@Base+0x1a0>
  403772:	jmp    40379b <main@@Base+0x5ab>
  403774:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40377e:	xchg   ax,ax
  403780:	xor    eax,eax
  403782:	lea    rdi,[rip+0x395d]        # 4070e6 <_IO_stdin_used@@Base+0xe6>
  403789:	mov    esi,r13d
  40378c:	mov    edx,r14d
  40378f:	call   403070 <printf@plt>
  403794:	mov    DWORD PTR [rsp],0xffffffff
  40379b:	add    r13d,0x1
  40379f:	cmp    r13d,DWORD PTR [rsp+0x4]
  4037a4:	jne    403380 <main@@Base+0x190>
  4037aa:	jmp    4037c7 <main@@Base+0x5d7>
  4037ac:	mov    ecx,eax
  4037ae:	lea    rdi,[rip+0x38f3]        # 4070a8 <_IO_stdin_used@@Base+0xa8>
  4037b5:	xor    eax,eax
  4037b7:	mov    esi,ebp
  4037b9:	mov    edx,ecx
  4037bb:	call   403070 <printf@plt>
  4037c0:	mov    DWORD PTR [rsp],0xffffffff
  4037c7:	lea    rdi,[rsp+0x20]
  4037cc:	call   4038f0 <table_destroy@@Base>
  4037d1:	mov    rdi,r15
  4037d4:	call   4038d0 <table_delete@@Base>
  4037d9:	mov    eax,DWORD PTR [rsp]
  4037dc:	add    rsp,0x18738
  4037e3:	pop    rbx
  4037e4:	pop    r12
  4037e6:	pop    r13
  4037e8:	pop    r14
  4037ea:	pop    r15
  4037ec:	pop    rbp
  4037ed:	ret    
  4037ee:	xchg   ax,ax

00000000004037f0 <table_new@@Base>:
  4037f0:	push   rax
  4037f1:	mov    edi,0x70
  4037f6:	call   4030c0 <malloc@plt>
  4037fb:	mov    QWORD PTR [rax],0x0
  403802:	mov    DWORD PTR [rax+0x8],0x0
  403809:	mov    ecx,0xa
  40380e:	vmovq  xmm0,rcx
  403813:	vmovdqu XMMWORD PTR [rax+0x10],xmm0
  403818:	mov    QWORD PTR [rax+0x20],0x0
  403820:	mov    DWORD PTR [rax+0x28],0x0
  403827:	mov    ecx,0x14
  40382c:	vmovq  xmm0,rcx
  403831:	vmovdqu XMMWORD PTR [rax+0x30],xmm0
  403836:	mov    DWORD PTR [rax+0x40],0x0
  40383d:	mov    QWORD PTR [rax+0x68],0x0
  403845:	vpxor  xmm0,xmm0,xmm0
  403849:	vmovdqu XMMWORD PTR [rax+0x48],xmm0
  40384e:	mov    QWORD PTR [rax+0x58],0x0
  403856:	mov    QWORD PTR [rax+0x60],0xa
  40385e:	pop    rcx
  40385f:	ret    

0000000000403860 <table_init@@Base>:
  403860:	mov    QWORD PTR [rdi],0x0
  403867:	mov    DWORD PTR [rdi+0x8],0x0
  40386e:	mov    eax,0xa
  403873:	vmovq  xmm0,rax
  403878:	vmovdqu XMMWORD PTR [rdi+0x10],xmm0
  40387d:	mov    QWORD PTR [rdi+0x20],0x0
  403885:	mov    DWORD PTR [rdi+0x28],0x0
  40388c:	mov    eax,0x14
  403891:	vmovq  xmm0,rax
  403896:	vmovdqu XMMWORD PTR [rdi+0x30],xmm0
  40389b:	mov    DWORD PTR [rdi+0x40],0x0
  4038a2:	mov    QWORD PTR [rdi+0x68],0x0
  4038aa:	vpxor  xmm0,xmm0,xmm0
  4038ae:	vmovdqu XMMWORD PTR [rdi+0x48],xmm0
  4038b3:	mov    QWORD PTR [rdi+0x58],0x0
  4038bb:	mov    QWORD PTR [rdi+0x60],0xa
  4038c3:	ret    
  4038c4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4038ce:	xchg   ax,ax

00000000004038d0 <table_delete@@Base>:
  4038d0:	push   rbx
  4038d1:	mov    rbx,rdi
  4038d4:	call   4038f0 <table_destroy@@Base>
  4038d9:	mov    rdi,rbx
  4038dc:	pop    rbx
  4038dd:	jmp    403030 <free@plt>
  4038e2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4038ec:	nop    DWORD PTR [rax+0x0]

00000000004038f0 <table_destroy@@Base>:
  4038f0:	test   rdi,rdi
  4038f3:	je     4039ac <table_destroy@@Base+0xbc>
  4038f9:	push   rbp
  4038fa:	push   r14
  4038fc:	push   rbx
  4038fd:	mov    r14,rdi
  403900:	mov    esi,0xffffffff
  403905:	mov    edx,0xffffffff
  40390a:	mov    ecx,0x40
  40390f:	call   4040f0 <table_notify@@Base>
  403914:	mov    rdi,r14
  403917:	call   404ef0 <table_get_row_length@@Base>
  40391c:	test   eax,eax
  40391e:	jle    403941 <table_destroy@@Base+0x51>
  403920:	mov    ebp,eax
  403922:	xor    ebx,ebx
  403924:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40392e:	xchg   ax,ax
  403930:	mov    rdi,r14
  403933:	mov    esi,ebx
  403935:	call   404e80 <table_row_destroy@@Base>
  40393a:	add    ebx,0x1
  40393d:	cmp    ebp,ebx
  40393f:	jne    403930 <table_destroy@@Base+0x40>
  403941:	mov    rdi,QWORD PTR [r14+0x20]
  403945:	test   rdi,rdi
  403948:	je     40394f <table_destroy@@Base+0x5f>
  40394a:	call   403030 <free@plt>
  40394f:	mov    rdi,r14
  403952:	call   4041e0 <table_get_column_length@@Base>
  403957:	test   eax,eax
  403959:	jle    403971 <table_destroy@@Base+0x81>
  40395b:	mov    ebp,eax
  40395d:	xor    ebx,ebx
  40395f:	nop
  403960:	mov    rdi,r14
  403963:	mov    esi,ebx
  403965:	call   4041c0 <table_column_destroy@@Base>
  40396a:	add    ebx,0x1
  40396d:	cmp    ebp,ebx
  40396f:	jne    403960 <table_destroy@@Base+0x70>
  403971:	mov    rdi,QWORD PTR [r14]
  403974:	test   rdi,rdi
  403977:	je     40397e <table_destroy@@Base+0x8e>
  403979:	call   403030 <free@plt>
  40397e:	mov    rdi,QWORD PTR [r14+0x48]
  403982:	test   rdi,rdi
  403985:	je     40398c <table_destroy@@Base+0x9c>
  403987:	call   403030 <free@plt>
  40398c:	mov    rdi,QWORD PTR [r14+0x50]
  403990:	test   rdi,rdi
  403993:	je     40399a <table_destroy@@Base+0xaa>
  403995:	call   403030 <free@plt>
  40399a:	mov    rdi,QWORD PTR [r14+0x58]
  40399e:	test   rdi,rdi
  4039a1:	pop    rbx
  4039a2:	pop    r14
  4039a4:	pop    rbp
  4039a5:	je     4039ac <table_destroy@@Base+0xbc>
  4039a7:	jmp    403030 <free@plt>
  4039ac:	ret    
  4039ad:	nop    DWORD PTR [rax]

00000000004039b0 <table_dupe@@Base>:
  4039b0:	push   rbp
  4039b1:	push   r15
  4039b3:	push   r14
  4039b5:	push   r13
  4039b7:	push   r12
  4039b9:	push   rbx
  4039ba:	sub    rsp,0x28
  4039be:	mov    rbx,rdi
  4039c1:	call   404ef0 <table_get_row_length@@Base>
  4039c6:	mov    DWORD PTR [rsp+0x1c],eax
  4039ca:	mov    rdi,rbx
  4039cd:	call   4041e0 <table_get_column_length@@Base>
  4039d2:	mov    r12d,eax
  4039d5:	mov    edi,0x70
  4039da:	call   4030c0 <malloc@plt>
  4039df:	mov    r15,rax
  4039e2:	mov    QWORD PTR [rax],0x0
  4039e9:	mov    DWORD PTR [rax+0x8],0x0
  4039f0:	mov    eax,0xa
  4039f5:	vmovq  xmm0,rax
  4039fa:	vmovdqu XMMWORD PTR [r15+0x10],xmm0
  403a00:	mov    QWORD PTR [r15+0x20],0x0
  403a08:	mov    DWORD PTR [r15+0x28],0x0
  403a10:	mov    eax,0x14
  403a15:	vmovq  xmm0,rax
  403a1a:	vmovdqu XMMWORD PTR [r15+0x30],xmm0
  403a20:	mov    DWORD PTR [r15+0x40],0x0
  403a28:	mov    QWORD PTR [r15+0x68],0x0
  403a30:	vpxor  xmm0,xmm0,xmm0
  403a34:	vmovdqu XMMWORD PTR [r15+0x48],xmm0
  403a3a:	mov    QWORD PTR [r15+0x58],0x0
  403a42:	mov    QWORD PTR [r15+0x60],0xa
  403a4a:	test   r12d,r12d
  403a4d:	jle    403a8c <table_dupe@@Base+0xdc>
  403a4f:	xor    ebp,ebp
  403a51:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403a5b:	nop    DWORD PTR [rax+rax*1+0x0]
  403a60:	mov    rdi,rbx
  403a63:	mov    esi,ebp
  403a65:	call   404250 <table_get_column_name@@Base>
  403a6a:	mov    r13,rax
  403a6d:	mov    rdi,rbx
  403a70:	mov    esi,ebp
  403a72:	call   404260 <table_get_column_data_type@@Base>
  403a77:	mov    rdi,r15
  403a7a:	mov    rsi,r13
  403a7d:	mov    edx,eax
  403a7f:	call   404270 <table_add_column@@Base>
  403a84:	add    ebp,0x1
  403a87:	cmp    r12d,ebp
  403a8a:	jne    403a60 <table_dupe@@Base+0xb0>
  403a8c:	cmp    DWORD PTR [rsp+0x1c],0x0
  403a91:	jle    403e1a <table_dupe@@Base+0x46a>
  403a97:	xor    ebp,ebp
  403a99:	lea    r14,[rip+0x367c]        # 40711c <_IO_stdin_used@@Base+0x11c>
  403aa0:	mov    rdi,r15
  403aa3:	call   404f00 <table_add_row@@Base>
  403aa8:	test   r12d,r12d
  403aab:	jle    403e0d <table_dupe@@Base+0x45d>
  403ab1:	xor    r13d,r13d
  403ab4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403abe:	xchg   ax,ax
  403ac0:	mov    rdi,rbx
  403ac3:	mov    esi,r13d
  403ac6:	call   404260 <table_get_column_data_type@@Base>
  403acb:	cmp    eax,0x17
  403ace:	ja     403e00 <table_dupe@@Base+0x450>
  403ad4:	mov    eax,eax
  403ad6:	movsxd rax,DWORD PTR [r14+rax*4]
  403ada:	add    rax,r14
  403add:	jmp    rax
  403adf:	mov    rdi,rbx
  403ae2:	mov    esi,ebp
  403ae4:	mov    edx,r13d
  403ae7:	call   404cd0 <table_get_int@@Base>
  403aec:	mov    rdi,r15
  403aef:	mov    esi,ebp
  403af1:	mov    edx,r13d
  403af4:	mov    ecx,eax
  403af6:	call   4054b0 <table_set_int@@Base>
  403afb:	jmp    403e00 <table_dupe@@Base+0x450>
  403b00:	mov    rdi,rbx
  403b03:	mov    esi,ebp
  403b05:	mov    edx,r13d
  403b08:	call   404ce0 <table_get_uint@@Base>
  403b0d:	mov    rdi,r15
  403b10:	mov    esi,ebp
  403b12:	mov    edx,r13d
  403b15:	mov    ecx,eax
  403b17:	call   405530 <table_set_uint@@Base>
  403b1c:	jmp    403e00 <table_dupe@@Base+0x450>
  403b21:	mov    rdi,rbx
  403b24:	mov    esi,ebp
  403b26:	mov    edx,r13d
  403b29:	call   404cf0 <table_get_int8@@Base>
  403b2e:	movsx  ecx,al
  403b31:	mov    rdi,r15
  403b34:	mov    esi,ebp
  403b36:	mov    edx,r13d
  403b39:	call   4055b0 <table_set_int8@@Base>
  403b3e:	jmp    403e00 <table_dupe@@Base+0x450>
  403b43:	mov    rdi,rbx
  403b46:	mov    esi,ebp
  403b48:	mov    edx,r13d
  403b4b:	call   404d00 <table_get_uint8@@Base>
  403b50:	movzx  ecx,al
  403b53:	mov    rdi,r15
  403b56:	mov    esi,ebp
  403b58:	mov    edx,r13d
  403b5b:	call   405630 <table_set_uint8@@Base>
  403b60:	jmp    403e00 <table_dupe@@Base+0x450>
  403b65:	mov    rdi,rbx
  403b68:	mov    esi,ebp
  403b6a:	mov    edx,r13d
  403b6d:	call   404d10 <table_get_int16@@Base>
  403b72:	movsx  ecx,ax
  403b75:	mov    rdi,r15
  403b78:	mov    esi,ebp
  403b7a:	mov    edx,r13d
  403b7d:	call   4056b0 <table_set_int16@@Base>
  403b82:	jmp    403e00 <table_dupe@@Base+0x450>
  403b87:	mov    rdi,rbx
  403b8a:	mov    esi,ebp
  403b8c:	mov    edx,r13d
  403b8f:	call   404d20 <table_get_uint16@@Base>
  403b94:	movzx  ecx,ax
  403b97:	mov    rdi,r15
  403b9a:	mov    esi,ebp
  403b9c:	mov    edx,r13d
  403b9f:	call   405730 <table_set_uint16@@Base>
  403ba4:	jmp    403e00 <table_dupe@@Base+0x450>
  403ba9:	mov    rdi,rbx
  403bac:	mov    esi,ebp
  403bae:	mov    edx,r13d
  403bb1:	call   404d30 <table_get_int32@@Base>
  403bb6:	mov    rdi,r15
  403bb9:	mov    esi,ebp
  403bbb:	mov    edx,r13d
  403bbe:	mov    ecx,eax
  403bc0:	call   4057b0 <table_set_int32@@Base>
  403bc5:	jmp    403e00 <table_dupe@@Base+0x450>
  403bca:	mov    rdi,rbx
  403bcd:	mov    esi,ebp
  403bcf:	mov    edx,r13d
  403bd2:	call   404d40 <table_get_uint32@@Base>
  403bd7:	mov    rdi,r15
  403bda:	mov    esi,ebp
  403bdc:	mov    edx,r13d
  403bdf:	mov    ecx,eax
  403be1:	call   405830 <table_set_uint32@@Base>
  403be6:	jmp    403e00 <table_dupe@@Base+0x450>
  403beb:	mov    rdi,rbx
  403bee:	mov    esi,ebp
  403bf0:	mov    edx,r13d
  403bf3:	call   404d50 <table_get_int64@@Base>
  403bf8:	mov    rdi,r15
  403bfb:	mov    esi,ebp
  403bfd:	mov    edx,r13d
  403c00:	mov    rcx,rax
  403c03:	call   4058b0 <table_set_int64@@Base>
  403c08:	jmp    403e00 <table_dupe@@Base+0x450>
  403c0d:	mov    rdi,rbx
  403c10:	mov    esi,ebp
  403c12:	mov    edx,r13d
  403c15:	call   404d60 <table_get_uint64@@Base>
  403c1a:	mov    rdi,r15
  403c1d:	mov    esi,ebp
  403c1f:	mov    edx,r13d
  403c22:	mov    rcx,rax
  403c25:	call   405930 <table_set_uint64@@Base>
  403c2a:	jmp    403e00 <table_dupe@@Base+0x450>
  403c2f:	mov    rdi,rbx
  403c32:	mov    esi,ebp
  403c34:	mov    edx,r13d
  403c37:	call   404d70 <table_get_short@@Base>
  403c3c:	movsx  ecx,ax
  403c3f:	mov    rdi,r15
  403c42:	mov    esi,ebp
  403c44:	mov    edx,r13d
  403c47:	call   4059b0 <table_set_short@@Base>
  403c4c:	jmp    403e00 <table_dupe@@Base+0x450>
  403c51:	mov    rdi,rbx
  403c54:	mov    esi,ebp
  403c56:	mov    edx,r13d
  403c59:	call   404d80 <table_get_ushort@@Base>
  403c5e:	movzx  ecx,ax
  403c61:	mov    rdi,r15
  403c64:	mov    esi,ebp
  403c66:	mov    edx,r13d
  403c69:	call   405a30 <table_set_ushort@@Base>
  403c6e:	jmp    403e00 <table_dupe@@Base+0x450>
  403c73:	mov    rdi,rbx
  403c76:	mov    esi,ebp
  403c78:	mov    edx,r13d
  403c7b:	call   404d90 <table_get_long@@Base>
  403c80:	mov    rdi,r15
  403c83:	mov    esi,ebp
  403c85:	mov    edx,r13d
  403c88:	mov    rcx,rax
  403c8b:	call   405ab0 <table_set_long@@Base>
  403c90:	jmp    403e00 <table_dupe@@Base+0x450>
  403c95:	mov    rdi,rbx
  403c98:	mov    esi,ebp
  403c9a:	mov    edx,r13d
  403c9d:	call   404da0 <table_get_ulong@@Base>
  403ca2:	mov    rdi,r15
  403ca5:	mov    esi,ebp
  403ca7:	mov    edx,r13d
  403caa:	mov    rcx,rax
  403cad:	call   405b30 <table_set_ulong@@Base>
  403cb2:	jmp    403e00 <table_dupe@@Base+0x450>
  403cb7:	mov    rdi,rbx
  403cba:	mov    esi,ebp
  403cbc:	mov    edx,r13d
  403cbf:	call   404db0 <table_get_llong@@Base>
  403cc4:	mov    rdi,r15
  403cc7:	mov    esi,ebp
  403cc9:	mov    edx,r13d
  403ccc:	mov    rcx,rax
  403ccf:	call   405bb0 <table_set_llong@@Base>
  403cd4:	jmp    403e00 <table_dupe@@Base+0x450>
  403cd9:	mov    rdi,rbx
  403cdc:	mov    esi,ebp
  403cde:	mov    edx,r13d
  403ce1:	call   404dc0 <table_get_ullong@@Base>
  403ce6:	mov    rdi,r15
  403ce9:	mov    esi,ebp
  403ceb:	mov    edx,r13d
  403cee:	mov    rcx,rax
  403cf1:	call   405c30 <table_set_ullong@@Base>
  403cf6:	jmp    403e00 <table_dupe@@Base+0x450>
  403cfb:	mov    rdi,rbx
  403cfe:	mov    esi,ebp
  403d00:	mov    edx,r13d
  403d03:	call   404dd0 <table_get_float@@Base>
  403d08:	mov    rdi,r15
  403d0b:	mov    esi,ebp
  403d0d:	mov    edx,r13d
  403d10:	call   405cb0 <table_set_float@@Base>
  403d15:	jmp    403e00 <table_dupe@@Base+0x450>
  403d1a:	mov    rdi,rbx
  403d1d:	mov    esi,ebp
  403d1f:	mov    edx,r13d
  403d22:	call   404de0 <table_get_double@@Base>
  403d27:	mov    rdi,r15
  403d2a:	mov    esi,ebp
  403d2c:	mov    edx,r13d
  403d2f:	call   405d40 <table_set_double@@Base>
  403d34:	jmp    403e00 <table_dupe@@Base+0x450>
  403d39:	mov    rdi,rbx
  403d3c:	mov    esi,ebp
  403d3e:	mov    edx,r13d
  403d41:	call   404df0 <table_get_ldouble@@Base>
  403d46:	fstp   TBYTE PTR [rsp]
  403d49:	mov    rdi,r15
  403d4c:	mov    esi,ebp
  403d4e:	mov    edx,r13d
  403d51:	call   405dd0 <table_set_ldouble@@Base>
  403d56:	jmp    403e00 <table_dupe@@Base+0x450>
  403d5b:	mov    rdi,rbx
  403d5e:	mov    esi,ebp
  403d60:	mov    edx,r13d
  403d63:	call   404e00 <table_get_char@@Base>
  403d68:	movsx  ecx,al
  403d6b:	mov    rdi,r15
  403d6e:	mov    esi,ebp
  403d70:	mov    edx,r13d
  403d73:	call   405e80 <table_set_char@@Base>
  403d78:	jmp    403e00 <table_dupe@@Base+0x450>
  403d7d:	mov    rdi,rbx
  403d80:	mov    esi,ebp
  403d82:	mov    edx,r13d
  403d85:	call   404e10 <table_get_uchar@@Base>
  403d8a:	movzx  ecx,al
  403d8d:	mov    rdi,r15
  403d90:	mov    esi,ebp
  403d92:	mov    edx,r13d
  403d95:	call   405f00 <table_set_uchar@@Base>
  403d9a:	jmp    403e00 <table_dupe@@Base+0x450>
  403d9c:	mov    rdi,rbx
  403d9f:	mov    esi,ebp
  403da1:	mov    edx,r13d
  403da4:	call   404e20 <table_get_string@@Base>
  403da9:	mov    rdi,r15
  403dac:	mov    esi,ebp
  403dae:	mov    edx,r13d
  403db1:	mov    rcx,rax
  403db4:	call   405e70 <table_set_string@@Base>
  403db9:	jmp    403e00 <table_dupe@@Base+0x450>
  403dbb:	mov    rdi,rbx
  403dbe:	mov    esi,ebp
  403dc0:	mov    edx,r13d
  403dc3:	call   404cc0 <table_get_bool@@Base>
  403dc8:	movzx  ecx,al
  403dcb:	mov    rdi,r15
  403dce:	mov    esi,ebp
  403dd0:	mov    edx,r13d
  403dd3:	call   405430 <table_set_bool@@Base>
  403dd8:	jmp    403e00 <table_dupe@@Base+0x450>
  403dda:	mov    rdi,rbx
  403ddd:	mov    esi,ebp
  403ddf:	mov    edx,r13d
  403de2:	call   404e30 <table_get_ptr@@Base>
  403de7:	mov    QWORD PTR [rsp+0x20],rax
  403dec:	mov    rdi,r15
  403def:	mov    esi,ebp
  403df1:	mov    edx,r13d
  403df4:	lea    rcx,[rsp+0x20]
  403df9:	call   405f80 <table_set_ptr@@Base>
  403dfe:	xchg   ax,ax
  403e00:	add    r13d,0x1
  403e04:	cmp    r12d,r13d
  403e07:	jne    403ac0 <table_dupe@@Base+0x110>
  403e0d:	add    ebp,0x1
  403e10:	cmp    ebp,DWORD PTR [rsp+0x1c]
  403e14:	jne    403aa0 <table_dupe@@Base+0xf0>
  403e1a:	mov    rax,r15
  403e1d:	add    rsp,0x28
  403e21:	pop    rbx
  403e22:	pop    r12
  403e24:	pop    r13
  403e26:	pop    r14
  403e28:	pop    r15
  403e2a:	pop    rbp
  403e2b:	ret    
  403e2c:	nop    DWORD PTR [rax+0x0]

0000000000403e30 <table_get_major_version@@Base>:
  403e30:	xor    eax,eax
  403e32:	ret    
  403e33:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403e3d:	nop    DWORD PTR [rax]

0000000000403e40 <table_get_minor_version@@Base>:
  403e40:	xor    eax,eax
  403e42:	ret    
  403e43:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403e4d:	nop    DWORD PTR [rax]

0000000000403e50 <table_get_patch_version@@Base>:
  403e50:	xor    eax,eax
  403e52:	ret    
  403e53:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403e5d:	nop    DWORD PTR [rax]

0000000000403e60 <table_get_version@@Base>:
  403e60:	lea    rax,[rip+0x32b2]        # 407119 <_IO_stdin_used@@Base+0x119>
  403e67:	ret    
  403e68:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403e70 <table_get_callback_length@@Base>:
  403e70:	mov    eax,DWORD PTR [rdi+0x40]
  403e73:	ret    
  403e74:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403e7e:	xchg   ax,ax

0000000000403e80 <table_register_callback@@Base>:
  403e80:	push   rbp
  403e81:	push   r15
  403e83:	push   r14
  403e85:	push   rbx
  403e86:	push   rax
  403e87:	mov    r14d,ecx
  403e8a:	mov    r15,rdx
  403e8d:	mov    rbp,rsi
  403e90:	mov    rbx,rdi
  403e93:	movsxd rcx,DWORD PTR [rdi+0x40]
  403e97:	test   rcx,rcx
  403e9a:	jle    403ecd <table_register_callback@@Base+0x4d>
  403e9c:	mov    rdx,QWORD PTR [rbx+0x48]
  403ea0:	xor    eax,eax
  403ea2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403eac:	nop    DWORD PTR [rax+0x0]
  403eb0:	cmp    QWORD PTR [rdx+rax*8],rbp
  403eb4:	jne    403ec4 <table_register_callback@@Base+0x44>
  403eb6:	mov    rsi,QWORD PTR [rbx+0x50]
  403eba:	cmp    QWORD PTR [rsi+rax*8],r15
  403ebe:	je     403f65 <table_register_callback@@Base+0xe5>
  403ec4:	add    rax,0x1
  403ec8:	cmp    rax,rcx
  403ecb:	jl     403eb0 <table_register_callback@@Base+0x30>
  403ecd:	mov    rsi,QWORD PTR [rbx+0x60]
  403ed1:	mov    rax,rcx
  403ed4:	or     rax,rsi
  403ed7:	shr    rax,0x20
  403edb:	je     403f58 <table_register_callback@@Base+0xd8>
  403edd:	xor    edx,edx
  403edf:	mov    rax,rcx
  403ee2:	div    rsi
  403ee5:	test   rdx,rdx
  403ee8:	jne    403f31 <table_register_callback@@Base+0xb1>
  403eea:	add    rsi,QWORD PTR [rbx+0x68]
  403eee:	mov    QWORD PTR [rbx+0x68],rsi
  403ef2:	mov    rdi,QWORD PTR [rbx+0x48]
  403ef6:	shl    rsi,0x3
  403efa:	call   4030e0 <realloc@plt>
  403eff:	mov    QWORD PTR [rbx+0x48],rax
  403f03:	mov    rdi,QWORD PTR [rbx+0x50]
  403f07:	mov    rsi,QWORD PTR [rbx+0x68]
  403f0b:	shl    rsi,0x3
  403f0f:	call   4030e0 <realloc@plt>
  403f14:	mov    QWORD PTR [rbx+0x50],rax
  403f18:	mov    rdi,QWORD PTR [rbx+0x58]
  403f1c:	mov    rsi,QWORD PTR [rbx+0x68]
  403f20:	shl    rsi,0x2
  403f24:	call   4030e0 <realloc@plt>
  403f29:	mov    QWORD PTR [rbx+0x58],rax
  403f2d:	movsxd rcx,DWORD PTR [rbx+0x40]
  403f31:	mov    rax,QWORD PTR [rbx+0x48]
  403f35:	mov    QWORD PTR [rax+rcx*8],rbp
  403f39:	mov    rax,QWORD PTR [rbx+0x50]
  403f3d:	mov    QWORD PTR [rax+rcx*8],r15
  403f41:	mov    rax,QWORD PTR [rbx+0x58]
  403f45:	mov    DWORD PTR [rax+rcx*4],r14d
  403f49:	add    DWORD PTR [rbx+0x40],0x1
  403f4d:	add    rsp,0x8
  403f51:	pop    rbx
  403f52:	pop    r14
  403f54:	pop    r15
  403f56:	pop    rbp
  403f57:	ret    
  403f58:	xor    edx,edx
  403f5a:	mov    eax,ecx
  403f5c:	div    esi
  403f5e:	test   rdx,rdx
  403f61:	jne    403f31 <table_register_callback@@Base+0xb1>
  403f63:	jmp    403eea <table_register_callback@@Base+0x6a>
  403f65:	test   eax,eax
  403f67:	jle    403ecd <table_register_callback@@Base+0x4d>
  403f6d:	mov    rcx,QWORD PTR [rbx+0x58]
  403f71:	or     DWORD PTR [rcx+rax*4],r14d
  403f75:	jmp    403f4d <table_register_callback@@Base+0xcd>
  403f77:	nop    WORD PTR [rax+rax*1+0x0]

0000000000403f80 <table_unregister_callback@@Base>:
  403f80:	push   r15
  403f82:	push   r14
  403f84:	push   rbx
  403f85:	movsxd rcx,DWORD PTR [rdi+0x40]
  403f89:	test   rcx,rcx
  403f8c:	jle    403fb9 <table_unregister_callback@@Base+0x39>
  403f8e:	mov    r15,rdi
  403f91:	lea    r14,[rdi+0x48]
  403f95:	mov    rdi,QWORD PTR [rdi+0x48]
  403f99:	xor    eax,eax
  403f9b:	nop    DWORD PTR [rax+rax*1+0x0]
  403fa0:	cmp    QWORD PTR [rdi+rax*8],rsi
  403fa4:	jne    403fb0 <table_unregister_callback@@Base+0x30>
  403fa6:	mov    rbx,QWORD PTR [r15+0x50]
  403faa:	cmp    QWORD PTR [rbx+rax*8],rdx
  403fae:	je     403fbf <table_unregister_callback@@Base+0x3f>
  403fb0:	add    rax,0x1
  403fb4:	cmp    rax,rcx
  403fb7:	jl     403fa0 <table_unregister_callback@@Base+0x20>
  403fb9:	pop    rbx
  403fba:	pop    r14
  403fbc:	pop    r15
  403fbe:	ret    
  403fbf:	cmp    eax,0xffffffff
  403fc2:	je     403fb9 <table_unregister_callback@@Base+0x39>
  403fc4:	add    ecx,0xffffffff
  403fc7:	cmp    ecx,eax
  403fc9:	jle    40403a <table_unregister_callback@@Base+0xba>
  403fcb:	mov    rcx,QWORD PTR [rdi+rax*8+0x8]
  403fd0:	mov    QWORD PTR [rdi+rax*8],rcx
  403fd4:	mov    rcx,QWORD PTR [r15+0x50]
  403fd8:	mov    rdx,QWORD PTR [rcx+rax*8+0x8]
  403fdd:	mov    QWORD PTR [rcx+rax*8],rdx
  403fe1:	mov    rcx,QWORD PTR [r15+0x58]
  403fe5:	mov    edx,DWORD PTR [rcx+rax*4+0x4]
  403fe9:	mov    DWORD PTR [rcx+rax*4],edx
  403fec:	lea    rdx,[rax+0x1]
  403ff0:	movsxd rax,DWORD PTR [r15+0x40]
  403ff4:	add    rax,0xffffffffffffffff
  403ff8:	mov    ecx,eax
  403ffa:	cmp    rdx,rax
  403ffd:	jge    40403d <table_unregister_callback@@Base+0xbd>
  403fff:	nop
  404000:	mov    rax,QWORD PTR [r15+0x48]
  404004:	mov    rcx,QWORD PTR [rax+rdx*8+0x8]
  404009:	mov    QWORD PTR [rax+rdx*8],rcx
  40400d:	mov    rax,QWORD PTR [r15+0x50]
  404011:	mov    rcx,QWORD PTR [rax+rdx*8+0x8]
  404016:	mov    QWORD PTR [rax+rdx*8],rcx
  40401a:	mov    rax,QWORD PTR [r15+0x58]
  40401e:	mov    ecx,DWORD PTR [rax+rdx*4+0x4]
  404022:	mov    DWORD PTR [rax+rdx*4],ecx
  404025:	lea    rdx,[rdx+0x1]
  404029:	movsxd rax,DWORD PTR [r15+0x40]
  40402d:	add    rax,0xffffffffffffffff
  404031:	cmp    rdx,rax
  404034:	jl     404000 <table_unregister_callback@@Base+0x80>
  404036:	mov    ecx,eax
  404038:	jmp    40403d <table_unregister_callback@@Base+0xbd>
  40403a:	movsxd rax,ecx
  40403d:	mov    DWORD PTR [r15+0x40],ecx
  404041:	mov    rcx,QWORD PTR [r15+0x60]
  404045:	mov    rdx,rax
  404048:	or     rdx,rcx
  40404b:	shr    rdx,0x20
  40404f:	je     404061 <table_unregister_callback@@Base+0xe1>
  404051:	xor    edx,edx
  404053:	div    rcx
  404056:	test   rdx,rdx
  404059:	jne    403fb9 <table_unregister_callback@@Base+0x39>
  40405f:	jmp    40406e <table_unregister_callback@@Base+0xee>
  404061:	xor    edx,edx
  404063:	div    ecx
  404065:	test   rdx,rdx
  404068:	jne    403fb9 <table_unregister_callback@@Base+0x39>
  40406e:	mov    rdi,QWORD PTR [r15+0x48]
  404072:	mov    rsi,QWORD PTR [r15+0x68]
  404076:	sub    rsi,rcx
  404079:	mov    QWORD PTR [r15+0x68],rsi
  40407d:	je     4040bb <table_unregister_callback@@Base+0x13b>
  40407f:	shl    rsi,0x3
  404083:	call   4030e0 <realloc@plt>
  404088:	mov    QWORD PTR [r15+0x48],rax
  40408c:	mov    rdi,QWORD PTR [r15+0x50]
  404090:	mov    rsi,QWORD PTR [r15+0x68]
  404094:	shl    rsi,0x3
  404098:	call   4030e0 <realloc@plt>
  40409d:	mov    QWORD PTR [r15+0x50],rax
  4040a1:	mov    rdi,QWORD PTR [r15+0x58]
  4040a5:	mov    rsi,QWORD PTR [r15+0x68]
  4040a9:	shl    rsi,0x2
  4040ad:	call   4030e0 <realloc@plt>
  4040b2:	mov    QWORD PTR [r15+0x58],rax
  4040b6:	jmp    403fb9 <table_unregister_callback@@Base+0x39>
  4040bb:	call   403030 <free@plt>
  4040c0:	mov    rdi,QWORD PTR [r15+0x50]
  4040c4:	call   403030 <free@plt>
  4040c9:	mov    rdi,QWORD PTR [r15+0x58]
  4040cd:	call   403030 <free@plt>
  4040d2:	vxorps xmm0,xmm0,xmm0
  4040d6:	vmovups XMMWORD PTR [r14],xmm0
  4040db:	mov    QWORD PTR [r14+0x10],0x0
  4040e3:	jmp    403fb9 <table_unregister_callback@@Base+0x39>
  4040e8:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004040f0 <table_notify@@Base>:
  4040f0:	push   rbp
  4040f1:	push   r15
  4040f3:	push   r14
  4040f5:	push   r12
  4040f7:	push   rbx
  4040f8:	mov    eax,DWORD PTR [rdi+0x40]
  4040fb:	test   eax,eax
  4040fd:	jle    404144 <table_notify@@Base+0x54>
  4040ff:	mov    r12d,ecx
  404102:	mov    r14d,edx
  404105:	mov    r15d,esi
  404108:	mov    rbp,rdi
  40410b:	xor    ebx,ebx
  40410d:	nop    DWORD PTR [rax]
  404110:	mov    rcx,QWORD PTR [rbp+0x58]
  404114:	test   DWORD PTR [rcx+rbx*4],r12d
  404118:	je     404138 <table_notify@@Base+0x48>
  40411a:	mov    rax,QWORD PTR [rbp+0x48]
  40411e:	mov    rcx,QWORD PTR [rbp+0x50]
  404122:	mov    r8,QWORD PTR [rcx+rbx*8]
  404126:	mov    rdi,rbp
  404129:	mov    esi,r15d
  40412c:	mov    edx,r14d
  40412f:	mov    ecx,r12d
  404132:	call   QWORD PTR [rax+rbx*8]
  404135:	mov    eax,DWORD PTR [rbp+0x40]
  404138:	add    rbx,0x1
  40413c:	movsxd rcx,eax
  40413f:	cmp    rbx,rcx
  404142:	jl     404110 <table_notify@@Base+0x20>
  404144:	pop    rbx
  404145:	pop    r12
  404147:	pop    r14
  404149:	pop    r15
  40414b:	pop    rbp
  40414c:	ret    
  40414d:	nop    DWORD PTR [rax]

0000000000404150 <table_column_init@@Base>:
  404150:	push   rbp
  404151:	push   r15
  404153:	push   r14
  404155:	push   r12
  404157:	push   rbx
  404158:	mov    r14,r8
  40415b:	mov    r15d,ecx
  40415e:	mov    r12,rdx
  404161:	mov    rbp,QWORD PTR [rdi]
  404164:	movsxd rbx,esi
  404167:	mov    rdi,rdx
  40416a:	call   403060 <strlen@plt>
  40416f:	lea    rdi,[rax+0x1]
  404173:	call   4030c0 <malloc@plt>
  404178:	lea    rbx,[rbx+rbx*2]
  40417c:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  404181:	test   rax,rax
  404184:	je     404191 <table_column_init@@Base+0x41>
  404186:	mov    rdi,rax
  404189:	mov    rsi,r12
  40418c:	call   403050 <strcpy@plt>
  404191:	mov    DWORD PTR [rbp+rbx*8+0x8],r15d
  404196:	mov    QWORD PTR [rbp+rbx*8+0x10],r14
  40419b:	pop    rbx
  40419c:	pop    r12
  40419e:	pop    r14
  4041a0:	pop    r15
  4041a2:	pop    rbp
  4041a3:	ret    
  4041a4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4041ae:	xchg   ax,ax

00000000004041b0 <table_get_col_ptr@@Base>:
  4041b0:	movsxd rax,esi
  4041b3:	lea    rax,[rax+rax*2]
  4041b7:	shl    rax,0x3
  4041bb:	add    rax,QWORD PTR [rdi]
  4041be:	ret    
  4041bf:	nop

00000000004041c0 <table_column_destroy@@Base>:
  4041c0:	mov    rax,QWORD PTR [rdi]
  4041c3:	movsxd rcx,esi
  4041c6:	lea    rcx,[rcx+rcx*2]
  4041ca:	mov    rdi,QWORD PTR [rax+rcx*8]
  4041ce:	test   rdi,rdi
  4041d1:	je     4041d8 <table_column_destroy@@Base+0x18>
  4041d3:	jmp    403030 <free@plt>
  4041d8:	ret    
  4041d9:	nop    DWORD PTR [rax+0x0]

00000000004041e0 <table_get_column_length@@Base>:
  4041e0:	mov    eax,DWORD PTR [rdi+0x8]
  4041e3:	ret    
  4041e4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4041ee:	xchg   ax,ax

00000000004041f0 <table_get_column@@Base>:
  4041f0:	push   r15
  4041f2:	push   r14
  4041f4:	push   r12
  4041f6:	push   rbx
  4041f7:	push   rax
  4041f8:	movsxd r14,DWORD PTR [rdi+0x8]
  4041fc:	test   r14,r14
  4041ff:	jle    40422e <table_get_column@@Base+0x3e>
  404201:	mov    r15,rsi
  404204:	mov    rbx,QWORD PTR [rdi]
  404207:	xor    r12d,r12d
  40420a:	nop    WORD PTR [rax+rax*1+0x0]
  404210:	mov    rdi,QWORD PTR [rbx]
  404213:	mov    rsi,r15
  404216:	call   4030a0 <strcmp@plt>
  40421b:	test   eax,eax
  40421d:	je     404231 <table_get_column@@Base+0x41>
  40421f:	add    r12,0x1
  404223:	add    rbx,0x18
  404227:	cmp    r12,r14
  40422a:	jl     404210 <table_get_column@@Base+0x20>
  40422c:	jmp    404231 <table_get_column@@Base+0x41>
  40422e:	xor    r12d,r12d
  404231:	cmp    r12d,r14d
  404234:	mov    eax,0xffffffff
  404239:	cmovne eax,r12d
  40423d:	add    rsp,0x8
  404241:	pop    rbx
  404242:	pop    r12
  404244:	pop    r14
  404246:	pop    r15
  404248:	ret    
  404249:	nop    DWORD PTR [rax+0x0]

0000000000404250 <table_get_column_name@@Base>:
  404250:	mov    rax,QWORD PTR [rdi]
  404253:	movsxd rcx,esi
  404256:	lea    rcx,[rcx+rcx*2]
  40425a:	mov    rax,QWORD PTR [rax+rcx*8]
  40425e:	ret    
  40425f:	nop

0000000000404260 <table_get_column_data_type@@Base>:
  404260:	mov    rax,QWORD PTR [rdi]
  404263:	movsxd rcx,esi
  404266:	lea    rcx,[rcx+rcx*2]
  40426a:	mov    eax,DWORD PTR [rax+rcx*8+0x8]
  40426e:	ret    
  40426f:	nop

0000000000404270 <table_add_column@@Base>:
  404270:	push   rbp
  404271:	push   r15
  404273:	push   r14
  404275:	push   r13
  404277:	push   r12
  404279:	push   rbx
  40427a:	sub    rsp,0x18
  40427e:	mov    r15d,edx
  404281:	mov    r13,rsi
  404284:	mov    r12,rdi
  404287:	movsxd rax,DWORD PTR [rdi+0x8]
  40428b:	mov    rcx,QWORD PTR [rdi+0x10]
  40428f:	mov    rdx,rax
  404292:	or     rdx,rcx
  404295:	shr    rdx,0x20
  404299:	je     4042a7 <table_add_column@@Base+0x37>
  40429b:	xor    edx,edx
  40429d:	div    rcx
  4042a0:	test   rdx,rdx
  4042a3:	jne    404309 <table_add_column@@Base+0x99>
  4042a5:	jmp    4042b0 <table_add_column@@Base+0x40>
  4042a7:	xor    edx,edx
  4042a9:	div    ecx
  4042ab:	test   rdx,rdx
  4042ae:	jne    404309 <table_add_column@@Base+0x99>
  4042b0:	add    rcx,QWORD PTR [r12+0x18]
  4042b5:	mov    QWORD PTR [r12+0x18],rcx
  4042ba:	mov    rdi,QWORD PTR [r12]
  4042be:	shl    rcx,0x3
  4042c2:	lea    rsi,[rcx+rcx*2]
  4042c6:	call   4030e0 <realloc@plt>
  4042cb:	mov    QWORD PTR [r12],rax
  4042cf:	mov    rdi,r12
  4042d2:	call   404ef0 <table_get_row_length@@Base>
  4042d7:	test   eax,eax
  4042d9:	jle    404309 <table_add_column@@Base+0x99>
  4042db:	mov    r14d,eax
  4042de:	xor    ebp,ebp
  4042e0:	mov    rdi,r12
  4042e3:	mov    esi,ebp
  4042e5:	call   404e70 <table_get_row_ptr@@Base>
  4042ea:	mov    rbx,rax
  4042ed:	mov    rdi,QWORD PTR [rax]
  4042f0:	mov    rsi,QWORD PTR [r12+0x18]
  4042f5:	shl    rsi,0x3
  4042f9:	call   4030e0 <realloc@plt>
  4042fe:	mov    QWORD PTR [rbx],rax
  404301:	add    ebp,0x1
  404304:	cmp    r14d,ebp
  404307:	jne    4042e0 <table_add_column@@Base+0x70>
  404309:	mov    rdi,r12
  40430c:	call   404ef0 <table_get_row_length@@Base>
  404311:	mov    r14d,eax
  404314:	movsxd rbx,DWORD PTR [r12+0x8]
  404319:	mov    DWORD PTR [rsp+0xc],r15d
  40431e:	mov    edi,r15d
  404321:	call   404c90 <table_get_default_compare_function_for_data_type@@Base>
  404326:	mov    QWORD PTR [rsp+0x10],rax
  40432b:	mov    rbp,QWORD PTR [r12]
  40432f:	mov    rdi,r13
  404332:	call   403060 <strlen@plt>
  404337:	lea    rdi,[rax+0x1]
  40433b:	call   4030c0 <malloc@plt>
  404340:	lea    r15,[rbx+rbx*2]
  404344:	mov    QWORD PTR [rbp+r15*8+0x0],rax
  404349:	test   rax,rax
  40434c:	je     404359 <table_add_column@@Base+0xe9>
  40434e:	mov    rdi,rax
  404351:	mov    rsi,r13
  404354:	call   403050 <strcpy@plt>
  404359:	mov    eax,DWORD PTR [rsp+0xc]
  40435d:	mov    DWORD PTR [rbp+r15*8+0x8],eax
  404362:	mov    rax,QWORD PTR [rsp+0x10]
  404367:	mov    QWORD PTR [rbp+r15*8+0x10],rax
  40436c:	test   r14d,r14d
  40436f:	jle    404394 <table_add_column@@Base+0x124>
  404371:	xor    ebp,ebp
  404373:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40437d:	nop    DWORD PTR [rax]
  404380:	mov    rdi,r12
  404383:	mov    esi,ebp
  404385:	mov    edx,ebx
  404387:	call   4065b0 <table_cell_init@@Base>
  40438c:	add    ebp,0x1
  40438f:	cmp    r14d,ebp
  404392:	jne    404380 <table_add_column@@Base+0x110>
  404394:	mov    edx,DWORD PTR [r12+0x8]
  404399:	mov    esi,0xffffffff
  40439e:	mov    ecx,0x8
  4043a3:	mov    rdi,r12
  4043a6:	call   4040f0 <table_notify@@Base>
  4043ab:	mov    eax,DWORD PTR [r12+0x8]
  4043b0:	lea    ecx,[rax+0x1]
  4043b3:	mov    DWORD PTR [r12+0x8],ecx
  4043b8:	add    rsp,0x18
  4043bc:	pop    rbx
  4043bd:	pop    r12
  4043bf:	pop    r13
  4043c1:	pop    r14
  4043c3:	pop    r15
  4043c5:	pop    rbp
  4043c6:	ret    
  4043c7:	nop    WORD PTR [rax+rax*1+0x0]

00000000004043d0 <table_remove_column@@Base>:
  4043d0:	push   rbp
  4043d1:	push   r15
  4043d3:	push   r14
  4043d5:	push   r13
  4043d7:	push   r12
  4043d9:	push   rbx
  4043da:	sub    rsp,0x28
  4043de:	mov    r14d,esi
  4043e1:	mov    r12,rdi
  4043e4:	mov    rax,QWORD PTR [rdi]
  4043e7:	movsxd r15,esi
  4043ea:	lea    rcx,[r15+r15*2]
  4043ee:	mov    rdi,QWORD PTR [rax+rcx*8]
  4043f2:	test   rdi,rdi
  4043f5:	je     4043fc <table_remove_column@@Base+0x2c>
  4043f7:	call   403030 <free@plt>
  4043fc:	mov    eax,DWORD PTR [r12+0x8]
  404401:	add    eax,0xffffffff
  404404:	mov    DWORD PTR [rsp+0xc],eax
  404408:	sub    eax,r14d
  40440b:	mov    QWORD PTR [rsp+0x10],rax
  404410:	jle    4045a4 <table_remove_column@@Base+0x1d4>
  404416:	movsxd rax,DWORD PTR [rsp+0xc]
  40441b:	mov    rcx,r15
  40441e:	not    rcx
  404421:	add    rcx,rax
  404424:	mov    rdx,QWORD PTR [rsp+0x10]
  404429:	mov    rsi,r15
  40442c:	and    rdx,0x7
  404430:	je     40447d <table_remove_column@@Base+0xad>
  404432:	lea    rsi,[r15*8+0x0]
  40443a:	lea    rsi,[rsi+rsi*2]
  40443e:	neg    rdx
  404441:	xor    edi,edi
  404443:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40444d:	nop    DWORD PTR [rax]
  404450:	mov    rbp,QWORD PTR [r12]
  404454:	mov    rbx,QWORD PTR [rbp+rsi*1+0x28]
  404459:	mov    QWORD PTR [rbp+rsi*1+0x10],rbx
  40445e:	vmovups xmm0,XMMWORD PTR [rbp+rsi*1+0x18]
  404464:	vmovups XMMWORD PTR [rbp+rsi*1+0x0],xmm0
  40446a:	add    rdi,0xffffffffffffffff
  40446e:	add    rsi,0x18
  404472:	cmp    rdx,rdi
  404475:	jne    404450 <table_remove_column@@Base+0x80>
  404477:	mov    rsi,r15
  40447a:	sub    rsi,rdi
  40447d:	cmp    rcx,0x7
  404481:	jb     4045a4 <table_remove_column@@Base+0x1d4>
  404487:	sub    rax,rsi
  40448a:	shl    rsi,0x3
  40448e:	lea    rcx,[rsi+rsi*2]
  404492:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40449c:	nop    DWORD PTR [rax+0x0]
  4044a0:	mov    rdx,QWORD PTR [r12]
  4044a4:	mov    rsi,QWORD PTR [rdx+rcx*1+0x28]
  4044a9:	mov    QWORD PTR [rdx+rcx*1+0x10],rsi
  4044ae:	vmovups xmm0,XMMWORD PTR [rdx+rcx*1+0x18]
  4044b4:	vmovups XMMWORD PTR [rdx+rcx*1],xmm0
  4044b9:	mov    rdx,QWORD PTR [r12]
  4044bd:	mov    rsi,QWORD PTR [rdx+rcx*1+0x40]
  4044c2:	mov    QWORD PTR [rdx+rcx*1+0x28],rsi
  4044c7:	vmovups xmm0,XMMWORD PTR [rdx+rcx*1+0x30]
  4044cd:	vmovups XMMWORD PTR [rdx+rcx*1+0x18],xmm0
  4044d3:	mov    rdx,QWORD PTR [r12]
  4044d7:	mov    rsi,QWORD PTR [rdx+rcx*1+0x58]
  4044dc:	mov    QWORD PTR [rdx+rcx*1+0x40],rsi
  4044e1:	vmovups xmm0,XMMWORD PTR [rdx+rcx*1+0x48]
  4044e7:	vmovups XMMWORD PTR [rdx+rcx*1+0x30],xmm0
  4044ed:	mov    rdx,QWORD PTR [r12]
  4044f1:	mov    rsi,QWORD PTR [rdx+rcx*1+0x70]
  4044f6:	mov    QWORD PTR [rdx+rcx*1+0x58],rsi
  4044fb:	vmovups xmm0,XMMWORD PTR [rdx+rcx*1+0x60]
  404501:	vmovups XMMWORD PTR [rdx+rcx*1+0x48],xmm0
  404507:	mov    rdx,QWORD PTR [r12]
  40450b:	mov    rsi,QWORD PTR [rdx+rcx*1+0x88]
  404513:	mov    QWORD PTR [rdx+rcx*1+0x70],rsi
  404518:	vmovups xmm0,XMMWORD PTR [rdx+rcx*1+0x78]
  40451e:	vmovups XMMWORD PTR [rdx+rcx*1+0x60],xmm0
  404524:	mov    rdx,QWORD PTR [r12]
  404528:	vmovups xmm0,XMMWORD PTR [rdx+rcx*1+0x90]
  404531:	vmovups XMMWORD PTR [rdx+rcx*1+0x78],xmm0
  404537:	mov    rsi,QWORD PTR [rdx+rcx*1+0xa0]
  40453f:	mov    QWORD PTR [rdx+rcx*1+0x88],rsi
  404547:	mov    rdx,QWORD PTR [r12]
  40454b:	mov    rsi,QWORD PTR [rdx+rcx*1+0xb8]
  404553:	mov    QWORD PTR [rdx+rcx*1+0xa0],rsi
  40455b:	vmovups xmm0,XMMWORD PTR [rdx+rcx*1+0xa8]
  404564:	vmovups XMMWORD PTR [rdx+rcx*1+0x90],xmm0
  40456d:	mov    rdx,QWORD PTR [r12]
  404571:	mov    rsi,QWORD PTR [rdx+rcx*1+0xd0]
  404579:	mov    QWORD PTR [rdx+rcx*1+0xb8],rsi
  404581:	vmovups xmm0,XMMWORD PTR [rdx+rcx*1+0xc0]
  40458a:	vmovups XMMWORD PTR [rdx+rcx*1+0xa8],xmm0
  404593:	add    rcx,0xc0
  40459a:	add    rax,0xfffffffffffffff8
  40459e:	jne    4044a0 <table_remove_column@@Base+0xd0>
  4045a4:	mov    rbx,r15
  4045a7:	mov    rdi,r12
  4045aa:	call   404ef0 <table_get_row_length@@Base>
  4045af:	test   eax,eax
  4045b1:	jle    4046cc <table_remove_column@@Base+0x2fc>
  4045b7:	mov    r15d,eax
  4045ba:	movsxd r13,DWORD PTR [rsp+0xc]
  4045bf:	mov    rax,rbx
  4045c2:	not    rax
  4045c5:	add    rax,r13
  4045c8:	mov    QWORD PTR [rsp+0x20],rax
  4045cd:	mov    rax,QWORD PTR [rsp+0x10]
  4045d2:	and    eax,0x7
  4045d5:	mov    QWORD PTR [rsp+0x10],rax
  4045da:	neg    rax
  4045dd:	mov    QWORD PTR [rsp+0x18],rax
  4045e2:	xor    ebp,ebp
  4045e4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4045ee:	xchg   ax,ax
  4045f0:	mov    rdi,r12
  4045f3:	mov    esi,ebp
  4045f5:	mov    edx,r14d
  4045f8:	call   4065f0 <table_cell_destroy@@Base>
  4045fd:	mov    rdi,r12
  404600:	mov    esi,ebp
  404602:	call   404e70 <table_get_row_ptr@@Base>
  404607:	cmp    DWORD PTR [rsp+0xc],r14d
  40460c:	jle    4046c0 <table_remove_column@@Base+0x2f0>
  404612:	mov    rcx,rbx
  404615:	cmp    QWORD PTR [rsp+0x10],0x0
  40461b:	je     404646 <table_remove_column@@Base+0x276>
  40461d:	mov    rdx,QWORD PTR [rsp+0x18]
  404622:	mov    rcx,rbx
  404625:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40462f:	nop
  404630:	mov    rsi,QWORD PTR [rax]
  404633:	mov    rdi,QWORD PTR [rsi+rcx*8+0x8]
  404638:	mov    QWORD PTR [rsi+rcx*8],rdi
  40463c:	add    rcx,0x1
  404640:	add    rdx,0x1
  404644:	jne    404630 <table_remove_column@@Base+0x260>
  404646:	cmp    QWORD PTR [rsp+0x20],0x7
  40464c:	jb     4046c0 <table_remove_column@@Base+0x2f0>
  40464e:	xchg   ax,ax
  404650:	mov    rdx,QWORD PTR [rax]
  404653:	mov    rsi,QWORD PTR [rdx+rcx*8+0x8]
  404658:	mov    QWORD PTR [rdx+rcx*8],rsi
  40465c:	mov    rdx,QWORD PTR [rax]
  40465f:	mov    rsi,QWORD PTR [rdx+rcx*8+0x10]
  404664:	mov    QWORD PTR [rdx+rcx*8+0x8],rsi
  404669:	mov    rdx,QWORD PTR [rax]
  40466c:	mov    rsi,QWORD PTR [rdx+rcx*8+0x18]
  404671:	mov    QWORD PTR [rdx+rcx*8+0x10],rsi
  404676:	mov    rdx,QWORD PTR [rax]
  404679:	mov    rsi,QWORD PTR [rdx+rcx*8+0x20]
  40467e:	mov    QWORD PTR [rdx+rcx*8+0x18],rsi
  404683:	mov    rdx,QWORD PTR [rax]
  404686:	mov    rsi,QWORD PTR [rdx+rcx*8+0x28]
  40468b:	mov    QWORD PTR [rdx+rcx*8+0x20],rsi
  404690:	mov    rdx,QWORD PTR [rax]
  404693:	mov    rsi,QWORD PTR [rdx+rcx*8+0x30]
  404698:	mov    QWORD PTR [rdx+rcx*8+0x28],rsi
  40469d:	mov    rdx,QWORD PTR [rax]
  4046a0:	mov    rsi,QWORD PTR [rdx+rcx*8+0x38]
  4046a5:	mov    QWORD PTR [rdx+rcx*8+0x30],rsi
  4046aa:	mov    rdx,QWORD PTR [rax]
  4046ad:	mov    rsi,QWORD PTR [rdx+rcx*8+0x40]
  4046b2:	mov    QWORD PTR [rdx+rcx*8+0x38],rsi
  4046b7:	add    rcx,0x8
  4046bb:	cmp    r13,rcx
  4046be:	jne    404650 <table_remove_column@@Base+0x280>
  4046c0:	add    ebp,0x1
  4046c3:	cmp    ebp,r15d
  4046c6:	jne    4045f0 <table_remove_column@@Base+0x220>
  4046cc:	movsxd rax,DWORD PTR [r12+0x8]
  4046d1:	add    rax,0xffffffffffffffff
  4046d5:	mov    DWORD PTR [r12+0x8],eax
  4046da:	mov    rcx,QWORD PTR [r12+0x10]
  4046df:	mov    rdx,rax
  4046e2:	or     rdx,rcx
  4046e5:	shr    rdx,0x20
  4046e9:	je     4046f7 <table_remove_column@@Base+0x327>
  4046eb:	xor    edx,edx
  4046ed:	div    rcx
  4046f0:	test   rdx,rdx
  4046f3:	jne    404769 <table_remove_column@@Base+0x399>
  4046f5:	jmp    404700 <table_remove_column@@Base+0x330>
  4046f7:	xor    edx,edx
  4046f9:	div    ecx
  4046fb:	test   rdx,rdx
  4046fe:	jne    404769 <table_remove_column@@Base+0x399>
  404700:	mov    rdi,QWORD PTR [r12]
  404704:	mov    rax,QWORD PTR [r12+0x18]
  404709:	sub    rax,rcx
  40470c:	mov    QWORD PTR [r12+0x18],rax
  404711:	shl    rax,0x3
  404715:	lea    rsi,[rax+rax*2]
  404719:	call   4030e0 <realloc@plt>
  40471e:	mov    QWORD PTR [r12],rax
  404722:	mov    rdi,r12
  404725:	call   404ef0 <table_get_row_length@@Base>
  40472a:	test   eax,eax
  40472c:	jle    404769 <table_remove_column@@Base+0x399>
  40472e:	mov    r15d,eax
  404731:	xor    ebp,ebp
  404733:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40473d:	nop    DWORD PTR [rax]
  404740:	mov    rdi,r12
  404743:	mov    esi,ebp
  404745:	call   404e70 <table_get_row_ptr@@Base>
  40474a:	mov    rbx,rax
  40474d:	mov    rdi,QWORD PTR [rax]
  404750:	mov    rsi,QWORD PTR [r12+0x18]
  404755:	shl    rsi,0x3
  404759:	call   4030e0 <realloc@plt>
  40475e:	mov    QWORD PTR [rbx],rax
  404761:	add    ebp,0x1
  404764:	cmp    r15d,ebp
  404767:	jne    404740 <table_remove_column@@Base+0x370>
  404769:	mov    esi,0xffffffff
  40476e:	mov    ecx,0x10
  404773:	mov    rdi,r12
  404776:	mov    edx,r14d
  404779:	call   4040f0 <table_notify@@Base>
  40477e:	xor    eax,eax
  404780:	add    rsp,0x28
  404784:	pop    rbx
  404785:	pop    r12
  404787:	pop    r13
  404789:	pop    r14
  40478b:	pop    r15
  40478d:	pop    rbp
  40478e:	ret    
  40478f:	nop

0000000000404790 <table_get_column_compare_function@@Base>:
  404790:	mov    rax,QWORD PTR [rdi]
  404793:	movsxd rcx,esi
  404796:	lea    rcx,[rcx+rcx*2]
  40479a:	mov    rax,QWORD PTR [rax+rcx*8+0x10]
  40479f:	ret    

00000000004047a0 <table_set_column_compare_function@@Base>:
  4047a0:	mov    rax,QWORD PTR [rdi]
  4047a3:	movsxd rcx,esi
  4047a6:	lea    rcx,[rcx+rcx*2]
  4047aa:	mov    QWORD PTR [rax+rcx*8+0x10],rdx
  4047af:	ret    

00000000004047b0 <table_compare_bool@@Base>:
  4047b0:	test   rdi,rdi
  4047b3:	je     4047cd <table_compare_bool@@Base+0x1d>
  4047b5:	test   rsi,rsi
  4047b8:	je     4047d3 <table_compare_bool@@Base+0x23>
  4047ba:	mov    al,BYTE PTR [rdi]
  4047bc:	mov    cl,BYTE PTR [rsi]
  4047be:	cmp    al,cl
  4047c0:	sbb    edx,edx
  4047c2:	cmp    al,cl
  4047c4:	mov    eax,0x1
  4047c9:	cmovbe eax,edx
  4047cc:	ret    
  4047cd:	neg    rsi
  4047d0:	sbb    eax,eax
  4047d2:	ret    
  4047d3:	mov    eax,0x1
  4047d8:	ret    
  4047d9:	nop    DWORD PTR [rax+0x0]

00000000004047e0 <table_compare_int@@Base>:
  4047e0:	test   rdi,rdi
  4047e3:	je     404802 <table_compare_int@@Base+0x22>
  4047e5:	test   rsi,rsi
  4047e8:	je     404808 <table_compare_int@@Base+0x28>
  4047ea:	mov    eax,DWORD PTR [rdi]
  4047ec:	mov    ecx,DWORD PTR [rsi]
  4047ee:	xor    edx,edx
  4047f0:	cmp    eax,ecx
  4047f2:	setl   dl
  4047f5:	neg    edx
  4047f7:	cmp    eax,ecx
  4047f9:	mov    eax,0x1
  4047fe:	cmovle eax,edx
  404801:	ret    
  404802:	neg    rsi
  404805:	sbb    eax,eax
  404807:	ret    
  404808:	mov    eax,0x1
  40480d:	ret    
  40480e:	xchg   ax,ax

0000000000404810 <table_compare_uint@@Base>:
  404810:	test   rdi,rdi
  404813:	je     40482d <table_compare_uint@@Base+0x1d>
  404815:	test   rsi,rsi
  404818:	je     404833 <table_compare_uint@@Base+0x23>
  40481a:	mov    eax,DWORD PTR [rdi]
  40481c:	mov    ecx,DWORD PTR [rsi]
  40481e:	cmp    eax,ecx
  404820:	sbb    edx,edx
  404822:	cmp    eax,ecx
  404824:	mov    eax,0x1
  404829:	cmovbe eax,edx
  40482c:	ret    
  40482d:	neg    rsi
  404830:	sbb    eax,eax
  404832:	ret    
  404833:	mov    eax,0x1
  404838:	ret    
  404839:	nop    DWORD PTR [rax+0x0]

0000000000404840 <table_compare_int8@@Base>:
  404840:	test   rdi,rdi
  404843:	je     404862 <table_compare_int8@@Base+0x22>
  404845:	test   rsi,rsi
  404848:	je     404868 <table_compare_int8@@Base+0x28>
  40484a:	mov    al,BYTE PTR [rdi]
  40484c:	mov    cl,BYTE PTR [rsi]
  40484e:	xor    edx,edx
  404850:	cmp    al,cl
  404852:	setl   dl
  404855:	neg    edx
  404857:	cmp    al,cl
  404859:	mov    eax,0x1
  40485e:	cmovle eax,edx
  404861:	ret    
  404862:	neg    rsi
  404865:	sbb    eax,eax
  404867:	ret    
  404868:	mov    eax,0x1
  40486d:	ret    
  40486e:	xchg   ax,ax

0000000000404870 <table_compare_uint8@@Base>:
  404870:	test   rdi,rdi
  404873:	je     40488d <table_compare_uint8@@Base+0x1d>
  404875:	test   rsi,rsi
  404878:	je     404893 <table_compare_uint8@@Base+0x23>
  40487a:	mov    al,BYTE PTR [rdi]
  40487c:	mov    cl,BYTE PTR [rsi]
  40487e:	cmp    al,cl
  404880:	sbb    edx,edx
  404882:	cmp    al,cl
  404884:	mov    eax,0x1
  404889:	cmovbe eax,edx
  40488c:	ret    
  40488d:	neg    rsi
  404890:	sbb    eax,eax
  404892:	ret    
  404893:	mov    eax,0x1
  404898:	ret    
  404899:	nop    DWORD PTR [rax+0x0]

00000000004048a0 <table_compare_int16@@Base>:
  4048a0:	test   rdi,rdi
  4048a3:	je     4048c6 <table_compare_int16@@Base+0x26>
  4048a5:	test   rsi,rsi
  4048a8:	je     4048cc <table_compare_int16@@Base+0x2c>
  4048aa:	movzx  eax,WORD PTR [rdi]
  4048ad:	movzx  ecx,WORD PTR [rsi]
  4048b0:	xor    edx,edx
  4048b2:	cmp    ax,cx
  4048b5:	setl   dl
  4048b8:	neg    edx
  4048ba:	cmp    ax,cx
  4048bd:	mov    eax,0x1
  4048c2:	cmovle eax,edx
  4048c5:	ret    
  4048c6:	neg    rsi
  4048c9:	sbb    eax,eax
  4048cb:	ret    
  4048cc:	mov    eax,0x1
  4048d1:	ret    
  4048d2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4048dc:	nop    DWORD PTR [rax+0x0]

00000000004048e0 <table_compare_uint16@@Base>:
  4048e0:	test   rdi,rdi
  4048e3:	je     404901 <table_compare_uint16@@Base+0x21>
  4048e5:	test   rsi,rsi
  4048e8:	je     404907 <table_compare_uint16@@Base+0x27>
  4048ea:	movzx  eax,WORD PTR [rdi]
  4048ed:	movzx  ecx,WORD PTR [rsi]
  4048f0:	cmp    ax,cx
  4048f3:	sbb    edx,edx
  4048f5:	cmp    ax,cx
  4048f8:	mov    eax,0x1
  4048fd:	cmovbe eax,edx
  404900:	ret    
  404901:	neg    rsi
  404904:	sbb    eax,eax
  404906:	ret    
  404907:	mov    eax,0x1
  40490c:	ret    
  40490d:	nop    DWORD PTR [rax]

0000000000404910 <table_compare_int32@@Base>:
  404910:	test   rdi,rdi
  404913:	je     404932 <table_compare_int32@@Base+0x22>
  404915:	test   rsi,rsi
  404918:	je     404938 <table_compare_int32@@Base+0x28>
  40491a:	mov    eax,DWORD PTR [rdi]
  40491c:	mov    ecx,DWORD PTR [rsi]
  40491e:	xor    edx,edx
  404920:	cmp    eax,ecx
  404922:	setl   dl
  404925:	neg    edx
  404927:	cmp    eax,ecx
  404929:	mov    eax,0x1
  40492e:	cmovle eax,edx
  404931:	ret    
  404932:	neg    rsi
  404935:	sbb    eax,eax
  404937:	ret    
  404938:	mov    eax,0x1
  40493d:	ret    
  40493e:	xchg   ax,ax

0000000000404940 <table_compare_uint32@@Base>:
  404940:	test   rdi,rdi
  404943:	je     40495d <table_compare_uint32@@Base+0x1d>
  404945:	test   rsi,rsi
  404948:	je     404963 <table_compare_uint32@@Base+0x23>
  40494a:	mov    eax,DWORD PTR [rdi]
  40494c:	mov    ecx,DWORD PTR [rsi]
  40494e:	cmp    eax,ecx
  404950:	sbb    edx,edx
  404952:	cmp    eax,ecx
  404954:	mov    eax,0x1
  404959:	cmovbe eax,edx
  40495c:	ret    
  40495d:	neg    rsi
  404960:	sbb    eax,eax
  404962:	ret    
  404963:	mov    eax,0x1
  404968:	ret    
  404969:	nop    DWORD PTR [rax+0x0]

0000000000404970 <table_compare_int64@@Base>:
  404970:	test   rdi,rdi
  404973:	je     404996 <table_compare_int64@@Base+0x26>
  404975:	test   rsi,rsi
  404978:	je     40499c <table_compare_int64@@Base+0x2c>
  40497a:	mov    rax,QWORD PTR [rdi]
  40497d:	mov    rcx,QWORD PTR [rsi]
  404980:	xor    edx,edx
  404982:	cmp    rax,rcx
  404985:	setl   dl
  404988:	neg    edx
  40498a:	cmp    rax,rcx
  40498d:	mov    eax,0x1
  404992:	cmovle eax,edx
  404995:	ret    
  404996:	neg    rsi
  404999:	sbb    eax,eax
  40499b:	ret    
  40499c:	mov    eax,0x1
  4049a1:	ret    
  4049a2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4049ac:	nop    DWORD PTR [rax+0x0]

00000000004049b0 <table_compare_uint64@@Base>:
  4049b0:	test   rdi,rdi
  4049b3:	je     4049d1 <table_compare_uint64@@Base+0x21>
  4049b5:	test   rsi,rsi
  4049b8:	je     4049d7 <table_compare_uint64@@Base+0x27>
  4049ba:	mov    rax,QWORD PTR [rdi]
  4049bd:	mov    rcx,QWORD PTR [rsi]
  4049c0:	cmp    rax,rcx
  4049c3:	sbb    edx,edx
  4049c5:	cmp    rax,rcx
  4049c8:	mov    eax,0x1
  4049cd:	cmovbe eax,edx
  4049d0:	ret    
  4049d1:	neg    rsi
  4049d4:	sbb    eax,eax
  4049d6:	ret    
  4049d7:	mov    eax,0x1
  4049dc:	ret    
  4049dd:	nop    DWORD PTR [rax]

00000000004049e0 <table_compare_short@@Base>:
  4049e0:	test   rdi,rdi
  4049e3:	je     404a06 <table_compare_short@@Base+0x26>
  4049e5:	test   rsi,rsi
  4049e8:	je     404a0c <table_compare_short@@Base+0x2c>
  4049ea:	movzx  eax,WORD PTR [rdi]
  4049ed:	movzx  ecx,WORD PTR [rsi]
  4049f0:	xor    edx,edx
  4049f2:	cmp    ax,cx
  4049f5:	setl   dl
  4049f8:	neg    edx
  4049fa:	cmp    ax,cx
  4049fd:	mov    eax,0x1
  404a02:	cmovle eax,edx
  404a05:	ret    
  404a06:	neg    rsi
  404a09:	sbb    eax,eax
  404a0b:	ret    
  404a0c:	mov    eax,0x1
  404a11:	ret    
  404a12:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404a1c:	nop    DWORD PTR [rax+0x0]

0000000000404a20 <table_compare_ushort@@Base>:
  404a20:	test   rdi,rdi
  404a23:	je     404a41 <table_compare_ushort@@Base+0x21>
  404a25:	test   rsi,rsi
  404a28:	je     404a47 <table_compare_ushort@@Base+0x27>
  404a2a:	movzx  eax,WORD PTR [rdi]
  404a2d:	movzx  ecx,WORD PTR [rsi]
  404a30:	cmp    ax,cx
  404a33:	sbb    edx,edx
  404a35:	cmp    ax,cx
  404a38:	mov    eax,0x1
  404a3d:	cmovbe eax,edx
  404a40:	ret    
  404a41:	neg    rsi
  404a44:	sbb    eax,eax
  404a46:	ret    
  404a47:	mov    eax,0x1
  404a4c:	ret    
  404a4d:	nop    DWORD PTR [rax]

0000000000404a50 <table_compare_long@@Base>:
  404a50:	test   rdi,rdi
  404a53:	je     404a76 <table_compare_long@@Base+0x26>
  404a55:	test   rsi,rsi
  404a58:	je     404a7c <table_compare_long@@Base+0x2c>
  404a5a:	mov    rax,QWORD PTR [rdi]
  404a5d:	mov    rcx,QWORD PTR [rsi]
  404a60:	xor    edx,edx
  404a62:	cmp    rax,rcx
  404a65:	setl   dl
  404a68:	neg    edx
  404a6a:	cmp    rax,rcx
  404a6d:	mov    eax,0x1
  404a72:	cmovle eax,edx
  404a75:	ret    
  404a76:	neg    rsi
  404a79:	sbb    eax,eax
  404a7b:	ret    
  404a7c:	mov    eax,0x1
  404a81:	ret    
  404a82:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404a8c:	nop    DWORD PTR [rax+0x0]

0000000000404a90 <table_compare_ulong@@Base>:
  404a90:	test   rdi,rdi
  404a93:	je     404ab1 <table_compare_ulong@@Base+0x21>
  404a95:	test   rsi,rsi
  404a98:	je     404ab7 <table_compare_ulong@@Base+0x27>
  404a9a:	mov    rax,QWORD PTR [rdi]
  404a9d:	mov    rcx,QWORD PTR [rsi]
  404aa0:	cmp    rax,rcx
  404aa3:	sbb    edx,edx
  404aa5:	cmp    rax,rcx
  404aa8:	mov    eax,0x1
  404aad:	cmovbe eax,edx
  404ab0:	ret    
  404ab1:	neg    rsi
  404ab4:	sbb    eax,eax
  404ab6:	ret    
  404ab7:	mov    eax,0x1
  404abc:	ret    
  404abd:	nop    DWORD PTR [rax]

0000000000404ac0 <table_compare_llong@@Base>:
  404ac0:	test   rdi,rdi
  404ac3:	je     404ae6 <table_compare_llong@@Base+0x26>
  404ac5:	test   rsi,rsi
  404ac8:	je     404aec <table_compare_llong@@Base+0x2c>
  404aca:	mov    rax,QWORD PTR [rdi]
  404acd:	mov    rcx,QWORD PTR [rsi]
  404ad0:	xor    edx,edx
  404ad2:	cmp    rax,rcx
  404ad5:	setl   dl
  404ad8:	neg    edx
  404ada:	cmp    rax,rcx
  404add:	mov    eax,0x1
  404ae2:	cmovle eax,edx
  404ae5:	ret    
  404ae6:	neg    rsi
  404ae9:	sbb    eax,eax
  404aeb:	ret    
  404aec:	mov    eax,0x1
  404af1:	ret    
  404af2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404afc:	nop    DWORD PTR [rax+0x0]

0000000000404b00 <table_compare_ullong@@Base>:
  404b00:	test   rdi,rdi
  404b03:	je     404b21 <table_compare_ullong@@Base+0x21>
  404b05:	test   rsi,rsi
  404b08:	je     404b27 <table_compare_ullong@@Base+0x27>
  404b0a:	mov    rax,QWORD PTR [rdi]
  404b0d:	mov    rcx,QWORD PTR [rsi]
  404b10:	cmp    rax,rcx
  404b13:	sbb    edx,edx
  404b15:	cmp    rax,rcx
  404b18:	mov    eax,0x1
  404b1d:	cmovbe eax,edx
  404b20:	ret    
  404b21:	neg    rsi
  404b24:	sbb    eax,eax
  404b26:	ret    
  404b27:	mov    eax,0x1
  404b2c:	ret    
  404b2d:	nop    DWORD PTR [rax]

0000000000404b30 <table_compare_float@@Base>:
  404b30:	test   rdi,rdi
  404b33:	je     404b5a <table_compare_float@@Base+0x2a>
  404b35:	test   rsi,rsi
  404b38:	je     404b60 <table_compare_float@@Base+0x30>
  404b3a:	vmovss xmm0,DWORD PTR [rdi]
  404b3e:	vmovss xmm1,DWORD PTR [rsi]
  404b42:	xor    ecx,ecx
  404b44:	vucomiss xmm1,xmm0
  404b48:	seta   cl
  404b4b:	neg    ecx
  404b4d:	vucomiss xmm0,xmm1
  404b51:	mov    eax,0x1
  404b56:	cmovbe eax,ecx
  404b59:	ret    
  404b5a:	neg    rsi
  404b5d:	sbb    eax,eax
  404b5f:	ret    
  404b60:	mov    eax,0x1
  404b65:	ret    
  404b66:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000404b70 <table_compare_double@@Base>:
  404b70:	test   rdi,rdi
  404b73:	je     404b9a <table_compare_double@@Base+0x2a>
  404b75:	test   rsi,rsi
  404b78:	je     404ba0 <table_compare_double@@Base+0x30>
  404b7a:	vmovsd xmm0,QWORD PTR [rdi]
  404b7e:	vmovsd xmm1,QWORD PTR [rsi]
  404b82:	xor    ecx,ecx
  404b84:	vucomisd xmm1,xmm0
  404b88:	seta   cl
  404b8b:	neg    ecx
  404b8d:	vucomisd xmm0,xmm1
  404b91:	mov    eax,0x1
  404b96:	cmovbe eax,ecx
  404b99:	ret    
  404b9a:	neg    rsi
  404b9d:	sbb    eax,eax
  404b9f:	ret    
  404ba0:	mov    eax,0x1
  404ba5:	ret    
  404ba6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000404bb0 <table_compare_ldouble@@Base>:
  404bb0:	test   rdi,rdi
  404bb3:	je     404bd6 <table_compare_ldouble@@Base+0x26>
  404bb5:	test   rsi,rsi
  404bb8:	je     404bdc <table_compare_ldouble@@Base+0x2c>
  404bba:	fld    TBYTE PTR [rdi]
  404bbc:	fld    TBYTE PTR [rsi]
  404bbe:	xor    ecx,ecx
  404bc0:	fucomi st,st(1)
  404bc2:	seta   cl
  404bc5:	neg    ecx
  404bc7:	fxch   st(1)
  404bc9:	fucomip st,st(1)
  404bcb:	fstp   st(0)
  404bcd:	mov    eax,0x1
  404bd2:	cmovbe eax,ecx
  404bd5:	ret    
  404bd6:	neg    rsi
  404bd9:	sbb    eax,eax
  404bdb:	ret    
  404bdc:	mov    eax,0x1
  404be1:	ret    
  404be2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404bec:	nop    DWORD PTR [rax+0x0]

0000000000404bf0 <table_compare_char@@Base>:
  404bf0:	test   rdi,rdi
  404bf3:	je     404c12 <table_compare_char@@Base+0x22>
  404bf5:	test   rsi,rsi
  404bf8:	je     404c18 <table_compare_char@@Base+0x28>
  404bfa:	mov    al,BYTE PTR [rdi]
  404bfc:	mov    cl,BYTE PTR [rsi]
  404bfe:	xor    edx,edx
  404c00:	cmp    al,cl
  404c02:	setl   dl
  404c05:	neg    edx
  404c07:	cmp    al,cl
  404c09:	mov    eax,0x1
  404c0e:	cmovle eax,edx
  404c11:	ret    
  404c12:	neg    rsi
  404c15:	sbb    eax,eax
  404c17:	ret    
  404c18:	mov    eax,0x1
  404c1d:	ret    
  404c1e:	xchg   ax,ax

0000000000404c20 <table_compare_uchar@@Base>:
  404c20:	test   rdi,rdi
  404c23:	je     404c3d <table_compare_uchar@@Base+0x1d>
  404c25:	test   rsi,rsi
  404c28:	je     404c43 <table_compare_uchar@@Base+0x23>
  404c2a:	mov    al,BYTE PTR [rdi]
  404c2c:	mov    cl,BYTE PTR [rsi]
  404c2e:	cmp    al,cl
  404c30:	sbb    edx,edx
  404c32:	cmp    al,cl
  404c34:	mov    eax,0x1
  404c39:	cmovbe eax,edx
  404c3c:	ret    
  404c3d:	neg    rsi
  404c40:	sbb    eax,eax
  404c42:	ret    
  404c43:	mov    eax,0x1
  404c48:	ret    
  404c49:	nop    DWORD PTR [rax+0x0]

0000000000404c50 <table_compare_string@@Base>:
  404c50:	test   rdi,rdi
  404c53:	je     404c5f <table_compare_string@@Base+0xf>
  404c55:	test   rsi,rsi
  404c58:	je     404c65 <table_compare_string@@Base+0x15>
  404c5a:	jmp    4030a0 <strcmp@plt>
  404c5f:	neg    rsi
  404c62:	sbb    eax,eax
  404c64:	ret    
  404c65:	mov    eax,0x1
  404c6a:	ret    
  404c6b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404c70 <table_compare_ptr@@Base>:
  404c70:	cmp    rdi,rsi
  404c73:	sbb    ecx,ecx
  404c75:	cmp    rdi,rsi
  404c78:	mov    eax,0x1
  404c7d:	cmovbe eax,ecx
  404c80:	ret    
  404c81:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404c8b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404c90 <table_get_default_compare_function_for_data_type@@Base>:
  404c90:	cmp    edi,0x17
  404c93:	ja     404ca4 <table_get_default_compare_function_for_data_type@@Base+0x14>
  404c95:	movsxd rax,edi
  404c98:	lea    rcx,[rip+0x50b1]        # 409d50 <_IO_stdin_used@@Base+0x2d50>
  404c9f:	mov    rax,QWORD PTR [rcx+rax*8]
  404ca3:	ret    
  404ca4:	xor    eax,eax
  404ca6:	ret    
  404ca7:	nop    WORD PTR [rax+rax*1+0x0]

0000000000404cb0 <table_get@@Base>:
  404cb0:	push   rax
  404cb1:	call   4065d0 <table_get_cell_ptr@@Base>
  404cb6:	mov    rax,QWORD PTR [rax]
  404cb9:	pop    rcx
  404cba:	ret    
  404cbb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404cc0 <table_get_bool@@Base>:
  404cc0:	push   rax
  404cc1:	call   4065d0 <table_get_cell_ptr@@Base>
  404cc6:	mov    rax,QWORD PTR [rax]
  404cc9:	mov    al,BYTE PTR [rax]
  404ccb:	pop    rcx
  404ccc:	ret    
  404ccd:	nop    DWORD PTR [rax]

0000000000404cd0 <table_get_int@@Base>:
  404cd0:	push   rax
  404cd1:	call   4065d0 <table_get_cell_ptr@@Base>
  404cd6:	mov    rax,QWORD PTR [rax]
  404cd9:	mov    eax,DWORD PTR [rax]
  404cdb:	pop    rcx
  404cdc:	ret    
  404cdd:	nop    DWORD PTR [rax]

0000000000404ce0 <table_get_uint@@Base>:
  404ce0:	push   rax
  404ce1:	call   4065d0 <table_get_cell_ptr@@Base>
  404ce6:	mov    rax,QWORD PTR [rax]
  404ce9:	mov    eax,DWORD PTR [rax]
  404ceb:	pop    rcx
  404cec:	ret    
  404ced:	nop    DWORD PTR [rax]

0000000000404cf0 <table_get_int8@@Base>:
  404cf0:	push   rax
  404cf1:	call   4065d0 <table_get_cell_ptr@@Base>
  404cf6:	mov    rax,QWORD PTR [rax]
  404cf9:	mov    al,BYTE PTR [rax]
  404cfb:	pop    rcx
  404cfc:	ret    
  404cfd:	nop    DWORD PTR [rax]

0000000000404d00 <table_get_uint8@@Base>:
  404d00:	push   rax
  404d01:	call   4065d0 <table_get_cell_ptr@@Base>
  404d06:	mov    rax,QWORD PTR [rax]
  404d09:	mov    al,BYTE PTR [rax]
  404d0b:	pop    rcx
  404d0c:	ret    
  404d0d:	nop    DWORD PTR [rax]

0000000000404d10 <table_get_int16@@Base>:
  404d10:	push   rax
  404d11:	call   4065d0 <table_get_cell_ptr@@Base>
  404d16:	mov    rax,QWORD PTR [rax]
  404d19:	movzx  eax,WORD PTR [rax]
  404d1c:	pop    rcx
  404d1d:	ret    
  404d1e:	xchg   ax,ax

0000000000404d20 <table_get_uint16@@Base>:
  404d20:	push   rax
  404d21:	call   4065d0 <table_get_cell_ptr@@Base>
  404d26:	mov    rax,QWORD PTR [rax]
  404d29:	movzx  eax,WORD PTR [rax]
  404d2c:	pop    rcx
  404d2d:	ret    
  404d2e:	xchg   ax,ax

0000000000404d30 <table_get_int32@@Base>:
  404d30:	push   rax
  404d31:	call   4065d0 <table_get_cell_ptr@@Base>
  404d36:	mov    rax,QWORD PTR [rax]
  404d39:	mov    eax,DWORD PTR [rax]
  404d3b:	pop    rcx
  404d3c:	ret    
  404d3d:	nop    DWORD PTR [rax]

0000000000404d40 <table_get_uint32@@Base>:
  404d40:	push   rax
  404d41:	call   4065d0 <table_get_cell_ptr@@Base>
  404d46:	mov    rax,QWORD PTR [rax]
  404d49:	mov    eax,DWORD PTR [rax]
  404d4b:	pop    rcx
  404d4c:	ret    
  404d4d:	nop    DWORD PTR [rax]

0000000000404d50 <table_get_int64@@Base>:
  404d50:	push   rax
  404d51:	call   4065d0 <table_get_cell_ptr@@Base>
  404d56:	mov    rax,QWORD PTR [rax]
  404d59:	mov    rax,QWORD PTR [rax]
  404d5c:	pop    rcx
  404d5d:	ret    
  404d5e:	xchg   ax,ax

0000000000404d60 <table_get_uint64@@Base>:
  404d60:	push   rax
  404d61:	call   4065d0 <table_get_cell_ptr@@Base>
  404d66:	mov    rax,QWORD PTR [rax]
  404d69:	mov    rax,QWORD PTR [rax]
  404d6c:	pop    rcx
  404d6d:	ret    
  404d6e:	xchg   ax,ax

0000000000404d70 <table_get_short@@Base>:
  404d70:	push   rax
  404d71:	call   4065d0 <table_get_cell_ptr@@Base>
  404d76:	mov    rax,QWORD PTR [rax]
  404d79:	movzx  eax,WORD PTR [rax]
  404d7c:	pop    rcx
  404d7d:	ret    
  404d7e:	xchg   ax,ax

0000000000404d80 <table_get_ushort@@Base>:
  404d80:	push   rax
  404d81:	call   4065d0 <table_get_cell_ptr@@Base>
  404d86:	mov    rax,QWORD PTR [rax]
  404d89:	movzx  eax,WORD PTR [rax]
  404d8c:	pop    rcx
  404d8d:	ret    
  404d8e:	xchg   ax,ax

0000000000404d90 <table_get_long@@Base>:
  404d90:	push   rax
  404d91:	call   4065d0 <table_get_cell_ptr@@Base>
  404d96:	mov    rax,QWORD PTR [rax]
  404d99:	mov    rax,QWORD PTR [rax]
  404d9c:	pop    rcx
  404d9d:	ret    
  404d9e:	xchg   ax,ax

0000000000404da0 <table_get_ulong@@Base>:
  404da0:	push   rax
  404da1:	call   4065d0 <table_get_cell_ptr@@Base>
  404da6:	mov    rax,QWORD PTR [rax]
  404da9:	mov    rax,QWORD PTR [rax]
  404dac:	pop    rcx
  404dad:	ret    
  404dae:	xchg   ax,ax

0000000000404db0 <table_get_llong@@Base>:
  404db0:	push   rax
  404db1:	call   4065d0 <table_get_cell_ptr@@Base>
  404db6:	mov    rax,QWORD PTR [rax]
  404db9:	mov    rax,QWORD PTR [rax]
  404dbc:	pop    rcx
  404dbd:	ret    
  404dbe:	xchg   ax,ax

0000000000404dc0 <table_get_ullong@@Base>:
  404dc0:	push   rax
  404dc1:	call   4065d0 <table_get_cell_ptr@@Base>
  404dc6:	mov    rax,QWORD PTR [rax]
  404dc9:	mov    rax,QWORD PTR [rax]
  404dcc:	pop    rcx
  404dcd:	ret    
  404dce:	xchg   ax,ax

0000000000404dd0 <table_get_float@@Base>:
  404dd0:	push   rax
  404dd1:	call   4065d0 <table_get_cell_ptr@@Base>
  404dd6:	mov    rax,QWORD PTR [rax]
  404dd9:	vmovss xmm0,DWORD PTR [rax]
  404ddd:	pop    rax
  404dde:	ret    
  404ddf:	nop

0000000000404de0 <table_get_double@@Base>:
  404de0:	push   rax
  404de1:	call   4065d0 <table_get_cell_ptr@@Base>
  404de6:	mov    rax,QWORD PTR [rax]
  404de9:	vmovsd xmm0,QWORD PTR [rax]
  404ded:	pop    rax
  404dee:	ret    
  404def:	nop

0000000000404df0 <table_get_ldouble@@Base>:
  404df0:	push   rax
  404df1:	call   4065d0 <table_get_cell_ptr@@Base>
  404df6:	mov    rax,QWORD PTR [rax]
  404df9:	fld    TBYTE PTR [rax]
  404dfb:	pop    rax
  404dfc:	ret    
  404dfd:	nop    DWORD PTR [rax]

0000000000404e00 <table_get_char@@Base>:
  404e00:	push   rax
  404e01:	call   4065d0 <table_get_cell_ptr@@Base>
  404e06:	mov    rax,QWORD PTR [rax]
  404e09:	mov    al,BYTE PTR [rax]
  404e0b:	pop    rcx
  404e0c:	ret    
  404e0d:	nop    DWORD PTR [rax]

0000000000404e10 <table_get_uchar@@Base>:
  404e10:	push   rax
  404e11:	call   4065d0 <table_get_cell_ptr@@Base>
  404e16:	mov    rax,QWORD PTR [rax]
  404e19:	mov    al,BYTE PTR [rax]
  404e1b:	pop    rcx
  404e1c:	ret    
  404e1d:	nop    DWORD PTR [rax]

0000000000404e20 <table_get_string@@Base>:
  404e20:	push   rax
  404e21:	call   4065d0 <table_get_cell_ptr@@Base>
  404e26:	mov    rax,QWORD PTR [rax]
  404e29:	pop    rcx
  404e2a:	ret    
  404e2b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404e30 <table_get_ptr@@Base>:
  404e30:	push   rax
  404e31:	call   4065d0 <table_get_cell_ptr@@Base>
  404e36:	mov    rax,QWORD PTR [rax]
  404e39:	pop    rcx
  404e3a:	ret    
  404e3b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404e40 <table_row_init@@Base>:
  404e40:	push   r14
  404e42:	push   rbx
  404e43:	push   rax
  404e44:	mov    rax,QWORD PTR [rdi+0x18]
  404e48:	mov    r14,QWORD PTR [rdi+0x20]
  404e4c:	movsxd rbx,esi
  404e4f:	shl    rax,0x3
  404e53:	mov    rdi,rax
  404e56:	call   4030c0 <malloc@plt>
  404e5b:	mov    QWORD PTR [r14+rbx*8],rax
  404e5f:	add    rsp,0x8
  404e63:	pop    rbx
  404e64:	pop    r14
  404e66:	ret    
  404e67:	nop    WORD PTR [rax+rax*1+0x0]

0000000000404e70 <table_get_row_ptr@@Base>:
  404e70:	movsxd rax,esi
  404e73:	shl    rax,0x3
  404e77:	add    rax,QWORD PTR [rdi+0x20]
  404e7b:	ret    
  404e7c:	nop    DWORD PTR [rax+0x0]

0000000000404e80 <table_row_destroy@@Base>:
  404e80:	push   rbp
  404e81:	push   r15
  404e83:	push   r14
  404e85:	push   r13
  404e87:	push   r12
  404e89:	push   rbx
  404e8a:	push   rax
  404e8b:	mov    r14d,esi
  404e8e:	mov    r15,rdi
  404e91:	call   4041e0 <table_get_column_length@@Base>
  404e96:	mov    r12,QWORD PTR [r15+0x20]
  404e9a:	movsxd r13,r14d
  404e9d:	test   eax,eax
  404e9f:	jle    404ec4 <table_row_destroy@@Base+0x44>
  404ea1:	mov    ebp,eax
  404ea3:	xor    ebx,ebx
  404ea5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404eaf:	nop
  404eb0:	mov    rdi,r15
  404eb3:	mov    esi,r14d
  404eb6:	mov    edx,ebx
  404eb8:	call   4065f0 <table_cell_destroy@@Base>
  404ebd:	add    ebx,0x1
  404ec0:	cmp    ebp,ebx
  404ec2:	jne    404eb0 <table_row_destroy@@Base+0x30>
  404ec4:	mov    rdi,QWORD PTR [r12+r13*8]
  404ec8:	add    rsp,0x8
  404ecc:	test   rdi,rdi
  404ecf:	je     404ee0 <table_row_destroy@@Base+0x60>
  404ed1:	pop    rbx
  404ed2:	pop    r12
  404ed4:	pop    r13
  404ed6:	pop    r14
  404ed8:	pop    r15
  404eda:	pop    rbp
  404edb:	jmp    403030 <free@plt>
  404ee0:	pop    rbx
  404ee1:	pop    r12
  404ee3:	pop    r13
  404ee5:	pop    r14
  404ee7:	pop    r15
  404ee9:	pop    rbp
  404eea:	ret    
  404eeb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404ef0 <table_get_row_length@@Base>:
  404ef0:	mov    eax,DWORD PTR [rdi+0x28]
  404ef3:	ret    
  404ef4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404efe:	xchg   ax,ax

0000000000404f00 <table_add_row@@Base>:
  404f00:	push   rbp
  404f01:	push   r15
  404f03:	push   r14
  404f05:	push   r12
  404f07:	push   rbx
  404f08:	mov    r12,rdi
  404f0b:	mov    r15d,DWORD PTR [rdi+0x28]
  404f0f:	movsxd r14,r15d
  404f12:	mov    rsi,QWORD PTR [rdi+0x30]
  404f16:	mov    rax,r14
  404f19:	or     rax,rsi
  404f1c:	shr    rax,0x20
  404f20:	je     404fc1 <table_add_row@@Base+0xc1>
  404f26:	xor    edx,edx
  404f28:	mov    rax,r14
  404f2b:	div    rsi
  404f2e:	test   rdx,rdx
  404f31:	jne    404f58 <table_add_row@@Base+0x58>
  404f33:	add    rsi,QWORD PTR [r12+0x38]
  404f38:	mov    QWORD PTR [r12+0x38],rsi
  404f3d:	mov    rdi,QWORD PTR [r12+0x20]
  404f42:	shl    rsi,0x3
  404f46:	call   4030e0 <realloc@plt>
  404f4b:	mov    QWORD PTR [r12+0x20],rax
  404f50:	mov    r15d,DWORD PTR [r12+0x28]
  404f55:	movsxd r14,r15d
  404f58:	mov    rdi,r12
  404f5b:	call   4041e0 <table_get_column_length@@Base>
  404f60:	mov    ebp,eax
  404f62:	mov    rdi,QWORD PTR [r12+0x18]
  404f67:	mov    rbx,QWORD PTR [r12+0x20]
  404f6c:	shl    rdi,0x3
  404f70:	call   4030c0 <malloc@plt>
  404f75:	mov    QWORD PTR [rbx+r14*8],rax
  404f79:	test   ebp,ebp
  404f7b:	jle    404f94 <table_add_row@@Base+0x94>
  404f7d:	xor    ebx,ebx
  404f7f:	nop
  404f80:	mov    rdi,r12
  404f83:	mov    esi,r15d
  404f86:	mov    edx,ebx
  404f88:	call   4065b0 <table_cell_init@@Base>
  404f8d:	add    ebx,0x1
  404f90:	cmp    ebp,ebx
  404f92:	jne    404f80 <table_add_row@@Base+0x80>
  404f94:	mov    esi,DWORD PTR [r12+0x28]
  404f99:	mov    edx,0xffffffff
  404f9e:	mov    ecx,0x2
  404fa3:	mov    rdi,r12
  404fa6:	call   4040f0 <table_notify@@Base>
  404fab:	mov    eax,DWORD PTR [r12+0x28]
  404fb0:	lea    ecx,[rax+0x1]
  404fb3:	mov    DWORD PTR [r12+0x28],ecx
  404fb8:	pop    rbx
  404fb9:	pop    r12
  404fbb:	pop    r14
  404fbd:	pop    r15
  404fbf:	pop    rbp
  404fc0:	ret    
  404fc1:	xor    edx,edx
  404fc3:	mov    eax,r15d
  404fc6:	div    esi
  404fc8:	test   rdx,rdx
  404fcb:	jne    404f58 <table_add_row@@Base+0x58>
  404fcd:	jmp    404f33 <table_add_row@@Base+0x33>
  404fd2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404fdc:	nop    DWORD PTR [rax+0x0]

0000000000404fe0 <table_remove_row@@Base>:
  404fe0:	push   rbp
  404fe1:	push   r15
  404fe3:	push   r14
  404fe5:	push   r12
  404fe7:	push   rbx
  404fe8:	mov    r14d,esi
  404feb:	mov    rbx,rdi
  404fee:	mov    r12d,DWORD PTR [rdi+0x28]
  404ff2:	call   4041e0 <table_get_column_length@@Base>
  404ff7:	test   eax,eax
  404ff9:	jle    405031 <table_remove_row@@Base+0x51>
  404ffb:	mov    r15d,eax
  404ffe:	xor    ebp,ebp
  405000:	mov    rdi,rbx
  405003:	mov    esi,ebp
  405005:	call   404260 <table_get_column_data_type@@Base>
  40500a:	cmp    eax,0x17
  40500d:	je     405029 <table_remove_row@@Base+0x49>
  40500f:	mov    rdi,rbx
  405012:	mov    esi,r14d
  405015:	mov    edx,ebp
  405017:	call   4065d0 <table_get_cell_ptr@@Base>
  40501c:	mov    rdi,QWORD PTR [rax]
  40501f:	test   rdi,rdi
  405022:	je     405029 <table_remove_row@@Base+0x49>
  405024:	call   403030 <free@plt>
  405029:	add    ebp,0x1
  40502c:	cmp    r15d,ebp
  40502f:	jne    405000 <table_remove_row@@Base+0x20>
  405031:	mov    rax,QWORD PTR [rbx+0x20]
  405035:	movsxd rbp,r14d
  405038:	mov    rdi,QWORD PTR [rax+rbp*8]
  40503c:	test   rdi,rdi
  40503f:	je     405046 <table_remove_row@@Base+0x66>
  405041:	call   403030 <free@plt>
  405046:	add    r12d,0xffffffff
  40504a:	mov    ecx,r12d
  40504d:	sub    ecx,r14d
  405050:	jle    405108 <table_remove_row@@Base+0x128>
  405056:	movsxd rax,r12d
  405059:	mov    rdx,rbp
  40505c:	not    rdx
  40505f:	add    rdx,rax
  405062:	and    rcx,0x7
  405066:	je     405087 <table_remove_row@@Base+0xa7>
  405068:	neg    rcx
  40506b:	nop    DWORD PTR [rax+rax*1+0x0]
  405070:	mov    rsi,QWORD PTR [rbx+0x20]
  405074:	mov    rdi,QWORD PTR [rsi+rbp*8+0x8]
  405079:	mov    QWORD PTR [rsi+rbp*8],rdi
  40507d:	add    rbp,0x1
  405081:	add    rcx,0x1
  405085:	jne    405070 <table_remove_row@@Base+0x90>
  405087:	cmp    rdx,0x7
  40508b:	jb     405108 <table_remove_row@@Base+0x128>
  40508d:	nop    DWORD PTR [rax]
  405090:	mov    rcx,QWORD PTR [rbx+0x20]
  405094:	mov    rdx,QWORD PTR [rcx+rbp*8+0x8]
  405099:	mov    QWORD PTR [rcx+rbp*8],rdx
  40509d:	mov    rcx,QWORD PTR [rbx+0x20]
  4050a1:	mov    rdx,QWORD PTR [rcx+rbp*8+0x10]
  4050a6:	mov    QWORD PTR [rcx+rbp*8+0x8],rdx
  4050ab:	mov    rcx,QWORD PTR [rbx+0x20]
  4050af:	mov    rdx,QWORD PTR [rcx+rbp*8+0x18]
  4050b4:	mov    QWORD PTR [rcx+rbp*8+0x10],rdx
  4050b9:	mov    rcx,QWORD PTR [rbx+0x20]
  4050bd:	mov    rdx,QWORD PTR [rcx+rbp*8+0x20]
  4050c2:	mov    QWORD PTR [rcx+rbp*8+0x18],rdx
  4050c7:	mov    rcx,QWORD PTR [rbx+0x20]
  4050cb:	mov    rdx,QWORD PTR [rcx+rbp*8+0x28]
  4050d0:	mov    QWORD PTR [rcx+rbp*8+0x20],rdx
  4050d5:	mov    rcx,QWORD PTR [rbx+0x20]
  4050d9:	mov    rdx,QWORD PTR [rcx+rbp*8+0x30]
  4050de:	mov    QWORD PTR [rcx+rbp*8+0x28],rdx
  4050e3:	mov    rcx,QWORD PTR [rbx+0x20]
  4050e7:	mov    rdx,QWORD PTR [rcx+rbp*8+0x38]
  4050ec:	mov    QWORD PTR [rcx+rbp*8+0x30],rdx
  4050f1:	mov    rcx,QWORD PTR [rbx+0x20]
  4050f5:	mov    rdx,QWORD PTR [rcx+rbp*8+0x40]
  4050fa:	mov    QWORD PTR [rcx+rbp*8+0x38],rdx
  4050ff:	add    rbp,0x8
  405103:	cmp    rax,rbp
  405106:	jne    405090 <table_remove_row@@Base+0xb0>
  405108:	movsxd rax,DWORD PTR [rbx+0x28]
  40510c:	add    rax,0xffffffffffffffff
  405110:	mov    DWORD PTR [rbx+0x28],eax
  405113:	mov    rcx,QWORD PTR [rbx+0x30]
  405117:	mov    rdx,rax
  40511a:	or     rdx,rcx
  40511d:	shr    rdx,0x20
  405121:	je     405169 <table_remove_row@@Base+0x189>
  405123:	xor    edx,edx
  405125:	div    rcx
  405128:	test   rdx,rdx
  40512b:	jne    405149 <table_remove_row@@Base+0x169>
  40512d:	mov    rdi,QWORD PTR [rbx+0x20]
  405131:	mov    rsi,QWORD PTR [rbx+0x38]
  405135:	sub    rsi,rcx
  405138:	mov    QWORD PTR [rbx+0x38],rsi
  40513c:	shl    rsi,0x3
  405140:	call   4030e0 <realloc@plt>
  405145:	mov    QWORD PTR [rbx+0x20],rax
  405149:	mov    edx,0xffffffff
  40514e:	mov    ecx,0x4
  405153:	mov    rdi,rbx
  405156:	mov    esi,r14d
  405159:	call   4040f0 <table_notify@@Base>
  40515e:	xor    eax,eax
  405160:	pop    rbx
  405161:	pop    r12
  405163:	pop    r14
  405165:	pop    r15
  405167:	pop    rbp
  405168:	ret    
  405169:	xor    edx,edx
  40516b:	div    ecx
  40516d:	test   rdx,rdx
  405170:	jne    405149 <table_remove_row@@Base+0x169>
  405172:	jmp    40512d <table_remove_row@@Base+0x14d>
  405174:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40517e:	xchg   ax,ax

0000000000405180 <table_set_row_ptr@@Base>:
  405180:	mov    rax,QWORD PTR [rdi+0x20]
  405184:	movsxd rcx,esi
  405187:	mov    rdx,QWORD PTR [rdx]
  40518a:	mov    QWORD PTR [rax+rcx*8],rdx
  40518e:	ret    
  40518f:	nop

0000000000405190 <table_set@@Base>:
  405190:	push   rbp
  405191:	push   r15
  405193:	push   r14
  405195:	push   r13
  405197:	push   r12
  405199:	push   rbx
  40519a:	push   rax
  40519b:	mov    r12d,r8d
  40519e:	mov    QWORD PTR [rsp],rcx
  4051a2:	mov    ebx,edx
  4051a4:	mov    r14d,esi
  4051a7:	mov    rbp,rdi
  4051aa:	call   4065d0 <table_get_cell_ptr@@Base>
  4051af:	mov    r13,rax
  4051b2:	mov    rdi,rbp
  4051b5:	mov    esi,ebx
  4051b7:	call   4041b0 <table_get_col_ptr@@Base>
  4051bc:	mov    r15d,0xffffffff
  4051c2:	cmp    r12d,0x17
  4051c6:	ja     405407 <table_set@@Base+0x277>
  4051cc:	mov    ecx,r12d
  4051cf:	lea    rdx,[rip+0x1fa6]        # 40717c <_IO_stdin_used@@Base+0x17c>
  4051d6:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  4051da:	add    rcx,rdx
  4051dd:	jmp    rcx
  4051df:	cmp    DWORD PTR [rax+0x8],0x0
  4051e3:	jne    405407 <table_set@@Base+0x277>
  4051e9:	jmp    4052e7 <table_set@@Base+0x157>
  4051ee:	cmp    DWORD PTR [rax+0x8],0x1
  4051f2:	je     4052e7 <table_set@@Base+0x157>
  4051f8:	jmp    405407 <table_set@@Base+0x277>
  4051fd:	cmp    DWORD PTR [rax+0x8],0x2
  405201:	je     4053ce <table_set@@Base+0x23e>
  405207:	jmp    405407 <table_set@@Base+0x277>
  40520c:	cmp    DWORD PTR [rax+0x8],0x3
  405210:	je     4053ce <table_set@@Base+0x23e>
  405216:	jmp    405407 <table_set@@Base+0x277>
  40521b:	cmp    DWORD PTR [rax+0x8],0x4
  40521f:	je     405282 <table_set@@Base+0xf2>
  405221:	jmp    405407 <table_set@@Base+0x277>
  405226:	cmp    DWORD PTR [rax+0x8],0x5
  40522a:	je     405282 <table_set@@Base+0xf2>
  40522c:	jmp    405407 <table_set@@Base+0x277>
  405231:	cmp    DWORD PTR [rax+0x8],0x6
  405235:	je     4052e7 <table_set@@Base+0x157>
  40523b:	jmp    405407 <table_set@@Base+0x277>
  405240:	cmp    DWORD PTR [rax+0x8],0x7
  405244:	je     4052e7 <table_set@@Base+0x157>
  40524a:	jmp    405407 <table_set@@Base+0x277>
  40524f:	cmp    DWORD PTR [rax+0x8],0x8
  405253:	je     40531e <table_set@@Base+0x18e>
  405259:	jmp    405407 <table_set@@Base+0x277>
  40525e:	cmp    DWORD PTR [rax+0x8],0x9
  405262:	je     40531e <table_set@@Base+0x18e>
  405268:	jmp    405407 <table_set@@Base+0x277>
  40526d:	cmp    DWORD PTR [rax+0x8],0xa
  405271:	je     405282 <table_set@@Base+0xf2>
  405273:	jmp    405407 <table_set@@Base+0x277>
  405278:	cmp    DWORD PTR [rax+0x8],0xb
  40527c:	jne    405407 <table_set@@Base+0x277>
  405282:	mov    rax,QWORD PTR [r13+0x0]
  405286:	test   rax,rax
  405289:	jne    4052a2 <table_set@@Base+0x112>
  40528b:	mov    edi,0x2
  405290:	call   4030c0 <malloc@plt>
  405295:	mov    QWORD PTR [r13+0x0],rax
  405299:	test   rax,rax
  40529c:	je     405407 <table_set@@Base+0x277>
  4052a2:	mov    rcx,QWORD PTR [rsp]
  4052a6:	movzx  ecx,WORD PTR [rcx]
  4052a9:	mov    WORD PTR [rax],cx
  4052ac:	jmp    4053f2 <table_set@@Base+0x262>
  4052b1:	cmp    DWORD PTR [rax+0x8],0xc
  4052b5:	je     40531e <table_set@@Base+0x18e>
  4052b7:	jmp    405407 <table_set@@Base+0x277>
  4052bc:	cmp    DWORD PTR [rax+0x8],0xd
  4052c0:	je     40531e <table_set@@Base+0x18e>
  4052c2:	jmp    405407 <table_set@@Base+0x277>
  4052c7:	cmp    DWORD PTR [rax+0x8],0xe
  4052cb:	je     40531e <table_set@@Base+0x18e>
  4052cd:	jmp    405407 <table_set@@Base+0x277>
  4052d2:	cmp    DWORD PTR [rax+0x8],0xf
  4052d6:	je     40531e <table_set@@Base+0x18e>
  4052d8:	jmp    405407 <table_set@@Base+0x277>
  4052dd:	cmp    DWORD PTR [rax+0x8],0x10
  4052e1:	jne    405407 <table_set@@Base+0x277>
  4052e7:	mov    rax,QWORD PTR [r13+0x0]
  4052eb:	test   rax,rax
  4052ee:	jne    405307 <table_set@@Base+0x177>
  4052f0:	mov    edi,0x4
  4052f5:	call   4030c0 <malloc@plt>
  4052fa:	mov    QWORD PTR [r13+0x0],rax
  4052fe:	test   rax,rax
  405301:	je     405407 <table_set@@Base+0x277>
  405307:	mov    rcx,QWORD PTR [rsp]
  40530b:	mov    ecx,DWORD PTR [rcx]
  40530d:	mov    DWORD PTR [rax],ecx
  40530f:	jmp    4053f2 <table_set@@Base+0x262>
  405314:	cmp    DWORD PTR [rax+0x8],0x11
  405318:	jne    405407 <table_set@@Base+0x277>
  40531e:	mov    rax,QWORD PTR [r13+0x0]
  405322:	test   rax,rax
  405325:	jne    40533e <table_set@@Base+0x1ae>
  405327:	mov    edi,0x8
  40532c:	call   4030c0 <malloc@plt>
  405331:	mov    QWORD PTR [r13+0x0],rax
  405335:	test   rax,rax
  405338:	je     405407 <table_set@@Base+0x277>
  40533e:	mov    rcx,QWORD PTR [rsp]
  405342:	mov    rcx,QWORD PTR [rcx]
  405345:	mov    QWORD PTR [rax],rcx
  405348:	jmp    4053f2 <table_set@@Base+0x262>
  40534d:	cmp    DWORD PTR [rax+0x8],0x12
  405351:	jne    405407 <table_set@@Base+0x277>
  405357:	mov    rax,QWORD PTR [r13+0x0]
  40535b:	test   rax,rax
  40535e:	jne    405377 <table_set@@Base+0x1e7>
  405360:	mov    edi,0x10
  405365:	call   4030c0 <malloc@plt>
  40536a:	mov    QWORD PTR [r13+0x0],rax
  40536e:	test   rax,rax
  405371:	je     405407 <table_set@@Base+0x277>
  405377:	mov    rcx,QWORD PTR [rsp]
  40537b:	vmovups xmm0,XMMWORD PTR [rcx]
  40537f:	vmovups XMMWORD PTR [rax],xmm0
  405383:	jmp    4053f2 <table_set@@Base+0x262>
  405385:	cmp    DWORD PTR [rax+0x8],0x13
  405389:	je     4053ce <table_set@@Base+0x23e>
  40538b:	jmp    405407 <table_set@@Base+0x277>
  40538d:	cmp    DWORD PTR [rax+0x8],0x14
  405391:	je     4053ce <table_set@@Base+0x23e>
  405393:	jmp    405407 <table_set@@Base+0x277>
  405395:	cmp    DWORD PTR [rax+0x8],0x15
  405399:	jne    405407 <table_set@@Base+0x277>
  40539b:	mov    rdi,QWORD PTR [rsp]
  40539f:	call   403060 <strlen@plt>
  4053a4:	mov    rdi,QWORD PTR [r13+0x0]
  4053a8:	lea    rsi,[rax+0x1]
  4053ac:	call   4030e0 <realloc@plt>
  4053b1:	mov    QWORD PTR [r13+0x0],rax
  4053b5:	test   rax,rax
  4053b8:	je     405407 <table_set@@Base+0x277>
  4053ba:	mov    rdi,rax
  4053bd:	mov    rsi,QWORD PTR [rsp]
  4053c1:	call   403050 <strcpy@plt>
  4053c6:	jmp    4053f2 <table_set@@Base+0x262>
  4053c8:	cmp    DWORD PTR [rax+0x8],0x16
  4053cc:	jne    405407 <table_set@@Base+0x277>
  4053ce:	mov    rax,QWORD PTR [r13+0x0]
  4053d2:	test   rax,rax
  4053d5:	jne    4053ea <table_set@@Base+0x25a>
  4053d7:	mov    edi,0x1
  4053dc:	call   4030c0 <malloc@plt>
  4053e1:	mov    QWORD PTR [r13+0x0],rax
  4053e5:	test   rax,rax
  4053e8:	je     405407 <table_set@@Base+0x277>
  4053ea:	mov    rcx,QWORD PTR [rsp]
  4053ee:	mov    cl,BYTE PTR [rcx]
  4053f0:	mov    BYTE PTR [rax],cl
  4053f2:	mov    ecx,0x1
  4053f7:	mov    rdi,rbp
  4053fa:	mov    esi,r14d
  4053fd:	mov    edx,ebx
  4053ff:	call   4040f0 <table_notify@@Base>
  405404:	xor    r15d,r15d
  405407:	mov    eax,r15d
  40540a:	add    rsp,0x8
  40540e:	pop    rbx
  40540f:	pop    r12
  405411:	pop    r13
  405413:	pop    r14
  405415:	pop    r15
  405417:	pop    rbp
  405418:	ret    
  405419:	cmp    DWORD PTR [rax+0x8],0x17
  40541d:	jne    405407 <table_set@@Base+0x277>
  40541f:	mov    rax,QWORD PTR [rsp]
  405423:	mov    QWORD PTR [r13+0x0],rax
  405427:	jmp    4053f2 <table_set@@Base+0x262>
  405429:	nop    DWORD PTR [rax+0x0]

0000000000405430 <table_set_bool@@Base>:
  405430:	push   rbp
  405431:	push   r15
  405433:	push   r14
  405435:	push   r13
  405437:	push   r12
  405439:	push   rbx
  40543a:	push   rax
  40543b:	mov    r15d,ecx
  40543e:	mov    ebx,edx
  405440:	mov    r14d,esi
  405443:	mov    rbp,rdi
  405446:	call   4065d0 <table_get_cell_ptr@@Base>
  40544b:	mov    r13,rax
  40544e:	mov    rdi,rbp
  405451:	mov    esi,ebx
  405453:	call   4041b0 <table_get_col_ptr@@Base>
  405458:	mov    r12d,0xffffffff
  40545e:	cmp    DWORD PTR [rax+0x8],0x16
  405462:	jne    405498 <table_set_bool@@Base+0x68>
  405464:	mov    rax,QWORD PTR [r13+0x0]
  405468:	test   rax,rax
  40546b:	jne    405480 <table_set_bool@@Base+0x50>
  40546d:	mov    edi,0x1
  405472:	call   4030c0 <malloc@plt>
  405477:	mov    QWORD PTR [r13+0x0],rax
  40547b:	test   rax,rax
  40547e:	je     405498 <table_set_bool@@Base+0x68>
  405480:	mov    BYTE PTR [rax],r15b
  405483:	mov    ecx,0x1
  405488:	mov    rdi,rbp
  40548b:	mov    esi,r14d
  40548e:	mov    edx,ebx
  405490:	call   4040f0 <table_notify@@Base>
  405495:	xor    r12d,r12d
  405498:	mov    eax,r12d
  40549b:	add    rsp,0x8
  40549f:	pop    rbx
  4054a0:	pop    r12
  4054a2:	pop    r13
  4054a4:	pop    r14
  4054a6:	pop    r15
  4054a8:	pop    rbp
  4054a9:	ret    
  4054aa:	nop    WORD PTR [rax+rax*1+0x0]

00000000004054b0 <table_set_int@@Base>:
  4054b0:	push   rbp
  4054b1:	push   r15
  4054b3:	push   r14
  4054b5:	push   r13
  4054b7:	push   r12
  4054b9:	push   rbx
  4054ba:	push   rax
  4054bb:	mov    r15d,ecx
  4054be:	mov    ebx,edx
  4054c0:	mov    r14d,esi
  4054c3:	mov    rbp,rdi
  4054c6:	call   4065d0 <table_get_cell_ptr@@Base>
  4054cb:	mov    r13,rax
  4054ce:	mov    rdi,rbp
  4054d1:	mov    esi,ebx
  4054d3:	call   4041b0 <table_get_col_ptr@@Base>
  4054d8:	mov    r12d,0xffffffff
  4054de:	cmp    DWORD PTR [rax+0x8],0x0
  4054e2:	jne    405518 <table_set_int@@Base+0x68>
  4054e4:	mov    rax,QWORD PTR [r13+0x0]
  4054e8:	test   rax,rax
  4054eb:	jne    405500 <table_set_int@@Base+0x50>
  4054ed:	mov    edi,0x4
  4054f2:	call   4030c0 <malloc@plt>
  4054f7:	mov    QWORD PTR [r13+0x0],rax
  4054fb:	test   rax,rax
  4054fe:	je     405518 <table_set_int@@Base+0x68>
  405500:	mov    DWORD PTR [rax],r15d
  405503:	mov    ecx,0x1
  405508:	mov    rdi,rbp
  40550b:	mov    esi,r14d
  40550e:	mov    edx,ebx
  405510:	call   4040f0 <table_notify@@Base>
  405515:	xor    r12d,r12d
  405518:	mov    eax,r12d
  40551b:	add    rsp,0x8
  40551f:	pop    rbx
  405520:	pop    r12
  405522:	pop    r13
  405524:	pop    r14
  405526:	pop    r15
  405528:	pop    rbp
  405529:	ret    
  40552a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000405530 <table_set_uint@@Base>:
  405530:	push   rbp
  405531:	push   r15
  405533:	push   r14
  405535:	push   r13
  405537:	push   r12
  405539:	push   rbx
  40553a:	push   rax
  40553b:	mov    r15d,ecx
  40553e:	mov    ebx,edx
  405540:	mov    r14d,esi
  405543:	mov    rbp,rdi
  405546:	call   4065d0 <table_get_cell_ptr@@Base>
  40554b:	mov    r13,rax
  40554e:	mov    rdi,rbp
  405551:	mov    esi,ebx
  405553:	call   4041b0 <table_get_col_ptr@@Base>
  405558:	mov    r12d,0xffffffff
  40555e:	cmp    DWORD PTR [rax+0x8],0x1
  405562:	jne    405598 <table_set_uint@@Base+0x68>
  405564:	mov    rax,QWORD PTR [r13+0x0]
  405568:	test   rax,rax
  40556b:	jne    405580 <table_set_uint@@Base+0x50>
  40556d:	mov    edi,0x4
  405572:	call   4030c0 <malloc@plt>
  405577:	mov    QWORD PTR [r13+0x0],rax
  40557b:	test   rax,rax
  40557e:	je     405598 <table_set_uint@@Base+0x68>
  405580:	mov    DWORD PTR [rax],r15d
  405583:	mov    ecx,0x1
  405588:	mov    rdi,rbp
  40558b:	mov    esi,r14d
  40558e:	mov    edx,ebx
  405590:	call   4040f0 <table_notify@@Base>
  405595:	xor    r12d,r12d
  405598:	mov    eax,r12d
  40559b:	add    rsp,0x8
  40559f:	pop    rbx
  4055a0:	pop    r12
  4055a2:	pop    r13
  4055a4:	pop    r14
  4055a6:	pop    r15
  4055a8:	pop    rbp
  4055a9:	ret    
  4055aa:	nop    WORD PTR [rax+rax*1+0x0]

00000000004055b0 <table_set_int8@@Base>:
  4055b0:	push   rbp
  4055b1:	push   r15
  4055b3:	push   r14
  4055b5:	push   r13
  4055b7:	push   r12
  4055b9:	push   rbx
  4055ba:	push   rax
  4055bb:	mov    r15d,ecx
  4055be:	mov    ebx,edx
  4055c0:	mov    r14d,esi
  4055c3:	mov    rbp,rdi
  4055c6:	call   4065d0 <table_get_cell_ptr@@Base>
  4055cb:	mov    r13,rax
  4055ce:	mov    rdi,rbp
  4055d1:	mov    esi,ebx
  4055d3:	call   4041b0 <table_get_col_ptr@@Base>
  4055d8:	mov    r12d,0xffffffff
  4055de:	cmp    DWORD PTR [rax+0x8],0x2
  4055e2:	jne    405618 <table_set_int8@@Base+0x68>
  4055e4:	mov    rax,QWORD PTR [r13+0x0]
  4055e8:	test   rax,rax
  4055eb:	jne    405600 <table_set_int8@@Base+0x50>
  4055ed:	mov    edi,0x1
  4055f2:	call   4030c0 <malloc@plt>
  4055f7:	mov    QWORD PTR [r13+0x0],rax
  4055fb:	test   rax,rax
  4055fe:	je     405618 <table_set_int8@@Base+0x68>
  405600:	mov    BYTE PTR [rax],r15b
  405603:	mov    ecx,0x1
  405608:	mov    rdi,rbp
  40560b:	mov    esi,r14d
  40560e:	mov    edx,ebx
  405610:	call   4040f0 <table_notify@@Base>
  405615:	xor    r12d,r12d
  405618:	mov    eax,r12d
  40561b:	add    rsp,0x8
  40561f:	pop    rbx
  405620:	pop    r12
  405622:	pop    r13
  405624:	pop    r14
  405626:	pop    r15
  405628:	pop    rbp
  405629:	ret    
  40562a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000405630 <table_set_uint8@@Base>:
  405630:	push   rbp
  405631:	push   r15
  405633:	push   r14
  405635:	push   r13
  405637:	push   r12
  405639:	push   rbx
  40563a:	push   rax
  40563b:	mov    r15d,ecx
  40563e:	mov    ebx,edx
  405640:	mov    r14d,esi
  405643:	mov    rbp,rdi
  405646:	call   4065d0 <table_get_cell_ptr@@Base>
  40564b:	mov    r13,rax
  40564e:	mov    rdi,rbp
  405651:	mov    esi,ebx
  405653:	call   4041b0 <table_get_col_ptr@@Base>
  405658:	mov    r12d,0xffffffff
  40565e:	cmp    DWORD PTR [rax+0x8],0x3
  405662:	jne    405698 <table_set_uint8@@Base+0x68>
  405664:	mov    rax,QWORD PTR [r13+0x0]
  405668:	test   rax,rax
  40566b:	jne    405680 <table_set_uint8@@Base+0x50>
  40566d:	mov    edi,0x1
  405672:	call   4030c0 <malloc@plt>
  405677:	mov    QWORD PTR [r13+0x0],rax
  40567b:	test   rax,rax
  40567e:	je     405698 <table_set_uint8@@Base+0x68>
  405680:	mov    BYTE PTR [rax],r15b
  405683:	mov    ecx,0x1
  405688:	mov    rdi,rbp
  40568b:	mov    esi,r14d
  40568e:	mov    edx,ebx
  405690:	call   4040f0 <table_notify@@Base>
  405695:	xor    r12d,r12d
  405698:	mov    eax,r12d
  40569b:	add    rsp,0x8
  40569f:	pop    rbx
  4056a0:	pop    r12
  4056a2:	pop    r13
  4056a4:	pop    r14
  4056a6:	pop    r15
  4056a8:	pop    rbp
  4056a9:	ret    
  4056aa:	nop    WORD PTR [rax+rax*1+0x0]

00000000004056b0 <table_set_int16@@Base>:
  4056b0:	push   rbp
  4056b1:	push   r15
  4056b3:	push   r14
  4056b5:	push   r13
  4056b7:	push   r12
  4056b9:	push   rbx
  4056ba:	push   rax
  4056bb:	mov    r15d,ecx
  4056be:	mov    ebx,edx
  4056c0:	mov    r14d,esi
  4056c3:	mov    rbp,rdi
  4056c6:	call   4065d0 <table_get_cell_ptr@@Base>
  4056cb:	mov    r13,rax
  4056ce:	mov    rdi,rbp
  4056d1:	mov    esi,ebx
  4056d3:	call   4041b0 <table_get_col_ptr@@Base>
  4056d8:	mov    r12d,0xffffffff
  4056de:	cmp    DWORD PTR [rax+0x8],0x4
  4056e2:	jne    405719 <table_set_int16@@Base+0x69>
  4056e4:	mov    rax,QWORD PTR [r13+0x0]
  4056e8:	test   rax,rax
  4056eb:	jne    405700 <table_set_int16@@Base+0x50>
  4056ed:	mov    edi,0x2
  4056f2:	call   4030c0 <malloc@plt>
  4056f7:	mov    QWORD PTR [r13+0x0],rax
  4056fb:	test   rax,rax
  4056fe:	je     405719 <table_set_int16@@Base+0x69>
  405700:	mov    WORD PTR [rax],r15w
  405704:	mov    ecx,0x1
  405709:	mov    rdi,rbp
  40570c:	mov    esi,r14d
  40570f:	mov    edx,ebx
  405711:	call   4040f0 <table_notify@@Base>
  405716:	xor    r12d,r12d
  405719:	mov    eax,r12d
  40571c:	add    rsp,0x8
  405720:	pop    rbx
  405721:	pop    r12
  405723:	pop    r13
  405725:	pop    r14
  405727:	pop    r15
  405729:	pop    rbp
  40572a:	ret    
  40572b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405730 <table_set_uint16@@Base>:
  405730:	push   rbp
  405731:	push   r15
  405733:	push   r14
  405735:	push   r13
  405737:	push   r12
  405739:	push   rbx
  40573a:	push   rax
  40573b:	mov    r15d,ecx
  40573e:	mov    ebx,edx
  405740:	mov    r14d,esi
  405743:	mov    rbp,rdi
  405746:	call   4065d0 <table_get_cell_ptr@@Base>
  40574b:	mov    r13,rax
  40574e:	mov    rdi,rbp
  405751:	mov    esi,ebx
  405753:	call   4041b0 <table_get_col_ptr@@Base>
  405758:	mov    r12d,0xffffffff
  40575e:	cmp    DWORD PTR [rax+0x8],0x5
  405762:	jne    405799 <table_set_uint16@@Base+0x69>
  405764:	mov    rax,QWORD PTR [r13+0x0]
  405768:	test   rax,rax
  40576b:	jne    405780 <table_set_uint16@@Base+0x50>
  40576d:	mov    edi,0x2
  405772:	call   4030c0 <malloc@plt>
  405777:	mov    QWORD PTR [r13+0x0],rax
  40577b:	test   rax,rax
  40577e:	je     405799 <table_set_uint16@@Base+0x69>
  405780:	mov    WORD PTR [rax],r15w
  405784:	mov    ecx,0x1
  405789:	mov    rdi,rbp
  40578c:	mov    esi,r14d
  40578f:	mov    edx,ebx
  405791:	call   4040f0 <table_notify@@Base>
  405796:	xor    r12d,r12d
  405799:	mov    eax,r12d
  40579c:	add    rsp,0x8
  4057a0:	pop    rbx
  4057a1:	pop    r12
  4057a3:	pop    r13
  4057a5:	pop    r14
  4057a7:	pop    r15
  4057a9:	pop    rbp
  4057aa:	ret    
  4057ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004057b0 <table_set_int32@@Base>:
  4057b0:	push   rbp
  4057b1:	push   r15
  4057b3:	push   r14
  4057b5:	push   r13
  4057b7:	push   r12
  4057b9:	push   rbx
  4057ba:	push   rax
  4057bb:	mov    r15d,ecx
  4057be:	mov    ebx,edx
  4057c0:	mov    r14d,esi
  4057c3:	mov    rbp,rdi
  4057c6:	call   4065d0 <table_get_cell_ptr@@Base>
  4057cb:	mov    r13,rax
  4057ce:	mov    rdi,rbp
  4057d1:	mov    esi,ebx
  4057d3:	call   4041b0 <table_get_col_ptr@@Base>
  4057d8:	mov    r12d,0xffffffff
  4057de:	cmp    DWORD PTR [rax+0x8],0x6
  4057e2:	jne    405818 <table_set_int32@@Base+0x68>
  4057e4:	mov    rax,QWORD PTR [r13+0x0]
  4057e8:	test   rax,rax
  4057eb:	jne    405800 <table_set_int32@@Base+0x50>
  4057ed:	mov    edi,0x4
  4057f2:	call   4030c0 <malloc@plt>
  4057f7:	mov    QWORD PTR [r13+0x0],rax
  4057fb:	test   rax,rax
  4057fe:	je     405818 <table_set_int32@@Base+0x68>
  405800:	mov    DWORD PTR [rax],r15d
  405803:	mov    ecx,0x1
  405808:	mov    rdi,rbp
  40580b:	mov    esi,r14d
  40580e:	mov    edx,ebx
  405810:	call   4040f0 <table_notify@@Base>
  405815:	xor    r12d,r12d
  405818:	mov    eax,r12d
  40581b:	add    rsp,0x8
  40581f:	pop    rbx
  405820:	pop    r12
  405822:	pop    r13
  405824:	pop    r14
  405826:	pop    r15
  405828:	pop    rbp
  405829:	ret    
  40582a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000405830 <table_set_uint32@@Base>:
  405830:	push   rbp
  405831:	push   r15
  405833:	push   r14
  405835:	push   r13
  405837:	push   r12
  405839:	push   rbx
  40583a:	push   rax
  40583b:	mov    r15d,ecx
  40583e:	mov    ebx,edx
  405840:	mov    r14d,esi
  405843:	mov    rbp,rdi
  405846:	call   4065d0 <table_get_cell_ptr@@Base>
  40584b:	mov    r13,rax
  40584e:	mov    rdi,rbp
  405851:	mov    esi,ebx
  405853:	call   4041b0 <table_get_col_ptr@@Base>
  405858:	mov    r12d,0xffffffff
  40585e:	cmp    DWORD PTR [rax+0x8],0x7
  405862:	jne    405898 <table_set_uint32@@Base+0x68>
  405864:	mov    rax,QWORD PTR [r13+0x0]
  405868:	test   rax,rax
  40586b:	jne    405880 <table_set_uint32@@Base+0x50>
  40586d:	mov    edi,0x4
  405872:	call   4030c0 <malloc@plt>
  405877:	mov    QWORD PTR [r13+0x0],rax
  40587b:	test   rax,rax
  40587e:	je     405898 <table_set_uint32@@Base+0x68>
  405880:	mov    DWORD PTR [rax],r15d
  405883:	mov    ecx,0x1
  405888:	mov    rdi,rbp
  40588b:	mov    esi,r14d
  40588e:	mov    edx,ebx
  405890:	call   4040f0 <table_notify@@Base>
  405895:	xor    r12d,r12d
  405898:	mov    eax,r12d
  40589b:	add    rsp,0x8
  40589f:	pop    rbx
  4058a0:	pop    r12
  4058a2:	pop    r13
  4058a4:	pop    r14
  4058a6:	pop    r15
  4058a8:	pop    rbp
  4058a9:	ret    
  4058aa:	nop    WORD PTR [rax+rax*1+0x0]

00000000004058b0 <table_set_int64@@Base>:
  4058b0:	push   rbp
  4058b1:	push   r15
  4058b3:	push   r14
  4058b5:	push   r13
  4058b7:	push   r12
  4058b9:	push   rbx
  4058ba:	push   rax
  4058bb:	mov    r15,rcx
  4058be:	mov    ebx,edx
  4058c0:	mov    r14d,esi
  4058c3:	mov    rbp,rdi
  4058c6:	call   4065d0 <table_get_cell_ptr@@Base>
  4058cb:	mov    r13,rax
  4058ce:	mov    rdi,rbp
  4058d1:	mov    esi,ebx
  4058d3:	call   4041b0 <table_get_col_ptr@@Base>
  4058d8:	mov    r12d,0xffffffff
  4058de:	cmp    DWORD PTR [rax+0x8],0x8
  4058e2:	jne    405918 <table_set_int64@@Base+0x68>
  4058e4:	mov    rax,QWORD PTR [r13+0x0]
  4058e8:	test   rax,rax
  4058eb:	jne    405900 <table_set_int64@@Base+0x50>
  4058ed:	mov    edi,0x8
  4058f2:	call   4030c0 <malloc@plt>
  4058f7:	mov    QWORD PTR [r13+0x0],rax
  4058fb:	test   rax,rax
  4058fe:	je     405918 <table_set_int64@@Base+0x68>
  405900:	mov    QWORD PTR [rax],r15
  405903:	mov    ecx,0x1
  405908:	mov    rdi,rbp
  40590b:	mov    esi,r14d
  40590e:	mov    edx,ebx
  405910:	call   4040f0 <table_notify@@Base>
  405915:	xor    r12d,r12d
  405918:	mov    eax,r12d
  40591b:	add    rsp,0x8
  40591f:	pop    rbx
  405920:	pop    r12
  405922:	pop    r13
  405924:	pop    r14
  405926:	pop    r15
  405928:	pop    rbp
  405929:	ret    
  40592a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000405930 <table_set_uint64@@Base>:
  405930:	push   rbp
  405931:	push   r15
  405933:	push   r14
  405935:	push   r13
  405937:	push   r12
  405939:	push   rbx
  40593a:	push   rax
  40593b:	mov    r15,rcx
  40593e:	mov    ebx,edx
  405940:	mov    r14d,esi
  405943:	mov    rbp,rdi
  405946:	call   4065d0 <table_get_cell_ptr@@Base>
  40594b:	mov    r13,rax
  40594e:	mov    rdi,rbp
  405951:	mov    esi,ebx
  405953:	call   4041b0 <table_get_col_ptr@@Base>
  405958:	mov    r12d,0xffffffff
  40595e:	cmp    DWORD PTR [rax+0x8],0x9
  405962:	jne    405998 <table_set_uint64@@Base+0x68>
  405964:	mov    rax,QWORD PTR [r13+0x0]
  405968:	test   rax,rax
  40596b:	jne    405980 <table_set_uint64@@Base+0x50>
  40596d:	mov    edi,0x8
  405972:	call   4030c0 <malloc@plt>
  405977:	mov    QWORD PTR [r13+0x0],rax
  40597b:	test   rax,rax
  40597e:	je     405998 <table_set_uint64@@Base+0x68>
  405980:	mov    QWORD PTR [rax],r15
  405983:	mov    ecx,0x1
  405988:	mov    rdi,rbp
  40598b:	mov    esi,r14d
  40598e:	mov    edx,ebx
  405990:	call   4040f0 <table_notify@@Base>
  405995:	xor    r12d,r12d
  405998:	mov    eax,r12d
  40599b:	add    rsp,0x8
  40599f:	pop    rbx
  4059a0:	pop    r12
  4059a2:	pop    r13
  4059a4:	pop    r14
  4059a6:	pop    r15
  4059a8:	pop    rbp
  4059a9:	ret    
  4059aa:	nop    WORD PTR [rax+rax*1+0x0]

00000000004059b0 <table_set_short@@Base>:
  4059b0:	push   rbp
  4059b1:	push   r15
  4059b3:	push   r14
  4059b5:	push   r13
  4059b7:	push   r12
  4059b9:	push   rbx
  4059ba:	push   rax
  4059bb:	mov    r15d,ecx
  4059be:	mov    ebx,edx
  4059c0:	mov    r14d,esi
  4059c3:	mov    rbp,rdi
  4059c6:	call   4065d0 <table_get_cell_ptr@@Base>
  4059cb:	mov    r13,rax
  4059ce:	mov    rdi,rbp
  4059d1:	mov    esi,ebx
  4059d3:	call   4041b0 <table_get_col_ptr@@Base>
  4059d8:	mov    r12d,0xffffffff
  4059de:	cmp    DWORD PTR [rax+0x8],0xa
  4059e2:	jne    405a19 <table_set_short@@Base+0x69>
  4059e4:	mov    rax,QWORD PTR [r13+0x0]
  4059e8:	test   rax,rax
  4059eb:	jne    405a00 <table_set_short@@Base+0x50>
  4059ed:	mov    edi,0x2
  4059f2:	call   4030c0 <malloc@plt>
  4059f7:	mov    QWORD PTR [r13+0x0],rax
  4059fb:	test   rax,rax
  4059fe:	je     405a19 <table_set_short@@Base+0x69>
  405a00:	mov    WORD PTR [rax],r15w
  405a04:	mov    ecx,0x1
  405a09:	mov    rdi,rbp
  405a0c:	mov    esi,r14d
  405a0f:	mov    edx,ebx
  405a11:	call   4040f0 <table_notify@@Base>
  405a16:	xor    r12d,r12d
  405a19:	mov    eax,r12d
  405a1c:	add    rsp,0x8
  405a20:	pop    rbx
  405a21:	pop    r12
  405a23:	pop    r13
  405a25:	pop    r14
  405a27:	pop    r15
  405a29:	pop    rbp
  405a2a:	ret    
  405a2b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405a30 <table_set_ushort@@Base>:
  405a30:	push   rbp
  405a31:	push   r15
  405a33:	push   r14
  405a35:	push   r13
  405a37:	push   r12
  405a39:	push   rbx
  405a3a:	push   rax
  405a3b:	mov    r15d,ecx
  405a3e:	mov    ebx,edx
  405a40:	mov    r14d,esi
  405a43:	mov    rbp,rdi
  405a46:	call   4065d0 <table_get_cell_ptr@@Base>
  405a4b:	mov    r13,rax
  405a4e:	mov    rdi,rbp
  405a51:	mov    esi,ebx
  405a53:	call   4041b0 <table_get_col_ptr@@Base>
  405a58:	mov    r12d,0xffffffff
  405a5e:	cmp    DWORD PTR [rax+0x8],0xb
  405a62:	jne    405a99 <table_set_ushort@@Base+0x69>
  405a64:	mov    rax,QWORD PTR [r13+0x0]
  405a68:	test   rax,rax
  405a6b:	jne    405a80 <table_set_ushort@@Base+0x50>
  405a6d:	mov    edi,0x2
  405a72:	call   4030c0 <malloc@plt>
  405a77:	mov    QWORD PTR [r13+0x0],rax
  405a7b:	test   rax,rax
  405a7e:	je     405a99 <table_set_ushort@@Base+0x69>
  405a80:	mov    WORD PTR [rax],r15w
  405a84:	mov    ecx,0x1
  405a89:	mov    rdi,rbp
  405a8c:	mov    esi,r14d
  405a8f:	mov    edx,ebx
  405a91:	call   4040f0 <table_notify@@Base>
  405a96:	xor    r12d,r12d
  405a99:	mov    eax,r12d
  405a9c:	add    rsp,0x8
  405aa0:	pop    rbx
  405aa1:	pop    r12
  405aa3:	pop    r13
  405aa5:	pop    r14
  405aa7:	pop    r15
  405aa9:	pop    rbp
  405aaa:	ret    
  405aab:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405ab0 <table_set_long@@Base>:
  405ab0:	push   rbp
  405ab1:	push   r15
  405ab3:	push   r14
  405ab5:	push   r13
  405ab7:	push   r12
  405ab9:	push   rbx
  405aba:	push   rax
  405abb:	mov    r15,rcx
  405abe:	mov    ebx,edx
  405ac0:	mov    r14d,esi
  405ac3:	mov    rbp,rdi
  405ac6:	call   4065d0 <table_get_cell_ptr@@Base>
  405acb:	mov    r13,rax
  405ace:	mov    rdi,rbp
  405ad1:	mov    esi,ebx
  405ad3:	call   4041b0 <table_get_col_ptr@@Base>
  405ad8:	mov    r12d,0xffffffff
  405ade:	cmp    DWORD PTR [rax+0x8],0xc
  405ae2:	jne    405b18 <table_set_long@@Base+0x68>
  405ae4:	mov    rax,QWORD PTR [r13+0x0]
  405ae8:	test   rax,rax
  405aeb:	jne    405b00 <table_set_long@@Base+0x50>
  405aed:	mov    edi,0x8
  405af2:	call   4030c0 <malloc@plt>
  405af7:	mov    QWORD PTR [r13+0x0],rax
  405afb:	test   rax,rax
  405afe:	je     405b18 <table_set_long@@Base+0x68>
  405b00:	mov    QWORD PTR [rax],r15
  405b03:	mov    ecx,0x1
  405b08:	mov    rdi,rbp
  405b0b:	mov    esi,r14d
  405b0e:	mov    edx,ebx
  405b10:	call   4040f0 <table_notify@@Base>
  405b15:	xor    r12d,r12d
  405b18:	mov    eax,r12d
  405b1b:	add    rsp,0x8
  405b1f:	pop    rbx
  405b20:	pop    r12
  405b22:	pop    r13
  405b24:	pop    r14
  405b26:	pop    r15
  405b28:	pop    rbp
  405b29:	ret    
  405b2a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000405b30 <table_set_ulong@@Base>:
  405b30:	push   rbp
  405b31:	push   r15
  405b33:	push   r14
  405b35:	push   r13
  405b37:	push   r12
  405b39:	push   rbx
  405b3a:	push   rax
  405b3b:	mov    r15,rcx
  405b3e:	mov    ebx,edx
  405b40:	mov    r14d,esi
  405b43:	mov    rbp,rdi
  405b46:	call   4065d0 <table_get_cell_ptr@@Base>
  405b4b:	mov    r13,rax
  405b4e:	mov    rdi,rbp
  405b51:	mov    esi,ebx
  405b53:	call   4041b0 <table_get_col_ptr@@Base>
  405b58:	mov    r12d,0xffffffff
  405b5e:	cmp    DWORD PTR [rax+0x8],0xd
  405b62:	jne    405b98 <table_set_ulong@@Base+0x68>
  405b64:	mov    rax,QWORD PTR [r13+0x0]
  405b68:	test   rax,rax
  405b6b:	jne    405b80 <table_set_ulong@@Base+0x50>
  405b6d:	mov    edi,0x8
  405b72:	call   4030c0 <malloc@plt>
  405b77:	mov    QWORD PTR [r13+0x0],rax
  405b7b:	test   rax,rax
  405b7e:	je     405b98 <table_set_ulong@@Base+0x68>
  405b80:	mov    QWORD PTR [rax],r15
  405b83:	mov    ecx,0x1
  405b88:	mov    rdi,rbp
  405b8b:	mov    esi,r14d
  405b8e:	mov    edx,ebx
  405b90:	call   4040f0 <table_notify@@Base>
  405b95:	xor    r12d,r12d
  405b98:	mov    eax,r12d
  405b9b:	add    rsp,0x8
  405b9f:	pop    rbx
  405ba0:	pop    r12
  405ba2:	pop    r13
  405ba4:	pop    r14
  405ba6:	pop    r15
  405ba8:	pop    rbp
  405ba9:	ret    
  405baa:	nop    WORD PTR [rax+rax*1+0x0]

0000000000405bb0 <table_set_llong@@Base>:
  405bb0:	push   rbp
  405bb1:	push   r15
  405bb3:	push   r14
  405bb5:	push   r13
  405bb7:	push   r12
  405bb9:	push   rbx
  405bba:	push   rax
  405bbb:	mov    r15,rcx
  405bbe:	mov    ebx,edx
  405bc0:	mov    r14d,esi
  405bc3:	mov    rbp,rdi
  405bc6:	call   4065d0 <table_get_cell_ptr@@Base>
  405bcb:	mov    r13,rax
  405bce:	mov    rdi,rbp
  405bd1:	mov    esi,ebx
  405bd3:	call   4041b0 <table_get_col_ptr@@Base>
  405bd8:	mov    r12d,0xffffffff
  405bde:	cmp    DWORD PTR [rax+0x8],0xe
  405be2:	jne    405c18 <table_set_llong@@Base+0x68>
  405be4:	mov    rax,QWORD PTR [r13+0x0]
  405be8:	test   rax,rax
  405beb:	jne    405c00 <table_set_llong@@Base+0x50>
  405bed:	mov    edi,0x8
  405bf2:	call   4030c0 <malloc@plt>
  405bf7:	mov    QWORD PTR [r13+0x0],rax
  405bfb:	test   rax,rax
  405bfe:	je     405c18 <table_set_llong@@Base+0x68>
  405c00:	mov    QWORD PTR [rax],r15
  405c03:	mov    ecx,0x1
  405c08:	mov    rdi,rbp
  405c0b:	mov    esi,r14d
  405c0e:	mov    edx,ebx
  405c10:	call   4040f0 <table_notify@@Base>
  405c15:	xor    r12d,r12d
  405c18:	mov    eax,r12d
  405c1b:	add    rsp,0x8
  405c1f:	pop    rbx
  405c20:	pop    r12
  405c22:	pop    r13
  405c24:	pop    r14
  405c26:	pop    r15
  405c28:	pop    rbp
  405c29:	ret    
  405c2a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000405c30 <table_set_ullong@@Base>:
  405c30:	push   rbp
  405c31:	push   r15
  405c33:	push   r14
  405c35:	push   r13
  405c37:	push   r12
  405c39:	push   rbx
  405c3a:	push   rax
  405c3b:	mov    r15,rcx
  405c3e:	mov    ebx,edx
  405c40:	mov    r14d,esi
  405c43:	mov    rbp,rdi
  405c46:	call   4065d0 <table_get_cell_ptr@@Base>
  405c4b:	mov    r13,rax
  405c4e:	mov    rdi,rbp
  405c51:	mov    esi,ebx
  405c53:	call   4041b0 <table_get_col_ptr@@Base>
  405c58:	mov    r12d,0xffffffff
  405c5e:	cmp    DWORD PTR [rax+0x8],0xf
  405c62:	jne    405c98 <table_set_ullong@@Base+0x68>
  405c64:	mov    rax,QWORD PTR [r13+0x0]
  405c68:	test   rax,rax
  405c6b:	jne    405c80 <table_set_ullong@@Base+0x50>
  405c6d:	mov    edi,0x8
  405c72:	call   4030c0 <malloc@plt>
  405c77:	mov    QWORD PTR [r13+0x0],rax
  405c7b:	test   rax,rax
  405c7e:	je     405c98 <table_set_ullong@@Base+0x68>
  405c80:	mov    QWORD PTR [rax],r15
  405c83:	mov    ecx,0x1
  405c88:	mov    rdi,rbp
  405c8b:	mov    esi,r14d
  405c8e:	mov    edx,ebx
  405c90:	call   4040f0 <table_notify@@Base>
  405c95:	xor    r12d,r12d
  405c98:	mov    eax,r12d
  405c9b:	add    rsp,0x8
  405c9f:	pop    rbx
  405ca0:	pop    r12
  405ca2:	pop    r13
  405ca4:	pop    r14
  405ca6:	pop    r15
  405ca8:	pop    rbp
  405ca9:	ret    
  405caa:	nop    WORD PTR [rax+rax*1+0x0]

0000000000405cb0 <table_set_float@@Base>:
  405cb0:	push   rbp
  405cb1:	push   r15
  405cb3:	push   r14
  405cb5:	push   r12
  405cb7:	push   rbx
  405cb8:	sub    rsp,0x10
  405cbc:	vmovss DWORD PTR [rsp+0xc],xmm0
  405cc2:	mov    ebx,edx
  405cc4:	mov    r14d,esi
  405cc7:	mov    rbp,rdi
  405cca:	call   4065d0 <table_get_cell_ptr@@Base>
  405ccf:	mov    r12,rax
  405cd2:	mov    rdi,rbp
  405cd5:	mov    esi,ebx
  405cd7:	call   4041b0 <table_get_col_ptr@@Base>
  405cdc:	mov    r15d,0xffffffff
  405ce2:	cmp    DWORD PTR [rax+0x8],0x10
  405ce6:	jne    405d23 <table_set_float@@Base+0x73>
  405ce8:	mov    rax,QWORD PTR [r12]
  405cec:	test   rax,rax
  405cef:	jne    405d04 <table_set_float@@Base+0x54>
  405cf1:	mov    edi,0x4
  405cf6:	call   4030c0 <malloc@plt>
  405cfb:	mov    QWORD PTR [r12],rax
  405cff:	test   rax,rax
  405d02:	je     405d23 <table_set_float@@Base+0x73>
  405d04:	vmovss xmm0,DWORD PTR [rsp+0xc]
  405d0a:	vmovss DWORD PTR [rax],xmm0
  405d0e:	mov    ecx,0x1
  405d13:	mov    rdi,rbp
  405d16:	mov    esi,r14d
  405d19:	mov    edx,ebx
  405d1b:	call   4040f0 <table_notify@@Base>
  405d20:	xor    r15d,r15d
  405d23:	mov    eax,r15d
  405d26:	add    rsp,0x10
  405d2a:	pop    rbx
  405d2b:	pop    r12
  405d2d:	pop    r14
  405d2f:	pop    r15
  405d31:	pop    rbp
  405d32:	ret    
  405d33:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405d3d:	nop    DWORD PTR [rax]

0000000000405d40 <table_set_double@@Base>:
  405d40:	push   rbp
  405d41:	push   r15
  405d43:	push   r14
  405d45:	push   r12
  405d47:	push   rbx
  405d48:	sub    rsp,0x10
  405d4c:	vmovsd QWORD PTR [rsp+0x8],xmm0
  405d52:	mov    ebx,edx
  405d54:	mov    r14d,esi
  405d57:	mov    rbp,rdi
  405d5a:	call   4065d0 <table_get_cell_ptr@@Base>
  405d5f:	mov    r12,rax
  405d62:	mov    rdi,rbp
  405d65:	mov    esi,ebx
  405d67:	call   4041b0 <table_get_col_ptr@@Base>
  405d6c:	mov    r15d,0xffffffff
  405d72:	cmp    DWORD PTR [rax+0x8],0x11
  405d76:	jne    405db3 <table_set_double@@Base+0x73>
  405d78:	mov    rax,QWORD PTR [r12]
  405d7c:	test   rax,rax
  405d7f:	jne    405d94 <table_set_double@@Base+0x54>
  405d81:	mov    edi,0x8
  405d86:	call   4030c0 <malloc@plt>
  405d8b:	mov    QWORD PTR [r12],rax
  405d8f:	test   rax,rax
  405d92:	je     405db3 <table_set_double@@Base+0x73>
  405d94:	vmovsd xmm0,QWORD PTR [rsp+0x8]
  405d9a:	vmovsd QWORD PTR [rax],xmm0
  405d9e:	mov    ecx,0x1
  405da3:	mov    rdi,rbp
  405da6:	mov    esi,r14d
  405da9:	mov    edx,ebx
  405dab:	call   4040f0 <table_notify@@Base>
  405db0:	xor    r15d,r15d
  405db3:	mov    eax,r15d
  405db6:	add    rsp,0x10
  405dba:	pop    rbx
  405dbb:	pop    r12
  405dbd:	pop    r14
  405dbf:	pop    r15
  405dc1:	pop    rbp
  405dc2:	ret    
  405dc3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405dcd:	nop    DWORD PTR [rax]

0000000000405dd0 <table_set_ldouble@@Base>:
  405dd0:	push   rbp
  405dd1:	push   r15
  405dd3:	push   r14
  405dd5:	push   r12
  405dd7:	push   rbx
  405dd8:	sub    rsp,0x20
  405ddc:	mov    r15d,edx
  405ddf:	mov    r14d,esi
  405de2:	mov    rbp,rdi
  405de5:	fld    TBYTE PTR [rsp+0x50]
  405de9:	fstp   TBYTE PTR [rsp+0x14]
  405ded:	call   4065d0 <table_get_cell_ptr@@Base>
  405df2:	mov    r12,rax
  405df5:	mov    rdi,rbp
  405df8:	mov    esi,r15d
  405dfb:	call   4041b0 <table_get_col_ptr@@Base>
  405e00:	mov    ebx,0xffffffff
  405e05:	cmp    DWORD PTR [rax+0x8],0x12
  405e09:	jne    405e52 <table_set_ldouble@@Base+0x82>
  405e0b:	mov    rax,QWORD PTR [r12]
  405e0f:	test   rax,rax
  405e12:	jne    405e27 <table_set_ldouble@@Base+0x57>
  405e14:	mov    edi,0x10
  405e19:	call   4030c0 <malloc@plt>
  405e1e:	mov    QWORD PTR [r12],rax
  405e22:	test   rax,rax
  405e25:	je     405e52 <table_set_ldouble@@Base+0x82>
  405e27:	fld    TBYTE PTR [rsp+0x14]
  405e2b:	fstp   TBYTE PTR [rax]
  405e2d:	movzx  ecx,WORD PTR [rsp+0x12]
  405e32:	mov    WORD PTR [rax+0xe],cx
  405e36:	mov    ecx,DWORD PTR [rsp+0xe]
  405e3a:	mov    DWORD PTR [rax+0xa],ecx
  405e3d:	mov    ecx,0x1
  405e42:	mov    rdi,rbp
  405e45:	mov    esi,r14d
  405e48:	mov    edx,r15d
  405e4b:	call   4040f0 <table_notify@@Base>
  405e50:	xor    ebx,ebx
  405e52:	mov    eax,ebx
  405e54:	add    rsp,0x20
  405e58:	pop    rbx
  405e59:	pop    r12
  405e5b:	pop    r14
  405e5d:	pop    r15
  405e5f:	pop    rbp
  405e60:	ret    
  405e61:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405e6b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405e70 <table_set_string@@Base>:
  405e70:	mov    r8d,0x15
  405e76:	jmp    405190 <table_set@@Base>
  405e7b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405e80 <table_set_char@@Base>:
  405e80:	push   rbp
  405e81:	push   r15
  405e83:	push   r14
  405e85:	push   r13
  405e87:	push   r12
  405e89:	push   rbx
  405e8a:	push   rax
  405e8b:	mov    r15d,ecx
  405e8e:	mov    ebx,edx
  405e90:	mov    r14d,esi
  405e93:	mov    rbp,rdi
  405e96:	call   4065d0 <table_get_cell_ptr@@Base>
  405e9b:	mov    r13,rax
  405e9e:	mov    rdi,rbp
  405ea1:	mov    esi,ebx
  405ea3:	call   4041b0 <table_get_col_ptr@@Base>
  405ea8:	mov    r12d,0xffffffff
  405eae:	cmp    DWORD PTR [rax+0x8],0x13
  405eb2:	jne    405ee8 <table_set_char@@Base+0x68>
  405eb4:	mov    rax,QWORD PTR [r13+0x0]
  405eb8:	test   rax,rax
  405ebb:	jne    405ed0 <table_set_char@@Base+0x50>
  405ebd:	mov    edi,0x1
  405ec2:	call   4030c0 <malloc@plt>
  405ec7:	mov    QWORD PTR [r13+0x0],rax
  405ecb:	test   rax,rax
  405ece:	je     405ee8 <table_set_char@@Base+0x68>
  405ed0:	mov    BYTE PTR [rax],r15b
  405ed3:	mov    ecx,0x1
  405ed8:	mov    rdi,rbp
  405edb:	mov    esi,r14d
  405ede:	mov    edx,ebx
  405ee0:	call   4040f0 <table_notify@@Base>
  405ee5:	xor    r12d,r12d
  405ee8:	mov    eax,r12d
  405eeb:	add    rsp,0x8
  405eef:	pop    rbx
  405ef0:	pop    r12
  405ef2:	pop    r13
  405ef4:	pop    r14
  405ef6:	pop    r15
  405ef8:	pop    rbp
  405ef9:	ret    
  405efa:	nop    WORD PTR [rax+rax*1+0x0]

0000000000405f00 <table_set_uchar@@Base>:
  405f00:	push   rbp
  405f01:	push   r15
  405f03:	push   r14
  405f05:	push   r13
  405f07:	push   r12
  405f09:	push   rbx
  405f0a:	push   rax
  405f0b:	mov    r15d,ecx
  405f0e:	mov    ebx,edx
  405f10:	mov    r14d,esi
  405f13:	mov    rbp,rdi
  405f16:	call   4065d0 <table_get_cell_ptr@@Base>
  405f1b:	mov    r13,rax
  405f1e:	mov    rdi,rbp
  405f21:	mov    esi,ebx
  405f23:	call   4041b0 <table_get_col_ptr@@Base>
  405f28:	mov    r12d,0xffffffff
  405f2e:	cmp    DWORD PTR [rax+0x8],0x14
  405f32:	jne    405f68 <table_set_uchar@@Base+0x68>
  405f34:	mov    rax,QWORD PTR [r13+0x0]
  405f38:	test   rax,rax
  405f3b:	jne    405f50 <table_set_uchar@@Base+0x50>
  405f3d:	mov    edi,0x1
  405f42:	call   4030c0 <malloc@plt>
  405f47:	mov    QWORD PTR [r13+0x0],rax
  405f4b:	test   rax,rax
  405f4e:	je     405f68 <table_set_uchar@@Base+0x68>
  405f50:	mov    BYTE PTR [rax],r15b
  405f53:	mov    ecx,0x1
  405f58:	mov    rdi,rbp
  405f5b:	mov    esi,r14d
  405f5e:	mov    edx,ebx
  405f60:	call   4040f0 <table_notify@@Base>
  405f65:	xor    r12d,r12d
  405f68:	mov    eax,r12d
  405f6b:	add    rsp,0x8
  405f6f:	pop    rbx
  405f70:	pop    r12
  405f72:	pop    r13
  405f74:	pop    r14
  405f76:	pop    r15
  405f78:	pop    rbp
  405f79:	ret    
  405f7a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000405f80 <table_set_ptr@@Base>:
  405f80:	push   rbp
  405f81:	push   r15
  405f83:	push   r14
  405f85:	push   r12
  405f87:	push   rbx
  405f88:	mov    r15,rcx
  405f8b:	mov    ebx,edx
  405f8d:	mov    r14d,esi
  405f90:	mov    rbp,rdi
  405f93:	call   4065d0 <table_get_cell_ptr@@Base>
  405f98:	mov    r12,rax
  405f9b:	mov    rdi,rbp
  405f9e:	mov    esi,ebx
  405fa0:	call   4041b0 <table_get_col_ptr@@Base>
  405fa5:	mov    rcx,rax
  405fa8:	mov    eax,0xffffffff
  405fad:	cmp    DWORD PTR [rcx+0x8],0x17
  405fb1:	jne    405fcb <table_set_ptr@@Base+0x4b>
  405fb3:	mov    QWORD PTR [r12],r15
  405fb7:	mov    ecx,0x1
  405fbc:	mov    rdi,rbp
  405fbf:	mov    esi,r14d
  405fc2:	mov    edx,ebx
  405fc4:	call   4040f0 <table_notify@@Base>
  405fc9:	xor    eax,eax
  405fcb:	pop    rbx
  405fcc:	pop    r12
  405fce:	pop    r14
  405fd0:	pop    r15
  405fd2:	pop    rbp
  405fd3:	ret    
  405fd4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405fde:	xchg   ax,ax

0000000000405fe0 <table_serialize@@Base>:
  405fe0:	push   rbp
  405fe1:	push   r15
  405fe3:	push   r14
  405fe5:	push   r13
  405fe7:	push   r12
  405fe9:	push   rbx
  405fea:	push   rax
  405feb:	mov    rbx,rsi
  405fee:	mov    r14,rdi
  405ff1:	call   404ef0 <table_get_row_length@@Base>
  405ff6:	mov    DWORD PTR [rsp],eax
  405ff9:	mov    rdi,r14
  405ffc:	call   4041e0 <table_get_column_length@@Base>
  406001:	mov    r15d,eax
  406004:	mov    DWORD PTR [rbx],eax
  406006:	mov    rax,QWORD PTR [r14+0x10]
  40600a:	mov    QWORD PTR [rbx+0x4],rax
  40600e:	add    rbx,0xc
  406012:	test   r15d,r15d
  406015:	mov    DWORD PTR [rsp+0x4],r15d
  40601a:	jle    40606b <table_serialize@@Base+0x8b>
  40601c:	xor    ebp,ebp
  40601e:	xchg   ax,ax
  406020:	mov    rdi,r14
  406023:	mov    esi,ebp
  406025:	call   404250 <table_get_column_name@@Base>
  40602a:	mov    r13,rax
  40602d:	mov    rdi,rax
  406030:	call   403060 <strlen@plt>
  406035:	mov    r15,rax
  406038:	lea    r12,[rax+0x1]
  40603c:	mov    rdi,r14
  40603f:	mov    esi,ebp
  406041:	call   404260 <table_get_column_data_type@@Base>
  406046:	mov    DWORD PTR [rbx],eax
  406048:	lea    rdi,[rbx+0x4]
  40604c:	mov    rsi,r13
  40604f:	mov    rdx,r12
  406052:	call   403040 <strncpy@plt>
  406057:	add    rbx,r15
  40605a:	add    rbx,0x5
  40605e:	mov    r15d,DWORD PTR [rsp+0x4]
  406063:	add    ebp,0x1
  406066:	cmp    r15d,ebp
  406069:	jne    406020 <table_serialize@@Base+0x40>
  40606b:	mov    ecx,DWORD PTR [rsp]
  40606e:	mov    DWORD PTR [rbx],ecx
  406070:	mov    rax,QWORD PTR [r14+0x30]
  406074:	mov    QWORD PTR [rbx+0x4],rax
  406078:	add    rbx,0xc
  40607c:	test   ecx,ecx
  40607e:	jle    4061aa <table_serialize@@Base+0x1ca>
  406084:	xor    r13d,r13d
  406087:	lea    r12,[rip+0x114e]        # 4071dc <_IO_stdin_used@@Base+0x1dc>
  40608e:	xchg   ax,ax
  406090:	test   r15d,r15d
  406093:	jle    40619c <table_serialize@@Base+0x1bc>
  406099:	xor    ebp,ebp
  40609b:	nop    DWORD PTR [rax+rax*1+0x0]
  4060a0:	mov    rdi,r14
  4060a3:	mov    esi,ebp
  4060a5:	call   404260 <table_get_column_data_type@@Base>
  4060aa:	cmp    eax,0x17
  4060ad:	ja     406190 <table_serialize@@Base+0x1b0>
  4060b3:	mov    eax,eax
  4060b5:	movsxd rax,DWORD PTR [r12+rax*4]
  4060b9:	add    rax,r12
  4060bc:	jmp    rax
  4060be:	mov    rdi,r14
  4060c1:	mov    esi,r13d
  4060c4:	mov    edx,ebp
  4060c6:	call   404cb0 <table_get@@Base>
  4060cb:	mov    rax,QWORD PTR [rax]
  4060ce:	mov    QWORD PTR [rbx],rax
  4060d1:	add    rbx,0x8
  4060d5:	jmp    406190 <table_serialize@@Base+0x1b0>
  4060da:	nop    WORD PTR [rax+rax*1+0x0]
  4060e0:	mov    rdi,r14
  4060e3:	mov    esi,r13d
  4060e6:	mov    edx,ebp
  4060e8:	call   404cb0 <table_get@@Base>
  4060ed:	mov    eax,DWORD PTR [rax]
  4060ef:	mov    DWORD PTR [rbx],eax
  4060f1:	add    rbx,0x4
  4060f5:	jmp    406190 <table_serialize@@Base+0x1b0>
  4060fa:	nop    WORD PTR [rax+rax*1+0x0]
  406100:	mov    rdi,r14
  406103:	mov    esi,r13d
  406106:	mov    edx,ebp
  406108:	call   404cb0 <table_get@@Base>
  40610d:	movzx  eax,BYTE PTR [rax]
  406110:	mov    BYTE PTR [rbx],al
  406112:	add    rbx,0x1
  406116:	jmp    406190 <table_serialize@@Base+0x1b0>
  406118:	mov    rdi,r14
  40611b:	mov    esi,r13d
  40611e:	mov    edx,ebp
  406120:	call   404cb0 <table_get@@Base>
  406125:	movzx  eax,WORD PTR [rax]
  406128:	mov    WORD PTR [rbx],ax
  40612b:	add    rbx,0x2
  40612f:	jmp    406190 <table_serialize@@Base+0x1b0>
  406131:	mov    rdi,r14
  406134:	mov    esi,r13d
  406137:	mov    edx,ebp
  406139:	call   404cb0 <table_get@@Base>
  40613e:	fld    TBYTE PTR [rax]
  406140:	fstp   TBYTE PTR [rbx]
  406142:	add    rbx,0x10
  406146:	jmp    406190 <table_serialize@@Base+0x1b0>
  406148:	mov    rdi,r14
  40614b:	mov    esi,r13d
  40614e:	mov    edx,ebp
  406150:	call   404e20 <table_get_string@@Base>
  406155:	mov    r15,rax
  406158:	mov    rdi,rax
  40615b:	call   403060 <strlen@plt>
  406160:	mov    r12,rax
  406163:	lea    rdx,[rax+0x1]
  406167:	mov    rdi,rbx
  40616a:	mov    rsi,r15
  40616d:	mov    r15d,DWORD PTR [rsp+0x4]
  406172:	call   403040 <strncpy@plt>
  406177:	add    rbx,r12
  40617a:	add    rbx,0x1
  40617e:	lea    r12,[rip+0x1057]        # 4071dc <_IO_stdin_used@@Base+0x1dc>
  406185:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40618f:	nop
  406190:	add    ebp,0x1
  406193:	cmp    r15d,ebp
  406196:	jne    4060a0 <table_serialize@@Base+0xc0>
  40619c:	add    r13d,0x1
  4061a0:	cmp    r13d,DWORD PTR [rsp]
  4061a4:	jne    406090 <table_serialize@@Base+0xb0>
  4061aa:	mov    eax,DWORD PTR [r14+0x40]
  4061ae:	mov    DWORD PTR [rbx],eax
  4061b0:	mov    rax,QWORD PTR [r14+0x60]
  4061b4:	mov    QWORD PTR [rbx+0x4],rax
  4061b8:	cmp    DWORD PTR [r14+0x40],0x0
  4061bd:	jle    406202 <table_serialize@@Base+0x222>
  4061bf:	add    rbx,0xc
  4061c3:	xor    eax,eax
  4061c5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4061cf:	nop
  4061d0:	mov    rcx,QWORD PTR [r14+0x48]
  4061d4:	mov    rcx,QWORD PTR [rcx+rax*8]
  4061d8:	mov    QWORD PTR [rbx],rcx
  4061db:	mov    rcx,QWORD PTR [r14+0x50]
  4061df:	mov    rcx,QWORD PTR [rcx+rax*8]
  4061e3:	mov    QWORD PTR [rbx+0x8],rcx
  4061e7:	mov    rcx,QWORD PTR [r14+0x58]
  4061eb:	mov    ecx,DWORD PTR [rcx+rax*4]
  4061ee:	mov    DWORD PTR [rbx+0x10],ecx
  4061f1:	add    rax,0x1
  4061f5:	movsxd rcx,DWORD PTR [r14+0x40]
  4061f9:	add    rbx,0x14
  4061fd:	cmp    rax,rcx
  406200:	jl     4061d0 <table_serialize@@Base+0x1f0>
  406202:	add    rsp,0x8
  406206:	pop    rbx
  406207:	pop    r12
  406209:	pop    r13
  40620b:	pop    r14
  40620d:	pop    r15
  40620f:	pop    rbp
  406210:	ret    
  406211:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40621b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406220 <table_deserialize@@Base>:
  406220:	push   rbp
  406221:	push   r15
  406223:	push   r14
  406225:	push   r13
  406227:	push   r12
  406229:	push   rbx
  40622a:	sub    rsp,0x18
  40622e:	mov    rbx,rdi
  406231:	call   4037f0 <table_new@@Base>
  406236:	mov    r14,rax
  406239:	mov    r13d,DWORD PTR [rbx]
  40623c:	mov    rax,QWORD PTR [rbx+0x4]
  406240:	mov    QWORD PTR [r14+0x10],rax
  406244:	mov    edx,DWORD PTR [rbx+0xc]
  406247:	lea    rbp,[rbx+0xc]
  40624b:	lea    r15,[rbx+0x10]
  40624f:	test   r13d,r13d
  406252:	jle    406292 <table_deserialize@@Base+0x72>
  406254:	mov    r12d,r13d
  406257:	nop    WORD PTR [rax+rax*1+0x0]
  406260:	mov    rdi,r14
  406263:	mov    rsi,r15
  406266:	call   404270 <table_add_column@@Base>
  40626b:	mov    rdi,r15
  40626e:	call   403060 <strlen@plt>
  406273:	lea    rbx,[rax+rbp*1]
  406277:	add    rbx,0x5
  40627b:	mov    edx,DWORD PTR [rbp+rax*1+0x5]
  40627f:	lea    r15,[rax+rbp*1]
  406283:	add    r15,0x9
  406287:	mov    rbp,rbx
  40628a:	add    r12d,0xffffffff
  40628e:	jne    406260 <table_deserialize@@Base+0x40>
  406290:	jmp    406295 <table_deserialize@@Base+0x75>
  406292:	mov    rbx,rbp
  406295:	mov    rax,QWORD PTR [r15]
  406298:	mov    QWORD PTR [r14+0x30],rax
  40629c:	add    rbx,0xc
  4062a0:	test   edx,edx
  4062a2:	jle    40656b <table_deserialize@@Base+0x34b>
  4062a8:	xor    r12d,r12d
  4062ab:	lea    r15,[rip+0xf8a]        # 40723c <_IO_stdin_used@@Base+0x23c>
  4062b2:	mov    DWORD PTR [rsp+0x14],edx
  4062b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4062c0:	mov    rdi,r14
  4062c3:	call   404f00 <table_add_row@@Base>
  4062c8:	test   r13d,r13d
  4062cb:	jle    40655c <table_deserialize@@Base+0x33c>
  4062d1:	xor    ebp,ebp
  4062d3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4062dd:	nop    DWORD PTR [rax]
  4062e0:	mov    rdi,r14
  4062e3:	mov    esi,ebp
  4062e5:	call   404260 <table_get_column_data_type@@Base>
  4062ea:	cmp    eax,0x17
  4062ed:	ja     406550 <table_deserialize@@Base+0x330>
  4062f3:	mov    eax,eax
  4062f5:	movsxd rax,DWORD PTR [r15+rax*4]
  4062f9:	add    rax,r15
  4062fc:	jmp    rax
  4062fe:	mov    ecx,DWORD PTR [rbx]
  406300:	add    rbx,0x4
  406304:	mov    rdi,r14
  406307:	mov    esi,r12d
  40630a:	mov    edx,ebp
  40630c:	call   4054b0 <table_set_int@@Base>
  406311:	jmp    406550 <table_deserialize@@Base+0x330>
  406316:	mov    ecx,DWORD PTR [rbx]
  406318:	add    rbx,0x4
  40631c:	mov    rdi,r14
  40631f:	mov    esi,r12d
  406322:	mov    edx,ebp
  406324:	call   405530 <table_set_uint@@Base>
  406329:	jmp    406550 <table_deserialize@@Base+0x330>
  40632e:	movsx  ecx,BYTE PTR [rbx]
  406331:	add    rbx,0x1
  406335:	mov    rdi,r14
  406338:	mov    esi,r12d
  40633b:	mov    edx,ebp
  40633d:	call   4055b0 <table_set_int8@@Base>
  406342:	jmp    406550 <table_deserialize@@Base+0x330>
  406347:	movzx  ecx,BYTE PTR [rbx]
  40634a:	add    rbx,0x1
  40634e:	mov    rdi,r14
  406351:	mov    esi,r12d
  406354:	mov    edx,ebp
  406356:	call   405630 <table_set_uint8@@Base>
  40635b:	jmp    406550 <table_deserialize@@Base+0x330>
  406360:	movsx  ecx,WORD PTR [rbx]
  406363:	add    rbx,0x2
  406367:	mov    rdi,r14
  40636a:	mov    esi,r12d
  40636d:	mov    edx,ebp
  40636f:	call   4056b0 <table_set_int16@@Base>
  406374:	jmp    406550 <table_deserialize@@Base+0x330>
  406379:	movzx  ecx,WORD PTR [rbx]
  40637c:	add    rbx,0x2
  406380:	mov    rdi,r14
  406383:	mov    esi,r12d
  406386:	mov    edx,ebp
  406388:	call   405730 <table_set_uint16@@Base>
  40638d:	jmp    406550 <table_deserialize@@Base+0x330>
  406392:	mov    ecx,DWORD PTR [rbx]
  406394:	add    rbx,0x4
  406398:	mov    rdi,r14
  40639b:	mov    esi,r12d
  40639e:	mov    edx,ebp
  4063a0:	call   4057b0 <table_set_int32@@Base>
  4063a5:	jmp    406550 <table_deserialize@@Base+0x330>
  4063aa:	mov    ecx,DWORD PTR [rbx]
  4063ac:	add    rbx,0x4
  4063b0:	mov    rdi,r14
  4063b3:	mov    esi,r12d
  4063b6:	mov    edx,ebp
  4063b8:	call   405830 <table_set_uint32@@Base>
  4063bd:	jmp    406550 <table_deserialize@@Base+0x330>
  4063c2:	mov    rcx,QWORD PTR [rbx]
  4063c5:	add    rbx,0x8
  4063c9:	mov    rdi,r14
  4063cc:	mov    esi,r12d
  4063cf:	mov    edx,ebp
  4063d1:	call   4058b0 <table_set_int64@@Base>
  4063d6:	jmp    406550 <table_deserialize@@Base+0x330>
  4063db:	mov    rcx,QWORD PTR [rbx]
  4063de:	add    rbx,0x8
  4063e2:	mov    rdi,r14
  4063e5:	mov    esi,r12d
  4063e8:	mov    edx,ebp
  4063ea:	call   405930 <table_set_uint64@@Base>
  4063ef:	jmp    406550 <table_deserialize@@Base+0x330>
  4063f4:	movsx  ecx,WORD PTR [rbx]
  4063f7:	add    rbx,0x2
  4063fb:	mov    rdi,r14
  4063fe:	mov    esi,r12d
  406401:	mov    edx,ebp
  406403:	call   4059b0 <table_set_short@@Base>
  406408:	jmp    406550 <table_deserialize@@Base+0x330>
  40640d:	movzx  ecx,WORD PTR [rbx]
  406410:	add    rbx,0x2
  406414:	mov    rdi,r14
  406417:	mov    esi,r12d
  40641a:	mov    edx,ebp
  40641c:	call   405a30 <table_set_ushort@@Base>
  406421:	jmp    406550 <table_deserialize@@Base+0x330>
  406426:	mov    rcx,QWORD PTR [rbx]
  406429:	add    rbx,0x8
  40642d:	mov    rdi,r14
  406430:	mov    esi,r12d
  406433:	mov    edx,ebp
  406435:	call   405ab0 <table_set_long@@Base>
  40643a:	jmp    406550 <table_deserialize@@Base+0x330>
  40643f:	mov    rcx,QWORD PTR [rbx]
  406442:	add    rbx,0x8
  406446:	mov    rdi,r14
  406449:	mov    esi,r12d
  40644c:	mov    edx,ebp
  40644e:	call   405b30 <table_set_ulong@@Base>
  406453:	jmp    406550 <table_deserialize@@Base+0x330>
  406458:	mov    rcx,QWORD PTR [rbx]
  40645b:	add    rbx,0x8
  40645f:	mov    rdi,r14
  406462:	mov    esi,r12d
  406465:	mov    edx,ebp
  406467:	call   405bb0 <table_set_llong@@Base>
  40646c:	jmp    406550 <table_deserialize@@Base+0x330>
  406471:	mov    rcx,QWORD PTR [rbx]
  406474:	add    rbx,0x8
  406478:	mov    rdi,r14
  40647b:	mov    esi,r12d
  40647e:	mov    edx,ebp
  406480:	call   405c30 <table_set_ullong@@Base>
  406485:	jmp    406550 <table_deserialize@@Base+0x330>
  40648a:	vmovss xmm0,DWORD PTR [rbx]
  40648e:	add    rbx,0x4
  406492:	mov    rdi,r14
  406495:	mov    esi,r12d
  406498:	mov    edx,ebp
  40649a:	call   405cb0 <table_set_float@@Base>
  40649f:	jmp    406550 <table_deserialize@@Base+0x330>
  4064a4:	vmovsd xmm0,QWORD PTR [rbx]
  4064a8:	add    rbx,0x8
  4064ac:	mov    rdi,r14
  4064af:	mov    esi,r12d
  4064b2:	mov    edx,ebp
  4064b4:	call   405d40 <table_set_double@@Base>
  4064b9:	jmp    406550 <table_deserialize@@Base+0x330>
  4064be:	fld    TBYTE PTR [rbx]
  4064c0:	add    rbx,0x10
  4064c4:	fstp   TBYTE PTR [rsp]
  4064c7:	mov    rdi,r14
  4064ca:	mov    esi,r12d
  4064cd:	mov    edx,ebp
  4064cf:	call   405dd0 <table_set_ldouble@@Base>
  4064d4:	jmp    406550 <table_deserialize@@Base+0x330>
  4064d9:	movsx  ecx,BYTE PTR [rbx]
  4064dc:	add    rbx,0x1
  4064e0:	mov    rdi,r14
  4064e3:	mov    esi,r12d
  4064e6:	mov    edx,ebp
  4064e8:	call   405e80 <table_set_char@@Base>
  4064ed:	jmp    406550 <table_deserialize@@Base+0x330>
  4064ef:	movzx  ecx,BYTE PTR [rbx]
  4064f2:	add    rbx,0x1
  4064f6:	mov    rdi,r14
  4064f9:	mov    esi,r12d
  4064fc:	mov    edx,ebp
  4064fe:	call   405f00 <table_set_uchar@@Base>
  406503:	jmp    406550 <table_deserialize@@Base+0x330>
  406505:	mov    rdi,r14
  406508:	mov    esi,r12d
  40650b:	mov    edx,ebp
  40650d:	mov    rcx,rbx
  406510:	call   405e70 <table_set_string@@Base>
  406515:	mov    rdi,rbx
  406518:	call   403060 <strlen@plt>
  40651d:	add    rbx,rax
  406520:	add    rbx,0x1
  406524:	jmp    406550 <table_deserialize@@Base+0x330>
  406526:	movzx  ecx,BYTE PTR [rbx]
  406529:	add    rbx,0x1
  40652d:	mov    rdi,r14
  406530:	mov    esi,r12d
  406533:	mov    edx,ebp
  406535:	call   405430 <table_set_bool@@Base>
  40653a:	jmp    406550 <table_deserialize@@Base+0x330>
  40653c:	mov    rcx,QWORD PTR [rbx]
  40653f:	add    rbx,0x8
  406543:	mov    rdi,r14
  406546:	mov    esi,r12d
  406549:	mov    edx,ebp
  40654b:	call   405f80 <table_set_ptr@@Base>
  406550:	add    ebp,0x1
  406553:	cmp    r13d,ebp
  406556:	jne    4062e0 <table_deserialize@@Base+0xc0>
  40655c:	add    r12d,0x1
  406560:	cmp    r12d,DWORD PTR [rsp+0x14]
  406565:	jne    4062c0 <table_deserialize@@Base+0xa0>
  40656b:	mov    ebp,DWORD PTR [rbx]
  40656d:	mov    rax,QWORD PTR [rbx+0x4]
  406571:	mov    QWORD PTR [r14+0x60],rax
  406575:	test   ebp,ebp
  406577:	jle    40659b <table_deserialize@@Base+0x37b>
  406579:	add    rbx,0xc
  40657d:	nop    DWORD PTR [rax]
  406580:	mov    rsi,QWORD PTR [rbx]
  406583:	mov    rdx,QWORD PTR [rbx+0x8]
  406587:	mov    ecx,DWORD PTR [rbx+0x10]
  40658a:	mov    rdi,r14
  40658d:	call   403e80 <table_register_callback@@Base>
  406592:	add    rbx,0x14
  406596:	add    ebp,0xffffffff
  406599:	jne    406580 <table_deserialize@@Base+0x360>
  40659b:	mov    rax,r14
  40659e:	add    rsp,0x18
  4065a2:	pop    rbx
  4065a3:	pop    r12
  4065a5:	pop    r13
  4065a7:	pop    r14
  4065a9:	pop    r15
  4065ab:	pop    rbp
  4065ac:	ret    
  4065ad:	nop    DWORD PTR [rax]

00000000004065b0 <table_cell_init@@Base>:
  4065b0:	push   rbx
  4065b1:	mov    ebx,edx
  4065b3:	call   404e70 <table_get_row_ptr@@Base>
  4065b8:	mov    rax,QWORD PTR [rax]
  4065bb:	movsxd rcx,ebx
  4065be:	mov    QWORD PTR [rax+rcx*8],0x0
  4065c6:	pop    rbx
  4065c7:	ret    
  4065c8:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004065d0 <table_get_cell_ptr@@Base>:
  4065d0:	push   rbx
  4065d1:	mov    ebx,edx
  4065d3:	call   404e70 <table_get_row_ptr@@Base>
  4065d8:	movsxd rcx,ebx
  4065db:	shl    rcx,0x3
  4065df:	add    rcx,QWORD PTR [rax]
  4065e2:	mov    rax,rcx
  4065e5:	pop    rbx
  4065e6:	ret    
  4065e7:	nop    WORD PTR [rax+rax*1+0x0]

00000000004065f0 <table_cell_destroy@@Base>:
  4065f0:	push   rbp
  4065f1:	push   r14
  4065f3:	push   rbx
  4065f4:	mov    ebx,edx
  4065f6:	mov    r14d,esi
  4065f9:	mov    rbp,rdi
  4065fc:	mov    esi,edx
  4065fe:	call   404260 <table_get_column_data_type@@Base>
  406603:	cmp    eax,0x17
  406606:	je     40662b <table_cell_destroy@@Base+0x3b>
  406608:	mov    rdi,rbp
  40660b:	mov    esi,r14d
  40660e:	call   404e70 <table_get_row_ptr@@Base>
  406613:	mov    rax,QWORD PTR [rax]
  406616:	movsxd rcx,ebx
  406619:	mov    rdi,QWORD PTR [rax+rcx*8]
  40661d:	test   rdi,rdi
  406620:	je     40662b <table_cell_destroy@@Base+0x3b>
  406622:	pop    rbx
  406623:	pop    r14
  406625:	pop    rbp
  406626:	jmp    403030 <free@plt>
  40662b:	pop    rbx
  40662c:	pop    r14
  40662e:	pop    rbp
  40662f:	ret    

0000000000406630 <table_cell_to_buffer@@Base>:
  406630:	push   rbp
  406631:	push   r15
  406633:	push   r14
  406635:	push   r12
  406637:	push   rbx
  406638:	sub    rsp,0x10
  40663c:	mov    r14,r8
  40663f:	mov    r15,rcx
  406642:	mov    ebp,edx
  406644:	mov    r12d,esi
  406647:	mov    rbx,rdi
  40664a:	mov    esi,edx
  40664c:	call   404260 <table_get_column_data_type@@Base>
  406651:	cmp    eax,0x17
  406654:	ja     4068e5 <table_cell_to_buffer@@Base+0x2b5>
  40665a:	mov    eax,eax
  40665c:	lea    rcx,[rip+0xc39]        # 40729c <_IO_stdin_used@@Base+0x29c>
  406663:	movsxd rax,DWORD PTR [rcx+rax*4]
  406667:	add    rax,rcx
  40666a:	jmp    rax
  40666c:	mov    rdi,rbx
  40666f:	mov    esi,r12d
  406672:	mov    edx,ebp
  406674:	call   404cd0 <table_get_int@@Base>
  406679:	jmp    4066ff <table_cell_to_buffer@@Base+0xcf>
  40667e:	mov    rdi,rbx
  406681:	mov    esi,r12d
  406684:	mov    edx,ebp
  406686:	call   404ce0 <table_get_uint@@Base>
  40668b:	jmp    406713 <table_cell_to_buffer@@Base+0xe3>
  406690:	mov    rdi,rbx
  406693:	mov    esi,r12d
  406696:	mov    edx,ebp
  406698:	call   404cf0 <table_get_int8@@Base>
  40669d:	movsx  ecx,al
  4066a0:	jmp    4068ab <table_cell_to_buffer@@Base+0x27b>
  4066a5:	mov    rdi,rbx
  4066a8:	mov    esi,r12d
  4066ab:	mov    edx,ebp
  4066ad:	call   404d00 <table_get_uint8@@Base>
  4066b2:	movzx  ecx,al
  4066b5:	lea    rdx,[rip+0xca0]        # 40735c <_IO_stdin_used@@Base+0x35c>
  4066bc:	jmp    4068b2 <table_cell_to_buffer@@Base+0x282>
  4066c1:	mov    rdi,rbx
  4066c4:	mov    esi,r12d
  4066c7:	mov    edx,ebp
  4066c9:	call   404d10 <table_get_int16@@Base>
  4066ce:	movsx  ecx,ax
  4066d1:	jmp    4068ab <table_cell_to_buffer@@Base+0x27b>
  4066d6:	mov    rdi,rbx
  4066d9:	mov    esi,r12d
  4066dc:	mov    edx,ebp
  4066de:	call   404d20 <table_get_uint16@@Base>
  4066e3:	movzx  ecx,ax
  4066e6:	lea    rdx,[rip+0xc6f]        # 40735c <_IO_stdin_used@@Base+0x35c>
  4066ed:	jmp    4068b2 <table_cell_to_buffer@@Base+0x282>
  4066f2:	mov    rdi,rbx
  4066f5:	mov    esi,r12d
  4066f8:	mov    edx,ebp
  4066fa:	call   404d30 <table_get_int32@@Base>
  4066ff:	mov    ecx,eax
  406701:	jmp    4068ab <table_cell_to_buffer@@Base+0x27b>
  406706:	mov    rdi,rbx
  406709:	mov    esi,r12d
  40670c:	mov    edx,ebp
  40670e:	call   404d40 <table_get_uint32@@Base>
  406713:	mov    ecx,eax
  406715:	lea    rdx,[rip+0xc40]        # 40735c <_IO_stdin_used@@Base+0x35c>
  40671c:	jmp    4068b2 <table_cell_to_buffer@@Base+0x282>
  406721:	mov    rdi,rbx
  406724:	mov    esi,r12d
  406727:	mov    edx,ebp
  406729:	call   404d50 <table_get_int64@@Base>
  40672e:	jmp    406784 <table_cell_to_buffer@@Base+0x154>
  406730:	mov    rdi,rbx
  406733:	mov    esi,r12d
  406736:	mov    edx,ebp
  406738:	call   404d60 <table_get_uint64@@Base>
  40673d:	jmp    4067a0 <table_cell_to_buffer@@Base+0x170>
  40673f:	mov    rdi,rbx
  406742:	mov    esi,r12d
  406745:	mov    edx,ebp
  406747:	call   404d70 <table_get_short@@Base>
  40674c:	movsx  ecx,ax
  40674f:	lea    rdx,[rip+0xc11]        # 407367 <_IO_stdin_used@@Base+0x367>
  406756:	jmp    4068b2 <table_cell_to_buffer@@Base+0x282>
  40675b:	mov    rdi,rbx
  40675e:	mov    esi,r12d
  406761:	mov    edx,ebp
  406763:	call   404d80 <table_get_ushort@@Base>
  406768:	movzx  ecx,ax
  40676b:	lea    rdx,[rip+0xbf9]        # 40736b <_IO_stdin_used@@Base+0x36b>
  406772:	jmp    4068b2 <table_cell_to_buffer@@Base+0x282>
  406777:	mov    rdi,rbx
  40677a:	mov    esi,r12d
  40677d:	mov    edx,ebp
  40677f:	call   404d90 <table_get_long@@Base>
  406784:	mov    rcx,rax
  406787:	lea    rdx,[rip+0xbd1]        # 40735f <_IO_stdin_used@@Base+0x35f>
  40678e:	jmp    4068d8 <table_cell_to_buffer@@Base+0x2a8>
  406793:	mov    rdi,rbx
  406796:	mov    esi,r12d
  406799:	mov    edx,ebp
  40679b:	call   404da0 <table_get_ulong@@Base>
  4067a0:	mov    rcx,rax
  4067a3:	lea    rdx,[rip+0xbb9]        # 407363 <_IO_stdin_used@@Base+0x363>
  4067aa:	jmp    4068d8 <table_cell_to_buffer@@Base+0x2a8>
  4067af:	mov    rdi,rbx
  4067b2:	mov    esi,r12d
  4067b5:	mov    edx,ebp
  4067b7:	call   404db0 <table_get_llong@@Base>
  4067bc:	mov    rcx,rax
  4067bf:	lea    rdx,[rip+0xba9]        # 40736f <_IO_stdin_used@@Base+0x36f>
  4067c6:	jmp    4068d8 <table_cell_to_buffer@@Base+0x2a8>
  4067cb:	mov    rdi,rbx
  4067ce:	mov    esi,r12d
  4067d1:	mov    edx,ebp
  4067d3:	call   404dc0 <table_get_ullong@@Base>
  4067d8:	mov    rcx,rax
  4067db:	lea    rdx,[rip+0xb92]        # 407374 <_IO_stdin_used@@Base+0x374>
  4067e2:	jmp    4068d8 <table_cell_to_buffer@@Base+0x2a8>
  4067e7:	mov    rdi,rbx
  4067ea:	mov    esi,r12d
  4067ed:	mov    edx,ebp
  4067ef:	call   404dd0 <table_get_float@@Base>
  4067f4:	vcvtss2sd xmm0,xmm0,xmm0
  4067f8:	lea    rdx,[rip+0xb7d]        # 40737c <_IO_stdin_used@@Base+0x37c>
  4067ff:	jmp    406815 <table_cell_to_buffer@@Base+0x1e5>
  406801:	mov    rdi,rbx
  406804:	mov    esi,r12d
  406807:	mov    edx,ebp
  406809:	call   404de0 <table_get_double@@Base>
  40680e:	lea    rdx,[rip+0xb6a]        # 40737f <_IO_stdin_used@@Base+0x37f>
  406815:	mov    al,0x1
  406817:	mov    rdi,r15
  40681a:	mov    rsi,r14
  40681d:	call   403080 <snprintf@plt>
  406822:	jmp    4068e5 <table_cell_to_buffer@@Base+0x2b5>
  406827:	mov    rdi,rbx
  40682a:	mov    esi,r12d
  40682d:	mov    edx,ebp
  40682f:	call   404df0 <table_get_ldouble@@Base>
  406834:	fstp   TBYTE PTR [rsp]
  406837:	lea    rdx,[rip+0xb45]        # 407383 <_IO_stdin_used@@Base+0x383>
  40683e:	xor    eax,eax
  406840:	mov    rdi,r15
  406843:	mov    rsi,r14
  406846:	call   403080 <snprintf@plt>
  40684b:	jmp    4068e5 <table_cell_to_buffer@@Base+0x2b5>
  406850:	mov    rdi,rbx
  406853:	mov    esi,r12d
  406856:	mov    edx,ebp
  406858:	call   404e00 <table_get_char@@Base>
  40685d:	movsx  ecx,al
  406860:	lea    rdx,[rip+0xb20]        # 407387 <_IO_stdin_used@@Base+0x387>
  406867:	jmp    4068b2 <table_cell_to_buffer@@Base+0x282>
  406869:	mov    rdi,rbx
  40686c:	mov    esi,r12d
  40686f:	mov    edx,ebp
  406871:	call   404e10 <table_get_uchar@@Base>
  406876:	movzx  ecx,al
  406879:	lea    rdx,[rip+0xb07]        # 407387 <_IO_stdin_used@@Base+0x387>
  406880:	jmp    4068b2 <table_cell_to_buffer@@Base+0x282>
  406882:	mov    rdi,rbx
  406885:	mov    esi,r12d
  406888:	mov    edx,ebp
  40688a:	call   404e20 <table_get_string@@Base>
  40688f:	mov    rcx,rax
  406892:	lea    rdx,[rip+0xae0]        # 407379 <_IO_stdin_used@@Base+0x379>
  406899:	jmp    4068d8 <table_cell_to_buffer@@Base+0x2a8>
  40689b:	mov    rdi,rbx
  40689e:	mov    esi,r12d
  4068a1:	mov    edx,ebp
  4068a3:	call   404cc0 <table_get_bool@@Base>
  4068a8:	movzx  ecx,al
  4068ab:	lea    rdx,[rip+0x831]        # 4070e3 <_IO_stdin_used@@Base+0xe3>
  4068b2:	xor    eax,eax
  4068b4:	mov    rdi,r15
  4068b7:	mov    rsi,r14
  4068ba:	call   403080 <snprintf@plt>
  4068bf:	jmp    4068e5 <table_cell_to_buffer@@Base+0x2b5>
  4068c1:	mov    rdi,rbx
  4068c4:	mov    esi,r12d
  4068c7:	mov    edx,ebp
  4068c9:	call   404e30 <table_get_ptr@@Base>
  4068ce:	mov    rcx,rax
  4068d1:	lea    rdx,[rip+0xab2]        # 40738a <_IO_stdin_used@@Base+0x38a>
  4068d8:	xor    eax,eax
  4068da:	mov    rdi,r15
  4068dd:	mov    rsi,r14
  4068e0:	call   403080 <snprintf@plt>
  4068e5:	xor    eax,eax
  4068e7:	add    rsp,0x10
  4068eb:	pop    rbx
  4068ec:	pop    r12
  4068ee:	pop    r14
  4068f0:	pop    r15
  4068f2:	pop    rbp
  4068f3:	ret    
  4068f4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4068fe:	xchg   ax,ax

0000000000406900 <table_cell_from_buffer@@Base>:
  406900:	push   rbp
  406901:	push   r15
  406903:	push   r14
  406905:	push   rbx
  406906:	sub    rsp,0x118
  40690d:	mov    rbx,rcx
  406910:	mov    r15d,edx
  406913:	mov    r14d,esi
  406916:	mov    rbp,rdi
  406919:	mov    esi,edx
  40691b:	call   404260 <table_get_column_data_type@@Base>
  406920:	cmp    eax,0x17
  406923:	ja     406ecf <table_cell_from_buffer@@Base+0x5cf>
  406929:	mov    eax,eax
  40692b:	lea    rcx,[rip+0x9ca]        # 4072fc <_IO_stdin_used@@Base+0x2fc>
  406932:	movsxd rax,DWORD PTR [rcx+rax*4]
  406936:	add    rax,rcx
  406939:	jmp    rax
  40693b:	lea    rsi,[rip+0x7a1]        # 4070e3 <_IO_stdin_used@@Base+0xe3>
  406942:	lea    rdx,[rsp+0x10]
  406947:	xor    eax,eax
  406949:	mov    rdi,rbx
  40694c:	call   4030d0 <__isoc99_sscanf@plt>
  406951:	mov    ebx,0xffffffff
  406956:	cmp    eax,0x1
  406959:	jne    406ed1 <table_cell_from_buffer@@Base+0x5d1>
  40695f:	mov    ecx,DWORD PTR [rsp+0x10]
  406963:	mov    rdi,rbp
  406966:	mov    esi,r14d
  406969:	mov    edx,r15d
  40696c:	call   4054b0 <table_set_int@@Base>
  406971:	jmp    406ecf <table_cell_from_buffer@@Base+0x5cf>
  406976:	lea    rsi,[rip+0x9df]        # 40735c <_IO_stdin_used@@Base+0x35c>
  40697d:	lea    rdx,[rsp+0x10]
  406982:	xor    eax,eax
  406984:	mov    rdi,rbx
  406987:	call   4030d0 <__isoc99_sscanf@plt>
  40698c:	mov    ebx,0xffffffff
  406991:	cmp    eax,0x1
  406994:	jne    406ed1 <table_cell_from_buffer@@Base+0x5d1>
  40699a:	mov    ecx,DWORD PTR [rsp+0x10]
  40699e:	mov    rdi,rbp
  4069a1:	mov    esi,r14d
  4069a4:	mov    edx,r15d
  4069a7:	call   405530 <table_set_uint@@Base>
  4069ac:	jmp    406ecf <table_cell_from_buffer@@Base+0x5cf>
  4069b1:	lea    rsi,[rip+0x9d5]        # 40738d <_IO_stdin_used@@Base+0x38d>
  4069b8:	lea    rdx,[rsp+0x10]
  4069bd:	xor    eax,eax
  4069bf:	mov    rdi,rbx
  4069c2:	call   4030d0 <__isoc99_sscanf@plt>
  4069c7:	mov    ebx,0xffffffff
  4069cc:	cmp    eax,0x1
  4069cf:	jne    406ed1 <table_cell_from_buffer@@Base+0x5d1>
  4069d5:	movsx  ecx,BYTE PTR [rsp+0x10]
  4069da:	mov    rdi,rbp
  4069dd:	mov    esi,r14d
  4069e0:	mov    edx,r15d
  4069e3:	call   4055b0 <table_set_int8@@Base>
  4069e8:	jmp    406ecf <table_cell_from_buffer@@Base+0x5cf>
  4069ed:	lea    rsi,[rip+0x99e]        # 407392 <_IO_stdin_used@@Base+0x392>
  4069f4:	lea    rdx,[rsp+0x10]
  4069f9:	xor    eax,eax
  4069fb:	mov    rdi,rbx
  4069fe:	call   4030d0 <__isoc99_sscanf@plt>
  406a03:	mov    ebx,0xffffffff
  406a08:	cmp    eax,0x1
  406a0b:	jne    406ed1 <table_cell_from_buffer@@Base+0x5d1>
  406a11:	movzx  ecx,BYTE PTR [rsp+0x10]
  406a16:	mov    rdi,rbp
  406a19:	mov    esi,r14d
  406a1c:	mov    edx,r15d
  406a1f:	call   405630 <table_set_uint8@@Base>
  406a24:	jmp    406ecf <table_cell_from_buffer@@Base+0x5cf>
  406a29:	lea    rsi,[rip+0x937]        # 407367 <_IO_stdin_used@@Base+0x367>
  406a30:	lea    rdx,[rsp+0x10]
  406a35:	xor    eax,eax
  406a37:	mov    rdi,rbx
  406a3a:	call   4030d0 <__isoc99_sscanf@plt>
  406a3f:	mov    ebx,0xffffffff
  406a44:	cmp    eax,0x1
  406a47:	jne    406ed1 <table_cell_from_buffer@@Base+0x5d1>
  406a4d:	movsx  ecx,WORD PTR [rsp+0x10]
  406a52:	mov    rdi,rbp
  406a55:	mov    esi,r14d
  406a58:	mov    edx,r15d
  406a5b:	call   4056b0 <table_set_int16@@Base>
  406a60:	jmp    406ecf <table_cell_from_buffer@@Base+0x5cf>
  406a65:	lea    rsi,[rip+0x8ff]        # 40736b <_IO_stdin_used@@Base+0x36b>
  406a6c:	lea    rdx,[rsp+0x10]
  406a71:	xor    eax,eax
  406a73:	mov    rdi,rbx
  406a76:	call   4030d0 <__isoc99_sscanf@plt>
  406a7b:	mov    ebx,0xffffffff
  406a80:	cmp    eax,0x1
  406a83:	jne    406ed1 <table_cell_from_buffer@@Base+0x5d1>
  406a89:	movzx  ecx,WORD PTR [rsp+0x10]
  406a8e:	mov    rdi,rbp
  406a91:	mov    esi,r14d
  406a94:	mov    edx,r15d
  406a97:	call   405730 <table_set_uint16@@Base>
  406a9c:	jmp    406ecf <table_cell_from_buffer@@Base+0x5cf>
  406aa1:	lea    rsi,[rip+0x63b]        # 4070e3 <_IO_stdin_used@@Base+0xe3>
  406aa8:	lea    rdx,[rsp+0x10]
  406aad:	xor    eax,eax
  406aaf:	mov    rdi,rbx
  406ab2:	call   4030d0 <__isoc99_sscanf@plt>
  406ab7:	mov    ebx,0xffffffff
  406abc:	cmp    eax,0x1
  406abf:	jne    406ed1 <table_cell_from_buffer@@Base+0x5d1>
  406ac5:	mov    ecx,DWORD PTR [rsp+0x10]
  406ac9:	mov    rdi,rbp
  406acc:	mov    esi,r14d
  406acf:	mov    edx,r15d
  406ad2:	call   4057b0 <table_set_int32@@Base>
  406ad7:	jmp    406ecf <table_cell_from_buffer@@Base+0x5cf>
  406adc:	lea    rsi,[rip+0x879]        # 40735c <_IO_stdin_used@@Base+0x35c>
  406ae3:	lea    rdx,[rsp+0x10]
  406ae8:	xor    eax,eax
  406aea:	mov    rdi,rbx
  406aed:	call   4030d0 <__isoc99_sscanf@plt>
  406af2:	mov    ebx,0xffffffff
  406af7:	cmp    eax,0x1
  406afa:	jne    406ed1 <table_cell_from_buffer@@Base+0x5d1>
  406b00:	mov    ecx,DWORD PTR [rsp+0x10]
  406b04:	mov    rdi,rbp
  406b07:	mov    esi,r14d
  406b0a:	mov    edx,r15d
  406b0d:	call   405830 <table_set_uint32@@Base>
  406b12:	jmp    406ecf <table_cell_from_buffer@@Base+0x5cf>
  406b17:	lea    rsi,[rip+0x841]        # 40735f <_IO_stdin_used@@Base+0x35f>
  406b1e:	lea    rdx,[rsp+0x10]
  406b23:	xor    eax,eax
  406b25:	mov    rdi,rbx
  406b28:	call   4030d0 <__isoc99_sscanf@plt>
  406b2d:	mov    ebx,0xffffffff
  406b32:	cmp    eax,0x1
  406b35:	jne    406ed1 <table_cell_from_buffer@@Base+0x5d1>
  406b3b:	mov    rcx,QWORD PTR [rsp+0x10]
  406b40:	mov    rdi,rbp
  406b43:	mov    esi,r14d
  406b46:	mov    edx,r15d
  406b49:	call   4058b0 <table_set_int64@@Base>
  406b4e:	jmp    406ecf <table_cell_from_buffer@@Base+0x5cf>
  406b53:	lea    rsi,[rip+0x809]        # 407363 <_IO_stdin_used@@Base+0x363>
  406b5a:	lea    rdx,[rsp+0x10]
  406b5f:	xor    eax,eax
  406b61:	mov    rdi,rbx
  406b64:	call   4030d0 <__isoc99_sscanf@plt>
  406b69:	mov    ebx,0xffffffff
  406b6e:	cmp    eax,0x1
  406b71:	jne    406ed1 <table_cell_from_buffer@@Base+0x5d1>
  406b77:	mov    rcx,QWORD PTR [rsp+0x10]
  406b7c:	mov    rdi,rbp
  406b7f:	mov    esi,r14d
  406b82:	mov    edx,r15d
  406b85:	call   405930 <table_set_uint64@@Base>
  406b8a:	jmp    406ecf <table_cell_from_buffer@@Base+0x5cf>
  406b8f:	lea    rsi,[rip+0x7d1]        # 407367 <_IO_stdin_used@@Base+0x367>
  406b96:	lea    rdx,[rsp+0x10]
  406b9b:	xor    eax,eax
  406b9d:	mov    rdi,rbx
  406ba0:	call   4030d0 <__isoc99_sscanf@plt>
  406ba5:	mov    ebx,0xffffffff
  406baa:	cmp    eax,0x1
  406bad:	jne    406ed1 <table_cell_from_buffer@@Base+0x5d1>
  406bb3:	movsx  ecx,WORD PTR [rsp+0x10]
  406bb8:	mov    rdi,rbp
  406bbb:	mov    esi,r14d
  406bbe:	mov    edx,r15d
  406bc1:	call   4059b0 <table_set_short@@Base>
  406bc6:	jmp    406ecf <table_cell_from_buffer@@Base+0x5cf>
  406bcb:	lea    rsi,[rip+0x799]        # 40736b <_IO_stdin_used@@Base+0x36b>
  406bd2:	lea    rdx,[rsp+0x10]
  406bd7:	xor    eax,eax
  406bd9:	mov    rdi,rbx
  406bdc:	call   4030d0 <__isoc99_sscanf@plt>
  406be1:	mov    ebx,0xffffffff
  406be6:	cmp    eax,0x1
  406be9:	jne    406ed1 <table_cell_from_buffer@@Base+0x5d1>
  406bef:	movzx  ecx,WORD PTR [rsp+0x10]
  406bf4:	mov    rdi,rbp
  406bf7:	mov    esi,r14d
  406bfa:	mov    edx,r15d
  406bfd:	call   405a30 <table_set_ushort@@Base>
  406c02:	jmp    406ecf <table_cell_from_buffer@@Base+0x5cf>
  406c07:	lea    rsi,[rip+0x751]        # 40735f <_IO_stdin_used@@Base+0x35f>
  406c0e:	lea    rdx,[rsp+0x10]
  406c13:	xor    eax,eax
  406c15:	mov    rdi,rbx
  406c18:	call   4030d0 <__isoc99_sscanf@plt>
  406c1d:	mov    ebx,0xffffffff
  406c22:	cmp    eax,0x1
  406c25:	jne    406ed1 <table_cell_from_buffer@@Base+0x5d1>
  406c2b:	mov    rcx,QWORD PTR [rsp+0x10]
  406c30:	mov    rdi,rbp
  406c33:	mov    esi,r14d
  406c36:	mov    edx,r15d
  406c39:	call   405ab0 <table_set_long@@Base>
  406c3e:	jmp    406ecf <table_cell_from_buffer@@Base+0x5cf>
  406c43:	lea    rsi,[rip+0x719]        # 407363 <_IO_stdin_used@@Base+0x363>
  406c4a:	lea    rdx,[rsp+0x10]
  406c4f:	xor    eax,eax
  406c51:	mov    rdi,rbx
  406c54:	call   4030d0 <__isoc99_sscanf@plt>
  406c59:	mov    ebx,0xffffffff
  406c5e:	cmp    eax,0x1
  406c61:	jne    406ed1 <table_cell_from_buffer@@Base+0x5d1>
  406c67:	mov    rcx,QWORD PTR [rsp+0x10]
  406c6c:	mov    rdi,rbp
  406c6f:	mov    esi,r14d
  406c72:	mov    edx,r15d
  406c75:	call   405b30 <table_set_ulong@@Base>
  406c7a:	jmp    406ecf <table_cell_from_buffer@@Base+0x5cf>
  406c7f:	lea    rsi,[rip+0x6e9]        # 40736f <_IO_stdin_used@@Base+0x36f>
  406c86:	lea    rdx,[rsp+0x10]
  406c8b:	xor    eax,eax
  406c8d:	mov    rdi,rbx
  406c90:	call   4030d0 <__isoc99_sscanf@plt>
  406c95:	mov    ebx,0xffffffff
  406c9a:	cmp    eax,0x1
  406c9d:	jne    406ed1 <table_cell_from_buffer@@Base+0x5d1>
  406ca3:	mov    rcx,QWORD PTR [rsp+0x10]
  406ca8:	mov    rdi,rbp
  406cab:	mov    esi,r14d
  406cae:	mov    edx,r15d
  406cb1:	call   405bb0 <table_set_llong@@Base>
  406cb6:	jmp    406ecf <table_cell_from_buffer@@Base+0x5cf>
  406cbb:	lea    rsi,[rip+0x6b2]        # 407374 <_IO_stdin_used@@Base+0x374>
  406cc2:	lea    rdx,[rsp+0x10]
  406cc7:	xor    eax,eax
  406cc9:	mov    rdi,rbx
  406ccc:	call   4030d0 <__isoc99_sscanf@plt>
  406cd1:	mov    ebx,0xffffffff
  406cd6:	cmp    eax,0x1
  406cd9:	jne    406ed1 <table_cell_from_buffer@@Base+0x5d1>
  406cdf:	mov    rcx,QWORD PTR [rsp+0x10]
  406ce4:	mov    rdi,rbp
  406ce7:	mov    esi,r14d
  406cea:	mov    edx,r15d
  406ced:	call   405c30 <table_set_ullong@@Base>
  406cf2:	jmp    406ecf <table_cell_from_buffer@@Base+0x5cf>
  406cf7:	lea    rsi,[rip+0x67e]        # 40737c <_IO_stdin_used@@Base+0x37c>
  406cfe:	lea    rdx,[rsp+0x10]
  406d03:	xor    eax,eax
  406d05:	mov    rdi,rbx
  406d08:	call   4030d0 <__isoc99_sscanf@plt>
  406d0d:	mov    ebx,0xffffffff
  406d12:	cmp    eax,0x1
  406d15:	jne    406ed1 <table_cell_from_buffer@@Base+0x5d1>
  406d1b:	vmovss xmm0,DWORD PTR [rsp+0x10]
  406d21:	mov    rdi,rbp
  406d24:	mov    esi,r14d
  406d27:	mov    edx,r15d
  406d2a:	call   405cb0 <table_set_float@@Base>
  406d2f:	jmp    406ecf <table_cell_from_buffer@@Base+0x5cf>
  406d34:	lea    rsi,[rip+0x644]        # 40737f <_IO_stdin_used@@Base+0x37f>
  406d3b:	lea    rdx,[rsp+0x10]
  406d40:	xor    eax,eax
  406d42:	mov    rdi,rbx
  406d45:	call   4030d0 <__isoc99_sscanf@plt>
  406d4a:	mov    ebx,0xffffffff
  406d4f:	cmp    eax,0x1
  406d52:	jne    406ed1 <table_cell_from_buffer@@Base+0x5d1>
  406d58:	vmovsd xmm0,QWORD PTR [rsp+0x10]
  406d5e:	mov    rdi,rbp
  406d61:	mov    esi,r14d
  406d64:	mov    edx,r15d
  406d67:	call   405d40 <table_set_double@@Base>
  406d6c:	jmp    406ecf <table_cell_from_buffer@@Base+0x5cf>
  406d71:	lea    rsi,[rip+0x60b]        # 407383 <_IO_stdin_used@@Base+0x383>
  406d78:	lea    rdx,[rsp+0x10]
  406d7d:	xor    eax,eax
  406d7f:	mov    rdi,rbx
  406d82:	call   4030d0 <__isoc99_sscanf@plt>
  406d87:	mov    ebx,0xffffffff
  406d8c:	cmp    eax,0x1
  406d8f:	jne    406ed1 <table_cell_from_buffer@@Base+0x5d1>
  406d95:	fld    TBYTE PTR [rsp+0x10]
  406d99:	fstp   TBYTE PTR [rsp]
  406d9c:	mov    rdi,rbp
  406d9f:	mov    esi,r14d
  406da2:	mov    edx,r15d
  406da5:	call   405dd0 <table_set_ldouble@@Base>
  406daa:	jmp    406ecf <table_cell_from_buffer@@Base+0x5cf>
  406daf:	lea    rsi,[rip+0x5d1]        # 407387 <_IO_stdin_used@@Base+0x387>
  406db6:	lea    rdx,[rsp+0x10]
  406dbb:	xor    eax,eax
  406dbd:	mov    rdi,rbx
  406dc0:	call   4030d0 <__isoc99_sscanf@plt>
  406dc5:	mov    ebx,0xffffffff
  406dca:	cmp    eax,0x1
  406dcd:	jne    406ed1 <table_cell_from_buffer@@Base+0x5d1>
  406dd3:	movsx  ecx,BYTE PTR [rsp+0x10]
  406dd8:	mov    rdi,rbp
  406ddb:	mov    esi,r14d
  406dde:	mov    edx,r15d
  406de1:	call   405e80 <table_set_char@@Base>
  406de6:	jmp    406ecf <table_cell_from_buffer@@Base+0x5cf>
  406deb:	lea    rsi,[rip+0x595]        # 407387 <_IO_stdin_used@@Base+0x387>
  406df2:	lea    rdx,[rsp+0x10]
  406df7:	xor    eax,eax
  406df9:	mov    rdi,rbx
  406dfc:	call   4030d0 <__isoc99_sscanf@plt>
  406e01:	mov    ebx,0xffffffff
  406e06:	cmp    eax,0x1
  406e09:	jne    406ed1 <table_cell_from_buffer@@Base+0x5d1>
  406e0f:	movzx  ecx,BYTE PTR [rsp+0x10]
  406e14:	mov    rdi,rbp
  406e17:	mov    esi,r14d
  406e1a:	mov    edx,r15d
  406e1d:	call   405f00 <table_set_uchar@@Base>
  406e22:	jmp    406ecf <table_cell_from_buffer@@Base+0x5cf>
  406e27:	lea    rsi,[rip+0x54b]        # 407379 <_IO_stdin_used@@Base+0x379>
  406e2e:	lea    rdx,[rsp+0x10]
  406e33:	xor    eax,eax
  406e35:	mov    rdi,rbx
  406e38:	call   4030d0 <__isoc99_sscanf@plt>
  406e3d:	mov    ebx,0xffffffff
  406e42:	cmp    eax,0x1
  406e45:	jne    406ed1 <table_cell_from_buffer@@Base+0x5d1>
  406e4b:	lea    rcx,[rsp+0x10]
  406e50:	mov    rdi,rbp
  406e53:	mov    esi,r14d
  406e56:	mov    edx,r15d
  406e59:	call   405e70 <table_set_string@@Base>
  406e5e:	jmp    406ecf <table_cell_from_buffer@@Base+0x5cf>
  406e60:	lea    rsi,[rip+0x27c]        # 4070e3 <_IO_stdin_used@@Base+0xe3>
  406e67:	lea    rdx,[rsp+0x10]
  406e6c:	xor    eax,eax
  406e6e:	mov    rdi,rbx
  406e71:	call   4030d0 <__isoc99_sscanf@plt>
  406e76:	mov    ebx,0xffffffff
  406e7b:	cmp    eax,0x1
  406e7e:	jne    406ed1 <table_cell_from_buffer@@Base+0x5d1>
  406e80:	cmp    DWORD PTR [rsp+0x10],0x0
  406e85:	je     406ee1 <table_cell_from_buffer@@Base+0x5e1>
  406e87:	mov    ecx,0x1
  406e8c:	mov    rdi,rbp
  406e8f:	mov    esi,r14d
  406e92:	mov    edx,r15d
  406e95:	call   405430 <table_set_bool@@Base>
  406e9a:	jmp    406ecf <table_cell_from_buffer@@Base+0x5cf>
  406e9c:	lea    rsi,[rip+0x4e7]        # 40738a <_IO_stdin_used@@Base+0x38a>
  406ea3:	lea    rdx,[rsp+0x10]
  406ea8:	xor    eax,eax
  406eaa:	mov    rdi,rbx
  406ead:	call   4030d0 <__isoc99_sscanf@plt>
  406eb2:	mov    ebx,0xffffffff
  406eb7:	cmp    eax,0x1
  406eba:	jne    406ed1 <table_cell_from_buffer@@Base+0x5d1>
  406ebc:	mov    rcx,QWORD PTR [rsp+0x10]
  406ec1:	mov    rdi,rbp
  406ec4:	mov    esi,r14d
  406ec7:	mov    edx,r15d
  406eca:	call   405f80 <table_set_ptr@@Base>
  406ecf:	xor    ebx,ebx
  406ed1:	mov    eax,ebx
  406ed3:	add    rsp,0x118
  406eda:	pop    rbx
  406edb:	pop    r14
  406edd:	pop    r15
  406edf:	pop    rbp
  406ee0:	ret    
  406ee1:	xor    ebx,ebx
  406ee3:	xor    ecx,ecx
  406ee5:	mov    rdi,rbp
  406ee8:	mov    esi,r14d
  406eeb:	mov    edx,r15d
  406eee:	call   405430 <table_set_bool@@Base>
  406ef3:	jmp    406ed1 <table_cell_from_buffer@@Base+0x5d1>
  406ef5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406eff:	nop

0000000000406f00 <table_cell_nullify@@Base>:
  406f00:	push   rbp
  406f01:	push   rbx
  406f02:	push   rax
  406f03:	mov    ebp,edx
  406f05:	call   404e70 <table_get_row_ptr@@Base>
  406f0a:	mov    rbx,QWORD PTR [rax]
  406f0d:	movsxd rbp,ebp
  406f10:	mov    rdi,QWORD PTR [rbx+rbp*8]
  406f14:	test   rdi,rdi
  406f17:	je     406f26 <table_cell_nullify@@Base+0x26>
  406f19:	call   403030 <free@plt>
  406f1e:	mov    QWORD PTR [rbx+rbp*8],0x0
  406f26:	xor    eax,eax
  406f28:	add    rsp,0x8
  406f2c:	pop    rbx
  406f2d:	pop    rbp
  406f2e:	ret    
  406f2f:	nop

0000000000406f30 <__libc_csu_init@@Base>:
  406f30:	endbr64 
  406f34:	push   r15
  406f36:	lea    r15,[rip+0x2e03]        # 409d40 <_IO_stdin_used@@Base+0x2d40>
  406f3d:	push   r14
  406f3f:	mov    r14,rdx
  406f42:	push   r13
  406f44:	mov    r13,rsi
  406f47:	push   r12
  406f49:	mov    r12d,edi
  406f4c:	push   rbp
  406f4d:	lea    rbp,[rip+0x2df4]        # 409d48 <_IO_stdin_used@@Base+0x2d48>
  406f54:	push   rbx
  406f55:	sub    rbp,r15
  406f58:	sub    rsp,0x8
  406f5c:	call   403000 <free@plt-0x30>
  406f61:	sar    rbp,0x3
  406f65:	je     406f86 <__libc_csu_init@@Base+0x56>
  406f67:	xor    ebx,ebx
  406f69:	nop    DWORD PTR [rax+0x0]
  406f70:	mov    rdx,r14
  406f73:	mov    rsi,r13
  406f76:	mov    edi,r12d
  406f79:	call   QWORD PTR [r15+rbx*8]
  406f7d:	add    rbx,0x1
  406f81:	cmp    rbp,rbx
  406f84:	jne    406f70 <__libc_csu_init@@Base+0x40>
  406f86:	add    rsp,0x8
  406f8a:	pop    rbx
  406f8b:	pop    rbp
  406f8c:	pop    r12
  406f8e:	pop    r13
  406f90:	pop    r14
  406f92:	pop    r15
  406f94:	ret    
  406f95:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000406fa0 <__libc_csu_fini@@Base>:
  406fa0:	endbr64 
  406fa4:	ret    

Disassembly of section .fini:

0000000000406fa8 <.fini>:
  406fa8:	endbr64 
  406fac:	sub    rsp,0x8
  406fb0:	add    rsp,0x8
  406fb4:	ret    
