
../repos/charybdis/wsockd/.libs/wsockd:     file format elf64-x86-64


Disassembly of section .init:

0000000000402000 <.init>:
  402000:	endbr64 
  402004:	sub    rsp,0x8
  402008:	mov    rax,QWORD PTR [rip+0x6fd9]        # 408fe8 <rb_base64_encode@plt+0x6c68>
  40200f:	test   rax,rax
  402012:	je     402016 <dup2@plt-0x1a>
  402014:	call   rax
  402016:	add    rsp,0x8
  40201a:	ret    

Disassembly of section .plt:

0000000000402020 <dup2@plt-0x10>:
  402020:	push   QWORD PTR [rip+0x6fe2]        # 409008 <rb_base64_encode@plt+0x6c88>
  402026:	jmp    QWORD PTR [rip+0x6fe4]        # 409010 <rb_base64_encode@plt+0x6c90>
  40202c:	nop    DWORD PTR [rax+0x0]

0000000000402030 <dup2@plt>:
  402030:	jmp    QWORD PTR [rip+0x6fe2]        # 409018 <rb_base64_encode@plt+0x6c98>
  402036:	push   0x0
  40203b:	jmp    402020 <dup2@plt-0x10>

0000000000402040 <rb_get_type@plt>:
  402040:	jmp    QWORD PTR [rip+0x6fda]        # 409020 <rb_base64_encode@plt+0x6ca0>
  402046:	push   0x1
  40204b:	jmp    402020 <dup2@plt-0x10>

0000000000402050 <memset@plt>:
  402050:	jmp    QWORD PTR [rip+0x6fd2]        # 409028 <rb_base64_encode@plt+0x6ca8>
  402056:	push   0x2
  40205b:	jmp    402020 <dup2@plt-0x10>

0000000000402060 <rb_event_addish@plt>:
  402060:	jmp    QWORD PTR [rip+0x6fca]        # 409030 <rb_base64_encode@plt+0x6cb0>
  402066:	push   0x3
  40206b:	jmp    402020 <dup2@plt-0x10>

0000000000402070 <rb_ignore_errno@plt>:
  402070:	jmp    QWORD PTR [rip+0x6fc2]        # 409038 <rb_base64_encode@plt+0x6cb8>
  402076:	push   0x4
  40207b:	jmp    402020 <dup2@plt-0x10>

0000000000402080 <close@plt>:
  402080:	jmp    QWORD PTR [rip+0x6fba]        # 409040 <rb_base64_encode@plt+0x6cc0>
  402086:	push   0x5
  40208b:	jmp    402020 <dup2@plt-0x10>

0000000000402090 <rb_setselect@plt>:
  402090:	jmp    QWORD PTR [rip+0x6fb2]        # 409048 <rb_base64_encode@plt+0x6cc8>
  402096:	push   0x6
  40209b:	jmp    402020 <dup2@plt-0x10>

00000000004020a0 <rb_send_fd_buf@plt>:
  4020a0:	jmp    QWORD PTR [rip+0x6faa]        # 409050 <rb_base64_encode@plt+0x6cd0>
  4020a6:	push   0x7
  4020ab:	jmp    402020 <dup2@plt-0x10>

00000000004020b0 <htons@plt>:
  4020b0:	jmp    QWORD PTR [rip+0x6fa2]        # 409058 <rb_base64_encode@plt+0x6cd8>
  4020b6:	push   0x8
  4020bb:	jmp    402020 <dup2@plt-0x10>

00000000004020c0 <exit@plt>:
  4020c0:	jmp    QWORD PTR [rip+0x6f9a]        # 409060 <rb_base64_encode@plt+0x6ce0>
  4020c6:	push   0x9
  4020cb:	jmp    402020 <dup2@plt-0x10>

00000000004020d0 <__assert_fail@plt>:
  4020d0:	jmp    QWORD PTR [rip+0x6f92]        # 409068 <rb_base64_encode@plt+0x6ce8>
  4020d6:	push   0xa
  4020db:	jmp    402020 <dup2@plt-0x10>

00000000004020e0 <rb_set_nb@plt>:
  4020e0:	jmp    QWORD PTR [rip+0x6f8a]        # 409070 <rb_base64_encode@plt+0x6cf0>
  4020e6:	push   0xb
  4020eb:	jmp    402020 <dup2@plt-0x10>

00000000004020f0 <rb_linebuf_parse@plt>:
  4020f0:	jmp    QWORD PTR [rip+0x6f82]        # 409078 <rb_base64_encode@plt+0x6cf8>
  4020f6:	push   0xc
  4020fb:	jmp    402020 <dup2@plt-0x10>

0000000000402100 <rb_strlcpy@plt>:
  402100:	jmp    QWORD PTR [rip+0x6f7a]        # 409080 <rb_base64_encode@plt+0x6d00>
  402106:	push   0xd
  40210b:	jmp    402020 <dup2@plt-0x10>

0000000000402110 <rb_init_rawbuffers@plt>:
  402110:	jmp    QWORD PTR [rip+0x6f72]        # 409088 <rb_base64_encode@plt+0x6d08>
  402116:	push   0xe
  40211b:	jmp    402020 <dup2@plt-0x10>

0000000000402120 <free@plt>:
  402120:	jmp    QWORD PTR [rip+0x6f6a]        # 409090 <rb_base64_encode@plt+0x6d10>
  402126:	push   0xf
  40212b:	jmp    402020 <dup2@plt-0x10>

0000000000402130 <strlen@plt>:
  402130:	jmp    QWORD PTR [rip+0x6f62]        # 409098 <rb_base64_encode@plt+0x6d18>
  402136:	push   0x10
  40213b:	jmp    402020 <dup2@plt-0x10>

0000000000402140 <rb_lib_loop@plt>:
  402140:	jmp    QWORD PTR [rip+0x6f5a]        # 4090a0 <rb_base64_encode@plt+0x6d20>
  402146:	push   0x11
  40214b:	jmp    402020 <dup2@plt-0x10>

0000000000402150 <rb_read@plt>:
  402150:	jmp    QWORD PTR [rip+0x6f52]        # 4090a8 <rb_base64_encode@plt+0x6d28>
  402156:	push   0x12
  40215b:	jmp    402020 <dup2@plt-0x10>

0000000000402160 <rb_set_type@plt>:
  402160:	jmp    QWORD PTR [rip+0x6f4a]        # 4090b0 <rb_base64_encode@plt+0x6d30>
  402166:	push   0x13
  40216b:	jmp    402020 <dup2@plt-0x10>

0000000000402170 <rb_linebuf_get@plt>:
  402170:	jmp    QWORD PTR [rip+0x6f42]        # 4090b8 <rb_base64_encode@plt+0x6d38>
  402176:	push   0x14
  40217b:	jmp    402020 <dup2@plt-0x10>

0000000000402180 <ntohs@plt>:
  402180:	jmp    QWORD PTR [rip+0x6f3a]        # 4090c0 <rb_base64_encode@plt+0x6d40>
  402186:	push   0x15
  40218b:	jmp    402020 <dup2@plt-0x10>

0000000000402190 <rb_linebuf_flush@plt>:
  402190:	jmp    QWORD PTR [rip+0x6f32]        # 4090c8 <rb_base64_encode@plt+0x6d48>
  402196:	push   0x16
  40219b:	jmp    402020 <dup2@plt-0x10>

00000000004021a0 <rb_linebuf_donebuf@plt>:
  4021a0:	jmp    QWORD PTR [rip+0x6f2a]        # 4090d0 <rb_base64_encode@plt+0x6d50>
  4021a6:	push   0x17
  4021ab:	jmp    402020 <dup2@plt-0x10>

00000000004021b0 <strerror@plt>:
  4021b0:	jmp    QWORD PTR [rip+0x6f22]        # 4090d8 <rb_base64_encode@plt+0x6d58>
  4021b6:	push   0x18
  4021bb:	jmp    402020 <dup2@plt-0x10>

00000000004021c0 <sigaction@plt>:
  4021c0:	jmp    QWORD PTR [rip+0x6f1a]        # 4090e0 <rb_base64_encode@plt+0x6d60>
  4021c6:	push   0x19
  4021cb:	jmp    402020 <dup2@plt-0x10>

00000000004021d0 <rb_strcasestr@plt>:
  4021d0:	jmp    QWORD PTR [rip+0x6f12]        # 4090e8 <rb_base64_encode@plt+0x6d68>
  4021d6:	push   0x1a
  4021db:	jmp    402020 <dup2@plt-0x10>

00000000004021e0 <rb_close@plt>:
  4021e0:	jmp    QWORD PTR [rip+0x6f0a]        # 4090f0 <rb_base64_encode@plt+0x6d70>
  4021e6:	push   0x1b
  4021eb:	jmp    402020 <dup2@plt-0x10>

00000000004021f0 <atoi@plt>:
  4021f0:	jmp    QWORD PTR [rip+0x6f02]        # 4090f8 <rb_base64_encode@plt+0x6d78>
  4021f6:	push   0x1c
  4021fb:	jmp    402020 <dup2@plt-0x10>

0000000000402200 <rb_rawbuf_length@plt>:
  402200:	jmp    QWORD PTR [rip+0x6efa]        # 409100 <rb_base64_encode@plt+0x6d80>
  402206:	push   0x1d
  40220b:	jmp    402020 <dup2@plt-0x10>

0000000000402210 <rb_free_rawbuffer@plt>:
  402210:	jmp    QWORD PTR [rip+0x6ef2]        # 409108 <rb_base64_encode@plt+0x6d88>
  402216:	push   0x1e
  40221b:	jmp    402020 <dup2@plt-0x10>

0000000000402220 <vsnprintf@plt>:
  402220:	jmp    QWORD PTR [rip+0x6eea]        # 409110 <rb_base64_encode@plt+0x6d90>
  402226:	push   0x1f
  40222b:	jmp    402020 <dup2@plt-0x10>

0000000000402230 <getenv@plt>:
  402230:	jmp    QWORD PTR [rip+0x6ee2]        # 409118 <rb_base64_encode@plt+0x6d98>
  402236:	push   0x20
  40223b:	jmp    402020 <dup2@plt-0x10>

0000000000402240 <rb_outofmemory@plt>:
  402240:	jmp    QWORD PTR [rip+0x6eda]        # 409120 <rb_base64_encode@plt+0x6da0>
  402246:	push   0x21
  40224b:	jmp    402020 <dup2@plt-0x10>

0000000000402250 <__errno_location@plt>:
  402250:	jmp    QWORD PTR [rip+0x6ed2]        # 409128 <rb_base64_encode@plt+0x6da8>
  402256:	push   0x22
  40225b:	jmp    402020 <dup2@plt-0x10>

0000000000402260 <sigaddset@plt>:
  402260:	jmp    QWORD PTR [rip+0x6eca]        # 409130 <rb_base64_encode@plt+0x6db0>
  402266:	push   0x23
  40226b:	jmp    402020 <dup2@plt-0x10>

0000000000402270 <__stack_chk_fail@plt>:
  402270:	jmp    QWORD PTR [rip+0x6ec2]        # 409138 <rb_base64_encode@plt+0x6db8>
  402276:	push   0x24
  40227b:	jmp    402020 <dup2@plt-0x10>

0000000000402280 <rb_rawbuf_get@plt>:
  402280:	jmp    QWORD PTR [rip+0x6eba]        # 409140 <rb_base64_encode@plt+0x6dc0>
  402286:	push   0x25
  40228b:	jmp    402020 <dup2@plt-0x10>

0000000000402290 <rb_lib_init@plt>:
  402290:	jmp    QWORD PTR [rip+0x6eb2]        # 409148 <rb_base64_encode@plt+0x6dc8>
  402296:	push   0x26
  40229b:	jmp    402020 <dup2@plt-0x10>

00000000004022a0 <rb_new_rawbuffer@plt>:
  4022a0:	jmp    QWORD PTR [rip+0x6eaa]        # 409150 <rb_base64_encode@plt+0x6dd0>
  4022a6:	push   0x27
  4022ab:	jmp    402020 <dup2@plt-0x10>

00000000004022b0 <rb_open@plt>:
  4022b0:	jmp    QWORD PTR [rip+0x6ea2]        # 409158 <rb_base64_encode@plt+0x6dd8>
  4022b6:	push   0x28
  4022bb:	jmp    402020 <dup2@plt-0x10>

00000000004022c0 <rb_recv_fd_buf@plt>:
  4022c0:	jmp    QWORD PTR [rip+0x6e9a]        # 409160 <rb_base64_encode@plt+0x6de0>
  4022c6:	push   0x29
  4022cb:	jmp    402020 <dup2@plt-0x10>

00000000004022d0 <calloc@plt>:
  4022d0:	jmp    QWORD PTR [rip+0x6e92]        # 409168 <rb_base64_encode@plt+0x6de8>
  4022d6:	push   0x2a
  4022db:	jmp    402020 <dup2@plt-0x10>

00000000004022e0 <getrlimit@plt>:
  4022e0:	jmp    QWORD PTR [rip+0x6e8a]        # 409170 <rb_base64_encode@plt+0x6df0>
  4022e6:	push   0x2b
  4022eb:	jmp    402020 <dup2@plt-0x10>

00000000004022f0 <rb_linebuf_newbuf@plt>:
  4022f0:	jmp    QWORD PTR [rip+0x6e82]        # 409178 <rb_base64_encode@plt+0x6df8>
  4022f6:	push   0x2c
  4022fb:	jmp    402020 <dup2@plt-0x10>

0000000000402300 <rb_linebuf_init@plt>:
  402300:	jmp    QWORD PTR [rip+0x6e7a]        # 409180 <rb_base64_encode@plt+0x6e00>
  402306:	push   0x2d
  40230b:	jmp    402020 <dup2@plt-0x10>

0000000000402310 <sigemptyset@plt>:
  402310:	jmp    QWORD PTR [rip+0x6e72]        # 409188 <rb_base64_encode@plt+0x6e08>
  402316:	push   0x2e
  40231b:	jmp    402020 <dup2@plt-0x10>

0000000000402320 <fwrite@plt>:
  402320:	jmp    QWORD PTR [rip+0x6e6a]        # 409190 <rb_base64_encode@plt+0x6e10>
  402326:	push   0x2f
  40232b:	jmp    402020 <dup2@plt-0x10>

0000000000402330 <htonl@plt>:
  402330:	jmp    QWORD PTR [rip+0x6e62]        # 409198 <rb_base64_encode@plt+0x6e18>
  402336:	push   0x30
  40233b:	jmp    402020 <dup2@plt-0x10>

0000000000402340 <rb_rawbuf_append@plt>:
  402340:	jmp    QWORD PTR [rip+0x6e5a]        # 4091a0 <rb_base64_encode@plt+0x6e20>
  402346:	push   0x31
  40234b:	jmp    402020 <dup2@plt-0x10>

0000000000402350 <rb_rawbuf_flush@plt>:
  402350:	jmp    QWORD PTR [rip+0x6e52]        # 4091a8 <rb_base64_encode@plt+0x6e28>
  402356:	push   0x32
  40235b:	jmp    402020 <dup2@plt-0x10>

0000000000402360 <memcpy@plt>:
  402360:	jmp    QWORD PTR [rip+0x6e4a]        # 4091b0 <rb_base64_encode@plt+0x6e30>
  402366:	push   0x33
  40236b:	jmp    402020 <dup2@plt-0x10>

0000000000402370 <open@plt>:
  402370:	jmp    QWORD PTR [rip+0x6e42]        # 4091b8 <rb_base64_encode@plt+0x6e38>
  402376:	push   0x34
  40237b:	jmp    402020 <dup2@plt-0x10>

0000000000402380 <rb_base64_encode@plt>:
  402380:	jmp    QWORD PTR [rip+0x6e3a]        # 4091c0 <rb_base64_encode@plt+0x6e40>
  402386:	push   0x35
  40238b:	jmp    402020 <dup2@plt-0x10>

Disassembly of section .text:

0000000000402390 <.text>:
  402390:	endbr64 
  402394:	xor    ebp,ebp
  402396:	mov    r9,rdx
  402399:	pop    rsi
  40239a:	mov    rdx,rsp
  40239d:	and    rsp,0xfffffffffffffff0
  4023a1:	push   rax
  4023a2:	push   rsp
  4023a3:	mov    r8,0x406560
  4023aa:	mov    rcx,0x4064f0
  4023b1:	mov    rdi,0x404964
  4023b8:	call   QWORD PTR [rip+0x6c32]        # 408ff0 <rb_base64_encode@plt+0x6c70>
  4023be:	hlt    
  4023bf:	nop
  4023c0:	endbr64 
  4023c4:	ret    
  4023c5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4023cf:	nop
  4023d0:	mov    eax,0x4091e7
  4023d5:	push   rbp
  4023d6:	sub    rax,0x4091e0
  4023dc:	cmp    rax,0xe
  4023e0:	mov    rbp,rsp
  4023e3:	jbe    402400 <rb_base64_encode@plt+0x80>
  4023e5:	mov    eax,0x0
  4023ea:	test   rax,rax
  4023ed:	je     402400 <rb_base64_encode@plt+0x80>
  4023ef:	pop    rbp
  4023f0:	mov    edi,0x4091e0
  4023f5:	jmp    rax
  4023f7:	nop    WORD PTR [rax+rax*1+0x0]
  402400:	pop    rbp
  402401:	ret    
  402402:	nop    DWORD PTR [rax+0x0]
  402406:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402410:	mov    esi,0x4091e0
  402415:	push   rbp
  402416:	sub    rsi,0x4091e0
  40241d:	sar    rsi,0x3
  402421:	mov    rbp,rsp
  402424:	mov    rax,rsi
  402427:	shr    rax,0x3f
  40242b:	add    rsi,rax
  40242e:	sar    rsi,1
  402431:	je     402448 <rb_base64_encode@plt+0xc8>
  402433:	mov    eax,0x0
  402438:	test   rax,rax
  40243b:	je     402448 <rb_base64_encode@plt+0xc8>
  40243d:	pop    rbp
  40243e:	mov    edi,0x4091e0
  402443:	jmp    rax
  402445:	nop    DWORD PTR [rax]
  402448:	pop    rbp
  402449:	ret    
  40244a:	nop    WORD PTR [rax+rax*1+0x0]
  402450:	cmp    BYTE PTR [rip+0x6d89],0x0        # 4091e0 <rb_base64_encode@plt+0x6e60>
  402457:	jne    40246a <rb_base64_encode@plt+0xea>
  402459:	push   rbp
  40245a:	mov    rbp,rsp
  40245d:	call   4023d0 <rb_base64_encode@plt+0x50>
  402462:	pop    rbp
  402463:	mov    BYTE PTR [rip+0x6d76],0x1        # 4091e0 <rb_base64_encode@plt+0x6e60>
  40246a:	repz ret 
  40246c:	nop    DWORD PTR [rax+0x0]
  402470:	mov    edi,0x408df0
  402475:	cmp    QWORD PTR [rdi],0x0
  402479:	jne    402480 <rb_base64_encode@plt+0x100>
  40247b:	jmp    402410 <rb_base64_encode@plt+0x90>
  40247d:	nop    DWORD PTR [rax]
  402480:	mov    eax,0x0
  402485:	test   rax,rax
  402488:	je     40247b <rb_base64_encode@plt+0xfb>
  40248a:	push   rbp
  40248b:	mov    rbp,rsp
  40248e:	call   rax
  402490:	pop    rbp
  402491:	jmp    402410 <rb_base64_encode@plt+0x90>
  402496:	push   rbp
  402497:	mov    rbp,rsp
  40249a:	sub    rsp,0x20
  40249e:	mov    QWORD PTR [rbp-0x8],rdi
  4024a2:	mov    QWORD PTR [rbp-0x10],rsi
  4024a6:	mov    QWORD PTR [rbp-0x18],rdx
  4024aa:	cmp    QWORD PTR [rbp-0x8],0x0
  4024af:	jne    4024d0 <rb_base64_encode@plt+0x150>
  4024b1:	lea    rcx,[rip+0x4e00]        # 4072b8 <rb_base64_encode@plt+0x4f38>
  4024b8:	mov    edx,0x8f
  4024bd:	lea    rsi,[rip+0x4b4c]        # 407010 <rb_base64_encode@plt+0x4c90>
  4024c4:	lea    rdi,[rip+0x4b61]        # 40702c <rb_base64_encode@plt+0x4cac>
  4024cb:	call   4020d0 <__assert_fail@plt>
  4024d0:	cmp    QWORD PTR [rbp-0x10],0x0
  4024d5:	jne    4024f6 <rb_base64_encode@plt+0x176>
  4024d7:	lea    rcx,[rip+0x4dda]        # 4072b8 <rb_base64_encode@plt+0x4f38>
  4024de:	mov    edx,0x90
  4024e3:	lea    rsi,[rip+0x4b26]        # 407010 <rb_base64_encode@plt+0x4c90>
  4024ea:	lea    rdi,[rip+0x4b48]        # 407039 <rb_base64_encode@plt+0x4cb9>
  4024f1:	call   4020d0 <__assert_fail@plt>
  4024f6:	cmp    QWORD PTR [rbp-0x18],0x0
  4024fb:	jne    40251c <rb_base64_encode@plt+0x19c>
  4024fd:	lea    rcx,[rip+0x4db4]        # 4072b8 <rb_base64_encode@plt+0x4f38>
  402504:	mov    edx,0x91
  402509:	lea    rsi,[rip+0x4b00]        # 407010 <rb_base64_encode@plt+0x4c90>
  402510:	lea    rdi,[rip+0x4b2c]        # 407043 <rb_base64_encode@plt+0x4cc3>
  402517:	call   4020d0 <__assert_fail@plt>
  40251c:	mov    rax,QWORD PTR [rbp-0x10]
  402520:	mov    rdx,QWORD PTR [rbp-0x8]
  402524:	mov    QWORD PTR [rax],rdx
  402527:	mov    rax,QWORD PTR [rbp-0x10]
  40252b:	mov    QWORD PTR [rax+0x8],0x0
  402533:	mov    rax,QWORD PTR [rbp-0x18]
  402537:	mov    rdx,QWORD PTR [rax]
  40253a:	mov    rax,QWORD PTR [rbp-0x10]
  40253e:	mov    QWORD PTR [rax+0x10],rdx
  402542:	mov    rax,QWORD PTR [rbp-0x18]
  402546:	mov    rax,QWORD PTR [rax]
  402549:	test   rax,rax
  40254c:	je     40255f <rb_base64_encode@plt+0x1df>
  40254e:	mov    rax,QWORD PTR [rbp-0x18]
  402552:	mov    rax,QWORD PTR [rax]
  402555:	mov    rdx,QWORD PTR [rbp-0x10]
  402559:	mov    QWORD PTR [rax+0x8],rdx
  40255d:	jmp    402578 <rb_base64_encode@plt+0x1f8>
  40255f:	mov    rax,QWORD PTR [rbp-0x18]
  402563:	mov    rax,QWORD PTR [rax+0x8]
  402567:	test   rax,rax
  40256a:	jne    402578 <rb_base64_encode@plt+0x1f8>
  40256c:	mov    rax,QWORD PTR [rbp-0x18]
  402570:	mov    rdx,QWORD PTR [rbp-0x10]
  402574:	mov    QWORD PTR [rax+0x8],rdx
  402578:	mov    rax,QWORD PTR [rbp-0x18]
  40257c:	mov    rdx,QWORD PTR [rbp-0x10]
  402580:	mov    QWORD PTR [rax],rdx
  402583:	mov    rax,QWORD PTR [rbp-0x18]
  402587:	mov    rax,QWORD PTR [rax+0x10]
  40258b:	lea    rdx,[rax+0x1]
  40258f:	mov    rax,QWORD PTR [rbp-0x18]
  402593:	mov    QWORD PTR [rax+0x10],rdx
  402597:	nop
  402598:	leave  
  402599:	ret    
  40259a:	push   rbp
  40259b:	mov    rbp,rsp
  40259e:	sub    rsp,0x20
  4025a2:	mov    QWORD PTR [rbp-0x8],rdi
  4025a6:	mov    QWORD PTR [rbp-0x10],rsi
  4025aa:	mov    QWORD PTR [rbp-0x18],rdx
  4025ae:	cmp    QWORD PTR [rbp-0x10],0x0
  4025b3:	jne    4025d4 <rb_base64_encode@plt+0x254>
  4025b5:	lea    rcx,[rip+0x4d24]        # 4072e0 <rb_base64_encode@plt+0x4f60>
  4025bc:	mov    edx,0xd3
  4025c1:	lea    rsi,[rip+0x4a48]        # 407010 <rb_base64_encode@plt+0x4c90>
  4025c8:	lea    rdi,[rip+0x4a6a]        # 407039 <rb_base64_encode@plt+0x4cb9>
  4025cf:	call   4020d0 <__assert_fail@plt>
  4025d4:	cmp    QWORD PTR [rbp-0x18],0x0
  4025d9:	jne    4025fa <rb_base64_encode@plt+0x27a>
  4025db:	lea    rcx,[rip+0x4cfe]        # 4072e0 <rb_base64_encode@plt+0x4f60>
  4025e2:	mov    edx,0xd4
  4025e7:	lea    rsi,[rip+0x4a22]        # 407010 <rb_base64_encode@plt+0x4c90>
  4025ee:	lea    rdi,[rip+0x4a4e]        # 407043 <rb_base64_encode@plt+0x4cc3>
  4025f5:	call   4020d0 <__assert_fail@plt>
  4025fa:	cmp    QWORD PTR [rbp-0x8],0x0
  4025ff:	jne    402620 <rb_base64_encode@plt+0x2a0>
  402601:	lea    rcx,[rip+0x4cd8]        # 4072e0 <rb_base64_encode@plt+0x4f60>
  402608:	mov    edx,0xd5
  40260d:	lea    rsi,[rip+0x49fc]        # 407010 <rb_base64_encode@plt+0x4c90>
  402614:	lea    rdi,[rip+0x4a11]        # 40702c <rb_base64_encode@plt+0x4cac>
  40261b:	call   4020d0 <__assert_fail@plt>
  402620:	mov    rax,QWORD PTR [rbp-0x10]
  402624:	mov    rdx,QWORD PTR [rbp-0x8]
  402628:	mov    QWORD PTR [rax],rdx
  40262b:	mov    rax,QWORD PTR [rbp-0x10]
  40262f:	mov    QWORD PTR [rax+0x10],0x0
  402637:	mov    rax,QWORD PTR [rbp-0x18]
  40263b:	mov    rdx,QWORD PTR [rax+0x8]
  40263f:	mov    rax,QWORD PTR [rbp-0x10]
  402643:	mov    QWORD PTR [rax+0x8],rdx
  402647:	mov    rax,QWORD PTR [rbp-0x18]
  40264b:	mov    rax,QWORD PTR [rax+0x8]
  40264f:	test   rax,rax
  402652:	je     402666 <rb_base64_encode@plt+0x2e6>
  402654:	mov    rax,QWORD PTR [rbp-0x18]
  402658:	mov    rax,QWORD PTR [rax+0x8]
  40265c:	mov    rdx,QWORD PTR [rbp-0x10]
  402660:	mov    QWORD PTR [rax+0x10],rdx
  402664:	jmp    40267d <rb_base64_encode@plt+0x2fd>
  402666:	mov    rax,QWORD PTR [rbp-0x18]
  40266a:	mov    rax,QWORD PTR [rax]
  40266d:	test   rax,rax
  402670:	jne    40267d <rb_base64_encode@plt+0x2fd>
  402672:	mov    rax,QWORD PTR [rbp-0x18]
  402676:	mov    rdx,QWORD PTR [rbp-0x10]
  40267a:	mov    QWORD PTR [rax],rdx
  40267d:	mov    rax,QWORD PTR [rbp-0x18]
  402681:	mov    rdx,QWORD PTR [rbp-0x10]
  402685:	mov    QWORD PTR [rax+0x8],rdx
  402689:	mov    rax,QWORD PTR [rbp-0x18]
  40268d:	mov    rax,QWORD PTR [rax+0x10]
  402691:	lea    rdx,[rax+0x1]
  402695:	mov    rax,QWORD PTR [rbp-0x18]
  402699:	mov    QWORD PTR [rax+0x10],rdx
  40269d:	nop
  40269e:	leave  
  40269f:	ret    
  4026a0:	push   rbp
  4026a1:	mov    rbp,rsp
  4026a4:	sub    rsp,0x10
  4026a8:	mov    QWORD PTR [rbp-0x8],rdi
  4026ac:	mov    QWORD PTR [rbp-0x10],rsi
  4026b0:	cmp    QWORD PTR [rbp-0x8],0x0
  4026b5:	jne    4026d6 <rb_base64_encode@plt+0x356>
  4026b7:	lea    rcx,[rip+0x4c0a]        # 4072c8 <rb_base64_encode@plt+0x4f48>
  4026be:	mov    edx,0xeb
  4026c3:	lea    rsi,[rip+0x4946]        # 407010 <rb_base64_encode@plt+0x4c90>
  4026ca:	lea    rdi,[rip+0x4968]        # 407039 <rb_base64_encode@plt+0x4cb9>
  4026d1:	call   4020d0 <__assert_fail@plt>
  4026d6:	cmp    QWORD PTR [rbp-0x10],0x0
  4026db:	jne    4026fc <rb_base64_encode@plt+0x37c>
  4026dd:	lea    rcx,[rip+0x4be4]        # 4072c8 <rb_base64_encode@plt+0x4f48>
  4026e4:	mov    edx,0xec
  4026e9:	lea    rsi,[rip+0x4920]        # 407010 <rb_base64_encode@plt+0x4c90>
  4026f0:	lea    rdi,[rip+0x494c]        # 407043 <rb_base64_encode@plt+0x4cc3>
  4026f7:	call   4020d0 <__assert_fail@plt>
  4026fc:	mov    rax,QWORD PTR [rbp-0x8]
  402700:	mov    rax,QWORD PTR [rax+0x10]
  402704:	test   rax,rax
  402707:	je     40271f <rb_base64_encode@plt+0x39f>
  402709:	mov    rax,QWORD PTR [rbp-0x8]
  40270d:	mov    rax,QWORD PTR [rax+0x10]
  402711:	mov    rdx,QWORD PTR [rbp-0x8]
  402715:	mov    rdx,QWORD PTR [rdx+0x8]
  402719:	mov    QWORD PTR [rax+0x8],rdx
  40271d:	jmp    40272f <rb_base64_encode@plt+0x3af>
  40271f:	mov    rax,QWORD PTR [rbp-0x8]
  402723:	mov    rdx,QWORD PTR [rax+0x8]
  402727:	mov    rax,QWORD PTR [rbp-0x10]
  40272b:	mov    QWORD PTR [rax+0x8],rdx
  40272f:	mov    rax,QWORD PTR [rbp-0x8]
  402733:	mov    rax,QWORD PTR [rax+0x8]
  402737:	test   rax,rax
  40273a:	je     402752 <rb_base64_encode@plt+0x3d2>
  40273c:	mov    rax,QWORD PTR [rbp-0x8]
  402740:	mov    rax,QWORD PTR [rax+0x8]
  402744:	mov    rdx,QWORD PTR [rbp-0x8]
  402748:	mov    rdx,QWORD PTR [rdx+0x10]
  40274c:	mov    QWORD PTR [rax+0x10],rdx
  402750:	jmp    402761 <rb_base64_encode@plt+0x3e1>
  402752:	mov    rax,QWORD PTR [rbp-0x8]
  402756:	mov    rdx,QWORD PTR [rax+0x10]
  40275a:	mov    rax,QWORD PTR [rbp-0x10]
  40275e:	mov    QWORD PTR [rax],rdx
  402761:	mov    rax,QWORD PTR [rbp-0x8]
  402765:	mov    QWORD PTR [rax+0x8],0x0
  40276d:	mov    rax,QWORD PTR [rbp-0x8]
  402771:	mov    rdx,QWORD PTR [rax+0x8]
  402775:	mov    rax,QWORD PTR [rbp-0x8]
  402779:	mov    QWORD PTR [rax+0x10],rdx
  40277d:	mov    rax,QWORD PTR [rbp-0x10]
  402781:	mov    rax,QWORD PTR [rax+0x10]
  402785:	lea    rdx,[rax-0x1]
  402789:	mov    rax,QWORD PTR [rbp-0x10]
  40278d:	mov    QWORD PTR [rax+0x10],rdx
  402791:	nop
  402792:	leave  
  402793:	ret    
  402794:	push   rbp
  402795:	mov    rbp,rsp
  402798:	sub    rsp,0x20
  40279c:	mov    QWORD PTR [rbp-0x18],rdi
  4027a0:	mov    rax,QWORD PTR [rbp-0x18]
  4027a4:	mov    rsi,rax
  4027a7:	mov    edi,0x1
  4027ac:	call   4022d0 <calloc@plt>
  4027b1:	mov    QWORD PTR [rbp-0x8],rax
  4027b5:	cmp    QWORD PTR [rbp-0x8],0x0
  4027ba:	sete   al
  4027bd:	movzx  eax,al
  4027c0:	test   rax,rax
  4027c3:	je     4027ca <rb_base64_encode@plt+0x44a>
  4027c5:	call   402240 <rb_outofmemory@plt>
  4027ca:	mov    rax,QWORD PTR [rbp-0x8]
  4027ce:	leave  
  4027cf:	ret    
  4027d0:	push   rbp
  4027d1:	mov    rbp,rsp
  4027d4:	sub    rsp,0x10
  4027d8:	mov    QWORD PTR [rbp-0x8],rdi
  4027dc:	cmp    QWORD PTR [rbp-0x8],0x0
  4027e1:	setne  al
  4027e4:	movzx  eax,al
  4027e7:	test   rax,rax
  4027ea:	je     4027f8 <rb_base64_encode@plt+0x478>
  4027ec:	mov    rax,QWORD PTR [rbp-0x8]
  4027f0:	mov    rdi,rax
  4027f3:	call   402120 <free@plt>
  4027f8:	nop
  4027f9:	leave  
  4027fa:	ret    
  4027fb:	push   rbp
  4027fc:	mov    rbp,rsp
  4027ff:	sub    rsp,0x20
  402803:	mov    QWORD PTR [rbp-0x18],rdi
  402807:	mov    rax,QWORD PTR fs:0x28
  402810:	mov    QWORD PTR [rbp-0x8],rax
  402814:	xor    eax,eax
  402816:	mov    rax,QWORD PTR [rbp-0x18]
  40281a:	mov    eax,DWORD PTR [rax]
  40281c:	mov    DWORD PTR [rbp-0xc],eax
  40281f:	mov    eax,DWORD PTR [rbp-0xc]
  402822:	mov    rdx,QWORD PTR [rbp-0x8]
  402826:	xor    rdx,QWORD PTR fs:0x28
  40282f:	je     402836 <rb_base64_encode@plt+0x4b6>
  402831:	call   402270 <__stack_chk_fail@plt>
  402836:	leave  
  402837:	ret    
  402838:	push   rbp
  402839:	mov    rbp,rsp
  40283c:	mov    QWORD PTR [rbp-0x8],rdi
  402840:	mov    DWORD PTR [rbp-0xc],esi
  402843:	mov    edx,DWORD PTR [rbp-0xc]
  402846:	mov    rax,QWORD PTR [rbp-0x8]
  40284a:	mov    DWORD PTR [rax],edx
  40284c:	nop
  40284d:	pop    rbp
  40284e:	ret    
  40284f:	push   rbp
  402850:	mov    rbp,rsp
  402853:	mov    QWORD PTR [rbp-0x8],rdi
  402857:	mov    DWORD PTR [rbp-0xc],esi
  40285a:	mov    rax,QWORD PTR [rbp-0x8]
  40285e:	movzx  eax,BYTE PTR [rax]
  402861:	and    eax,0xfffffff0
  402864:	mov    edx,eax
  402866:	mov    rax,QWORD PTR [rbp-0x8]
  40286a:	mov    BYTE PTR [rax],dl
  40286c:	mov    rax,QWORD PTR [rbp-0x8]
  402870:	movzx  eax,BYTE PTR [rax]
  402873:	mov    edx,eax
  402875:	mov    eax,DWORD PTR [rbp-0xc]
  402878:	and    eax,0xf
  40287b:	or     eax,edx
  40287d:	mov    edx,eax
  40287f:	mov    rax,QWORD PTR [rbp-0x8]
  402883:	mov    BYTE PTR [rax],dl
  402885:	nop
  402886:	pop    rbp
  402887:	ret    
  402888:	push   rbp
  402889:	mov    rbp,rsp
  40288c:	mov    QWORD PTR [rbp-0x8],rdi
  402890:	mov    DWORD PTR [rbp-0xc],esi
  402893:	mov    rax,QWORD PTR [rbp-0x8]
  402897:	movzx  eax,BYTE PTR [rax]
  40289a:	and    eax,0x7f
  40289d:	mov    edx,eax
  40289f:	mov    rax,QWORD PTR [rbp-0x8]
  4028a3:	mov    BYTE PTR [rax],dl
  4028a5:	mov    rax,QWORD PTR [rbp-0x8]
  4028a9:	movzx  eax,BYTE PTR [rax]
  4028ac:	mov    edx,eax
  4028ae:	mov    eax,DWORD PTR [rbp-0xc]
  4028b1:	shl    eax,0x7
  4028b4:	or     eax,edx
  4028b6:	mov    edx,eax
  4028b8:	mov    rax,QWORD PTR [rbp-0x8]
  4028bc:	mov    BYTE PTR [rax],dl
  4028be:	nop
  4028bf:	pop    rbp
  4028c0:	ret    
  4028c1:	push   rbp
  4028c2:	mov    rbp,rsp
  4028c5:	mov    DWORD PTR [rbp-0x4],edi
  4028c8:	nop
  4028c9:	pop    rbp
  4028ca:	ret    
  4028cb:	push   rbp
  4028cc:	mov    rbp,rsp
  4028cf:	sub    rsp,0xa0
  4028d6:	mov    rax,QWORD PTR fs:0x28
  4028df:	mov    QWORD PTR [rbp-0x8],rax
  4028e3:	xor    eax,eax
  4028e5:	mov    DWORD PTR [rbp-0x18],0x0
  4028ec:	mov    QWORD PTR [rbp-0xa0],0x1
  4028f7:	lea    rax,[rbp-0xa0]
  4028fe:	add    rax,0x8
  402902:	mov    rdi,rax
  402905:	call   402310 <sigemptyset@plt>
  40290a:	lea    rax,[rbp-0xa0]
  402911:	add    rax,0x8
  402915:	mov    esi,0xd
  40291a:	mov    rdi,rax
  40291d:	call   402260 <sigaddset@plt>
  402922:	lea    rax,[rbp-0xa0]
  402929:	add    rax,0x8
  40292d:	mov    esi,0xe
  402932:	mov    rdi,rax
  402935:	call   402260 <sigaddset@plt>
  40293a:	lea    rax,[rbp-0xa0]
  402941:	add    rax,0x8
  402945:	mov    esi,0x5
  40294a:	mov    rdi,rax
  40294d:	call   402260 <sigaddset@plt>
  402952:	lea    rax,[rbp-0xa0]
  402959:	add    rax,0x8
  40295d:	mov    esi,0x1c
  402962:	mov    rdi,rax
  402965:	call   402260 <sigaddset@plt>
  40296a:	lea    rax,[rbp-0xa0]
  402971:	mov    edx,0x0
  402976:	mov    rsi,rax
  402979:	mov    edi,0x1c
  40297e:	call   4021c0 <sigaction@plt>
  402983:	lea    rax,[rbp-0xa0]
  40298a:	mov    edx,0x0
  40298f:	mov    rsi,rax
  402992:	mov    edi,0xd
  402997:	call   4021c0 <sigaction@plt>
  40299c:	lea    rax,[rbp-0xa0]
  4029a3:	mov    edx,0x0
  4029a8:	mov    rsi,rax
  4029ab:	mov    edi,0x5
  4029b0:	call   4021c0 <sigaction@plt>
  4029b5:	lea    rax,[rip+0xffffffffffffff05]        # 4028c1 <rb_base64_encode@plt+0x541>
  4029bc:	mov    QWORD PTR [rbp-0xa0],rax
  4029c3:	lea    rax,[rbp-0xa0]
  4029ca:	mov    edx,0x0
  4029cf:	mov    rsi,rax
  4029d2:	mov    edi,0xe
  4029d7:	call   4021c0 <sigaction@plt>
  4029dc:	nop
  4029dd:	mov    rax,QWORD PTR [rbp-0x8]
  4029e1:	xor    rax,QWORD PTR fs:0x28
  4029ea:	je     4029f1 <rb_base64_encode@plt+0x671>
  4029ec:	call   402270 <__stack_chk_fail@plt>
  4029f1:	leave  
  4029f2:	ret    
  4029f3:	push   rbp
  4029f4:	mov    rbp,rsp
  4029f7:	sub    rsp,0x20
  4029fb:	mov    rax,QWORD PTR fs:0x28
  402a04:	mov    QWORD PTR [rbp-0x8],rax
  402a08:	xor    eax,eax
  402a0a:	lea    rax,[rbp-0x20]
  402a0e:	mov    rsi,rax
  402a11:	mov    edi,0x7
  402a16:	call   4022e0 <getrlimit@plt>
  402a1b:	test   eax,eax
  402a1d:	jne    402a25 <rb_base64_encode@plt+0x6a5>
  402a1f:	mov    rax,QWORD PTR [rbp-0x20]
  402a23:	jmp    402a2a <rb_base64_encode@plt+0x6aa>
  402a25:	mov    eax,0xffff
  402a2a:	mov    rdx,QWORD PTR [rbp-0x8]
  402a2e:	xor    rdx,QWORD PTR fs:0x28
  402a37:	je     402a3e <rb_base64_encode@plt+0x6be>
  402a39:	call   402270 <__stack_chk_fail@plt>
  402a3e:	leave  
  402a3f:	ret    
  402a40:	push   rbp
  402a41:	mov    rbp,rsp
  402a44:	sub    rsp,0x10
  402a48:	mov    QWORD PTR [rbp-0x8],rdi
  402a4c:	mov    DWORD PTR [rbp-0xc],esi
  402a4f:	mov    rax,QWORD PTR [rbp-0x8]
  402a53:	mov    edx,DWORD PTR [rbp-0xc]
  402a56:	mov    DWORD PTR [rax+0x80],edx
  402a5c:	mov    ecx,DWORD PTR [rbp-0xc]
  402a5f:	mov    edx,0x10624dd3
  402a64:	mov    eax,ecx
  402a66:	mul    edx
  402a68:	mov    eax,edx
  402a6a:	shr    eax,0x7
  402a6d:	imul   eax,eax,0x7d0
  402a73:	sub    ecx,eax
  402a75:	mov    eax,ecx
  402a77:	mov    edx,eax
  402a79:	mov    rax,rdx
  402a7c:	add    rax,rax
  402a7f:	add    rax,rdx
  402a82:	shl    rax,0x3
  402a86:	lea    rdx,[rip+0x6793]        # 409220 <rb_base64_encode@plt+0x6ea0>
  402a8d:	add    rdx,rax
  402a90:	mov    rcx,QWORD PTR [rbp-0x8]
  402a94:	mov    rax,QWORD PTR [rbp-0x8]
  402a98:	mov    rsi,rcx
  402a9b:	mov    rdi,rax
  402a9e:	call   402496 <rb_base64_encode@plt+0x116>
  402aa3:	nop
  402aa4:	leave  
  402aa5:	ret    
  402aa6:	push   rbp
  402aa7:	mov    rbp,rsp
  402aaa:	sub    rsp,0x10
  402aae:	mov    QWORD PTR [rbp-0x8],rdi
  402ab2:	mov    rax,QWORD PTR [rbp-0x8]
  402ab6:	add    rax,0x58
  402aba:	mov    rdi,rax
  402abd:	call   4021a0 <rb_linebuf_donebuf@plt>
  402ac2:	mov    rax,QWORD PTR [rbp-0x8]
  402ac6:	add    rax,0x30
  402aca:	mov    rdi,rax
  402acd:	call   4021a0 <rb_linebuf_donebuf@plt>
  402ad2:	mov    rax,QWORD PTR [rbp-0x8]
  402ad6:	mov    rax,QWORD PTR [rax+0x28]
  402ada:	mov    rdi,rax
  402add:	call   402210 <rb_free_rawbuffer@plt>
  402ae2:	mov    rax,QWORD PTR [rbp-0x8]
  402ae6:	mov    rax,QWORD PTR [rax+0x20]
  402aea:	mov    rdi,rax
  402aed:	call   402210 <rb_free_rawbuffer@plt>
  402af2:	mov    rax,QWORD PTR [rbp-0x8]
  402af6:	mov    rdi,rax
  402af9:	call   4027d0 <rb_base64_encode@plt+0x450>
  402afe:	nop
  402aff:	leave  
  402b00:	ret    
  402b01:	push   rbp
  402b02:	mov    rbp,rsp
  402b05:	sub    rsp,0x30
  402b09:	mov    QWORD PTR [rbp-0x28],rdi
  402b0d:	mov    rax,QWORD PTR [rip+0x1228c]        # 414da0 <rb_base64_encode@plt+0x12a20>
  402b14:	mov    QWORD PTR [rbp-0x18],rax
  402b18:	cmp    QWORD PTR [rbp-0x18],0x0
  402b1d:	je     402b29 <rb_base64_encode@plt+0x7a9>
  402b1f:	mov    rax,QWORD PTR [rbp-0x18]
  402b23:	mov    rax,QWORD PTR [rax+0x10]
  402b27:	jmp    402b2e <rb_base64_encode@plt+0x7ae>
  402b29:	mov    eax,0x0
  402b2e:	mov    QWORD PTR [rbp-0x10],rax
  402b32:	jmp    402b6d <rb_base64_encode@plt+0x7ed>
  402b34:	mov    rax,QWORD PTR [rbp-0x18]
  402b38:	mov    rax,QWORD PTR [rax]
  402b3b:	mov    QWORD PTR [rbp-0x8],rax
  402b3f:	mov    rax,QWORD PTR [rbp-0x8]
  402b43:	mov    rdi,rax
  402b46:	call   402aa6 <rb_base64_encode@plt+0x726>
  402b4b:	mov    rax,QWORD PTR [rbp-0x10]
  402b4f:	mov    QWORD PTR [rbp-0x18],rax
  402b53:	cmp    QWORD PTR [rbp-0x18],0x0
  402b58:	je     402b64 <rb_base64_encode@plt+0x7e4>
  402b5a:	mov    rax,QWORD PTR [rbp-0x18]
  402b5e:	mov    rax,QWORD PTR [rax+0x10]
  402b62:	jmp    402b69 <rb_base64_encode@plt+0x7e9>
  402b64:	mov    eax,0x0
  402b69:	mov    QWORD PTR [rbp-0x10],rax
  402b6d:	cmp    QWORD PTR [rbp-0x18],0x0
  402b72:	jne    402b34 <rb_base64_encode@plt+0x7b4>
  402b74:	mov    QWORD PTR [rip+0x12221],0x0        # 414da0 <rb_base64_encode@plt+0x12a20>
  402b7f:	mov    rax,QWORD PTR [rip+0x1221a]        # 414da0 <rb_base64_encode@plt+0x12a20>
  402b86:	mov    QWORD PTR [rip+0x1221b],rax        # 414da8 <rb_base64_encode@plt+0x12a28>
  402b8d:	nop
  402b8e:	leave  
  402b8f:	ret    
  402b90:	push   rbp
  402b91:	mov    rbp,rsp
  402b94:	sub    rsp,0x20
  402b98:	mov    QWORD PTR [rbp-0x18],rdi
  402b9c:	mov    QWORD PTR [rbp-0x20],rsi
  402ba0:	mov    rax,QWORD PTR [rbp-0x20]
  402ba4:	mov    QWORD PTR [rbp-0x8],rax
  402ba8:	mov    rax,QWORD PTR [rbp-0x8]
  402bac:	movzx  eax,BYTE PTR [rax+0xb8]
  402bb3:	movzx  eax,al
  402bb6:	and    eax,0x2
  402bb9:	test   eax,eax
  402bbb:	jne    402c93 <rb_base64_encode@plt+0x913>
  402bc1:	jmp    402be1 <rb_base64_encode@plt+0x861>
  402bc3:	mov    rax,QWORD PTR [rbp-0x8]
  402bc7:	mov    rdx,QWORD PTR [rax+0xb0]
  402bce:	mov    eax,DWORD PTR [rbp-0xc]
  402bd1:	cdqe   
  402bd3:	add    rdx,rax
  402bd6:	mov    rax,QWORD PTR [rbp-0x8]
  402bda:	mov    QWORD PTR [rax+0xb0],rdx
  402be1:	mov    rax,QWORD PTR [rbp-0x8]
  402be5:	lea    rdx,[rax+0x30]
  402be9:	mov    rax,QWORD PTR [rbp-0x18]
  402bed:	mov    rsi,rdx
  402bf0:	mov    rdi,rax
  402bf3:	call   402190 <rb_linebuf_flush@plt>
  402bf8:	mov    DWORD PTR [rbp-0xc],eax
  402bfb:	cmp    DWORD PTR [rbp-0xc],0x0
  402bff:	jg     402bc3 <rb_base64_encode@plt+0x843>
  402c01:	cmp    DWORD PTR [rbp-0xc],0x0
  402c05:	je     402c1f <rb_base64_encode@plt+0x89f>
  402c07:	cmp    DWORD PTR [rbp-0xc],0x0
  402c0b:	jns    402c3c <rb_base64_encode@plt+0x8bc>
  402c0d:	call   402250 <__errno_location@plt>
  402c12:	mov    eax,DWORD PTR [rax]
  402c14:	mov    edi,eax
  402c16:	call   402070 <rb_ignore_errno@plt>
  402c1b:	test   eax,eax
  402c1d:	jne    402c3c <rb_base64_encode@plt+0x8bc>
  402c1f:	mov    rax,QWORD PTR [rbp-0x20]
  402c23:	mov    edx,0x0
  402c28:	mov    esi,0x0
  402c2d:	mov    rdi,rax
  402c30:	mov    eax,0x0
  402c35:	call   40329d <rb_base64_encode@plt+0xf1d>
  402c3a:	jmp    402c94 <rb_base64_encode@plt+0x914>
  402c3c:	mov    rax,QWORD PTR [rbp-0x8]
  402c40:	mov    eax,DWORD PTR [rax+0x4c]
  402c43:	test   eax,eax
  402c45:	jle    402c6f <rb_base64_encode@plt+0x8ef>
  402c47:	mov    rax,QWORD PTR [rbp-0x8]
  402c4b:	mov    rax,QWORD PTR [rax+0x90]
  402c52:	mov    rdx,QWORD PTR [rbp-0x8]
  402c56:	mov    rcx,rdx
  402c59:	lea    rdx,[rip+0xffffffffffffff30]        # 402b90 <rb_base64_encode@plt+0x810>
  402c60:	mov    esi,0x2
  402c65:	mov    rdi,rax
  402c68:	call   402090 <rb_setselect@plt>
  402c6d:	jmp    402c94 <rb_base64_encode@plt+0x914>
  402c6f:	mov    rax,QWORD PTR [rbp-0x8]
  402c73:	mov    rax,QWORD PTR [rax+0x90]
  402c7a:	mov    ecx,0x0
  402c7f:	mov    edx,0x0
  402c84:	mov    esi,0x2
  402c89:	mov    rdi,rax
  402c8c:	call   402090 <rb_setselect@plt>
  402c91:	jmp    402c94 <rb_base64_encode@plt+0x914>
  402c93:	nop
  402c94:	leave  
  402c95:	ret    
  402c96:	push   rbp
  402c97:	mov    rbp,rsp
  402c9a:	sub    rsp,0x30
  402c9e:	mov    QWORD PTR [rbp-0x28],rdi
  402ca2:	mov    QWORD PTR [rbp-0x30],rsi
  402ca6:	mov    rax,QWORD PTR [rbp-0x30]
  402caa:	mov    QWORD PTR [rbp-0x10],rax
  402cae:	mov    rax,QWORD PTR [rbp-0x10]
  402cb2:	movzx  eax,BYTE PTR [rax+0xb8]
  402cb9:	movzx  eax,al
  402cbc:	and    eax,0x2
  402cbf:	test   eax,eax
  402cc1:	jne    402e4a <rb_base64_encode@plt+0xaca>
  402cc7:	jmp    402ce7 <rb_base64_encode@plt+0x967>
  402cc9:	mov    rax,QWORD PTR [rbp-0x10]
  402ccd:	mov    rdx,QWORD PTR [rax+0x98]
  402cd4:	mov    eax,DWORD PTR [rbp-0x14]
  402cd7:	cdqe   
  402cd9:	add    rdx,rax
  402cdc:	mov    rax,QWORD PTR [rbp-0x10]
  402ce0:	mov    QWORD PTR [rax+0x98],rdx
  402ce7:	mov    rax,QWORD PTR [rbp-0x10]
  402ceb:	mov    rax,QWORD PTR [rax+0x20]
  402cef:	mov    rdx,QWORD PTR [rbp-0x28]
  402cf3:	mov    rsi,rdx
  402cf6:	mov    rdi,rax
  402cf9:	call   402350 <rb_rawbuf_flush@plt>
  402cfe:	mov    DWORD PTR [rbp-0x14],eax
  402d01:	cmp    DWORD PTR [rbp-0x14],0x0
  402d05:	jg     402cc9 <rb_base64_encode@plt+0x949>
  402d07:	cmp    DWORD PTR [rbp-0x14],0x0
  402d0b:	je     402d25 <rb_base64_encode@plt+0x9a5>
  402d0d:	cmp    DWORD PTR [rbp-0x14],0x0
  402d11:	jns    402d8d <rb_base64_encode@plt+0xa0d>
  402d13:	call   402250 <__errno_location@plt>
  402d18:	mov    eax,DWORD PTR [rax]
  402d1a:	mov    edi,eax
  402d1c:	call   402070 <rb_ignore_errno@plt>
  402d21:	test   eax,eax
  402d23:	jne    402d8d <rb_base64_encode@plt+0xa0d>
  402d25:	cmp    DWORD PTR [rbp-0x14],0x0
  402d29:	jne    402d52 <rb_base64_encode@plt+0x9d2>
  402d2b:	mov    rdx,QWORD PTR [rip+0x64a6]        # 4091d8 <rb_base64_encode@plt+0x6e58>
  402d32:	mov    rax,QWORD PTR [rbp-0x10]
  402d36:	mov    rcx,rdx
  402d39:	lea    rdx,[rip+0x4332]        # 407072 <rb_base64_encode@plt+0x4cf2>
  402d40:	mov    esi,0x1
  402d45:	mov    rdi,rax
  402d48:	mov    eax,0x0
  402d4d:	call   40329d <rb_base64_encode@plt+0xf1d>
  402d52:	call   402250 <__errno_location@plt>
  402d57:	mov    eax,DWORD PTR [rax]
  402d59:	mov    edi,eax
  402d5b:	call   4021b0 <strerror@plt>
  402d60:	mov    QWORD PTR [rbp-0x8],rax
  402d64:	mov    rdx,QWORD PTR [rbp-0x8]
  402d68:	mov    rax,QWORD PTR [rbp-0x10]
  402d6c:	mov    rcx,rdx
  402d6f:	lea    rdx,[rip+0x42ff]        # 407075 <rb_base64_encode@plt+0x4cf5>
  402d76:	mov    esi,0x1
  402d7b:	mov    rdi,rax
  402d7e:	mov    eax,0x0
  402d83:	call   40329d <rb_base64_encode@plt+0xf1d>
  402d88:	jmp    402e4b <rb_base64_encode@plt+0xacb>
  402d8d:	mov    rax,QWORD PTR [rbp-0x10]
  402d91:	mov    rax,QWORD PTR [rax+0x20]
  402d95:	mov    rdi,rax
  402d98:	call   402200 <rb_rawbuf_length@plt>
  402d9d:	test   eax,eax
  402d9f:	jle    402dc9 <rb_base64_encode@plt+0xa49>
  402da1:	mov    rax,QWORD PTR [rbp-0x10]
  402da5:	mov    rax,QWORD PTR [rax+0x88]
  402dac:	mov    rdx,QWORD PTR [rbp-0x10]
  402db0:	mov    rcx,rdx
  402db3:	lea    rdx,[rip+0xfffffffffffffedc]        # 402c96 <rb_base64_encode@plt+0x916>
  402dba:	mov    esi,0x2
  402dbf:	mov    rdi,rax
  402dc2:	call   402090 <rb_setselect@plt>
  402dc7:	jmp    402deb <rb_base64_encode@plt+0xa6b>
  402dc9:	mov    rax,QWORD PTR [rbp-0x10]
  402dcd:	mov    rax,QWORD PTR [rax+0x88]
  402dd4:	mov    ecx,0x0
  402dd9:	mov    edx,0x0
  402dde:	mov    esi,0x2
  402de3:	mov    rdi,rax
  402de6:	call   402090 <rb_setselect@plt>
  402deb:	mov    rax,QWORD PTR [rbp-0x10]
  402def:	movzx  eax,BYTE PTR [rax+0xb8]
  402df6:	movzx  eax,al
  402df9:	and    eax,0x1
  402dfc:	test   eax,eax
  402dfe:	je     402e4b <rb_base64_encode@plt+0xacb>
  402e00:	mov    rax,QWORD PTR [rbp-0x10]
  402e04:	mov    rax,QWORD PTR [rax+0x20]
  402e08:	mov    rdi,rax
  402e0b:	call   402200 <rb_rawbuf_length@plt>
  402e10:	test   eax,eax
  402e12:	jne    402e4b <rb_base64_encode@plt+0xacb>
  402e14:	mov    rax,QWORD PTR [rbp-0x10]
  402e18:	movzx  eax,BYTE PTR [rax+0xb8]
  402e1f:	and    eax,0xfffffffe
  402e22:	mov    edx,eax
  402e24:	mov    rax,QWORD PTR [rbp-0x10]
  402e28:	mov    BYTE PTR [rax+0xb8],dl
  402e2e:	mov    rax,QWORD PTR [rbp-0x10]
  402e32:	mov    rax,QWORD PTR [rax+0x90]
  402e39:	mov    rdx,QWORD PTR [rbp-0x10]
  402e3d:	mov    rsi,rdx
  402e40:	mov    rdi,rax
  402e43:	call   4041e5 <rb_base64_encode@plt+0x1e65>
  402e48:	jmp    402e4b <rb_base64_encode@plt+0xacb>
  402e4a:	nop
  402e4b:	leave  
  402e4c:	ret    
  402e4d:	push   rbp
  402e4e:	mov    rbp,rsp
  402e51:	sub    rsp,0x20
  402e55:	mov    QWORD PTR [rbp-0x8],rdi
  402e59:	mov    QWORD PTR [rbp-0x10],rsi
  402e5d:	mov    QWORD PTR [rbp-0x18],rdx
  402e61:	mov    rax,QWORD PTR [rbp-0x8]
  402e65:	movzx  eax,BYTE PTR [rax+0xb8]
  402e6c:	movzx  eax,al
  402e6f:	and    eax,0x2
  402e72:	test   eax,eax
  402e74:	jne    402e95 <rb_base64_encode@plt+0xb15>
  402e76:	mov    rax,QWORD PTR [rbp-0x18]
  402e7a:	mov    edx,eax
  402e7c:	mov    rax,QWORD PTR [rbp-0x8]
  402e80:	mov    rax,QWORD PTR [rax+0x20]
  402e84:	mov    rcx,QWORD PTR [rbp-0x10]
  402e88:	mov    rsi,rcx
  402e8b:	mov    rdi,rax
  402e8e:	call   402340 <rb_rawbuf_append@plt>
  402e93:	jmp    402e96 <rb_base64_encode@plt+0xb16>
  402e95:	nop
  402e96:	leave  
  402e97:	ret    
  402e98:	push   rbp
  402e99:	mov    rbp,rsp
  402e9c:	sub    rsp,0x30
  402ea0:	mov    QWORD PTR [rbp-0x18],rdi
  402ea4:	mov    QWORD PTR [rbp-0x20],rsi
  402ea8:	mov    DWORD PTR [rbp-0x24],edx
  402eab:	mov    rax,QWORD PTR fs:0x28
  402eb4:	mov    QWORD PTR [rbp-0x8],rax
  402eb8:	xor    eax,eax
  402eba:	mov    BYTE PTR [rbp-0xa],0x0
  402ebe:	mov    BYTE PTR [rbp-0x9],0x0
  402ec2:	lea    rax,[rbp-0xa]
  402ec6:	mov    esi,0x1
  402ecb:	mov    rdi,rax
  402ece:	call   40284f <rb_base64_encode@plt+0x4cf>
  402ed3:	lea    rax,[rbp-0xa]
  402ed7:	mov    esi,0x1
  402edc:	mov    rdi,rax
  402edf:	call   402888 <rb_base64_encode@plt+0x508>
  402ee4:	mov    eax,DWORD PTR [rbp-0x24]
  402ee7:	add    eax,0x2
  402eea:	and    eax,0x7f
  402eed:	mov    BYTE PTR [rbp-0x9],al
  402ef0:	lea    rcx,[rbp-0xa]
  402ef4:	mov    rax,QWORD PTR [rbp-0x18]
  402ef8:	mov    edx,0x2
  402efd:	mov    rsi,rcx
  402f00:	mov    rdi,rax
  402f03:	call   402e4d <rb_base64_encode@plt+0xacd>
  402f08:	mov    eax,DWORD PTR [rbp-0x24]
  402f0b:	movsxd rdx,eax
  402f0e:	mov    rcx,QWORD PTR [rbp-0x20]
  402f12:	mov    rax,QWORD PTR [rbp-0x18]
  402f16:	mov    rsi,rcx
  402f19:	mov    rdi,rax
  402f1c:	call   402e4d <rb_base64_encode@plt+0xacd>
  402f21:	mov    rax,QWORD PTR [rbp-0x18]
  402f25:	mov    edx,0x2
  402f2a:	lea    rsi,[rip+0x4154]        # 407085 <rb_base64_encode@plt+0x4d05>
  402f31:	mov    rdi,rax
  402f34:	call   402e4d <rb_base64_encode@plt+0xacd>
  402f39:	nop
  402f3a:	mov    rax,QWORD PTR [rbp-0x8]
  402f3e:	xor    rax,QWORD PTR fs:0x28
  402f47:	je     402f4e <rb_base64_encode@plt+0xbce>
  402f49:	call   402270 <__stack_chk_fail@plt>
  402f4e:	leave  
  402f4f:	ret    
  402f50:	push   rbp
  402f51:	mov    rbp,rsp
  402f54:	sub    rsp,0x30
  402f58:	mov    QWORD PTR [rbp-0x18],rdi
  402f5c:	mov    QWORD PTR [rbp-0x20],rsi
  402f60:	mov    DWORD PTR [rbp-0x24],edx
  402f63:	mov    rax,QWORD PTR fs:0x28
  402f6c:	mov    QWORD PTR [rbp-0x8],rax
  402f70:	xor    eax,eax
  402f72:	mov    BYTE PTR [rbp-0xc],0x0
  402f76:	mov    BYTE PTR [rbp-0xb],0x0
  402f7a:	mov    WORD PTR [rbp-0xa],0x0
  402f80:	lea    rax,[rbp-0xc]
  402f84:	mov    esi,0x1
  402f89:	mov    rdi,rax
  402f8c:	call   40284f <rb_base64_encode@plt+0x4cf>
  402f91:	lea    rax,[rbp-0xc]
  402f95:	mov    esi,0x1
  402f9a:	mov    rdi,rax
  402f9d:	call   402888 <rb_base64_encode@plt+0x508>
  402fa2:	mov    BYTE PTR [rbp-0xb],0x7e
  402fa6:	mov    eax,DWORD PTR [rbp-0x24]
  402fa9:	add    eax,0x2
  402fac:	movzx  eax,ax
  402faf:	mov    edi,eax
  402fb1:	call   4020b0 <htons@plt>
  402fb6:	mov    WORD PTR [rbp-0xa],ax
  402fba:	lea    rcx,[rbp-0xc]
  402fbe:	mov    rax,QWORD PTR [rbp-0x18]
  402fc2:	mov    edx,0x4
  402fc7:	mov    rsi,rcx
  402fca:	mov    rdi,rax
  402fcd:	call   402e4d <rb_base64_encode@plt+0xacd>
  402fd2:	mov    eax,DWORD PTR [rbp-0x24]
  402fd5:	movsxd rdx,eax
  402fd8:	mov    rcx,QWORD PTR [rbp-0x20]
  402fdc:	mov    rax,QWORD PTR [rbp-0x18]
  402fe0:	mov    rsi,rcx
  402fe3:	mov    rdi,rax
  402fe6:	call   402e4d <rb_base64_encode@plt+0xacd>
  402feb:	mov    rax,QWORD PTR [rbp-0x18]
  402fef:	mov    edx,0x2
  402ff4:	lea    rsi,[rip+0x408a]        # 407085 <rb_base64_encode@plt+0x4d05>
  402ffb:	mov    rdi,rax
  402ffe:	call   402e4d <rb_base64_encode@plt+0xacd>
  403003:	nop
  403004:	mov    rax,QWORD PTR [rbp-0x8]
  403008:	xor    rax,QWORD PTR fs:0x28
  403011:	je     403018 <rb_base64_encode@plt+0xc98>
  403013:	call   402270 <__stack_chk_fail@plt>
  403018:	leave  
  403019:	ret    
  40301a:	push   rbp
  40301b:	mov    rbp,rsp
  40301e:	sub    rsp,0x20
  403022:	mov    QWORD PTR [rbp-0x8],rdi
  403026:	mov    QWORD PTR [rbp-0x10],rsi
  40302a:	mov    DWORD PTR [rbp-0x14],edx
  40302d:	mov    rax,QWORD PTR [rbp-0x8]
  403031:	movzx  eax,BYTE PTR [rax+0xb8]
  403038:	movzx  eax,al
  40303b:	and    eax,0x2
  40303e:	test   eax,eax
  403040:	jne    403078 <rb_base64_encode@plt+0xcf8>
  403042:	cmp    DWORD PTR [rbp-0x14],0x7a
  403046:	jg     403060 <rb_base64_encode@plt+0xce0>
  403048:	mov    edx,DWORD PTR [rbp-0x14]
  40304b:	mov    rcx,QWORD PTR [rbp-0x10]
  40304f:	mov    rax,QWORD PTR [rbp-0x8]
  403053:	mov    rsi,rcx
  403056:	mov    rdi,rax
  403059:	call   402e98 <rb_base64_encode@plt+0xb18>
  40305e:	jmp    403079 <rb_base64_encode@plt+0xcf9>
  403060:	mov    edx,DWORD PTR [rbp-0x14]
  403063:	mov    rcx,QWORD PTR [rbp-0x10]
  403067:	mov    rax,QWORD PTR [rbp-0x8]
  40306b:	mov    rsi,rcx
  40306e:	mov    rdi,rax
  403071:	call   402f50 <rb_base64_encode@plt+0xbd0>
  403076:	jmp    403079 <rb_base64_encode@plt+0xcf9>
  403078:	nop
  403079:	leave  
  40307a:	ret    
  40307b:	push   rbp
  40307c:	mov    rbp,rsp
  40307f:	sub    rsp,0x40
  403083:	mov    QWORD PTR [rbp-0x38],rdi
  403087:	mov    QWORD PTR [rbp-0x40],rsi
  40308b:	mov    rax,QWORD PTR [rbp-0x40]
  40308f:	mov    QWORD PTR [rbp-0x10],rax
  403093:	mov    rax,QWORD PTR [rbp-0x10]
  403097:	mov    rax,QWORD PTR [rax+0x48]
  40309b:	mov    QWORD PTR [rbp-0x20],rax
  40309f:	cmp    QWORD PTR [rbp-0x20],0x0
  4030a4:	je     4030b0 <rb_base64_encode@plt+0xd30>
  4030a6:	mov    rax,QWORD PTR [rbp-0x20]
  4030aa:	mov    rax,QWORD PTR [rax+0x10]
  4030ae:	jmp    4030b5 <rb_base64_encode@plt+0xd35>
  4030b0:	mov    eax,0x0
  4030b5:	mov    QWORD PTR [rbp-0x18],rax
  4030b9:	jmp    4031bf <rb_base64_encode@plt+0xe3f>
  4030be:	mov    rax,QWORD PTR [rbp-0x20]
  4030c2:	mov    rax,QWORD PTR [rax]
  4030c5:	mov    QWORD PTR [rbp-0x8],rax
  4030c9:	mov    r8d,DWORD PTR [rip+0x6130]        # 409200 <rb_base64_encode@plt+0x6e80>
  4030d0:	mov    rax,QWORD PTR [rbp-0x8]
  4030d4:	mov    rdi,QWORD PTR [rax+0x20]
  4030d8:	mov    rax,QWORD PTR [rbp-0x8]
  4030dc:	mov    rcx,QWORD PTR [rax+0x18]
  4030e0:	mov    rax,QWORD PTR [rbp-0x8]
  4030e4:	mov    edx,DWORD PTR [rax+0x48]
  4030e7:	mov    rax,QWORD PTR [rbp-0x8]
  4030eb:	lea    rsi,[rax+0x28]
  4030ef:	mov    rax,QWORD PTR [rbp-0x10]
  4030f3:	mov    rax,QWORD PTR [rax+0x20]
  4030f7:	mov    r9d,r8d
  4030fa:	mov    r8,rdi
  4030fd:	mov    rdi,rax
  403100:	call   4020a0 <rb_send_fd_buf@plt>
  403105:	mov    DWORD PTR [rbp-0x24],eax
  403108:	cmp    DWORD PTR [rbp-0x24],0x0
  40310c:	jle    403175 <rb_base64_encode@plt+0xdf5>
  40310e:	mov    rax,QWORD PTR [rbp-0x10]
  403112:	lea    rdx,[rax+0x48]
  403116:	mov    rax,QWORD PTR [rbp-0x20]
  40311a:	mov    rsi,rdx
  40311d:	mov    rdi,rax
  403120:	call   4026a0 <rb_base64_encode@plt+0x320>
  403125:	mov    DWORD PTR [rbp-0x28],0x0
  40312c:	jmp    40314d <rb_base64_encode@plt+0xdcd>
  40312e:	mov    rax,QWORD PTR [rbp-0x8]
  403132:	mov    edx,DWORD PTR [rbp-0x28]
  403135:	movsxd rdx,edx
  403138:	add    rdx,0x4
  40313c:	mov    rax,QWORD PTR [rax+rdx*8+0x8]
  403141:	mov    rdi,rax
  403144:	call   4021e0 <rb_close@plt>
  403149:	add    DWORD PTR [rbp-0x28],0x1
  40314d:	mov    rax,QWORD PTR [rbp-0x8]
  403151:	mov    eax,DWORD PTR [rax+0x48]
  403154:	cmp    eax,DWORD PTR [rbp-0x28]
  403157:	jg     40312e <rb_base64_encode@plt+0xdae>
  403159:	mov    rax,QWORD PTR [rbp-0x8]
  40315d:	mov    rax,QWORD PTR [rax+0x18]
  403161:	mov    rdi,rax
  403164:	call   4027d0 <rb_base64_encode@plt+0x450>
  403169:	mov    rax,QWORD PTR [rbp-0x8]
  40316d:	mov    rdi,rax
  403170:	call   4027d0 <rb_base64_encode@plt+0x450>
  403175:	cmp    DWORD PTR [rbp-0x24],0x0
  403179:	je     403193 <rb_base64_encode@plt+0xe13>
  40317b:	cmp    DWORD PTR [rbp-0x24],0x0
  40317f:	jns    40319d <rb_base64_encode@plt+0xe1d>
  403181:	call   402250 <__errno_location@plt>
  403186:	mov    eax,DWORD PTR [rax]
  403188:	mov    edi,eax
  40318a:	call   402070 <rb_ignore_errno@plt>
  40318f:	test   eax,eax
  403191:	jne    40319d <rb_base64_encode@plt+0xe1d>
  403193:	mov    edi,0x0
  403198:	call   4020c0 <exit@plt>
  40319d:	mov    rax,QWORD PTR [rbp-0x18]
  4031a1:	mov    QWORD PTR [rbp-0x20],rax
  4031a5:	cmp    QWORD PTR [rbp-0x20],0x0
  4031aa:	je     4031b6 <rb_base64_encode@plt+0xe36>
  4031ac:	mov    rax,QWORD PTR [rbp-0x20]
  4031b0:	mov    rax,QWORD PTR [rax+0x10]
  4031b4:	jmp    4031bb <rb_base64_encode@plt+0xe3b>
  4031b6:	mov    eax,0x0
  4031bb:	mov    QWORD PTR [rbp-0x18],rax
  4031bf:	cmp    QWORD PTR [rbp-0x20],0x0
  4031c4:	jne    4030be <rb_base64_encode@plt+0xd3e>
  4031ca:	mov    rax,QWORD PTR [rbp-0x10]
  4031ce:	mov    rax,QWORD PTR [rax+0x58]
  4031d2:	test   rax,rax
  4031d5:	je     4031fa <rb_base64_encode@plt+0xe7a>
  4031d7:	mov    rax,QWORD PTR [rbp-0x10]
  4031db:	mov    rax,QWORD PTR [rax+0x20]
  4031df:	mov    rdx,QWORD PTR [rbp-0x10]
  4031e3:	mov    rcx,rdx
  4031e6:	lea    rdx,[rip+0xfffffffffffffe8e]        # 40307b <rb_base64_encode@plt+0xcfb>
  4031ed:	mov    esi,0x2
  4031f2:	mov    rdi,rax
  4031f5:	call   402090 <rb_setselect@plt>
  4031fa:	nop
  4031fb:	leave  
  4031fc:	ret    
  4031fd:	push   rbp
  4031fe:	mov    rbp,rsp
  403201:	sub    rsp,0x30
  403205:	mov    QWORD PTR [rbp-0x18],rdi
  403209:	mov    QWORD PTR [rbp-0x20],rsi
  40320d:	mov    QWORD PTR [rbp-0x28],rdx
  403211:	mov    edi,0x50
  403216:	call   402794 <rb_base64_encode@plt+0x414>
  40321b:	mov    QWORD PTR [rbp-0x8],rax
  40321f:	mov    rax,QWORD PTR [rbp-0x28]
  403223:	mov    rdi,rax
  403226:	call   402794 <rb_base64_encode@plt+0x414>
  40322b:	mov    rdx,rax
  40322e:	mov    rax,QWORD PTR [rbp-0x8]
  403232:	mov    QWORD PTR [rax+0x18],rdx
  403236:	mov    rax,QWORD PTR [rbp-0x8]
  40323a:	mov    rdx,QWORD PTR [rbp-0x28]
  40323e:	mov    QWORD PTR [rax+0x20],rdx
  403242:	mov    rax,QWORD PTR [rbp-0x8]
  403246:	mov    rax,QWORD PTR [rax+0x18]
  40324a:	mov    rdx,QWORD PTR [rbp-0x28]
  40324e:	mov    rcx,QWORD PTR [rbp-0x20]
  403252:	mov    rsi,rcx
  403255:	mov    rdi,rax
  403258:	call   402360 <memcpy@plt>
  40325d:	mov    rax,QWORD PTR [rbp-0x8]
  403261:	mov    DWORD PTR [rax+0x48],0x0
  403268:	mov    rax,QWORD PTR [rbp-0x18]
  40326c:	lea    rdx,[rax+0x48]
  403270:	mov    rcx,QWORD PTR [rbp-0x8]
  403274:	mov    rax,QWORD PTR [rbp-0x8]
  403278:	mov    rsi,rcx
  40327b:	mov    rdi,rax
  40327e:	call   40259a <rb_base64_encode@plt+0x21a>
  403283:	mov    rax,QWORD PTR [rbp-0x18]
  403287:	mov    rax,QWORD PTR [rax+0x20]
  40328b:	mov    rdx,QWORD PTR [rbp-0x18]
  40328f:	mov    rsi,rdx
  403292:	mov    rdi,rax
  403295:	call   40307b <rb_base64_encode@plt+0xcfb>
  40329a:	nop
  40329b:	leave  
  40329c:	ret    
  40329d:	push   rbp
  40329e:	mov    rbp,rsp
  4032a1:	sub    rsp,0x280
  4032a8:	mov    QWORD PTR [rbp-0x268],rdi
  4032af:	mov    DWORD PTR [rbp-0x26c],esi
  4032b5:	mov    QWORD PTR [rbp-0x278],rdx
  4032bc:	mov    QWORD PTR [rbp-0x98],rcx
  4032c3:	mov    QWORD PTR [rbp-0x90],r8
  4032ca:	mov    QWORD PTR [rbp-0x88],r9
  4032d1:	test   al,al
  4032d3:	je     4032fd <rb_base64_encode@plt+0xf7d>
  4032d5:	vmovaps XMMWORD PTR [rbp-0x80],xmm0
  4032da:	vmovaps XMMWORD PTR [rbp-0x70],xmm1
  4032df:	vmovaps XMMWORD PTR [rbp-0x60],xmm2
  4032e4:	vmovaps XMMWORD PTR [rbp-0x50],xmm3
  4032e9:	vmovaps XMMWORD PTR [rbp-0x40],xmm4
  4032ee:	vmovaps XMMWORD PTR [rbp-0x30],xmm5
  4032f3:	vmovaps XMMWORD PTR [rbp-0x20],xmm6
  4032f8:	vmovaps XMMWORD PTR [rbp-0x10],xmm7
  4032fd:	mov    rax,QWORD PTR fs:0x28
  403306:	mov    QWORD PTR [rbp-0xb8],rax
  40330d:	xor    eax,eax
  40330f:	mov    rax,QWORD PTR [rbp-0x268]
  403316:	movzx  eax,BYTE PTR [rax+0xb8]
  40331d:	movzx  eax,al
  403320:	and    eax,0x2
  403323:	test   eax,eax
  403325:	jne    403599 <rb_base64_encode@plt+0x1219>
  40332b:	mov    rax,QWORD PTR [rbp-0x268]
  403332:	movzx  eax,BYTE PTR [rax+0xb8]
  403339:	movzx  eax,al
  40333c:	and    eax,0x8
  40333f:	test   eax,eax
  403341:	je     403352 <rb_base64_encode@plt+0xfd2>
  403343:	mov    rax,QWORD PTR [rbp-0x268]
  40334a:	mov    rdi,rax
  40334d:	call   404101 <rb_base64_encode@plt+0x1d81>
  403352:	mov    rax,QWORD PTR [rbp-0x268]
  403359:	mov    rdx,QWORD PTR [rax+0x88]
  403360:	mov    rax,QWORD PTR [rbp-0x268]
  403367:	mov    rax,QWORD PTR [rax+0x20]
  40336b:	mov    rsi,rdx
  40336e:	mov    rdi,rax
  403371:	call   402350 <rb_rawbuf_flush@plt>
  403376:	mov    rax,QWORD PTR [rbp-0x268]
  40337d:	lea    rdx,[rax+0x30]
  403381:	mov    rax,QWORD PTR [rbp-0x268]
  403388:	mov    rax,QWORD PTR [rax+0x90]
  40338f:	mov    rsi,rdx
  403392:	mov    rdi,rax
  403395:	call   402190 <rb_linebuf_flush@plt>
  40339a:	mov    rax,QWORD PTR [rbp-0x268]
  4033a1:	mov    rax,QWORD PTR [rax+0x88]
  4033a8:	mov    rdi,rax
  4033ab:	call   4021e0 <rb_close@plt>
  4033b0:	mov    rax,QWORD PTR [rbp-0x268]
  4033b7:	movzx  eax,BYTE PTR [rax+0xb8]
  4033be:	or     eax,0x2
  4033c1:	mov    edx,eax
  4033c3:	mov    rax,QWORD PTR [rbp-0x268]
  4033ca:	mov    BYTE PTR [rax+0xb8],dl
  4033d0:	mov    rax,QWORD PTR [rbp-0x268]
  4033d7:	mov    ecx,DWORD PTR [rax+0x80]
  4033dd:	mov    edx,0x10624dd3
  4033e2:	mov    eax,ecx
  4033e4:	mul    edx
  4033e6:	mov    eax,edx
  4033e8:	shr    eax,0x7
  4033eb:	imul   eax,eax,0x7d0
  4033f1:	sub    ecx,eax
  4033f3:	mov    eax,ecx
  4033f5:	mov    edx,eax
  4033f7:	mov    rax,rdx
  4033fa:	add    rax,rax
  4033fd:	add    rax,rdx
  403400:	shl    rax,0x3
  403404:	lea    rdx,[rip+0x5e15]        # 409220 <rb_base64_encode@plt+0x6ea0>
  40340b:	add    rdx,rax
  40340e:	mov    rax,QWORD PTR [rbp-0x268]
  403415:	mov    rsi,rdx
  403418:	mov    rdi,rax
  40341b:	call   4026a0 <rb_base64_encode@plt+0x320>
  403420:	cmp    DWORD PTR [rbp-0x26c],0x0
  403427:	je     403433 <rb_base64_encode@plt+0x10b3>
  403429:	cmp    QWORD PTR [rbp-0x278],0x0
  403431:	jne    40346e <rb_base64_encode@plt+0x10ee>
  403433:	mov    rax,QWORD PTR [rbp-0x268]
  40343a:	mov    rax,QWORD PTR [rax+0x90]
  403441:	mov    rdi,rax
  403444:	call   4021e0 <rb_close@plt>
  403449:	mov    rcx,QWORD PTR [rbp-0x268]
  403450:	mov    rax,QWORD PTR [rbp-0x268]
  403457:	lea    rdx,[rip+0x11942]        # 414da0 <rb_base64_encode@plt+0x12a20>
  40345e:	mov    rsi,rcx
  403461:	mov    rdi,rax
  403464:	call   402496 <rb_base64_encode@plt+0x116>
  403469:	jmp    40359a <rb_base64_encode@plt+0x121a>
  40346e:	mov    rax,QWORD PTR [rbp-0x268]
  403475:	mov    rax,QWORD PTR [rax+0x90]
  40347c:	mov    rdx,QWORD PTR [rbp-0x268]
  403483:	mov    rcx,rdx
  403486:	lea    rdx,[rip+0xf8a]        # 404417 <rb_base64_encode@plt+0x2097>
  40348d:	mov    esi,0x1
  403492:	mov    rdi,rax
  403495:	call   402090 <rb_setselect@plt>
  40349a:	mov    rax,QWORD PTR [rbp-0x268]
  4034a1:	mov    rax,QWORD PTR [rax+0x90]
  4034a8:	mov    ecx,0x0
  4034ad:	mov    edx,0x0
  4034b2:	mov    esi,0x2
  4034b7:	mov    rdi,rax
  4034ba:	call   402090 <rb_setselect@plt>
  4034bf:	mov    DWORD PTR [rbp-0x258],0x18
  4034c9:	mov    DWORD PTR [rbp-0x254],0x30
  4034d3:	lea    rax,[rbp+0x10]
  4034d7:	mov    QWORD PTR [rbp-0x250],rax
  4034de:	lea    rax,[rbp-0xb0]
  4034e5:	mov    QWORD PTR [rbp-0x248],rax
  4034ec:	lea    rcx,[rbp-0x258]
  4034f3:	mov    rdx,QWORD PTR [rbp-0x278]
  4034fa:	lea    rax,[rbp-0x240]
  403501:	mov    esi,0x80
  403506:	mov    rdi,rax
  403509:	call   402220 <vsnprintf@plt>
  40350e:	mov    BYTE PTR [rbp-0x1c0],0x44
  403515:	mov    rax,QWORD PTR [rbp-0x268]
  40351c:	mov    eax,DWORD PTR [rax+0x80]
  403522:	lea    rdx,[rbp-0x1c0]
  403529:	add    rdx,0x1
  40352d:	mov    esi,eax
  40352f:	mov    rdi,rdx
  403532:	call   402838 <rb_base64_encode@plt+0x4b8>
  403537:	lea    rax,[rbp-0x240]
  40353e:	lea    rdx,[rbp-0x1c0]
  403545:	lea    rcx,[rdx+0x5]
  403549:	mov    edx,0xfb
  40354e:	mov    rsi,rax
  403551:	mov    rdi,rcx
  403554:	call   402100 <rb_strlcpy@plt>
  403559:	lea    rax,[rbp-0x240]
  403560:	mov    rdi,rax
  403563:	call   402130 <strlen@plt>
  403568:	add    eax,0x6
  40356b:	mov    DWORD PTR [rbp-0x25c],eax
  403571:	mov    eax,DWORD PTR [rbp-0x25c]
  403577:	movsxd rdx,eax
  40357a:	mov    rax,QWORD PTR [rbp-0x268]
  403581:	mov    rax,QWORD PTR [rax+0x18]
  403585:	lea    rcx,[rbp-0x1c0]
  40358c:	mov    rsi,rcx
  40358f:	mov    rdi,rax
  403592:	call   4031fd <rb_base64_encode@plt+0xe7d>
  403597:	jmp    40359a <rb_base64_encode@plt+0x121a>
  403599:	nop
  40359a:	mov    rax,QWORD PTR [rbp-0xb8]
  4035a1:	xor    rax,QWORD PTR fs:0x28
  4035aa:	je     4035b1 <rb_base64_encode@plt+0x1231>
  4035ac:	call   402270 <__stack_chk_fail@plt>
  4035b1:	leave  
  4035b2:	ret    
  4035b3:	push   rbp
  4035b4:	mov    rbp,rsp
  4035b7:	sub    rsp,0x30
  4035bb:	mov    QWORD PTR [rbp-0x18],rdi
  4035bf:	mov    QWORD PTR [rbp-0x20],rsi
  4035c3:	mov    QWORD PTR [rbp-0x28],rdx
  4035c7:	mov    edi,0xe0
  4035cc:	call   402794 <rb_base64_encode@plt+0x414>
  4035d1:	mov    QWORD PTR [rbp-0x8],rax
  4035d5:	mov    rax,QWORD PTR [rbp-0x8]
  4035d9:	mov    rdx,QWORD PTR [rbp-0x18]
  4035dd:	mov    QWORD PTR [rax+0x18],rdx
  4035e1:	mov    rax,QWORD PTR [rbp-0x8]
  4035e5:	mov    rdx,QWORD PTR [rbp-0x20]
  4035e9:	mov    QWORD PTR [rax+0x88],rdx
  4035f0:	mov    rax,QWORD PTR [rbp-0x8]
  4035f4:	mov    rdx,QWORD PTR [rbp-0x28]
  4035f8:	mov    QWORD PTR [rax+0x90],rdx
  4035ff:	mov    rax,QWORD PTR [rbp-0x8]
  403603:	mov    DWORD PTR [rax+0x80],0xffffffff
  40360d:	mov    rax,QWORD PTR [rbp-0x20]
  403611:	mov    rdi,rax
  403614:	call   4020e0 <rb_set_nb@plt>
  403619:	mov    rax,QWORD PTR [rbp-0x28]
  40361d:	mov    rdi,rax
  403620:	call   4020e0 <rb_set_nb@plt>
  403625:	mov    rax,QWORD PTR [rbp-0x8]
  403629:	add    rax,0x58
  40362d:	mov    rdi,rax
  403630:	call   4022f0 <rb_linebuf_newbuf@plt>
  403635:	mov    rax,QWORD PTR [rbp-0x8]
  403639:	add    rax,0x30
  40363d:	mov    rdi,rax
  403640:	call   4022f0 <rb_linebuf_newbuf@plt>
  403645:	call   4022a0 <rb_new_rawbuffer@plt>
  40364a:	mov    rdx,rax
  40364d:	mov    rax,QWORD PTR [rbp-0x8]
  403651:	mov    QWORD PTR [rax+0x28],rdx
  403655:	call   4022a0 <rb_new_rawbuffer@plt>
  40365a:	mov    rdx,rax
  40365d:	mov    rax,QWORD PTR [rbp-0x8]
  403661:	mov    QWORD PTR [rax+0x20],rdx
  403665:	mov    rax,QWORD PTR [rbp-0x8]
  403669:	leave  
  40366a:	ret    
  40366b:	push   rbp
  40366c:	mov    rbp,rsp
  40366f:	sub    rsp,0x20
  403673:	mov    QWORD PTR [rbp-0x18],rdi
  403677:	mov    QWORD PTR [rbp-0x20],rsi
  40367b:	mov    DWORD PTR [rbp-0x4],0x0
  403682:	jmp    4036a3 <rb_base64_encode@plt+0x1323>
  403684:	mov    rax,QWORD PTR [rbp-0x20]
  403688:	mov    edx,DWORD PTR [rbp-0x4]
  40368b:	movsxd rdx,edx
  40368e:	add    rdx,0x4
  403692:	mov    rax,QWORD PTR [rax+rdx*8+0x8]
  403697:	mov    rdi,rax
  40369a:	call   4021e0 <rb_close@plt>
  40369f:	add    DWORD PTR [rbp-0x4],0x1
  4036a3:	mov    rax,QWORD PTR [rbp-0x20]
  4036a7:	mov    eax,DWORD PTR [rax+0x48]
  4036aa:	cmp    eax,DWORD PTR [rbp-0x4]
  4036ad:	jg     403684 <rb_base64_encode@plt+0x1304>
  4036af:	nop
  4036b0:	leave  
  4036b1:	ret    
  4036b2:	push   rbp
  4036b3:	mov    rbp,rsp
  4036b6:	mov    QWORD PTR [rbp-0x18],rdi
  4036ba:	mov    DWORD PTR [rbp-0x1c],esi
  4036bd:	mov    QWORD PTR [rbp-0x28],rdx
  4036c1:	mov    DWORD PTR [rbp-0x4],0x0
  4036c8:	jmp    40370b <rb_base64_encode@plt+0x138b>
  4036ca:	mov    eax,DWORD PTR [rbp-0x4]
  4036cd:	movsxd rdx,eax
  4036d0:	mov    rax,QWORD PTR [rbp-0x18]
  4036d4:	lea    rcx,[rdx+rax*1]
  4036d8:	mov    eax,DWORD PTR [rbp-0x4]
  4036db:	movsxd rdx,eax
  4036de:	mov    rax,QWORD PTR [rbp-0x18]
  4036e2:	add    rax,rdx
  4036e5:	movzx  esi,BYTE PTR [rax]
  4036e8:	mov    eax,DWORD PTR [rbp-0x4]
  4036eb:	cdq    
  4036ec:	shr    edx,0x1e
  4036ef:	add    eax,edx
  4036f1:	and    eax,0x3
  4036f4:	sub    eax,edx
  4036f6:	movsxd rdx,eax
  4036f9:	mov    rax,QWORD PTR [rbp-0x28]
  4036fd:	add    rax,rdx
  403700:	movzx  eax,BYTE PTR [rax]
  403703:	xor    eax,esi
  403705:	mov    BYTE PTR [rcx],al
  403707:	add    DWORD PTR [rbp-0x4],0x1
  40370b:	mov    eax,DWORD PTR [rbp-0x4]
  40370e:	cmp    eax,DWORD PTR [rbp-0x1c]
  403711:	jl     4036ca <rb_base64_encode@plt+0x134a>
  403713:	nop
  403714:	pop    rbp
  403715:	ret    
  403716:	push   rbp
  403717:	mov    rbp,rsp
  40371a:	sub    rsp,0xc0
  403721:	mov    QWORD PTR [rbp-0xa8],rdi
  403728:	mov    QWORD PTR [rbp-0xb0],rsi
  40372f:	mov    DWORD PTR [rbp-0xb4],edx
  403735:	mov    rax,QWORD PTR fs:0x28
  40373e:	mov    QWORD PTR [rbp-0x8],rax
  403742:	xor    eax,eax
  403744:	cmp    DWORD PTR [rbp-0xb4],0x0
  40374b:	je     4037a3 <rb_base64_encode@plt+0x1423>
  40374d:	mov    rax,QWORD PTR [rbp-0xa8]
  403754:	mov    rax,QWORD PTR [rax+0x28]
  403758:	lea    rcx,[rbp-0x94]
  40375f:	mov    edx,0x4
  403764:	mov    rsi,rcx
  403767:	mov    rdi,rax
  40376a:	call   402280 <rb_rawbuf_get@plt>
  40376f:	mov    DWORD PTR [rbp-0x98],eax
  403775:	cmp    DWORD PTR [rbp-0x98],0x0
  40377c:	jne    4037a3 <rb_base64_encode@plt+0x1423>
  40377e:	mov    rax,QWORD PTR [rbp-0xa8]
  403785:	lea    rdx,[rip+0x38fc]        # 407088 <rb_base64_encode@plt+0x4d08>
  40378c:	mov    esi,0x1
  403791:	mov    rdi,rax
  403794:	mov    eax,0x0
  403799:	call   40329d <rb_base64_encode@plt+0xf1d>
  40379e:	jmp    40384b <rb_base64_encode@plt+0x14cb>
  4037a3:	mov    rax,QWORD PTR [rbp-0xb0]
  4037aa:	movzx  eax,BYTE PTR [rax+0x1]
  4037ae:	movzx  edx,al
  4037b1:	mov    rax,QWORD PTR [rbp-0xa8]
  4037b8:	mov    rax,QWORD PTR [rax+0x28]
  4037bc:	lea    rcx,[rbp-0x90]
  4037c3:	mov    rsi,rcx
  4037c6:	mov    rdi,rax
  4037c9:	call   402280 <rb_rawbuf_get@plt>
  4037ce:	mov    DWORD PTR [rbp-0x98],eax
  4037d4:	cmp    DWORD PTR [rbp-0x98],0x0
  4037db:	jne    4037ff <rb_base64_encode@plt+0x147f>
  4037dd:	mov    rax,QWORD PTR [rbp-0xa8]
  4037e4:	lea    rdx,[rip+0x38cd]        # 4070b8 <rb_base64_encode@plt+0x4d38>
  4037eb:	mov    esi,0x1
  4037f0:	mov    rdi,rax
  4037f3:	mov    eax,0x0
  4037f8:	call   40329d <rb_base64_encode@plt+0xf1d>
  4037fd:	jmp    40384b <rb_base64_encode@plt+0x14cb>
  4037ff:	cmp    DWORD PTR [rbp-0xb4],0x0
  403806:	je     403826 <rb_base64_encode@plt+0x14a6>
  403808:	lea    rdx,[rbp-0x94]
  40380f:	mov    ecx,DWORD PTR [rbp-0x98]
  403815:	lea    rax,[rbp-0x90]
  40381c:	mov    esi,ecx
  40381e:	mov    rdi,rax
  403821:	call   4036b2 <rb_base64_encode@plt+0x1332>
  403826:	mov    rax,QWORD PTR [rbp-0xa8]
  40382d:	lea    rdi,[rax+0x30]
  403831:	mov    edx,DWORD PTR [rbp-0x98]
  403837:	lea    rax,[rbp-0x90]
  40383e:	mov    ecx,0x1
  403843:	mov    rsi,rax
  403846:	call   4020f0 <rb_linebuf_parse@plt>
  40384b:	mov    rax,QWORD PTR [rbp-0x8]
  40384f:	xor    rax,QWORD PTR fs:0x28
  403858:	je     40385f <rb_base64_encode@plt+0x14df>
  40385a:	call   402270 <__stack_chk_fail@plt>
  40385f:	leave  
  403860:	ret    
  403861:	push   rbp
  403862:	mov    rbp,rsp
  403865:	sub    rsp,0x4040
  40386c:	mov    QWORD PTR [rbp-0x4028],rdi
  403873:	mov    QWORD PTR [rbp-0x4030],rsi
  40387a:	mov    DWORD PTR [rbp-0x4034],edx
  403880:	mov    rax,QWORD PTR fs:0x28
  403889:	mov    QWORD PTR [rbp-0x8],rax
  40388d:	xor    eax,eax
  40388f:	lea    rax,[rbp-0x4010]
  403896:	mov    edx,0x4000
  40389b:	mov    esi,0x0
  4038a0:	mov    rdi,rax
  4038a3:	call   402050 <memset@plt>
  4038a8:	mov    rax,QWORD PTR [rbp-0x4028]
  4038af:	mov    rax,QWORD PTR [rax+0x28]
  4038b3:	lea    rcx,[rbp-0x401a]
  4038ba:	mov    edx,0x2
  4038bf:	mov    rsi,rcx
  4038c2:	mov    rdi,rax
  4038c5:	call   402280 <rb_rawbuf_get@plt>
  4038ca:	mov    DWORD PTR [rbp-0x4018],eax
  4038d0:	cmp    DWORD PTR [rbp-0x4018],0x0
  4038d7:	jne    4038fe <rb_base64_encode@plt+0x157e>
  4038d9:	mov    rax,QWORD PTR [rbp-0x4028]
  4038e0:	lea    rdx,[rip+0x3801]        # 4070e8 <rb_base64_encode@plt+0x4d68>
  4038e7:	mov    esi,0x1
  4038ec:	mov    rdi,rax
  4038ef:	mov    eax,0x0
  4038f4:	call   40329d <rb_base64_encode@plt+0xf1d>
  4038f9:	jmp    403a19 <rb_base64_encode@plt+0x1699>
  4038fe:	movzx  eax,WORD PTR [rbp-0x401a]
  403905:	movzx  eax,ax
  403908:	mov    edi,eax
  40390a:	call   402180 <ntohs@plt>
  40390f:	mov    WORD PTR [rbp-0x401a],ax
  403916:	cmp    DWORD PTR [rbp-0x4034],0x0
  40391d:	je     403975 <rb_base64_encode@plt+0x15f5>
  40391f:	mov    rax,QWORD PTR [rbp-0x4028]
  403926:	mov    rax,QWORD PTR [rax+0x28]
  40392a:	lea    rcx,[rbp-0x4014]
  403931:	mov    edx,0x4
  403936:	mov    rsi,rcx
  403939:	mov    rdi,rax
  40393c:	call   402280 <rb_rawbuf_get@plt>
  403941:	mov    DWORD PTR [rbp-0x4018],eax
  403947:	cmp    DWORD PTR [rbp-0x4018],0x0
  40394e:	jne    403975 <rb_base64_encode@plt+0x15f5>
  403950:	mov    rax,QWORD PTR [rbp-0x4028]
  403957:	lea    rdx,[rip+0x372a]        # 407088 <rb_base64_encode@plt+0x4d08>
  40395e:	mov    esi,0x1
  403963:	mov    rdi,rax
  403966:	mov    eax,0x0
  40396b:	call   40329d <rb_base64_encode@plt+0xf1d>
  403970:	jmp    403a19 <rb_base64_encode@plt+0x1699>
  403975:	movzx  eax,WORD PTR [rbp-0x401a]
  40397c:	movzx  edx,ax
  40397f:	mov    rax,QWORD PTR [rbp-0x4028]
  403986:	mov    rax,QWORD PTR [rax+0x28]
  40398a:	lea    rcx,[rbp-0x4010]
  403991:	mov    rsi,rcx
  403994:	mov    rdi,rax
  403997:	call   402280 <rb_rawbuf_get@plt>
  40399c:	mov    DWORD PTR [rbp-0x4018],eax
  4039a2:	cmp    DWORD PTR [rbp-0x4018],0x0
  4039a9:	jne    4039cd <rb_base64_encode@plt+0x164d>
  4039ab:	mov    rax,QWORD PTR [rbp-0x4028]
  4039b2:	lea    rdx,[rip+0x36ff]        # 4070b8 <rb_base64_encode@plt+0x4d38>
  4039b9:	mov    esi,0x1
  4039be:	mov    rdi,rax
  4039c1:	mov    eax,0x0
  4039c6:	call   40329d <rb_base64_encode@plt+0xf1d>
  4039cb:	jmp    403a19 <rb_base64_encode@plt+0x1699>
  4039cd:	cmp    DWORD PTR [rbp-0x4034],0x0
  4039d4:	je     4039f4 <rb_base64_encode@plt+0x1674>
  4039d6:	lea    rdx,[rbp-0x4014]
  4039dd:	mov    ecx,DWORD PTR [rbp-0x4018]
  4039e3:	lea    rax,[rbp-0x4010]
  4039ea:	mov    esi,ecx
  4039ec:	mov    rdi,rax
  4039ef:	call   4036b2 <rb_base64_encode@plt+0x1332>
  4039f4:	mov    rax,QWORD PTR [rbp-0x4028]
  4039fb:	lea    rdi,[rax+0x30]
  4039ff:	mov    edx,DWORD PTR [rbp-0x4018]
  403a05:	lea    rax,[rbp-0x4010]
  403a0c:	mov    ecx,0x1
  403a11:	mov    rsi,rax
  403a14:	call   4020f0 <rb_linebuf_parse@plt>
  403a19:	mov    rax,QWORD PTR [rbp-0x8]
  403a1d:	xor    rax,QWORD PTR fs:0x28
  403a26:	je     403a2d <rb_base64_encode@plt+0x16ad>
  403a28:	call   402270 <__stack_chk_fail@plt>
  403a2d:	leave  
  403a2e:	ret    
  403a2f:	push   rbp
  403a30:	mov    rbp,rsp
  403a33:	mov    QWORD PTR [rbp-0x8],rdi
  403a37:	mov    QWORD PTR [rbp-0x10],rsi
  403a3b:	mov    DWORD PTR [rbp-0x14],edx
  403a3e:	nop
  403a3f:	pop    rbp
  403a40:	ret    
  403a41:	push   rbp
  403a42:	mov    rbp,rsp
  403a45:	sub    rsp,0x30
  403a49:	mov    QWORD PTR [rbp-0x28],rdi
  403a4d:	mov    rax,QWORD PTR fs:0x28
  403a56:	mov    QWORD PTR [rbp-0x8],rax
  403a5a:	xor    eax,eax
  403a5c:	mov    rax,QWORD PTR [rbp-0x28]
  403a60:	mov    rax,QWORD PTR [rax+0x28]
  403a64:	lea    rcx,[rbp-0x12]
  403a68:	mov    edx,0x2
  403a6d:	mov    rsi,rcx
  403a70:	mov    rdi,rax
  403a73:	call   402280 <rb_rawbuf_get@plt>
  403a78:	mov    DWORD PTR [rbp-0x10],eax
  403a7b:	cmp    DWORD PTR [rbp-0x10],0x2
  403a7f:	jne    403afc <rb_base64_encode@plt+0x177c>
  403a81:	movzx  eax,BYTE PTR [rbp-0x11]
  403a85:	shr    al,0x7
  403a88:	cmp    al,0x1
  403a8a:	sete   al
  403a8d:	movzx  eax,al
  403a90:	mov    DWORD PTR [rbp-0xc],eax
  403a93:	movzx  eax,BYTE PTR [rbp-0x11]
  403a97:	and    eax,0x7f
  403a9a:	mov    BYTE PTR [rbp-0x11],al
  403a9d:	movzx  eax,BYTE PTR [rbp-0x11]
  403aa1:	movzx  eax,al
  403aa4:	cmp    eax,0x7e
  403aa7:	je     403ab0 <rb_base64_encode@plt+0x1730>
  403aa9:	cmp    eax,0x7f
  403aac:	je     403ac8 <rb_base64_encode@plt+0x1748>
  403aae:	jmp    403ae0 <rb_base64_encode@plt+0x1760>
  403ab0:	mov    edx,DWORD PTR [rbp-0xc]
  403ab3:	lea    rcx,[rbp-0x12]
  403ab7:	mov    rax,QWORD PTR [rbp-0x28]
  403abb:	mov    rsi,rcx
  403abe:	mov    rdi,rax
  403ac1:	call   403861 <rb_base64_encode@plt+0x14e1>
  403ac6:	jmp    403af7 <rb_base64_encode@plt+0x1777>
  403ac8:	mov    edx,DWORD PTR [rbp-0xc]
  403acb:	lea    rcx,[rbp-0x12]
  403acf:	mov    rax,QWORD PTR [rbp-0x28]
  403ad3:	mov    rsi,rcx
  403ad6:	mov    rdi,rax
  403ad9:	call   403a2f <rb_base64_encode@plt+0x16af>
  403ade:	jmp    403af7 <rb_base64_encode@plt+0x1777>
  403ae0:	mov    edx,DWORD PTR [rbp-0xc]
  403ae3:	lea    rcx,[rbp-0x12]
  403ae7:	mov    rax,QWORD PTR [rbp-0x28]
  403aeb:	mov    rsi,rcx
  403aee:	mov    rdi,rax
  403af1:	call   403716 <rb_base64_encode@plt+0x1396>
  403af6:	nop
  403af7:	jmp    403a5c <rb_base64_encode@plt+0x16dc>
  403afc:	nop
  403afd:	mov    rax,QWORD PTR [rbp-0x28]
  403b01:	mov    rax,QWORD PTR [rax+0x90]
  403b08:	mov    rdx,QWORD PTR [rbp-0x28]
  403b0c:	mov    rsi,rdx
  403b0f:	mov    rdi,rax
  403b12:	call   402b90 <rb_base64_encode@plt+0x810>
  403b17:	nop
  403b18:	mov    rax,QWORD PTR [rbp-0x8]
  403b1c:	xor    rax,QWORD PTR fs:0x28
  403b25:	je     403b2c <rb_base64_encode@plt+0x17ac>
  403b27:	call   402270 <__stack_chk_fail@plt>
  403b2c:	leave  
  403b2d:	ret    
  403b2e:	push   rbp
  403b2f:	mov    rbp,rsp
  403b32:	sub    rsp,0x40d0
  403b39:	mov    QWORD PTR [rbp-0x40c8],rdi
  403b40:	mov    rax,QWORD PTR fs:0x28
  403b49:	mov    QWORD PTR [rbp-0x8],rax
  403b4d:	xor    eax,eax
  403b4f:	lea    rax,[rbp-0x4010]
  403b56:	mov    edx,0x4000
  403b5b:	mov    esi,0x0
  403b60:	mov    rdi,rax
  403b63:	call   402050 <memset@plt>
  403b68:	mov    QWORD PTR [rbp-0x40a0],0x0
  403b73:	mov    rax,QWORD PTR [rbp-0x40c8]
  403b7a:	mov    rax,QWORD PTR [rax+0x28]
  403b7e:	lea    rcx,[rbp-0x4010]
  403b85:	mov    edx,0x4000
  403b8a:	mov    rsi,rcx
  403b8d:	mov    rdi,rax
  403b90:	call   402280 <rb_rawbuf_get@plt>
  403b95:	mov    DWORD PTR [rbp-0x40b4],eax
  403b9b:	cmp    DWORD PTR [rbp-0x40b4],0x0
  403ba2:	je     403cdc <rb_base64_encode@plt+0x195c>
  403ba8:	lea    rax,[rbp-0x4010]
  403baf:	lea    rsi,[rip+0x3560]        # 407116 <rb_base64_encode@plt+0x4d96>
  403bb6:	mov    rdi,rax
  403bb9:	call   4021d0 <rb_strcasestr@plt>
  403bbe:	mov    QWORD PTR [rbp-0x40a0],rax
  403bc5:	cmp    QWORD PTR [rbp-0x40a0],0x0
  403bcd:	je     403b68 <rb_base64_encode@plt+0x17e8>
  403bcf:	mov    rax,QWORD PTR [rbp-0x40a0]
  403bd6:	add    rax,0x12
  403bda:	mov    QWORD PTR [rbp-0x40b0],rax
  403be1:	jmp    403c07 <rb_base64_encode@plt+0x1887>
  403be3:	mov    rax,QWORD PTR [rbp-0x40b0]
  403bea:	movzx  eax,BYTE PTR [rax]
  403bed:	cmp    al,0x20
  403bef:	je     403bff <rb_base64_encode@plt+0x187f>
  403bf1:	mov    rax,QWORD PTR [rbp-0x40b0]
  403bf8:	movzx  eax,BYTE PTR [rax]
  403bfb:	cmp    al,0x9
  403bfd:	jne    403c2d <rb_base64_encode@plt+0x18ad>
  403bff:	add    QWORD PTR [rbp-0x40b0],0x1
  403c07:	lea    rax,[rbp-0x4010]
  403c0e:	add    rax,0x4000
  403c14:	cmp    rax,QWORD PTR [rbp-0x40b0]
  403c1b:	jbe    403c2e <rb_base64_encode@plt+0x18ae>
  403c1d:	mov    rax,QWORD PTR [rbp-0x40b0]
  403c24:	movzx  eax,BYTE PTR [rax]
  403c27:	test   al,al
  403c29:	jne    403be3 <rb_base64_encode@plt+0x1863>
  403c2b:	jmp    403c2e <rb_base64_encode@plt+0x18ae>
  403c2d:	nop
  403c2e:	mov    rax,QWORD PTR [rbp-0x40b0]
  403c35:	mov    QWORD PTR [rbp-0x40a8],rax
  403c3c:	jmp    403c6e <rb_base64_encode@plt+0x18ee>
  403c3e:	mov    rax,QWORD PTR [rbp-0x40a8]
  403c45:	movzx  eax,BYTE PTR [rax]
  403c48:	cmp    al,0xd
  403c4a:	je     403c5a <rb_base64_encode@plt+0x18da>
  403c4c:	mov    rax,QWORD PTR [rbp-0x40a8]
  403c53:	movzx  eax,BYTE PTR [rax]
  403c56:	cmp    al,0xa
  403c58:	jne    403c66 <rb_base64_encode@plt+0x18e6>
  403c5a:	mov    rax,QWORD PTR [rbp-0x40a8]
  403c61:	mov    BYTE PTR [rax],0x0
  403c64:	jmp    403c92 <rb_base64_encode@plt+0x1912>
  403c66:	add    QWORD PTR [rbp-0x40a8],0x1
  403c6e:	lea    rax,[rbp-0x4010]
  403c75:	add    rax,0x4000
  403c7b:	cmp    rax,QWORD PTR [rbp-0x40a8]
  403c82:	jbe    403c92 <rb_base64_encode@plt+0x1912>
  403c84:	mov    rax,QWORD PTR [rbp-0x40a8]
  403c8b:	movzx  eax,BYTE PTR [rax]
  403c8e:	test   al,al
  403c90:	jne    403c3e <rb_base64_encode@plt+0x18be>
  403c92:	mov    rax,QWORD PTR [rbp-0x40c8]
  403c99:	lea    rcx,[rax+0xb9]
  403ca0:	mov    rax,QWORD PTR [rbp-0x40b0]
  403ca7:	mov    edx,0x25
  403cac:	mov    rsi,rax
  403caf:	mov    rdi,rcx
  403cb2:	call   402100 <rb_strlcpy@plt>
  403cb7:	mov    rax,QWORD PTR [rbp-0x40c8]
  403cbe:	movzx  eax,BYTE PTR [rax+0xb8]
  403cc5:	or     eax,0x8
  403cc8:	mov    edx,eax
  403cca:	mov    rax,QWORD PTR [rbp-0x40c8]
  403cd1:	mov    BYTE PTR [rax+0xb8],dl
  403cd7:	jmp    403b68 <rb_base64_encode@plt+0x17e8>
  403cdc:	nop
  403cdd:	mov    rax,QWORD PTR [rbp-0x40c8]
  403ce4:	movzx  eax,BYTE PTR [rax+0xb8]
  403ceb:	movzx  eax,al
  403cee:	and    eax,0x8
  403cf1:	test   eax,eax
  403cf3:	je     403dff <rb_base64_encode@plt+0x1a7f>
  403cf9:	lea    rax,[rbp-0x4090]
  403d00:	mov    rdi,rax
  403d03:	call   40626f <rb_base64_encode@plt+0x3eef>
  403d08:	mov    rax,QWORD PTR [rbp-0x40c8]
  403d0f:	add    rax,0xb9
  403d15:	mov    rdi,rax
  403d18:	call   402130 <strlen@plt>
  403d1d:	mov    rdx,rax
  403d20:	mov    rax,QWORD PTR [rbp-0x40c8]
  403d27:	lea    rcx,[rax+0xb9]
  403d2e:	lea    rax,[rbp-0x4090]
  403d35:	mov    rsi,rcx
  403d38:	mov    rdi,rax
  403d3b:	call   4062bc <rb_base64_encode@plt+0x3f3c>
  403d40:	lea    rax,[rbp-0x4090]
  403d47:	mov    edx,0x24
  403d4c:	lea    rsi,[rip+0x33dd]        # 407130 <rb_base64_encode@plt+0x4db0>
  403d53:	mov    rdi,rax
  403d56:	call   4062bc <rb_base64_encode@plt+0x3f3c>
  403d5b:	lea    rdx,[rbp-0x4030]
  403d62:	lea    rax,[rbp-0x4090]
  403d69:	mov    rsi,rdx
  403d6c:	mov    rdi,rax
  403d6f:	call   4063cc <rb_base64_encode@plt+0x404c>
  403d74:	lea    rax,[rbp-0x4030]
  403d7b:	mov    esi,0x14
  403d80:	mov    rdi,rax
  403d83:	call   402380 <rb_base64_encode@plt>
  403d88:	mov    QWORD PTR [rbp-0x4098],rax
  403d8f:	mov    rax,QWORD PTR [rbp-0x40c8]
  403d96:	mov    edx,0x81
  403d9b:	lea    rsi,[rip+0x33b6]        # 407158 <rb_base64_encode@plt+0x4dd8>
  403da2:	mov    rdi,rax
  403da5:	call   402e4d <rb_base64_encode@plt+0xacd>
  403daa:	mov    rax,QWORD PTR [rbp-0x4098]
  403db1:	mov    rdi,rax
  403db4:	call   402130 <strlen@plt>
  403db9:	mov    rdx,rax
  403dbc:	mov    rcx,QWORD PTR [rbp-0x4098]
  403dc3:	mov    rax,QWORD PTR [rbp-0x40c8]
  403dca:	mov    rsi,rcx
  403dcd:	mov    rdi,rax
  403dd0:	call   402e4d <rb_base64_encode@plt+0xacd>
  403dd5:	mov    rax,QWORD PTR [rbp-0x40c8]
  403ddc:	mov    edx,0x4
  403de1:	lea    rsi,[rip+0x33f2]        # 4071da <rb_base64_encode@plt+0x4e5a>
  403de8:	mov    rdi,rax
  403deb:	call   402e4d <rb_base64_encode@plt+0xacd>
  403df0:	mov    rax,QWORD PTR [rbp-0x4098]
  403df7:	mov    rdi,rax
  403dfa:	call   4027d0 <rb_base64_encode@plt+0x450>
  403dff:	mov    rax,QWORD PTR [rbp-0x40c8]
  403e06:	mov    rax,QWORD PTR [rax+0x88]
  403e0d:	mov    rdx,QWORD PTR [rbp-0x40c8]
  403e14:	mov    rsi,rdx
  403e17:	mov    rdi,rax
  403e1a:	call   402c96 <rb_base64_encode@plt+0x916>
  403e1f:	nop
  403e20:	mov    rax,QWORD PTR [rbp-0x8]
  403e24:	xor    rax,QWORD PTR fs:0x28
  403e2d:	je     403e34 <rb_base64_encode@plt+0x1ab4>
  403e2f:	call   402270 <__stack_chk_fail@plt>
  403e34:	leave  
  403e35:	ret    
  403e36:	push   rbp
  403e37:	mov    rbp,rsp
  403e3a:	sub    rsp,0x4030
  403e41:	mov    QWORD PTR [rbp-0x4028],rdi
  403e48:	mov    QWORD PTR [rbp-0x4030],rsi
  403e4f:	mov    rax,QWORD PTR fs:0x28
  403e58:	mov    QWORD PTR [rbp-0x8],rax
  403e5c:	xor    eax,eax
  403e5e:	lea    rax,[rbp-0x4010]
  403e65:	mov    edx,0x4000
  403e6a:	mov    esi,0x0
  403e6f:	mov    rdi,rax
  403e72:	call   402050 <memset@plt>
  403e77:	mov    rax,QWORD PTR [rbp-0x4030]
  403e7e:	mov    QWORD PTR [rbp-0x4018],rax
  403e85:	mov    DWORD PTR [rbp-0x401c],0x0
  403e8f:	cmp    QWORD PTR [rbp-0x4018],0x0
  403e97:	je     404048 <rb_base64_encode@plt+0x1cc8>
  403e9d:	mov    rax,QWORD PTR [rbp-0x4018]
  403ea4:	movzx  eax,BYTE PTR [rax+0xb8]
  403eab:	movzx  eax,al
  403eae:	and    eax,0x2
  403eb1:	test   eax,eax
  403eb3:	jne    40404b <rb_base64_encode@plt+0x1ccb>
  403eb9:	mov    rax,QWORD PTR [rbp-0x4018]
  403ec0:	movzx  eax,BYTE PTR [rax+0xb8]
  403ec7:	movzx  eax,al
  403eca:	and    eax,0x2
  403ecd:	test   eax,eax
  403ecf:	jne    40404e <rb_base64_encode@plt+0x1cce>
  403ed5:	lea    rcx,[rbp-0x4010]
  403edc:	mov    rax,QWORD PTR [rbp-0x4028]
  403ee3:	mov    edx,0x4000
  403ee8:	mov    rsi,rcx
  403eeb:	mov    rdi,rax
  403eee:	call   402150 <rb_read@plt>
  403ef3:	mov    DWORD PTR [rbp-0x401c],eax
  403ef9:	cmp    DWORD PTR [rbp-0x401c],0x0
  403f00:	jns    403f87 <rb_base64_encode@plt+0x1c07>
  403f06:	call   402250 <__errno_location@plt>
  403f0b:	mov    eax,DWORD PTR [rax]
  403f0d:	mov    edi,eax
  403f0f:	call   402070 <rb_ignore_errno@plt>
  403f14:	test   eax,eax
  403f16:	je     403f62 <rb_base64_encode@plt+0x1be2>
  403f18:	mov    rdx,QWORD PTR [rbp-0x4018]
  403f1f:	mov    rax,QWORD PTR [rbp-0x4028]
  403f26:	mov    rcx,rdx
  403f29:	lea    rdx,[rip+0xffffffffffffff06]        # 403e36 <rb_base64_encode@plt+0x1ab6>
  403f30:	mov    esi,0x1
  403f35:	mov    rdi,rax
  403f38:	call   402090 <rb_setselect@plt>
  403f3d:	mov    rax,QWORD PTR [rbp-0x4018]
  403f44:	mov    rax,QWORD PTR [rax+0x90]
  403f4b:	mov    rdx,QWORD PTR [rbp-0x4018]
  403f52:	mov    rsi,rdx
  403f55:	mov    rdi,rax
  403f58:	call   402b90 <rb_base64_encode@plt+0x810>
  403f5d:	jmp    40404f <rb_base64_encode@plt+0x1ccf>
  403f62:	mov    rax,QWORD PTR [rbp-0x4018]
  403f69:	lea    rdx,[rip+0x326f]        # 4071df <rb_base64_encode@plt+0x4e5f>
  403f70:	mov    esi,0x0
  403f75:	mov    rdi,rax
  403f78:	mov    eax,0x0
  403f7d:	call   40329d <rb_base64_encode@plt+0xf1d>
  403f82:	jmp    40404f <rb_base64_encode@plt+0x1ccf>
  403f87:	cmp    DWORD PTR [rbp-0x401c],0x0
  403f8e:	jne    403fb5 <rb_base64_encode@plt+0x1c35>
  403f90:	mov    rax,QWORD PTR [rbp-0x4018]
  403f97:	lea    rdx,[rip+0x3241]        # 4071df <rb_base64_encode@plt+0x4e5f>
  403f9e:	mov    esi,0x0
  403fa3:	mov    rdi,rax
  403fa6:	mov    eax,0x0
  403fab:	call   40329d <rb_base64_encode@plt+0xf1d>
  403fb0:	jmp    40404f <rb_base64_encode@plt+0x1ccf>
  403fb5:	mov    rax,QWORD PTR [rbp-0x4018]
  403fbc:	mov    rax,QWORD PTR [rax+0x28]
  403fc0:	mov    edx,DWORD PTR [rbp-0x401c]
  403fc6:	lea    rcx,[rbp-0x4010]
  403fcd:	mov    rsi,rcx
  403fd0:	mov    rdi,rax
  403fd3:	call   402340 <rb_rawbuf_append@plt>
  403fd8:	mov    rax,QWORD PTR [rbp-0x4018]
  403fdf:	movzx  eax,BYTE PTR [rax+0xb8]
  403fe6:	movzx  eax,al
  403fe9:	and    eax,0x8
  403fec:	test   eax,eax
  403fee:	jne    404001 <rb_base64_encode@plt+0x1c81>
  403ff0:	mov    rax,QWORD PTR [rbp-0x4018]
  403ff7:	mov    rdi,rax
  403ffa:	call   403b2e <rb_base64_encode@plt+0x17ae>
  403fff:	jmp    404010 <rb_base64_encode@plt+0x1c90>
  404001:	mov    rax,QWORD PTR [rbp-0x4018]
  404008:	mov    rdi,rax
  40400b:	call   403a41 <rb_base64_encode@plt+0x16c1>
  404010:	mov    eax,DWORD PTR [rbp-0x401c]
  404016:	cmp    eax,0x3fff
  40401b:	ja     403eb9 <rb_base64_encode@plt+0x1b39>
  404021:	mov    rdx,QWORD PTR [rbp-0x4018]
  404028:	mov    rax,QWORD PTR [rbp-0x4028]
  40402f:	mov    rcx,rdx
  404032:	lea    rdx,[rip+0xfffffffffffffdfd]        # 403e36 <rb_base64_encode@plt+0x1ab6>
  404039:	mov    esi,0x1
  40403e:	mov    rdi,rax
  404041:	call   402090 <rb_setselect@plt>
  404046:	jmp    40404f <rb_base64_encode@plt+0x1ccf>
  404048:	nop
  404049:	jmp    40404f <rb_base64_encode@plt+0x1ccf>
  40404b:	nop
  40404c:	jmp    40404f <rb_base64_encode@plt+0x1ccf>
  40404e:	nop
  40404f:	mov    rax,QWORD PTR [rbp-0x8]
  404053:	xor    rax,QWORD PTR fs:0x28
  40405c:	je     404063 <rb_base64_encode@plt+0x1ce3>
  40405e:	call   402270 <__stack_chk_fail@plt>
  404063:	leave  
  404064:	ret    
  404065:	push   rbp
  404066:	mov    rbp,rsp
  404069:	sub    rsp,0x10
  40406d:	mov    QWORD PTR [rbp-0x8],rdi
  404071:	mov    rax,QWORD PTR [rbp-0x8]
  404075:	mov    rax,QWORD PTR [rax+0x20]
  404079:	mov    rdi,rax
  40407c:	call   402200 <rb_rawbuf_length@plt>
  404081:	cmp    eax,0xfff
  404086:	jle    4040fa <rb_base64_encode@plt+0x1d7a>
  404088:	mov    rax,QWORD PTR [rbp-0x8]
  40408c:	movzx  eax,BYTE PTR [rax+0xb8]
  404093:	or     eax,0x1
  404096:	mov    edx,eax
  404098:	mov    rax,QWORD PTR [rbp-0x8]
  40409c:	mov    BYTE PTR [rax+0xb8],dl
  4040a2:	mov    rax,QWORD PTR [rbp-0x8]
  4040a6:	mov    rax,QWORD PTR [rax+0x90]
  4040ad:	mov    ecx,0x0
  4040b2:	mov    edx,0x0
  4040b7:	mov    esi,0x1
  4040bc:	mov    rdi,rax
  4040bf:	call   402090 <rb_setselect@plt>
  4040c4:	mov    rax,QWORD PTR [rbp-0x8]
  4040c8:	movzx  eax,BYTE PTR [rax+0xb8]
  4040cf:	movzx  eax,al
  4040d2:	and    eax,0x8
  4040d5:	test   eax,eax
  4040d7:	je     4040f3 <rb_base64_encode@plt+0x1d73>
  4040d9:	mov    rax,QWORD PTR [rbp-0x8]
  4040dd:	mov    rax,QWORD PTR [rax+0x88]
  4040e4:	mov    rdx,QWORD PTR [rbp-0x8]
  4040e8:	mov    rsi,rdx
  4040eb:	mov    rdi,rax
  4040ee:	call   402c96 <rb_base64_encode@plt+0x916>
  4040f3:	mov    eax,0x1
  4040f8:	jmp    4040ff <rb_base64_encode@plt+0x1d7f>
  4040fa:	mov    eax,0x0
  4040ff:	leave  
  404100:	ret    
  404101:	push   rbp
  404102:	mov    rbp,rsp
  404105:	sub    rsp,0x4030
  40410c:	mov    QWORD PTR [rbp-0x4028],rdi
  404113:	mov    rax,QWORD PTR fs:0x28
  40411c:	mov    QWORD PTR [rbp-0x8],rax
  404120:	xor    eax,eax
  404122:	lea    rax,[rbp-0x4010]
  404129:	mov    edx,0x4000
  40412e:	mov    esi,0x0
  404133:	mov    rdi,rax
  404136:	call   402050 <memset@plt>
  40413b:	mov    rax,QWORD PTR [rbp-0x4028]
  404142:	lea    rdi,[rax+0x58]
  404146:	lea    rax,[rbp-0x4010]
  40414d:	mov    r8d,0x0
  404153:	mov    ecx,0x0
  404158:	mov    edx,0x4000
  40415d:	mov    rsi,rax
  404160:	call   402170 <rb_linebuf_get@plt>
  404165:	mov    DWORD PTR [rbp-0x4014],eax
  40416b:	cmp    DWORD PTR [rbp-0x4014],0x0
  404172:	je     404195 <rb_base64_encode@plt+0x1e15>
  404174:	mov    edx,DWORD PTR [rbp-0x4014]
  40417a:	lea    rcx,[rbp-0x4010]
  404181:	mov    rax,QWORD PTR [rbp-0x4028]
  404188:	mov    rsi,rcx
  40418b:	mov    rdi,rax
  40418e:	call   40301a <rb_base64_encode@plt+0xc9a>
  404193:	jmp    40413b <rb_base64_encode@plt+0x1dbb>
  404195:	nop
  404196:	mov    rax,QWORD PTR [rbp-0x4028]
  40419d:	movzx  eax,BYTE PTR [rax+0xb8]
  4041a4:	movzx  eax,al
  4041a7:	and    eax,0x8
  4041aa:	test   eax,eax
  4041ac:	je     4041ce <rb_base64_encode@plt+0x1e4e>
  4041ae:	mov    rax,QWORD PTR [rbp-0x4028]
  4041b5:	mov    rax,QWORD PTR [rax+0x88]
  4041bc:	mov    rdx,QWORD PTR [rbp-0x4028]
  4041c3:	mov    rsi,rdx
  4041c6:	mov    rdi,rax
  4041c9:	call   402c96 <rb_base64_encode@plt+0x916>
  4041ce:	nop
  4041cf:	mov    rax,QWORD PTR [rbp-0x8]
  4041d3:	xor    rax,QWORD PTR fs:0x28
  4041dc:	je     4041e3 <rb_base64_encode@plt+0x1e63>
  4041de:	call   402270 <__stack_chk_fail@plt>
  4041e3:	leave  
  4041e4:	ret    
  4041e5:	push   rbp
  4041e6:	mov    rbp,rsp
  4041e9:	sub    rsp,0x4030
  4041f0:	mov    QWORD PTR [rbp-0x4028],rdi
  4041f7:	mov    QWORD PTR [rbp-0x4030],rsi
  4041fe:	mov    rax,QWORD PTR fs:0x28
  404207:	mov    QWORD PTR [rbp-0x8],rax
  40420b:	xor    eax,eax
  40420d:	lea    rax,[rbp-0x4010]
  404214:	mov    edx,0x4000
  404219:	mov    esi,0x0
  40421e:	mov    rdi,rax
  404221:	call   402050 <memset@plt>
  404226:	mov    rax,QWORD PTR [rbp-0x4030]
  40422d:	mov    QWORD PTR [rbp-0x4018],rax
  404234:	mov    DWORD PTR [rbp-0x401c],0x0
  40423e:	cmp    QWORD PTR [rbp-0x4018],0x0
  404246:	je     4043ee <rb_base64_encode@plt+0x206e>
  40424c:	mov    rax,QWORD PTR [rbp-0x4018]
  404253:	movzx  eax,BYTE PTR [rax+0xb8]
  40425a:	movzx  eax,al
  40425d:	and    eax,0x2
  404260:	test   eax,eax
  404262:	jne    4043f1 <rb_base64_encode@plt+0x2071>
  404268:	mov    rax,QWORD PTR [rbp-0x4018]
  40426f:	mov    rdi,rax
  404272:	call   404065 <rb_base64_encode@plt+0x1ce5>
  404277:	test   al,al
  404279:	jne    4043f4 <rb_base64_encode@plt+0x2074>
  40427f:	mov    rax,QWORD PTR [rbp-0x4018]
  404286:	movzx  eax,BYTE PTR [rax+0xb8]
  40428d:	movzx  eax,al
  404290:	and    eax,0x2
  404293:	test   eax,eax
  404295:	jne    4043f7 <rb_base64_encode@plt+0x2077>
  40429b:	mov    rax,QWORD PTR [rbp-0x4018]
  4042a2:	mov    rax,QWORD PTR [rax+0x90]
  4042a9:	lea    rcx,[rbp-0x4010]
  4042b0:	mov    edx,0x4000
  4042b5:	mov    rsi,rcx
  4042b8:	mov    rdi,rax
  4042bb:	call   402150 <rb_read@plt>
  4042c0:	mov    DWORD PTR [rbp-0x401c],eax
  4042c6:	cmp    DWORD PTR [rbp-0x401c],0x0
  4042cd:	je     4042ea <rb_base64_encode@plt+0x1f6a>
  4042cf:	cmp    DWORD PTR [rbp-0x401c],0x0
  4042d6:	jns    40430d <rb_base64_encode@plt+0x1f8d>
  4042d8:	call   402250 <__errno_location@plt>
  4042dd:	mov    eax,DWORD PTR [rax]
  4042df:	mov    edi,eax
  4042e1:	call   402070 <rb_ignore_errno@plt>
  4042e6:	test   eax,eax
  4042e8:	jne    40430d <rb_base64_encode@plt+0x1f8d>
  4042ea:	mov    rax,QWORD PTR [rbp-0x4018]
  4042f1:	mov    edx,0x0
  4042f6:	mov    esi,0x0
  4042fb:	mov    rdi,rax
  4042fe:	mov    eax,0x0
  404303:	call   40329d <rb_base64_encode@plt+0xf1d>
  404308:	jmp    404401 <rb_base64_encode@plt+0x2081>
  40430d:	cmp    DWORD PTR [rbp-0x401c],0x0
  404314:	jns    404372 <rb_base64_encode@plt+0x1ff2>
  404316:	mov    rax,QWORD PTR [rbp-0x4018]
  40431d:	mov    rax,QWORD PTR [rax+0x90]
  404324:	mov    rdx,QWORD PTR [rbp-0x4018]
  40432b:	mov    rcx,rdx
  40432e:	lea    rdx,[rip+0xfffffffffffffeb0]        # 4041e5 <rb_base64_encode@plt+0x1e65>
  404335:	mov    esi,0x1
  40433a:	mov    rdi,rax
  40433d:	call   402090 <rb_setselect@plt>
  404342:	mov    rax,QWORD PTR [rbp-0x4018]
  404349:	movzx  eax,BYTE PTR [rax+0xb8]
  404350:	movzx  eax,al
  404353:	and    eax,0x8
  404356:	test   eax,eax
  404358:	je     4043fa <rb_base64_encode@plt+0x207a>
  40435e:	mov    rax,QWORD PTR [rbp-0x4018]
  404365:	mov    rdi,rax
  404368:	call   404101 <rb_base64_encode@plt+0x1d81>
  40436d:	jmp    4043fa <rb_base64_encode@plt+0x207a>
  404372:	mov    rax,QWORD PTR [rbp-0x4018]
  404379:	mov    rdx,QWORD PTR [rax+0xa8]
  404380:	mov    eax,DWORD PTR [rbp-0x401c]
  404386:	cdqe   
  404388:	add    rdx,rax
  40438b:	mov    rax,QWORD PTR [rbp-0x4018]
  404392:	mov    QWORD PTR [rax+0xa8],rdx
  404399:	mov    rax,QWORD PTR [rbp-0x4018]
  4043a0:	lea    rdi,[rax+0x58]
  4043a4:	mov    edx,DWORD PTR [rbp-0x401c]
  4043aa:	lea    rax,[rbp-0x4010]
  4043b1:	mov    ecx,0x0
  4043b6:	mov    rsi,rax
  4043b9:	call   4020f0 <rb_linebuf_parse@plt>
  4043be:	mov    rax,QWORD PTR [rbp-0x4018]
  4043c5:	movzx  eax,BYTE PTR [rax+0xb8]
  4043cc:	movzx  eax,al
  4043cf:	and    eax,0x2
  4043d2:	test   eax,eax
  4043d4:	jne    4043fd <rb_base64_encode@plt+0x207d>
  4043d6:	mov    rax,QWORD PTR [rbp-0x4018]
  4043dd:	mov    rdi,rax
  4043e0:	call   404065 <rb_base64_encode@plt+0x1ce5>
  4043e5:	test   al,al
  4043e7:	jne    404400 <rb_base64_encode@plt+0x2080>
  4043e9:	jmp    40427f <rb_base64_encode@plt+0x1eff>
  4043ee:	nop
  4043ef:	jmp    404401 <rb_base64_encode@plt+0x2081>
  4043f1:	nop
  4043f2:	jmp    404401 <rb_base64_encode@plt+0x2081>
  4043f4:	nop
  4043f5:	jmp    404401 <rb_base64_encode@plt+0x2081>
  4043f7:	nop
  4043f8:	jmp    404401 <rb_base64_encode@plt+0x2081>
  4043fa:	nop
  4043fb:	jmp    404401 <rb_base64_encode@plt+0x2081>
  4043fd:	nop
  4043fe:	jmp    404401 <rb_base64_encode@plt+0x2081>
  404400:	nop
  404401:	mov    rax,QWORD PTR [rbp-0x8]
  404405:	xor    rax,QWORD PTR fs:0x28
  40440e:	je     404415 <rb_base64_encode@plt+0x2095>
  404410:	call   402270 <__stack_chk_fail@plt>
  404415:	leave  
  404416:	ret    
  404417:	push   rbp
  404418:	mov    rbp,rsp
  40441b:	sub    rsp,0x4030
  404422:	mov    QWORD PTR [rbp-0x4028],rdi
  404429:	mov    QWORD PTR [rbp-0x4030],rsi
  404430:	mov    rax,QWORD PTR fs:0x28
  404439:	mov    QWORD PTR [rbp-0x8],rax
  40443d:	xor    eax,eax
  40443f:	mov    rax,QWORD PTR [rbp-0x4030]
  404446:	mov    QWORD PTR [rbp-0x4018],rax
  40444d:	mov    DWORD PTR [rbp-0x401c],0x0
  404457:	cmp    QWORD PTR [rbp-0x4018],0x0
  40445f:	je     404527 <rb_base64_encode@plt+0x21a7>
  404465:	mov    rax,QWORD PTR [rbp-0x4018]
  40446c:	mov    rax,QWORD PTR [rax+0x90]
  404473:	lea    rcx,[rbp-0x4010]
  40447a:	mov    edx,0x4000
  40447f:	mov    rsi,rcx
  404482:	mov    rdi,rax
  404485:	call   402150 <rb_read@plt>
  40448a:	mov    DWORD PTR [rbp-0x401c],eax
  404490:	cmp    DWORD PTR [rbp-0x401c],0x0
  404497:	je     4044b4 <rb_base64_encode@plt+0x2134>
  404499:	cmp    DWORD PTR [rbp-0x401c],0x0
  4044a0:	jns    4044ec <rb_base64_encode@plt+0x216c>
  4044a2:	call   402250 <__errno_location@plt>
  4044a7:	mov    eax,DWORD PTR [rax]
  4044a9:	mov    edi,eax
  4044ab:	call   402070 <rb_ignore_errno@plt>
  4044b0:	test   eax,eax
  4044b2:	jne    4044ec <rb_base64_encode@plt+0x216c>
  4044b4:	mov    rax,QWORD PTR [rbp-0x4018]
  4044bb:	mov    rax,QWORD PTR [rax+0x90]
  4044c2:	mov    rdi,rax
  4044c5:	call   4021e0 <rb_close@plt>
  4044ca:	mov    rcx,QWORD PTR [rbp-0x4018]
  4044d1:	mov    rax,QWORD PTR [rbp-0x4018]
  4044d8:	lea    rdx,[rip+0x108c1]        # 414da0 <rb_base64_encode@plt+0x12a20>
  4044df:	mov    rsi,rcx
  4044e2:	mov    rdi,rax
  4044e5:	call   402496 <rb_base64_encode@plt+0x116>
  4044ea:	jmp    404528 <rb_base64_encode@plt+0x21a8>
  4044ec:	cmp    DWORD PTR [rbp-0x401c],0x0
  4044f3:	jns    404465 <rb_base64_encode@plt+0x20e5>
  4044f9:	mov    rax,QWORD PTR [rbp-0x4018]
  404500:	mov    rax,QWORD PTR [rax+0x90]
  404507:	mov    rdx,QWORD PTR [rbp-0x4018]
  40450e:	mov    rcx,rdx
  404511:	lea    rdx,[rip+0xfffffffffffffeff]        # 404417 <rb_base64_encode@plt+0x2097>
  404518:	mov    esi,0x1
  40451d:	mov    rdi,rax
  404520:	call   402090 <rb_setselect@plt>
  404525:	jmp    404528 <rb_base64_encode@plt+0x21a8>
  404527:	nop
  404528:	mov    rax,QWORD PTR [rbp-0x8]
  40452c:	xor    rax,QWORD PTR fs:0x28
  404535:	je     40453c <rb_base64_encode@plt+0x21bc>
  404537:	call   402270 <__stack_chk_fail@plt>
  40453c:	leave  
  40453d:	ret    
  40453e:	push   rbp
  40453f:	mov    rbp,rsp
  404542:	sub    rsp,0x20
  404546:	mov    QWORD PTR [rbp-0x18],rdi
  40454a:	mov    QWORD PTR [rbp-0x20],rsi
  40454e:	mov    rax,QWORD PTR [rbp-0x20]
  404552:	mov    rdx,QWORD PTR [rax+0x30]
  404556:	mov    rax,QWORD PTR [rbp-0x20]
  40455a:	mov    rcx,QWORD PTR [rax+0x28]
  40455e:	mov    rax,QWORD PTR [rbp-0x18]
  404562:	mov    rsi,rcx
  404565:	mov    rdi,rax
  404568:	call   4035b3 <rb_base64_encode@plt+0x1233>
  40456d:	mov    QWORD PTR [rbp-0x8],rax
  404571:	mov    rax,QWORD PTR [rbp-0x20]
  404575:	mov    rax,QWORD PTR [rax+0x18]
  404579:	add    rax,0x1
  40457d:	mov    rdi,rax
  404580:	call   4027fb <rb_base64_encode@plt+0x47b>
  404585:	mov    DWORD PTR [rbp-0xc],eax
  404588:	mov    edx,DWORD PTR [rbp-0xc]
  40458b:	mov    rax,QWORD PTR [rbp-0x8]
  40458f:	mov    esi,edx
  404591:	mov    rdi,rax
  404594:	call   402a40 <rb_base64_encode@plt+0x6c0>
  404599:	mov    rax,QWORD PTR [rbp-0x8]
  40459d:	movzx  eax,BYTE PTR [rax+0xb8]
  4045a4:	or     eax,0x4
  4045a7:	mov    edx,eax
  4045a9:	mov    rax,QWORD PTR [rbp-0x8]
  4045ad:	mov    BYTE PTR [rax+0xb8],dl
  4045b3:	mov    rax,QWORD PTR [rbp-0x8]
  4045b7:	mov    rax,QWORD PTR [rax+0x88]
  4045be:	mov    rdi,rax
  4045c1:	call   402040 <rb_get_type@plt>
  4045c6:	movzx  eax,al
  4045c9:	and    eax,0x40
  4045cc:	test   eax,eax
  4045ce:	je     4045e8 <rb_base64_encode@plt+0x2268>
  4045d0:	mov    rax,QWORD PTR [rbp-0x8]
  4045d4:	mov    rax,QWORD PTR [rax+0x88]
  4045db:	mov    esi,0x4
  4045e0:	mov    rdi,rax
  4045e3:	call   402160 <rb_set_type@plt>
  4045e8:	mov    rax,QWORD PTR [rbp-0x8]
  4045ec:	mov    rax,QWORD PTR [rax+0x90]
  4045f3:	mov    rdi,rax
  4045f6:	call   402040 <rb_get_type@plt>
  4045fb:	cmp    al,0x40
  4045fd:	jne    404617 <rb_base64_encode@plt+0x2297>
  4045ff:	mov    rax,QWORD PTR [rbp-0x8]
  404603:	mov    rax,QWORD PTR [rax+0x90]
  40460a:	mov    esi,0x4
  40460f:	mov    rdi,rax
  404612:	call   402160 <rb_set_type@plt>
  404617:	mov    rax,QWORD PTR [rbp-0x8]
  40461b:	mov    rax,QWORD PTR [rax+0x88]
  404622:	mov    rdx,QWORD PTR [rbp-0x8]
  404626:	mov    rsi,rdx
  404629:	mov    rdi,rax
  40462c:	call   403e36 <rb_base64_encode@plt+0x1ab6>
  404631:	mov    rax,QWORD PTR [rbp-0x8]
  404635:	mov    rax,QWORD PTR [rax+0x90]
  40463c:	mov    rdx,QWORD PTR [rbp-0x8]
  404640:	mov    rsi,rdx
  404643:	mov    rdi,rax
  404646:	call   4041e5 <rb_base64_encode@plt+0x1e65>
  40464b:	nop
  40464c:	leave  
  40464d:	ret    
  40464e:	push   rbp
  40464f:	mov    rbp,rsp
  404652:	sub    rsp,0x30
  404656:	mov    QWORD PTR [rbp-0x28],rdi
  40465a:	mov    rax,QWORD PTR [rbp-0x28]
  40465e:	mov    rax,QWORD PTR [rax+0x30]
  404662:	mov    QWORD PTR [rbp-0x18],rax
  404666:	cmp    QWORD PTR [rbp-0x18],0x0
  40466b:	je     404677 <rb_base64_encode@plt+0x22f7>
  40466d:	mov    rax,QWORD PTR [rbp-0x18]
  404671:	mov    rax,QWORD PTR [rax+0x10]
  404675:	jmp    40467c <rb_base64_encode@plt+0x22fc>
  404677:	mov    eax,0x0
  40467c:	mov    QWORD PTR [rbp-0x10],rax
  404680:	jmp    40473d <rb_base64_encode@plt+0x23bd>
  404685:	mov    rax,QWORD PTR [rbp-0x18]
  404689:	mov    rax,QWORD PTR [rax]
  40468c:	mov    QWORD PTR [rbp-0x8],rax
  404690:	mov    rax,QWORD PTR [rbp-0x8]
  404694:	mov    rax,QWORD PTR [rax+0x18]
  404698:	movzx  eax,BYTE PTR [rax]
  40469b:	movzx  eax,al
  40469e:	cmp    eax,0x41
  4046a1:	je     4046a5 <rb_base64_encode@plt+0x2325>
  4046a3:	jmp    4046e8 <rb_base64_encode@plt+0x2368>
  4046a5:	mov    rax,QWORD PTR [rbp-0x8]
  4046a9:	mov    eax,DWORD PTR [rax+0x48]
  4046ac:	cmp    eax,0x2
  4046af:	jne    4046bf <rb_base64_encode@plt+0x233f>
  4046b1:	mov    rax,QWORD PTR [rbp-0x8]
  4046b5:	mov    rax,QWORD PTR [rax+0x20]
  4046b9:	cmp    rax,0x5
  4046bd:	je     4046d4 <rb_base64_encode@plt+0x2354>
  4046bf:	mov    rdx,QWORD PTR [rbp-0x8]
  4046c3:	mov    rax,QWORD PTR [rbp-0x28]
  4046c7:	mov    rsi,rdx
  4046ca:	mov    rdi,rax
  4046cd:	call   40366b <rb_base64_encode@plt+0x12eb>
  4046d2:	jmp    4046e8 <rb_base64_encode@plt+0x2368>
  4046d4:	mov    rdx,QWORD PTR [rbp-0x8]
  4046d8:	mov    rax,QWORD PTR [rbp-0x28]
  4046dc:	mov    rsi,rdx
  4046df:	mov    rdi,rax
  4046e2:	call   40453e <rb_base64_encode@plt+0x21be>
  4046e7:	nop
  4046e8:	mov    rax,QWORD PTR [rbp-0x28]
  4046ec:	lea    rdx,[rax+0x30]
  4046f0:	mov    rax,QWORD PTR [rbp-0x18]
  4046f4:	mov    rsi,rdx
  4046f7:	mov    rdi,rax
  4046fa:	call   4026a0 <rb_base64_encode@plt+0x320>
  4046ff:	mov    rax,QWORD PTR [rbp-0x8]
  404703:	mov    rax,QWORD PTR [rax+0x18]
  404707:	mov    rdi,rax
  40470a:	call   4027d0 <rb_base64_encode@plt+0x450>
  40470f:	mov    rax,QWORD PTR [rbp-0x8]
  404713:	mov    rdi,rax
  404716:	call   4027d0 <rb_base64_encode@plt+0x450>
  40471b:	mov    rax,QWORD PTR [rbp-0x10]
  40471f:	mov    QWORD PTR [rbp-0x18],rax
  404723:	cmp    QWORD PTR [rbp-0x18],0x0
  404728:	je     404734 <rb_base64_encode@plt+0x23b4>
  40472a:	mov    rax,QWORD PTR [rbp-0x18]
  40472e:	mov    rax,QWORD PTR [rax+0x10]
  404732:	jmp    404739 <rb_base64_encode@plt+0x23b9>
  404734:	mov    eax,0x0
  404739:	mov    QWORD PTR [rbp-0x10],rax
  40473d:	cmp    QWORD PTR [rbp-0x18],0x0
  404742:	jne    404685 <rb_base64_encode@plt+0x2305>
  404748:	nop
  404749:	leave  
  40474a:	ret    
  40474b:	push   rbp
  40474c:	mov    rbp,rsp
  40474f:	sub    rsp,0x30
  404753:	mov    QWORD PTR [rbp-0x28],rdi
  404757:	mov    QWORD PTR [rbp-0x30],rsi
  40475b:	mov    rax,QWORD PTR [rbp-0x30]
  40475f:	mov    QWORD PTR [rbp-0x10],rax
  404763:	mov    edi,0x50
  404768:	call   402794 <rb_base64_encode@plt+0x414>
  40476d:	mov    QWORD PTR [rbp-0x8],rax
  404771:	mov    edi,0x4000
  404776:	call   402794 <rb_base64_encode@plt+0x414>
  40477b:	mov    rdx,rax
  40477e:	mov    rax,QWORD PTR [rbp-0x8]
  404782:	mov    QWORD PTR [rax+0x18],rdx
  404786:	mov    rax,QWORD PTR [rbp-0x8]
  40478a:	mov    QWORD PTR [rax+0x20],0x4000
  404792:	mov    rax,QWORD PTR [rbp-0x8]
  404796:	lea    rcx,[rax+0x28]
  40479a:	mov    rax,QWORD PTR [rbp-0x8]
  40479e:	mov    rdx,QWORD PTR [rax+0x20]
  4047a2:	mov    rax,QWORD PTR [rbp-0x8]
  4047a6:	mov    rsi,QWORD PTR [rax+0x18]
  4047aa:	mov    rax,QWORD PTR [rbp-0x10]
  4047ae:	mov    rax,QWORD PTR [rax+0x20]
  4047b2:	mov    r8d,0x4
  4047b8:	mov    rdi,rax
  4047bb:	call   4022c0 <rb_recv_fd_buf@plt>
  4047c0:	mov    DWORD PTR [rbp-0x14],eax
  4047c3:	cmp    DWORD PTR [rbp-0x14],0x0
  4047c7:	jg     4047e7 <rb_base64_encode@plt+0x2467>
  4047c9:	mov    rax,QWORD PTR [rbp-0x8]
  4047cd:	mov    rax,QWORD PTR [rax+0x18]
  4047d1:	mov    rdi,rax
  4047d4:	call   4027d0 <rb_base64_encode@plt+0x450>
  4047d9:	mov    rax,QWORD PTR [rbp-0x8]
  4047dd:	mov    rdi,rax
  4047e0:	call   4027d0 <rb_base64_encode@plt+0x450>
  4047e5:	jmp    404845 <rb_base64_encode@plt+0x24c5>
  4047e7:	mov    eax,DWORD PTR [rbp-0x14]
  4047ea:	movsxd rdx,eax
  4047ed:	mov    rax,QWORD PTR [rbp-0x8]
  4047f1:	mov    QWORD PTR [rax+0x20],rdx
  4047f5:	mov    rax,QWORD PTR [rbp-0x10]
  4047f9:	lea    rdx,[rax+0x30]
  4047fd:	mov    rcx,QWORD PTR [rbp-0x8]
  404801:	mov    rax,QWORD PTR [rbp-0x8]
  404805:	mov    rsi,rcx
  404808:	mov    rdi,rax
  40480b:	call   40259a <rb_base64_encode@plt+0x21a>
  404810:	mov    DWORD PTR [rbp-0x18],0x0
  404817:	jmp    40481d <rb_base64_encode@plt+0x249d>
  404819:	add    DWORD PTR [rbp-0x18],0x1
  40481d:	cmp    DWORD PTR [rbp-0x18],0x3
  404821:	jg     40483b <rb_base64_encode@plt+0x24bb>
  404823:	mov    rax,QWORD PTR [rbp-0x8]
  404827:	mov    edx,DWORD PTR [rbp-0x18]
  40482a:	movsxd rdx,edx
  40482d:	add    rdx,0x4
  404831:	mov    rax,QWORD PTR [rax+rdx*8+0x8]
  404836:	test   rax,rax
  404839:	jne    404819 <rb_base64_encode@plt+0x2499>
  40483b:	mov    rax,QWORD PTR [rbp-0x8]
  40483f:	mov    edx,DWORD PTR [rbp-0x18]
  404842:	mov    DWORD PTR [rax+0x48],edx
  404845:	cmp    DWORD PTR [rbp-0x14],0x0
  404849:	jg     404763 <rb_base64_encode@plt+0x23e3>
  40484f:	cmp    DWORD PTR [rbp-0x14],0x0
  404853:	je     40486d <rb_base64_encode@plt+0x24ed>
  404855:	cmp    DWORD PTR [rbp-0x14],0x0
  404859:	jns    404877 <rb_base64_encode@plt+0x24f7>
  40485b:	call   402250 <__errno_location@plt>
  404860:	mov    eax,DWORD PTR [rax]
  404862:	mov    edi,eax
  404864:	call   402070 <rb_ignore_errno@plt>
  404869:	test   eax,eax
  40486b:	jne    404877 <rb_base64_encode@plt+0x24f7>
  40486d:	mov    edi,0x0
  404872:	call   4020c0 <exit@plt>
  404877:	mov    rax,QWORD PTR [rbp-0x10]
  40487b:	mov    rdi,rax
  40487e:	call   40464e <rb_base64_encode@plt+0x22ce>
  404883:	mov    rax,QWORD PTR [rbp-0x10]
  404887:	mov    rax,QWORD PTR [rax+0x20]
  40488b:	mov    rdx,QWORD PTR [rbp-0x10]
  40488f:	mov    rcx,rdx
  404892:	lea    rdx,[rip+0xfffffffffffffeb2]        # 40474b <rb_base64_encode@plt+0x23cb>
  404899:	mov    esi,0x1
  40489e:	mov    rdi,rax
  4048a1:	call   402090 <rb_setselect@plt>
  4048a6:	nop
  4048a7:	leave  
  4048a8:	ret    
  4048a9:	push   rbp
  4048aa:	mov    rbp,rsp
  4048ad:	sub    rsp,0x4030
  4048b4:	mov    QWORD PTR [rbp-0x4028],rdi
  4048bb:	mov    QWORD PTR [rbp-0x4030],rsi
  4048c2:	mov    rax,QWORD PTR fs:0x28
  4048cb:	mov    QWORD PTR [rbp-0x8],rax
  4048cf:	xor    eax,eax
  4048d1:	nop
  4048d2:	lea    rcx,[rbp-0x4010]
  4048d9:	mov    rax,QWORD PTR [rbp-0x4028]
  4048e0:	mov    edx,0x4000
  4048e5:	mov    rsi,rcx
  4048e8:	mov    rdi,rax
  4048eb:	call   402150 <rb_read@plt>
  4048f0:	mov    DWORD PTR [rbp-0x4014],eax
  4048f6:	cmp    DWORD PTR [rbp-0x4014],0x0
  4048fd:	jg     4048d2 <rb_base64_encode@plt+0x2552>
  4048ff:	cmp    DWORD PTR [rbp-0x4014],0x0
  404906:	je     404923 <rb_base64_encode@plt+0x25a3>
  404908:	cmp    DWORD PTR [rbp-0x4014],0x0
  40490f:	jns    40492d <rb_base64_encode@plt+0x25ad>
  404911:	call   402250 <__errno_location@plt>
  404916:	mov    eax,DWORD PTR [rax]
  404918:	mov    edi,eax
  40491a:	call   402070 <rb_ignore_errno@plt>
  40491f:	test   eax,eax
  404921:	jne    40492d <rb_base64_encode@plt+0x25ad>
  404923:	mov    edi,0x0
  404928:	call   4020c0 <exit@plt>
  40492d:	mov    rax,QWORD PTR [rbp-0x4028]
  404934:	mov    ecx,0x0
  404939:	lea    rdx,[rip+0xffffffffffffff69]        # 4048a9 <rb_base64_encode@plt+0x2529>
  404940:	mov    esi,0x1
  404945:	mov    rdi,rax
  404948:	call   402090 <rb_setselect@plt>
  40494d:	nop
  40494e:	mov    rax,QWORD PTR [rbp-0x8]
  404952:	xor    rax,QWORD PTR fs:0x28
  40495b:	je     404962 <rb_base64_encode@plt+0x25e2>
  40495d:	call   402270 <__stack_chk_fail@plt>
  404962:	leave  
  404963:	ret    
  404964:	push   rbp
  404965:	mov    rbp,rsp
  404968:	push   rbx
  404969:	sub    rsp,0x48
  40496d:	mov    DWORD PTR [rbp-0x44],edi
  404970:	mov    QWORD PTR [rbp-0x50],rsi
  404974:	call   4029f3 <rb_base64_encode@plt+0x673>
  404979:	mov    DWORD PTR [rbp-0x34],eax
  40497c:	lea    rdi,[rip+0x286e]        # 4071f1 <rb_base64_encode@plt+0x4e71>
  404983:	call   402230 <getenv@plt>
  404988:	mov    QWORD PTR [rbp-0x28],rax
  40498c:	lea    rdi,[rip+0x2865]        # 4071f8 <rb_base64_encode@plt+0x4e78>
  404993:	call   402230 <getenv@plt>
  404998:	mov    QWORD PTR [rbp-0x20],rax
  40499c:	lea    rdi,[rip+0x285e]        # 407201 <rb_base64_encode@plt+0x4e81>
  4049a3:	call   402230 <getenv@plt>
  4049a8:	mov    QWORD PTR [rbp-0x18],rax
  4049ac:	cmp    QWORD PTR [rbp-0x28],0x0
  4049b1:	je     4049c1 <rb_base64_encode@plt+0x2641>
  4049b3:	cmp    QWORD PTR [rbp-0x20],0x0
  4049b8:	je     4049c1 <rb_base64_encode@plt+0x2641>
  4049ba:	cmp    QWORD PTR [rbp-0x18],0x0
  4049bf:	jne    404a11 <rb_base64_encode@plt+0x2691>
  4049c1:	mov    rax,QWORD PTR [rip+0x4630]        # 408ff8 <rb_base64_encode@plt+0x6c78>
  4049c8:	mov    rax,QWORD PTR [rax]
  4049cb:	mov    rcx,rax
  4049ce:	mov    edx,0x34
  4049d3:	mov    esi,0x1
  4049d8:	lea    rdi,[rip+0x2831]        # 407210 <rb_base64_encode@plt+0x4e90>
  4049df:	call   402320 <fwrite@plt>
  4049e4:	mov    rax,QWORD PTR [rip+0x460d]        # 408ff8 <rb_base64_encode@plt+0x6c78>
  4049eb:	mov    rax,QWORD PTR [rax]
  4049ee:	mov    rcx,rax
  4049f1:	mov    edx,0x31
  4049f6:	mov    esi,0x1
  4049fb:	lea    rdi,[rip+0x2846]        # 407248 <rb_base64_encode@plt+0x4ec8>
  404a02:	call   402320 <fwrite@plt>
  404a07:	mov    edi,0x1
  404a0c:	call   4020c0 <exit@plt>
  404a11:	mov    rax,QWORD PTR [rbp-0x28]
  404a15:	mov    rdi,rax
  404a18:	call   4021f0 <atoi@plt>
  404a1d:	mov    DWORD PTR [rbp-0x30],eax
  404a20:	mov    rax,QWORD PTR [rbp-0x20]
  404a24:	mov    rdi,rax
  404a27:	call   4021f0 <atoi@plt>
  404a2c:	mov    DWORD PTR [rbp-0x2c],eax
  404a2f:	mov    rax,QWORD PTR [rbp-0x18]
  404a33:	mov    rdi,rax
  404a36:	call   4021f0 <atoi@plt>
  404a3b:	mov    DWORD PTR [rip+0x47bf],eax        # 409200 <rb_base64_encode@plt+0x6e80>
  404a41:	mov    DWORD PTR [rbp-0x38],0x0
  404a48:	mov    DWORD PTR [rbp-0x38],0x0
  404a4f:	jmp    404a75 <rb_base64_encode@plt+0x26f5>
  404a51:	mov    eax,DWORD PTR [rbp-0x38]
  404a54:	cmp    eax,DWORD PTR [rbp-0x30]
  404a57:	je     404a71 <rb_base64_encode@plt+0x26f1>
  404a59:	mov    eax,DWORD PTR [rbp-0x38]
  404a5c:	cmp    eax,DWORD PTR [rbp-0x2c]
  404a5f:	je     404a71 <rb_base64_encode@plt+0x26f1>
  404a61:	cmp    DWORD PTR [rbp-0x38],0x2
  404a65:	jle    404a71 <rb_base64_encode@plt+0x26f1>
  404a67:	mov    eax,DWORD PTR [rbp-0x38]
  404a6a:	mov    edi,eax
  404a6c:	call   402080 <close@plt>
  404a71:	add    DWORD PTR [rbp-0x38],0x1
  404a75:	mov    eax,DWORD PTR [rbp-0x38]
  404a78:	cmp    eax,DWORD PTR [rbp-0x34]
  404a7b:	jl     404a51 <rb_base64_encode@plt+0x26d1>
  404a7d:	mov    esi,0x2
  404a82:	lea    rdi,[rip+0x27f1]        # 40727a <rb_base64_encode@plt+0x4efa>
  404a89:	mov    eax,0x0
  404a8e:	call   402370 <open@plt>
  404a93:	mov    DWORD PTR [rbp-0x38],eax
  404a96:	cmp    DWORD PTR [rbp-0x38],0x0
  404a9a:	js     404afd <rb_base64_encode@plt+0x277d>
  404a9c:	cmp    DWORD PTR [rbp-0x30],0x0
  404aa0:	je     404ab7 <rb_base64_encode@plt+0x2737>
  404aa2:	cmp    DWORD PTR [rbp-0x2c],0x0
  404aa6:	je     404ab7 <rb_base64_encode@plt+0x2737>
  404aa8:	mov    eax,DWORD PTR [rbp-0x38]
  404aab:	mov    esi,0x0
  404ab0:	mov    edi,eax
  404ab2:	call   402030 <dup2@plt>
  404ab7:	cmp    DWORD PTR [rbp-0x30],0x1
  404abb:	je     404ad2 <rb_base64_encode@plt+0x2752>
  404abd:	cmp    DWORD PTR [rbp-0x2c],0x1
  404ac1:	je     404ad2 <rb_base64_encode@plt+0x2752>
  404ac3:	mov    eax,DWORD PTR [rbp-0x38]
  404ac6:	mov    esi,0x1
  404acb:	mov    edi,eax
  404acd:	call   402030 <dup2@plt>
  404ad2:	cmp    DWORD PTR [rbp-0x30],0x2
  404ad6:	je     404aed <rb_base64_encode@plt+0x276d>
  404ad8:	cmp    DWORD PTR [rbp-0x2c],0x2
  404adc:	je     404aed <rb_base64_encode@plt+0x276d>
  404ade:	mov    eax,DWORD PTR [rbp-0x38]
  404ae1:	mov    esi,0x2
  404ae6:	mov    edi,eax
  404ae8:	call   402030 <dup2@plt>
  404aed:	cmp    DWORD PTR [rbp-0x38],0x2
  404af1:	jle    404afd <rb_base64_encode@plt+0x277d>
  404af3:	mov    eax,DWORD PTR [rbp-0x38]
  404af6:	mov    edi,eax
  404af8:	call   402080 <close@plt>
  404afd:	call   4028cb <rb_base64_encode@plt+0x54b>
  404b02:	mov    eax,DWORD PTR [rbp-0x34]
  404b05:	sub    rsp,0x8
  404b09:	push   0x1000
  404b0e:	mov    r9d,0x400
  404b14:	mov    r8d,eax
  404b17:	mov    ecx,0x0
  404b1c:	mov    edx,0x0
  404b21:	mov    esi,0x0
  404b26:	mov    edi,0x0
  404b2b:	call   402290 <rb_lib_init@plt>
  404b30:	add    rsp,0x10
  404b34:	mov    edi,0x1000
  404b39:	call   402300 <rb_linebuf_init@plt>
  404b3e:	mov    edi,0x1000
  404b43:	call   402110 <rb_init_rawbuffers@plt>
  404b48:	mov    edi,0x60
  404b4d:	call   402794 <rb_base64_encode@plt+0x414>
  404b52:	mov    QWORD PTR [rip+0x46af],rax        # 409208 <rb_base64_encode@plt+0x6e88>
  404b59:	mov    rbx,QWORD PTR [rip+0x46a8]        # 409208 <rb_base64_encode@plt+0x6e88>
  404b60:	mov    eax,DWORD PTR [rbp-0x30]
  404b63:	lea    rdx,[rip+0x271a]        # 407284 <rb_base64_encode@plt+0x4f04>
  404b6a:	mov    esi,0x4
  404b6f:	mov    edi,eax
  404b71:	call   4022b0 <rb_open@plt>
  404b76:	mov    QWORD PTR [rbx+0x20],rax
  404b7a:	mov    rbx,QWORD PTR [rip+0x4687]        # 409208 <rb_base64_encode@plt+0x6e88>
  404b81:	mov    eax,DWORD PTR [rbp-0x2c]
  404b84:	lea    rdx,[rip+0x270d]        # 407298 <rb_base64_encode@plt+0x4f18>
  404b8b:	mov    esi,0x8
  404b90:	mov    edi,eax
  404b92:	call   4022b0 <rb_open@plt>
  404b97:	mov    QWORD PTR [rbx+0x28],rax
  404b9b:	mov    rax,QWORD PTR [rip+0x4666]        # 409208 <rb_base64_encode@plt+0x6e88>
  404ba2:	mov    rax,QWORD PTR [rax+0x20]
  404ba6:	mov    rdi,rax
  404ba9:	call   4020e0 <rb_set_nb@plt>
  404bae:	mov    rax,QWORD PTR [rip+0x4653]        # 409208 <rb_base64_encode@plt+0x6e88>
  404bb5:	mov    rax,QWORD PTR [rax+0x28]
  404bb9:	mov    rdi,rax
  404bbc:	call   4020e0 <rb_set_nb@plt>
  404bc1:	mov    ecx,0xa
  404bc6:	mov    edx,0x0
  404bcb:	lea    rsi,[rip+0xffffffffffffdf2f]        # 402b01 <rb_base64_encode@plt+0x781>
  404bd2:	lea    rdi,[rip+0x26c9]        # 4072a2 <rb_base64_encode@plt+0x4f22>
  404bd9:	call   402060 <rb_event_addish@plt>
  404bde:	mov    rax,QWORD PTR [rip+0x4623]        # 409208 <rb_base64_encode@plt+0x6e88>
  404be5:	mov    rax,QWORD PTR [rax+0x28]
  404be9:	mov    esi,0x0
  404bee:	mov    rdi,rax
  404bf1:	call   4048a9 <rb_base64_encode@plt+0x2529>
  404bf6:	mov    rdx,QWORD PTR [rip+0x460b]        # 409208 <rb_base64_encode@plt+0x6e88>
  404bfd:	mov    rax,QWORD PTR [rip+0x4604]        # 409208 <rb_base64_encode@plt+0x6e88>
  404c04:	mov    rax,QWORD PTR [rax+0x20]
  404c08:	mov    rsi,rdx
  404c0b:	mov    rdi,rax
  404c0e:	call   40474b <rb_base64_encode@plt+0x23cb>
  404c13:	mov    edi,0x0
  404c18:	call   402140 <rb_lib_loop@plt>
  404c1d:	push   rbp
  404c1e:	mov    rbp,rsp
  404c21:	push   rbx
  404c22:	sub    rsp,0x88
  404c29:	mov    QWORD PTR [rbp-0x88],rdi
  404c30:	mov    QWORD PTR [rbp-0x90],rsi
  404c37:	mov    rax,QWORD PTR fs:0x28
  404c40:	mov    QWORD PTR [rbp-0x18],rax
  404c44:	xor    eax,eax
  404c46:	mov    rax,QWORD PTR [rbp-0x90]
  404c4d:	mov    rdx,QWORD PTR [rax]
  404c50:	mov    QWORD PTR [rbp-0x60],rdx
  404c54:	mov    rdx,QWORD PTR [rax+0x8]
  404c58:	mov    QWORD PTR [rbp-0x58],rdx
  404c5c:	mov    rdx,QWORD PTR [rax+0x10]
  404c60:	mov    QWORD PTR [rbp-0x50],rdx
  404c64:	mov    rdx,QWORD PTR [rax+0x18]
  404c68:	mov    QWORD PTR [rbp-0x48],rdx
  404c6c:	mov    rdx,QWORD PTR [rax+0x20]
  404c70:	mov    QWORD PTR [rbp-0x40],rdx
  404c74:	mov    rdx,QWORD PTR [rax+0x28]
  404c78:	mov    QWORD PTR [rbp-0x38],rdx
  404c7c:	mov    rdx,QWORD PTR [rax+0x30]
  404c80:	mov    QWORD PTR [rbp-0x30],rdx
  404c84:	mov    rax,QWORD PTR [rax+0x38]
  404c88:	mov    QWORD PTR [rbp-0x28],rax
  404c8c:	mov    rax,QWORD PTR [rbp-0x88]
  404c93:	mov    eax,DWORD PTR [rax]
  404c95:	mov    DWORD PTR [rbp-0x74],eax
  404c98:	mov    rax,QWORD PTR [rbp-0x88]
  404c9f:	mov    eax,DWORD PTR [rax+0x4]
  404ca2:	mov    DWORD PTR [rbp-0x70],eax
  404ca5:	mov    rax,QWORD PTR [rbp-0x88]
  404cac:	mov    eax,DWORD PTR [rax+0x8]
  404caf:	mov    DWORD PTR [rbp-0x6c],eax
  404cb2:	mov    rax,QWORD PTR [rbp-0x88]
  404cb9:	mov    eax,DWORD PTR [rax+0xc]
  404cbc:	mov    DWORD PTR [rbp-0x68],eax
  404cbf:	mov    rax,QWORD PTR [rbp-0x88]
  404cc6:	mov    eax,DWORD PTR [rax+0x10]
  404cc9:	mov    DWORD PTR [rbp-0x64],eax
  404ccc:	mov    eax,DWORD PTR [rbp-0x6c]
  404ccf:	xor    eax,DWORD PTR [rbp-0x68]
  404cd2:	and    eax,DWORD PTR [rbp-0x70]
  404cd5:	xor    eax,DWORD PTR [rbp-0x68]
  404cd8:	mov    ebx,eax
  404cda:	mov    eax,DWORD PTR [rbp-0x60]
  404cdd:	mov    edi,eax
  404cdf:	call   402330 <htonl@plt>
  404ce4:	mov    DWORD PTR [rbp-0x60],eax
  404ce7:	mov    eax,DWORD PTR [rbp-0x60]
  404cea:	lea    edx,[rbx+rax*1]
  404ced:	mov    eax,DWORD PTR [rbp-0x74]
  404cf0:	rorx   eax,eax,0x1b
  404cf6:	add    eax,edx
  404cf8:	add    eax,0x5a827999
  404cfd:	add    DWORD PTR [rbp-0x64],eax
  404d00:	ror    DWORD PTR [rbp-0x70],0x2
  404d04:	mov    eax,DWORD PTR [rbp-0x70]
  404d07:	xor    eax,DWORD PTR [rbp-0x6c]
  404d0a:	and    eax,DWORD PTR [rbp-0x74]
  404d0d:	xor    eax,DWORD PTR [rbp-0x6c]
  404d10:	mov    ebx,eax
  404d12:	mov    eax,DWORD PTR [rbp-0x5c]
  404d15:	mov    edi,eax
  404d17:	call   402330 <htonl@plt>
  404d1c:	mov    DWORD PTR [rbp-0x5c],eax
  404d1f:	mov    eax,DWORD PTR [rbp-0x5c]
  404d22:	lea    edx,[rbx+rax*1]
  404d25:	mov    eax,DWORD PTR [rbp-0x64]
  404d28:	rorx   eax,eax,0x1b
  404d2e:	add    eax,edx
  404d30:	add    eax,0x5a827999
  404d35:	add    DWORD PTR [rbp-0x68],eax
  404d38:	ror    DWORD PTR [rbp-0x74],0x2
  404d3c:	mov    eax,DWORD PTR [rbp-0x74]
  404d3f:	xor    eax,DWORD PTR [rbp-0x70]
  404d42:	and    eax,DWORD PTR [rbp-0x64]
  404d45:	xor    eax,DWORD PTR [rbp-0x70]
  404d48:	mov    ebx,eax
  404d4a:	mov    eax,DWORD PTR [rbp-0x58]
  404d4d:	mov    edi,eax
  404d4f:	call   402330 <htonl@plt>
  404d54:	mov    DWORD PTR [rbp-0x58],eax
  404d57:	mov    eax,DWORD PTR [rbp-0x58]
  404d5a:	lea    edx,[rbx+rax*1]
  404d5d:	mov    eax,DWORD PTR [rbp-0x68]
  404d60:	rorx   eax,eax,0x1b
  404d66:	add    eax,edx
  404d68:	add    eax,0x5a827999
  404d6d:	add    DWORD PTR [rbp-0x6c],eax
  404d70:	ror    DWORD PTR [rbp-0x64],0x2
  404d74:	mov    eax,DWORD PTR [rbp-0x64]
  404d77:	xor    eax,DWORD PTR [rbp-0x74]
  404d7a:	and    eax,DWORD PTR [rbp-0x68]
  404d7d:	xor    eax,DWORD PTR [rbp-0x74]
  404d80:	mov    ebx,eax
  404d82:	mov    eax,DWORD PTR [rbp-0x54]
  404d85:	mov    edi,eax
  404d87:	call   402330 <htonl@plt>
  404d8c:	mov    DWORD PTR [rbp-0x54],eax
  404d8f:	mov    eax,DWORD PTR [rbp-0x54]
  404d92:	lea    edx,[rbx+rax*1]
  404d95:	mov    eax,DWORD PTR [rbp-0x6c]
  404d98:	rorx   eax,eax,0x1b
  404d9e:	add    eax,edx
  404da0:	add    eax,0x5a827999
  404da5:	add    DWORD PTR [rbp-0x70],eax
  404da8:	ror    DWORD PTR [rbp-0x68],0x2
  404dac:	mov    eax,DWORD PTR [rbp-0x68]
  404daf:	xor    eax,DWORD PTR [rbp-0x64]
  404db2:	and    eax,DWORD PTR [rbp-0x6c]
  404db5:	xor    eax,DWORD PTR [rbp-0x64]
  404db8:	mov    ebx,eax
  404dba:	mov    eax,DWORD PTR [rbp-0x50]
  404dbd:	mov    edi,eax
  404dbf:	call   402330 <htonl@plt>
  404dc4:	mov    DWORD PTR [rbp-0x50],eax
  404dc7:	mov    eax,DWORD PTR [rbp-0x50]
  404dca:	lea    edx,[rbx+rax*1]
  404dcd:	mov    eax,DWORD PTR [rbp-0x70]
  404dd0:	rorx   eax,eax,0x1b
  404dd6:	add    eax,edx
  404dd8:	add    eax,0x5a827999
  404ddd:	add    DWORD PTR [rbp-0x74],eax
  404de0:	ror    DWORD PTR [rbp-0x6c],0x2
  404de4:	mov    eax,DWORD PTR [rbp-0x6c]
  404de7:	xor    eax,DWORD PTR [rbp-0x68]
  404dea:	and    eax,DWORD PTR [rbp-0x70]
  404ded:	xor    eax,DWORD PTR [rbp-0x68]
  404df0:	mov    ebx,eax
  404df2:	mov    eax,DWORD PTR [rbp-0x4c]
  404df5:	mov    edi,eax
  404df7:	call   402330 <htonl@plt>
  404dfc:	mov    DWORD PTR [rbp-0x4c],eax
  404dff:	mov    eax,DWORD PTR [rbp-0x4c]
  404e02:	lea    edx,[rbx+rax*1]
  404e05:	mov    eax,DWORD PTR [rbp-0x74]
  404e08:	rorx   eax,eax,0x1b
  404e0e:	add    eax,edx
  404e10:	add    eax,0x5a827999
  404e15:	add    DWORD PTR [rbp-0x64],eax
  404e18:	ror    DWORD PTR [rbp-0x70],0x2
  404e1c:	mov    eax,DWORD PTR [rbp-0x70]
  404e1f:	xor    eax,DWORD PTR [rbp-0x6c]
  404e22:	and    eax,DWORD PTR [rbp-0x74]
  404e25:	xor    eax,DWORD PTR [rbp-0x6c]
  404e28:	mov    ebx,eax
  404e2a:	mov    eax,DWORD PTR [rbp-0x48]
  404e2d:	mov    edi,eax
  404e2f:	call   402330 <htonl@plt>
  404e34:	mov    DWORD PTR [rbp-0x48],eax
  404e37:	mov    eax,DWORD PTR [rbp-0x48]
  404e3a:	lea    edx,[rbx+rax*1]
  404e3d:	mov    eax,DWORD PTR [rbp-0x64]
  404e40:	rorx   eax,eax,0x1b
  404e46:	add    eax,edx
  404e48:	add    eax,0x5a827999
  404e4d:	add    DWORD PTR [rbp-0x68],eax
  404e50:	ror    DWORD PTR [rbp-0x74],0x2
  404e54:	mov    eax,DWORD PTR [rbp-0x74]
  404e57:	xor    eax,DWORD PTR [rbp-0x70]
  404e5a:	and    eax,DWORD PTR [rbp-0x64]
  404e5d:	xor    eax,DWORD PTR [rbp-0x70]
  404e60:	mov    ebx,eax
  404e62:	mov    eax,DWORD PTR [rbp-0x44]
  404e65:	mov    edi,eax
  404e67:	call   402330 <htonl@plt>
  404e6c:	mov    DWORD PTR [rbp-0x44],eax
  404e6f:	mov    eax,DWORD PTR [rbp-0x44]
  404e72:	lea    edx,[rbx+rax*1]
  404e75:	mov    eax,DWORD PTR [rbp-0x68]
  404e78:	rorx   eax,eax,0x1b
  404e7e:	add    eax,edx
  404e80:	add    eax,0x5a827999
  404e85:	add    DWORD PTR [rbp-0x6c],eax
  404e88:	ror    DWORD PTR [rbp-0x64],0x2
  404e8c:	mov    eax,DWORD PTR [rbp-0x64]
  404e8f:	xor    eax,DWORD PTR [rbp-0x74]
  404e92:	and    eax,DWORD PTR [rbp-0x68]
  404e95:	xor    eax,DWORD PTR [rbp-0x74]
  404e98:	mov    ebx,eax
  404e9a:	mov    eax,DWORD PTR [rbp-0x40]
  404e9d:	mov    edi,eax
  404e9f:	call   402330 <htonl@plt>
  404ea4:	mov    DWORD PTR [rbp-0x40],eax
  404ea7:	mov    eax,DWORD PTR [rbp-0x40]
  404eaa:	lea    edx,[rbx+rax*1]
  404ead:	mov    eax,DWORD PTR [rbp-0x6c]
  404eb0:	rorx   eax,eax,0x1b
  404eb6:	add    eax,edx
  404eb8:	add    eax,0x5a827999
  404ebd:	add    DWORD PTR [rbp-0x70],eax
  404ec0:	ror    DWORD PTR [rbp-0x68],0x2
  404ec4:	mov    eax,DWORD PTR [rbp-0x68]
  404ec7:	xor    eax,DWORD PTR [rbp-0x64]
  404eca:	and    eax,DWORD PTR [rbp-0x6c]
  404ecd:	xor    eax,DWORD PTR [rbp-0x64]
  404ed0:	mov    ebx,eax
  404ed2:	mov    eax,DWORD PTR [rbp-0x3c]
  404ed5:	mov    edi,eax
  404ed7:	call   402330 <htonl@plt>
  404edc:	mov    DWORD PTR [rbp-0x3c],eax
  404edf:	mov    eax,DWORD PTR [rbp-0x3c]
  404ee2:	lea    edx,[rbx+rax*1]
  404ee5:	mov    eax,DWORD PTR [rbp-0x70]
  404ee8:	rorx   eax,eax,0x1b
  404eee:	add    eax,edx
  404ef0:	add    eax,0x5a827999
  404ef5:	add    DWORD PTR [rbp-0x74],eax
  404ef8:	ror    DWORD PTR [rbp-0x6c],0x2
  404efc:	mov    eax,DWORD PTR [rbp-0x6c]
  404eff:	xor    eax,DWORD PTR [rbp-0x68]
  404f02:	and    eax,DWORD PTR [rbp-0x70]
  404f05:	xor    eax,DWORD PTR [rbp-0x68]
  404f08:	mov    ebx,eax
  404f0a:	mov    eax,DWORD PTR [rbp-0x38]
  404f0d:	mov    edi,eax
  404f0f:	call   402330 <htonl@plt>
  404f14:	mov    DWORD PTR [rbp-0x38],eax
  404f17:	mov    eax,DWORD PTR [rbp-0x38]
  404f1a:	lea    edx,[rbx+rax*1]
  404f1d:	mov    eax,DWORD PTR [rbp-0x74]
  404f20:	rorx   eax,eax,0x1b
  404f26:	add    eax,edx
  404f28:	add    eax,0x5a827999
  404f2d:	add    DWORD PTR [rbp-0x64],eax
  404f30:	ror    DWORD PTR [rbp-0x70],0x2
  404f34:	mov    eax,DWORD PTR [rbp-0x70]
  404f37:	xor    eax,DWORD PTR [rbp-0x6c]
  404f3a:	and    eax,DWORD PTR [rbp-0x74]
  404f3d:	xor    eax,DWORD PTR [rbp-0x6c]
  404f40:	mov    ebx,eax
  404f42:	mov    eax,DWORD PTR [rbp-0x34]
  404f45:	mov    edi,eax
  404f47:	call   402330 <htonl@plt>
  404f4c:	mov    DWORD PTR [rbp-0x34],eax
  404f4f:	mov    eax,DWORD PTR [rbp-0x34]
  404f52:	lea    edx,[rbx+rax*1]
  404f55:	mov    eax,DWORD PTR [rbp-0x64]
  404f58:	rorx   eax,eax,0x1b
  404f5e:	add    eax,edx
  404f60:	add    eax,0x5a827999
  404f65:	add    DWORD PTR [rbp-0x68],eax
  404f68:	ror    DWORD PTR [rbp-0x74],0x2
  404f6c:	mov    eax,DWORD PTR [rbp-0x74]
  404f6f:	xor    eax,DWORD PTR [rbp-0x70]
  404f72:	and    eax,DWORD PTR [rbp-0x64]
  404f75:	xor    eax,DWORD PTR [rbp-0x70]
  404f78:	mov    ebx,eax
  404f7a:	mov    eax,DWORD PTR [rbp-0x30]
  404f7d:	mov    edi,eax
  404f7f:	call   402330 <htonl@plt>
  404f84:	mov    DWORD PTR [rbp-0x30],eax
  404f87:	mov    eax,DWORD PTR [rbp-0x30]
  404f8a:	lea    edx,[rbx+rax*1]
  404f8d:	mov    eax,DWORD PTR [rbp-0x68]
  404f90:	rorx   eax,eax,0x1b
  404f96:	add    eax,edx
  404f98:	add    eax,0x5a827999
  404f9d:	add    DWORD PTR [rbp-0x6c],eax
  404fa0:	ror    DWORD PTR [rbp-0x64],0x2
  404fa4:	mov    eax,DWORD PTR [rbp-0x64]
  404fa7:	xor    eax,DWORD PTR [rbp-0x74]
  404faa:	and    eax,DWORD PTR [rbp-0x68]
  404fad:	xor    eax,DWORD PTR [rbp-0x74]
  404fb0:	mov    ebx,eax
  404fb2:	mov    eax,DWORD PTR [rbp-0x2c]
  404fb5:	mov    edi,eax
  404fb7:	call   402330 <htonl@plt>
  404fbc:	mov    DWORD PTR [rbp-0x2c],eax
  404fbf:	mov    eax,DWORD PTR [rbp-0x2c]
  404fc2:	lea    edx,[rbx+rax*1]
  404fc5:	mov    eax,DWORD PTR [rbp-0x6c]
  404fc8:	rorx   eax,eax,0x1b
  404fce:	add    eax,edx
  404fd0:	add    eax,0x5a827999
  404fd5:	add    DWORD PTR [rbp-0x70],eax
  404fd8:	ror    DWORD PTR [rbp-0x68],0x2
  404fdc:	mov    eax,DWORD PTR [rbp-0x68]
  404fdf:	xor    eax,DWORD PTR [rbp-0x64]
  404fe2:	and    eax,DWORD PTR [rbp-0x6c]
  404fe5:	xor    eax,DWORD PTR [rbp-0x64]
  404fe8:	mov    ebx,eax
  404fea:	mov    eax,DWORD PTR [rbp-0x28]
  404fed:	mov    edi,eax
  404fef:	call   402330 <htonl@plt>
  404ff4:	mov    DWORD PTR [rbp-0x28],eax
  404ff7:	mov    eax,DWORD PTR [rbp-0x28]
  404ffa:	lea    edx,[rbx+rax*1]
  404ffd:	mov    eax,DWORD PTR [rbp-0x70]
  405000:	rorx   eax,eax,0x1b
  405006:	add    eax,edx
  405008:	add    eax,0x5a827999
  40500d:	add    DWORD PTR [rbp-0x74],eax
  405010:	ror    DWORD PTR [rbp-0x6c],0x2
  405014:	mov    eax,DWORD PTR [rbp-0x6c]
  405017:	xor    eax,DWORD PTR [rbp-0x68]
  40501a:	and    eax,DWORD PTR [rbp-0x70]
  40501d:	xor    eax,DWORD PTR [rbp-0x68]
  405020:	mov    ebx,eax
  405022:	mov    eax,DWORD PTR [rbp-0x24]
  405025:	mov    edi,eax
  405027:	call   402330 <htonl@plt>
  40502c:	mov    DWORD PTR [rbp-0x24],eax
  40502f:	mov    eax,DWORD PTR [rbp-0x24]
  405032:	lea    edx,[rbx+rax*1]
  405035:	mov    eax,DWORD PTR [rbp-0x74]
  405038:	rorx   eax,eax,0x1b
  40503e:	add    eax,edx
  405040:	add    eax,0x5a827999
  405045:	add    DWORD PTR [rbp-0x64],eax
  405048:	ror    DWORD PTR [rbp-0x70],0x2
  40504c:	mov    eax,DWORD PTR [rbp-0x70]
  40504f:	xor    eax,DWORD PTR [rbp-0x6c]
  405052:	and    eax,DWORD PTR [rbp-0x74]
  405055:	xor    eax,DWORD PTR [rbp-0x6c]
  405058:	mov    edx,eax
  40505a:	mov    ecx,DWORD PTR [rbp-0x2c]
  40505d:	mov    eax,DWORD PTR [rbp-0x40]
  405060:	xor    ecx,eax
  405062:	mov    eax,DWORD PTR [rbp-0x58]
  405065:	xor    ecx,eax
  405067:	mov    eax,DWORD PTR [rbp-0x60]
  40506a:	xor    eax,ecx
  40506c:	rorx   eax,eax,0x1f
  405072:	mov    DWORD PTR [rbp-0x60],eax
  405075:	mov    eax,DWORD PTR [rbp-0x60]
  405078:	add    edx,eax
  40507a:	mov    eax,DWORD PTR [rbp-0x64]
  40507d:	rorx   eax,eax,0x1b
  405083:	add    eax,edx
  405085:	add    eax,0x5a827999
  40508a:	add    DWORD PTR [rbp-0x68],eax
  40508d:	ror    DWORD PTR [rbp-0x74],0x2
  405091:	mov    eax,DWORD PTR [rbp-0x74]
  405094:	xor    eax,DWORD PTR [rbp-0x70]
  405097:	and    eax,DWORD PTR [rbp-0x64]
  40509a:	xor    eax,DWORD PTR [rbp-0x70]
  40509d:	mov    edx,eax
  40509f:	mov    ecx,DWORD PTR [rbp-0x28]
  4050a2:	mov    eax,DWORD PTR [rbp-0x3c]
  4050a5:	xor    ecx,eax
  4050a7:	mov    eax,DWORD PTR [rbp-0x54]
  4050aa:	xor    ecx,eax
  4050ac:	mov    eax,DWORD PTR [rbp-0x5c]
  4050af:	xor    eax,ecx
  4050b1:	rorx   eax,eax,0x1f
  4050b7:	mov    DWORD PTR [rbp-0x5c],eax
  4050ba:	mov    eax,DWORD PTR [rbp-0x5c]
  4050bd:	add    edx,eax
  4050bf:	mov    eax,DWORD PTR [rbp-0x68]
  4050c2:	rorx   eax,eax,0x1b
  4050c8:	add    eax,edx
  4050ca:	add    eax,0x5a827999
  4050cf:	add    DWORD PTR [rbp-0x6c],eax
  4050d2:	ror    DWORD PTR [rbp-0x64],0x2
  4050d6:	mov    eax,DWORD PTR [rbp-0x64]
  4050d9:	xor    eax,DWORD PTR [rbp-0x74]
  4050dc:	and    eax,DWORD PTR [rbp-0x68]
  4050df:	xor    eax,DWORD PTR [rbp-0x74]
  4050e2:	mov    edx,eax
  4050e4:	mov    ecx,DWORD PTR [rbp-0x24]
  4050e7:	mov    eax,DWORD PTR [rbp-0x38]
  4050ea:	xor    ecx,eax
  4050ec:	mov    eax,DWORD PTR [rbp-0x50]
  4050ef:	xor    ecx,eax
  4050f1:	mov    eax,DWORD PTR [rbp-0x58]
  4050f4:	xor    eax,ecx
  4050f6:	rorx   eax,eax,0x1f
  4050fc:	mov    DWORD PTR [rbp-0x58],eax
  4050ff:	mov    eax,DWORD PTR [rbp-0x58]
  405102:	add    edx,eax
  405104:	mov    eax,DWORD PTR [rbp-0x6c]
  405107:	rorx   eax,eax,0x1b
  40510d:	add    eax,edx
  40510f:	add    eax,0x5a827999
  405114:	add    DWORD PTR [rbp-0x70],eax
  405117:	ror    DWORD PTR [rbp-0x68],0x2
  40511b:	mov    eax,DWORD PTR [rbp-0x68]
  40511e:	xor    eax,DWORD PTR [rbp-0x64]
  405121:	and    eax,DWORD PTR [rbp-0x6c]
  405124:	xor    eax,DWORD PTR [rbp-0x64]
  405127:	mov    edx,eax
  405129:	mov    ecx,DWORD PTR [rbp-0x60]
  40512c:	mov    eax,DWORD PTR [rbp-0x34]
  40512f:	xor    ecx,eax
  405131:	mov    eax,DWORD PTR [rbp-0x4c]
  405134:	xor    ecx,eax
  405136:	mov    eax,DWORD PTR [rbp-0x54]
  405139:	xor    eax,ecx
  40513b:	rorx   eax,eax,0x1f
  405141:	mov    DWORD PTR [rbp-0x54],eax
  405144:	mov    eax,DWORD PTR [rbp-0x54]
  405147:	add    edx,eax
  405149:	mov    eax,DWORD PTR [rbp-0x70]
  40514c:	rorx   eax,eax,0x1b
  405152:	add    eax,edx
  405154:	add    eax,0x5a827999
  405159:	add    DWORD PTR [rbp-0x74],eax
  40515c:	ror    DWORD PTR [rbp-0x6c],0x2
  405160:	mov    eax,DWORD PTR [rbp-0x70]
  405163:	xor    eax,DWORD PTR [rbp-0x6c]
  405166:	xor    eax,DWORD PTR [rbp-0x68]
  405169:	mov    edx,eax
  40516b:	mov    ecx,DWORD PTR [rbp-0x5c]
  40516e:	mov    eax,DWORD PTR [rbp-0x30]
  405171:	xor    ecx,eax
  405173:	mov    eax,DWORD PTR [rbp-0x48]
  405176:	xor    ecx,eax
  405178:	mov    eax,DWORD PTR [rbp-0x50]
  40517b:	xor    eax,ecx
  40517d:	rorx   eax,eax,0x1f
  405183:	mov    DWORD PTR [rbp-0x50],eax
  405186:	mov    eax,DWORD PTR [rbp-0x50]
  405189:	add    edx,eax
  40518b:	mov    eax,DWORD PTR [rbp-0x74]
  40518e:	rorx   eax,eax,0x1b
  405194:	add    eax,edx
  405196:	add    eax,0x6ed9eba1
  40519b:	add    DWORD PTR [rbp-0x64],eax
  40519e:	ror    DWORD PTR [rbp-0x70],0x2
  4051a2:	mov    eax,DWORD PTR [rbp-0x74]
  4051a5:	xor    eax,DWORD PTR [rbp-0x70]
  4051a8:	xor    eax,DWORD PTR [rbp-0x6c]
  4051ab:	mov    edx,eax
  4051ad:	mov    ecx,DWORD PTR [rbp-0x58]
  4051b0:	mov    eax,DWORD PTR [rbp-0x2c]
  4051b3:	xor    ecx,eax
  4051b5:	mov    eax,DWORD PTR [rbp-0x44]
  4051b8:	xor    ecx,eax
  4051ba:	mov    eax,DWORD PTR [rbp-0x4c]
  4051bd:	xor    eax,ecx
  4051bf:	rorx   eax,eax,0x1f
  4051c5:	mov    DWORD PTR [rbp-0x4c],eax
  4051c8:	mov    eax,DWORD PTR [rbp-0x4c]
  4051cb:	add    edx,eax
  4051cd:	mov    eax,DWORD PTR [rbp-0x64]
  4051d0:	rorx   eax,eax,0x1b
  4051d6:	add    eax,edx
  4051d8:	add    eax,0x6ed9eba1
  4051dd:	add    DWORD PTR [rbp-0x68],eax
  4051e0:	ror    DWORD PTR [rbp-0x74],0x2
  4051e4:	mov    eax,DWORD PTR [rbp-0x64]
  4051e7:	xor    eax,DWORD PTR [rbp-0x74]
  4051ea:	xor    eax,DWORD PTR [rbp-0x70]
  4051ed:	mov    edx,eax
  4051ef:	mov    ecx,DWORD PTR [rbp-0x54]
  4051f2:	mov    eax,DWORD PTR [rbp-0x28]
  4051f5:	xor    ecx,eax
  4051f7:	mov    eax,DWORD PTR [rbp-0x40]
  4051fa:	xor    ecx,eax
  4051fc:	mov    eax,DWORD PTR [rbp-0x48]
  4051ff:	xor    eax,ecx
  405201:	rorx   eax,eax,0x1f
  405207:	mov    DWORD PTR [rbp-0x48],eax
  40520a:	mov    eax,DWORD PTR [rbp-0x48]
  40520d:	add    edx,eax
  40520f:	mov    eax,DWORD PTR [rbp-0x68]
  405212:	rorx   eax,eax,0x1b
  405218:	add    eax,edx
  40521a:	add    eax,0x6ed9eba1
  40521f:	add    DWORD PTR [rbp-0x6c],eax
  405222:	ror    DWORD PTR [rbp-0x64],0x2
  405226:	mov    eax,DWORD PTR [rbp-0x68]
  405229:	xor    eax,DWORD PTR [rbp-0x64]
  40522c:	xor    eax,DWORD PTR [rbp-0x74]
  40522f:	mov    edx,eax
  405231:	mov    ecx,DWORD PTR [rbp-0x50]
  405234:	mov    eax,DWORD PTR [rbp-0x24]
  405237:	xor    ecx,eax
  405239:	mov    eax,DWORD PTR [rbp-0x3c]
  40523c:	xor    ecx,eax
  40523e:	mov    eax,DWORD PTR [rbp-0x44]
  405241:	xor    eax,ecx
  405243:	rorx   eax,eax,0x1f
  405249:	mov    DWORD PTR [rbp-0x44],eax
  40524c:	mov    eax,DWORD PTR [rbp-0x44]
  40524f:	add    edx,eax
  405251:	mov    eax,DWORD PTR [rbp-0x6c]
  405254:	rorx   eax,eax,0x1b
  40525a:	add    eax,edx
  40525c:	add    eax,0x6ed9eba1
  405261:	add    DWORD PTR [rbp-0x70],eax
  405264:	ror    DWORD PTR [rbp-0x68],0x2
  405268:	mov    eax,DWORD PTR [rbp-0x6c]
  40526b:	xor    eax,DWORD PTR [rbp-0x68]
  40526e:	xor    eax,DWORD PTR [rbp-0x64]
  405271:	mov    edx,eax
  405273:	mov    ecx,DWORD PTR [rbp-0x4c]
  405276:	mov    eax,DWORD PTR [rbp-0x60]
  405279:	xor    ecx,eax
  40527b:	mov    eax,DWORD PTR [rbp-0x38]
  40527e:	xor    ecx,eax
  405280:	mov    eax,DWORD PTR [rbp-0x40]
  405283:	xor    eax,ecx
  405285:	rorx   eax,eax,0x1f
  40528b:	mov    DWORD PTR [rbp-0x40],eax
  40528e:	mov    eax,DWORD PTR [rbp-0x40]
  405291:	add    edx,eax
  405293:	mov    eax,DWORD PTR [rbp-0x70]
  405296:	rorx   eax,eax,0x1b
  40529c:	add    eax,edx
  40529e:	add    eax,0x6ed9eba1
  4052a3:	add    DWORD PTR [rbp-0x74],eax
  4052a6:	ror    DWORD PTR [rbp-0x6c],0x2
  4052aa:	mov    eax,DWORD PTR [rbp-0x70]
  4052ad:	xor    eax,DWORD PTR [rbp-0x6c]
  4052b0:	xor    eax,DWORD PTR [rbp-0x68]
  4052b3:	mov    edx,eax
  4052b5:	mov    ecx,DWORD PTR [rbp-0x48]
  4052b8:	mov    eax,DWORD PTR [rbp-0x5c]
  4052bb:	xor    ecx,eax
  4052bd:	mov    eax,DWORD PTR [rbp-0x34]
  4052c0:	xor    ecx,eax
  4052c2:	mov    eax,DWORD PTR [rbp-0x3c]
  4052c5:	xor    eax,ecx
  4052c7:	rorx   eax,eax,0x1f
  4052cd:	mov    DWORD PTR [rbp-0x3c],eax
  4052d0:	mov    eax,DWORD PTR [rbp-0x3c]
  4052d3:	add    edx,eax
  4052d5:	mov    eax,DWORD PTR [rbp-0x74]
  4052d8:	rorx   eax,eax,0x1b
  4052de:	add    eax,edx
  4052e0:	add    eax,0x6ed9eba1
  4052e5:	add    DWORD PTR [rbp-0x64],eax
  4052e8:	ror    DWORD PTR [rbp-0x70],0x2
  4052ec:	mov    eax,DWORD PTR [rbp-0x74]
  4052ef:	xor    eax,DWORD PTR [rbp-0x70]
  4052f2:	xor    eax,DWORD PTR [rbp-0x6c]
  4052f5:	mov    edx,eax
  4052f7:	mov    ecx,DWORD PTR [rbp-0x44]
  4052fa:	mov    eax,DWORD PTR [rbp-0x58]
  4052fd:	xor    ecx,eax
  4052ff:	mov    eax,DWORD PTR [rbp-0x30]
  405302:	xor    ecx,eax
  405304:	mov    eax,DWORD PTR [rbp-0x38]
  405307:	xor    eax,ecx
  405309:	rorx   eax,eax,0x1f
  40530f:	mov    DWORD PTR [rbp-0x38],eax
  405312:	mov    eax,DWORD PTR [rbp-0x38]
  405315:	add    edx,eax
  405317:	mov    eax,DWORD PTR [rbp-0x64]
  40531a:	rorx   eax,eax,0x1b
  405320:	add    eax,edx
  405322:	add    eax,0x6ed9eba1
  405327:	add    DWORD PTR [rbp-0x68],eax
  40532a:	ror    DWORD PTR [rbp-0x74],0x2
  40532e:	mov    eax,DWORD PTR [rbp-0x64]
  405331:	xor    eax,DWORD PTR [rbp-0x74]
  405334:	xor    eax,DWORD PTR [rbp-0x70]
  405337:	mov    edx,eax
  405339:	mov    ecx,DWORD PTR [rbp-0x40]
  40533c:	mov    eax,DWORD PTR [rbp-0x54]
  40533f:	xor    ecx,eax
  405341:	mov    eax,DWORD PTR [rbp-0x2c]
  405344:	xor    ecx,eax
  405346:	mov    eax,DWORD PTR [rbp-0x34]
  405349:	xor    eax,ecx
  40534b:	rorx   eax,eax,0x1f
  405351:	mov    DWORD PTR [rbp-0x34],eax
  405354:	mov    eax,DWORD PTR [rbp-0x34]
  405357:	add    edx,eax
  405359:	mov    eax,DWORD PTR [rbp-0x68]
  40535c:	rorx   eax,eax,0x1b
  405362:	add    eax,edx
  405364:	add    eax,0x6ed9eba1
  405369:	add    DWORD PTR [rbp-0x6c],eax
  40536c:	ror    DWORD PTR [rbp-0x64],0x2
  405370:	mov    eax,DWORD PTR [rbp-0x68]
  405373:	xor    eax,DWORD PTR [rbp-0x64]
  405376:	xor    eax,DWORD PTR [rbp-0x74]
  405379:	mov    edx,eax
  40537b:	mov    ecx,DWORD PTR [rbp-0x3c]
  40537e:	mov    eax,DWORD PTR [rbp-0x50]
  405381:	xor    ecx,eax
  405383:	mov    eax,DWORD PTR [rbp-0x28]
  405386:	xor    ecx,eax
  405388:	mov    eax,DWORD PTR [rbp-0x30]
  40538b:	xor    eax,ecx
  40538d:	rorx   eax,eax,0x1f
  405393:	mov    DWORD PTR [rbp-0x30],eax
  405396:	mov    eax,DWORD PTR [rbp-0x30]
  405399:	add    edx,eax
  40539b:	mov    eax,DWORD PTR [rbp-0x6c]
  40539e:	rorx   eax,eax,0x1b
  4053a4:	add    eax,edx
  4053a6:	add    eax,0x6ed9eba1
  4053ab:	add    DWORD PTR [rbp-0x70],eax
  4053ae:	ror    DWORD PTR [rbp-0x68],0x2
  4053b2:	mov    eax,DWORD PTR [rbp-0x6c]
  4053b5:	xor    eax,DWORD PTR [rbp-0x68]
  4053b8:	xor    eax,DWORD PTR [rbp-0x64]
  4053bb:	mov    edx,eax
  4053bd:	mov    ecx,DWORD PTR [rbp-0x38]
  4053c0:	mov    eax,DWORD PTR [rbp-0x4c]
  4053c3:	xor    ecx,eax
  4053c5:	mov    eax,DWORD PTR [rbp-0x24]
  4053c8:	xor    ecx,eax
  4053ca:	mov    eax,DWORD PTR [rbp-0x2c]
  4053cd:	xor    eax,ecx
  4053cf:	rorx   eax,eax,0x1f
  4053d5:	mov    DWORD PTR [rbp-0x2c],eax
  4053d8:	mov    eax,DWORD PTR [rbp-0x2c]
  4053db:	add    edx,eax
  4053dd:	mov    eax,DWORD PTR [rbp-0x70]
  4053e0:	rorx   eax,eax,0x1b
  4053e6:	add    eax,edx
  4053e8:	add    eax,0x6ed9eba1
  4053ed:	add    DWORD PTR [rbp-0x74],eax
  4053f0:	ror    DWORD PTR [rbp-0x6c],0x2
  4053f4:	mov    eax,DWORD PTR [rbp-0x70]
  4053f7:	xor    eax,DWORD PTR [rbp-0x6c]
  4053fa:	xor    eax,DWORD PTR [rbp-0x68]
  4053fd:	mov    edx,eax
  4053ff:	mov    ecx,DWORD PTR [rbp-0x34]
  405402:	mov    eax,DWORD PTR [rbp-0x48]
  405405:	xor    ecx,eax
  405407:	mov    eax,DWORD PTR [rbp-0x60]
  40540a:	xor    ecx,eax
  40540c:	mov    eax,DWORD PTR [rbp-0x28]
  40540f:	xor    eax,ecx
  405411:	rorx   eax,eax,0x1f
  405417:	mov    DWORD PTR [rbp-0x28],eax
  40541a:	mov    eax,DWORD PTR [rbp-0x28]
  40541d:	add    edx,eax
  40541f:	mov    eax,DWORD PTR [rbp-0x74]
  405422:	rorx   eax,eax,0x1b
  405428:	add    eax,edx
  40542a:	add    eax,0x6ed9eba1
  40542f:	add    DWORD PTR [rbp-0x64],eax
  405432:	ror    DWORD PTR [rbp-0x70],0x2
  405436:	mov    eax,DWORD PTR [rbp-0x74]
  405439:	xor    eax,DWORD PTR [rbp-0x70]
  40543c:	xor    eax,DWORD PTR [rbp-0x6c]
  40543f:	mov    edx,eax
  405441:	mov    ecx,DWORD PTR [rbp-0x30]
  405444:	mov    eax,DWORD PTR [rbp-0x44]
  405447:	xor    ecx,eax
  405449:	mov    eax,DWORD PTR [rbp-0x5c]
  40544c:	xor    ecx,eax
  40544e:	mov    eax,DWORD PTR [rbp-0x24]
  405451:	xor    eax,ecx
  405453:	rorx   eax,eax,0x1f
  405459:	mov    DWORD PTR [rbp-0x24],eax
  40545c:	mov    eax,DWORD PTR [rbp-0x24]
  40545f:	add    edx,eax
  405461:	mov    eax,DWORD PTR [rbp-0x64]
  405464:	rorx   eax,eax,0x1b
  40546a:	add    eax,edx
  40546c:	add    eax,0x6ed9eba1
  405471:	add    DWORD PTR [rbp-0x68],eax
  405474:	ror    DWORD PTR [rbp-0x74],0x2
  405478:	mov    eax,DWORD PTR [rbp-0x64]
  40547b:	xor    eax,DWORD PTR [rbp-0x74]
  40547e:	xor    eax,DWORD PTR [rbp-0x70]
  405481:	mov    edx,eax
  405483:	mov    ecx,DWORD PTR [rbp-0x2c]
  405486:	mov    eax,DWORD PTR [rbp-0x40]
  405489:	xor    ecx,eax
  40548b:	mov    eax,DWORD PTR [rbp-0x58]
  40548e:	xor    ecx,eax
  405490:	mov    eax,DWORD PTR [rbp-0x60]
  405493:	xor    eax,ecx
  405495:	rorx   eax,eax,0x1f
  40549b:	mov    DWORD PTR [rbp-0x60],eax
  40549e:	mov    eax,DWORD PTR [rbp-0x60]
  4054a1:	add    edx,eax
  4054a3:	mov    eax,DWORD PTR [rbp-0x68]
  4054a6:	rorx   eax,eax,0x1b
  4054ac:	add    eax,edx
  4054ae:	add    eax,0x6ed9eba1
  4054b3:	add    DWORD PTR [rbp-0x6c],eax
  4054b6:	ror    DWORD PTR [rbp-0x64],0x2
  4054ba:	mov    eax,DWORD PTR [rbp-0x68]
  4054bd:	xor    eax,DWORD PTR [rbp-0x64]
  4054c0:	xor    eax,DWORD PTR [rbp-0x74]
  4054c3:	mov    edx,eax
  4054c5:	mov    ecx,DWORD PTR [rbp-0x28]
  4054c8:	mov    eax,DWORD PTR [rbp-0x3c]
  4054cb:	xor    ecx,eax
  4054cd:	mov    eax,DWORD PTR [rbp-0x54]
  4054d0:	xor    ecx,eax
  4054d2:	mov    eax,DWORD PTR [rbp-0x5c]
  4054d5:	xor    eax,ecx
  4054d7:	rorx   eax,eax,0x1f
  4054dd:	mov    DWORD PTR [rbp-0x5c],eax
  4054e0:	mov    eax,DWORD PTR [rbp-0x5c]
  4054e3:	add    edx,eax
  4054e5:	mov    eax,DWORD PTR [rbp-0x6c]
  4054e8:	rorx   eax,eax,0x1b
  4054ee:	add    eax,edx
  4054f0:	add    eax,0x6ed9eba1
  4054f5:	add    DWORD PTR [rbp-0x70],eax
  4054f8:	ror    DWORD PTR [rbp-0x68],0x2
  4054fc:	mov    eax,DWORD PTR [rbp-0x6c]
  4054ff:	xor    eax,DWORD PTR [rbp-0x68]
  405502:	xor    eax,DWORD PTR [rbp-0x64]
  405505:	mov    edx,eax
  405507:	mov    ecx,DWORD PTR [rbp-0x24]
  40550a:	mov    eax,DWORD PTR [rbp-0x38]
  40550d:	xor    ecx,eax
  40550f:	mov    eax,DWORD PTR [rbp-0x50]
  405512:	xor    ecx,eax
  405514:	mov    eax,DWORD PTR [rbp-0x58]
  405517:	xor    eax,ecx
  405519:	rorx   eax,eax,0x1f
  40551f:	mov    DWORD PTR [rbp-0x58],eax
  405522:	mov    eax,DWORD PTR [rbp-0x58]
  405525:	add    edx,eax
  405527:	mov    eax,DWORD PTR [rbp-0x70]
  40552a:	rorx   eax,eax,0x1b
  405530:	add    eax,edx
  405532:	add    eax,0x6ed9eba1
  405537:	add    DWORD PTR [rbp-0x74],eax
  40553a:	ror    DWORD PTR [rbp-0x6c],0x2
  40553e:	mov    eax,DWORD PTR [rbp-0x70]
  405541:	xor    eax,DWORD PTR [rbp-0x6c]
  405544:	xor    eax,DWORD PTR [rbp-0x68]
  405547:	mov    edx,eax
  405549:	mov    ecx,DWORD PTR [rbp-0x60]
  40554c:	mov    eax,DWORD PTR [rbp-0x34]
  40554f:	xor    ecx,eax
  405551:	mov    eax,DWORD PTR [rbp-0x4c]
  405554:	xor    ecx,eax
  405556:	mov    eax,DWORD PTR [rbp-0x54]
  405559:	xor    eax,ecx
  40555b:	rorx   eax,eax,0x1f
  405561:	mov    DWORD PTR [rbp-0x54],eax
  405564:	mov    eax,DWORD PTR [rbp-0x54]
  405567:	add    edx,eax
  405569:	mov    eax,DWORD PTR [rbp-0x74]
  40556c:	rorx   eax,eax,0x1b
  405572:	add    eax,edx
  405574:	add    eax,0x6ed9eba1
  405579:	add    DWORD PTR [rbp-0x64],eax
  40557c:	ror    DWORD PTR [rbp-0x70],0x2
  405580:	mov    eax,DWORD PTR [rbp-0x74]
  405583:	xor    eax,DWORD PTR [rbp-0x70]
  405586:	xor    eax,DWORD PTR [rbp-0x6c]
  405589:	mov    edx,eax
  40558b:	mov    ecx,DWORD PTR [rbp-0x5c]
  40558e:	mov    eax,DWORD PTR [rbp-0x30]
  405591:	xor    ecx,eax
  405593:	mov    eax,DWORD PTR [rbp-0x48]
  405596:	xor    ecx,eax
  405598:	mov    eax,DWORD PTR [rbp-0x50]
  40559b:	xor    eax,ecx
  40559d:	rorx   eax,eax,0x1f
  4055a3:	mov    DWORD PTR [rbp-0x50],eax
  4055a6:	mov    eax,DWORD PTR [rbp-0x50]
  4055a9:	add    edx,eax
  4055ab:	mov    eax,DWORD PTR [rbp-0x64]
  4055ae:	rorx   eax,eax,0x1b
  4055b4:	add    eax,edx
  4055b6:	add    eax,0x6ed9eba1
  4055bb:	add    DWORD PTR [rbp-0x68],eax
  4055be:	ror    DWORD PTR [rbp-0x74],0x2
  4055c2:	mov    eax,DWORD PTR [rbp-0x64]
  4055c5:	xor    eax,DWORD PTR [rbp-0x74]
  4055c8:	xor    eax,DWORD PTR [rbp-0x70]
  4055cb:	mov    edx,eax
  4055cd:	mov    ecx,DWORD PTR [rbp-0x58]
  4055d0:	mov    eax,DWORD PTR [rbp-0x2c]
  4055d3:	xor    ecx,eax
  4055d5:	mov    eax,DWORD PTR [rbp-0x44]
  4055d8:	xor    ecx,eax
  4055da:	mov    eax,DWORD PTR [rbp-0x4c]
  4055dd:	xor    eax,ecx
  4055df:	rorx   eax,eax,0x1f
  4055e5:	mov    DWORD PTR [rbp-0x4c],eax
  4055e8:	mov    eax,DWORD PTR [rbp-0x4c]
  4055eb:	add    edx,eax
  4055ed:	mov    eax,DWORD PTR [rbp-0x68]
  4055f0:	rorx   eax,eax,0x1b
  4055f6:	add    eax,edx
  4055f8:	add    eax,0x6ed9eba1
  4055fd:	add    DWORD PTR [rbp-0x6c],eax
  405600:	ror    DWORD PTR [rbp-0x64],0x2
  405604:	mov    eax,DWORD PTR [rbp-0x68]
  405607:	xor    eax,DWORD PTR [rbp-0x64]
  40560a:	xor    eax,DWORD PTR [rbp-0x74]
  40560d:	mov    edx,eax
  40560f:	mov    ecx,DWORD PTR [rbp-0x54]
  405612:	mov    eax,DWORD PTR [rbp-0x28]
  405615:	xor    ecx,eax
  405617:	mov    eax,DWORD PTR [rbp-0x40]
  40561a:	xor    ecx,eax
  40561c:	mov    eax,DWORD PTR [rbp-0x48]
  40561f:	xor    eax,ecx
  405621:	rorx   eax,eax,0x1f
  405627:	mov    DWORD PTR [rbp-0x48],eax
  40562a:	mov    eax,DWORD PTR [rbp-0x48]
  40562d:	add    edx,eax
  40562f:	mov    eax,DWORD PTR [rbp-0x6c]
  405632:	rorx   eax,eax,0x1b
  405638:	add    eax,edx
  40563a:	add    eax,0x6ed9eba1
  40563f:	add    DWORD PTR [rbp-0x70],eax
  405642:	ror    DWORD PTR [rbp-0x68],0x2
  405646:	mov    eax,DWORD PTR [rbp-0x6c]
  405649:	xor    eax,DWORD PTR [rbp-0x68]
  40564c:	xor    eax,DWORD PTR [rbp-0x64]
  40564f:	mov    edx,eax
  405651:	mov    ecx,DWORD PTR [rbp-0x50]
  405654:	mov    eax,DWORD PTR [rbp-0x24]
  405657:	xor    ecx,eax
  405659:	mov    eax,DWORD PTR [rbp-0x3c]
  40565c:	xor    ecx,eax
  40565e:	mov    eax,DWORD PTR [rbp-0x44]
  405661:	xor    eax,ecx
  405663:	rorx   eax,eax,0x1f
  405669:	mov    DWORD PTR [rbp-0x44],eax
  40566c:	mov    eax,DWORD PTR [rbp-0x44]
  40566f:	add    edx,eax
  405671:	mov    eax,DWORD PTR [rbp-0x70]
  405674:	rorx   eax,eax,0x1b
  40567a:	add    eax,edx
  40567c:	add    eax,0x6ed9eba1
  405681:	add    DWORD PTR [rbp-0x74],eax
  405684:	ror    DWORD PTR [rbp-0x6c],0x2
  405688:	mov    eax,DWORD PTR [rbp-0x70]
  40568b:	or     eax,DWORD PTR [rbp-0x6c]
  40568e:	and    eax,DWORD PTR [rbp-0x68]
  405691:	mov    edx,eax
  405693:	mov    eax,DWORD PTR [rbp-0x70]
  405696:	and    eax,DWORD PTR [rbp-0x6c]
  405699:	mov    ecx,edx
  40569b:	or     ecx,eax
  40569d:	mov    edx,DWORD PTR [rbp-0x4c]
  4056a0:	mov    eax,DWORD PTR [rbp-0x60]
  4056a3:	xor    edx,eax
  4056a5:	mov    eax,DWORD PTR [rbp-0x38]
  4056a8:	xor    edx,eax
  4056aa:	mov    eax,DWORD PTR [rbp-0x40]
  4056ad:	xor    eax,edx
  4056af:	rorx   eax,eax,0x1f
  4056b5:	mov    DWORD PTR [rbp-0x40],eax
  4056b8:	mov    eax,DWORD PTR [rbp-0x40]
  4056bb:	lea    edx,[rcx+rax*1]
  4056be:	mov    eax,DWORD PTR [rbp-0x74]
  4056c1:	rorx   eax,eax,0x1b
  4056c7:	add    eax,edx
  4056c9:	sub    eax,0x70e44324
  4056ce:	add    DWORD PTR [rbp-0x64],eax
  4056d1:	ror    DWORD PTR [rbp-0x70],0x2
  4056d5:	mov    eax,DWORD PTR [rbp-0x74]
  4056d8:	or     eax,DWORD PTR [rbp-0x70]
  4056db:	and    eax,DWORD PTR [rbp-0x6c]
  4056de:	mov    edx,eax
  4056e0:	mov    eax,DWORD PTR [rbp-0x74]
  4056e3:	and    eax,DWORD PTR [rbp-0x70]
  4056e6:	mov    ecx,edx
  4056e8:	or     ecx,eax
  4056ea:	mov    edx,DWORD PTR [rbp-0x48]
  4056ed:	mov    eax,DWORD PTR [rbp-0x5c]
  4056f0:	xor    edx,eax
  4056f2:	mov    eax,DWORD PTR [rbp-0x34]
  4056f5:	xor    edx,eax
  4056f7:	mov    eax,DWORD PTR [rbp-0x3c]
  4056fa:	xor    eax,edx
  4056fc:	rorx   eax,eax,0x1f
  405702:	mov    DWORD PTR [rbp-0x3c],eax
  405705:	mov    eax,DWORD PTR [rbp-0x3c]
  405708:	lea    edx,[rcx+rax*1]
  40570b:	mov    eax,DWORD PTR [rbp-0x64]
  40570e:	rorx   eax,eax,0x1b
  405714:	add    eax,edx
  405716:	sub    eax,0x70e44324
  40571b:	add    DWORD PTR [rbp-0x68],eax
  40571e:	ror    DWORD PTR [rbp-0x74],0x2
  405722:	mov    eax,DWORD PTR [rbp-0x64]
  405725:	or     eax,DWORD PTR [rbp-0x74]
  405728:	and    eax,DWORD PTR [rbp-0x70]
  40572b:	mov    edx,eax
  40572d:	mov    eax,DWORD PTR [rbp-0x64]
  405730:	and    eax,DWORD PTR [rbp-0x74]
  405733:	mov    ecx,edx
  405735:	or     ecx,eax
  405737:	mov    edx,DWORD PTR [rbp-0x44]
  40573a:	mov    eax,DWORD PTR [rbp-0x58]
  40573d:	xor    edx,eax
  40573f:	mov    eax,DWORD PTR [rbp-0x30]
  405742:	xor    edx,eax
  405744:	mov    eax,DWORD PTR [rbp-0x38]
  405747:	xor    eax,edx
  405749:	rorx   eax,eax,0x1f
  40574f:	mov    DWORD PTR [rbp-0x38],eax
  405752:	mov    eax,DWORD PTR [rbp-0x38]
  405755:	lea    edx,[rcx+rax*1]
  405758:	mov    eax,DWORD PTR [rbp-0x68]
  40575b:	rorx   eax,eax,0x1b
  405761:	add    eax,edx
  405763:	sub    eax,0x70e44324
  405768:	add    DWORD PTR [rbp-0x6c],eax
  40576b:	ror    DWORD PTR [rbp-0x64],0x2
  40576f:	mov    eax,DWORD PTR [rbp-0x68]
  405772:	or     eax,DWORD PTR [rbp-0x64]
  405775:	and    eax,DWORD PTR [rbp-0x74]
  405778:	mov    edx,eax
  40577a:	mov    eax,DWORD PTR [rbp-0x68]
  40577d:	and    eax,DWORD PTR [rbp-0x64]
  405780:	mov    ecx,edx
  405782:	or     ecx,eax
  405784:	mov    edx,DWORD PTR [rbp-0x40]
  405787:	mov    eax,DWORD PTR [rbp-0x54]
  40578a:	xor    edx,eax
  40578c:	mov    eax,DWORD PTR [rbp-0x2c]
  40578f:	xor    edx,eax
  405791:	mov    eax,DWORD PTR [rbp-0x34]
  405794:	xor    eax,edx
  405796:	rorx   eax,eax,0x1f
  40579c:	mov    DWORD PTR [rbp-0x34],eax
  40579f:	mov    eax,DWORD PTR [rbp-0x34]
  4057a2:	lea    edx,[rcx+rax*1]
  4057a5:	mov    eax,DWORD PTR [rbp-0x6c]
  4057a8:	rorx   eax,eax,0x1b
  4057ae:	add    eax,edx
  4057b0:	sub    eax,0x70e44324
  4057b5:	add    DWORD PTR [rbp-0x70],eax
  4057b8:	ror    DWORD PTR [rbp-0x68],0x2
  4057bc:	mov    eax,DWORD PTR [rbp-0x6c]
  4057bf:	or     eax,DWORD PTR [rbp-0x68]
  4057c2:	and    eax,DWORD PTR [rbp-0x64]
  4057c5:	mov    edx,eax
  4057c7:	mov    eax,DWORD PTR [rbp-0x6c]
  4057ca:	and    eax,DWORD PTR [rbp-0x68]
  4057cd:	mov    ecx,edx
  4057cf:	or     ecx,eax
  4057d1:	mov    edx,DWORD PTR [rbp-0x3c]
  4057d4:	mov    eax,DWORD PTR [rbp-0x50]
  4057d7:	xor    edx,eax
  4057d9:	mov    eax,DWORD PTR [rbp-0x28]
  4057dc:	xor    edx,eax
  4057de:	mov    eax,DWORD PTR [rbp-0x30]
  4057e1:	xor    eax,edx
  4057e3:	rorx   eax,eax,0x1f
  4057e9:	mov    DWORD PTR [rbp-0x30],eax
  4057ec:	mov    eax,DWORD PTR [rbp-0x30]
  4057ef:	lea    edx,[rcx+rax*1]
  4057f2:	mov    eax,DWORD PTR [rbp-0x70]
  4057f5:	rorx   eax,eax,0x1b
  4057fb:	add    eax,edx
  4057fd:	sub    eax,0x70e44324
  405802:	add    DWORD PTR [rbp-0x74],eax
  405805:	ror    DWORD PTR [rbp-0x6c],0x2
  405809:	mov    eax,DWORD PTR [rbp-0x70]
  40580c:	or     eax,DWORD PTR [rbp-0x6c]
  40580f:	and    eax,DWORD PTR [rbp-0x68]
  405812:	mov    edx,eax
  405814:	mov    eax,DWORD PTR [rbp-0x70]
  405817:	and    eax,DWORD PTR [rbp-0x6c]
  40581a:	mov    ecx,edx
  40581c:	or     ecx,eax
  40581e:	mov    edx,DWORD PTR [rbp-0x38]
  405821:	mov    eax,DWORD PTR [rbp-0x4c]
  405824:	xor    edx,eax
  405826:	mov    eax,DWORD PTR [rbp-0x24]
  405829:	xor    edx,eax
  40582b:	mov    eax,DWORD PTR [rbp-0x2c]
  40582e:	xor    eax,edx
  405830:	rorx   eax,eax,0x1f
  405836:	mov    DWORD PTR [rbp-0x2c],eax
  405839:	mov    eax,DWORD PTR [rbp-0x2c]
  40583c:	lea    edx,[rcx+rax*1]
  40583f:	mov    eax,DWORD PTR [rbp-0x74]
  405842:	rorx   eax,eax,0x1b
  405848:	add    eax,edx
  40584a:	sub    eax,0x70e44324
  40584f:	add    DWORD PTR [rbp-0x64],eax
  405852:	ror    DWORD PTR [rbp-0x70],0x2
  405856:	mov    eax,DWORD PTR [rbp-0x74]
  405859:	or     eax,DWORD PTR [rbp-0x70]
  40585c:	and    eax,DWORD PTR [rbp-0x6c]
  40585f:	mov    edx,eax
  405861:	mov    eax,DWORD PTR [rbp-0x74]
  405864:	and    eax,DWORD PTR [rbp-0x70]
  405867:	mov    ecx,edx
  405869:	or     ecx,eax
  40586b:	mov    edx,DWORD PTR [rbp-0x34]
  40586e:	mov    eax,DWORD PTR [rbp-0x48]
  405871:	xor    edx,eax
  405873:	mov    eax,DWORD PTR [rbp-0x60]
  405876:	xor    edx,eax
  405878:	mov    eax,DWORD PTR [rbp-0x28]
  40587b:	xor    eax,edx
  40587d:	rorx   eax,eax,0x1f
  405883:	mov    DWORD PTR [rbp-0x28],eax
  405886:	mov    eax,DWORD PTR [rbp-0x28]
  405889:	lea    edx,[rcx+rax*1]
  40588c:	mov    eax,DWORD PTR [rbp-0x64]
  40588f:	rorx   eax,eax,0x1b
  405895:	add    eax,edx
  405897:	sub    eax,0x70e44324
  40589c:	add    DWORD PTR [rbp-0x68],eax
  40589f:	ror    DWORD PTR [rbp-0x74],0x2
  4058a3:	mov    eax,DWORD PTR [rbp-0x64]
  4058a6:	or     eax,DWORD PTR [rbp-0x74]
  4058a9:	and    eax,DWORD PTR [rbp-0x70]
  4058ac:	mov    edx,eax
  4058ae:	mov    eax,DWORD PTR [rbp-0x64]
  4058b1:	and    eax,DWORD PTR [rbp-0x74]
  4058b4:	mov    ecx,edx
  4058b6:	or     ecx,eax
  4058b8:	mov    edx,DWORD PTR [rbp-0x30]
  4058bb:	mov    eax,DWORD PTR [rbp-0x44]
  4058be:	xor    edx,eax
  4058c0:	mov    eax,DWORD PTR [rbp-0x5c]
  4058c3:	xor    edx,eax
  4058c5:	mov    eax,DWORD PTR [rbp-0x24]
  4058c8:	xor    eax,edx
  4058ca:	rorx   eax,eax,0x1f
  4058d0:	mov    DWORD PTR [rbp-0x24],eax
  4058d3:	mov    eax,DWORD PTR [rbp-0x24]
  4058d6:	lea    edx,[rcx+rax*1]
  4058d9:	mov    eax,DWORD PTR [rbp-0x68]
  4058dc:	rorx   eax,eax,0x1b
  4058e2:	add    eax,edx
  4058e4:	sub    eax,0x70e44324
  4058e9:	add    DWORD PTR [rbp-0x6c],eax
  4058ec:	ror    DWORD PTR [rbp-0x64],0x2
  4058f0:	mov    eax,DWORD PTR [rbp-0x68]
  4058f3:	or     eax,DWORD PTR [rbp-0x64]
  4058f6:	and    eax,DWORD PTR [rbp-0x74]
  4058f9:	mov    edx,eax
  4058fb:	mov    eax,DWORD PTR [rbp-0x68]
  4058fe:	and    eax,DWORD PTR [rbp-0x64]
  405901:	mov    ecx,edx
  405903:	or     ecx,eax
  405905:	mov    edx,DWORD PTR [rbp-0x2c]
  405908:	mov    eax,DWORD PTR [rbp-0x40]
  40590b:	xor    edx,eax
  40590d:	mov    eax,DWORD PTR [rbp-0x58]
  405910:	xor    edx,eax
  405912:	mov    eax,DWORD PTR [rbp-0x60]
  405915:	xor    eax,edx
  405917:	rorx   eax,eax,0x1f
  40591d:	mov    DWORD PTR [rbp-0x60],eax
  405920:	mov    eax,DWORD PTR [rbp-0x60]
  405923:	lea    edx,[rcx+rax*1]
  405926:	mov    eax,DWORD PTR [rbp-0x6c]
  405929:	rorx   eax,eax,0x1b
  40592f:	add    eax,edx
  405931:	sub    eax,0x70e44324
  405936:	add    DWORD PTR [rbp-0x70],eax
  405939:	ror    DWORD PTR [rbp-0x68],0x2
  40593d:	mov    eax,DWORD PTR [rbp-0x6c]
  405940:	or     eax,DWORD PTR [rbp-0x68]
  405943:	and    eax,DWORD PTR [rbp-0x64]
  405946:	mov    edx,eax
  405948:	mov    eax,DWORD PTR [rbp-0x6c]
  40594b:	and    eax,DWORD PTR [rbp-0x68]
  40594e:	mov    ecx,edx
  405950:	or     ecx,eax
  405952:	mov    edx,DWORD PTR [rbp-0x28]
  405955:	mov    eax,DWORD PTR [rbp-0x3c]
  405958:	xor    edx,eax
  40595a:	mov    eax,DWORD PTR [rbp-0x54]
  40595d:	xor    edx,eax
  40595f:	mov    eax,DWORD PTR [rbp-0x5c]
  405962:	xor    eax,edx
  405964:	rorx   eax,eax,0x1f
  40596a:	mov    DWORD PTR [rbp-0x5c],eax
  40596d:	mov    eax,DWORD PTR [rbp-0x5c]
  405970:	lea    edx,[rcx+rax*1]
  405973:	mov    eax,DWORD PTR [rbp-0x70]
  405976:	rorx   eax,eax,0x1b
  40597c:	add    eax,edx
  40597e:	sub    eax,0x70e44324
  405983:	add    DWORD PTR [rbp-0x74],eax
  405986:	ror    DWORD PTR [rbp-0x6c],0x2
  40598a:	mov    eax,DWORD PTR [rbp-0x70]
  40598d:	or     eax,DWORD PTR [rbp-0x6c]
  405990:	and    eax,DWORD PTR [rbp-0x68]
  405993:	mov    edx,eax
  405995:	mov    eax,DWORD PTR [rbp-0x70]
  405998:	and    eax,DWORD PTR [rbp-0x6c]
  40599b:	mov    ecx,edx
  40599d:	or     ecx,eax
  40599f:	mov    edx,DWORD PTR [rbp-0x24]
  4059a2:	mov    eax,DWORD PTR [rbp-0x38]
  4059a5:	xor    edx,eax
  4059a7:	mov    eax,DWORD PTR [rbp-0x50]
  4059aa:	xor    edx,eax
  4059ac:	mov    eax,DWORD PTR [rbp-0x58]
  4059af:	xor    eax,edx
  4059b1:	rorx   eax,eax,0x1f
  4059b7:	mov    DWORD PTR [rbp-0x58],eax
  4059ba:	mov    eax,DWORD PTR [rbp-0x58]
  4059bd:	lea    edx,[rcx+rax*1]
  4059c0:	mov    eax,DWORD PTR [rbp-0x74]
  4059c3:	rorx   eax,eax,0x1b
  4059c9:	add    eax,edx
  4059cb:	sub    eax,0x70e44324
  4059d0:	add    DWORD PTR [rbp-0x64],eax
  4059d3:	ror    DWORD PTR [rbp-0x70],0x2
  4059d7:	mov    eax,DWORD PTR [rbp-0x74]
  4059da:	or     eax,DWORD PTR [rbp-0x70]
  4059dd:	and    eax,DWORD PTR [rbp-0x6c]
  4059e0:	mov    edx,eax
  4059e2:	mov    eax,DWORD PTR [rbp-0x74]
  4059e5:	and    eax,DWORD PTR [rbp-0x70]
  4059e8:	mov    ecx,edx
  4059ea:	or     ecx,eax
  4059ec:	mov    edx,DWORD PTR [rbp-0x60]
  4059ef:	mov    eax,DWORD PTR [rbp-0x34]
  4059f2:	xor    edx,eax
  4059f4:	mov    eax,DWORD PTR [rbp-0x4c]
  4059f7:	xor    edx,eax
  4059f9:	mov    eax,DWORD PTR [rbp-0x54]
  4059fc:	xor    eax,edx
  4059fe:	rorx   eax,eax,0x1f
  405a04:	mov    DWORD PTR [rbp-0x54],eax
  405a07:	mov    eax,DWORD PTR [rbp-0x54]
  405a0a:	lea    edx,[rcx+rax*1]
  405a0d:	mov    eax,DWORD PTR [rbp-0x64]
  405a10:	rorx   eax,eax,0x1b
  405a16:	add    eax,edx
  405a18:	sub    eax,0x70e44324
  405a1d:	add    DWORD PTR [rbp-0x68],eax
  405a20:	ror    DWORD PTR [rbp-0x74],0x2
  405a24:	mov    eax,DWORD PTR [rbp-0x64]
  405a27:	or     eax,DWORD PTR [rbp-0x74]
  405a2a:	and    eax,DWORD PTR [rbp-0x70]
  405a2d:	mov    edx,eax
  405a2f:	mov    eax,DWORD PTR [rbp-0x64]
  405a32:	and    eax,DWORD PTR [rbp-0x74]
  405a35:	mov    ecx,edx
  405a37:	or     ecx,eax
  405a39:	mov    edx,DWORD PTR [rbp-0x5c]
  405a3c:	mov    eax,DWORD PTR [rbp-0x30]
  405a3f:	xor    edx,eax
  405a41:	mov    eax,DWORD PTR [rbp-0x48]
  405a44:	xor    edx,eax
  405a46:	mov    eax,DWORD PTR [rbp-0x50]
  405a49:	xor    eax,edx
  405a4b:	rorx   eax,eax,0x1f
  405a51:	mov    DWORD PTR [rbp-0x50],eax
  405a54:	mov    eax,DWORD PTR [rbp-0x50]
  405a57:	lea    edx,[rcx+rax*1]
  405a5a:	mov    eax,DWORD PTR [rbp-0x68]
  405a5d:	rorx   eax,eax,0x1b
  405a63:	add    eax,edx
  405a65:	sub    eax,0x70e44324
  405a6a:	add    DWORD PTR [rbp-0x6c],eax
  405a6d:	ror    DWORD PTR [rbp-0x64],0x2
  405a71:	mov    eax,DWORD PTR [rbp-0x68]
  405a74:	or     eax,DWORD PTR [rbp-0x64]
  405a77:	and    eax,DWORD PTR [rbp-0x74]
  405a7a:	mov    edx,eax
  405a7c:	mov    eax,DWORD PTR [rbp-0x68]
  405a7f:	and    eax,DWORD PTR [rbp-0x64]
  405a82:	mov    ecx,edx
  405a84:	or     ecx,eax
  405a86:	mov    edx,DWORD PTR [rbp-0x58]
  405a89:	mov    eax,DWORD PTR [rbp-0x2c]
  405a8c:	xor    edx,eax
  405a8e:	mov    eax,DWORD PTR [rbp-0x44]
  405a91:	xor    edx,eax
  405a93:	mov    eax,DWORD PTR [rbp-0x4c]
  405a96:	xor    eax,edx
  405a98:	rorx   eax,eax,0x1f
  405a9e:	mov    DWORD PTR [rbp-0x4c],eax
  405aa1:	mov    eax,DWORD PTR [rbp-0x4c]
  405aa4:	lea    edx,[rcx+rax*1]
  405aa7:	mov    eax,DWORD PTR [rbp-0x6c]
  405aaa:	rorx   eax,eax,0x1b
  405ab0:	add    eax,edx
  405ab2:	sub    eax,0x70e44324
  405ab7:	add    DWORD PTR [rbp-0x70],eax
  405aba:	ror    DWORD PTR [rbp-0x68],0x2
  405abe:	mov    eax,DWORD PTR [rbp-0x6c]
  405ac1:	or     eax,DWORD PTR [rbp-0x68]
  405ac4:	and    eax,DWORD PTR [rbp-0x64]
  405ac7:	mov    edx,eax
  405ac9:	mov    eax,DWORD PTR [rbp-0x6c]
  405acc:	and    eax,DWORD PTR [rbp-0x68]
  405acf:	mov    ecx,edx
  405ad1:	or     ecx,eax
  405ad3:	mov    edx,DWORD PTR [rbp-0x54]
  405ad6:	mov    eax,DWORD PTR [rbp-0x28]
  405ad9:	xor    edx,eax
  405adb:	mov    eax,DWORD PTR [rbp-0x40]
  405ade:	xor    edx,eax
  405ae0:	mov    eax,DWORD PTR [rbp-0x48]
  405ae3:	xor    eax,edx
  405ae5:	rorx   eax,eax,0x1f
  405aeb:	mov    DWORD PTR [rbp-0x48],eax
  405aee:	mov    eax,DWORD PTR [rbp-0x48]
  405af1:	lea    edx,[rcx+rax*1]
  405af4:	mov    eax,DWORD PTR [rbp-0x70]
  405af7:	rorx   eax,eax,0x1b
  405afd:	add    eax,edx
  405aff:	sub    eax,0x70e44324
  405b04:	add    DWORD PTR [rbp-0x74],eax
  405b07:	ror    DWORD PTR [rbp-0x6c],0x2
  405b0b:	mov    eax,DWORD PTR [rbp-0x70]
  405b0e:	or     eax,DWORD PTR [rbp-0x6c]
  405b11:	and    eax,DWORD PTR [rbp-0x68]
  405b14:	mov    edx,eax
  405b16:	mov    eax,DWORD PTR [rbp-0x70]
  405b19:	and    eax,DWORD PTR [rbp-0x6c]
  405b1c:	mov    ecx,edx
  405b1e:	or     ecx,eax
  405b20:	mov    edx,DWORD PTR [rbp-0x50]
  405b23:	mov    eax,DWORD PTR [rbp-0x24]
  405b26:	xor    edx,eax
  405b28:	mov    eax,DWORD PTR [rbp-0x3c]
  405b2b:	xor    edx,eax
  405b2d:	mov    eax,DWORD PTR [rbp-0x44]
  405b30:	xor    eax,edx
  405b32:	rorx   eax,eax,0x1f
  405b38:	mov    DWORD PTR [rbp-0x44],eax
  405b3b:	mov    eax,DWORD PTR [rbp-0x44]
  405b3e:	lea    edx,[rcx+rax*1]
  405b41:	mov    eax,DWORD PTR [rbp-0x74]
  405b44:	rorx   eax,eax,0x1b
  405b4a:	add    eax,edx
  405b4c:	sub    eax,0x70e44324
  405b51:	add    DWORD PTR [rbp-0x64],eax
  405b54:	ror    DWORD PTR [rbp-0x70],0x2
  405b58:	mov    eax,DWORD PTR [rbp-0x74]
  405b5b:	or     eax,DWORD PTR [rbp-0x70]
  405b5e:	and    eax,DWORD PTR [rbp-0x6c]
  405b61:	mov    edx,eax
  405b63:	mov    eax,DWORD PTR [rbp-0x74]
  405b66:	and    eax,DWORD PTR [rbp-0x70]
  405b69:	mov    ecx,edx
  405b6b:	or     ecx,eax
  405b6d:	mov    edx,DWORD PTR [rbp-0x4c]
  405b70:	mov    eax,DWORD PTR [rbp-0x60]
  405b73:	xor    edx,eax
  405b75:	mov    eax,DWORD PTR [rbp-0x38]
  405b78:	xor    edx,eax
  405b7a:	mov    eax,DWORD PTR [rbp-0x40]
  405b7d:	xor    eax,edx
  405b7f:	rorx   eax,eax,0x1f
  405b85:	mov    DWORD PTR [rbp-0x40],eax
  405b88:	mov    eax,DWORD PTR [rbp-0x40]
  405b8b:	lea    edx,[rcx+rax*1]
  405b8e:	mov    eax,DWORD PTR [rbp-0x64]
  405b91:	rorx   eax,eax,0x1b
  405b97:	add    eax,edx
  405b99:	sub    eax,0x70e44324
  405b9e:	add    DWORD PTR [rbp-0x68],eax
  405ba1:	ror    DWORD PTR [rbp-0x74],0x2
  405ba5:	mov    eax,DWORD PTR [rbp-0x64]
  405ba8:	or     eax,DWORD PTR [rbp-0x74]
  405bab:	and    eax,DWORD PTR [rbp-0x70]
  405bae:	mov    edx,eax
  405bb0:	mov    eax,DWORD PTR [rbp-0x64]
  405bb3:	and    eax,DWORD PTR [rbp-0x74]
  405bb6:	mov    ecx,edx
  405bb8:	or     ecx,eax
  405bba:	mov    edx,DWORD PTR [rbp-0x48]
  405bbd:	mov    eax,DWORD PTR [rbp-0x5c]
  405bc0:	xor    edx,eax
  405bc2:	mov    eax,DWORD PTR [rbp-0x34]
  405bc5:	xor    edx,eax
  405bc7:	mov    eax,DWORD PTR [rbp-0x3c]
  405bca:	xor    eax,edx
  405bcc:	rorx   eax,eax,0x1f
  405bd2:	mov    DWORD PTR [rbp-0x3c],eax
  405bd5:	mov    eax,DWORD PTR [rbp-0x3c]
  405bd8:	lea    edx,[rcx+rax*1]
  405bdb:	mov    eax,DWORD PTR [rbp-0x68]
  405bde:	rorx   eax,eax,0x1b
  405be4:	add    eax,edx
  405be6:	sub    eax,0x70e44324
  405beb:	add    DWORD PTR [rbp-0x6c],eax
  405bee:	ror    DWORD PTR [rbp-0x64],0x2
  405bf2:	mov    eax,DWORD PTR [rbp-0x68]
  405bf5:	or     eax,DWORD PTR [rbp-0x64]
  405bf8:	and    eax,DWORD PTR [rbp-0x74]
  405bfb:	mov    edx,eax
  405bfd:	mov    eax,DWORD PTR [rbp-0x68]
  405c00:	and    eax,DWORD PTR [rbp-0x64]
  405c03:	mov    ecx,edx
  405c05:	or     ecx,eax
  405c07:	mov    edx,DWORD PTR [rbp-0x44]
  405c0a:	mov    eax,DWORD PTR [rbp-0x58]
  405c0d:	xor    edx,eax
  405c0f:	mov    eax,DWORD PTR [rbp-0x30]
  405c12:	xor    edx,eax
  405c14:	mov    eax,DWORD PTR [rbp-0x38]
  405c17:	xor    eax,edx
  405c19:	rorx   eax,eax,0x1f
  405c1f:	mov    DWORD PTR [rbp-0x38],eax
  405c22:	mov    eax,DWORD PTR [rbp-0x38]
  405c25:	lea    edx,[rcx+rax*1]
  405c28:	mov    eax,DWORD PTR [rbp-0x6c]
  405c2b:	rorx   eax,eax,0x1b
  405c31:	add    eax,edx
  405c33:	sub    eax,0x70e44324
  405c38:	add    DWORD PTR [rbp-0x70],eax
  405c3b:	ror    DWORD PTR [rbp-0x68],0x2
  405c3f:	mov    eax,DWORD PTR [rbp-0x6c]
  405c42:	or     eax,DWORD PTR [rbp-0x68]
  405c45:	and    eax,DWORD PTR [rbp-0x64]
  405c48:	mov    edx,eax
  405c4a:	mov    eax,DWORD PTR [rbp-0x6c]
  405c4d:	and    eax,DWORD PTR [rbp-0x68]
  405c50:	mov    ecx,edx
  405c52:	or     ecx,eax
  405c54:	mov    edx,DWORD PTR [rbp-0x40]
  405c57:	mov    eax,DWORD PTR [rbp-0x54]
  405c5a:	xor    edx,eax
  405c5c:	mov    eax,DWORD PTR [rbp-0x2c]
  405c5f:	xor    edx,eax
  405c61:	mov    eax,DWORD PTR [rbp-0x34]
  405c64:	xor    eax,edx
  405c66:	rorx   eax,eax,0x1f
  405c6c:	mov    DWORD PTR [rbp-0x34],eax
  405c6f:	mov    eax,DWORD PTR [rbp-0x34]
  405c72:	lea    edx,[rcx+rax*1]
  405c75:	mov    eax,DWORD PTR [rbp-0x70]
  405c78:	rorx   eax,eax,0x1b
  405c7e:	add    eax,edx
  405c80:	sub    eax,0x70e44324
  405c85:	add    DWORD PTR [rbp-0x74],eax
  405c88:	ror    DWORD PTR [rbp-0x6c],0x2
  405c8c:	mov    eax,DWORD PTR [rbp-0x70]
  405c8f:	xor    eax,DWORD PTR [rbp-0x6c]
  405c92:	xor    eax,DWORD PTR [rbp-0x68]
  405c95:	mov    edx,eax
  405c97:	mov    ecx,DWORD PTR [rbp-0x3c]
  405c9a:	mov    eax,DWORD PTR [rbp-0x50]
  405c9d:	xor    ecx,eax
  405c9f:	mov    eax,DWORD PTR [rbp-0x28]
  405ca2:	xor    ecx,eax
  405ca4:	mov    eax,DWORD PTR [rbp-0x30]
  405ca7:	xor    eax,ecx
  405ca9:	rorx   eax,eax,0x1f
  405caf:	mov    DWORD PTR [rbp-0x30],eax
  405cb2:	mov    eax,DWORD PTR [rbp-0x30]
  405cb5:	add    edx,eax
  405cb7:	mov    eax,DWORD PTR [rbp-0x74]
  405cba:	rorx   eax,eax,0x1b
  405cc0:	add    eax,edx
  405cc2:	sub    eax,0x359d3e2a
  405cc7:	add    DWORD PTR [rbp-0x64],eax
  405cca:	ror    DWORD PTR [rbp-0x70],0x2
  405cce:	mov    eax,DWORD PTR [rbp-0x74]
  405cd1:	xor    eax,DWORD PTR [rbp-0x70]
  405cd4:	xor    eax,DWORD PTR [rbp-0x6c]
  405cd7:	mov    edx,eax
  405cd9:	mov    ecx,DWORD PTR [rbp-0x38]
  405cdc:	mov    eax,DWORD PTR [rbp-0x4c]
  405cdf:	xor    ecx,eax
  405ce1:	mov    eax,DWORD PTR [rbp-0x24]
  405ce4:	xor    ecx,eax
  405ce6:	mov    eax,DWORD PTR [rbp-0x2c]
  405ce9:	xor    eax,ecx
  405ceb:	rorx   eax,eax,0x1f
  405cf1:	mov    DWORD PTR [rbp-0x2c],eax
  405cf4:	mov    eax,DWORD PTR [rbp-0x2c]
  405cf7:	add    edx,eax
  405cf9:	mov    eax,DWORD PTR [rbp-0x64]
  405cfc:	rorx   eax,eax,0x1b
  405d02:	add    eax,edx
  405d04:	sub    eax,0x359d3e2a
  405d09:	add    DWORD PTR [rbp-0x68],eax
  405d0c:	ror    DWORD PTR [rbp-0x74],0x2
  405d10:	mov    eax,DWORD PTR [rbp-0x64]
  405d13:	xor    eax,DWORD PTR [rbp-0x74]
  405d16:	xor    eax,DWORD PTR [rbp-0x70]
  405d19:	mov    edx,eax
  405d1b:	mov    ecx,DWORD PTR [rbp-0x34]
  405d1e:	mov    eax,DWORD PTR [rbp-0x48]
  405d21:	xor    ecx,eax
  405d23:	mov    eax,DWORD PTR [rbp-0x60]
  405d26:	xor    ecx,eax
  405d28:	mov    eax,DWORD PTR [rbp-0x28]
  405d2b:	xor    eax,ecx
  405d2d:	rorx   eax,eax,0x1f
  405d33:	mov    DWORD PTR [rbp-0x28],eax
  405d36:	mov    eax,DWORD PTR [rbp-0x28]
  405d39:	add    edx,eax
  405d3b:	mov    eax,DWORD PTR [rbp-0x68]
  405d3e:	rorx   eax,eax,0x1b
  405d44:	add    eax,edx
  405d46:	sub    eax,0x359d3e2a
  405d4b:	add    DWORD PTR [rbp-0x6c],eax
  405d4e:	ror    DWORD PTR [rbp-0x64],0x2
  405d52:	mov    eax,DWORD PTR [rbp-0x68]
  405d55:	xor    eax,DWORD PTR [rbp-0x64]
  405d58:	xor    eax,DWORD PTR [rbp-0x74]
  405d5b:	mov    edx,eax
  405d5d:	mov    ecx,DWORD PTR [rbp-0x30]
  405d60:	mov    eax,DWORD PTR [rbp-0x44]
  405d63:	xor    ecx,eax
  405d65:	mov    eax,DWORD PTR [rbp-0x5c]
  405d68:	xor    ecx,eax
  405d6a:	mov    eax,DWORD PTR [rbp-0x24]
  405d6d:	xor    eax,ecx
  405d6f:	rorx   eax,eax,0x1f
  405d75:	mov    DWORD PTR [rbp-0x24],eax
  405d78:	mov    eax,DWORD PTR [rbp-0x24]
  405d7b:	add    edx,eax
  405d7d:	mov    eax,DWORD PTR [rbp-0x6c]
  405d80:	rorx   eax,eax,0x1b
  405d86:	add    eax,edx
  405d88:	sub    eax,0x359d3e2a
  405d8d:	add    DWORD PTR [rbp-0x70],eax
  405d90:	ror    DWORD PTR [rbp-0x68],0x2
  405d94:	mov    eax,DWORD PTR [rbp-0x6c]
  405d97:	xor    eax,DWORD PTR [rbp-0x68]
  405d9a:	xor    eax,DWORD PTR [rbp-0x64]
  405d9d:	mov    edx,eax
  405d9f:	mov    ecx,DWORD PTR [rbp-0x2c]
  405da2:	mov    eax,DWORD PTR [rbp-0x40]
  405da5:	xor    ecx,eax
  405da7:	mov    eax,DWORD PTR [rbp-0x58]
  405daa:	xor    ecx,eax
  405dac:	mov    eax,DWORD PTR [rbp-0x60]
  405daf:	xor    eax,ecx
  405db1:	rorx   eax,eax,0x1f
  405db7:	mov    DWORD PTR [rbp-0x60],eax
  405dba:	mov    eax,DWORD PTR [rbp-0x60]
  405dbd:	add    edx,eax
  405dbf:	mov    eax,DWORD PTR [rbp-0x70]
  405dc2:	rorx   eax,eax,0x1b
  405dc8:	add    eax,edx
  405dca:	sub    eax,0x359d3e2a
  405dcf:	add    DWORD PTR [rbp-0x74],eax
  405dd2:	ror    DWORD PTR [rbp-0x6c],0x2
  405dd6:	mov    eax,DWORD PTR [rbp-0x70]
  405dd9:	xor    eax,DWORD PTR [rbp-0x6c]
  405ddc:	xor    eax,DWORD PTR [rbp-0x68]
  405ddf:	mov    edx,eax
  405de1:	mov    ecx,DWORD PTR [rbp-0x28]
  405de4:	mov    eax,DWORD PTR [rbp-0x3c]
  405de7:	xor    ecx,eax
  405de9:	mov    eax,DWORD PTR [rbp-0x54]
  405dec:	xor    ecx,eax
  405dee:	mov    eax,DWORD PTR [rbp-0x5c]
  405df1:	xor    eax,ecx
  405df3:	rorx   eax,eax,0x1f
  405df9:	mov    DWORD PTR [rbp-0x5c],eax
  405dfc:	mov    eax,DWORD PTR [rbp-0x5c]
  405dff:	add    edx,eax
  405e01:	mov    eax,DWORD PTR [rbp-0x74]
  405e04:	rorx   eax,eax,0x1b
  405e0a:	add    eax,edx
  405e0c:	sub    eax,0x359d3e2a
  405e11:	add    DWORD PTR [rbp-0x64],eax
  405e14:	ror    DWORD PTR [rbp-0x70],0x2
  405e18:	mov    eax,DWORD PTR [rbp-0x74]
  405e1b:	xor    eax,DWORD PTR [rbp-0x70]
  405e1e:	xor    eax,DWORD PTR [rbp-0x6c]
  405e21:	mov    edx,eax
  405e23:	mov    ecx,DWORD PTR [rbp-0x24]
  405e26:	mov    eax,DWORD PTR [rbp-0x38]
  405e29:	xor    ecx,eax
  405e2b:	mov    eax,DWORD PTR [rbp-0x50]
  405e2e:	xor    ecx,eax
  405e30:	mov    eax,DWORD PTR [rbp-0x58]
  405e33:	xor    eax,ecx
  405e35:	rorx   eax,eax,0x1f
  405e3b:	mov    DWORD PTR [rbp-0x58],eax
  405e3e:	mov    eax,DWORD PTR [rbp-0x58]
  405e41:	add    edx,eax
  405e43:	mov    eax,DWORD PTR [rbp-0x64]
  405e46:	rorx   eax,eax,0x1b
  405e4c:	add    eax,edx
  405e4e:	sub    eax,0x359d3e2a
  405e53:	add    DWORD PTR [rbp-0x68],eax
  405e56:	ror    DWORD PTR [rbp-0x74],0x2
  405e5a:	mov    eax,DWORD PTR [rbp-0x64]
  405e5d:	xor    eax,DWORD PTR [rbp-0x74]
  405e60:	xor    eax,DWORD PTR [rbp-0x70]
  405e63:	mov    edx,eax
  405e65:	mov    ecx,DWORD PTR [rbp-0x60]
  405e68:	mov    eax,DWORD PTR [rbp-0x34]
  405e6b:	xor    ecx,eax
  405e6d:	mov    eax,DWORD PTR [rbp-0x4c]
  405e70:	xor    ecx,eax
  405e72:	mov    eax,DWORD PTR [rbp-0x54]
  405e75:	xor    eax,ecx
  405e77:	rorx   eax,eax,0x1f
  405e7d:	mov    DWORD PTR [rbp-0x54],eax
  405e80:	mov    eax,DWORD PTR [rbp-0x54]
  405e83:	add    edx,eax
  405e85:	mov    eax,DWORD PTR [rbp-0x68]
  405e88:	rorx   eax,eax,0x1b
  405e8e:	add    eax,edx
  405e90:	sub    eax,0x359d3e2a
  405e95:	add    DWORD PTR [rbp-0x6c],eax
  405e98:	ror    DWORD PTR [rbp-0x64],0x2
  405e9c:	mov    eax,DWORD PTR [rbp-0x68]
  405e9f:	xor    eax,DWORD PTR [rbp-0x64]
  405ea2:	xor    eax,DWORD PTR [rbp-0x74]
  405ea5:	mov    edx,eax
  405ea7:	mov    ecx,DWORD PTR [rbp-0x5c]
  405eaa:	mov    eax,DWORD PTR [rbp-0x30]
  405ead:	xor    ecx,eax
  405eaf:	mov    eax,DWORD PTR [rbp-0x48]
  405eb2:	xor    ecx,eax
  405eb4:	mov    eax,DWORD PTR [rbp-0x50]
  405eb7:	xor    eax,ecx
  405eb9:	rorx   eax,eax,0x1f
  405ebf:	mov    DWORD PTR [rbp-0x50],eax
  405ec2:	mov    eax,DWORD PTR [rbp-0x50]
  405ec5:	add    edx,eax
  405ec7:	mov    eax,DWORD PTR [rbp-0x6c]
  405eca:	rorx   eax,eax,0x1b
  405ed0:	add    eax,edx
  405ed2:	sub    eax,0x359d3e2a
  405ed7:	add    DWORD PTR [rbp-0x70],eax
  405eda:	ror    DWORD PTR [rbp-0x68],0x2
  405ede:	mov    eax,DWORD PTR [rbp-0x6c]
  405ee1:	xor    eax,DWORD PTR [rbp-0x68]
  405ee4:	xor    eax,DWORD PTR [rbp-0x64]
  405ee7:	mov    edx,eax
  405ee9:	mov    ecx,DWORD PTR [rbp-0x58]
  405eec:	mov    eax,DWORD PTR [rbp-0x2c]
  405eef:	xor    ecx,eax
  405ef1:	mov    eax,DWORD PTR [rbp-0x44]
  405ef4:	xor    ecx,eax
  405ef6:	mov    eax,DWORD PTR [rbp-0x4c]
  405ef9:	xor    eax,ecx
  405efb:	rorx   eax,eax,0x1f
  405f01:	mov    DWORD PTR [rbp-0x4c],eax
  405f04:	mov    eax,DWORD PTR [rbp-0x4c]
  405f07:	add    edx,eax
  405f09:	mov    eax,DWORD PTR [rbp-0x70]
  405f0c:	rorx   eax,eax,0x1b
  405f12:	add    eax,edx
  405f14:	sub    eax,0x359d3e2a
  405f19:	add    DWORD PTR [rbp-0x74],eax
  405f1c:	ror    DWORD PTR [rbp-0x6c],0x2
  405f20:	mov    eax,DWORD PTR [rbp-0x70]
  405f23:	xor    eax,DWORD PTR [rbp-0x6c]
  405f26:	xor    eax,DWORD PTR [rbp-0x68]
  405f29:	mov    edx,eax
  405f2b:	mov    ecx,DWORD PTR [rbp-0x54]
  405f2e:	mov    eax,DWORD PTR [rbp-0x28]
  405f31:	xor    ecx,eax
  405f33:	mov    eax,DWORD PTR [rbp-0x40]
  405f36:	xor    ecx,eax
  405f38:	mov    eax,DWORD PTR [rbp-0x48]
  405f3b:	xor    eax,ecx
  405f3d:	rorx   eax,eax,0x1f
  405f43:	mov    DWORD PTR [rbp-0x48],eax
  405f46:	mov    eax,DWORD PTR [rbp-0x48]
  405f49:	add    edx,eax
  405f4b:	mov    eax,DWORD PTR [rbp-0x74]
  405f4e:	rorx   eax,eax,0x1b
  405f54:	add    eax,edx
  405f56:	sub    eax,0x359d3e2a
  405f5b:	add    DWORD PTR [rbp-0x64],eax
  405f5e:	ror    DWORD PTR [rbp-0x70],0x2
  405f62:	mov    eax,DWORD PTR [rbp-0x74]
  405f65:	xor    eax,DWORD PTR [rbp-0x70]
  405f68:	xor    eax,DWORD PTR [rbp-0x6c]
  405f6b:	mov    edx,eax
  405f6d:	mov    ecx,DWORD PTR [rbp-0x50]
  405f70:	mov    eax,DWORD PTR [rbp-0x24]
  405f73:	xor    ecx,eax
  405f75:	mov    eax,DWORD PTR [rbp-0x3c]
  405f78:	xor    ecx,eax
  405f7a:	mov    eax,DWORD PTR [rbp-0x44]
  405f7d:	xor    eax,ecx
  405f7f:	rorx   eax,eax,0x1f
  405f85:	mov    DWORD PTR [rbp-0x44],eax
  405f88:	mov    eax,DWORD PTR [rbp-0x44]
  405f8b:	add    edx,eax
  405f8d:	mov    eax,DWORD PTR [rbp-0x64]
  405f90:	rorx   eax,eax,0x1b
  405f96:	add    eax,edx
  405f98:	sub    eax,0x359d3e2a
  405f9d:	add    DWORD PTR [rbp-0x68],eax
  405fa0:	ror    DWORD PTR [rbp-0x74],0x2
  405fa4:	mov    eax,DWORD PTR [rbp-0x64]
  405fa7:	xor    eax,DWORD PTR [rbp-0x74]
  405faa:	xor    eax,DWORD PTR [rbp-0x70]
  405fad:	mov    edx,eax
  405faf:	mov    ecx,DWORD PTR [rbp-0x4c]
  405fb2:	mov    eax,DWORD PTR [rbp-0x60]
  405fb5:	xor    ecx,eax
  405fb7:	mov    eax,DWORD PTR [rbp-0x38]
  405fba:	xor    ecx,eax
  405fbc:	mov    eax,DWORD PTR [rbp-0x40]
  405fbf:	xor    eax,ecx
  405fc1:	rorx   eax,eax,0x1f
  405fc7:	mov    DWORD PTR [rbp-0x40],eax
  405fca:	mov    eax,DWORD PTR [rbp-0x40]
  405fcd:	add    edx,eax
  405fcf:	mov    eax,DWORD PTR [rbp-0x68]
  405fd2:	rorx   eax,eax,0x1b
  405fd8:	add    eax,edx
  405fda:	sub    eax,0x359d3e2a
  405fdf:	add    DWORD PTR [rbp-0x6c],eax
  405fe2:	ror    DWORD PTR [rbp-0x64],0x2
  405fe6:	mov    eax,DWORD PTR [rbp-0x68]
  405fe9:	xor    eax,DWORD PTR [rbp-0x64]
  405fec:	xor    eax,DWORD PTR [rbp-0x74]
  405fef:	mov    edx,eax
  405ff1:	mov    ecx,DWORD PTR [rbp-0x48]
  405ff4:	mov    eax,DWORD PTR [rbp-0x5c]
  405ff7:	xor    ecx,eax
  405ff9:	mov    eax,DWORD PTR [rbp-0x34]
  405ffc:	xor    ecx,eax
  405ffe:	mov    eax,DWORD PTR [rbp-0x3c]
  406001:	xor    eax,ecx
  406003:	rorx   eax,eax,0x1f
  406009:	mov    DWORD PTR [rbp-0x3c],eax
  40600c:	mov    eax,DWORD PTR [rbp-0x3c]
  40600f:	add    edx,eax
  406011:	mov    eax,DWORD PTR [rbp-0x6c]
  406014:	rorx   eax,eax,0x1b
  40601a:	add    eax,edx
  40601c:	sub    eax,0x359d3e2a
  406021:	add    DWORD PTR [rbp-0x70],eax
  406024:	ror    DWORD PTR [rbp-0x68],0x2
  406028:	mov    eax,DWORD PTR [rbp-0x6c]
  40602b:	xor    eax,DWORD PTR [rbp-0x68]
  40602e:	xor    eax,DWORD PTR [rbp-0x64]
  406031:	mov    edx,eax
  406033:	mov    ecx,DWORD PTR [rbp-0x44]
  406036:	mov    eax,DWORD PTR [rbp-0x58]
  406039:	xor    ecx,eax
  40603b:	mov    eax,DWORD PTR [rbp-0x30]
  40603e:	xor    ecx,eax
  406040:	mov    eax,DWORD PTR [rbp-0x38]
  406043:	xor    eax,ecx
  406045:	rorx   eax,eax,0x1f
  40604b:	mov    DWORD PTR [rbp-0x38],eax
  40604e:	mov    eax,DWORD PTR [rbp-0x38]
  406051:	add    edx,eax
  406053:	mov    eax,DWORD PTR [rbp-0x70]
  406056:	rorx   eax,eax,0x1b
  40605c:	add    eax,edx
  40605e:	sub    eax,0x359d3e2a
  406063:	add    DWORD PTR [rbp-0x74],eax
  406066:	ror    DWORD PTR [rbp-0x6c],0x2
  40606a:	mov    eax,DWORD PTR [rbp-0x70]
  40606d:	xor    eax,DWORD PTR [rbp-0x6c]
  406070:	xor    eax,DWORD PTR [rbp-0x68]
  406073:	mov    edx,eax
  406075:	mov    ecx,DWORD PTR [rbp-0x40]
  406078:	mov    eax,DWORD PTR [rbp-0x54]
  40607b:	xor    ecx,eax
  40607d:	mov    eax,DWORD PTR [rbp-0x2c]
  406080:	xor    ecx,eax
  406082:	mov    eax,DWORD PTR [rbp-0x34]
  406085:	xor    eax,ecx
  406087:	rorx   eax,eax,0x1f
  40608d:	mov    DWORD PTR [rbp-0x34],eax
  406090:	mov    eax,DWORD PTR [rbp-0x34]
  406093:	add    edx,eax
  406095:	mov    eax,DWORD PTR [rbp-0x74]
  406098:	rorx   eax,eax,0x1b
  40609e:	add    eax,edx
  4060a0:	sub    eax,0x359d3e2a
  4060a5:	add    DWORD PTR [rbp-0x64],eax
  4060a8:	ror    DWORD PTR [rbp-0x70],0x2
  4060ac:	mov    eax,DWORD PTR [rbp-0x74]
  4060af:	xor    eax,DWORD PTR [rbp-0x70]
  4060b2:	xor    eax,DWORD PTR [rbp-0x6c]
  4060b5:	mov    edx,eax
  4060b7:	mov    ecx,DWORD PTR [rbp-0x3c]
  4060ba:	mov    eax,DWORD PTR [rbp-0x50]
  4060bd:	xor    ecx,eax
  4060bf:	mov    eax,DWORD PTR [rbp-0x28]
  4060c2:	xor    ecx,eax
  4060c4:	mov    eax,DWORD PTR [rbp-0x30]
  4060c7:	xor    eax,ecx
  4060c9:	rorx   eax,eax,0x1f
  4060cf:	mov    DWORD PTR [rbp-0x30],eax
  4060d2:	mov    eax,DWORD PTR [rbp-0x30]
  4060d5:	add    edx,eax
  4060d7:	mov    eax,DWORD PTR [rbp-0x64]
  4060da:	rorx   eax,eax,0x1b
  4060e0:	add    eax,edx
  4060e2:	sub    eax,0x359d3e2a
  4060e7:	add    DWORD PTR [rbp-0x68],eax
  4060ea:	ror    DWORD PTR [rbp-0x74],0x2
  4060ee:	mov    eax,DWORD PTR [rbp-0x64]
  4060f1:	xor    eax,DWORD PTR [rbp-0x74]
  4060f4:	xor    eax,DWORD PTR [rbp-0x70]
  4060f7:	mov    edx,eax
  4060f9:	mov    ecx,DWORD PTR [rbp-0x38]
  4060fc:	mov    eax,DWORD PTR [rbp-0x4c]
  4060ff:	xor    ecx,eax
  406101:	mov    eax,DWORD PTR [rbp-0x24]
  406104:	xor    ecx,eax
  406106:	mov    eax,DWORD PTR [rbp-0x2c]
  406109:	xor    eax,ecx
  40610b:	rorx   eax,eax,0x1f
  406111:	mov    DWORD PTR [rbp-0x2c],eax
  406114:	mov    eax,DWORD PTR [rbp-0x2c]
  406117:	add    edx,eax
  406119:	mov    eax,DWORD PTR [rbp-0x68]
  40611c:	rorx   eax,eax,0x1b
  406122:	add    eax,edx
  406124:	sub    eax,0x359d3e2a
  406129:	add    DWORD PTR [rbp-0x6c],eax
  40612c:	ror    DWORD PTR [rbp-0x64],0x2
  406130:	mov    eax,DWORD PTR [rbp-0x68]
  406133:	xor    eax,DWORD PTR [rbp-0x64]
  406136:	xor    eax,DWORD PTR [rbp-0x74]
  406139:	mov    edx,eax
  40613b:	mov    ecx,DWORD PTR [rbp-0x34]
  40613e:	mov    eax,DWORD PTR [rbp-0x48]
  406141:	xor    ecx,eax
  406143:	mov    eax,DWORD PTR [rbp-0x60]
  406146:	xor    ecx,eax
  406148:	mov    eax,DWORD PTR [rbp-0x28]
  40614b:	xor    eax,ecx
  40614d:	rorx   eax,eax,0x1f
  406153:	mov    DWORD PTR [rbp-0x28],eax
  406156:	mov    eax,DWORD PTR [rbp-0x28]
  406159:	add    edx,eax
  40615b:	mov    eax,DWORD PTR [rbp-0x6c]
  40615e:	rorx   eax,eax,0x1b
  406164:	add    eax,edx
  406166:	sub    eax,0x359d3e2a
  40616b:	add    DWORD PTR [rbp-0x70],eax
  40616e:	ror    DWORD PTR [rbp-0x68],0x2
  406172:	mov    eax,DWORD PTR [rbp-0x6c]
  406175:	xor    eax,DWORD PTR [rbp-0x68]
  406178:	xor    eax,DWORD PTR [rbp-0x64]
  40617b:	mov    edx,eax
  40617d:	mov    ecx,DWORD PTR [rbp-0x30]
  406180:	mov    eax,DWORD PTR [rbp-0x44]
  406183:	xor    ecx,eax
  406185:	mov    eax,DWORD PTR [rbp-0x5c]
  406188:	xor    ecx,eax
  40618a:	mov    eax,DWORD PTR [rbp-0x24]
  40618d:	xor    eax,ecx
  40618f:	rorx   eax,eax,0x1f
  406195:	mov    DWORD PTR [rbp-0x24],eax
  406198:	mov    eax,DWORD PTR [rbp-0x24]
  40619b:	add    edx,eax
  40619d:	mov    eax,DWORD PTR [rbp-0x70]
  4061a0:	rorx   eax,eax,0x1b
  4061a6:	add    eax,edx
  4061a8:	sub    eax,0x359d3e2a
  4061ad:	add    DWORD PTR [rbp-0x74],eax
  4061b0:	ror    DWORD PTR [rbp-0x6c],0x2
  4061b4:	mov    rax,QWORD PTR [rbp-0x88]
  4061bb:	mov    edx,DWORD PTR [rax]
  4061bd:	mov    eax,DWORD PTR [rbp-0x74]
  4061c0:	add    edx,eax
  4061c2:	mov    rax,QWORD PTR [rbp-0x88]
  4061c9:	mov    DWORD PTR [rax],edx
  4061cb:	mov    rax,QWORD PTR [rbp-0x88]
  4061d2:	mov    edx,DWORD PTR [rax+0x4]
  4061d5:	mov    eax,DWORD PTR [rbp-0x70]
  4061d8:	add    edx,eax
  4061da:	mov    rax,QWORD PTR [rbp-0x88]
  4061e1:	mov    DWORD PTR [rax+0x4],edx
  4061e4:	mov    rax,QWORD PTR [rbp-0x88]
  4061eb:	mov    edx,DWORD PTR [rax+0x8]
  4061ee:	mov    eax,DWORD PTR [rbp-0x6c]
  4061f1:	add    edx,eax
  4061f3:	mov    rax,QWORD PTR [rbp-0x88]
  4061fa:	mov    DWORD PTR [rax+0x8],edx
  4061fd:	mov    rax,QWORD PTR [rbp-0x88]
  406204:	mov    edx,DWORD PTR [rax+0xc]
  406207:	mov    eax,DWORD PTR [rbp-0x68]
  40620a:	add    edx,eax
  40620c:	mov    rax,QWORD PTR [rbp-0x88]
  406213:	mov    DWORD PTR [rax+0xc],edx
  406216:	mov    rax,QWORD PTR [rbp-0x88]
  40621d:	mov    edx,DWORD PTR [rax+0x10]
  406220:	mov    eax,DWORD PTR [rbp-0x64]
  406223:	add    edx,eax
  406225:	mov    rax,QWORD PTR [rbp-0x88]
  40622c:	mov    DWORD PTR [rax+0x10],edx
  40622f:	mov    DWORD PTR [rbp-0x64],0x0
  406236:	mov    eax,DWORD PTR [rbp-0x64]
  406239:	mov    DWORD PTR [rbp-0x68],eax
  40623c:	mov    eax,DWORD PTR [rbp-0x68]
  40623f:	mov    DWORD PTR [rbp-0x6c],eax
  406242:	mov    eax,DWORD PTR [rbp-0x6c]
  406245:	mov    DWORD PTR [rbp-0x70],eax
  406248:	mov    eax,DWORD PTR [rbp-0x70]
  40624b:	mov    DWORD PTR [rbp-0x74],eax
  40624e:	mov    eax,DWORD PTR [rbp-0x74]
  406251:	mov    rsi,QWORD PTR [rbp-0x18]
  406255:	xor    rsi,QWORD PTR fs:0x28
  40625e:	je     406265 <rb_base64_encode@plt+0x3ee5>
  406260:	call   402270 <__stack_chk_fail@plt>
  406265:	add    rsp,0x88
  40626c:	pop    rbx
  40626d:	pop    rbp
  40626e:	ret    
  40626f:	push   rbp
  406270:	mov    rbp,rsp
  406273:	mov    QWORD PTR [rbp-0x8],rdi
  406277:	mov    rax,QWORD PTR [rbp-0x8]
  40627b:	mov    DWORD PTR [rax],0x67452301
  406281:	mov    rax,QWORD PTR [rbp-0x8]
  406285:	mov    DWORD PTR [rax+0x4],0xefcdab89
  40628c:	mov    rax,QWORD PTR [rbp-0x8]
  406290:	mov    DWORD PTR [rax+0x8],0x98badcfe
  406297:	mov    rax,QWORD PTR [rbp-0x8]
  40629b:	mov    DWORD PTR [rax+0xc],0x10325476
  4062a2:	mov    rax,QWORD PTR [rbp-0x8]
  4062a6:	mov    DWORD PTR [rax+0x10],0xc3d2e1f0
  4062ad:	mov    rax,QWORD PTR [rbp-0x8]
  4062b1:	mov    QWORD PTR [rax+0x18],0x0
  4062b9:	nop
  4062ba:	pop    rbp
  4062bb:	ret    
  4062bc:	push   rbp
  4062bd:	mov    rbp,rsp
  4062c0:	sub    rsp,0x30
  4062c4:	mov    QWORD PTR [rbp-0x18],rdi
  4062c8:	mov    QWORD PTR [rbp-0x20],rsi
  4062cc:	mov    QWORD PTR [rbp-0x28],rdx
  4062d0:	mov    rax,QWORD PTR [rbp-0x18]
  4062d4:	mov    rax,QWORD PTR [rax+0x18]
  4062d8:	shr    rax,0x3
  4062dc:	and    eax,0x3f
  4062df:	mov    QWORD PTR [rbp-0x8],rax
  4062e3:	mov    rax,QWORD PTR [rbp-0x18]
  4062e7:	mov    rax,QWORD PTR [rax+0x18]
  4062eb:	mov    rdx,QWORD PTR [rbp-0x28]
  4062ef:	shl    rdx,0x3
  4062f3:	add    rdx,rax
  4062f6:	mov    rax,QWORD PTR [rbp-0x18]
  4062fa:	mov    QWORD PTR [rax+0x18],rdx
  4062fe:	mov    rdx,QWORD PTR [rbp-0x8]
  406302:	mov    rax,QWORD PTR [rbp-0x28]
  406306:	add    rax,rdx
  406309:	cmp    rax,0x3f
  40630d:	jbe    406393 <rb_base64_encode@plt+0x4013>
  406313:	mov    eax,0x40
  406318:	sub    rax,QWORD PTR [rbp-0x8]
  40631c:	mov    QWORD PTR [rbp-0x10],rax
  406320:	mov    rax,QWORD PTR [rbp-0x8]
  406324:	lea    rdx,[rax+0x20]
  406328:	mov    rax,QWORD PTR [rbp-0x18]
  40632c:	lea    rcx,[rdx+rax*1]
  406330:	mov    rdx,QWORD PTR [rbp-0x10]
  406334:	mov    rax,QWORD PTR [rbp-0x20]
  406338:	mov    rsi,rax
  40633b:	mov    rdi,rcx
  40633e:	call   402360 <memcpy@plt>
  406343:	mov    rax,QWORD PTR [rbp-0x18]
  406347:	lea    rdx,[rax+0x20]
  40634b:	mov    rax,QWORD PTR [rbp-0x18]
  40634f:	mov    rsi,rdx
  406352:	mov    rdi,rax
  406355:	call   404c1d <rb_base64_encode@plt+0x289d>
  40635a:	jmp    40637b <rb_base64_encode@plt+0x3ffb>
  40635c:	mov    rdx,QWORD PTR [rbp-0x20]
  406360:	mov    rax,QWORD PTR [rbp-0x10]
  406364:	add    rdx,rax
  406367:	mov    rax,QWORD PTR [rbp-0x18]
  40636b:	mov    rsi,rdx
  40636e:	mov    rdi,rax
  406371:	call   404c1d <rb_base64_encode@plt+0x289d>
  406376:	add    QWORD PTR [rbp-0x10],0x40
  40637b:	mov    rax,QWORD PTR [rbp-0x10]
  40637f:	add    rax,0x3f
  406383:	cmp    rax,QWORD PTR [rbp-0x28]
  406387:	jb     40635c <rb_base64_encode@plt+0x3fdc>
  406389:	mov    QWORD PTR [rbp-0x8],0x0
  406391:	jmp    40639b <rb_base64_encode@plt+0x401b>
  406393:	mov    QWORD PTR [rbp-0x10],0x0
  40639b:	mov    rax,QWORD PTR [rbp-0x28]
  40639f:	sub    rax,QWORD PTR [rbp-0x10]
  4063a3:	mov    rcx,QWORD PTR [rbp-0x20]
  4063a7:	mov    rdx,QWORD PTR [rbp-0x10]
  4063ab:	lea    rsi,[rcx+rdx*1]
  4063af:	mov    rdx,QWORD PTR [rbp-0x8]
  4063b3:	lea    rcx,[rdx+0x20]
  4063b7:	mov    rdx,QWORD PTR [rbp-0x18]
  4063bb:	add    rcx,rdx
  4063be:	mov    rdx,rax
  4063c1:	mov    rdi,rcx
  4063c4:	call   402360 <memcpy@plt>
  4063c9:	nop
  4063ca:	leave  
  4063cb:	ret    
  4063cc:	push   rbp
  4063cd:	mov    rbp,rsp
  4063d0:	sub    rsp,0x30
  4063d4:	mov    QWORD PTR [rbp-0x28],rdi
  4063d8:	mov    QWORD PTR [rbp-0x30],rsi
  4063dc:	mov    rax,QWORD PTR fs:0x28
  4063e5:	mov    QWORD PTR [rbp-0x8],rax
  4063e9:	xor    eax,eax
  4063eb:	mov    DWORD PTR [rbp-0x14],0x0
  4063f2:	jmp    406419 <rb_base64_encode@plt+0x4099>
  4063f4:	mov    rax,QWORD PTR [rbp-0x28]
  4063f8:	mov    rdx,QWORD PTR [rax+0x18]
  4063fc:	mov    eax,DWORD PTR [rbp-0x14]
  4063ff:	not    eax
  406401:	and    eax,0x7
  406404:	shl    eax,0x3
  406407:	shrx   rax,rdx,rax
  40640c:	mov    edx,eax
  40640e:	mov    eax,DWORD PTR [rbp-0x14]
  406411:	mov    BYTE PTR [rbp+rax*1-0x10],dl
  406415:	add    DWORD PTR [rbp-0x14],0x1
  406419:	cmp    DWORD PTR [rbp-0x14],0x7
  40641d:	jbe    4063f4 <rb_base64_encode@plt+0x4074>
  40641f:	mov    rax,QWORD PTR [rbp-0x28]
  406423:	mov    edx,0x1
  406428:	lea    rsi,[rip+0xec1]        # 4072f0 <rb_base64_encode@plt+0x4f70>
  40642f:	mov    rdi,rax
  406432:	call   4062bc <rb_base64_encode@plt+0x3f3c>
  406437:	jmp    406451 <rb_base64_encode@plt+0x40d1>
  406439:	mov    rax,QWORD PTR [rbp-0x28]
  40643d:	mov    edx,0x1
  406442:	lea    rsi,[rip+0xea9]        # 4072f2 <rb_base64_encode@plt+0x4f72>
  406449:	mov    rdi,rax
  40644c:	call   4062bc <rb_base64_encode@plt+0x3f3c>
  406451:	mov    rax,QWORD PTR [rbp-0x28]
  406455:	mov    rax,QWORD PTR [rax+0x18]
  406459:	and    eax,0x1f8
  40645e:	cmp    rax,0x1c0
  406464:	jne    406439 <rb_base64_encode@plt+0x40b9>
  406466:	lea    rcx,[rbp-0x10]
  40646a:	mov    rax,QWORD PTR [rbp-0x28]
  40646e:	mov    edx,0x8
  406473:	mov    rsi,rcx
  406476:	mov    rdi,rax
  406479:	call   4062bc <rb_base64_encode@plt+0x3f3c>
  40647e:	mov    DWORD PTR [rbp-0x14],0x0
  406485:	jmp    4064b8 <rb_base64_encode@plt+0x4138>
  406487:	mov    edx,DWORD PTR [rbp-0x14]
  40648a:	mov    rax,QWORD PTR [rbp-0x30]
  40648e:	add    rdx,rax
  406491:	mov    eax,DWORD PTR [rbp-0x14]
  406494:	shr    eax,0x2
  406497:	mov    ecx,eax
  406499:	mov    rax,QWORD PTR [rbp-0x28]
  40649d:	mov    ecx,ecx
  40649f:	mov    ecx,DWORD PTR [rax+rcx*4]
  4064a2:	mov    eax,DWORD PTR [rbp-0x14]
  4064a5:	not    eax
  4064a7:	and    eax,0x3
  4064aa:	shl    eax,0x3
  4064ad:	shrx   eax,ecx,eax
  4064b2:	mov    BYTE PTR [rdx],al
  4064b4:	add    DWORD PTR [rbp-0x14],0x1
  4064b8:	cmp    DWORD PTR [rbp-0x14],0x13
  4064bc:	jbe    406487 <rb_base64_encode@plt+0x4107>
  4064be:	mov    rax,QWORD PTR [rbp-0x28]
  4064c2:	mov    edx,0x60
  4064c7:	mov    esi,0x0
  4064cc:	mov    rdi,rax
  4064cf:	call   402050 <memset@plt>
  4064d4:	nop
  4064d5:	mov    rax,QWORD PTR [rbp-0x8]
  4064d9:	xor    rax,QWORD PTR fs:0x28
  4064e2:	je     4064e9 <rb_base64_encode@plt+0x4169>
  4064e4:	call   402270 <__stack_chk_fail@plt>
  4064e9:	leave  
  4064ea:	ret    
  4064eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4064f0:	endbr64 
  4064f4:	push   r15
  4064f6:	lea    r15,[rip+0x28e3]        # 408de0 <rb_base64_encode@plt+0x6a60>
  4064fd:	push   r14
  4064ff:	mov    r14,rdx
  406502:	push   r13
  406504:	mov    r13,rsi
  406507:	push   r12
  406509:	mov    r12d,edi
  40650c:	push   rbp
  40650d:	lea    rbp,[rip+0x28d4]        # 408de8 <rb_base64_encode@plt+0x6a68>
  406514:	push   rbx
  406515:	sub    rbp,r15
  406518:	sub    rsp,0x8
  40651c:	call   402000 <dup2@plt-0x30>
  406521:	sar    rbp,0x3
  406525:	je     406546 <rb_base64_encode@plt+0x41c6>
  406527:	xor    ebx,ebx
  406529:	nop    DWORD PTR [rax+0x0]
  406530:	mov    rdx,r14
  406533:	mov    rsi,r13
  406536:	mov    edi,r12d
  406539:	call   QWORD PTR [r15+rbx*8]
  40653d:	add    rbx,0x1
  406541:	cmp    rbp,rbx
  406544:	jne    406530 <rb_base64_encode@plt+0x41b0>
  406546:	add    rsp,0x8
  40654a:	pop    rbx
  40654b:	pop    rbp
  40654c:	pop    r12
  40654e:	pop    r13
  406550:	pop    r14
  406552:	pop    r15
  406554:	ret    
  406555:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  406560:	endbr64 
  406564:	ret    

Disassembly of section .fini:

0000000000406568 <.fini>:
  406568:	endbr64 
  40656c:	sub    rsp,0x8
  406570:	add    rsp,0x8
  406574:	ret    
