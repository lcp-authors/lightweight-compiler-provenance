
../repos/prog2/MT1E1-1.1:     file format elf64-x86-64


Disassembly of section .init:

0000000000401000 <.init>:
  401000:	endbr64 
  401004:	sub    rsp,0x8
  401008:	mov    rax,QWORD PTR [rip+0x3fe9]        # 404ff8 <__gmon_start__>
  40100f:	test   rax,rax
  401012:	je     401016 <free@plt-0x1a>
  401014:	call   rax
  401016:	add    rsp,0x8
  40101a:	ret    

Disassembly of section .plt:

0000000000401020 <free@plt-0x10>:
  401020:	push   QWORD PTR [rip+0x3fe2]        # 405008 <_IO_stdin_used@@Base+0x2008>
  401026:	jmp    QWORD PTR [rip+0x3fe4]        # 405010 <_IO_stdin_used@@Base+0x2010>
  40102c:	nop    DWORD PTR [rax+0x0]

0000000000401030 <free@plt>:
  401030:	jmp    QWORD PTR [rip+0x3fe2]        # 405018 <free@GLIBC_2.2.5>
  401036:	push   0x0
  40103b:	jmp    401020 <free@plt-0x10>

0000000000401040 <strcpy@plt>:
  401040:	jmp    QWORD PTR [rip+0x3fda]        # 405020 <strcpy@GLIBC_2.2.5>
  401046:	push   0x1
  40104b:	jmp    401020 <free@plt-0x10>

0000000000401050 <puts@plt>:
  401050:	jmp    QWORD PTR [rip+0x3fd2]        # 405028 <puts@GLIBC_2.2.5>
  401056:	push   0x2
  40105b:	jmp    401020 <free@plt-0x10>

0000000000401060 <fclose@plt>:
  401060:	jmp    QWORD PTR [rip+0x3fca]        # 405030 <fclose@GLIBC_2.2.5>
  401066:	push   0x3
  40106b:	jmp    401020 <free@plt-0x10>

0000000000401070 <strlen@plt>:
  401070:	jmp    QWORD PTR [rip+0x3fc2]        # 405038 <strlen@GLIBC_2.2.5>
  401076:	push   0x4
  40107b:	jmp    401020 <free@plt-0x10>

0000000000401080 <strchr@plt>:
  401080:	jmp    QWORD PTR [rip+0x3fba]        # 405040 <strchr@GLIBC_2.2.5>
  401086:	push   0x5
  40108b:	jmp    401020 <free@plt-0x10>

0000000000401090 <printf@plt>:
  401090:	jmp    QWORD PTR [rip+0x3fb2]        # 405048 <printf@GLIBC_2.2.5>
  401096:	push   0x6
  40109b:	jmp    401020 <free@plt-0x10>

00000000004010a0 <fgets@plt>:
  4010a0:	jmp    QWORD PTR [rip+0x3faa]        # 405050 <fgets@GLIBC_2.2.5>
  4010a6:	push   0x7
  4010ab:	jmp    401020 <free@plt-0x10>

00000000004010b0 <calloc@plt>:
  4010b0:	jmp    QWORD PTR [rip+0x3fa2]        # 405058 <calloc@GLIBC_2.2.5>
  4010b6:	push   0x8
  4010bb:	jmp    401020 <free@plt-0x10>

00000000004010c0 <strcmp@plt>:
  4010c0:	jmp    QWORD PTR [rip+0x3f9a]        # 405060 <strcmp@GLIBC_2.2.5>
  4010c6:	push   0x9
  4010cb:	jmp    401020 <free@plt-0x10>

00000000004010d0 <feof@plt>:
  4010d0:	jmp    QWORD PTR [rip+0x3f92]        # 405068 <feof@GLIBC_2.2.5>
  4010d6:	push   0xa
  4010db:	jmp    401020 <free@plt-0x10>

00000000004010e0 <strtol@plt>:
  4010e0:	jmp    QWORD PTR [rip+0x3f8a]        # 405070 <strtol@GLIBC_2.2.5>
  4010e6:	push   0xb
  4010eb:	jmp    401020 <free@plt-0x10>

00000000004010f0 <malloc@plt>:
  4010f0:	jmp    QWORD PTR [rip+0x3f82]        # 405078 <malloc@GLIBC_2.2.5>
  4010f6:	push   0xc
  4010fb:	jmp    401020 <free@plt-0x10>

0000000000401100 <realloc@plt>:
  401100:	jmp    QWORD PTR [rip+0x3f7a]        # 405080 <realloc@GLIBC_2.2.5>
  401106:	push   0xd
  40110b:	jmp    401020 <free@plt-0x10>

0000000000401110 <fopen@plt>:
  401110:	jmp    QWORD PTR [rip+0x3f72]        # 405088 <fopen@GLIBC_2.2.5>
  401116:	push   0xe
  40111b:	jmp    401020 <free@plt-0x10>

Disassembly of section .text:

0000000000401120 <_start@@Base>:
  401120:	endbr64 
  401124:	xor    ebp,ebp
  401126:	mov    r9,rdx
  401129:	pop    rsi
  40112a:	mov    rdx,rsp
  40112d:	and    rsp,0xfffffffffffffff0
  401131:	push   rax
  401132:	push   rsp
  401133:	mov    r8,0x402070
  40113a:	mov    rcx,0x402000
  401141:	mov    rdi,0x401500
  401148:	call   QWORD PTR [rip+0x3ea2]        # 404ff0 <__libc_start_main@GLIBC_2.2.5>
  40114e:	hlt    
  40114f:	nop
  401150:	endbr64 
  401154:	ret    
  401155:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40115f:	nop
  401160:	mov    eax,0x4050a0
  401165:	cmp    rax,0x4050a0
  40116b:	je     401180 <_start@@Base+0x60>
  40116d:	mov    eax,0x0
  401172:	test   rax,rax
  401175:	je     401180 <_start@@Base+0x60>
  401177:	mov    edi,0x4050a0
  40117c:	jmp    rax
  40117e:	xchg   ax,ax
  401180:	ret    
  401181:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40118c:	nop    DWORD PTR [rax+0x0]
  401190:	mov    esi,0x4050a0
  401195:	sub    rsi,0x4050a0
  40119c:	mov    rax,rsi
  40119f:	shr    rsi,0x3f
  4011a3:	sar    rax,0x3
  4011a7:	add    rsi,rax
  4011aa:	sar    rsi,1
  4011ad:	je     4011c0 <_start@@Base+0xa0>
  4011af:	mov    eax,0x0
  4011b4:	test   rax,rax
  4011b7:	je     4011c0 <_start@@Base+0xa0>
  4011b9:	mov    edi,0x4050a0
  4011be:	jmp    rax
  4011c0:	ret    
  4011c1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4011cc:	nop    DWORD PTR [rax+0x0]
  4011d0:	endbr64 
  4011d4:	cmp    BYTE PTR [rip+0x3ec5],0x0        # 4050a0 <__bss_start@@Base>
  4011db:	jne    4011f0 <_start@@Base+0xd0>
  4011dd:	push   rbp
  4011de:	mov    rbp,rsp
  4011e1:	call   401160 <_start@@Base+0x40>
  4011e6:	mov    BYTE PTR [rip+0x3eb3],0x1        # 4050a0 <__bss_start@@Base>
  4011ed:	pop    rbp
  4011ee:	ret    
  4011ef:	nop
  4011f0:	ret    
  4011f1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4011fc:	nop    DWORD PTR [rax+0x0]
  401200:	endbr64 
  401204:	jmp    401190 <_start@@Base+0x70>
  401206:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000401210 <retira_duplicados@@Base>:
  401210:	push   rbp
  401211:	push   r15
  401213:	push   r14
  401215:	push   r12
  401217:	push   rbx
  401218:	mov    r15,rdi
  40121b:	call   4017f0 <vetor_tamanho@@Base>
  401220:	cmp    eax,0x2
  401223:	jl     4012a3 <retira_duplicados@@Base+0x93>
  401225:	xor    r12d,r12d
  401228:	nop    DWORD PTR [rax+rax*1+0x0]
  401230:	mov    r14d,r12d
  401233:	lea    r12d,[r14+0x1]
  401237:	mov    rdi,r15
  40123a:	call   4017f0 <vetor_tamanho@@Base>
  40123f:	cmp    r12d,eax
  401242:	jge    401293 <retira_duplicados@@Base+0x83>
  401244:	mov    ebp,r12d
  401247:	nop    WORD PTR [rax+rax*1+0x0]
  401250:	mov    rdi,r15
  401253:	mov    esi,r14d
  401256:	call   401800 <vetor_elemento@@Base>
  40125b:	mov    rbx,rax
  40125e:	mov    rdi,r15
  401261:	mov    esi,ebp
  401263:	call   401800 <vetor_elemento@@Base>
  401268:	mov    rdi,rbx
  40126b:	mov    rsi,rax
  40126e:	call   4010c0 <strcmp@plt>
  401273:	test   eax,eax
  401275:	jne    401284 <retira_duplicados@@Base+0x74>
  401277:	mov    rdi,r15
  40127a:	mov    esi,ebp
  40127c:	call   4019a0 <vetor_remove@@Base>
  401281:	add    ebp,0xffffffff
  401284:	add    ebp,0x1
  401287:	mov    rdi,r15
  40128a:	call   4017f0 <vetor_tamanho@@Base>
  40128f:	cmp    ebp,eax
  401291:	jl     401250 <retira_duplicados@@Base+0x40>
  401293:	mov    rdi,r15
  401296:	call   4017f0 <vetor_tamanho@@Base>
  40129b:	add    eax,0xffffffff
  40129e:	cmp    r12d,eax
  4012a1:	jl     401230 <retira_duplicados@@Base+0x20>
  4012a3:	pop    rbx
  4012a4:	pop    r12
  4012a6:	pop    r14
  4012a8:	pop    r15
  4012aa:	pop    rbp
  4012ab:	ret    
  4012ac:	nop    DWORD PTR [rax+0x0]

00000000004012b0 <interseta@@Base>:
  4012b0:	push   rbp
  4012b1:	push   r15
  4012b3:	push   r14
  4012b5:	push   r13
  4012b7:	push   r12
  4012b9:	push   rbx
  4012ba:	push   rax
  4012bb:	mov    r13,rsi
  4012be:	mov    r14,rdi
  4012c1:	xor    r12d,r12d
  4012c4:	xor    eax,eax
  4012c6:	call   4016e0 <vetor_novo@@Base>
  4012cb:	mov    QWORD PTR [rsp],rax
  4012cf:	mov    rbx,QWORD PTR [r14]
  4012d2:	test   rbx,rbx
  4012d5:	jne    4012df <interseta@@Base+0x2f>
  4012d7:	mov    eax,DWORD PTR [r14+0x10]
  4012db:	test   eax,eax
  4012dd:	jle    40134d <interseta@@Base+0x9d>
  4012df:	mov    eax,0x1
  4012e4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4012ee:	xchg   ax,ax
  4012f0:	mov    r15d,eax
  4012f3:	mov    rsi,QWORD PTR [rbx]
  4012f6:	xor    edx,edx
  4012f8:	mov    rdi,r13
  4012fb:	call   401d80 <lista_pesquisa@@Base>
  401300:	test   rax,rax
  401303:	je     401337 <interseta@@Base+0x87>
  401305:	mov    rbp,QWORD PTR [rbx]
  401308:	xor    edx,edx
  40130a:	mov    rdi,r13
  40130d:	mov    rsi,rbp
  401310:	call   401d80 <lista_pesquisa@@Base>
  401315:	mov    rsi,QWORD PTR [rax]
  401318:	mov    rdi,rbp
  40131b:	call   4010c0 <strcmp@plt>
  401320:	test   eax,eax
  401322:	jne    401337 <interseta@@Base+0x87>
  401324:	mov    rsi,QWORD PTR [rbx]
  401327:	mov    rdi,QWORD PTR [rsp]
  40132b:	mov    edx,r12d
  40132e:	call   401820 <vetor_insere@@Base>
  401333:	add    r12d,0x1
  401337:	mov    rbx,QWORD PTR [rbx+0x8]
  40133b:	mov    ecx,DWORD PTR [r14+0x10]
  40133f:	lea    eax,[r15+0x1]
  401343:	test   rbx,rbx
  401346:	jne    4012f0 <interseta@@Base+0x40>
  401348:	cmp    r15d,ecx
  40134b:	jl     4012f0 <interseta@@Base+0x40>
  40134d:	mov    rax,QWORD PTR [rsp]
  401351:	add    rsp,0x8
  401355:	pop    rbx
  401356:	pop    r12
  401358:	pop    r13
  40135a:	pop    r14
  40135c:	pop    r15
  40135e:	pop    rbp
  40135f:	ret    

0000000000401360 <anteriores@@Base>:
  401360:	push   rbp
  401361:	push   r15
  401363:	push   r14
  401365:	push   rbx
  401366:	push   rax
  401367:	mov    r14d,esi
  40136a:	mov    rbp,rdi
  40136d:	xor    eax,eax
  40136f:	call   4016e0 <vetor_novo@@Base>
  401374:	mov    r15,rax
  401377:	mov    rbx,QWORD PTR [rbp+0x0]
  40137b:	test   rbx,rbx
  40137e:	jne    401399 <anteriores@@Base+0x39>
  401380:	jmp    4013cd <anteriores@@Base+0x6d>
  401382:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40138c:	nop    DWORD PTR [rax+0x0]
  401390:	mov    rbx,QWORD PTR [rbx+0x8]
  401394:	test   rbx,rbx
  401397:	je     4013cd <anteriores@@Base+0x6d>
  401399:	mov    rbp,QWORD PTR [rbx]
  40139c:	mov    rdi,rbp
  40139f:	call   401070 <strlen@plt>
  4013a4:	lea    rdi,[rax+rbp*1]
  4013a8:	add    rdi,0xfffffffffffffffb
  4013ac:	xor    esi,esi
  4013ae:	mov    edx,0xa
  4013b3:	call   4010e0 <strtol@plt>
  4013b8:	cmp    eax,r14d
  4013bb:	jge    401390 <anteriores@@Base+0x30>
  4013bd:	mov    edx,DWORD PTR [r15]
  4013c0:	mov    rdi,r15
  4013c3:	mov    rsi,rbp
  4013c6:	call   401820 <vetor_insere@@Base>
  4013cb:	jmp    401390 <anteriores@@Base+0x30>
  4013cd:	mov    rax,r15
  4013d0:	add    rsp,0x8
  4013d4:	pop    rbx
  4013d5:	pop    r14
  4013d7:	pop    r15
  4013d9:	pop    rbp
  4013da:	ret    
  4013db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004013e0 <lerAtores@@Base>:
  4013e0:	push   r15
  4013e2:	push   r14
  4013e4:	push   rbx
  4013e5:	sub    rsp,0x100
  4013ec:	test   rdi,rdi
  4013ef:	je     401451 <lerAtores@@Base+0x71>
  4013f1:	mov    rbx,rdi
  4013f4:	xor    eax,eax
  4013f6:	call   4016e0 <vetor_novo@@Base>
  4013fb:	mov    r14,rax
  4013fe:	mov    rdi,rbx
  401401:	call   4010d0 <feof@plt>
  401406:	test   eax,eax
  401408:	jne    401454 <lerAtores@@Base+0x74>
  40140a:	mov    r15,rsp
  40140d:	nop    DWORD PTR [rax]
  401410:	mov    esi,0xff
  401415:	mov    rdi,r15
  401418:	mov    rdx,rbx
  40141b:	call   4010a0 <fgets@plt>
  401420:	mov    esi,0xa
  401425:	mov    rdi,r15
  401428:	call   401080 <strchr@plt>
  40142d:	test   rax,rax
  401430:	je     401435 <lerAtores@@Base+0x55>
  401432:	mov    BYTE PTR [rax],0x0
  401435:	mov    edx,DWORD PTR [r14]
  401438:	mov    rdi,r14
  40143b:	mov    rsi,r15
  40143e:	call   401820 <vetor_insere@@Base>
  401443:	mov    rdi,rbx
  401446:	call   4010d0 <feof@plt>
  40144b:	test   eax,eax
  40144d:	je     401410 <lerAtores@@Base+0x30>
  40144f:	jmp    401454 <lerAtores@@Base+0x74>
  401451:	xor    r14d,r14d
  401454:	mov    rax,r14
  401457:	add    rsp,0x100
  40145e:	pop    rbx
  40145f:	pop    r14
  401461:	pop    r15
  401463:	ret    
  401464:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40146e:	xchg   ax,ax

0000000000401470 <lerFilmes@@Base>:
  401470:	push   r15
  401472:	push   r14
  401474:	push   rbx
  401475:	sub    rsp,0x100
  40147c:	test   rdi,rdi
  40147f:	je     4014e0 <lerFilmes@@Base+0x70>
  401481:	mov    rbx,rdi
  401484:	xor    eax,eax
  401486:	call   401ba0 <lista_nova@@Base>
  40148b:	mov    r14,rax
  40148e:	mov    rdi,rbx
  401491:	call   4010d0 <feof@plt>
  401496:	test   eax,eax
  401498:	jne    4014e3 <lerFilmes@@Base+0x73>
  40149a:	mov    r15,rsp
  40149d:	nop    DWORD PTR [rax]
  4014a0:	mov    esi,0xff
  4014a5:	mov    rdi,r15
  4014a8:	mov    rdx,rbx
  4014ab:	call   4010a0 <fgets@plt>
  4014b0:	mov    esi,0xa
  4014b5:	mov    rdi,r15
  4014b8:	call   401080 <strchr@plt>
  4014bd:	test   rax,rax
  4014c0:	je     4014c5 <lerFilmes@@Base+0x55>
  4014c2:	mov    BYTE PTR [rax],0x0
  4014c5:	xor    edx,edx
  4014c7:	mov    rdi,r14
  4014ca:	mov    rsi,r15
  4014cd:	call   401c40 <lista_insere@@Base>
  4014d2:	mov    rdi,rbx
  4014d5:	call   4010d0 <feof@plt>
  4014da:	test   eax,eax
  4014dc:	je     4014a0 <lerFilmes@@Base+0x30>
  4014de:	jmp    4014e3 <lerFilmes@@Base+0x73>
  4014e0:	xor    r14d,r14d
  4014e3:	mov    rax,r14
  4014e6:	add    rsp,0x100
  4014ed:	pop    rbx
  4014ee:	pop    r14
  4014f0:	pop    r15
  4014f2:	ret    
  4014f3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4014fd:	nop    DWORD PTR [rax]

0000000000401500 <main@@Base>:
  401500:	push   rbp
  401501:	push   r15
  401503:	push   r14
  401505:	push   r13
  401507:	push   r12
  401509:	push   rbx
  40150a:	sub    rsp,0x28
  40150e:	lea    rdi,[rip+0x1aef]        # 403004 <_IO_stdin_used@@Base+0x4>
  401515:	lea    r14,[rip+0x1af4]        # 403010 <_IO_stdin_used@@Base+0x10>
  40151c:	mov    rsi,r14
  40151f:	call   401110 <fopen@plt>
  401524:	mov    r15,rax
  401527:	lea    rdi,[rip+0x1ae4]        # 403012 <_IO_stdin_used@@Base+0x12>
  40152e:	mov    rsi,r14
  401531:	call   401110 <fopen@plt>
  401536:	mov    rbx,rax
  401539:	lea    rdi,[rip+0x1add]        # 40301d <_IO_stdin_used@@Base+0x1d>
  401540:	mov    rsi,r14
  401543:	call   401110 <fopen@plt>
  401548:	mov    rbp,rax
  40154b:	mov    QWORD PTR [rsp+0x20],r15
  401550:	mov    rdi,r15
  401553:	call   4013e0 <lerAtores@@Base>
  401558:	mov    r14,rax
  40155b:	mov    QWORD PTR [rsp+0x18],rbx
  401560:	mov    rdi,rbx
  401563:	call   401470 <lerFilmes@@Base>
  401568:	mov    rbx,rax
  40156b:	mov    QWORD PTR [rsp+0x10],rbp
  401570:	mov    rdi,rbp
  401573:	call   401470 <lerFilmes@@Base>
  401578:	mov    rbp,rax
  40157b:	mov    rdi,r14
  40157e:	call   4017f0 <vetor_tamanho@@Base>
  401583:	mov    ecx,eax
  401585:	lea    rdi,[rip+0x1a9d]        # 403029 <_IO_stdin_used@@Base+0x29>
  40158c:	xor    eax,eax
  40158e:	mov    esi,ecx
  401590:	call   401090 <printf@plt>
  401595:	mov    rdi,r14
  401598:	call   401210 <retira_duplicados@@Base>
  40159d:	mov    rdi,r14
  4015a0:	call   4017f0 <vetor_tamanho@@Base>
  4015a5:	mov    ecx,eax
  4015a7:	lea    rdi,[rip+0x1a8e]        # 40303c <_IO_stdin_used@@Base+0x3c>
  4015ae:	xor    eax,eax
  4015b0:	mov    esi,ecx
  4015b2:	call   401090 <printf@plt>
  4015b7:	mov    rdi,rbx
  4015ba:	mov    QWORD PTR [rsp+0x8],rbp
  4015bf:	mov    rsi,rbp
  4015c2:	call   4012b0 <interseta@@Base>
  4015c7:	mov    rbp,rax
  4015ca:	test   rax,rax
  4015cd:	je     4015eb <main@@Base+0xeb>
  4015cf:	mov    rdi,rbp
  4015d2:	call   4017f0 <vetor_tamanho@@Base>
  4015d7:	mov    ecx,eax
  4015d9:	lea    rdi,[rip+0x1a78]        # 403058 <_IO_stdin_used@@Base+0x58>
  4015e0:	xor    eax,eax
  4015e2:	mov    esi,ecx
  4015e4:	call   401090 <printf@plt>
  4015e9:	jmp    4015f7 <main@@Base+0xf7>
  4015eb:	lea    rdi,[rip+0x1aae]        # 4030a0 <_IO_stdin_used@@Base+0xa0>
  4015f2:	call   401050 <puts@plt>
  4015f7:	xor    eax,eax
  4015f9:	call   4016e0 <vetor_novo@@Base>
  4015fe:	mov    r15,rax
  401601:	mov    r13,QWORD PTR [rbx]
  401604:	test   r13,r13
  401607:	jne    401619 <main@@Base+0x119>
  401609:	jmp    401650 <main@@Base+0x150>
  40160b:	nop    DWORD PTR [rax+rax*1+0x0]
  401610:	mov    r13,QWORD PTR [r13+0x8]
  401614:	test   r13,r13
  401617:	je     401650 <main@@Base+0x150>
  401619:	mov    r12,QWORD PTR [r13+0x0]
  40161d:	mov    rdi,r12
  401620:	call   401070 <strlen@plt>
  401625:	lea    rdi,[r12+rax*1]
  401629:	add    rdi,0xfffffffffffffffb
  40162d:	xor    esi,esi
  40162f:	mov    edx,0xa
  401634:	call   4010e0 <strtol@plt>
  401639:	cmp    eax,0x7cf
  40163e:	jg     401610 <main@@Base+0x110>
  401640:	mov    edx,DWORD PTR [r15]
  401643:	mov    rdi,r15
  401646:	mov    rsi,r12
  401649:	call   401820 <vetor_insere@@Base>
  40164e:	jmp    401610 <main@@Base+0x110>
  401650:	test   r15,r15
  401653:	je     401671 <main@@Base+0x171>
  401655:	mov    rdi,r15
  401658:	call   4017f0 <vetor_tamanho@@Base>
  40165d:	mov    ecx,eax
  40165f:	lea    rdi,[rip+0x1a11]        # 403077 <_IO_stdin_used@@Base+0x77>
  401666:	xor    eax,eax
  401668:	mov    esi,ecx
  40166a:	call   401090 <printf@plt>
  40166f:	jmp    40167d <main@@Base+0x17d>
  401671:	lea    rdi,[rip+0x1a48]        # 4030c0 <_IO_stdin_used@@Base+0xc0>
  401678:	call   401050 <puts@plt>
  40167d:	mov    rdi,r14
  401680:	call   401700 <vetor_apaga@@Base>
  401685:	mov    rdi,rbp
  401688:	call   401700 <vetor_apaga@@Base>
  40168d:	mov    rdi,r15
  401690:	call   401700 <vetor_apaga@@Base>
  401695:	mov    rdi,rbx
  401698:	call   401bd0 <lista_apaga@@Base>
  40169d:	mov    rdi,QWORD PTR [rsp+0x8]
  4016a2:	call   401bd0 <lista_apaga@@Base>
  4016a7:	mov    rdi,QWORD PTR [rsp+0x20]
  4016ac:	call   401060 <fclose@plt>
  4016b1:	mov    rdi,QWORD PTR [rsp+0x18]
  4016b6:	call   401060 <fclose@plt>
  4016bb:	mov    rdi,QWORD PTR [rsp+0x10]
  4016c0:	call   401060 <fclose@plt>
  4016c5:	xor    eax,eax
  4016c7:	add    rsp,0x28
  4016cb:	pop    rbx
  4016cc:	pop    r12
  4016ce:	pop    r13
  4016d0:	pop    r14
  4016d2:	pop    r15
  4016d4:	pop    rbp
  4016d5:	ret    
  4016d6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004016e0 <vetor_novo@@Base>:
  4016e0:	push   rax
  4016e1:	mov    edi,0x10
  4016e6:	call   4010f0 <malloc@plt>
  4016eb:	test   rax,rax
  4016ee:	je     4016fa <vetor_novo@@Base+0x1a>
  4016f0:	vxorps xmm0,xmm0,xmm0
  4016f4:	vmovups XMMWORD PTR [rax],xmm0
  4016f8:	pop    rcx
  4016f9:	ret    
  4016fa:	xor    eax,eax
  4016fc:	pop    rcx
  4016fd:	ret    
  4016fe:	xchg   ax,ax

0000000000401700 <vetor_apaga@@Base>:
  401700:	test   rdi,rdi
  401703:	je     40174d <vetor_apaga@@Base+0x4d>
  401705:	push   r14
  401707:	push   rbx
  401708:	push   rax
  401709:	mov    r14,rdi
  40170c:	cmp    DWORD PTR [rdi],0x0
  40170f:	mov    rdi,QWORD PTR [rdi+0x8]
  401713:	jle    401739 <vetor_apaga@@Base+0x39>
  401715:	xor    ebx,ebx
  401717:	nop    WORD PTR [rax+rax*1+0x0]
  401720:	mov    rdi,QWORD PTR [rdi+rbx*8]
  401724:	call   401030 <free@plt>
  401729:	add    rbx,0x1
  40172d:	movsxd rax,DWORD PTR [r14]
  401730:	mov    rdi,QWORD PTR [r14+0x8]
  401734:	cmp    rbx,rax
  401737:	jl     401720 <vetor_apaga@@Base+0x20>
  401739:	call   401030 <free@plt>
  40173e:	mov    rdi,r14
  401741:	add    rsp,0x8
  401745:	pop    rbx
  401746:	pop    r14
  401748:	jmp    401030 <free@plt>
  40174d:	ret    
  40174e:	xchg   ax,ax

0000000000401750 <vetor_atribui@@Base>:
  401750:	push   rbp
  401751:	push   r15
  401753:	push   r14
  401755:	push   r13
  401757:	push   r12
  401759:	push   rbx
  40175a:	sub    rsp,0x18
  40175e:	mov    r15d,0xffffffff
  401764:	test   rdi,rdi
  401767:	je     4017dd <vetor_atribui@@Base+0x8d>
  401769:	mov    ebx,esi
  40176b:	test   esi,esi
  40176d:	js     4017dd <vetor_atribui@@Base+0x8d>
  40176f:	mov    rbp,rdi
  401772:	cmp    DWORD PTR [rdi],ebx
  401774:	jle    4017dd <vetor_atribui@@Base+0x8d>
  401776:	mov    r14,rdx
  401779:	mov    rdi,rdx
  40177c:	call   401070 <strlen@plt>
  401781:	mov    r13,rax
  401784:	mov    eax,r13d
  401787:	mov    QWORD PTR [rsp+0x10],rax
  40178c:	mov    rax,QWORD PTR [rbp+0x8]
  401790:	movsxd rcx,ebx
  401793:	mov    QWORD PTR [rsp+0x8],rcx
  401798:	mov    r12,QWORD PTR [rax+rcx*8]
  40179c:	mov    rdi,r12
  40179f:	call   401070 <strlen@plt>
  4017a4:	cmp    QWORD PTR [rsp+0x10],rax
  4017a9:	jbe    4017cf <vetor_atribui@@Base+0x7f>
  4017ab:	add    r13d,0x1
  4017af:	mov    rdi,r12
  4017b2:	mov    rsi,r13
  4017b5:	call   401100 <realloc@plt>
  4017ba:	mov    r12,rax
  4017bd:	mov    rax,QWORD PTR [rbp+0x8]
  4017c1:	mov    rcx,QWORD PTR [rsp+0x8]
  4017c6:	mov    QWORD PTR [rax+rcx*8],r12
  4017ca:	test   r12,r12
  4017cd:	je     4017dd <vetor_atribui@@Base+0x8d>
  4017cf:	mov    rdi,r12
  4017d2:	mov    rsi,r14
  4017d5:	call   401040 <strcpy@plt>
  4017da:	mov    r15d,ebx
  4017dd:	mov    eax,r15d
  4017e0:	add    rsp,0x18
  4017e4:	pop    rbx
  4017e5:	pop    r12
  4017e7:	pop    r13
  4017e9:	pop    r14
  4017eb:	pop    r15
  4017ed:	pop    rbp
  4017ee:	ret    
  4017ef:	nop

00000000004017f0 <vetor_tamanho@@Base>:
  4017f0:	test   rdi,rdi
  4017f3:	je     4017f8 <vetor_tamanho@@Base+0x8>
  4017f5:	mov    eax,DWORD PTR [rdi]
  4017f7:	ret    
  4017f8:	mov    eax,0xffffffff
  4017fd:	ret    
  4017fe:	xchg   ax,ax

0000000000401800 <vetor_elemento@@Base>:
  401800:	xor    eax,eax
  401802:	test   rdi,rdi
  401805:	je     40181a <vetor_elemento@@Base+0x1a>
  401807:	test   esi,esi
  401809:	js     40181a <vetor_elemento@@Base+0x1a>
  40180b:	cmp    DWORD PTR [rdi],esi
  40180d:	jle    40181b <vetor_elemento@@Base+0x1b>
  40180f:	mov    rax,QWORD PTR [rdi+0x8]
  401813:	movsxd rcx,esi
  401816:	mov    rax,QWORD PTR [rax+rcx*8]
  40181a:	ret    
  40181b:	xor    eax,eax
  40181d:	ret    
  40181e:	xchg   ax,ax

0000000000401820 <vetor_insere@@Base>:
  401820:	push   rbp
  401821:	push   r15
  401823:	push   r14
  401825:	push   r12
  401827:	push   rbx
  401828:	mov    r14d,0xffffffff
  40182e:	test   rdi,rdi
  401831:	je     401991 <vetor_insere@@Base+0x171>
  401837:	mov    r12d,edx
  40183a:	test   edx,edx
  40183c:	js     401991 <vetor_insere@@Base+0x171>
  401842:	mov    rbx,rdi
  401845:	mov    eax,DWORD PTR [rdi]
  401847:	cmp    eax,r12d
  40184a:	jl     401991 <vetor_insere@@Base+0x171>
  401850:	mov    r15,rsi
  401853:	cmp    eax,DWORD PTR [rbx+0x4]
  401856:	jne    401887 <vetor_insere@@Base+0x67>
  401858:	lea    ecx,[rax+rax*1]
  40185b:	test   eax,eax
  40185d:	mov    eax,0x1
  401862:	cmovne eax,ecx
  401865:	mov    DWORD PTR [rbx+0x4],eax
  401868:	mov    rdi,QWORD PTR [rbx+0x8]
  40186c:	movsxd rsi,eax
  40186f:	shl    rsi,0x3
  401873:	call   401100 <realloc@plt>
  401878:	mov    QWORD PTR [rbx+0x8],rax
  40187c:	test   rax,rax
  40187f:	je     401991 <vetor_insere@@Base+0x171>
  401885:	mov    eax,DWORD PTR [rbx]
  401887:	mov    ecx,eax
  401889:	sub    ecx,r12d
  40188c:	jle    40195a <vetor_insere@@Base+0x13a>
  401892:	cdqe   
  401894:	movsxd rbp,r12d
  401897:	mov    rdx,rbp
  40189a:	not    rdx
  40189d:	add    rdx,rax
  4018a0:	and    rcx,0x7
  4018a4:	je     4018c7 <vetor_insere@@Base+0xa7>
  4018a6:	neg    rcx
  4018a9:	nop    DWORD PTR [rax+0x0]
  4018b0:	mov    rsi,QWORD PTR [rbx+0x8]
  4018b4:	mov    rdi,QWORD PTR [rsi+rax*8-0x8]
  4018b9:	mov    QWORD PTR [rsi+rax*8],rdi
  4018bd:	lea    rax,[rax-0x1]
  4018c1:	add    rcx,0x1
  4018c5:	jne    4018b0 <vetor_insere@@Base+0x90>
  4018c7:	cmp    rdx,0x7
  4018cb:	jb     40195d <vetor_insere@@Base+0x13d>
  4018d1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4018db:	nop    DWORD PTR [rax+rax*1+0x0]
  4018e0:	mov    rcx,QWORD PTR [rbx+0x8]
  4018e4:	mov    rdx,QWORD PTR [rcx+rax*8-0x8]
  4018e9:	mov    QWORD PTR [rcx+rax*8],rdx
  4018ed:	mov    rcx,QWORD PTR [rbx+0x8]
  4018f1:	mov    rdx,QWORD PTR [rcx+rax*8-0x10]
  4018f6:	mov    QWORD PTR [rcx+rax*8-0x8],rdx
  4018fb:	mov    rcx,QWORD PTR [rbx+0x8]
  4018ff:	mov    rdx,QWORD PTR [rcx+rax*8-0x18]
  401904:	mov    QWORD PTR [rcx+rax*8-0x10],rdx
  401909:	mov    rcx,QWORD PTR [rbx+0x8]
  40190d:	mov    rdx,QWORD PTR [rcx+rax*8-0x20]
  401912:	mov    QWORD PTR [rcx+rax*8-0x18],rdx
  401917:	mov    rcx,QWORD PTR [rbx+0x8]
  40191b:	mov    rdx,QWORD PTR [rcx+rax*8-0x28]
  401920:	mov    QWORD PTR [rcx+rax*8-0x20],rdx
  401925:	mov    rcx,QWORD PTR [rbx+0x8]
  401929:	mov    rdx,QWORD PTR [rcx+rax*8-0x30]
  40192e:	mov    QWORD PTR [rcx+rax*8-0x28],rdx
  401933:	mov    rcx,QWORD PTR [rbx+0x8]
  401937:	mov    rdx,QWORD PTR [rcx+rax*8-0x38]
  40193c:	mov    QWORD PTR [rcx+rax*8-0x30],rdx
  401941:	mov    rcx,QWORD PTR [rbx+0x8]
  401945:	mov    rdx,QWORD PTR [rcx+rax*8-0x40]
  40194a:	mov    QWORD PTR [rcx+rax*8-0x38],rdx
  40194f:	lea    rax,[rax-0x8]
  401953:	cmp    rax,rbp
  401956:	jg     4018e0 <vetor_insere@@Base+0xc0>
  401958:	jmp    40195d <vetor_insere@@Base+0x13d>
  40195a:	movsxd rbp,r12d
  40195d:	mov    rdi,r15
  401960:	call   401070 <strlen@plt>
  401965:	lea    rdi,[rax+0x1]
  401969:	mov    esi,0x1
  40196e:	call   4010b0 <calloc@plt>
  401973:	mov    rcx,QWORD PTR [rbx+0x8]
  401977:	mov    QWORD PTR [rcx+rbp*8],rax
  40197b:	test   rax,rax
  40197e:	je     401991 <vetor_insere@@Base+0x171>
  401980:	mov    rdi,rax
  401983:	mov    rsi,r15
  401986:	call   401040 <strcpy@plt>
  40198b:	add    DWORD PTR [rbx],0x1
  40198e:	mov    r14d,r12d
  401991:	mov    eax,r14d
  401994:	pop    rbx
  401995:	pop    r12
  401997:	pop    r14
  401999:	pop    r15
  40199b:	pop    rbp
  40199c:	ret    
  40199d:	nop    DWORD PTR [rax]

00000000004019a0 <vetor_remove@@Base>:
  4019a0:	push   r15
  4019a2:	push   r14
  4019a4:	push   rbx
  4019a5:	mov    eax,0xffffffff
  4019aa:	test   rdi,rdi
  4019ad:	je     401a03 <vetor_remove@@Base+0x63>
  4019af:	mov    ebx,esi
  4019b1:	test   esi,esi
  4019b3:	js     401a03 <vetor_remove@@Base+0x63>
  4019b5:	mov    r14,rdi
  4019b8:	cmp    DWORD PTR [rdi],ebx
  4019ba:	jle    401a03 <vetor_remove@@Base+0x63>
  4019bc:	mov    rax,QWORD PTR [r14+0x8]
  4019c0:	movsxd r15,ebx
  4019c3:	mov    rdi,QWORD PTR [rax+r15*8]
  4019c7:	call   401030 <free@plt>
  4019cc:	lea    ecx,[rbx+0x1]
  4019cf:	movsxd rax,DWORD PTR [r14]
  4019d2:	cmp    ecx,eax
  4019d4:	jge    4019fb <vetor_remove@@Base+0x5b>
  4019d6:	add    r15,0x1
  4019da:	nop    WORD PTR [rax+rax*1+0x0]
  4019e0:	mov    rcx,QWORD PTR [r14+0x8]
  4019e4:	movsxd rbx,ebx
  4019e7:	mov    rdx,QWORD PTR [rcx+r15*8]
  4019eb:	mov    QWORD PTR [rcx+rbx*8],rdx
  4019ef:	add    r15,0x1
  4019f3:	add    ebx,0x1
  4019f6:	cmp    r15,rax
  4019f9:	jl     4019e0 <vetor_remove@@Base+0x40>
  4019fb:	add    eax,0xffffffff
  4019fe:	mov    DWORD PTR [r14],eax
  401a01:	xor    eax,eax
  401a03:	pop    rbx
  401a04:	pop    r14
  401a06:	pop    r15
  401a08:	ret    
  401a09:	nop    DWORD PTR [rax+0x0]

0000000000401a10 <vetor_pesquisa@@Base>:
  401a10:	push   rbp
  401a11:	push   r15
  401a13:	push   r14
  401a15:	push   r12
  401a17:	push   rbx
  401a18:	mov    r14d,0xffffffff
  401a1e:	test   rdi,rdi
  401a21:	je     401a5e <vetor_pesquisa@@Base+0x4e>
  401a23:	movsxd rbp,DWORD PTR [rdi]
  401a26:	test   rbp,rbp
  401a29:	jle    401a5e <vetor_pesquisa@@Base+0x4e>
  401a2b:	mov    r15,rsi
  401a2e:	mov    r12,QWORD PTR [rdi+0x8]
  401a32:	xor    ebx,ebx
  401a34:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401a3e:	xchg   ax,ax
  401a40:	mov    rdi,QWORD PTR [r12+rbx*8]
  401a44:	mov    rsi,r15
  401a47:	call   4010c0 <strcmp@plt>
  401a4c:	test   eax,eax
  401a4e:	je     401a5b <vetor_pesquisa@@Base+0x4b>
  401a50:	add    rbx,0x1
  401a54:	cmp    rbx,rbp
  401a57:	jl     401a40 <vetor_pesquisa@@Base+0x30>
  401a59:	jmp    401a5e <vetor_pesquisa@@Base+0x4e>
  401a5b:	mov    r14d,ebx
  401a5e:	mov    eax,r14d
  401a61:	pop    rbx
  401a62:	pop    r12
  401a64:	pop    r14
  401a66:	pop    r15
  401a68:	pop    rbp
  401a69:	ret    
  401a6a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000401a70 <vetor_ordena@@Base>:
  401a70:	push   rbp
  401a71:	push   r15
  401a73:	push   r14
  401a75:	push   r13
  401a77:	push   r12
  401a79:	push   rbx
  401a7a:	push   rax
  401a7b:	test   rdi,rdi
  401a7e:	je     401b28 <vetor_ordena@@Base+0xb8>
  401a84:	mov    r15,rdi
  401a87:	movsxd rcx,DWORD PTR [rdi]
  401a8a:	xor    eax,eax
  401a8c:	mov    QWORD PTR [rsp],rcx
  401a90:	cmp    rcx,0x2
  401a94:	jl     401b2d <vetor_ordena@@Base+0xbd>
  401a9a:	mov    r14,QWORD PTR [r15+0x8]
  401a9e:	mov    r12d,0x1
  401aa4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401aae:	xchg   ax,ax
  401ab0:	mov    rbx,QWORD PTR [r14+r12*8-0x8]
  401ab5:	mov    rbp,QWORD PTR [r14+r12*8]
  401ab9:	mov    rdi,rbp
  401abc:	mov    rsi,rbx
  401abf:	call   4010c0 <strcmp@plt>
  401ac4:	test   eax,eax
  401ac6:	jns    401b10 <vetor_ordena@@Base+0xa0>
  401ac8:	lea    r13,[r12-0x1]
  401acd:	nop    DWORD PTR [rax]
  401ad0:	lea    rax,[r13+0x1]
  401ad4:	mov    QWORD PTR [r14+r13*8+0x8],rbx
  401ad9:	mov    r14,QWORD PTR [r15+0x8]
  401add:	cmp    rax,0x2
  401ae1:	jl     401b13 <vetor_ordena@@Base+0xa3>
  401ae3:	mov    rbx,QWORD PTR [r14+r13*8-0x8]
  401ae8:	add    r13,0xffffffffffffffff
  401aec:	mov    rdi,rbp
  401aef:	mov    rsi,rbx
  401af2:	call   4010c0 <strcmp@plt>
  401af7:	test   eax,eax
  401af9:	js     401ad0 <vetor_ordena@@Base+0x60>
  401afb:	add    r13,0x1
  401aff:	jmp    401b13 <vetor_ordena@@Base+0xa3>
  401b01:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401b0b:	nop    DWORD PTR [rax+rax*1+0x0]
  401b10:	mov    r13,r12
  401b13:	movsxd rax,r13d
  401b16:	mov    QWORD PTR [r14+rax*8],rbp
  401b1a:	add    r12,0x1
  401b1e:	cmp    r12,QWORD PTR [rsp]
  401b22:	jl     401ab0 <vetor_ordena@@Base+0x40>
  401b24:	xor    eax,eax
  401b26:	jmp    401b2d <vetor_ordena@@Base+0xbd>
  401b28:	mov    eax,0xffffffff
  401b2d:	add    rsp,0x8
  401b31:	pop    rbx
  401b32:	pop    r12
  401b34:	pop    r13
  401b36:	pop    r14
  401b38:	pop    r15
  401b3a:	pop    rbp
  401b3b:	ret    
  401b3c:	nop    DWORD PTR [rax+0x0]

0000000000401b40 <novo_str@@Base>:
  401b40:	push   r14
  401b42:	push   rbx
  401b43:	push   rax
  401b44:	mov    r14,rdi
  401b47:	mov    edi,0x18
  401b4c:	call   4010f0 <malloc@plt>
  401b51:	test   rax,rax
  401b54:	je     401b90 <novo_str@@Base+0x50>
  401b56:	mov    rbx,rax
  401b59:	mov    rdi,r14
  401b5c:	call   401070 <strlen@plt>
  401b61:	lea    rdi,[rax+0x1]
  401b65:	call   4010f0 <malloc@plt>
  401b6a:	mov    QWORD PTR [rbx],rax
  401b6d:	test   rax,rax
  401b70:	je     401b88 <novo_str@@Base+0x48>
  401b72:	mov    rdi,rax
  401b75:	mov    rsi,r14
  401b78:	call   401040 <strcpy@plt>
  401b7d:	vxorps xmm0,xmm0,xmm0
  401b81:	vmovups XMMWORD PTR [rbx+0x8],xmm0
  401b86:	jmp    401b92 <novo_str@@Base+0x52>
  401b88:	mov    rdi,rbx
  401b8b:	call   401030 <free@plt>
  401b90:	xor    ebx,ebx
  401b92:	mov    rax,rbx
  401b95:	add    rsp,0x8
  401b99:	pop    rbx
  401b9a:	pop    r14
  401b9c:	ret    
  401b9d:	nop    DWORD PTR [rax]

0000000000401ba0 <lista_nova@@Base>:
  401ba0:	push   rax
  401ba1:	mov    edi,0x18
  401ba6:	call   4010f0 <malloc@plt>
  401bab:	test   rax,rax
  401bae:	je     401bc1 <lista_nova@@Base+0x21>
  401bb0:	vxorps xmm0,xmm0,xmm0
  401bb4:	vmovups XMMWORD PTR [rax],xmm0
  401bb8:	mov    DWORD PTR [rax+0x10],0x0
  401bbf:	pop    rcx
  401bc0:	ret    
  401bc1:	xor    eax,eax
  401bc3:	pop    rcx
  401bc4:	ret    
  401bc5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401bcf:	nop

0000000000401bd0 <lista_apaga@@Base>:
  401bd0:	test   rdi,rdi
  401bd3:	je     401c0e <lista_apaga@@Base+0x3e>
  401bd5:	push   r14
  401bd7:	push   rbx
  401bd8:	push   rax
  401bd9:	mov    r14,rdi
  401bdc:	jmp    401bf7 <lista_apaga@@Base+0x27>
  401bde:	xchg   ax,ax
  401be0:	mov    rax,QWORD PTR [rbx+0x8]
  401be4:	mov    QWORD PTR [r14],rax
  401be7:	mov    rdi,QWORD PTR [rbx]
  401bea:	call   401030 <free@plt>
  401bef:	mov    rdi,rbx
  401bf2:	call   401030 <free@plt>
  401bf7:	mov    rbx,QWORD PTR [r14]
  401bfa:	test   rbx,rbx
  401bfd:	jne    401be0 <lista_apaga@@Base+0x10>
  401bff:	mov    rdi,r14
  401c02:	add    rsp,0x8
  401c06:	pop    rbx
  401c07:	pop    r14
  401c09:	jmp    401030 <free@plt>
  401c0e:	ret    
  401c0f:	nop

0000000000401c10 <lista_tamanho@@Base>:
  401c10:	test   rdi,rdi
  401c13:	je     401c19 <lista_tamanho@@Base+0x9>
  401c15:	mov    eax,DWORD PTR [rdi+0x10]
  401c18:	ret    
  401c19:	mov    eax,0xffffffff
  401c1e:	ret    
  401c1f:	nop

0000000000401c20 <lista_inicio@@Base>:
  401c20:	test   rdi,rdi
  401c23:	je     401c29 <lista_inicio@@Base+0x9>
  401c25:	mov    rax,QWORD PTR [rdi]
  401c28:	ret    
  401c29:	xor    eax,eax
  401c2b:	ret    
  401c2c:	nop    DWORD PTR [rax+0x0]

0000000000401c30 <lista_fim@@Base>:
  401c30:	test   rdi,rdi
  401c33:	je     401c3a <lista_fim@@Base+0xa>
  401c35:	mov    rax,QWORD PTR [rdi+0x8]
  401c39:	ret    
  401c3a:	xor    eax,eax
  401c3c:	ret    
  401c3d:	nop    DWORD PTR [rax]

0000000000401c40 <lista_insere@@Base>:
  401c40:	push   r15
  401c42:	push   r14
  401c44:	push   r12
  401c46:	push   rbx
  401c47:	push   rax
  401c48:	xor    ebx,ebx
  401c4a:	test   rdi,rdi
  401c4d:	je     401d04 <lista_insere@@Base+0xc4>
  401c53:	mov    r12,rsi
  401c56:	test   rsi,rsi
  401c59:	je     401d04 <lista_insere@@Base+0xc4>
  401c5f:	mov    r15,rdx
  401c62:	mov    r14,rdi
  401c65:	mov    edi,0x18
  401c6a:	call   4010f0 <malloc@plt>
  401c6f:	test   rax,rax
  401c72:	je     401ccc <lista_insere@@Base+0x8c>
  401c74:	mov    rbx,rax
  401c77:	mov    rdi,r12
  401c7a:	call   401070 <strlen@plt>
  401c7f:	lea    rdi,[rax+0x1]
  401c83:	call   4010f0 <malloc@plt>
  401c88:	mov    QWORD PTR [rbx],rax
  401c8b:	test   rax,rax
  401c8e:	je     401cd0 <lista_insere@@Base+0x90>
  401c90:	mov    rdi,rax
  401c93:	mov    rsi,r12
  401c96:	call   401040 <strcpy@plt>
  401c9b:	vxorps xmm0,xmm0,xmm0
  401c9f:	vmovups XMMWORD PTR [rbx+0x8],xmm0
  401ca4:	add    DWORD PTR [r14+0x10],0x1
  401ca9:	mov    rax,QWORD PTR [r14]
  401cac:	test   r15,r15
  401caf:	je     401cdc <lista_insere@@Base+0x9c>
  401cb1:	cmp    rax,r15
  401cb4:	je     401cf3 <lista_insere@@Base+0xb3>
  401cb6:	mov    rax,QWORD PTR [r15+0x10]
  401cba:	mov    QWORD PTR [rbx+0x10],rax
  401cbe:	mov    QWORD PTR [rbx+0x8],r15
  401cc2:	mov    QWORD PTR [rax+0x8],rbx
  401cc6:	mov    QWORD PTR [r15+0x10],rbx
  401cca:	jmp    401d04 <lista_insere@@Base+0xc4>
  401ccc:	xor    ebx,ebx
  401cce:	jmp    401d04 <lista_insere@@Base+0xc4>
  401cd0:	mov    rdi,rbx
  401cd3:	call   401030 <free@plt>
  401cd8:	xor    ebx,ebx
  401cda:	jmp    401d04 <lista_insere@@Base+0xc4>
  401cdc:	test   rax,rax
  401cdf:	je     401cfd <lista_insere@@Base+0xbd>
  401ce1:	mov    rax,QWORD PTR [r14+0x8]
  401ce5:	mov    QWORD PTR [rbx+0x10],rax
  401ce9:	mov    QWORD PTR [rax+0x8],rbx
  401ced:	mov    QWORD PTR [r14+0x8],rbx
  401cf1:	jmp    401d04 <lista_insere@@Base+0xc4>
  401cf3:	mov    QWORD PTR [rbx+0x8],r15
  401cf7:	mov    QWORD PTR [r15+0x10],rbx
  401cfb:	jmp    401d01 <lista_insere@@Base+0xc1>
  401cfd:	mov    QWORD PTR [r14+0x8],rbx
  401d01:	mov    QWORD PTR [r14],rbx
  401d04:	mov    rax,rbx
  401d07:	add    rsp,0x8
  401d0b:	pop    rbx
  401d0c:	pop    r12
  401d0e:	pop    r14
  401d10:	pop    r15
  401d12:	ret    
  401d13:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401d1d:	nop    DWORD PTR [rax]

0000000000401d20 <lista_remove@@Base>:
  401d20:	push   r14
  401d22:	push   rbx
  401d23:	push   rax
  401d24:	xor    r14d,r14d
  401d27:	test   rdi,rdi
  401d2a:	je     401d74 <lista_remove@@Base+0x54>
  401d2c:	mov    rbx,rsi
  401d2f:	test   rsi,rsi
  401d32:	je     401d74 <lista_remove@@Base+0x54>
  401d34:	add    DWORD PTR [rdi+0x10],0xffffffff
  401d38:	mov    r14,QWORD PTR [rbx+0x8]
  401d3c:	mov    rax,QWORD PTR [rbx+0x10]
  401d40:	test   rax,rax
  401d43:	je     401d4f <lista_remove@@Base+0x2f>
  401d45:	mov    QWORD PTR [rax+0x8],r14
  401d49:	mov    r14,QWORD PTR [rbx+0x8]
  401d4d:	jmp    401d52 <lista_remove@@Base+0x32>
  401d4f:	mov    QWORD PTR [rdi],r14
  401d52:	add    rdi,0x8
  401d56:	lea    rcx,[r14+0x10]
  401d5a:	test   r14,r14
  401d5d:	cmove  rcx,rdi
  401d61:	mov    QWORD PTR [rcx],rax
  401d64:	mov    rdi,QWORD PTR [rbx]
  401d67:	call   401030 <free@plt>
  401d6c:	mov    rdi,rbx
  401d6f:	call   401030 <free@plt>
  401d74:	mov    rax,r14
  401d77:	add    rsp,0x8
  401d7b:	pop    rbx
  401d7c:	pop    r14
  401d7e:	ret    
  401d7f:	nop

0000000000401d80 <lista_pesquisa@@Base>:
  401d80:	push   r14
  401d82:	push   rbx
  401d83:	push   rax
  401d84:	xor    ebx,ebx
  401d86:	test   rdi,rdi
  401d89:	je     401dfc <lista_pesquisa@@Base+0x7c>
  401d8b:	mov    r14,rsi
  401d8e:	test   rsi,rsi
  401d91:	je     401dfc <lista_pesquisa@@Base+0x7c>
  401d93:	cmp    edx,0x1
  401d96:	ja     401dfc <lista_pesquisa@@Base+0x7c>
  401d98:	test   edx,edx
  401d9a:	je     401dca <lista_pesquisa@@Base+0x4a>
  401d9c:	mov    rbx,QWORD PTR [rdi+0x8]
  401da0:	test   rbx,rbx
  401da3:	jne    401db9 <lista_pesquisa@@Base+0x39>
  401da5:	jmp    401dfa <lista_pesquisa@@Base+0x7a>
  401da7:	nop    WORD PTR [rax+rax*1+0x0]
  401db0:	mov    rbx,QWORD PTR [rbx+0x10]
  401db4:	test   rbx,rbx
  401db7:	je     401dfa <lista_pesquisa@@Base+0x7a>
  401db9:	mov    rdi,QWORD PTR [rbx]
  401dbc:	mov    rsi,r14
  401dbf:	call   4010c0 <strcmp@plt>
  401dc4:	test   eax,eax
  401dc6:	jne    401db0 <lista_pesquisa@@Base+0x30>
  401dc8:	jmp    401dfc <lista_pesquisa@@Base+0x7c>
  401dca:	mov    rbx,QWORD PTR [rdi]
  401dcd:	test   rbx,rbx
  401dd0:	jne    401de9 <lista_pesquisa@@Base+0x69>
  401dd2:	jmp    401dfa <lista_pesquisa@@Base+0x7a>
  401dd4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401dde:	xchg   ax,ax
  401de0:	mov    rbx,QWORD PTR [rbx+0x8]
  401de4:	test   rbx,rbx
  401de7:	je     401dfa <lista_pesquisa@@Base+0x7a>
  401de9:	mov    rdi,QWORD PTR [rbx]
  401dec:	mov    rsi,r14
  401def:	call   4010c0 <strcmp@plt>
  401df4:	test   eax,eax
  401df6:	jne    401de0 <lista_pesquisa@@Base+0x60>
  401df8:	jmp    401dfc <lista_pesquisa@@Base+0x7c>
  401dfa:	xor    ebx,ebx
  401dfc:	mov    rax,rbx
  401dff:	add    rsp,0x8
  401e03:	pop    rbx
  401e04:	pop    r14
  401e06:	ret    
  401e07:	nop    WORD PTR [rax+rax*1+0x0]

0000000000401e10 <lista_ordena@@Base>:
  401e10:	push   rbp
  401e11:	push   r15
  401e13:	push   r14
  401e15:	push   r13
  401e17:	push   r12
  401e19:	push   rbx
  401e1a:	push   rax
  401e1b:	test   rdi,rdi
  401e1e:	je     401e9c <lista_ordena@@Base+0x8c>
  401e20:	mov    r13,QWORD PTR [rdi]
  401e23:	mov    r12,QWORD PTR [r13+0x8]
  401e27:	xor    r14d,r14d
  401e2a:	test   r12,r12
  401e2d:	je     401ea2 <lista_ordena@@Base+0x92>
  401e2f:	lea    r15,[r13+0x8]
  401e33:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401e3d:	nop    DWORD PTR [rax]
  401e40:	mov    rbx,r13
  401e43:	mov    rbp,r12
  401e46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401e50:	mov    rdi,QWORD PTR [rbp+0x0]
  401e54:	mov    rsi,QWORD PTR [rbx]
  401e57:	call   4010c0 <strcmp@plt>
  401e5c:	mov    rcx,rbp
  401e5f:	test   eax,eax
  401e61:	js     401e66 <lista_ordena@@Base+0x56>
  401e63:	mov    rcx,rbx
  401e66:	mov    rbp,QWORD PTR [rbp+0x8]
  401e6a:	mov    rbx,rcx
  401e6d:	test   rbp,rbp
  401e70:	jne    401e50 <lista_ordena@@Base+0x40>
  401e72:	cmp    rcx,r13
  401e75:	je     401e88 <lista_ordena@@Base+0x78>
  401e77:	mov    rax,QWORD PTR [r13+0x0]
  401e7b:	mov    rdx,QWORD PTR [rcx]
  401e7e:	mov    QWORD PTR [r13+0x0],rdx
  401e82:	mov    QWORD PTR [rcx],rax
  401e85:	mov    r12,QWORD PTR [r15]
  401e88:	mov    r13,r12
  401e8b:	lea    r15,[r12+0x8]
  401e90:	mov    r12,QWORD PTR [r12+0x8]
  401e95:	test   r12,r12
  401e98:	jne    401e40 <lista_ordena@@Base+0x30>
  401e9a:	jmp    401ea2 <lista_ordena@@Base+0x92>
  401e9c:	mov    r14d,0xffffffff
  401ea2:	mov    eax,r14d
  401ea5:	add    rsp,0x8
  401ea9:	pop    rbx
  401eaa:	pop    r12
  401eac:	pop    r13
  401eae:	pop    r14
  401eb0:	pop    r15
  401eb2:	pop    rbp
  401eb3:	ret    
  401eb4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401ebe:	xchg   ax,ax

0000000000401ec0 <lista_inverte@@Base>:
  401ec0:	test   rdi,rdi
  401ec3:	je     401edf <lista_inverte@@Base+0x1f>
  401ec5:	mov    r9d,DWORD PTR [rdi+0x10]
  401ec9:	xor    eax,eax
  401ecb:	cmp    r9d,0x2
  401ecf:	jl     401ff3 <lista_inverte@@Base+0x133>
  401ed5:	jne    401ee5 <lista_inverte@@Base+0x25>
  401ed7:	mov    rcx,QWORD PTR [rdi]
  401eda:	jmp    401fcc <lista_inverte@@Base+0x10c>
  401edf:	mov    eax,0xffffffff
  401ee4:	ret    
  401ee5:	push   rbx
  401ee6:	mov    rbx,QWORD PTR [rdi]
  401ee9:	mov    rsi,QWORD PTR [rbx+0x8]
  401eed:	lea    r8d,[r9-0x2]
  401ef1:	lea    ecx,[r9-0x3]
  401ef5:	and    r8d,0x3
  401ef9:	cmp    ecx,0x3
  401efc:	jb     401f86 <lista_inverte@@Base+0xc6>
  401f02:	lea    r10d,[r8+0x2]
  401f06:	sub    r10d,r9d
  401f09:	nop    DWORD PTR [rax+0x0]
  401f10:	mov    r9,QWORD PTR [rsi+0x8]
  401f14:	mov    r11,QWORD PTR [rsi+0x10]
  401f18:	mov    QWORD PTR [r11+0x8],r9
  401f1c:	mov    rcx,QWORD PTR [rsi+0x8]
  401f20:	mov    QWORD PTR [rcx+0x10],r11
  401f24:	mov    QWORD PTR [rsi+0x8],rbx
  401f28:	mov    QWORD PTR [rbx+0x10],rsi
  401f2c:	mov    r9,QWORD PTR [rcx+0x8]
  401f30:	mov    rbx,QWORD PTR [rcx+0x10]
  401f34:	mov    QWORD PTR [rbx+0x8],r9
  401f38:	mov    rdx,QWORD PTR [rcx+0x8]
  401f3c:	mov    QWORD PTR [rdx+0x10],rbx
  401f40:	mov    QWORD PTR [rcx+0x8],rsi
  401f44:	mov    QWORD PTR [rsi+0x10],rcx
  401f48:	mov    rbx,QWORD PTR [rdx+0x8]
  401f4c:	mov    rsi,QWORD PTR [rdx+0x10]
  401f50:	mov    QWORD PTR [rsi+0x8],rbx
  401f54:	mov    rbx,QWORD PTR [rdx+0x8]
  401f58:	mov    QWORD PTR [rbx+0x10],rsi
  401f5c:	mov    QWORD PTR [rdx+0x8],rcx
  401f60:	mov    QWORD PTR [rcx+0x10],rdx
  401f64:	mov    rsi,QWORD PTR [rbx+0x8]
  401f68:	mov    rcx,QWORD PTR [rbx+0x10]
  401f6c:	mov    QWORD PTR [rcx+0x8],rsi
  401f70:	mov    rsi,QWORD PTR [rbx+0x8]
  401f74:	mov    QWORD PTR [rsi+0x10],rcx
  401f78:	mov    QWORD PTR [rbx+0x8],rdx
  401f7c:	mov    QWORD PTR [rdx+0x10],rbx
  401f80:	add    r10d,0x4
  401f84:	jne    401f10 <lista_inverte@@Base+0x50>
  401f86:	mov    rcx,rbx
  401f89:	test   r8d,r8d
  401f8c:	je     401fc8 <lista_inverte@@Base+0x108>
  401f8e:	neg    r8d
  401f91:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401f9b:	nop    DWORD PTR [rax+rax*1+0x0]
  401fa0:	mov    rcx,rsi
  401fa3:	mov    rsi,QWORD PTR [rsi+0x8]
  401fa7:	mov    rdx,QWORD PTR [rcx+0x10]
  401fab:	mov    QWORD PTR [rdx+0x8],rsi
  401faf:	mov    rsi,QWORD PTR [rcx+0x8]
  401fb3:	mov    QWORD PTR [rsi+0x10],rdx
  401fb7:	mov    QWORD PTR [rcx+0x8],rbx
  401fbb:	mov    QWORD PTR [rbx+0x10],rcx
  401fbf:	mov    rbx,rcx
  401fc2:	add    r8d,0x1
  401fc6:	jne    401fa0 <lista_inverte@@Base+0xe0>
  401fc8:	mov    QWORD PTR [rdi],rcx
  401fcb:	pop    rbx
  401fcc:	mov    rdx,QWORD PTR [rdi+0x8]
  401fd0:	mov    rsi,QWORD PTR [rdx+0x10]
  401fd4:	mov    QWORD PTR [rdi+0x8],rsi
  401fd8:	mov    QWORD PTR [rsi+0x8],0x0
  401fe0:	mov    QWORD PTR [rdx+0x10],0x0
  401fe8:	mov    QWORD PTR [rdx+0x8],rcx
  401fec:	mov    QWORD PTR [rcx+0x10],rdx
  401ff0:	mov    QWORD PTR [rdi],rdx
  401ff3:	ret    
  401ff4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401ffe:	xchg   ax,ax

0000000000402000 <__libc_csu_init@@Base>:
  402000:	endbr64 
  402004:	push   r15
  402006:	lea    r15,[rip+0x2df3]        # 404e00 <_IO_stdin_used@@Base+0x1e00>
  40200d:	push   r14
  40200f:	mov    r14,rdx
  402012:	push   r13
  402014:	mov    r13,rsi
  402017:	push   r12
  402019:	mov    r12d,edi
  40201c:	push   rbp
  40201d:	lea    rbp,[rip+0x2de4]        # 404e08 <_IO_stdin_used@@Base+0x1e08>
  402024:	push   rbx
  402025:	sub    rbp,r15
  402028:	sub    rsp,0x8
  40202c:	call   401000 <free@plt-0x30>
  402031:	sar    rbp,0x3
  402035:	je     402056 <__libc_csu_init@@Base+0x56>
  402037:	xor    ebx,ebx
  402039:	nop    DWORD PTR [rax+0x0]
  402040:	mov    rdx,r14
  402043:	mov    rsi,r13
  402046:	mov    edi,r12d
  402049:	call   QWORD PTR [r15+rbx*8]
  40204d:	add    rbx,0x1
  402051:	cmp    rbp,rbx
  402054:	jne    402040 <__libc_csu_init@@Base+0x40>
  402056:	add    rsp,0x8
  40205a:	pop    rbx
  40205b:	pop    rbp
  40205c:	pop    r12
  40205e:	pop    r13
  402060:	pop    r14
  402062:	pop    r15
  402064:	ret    
  402065:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000402070 <__libc_csu_fini@@Base>:
  402070:	endbr64 
  402074:	ret    

Disassembly of section .fini:

0000000000402078 <.fini>:
  402078:	endbr64 
  40207c:	sub    rsp,0x8
  402080:	add    rsp,0x8
  402084:	ret    
