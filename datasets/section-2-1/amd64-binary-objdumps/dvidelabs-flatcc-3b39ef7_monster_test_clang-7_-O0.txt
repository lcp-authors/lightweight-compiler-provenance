
../repos/dvidelabs-flatcc-3b39ef7/test/monster_test/monster_test:     file format elf64-x86-64


Disassembly of section .init:

0000000000404000 <.init>:
  404000:	endbr64 
  404004:	sub    rsp,0x8
  404008:	mov    rax,QWORD PTR [rip+0x2dfe1]        # 431ff0 <__gmon_start__>
  40400f:	test   rax,rax
  404012:	je     404016 <free@plt-0x1a>
  404014:	call   rax
  404016:	add    rsp,0x8
  40401a:	ret    

Disassembly of section .plt:

0000000000404020 <free@plt-0x10>:
  404020:	push   QWORD PTR [rip+0x2dfe2]        # 432008 <flatcc_builder_padding_base@@Base+0xa458>
  404026:	jmp    QWORD PTR [rip+0x2dfe4]        # 432010 <flatcc_builder_padding_base@@Base+0xa460>
  40402c:	nop    DWORD PTR [rax+0x0]

0000000000404030 <free@plt>:
  404030:	jmp    QWORD PTR [rip+0x2dfe2]        # 432018 <free@GLIBC_2.2.5>
  404036:	push   0x0
  40403b:	jmp    404020 <free@plt-0x10>

0000000000404040 <strncpy@plt>:
  404040:	jmp    QWORD PTR [rip+0x2dfda]        # 432020 <strncpy@GLIBC_2.2.5>
  404046:	push   0x1
  40404b:	jmp    404020 <free@plt-0x10>

0000000000404050 <strncmp@plt>:
  404050:	jmp    QWORD PTR [rip+0x2dfd2]        # 432028 <strncmp@GLIBC_2.2.5>
  404056:	push   0x2
  40405b:	jmp    404020 <free@plt-0x10>

0000000000404060 <strlen@plt>:
  404060:	jmp    QWORD PTR [rip+0x2dfca]        # 432030 <strlen@GLIBC_2.2.5>
  404066:	push   0x3
  40406b:	jmp    404020 <free@plt-0x10>

0000000000404070 <printf@plt>:
  404070:	jmp    QWORD PTR [rip+0x2dfc2]        # 432038 <printf@GLIBC_2.2.5>
  404076:	push   0x4
  40407b:	jmp    404020 <free@plt-0x10>

0000000000404080 <gettimeofday@plt>:
  404080:	jmp    QWORD PTR [rip+0x2dfba]        # 432040 <gettimeofday@GLIBC_2.2.5>
  404086:	push   0x5
  40408b:	jmp    404020 <free@plt-0x10>

0000000000404090 <__assert_fail@plt>:
  404090:	jmp    QWORD PTR [rip+0x2dfb2]        # 432048 <__assert_fail@GLIBC_2.2.5>
  404096:	push   0x6
  40409b:	jmp    404020 <free@plt-0x10>

00000000004040a0 <memset@plt>:
  4040a0:	jmp    QWORD PTR [rip+0x2dfaa]        # 432050 <memset@GLIBC_2.2.5>
  4040a6:	push   0x7
  4040ab:	jmp    404020 <free@plt-0x10>

00000000004040b0 <memchr@plt>:
  4040b0:	jmp    QWORD PTR [rip+0x2dfa2]        # 432058 <memchr@GLIBC_2.2.5>
  4040b6:	push   0x8
  4040bb:	jmp    404020 <free@plt-0x10>

00000000004040c0 <memcmp@plt>:
  4040c0:	jmp    QWORD PTR [rip+0x2df9a]        # 432060 <memcmp@GLIBC_2.2.5>
  4040c6:	push   0x9
  4040cb:	jmp    404020 <free@plt-0x10>

00000000004040d0 <strcmp@plt>:
  4040d0:	jmp    QWORD PTR [rip+0x2df92]        # 432068 <strcmp@GLIBC_2.2.5>
  4040d6:	push   0xa
  4040db:	jmp    404020 <free@plt-0x10>

00000000004040e0 <fprintf@plt>:
  4040e0:	jmp    QWORD PTR [rip+0x2df8a]        # 432070 <fprintf@GLIBC_2.2.5>
  4040e6:	push   0xb
  4040eb:	jmp    404020 <free@plt-0x10>

00000000004040f0 <memcpy@plt>:
  4040f0:	jmp    QWORD PTR [rip+0x2df82]        # 432078 <memcpy@GLIBC_2.14>
  4040f6:	push   0xc
  4040fb:	jmp    404020 <free@plt-0x10>

0000000000404100 <malloc@plt>:
  404100:	jmp    QWORD PTR [rip+0x2df7a]        # 432080 <malloc@GLIBC_2.2.5>
  404106:	push   0xd
  40410b:	jmp    404020 <free@plt-0x10>

0000000000404110 <realloc@plt>:
  404110:	jmp    QWORD PTR [rip+0x2df72]        # 432088 <realloc@GLIBC_2.2.5>
  404116:	push   0xe
  40411b:	jmp    404020 <free@plt-0x10>

0000000000404120 <posix_memalign@plt>:
  404120:	jmp    QWORD PTR [rip+0x2df6a]        # 432090 <posix_memalign@GLIBC_2.2.5>
  404126:	push   0xf
  40412b:	jmp    404020 <free@plt-0x10>

Disassembly of section .text:

0000000000404130 <_start@@Base>:
  404130:	endbr64 
  404134:	xor    ebp,ebp
  404136:	mov    r9,rdx
  404139:	pop    rsi
  40413a:	mov    rdx,rsp
  40413d:	and    rsp,0xfffffffffffffff0
  404141:	push   rax
  404142:	push   rsp
  404143:	mov    r8,0x422200
  40414a:	mov    rcx,0x422190
  404151:	mov    rdi,0x4143f0
  404158:	call   QWORD PTR [rip+0x2de8a]        # 431fe8 <__libc_start_main@GLIBC_2.2.5>
  40415e:	hlt    
  40415f:	nop
  404160:	endbr64 
  404164:	ret    
  404165:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40416f:	nop
  404170:	mov    eax,0x4320b8
  404175:	cmp    rax,0x4320b8
  40417b:	je     404190 <_start@@Base+0x60>
  40417d:	mov    eax,0x0
  404182:	test   rax,rax
  404185:	je     404190 <_start@@Base+0x60>
  404187:	mov    edi,0x4320b8
  40418c:	jmp    rax
  40418e:	xchg   ax,ax
  404190:	ret    
  404191:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40419c:	nop    DWORD PTR [rax+0x0]
  4041a0:	mov    esi,0x4320b8
  4041a5:	sub    rsi,0x4320b8
  4041ac:	mov    rax,rsi
  4041af:	shr    rsi,0x3f
  4041b3:	sar    rax,0x3
  4041b7:	add    rsi,rax
  4041ba:	sar    rsi,1
  4041bd:	je     4041d0 <_start@@Base+0xa0>
  4041bf:	mov    eax,0x0
  4041c4:	test   rax,rax
  4041c7:	je     4041d0 <_start@@Base+0xa0>
  4041c9:	mov    edi,0x4320b8
  4041ce:	jmp    rax
  4041d0:	ret    
  4041d1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4041dc:	nop    DWORD PTR [rax+0x0]
  4041e0:	endbr64 
  4041e4:	cmp    BYTE PTR [rip+0x2decd],0x0        # 4320b8 <__bss_start@@Base>
  4041eb:	jne    404200 <_start@@Base+0xd0>
  4041ed:	push   rbp
  4041ee:	mov    rbp,rsp
  4041f1:	call   404170 <_start@@Base+0x40>
  4041f6:	mov    BYTE PTR [rip+0x2debb],0x1        # 4320b8 <__bss_start@@Base>
  4041fd:	pop    rbp
  4041fe:	ret    
  4041ff:	nop
  404200:	ret    
  404201:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40420c:	nop    DWORD PTR [rax+0x0]
  404210:	endbr64 
  404214:	jmp    4041a0 <_start@@Base+0x70>
  404216:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000404220 <verify_empty_monster@@Base>:
  404220:	push   rbp
  404221:	mov    rbp,rsp
  404224:	sub    rsp,0x60
  404228:	mov    QWORD PTR [rbp-0x10],rdi
  40422c:	mov    rdi,QWORD PTR [rbp-0x10]
  404230:	lea    rsi,[rip+0x1ef49]        # 423180 <_IO_stdin_used@@Base+0x180>
  404237:	call   404430 <verify_empty_monster@@Base+0x210>
  40423c:	mov    QWORD PTR [rbp-0x18],rax
  404240:	mov    rdi,QWORD PTR [rbp-0x10]
  404244:	lea    rsi,[rip+0x1ef3a]        # 423185 <_IO_stdin_used@@Base+0x185>
  40424b:	call   404430 <verify_empty_monster@@Base+0x210>
  404250:	xor    ecx,ecx
  404252:	mov    esi,ecx
  404254:	mov    QWORD PTR [rbp-0x20],rax
  404258:	mov    rdi,QWORD PTR [rbp-0x10]
  40425c:	call   404430 <verify_empty_monster@@Base+0x210>
  404261:	mov    QWORD PTR [rbp-0x28],rax
  404265:	mov    rdi,QWORD PTR [rbp-0x10]
  404269:	lea    rsi,[rip+0x1ef1a]        # 42318a <_IO_stdin_used@@Base+0x18a>
  404270:	call   404430 <verify_empty_monster@@Base+0x210>
  404275:	mov    QWORD PTR [rbp-0x30],rax
  404279:	mov    rdi,QWORD PTR [rbp-0x10]
  40427d:	call   4044a0 <verify_empty_monster@@Base+0x280>
  404282:	mov    QWORD PTR [rbp-0x38],rax
  404286:	cmp    QWORD PTR [rbp-0x18],0x0
  40428b:	jne    4042ae <verify_empty_monster@@Base+0x8e>
  404291:	lea    rdi,[rip+0x1eef8]        # 423190 <_IO_stdin_used@@Base+0x190>
  404298:	mov    al,0x0
  40429a:	call   404070 <printf@plt>
  40429f:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4042a6:	mov    DWORD PTR [rbp-0x3c],eax
  4042a9:	jmp    40441e <verify_empty_monster@@Base+0x1fe>
  4042ae:	cmp    QWORD PTR [rbp-0x20],0x0
  4042b3:	je     4042d6 <verify_empty_monster@@Base+0xb6>
  4042b9:	lea    rdi,[rip+0x1eee7]        # 4231a7 <_IO_stdin_used@@Base+0x1a7>
  4042c0:	mov    al,0x0
  4042c2:	call   404070 <printf@plt>
  4042c7:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4042ce:	mov    DWORD PTR [rbp-0x40],eax
  4042d1:	jmp    40441e <verify_empty_monster@@Base+0x1fe>
  4042d6:	mov    rax,QWORD PTR [rbp-0x28]
  4042da:	cmp    rax,QWORD PTR [rbp-0x18]
  4042de:	je     404301 <verify_empty_monster@@Base+0xe1>
  4042e4:	lea    rdi,[rip+0x1eeea]        # 4231d5 <_IO_stdin_used@@Base+0x1d5>
  4042eb:	mov    al,0x0
  4042ed:	call   404070 <printf@plt>
  4042f2:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4042f9:	mov    DWORD PTR [rbp-0x44],eax
  4042fc:	jmp    40441e <verify_empty_monster@@Base+0x1fe>
  404301:	mov    rax,QWORD PTR [rbp-0x30]
  404305:	cmp    rax,QWORD PTR [rbp-0x18]
  404309:	je     40432c <verify_empty_monster@@Base+0x10c>
  40430f:	lea    rdi,[rip+0x1eef6]        # 42320c <_IO_stdin_used@@Base+0x20c>
  404316:	mov    al,0x0
  404318:	call   404070 <printf@plt>
  40431d:	mov    DWORD PTR [rbp-0x4],0xffffffff
  404324:	mov    DWORD PTR [rbp-0x48],eax
  404327:	jmp    40441e <verify_empty_monster@@Base+0x1fe>
  40432c:	mov    rax,QWORD PTR [rbp-0x38]
  404330:	cmp    rax,QWORD PTR [rbp-0x18]
  404334:	je     404357 <verify_empty_monster@@Base+0x137>
  40433a:	lea    rdi,[rip+0x1eefe]        # 42323f <_IO_stdin_used@@Base+0x23f>
  404341:	mov    al,0x0
  404343:	call   404070 <printf@plt>
  404348:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40434f:	mov    DWORD PTR [rbp-0x4c],eax
  404352:	jmp    40441e <verify_empty_monster@@Base+0x1fe>
  404357:	mov    rdi,QWORD PTR [rbp-0x18]
  40435b:	call   404510 <verify_empty_monster@@Base+0x2f0>
  404360:	movsx  ecx,ax
  404363:	cmp    ecx,0x64
  404366:	je     404389 <verify_empty_monster@@Base+0x169>
  40436c:	lea    rdi,[rip+0x1eef7]        # 42326a <_IO_stdin_used@@Base+0x26a>
  404373:	mov    al,0x0
  404375:	call   404070 <printf@plt>
  40437a:	mov    DWORD PTR [rbp-0x4],0xffffffff
  404381:	mov    DWORD PTR [rbp-0x50],eax
  404384:	jmp    40441e <verify_empty_monster@@Base+0x1fe>
  404389:	mov    rdi,QWORD PTR [rbp-0x18]
  40438d:	call   404630 <verify_empty_monster@@Base+0x410>
  404392:	cmp    eax,0x0
  404395:	je     4043b8 <verify_empty_monster@@Base+0x198>
  40439b:	lea    rdi,[rip+0x1eeeb]        # 42328d <_IO_stdin_used@@Base+0x28d>
  4043a2:	mov    al,0x0
  4043a4:	call   404070 <printf@plt>
  4043a9:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4043b0:	mov    DWORD PTR [rbp-0x54],eax
  4043b3:	jmp    40441e <verify_empty_monster@@Base+0x1fe>
  4043b8:	mov    rdi,QWORD PTR [rbp-0x18]
  4043bc:	call   404710 <verify_empty_monster@@Base+0x4f0>
  4043c1:	cmp    eax,0x0
  4043c4:	je     4043e7 <verify_empty_monster@@Base+0x1c7>
  4043ca:	lea    rdi,[rip+0x1eeda]        # 4232ab <_IO_stdin_used@@Base+0x2ab>
  4043d1:	mov    al,0x0
  4043d3:	call   404070 <printf@plt>
  4043d8:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4043df:	mov    DWORD PTR [rbp-0x58],eax
  4043e2:	jmp    40441e <verify_empty_monster@@Base+0x1fe>
  4043e7:	mov    rdi,QWORD PTR [rbp-0x18]
  4043eb:	call   4047f0 <verify_empty_monster@@Base+0x5d0>
  4043f0:	cmp    rax,0x0
  4043f4:	je     404417 <verify_empty_monster@@Base+0x1f7>
  4043fa:	lea    rdi,[rip+0x1eec6]        # 4232c7 <_IO_stdin_used@@Base+0x2c7>
  404401:	mov    al,0x0
  404403:	call   404070 <printf@plt>
  404408:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40440f:	mov    DWORD PTR [rbp-0x5c],eax
  404412:	jmp    40441e <verify_empty_monster@@Base+0x1fe>
  404417:	mov    DWORD PTR [rbp-0x4],0x0
  40441e:	mov    eax,DWORD PTR [rbp-0x4]
  404421:	add    rsp,0x60
  404425:	pop    rbp
  404426:	ret    
  404427:	nop    WORD PTR [rax+rax*1+0x0]
  404430:	push   rbp
  404431:	mov    rbp,rsp
  404434:	sub    rsp,0x20
  404438:	mov    QWORD PTR [rbp-0x8],rdi
  40443c:	mov    QWORD PTR [rbp-0x10],rsi
  404440:	cmp    QWORD PTR [rbp-0x8],0x0
  404445:	je     404461 <verify_empty_monster@@Base+0x241>
  40444b:	mov    rdi,QWORD PTR [rbp-0x8]
  40444f:	mov    rsi,QWORD PTR [rbp-0x10]
  404453:	call   406a20 <test_typed_table_with_emptystruct@@Base+0x470>
  404458:	cmp    eax,0x0
  40445b:	jne    40446e <verify_empty_monster@@Base+0x24e>
  404461:	xor    eax,eax
  404463:	mov    ecx,eax
  404465:	mov    QWORD PTR [rbp-0x18],rcx
  404469:	jmp    40448e <verify_empty_monster@@Base+0x26e>
  40446e:	mov    rax,QWORD PTR [rbp-0x8]
  404472:	mov    rdi,QWORD PTR [rbp-0x8]
  404476:	mov    QWORD PTR [rbp-0x20],rax
  40447a:	call   414930 <main@@Base+0x540>
  40447f:	mov    eax,eax
  404481:	mov    edi,eax
  404483:	mov    rcx,QWORD PTR [rbp-0x20]
  404487:	add    rcx,rdi
  40448a:	mov    QWORD PTR [rbp-0x18],rcx
  40448e:	mov    rax,QWORD PTR [rbp-0x18]
  404492:	add    rsp,0x20
  404496:	pop    rbp
  404497:	ret    
  404498:	nop    DWORD PTR [rax+rax*1+0x0]
  4044a0:	push   rbp
  4044a1:	mov    rbp,rsp
  4044a4:	sub    rsp,0x20
  4044a8:	mov    QWORD PTR [rbp-0x8],rdi
  4044ac:	lea    rdi,[rip+0x1eccd]        # 423180 <_IO_stdin_used@@Base+0x180>
  4044b3:	mov    QWORD PTR [rbp-0x10],rdi
  4044b7:	cmp    QWORD PTR [rbp-0x8],0x0
  4044bc:	je     4044d8 <verify_empty_monster@@Base+0x2b8>
  4044c2:	mov    rdi,QWORD PTR [rbp-0x8]
  4044c6:	mov    rsi,QWORD PTR [rbp-0x10]
  4044ca:	call   406a20 <test_typed_table_with_emptystruct@@Base+0x470>
  4044cf:	cmp    eax,0x0
  4044d2:	jne    4044e5 <verify_empty_monster@@Base+0x2c5>
  4044d8:	xor    eax,eax
  4044da:	mov    ecx,eax
  4044dc:	mov    QWORD PTR [rbp-0x18],rcx
  4044e0:	jmp    404505 <verify_empty_monster@@Base+0x2e5>
  4044e5:	mov    rax,QWORD PTR [rbp-0x8]
  4044e9:	mov    rdi,QWORD PTR [rbp-0x8]
  4044ed:	mov    QWORD PTR [rbp-0x20],rax
  4044f1:	call   414930 <main@@Base+0x540>
  4044f6:	mov    eax,eax
  4044f8:	mov    edi,eax
  4044fa:	mov    rcx,QWORD PTR [rbp-0x20]
  4044fe:	add    rcx,rdi
  404501:	mov    QWORD PTR [rbp-0x18],rcx
  404505:	mov    rax,QWORD PTR [rbp-0x18]
  404509:	add    rsp,0x20
  40450d:	pop    rbp
  40450e:	ret    
  40450f:	nop
  404510:	push   rbp
  404511:	mov    rbp,rsp
  404514:	sub    rsp,0x30
  404518:	mov    QWORD PTR [rbp-0x8],rdi
  40451c:	mov    WORD PTR [rbp-0xa],0x0
  404522:	cmp    QWORD PTR [rbp-0x8],0x0
  404527:	je     404541 <verify_empty_monster@@Base+0x321>
  40452d:	mov    al,0x1
  40452f:	test   al,0x1
  404531:	jne    40453c <verify_empty_monster@@Base+0x31c>
  404537:	jmp    404541 <verify_empty_monster@@Base+0x321>
  40453c:	jmp    404560 <verify_empty_monster@@Base+0x340>
  404541:	lea    rdi,[rip+0x21550]        # 425a98 <_IO_stdin_used@@Base+0x2a98>
  404548:	lea    rsi,[rip+0x2156f]        # 425abe <_IO_stdin_used@@Base+0x2abe>
  40454f:	mov    edx,0x2b9
  404554:	lea    rcx,[rip+0x215df]        # 425b3a <_IO_stdin_used@@Base+0x2b3a>
  40455b:	call   404090 <__assert_fail@plt>
  404560:	mov    WORD PTR [rbp-0xc],0x2
  404566:	mov    rax,QWORD PTR [rbp-0x8]
  40456a:	mov    rcx,QWORD PTR [rbp-0x8]
  40456e:	mov    rdi,rcx
  404571:	mov    QWORD PTR [rbp-0x20],rax
  404575:	call   414960 <main@@Base+0x570>
  40457a:	xor    edx,edx
  40457c:	mov    ecx,edx
  40457e:	movsxd rdi,eax
  404581:	sub    rcx,rdi
  404584:	mov    rdi,QWORD PTR [rbp-0x20]
  404588:	add    rdi,rcx
  40458b:	mov    QWORD PTR [rbp-0x18],rdi
  40458f:	mov    rcx,QWORD PTR [rbp-0x18]
  404593:	mov    rdi,rcx
  404596:	call   414980 <main@@Base+0x590>
  40459b:	movzx  edx,ax
  40459e:	mov    ecx,edx
  4045a0:	movzx  edx,WORD PTR [rbp-0xc]
  4045a4:	add    edx,0x3
  4045a7:	movsxd rdi,edx
  4045aa:	shl    rdi,0x1
  4045ae:	cmp    rcx,rdi
  4045b1:	jb     4045d9 <verify_empty_monster@@Base+0x3b9>
  4045b7:	mov    rax,QWORD PTR [rbp-0x18]
  4045bb:	movzx  ecx,WORD PTR [rbp-0xc]
  4045bf:	movsxd rdx,ecx
  4045c2:	shl    rdx,0x1
  4045c6:	add    rax,rdx
  4045c9:	add    rax,0x4
  4045cd:	mov    rdi,rax
  4045d0:	call   414980 <main@@Base+0x590>
  4045d5:	mov    WORD PTR [rbp-0xa],ax
  4045d9:	movzx  eax,WORD PTR [rbp-0xa]
  4045dd:	cmp    eax,0x0
  4045e0:	je     404607 <verify_empty_monster@@Base+0x3e7>
  4045e6:	mov    rax,QWORD PTR [rbp-0x8]
  4045ea:	movzx  ecx,WORD PTR [rbp-0xa]
  4045ee:	movsxd rdx,ecx
  4045f1:	add    rax,rdx
  4045f4:	mov    rdi,rax
  4045f7:	call   4149b0 <main@@Base+0x5c0>
  4045fc:	movsx  ecx,ax
  4045ff:	mov    DWORD PTR [rbp-0x24],ecx
  404602:	jmp    404614 <verify_empty_monster@@Base+0x3f4>
  404607:	mov    eax,0x64
  40460c:	mov    DWORD PTR [rbp-0x24],eax
  40460f:	jmp    404614 <verify_empty_monster@@Base+0x3f4>
  404614:	mov    eax,DWORD PTR [rbp-0x24]
  404617:	mov    cx,ax
  40461a:	movsx  eax,cx
  40461d:	add    rsp,0x30
  404621:	pop    rbp
  404622:	ret    
  404623:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40462d:	nop    DWORD PTR [rax]
  404630:	push   rbp
  404631:	mov    rbp,rsp
  404634:	sub    rsp,0x20
  404638:	mov    QWORD PTR [rbp-0x8],rdi
  40463c:	mov    WORD PTR [rbp-0xa],0x0
  404642:	cmp    QWORD PTR [rbp-0x8],0x0
  404647:	je     404661 <verify_empty_monster@@Base+0x441>
  40464d:	mov    al,0x1
  40464f:	test   al,0x1
  404651:	jne    40465c <verify_empty_monster@@Base+0x43c>
  404657:	jmp    404661 <verify_empty_monster@@Base+0x441>
  40465c:	jmp    404680 <verify_empty_monster@@Base+0x460>
  404661:	lea    rdi,[rip+0x21430]        # 425a98 <_IO_stdin_used@@Base+0x2a98>
  404668:	lea    rsi,[rip+0x2144f]        # 425abe <_IO_stdin_used@@Base+0x2abe>
  40466f:	mov    edx,0x2b9
  404674:	lea    rcx,[rip+0x21501]        # 425b7c <_IO_stdin_used@@Base+0x2b7c>
  40467b:	call   404090 <__assert_fail@plt>
  404680:	mov    WORD PTR [rbp-0xc],0x2
  404686:	mov    rax,QWORD PTR [rbp-0x8]
  40468a:	mov    rcx,QWORD PTR [rbp-0x8]
  40468e:	mov    rdi,rcx
  404691:	mov    QWORD PTR [rbp-0x20],rax
  404695:	call   414960 <main@@Base+0x570>
  40469a:	xor    edx,edx
  40469c:	mov    ecx,edx
  40469e:	movsxd rdi,eax
  4046a1:	sub    rcx,rdi
  4046a4:	mov    rdi,QWORD PTR [rbp-0x20]
  4046a8:	add    rdi,rcx
  4046ab:	mov    QWORD PTR [rbp-0x18],rdi
  4046af:	mov    rcx,QWORD PTR [rbp-0x18]
  4046b3:	mov    rdi,rcx
  4046b6:	call   414980 <main@@Base+0x590>
  4046bb:	movzx  edx,ax
  4046be:	mov    ecx,edx
  4046c0:	movzx  edx,WORD PTR [rbp-0xc]
  4046c4:	add    edx,0x3
  4046c7:	movsxd rdi,edx
  4046ca:	shl    rdi,0x1
  4046ce:	cmp    rcx,rdi
  4046d1:	jb     4046f9 <verify_empty_monster@@Base+0x4d9>
  4046d7:	mov    rax,QWORD PTR [rbp-0x18]
  4046db:	movzx  ecx,WORD PTR [rbp-0xc]
  4046df:	movsxd rdx,ecx
  4046e2:	shl    rdx,0x1
  4046e6:	add    rax,rdx
  4046e9:	add    rax,0x4
  4046ed:	mov    rdi,rax
  4046f0:	call   414980 <main@@Base+0x590>
  4046f5:	mov    WORD PTR [rbp-0xa],ax
  4046f9:	movzx  eax,WORD PTR [rbp-0xa]
  4046fd:	cmp    eax,0x0
  404700:	setne  cl
  404703:	and    cl,0x1
  404706:	movzx  eax,cl
  404709:	add    rsp,0x20
  40470d:	pop    rbp
  40470e:	ret    
  40470f:	nop
  404710:	push   rbp
  404711:	mov    rbp,rsp
  404714:	sub    rsp,0x20
  404718:	mov    QWORD PTR [rbp-0x8],rdi
  40471c:	mov    WORD PTR [rbp-0xa],0x0
  404722:	cmp    QWORD PTR [rbp-0x8],0x0
  404727:	je     404741 <verify_empty_monster@@Base+0x521>
  40472d:	mov    al,0x1
  40472f:	test   al,0x1
  404731:	jne    40473c <verify_empty_monster@@Base+0x51c>
  404737:	jmp    404741 <verify_empty_monster@@Base+0x521>
  40473c:	jmp    404760 <verify_empty_monster@@Base+0x540>
  404741:	lea    rdi,[rip+0x21350]        # 425a98 <_IO_stdin_used@@Base+0x2a98>
  404748:	lea    rsi,[rip+0x2136f]        # 425abe <_IO_stdin_used@@Base+0x2abe>
  40474f:	mov    edx,0x2b8
  404754:	lea    rcx,[rip+0x2146a]        # 425bc5 <_IO_stdin_used@@Base+0x2bc5>
  40475b:	call   404090 <__assert_fail@plt>
  404760:	mov    WORD PTR [rbp-0xc],0x0
  404766:	mov    rax,QWORD PTR [rbp-0x8]
  40476a:	mov    rcx,QWORD PTR [rbp-0x8]
  40476e:	mov    rdi,rcx
  404771:	mov    QWORD PTR [rbp-0x20],rax
  404775:	call   414960 <main@@Base+0x570>
  40477a:	xor    edx,edx
  40477c:	mov    ecx,edx
  40477e:	movsxd rdi,eax
  404781:	sub    rcx,rdi
  404784:	mov    rdi,QWORD PTR [rbp-0x20]
  404788:	add    rdi,rcx
  40478b:	mov    QWORD PTR [rbp-0x18],rdi
  40478f:	mov    rcx,QWORD PTR [rbp-0x18]
  404793:	mov    rdi,rcx
  404796:	call   414980 <main@@Base+0x590>
  40479b:	movzx  edx,ax
  40479e:	mov    ecx,edx
  4047a0:	movzx  edx,WORD PTR [rbp-0xc]
  4047a4:	add    edx,0x3
  4047a7:	movsxd rdi,edx
  4047aa:	shl    rdi,0x1
  4047ae:	cmp    rcx,rdi
  4047b1:	jb     4047d9 <verify_empty_monster@@Base+0x5b9>
  4047b7:	mov    rax,QWORD PTR [rbp-0x18]
  4047bb:	movzx  ecx,WORD PTR [rbp-0xc]
  4047bf:	movsxd rdx,ecx
  4047c2:	shl    rdx,0x1
  4047c6:	add    rax,rdx
  4047c9:	add    rax,0x4
  4047cd:	mov    rdi,rax
  4047d0:	call   414980 <main@@Base+0x590>
  4047d5:	mov    WORD PTR [rbp-0xa],ax
  4047d9:	movzx  eax,WORD PTR [rbp-0xa]
  4047dd:	cmp    eax,0x0
  4047e0:	setne  cl
  4047e3:	and    cl,0x1
  4047e6:	movzx  eax,cl
  4047e9:	add    rsp,0x20
  4047ed:	pop    rbp
  4047ee:	ret    
  4047ef:	nop
  4047f0:	push   rbp
  4047f1:	mov    rbp,rsp
  4047f4:	sub    rsp,0x30
  4047f8:	mov    QWORD PTR [rbp-0x10],rdi
  4047fc:	mov    WORD PTR [rbp-0x12],0x0
  404802:	cmp    QWORD PTR [rbp-0x10],0x0
  404807:	je     404821 <verify_empty_monster@@Base+0x601>
  40480d:	mov    al,0x1
  40480f:	test   al,0x1
  404811:	jne    40481c <verify_empty_monster@@Base+0x5fc>
  404817:	jmp    404821 <verify_empty_monster@@Base+0x601>
  40481c:	jmp    404840 <verify_empty_monster@@Base+0x620>
  404821:	lea    rdi,[rip+0x21270]        # 425a98 <_IO_stdin_used@@Base+0x2a98>
  404828:	lea    rsi,[rip+0x2128f]        # 425abe <_IO_stdin_used@@Base+0x2abe>
  40482f:	mov    edx,0x2b8
  404834:	lea    rcx,[rip+0x213d4]        # 425c0f <_IO_stdin_used@@Base+0x2c0f>
  40483b:	call   404090 <__assert_fail@plt>
  404840:	mov    WORD PTR [rbp-0x14],0x0
  404846:	mov    rax,QWORD PTR [rbp-0x10]
  40484a:	mov    rcx,QWORD PTR [rbp-0x10]
  40484e:	mov    rdi,rcx
  404851:	mov    QWORD PTR [rbp-0x28],rax
  404855:	call   414960 <main@@Base+0x570>
  40485a:	xor    edx,edx
  40485c:	mov    ecx,edx
  40485e:	movsxd rdi,eax
  404861:	sub    rcx,rdi
  404864:	mov    rdi,QWORD PTR [rbp-0x28]
  404868:	add    rdi,rcx
  40486b:	mov    QWORD PTR [rbp-0x20],rdi
  40486f:	mov    rcx,QWORD PTR [rbp-0x20]
  404873:	mov    rdi,rcx
  404876:	call   414980 <main@@Base+0x590>
  40487b:	movzx  edx,ax
  40487e:	mov    ecx,edx
  404880:	movzx  edx,WORD PTR [rbp-0x14]
  404884:	add    edx,0x3
  404887:	movsxd rdi,edx
  40488a:	shl    rdi,0x1
  40488e:	cmp    rcx,rdi
  404891:	jb     4048b9 <verify_empty_monster@@Base+0x699>
  404897:	mov    rax,QWORD PTR [rbp-0x20]
  40489b:	movzx  ecx,WORD PTR [rbp-0x14]
  40489f:	movsxd rdx,ecx
  4048a2:	shl    rdx,0x1
  4048a6:	add    rax,rdx
  4048a9:	add    rax,0x4
  4048ad:	mov    rdi,rax
  4048b0:	call   414980 <main@@Base+0x590>
  4048b5:	mov    WORD PTR [rbp-0x12],ax
  4048b9:	cmp    WORD PTR [rbp-0x12],0x0
  4048be:	je     4048db <verify_empty_monster@@Base+0x6bb>
  4048c4:	mov    rax,QWORD PTR [rbp-0x10]
  4048c8:	movzx  ecx,WORD PTR [rbp-0x12]
  4048cc:	movsxd rdx,ecx
  4048cf:	add    rax,rdx
  4048d2:	mov    QWORD PTR [rbp-0x8],rax
  4048d6:	jmp    4048e3 <verify_empty_monster@@Base+0x6c3>
  4048db:	mov    QWORD PTR [rbp-0x8],0x0
  4048e3:	mov    rax,QWORD PTR [rbp-0x8]
  4048e7:	add    rsp,0x30
  4048eb:	pop    rbp
  4048ec:	ret    
  4048ed:	nop    DWORD PTR [rax]

00000000004048f0 <test_enums@@Base>:
  4048f0:	push   rbp
  4048f1:	mov    rbp,rsp
  4048f4:	xor    eax,eax
  4048f6:	mov    QWORD PTR [rbp-0x8],rdi
  4048fa:	pop    rbp
  4048fb:	ret    
  4048fc:	nop    DWORD PTR [rax+0x0]

0000000000404900 <test_type_aliases@@Base>:
  404900:	push   rbp
  404901:	mov    rbp,rsp
  404904:	sub    rsp,0x80
  40490b:	mov    QWORD PTR [rbp-0x8],rdi
  40490f:	mov    DWORD PTR [rbp-0xc],0x0
  404916:	mov    QWORD PTR [rbp-0x18],0x0
  40491e:	mov    rdi,QWORD PTR [rbp-0x8]
  404922:	call   4197b0 <flatcc_builder_reset@@Base>
  404927:	xor    ecx,ecx
  404929:	mov    edi,ecx
  40492b:	mov    rdx,QWORD PTR [rbp-0x8]
  40492f:	mov    QWORD PTR [rbp-0x38],rdi
  404933:	mov    rdi,rdx
  404936:	mov    rsi,QWORD PTR [rbp-0x38]
  40493a:	mov    rdx,QWORD PTR [rbp-0x38]
  40493e:	mov    DWORD PTR [rbp-0x3c],eax
  404941:	call   404bb0 <test_type_aliases@@Base+0x2b0>
  404946:	xor    ecx,ecx
  404948:	mov    edx,ecx
  40494a:	mov    DWORD PTR [rbp-0x2c],eax
  40494d:	mov    rdi,QWORD PTR [rbp-0x8]
  404951:	mov    rsi,rdx
  404954:	call   404bf0 <test_type_aliases@@Base+0x2f0>
  404959:	vmovss xmm0,DWORD PTR [rip+0x1e6a3]        # 423004 <_IO_stdin_used@@Base+0x4>
  404961:	vmovsd xmm1,QWORD PTR [rip+0x1e6b7]        # 423020 <_IO_stdin_used@@Base+0x20>
  404969:	mov    DWORD PTR [rbp-0x30],eax
  40496c:	mov    rdi,QWORD PTR [rbp-0x8]
  404970:	mov    eax,DWORD PTR [rbp-0x2c]
  404973:	mov    ecx,DWORD PTR [rbp-0x30]
  404976:	mov    esi,0xffffff80
  40497b:	mov    edx,0xff
  404980:	mov    r8d,0xffff8000
  404986:	mov    DWORD PTR [rbp-0x40],ecx
  404989:	mov    ecx,r8d
  40498c:	mov    r8d,0xffff
  404992:	mov    r9d,0x80000000
  404998:	mov    DWORD PTR [rsp],0xffffffff
  40499f:	movabs r10,0x8000000000000000
  4049a9:	mov    QWORD PTR [rsp+0x8],r10
  4049ae:	mov    QWORD PTR [rsp+0x10],0xffffffffffffffff
  4049b7:	mov    DWORD PTR [rsp+0x18],eax
  4049bb:	mov    eax,DWORD PTR [rbp-0x40]
  4049be:	mov    DWORD PTR [rsp+0x20],eax
  4049c2:	call   404c40 <test_type_aliases@@Base+0x340>
  4049c7:	mov    rdi,QWORD PTR [rbp-0x8]
  4049cb:	lea    rsi,[rbp-0x20]
  4049cf:	mov    DWORD PTR [rbp-0x44],eax
  4049d2:	call   41ec10 <flatcc_builder_finalize_aligned_buffer@@Base>
  4049d7:	mov    QWORD PTR [rbp-0x18],rax
  4049db:	mov    rdi,QWORD PTR [rbp-0x18]
  4049df:	mov    rsi,QWORD PTR [rbp-0x20]
  4049e3:	call   404d70 <test_type_aliases@@Base+0x470>
  4049e8:	mov    DWORD PTR [rbp-0xc],eax
  4049eb:	cmp    eax,0x0
  4049ee:	je     404a33 <test_type_aliases@@Base+0x133>
  4049f4:	mov    rax,QWORD PTR [rip+0x2d5fd]        # 431ff8 <stderr@GLIBC_2.2.5>
  4049fb:	mov    rsi,QWORD PTR [rbp-0x18]
  4049ff:	mov    rdx,QWORD PTR [rbp-0x20]
  404a03:	mov    rcx,QWORD PTR [rax]
  404a06:	lea    rdi,[rip+0x1e8db]        # 4232e8 <_IO_stdin_used@@Base+0x2e8>
  404a0d:	call   404db0 <test_type_aliases@@Base+0x4b0>
  404a12:	mov    edi,DWORD PTR [rbp-0xc]
  404a15:	call   41fca0 <flatcc_verify_error_string@@Base>
  404a1a:	lea    rdi,[rip+0x1e8da]        # 4232fb <_IO_stdin_used@@Base+0x2fb>
  404a21:	mov    rsi,rax
  404a24:	mov    al,0x0
  404a26:	call   404070 <printf@plt>
  404a2b:	mov    DWORD PTR [rbp-0x48],eax
  404a2e:	jmp    404b75 <test_type_aliases@@Base+0x275>
  404a33:	mov    rdi,QWORD PTR [rbp-0x18]
  404a37:	call   404f80 <test_type_aliases@@Base+0x680>
  404a3c:	mov    QWORD PTR [rbp-0x28],rax
  404a40:	mov    rdi,QWORD PTR [rbp-0x28]
  404a44:	call   404ff0 <test_type_aliases@@Base+0x6f0>
  404a49:	movsx  ecx,al
  404a4c:	cmp    ecx,0xffffff80
  404a4f:	je     404a5a <test_type_aliases@@Base+0x15a>
  404a55:	jmp    404b8a <test_type_aliases@@Base+0x28a>
  404a5a:	mov    rdi,QWORD PTR [rbp-0x28]
  404a5e:	call   405100 <test_type_aliases@@Base+0x800>
  404a63:	movsx  ecx,ax
  404a66:	cmp    ecx,0xffff8000
  404a6c:	je     404a77 <test_type_aliases@@Base+0x177>
  404a72:	jmp    404b8a <test_type_aliases@@Base+0x28a>
  404a77:	mov    rdi,QWORD PTR [rbp-0x28]
  404a7b:	call   405210 <test_type_aliases@@Base+0x910>
  404a80:	cmp    eax,0x80000000
  404a85:	je     404a90 <test_type_aliases@@Base+0x190>
  404a8b:	jmp    404b8a <test_type_aliases@@Base+0x28a>
  404a90:	mov    rdi,QWORD PTR [rbp-0x28]
  404a94:	call   405320 <test_type_aliases@@Base+0xa20>
  404a99:	movabs rdi,0x8000000000000000
  404aa3:	cmp    rax,rdi
  404aa6:	je     404ab1 <test_type_aliases@@Base+0x1b1>
  404aac:	jmp    404b8a <test_type_aliases@@Base+0x28a>
  404ab1:	mov    rdi,QWORD PTR [rbp-0x28]
  404ab5:	call   405430 <test_type_aliases@@Base+0xb30>
  404aba:	movzx  ecx,al
  404abd:	cmp    ecx,0xff
  404ac3:	je     404ace <test_type_aliases@@Base+0x1ce>
  404ac9:	jmp    404b8a <test_type_aliases@@Base+0x28a>
  404ace:	mov    rdi,QWORD PTR [rbp-0x28]
  404ad2:	call   405540 <test_type_aliases@@Base+0xc40>
  404ad7:	movzx  ecx,ax
  404ada:	cmp    ecx,0xffff
  404ae0:	je     404aeb <test_type_aliases@@Base+0x1eb>
  404ae6:	jmp    404b8a <test_type_aliases@@Base+0x28a>
  404aeb:	mov    rdi,QWORD PTR [rbp-0x28]
  404aef:	call   405650 <test_type_aliases@@Base+0xd50>
  404af4:	cmp    eax,0xffffffff
  404af7:	je     404b02 <test_type_aliases@@Base+0x202>
  404afd:	jmp    404b8a <test_type_aliases@@Base+0x28a>
  404b02:	mov    rdi,QWORD PTR [rbp-0x28]
  404b06:	call   405760 <test_type_aliases@@Base+0xe60>
  404b0b:	cmp    rax,0xffffffffffffffff
  404b0f:	je     404b1a <test_type_aliases@@Base+0x21a>
  404b15:	jmp    404b8a <test_type_aliases@@Base+0x28a>
  404b1a:	mov    rdi,QWORD PTR [rbp-0x28]
  404b1e:	call   405870 <test_type_aliases@@Base+0xf70>
  404b23:	vmovss xmm1,DWORD PTR [rip+0x1e4d9]        # 423004 <_IO_stdin_used@@Base+0x4>
  404b2b:	vucomiss xmm0,xmm1
  404b2f:	jne    404b40 <test_type_aliases@@Base+0x240>
  404b35:	jp     404b40 <test_type_aliases@@Base+0x240>
  404b3b:	jmp    404b45 <test_type_aliases@@Base+0x245>
  404b40:	jmp    404b8a <test_type_aliases@@Base+0x28a>
  404b45:	mov    rdi,QWORD PTR [rbp-0x28]
  404b49:	call   405980 <test_type_aliases@@Base+0x1080>
  404b4e:	vmovsd xmm1,QWORD PTR [rip+0x1e4ca]        # 423020 <_IO_stdin_used@@Base+0x20>
  404b56:	vucomisd xmm0,xmm1
  404b5a:	jne    404b6b <test_type_aliases@@Base+0x26b>
  404b60:	jp     404b6b <test_type_aliases@@Base+0x26b>
  404b66:	jmp    404b70 <test_type_aliases@@Base+0x270>
  404b6b:	jmp    404b8a <test_type_aliases@@Base+0x28a>
  404b70:	jmp    404b75 <test_type_aliases@@Base+0x275>
  404b75:	mov    rdi,QWORD PTR [rbp-0x18]
  404b79:	call   41eda0 <flatcc_builder_aligned_free@@Base>
  404b7e:	mov    eax,DWORD PTR [rbp-0xc]
  404b81:	add    rsp,0x80
  404b88:	pop    rbp
  404b89:	ret    
  404b8a:	mov    DWORD PTR [rbp-0xc],0xffffffff
  404b91:	lea    rdi,[rip+0x1e78f]        # 423327 <_IO_stdin_used@@Base+0x327>
  404b98:	mov    al,0x0
  404b9a:	call   404070 <printf@plt>
  404b9f:	mov    DWORD PTR [rbp-0x4c],eax
  404ba2:	jmp    404b75 <test_type_aliases@@Base+0x275>
  404ba7:	nop    WORD PTR [rax+rax*1+0x0]
  404bb0:	push   rbp
  404bb1:	mov    rbp,rsp
  404bb4:	sub    rsp,0x20
  404bb8:	mov    eax,0x1
  404bbd:	mov    ecx,eax
  404bbf:	mov    eax,0xffffffff
  404bc4:	mov    r9d,eax
  404bc7:	mov    QWORD PTR [rbp-0x8],rdi
  404bcb:	mov    QWORD PTR [rbp-0x10],rsi
  404bcf:	mov    QWORD PTR [rbp-0x18],rdx
  404bd3:	mov    rdi,QWORD PTR [rbp-0x8]
  404bd7:	mov    rsi,QWORD PTR [rbp-0x10]
  404bdb:	mov    rdx,QWORD PTR [rbp-0x18]
  404bdf:	mov    r8d,0x1
  404be5:	call   41ccb0 <flatcc_builder_create_vector@@Base>
  404bea:	add    rsp,0x20
  404bee:	pop    rbp
  404bef:	ret    
  404bf0:	push   rbp
  404bf1:	mov    rbp,rsp
  404bf4:	sub    rsp,0x20
  404bf8:	mov    eax,0x8
  404bfd:	mov    ecx,eax
  404bff:	mov    eax,0x1fffffff
  404c04:	mov    r9d,eax
  404c07:	mov    QWORD PTR [rbp-0x8],rdi
  404c0b:	mov    QWORD PTR [rbp-0x10],rsi
  404c0f:	mov    QWORD PTR [rbp-0x18],rdx
  404c13:	mov    rdi,QWORD PTR [rbp-0x8]
  404c17:	mov    rdx,QWORD PTR [rbp-0x10]
  404c1b:	mov    rsi,QWORD PTR [rbp-0x18]
  404c1f:	mov    QWORD PTR [rbp-0x20],rsi
  404c23:	mov    rsi,rdx
  404c26:	mov    rdx,QWORD PTR [rbp-0x20]
  404c2a:	mov    r8d,0x8
  404c30:	call   41ccb0 <flatcc_builder_create_vector@@Base>
  404c35:	add    rsp,0x20
  404c39:	pop    rbp
  404c3a:	ret    
  404c3b:	nop    DWORD PTR [rax+rax*1+0x0]
  404c40:	push   rbp
  404c41:	mov    rbp,rsp
  404c44:	push   r15
  404c46:	push   r14
  404c48:	push   r13
  404c4a:	push   r12
  404c4c:	push   rbx
  404c4d:	sub    rsp,0x88
  404c54:	mov    ax,r8w
  404c58:	mov    r10w,cx
  404c5c:	mov    r11b,dl
  404c5f:	mov    bl,sil
  404c62:	mov    ecx,DWORD PTR [rbp+0x30]
  404c65:	mov    edx,DWORD PTR [rbp+0x28]
  404c68:	mov    r14,QWORD PTR [rbp+0x20]
  404c6c:	mov    r15,QWORD PTR [rbp+0x18]
  404c70:	mov    esi,DWORD PTR [rbp+0x10]
  404c73:	mov    QWORD PTR [rbp-0x38],rdi
  404c77:	mov    BYTE PTR [rbp-0x39],bl
  404c7a:	mov    BYTE PTR [rbp-0x3a],r11b
  404c7e:	mov    WORD PTR [rbp-0x3c],r10w
  404c83:	mov    WORD PTR [rbp-0x3e],ax
  404c87:	mov    DWORD PTR [rbp-0x44],r9d
  404c8b:	vmovss DWORD PTR [rbp-0x48],xmm0
  404c90:	vmovsd QWORD PTR [rbp-0x50],xmm1
  404c95:	mov    rdi,QWORD PTR [rbp-0x38]
  404c99:	lea    r12,[rip+0x1e4e0]        # 423180 <_IO_stdin_used@@Base+0x180>
  404ca0:	mov    DWORD PTR [rbp-0x54],esi
  404ca3:	mov    rsi,r12
  404ca6:	mov    DWORD PTR [rbp-0x58],edx
  404ca9:	mov    QWORD PTR [rbp-0x60],r14
  404cad:	mov    DWORD PTR [rbp-0x64],ecx
  404cb0:	mov    QWORD PTR [rbp-0x70],r15
  404cb4:	call   405bf0 <test_empty_monster@@Base+0x160>
  404cb9:	cmp    eax,0x0
  404cbc:	je     404cce <test_type_aliases@@Base+0x3ce>
  404cc2:	mov    DWORD PTR [rbp-0x2c],0x0
  404cc9:	jmp    404d54 <test_type_aliases@@Base+0x454>
  404cce:	mov    rdi,QWORD PTR [rbp-0x38]
  404cd2:	mov    rax,QWORD PTR [rbp-0x38]
  404cd6:	mov    cl,BYTE PTR [rbp-0x39]
  404cd9:	mov    dl,BYTE PTR [rbp-0x3a]
  404cdc:	mov    si,WORD PTR [rbp-0x3c]
  404ce0:	mov    r8w,WORD PTR [rbp-0x3e]
  404ce5:	mov    r9d,DWORD PTR [rbp-0x44]
  404ce9:	mov    r10d,DWORD PTR [rbp+0x10]
  404ced:	mov    r11,QWORD PTR [rbp+0x18]
  404cf1:	mov    rbx,QWORD PTR [rbp+0x20]
  404cf5:	vmovss xmm0,DWORD PTR [rbp-0x48]
  404cfa:	vmovsd xmm1,QWORD PTR [rbp-0x50]
  404cff:	mov    r14d,DWORD PTR [rbp+0x28]
  404d03:	mov    r15d,DWORD PTR [rbp+0x30]
  404d07:	mov    QWORD PTR [rbp-0x78],rdi
  404d0b:	mov    rdi,rax
  404d0e:	movsx  r12d,cl
  404d12:	mov    WORD PTR [rbp-0x7a],si
  404d16:	mov    esi,r12d
  404d19:	movzx  edx,dl
  404d1c:	mov    r13w,WORD PTR [rbp-0x7a]
  404d21:	movsx  ecx,r13w
  404d25:	movzx  r8d,r8w
  404d29:	mov    DWORD PTR [rsp],r10d
  404d2d:	mov    QWORD PTR [rsp+0x8],r11
  404d32:	mov    QWORD PTR [rsp+0x10],rbx
  404d37:	mov    DWORD PTR [rsp+0x18],r14d
  404d3c:	mov    DWORD PTR [rsp+0x20],r15d
  404d41:	call   414a20 <main@@Base+0x630>
  404d46:	mov    rdi,QWORD PTR [rbp-0x78]
  404d4a:	mov    esi,eax
  404d4c:	call   405ce0 <test_empty_monster@@Base+0x250>
  404d51:	mov    DWORD PTR [rbp-0x2c],eax
  404d54:	mov    eax,DWORD PTR [rbp-0x2c]
  404d57:	add    rsp,0x88
  404d5e:	pop    rbx
  404d5f:	pop    r12
  404d61:	pop    r13
  404d63:	pop    r14
  404d65:	pop    r15
  404d67:	pop    rbp
  404d68:	ret    
  404d69:	nop    DWORD PTR [rax+0x0]
  404d70:	push   rbp
  404d71:	mov    rbp,rsp
  404d74:	sub    rsp,0x10
  404d78:	mov    QWORD PTR [rbp-0x8],rdi
  404d7c:	mov    QWORD PTR [rbp-0x10],rsi
  404d80:	mov    rdi,QWORD PTR [rbp-0x8]
  404d84:	mov    rsi,QWORD PTR [rbp-0x10]
  404d88:	lea    rdx,[rip+0x1e3f1]        # 423180 <_IO_stdin_used@@Base+0x180>
  404d8f:	lea    rcx,[rip+0x1076a]        # 415500 <main@@Base+0x1110>
  404d96:	call   4213a0 <flatcc_verify_table_as_root@@Base>
  404d9b:	add    rsp,0x10
  404d9f:	pop    rbp
  404da0:	ret    
  404da1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404dab:	nop    DWORD PTR [rax+rax*1+0x0]
  404db0:	push   rbp
  404db1:	mov    rbp,rsp
  404db4:	sub    rsp,0x70
  404db8:	mov    QWORD PTR [rbp-0x8],rdi
  404dbc:	mov    QWORD PTR [rbp-0x10],rsi
  404dc0:	mov    QWORD PTR [rbp-0x18],rdx
  404dc4:	mov    QWORD PTR [rbp-0x20],rcx
  404dc8:	mov    rcx,QWORD PTR [rbp-0x10]
  404dcc:	mov    QWORD PTR [rbp-0x48],rcx
  404dd0:	cmp    QWORD PTR [rbp-0x8],0x0
  404dd5:	je     404df4 <test_type_aliases@@Base+0x4f4>
  404ddb:	mov    rdi,QWORD PTR [rbp-0x20]
  404ddf:	mov    rdx,QWORD PTR [rbp-0x8]
  404de3:	lea    rsi,[rip+0x21001]        # 425deb <_IO_stdin_used@@Base+0x2deb>
  404dea:	mov    al,0x0
  404dec:	call   4040e0 <fprintf@plt>
  404df1:	mov    DWORD PTR [rbp-0x4c],eax
  404df4:	mov    DWORD PTR [rbp-0x24],0x0
  404dfb:	mov    eax,DWORD PTR [rbp-0x24]
  404dfe:	mov    rcx,QWORD PTR [rbp-0x18]
  404e02:	mov    edx,ecx
  404e04:	cmp    eax,edx
  404e06:	jae    404f22 <test_type_aliases@@Base+0x622>
  404e0c:	mov    eax,DWORD PTR [rbp-0x24]
  404e0f:	and    eax,0xf
  404e12:	cmp    eax,0x0
  404e15:	jne    404e5b <test_type_aliases@@Base+0x55b>
  404e1b:	cmp    DWORD PTR [rbp-0x24],0x0
  404e1f:	je     404e3e <test_type_aliases@@Base+0x53e>
  404e25:	lea    rdx,[rbp-0x40]
  404e29:	mov    rdi,QWORD PTR [rbp-0x20]
  404e2d:	lea    rsi,[rip+0x20fbc]        # 425df0 <_IO_stdin_used@@Base+0x2df0>
  404e34:	mov    al,0x0
  404e36:	call   4040e0 <fprintf@plt>
  404e3b:	mov    DWORD PTR [rbp-0x50],eax
  404e3e:	mov    rdi,QWORD PTR [rbp-0x20]
  404e42:	mov    edx,DWORD PTR [rbp-0x24]
  404e45:	lea    rsi,[rip+0x20faa]        # 425df6 <_IO_stdin_used@@Base+0x2df6>
  404e4c:	mov    al,0x0
  404e4e:	call   4040e0 <fprintf@plt>
  404e53:	mov    DWORD PTR [rbp-0x54],eax
  404e56:	jmp    404e84 <test_type_aliases@@Base+0x584>
  404e5b:	mov    eax,DWORD PTR [rbp-0x24]
  404e5e:	and    eax,0x7
  404e61:	cmp    eax,0x0
  404e64:	jne    404e7f <test_type_aliases@@Base+0x57f>
  404e6a:	mov    rdi,QWORD PTR [rbp-0x20]
  404e6e:	lea    rsi,[rip+0x20f91]        # 425e06 <_IO_stdin_used@@Base+0x2e06>
  404e75:	mov    al,0x0
  404e77:	call   4040e0 <fprintf@plt>
  404e7c:	mov    DWORD PTR [rbp-0x58],eax
  404e7f:	jmp    404e84 <test_type_aliases@@Base+0x584>
  404e84:	mov    rdi,QWORD PTR [rbp-0x20]
  404e88:	mov    rax,QWORD PTR [rbp-0x48]
  404e8c:	mov    ecx,DWORD PTR [rbp-0x24]
  404e8f:	mov    edx,ecx
  404e91:	movzx  edx,BYTE PTR [rax+rdx*1]
  404e95:	lea    rsi,[rip+0x20f62]        # 425dfe <_IO_stdin_used@@Base+0x2dfe>
  404e9c:	mov    al,0x0
  404e9e:	call   4040e0 <fprintf@plt>
  404ea3:	mov    rsi,QWORD PTR [rbp-0x48]
  404ea7:	mov    ecx,DWORD PTR [rbp-0x24]
  404eaa:	mov    edi,ecx
  404eac:	movzx  ecx,BYTE PTR [rsi+rdi*1]
  404eb0:	cmp    ecx,0x20
  404eb3:	mov    DWORD PTR [rbp-0x5c],eax
  404eb6:	jl     404ed2 <test_type_aliases@@Base+0x5d2>
  404ebc:	mov    rax,QWORD PTR [rbp-0x48]
  404ec0:	mov    ecx,DWORD PTR [rbp-0x24]
  404ec3:	mov    edx,ecx
  404ec5:	movzx  ecx,BYTE PTR [rax+rdx*1]
  404ec9:	cmp    ecx,0x7e
  404ecc:	jle    404ee6 <test_type_aliases@@Base+0x5e6>
  404ed2:	mov    eax,DWORD PTR [rbp-0x24]
  404ed5:	and    eax,0xf
  404ed8:	mov    eax,eax
  404eda:	mov    ecx,eax
  404edc:	mov    BYTE PTR [rbp+rcx*1-0x40],0x2e
  404ee1:	jmp    404f02 <test_type_aliases@@Base+0x602>
  404ee6:	mov    rax,QWORD PTR [rbp-0x48]
  404eea:	mov    ecx,DWORD PTR [rbp-0x24]
  404eed:	mov    edx,ecx
  404eef:	mov    sil,BYTE PTR [rax+rdx*1]
  404ef3:	mov    ecx,DWORD PTR [rbp-0x24]
  404ef6:	and    ecx,0xf
  404ef9:	mov    ecx,ecx
  404efb:	mov    eax,ecx
  404efd:	mov    BYTE PTR [rbp+rax*1-0x40],sil
  404f02:	mov    eax,DWORD PTR [rbp-0x24]
  404f05:	and    eax,0xf
  404f08:	add    eax,0x1
  404f0b:	mov    eax,eax
  404f0d:	mov    ecx,eax
  404f0f:	mov    BYTE PTR [rbp+rcx*1-0x40],0x0
  404f14:	mov    eax,DWORD PTR [rbp-0x24]
  404f17:	add    eax,0x1
  404f1a:	mov    DWORD PTR [rbp-0x24],eax
  404f1d:	jmp    404dfb <test_type_aliases@@Base+0x4fb>
  404f22:	jmp    404f27 <test_type_aliases@@Base+0x627>
  404f27:	mov    eax,DWORD PTR [rbp-0x24]
  404f2a:	and    eax,0xf
  404f2d:	cmp    eax,0x0
  404f30:	je     404f59 <test_type_aliases@@Base+0x659>
  404f36:	mov    rdi,QWORD PTR [rbp-0x20]
  404f3a:	lea    rsi,[rip+0x20ec3]        # 425e04 <_IO_stdin_used@@Base+0x2e04>
  404f41:	mov    al,0x0
  404f43:	call   4040e0 <fprintf@plt>
  404f48:	mov    ecx,DWORD PTR [rbp-0x24]
  404f4b:	add    ecx,0x1
  404f4e:	mov    DWORD PTR [rbp-0x24],ecx
  404f51:	mov    DWORD PTR [rbp-0x60],eax
  404f54:	jmp    404f27 <test_type_aliases@@Base+0x627>
  404f59:	lea    rdx,[rbp-0x40]
  404f5d:	mov    rdi,QWORD PTR [rbp-0x20]
  404f61:	lea    rsi,[rip+0x20e88]        # 425df0 <_IO_stdin_used@@Base+0x2df0>
  404f68:	mov    al,0x0
  404f6a:	call   4040e0 <fprintf@plt>
  404f6f:	mov    DWORD PTR [rbp-0x64],eax
  404f72:	add    rsp,0x70
  404f76:	pop    rbp
  404f77:	ret    
  404f78:	nop    DWORD PTR [rax+rax*1+0x0]
  404f80:	push   rbp
  404f81:	mov    rbp,rsp
  404f84:	sub    rsp,0x20
  404f88:	mov    QWORD PTR [rbp-0x8],rdi
  404f8c:	lea    rdi,[rip+0x1e1ed]        # 423180 <_IO_stdin_used@@Base+0x180>
  404f93:	mov    QWORD PTR [rbp-0x10],rdi
  404f97:	cmp    QWORD PTR [rbp-0x8],0x0
  404f9c:	je     404fb8 <test_type_aliases@@Base+0x6b8>
  404fa2:	mov    rdi,QWORD PTR [rbp-0x8]
  404fa6:	mov    rsi,QWORD PTR [rbp-0x10]
  404faa:	call   406a20 <test_typed_table_with_emptystruct@@Base+0x470>
  404faf:	cmp    eax,0x0
  404fb2:	jne    404fc5 <test_type_aliases@@Base+0x6c5>
  404fb8:	xor    eax,eax
  404fba:	mov    ecx,eax
  404fbc:	mov    QWORD PTR [rbp-0x18],rcx
  404fc0:	jmp    404fe5 <test_type_aliases@@Base+0x6e5>
  404fc5:	mov    rax,QWORD PTR [rbp-0x8]
  404fc9:	mov    rdi,QWORD PTR [rbp-0x8]
  404fcd:	mov    QWORD PTR [rbp-0x20],rax
  404fd1:	call   414930 <main@@Base+0x540>
  404fd6:	mov    eax,eax
  404fd8:	mov    edi,eax
  404fda:	mov    rcx,QWORD PTR [rbp-0x20]
  404fde:	add    rcx,rdi
  404fe1:	mov    QWORD PTR [rbp-0x18],rcx
  404fe5:	mov    rax,QWORD PTR [rbp-0x18]
  404fe9:	add    rsp,0x20
  404fed:	pop    rbp
  404fee:	ret    
  404fef:	nop
  404ff0:	push   rbp
  404ff1:	mov    rbp,rsp
  404ff4:	sub    rsp,0x30
  404ff8:	mov    QWORD PTR [rbp-0x8],rdi
  404ffc:	mov    WORD PTR [rbp-0xa],0x0
  405002:	cmp    QWORD PTR [rbp-0x8],0x0
  405007:	je     405021 <test_type_aliases@@Base+0x721>
  40500d:	mov    al,0x1
  40500f:	test   al,0x1
  405011:	jne    40501c <test_type_aliases@@Base+0x71c>
  405017:	jmp    405021 <test_type_aliases@@Base+0x721>
  40501c:	jmp    405040 <test_type_aliases@@Base+0x740>
  405021:	lea    rdi,[rip+0x20a70]        # 425a98 <_IO_stdin_used@@Base+0x2a98>
  405028:	lea    rsi,[rip+0x20a8f]        # 425abe <_IO_stdin_used@@Base+0x2abe>
  40502f:	mov    edx,0x2ed
  405034:	lea    rcx,[rip+0x20dcd]        # 425e08 <_IO_stdin_used@@Base+0x2e08>
  40503b:	call   404090 <__assert_fail@plt>
  405040:	mov    WORD PTR [rbp-0xc],0x0
  405046:	mov    rax,QWORD PTR [rbp-0x8]
  40504a:	mov    rcx,QWORD PTR [rbp-0x8]
  40504e:	mov    rdi,rcx
  405051:	mov    QWORD PTR [rbp-0x20],rax
  405055:	call   414960 <main@@Base+0x570>
  40505a:	xor    edx,edx
  40505c:	mov    ecx,edx
  40505e:	movsxd rdi,eax
  405061:	sub    rcx,rdi
  405064:	mov    rdi,QWORD PTR [rbp-0x20]
  405068:	add    rdi,rcx
  40506b:	mov    QWORD PTR [rbp-0x18],rdi
  40506f:	mov    rcx,QWORD PTR [rbp-0x18]
  405073:	mov    rdi,rcx
  405076:	call   414980 <main@@Base+0x590>
  40507b:	movzx  edx,ax
  40507e:	mov    ecx,edx
  405080:	movzx  edx,WORD PTR [rbp-0xc]
  405084:	add    edx,0x3
  405087:	movsxd rdi,edx
  40508a:	shl    rdi,0x1
  40508e:	cmp    rcx,rdi
  405091:	jb     4050b9 <test_type_aliases@@Base+0x7b9>
  405097:	mov    rax,QWORD PTR [rbp-0x18]
  40509b:	movzx  ecx,WORD PTR [rbp-0xc]
  40509f:	movsxd rdx,ecx
  4050a2:	shl    rdx,0x1
  4050a6:	add    rax,rdx
  4050a9:	add    rax,0x4
  4050ad:	mov    rdi,rax
  4050b0:	call   414980 <main@@Base+0x590>
  4050b5:	mov    WORD PTR [rbp-0xa],ax
  4050b9:	movzx  eax,WORD PTR [rbp-0xa]
  4050bd:	cmp    eax,0x0
  4050c0:	je     4050e7 <test_type_aliases@@Base+0x7e7>
  4050c6:	mov    rax,QWORD PTR [rbp-0x8]
  4050ca:	movzx  ecx,WORD PTR [rbp-0xa]
  4050ce:	movsxd rdx,ecx
  4050d1:	add    rax,rdx
  4050d4:	mov    rdi,rax
  4050d7:	call   415780 <main@@Base+0x1390>
  4050dc:	movsx  ecx,al
  4050df:	mov    DWORD PTR [rbp-0x24],ecx
  4050e2:	jmp    4050f1 <test_type_aliases@@Base+0x7f1>
  4050e7:	xor    eax,eax
  4050e9:	mov    DWORD PTR [rbp-0x24],eax
  4050ec:	jmp    4050f1 <test_type_aliases@@Base+0x7f1>
  4050f1:	mov    eax,DWORD PTR [rbp-0x24]
  4050f4:	mov    cl,al
  4050f6:	movsx  eax,cl
  4050f9:	add    rsp,0x30
  4050fd:	pop    rbp
  4050fe:	ret    
  4050ff:	nop
  405100:	push   rbp
  405101:	mov    rbp,rsp
  405104:	sub    rsp,0x30
  405108:	mov    QWORD PTR [rbp-0x8],rdi
  40510c:	mov    WORD PTR [rbp-0xa],0x0
  405112:	cmp    QWORD PTR [rbp-0x8],0x0
  405117:	je     405131 <test_type_aliases@@Base+0x831>
  40511d:	mov    al,0x1
  40511f:	test   al,0x1
  405121:	jne    40512c <test_type_aliases@@Base+0x82c>
  405127:	jmp    405131 <test_type_aliases@@Base+0x831>
  40512c:	jmp    405150 <test_type_aliases@@Base+0x850>
  405131:	lea    rdi,[rip+0x20960]        # 425a98 <_IO_stdin_used@@Base+0x2a98>
  405138:	lea    rsi,[rip+0x2097f]        # 425abe <_IO_stdin_used@@Base+0x2abe>
  40513f:	mov    edx,0x2ef
  405144:	lea    rcx,[rip+0x20d06]        # 425e51 <_IO_stdin_used@@Base+0x2e51>
  40514b:	call   404090 <__assert_fail@plt>
  405150:	mov    WORD PTR [rbp-0xc],0x2
  405156:	mov    rax,QWORD PTR [rbp-0x8]
  40515a:	mov    rcx,QWORD PTR [rbp-0x8]
  40515e:	mov    rdi,rcx
  405161:	mov    QWORD PTR [rbp-0x20],rax
  405165:	call   414960 <main@@Base+0x570>
  40516a:	xor    edx,edx
  40516c:	mov    ecx,edx
  40516e:	movsxd rdi,eax
  405171:	sub    rcx,rdi
  405174:	mov    rdi,QWORD PTR [rbp-0x20]
  405178:	add    rdi,rcx
  40517b:	mov    QWORD PTR [rbp-0x18],rdi
  40517f:	mov    rcx,QWORD PTR [rbp-0x18]
  405183:	mov    rdi,rcx
  405186:	call   414980 <main@@Base+0x590>
  40518b:	movzx  edx,ax
  40518e:	mov    ecx,edx
  405190:	movzx  edx,WORD PTR [rbp-0xc]
  405194:	add    edx,0x3
  405197:	movsxd rdi,edx
  40519a:	shl    rdi,0x1
  40519e:	cmp    rcx,rdi
  4051a1:	jb     4051c9 <test_type_aliases@@Base+0x8c9>
  4051a7:	mov    rax,QWORD PTR [rbp-0x18]
  4051ab:	movzx  ecx,WORD PTR [rbp-0xc]
  4051af:	movsxd rdx,ecx
  4051b2:	shl    rdx,0x1
  4051b6:	add    rax,rdx
  4051b9:	add    rax,0x4
  4051bd:	mov    rdi,rax
  4051c0:	call   414980 <main@@Base+0x590>
  4051c5:	mov    WORD PTR [rbp-0xa],ax
  4051c9:	movzx  eax,WORD PTR [rbp-0xa]
  4051cd:	cmp    eax,0x0
  4051d0:	je     4051f7 <test_type_aliases@@Base+0x8f7>
  4051d6:	mov    rax,QWORD PTR [rbp-0x8]
  4051da:	movzx  ecx,WORD PTR [rbp-0xa]
  4051de:	movsxd rdx,ecx
  4051e1:	add    rax,rdx
  4051e4:	mov    rdi,rax
  4051e7:	call   4149b0 <main@@Base+0x5c0>
  4051ec:	movsx  ecx,ax
  4051ef:	mov    DWORD PTR [rbp-0x24],ecx
  4051f2:	jmp    405201 <test_type_aliases@@Base+0x901>
  4051f7:	xor    eax,eax
  4051f9:	mov    DWORD PTR [rbp-0x24],eax
  4051fc:	jmp    405201 <test_type_aliases@@Base+0x901>
  405201:	mov    eax,DWORD PTR [rbp-0x24]
  405204:	mov    cx,ax
  405207:	movsx  eax,cx
  40520a:	add    rsp,0x30
  40520e:	pop    rbp
  40520f:	ret    
  405210:	push   rbp
  405211:	mov    rbp,rsp
  405214:	sub    rsp,0x30
  405218:	mov    QWORD PTR [rbp-0x8],rdi
  40521c:	mov    WORD PTR [rbp-0xa],0x0
  405222:	cmp    QWORD PTR [rbp-0x8],0x0
  405227:	je     405241 <test_type_aliases@@Base+0x941>
  40522d:	mov    al,0x1
  40522f:	test   al,0x1
  405231:	jne    40523c <test_type_aliases@@Base+0x93c>
  405237:	jmp    405241 <test_type_aliases@@Base+0x941>
  40523c:	jmp    405260 <test_type_aliases@@Base+0x960>
  405241:	lea    rdi,[rip+0x20850]        # 425a98 <_IO_stdin_used@@Base+0x2a98>
  405248:	lea    rsi,[rip+0x2086f]        # 425abe <_IO_stdin_used@@Base+0x2abe>
  40524f:	mov    edx,0x2f1
  405254:	lea    rcx,[rip+0x20c41]        # 425e9c <_IO_stdin_used@@Base+0x2e9c>
  40525b:	call   404090 <__assert_fail@plt>
  405260:	mov    WORD PTR [rbp-0xc],0x4
  405266:	mov    rax,QWORD PTR [rbp-0x8]
  40526a:	mov    rcx,QWORD PTR [rbp-0x8]
  40526e:	mov    rdi,rcx
  405271:	mov    QWORD PTR [rbp-0x20],rax
  405275:	call   414960 <main@@Base+0x570>
  40527a:	xor    edx,edx
  40527c:	mov    ecx,edx
  40527e:	movsxd rdi,eax
  405281:	sub    rcx,rdi
  405284:	mov    rdi,QWORD PTR [rbp-0x20]
  405288:	add    rdi,rcx
  40528b:	mov    QWORD PTR [rbp-0x18],rdi
  40528f:	mov    rcx,QWORD PTR [rbp-0x18]
  405293:	mov    rdi,rcx
  405296:	call   414980 <main@@Base+0x590>
  40529b:	movzx  edx,ax
  40529e:	mov    ecx,edx
  4052a0:	movzx  edx,WORD PTR [rbp-0xc]
  4052a4:	add    edx,0x3
  4052a7:	movsxd rdi,edx
  4052aa:	shl    rdi,0x1
  4052ae:	cmp    rcx,rdi
  4052b1:	jb     4052d9 <test_type_aliases@@Base+0x9d9>
  4052b7:	mov    rax,QWORD PTR [rbp-0x18]
  4052bb:	movzx  ecx,WORD PTR [rbp-0xc]
  4052bf:	movsxd rdx,ecx
  4052c2:	shl    rdx,0x1
  4052c6:	add    rax,rdx
  4052c9:	add    rax,0x4
  4052cd:	mov    rdi,rax
  4052d0:	call   414980 <main@@Base+0x590>
  4052d5:	mov    WORD PTR [rbp-0xa],ax
  4052d9:	movzx  eax,WORD PTR [rbp-0xa]
  4052dd:	cmp    eax,0x0
  4052e0:	je     405304 <test_type_aliases@@Base+0xa04>
  4052e6:	mov    rax,QWORD PTR [rbp-0x8]
  4052ea:	movzx  ecx,WORD PTR [rbp-0xa]
  4052ee:	movsxd rdx,ecx
  4052f1:	add    rax,rdx
  4052f4:	mov    rdi,rax
  4052f7:	call   4157c0 <main@@Base+0x13d0>
  4052fc:	mov    DWORD PTR [rbp-0x24],eax
  4052ff:	jmp    40530e <test_type_aliases@@Base+0xa0e>
  405304:	xor    eax,eax
  405306:	mov    DWORD PTR [rbp-0x24],eax
  405309:	jmp    40530e <test_type_aliases@@Base+0xa0e>
  40530e:	mov    eax,DWORD PTR [rbp-0x24]
  405311:	add    rsp,0x30
  405315:	pop    rbp
  405316:	ret    
  405317:	nop    WORD PTR [rax+rax*1+0x0]
  405320:	push   rbp
  405321:	mov    rbp,rsp
  405324:	sub    rsp,0x30
  405328:	mov    QWORD PTR [rbp-0x8],rdi
  40532c:	mov    WORD PTR [rbp-0xa],0x0
  405332:	cmp    QWORD PTR [rbp-0x8],0x0
  405337:	je     405351 <test_type_aliases@@Base+0xa51>
  40533d:	mov    al,0x1
  40533f:	test   al,0x1
  405341:	jne    40534c <test_type_aliases@@Base+0xa4c>
  405347:	jmp    405351 <test_type_aliases@@Base+0xa51>
  40534c:	jmp    405370 <test_type_aliases@@Base+0xa70>
  405351:	lea    rdi,[rip+0x20740]        # 425a98 <_IO_stdin_used@@Base+0x2a98>
  405358:	lea    rsi,[rip+0x2075f]        # 425abe <_IO_stdin_used@@Base+0x2abe>
  40535f:	mov    edx,0x2f3
  405364:	lea    rcx,[rip+0x20b7c]        # 425ee7 <_IO_stdin_used@@Base+0x2ee7>
  40536b:	call   404090 <__assert_fail@plt>
  405370:	mov    WORD PTR [rbp-0xc],0x6
  405376:	mov    rax,QWORD PTR [rbp-0x8]
  40537a:	mov    rcx,QWORD PTR [rbp-0x8]
  40537e:	mov    rdi,rcx
  405381:	mov    QWORD PTR [rbp-0x20],rax
  405385:	call   414960 <main@@Base+0x570>
  40538a:	xor    edx,edx
  40538c:	mov    ecx,edx
  40538e:	movsxd rdi,eax
  405391:	sub    rcx,rdi
  405394:	mov    rdi,QWORD PTR [rbp-0x20]
  405398:	add    rdi,rcx
  40539b:	mov    QWORD PTR [rbp-0x18],rdi
  40539f:	mov    rcx,QWORD PTR [rbp-0x18]
  4053a3:	mov    rdi,rcx
  4053a6:	call   414980 <main@@Base+0x590>
  4053ab:	movzx  edx,ax
  4053ae:	mov    ecx,edx
  4053b0:	movzx  edx,WORD PTR [rbp-0xc]
  4053b4:	add    edx,0x3
  4053b7:	movsxd rdi,edx
  4053ba:	shl    rdi,0x1
  4053be:	cmp    rcx,rdi
  4053c1:	jb     4053e9 <test_type_aliases@@Base+0xae9>
  4053c7:	mov    rax,QWORD PTR [rbp-0x18]
  4053cb:	movzx  ecx,WORD PTR [rbp-0xc]
  4053cf:	movsxd rdx,ecx
  4053d2:	shl    rdx,0x1
  4053d6:	add    rax,rdx
  4053d9:	add    rax,0x4
  4053dd:	mov    rdi,rax
  4053e0:	call   414980 <main@@Base+0x590>
  4053e5:	mov    WORD PTR [rbp-0xa],ax
  4053e9:	movzx  eax,WORD PTR [rbp-0xa]
  4053ed:	cmp    eax,0x0
  4053f0:	je     405415 <test_type_aliases@@Base+0xb15>
  4053f6:	mov    rax,QWORD PTR [rbp-0x8]
  4053fa:	movzx  ecx,WORD PTR [rbp-0xa]
  4053fe:	movsxd rdx,ecx
  405401:	add    rax,rdx
  405404:	mov    rdi,rax
  405407:	call   4157f0 <main@@Base+0x1400>
  40540c:	mov    QWORD PTR [rbp-0x28],rax
  405410:	jmp    405422 <test_type_aliases@@Base+0xb22>
  405415:	xor    eax,eax
  405417:	mov    ecx,eax
  405419:	mov    QWORD PTR [rbp-0x28],rcx
  40541d:	jmp    405422 <test_type_aliases@@Base+0xb22>
  405422:	mov    rax,QWORD PTR [rbp-0x28]
  405426:	add    rsp,0x30
  40542a:	pop    rbp
  40542b:	ret    
  40542c:	nop    DWORD PTR [rax+0x0]
  405430:	push   rbp
  405431:	mov    rbp,rsp
  405434:	sub    rsp,0x30
  405438:	mov    QWORD PTR [rbp-0x8],rdi
  40543c:	mov    WORD PTR [rbp-0xa],0x0
  405442:	cmp    QWORD PTR [rbp-0x8],0x0
  405447:	je     405461 <test_type_aliases@@Base+0xb61>
  40544d:	mov    al,0x1
  40544f:	test   al,0x1
  405451:	jne    40545c <test_type_aliases@@Base+0xb5c>
  405457:	jmp    405461 <test_type_aliases@@Base+0xb61>
  40545c:	jmp    405480 <test_type_aliases@@Base+0xb80>
  405461:	lea    rdi,[rip+0x20630]        # 425a98 <_IO_stdin_used@@Base+0x2a98>
  405468:	lea    rsi,[rip+0x2064f]        # 425abe <_IO_stdin_used@@Base+0x2abe>
  40546f:	mov    edx,0x2ee
  405474:	lea    rcx,[rip+0x20ab7]        # 425f32 <_IO_stdin_used@@Base+0x2f32>
  40547b:	call   404090 <__assert_fail@plt>
  405480:	mov    WORD PTR [rbp-0xc],0x1
  405486:	mov    rax,QWORD PTR [rbp-0x8]
  40548a:	mov    rcx,QWORD PTR [rbp-0x8]
  40548e:	mov    rdi,rcx
  405491:	mov    QWORD PTR [rbp-0x20],rax
  405495:	call   414960 <main@@Base+0x570>
  40549a:	xor    edx,edx
  40549c:	mov    ecx,edx
  40549e:	movsxd rdi,eax
  4054a1:	sub    rcx,rdi
  4054a4:	mov    rdi,QWORD PTR [rbp-0x20]
  4054a8:	add    rdi,rcx
  4054ab:	mov    QWORD PTR [rbp-0x18],rdi
  4054af:	mov    rcx,QWORD PTR [rbp-0x18]
  4054b3:	mov    rdi,rcx
  4054b6:	call   414980 <main@@Base+0x590>
  4054bb:	movzx  edx,ax
  4054be:	mov    ecx,edx
  4054c0:	movzx  edx,WORD PTR [rbp-0xc]
  4054c4:	add    edx,0x3
  4054c7:	movsxd rdi,edx
  4054ca:	shl    rdi,0x1
  4054ce:	cmp    rcx,rdi
  4054d1:	jb     4054f9 <test_type_aliases@@Base+0xbf9>
  4054d7:	mov    rax,QWORD PTR [rbp-0x18]
  4054db:	movzx  ecx,WORD PTR [rbp-0xc]
  4054df:	movsxd rdx,ecx
  4054e2:	shl    rdx,0x1
  4054e6:	add    rax,rdx
  4054e9:	add    rax,0x4
  4054ed:	mov    rdi,rax
  4054f0:	call   414980 <main@@Base+0x590>
  4054f5:	mov    WORD PTR [rbp-0xa],ax
  4054f9:	movzx  eax,WORD PTR [rbp-0xa]
  4054fd:	cmp    eax,0x0
  405500:	je     405527 <test_type_aliases@@Base+0xc27>
  405506:	mov    rax,QWORD PTR [rbp-0x8]
  40550a:	movzx  ecx,WORD PTR [rbp-0xa]
  40550e:	movsxd rdx,ecx
  405511:	add    rax,rdx
  405514:	mov    rdi,rax
  405517:	call   415820 <main@@Base+0x1430>
  40551c:	movzx  ecx,al
  40551f:	mov    DWORD PTR [rbp-0x24],ecx
  405522:	jmp    405531 <test_type_aliases@@Base+0xc31>
  405527:	xor    eax,eax
  405529:	mov    DWORD PTR [rbp-0x24],eax
  40552c:	jmp    405531 <test_type_aliases@@Base+0xc31>
  405531:	mov    eax,DWORD PTR [rbp-0x24]
  405534:	mov    cl,al
  405536:	movzx  eax,cl
  405539:	add    rsp,0x30
  40553d:	pop    rbp
  40553e:	ret    
  40553f:	nop
  405540:	push   rbp
  405541:	mov    rbp,rsp
  405544:	sub    rsp,0x30
  405548:	mov    QWORD PTR [rbp-0x8],rdi
  40554c:	mov    WORD PTR [rbp-0xa],0x0
  405552:	cmp    QWORD PTR [rbp-0x8],0x0
  405557:	je     405571 <test_type_aliases@@Base+0xc71>
  40555d:	mov    al,0x1
  40555f:	test   al,0x1
  405561:	jne    40556c <test_type_aliases@@Base+0xc6c>
  405567:	jmp    405571 <test_type_aliases@@Base+0xc71>
  40556c:	jmp    405590 <test_type_aliases@@Base+0xc90>
  405571:	lea    rdi,[rip+0x20520]        # 425a98 <_IO_stdin_used@@Base+0x2a98>
  405578:	lea    rsi,[rip+0x2053f]        # 425abe <_IO_stdin_used@@Base+0x2abe>
  40557f:	mov    edx,0x2f0
  405584:	lea    rcx,[rip+0x209f1]        # 425f7c <_IO_stdin_used@@Base+0x2f7c>
  40558b:	call   404090 <__assert_fail@plt>
  405590:	mov    WORD PTR [rbp-0xc],0x3
  405596:	mov    rax,QWORD PTR [rbp-0x8]
  40559a:	mov    rcx,QWORD PTR [rbp-0x8]
  40559e:	mov    rdi,rcx
  4055a1:	mov    QWORD PTR [rbp-0x20],rax
  4055a5:	call   414960 <main@@Base+0x570>
  4055aa:	xor    edx,edx
  4055ac:	mov    ecx,edx
  4055ae:	movsxd rdi,eax
  4055b1:	sub    rcx,rdi
  4055b4:	mov    rdi,QWORD PTR [rbp-0x20]
  4055b8:	add    rdi,rcx
  4055bb:	mov    QWORD PTR [rbp-0x18],rdi
  4055bf:	mov    rcx,QWORD PTR [rbp-0x18]
  4055c3:	mov    rdi,rcx
  4055c6:	call   414980 <main@@Base+0x590>
  4055cb:	movzx  edx,ax
  4055ce:	mov    ecx,edx
  4055d0:	movzx  edx,WORD PTR [rbp-0xc]
  4055d4:	add    edx,0x3
  4055d7:	movsxd rdi,edx
  4055da:	shl    rdi,0x1
  4055de:	cmp    rcx,rdi
  4055e1:	jb     405609 <test_type_aliases@@Base+0xd09>
  4055e7:	mov    rax,QWORD PTR [rbp-0x18]
  4055eb:	movzx  ecx,WORD PTR [rbp-0xc]
  4055ef:	movsxd rdx,ecx
  4055f2:	shl    rdx,0x1
  4055f6:	add    rax,rdx
  4055f9:	add    rax,0x4
  4055fd:	mov    rdi,rax
  405600:	call   414980 <main@@Base+0x590>
  405605:	mov    WORD PTR [rbp-0xa],ax
  405609:	movzx  eax,WORD PTR [rbp-0xa]
  40560d:	cmp    eax,0x0
  405610:	je     405637 <test_type_aliases@@Base+0xd37>
  405616:	mov    rax,QWORD PTR [rbp-0x8]
  40561a:	movzx  ecx,WORD PTR [rbp-0xa]
  40561e:	movsxd rdx,ecx
  405621:	add    rax,rdx
  405624:	mov    rdi,rax
  405627:	call   415860 <main@@Base+0x1470>
  40562c:	movzx  ecx,ax
  40562f:	mov    DWORD PTR [rbp-0x24],ecx
  405632:	jmp    405641 <test_type_aliases@@Base+0xd41>
  405637:	xor    eax,eax
  405639:	mov    DWORD PTR [rbp-0x24],eax
  40563c:	jmp    405641 <test_type_aliases@@Base+0xd41>
  405641:	mov    eax,DWORD PTR [rbp-0x24]
  405644:	mov    cx,ax
  405647:	movzx  eax,cx
  40564a:	add    rsp,0x30
  40564e:	pop    rbp
  40564f:	ret    
  405650:	push   rbp
  405651:	mov    rbp,rsp
  405654:	sub    rsp,0x30
  405658:	mov    QWORD PTR [rbp-0x8],rdi
  40565c:	mov    WORD PTR [rbp-0xa],0x0
  405662:	cmp    QWORD PTR [rbp-0x8],0x0
  405667:	je     405681 <test_type_aliases@@Base+0xd81>
  40566d:	mov    al,0x1
  40566f:	test   al,0x1
  405671:	jne    40567c <test_type_aliases@@Base+0xd7c>
  405677:	jmp    405681 <test_type_aliases@@Base+0xd81>
  40567c:	jmp    4056a0 <test_type_aliases@@Base+0xda0>
  405681:	lea    rdi,[rip+0x20410]        # 425a98 <_IO_stdin_used@@Base+0x2a98>
  405688:	lea    rsi,[rip+0x2042f]        # 425abe <_IO_stdin_used@@Base+0x2abe>
  40568f:	mov    edx,0x2f2
  405694:	lea    rcx,[rip+0x2092d]        # 425fc8 <_IO_stdin_used@@Base+0x2fc8>
  40569b:	call   404090 <__assert_fail@plt>
  4056a0:	mov    WORD PTR [rbp-0xc],0x5
  4056a6:	mov    rax,QWORD PTR [rbp-0x8]
  4056aa:	mov    rcx,QWORD PTR [rbp-0x8]
  4056ae:	mov    rdi,rcx
  4056b1:	mov    QWORD PTR [rbp-0x20],rax
  4056b5:	call   414960 <main@@Base+0x570>
  4056ba:	xor    edx,edx
  4056bc:	mov    ecx,edx
  4056be:	movsxd rdi,eax
  4056c1:	sub    rcx,rdi
  4056c4:	mov    rdi,QWORD PTR [rbp-0x20]
  4056c8:	add    rdi,rcx
  4056cb:	mov    QWORD PTR [rbp-0x18],rdi
  4056cf:	mov    rcx,QWORD PTR [rbp-0x18]
  4056d3:	mov    rdi,rcx
  4056d6:	call   414980 <main@@Base+0x590>
  4056db:	movzx  edx,ax
  4056de:	mov    ecx,edx
  4056e0:	movzx  edx,WORD PTR [rbp-0xc]
  4056e4:	add    edx,0x3
  4056e7:	movsxd rdi,edx
  4056ea:	shl    rdi,0x1
  4056ee:	cmp    rcx,rdi
  4056f1:	jb     405719 <test_type_aliases@@Base+0xe19>
  4056f7:	mov    rax,QWORD PTR [rbp-0x18]
  4056fb:	movzx  ecx,WORD PTR [rbp-0xc]
  4056ff:	movsxd rdx,ecx
  405702:	shl    rdx,0x1
  405706:	add    rax,rdx
  405709:	add    rax,0x4
  40570d:	mov    rdi,rax
  405710:	call   414980 <main@@Base+0x590>
  405715:	mov    WORD PTR [rbp-0xa],ax
  405719:	movzx  eax,WORD PTR [rbp-0xa]
  40571d:	cmp    eax,0x0
  405720:	je     405744 <test_type_aliases@@Base+0xe44>
  405726:	mov    rax,QWORD PTR [rbp-0x8]
  40572a:	movzx  ecx,WORD PTR [rbp-0xa]
  40572e:	movsxd rdx,ecx
  405731:	add    rax,rdx
  405734:	mov    rdi,rax
  405737:	call   4158b0 <main@@Base+0x14c0>
  40573c:	mov    DWORD PTR [rbp-0x24],eax
  40573f:	jmp    40574e <test_type_aliases@@Base+0xe4e>
  405744:	xor    eax,eax
  405746:	mov    DWORD PTR [rbp-0x24],eax
  405749:	jmp    40574e <test_type_aliases@@Base+0xe4e>
  40574e:	mov    eax,DWORD PTR [rbp-0x24]
  405751:	add    rsp,0x30
  405755:	pop    rbp
  405756:	ret    
  405757:	nop    WORD PTR [rax+rax*1+0x0]
  405760:	push   rbp
  405761:	mov    rbp,rsp
  405764:	sub    rsp,0x30
  405768:	mov    QWORD PTR [rbp-0x8],rdi
  40576c:	mov    WORD PTR [rbp-0xa],0x0
  405772:	cmp    QWORD PTR [rbp-0x8],0x0
  405777:	je     405791 <test_type_aliases@@Base+0xe91>
  40577d:	mov    al,0x1
  40577f:	test   al,0x1
  405781:	jne    40578c <test_type_aliases@@Base+0xe8c>
  405787:	jmp    405791 <test_type_aliases@@Base+0xe91>
  40578c:	jmp    4057b0 <test_type_aliases@@Base+0xeb0>
  405791:	lea    rdi,[rip+0x20300]        # 425a98 <_IO_stdin_used@@Base+0x2a98>
  405798:	lea    rsi,[rip+0x2031f]        # 425abe <_IO_stdin_used@@Base+0x2abe>
  40579f:	mov    edx,0x2f4
  4057a4:	lea    rcx,[rip+0x20869]        # 426014 <_IO_stdin_used@@Base+0x3014>
  4057ab:	call   404090 <__assert_fail@plt>
  4057b0:	mov    WORD PTR [rbp-0xc],0x7
  4057b6:	mov    rax,QWORD PTR [rbp-0x8]
  4057ba:	mov    rcx,QWORD PTR [rbp-0x8]
  4057be:	mov    rdi,rcx
  4057c1:	mov    QWORD PTR [rbp-0x20],rax
  4057c5:	call   414960 <main@@Base+0x570>
  4057ca:	xor    edx,edx
  4057cc:	mov    ecx,edx
  4057ce:	movsxd rdi,eax
  4057d1:	sub    rcx,rdi
  4057d4:	mov    rdi,QWORD PTR [rbp-0x20]
  4057d8:	add    rdi,rcx
  4057db:	mov    QWORD PTR [rbp-0x18],rdi
  4057df:	mov    rcx,QWORD PTR [rbp-0x18]
  4057e3:	mov    rdi,rcx
  4057e6:	call   414980 <main@@Base+0x590>
  4057eb:	movzx  edx,ax
  4057ee:	mov    ecx,edx
  4057f0:	movzx  edx,WORD PTR [rbp-0xc]
  4057f4:	add    edx,0x3
  4057f7:	movsxd rdi,edx
  4057fa:	shl    rdi,0x1
  4057fe:	cmp    rcx,rdi
  405801:	jb     405829 <test_type_aliases@@Base+0xf29>
  405807:	mov    rax,QWORD PTR [rbp-0x18]
  40580b:	movzx  ecx,WORD PTR [rbp-0xc]
  40580f:	movsxd rdx,ecx
  405812:	shl    rdx,0x1
  405816:	add    rax,rdx
  405819:	add    rax,0x4
  40581d:	mov    rdi,rax
  405820:	call   414980 <main@@Base+0x590>
  405825:	mov    WORD PTR [rbp-0xa],ax
  405829:	movzx  eax,WORD PTR [rbp-0xa]
  40582d:	cmp    eax,0x0
  405830:	je     405855 <test_type_aliases@@Base+0xf55>
  405836:	mov    rax,QWORD PTR [rbp-0x8]
  40583a:	movzx  ecx,WORD PTR [rbp-0xa]
  40583e:	movsxd rdx,ecx
  405841:	add    rax,rdx
  405844:	mov    rdi,rax
  405847:	call   4158e0 <main@@Base+0x14f0>
  40584c:	mov    QWORD PTR [rbp-0x28],rax
  405850:	jmp    405862 <test_type_aliases@@Base+0xf62>
  405855:	xor    eax,eax
  405857:	mov    ecx,eax
  405859:	mov    QWORD PTR [rbp-0x28],rcx
  40585d:	jmp    405862 <test_type_aliases@@Base+0xf62>
  405862:	mov    rax,QWORD PTR [rbp-0x28]
  405866:	add    rsp,0x30
  40586a:	pop    rbp
  40586b:	ret    
  40586c:	nop    DWORD PTR [rax+0x0]
  405870:	push   rbp
  405871:	mov    rbp,rsp
  405874:	sub    rsp,0x30
  405878:	mov    QWORD PTR [rbp-0x8],rdi
  40587c:	mov    WORD PTR [rbp-0xa],0x0
  405882:	cmp    QWORD PTR [rbp-0x8],0x0
  405887:	je     4058a1 <test_type_aliases@@Base+0xfa1>
  40588d:	mov    al,0x1
  40588f:	test   al,0x1
  405891:	jne    40589c <test_type_aliases@@Base+0xf9c>
  405897:	jmp    4058a1 <test_type_aliases@@Base+0xfa1>
  40589c:	jmp    4058c0 <test_type_aliases@@Base+0xfc0>
  4058a1:	lea    rdi,[rip+0x201f0]        # 425a98 <_IO_stdin_used@@Base+0x2a98>
  4058a8:	lea    rsi,[rip+0x2020f]        # 425abe <_IO_stdin_used@@Base+0x2abe>
  4058af:	mov    edx,0x2f5
  4058b4:	lea    rcx,[rip+0x207a5]        # 426060 <_IO_stdin_used@@Base+0x3060>
  4058bb:	call   404090 <__assert_fail@plt>
  4058c0:	mov    WORD PTR [rbp-0xc],0x8
  4058c6:	mov    rax,QWORD PTR [rbp-0x8]
  4058ca:	mov    rcx,QWORD PTR [rbp-0x8]
  4058ce:	mov    rdi,rcx
  4058d1:	mov    QWORD PTR [rbp-0x20],rax
  4058d5:	call   414960 <main@@Base+0x570>
  4058da:	xor    edx,edx
  4058dc:	mov    ecx,edx
  4058de:	movsxd rdi,eax
  4058e1:	sub    rcx,rdi
  4058e4:	mov    rdi,QWORD PTR [rbp-0x20]
  4058e8:	add    rdi,rcx
  4058eb:	mov    QWORD PTR [rbp-0x18],rdi
  4058ef:	mov    rcx,QWORD PTR [rbp-0x18]
  4058f3:	mov    rdi,rcx
  4058f6:	call   414980 <main@@Base+0x590>
  4058fb:	movzx  edx,ax
  4058fe:	mov    ecx,edx
  405900:	movzx  edx,WORD PTR [rbp-0xc]
  405904:	add    edx,0x3
  405907:	movsxd rdi,edx
  40590a:	shl    rdi,0x1
  40590e:	cmp    rcx,rdi
  405911:	jb     405939 <test_type_aliases@@Base+0x1039>
  405917:	mov    rax,QWORD PTR [rbp-0x18]
  40591b:	movzx  ecx,WORD PTR [rbp-0xc]
  40591f:	movsxd rdx,ecx
  405922:	shl    rdx,0x1
  405926:	add    rax,rdx
  405929:	add    rax,0x4
  40592d:	mov    rdi,rax
  405930:	call   414980 <main@@Base+0x590>
  405935:	mov    WORD PTR [rbp-0xa],ax
  405939:	movzx  eax,WORD PTR [rbp-0xa]
  40593d:	cmp    eax,0x0
  405940:	je     405966 <test_type_aliases@@Base+0x1066>
  405946:	mov    rax,QWORD PTR [rbp-0x8]
  40594a:	movzx  ecx,WORD PTR [rbp-0xa]
  40594e:	movsxd rdx,ecx
  405951:	add    rax,rdx
  405954:	mov    rdi,rax
  405957:	call   415910 <main@@Base+0x1520>
  40595c:	vmovss DWORD PTR [rbp-0x24],xmm0
  405961:	jmp    405974 <test_type_aliases@@Base+0x1074>
  405966:	vxorps xmm0,xmm0,xmm0
  40596a:	vmovss DWORD PTR [rbp-0x24],xmm0
  40596f:	jmp    405974 <test_type_aliases@@Base+0x1074>
  405974:	vmovss xmm0,DWORD PTR [rbp-0x24]
  405979:	add    rsp,0x30
  40597d:	pop    rbp
  40597e:	ret    
  40597f:	nop
  405980:	push   rbp
  405981:	mov    rbp,rsp
  405984:	sub    rsp,0x30
  405988:	mov    QWORD PTR [rbp-0x8],rdi
  40598c:	mov    WORD PTR [rbp-0xa],0x0
  405992:	cmp    QWORD PTR [rbp-0x8],0x0
  405997:	je     4059b1 <test_type_aliases@@Base+0x10b1>
  40599d:	mov    al,0x1
  40599f:	test   al,0x1
  4059a1:	jne    4059ac <test_type_aliases@@Base+0x10ac>
  4059a7:	jmp    4059b1 <test_type_aliases@@Base+0x10b1>
  4059ac:	jmp    4059d0 <test_type_aliases@@Base+0x10d0>
  4059b1:	lea    rdi,[rip+0x200e0]        # 425a98 <_IO_stdin_used@@Base+0x2a98>
  4059b8:	lea    rsi,[rip+0x200ff]        # 425abe <_IO_stdin_used@@Base+0x2abe>
  4059bf:	mov    edx,0x2f6
  4059c4:	lea    rcx,[rip+0x206de]        # 4260a9 <_IO_stdin_used@@Base+0x30a9>
  4059cb:	call   404090 <__assert_fail@plt>
  4059d0:	mov    WORD PTR [rbp-0xc],0x9
  4059d6:	mov    rax,QWORD PTR [rbp-0x8]
  4059da:	mov    rcx,QWORD PTR [rbp-0x8]
  4059de:	mov    rdi,rcx
  4059e1:	mov    QWORD PTR [rbp-0x20],rax
  4059e5:	call   414960 <main@@Base+0x570>
  4059ea:	xor    edx,edx
  4059ec:	mov    ecx,edx
  4059ee:	movsxd rdi,eax
  4059f1:	sub    rcx,rdi
  4059f4:	mov    rdi,QWORD PTR [rbp-0x20]
  4059f8:	add    rdi,rcx
  4059fb:	mov    QWORD PTR [rbp-0x18],rdi
  4059ff:	mov    rcx,QWORD PTR [rbp-0x18]
  405a03:	mov    rdi,rcx
  405a06:	call   414980 <main@@Base+0x590>
  405a0b:	movzx  edx,ax
  405a0e:	mov    ecx,edx
  405a10:	movzx  edx,WORD PTR [rbp-0xc]
  405a14:	add    edx,0x3
  405a17:	movsxd rdi,edx
  405a1a:	shl    rdi,0x1
  405a1e:	cmp    rcx,rdi
  405a21:	jb     405a49 <test_type_aliases@@Base+0x1149>
  405a27:	mov    rax,QWORD PTR [rbp-0x18]
  405a2b:	movzx  ecx,WORD PTR [rbp-0xc]
  405a2f:	movsxd rdx,ecx
  405a32:	shl    rdx,0x1
  405a36:	add    rax,rdx
  405a39:	add    rax,0x4
  405a3d:	mov    rdi,rax
  405a40:	call   414980 <main@@Base+0x590>
  405a45:	mov    WORD PTR [rbp-0xa],ax
  405a49:	movzx  eax,WORD PTR [rbp-0xa]
  405a4d:	cmp    eax,0x0
  405a50:	je     405a76 <test_type_aliases@@Base+0x1176>
  405a56:	mov    rax,QWORD PTR [rbp-0x8]
  405a5a:	movzx  ecx,WORD PTR [rbp-0xa]
  405a5e:	movsxd rdx,ecx
  405a61:	add    rax,rdx
  405a64:	mov    rdi,rax
  405a67:	call   415950 <main@@Base+0x1560>
  405a6c:	vmovsd QWORD PTR [rbp-0x28],xmm0
  405a71:	jmp    405a84 <test_type_aliases@@Base+0x1184>
  405a76:	vxorps xmm0,xmm0,xmm0
  405a7a:	vmovsd QWORD PTR [rbp-0x28],xmm0
  405a7f:	jmp    405a84 <test_type_aliases@@Base+0x1184>
  405a84:	vmovsd xmm0,QWORD PTR [rbp-0x28]
  405a89:	add    rsp,0x30
  405a8d:	pop    rbp
  405a8e:	ret    
  405a8f:	nop

0000000000405a90 <test_empty_monster@@Base>:
  405a90:	push   rbp
  405a91:	mov    rbp,rsp
  405a94:	sub    rsp,0x50
  405a98:	mov    QWORD PTR [rbp-0x10],rdi
  405a9c:	mov    rdi,QWORD PTR [rbp-0x10]
  405aa0:	call   4197b0 <flatcc_builder_reset@@Base>
  405aa5:	mov    rdi,QWORD PTR [rbp-0x10]
  405aa9:	lea    rsi,[rip+0x1d6d0]        # 423180 <_IO_stdin_used@@Base+0x180>
  405ab0:	mov    DWORD PTR [rbp-0x2c],eax
  405ab3:	call   405bf0 <test_empty_monster@@Base+0x160>
  405ab8:	mov    rdi,QWORD PTR [rbp-0x10]
  405abc:	mov    DWORD PTR [rbp-0x30],eax
  405abf:	call   405c20 <test_empty_monster@@Base+0x190>
  405ac4:	mov    rdi,QWORD PTR [rbp-0x10]
  405ac8:	lea    rsi,[rip+0x1d888]        # 423357 <_IO_stdin_used@@Base+0x357>
  405acf:	mov    DWORD PTR [rbp-0x34],eax
  405ad2:	call   405c40 <test_empty_monster@@Base+0x1b0>
  405ad7:	mov    rdi,QWORD PTR [rbp-0x10]
  405adb:	mov    DWORD PTR [rbp-0x38],eax
  405ade:	call   405c80 <test_empty_monster@@Base+0x1f0>
  405ae3:	mov    DWORD PTR [rbp-0x18],eax
  405ae6:	mov    rdi,QWORD PTR [rbp-0x10]
  405aea:	mov    esi,DWORD PTR [rbp-0x18]
  405aed:	call   405ce0 <test_empty_monster@@Base+0x250>
  405af2:	mov    rdi,QWORD PTR [rbp-0x10]
  405af6:	lea    rsi,[rbp-0x28]
  405afa:	mov    DWORD PTR [rbp-0x3c],eax
  405afd:	call   41ec10 <flatcc_builder_finalize_aligned_buffer@@Base>
  405b02:	mov    rsi,QWORD PTR [rip+0x2c4ef]        # 431ff8 <stderr@GLIBC_2.2.5>
  405b09:	mov    QWORD PTR [rbp-0x20],rax
  405b0d:	mov    rax,QWORD PTR [rbp-0x20]
  405b11:	mov    rdx,QWORD PTR [rbp-0x28]
  405b15:	mov    rcx,QWORD PTR [rsi]
  405b18:	lea    rdi,[rip+0x1d842]        # 423361 <_IO_stdin_used@@Base+0x361>
  405b1f:	mov    rsi,rax
  405b22:	call   404db0 <test_type_aliases@@Base+0x4b0>
  405b27:	mov    rdi,QWORD PTR [rbp-0x20]
  405b2b:	call   404220 <verify_empty_monster@@Base>
  405b30:	mov    DWORD PTR [rbp-0x14],eax
  405b33:	cmp    eax,0x0
  405b36:	je     405b41 <test_empty_monster@@Base+0xb1>
  405b3c:	jmp    405bc9 <test_empty_monster@@Base+0x139>
  405b41:	mov    rdi,QWORD PTR [rbp-0x20]
  405b45:	mov    rsi,QWORD PTR [rbp-0x28]
  405b49:	lea    rdx,[rip+0x1d630]        # 423180 <_IO_stdin_used@@Base+0x180>
  405b50:	call   405d10 <test_empty_monster@@Base+0x280>
  405b55:	mov    DWORD PTR [rbp-0x14],eax
  405b58:	cmp    eax,0x0
  405b5b:	je     405b89 <test_empty_monster@@Base+0xf9>
  405b61:	mov    edi,DWORD PTR [rbp-0x14]
  405b64:	call   41fca0 <flatcc_verify_error_string@@Base>
  405b69:	lea    rdi,[rip+0x1d805]        # 423375 <_IO_stdin_used@@Base+0x375>
  405b70:	mov    rsi,rax
  405b73:	mov    al,0x0
  405b75:	call   404070 <printf@plt>
  405b7a:	mov    DWORD PTR [rbp-0x4],0xffffffff
  405b81:	mov    DWORD PTR [rbp-0x40],eax
  405b84:	jmp    405bd8 <test_empty_monster@@Base+0x148>
  405b89:	mov    rdi,QWORD PTR [rbp-0x20]
  405b8d:	mov    rax,QWORD PTR [rbp-0x28]
  405b91:	sub    rax,0x1
  405b95:	mov    rsi,rax
  405b98:	call   405d50 <test_empty_monster@@Base+0x2c0>
  405b9d:	xor    ecx,ecx
  405b9f:	cmp    ecx,eax
  405ba1:	jne    405bc4 <test_empty_monster@@Base+0x134>
  405ba7:	lea    rdi,[rip+0x1d7ef]        # 42339d <_IO_stdin_used@@Base+0x39d>
  405bae:	mov    al,0x0
  405bb0:	call   404070 <printf@plt>
  405bb5:	mov    DWORD PTR [rbp-0x4],0xffffffff
  405bbc:	mov    DWORD PTR [rbp-0x44],eax
  405bbf:	jmp    405bd8 <test_empty_monster@@Base+0x148>
  405bc4:	jmp    405bc9 <test_empty_monster@@Base+0x139>
  405bc9:	mov    rdi,QWORD PTR [rbp-0x20]
  405bcd:	call   41eda0 <flatcc_builder_aligned_free@@Base>
  405bd2:	mov    eax,DWORD PTR [rbp-0x14]
  405bd5:	mov    DWORD PTR [rbp-0x4],eax
  405bd8:	mov    eax,DWORD PTR [rbp-0x4]
  405bdb:	add    rsp,0x50
  405bdf:	pop    rbp
  405be0:	ret    
  405be1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405beb:	nop    DWORD PTR [rax+rax*1+0x0]
  405bf0:	push   rbp
  405bf1:	mov    rbp,rsp
  405bf4:	sub    rsp,0x10
  405bf8:	xor    eax,eax
  405bfa:	mov    QWORD PTR [rbp-0x8],rdi
  405bfe:	mov    QWORD PTR [rbp-0x10],rsi
  405c02:	mov    rdi,QWORD PTR [rbp-0x8]
  405c06:	mov    rsi,QWORD PTR [rbp-0x10]
  405c0a:	mov    edx,eax
  405c0c:	mov    ecx,eax
  405c0e:	call   41a790 <flatcc_builder_start_buffer@@Base>
  405c13:	add    rsp,0x10
  405c17:	pop    rbp
  405c18:	ret    
  405c19:	nop    DWORD PTR [rax+0x0]
  405c20:	push   rbp
  405c21:	mov    rbp,rsp
  405c24:	sub    rsp,0x10
  405c28:	mov    QWORD PTR [rbp-0x8],rdi
  405c2c:	mov    rdi,QWORD PTR [rbp-0x8]
  405c30:	mov    esi,0x24
  405c35:	call   41be00 <flatcc_builder_start_table@@Base>
  405c3a:	add    rsp,0x10
  405c3e:	pop    rbp
  405c3f:	ret    
  405c40:	push   rbp
  405c41:	mov    rbp,rsp
  405c44:	sub    rsp,0x20
  405c48:	mov    QWORD PTR [rbp-0x8],rdi
  405c4c:	mov    QWORD PTR [rbp-0x10],rsi
  405c50:	mov    rdi,QWORD PTR [rbp-0x8]
  405c54:	mov    rsi,QWORD PTR [rbp-0x8]
  405c58:	mov    rax,QWORD PTR [rbp-0x10]
  405c5c:	mov    QWORD PTR [rbp-0x18],rdi
  405c60:	mov    rdi,rsi
  405c63:	mov    rsi,rax
  405c66:	call   41e260 <flatcc_builder_create_string_str@@Base>
  405c6b:	mov    rdi,QWORD PTR [rbp-0x18]
  405c6f:	mov    esi,eax
  405c71:	call   40a740 <gen_monster@@Base+0xc00>
  405c76:	add    rsp,0x20
  405c7a:	pop    rbp
  405c7b:	ret    
  405c7c:	nop    DWORD PTR [rax+0x0]
  405c80:	push   rbp
  405c81:	mov    rbp,rsp
  405c84:	sub    rsp,0x10
  405c88:	mov    QWORD PTR [rbp-0x8],rdi
  405c8c:	mov    rdi,QWORD PTR [rbp-0x8]
  405c90:	lea    rsi,[rip+0x1d4a3]        # 42313a <_IO_stdin_used@@Base+0x13a>
  405c97:	mov    edx,0x1
  405c9c:	call   41c9c0 <flatcc_builder_check_required@@Base>
  405ca1:	cmp    eax,0x0
  405ca4:	je     405caf <test_empty_monster@@Base+0x21f>
  405caa:	jmp    405cce <test_empty_monster@@Base+0x23e>
  405caf:	lea    rdi,[rip+0x2043d]        # 4260f3 <_IO_stdin_used@@Base+0x30f3>
  405cb6:	lea    rsi,[rip+0x20058]        # 425d15 <_IO_stdin_used@@Base+0x2d15>
  405cbd:	mov    edx,0xeb
  405cc2:	lea    rcx,[rip+0x204cc]        # 426195 <_IO_stdin_used@@Base+0x3195>
  405cc9:	call   404090 <__assert_fail@plt>
  405cce:	mov    rdi,QWORD PTR [rbp-0x8]
  405cd2:	call   41ca90 <flatcc_builder_end_table@@Base>
  405cd7:	add    rsp,0x10
  405cdb:	pop    rbp
  405cdc:	ret    
  405cdd:	nop    DWORD PTR [rax]
  405ce0:	push   rbp
  405ce1:	mov    rbp,rsp
  405ce4:	sub    rsp,0x10
  405ce8:	mov    QWORD PTR [rbp-0x8],rdi
  405cec:	mov    DWORD PTR [rbp-0xc],esi
  405cef:	mov    rdi,QWORD PTR [rbp-0x8]
  405cf3:	mov    esi,DWORD PTR [rbp-0xc]
  405cf6:	call   41aad0 <flatcc_builder_end_buffer@@Base>
  405cfb:	add    rsp,0x10
  405cff:	pop    rbp
  405d00:	ret    
  405d01:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405d0b:	nop    DWORD PTR [rax+rax*1+0x0]
  405d10:	push   rbp
  405d11:	mov    rbp,rsp
  405d14:	sub    rsp,0x20
  405d18:	mov    QWORD PTR [rbp-0x8],rdi
  405d1c:	mov    QWORD PTR [rbp-0x10],rsi
  405d20:	mov    QWORD PTR [rbp-0x18],rdx
  405d24:	mov    rdi,QWORD PTR [rbp-0x8]
  405d28:	mov    rsi,QWORD PTR [rbp-0x10]
  405d2c:	mov    rdx,QWORD PTR [rbp-0x18]
  405d30:	lea    rcx,[rip+0xfc69]        # 4159a0 <main@@Base+0x15b0>
  405d37:	call   4213a0 <flatcc_verify_table_as_root@@Base>
  405d3c:	add    rsp,0x20
  405d40:	pop    rbp
  405d41:	ret    
  405d42:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405d4c:	nop    DWORD PTR [rax+0x0]
  405d50:	push   rbp
  405d51:	mov    rbp,rsp
  405d54:	sub    rsp,0x10
  405d58:	mov    QWORD PTR [rbp-0x8],rdi
  405d5c:	mov    QWORD PTR [rbp-0x10],rsi
  405d60:	mov    rdi,QWORD PTR [rbp-0x8]
  405d64:	mov    rsi,QWORD PTR [rbp-0x10]
  405d68:	lea    rdx,[rip+0x1d411]        # 423180 <_IO_stdin_used@@Base+0x180>
  405d6f:	lea    rcx,[rip+0xfc2a]        # 4159a0 <main@@Base+0x15b0>
  405d76:	call   4213a0 <flatcc_verify_table_as_root@@Base>
  405d7b:	add    rsp,0x10
  405d7f:	pop    rbp
  405d80:	ret    
  405d81:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405d8b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405d90 <test_typed_empty_monster@@Base>:
  405d90:	push   rbp
  405d91:	mov    rbp,rsp
  405d94:	sub    rsp,0x80
  405d9b:	xor    esi,esi
  405d9d:	mov    eax,0x4
  405da2:	mov    edx,eax
  405da4:	mov    QWORD PTR [rbp-0x8],rdi
  405da8:	mov    DWORD PTR [rbp-0xc],0xffffffff
  405daf:	lea    rdi,[rbp-0x24]
  405db3:	call   4040a0 <memset@plt>
  405db8:	mov    rdi,QWORD PTR [rbp-0x8]
  405dbc:	call   4197b0 <flatcc_builder_reset@@Base>
  405dc1:	mov    rdi,QWORD PTR [rbp-0x8]
  405dc5:	lea    rsi,[rip+0x1d5ff]        # 4233cb <_IO_stdin_used@@Base+0x3cb>
  405dcc:	mov    DWORD PTR [rbp-0x28],eax
  405dcf:	call   405bf0 <test_empty_monster@@Base+0x160>
  405dd4:	mov    rdi,QWORD PTR [rbp-0x8]
  405dd8:	mov    DWORD PTR [rbp-0x2c],eax
  405ddb:	call   405c20 <test_empty_monster@@Base+0x190>
  405de0:	mov    rdi,QWORD PTR [rbp-0x8]
  405de4:	lea    rsi,[rip+0x1d56c]        # 423357 <_IO_stdin_used@@Base+0x357>
  405deb:	mov    DWORD PTR [rbp-0x30],eax
  405dee:	call   405c40 <test_empty_monster@@Base+0x1b0>
  405df3:	mov    rdi,QWORD PTR [rbp-0x8]
  405df7:	mov    DWORD PTR [rbp-0x34],eax
  405dfa:	call   405c80 <test_empty_monster@@Base+0x1f0>
  405dff:	mov    DWORD PTR [rbp-0x10],eax
  405e02:	mov    rdi,QWORD PTR [rbp-0x8]
  405e06:	mov    esi,DWORD PTR [rbp-0x10]
  405e09:	call   405ce0 <test_empty_monster@@Base+0x250>
  405e0e:	mov    rdi,QWORD PTR [rbp-0x8]
  405e12:	lea    rsi,[rbp-0x20]
  405e16:	mov    DWORD PTR [rbp-0x38],eax
  405e19:	call   41ec10 <flatcc_builder_finalize_aligned_buffer@@Base>
  405e1e:	mov    rdx,QWORD PTR [rip+0x2c1d3]        # 431ff8 <stderr@GLIBC_2.2.5>
  405e25:	mov    QWORD PTR [rbp-0x18],rax
  405e29:	mov    rsi,QWORD PTR [rbp-0x18]
  405e2d:	mov    rax,QWORD PTR [rbp-0x20]
  405e31:	mov    rcx,QWORD PTR [rdx]
  405e34:	lea    rdi,[rip+0x1d595]        # 4233d0 <_IO_stdin_used@@Base+0x3d0>
  405e3b:	mov    rdx,rax
  405e3e:	call   404db0 <test_type_aliases@@Base+0x4b0>
  405e43:	mov    rdi,QWORD PTR [rbp-0x18]
  405e47:	call   4060c0 <test_typed_empty_monster@@Base+0x330>
  405e4c:	lea    rdi,[rip+0x1d597]        # 4233ea <_IO_stdin_used@@Base+0x3ea>
  405e53:	mov    DWORD PTR [rbp-0x3c],eax
  405e56:	call   4060e0 <test_typed_empty_monster@@Base+0x350>
  405e5b:	mov    r8d,DWORD PTR [rbp-0x3c]
  405e5f:	cmp    r8d,eax
  405e62:	je     405e8b <test_typed_empty_monster@@Base+0xfb>
  405e68:	mov    rdi,QWORD PTR [rbp-0x18]
  405e6c:	call   4060c0 <test_typed_empty_monster@@Base+0x330>
  405e71:	mov    eax,eax
  405e73:	mov    esi,eax
  405e75:	lea    rdi,[rip+0x1d585]        # 423401 <_IO_stdin_used@@Base+0x401>
  405e7c:	mov    al,0x0
  405e7e:	call   404070 <printf@plt>
  405e83:	mov    DWORD PTR [rbp-0x40],eax
  405e86:	jmp    4060a1 <test_typed_empty_monster@@Base+0x311>
  405e8b:	mov    rdi,QWORD PTR [rbp-0x18]
  405e8f:	mov    esi,0x330ef481
  405e94:	call   406150 <test_typed_empty_monster@@Base+0x3c0>
  405e99:	cmp    eax,0x0
  405e9c:	jne    405eb8 <test_typed_empty_monster@@Base+0x128>
  405ea2:	lea    rdi,[rip+0x1d58a]        # 423433 <_IO_stdin_used@@Base+0x433>
  405ea9:	mov    al,0x0
  405eab:	call   404070 <printf@plt>
  405eb0:	mov    DWORD PTR [rbp-0x44],eax
  405eb3:	jmp    4060a1 <test_typed_empty_monster@@Base+0x311>
  405eb8:	mov    rdi,QWORD PTR [rbp-0x18]
  405ebc:	mov    esi,0x330ef481
  405ec1:	call   406150 <test_typed_empty_monster@@Base+0x3c0>
  405ec6:	cmp    eax,0x0
  405ec9:	jne    405ee5 <test_typed_empty_monster@@Base+0x155>
  405ecf:	lea    rdi,[rip+0x1d55d]        # 423433 <_IO_stdin_used@@Base+0x433>
  405ed6:	mov    al,0x0
  405ed8:	call   404070 <printf@plt>
  405edd:	mov    DWORD PTR [rbp-0x48],eax
  405ee0:	jmp    4060a1 <test_typed_empty_monster@@Base+0x311>
  405ee5:	mov    rdi,QWORD PTR [rbp-0x18]
  405ee9:	call   404220 <verify_empty_monster@@Base>
  405eee:	cmp    eax,0x0
  405ef1:	jne    405f0d <test_typed_empty_monster@@Base+0x17d>
  405ef7:	lea    rdi,[rip+0x1d55e]        # 42345c <_IO_stdin_used@@Base+0x45c>
  405efe:	mov    al,0x0
  405f00:	call   404070 <printf@plt>
  405f05:	mov    DWORD PTR [rbp-0x4c],eax
  405f08:	jmp    4060a1 <test_typed_empty_monster@@Base+0x311>
  405f0d:	mov    rdi,QWORD PTR [rbp-0x18]
  405f11:	mov    rsi,QWORD PTR [rbp-0x20]
  405f15:	lea    rdx,[rip+0x1d4af]        # 4233cb <_IO_stdin_used@@Base+0x3cb>
  405f1c:	call   405d10 <test_empty_monster@@Base+0x280>
  405f21:	mov    DWORD PTR [rbp-0xc],eax
  405f24:	cmp    eax,0x0
  405f27:	je     405f4e <test_typed_empty_monster@@Base+0x1be>
  405f2d:	mov    edi,DWORD PTR [rbp-0xc]
  405f30:	call   41fca0 <flatcc_verify_error_string@@Base>
  405f35:	lea    rdi,[rip+0x1d55f]        # 42349b <_IO_stdin_used@@Base+0x49b>
  405f3c:	mov    rsi,rax
  405f3f:	mov    al,0x0
  405f41:	call   404070 <printf@plt>
  405f46:	mov    DWORD PTR [rbp-0x50],eax
  405f49:	jmp    4060a1 <test_typed_empty_monster@@Base+0x311>
  405f4e:	mov    rdi,QWORD PTR [rbp-0x18]
  405f52:	mov    rsi,QWORD PTR [rbp-0x20]
  405f56:	call   4061a0 <test_typed_empty_monster@@Base+0x410>
  405f5b:	mov    DWORD PTR [rbp-0xc],eax
  405f5e:	cmp    eax,0x0
  405f61:	je     405f88 <test_typed_empty_monster@@Base+0x1f8>
  405f67:	mov    edi,DWORD PTR [rbp-0xc]
  405f6a:	call   41fca0 <flatcc_verify_error_string@@Base>
  405f6f:	lea    rdi,[rip+0x1d525]        # 42349b <_IO_stdin_used@@Base+0x49b>
  405f76:	mov    rsi,rax
  405f79:	mov    al,0x0
  405f7b:	call   404070 <printf@plt>
  405f80:	mov    DWORD PTR [rbp-0x54],eax
  405f83:	jmp    4060a1 <test_typed_empty_monster@@Base+0x311>
  405f88:	mov    rdi,QWORD PTR [rbp-0x18]
  405f8c:	mov    rsi,QWORD PTR [rbp-0x20]
  405f90:	mov    edx,0x330ef481
  405f95:	call   4061e0 <test_typed_empty_monster@@Base+0x450>
  405f9a:	mov    DWORD PTR [rbp-0xc],eax
  405f9d:	cmp    eax,0x0
  405fa0:	je     405fc7 <test_typed_empty_monster@@Base+0x237>
  405fa6:	mov    edi,DWORD PTR [rbp-0xc]
  405fa9:	call   41fca0 <flatcc_verify_error_string@@Base>
  405fae:	lea    rdi,[rip+0x1d514]        # 4234c9 <_IO_stdin_used@@Base+0x4c9>
  405fb5:	mov    rsi,rax
  405fb8:	mov    al,0x0
  405fba:	call   404070 <printf@plt>
  405fbf:	mov    DWORD PTR [rbp-0x58],eax
  405fc2:	jmp    4060a1 <test_typed_empty_monster@@Base+0x311>
  405fc7:	mov    rdi,QWORD PTR [rbp-0x18]
  405fcb:	mov    rsi,QWORD PTR [rbp-0x20]
  405fcf:	lea    rax,[rip+0x1d414]        # 4233ea <_IO_stdin_used@@Base+0x3ea>
  405fd6:	mov    QWORD PTR [rbp-0x60],rdi
  405fda:	mov    rdi,rax
  405fdd:	mov    QWORD PTR [rbp-0x68],rsi
  405fe1:	call   4060e0 <test_typed_empty_monster@@Base+0x350>
  405fe6:	mov    rdi,QWORD PTR [rbp-0x60]
  405fea:	mov    rsi,QWORD PTR [rbp-0x68]
  405fee:	mov    edx,eax
  405ff0:	call   4061e0 <test_typed_empty_monster@@Base+0x450>
  405ff5:	mov    DWORD PTR [rbp-0xc],eax
  405ff8:	cmp    eax,0x0
  405ffb:	je     406022 <test_typed_empty_monster@@Base+0x292>
  406001:	mov    edi,DWORD PTR [rbp-0xc]
  406004:	call   41fca0 <flatcc_verify_error_string@@Base>
  406009:	lea    rdi,[rip+0x1d4f0]        # 423500 <_IO_stdin_used@@Base+0x500>
  406010:	mov    rsi,rax
  406013:	mov    al,0x0
  406015:	call   404070 <printf@plt>
  40601a:	mov    DWORD PTR [rbp-0x6c],eax
  40601d:	jmp    4060a1 <test_typed_empty_monster@@Base+0x311>
  406022:	lea    rsi,[rbp-0x24]
  406026:	mov    edi,0x330ef481
  40602b:	call   406210 <test_typed_empty_monster@@Base+0x480>
  406030:	lea    rdx,[rbp-0x24]
  406034:	mov    rdi,QWORD PTR [rbp-0x18]
  406038:	mov    rsi,QWORD PTR [rbp-0x20]
  40603c:	call   405d10 <test_empty_monster@@Base+0x280>
  406041:	mov    DWORD PTR [rbp-0xc],eax
  406044:	cmp    eax,0x0
  406047:	je     40606e <test_typed_empty_monster@@Base+0x2de>
  40604d:	mov    edi,DWORD PTR [rbp-0xc]
  406050:	call   41fca0 <flatcc_verify_error_string@@Base>
  406055:	lea    rdi,[rip+0x1d43f]        # 42349b <_IO_stdin_used@@Base+0x49b>
  40605c:	mov    rsi,rax
  40605f:	mov    al,0x0
  406061:	call   404070 <printf@plt>
  406066:	mov    DWORD PTR [rbp-0x70],eax
  406069:	jmp    4060a1 <test_typed_empty_monster@@Base+0x311>
  40606e:	mov    rdi,QWORD PTR [rbp-0x18]
  406072:	mov    rsi,QWORD PTR [rbp-0x20]
  406076:	call   405d50 <test_empty_monster@@Base+0x2c0>
  40607b:	cmp    eax,0x0
  40607e:	jne    40609a <test_typed_empty_monster@@Base+0x30a>
  406084:	lea    rdi,[rip+0x1d4b5]        # 423540 <_IO_stdin_used@@Base+0x540>
  40608b:	mov    al,0x0
  40608d:	call   404070 <printf@plt>
  406092:	mov    DWORD PTR [rbp-0x74],eax
  406095:	jmp    4060a1 <test_typed_empty_monster@@Base+0x311>
  40609a:	mov    DWORD PTR [rbp-0xc],0x0
  4060a1:	mov    rdi,QWORD PTR [rbp-0x18]
  4060a5:	call   41eda0 <flatcc_builder_aligned_free@@Base>
  4060aa:	mov    eax,DWORD PTR [rbp-0xc]
  4060ad:	add    rsp,0x80
  4060b4:	pop    rbp
  4060b5:	ret    
  4060b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4060c0:	push   rbp
  4060c1:	mov    rbp,rsp
  4060c4:	sub    rsp,0x10
  4060c8:	mov    QWORD PTR [rbp-0x8],rdi
  4060cc:	mov    rdi,QWORD PTR [rbp-0x8]
  4060d0:	add    rdi,0x4
  4060d4:	call   416a60 <main@@Base+0x2670>
  4060d9:	add    rsp,0x10
  4060dd:	pop    rbp
  4060de:	ret    
  4060df:	nop
  4060e0:	push   rbp
  4060e1:	mov    rbp,rsp
  4060e4:	mov    QWORD PTR [rbp-0x8],rdi
  4060e8:	mov    DWORD PTR [rbp-0xc],0x811c9dc5
  4060ef:	mov    rax,QWORD PTR [rbp-0x8]
  4060f3:	cmp    BYTE PTR [rax],0x0
  4060f6:	je     40612b <test_typed_empty_monster@@Base+0x39b>
  4060fc:	mov    rax,QWORD PTR [rbp-0x8]
  406100:	movsx  ecx,BYTE PTR [rax]
  406103:	xor    ecx,DWORD PTR [rbp-0xc]
  406106:	mov    DWORD PTR [rbp-0xc],ecx
  406109:	mov    ecx,DWORD PTR [rbp-0xc]
  40610c:	mov    eax,ecx
  40610e:	imul   rax,rax,0x1000193
  406115:	mov    ecx,eax
  406117:	mov    DWORD PTR [rbp-0xc],ecx
  40611a:	mov    rax,QWORD PTR [rbp-0x8]
  40611e:	add    rax,0x1
  406122:	mov    QWORD PTR [rbp-0x8],rax
  406126:	jmp    4060ef <test_typed_empty_monster@@Base+0x35f>
  40612b:	cmp    DWORD PTR [rbp-0xc],0x0
  40612f:	jne    40613c <test_typed_empty_monster@@Base+0x3ac>
  406135:	mov    DWORD PTR [rbp-0xc],0x811c9dc5
  40613c:	mov    eax,DWORD PTR [rbp-0xc]
  40613f:	pop    rbp
  406140:	ret    
  406141:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40614b:	nop    DWORD PTR [rax+rax*1+0x0]
  406150:	push   rbp
  406151:	mov    rbp,rsp
  406154:	sub    rsp,0x10
  406158:	mov    QWORD PTR [rbp-0x8],rdi
  40615c:	mov    DWORD PTR [rbp-0xc],esi
  40615f:	cmp    DWORD PTR [rbp-0xc],0x0
  406163:	mov    al,0x1
  406165:	mov    BYTE PTR [rbp-0xd],al
  406168:	je     406187 <test_typed_empty_monster@@Base+0x3f7>
  40616e:	mov    rax,QWORD PTR [rbp-0x8]
  406172:	add    rax,0x4
  406176:	mov    rdi,rax
  406179:	call   416a60 <main@@Base+0x2670>
  40617e:	cmp    eax,DWORD PTR [rbp-0xc]
  406181:	sete   cl
  406184:	mov    BYTE PTR [rbp-0xd],cl
  406187:	mov    al,BYTE PTR [rbp-0xd]
  40618a:	and    al,0x1
  40618c:	movzx  eax,al
  40618f:	add    rsp,0x10
  406193:	pop    rbp
  406194:	ret    
  406195:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40619f:	nop
  4061a0:	push   rbp
  4061a1:	mov    rbp,rsp
  4061a4:	sub    rsp,0x10
  4061a8:	mov    QWORD PTR [rbp-0x8],rdi
  4061ac:	mov    QWORD PTR [rbp-0x10],rsi
  4061b0:	mov    rdi,QWORD PTR [rbp-0x8]
  4061b4:	mov    rsi,QWORD PTR [rbp-0x10]
  4061b8:	lea    rdx,[rip+0x1d20c]        # 4233cb <_IO_stdin_used@@Base+0x3cb>
  4061bf:	lea    rcx,[rip+0xf7da]        # 4159a0 <main@@Base+0x15b0>
  4061c6:	call   4213a0 <flatcc_verify_table_as_root@@Base>
  4061cb:	add    rsp,0x10
  4061cf:	pop    rbp
  4061d0:	ret    
  4061d1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4061db:	nop    DWORD PTR [rax+rax*1+0x0]
  4061e0:	push   rbp
  4061e1:	mov    rbp,rsp
  4061e4:	sub    rsp,0x20
  4061e8:	mov    QWORD PTR [rbp-0x8],rdi
  4061ec:	mov    QWORD PTR [rbp-0x10],rsi
  4061f0:	mov    DWORD PTR [rbp-0x14],edx
  4061f3:	mov    rdi,QWORD PTR [rbp-0x8]
  4061f7:	mov    rsi,QWORD PTR [rbp-0x10]
  4061fb:	mov    edx,DWORD PTR [rbp-0x14]
  4061fe:	lea    rcx,[rip+0xf79b]        # 4159a0 <main@@Base+0x15b0>
  406205:	call   421440 <flatcc_verify_table_as_typed_root@@Base>
  40620a:	add    rsp,0x20
  40620e:	pop    rbp
  40620f:	ret    
  406210:	push   rbp
  406211:	mov    rbp,rsp
  406214:	mov    DWORD PTR [rbp-0x4],edi
  406217:	mov    QWORD PTR [rbp-0x10],rsi
  40621b:	mov    edi,DWORD PTR [rbp-0x4]
  40621e:	and    edi,0xff
  406224:	mov    al,dil
  406227:	mov    rsi,QWORD PTR [rbp-0x10]
  40622b:	mov    BYTE PTR [rsi],al
  40622d:	mov    edi,DWORD PTR [rbp-0x4]
  406230:	shr    edi,0x8
  406233:	mov    DWORD PTR [rbp-0x4],edi
  406236:	mov    edi,DWORD PTR [rbp-0x4]
  406239:	and    edi,0xff
  40623f:	mov    al,dil
  406242:	mov    rsi,QWORD PTR [rbp-0x10]
  406246:	mov    BYTE PTR [rsi+0x1],al
  406249:	mov    edi,DWORD PTR [rbp-0x4]
  40624c:	shr    edi,0x8
  40624f:	mov    DWORD PTR [rbp-0x4],edi
  406252:	mov    edi,DWORD PTR [rbp-0x4]
  406255:	and    edi,0xff
  40625b:	mov    al,dil
  40625e:	mov    rsi,QWORD PTR [rbp-0x10]
  406262:	mov    BYTE PTR [rsi+0x2],al
  406265:	mov    edi,DWORD PTR [rbp-0x4]
  406268:	shr    edi,0x8
  40626b:	mov    DWORD PTR [rbp-0x4],edi
  40626e:	mov    edi,DWORD PTR [rbp-0x4]
  406271:	and    edi,0xff
  406277:	mov    al,dil
  40627a:	mov    rsi,QWORD PTR [rbp-0x10]
  40627e:	mov    BYTE PTR [rsi+0x3],al
  406281:	pop    rbp
  406282:	ret    
  406283:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40628d:	nop    DWORD PTR [rax]

0000000000406290 <verify_table_with_emptystruct@@Base>:
  406290:	push   rbp
  406291:	mov    rbp,rsp
  406294:	sub    rsp,0x30
  406298:	mov    QWORD PTR [rbp-0x10],rdi
  40629c:	mov    rdi,QWORD PTR [rbp-0x10]
  4062a0:	call   406350 <verify_table_with_emptystruct@@Base+0xc0>
  4062a5:	mov    QWORD PTR [rbp-0x18],rax
  4062a9:	cmp    QWORD PTR [rbp-0x18],0x0
  4062ae:	jne    4062d1 <verify_table_with_emptystruct@@Base+0x41>
  4062b4:	lea    rdi,[rip+0x1d2cf]        # 42358a <_IO_stdin_used@@Base+0x58a>
  4062bb:	mov    al,0x0
  4062bd:	call   404070 <printf@plt>
  4062c2:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4062c9:	mov    DWORD PTR [rbp-0x24],eax
  4062cc:	jmp    406339 <verify_table_with_emptystruct@@Base+0xa9>
  4062d1:	mov    rdi,QWORD PTR [rbp-0x18]
  4062d5:	call   4063c0 <verify_table_with_emptystruct@@Base+0x130>
  4062da:	mov    QWORD PTR [rbp-0x20],rax
  4062de:	cmp    QWORD PTR [rbp-0x20],0x0
  4062e3:	jne    406306 <verify_table_with_emptystruct@@Base+0x76>
  4062e9:	lea    rdi,[rip+0x1d2c0]        # 4235b0 <_IO_stdin_used@@Base+0x5b0>
  4062f0:	mov    al,0x0
  4062f2:	call   404070 <printf@plt>
  4062f7:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4062fe:	mov    DWORD PTR [rbp-0x28],eax
  406301:	jmp    406339 <verify_table_with_emptystruct@@Base+0xa9>
  406306:	call   416a90 <main@@Base+0x26a0>
  40630b:	cmp    rax,0x0
  40630f:	je     406332 <verify_table_with_emptystruct@@Base+0xa2>
  406315:	lea    rdi,[rip+0x1d2b0]        # 4235cc <_IO_stdin_used@@Base+0x5cc>
  40631c:	mov    al,0x0
  40631e:	call   404070 <printf@plt>
  406323:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40632a:	mov    DWORD PTR [rbp-0x2c],eax
  40632d:	jmp    406339 <verify_table_with_emptystruct@@Base+0xa9>
  406332:	mov    DWORD PTR [rbp-0x4],0x0
  406339:	mov    eax,DWORD PTR [rbp-0x4]
  40633c:	add    rsp,0x30
  406340:	pop    rbp
  406341:	ret    
  406342:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40634c:	nop    DWORD PTR [rax+0x0]
  406350:	push   rbp
  406351:	mov    rbp,rsp
  406354:	sub    rsp,0x20
  406358:	mov    QWORD PTR [rbp-0x8],rdi
  40635c:	lea    rdi,[rip+0x1ce1d]        # 423180 <_IO_stdin_used@@Base+0x180>
  406363:	mov    QWORD PTR [rbp-0x10],rdi
  406367:	cmp    QWORD PTR [rbp-0x8],0x0
  40636c:	je     406388 <verify_table_with_emptystruct@@Base+0xf8>
  406372:	mov    rdi,QWORD PTR [rbp-0x8]
  406376:	mov    rsi,QWORD PTR [rbp-0x10]
  40637a:	call   406a20 <test_typed_table_with_emptystruct@@Base+0x470>
  40637f:	cmp    eax,0x0
  406382:	jne    406395 <verify_table_with_emptystruct@@Base+0x105>
  406388:	xor    eax,eax
  40638a:	mov    ecx,eax
  40638c:	mov    QWORD PTR [rbp-0x18],rcx
  406390:	jmp    4063b5 <verify_table_with_emptystruct@@Base+0x125>
  406395:	mov    rax,QWORD PTR [rbp-0x8]
  406399:	mov    rdi,QWORD PTR [rbp-0x8]
  40639d:	mov    QWORD PTR [rbp-0x20],rax
  4063a1:	call   414930 <main@@Base+0x540>
  4063a6:	mov    eax,eax
  4063a8:	mov    edi,eax
  4063aa:	mov    rcx,QWORD PTR [rbp-0x20]
  4063ae:	add    rcx,rdi
  4063b1:	mov    QWORD PTR [rbp-0x18],rcx
  4063b5:	mov    rax,QWORD PTR [rbp-0x18]
  4063b9:	add    rsp,0x20
  4063bd:	pop    rbp
  4063be:	ret    
  4063bf:	nop
  4063c0:	push   rbp
  4063c1:	mov    rbp,rsp
  4063c4:	sub    rsp,0x30
  4063c8:	mov    QWORD PTR [rbp-0x10],rdi
  4063cc:	mov    WORD PTR [rbp-0x12],0x0
  4063d2:	cmp    QWORD PTR [rbp-0x10],0x0
  4063d7:	je     4063f1 <verify_table_with_emptystruct@@Base+0x161>
  4063dd:	mov    al,0x1
  4063df:	test   al,0x1
  4063e1:	jne    4063ec <verify_table_with_emptystruct@@Base+0x15c>
  4063e7:	jmp    4063f1 <verify_table_with_emptystruct@@Base+0x161>
  4063ec:	jmp    406410 <verify_table_with_emptystruct@@Base+0x180>
  4063f1:	lea    rdi,[rip+0x1f6a0]        # 425a98 <_IO_stdin_used@@Base+0x2a98>
  4063f8:	lea    rsi,[rip+0x1f6bf]        # 425abe <_IO_stdin_used@@Base+0x2abe>
  4063ff:	mov    edx,0x239
  406404:	lea    rcx,[rip+0x1fddb]        # 4261e6 <_IO_stdin_used@@Base+0x31e6>
  40640b:	call   404090 <__assert_fail@plt>
  406410:	mov    WORD PTR [rbp-0x14],0x0
  406416:	mov    rax,QWORD PTR [rbp-0x10]
  40641a:	mov    rcx,QWORD PTR [rbp-0x10]
  40641e:	mov    rdi,rcx
  406421:	mov    QWORD PTR [rbp-0x28],rax
  406425:	call   414960 <main@@Base+0x570>
  40642a:	xor    edx,edx
  40642c:	mov    ecx,edx
  40642e:	movsxd rdi,eax
  406431:	sub    rcx,rdi
  406434:	mov    rdi,QWORD PTR [rbp-0x28]
  406438:	add    rdi,rcx
  40643b:	mov    QWORD PTR [rbp-0x20],rdi
  40643f:	mov    rcx,QWORD PTR [rbp-0x20]
  406443:	mov    rdi,rcx
  406446:	call   414980 <main@@Base+0x590>
  40644b:	movzx  edx,ax
  40644e:	mov    ecx,edx
  406450:	movzx  edx,WORD PTR [rbp-0x14]
  406454:	add    edx,0x3
  406457:	movsxd rdi,edx
  40645a:	shl    rdi,0x1
  40645e:	cmp    rcx,rdi
  406461:	jb     406489 <verify_table_with_emptystruct@@Base+0x1f9>
  406467:	mov    rax,QWORD PTR [rbp-0x20]
  40646b:	movzx  ecx,WORD PTR [rbp-0x14]
  40646f:	movsxd rdx,ecx
  406472:	shl    rdx,0x1
  406476:	add    rax,rdx
  406479:	add    rax,0x4
  40647d:	mov    rdi,rax
  406480:	call   414980 <main@@Base+0x590>
  406485:	mov    WORD PTR [rbp-0x12],ax
  406489:	cmp    WORD PTR [rbp-0x12],0x0
  40648e:	je     4064ab <verify_table_with_emptystruct@@Base+0x21b>
  406494:	mov    rax,QWORD PTR [rbp-0x10]
  406498:	movzx  ecx,WORD PTR [rbp-0x12]
  40649c:	movsxd rdx,ecx
  40649f:	add    rax,rdx
  4064a2:	mov    QWORD PTR [rbp-0x8],rax
  4064a6:	jmp    4064b3 <verify_table_with_emptystruct@@Base+0x223>
  4064ab:	mov    QWORD PTR [rbp-0x8],0x0
  4064b3:	mov    rax,QWORD PTR [rbp-0x8]
  4064b7:	add    rsp,0x30
  4064bb:	pop    rbp
  4064bc:	ret    
  4064bd:	nop    DWORD PTR [rax]

00000000004064c0 <test_table_with_emptystruct@@Base>:
  4064c0:	push   rbp
  4064c1:	mov    rbp,rsp
  4064c4:	sub    rsp,0x30
  4064c8:	mov    QWORD PTR [rbp-0x8],rdi
  4064cc:	mov    QWORD PTR [rbp-0x18],0x0
  4064d4:	mov    rdi,QWORD PTR [rbp-0x8]
  4064d8:	call   4197b0 <flatcc_builder_reset@@Base>
  4064dd:	mov    rdi,QWORD PTR [rbp-0x8]
  4064e1:	mov    rsi,QWORD PTR [rbp-0x18]
  4064e5:	mov    DWORD PTR [rbp-0x2c],eax
  4064e8:	call   406540 <test_table_with_emptystruct@@Base+0x80>
  4064ed:	mov    rdi,QWORD PTR [rbp-0x8]
  4064f1:	lea    rsi,[rbp-0x28]
  4064f5:	mov    DWORD PTR [rbp-0x30],eax
  4064f8:	call   41ec10 <flatcc_builder_finalize_aligned_buffer@@Base>
  4064fd:	mov    rsi,QWORD PTR [rip+0x2baf4]        # 431ff8 <stderr@GLIBC_2.2.5>
  406504:	mov    QWORD PTR [rbp-0x20],rax
  406508:	mov    rax,QWORD PTR [rbp-0x20]
  40650c:	mov    rdx,QWORD PTR [rbp-0x28]
  406510:	mov    rcx,QWORD PTR [rsi]
  406513:	lea    rdi,[rip+0x1d0d2]        # 4235ec <_IO_stdin_used@@Base+0x5ec>
  40651a:	mov    rsi,rax
  40651d:	call   404db0 <test_type_aliases@@Base+0x4b0>
  406522:	mov    rdi,QWORD PTR [rbp-0x20]
  406526:	call   406290 <verify_table_with_emptystruct@@Base>
  40652b:	mov    DWORD PTR [rbp-0xc],eax
  40652e:	mov    rdi,QWORD PTR [rbp-0x20]
  406532:	call   41eda0 <flatcc_builder_aligned_free@@Base>
  406537:	mov    eax,DWORD PTR [rbp-0xc]
  40653a:	add    rsp,0x30
  40653e:	pop    rbp
  40653f:	ret    
  406540:	push   rbp
  406541:	mov    rbp,rsp
  406544:	sub    rsp,0x20
  406548:	mov    QWORD PTR [rbp-0x10],rdi
  40654c:	mov    QWORD PTR [rbp-0x18],rsi
  406550:	mov    rdi,QWORD PTR [rbp-0x10]
  406554:	lea    rsi,[rip+0x1cc25]        # 423180 <_IO_stdin_used@@Base+0x180>
  40655b:	call   405bf0 <test_empty_monster@@Base+0x160>
  406560:	cmp    eax,0x0
  406563:	je     406575 <test_table_with_emptystruct@@Base+0xb5>
  406569:	mov    DWORD PTR [rbp-0x4],0x0
  406570:	jmp    40659b <test_table_with_emptystruct@@Base+0xdb>
  406575:	mov    rdi,QWORD PTR [rbp-0x10]
  406579:	mov    rax,QWORD PTR [rbp-0x10]
  40657d:	mov    rsi,QWORD PTR [rbp-0x18]
  406581:	mov    QWORD PTR [rbp-0x20],rdi
  406585:	mov    rdi,rax
  406588:	call   416aa0 <main@@Base+0x26b0>
  40658d:	mov    rdi,QWORD PTR [rbp-0x20]
  406591:	mov    esi,eax
  406593:	call   405ce0 <test_empty_monster@@Base+0x250>
  406598:	mov    DWORD PTR [rbp-0x4],eax
  40659b:	mov    eax,DWORD PTR [rbp-0x4]
  40659e:	add    rsp,0x20
  4065a2:	pop    rbp
  4065a3:	ret    
  4065a4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4065ae:	xchg   ax,ax

00000000004065b0 <test_typed_table_with_emptystruct@@Base>:
  4065b0:	push   rbp
  4065b1:	mov    rbp,rsp
  4065b4:	sub    rsp,0x70
  4065b8:	mov    QWORD PTR [rbp-0x10],rdi
  4065bc:	mov    DWORD PTR [rbp-0x14],0x0
  4065c3:	mov    QWORD PTR [rbp-0x20],0x0
  4065cb:	mov    rdi,QWORD PTR [rbp-0x10]
  4065cf:	call   4197b0 <flatcc_builder_reset@@Base>
  4065d4:	mov    rdi,QWORD PTR [rbp-0x10]
  4065d8:	mov    rsi,QWORD PTR [rbp-0x20]
  4065dc:	mov    DWORD PTR [rbp-0x34],eax
  4065df:	call   406900 <test_typed_table_with_emptystruct@@Base+0x350>
  4065e4:	mov    rdi,QWORD PTR [rbp-0x10]
  4065e8:	lea    rsi,[rbp-0x30]
  4065ec:	mov    DWORD PTR [rbp-0x38],eax
  4065ef:	call   41e9b0 <flatcc_builder_get_direct_buffer@@Base>
  4065f4:	mov    rsi,QWORD PTR [rip+0x2b9fd]        # 431ff8 <stderr@GLIBC_2.2.5>
  4065fb:	mov    QWORD PTR [rbp-0x28],rax
  4065ff:	mov    rax,QWORD PTR [rbp-0x28]
  406603:	mov    rdx,QWORD PTR [rbp-0x30]
  406607:	mov    rcx,QWORD PTR [rsi]
  40660a:	lea    rdi,[rip+0x1cfd5]        # 4235e6 <_IO_stdin_used@@Base+0x5e6>
  406611:	mov    rsi,rax
  406614:	call   404db0 <test_type_aliases@@Base+0x4b0>
  406619:	mov    rdi,QWORD PTR [rbp-0x28]
  40661d:	mov    rsi,QWORD PTR [rbp-0x30]
  406621:	lea    rdx,[rip+0x1cfdc]        # 423604 <_IO_stdin_used@@Base+0x604>
  406628:	call   406970 <test_typed_table_with_emptystruct@@Base+0x3c0>
  40662d:	xor    r8d,r8d
  406630:	cmp    r8d,eax
  406633:	je     406656 <test_typed_table_with_emptystruct@@Base+0xa6>
  406639:	lea    rdi,[rip+0x1cfc9]        # 423609 <_IO_stdin_used@@Base+0x609>
  406640:	mov    al,0x0
  406642:	call   404070 <printf@plt>
  406647:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40664e:	mov    DWORD PTR [rbp-0x3c],eax
  406651:	jmp    4068f1 <test_typed_table_with_emptystruct@@Base+0x341>
  406656:	mov    rdi,QWORD PTR [rbp-0x28]
  40665a:	mov    rsi,QWORD PTR [rbp-0x30]
  40665e:	call   4069b0 <test_typed_table_with_emptystruct@@Base+0x400>
  406663:	xor    ecx,ecx
  406665:	cmp    ecx,eax
  406667:	je     40668a <test_typed_table_with_emptystruct@@Base+0xda>
  40666d:	lea    rdi,[rip+0x1cfb5]        # 423629 <_IO_stdin_used@@Base+0x629>
  406674:	mov    al,0x0
  406676:	call   404070 <printf@plt>
  40667b:	mov    DWORD PTR [rbp-0x4],0xffffffff
  406682:	mov    DWORD PTR [rbp-0x40],eax
  406685:	jmp    4068f1 <test_typed_table_with_emptystruct@@Base+0x341>
  40668a:	mov    rdi,QWORD PTR [rbp-0x28]
  40668e:	mov    rsi,QWORD PTR [rbp-0x30]
  406692:	mov    edx,0xb0dd37b6
  406697:	call   4069f0 <test_typed_table_with_emptystruct@@Base+0x440>
  40669c:	xor    edx,edx
  40669e:	cmp    edx,eax
  4066a0:	je     4066c3 <test_typed_table_with_emptystruct@@Base+0x113>
  4066a6:	lea    rdi,[rip+0x1cf99]        # 423646 <_IO_stdin_used@@Base+0x646>
  4066ad:	mov    al,0x0
  4066af:	call   404070 <printf@plt>
  4066b4:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4066bb:	mov    DWORD PTR [rbp-0x44],eax
  4066be:	jmp    4068f1 <test_typed_table_with_emptystruct@@Base+0x341>
  4066c3:	cmp    QWORD PTR [rbp-0x28],0x0
  4066c8:	jne    4066eb <test_typed_table_with_emptystruct@@Base+0x13b>
  4066ce:	lea    rdi,[rip+0x1cf97]        # 42366c <_IO_stdin_used@@Base+0x66c>
  4066d5:	mov    al,0x0
  4066d7:	call   404070 <printf@plt>
  4066dc:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4066e3:	mov    DWORD PTR [rbp-0x48],eax
  4066e6:	jmp    4068f1 <test_typed_table_with_emptystruct@@Base+0x341>
  4066eb:	mov    rdi,QWORD PTR [rbp-0x28]
  4066ef:	mov    esi,0xb0dd37b6
  4066f4:	call   406150 <test_typed_empty_monster@@Base+0x3c0>
  4066f9:	cmp    eax,0x0
  4066fc:	jne    40671f <test_typed_table_with_emptystruct@@Base+0x16f>
  406702:	lea    rdi,[rip+0x1cf7c]        # 423685 <_IO_stdin_used@@Base+0x685>
  406709:	mov    al,0x0
  40670b:	call   404070 <printf@plt>
  406710:	mov    DWORD PTR [rbp-0x4],0xffffffff
  406717:	mov    DWORD PTR [rbp-0x4c],eax
  40671a:	jmp    4068f1 <test_typed_table_with_emptystruct@@Base+0x341>
  40671f:	xor    esi,esi
  406721:	mov    rdi,QWORD PTR [rbp-0x28]
  406725:	call   406150 <test_typed_empty_monster@@Base+0x3c0>
  40672a:	cmp    eax,0x0
  40672d:	jne    406750 <test_typed_table_with_emptystruct@@Base+0x1a0>
  406733:	lea    rdi,[rip+0x1cf5c]        # 423696 <_IO_stdin_used@@Base+0x696>
  40673a:	mov    al,0x0
  40673c:	call   404070 <printf@plt>
  406741:	mov    DWORD PTR [rbp-0x4],0xffffffff
  406748:	mov    DWORD PTR [rbp-0x50],eax
  40674b:	jmp    4068f1 <test_typed_table_with_emptystruct@@Base+0x341>
  406750:	mov    rdi,QWORD PTR [rbp-0x28]
  406754:	mov    esi,0x1
  406759:	call   406150 <test_typed_empty_monster@@Base+0x3c0>
  40675e:	cmp    eax,0x0
  406761:	je     406784 <test_typed_table_with_emptystruct@@Base+0x1d4>
  406767:	lea    rdi,[rip+0x1cf3a]        # 4236a8 <_IO_stdin_used@@Base+0x6a8>
  40676e:	mov    al,0x0
  406770:	call   404070 <printf@plt>
  406775:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40677c:	mov    DWORD PTR [rbp-0x54],eax
  40677f:	jmp    4068f1 <test_typed_table_with_emptystruct@@Base+0x341>
  406784:	xor    eax,eax
  406786:	mov    esi,eax
  406788:	mov    rdi,QWORD PTR [rbp-0x28]
  40678c:	call   406a20 <test_typed_table_with_emptystruct@@Base+0x470>
  406791:	cmp    eax,0x0
  406794:	jne    4067b7 <test_typed_table_with_emptystruct@@Base+0x207>
  40679a:	lea    rdi,[rip+0x1cf2b]        # 4236cc <_IO_stdin_used@@Base+0x6cc>
  4067a1:	mov    al,0x0
  4067a3:	call   404070 <printf@plt>
  4067a8:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4067af:	mov    DWORD PTR [rbp-0x58],eax
  4067b2:	jmp    4068f1 <test_typed_table_with_emptystruct@@Base+0x341>
  4067b7:	mov    rdi,QWORD PTR [rbp-0x28]
  4067bb:	lea    rsi,[rip+0x1ce42]        # 423604 <_IO_stdin_used@@Base+0x604>
  4067c2:	call   406a20 <test_typed_table_with_emptystruct@@Base+0x470>
  4067c7:	cmp    eax,0x0
  4067ca:	jne    4067ed <test_typed_table_with_emptystruct@@Base+0x23d>
  4067d0:	lea    rdi,[rip+0x1cf18]        # 4236ef <_IO_stdin_used@@Base+0x6ef>
  4067d7:	mov    al,0x0
  4067d9:	call   404070 <printf@plt>
  4067de:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4067e5:	mov    DWORD PTR [rbp-0x5c],eax
  4067e8:	jmp    4068f1 <test_typed_table_with_emptystruct@@Base+0x341>
  4067ed:	mov    rdi,QWORD PTR [rbp-0x28]
  4067f1:	call   406350 <verify_table_with_emptystruct@@Base+0xc0>
  4067f6:	cmp    rax,0x0
  4067fa:	je     40681d <test_typed_table_with_emptystruct@@Base+0x26d>
  406800:	lea    rdi,[rip+0x1cf13]        # 42371a <_IO_stdin_used@@Base+0x71a>
  406807:	mov    al,0x0
  406809:	call   404070 <printf@plt>
  40680e:	mov    DWORD PTR [rbp-0x4],0xffffffff
  406815:	mov    DWORD PTR [rbp-0x60],eax
  406818:	jmp    4068f1 <test_typed_table_with_emptystruct@@Base+0x341>
  40681d:	mov    rdi,QWORD PTR [rbp-0x28]
  406821:	mov    esi,0x1
  406826:	call   406ac0 <test_typed_table_with_emptystruct@@Base+0x510>
  40682b:	cmp    rax,0x0
  40682f:	je     406852 <test_typed_table_with_emptystruct@@Base+0x2a2>
  406835:	lea    rdi,[rip+0x1cefd]        # 423739 <_IO_stdin_used@@Base+0x739>
  40683c:	mov    al,0x0
  40683e:	call   404070 <printf@plt>
  406843:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40684a:	mov    DWORD PTR [rbp-0x64],eax
  40684d:	jmp    4068f1 <test_typed_table_with_emptystruct@@Base+0x341>
  406852:	mov    rdi,QWORD PTR [rbp-0x28]
  406856:	lea    rsi,[rip+0x1cda7]        # 423604 <_IO_stdin_used@@Base+0x604>
  40685d:	call   406b30 <test_typed_table_with_emptystruct@@Base+0x580>
  406862:	cmp    rax,0x0
  406866:	jne    406889 <test_typed_table_with_emptystruct@@Base+0x2d9>
  40686c:	lea    rdi,[rip+0x1ceec]        # 42375f <_IO_stdin_used@@Base+0x75f>
  406873:	mov    al,0x0
  406875:	call   404070 <printf@plt>
  40687a:	mov    DWORD PTR [rbp-0x4],0xffffffff
  406881:	mov    DWORD PTR [rbp-0x68],eax
  406884:	jmp    4068f1 <test_typed_table_with_emptystruct@@Base+0x341>
  406889:	mov    rdi,QWORD PTR [rbp-0x28]
  40688d:	call   406ba0 <test_typed_table_with_emptystruct@@Base+0x5f0>
  406892:	cmp    rax,0x0
  406896:	jne    4068b9 <test_typed_table_with_emptystruct@@Base+0x309>
  40689c:	lea    rdi,[rip+0x1cef5]        # 423798 <_IO_stdin_used@@Base+0x798>
  4068a3:	mov    al,0x0
  4068a5:	call   404070 <printf@plt>
  4068aa:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4068b1:	mov    DWORD PTR [rbp-0x6c],eax
  4068b4:	jmp    4068f1 <test_typed_table_with_emptystruct@@Base+0x341>
  4068b9:	xor    esi,esi
  4068bb:	mov    rdi,QWORD PTR [rbp-0x28]
  4068bf:	call   406ac0 <test_typed_table_with_emptystruct@@Base+0x510>
  4068c4:	cmp    rax,0x0
  4068c8:	jne    4068eb <test_typed_table_with_emptystruct@@Base+0x33b>
  4068ce:	lea    rdi,[rip+0x1ced9]        # 4237ae <_IO_stdin_used@@Base+0x7ae>
  4068d5:	mov    al,0x0
  4068d7:	call   404070 <printf@plt>
  4068dc:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4068e3:	mov    DWORD PTR [rbp-0x70],eax
  4068e6:	jmp    4068f1 <test_typed_table_with_emptystruct@@Base+0x341>
  4068eb:	mov    eax,DWORD PTR [rbp-0x14]
  4068ee:	mov    DWORD PTR [rbp-0x4],eax
  4068f1:	mov    eax,DWORD PTR [rbp-0x4]
  4068f4:	add    rsp,0x70
  4068f8:	pop    rbp
  4068f9:	ret    
  4068fa:	nop    WORD PTR [rax+rax*1+0x0]
  406900:	push   rbp
  406901:	mov    rbp,rsp
  406904:	sub    rsp,0x20
  406908:	mov    QWORD PTR [rbp-0x10],rdi
  40690c:	mov    QWORD PTR [rbp-0x18],rsi
  406910:	mov    rdi,QWORD PTR [rbp-0x10]
  406914:	lea    rsi,[rip+0x1cce9]        # 423604 <_IO_stdin_used@@Base+0x604>
  40691b:	call   405bf0 <test_empty_monster@@Base+0x160>
  406920:	cmp    eax,0x0
  406923:	je     406935 <test_typed_table_with_emptystruct@@Base+0x385>
  406929:	mov    DWORD PTR [rbp-0x4],0x0
  406930:	jmp    40695b <test_typed_table_with_emptystruct@@Base+0x3ab>
  406935:	mov    rdi,QWORD PTR [rbp-0x10]
  406939:	mov    rax,QWORD PTR [rbp-0x10]
  40693d:	mov    rsi,QWORD PTR [rbp-0x18]
  406941:	mov    QWORD PTR [rbp-0x20],rdi
  406945:	mov    rdi,rax
  406948:	call   416aa0 <main@@Base+0x26b0>
  40694d:	mov    rdi,QWORD PTR [rbp-0x20]
  406951:	mov    esi,eax
  406953:	call   405ce0 <test_empty_monster@@Base+0x250>
  406958:	mov    DWORD PTR [rbp-0x4],eax
  40695b:	mov    eax,DWORD PTR [rbp-0x4]
  40695e:	add    rsp,0x20
  406962:	pop    rbp
  406963:	ret    
  406964:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40696e:	xchg   ax,ax
  406970:	push   rbp
  406971:	mov    rbp,rsp
  406974:	sub    rsp,0x20
  406978:	mov    QWORD PTR [rbp-0x8],rdi
  40697c:	mov    QWORD PTR [rbp-0x10],rsi
  406980:	mov    QWORD PTR [rbp-0x18],rdx
  406984:	mov    rdi,QWORD PTR [rbp-0x8]
  406988:	mov    rsi,QWORD PTR [rbp-0x10]
  40698c:	mov    rdx,QWORD PTR [rbp-0x18]
  406990:	lea    rcx,[rip+0x10299]        # 416c30 <main@@Base+0x2840>
  406997:	call   4213a0 <flatcc_verify_table_as_root@@Base>
  40699c:	add    rsp,0x20
  4069a0:	pop    rbp
  4069a1:	ret    
  4069a2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4069ac:	nop    DWORD PTR [rax+0x0]
  4069b0:	push   rbp
  4069b1:	mov    rbp,rsp
  4069b4:	sub    rsp,0x10
  4069b8:	mov    QWORD PTR [rbp-0x8],rdi
  4069bc:	mov    QWORD PTR [rbp-0x10],rsi
  4069c0:	mov    rdi,QWORD PTR [rbp-0x8]
  4069c4:	mov    rsi,QWORD PTR [rbp-0x10]
  4069c8:	lea    rdx,[rip+0x1cc35]        # 423604 <_IO_stdin_used@@Base+0x604>
  4069cf:	lea    rcx,[rip+0x1025a]        # 416c30 <main@@Base+0x2840>
  4069d6:	call   4213a0 <flatcc_verify_table_as_root@@Base>
  4069db:	add    rsp,0x10
  4069df:	pop    rbp
  4069e0:	ret    
  4069e1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4069eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4069f0:	push   rbp
  4069f1:	mov    rbp,rsp
  4069f4:	sub    rsp,0x20
  4069f8:	mov    QWORD PTR [rbp-0x8],rdi
  4069fc:	mov    QWORD PTR [rbp-0x10],rsi
  406a00:	mov    DWORD PTR [rbp-0x14],edx
  406a03:	mov    rdi,QWORD PTR [rbp-0x8]
  406a07:	mov    rsi,QWORD PTR [rbp-0x10]
  406a0b:	mov    edx,DWORD PTR [rbp-0x14]
  406a0e:	lea    rcx,[rip+0x1021b]        # 416c30 <main@@Base+0x2840>
  406a15:	call   421440 <flatcc_verify_table_as_typed_root@@Base>
  406a1a:	add    rsp,0x20
  406a1e:	pop    rbp
  406a1f:	ret    
  406a20:	push   rbp
  406a21:	mov    rbp,rsp
  406a24:	sub    rsp,0x30
  406a28:	mov    QWORD PTR [rbp-0x10],rdi
  406a2c:	mov    QWORD PTR [rbp-0x18],rsi
  406a30:	mov    DWORD PTR [rbp-0x20],0x0
  406a37:	cmp    QWORD PTR [rbp-0x18],0x0
  406a3c:	jne    406a4e <test_typed_table_with_emptystruct@@Base+0x49e>
  406a42:	mov    DWORD PTR [rbp-0x4],0x1
  406a49:	jmp    406aaf <test_typed_table_with_emptystruct@@Base+0x4ff>
  406a4e:	mov    eax,0x4
  406a53:	mov    edx,eax
  406a55:	lea    rcx,[rbp-0x20]
  406a59:	mov    rsi,QWORD PTR [rbp-0x18]
  406a5d:	mov    rdi,rcx
  406a60:	call   404040 <strncpy@plt>
  406a65:	mov    edi,DWORD PTR [rbp-0x20]
  406a68:	mov    QWORD PTR [rbp-0x28],rax
  406a6c:	call   416c80 <main@@Base+0x2890>
  406a71:	mov    DWORD PTR [rbp-0x20],eax
  406a74:	mov    rcx,QWORD PTR [rbp-0x10]
  406a78:	add    rcx,0x4
  406a7c:	mov    rdi,rcx
  406a7f:	call   416a60 <main@@Base+0x2670>
  406a84:	mov    DWORD PTR [rbp-0x1c],eax
  406a87:	cmp    DWORD PTR [rbp-0x20],0x0
  406a8b:	mov    r8b,0x1
  406a8e:	mov    BYTE PTR [rbp-0x29],r8b
  406a92:	je     406aa4 <test_typed_table_with_emptystruct@@Base+0x4f4>
  406a98:	mov    eax,DWORD PTR [rbp-0x1c]
  406a9b:	cmp    eax,DWORD PTR [rbp-0x20]
  406a9e:	sete   cl
  406aa1:	mov    BYTE PTR [rbp-0x29],cl
  406aa4:	mov    al,BYTE PTR [rbp-0x29]
  406aa7:	and    al,0x1
  406aa9:	movzx  ecx,al
  406aac:	mov    DWORD PTR [rbp-0x4],ecx
  406aaf:	mov    eax,DWORD PTR [rbp-0x4]
  406ab2:	add    rsp,0x30
  406ab6:	pop    rbp
  406ab7:	ret    
  406ab8:	nop    DWORD PTR [rax+rax*1+0x0]
  406ac0:	push   rbp
  406ac1:	mov    rbp,rsp
  406ac4:	sub    rsp,0x20
  406ac8:	mov    QWORD PTR [rbp-0x8],rdi
  406acc:	mov    DWORD PTR [rbp-0xc],esi
  406acf:	cmp    QWORD PTR [rbp-0x8],0x0
  406ad4:	je     406aef <test_typed_table_with_emptystruct@@Base+0x53f>
  406ada:	mov    rdi,QWORD PTR [rbp-0x8]
  406ade:	mov    esi,DWORD PTR [rbp-0xc]
  406ae1:	call   406150 <test_typed_empty_monster@@Base+0x3c0>
  406ae6:	cmp    eax,0x0
  406ae9:	jne    406afc <test_typed_table_with_emptystruct@@Base+0x54c>
  406aef:	xor    eax,eax
  406af1:	mov    ecx,eax
  406af3:	mov    QWORD PTR [rbp-0x18],rcx
  406af7:	jmp    406b1c <test_typed_table_with_emptystruct@@Base+0x56c>
  406afc:	mov    rax,QWORD PTR [rbp-0x8]
  406b00:	mov    rdi,QWORD PTR [rbp-0x8]
  406b04:	mov    QWORD PTR [rbp-0x20],rax
  406b08:	call   414930 <main@@Base+0x540>
  406b0d:	mov    eax,eax
  406b0f:	mov    edi,eax
  406b11:	mov    rcx,QWORD PTR [rbp-0x20]
  406b15:	add    rcx,rdi
  406b18:	mov    QWORD PTR [rbp-0x18],rcx
  406b1c:	mov    rax,QWORD PTR [rbp-0x18]
  406b20:	add    rsp,0x20
  406b24:	pop    rbp
  406b25:	ret    
  406b26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406b30:	push   rbp
  406b31:	mov    rbp,rsp
  406b34:	sub    rsp,0x20
  406b38:	mov    QWORD PTR [rbp-0x8],rdi
  406b3c:	mov    QWORD PTR [rbp-0x10],rsi
  406b40:	cmp    QWORD PTR [rbp-0x8],0x0
  406b45:	je     406b61 <test_typed_table_with_emptystruct@@Base+0x5b1>
  406b4b:	mov    rdi,QWORD PTR [rbp-0x8]
  406b4f:	mov    rsi,QWORD PTR [rbp-0x10]
  406b53:	call   406a20 <test_typed_table_with_emptystruct@@Base+0x470>
  406b58:	cmp    eax,0x0
  406b5b:	jne    406b6e <test_typed_table_with_emptystruct@@Base+0x5be>
  406b61:	xor    eax,eax
  406b63:	mov    ecx,eax
  406b65:	mov    QWORD PTR [rbp-0x18],rcx
  406b69:	jmp    406b8e <test_typed_table_with_emptystruct@@Base+0x5de>
  406b6e:	mov    rax,QWORD PTR [rbp-0x8]
  406b72:	mov    rdi,QWORD PTR [rbp-0x8]
  406b76:	mov    QWORD PTR [rbp-0x20],rax
  406b7a:	call   414930 <main@@Base+0x540>
  406b7f:	mov    eax,eax
  406b81:	mov    edi,eax
  406b83:	mov    rcx,QWORD PTR [rbp-0x20]
  406b87:	add    rcx,rdi
  406b8a:	mov    QWORD PTR [rbp-0x18],rcx
  406b8e:	mov    rax,QWORD PTR [rbp-0x18]
  406b92:	add    rsp,0x20
  406b96:	pop    rbp
  406b97:	ret    
  406b98:	nop    DWORD PTR [rax+rax*1+0x0]
  406ba0:	push   rbp
  406ba1:	mov    rbp,rsp
  406ba4:	sub    rsp,0x20
  406ba8:	mov    QWORD PTR [rbp-0x8],rdi
  406bac:	cmp    QWORD PTR [rbp-0x8],0x0
  406bb1:	je     406bce <test_typed_table_with_emptystruct@@Base+0x61e>
  406bb7:	mov    rdi,QWORD PTR [rbp-0x8]
  406bbb:	mov    esi,0xb0dd37b6
  406bc0:	call   406150 <test_typed_empty_monster@@Base+0x3c0>
  406bc5:	cmp    eax,0x0
  406bc8:	jne    406bdb <test_typed_table_with_emptystruct@@Base+0x62b>
  406bce:	xor    eax,eax
  406bd0:	mov    ecx,eax
  406bd2:	mov    QWORD PTR [rbp-0x10],rcx
  406bd6:	jmp    406bfb <test_typed_table_with_emptystruct@@Base+0x64b>
  406bdb:	mov    rax,QWORD PTR [rbp-0x8]
  406bdf:	mov    rdi,QWORD PTR [rbp-0x8]
  406be3:	mov    QWORD PTR [rbp-0x18],rax
  406be7:	call   414930 <main@@Base+0x540>
  406bec:	mov    eax,eax
  406bee:	mov    edi,eax
  406bf0:	mov    rcx,QWORD PTR [rbp-0x18]
  406bf4:	add    rcx,rdi
  406bf7:	mov    QWORD PTR [rbp-0x10],rcx
  406bfb:	mov    rax,QWORD PTR [rbp-0x10]
  406bff:	add    rsp,0x20
  406c03:	pop    rbp
  406c04:	ret    
  406c05:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406c0f:	nop

0000000000406c10 <verify_monster@@Base>:
  406c10:	push   rbp
  406c11:	mov    rbp,rsp
  406c14:	sub    rsp,0x230
  406c1b:	xor    eax,eax
  406c1d:	mov    esi,eax
  406c1f:	mov    QWORD PTR [rbp-0x10],rdi
  406c23:	mov    rdi,QWORD PTR [rip+0x1c456]        # 423080 <_IO_stdin_used@@Base+0x80>
  406c2a:	mov    QWORD PTR [rbp-0xa0],rdi
  406c31:	mov    rdi,QWORD PTR [rip+0x1c450]        # 423088 <_IO_stdin_used@@Base+0x88>
  406c38:	mov    QWORD PTR [rbp-0x98],rdi
  406c3f:	mov    eax,DWORD PTR [rip+0x1c44b]        # 423090 <_IO_stdin_used@@Base+0x90>
  406c45:	mov    DWORD PTR [rbp-0x90],eax
  406c4b:	mov    rdi,QWORD PTR [rip+0x1c51e]        # 423170 <_IO_stdin_used@@Base+0x170>
  406c52:	mov    QWORD PTR [rbp-0xe0],rdi
  406c59:	mov    rdi,QWORD PTR [rip+0x1c518]        # 423178 <_IO_stdin_used@@Base+0x178>
  406c60:	mov    QWORD PTR [rbp-0xd8],rdi
  406c67:	mov    rdi,QWORD PTR [rbp-0x10]
  406c6b:	call   406a20 <test_typed_table_with_emptystruct@@Base+0x470>
  406c70:	cmp    eax,0x0
  406c73:	jne    406c99 <verify_monster@@Base+0x89>
  406c79:	lea    rdi,[rip+0x1cb48]        # 4237c8 <_IO_stdin_used@@Base+0x7c8>
  406c80:	mov    al,0x0
  406c82:	call   404070 <printf@plt>
  406c87:	mov    DWORD PTR [rbp-0x4],0xffffffff
  406c8e:	mov    DWORD PTR [rbp-0x104],eax
  406c94:	jmp    407edd <verify_monster@@Base+0x12cd>
  406c99:	mov    rdi,QWORD PTR [rbp-0x10]
  406c9d:	lea    rsi,[rip+0x1c4dc]        # 423180 <_IO_stdin_used@@Base+0x180>
  406ca4:	call   406a20 <test_typed_table_with_emptystruct@@Base+0x470>
  406ca9:	cmp    eax,0x0
  406cac:	jne    406cd2 <verify_monster@@Base+0xc2>
  406cb2:	lea    rdi,[rip+0x1cb81]        # 42383a <_IO_stdin_used@@Base+0x83a>
  406cb9:	mov    al,0x0
  406cbb:	call   404070 <printf@plt>
  406cc0:	mov    DWORD PTR [rbp-0x4],0xffffffff
  406cc7:	mov    DWORD PTR [rbp-0x108],eax
  406ccd:	jmp    407edd <verify_monster@@Base+0x12cd>
  406cd2:	mov    rdi,QWORD PTR [rbp-0x10]
  406cd6:	lea    rsi,[rip+0x1cb15]        # 4237f2 <_IO_stdin_used@@Base+0x7f2>
  406cdd:	call   406a20 <test_typed_table_with_emptystruct@@Base+0x470>
  406ce2:	cmp    eax,0x0
  406ce5:	jne    406d0b <verify_monster@@Base+0xfb>
  406ceb:	lea    rdi,[rip+0x1cb08]        # 4237fa <_IO_stdin_used@@Base+0x7fa>
  406cf2:	mov    al,0x0
  406cf4:	call   404070 <printf@plt>
  406cf9:	mov    DWORD PTR [rbp-0x4],0xffffffff
  406d00:	mov    DWORD PTR [rbp-0x10c],eax
  406d06:	jmp    407edd <verify_monster@@Base+0x12cd>
  406d0b:	mov    rdi,QWORD PTR [rbp-0x10]
  406d0f:	lea    rsi,[rip+0x1cb16]        # 42382c <_IO_stdin_used@@Base+0x82c>
  406d16:	call   406a20 <test_typed_table_with_emptystruct@@Base+0x470>
  406d1b:	cmp    eax,0x0
  406d1e:	je     406d44 <verify_monster@@Base+0x134>
  406d24:	lea    rdi,[rip+0x1cb06]        # 423831 <_IO_stdin_used@@Base+0x831>
  406d2b:	mov    al,0x0
  406d2d:	call   404070 <printf@plt>
  406d32:	mov    DWORD PTR [rbp-0x4],0xffffffff
  406d39:	mov    DWORD PTR [rbp-0x110],eax
  406d3f:	jmp    407edd <verify_monster@@Base+0x12cd>
  406d44:	mov    rdi,QWORD PTR [rbp-0x10]
  406d48:	lea    rsi,[rip+0x1c431]        # 423180 <_IO_stdin_used@@Base+0x180>
  406d4f:	call   406a20 <test_typed_table_with_emptystruct@@Base+0x470>
  406d54:	cmp    eax,0x0
  406d57:	jne    406d7d <verify_monster@@Base+0x16d>
  406d5d:	lea    rdi,[rip+0x1cb00]        # 423864 <_IO_stdin_used@@Base+0x864>
  406d64:	mov    al,0x0
  406d66:	call   404070 <printf@plt>
  406d6b:	mov    DWORD PTR [rbp-0x4],0xffffffff
  406d72:	mov    DWORD PTR [rbp-0x114],eax
  406d78:	jmp    407edd <verify_monster@@Base+0x12cd>
  406d7d:	mov    rdi,QWORD PTR [rbp-0x10]
  406d81:	call   4044a0 <verify_empty_monster@@Base+0x280>
  406d86:	mov    QWORD PTR [rbp-0x18],rax
  406d8a:	cmp    rax,0x0
  406d8e:	jne    406db4 <verify_monster@@Base+0x1a4>
  406d94:	lea    rdi,[rip+0x1c3f5]        # 423190 <_IO_stdin_used@@Base+0x190>
  406d9b:	mov    al,0x0
  406d9d:	call   404070 <printf@plt>
  406da2:	mov    DWORD PTR [rbp-0x4],0xffffffff
  406da9:	mov    DWORD PTR [rbp-0x118],eax
  406daf:	jmp    407edd <verify_monster@@Base+0x12cd>
  406db4:	mov    rdi,QWORD PTR [rbp-0x18]
  406db8:	call   404510 <verify_empty_monster@@Base+0x2f0>
  406dbd:	movsx  ecx,ax
  406dc0:	cmp    ecx,0x50
  406dc3:	je     406de9 <verify_monster@@Base+0x1d9>
  406dc9:	lea    rdi,[rip+0x1c49a]        # 42326a <_IO_stdin_used@@Base+0x26a>
  406dd0:	mov    al,0x0
  406dd2:	call   404070 <printf@plt>
  406dd7:	mov    DWORD PTR [rbp-0x4],0xffffffff
  406dde:	mov    DWORD PTR [rbp-0x11c],eax
  406de4:	jmp    407edd <verify_monster@@Base+0x12cd>
  406de9:	mov    rdi,QWORD PTR [rbp-0x18]
  406ded:	call   4047f0 <verify_empty_monster@@Base+0x5d0>
  406df2:	mov    QWORD PTR [rbp-0x50],rax
  406df6:	cmp    rax,0x0
  406dfa:	jne    406e20 <verify_monster@@Base+0x210>
  406e00:	lea    rdi,[rip+0x1ca90]        # 423897 <_IO_stdin_used@@Base+0x897>
  406e07:	mov    al,0x0
  406e09:	call   404070 <printf@plt>
  406e0e:	mov    DWORD PTR [rbp-0x4],0xffffffff
  406e15:	mov    DWORD PTR [rbp-0x120],eax
  406e1b:	jmp    407edd <verify_monster@@Base+0x12cd>
  406e20:	mov    rax,QWORD PTR [rbp-0x50]
  406e24:	and    rax,0xf
  406e28:	cmp    rax,0x0
  406e2c:	je     406e46 <verify_monster@@Base+0x236>
  406e32:	lea    rdi,[rip+0x1ca72]        # 4238ab <_IO_stdin_used@@Base+0x8ab>
  406e39:	mov    al,0x0
  406e3b:	call   404070 <printf@plt>
  406e40:	mov    DWORD PTR [rbp-0x124],eax
  406e46:	mov    rdi,QWORD PTR [rbp-0x50]
  406e4a:	call   407ef0 <verify_monster@@Base+0x12e0>
  406e4f:	vmovss xmm1,DWORD PTR [rip+0x1c1b1]        # 423008 <_IO_stdin_used@@Base+0x8>
  406e57:	vucomiss xmm0,xmm1
  406e5b:	jne    406e6c <verify_monster@@Base+0x25c>
  406e61:	jp     406e6c <verify_monster@@Base+0x25c>
  406e67:	jmp    406e8c <verify_monster@@Base+0x27c>
  406e6c:	lea    rdi,[rip+0x1ca60]        # 4238d3 <_IO_stdin_used@@Base+0x8d3>
  406e73:	mov    al,0x0
  406e75:	call   404070 <printf@plt>
  406e7a:	mov    DWORD PTR [rbp-0x4],0xffffffff
  406e81:	mov    DWORD PTR [rbp-0x128],eax
  406e87:	jmp    407edd <verify_monster@@Base+0x12cd>
  406e8c:	vmovss xmm0,DWORD PTR [rip+0x1c178]        # 42300c <_IO_stdin_used@@Base+0xc>
  406e94:	mov    rax,QWORD PTR [rbp-0x50]
  406e98:	vmovss xmm1,DWORD PTR [rax]
  406e9c:	vucomiss xmm1,xmm0
  406ea0:	jne    406ef3 <verify_monster@@Base+0x2e3>
  406ea6:	jp     406ef3 <verify_monster@@Base+0x2e3>
  406eac:	vmovss xmm0,DWORD PTR [rip+0x1c15c]        # 423010 <_IO_stdin_used@@Base+0x10>
  406eb4:	mov    rax,QWORD PTR [rbp-0x50]
  406eb8:	vmovss xmm1,DWORD PTR [rax+0x4]
  406ebd:	vucomiss xmm1,xmm0
  406ec1:	jne    406ef3 <verify_monster@@Base+0x2e3>
  406ec7:	jp     406ef3 <verify_monster@@Base+0x2e3>
  406ecd:	vmovss xmm0,DWORD PTR [rip+0x1c133]        # 423008 <_IO_stdin_used@@Base+0x8>
  406ed5:	mov    rax,QWORD PTR [rbp-0x50]
  406ed9:	vmovss xmm1,DWORD PTR [rax+0x8]
  406ede:	vucomiss xmm1,xmm0
  406ee2:	jne    406ef3 <verify_monster@@Base+0x2e3>
  406ee8:	jp     406ef3 <verify_monster@@Base+0x2e3>
  406eee:	jmp    406f13 <verify_monster@@Base+0x303>
  406ef3:	lea    rdi,[rip+0x1c9fb]        # 4238f5 <_IO_stdin_used@@Base+0x8f5>
  406efa:	mov    al,0x0
  406efc:	call   404070 <printf@plt>
  406f01:	mov    DWORD PTR [rbp-0x4],0xffffffff
  406f08:	mov    DWORD PTR [rbp-0x12c],eax
  406f0e:	jmp    407edd <verify_monster@@Base+0x12cd>
  406f13:	lea    rdi,[rbp-0x80]
  406f17:	call   407f40 <verify_monster@@Base+0x1330>
  406f1c:	mov    rsi,QWORD PTR [rbp-0x50]
  406f20:	lea    rdi,[rbp-0x80]
  406f24:	mov    QWORD PTR [rbp-0x138],rax
  406f2b:	call   407f80 <verify_monster@@Base+0x1370>
  406f30:	vmovss xmm0,DWORD PTR [rip+0x1c0d4]        # 42300c <_IO_stdin_used@@Base+0xc>
  406f38:	vmovss xmm1,DWORD PTR [rbp-0x80]
  406f3d:	vucomiss xmm1,xmm0
  406f41:	mov    QWORD PTR [rbp-0x140],rax
  406f48:	jne    406f93 <verify_monster@@Base+0x383>
  406f4e:	jp     406f93 <verify_monster@@Base+0x383>
  406f54:	vmovss xmm0,DWORD PTR [rip+0x1c0b4]        # 423010 <_IO_stdin_used@@Base+0x10>
  406f5c:	vmovss xmm1,DWORD PTR [rbp-0x7c]
  406f61:	vucomiss xmm1,xmm0
  406f65:	jne    406f93 <verify_monster@@Base+0x383>
  406f6b:	jp     406f93 <verify_monster@@Base+0x383>
  406f71:	vmovss xmm0,DWORD PTR [rip+0x1c08f]        # 423008 <_IO_stdin_used@@Base+0x8>
  406f79:	vmovss xmm1,DWORD PTR [rbp-0x78]
  406f7e:	vucomiss xmm1,xmm0
  406f82:	jne    406f93 <verify_monster@@Base+0x383>
  406f88:	jp     406f93 <verify_monster@@Base+0x383>
  406f8e:	jmp    406fb3 <verify_monster@@Base+0x3a3>
  406f93:	lea    rdi,[rip+0x1c972]        # 42390c <_IO_stdin_used@@Base+0x90c>
  406f9a:	mov    al,0x0
  406f9c:	call   404070 <printf@plt>
  406fa1:	mov    DWORD PTR [rbp-0x4],0xffffffff
  406fa8:	mov    DWORD PTR [rbp-0x144],eax
  406fae:	jmp    407edd <verify_monster@@Base+0x12cd>
  406fb3:	mov    rax,QWORD PTR [rbp-0x50]
  406fb7:	vmovsd xmm0,QWORD PTR [rax+0x10]
  406fbc:	vxorps xmm1,xmm1,xmm1
  406fc0:	vucomisd xmm0,xmm1
  406fc4:	jne    407008 <verify_monster@@Base+0x3f8>
  406fca:	jp     407008 <verify_monster@@Base+0x3f8>
  406fd0:	mov    rax,QWORD PTR [rbp-0x50]
  406fd4:	vmovsd xmm0,QWORD PTR [rax+0x10]
  406fd9:	vxorps xmm1,xmm1,xmm1
  406fdd:	vucomisd xmm0,xmm1
  406fe1:	jne    407008 <verify_monster@@Base+0x3f8>
  406fe7:	jp     407008 <verify_monster@@Base+0x3f8>
  406fed:	mov    rax,QWORD PTR [rbp-0x50]
  406ff1:	add    rax,0x1a
  406ff5:	mov    ecx,DWORD PTR [rax]
  406ff7:	test   ecx,ecx
  406ff9:	setne  dl
  406ffc:	movzx  ecx,dl
  406fff:	cmp    ecx,0x0
  407002:	je     407028 <verify_monster@@Base+0x418>
  407008:	lea    rdi,[rip+0x1c91f]        # 42392e <_IO_stdin_used@@Base+0x92e>
  40700f:	mov    al,0x0
  407011:	call   404070 <printf@plt>
  407016:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40701d:	mov    DWORD PTR [rbp-0x148],eax
  407023:	jmp    407edd <verify_monster@@Base+0x12cd>
  407028:	mov    rdi,QWORD PTR [rbp-0x18]
  40702c:	call   408050 <verify_monster@@Base+0x1440>
  407031:	mov    QWORD PTR [rbp-0x58],rax
  407035:	cmp    QWORD PTR [rbp-0x58],0x0
  40703a:	je     407059 <verify_monster@@Base+0x449>
  407040:	mov    rdi,QWORD PTR [rbp-0x58]
  407044:	lea    rsi,[rip+0x1c30c]        # 423357 <_IO_stdin_used@@Base+0x357>
  40704b:	call   4040d0 <strcmp@plt>
  407050:	cmp    eax,0x0
  407053:	je     407079 <verify_monster@@Base+0x469>
  407059:	lea    rdi,[rip+0x1c8f3]        # 423953 <_IO_stdin_used@@Base+0x953>
  407060:	mov    al,0x0
  407062:	call   404070 <printf@plt>
  407067:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40706e:	mov    DWORD PTR [rbp-0x14c],eax
  407074:	jmp    407edd <verify_monster@@Base+0x12cd>
  407079:	mov    rdi,QWORD PTR [rbp-0x18]
  40707d:	call   408050 <verify_monster@@Base+0x1440>
  407082:	mov    QWORD PTR [rbp-0x60],rax
  407086:	mov    rdi,QWORD PTR [rbp-0x58]
  40708a:	call   408190 <verify_monster@@Base+0x1580>
  40708f:	cmp    rax,0x9
  407093:	jne    4070ac <verify_monster@@Base+0x49c>
  407099:	mov    rdi,QWORD PTR [rbp-0x60]
  40709d:	call   408190 <verify_monster@@Base+0x1580>
  4070a2:	cmp    rax,0x9
  4070a6:	je     4070cc <verify_monster@@Base+0x4bc>
  4070ac:	lea    rdi,[rip+0x1c8b5]        # 423968 <_IO_stdin_used@@Base+0x968>
  4070b3:	mov    al,0x0
  4070b5:	call   404070 <printf@plt>
  4070ba:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4070c1:	mov    DWORD PTR [rbp-0x150],eax
  4070c7:	jmp    407edd <verify_monster@@Base+0x12cd>
  4070cc:	mov    rdi,QWORD PTR [rbp-0x18]
  4070d0:	call   4081e0 <verify_monster@@Base+0x15d0>
  4070d5:	movsx  ecx,al
  4070d8:	cmp    ecx,0x2
  4070db:	je     407101 <verify_monster@@Base+0x4f1>
  4070e1:	lea    rdi,[rip+0x1c89c]        # 423984 <_IO_stdin_used@@Base+0x984>
  4070e8:	mov    al,0x0
  4070ea:	call   404070 <printf@plt>
  4070ef:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4070f6:	mov    DWORD PTR [rbp-0x154],eax
  4070fc:	jmp    407edd <verify_monster@@Base+0x12cd>
  407101:	mov    edi,0x2
  407106:	call   408300 <verify_monster@@Base+0x16f0>
  40710b:	lea    rsi,[rip+0x1c891]        # 4239a3 <_IO_stdin_used@@Base+0x9a3>
  407112:	mov    rdi,rax
  407115:	call   4040d0 <strcmp@plt>
  40711a:	cmp    eax,0x0
  40711d:	je     407143 <verify_monster@@Base+0x533>
  407123:	lea    rdi,[rip+0x1c87f]        # 4239a9 <_IO_stdin_used@@Base+0x9a9>
  40712a:	mov    al,0x0
  40712c:	call   404070 <printf@plt>
  407131:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407138:	mov    DWORD PTR [rbp-0x158],eax
  40713e:	jmp    407edd <verify_monster@@Base+0x12cd>
  407143:	mov    edi,0x2
  407148:	call   408390 <verify_monster@@Base+0x1780>
  40714d:	cmp    eax,0x0
  407150:	jne    407176 <verify_monster@@Base+0x566>
  407156:	lea    rdi,[rip+0x1c87a]        # 4239d7 <_IO_stdin_used@@Base+0x9d7>
  40715d:	mov    al,0x0
  40715f:	call   404070 <printf@plt>
  407164:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40716b:	mov    DWORD PTR [rbp-0x15c],eax
  407171:	jmp    407edd <verify_monster@@Base+0x12cd>
  407176:	mov    edi,0x1
  40717b:	call   408390 <verify_monster@@Base+0x1780>
  407180:	cmp    eax,0x0
  407183:	jne    4071a9 <verify_monster@@Base+0x599>
  407189:	lea    rdi,[rip+0x1c882]        # 423a12 <_IO_stdin_used@@Base+0xa12>
  407190:	mov    al,0x0
  407192:	call   404070 <printf@plt>
  407197:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40719e:	mov    DWORD PTR [rbp-0x160],eax
  4071a4:	jmp    407edd <verify_monster@@Base+0x12cd>
  4071a9:	mov    edi,0x4
  4071ae:	call   408390 <verify_monster@@Base+0x1780>
  4071b3:	cmp    eax,0x0
  4071b6:	je     4071dc <verify_monster@@Base+0x5cc>
  4071bc:	lea    rdi,[rip+0x1c888]        # 423a4b <_IO_stdin_used@@Base+0xa4b>
  4071c3:	mov    al,0x0
  4071c5:	call   404070 <printf@plt>
  4071ca:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4071d1:	mov    DWORD PTR [rbp-0x164],eax
  4071d7:	jmp    407edd <verify_monster@@Base+0x12cd>
  4071dc:	mov    edi,0x8
  4071e1:	call   408390 <verify_monster@@Base+0x1780>
  4071e6:	cmp    eax,0x0
  4071e9:	jne    40720f <verify_monster@@Base+0x5ff>
  4071ef:	lea    rdi,[rip+0x1c881]        # 423a77 <_IO_stdin_used@@Base+0xa77>
  4071f6:	mov    al,0x0
  4071f8:	call   404070 <printf@plt>
  4071fd:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407204:	mov    DWORD PTR [rbp-0x168],eax
  40720a:	jmp    407edd <verify_monster@@Base+0x12cd>
  40720f:	mov    edi,0x9
  407214:	call   408390 <verify_monster@@Base+0x1780>
  407219:	cmp    eax,0x0
  40721c:	je     407242 <verify_monster@@Base+0x632>
  407222:	lea    rdi,[rip+0x1c822]        # 423a4b <_IO_stdin_used@@Base+0xa4b>
  407229:	mov    al,0x0
  40722b:	call   404070 <printf@plt>
  407230:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407237:	mov    DWORD PTR [rbp-0x16c],eax
  40723d:	jmp    407edd <verify_monster@@Base+0x12cd>
  407242:	mov    edi,0x1
  407247:	call   408410 <verify_monster@@Base+0x1800>
  40724c:	cmp    eax,0x0
  40724f:	jne    407275 <verify_monster@@Base+0x665>
  407255:	lea    rdi,[rip+0x1c855]        # 423ab1 <_IO_stdin_used@@Base+0xab1>
  40725c:	mov    al,0x0
  40725e:	call   404070 <printf@plt>
  407263:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40726a:	mov    DWORD PTR [rbp-0x170],eax
  407270:	jmp    407edd <verify_monster@@Base+0x12cd>
  407275:	mov    edi,0x2a
  40727a:	call   408410 <verify_monster@@Base+0x1800>
  40727f:	cmp    eax,0x0
  407282:	je     4072a8 <verify_monster@@Base+0x698>
  407288:	lea    rdi,[rip+0x1c844]        # 423ad3 <_IO_stdin_used@@Base+0xad3>
  40728f:	mov    al,0x0
  407291:	call   404070 <printf@plt>
  407296:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40729d:	mov    DWORD PTR [rbp-0x174],eax
  4072a3:	jmp    407edd <verify_monster@@Base+0x12cd>
  4072a8:	mov    rdi,QWORD PTR [rbp-0x18]
  4072ac:	call   4084a0 <verify_monster@@Base+0x1890>
  4072b1:	mov    QWORD PTR [rbp-0xe8],rax
  4072b8:	mov    rdi,QWORD PTR [rbp-0xe8]
  4072bf:	call   4085d0 <verify_monster@@Base+0x19c0>
  4072c4:	cmp    rax,0xa
  4072c8:	je     4072ee <verify_monster@@Base+0x6de>
  4072ce:	lea    rdi,[rip+0x1c823]        # 423af8 <_IO_stdin_used@@Base+0xaf8>
  4072d5:	mov    al,0x0
  4072d7:	call   404070 <printf@plt>
  4072dc:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4072e3:	mov    DWORD PTR [rbp-0x178],eax
  4072e9:	jmp    407edd <verify_monster@@Base+0x12cd>
  4072ee:	mov    QWORD PTR [rbp-0xf0],0x0
  4072f9:	mov    rax,QWORD PTR [rbp-0xf0]
  407300:	mov    rdi,QWORD PTR [rbp-0xe8]
  407307:	mov    QWORD PTR [rbp-0x180],rax
  40730e:	call   4085d0 <verify_monster@@Base+0x19c0>
  407313:	mov    rdi,QWORD PTR [rbp-0x180]
  40731a:	cmp    rdi,rax
  40731d:	jae    40738f <verify_monster@@Base+0x77f>
  407323:	mov    rdi,QWORD PTR [rbp-0xe8]
  40732a:	mov    rsi,QWORD PTR [rbp-0xf0]
  407331:	call   4085f0 <verify_monster@@Base+0x19e0>
  407336:	movzx  ecx,al
  407339:	mov    esi,ecx
  40733b:	cmp    rsi,QWORD PTR [rbp-0xf0]
  407342:	je     407373 <verify_monster@@Base+0x763>
  407348:	mov    rax,QWORD PTR [rbp-0xf0]
  40734f:	mov    ecx,eax
  407351:	lea    rdi,[rip+0x1c7bd]        # 423b15 <_IO_stdin_used@@Base+0xb15>
  407358:	mov    esi,ecx
  40735a:	mov    al,0x0
  40735c:	call   404070 <printf@plt>
  407361:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407368:	mov    DWORD PTR [rbp-0x184],eax
  40736e:	jmp    407edd <verify_monster@@Base+0x12cd>
  407373:	jmp    407378 <verify_monster@@Base+0x768>
  407378:	mov    rax,QWORD PTR [rbp-0xf0]
  40737f:	add    rax,0x1
  407383:	mov    QWORD PTR [rbp-0xf0],rax
  40738a:	jmp    4072f9 <verify_monster@@Base+0x6e9>
  40738f:	mov    rdi,QWORD PTR [rbp-0x18]
  407393:	call   408660 <verify_monster@@Base+0x1a50>
  407398:	movsx  ecx,ax
  40739b:	cmp    ecx,0x96
  4073a1:	je     4073c7 <verify_monster@@Base+0x7b7>
  4073a7:	lea    rdi,[rip+0x1c784]        # 423b32 <_IO_stdin_used@@Base+0xb32>
  4073ae:	mov    al,0x0
  4073b0:	call   404070 <printf@plt>
  4073b5:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4073bc:	mov    DWORD PTR [rbp-0x188],eax
  4073c2:	jmp    407edd <verify_monster@@Base+0x12cd>
  4073c7:	mov    rdi,QWORD PTR [rbp-0x18]
  4073cb:	call   408780 <verify_monster@@Base+0x1b70>
  4073d0:	cmp    eax,0x0
  4073d3:	je     4073f9 <verify_monster@@Base+0x7e9>
  4073d9:	lea    rdi,[rip+0x1c764]        # 423b44 <_IO_stdin_used@@Base+0xb44>
  4073e0:	mov    al,0x0
  4073e2:	call   404070 <printf@plt>
  4073e7:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4073ee:	mov    DWORD PTR [rbp-0x18c],eax
  4073f4:	jmp    407edd <verify_monster@@Base+0x12cd>
  4073f9:	mov    rdi,QWORD PTR [rbp-0x18]
  4073fd:	call   404630 <verify_empty_monster@@Base+0x410>
  407402:	cmp    eax,0x0
  407405:	jne    40742b <verify_monster@@Base+0x81b>
  40740b:	lea    rdi,[rip+0x1c747]        # 423b59 <_IO_stdin_used@@Base+0xb59>
  407412:	mov    al,0x0
  407414:	call   404070 <printf@plt>
  407419:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407420:	mov    DWORD PTR [rbp-0x190],eax
  407426:	jmp    407edd <verify_monster@@Base+0x12cd>
  40742b:	mov    rdi,QWORD PTR [rbp-0x18]
  40742f:	call   404710 <verify_empty_monster@@Base+0x4f0>
  407434:	cmp    eax,0x0
  407437:	jne    40745d <verify_monster@@Base+0x84d>
  40743d:	lea    rdi,[rip+0x1be67]        # 4232ab <_IO_stdin_used@@Base+0x2ab>
  407444:	mov    al,0x0
  407446:	call   404070 <printf@plt>
  40744b:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407452:	mov    DWORD PTR [rbp-0x194],eax
  407458:	jmp    407edd <verify_monster@@Base+0x12cd>
  40745d:	mov    rdi,QWORD PTR [rbp-0x18]
  407461:	call   408860 <verify_monster@@Base+0x1c50>
  407466:	mov    QWORD PTR [rbp-0x88],rax
  40746d:	mov    rdi,QWORD PTR [rbp-0x88]
  407474:	call   408990 <verify_monster@@Base+0x1d80>
  407479:	cmp    rax,0x5
  40747d:	je     4074a3 <verify_monster@@Base+0x893>
  407483:	lea    rdi,[rip+0x1c6f0]        # 423b7a <_IO_stdin_used@@Base+0xb7a>
  40748a:	mov    al,0x0
  40748c:	call   404070 <printf@plt>
  407491:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407498:	mov    DWORD PTR [rbp-0x198],eax
  40749e:	jmp    407edd <verify_monster@@Base+0x12cd>
  4074a3:	mov    QWORD PTR [rbp-0xf0],0x0
  4074ae:	cmp    QWORD PTR [rbp-0xf0],0x5
  4074b6:	jae    4075ac <verify_monster@@Base+0x99c>
  4074bc:	mov    rdi,QWORD PTR [rbp-0x88]
  4074c3:	mov    rsi,QWORD PTR [rbp-0xf0]
  4074ca:	call   4089e0 <verify_monster@@Base+0x1dd0>
  4074cf:	mov    QWORD PTR [rbp-0xa8],rax
  4074d6:	mov    rax,QWORD PTR [rbp-0xf0]
  4074dd:	movsx  ecx,WORD PTR [rbp+rax*4-0xa0]
  4074e5:	mov    rdi,QWORD PTR [rbp-0xa8]
  4074ec:	mov    DWORD PTR [rbp-0x19c],ecx
  4074f2:	call   408a50 <verify_monster@@Base+0x1e40>
  4074f7:	movsx  ecx,ax
  4074fa:	mov    edx,DWORD PTR [rbp-0x19c]
  407500:	cmp    edx,ecx
  407502:	je     407533 <verify_monster@@Base+0x923>
  407508:	mov    rax,QWORD PTR [rbp-0xf0]
  40750f:	mov    ecx,eax
  407511:	lea    rdi,[rip+0x1c689]        # 423ba1 <_IO_stdin_used@@Base+0xba1>
  407518:	mov    esi,ecx
  40751a:	mov    al,0x0
  40751c:	call   404070 <printf@plt>
  407521:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407528:	mov    DWORD PTR [rbp-0x1a0],eax
  40752e:	jmp    407edd <verify_monster@@Base+0x12cd>
  407533:	mov    rax,QWORD PTR [rbp-0xf0]
  40753a:	movsx  ecx,BYTE PTR [rbp+rax*4-0x9e]
  407542:	mov    rdi,QWORD PTR [rbp-0xa8]
  407549:	mov    DWORD PTR [rbp-0x1a4],ecx
  40754f:	call   408aa0 <verify_monster@@Base+0x1e90>
  407554:	movsx  ecx,al
  407557:	mov    edx,DWORD PTR [rbp-0x1a4]
  40755d:	cmp    edx,ecx
  40755f:	je     407590 <verify_monster@@Base+0x980>
  407565:	mov    rax,QWORD PTR [rbp-0xf0]
  40756c:	mov    ecx,eax
  40756e:	lea    rdi,[rip+0x1c62c]        # 423ba1 <_IO_stdin_used@@Base+0xba1>
  407575:	mov    esi,ecx
  407577:	mov    al,0x0
  407579:	call   404070 <printf@plt>
  40757e:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407585:	mov    DWORD PTR [rbp-0x1a8],eax
  40758b:	jmp    407edd <verify_monster@@Base+0x12cd>
  407590:	jmp    407595 <verify_monster@@Base+0x985>
  407595:	mov    rax,QWORD PTR [rbp-0xf0]
  40759c:	add    rax,0x1
  4075a0:	mov    QWORD PTR [rbp-0xf0],rax
  4075a7:	jmp    4074ae <verify_monster@@Base+0x89e>
  4075ac:	mov    rdi,QWORD PTR [rbp-0x18]
  4075b0:	call   408af0 <verify_monster@@Base+0x1ee0>
  4075b5:	mov    QWORD PTR [rbp-0x30],rax
  4075b9:	mov    rdi,QWORD PTR [rbp-0x30]
  4075bd:	call   408c20 <verify_monster@@Base+0x2010>
  4075c2:	cmp    rax,0x8
  4075c6:	je     4075ec <verify_monster@@Base+0x9dc>
  4075cc:	lea    rdi,[rip+0x1c5f6]        # 423bc9 <_IO_stdin_used@@Base+0xbc9>
  4075d3:	mov    al,0x0
  4075d5:	call   404070 <printf@plt>
  4075da:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4075e1:	mov    DWORD PTR [rbp-0x1ac],eax
  4075e7:	jmp    407edd <verify_monster@@Base+0x12cd>
  4075ec:	mov    eax,0x5
  4075f1:	mov    esi,eax
  4075f3:	mov    rdi,QWORD PTR [rbp-0x30]
  4075f7:	call   408c70 <verify_monster@@Base+0x2060>
  4075fc:	mov    QWORD PTR [rbp-0x20],rax
  407600:	cmp    QWORD PTR [rbp-0x20],0x0
  407605:	je     407610 <verify_monster@@Base+0xa00>
  40760b:	jmp    40762f <verify_monster@@Base+0xa1f>
  407610:	lea    rdi,[rip+0x1c5d4]        # 423beb <_IO_stdin_used@@Base+0xbeb>
  407617:	lea    rsi,[rip+0x1c5d1]        # 423bef <_IO_stdin_used@@Base+0xbef>
  40761e:	mov    edx,0x296
  407623:	lea    rcx,[rip+0x1c630]        # 423c5a <_IO_stdin_used@@Base+0xc5a>
  40762a:	call   404090 <__assert_fail@plt>
  40762f:	mov    rdi,QWORD PTR [rbp-0x20]
  407633:	call   408050 <verify_monster@@Base+0x1440>
  407638:	mov    QWORD PTR [rbp-0x58],rax
  40763c:	mov    rdi,QWORD PTR [rbp-0x58]
  407640:	lea    rsi,[rip+0x1c63e]        # 423c85 <_IO_stdin_used@@Base+0xc85>
  407647:	call   4040d0 <strcmp@plt>
  40764c:	cmp    eax,0x0
  40764f:	je     407675 <verify_monster@@Base+0xa65>
  407655:	lea    rdi,[rip+0x1c619]        # 423c75 <_IO_stdin_used@@Base+0xc75>
  40765c:	mov    al,0x0
  40765e:	call   404070 <printf@plt>
  407663:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40766a:	mov    DWORD PTR [rbp-0x1b0],eax
  407670:	jmp    407edd <verify_monster@@Base+0x12cd>
  407675:	mov    eax,0x1
  40767a:	mov    esi,eax
  40767c:	mov    rdi,QWORD PTR [rbp-0x30]
  407680:	call   408c70 <verify_monster@@Base+0x2060>
  407685:	mov    QWORD PTR [rbp-0x28],rax
  407689:	mov    rax,QWORD PTR [rbp-0x28]
  40768d:	cmp    rax,QWORD PTR [rbp-0x20]
  407691:	je     4076b7 <verify_monster@@Base+0xaa7>
  407697:	lea    rdi,[rip+0x1c5ef]        # 423c8d <_IO_stdin_used@@Base+0xc8d>
  40769e:	mov    al,0x0
  4076a0:	call   404070 <printf@plt>
  4076a5:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4076ac:	mov    DWORD PTR [rbp-0x1b4],eax
  4076b2:	jmp    407edd <verify_monster@@Base+0x12cd>
  4076b7:	mov    rdi,QWORD PTR [rbp-0x28]
  4076bb:	call   408050 <verify_monster@@Base+0x1440>
  4076c0:	mov    QWORD PTR [rbp-0x58],rax
  4076c4:	mov    rdi,QWORD PTR [rbp-0x58]
  4076c8:	lea    rsi,[rip+0x1c5b6]        # 423c85 <_IO_stdin_used@@Base+0xc85>
  4076cf:	call   4040d0 <strcmp@plt>
  4076d4:	cmp    eax,0x0
  4076d7:	je     407701 <verify_monster@@Base+0xaf1>
  4076dd:	mov    rsi,QWORD PTR [rbp-0x58]
  4076e1:	lea    rdi,[rip+0x1c5db]        # 423cc3 <_IO_stdin_used@@Base+0xcc3>
  4076e8:	mov    al,0x0
  4076ea:	call   404070 <printf@plt>
  4076ef:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4076f6:	mov    DWORD PTR [rbp-0x1b8],eax
  4076fc:	jmp    407edd <verify_monster@@Base+0x12cd>
  407701:	mov    eax,0x2
  407706:	mov    esi,eax
  407708:	mov    rdi,QWORD PTR [rbp-0x30]
  40770c:	call   408c70 <verify_monster@@Base+0x2060>
  407711:	mov    QWORD PTR [rbp-0x20],rax
  407715:	mov    rdi,QWORD PTR [rbp-0x20]
  407719:	call   408050 <verify_monster@@Base+0x1440>
  40771e:	mov    QWORD PTR [rbp-0x58],rax
  407722:	mov    rdi,QWORD PTR [rbp-0x58]
  407726:	lea    rsi,[rip+0x1c5b8]        # 423ce5 <_IO_stdin_used@@Base+0xce5>
  40772d:	call   4040d0 <strcmp@plt>
  407732:	cmp    eax,0x0
  407735:	je     40775f <verify_monster@@Base+0xb4f>
  40773b:	mov    rsi,QWORD PTR [rbp-0x58]
  40773f:	lea    rdi,[rip+0x1c5a5]        # 423ceb <_IO_stdin_used@@Base+0xceb>
  407746:	mov    al,0x0
  407748:	call   404070 <printf@plt>
  40774d:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407754:	mov    DWORD PTR [rbp-0x1bc],eax
  40775a:	jmp    407edd <verify_monster@@Base+0x12cd>
  40775f:	xor    eax,eax
  407761:	mov    esi,eax
  407763:	mov    rdi,QWORD PTR [rbp-0x30]
  407767:	call   408c70 <verify_monster@@Base+0x2060>
  40776c:	mov    QWORD PTR [rbp-0x20],rax
  407770:	mov    rdi,QWORD PTR [rbp-0x20]
  407774:	call   408050 <verify_monster@@Base+0x1440>
  407779:	mov    QWORD PTR [rbp-0x58],rax
  40777d:	mov    rdi,QWORD PTR [rbp-0x58]
  407781:	lea    rsi,[rip+0x1c585]        # 423d0d <_IO_stdin_used@@Base+0xd0d>
  407788:	call   4040d0 <strcmp@plt>
  40778d:	cmp    eax,0x0
  407790:	je     4077ba <verify_monster@@Base+0xbaa>
  407796:	mov    rsi,QWORD PTR [rbp-0x58]
  40779a:	lea    rdi,[rip+0x1c575]        # 423d16 <_IO_stdin_used@@Base+0xd16>
  4077a1:	mov    al,0x0
  4077a3:	call   404070 <printf@plt>
  4077a8:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4077af:	mov    DWORD PTR [rbp-0x1c0],eax
  4077b5:	jmp    407edd <verify_monster@@Base+0x12cd>
  4077ba:	mov    eax,0x3
  4077bf:	mov    esi,eax
  4077c1:	mov    rdi,QWORD PTR [rbp-0x30]
  4077c5:	call   408c70 <verify_monster@@Base+0x2060>
  4077ca:	mov    QWORD PTR [rbp-0x20],rax
  4077ce:	mov    rdi,QWORD PTR [rbp-0x20]
  4077d2:	call   408050 <verify_monster@@Base+0x1440>
  4077d7:	mov    QWORD PTR [rbp-0x58],rax
  4077db:	mov    rdi,QWORD PTR [rbp-0x58]
  4077df:	lea    rsi,[rip+0x1c49f]        # 423c85 <_IO_stdin_used@@Base+0xc85>
  4077e6:	call   4040d0 <strcmp@plt>
  4077eb:	cmp    eax,0x0
  4077ee:	je     407818 <verify_monster@@Base+0xc08>
  4077f4:	mov    rsi,QWORD PTR [rbp-0x58]
  4077f8:	lea    rdi,[rip+0x1c53c]        # 423d3b <_IO_stdin_used@@Base+0xd3b>
  4077ff:	mov    al,0x0
  407801:	call   404070 <printf@plt>
  407806:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40780d:	mov    DWORD PTR [rbp-0x1c4],eax
  407813:	jmp    407edd <verify_monster@@Base+0x12cd>
  407818:	mov    eax,0x4
  40781d:	mov    esi,eax
  40781f:	mov    rdi,QWORD PTR [rbp-0x30]
  407823:	call   408c70 <verify_monster@@Base+0x2060>
  407828:	mov    QWORD PTR [rbp-0x20],rax
  40782c:	mov    rdi,QWORD PTR [rbp-0x20]
  407830:	call   408050 <verify_monster@@Base+0x1440>
  407835:	mov    QWORD PTR [rbp-0x58],rax
  407839:	mov    rdi,QWORD PTR [rbp-0x58]
  40783d:	lea    rsi,[rip+0x1c4a1]        # 423ce5 <_IO_stdin_used@@Base+0xce5>
  407844:	call   4040d0 <strcmp@plt>
  407849:	cmp    eax,0x0
  40784c:	je     407876 <verify_monster@@Base+0xc66>
  407852:	mov    rsi,QWORD PTR [rbp-0x58]
  407856:	lea    rdi,[rip+0x1c502]        # 423d5f <_IO_stdin_used@@Base+0xd5f>
  40785d:	mov    al,0x0
  40785f:	call   404070 <printf@plt>
  407864:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40786b:	mov    DWORD PTR [rbp-0x1c8],eax
  407871:	jmp    407edd <verify_monster@@Base+0x12cd>
  407876:	mov    eax,0x6
  40787b:	mov    esi,eax
  40787d:	mov    rdi,QWORD PTR [rbp-0x30]
  407881:	call   408c70 <verify_monster@@Base+0x2060>
  407886:	mov    QWORD PTR [rbp-0x20],rax
  40788a:	mov    rdi,QWORD PTR [rbp-0x20]
  40788e:	call   408050 <verify_monster@@Base+0x1440>
  407893:	mov    QWORD PTR [rbp-0x58],rax
  407897:	mov    rdi,QWORD PTR [rbp-0x58]
  40789b:	lea    rsi,[rip+0x1c46b]        # 423d0d <_IO_stdin_used@@Base+0xd0d>
  4078a2:	call   4040d0 <strcmp@plt>
  4078a7:	cmp    eax,0x0
  4078aa:	je     4078d4 <verify_monster@@Base+0xcc4>
  4078b0:	mov    rsi,QWORD PTR [rbp-0x58]
  4078b4:	lea    rdi,[rip+0x1c4c6]        # 423d81 <_IO_stdin_used@@Base+0xd81>
  4078bb:	mov    al,0x0
  4078bd:	call   404070 <printf@plt>
  4078c2:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4078c9:	mov    DWORD PTR [rbp-0x1cc],eax
  4078cf:	jmp    407edd <verify_monster@@Base+0x12cd>
  4078d4:	mov    eax,0x7
  4078d9:	mov    esi,eax
  4078db:	mov    rdi,QWORD PTR [rbp-0x30]
  4078df:	call   408c70 <verify_monster@@Base+0x2060>
  4078e4:	mov    QWORD PTR [rbp-0x20],rax
  4078e8:	mov    rdi,QWORD PTR [rbp-0x20]
  4078ec:	call   408050 <verify_monster@@Base+0x1440>
  4078f1:	mov    QWORD PTR [rbp-0x58],rax
  4078f5:	mov    rdi,QWORD PTR [rbp-0x58]
  4078f9:	lea    rsi,[rip+0x1c3e5]        # 423ce5 <_IO_stdin_used@@Base+0xce5>
  407900:	call   4040d0 <strcmp@plt>
  407905:	cmp    eax,0x0
  407908:	je     407932 <verify_monster@@Base+0xd22>
  40790e:	mov    rsi,QWORD PTR [rbp-0x58]
  407912:	lea    rdi,[rip+0x1c48d]        # 423da6 <_IO_stdin_used@@Base+0xda6>
  407919:	mov    al,0x0
  40791b:	call   404070 <printf@plt>
  407920:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407927:	mov    DWORD PTR [rbp-0x1d0],eax
  40792d:	jmp    407edd <verify_monster@@Base+0x12cd>
  407932:	mov    rdi,QWORD PTR [rbp-0x18]
  407936:	call   408d10 <verify_monster@@Base+0x2100>
  40793b:	mov    QWORD PTR [rbp-0xb0],rax
  407942:	mov    rdi,QWORD PTR [rbp-0xb0]
  407949:	call   408e40 <verify_monster@@Base+0x2230>
  40794e:	cmp    rax,0x3
  407952:	je     407978 <verify_monster@@Base+0xd68>
  407958:	lea    rdi,[rip+0x1c46c]        # 423dcb <_IO_stdin_used@@Base+0xdcb>
  40795f:	mov    al,0x0
  407961:	call   404070 <printf@plt>
  407966:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40796d:	mov    DWORD PTR [rbp-0x1d4],eax
  407973:	jmp    407edd <verify_monster@@Base+0x12cd>
  407978:	xor    eax,eax
  40797a:	mov    esi,eax
  40797c:	mov    rdi,QWORD PTR [rbp-0xb0]
  407983:	call   408e90 <verify_monster@@Base+0x2280>
  407988:	lea    rsi,[rip+0x1c467]        # 423df6 <_IO_stdin_used@@Base+0xdf6>
  40798f:	mov    rdi,rax
  407992:	call   4040d0 <strcmp@plt>
  407997:	cmp    eax,0x0
  40799a:	je     4079c0 <verify_monster@@Base+0xdb0>
  4079a0:	lea    rdi,[rip+0x1c455]        # 423dfc <_IO_stdin_used@@Base+0xdfc>
  4079a7:	mov    al,0x0
  4079a9:	call   404070 <printf@plt>
  4079ae:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4079b5:	mov    DWORD PTR [rbp-0x1d8],eax
  4079bb:	jmp    407edd <verify_monster@@Base+0x12cd>
  4079c0:	mov    eax,0x1
  4079c5:	mov    esi,eax
  4079c7:	mov    rdi,QWORD PTR [rbp-0xb0]
  4079ce:	call   408e90 <verify_monster@@Base+0x2280>
  4079d3:	mov    QWORD PTR [rbp-0xb8],rax
  4079da:	mov    rdi,QWORD PTR [rbp-0xb8]
  4079e1:	call   408190 <verify_monster@@Base+0x1580>
  4079e6:	cmp    rax,0x2
  4079ea:	je     407a10 <verify_monster@@Base+0xe00>
  4079f0:	lea    rdi,[rip+0x1c41d]        # 423e14 <_IO_stdin_used@@Base+0xe14>
  4079f7:	mov    al,0x0
  4079f9:	call   404070 <printf@plt>
  4079fe:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407a05:	mov    DWORD PTR [rbp-0x1dc],eax
  407a0b:	jmp    407edd <verify_monster@@Base+0x12cd>
  407a10:	mov    rax,QWORD PTR [rbp-0xb8]
  407a17:	movzx  ecx,WORD PTR [rax]
  407a1a:	sub    ecx,0x2c
  407a1d:	setne  dl
  407a20:	movzx  esi,dl
  407a23:	cmp    esi,0x0
  407a26:	mov    DWORD PTR [rbp-0x1e0],ecx
  407a2c:	je     407a52 <verify_monster@@Base+0xe42>
  407a32:	lea    rdi,[rip+0x1c3f5]        # 423e2e <_IO_stdin_used@@Base+0xe2e>
  407a39:	mov    al,0x0
  407a3b:	call   404070 <printf@plt>
  407a40:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407a47:	mov    DWORD PTR [rbp-0x1e4],eax
  407a4d:	jmp    407edd <verify_monster@@Base+0x12cd>
  407a52:	mov    eax,0x2
  407a57:	mov    esi,eax
  407a59:	mov    rdi,QWORD PTR [rbp-0xb0]
  407a60:	call   408e90 <verify_monster@@Base+0x2280>
  407a65:	lea    rsi,[rip+0x1c3e3]        # 423e4f <_IO_stdin_used@@Base+0xe4f>
  407a6c:	mov    rdi,rax
  407a6f:	call   4040d0 <strcmp@plt>
  407a74:	cmp    eax,0x0
  407a77:	je     407a9d <verify_monster@@Base+0xe8d>
  407a7d:	lea    rdi,[rip+0x1c3d2]        # 423e56 <_IO_stdin_used@@Base+0xe56>
  407a84:	mov    al,0x0
  407a86:	call   404070 <printf@plt>
  407a8b:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407a92:	mov    DWORD PTR [rbp-0x1e8],eax
  407a98:	jmp    407edd <verify_monster@@Base+0x12cd>
  407a9d:	mov    rdi,QWORD PTR [rbp-0x18]
  407aa1:	call   408f30 <verify_monster@@Base+0x2320>
  407aa6:	cmp    eax,0x0
  407aa9:	jne    407acf <verify_monster@@Base+0xebf>
  407aaf:	lea    rdi,[rip+0x1c3b8]        # 423e6e <_IO_stdin_used@@Base+0xe6e>
  407ab6:	mov    al,0x0
  407ab8:	call   404070 <printf@plt>
  407abd:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407ac4:	mov    DWORD PTR [rbp-0x1ec],eax
  407aca:	jmp    407edd <verify_monster@@Base+0x12cd>
  407acf:	mov    rdi,QWORD PTR [rbp-0x18]
  407ad3:	call   409010 <verify_monster@@Base+0x2400>
  407ad8:	mov    QWORD PTR [rbp-0xc0],rax
  407adf:	mov    rdi,QWORD PTR [rbp-0xc0]
  407ae6:	call   409140 <verify_monster@@Base+0x2530>
  407aeb:	cmp    rax,0x4
  407aef:	je     407b15 <verify_monster@@Base+0xf05>
  407af5:	lea    rdi,[rip+0x1c38d]        # 423e89 <_IO_stdin_used@@Base+0xe89>
  407afc:	mov    al,0x0
  407afe:	call   404070 <printf@plt>
  407b03:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407b0a:	mov    DWORD PTR [rbp-0x1f0],eax
  407b10:	jmp    407edd <verify_monster@@Base+0x12cd>
  407b15:	mov    QWORD PTR [rbp-0xf0],0x0
  407b20:	cmp    QWORD PTR [rbp-0xf0],0x4
  407b28:	jae    407b9f <verify_monster@@Base+0xf8f>
  407b2e:	mov    rdi,QWORD PTR [rbp-0xc0]
  407b35:	mov    rsi,QWORD PTR [rbp-0xf0]
  407b3c:	call   409160 <verify_monster@@Base+0x2550>
  407b41:	movzx  ecx,al
  407b44:	mov    rsi,QWORD PTR [rbp-0xf0]
  407b4b:	cmp    ecx,DWORD PTR [rbp+rsi*4-0xe0]
  407b52:	je     407b83 <verify_monster@@Base+0xf73>
  407b58:	mov    rax,QWORD PTR [rbp-0xf0]
  407b5f:	mov    ecx,eax
  407b61:	lea    rdi,[rip+0x1c341]        # 423ea9 <_IO_stdin_used@@Base+0xea9>
  407b68:	mov    esi,ecx
  407b6a:	mov    al,0x0
  407b6c:	call   404070 <printf@plt>
  407b71:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407b78:	mov    DWORD PTR [rbp-0x1f4],eax
  407b7e:	jmp    407edd <verify_monster@@Base+0x12cd>
  407b83:	jmp    407b88 <verify_monster@@Base+0xf78>
  407b88:	mov    rax,QWORD PTR [rbp-0xf0]
  407b8f:	add    rax,0x1
  407b93:	mov    QWORD PTR [rbp-0xf0],rax
  407b9a:	jmp    407b20 <verify_monster@@Base+0xf10>
  407b9f:	mov    rdi,QWORD PTR [rbp-0x18]
  407ba3:	call   4091d0 <verify_monster@@Base+0x25c0>
  407ba8:	mov    BYTE PTR [rbp-0x31],al
  407bab:	movzx  ecx,BYTE PTR [rbp-0x31]
  407baf:	cmp    ecx,0x1
  407bb2:	je     407bd8 <verify_monster@@Base+0xfc8>
  407bb8:	lea    rdi,[rip+0x1c309]        # 423ec8 <_IO_stdin_used@@Base+0xec8>
  407bbf:	mov    al,0x0
  407bc1:	call   404070 <printf@plt>
  407bc6:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407bcd:	mov    DWORD PTR [rbp-0x1f8],eax
  407bd3:	jmp    407edd <verify_monster@@Base+0x12cd>
  407bd8:	mov    rdi,QWORD PTR [rbp-0x18]
  407bdc:	call   4092e0 <verify_monster@@Base+0x26d0>
  407be1:	mov    QWORD PTR [rbp-0x20],rax
  407be5:	mov    rdi,QWORD PTR [rbp-0x20]
  407be9:	call   408050 <verify_monster@@Base+0x1440>
  407bee:	lea    rsi,[rip+0x1c090]        # 423c85 <_IO_stdin_used@@Base+0xc85>
  407bf5:	mov    rdi,rax
  407bf8:	call   4040d0 <strcmp@plt>
  407bfd:	cmp    eax,0x0
  407c00:	je     407c26 <verify_monster@@Base+0x1016>
  407c06:	lea    rdi,[rip+0x1c2e5]        # 423ef2 <_IO_stdin_used@@Base+0xef2>
  407c0d:	mov    al,0x0
  407c0f:	call   404070 <printf@plt>
  407c14:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407c1b:	mov    DWORD PTR [rbp-0x1fc],eax
  407c21:	jmp    407edd <verify_monster@@Base+0x12cd>
  407c26:	mov    rdi,QWORD PTR [rbp-0x18]
  407c2a:	call   409400 <verify_monster@@Base+0x27f0>
  407c2f:	mov    QWORD PTR [rbp-0x20],rax
  407c33:	mov    rdi,QWORD PTR [rbp-0x20]
  407c37:	call   408050 <verify_monster@@Base+0x1440>
  407c3c:	lea    rsi,[rip+0x1c2d0]        # 423f13 <_IO_stdin_used@@Base+0xf13>
  407c43:	mov    rdi,rax
  407c46:	call   4040d0 <strcmp@plt>
  407c4b:	cmp    eax,0x0
  407c4e:	je     407c74 <verify_monster@@Base+0x1064>
  407c54:	lea    rdi,[rip+0x1c2c2]        # 423f1d <_IO_stdin_used@@Base+0xf1d>
  407c5b:	mov    al,0x0
  407c5d:	call   404070 <printf@plt>
  407c62:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407c69:	mov    DWORD PTR [rbp-0x200],eax
  407c6f:	jmp    407edd <verify_monster@@Base+0x12cd>
  407c74:	mov    rdi,QWORD PTR [rbp-0x20]
  407c78:	call   4091d0 <verify_monster@@Base+0x25c0>
  407c7d:	movzx  ecx,al
  407c80:	cmp    ecx,0x0
  407c83:	je     407ca9 <verify_monster@@Base+0x1099>
  407c89:	lea    rdi,[rip+0x1c2ab]        # 423f3b <_IO_stdin_used@@Base+0xf3b>
  407c90:	mov    al,0x0
  407c92:	call   404070 <printf@plt>
  407c97:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407c9e:	mov    DWORD PTR [rbp-0x204],eax
  407ca4:	jmp    407edd <verify_monster@@Base+0x12cd>
  407ca9:	mov    rdi,QWORD PTR [rbp-0x18]
  407cad:	call   409520 <verify_monster@@Base+0x2910>
  407cb2:	mov    BYTE PTR [rbp-0x100],al
  407cb8:	mov    QWORD PTR [rbp-0xf8],rdx
  407cbf:	mov    rdx,QWORD PTR [rbp-0x100]
  407cc6:	mov    QWORD PTR [rbp-0x48],rdx
  407cca:	mov    rdx,QWORD PTR [rbp-0xf8]
  407cd1:	mov    QWORD PTR [rbp-0x40],rdx
  407cd5:	movzx  ecx,BYTE PTR [rbp-0x48]
  407cd9:	movzx  esi,BYTE PTR [rbp-0x31]
  407cdd:	cmp    ecx,esi
  407cdf:	je     407d05 <verify_monster@@Base+0x10f5>
  407ce5:	lea    rdi,[rip+0x1c274]        # 423f60 <_IO_stdin_used@@Base+0xf60>
  407cec:	mov    al,0x0
  407cee:	call   404070 <printf@plt>
  407cf3:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407cfa:	mov    DWORD PTR [rbp-0x208],eax
  407d00:	jmp    407edd <verify_monster@@Base+0x12cd>
  407d05:	mov    rax,QWORD PTR [rbp-0x40]
  407d09:	mov    rdi,QWORD PTR [rbp-0x18]
  407d0d:	mov    QWORD PTR [rbp-0x210],rax
  407d14:	call   4092e0 <verify_monster@@Base+0x26d0>
  407d19:	mov    rdi,QWORD PTR [rbp-0x210]
  407d20:	cmp    rdi,rax
  407d23:	je     407d49 <verify_monster@@Base+0x1139>
  407d29:	lea    rdi,[rip+0x1c260]        # 423f90 <_IO_stdin_used@@Base+0xf90>
  407d30:	mov    al,0x0
  407d32:	call   404070 <printf@plt>
  407d37:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407d3e:	mov    DWORD PTR [rbp-0x214],eax
  407d44:	jmp    407edd <verify_monster@@Base+0x12cd>
  407d49:	mov    rdi,QWORD PTR [rbp-0x20]
  407d4d:	call   408af0 <verify_monster@@Base+0x1ee0>
  407d52:	mov    QWORD PTR [rbp-0x30],rax
  407d56:	mov    rdi,QWORD PTR [rbp-0x30]
  407d5a:	call   408c20 <verify_monster@@Base+0x2010>
  407d5f:	mov    QWORD PTR [rbp-0xf0],rax
  407d66:	mov    rdi,QWORD PTR [rbp-0x30]
  407d6a:	mov    rax,QWORD PTR [rbp-0xf0]
  407d71:	sub    rax,0x1
  407d75:	mov    rsi,rax
  407d78:	call   408c70 <verify_monster@@Base+0x2060>
  407d7d:	mov    QWORD PTR [rbp-0x20],rax
  407d81:	mov    rdi,QWORD PTR [rbp-0x20]
  407d85:	call   4091d0 <verify_monster@@Base+0x25c0>
  407d8a:	movzx  ecx,al
  407d8d:	cmp    ecx,0x1
  407d90:	je     407db6 <verify_monster@@Base+0x11a6>
  407d96:	lea    rdi,[rip+0x1c214]        # 423fb1 <_IO_stdin_used@@Base+0xfb1>
  407d9d:	mov    al,0x0
  407d9f:	call   404070 <printf@plt>
  407da4:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407dab:	mov    DWORD PTR [rbp-0x218],eax
  407db1:	jmp    407edd <verify_monster@@Base+0x12cd>
  407db6:	mov    rdi,QWORD PTR [rbp-0x20]
  407dba:	call   4092e0 <verify_monster@@Base+0x26d0>
  407dbf:	mov    QWORD PTR [rbp-0x20],rax
  407dc3:	mov    rdi,QWORD PTR [rbp-0x20]
  407dc7:	call   408050 <verify_monster@@Base+0x1440>
  407dcc:	lea    rsi,[rip+0x1beb2]        # 423c85 <_IO_stdin_used@@Base+0xc85>
  407dd3:	mov    rdi,rax
  407dd6:	call   4040d0 <strcmp@plt>
  407ddb:	cmp    eax,0x0
  407dde:	je     407e04 <verify_monster@@Base+0x11f4>
  407de4:	lea    rdi,[rip+0x1c209]        # 423ff4 <_IO_stdin_used@@Base+0xff4>
  407deb:	mov    al,0x0
  407ded:	call   404070 <printf@plt>
  407df2:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407df9:	mov    DWORD PTR [rbp-0x21c],eax
  407dff:	jmp    407edd <verify_monster@@Base+0x12cd>
  407e04:	mov    rdi,QWORD PTR [rbp-0x18]
  407e08:	call   409580 <verify_monster@@Base+0x2970>
  407e0d:	cmp    al,0x0
  407e0f:	je     407e35 <verify_monster@@Base+0x1225>
  407e15:	lea    rdi,[rip+0x1c212]        # 42402e <_IO_stdin_used@@Base+0x102e>
  407e1c:	mov    al,0x0
  407e1e:	call   404070 <printf@plt>
  407e23:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407e2a:	mov    DWORD PTR [rbp-0x220],eax
  407e30:	jmp    407edd <verify_monster@@Base+0x12cd>
  407e35:	mov    rdi,QWORD PTR [rbp-0x18]
  407e39:	call   4096a0 <verify_monster@@Base+0x2a90>
  407e3e:	cmp    eax,0x0
  407e41:	jne    407e67 <verify_monster@@Base+0x1257>
  407e47:	lea    rdi,[rip+0x1c1f5]        # 424043 <_IO_stdin_used@@Base+0x1043>
  407e4e:	mov    al,0x0
  407e50:	call   404070 <printf@plt>
  407e55:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407e5c:	mov    DWORD PTR [rbp-0x224],eax
  407e62:	jmp    407edd <verify_monster@@Base+0x12cd>
  407e67:	mov    rdi,QWORD PTR [rbp-0x18]
  407e6b:	call   409780 <verify_monster@@Base+0x2b70>
  407e70:	mov    QWORD PTR [rbp-0xc8],rax
  407e77:	mov    rdi,QWORD PTR [rbp-0xc8]
  407e7e:	call   4098a0 <verify_monster@@Base+0x2c90>
  407e83:	cmp    eax,0x0
  407e86:	jne    407eb6 <verify_monster@@Base+0x12a6>
  407e8c:	mov    rdi,QWORD PTR [rbp-0xc8]
  407e93:	call   409980 <verify_monster@@Base+0x2d70>
  407e98:	cmp    eax,0x0
  407e9b:	jne    407eb6 <verify_monster@@Base+0x12a6>
  407ea1:	mov    rdi,QWORD PTR [rbp-0xc8]
  407ea8:	call   409a60 <verify_monster@@Base+0x2e50>
  407ead:	cmp    eax,0x0
  407eb0:	je     407ed6 <verify_monster@@Base+0x12c6>
  407eb6:	lea    rdi,[rip+0x1c1a5]        # 424062 <_IO_stdin_used@@Base+0x1062>
  407ebd:	mov    al,0x0
  407ebf:	call   404070 <printf@plt>
  407ec4:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407ecb:	mov    DWORD PTR [rbp-0x228],eax
  407ed1:	jmp    407edd <verify_monster@@Base+0x12cd>
  407ed6:	mov    DWORD PTR [rbp-0x4],0x0
  407edd:	mov    eax,DWORD PTR [rbp-0x4]
  407ee0:	add    rsp,0x230
  407ee7:	pop    rbp
  407ee8:	ret    
  407ee9:	nop    DWORD PTR [rax+0x0]
  407ef0:	push   rbp
  407ef1:	mov    rbp,rsp
  407ef4:	sub    rsp,0x10
  407ef8:	mov    QWORD PTR [rbp-0x8],rdi
  407efc:	cmp    QWORD PTR [rbp-0x8],0x0
  407f01:	je     407f21 <verify_monster@@Base+0x1311>
  407f07:	mov    rax,QWORD PTR [rbp-0x8]
  407f0b:	add    rax,0x8
  407f0f:	mov    rdi,rax
  407f12:	call   415910 <main@@Base+0x1520>
  407f17:	vmovss DWORD PTR [rbp-0xc],xmm0
  407f1c:	jmp    407f2f <verify_monster@@Base+0x131f>
  407f21:	vxorps xmm0,xmm0,xmm0
  407f25:	vmovss DWORD PTR [rbp-0xc],xmm0
  407f2a:	jmp    407f2f <verify_monster@@Base+0x131f>
  407f2f:	vmovss xmm0,DWORD PTR [rbp-0xc]
  407f34:	add    rsp,0x10
  407f38:	pop    rbp
  407f39:	ret    
  407f3a:	nop    WORD PTR [rax+rax*1+0x0]
  407f40:	push   rbp
  407f41:	mov    rbp,rsp
  407f44:	sub    rsp,0x10
  407f48:	mov    QWORD PTR [rbp-0x8],rdi
  407f4c:	mov    rdi,QWORD PTR [rbp-0x8]
  407f50:	mov    QWORD PTR [rbp-0x10],rdi
  407f54:	call   416c90 <main@@Base+0x28a0>
  407f59:	xor    esi,esi
  407f5b:	mov    rdi,QWORD PTR [rbp-0x10]
  407f5f:	mov    rdx,rax
  407f62:	call   4040a0 <memset@plt>
  407f67:	mov    rax,QWORD PTR [rbp-0x10]
  407f6b:	add    rsp,0x10
  407f6f:	pop    rbp
  407f70:	ret    
  407f71:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407f7b:	nop    DWORD PTR [rax+rax*1+0x0]
  407f80:	push   rbp
  407f81:	mov    rbp,rsp
  407f84:	sub    rsp,0x60
  407f88:	mov    QWORD PTR [rbp-0x8],rdi
  407f8c:	mov    QWORD PTR [rbp-0x10],rsi
  407f90:	mov    rdi,QWORD PTR [rbp-0x8]
  407f94:	mov    rsi,QWORD PTR [rbp-0x10]
  407f98:	call   416ca0 <main@@Base+0x28b0>
  407f9d:	mov    rsi,QWORD PTR [rbp-0x8]
  407fa1:	add    rsi,0x4
  407fa5:	mov    rdi,QWORD PTR [rbp-0x10]
  407fa9:	add    rdi,0x4
  407fad:	mov    QWORD PTR [rbp-0x18],rdi
  407fb1:	mov    rdi,rsi
  407fb4:	mov    rsi,QWORD PTR [rbp-0x18]
  407fb8:	mov    QWORD PTR [rbp-0x20],rax
  407fbc:	call   416ca0 <main@@Base+0x28b0>
  407fc1:	mov    rsi,QWORD PTR [rbp-0x8]
  407fc5:	add    rsi,0x8
  407fc9:	mov    rdi,QWORD PTR [rbp-0x10]
  407fcd:	add    rdi,0x8
  407fd1:	mov    QWORD PTR [rbp-0x28],rdi
  407fd5:	mov    rdi,rsi
  407fd8:	mov    rsi,QWORD PTR [rbp-0x28]
  407fdc:	mov    QWORD PTR [rbp-0x30],rax
  407fe0:	call   416ca0 <main@@Base+0x28b0>
  407fe5:	mov    rsi,QWORD PTR [rbp-0x8]
  407fe9:	add    rsi,0x10
  407fed:	mov    rdi,QWORD PTR [rbp-0x10]
  407ff1:	add    rdi,0x10
  407ff5:	mov    QWORD PTR [rbp-0x38],rdi
  407ff9:	mov    rdi,rsi
  407ffc:	mov    rsi,QWORD PTR [rbp-0x38]
  408000:	mov    QWORD PTR [rbp-0x40],rax
  408004:	call   416cd0 <main@@Base+0x28e0>
  408009:	mov    rsi,QWORD PTR [rbp-0x10]
  40800d:	mov    cl,BYTE PTR [rsi+0x18]
  408010:	mov    rsi,QWORD PTR [rbp-0x8]
  408014:	mov    BYTE PTR [rsi+0x18],cl
  408017:	mov    rsi,QWORD PTR [rbp-0x8]
  40801b:	add    rsi,0x1a
  40801f:	mov    rdi,QWORD PTR [rbp-0x10]
  408023:	add    rdi,0x1a
  408027:	mov    QWORD PTR [rbp-0x48],rdi
  40802b:	mov    rdi,rsi
  40802e:	mov    rsi,QWORD PTR [rbp-0x48]
  408032:	mov    QWORD PTR [rbp-0x50],rax
  408036:	call   416d00 <main@@Base+0x2910>
  40803b:	mov    rsi,QWORD PTR [rbp-0x8]
  40803f:	mov    QWORD PTR [rbp-0x58],rax
  408043:	mov    rax,rsi
  408046:	add    rsp,0x60
  40804a:	pop    rbp
  40804b:	ret    
  40804c:	nop    DWORD PTR [rax+0x0]
  408050:	push   rbp
  408051:	mov    rbp,rsp
  408054:	sub    rsp,0x30
  408058:	mov    QWORD PTR [rbp-0x8],rdi
  40805c:	mov    WORD PTR [rbp-0x12],0x0
  408062:	cmp    QWORD PTR [rbp-0x8],0x0
  408067:	je     408081 <verify_monster@@Base+0x1471>
  40806d:	mov    al,0x1
  40806f:	test   al,0x1
  408071:	jne    40807c <verify_monster@@Base+0x146c>
  408077:	jmp    408081 <verify_monster@@Base+0x1471>
  40807c:	jmp    4080a0 <verify_monster@@Base+0x1490>
  408081:	lea    rdi,[rip+0x1da10]        # 425a98 <_IO_stdin_used@@Base+0x2a98>
  408088:	lea    rsi,[rip+0x1da2f]        # 425abe <_IO_stdin_used@@Base+0x2abe>
  40808f:	mov    edx,0x2bb
  408094:	lea    rcx,[rip+0x1e2de]        # 426379 <_IO_stdin_used@@Base+0x3379>
  40809b:	call   404090 <__assert_fail@plt>
  4080a0:	mov    WORD PTR [rbp-0x14],0x3
  4080a6:	mov    rax,QWORD PTR [rbp-0x8]
  4080aa:	mov    rcx,QWORD PTR [rbp-0x8]
  4080ae:	mov    rdi,rcx
  4080b1:	mov    QWORD PTR [rbp-0x28],rax
  4080b5:	call   414960 <main@@Base+0x570>
  4080ba:	xor    edx,edx
  4080bc:	mov    ecx,edx
  4080be:	movsxd rdi,eax
  4080c1:	sub    rcx,rdi
  4080c4:	mov    rdi,QWORD PTR [rbp-0x28]
  4080c8:	add    rdi,rcx
  4080cb:	mov    QWORD PTR [rbp-0x20],rdi
  4080cf:	mov    rcx,QWORD PTR [rbp-0x20]
  4080d3:	mov    rdi,rcx
  4080d6:	call   414980 <main@@Base+0x590>
  4080db:	movzx  edx,ax
  4080de:	mov    ecx,edx
  4080e0:	movzx  edx,WORD PTR [rbp-0x14]
  4080e4:	add    edx,0x3
  4080e7:	movsxd rdi,edx
  4080ea:	shl    rdi,0x1
  4080ee:	cmp    rcx,rdi
  4080f1:	jb     408119 <verify_monster@@Base+0x1509>
  4080f7:	mov    rax,QWORD PTR [rbp-0x20]
  4080fb:	movzx  ecx,WORD PTR [rbp-0x14]
  4080ff:	movsxd rdx,ecx
  408102:	shl    rdx,0x1
  408106:	add    rax,rdx
  408109:	add    rax,0x4
  40810d:	mov    rdi,rax
  408110:	call   414980 <main@@Base+0x590>
  408115:	mov    WORD PTR [rbp-0x12],ax
  408119:	cmp    WORD PTR [rbp-0x12],0x0
  40811e:	je     408162 <verify_monster@@Base+0x1552>
  408124:	mov    rax,QWORD PTR [rbp-0x8]
  408128:	movzx  ecx,WORD PTR [rbp-0x12]
  40812c:	movsxd rdx,ecx
  40812f:	add    rax,rdx
  408132:	mov    QWORD PTR [rbp-0x10],rax
  408136:	mov    rax,QWORD PTR [rbp-0x10]
  40813a:	add    rax,0x4
  40813e:	mov    rdx,QWORD PTR [rbp-0x10]
  408142:	mov    rdi,rdx
  408145:	mov    QWORD PTR [rbp-0x30],rax
  408149:	call   414930 <main@@Base+0x540>
  40814e:	mov    eax,eax
  408150:	mov    edx,eax
  408152:	mov    rdi,QWORD PTR [rbp-0x30]
  408156:	add    rdi,rdx
  408159:	mov    rax,rdi
  40815c:	add    rsp,0x30
  408160:	pop    rbp
  408161:	ret    
  408162:	lea    rdi,[rip+0x1e261]        # 4263ca <_IO_stdin_used@@Base+0x33ca>
  408169:	lea    rsi,[rip+0x1d94e]        # 425abe <_IO_stdin_used@@Base+0x2abe>
  408170:	mov    edx,0x2bb
  408175:	lea    rcx,[rip+0x1e1fd]        # 426379 <_IO_stdin_used@@Base+0x3379>
  40817c:	call   404090 <__assert_fail@plt>
  408181:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40818b:	nop    DWORD PTR [rax+rax*1+0x0]
  408190:	push   rbp
  408191:	mov    rbp,rsp
  408194:	sub    rsp,0x10
  408198:	mov    QWORD PTR [rbp-0x8],rdi
  40819c:	cmp    QWORD PTR [rbp-0x8],0x0
  4081a1:	je     4081c4 <verify_monster@@Base+0x15b4>
  4081a7:	mov    rax,QWORD PTR [rbp-0x8]
  4081ab:	add    rax,0xfffffffffffffffc
  4081af:	mov    rdi,rax
  4081b2:	call   414930 <main@@Base+0x540>
  4081b7:	mov    eax,eax
  4081b9:	mov    edi,eax
  4081bb:	mov    QWORD PTR [rbp-0x10],rdi
  4081bf:	jmp    4081d1 <verify_monster@@Base+0x15c1>
  4081c4:	xor    eax,eax
  4081c6:	mov    ecx,eax
  4081c8:	mov    QWORD PTR [rbp-0x10],rcx
  4081cc:	jmp    4081d1 <verify_monster@@Base+0x15c1>
  4081d1:	mov    rax,QWORD PTR [rbp-0x10]
  4081d5:	add    rsp,0x10
  4081d9:	pop    rbp
  4081da:	ret    
  4081db:	nop    DWORD PTR [rax+rax*1+0x0]
  4081e0:	push   rbp
  4081e1:	mov    rbp,rsp
  4081e4:	sub    rsp,0x30
  4081e8:	mov    QWORD PTR [rbp-0x8],rdi
  4081ec:	mov    WORD PTR [rbp-0xa],0x0
  4081f2:	cmp    QWORD PTR [rbp-0x8],0x0
  4081f7:	je     408211 <verify_monster@@Base+0x1601>
  4081fd:	mov    al,0x1
  4081ff:	test   al,0x1
  408201:	jne    40820c <verify_monster@@Base+0x15fc>
  408207:	jmp    408211 <verify_monster@@Base+0x1601>
  40820c:	jmp    408230 <verify_monster@@Base+0x1620>
  408211:	lea    rdi,[rip+0x1d880]        # 425a98 <_IO_stdin_used@@Base+0x2a98>
  408218:	lea    rsi,[rip+0x1d89f]        # 425abe <_IO_stdin_used@@Base+0x2abe>
  40821f:	mov    edx,0x2c1
  408224:	lea    rcx,[rip+0x1e1c0]        # 4263eb <_IO_stdin_used@@Base+0x33eb>
  40822b:	call   404090 <__assert_fail@plt>
  408230:	mov    WORD PTR [rbp-0xc],0x6
  408236:	mov    rax,QWORD PTR [rbp-0x8]
  40823a:	mov    rcx,QWORD PTR [rbp-0x8]
  40823e:	mov    rdi,rcx
  408241:	mov    QWORD PTR [rbp-0x20],rax
  408245:	call   414960 <main@@Base+0x570>
  40824a:	xor    edx,edx
  40824c:	mov    ecx,edx
  40824e:	movsxd rdi,eax
  408251:	sub    rcx,rdi
  408254:	mov    rdi,QWORD PTR [rbp-0x20]
  408258:	add    rdi,rcx
  40825b:	mov    QWORD PTR [rbp-0x18],rdi
  40825f:	mov    rcx,QWORD PTR [rbp-0x18]
  408263:	mov    rdi,rcx
  408266:	call   414980 <main@@Base+0x590>
  40826b:	movzx  edx,ax
  40826e:	mov    ecx,edx
  408270:	movzx  edx,WORD PTR [rbp-0xc]
  408274:	add    edx,0x3
  408277:	movsxd rdi,edx
  40827a:	shl    rdi,0x1
  40827e:	cmp    rcx,rdi
  408281:	jb     4082a9 <verify_monster@@Base+0x1699>
  408287:	mov    rax,QWORD PTR [rbp-0x18]
  40828b:	movzx  ecx,WORD PTR [rbp-0xc]
  40828f:	movsxd rdx,ecx
  408292:	shl    rdx,0x1
  408296:	add    rax,rdx
  408299:	add    rax,0x4
  40829d:	mov    rdi,rax
  4082a0:	call   414980 <main@@Base+0x590>
  4082a5:	mov    WORD PTR [rbp-0xa],ax
  4082a9:	movzx  eax,WORD PTR [rbp-0xa]
  4082ad:	cmp    eax,0x0
  4082b0:	je     4082d7 <verify_monster@@Base+0x16c7>
  4082b6:	mov    rax,QWORD PTR [rbp-0x8]
  4082ba:	movzx  ecx,WORD PTR [rbp-0xa]
  4082be:	movsxd rdx,ecx
  4082c1:	add    rax,rdx
  4082c4:	mov    rdi,rax
  4082c7:	call   416d70 <main@@Base+0x2980>
  4082cc:	movsx  ecx,al
  4082cf:	mov    DWORD PTR [rbp-0x24],ecx
  4082d2:	jmp    4082e4 <verify_monster@@Base+0x16d4>
  4082d7:	mov    eax,0x8
  4082dc:	mov    DWORD PTR [rbp-0x24],eax
  4082df:	jmp    4082e4 <verify_monster@@Base+0x16d4>
  4082e4:	mov    eax,DWORD PTR [rbp-0x24]
  4082e7:	mov    cl,al
  4082e9:	movsx  eax,cl
  4082ec:	add    rsp,0x30
  4082f0:	pop    rbp
  4082f1:	ret    
  4082f2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4082fc:	nop    DWORD PTR [rax+0x0]
  408300:	push   rbp
  408301:	mov    rbp,rsp
  408304:	mov    al,dil
  408307:	mov    BYTE PTR [rbp-0x9],al
  40830a:	movsx  edi,BYTE PTR [rbp-0x9]
  40830e:	mov    ecx,edi
  408310:	sub    ecx,0x1
  408313:	mov    DWORD PTR [rbp-0x10],edi
  408316:	mov    DWORD PTR [rbp-0x14],ecx
  408319:	je     40834c <verify_monster@@Base+0x173c>
  40831f:	jmp    408324 <verify_monster@@Base+0x1714>
  408324:	mov    eax,DWORD PTR [rbp-0x10]
  408327:	sub    eax,0x2
  40832a:	mov    DWORD PTR [rbp-0x18],eax
  40832d:	je     40835c <verify_monster@@Base+0x174c>
  408333:	jmp    408338 <verify_monster@@Base+0x1728>
  408338:	mov    eax,DWORD PTR [rbp-0x10]
  40833b:	sub    eax,0x8
  40833e:	mov    DWORD PTR [rbp-0x1c],eax
  408341:	je     40836c <verify_monster@@Base+0x175c>
  408347:	jmp    40837c <verify_monster@@Base+0x176c>
  40834c:	lea    rax,[rip+0x1e0f1]        # 426444 <_IO_stdin_used@@Base+0x3444>
  408353:	mov    QWORD PTR [rbp-0x8],rax
  408357:	jmp    408387 <verify_monster@@Base+0x1777>
  40835c:	lea    rax,[rip+0x1b640]        # 4239a3 <_IO_stdin_used@@Base+0x9a3>
  408363:	mov    QWORD PTR [rbp-0x8],rax
  408367:	jmp    408387 <verify_monster@@Base+0x1777>
  40836c:	lea    rax,[rip+0x1e0d5]        # 426448 <_IO_stdin_used@@Base+0x3448>
  408373:	mov    QWORD PTR [rbp-0x8],rax
  408377:	jmp    408387 <verify_monster@@Base+0x1777>
  40837c:	lea    rax,[rip+0x1d020]        # 4253a3 <_IO_stdin_used@@Base+0x23a3>
  408383:	mov    QWORD PTR [rbp-0x8],rax
  408387:	mov    rax,QWORD PTR [rbp-0x8]
  40838b:	pop    rbp
  40838c:	ret    
  40838d:	nop    DWORD PTR [rax]
  408390:	push   rbp
  408391:	mov    rbp,rsp
  408394:	mov    al,dil
  408397:	mov    BYTE PTR [rbp-0x5],al
  40839a:	movsx  edi,BYTE PTR [rbp-0x5]
  40839e:	mov    ecx,edi
  4083a0:	sub    ecx,0x1
  4083a3:	mov    DWORD PTR [rbp-0xc],edi
  4083a6:	mov    DWORD PTR [rbp-0x10],ecx
  4083a9:	je     4083dc <verify_monster@@Base+0x17cc>
  4083af:	jmp    4083b4 <verify_monster@@Base+0x17a4>
  4083b4:	mov    eax,DWORD PTR [rbp-0xc]
  4083b7:	sub    eax,0x2
  4083ba:	mov    DWORD PTR [rbp-0x14],eax
  4083bd:	je     4083e8 <verify_monster@@Base+0x17d8>
  4083c3:	jmp    4083c8 <verify_monster@@Base+0x17b8>
  4083c8:	mov    eax,DWORD PTR [rbp-0xc]
  4083cb:	sub    eax,0x8
  4083ce:	mov    DWORD PTR [rbp-0x18],eax
  4083d1:	je     4083f4 <verify_monster@@Base+0x17e4>
  4083d7:	jmp    408400 <verify_monster@@Base+0x17f0>
  4083dc:	mov    DWORD PTR [rbp-0x4],0x1
  4083e3:	jmp    408407 <verify_monster@@Base+0x17f7>
  4083e8:	mov    DWORD PTR [rbp-0x4],0x1
  4083ef:	jmp    408407 <verify_monster@@Base+0x17f7>
  4083f4:	mov    DWORD PTR [rbp-0x4],0x1
  4083fb:	jmp    408407 <verify_monster@@Base+0x17f7>
  408400:	mov    DWORD PTR [rbp-0x4],0x0
  408407:	mov    eax,DWORD PTR [rbp-0x4]
  40840a:	pop    rbp
  40840b:	ret    
  40840c:	nop    DWORD PTR [rax+0x0]
  408410:	push   rbp
  408411:	mov    rbp,rsp
  408414:	mov    al,dil
  408417:	mov    BYTE PTR [rbp-0x5],al
  40841a:	movzx  edi,BYTE PTR [rbp-0x5]
  40841e:	mov    ecx,edi
  408420:	mov    rdx,rcx
  408423:	sub    rdx,0x4
  408427:	mov    QWORD PTR [rbp-0x10],rcx
  40842b:	mov    QWORD PTR [rbp-0x18],rdx
  40842f:	ja     408485 <verify_monster@@Base+0x1875>
  408435:	lea    rax,[rip+0x1ac14]        # 423050 <_IO_stdin_used@@Base+0x50>
  40843c:	mov    rcx,QWORD PTR [rbp-0x10]
  408440:	movsxd rdx,DWORD PTR [rax+rcx*4]
  408444:	add    rdx,rax
  408447:	jmp    rdx
  408449:	mov    DWORD PTR [rbp-0x4],0x1
  408450:	jmp    40848c <verify_monster@@Base+0x187c>
  408455:	mov    DWORD PTR [rbp-0x4],0x1
  40845c:	jmp    40848c <verify_monster@@Base+0x187c>
  408461:	mov    DWORD PTR [rbp-0x4],0x1
  408468:	jmp    40848c <verify_monster@@Base+0x187c>
  40846d:	mov    DWORD PTR [rbp-0x4],0x1
  408474:	jmp    40848c <verify_monster@@Base+0x187c>
  408479:	mov    DWORD PTR [rbp-0x4],0x1
  408480:	jmp    40848c <verify_monster@@Base+0x187c>
  408485:	mov    DWORD PTR [rbp-0x4],0x0
  40848c:	mov    eax,DWORD PTR [rbp-0x4]
  40848f:	pop    rbp
  408490:	ret    
  408491:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40849b:	nop    DWORD PTR [rax+rax*1+0x0]
  4084a0:	push   rbp
  4084a1:	mov    rbp,rsp
  4084a4:	sub    rsp,0x40
  4084a8:	mov    QWORD PTR [rbp-0x10],rdi
  4084ac:	mov    WORD PTR [rbp-0x1a],0x0
  4084b2:	cmp    QWORD PTR [rbp-0x10],0x0
  4084b7:	je     4084d1 <verify_monster@@Base+0x18c1>
  4084bd:	mov    al,0x1
  4084bf:	test   al,0x1
  4084c1:	jne    4084cc <verify_monster@@Base+0x18bc>
  4084c7:	jmp    4084d1 <verify_monster@@Base+0x18c1>
  4084cc:	jmp    4084f0 <verify_monster@@Base+0x18e0>
  4084d1:	lea    rdi,[rip+0x1d5c0]        # 425a98 <_IO_stdin_used@@Base+0x2a98>
  4084d8:	lea    rsi,[rip+0x1d5df]        # 425abe <_IO_stdin_used@@Base+0x2abe>
  4084df:	mov    edx,0x2c2
  4084e4:	lea    rcx,[rip+0x1df62]        # 42644d <_IO_stdin_used@@Base+0x344d>
  4084eb:	call   404090 <__assert_fail@plt>
  4084f0:	mov    WORD PTR [rbp-0x1c],0x5
  4084f6:	mov    rax,QWORD PTR [rbp-0x10]
  4084fa:	mov    rcx,QWORD PTR [rbp-0x10]
  4084fe:	mov    rdi,rcx
  408501:	mov    QWORD PTR [rbp-0x30],rax
  408505:	call   414960 <main@@Base+0x570>
  40850a:	xor    edx,edx
  40850c:	mov    ecx,edx
  40850e:	movsxd rdi,eax
  408511:	sub    rcx,rdi
  408514:	mov    rdi,QWORD PTR [rbp-0x30]
  408518:	add    rdi,rcx
  40851b:	mov    QWORD PTR [rbp-0x28],rdi
  40851f:	mov    rcx,QWORD PTR [rbp-0x28]
  408523:	mov    rdi,rcx
  408526:	call   414980 <main@@Base+0x590>
  40852b:	movzx  edx,ax
  40852e:	mov    ecx,edx
  408530:	movzx  edx,WORD PTR [rbp-0x1c]
  408534:	add    edx,0x3
  408537:	movsxd rdi,edx
  40853a:	shl    rdi,0x1
  40853e:	cmp    rcx,rdi
  408541:	jb     408569 <verify_monster@@Base+0x1959>
  408547:	mov    rax,QWORD PTR [rbp-0x28]
  40854b:	movzx  ecx,WORD PTR [rbp-0x1c]
  40854f:	movsxd rdx,ecx
  408552:	shl    rdx,0x1
  408556:	add    rax,rdx
  408559:	add    rax,0x4
  40855d:	mov    rdi,rax
  408560:	call   414980 <main@@Base+0x590>
  408565:	mov    WORD PTR [rbp-0x1a],ax
  408569:	cmp    WORD PTR [rbp-0x1a],0x0
  40856e:	je     4085b2 <verify_monster@@Base+0x19a2>
  408574:	mov    rax,QWORD PTR [rbp-0x10]
  408578:	movzx  ecx,WORD PTR [rbp-0x1a]
  40857c:	movsxd rdx,ecx
  40857f:	add    rax,rdx
  408582:	mov    QWORD PTR [rbp-0x18],rax
  408586:	mov    rax,QWORD PTR [rbp-0x18]
  40858a:	add    rax,0x4
  40858e:	mov    rdx,QWORD PTR [rbp-0x18]
  408592:	mov    rdi,rdx
  408595:	mov    QWORD PTR [rbp-0x38],rax
  408599:	call   414930 <main@@Base+0x540>
  40859e:	mov    eax,eax
  4085a0:	mov    edx,eax
  4085a2:	mov    rdi,QWORD PTR [rbp-0x38]
  4085a6:	add    rdi,rdx
  4085a9:	mov    QWORD PTR [rbp-0x8],rdi
  4085ad:	jmp    4085ba <verify_monster@@Base+0x19aa>
  4085b2:	mov    QWORD PTR [rbp-0x8],0x0
  4085ba:	mov    rax,QWORD PTR [rbp-0x8]
  4085be:	add    rsp,0x40
  4085c2:	pop    rbp
  4085c3:	ret    
  4085c4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4085ce:	xchg   ax,ax
  4085d0:	push   rbp
  4085d1:	mov    rbp,rsp
  4085d4:	sub    rsp,0x10
  4085d8:	mov    QWORD PTR [rbp-0x8],rdi
  4085dc:	mov    rdi,QWORD PTR [rbp-0x8]
  4085e0:	call   416db0 <main@@Base+0x29c0>
  4085e5:	add    rsp,0x10
  4085e9:	pop    rbp
  4085ea:	ret    
  4085eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4085f0:	push   rbp
  4085f1:	mov    rbp,rsp
  4085f4:	sub    rsp,0x10
  4085f8:	mov    QWORD PTR [rbp-0x8],rdi
  4085fc:	mov    QWORD PTR [rbp-0x10],rsi
  408600:	mov    rdi,QWORD PTR [rbp-0x8]
  408604:	call   416db0 <main@@Base+0x29c0>
  408609:	cmp    rax,QWORD PTR [rbp-0x10]
  40860d:	jbe    408627 <verify_monster@@Base+0x1a17>
  408613:	mov    al,0x1
  408615:	test   al,0x1
  408617:	jne    408622 <verify_monster@@Base+0x1a12>
  40861d:	jmp    408627 <verify_monster@@Base+0x1a17>
  408622:	jmp    408646 <verify_monster@@Base+0x1a36>
  408627:	lea    rdi,[rip+0x1de8b]        # 4264b9 <_IO_stdin_used@@Base+0x34b9>
  40862e:	lea    rsi,[rip+0x1debb]        # 4264f0 <_IO_stdin_used@@Base+0x34f0>
  408635:	mov    edx,0x18b
  40863a:	lea    rcx,[rip+0x1df31]        # 426572 <_IO_stdin_used@@Base+0x3572>
  408641:	call   404090 <__assert_fail@plt>
  408646:	mov    rax,QWORD PTR [rbp-0x8]
  40864a:	add    rax,QWORD PTR [rbp-0x10]
  40864e:	mov    rdi,rax
  408651:	call   415820 <main@@Base+0x1430>
  408656:	movzx  eax,al
  408659:	add    rsp,0x10
  40865d:	pop    rbp
  40865e:	ret    
  40865f:	nop
  408660:	push   rbp
  408661:	mov    rbp,rsp
  408664:	sub    rsp,0x30
  408668:	mov    QWORD PTR [rbp-0x8],rdi
  40866c:	mov    WORD PTR [rbp-0xa],0x0
  408672:	cmp    QWORD PTR [rbp-0x8],0x0
  408677:	je     408691 <verify_monster@@Base+0x1a81>
  40867d:	mov    al,0x1
  40867f:	test   al,0x1
  408681:	jne    40868c <verify_monster@@Base+0x1a7c>
  408687:	jmp    408691 <verify_monster@@Base+0x1a81>
  40868c:	jmp    4086b0 <verify_monster@@Base+0x1aa0>
  408691:	lea    rdi,[rip+0x1d400]        # 425a98 <_IO_stdin_used@@Base+0x2a98>
  408698:	lea    rsi,[rip+0x1d41f]        # 425abe <_IO_stdin_used@@Base+0x2abe>
  40869f:	mov    edx,0x2ba
  4086a4:	lea    rcx,[rip+0x1df09]        # 4265b4 <_IO_stdin_used@@Base+0x35b4>
  4086ab:	call   404090 <__assert_fail@plt>
  4086b0:	mov    WORD PTR [rbp-0xc],0x1
  4086b6:	mov    rax,QWORD PTR [rbp-0x8]
  4086ba:	mov    rcx,QWORD PTR [rbp-0x8]
  4086be:	mov    rdi,rcx
  4086c1:	mov    QWORD PTR [rbp-0x20],rax
  4086c5:	call   414960 <main@@Base+0x570>
  4086ca:	xor    edx,edx
  4086cc:	mov    ecx,edx
  4086ce:	movsxd rdi,eax
  4086d1:	sub    rcx,rdi
  4086d4:	mov    rdi,QWORD PTR [rbp-0x20]
  4086d8:	add    rdi,rcx
  4086db:	mov    QWORD PTR [rbp-0x18],rdi
  4086df:	mov    rcx,QWORD PTR [rbp-0x18]
  4086e3:	mov    rdi,rcx
  4086e6:	call   414980 <main@@Base+0x590>
  4086eb:	movzx  edx,ax
  4086ee:	mov    ecx,edx
  4086f0:	movzx  edx,WORD PTR [rbp-0xc]
  4086f4:	add    edx,0x3
  4086f7:	movsxd rdi,edx
  4086fa:	shl    rdi,0x1
  4086fe:	cmp    rcx,rdi
  408701:	jb     408729 <verify_monster@@Base+0x1b19>
  408707:	mov    rax,QWORD PTR [rbp-0x18]
  40870b:	movzx  ecx,WORD PTR [rbp-0xc]
  40870f:	movsxd rdx,ecx
  408712:	shl    rdx,0x1
  408716:	add    rax,rdx
  408719:	add    rax,0x4
  40871d:	mov    rdi,rax
  408720:	call   414980 <main@@Base+0x590>
  408725:	mov    WORD PTR [rbp-0xa],ax
  408729:	movzx  eax,WORD PTR [rbp-0xa]
  40872d:	cmp    eax,0x0
  408730:	je     408757 <verify_monster@@Base+0x1b47>
  408736:	mov    rax,QWORD PTR [rbp-0x8]
  40873a:	movzx  ecx,WORD PTR [rbp-0xa]
  40873e:	movsxd rdx,ecx
  408741:	add    rax,rdx
  408744:	mov    rdi,rax
  408747:	call   4149b0 <main@@Base+0x5c0>
  40874c:	movsx  ecx,ax
  40874f:	mov    DWORD PTR [rbp-0x24],ecx
  408752:	jmp    408764 <verify_monster@@Base+0x1b54>
  408757:	mov    eax,0x96
  40875c:	mov    DWORD PTR [rbp-0x24],eax
  40875f:	jmp    408764 <verify_monster@@Base+0x1b54>
  408764:	mov    eax,DWORD PTR [rbp-0x24]
  408767:	mov    cx,ax
  40876a:	movsx  eax,cx
  40876d:	add    rsp,0x30
  408771:	pop    rbp
  408772:	ret    
  408773:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40877d:	nop    DWORD PTR [rax]
  408780:	push   rbp
  408781:	mov    rbp,rsp
  408784:	sub    rsp,0x20
  408788:	mov    QWORD PTR [rbp-0x8],rdi
  40878c:	mov    WORD PTR [rbp-0xa],0x0
  408792:	cmp    QWORD PTR [rbp-0x8],0x0
  408797:	je     4087b1 <verify_monster@@Base+0x1ba1>
  40879d:	mov    al,0x1
  40879f:	test   al,0x1
  4087a1:	jne    4087ac <verify_monster@@Base+0x1b9c>
  4087a7:	jmp    4087b1 <verify_monster@@Base+0x1ba1>
  4087ac:	jmp    4087d0 <verify_monster@@Base+0x1bc0>
  4087b1:	lea    rdi,[rip+0x1d2e0]        # 425a98 <_IO_stdin_used@@Base+0x2a98>
  4087b8:	lea    rsi,[rip+0x1d2ff]        # 425abe <_IO_stdin_used@@Base+0x2abe>
  4087bf:	mov    edx,0x2ba
  4087c4:	lea    rcx,[rip+0x1de2d]        # 4265f8 <_IO_stdin_used@@Base+0x35f8>
  4087cb:	call   404090 <__assert_fail@plt>
  4087d0:	mov    WORD PTR [rbp-0xc],0x1
  4087d6:	mov    rax,QWORD PTR [rbp-0x8]
  4087da:	mov    rcx,QWORD PTR [rbp-0x8]
  4087de:	mov    rdi,rcx
  4087e1:	mov    QWORD PTR [rbp-0x20],rax
  4087e5:	call   414960 <main@@Base+0x570>
  4087ea:	xor    edx,edx
  4087ec:	mov    ecx,edx
  4087ee:	movsxd rdi,eax
  4087f1:	sub    rcx,rdi
  4087f4:	mov    rdi,QWORD PTR [rbp-0x20]
  4087f8:	add    rdi,rcx
  4087fb:	mov    QWORD PTR [rbp-0x18],rdi
  4087ff:	mov    rcx,QWORD PTR [rbp-0x18]
  408803:	mov    rdi,rcx
  408806:	call   414980 <main@@Base+0x590>
  40880b:	movzx  edx,ax
  40880e:	mov    ecx,edx
  408810:	movzx  edx,WORD PTR [rbp-0xc]
  408814:	add    edx,0x3
  408817:	movsxd rdi,edx
  40881a:	shl    rdi,0x1
  40881e:	cmp    rcx,rdi
  408821:	jb     408849 <verify_monster@@Base+0x1c39>
  408827:	mov    rax,QWORD PTR [rbp-0x18]
  40882b:	movzx  ecx,WORD PTR [rbp-0xc]
  40882f:	movsxd rdx,ecx
  408832:	shl    rdx,0x1
  408836:	add    rax,rdx
  408839:	add    rax,0x4
  40883d:	mov    rdi,rax
  408840:	call   414980 <main@@Base+0x590>
  408845:	mov    WORD PTR [rbp-0xa],ax
  408849:	movzx  eax,WORD PTR [rbp-0xa]
  40884d:	cmp    eax,0x0
  408850:	setne  cl
  408853:	and    cl,0x1
  408856:	movzx  eax,cl
  408859:	add    rsp,0x20
  40885d:	pop    rbp
  40885e:	ret    
  40885f:	nop
  408860:	push   rbp
  408861:	mov    rbp,rsp
  408864:	sub    rsp,0x40
  408868:	mov    QWORD PTR [rbp-0x10],rdi
  40886c:	mov    WORD PTR [rbp-0x1a],0x0
  408872:	cmp    QWORD PTR [rbp-0x10],0x0
  408877:	je     408891 <verify_monster@@Base+0x1c81>
  40887d:	mov    al,0x1
  40887f:	test   al,0x1
  408881:	jne    40888c <verify_monster@@Base+0x1c7c>
  408887:	jmp    408891 <verify_monster@@Base+0x1c81>
  40888c:	jmp    4088b0 <verify_monster@@Base+0x1ca0>
  408891:	lea    rdi,[rip+0x1d200]        # 425a98 <_IO_stdin_used@@Base+0x2a98>
  408898:	lea    rsi,[rip+0x1d21f]        # 425abe <_IO_stdin_used@@Base+0x2abe>
  40889f:	mov    edx,0x2ce
  4088a4:	lea    rcx,[rip+0x1dd98]        # 426643 <_IO_stdin_used@@Base+0x3643>
  4088ab:	call   404090 <__assert_fail@plt>
  4088b0:	mov    WORD PTR [rbp-0x1c],0x9
  4088b6:	mov    rax,QWORD PTR [rbp-0x10]
  4088ba:	mov    rcx,QWORD PTR [rbp-0x10]
  4088be:	mov    rdi,rcx
  4088c1:	mov    QWORD PTR [rbp-0x30],rax
  4088c5:	call   414960 <main@@Base+0x570>
  4088ca:	xor    edx,edx
  4088cc:	mov    ecx,edx
  4088ce:	movsxd rdi,eax
  4088d1:	sub    rcx,rdi
  4088d4:	mov    rdi,QWORD PTR [rbp-0x30]
  4088d8:	add    rdi,rcx
  4088db:	mov    QWORD PTR [rbp-0x28],rdi
  4088df:	mov    rcx,QWORD PTR [rbp-0x28]
  4088e3:	mov    rdi,rcx
  4088e6:	call   414980 <main@@Base+0x590>
  4088eb:	movzx  edx,ax
  4088ee:	mov    ecx,edx
  4088f0:	movzx  edx,WORD PTR [rbp-0x1c]
  4088f4:	add    edx,0x3
  4088f7:	movsxd rdi,edx
  4088fa:	shl    rdi,0x1
  4088fe:	cmp    rcx,rdi
  408901:	jb     408929 <verify_monster@@Base+0x1d19>
  408907:	mov    rax,QWORD PTR [rbp-0x28]
  40890b:	movzx  ecx,WORD PTR [rbp-0x1c]
  40890f:	movsxd rdx,ecx
  408912:	shl    rdx,0x1
  408916:	add    rax,rdx
  408919:	add    rax,0x4
  40891d:	mov    rdi,rax
  408920:	call   414980 <main@@Base+0x590>
  408925:	mov    WORD PTR [rbp-0x1a],ax
  408929:	cmp    WORD PTR [rbp-0x1a],0x0
  40892e:	je     408972 <verify_monster@@Base+0x1d62>
  408934:	mov    rax,QWORD PTR [rbp-0x10]
  408938:	movzx  ecx,WORD PTR [rbp-0x1a]
  40893c:	movsxd rdx,ecx
  40893f:	add    rax,rdx
  408942:	mov    QWORD PTR [rbp-0x18],rax
  408946:	mov    rax,QWORD PTR [rbp-0x18]
  40894a:	add    rax,0x4
  40894e:	mov    rdx,QWORD PTR [rbp-0x18]
  408952:	mov    rdi,rdx
  408955:	mov    QWORD PTR [rbp-0x38],rax
  408959:	call   414930 <main@@Base+0x540>
  40895e:	mov    eax,eax
  408960:	mov    edx,eax
  408962:	mov    rdi,QWORD PTR [rbp-0x38]
  408966:	add    rdi,rdx
  408969:	mov    QWORD PTR [rbp-0x8],rdi
  40896d:	jmp    40897a <verify_monster@@Base+0x1d6a>
  408972:	mov    QWORD PTR [rbp-0x8],0x0
  40897a:	mov    rax,QWORD PTR [rbp-0x8]
  40897e:	add    rsp,0x40
  408982:	pop    rbp
  408983:	ret    
  408984:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40898e:	xchg   ax,ax
  408990:	push   rbp
  408991:	mov    rbp,rsp
  408994:	sub    rsp,0x10
  408998:	mov    QWORD PTR [rbp-0x8],rdi
  40899c:	cmp    QWORD PTR [rbp-0x8],0x0
  4089a1:	je     4089c4 <verify_monster@@Base+0x1db4>
  4089a7:	mov    rax,QWORD PTR [rbp-0x8]
  4089ab:	add    rax,0xfffffffffffffffc
  4089af:	mov    rdi,rax
  4089b2:	call   414930 <main@@Base+0x540>
  4089b7:	mov    eax,eax
  4089b9:	mov    edi,eax
  4089bb:	mov    QWORD PTR [rbp-0x10],rdi
  4089bf:	jmp    4089d1 <verify_monster@@Base+0x1dc1>
  4089c4:	xor    eax,eax
  4089c6:	mov    ecx,eax
  4089c8:	mov    QWORD PTR [rbp-0x10],rcx
  4089cc:	jmp    4089d1 <verify_monster@@Base+0x1dc1>
  4089d1:	mov    rax,QWORD PTR [rbp-0x10]
  4089d5:	add    rsp,0x10
  4089d9:	pop    rbp
  4089da:	ret    
  4089db:	nop    DWORD PTR [rax+rax*1+0x0]
  4089e0:	push   rbp
  4089e1:	mov    rbp,rsp
  4089e4:	sub    rsp,0x10
  4089e8:	mov    QWORD PTR [rbp-0x8],rdi
  4089ec:	mov    QWORD PTR [rbp-0x10],rsi
  4089f0:	mov    rsi,QWORD PTR [rbp-0x8]
  4089f4:	mov    rdi,rsi
  4089f7:	call   416db0 <main@@Base+0x29c0>
  4089fc:	cmp    rax,QWORD PTR [rbp-0x10]
  408a00:	jbe    408a1a <verify_monster@@Base+0x1e0a>
  408a06:	mov    al,0x1
  408a08:	test   al,0x1
  408a0a:	jne    408a15 <verify_monster@@Base+0x1e05>
  408a10:	jmp    408a1a <verify_monster@@Base+0x1e0a>
  408a15:	jmp    408a39 <verify_monster@@Base+0x1e29>
  408a1a:	lea    rdi,[rip+0x1da98]        # 4264b9 <_IO_stdin_used@@Base+0x34b9>
  408a21:	lea    rsi,[rip+0x1d096]        # 425abe <_IO_stdin_used@@Base+0x2abe>
  408a28:	mov    edx,0x17c
  408a2d:	lea    rcx,[rip+0x1dc66]        # 42669a <_IO_stdin_used@@Base+0x369a>
  408a34:	call   404090 <__assert_fail@plt>
  408a39:	mov    rax,QWORD PTR [rbp-0x8]
  408a3d:	mov    rcx,QWORD PTR [rbp-0x10]
  408a41:	shl    rcx,0x2
  408a45:	add    rax,rcx
  408a48:	add    rsp,0x10
  408a4c:	pop    rbp
  408a4d:	ret    
  408a4e:	xchg   ax,ax
  408a50:	push   rbp
  408a51:	mov    rbp,rsp
  408a54:	sub    rsp,0x10
  408a58:	mov    QWORD PTR [rbp-0x8],rdi
  408a5c:	cmp    QWORD PTR [rbp-0x8],0x0
  408a61:	je     408a7e <verify_monster@@Base+0x1e6e>
  408a67:	mov    rax,QWORD PTR [rbp-0x8]
  408a6b:	mov    rdi,rax
  408a6e:	call   4149b0 <main@@Base+0x5c0>
  408a73:	movsx  ecx,ax
  408a76:	mov    DWORD PTR [rbp-0xc],ecx
  408a79:	jmp    408a88 <verify_monster@@Base+0x1e78>
  408a7e:	xor    eax,eax
  408a80:	mov    DWORD PTR [rbp-0xc],eax
  408a83:	jmp    408a88 <verify_monster@@Base+0x1e78>
  408a88:	mov    eax,DWORD PTR [rbp-0xc]
  408a8b:	mov    cx,ax
  408a8e:	movsx  eax,cx
  408a91:	add    rsp,0x10
  408a95:	pop    rbp
  408a96:	ret    
  408a97:	nop    WORD PTR [rax+rax*1+0x0]
  408aa0:	push   rbp
  408aa1:	mov    rbp,rsp
  408aa4:	sub    rsp,0x10
  408aa8:	mov    QWORD PTR [rbp-0x8],rdi
  408aac:	cmp    QWORD PTR [rbp-0x8],0x0
  408ab1:	je     408ad2 <verify_monster@@Base+0x1ec2>
  408ab7:	mov    rax,QWORD PTR [rbp-0x8]
  408abb:	add    rax,0x2
  408abf:	mov    rdi,rax
  408ac2:	call   415780 <main@@Base+0x1390>
  408ac7:	movsx  ecx,al
  408aca:	mov    DWORD PTR [rbp-0xc],ecx
  408acd:	jmp    408adc <verify_monster@@Base+0x1ecc>
  408ad2:	xor    eax,eax
  408ad4:	mov    DWORD PTR [rbp-0xc],eax
  408ad7:	jmp    408adc <verify_monster@@Base+0x1ecc>
  408adc:	mov    eax,DWORD PTR [rbp-0xc]
  408adf:	mov    cl,al
  408ae1:	movsx  eax,cl
  408ae4:	add    rsp,0x10
  408ae8:	pop    rbp
  408ae9:	ret    
  408aea:	nop    WORD PTR [rax+rax*1+0x0]
  408af0:	push   rbp
  408af1:	mov    rbp,rsp
  408af4:	sub    rsp,0x40
  408af8:	mov    QWORD PTR [rbp-0x10],rdi
  408afc:	mov    WORD PTR [rbp-0x1a],0x0
  408b02:	cmp    QWORD PTR [rbp-0x10],0x0
  408b07:	je     408b21 <verify_monster@@Base+0x1f11>
  408b0d:	mov    al,0x1
  408b0f:	test   al,0x1
  408b11:	jne    408b1c <verify_monster@@Base+0x1f0c>
  408b17:	jmp    408b21 <verify_monster@@Base+0x1f11>
  408b1c:	jmp    408b40 <verify_monster@@Base+0x1f30>
  408b21:	lea    rdi,[rip+0x1cf70]        # 425a98 <_IO_stdin_used@@Base+0x2a98>
  408b28:	lea    rsi,[rip+0x1cf8f]        # 425abe <_IO_stdin_used@@Base+0x2abe>
  408b2f:	mov    edx,0x2c7
  408b34:	lea    rcx,[rip+0x1dbba]        # 4266f5 <_IO_stdin_used@@Base+0x36f5>
  408b3b:	call   404090 <__assert_fail@plt>
  408b40:	mov    WORD PTR [rbp-0x1c],0xb
  408b46:	mov    rax,QWORD PTR [rbp-0x10]
  408b4a:	mov    rcx,QWORD PTR [rbp-0x10]
  408b4e:	mov    rdi,rcx
  408b51:	mov    QWORD PTR [rbp-0x30],rax
  408b55:	call   414960 <main@@Base+0x570>
  408b5a:	xor    edx,edx
  408b5c:	mov    ecx,edx
  408b5e:	movsxd rdi,eax
  408b61:	sub    rcx,rdi
  408b64:	mov    rdi,QWORD PTR [rbp-0x30]
  408b68:	add    rdi,rcx
  408b6b:	mov    QWORD PTR [rbp-0x28],rdi
  408b6f:	mov    rcx,QWORD PTR [rbp-0x28]
  408b73:	mov    rdi,rcx
  408b76:	call   414980 <main@@Base+0x590>
  408b7b:	movzx  edx,ax
  408b7e:	mov    ecx,edx
  408b80:	movzx  edx,WORD PTR [rbp-0x1c]
  408b84:	add    edx,0x3
  408b87:	movsxd rdi,edx
  408b8a:	shl    rdi,0x1
  408b8e:	cmp    rcx,rdi
  408b91:	jb     408bb9 <verify_monster@@Base+0x1fa9>
  408b97:	mov    rax,QWORD PTR [rbp-0x28]
  408b9b:	movzx  ecx,WORD PTR [rbp-0x1c]
  408b9f:	movsxd rdx,ecx
  408ba2:	shl    rdx,0x1
  408ba6:	add    rax,rdx
  408ba9:	add    rax,0x4
  408bad:	mov    rdi,rax
  408bb0:	call   414980 <main@@Base+0x590>
  408bb5:	mov    WORD PTR [rbp-0x1a],ax
  408bb9:	cmp    WORD PTR [rbp-0x1a],0x0
  408bbe:	je     408c02 <verify_monster@@Base+0x1ff2>
  408bc4:	mov    rax,QWORD PTR [rbp-0x10]
  408bc8:	movzx  ecx,WORD PTR [rbp-0x1a]
  408bcc:	movsxd rdx,ecx
  408bcf:	add    rax,rdx
  408bd2:	mov    QWORD PTR [rbp-0x18],rax
  408bd6:	mov    rax,QWORD PTR [rbp-0x18]
  408bda:	add    rax,0x4
  408bde:	mov    rdx,QWORD PTR [rbp-0x18]
  408be2:	mov    rdi,rdx
  408be5:	mov    QWORD PTR [rbp-0x38],rax
  408be9:	call   414930 <main@@Base+0x540>
  408bee:	mov    eax,eax
  408bf0:	mov    edx,eax
  408bf2:	mov    rdi,QWORD PTR [rbp-0x38]
  408bf6:	add    rdi,rdx
  408bf9:	mov    QWORD PTR [rbp-0x8],rdi
  408bfd:	jmp    408c0a <verify_monster@@Base+0x1ffa>
  408c02:	mov    QWORD PTR [rbp-0x8],0x0
  408c0a:	mov    rax,QWORD PTR [rbp-0x8]
  408c0e:	add    rsp,0x40
  408c12:	pop    rbp
  408c13:	ret    
  408c14:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408c1e:	xchg   ax,ax
  408c20:	push   rbp
  408c21:	mov    rbp,rsp
  408c24:	sub    rsp,0x10
  408c28:	mov    QWORD PTR [rbp-0x8],rdi
  408c2c:	cmp    QWORD PTR [rbp-0x8],0x0
  408c31:	je     408c54 <verify_monster@@Base+0x2044>
  408c37:	mov    rax,QWORD PTR [rbp-0x8]
  408c3b:	add    rax,0xfffffffffffffffc
  408c3f:	mov    rdi,rax
  408c42:	call   414930 <main@@Base+0x540>
  408c47:	mov    eax,eax
  408c49:	mov    edi,eax
  408c4b:	mov    QWORD PTR [rbp-0x10],rdi
  408c4f:	jmp    408c61 <verify_monster@@Base+0x2051>
  408c54:	xor    eax,eax
  408c56:	mov    ecx,eax
  408c58:	mov    QWORD PTR [rbp-0x10],rcx
  408c5c:	jmp    408c61 <verify_monster@@Base+0x2051>
  408c61:	mov    rax,QWORD PTR [rbp-0x10]
  408c65:	add    rsp,0x10
  408c69:	pop    rbp
  408c6a:	ret    
  408c6b:	nop    DWORD PTR [rax+rax*1+0x0]
  408c70:	push   rbp
  408c71:	mov    rbp,rsp
  408c74:	sub    rsp,0x20
  408c78:	mov    QWORD PTR [rbp-0x8],rdi
  408c7c:	mov    QWORD PTR [rbp-0x10],rsi
  408c80:	mov    rsi,QWORD PTR [rbp-0x8]
  408c84:	mov    rdi,QWORD PTR [rbp-0x10]
  408c88:	shl    rdi,0x2
  408c8c:	add    rsi,rdi
  408c8f:	mov    QWORD PTR [rbp-0x18],rsi
  408c93:	mov    rsi,QWORD PTR [rbp-0x8]
  408c97:	mov    rdi,rsi
  408c9a:	call   416db0 <main@@Base+0x29c0>
  408c9f:	cmp    rax,QWORD PTR [rbp-0x10]
  408ca3:	jbe    408cbd <verify_monster@@Base+0x20ad>
  408ca9:	mov    al,0x1
  408cab:	test   al,0x1
  408cad:	jne    408cb8 <verify_monster@@Base+0x20a8>
  408cb3:	jmp    408cbd <verify_monster@@Base+0x20ad>
  408cb8:	jmp    408cdc <verify_monster@@Base+0x20cc>
  408cbd:	lea    rdi,[rip+0x1d7f5]        # 4264b9 <_IO_stdin_used@@Base+0x34b9>
  408cc4:	lea    rsi,[rip+0x1cdf3]        # 425abe <_IO_stdin_used@@Base+0x2abe>
  408ccb:	mov    edx,0x2b5
  408cd0:	lea    rcx,[rip+0x1da84]        # 42675b <_IO_stdin_used@@Base+0x375b>
  408cd7:	call   404090 <__assert_fail@plt>
  408cdc:	mov    rax,QWORD PTR [rbp-0x18]
  408ce0:	mov    rcx,QWORD PTR [rbp-0x18]
  408ce4:	mov    rdi,rcx
  408ce7:	mov    QWORD PTR [rbp-0x20],rax
  408ceb:	call   414930 <main@@Base+0x540>
  408cf0:	mov    eax,eax
  408cf2:	mov    ecx,eax
  408cf4:	mov    rdi,QWORD PTR [rbp-0x20]
  408cf8:	add    rdi,rcx
  408cfb:	mov    rax,rdi
  408cfe:	add    rsp,0x20
  408d02:	pop    rbp
  408d03:	ret    
  408d04:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408d0e:	xchg   ax,ax
  408d10:	push   rbp
  408d11:	mov    rbp,rsp
  408d14:	sub    rsp,0x40
  408d18:	mov    QWORD PTR [rbp-0x10],rdi
  408d1c:	mov    WORD PTR [rbp-0x1a],0x0
  408d22:	cmp    QWORD PTR [rbp-0x10],0x0
  408d27:	je     408d41 <verify_monster@@Base+0x2131>
  408d2d:	mov    al,0x1
  408d2f:	test   al,0x1
  408d31:	jne    408d3c <verify_monster@@Base+0x212c>
  408d37:	jmp    408d41 <verify_monster@@Base+0x2131>
  408d3c:	jmp    408d60 <verify_monster@@Base+0x2150>
  408d41:	lea    rdi,[rip+0x1cd50]        # 425a98 <_IO_stdin_used@@Base+0x2a98>
  408d48:	lea    rsi,[rip+0x1cd6f]        # 425abe <_IO_stdin_used@@Base+0x2abe>
  408d4f:	mov    edx,0x2c8
  408d54:	lea    rcx,[rip+0x1da63]        # 4267be <_IO_stdin_used@@Base+0x37be>
  408d5b:	call   404090 <__assert_fail@plt>
  408d60:	mov    WORD PTR [rbp-0x1c],0xa
  408d66:	mov    rax,QWORD PTR [rbp-0x10]
  408d6a:	mov    rcx,QWORD PTR [rbp-0x10]
  408d6e:	mov    rdi,rcx
  408d71:	mov    QWORD PTR [rbp-0x30],rax
  408d75:	call   414960 <main@@Base+0x570>
  408d7a:	xor    edx,edx
  408d7c:	mov    ecx,edx
  408d7e:	movsxd rdi,eax
  408d81:	sub    rcx,rdi
  408d84:	mov    rdi,QWORD PTR [rbp-0x30]
  408d88:	add    rdi,rcx
  408d8b:	mov    QWORD PTR [rbp-0x28],rdi
  408d8f:	mov    rcx,QWORD PTR [rbp-0x28]
  408d93:	mov    rdi,rcx
  408d96:	call   414980 <main@@Base+0x590>
  408d9b:	movzx  edx,ax
  408d9e:	mov    ecx,edx
  408da0:	movzx  edx,WORD PTR [rbp-0x1c]
  408da4:	add    edx,0x3
  408da7:	movsxd rdi,edx
  408daa:	shl    rdi,0x1
  408dae:	cmp    rcx,rdi
  408db1:	jb     408dd9 <verify_monster@@Base+0x21c9>
  408db7:	mov    rax,QWORD PTR [rbp-0x28]
  408dbb:	movzx  ecx,WORD PTR [rbp-0x1c]
  408dbf:	movsxd rdx,ecx
  408dc2:	shl    rdx,0x1
  408dc6:	add    rax,rdx
  408dc9:	add    rax,0x4
  408dcd:	mov    rdi,rax
  408dd0:	call   414980 <main@@Base+0x590>
  408dd5:	mov    WORD PTR [rbp-0x1a],ax
  408dd9:	cmp    WORD PTR [rbp-0x1a],0x0
  408dde:	je     408e22 <verify_monster@@Base+0x2212>
  408de4:	mov    rax,QWORD PTR [rbp-0x10]
  408de8:	movzx  ecx,WORD PTR [rbp-0x1a]
  408dec:	movsxd rdx,ecx
  408def:	add    rax,rdx
  408df2:	mov    QWORD PTR [rbp-0x18],rax
  408df6:	mov    rax,QWORD PTR [rbp-0x18]
  408dfa:	add    rax,0x4
  408dfe:	mov    rdx,QWORD PTR [rbp-0x18]
  408e02:	mov    rdi,rdx
  408e05:	mov    QWORD PTR [rbp-0x38],rax
  408e09:	call   414930 <main@@Base+0x540>
  408e0e:	mov    eax,eax
  408e10:	mov    edx,eax
  408e12:	mov    rdi,QWORD PTR [rbp-0x38]
  408e16:	add    rdi,rdx
  408e19:	mov    QWORD PTR [rbp-0x8],rdi
  408e1d:	jmp    408e2a <verify_monster@@Base+0x221a>
  408e22:	mov    QWORD PTR [rbp-0x8],0x0
  408e2a:	mov    rax,QWORD PTR [rbp-0x8]
  408e2e:	add    rsp,0x40
  408e32:	pop    rbp
  408e33:	ret    
  408e34:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408e3e:	xchg   ax,ax
  408e40:	push   rbp
  408e41:	mov    rbp,rsp
  408e44:	sub    rsp,0x10
  408e48:	mov    QWORD PTR [rbp-0x8],rdi
  408e4c:	cmp    QWORD PTR [rbp-0x8],0x0
  408e51:	je     408e74 <verify_monster@@Base+0x2264>
  408e57:	mov    rax,QWORD PTR [rbp-0x8]
  408e5b:	add    rax,0xfffffffffffffffc
  408e5f:	mov    rdi,rax
  408e62:	call   414930 <main@@Base+0x540>
  408e67:	mov    eax,eax
  408e69:	mov    edi,eax
  408e6b:	mov    QWORD PTR [rbp-0x10],rdi
  408e6f:	jmp    408e81 <verify_monster@@Base+0x2271>
  408e74:	xor    eax,eax
  408e76:	mov    ecx,eax
  408e78:	mov    QWORD PTR [rbp-0x10],rcx
  408e7c:	jmp    408e81 <verify_monster@@Base+0x2271>
  408e81:	mov    rax,QWORD PTR [rbp-0x10]
  408e85:	add    rsp,0x10
  408e89:	pop    rbp
  408e8a:	ret    
  408e8b:	nop    DWORD PTR [rax+rax*1+0x0]
  408e90:	push   rbp
  408e91:	mov    rbp,rsp
  408e94:	sub    rsp,0x20
  408e98:	mov    QWORD PTR [rbp-0x8],rdi
  408e9c:	mov    QWORD PTR [rbp-0x10],rsi
  408ea0:	mov    rsi,QWORD PTR [rbp-0x8]
  408ea4:	mov    rdi,QWORD PTR [rbp-0x10]
  408ea8:	shl    rdi,0x2
  408eac:	add    rsi,rdi
  408eaf:	mov    QWORD PTR [rbp-0x18],rsi
  408eb3:	mov    rsi,QWORD PTR [rbp-0x8]
  408eb7:	mov    rdi,rsi
  408eba:	call   416db0 <main@@Base+0x29c0>
  408ebf:	cmp    rax,QWORD PTR [rbp-0x10]
  408ec3:	jbe    408edd <verify_monster@@Base+0x22cd>
  408ec9:	mov    al,0x1
  408ecb:	test   al,0x1
  408ecd:	jne    408ed8 <verify_monster@@Base+0x22c8>
  408ed3:	jmp    408edd <verify_monster@@Base+0x22cd>
  408ed8:	jmp    408efc <verify_monster@@Base+0x22ec>
  408edd:	lea    rdi,[rip+0x1d5d5]        # 4264b9 <_IO_stdin_used@@Base+0x34b9>
  408ee4:	lea    rsi,[rip+0x1d605]        # 4264f0 <_IO_stdin_used@@Base+0x34f0>
  408eeb:	mov    edx,0x6c
  408ef0:	lea    rcx,[rip+0x1d929]        # 426820 <_IO_stdin_used@@Base+0x3820>
  408ef7:	call   404090 <__assert_fail@plt>
  408efc:	mov    rax,QWORD PTR [rbp-0x18]
  408f00:	mov    rcx,QWORD PTR [rbp-0x18]
  408f04:	mov    rdi,rcx
  408f07:	mov    QWORD PTR [rbp-0x20],rax
  408f0b:	call   414930 <main@@Base+0x540>
  408f10:	mov    eax,eax
  408f12:	mov    ecx,eax
  408f14:	mov    rdi,QWORD PTR [rbp-0x20]
  408f18:	add    rdi,rcx
  408f1b:	add    rdi,0x4
  408f1f:	mov    rax,rdi
  408f22:	add    rsp,0x20
  408f26:	pop    rbp
  408f27:	ret    
  408f28:	nop    DWORD PTR [rax+rax*1+0x0]
  408f30:	push   rbp
  408f31:	mov    rbp,rsp
  408f34:	sub    rsp,0x20
  408f38:	mov    QWORD PTR [rbp-0x8],rdi
  408f3c:	mov    WORD PTR [rbp-0xa],0x0
  408f42:	cmp    QWORD PTR [rbp-0x8],0x0
  408f47:	je     408f61 <verify_monster@@Base+0x2351>
  408f4d:	mov    al,0x1
  408f4f:	test   al,0x1
  408f51:	jne    408f5c <verify_monster@@Base+0x234c>
  408f57:	jmp    408f61 <verify_monster@@Base+0x2351>
  408f5c:	jmp    408f80 <verify_monster@@Base+0x2370>
  408f61:	lea    rdi,[rip+0x1cb30]        # 425a98 <_IO_stdin_used@@Base+0x2a98>
  408f68:	lea    rsi,[rip+0x1cb4f]        # 425abe <_IO_stdin_used@@Base+0x2abe>
  408f6f:	mov    edx,0x2ca
  408f74:	lea    rcx,[rip+0x1d8f6]        # 426871 <_IO_stdin_used@@Base+0x3871>
  408f7b:	call   404090 <__assert_fail@plt>
  408f80:	mov    WORD PTR [rbp-0xc],0x18
  408f86:	mov    rax,QWORD PTR [rbp-0x8]
  408f8a:	mov    rcx,QWORD PTR [rbp-0x8]
  408f8e:	mov    rdi,rcx
  408f91:	mov    QWORD PTR [rbp-0x20],rax
  408f95:	call   414960 <main@@Base+0x570>
  408f9a:	xor    edx,edx
  408f9c:	mov    ecx,edx
  408f9e:	movsxd rdi,eax
  408fa1:	sub    rcx,rdi
  408fa4:	mov    rdi,QWORD PTR [rbp-0x20]
  408fa8:	add    rdi,rcx
  408fab:	mov    QWORD PTR [rbp-0x18],rdi
  408faf:	mov    rcx,QWORD PTR [rbp-0x18]
  408fb3:	mov    rdi,rcx
  408fb6:	call   414980 <main@@Base+0x590>
  408fbb:	movzx  edx,ax
  408fbe:	mov    ecx,edx
  408fc0:	movzx  edx,WORD PTR [rbp-0xc]
  408fc4:	add    edx,0x3
  408fc7:	movsxd rdi,edx
  408fca:	shl    rdi,0x1
  408fce:	cmp    rcx,rdi
  408fd1:	jb     408ff9 <verify_monster@@Base+0x23e9>
  408fd7:	mov    rax,QWORD PTR [rbp-0x18]
  408fdb:	movzx  ecx,WORD PTR [rbp-0xc]
  408fdf:	movsxd rdx,ecx
  408fe2:	shl    rdx,0x1
  408fe6:	add    rax,rdx
  408fe9:	add    rax,0x4
  408fed:	mov    rdi,rax
  408ff0:	call   414980 <main@@Base+0x590>
  408ff5:	mov    WORD PTR [rbp-0xa],ax
  408ff9:	movzx  eax,WORD PTR [rbp-0xa]
  408ffd:	cmp    eax,0x0
  409000:	setne  cl
  409003:	and    cl,0x1
  409006:	movzx  eax,cl
  409009:	add    rsp,0x20
  40900d:	pop    rbp
  40900e:	ret    
  40900f:	nop
  409010:	push   rbp
  409011:	mov    rbp,rsp
  409014:	sub    rsp,0x40
  409018:	mov    QWORD PTR [rbp-0x10],rdi
  40901c:	mov    WORD PTR [rbp-0x1a],0x0
  409022:	cmp    QWORD PTR [rbp-0x10],0x0
  409027:	je     409041 <verify_monster@@Base+0x2431>
  40902d:	mov    al,0x1
  40902f:	test   al,0x1
  409031:	jne    40903c <verify_monster@@Base+0x242c>
  409037:	jmp    409041 <verify_monster@@Base+0x2431>
  40903c:	jmp    409060 <verify_monster@@Base+0x2450>
  409041:	lea    rdi,[rip+0x1ca50]        # 425a98 <_IO_stdin_used@@Base+0x2a98>
  409048:	lea    rsi,[rip+0x1ca6f]        # 425abe <_IO_stdin_used@@Base+0x2abe>
  40904f:	mov    edx,0x2ca
  409054:	lea    rcx,[rip+0x1d86d]        # 4268c8 <_IO_stdin_used@@Base+0x38c8>
  40905b:	call   404090 <__assert_fail@plt>
  409060:	mov    WORD PTR [rbp-0x1c],0x18
  409066:	mov    rax,QWORD PTR [rbp-0x10]
  40906a:	mov    rcx,QWORD PTR [rbp-0x10]
  40906e:	mov    rdi,rcx
  409071:	mov    QWORD PTR [rbp-0x30],rax
  409075:	call   414960 <main@@Base+0x570>
  40907a:	xor    edx,edx
  40907c:	mov    ecx,edx
  40907e:	movsxd rdi,eax
  409081:	sub    rcx,rdi
  409084:	mov    rdi,QWORD PTR [rbp-0x30]
  409088:	add    rdi,rcx
  40908b:	mov    QWORD PTR [rbp-0x28],rdi
  40908f:	mov    rcx,QWORD PTR [rbp-0x28]
  409093:	mov    rdi,rcx
  409096:	call   414980 <main@@Base+0x590>
  40909b:	movzx  edx,ax
  40909e:	mov    ecx,edx
  4090a0:	movzx  edx,WORD PTR [rbp-0x1c]
  4090a4:	add    edx,0x3
  4090a7:	movsxd rdi,edx
  4090aa:	shl    rdi,0x1
  4090ae:	cmp    rcx,rdi
  4090b1:	jb     4090d9 <verify_monster@@Base+0x24c9>
  4090b7:	mov    rax,QWORD PTR [rbp-0x28]
  4090bb:	movzx  ecx,WORD PTR [rbp-0x1c]
  4090bf:	movsxd rdx,ecx
  4090c2:	shl    rdx,0x1
  4090c6:	add    rax,rdx
  4090c9:	add    rax,0x4
  4090cd:	mov    rdi,rax
  4090d0:	call   414980 <main@@Base+0x590>
  4090d5:	mov    WORD PTR [rbp-0x1a],ax
  4090d9:	cmp    WORD PTR [rbp-0x1a],0x0
  4090de:	je     409122 <verify_monster@@Base+0x2512>
  4090e4:	mov    rax,QWORD PTR [rbp-0x10]
  4090e8:	movzx  ecx,WORD PTR [rbp-0x1a]
  4090ec:	movsxd rdx,ecx
  4090ef:	add    rax,rdx
  4090f2:	mov    QWORD PTR [rbp-0x18],rax
  4090f6:	mov    rax,QWORD PTR [rbp-0x18]
  4090fa:	add    rax,0x4
  4090fe:	mov    rdx,QWORD PTR [rbp-0x18]
  409102:	mov    rdi,rdx
  409105:	mov    QWORD PTR [rbp-0x38],rax
  409109:	call   414930 <main@@Base+0x540>
  40910e:	mov    eax,eax
  409110:	mov    edx,eax
  409112:	mov    rdi,QWORD PTR [rbp-0x38]
  409116:	add    rdi,rdx
  409119:	mov    QWORD PTR [rbp-0x8],rdi
  40911d:	jmp    40912a <verify_monster@@Base+0x251a>
  409122:	mov    QWORD PTR [rbp-0x8],0x0
  40912a:	mov    rax,QWORD PTR [rbp-0x8]
  40912e:	add    rsp,0x40
  409132:	pop    rbp
  409133:	ret    
  409134:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40913e:	xchg   ax,ax
  409140:	push   rbp
  409141:	mov    rbp,rsp
  409144:	sub    rsp,0x10
  409148:	mov    QWORD PTR [rbp-0x8],rdi
  40914c:	mov    rdi,QWORD PTR [rbp-0x8]
  409150:	call   416db0 <main@@Base+0x29c0>
  409155:	add    rsp,0x10
  409159:	pop    rbp
  40915a:	ret    
  40915b:	nop    DWORD PTR [rax+rax*1+0x0]
  409160:	push   rbp
  409161:	mov    rbp,rsp
  409164:	sub    rsp,0x10
  409168:	mov    QWORD PTR [rbp-0x8],rdi
  40916c:	mov    QWORD PTR [rbp-0x10],rsi
  409170:	mov    rdi,QWORD PTR [rbp-0x8]
  409174:	call   416db0 <main@@Base+0x29c0>
  409179:	cmp    rax,QWORD PTR [rbp-0x10]
  40917d:	jbe    409197 <verify_monster@@Base+0x2587>
  409183:	mov    al,0x1
  409185:	test   al,0x1
  409187:	jne    409192 <verify_monster@@Base+0x2582>
  40918d:	jmp    409197 <verify_monster@@Base+0x2587>
  409192:	jmp    4091b6 <verify_monster@@Base+0x25a6>
  409197:	lea    rdi,[rip+0x1d31b]        # 4264b9 <_IO_stdin_used@@Base+0x34b9>
  40919e:	lea    rsi,[rip+0x1d34b]        # 4264f0 <_IO_stdin_used@@Base+0x34f0>
  4091a5:	mov    edx,0x18a
  4091aa:	lea    rcx,[rip+0x1d777]        # 426928 <_IO_stdin_used@@Base+0x3928>
  4091b1:	call   404090 <__assert_fail@plt>
  4091b6:	mov    rax,QWORD PTR [rbp-0x8]
  4091ba:	add    rax,QWORD PTR [rbp-0x10]
  4091be:	mov    rdi,rax
  4091c1:	call   416e00 <main@@Base+0x2a10>
  4091c6:	movzx  eax,al
  4091c9:	add    rsp,0x10
  4091cd:	pop    rbp
  4091ce:	ret    
  4091cf:	nop
  4091d0:	push   rbp
  4091d1:	mov    rbp,rsp
  4091d4:	sub    rsp,0x30
  4091d8:	mov    QWORD PTR [rbp-0x8],rdi
  4091dc:	mov    WORD PTR [rbp-0xa],0x0
  4091e2:	cmp    QWORD PTR [rbp-0x8],0x0
  4091e7:	je     409201 <verify_monster@@Base+0x25f1>
  4091ed:	mov    al,0x1
  4091ef:	test   al,0x1
  4091f1:	jne    4091fc <verify_monster@@Base+0x25ec>
  4091f7:	jmp    409201 <verify_monster@@Base+0x25f1>
  4091fc:	jmp    409220 <verify_monster@@Base+0x2610>
  409201:	lea    rdi,[rip+0x1c890]        # 425a98 <_IO_stdin_used@@Base+0x2a98>
  409208:	lea    rsi,[rip+0x1c8af]        # 425abe <_IO_stdin_used@@Base+0x2abe>
  40920f:	mov    edx,0x2cd
  409214:	lea    rcx,[rip+0x1d758]        # 426973 <_IO_stdin_used@@Base+0x3973>
  40921b:	call   404090 <__assert_fail@plt>
  409220:	mov    WORD PTR [rbp-0xc],0x7
  409226:	mov    rax,QWORD PTR [rbp-0x8]
  40922a:	mov    rcx,QWORD PTR [rbp-0x8]
  40922e:	mov    rdi,rcx
  409231:	mov    QWORD PTR [rbp-0x20],rax
  409235:	call   414960 <main@@Base+0x570>
  40923a:	xor    edx,edx
  40923c:	mov    ecx,edx
  40923e:	movsxd rdi,eax
  409241:	sub    rcx,rdi
  409244:	mov    rdi,QWORD PTR [rbp-0x20]
  409248:	add    rdi,rcx
  40924b:	mov    QWORD PTR [rbp-0x18],rdi
  40924f:	mov    rcx,QWORD PTR [rbp-0x18]
  409253:	mov    rdi,rcx
  409256:	call   414980 <main@@Base+0x590>
  40925b:	movzx  edx,ax
  40925e:	mov    ecx,edx
  409260:	movzx  edx,WORD PTR [rbp-0xc]
  409264:	add    edx,0x3
  409267:	movsxd rdi,edx
  40926a:	shl    rdi,0x1
  40926e:	cmp    rcx,rdi
  409271:	jb     409299 <verify_monster@@Base+0x2689>
  409277:	mov    rax,QWORD PTR [rbp-0x18]
  40927b:	movzx  ecx,WORD PTR [rbp-0xc]
  40927f:	movsxd rdx,ecx
  409282:	shl    rdx,0x1
  409286:	add    rax,rdx
  409289:	add    rax,0x4
  40928d:	mov    rdi,rax
  409290:	call   414980 <main@@Base+0x590>
  409295:	mov    WORD PTR [rbp-0xa],ax
  409299:	movzx  eax,WORD PTR [rbp-0xa]
  40929d:	cmp    eax,0x0
  4092a0:	je     4092c7 <verify_monster@@Base+0x26b7>
  4092a6:	mov    rax,QWORD PTR [rbp-0x8]
  4092aa:	movzx  ecx,WORD PTR [rbp-0xa]
  4092ae:	movsxd rdx,ecx
  4092b1:	add    rax,rdx
  4092b4:	mov    rdi,rax
  4092b7:	call   416e40 <main@@Base+0x2a50>
  4092bc:	movzx  ecx,al
  4092bf:	mov    DWORD PTR [rbp-0x24],ecx
  4092c2:	jmp    4092d1 <verify_monster@@Base+0x26c1>
  4092c7:	xor    eax,eax
  4092c9:	mov    DWORD PTR [rbp-0x24],eax
  4092cc:	jmp    4092d1 <verify_monster@@Base+0x26c1>
  4092d1:	mov    eax,DWORD PTR [rbp-0x24]
  4092d4:	mov    cl,al
  4092d6:	movzx  eax,cl
  4092d9:	add    rsp,0x30
  4092dd:	pop    rbp
  4092de:	ret    
  4092df:	nop
  4092e0:	push   rbp
  4092e1:	mov    rbp,rsp
  4092e4:	sub    rsp,0x40
  4092e8:	mov    QWORD PTR [rbp-0x10],rdi
  4092ec:	mov    WORD PTR [rbp-0x1a],0x0
  4092f2:	cmp    QWORD PTR [rbp-0x10],0x0
  4092f7:	je     409311 <verify_monster@@Base+0x2701>
  4092fd:	mov    al,0x1
  4092ff:	test   al,0x1
  409301:	jne    40930c <verify_monster@@Base+0x26fc>
  409307:	jmp    409311 <verify_monster@@Base+0x2701>
  40930c:	jmp    409330 <verify_monster@@Base+0x2720>
  409311:	lea    rdi,[rip+0x1c780]        # 425a98 <_IO_stdin_used@@Base+0x2a98>
  409318:	lea    rsi,[rip+0x1c79f]        # 425abe <_IO_stdin_used@@Base+0x2abe>
  40931f:	mov    edx,0x2cd
  409324:	lea    rcx,[rip+0x1d6a9]        # 4269d4 <_IO_stdin_used@@Base+0x39d4>
  40932b:	call   404090 <__assert_fail@plt>
  409330:	mov    WORD PTR [rbp-0x1c],0x8
  409336:	mov    rax,QWORD PTR [rbp-0x10]
  40933a:	mov    rcx,QWORD PTR [rbp-0x10]
  40933e:	mov    rdi,rcx
  409341:	mov    QWORD PTR [rbp-0x30],rax
  409345:	call   414960 <main@@Base+0x570>
  40934a:	xor    edx,edx
  40934c:	mov    ecx,edx
  40934e:	movsxd rdi,eax
  409351:	sub    rcx,rdi
  409354:	mov    rdi,QWORD PTR [rbp-0x30]
  409358:	add    rdi,rcx
  40935b:	mov    QWORD PTR [rbp-0x28],rdi
  40935f:	mov    rcx,QWORD PTR [rbp-0x28]
  409363:	mov    rdi,rcx
  409366:	call   414980 <main@@Base+0x590>
  40936b:	movzx  edx,ax
  40936e:	mov    ecx,edx
  409370:	movzx  edx,WORD PTR [rbp-0x1c]
  409374:	add    edx,0x3
  409377:	movsxd rdi,edx
  40937a:	shl    rdi,0x1
  40937e:	cmp    rcx,rdi
  409381:	jb     4093a9 <verify_monster@@Base+0x2799>
  409387:	mov    rax,QWORD PTR [rbp-0x28]
  40938b:	movzx  ecx,WORD PTR [rbp-0x1c]
  40938f:	movsxd rdx,ecx
  409392:	shl    rdx,0x1
  409396:	add    rax,rdx
  409399:	add    rax,0x4
  40939d:	mov    rdi,rax
  4093a0:	call   414980 <main@@Base+0x590>
  4093a5:	mov    WORD PTR [rbp-0x1a],ax
  4093a9:	cmp    WORD PTR [rbp-0x1a],0x0
  4093ae:	je     4093ee <verify_monster@@Base+0x27de>
  4093b4:	mov    rax,QWORD PTR [rbp-0x10]
  4093b8:	movzx  ecx,WORD PTR [rbp-0x1a]
  4093bc:	movsxd rdx,ecx
  4093bf:	add    rax,rdx
  4093c2:	mov    QWORD PTR [rbp-0x18],rax
  4093c6:	mov    rax,QWORD PTR [rbp-0x18]
  4093ca:	mov    rdx,QWORD PTR [rbp-0x18]
  4093ce:	mov    rdi,rdx
  4093d1:	mov    QWORD PTR [rbp-0x38],rax
  4093d5:	call   414930 <main@@Base+0x540>
  4093da:	mov    eax,eax
  4093dc:	mov    edx,eax
  4093de:	mov    rdi,QWORD PTR [rbp-0x38]
  4093e2:	add    rdi,rdx
  4093e5:	mov    QWORD PTR [rbp-0x8],rdi
  4093e9:	jmp    4093f6 <verify_monster@@Base+0x27e6>
  4093ee:	mov    QWORD PTR [rbp-0x8],0x0
  4093f6:	mov    rax,QWORD PTR [rbp-0x8]
  4093fa:	add    rsp,0x40
  4093fe:	pop    rbp
  4093ff:	ret    
  409400:	push   rbp
  409401:	mov    rbp,rsp
  409404:	sub    rsp,0x40
  409408:	mov    QWORD PTR [rbp-0x10],rdi
  40940c:	mov    WORD PTR [rbp-0x1a],0x0
  409412:	cmp    QWORD PTR [rbp-0x10],0x0
  409417:	je     409431 <verify_monster@@Base+0x2821>
  40941d:	mov    al,0x1
  40941f:	test   al,0x1
  409421:	jne    40942c <verify_monster@@Base+0x281c>
  409427:	jmp    409431 <verify_monster@@Base+0x2821>
  40942c:	jmp    409450 <verify_monster@@Base+0x2840>
  409431:	lea    rdi,[rip+0x1c660]        # 425a98 <_IO_stdin_used@@Base+0x2a98>
  409438:	lea    rsi,[rip+0x1c67f]        # 425abe <_IO_stdin_used@@Base+0x2abe>
  40943f:	mov    edx,0x2cc
  409444:	lea    rcx,[rip+0x1d5db]        # 426a26 <_IO_stdin_used@@Base+0x3a26>
  40944b:	call   404090 <__assert_fail@plt>
  409450:	mov    WORD PTR [rbp-0x1c],0xc
  409456:	mov    rax,QWORD PTR [rbp-0x10]
  40945a:	mov    rcx,QWORD PTR [rbp-0x10]
  40945e:	mov    rdi,rcx
  409461:	mov    QWORD PTR [rbp-0x30],rax
  409465:	call   414960 <main@@Base+0x570>
  40946a:	xor    edx,edx
  40946c:	mov    ecx,edx
  40946e:	movsxd rdi,eax
  409471:	sub    rcx,rdi
  409474:	mov    rdi,QWORD PTR [rbp-0x30]
  409478:	add    rdi,rcx
  40947b:	mov    QWORD PTR [rbp-0x28],rdi
  40947f:	mov    rcx,QWORD PTR [rbp-0x28]
  409483:	mov    rdi,rcx
  409486:	call   414980 <main@@Base+0x590>
  40948b:	movzx  edx,ax
  40948e:	mov    ecx,edx
  409490:	movzx  edx,WORD PTR [rbp-0x1c]
  409494:	add    edx,0x3
  409497:	movsxd rdi,edx
  40949a:	shl    rdi,0x1
  40949e:	cmp    rcx,rdi
  4094a1:	jb     4094c9 <verify_monster@@Base+0x28b9>
  4094a7:	mov    rax,QWORD PTR [rbp-0x28]
  4094ab:	movzx  ecx,WORD PTR [rbp-0x1c]
  4094af:	movsxd rdx,ecx
  4094b2:	shl    rdx,0x1
  4094b6:	add    rax,rdx
  4094b9:	add    rax,0x4
  4094bd:	mov    rdi,rax
  4094c0:	call   414980 <main@@Base+0x590>
  4094c5:	mov    WORD PTR [rbp-0x1a],ax
  4094c9:	cmp    WORD PTR [rbp-0x1a],0x0
  4094ce:	je     40950e <verify_monster@@Base+0x28fe>
  4094d4:	mov    rax,QWORD PTR [rbp-0x10]
  4094d8:	movzx  ecx,WORD PTR [rbp-0x1a]
  4094dc:	movsxd rdx,ecx
  4094df:	add    rax,rdx
  4094e2:	mov    QWORD PTR [rbp-0x18],rax
  4094e6:	mov    rax,QWORD PTR [rbp-0x18]
  4094ea:	mov    rdx,QWORD PTR [rbp-0x18]
  4094ee:	mov    rdi,rdx
  4094f1:	mov    QWORD PTR [rbp-0x38],rax
  4094f5:	call   414930 <main@@Base+0x540>
  4094fa:	mov    eax,eax
  4094fc:	mov    edx,eax
  4094fe:	mov    rdi,QWORD PTR [rbp-0x38]
  409502:	add    rdi,rdx
  409505:	mov    QWORD PTR [rbp-0x8],rdi
  409509:	jmp    409516 <verify_monster@@Base+0x2906>
  40950e:	mov    QWORD PTR [rbp-0x8],0x0
  409516:	mov    rax,QWORD PTR [rbp-0x8]
  40951a:	add    rsp,0x40
  40951e:	pop    rbp
  40951f:	ret    
  409520:	push   rbp
  409521:	mov    rbp,rsp
  409524:	sub    rsp,0x20
  409528:	xor    esi,esi
  40952a:	mov    eax,0x10
  40952f:	mov    edx,eax
  409531:	mov    QWORD PTR [rbp-0x18],rdi
  409535:	lea    rdi,[rbp-0x10]
  409539:	call   4040a0 <memset@plt>
  40953e:	mov    rdi,QWORD PTR [rbp-0x18]
  409542:	call   4091d0 <verify_monster@@Base+0x25c0>
  409547:	mov    BYTE PTR [rbp-0x10],al
  40954a:	movzx  esi,BYTE PTR [rbp-0x10]
  40954e:	cmp    esi,0x0
  409551:	jne    40955c <verify_monster@@Base+0x294c>
  409557:	jmp    409569 <verify_monster@@Base+0x2959>
  40955c:	mov    rdi,QWORD PTR [rbp-0x18]
  409560:	call   4092e0 <verify_monster@@Base+0x26d0>
  409565:	mov    QWORD PTR [rbp-0x8],rax
  409569:	mov    al,BYTE PTR [rbp-0x10]
  40956c:	mov    rdx,QWORD PTR [rbp-0x8]
  409570:	add    rsp,0x20
  409574:	pop    rbp
  409575:	ret    
  409576:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409580:	push   rbp
  409581:	mov    rbp,rsp
  409584:	sub    rsp,0x30
  409588:	mov    QWORD PTR [rbp-0x8],rdi
  40958c:	mov    WORD PTR [rbp-0xa],0x0
  409592:	cmp    QWORD PTR [rbp-0x8],0x0
  409597:	je     4095b1 <verify_monster@@Base+0x29a1>
  40959d:	mov    al,0x1
  40959f:	test   al,0x1
  4095a1:	jne    4095ac <verify_monster@@Base+0x299c>
  4095a7:	jmp    4095b1 <verify_monster@@Base+0x29a1>
  4095ac:	jmp    4095d0 <verify_monster@@Base+0x29c0>
  4095b1:	lea    rdi,[rip+0x1c4e0]        # 425a98 <_IO_stdin_used@@Base+0x2a98>
  4095b8:	lea    rsi,[rip+0x1c4ff]        # 425abe <_IO_stdin_used@@Base+0x2abe>
  4095bf:	mov    edx,0x2d3
  4095c4:	lea    rcx,[rip+0x1d4b7]        # 426a82 <_IO_stdin_used@@Base+0x3a82>
  4095cb:	call   404090 <__assert_fail@plt>
  4095d0:	mov    WORD PTR [rbp-0xc],0xf
  4095d6:	mov    rax,QWORD PTR [rbp-0x8]
  4095da:	mov    rcx,QWORD PTR [rbp-0x8]
  4095de:	mov    rdi,rcx
  4095e1:	mov    QWORD PTR [rbp-0x20],rax
  4095e5:	call   414960 <main@@Base+0x570>
  4095ea:	xor    edx,edx
  4095ec:	mov    ecx,edx
  4095ee:	movsxd rdi,eax
  4095f1:	sub    rcx,rdi
  4095f4:	mov    rdi,QWORD PTR [rbp-0x20]
  4095f8:	add    rdi,rcx
  4095fb:	mov    QWORD PTR [rbp-0x18],rdi
  4095ff:	mov    rcx,QWORD PTR [rbp-0x18]
  409603:	mov    rdi,rcx
  409606:	call   414980 <main@@Base+0x590>
  40960b:	movzx  edx,ax
  40960e:	mov    ecx,edx
  409610:	movzx  edx,WORD PTR [rbp-0xc]
  409614:	add    edx,0x3
  409617:	movsxd rdi,edx
  40961a:	shl    rdi,0x1
  40961e:	cmp    rcx,rdi
  409621:	jb     409649 <verify_monster@@Base+0x2a39>
  409627:	mov    rax,QWORD PTR [rbp-0x18]
  40962b:	movzx  ecx,WORD PTR [rbp-0xc]
  40962f:	movsxd rdx,ecx
  409632:	shl    rdx,0x1
  409636:	add    rax,rdx
  409639:	add    rax,0x4
  40963d:	mov    rdi,rax
  409640:	call   414980 <main@@Base+0x590>
  409645:	mov    WORD PTR [rbp-0xa],ax
  409649:	movzx  eax,WORD PTR [rbp-0xa]
  40964d:	cmp    eax,0x0
  409650:	je     409677 <verify_monster@@Base+0x2a67>
  409656:	mov    rax,QWORD PTR [rbp-0x8]
  40965a:	movzx  ecx,WORD PTR [rbp-0xa]
  40965e:	movsxd rdx,ecx
  409661:	add    rax,rdx
  409664:	mov    rdi,rax
  409667:	call   416e00 <main@@Base+0x2a10>
  40966c:	movzx  ecx,al
  40966f:	mov    DWORD PTR [rbp-0x24],ecx
  409672:	jmp    409684 <verify_monster@@Base+0x2a74>
  409677:	mov    eax,0x1
  40967c:	mov    DWORD PTR [rbp-0x24],eax
  40967f:	jmp    409684 <verify_monster@@Base+0x2a74>
  409684:	mov    eax,DWORD PTR [rbp-0x24]
  409687:	mov    cl,al
  409689:	movzx  eax,cl
  40968c:	add    rsp,0x30
  409690:	pop    rbp
  409691:	ret    
  409692:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40969c:	nop    DWORD PTR [rax+0x0]
  4096a0:	push   rbp
  4096a1:	mov    rbp,rsp
  4096a4:	sub    rsp,0x20
  4096a8:	mov    QWORD PTR [rbp-0x8],rdi
  4096ac:	mov    WORD PTR [rbp-0xa],0x0
  4096b2:	cmp    QWORD PTR [rbp-0x8],0x0
  4096b7:	je     4096d1 <verify_monster@@Base+0x2ac1>
  4096bd:	mov    al,0x1
  4096bf:	test   al,0x1
  4096c1:	jne    4096cc <verify_monster@@Base+0x2abc>
  4096c7:	jmp    4096d1 <verify_monster@@Base+0x2ac1>
  4096cc:	jmp    4096f0 <verify_monster@@Base+0x2ae0>
  4096d1:	lea    rdi,[rip+0x1c3c0]        # 425a98 <_IO_stdin_used@@Base+0x2a98>
  4096d8:	lea    rsi,[rip+0x1c3df]        # 425abe <_IO_stdin_used@@Base+0x2abe>
  4096df:	mov    edx,0x2d2
  4096e4:	lea    rcx,[rip+0x1d3ea]        # 426ad5 <_IO_stdin_used@@Base+0x3ad5>
  4096eb:	call   404090 <__assert_fail@plt>
  4096f0:	mov    WORD PTR [rbp-0xc],0xe
  4096f6:	mov    rax,QWORD PTR [rbp-0x8]
  4096fa:	mov    rcx,QWORD PTR [rbp-0x8]
  4096fe:	mov    rdi,rcx
  409701:	mov    QWORD PTR [rbp-0x20],rax
  409705:	call   414960 <main@@Base+0x570>
  40970a:	xor    edx,edx
  40970c:	mov    ecx,edx
  40970e:	movsxd rdi,eax
  409711:	sub    rcx,rdi
  409714:	mov    rdi,QWORD PTR [rbp-0x20]
  409718:	add    rdi,rcx
  40971b:	mov    QWORD PTR [rbp-0x18],rdi
  40971f:	mov    rcx,QWORD PTR [rbp-0x18]
  409723:	mov    rdi,rcx
  409726:	call   414980 <main@@Base+0x590>
  40972b:	movzx  edx,ax
  40972e:	mov    ecx,edx
  409730:	movzx  edx,WORD PTR [rbp-0xc]
  409734:	add    edx,0x3
  409737:	movsxd rdi,edx
  40973a:	shl    rdi,0x1
  40973e:	cmp    rcx,rdi
  409741:	jb     409769 <verify_monster@@Base+0x2b59>
  409747:	mov    rax,QWORD PTR [rbp-0x18]
  40974b:	movzx  ecx,WORD PTR [rbp-0xc]
  40974f:	movsxd rdx,ecx
  409752:	shl    rdx,0x1
  409756:	add    rax,rdx
  409759:	add    rax,0x4
  40975d:	mov    rdi,rax
  409760:	call   414980 <main@@Base+0x590>
  409765:	mov    WORD PTR [rbp-0xa],ax
  409769:	movzx  eax,WORD PTR [rbp-0xa]
  40976d:	cmp    eax,0x0
  409770:	setne  cl
  409773:	and    cl,0x1
  409776:	movzx  eax,cl
  409779:	add    rsp,0x20
  40977d:	pop    rbp
  40977e:	ret    
  40977f:	nop
  409780:	push   rbp
  409781:	mov    rbp,rsp
  409784:	sub    rsp,0x40
  409788:	mov    QWORD PTR [rbp-0x10],rdi
  40978c:	mov    WORD PTR [rbp-0x1a],0x0
  409792:	cmp    QWORD PTR [rbp-0x10],0x0
  409797:	je     4097b1 <verify_monster@@Base+0x2ba1>
  40979d:	mov    al,0x1
  40979f:	test   al,0x1
  4097a1:	jne    4097ac <verify_monster@@Base+0x2b9c>
  4097a7:	jmp    4097b1 <verify_monster@@Base+0x2ba1>
  4097ac:	jmp    4097d0 <verify_monster@@Base+0x2bc0>
  4097b1:	lea    rdi,[rip+0x1c2e0]        # 425a98 <_IO_stdin_used@@Base+0x2a98>
  4097b8:	lea    rsi,[rip+0x1c2ff]        # 425abe <_IO_stdin_used@@Base+0x2abe>
  4097bf:	mov    edx,0x2d2
  4097c4:	lea    rcx,[rip+0x1d35a]        # 426b25 <_IO_stdin_used@@Base+0x3b25>
  4097cb:	call   404090 <__assert_fail@plt>
  4097d0:	mov    WORD PTR [rbp-0x1c],0xe
  4097d6:	mov    rax,QWORD PTR [rbp-0x10]
  4097da:	mov    rcx,QWORD PTR [rbp-0x10]
  4097de:	mov    rdi,rcx
  4097e1:	mov    QWORD PTR [rbp-0x30],rax
  4097e5:	call   414960 <main@@Base+0x570>
  4097ea:	xor    edx,edx
  4097ec:	mov    ecx,edx
  4097ee:	movsxd rdi,eax
  4097f1:	sub    rcx,rdi
  4097f4:	mov    rdi,QWORD PTR [rbp-0x30]
  4097f8:	add    rdi,rcx
  4097fb:	mov    QWORD PTR [rbp-0x28],rdi
  4097ff:	mov    rcx,QWORD PTR [rbp-0x28]
  409803:	mov    rdi,rcx
  409806:	call   414980 <main@@Base+0x590>
  40980b:	movzx  edx,ax
  40980e:	mov    ecx,edx
  409810:	movzx  edx,WORD PTR [rbp-0x1c]
  409814:	add    edx,0x3
  409817:	movsxd rdi,edx
  40981a:	shl    rdi,0x1
  40981e:	cmp    rcx,rdi
  409821:	jb     409849 <verify_monster@@Base+0x2c39>
  409827:	mov    rax,QWORD PTR [rbp-0x28]
  40982b:	movzx  ecx,WORD PTR [rbp-0x1c]
  40982f:	movsxd rdx,ecx
  409832:	shl    rdx,0x1
  409836:	add    rax,rdx
  409839:	add    rax,0x4
  40983d:	mov    rdi,rax
  409840:	call   414980 <main@@Base+0x590>
  409845:	mov    WORD PTR [rbp-0x1a],ax
  409849:	cmp    WORD PTR [rbp-0x1a],0x0
  40984e:	je     40988e <verify_monster@@Base+0x2c7e>
  409854:	mov    rax,QWORD PTR [rbp-0x10]
  409858:	movzx  ecx,WORD PTR [rbp-0x1a]
  40985c:	movsxd rdx,ecx
  40985f:	add    rax,rdx
  409862:	mov    QWORD PTR [rbp-0x18],rax
  409866:	mov    rax,QWORD PTR [rbp-0x18]
  40986a:	mov    rdx,QWORD PTR [rbp-0x18]
  40986e:	mov    rdi,rdx
  409871:	mov    QWORD PTR [rbp-0x38],rax
  409875:	call   414930 <main@@Base+0x540>
  40987a:	mov    eax,eax
  40987c:	mov    edx,eax
  40987e:	mov    rdi,QWORD PTR [rbp-0x38]
  409882:	add    rdi,rdx
  409885:	mov    QWORD PTR [rbp-0x8],rdi
  409889:	jmp    409896 <verify_monster@@Base+0x2c86>
  40988e:	mov    QWORD PTR [rbp-0x8],0x0
  409896:	mov    rax,QWORD PTR [rbp-0x8]
  40989a:	add    rsp,0x40
  40989e:	pop    rbp
  40989f:	ret    
  4098a0:	push   rbp
  4098a1:	mov    rbp,rsp
  4098a4:	sub    rsp,0x20
  4098a8:	mov    QWORD PTR [rbp-0x8],rdi
  4098ac:	mov    WORD PTR [rbp-0xa],0x0
  4098b2:	cmp    QWORD PTR [rbp-0x8],0x0
  4098b7:	je     4098d1 <verify_monster@@Base+0x2cc1>
  4098bd:	mov    al,0x1
  4098bf:	test   al,0x1
  4098c1:	jne    4098cc <verify_monster@@Base+0x2cbc>
  4098c7:	jmp    4098d1 <verify_monster@@Base+0x2cc1>
  4098cc:	jmp    4098f0 <verify_monster@@Base+0x2ce0>
  4098d1:	lea    rdi,[rip+0x1c1c0]        # 425a98 <_IO_stdin_used@@Base+0x2a98>
  4098d8:	lea    rsi,[rip+0x1c1df]        # 425abe <_IO_stdin_used@@Base+0x2abe>
  4098df:	mov    edx,0x25f
  4098e4:	lea    rcx,[rip+0x1d297]        # 426b82 <_IO_stdin_used@@Base+0x3b82>
  4098eb:	call   404090 <__assert_fail@plt>
  4098f0:	mov    WORD PTR [rbp-0xc],0x0
  4098f6:	mov    rax,QWORD PTR [rbp-0x8]
  4098fa:	mov    rcx,QWORD PTR [rbp-0x8]
  4098fe:	mov    rdi,rcx
  409901:	mov    QWORD PTR [rbp-0x20],rax
  409905:	call   414960 <main@@Base+0x570>
  40990a:	xor    edx,edx
  40990c:	mov    ecx,edx
  40990e:	movsxd rdi,eax
  409911:	sub    rcx,rdi
  409914:	mov    rdi,QWORD PTR [rbp-0x20]
  409918:	add    rdi,rcx
  40991b:	mov    QWORD PTR [rbp-0x18],rdi
  40991f:	mov    rcx,QWORD PTR [rbp-0x18]
  409923:	mov    rdi,rcx
  409926:	call   414980 <main@@Base+0x590>
  40992b:	movzx  edx,ax
  40992e:	mov    ecx,edx
  409930:	movzx  edx,WORD PTR [rbp-0xc]
  409934:	add    edx,0x3
  409937:	movsxd rdi,edx
  40993a:	shl    rdi,0x1
  40993e:	cmp    rcx,rdi
  409941:	jb     409969 <verify_monster@@Base+0x2d59>
  409947:	mov    rax,QWORD PTR [rbp-0x18]
  40994b:	movzx  ecx,WORD PTR [rbp-0xc]
  40994f:	movsxd rdx,ecx
  409952:	shl    rdx,0x1
  409956:	add    rax,rdx
  409959:	add    rax,0x4
  40995d:	mov    rdi,rax
  409960:	call   414980 <main@@Base+0x590>
  409965:	mov    WORD PTR [rbp-0xa],ax
  409969:	movzx  eax,WORD PTR [rbp-0xa]
  40996d:	cmp    eax,0x0
  409970:	setne  cl
  409973:	and    cl,0x1
  409976:	movzx  eax,cl
  409979:	add    rsp,0x20
  40997d:	pop    rbp
  40997e:	ret    
  40997f:	nop
  409980:	push   rbp
  409981:	mov    rbp,rsp
  409984:	sub    rsp,0x20
  409988:	mov    QWORD PTR [rbp-0x8],rdi
  40998c:	mov    WORD PTR [rbp-0xa],0x0
  409992:	cmp    QWORD PTR [rbp-0x8],0x0
  409997:	je     4099b1 <verify_monster@@Base+0x2da1>
  40999d:	mov    al,0x1
  40999f:	test   al,0x1
  4099a1:	jne    4099ac <verify_monster@@Base+0x2d9c>
  4099a7:	jmp    4099b1 <verify_monster@@Base+0x2da1>
  4099ac:	jmp    4099d0 <verify_monster@@Base+0x2dc0>
  4099b1:	lea    rdi,[rip+0x1c0e0]        # 425a98 <_IO_stdin_used@@Base+0x2a98>
  4099b8:	lea    rsi,[rip+0x1c0ff]        # 425abe <_IO_stdin_used@@Base+0x2abe>
  4099bf:	mov    edx,0x260
  4099c4:	lea    rcx,[rip+0x1d1fa]        # 426bc5 <_IO_stdin_used@@Base+0x3bc5>
  4099cb:	call   404090 <__assert_fail@plt>
  4099d0:	mov    WORD PTR [rbp-0xc],0x1
  4099d6:	mov    rax,QWORD PTR [rbp-0x8]
  4099da:	mov    rcx,QWORD PTR [rbp-0x8]
  4099de:	mov    rdi,rcx
  4099e1:	mov    QWORD PTR [rbp-0x20],rax
  4099e5:	call   414960 <main@@Base+0x570>
  4099ea:	xor    edx,edx
  4099ec:	mov    ecx,edx
  4099ee:	movsxd rdi,eax
  4099f1:	sub    rcx,rdi
  4099f4:	mov    rdi,QWORD PTR [rbp-0x20]
  4099f8:	add    rdi,rcx
  4099fb:	mov    QWORD PTR [rbp-0x18],rdi
  4099ff:	mov    rcx,QWORD PTR [rbp-0x18]
  409a03:	mov    rdi,rcx
  409a06:	call   414980 <main@@Base+0x590>
  409a0b:	movzx  edx,ax
  409a0e:	mov    ecx,edx
  409a10:	movzx  edx,WORD PTR [rbp-0xc]
  409a14:	add    edx,0x3
  409a17:	movsxd rdi,edx
  409a1a:	shl    rdi,0x1
  409a1e:	cmp    rcx,rdi
  409a21:	jb     409a49 <verify_monster@@Base+0x2e39>
  409a27:	mov    rax,QWORD PTR [rbp-0x18]
  409a2b:	movzx  ecx,WORD PTR [rbp-0xc]
  409a2f:	movsxd rdx,ecx
  409a32:	shl    rdx,0x1
  409a36:	add    rax,rdx
  409a39:	add    rax,0x4
  409a3d:	mov    rdi,rax
  409a40:	call   414980 <main@@Base+0x590>
  409a45:	mov    WORD PTR [rbp-0xa],ax
  409a49:	movzx  eax,WORD PTR [rbp-0xa]
  409a4d:	cmp    eax,0x0
  409a50:	setne  cl
  409a53:	and    cl,0x1
  409a56:	movzx  eax,cl
  409a59:	add    rsp,0x20
  409a5d:	pop    rbp
  409a5e:	ret    
  409a5f:	nop
  409a60:	push   rbp
  409a61:	mov    rbp,rsp
  409a64:	sub    rsp,0x20
  409a68:	mov    QWORD PTR [rbp-0x8],rdi
  409a6c:	mov    WORD PTR [rbp-0xa],0x0
  409a72:	cmp    QWORD PTR [rbp-0x8],0x0
  409a77:	je     409a91 <verify_monster@@Base+0x2e81>
  409a7d:	mov    al,0x1
  409a7f:	test   al,0x1
  409a81:	jne    409a8c <verify_monster@@Base+0x2e7c>
  409a87:	jmp    409a91 <verify_monster@@Base+0x2e81>
  409a8c:	jmp    409ab0 <verify_monster@@Base+0x2ea0>
  409a91:	lea    rdi,[rip+0x1c000]        # 425a98 <_IO_stdin_used@@Base+0x2a98>
  409a98:	lea    rsi,[rip+0x1c01f]        # 425abe <_IO_stdin_used@@Base+0x2abe>
  409a9f:	mov    edx,0x261
  409aa4:	lea    rcx,[rip+0x1d15e]        # 426c09 <_IO_stdin_used@@Base+0x3c09>
  409aab:	call   404090 <__assert_fail@plt>
  409ab0:	mov    WORD PTR [rbp-0xc],0x2
  409ab6:	mov    rax,QWORD PTR [rbp-0x8]
  409aba:	mov    rcx,QWORD PTR [rbp-0x8]
  409abe:	mov    rdi,rcx
  409ac1:	mov    QWORD PTR [rbp-0x20],rax
  409ac5:	call   414960 <main@@Base+0x570>
  409aca:	xor    edx,edx
  409acc:	mov    ecx,edx
  409ace:	movsxd rdi,eax
  409ad1:	sub    rcx,rdi
  409ad4:	mov    rdi,QWORD PTR [rbp-0x20]
  409ad8:	add    rdi,rcx
  409adb:	mov    QWORD PTR [rbp-0x18],rdi
  409adf:	mov    rcx,QWORD PTR [rbp-0x18]
  409ae3:	mov    rdi,rcx
  409ae6:	call   414980 <main@@Base+0x590>
  409aeb:	movzx  edx,ax
  409aee:	mov    ecx,edx
  409af0:	movzx  edx,WORD PTR [rbp-0xc]
  409af4:	add    edx,0x3
  409af7:	movsxd rdi,edx
  409afa:	shl    rdi,0x1
  409afe:	cmp    rcx,rdi
  409b01:	jb     409b29 <verify_monster@@Base+0x2f19>
  409b07:	mov    rax,QWORD PTR [rbp-0x18]
  409b0b:	movzx  ecx,WORD PTR [rbp-0xc]
  409b0f:	movsxd rdx,ecx
  409b12:	shl    rdx,0x1
  409b16:	add    rax,rdx
  409b19:	add    rax,0x4
  409b1d:	mov    rdi,rax
  409b20:	call   414980 <main@@Base+0x590>
  409b25:	mov    WORD PTR [rbp-0xa],ax
  409b29:	movzx  eax,WORD PTR [rbp-0xa]
  409b2d:	cmp    eax,0x0
  409b30:	setne  cl
  409b33:	and    cl,0x1
  409b36:	movzx  eax,cl
  409b39:	add    rsp,0x20
  409b3d:	pop    rbp
  409b3e:	ret    
  409b3f:	nop

0000000000409b40 <gen_monster@@Base>:
  409b40:	push   rbp
  409b41:	mov    rbp,rsp
  409b44:	sub    rsp,0x1a0
  409b4b:	mov    QWORD PTR [rbp-0x8],rdi
  409b4f:	mov    DWORD PTR [rbp-0xc],esi
  409b52:	mov    rdi,QWORD PTR [rip+0x195ae]        # 423107 <_IO_stdin_used@@Base+0x107>
  409b59:	mov    QWORD PTR [rbp-0x16],rdi
  409b5d:	mov    ax,WORD PTR [rip+0x195ab]        # 42310f <_IO_stdin_used@@Base+0x10f>
  409b64:	mov    WORD PTR [rbp-0xe],ax
  409b68:	mov    esi,DWORD PTR [rip+0x194ae]        # 42301c <_IO_stdin_used@@Base+0x1c>
  409b6e:	mov    DWORD PTR [rbp-0x5c],esi
  409b71:	mov    rdi,QWORD PTR [rbp-0x8]
  409b75:	call   4197b0 <flatcc_builder_reset@@Base>
  409b7a:	cmp    DWORD PTR [rbp-0xc],0x0
  409b7e:	mov    DWORD PTR [rbp-0x7c],eax
  409b81:	je     409b98 <gen_monster@@Base+0x58>
  409b87:	mov    rdi,QWORD PTR [rbp-0x8]
  409b8b:	call   40a270 <gen_monster@@Base+0x730>
  409b90:	mov    DWORD PTR [rbp-0x80],eax
  409b93:	jmp    409ba7 <gen_monster@@Base+0x67>
  409b98:	mov    rdi,QWORD PTR [rbp-0x8]
  409b9c:	call   40a2c0 <gen_monster@@Base+0x780>
  409ba1:	mov    DWORD PTR [rbp-0x84],eax
  409ba7:	mov    rdi,QWORD PTR [rbp-0x8]
  409bab:	mov    esi,0x50
  409bb0:	call   40a310 <gen_monster@@Base+0x7d0>
  409bb5:	mov    rdi,QWORD PTR [rbp-0x8]
  409bb9:	mov    DWORD PTR [rbp-0x88],eax
  409bbf:	call   40a390 <gen_monster@@Base+0x850>
  409bc4:	vmovss xmm0,DWORD PTR [rip+0x1943c]        # 423008 <_IO_stdin_used@@Base+0x8>
  409bcc:	vmovss xmm1,DWORD PTR [rip+0x1943c]        # 423010 <_IO_stdin_used@@Base+0x10>
  409bd4:	vmovss xmm2,DWORD PTR [rip+0x19430]        # 42300c <_IO_stdin_used@@Base+0xc>
  409bdc:	mov    QWORD PTR [rbp-0x20],rax
  409be0:	mov    rax,QWORD PTR [rbp-0x20]
  409be4:	vmovss DWORD PTR [rax],xmm2
  409be8:	mov    rax,QWORD PTR [rbp-0x20]
  409bec:	vmovss DWORD PTR [rax+0x4],xmm1
  409bf1:	mov    rax,QWORD PTR [rbp-0x20]
  409bf5:	vmovss DWORD PTR [rax+0x8],xmm0
  409bfa:	mov    rdi,QWORD PTR [rbp-0x8]
  409bfe:	call   40a3c0 <gen_monster@@Base+0x880>
  409c03:	mov    rdi,QWORD PTR [rbp-0x8]
  409c07:	lea    rsi,[rip+0x19749]        # 423357 <_IO_stdin_used@@Base+0x357>
  409c0e:	mov    DWORD PTR [rbp-0x8c],eax
  409c14:	call   405c40 <test_empty_monster@@Base+0x1b0>
  409c19:	mov    rdi,QWORD PTR [rbp-0x8]
  409c1d:	mov    esi,0x2
  409c22:	mov    DWORD PTR [rbp-0x90],eax
  409c28:	call   40a3d0 <gen_monster@@Base+0x890>
  409c2d:	mov    esi,0xa
  409c32:	mov    edx,esi
  409c34:	lea    rsi,[rbp-0x16]
  409c38:	mov    rdi,QWORD PTR [rbp-0x8]
  409c3c:	mov    DWORD PTR [rbp-0x94],eax
  409c42:	call   40a450 <gen_monster@@Base+0x910>
  409c47:	mov    rdi,QWORD PTR [rbp-0x8]
  409c4b:	mov    DWORD PTR [rbp-0x98],eax
  409c51:	call   40a4a0 <gen_monster@@Base+0x960>
  409c56:	mov    ecx,0x1
  409c5b:	mov    esi,ecx
  409c5d:	mov    rdi,QWORD PTR [rbp-0x8]
  409c61:	mov    DWORD PTR [rbp-0x9c],eax
  409c67:	call   40a4c0 <gen_monster@@Base+0x980>
  409c6c:	mov    ecx,0x2
  409c71:	mov    esi,ecx
  409c73:	mov    QWORD PTR [rbp-0x28],rax
  409c77:	mov    rax,QWORD PTR [rbp-0x28]
  409c7b:	mov    WORD PTR [rax],0x10
  409c80:	mov    rax,QWORD PTR [rbp-0x28]
  409c84:	mov    BYTE PTR [rax+0x2],0x20
  409c88:	mov    rdi,QWORD PTR [rbp-0x8]
  409c8c:	call   40a4c0 <gen_monster@@Base+0x980>
  409c91:	mov    QWORD PTR [rbp-0x28],rax
  409c95:	mov    rax,QWORD PTR [rbp-0x28]
  409c99:	mov    WORD PTR [rax],0x30
  409c9e:	mov    rax,QWORD PTR [rbp-0x28]
  409ca2:	mov    BYTE PTR [rax+0x2],0x40
  409ca6:	mov    rax,QWORD PTR [rbp-0x28]
  409caa:	mov    WORD PTR [rax+0x4],0x50
  409cb0:	mov    rax,QWORD PTR [rbp-0x28]
  409cb4:	mov    BYTE PTR [rax+0x6],0x60
  409cb8:	mov    rdi,QWORD PTR [rbp-0x8]
  409cbc:	mov    esi,0x70
  409cc1:	mov    edx,0xffffff80
  409cc6:	call   40a4f0 <gen_monster@@Base+0x9b0>
  409ccb:	mov    WORD PTR [rbp-0x30],0x190
  409cd1:	mov    BYTE PTR [rbp-0x2e],0x91
  409cd5:	mov    rdi,QWORD PTR [rbp-0x8]
  409cd9:	lea    rsi,[rbp-0x30]
  409cdd:	mov    QWORD PTR [rbp-0xa8],rax
  409ce4:	call   40a560 <gen_monster@@Base+0xa20>
  409ce9:	mov    rdi,QWORD PTR [rbp-0x8]
  409ced:	lea    rsi,[rbp-0x30]
  409cf1:	mov    QWORD PTR [rbp-0xb0],rax
  409cf8:	call   40a560 <gen_monster@@Base+0xa20>
  409cfd:	mov    rdi,QWORD PTR [rbp-0x8]
  409d01:	lea    rsi,[rbp-0x30]
  409d05:	mov    QWORD PTR [rbp-0xb8],rax
  409d0c:	call   40a5e0 <gen_monster@@Base+0xaa0>
  409d11:	mov    rdi,QWORD PTR [rbp-0x8]
  409d15:	mov    QWORD PTR [rbp-0xc0],rax
  409d1c:	call   40a660 <gen_monster@@Base+0xb20>
  409d21:	cmp    rax,0x7
  409d25:	jne    409d30 <gen_monster@@Base+0x1f0>
  409d2b:	jmp    409d4f <gen_monster@@Base+0x20f>
  409d30:	lea    rdi,[rip+0x1a344]        # 42407b <_IO_stdin_used@@Base+0x107b>
  409d37:	lea    rsi,[rip+0x19eb1]        # 423bef <_IO_stdin_used@@Base+0xbef>
  409d3e:	mov    edx,0x371
  409d43:	lea    rcx,[rip+0x1a358]        # 4240a2 <_IO_stdin_used@@Base+0x10a2>
  409d4a:	call   404090 <__assert_fail@plt>
  409d4f:	mov    eax,0x2
  409d54:	mov    esi,eax
  409d56:	mov    rdi,QWORD PTR [rbp-0x8]
  409d5a:	call   40a680 <gen_monster@@Base+0xb40>
  409d5f:	mov    rdi,QWORD PTR [rbp-0x8]
  409d63:	mov    DWORD PTR [rbp-0xc4],eax
  409d69:	call   40a660 <gen_monster@@Base+0xb20>
  409d6e:	cmp    rax,0x5
  409d72:	jne    409d7d <gen_monster@@Base+0x23d>
  409d78:	jmp    409d9c <gen_monster@@Base+0x25c>
  409d7d:	lea    rdi,[rip+0x1a347]        # 4240cb <_IO_stdin_used@@Base+0x10cb>
  409d84:	lea    rsi,[rip+0x19e64]        # 423bef <_IO_stdin_used@@Base+0xbef>
  409d8b:	mov    edx,0x373
  409d90:	lea    rcx,[rip+0x1a30b]        # 4240a2 <_IO_stdin_used@@Base+0x10a2>
  409d97:	call   404090 <__assert_fail@plt>
  409d9c:	mov    rdi,QWORD PTR [rbp-0x8]
  409da0:	call   40a6b0 <gen_monster@@Base+0xb70>
  409da5:	mov    QWORD PTR [rbp-0x28],rax
  409da9:	mov    rax,QWORD PTR [rbp-0x28]
  409dad:	movsx  ecx,WORD PTR [rax+0x10]
  409db1:	add    ecx,0x1
  409db4:	mov    dx,cx
  409db7:	mov    WORD PTR [rax+0x10],dx
  409dbb:	mov    rdi,QWORD PTR [rbp-0x8]
  409dbf:	call   40a6d0 <gen_monster@@Base+0xb90>
  409dc4:	mov    rdi,QWORD PTR [rbp-0x8]
  409dc8:	mov    DWORD PTR [rbp-0xc8],eax
  409dce:	call   405c20 <test_empty_monster@@Base+0x190>
  409dd3:	mov    ecx,0x7
  409dd8:	mov    edx,ecx
  409dda:	mov    rdi,QWORD PTR [rbp-0x8]
  409dde:	lea    rsi,[rip+0x19ea0]        # 423c85 <_IO_stdin_used@@Base+0xc85>
  409de5:	mov    DWORD PTR [rbp-0xcc],eax
  409deb:	call   40a710 <gen_monster@@Base+0xbd0>
  409df0:	mov    DWORD PTR [rbp-0x4c],eax
  409df3:	mov    rdi,QWORD PTR [rbp-0x8]
  409df7:	mov    esi,DWORD PTR [rbp-0x4c]
  409dfa:	call   40a740 <gen_monster@@Base+0xc00>
  409dff:	mov    rdi,QWORD PTR [rbp-0x8]
  409e03:	mov    DWORD PTR [rbp-0xd0],eax
  409e09:	call   405c80 <test_empty_monster@@Base+0x1f0>
  409e0e:	mov    DWORD PTR [rbp-0x34],eax
  409e11:	mov    rdi,QWORD PTR [rbp-0x8]
  409e15:	call   40a7a0 <gen_monster@@Base+0xc60>
  409e1a:	mov    ecx,0x2
  409e1f:	mov    esi,ecx
  409e21:	mov    rdi,QWORD PTR [rbp-0x8]
  409e25:	mov    DWORD PTR [rbp-0xd4],eax
  409e2b:	call   40a7c0 <gen_monster@@Base+0xc80>
  409e30:	mov    QWORD PTR [rbp-0x48],rax
  409e34:	mov    ecx,DWORD PTR [rbp-0x34]
  409e37:	mov    rax,QWORD PTR [rbp-0x48]
  409e3b:	mov    DWORD PTR [rax],ecx
  409e3d:	mov    ecx,DWORD PTR [rbp-0x34]
  409e40:	mov    rax,QWORD PTR [rbp-0x48]
  409e44:	mov    DWORD PTR [rax+0x4],ecx
  409e47:	mov    rdi,QWORD PTR [rbp-0x8]
  409e4b:	call   40a7f0 <gen_monster@@Base+0xcb0>
  409e50:	mov    ecx,0x1e
  409e55:	mov    edx,ecx
  409e57:	mov    rdi,QWORD PTR [rbp-0x8]
  409e5b:	lea    rsi,[rip+0x19e83]        # 423ce5 <_IO_stdin_used@@Base+0xce5>
  409e62:	mov    DWORD PTR [rbp-0xd8],eax
  409e68:	call   40a810 <gen_monster@@Base+0xcd0>
  409e6d:	mov    rdi,QWORD PTR [rbp-0x8]
  409e71:	mov    DWORD PTR [rbp-0xdc],eax
  409e77:	call   40a860 <gen_monster@@Base+0xd20>
  409e7c:	mov    ecx,0x3
  409e81:	mov    esi,ecx
  409e83:	mov    ecx,DWORD PTR [rax]
  409e85:	mov    DWORD PTR [rbp-0x38],ecx
  409e88:	mov    rdi,QWORD PTR [rbp-0x8]
  409e8c:	call   40a7c0 <gen_monster@@Base+0xc80>
  409e91:	mov    ecx,0x1
  409e96:	mov    esi,ecx
  409e98:	mov    QWORD PTR [rbp-0x48],rax
  409e9c:	mov    ecx,DWORD PTR [rbp-0x34]
  409e9f:	mov    rax,QWORD PTR [rbp-0x48]
  409ea3:	mov    DWORD PTR [rax],ecx
  409ea5:	mov    ecx,DWORD PTR [rbp-0x38]
  409ea8:	mov    rax,QWORD PTR [rbp-0x48]
  409eac:	mov    DWORD PTR [rax+0x4],ecx
  409eaf:	mov    rdi,QWORD PTR [rbp-0x8]
  409eb3:	call   40a8a0 <gen_monster@@Base+0xd60>
  409eb8:	mov    rdi,QWORD PTR [rbp-0x8]
  409ebc:	mov    DWORD PTR [rbp-0xe0],eax
  409ec2:	call   40a8d0 <gen_monster@@Base+0xd90>
  409ec7:	cmp    rax,0x5
  409ecb:	jne    409ed6 <gen_monster@@Base+0x396>
  409ed1:	jmp    409ef5 <gen_monster@@Base+0x3b5>
  409ed6:	lea    rdi,[rip+0x1a215]        # 4240f2 <_IO_stdin_used@@Base+0x10f2>
  409edd:	lea    rsi,[rip+0x19d0b]        # 423bef <_IO_stdin_used@@Base+0xbef>
  409ee4:	mov    edx,0x39b
  409ee9:	lea    rcx,[rip+0x1a1b2]        # 4240a2 <_IO_stdin_used@@Base+0x10a2>
  409ef0:	call   404090 <__assert_fail@plt>
  409ef5:	mov    rdi,QWORD PTR [rbp-0x8]
  409ef9:	call   40a7f0 <gen_monster@@Base+0xcb0>
  409efe:	mov    ecx,0x8
  409f03:	mov    edx,ecx
  409f05:	mov    rdi,QWORD PTR [rbp-0x8]
  409f09:	lea    rsi,[rip+0x1a215]        # 424125 <_IO_stdin_used@@Base+0x1125>
  409f10:	mov    DWORD PTR [rbp-0xe4],eax
  409f16:	call   40a810 <gen_monster@@Base+0xcd0>
  409f1b:	mov    rdi,QWORD PTR [rbp-0x8]
  409f1f:	mov    DWORD PTR [rbp-0xe8],eax
  409f25:	call   40a860 <gen_monster@@Base+0xd20>
  409f2a:	mov    ecx,DWORD PTR [rax]
  409f2c:	mov    DWORD PTR [rbp-0x40],ecx
  409f2f:	mov    rdi,QWORD PTR [rbp-0x8]
  409f33:	call   40a8d0 <gen_monster@@Base+0xd90>
  409f38:	cmp    rax,0x6
  409f3c:	jne    409f47 <gen_monster@@Base+0x407>
  409f42:	jmp    409f66 <gen_monster@@Base+0x426>
  409f47:	lea    rdi,[rip+0x1a1f3]        # 424141 <_IO_stdin_used@@Base+0x1141>
  409f4e:	lea    rsi,[rip+0x19c9a]        # 423bef <_IO_stdin_used@@Base+0xbef>
  409f55:	mov    edx,0x3a1
  409f5a:	lea    rcx,[rip+0x1a141]        # 4240a2 <_IO_stdin_used@@Base+0x10a2>
  409f61:	call   404090 <__assert_fail@plt>
  409f66:	mov    rdi,QWORD PTR [rbp-0x8]
  409f6a:	call   40a8f0 <gen_monster@@Base+0xdb0>
  409f6f:	mov    ecx,0x2
  409f74:	mov    edx,ecx
  409f76:	lea    rsi,[rbp-0x40]
  409f7a:	mov    QWORD PTR [rbp-0x48],rax
  409f7e:	mov    rax,QWORD PTR [rbp-0x48]
  409f82:	mov    ecx,DWORD PTR [rax+0x14]
  409f85:	mov    DWORD PTR [rbp-0x38],ecx
  409f88:	mov    rax,QWORD PTR [rbp-0x48]
  409f8c:	mov    ecx,DWORD PTR [rax+0x8]
  409f8f:	mov    DWORD PTR [rbp-0x3c],ecx
  409f92:	mov    ecx,DWORD PTR [rbp-0x34]
  409f95:	mov    rax,QWORD PTR [rbp-0x48]
  409f99:	mov    DWORD PTR [rax+0x14],ecx
  409f9c:	mov    ecx,DWORD PTR [rbp-0x38]
  409f9f:	mov    rax,QWORD PTR [rbp-0x48]
  409fa3:	mov    DWORD PTR [rax],ecx
  409fa5:	mov    rdi,QWORD PTR [rbp-0x8]
  409fa9:	call   40a910 <gen_monster@@Base+0xdd0>
  409fae:	mov    rdi,QWORD PTR [rbp-0x8]
  409fb2:	mov    QWORD PTR [rbp-0xf0],rax
  409fb9:	call   40a940 <gen_monster@@Base+0xe00>
  409fbe:	mov    rdi,QWORD PTR [rbp-0x8]
  409fc2:	lea    rsi,[rip+0x19e2d]        # 423df6 <_IO_stdin_used@@Base+0xdf6>
  409fc9:	mov    DWORD PTR [rbp-0xf4],eax
  409fcf:	call   40a980 <gen_monster@@Base+0xe40>
  409fd4:	mov    ecx,0x2
  409fd9:	mov    edx,ecx
  409fdb:	mov    DWORD PTR [rbp-0x58],eax
  409fde:	mov    rdi,QWORD PTR [rbp-0x8]
  409fe2:	lea    rsi,[rip+0x1911b]        # 423104 <_IO_stdin_used@@Base+0x104>
  409fe9:	call   40a710 <gen_monster@@Base+0xbd0>
  409fee:	mov    DWORD PTR [rbp-0x54],eax
  409ff1:	mov    rdi,QWORD PTR [rbp-0x8]
  409ff5:	lea    rsi,[rip+0x19e53]        # 423e4f <_IO_stdin_used@@Base+0xe4f>
  409ffc:	call   40a980 <gen_monster@@Base+0xe40>
  40a001:	mov    ecx,0x3
  40a006:	mov    edx,ecx
  40a008:	lea    rsi,[rbp-0x58]
  40a00c:	mov    DWORD PTR [rbp-0x50],eax
  40a00f:	mov    rdi,QWORD PTR [rbp-0x8]
  40a013:	call   40a9b0 <gen_monster@@Base+0xe70>
  40a018:	mov    rdi,QWORD PTR [rbp-0x8]
  40a01c:	mov    DWORD PTR [rbp-0xf8],eax
  40a022:	call   40aa00 <gen_monster@@Base+0xec0>
  40a027:	mov    ecx,0x1
  40a02c:	mov    edx,ecx
  40a02e:	lea    rsi,[rbp-0x5c]
  40a032:	mov    rdi,QWORD PTR [rbp-0x8]
  40a036:	mov    DWORD PTR [rbp-0xfc],eax
  40a03c:	call   40aa20 <gen_monster@@Base+0xee0>
  40a041:	mov    ecx,0x3
  40a046:	mov    edx,ecx
  40a048:	lea    rsi,[rbp-0x5c]
  40a04c:	mov    rdi,QWORD PTR [rbp-0x8]
  40a050:	add    rsi,0x1
  40a054:	mov    QWORD PTR [rbp-0x108],rax
  40a05b:	call   40aa20 <gen_monster@@Base+0xee0>
  40a060:	mov    rdi,QWORD PTR [rbp-0x8]
  40a064:	mov    QWORD PTR [rbp-0x110],rax
  40a06b:	call   40aa50 <gen_monster@@Base+0xf10>
  40a070:	mov    rdi,QWORD PTR [rbp-0x8]
  40a074:	mov    ecx,DWORD PTR [rbp-0x34]
  40a077:	mov    QWORD PTR [rbp-0x118],rdi
  40a07e:	mov    edi,ecx
  40a080:	mov    DWORD PTR [rbp-0x11c],eax
  40a086:	call   40ab50 <gen_monster@@Base+0x1010>
  40a08b:	mov    QWORD PTR [rbp-0x68],rax
  40a08f:	mov    rsi,QWORD PTR [rbp-0x68]
  40a093:	mov    rdi,QWORD PTR [rbp-0x118]
  40a09a:	call   40aa90 <gen_monster@@Base+0xf50>
  40a09f:	mov    rdi,QWORD PTR [rbp-0x8]
  40a0a3:	mov    DWORD PTR [rbp-0x120],eax
  40a0a9:	call   40ab70 <gen_monster@@Base+0x1030>
  40a0ae:	mov    rdi,QWORD PTR [rbp-0x8]
  40a0b2:	lea    rsi,[rip+0x19e5a]        # 423f13 <_IO_stdin_used@@Base+0xf13>
  40a0b9:	mov    DWORD PTR [rbp-0x124],eax
  40a0bf:	call   405c40 <test_empty_monster@@Base+0x1b0>
  40a0c4:	mov    rdi,QWORD PTR [rbp-0x8]
  40a0c8:	mov    DWORD PTR [rbp-0x128],eax
  40a0ce:	call   40a7a0 <gen_monster@@Base+0xc60>
  40a0d3:	mov    rdi,QWORD PTR [rbp-0x8]
  40a0d7:	mov    DWORD PTR [rbp-0x12c],eax
  40a0dd:	call   40ab90 <gen_monster@@Base+0x1050>
  40a0e2:	mov    rdi,QWORD PTR [rbp-0x8]
  40a0e6:	mov    ecx,DWORD PTR [rbp-0x34]
  40a0e9:	mov    QWORD PTR [rbp-0x138],rdi
  40a0f0:	mov    edi,ecx
  40a0f2:	mov    DWORD PTR [rbp-0x13c],eax
  40a0f8:	call   40ab50 <gen_monster@@Base+0x1010>
  40a0fd:	mov    QWORD PTR [rbp-0x70],rax
  40a101:	mov    rsi,QWORD PTR [rbp-0x70]
  40a105:	mov    rdi,QWORD PTR [rbp-0x138]
  40a10c:	call   40aa90 <gen_monster@@Base+0xf50>
  40a111:	mov    rdi,QWORD PTR [rbp-0x8]
  40a115:	lea    rsi,[rip+0x1a058]        # 424174 <_IO_stdin_used@@Base+0x1174>
  40a11c:	mov    DWORD PTR [rbp-0x140],eax
  40a122:	call   405c40 <test_empty_monster@@Base+0x1b0>
  40a127:	mov    rdi,QWORD PTR [rbp-0x8]
  40a12b:	mov    DWORD PTR [rbp-0x144],eax
  40a131:	call   40a860 <gen_monster@@Base+0xd20>
  40a136:	mov    rdi,QWORD PTR [rbp-0x8]
  40a13a:	mov    QWORD PTR [rbp-0x150],rax
  40a141:	call   40a7f0 <gen_monster@@Base+0xcb0>
  40a146:	mov    rdi,QWORD PTR [rbp-0x8]
  40a14a:	mov    esi,DWORD PTR [rbp-0x34]
  40a14d:	mov    DWORD PTR [rbp-0x154],eax
  40a153:	call   40abb0 <gen_monster@@Base+0x1070>
  40a158:	mov    rdi,QWORD PTR [rbp-0x8]
  40a15c:	lea    rsi,[rip+0x1a011]        # 424174 <_IO_stdin_used@@Base+0x1174>
  40a163:	mov    DWORD PTR [rbp-0x158],eax
  40a169:	call   405c40 <test_empty_monster@@Base+0x1b0>
  40a16e:	mov    rdi,QWORD PTR [rbp-0x8]
  40a172:	mov    DWORD PTR [rbp-0x15c],eax
  40a178:	call   40abf0 <gen_monster@@Base+0x10b0>
  40a17d:	mov    rdi,QWORD PTR [rbp-0x8]
  40a181:	mov    QWORD PTR [rbp-0x168],rax
  40a188:	call   40a7f0 <gen_monster@@Base+0xcb0>
  40a18d:	mov    rdi,QWORD PTR [rbp-0x8]
  40a191:	mov    ecx,DWORD PTR [rbp-0x34]
  40a194:	mov    QWORD PTR [rbp-0x170],rdi
  40a19b:	mov    edi,ecx
  40a19d:	mov    DWORD PTR [rbp-0x174],eax
  40a1a3:	call   40ab50 <gen_monster@@Base+0x1010>
  40a1a8:	mov    QWORD PTR [rbp-0x78],rax
  40a1ac:	mov    rsi,QWORD PTR [rbp-0x78]
  40a1b0:	mov    rdi,QWORD PTR [rbp-0x170]
  40a1b7:	call   40ac30 <gen_monster@@Base+0x10f0>
  40a1bc:	mov    rdi,QWORD PTR [rbp-0x8]
  40a1c0:	lea    rsi,[rip+0x19fad]        # 424174 <_IO_stdin_used@@Base+0x1174>
  40a1c7:	mov    DWORD PTR [rbp-0x178],eax
  40a1cd:	call   405c40 <test_empty_monster@@Base+0x1b0>
  40a1d2:	mov    rdi,QWORD PTR [rbp-0x8]
  40a1d6:	mov    esi,0x1
  40a1db:	mov    DWORD PTR [rbp-0x17c],eax
  40a1e1:	call   40acb0 <gen_monster@@Base+0x1170>
  40a1e6:	mov    rdi,QWORD PTR [rbp-0x8]
  40a1ea:	mov    DWORD PTR [rbp-0x180],eax
  40a1f0:	call   40a860 <gen_monster@@Base+0xd20>
  40a1f5:	mov    rdi,QWORD PTR [rbp-0x8]
  40a1f9:	mov    QWORD PTR [rbp-0x188],rax
  40a200:	call   40a940 <gen_monster@@Base+0xe00>
  40a205:	mov    rdi,QWORD PTR [rbp-0x8]
  40a209:	mov    DWORD PTR [rbp-0x18c],eax
  40a20f:	call   40ad40 <gen_monster@@Base+0x1200>
  40a214:	xor    esi,esi
  40a216:	mov    rdi,QWORD PTR [rbp-0x8]
  40a21a:	mov    DWORD PTR [rbp-0x190],eax
  40a220:	call   40ad80 <gen_monster@@Base+0x1240>
  40a225:	mov    rdi,QWORD PTR [rbp-0x8]
  40a229:	mov    DWORD PTR [rbp-0x194],eax
  40a22f:	call   40ae00 <gen_monster@@Base+0x12c0>
  40a234:	mov    rdi,QWORD PTR [rbp-0x8]
  40a238:	mov    DWORD PTR [rbp-0x198],eax
  40a23e:	call   40ae20 <gen_monster@@Base+0x12e0>
  40a243:	mov    rdi,QWORD PTR [rbp-0x8]
  40a247:	mov    DWORD PTR [rbp-0x19c],eax
  40a24d:	call   40ae60 <gen_monster@@Base+0x1320>
  40a252:	xor    ecx,ecx
  40a254:	mov    DWORD PTR [rbp-0x1a0],eax
  40a25a:	mov    eax,ecx
  40a25c:	add    rsp,0x1a0
  40a263:	pop    rbp
  40a264:	ret    
  40a265:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a26f:	nop
  40a270:	push   rbp
  40a271:	mov    rbp,rsp
  40a274:	sub    rsp,0x10
  40a278:	mov    QWORD PTR [rbp-0x8],rdi
  40a27c:	mov    rdi,QWORD PTR [rbp-0x8]
  40a280:	lea    rsi,[rip+0x18ef9]        # 423180 <_IO_stdin_used@@Base+0x180>
  40a287:	call   416e80 <main@@Base+0x2a90>
  40a28c:	cmp    eax,0x0
  40a28f:	je     40a2a2 <gen_monster@@Base+0x762>
  40a295:	mov    eax,0xffffffff
  40a29a:	mov    DWORD PTR [rbp-0xc],eax
  40a29d:	jmp    40a2ae <gen_monster@@Base+0x76e>
  40a2a2:	mov    rdi,QWORD PTR [rbp-0x8]
  40a2a6:	call   405c20 <test_empty_monster@@Base+0x190>
  40a2ab:	mov    DWORD PTR [rbp-0xc],eax
  40a2ae:	mov    eax,DWORD PTR [rbp-0xc]
  40a2b1:	add    rsp,0x10
  40a2b5:	pop    rbp
  40a2b6:	ret    
  40a2b7:	nop    WORD PTR [rax+rax*1+0x0]
  40a2c0:	push   rbp
  40a2c1:	mov    rbp,rsp
  40a2c4:	sub    rsp,0x10
  40a2c8:	mov    QWORD PTR [rbp-0x8],rdi
  40a2cc:	mov    rdi,QWORD PTR [rbp-0x8]
  40a2d0:	lea    rsi,[rip+0x18ea9]        # 423180 <_IO_stdin_used@@Base+0x180>
  40a2d7:	call   405bf0 <test_empty_monster@@Base+0x160>
  40a2dc:	cmp    eax,0x0
  40a2df:	je     40a2f2 <gen_monster@@Base+0x7b2>
  40a2e5:	mov    eax,0xffffffff
  40a2ea:	mov    DWORD PTR [rbp-0xc],eax
  40a2ed:	jmp    40a2fe <gen_monster@@Base+0x7be>
  40a2f2:	mov    rdi,QWORD PTR [rbp-0x8]
  40a2f6:	call   405c20 <test_empty_monster@@Base+0x190>
  40a2fb:	mov    DWORD PTR [rbp-0xc],eax
  40a2fe:	mov    eax,DWORD PTR [rbp-0xc]
  40a301:	add    rsp,0x10
  40a305:	pop    rbp
  40a306:	ret    
  40a307:	nop    WORD PTR [rax+rax*1+0x0]
  40a310:	push   rbp
  40a311:	mov    rbp,rsp
  40a314:	sub    rsp,0x30
  40a318:	mov    ax,si
  40a31b:	mov    QWORD PTR [rbp-0x10],rdi
  40a31f:	mov    WORD PTR [rbp-0x12],ax
  40a323:	movsx  esi,WORD PTR [rbp-0x12]
  40a327:	cmp    esi,0x64
  40a32a:	jne    40a33c <gen_monster@@Base+0x7fc>
  40a330:	mov    DWORD PTR [rbp-0x4],0x0
  40a337:	jmp    40a387 <gen_monster@@Base+0x847>
  40a33c:	mov    eax,0x2
  40a341:	mov    edx,eax
  40a343:	mov    rdi,QWORD PTR [rbp-0x10]
  40a347:	mov    eax,0x2
  40a34c:	mov    esi,eax
  40a34e:	mov    ecx,eax
  40a350:	call   41d6d0 <flatcc_builder_table_add@@Base>
  40a355:	mov    QWORD PTR [rbp-0x20],rax
  40a359:	cmp    rax,0x0
  40a35d:	jne    40a36f <gen_monster@@Base+0x82f>
  40a363:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40a36a:	jmp    40a387 <gen_monster@@Base+0x847>
  40a36f:	mov    rdi,QWORD PTR [rbp-0x20]
  40a373:	movsx  esi,WORD PTR [rbp-0x12]
  40a377:	call   4153e0 <main@@Base+0xff0>
  40a37c:	mov    DWORD PTR [rbp-0x4],0x0
  40a383:	mov    QWORD PTR [rbp-0x28],rax
  40a387:	mov    eax,DWORD PTR [rbp-0x4]
  40a38a:	add    rsp,0x30
  40a38e:	pop    rbp
  40a38f:	ret    
  40a390:	push   rbp
  40a391:	mov    rbp,rsp
  40a394:	sub    rsp,0x10
  40a398:	xor    esi,esi
  40a39a:	mov    eax,0x20
  40a39f:	mov    edx,eax
  40a3a1:	mov    QWORD PTR [rbp-0x8],rdi
  40a3a5:	mov    rdi,QWORD PTR [rbp-0x8]
  40a3a9:	mov    ecx,0x10
  40a3ae:	call   41d6d0 <flatcc_builder_table_add@@Base>
  40a3b3:	add    rsp,0x10
  40a3b7:	pop    rbp
  40a3b8:	ret    
  40a3b9:	nop    DWORD PTR [rax+0x0]
  40a3c0:	push   rbp
  40a3c1:	mov    rbp,rsp
  40a3c4:	xor    eax,eax
  40a3c6:	mov    QWORD PTR [rbp-0x8],rdi
  40a3ca:	pop    rbp
  40a3cb:	ret    
  40a3cc:	nop    DWORD PTR [rax+0x0]
  40a3d0:	push   rbp
  40a3d1:	mov    rbp,rsp
  40a3d4:	sub    rsp,0x30
  40a3d8:	mov    al,sil
  40a3db:	mov    QWORD PTR [rbp-0x10],rdi
  40a3df:	mov    BYTE PTR [rbp-0x11],al
  40a3e2:	movsx  esi,BYTE PTR [rbp-0x11]
  40a3e6:	cmp    esi,0x8
  40a3e9:	jne    40a3fb <gen_monster@@Base+0x8bb>
  40a3ef:	mov    DWORD PTR [rbp-0x4],0x0
  40a3f6:	jmp    40a447 <gen_monster@@Base+0x907>
  40a3fb:	mov    eax,0x1
  40a400:	mov    edx,eax
  40a402:	mov    rdi,QWORD PTR [rbp-0x10]
  40a406:	mov    esi,0x6
  40a40b:	mov    ecx,0x1
  40a410:	call   41d6d0 <flatcc_builder_table_add@@Base>
  40a415:	mov    QWORD PTR [rbp-0x20],rax
  40a419:	cmp    rax,0x0
  40a41d:	jne    40a42f <gen_monster@@Base+0x8ef>
  40a423:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40a42a:	jmp    40a447 <gen_monster@@Base+0x907>
  40a42f:	mov    rdi,QWORD PTR [rbp-0x20]
  40a433:	movsx  esi,BYTE PTR [rbp-0x11]
  40a437:	call   416eb0 <main@@Base+0x2ac0>
  40a43c:	mov    DWORD PTR [rbp-0x4],0x0
  40a443:	mov    QWORD PTR [rbp-0x28],rax
  40a447:	mov    eax,DWORD PTR [rbp-0x4]
  40a44a:	add    rsp,0x30
  40a44e:	pop    rbp
  40a44f:	ret    
  40a450:	push   rbp
  40a451:	mov    rbp,rsp
  40a454:	sub    rsp,0x20
  40a458:	mov    QWORD PTR [rbp-0x8],rdi
  40a45c:	mov    QWORD PTR [rbp-0x10],rsi
  40a460:	mov    QWORD PTR [rbp-0x18],rdx
  40a464:	mov    rdi,QWORD PTR [rbp-0x8]
  40a468:	mov    rdx,QWORD PTR [rbp-0x8]
  40a46c:	mov    rsi,QWORD PTR [rbp-0x10]
  40a470:	mov    rax,QWORD PTR [rbp-0x18]
  40a474:	mov    QWORD PTR [rbp-0x20],rdi
  40a478:	mov    rdi,rdx
  40a47b:	mov    rdx,rax
  40a47e:	call   404bb0 <test_type_aliases@@Base+0x2b0>
  40a483:	mov    rdi,QWORD PTR [rbp-0x20]
  40a487:	mov    esi,eax
  40a489:	call   416ef0 <main@@Base+0x2b00>
  40a48e:	add    rsp,0x20
  40a492:	pop    rbp
  40a493:	ret    
  40a494:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a49e:	xchg   ax,ax
  40a4a0:	push   rbp
  40a4a1:	mov    rbp,rsp
  40a4a4:	sub    rsp,0x10
  40a4a8:	mov    QWORD PTR [rbp-0x8],rdi
  40a4ac:	mov    rdi,QWORD PTR [rbp-0x8]
  40a4b0:	call   416f50 <main@@Base+0x2b60>
  40a4b5:	add    rsp,0x10
  40a4b9:	pop    rbp
  40a4ba:	ret    
  40a4bb:	nop    DWORD PTR [rax+rax*1+0x0]
  40a4c0:	push   rbp
  40a4c1:	mov    rbp,rsp
  40a4c4:	sub    rsp,0x10
  40a4c8:	mov    QWORD PTR [rbp-0x8],rdi
  40a4cc:	mov    QWORD PTR [rbp-0x10],rsi
  40a4d0:	mov    rdi,QWORD PTR [rbp-0x8]
  40a4d4:	mov    rsi,QWORD PTR [rbp-0x10]
  40a4d8:	call   41af40 <flatcc_builder_extend_vector@@Base>
  40a4dd:	add    rsp,0x10
  40a4e1:	pop    rbp
  40a4e2:	ret    
  40a4e3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a4ed:	nop    DWORD PTR [rax]
  40a4f0:	push   rbp
  40a4f1:	mov    rbp,rsp
  40a4f4:	sub    rsp,0x20
  40a4f8:	mov    al,dl
  40a4fa:	mov    cx,si
  40a4fd:	mov    edx,0x1
  40a502:	mov    esi,edx
  40a504:	mov    QWORD PTR [rbp-0x8],rdi
  40a508:	mov    WORD PTR [rbp-0xa],cx
  40a50c:	mov    BYTE PTR [rbp-0xb],al
  40a50f:	mov    rdi,QWORD PTR [rbp-0x8]
  40a513:	call   41af40 <flatcc_builder_extend_vector@@Base>
  40a518:	mov    QWORD PTR [rbp-0x18],rax
  40a51c:	cmp    rax,0x0
  40a520:	je     40a543 <gen_monster@@Base+0xa03>
  40a526:	mov    rdi,QWORD PTR [rbp-0x18]
  40a52a:	mov    ax,WORD PTR [rbp-0xa]
  40a52e:	movsx  esi,ax
  40a531:	movsx  edx,BYTE PTR [rbp-0xb]
  40a535:	call   416f80 <main@@Base+0x2b90>
  40a53a:	mov    QWORD PTR [rbp-0x20],rax
  40a53e:	jmp    40a550 <gen_monster@@Base+0xa10>
  40a543:	xor    eax,eax
  40a545:	mov    ecx,eax
  40a547:	mov    QWORD PTR [rbp-0x20],rcx
  40a54b:	jmp    40a550 <gen_monster@@Base+0xa10>
  40a550:	mov    rax,QWORD PTR [rbp-0x20]
  40a554:	add    rsp,0x20
  40a558:	pop    rbp
  40a559:	ret    
  40a55a:	nop    WORD PTR [rax+rax*1+0x0]
  40a560:	push   rbp
  40a561:	mov    rbp,rsp
  40a564:	sub    rsp,0x30
  40a568:	mov    eax,0x1
  40a56d:	mov    ecx,eax
  40a56f:	mov    QWORD PTR [rbp-0x8],rdi
  40a573:	mov    QWORD PTR [rbp-0x10],rsi
  40a577:	mov    rdi,QWORD PTR [rbp-0x8]
  40a57b:	mov    rsi,rcx
  40a57e:	call   41af40 <flatcc_builder_extend_vector@@Base>
  40a583:	mov    QWORD PTR [rbp-0x18],rax
  40a587:	cmp    rax,0x0
  40a58b:	je     40a5c3 <gen_monster@@Base+0xa83>
  40a591:	mov    rax,QWORD PTR [rbp-0x18]
  40a595:	mov    rcx,QWORD PTR [rbp-0x10]
  40a599:	mov    QWORD PTR [rbp-0x20],rax
  40a59d:	mov    QWORD PTR [rbp-0x28],rcx
  40a5a1:	call   416fb0 <main@@Base+0x2bc0>
  40a5a6:	mov    rdi,QWORD PTR [rbp-0x20]
  40a5aa:	mov    rsi,QWORD PTR [rbp-0x28]
  40a5ae:	mov    rdx,rax
  40a5b1:	call   4040f0 <memcpy@plt>
  40a5b6:	mov    rax,QWORD PTR [rbp-0x18]
  40a5ba:	mov    QWORD PTR [rbp-0x30],rax
  40a5be:	jmp    40a5d0 <gen_monster@@Base+0xa90>
  40a5c3:	xor    eax,eax
  40a5c5:	mov    ecx,eax
  40a5c7:	mov    QWORD PTR [rbp-0x30],rcx
  40a5cb:	jmp    40a5d0 <gen_monster@@Base+0xa90>
  40a5d0:	mov    rax,QWORD PTR [rbp-0x30]
  40a5d4:	add    rsp,0x30
  40a5d8:	pop    rbp
  40a5d9:	ret    
  40a5da:	nop    WORD PTR [rax+rax*1+0x0]
  40a5e0:	push   rbp
  40a5e1:	mov    rbp,rsp
  40a5e4:	sub    rsp,0x30
  40a5e8:	mov    eax,0x1
  40a5ed:	mov    ecx,eax
  40a5ef:	mov    QWORD PTR [rbp-0x8],rdi
  40a5f3:	mov    QWORD PTR [rbp-0x10],rsi
  40a5f7:	mov    rdi,QWORD PTR [rbp-0x8]
  40a5fb:	mov    rsi,rcx
  40a5fe:	call   41af40 <flatcc_builder_extend_vector@@Base>
  40a603:	mov    QWORD PTR [rbp-0x18],rax
  40a607:	cmp    rax,0x0
  40a60b:	je     40a643 <gen_monster@@Base+0xb03>
  40a611:	mov    rax,QWORD PTR [rbp-0x18]
  40a615:	mov    rcx,QWORD PTR [rbp-0x10]
  40a619:	mov    QWORD PTR [rbp-0x20],rax
  40a61d:	mov    QWORD PTR [rbp-0x28],rcx
  40a621:	call   416fb0 <main@@Base+0x2bc0>
  40a626:	mov    rdi,QWORD PTR [rbp-0x20]
  40a62a:	mov    rsi,QWORD PTR [rbp-0x28]
  40a62e:	mov    rdx,rax
  40a631:	call   4040f0 <memcpy@plt>
  40a636:	mov    rax,QWORD PTR [rbp-0x18]
  40a63a:	mov    QWORD PTR [rbp-0x30],rax
  40a63e:	jmp    40a650 <gen_monster@@Base+0xb10>
  40a643:	xor    eax,eax
  40a645:	mov    ecx,eax
  40a647:	mov    QWORD PTR [rbp-0x30],rcx
  40a64b:	jmp    40a650 <gen_monster@@Base+0xb10>
  40a650:	mov    rax,QWORD PTR [rbp-0x30]
  40a654:	add    rsp,0x30
  40a658:	pop    rbp
  40a659:	ret    
  40a65a:	nop    WORD PTR [rax+rax*1+0x0]
  40a660:	push   rbp
  40a661:	mov    rbp,rsp
  40a664:	sub    rsp,0x10
  40a668:	mov    QWORD PTR [rbp-0x8],rdi
  40a66c:	mov    rdi,QWORD PTR [rbp-0x8]
  40a670:	call   41cfa0 <flatcc_builder_vector_count@@Base>
  40a675:	add    rsp,0x10
  40a679:	pop    rbp
  40a67a:	ret    
  40a67b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a680:	push   rbp
  40a681:	mov    rbp,rsp
  40a684:	sub    rsp,0x10
  40a688:	mov    QWORD PTR [rbp-0x8],rdi
  40a68c:	mov    QWORD PTR [rbp-0x10],rsi
  40a690:	mov    rdi,QWORD PTR [rbp-0x8]
  40a694:	mov    rsi,QWORD PTR [rbp-0x10]
  40a698:	call   41b690 <flatcc_builder_truncate_vector@@Base>
  40a69d:	add    rsp,0x10
  40a6a1:	pop    rbp
  40a6a2:	ret    
  40a6a3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a6ad:	nop    DWORD PTR [rax]
  40a6b0:	push   rbp
  40a6b1:	mov    rbp,rsp
  40a6b4:	sub    rsp,0x10
  40a6b8:	mov    QWORD PTR [rbp-0x8],rdi
  40a6bc:	mov    rdi,QWORD PTR [rbp-0x8]
  40a6c0:	call   41cfc0 <flatcc_builder_vector_edit@@Base>
  40a6c5:	add    rsp,0x10
  40a6c9:	pop    rbp
  40a6ca:	ret    
  40a6cb:	nop    DWORD PTR [rax+rax*1+0x0]
  40a6d0:	push   rbp
  40a6d1:	mov    rbp,rsp
  40a6d4:	sub    rsp,0x10
  40a6d8:	mov    QWORD PTR [rbp-0x8],rdi
  40a6dc:	mov    rdi,QWORD PTR [rbp-0x8]
  40a6e0:	mov    rax,QWORD PTR [rbp-0x8]
  40a6e4:	mov    QWORD PTR [rbp-0x10],rdi
  40a6e8:	mov    rdi,rax
  40a6eb:	call   417020 <main@@Base+0x2c30>
  40a6f0:	mov    rdi,QWORD PTR [rbp-0x10]
  40a6f4:	mov    esi,eax
  40a6f6:	call   416fc0 <main@@Base+0x2bd0>
  40a6fb:	add    rsp,0x10
  40a6ff:	pop    rbp
  40a700:	ret    
  40a701:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a70b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a710:	push   rbp
  40a711:	mov    rbp,rsp
  40a714:	sub    rsp,0x20
  40a718:	mov    QWORD PTR [rbp-0x8],rdi
  40a71c:	mov    QWORD PTR [rbp-0x10],rsi
  40a720:	mov    QWORD PTR [rbp-0x18],rdx
  40a724:	mov    rdi,QWORD PTR [rbp-0x8]
  40a728:	mov    rsi,QWORD PTR [rbp-0x10]
  40a72c:	mov    rdx,QWORD PTR [rbp-0x18]
  40a730:	call   41e090 <flatcc_builder_create_string@@Base>
  40a735:	add    rsp,0x20
  40a739:	pop    rbp
  40a73a:	ret    
  40a73b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a740:	push   rbp
  40a741:	mov    rbp,rsp
  40a744:	sub    rsp,0x20
  40a748:	mov    QWORD PTR [rbp-0x8],rdi
  40a74c:	mov    DWORD PTR [rbp-0xc],esi
  40a74f:	cmp    DWORD PTR [rbp-0xc],0x0
  40a753:	je     40a788 <gen_monster@@Base+0xc48>
  40a759:	mov    rdi,QWORD PTR [rbp-0x8]
  40a75d:	mov    esi,0x3
  40a762:	call   41d5d0 <flatcc_builder_table_add_offset@@Base>
  40a767:	mov    QWORD PTR [rbp-0x18],rax
  40a76b:	cmp    rax,0x0
  40a76f:	je     40a788 <gen_monster@@Base+0xc48>
  40a775:	xor    eax,eax
  40a777:	mov    ecx,DWORD PTR [rbp-0xc]
  40a77a:	mov    rdx,QWORD PTR [rbp-0x18]
  40a77e:	mov    DWORD PTR [rdx],ecx
  40a780:	mov    DWORD PTR [rbp-0x1c],eax
  40a783:	jmp    40a795 <gen_monster@@Base+0xc55>
  40a788:	mov    eax,0xffffffff
  40a78d:	mov    DWORD PTR [rbp-0x1c],eax
  40a790:	jmp    40a795 <gen_monster@@Base+0xc55>
  40a795:	mov    eax,DWORD PTR [rbp-0x1c]
  40a798:	add    rsp,0x20
  40a79c:	pop    rbp
  40a79d:	ret    
  40a79e:	xchg   ax,ax
  40a7a0:	push   rbp
  40a7a1:	mov    rbp,rsp
  40a7a4:	sub    rsp,0x10
  40a7a8:	mov    QWORD PTR [rbp-0x8],rdi
  40a7ac:	mov    rdi,QWORD PTR [rbp-0x8]
  40a7b0:	call   41ba80 <flatcc_builder_start_offset_vector@@Base>
  40a7b5:	add    rsp,0x10
  40a7b9:	pop    rbp
  40a7ba:	ret    
  40a7bb:	nop    DWORD PTR [rax+rax*1+0x0]
  40a7c0:	push   rbp
  40a7c1:	mov    rbp,rsp
  40a7c4:	sub    rsp,0x10
  40a7c8:	mov    QWORD PTR [rbp-0x8],rdi
  40a7cc:	mov    QWORD PTR [rbp-0x10],rsi
  40a7d0:	mov    rdi,QWORD PTR [rbp-0x8]
  40a7d4:	mov    rsi,QWORD PTR [rbp-0x10]
  40a7d8:	call   41b260 <flatcc_builder_extend_offset_vector@@Base>
  40a7dd:	add    rsp,0x10
  40a7e1:	pop    rbp
  40a7e2:	ret    
  40a7e3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a7ed:	nop    DWORD PTR [rax]
  40a7f0:	push   rbp
  40a7f1:	mov    rbp,rsp
  40a7f4:	sub    rsp,0x10
  40a7f8:	mov    QWORD PTR [rbp-0x8],rdi
  40a7fc:	mov    rdi,QWORD PTR [rbp-0x8]
  40a800:	call   405c20 <test_empty_monster@@Base+0x190>
  40a805:	add    rsp,0x10
  40a809:	pop    rbp
  40a80a:	ret    
  40a80b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a810:	push   rbp
  40a811:	mov    rbp,rsp
  40a814:	sub    rsp,0x20
  40a818:	mov    QWORD PTR [rbp-0x8],rdi
  40a81c:	mov    QWORD PTR [rbp-0x10],rsi
  40a820:	mov    QWORD PTR [rbp-0x18],rdx
  40a824:	mov    rdi,QWORD PTR [rbp-0x8]
  40a828:	mov    rdx,QWORD PTR [rbp-0x8]
  40a82c:	mov    rsi,QWORD PTR [rbp-0x10]
  40a830:	mov    rax,QWORD PTR [rbp-0x18]
  40a834:	mov    QWORD PTR [rbp-0x20],rdi
  40a838:	mov    rdi,rdx
  40a83b:	mov    rdx,rax
  40a83e:	call   41e2b0 <flatcc_builder_create_string_strn@@Base>
  40a843:	mov    rdi,QWORD PTR [rbp-0x20]
  40a847:	mov    esi,eax
  40a849:	call   40a740 <gen_monster@@Base+0xc00>
  40a84e:	add    rsp,0x20
  40a852:	pop    rbp
  40a853:	ret    
  40a854:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a85e:	xchg   ax,ax
  40a860:	push   rbp
  40a861:	mov    rbp,rsp
  40a864:	sub    rsp,0x10
  40a868:	mov    QWORD PTR [rbp-0x8],rdi
  40a86c:	mov    rdi,QWORD PTR [rbp-0x8]
  40a870:	mov    rax,QWORD PTR [rbp-0x8]
  40a874:	mov    QWORD PTR [rbp-0x10],rdi
  40a878:	mov    rdi,rax
  40a87b:	call   405c80 <test_empty_monster@@Base+0x1f0>
  40a880:	mov    rdi,QWORD PTR [rbp-0x10]
  40a884:	mov    esi,eax
  40a886:	call   417040 <main@@Base+0x2c50>
  40a88b:	add    rsp,0x10
  40a88f:	pop    rbp
  40a890:	ret    
  40a891:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a89b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a8a0:	push   rbp
  40a8a1:	mov    rbp,rsp
  40a8a4:	sub    rsp,0x10
  40a8a8:	mov    QWORD PTR [rbp-0x8],rdi
  40a8ac:	mov    QWORD PTR [rbp-0x10],rsi
  40a8b0:	mov    rdi,QWORD PTR [rbp-0x8]
  40a8b4:	mov    rsi,QWORD PTR [rbp-0x10]
  40a8b8:	call   41b7d0 <flatcc_builder_truncate_offset_vector@@Base>
  40a8bd:	add    rsp,0x10
  40a8c1:	pop    rbp
  40a8c2:	ret    
  40a8c3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a8cd:	nop    DWORD PTR [rax]
  40a8d0:	push   rbp
  40a8d1:	mov    rbp,rsp
  40a8d4:	sub    rsp,0x10
  40a8d8:	mov    QWORD PTR [rbp-0x8],rdi
  40a8dc:	mov    rdi,QWORD PTR [rbp-0x8]
  40a8e0:	call   41d410 <flatcc_builder_offset_vector_count@@Base>
  40a8e5:	add    rsp,0x10
  40a8e9:	pop    rbp
  40a8ea:	ret    
  40a8eb:	nop    DWORD PTR [rax+rax*1+0x0]
  40a8f0:	push   rbp
  40a8f1:	mov    rbp,rsp
  40a8f4:	sub    rsp,0x10
  40a8f8:	mov    QWORD PTR [rbp-0x8],rdi
  40a8fc:	mov    rdi,QWORD PTR [rbp-0x8]
  40a900:	call   41d3f0 <flatcc_builder_offset_vector_edit@@Base>
  40a905:	add    rsp,0x10
  40a909:	pop    rbp
  40a90a:	ret    
  40a90b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a910:	push   rbp
  40a911:	mov    rbp,rsp
  40a914:	sub    rsp,0x20
  40a918:	mov    QWORD PTR [rbp-0x8],rdi
  40a91c:	mov    QWORD PTR [rbp-0x10],rsi
  40a920:	mov    QWORD PTR [rbp-0x18],rdx
  40a924:	mov    rdi,QWORD PTR [rbp-0x8]
  40a928:	mov    rsi,QWORD PTR [rbp-0x10]
  40a92c:	mov    rdx,QWORD PTR [rbp-0x18]
  40a930:	call   41b3a0 <flatcc_builder_append_offset_vector@@Base>
  40a935:	add    rsp,0x20
  40a939:	pop    rbp
  40a93a:	ret    
  40a93b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a940:	push   rbp
  40a941:	mov    rbp,rsp
  40a944:	sub    rsp,0x10
  40a948:	mov    QWORD PTR [rbp-0x8],rdi
  40a94c:	mov    rdi,QWORD PTR [rbp-0x8]
  40a950:	mov    rax,QWORD PTR [rbp-0x8]
  40a954:	mov    QWORD PTR [rbp-0x10],rdi
  40a958:	mov    rdi,rax
  40a95b:	call   41bb90 <flatcc_builder_end_offset_vector@@Base>
  40a960:	mov    rdi,QWORD PTR [rbp-0x10]
  40a964:	mov    esi,eax
  40a966:	call   417090 <main@@Base+0x2ca0>
  40a96b:	add    rsp,0x10
  40a96f:	pop    rbp
  40a970:	ret    
  40a971:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a97b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a980:	push   rbp
  40a981:	mov    rbp,rsp
  40a984:	sub    rsp,0x10
  40a988:	mov    QWORD PTR [rbp-0x8],rdi
  40a98c:	mov    QWORD PTR [rbp-0x10],rsi
  40a990:	mov    rdi,QWORD PTR [rbp-0x8]
  40a994:	mov    rsi,QWORD PTR [rbp-0x10]
  40a998:	call   41e260 <flatcc_builder_create_string_str@@Base>
  40a99d:	add    rsp,0x10
  40a9a1:	pop    rbp
  40a9a2:	ret    
  40a9a3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a9ad:	nop    DWORD PTR [rax]
  40a9b0:	push   rbp
  40a9b1:	mov    rbp,rsp
  40a9b4:	sub    rsp,0x20
  40a9b8:	mov    QWORD PTR [rbp-0x8],rdi
  40a9bc:	mov    QWORD PTR [rbp-0x10],rsi
  40a9c0:	mov    QWORD PTR [rbp-0x18],rdx
  40a9c4:	mov    rdi,QWORD PTR [rbp-0x8]
  40a9c8:	mov    rdx,QWORD PTR [rbp-0x8]
  40a9cc:	mov    rsi,QWORD PTR [rbp-0x10]
  40a9d0:	mov    rax,QWORD PTR [rbp-0x18]
  40a9d4:	mov    QWORD PTR [rbp-0x20],rdi
  40a9d8:	mov    rdi,rdx
  40a9db:	mov    rdx,rax
  40a9de:	call   41bb00 <flatcc_builder_create_offset_vector@@Base>
  40a9e3:	mov    rdi,QWORD PTR [rbp-0x20]
  40a9e7:	mov    esi,eax
  40a9e9:	call   4170f0 <main@@Base+0x2d00>
  40a9ee:	add    rsp,0x20
  40a9f2:	pop    rbp
  40a9f3:	ret    
  40a9f4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a9fe:	xchg   ax,ax
  40aa00:	push   rbp
  40aa01:	mov    rbp,rsp
  40aa04:	sub    rsp,0x10
  40aa08:	mov    QWORD PTR [rbp-0x8],rdi
  40aa0c:	mov    rdi,QWORD PTR [rbp-0x8]
  40aa10:	call   417150 <main@@Base+0x2d60>
  40aa15:	add    rsp,0x10
  40aa19:	pop    rbp
  40aa1a:	ret    
  40aa1b:	nop    DWORD PTR [rax+rax*1+0x0]
  40aa20:	push   rbp
  40aa21:	mov    rbp,rsp
  40aa24:	sub    rsp,0x20
  40aa28:	mov    QWORD PTR [rbp-0x8],rdi
  40aa2c:	mov    QWORD PTR [rbp-0x10],rsi
  40aa30:	mov    QWORD PTR [rbp-0x18],rdx
  40aa34:	mov    rdi,QWORD PTR [rbp-0x8]
  40aa38:	mov    rsi,QWORD PTR [rbp-0x10]
  40aa3c:	mov    rdx,QWORD PTR [rbp-0x18]
  40aa40:	call   41b1b0 <flatcc_builder_append_vector@@Base>
  40aa45:	add    rsp,0x20
  40aa49:	pop    rbp
  40aa4a:	ret    
  40aa4b:	nop    DWORD PTR [rax+rax*1+0x0]
  40aa50:	push   rbp
  40aa51:	mov    rbp,rsp
  40aa54:	sub    rsp,0x10
  40aa58:	mov    QWORD PTR [rbp-0x8],rdi
  40aa5c:	mov    rdi,QWORD PTR [rbp-0x8]
  40aa60:	mov    rax,QWORD PTR [rbp-0x8]
  40aa64:	mov    QWORD PTR [rbp-0x10],rdi
  40aa68:	mov    rdi,rax
  40aa6b:	call   4171e0 <main@@Base+0x2df0>
  40aa70:	mov    rdi,QWORD PTR [rbp-0x10]
  40aa74:	mov    esi,eax
  40aa76:	call   417180 <main@@Base+0x2d90>
  40aa7b:	add    rsp,0x10
  40aa7f:	pop    rbp
  40aa80:	ret    
  40aa81:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40aa8b:	nop    DWORD PTR [rax+rax*1+0x0]
  40aa90:	push   rbp
  40aa91:	mov    rbp,rsp
  40aa94:	sub    rsp,0x30
  40aa98:	mov    QWORD PTR [rbp-0x10],rsi
  40aa9c:	mov    QWORD PTR [rbp-0x18],rdi
  40aaa0:	movzx  eax,BYTE PTR [rbp-0x10]
  40aaa4:	cmp    eax,0x0
  40aaa7:	jne    40aab9 <gen_monster@@Base+0xf79>
  40aaad:	mov    DWORD PTR [rbp-0x4],0x0
  40aab4:	jmp    40ab38 <gen_monster@@Base+0xff8>
  40aab9:	cmp    DWORD PTR [rbp-0xc],0x0
  40aabd:	jne    40aacf <gen_monster@@Base+0xf8f>
  40aac3:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40aaca:	jmp    40ab38 <gen_monster@@Base+0xff8>
  40aacf:	mov    eax,0x1
  40aad4:	mov    edx,eax
  40aad6:	mov    rdi,QWORD PTR [rbp-0x18]
  40aada:	mov    esi,0x7
  40aadf:	mov    ecx,0x1
  40aae4:	call   41d6d0 <flatcc_builder_table_add@@Base>
  40aae9:	mov    QWORD PTR [rbp-0x28],rax
  40aaed:	cmp    rax,0x0
  40aaf1:	je     40ab13 <gen_monster@@Base+0xfd3>
  40aaf7:	mov    rdi,QWORD PTR [rbp-0x18]
  40aafb:	mov    esi,0x8
  40ab00:	call   41d5d0 <flatcc_builder_table_add_offset@@Base>
  40ab05:	mov    QWORD PTR [rbp-0x20],rax
  40ab09:	cmp    rax,0x0
  40ab0d:	jne    40ab1f <gen_monster@@Base+0xfdf>
  40ab13:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40ab1a:	jmp    40ab38 <gen_monster@@Base+0xff8>
  40ab1f:	mov    al,BYTE PTR [rbp-0x10]
  40ab22:	mov    rcx,QWORD PTR [rbp-0x28]
  40ab26:	mov    BYTE PTR [rcx],al
  40ab28:	mov    edx,DWORD PTR [rbp-0xc]
  40ab2b:	mov    rcx,QWORD PTR [rbp-0x20]
  40ab2f:	mov    DWORD PTR [rcx],edx
  40ab31:	mov    DWORD PTR [rbp-0x4],0x0
  40ab38:	mov    eax,DWORD PTR [rbp-0x4]
  40ab3b:	add    rsp,0x30
  40ab3f:	pop    rbp
  40ab40:	ret    
  40ab41:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ab4b:	nop    DWORD PTR [rax+rax*1+0x0]
  40ab50:	push   rbp
  40ab51:	mov    rbp,rsp
  40ab54:	mov    DWORD PTR [rbp-0xc],edi
  40ab57:	mov    BYTE PTR [rbp-0x8],0x1
  40ab5b:	mov    edi,DWORD PTR [rbp-0xc]
  40ab5e:	mov    DWORD PTR [rbp-0x4],edi
  40ab61:	mov    rax,QWORD PTR [rbp-0x8]
  40ab65:	pop    rbp
  40ab66:	ret    
  40ab67:	nop    WORD PTR [rax+rax*1+0x0]
  40ab70:	push   rbp
  40ab71:	mov    rbp,rsp
  40ab74:	sub    rsp,0x10
  40ab78:	mov    QWORD PTR [rbp-0x8],rdi
  40ab7c:	mov    rdi,QWORD PTR [rbp-0x8]
  40ab80:	call   405c20 <test_empty_monster@@Base+0x190>
  40ab85:	add    rsp,0x10
  40ab89:	pop    rbp
  40ab8a:	ret    
  40ab8b:	nop    DWORD PTR [rax+rax*1+0x0]
  40ab90:	push   rbp
  40ab91:	mov    rbp,rsp
  40ab94:	sub    rsp,0x10
  40ab98:	mov    QWORD PTR [rbp-0x8],rdi
  40ab9c:	mov    rdi,QWORD PTR [rbp-0x8]
  40aba0:	call   405c20 <test_empty_monster@@Base+0x190>
  40aba5:	add    rsp,0x10
  40aba9:	pop    rbp
  40abaa:	ret    
  40abab:	nop    DWORD PTR [rax+rax*1+0x0]
  40abb0:	push   rbp
  40abb1:	mov    rbp,rsp
  40abb4:	sub    rsp,0x20
  40abb8:	mov    QWORD PTR [rbp-0x8],rdi
  40abbc:	mov    DWORD PTR [rbp-0xc],esi
  40abbf:	mov    rdi,QWORD PTR [rbp-0x8]
  40abc3:	mov    esi,DWORD PTR [rbp-0xc]
  40abc6:	mov    QWORD PTR [rbp-0x20],rdi
  40abca:	mov    edi,esi
  40abcc:	call   40ab50 <gen_monster@@Base+0x1010>
  40abd1:	mov    QWORD PTR [rbp-0x18],rax
  40abd5:	mov    rsi,QWORD PTR [rbp-0x18]
  40abd9:	mov    rdi,QWORD PTR [rbp-0x20]
  40abdd:	call   40aa90 <gen_monster@@Base+0xf50>
  40abe2:	add    rsp,0x20
  40abe6:	pop    rbp
  40abe7:	ret    
  40abe8:	nop    DWORD PTR [rax+rax*1+0x0]
  40abf0:	push   rbp
  40abf1:	mov    rbp,rsp
  40abf4:	sub    rsp,0x10
  40abf8:	mov    QWORD PTR [rbp-0x8],rdi
  40abfc:	mov    rdi,QWORD PTR [rbp-0x8]
  40ac00:	mov    rax,QWORD PTR [rbp-0x8]
  40ac04:	mov    QWORD PTR [rbp-0x10],rdi
  40ac08:	mov    rdi,rax
  40ac0b:	call   405c80 <test_empty_monster@@Base+0x1f0>
  40ac10:	mov    rdi,QWORD PTR [rbp-0x10]
  40ac14:	mov    esi,eax
  40ac16:	call   417200 <main@@Base+0x2e10>
  40ac1b:	add    rsp,0x10
  40ac1f:	pop    rbp
  40ac20:	ret    
  40ac21:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ac2b:	nop    DWORD PTR [rax+rax*1+0x0]
  40ac30:	push   rbp
  40ac31:	mov    rbp,rsp
  40ac34:	sub    rsp,0x30
  40ac38:	mov    QWORD PTR [rbp-0x10],rsi
  40ac3c:	mov    QWORD PTR [rbp-0x18],rdi
  40ac40:	movzx  eax,BYTE PTR [rbp-0x10]
  40ac44:	cmp    eax,0x0
  40ac47:	jne    40ac59 <gen_monster@@Base+0x1119>
  40ac4d:	mov    DWORD PTR [rbp-0x4],0x0
  40ac54:	jmp    40ac9b <gen_monster@@Base+0x115b>
  40ac59:	mov    rdi,QWORD PTR [rbp-0x18]
  40ac5d:	mov    esi,0x8
  40ac62:	call   41d5d0 <flatcc_builder_table_add_offset@@Base>
  40ac67:	mov    QWORD PTR [rbp-0x20],rax
  40ac6b:	cmp    rax,0x0
  40ac6f:	je     40ac88 <gen_monster@@Base+0x1148>
  40ac75:	xor    eax,eax
  40ac77:	mov    ecx,DWORD PTR [rbp-0xc]
  40ac7a:	mov    rdx,QWORD PTR [rbp-0x20]
  40ac7e:	mov    DWORD PTR [rdx],ecx
  40ac80:	mov    DWORD PTR [rbp-0x24],eax
  40ac83:	jmp    40ac95 <gen_monster@@Base+0x1155>
  40ac88:	mov    eax,0xffffffff
  40ac8d:	mov    DWORD PTR [rbp-0x24],eax
  40ac90:	jmp    40ac95 <gen_monster@@Base+0x1155>
  40ac95:	mov    eax,DWORD PTR [rbp-0x24]
  40ac98:	mov    DWORD PTR [rbp-0x4],eax
  40ac9b:	mov    eax,DWORD PTR [rbp-0x4]
  40ac9e:	add    rsp,0x30
  40aca2:	pop    rbp
  40aca3:	ret    
  40aca4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40acae:	xchg   ax,ax
  40acb0:	push   rbp
  40acb1:	mov    rbp,rsp
  40acb4:	sub    rsp,0x30
  40acb8:	mov    al,sil
  40acbb:	mov    QWORD PTR [rbp-0x10],rdi
  40acbf:	mov    BYTE PTR [rbp-0x11],al
  40acc2:	movzx  esi,BYTE PTR [rbp-0x11]
  40acc6:	cmp    esi,0x0
  40acc9:	jne    40acdb <gen_monster@@Base+0x119b>
  40accf:	mov    DWORD PTR [rbp-0x4],0x0
  40acd6:	jmp    40ad29 <gen_monster@@Base+0x11e9>
  40acdb:	mov    eax,0x1
  40ace0:	mov    edx,eax
  40ace2:	mov    rdi,QWORD PTR [rbp-0x10]
  40ace6:	mov    esi,0x7
  40aceb:	mov    ecx,0x1
  40acf0:	call   41d6d0 <flatcc_builder_table_add@@Base>
  40acf5:	mov    QWORD PTR [rbp-0x20],rax
  40acf9:	cmp    rax,0x0
  40acfd:	je     40ad16 <gen_monster@@Base+0x11d6>
  40ad03:	xor    eax,eax
  40ad05:	mov    cl,BYTE PTR [rbp-0x11]
  40ad08:	mov    rdx,QWORD PTR [rbp-0x20]
  40ad0c:	mov    BYTE PTR [rdx],cl
  40ad0e:	mov    DWORD PTR [rbp-0x24],eax
  40ad11:	jmp    40ad23 <gen_monster@@Base+0x11e3>
  40ad16:	mov    eax,0xffffffff
  40ad1b:	mov    DWORD PTR [rbp-0x24],eax
  40ad1e:	jmp    40ad23 <gen_monster@@Base+0x11e3>
  40ad23:	mov    eax,DWORD PTR [rbp-0x24]
  40ad26:	mov    DWORD PTR [rbp-0x4],eax
  40ad29:	mov    eax,DWORD PTR [rbp-0x4]
  40ad2c:	add    rsp,0x30
  40ad30:	pop    rbp
  40ad31:	ret    
  40ad32:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ad3c:	nop    DWORD PTR [rax+0x0]
  40ad40:	push   rbp
  40ad41:	mov    rbp,rsp
  40ad44:	sub    rsp,0x10
  40ad48:	mov    QWORD PTR [rbp-0x8],rdi
  40ad4c:	mov    rdi,QWORD PTR [rbp-0x8]
  40ad50:	mov    rax,QWORD PTR [rbp-0x8]
  40ad54:	mov    QWORD PTR [rbp-0x10],rdi
  40ad58:	mov    rdi,rax
  40ad5b:	call   405c80 <test_empty_monster@@Base+0x1f0>
  40ad60:	mov    rdi,QWORD PTR [rbp-0x10]
  40ad64:	mov    esi,eax
  40ad66:	call   40f3d0 <test_create_add_field@@Base+0x180>
  40ad6b:	add    rsp,0x10
  40ad6f:	pop    rbp
  40ad70:	ret    
  40ad71:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ad7b:	nop    DWORD PTR [rax+rax*1+0x0]
  40ad80:	push   rbp
  40ad81:	mov    rbp,rsp
  40ad84:	sub    rsp,0x30
  40ad88:	mov    al,sil
  40ad8b:	mov    QWORD PTR [rbp-0x10],rdi
  40ad8f:	mov    BYTE PTR [rbp-0x11],al
  40ad92:	movzx  esi,BYTE PTR [rbp-0x11]
  40ad96:	cmp    esi,0x1
  40ad99:	jne    40adab <gen_monster@@Base+0x126b>
  40ad9f:	mov    DWORD PTR [rbp-0x4],0x0
  40ada6:	jmp    40adf7 <gen_monster@@Base+0x12b7>
  40adab:	mov    eax,0x1
  40adb0:	mov    edx,eax
  40adb2:	mov    rdi,QWORD PTR [rbp-0x10]
  40adb6:	mov    esi,0xf
  40adbb:	mov    ecx,0x1
  40adc0:	call   41d6d0 <flatcc_builder_table_add@@Base>
  40adc5:	mov    QWORD PTR [rbp-0x20],rax
  40adc9:	cmp    rax,0x0
  40adcd:	jne    40addf <gen_monster@@Base+0x129f>
  40add3:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40adda:	jmp    40adf7 <gen_monster@@Base+0x12b7>
  40addf:	mov    rdi,QWORD PTR [rbp-0x20]
  40ade3:	movzx  esi,BYTE PTR [rbp-0x11]
  40ade7:	call   417250 <main@@Base+0x2e60>
  40adec:	mov    DWORD PTR [rbp-0x4],0x0
  40adf3:	mov    QWORD PTR [rbp-0x28],rax
  40adf7:	mov    eax,DWORD PTR [rbp-0x4]
  40adfa:	add    rsp,0x30
  40adfe:	pop    rbp
  40adff:	ret    
  40ae00:	push   rbp
  40ae01:	mov    rbp,rsp
  40ae04:	sub    rsp,0x10
  40ae08:	mov    QWORD PTR [rbp-0x8],rdi
  40ae0c:	mov    rdi,QWORD PTR [rbp-0x8]
  40ae10:	call   417290 <main@@Base+0x2ea0>
  40ae15:	add    rsp,0x10
  40ae19:	pop    rbp
  40ae1a:	ret    
  40ae1b:	nop    DWORD PTR [rax+rax*1+0x0]
  40ae20:	push   rbp
  40ae21:	mov    rbp,rsp
  40ae24:	sub    rsp,0x10
  40ae28:	mov    QWORD PTR [rbp-0x8],rdi
  40ae2c:	mov    rdi,QWORD PTR [rbp-0x8]
  40ae30:	mov    rax,QWORD PTR [rbp-0x8]
  40ae34:	mov    QWORD PTR [rbp-0x10],rdi
  40ae38:	mov    rdi,rax
  40ae3b:	call   417310 <main@@Base+0x2f20>
  40ae40:	mov    rdi,QWORD PTR [rbp-0x10]
  40ae44:	mov    esi,eax
  40ae46:	call   4172b0 <main@@Base+0x2ec0>
  40ae4b:	add    rsp,0x10
  40ae4f:	pop    rbp
  40ae50:	ret    
  40ae51:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ae5b:	nop    DWORD PTR [rax+rax*1+0x0]
  40ae60:	push   rbp
  40ae61:	mov    rbp,rsp
  40ae64:	sub    rsp,0x10
  40ae68:	mov    QWORD PTR [rbp-0x8],rdi
  40ae6c:	mov    rdi,QWORD PTR [rbp-0x8]
  40ae70:	mov    rax,QWORD PTR [rbp-0x8]
  40ae74:	mov    QWORD PTR [rbp-0x10],rdi
  40ae78:	mov    rdi,rax
  40ae7b:	call   405c80 <test_empty_monster@@Base+0x1f0>
  40ae80:	mov    rdi,QWORD PTR [rbp-0x10]
  40ae84:	mov    esi,eax
  40ae86:	call   405ce0 <test_empty_monster@@Base+0x250>
  40ae8b:	add    rsp,0x10
  40ae8f:	pop    rbp
  40ae90:	ret    
  40ae91:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ae9b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040aea0 <test_monster@@Base>:
  40aea0:	push   rbp
  40aea1:	mov    rbp,rsp
  40aea4:	sub    rsp,0x30
  40aea8:	xor    esi,esi
  40aeaa:	mov    QWORD PTR [rbp-0x10],rdi
  40aeae:	mov    rdi,QWORD PTR [rbp-0x10]
  40aeb2:	call   409b40 <gen_monster@@Base>
  40aeb7:	mov    rdi,QWORD PTR [rbp-0x10]
  40aebb:	lea    rsi,[rbp-0x20]
  40aebf:	mov    DWORD PTR [rbp-0x28],eax
  40aec2:	call   41ec10 <flatcc_builder_finalize_aligned_buffer@@Base>
  40aec7:	mov    rsi,QWORD PTR [rip+0x2712a]        # 431ff8 <stderr@GLIBC_2.2.5>
  40aece:	mov    QWORD PTR [rbp-0x18],rax
  40aed2:	mov    rax,QWORD PTR [rbp-0x18]
  40aed6:	mov    rdx,QWORD PTR [rbp-0x20]
  40aeda:	mov    rcx,QWORD PTR [rsi]
  40aedd:	lea    rdi,[rip+0x184f8]        # 4233dc <_IO_stdin_used@@Base+0x3dc>
  40aee4:	mov    rsi,rax
  40aee7:	call   404db0 <test_type_aliases@@Base+0x4b0>
  40aeec:	mov    rdi,QWORD PTR [rbp-0x18]
  40aef0:	mov    rsi,QWORD PTR [rbp-0x20]
  40aef4:	call   405d50 <test_empty_monster@@Base+0x2c0>
  40aef9:	mov    DWORD PTR [rbp-0x24],eax
  40aefc:	cmp    eax,0x0
  40aeff:	je     40af2d <test_monster@@Base+0x8d>
  40af05:	mov    edi,DWORD PTR [rbp-0x24]
  40af08:	call   41fca0 <flatcc_verify_error_string@@Base>
  40af0d:	lea    rdi,[rip+0x19269]        # 42417d <_IO_stdin_used@@Base+0x117d>
  40af14:	mov    rsi,rax
  40af17:	mov    al,0x0
  40af19:	call   404070 <printf@plt>
  40af1e:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40af25:	mov    DWORD PTR [rbp-0x2c],eax
  40af28:	jmp    40af48 <test_monster@@Base+0xa8>
  40af2d:	mov    rdi,QWORD PTR [rbp-0x18]
  40af31:	call   406c10 <verify_monster@@Base>
  40af36:	mov    DWORD PTR [rbp-0x24],eax
  40af39:	mov    rdi,QWORD PTR [rbp-0x18]
  40af3d:	call   41eda0 <flatcc_builder_aligned_free@@Base>
  40af42:	mov    eax,DWORD PTR [rbp-0x24]
  40af45:	mov    DWORD PTR [rbp-0x4],eax
  40af48:	mov    eax,DWORD PTR [rbp-0x4]
  40af4b:	add    rsp,0x30
  40af4f:	pop    rbp
  40af50:	ret    
  40af51:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40af5b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040af60 <test_monster_with_size@@Base>:
  40af60:	push   rbp
  40af61:	mov    rbp,rsp
  40af64:	sub    rsp,0x50
  40af68:	mov    QWORD PTR [rbp-0x10],rdi
  40af6c:	mov    rdi,QWORD PTR [rbp-0x10]
  40af70:	mov    esi,0x1
  40af75:	call   409b40 <gen_monster@@Base>
  40af7a:	mov    rdi,QWORD PTR [rbp-0x10]
  40af7e:	lea    rsi,[rbp-0x28]
  40af82:	mov    DWORD PTR [rbp-0x40],eax
  40af85:	call   41ec10 <flatcc_builder_finalize_aligned_buffer@@Base>
  40af8a:	mov    rsi,QWORD PTR [rip+0x27067]        # 431ff8 <stderr@GLIBC_2.2.5>
  40af91:	mov    QWORD PTR [rbp-0x20],rax
  40af95:	mov    rax,QWORD PTR [rbp-0x20]
  40af99:	mov    rdx,QWORD PTR [rbp-0x28]
  40af9d:	mov    rcx,QWORD PTR [rsi]
  40afa0:	lea    rdi,[rip+0x19200]        # 4241a7 <_IO_stdin_used@@Base+0x11a7>
  40afa7:	mov    rsi,rax
  40afaa:	call   404db0 <test_type_aliases@@Base+0x4b0>
  40afaf:	mov    rax,QWORD PTR [rbp-0x20]
  40afb3:	and    rax,0xf
  40afb7:	cmp    rax,0x0
  40afbb:	je     40aff7 <test_monster_with_size@@Base+0x97>
  40afc1:	lea    rdi,[rip+0x191f7]        # 4241bf <_IO_stdin_used@@Base+0x11bf>
  40afc8:	mov    al,0x0
  40afca:	call   404070 <printf@plt>
  40afcf:	mov    rdi,QWORD PTR [rbp-0x20]
  40afd3:	mov    ecx,edi
  40afd5:	lea    rdi,[rip+0x19234]        # 424210 <_IO_stdin_used@@Base+0x1210>
  40afdc:	mov    esi,ecx
  40afde:	mov    DWORD PTR [rbp-0x44],eax
  40afe1:	mov    al,0x0
  40afe3:	call   404070 <printf@plt>
  40afe8:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40afef:	mov    DWORD PTR [rbp-0x48],eax
  40aff2:	jmp    40b0a9 <test_monster_with_size@@Base+0x149>
  40aff7:	mov    rdi,QWORD PTR [rbp-0x20]
  40affb:	lea    rsi,[rbp-0x30]
  40afff:	call   40b0c0 <test_monster_with_size@@Base+0x160>
  40b004:	mov    QWORD PTR [rbp-0x18],rax
  40b008:	mov    rax,QWORD PTR [rbp-0x28]
  40b00c:	sub    rax,0x4
  40b010:	mov    QWORD PTR [rbp-0x38],rax
  40b014:	mov    rax,QWORD PTR [rbp-0x30]
  40b018:	cmp    rax,QWORD PTR [rbp-0x38]
  40b01c:	je     40b04d <test_monster_with_size@@Base+0xed>
  40b022:	mov    rax,QWORD PTR [rbp-0x30]
  40b026:	mov    ecx,eax
  40b028:	mov    rax,QWORD PTR [rbp-0x38]
  40b02c:	mov    edx,eax
  40b02e:	lea    rdi,[rip+0x191ef]        # 424224 <_IO_stdin_used@@Base+0x1224>
  40b035:	mov    esi,ecx
  40b037:	mov    al,0x0
  40b039:	call   404070 <printf@plt>
  40b03e:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40b045:	mov    DWORD PTR [rbp-0x4c],eax
  40b048:	jmp    40b0a9 <test_monster_with_size@@Base+0x149>
  40b04d:	mov    rdi,QWORD PTR [rbp-0x18]
  40b051:	mov    rsi,QWORD PTR [rbp-0x30]
  40b055:	call   405d50 <test_empty_monster@@Base+0x2c0>
  40b05a:	mov    DWORD PTR [rbp-0x3c],eax
  40b05d:	cmp    eax,0x0
  40b060:	je     40b08e <test_monster_with_size@@Base+0x12e>
  40b066:	mov    edi,DWORD PTR [rbp-0x3c]
  40b069:	call   41fca0 <flatcc_verify_error_string@@Base>
  40b06e:	lea    rdi,[rip+0x191e5]        # 42425a <_IO_stdin_used@@Base+0x125a>
  40b075:	mov    rsi,rax
  40b078:	mov    al,0x0
  40b07a:	call   404070 <printf@plt>
  40b07f:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40b086:	mov    DWORD PTR [rbp-0x50],eax
  40b089:	jmp    40b0a9 <test_monster_with_size@@Base+0x149>
  40b08e:	mov    rdi,QWORD PTR [rbp-0x18]
  40b092:	call   406c10 <verify_monster@@Base>
  40b097:	mov    DWORD PTR [rbp-0x3c],eax
  40b09a:	mov    rdi,QWORD PTR [rbp-0x20]
  40b09e:	call   41eda0 <flatcc_builder_aligned_free@@Base>
  40b0a3:	mov    eax,DWORD PTR [rbp-0x3c]
  40b0a6:	mov    DWORD PTR [rbp-0x4],eax
  40b0a9:	mov    eax,DWORD PTR [rbp-0x4]
  40b0ac:	add    rsp,0x50
  40b0b0:	pop    rbp
  40b0b1:	ret    
  40b0b2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b0bc:	nop    DWORD PTR [rax+0x0]
  40b0c0:	push   rbp
  40b0c1:	mov    rbp,rsp
  40b0c4:	sub    rsp,0x10
  40b0c8:	mov    QWORD PTR [rbp-0x8],rdi
  40b0cc:	mov    QWORD PTR [rbp-0x10],rsi
  40b0d0:	cmp    QWORD PTR [rbp-0x10],0x0
  40b0d5:	je     40b0ef <test_monster_with_size@@Base+0x18f>
  40b0db:	mov    rdi,QWORD PTR [rbp-0x8]
  40b0df:	call   414930 <main@@Base+0x540>
  40b0e4:	mov    eax,eax
  40b0e6:	mov    edi,eax
  40b0e8:	mov    rcx,QWORD PTR [rbp-0x10]
  40b0ec:	mov    QWORD PTR [rcx],rdi
  40b0ef:	mov    rax,QWORD PTR [rbp-0x8]
  40b0f3:	add    rax,0x4
  40b0f7:	add    rsp,0x10
  40b0fb:	pop    rbp
  40b0fc:	ret    
  40b0fd:	nop    DWORD PTR [rax]

000000000040b100 <test_string@@Base>:
  40b100:	push   rbp
  40b101:	mov    rbp,rsp
  40b104:	sub    rsp,0x60
  40b108:	mov    QWORD PTR [rbp-0x10],rdi
  40b10c:	mov    rdi,QWORD PTR [rbp-0x10]
  40b110:	call   4197b0 <flatcc_builder_reset@@Base>
  40b115:	mov    rdi,QWORD PTR [rbp-0x10]
  40b119:	mov    DWORD PTR [rbp-0x2c],eax
  40b11c:	call   40a2c0 <gen_monster@@Base+0x780>
  40b121:	mov    rdi,QWORD PTR [rbp-0x10]
  40b125:	mov    DWORD PTR [rbp-0x30],eax
  40b128:	call   40b360 <test_string@@Base+0x260>
  40b12d:	mov    ecx,0x3
  40b132:	mov    esi,ecx
  40b134:	mov    rdi,QWORD PTR [rbp-0x10]
  40b138:	mov    DWORD PTR [rbp-0x34],eax
  40b13b:	call   40b380 <test_string@@Base+0x280>
  40b140:	mov    QWORD PTR [rbp-0x28],rax
  40b144:	mov    rax,QWORD PTR [rbp-0x28]
  40b148:	mov    BYTE PTR [rax],0x31
  40b14b:	mov    rax,QWORD PTR [rbp-0x28]
  40b14f:	mov    BYTE PTR [rax+0x1],0x32
  40b153:	mov    rax,QWORD PTR [rbp-0x28]
  40b157:	mov    BYTE PTR [rax+0x2],0x33
  40b15b:	mov    rdi,QWORD PTR [rbp-0x10]
  40b15f:	lea    rsi,[rip+0x19153]        # 4242b9 <_IO_stdin_used@@Base+0x12b9>
  40b166:	call   40b3b0 <test_string@@Base+0x2b0>
  40b16b:	mov    rdi,QWORD PTR [rbp-0x10]
  40b16f:	mov    QWORD PTR [rbp-0x40],rax
  40b173:	call   40b3e0 <test_string@@Base+0x2e0>
  40b178:	cmp    rax,0x4
  40b17c:	jne    40b187 <test_string@@Base+0x87>
  40b182:	jmp    40b1a6 <test_string@@Base+0xa6>
  40b187:	lea    rdi,[rip+0x19107]        # 424295 <_IO_stdin_used@@Base+0x1295>
  40b18e:	lea    rsi,[rip+0x18a5a]        # 423bef <_IO_stdin_used@@Base+0xbef>
  40b195:	mov    edx,0x438
  40b19a:	lea    rcx,[rip+0x1911a]        # 4242bb <_IO_stdin_used@@Base+0x12bb>
  40b1a1:	call   404090 <__assert_fail@plt>
  40b1a6:	mov    eax,0x1e
  40b1ab:	mov    edx,eax
  40b1ad:	mov    rdi,QWORD PTR [rbp-0x10]
  40b1b1:	lea    rsi,[rip+0x19127]        # 4242df <_IO_stdin_used@@Base+0x12df>
  40b1b8:	call   40b400 <test_string@@Base+0x300>
  40b1bd:	mov    rdi,QWORD PTR [rbp-0x10]
  40b1c1:	mov    QWORD PTR [rbp-0x48],rax
  40b1c5:	call   40b3e0 <test_string@@Base+0x2e0>
  40b1ca:	cmp    rax,0x8
  40b1ce:	jne    40b1d9 <test_string@@Base+0xd9>
  40b1d4:	jmp    40b1f8 <test_string@@Base+0xf8>
  40b1d9:	lea    rdi,[rip+0x19104]        # 4242e4 <_IO_stdin_used@@Base+0x12e4>
  40b1e0:	lea    rsi,[rip+0x18a08]        # 423bef <_IO_stdin_used@@Base+0xbef>
  40b1e7:	mov    edx,0x43a
  40b1ec:	lea    rcx,[rip+0x190c8]        # 4242bb <_IO_stdin_used@@Base+0x12bb>
  40b1f3:	call   404090 <__assert_fail@plt>
  40b1f8:	mov    eax,0x2
  40b1fd:	mov    edx,eax
  40b1ff:	mov    rdi,QWORD PTR [rbp-0x10]
  40b203:	lea    rsi,[rip+0x19100]        # 42430a <_IO_stdin_used@@Base+0x130a>
  40b20a:	call   40b430 <test_string@@Base+0x330>
  40b20f:	mov    rdi,QWORD PTR [rbp-0x10]
  40b213:	mov    QWORD PTR [rbp-0x50],rax
  40b217:	call   40b3e0 <test_string@@Base+0x2e0>
  40b21c:	cmp    rax,0xa
  40b220:	jne    40b22b <test_string@@Base+0x12b>
  40b226:	jmp    40b24a <test_string@@Base+0x14a>
  40b22b:	lea    rdi,[rip+0x190db]        # 42430d <_IO_stdin_used@@Base+0x130d>
  40b232:	lea    rsi,[rip+0x189b6]        # 423bef <_IO_stdin_used@@Base+0xbef>
  40b239:	mov    edx,0x43c
  40b23e:	lea    rcx,[rip+0x19076]        # 4242bb <_IO_stdin_used@@Base+0x12bb>
  40b245:	call   404090 <__assert_fail@plt>
  40b24a:	mov    eax,0x3
  40b24f:	mov    esi,eax
  40b251:	mov    rdi,QWORD PTR [rbp-0x10]
  40b255:	call   40b460 <test_string@@Base+0x360>
  40b25a:	mov    rdi,QWORD PTR [rbp-0x10]
  40b25e:	mov    DWORD PTR [rbp-0x54],eax
  40b261:	call   40b3e0 <test_string@@Base+0x2e0>
  40b266:	cmp    rax,0x7
  40b26a:	jne    40b275 <test_string@@Base+0x175>
  40b270:	jmp    40b294 <test_string@@Base+0x194>
  40b275:	lea    rdi,[rip+0x190b8]        # 424334 <_IO_stdin_used@@Base+0x1334>
  40b27c:	lea    rsi,[rip+0x1896c]        # 423bef <_IO_stdin_used@@Base+0xbef>
  40b283:	mov    edx,0x43e
  40b288:	lea    rcx,[rip+0x1902c]        # 4242bb <_IO_stdin_used@@Base+0x12bb>
  40b28f:	call   404090 <__assert_fail@plt>
  40b294:	mov    rdi,QWORD PTR [rbp-0x10]
  40b298:	call   40b490 <test_string@@Base+0x390>
  40b29d:	mov    QWORD PTR [rbp-0x28],rax
  40b2a1:	mov    rax,QWORD PTR [rbp-0x28]
  40b2a5:	mov    BYTE PTR [rax+0x4],0x2e
  40b2a9:	mov    rdi,QWORD PTR [rbp-0x10]
  40b2ad:	call   40b4b0 <test_string@@Base+0x3b0>
  40b2b2:	mov    rdi,QWORD PTR [rbp-0x10]
  40b2b6:	mov    DWORD PTR [rbp-0x58],eax
  40b2b9:	call   40ae60 <gen_monster@@Base+0x1320>
  40b2be:	xor    ecx,ecx
  40b2c0:	mov    esi,ecx
  40b2c2:	mov    rdi,QWORD PTR [rbp-0x10]
  40b2c6:	mov    DWORD PTR [rbp-0x5c],eax
  40b2c9:	call   41e9b0 <flatcc_builder_get_direct_buffer@@Base>
  40b2ce:	mov    QWORD PTR [rbp-0x20],rax
  40b2d2:	cmp    QWORD PTR [rbp-0x20],0x0
  40b2d7:	je     40b2e2 <test_string@@Base+0x1e2>
  40b2dd:	jmp    40b301 <test_string@@Base+0x201>
  40b2e2:	lea    rdi,[rip+0x1987e]        # 424b67 <_IO_stdin_used@@Base+0x1b67>
  40b2e9:	lea    rsi,[rip+0x188ff]        # 423bef <_IO_stdin_used@@Base+0xbef>
  40b2f0:	mov    edx,0x445
  40b2f5:	lea    rcx,[rip+0x18fbf]        # 4242bb <_IO_stdin_used@@Base+0x12bb>
  40b2fc:	call   404090 <__assert_fail@plt>
  40b301:	mov    rdi,QWORD PTR [rbp-0x20]
  40b305:	call   4044a0 <verify_empty_monster@@Base+0x280>
  40b30a:	mov    QWORD PTR [rbp-0x18],rax
  40b30e:	mov    rdi,QWORD PTR [rbp-0x18]
  40b312:	call   408050 <verify_monster@@Base+0x1440>
  40b317:	lea    rsi,[rip+0x1903c]        # 42435a <_IO_stdin_used@@Base+0x135a>
  40b31e:	mov    rdi,rax
  40b321:	call   4040d0 <strcmp@plt>
  40b326:	cmp    eax,0x0
  40b329:	je     40b34c <test_string@@Base+0x24c>
  40b32f:	lea    rdi,[rip+0x1902c]        # 424362 <_IO_stdin_used@@Base+0x1362>
  40b336:	mov    al,0x0
  40b338:	call   404070 <printf@plt>
  40b33d:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40b344:	mov    DWORD PTR [rbp-0x60],eax
  40b347:	jmp    40b353 <test_string@@Base+0x253>
  40b34c:	mov    DWORD PTR [rbp-0x4],0x0
  40b353:	mov    eax,DWORD PTR [rbp-0x4]
  40b356:	add    rsp,0x60
  40b35a:	pop    rbp
  40b35b:	ret    
  40b35c:	nop    DWORD PTR [rax+0x0]
  40b360:	push   rbp
  40b361:	mov    rbp,rsp
  40b364:	sub    rsp,0x10
  40b368:	mov    QWORD PTR [rbp-0x8],rdi
  40b36c:	mov    rdi,QWORD PTR [rbp-0x8]
  40b370:	call   41bc30 <flatcc_builder_start_string@@Base>
  40b375:	add    rsp,0x10
  40b379:	pop    rbp
  40b37a:	ret    
  40b37b:	nop    DWORD PTR [rax+rax*1+0x0]
  40b380:	push   rbp
  40b381:	mov    rbp,rsp
  40b384:	sub    rsp,0x10
  40b388:	mov    QWORD PTR [rbp-0x8],rdi
  40b38c:	mov    QWORD PTR [rbp-0x10],rsi
  40b390:	mov    rdi,QWORD PTR [rbp-0x8]
  40b394:	mov    rsi,QWORD PTR [rbp-0x10]
  40b398:	call   41b450 <flatcc_builder_extend_string@@Base>
  40b39d:	add    rsp,0x10
  40b3a1:	pop    rbp
  40b3a2:	ret    
  40b3a3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b3ad:	nop    DWORD PTR [rax]
  40b3b0:	push   rbp
  40b3b1:	mov    rbp,rsp
  40b3b4:	sub    rsp,0x10
  40b3b8:	mov    QWORD PTR [rbp-0x8],rdi
  40b3bc:	mov    QWORD PTR [rbp-0x10],rsi
  40b3c0:	mov    rdi,QWORD PTR [rbp-0x8]
  40b3c4:	mov    rsi,QWORD PTR [rbp-0x10]
  40b3c8:	call   41b590 <flatcc_builder_append_string_str@@Base>
  40b3cd:	add    rsp,0x10
  40b3d1:	pop    rbp
  40b3d2:	ret    
  40b3d3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b3dd:	nop    DWORD PTR [rax]
  40b3e0:	push   rbp
  40b3e1:	mov    rbp,rsp
  40b3e4:	sub    rsp,0x10
  40b3e8:	mov    QWORD PTR [rbp-0x8],rdi
  40b3ec:	mov    rdi,QWORD PTR [rbp-0x8]
  40b3f0:	call   41e3f0 <flatcc_builder_string_len@@Base>
  40b3f5:	add    rsp,0x10
  40b3f9:	pop    rbp
  40b3fa:	ret    
  40b3fb:	nop    DWORD PTR [rax+rax*1+0x0]
  40b400:	push   rbp
  40b401:	mov    rbp,rsp
  40b404:	sub    rsp,0x20
  40b408:	mov    QWORD PTR [rbp-0x8],rdi
  40b40c:	mov    QWORD PTR [rbp-0x10],rsi
  40b410:	mov    QWORD PTR [rbp-0x18],rdx
  40b414:	mov    rdi,QWORD PTR [rbp-0x8]
  40b418:	mov    rsi,QWORD PTR [rbp-0x10]
  40b41c:	mov    rdx,QWORD PTR [rbp-0x18]
  40b420:	call   41b5e0 <flatcc_builder_append_string_strn@@Base>
  40b425:	add    rsp,0x20
  40b429:	pop    rbp
  40b42a:	ret    
  40b42b:	nop    DWORD PTR [rax+rax*1+0x0]
  40b430:	push   rbp
  40b431:	mov    rbp,rsp
  40b434:	sub    rsp,0x20
  40b438:	mov    QWORD PTR [rbp-0x8],rdi
  40b43c:	mov    QWORD PTR [rbp-0x10],rsi
  40b440:	mov    QWORD PTR [rbp-0x18],rdx
  40b444:	mov    rdi,QWORD PTR [rbp-0x8]
  40b448:	mov    rsi,QWORD PTR [rbp-0x10]
  40b44c:	mov    rdx,QWORD PTR [rbp-0x18]
  40b450:	call   41b4f0 <flatcc_builder_append_string@@Base>
  40b455:	add    rsp,0x20
  40b459:	pop    rbp
  40b45a:	ret    
  40b45b:	nop    DWORD PTR [rax+rax*1+0x0]
  40b460:	push   rbp
  40b461:	mov    rbp,rsp
  40b464:	sub    rsp,0x10
  40b468:	mov    QWORD PTR [rbp-0x8],rdi
  40b46c:	mov    QWORD PTR [rbp-0x10],rsi
  40b470:	mov    rdi,QWORD PTR [rbp-0x8]
  40b474:	mov    rsi,QWORD PTR [rbp-0x10]
  40b478:	call   41b8c0 <flatcc_builder_truncate_string@@Base>
  40b47d:	add    rsp,0x10
  40b481:	pop    rbp
  40b482:	ret    
  40b483:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b48d:	nop    DWORD PTR [rax]
  40b490:	push   rbp
  40b491:	mov    rbp,rsp
  40b494:	sub    rsp,0x10
  40b498:	mov    QWORD PTR [rbp-0x8],rdi
  40b49c:	mov    rdi,QWORD PTR [rbp-0x8]
  40b4a0:	call   41e3d0 <flatcc_builder_string_edit@@Base>
  40b4a5:	add    rsp,0x10
  40b4a9:	pop    rbp
  40b4aa:	ret    
  40b4ab:	nop    DWORD PTR [rax+rax*1+0x0]
  40b4b0:	push   rbp
  40b4b1:	mov    rbp,rsp
  40b4b4:	sub    rsp,0x10
  40b4b8:	mov    QWORD PTR [rbp-0x8],rdi
  40b4bc:	mov    rdi,QWORD PTR [rbp-0x8]
  40b4c0:	mov    rax,QWORD PTR [rbp-0x8]
  40b4c4:	mov    QWORD PTR [rbp-0x10],rdi
  40b4c8:	mov    rdi,rax
  40b4cb:	call   41e300 <flatcc_builder_end_string@@Base>
  40b4d0:	mov    rdi,QWORD PTR [rbp-0x10]
  40b4d4:	mov    esi,eax
  40b4d6:	call   40a740 <gen_monster@@Base+0xc00>
  40b4db:	add    rsp,0x10
  40b4df:	pop    rbp
  40b4e0:	ret    
  40b4e1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b4eb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040b4f0 <test_sort_find@@Base>:
  40b4f0:	push   rbp
  40b4f1:	mov    rbp,rsp
  40b4f4:	sub    rsp,0x100
  40b4fb:	mov    QWORD PTR [rbp-0x8],rdi
  40b4ff:	mov    DWORD PTR [rbp-0x3c],0xffffffff
  40b506:	mov    rdi,QWORD PTR [rbp-0x8]
  40b50a:	call   4197b0 <flatcc_builder_reset@@Base>
  40b50f:	mov    rdi,QWORD PTR [rbp-0x8]
  40b513:	mov    DWORD PTR [rbp-0x40],eax
  40b516:	call   40a2c0 <gen_monster@@Base+0x780>
  40b51b:	mov    rdi,QWORD PTR [rbp-0x8]
  40b51f:	lea    rsi,[rip+0x17e31]        # 423357 <_IO_stdin_used@@Base+0x357>
  40b526:	mov    DWORD PTR [rbp-0x44],eax
  40b529:	call   405c40 <test_empty_monster@@Base+0x1b0>
  40b52e:	mov    rdi,QWORD PTR [rbp-0x8]
  40b532:	mov    DWORD PTR [rbp-0x48],eax
  40b535:	call   40a7a0 <gen_monster@@Base+0xc60>
  40b53a:	mov    rdi,QWORD PTR [rbp-0x8]
  40b53e:	mov    DWORD PTR [rbp-0x4c],eax
  40b541:	call   40a7f0 <gen_monster@@Base+0xcb0>
  40b546:	mov    rdi,QWORD PTR [rbp-0x8]
  40b54a:	lea    rsi,[rip+0x18734]        # 423c85 <_IO_stdin_used@@Base+0xc85>
  40b551:	mov    DWORD PTR [rbp-0x50],eax
  40b554:	call   405c40 <test_empty_monster@@Base+0x1b0>
  40b559:	mov    rdi,QWORD PTR [rbp-0x8]
  40b55d:	mov    DWORD PTR [rbp-0x54],eax
  40b560:	call   40a860 <gen_monster@@Base+0xd20>
  40b565:	mov    rdi,QWORD PTR [rbp-0x8]
  40b569:	mov    QWORD PTR [rbp-0x60],rax
  40b56d:	call   40a7f0 <gen_monster@@Base+0xcb0>
  40b572:	mov    rdi,QWORD PTR [rbp-0x8]
  40b576:	lea    rsi,[rip+0x18768]        # 423ce5 <_IO_stdin_used@@Base+0xce5>
  40b57d:	mov    DWORD PTR [rbp-0x64],eax
  40b580:	call   405c40 <test_empty_monster@@Base+0x1b0>
  40b585:	mov    rdi,QWORD PTR [rbp-0x8]
  40b589:	mov    DWORD PTR [rbp-0x68],eax
  40b58c:	call   40a860 <gen_monster@@Base+0xd20>
  40b591:	mov    rdi,QWORD PTR [rbp-0x8]
  40b595:	mov    QWORD PTR [rbp-0x70],rax
  40b599:	call   40a7f0 <gen_monster@@Base+0xcb0>
  40b59e:	mov    rdi,QWORD PTR [rbp-0x8]
  40b5a2:	lea    rsi,[rip+0x18764]        # 423d0d <_IO_stdin_used@@Base+0xd0d>
  40b5a9:	mov    DWORD PTR [rbp-0x74],eax
  40b5ac:	call   405c40 <test_empty_monster@@Base+0x1b0>
  40b5b1:	mov    rdi,QWORD PTR [rbp-0x8]
  40b5b5:	mov    DWORD PTR [rbp-0x78],eax
  40b5b8:	call   40a860 <gen_monster@@Base+0xd20>
  40b5bd:	mov    rdi,QWORD PTR [rbp-0x8]
  40b5c1:	mov    QWORD PTR [rbp-0x80],rax
  40b5c5:	call   40a7f0 <gen_monster@@Base+0xcb0>
  40b5ca:	mov    rdi,QWORD PTR [rbp-0x8]
  40b5ce:	lea    rsi,[rip+0x18da1]        # 424376 <_IO_stdin_used@@Base+0x1376>
  40b5d5:	mov    DWORD PTR [rbp-0x84],eax
  40b5db:	call   405c40 <test_empty_monster@@Base+0x1b0>
  40b5e0:	mov    rdi,QWORD PTR [rbp-0x8]
  40b5e4:	mov    DWORD PTR [rbp-0x88],eax
  40b5ea:	call   40a860 <gen_monster@@Base+0xd20>
  40b5ef:	mov    rdi,QWORD PTR [rbp-0x8]
  40b5f3:	mov    QWORD PTR [rbp-0x90],rax
  40b5fa:	call   40a7f0 <gen_monster@@Base+0xcb0>
  40b5ff:	mov    rdi,QWORD PTR [rbp-0x8]
  40b603:	lea    rsi,[rip+0x18703]        # 423d0d <_IO_stdin_used@@Base+0xd0d>
  40b60a:	mov    DWORD PTR [rbp-0x94],eax
  40b610:	call   405c40 <test_empty_monster@@Base+0x1b0>
  40b615:	mov    rdi,QWORD PTR [rbp-0x8]
  40b619:	mov    DWORD PTR [rbp-0x98],eax
  40b61f:	call   40a860 <gen_monster@@Base+0xd20>
  40b624:	mov    rdi,QWORD PTR [rbp-0x8]
  40b628:	mov    QWORD PTR [rbp-0xa0],rax
  40b62f:	call   40a940 <gen_monster@@Base+0xe00>
  40b634:	mov    rdi,QWORD PTR [rbp-0x8]
  40b638:	mov    DWORD PTR [rbp-0xa4],eax
  40b63e:	call   40ae60 <gen_monster@@Base+0x1320>
  40b643:	mov    rdi,QWORD PTR [rbp-0x8]
  40b647:	lea    rsi,[rbp-0x38]
  40b64b:	mov    DWORD PTR [rbp-0xa8],eax
  40b651:	call   41ec10 <flatcc_builder_finalize_aligned_buffer@@Base>
  40b656:	mov    rsi,QWORD PTR [rip+0x2699b]        # 431ff8 <stderr@GLIBC_2.2.5>
  40b65d:	mov    QWORD PTR [rbp-0x30],rax
  40b661:	mov    rax,QWORD PTR [rbp-0x30]
  40b665:	mov    rdx,QWORD PTR [rbp-0x38]
  40b669:	mov    rcx,QWORD PTR [rsi]
  40b66c:	lea    rdi,[rip+0x18d09]        # 42437c <_IO_stdin_used@@Base+0x137c>
  40b673:	mov    rsi,rax
  40b676:	call   404db0 <test_type_aliases@@Base+0x4b0>
  40b67b:	mov    rdi,QWORD PTR [rbp-0x30]
  40b67f:	call   4044a0 <verify_empty_monster@@Base+0x280>
  40b684:	mov    QWORD PTR [rbp-0x18],rax
  40b688:	mov    rdi,QWORD PTR [rbp-0x18]
  40b68c:	call   408af0 <verify_monster@@Base+0x1ee0>
  40b691:	mov    QWORD PTR [rbp-0x20],rax
  40b695:	cmp    QWORD PTR [rbp-0x20],0x0
  40b69a:	je     40b6a5 <test_sort_find@@Base+0x1b5>
  40b6a0:	jmp    40b6c4 <test_sort_find@@Base+0x1d4>
  40b6a5:	lea    rdi,[rip+0x18ce8]        # 424394 <_IO_stdin_used@@Base+0x1394>
  40b6ac:	lea    rsi,[rip+0x1853c]        # 423bef <_IO_stdin_used@@Base+0xbef>
  40b6b3:	mov    edx,0x47b
  40b6b8:	lea    rcx,[rip+0x18cde]        # 42439d <_IO_stdin_used@@Base+0x139d>
  40b6bf:	call   404090 <__assert_fail@plt>
  40b6c4:	mov    rax,QWORD PTR [rbp-0x20]
  40b6c8:	mov    QWORD PTR [rbp-0x28],rax
  40b6cc:	mov    rdi,QWORD PTR [rbp-0x28]
  40b6d0:	call   40bb20 <test_sort_find@@Base+0x630>
  40b6d5:	mov    rax,QWORD PTR [rip+0x2691c]        # 431ff8 <stderr@GLIBC_2.2.5>
  40b6dc:	mov    rsi,QWORD PTR [rbp-0x30]
  40b6e0:	mov    rdx,QWORD PTR [rbp-0x38]
  40b6e4:	mov    rcx,QWORD PTR [rax]
  40b6e7:	lea    rdi,[rip+0x18c90]        # 42437e <_IO_stdin_used@@Base+0x137e>
  40b6ee:	call   404db0 <test_type_aliases@@Base+0x4b0>
  40b6f3:	mov    rdi,QWORD PTR [rbp-0x20]
  40b6f7:	call   408c20 <verify_monster@@Base+0x2010>
  40b6fc:	cmp    rax,0x5
  40b700:	je     40b71f <test_sort_find@@Base+0x22f>
  40b706:	lea    rdi,[rip+0x18cb7]        # 4243c4 <_IO_stdin_used@@Base+0x13c4>
  40b70d:	mov    al,0x0
  40b70f:	call   404070 <printf@plt>
  40b714:	mov    DWORD PTR [rbp-0xac],eax
  40b71a:	jmp    40bb06 <test_sort_find@@Base+0x616>
  40b71f:	xor    eax,eax
  40b721:	mov    esi,eax
  40b723:	mov    rdi,QWORD PTR [rbp-0x20]
  40b727:	call   408c70 <verify_monster@@Base+0x2060>
  40b72c:	mov    rdi,rax
  40b72f:	call   408050 <verify_monster@@Base+0x1440>
  40b734:	lea    rsi,[rip+0x18c3b]        # 424376 <_IO_stdin_used@@Base+0x1376>
  40b73b:	mov    rdi,rax
  40b73e:	call   4040d0 <strcmp@plt>
  40b743:	cmp    eax,0x0
  40b746:	je     40b765 <test_sort_find@@Base+0x275>
  40b74c:	lea    rdi,[rip+0x18c99]        # 4243ec <_IO_stdin_used@@Base+0x13ec>
  40b753:	mov    al,0x0
  40b755:	call   404070 <printf@plt>
  40b75a:	mov    DWORD PTR [rbp-0xb0],eax
  40b760:	jmp    40bb06 <test_sort_find@@Base+0x616>
  40b765:	mov    eax,0x1
  40b76a:	mov    esi,eax
  40b76c:	mov    rdi,QWORD PTR [rbp-0x20]
  40b770:	call   408c70 <verify_monster@@Base+0x2060>
  40b775:	mov    rdi,rax
  40b778:	call   408050 <verify_monster@@Base+0x1440>
  40b77d:	lea    rsi,[rip+0x18589]        # 423d0d <_IO_stdin_used@@Base+0xd0d>
  40b784:	mov    rdi,rax
  40b787:	call   4040d0 <strcmp@plt>
  40b78c:	cmp    eax,0x0
  40b78f:	je     40b7ae <test_sort_find@@Base+0x2be>
  40b795:	lea    rdi,[rip+0x18c6e]        # 42440a <_IO_stdin_used@@Base+0x140a>
  40b79c:	mov    al,0x0
  40b79e:	call   404070 <printf@plt>
  40b7a3:	mov    DWORD PTR [rbp-0xb4],eax
  40b7a9:	jmp    40bb06 <test_sort_find@@Base+0x616>
  40b7ae:	mov    eax,0x2
  40b7b3:	mov    esi,eax
  40b7b5:	mov    rdi,QWORD PTR [rbp-0x20]
  40b7b9:	call   408c70 <verify_monster@@Base+0x2060>
  40b7be:	mov    rdi,rax
  40b7c1:	call   408050 <verify_monster@@Base+0x1440>
  40b7c6:	lea    rsi,[rip+0x18540]        # 423d0d <_IO_stdin_used@@Base+0xd0d>
  40b7cd:	mov    rdi,rax
  40b7d0:	call   4040d0 <strcmp@plt>
  40b7d5:	cmp    eax,0x0
  40b7d8:	je     40b7f7 <test_sort_find@@Base+0x307>
  40b7de:	lea    rdi,[rip+0x18c43]        # 424428 <_IO_stdin_used@@Base+0x1428>
  40b7e5:	mov    al,0x0
  40b7e7:	call   404070 <printf@plt>
  40b7ec:	mov    DWORD PTR [rbp-0xb8],eax
  40b7f2:	jmp    40bb06 <test_sort_find@@Base+0x616>
  40b7f7:	mov    eax,0x3
  40b7fc:	mov    esi,eax
  40b7fe:	mov    rdi,QWORD PTR [rbp-0x20]
  40b802:	call   408c70 <verify_monster@@Base+0x2060>
  40b807:	mov    rdi,rax
  40b80a:	call   408050 <verify_monster@@Base+0x1440>
  40b80f:	lea    rsi,[rip+0x184cf]        # 423ce5 <_IO_stdin_used@@Base+0xce5>
  40b816:	mov    rdi,rax
  40b819:	call   4040d0 <strcmp@plt>
  40b81e:	cmp    eax,0x0
  40b821:	je     40b840 <test_sort_find@@Base+0x350>
  40b827:	lea    rdi,[rip+0x18c18]        # 424446 <_IO_stdin_used@@Base+0x1446>
  40b82e:	mov    al,0x0
  40b830:	call   404070 <printf@plt>
  40b835:	mov    DWORD PTR [rbp-0xbc],eax
  40b83b:	jmp    40bb06 <test_sort_find@@Base+0x616>
  40b840:	mov    eax,0x4
  40b845:	mov    esi,eax
  40b847:	mov    rdi,QWORD PTR [rbp-0x20]
  40b84b:	call   408c70 <verify_monster@@Base+0x2060>
  40b850:	mov    rdi,rax
  40b853:	call   408050 <verify_monster@@Base+0x1440>
  40b858:	lea    rsi,[rip+0x18426]        # 423c85 <_IO_stdin_used@@Base+0xc85>
  40b85f:	mov    rdi,rax
  40b862:	call   4040d0 <strcmp@plt>
  40b867:	cmp    eax,0x0
  40b86a:	je     40b889 <test_sort_find@@Base+0x399>
  40b870:	lea    rdi,[rip+0x18bed]        # 424464 <_IO_stdin_used@@Base+0x1464>
  40b877:	mov    al,0x0
  40b879:	call   404070 <printf@plt>
  40b87e:	mov    DWORD PTR [rbp-0xc0],eax
  40b884:	jmp    40bb06 <test_sort_find@@Base+0x616>
  40b889:	mov    eax,0x1
  40b88e:	mov    esi,eax
  40b890:	mov    rdi,QWORD PTR [rbp-0x20]
  40b894:	call   408c70 <verify_monster@@Base+0x2060>
  40b899:	mov    ecx,0x2
  40b89e:	mov    esi,ecx
  40b8a0:	mov    rdi,QWORD PTR [rbp-0x20]
  40b8a4:	mov    QWORD PTR [rbp-0xc8],rax
  40b8ab:	call   408c70 <verify_monster@@Base+0x2060>
  40b8b0:	mov    rsi,QWORD PTR [rbp-0xc8]
  40b8b7:	cmp    rsi,rax
  40b8ba:	jne    40b8d9 <test_sort_find@@Base+0x3e9>
  40b8c0:	lea    rdi,[rip+0x18bbb]        # 424482 <_IO_stdin_used@@Base+0x1482>
  40b8c7:	mov    al,0x0
  40b8c9:	call   404070 <printf@plt>
  40b8ce:	mov    DWORD PTR [rbp-0xcc],eax
  40b8d4:	jmp    40bb06 <test_sort_find@@Base+0x616>
  40b8d9:	mov    rdi,QWORD PTR [rbp-0x20]
  40b8dd:	lea    rsi,[rip+0x18401]        # 423ce5 <_IO_stdin_used@@Base+0xce5>
  40b8e4:	call   40bb40 <test_sort_find@@Base+0x650>
  40b8e9:	mov    ecx,0x3
  40b8ee:	mov    esi,ecx
  40b8f0:	cmp    rsi,rax
  40b8f3:	je     40b912 <test_sort_find@@Base+0x422>
  40b8f9:	lea    rdi,[rip+0x18bca]        # 4244ca <_IO_stdin_used@@Base+0x14ca>
  40b900:	mov    al,0x0
  40b902:	call   404070 <printf@plt>
  40b907:	mov    DWORD PTR [rbp-0xd0],eax
  40b90d:	jmp    40bb06 <test_sort_find@@Base+0x616>
  40b912:	mov    rdi,QWORD PTR [rbp-0x20]
  40b916:	lea    rsi,[rip+0x18bd9]        # 4244f6 <_IO_stdin_used@@Base+0x14f6>
  40b91d:	mov    edx,0x5
  40b922:	call   40bb70 <test_sort_find@@Base+0x680>
  40b927:	mov    edx,0x3
  40b92c:	mov    esi,edx
  40b92e:	cmp    rsi,rax
  40b931:	je     40b950 <test_sort_find@@Base+0x460>
  40b937:	lea    rdi,[rip+0x18bbf]        # 4244fd <_IO_stdin_used@@Base+0x14fd>
  40b93e:	mov    al,0x0
  40b940:	call   404070 <printf@plt>
  40b945:	mov    DWORD PTR [rbp-0xd4],eax
  40b94b:	jmp    40bb06 <test_sort_find@@Base+0x616>
  40b950:	mov    rdi,QWORD PTR [rbp-0x20]
  40b954:	lea    rsi,[rip+0x1838a]        # 423ce5 <_IO_stdin_used@@Base+0xce5>
  40b95b:	call   40bba0 <test_sort_find@@Base+0x6b0>
  40b960:	mov    ecx,0x3
  40b965:	mov    esi,ecx
  40b967:	cmp    rsi,rax
  40b96a:	je     40b989 <test_sort_find@@Base+0x499>
  40b970:	lea    rdi,[rip+0x18bb9]        # 424530 <_IO_stdin_used@@Base+0x1530>
  40b977:	mov    al,0x0
  40b979:	call   404070 <printf@plt>
  40b97e:	mov    DWORD PTR [rbp-0xd8],eax
  40b984:	jmp    40bb06 <test_sort_find@@Base+0x616>
  40b989:	mov    rdi,QWORD PTR [rbp-0x20]
  40b98d:	lea    rsi,[rip+0x18bb9]        # 42454d <_IO_stdin_used@@Base+0x154d>
  40b994:	mov    edx,0x5
  40b999:	call   40bcd0 <test_sort_find@@Base+0x7e0>
  40b99e:	mov    edx,0x3
  40b9a3:	mov    esi,edx
  40b9a5:	cmp    rsi,rax
  40b9a8:	je     40b9c7 <test_sort_find@@Base+0x4d7>
  40b9ae:	lea    rdi,[rip+0x18b9f]        # 424554 <_IO_stdin_used@@Base+0x1554>
  40b9b5:	mov    al,0x0
  40b9b7:	call   404070 <printf@plt>
  40b9bc:	mov    DWORD PTR [rbp-0xdc],eax
  40b9c2:	jmp    40bb06 <test_sort_find@@Base+0x616>
  40b9c7:	mov    rax,QWORD PTR [rip+0x266da]        # 4320a8 <__data_start@@Base+0x10>
  40b9ce:	mov    rdi,QWORD PTR [rbp-0x20]
  40b9d2:	lea    rsi,[rip+0x18b9f]        # 424578 <_IO_stdin_used@@Base+0x1578>
  40b9d9:	mov    QWORD PTR [rbp-0xe8],rax
  40b9e0:	call   40bba0 <test_sort_find@@Base+0x6b0>
  40b9e5:	mov    rsi,QWORD PTR [rbp-0xe8]
  40b9ec:	cmp    rsi,rax
  40b9ef:	je     40ba0e <test_sort_find@@Base+0x51e>
  40b9f5:	lea    rdi,[rip+0x18b83]        # 42457f <_IO_stdin_used@@Base+0x157f>
  40b9fc:	mov    al,0x0
  40b9fe:	call   404070 <printf@plt>
  40ba03:	mov    DWORD PTR [rbp-0xec],eax
  40ba09:	jmp    40bb06 <test_sort_find@@Base+0x616>
  40ba0e:	mov    rdi,QWORD PTR [rbp-0x20]
  40ba12:	lea    rsi,[rip+0x1895d]        # 424376 <_IO_stdin_used@@Base+0x1376>
  40ba19:	call   40bba0 <test_sort_find@@Base+0x6b0>
  40ba1e:	xor    ecx,ecx
  40ba20:	mov    esi,ecx
  40ba22:	cmp    rsi,rax
  40ba25:	je     40ba44 <test_sort_find@@Base+0x554>
  40ba2b:	lea    rdi,[rip+0x18b64]        # 424596 <_IO_stdin_used@@Base+0x1596>
  40ba32:	mov    al,0x0
  40ba34:	call   404070 <printf@plt>
  40ba39:	mov    DWORD PTR [rbp-0xf0],eax
  40ba3f:	jmp    40bb06 <test_sort_find@@Base+0x616>
  40ba44:	mov    rdi,QWORD PTR [rbp-0x20]
  40ba48:	lea    rsi,[rip+0x182be]        # 423d0d <_IO_stdin_used@@Base+0xd0d>
  40ba4f:	call   40bba0 <test_sort_find@@Base+0x6b0>
  40ba54:	mov    ecx,0x1
  40ba59:	mov    esi,ecx
  40ba5b:	mov    QWORD PTR [rbp-0x10],rax
  40ba5f:	cmp    rsi,rax
  40ba62:	je     40ba9d <test_sort_find@@Base+0x5ad>
  40ba68:	lea    rdi,[rip+0x18c4e]        # 4246bd <_IO_stdin_used@@Base+0x16bd>
  40ba6f:	mov    al,0x0
  40ba71:	call   404070 <printf@plt>
  40ba76:	mov    rdi,QWORD PTR [rbp-0x10]
  40ba7a:	mov    ecx,edi
  40ba7c:	lea    rdi,[rip+0x18b24]        # 4245a7 <_IO_stdin_used@@Base+0x15a7>
  40ba83:	mov    esi,ecx
  40ba85:	mov    DWORD PTR [rbp-0xf4],eax
  40ba8b:	mov    al,0x0
  40ba8d:	call   404070 <printf@plt>
  40ba92:	mov    DWORD PTR [rbp-0xf8],eax
  40ba98:	jmp    40bb06 <test_sort_find@@Base+0x616>
  40ba9d:	mov    rdi,QWORD PTR [rbp-0x20]
  40baa1:	lea    rsi,[rip+0x181dd]        # 423c85 <_IO_stdin_used@@Base+0xc85>
  40baa8:	call   40bba0 <test_sort_find@@Base+0x6b0>
  40baad:	mov    ecx,0x4
  40bab2:	mov    esi,ecx
  40bab4:	mov    QWORD PTR [rbp-0x10],rax
  40bab8:	cmp    rsi,rax
  40babb:	je     40baf6 <test_sort_find@@Base+0x606>
  40bac1:	lea    rdi,[rip+0x18ae7]        # 4245af <_IO_stdin_used@@Base+0x15af>
  40bac8:	mov    al,0x0
  40baca:	call   404070 <printf@plt>
  40bacf:	mov    rdi,QWORD PTR [rbp-0x10]
  40bad3:	mov    ecx,edi
  40bad5:	lea    rdi,[rip+0x18acb]        # 4245a7 <_IO_stdin_used@@Base+0x15a7>
  40badc:	mov    esi,ecx
  40bade:	mov    DWORD PTR [rbp-0xfc],eax
  40bae4:	mov    al,0x0
  40bae6:	call   404070 <printf@plt>
  40baeb:	mov    DWORD PTR [rbp-0x100],eax
  40baf1:	jmp    40bb06 <test_sort_find@@Base+0x616>
  40baf6:	mov    rdi,QWORD PTR [rbp-0x28]
  40bafa:	call   40bb20 <test_sort_find@@Base+0x630>
  40baff:	mov    DWORD PTR [rbp-0x3c],0x0
  40bb06:	mov    rdi,QWORD PTR [rbp-0x30]
  40bb0a:	call   41eda0 <flatcc_builder_aligned_free@@Base>
  40bb0f:	mov    eax,DWORD PTR [rbp-0x3c]
  40bb12:	add    rsp,0x100
  40bb19:	pop    rbp
  40bb1a:	ret    
  40bb1b:	nop    DWORD PTR [rax+rax*1+0x0]
  40bb20:	push   rbp
  40bb21:	mov    rbp,rsp
  40bb24:	sub    rsp,0x10
  40bb28:	mov    QWORD PTR [rbp-0x8],rdi
  40bb2c:	mov    rdi,QWORD PTR [rbp-0x8]
  40bb30:	call   417370 <main@@Base+0x2f80>
  40bb35:	add    rsp,0x10
  40bb39:	pop    rbp
  40bb3a:	ret    
  40bb3b:	nop    DWORD PTR [rax+rax*1+0x0]
  40bb40:	push   rbp
  40bb41:	mov    rbp,rsp
  40bb44:	sub    rsp,0x10
  40bb48:	mov    QWORD PTR [rbp-0x8],rdi
  40bb4c:	mov    QWORD PTR [rbp-0x10],rsi
  40bb50:	mov    rdi,QWORD PTR [rbp-0x8]
  40bb54:	mov    rsi,QWORD PTR [rbp-0x10]
  40bb58:	call   40bba0 <test_sort_find@@Base+0x6b0>
  40bb5d:	add    rsp,0x10
  40bb61:	pop    rbp
  40bb62:	ret    
  40bb63:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bb6d:	nop    DWORD PTR [rax]
  40bb70:	push   rbp
  40bb71:	mov    rbp,rsp
  40bb74:	sub    rsp,0x20
  40bb78:	mov    QWORD PTR [rbp-0x8],rdi
  40bb7c:	mov    QWORD PTR [rbp-0x10],rsi
  40bb80:	mov    DWORD PTR [rbp-0x14],edx
  40bb83:	mov    rdi,QWORD PTR [rbp-0x8]
  40bb87:	mov    rsi,QWORD PTR [rbp-0x10]
  40bb8b:	mov    edx,DWORD PTR [rbp-0x14]
  40bb8e:	call   40bcd0 <test_sort_find@@Base+0x7e0>
  40bb93:	add    rsp,0x20
  40bb97:	pop    rbp
  40bb98:	ret    
  40bb99:	nop    DWORD PTR [rax+0x0]
  40bba0:	push   rbp
  40bba1:	mov    rbp,rsp
  40bba4:	sub    rsp,0x40
  40bba8:	mov    QWORD PTR [rbp-0x10],rdi
  40bbac:	mov    QWORD PTR [rbp-0x18],rsi
  40bbb0:	mov    QWORD PTR [rbp-0x28],0x0
  40bbb8:	mov    rdi,QWORD PTR [rbp-0x10]
  40bbbc:	call   408c20 <verify_monster@@Base+0x2010>
  40bbc1:	mov    QWORD PTR [rbp-0x30],rax
  40bbc5:	cmp    rax,0x0
  40bbc9:	jne    40bbdf <test_sort_find@@Base+0x6ef>
  40bbcf:	mov    rax,QWORD PTR [rip+0x264d2]        # 4320a8 <__data_start@@Base+0x10>
  40bbd6:	mov    QWORD PTR [rbp-0x8],rax
  40bbda:	jmp    40bcbd <test_sort_find@@Base+0x7cd>
  40bbdf:	mov    rax,QWORD PTR [rbp-0x30]
  40bbe3:	add    rax,0xffffffffffffffff
  40bbe7:	mov    QWORD PTR [rbp-0x30],rax
  40bbeb:	mov    rax,QWORD PTR [rbp-0x28]
  40bbef:	cmp    rax,QWORD PTR [rbp-0x30]
  40bbf3:	jae    40bc5f <test_sort_find@@Base+0x76f>
  40bbf9:	mov    rax,QWORD PTR [rbp-0x28]
  40bbfd:	mov    rcx,QWORD PTR [rbp-0x30]
  40bc01:	sub    rcx,QWORD PTR [rbp-0x28]
  40bc05:	shr    rcx,0x1
  40bc09:	add    rax,rcx
  40bc0c:	mov    QWORD PTR [rbp-0x38],rax
  40bc10:	mov    rdi,QWORD PTR [rbp-0x10]
  40bc14:	mov    rsi,QWORD PTR [rbp-0x38]
  40bc18:	call   408c70 <verify_monster@@Base+0x2060>
  40bc1d:	mov    rdi,rax
  40bc20:	call   408050 <verify_monster@@Base+0x1440>
  40bc25:	xor    edx,edx
  40bc27:	mov    QWORD PTR [rbp-0x20],rax
  40bc2b:	mov    rdi,QWORD PTR [rbp-0x20]
  40bc2f:	mov    rsi,QWORD PTR [rbp-0x18]
  40bc33:	call   417750 <main@@Base+0x3360>
  40bc38:	cmp    eax,0x0
  40bc3b:	jge    40bc52 <test_sort_find@@Base+0x762>
  40bc41:	mov    rax,QWORD PTR [rbp-0x38]
  40bc45:	add    rax,0x1
  40bc49:	mov    QWORD PTR [rbp-0x28],rax
  40bc4d:	jmp    40bc5a <test_sort_find@@Base+0x76a>
  40bc52:	mov    rax,QWORD PTR [rbp-0x38]
  40bc56:	mov    QWORD PTR [rbp-0x30],rax
  40bc5a:	jmp    40bbeb <test_sort_find@@Base+0x6fb>
  40bc5f:	mov    rax,QWORD PTR [rbp-0x28]
  40bc63:	cmp    rax,QWORD PTR [rbp-0x30]
  40bc67:	jne    40bcb2 <test_sort_find@@Base+0x7c2>
  40bc6d:	mov    rdi,QWORD PTR [rbp-0x10]
  40bc71:	mov    rsi,QWORD PTR [rbp-0x28]
  40bc75:	call   408c70 <verify_monster@@Base+0x2060>
  40bc7a:	mov    rdi,rax
  40bc7d:	call   408050 <verify_monster@@Base+0x1440>
  40bc82:	xor    ecx,ecx
  40bc84:	mov    edx,ecx
  40bc86:	mov    QWORD PTR [rbp-0x20],rax
  40bc8a:	mov    rdi,QWORD PTR [rbp-0x20]
  40bc8e:	mov    rsi,QWORD PTR [rbp-0x18]
  40bc92:	call   417750 <main@@Base+0x3360>
  40bc97:	cmp    eax,0x0
  40bc9a:	jne    40bcad <test_sort_find@@Base+0x7bd>
  40bca0:	mov    rax,QWORD PTR [rbp-0x28]
  40bca4:	mov    QWORD PTR [rbp-0x8],rax
  40bca8:	jmp    40bcbd <test_sort_find@@Base+0x7cd>
  40bcad:	jmp    40bcb2 <test_sort_find@@Base+0x7c2>
  40bcb2:	mov    rax,QWORD PTR [rip+0x263ef]        # 4320a8 <__data_start@@Base+0x10>
  40bcb9:	mov    QWORD PTR [rbp-0x8],rax
  40bcbd:	mov    rax,QWORD PTR [rbp-0x8]
  40bcc1:	add    rsp,0x40
  40bcc5:	pop    rbp
  40bcc6:	ret    
  40bcc7:	nop    WORD PTR [rax+rax*1+0x0]
  40bcd0:	push   rbp
  40bcd1:	mov    rbp,rsp
  40bcd4:	sub    rsp,0x40
  40bcd8:	mov    QWORD PTR [rbp-0x10],rdi
  40bcdc:	mov    QWORD PTR [rbp-0x18],rsi
  40bce0:	mov    DWORD PTR [rbp-0x1c],edx
  40bce3:	mov    QWORD PTR [rbp-0x30],0x0
  40bceb:	mov    rdi,QWORD PTR [rbp-0x10]
  40bcef:	call   408c20 <verify_monster@@Base+0x2010>
  40bcf4:	mov    QWORD PTR [rbp-0x38],rax
  40bcf8:	cmp    rax,0x0
  40bcfc:	jne    40bd12 <test_sort_find@@Base+0x822>
  40bd02:	mov    rax,QWORD PTR [rip+0x2639f]        # 4320a8 <__data_start@@Base+0x10>
  40bd09:	mov    QWORD PTR [rbp-0x8],rax
  40bd0d:	jmp    40bdf2 <test_sort_find@@Base+0x902>
  40bd12:	mov    rax,QWORD PTR [rbp-0x38]
  40bd16:	add    rax,0xffffffffffffffff
  40bd1a:	mov    QWORD PTR [rbp-0x38],rax
  40bd1e:	mov    rax,QWORD PTR [rbp-0x30]
  40bd22:	cmp    rax,QWORD PTR [rbp-0x38]
  40bd26:	jae    40bd94 <test_sort_find@@Base+0x8a4>
  40bd2c:	mov    rax,QWORD PTR [rbp-0x30]
  40bd30:	mov    rcx,QWORD PTR [rbp-0x38]
  40bd34:	sub    rcx,QWORD PTR [rbp-0x30]
  40bd38:	shr    rcx,0x1
  40bd3c:	add    rax,rcx
  40bd3f:	mov    QWORD PTR [rbp-0x40],rax
  40bd43:	mov    rdi,QWORD PTR [rbp-0x10]
  40bd47:	mov    rsi,QWORD PTR [rbp-0x40]
  40bd4b:	call   408c70 <verify_monster@@Base+0x2060>
  40bd50:	mov    rdi,rax
  40bd53:	call   408050 <verify_monster@@Base+0x1440>
  40bd58:	mov    QWORD PTR [rbp-0x28],rax
  40bd5c:	mov    rdi,QWORD PTR [rbp-0x28]
  40bd60:	mov    rsi,QWORD PTR [rbp-0x18]
  40bd64:	movsxd rdx,DWORD PTR [rbp-0x1c]
  40bd68:	call   417680 <main@@Base+0x3290>
  40bd6d:	cmp    eax,0x0
  40bd70:	jge    40bd87 <test_sort_find@@Base+0x897>
  40bd76:	mov    rax,QWORD PTR [rbp-0x40]
  40bd7a:	add    rax,0x1
  40bd7e:	mov    QWORD PTR [rbp-0x30],rax
  40bd82:	jmp    40bd8f <test_sort_find@@Base+0x89f>
  40bd87:	mov    rax,QWORD PTR [rbp-0x40]
  40bd8b:	mov    QWORD PTR [rbp-0x38],rax
  40bd8f:	jmp    40bd1e <test_sort_find@@Base+0x82e>
  40bd94:	mov    rax,QWORD PTR [rbp-0x30]
  40bd98:	cmp    rax,QWORD PTR [rbp-0x38]
  40bd9c:	jne    40bde7 <test_sort_find@@Base+0x8f7>
  40bda2:	mov    rdi,QWORD PTR [rbp-0x10]
  40bda6:	mov    rsi,QWORD PTR [rbp-0x30]
  40bdaa:	call   408c70 <verify_monster@@Base+0x2060>
  40bdaf:	mov    rdi,rax
  40bdb2:	call   408050 <verify_monster@@Base+0x1440>
  40bdb7:	mov    QWORD PTR [rbp-0x28],rax
  40bdbb:	mov    rdi,QWORD PTR [rbp-0x28]
  40bdbf:	mov    rsi,QWORD PTR [rbp-0x18]
  40bdc3:	movsxd rdx,DWORD PTR [rbp-0x1c]
  40bdc7:	call   417680 <main@@Base+0x3290>
  40bdcc:	cmp    eax,0x0
  40bdcf:	jne    40bde2 <test_sort_find@@Base+0x8f2>
  40bdd5:	mov    rax,QWORD PTR [rbp-0x30]
  40bdd9:	mov    QWORD PTR [rbp-0x8],rax
  40bddd:	jmp    40bdf2 <test_sort_find@@Base+0x902>
  40bde2:	jmp    40bde7 <test_sort_find@@Base+0x8f7>
  40bde7:	mov    rax,QWORD PTR [rip+0x262ba]        # 4320a8 <__data_start@@Base+0x10>
  40bdee:	mov    QWORD PTR [rbp-0x8],rax
  40bdf2:	mov    rax,QWORD PTR [rbp-0x8]
  40bdf6:	add    rsp,0x40
  40bdfa:	pop    rbp
  40bdfb:	ret    
  40bdfc:	nop    DWORD PTR [rax+0x0]

000000000040be00 <test_scan@@Base>:
  40be00:	push   rbp
  40be01:	mov    rbp,rsp
  40be04:	sub    rsp,0x2c0
  40be0b:	mov    QWORD PTR [rbp-0x8],rdi
  40be0f:	mov    eax,DWORD PTR [rip+0x172fc]        # 423111 <_IO_stdin_used@@Base+0x111>
  40be15:	mov    DWORD PTR [rbp-0x47],eax
  40be18:	mov    cx,WORD PTR [rip+0x172f6]        # 423115 <_IO_stdin_used@@Base+0x115>
  40be1f:	mov    WORD PTR [rbp-0x43],cx
  40be23:	mov    dl,BYTE PTR [rip+0x172ee]        # 423117 <_IO_stdin_used@@Base+0x117>
  40be29:	mov    BYTE PTR [rbp-0x41],dl
  40be2c:	mov    DWORD PTR [rbp-0x4c],0xffffffff
  40be33:	mov    rdi,QWORD PTR [rbp-0x8]
  40be37:	call   4197b0 <flatcc_builder_reset@@Base>
  40be3c:	mov    rdi,QWORD PTR [rbp-0x8]
  40be40:	mov    DWORD PTR [rbp-0x50],eax
  40be43:	call   40a2c0 <gen_monster@@Base+0x780>
  40be48:	mov    rdi,QWORD PTR [rbp-0x8]
  40be4c:	lea    rsi,[rip+0x17504]        # 423357 <_IO_stdin_used@@Base+0x357>
  40be53:	mov    DWORD PTR [rbp-0x54],eax
  40be56:	call   405c40 <test_empty_monster@@Base+0x1b0>
  40be5b:	mov    r8d,0x7
  40be61:	mov    edx,r8d
  40be64:	lea    rsi,[rbp-0x47]
  40be68:	mov    rdi,QWORD PTR [rbp-0x8]
  40be6c:	mov    DWORD PTR [rbp-0x58],eax
  40be6f:	call   40a450 <gen_monster@@Base+0x910>
  40be74:	mov    rdi,QWORD PTR [rbp-0x8]
  40be78:	mov    DWORD PTR [rbp-0x5c],eax
  40be7b:	call   40cf40 <test_scan@@Base+0x1140>
  40be80:	mov    rdi,QWORD PTR [rbp-0x8]
  40be84:	mov    DWORD PTR [rbp-0x60],eax
  40be87:	call   40cf60 <test_scan@@Base+0x1160>
  40be8c:	mov    rdi,QWORD PTR [rbp-0x8]
  40be90:	mov    DWORD PTR [rbp-0x64],eax
  40be93:	call   40a7a0 <gen_monster@@Base+0xc60>
  40be98:	mov    rdi,QWORD PTR [rbp-0x8]
  40be9c:	mov    DWORD PTR [rbp-0x68],eax
  40be9f:	call   40a7f0 <gen_monster@@Base+0xcb0>
  40bea4:	mov    rdi,QWORD PTR [rbp-0x8]
  40bea8:	lea    rsi,[rip+0x17dd6]        # 423c85 <_IO_stdin_used@@Base+0xc85>
  40beaf:	mov    DWORD PTR [rbp-0x6c],eax
  40beb2:	call   405c40 <test_empty_monster@@Base+0x1b0>
  40beb7:	mov    rdi,QWORD PTR [rbp-0x8]
  40bebb:	mov    DWORD PTR [rbp-0x70],eax
  40bebe:	call   40a860 <gen_monster@@Base+0xd20>
  40bec3:	mov    rdi,QWORD PTR [rbp-0x8]
  40bec7:	mov    QWORD PTR [rbp-0x78],rax
  40becb:	call   40a7f0 <gen_monster@@Base+0xcb0>
  40bed0:	mov    rdi,QWORD PTR [rbp-0x8]
  40bed4:	lea    rsi,[rip+0x17e0a]        # 423ce5 <_IO_stdin_used@@Base+0xce5>
  40bedb:	mov    DWORD PTR [rbp-0x7c],eax
  40bede:	call   405c40 <test_empty_monster@@Base+0x1b0>
  40bee3:	mov    rdi,QWORD PTR [rbp-0x8]
  40bee7:	mov    DWORD PTR [rbp-0x80],eax
  40beea:	call   40a860 <gen_monster@@Base+0xd20>
  40beef:	mov    rdi,QWORD PTR [rbp-0x8]
  40bef3:	mov    QWORD PTR [rbp-0x88],rax
  40befa:	call   40a7f0 <gen_monster@@Base+0xcb0>
  40beff:	mov    rdi,QWORD PTR [rbp-0x8]
  40bf03:	lea    rsi,[rip+0x17e03]        # 423d0d <_IO_stdin_used@@Base+0xd0d>
  40bf0a:	mov    DWORD PTR [rbp-0x8c],eax
  40bf10:	call   405c40 <test_empty_monster@@Base+0x1b0>
  40bf15:	mov    rdi,QWORD PTR [rbp-0x8]
  40bf19:	mov    DWORD PTR [rbp-0x90],eax
  40bf1f:	call   40a860 <gen_monster@@Base+0xd20>
  40bf24:	mov    rdi,QWORD PTR [rbp-0x8]
  40bf28:	mov    QWORD PTR [rbp-0x98],rax
  40bf2f:	call   40a7f0 <gen_monster@@Base+0xcb0>
  40bf34:	mov    rdi,QWORD PTR [rbp-0x8]
  40bf38:	lea    rsi,[rip+0x18437]        # 424376 <_IO_stdin_used@@Base+0x1376>
  40bf3f:	mov    DWORD PTR [rbp-0x9c],eax
  40bf45:	call   405c40 <test_empty_monster@@Base+0x1b0>
  40bf4a:	mov    rdi,QWORD PTR [rbp-0x8]
  40bf4e:	mov    DWORD PTR [rbp-0xa0],eax
  40bf54:	call   40a860 <gen_monster@@Base+0xd20>
  40bf59:	mov    rdi,QWORD PTR [rbp-0x8]
  40bf5d:	mov    QWORD PTR [rbp-0xa8],rax
  40bf64:	call   40a7f0 <gen_monster@@Base+0xcb0>
  40bf69:	mov    rdi,QWORD PTR [rbp-0x8]
  40bf6d:	lea    rsi,[rip+0x17d99]        # 423d0d <_IO_stdin_used@@Base+0xd0d>
  40bf74:	mov    DWORD PTR [rbp-0xac],eax
  40bf7a:	call   405c40 <test_empty_monster@@Base+0x1b0>
  40bf7f:	mov    rdi,QWORD PTR [rbp-0x8]
  40bf83:	mov    DWORD PTR [rbp-0xb0],eax
  40bf89:	call   40a860 <gen_monster@@Base+0xd20>
  40bf8e:	mov    rdi,QWORD PTR [rbp-0x8]
  40bf92:	mov    QWORD PTR [rbp-0xb8],rax
  40bf99:	call   40a940 <gen_monster@@Base+0xe00>
  40bf9e:	mov    rdi,QWORD PTR [rbp-0x8]
  40bfa2:	mov    DWORD PTR [rbp-0xbc],eax
  40bfa8:	call   40ae60 <gen_monster@@Base+0x1320>
  40bfad:	mov    rdi,QWORD PTR [rbp-0x8]
  40bfb1:	lea    rsi,[rbp-0x40]
  40bfb5:	mov    DWORD PTR [rbp-0xc0],eax
  40bfbb:	call   41ec10 <flatcc_builder_finalize_aligned_buffer@@Base>
  40bfc0:	mov    QWORD PTR [rbp-0x38],rax
  40bfc4:	mov    rdi,QWORD PTR [rbp-0x38]
  40bfc8:	call   4044a0 <verify_empty_monster@@Base+0x280>
  40bfcd:	mov    QWORD PTR [rbp-0x18],rax
  40bfd1:	mov    rdi,QWORD PTR [rbp-0x18]
  40bfd5:	call   408af0 <verify_monster@@Base+0x1ee0>
  40bfda:	mov    QWORD PTR [rbp-0x20],rax
  40bfde:	cmp    QWORD PTR [rbp-0x20],0x0
  40bfe3:	je     40bfee <test_scan@@Base+0x1ee>
  40bfe9:	jmp    40c00d <test_scan@@Base+0x20d>
  40bfee:	lea    rdi,[rip+0x1839f]        # 424394 <_IO_stdin_used@@Base+0x1394>
  40bff5:	lea    rsi,[rip+0x17bf3]        # 423bef <_IO_stdin_used@@Base+0xbef>
  40bffc:	mov    edx,0x519
  40c001:	lea    rcx,[rip+0x185ba]        # 4245c2 <_IO_stdin_used@@Base+0x15c2>
  40c008:	call   404090 <__assert_fail@plt>
  40c00d:	mov    rdi,QWORD PTR [rbp-0x18]
  40c011:	call   4084a0 <verify_monster@@Base+0x1890>
  40c016:	mov    QWORD PTR [rbp-0x28],rax
  40c01a:	cmp    QWORD PTR [rbp-0x28],0x0
  40c01f:	je     40c02a <test_scan@@Base+0x22a>
  40c025:	jmp    40c049 <test_scan@@Base+0x249>
  40c02a:	lea    rdi,[rip+0x185b3]        # 4245e4 <_IO_stdin_used@@Base+0x15e4>
  40c031:	lea    rsi,[rip+0x17bb7]        # 423bef <_IO_stdin_used@@Base+0xbef>
  40c038:	mov    edx,0x51b
  40c03d:	lea    rcx,[rip+0x1857e]        # 4245c2 <_IO_stdin_used@@Base+0x15c2>
  40c044:	call   404090 <__assert_fail@plt>
  40c049:	mov    rdi,QWORD PTR [rbp-0x18]
  40c04d:	call   408d10 <verify_monster@@Base+0x2100>
  40c052:	mov    QWORD PTR [rbp-0x30],rax
  40c056:	cmp    QWORD PTR [rbp-0x30],0x0
  40c05b:	je     40c066 <test_scan@@Base+0x266>
  40c061:	jmp    40c085 <test_scan@@Base+0x285>
  40c066:	lea    rdi,[rip+0x1857b]        # 4245e8 <_IO_stdin_used@@Base+0x15e8>
  40c06d:	lea    rsi,[rip+0x17b7b]        # 423bef <_IO_stdin_used@@Base+0xbef>
  40c074:	mov    edx,0x51d
  40c079:	lea    rcx,[rip+0x18542]        # 4245c2 <_IO_stdin_used@@Base+0x15c2>
  40c080:	call   404090 <__assert_fail@plt>
  40c085:	mov    rdi,QWORD PTR [rbp-0x20]
  40c089:	lea    rsi,[rip+0x17c55]        # 423ce5 <_IO_stdin_used@@Base+0xce5>
  40c090:	call   40cfa0 <test_scan@@Base+0x11a0>
  40c095:	mov    ecx,0x1
  40c09a:	mov    esi,ecx
  40c09c:	cmp    rsi,rax
  40c09f:	je     40c0be <test_scan@@Base+0x2be>
  40c0a5:	lea    rdi,[rip+0x18545]        # 4245f1 <_IO_stdin_used@@Base+0x15f1>
  40c0ac:	mov    al,0x0
  40c0ae:	call   404070 <printf@plt>
  40c0b3:	mov    DWORD PTR [rbp-0xc4],eax
  40c0b9:	jmp    40cf1d <test_scan@@Base+0x111d>
  40c0be:	mov    rdi,QWORD PTR [rbp-0x20]
  40c0c2:	lea    rsi,[rip+0x17c1c]        # 423ce5 <_IO_stdin_used@@Base+0xce5>
  40c0c9:	call   40cfd0 <test_scan@@Base+0x11d0>
  40c0ce:	mov    ecx,0x1
  40c0d3:	mov    esi,ecx
  40c0d5:	cmp    rsi,rax
  40c0d8:	je     40c0f7 <test_scan@@Base+0x2f7>
  40c0de:	lea    rdi,[rip+0x1850b]        # 4245f0 <_IO_stdin_used@@Base+0x15f0>
  40c0e5:	mov    al,0x0
  40c0e7:	call   404070 <printf@plt>
  40c0ec:	mov    DWORD PTR [rbp-0xc8],eax
  40c0f2:	jmp    40cf1d <test_scan@@Base+0x111d>
  40c0f7:	mov    rdi,QWORD PTR [rbp-0x20]
  40c0fb:	lea    rsi,[rip+0x1844b]        # 42454d <_IO_stdin_used@@Base+0x154d>
  40c102:	mov    edx,0x5
  40c107:	call   40d000 <test_scan@@Base+0x1200>
  40c10c:	mov    edx,0x1
  40c111:	mov    esi,edx
  40c113:	cmp    rsi,rax
  40c116:	je     40c135 <test_scan@@Base+0x335>
  40c11c:	lea    rdi,[rip+0x184ee]        # 424611 <_IO_stdin_used@@Base+0x1611>
  40c123:	mov    al,0x0
  40c125:	call   404070 <printf@plt>
  40c12a:	mov    DWORD PTR [rbp-0xcc],eax
  40c130:	jmp    40cf1d <test_scan@@Base+0x111d>
  40c135:	mov    rdi,QWORD PTR [rbp-0x20]
  40c139:	lea    rsi,[rip+0x1840d]        # 42454d <_IO_stdin_used@@Base+0x154d>
  40c140:	mov    edx,0x5
  40c145:	call   40d030 <test_scan@@Base+0x1230>
  40c14a:	mov    edx,0x1
  40c14f:	mov    esi,edx
  40c151:	cmp    rsi,rax
  40c154:	je     40c173 <test_scan@@Base+0x373>
  40c15a:	lea    rdi,[rip+0x184b0]        # 424611 <_IO_stdin_used@@Base+0x1611>
  40c161:	mov    al,0x0
  40c163:	call   404070 <printf@plt>
  40c168:	mov    DWORD PTR [rbp-0xd0],eax
  40c16e:	jmp    40cf1d <test_scan@@Base+0x111d>
  40c173:	mov    eax,0x2
  40c178:	mov    esi,eax
  40c17a:	mov    rcx,QWORD PTR [rip+0x25f27]        # 4320a8 <__data_start@@Base+0x10>
  40c181:	mov    rdi,QWORD PTR [rbp-0x20]
  40c185:	mov    rdx,QWORD PTR [rip+0x25f24]        # 4320b0 <__data_start@@Base+0x18>
  40c18c:	lea    r8,[rip+0x17b52]        # 423ce5 <_IO_stdin_used@@Base+0xce5>
  40c193:	mov    QWORD PTR [rbp-0xd8],rcx
  40c19a:	mov    rcx,r8
  40c19d:	call   40d060 <test_scan@@Base+0x1260>
  40c1a2:	mov    rcx,QWORD PTR [rbp-0xd8]
  40c1a9:	cmp    rcx,rax
  40c1ac:	je     40c1cb <test_scan@@Base+0x3cb>
  40c1b2:	lea    rdi,[rip+0x1847f]        # 424638 <_IO_stdin_used@@Base+0x1638>
  40c1b9:	mov    al,0x0
  40c1bb:	call   404070 <printf@plt>
  40c1c0:	mov    DWORD PTR [rbp-0xdc],eax
  40c1c6:	jmp    40cf1d <test_scan@@Base+0x111d>
  40c1cb:	mov    rax,QWORD PTR [rip+0x25ed6]        # 4320a8 <__data_start@@Base+0x10>
  40c1d2:	mov    rdi,QWORD PTR [rbp-0x20]
  40c1d6:	lea    rsi,[rip+0x1839b]        # 424578 <_IO_stdin_used@@Base+0x1578>
  40c1dd:	mov    QWORD PTR [rbp-0xe8],rax
  40c1e4:	call   40cfa0 <test_scan@@Base+0x11a0>
  40c1e9:	mov    rsi,QWORD PTR [rbp-0xe8]
  40c1f0:	cmp    rsi,rax
  40c1f3:	je     40c212 <test_scan@@Base+0x412>
  40c1f9:	lea    rdi,[rip+0x1837f]        # 42457f <_IO_stdin_used@@Base+0x157f>
  40c200:	mov    al,0x0
  40c202:	call   404070 <printf@plt>
  40c207:	mov    DWORD PTR [rbp-0xec],eax
  40c20d:	jmp    40cf1d <test_scan@@Base+0x111d>
  40c212:	mov    rdi,QWORD PTR [rbp-0x20]
  40c216:	lea    rsi,[rip+0x17a68]        # 423c85 <_IO_stdin_used@@Base+0xc85>
  40c21d:	call   40cfa0 <test_scan@@Base+0x11a0>
  40c222:	xor    ecx,ecx
  40c224:	mov    esi,ecx
  40c226:	cmp    rsi,rax
  40c229:	je     40c248 <test_scan@@Base+0x448>
  40c22f:	lea    rdi,[rip+0x18379]        # 4245af <_IO_stdin_used@@Base+0x15af>
  40c236:	mov    al,0x0
  40c238:	call   404070 <printf@plt>
  40c23d:	mov    DWORD PTR [rbp-0xf0],eax
  40c243:	jmp    40cf1d <test_scan@@Base+0x111d>
  40c248:	mov    rdi,QWORD PTR [rbp-0x20]
  40c24c:	lea    rsi,[rip+0x17aba]        # 423d0d <_IO_stdin_used@@Base+0xd0d>
  40c253:	call   40d0a0 <test_scan@@Base+0x12a0>
  40c258:	mov    ecx,0x2
  40c25d:	mov    esi,ecx
  40c25f:	cmp    rsi,rax
  40c262:	je     40c281 <test_scan@@Base+0x481>
  40c268:	lea    rdi,[rip+0x1844e]        # 4246bd <_IO_stdin_used@@Base+0x16bd>
  40c26f:	mov    al,0x0
  40c271:	call   404070 <printf@plt>
  40c276:	mov    DWORD PTR [rbp-0xf4],eax
  40c27c:	jmp    40cf1d <test_scan@@Base+0x111d>
  40c281:	mov    rdi,QWORD PTR [rbp-0x20]
  40c285:	lea    rsi,[rip+0x17a81]        # 423d0d <_IO_stdin_used@@Base+0xd0d>
  40c28c:	call   40d150 <test_scan@@Base+0x1350>
  40c291:	mov    ecx,0x4
  40c296:	mov    esi,ecx
  40c298:	cmp    rsi,rax
  40c29b:	je     40c2ba <test_scan@@Base+0x4ba>
  40c2a1:	lea    rdi,[rip+0x18415]        # 4246bd <_IO_stdin_used@@Base+0x16bd>
  40c2a8:	mov    al,0x0
  40c2aa:	call   404070 <printf@plt>
  40c2af:	mov    DWORD PTR [rbp-0xf8],eax
  40c2b5:	jmp    40cf1d <test_scan@@Base+0x111d>
  40c2ba:	mov    rdi,QWORD PTR [rbp-0x20]
  40c2be:	lea    rsi,[rip+0x1839f]        # 424664 <_IO_stdin_used@@Base+0x1664>
  40c2c5:	mov    edx,0x8
  40c2ca:	call   40d1e0 <test_scan@@Base+0x13e0>
  40c2cf:	mov    edx,0x4
  40c2d4:	mov    esi,edx
  40c2d6:	cmp    rsi,rax
  40c2d9:	je     40c2f8 <test_scan@@Base+0x4f8>
  40c2df:	lea    rdi,[rip+0x18389]        # 42466f <_IO_stdin_used@@Base+0x166f>
  40c2e6:	mov    al,0x0
  40c2e8:	call   404070 <printf@plt>
  40c2ed:	mov    DWORD PTR [rbp-0xfc],eax
  40c2f3:	jmp    40cf1d <test_scan@@Base+0x111d>
  40c2f8:	mov    eax,0x1
  40c2fd:	mov    esi,eax
  40c2ff:	mov    eax,0x3
  40c304:	mov    edx,eax
  40c306:	mov    rdi,QWORD PTR [rbp-0x20]
  40c30a:	lea    rcx,[rip+0x18353]        # 424664 <_IO_stdin_used@@Base+0x1664>
  40c311:	mov    r8d,0x8
  40c317:	call   40d280 <test_scan@@Base+0x1480>
  40c31c:	mov    r8d,0x2
  40c322:	mov    ecx,r8d
  40c325:	cmp    rcx,rax
  40c328:	je     40c347 <test_scan@@Base+0x547>
  40c32e:	lea    rdi,[rip+0x1833a]        # 42466f <_IO_stdin_used@@Base+0x166f>
  40c335:	mov    al,0x0
  40c337:	call   404070 <printf@plt>
  40c33c:	mov    DWORD PTR [rbp-0x100],eax
  40c342:	jmp    40cf1d <test_scan@@Base+0x111d>
  40c347:	mov    eax,0x2
  40c34c:	mov    esi,eax
  40c34e:	mov    rdi,QWORD PTR [rbp-0x20]
  40c352:	mov    rdx,QWORD PTR [rip+0x25d57]        # 4320b0 <__data_start@@Base+0x18>
  40c359:	lea    rcx,[rip+0x179ad]        # 423d0d <_IO_stdin_used@@Base+0xd0d>
  40c360:	call   40d350 <test_scan@@Base+0x1550>
  40c365:	mov    r8d,0x2
  40c36b:	mov    ecx,r8d
  40c36e:	cmp    rcx,rax
  40c371:	je     40c390 <test_scan@@Base+0x590>
  40c377:	lea    rdi,[rip+0x1830c]        # 42468a <_IO_stdin_used@@Base+0x168a>
  40c37e:	mov    al,0x0
  40c380:	call   404070 <printf@plt>
  40c385:	mov    DWORD PTR [rbp-0x104],eax
  40c38b:	jmp    40cf1d <test_scan@@Base+0x111d>
  40c390:	mov    eax,0x2
  40c395:	mov    esi,eax
  40c397:	mov    rdi,QWORD PTR [rbp-0x20]
  40c39b:	mov    rdx,QWORD PTR [rip+0x25d0e]        # 4320b0 <__data_start@@Base+0x18>
  40c3a2:	lea    rcx,[rip+0x182bb]        # 424664 <_IO_stdin_used@@Base+0x1664>
  40c3a9:	mov    r8d,0x8
  40c3af:	call   40d430 <test_scan@@Base+0x1630>
  40c3b4:	mov    r8d,0x2
  40c3ba:	mov    ecx,r8d
  40c3bd:	cmp    rcx,rax
  40c3c0:	je     40c3df <test_scan@@Base+0x5df>
  40c3c6:	lea    rdi,[rip+0x182bd]        # 42468a <_IO_stdin_used@@Base+0x168a>
  40c3cd:	mov    al,0x0
  40c3cf:	call   404070 <printf@plt>
  40c3d4:	mov    DWORD PTR [rbp-0x108],eax
  40c3da:	jmp    40cf1d <test_scan@@Base+0x111d>
  40c3df:	mov    eax,0x3
  40c3e4:	mov    esi,eax
  40c3e6:	mov    rdi,QWORD PTR [rbp-0x20]
  40c3ea:	mov    rdx,QWORD PTR [rip+0x25cbf]        # 4320b0 <__data_start@@Base+0x18>
  40c3f1:	lea    rcx,[rip+0x17915]        # 423d0d <_IO_stdin_used@@Base+0xd0d>
  40c3f8:	call   40d350 <test_scan@@Base+0x1550>
  40c3fd:	mov    r8d,0x4
  40c403:	mov    ecx,r8d
  40c406:	cmp    rcx,rax
  40c409:	je     40c428 <test_scan@@Base+0x628>
  40c40f:	lea    rdi,[rip+0x1829f]        # 4246b5 <_IO_stdin_used@@Base+0x16b5>
  40c416:	mov    al,0x0
  40c418:	call   404070 <printf@plt>
  40c41d:	mov    DWORD PTR [rbp-0x10c],eax
  40c423:	jmp    40cf1d <test_scan@@Base+0x111d>
  40c428:	mov    eax,0x1
  40c42d:	mov    esi,eax
  40c42f:	mov    eax,0x3
  40c434:	mov    edx,eax
  40c436:	mov    rcx,QWORD PTR [rip+0x25c6b]        # 4320a8 <__data_start@@Base+0x10>
  40c43d:	mov    rdi,QWORD PTR [rbp-0x20]
  40c441:	lea    r8,[rip+0x18130]        # 424578 <_IO_stdin_used@@Base+0x1578>
  40c448:	mov    QWORD PTR [rbp-0x118],rcx
  40c44f:	mov    rcx,r8
  40c452:	call   40d060 <test_scan@@Base+0x1260>
  40c457:	mov    rcx,QWORD PTR [rbp-0x118]
  40c45e:	cmp    rcx,rax
  40c461:	je     40c480 <test_scan@@Base+0x680>
  40c467:	lea    rdi,[rip+0x18263]        # 4246d1 <_IO_stdin_used@@Base+0x16d1>
  40c46e:	mov    al,0x0
  40c470:	call   404070 <printf@plt>
  40c475:	mov    DWORD PTR [rbp-0x11c],eax
  40c47b:	jmp    40cf1d <test_scan@@Base+0x111d>
  40c480:	mov    eax,0x1
  40c485:	mov    esi,eax
  40c487:	mov    eax,0x3
  40c48c:	mov    edx,eax
  40c48e:	mov    rcx,QWORD PTR [rip+0x25c13]        # 4320a8 <__data_start@@Base+0x10>
  40c495:	mov    rdi,QWORD PTR [rbp-0x20]
  40c499:	lea    r8,[rip+0x177e5]        # 423c85 <_IO_stdin_used@@Base+0xc85>
  40c4a0:	mov    QWORD PTR [rbp-0x128],rcx
  40c4a7:	mov    rcx,r8
  40c4aa:	call   40d060 <test_scan@@Base+0x1260>
  40c4af:	mov    rcx,QWORD PTR [rbp-0x128]
  40c4b6:	cmp    rcx,rax
  40c4b9:	je     40c4d8 <test_scan@@Base+0x6d8>
  40c4bf:	lea    rdi,[rip+0x1822e]        # 4246f4 <_IO_stdin_used@@Base+0x16f4>
  40c4c6:	mov    al,0x0
  40c4c8:	call   404070 <printf@plt>
  40c4cd:	mov    DWORD PTR [rbp-0x12c],eax
  40c4d3:	jmp    40cf1d <test_scan@@Base+0x111d>
  40c4d8:	mov    eax,0x1
  40c4dd:	mov    esi,eax
  40c4df:	mov    eax,0x3
  40c4e4:	mov    edx,eax
  40c4e6:	mov    rdi,QWORD PTR [rbp-0x20]
  40c4ea:	lea    rcx,[rip+0x177f4]        # 423ce5 <_IO_stdin_used@@Base+0xce5>
  40c4f1:	call   40d060 <test_scan@@Base+0x1260>
  40c4f6:	mov    r8d,0x1
  40c4fc:	mov    ecx,r8d
  40c4ff:	cmp    rcx,rax
  40c502:	je     40c521 <test_scan@@Base+0x721>
  40c508:	lea    rdi,[rip+0x1828f]        # 42479e <_IO_stdin_used@@Base+0x179e>
  40c50f:	mov    al,0x0
  40c511:	call   404070 <printf@plt>
  40c516:	mov    DWORD PTR [rbp-0x130],eax
  40c51c:	jmp    40cf1d <test_scan@@Base+0x111d>
  40c521:	mov    eax,0x1
  40c526:	mov    esi,eax
  40c528:	mov    eax,0x3
  40c52d:	mov    edx,eax
  40c52f:	mov    rdi,QWORD PTR [rbp-0x20]
  40c533:	lea    rcx,[rip+0x177d3]        # 423d0d <_IO_stdin_used@@Base+0xd0d>
  40c53a:	call   40d350 <test_scan@@Base+0x1550>
  40c53f:	mov    r8d,0x2
  40c545:	mov    ecx,r8d
  40c548:	cmp    rcx,rax
  40c54b:	je     40c56a <test_scan@@Base+0x76a>
  40c551:	lea    rdi,[rip+0x1826c]        # 4247c4 <_IO_stdin_used@@Base+0x17c4>
  40c558:	mov    al,0x0
  40c55a:	call   404070 <printf@plt>
  40c55f:	mov    DWORD PTR [rbp-0x134],eax
  40c565:	jmp    40cf1d <test_scan@@Base+0x111d>
  40c56a:	mov    eax,0x1
  40c56f:	mov    esi,eax
  40c571:	mov    eax,0x3
  40c576:	mov    edx,eax
  40c578:	mov    rcx,QWORD PTR [rip+0x25b29]        # 4320a8 <__data_start@@Base+0x10>
  40c57f:	mov    rdi,QWORD PTR [rbp-0x20]
  40c583:	lea    r8,[rip+0x17dec]        # 424376 <_IO_stdin_used@@Base+0x1376>
  40c58a:	mov    QWORD PTR [rbp-0x140],rcx
  40c591:	mov    rcx,r8
  40c594:	call   40d350 <test_scan@@Base+0x1550>
  40c599:	mov    rcx,QWORD PTR [rbp-0x140]
  40c5a0:	cmp    rcx,rax
  40c5a3:	je     40c5c2 <test_scan@@Base+0x7c2>
  40c5a9:	lea    rdi,[rip+0x18166]        # 424716 <_IO_stdin_used@@Base+0x1716>
  40c5b0:	mov    al,0x0
  40c5b2:	call   404070 <printf@plt>
  40c5b7:	mov    DWORD PTR [rbp-0x144],eax
  40c5bd:	jmp    40cf1d <test_scan@@Base+0x111d>
  40c5c2:	mov    eax,0x1
  40c5c7:	mov    esi,eax
  40c5c9:	mov    eax,0x3
  40c5ce:	mov    edx,eax
  40c5d0:	mov    rcx,QWORD PTR [rip+0x25ad1]        # 4320a8 <__data_start@@Base+0x10>
  40c5d7:	mov    rdi,QWORD PTR [rbp-0x20]
  40c5db:	lea    r8,[rip+0x17f96]        # 424578 <_IO_stdin_used@@Base+0x1578>
  40c5e2:	mov    QWORD PTR [rbp-0x150],rcx
  40c5e9:	mov    rcx,r8
  40c5ec:	call   40d510 <test_scan@@Base+0x1710>
  40c5f1:	mov    rcx,QWORD PTR [rbp-0x150]
  40c5f8:	cmp    rcx,rax
  40c5fb:	je     40c61a <test_scan@@Base+0x81a>
  40c601:	lea    rdi,[rip+0x1813a]        # 424742 <_IO_stdin_used@@Base+0x1742>
  40c608:	mov    al,0x0
  40c60a:	call   404070 <printf@plt>
  40c60f:	mov    DWORD PTR [rbp-0x154],eax
  40c615:	jmp    40cf1d <test_scan@@Base+0x111d>
  40c61a:	mov    eax,0x1
  40c61f:	mov    esi,eax
  40c621:	mov    eax,0x3
  40c626:	mov    edx,eax
  40c628:	mov    rcx,QWORD PTR [rip+0x25a79]        # 4320a8 <__data_start@@Base+0x10>
  40c62f:	mov    rdi,QWORD PTR [rbp-0x20]
  40c633:	lea    r8,[rip+0x1764b]        # 423c85 <_IO_stdin_used@@Base+0xc85>
  40c63a:	mov    QWORD PTR [rbp-0x160],rcx
  40c641:	mov    rcx,r8
  40c644:	call   40d510 <test_scan@@Base+0x1710>
  40c649:	mov    rcx,QWORD PTR [rbp-0x160]
  40c650:	cmp    rcx,rax
  40c653:	je     40c672 <test_scan@@Base+0x872>
  40c659:	lea    rdi,[rip+0x18110]        # 424770 <_IO_stdin_used@@Base+0x1770>
  40c660:	mov    al,0x0
  40c662:	call   404070 <printf@plt>
  40c667:	mov    DWORD PTR [rbp-0x164],eax
  40c66d:	jmp    40cf1d <test_scan@@Base+0x111d>
  40c672:	mov    eax,0x1
  40c677:	mov    esi,eax
  40c679:	mov    eax,0x3
  40c67e:	mov    edx,eax
  40c680:	mov    rdi,QWORD PTR [rbp-0x20]
  40c684:	lea    rcx,[rip+0x1765a]        # 423ce5 <_IO_stdin_used@@Base+0xce5>
  40c68b:	call   40d510 <test_scan@@Base+0x1710>
  40c690:	mov    r8d,0x1
  40c696:	mov    ecx,r8d
  40c699:	cmp    rcx,rax
  40c69c:	je     40c6bb <test_scan@@Base+0x8bb>
  40c6a2:	lea    rdi,[rip+0x180f4]        # 42479d <_IO_stdin_used@@Base+0x179d>
  40c6a9:	mov    al,0x0
  40c6ab:	call   404070 <printf@plt>
  40c6b0:	mov    DWORD PTR [rbp-0x168],eax
  40c6b6:	jmp    40cf1d <test_scan@@Base+0x111d>
  40c6bb:	mov    eax,0x1
  40c6c0:	mov    esi,eax
  40c6c2:	mov    eax,0x3
  40c6c7:	mov    edx,eax
  40c6c9:	mov    rdi,QWORD PTR [rbp-0x20]
  40c6cd:	lea    rcx,[rip+0x17639]        # 423d0d <_IO_stdin_used@@Base+0xd0d>
  40c6d4:	call   40d550 <test_scan@@Base+0x1750>
  40c6d9:	mov    r8d,0x2
  40c6df:	mov    ecx,r8d
  40c6e2:	cmp    rcx,rax
  40c6e5:	je     40c704 <test_scan@@Base+0x904>
  40c6eb:	lea    rdi,[rip+0x180d1]        # 4247c3 <_IO_stdin_used@@Base+0x17c3>
  40c6f2:	mov    al,0x0
  40c6f4:	call   404070 <printf@plt>
  40c6f9:	mov    DWORD PTR [rbp-0x16c],eax
  40c6ff:	jmp    40cf1d <test_scan@@Base+0x111d>
  40c704:	mov    eax,0x1
  40c709:	mov    esi,eax
  40c70b:	mov    eax,0x3
  40c710:	mov    edx,eax
  40c712:	mov    rcx,QWORD PTR [rip+0x2598f]        # 4320a8 <__data_start@@Base+0x10>
  40c719:	mov    rdi,QWORD PTR [rbp-0x20]
  40c71d:	lea    r8,[rip+0x17c52]        # 424376 <_IO_stdin_used@@Base+0x1376>
  40c724:	mov    QWORD PTR [rbp-0x178],rcx
  40c72b:	mov    rcx,r8
  40c72e:	call   40d550 <test_scan@@Base+0x1750>
  40c733:	mov    rcx,QWORD PTR [rbp-0x178]
  40c73a:	cmp    rcx,rax
  40c73d:	je     40c75c <test_scan@@Base+0x95c>
  40c743:	lea    rdi,[rip+0x180a2]        # 4247ec <_IO_stdin_used@@Base+0x17ec>
  40c74a:	mov    al,0x0
  40c74c:	call   404070 <printf@plt>
  40c751:	mov    DWORD PTR [rbp-0x17c],eax
  40c757:	jmp    40cf1d <test_scan@@Base+0x111d>
  40c75c:	xor    eax,eax
  40c75e:	mov    ecx,eax
  40c760:	mov    rdx,QWORD PTR [rip+0x25941]        # 4320a8 <__data_start@@Base+0x10>
  40c767:	mov    rdi,QWORD PTR [rbp-0x20]
  40c76b:	mov    rsi,rcx
  40c76e:	mov    QWORD PTR [rbp-0x188],rdx
  40c775:	mov    rdx,rcx
  40c778:	lea    rcx,[rip+0x17506]        # 423c85 <_IO_stdin_used@@Base+0xc85>
  40c77f:	call   40d060 <test_scan@@Base+0x1260>
  40c784:	mov    rcx,QWORD PTR [rbp-0x188]
  40c78b:	cmp    rcx,rax
  40c78e:	je     40c7ad <test_scan@@Base+0x9ad>
  40c794:	lea    rdi,[rip+0x1807e]        # 424819 <_IO_stdin_used@@Base+0x1819>
  40c79b:	mov    al,0x0
  40c79d:	call   404070 <printf@plt>
  40c7a2:	mov    DWORD PTR [rbp-0x18c],eax
  40c7a8:	jmp    40cf1d <test_scan@@Base+0x111d>
  40c7ad:	xor    eax,eax
  40c7af:	mov    ecx,eax
  40c7b1:	mov    rdx,QWORD PTR [rip+0x258f0]        # 4320a8 <__data_start@@Base+0x10>
  40c7b8:	mov    rdi,QWORD PTR [rbp-0x20]
  40c7bc:	mov    rsi,rcx
  40c7bf:	mov    QWORD PTR [rbp-0x198],rdx
  40c7c6:	mov    rdx,rcx
  40c7c9:	lea    rcx,[rip+0x17515]        # 423ce5 <_IO_stdin_used@@Base+0xce5>
  40c7d0:	call   40d060 <test_scan@@Base+0x1260>
  40c7d5:	mov    rcx,QWORD PTR [rbp-0x198]
  40c7dc:	cmp    rcx,rax
  40c7df:	je     40c7fe <test_scan@@Base+0x9fe>
  40c7e5:	lea    rdi,[rip+0x1804e]        # 42483a <_IO_stdin_used@@Base+0x183a>
  40c7ec:	mov    al,0x0
  40c7ee:	call   404070 <printf@plt>
  40c7f3:	mov    DWORD PTR [rbp-0x19c],eax
  40c7f9:	jmp    40cf1d <test_scan@@Base+0x111d>
  40c7fe:	mov    eax,0x1
  40c803:	mov    ecx,eax
  40c805:	mov    rdx,QWORD PTR [rip+0x2589c]        # 4320a8 <__data_start@@Base+0x10>
  40c80c:	mov    rdi,QWORD PTR [rbp-0x20]
  40c810:	mov    rsi,rcx
  40c813:	mov    QWORD PTR [rbp-0x1a8],rdx
  40c81a:	mov    rdx,rcx
  40c81d:	lea    rcx,[rip+0x174c1]        # 423ce5 <_IO_stdin_used@@Base+0xce5>
  40c824:	call   40d060 <test_scan@@Base+0x1260>
  40c829:	mov    rcx,QWORD PTR [rbp-0x1a8]
  40c830:	cmp    rcx,rax
  40c833:	je     40c852 <test_scan@@Base+0xa52>
  40c839:	lea    rdi,[rip+0x18019]        # 424859 <_IO_stdin_used@@Base+0x1859>
  40c840:	mov    al,0x0
  40c842:	call   404070 <printf@plt>
  40c847:	mov    DWORD PTR [rbp-0x1ac],eax
  40c84d:	jmp    40cf1d <test_scan@@Base+0x111d>
  40c852:	mov    rax,QWORD PTR [rip+0x2584f]        # 4320a8 <__data_start@@Base+0x10>
  40c859:	mov    rdi,QWORD PTR [rbp-0x20]
  40c85d:	mov    rcx,QWORD PTR [rbp-0x20]
  40c861:	mov    QWORD PTR [rbp-0x1b8],rdi
  40c868:	mov    rdi,rcx
  40c86b:	mov    QWORD PTR [rbp-0x1c0],rax
  40c872:	call   408c20 <verify_monster@@Base+0x2010>
  40c877:	mov    rdx,QWORD PTR [rip+0x25832]        # 4320b0 <__data_start@@Base+0x18>
  40c87e:	mov    rdi,QWORD PTR [rbp-0x1b8]
  40c885:	mov    rsi,rax
  40c888:	lea    rcx,[rip+0x173f6]        # 423c85 <_IO_stdin_used@@Base+0xc85>
  40c88f:	call   40d060 <test_scan@@Base+0x1260>
  40c894:	mov    rcx,QWORD PTR [rbp-0x1c0]
  40c89b:	cmp    rcx,rax
  40c89e:	je     40c8bd <test_scan@@Base+0xabd>
  40c8a4:	lea    rdi,[rip+0x17fd5]        # 424880 <_IO_stdin_used@@Base+0x1880>
  40c8ab:	mov    al,0x0
  40c8ad:	call   404070 <printf@plt>
  40c8b2:	mov    DWORD PTR [rbp-0x1c4],eax
  40c8b8:	jmp    40cf1d <test_scan@@Base+0x111d>
  40c8bd:	xor    eax,eax
  40c8bf:	mov    ecx,eax
  40c8c1:	mov    rdx,QWORD PTR [rip+0x257e0]        # 4320a8 <__data_start@@Base+0x10>
  40c8c8:	mov    rdi,QWORD PTR [rbp-0x20]
  40c8cc:	mov    rsi,rcx
  40c8cf:	mov    QWORD PTR [rbp-0x1d0],rdx
  40c8d6:	mov    rdx,rcx
  40c8d9:	lea    rcx,[rip+0x173a5]        # 423c85 <_IO_stdin_used@@Base+0xc85>
  40c8e0:	call   40d510 <test_scan@@Base+0x1710>
  40c8e5:	mov    rcx,QWORD PTR [rbp-0x1d0]
  40c8ec:	cmp    rcx,rax
  40c8ef:	je     40c90e <test_scan@@Base+0xb0e>
  40c8f5:	lea    rdi,[rip+0x17f1d]        # 424819 <_IO_stdin_used@@Base+0x1819>
  40c8fc:	mov    al,0x0
  40c8fe:	call   404070 <printf@plt>
  40c903:	mov    DWORD PTR [rbp-0x1d4],eax
  40c909:	jmp    40cf1d <test_scan@@Base+0x111d>
  40c90e:	xor    eax,eax
  40c910:	mov    ecx,eax
  40c912:	mov    rdx,QWORD PTR [rip+0x2578f]        # 4320a8 <__data_start@@Base+0x10>
  40c919:	mov    rdi,QWORD PTR [rbp-0x20]
  40c91d:	mov    rsi,rcx
  40c920:	mov    QWORD PTR [rbp-0x1e0],rdx
  40c927:	mov    rdx,rcx
  40c92a:	lea    rcx,[rip+0x173b4]        # 423ce5 <_IO_stdin_used@@Base+0xce5>
  40c931:	call   40d510 <test_scan@@Base+0x1710>
  40c936:	mov    rcx,QWORD PTR [rbp-0x1e0]
  40c93d:	cmp    rcx,rax
  40c940:	je     40c95f <test_scan@@Base+0xb5f>
  40c946:	lea    rdi,[rip+0x17eed]        # 42483a <_IO_stdin_used@@Base+0x183a>
  40c94d:	mov    al,0x0
  40c94f:	call   404070 <printf@plt>
  40c954:	mov    DWORD PTR [rbp-0x1e4],eax
  40c95a:	jmp    40cf1d <test_scan@@Base+0x111d>
  40c95f:	mov    eax,0x1
  40c964:	mov    ecx,eax
  40c966:	mov    rdx,QWORD PTR [rip+0x2573b]        # 4320a8 <__data_start@@Base+0x10>
  40c96d:	mov    rdi,QWORD PTR [rbp-0x20]
  40c971:	mov    rsi,rcx
  40c974:	mov    QWORD PTR [rbp-0x1f0],rdx
  40c97b:	mov    rdx,rcx
  40c97e:	lea    rcx,[rip+0x17360]        # 423ce5 <_IO_stdin_used@@Base+0xce5>
  40c985:	call   40d510 <test_scan@@Base+0x1710>
  40c98a:	mov    rcx,QWORD PTR [rbp-0x1f0]
  40c991:	cmp    rcx,rax
  40c994:	je     40c9b3 <test_scan@@Base+0xbb3>
  40c99a:	lea    rdi,[rip+0x17eb8]        # 424859 <_IO_stdin_used@@Base+0x1859>
  40c9a1:	mov    al,0x0
  40c9a3:	call   404070 <printf@plt>
  40c9a8:	mov    DWORD PTR [rbp-0x1f4],eax
  40c9ae:	jmp    40cf1d <test_scan@@Base+0x111d>
  40c9b3:	mov    rax,QWORD PTR [rip+0x256ee]        # 4320a8 <__data_start@@Base+0x10>
  40c9ba:	mov    rdi,QWORD PTR [rbp-0x20]
  40c9be:	mov    rcx,QWORD PTR [rbp-0x20]
  40c9c2:	mov    QWORD PTR [rbp-0x200],rdi
  40c9c9:	mov    rdi,rcx
  40c9cc:	mov    QWORD PTR [rbp-0x208],rax
  40c9d3:	call   408c20 <verify_monster@@Base+0x2010>
  40c9d8:	mov    rdx,QWORD PTR [rip+0x256d1]        # 4320b0 <__data_start@@Base+0x18>
  40c9df:	mov    rdi,QWORD PTR [rbp-0x200]
  40c9e6:	mov    rsi,rax
  40c9e9:	lea    rcx,[rip+0x17295]        # 423c85 <_IO_stdin_used@@Base+0xc85>
  40c9f0:	call   40d510 <test_scan@@Base+0x1710>
  40c9f5:	mov    rcx,QWORD PTR [rbp-0x208]
  40c9fc:	cmp    rcx,rax
  40c9ff:	je     40ca1e <test_scan@@Base+0xc1e>
  40ca05:	lea    rdi,[rip+0x17e74]        # 424880 <_IO_stdin_used@@Base+0x1880>
  40ca0c:	mov    al,0x0
  40ca0e:	call   404070 <printf@plt>
  40ca13:	mov    DWORD PTR [rbp-0x20c],eax
  40ca19:	jmp    40cf1d <test_scan@@Base+0x111d>
  40ca1e:	mov    rdi,QWORD PTR [rbp-0x20]
  40ca22:	lea    rsi,[rip+0x172bc]        # 423ce5 <_IO_stdin_used@@Base+0xce5>
  40ca29:	call   40d620 <test_scan@@Base+0x1820>
  40ca2e:	mov    ecx,0x1
  40ca33:	mov    esi,ecx
  40ca35:	cmp    rsi,rax
  40ca38:	je     40ca57 <test_scan@@Base+0xc57>
  40ca3e:	lea    rdi,[rip+0x17e67]        # 4248ac <_IO_stdin_used@@Base+0x18ac>
  40ca45:	mov    al,0x0
  40ca47:	call   404070 <printf@plt>
  40ca4c:	mov    DWORD PTR [rbp-0x210],eax
  40ca52:	jmp    40cf1d <test_scan@@Base+0x111d>
  40ca57:	mov    rdi,QWORD PTR [rbp-0x20]
  40ca5b:	lea    rsi,[rip+0x17b16]        # 424578 <_IO_stdin_used@@Base+0x1578>
  40ca62:	call   40d620 <test_scan@@Base+0x1820>
  40ca67:	xor    ecx,ecx
  40ca69:	mov    esi,ecx
  40ca6b:	cmp    rsi,rax
  40ca6e:	je     40ca8d <test_scan@@Base+0xc8d>
  40ca74:	lea    rdi,[rip+0x17e4c]        # 4248c7 <_IO_stdin_used@@Base+0x18c7>
  40ca7b:	mov    al,0x0
  40ca7d:	call   404070 <printf@plt>
  40ca82:	mov    DWORD PTR [rbp-0x214],eax
  40ca88:	jmp    40cf1d <test_scan@@Base+0x111d>
  40ca8d:	mov    rdi,QWORD PTR [rbp-0x20]
  40ca91:	lea    rsi,[rip+0x171ed]        # 423c85 <_IO_stdin_used@@Base+0xc85>
  40ca98:	call   40d620 <test_scan@@Base+0x1820>
  40ca9d:	mov    ecx,0x1
  40caa2:	mov    esi,ecx
  40caa4:	cmp    rsi,rax
  40caa7:	je     40cac6 <test_scan@@Base+0xcc6>
  40caad:	lea    rdi,[rip+0x17e2f]        # 4248e3 <_IO_stdin_used@@Base+0x18e3>
  40cab4:	mov    al,0x0
  40cab6:	call   404070 <printf@plt>
  40cabb:	mov    DWORD PTR [rbp-0x218],eax
  40cac1:	jmp    40cf1d <test_scan@@Base+0x111d>
  40cac6:	mov    rdi,QWORD PTR [rbp-0x20]
  40caca:	lea    rsi,[rip+0x1723c]        # 423d0d <_IO_stdin_used@@Base+0xd0d>
  40cad1:	call   40d620 <test_scan@@Base+0x1820>
  40cad6:	mov    ecx,0x2
  40cadb:	mov    esi,ecx
  40cadd:	cmp    rsi,rax
  40cae0:	je     40caff <test_scan@@Base+0xcff>
  40cae6:	lea    rdi,[rip+0x17e12]        # 4248ff <_IO_stdin_used@@Base+0x18ff>
  40caed:	mov    al,0x0
  40caef:	call   404070 <printf@plt>
  40caf4:	mov    DWORD PTR [rbp-0x21c],eax
  40cafa:	jmp    40cf1d <test_scan@@Base+0x111d>
  40caff:	mov    rdi,QWORD PTR [rbp-0x28]
  40cb03:	mov    esi,0x6
  40cb08:	call   40d6a0 <test_scan@@Base+0x18a0>
  40cb0d:	xor    esi,esi
  40cb0f:	mov    edi,esi
  40cb11:	mov    QWORD PTR [rbp-0x10],rax
  40cb15:	cmp    rdi,rax
  40cb18:	je     40cb37 <test_scan@@Base+0xd37>
  40cb1e:	lea    rdi,[rip+0x17df8]        # 42491d <_IO_stdin_used@@Base+0x191d>
  40cb25:	mov    al,0x0
  40cb27:	call   404070 <printf@plt>
  40cb2c:	mov    DWORD PTR [rbp-0x220],eax
  40cb32:	jmp    40cf1d <test_scan@@Base+0x111d>
  40cb37:	mov    rdi,QWORD PTR [rbp-0x28]
  40cb3b:	mov    esi,0x1
  40cb40:	call   40d6a0 <test_scan@@Base+0x18a0>
  40cb45:	mov    esi,0x2
  40cb4a:	mov    edi,esi
  40cb4c:	mov    QWORD PTR [rbp-0x10],rax
  40cb50:	cmp    rdi,rax
  40cb53:	je     40cb72 <test_scan@@Base+0xd72>
  40cb59:	lea    rdi,[rip+0x17dea]        # 42494a <_IO_stdin_used@@Base+0x194a>
  40cb60:	mov    al,0x0
  40cb62:	call   404070 <printf@plt>
  40cb67:	mov    DWORD PTR [rbp-0x224],eax
  40cb6d:	jmp    40cf1d <test_scan@@Base+0x111d>
  40cb72:	mov    eax,0x3
  40cb77:	mov    esi,eax
  40cb79:	mov    rcx,QWORD PTR [rip+0x25528]        # 4320a8 <__data_start@@Base+0x10>
  40cb80:	mov    rdi,QWORD PTR [rbp-0x28]
  40cb84:	mov    rdx,QWORD PTR [rip+0x25525]        # 4320b0 <__data_start@@Base+0x18>
  40cb8b:	mov    eax,0x1
  40cb90:	mov    QWORD PTR [rbp-0x230],rcx
  40cb97:	mov    ecx,eax
  40cb99:	call   40d760 <test_scan@@Base+0x1960>
  40cb9e:	mov    QWORD PTR [rbp-0x10],rax
  40cba2:	mov    rdx,QWORD PTR [rbp-0x230]
  40cba9:	cmp    rdx,rax
  40cbac:	je     40cbcb <test_scan@@Base+0xdcb>
  40cbb2:	lea    rdi,[rip+0x17dbf]        # 424978 <_IO_stdin_used@@Base+0x1978>
  40cbb9:	mov    al,0x0
  40cbbb:	call   404070 <printf@plt>
  40cbc0:	mov    DWORD PTR [rbp-0x234],eax
  40cbc6:	jmp    40cf1d <test_scan@@Base+0x111d>
  40cbcb:	mov    rax,QWORD PTR [rip+0x254d6]        # 4320a8 <__data_start@@Base+0x10>
  40cbd2:	mov    rdi,QWORD PTR [rbp-0x28]
  40cbd6:	mov    esi,0x5
  40cbdb:	mov    QWORD PTR [rbp-0x240],rax
  40cbe2:	call   40d6a0 <test_scan@@Base+0x18a0>
  40cbe7:	mov    QWORD PTR [rbp-0x10],rax
  40cbeb:	mov    rdi,QWORD PTR [rbp-0x240]
  40cbf2:	cmp    rdi,rax
  40cbf5:	je     40cc14 <test_scan@@Base+0xe14>
  40cbfb:	lea    rdi,[rip+0x17e54]        # 424a56 <_IO_stdin_used@@Base+0x1a56>
  40cc02:	mov    al,0x0
  40cc04:	call   404070 <printf@plt>
  40cc09:	mov    DWORD PTR [rbp-0x244],eax
  40cc0f:	jmp    40cf1d <test_scan@@Base+0x111d>
  40cc14:	mov    rdi,QWORD PTR [rbp-0x28]
  40cc18:	mov    esi,0x2
  40cc1d:	call   40d6a0 <test_scan@@Base+0x18a0>
  40cc22:	mov    esi,0x6
  40cc27:	mov    edi,esi
  40cc29:	mov    QWORD PTR [rbp-0x10],rax
  40cc2d:	cmp    rdi,rax
  40cc30:	je     40cc4f <test_scan@@Base+0xe4f>
  40cc36:	lea    rdi,[rip+0x17d74]        # 4249b1 <_IO_stdin_used@@Base+0x19b1>
  40cc3d:	mov    al,0x0
  40cc3f:	call   404070 <printf@plt>
  40cc44:	mov    DWORD PTR [rbp-0x248],eax
  40cc4a:	jmp    40cf1d <test_scan@@Base+0x111d>
  40cc4f:	mov    rdi,QWORD PTR [rbp-0x28]
  40cc53:	mov    esi,0x3
  40cc58:	call   40d6a0 <test_scan@@Base+0x18a0>
  40cc5d:	mov    esi,0x3
  40cc62:	mov    edi,esi
  40cc64:	mov    QWORD PTR [rbp-0x10],rax
  40cc68:	cmp    rdi,rax
  40cc6b:	je     40cc8a <test_scan@@Base+0xe8a>
  40cc71:	lea    rdi,[rip+0x17dde]        # 424a56 <_IO_stdin_used@@Base+0x1a56>
  40cc78:	mov    al,0x0
  40cc7a:	call   404070 <printf@plt>
  40cc7f:	mov    DWORD PTR [rbp-0x24c],eax
  40cc85:	jmp    40cf1d <test_scan@@Base+0x111d>
  40cc8a:	mov    eax,0x3
  40cc8f:	mov    esi,eax
  40cc91:	mov    rdi,QWORD PTR [rbp-0x28]
  40cc95:	mov    rdx,QWORD PTR [rip+0x25414]        # 4320b0 <__data_start@@Base+0x18>
  40cc9c:	mov    ecx,0x3
  40cca1:	call   40d760 <test_scan@@Base+0x1960>
  40cca6:	mov    ecx,0x3
  40ccab:	mov    edx,ecx
  40ccad:	mov    QWORD PTR [rbp-0x10],rax
  40ccb1:	cmp    rdx,rax
  40ccb4:	je     40ccd3 <test_scan@@Base+0xed3>
  40ccba:	lea    rdi,[rip+0x17d1c]        # 4249dd <_IO_stdin_used@@Base+0x19dd>
  40ccc1:	mov    al,0x0
  40ccc3:	call   404070 <printf@plt>
  40ccc8:	mov    DWORD PTR [rbp-0x250],eax
  40ccce:	jmp    40cf1d <test_scan@@Base+0x111d>
  40ccd3:	mov    eax,0x4
  40ccd8:	mov    esi,eax
  40ccda:	mov    rdi,QWORD PTR [rbp-0x28]
  40ccde:	mov    rdx,QWORD PTR [rip+0x253cb]        # 4320b0 <__data_start@@Base+0x18>
  40cce5:	mov    ecx,0x3
  40ccea:	call   40d760 <test_scan@@Base+0x1960>
  40ccef:	mov    ecx,0x5
  40ccf4:	mov    edx,ecx
  40ccf6:	mov    QWORD PTR [rbp-0x10],rax
  40ccfa:	cmp    rdx,rax
  40ccfd:	je     40cd1c <test_scan@@Base+0xf1c>
  40cd03:	lea    rdi,[rip+0x17d0e]        # 424a18 <_IO_stdin_used@@Base+0x1a18>
  40cd0a:	mov    al,0x0
  40cd0c:	call   404070 <printf@plt>
  40cd11:	mov    DWORD PTR [rbp-0x254],eax
  40cd17:	jmp    40cf1d <test_scan@@Base+0x111d>
  40cd1c:	mov    rdi,QWORD PTR [rbp-0x28]
  40cd20:	mov    esi,0x3
  40cd25:	call   40d860 <test_scan@@Base+0x1a60>
  40cd2a:	mov    esi,0x5
  40cd2f:	mov    edi,esi
  40cd31:	mov    QWORD PTR [rbp-0x10],rax
  40cd35:	cmp    rdi,rax
  40cd38:	je     40cd57 <test_scan@@Base+0xf57>
  40cd3e:	lea    rdi,[rip+0x17d10]        # 424a55 <_IO_stdin_used@@Base+0x1a55>
  40cd45:	mov    al,0x0
  40cd47:	call   404070 <printf@plt>
  40cd4c:	mov    DWORD PTR [rbp-0x258],eax
  40cd52:	jmp    40cf1d <test_scan@@Base+0x111d>
  40cd57:	mov    eax,0x1
  40cd5c:	mov    esi,eax
  40cd5e:	mov    eax,0x4
  40cd63:	mov    edx,eax
  40cd65:	mov    rdi,QWORD PTR [rbp-0x28]
  40cd69:	mov    ecx,0x3
  40cd6e:	call   40d910 <test_scan@@Base+0x1b10>
  40cd73:	mov    ecx,0x3
  40cd78:	mov    edx,ecx
  40cd7a:	mov    QWORD PTR [rbp-0x10],rax
  40cd7e:	cmp    rdx,rax
  40cd81:	je     40cda0 <test_scan@@Base+0xfa0>
  40cd87:	lea    rdi,[rip+0x17cfa]        # 424a88 <_IO_stdin_used@@Base+0x1a88>
  40cd8e:	mov    al,0x0
  40cd90:	call   404070 <printf@plt>
  40cd95:	mov    DWORD PTR [rbp-0x25c],eax
  40cd9b:	jmp    40cf1d <test_scan@@Base+0x111d>
  40cda0:	mov    rdi,QWORD PTR [rbp-0x30]
  40cda4:	lea    rsi,[rip+0x1704b]        # 423df6 <_IO_stdin_used@@Base+0xdf6>
  40cdab:	call   40da00 <test_scan@@Base+0x1c00>
  40cdb0:	xor    ecx,ecx
  40cdb2:	mov    esi,ecx
  40cdb4:	mov    rdi,QWORD PTR [rbp-0x30]
  40cdb8:	mov    rdx,QWORD PTR [rip+0x252f1]        # 4320b0 <__data_start@@Base+0x18>
  40cdbf:	lea    rcx,[rip+0x17030]        # 423df6 <_IO_stdin_used@@Base+0xdf6>
  40cdc6:	mov    QWORD PTR [rbp-0x268],rax
  40cdcd:	call   40daa0 <test_scan@@Base+0x1ca0>
  40cdd2:	mov    r8d,0x4
  40cdd8:	mov    edx,r8d
  40cddb:	mov    rdi,QWORD PTR [rbp-0x30]
  40cddf:	lea    rsi,[rip+0x17010]        # 423df6 <_IO_stdin_used@@Base+0xdf6>
  40cde6:	mov    QWORD PTR [rbp-0x270],rax
  40cded:	call   40db80 <test_scan@@Base+0x1d80>
  40cdf2:	xor    r8d,r8d
  40cdf5:	mov    esi,r8d
  40cdf8:	mov    r8d,0x4
  40cdfe:	mov    rdi,QWORD PTR [rbp-0x30]
  40ce02:	mov    rdx,QWORD PTR [rip+0x252a7]        # 4320b0 <__data_start@@Base+0x18>
  40ce09:	lea    rcx,[rip+0x16fe6]        # 423df6 <_IO_stdin_used@@Base+0xdf6>
  40ce10:	mov    QWORD PTR [rbp-0x278],rax
  40ce17:	call   40dc20 <test_scan@@Base+0x1e20>
  40ce1c:	mov    rdi,QWORD PTR [rbp-0x30]
  40ce20:	lea    rsi,[rip+0x16fcf]        # 423df6 <_IO_stdin_used@@Base+0xdf6>
  40ce27:	mov    QWORD PTR [rbp-0x280],rax
  40ce2e:	call   40dd00 <test_scan@@Base+0x1f00>
  40ce33:	xor    r9d,r9d
  40ce36:	mov    esi,r9d
  40ce39:	mov    rdi,QWORD PTR [rbp-0x30]
  40ce3d:	mov    rdx,QWORD PTR [rip+0x2526c]        # 4320b0 <__data_start@@Base+0x18>
  40ce44:	lea    rcx,[rip+0x16fab]        # 423df6 <_IO_stdin_used@@Base+0xdf6>
  40ce4b:	mov    QWORD PTR [rbp-0x288],rax
  40ce52:	call   40dd90 <test_scan@@Base+0x1f90>
  40ce57:	mov    r9d,0x4
  40ce5d:	mov    edx,r9d
  40ce60:	mov    rdi,QWORD PTR [rbp-0x30]
  40ce64:	lea    rsi,[rip+0x16f8b]        # 423df6 <_IO_stdin_used@@Base+0xdf6>
  40ce6b:	mov    QWORD PTR [rbp-0x290],rax
  40ce72:	call   40de60 <test_scan@@Base+0x2060>
  40ce77:	xor    r9d,r9d
  40ce7a:	mov    esi,r9d
  40ce7d:	mov    r9d,0x4
  40ce83:	mov    r8d,r9d
  40ce86:	mov    rdi,QWORD PTR [rbp-0x30]
  40ce8a:	mov    rdx,QWORD PTR [rip+0x2521f]        # 4320b0 <__data_start@@Base+0x18>
  40ce91:	lea    rcx,[rip+0x16f5e]        # 423df6 <_IO_stdin_used@@Base+0xdf6>
  40ce98:	mov    QWORD PTR [rbp-0x298],rax
  40ce9f:	call   40def0 <test_scan@@Base+0x20f0>
  40cea4:	mov    rdi,QWORD PTR [rbp-0x20]
  40cea8:	mov    esi,0xd
  40cead:	mov    QWORD PTR [rbp-0x2a0],rax
  40ceb4:	call   40dfc0 <test_scan@@Base+0x21c0>
  40ceb9:	mov    esi,0x1
  40cebe:	mov    rdi,QWORD PTR [rbp-0x20]
  40cec2:	mov    rdx,QWORD PTR [rip+0x251e7]        # 4320b0 <__data_start@@Base+0x18>
  40cec9:	mov    ecx,0x2a
  40cece:	mov    QWORD PTR [rbp-0x2a8],rax
  40ced5:	call   40e090 <test_scan@@Base+0x2290>
  40ceda:	mov    rdi,QWORD PTR [rbp-0x20]
  40cede:	mov    esi,0x1
  40cee3:	mov    QWORD PTR [rbp-0x2b0],rax
  40ceea:	call   40e1a0 <test_scan@@Base+0x23a0>
  40ceef:	xor    ecx,ecx
  40cef1:	mov    esi,ecx
  40cef3:	mov    ecx,0x2
  40cef8:	mov    edx,ecx
  40cefa:	mov    rdi,QWORD PTR [rbp-0x20]
  40cefe:	mov    ecx,0x2a
  40cf03:	mov    QWORD PTR [rbp-0x2b8],rax
  40cf0a:	call   40e260 <test_scan@@Base+0x2460>
  40cf0f:	mov    DWORD PTR [rbp-0x4c],0x0
  40cf16:	mov    QWORD PTR [rbp-0x2c0],rax
  40cf1d:	mov    rdi,QWORD PTR [rbp-0x38]
  40cf21:	call   41eda0 <flatcc_builder_aligned_free@@Base>
  40cf26:	mov    eax,DWORD PTR [rbp-0x4c]
  40cf29:	add    rsp,0x2c0
  40cf30:	pop    rbp
  40cf31:	ret    
  40cf32:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cf3c:	nop    DWORD PTR [rax+0x0]
  40cf40:	push   rbp
  40cf41:	mov    rbp,rsp
  40cf44:	sub    rsp,0x10
  40cf48:	mov    QWORD PTR [rbp-0x8],rdi
  40cf4c:	mov    rdi,QWORD PTR [rbp-0x8]
  40cf50:	call   41ba80 <flatcc_builder_start_offset_vector@@Base>
  40cf55:	add    rsp,0x10
  40cf59:	pop    rbp
  40cf5a:	ret    
  40cf5b:	nop    DWORD PTR [rax+rax*1+0x0]
  40cf60:	push   rbp
  40cf61:	mov    rbp,rsp
  40cf64:	sub    rsp,0x10
  40cf68:	mov    QWORD PTR [rbp-0x8],rdi
  40cf6c:	mov    rdi,QWORD PTR [rbp-0x8]
  40cf70:	mov    rax,QWORD PTR [rbp-0x8]
  40cf74:	mov    QWORD PTR [rbp-0x10],rdi
  40cf78:	mov    rdi,rax
  40cf7b:	call   41bb90 <flatcc_builder_end_offset_vector@@Base>
  40cf80:	mov    rdi,QWORD PTR [rbp-0x10]
  40cf84:	mov    esi,eax
  40cf86:	call   4170f0 <main@@Base+0x2d00>
  40cf8b:	add    rsp,0x10
  40cf8f:	pop    rbp
  40cf90:	ret    
  40cf91:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cf9b:	nop    DWORD PTR [rax+rax*1+0x0]
  40cfa0:	push   rbp
  40cfa1:	mov    rbp,rsp
  40cfa4:	sub    rsp,0x10
  40cfa8:	mov    QWORD PTR [rbp-0x8],rdi
  40cfac:	mov    QWORD PTR [rbp-0x10],rsi
  40cfb0:	mov    rdi,QWORD PTR [rbp-0x8]
  40cfb4:	mov    rsi,QWORD PTR [rbp-0x10]
  40cfb8:	call   40d0a0 <test_scan@@Base+0x12a0>
  40cfbd:	add    rsp,0x10
  40cfc1:	pop    rbp
  40cfc2:	ret    
  40cfc3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cfcd:	nop    DWORD PTR [rax]
  40cfd0:	push   rbp
  40cfd1:	mov    rbp,rsp
  40cfd4:	sub    rsp,0x10
  40cfd8:	mov    QWORD PTR [rbp-0x8],rdi
  40cfdc:	mov    QWORD PTR [rbp-0x10],rsi
  40cfe0:	mov    rdi,QWORD PTR [rbp-0x8]
  40cfe4:	mov    rsi,QWORD PTR [rbp-0x10]
  40cfe8:	call   40d150 <test_scan@@Base+0x1350>
  40cfed:	add    rsp,0x10
  40cff1:	pop    rbp
  40cff2:	ret    
  40cff3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cffd:	nop    DWORD PTR [rax]
  40d000:	push   rbp
  40d001:	mov    rbp,rsp
  40d004:	sub    rsp,0x20
  40d008:	mov    QWORD PTR [rbp-0x8],rdi
  40d00c:	mov    QWORD PTR [rbp-0x10],rsi
  40d010:	mov    DWORD PTR [rbp-0x14],edx
  40d013:	mov    rdi,QWORD PTR [rbp-0x8]
  40d017:	mov    rsi,QWORD PTR [rbp-0x10]
  40d01b:	mov    edx,DWORD PTR [rbp-0x14]
  40d01e:	call   417780 <main@@Base+0x3390>
  40d023:	add    rsp,0x20
  40d027:	pop    rbp
  40d028:	ret    
  40d029:	nop    DWORD PTR [rax+0x0]
  40d030:	push   rbp
  40d031:	mov    rbp,rsp
  40d034:	sub    rsp,0x20
  40d038:	mov    QWORD PTR [rbp-0x8],rdi
  40d03c:	mov    QWORD PTR [rbp-0x10],rsi
  40d040:	mov    DWORD PTR [rbp-0x14],edx
  40d043:	mov    rdi,QWORD PTR [rbp-0x8]
  40d047:	mov    rsi,QWORD PTR [rbp-0x10]
  40d04b:	mov    edx,DWORD PTR [rbp-0x14]
  40d04e:	call   40d1e0 <test_scan@@Base+0x13e0>
  40d053:	add    rsp,0x20
  40d057:	pop    rbp
  40d058:	ret    
  40d059:	nop    DWORD PTR [rax+0x0]
  40d060:	push   rbp
  40d061:	mov    rbp,rsp
  40d064:	sub    rsp,0x20
  40d068:	mov    QWORD PTR [rbp-0x8],rdi
  40d06c:	mov    QWORD PTR [rbp-0x10],rsi
  40d070:	mov    QWORD PTR [rbp-0x18],rdx
  40d074:	mov    QWORD PTR [rbp-0x20],rcx
  40d078:	mov    rdi,QWORD PTR [rbp-0x8]
  40d07c:	mov    rsi,QWORD PTR [rbp-0x10]
  40d080:	mov    rdx,QWORD PTR [rbp-0x18]
  40d084:	mov    rcx,QWORD PTR [rbp-0x20]
  40d088:	call   40d350 <test_scan@@Base+0x1550>
  40d08d:	add    rsp,0x20
  40d091:	pop    rbp
  40d092:	ret    
  40d093:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d09d:	nop    DWORD PTR [rax]
  40d0a0:	push   rbp
  40d0a1:	mov    rbp,rsp
  40d0a4:	sub    rsp,0x30
  40d0a8:	mov    QWORD PTR [rbp-0x10],rdi
  40d0ac:	mov    QWORD PTR [rbp-0x18],rsi
  40d0b0:	mov    QWORD PTR [rbp-0x28],0x0
  40d0b8:	mov    rax,QWORD PTR [rbp-0x28]
  40d0bc:	mov    rdi,QWORD PTR [rbp-0x10]
  40d0c0:	mov    QWORD PTR [rbp-0x30],rax
  40d0c4:	call   408c20 <verify_monster@@Base+0x2010>
  40d0c9:	mov    rdi,QWORD PTR [rbp-0x30]
  40d0cd:	cmp    rdi,rax
  40d0d0:	jae    40d12c <test_scan@@Base+0x132c>
  40d0d6:	mov    rdi,QWORD PTR [rbp-0x10]
  40d0da:	mov    rsi,QWORD PTR [rbp-0x28]
  40d0de:	call   408c70 <verify_monster@@Base+0x2060>
  40d0e3:	mov    rdi,rax
  40d0e6:	call   408050 <verify_monster@@Base+0x1440>
  40d0eb:	xor    ecx,ecx
  40d0ed:	mov    edx,ecx
  40d0ef:	mov    QWORD PTR [rbp-0x20],rax
  40d0f3:	mov    rdi,QWORD PTR [rbp-0x20]
  40d0f7:	mov    rsi,QWORD PTR [rbp-0x18]
  40d0fb:	call   417750 <main@@Base+0x3360>
  40d100:	cmp    eax,0x0
  40d103:	jne    40d116 <test_scan@@Base+0x1316>
  40d109:	mov    rax,QWORD PTR [rbp-0x28]
  40d10d:	mov    QWORD PTR [rbp-0x8],rax
  40d111:	jmp    40d137 <test_scan@@Base+0x1337>
  40d116:	jmp    40d11b <test_scan@@Base+0x131b>
  40d11b:	mov    rax,QWORD PTR [rbp-0x28]
  40d11f:	add    rax,0x1
  40d123:	mov    QWORD PTR [rbp-0x28],rax
  40d127:	jmp    40d0b8 <test_scan@@Base+0x12b8>
  40d12c:	mov    rax,QWORD PTR [rip+0x24f75]        # 4320a8 <__data_start@@Base+0x10>
  40d133:	mov    QWORD PTR [rbp-0x8],rax
  40d137:	mov    rax,QWORD PTR [rbp-0x8]
  40d13b:	add    rsp,0x30
  40d13f:	pop    rbp
  40d140:	ret    
  40d141:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d14b:	nop    DWORD PTR [rax+rax*1+0x0]
  40d150:	push   rbp
  40d151:	mov    rbp,rsp
  40d154:	sub    rsp,0x30
  40d158:	mov    QWORD PTR [rbp-0x10],rdi
  40d15c:	mov    QWORD PTR [rbp-0x18],rsi
  40d160:	mov    rdi,QWORD PTR [rbp-0x10]
  40d164:	call   408c20 <verify_monster@@Base+0x2010>
  40d169:	mov    QWORD PTR [rbp-0x28],rax
  40d16d:	mov    rax,QWORD PTR [rbp-0x28]
  40d171:	mov    rcx,rax
  40d174:	add    rcx,0xffffffffffffffff
  40d178:	mov    QWORD PTR [rbp-0x28],rcx
  40d17c:	cmp    rax,0x0
  40d180:	jbe    40d1cb <test_scan@@Base+0x13cb>
  40d186:	mov    rdi,QWORD PTR [rbp-0x10]
  40d18a:	mov    rsi,QWORD PTR [rbp-0x28]
  40d18e:	call   408c70 <verify_monster@@Base+0x2060>
  40d193:	mov    rdi,rax
  40d196:	call   408050 <verify_monster@@Base+0x1440>
  40d19b:	xor    ecx,ecx
  40d19d:	mov    edx,ecx
  40d19f:	mov    QWORD PTR [rbp-0x20],rax
  40d1a3:	mov    rdi,QWORD PTR [rbp-0x20]
  40d1a7:	mov    rsi,QWORD PTR [rbp-0x18]
  40d1ab:	call   417750 <main@@Base+0x3360>
  40d1b0:	cmp    eax,0x0
  40d1b3:	jne    40d1c6 <test_scan@@Base+0x13c6>
  40d1b9:	mov    rax,QWORD PTR [rbp-0x28]
  40d1bd:	mov    QWORD PTR [rbp-0x8],rax
  40d1c1:	jmp    40d1d6 <test_scan@@Base+0x13d6>
  40d1c6:	jmp    40d16d <test_scan@@Base+0x136d>
  40d1cb:	mov    rax,QWORD PTR [rip+0x24ed6]        # 4320a8 <__data_start@@Base+0x10>
  40d1d2:	mov    QWORD PTR [rbp-0x8],rax
  40d1d6:	mov    rax,QWORD PTR [rbp-0x8]
  40d1da:	add    rsp,0x30
  40d1de:	pop    rbp
  40d1df:	ret    
  40d1e0:	push   rbp
  40d1e1:	mov    rbp,rsp
  40d1e4:	sub    rsp,0x30
  40d1e8:	mov    QWORD PTR [rbp-0x10],rdi
  40d1ec:	mov    QWORD PTR [rbp-0x18],rsi
  40d1f0:	mov    DWORD PTR [rbp-0x1c],edx
  40d1f3:	mov    rdi,QWORD PTR [rbp-0x10]
  40d1f7:	call   408c20 <verify_monster@@Base+0x2010>
  40d1fc:	mov    QWORD PTR [rbp-0x30],rax
  40d200:	mov    rax,QWORD PTR [rbp-0x30]
  40d204:	mov    rcx,rax
  40d207:	add    rcx,0xffffffffffffffff
  40d20b:	mov    QWORD PTR [rbp-0x30],rcx
  40d20f:	cmp    rax,0x0
  40d213:	jbe    40d25e <test_scan@@Base+0x145e>
  40d219:	mov    rdi,QWORD PTR [rbp-0x10]
  40d21d:	mov    rsi,QWORD PTR [rbp-0x30]
  40d221:	call   408c70 <verify_monster@@Base+0x2060>
  40d226:	mov    rdi,rax
  40d229:	call   408050 <verify_monster@@Base+0x1440>
  40d22e:	mov    QWORD PTR [rbp-0x28],rax
  40d232:	mov    rdi,QWORD PTR [rbp-0x28]
  40d236:	mov    rsi,QWORD PTR [rbp-0x18]
  40d23a:	movsxd rdx,DWORD PTR [rbp-0x1c]
  40d23e:	call   417680 <main@@Base+0x3290>
  40d243:	cmp    eax,0x0
  40d246:	jne    40d259 <test_scan@@Base+0x1459>
  40d24c:	mov    rax,QWORD PTR [rbp-0x30]
  40d250:	mov    QWORD PTR [rbp-0x8],rax
  40d254:	jmp    40d269 <test_scan@@Base+0x1469>
  40d259:	jmp    40d200 <test_scan@@Base+0x1400>
  40d25e:	mov    rax,QWORD PTR [rip+0x24e43]        # 4320a8 <__data_start@@Base+0x10>
  40d265:	mov    QWORD PTR [rbp-0x8],rax
  40d269:	mov    rax,QWORD PTR [rbp-0x8]
  40d26d:	add    rsp,0x30
  40d271:	pop    rbp
  40d272:	ret    
  40d273:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d27d:	nop    DWORD PTR [rax]
  40d280:	push   rbp
  40d281:	mov    rbp,rsp
  40d284:	sub    rsp,0x50
  40d288:	mov    QWORD PTR [rbp-0x10],rdi
  40d28c:	mov    QWORD PTR [rbp-0x18],rsi
  40d290:	mov    QWORD PTR [rbp-0x20],rdx
  40d294:	mov    QWORD PTR [rbp-0x28],rcx
  40d298:	mov    DWORD PTR [rbp-0x2c],r8d
  40d29c:	mov    rcx,QWORD PTR [rbp-0x20]
  40d2a0:	mov    rdi,QWORD PTR [rbp-0x10]
  40d2a4:	mov    QWORD PTR [rbp-0x48],rcx
  40d2a8:	call   408c20 <verify_monster@@Base+0x2010>
  40d2ad:	mov    rcx,QWORD PTR [rbp-0x48]
  40d2b1:	cmp    rcx,rax
  40d2b4:	jae    40d2c7 <test_scan@@Base+0x14c7>
  40d2ba:	mov    rax,QWORD PTR [rbp-0x20]
  40d2be:	mov    QWORD PTR [rbp-0x50],rax
  40d2c2:	jmp    40d2d4 <test_scan@@Base+0x14d4>
  40d2c7:	mov    rdi,QWORD PTR [rbp-0x10]
  40d2cb:	call   408c20 <verify_monster@@Base+0x2010>
  40d2d0:	mov    QWORD PTR [rbp-0x50],rax
  40d2d4:	mov    rax,QWORD PTR [rbp-0x50]
  40d2d8:	mov    QWORD PTR [rbp-0x40],rax
  40d2dc:	mov    rax,QWORD PTR [rbp-0x40]
  40d2e0:	mov    rcx,rax
  40d2e3:	add    rcx,0xffffffffffffffff
  40d2e7:	mov    QWORD PTR [rbp-0x40],rcx
  40d2eb:	cmp    rax,QWORD PTR [rbp-0x18]
  40d2ef:	jbe    40d33a <test_scan@@Base+0x153a>
  40d2f5:	mov    rdi,QWORD PTR [rbp-0x10]
  40d2f9:	mov    rsi,QWORD PTR [rbp-0x40]
  40d2fd:	call   408c70 <verify_monster@@Base+0x2060>
  40d302:	mov    rdi,rax
  40d305:	call   408050 <verify_monster@@Base+0x1440>
  40d30a:	mov    QWORD PTR [rbp-0x38],rax
  40d30e:	mov    rdi,QWORD PTR [rbp-0x38]
  40d312:	mov    rsi,QWORD PTR [rbp-0x28]
  40d316:	movsxd rdx,DWORD PTR [rbp-0x2c]
  40d31a:	call   417680 <main@@Base+0x3290>
  40d31f:	cmp    eax,0x0
  40d322:	jne    40d335 <test_scan@@Base+0x1535>
  40d328:	mov    rax,QWORD PTR [rbp-0x40]
  40d32c:	mov    QWORD PTR [rbp-0x8],rax
  40d330:	jmp    40d345 <test_scan@@Base+0x1545>
  40d335:	jmp    40d2dc <test_scan@@Base+0x14dc>
  40d33a:	mov    rax,QWORD PTR [rip+0x24d67]        # 4320a8 <__data_start@@Base+0x10>
  40d341:	mov    QWORD PTR [rbp-0x8],rax
  40d345:	mov    rax,QWORD PTR [rbp-0x8]
  40d349:	add    rsp,0x50
  40d34d:	pop    rbp
  40d34e:	ret    
  40d34f:	nop
  40d350:	push   rbp
  40d351:	mov    rbp,rsp
  40d354:	sub    rsp,0x50
  40d358:	mov    QWORD PTR [rbp-0x10],rdi
  40d35c:	mov    QWORD PTR [rbp-0x18],rsi
  40d360:	mov    QWORD PTR [rbp-0x20],rdx
  40d364:	mov    QWORD PTR [rbp-0x28],rcx
  40d368:	mov    rcx,QWORD PTR [rbp-0x18]
  40d36c:	mov    QWORD PTR [rbp-0x38],rcx
  40d370:	mov    rax,QWORD PTR [rbp-0x38]
  40d374:	mov    rcx,QWORD PTR [rbp-0x20]
  40d378:	mov    rdi,QWORD PTR [rbp-0x10]
  40d37c:	mov    QWORD PTR [rbp-0x40],rax
  40d380:	mov    QWORD PTR [rbp-0x48],rcx
  40d384:	call   408c20 <verify_monster@@Base+0x2010>
  40d389:	mov    rcx,QWORD PTR [rbp-0x48]
  40d38d:	cmp    rcx,rax
  40d390:	jae    40d3a3 <test_scan@@Base+0x15a3>
  40d396:	mov    rax,QWORD PTR [rbp-0x20]
  40d39a:	mov    QWORD PTR [rbp-0x50],rax
  40d39e:	jmp    40d3b0 <test_scan@@Base+0x15b0>
  40d3a3:	mov    rdi,QWORD PTR [rbp-0x10]
  40d3a7:	call   408c20 <verify_monster@@Base+0x2010>
  40d3ac:	mov    QWORD PTR [rbp-0x50],rax
  40d3b0:	mov    rax,QWORD PTR [rbp-0x50]
  40d3b4:	mov    rcx,QWORD PTR [rbp-0x40]
  40d3b8:	cmp    rcx,rax
  40d3bb:	jae    40d417 <test_scan@@Base+0x1617>
  40d3c1:	mov    rdi,QWORD PTR [rbp-0x10]
  40d3c5:	mov    rsi,QWORD PTR [rbp-0x38]
  40d3c9:	call   408c70 <verify_monster@@Base+0x2060>
  40d3ce:	mov    rdi,rax
  40d3d1:	call   408050 <verify_monster@@Base+0x1440>
  40d3d6:	xor    ecx,ecx
  40d3d8:	mov    edx,ecx
  40d3da:	mov    QWORD PTR [rbp-0x30],rax
  40d3de:	mov    rdi,QWORD PTR [rbp-0x30]
  40d3e2:	mov    rsi,QWORD PTR [rbp-0x28]
  40d3e6:	call   417750 <main@@Base+0x3360>
  40d3eb:	cmp    eax,0x0
  40d3ee:	jne    40d401 <test_scan@@Base+0x1601>
  40d3f4:	mov    rax,QWORD PTR [rbp-0x38]
  40d3f8:	mov    QWORD PTR [rbp-0x8],rax
  40d3fc:	jmp    40d422 <test_scan@@Base+0x1622>
  40d401:	jmp    40d406 <test_scan@@Base+0x1606>
  40d406:	mov    rax,QWORD PTR [rbp-0x38]
  40d40a:	add    rax,0x1
  40d40e:	mov    QWORD PTR [rbp-0x38],rax
  40d412:	jmp    40d370 <test_scan@@Base+0x1570>
  40d417:	mov    rax,QWORD PTR [rip+0x24c8a]        # 4320a8 <__data_start@@Base+0x10>
  40d41e:	mov    QWORD PTR [rbp-0x8],rax
  40d422:	mov    rax,QWORD PTR [rbp-0x8]
  40d426:	add    rsp,0x50
  40d42a:	pop    rbp
  40d42b:	ret    
  40d42c:	nop    DWORD PTR [rax+0x0]
  40d430:	push   rbp
  40d431:	mov    rbp,rsp
  40d434:	sub    rsp,0x60
  40d438:	mov    QWORD PTR [rbp-0x10],rdi
  40d43c:	mov    QWORD PTR [rbp-0x18],rsi
  40d440:	mov    QWORD PTR [rbp-0x20],rdx
  40d444:	mov    QWORD PTR [rbp-0x28],rcx
  40d448:	mov    DWORD PTR [rbp-0x2c],r8d
  40d44c:	mov    rcx,QWORD PTR [rbp-0x18]
  40d450:	mov    QWORD PTR [rbp-0x40],rcx
  40d454:	mov    rax,QWORD PTR [rbp-0x40]
  40d458:	mov    rcx,QWORD PTR [rbp-0x20]
  40d45c:	mov    rdi,QWORD PTR [rbp-0x10]
  40d460:	mov    QWORD PTR [rbp-0x48],rax
  40d464:	mov    QWORD PTR [rbp-0x50],rcx
  40d468:	call   408c20 <verify_monster@@Base+0x2010>
  40d46d:	mov    rcx,QWORD PTR [rbp-0x50]
  40d471:	cmp    rcx,rax
  40d474:	jae    40d487 <test_scan@@Base+0x1687>
  40d47a:	mov    rax,QWORD PTR [rbp-0x20]
  40d47e:	mov    QWORD PTR [rbp-0x58],rax
  40d482:	jmp    40d494 <test_scan@@Base+0x1694>
  40d487:	mov    rdi,QWORD PTR [rbp-0x10]
  40d48b:	call   408c20 <verify_monster@@Base+0x2010>
  40d490:	mov    QWORD PTR [rbp-0x58],rax
  40d494:	mov    rax,QWORD PTR [rbp-0x58]
  40d498:	mov    rcx,QWORD PTR [rbp-0x48]
  40d49c:	cmp    rcx,rax
  40d49f:	jae    40d4fb <test_scan@@Base+0x16fb>
  40d4a5:	mov    rdi,QWORD PTR [rbp-0x10]
  40d4a9:	mov    rsi,QWORD PTR [rbp-0x40]
  40d4ad:	call   408c70 <verify_monster@@Base+0x2060>
  40d4b2:	mov    rdi,rax
  40d4b5:	call   408050 <verify_monster@@Base+0x1440>
  40d4ba:	mov    QWORD PTR [rbp-0x38],rax
  40d4be:	mov    rdi,QWORD PTR [rbp-0x38]
  40d4c2:	mov    rsi,QWORD PTR [rbp-0x28]
  40d4c6:	movsxd rdx,DWORD PTR [rbp-0x2c]
  40d4ca:	call   417680 <main@@Base+0x3290>
  40d4cf:	cmp    eax,0x0
  40d4d2:	jne    40d4e5 <test_scan@@Base+0x16e5>
  40d4d8:	mov    rax,QWORD PTR [rbp-0x40]
  40d4dc:	mov    QWORD PTR [rbp-0x8],rax
  40d4e0:	jmp    40d506 <test_scan@@Base+0x1706>
  40d4e5:	jmp    40d4ea <test_scan@@Base+0x16ea>
  40d4ea:	mov    rax,QWORD PTR [rbp-0x40]
  40d4ee:	add    rax,0x1
  40d4f2:	mov    QWORD PTR [rbp-0x40],rax
  40d4f6:	jmp    40d454 <test_scan@@Base+0x1654>
  40d4fb:	mov    rax,QWORD PTR [rip+0x24ba6]        # 4320a8 <__data_start@@Base+0x10>
  40d502:	mov    QWORD PTR [rbp-0x8],rax
  40d506:	mov    rax,QWORD PTR [rbp-0x8]
  40d50a:	add    rsp,0x60
  40d50e:	pop    rbp
  40d50f:	ret    
  40d510:	push   rbp
  40d511:	mov    rbp,rsp
  40d514:	sub    rsp,0x20
  40d518:	mov    QWORD PTR [rbp-0x8],rdi
  40d51c:	mov    QWORD PTR [rbp-0x10],rsi
  40d520:	mov    QWORD PTR [rbp-0x18],rdx
  40d524:	mov    QWORD PTR [rbp-0x20],rcx
  40d528:	mov    rdi,QWORD PTR [rbp-0x8]
  40d52c:	mov    rsi,QWORD PTR [rbp-0x10]
  40d530:	mov    rdx,QWORD PTR [rbp-0x18]
  40d534:	mov    rcx,QWORD PTR [rbp-0x20]
  40d538:	call   40d550 <test_scan@@Base+0x1750>
  40d53d:	add    rsp,0x20
  40d541:	pop    rbp
  40d542:	ret    
  40d543:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d54d:	nop    DWORD PTR [rax]
  40d550:	push   rbp
  40d551:	mov    rbp,rsp
  40d554:	sub    rsp,0x50
  40d558:	mov    QWORD PTR [rbp-0x10],rdi
  40d55c:	mov    QWORD PTR [rbp-0x18],rsi
  40d560:	mov    QWORD PTR [rbp-0x20],rdx
  40d564:	mov    QWORD PTR [rbp-0x28],rcx
  40d568:	mov    rcx,QWORD PTR [rbp-0x20]
  40d56c:	mov    rdi,QWORD PTR [rbp-0x10]
  40d570:	mov    QWORD PTR [rbp-0x40],rcx
  40d574:	call   408c20 <verify_monster@@Base+0x2010>
  40d579:	mov    rcx,QWORD PTR [rbp-0x40]
  40d57d:	cmp    rcx,rax
  40d580:	jae    40d593 <test_scan@@Base+0x1793>
  40d586:	mov    rax,QWORD PTR [rbp-0x20]
  40d58a:	mov    QWORD PTR [rbp-0x48],rax
  40d58e:	jmp    40d5a0 <test_scan@@Base+0x17a0>
  40d593:	mov    rdi,QWORD PTR [rbp-0x10]
  40d597:	call   408c20 <verify_monster@@Base+0x2010>
  40d59c:	mov    QWORD PTR [rbp-0x48],rax
  40d5a0:	mov    rax,QWORD PTR [rbp-0x48]
  40d5a4:	mov    QWORD PTR [rbp-0x38],rax
  40d5a8:	mov    rax,QWORD PTR [rbp-0x38]
  40d5ac:	mov    rcx,rax
  40d5af:	add    rcx,0xffffffffffffffff
  40d5b3:	mov    QWORD PTR [rbp-0x38],rcx
  40d5b7:	cmp    rax,QWORD PTR [rbp-0x18]
  40d5bb:	jbe    40d606 <test_scan@@Base+0x1806>
  40d5c1:	mov    rdi,QWORD PTR [rbp-0x10]
  40d5c5:	mov    rsi,QWORD PTR [rbp-0x38]
  40d5c9:	call   408c70 <verify_monster@@Base+0x2060>
  40d5ce:	mov    rdi,rax
  40d5d1:	call   408050 <verify_monster@@Base+0x1440>
  40d5d6:	xor    ecx,ecx
  40d5d8:	mov    edx,ecx
  40d5da:	mov    QWORD PTR [rbp-0x30],rax
  40d5de:	mov    rdi,QWORD PTR [rbp-0x30]
  40d5e2:	mov    rsi,QWORD PTR [rbp-0x28]
  40d5e6:	call   417750 <main@@Base+0x3360>
  40d5eb:	cmp    eax,0x0
  40d5ee:	jne    40d601 <test_scan@@Base+0x1801>
  40d5f4:	mov    rax,QWORD PTR [rbp-0x38]
  40d5f8:	mov    QWORD PTR [rbp-0x8],rax
  40d5fc:	jmp    40d611 <test_scan@@Base+0x1811>
  40d601:	jmp    40d5a8 <test_scan@@Base+0x17a8>
  40d606:	mov    rax,QWORD PTR [rip+0x24a9b]        # 4320a8 <__data_start@@Base+0x10>
  40d60d:	mov    QWORD PTR [rbp-0x8],rax
  40d611:	mov    rax,QWORD PTR [rbp-0x8]
  40d615:	add    rsp,0x50
  40d619:	pop    rbp
  40d61a:	ret    
  40d61b:	nop    DWORD PTR [rax+rax*1+0x0]
  40d620:	push   rbp
  40d621:	mov    rbp,rsp
  40d624:	sub    rsp,0x20
  40d628:	mov    QWORD PTR [rbp-0x8],rdi
  40d62c:	mov    QWORD PTR [rbp-0x10],rsi
  40d630:	mov    QWORD PTR [rbp-0x20],0x0
  40d638:	mov    rdi,QWORD PTR [rbp-0x8]
  40d63c:	mov    rsi,QWORD PTR [rbp-0x10]
  40d640:	call   40cfa0 <test_scan@@Base+0x11a0>
  40d645:	mov    QWORD PTR [rbp-0x18],rax
  40d649:	mov    rax,QWORD PTR [rbp-0x18]
  40d64d:	cmp    rax,QWORD PTR [rip+0x24a54]        # 4320a8 <__data_start@@Base+0x10>
  40d654:	je     40d68e <test_scan@@Base+0x188e>
  40d65a:	mov    rax,QWORD PTR [rbp-0x20]
  40d65e:	add    rax,0x1
  40d662:	mov    QWORD PTR [rbp-0x20],rax
  40d666:	mov    rdi,QWORD PTR [rbp-0x8]
  40d66a:	mov    rax,QWORD PTR [rbp-0x18]
  40d66e:	add    rax,0x1
  40d672:	mov    rdx,QWORD PTR [rip+0x24a37]        # 4320b0 <__data_start@@Base+0x18>
  40d679:	mov    rcx,QWORD PTR [rbp-0x10]
  40d67d:	mov    rsi,rax
  40d680:	call   40d060 <test_scan@@Base+0x1260>
  40d685:	mov    QWORD PTR [rbp-0x18],rax
  40d689:	jmp    40d649 <test_scan@@Base+0x1849>
  40d68e:	mov    rax,QWORD PTR [rbp-0x20]
  40d692:	add    rsp,0x20
  40d696:	pop    rbp
  40d697:	ret    
  40d698:	nop    DWORD PTR [rax+rax*1+0x0]
  40d6a0:	push   rbp
  40d6a1:	mov    rbp,rsp
  40d6a4:	sub    rsp,0x30
  40d6a8:	mov    al,sil
  40d6ab:	mov    QWORD PTR [rbp-0x10],rdi
  40d6af:	mov    BYTE PTR [rbp-0x11],al
  40d6b2:	mov    QWORD PTR [rbp-0x20],0x0
  40d6ba:	mov    rax,QWORD PTR [rbp-0x20]
  40d6be:	mov    rdi,QWORD PTR [rbp-0x10]
  40d6c2:	mov    QWORD PTR [rbp-0x28],rax
  40d6c6:	call   4085d0 <verify_monster@@Base+0x19c0>
  40d6cb:	mov    rdi,QWORD PTR [rbp-0x28]
  40d6cf:	cmp    rdi,rax
  40d6d2:	jae    40d74a <test_scan@@Base+0x194a>
  40d6d8:	mov    rdi,QWORD PTR [rbp-0x10]
  40d6dc:	mov    rsi,QWORD PTR [rbp-0x20]
  40d6e0:	call   4085f0 <verify_monster@@Base+0x19e0>
  40d6e5:	mov    BYTE PTR [rbp-0x12],al
  40d6e8:	movzx  ecx,BYTE PTR [rbp-0x12]
  40d6ec:	movzx  edx,BYTE PTR [rbp-0x11]
  40d6f0:	cmp    ecx,edx
  40d6f2:	jge    40d705 <test_scan@@Base+0x1905>
  40d6f8:	mov    eax,0xffffffff
  40d6fd:	mov    DWORD PTR [rbp-0x2c],eax
  40d700:	jmp    40d71b <test_scan@@Base+0x191b>
  40d705:	movzx  eax,BYTE PTR [rbp-0x12]
  40d709:	movzx  ecx,BYTE PTR [rbp-0x11]
  40d70d:	cmp    eax,ecx
  40d70f:	setg   dl
  40d712:	and    dl,0x1
  40d715:	movzx  eax,dl
  40d718:	mov    DWORD PTR [rbp-0x2c],eax
  40d71b:	mov    eax,DWORD PTR [rbp-0x2c]
  40d71e:	cmp    eax,0x0
  40d721:	jne    40d734 <test_scan@@Base+0x1934>
  40d727:	mov    rax,QWORD PTR [rbp-0x20]
  40d72b:	mov    QWORD PTR [rbp-0x8],rax
  40d72f:	jmp    40d755 <test_scan@@Base+0x1955>
  40d734:	jmp    40d739 <test_scan@@Base+0x1939>
  40d739:	mov    rax,QWORD PTR [rbp-0x20]
  40d73d:	add    rax,0x1
  40d741:	mov    QWORD PTR [rbp-0x20],rax
  40d745:	jmp    40d6ba <test_scan@@Base+0x18ba>
  40d74a:	mov    rax,QWORD PTR [rip+0x24957]        # 4320a8 <__data_start@@Base+0x10>
  40d751:	mov    QWORD PTR [rbp-0x8],rax
  40d755:	mov    rax,QWORD PTR [rbp-0x8]
  40d759:	add    rsp,0x30
  40d75d:	pop    rbp
  40d75e:	ret    
  40d75f:	nop
  40d760:	push   rbp
  40d761:	mov    rbp,rsp
  40d764:	sub    rsp,0x50
  40d768:	mov    al,cl
  40d76a:	mov    QWORD PTR [rbp-0x10],rdi
  40d76e:	mov    QWORD PTR [rbp-0x18],rsi
  40d772:	mov    QWORD PTR [rbp-0x20],rdx
  40d776:	mov    BYTE PTR [rbp-0x21],al
  40d779:	mov    rdx,QWORD PTR [rbp-0x18]
  40d77d:	mov    QWORD PTR [rbp-0x30],rdx
  40d781:	mov    rax,QWORD PTR [rbp-0x30]
  40d785:	mov    rcx,QWORD PTR [rbp-0x20]
  40d789:	mov    rdi,QWORD PTR [rbp-0x10]
  40d78d:	mov    QWORD PTR [rbp-0x38],rax
  40d791:	mov    QWORD PTR [rbp-0x40],rcx
  40d795:	call   4085d0 <verify_monster@@Base+0x19c0>
  40d79a:	mov    rcx,QWORD PTR [rbp-0x40]
  40d79e:	cmp    rcx,rax
  40d7a1:	jae    40d7b4 <test_scan@@Base+0x19b4>
  40d7a7:	mov    rax,QWORD PTR [rbp-0x20]
  40d7ab:	mov    QWORD PTR [rbp-0x48],rax
  40d7af:	jmp    40d7c1 <test_scan@@Base+0x19c1>
  40d7b4:	mov    rdi,QWORD PTR [rbp-0x10]
  40d7b8:	call   4085d0 <verify_monster@@Base+0x19c0>
  40d7bd:	mov    QWORD PTR [rbp-0x48],rax
  40d7c1:	mov    rax,QWORD PTR [rbp-0x48]
  40d7c5:	mov    rcx,QWORD PTR [rbp-0x38]
  40d7c9:	cmp    rcx,rax
  40d7cc:	jae    40d844 <test_scan@@Base+0x1a44>
  40d7d2:	mov    rdi,QWORD PTR [rbp-0x10]
  40d7d6:	mov    rsi,QWORD PTR [rbp-0x30]
  40d7da:	call   4085f0 <verify_monster@@Base+0x19e0>
  40d7df:	mov    BYTE PTR [rbp-0x22],al
  40d7e2:	movzx  ecx,BYTE PTR [rbp-0x22]
  40d7e6:	movzx  edx,BYTE PTR [rbp-0x21]
  40d7ea:	cmp    ecx,edx
  40d7ec:	jge    40d7ff <test_scan@@Base+0x19ff>
  40d7f2:	mov    eax,0xffffffff
  40d7f7:	mov    DWORD PTR [rbp-0x4c],eax
  40d7fa:	jmp    40d815 <test_scan@@Base+0x1a15>
  40d7ff:	movzx  eax,BYTE PTR [rbp-0x22]
  40d803:	movzx  ecx,BYTE PTR [rbp-0x21]
  40d807:	cmp    eax,ecx
  40d809:	setg   dl
  40d80c:	and    dl,0x1
  40d80f:	movzx  eax,dl
  40d812:	mov    DWORD PTR [rbp-0x4c],eax
  40d815:	mov    eax,DWORD PTR [rbp-0x4c]
  40d818:	cmp    eax,0x0
  40d81b:	jne    40d82e <test_scan@@Base+0x1a2e>
  40d821:	mov    rax,QWORD PTR [rbp-0x30]
  40d825:	mov    QWORD PTR [rbp-0x8],rax
  40d829:	jmp    40d84f <test_scan@@Base+0x1a4f>
  40d82e:	jmp    40d833 <test_scan@@Base+0x1a33>
  40d833:	mov    rax,QWORD PTR [rbp-0x30]
  40d837:	add    rax,0x1
  40d83b:	mov    QWORD PTR [rbp-0x30],rax
  40d83f:	jmp    40d781 <test_scan@@Base+0x1981>
  40d844:	mov    rax,QWORD PTR [rip+0x2485d]        # 4320a8 <__data_start@@Base+0x10>
  40d84b:	mov    QWORD PTR [rbp-0x8],rax
  40d84f:	mov    rax,QWORD PTR [rbp-0x8]
  40d853:	add    rsp,0x50
  40d857:	pop    rbp
  40d858:	ret    
  40d859:	nop    DWORD PTR [rax+0x0]
  40d860:	push   rbp
  40d861:	mov    rbp,rsp
  40d864:	sub    rsp,0x30
  40d868:	mov    al,sil
  40d86b:	mov    QWORD PTR [rbp-0x10],rdi
  40d86f:	mov    BYTE PTR [rbp-0x11],al
  40d872:	mov    rdi,QWORD PTR [rbp-0x10]
  40d876:	call   4085d0 <verify_monster@@Base+0x19c0>
  40d87b:	mov    QWORD PTR [rbp-0x20],rax
  40d87f:	mov    rax,QWORD PTR [rbp-0x20]
  40d883:	mov    rcx,rax
  40d886:	add    rcx,0xffffffffffffffff
  40d88a:	mov    QWORD PTR [rbp-0x20],rcx
  40d88e:	cmp    rax,0x0
  40d892:	jbe    40d8f9 <test_scan@@Base+0x1af9>
  40d898:	mov    rdi,QWORD PTR [rbp-0x10]
  40d89c:	mov    rsi,QWORD PTR [rbp-0x20]
  40d8a0:	call   4085f0 <verify_monster@@Base+0x19e0>
  40d8a5:	mov    BYTE PTR [rbp-0x12],al
  40d8a8:	movzx  ecx,BYTE PTR [rbp-0x12]
  40d8ac:	movzx  edx,BYTE PTR [rbp-0x11]
  40d8b0:	cmp    ecx,edx
  40d8b2:	jge    40d8c5 <test_scan@@Base+0x1ac5>
  40d8b8:	mov    eax,0xffffffff
  40d8bd:	mov    DWORD PTR [rbp-0x24],eax
  40d8c0:	jmp    40d8db <test_scan@@Base+0x1adb>
  40d8c5:	movzx  eax,BYTE PTR [rbp-0x12]
  40d8c9:	movzx  ecx,BYTE PTR [rbp-0x11]
  40d8cd:	cmp    eax,ecx
  40d8cf:	setg   dl
  40d8d2:	and    dl,0x1
  40d8d5:	movzx  eax,dl
  40d8d8:	mov    DWORD PTR [rbp-0x24],eax
  40d8db:	mov    eax,DWORD PTR [rbp-0x24]
  40d8de:	cmp    eax,0x0
  40d8e1:	jne    40d8f4 <test_scan@@Base+0x1af4>
  40d8e7:	mov    rax,QWORD PTR [rbp-0x20]
  40d8eb:	mov    QWORD PTR [rbp-0x8],rax
  40d8ef:	jmp    40d904 <test_scan@@Base+0x1b04>
  40d8f4:	jmp    40d87f <test_scan@@Base+0x1a7f>
  40d8f9:	mov    rax,QWORD PTR [rip+0x247a8]        # 4320a8 <__data_start@@Base+0x10>
  40d900:	mov    QWORD PTR [rbp-0x8],rax
  40d904:	mov    rax,QWORD PTR [rbp-0x8]
  40d908:	add    rsp,0x30
  40d90c:	pop    rbp
  40d90d:	ret    
  40d90e:	xchg   ax,ax
  40d910:	push   rbp
  40d911:	mov    rbp,rsp
  40d914:	sub    rsp,0x50
  40d918:	mov    al,cl
  40d91a:	mov    QWORD PTR [rbp-0x10],rdi
  40d91e:	mov    QWORD PTR [rbp-0x18],rsi
  40d922:	mov    QWORD PTR [rbp-0x20],rdx
  40d926:	mov    BYTE PTR [rbp-0x21],al
  40d929:	mov    rdx,QWORD PTR [rbp-0x20]
  40d92d:	mov    rdi,QWORD PTR [rbp-0x10]
  40d931:	mov    QWORD PTR [rbp-0x38],rdx
  40d935:	call   4085d0 <verify_monster@@Base+0x19c0>
  40d93a:	mov    rdx,QWORD PTR [rbp-0x38]
  40d93e:	cmp    rdx,rax
  40d941:	jae    40d954 <test_scan@@Base+0x1b54>
  40d947:	mov    rax,QWORD PTR [rbp-0x20]
  40d94b:	mov    QWORD PTR [rbp-0x40],rax
  40d94f:	jmp    40d961 <test_scan@@Base+0x1b61>
  40d954:	mov    rdi,QWORD PTR [rbp-0x10]
  40d958:	call   4085d0 <verify_monster@@Base+0x19c0>
  40d95d:	mov    QWORD PTR [rbp-0x40],rax
  40d961:	mov    rax,QWORD PTR [rbp-0x40]
  40d965:	mov    QWORD PTR [rbp-0x30],rax
  40d969:	mov    rax,QWORD PTR [rbp-0x30]
  40d96d:	mov    rcx,rax
  40d970:	add    rcx,0xffffffffffffffff
  40d974:	mov    QWORD PTR [rbp-0x30],rcx
  40d978:	cmp    rax,QWORD PTR [rbp-0x18]
  40d97c:	jbe    40d9e3 <test_scan@@Base+0x1be3>
  40d982:	mov    rdi,QWORD PTR [rbp-0x10]
  40d986:	mov    rsi,QWORD PTR [rbp-0x30]
  40d98a:	call   4085f0 <verify_monster@@Base+0x19e0>
  40d98f:	mov    BYTE PTR [rbp-0x22],al
  40d992:	movzx  ecx,BYTE PTR [rbp-0x22]
  40d996:	movzx  edx,BYTE PTR [rbp-0x21]
  40d99a:	cmp    ecx,edx
  40d99c:	jge    40d9af <test_scan@@Base+0x1baf>
  40d9a2:	mov    eax,0xffffffff
  40d9a7:	mov    DWORD PTR [rbp-0x44],eax
  40d9aa:	jmp    40d9c5 <test_scan@@Base+0x1bc5>
  40d9af:	movzx  eax,BYTE PTR [rbp-0x22]
  40d9b3:	movzx  ecx,BYTE PTR [rbp-0x21]
  40d9b7:	cmp    eax,ecx
  40d9b9:	setg   dl
  40d9bc:	and    dl,0x1
  40d9bf:	movzx  eax,dl
  40d9c2:	mov    DWORD PTR [rbp-0x44],eax
  40d9c5:	mov    eax,DWORD PTR [rbp-0x44]
  40d9c8:	cmp    eax,0x0
  40d9cb:	jne    40d9de <test_scan@@Base+0x1bde>
  40d9d1:	mov    rax,QWORD PTR [rbp-0x30]
  40d9d5:	mov    QWORD PTR [rbp-0x8],rax
  40d9d9:	jmp    40d9ee <test_scan@@Base+0x1bee>
  40d9de:	jmp    40d969 <test_scan@@Base+0x1b69>
  40d9e3:	mov    rax,QWORD PTR [rip+0x246be]        # 4320a8 <__data_start@@Base+0x10>
  40d9ea:	mov    QWORD PTR [rbp-0x8],rax
  40d9ee:	mov    rax,QWORD PTR [rbp-0x8]
  40d9f2:	add    rsp,0x50
  40d9f6:	pop    rbp
  40d9f7:	ret    
  40d9f8:	nop    DWORD PTR [rax+rax*1+0x0]
  40da00:	push   rbp
  40da01:	mov    rbp,rsp
  40da04:	sub    rsp,0x30
  40da08:	mov    QWORD PTR [rbp-0x10],rdi
  40da0c:	mov    QWORD PTR [rbp-0x18],rsi
  40da10:	mov    QWORD PTR [rbp-0x28],0x0
  40da18:	mov    rax,QWORD PTR [rbp-0x28]
  40da1c:	mov    rdi,QWORD PTR [rbp-0x10]
  40da20:	mov    QWORD PTR [rbp-0x30],rax
  40da24:	call   408e40 <verify_monster@@Base+0x2230>
  40da29:	mov    rdi,QWORD PTR [rbp-0x30]
  40da2d:	cmp    rdi,rax
  40da30:	jae    40da84 <test_scan@@Base+0x1c84>
  40da36:	mov    rdi,QWORD PTR [rbp-0x10]
  40da3a:	mov    rsi,QWORD PTR [rbp-0x28]
  40da3e:	call   408e90 <verify_monster@@Base+0x2280>
  40da43:	xor    ecx,ecx
  40da45:	mov    edx,ecx
  40da47:	mov    QWORD PTR [rbp-0x20],rax
  40da4b:	mov    rdi,QWORD PTR [rbp-0x20]
  40da4f:	mov    rsi,QWORD PTR [rbp-0x18]
  40da53:	call   417750 <main@@Base+0x3360>
  40da58:	cmp    eax,0x0
  40da5b:	jne    40da6e <test_scan@@Base+0x1c6e>
  40da61:	mov    rax,QWORD PTR [rbp-0x28]
  40da65:	mov    QWORD PTR [rbp-0x8],rax
  40da69:	jmp    40da8f <test_scan@@Base+0x1c8f>
  40da6e:	jmp    40da73 <test_scan@@Base+0x1c73>
  40da73:	mov    rax,QWORD PTR [rbp-0x28]
  40da77:	add    rax,0x1
  40da7b:	mov    QWORD PTR [rbp-0x28],rax
  40da7f:	jmp    40da18 <test_scan@@Base+0x1c18>
  40da84:	mov    rax,QWORD PTR [rip+0x2461d]        # 4320a8 <__data_start@@Base+0x10>
  40da8b:	mov    QWORD PTR [rbp-0x8],rax
  40da8f:	mov    rax,QWORD PTR [rbp-0x8]
  40da93:	add    rsp,0x30
  40da97:	pop    rbp
  40da98:	ret    
  40da99:	nop    DWORD PTR [rax+0x0]
  40daa0:	push   rbp
  40daa1:	mov    rbp,rsp
  40daa4:	sub    rsp,0x50
  40daa8:	mov    QWORD PTR [rbp-0x10],rdi
  40daac:	mov    QWORD PTR [rbp-0x18],rsi
  40dab0:	mov    QWORD PTR [rbp-0x20],rdx
  40dab4:	mov    QWORD PTR [rbp-0x28],rcx
  40dab8:	mov    rcx,QWORD PTR [rbp-0x18]
  40dabc:	mov    QWORD PTR [rbp-0x38],rcx
  40dac0:	mov    rax,QWORD PTR [rbp-0x38]
  40dac4:	mov    rcx,QWORD PTR [rbp-0x20]
  40dac8:	mov    rdi,QWORD PTR [rbp-0x10]
  40dacc:	mov    QWORD PTR [rbp-0x40],rax
  40dad0:	mov    QWORD PTR [rbp-0x48],rcx
  40dad4:	call   408e40 <verify_monster@@Base+0x2230>
  40dad9:	mov    rcx,QWORD PTR [rbp-0x48]
  40dadd:	cmp    rcx,rax
  40dae0:	jae    40daf3 <test_scan@@Base+0x1cf3>
  40dae6:	mov    rax,QWORD PTR [rbp-0x20]
  40daea:	mov    QWORD PTR [rbp-0x50],rax
  40daee:	jmp    40db00 <test_scan@@Base+0x1d00>
  40daf3:	mov    rdi,QWORD PTR [rbp-0x10]
  40daf7:	call   408e40 <verify_monster@@Base+0x2230>
  40dafc:	mov    QWORD PTR [rbp-0x50],rax
  40db00:	mov    rax,QWORD PTR [rbp-0x50]
  40db04:	mov    rcx,QWORD PTR [rbp-0x40]
  40db08:	cmp    rcx,rax
  40db0b:	jae    40db5f <test_scan@@Base+0x1d5f>
  40db11:	mov    rdi,QWORD PTR [rbp-0x10]
  40db15:	mov    rsi,QWORD PTR [rbp-0x38]
  40db19:	call   408e90 <verify_monster@@Base+0x2280>
  40db1e:	xor    ecx,ecx
  40db20:	mov    edx,ecx
  40db22:	mov    QWORD PTR [rbp-0x30],rax
  40db26:	mov    rdi,QWORD PTR [rbp-0x30]
  40db2a:	mov    rsi,QWORD PTR [rbp-0x28]
  40db2e:	call   417750 <main@@Base+0x3360>
  40db33:	cmp    eax,0x0
  40db36:	jne    40db49 <test_scan@@Base+0x1d49>
  40db3c:	mov    rax,QWORD PTR [rbp-0x38]
  40db40:	mov    QWORD PTR [rbp-0x8],rax
  40db44:	jmp    40db6a <test_scan@@Base+0x1d6a>
  40db49:	jmp    40db4e <test_scan@@Base+0x1d4e>
  40db4e:	mov    rax,QWORD PTR [rbp-0x38]
  40db52:	add    rax,0x1
  40db56:	mov    QWORD PTR [rbp-0x38],rax
  40db5a:	jmp    40dac0 <test_scan@@Base+0x1cc0>
  40db5f:	mov    rax,QWORD PTR [rip+0x24542]        # 4320a8 <__data_start@@Base+0x10>
  40db66:	mov    QWORD PTR [rbp-0x8],rax
  40db6a:	mov    rax,QWORD PTR [rbp-0x8]
  40db6e:	add    rsp,0x50
  40db72:	pop    rbp
  40db73:	ret    
  40db74:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40db7e:	xchg   ax,ax
  40db80:	push   rbp
  40db81:	mov    rbp,rsp
  40db84:	sub    rsp,0x40
  40db88:	mov    QWORD PTR [rbp-0x10],rdi
  40db8c:	mov    QWORD PTR [rbp-0x18],rsi
  40db90:	mov    QWORD PTR [rbp-0x20],rdx
  40db94:	mov    QWORD PTR [rbp-0x30],0x0
  40db9c:	mov    rax,QWORD PTR [rbp-0x30]
  40dba0:	mov    rdi,QWORD PTR [rbp-0x10]
  40dba4:	mov    QWORD PTR [rbp-0x38],rax
  40dba8:	call   408e40 <verify_monster@@Base+0x2230>
  40dbad:	mov    rdi,QWORD PTR [rbp-0x38]
  40dbb1:	cmp    rdi,rax
  40dbb4:	jae    40dc08 <test_scan@@Base+0x1e08>
  40dbba:	mov    rdi,QWORD PTR [rbp-0x10]
  40dbbe:	mov    rsi,QWORD PTR [rbp-0x30]
  40dbc2:	call   408e90 <verify_monster@@Base+0x2280>
  40dbc7:	mov    QWORD PTR [rbp-0x28],rax
  40dbcb:	mov    rdi,QWORD PTR [rbp-0x28]
  40dbcf:	mov    rsi,QWORD PTR [rbp-0x18]
  40dbd3:	mov    rdx,QWORD PTR [rbp-0x20]
  40dbd7:	call   417680 <main@@Base+0x3290>
  40dbdc:	cmp    eax,0x0
  40dbdf:	jne    40dbf2 <test_scan@@Base+0x1df2>
  40dbe5:	mov    rax,QWORD PTR [rbp-0x30]
  40dbe9:	mov    QWORD PTR [rbp-0x8],rax
  40dbed:	jmp    40dc13 <test_scan@@Base+0x1e13>
  40dbf2:	jmp    40dbf7 <test_scan@@Base+0x1df7>
  40dbf7:	mov    rax,QWORD PTR [rbp-0x30]
  40dbfb:	add    rax,0x1
  40dbff:	mov    QWORD PTR [rbp-0x30],rax
  40dc03:	jmp    40db9c <test_scan@@Base+0x1d9c>
  40dc08:	mov    rax,QWORD PTR [rip+0x24499]        # 4320a8 <__data_start@@Base+0x10>
  40dc0f:	mov    QWORD PTR [rbp-0x8],rax
  40dc13:	mov    rax,QWORD PTR [rbp-0x8]
  40dc17:	add    rsp,0x40
  40dc1b:	pop    rbp
  40dc1c:	ret    
  40dc1d:	nop    DWORD PTR [rax]
  40dc20:	push   rbp
  40dc21:	mov    rbp,rsp
  40dc24:	sub    rsp,0x60
  40dc28:	mov    QWORD PTR [rbp-0x10],rdi
  40dc2c:	mov    QWORD PTR [rbp-0x18],rsi
  40dc30:	mov    QWORD PTR [rbp-0x20],rdx
  40dc34:	mov    QWORD PTR [rbp-0x28],rcx
  40dc38:	mov    QWORD PTR [rbp-0x30],r8
  40dc3c:	mov    rcx,QWORD PTR [rbp-0x18]
  40dc40:	mov    QWORD PTR [rbp-0x40],rcx
  40dc44:	mov    rax,QWORD PTR [rbp-0x40]
  40dc48:	mov    rcx,QWORD PTR [rbp-0x20]
  40dc4c:	mov    rdi,QWORD PTR [rbp-0x10]
  40dc50:	mov    QWORD PTR [rbp-0x48],rax
  40dc54:	mov    QWORD PTR [rbp-0x50],rcx
  40dc58:	call   408e40 <verify_monster@@Base+0x2230>
  40dc5d:	mov    rcx,QWORD PTR [rbp-0x50]
  40dc61:	cmp    rcx,rax
  40dc64:	jae    40dc77 <test_scan@@Base+0x1e77>
  40dc6a:	mov    rax,QWORD PTR [rbp-0x20]
  40dc6e:	mov    QWORD PTR [rbp-0x58],rax
  40dc72:	jmp    40dc84 <test_scan@@Base+0x1e84>
  40dc77:	mov    rdi,QWORD PTR [rbp-0x10]
  40dc7b:	call   408e40 <verify_monster@@Base+0x2230>
  40dc80:	mov    QWORD PTR [rbp-0x58],rax
  40dc84:	mov    rax,QWORD PTR [rbp-0x58]
  40dc88:	mov    rcx,QWORD PTR [rbp-0x48]
  40dc8c:	cmp    rcx,rax
  40dc8f:	jae    40dce3 <test_scan@@Base+0x1ee3>
  40dc95:	mov    rdi,QWORD PTR [rbp-0x10]
  40dc99:	mov    rsi,QWORD PTR [rbp-0x40]
  40dc9d:	call   408e90 <verify_monster@@Base+0x2280>
  40dca2:	mov    QWORD PTR [rbp-0x38],rax
  40dca6:	mov    rdi,QWORD PTR [rbp-0x38]
  40dcaa:	mov    rsi,QWORD PTR [rbp-0x28]
  40dcae:	mov    rdx,QWORD PTR [rbp-0x30]
  40dcb2:	call   417680 <main@@Base+0x3290>
  40dcb7:	cmp    eax,0x0
  40dcba:	jne    40dccd <test_scan@@Base+0x1ecd>
  40dcc0:	mov    rax,QWORD PTR [rbp-0x40]
  40dcc4:	mov    QWORD PTR [rbp-0x8],rax
  40dcc8:	jmp    40dcee <test_scan@@Base+0x1eee>
  40dccd:	jmp    40dcd2 <test_scan@@Base+0x1ed2>
  40dcd2:	mov    rax,QWORD PTR [rbp-0x40]
  40dcd6:	add    rax,0x1
  40dcda:	mov    QWORD PTR [rbp-0x40],rax
  40dcde:	jmp    40dc44 <test_scan@@Base+0x1e44>
  40dce3:	mov    rax,QWORD PTR [rip+0x243be]        # 4320a8 <__data_start@@Base+0x10>
  40dcea:	mov    QWORD PTR [rbp-0x8],rax
  40dcee:	mov    rax,QWORD PTR [rbp-0x8]
  40dcf2:	add    rsp,0x60
  40dcf6:	pop    rbp
  40dcf7:	ret    
  40dcf8:	nop    DWORD PTR [rax+rax*1+0x0]
  40dd00:	push   rbp
  40dd01:	mov    rbp,rsp
  40dd04:	sub    rsp,0x30
  40dd08:	mov    QWORD PTR [rbp-0x10],rdi
  40dd0c:	mov    QWORD PTR [rbp-0x18],rsi
  40dd10:	mov    rdi,QWORD PTR [rbp-0x10]
  40dd14:	call   408e40 <verify_monster@@Base+0x2230>
  40dd19:	mov    QWORD PTR [rbp-0x28],rax
  40dd1d:	mov    rax,QWORD PTR [rbp-0x28]
  40dd21:	mov    rcx,rax
  40dd24:	add    rcx,0xffffffffffffffff
  40dd28:	mov    QWORD PTR [rbp-0x28],rcx
  40dd2c:	cmp    rax,0x0
  40dd30:	jbe    40dd73 <test_scan@@Base+0x1f73>
  40dd36:	mov    rdi,QWORD PTR [rbp-0x10]
  40dd3a:	mov    rsi,QWORD PTR [rbp-0x28]
  40dd3e:	call   408e90 <verify_monster@@Base+0x2280>
  40dd43:	xor    ecx,ecx
  40dd45:	mov    edx,ecx
  40dd47:	mov    QWORD PTR [rbp-0x20],rax
  40dd4b:	mov    rdi,QWORD PTR [rbp-0x20]
  40dd4f:	mov    rsi,QWORD PTR [rbp-0x18]
  40dd53:	call   417750 <main@@Base+0x3360>
  40dd58:	cmp    eax,0x0
  40dd5b:	jne    40dd6e <test_scan@@Base+0x1f6e>
  40dd61:	mov    rax,QWORD PTR [rbp-0x28]
  40dd65:	mov    QWORD PTR [rbp-0x8],rax
  40dd69:	jmp    40dd7e <test_scan@@Base+0x1f7e>
  40dd6e:	jmp    40dd1d <test_scan@@Base+0x1f1d>
  40dd73:	mov    rax,QWORD PTR [rip+0x2432e]        # 4320a8 <__data_start@@Base+0x10>
  40dd7a:	mov    QWORD PTR [rbp-0x8],rax
  40dd7e:	mov    rax,QWORD PTR [rbp-0x8]
  40dd82:	add    rsp,0x30
  40dd86:	pop    rbp
  40dd87:	ret    
  40dd88:	nop    DWORD PTR [rax+rax*1+0x0]
  40dd90:	push   rbp
  40dd91:	mov    rbp,rsp
  40dd94:	sub    rsp,0x50
  40dd98:	mov    QWORD PTR [rbp-0x10],rdi
  40dd9c:	mov    QWORD PTR [rbp-0x18],rsi
  40dda0:	mov    QWORD PTR [rbp-0x20],rdx
  40dda4:	mov    QWORD PTR [rbp-0x28],rcx
  40dda8:	mov    rcx,QWORD PTR [rbp-0x20]
  40ddac:	mov    rdi,QWORD PTR [rbp-0x10]
  40ddb0:	mov    QWORD PTR [rbp-0x40],rcx
  40ddb4:	call   408e40 <verify_monster@@Base+0x2230>
  40ddb9:	mov    rcx,QWORD PTR [rbp-0x40]
  40ddbd:	cmp    rcx,rax
  40ddc0:	jae    40ddd3 <test_scan@@Base+0x1fd3>
  40ddc6:	mov    rax,QWORD PTR [rbp-0x20]
  40ddca:	mov    QWORD PTR [rbp-0x48],rax
  40ddce:	jmp    40dde0 <test_scan@@Base+0x1fe0>
  40ddd3:	mov    rdi,QWORD PTR [rbp-0x10]
  40ddd7:	call   408e40 <verify_monster@@Base+0x2230>
  40dddc:	mov    QWORD PTR [rbp-0x48],rax
  40dde0:	mov    rax,QWORD PTR [rbp-0x48]
  40dde4:	mov    QWORD PTR [rbp-0x38],rax
  40dde8:	mov    rax,QWORD PTR [rbp-0x38]
  40ddec:	mov    rcx,rax
  40ddef:	add    rcx,0xffffffffffffffff
  40ddf3:	mov    QWORD PTR [rbp-0x38],rcx
  40ddf7:	cmp    rax,QWORD PTR [rbp-0x18]
  40ddfb:	jbe    40de3e <test_scan@@Base+0x203e>
  40de01:	mov    rdi,QWORD PTR [rbp-0x10]
  40de05:	mov    rsi,QWORD PTR [rbp-0x38]
  40de09:	call   408e90 <verify_monster@@Base+0x2280>
  40de0e:	xor    ecx,ecx
  40de10:	mov    edx,ecx
  40de12:	mov    QWORD PTR [rbp-0x30],rax
  40de16:	mov    rdi,QWORD PTR [rbp-0x30]
  40de1a:	mov    rsi,QWORD PTR [rbp-0x28]
  40de1e:	call   417750 <main@@Base+0x3360>
  40de23:	cmp    eax,0x0
  40de26:	jne    40de39 <test_scan@@Base+0x2039>
  40de2c:	mov    rax,QWORD PTR [rbp-0x38]
  40de30:	mov    QWORD PTR [rbp-0x8],rax
  40de34:	jmp    40de49 <test_scan@@Base+0x2049>
  40de39:	jmp    40dde8 <test_scan@@Base+0x1fe8>
  40de3e:	mov    rax,QWORD PTR [rip+0x24263]        # 4320a8 <__data_start@@Base+0x10>
  40de45:	mov    QWORD PTR [rbp-0x8],rax
  40de49:	mov    rax,QWORD PTR [rbp-0x8]
  40de4d:	add    rsp,0x50
  40de51:	pop    rbp
  40de52:	ret    
  40de53:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40de5d:	nop    DWORD PTR [rax]
  40de60:	push   rbp
  40de61:	mov    rbp,rsp
  40de64:	sub    rsp,0x30
  40de68:	mov    QWORD PTR [rbp-0x10],rdi
  40de6c:	mov    QWORD PTR [rbp-0x18],rsi
  40de70:	mov    QWORD PTR [rbp-0x20],rdx
  40de74:	mov    rdi,QWORD PTR [rbp-0x10]
  40de78:	call   408e40 <verify_monster@@Base+0x2230>
  40de7d:	mov    QWORD PTR [rbp-0x30],rax
  40de81:	mov    rax,QWORD PTR [rbp-0x30]
  40de85:	mov    rcx,rax
  40de88:	add    rcx,0xffffffffffffffff
  40de8c:	mov    QWORD PTR [rbp-0x30],rcx
  40de90:	cmp    rax,0x0
  40de94:	jbe    40ded7 <test_scan@@Base+0x20d7>
  40de9a:	mov    rdi,QWORD PTR [rbp-0x10]
  40de9e:	mov    rsi,QWORD PTR [rbp-0x30]
  40dea2:	call   408e90 <verify_monster@@Base+0x2280>
  40dea7:	mov    QWORD PTR [rbp-0x28],rax
  40deab:	mov    rdi,QWORD PTR [rbp-0x28]
  40deaf:	mov    rsi,QWORD PTR [rbp-0x18]
  40deb3:	mov    rdx,QWORD PTR [rbp-0x20]
  40deb7:	call   417680 <main@@Base+0x3290>
  40debc:	cmp    eax,0x0
  40debf:	jne    40ded2 <test_scan@@Base+0x20d2>
  40dec5:	mov    rax,QWORD PTR [rbp-0x30]
  40dec9:	mov    QWORD PTR [rbp-0x8],rax
  40decd:	jmp    40dee2 <test_scan@@Base+0x20e2>
  40ded2:	jmp    40de81 <test_scan@@Base+0x2081>
  40ded7:	mov    rax,QWORD PTR [rip+0x241ca]        # 4320a8 <__data_start@@Base+0x10>
  40dede:	mov    QWORD PTR [rbp-0x8],rax
  40dee2:	mov    rax,QWORD PTR [rbp-0x8]
  40dee6:	add    rsp,0x30
  40deea:	pop    rbp
  40deeb:	ret    
  40deec:	nop    DWORD PTR [rax+0x0]
  40def0:	push   rbp
  40def1:	mov    rbp,rsp
  40def4:	sub    rsp,0x50
  40def8:	mov    QWORD PTR [rbp-0x10],rdi
  40defc:	mov    QWORD PTR [rbp-0x18],rsi
  40df00:	mov    QWORD PTR [rbp-0x20],rdx
  40df04:	mov    QWORD PTR [rbp-0x28],rcx
  40df08:	mov    QWORD PTR [rbp-0x30],r8
  40df0c:	mov    rcx,QWORD PTR [rbp-0x20]
  40df10:	mov    rdi,QWORD PTR [rbp-0x10]
  40df14:	mov    QWORD PTR [rbp-0x48],rcx
  40df18:	call   408e40 <verify_monster@@Base+0x2230>
  40df1d:	mov    rcx,QWORD PTR [rbp-0x48]
  40df21:	cmp    rcx,rax
  40df24:	jae    40df37 <test_scan@@Base+0x2137>
  40df2a:	mov    rax,QWORD PTR [rbp-0x20]
  40df2e:	mov    QWORD PTR [rbp-0x50],rax
  40df32:	jmp    40df44 <test_scan@@Base+0x2144>
  40df37:	mov    rdi,QWORD PTR [rbp-0x10]
  40df3b:	call   408e40 <verify_monster@@Base+0x2230>
  40df40:	mov    QWORD PTR [rbp-0x50],rax
  40df44:	mov    rax,QWORD PTR [rbp-0x50]
  40df48:	mov    QWORD PTR [rbp-0x40],rax
  40df4c:	mov    rax,QWORD PTR [rbp-0x40]
  40df50:	mov    rcx,rax
  40df53:	add    rcx,0xffffffffffffffff
  40df57:	mov    QWORD PTR [rbp-0x40],rcx
  40df5b:	cmp    rax,QWORD PTR [rbp-0x18]
  40df5f:	jbe    40dfa2 <test_scan@@Base+0x21a2>
  40df65:	mov    rdi,QWORD PTR [rbp-0x10]
  40df69:	mov    rsi,QWORD PTR [rbp-0x40]
  40df6d:	call   408e90 <verify_monster@@Base+0x2280>
  40df72:	mov    QWORD PTR [rbp-0x38],rax
  40df76:	mov    rdi,QWORD PTR [rbp-0x38]
  40df7a:	mov    rsi,QWORD PTR [rbp-0x28]
  40df7e:	mov    rdx,QWORD PTR [rbp-0x30]
  40df82:	call   417680 <main@@Base+0x3290>
  40df87:	cmp    eax,0x0
  40df8a:	jne    40df9d <test_scan@@Base+0x219d>
  40df90:	mov    rax,QWORD PTR [rbp-0x40]
  40df94:	mov    QWORD PTR [rbp-0x8],rax
  40df98:	jmp    40dfad <test_scan@@Base+0x21ad>
  40df9d:	jmp    40df4c <test_scan@@Base+0x214c>
  40dfa2:	mov    rax,QWORD PTR [rip+0x240ff]        # 4320a8 <__data_start@@Base+0x10>
  40dfa9:	mov    QWORD PTR [rbp-0x8],rax
  40dfad:	mov    rax,QWORD PTR [rbp-0x8]
  40dfb1:	add    rsp,0x50
  40dfb5:	pop    rbp
  40dfb6:	ret    
  40dfb7:	nop    WORD PTR [rax+rax*1+0x0]
  40dfc0:	push   rbp
  40dfc1:	mov    rbp,rsp
  40dfc4:	sub    rsp,0x30
  40dfc8:	mov    ax,si
  40dfcb:	mov    QWORD PTR [rbp-0x10],rdi
  40dfcf:	mov    WORD PTR [rbp-0x12],ax
  40dfd3:	mov    QWORD PTR [rbp-0x20],0x0
  40dfdb:	mov    rax,QWORD PTR [rbp-0x20]
  40dfdf:	mov    rdi,QWORD PTR [rbp-0x10]
  40dfe3:	mov    QWORD PTR [rbp-0x28],rax
  40dfe7:	call   408c20 <verify_monster@@Base+0x2010>
  40dfec:	mov    rdi,QWORD PTR [rbp-0x28]
  40dff0:	cmp    rdi,rax
  40dff3:	jae    40e074 <test_scan@@Base+0x2274>
  40dff9:	mov    rdi,QWORD PTR [rbp-0x10]
  40dffd:	mov    rsi,QWORD PTR [rbp-0x20]
  40e001:	call   408c70 <verify_monster@@Base+0x2060>
  40e006:	mov    rdi,rax
  40e009:	call   404510 <verify_empty_monster@@Base+0x2f0>
  40e00e:	mov    WORD PTR [rbp-0x14],ax
  40e012:	movsx  ecx,WORD PTR [rbp-0x14]
  40e016:	movsx  edx,WORD PTR [rbp-0x12]
  40e01a:	cmp    ecx,edx
  40e01c:	jge    40e02f <test_scan@@Base+0x222f>
  40e022:	mov    eax,0xffffffff
  40e027:	mov    DWORD PTR [rbp-0x2c],eax
  40e02a:	jmp    40e045 <test_scan@@Base+0x2245>
  40e02f:	movsx  eax,WORD PTR [rbp-0x14]
  40e033:	movsx  ecx,WORD PTR [rbp-0x12]
  40e037:	cmp    eax,ecx
  40e039:	setg   dl
  40e03c:	and    dl,0x1
  40e03f:	movzx  eax,dl
  40e042:	mov    DWORD PTR [rbp-0x2c],eax
  40e045:	mov    eax,DWORD PTR [rbp-0x2c]
  40e048:	cmp    eax,0x0
  40e04b:	jne    40e05e <test_scan@@Base+0x225e>
  40e051:	mov    rax,QWORD PTR [rbp-0x20]
  40e055:	mov    QWORD PTR [rbp-0x8],rax
  40e059:	jmp    40e07f <test_scan@@Base+0x227f>
  40e05e:	jmp    40e063 <test_scan@@Base+0x2263>
  40e063:	mov    rax,QWORD PTR [rbp-0x20]
  40e067:	add    rax,0x1
  40e06b:	mov    QWORD PTR [rbp-0x20],rax
  40e06f:	jmp    40dfdb <test_scan@@Base+0x21db>
  40e074:	mov    rax,QWORD PTR [rip+0x2402d]        # 4320a8 <__data_start@@Base+0x10>
  40e07b:	mov    QWORD PTR [rbp-0x8],rax
  40e07f:	mov    rax,QWORD PTR [rbp-0x8]
  40e083:	add    rsp,0x30
  40e087:	pop    rbp
  40e088:	ret    
  40e089:	nop    DWORD PTR [rax+0x0]
  40e090:	push   rbp
  40e091:	mov    rbp,rsp
  40e094:	sub    rsp,0x50
  40e098:	mov    ax,cx
  40e09b:	mov    QWORD PTR [rbp-0x10],rdi
  40e09f:	mov    QWORD PTR [rbp-0x18],rsi
  40e0a3:	mov    QWORD PTR [rbp-0x20],rdx
  40e0a7:	mov    WORD PTR [rbp-0x22],ax
  40e0ab:	mov    rdx,QWORD PTR [rbp-0x18]
  40e0af:	mov    QWORD PTR [rbp-0x30],rdx
  40e0b3:	mov    rax,QWORD PTR [rbp-0x30]
  40e0b7:	mov    rcx,QWORD PTR [rbp-0x20]
  40e0bb:	mov    rdi,QWORD PTR [rbp-0x10]
  40e0bf:	mov    QWORD PTR [rbp-0x38],rax
  40e0c3:	mov    QWORD PTR [rbp-0x40],rcx
  40e0c7:	call   408c20 <verify_monster@@Base+0x2010>
  40e0cc:	mov    rcx,QWORD PTR [rbp-0x40]
  40e0d0:	cmp    rcx,rax
  40e0d3:	jae    40e0e6 <test_scan@@Base+0x22e6>
  40e0d9:	mov    rax,QWORD PTR [rbp-0x20]
  40e0dd:	mov    QWORD PTR [rbp-0x48],rax
  40e0e1:	jmp    40e0f3 <test_scan@@Base+0x22f3>
  40e0e6:	mov    rdi,QWORD PTR [rbp-0x10]
  40e0ea:	call   408c20 <verify_monster@@Base+0x2010>
  40e0ef:	mov    QWORD PTR [rbp-0x48],rax
  40e0f3:	mov    rax,QWORD PTR [rbp-0x48]
  40e0f7:	mov    rcx,QWORD PTR [rbp-0x38]
  40e0fb:	cmp    rcx,rax
  40e0fe:	jae    40e17f <test_scan@@Base+0x237f>
  40e104:	mov    rdi,QWORD PTR [rbp-0x10]
  40e108:	mov    rsi,QWORD PTR [rbp-0x30]
  40e10c:	call   408c70 <verify_monster@@Base+0x2060>
  40e111:	mov    rdi,rax
  40e114:	call   404510 <verify_empty_monster@@Base+0x2f0>
  40e119:	mov    WORD PTR [rbp-0x24],ax
  40e11d:	movsx  ecx,WORD PTR [rbp-0x24]
  40e121:	movsx  edx,WORD PTR [rbp-0x22]
  40e125:	cmp    ecx,edx
  40e127:	jge    40e13a <test_scan@@Base+0x233a>
  40e12d:	mov    eax,0xffffffff
  40e132:	mov    DWORD PTR [rbp-0x4c],eax
  40e135:	jmp    40e150 <test_scan@@Base+0x2350>
  40e13a:	movsx  eax,WORD PTR [rbp-0x24]
  40e13e:	movsx  ecx,WORD PTR [rbp-0x22]
  40e142:	cmp    eax,ecx
  40e144:	setg   dl
  40e147:	and    dl,0x1
  40e14a:	movzx  eax,dl
  40e14d:	mov    DWORD PTR [rbp-0x4c],eax
  40e150:	mov    eax,DWORD PTR [rbp-0x4c]
  40e153:	cmp    eax,0x0
  40e156:	jne    40e169 <test_scan@@Base+0x2369>
  40e15c:	mov    rax,QWORD PTR [rbp-0x30]
  40e160:	mov    QWORD PTR [rbp-0x8],rax
  40e164:	jmp    40e18a <test_scan@@Base+0x238a>
  40e169:	jmp    40e16e <test_scan@@Base+0x236e>
  40e16e:	mov    rax,QWORD PTR [rbp-0x30]
  40e172:	add    rax,0x1
  40e176:	mov    QWORD PTR [rbp-0x30],rax
  40e17a:	jmp    40e0b3 <test_scan@@Base+0x22b3>
  40e17f:	mov    rax,QWORD PTR [rip+0x23f22]        # 4320a8 <__data_start@@Base+0x10>
  40e186:	mov    QWORD PTR [rbp-0x8],rax
  40e18a:	mov    rax,QWORD PTR [rbp-0x8]
  40e18e:	add    rsp,0x50
  40e192:	pop    rbp
  40e193:	ret    
  40e194:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e19e:	xchg   ax,ax
  40e1a0:	push   rbp
  40e1a1:	mov    rbp,rsp
  40e1a4:	sub    rsp,0x30
  40e1a8:	mov    ax,si
  40e1ab:	mov    QWORD PTR [rbp-0x10],rdi
  40e1af:	mov    WORD PTR [rbp-0x12],ax
  40e1b3:	mov    rdi,QWORD PTR [rbp-0x10]
  40e1b7:	call   408c20 <verify_monster@@Base+0x2010>
  40e1bc:	mov    QWORD PTR [rbp-0x20],rax
  40e1c0:	mov    rax,QWORD PTR [rbp-0x20]
  40e1c4:	mov    rcx,rax
  40e1c7:	add    rcx,0xffffffffffffffff
  40e1cb:	mov    QWORD PTR [rbp-0x20],rcx
  40e1cf:	cmp    rax,0x0
  40e1d3:	jbe    40e243 <test_scan@@Base+0x2443>
  40e1d9:	mov    rdi,QWORD PTR [rbp-0x10]
  40e1dd:	mov    rsi,QWORD PTR [rbp-0x20]
  40e1e1:	call   408c70 <verify_monster@@Base+0x2060>
  40e1e6:	mov    rdi,rax
  40e1e9:	call   404510 <verify_empty_monster@@Base+0x2f0>
  40e1ee:	mov    WORD PTR [rbp-0x14],ax
  40e1f2:	movsx  ecx,WORD PTR [rbp-0x14]
  40e1f6:	movsx  edx,WORD PTR [rbp-0x12]
  40e1fa:	cmp    ecx,edx
  40e1fc:	jge    40e20f <test_scan@@Base+0x240f>
  40e202:	mov    eax,0xffffffff
  40e207:	mov    DWORD PTR [rbp-0x24],eax
  40e20a:	jmp    40e225 <test_scan@@Base+0x2425>
  40e20f:	movsx  eax,WORD PTR [rbp-0x14]
  40e213:	movsx  ecx,WORD PTR [rbp-0x12]
  40e217:	cmp    eax,ecx
  40e219:	setg   dl
  40e21c:	and    dl,0x1
  40e21f:	movzx  eax,dl
  40e222:	mov    DWORD PTR [rbp-0x24],eax
  40e225:	mov    eax,DWORD PTR [rbp-0x24]
  40e228:	cmp    eax,0x0
  40e22b:	jne    40e23e <test_scan@@Base+0x243e>
  40e231:	mov    rax,QWORD PTR [rbp-0x20]
  40e235:	mov    QWORD PTR [rbp-0x8],rax
  40e239:	jmp    40e24e <test_scan@@Base+0x244e>
  40e23e:	jmp    40e1c0 <test_scan@@Base+0x23c0>
  40e243:	mov    rax,QWORD PTR [rip+0x23e5e]        # 4320a8 <__data_start@@Base+0x10>
  40e24a:	mov    QWORD PTR [rbp-0x8],rax
  40e24e:	mov    rax,QWORD PTR [rbp-0x8]
  40e252:	add    rsp,0x30
  40e256:	pop    rbp
  40e257:	ret    
  40e258:	nop    DWORD PTR [rax+rax*1+0x0]
  40e260:	push   rbp
  40e261:	mov    rbp,rsp
  40e264:	sub    rsp,0x50
  40e268:	mov    ax,cx
  40e26b:	mov    QWORD PTR [rbp-0x10],rdi
  40e26f:	mov    QWORD PTR [rbp-0x18],rsi
  40e273:	mov    QWORD PTR [rbp-0x20],rdx
  40e277:	mov    WORD PTR [rbp-0x22],ax
  40e27b:	mov    rdx,QWORD PTR [rbp-0x20]
  40e27f:	mov    rdi,QWORD PTR [rbp-0x10]
  40e283:	mov    QWORD PTR [rbp-0x38],rdx
  40e287:	call   408c20 <verify_monster@@Base+0x2010>
  40e28c:	mov    rdx,QWORD PTR [rbp-0x38]
  40e290:	cmp    rdx,rax
  40e293:	jae    40e2a6 <test_scan@@Base+0x24a6>
  40e299:	mov    rax,QWORD PTR [rbp-0x20]
  40e29d:	mov    QWORD PTR [rbp-0x40],rax
  40e2a1:	jmp    40e2b3 <test_scan@@Base+0x24b3>
  40e2a6:	mov    rdi,QWORD PTR [rbp-0x10]
  40e2aa:	call   408c20 <verify_monster@@Base+0x2010>
  40e2af:	mov    QWORD PTR [rbp-0x40],rax
  40e2b3:	mov    rax,QWORD PTR [rbp-0x40]
  40e2b7:	mov    QWORD PTR [rbp-0x30],rax
  40e2bb:	mov    rax,QWORD PTR [rbp-0x30]
  40e2bf:	mov    rcx,rax
  40e2c2:	add    rcx,0xffffffffffffffff
  40e2c6:	mov    QWORD PTR [rbp-0x30],rcx
  40e2ca:	cmp    rax,QWORD PTR [rbp-0x18]
  40e2ce:	jbe    40e33e <test_scan@@Base+0x253e>
  40e2d4:	mov    rdi,QWORD PTR [rbp-0x10]
  40e2d8:	mov    rsi,QWORD PTR [rbp-0x30]
  40e2dc:	call   408c70 <verify_monster@@Base+0x2060>
  40e2e1:	mov    rdi,rax
  40e2e4:	call   404510 <verify_empty_monster@@Base+0x2f0>
  40e2e9:	mov    WORD PTR [rbp-0x24],ax
  40e2ed:	movsx  ecx,WORD PTR [rbp-0x24]
  40e2f1:	movsx  edx,WORD PTR [rbp-0x22]
  40e2f5:	cmp    ecx,edx
  40e2f7:	jge    40e30a <test_scan@@Base+0x250a>
  40e2fd:	mov    eax,0xffffffff
  40e302:	mov    DWORD PTR [rbp-0x44],eax
  40e305:	jmp    40e320 <test_scan@@Base+0x2520>
  40e30a:	movsx  eax,WORD PTR [rbp-0x24]
  40e30e:	movsx  ecx,WORD PTR [rbp-0x22]
  40e312:	cmp    eax,ecx
  40e314:	setg   dl
  40e317:	and    dl,0x1
  40e31a:	movzx  eax,dl
  40e31d:	mov    DWORD PTR [rbp-0x44],eax
  40e320:	mov    eax,DWORD PTR [rbp-0x44]
  40e323:	cmp    eax,0x0
  40e326:	jne    40e339 <test_scan@@Base+0x2539>
  40e32c:	mov    rax,QWORD PTR [rbp-0x30]
  40e330:	mov    QWORD PTR [rbp-0x8],rax
  40e334:	jmp    40e349 <test_scan@@Base+0x2549>
  40e339:	jmp    40e2bb <test_scan@@Base+0x24bb>
  40e33e:	mov    rax,QWORD PTR [rip+0x23d63]        # 4320a8 <__data_start@@Base+0x10>
  40e345:	mov    QWORD PTR [rbp-0x8],rax
  40e349:	mov    rax,QWORD PTR [rbp-0x8]
  40e34d:	add    rsp,0x50
  40e351:	pop    rbp
  40e352:	ret    
  40e353:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e35d:	nop    DWORD PTR [rax]

000000000040e360 <test_basic_sort@@Base>:
  40e360:	push   rbp
  40e361:	mov    rbp,rsp
  40e364:	sub    rsp,0x80
  40e36b:	mov    QWORD PTR [rbp-0x10],rdi
  40e36f:	mov    eax,DWORD PTR [rip+0x14da3]        # 423118 <_IO_stdin_used@@Base+0x118>
  40e375:	mov    DWORD PTR [rbp-0x3f],eax
  40e378:	mov    cx,WORD PTR [rip+0x14d9d]        # 42311c <_IO_stdin_used@@Base+0x11c>
  40e37f:	mov    WORD PTR [rbp-0x3b],cx
  40e383:	mov    dl,BYTE PTR [rip+0x14d95]        # 42311e <_IO_stdin_used@@Base+0x11e>
  40e389:	mov    BYTE PTR [rbp-0x39],dl
  40e38c:	mov    eax,DWORD PTR [rip+0x14d8d]        # 42311f <_IO_stdin_used@@Base+0x11f>
  40e392:	mov    DWORD PTR [rbp-0x46],eax
  40e395:	mov    cx,WORD PTR [rip+0x14d87]        # 423123 <_IO_stdin_used@@Base+0x123>
  40e39c:	mov    WORD PTR [rbp-0x42],cx
  40e3a0:	mov    dl,BYTE PTR [rip+0x14d7f]        # 423125 <_IO_stdin_used@@Base+0x125>
  40e3a6:	mov    BYTE PTR [rbp-0x40],dl
  40e3a9:	mov    rdi,QWORD PTR [rbp-0x10]
  40e3ad:	call   4197b0 <flatcc_builder_reset@@Base>
  40e3b2:	mov    rdi,QWORD PTR [rbp-0x10]
  40e3b6:	mov    DWORD PTR [rbp-0x4c],eax
  40e3b9:	call   40a2c0 <gen_monster@@Base+0x780>
  40e3be:	mov    rdi,QWORD PTR [rbp-0x10]
  40e3c2:	lea    rsi,[rip+0x14f8e]        # 423357 <_IO_stdin_used@@Base+0x357>
  40e3c9:	mov    DWORD PTR [rbp-0x50],eax
  40e3cc:	call   405c40 <test_empty_monster@@Base+0x1b0>
  40e3d1:	mov    r8d,0x7
  40e3d7:	mov    edx,r8d
  40e3da:	lea    rsi,[rbp-0x3f]
  40e3de:	mov    rdi,QWORD PTR [rbp-0x10]
  40e3e2:	mov    DWORD PTR [rbp-0x54],eax
  40e3e5:	call   40a450 <gen_monster@@Base+0x910>
  40e3ea:	mov    rdi,QWORD PTR [rbp-0x10]
  40e3ee:	mov    DWORD PTR [rbp-0x58],eax
  40e3f1:	call   40ae60 <gen_monster@@Base+0x1320>
  40e3f6:	mov    rdi,QWORD PTR [rbp-0x10]
  40e3fa:	lea    rsi,[rbp-0x38]
  40e3fe:	mov    DWORD PTR [rbp-0x5c],eax
  40e401:	call   41e9b0 <flatcc_builder_get_direct_buffer@@Base>
  40e406:	mov    QWORD PTR [rbp-0x30],rax
  40e40a:	mov    rdi,QWORD PTR [rbp-0x30]
  40e40e:	call   4044a0 <verify_empty_monster@@Base+0x280>
  40e413:	mov    QWORD PTR [rbp-0x18],rax
  40e417:	mov    rdi,QWORD PTR [rbp-0x18]
  40e41b:	call   4084a0 <verify_monster@@Base+0x1890>
  40e420:	mov    QWORD PTR [rbp-0x20],rax
  40e424:	mov    rax,QWORD PTR [rbp-0x20]
  40e428:	mov    QWORD PTR [rbp-0x28],rax
  40e42c:	mov    rdi,QWORD PTR [rbp-0x28]
  40e430:	call   40e560 <test_basic_sort@@Base+0x200>
  40e435:	mov    rdi,QWORD PTR [rbp-0x20]
  40e439:	call   4085d0 <verify_monster@@Base+0x19c0>
  40e43e:	cmp    rax,0x7
  40e442:	jne    40e44d <test_basic_sort@@Base+0xed>
  40e448:	jmp    40e46c <test_basic_sort@@Base+0x10c>
  40e44d:	lea    rdi,[rip+0x1666a]        # 424abe <_IO_stdin_used@@Base+0x1abe>
  40e454:	lea    rsi,[rip+0x15794]        # 423bef <_IO_stdin_used@@Base+0xbef>
  40e45b:	mov    edx,0x610
  40e460:	lea    rcx,[rip+0x16685]        # 424aec <_IO_stdin_used@@Base+0x1aec>
  40e467:	call   404090 <__assert_fail@plt>
  40e46c:	mov    BYTE PTR [rbp-0x48],0x0
  40e470:	movzx  eax,BYTE PTR [rbp-0x48]
  40e474:	mov    ecx,eax
  40e476:	mov    rdi,QWORD PTR [rbp-0x20]
  40e47a:	mov    QWORD PTR [rbp-0x68],rcx
  40e47e:	call   4085d0 <verify_monster@@Base+0x19c0>
  40e483:	mov    rcx,QWORD PTR [rbp-0x68]
  40e487:	cmp    rcx,rax
  40e48a:	jae    40e54a <test_basic_sort@@Base+0x1ea>
  40e490:	mov    rdi,QWORD PTR [rbp-0x20]
  40e494:	movzx  eax,BYTE PTR [rbp-0x48]
  40e498:	mov    esi,eax
  40e49a:	call   4085f0 <verify_monster@@Base+0x19e0>
  40e49f:	mov    BYTE PTR [rbp-0x47],al
  40e4a2:	movzx  ecx,BYTE PTR [rbp-0x47]
  40e4a6:	movzx  edx,BYTE PTR [rbp-0x48]
  40e4aa:	mov    esi,edx
  40e4ac:	movzx  edx,BYTE PTR [rbp+rsi*1-0x46]
  40e4b1:	cmp    ecx,edx
  40e4b3:	je     40e4d6 <test_basic_sort@@Base+0x176>
  40e4b9:	lea    rdi,[rip+0x16654]        # 424b14 <_IO_stdin_used@@Base+0x1b14>
  40e4c0:	mov    al,0x0
  40e4c2:	call   404070 <printf@plt>
  40e4c7:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40e4ce:	mov    DWORD PTR [rbp-0x6c],eax
  40e4d1:	jmp    40e551 <test_basic_sort@@Base+0x1f1>
  40e4d6:	mov    rdi,QWORD PTR [rbp-0x20]
  40e4da:	movzx  esi,BYTE PTR [rbp-0x47]
  40e4de:	call   40e580 <test_basic_sort@@Base+0x220>
  40e4e3:	movzx  esi,BYTE PTR [rbp-0x48]
  40e4e7:	cmp    esi,0x3
  40e4ea:	mov    QWORD PTR [rbp-0x78],rax
  40e4ee:	jne    40e501 <test_basic_sort@@Base+0x1a1>
  40e4f4:	mov    eax,0x2
  40e4f9:	mov    DWORD PTR [rbp-0x7c],eax
  40e4fc:	jmp    40e508 <test_basic_sort@@Base+0x1a8>
  40e501:	movzx  eax,BYTE PTR [rbp-0x48]
  40e505:	mov    DWORD PTR [rbp-0x7c],eax
  40e508:	mov    eax,DWORD PTR [rbp-0x7c]
  40e50b:	movsxd rcx,eax
  40e50e:	mov    rdx,QWORD PTR [rbp-0x78]
  40e512:	cmp    rdx,rcx
  40e515:	je     40e538 <test_basic_sort@@Base+0x1d8>
  40e51b:	lea    rdi,[rip+0x16608]        # 424b2a <_IO_stdin_used@@Base+0x1b2a>
  40e522:	mov    al,0x0
  40e524:	call   404070 <printf@plt>
  40e529:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40e530:	mov    DWORD PTR [rbp-0x80],eax
  40e533:	jmp    40e551 <test_basic_sort@@Base+0x1f1>
  40e538:	jmp    40e53d <test_basic_sort@@Base+0x1dd>
  40e53d:	mov    al,BYTE PTR [rbp-0x48]
  40e540:	add    al,0x1
  40e542:	mov    BYTE PTR [rbp-0x48],al
  40e545:	jmp    40e470 <test_basic_sort@@Base+0x110>
  40e54a:	mov    DWORD PTR [rbp-0x4],0x0
  40e551:	mov    eax,DWORD PTR [rbp-0x4]
  40e554:	add    rsp,0x80
  40e55b:	pop    rbp
  40e55c:	ret    
  40e55d:	nop    DWORD PTR [rax]
  40e560:	push   rbp
  40e561:	mov    rbp,rsp
  40e564:	sub    rsp,0x10
  40e568:	mov    QWORD PTR [rbp-0x8],rdi
  40e56c:	mov    rdi,QWORD PTR [rbp-0x8]
  40e570:	call   417830 <main@@Base+0x3440>
  40e575:	add    rsp,0x10
  40e579:	pop    rbp
  40e57a:	ret    
  40e57b:	nop    DWORD PTR [rax+rax*1+0x0]
  40e580:	push   rbp
  40e581:	mov    rbp,rsp
  40e584:	sub    rsp,0x40
  40e588:	mov    al,sil
  40e58b:	mov    QWORD PTR [rbp-0x10],rdi
  40e58f:	mov    BYTE PTR [rbp-0x11],al
  40e592:	mov    QWORD PTR [rbp-0x20],0x0
  40e59a:	mov    rdi,QWORD PTR [rbp-0x10]
  40e59e:	call   4085d0 <verify_monster@@Base+0x19c0>
  40e5a3:	mov    QWORD PTR [rbp-0x28],rax
  40e5a7:	cmp    rax,0x0
  40e5ab:	jne    40e5c1 <test_basic_sort@@Base+0x261>
  40e5b1:	mov    rax,QWORD PTR [rip+0x23af0]        # 4320a8 <__data_start@@Base+0x10>
  40e5b8:	mov    QWORD PTR [rbp-0x8],rax
  40e5bc:	jmp    40e6db <test_basic_sort@@Base+0x37b>
  40e5c1:	mov    rax,QWORD PTR [rbp-0x28]
  40e5c5:	add    rax,0xffffffffffffffff
  40e5c9:	mov    QWORD PTR [rbp-0x28],rax
  40e5cd:	mov    rax,QWORD PTR [rbp-0x20]
  40e5d1:	cmp    rax,QWORD PTR [rbp-0x28]
  40e5d5:	jae    40e661 <test_basic_sort@@Base+0x301>
  40e5db:	mov    rax,QWORD PTR [rbp-0x20]
  40e5df:	mov    rcx,QWORD PTR [rbp-0x28]
  40e5e3:	sub    rcx,QWORD PTR [rbp-0x20]
  40e5e7:	shr    rcx,0x1
  40e5eb:	add    rax,rcx
  40e5ee:	mov    QWORD PTR [rbp-0x30],rax
  40e5f2:	mov    rdi,QWORD PTR [rbp-0x10]
  40e5f6:	mov    rsi,QWORD PTR [rbp-0x30]
  40e5fa:	call   4085f0 <verify_monster@@Base+0x19e0>
  40e5ff:	mov    BYTE PTR [rbp-0x12],al
  40e602:	movzx  edx,BYTE PTR [rbp-0x12]
  40e606:	movzx  r8d,BYTE PTR [rbp-0x11]
  40e60b:	cmp    edx,r8d
  40e60e:	jge    40e621 <test_basic_sort@@Base+0x2c1>
  40e614:	mov    eax,0xffffffff
  40e619:	mov    DWORD PTR [rbp-0x34],eax
  40e61c:	jmp    40e637 <test_basic_sort@@Base+0x2d7>
  40e621:	movzx  eax,BYTE PTR [rbp-0x12]
  40e625:	movzx  ecx,BYTE PTR [rbp-0x11]
  40e629:	cmp    eax,ecx
  40e62b:	setg   dl
  40e62e:	and    dl,0x1
  40e631:	movzx  eax,dl
  40e634:	mov    DWORD PTR [rbp-0x34],eax
  40e637:	mov    eax,DWORD PTR [rbp-0x34]
  40e63a:	cmp    eax,0x0
  40e63d:	jge    40e654 <test_basic_sort@@Base+0x2f4>
  40e643:	mov    rax,QWORD PTR [rbp-0x30]
  40e647:	add    rax,0x1
  40e64b:	mov    QWORD PTR [rbp-0x20],rax
  40e64f:	jmp    40e65c <test_basic_sort@@Base+0x2fc>
  40e654:	mov    rax,QWORD PTR [rbp-0x30]
  40e658:	mov    QWORD PTR [rbp-0x28],rax
  40e65c:	jmp    40e5cd <test_basic_sort@@Base+0x26d>
  40e661:	mov    rax,QWORD PTR [rbp-0x20]
  40e665:	cmp    rax,QWORD PTR [rbp-0x28]
  40e669:	jne    40e6d0 <test_basic_sort@@Base+0x370>
  40e66f:	mov    rdi,QWORD PTR [rbp-0x10]
  40e673:	mov    rsi,QWORD PTR [rbp-0x20]
  40e677:	call   4085f0 <verify_monster@@Base+0x19e0>
  40e67c:	mov    BYTE PTR [rbp-0x12],al
  40e67f:	movzx  ecx,BYTE PTR [rbp-0x12]
  40e683:	movzx  edx,BYTE PTR [rbp-0x11]
  40e687:	cmp    ecx,edx
  40e689:	jge    40e69c <test_basic_sort@@Base+0x33c>
  40e68f:	mov    eax,0xffffffff
  40e694:	mov    DWORD PTR [rbp-0x38],eax
  40e697:	jmp    40e6b2 <test_basic_sort@@Base+0x352>
  40e69c:	movzx  eax,BYTE PTR [rbp-0x12]
  40e6a0:	movzx  ecx,BYTE PTR [rbp-0x11]
  40e6a4:	cmp    eax,ecx
  40e6a6:	setg   dl
  40e6a9:	and    dl,0x1
  40e6ac:	movzx  eax,dl
  40e6af:	mov    DWORD PTR [rbp-0x38],eax
  40e6b2:	mov    eax,DWORD PTR [rbp-0x38]
  40e6b5:	cmp    eax,0x0
  40e6b8:	jne    40e6cb <test_basic_sort@@Base+0x36b>
  40e6be:	mov    rax,QWORD PTR [rbp-0x20]
  40e6c2:	mov    QWORD PTR [rbp-0x8],rax
  40e6c6:	jmp    40e6db <test_basic_sort@@Base+0x37b>
  40e6cb:	jmp    40e6d0 <test_basic_sort@@Base+0x370>
  40e6d0:	mov    rax,QWORD PTR [rip+0x239d1]        # 4320a8 <__data_start@@Base+0x10>
  40e6d7:	mov    QWORD PTR [rbp-0x8],rax
  40e6db:	mov    rax,QWORD PTR [rbp-0x8]
  40e6df:	add    rsp,0x40
  40e6e3:	pop    rbp
  40e6e4:	ret    
  40e6e5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e6ef:	nop

000000000040e6f0 <test_clone_slice@@Base>:
  40e6f0:	push   rbp
  40e6f1:	mov    rbp,rsp
  40e6f4:	sub    rsp,0x160
  40e6fb:	mov    QWORD PTR [rbp-0x8],rdi
  40e6ff:	mov    DWORD PTR [rbp-0x6c],0xffffffff
  40e706:	mov    eax,DWORD PTR [rip+0x14a1a]        # 423126 <_IO_stdin_used@@Base+0x126>
  40e70c:	mov    DWORD PTR [rbp-0x73],eax
  40e70f:	mov    cx,WORD PTR [rip+0x14a14]        # 42312a <_IO_stdin_used@@Base+0x12a>
  40e716:	mov    WORD PTR [rbp-0x6f],cx
  40e71a:	mov    dl,BYTE PTR [rip+0x14a0c]        # 42312c <_IO_stdin_used@@Base+0x12c>
  40e720:	mov    BYTE PTR [rbp-0x6d],dl
  40e723:	mov    rdi,QWORD PTR [rbp-0x8]
  40e727:	call   4197b0 <flatcc_builder_reset@@Base>
  40e72c:	mov    rdi,QWORD PTR [rbp-0x8]
  40e730:	mov    DWORD PTR [rbp-0x84],eax
  40e736:	call   40a2c0 <gen_monster@@Base+0x780>
  40e73b:	mov    rdi,QWORD PTR [rbp-0x8]
  40e73f:	lea    rsi,[rip+0x16403]        # 424b49 <_IO_stdin_used@@Base+0x1b49>
  40e746:	mov    DWORD PTR [rbp-0x88],eax
  40e74c:	call   405c40 <test_empty_monster@@Base+0x1b0>
  40e751:	mov    r8d,0x7
  40e757:	mov    edx,r8d
  40e75a:	lea    rsi,[rbp-0x73]
  40e75e:	mov    rdi,QWORD PTR [rbp-0x8]
  40e762:	mov    DWORD PTR [rbp-0x8c],eax
  40e768:	call   40ef70 <test_clone_slice@@Base+0x880>
  40e76d:	mov    rdi,QWORD PTR [rbp-0x8]
  40e771:	mov    DWORD PTR [rbp-0x90],eax
  40e777:	call   40a4a0 <gen_monster@@Base+0x960>
  40e77c:	mov    r8d,0x2
  40e782:	mov    esi,r8d
  40e785:	mov    rdi,QWORD PTR [rbp-0x8]
  40e789:	mov    DWORD PTR [rbp-0x94],eax
  40e78f:	call   40a4c0 <gen_monster@@Base+0x980>
  40e794:	mov    QWORD PTR [rbp-0x40],rax
  40e798:	mov    rax,QWORD PTR [rbp-0x40]
  40e79c:	mov    WORD PTR [rax],0x16
  40e7a1:	mov    rax,QWORD PTR [rbp-0x40]
  40e7a5:	mov    WORD PTR [rax+0x4],0x2c
  40e7ab:	mov    rdi,QWORD PTR [rbp-0x8]
  40e7af:	call   40a6d0 <gen_monster@@Base+0xb90>
  40e7b4:	mov    rdi,QWORD PTR [rbp-0x8]
  40e7b8:	mov    DWORD PTR [rbp-0x98],eax
  40e7be:	call   40a390 <gen_monster@@Base+0x850>
  40e7c3:	vmovss xmm0,DWORD PTR [rip+0x14849]        # 423014 <_IO_stdin_used@@Base+0x14>
  40e7cb:	vmovss DWORD PTR [rax],xmm0
  40e7cf:	mov    rdi,QWORD PTR [rbp-0x8]
  40e7d3:	call   40ae60 <gen_monster@@Base+0x1320>
  40e7d8:	mov    rdi,QWORD PTR [rbp-0x8]
  40e7dc:	lea    rsi,[rbp-0x68]
  40e7e0:	mov    DWORD PTR [rbp-0x9c],eax
  40e7e6:	call   41ec10 <flatcc_builder_finalize_aligned_buffer@@Base>
  40e7eb:	mov    rdx,QWORD PTR [rip+0x23806]        # 431ff8 <stderr@GLIBC_2.2.5>
  40e7f2:	mov    QWORD PTR [rbp-0x58],rax
  40e7f6:	mov    rsi,QWORD PTR [rbp-0x58]
  40e7fa:	mov    rax,QWORD PTR [rbp-0x68]
  40e7fe:	mov    rcx,QWORD PTR [rdx]
  40e801:	lea    rdi,[rip+0x1634c]        # 424b54 <_IO_stdin_used@@Base+0x1b54>
  40e808:	mov    rdx,rax
  40e80b:	call   404db0 <test_type_aliases@@Base+0x4b0>
  40e810:	mov    rdi,QWORD PTR [rbp-0x58]
  40e814:	call   4044a0 <verify_empty_monster@@Base+0x280>
  40e819:	mov    QWORD PTR [rbp-0x10],rax
  40e81d:	mov    rdi,QWORD PTR [rbp-0x8]
  40e821:	call   4197b0 <flatcc_builder_reset@@Base>
  40e826:	mov    rdi,QWORD PTR [rbp-0x8]
  40e82a:	mov    DWORD PTR [rbp-0xa0],eax
  40e830:	call   40a2c0 <gen_monster@@Base+0x780>
  40e835:	mov    rdi,QWORD PTR [rbp-0x10]
  40e839:	mov    DWORD PTR [rbp-0xa4],eax
  40e83f:	call   408050 <verify_monster@@Base+0x1440>
  40e844:	mov    QWORD PTR [rbp-0x30],rax
  40e848:	cmp    QWORD PTR [rbp-0x30],0x0
  40e84d:	je     40e858 <test_clone_slice@@Base+0x168>
  40e853:	jmp    40e877 <test_clone_slice@@Base+0x187>
  40e858:	lea    rdi,[rip+0x15919]        # 424178 <_IO_stdin_used@@Base+0x1178>
  40e85f:	lea    rsi,[rip+0x15389]        # 423bef <_IO_stdin_used@@Base+0xbef>
  40e866:	mov    edx,0x644
  40e86b:	lea    rcx,[rip+0x162fc]        # 424b6e <_IO_stdin_used@@Base+0x1b6e>
  40e872:	call   404090 <__assert_fail@plt>
  40e877:	mov    rdi,QWORD PTR [rbp-0x10]
  40e87b:	call   409010 <verify_monster@@Base+0x2400>
  40e880:	mov    QWORD PTR [rbp-0x28],rax
  40e884:	cmp    QWORD PTR [rbp-0x28],0x0
  40e889:	je     40e894 <test_clone_slice@@Base+0x1a4>
  40e88f:	jmp    40e8b3 <test_clone_slice@@Base+0x1c3>
  40e894:	lea    rdi,[rip+0x162fc]        # 424b97 <_IO_stdin_used@@Base+0x1b97>
  40e89b:	lea    rsi,[rip+0x1534d]        # 423bef <_IO_stdin_used@@Base+0xbef>
  40e8a2:	mov    edx,0x646
  40e8a7:	lea    rcx,[rip+0x162c0]        # 424b6e <_IO_stdin_used@@Base+0x1b6e>
  40e8ae:	call   404090 <__assert_fail@plt>
  40e8b3:	mov    rdi,QWORD PTR [rbp-0x10]
  40e8b7:	call   408860 <verify_monster@@Base+0x1c50>
  40e8bc:	mov    QWORD PTR [rbp-0x48],rax
  40e8c0:	cmp    QWORD PTR [rbp-0x48],0x0
  40e8c5:	je     40e8d0 <test_clone_slice@@Base+0x1e0>
  40e8cb:	jmp    40e8ef <test_clone_slice@@Base+0x1ff>
  40e8d0:	lea    rdi,[rip+0x162c6]        # 424b9d <_IO_stdin_used@@Base+0x1b9d>
  40e8d7:	lea    rsi,[rip+0x15311]        # 423bef <_IO_stdin_used@@Base+0xbef>
  40e8de:	mov    edx,0x648
  40e8e3:	lea    rcx,[rip+0x16284]        # 424b6e <_IO_stdin_used@@Base+0x1b6e>
  40e8ea:	call   404090 <__assert_fail@plt>
  40e8ef:	mov    rdi,QWORD PTR [rbp-0x8]
  40e8f3:	mov    rsi,QWORD PTR [rbp-0x30]
  40e8f7:	call   40efc0 <test_clone_slice@@Base+0x8d0>
  40e8fc:	mov    rdi,QWORD PTR [rbp-0x8]
  40e900:	mov    DWORD PTR [rbp-0xa8],eax
  40e906:	call   40cf40 <test_scan@@Base+0x1140>
  40e90b:	mov    rdi,QWORD PTR [rbp-0x8]
  40e90f:	mov    rsi,QWORD PTR [rbp-0x30]
  40e913:	mov    DWORD PTR [rbp-0xac],eax
  40e919:	call   40f000 <test_clone_slice@@Base+0x910>
  40e91e:	mov    ecx,0x4
  40e923:	mov    edx,ecx
  40e925:	mov    ecx,0x14
  40e92a:	mov    rdi,QWORD PTR [rbp-0x8]
  40e92e:	mov    rsi,QWORD PTR [rbp-0x30]
  40e932:	mov    QWORD PTR [rbp-0xb8],rax
  40e939:	call   40f040 <test_clone_slice@@Base+0x950>
  40e93e:	xor    r8d,r8d
  40e941:	mov    edx,r8d
  40e944:	mov    r8d,0x3
  40e94a:	mov    ecx,r8d
  40e94d:	mov    rdi,QWORD PTR [rbp-0x8]
  40e951:	mov    rsi,QWORD PTR [rbp-0x30]
  40e955:	mov    QWORD PTR [rbp-0xc0],rax
  40e95c:	call   40f040 <test_clone_slice@@Base+0x950>
  40e961:	mov    rdi,QWORD PTR [rbp-0x8]
  40e965:	mov    QWORD PTR [rbp-0xc8],rax
  40e96c:	call   40cf60 <test_scan@@Base+0x1160>
  40e971:	mov    rdi,QWORD PTR [rbp-0x8]
  40e975:	mov    DWORD PTR [rbp-0xcc],eax
  40e97b:	call   405c20 <test_empty_monster@@Base+0x190>
  40e980:	mov    r8d,0x2
  40e986:	mov    edx,r8d
  40e989:	mov    r8d,0x14
  40e98f:	mov    ecx,r8d
  40e992:	mov    rdi,QWORD PTR [rbp-0x8]
  40e996:	mov    rsi,QWORD PTR [rbp-0x30]
  40e99a:	mov    DWORD PTR [rbp-0xd0],eax
  40e9a0:	call   40f090 <test_clone_slice@@Base+0x9a0>
  40e9a5:	mov    rdi,QWORD PTR [rbp-0x8]
  40e9a9:	mov    rsi,QWORD PTR [rbp-0x28]
  40e9ad:	mov    DWORD PTR [rbp-0xd4],eax
  40e9b3:	call   40f0e0 <test_clone_slice@@Base+0x9f0>
  40e9b8:	mov    r8d,0x1
  40e9be:	mov    edx,r8d
  40e9c1:	mov    r8d,0x2
  40e9c7:	mov    ecx,r8d
  40e9ca:	mov    rdi,QWORD PTR [rbp-0x8]
  40e9ce:	mov    rsi,QWORD PTR [rbp-0x48]
  40e9d2:	mov    DWORD PTR [rbp-0xd8],eax
  40e9d8:	call   40f120 <test_clone_slice@@Base+0xa30>
  40e9dd:	mov    rdi,QWORD PTR [rbp-0x8]
  40e9e1:	mov    DWORD PTR [rbp-0xdc],eax
  40e9e7:	call   405c80 <test_empty_monster@@Base+0x1f0>
  40e9ec:	mov    DWORD PTR [rbp-0x34],eax
  40e9ef:	mov    rdi,QWORD PTR [rbp-0x8]
  40e9f3:	mov    eax,DWORD PTR [rbp-0x34]
  40e9f6:	mov    QWORD PTR [rbp-0xe8],rdi
  40e9fd:	mov    edi,eax
  40e9ff:	call   40ab50 <gen_monster@@Base+0x1010>
  40ea04:	mov    QWORD PTR [rbp-0x80],rax
  40ea08:	mov    rsi,QWORD PTR [rbp-0x80]
  40ea0c:	mov    rdi,QWORD PTR [rbp-0xe8]
  40ea13:	call   40aa90 <gen_monster@@Base+0xf50>
  40ea18:	mov    r8d,0x3
  40ea1e:	mov    edx,r8d
  40ea21:	mov    rdi,QWORD PTR [rbp-0x8]
  40ea25:	mov    rsi,QWORD PTR [rbp-0x28]
  40ea29:	mov    rcx,0xffffffffffffffff
  40ea30:	mov    DWORD PTR [rbp-0xec],eax
  40ea36:	call   40f170 <test_clone_slice@@Base+0xa80>
  40ea3b:	mov    rdi,QWORD PTR [rbp-0x8]
  40ea3f:	mov    rcx,QWORD PTR [rbp-0x10]
  40ea43:	mov    QWORD PTR [rbp-0xf8],rdi
  40ea4a:	mov    rdi,rcx
  40ea4d:	mov    DWORD PTR [rbp-0xfc],eax
  40ea53:	call   4047f0 <verify_empty_monster@@Base+0x5d0>
  40ea58:	mov    rdi,QWORD PTR [rbp-0xf8]
  40ea5f:	mov    rsi,rax
  40ea62:	call   40f1c0 <test_clone_slice@@Base+0xad0>
  40ea67:	mov    rdi,QWORD PTR [rbp-0x8]
  40ea6b:	mov    rsi,QWORD PTR [rbp-0x48]
  40ea6f:	mov    DWORD PTR [rbp-0x100],eax
  40ea75:	call   40f210 <test_clone_slice@@Base+0xb20>
  40ea7a:	mov    rdi,QWORD PTR [rbp-0x8]
  40ea7e:	mov    DWORD PTR [rbp-0x104],eax
  40ea84:	call   40ae60 <gen_monster@@Base+0x1320>
  40ea89:	mov    rdi,QWORD PTR [rbp-0x8]
  40ea8d:	lea    rsi,[rbp-0x68]
  40ea91:	mov    DWORD PTR [rbp-0x108],eax
  40ea97:	call   41e9b0 <flatcc_builder_get_direct_buffer@@Base>
  40ea9c:	mov    rcx,QWORD PTR [rip+0x23555]        # 431ff8 <stderr@GLIBC_2.2.5>
  40eaa3:	mov    QWORD PTR [rbp-0x60],rax
  40eaa7:	mov    rsi,QWORD PTR [rbp-0x60]
  40eaab:	mov    rdx,QWORD PTR [rbp-0x68]
  40eaaf:	mov    rcx,QWORD PTR [rcx]
  40eab2:	lea    rdi,[rip+0x160ea]        # 424ba3 <_IO_stdin_used@@Base+0x1ba3>
  40eab9:	call   404db0 <test_type_aliases@@Base+0x4b0>
  40eabe:	mov    rdi,QWORD PTR [rbp-0x60]
  40eac2:	call   4044a0 <verify_empty_monster@@Base+0x280>
  40eac7:	mov    QWORD PTR [rbp-0x18],rax
  40eacb:	mov    rdi,QWORD PTR [rbp-0x18]
  40eacf:	call   408050 <verify_monster@@Base+0x1440>
  40ead4:	lea    rsi,[rip+0x1606e]        # 424b49 <_IO_stdin_used@@Base+0x1b49>
  40eadb:	mov    rdi,rax
  40eade:	call   4040d0 <strcmp@plt>
  40eae3:	cmp    eax,0x0
  40eae6:	je     40eb05 <test_clone_slice@@Base+0x415>
  40eaec:	lea    rdi,[rip+0x160c7]        # 424bba <_IO_stdin_used@@Base+0x1bba>
  40eaf3:	mov    al,0x0
  40eaf5:	call   404070 <printf@plt>
  40eafa:	mov    DWORD PTR [rbp-0x10c],eax
  40eb00:	jmp    40ef56 <test_clone_slice@@Base+0x866>
  40eb05:	mov    rdi,QWORD PTR [rbp-0x18]
  40eb09:	call   408d10 <verify_monster@@Base+0x2100>
  40eb0e:	xor    ecx,ecx
  40eb10:	mov    esi,ecx
  40eb12:	mov    QWORD PTR [rbp-0x20],rax
  40eb16:	mov    rdi,QWORD PTR [rbp-0x20]
  40eb1a:	call   408e90 <verify_monster@@Base+0x2280>
  40eb1f:	lea    rsi,[rip+0x16023]        # 424b49 <_IO_stdin_used@@Base+0x1b49>
  40eb26:	mov    rdi,rax
  40eb29:	call   4040d0 <strcmp@plt>
  40eb2e:	cmp    eax,0x0
  40eb31:	je     40eb50 <test_clone_slice@@Base+0x460>
  40eb37:	lea    rdi,[rip+0x16097]        # 424bd5 <_IO_stdin_used@@Base+0x1bd5>
  40eb3e:	mov    al,0x0
  40eb40:	call   404070 <printf@plt>
  40eb45:	mov    DWORD PTR [rbp-0x110],eax
  40eb4b:	jmp    40ef56 <test_clone_slice@@Base+0x866>
  40eb50:	mov    eax,0x1
  40eb55:	mov    esi,eax
  40eb57:	mov    rdi,QWORD PTR [rbp-0x20]
  40eb5b:	call   408e90 <verify_monster@@Base+0x2280>
  40eb60:	mov    rdi,rax
  40eb63:	call   408190 <verify_monster@@Base+0x1580>
  40eb68:	cmp    rax,0x6
  40eb6c:	je     40eb8b <test_clone_slice@@Base+0x49b>
  40eb72:	lea    rdi,[rip+0x1607a]        # 424bf3 <_IO_stdin_used@@Base+0x1bf3>
  40eb79:	mov    al,0x0
  40eb7b:	call   404070 <printf@plt>
  40eb80:	mov    DWORD PTR [rbp-0x114],eax
  40eb86:	jmp    40ef56 <test_clone_slice@@Base+0x866>
  40eb8b:	mov    eax,0x1
  40eb90:	mov    esi,eax
  40eb92:	mov    rdi,QWORD PTR [rbp-0x20]
  40eb96:	call   408e90 <verify_monster@@Base+0x2280>
  40eb9b:	lea    rsi,[rip+0x15fab]        # 424b4d <_IO_stdin_used@@Base+0x1b4d>
  40eba2:	mov    rdi,rax
  40eba5:	call   4040d0 <strcmp@plt>
  40ebaa:	cmp    eax,0x0
  40ebad:	je     40ebcc <test_clone_slice@@Base+0x4dc>
  40ebb3:	lea    rdi,[rip+0x1605e]        # 424c18 <_IO_stdin_used@@Base+0x1c18>
  40ebba:	mov    al,0x0
  40ebbc:	call   404070 <printf@plt>
  40ebc1:	mov    DWORD PTR [rbp-0x118],eax
  40ebc7:	jmp    40ef56 <test_clone_slice@@Base+0x866>
  40ebcc:	mov    eax,0x2
  40ebd1:	mov    esi,eax
  40ebd3:	mov    rdi,QWORD PTR [rbp-0x20]
  40ebd7:	call   408e90 <verify_monster@@Base+0x2280>
  40ebdc:	mov    rdi,rax
  40ebdf:	call   408190 <verify_monster@@Base+0x1580>
  40ebe4:	cmp    rax,0x3
  40ebe8:	je     40ec07 <test_clone_slice@@Base+0x517>
  40ebee:	lea    rdi,[rip+0x1603d]        # 424c32 <_IO_stdin_used@@Base+0x1c32>
  40ebf5:	mov    al,0x0
  40ebf7:	call   404070 <printf@plt>
  40ebfc:	mov    DWORD PTR [rbp-0x11c],eax
  40ec02:	jmp    40ef56 <test_clone_slice@@Base+0x866>
  40ec07:	mov    eax,0x2
  40ec0c:	mov    esi,eax
  40ec0e:	mov    rdi,QWORD PTR [rbp-0x20]
  40ec12:	call   408e90 <verify_monster@@Base+0x2280>
  40ec17:	lea    rsi,[rip+0x16035]        # 424c53 <_IO_stdin_used@@Base+0x1c53>
  40ec1e:	mov    rdi,rax
  40ec21:	call   4040d0 <strcmp@plt>
  40ec26:	cmp    eax,0x0
  40ec29:	je     40ec48 <test_clone_slice@@Base+0x558>
  40ec2f:	lea    rdi,[rip+0x16021]        # 424c57 <_IO_stdin_used@@Base+0x1c57>
  40ec36:	mov    al,0x0
  40ec38:	call   404070 <printf@plt>
  40ec3d:	mov    DWORD PTR [rbp-0x120],eax
  40ec43:	jmp    40ef56 <test_clone_slice@@Base+0x866>
  40ec48:	mov    rdi,QWORD PTR [rbp-0x18]
  40ec4c:	call   4092e0 <verify_monster@@Base+0x26d0>
  40ec51:	mov    QWORD PTR [rbp-0x10],rax
  40ec55:	cmp    QWORD PTR [rbp-0x10],0x0
  40ec5a:	je     40ec65 <test_clone_slice@@Base+0x575>
  40ec60:	jmp    40ec84 <test_clone_slice@@Base+0x594>
  40ec65:	lea    rdi,[rip+0x14f7f]        # 423beb <_IO_stdin_used@@Base+0xbeb>
  40ec6c:	lea    rsi,[rip+0x14f7c]        # 423bef <_IO_stdin_used@@Base+0xbef>
  40ec73:	mov    edx,0x680
  40ec78:	lea    rcx,[rip+0x15eef]        # 424b6e <_IO_stdin_used@@Base+0x1b6e>
  40ec7f:	call   404090 <__assert_fail@plt>
  40ec84:	mov    rdi,QWORD PTR [rbp-0x10]
  40ec88:	call   408050 <verify_monster@@Base+0x1440>
  40ec8d:	lea    rsi,[rip+0x15eb7]        # 424b4b <_IO_stdin_used@@Base+0x1b4b>
  40ec94:	mov    rdi,rax
  40ec97:	call   4040d0 <strcmp@plt>
  40ec9c:	cmp    eax,0x0
  40ec9f:	je     40ecbe <test_clone_slice@@Base+0x5ce>
  40eca5:	lea    rdi,[rip+0x15fc2]        # 424c6e <_IO_stdin_used@@Base+0x1c6e>
  40ecac:	mov    al,0x0
  40ecae:	call   404070 <printf@plt>
  40ecb3:	mov    DWORD PTR [rbp-0x124],eax
  40ecb9:	jmp    40ef56 <test_clone_slice@@Base+0x866>
  40ecbe:	mov    rdi,QWORD PTR [rbp-0x10]
  40ecc2:	call   409010 <verify_monster@@Base+0x2400>
  40ecc7:	mov    QWORD PTR [rbp-0x28],rax
  40eccb:	mov    rdi,QWORD PTR [rbp-0x28]
  40eccf:	call   409140 <verify_monster@@Base+0x2530>
  40ecd4:	cmp    rax,0x7
  40ecd8:	je     40ecf7 <test_clone_slice@@Base+0x607>
  40ecde:	lea    rdi,[rip+0x15fb9]        # 424c9e <_IO_stdin_used@@Base+0x1c9e>
  40ece5:	mov    al,0x0
  40ece7:	call   404070 <printf@plt>
  40ecec:	mov    DWORD PTR [rbp-0x128],eax
  40ecf2:	jmp    40ef56 <test_clone_slice@@Base+0x866>
  40ecf7:	lea    rsi,[rbp-0x73]
  40ecfb:	mov    rdi,QWORD PTR [rbp-0x28]
  40ecff:	mov    eax,0x7
  40ed04:	mov    edx,eax
  40ed06:	call   4040c0 <memcmp@plt>
  40ed0b:	cmp    eax,0x0
  40ed0e:	je     40ed2d <test_clone_slice@@Base+0x63d>
  40ed14:	lea    rdi,[rip+0x15fa0]        # 424cbb <_IO_stdin_used@@Base+0x1cbb>
  40ed1b:	mov    al,0x0
  40ed1d:	call   404070 <printf@plt>
  40ed22:	mov    DWORD PTR [rbp-0x12c],eax
  40ed28:	jmp    40ef56 <test_clone_slice@@Base+0x866>
  40ed2d:	mov    rdi,QWORD PTR [rbp-0x18]
  40ed31:	call   409010 <verify_monster@@Base+0x2400>
  40ed36:	mov    QWORD PTR [rbp-0x28],rax
  40ed3a:	mov    rdi,QWORD PTR [rbp-0x28]
  40ed3e:	call   409140 <verify_monster@@Base+0x2530>
  40ed43:	cmp    rax,0x4
  40ed47:	je     40ed66 <test_clone_slice@@Base+0x676>
  40ed4d:	lea    rdi,[rip+0x15f86]        # 424cda <_IO_stdin_used@@Base+0x1cda>
  40ed54:	mov    al,0x0
  40ed56:	call   404070 <printf@plt>
  40ed5b:	mov    DWORD PTR [rbp-0x130],eax
  40ed61:	jmp    40ef56 <test_clone_slice@@Base+0x866>
  40ed66:	lea    rax,[rbp-0x73]
  40ed6a:	mov    rcx,QWORD PTR [rbp-0x28]
  40ed6e:	add    rax,0x3
  40ed72:	mov    edx,DWORD PTR [rax]
  40ed74:	mov    esi,DWORD PTR [rcx]
  40ed76:	sub    esi,edx
  40ed78:	setne  dil
  40ed7c:	movzx  edx,dil
  40ed80:	cmp    edx,0x0
  40ed83:	mov    DWORD PTR [rbp-0x134],esi
  40ed89:	je     40eda8 <test_clone_slice@@Base+0x6b8>
  40ed8f:	lea    rdi,[rip+0x15f61]        # 424cf7 <_IO_stdin_used@@Base+0x1cf7>
  40ed96:	mov    al,0x0
  40ed98:	call   404070 <printf@plt>
  40ed9d:	mov    DWORD PTR [rbp-0x138],eax
  40eda3:	jmp    40ef56 <test_clone_slice@@Base+0x866>
  40eda8:	mov    rdi,QWORD PTR [rbp-0x18]
  40edac:	call   4047f0 <verify_empty_monster@@Base+0x5d0>
  40edb1:	vmovss xmm0,DWORD PTR [rip+0x1425b]        # 423014 <_IO_stdin_used@@Base+0x14>
  40edb9:	vmovss xmm1,DWORD PTR [rax]
  40edbd:	vucomiss xmm1,xmm0
  40edc1:	jne    40edd2 <test_clone_slice@@Base+0x6e2>
  40edc7:	jp     40edd2 <test_clone_slice@@Base+0x6e2>
  40edcd:	jmp    40edeb <test_clone_slice@@Base+0x6fb>
  40edd2:	lea    rdi,[rip+0x15f3d]        # 424d16 <_IO_stdin_used@@Base+0x1d16>
  40edd9:	mov    al,0x0
  40eddb:	call   404070 <printf@plt>
  40ede0:	mov    DWORD PTR [rbp-0x13c],eax
  40ede6:	jmp    40ef56 <test_clone_slice@@Base+0x866>
  40edeb:	mov    rdi,QWORD PTR [rbp-0x18]
  40edef:	call   408860 <verify_monster@@Base+0x1c50>
  40edf4:	mov    QWORD PTR [rbp-0x48],rax
  40edf8:	mov    rdi,QWORD PTR [rbp-0x48]
  40edfc:	call   408990 <verify_monster@@Base+0x1d80>
  40ee01:	cmp    rax,0x2
  40ee05:	je     40ee24 <test_clone_slice@@Base+0x734>
  40ee0b:	lea    rdi,[rip+0x15f1e]        # 424d30 <_IO_stdin_used@@Base+0x1d30>
  40ee12:	mov    al,0x0
  40ee14:	call   404070 <printf@plt>
  40ee19:	mov    DWORD PTR [rbp-0x140],eax
  40ee1f:	jmp    40ef56 <test_clone_slice@@Base+0x866>
  40ee24:	xor    eax,eax
  40ee26:	mov    esi,eax
  40ee28:	mov    rdi,QWORD PTR [rbp-0x48]
  40ee2c:	call   4089e0 <verify_monster@@Base+0x1dd0>
  40ee31:	mov    QWORD PTR [rbp-0x50],rax
  40ee35:	mov    rdi,QWORD PTR [rbp-0x50]
  40ee39:	call   408a50 <verify_monster@@Base+0x1e40>
  40ee3e:	movsx  ecx,ax
  40ee41:	cmp    ecx,0x16
  40ee44:	je     40ee63 <test_clone_slice@@Base+0x773>
  40ee4a:	lea    rdi,[rip+0x15f13]        # 424d64 <_IO_stdin_used@@Base+0x1d64>
  40ee51:	mov    al,0x0
  40ee53:	call   404070 <printf@plt>
  40ee58:	mov    DWORD PTR [rbp-0x144],eax
  40ee5e:	jmp    40ef56 <test_clone_slice@@Base+0x866>
  40ee63:	xor    eax,eax
  40ee65:	mov    esi,eax
  40ee67:	mov    rdi,QWORD PTR [rbp-0x48]
  40ee6b:	call   4089e0 <verify_monster@@Base+0x1dd0>
  40ee70:	movsx  ecx,WORD PTR [rax]
  40ee73:	cmp    ecx,0x16
  40ee76:	je     40ee95 <test_clone_slice@@Base+0x7a5>
  40ee7c:	lea    rdi,[rip+0x15efd]        # 424d80 <_IO_stdin_used@@Base+0x1d80>
  40ee83:	mov    al,0x0
  40ee85:	call   404070 <printf@plt>
  40ee8a:	mov    DWORD PTR [rbp-0x148],eax
  40ee90:	jmp    40ef56 <test_clone_slice@@Base+0x866>
  40ee95:	mov    eax,0x1
  40ee9a:	mov    esi,eax
  40ee9c:	mov    rdi,QWORD PTR [rbp-0x48]
  40eea0:	call   4089e0 <verify_monster@@Base+0x1dd0>
  40eea5:	mov    QWORD PTR [rbp-0x50],rax
  40eea9:	mov    rdi,QWORD PTR [rbp-0x50]
  40eead:	call   408a50 <verify_monster@@Base+0x1e40>
  40eeb2:	movsx  ecx,ax
  40eeb5:	cmp    ecx,0x2c
  40eeb8:	je     40eed7 <test_clone_slice@@Base+0x7e7>
  40eebe:	lea    rdi,[rip+0x15ee6]        # 424dab <_IO_stdin_used@@Base+0x1dab>
  40eec5:	mov    al,0x0
  40eec7:	call   404070 <printf@plt>
  40eecc:	mov    DWORD PTR [rbp-0x14c],eax
  40eed2:	jmp    40ef56 <test_clone_slice@@Base+0x866>
  40eed7:	mov    rdi,QWORD PTR [rbp-0x10]
  40eedb:	call   408860 <verify_monster@@Base+0x1c50>
  40eee0:	mov    QWORD PTR [rbp-0x48],rax
  40eee4:	mov    rdi,QWORD PTR [rbp-0x48]
  40eee8:	call   408990 <verify_monster@@Base+0x1d80>
  40eeed:	cmp    rax,0x1
  40eef1:	je     40ef10 <test_clone_slice@@Base+0x820>
  40eef7:	lea    rdi,[rip+0x15ec9]        # 424dc7 <_IO_stdin_used@@Base+0x1dc7>
  40eefe:	mov    al,0x0
  40ef00:	call   404070 <printf@plt>
  40ef05:	mov    DWORD PTR [rbp-0x150],eax
  40ef0b:	jmp    40ef56 <test_clone_slice@@Base+0x866>
  40ef10:	xor    eax,eax
  40ef12:	mov    esi,eax
  40ef14:	mov    rdi,QWORD PTR [rbp-0x48]
  40ef18:	call   4089e0 <verify_monster@@Base+0x1dd0>
  40ef1d:	mov    QWORD PTR [rbp-0x50],rax
  40ef21:	mov    rdi,QWORD PTR [rbp-0x50]
  40ef25:	call   408a50 <verify_monster@@Base+0x1e40>
  40ef2a:	movsx  ecx,ax
  40ef2d:	cmp    ecx,0x2c
  40ef30:	je     40ef4f <test_clone_slice@@Base+0x85f>
  40ef36:	lea    rdi,[rip+0x15ea8]        # 424de5 <_IO_stdin_used@@Base+0x1de5>
  40ef3d:	mov    al,0x0
  40ef3f:	call   404070 <printf@plt>
  40ef44:	mov    DWORD PTR [rbp-0x154],eax
  40ef4a:	jmp    40ef56 <test_clone_slice@@Base+0x866>
  40ef4f:	mov    DWORD PTR [rbp-0x6c],0x0
  40ef56:	mov    rdi,QWORD PTR [rbp-0x58]
  40ef5a:	call   41eda0 <flatcc_builder_aligned_free@@Base>
  40ef5f:	mov    eax,DWORD PTR [rbp-0x6c]
  40ef62:	add    rsp,0x160
  40ef69:	pop    rbp
  40ef6a:	ret    
  40ef6b:	nop    DWORD PTR [rax+rax*1+0x0]
  40ef70:	push   rbp
  40ef71:	mov    rbp,rsp
  40ef74:	sub    rsp,0x20
  40ef78:	mov    QWORD PTR [rbp-0x8],rdi
  40ef7c:	mov    QWORD PTR [rbp-0x10],rsi
  40ef80:	mov    QWORD PTR [rbp-0x18],rdx
  40ef84:	mov    rdi,QWORD PTR [rbp-0x8]
  40ef88:	mov    rdx,QWORD PTR [rbp-0x8]
  40ef8c:	mov    rsi,QWORD PTR [rbp-0x10]
  40ef90:	mov    rax,QWORD PTR [rbp-0x18]
  40ef94:	mov    QWORD PTR [rbp-0x20],rdi
  40ef98:	mov    rdi,rdx
  40ef9b:	mov    rdx,rax
  40ef9e:	call   417a70 <main@@Base+0x3680>
  40efa3:	mov    rdi,QWORD PTR [rbp-0x20]
  40efa7:	mov    esi,eax
  40efa9:	call   417180 <main@@Base+0x2d90>
  40efae:	add    rsp,0x20
  40efb2:	pop    rbp
  40efb3:	ret    
  40efb4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40efbe:	xchg   ax,ax
  40efc0:	push   rbp
  40efc1:	mov    rbp,rsp
  40efc4:	sub    rsp,0x20
  40efc8:	mov    QWORD PTR [rbp-0x8],rdi
  40efcc:	mov    QWORD PTR [rbp-0x10],rsi
  40efd0:	mov    rdi,QWORD PTR [rbp-0x8]
  40efd4:	mov    rsi,QWORD PTR [rbp-0x8]
  40efd8:	mov    rax,QWORD PTR [rbp-0x10]
  40efdc:	mov    QWORD PTR [rbp-0x18],rdi
  40efe0:	mov    rdi,rsi
  40efe3:	mov    rsi,rax
  40efe6:	call   417ab0 <main@@Base+0x36c0>
  40efeb:	mov    rdi,QWORD PTR [rbp-0x18]
  40efef:	mov    esi,eax
  40eff1:	call   40a740 <gen_monster@@Base+0xc00>
  40eff6:	add    rsp,0x20
  40effa:	pop    rbp
  40effb:	ret    
  40effc:	nop    DWORD PTR [rax+0x0]
  40f000:	push   rbp
  40f001:	mov    rbp,rsp
  40f004:	sub    rsp,0x20
  40f008:	mov    QWORD PTR [rbp-0x8],rdi
  40f00c:	mov    QWORD PTR [rbp-0x10],rsi
  40f010:	mov    rdi,QWORD PTR [rbp-0x8]
  40f014:	mov    rsi,QWORD PTR [rbp-0x8]
  40f018:	mov    rax,QWORD PTR [rbp-0x10]
  40f01c:	mov    QWORD PTR [rbp-0x18],rdi
  40f020:	mov    rdi,rsi
  40f023:	mov    rsi,rax
  40f026:	call   417ab0 <main@@Base+0x36c0>
  40f02b:	mov    rdi,QWORD PTR [rbp-0x18]
  40f02f:	mov    esi,eax
  40f031:	call   417b00 <main@@Base+0x3710>
  40f036:	add    rsp,0x20
  40f03a:	pop    rbp
  40f03b:	ret    
  40f03c:	nop    DWORD PTR [rax+0x0]
  40f040:	push   rbp
  40f041:	mov    rbp,rsp
  40f044:	sub    rsp,0x30
  40f048:	mov    QWORD PTR [rbp-0x8],rdi
  40f04c:	mov    QWORD PTR [rbp-0x10],rsi
  40f050:	mov    QWORD PTR [rbp-0x18],rdx
  40f054:	mov    QWORD PTR [rbp-0x20],rcx
  40f058:	mov    rdi,QWORD PTR [rbp-0x8]
  40f05c:	mov    rcx,QWORD PTR [rbp-0x8]
  40f060:	mov    rsi,QWORD PTR [rbp-0x10]
  40f064:	mov    rdx,QWORD PTR [rbp-0x18]
  40f068:	mov    rax,QWORD PTR [rbp-0x20]
  40f06c:	mov    QWORD PTR [rbp-0x28],rdi
  40f070:	mov    rdi,rcx
  40f073:	mov    rcx,rax
  40f076:	call   417b50 <main@@Base+0x3760>
  40f07b:	mov    rdi,QWORD PTR [rbp-0x28]
  40f07f:	mov    esi,eax
  40f081:	call   417b00 <main@@Base+0x3710>
  40f086:	add    rsp,0x30
  40f08a:	pop    rbp
  40f08b:	ret    
  40f08c:	nop    DWORD PTR [rax+0x0]
  40f090:	push   rbp
  40f091:	mov    rbp,rsp
  40f094:	sub    rsp,0x30
  40f098:	mov    QWORD PTR [rbp-0x8],rdi
  40f09c:	mov    QWORD PTR [rbp-0x10],rsi
  40f0a0:	mov    QWORD PTR [rbp-0x18],rdx
  40f0a4:	mov    QWORD PTR [rbp-0x20],rcx
  40f0a8:	mov    rdi,QWORD PTR [rbp-0x8]
  40f0ac:	mov    rcx,QWORD PTR [rbp-0x8]
  40f0b0:	mov    rsi,QWORD PTR [rbp-0x10]
  40f0b4:	mov    rdx,QWORD PTR [rbp-0x18]
  40f0b8:	mov    rax,QWORD PTR [rbp-0x20]
  40f0bc:	mov    QWORD PTR [rbp-0x28],rdi
  40f0c0:	mov    rdi,rcx
  40f0c3:	mov    rcx,rax
  40f0c6:	call   417b50 <main@@Base+0x3760>
  40f0cb:	mov    rdi,QWORD PTR [rbp-0x28]
  40f0cf:	mov    esi,eax
  40f0d1:	call   40a740 <gen_monster@@Base+0xc00>
  40f0d6:	add    rsp,0x30
  40f0da:	pop    rbp
  40f0db:	ret    
  40f0dc:	nop    DWORD PTR [rax+0x0]
  40f0e0:	push   rbp
  40f0e1:	mov    rbp,rsp
  40f0e4:	sub    rsp,0x20
  40f0e8:	mov    QWORD PTR [rbp-0x8],rdi
  40f0ec:	mov    QWORD PTR [rbp-0x10],rsi
  40f0f0:	mov    rdi,QWORD PTR [rbp-0x8]
  40f0f4:	mov    rsi,QWORD PTR [rbp-0x8]
  40f0f8:	mov    rax,QWORD PTR [rbp-0x10]
  40f0fc:	mov    QWORD PTR [rbp-0x18],rdi
  40f100:	mov    rdi,rsi
  40f103:	mov    rsi,rax
  40f106:	call   417bd0 <main@@Base+0x37e0>
  40f10b:	mov    rdi,QWORD PTR [rbp-0x18]
  40f10f:	mov    esi,eax
  40f111:	call   417180 <main@@Base+0x2d90>
  40f116:	add    rsp,0x20
  40f11a:	pop    rbp
  40f11b:	ret    
  40f11c:	nop    DWORD PTR [rax+0x0]
  40f120:	push   rbp
  40f121:	mov    rbp,rsp
  40f124:	sub    rsp,0x30
  40f128:	mov    QWORD PTR [rbp-0x8],rdi
  40f12c:	mov    QWORD PTR [rbp-0x10],rsi
  40f130:	mov    QWORD PTR [rbp-0x18],rdx
  40f134:	mov    QWORD PTR [rbp-0x20],rcx
  40f138:	mov    rdi,QWORD PTR [rbp-0x8]
  40f13c:	mov    rcx,QWORD PTR [rbp-0x8]
  40f140:	mov    rsi,QWORD PTR [rbp-0x10]
  40f144:	mov    rdx,QWORD PTR [rbp-0x18]
  40f148:	mov    rax,QWORD PTR [rbp-0x20]
  40f14c:	mov    QWORD PTR [rbp-0x28],rdi
  40f150:	mov    rdi,rcx
  40f153:	mov    rcx,rax
  40f156:	call   417c30 <main@@Base+0x3840>
  40f15b:	mov    rdi,QWORD PTR [rbp-0x28]
  40f15f:	mov    esi,eax
  40f161:	call   416fc0 <main@@Base+0x2bd0>
  40f166:	add    rsp,0x30
  40f16a:	pop    rbp
  40f16b:	ret    
  40f16c:	nop    DWORD PTR [rax+0x0]
  40f170:	push   rbp
  40f171:	mov    rbp,rsp
  40f174:	sub    rsp,0x30
  40f178:	mov    QWORD PTR [rbp-0x8],rdi
  40f17c:	mov    QWORD PTR [rbp-0x10],rsi
  40f180:	mov    QWORD PTR [rbp-0x18],rdx
  40f184:	mov    QWORD PTR [rbp-0x20],rcx
  40f188:	mov    rdi,QWORD PTR [rbp-0x8]
  40f18c:	mov    rcx,QWORD PTR [rbp-0x8]
  40f190:	mov    rsi,QWORD PTR [rbp-0x10]
  40f194:	mov    rdx,QWORD PTR [rbp-0x18]
  40f198:	mov    rax,QWORD PTR [rbp-0x20]
  40f19c:	mov    QWORD PTR [rbp-0x28],rdi
  40f1a0:	mov    rdi,rcx
  40f1a3:	mov    rcx,rax
  40f1a6:	call   417d00 <main@@Base+0x3910>
  40f1ab:	mov    rdi,QWORD PTR [rbp-0x28]
  40f1af:	mov    esi,eax
  40f1b1:	call   417180 <main@@Base+0x2d90>
  40f1b6:	add    rsp,0x30
  40f1ba:	pop    rbp
  40f1bb:	ret    
  40f1bc:	nop    DWORD PTR [rax+0x0]
  40f1c0:	push   rbp
  40f1c1:	mov    rbp,rsp
  40f1c4:	sub    rsp,0x20
  40f1c8:	xor    eax,eax
  40f1ca:	mov    ecx,0x20
  40f1cf:	mov    QWORD PTR [rbp-0x8],rdi
  40f1d3:	mov    QWORD PTR [rbp-0x10],rsi
  40f1d7:	mov    rdi,QWORD PTR [rbp-0x8]
  40f1db:	mov    rsi,QWORD PTR [rbp-0x10]
  40f1df:	mov    QWORD PTR [rbp-0x18],rsi
  40f1e3:	mov    esi,eax
  40f1e5:	mov    rdx,QWORD PTR [rbp-0x18]
  40f1e9:	mov    r8d,0x10
  40f1ef:	call   41e590 <flatcc_builder_table_add_copy@@Base>
  40f1f4:	xor    esi,esi
  40f1f6:	mov    ecx,esi
  40f1f8:	xor    esi,esi
  40f1fa:	cmp    rcx,rax
  40f1fd:	mov    r8d,0xffffffff
  40f203:	cmove  esi,r8d
  40f207:	mov    eax,esi
  40f209:	add    rsp,0x20
  40f20d:	pop    rbp
  40f20e:	ret    
  40f20f:	nop
  40f210:	push   rbp
  40f211:	mov    rbp,rsp
  40f214:	sub    rsp,0x20
  40f218:	mov    QWORD PTR [rbp-0x8],rdi
  40f21c:	mov    QWORD PTR [rbp-0x10],rsi
  40f220:	mov    rdi,QWORD PTR [rbp-0x8]
  40f224:	mov    rsi,QWORD PTR [rbp-0x8]
  40f228:	mov    rax,QWORD PTR [rbp-0x10]
  40f22c:	mov    QWORD PTR [rbp-0x18],rdi
  40f230:	mov    rdi,rsi
  40f233:	mov    rsi,rax
  40f236:	call   417dd0 <main@@Base+0x39e0>
  40f23b:	mov    rdi,QWORD PTR [rbp-0x18]
  40f23f:	mov    esi,eax
  40f241:	call   416fc0 <main@@Base+0x2bd0>
  40f246:	add    rsp,0x20
  40f24a:	pop    rbp
  40f24b:	ret    
  40f24c:	nop    DWORD PTR [rax+0x0]

000000000040f250 <test_create_add_field@@Base>:
  40f250:	push   rbp
  40f251:	mov    rbp,rsp
  40f254:	sub    rsp,0x60
  40f258:	mov    QWORD PTR [rbp-0x8],rdi
  40f25c:	mov    DWORD PTR [rbp-0x1c],0xffffffff
  40f263:	mov    rdi,QWORD PTR [rbp-0x8]
  40f267:	call   4197b0 <flatcc_builder_reset@@Base>
  40f26c:	mov    rdi,QWORD PTR [rbp-0x8]
  40f270:	mov    DWORD PTR [rbp-0x34],eax
  40f273:	call   40a2c0 <gen_monster@@Base+0x780>
  40f278:	mov    rdi,QWORD PTR [rbp-0x8]
  40f27c:	lea    rsi,[rip+0x140d4]        # 423357 <_IO_stdin_used@@Base+0x357>
  40f283:	mov    DWORD PTR [rbp-0x38],eax
  40f286:	call   405c40 <test_empty_monster@@Base+0x1b0>
  40f28b:	mov    rdi,QWORD PTR [rbp-0x8]
  40f28f:	mov    rsi,QWORD PTR [rbp-0x8]
  40f293:	mov    QWORD PTR [rbp-0x40],rdi
  40f297:	mov    rdi,rsi
  40f29a:	lea    rsi,[rip+0x15b69]        # 424e0a <_IO_stdin_used@@Base+0x1e0a>
  40f2a1:	mov    DWORD PTR [rbp-0x44],eax
  40f2a4:	call   40a980 <gen_monster@@Base+0xe40>
  40f2a9:	mov    rdi,QWORD PTR [rbp-0x40]
  40f2ad:	mov    esi,eax
  40f2af:	mov    rdx,0xffffffffffffff9c
  40f2b6:	mov    ecx,0x2
  40f2bb:	call   40f380 <test_create_add_field@@Base+0x130>
  40f2c0:	xor    esi,esi
  40f2c2:	mov    rdi,QWORD PTR [rbp-0x8]
  40f2c6:	mov    DWORD PTR [rbp-0x48],eax
  40f2c9:	call   40f3d0 <test_create_add_field@@Base+0x180>
  40f2ce:	mov    rdi,QWORD PTR [rbp-0x8]
  40f2d2:	mov    DWORD PTR [rbp-0x4c],eax
  40f2d5:	call   40ae60 <gen_monster@@Base+0x1320>
  40f2da:	mov    rdi,QWORD PTR [rbp-0x8]
  40f2de:	lea    rsi,[rbp-0x18]
  40f2e2:	mov    DWORD PTR [rbp-0x50],eax
  40f2e5:	call   41ec10 <flatcc_builder_finalize_aligned_buffer@@Base>
  40f2ea:	mov    QWORD PTR [rbp-0x10],rax
  40f2ee:	mov    rdi,QWORD PTR [rbp-0x10]
  40f2f2:	call   4044a0 <verify_empty_monster@@Base+0x280>
  40f2f7:	mov    QWORD PTR [rbp-0x28],rax
  40f2fb:	mov    rdi,QWORD PTR [rbp-0x28]
  40f2ff:	call   40f430 <test_create_add_field@@Base+0x1e0>
  40f304:	cmp    eax,0x0
  40f307:	je     40f323 <test_create_add_field@@Base+0xd3>
  40f30d:	lea    rdi,[rip+0x15afc]        # 424e10 <_IO_stdin_used@@Base+0x1e10>
  40f314:	mov    al,0x0
  40f316:	call   404070 <printf@plt>
  40f31b:	mov    DWORD PTR [rbp-0x54],eax
  40f31e:	jmp    40f360 <test_create_add_field@@Base+0x110>
  40f323:	mov    rdi,QWORD PTR [rbp-0x28]
  40f327:	call   409780 <verify_monster@@Base+0x2b70>
  40f32c:	mov    QWORD PTR [rbp-0x30],rax
  40f330:	mov    rdi,QWORD PTR [rbp-0x30]
  40f334:	call   40f510 <test_create_add_field@@Base+0x2c0>
  40f339:	cmp    rax,0xffffffffffffff9c
  40f33d:	je     40f359 <test_create_add_field@@Base+0x109>
  40f343:	lea    rdi,[rip+0x15af4]        # 424e3e <_IO_stdin_used@@Base+0x1e3e>
  40f34a:	mov    al,0x0
  40f34c:	call   404070 <printf@plt>
  40f351:	mov    DWORD PTR [rbp-0x58],eax
  40f354:	jmp    40f360 <test_create_add_field@@Base+0x110>
  40f359:	mov    DWORD PTR [rbp-0x1c],0x0
  40f360:	mov    rdi,QWORD PTR [rbp-0x10]
  40f364:	call   41eda0 <flatcc_builder_aligned_free@@Base>
  40f369:	mov    eax,DWORD PTR [rbp-0x1c]
  40f36c:	add    rsp,0x60
  40f370:	pop    rbp
  40f371:	ret    
  40f372:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f37c:	nop    DWORD PTR [rax+0x0]
  40f380:	push   rbp
  40f381:	mov    rbp,rsp
  40f384:	sub    rsp,0x30
  40f388:	mov    ax,cx
  40f38b:	mov    QWORD PTR [rbp-0x8],rdi
  40f38f:	mov    DWORD PTR [rbp-0xc],esi
  40f392:	mov    QWORD PTR [rbp-0x18],rdx
  40f396:	mov    WORD PTR [rbp-0x1a],ax
  40f39a:	mov    rdi,QWORD PTR [rbp-0x8]
  40f39e:	mov    rdx,QWORD PTR [rbp-0x8]
  40f3a2:	mov    esi,DWORD PTR [rbp-0xc]
  40f3a5:	mov    r8,QWORD PTR [rbp-0x18]
  40f3a9:	mov    QWORD PTR [rbp-0x28],rdi
  40f3ad:	mov    rdi,rdx
  40f3b0:	mov    rdx,r8
  40f3b3:	movzx  ecx,WORD PTR [rbp-0x1a]
  40f3b7:	call   417e30 <main@@Base+0x3a40>
  40f3bc:	mov    rdi,QWORD PTR [rbp-0x28]
  40f3c0:	mov    esi,eax
  40f3c2:	call   4172b0 <main@@Base+0x2ec0>
  40f3c7:	add    rsp,0x30
  40f3cb:	pop    rbp
  40f3cc:	ret    
  40f3cd:	nop    DWORD PTR [rax]
  40f3d0:	push   rbp
  40f3d1:	mov    rbp,rsp
  40f3d4:	sub    rsp,0x20
  40f3d8:	mov    QWORD PTR [rbp-0x8],rdi
  40f3dc:	mov    DWORD PTR [rbp-0xc],esi
  40f3df:	cmp    DWORD PTR [rbp-0xc],0x0
  40f3e3:	je     40f418 <test_create_add_field@@Base+0x1c8>
  40f3e9:	mov    rdi,QWORD PTR [rbp-0x8]
  40f3ed:	mov    esi,0xc
  40f3f2:	call   41d5d0 <flatcc_builder_table_add_offset@@Base>
  40f3f7:	mov    QWORD PTR [rbp-0x18],rax
  40f3fb:	cmp    rax,0x0
  40f3ff:	je     40f418 <test_create_add_field@@Base+0x1c8>
  40f405:	xor    eax,eax
  40f407:	mov    ecx,DWORD PTR [rbp-0xc]
  40f40a:	mov    rdx,QWORD PTR [rbp-0x18]
  40f40e:	mov    DWORD PTR [rdx],ecx
  40f410:	mov    DWORD PTR [rbp-0x1c],eax
  40f413:	jmp    40f425 <test_create_add_field@@Base+0x1d5>
  40f418:	mov    eax,0xffffffff
  40f41d:	mov    DWORD PTR [rbp-0x1c],eax
  40f420:	jmp    40f425 <test_create_add_field@@Base+0x1d5>
  40f425:	mov    eax,DWORD PTR [rbp-0x1c]
  40f428:	add    rsp,0x20
  40f42c:	pop    rbp
  40f42d:	ret    
  40f42e:	xchg   ax,ax
  40f430:	push   rbp
  40f431:	mov    rbp,rsp
  40f434:	sub    rsp,0x20
  40f438:	mov    QWORD PTR [rbp-0x8],rdi
  40f43c:	mov    WORD PTR [rbp-0xa],0x0
  40f442:	cmp    QWORD PTR [rbp-0x8],0x0
  40f447:	je     40f461 <test_create_add_field@@Base+0x211>
  40f44d:	mov    al,0x1
  40f44f:	test   al,0x1
  40f451:	jne    40f45c <test_create_add_field@@Base+0x20c>
  40f457:	jmp    40f461 <test_create_add_field@@Base+0x211>
  40f45c:	jmp    40f480 <test_create_add_field@@Base+0x230>
  40f461:	lea    rdi,[rip+0x16630]        # 425a98 <_IO_stdin_used@@Base+0x2a98>
  40f468:	lea    rsi,[rip+0x1664f]        # 425abe <_IO_stdin_used@@Base+0x2abe>
  40f46f:	mov    edx,0x2cc
  40f474:	lea    rcx,[rip+0x178b8]        # 426d33 <_IO_stdin_used@@Base+0x3d33>
  40f47b:	call   404090 <__assert_fail@plt>
  40f480:	mov    WORD PTR [rbp-0xc],0xc
  40f486:	mov    rax,QWORD PTR [rbp-0x8]
  40f48a:	mov    rcx,QWORD PTR [rbp-0x8]
  40f48e:	mov    rdi,rcx
  40f491:	mov    QWORD PTR [rbp-0x20],rax
  40f495:	call   414960 <main@@Base+0x570>
  40f49a:	xor    edx,edx
  40f49c:	mov    ecx,edx
  40f49e:	movsxd rdi,eax
  40f4a1:	sub    rcx,rdi
  40f4a4:	mov    rdi,QWORD PTR [rbp-0x20]
  40f4a8:	add    rdi,rcx
  40f4ab:	mov    QWORD PTR [rbp-0x18],rdi
  40f4af:	mov    rcx,QWORD PTR [rbp-0x18]
  40f4b3:	mov    rdi,rcx
  40f4b6:	call   414980 <main@@Base+0x590>
  40f4bb:	movzx  edx,ax
  40f4be:	mov    ecx,edx
  40f4c0:	movzx  edx,WORD PTR [rbp-0xc]
  40f4c4:	add    edx,0x3
  40f4c7:	movsxd rdi,edx
  40f4ca:	shl    rdi,0x1
  40f4ce:	cmp    rcx,rdi
  40f4d1:	jb     40f4f9 <test_create_add_field@@Base+0x2a9>
  40f4d7:	mov    rax,QWORD PTR [rbp-0x18]
  40f4db:	movzx  ecx,WORD PTR [rbp-0xc]
  40f4df:	movsxd rdx,ecx
  40f4e2:	shl    rdx,0x1
  40f4e6:	add    rax,rdx
  40f4e9:	add    rax,0x4
  40f4ed:	mov    rdi,rax
  40f4f0:	call   414980 <main@@Base+0x590>
  40f4f5:	mov    WORD PTR [rbp-0xa],ax
  40f4f9:	movzx  eax,WORD PTR [rbp-0xa]
  40f4fd:	cmp    eax,0x0
  40f500:	setne  cl
  40f503:	and    cl,0x1
  40f506:	movzx  eax,cl
  40f509:	add    rsp,0x20
  40f50d:	pop    rbp
  40f50e:	ret    
  40f50f:	nop
  40f510:	push   rbp
  40f511:	mov    rbp,rsp
  40f514:	sub    rsp,0x30
  40f518:	mov    QWORD PTR [rbp-0x8],rdi
  40f51c:	mov    WORD PTR [rbp-0xa],0x0
  40f522:	cmp    QWORD PTR [rbp-0x8],0x0
  40f527:	je     40f541 <test_create_add_field@@Base+0x2f1>
  40f52d:	mov    al,0x1
  40f52f:	test   al,0x1
  40f531:	jne    40f53c <test_create_add_field@@Base+0x2ec>
  40f537:	jmp    40f541 <test_create_add_field@@Base+0x2f1>
  40f53c:	jmp    40f560 <test_create_add_field@@Base+0x310>
  40f541:	lea    rdi,[rip+0x16550]        # 425a98 <_IO_stdin_used@@Base+0x2a98>
  40f548:	lea    rsi,[rip+0x1656f]        # 425abe <_IO_stdin_used@@Base+0x2abe>
  40f54f:	mov    edx,0x260
  40f554:	lea    rcx,[rip+0x17824]        # 426d7f <_IO_stdin_used@@Base+0x3d7f>
  40f55b:	call   404090 <__assert_fail@plt>
  40f560:	mov    WORD PTR [rbp-0xc],0x1
  40f566:	mov    rax,QWORD PTR [rbp-0x8]
  40f56a:	mov    rcx,QWORD PTR [rbp-0x8]
  40f56e:	mov    rdi,rcx
  40f571:	mov    QWORD PTR [rbp-0x20],rax
  40f575:	call   414960 <main@@Base+0x570>
  40f57a:	xor    edx,edx
  40f57c:	mov    ecx,edx
  40f57e:	movsxd rdi,eax
  40f581:	sub    rcx,rdi
  40f584:	mov    rdi,QWORD PTR [rbp-0x20]
  40f588:	add    rdi,rcx
  40f58b:	mov    QWORD PTR [rbp-0x18],rdi
  40f58f:	mov    rcx,QWORD PTR [rbp-0x18]
  40f593:	mov    rdi,rcx
  40f596:	call   414980 <main@@Base+0x590>
  40f59b:	movzx  edx,ax
  40f59e:	mov    ecx,edx
  40f5a0:	movzx  edx,WORD PTR [rbp-0xc]
  40f5a4:	add    edx,0x3
  40f5a7:	movsxd rdi,edx
  40f5aa:	shl    rdi,0x1
  40f5ae:	cmp    rcx,rdi
  40f5b1:	jb     40f5d9 <test_create_add_field@@Base+0x389>
  40f5b7:	mov    rax,QWORD PTR [rbp-0x18]
  40f5bb:	movzx  ecx,WORD PTR [rbp-0xc]
  40f5bf:	movsxd rdx,ecx
  40f5c2:	shl    rdx,0x1
  40f5c6:	add    rax,rdx
  40f5c9:	add    rax,0x4
  40f5cd:	mov    rdi,rax
  40f5d0:	call   414980 <main@@Base+0x590>
  40f5d5:	mov    WORD PTR [rbp-0xa],ax
  40f5d9:	movzx  eax,WORD PTR [rbp-0xa]
  40f5dd:	cmp    eax,0x0
  40f5e0:	je     40f605 <test_create_add_field@@Base+0x3b5>
  40f5e6:	mov    rax,QWORD PTR [rbp-0x8]
  40f5ea:	movzx  ecx,WORD PTR [rbp-0xa]
  40f5ee:	movsxd rdx,ecx
  40f5f1:	add    rax,rdx
  40f5f4:	mov    rdi,rax
  40f5f7:	call   4157f0 <main@@Base+0x1400>
  40f5fc:	mov    QWORD PTR [rbp-0x28],rax
  40f600:	jmp    40f612 <test_create_add_field@@Base+0x3c2>
  40f605:	xor    eax,eax
  40f607:	mov    ecx,eax
  40f609:	mov    QWORD PTR [rbp-0x28],rcx
  40f60d:	jmp    40f612 <test_create_add_field@@Base+0x3c2>
  40f612:	mov    rax,QWORD PTR [rbp-0x28]
  40f616:	add    rsp,0x30
  40f61a:	pop    rbp
  40f61b:	ret    
  40f61c:	nop    DWORD PTR [rax+0x0]

000000000040f620 <test_union_vector@@Base>:
  40f620:	push   rbp
  40f621:	mov    rbp,rsp
  40f624:	sub    rsp,0x130
  40f62b:	mov    QWORD PTR [rbp-0x10],rdi
  40f62f:	mov    DWORD PTR [rbp-0x30],0xffffffff
  40f636:	mov    rdi,QWORD PTR [rbp-0x10]
  40f63a:	call   4197b0 <flatcc_builder_reset@@Base>
  40f63f:	mov    rdi,QWORD PTR [rbp-0x10]
  40f643:	mov    DWORD PTR [rbp-0xc4],eax
  40f649:	call   40a2c0 <gen_monster@@Base+0x780>
  40f64e:	mov    rdi,QWORD PTR [rbp-0x10]
  40f652:	lea    rsi,[rip+0x157f9]        # 424e52 <_IO_stdin_used@@Base+0x1e52>
  40f659:	mov    DWORD PTR [rbp-0xc8],eax
  40f65f:	call   405c40 <test_empty_monster@@Base+0x1b0>
  40f664:	mov    rdi,QWORD PTR [rbp-0x10]
  40f668:	mov    ecx,0x2
  40f66d:	mov    esi,ecx
  40f66f:	mov    edx,ecx
  40f671:	mov    DWORD PTR [rbp-0xcc],ecx
  40f677:	mov    r8d,DWORD PTR [rbp-0xcc]
  40f67e:	mov    DWORD PTR [rbp-0xd0],eax
  40f684:	call   40fa20 <test_union_vector@@Base+0x400>
  40f689:	mov    DWORD PTR [rbp-0x4c],eax
  40f68c:	mov    rdi,QWORD PTR [rbp-0x10]
  40f690:	call   40fae0 <test_union_vector@@Base+0x4c0>
  40f695:	mov    rdi,QWORD PTR [rbp-0x10]
  40f699:	mov    ecx,DWORD PTR [rbp-0x4c]
  40f69c:	mov    QWORD PTR [rbp-0xd8],rdi
  40f6a3:	mov    edi,ecx
  40f6a5:	mov    DWORD PTR [rbp-0xdc],eax
  40f6ab:	call   40fb30 <test_union_vector@@Base+0x510>
  40f6b0:	mov    QWORD PTR [rbp-0x98],rax
  40f6b7:	mov    rsi,QWORD PTR [rbp-0x98]
  40f6be:	mov    rdi,QWORD PTR [rbp-0xd8]
  40f6c5:	call   40fb00 <test_union_vector@@Base+0x4e0>
  40f6ca:	mov    rdi,QWORD PTR [rbp-0x10]
  40f6ce:	mov    QWORD PTR [rbp-0xe8],rax
  40f6d5:	call   40fb50 <test_union_vector@@Base+0x530>
  40f6da:	mov    QWORD PTR [rbp-0xa0],rax
  40f6e1:	mov    rax,QWORD PTR [rbp-0xa0]
  40f6e8:	mov    QWORD PTR [rbp-0x48],rax
  40f6ec:	mov    rdi,QWORD PTR [rbp-0x10]
  40f6f0:	call   40fb80 <test_union_vector@@Base+0x560>
  40f6f5:	mov    rdi,QWORD PTR [rbp-0x10]
  40f6f9:	mov    rsi,QWORD PTR [rbp-0x48]
  40f6fd:	mov    DWORD PTR [rbp-0xec],eax
  40f703:	call   40fba0 <test_union_vector@@Base+0x580>
  40f708:	mov    rdi,QWORD PTR [rbp-0x10]
  40f70c:	mov    DWORD PTR [rbp-0xf0],eax
  40f712:	call   40fc50 <test_union_vector@@Base+0x630>
  40f717:	mov    rdi,QWORD PTR [rbp-0x10]
  40f71b:	mov    DWORD PTR [rbp-0xf4],eax
  40f721:	call   40ae60 <gen_monster@@Base+0x1320>
  40f726:	mov    rdi,QWORD PTR [rbp-0x10]
  40f72a:	lea    rsi,[rbp-0x20]
  40f72e:	mov    DWORD PTR [rbp-0xf8],eax
  40f734:	call   41ec10 <flatcc_builder_finalize_aligned_buffer@@Base>
  40f739:	mov    QWORD PTR [rbp-0x18],rax
  40f73d:	mov    rdi,QWORD PTR [rbp-0x18]
  40f741:	mov    rsi,QWORD PTR [rbp-0x20]
  40f745:	call   405d50 <test_empty_monster@@Base+0x2c0>
  40f74a:	mov    DWORD PTR [rbp-0x30],eax
  40f74d:	cmp    eax,0x0
  40f750:	je     40f781 <test_union_vector@@Base+0x161>
  40f756:	mov    edi,DWORD PTR [rbp-0x30]
  40f759:	call   41fca0 <flatcc_verify_error_string@@Base>
  40f75e:	lea    rdi,[rip+0x156f4]        # 424e59 <_IO_stdin_used@@Base+0x1e59>
  40f765:	mov    rsi,rax
  40f768:	mov    al,0x0
  40f76a:	call   404070 <printf@plt>
  40f76f:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40f776:	mov    DWORD PTR [rbp-0xfc],eax
  40f77c:	jmp    40fa12 <test_union_vector@@Base+0x3f2>
  40f781:	mov    rdi,QWORD PTR [rbp-0x18]
  40f785:	call   4044a0 <verify_empty_monster@@Base+0x280>
  40f78a:	mov    QWORD PTR [rbp-0x38],rax
  40f78e:	mov    rdi,QWORD PTR [rbp-0x38]
  40f792:	call   4091d0 <verify_monster@@Base+0x25c0>
  40f797:	movzx  ecx,al
  40f79a:	cmp    ecx,0x4
  40f79d:	je     40f7bc <test_union_vector@@Base+0x19c>
  40f7a3:	lea    rdi,[rip+0x156eb]        # 424e95 <_IO_stdin_used@@Base+0x1e95>
  40f7aa:	mov    al,0x0
  40f7ac:	call   404070 <printf@plt>
  40f7b1:	mov    DWORD PTR [rbp-0x100],eax
  40f7b7:	jmp    40fa03 <test_union_vector@@Base+0x3e3>
  40f7bc:	mov    rdi,QWORD PTR [rbp-0x38]
  40f7c0:	call   4092e0 <verify_monster@@Base+0x26d0>
  40f7c5:	mov    QWORD PTR [rbp-0x90],rax
  40f7cc:	cmp    QWORD PTR [rbp-0x90],0x0
  40f7d4:	je     40f7ef <test_union_vector@@Base+0x1cf>
  40f7da:	mov    rdi,QWORD PTR [rbp-0x90]
  40f7e1:	call   40fca0 <test_union_vector@@Base+0x680>
  40f7e6:	cmp    eax,0x0
  40f7e9:	je     40f808 <test_union_vector@@Base+0x1e8>
  40f7ef:	lea    rdi,[rip+0x156c1]        # 424eb7 <_IO_stdin_used@@Base+0x1eb7>
  40f7f6:	mov    al,0x0
  40f7f8:	call   404070 <printf@plt>
  40f7fd:	mov    DWORD PTR [rbp-0x104],eax
  40f803:	jmp    40fa03 <test_union_vector@@Base+0x3e3>
  40f808:	mov    rdi,QWORD PTR [rbp-0x90]
  40f80f:	call   40fd80 <test_union_vector@@Base+0x760>
  40f814:	mov    QWORD PTR [rbp-0x68],rax
  40f818:	mov    rdi,QWORD PTR [rbp-0x90]
  40f81f:	call   40feb0 <test_union_vector@@Base+0x890>
  40f824:	mov    QWORD PTR [rbp-0x60],rax
  40f828:	mov    rdi,QWORD PTR [rbp-0x68]
  40f82c:	call   40ffe0 <test_union_vector@@Base+0x9c0>
  40f831:	mov    QWORD PTR [rbp-0x28],rax
  40f835:	cmp    QWORD PTR [rbp-0x28],0x1
  40f83a:	je     40f859 <test_union_vector@@Base+0x239>
  40f840:	lea    rdi,[rip+0x15699]        # 424ee0 <_IO_stdin_used@@Base+0x1ee0>
  40f847:	mov    al,0x0
  40f849:	call   404070 <printf@plt>
  40f84e:	mov    DWORD PTR [rbp-0x108],eax
  40f854:	jmp    40fa03 <test_union_vector@@Base+0x3e3>
  40f859:	xor    eax,eax
  40f85b:	mov    esi,eax
  40f85d:	mov    rdi,QWORD PTR [rbp-0x68]
  40f861:	call   410000 <test_union_vector@@Base+0x9e0>
  40f866:	movzx  ecx,al
  40f869:	cmp    ecx,0x2
  40f86c:	je     40f88b <test_union_vector@@Base+0x26b>
  40f872:	lea    rdi,[rip+0x1568f]        # 424f08 <_IO_stdin_used@@Base+0x1f08>
  40f879:	mov    al,0x0
  40f87b:	call   404070 <printf@plt>
  40f880:	mov    DWORD PTR [rbp-0x10c],eax
  40f886:	jmp    40fa03 <test_union_vector@@Base+0x3e3>
  40f88b:	xor    eax,eax
  40f88d:	mov    esi,eax
  40f88f:	mov    rdi,QWORD PTR [rbp-0x60]
  40f893:	call   410070 <test_union_vector@@Base+0xa50>
  40f898:	mov    QWORD PTR [rbp-0x58],rax
  40f89c:	cmp    QWORD PTR [rbp-0x58],0x0
  40f8a1:	jne    40f8c0 <test_union_vector@@Base+0x2a0>
  40f8a7:	lea    rdi,[rip+0x15688]        # 424f36 <_IO_stdin_used@@Base+0x1f36>
  40f8ae:	mov    al,0x0
  40f8b0:	call   404070 <printf@plt>
  40f8b5:	mov    DWORD PTR [rbp-0x110],eax
  40f8bb:	jmp    40fa03 <test_union_vector@@Base+0x3e3>
  40f8c0:	mov    rdi,QWORD PTR [rbp-0x58]
  40f8c4:	call   410110 <test_union_vector@@Base+0xaf0>
  40f8c9:	movsx  ecx,al
  40f8cc:	mov    DWORD PTR [rbp-0x2c],ecx
  40f8cf:	cmp    DWORD PTR [rbp-0x2c],0x2
  40f8d3:	je     40f8f5 <test_union_vector@@Base+0x2d5>
  40f8d9:	mov    esi,DWORD PTR [rbp-0x2c]
  40f8dc:	lea    rdi,[rip+0x15664]        # 424f47 <_IO_stdin_used@@Base+0x1f47>
  40f8e3:	mov    al,0x0
  40f8e5:	call   404070 <printf@plt>
  40f8ea:	mov    DWORD PTR [rbp-0x114],eax
  40f8f0:	jmp    40fa03 <test_union_vector@@Base+0x3e3>
  40f8f5:	mov    rdi,QWORD PTR [rbp-0x90]
  40f8fc:	call   410230 <test_union_vector@@Base+0xc10>
  40f901:	mov    QWORD PTR [rbp-0xb0],rax
  40f908:	mov    QWORD PTR [rbp-0xa8],rdx
  40f90f:	mov    rax,QWORD PTR [rbp-0xb0]
  40f916:	mov    QWORD PTR [rbp-0x78],rax
  40f91a:	mov    rax,QWORD PTR [rbp-0xa8]
  40f921:	mov    QWORD PTR [rbp-0x70],rax
  40f925:	mov    rdi,QWORD PTR [rbp-0x78]
  40f929:	mov    rsi,QWORD PTR [rbp-0x70]
  40f92d:	call   4102c0 <test_union_vector@@Base+0xca0>
  40f932:	cmp    rax,0x1
  40f936:	je     40f955 <test_union_vector@@Base+0x335>
  40f93c:	lea    rdi,[rip+0x15621]        # 424f64 <_IO_stdin_used@@Base+0x1f64>
  40f943:	mov    al,0x0
  40f945:	call   404070 <printf@plt>
  40f94a:	mov    DWORD PTR [rbp-0x118],eax
  40f950:	jmp    40fa03 <test_union_vector@@Base+0x3e3>
  40f955:	xor    eax,eax
  40f957:	mov    edx,eax
  40f959:	mov    rdi,QWORD PTR [rbp-0x78]
  40f95d:	mov    rsi,QWORD PTR [rbp-0x70]
  40f961:	call   4102e0 <test_union_vector@@Base+0xcc0>
  40f966:	xor    ecx,ecx
  40f968:	mov    esi,ecx
  40f96a:	mov    BYTE PTR [rbp-0xc0],al
  40f970:	mov    QWORD PTR [rbp-0xb8],rdx
  40f977:	mov    rdx,QWORD PTR [rbp-0xc0]
  40f97e:	mov    QWORD PTR [rbp-0x88],rdx
  40f985:	mov    rdx,QWORD PTR [rbp-0xb8]
  40f98c:	mov    QWORD PTR [rbp-0x80],rdx
  40f990:	movzx  ecx,BYTE PTR [rbp-0x88]
  40f997:	mov    rdi,QWORD PTR [rbp-0x68]
  40f99b:	mov    DWORD PTR [rbp-0x11c],ecx
  40f9a1:	call   410000 <test_union_vector@@Base+0x9e0>
  40f9a6:	movzx  ecx,al
  40f9a9:	mov    r8d,DWORD PTR [rbp-0x11c]
  40f9b0:	cmp    r8d,ecx
  40f9b3:	je     40f9d2 <test_union_vector@@Base+0x3b2>
  40f9b9:	lea    rdi,[rip+0x155e9]        # 424fa9 <_IO_stdin_used@@Base+0x1fa9>
  40f9c0:	mov    al,0x0
  40f9c2:	call   404070 <printf@plt>
  40f9c7:	mov    DWORD PTR [rbp-0x120],eax
  40f9cd:	jmp    40fa03 <test_union_vector@@Base+0x3e3>
  40f9d2:	mov    rax,QWORD PTR [rbp-0x80]
  40f9d6:	mov    rcx,QWORD PTR [rbp-0x58]
  40f9da:	cmp    rax,rcx
  40f9dd:	je     40f9fc <test_union_vector@@Base+0x3dc>
  40f9e3:	lea    rdi,[rip+0x155d9]        # 424fc3 <_IO_stdin_used@@Base+0x1fc3>
  40f9ea:	mov    al,0x0
  40f9ec:	call   404070 <printf@plt>
  40f9f1:	mov    DWORD PTR [rbp-0x124],eax
  40f9f7:	jmp    40fa03 <test_union_vector@@Base+0x3e3>
  40f9fc:	mov    DWORD PTR [rbp-0x30],0x0
  40fa03:	mov    rdi,QWORD PTR [rbp-0x18]
  40fa07:	call   41eda0 <flatcc_builder_aligned_free@@Base>
  40fa0c:	mov    eax,DWORD PTR [rbp-0x30]
  40fa0f:	mov    DWORD PTR [rbp-0x4],eax
  40fa12:	mov    eax,DWORD PTR [rbp-0x4]
  40fa15:	add    rsp,0x130
  40fa1c:	pop    rbp
  40fa1d:	ret    
  40fa1e:	xchg   ax,ax
  40fa20:	push   rbp
  40fa21:	mov    rbp,rsp
  40fa24:	sub    rsp,0x20
  40fa28:	mov    al,r8b
  40fa2b:	mov    r9b,cl
  40fa2e:	mov    r10b,dl
  40fa31:	mov    r11b,sil
  40fa34:	mov    QWORD PTR [rbp-0x10],rdi
  40fa38:	mov    BYTE PTR [rbp-0x11],r11b
  40fa3c:	mov    BYTE PTR [rbp-0x12],r10b
  40fa40:	mov    BYTE PTR [rbp-0x13],r9b
  40fa44:	mov    BYTE PTR [rbp-0x14],al
  40fa47:	mov    rdi,QWORD PTR [rbp-0x10]
  40fa4b:	call   418020 <main@@Base+0x3c30>
  40fa50:	cmp    eax,0x0
  40fa53:	jne    40fab1 <test_union_vector@@Base+0x491>
  40fa59:	mov    rdi,QWORD PTR [rbp-0x10]
  40fa5d:	movsx  esi,BYTE PTR [rbp-0x11]
  40fa61:	call   418040 <main@@Base+0x3c50>
  40fa66:	cmp    eax,0x0
  40fa69:	jne    40fab1 <test_union_vector@@Base+0x491>
  40fa6f:	mov    rdi,QWORD PTR [rbp-0x10]
  40fa73:	movsx  esi,BYTE PTR [rbp-0x12]
  40fa77:	call   4180c0 <main@@Base+0x3cd0>
  40fa7c:	cmp    eax,0x0
  40fa7f:	jne    40fab1 <test_union_vector@@Base+0x491>
  40fa85:	mov    rdi,QWORD PTR [rbp-0x10]
  40fa89:	movzx  esi,BYTE PTR [rbp-0x13]
  40fa8d:	call   418140 <main@@Base+0x3d50>
  40fa92:	cmp    eax,0x0
  40fa95:	jne    40fab1 <test_union_vector@@Base+0x491>
  40fa9b:	mov    rdi,QWORD PTR [rbp-0x10]
  40fa9f:	movzx  esi,BYTE PTR [rbp-0x14]
  40faa3:	call   4181c0 <main@@Base+0x3dd0>
  40faa8:	cmp    eax,0x0
  40faab:	je     40fabd <test_union_vector@@Base+0x49d>
  40fab1:	mov    DWORD PTR [rbp-0x4],0x0
  40fab8:	jmp    40fac9 <test_union_vector@@Base+0x4a9>
  40fabd:	mov    rdi,QWORD PTR [rbp-0x10]
  40fac1:	call   418240 <main@@Base+0x3e50>
  40fac6:	mov    DWORD PTR [rbp-0x4],eax
  40fac9:	mov    eax,DWORD PTR [rbp-0x4]
  40facc:	add    rsp,0x20
  40fad0:	pop    rbp
  40fad1:	ret    
  40fad2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fadc:	nop    DWORD PTR [rax+0x0]
  40fae0:	push   rbp
  40fae1:	mov    rbp,rsp
  40fae4:	sub    rsp,0x10
  40fae8:	mov    QWORD PTR [rbp-0x8],rdi
  40faec:	mov    rdi,QWORD PTR [rbp-0x8]
  40faf0:	call   41dbb0 <flatcc_builder_start_union_vector@@Base>
  40faf5:	add    rsp,0x10
  40faf9:	pop    rbp
  40fafa:	ret    
  40fafb:	nop    DWORD PTR [rax+rax*1+0x0]
  40fb00:	push   rbp
  40fb01:	mov    rbp,rsp
  40fb04:	sub    rsp,0x10
  40fb08:	mov    QWORD PTR [rbp-0x8],rsi
  40fb0c:	mov    QWORD PTR [rbp-0x10],rdi
  40fb10:	mov    rdi,QWORD PTR [rbp-0x10]
  40fb14:	mov    rsi,QWORD PTR [rbp-0x8]
  40fb18:	call   41df10 <flatcc_builder_union_vector_push@@Base>
  40fb1d:	add    rsp,0x10
  40fb21:	pop    rbp
  40fb22:	ret    
  40fb23:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fb2d:	nop    DWORD PTR [rax]
  40fb30:	push   rbp
  40fb31:	mov    rbp,rsp
  40fb34:	mov    DWORD PTR [rbp-0xc],edi
  40fb37:	mov    BYTE PTR [rbp-0x8],0x2
  40fb3b:	mov    edi,DWORD PTR [rbp-0xc]
  40fb3e:	mov    DWORD PTR [rbp-0x4],edi
  40fb41:	mov    rax,QWORD PTR [rbp-0x8]
  40fb45:	pop    rbp
  40fb46:	ret    
  40fb47:	nop    WORD PTR [rax+rax*1+0x0]
  40fb50:	push   rbp
  40fb51:	mov    rbp,rsp
  40fb54:	sub    rsp,0x10
  40fb58:	mov    QWORD PTR [rbp-0x10],rdi
  40fb5c:	mov    rdi,QWORD PTR [rbp-0x10]
  40fb60:	call   41dc30 <flatcc_builder_end_union_vector@@Base>
  40fb65:	mov    QWORD PTR [rbp-0x8],rax
  40fb69:	mov    rax,QWORD PTR [rbp-0x8]
  40fb6d:	add    rsp,0x10
  40fb71:	pop    rbp
  40fb72:	ret    
  40fb73:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fb7d:	nop    DWORD PTR [rax]
  40fb80:	push   rbp
  40fb81:	mov    rbp,rsp
  40fb84:	sub    rsp,0x10
  40fb88:	mov    QWORD PTR [rbp-0x8],rdi
  40fb8c:	mov    rdi,QWORD PTR [rbp-0x8]
  40fb90:	call   4182a0 <main@@Base+0x3eb0>
  40fb95:	add    rsp,0x10
  40fb99:	pop    rbp
  40fb9a:	ret    
  40fb9b:	nop    DWORD PTR [rax+rax*1+0x0]
  40fba0:	push   rbp
  40fba1:	mov    rbp,rsp
  40fba4:	sub    rsp,0x20
  40fba8:	mov    QWORD PTR [rbp-0x10],rsi
  40fbac:	mov    QWORD PTR [rbp-0x18],rdi
  40fbb0:	cmp    DWORD PTR [rbp-0x10],0x0
  40fbb4:	je     40fbc4 <test_union_vector@@Base+0x5a4>
  40fbba:	cmp    DWORD PTR [rbp-0xc],0x0
  40fbbe:	jne    40fbde <test_union_vector@@Base+0x5be>
  40fbc4:	xor    eax,eax
  40fbc6:	mov    ecx,DWORD PTR [rbp-0x10]
  40fbc9:	mov    edx,DWORD PTR [rbp-0xc]
  40fbcc:	cmp    ecx,edx
  40fbce:	mov    ecx,0xffffffff
  40fbd3:	cmove  ecx,eax
  40fbd6:	mov    DWORD PTR [rbp-0x4],ecx
  40fbd9:	jmp    40fc47 <test_union_vector@@Base+0x627>
  40fbde:	mov    rdi,QWORD PTR [rbp-0x18]
  40fbe2:	mov    esi,0x2
  40fbe7:	call   41d5d0 <flatcc_builder_table_add_offset@@Base>
  40fbec:	mov    QWORD PTR [rbp-0x20],rax
  40fbf0:	cmp    rax,0x0
  40fbf4:	jne    40fc06 <test_union_vector@@Base+0x5e6>
  40fbfa:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40fc01:	jmp    40fc47 <test_union_vector@@Base+0x627>
  40fc06:	mov    eax,DWORD PTR [rbp-0x10]
  40fc09:	mov    rcx,QWORD PTR [rbp-0x20]
  40fc0d:	mov    DWORD PTR [rcx],eax
  40fc0f:	mov    rdi,QWORD PTR [rbp-0x18]
  40fc13:	mov    esi,0x3
  40fc18:	call   41d5d0 <flatcc_builder_table_add_offset@@Base>
  40fc1d:	mov    QWORD PTR [rbp-0x20],rax
  40fc21:	cmp    rax,0x0
  40fc25:	jne    40fc37 <test_union_vector@@Base+0x617>
  40fc2b:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40fc32:	jmp    40fc47 <test_union_vector@@Base+0x627>
  40fc37:	mov    eax,DWORD PTR [rbp-0xc]
  40fc3a:	mov    rcx,QWORD PTR [rbp-0x20]
  40fc3e:	mov    DWORD PTR [rcx],eax
  40fc40:	mov    DWORD PTR [rbp-0x4],0x0
  40fc47:	mov    eax,DWORD PTR [rbp-0x4]
  40fc4a:	add    rsp,0x20
  40fc4e:	pop    rbp
  40fc4f:	ret    
  40fc50:	push   rbp
  40fc51:	mov    rbp,rsp
  40fc54:	sub    rsp,0x10
  40fc58:	mov    QWORD PTR [rbp-0x8],rdi
  40fc5c:	mov    rdi,QWORD PTR [rbp-0x8]
  40fc60:	call   4182c0 <main@@Base+0x3ed0>
  40fc65:	mov    DWORD PTR [rbp-0xc],eax
  40fc68:	cmp    DWORD PTR [rbp-0xc],0x0
  40fc6c:	je     40fc86 <test_union_vector@@Base+0x666>
  40fc72:	mov    rdi,QWORD PTR [rbp-0x8]
  40fc76:	mov    esi,DWORD PTR [rbp-0xc]
  40fc79:	call   418320 <main@@Base+0x3f30>
  40fc7e:	mov    DWORD PTR [rbp-0x10],eax
  40fc81:	jmp    40fc93 <test_union_vector@@Base+0x673>
  40fc86:	mov    eax,0xffffffff
  40fc8b:	mov    DWORD PTR [rbp-0x10],eax
  40fc8e:	jmp    40fc93 <test_union_vector@@Base+0x673>
  40fc93:	mov    eax,DWORD PTR [rbp-0x10]
  40fc96:	add    rsp,0x10
  40fc9a:	pop    rbp
  40fc9b:	ret    
  40fc9c:	nop    DWORD PTR [rax+0x0]
  40fca0:	push   rbp
  40fca1:	mov    rbp,rsp
  40fca4:	sub    rsp,0x20
  40fca8:	mov    QWORD PTR [rbp-0x8],rdi
  40fcac:	mov    WORD PTR [rbp-0xa],0x0
  40fcb2:	cmp    QWORD PTR [rbp-0x8],0x0
  40fcb7:	je     40fcd1 <test_union_vector@@Base+0x6b1>
  40fcbd:	mov    al,0x1
  40fcbf:	test   al,0x1
  40fcc1:	jne    40fccc <test_union_vector@@Base+0x6ac>
  40fcc7:	jmp    40fcd1 <test_union_vector@@Base+0x6b1>
  40fccc:	jmp    40fcf0 <test_union_vector@@Base+0x6d0>
  40fcd1:	lea    rdi,[rip+0x15dc0]        # 425a98 <_IO_stdin_used@@Base+0x2a98>
  40fcd8:	lea    rsi,[rip+0x15ddf]        # 425abe <_IO_stdin_used@@Base+0x2abe>
  40fcdf:	mov    edx,0x26d
  40fce4:	lea    rcx,[rip+0x172f3]        # 426fde <_IO_stdin_used@@Base+0x3fde>
  40fceb:	call   404090 <__assert_fail@plt>
  40fcf0:	mov    WORD PTR [rbp-0xc],0x3
  40fcf6:	mov    rax,QWORD PTR [rbp-0x8]
  40fcfa:	mov    rcx,QWORD PTR [rbp-0x8]
  40fcfe:	mov    rdi,rcx
  40fd01:	mov    QWORD PTR [rbp-0x20],rax
  40fd05:	call   414960 <main@@Base+0x570>
  40fd0a:	xor    edx,edx
  40fd0c:	mov    ecx,edx
  40fd0e:	movsxd rdi,eax
  40fd11:	sub    rcx,rdi
  40fd14:	mov    rdi,QWORD PTR [rbp-0x20]
  40fd18:	add    rdi,rcx
  40fd1b:	mov    QWORD PTR [rbp-0x18],rdi
  40fd1f:	mov    rcx,QWORD PTR [rbp-0x18]
  40fd23:	mov    rdi,rcx
  40fd26:	call   414980 <main@@Base+0x590>
  40fd2b:	movzx  edx,ax
  40fd2e:	mov    ecx,edx
  40fd30:	movzx  edx,WORD PTR [rbp-0xc]
  40fd34:	add    edx,0x3
  40fd37:	movsxd rdi,edx
  40fd3a:	shl    rdi,0x1
  40fd3e:	cmp    rcx,rdi
  40fd41:	jb     40fd69 <test_union_vector@@Base+0x749>
  40fd47:	mov    rax,QWORD PTR [rbp-0x18]
  40fd4b:	movzx  ecx,WORD PTR [rbp-0xc]
  40fd4f:	movsxd rdx,ecx
  40fd52:	shl    rdx,0x1
  40fd56:	add    rax,rdx
  40fd59:	add    rax,0x4
  40fd5d:	mov    rdi,rax
  40fd60:	call   414980 <main@@Base+0x590>
  40fd65:	mov    WORD PTR [rbp-0xa],ax
  40fd69:	movzx  eax,WORD PTR [rbp-0xa]
  40fd6d:	cmp    eax,0x0
  40fd70:	setne  cl
  40fd73:	and    cl,0x1
  40fd76:	movzx  eax,cl
  40fd79:	add    rsp,0x20
  40fd7d:	pop    rbp
  40fd7e:	ret    
  40fd7f:	nop
  40fd80:	push   rbp
  40fd81:	mov    rbp,rsp
  40fd84:	sub    rsp,0x40
  40fd88:	mov    QWORD PTR [rbp-0x10],rdi
  40fd8c:	mov    WORD PTR [rbp-0x1a],0x0
  40fd92:	cmp    QWORD PTR [rbp-0x10],0x0
  40fd97:	je     40fdb1 <test_union_vector@@Base+0x791>
  40fd9d:	mov    al,0x1
  40fd9f:	test   al,0x1
  40fda1:	jne    40fdac <test_union_vector@@Base+0x78c>
  40fda7:	jmp    40fdb1 <test_union_vector@@Base+0x791>
  40fdac:	jmp    40fdd0 <test_union_vector@@Base+0x7b0>
  40fdb1:	lea    rdi,[rip+0x15ce0]        # 425a98 <_IO_stdin_used@@Base+0x2a98>
  40fdb8:	lea    rsi,[rip+0x15cff]        # 425abe <_IO_stdin_used@@Base+0x2abe>
  40fdbf:	mov    edx,0x26d
  40fdc4:	lea    rcx,[rip+0x17259]        # 427024 <_IO_stdin_used@@Base+0x4024>
  40fdcb:	call   404090 <__assert_fail@plt>
  40fdd0:	mov    WORD PTR [rbp-0x1c],0x2
  40fdd6:	mov    rax,QWORD PTR [rbp-0x10]
  40fdda:	mov    rcx,QWORD PTR [rbp-0x10]
  40fdde:	mov    rdi,rcx
  40fde1:	mov    QWORD PTR [rbp-0x30],rax
  40fde5:	call   414960 <main@@Base+0x570>
  40fdea:	xor    edx,edx
  40fdec:	mov    ecx,edx
  40fdee:	movsxd rdi,eax
  40fdf1:	sub    rcx,rdi
  40fdf4:	mov    rdi,QWORD PTR [rbp-0x30]
  40fdf8:	add    rdi,rcx
  40fdfb:	mov    QWORD PTR [rbp-0x28],rdi
  40fdff:	mov    rcx,QWORD PTR [rbp-0x28]
  40fe03:	mov    rdi,rcx
  40fe06:	call   414980 <main@@Base+0x590>
  40fe0b:	movzx  edx,ax
  40fe0e:	mov    ecx,edx
  40fe10:	movzx  edx,WORD PTR [rbp-0x1c]
  40fe14:	add    edx,0x3
  40fe17:	movsxd rdi,edx
  40fe1a:	shl    rdi,0x1
  40fe1e:	cmp    rcx,rdi
  40fe21:	jb     40fe49 <test_union_vector@@Base+0x829>
  40fe27:	mov    rax,QWORD PTR [rbp-0x28]
  40fe2b:	movzx  ecx,WORD PTR [rbp-0x1c]
  40fe2f:	movsxd rdx,ecx
  40fe32:	shl    rdx,0x1
  40fe36:	add    rax,rdx
  40fe39:	add    rax,0x4
  40fe3d:	mov    rdi,rax
  40fe40:	call   414980 <main@@Base+0x590>
  40fe45:	mov    WORD PTR [rbp-0x1a],ax
  40fe49:	cmp    WORD PTR [rbp-0x1a],0x0
  40fe4e:	je     40fe92 <test_union_vector@@Base+0x872>
  40fe54:	mov    rax,QWORD PTR [rbp-0x10]
  40fe58:	movzx  ecx,WORD PTR [rbp-0x1a]
  40fe5c:	movsxd rdx,ecx
  40fe5f:	add    rax,rdx
  40fe62:	mov    QWORD PTR [rbp-0x18],rax
  40fe66:	mov    rax,QWORD PTR [rbp-0x18]
  40fe6a:	add    rax,0x4
  40fe6e:	mov    rdx,QWORD PTR [rbp-0x18]
  40fe72:	mov    rdi,rdx
  40fe75:	mov    QWORD PTR [rbp-0x38],rax
  40fe79:	call   414930 <main@@Base+0x540>
  40fe7e:	mov    eax,eax
  40fe80:	mov    edx,eax
  40fe82:	mov    rdi,QWORD PTR [rbp-0x38]
  40fe86:	add    rdi,rdx
  40fe89:	mov    QWORD PTR [rbp-0x8],rdi
  40fe8d:	jmp    40fe9a <test_union_vector@@Base+0x87a>
  40fe92:	mov    QWORD PTR [rbp-0x8],0x0
  40fe9a:	mov    rax,QWORD PTR [rbp-0x8]
  40fe9e:	add    rsp,0x40
  40fea2:	pop    rbp
  40fea3:	ret    
  40fea4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40feae:	xchg   ax,ax
  40feb0:	push   rbp
  40feb1:	mov    rbp,rsp
  40feb4:	sub    rsp,0x40
  40feb8:	mov    QWORD PTR [rbp-0x10],rdi
  40febc:	mov    WORD PTR [rbp-0x1a],0x0
  40fec2:	cmp    QWORD PTR [rbp-0x10],0x0
  40fec7:	je     40fee1 <test_union_vector@@Base+0x8c1>
  40fecd:	mov    al,0x1
  40fecf:	test   al,0x1
  40fed1:	jne    40fedc <test_union_vector@@Base+0x8bc>
  40fed7:	jmp    40fee1 <test_union_vector@@Base+0x8c1>
  40fedc:	jmp    40ff00 <test_union_vector@@Base+0x8e0>
  40fee1:	lea    rdi,[rip+0x15bb0]        # 425a98 <_IO_stdin_used@@Base+0x2a98>
  40fee8:	lea    rsi,[rip+0x15bcf]        # 425abe <_IO_stdin_used@@Base+0x2abe>
  40feef:	mov    edx,0x26d
  40fef4:	lea    rcx,[rip+0x1717e]        # 427079 <_IO_stdin_used@@Base+0x4079>
  40fefb:	call   404090 <__assert_fail@plt>
  40ff00:	mov    WORD PTR [rbp-0x1c],0x3
  40ff06:	mov    rax,QWORD PTR [rbp-0x10]
  40ff0a:	mov    rcx,QWORD PTR [rbp-0x10]
  40ff0e:	mov    rdi,rcx
  40ff11:	mov    QWORD PTR [rbp-0x30],rax
  40ff15:	call   414960 <main@@Base+0x570>
  40ff1a:	xor    edx,edx
  40ff1c:	mov    ecx,edx
  40ff1e:	movsxd rdi,eax
  40ff21:	sub    rcx,rdi
  40ff24:	mov    rdi,QWORD PTR [rbp-0x30]
  40ff28:	add    rdi,rcx
  40ff2b:	mov    QWORD PTR [rbp-0x28],rdi
  40ff2f:	mov    rcx,QWORD PTR [rbp-0x28]
  40ff33:	mov    rdi,rcx
  40ff36:	call   414980 <main@@Base+0x590>
  40ff3b:	movzx  edx,ax
  40ff3e:	mov    ecx,edx
  40ff40:	movzx  edx,WORD PTR [rbp-0x1c]
  40ff44:	add    edx,0x3
  40ff47:	movsxd rdi,edx
  40ff4a:	shl    rdi,0x1
  40ff4e:	cmp    rcx,rdi
  40ff51:	jb     40ff79 <test_union_vector@@Base+0x959>
  40ff57:	mov    rax,QWORD PTR [rbp-0x28]
  40ff5b:	movzx  ecx,WORD PTR [rbp-0x1c]
  40ff5f:	movsxd rdx,ecx
  40ff62:	shl    rdx,0x1
  40ff66:	add    rax,rdx
  40ff69:	add    rax,0x4
  40ff6d:	mov    rdi,rax
  40ff70:	call   414980 <main@@Base+0x590>
  40ff75:	mov    WORD PTR [rbp-0x1a],ax
  40ff79:	cmp    WORD PTR [rbp-0x1a],0x0
  40ff7e:	je     40ffc2 <test_union_vector@@Base+0x9a2>
  40ff84:	mov    rax,QWORD PTR [rbp-0x10]
  40ff88:	movzx  ecx,WORD PTR [rbp-0x1a]
  40ff8c:	movsxd rdx,ecx
  40ff8f:	add    rax,rdx
  40ff92:	mov    QWORD PTR [rbp-0x18],rax
  40ff96:	mov    rax,QWORD PTR [rbp-0x18]
  40ff9a:	add    rax,0x4
  40ff9e:	mov    rdx,QWORD PTR [rbp-0x18]
  40ffa2:	mov    rdi,rdx
  40ffa5:	mov    QWORD PTR [rbp-0x38],rax
  40ffa9:	call   414930 <main@@Base+0x540>
  40ffae:	mov    eax,eax
  40ffb0:	mov    edx,eax
  40ffb2:	mov    rdi,QWORD PTR [rbp-0x38]
  40ffb6:	add    rdi,rdx
  40ffb9:	mov    QWORD PTR [rbp-0x8],rdi
  40ffbd:	jmp    40ffca <test_union_vector@@Base+0x9aa>
  40ffc2:	mov    QWORD PTR [rbp-0x8],0x0
  40ffca:	mov    rax,QWORD PTR [rbp-0x8]
  40ffce:	add    rsp,0x40
  40ffd2:	pop    rbp
  40ffd3:	ret    
  40ffd4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ffde:	xchg   ax,ax
  40ffe0:	push   rbp
  40ffe1:	mov    rbp,rsp
  40ffe4:	sub    rsp,0x10
  40ffe8:	mov    QWORD PTR [rbp-0x8],rdi
  40ffec:	mov    rdi,QWORD PTR [rbp-0x8]
  40fff0:	call   416db0 <main@@Base+0x29c0>
  40fff5:	add    rsp,0x10
  40fff9:	pop    rbp
  40fffa:	ret    
  40fffb:	nop    DWORD PTR [rax+rax*1+0x0]
  410000:	push   rbp
  410001:	mov    rbp,rsp
  410004:	sub    rsp,0x10
  410008:	mov    QWORD PTR [rbp-0x8],rdi
  41000c:	mov    QWORD PTR [rbp-0x10],rsi
  410010:	mov    rdi,QWORD PTR [rbp-0x8]
  410014:	call   416db0 <main@@Base+0x29c0>
  410019:	cmp    rax,QWORD PTR [rbp-0x10]
  41001d:	jbe    410037 <test_union_vector@@Base+0xa17>
  410023:	mov    al,0x1
  410025:	test   al,0x1
  410027:	jne    410032 <test_union_vector@@Base+0xa12>
  41002d:	jmp    410037 <test_union_vector@@Base+0xa17>
  410032:	jmp    410056 <test_union_vector@@Base+0xa36>
  410037:	lea    rdi,[rip+0x1647b]        # 4264b9 <_IO_stdin_used@@Base+0x34b9>
  41003e:	lea    rsi,[rip+0x164ab]        # 4264f0 <_IO_stdin_used@@Base+0x34f0>
  410045:	mov    edx,0x195
  41004a:	lea    rcx,[rip+0x17079]        # 4270ca <_IO_stdin_used@@Base+0x40ca>
  410051:	call   404090 <__assert_fail@plt>
  410056:	mov    rax,QWORD PTR [rbp-0x8]
  41005a:	add    rax,QWORD PTR [rbp-0x10]
  41005e:	mov    rdi,rax
  410061:	call   418380 <main@@Base+0x3f90>
  410066:	movzx  eax,al
  410069:	add    rsp,0x10
  41006d:	pop    rbp
  41006e:	ret    
  41006f:	nop
  410070:	push   rbp
  410071:	mov    rbp,rsp
  410074:	sub    rsp,0x20
  410078:	mov    QWORD PTR [rbp-0x8],rdi
  41007c:	mov    QWORD PTR [rbp-0x10],rsi
  410080:	mov    rsi,QWORD PTR [rbp-0x8]
  410084:	mov    rdi,QWORD PTR [rbp-0x10]
  410088:	shl    rdi,0x2
  41008c:	add    rsi,rdi
  41008f:	mov    QWORD PTR [rbp-0x18],rsi
  410093:	mov    rsi,QWORD PTR [rbp-0x8]
  410097:	mov    rdi,rsi
  41009a:	call   416db0 <main@@Base+0x29c0>
  41009f:	cmp    rax,QWORD PTR [rbp-0x10]
  4100a3:	jbe    4100bd <test_union_vector@@Base+0xa9d>
  4100a9:	mov    al,0x1
  4100ab:	test   al,0x1
  4100ad:	jne    4100b8 <test_union_vector@@Base+0xa98>
  4100b3:	jmp    4100bd <test_union_vector@@Base+0xa9d>
  4100b8:	jmp    4100dc <test_union_vector@@Base+0xabc>
  4100bd:	lea    rdi,[rip+0x163f5]        # 4264b9 <_IO_stdin_used@@Base+0x34b9>
  4100c4:	lea    rsi,[rip+0x16425]        # 4264f0 <_IO_stdin_used@@Base+0x34f0>
  4100cb:	mov    edx,0x75
  4100d0:	lea    rcx,[rip+0x17050]        # 427127 <_IO_stdin_used@@Base+0x4127>
  4100d7:	call   404090 <__assert_fail@plt>
  4100dc:	mov    rax,QWORD PTR [rbp-0x18]
  4100e0:	mov    rcx,QWORD PTR [rbp-0x18]
  4100e4:	mov    rdi,rcx
  4100e7:	mov    QWORD PTR [rbp-0x20],rax
  4100eb:	call   414930 <main@@Base+0x540>
  4100f0:	mov    eax,eax
  4100f2:	mov    ecx,eax
  4100f4:	mov    rdi,QWORD PTR [rbp-0x20]
  4100f8:	add    rdi,rcx
  4100fb:	mov    rax,rdi
  4100fe:	add    rsp,0x20
  410102:	pop    rbp
  410103:	ret    
  410104:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41010e:	xchg   ax,ax
  410110:	push   rbp
  410111:	mov    rbp,rsp
  410114:	sub    rsp,0x30
  410118:	mov    QWORD PTR [rbp-0x8],rdi
  41011c:	mov    WORD PTR [rbp-0xa],0x0
  410122:	cmp    QWORD PTR [rbp-0x8],0x0
  410127:	je     410141 <test_union_vector@@Base+0xb21>
  41012d:	mov    al,0x1
  41012f:	test   al,0x1
  410131:	jne    41013c <test_union_vector@@Base+0xb1c>
  410137:	jmp    410141 <test_union_vector@@Base+0xb21>
  41013c:	jmp    410160 <test_union_vector@@Base+0xb40>
  410141:	lea    rdi,[rip+0x15950]        # 425a98 <_IO_stdin_used@@Base+0x2a98>
  410148:	lea    rsi,[rip+0x1596f]        # 425abe <_IO_stdin_used@@Base+0x2abe>
  41014f:	mov    edx,0x243
  410154:	lea    rcx,[rip+0x17020]        # 42717b <_IO_stdin_used@@Base+0x417b>
  41015b:	call   404090 <__assert_fail@plt>
  410160:	mov    WORD PTR [rbp-0xc],0x0
  410166:	mov    rax,QWORD PTR [rbp-0x8]
  41016a:	mov    rcx,QWORD PTR [rbp-0x8]
  41016e:	mov    rdi,rcx
  410171:	mov    QWORD PTR [rbp-0x20],rax
  410175:	call   414960 <main@@Base+0x570>
  41017a:	xor    edx,edx
  41017c:	mov    ecx,edx
  41017e:	movsxd rdi,eax
  410181:	sub    rcx,rdi
  410184:	mov    rdi,QWORD PTR [rbp-0x20]
  410188:	add    rdi,rcx
  41018b:	mov    QWORD PTR [rbp-0x18],rdi
  41018f:	mov    rcx,QWORD PTR [rbp-0x18]
  410193:	mov    rdi,rcx
  410196:	call   414980 <main@@Base+0x590>
  41019b:	movzx  edx,ax
  41019e:	mov    ecx,edx
  4101a0:	movzx  edx,WORD PTR [rbp-0xc]
  4101a4:	add    edx,0x3
  4101a7:	movsxd rdi,edx
  4101aa:	shl    rdi,0x1
  4101ae:	cmp    rcx,rdi
  4101b1:	jb     4101d9 <test_union_vector@@Base+0xbb9>
  4101b7:	mov    rax,QWORD PTR [rbp-0x18]
  4101bb:	movzx  ecx,WORD PTR [rbp-0xc]
  4101bf:	movsxd rdx,ecx
  4101c2:	shl    rdx,0x1
  4101c6:	add    rax,rdx
  4101c9:	add    rax,0x4
  4101cd:	mov    rdi,rax
  4101d0:	call   414980 <main@@Base+0x590>
  4101d5:	mov    WORD PTR [rbp-0xa],ax
  4101d9:	movzx  eax,WORD PTR [rbp-0xa]
  4101dd:	cmp    eax,0x0
  4101e0:	je     410207 <test_union_vector@@Base+0xbe7>
  4101e6:	mov    rax,QWORD PTR [rbp-0x8]
  4101ea:	movzx  ecx,WORD PTR [rbp-0xa]
  4101ee:	movsxd rdx,ecx
  4101f1:	add    rax,rdx
  4101f4:	mov    rdi,rax
  4101f7:	call   416d70 <main@@Base+0x2980>
  4101fc:	movsx  ecx,al
  4101ff:	mov    DWORD PTR [rbp-0x24],ecx
  410202:	jmp    410214 <test_union_vector@@Base+0xbf4>
  410207:	mov    eax,0x2
  41020c:	mov    DWORD PTR [rbp-0x24],eax
  41020f:	jmp    410214 <test_union_vector@@Base+0xbf4>
  410214:	mov    eax,DWORD PTR [rbp-0x24]
  410217:	mov    cl,al
  410219:	movsx  eax,cl
  41021c:	add    rsp,0x30
  410220:	pop    rbp
  410221:	ret    
  410222:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41022c:	nop    DWORD PTR [rax+0x0]
  410230:	push   rbp
  410231:	mov    rbp,rsp
  410234:	sub    rsp,0x20
  410238:	mov    QWORD PTR [rbp-0x18],rdi
  41023c:	mov    rdi,QWORD PTR [rbp-0x18]
  410240:	call   40fd80 <test_union_vector@@Base+0x760>
  410245:	mov    QWORD PTR [rbp-0x10],rax
  410249:	mov    rdi,QWORD PTR [rbp-0x18]
  41024d:	call   40feb0 <test_union_vector@@Base+0x890>
  410252:	mov    QWORD PTR [rbp-0x8],rax
  410256:	mov    rdi,QWORD PTR [rbp-0x10]
  41025a:	call   416db0 <main@@Base+0x29c0>
  41025f:	mov    rdi,QWORD PTR [rbp-0x8]
  410263:	mov    QWORD PTR [rbp-0x20],rax
  410267:	call   416db0 <main@@Base+0x29c0>
  41026c:	mov    rdi,QWORD PTR [rbp-0x20]
  410270:	cmp    rdi,rax
  410273:	jne    41028d <test_union_vector@@Base+0xc6d>
  410279:	mov    al,0x1
  41027b:	test   al,0x1
  41027d:	jne    410288 <test_union_vector@@Base+0xc68>
  410283:	jmp    41028d <test_union_vector@@Base+0xc6d>
  410288:	jmp    4102ac <test_union_vector@@Base+0xc8c>
  41028d:	lea    rdi,[rip+0x16f82]        # 427216 <_IO_stdin_used@@Base+0x4216>
  410294:	lea    rsi,[rip+0x15823]        # 425abe <_IO_stdin_used@@Base+0x2abe>
  41029b:	mov    edx,0x26d
  4102a0:	lea    rcx,[rip+0x16fd4]        # 42727b <_IO_stdin_used@@Base+0x427b>
  4102a7:	call   404090 <__assert_fail@plt>
  4102ac:	mov    rax,QWORD PTR [rbp-0x10]
  4102b0:	mov    rdx,QWORD PTR [rbp-0x8]
  4102b4:	add    rsp,0x20
  4102b8:	pop    rbp
  4102b9:	ret    
  4102ba:	nop    WORD PTR [rax+rax*1+0x0]
  4102c0:	push   rbp
  4102c1:	mov    rbp,rsp
  4102c4:	sub    rsp,0x10
  4102c8:	mov    QWORD PTR [rbp-0x10],rdi
  4102cc:	mov    QWORD PTR [rbp-0x8],rsi
  4102d0:	mov    rdi,QWORD PTR [rbp-0x10]
  4102d4:	call   416db0 <main@@Base+0x29c0>
  4102d9:	add    rsp,0x10
  4102dd:	pop    rbp
  4102de:	ret    
  4102df:	nop
  4102e0:	push   rbp
  4102e1:	mov    rbp,rsp
  4102e4:	sub    rsp,0x30
  4102e8:	xor    eax,eax
  4102ea:	mov    ecx,0x10
  4102ef:	mov    r8d,ecx
  4102f2:	mov    QWORD PTR [rbp-0x20],rdi
  4102f6:	mov    QWORD PTR [rbp-0x18],rsi
  4102fa:	mov    QWORD PTR [rbp-0x28],rdx
  4102fe:	lea    rdx,[rbp-0x10]
  410302:	mov    rdi,rdx
  410305:	mov    esi,eax
  410307:	mov    rdx,r8
  41030a:	call   4040a0 <memset@plt>
  41030f:	mov    rdi,QWORD PTR [rbp-0x20]
  410313:	call   416db0 <main@@Base+0x29c0>
  410318:	mov    QWORD PTR [rbp-0x30],rax
  41031c:	mov    rax,QWORD PTR [rbp-0x30]
  410320:	cmp    rax,QWORD PTR [rbp-0x28]
  410324:	jbe    41033e <test_union_vector@@Base+0xd1e>
  41032a:	mov    al,0x1
  41032c:	test   al,0x1
  41032e:	jne    410339 <test_union_vector@@Base+0xd19>
  410334:	jmp    41033e <test_union_vector@@Base+0xd1e>
  410339:	jmp    41035d <test_union_vector@@Base+0xd3d>
  41033e:	lea    rdi,[rip+0x16f92]        # 4272d7 <_IO_stdin_used@@Base+0x42d7>
  410345:	lea    rsi,[rip+0x15772]        # 425abe <_IO_stdin_used@@Base+0x2abe>
  41034c:	mov    edx,0x208
  410351:	lea    rcx,[rip+0x16f9f]        # 4272f7 <_IO_stdin_used@@Base+0x42f7>
  410358:	call   404090 <__assert_fail@plt>
  41035d:	mov    rax,QWORD PTR [rbp-0x20]
  410361:	mov    rcx,QWORD PTR [rbp-0x28]
  410365:	mov    dl,BYTE PTR [rax+rcx*1]
  410368:	mov    BYTE PTR [rbp-0x10],dl
  41036b:	movzx  esi,BYTE PTR [rbp-0x10]
  41036f:	cmp    esi,0x0
  410372:	jne    41037d <test_union_vector@@Base+0xd5d>
  410378:	jmp    41038e <test_union_vector@@Base+0xd6e>
  41037d:	mov    rdi,QWORD PTR [rbp-0x18]
  410381:	mov    rsi,QWORD PTR [rbp-0x28]
  410385:	call   410070 <test_union_vector@@Base+0xa50>
  41038a:	mov    QWORD PTR [rbp-0x8],rax
  41038e:	mov    al,BYTE PTR [rbp-0x10]
  410391:	mov    rdx,QWORD PTR [rbp-0x8]
  410395:	add    rsp,0x30
  410399:	pop    rbp
  41039a:	ret    
  41039b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004103a0 <test_mixed_type_union@@Base>:
  4103a0:	push   rbp
  4103a1:	mov    rbp,rsp
  4103a4:	sub    rsp,0x290
  4103ab:	mov    QWORD PTR [rbp-0x10],rdi
  4103af:	mov    DWORD PTR [rbp-0x2c],0xffffffff
  4103b6:	mov    rdi,QWORD PTR [rbp-0x10]
  4103ba:	call   4197b0 <flatcc_builder_reset@@Base>
  4103bf:	mov    rdi,QWORD PTR [rbp-0x10]
  4103c3:	mov    DWORD PTR [rbp-0x174],eax
  4103c9:	call   410fd0 <test_mixed_type_union@@Base+0xc30>
  4103ce:	mov    rdi,QWORD PTR [rbp-0x10]
  4103d2:	mov    esi,0xa
  4103d7:	mov    DWORD PTR [rbp-0x178],eax
  4103dd:	call   411020 <test_mixed_type_union@@Base+0xc80>
  4103e2:	mov    DWORD PTR [rbp-0x44],eax
  4103e5:	mov    rdi,QWORD PTR [rbp-0x10]
  4103e9:	mov    esi,0x16
  4103ee:	call   411080 <test_mixed_type_union@@Base+0xce0>
  4103f3:	mov    DWORD PTR [rbp-0x3c],eax
  4103f6:	mov    edi,DWORD PTR [rbp-0x3c]
  4103f9:	call   4110e0 <test_mixed_type_union@@Base+0xd40>
  4103fe:	mov    QWORD PTR [rbp-0x98],rax
  410405:	mov    rax,QWORD PTR [rbp-0x98]
  41040c:	mov    QWORD PTR [rbp-0x38],rax
  410410:	mov    rdi,QWORD PTR [rbp-0x10]
  410414:	mov    esi,0x13
  410419:	call   411100 <test_mixed_type_union@@Base+0xd60>
  41041e:	mov    rdi,QWORD PTR [rbp-0x10]
  410422:	mov    esi,DWORD PTR [rbp-0x3c]
  410425:	mov    DWORD PTR [rbp-0x17c],eax
  41042b:	call   411170 <test_mixed_type_union@@Base+0xdd0>
  410430:	mov    rdi,QWORD PTR [rbp-0x10]
  410434:	mov    esi,0x2a
  410439:	mov    DWORD PTR [rbp-0x180],eax
  41043f:	call   4111b0 <test_mixed_type_union@@Base+0xe10>
  410444:	mov    DWORD PTR [rbp-0x40],eax
  410447:	mov    rdi,QWORD PTR [rbp-0x10]
  41044b:	mov    esi,DWORD PTR [rbp-0x40]
  41044e:	call   411210 <test_mixed_type_union@@Base+0xe70>
  410453:	mov    rdi,QWORD PTR [rbp-0x10]
  410457:	lea    rsi,[rip+0x14b7c]        # 424fda <_IO_stdin_used@@Base+0x1fda>
  41045e:	mov    DWORD PTR [rbp-0x184],eax
  410464:	call   411250 <test_mixed_type_union@@Base+0xeb0>
  410469:	mov    rdi,QWORD PTR [rbp-0x10]
  41046d:	mov    DWORD PTR [rbp-0x188],eax
  410473:	call   411290 <test_mixed_type_union@@Base+0xef0>
  410478:	mov    rdi,QWORD PTR [rbp-0x10]
  41047c:	mov    rsi,QWORD PTR [rbp-0x38]
  410480:	mov    DWORD PTR [rbp-0x18c],eax
  410486:	call   4112b0 <test_mixed_type_union@@Base+0xf10>
  41048b:	mov    rdi,QWORD PTR [rbp-0x10]
  41048f:	mov    esi,DWORD PTR [rbp-0x40]
  410492:	mov    QWORD PTR [rbp-0x198],rax
  410499:	call   4112e0 <test_mixed_type_union@@Base+0xf40>
  41049e:	mov    rdi,QWORD PTR [rbp-0x10]
  4104a2:	mov    esi,0x1
  4104a7:	mov    QWORD PTR [rbp-0x1a0],rax
  4104ae:	call   411320 <test_mixed_type_union@@Base+0xf80>
  4104b3:	mov    rdi,QWORD PTR [rbp-0x10]
  4104b7:	mov    rcx,QWORD PTR [rbp-0x10]
  4104bb:	mov    QWORD PTR [rbp-0x1a8],rdi
  4104c2:	mov    rdi,rcx
  4104c5:	lea    rsi,[rip+0x14b19]        # 424fe5 <_IO_stdin_used@@Base+0x1fe5>
  4104cc:	mov    QWORD PTR [rbp-0x1b0],rax
  4104d3:	call   40a980 <gen_monster@@Base+0xe40>
  4104d8:	mov    edi,eax
  4104da:	call   4113a0 <test_mixed_type_union@@Base+0x1000>
  4104df:	mov    QWORD PTR [rbp-0xa0],rax
  4104e6:	mov    rsi,QWORD PTR [rbp-0xa0]
  4104ed:	mov    rdi,QWORD PTR [rbp-0x1a8]
  4104f4:	call   411370 <test_mixed_type_union@@Base+0xfd0>
  4104f9:	mov    rdi,QWORD PTR [rbp-0x10]
  4104fd:	mov    esi,DWORD PTR [rbp-0x44]
  410500:	mov    QWORD PTR [rbp-0x1b8],rax
  410507:	call   4113c0 <test_mixed_type_union@@Base+0x1020>
  41050c:	mov    rdi,QWORD PTR [rbp-0x10]
  410510:	mov    QWORD PTR [rbp-0x1c0],rax
  410517:	call   411400 <test_mixed_type_union@@Base+0x1060>
  41051c:	mov    QWORD PTR [rbp-0x50],rax
  410520:	mov    rax,QWORD PTR [rbp-0x50]
  410524:	mov    DWORD PTR [rax],0x3
  41052a:	mov    rdi,QWORD PTR [rbp-0x10]
  41052e:	call   411420 <test_mixed_type_union@@Base+0x1080>
  410533:	mov    rdi,QWORD PTR [rbp-0x10]
  410537:	mov    rcx,QWORD PTR [rbp-0x10]
  41053b:	mov    QWORD PTR [rbp-0x1c8],rdi
  410542:	mov    rdi,rcx
  410545:	mov    esi,0x1
  41054a:	mov    QWORD PTR [rbp-0x1d0],rax
  410551:	call   411020 <test_mixed_type_union@@Base+0xc80>
  410556:	mov    rdi,QWORD PTR [rbp-0x1c8]
  41055d:	mov    esi,eax
  41055f:	call   4113c0 <test_mixed_type_union@@Base+0x1020>
  410564:	mov    rdi,QWORD PTR [rbp-0x10]
  410568:	mov    esi,0x2
  41056d:	mov    QWORD PTR [rbp-0x1d8],rax
  410574:	call   411460 <test_mixed_type_union@@Base+0x10c0>
  410579:	mov    rdi,QWORD PTR [rbp-0x10]
  41057d:	mov    rcx,QWORD PTR [rbp-0x10]
  410581:	mov    QWORD PTR [rbp-0x1e0],rdi
  410588:	mov    rdi,rcx
  41058b:	lea    rsi,[rip+0x14a51]        # 424fe3 <_IO_stdin_used@@Base+0x1fe3>
  410592:	mov    QWORD PTR [rbp-0x1e8],rax
  410599:	call   40a980 <gen_monster@@Base+0xe40>
  41059e:	mov    rdi,QWORD PTR [rbp-0x1e0]
  4105a5:	mov    esi,eax
  4105a7:	call   4114b0 <test_mixed_type_union@@Base+0x1110>
  4105ac:	mov    rdi,QWORD PTR [rbp-0x10]
  4105b0:	lea    rsi,[rip+0x14a28]        # 424fdf <_IO_stdin_used@@Base+0x1fdf>
  4105b7:	mov    QWORD PTR [rbp-0x1f0],rax
  4105be:	call   4114f0 <test_mixed_type_union@@Base+0x1150>
  4105c3:	mov    rdi,QWORD PTR [rbp-0x10]
  4105c7:	mov    QWORD PTR [rbp-0x1f8],rax
  4105ce:	call   411540 <test_mixed_type_union@@Base+0x11a0>
  4105d3:	mov    rdi,QWORD PTR [rbp-0x10]
  4105d7:	mov    DWORD PTR [rbp-0x1fc],eax
  4105dd:	call   411580 <test_mixed_type_union@@Base+0x11e0>
  4105e2:	mov    rdi,QWORD PTR [rbp-0x10]
  4105e6:	lea    rsi,[rbp-0x20]
  4105ea:	mov    DWORD PTR [rbp-0x200],eax
  4105f0:	call   41ec10 <flatcc_builder_finalize_aligned_buffer@@Base>
  4105f5:	mov    rcx,QWORD PTR [rip+0x219fc]        # 431ff8 <stderr@GLIBC_2.2.5>
  4105fc:	mov    QWORD PTR [rbp-0x18],rax
  410600:	mov    rsi,QWORD PTR [rbp-0x18]
  410604:	mov    rdx,QWORD PTR [rbp-0x20]
  410608:	mov    rcx,QWORD PTR [rcx]
  41060b:	lea    rdi,[rip+0x149d9]        # 424feb <_IO_stdin_used@@Base+0x1feb>
  410612:	call   404db0 <test_type_aliases@@Base+0x4b0>
  410617:	mov    rdi,QWORD PTR [rbp-0x18]
  41061b:	mov    rsi,QWORD PTR [rbp-0x20]
  41061f:	call   4115c0 <test_mixed_type_union@@Base+0x1220>
  410624:	mov    DWORD PTR [rbp-0x2c],eax
  410627:	cmp    eax,0x0
  41062a:	je     41065b <test_mixed_type_union@@Base+0x2bb>
  410630:	mov    edi,DWORD PTR [rbp-0x2c]
  410633:	call   41fca0 <flatcc_verify_error_string@@Base>
  410638:	lea    rdi,[rip+0x149b9]        # 424ff8 <_IO_stdin_used@@Base+0x1ff8>
  41063f:	mov    rsi,rax
  410642:	mov    al,0x0
  410644:	call   404070 <printf@plt>
  410649:	mov    DWORD PTR [rbp-0x4],0xffffffff
  410650:	mov    DWORD PTR [rbp-0x204],eax
  410656:	jmp    410fc4 <test_mixed_type_union@@Base+0xc24>
  41065b:	mov    DWORD PTR [rbp-0x2c],0xffffffff
  410662:	mov    rdi,QWORD PTR [rbp-0x18]
  410666:	call   411600 <test_mixed_type_union@@Base+0x1260>
  41066b:	mov    QWORD PTR [rbp-0x58],rax
  41066f:	mov    rdi,QWORD PTR [rbp-0x58]
  410673:	call   411670 <test_mixed_type_union@@Base+0x12d0>
  410678:	cmp    eax,0x0
  41067b:	jne    41069a <test_mixed_type_union@@Base+0x2fa>
  410681:	lea    rdi,[rip+0x149bf]        # 425047 <_IO_stdin_used@@Base+0x2047>
  410688:	mov    al,0x0
  41068a:	call   404070 <printf@plt>
  41068f:	mov    DWORD PTR [rbp-0x208],eax
  410695:	jmp    410fb5 <test_mixed_type_union@@Base+0xc15>
  41069a:	mov    rdi,QWORD PTR [rbp-0x58]
  41069e:	call   411750 <test_mixed_type_union@@Base+0x13b0>
  4106a3:	cmp    eax,0x0
  4106a6:	jne    4106c5 <test_mixed_type_union@@Base+0x325>
  4106ac:	lea    rdi,[rip+0x149be]        # 425071 <_IO_stdin_used@@Base+0x2071>
  4106b3:	mov    al,0x0
  4106b5:	call   404070 <printf@plt>
  4106ba:	mov    DWORD PTR [rbp-0x20c],eax
  4106c0:	jmp    410fb5 <test_mixed_type_union@@Base+0xc15>
  4106c5:	mov    rdi,QWORD PTR [rbp-0x58]
  4106c9:	call   411830 <test_mixed_type_union@@Base+0x1490>
  4106ce:	mov    BYTE PTR [rbp-0xb0],al
  4106d4:	mov    QWORD PTR [rbp-0xa8],rdx
  4106db:	mov    rdx,QWORD PTR [rbp-0xb0]
  4106e2:	mov    QWORD PTR [rbp-0x78],rdx
  4106e6:	mov    rdx,QWORD PTR [rbp-0xa8]
  4106ed:	mov    QWORD PTR [rbp-0x70],rdx
  4106f1:	movzx  ecx,BYTE PTR [rbp-0x78]
  4106f5:	cmp    ecx,0x8
  4106f8:	je     410717 <test_mixed_type_union@@Base+0x377>
  4106fe:	lea    rdi,[rip+0x14998]        # 42509d <_IO_stdin_used@@Base+0x209d>
  410705:	mov    al,0x0
  410707:	call   404070 <printf@plt>
  41070c:	mov    DWORD PTR [rbp-0x210],eax
  410712:	jmp    410fb5 <test_mixed_type_union@@Base+0xc15>
  410717:	mov    rax,QWORD PTR [rbp-0x70]
  41071b:	mov    QWORD PTR [rbp-0x80],rax
  41071f:	cmp    QWORD PTR [rbp-0x80],0x0
  410724:	jne    41073e <test_mixed_type_union@@Base+0x39e>
  41072a:	lea    rdi,[rip+0x14988]        # 4250b9 <_IO_stdin_used@@Base+0x20b9>
  410731:	mov    al,0x0
  410733:	call   404070 <printf@plt>
  410738:	mov    DWORD PTR [rbp-0x214],eax
  41073e:	mov    rdi,QWORD PTR [rbp-0x80]
  410742:	call   411890 <test_mixed_type_union@@Base+0x14f0>
  410747:	movzx  ecx,ax
  41074a:	cmp    ecx,0x13
  41074d:	jle    41076c <test_mixed_type_union@@Base+0x3cc>
  410753:	lea    rdi,[rip+0x14977]        # 4250d1 <_IO_stdin_used@@Base+0x20d1>
  41075a:	mov    al,0x0
  41075c:	call   404070 <printf@plt>
  410761:	mov    DWORD PTR [rbp-0x218],eax
  410767:	jmp    410fb5 <test_mixed_type_union@@Base+0xc15>
  41076c:	mov    rdi,QWORD PTR [rbp-0x80]
  410770:	call   411890 <test_mixed_type_union@@Base+0x14f0>
  410775:	movzx  ecx,ax
  410778:	cmp    ecx,0x13
  41077b:	jge    41079a <test_mixed_type_union@@Base+0x3fa>
  410781:	lea    rdi,[rip+0x14971]        # 4250f9 <_IO_stdin_used@@Base+0x20f9>
  410788:	mov    al,0x0
  41078a:	call   404070 <printf@plt>
  41078f:	mov    DWORD PTR [rbp-0x21c],eax
  410795:	jmp    410fb5 <test_mixed_type_union@@Base+0xc15>
  41079a:	mov    rdi,QWORD PTR [rbp-0x58]
  41079e:	call   4118e0 <test_mixed_type_union@@Base+0x1540>
  4107a3:	movzx  ecx,al
  4107a6:	cmp    ecx,0x8
  4107a9:	je     4107c8 <test_mixed_type_union@@Base+0x428>
  4107af:	lea    rdi,[rip+0x14972]        # 425128 <_IO_stdin_used@@Base+0x2128>
  4107b6:	mov    al,0x0
  4107b8:	call   404070 <printf@plt>
  4107bd:	mov    DWORD PTR [rbp-0x220],eax
  4107c3:	jmp    410fb5 <test_mixed_type_union@@Base+0xc15>
  4107c8:	mov    rdi,QWORD PTR [rbp-0x58]
  4107cc:	call   4119f0 <test_mixed_type_union@@Base+0x1650>
  4107d1:	mov    QWORD PTR [rbp-0x80],rax
  4107d5:	cmp    QWORD PTR [rbp-0x80],0x0
  4107da:	jne    4107f9 <test_mixed_type_union@@Base+0x459>
  4107e0:	lea    rdi,[rip+0x14976]        # 42515d <_IO_stdin_used@@Base+0x215d>
  4107e7:	mov    al,0x0
  4107e9:	call   404070 <printf@plt>
  4107ee:	mov    DWORD PTR [rbp-0x224],eax
  4107f4:	jmp    410fb5 <test_mixed_type_union@@Base+0xc15>
  4107f9:	mov    rdi,QWORD PTR [rbp-0x80]
  4107fd:	call   411890 <test_mixed_type_union@@Base+0x14f0>
  410802:	movzx  ecx,ax
  410805:	cmp    ecx,0x16
  410808:	je     410827 <test_mixed_type_union@@Base+0x487>
  41080e:	lea    rdi,[rip+0x14978]        # 42518d <_IO_stdin_used@@Base+0x218d>
  410815:	mov    al,0x0
  410817:	call   404070 <printf@plt>
  41081c:	mov    DWORD PTR [rbp-0x228],eax
  410822:	jmp    410fb5 <test_mixed_type_union@@Base+0xc15>
  410827:	mov    rdi,QWORD PTR [rbp-0x58]
  41082b:	call   411b10 <test_mixed_type_union@@Base+0x1770>
  410830:	movzx  ecx,al
  410833:	cmp    ecx,0x2
  410836:	je     410855 <test_mixed_type_union@@Base+0x4b5>
  41083c:	lea    rdi,[rip+0x1497a]        # 4251bd <_IO_stdin_used@@Base+0x21bd>
  410843:	mov    al,0x0
  410845:	call   404070 <printf@plt>
  41084a:	mov    DWORD PTR [rbp-0x22c],eax
  410850:	jmp    410fb5 <test_mixed_type_union@@Base+0xc15>
  410855:	mov    rdi,QWORD PTR [rbp-0x58]
  410859:	call   411c20 <test_mixed_type_union@@Base+0x1880>
  41085e:	mov    QWORD PTR [rbp-0x88],rax
  410865:	cmp    QWORD PTR [rbp-0x88],0x0
  41086d:	je     410888 <test_mixed_type_union@@Base+0x4e8>
  410873:	mov    rdi,QWORD PTR [rbp-0x88]
  41087a:	call   411d40 <test_mixed_type_union@@Base+0x19a0>
  41087f:	cmp    eax,0x2a
  410882:	je     4108a1 <test_mixed_type_union@@Base+0x501>
  410888:	lea    rdi,[rip+0x14946]        # 4251d5 <_IO_stdin_used@@Base+0x21d5>
  41088f:	mov    al,0x0
  410891:	call   404070 <printf@plt>
  410896:	mov    DWORD PTR [rbp-0x230],eax
  41089c:	jmp    410fb5 <test_mixed_type_union@@Base+0xc15>
  4108a1:	mov    rdi,QWORD PTR [rbp-0x58]
  4108a5:	call   411e50 <test_mixed_type_union@@Base+0x1ab0>
  4108aa:	movzx  ecx,al
  4108ad:	cmp    ecx,0xb
  4108b0:	je     4108cf <test_mixed_type_union@@Base+0x52f>
  4108b6:	lea    rdi,[rip+0x1493b]        # 4251f8 <_IO_stdin_used@@Base+0x21f8>
  4108bd:	mov    al,0x0
  4108bf:	call   404070 <printf@plt>
  4108c4:	mov    DWORD PTR [rbp-0x234],eax
  4108ca:	jmp    410fb5 <test_mixed_type_union@@Base+0xc15>
  4108cf:	mov    rdi,QWORD PTR [rbp-0x58]
  4108d3:	call   411fb0 <test_mixed_type_union@@Base+0x1c10>
  4108d8:	mov    rdi,rax
  4108db:	call   411f60 <test_mixed_type_union@@Base+0x1bc0>
  4108e0:	mov    QWORD PTR [rbp-0x90],rax
  4108e7:	cmp    QWORD PTR [rbp-0x90],0x0
  4108ef:	jne    41090e <test_mixed_type_union@@Base+0x56e>
  4108f5:	lea    rdi,[rip+0x14913]        # 42520f <_IO_stdin_used@@Base+0x220f>
  4108fc:	mov    al,0x0
  4108fe:	call   404070 <printf@plt>
  410903:	mov    DWORD PTR [rbp-0x238],eax
  410909:	jmp    410fb5 <test_mixed_type_union@@Base+0xc15>
  41090e:	mov    rdi,QWORD PTR [rbp-0x90]
  410915:	lea    rsi,[rip+0x146be]        # 424fda <_IO_stdin_used@@Base+0x1fda>
  41091c:	call   4040d0 <strcmp@plt>
  410921:	cmp    eax,0x0
  410924:	je     41094a <test_mixed_type_union@@Base+0x5aa>
  41092a:	mov    rsi,QWORD PTR [rbp-0x90]
  410931:	lea    rdi,[rip+0x148f2]        # 42522a <_IO_stdin_used@@Base+0x222a>
  410938:	mov    al,0x0
  41093a:	call   404070 <printf@plt>
  41093f:	mov    DWORD PTR [rbp-0x23c],eax
  410945:	jmp    410fb5 <test_mixed_type_union@@Base+0xc15>
  41094a:	mov    rdi,QWORD PTR [rbp-0x58]
  41094e:	call   4120d0 <test_mixed_type_union@@Base+0x1d30>
  410953:	mov    QWORD PTR [rbp-0x90],rax
  41095a:	cmp    QWORD PTR [rbp-0x90],0x0
  410962:	jne    410981 <test_mixed_type_union@@Base+0x5e1>
  410968:	lea    rdi,[rip+0x148a0]        # 42520f <_IO_stdin_used@@Base+0x220f>
  41096f:	mov    al,0x0
  410971:	call   404070 <printf@plt>
  410976:	mov    DWORD PTR [rbp-0x240],eax
  41097c:	jmp    410fb5 <test_mixed_type_union@@Base+0xc15>
  410981:	mov    rdi,QWORD PTR [rbp-0x90]
  410988:	lea    rsi,[rip+0x1464b]        # 424fda <_IO_stdin_used@@Base+0x1fda>
  41098f:	call   4040d0 <strcmp@plt>
  410994:	cmp    eax,0x0
  410997:	je     4109bd <test_mixed_type_union@@Base+0x61d>
  41099d:	mov    rsi,QWORD PTR [rbp-0x90]
  4109a4:	lea    rdi,[rip+0x148a3]        # 42524e <_IO_stdin_used@@Base+0x224e>
  4109ab:	mov    al,0x0
  4109ad:	call   404070 <printf@plt>
  4109b2:	mov    DWORD PTR [rbp-0x244],eax
  4109b8:	jmp    410fb5 <test_mixed_type_union@@Base+0xc15>
  4109bd:	mov    rdi,QWORD PTR [rbp-0x58]
  4109c1:	call   412100 <test_mixed_type_union@@Base+0x1d60>
  4109c6:	mov    BYTE PTR [rbp-0xc0],al
  4109cc:	mov    QWORD PTR [rbp-0xb8],rdx
  4109d3:	mov    rdx,QWORD PTR [rbp-0xc0]
  4109da:	mov    QWORD PTR [rbp-0x78],rdx
  4109de:	mov    rdx,QWORD PTR [rbp-0xb8]
  4109e5:	mov    QWORD PTR [rbp-0x70],rdx
  4109e9:	mov    al,BYTE PTR [rbp-0x78]
  4109ec:	mov    rsi,QWORD PTR [rbp-0x70]
  4109f0:	movzx  edi,al
  4109f3:	call   412160 <test_mixed_type_union@@Base+0x1dc0>
  4109f8:	mov    QWORD PTR [rbp-0x90],rax
  4109ff:	mov    rdi,QWORD PTR [rbp-0x90]
  410a06:	lea    rsi,[rip+0x145cd]        # 424fda <_IO_stdin_used@@Base+0x1fda>
  410a0d:	call   4040d0 <strcmp@plt>
  410a12:	cmp    eax,0x0
  410a15:	je     410a3b <test_mixed_type_union@@Base+0x69b>
  410a1b:	mov    rsi,QWORD PTR [rbp-0x90]
  410a22:	lea    rdi,[rip+0x14852]        # 42527b <_IO_stdin_used@@Base+0x227b>
  410a29:	mov    al,0x0
  410a2b:	call   404070 <printf@plt>
  410a30:	mov    DWORD PTR [rbp-0x248],eax
  410a36:	jmp    410fb5 <test_mixed_type_union@@Base+0xc15>
  410a3b:	mov    rdi,QWORD PTR [rbp-0x58]
  410a3f:	call   412190 <test_mixed_type_union@@Base+0x1df0>
  410a44:	xor    ecx,ecx
  410a46:	mov    edi,ecx
  410a48:	mov    QWORD PTR [rbp-0xd0],rax
  410a4f:	mov    QWORD PTR [rbp-0xc8],rdx
  410a56:	mov    rax,QWORD PTR [rbp-0xd0]
  410a5d:	mov    QWORD PTR [rbp-0x68],rax
  410a61:	mov    rax,QWORD PTR [rbp-0xc8]
  410a68:	mov    QWORD PTR [rbp-0x60],rax
  410a6c:	mov    rax,QWORD PTR [rbp-0x68]
  410a70:	mov    rsi,QWORD PTR [rbp-0x60]
  410a74:	mov    QWORD PTR [rbp-0x250],rdi
  410a7b:	mov    rdi,rax
  410a7e:	mov    rdx,QWORD PTR [rbp-0x250]
  410a85:	call   412220 <test_mixed_type_union@@Base+0x1e80>
  410a8a:	mov    BYTE PTR [rbp-0xe0],al
  410a90:	mov    QWORD PTR [rbp-0xd8],rdx
  410a97:	mov    rdx,QWORD PTR [rbp-0xe0]
  410a9e:	mov    QWORD PTR [rbp-0x78],rdx
  410aa2:	mov    rdx,QWORD PTR [rbp-0xd8]
  410aa9:	mov    QWORD PTR [rbp-0x70],rdx
  410aad:	movzx  ecx,BYTE PTR [rbp-0x78]
  410ab1:	cmp    ecx,0x8
  410ab4:	je     410ad3 <test_mixed_type_union@@Base+0x733>
  410aba:	lea    rdi,[rip+0x147e7]        # 4252a8 <_IO_stdin_used@@Base+0x22a8>
  410ac1:	mov    al,0x0
  410ac3:	call   404070 <printf@plt>
  410ac8:	mov    DWORD PTR [rbp-0x254],eax
  410ace:	jmp    410fb5 <test_mixed_type_union@@Base+0xc15>
  410ad3:	mov    eax,0x1
  410ad8:	mov    edx,eax
  410ada:	mov    rdi,QWORD PTR [rbp-0x68]
  410ade:	mov    rsi,QWORD PTR [rbp-0x60]
  410ae2:	call   412220 <test_mixed_type_union@@Base+0x1e80>
  410ae7:	mov    BYTE PTR [rbp-0xf0],al
  410aed:	mov    QWORD PTR [rbp-0xe8],rdx
  410af4:	mov    rdx,QWORD PTR [rbp-0xf0]
  410afb:	mov    QWORD PTR [rbp-0x78],rdx
  410aff:	mov    rdx,QWORD PTR [rbp-0xe8]
  410b06:	mov    QWORD PTR [rbp-0x70],rdx
  410b0a:	movzx  ecx,BYTE PTR [rbp-0x78]
  410b0e:	cmp    ecx,0x2
  410b11:	je     410b30 <test_mixed_type_union@@Base+0x790>
  410b17:	lea    rdi,[rip+0x147af]        # 4252cd <_IO_stdin_used@@Base+0x22cd>
  410b1e:	mov    al,0x0
  410b20:	call   404070 <printf@plt>
  410b25:	mov    DWORD PTR [rbp-0x258],eax
  410b2b:	jmp    410fb5 <test_mixed_type_union@@Base+0xc15>
  410b30:	mov    rax,QWORD PTR [rbp-0x70]
  410b34:	mov    QWORD PTR [rbp-0x88],rax
  410b3b:	mov    rdi,QWORD PTR [rbp-0x88]
  410b42:	call   411d40 <test_mixed_type_union@@Base+0x19a0>
  410b47:	cmp    eax,0x2a
  410b4a:	je     410b69 <test_mixed_type_union@@Base+0x7c9>
  410b50:	lea    rdi,[rip+0x14799]        # 4252f0 <_IO_stdin_used@@Base+0x22f0>
  410b57:	mov    al,0x0
  410b59:	call   404070 <printf@plt>
  410b5e:	mov    DWORD PTR [rbp-0x25c],eax
  410b64:	jmp    410fb5 <test_mixed_type_union@@Base+0xc15>
  410b69:	mov    eax,0x2
  410b6e:	mov    edx,eax
  410b70:	mov    rdi,QWORD PTR [rbp-0x68]
  410b74:	mov    rsi,QWORD PTR [rbp-0x60]
  410b78:	call   412220 <test_mixed_type_union@@Base+0x1e80>
  410b7d:	mov    BYTE PTR [rbp-0x100],al
  410b83:	mov    QWORD PTR [rbp-0xf8],rdx
  410b8a:	mov    rdx,QWORD PTR [rbp-0x100]
  410b91:	mov    QWORD PTR [rbp-0x78],rdx
  410b95:	mov    rdx,QWORD PTR [rbp-0xf8]
  410b9c:	mov    QWORD PTR [rbp-0x70],rdx
  410ba0:	movzx  ecx,BYTE PTR [rbp-0x78]
  410ba4:	cmp    ecx,0x2
  410ba7:	je     410bc6 <test_mixed_type_union@@Base+0x826>
  410bad:	lea    rdi,[rip+0x1476e]        # 425322 <_IO_stdin_used@@Base+0x2322>
  410bb4:	mov    al,0x0
  410bb6:	call   404070 <printf@plt>
  410bbb:	mov    DWORD PTR [rbp-0x260],eax
  410bc1:	jmp    410fb5 <test_mixed_type_union@@Base+0xc15>
  410bc6:	mov    rax,QWORD PTR [rbp-0x70]
  410bca:	mov    QWORD PTR [rbp-0x88],rax
  410bd1:	mov    rdi,QWORD PTR [rbp-0x88]
  410bd8:	call   411d40 <test_mixed_type_union@@Base+0x19a0>
  410bdd:	cmp    eax,0x1
  410be0:	je     410bff <test_mixed_type_union@@Base+0x85f>
  410be6:	lea    rdi,[rip+0x14757]        # 425344 <_IO_stdin_used@@Base+0x2344>
  410bed:	mov    al,0x0
  410bef:	call   404070 <printf@plt>
  410bf4:	mov    DWORD PTR [rbp-0x264],eax
  410bfa:	jmp    410fb5 <test_mixed_type_union@@Base+0xc15>
  410bff:	mov    rdi,QWORD PTR [rbp-0x58]
  410c03:	call   4122e0 <test_mixed_type_union@@Base+0x1f40>
  410c08:	mov    ecx,0x3
  410c0d:	mov    esi,ecx
  410c0f:	mov    rdi,rax
  410c12:	call   410000 <test_union_vector@@Base+0x9e0>
  410c17:	movzx  ecx,al
  410c1a:	cmp    ecx,0xb
  410c1d:	je     410c3c <test_mixed_type_union@@Base+0x89c>
  410c23:	lea    rdi,[rip+0x1474b]        # 425375 <_IO_stdin_used@@Base+0x2375>
  410c2a:	mov    al,0x0
  410c2c:	call   404070 <printf@plt>
  410c31:	mov    DWORD PTR [rbp-0x268],eax
  410c37:	jmp    410fb5 <test_mixed_type_union@@Base+0xc15>
  410c3c:	mov    eax,0x3
  410c41:	mov    edx,eax
  410c43:	mov    rdi,QWORD PTR [rbp-0x68]
  410c47:	mov    rsi,QWORD PTR [rbp-0x60]
  410c4b:	call   412410 <test_mixed_type_union@@Base+0x2070>
  410c50:	mov    QWORD PTR [rbp-0x90],rax
  410c57:	cmp    QWORD PTR [rbp-0x90],0x0
  410c5f:	je     410c81 <test_mixed_type_union@@Base+0x8e1>
  410c65:	mov    rdi,QWORD PTR [rbp-0x90]
  410c6c:	lea    rsi,[rip+0x14372]        # 424fe5 <_IO_stdin_used@@Base+0x1fe5>
  410c73:	call   4040d0 <strcmp@plt>
  410c78:	cmp    eax,0x0
  410c7b:	je     410c9a <test_mixed_type_union@@Base+0x8fa>
  410c81:	lea    rdi,[rip+0x1471c]        # 4253a4 <_IO_stdin_used@@Base+0x23a4>
  410c88:	mov    al,0x0
  410c8a:	call   404070 <printf@plt>
  410c8f:	mov    DWORD PTR [rbp-0x26c],eax
  410c95:	jmp    410fb5 <test_mixed_type_union@@Base+0xc15>
  410c9a:	mov    eax,0x3
  410c9f:	mov    edx,eax
  410ca1:	mov    rdi,QWORD PTR [rbp-0x68]
  410ca5:	mov    rsi,QWORD PTR [rbp-0x60]
  410ca9:	call   412220 <test_mixed_type_union@@Base+0x1e80>
  410cae:	mov    BYTE PTR [rbp-0x110],al
  410cb4:	mov    QWORD PTR [rbp-0x108],rdx
  410cbb:	mov    rdx,QWORD PTR [rbp-0x110]
  410cc2:	mov    QWORD PTR [rbp-0x78],rdx
  410cc6:	mov    rdx,QWORD PTR [rbp-0x108]
  410ccd:	mov    QWORD PTR [rbp-0x70],rdx
  410cd1:	movzx  ecx,BYTE PTR [rbp-0x78]
  410cd5:	cmp    ecx,0xb
  410cd8:	je     410cf7 <test_mixed_type_union@@Base+0x957>
  410cde:	lea    rdi,[rip+0x146f3]        # 4253d8 <_IO_stdin_used@@Base+0x23d8>
  410ce5:	mov    al,0x0
  410ce7:	call   404070 <printf@plt>
  410cec:	mov    DWORD PTR [rbp-0x270],eax
  410cf2:	jmp    410fb5 <test_mixed_type_union@@Base+0xc15>
  410cf7:	mov    al,BYTE PTR [rbp-0x78]
  410cfa:	mov    rsi,QWORD PTR [rbp-0x70]
  410cfe:	movzx  edi,al
  410d01:	call   412160 <test_mixed_type_union@@Base+0x1dc0>
  410d06:	mov    QWORD PTR [rbp-0x90],rax
  410d0d:	cmp    QWORD PTR [rbp-0x90],0x0
  410d15:	je     410d37 <test_mixed_type_union@@Base+0x997>
  410d1b:	mov    rdi,QWORD PTR [rbp-0x90]
  410d22:	lea    rsi,[rip+0x142bc]        # 424fe5 <_IO_stdin_used@@Base+0x1fe5>
  410d29:	call   4040d0 <strcmp@plt>
  410d2e:	cmp    eax,0x0
  410d31:	je     410d50 <test_mixed_type_union@@Base+0x9b0>
  410d37:	lea    rdi,[rip+0x146d2]        # 425410 <_IO_stdin_used@@Base+0x2410>
  410d3e:	mov    al,0x0
  410d40:	call   404070 <printf@plt>
  410d45:	mov    DWORD PTR [rbp-0x274],eax
  410d4b:	jmp    410fb5 <test_mixed_type_union@@Base+0xc15>
  410d50:	mov    eax,0x4
  410d55:	mov    edx,eax
  410d57:	mov    rdi,QWORD PTR [rbp-0x68]
  410d5b:	mov    rsi,QWORD PTR [rbp-0x60]
  410d5f:	call   412220 <test_mixed_type_union@@Base+0x1e80>
  410d64:	mov    BYTE PTR [rbp-0x120],al
  410d6a:	mov    QWORD PTR [rbp-0x118],rdx
  410d71:	mov    rdx,QWORD PTR [rbp-0x120]
  410d78:	mov    QWORD PTR [rbp-0x78],rdx
  410d7c:	mov    rdx,QWORD PTR [rbp-0x118]
  410d83:	mov    QWORD PTR [rbp-0x70],rdx
  410d87:	movzx  ecx,BYTE PTR [rbp-0x78]
  410d8b:	cmp    ecx,0x9
  410d8e:	je     410dad <test_mixed_type_union@@Base+0xa0d>
  410d94:	lea    rdi,[rip+0x146b4]        # 42544f <_IO_stdin_used@@Base+0x244f>
  410d9b:	mov    al,0x0
  410d9d:	call   404070 <printf@plt>
  410da2:	mov    DWORD PTR [rbp-0x278],eax
  410da8:	jmp    410fb5 <test_mixed_type_union@@Base+0xc15>
  410dad:	mov    eax,0x5
  410db2:	mov    edx,eax
  410db4:	mov    rdi,QWORD PTR [rbp-0x68]
  410db8:	mov    rsi,QWORD PTR [rbp-0x60]
  410dbc:	call   412220 <test_mixed_type_union@@Base+0x1e80>
  410dc1:	mov    BYTE PTR [rbp-0x130],al
  410dc7:	mov    QWORD PTR [rbp-0x128],rdx
  410dce:	mov    rdx,QWORD PTR [rbp-0x130]
  410dd5:	mov    QWORD PTR [rbp-0x78],rdx
  410dd9:	mov    rdx,QWORD PTR [rbp-0x128]
  410de0:	mov    QWORD PTR [rbp-0x70],rdx
  410de4:	movzx  ecx,BYTE PTR [rbp-0x78]
  410de8:	cmp    ecx,0x9
  410deb:	je     410e0a <test_mixed_type_union@@Base+0xa6a>
  410df1:	lea    rdi,[rip+0x14679]        # 425471 <_IO_stdin_used@@Base+0x2471>
  410df8:	mov    al,0x0
  410dfa:	call   404070 <printf@plt>
  410dff:	mov    DWORD PTR [rbp-0x27c],eax
  410e05:	jmp    410fb5 <test_mixed_type_union@@Base+0xc15>
  410e0a:	mov    eax,0x6
  410e0f:	mov    edx,eax
  410e11:	mov    rdi,QWORD PTR [rbp-0x68]
  410e15:	mov    rsi,QWORD PTR [rbp-0x60]
  410e19:	call   412220 <test_mixed_type_union@@Base+0x1e80>
  410e1e:	mov    BYTE PTR [rbp-0x140],al
  410e24:	mov    QWORD PTR [rbp-0x138],rdx
  410e2b:	mov    rdx,QWORD PTR [rbp-0x140]
  410e32:	mov    QWORD PTR [rbp-0x78],rdx
  410e36:	mov    rdx,QWORD PTR [rbp-0x138]
  410e3d:	mov    QWORD PTR [rbp-0x70],rdx
  410e41:	movzx  ecx,BYTE PTR [rbp-0x78]
  410e45:	cmp    ecx,0x9
  410e48:	je     410e67 <test_mixed_type_union@@Base+0xac7>
  410e4e:	lea    rdi,[rip+0x1463e]        # 425493 <_IO_stdin_used@@Base+0x2493>
  410e55:	mov    al,0x0
  410e57:	call   404070 <printf@plt>
  410e5c:	mov    DWORD PTR [rbp-0x280],eax
  410e62:	jmp    410fb5 <test_mixed_type_union@@Base+0xc15>
  410e67:	mov    eax,0x7
  410e6c:	mov    edx,eax
  410e6e:	mov    rdi,QWORD PTR [rbp-0x68]
  410e72:	mov    rsi,QWORD PTR [rbp-0x60]
  410e76:	call   412220 <test_mixed_type_union@@Base+0x1e80>
  410e7b:	mov    BYTE PTR [rbp-0x150],al
  410e81:	mov    QWORD PTR [rbp-0x148],rdx
  410e88:	mov    rdx,QWORD PTR [rbp-0x150]
  410e8f:	mov    QWORD PTR [rbp-0x78],rdx
  410e93:	mov    rdx,QWORD PTR [rbp-0x148]
  410e9a:	mov    QWORD PTR [rbp-0x70],rdx
  410e9e:	movzx  ecx,BYTE PTR [rbp-0x78]
  410ea2:	cmp    ecx,0x9
  410ea5:	je     410ec4 <test_mixed_type_union@@Base+0xb24>
  410eab:	lea    rdi,[rip+0x14605]        # 4254b7 <_IO_stdin_used@@Base+0x24b7>
  410eb2:	mov    al,0x0
  410eb4:	call   404070 <printf@plt>
  410eb9:	mov    DWORD PTR [rbp-0x284],eax
  410ebf:	jmp    410fb5 <test_mixed_type_union@@Base+0xc15>
  410ec4:	mov    eax,0x8
  410ec9:	mov    edx,eax
  410ecb:	mov    rdi,QWORD PTR [rbp-0x68]
  410ecf:	mov    rsi,QWORD PTR [rbp-0x60]
  410ed3:	call   412220 <test_mixed_type_union@@Base+0x1e80>
  410ed8:	mov    BYTE PTR [rbp-0x160],al
  410ede:	mov    QWORD PTR [rbp-0x158],rdx
  410ee5:	mov    rdx,QWORD PTR [rbp-0x160]
  410eec:	mov    QWORD PTR [rbp-0x78],rdx
  410ef0:	mov    rdx,QWORD PTR [rbp-0x158]
  410ef7:	mov    QWORD PTR [rbp-0x70],rdx
  410efb:	movzx  ecx,BYTE PTR [rbp-0x78]
  410eff:	cmp    ecx,0xb
  410f02:	je     410f21 <test_mixed_type_union@@Base+0xb81>
  410f08:	lea    rdi,[rip+0x145cb]        # 4254da <_IO_stdin_used@@Base+0x24da>
  410f0f:	mov    al,0x0
  410f11:	call   404070 <printf@plt>
  410f16:	mov    DWORD PTR [rbp-0x288],eax
  410f1c:	jmp    410fb5 <test_mixed_type_union@@Base+0xc15>
  410f21:	mov    eax,0x9
  410f26:	mov    edx,eax
  410f28:	mov    rdi,QWORD PTR [rbp-0x68]
  410f2c:	mov    rsi,QWORD PTR [rbp-0x60]
  410f30:	call   412220 <test_mixed_type_union@@Base+0x1e80>
  410f35:	mov    BYTE PTR [rbp-0x170],al
  410f3b:	mov    QWORD PTR [rbp-0x168],rdx
  410f42:	mov    rdx,QWORD PTR [rbp-0x170]
  410f49:	mov    QWORD PTR [rbp-0x78],rdx
  410f4d:	mov    rdx,QWORD PTR [rbp-0x168]
  410f54:	mov    QWORD PTR [rbp-0x70],rdx
  410f58:	movzx  ecx,BYTE PTR [rbp-0x78]
  410f5c:	cmp    ecx,0xb
  410f5f:	je     410f7e <test_mixed_type_union@@Base+0xbde>
  410f65:	lea    rdi,[rip+0x1456e]        # 4254da <_IO_stdin_used@@Base+0x24da>
  410f6c:	mov    al,0x0
  410f6e:	call   404070 <printf@plt>
  410f73:	mov    DWORD PTR [rbp-0x28c],eax
  410f79:	jmp    410fb5 <test_mixed_type_union@@Base+0xc15>
  410f7e:	mov    rdi,QWORD PTR [rbp-0x68]
  410f82:	mov    rsi,QWORD PTR [rbp-0x60]
  410f86:	call   412440 <test_mixed_type_union@@Base+0x20a0>
  410f8b:	cmp    rax,0xa
  410f8f:	je     410fae <test_mixed_type_union@@Base+0xc0e>
  410f95:	lea    rdi,[rip+0x1456a]        # 425506 <_IO_stdin_used@@Base+0x2506>
  410f9c:	mov    al,0x0
  410f9e:	call   404070 <printf@plt>
  410fa3:	mov    DWORD PTR [rbp-0x290],eax
  410fa9:	jmp    410fb5 <test_mixed_type_union@@Base+0xc15>
  410fae:	mov    DWORD PTR [rbp-0x2c],0x0
  410fb5:	mov    rdi,QWORD PTR [rbp-0x18]
  410fb9:	call   41eda0 <flatcc_builder_aligned_free@@Base>
  410fbe:	mov    eax,DWORD PTR [rbp-0x2c]
  410fc1:	mov    DWORD PTR [rbp-0x4],eax
  410fc4:	mov    eax,DWORD PTR [rbp-0x4]
  410fc7:	add    rsp,0x290
  410fce:	pop    rbp
  410fcf:	ret    
  410fd0:	push   rbp
  410fd1:	mov    rbp,rsp
  410fd4:	sub    rsp,0x10
  410fd8:	mov    QWORD PTR [rbp-0x8],rdi
  410fdc:	mov    rdi,QWORD PTR [rbp-0x8]
  410fe0:	lea    rsi,[rip+0x12199]        # 423180 <_IO_stdin_used@@Base+0x180>
  410fe7:	call   405bf0 <test_empty_monster@@Base+0x160>
  410fec:	cmp    eax,0x0
  410fef:	je     411002 <test_mixed_type_union@@Base+0xc62>
  410ff5:	mov    eax,0xffffffff
  410ffa:	mov    DWORD PTR [rbp-0xc],eax
  410ffd:	jmp    41100e <test_mixed_type_union@@Base+0xc6e>
  411002:	mov    rdi,QWORD PTR [rbp-0x8]
  411006:	call   4183c0 <main@@Base+0x3fd0>
  41100b:	mov    DWORD PTR [rbp-0xc],eax
  41100e:	mov    eax,DWORD PTR [rbp-0xc]
  411011:	add    rsp,0x10
  411015:	pop    rbp
  411016:	ret    
  411017:	nop    WORD PTR [rax+rax*1+0x0]
  411020:	push   rbp
  411021:	mov    rbp,rsp
  411024:	sub    rsp,0x30
  411028:	mov    QWORD PTR [rbp-0x10],rdi
  41102c:	mov    DWORD PTR [rbp-0x14],esi
  41102f:	mov    rdi,QWORD PTR [rbp-0x10]
  411033:	call   4183e0 <main@@Base+0x3ff0>
  411038:	mov    QWORD PTR [rbp-0x20],rax
  41103c:	cmp    QWORD PTR [rbp-0x20],0x0
  411041:	jne    411053 <test_mixed_type_union@@Base+0xcb3>
  411047:	mov    DWORD PTR [rbp-0x4],0x0
  41104e:	jmp    41106f <test_mixed_type_union@@Base+0xccf>
  411053:	mov    rdi,QWORD PTR [rbp-0x20]
  411057:	mov    esi,DWORD PTR [rbp-0x14]
  41105a:	call   418410 <main@@Base+0x4020>
  41105f:	mov    rdi,QWORD PTR [rbp-0x10]
  411063:	mov    QWORD PTR [rbp-0x28],rax
  411067:	call   418440 <main@@Base+0x4050>
  41106c:	mov    DWORD PTR [rbp-0x4],eax
  41106f:	mov    eax,DWORD PTR [rbp-0x4]
  411072:	add    rsp,0x30
  411076:	pop    rbp
  411077:	ret    
  411078:	nop    DWORD PTR [rax+rax*1+0x0]
  411080:	push   rbp
  411081:	mov    rbp,rsp
  411084:	sub    rsp,0x30
  411088:	mov    ax,si
  41108b:	mov    QWORD PTR [rbp-0x10],rdi
  41108f:	mov    WORD PTR [rbp-0x12],ax
  411093:	mov    rdi,QWORD PTR [rbp-0x10]
  411097:	call   418460 <main@@Base+0x4070>
  41109c:	mov    QWORD PTR [rbp-0x20],rax
  4110a0:	cmp    QWORD PTR [rbp-0x20],0x0
  4110a5:	jne    4110b7 <test_mixed_type_union@@Base+0xd17>
  4110ab:	mov    DWORD PTR [rbp-0x4],0x0
  4110b2:	jmp    4110d4 <test_mixed_type_union@@Base+0xd34>
  4110b7:	mov    rdi,QWORD PTR [rbp-0x20]
  4110bb:	movzx  esi,WORD PTR [rbp-0x12]
  4110bf:	call   418490 <main@@Base+0x40a0>
  4110c4:	mov    rdi,QWORD PTR [rbp-0x10]
  4110c8:	mov    QWORD PTR [rbp-0x28],rax
  4110cc:	call   4184d0 <main@@Base+0x40e0>
  4110d1:	mov    DWORD PTR [rbp-0x4],eax
  4110d4:	mov    eax,DWORD PTR [rbp-0x4]
  4110d7:	add    rsp,0x30
  4110db:	pop    rbp
  4110dc:	ret    
  4110dd:	nop    DWORD PTR [rax]
  4110e0:	push   rbp
  4110e1:	mov    rbp,rsp
  4110e4:	mov    DWORD PTR [rbp-0xc],edi
  4110e7:	mov    BYTE PTR [rbp-0x8],0x8
  4110eb:	mov    edi,DWORD PTR [rbp-0xc]
  4110ee:	mov    DWORD PTR [rbp-0x4],edi
  4110f1:	mov    rax,QWORD PTR [rbp-0x8]
  4110f5:	pop    rbp
  4110f6:	ret    
  4110f7:	nop    WORD PTR [rax+rax*1+0x0]
  411100:	push   rbp
  411101:	mov    rbp,rsp
  411104:	sub    rsp,0x30
  411108:	mov    ax,si
  41110b:	mov    QWORD PTR [rbp-0x8],rdi
  41110f:	mov    WORD PTR [rbp-0xa],ax
  411113:	mov    rdi,QWORD PTR [rbp-0x8]
  411117:	movzx  esi,WORD PTR [rbp-0xa]
  41111b:	call   411080 <test_mixed_type_union@@Base+0xce0>
  411120:	mov    DWORD PTR [rbp-0x10],eax
  411123:	cmp    DWORD PTR [rbp-0x10],0x0
  411127:	je     411158 <test_mixed_type_union@@Base+0xdb8>
  41112d:	mov    rdi,QWORD PTR [rbp-0x8]
  411131:	mov    eax,DWORD PTR [rbp-0x10]
  411134:	mov    QWORD PTR [rbp-0x20],rdi
  411138:	mov    edi,eax
  41113a:	call   4110e0 <test_mixed_type_union@@Base+0xd40>
  41113f:	mov    QWORD PTR [rbp-0x18],rax
  411143:	mov    rsi,QWORD PTR [rbp-0x18]
  411147:	mov    rdi,QWORD PTR [rbp-0x20]
  41114b:	call   4184f0 <main@@Base+0x4100>
  411150:	mov    DWORD PTR [rbp-0x24],eax
  411153:	jmp    411165 <test_mixed_type_union@@Base+0xdc5>
  411158:	mov    eax,0xffffffff
  41115d:	mov    DWORD PTR [rbp-0x24],eax
  411160:	jmp    411165 <test_mixed_type_union@@Base+0xdc5>
  411165:	mov    eax,DWORD PTR [rbp-0x24]
  411168:	add    rsp,0x30
  41116c:	pop    rbp
  41116d:	ret    
  41116e:	xchg   ax,ax
  411170:	push   rbp
  411171:	mov    rbp,rsp
  411174:	sub    rsp,0x20
  411178:	mov    QWORD PTR [rbp-0x8],rdi
  41117c:	mov    DWORD PTR [rbp-0xc],esi
  41117f:	mov    rdi,QWORD PTR [rbp-0x8]
  411183:	mov    esi,DWORD PTR [rbp-0xc]
  411186:	mov    QWORD PTR [rbp-0x20],rdi
  41118a:	mov    edi,esi
  41118c:	call   4110e0 <test_mixed_type_union@@Base+0xd40>
  411191:	mov    QWORD PTR [rbp-0x18],rax
  411195:	mov    rsi,QWORD PTR [rbp-0x18]
  411199:	mov    rdi,QWORD PTR [rbp-0x20]
  41119d:	call   4185a0 <main@@Base+0x41b0>
  4111a2:	add    rsp,0x20
  4111a6:	pop    rbp
  4111a7:	ret    
  4111a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4111b0:	push   rbp
  4111b1:	mov    rbp,rsp
  4111b4:	sub    rsp,0x20
  4111b8:	mov    QWORD PTR [rbp-0x10],rdi
  4111bc:	mov    DWORD PTR [rbp-0x14],esi
  4111bf:	mov    rdi,QWORD PTR [rbp-0x10]
  4111c3:	call   418660 <main@@Base+0x4270>
  4111c8:	cmp    eax,0x0
  4111cb:	jne    4111e6 <test_mixed_type_union@@Base+0xe46>
  4111d1:	mov    rdi,QWORD PTR [rbp-0x10]
  4111d5:	mov    esi,DWORD PTR [rbp-0x14]
  4111d8:	call   418680 <main@@Base+0x4290>
  4111dd:	cmp    eax,0x0
  4111e0:	je     4111f2 <test_mixed_type_union@@Base+0xe52>
  4111e6:	mov    DWORD PTR [rbp-0x4],0x0
  4111ed:	jmp    4111fe <test_mixed_type_union@@Base+0xe5e>
  4111f2:	mov    rdi,QWORD PTR [rbp-0x10]
  4111f6:	call   418700 <main@@Base+0x4310>
  4111fb:	mov    DWORD PTR [rbp-0x4],eax
  4111fe:	mov    eax,DWORD PTR [rbp-0x4]
  411201:	add    rsp,0x20
  411205:	pop    rbp
  411206:	ret    
  411207:	nop    WORD PTR [rax+rax*1+0x0]
  411210:	push   rbp
  411211:	mov    rbp,rsp
  411214:	sub    rsp,0x20
  411218:	mov    QWORD PTR [rbp-0x8],rdi
  41121c:	mov    DWORD PTR [rbp-0xc],esi
  41121f:	mov    rdi,QWORD PTR [rbp-0x8]
  411223:	mov    esi,DWORD PTR [rbp-0xc]
  411226:	mov    QWORD PTR [rbp-0x20],rdi
  41122a:	mov    edi,esi
  41122c:	call   418820 <main@@Base+0x4430>
  411231:	mov    QWORD PTR [rbp-0x18],rax
  411235:	mov    rsi,QWORD PTR [rbp-0x18]
  411239:	mov    rdi,QWORD PTR [rbp-0x20]
  41123d:	call   418760 <main@@Base+0x4370>
  411242:	add    rsp,0x20
  411246:	pop    rbp
  411247:	ret    
  411248:	nop    DWORD PTR [rax+rax*1+0x0]
  411250:	push   rbp
  411251:	mov    rbp,rsp
  411254:	sub    rsp,0x20
  411258:	mov    QWORD PTR [rbp-0x8],rdi
  41125c:	mov    QWORD PTR [rbp-0x10],rsi
  411260:	mov    rdi,QWORD PTR [rbp-0x8]
  411264:	mov    rsi,QWORD PTR [rbp-0x8]
  411268:	mov    rax,QWORD PTR [rbp-0x10]
  41126c:	mov    QWORD PTR [rbp-0x18],rdi
  411270:	mov    rdi,rsi
  411273:	mov    rsi,rax
  411276:	call   41e260 <flatcc_builder_create_string_str@@Base>
  41127b:	mov    rdi,QWORD PTR [rbp-0x18]
  41127f:	mov    esi,eax
  411281:	call   418840 <main@@Base+0x4450>
  411286:	add    rsp,0x20
  41128a:	pop    rbp
  41128b:	ret    
  41128c:	nop    DWORD PTR [rax+0x0]
  411290:	push   rbp
  411291:	mov    rbp,rsp
  411294:	sub    rsp,0x10
  411298:	mov    QWORD PTR [rbp-0x8],rdi
  41129c:	mov    rdi,QWORD PTR [rbp-0x8]
  4112a0:	call   41dbb0 <flatcc_builder_start_union_vector@@Base>
  4112a5:	add    rsp,0x10
  4112a9:	pop    rbp
  4112aa:	ret    
  4112ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4112b0:	push   rbp
  4112b1:	mov    rbp,rsp
  4112b4:	sub    rsp,0x10
  4112b8:	mov    QWORD PTR [rbp-0x8],rsi
  4112bc:	mov    QWORD PTR [rbp-0x10],rdi
  4112c0:	mov    rdi,QWORD PTR [rbp-0x10]
  4112c4:	mov    rsi,QWORD PTR [rbp-0x8]
  4112c8:	call   41df10 <flatcc_builder_union_vector_push@@Base>
  4112cd:	add    rsp,0x10
  4112d1:	pop    rbp
  4112d2:	ret    
  4112d3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4112dd:	nop    DWORD PTR [rax]
  4112e0:	push   rbp
  4112e1:	mov    rbp,rsp
  4112e4:	sub    rsp,0x20
  4112e8:	mov    QWORD PTR [rbp-0x8],rdi
  4112ec:	mov    DWORD PTR [rbp-0xc],esi
  4112ef:	mov    rdi,QWORD PTR [rbp-0x8]
  4112f3:	mov    esi,DWORD PTR [rbp-0xc]
  4112f6:	mov    QWORD PTR [rbp-0x20],rdi
  4112fa:	mov    edi,esi
  4112fc:	call   418820 <main@@Base+0x4430>
  411301:	mov    QWORD PTR [rbp-0x18],rax
  411305:	mov    rsi,QWORD PTR [rbp-0x18]
  411309:	mov    rdi,QWORD PTR [rbp-0x20]
  41130d:	call   411370 <test_mixed_type_union@@Base+0xfd0>
  411312:	add    rsp,0x20
  411316:	pop    rbp
  411317:	ret    
  411318:	nop    DWORD PTR [rax+rax*1+0x0]
  411320:	push   rbp
  411321:	mov    rbp,rsp
  411324:	sub    rsp,0x20
  411328:	mov    QWORD PTR [rbp-0x8],rdi
  41132c:	mov    DWORD PTR [rbp-0xc],esi
  41132f:	mov    rdi,QWORD PTR [rbp-0x8]
  411333:	mov    rax,QWORD PTR [rbp-0x8]
  411337:	mov    esi,DWORD PTR [rbp-0xc]
  41133a:	mov    QWORD PTR [rbp-0x20],rdi
  41133e:	mov    rdi,rax
  411341:	call   4111b0 <test_mixed_type_union@@Base+0xe10>
  411346:	mov    edi,eax
  411348:	call   418820 <main@@Base+0x4430>
  41134d:	mov    QWORD PTR [rbp-0x18],rax
  411351:	mov    rsi,QWORD PTR [rbp-0x18]
  411355:	mov    rdi,QWORD PTR [rbp-0x20]
  411359:	call   411370 <test_mixed_type_union@@Base+0xfd0>
  41135e:	add    rsp,0x20
  411362:	pop    rbp
  411363:	ret    
  411364:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41136e:	xchg   ax,ax
  411370:	push   rbp
  411371:	mov    rbp,rsp
  411374:	sub    rsp,0x10
  411378:	mov    QWORD PTR [rbp-0x8],rsi
  41137c:	mov    QWORD PTR [rbp-0x10],rdi
  411380:	mov    rdi,QWORD PTR [rbp-0x10]
  411384:	mov    rsi,QWORD PTR [rbp-0x8]
  411388:	call   41df10 <flatcc_builder_union_vector_push@@Base>
  41138d:	add    rsp,0x10
  411391:	pop    rbp
  411392:	ret    
  411393:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41139d:	nop    DWORD PTR [rax]
  4113a0:	push   rbp
  4113a1:	mov    rbp,rsp
  4113a4:	mov    DWORD PTR [rbp-0xc],edi
  4113a7:	mov    BYTE PTR [rbp-0x8],0xb
  4113ab:	mov    edi,DWORD PTR [rbp-0xc]
  4113ae:	mov    DWORD PTR [rbp-0x4],edi
  4113b1:	mov    rax,QWORD PTR [rbp-0x8]
  4113b5:	pop    rbp
  4113b6:	ret    
  4113b7:	nop    WORD PTR [rax+rax*1+0x0]
  4113c0:	push   rbp
  4113c1:	mov    rbp,rsp
  4113c4:	sub    rsp,0x20
  4113c8:	mov    QWORD PTR [rbp-0x8],rdi
  4113cc:	mov    DWORD PTR [rbp-0xc],esi
  4113cf:	mov    rdi,QWORD PTR [rbp-0x8]
  4113d3:	mov    esi,DWORD PTR [rbp-0xc]
  4113d6:	mov    QWORD PTR [rbp-0x20],rdi
  4113da:	mov    edi,esi
  4113dc:	call   418940 <main@@Base+0x4550>
  4113e1:	mov    QWORD PTR [rbp-0x18],rax
  4113e5:	mov    rsi,QWORD PTR [rbp-0x18]
  4113e9:	mov    rdi,QWORD PTR [rbp-0x20]
  4113ed:	call   411370 <test_mixed_type_union@@Base+0xfd0>
  4113f2:	add    rsp,0x20
  4113f6:	pop    rbp
  4113f7:	ret    
  4113f8:	nop    DWORD PTR [rax+rax*1+0x0]
  411400:	push   rbp
  411401:	mov    rbp,rsp
  411404:	sub    rsp,0x10
  411408:	mov    QWORD PTR [rbp-0x8],rdi
  41140c:	mov    rdi,QWORD PTR [rbp-0x8]
  411410:	call   4183e0 <main@@Base+0x3ff0>
  411415:	add    rsp,0x10
  411419:	pop    rbp
  41141a:	ret    
  41141b:	nop    DWORD PTR [rax+rax*1+0x0]
  411420:	push   rbp
  411421:	mov    rbp,rsp
  411424:	sub    rsp,0x20
  411428:	mov    QWORD PTR [rbp-0x8],rdi
  41142c:	mov    rdi,QWORD PTR [rbp-0x8]
  411430:	mov    rax,QWORD PTR [rbp-0x8]
  411434:	mov    QWORD PTR [rbp-0x18],rdi
  411438:	mov    rdi,rax
  41143b:	call   418960 <main@@Base+0x4570>
  411440:	mov    edi,eax
  411442:	call   418940 <main@@Base+0x4550>
  411447:	mov    QWORD PTR [rbp-0x10],rax
  41144b:	mov    rsi,QWORD PTR [rbp-0x10]
  41144f:	mov    rdi,QWORD PTR [rbp-0x18]
  411453:	call   411370 <test_mixed_type_union@@Base+0xfd0>
  411458:	add    rsp,0x20
  41145c:	pop    rbp
  41145d:	ret    
  41145e:	xchg   ax,ax
  411460:	push   rbp
  411461:	mov    rbp,rsp
  411464:	sub    rsp,0x20
  411468:	mov    QWORD PTR [rbp-0x8],rdi
  41146c:	mov    DWORD PTR [rbp-0xc],esi
  41146f:	mov    rdi,QWORD PTR [rbp-0x8]
  411473:	mov    rax,QWORD PTR [rbp-0x8]
  411477:	mov    esi,DWORD PTR [rbp-0xc]
  41147a:	mov    QWORD PTR [rbp-0x20],rdi
  41147e:	mov    rdi,rax
  411481:	call   411020 <test_mixed_type_union@@Base+0xc80>
  411486:	mov    edi,eax
  411488:	call   418940 <main@@Base+0x4550>
  41148d:	mov    QWORD PTR [rbp-0x18],rax
  411491:	mov    rsi,QWORD PTR [rbp-0x18]
  411495:	mov    rdi,QWORD PTR [rbp-0x20]
  411499:	call   411370 <test_mixed_type_union@@Base+0xfd0>
  41149e:	add    rsp,0x20
  4114a2:	pop    rbp
  4114a3:	ret    
  4114a4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4114ae:	xchg   ax,ax
  4114b0:	push   rbp
  4114b1:	mov    rbp,rsp
  4114b4:	sub    rsp,0x20
  4114b8:	mov    QWORD PTR [rbp-0x8],rdi
  4114bc:	mov    DWORD PTR [rbp-0xc],esi
  4114bf:	mov    rdi,QWORD PTR [rbp-0x8]
  4114c3:	mov    esi,DWORD PTR [rbp-0xc]
  4114c6:	mov    QWORD PTR [rbp-0x20],rdi
  4114ca:	mov    edi,esi
  4114cc:	call   4113a0 <test_mixed_type_union@@Base+0x1000>
  4114d1:	mov    QWORD PTR [rbp-0x18],rax
  4114d5:	mov    rsi,QWORD PTR [rbp-0x18]
  4114d9:	mov    rdi,QWORD PTR [rbp-0x20]
  4114dd:	call   411370 <test_mixed_type_union@@Base+0xfd0>
  4114e2:	add    rsp,0x20
  4114e6:	pop    rbp
  4114e7:	ret    
  4114e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4114f0:	push   rbp
  4114f1:	mov    rbp,rsp
  4114f4:	sub    rsp,0x20
  4114f8:	mov    QWORD PTR [rbp-0x8],rdi
  4114fc:	mov    QWORD PTR [rbp-0x10],rsi
  411500:	mov    rdi,QWORD PTR [rbp-0x8]
  411504:	mov    rsi,QWORD PTR [rbp-0x8]
  411508:	mov    rax,QWORD PTR [rbp-0x10]
  41150c:	mov    QWORD PTR [rbp-0x20],rdi
  411510:	mov    rdi,rsi
  411513:	mov    rsi,rax
  411516:	call   40a980 <gen_monster@@Base+0xe40>
  41151b:	mov    edi,eax
  41151d:	call   4113a0 <test_mixed_type_union@@Base+0x1000>
  411522:	mov    QWORD PTR [rbp-0x18],rax
  411526:	mov    rsi,QWORD PTR [rbp-0x18]
  41152a:	mov    rdi,QWORD PTR [rbp-0x20]
  41152e:	call   411370 <test_mixed_type_union@@Base+0xfd0>
  411533:	add    rsp,0x20
  411537:	pop    rbp
  411538:	ret    
  411539:	nop    DWORD PTR [rax+0x0]
  411540:	push   rbp
  411541:	mov    rbp,rsp
  411544:	sub    rsp,0x20
  411548:	mov    QWORD PTR [rbp-0x8],rdi
  41154c:	mov    rdi,QWORD PTR [rbp-0x8]
  411550:	mov    rax,QWORD PTR [rbp-0x8]
  411554:	mov    QWORD PTR [rbp-0x18],rdi
  411558:	mov    rdi,rax
  41155b:	call   41dc30 <flatcc_builder_end_union_vector@@Base>
  411560:	mov    QWORD PTR [rbp-0x10],rax
  411564:	mov    rsi,QWORD PTR [rbp-0x10]
  411568:	mov    rdi,QWORD PTR [rbp-0x18]
  41156c:	call   418980 <main@@Base+0x4590>
  411571:	add    rsp,0x20
  411575:	pop    rbp
  411576:	ret    
  411577:	nop    WORD PTR [rax+rax*1+0x0]
  411580:	push   rbp
  411581:	mov    rbp,rsp
  411584:	sub    rsp,0x10
  411588:	mov    QWORD PTR [rbp-0x8],rdi
  41158c:	mov    rdi,QWORD PTR [rbp-0x8]
  411590:	mov    rax,QWORD PTR [rbp-0x8]
  411594:	mov    QWORD PTR [rbp-0x10],rdi
  411598:	mov    rdi,rax
  41159b:	call   418a30 <main@@Base+0x4640>
  4115a0:	mov    rdi,QWORD PTR [rbp-0x10]
  4115a4:	mov    esi,eax
  4115a6:	call   405ce0 <test_empty_monster@@Base+0x250>
  4115ab:	add    rsp,0x10
  4115af:	pop    rbp
  4115b0:	ret    
  4115b1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4115bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4115c0:	push   rbp
  4115c1:	mov    rbp,rsp
  4115c4:	sub    rsp,0x10
  4115c8:	mov    QWORD PTR [rbp-0x8],rdi
  4115cc:	mov    QWORD PTR [rbp-0x10],rsi
  4115d0:	mov    rdi,QWORD PTR [rbp-0x8]
  4115d4:	mov    rsi,QWORD PTR [rbp-0x10]
  4115d8:	lea    rdx,[rip+0x11ba1]        # 423180 <_IO_stdin_used@@Base+0x180>
  4115df:	lea    rcx,[rip+0x4f1a]        # 416500 <main@@Base+0x2110>
  4115e6:	call   4213a0 <flatcc_verify_table_as_root@@Base>
  4115eb:	add    rsp,0x10
  4115ef:	pop    rbp
  4115f0:	ret    
  4115f1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4115fb:	nop    DWORD PTR [rax+rax*1+0x0]
  411600:	push   rbp
  411601:	mov    rbp,rsp
  411604:	sub    rsp,0x20
  411608:	mov    QWORD PTR [rbp-0x8],rdi
  41160c:	lea    rdi,[rip+0x11b6d]        # 423180 <_IO_stdin_used@@Base+0x180>
  411613:	mov    QWORD PTR [rbp-0x10],rdi
  411617:	cmp    QWORD PTR [rbp-0x8],0x0
  41161c:	je     411638 <test_mixed_type_union@@Base+0x1298>
  411622:	mov    rdi,QWORD PTR [rbp-0x8]
  411626:	mov    rsi,QWORD PTR [rbp-0x10]
  41162a:	call   406a20 <test_typed_table_with_emptystruct@@Base+0x470>
  41162f:	cmp    eax,0x0
  411632:	jne    411645 <test_mixed_type_union@@Base+0x12a5>
  411638:	xor    eax,eax
  41163a:	mov    ecx,eax
  41163c:	mov    QWORD PTR [rbp-0x18],rcx
  411640:	jmp    411665 <test_mixed_type_union@@Base+0x12c5>
  411645:	mov    rax,QWORD PTR [rbp-0x8]
  411649:	mov    rdi,QWORD PTR [rbp-0x8]
  41164d:	mov    QWORD PTR [rbp-0x20],rax
  411651:	call   414930 <main@@Base+0x540>
  411656:	mov    eax,eax
  411658:	mov    edi,eax
  41165a:	mov    rcx,QWORD PTR [rbp-0x20]
  41165e:	add    rcx,rdi
  411661:	mov    QWORD PTR [rbp-0x18],rcx
  411665:	mov    rax,QWORD PTR [rbp-0x18]
  411669:	add    rsp,0x20
  41166d:	pop    rbp
  41166e:	ret    
  41166f:	nop
  411670:	push   rbp
  411671:	mov    rbp,rsp
  411674:	sub    rsp,0x20
  411678:	mov    QWORD PTR [rbp-0x8],rdi
  41167c:	mov    WORD PTR [rbp-0xa],0x0
  411682:	cmp    QWORD PTR [rbp-0x8],0x0
  411687:	je     4116a1 <test_mixed_type_union@@Base+0x1301>
  41168d:	mov    al,0x1
  41168f:	test   al,0x1
  411691:	jne    41169c <test_mixed_type_union@@Base+0x12fc>
  411697:	jmp    4116a1 <test_mixed_type_union@@Base+0x1301>
  41169c:	jmp    4116c0 <test_mixed_type_union@@Base+0x1320>
  4116a1:	lea    rdi,[rip+0x143f0]        # 425a98 <_IO_stdin_used@@Base+0x2a98>
  4116a8:	lea    rsi,[rip+0x1440f]        # 425abe <_IO_stdin_used@@Base+0x2abe>
  4116af:	mov    edx,0x333
  4116b4:	lea    rcx,[rip+0x15e3a]        # 4274f5 <_IO_stdin_used@@Base+0x44f5>
  4116bb:	call   404090 <__assert_fail@plt>
  4116c0:	mov    WORD PTR [rbp-0xc],0x1
  4116c6:	mov    rax,QWORD PTR [rbp-0x8]
  4116ca:	mov    rcx,QWORD PTR [rbp-0x8]
  4116ce:	mov    rdi,rcx
  4116d1:	mov    QWORD PTR [rbp-0x20],rax
  4116d5:	call   414960 <main@@Base+0x570>
  4116da:	xor    edx,edx
  4116dc:	mov    ecx,edx
  4116de:	movsxd rdi,eax
  4116e1:	sub    rcx,rdi
  4116e4:	mov    rdi,QWORD PTR [rbp-0x20]
  4116e8:	add    rdi,rcx
  4116eb:	mov    QWORD PTR [rbp-0x18],rdi
  4116ef:	mov    rcx,QWORD PTR [rbp-0x18]
  4116f3:	mov    rdi,rcx
  4116f6:	call   414980 <main@@Base+0x590>
  4116fb:	movzx  edx,ax
  4116fe:	mov    ecx,edx
  411700:	movzx  edx,WORD PTR [rbp-0xc]
  411704:	add    edx,0x3
  411707:	movsxd rdi,edx
  41170a:	shl    rdi,0x1
  41170e:	cmp    rcx,rdi
  411711:	jb     411739 <test_mixed_type_union@@Base+0x1399>
  411717:	mov    rax,QWORD PTR [rbp-0x18]
  41171b:	movzx  ecx,WORD PTR [rbp-0xc]
  41171f:	movsxd rdx,ecx
  411722:	shl    rdx,0x1
  411726:	add    rax,rdx
  411729:	add    rax,0x4
  41172d:	mov    rdi,rax
  411730:	call   414980 <main@@Base+0x590>
  411735:	mov    WORD PTR [rbp-0xa],ax
  411739:	movzx  eax,WORD PTR [rbp-0xa]
  41173d:	cmp    eax,0x0
  411740:	setne  cl
  411743:	and    cl,0x1
  411746:	movzx  eax,cl
  411749:	add    rsp,0x20
  41174d:	pop    rbp
  41174e:	ret    
  41174f:	nop
  411750:	push   rbp
  411751:	mov    rbp,rsp
  411754:	sub    rsp,0x20
  411758:	mov    QWORD PTR [rbp-0x8],rdi
  41175c:	mov    WORD PTR [rbp-0xa],0x0
  411762:	cmp    QWORD PTR [rbp-0x8],0x0
  411767:	je     411781 <test_mixed_type_union@@Base+0x13e1>
  41176d:	mov    al,0x1
  41176f:	test   al,0x1
  411771:	jne    41177c <test_mixed_type_union@@Base+0x13dc>
  411777:	jmp    411781 <test_mixed_type_union@@Base+0x13e1>
  41177c:	jmp    4117a0 <test_mixed_type_union@@Base+0x1400>
  411781:	lea    rdi,[rip+0x14310]        # 425a98 <_IO_stdin_used@@Base+0x2a98>
  411788:	lea    rsi,[rip+0x1432f]        # 425abe <_IO_stdin_used@@Base+0x2abe>
  41178f:	mov    edx,0x337
  411794:	lea    rcx,[rip+0x15d9d]        # 427538 <_IO_stdin_used@@Base+0x4538>
  41179b:	call   404090 <__assert_fail@plt>
  4117a0:	mov    WORD PTR [rbp-0xc],0x9
  4117a6:	mov    rax,QWORD PTR [rbp-0x8]
  4117aa:	mov    rcx,QWORD PTR [rbp-0x8]
  4117ae:	mov    rdi,rcx
  4117b1:	mov    QWORD PTR [rbp-0x20],rax
  4117b5:	call   414960 <main@@Base+0x570>
  4117ba:	xor    edx,edx
  4117bc:	mov    ecx,edx
  4117be:	movsxd rdi,eax
  4117c1:	sub    rcx,rdi
  4117c4:	mov    rdi,QWORD PTR [rbp-0x20]
  4117c8:	add    rdi,rcx
  4117cb:	mov    QWORD PTR [rbp-0x18],rdi
  4117cf:	mov    rcx,QWORD PTR [rbp-0x18]
  4117d3:	mov    rdi,rcx
  4117d6:	call   414980 <main@@Base+0x590>
  4117db:	movzx  edx,ax
  4117de:	mov    ecx,edx
  4117e0:	movzx  edx,WORD PTR [rbp-0xc]
  4117e4:	add    edx,0x3
  4117e7:	movsxd rdi,edx
  4117ea:	shl    rdi,0x1
  4117ee:	cmp    rcx,rdi
  4117f1:	jb     411819 <test_mixed_type_union@@Base+0x1479>
  4117f7:	mov    rax,QWORD PTR [rbp-0x18]
  4117fb:	movzx  ecx,WORD PTR [rbp-0xc]
  4117ff:	movsxd rdx,ecx
  411802:	shl    rdx,0x1
  411806:	add    rax,rdx
  411809:	add    rax,0x4
  41180d:	mov    rdi,rax
  411810:	call   414980 <main@@Base+0x590>
  411815:	mov    WORD PTR [rbp-0xa],ax
  411819:	movzx  eax,WORD PTR [rbp-0xa]
  41181d:	cmp    eax,0x0
  411820:	setne  cl
  411823:	and    cl,0x1
  411826:	movzx  eax,cl
  411829:	add    rsp,0x20
  41182d:	pop    rbp
  41182e:	ret    
  41182f:	nop
  411830:	push   rbp
  411831:	mov    rbp,rsp
  411834:	sub    rsp,0x20
  411838:	xor    esi,esi
  41183a:	mov    eax,0x10
  41183f:	mov    edx,eax
  411841:	mov    QWORD PTR [rbp-0x18],rdi
  411845:	lea    rdi,[rbp-0x10]
  411849:	call   4040a0 <memset@plt>
  41184e:	mov    rdi,QWORD PTR [rbp-0x18]
  411852:	call   418a90 <main@@Base+0x46a0>
  411857:	mov    BYTE PTR [rbp-0x10],al
  41185a:	movzx  esi,BYTE PTR [rbp-0x10]
  41185e:	cmp    esi,0x0
  411861:	jne    41186c <test_mixed_type_union@@Base+0x14cc>
  411867:	jmp    411879 <test_mixed_type_union@@Base+0x14d9>
  41186c:	mov    rdi,QWORD PTR [rbp-0x18]
  411870:	call   418ba0 <main@@Base+0x47b0>
  411875:	mov    QWORD PTR [rbp-0x8],rax
  411879:	mov    al,BYTE PTR [rbp-0x10]
  41187c:	mov    rdx,QWORD PTR [rbp-0x8]
  411880:	add    rsp,0x20
  411884:	pop    rbp
  411885:	ret    
  411886:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411890:	push   rbp
  411891:	mov    rbp,rsp
  411894:	sub    rsp,0x10
  411898:	mov    QWORD PTR [rbp-0x8],rdi
  41189c:	cmp    QWORD PTR [rbp-0x8],0x0
  4118a1:	je     4118be <test_mixed_type_union@@Base+0x151e>
  4118a7:	mov    rax,QWORD PTR [rbp-0x8]
  4118ab:	mov    rdi,rax
  4118ae:	call   415860 <main@@Base+0x1470>
  4118b3:	movzx  ecx,ax
  4118b6:	mov    DWORD PTR [rbp-0xc],ecx
  4118b9:	jmp    4118c8 <test_mixed_type_union@@Base+0x1528>
  4118be:	xor    eax,eax
  4118c0:	mov    DWORD PTR [rbp-0xc],eax
  4118c3:	jmp    4118c8 <test_mixed_type_union@@Base+0x1528>
  4118c8:	mov    eax,DWORD PTR [rbp-0xc]
  4118cb:	mov    cx,ax
  4118ce:	movzx  eax,cx
  4118d1:	add    rsp,0x10
  4118d5:	pop    rbp
  4118d6:	ret    
  4118d7:	nop    WORD PTR [rax+rax*1+0x0]
  4118e0:	push   rbp
  4118e1:	mov    rbp,rsp
  4118e4:	sub    rsp,0x30
  4118e8:	mov    QWORD PTR [rbp-0x8],rdi
  4118ec:	mov    WORD PTR [rbp-0xa],0x0
  4118f2:	cmp    QWORD PTR [rbp-0x8],0x0
  4118f7:	je     411911 <test_mixed_type_union@@Base+0x1571>
  4118fd:	mov    al,0x1
  4118ff:	test   al,0x1
  411901:	jne    41190c <test_mixed_type_union@@Base+0x156c>
  411907:	jmp    411911 <test_mixed_type_union@@Base+0x1571>
  41190c:	jmp    411930 <test_mixed_type_union@@Base+0x1590>
  411911:	lea    rdi,[rip+0x14180]        # 425a98 <_IO_stdin_used@@Base+0x2a98>
  411918:	lea    rsi,[rip+0x1419f]        # 425abe <_IO_stdin_used@@Base+0x2abe>
  41191f:	mov    edx,0x336
  411924:	lea    rcx,[rip+0x15cee]        # 427619 <_IO_stdin_used@@Base+0x4619>
  41192b:	call   404090 <__assert_fail@plt>
  411930:	mov    WORD PTR [rbp-0xc],0x6
  411936:	mov    rax,QWORD PTR [rbp-0x8]
  41193a:	mov    rcx,QWORD PTR [rbp-0x8]
  41193e:	mov    rdi,rcx
  411941:	mov    QWORD PTR [rbp-0x20],rax
  411945:	call   414960 <main@@Base+0x570>
  41194a:	xor    edx,edx
  41194c:	mov    ecx,edx
  41194e:	movsxd rdi,eax
  411951:	sub    rcx,rdi
  411954:	mov    rdi,QWORD PTR [rbp-0x20]
  411958:	add    rdi,rcx
  41195b:	mov    QWORD PTR [rbp-0x18],rdi
  41195f:	mov    rcx,QWORD PTR [rbp-0x18]
  411963:	mov    rdi,rcx
  411966:	call   414980 <main@@Base+0x590>
  41196b:	movzx  edx,ax
  41196e:	mov    ecx,edx
  411970:	movzx  edx,WORD PTR [rbp-0xc]
  411974:	add    edx,0x3
  411977:	movsxd rdi,edx
  41197a:	shl    rdi,0x1
  41197e:	cmp    rcx,rdi
  411981:	jb     4119a9 <test_mixed_type_union@@Base+0x1609>
  411987:	mov    rax,QWORD PTR [rbp-0x18]
  41198b:	movzx  ecx,WORD PTR [rbp-0xc]
  41198f:	movsxd rdx,ecx
  411992:	shl    rdx,0x1
  411996:	add    rax,rdx
  411999:	add    rax,0x4
  41199d:	mov    rdi,rax
  4119a0:	call   414980 <main@@Base+0x590>
  4119a5:	mov    WORD PTR [rbp-0xa],ax
  4119a9:	movzx  eax,WORD PTR [rbp-0xa]
  4119ad:	cmp    eax,0x0
  4119b0:	je     4119d7 <test_mixed_type_union@@Base+0x1637>
  4119b6:	mov    rax,QWORD PTR [rbp-0x8]
  4119ba:	movzx  ecx,WORD PTR [rbp-0xa]
  4119be:	movsxd rdx,ecx
  4119c1:	add    rax,rdx
  4119c4:	mov    rdi,rax
  4119c7:	call   416e40 <main@@Base+0x2a50>
  4119cc:	movzx  ecx,al
  4119cf:	mov    DWORD PTR [rbp-0x24],ecx
  4119d2:	jmp    4119e1 <test_mixed_type_union@@Base+0x1641>
  4119d7:	xor    eax,eax
  4119d9:	mov    DWORD PTR [rbp-0x24],eax
  4119dc:	jmp    4119e1 <test_mixed_type_union@@Base+0x1641>
  4119e1:	mov    eax,DWORD PTR [rbp-0x24]
  4119e4:	mov    cl,al
  4119e6:	movzx  eax,cl
  4119e9:	add    rsp,0x30
  4119ed:	pop    rbp
  4119ee:	ret    
  4119ef:	nop
  4119f0:	push   rbp
  4119f1:	mov    rbp,rsp
  4119f4:	sub    rsp,0x40
  4119f8:	mov    QWORD PTR [rbp-0x10],rdi
  4119fc:	mov    WORD PTR [rbp-0x1a],0x0
  411a02:	cmp    QWORD PTR [rbp-0x10],0x0
  411a07:	je     411a21 <test_mixed_type_union@@Base+0x1681>
  411a0d:	mov    al,0x1
  411a0f:	test   al,0x1
  411a11:	jne    411a1c <test_mixed_type_union@@Base+0x167c>
  411a17:	jmp    411a21 <test_mixed_type_union@@Base+0x1681>
  411a1c:	jmp    411a40 <test_mixed_type_union@@Base+0x16a0>
  411a21:	lea    rdi,[rip+0x14070]        # 425a98 <_IO_stdin_used@@Base+0x2a98>
  411a28:	lea    rsi,[rip+0x1408f]        # 425abe <_IO_stdin_used@@Base+0x2abe>
  411a2f:	mov    edx,0x336
  411a34:	lea    rcx,[rip+0x15c2d]        # 427668 <_IO_stdin_used@@Base+0x4668>
  411a3b:	call   404090 <__assert_fail@plt>
  411a40:	mov    WORD PTR [rbp-0x1c],0x7
  411a46:	mov    rax,QWORD PTR [rbp-0x10]
  411a4a:	mov    rcx,QWORD PTR [rbp-0x10]
  411a4e:	mov    rdi,rcx
  411a51:	mov    QWORD PTR [rbp-0x30],rax
  411a55:	call   414960 <main@@Base+0x570>
  411a5a:	xor    edx,edx
  411a5c:	mov    ecx,edx
  411a5e:	movsxd rdi,eax
  411a61:	sub    rcx,rdi
  411a64:	mov    rdi,QWORD PTR [rbp-0x30]
  411a68:	add    rdi,rcx
  411a6b:	mov    QWORD PTR [rbp-0x28],rdi
  411a6f:	mov    rcx,QWORD PTR [rbp-0x28]
  411a73:	mov    rdi,rcx
  411a76:	call   414980 <main@@Base+0x590>
  411a7b:	movzx  edx,ax
  411a7e:	mov    ecx,edx
  411a80:	movzx  edx,WORD PTR [rbp-0x1c]
  411a84:	add    edx,0x3
  411a87:	movsxd rdi,edx
  411a8a:	shl    rdi,0x1
  411a8e:	cmp    rcx,rdi
  411a91:	jb     411ab9 <test_mixed_type_union@@Base+0x1719>
  411a97:	mov    rax,QWORD PTR [rbp-0x28]
  411a9b:	movzx  ecx,WORD PTR [rbp-0x1c]
  411a9f:	movsxd rdx,ecx
  411aa2:	shl    rdx,0x1
  411aa6:	add    rax,rdx
  411aa9:	add    rax,0x4
  411aad:	mov    rdi,rax
  411ab0:	call   414980 <main@@Base+0x590>
  411ab5:	mov    WORD PTR [rbp-0x1a],ax
  411ab9:	cmp    WORD PTR [rbp-0x1a],0x0
  411abe:	je     411afe <test_mixed_type_union@@Base+0x175e>
  411ac4:	mov    rax,QWORD PTR [rbp-0x10]
  411ac8:	movzx  ecx,WORD PTR [rbp-0x1a]
  411acc:	movsxd rdx,ecx
  411acf:	add    rax,rdx
  411ad2:	mov    QWORD PTR [rbp-0x18],rax
  411ad6:	mov    rax,QWORD PTR [rbp-0x18]
  411ada:	mov    rdx,QWORD PTR [rbp-0x18]
  411ade:	mov    rdi,rdx
  411ae1:	mov    QWORD PTR [rbp-0x38],rax
  411ae5:	call   414930 <main@@Base+0x540>
  411aea:	mov    eax,eax
  411aec:	mov    edx,eax
  411aee:	mov    rdi,QWORD PTR [rbp-0x38]
  411af2:	add    rdi,rdx
  411af5:	mov    QWORD PTR [rbp-0x8],rdi
  411af9:	jmp    411b06 <test_mixed_type_union@@Base+0x1766>
  411afe:	mov    QWORD PTR [rbp-0x8],0x0
  411b06:	mov    rax,QWORD PTR [rbp-0x8]
  411b0a:	add    rsp,0x40
  411b0e:	pop    rbp
  411b0f:	ret    
  411b10:	push   rbp
  411b11:	mov    rbp,rsp
  411b14:	sub    rsp,0x30
  411b18:	mov    QWORD PTR [rbp-0x8],rdi
  411b1c:	mov    WORD PTR [rbp-0xa],0x0
  411b22:	cmp    QWORD PTR [rbp-0x8],0x0
  411b27:	je     411b41 <test_mixed_type_union@@Base+0x17a1>
  411b2d:	mov    al,0x1
  411b2f:	test   al,0x1
  411b31:	jne    411b3c <test_mixed_type_union@@Base+0x179c>
  411b37:	jmp    411b41 <test_mixed_type_union@@Base+0x17a1>
  411b3c:	jmp    411b60 <test_mixed_type_union@@Base+0x17c0>
  411b41:	lea    rdi,[rip+0x13f50]        # 425a98 <_IO_stdin_used@@Base+0x2a98>
  411b48:	lea    rsi,[rip+0x13f6f]        # 425abe <_IO_stdin_used@@Base+0x2abe>
  411b4f:	mov    edx,0x334
  411b54:	lea    rcx,[rip+0x15b4e]        # 4276a9 <_IO_stdin_used@@Base+0x46a9>
  411b5b:	call   404090 <__assert_fail@plt>
  411b60:	mov    WORD PTR [rbp-0xc],0x2
  411b66:	mov    rax,QWORD PTR [rbp-0x8]
  411b6a:	mov    rcx,QWORD PTR [rbp-0x8]
  411b6e:	mov    rdi,rcx
  411b71:	mov    QWORD PTR [rbp-0x20],rax
  411b75:	call   414960 <main@@Base+0x570>
  411b7a:	xor    edx,edx
  411b7c:	mov    ecx,edx
  411b7e:	movsxd rdi,eax
  411b81:	sub    rcx,rdi
  411b84:	mov    rdi,QWORD PTR [rbp-0x20]
  411b88:	add    rdi,rcx
  411b8b:	mov    QWORD PTR [rbp-0x18],rdi
  411b8f:	mov    rcx,QWORD PTR [rbp-0x18]
  411b93:	mov    rdi,rcx
  411b96:	call   414980 <main@@Base+0x590>
  411b9b:	movzx  edx,ax
  411b9e:	mov    ecx,edx
  411ba0:	movzx  edx,WORD PTR [rbp-0xc]
  411ba4:	add    edx,0x3
  411ba7:	movsxd rdi,edx
  411baa:	shl    rdi,0x1
  411bae:	cmp    rcx,rdi
  411bb1:	jb     411bd9 <test_mixed_type_union@@Base+0x1839>
  411bb7:	mov    rax,QWORD PTR [rbp-0x18]
  411bbb:	movzx  ecx,WORD PTR [rbp-0xc]
  411bbf:	movsxd rdx,ecx
  411bc2:	shl    rdx,0x1
  411bc6:	add    rax,rdx
  411bc9:	add    rax,0x4
  411bcd:	mov    rdi,rax
  411bd0:	call   414980 <main@@Base+0x590>
  411bd5:	mov    WORD PTR [rbp-0xa],ax
  411bd9:	movzx  eax,WORD PTR [rbp-0xa]
  411bdd:	cmp    eax,0x0
  411be0:	je     411c07 <test_mixed_type_union@@Base+0x1867>
  411be6:	mov    rax,QWORD PTR [rbp-0x8]
  411bea:	movzx  ecx,WORD PTR [rbp-0xa]
  411bee:	movsxd rdx,ecx
  411bf1:	add    rax,rdx
  411bf4:	mov    rdi,rax
  411bf7:	call   416e40 <main@@Base+0x2a50>
  411bfc:	movzx  ecx,al
  411bff:	mov    DWORD PTR [rbp-0x24],ecx
  411c02:	jmp    411c11 <test_mixed_type_union@@Base+0x1871>
  411c07:	xor    eax,eax
  411c09:	mov    DWORD PTR [rbp-0x24],eax
  411c0c:	jmp    411c11 <test_mixed_type_union@@Base+0x1871>
  411c11:	mov    eax,DWORD PTR [rbp-0x24]
  411c14:	mov    cl,al
  411c16:	movzx  eax,cl
  411c19:	add    rsp,0x30
  411c1d:	pop    rbp
  411c1e:	ret    
  411c1f:	nop
  411c20:	push   rbp
  411c21:	mov    rbp,rsp
  411c24:	sub    rsp,0x40
  411c28:	mov    QWORD PTR [rbp-0x10],rdi
  411c2c:	mov    WORD PTR [rbp-0x1a],0x0
  411c32:	cmp    QWORD PTR [rbp-0x10],0x0
  411c37:	je     411c51 <test_mixed_type_union@@Base+0x18b1>
  411c3d:	mov    al,0x1
  411c3f:	test   al,0x1
  411c41:	jne    411c4c <test_mixed_type_union@@Base+0x18ac>
  411c47:	jmp    411c51 <test_mixed_type_union@@Base+0x18b1>
  411c4c:	jmp    411c70 <test_mixed_type_union@@Base+0x18d0>
  411c51:	lea    rdi,[rip+0x13e40]        # 425a98 <_IO_stdin_used@@Base+0x2a98>
  411c58:	lea    rsi,[rip+0x13e5f]        # 425abe <_IO_stdin_used@@Base+0x2abe>
  411c5f:	mov    edx,0x334
  411c64:	lea    rcx,[rip+0x15a92]        # 4276fd <_IO_stdin_used@@Base+0x46fd>
  411c6b:	call   404090 <__assert_fail@plt>
  411c70:	mov    WORD PTR [rbp-0x1c],0x3
  411c76:	mov    rax,QWORD PTR [rbp-0x10]
  411c7a:	mov    rcx,QWORD PTR [rbp-0x10]
  411c7e:	mov    rdi,rcx
  411c81:	mov    QWORD PTR [rbp-0x30],rax
  411c85:	call   414960 <main@@Base+0x570>
  411c8a:	xor    edx,edx
  411c8c:	mov    ecx,edx
  411c8e:	movsxd rdi,eax
  411c91:	sub    rcx,rdi
  411c94:	mov    rdi,QWORD PTR [rbp-0x30]
  411c98:	add    rdi,rcx
  411c9b:	mov    QWORD PTR [rbp-0x28],rdi
  411c9f:	mov    rcx,QWORD PTR [rbp-0x28]
  411ca3:	mov    rdi,rcx
  411ca6:	call   414980 <main@@Base+0x590>
  411cab:	movzx  edx,ax
  411cae:	mov    ecx,edx
  411cb0:	movzx  edx,WORD PTR [rbp-0x1c]
  411cb4:	add    edx,0x3
  411cb7:	movsxd rdi,edx
  411cba:	shl    rdi,0x1
  411cbe:	cmp    rcx,rdi
  411cc1:	jb     411ce9 <test_mixed_type_union@@Base+0x1949>
  411cc7:	mov    rax,QWORD PTR [rbp-0x28]
  411ccb:	movzx  ecx,WORD PTR [rbp-0x1c]
  411ccf:	movsxd rdx,ecx
  411cd2:	shl    rdx,0x1
  411cd6:	add    rax,rdx
  411cd9:	add    rax,0x4
  411cdd:	mov    rdi,rax
  411ce0:	call   414980 <main@@Base+0x590>
  411ce5:	mov    WORD PTR [rbp-0x1a],ax
  411ce9:	cmp    WORD PTR [rbp-0x1a],0x0
  411cee:	je     411d2e <test_mixed_type_union@@Base+0x198e>
  411cf4:	mov    rax,QWORD PTR [rbp-0x10]
  411cf8:	movzx  ecx,WORD PTR [rbp-0x1a]
  411cfc:	movsxd rdx,ecx
  411cff:	add    rax,rdx
  411d02:	mov    QWORD PTR [rbp-0x18],rax
  411d06:	mov    rax,QWORD PTR [rbp-0x18]
  411d0a:	mov    rdx,QWORD PTR [rbp-0x18]
  411d0e:	mov    rdi,rdx
  411d11:	mov    QWORD PTR [rbp-0x38],rax
  411d15:	call   414930 <main@@Base+0x540>
  411d1a:	mov    eax,eax
  411d1c:	mov    edx,eax
  411d1e:	mov    rdi,QWORD PTR [rbp-0x38]
  411d22:	add    rdi,rdx
  411d25:	mov    QWORD PTR [rbp-0x8],rdi
  411d29:	jmp    411d36 <test_mixed_type_union@@Base+0x1996>
  411d2e:	mov    QWORD PTR [rbp-0x8],0x0
  411d36:	mov    rax,QWORD PTR [rbp-0x8]
  411d3a:	add    rsp,0x40
  411d3e:	pop    rbp
  411d3f:	ret    
  411d40:	push   rbp
  411d41:	mov    rbp,rsp
  411d44:	sub    rsp,0x30
  411d48:	mov    QWORD PTR [rbp-0x8],rdi
  411d4c:	mov    WORD PTR [rbp-0xa],0x0
  411d52:	cmp    QWORD PTR [rbp-0x8],0x0
  411d57:	je     411d71 <test_mixed_type_union@@Base+0x19d1>
  411d5d:	mov    al,0x1
  411d5f:	test   al,0x1
  411d61:	jne    411d6c <test_mixed_type_union@@Base+0x19cc>
  411d67:	jmp    411d71 <test_mixed_type_union@@Base+0x19d1>
  411d6c:	jmp    411d90 <test_mixed_type_union@@Base+0x19f0>
  411d71:	lea    rdi,[rip+0x13d20]        # 425a98 <_IO_stdin_used@@Base+0x2a98>
  411d78:	lea    rsi,[rip+0x13d3f]        # 425abe <_IO_stdin_used@@Base+0x2abe>
  411d7f:	mov    edx,0x302
  411d84:	lea    rcx,[rip+0x159b8]        # 427743 <_IO_stdin_used@@Base+0x4743>
  411d8b:	call   404090 <__assert_fail@plt>
  411d90:	mov    WORD PTR [rbp-0xc],0x0
  411d96:	mov    rax,QWORD PTR [rbp-0x8]
  411d9a:	mov    rcx,QWORD PTR [rbp-0x8]
  411d9e:	mov    rdi,rcx
  411da1:	mov    QWORD PTR [rbp-0x20],rax
  411da5:	call   414960 <main@@Base+0x570>
  411daa:	xor    edx,edx
  411dac:	mov    ecx,edx
  411dae:	movsxd rdi,eax
  411db1:	sub    rcx,rdi
  411db4:	mov    rdi,QWORD PTR [rbp-0x20]
  411db8:	add    rdi,rcx
  411dbb:	mov    QWORD PTR [rbp-0x18],rdi
  411dbf:	mov    rcx,QWORD PTR [rbp-0x18]
  411dc3:	mov    rdi,rcx
  411dc6:	call   414980 <main@@Base+0x590>
  411dcb:	movzx  edx,ax
  411dce:	mov    ecx,edx
  411dd0:	movzx  edx,WORD PTR [rbp-0xc]
  411dd4:	add    edx,0x3
  411dd7:	movsxd rdi,edx
  411dda:	shl    rdi,0x1
  411dde:	cmp    rcx,rdi
  411de1:	jb     411e09 <test_mixed_type_union@@Base+0x1a69>
  411de7:	mov    rax,QWORD PTR [rbp-0x18]
  411deb:	movzx  ecx,WORD PTR [rbp-0xc]
  411def:	movsxd rdx,ecx
  411df2:	shl    rdx,0x1
  411df6:	add    rax,rdx
  411df9:	add    rax,0x4
  411dfd:	mov    rdi,rax
  411e00:	call   414980 <main@@Base+0x590>
  411e05:	mov    WORD PTR [rbp-0xa],ax
  411e09:	movzx  eax,WORD PTR [rbp-0xa]
  411e0d:	cmp    eax,0x0
  411e10:	je     411e34 <test_mixed_type_union@@Base+0x1a94>
  411e16:	mov    rax,QWORD PTR [rbp-0x8]
  411e1a:	movzx  ecx,WORD PTR [rbp-0xa]
  411e1e:	movsxd rdx,ecx
  411e21:	add    rax,rdx
  411e24:	mov    rdi,rax
  411e27:	call   4157c0 <main@@Base+0x13d0>
  411e2c:	mov    DWORD PTR [rbp-0x24],eax
  411e2f:	jmp    411e3e <test_mixed_type_union@@Base+0x1a9e>
  411e34:	xor    eax,eax
  411e36:	mov    DWORD PTR [rbp-0x24],eax
  411e39:	jmp    411e3e <test_mixed_type_union@@Base+0x1a9e>
  411e3e:	mov    eax,DWORD PTR [rbp-0x24]
  411e41:	add    rsp,0x30
  411e45:	pop    rbp
  411e46:	ret    
  411e47:	nop    WORD PTR [rax+rax*1+0x0]
  411e50:	push   rbp
  411e51:	mov    rbp,rsp
  411e54:	sub    rsp,0x30
  411e58:	mov    QWORD PTR [rbp-0x8],rdi
  411e5c:	mov    WORD PTR [rbp-0xa],0x0
  411e62:	cmp    QWORD PTR [rbp-0x8],0x0
  411e67:	je     411e81 <test_mixed_type_union@@Base+0x1ae1>
  411e6d:	mov    al,0x1
  411e6f:	test   al,0x1
  411e71:	jne    411e7c <test_mixed_type_union@@Base+0x1adc>
  411e77:	jmp    411e81 <test_mixed_type_union@@Base+0x1ae1>
  411e7c:	jmp    411ea0 <test_mixed_type_union@@Base+0x1b00>
  411e81:	lea    rdi,[rip+0x13c10]        # 425a98 <_IO_stdin_used@@Base+0x2a98>
  411e88:	lea    rsi,[rip+0x13c2f]        # 425abe <_IO_stdin_used@@Base+0x2abe>
  411e8f:	mov    edx,0x335
  411e94:	lea    rcx,[rip+0x158ef]        # 42778a <_IO_stdin_used@@Base+0x478a>
  411e9b:	call   404090 <__assert_fail@plt>
  411ea0:	mov    WORD PTR [rbp-0xc],0x4
  411ea6:	mov    rax,QWORD PTR [rbp-0x8]
  411eaa:	mov    rcx,QWORD PTR [rbp-0x8]
  411eae:	mov    rdi,rcx
  411eb1:	mov    QWORD PTR [rbp-0x20],rax
  411eb5:	call   414960 <main@@Base+0x570>
  411eba:	xor    edx,edx
  411ebc:	mov    ecx,edx
  411ebe:	movsxd rdi,eax
  411ec1:	sub    rcx,rdi
  411ec4:	mov    rdi,QWORD PTR [rbp-0x20]
  411ec8:	add    rdi,rcx
  411ecb:	mov    QWORD PTR [rbp-0x18],rdi
  411ecf:	mov    rcx,QWORD PTR [rbp-0x18]
  411ed3:	mov    rdi,rcx
  411ed6:	call   414980 <main@@Base+0x590>
  411edb:	movzx  edx,ax
  411ede:	mov    ecx,edx
  411ee0:	movzx  edx,WORD PTR [rbp-0xc]
  411ee4:	add    edx,0x3
  411ee7:	movsxd rdi,edx
  411eea:	shl    rdi,0x1
  411eee:	cmp    rcx,rdi
  411ef1:	jb     411f19 <test_mixed_type_union@@Base+0x1b79>
  411ef7:	mov    rax,QWORD PTR [rbp-0x18]
  411efb:	movzx  ecx,WORD PTR [rbp-0xc]
  411eff:	movsxd rdx,ecx
  411f02:	shl    rdx,0x1
  411f06:	add    rax,rdx
  411f09:	add    rax,0x4
  411f0d:	mov    rdi,rax
  411f10:	call   414980 <main@@Base+0x590>
  411f15:	mov    WORD PTR [rbp-0xa],ax
  411f19:	movzx  eax,WORD PTR [rbp-0xa]
  411f1d:	cmp    eax,0x0
  411f20:	je     411f47 <test_mixed_type_union@@Base+0x1ba7>
  411f26:	mov    rax,QWORD PTR [rbp-0x8]
  411f2a:	movzx  ecx,WORD PTR [rbp-0xa]
  411f2e:	movsxd rdx,ecx
  411f31:	add    rax,rdx
  411f34:	mov    rdi,rax
  411f37:	call   416e40 <main@@Base+0x2a50>
  411f3c:	movzx  ecx,al
  411f3f:	mov    DWORD PTR [rbp-0x24],ecx
  411f42:	jmp    411f51 <test_mixed_type_union@@Base+0x1bb1>
  411f47:	xor    eax,eax
  411f49:	mov    DWORD PTR [rbp-0x24],eax
  411f4c:	jmp    411f51 <test_mixed_type_union@@Base+0x1bb1>
  411f51:	mov    eax,DWORD PTR [rbp-0x24]
  411f54:	mov    cl,al
  411f56:	movzx  eax,cl
  411f59:	add    rsp,0x30
  411f5d:	pop    rbp
  411f5e:	ret    
  411f5f:	nop
  411f60:	push   rbp
  411f61:	mov    rbp,rsp
  411f64:	sub    rsp,0x20
  411f68:	mov    QWORD PTR [rbp-0x8],rdi
  411f6c:	cmp    QWORD PTR [rbp-0x8],0x0
  411f71:	je     411f94 <test_mixed_type_union@@Base+0x1bf4>
  411f77:	mov    rax,QWORD PTR [rbp-0x8]
  411f7b:	mov    QWORD PTR [rbp-0x10],rax
  411f7f:	call   418cc0 <main@@Base+0x48d0>
  411f84:	mov    rcx,QWORD PTR [rbp-0x10]
  411f88:	add    rcx,rax
  411f8b:	mov    QWORD PTR [rbp-0x18],rcx
  411f8f:	jmp    411fa1 <test_mixed_type_union@@Base+0x1c01>
  411f94:	xor    eax,eax
  411f96:	mov    ecx,eax
  411f98:	mov    QWORD PTR [rbp-0x18],rcx
  411f9c:	jmp    411fa1 <test_mixed_type_union@@Base+0x1c01>
  411fa1:	mov    rax,QWORD PTR [rbp-0x18]
  411fa5:	add    rsp,0x20
  411fa9:	pop    rbp
  411faa:	ret    
  411fab:	nop    DWORD PTR [rax+rax*1+0x0]
  411fb0:	push   rbp
  411fb1:	mov    rbp,rsp
  411fb4:	sub    rsp,0x40
  411fb8:	mov    QWORD PTR [rbp-0x10],rdi
  411fbc:	mov    WORD PTR [rbp-0x1a],0x0
  411fc2:	cmp    QWORD PTR [rbp-0x10],0x0
  411fc7:	je     411fe1 <test_mixed_type_union@@Base+0x1c41>
  411fcd:	mov    al,0x1
  411fcf:	test   al,0x1
  411fd1:	jne    411fdc <test_mixed_type_union@@Base+0x1c3c>
  411fd7:	jmp    411fe1 <test_mixed_type_union@@Base+0x1c41>
  411fdc:	jmp    412000 <test_mixed_type_union@@Base+0x1c60>
  411fe1:	lea    rdi,[rip+0x13ab0]        # 425a98 <_IO_stdin_used@@Base+0x2a98>
  411fe8:	lea    rsi,[rip+0x13acf]        # 425abe <_IO_stdin_used@@Base+0x2abe>
  411fef:	mov    edx,0x335
  411ff4:	lea    rcx,[rip+0x157e2]        # 4277dd <_IO_stdin_used@@Base+0x47dd>
  411ffb:	call   404090 <__assert_fail@plt>
  412000:	mov    WORD PTR [rbp-0x1c],0x5
  412006:	mov    rax,QWORD PTR [rbp-0x10]
  41200a:	mov    rcx,QWORD PTR [rbp-0x10]
  41200e:	mov    rdi,rcx
  412011:	mov    QWORD PTR [rbp-0x30],rax
  412015:	call   414960 <main@@Base+0x570>
  41201a:	xor    edx,edx
  41201c:	mov    ecx,edx
  41201e:	movsxd rdi,eax
  412021:	sub    rcx,rdi
  412024:	mov    rdi,QWORD PTR [rbp-0x30]
  412028:	add    rdi,rcx
  41202b:	mov    QWORD PTR [rbp-0x28],rdi
  41202f:	mov    rcx,QWORD PTR [rbp-0x28]
  412033:	mov    rdi,rcx
  412036:	call   414980 <main@@Base+0x590>
  41203b:	movzx  edx,ax
  41203e:	mov    ecx,edx
  412040:	movzx  edx,WORD PTR [rbp-0x1c]
  412044:	add    edx,0x3
  412047:	movsxd rdi,edx
  41204a:	shl    rdi,0x1
  41204e:	cmp    rcx,rdi
  412051:	jb     412079 <test_mixed_type_union@@Base+0x1cd9>
  412057:	mov    rax,QWORD PTR [rbp-0x28]
  41205b:	movzx  ecx,WORD PTR [rbp-0x1c]
  41205f:	movsxd rdx,ecx
  412062:	shl    rdx,0x1
  412066:	add    rax,rdx
  412069:	add    rax,0x4
  41206d:	mov    rdi,rax
  412070:	call   414980 <main@@Base+0x590>
  412075:	mov    WORD PTR [rbp-0x1a],ax
  412079:	cmp    WORD PTR [rbp-0x1a],0x0
  41207e:	je     4120be <test_mixed_type_union@@Base+0x1d1e>
  412084:	mov    rax,QWORD PTR [rbp-0x10]
  412088:	movzx  ecx,WORD PTR [rbp-0x1a]
  41208c:	movsxd rdx,ecx
  41208f:	add    rax,rdx
  412092:	mov    QWORD PTR [rbp-0x18],rax
  412096:	mov    rax,QWORD PTR [rbp-0x18]
  41209a:	mov    rdx,QWORD PTR [rbp-0x18]
  41209e:	mov    rdi,rdx
  4120a1:	mov    QWORD PTR [rbp-0x38],rax
  4120a5:	call   414930 <main@@Base+0x540>
  4120aa:	mov    eax,eax
  4120ac:	mov    edx,eax
  4120ae:	mov    rdi,QWORD PTR [rbp-0x38]
  4120b2:	add    rdi,rdx
  4120b5:	mov    QWORD PTR [rbp-0x8],rdi
  4120b9:	jmp    4120c6 <test_mixed_type_union@@Base+0x1d26>
  4120be:	mov    QWORD PTR [rbp-0x8],0x0
  4120c6:	mov    rax,QWORD PTR [rbp-0x8]
  4120ca:	add    rsp,0x40
  4120ce:	pop    rbp
  4120cf:	ret    
  4120d0:	push   rbp
  4120d1:	mov    rbp,rsp
  4120d4:	sub    rsp,0x10
  4120d8:	mov    QWORD PTR [rbp-0x8],rdi
  4120dc:	mov    rdi,QWORD PTR [rbp-0x8]
  4120e0:	call   411fb0 <test_mixed_type_union@@Base+0x1c10>
  4120e5:	mov    rdi,rax
  4120e8:	call   411f60 <test_mixed_type_union@@Base+0x1bc0>
  4120ed:	add    rsp,0x10
  4120f1:	pop    rbp
  4120f2:	ret    
  4120f3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4120fd:	nop    DWORD PTR [rax]
  412100:	push   rbp
  412101:	mov    rbp,rsp
  412104:	sub    rsp,0x20
  412108:	xor    esi,esi
  41210a:	mov    eax,0x10
  41210f:	mov    edx,eax
  412111:	mov    QWORD PTR [rbp-0x18],rdi
  412115:	lea    rdi,[rbp-0x10]
  412119:	call   4040a0 <memset@plt>
  41211e:	mov    rdi,QWORD PTR [rbp-0x18]
  412122:	call   411e50 <test_mixed_type_union@@Base+0x1ab0>
  412127:	mov    BYTE PTR [rbp-0x10],al
  41212a:	movzx  esi,BYTE PTR [rbp-0x10]
  41212e:	cmp    esi,0x0
  412131:	jne    41213c <test_mixed_type_union@@Base+0x1d9c>
  412137:	jmp    412149 <test_mixed_type_union@@Base+0x1da9>
  41213c:	mov    rdi,QWORD PTR [rbp-0x18]
  412140:	call   411fb0 <test_mixed_type_union@@Base+0x1c10>
  412145:	mov    QWORD PTR [rbp-0x8],rax
  412149:	mov    al,BYTE PTR [rbp-0x10]
  41214c:	mov    rdx,QWORD PTR [rbp-0x8]
  412150:	add    rsp,0x20
  412154:	pop    rbp
  412155:	ret    
  412156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412160:	push   rbp
  412161:	mov    rbp,rsp
  412164:	sub    rsp,0x10
  412168:	mov    al,dil
  41216b:	mov    BYTE PTR [rbp-0x10],al
  41216e:	mov    QWORD PTR [rbp-0x8],rsi
  412172:	mov    rdi,QWORD PTR [rbp-0x8]
  412176:	call   411f60 <test_mixed_type_union@@Base+0x1bc0>
  41217b:	add    rsp,0x10
  41217f:	pop    rbp
  412180:	ret    
  412181:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41218b:	nop    DWORD PTR [rax+rax*1+0x0]
  412190:	push   rbp
  412191:	mov    rbp,rsp
  412194:	sub    rsp,0x20
  412198:	mov    QWORD PTR [rbp-0x18],rdi
  41219c:	mov    rdi,QWORD PTR [rbp-0x18]
  4121a0:	call   4122e0 <test_mixed_type_union@@Base+0x1f40>
  4121a5:	mov    QWORD PTR [rbp-0x10],rax
  4121a9:	mov    rdi,QWORD PTR [rbp-0x18]
  4121ad:	call   418cd0 <main@@Base+0x48e0>
  4121b2:	mov    QWORD PTR [rbp-0x8],rax
  4121b6:	mov    rdi,QWORD PTR [rbp-0x10]
  4121ba:	call   416db0 <main@@Base+0x29c0>
  4121bf:	mov    rdi,QWORD PTR [rbp-0x8]
  4121c3:	mov    QWORD PTR [rbp-0x20],rax
  4121c7:	call   416db0 <main@@Base+0x29c0>
  4121cc:	mov    rdi,QWORD PTR [rbp-0x20]
  4121d0:	cmp    rdi,rax
  4121d3:	jne    4121ed <test_mixed_type_union@@Base+0x1e4d>
  4121d9:	mov    al,0x1
  4121db:	test   al,0x1
  4121dd:	jne    4121e8 <test_mixed_type_union@@Base+0x1e48>
  4121e3:	jmp    4121ed <test_mixed_type_union@@Base+0x1e4d>
  4121e8:	jmp    41220c <test_mixed_type_union@@Base+0x1e6c>
  4121ed:	lea    rdi,[rip+0x15022]        # 427216 <_IO_stdin_used@@Base+0x4216>
  4121f4:	lea    rsi,[rip+0x138c3]        # 425abe <_IO_stdin_used@@Base+0x2abe>
  4121fb:	mov    edx,0x337
  412200:	lea    rcx,[rip+0x1561b]        # 427822 <_IO_stdin_used@@Base+0x4822>
  412207:	call   404090 <__assert_fail@plt>
  41220c:	mov    rax,QWORD PTR [rbp-0x10]
  412210:	mov    rdx,QWORD PTR [rbp-0x8]
  412214:	add    rsp,0x20
  412218:	pop    rbp
  412219:	ret    
  41221a:	nop    WORD PTR [rax+rax*1+0x0]
  412220:	push   rbp
  412221:	mov    rbp,rsp
  412224:	sub    rsp,0x30
  412228:	xor    eax,eax
  41222a:	mov    ecx,0x10
  41222f:	mov    r8d,ecx
  412232:	mov    QWORD PTR [rbp-0x20],rdi
  412236:	mov    QWORD PTR [rbp-0x18],rsi
  41223a:	mov    QWORD PTR [rbp-0x28],rdx
  41223e:	lea    rdx,[rbp-0x10]
  412242:	mov    rdi,rdx
  412245:	mov    esi,eax
  412247:	mov    rdx,r8
  41224a:	call   4040a0 <memset@plt>
  41224f:	mov    rdi,QWORD PTR [rbp-0x20]
  412253:	call   416db0 <main@@Base+0x29c0>
  412258:	mov    QWORD PTR [rbp-0x30],rax
  41225c:	mov    rax,QWORD PTR [rbp-0x30]
  412260:	cmp    rax,QWORD PTR [rbp-0x28]
  412264:	jbe    41227e <test_mixed_type_union@@Base+0x1ede>
  41226a:	mov    al,0x1
  41226c:	test   al,0x1
  41226e:	jne    412279 <test_mixed_type_union@@Base+0x1ed9>
  412274:	jmp    41227e <test_mixed_type_union@@Base+0x1ede>
  412279:	jmp    41229d <test_mixed_type_union@@Base+0x1efd>
  41227e:	lea    rdi,[rip+0x15052]        # 4272d7 <_IO_stdin_used@@Base+0x42d7>
  412285:	lea    rsi,[rip+0x13832]        # 425abe <_IO_stdin_used@@Base+0x2abe>
  41228c:	mov    edx,0x305
  412291:	lea    rcx,[rip+0x15628]        # 4278c0 <_IO_stdin_used@@Base+0x48c0>
  412298:	call   404090 <__assert_fail@plt>
  41229d:	mov    rax,QWORD PTR [rbp-0x20]
  4122a1:	mov    rcx,QWORD PTR [rbp-0x28]
  4122a5:	mov    dl,BYTE PTR [rax+rcx*1]
  4122a8:	mov    BYTE PTR [rbp-0x10],dl
  4122ab:	movzx  esi,BYTE PTR [rbp-0x10]
  4122af:	cmp    esi,0x0
  4122b2:	jne    4122bd <test_mixed_type_union@@Base+0x1f1d>
  4122b8:	jmp    4122ce <test_mixed_type_union@@Base+0x1f2e>
  4122bd:	mov    rdi,QWORD PTR [rbp-0x18]
  4122c1:	mov    rsi,QWORD PTR [rbp-0x28]
  4122c5:	call   410070 <test_union_vector@@Base+0xa50>
  4122ca:	mov    QWORD PTR [rbp-0x8],rax
  4122ce:	mov    al,BYTE PTR [rbp-0x10]
  4122d1:	mov    rdx,QWORD PTR [rbp-0x8]
  4122d5:	add    rsp,0x30
  4122d9:	pop    rbp
  4122da:	ret    
  4122db:	nop    DWORD PTR [rax+rax*1+0x0]
  4122e0:	push   rbp
  4122e1:	mov    rbp,rsp
  4122e4:	sub    rsp,0x40
  4122e8:	mov    QWORD PTR [rbp-0x10],rdi
  4122ec:	mov    WORD PTR [rbp-0x1a],0x0
  4122f2:	cmp    QWORD PTR [rbp-0x10],0x0
  4122f7:	je     412311 <test_mixed_type_union@@Base+0x1f71>
  4122fd:	mov    al,0x1
  4122ff:	test   al,0x1
  412301:	jne    41230c <test_mixed_type_union@@Base+0x1f6c>
  412307:	jmp    412311 <test_mixed_type_union@@Base+0x1f71>
  41230c:	jmp    412330 <test_mixed_type_union@@Base+0x1f90>
  412311:	lea    rdi,[rip+0x13780]        # 425a98 <_IO_stdin_used@@Base+0x2a98>
  412318:	lea    rsi,[rip+0x1379f]        # 425abe <_IO_stdin_used@@Base+0x2abe>
  41231f:	mov    edx,0x337
  412324:	lea    rcx,[rip+0x155f5]        # 427920 <_IO_stdin_used@@Base+0x4920>
  41232b:	call   404090 <__assert_fail@plt>
  412330:	mov    WORD PTR [rbp-0x1c],0x8
  412336:	mov    rax,QWORD PTR [rbp-0x10]
  41233a:	mov    rcx,QWORD PTR [rbp-0x10]
  41233e:	mov    rdi,rcx
  412341:	mov    QWORD PTR [rbp-0x30],rax
  412345:	call   414960 <main@@Base+0x570>
  41234a:	xor    edx,edx
  41234c:	mov    ecx,edx
  41234e:	movsxd rdi,eax
  412351:	sub    rcx,rdi
  412354:	mov    rdi,QWORD PTR [rbp-0x30]
  412358:	add    rdi,rcx
  41235b:	mov    QWORD PTR [rbp-0x28],rdi
  41235f:	mov    rcx,QWORD PTR [rbp-0x28]
  412363:	mov    rdi,rcx
  412366:	call   414980 <main@@Base+0x590>
  41236b:	movzx  edx,ax
  41236e:	mov    ecx,edx
  412370:	movzx  edx,WORD PTR [rbp-0x1c]
  412374:	add    edx,0x3
  412377:	movsxd rdi,edx
  41237a:	shl    rdi,0x1
  41237e:	cmp    rcx,rdi
  412381:	jb     4123a9 <test_mixed_type_union@@Base+0x2009>
  412387:	mov    rax,QWORD PTR [rbp-0x28]
  41238b:	movzx  ecx,WORD PTR [rbp-0x1c]
  41238f:	movsxd rdx,ecx
  412392:	shl    rdx,0x1
  412396:	add    rax,rdx
  412399:	add    rax,0x4
  41239d:	mov    rdi,rax
  4123a0:	call   414980 <main@@Base+0x590>
  4123a5:	mov    WORD PTR [rbp-0x1a],ax
  4123a9:	cmp    WORD PTR [rbp-0x1a],0x0
  4123ae:	je     4123f2 <test_mixed_type_union@@Base+0x2052>
  4123b4:	mov    rax,QWORD PTR [rbp-0x10]
  4123b8:	movzx  ecx,WORD PTR [rbp-0x1a]
  4123bc:	movsxd rdx,ecx
  4123bf:	add    rax,rdx
  4123c2:	mov    QWORD PTR [rbp-0x18],rax
  4123c6:	mov    rax,QWORD PTR [rbp-0x18]
  4123ca:	add    rax,0x4
  4123ce:	mov    rdx,QWORD PTR [rbp-0x18]
  4123d2:	mov    rdi,rdx
  4123d5:	mov    QWORD PTR [rbp-0x38],rax
  4123d9:	call   414930 <main@@Base+0x540>
  4123de:	mov    eax,eax
  4123e0:	mov    edx,eax
  4123e2:	mov    rdi,QWORD PTR [rbp-0x38]
  4123e6:	add    rdi,rdx
  4123e9:	mov    QWORD PTR [rbp-0x8],rdi
  4123ed:	jmp    4123fa <test_mixed_type_union@@Base+0x205a>
  4123f2:	mov    QWORD PTR [rbp-0x8],0x0
  4123fa:	mov    rax,QWORD PTR [rbp-0x8]
  4123fe:	add    rsp,0x40
  412402:	pop    rbp
  412403:	ret    
  412404:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41240e:	xchg   ax,ax
  412410:	push   rbp
  412411:	mov    rbp,rsp
  412414:	sub    rsp,0x20
  412418:	mov    QWORD PTR [rbp-0x10],rdi
  41241c:	mov    QWORD PTR [rbp-0x8],rsi
  412420:	mov    QWORD PTR [rbp-0x18],rdx
  412424:	mov    rdi,QWORD PTR [rbp-0x8]
  412428:	mov    rsi,QWORD PTR [rbp-0x18]
  41242c:	call   418e00 <main@@Base+0x4a10>
  412431:	add    rsp,0x20
  412435:	pop    rbp
  412436:	ret    
  412437:	nop    WORD PTR [rax+rax*1+0x0]
  412440:	push   rbp
  412441:	mov    rbp,rsp
  412444:	sub    rsp,0x10
  412448:	mov    QWORD PTR [rbp-0x10],rdi
  41244c:	mov    QWORD PTR [rbp-0x8],rsi
  412450:	mov    rdi,QWORD PTR [rbp-0x10]
  412454:	call   416db0 <main@@Base+0x29c0>
  412459:	add    rsp,0x10
  41245d:	pop    rbp
  41245e:	ret    
  41245f:	nop

0000000000412460 <test_add_set_defaults@@Base>:
  412460:	push   rbp
  412461:	mov    rbp,rsp
  412464:	sub    rsp,0x80
  41246b:	mov    QWORD PTR [rbp-0x10],rdi
  41246f:	mov    rdi,QWORD PTR [rbp-0x10]
  412473:	call   4197b0 <flatcc_builder_reset@@Base>
  412478:	mov    rdi,QWORD PTR [rbp-0x10]
  41247c:	mov    DWORD PTR [rbp-0x2c],eax
  41247f:	call   40a2c0 <gen_monster@@Base+0x780>
  412484:	mov    rdi,QWORD PTR [rbp-0x10]
  412488:	lea    rsi,[rip+0x10ec8]        # 423357 <_IO_stdin_used@@Base+0x357>
  41248f:	mov    DWORD PTR [rbp-0x30],eax
  412492:	call   405c40 <test_empty_monster@@Base+0x1b0>
  412497:	mov    rdi,QWORD PTR [rbp-0x10]
  41249b:	mov    esi,0x64
  4124a0:	mov    DWORD PTR [rbp-0x34],eax
  4124a3:	call   40a310 <gen_monster@@Base+0x7d0>
  4124a8:	mov    rdi,QWORD PTR [rbp-0x10]
  4124ac:	mov    esi,0x64
  4124b1:	mov    DWORD PTR [rbp-0x38],eax
  4124b4:	call   4126b0 <test_add_set_defaults@@Base+0x250>
  4124b9:	mov    rdi,QWORD PTR [rbp-0x10]
  4124bd:	mov    esi,0x8
  4124c2:	mov    DWORD PTR [rbp-0x3c],eax
  4124c5:	call   40a3d0 <gen_monster@@Base+0x890>
  4124ca:	mov    rdi,QWORD PTR [rbp-0x10]
  4124ce:	mov    DWORD PTR [rbp-0x40],eax
  4124d1:	call   40ae60 <gen_monster@@Base+0x1320>
  4124d6:	mov    rdi,QWORD PTR [rbp-0x10]
  4124da:	lea    rsi,[rbp-0x20]
  4124de:	mov    DWORD PTR [rbp-0x44],eax
  4124e1:	call   41e9b0 <flatcc_builder_get_direct_buffer@@Base>
  4124e6:	mov    QWORD PTR [rbp-0x18],rax
  4124ea:	mov    rdi,QWORD PTR [rbp-0x18]
  4124ee:	call   4044a0 <verify_empty_monster@@Base+0x280>
  4124f3:	mov    QWORD PTR [rbp-0x28],rax
  4124f7:	mov    rdi,QWORD PTR [rbp-0x28]
  4124fb:	call   404630 <verify_empty_monster@@Base+0x410>
  412500:	cmp    eax,0x0
  412503:	je     412526 <test_add_set_defaults@@Base+0xc6>
  412509:	lea    rdi,[rip+0x1301c]        # 42552c <_IO_stdin_used@@Base+0x252c>
  412510:	mov    al,0x0
  412512:	call   404070 <printf@plt>
  412517:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41251e:	mov    DWORD PTR [rbp-0x48],eax
  412521:	jmp    4126a0 <test_add_set_defaults@@Base+0x240>
  412526:	mov    rdi,QWORD PTR [rbp-0x28]
  41252a:	call   408780 <verify_monster@@Base+0x1b70>
  41252f:	cmp    eax,0x0
  412532:	jne    412555 <test_add_set_defaults@@Base+0xf5>
  412538:	lea    rdi,[rip+0x13019]        # 425558 <_IO_stdin_used@@Base+0x2558>
  41253f:	mov    al,0x0
  412541:	call   404070 <printf@plt>
  412546:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41254d:	mov    DWORD PTR [rbp-0x4c],eax
  412550:	jmp    4126a0 <test_add_set_defaults@@Base+0x240>
  412555:	mov    rdi,QWORD PTR [rbp-0x28]
  412559:	call   412740 <test_add_set_defaults@@Base+0x2e0>
  41255e:	cmp    eax,0x0
  412561:	je     412584 <test_add_set_defaults@@Base+0x124>
  412567:	lea    rdi,[rip+0x13018]        # 425586 <_IO_stdin_used@@Base+0x2586>
  41256e:	mov    al,0x0
  412570:	call   404070 <printf@plt>
  412575:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41257c:	mov    DWORD PTR [rbp-0x50],eax
  41257f:	jmp    4126a0 <test_add_set_defaults@@Base+0x240>
  412584:	mov    rdi,QWORD PTR [rbp-0x10]
  412588:	call   4197b0 <flatcc_builder_reset@@Base>
  41258d:	mov    rdi,QWORD PTR [rbp-0x10]
  412591:	mov    DWORD PTR [rbp-0x54],eax
  412594:	call   40a2c0 <gen_monster@@Base+0x780>
  412599:	mov    rdi,QWORD PTR [rbp-0x10]
  41259d:	lea    rsi,[rip+0x10db3]        # 423357 <_IO_stdin_used@@Base+0x357>
  4125a4:	mov    DWORD PTR [rbp-0x58],eax
  4125a7:	call   405c40 <test_empty_monster@@Base+0x1b0>
  4125ac:	mov    rdi,QWORD PTR [rbp-0x10]
  4125b0:	mov    esi,0x64
  4125b5:	mov    DWORD PTR [rbp-0x5c],eax
  4125b8:	call   412820 <test_add_set_defaults@@Base+0x3c0>
  4125bd:	mov    rdi,QWORD PTR [rbp-0x10]
  4125c1:	mov    esi,0x64
  4125c6:	mov    DWORD PTR [rbp-0x60],eax
  4125c9:	call   412890 <test_add_set_defaults@@Base+0x430>
  4125ce:	mov    rdi,QWORD PTR [rbp-0x10]
  4125d2:	mov    esi,0x8
  4125d7:	mov    DWORD PTR [rbp-0x64],eax
  4125da:	call   412900 <test_add_set_defaults@@Base+0x4a0>
  4125df:	mov    rdi,QWORD PTR [rbp-0x10]
  4125e3:	mov    DWORD PTR [rbp-0x68],eax
  4125e6:	call   40ae60 <gen_monster@@Base+0x1320>
  4125eb:	mov    rdi,QWORD PTR [rbp-0x10]
  4125ef:	lea    rsi,[rbp-0x20]
  4125f3:	mov    DWORD PTR [rbp-0x6c],eax
  4125f6:	call   41e9b0 <flatcc_builder_get_direct_buffer@@Base>
  4125fb:	mov    QWORD PTR [rbp-0x18],rax
  4125ff:	mov    rdi,QWORD PTR [rbp-0x18]
  412603:	call   4044a0 <verify_empty_monster@@Base+0x280>
  412608:	mov    QWORD PTR [rbp-0x28],rax
  41260c:	mov    rdi,QWORD PTR [rbp-0x28]
  412610:	call   404630 <verify_empty_monster@@Base+0x410>
  412615:	cmp    eax,0x0
  412618:	jne    41263b <test_add_set_defaults@@Base+0x1db>
  41261e:	lea    rdi,[rip+0x12f90]        # 4255b5 <_IO_stdin_used@@Base+0x25b5>
  412625:	mov    al,0x0
  412627:	call   404070 <printf@plt>
  41262c:	mov    DWORD PTR [rbp-0x4],0xffffffff
  412633:	mov    DWORD PTR [rbp-0x70],eax
  412636:	jmp    4126a0 <test_add_set_defaults@@Base+0x240>
  41263b:	mov    rdi,QWORD PTR [rbp-0x28]
  41263f:	call   408780 <verify_monster@@Base+0x1b70>
  412644:	cmp    eax,0x0
  412647:	jne    41266a <test_add_set_defaults@@Base+0x20a>
  41264d:	lea    rdi,[rip+0x12f95]        # 4255e9 <_IO_stdin_used@@Base+0x25e9>
  412654:	mov    al,0x0
  412656:	call   404070 <printf@plt>
  41265b:	mov    DWORD PTR [rbp-0x4],0xffffffff
  412662:	mov    DWORD PTR [rbp-0x74],eax
  412665:	jmp    4126a0 <test_add_set_defaults@@Base+0x240>
  41266a:	mov    rdi,QWORD PTR [rbp-0x28]
  41266e:	call   412740 <test_add_set_defaults@@Base+0x2e0>
  412673:	cmp    eax,0x0
  412676:	jne    412699 <test_add_set_defaults@@Base+0x239>
  41267c:	lea    rdi,[rip+0x12fa6]        # 425629 <_IO_stdin_used@@Base+0x2629>
  412683:	mov    al,0x0
  412685:	call   404070 <printf@plt>
  41268a:	mov    DWORD PTR [rbp-0x4],0xffffffff
  412691:	mov    DWORD PTR [rbp-0x78],eax
  412694:	jmp    4126a0 <test_add_set_defaults@@Base+0x240>
  412699:	mov    DWORD PTR [rbp-0x4],0x0
  4126a0:	mov    eax,DWORD PTR [rbp-0x4]
  4126a3:	add    rsp,0x80
  4126aa:	pop    rbp
  4126ab:	ret    
  4126ac:	nop    DWORD PTR [rax+0x0]
  4126b0:	push   rbp
  4126b1:	mov    rbp,rsp
  4126b4:	sub    rsp,0x30
  4126b8:	mov    ax,si
  4126bb:	mov    QWORD PTR [rbp-0x10],rdi
  4126bf:	mov    WORD PTR [rbp-0x12],ax
  4126c3:	movsx  esi,WORD PTR [rbp-0x12]
  4126c7:	cmp    esi,0x96
  4126cd:	jne    4126df <test_add_set_defaults@@Base+0x27f>
  4126d3:	mov    DWORD PTR [rbp-0x4],0x0
  4126da:	jmp    41272b <test_add_set_defaults@@Base+0x2cb>
  4126df:	mov    eax,0x2
  4126e4:	mov    edx,eax
  4126e6:	mov    rdi,QWORD PTR [rbp-0x10]
  4126ea:	mov    esi,0x1
  4126ef:	mov    ecx,0x2
  4126f4:	call   41d6d0 <flatcc_builder_table_add@@Base>
  4126f9:	mov    QWORD PTR [rbp-0x20],rax
  4126fd:	cmp    rax,0x0
  412701:	jne    412713 <test_add_set_defaults@@Base+0x2b3>
  412707:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41270e:	jmp    41272b <test_add_set_defaults@@Base+0x2cb>
  412713:	mov    rdi,QWORD PTR [rbp-0x20]
  412717:	movsx  esi,WORD PTR [rbp-0x12]
  41271b:	call   4153e0 <main@@Base+0xff0>
  412720:	mov    DWORD PTR [rbp-0x4],0x0
  412727:	mov    QWORD PTR [rbp-0x28],rax
  41272b:	mov    eax,DWORD PTR [rbp-0x4]
  41272e:	add    rsp,0x30
  412732:	pop    rbp
  412733:	ret    
  412734:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41273e:	xchg   ax,ax
  412740:	push   rbp
  412741:	mov    rbp,rsp
  412744:	sub    rsp,0x20
  412748:	mov    QWORD PTR [rbp-0x8],rdi
  41274c:	mov    WORD PTR [rbp-0xa],0x0
  412752:	cmp    QWORD PTR [rbp-0x8],0x0
  412757:	je     412771 <test_add_set_defaults@@Base+0x311>
  41275d:	mov    al,0x1
  41275f:	test   al,0x1
  412761:	jne    41276c <test_add_set_defaults@@Base+0x30c>
  412767:	jmp    412771 <test_add_set_defaults@@Base+0x311>
  41276c:	jmp    412790 <test_add_set_defaults@@Base+0x330>
  412771:	lea    rdi,[rip+0x13320]        # 425a98 <_IO_stdin_used@@Base+0x2a98>
  412778:	lea    rsi,[rip+0x1333f]        # 425abe <_IO_stdin_used@@Base+0x2abe>
  41277f:	mov    edx,0x2c1
  412784:	lea    rcx,[rip+0x15240]        # 4279cb <_IO_stdin_used@@Base+0x49cb>
  41278b:	call   404090 <__assert_fail@plt>
  412790:	mov    WORD PTR [rbp-0xc],0x6
  412796:	mov    rax,QWORD PTR [rbp-0x8]
  41279a:	mov    rcx,QWORD PTR [rbp-0x8]
  41279e:	mov    rdi,rcx
  4127a1:	mov    QWORD PTR [rbp-0x20],rax
  4127a5:	call   414960 <main@@Base+0x570>
  4127aa:	xor    edx,edx
  4127ac:	mov    ecx,edx
  4127ae:	movsxd rdi,eax
  4127b1:	sub    rcx,rdi
  4127b4:	mov    rdi,QWORD PTR [rbp-0x20]
  4127b8:	add    rdi,rcx
  4127bb:	mov    QWORD PTR [rbp-0x18],rdi
  4127bf:	mov    rcx,QWORD PTR [rbp-0x18]
  4127c3:	mov    rdi,rcx
  4127c6:	call   414980 <main@@Base+0x590>
  4127cb:	movzx  edx,ax
  4127ce:	mov    ecx,edx
  4127d0:	movzx  edx,WORD PTR [rbp-0xc]
  4127d4:	add    edx,0x3
  4127d7:	movsxd rdi,edx
  4127da:	shl    rdi,0x1
  4127de:	cmp    rcx,rdi
  4127e1:	jb     412809 <test_add_set_defaults@@Base+0x3a9>
  4127e7:	mov    rax,QWORD PTR [rbp-0x18]
  4127eb:	movzx  ecx,WORD PTR [rbp-0xc]
  4127ef:	movsxd rdx,ecx
  4127f2:	shl    rdx,0x1
  4127f6:	add    rax,rdx
  4127f9:	add    rax,0x4
  4127fd:	mov    rdi,rax
  412800:	call   414980 <main@@Base+0x590>
  412805:	mov    WORD PTR [rbp-0xa],ax
  412809:	movzx  eax,WORD PTR [rbp-0xa]
  41280d:	cmp    eax,0x0
  412810:	setne  cl
  412813:	and    cl,0x1
  412816:	movzx  eax,cl
  412819:	add    rsp,0x20
  41281d:	pop    rbp
  41281e:	ret    
  41281f:	nop
  412820:	push   rbp
  412821:	mov    rbp,rsp
  412824:	sub    rsp,0x30
  412828:	mov    ax,si
  41282b:	mov    esi,0x2
  412830:	mov    edx,esi
  412832:	mov    QWORD PTR [rbp-0x10],rdi
  412836:	mov    WORD PTR [rbp-0x12],ax
  41283a:	mov    rdi,QWORD PTR [rbp-0x10]
  41283e:	mov    esi,0x2
  412843:	mov    DWORD PTR [rbp-0x24],esi
  412846:	mov    ecx,DWORD PTR [rbp-0x24]
  412849:	call   41d6d0 <flatcc_builder_table_add@@Base>
  41284e:	mov    QWORD PTR [rbp-0x20],rax
  412852:	cmp    rax,0x0
  412856:	jne    412868 <test_add_set_defaults@@Base+0x408>
  41285c:	mov    DWORD PTR [rbp-0x4],0xffffffff
  412863:	jmp    412880 <test_add_set_defaults@@Base+0x420>
  412868:	mov    rdi,QWORD PTR [rbp-0x20]
  41286c:	movsx  esi,WORD PTR [rbp-0x12]
  412870:	call   4153e0 <main@@Base+0xff0>
  412875:	mov    DWORD PTR [rbp-0x4],0x0
  41287c:	mov    QWORD PTR [rbp-0x30],rax
  412880:	mov    eax,DWORD PTR [rbp-0x4]
  412883:	add    rsp,0x30
  412887:	pop    rbp
  412888:	ret    
  412889:	nop    DWORD PTR [rax+0x0]
  412890:	push   rbp
  412891:	mov    rbp,rsp
  412894:	sub    rsp,0x30
  412898:	mov    ax,si
  41289b:	mov    esi,0x2
  4128a0:	mov    edx,esi
  4128a2:	mov    QWORD PTR [rbp-0x10],rdi
  4128a6:	mov    WORD PTR [rbp-0x12],ax
  4128aa:	mov    rdi,QWORD PTR [rbp-0x10]
  4128ae:	mov    esi,0x1
  4128b3:	mov    ecx,0x2
  4128b8:	call   41d6d0 <flatcc_builder_table_add@@Base>
  4128bd:	mov    QWORD PTR [rbp-0x20],rax
  4128c1:	cmp    rax,0x0
  4128c5:	jne    4128d7 <test_add_set_defaults@@Base+0x477>
  4128cb:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4128d2:	jmp    4128ef <test_add_set_defaults@@Base+0x48f>
  4128d7:	mov    rdi,QWORD PTR [rbp-0x20]
  4128db:	movsx  esi,WORD PTR [rbp-0x12]
  4128df:	call   4153e0 <main@@Base+0xff0>
  4128e4:	mov    DWORD PTR [rbp-0x4],0x0
  4128eb:	mov    QWORD PTR [rbp-0x28],rax
  4128ef:	mov    eax,DWORD PTR [rbp-0x4]
  4128f2:	add    rsp,0x30
  4128f6:	pop    rbp
  4128f7:	ret    
  4128f8:	nop    DWORD PTR [rax+rax*1+0x0]
  412900:	push   rbp
  412901:	mov    rbp,rsp
  412904:	sub    rsp,0x30
  412908:	mov    al,sil
  41290b:	mov    esi,0x1
  412910:	mov    edx,esi
  412912:	mov    QWORD PTR [rbp-0x10],rdi
  412916:	mov    BYTE PTR [rbp-0x11],al
  412919:	mov    rdi,QWORD PTR [rbp-0x10]
  41291d:	mov    esi,0x6
  412922:	mov    ecx,0x1
  412927:	call   41d6d0 <flatcc_builder_table_add@@Base>
  41292c:	mov    QWORD PTR [rbp-0x20],rax
  412930:	cmp    rax,0x0
  412934:	jne    412946 <test_add_set_defaults@@Base+0x4e6>
  41293a:	mov    DWORD PTR [rbp-0x4],0xffffffff
  412941:	jmp    41295e <test_add_set_defaults@@Base+0x4fe>
  412946:	mov    rdi,QWORD PTR [rbp-0x20]
  41294a:	movsx  esi,BYTE PTR [rbp-0x11]
  41294e:	call   416eb0 <main@@Base+0x2ac0>
  412953:	mov    DWORD PTR [rbp-0x4],0x0
  41295a:	mov    QWORD PTR [rbp-0x28],rax
  41295e:	mov    eax,DWORD PTR [rbp-0x4]
  412961:	add    rsp,0x30
  412965:	pop    rbp
  412966:	ret    
  412967:	nop    WORD PTR [rax+rax*1+0x0]

0000000000412970 <test_nested_buffer@@Base>:
  412970:	push   rbp
  412971:	mov    rbp,rsp
  412974:	sub    rsp,0x60
  412978:	mov    QWORD PTR [rbp-0x10],rdi
  41297c:	mov    rdi,QWORD PTR [rbp-0x10]
  412980:	call   4197b0 <flatcc_builder_reset@@Base>
  412985:	mov    rdi,QWORD PTR [rbp-0x10]
  412989:	mov    DWORD PTR [rbp-0x34],eax
  41298c:	call   40a2c0 <gen_monster@@Base+0x780>
  412991:	mov    rdi,QWORD PTR [rbp-0x10]
  412995:	lea    rsi,[rip+0x109bb]        # 423357 <_IO_stdin_used@@Base+0x357>
  41299c:	mov    DWORD PTR [rbp-0x38],eax
  41299f:	call   405c40 <test_empty_monster@@Base+0x1b0>
  4129a4:	mov    rdi,QWORD PTR [rbp-0x10]
  4129a8:	mov    DWORD PTR [rbp-0x3c],eax
  4129ab:	call   412b30 <test_nested_buffer@@Base+0x1c0>
  4129b0:	mov    rdi,QWORD PTR [rbp-0x10]
  4129b4:	lea    rsi,[rip+0x12ca5]        # 425660 <_IO_stdin_used@@Base+0x2660>
  4129bb:	mov    DWORD PTR [rbp-0x40],eax
  4129be:	call   405c40 <test_empty_monster@@Base+0x1b0>
  4129c3:	mov    rdi,QWORD PTR [rbp-0x10]
  4129c7:	mov    DWORD PTR [rbp-0x44],eax
  4129ca:	call   412b80 <test_nested_buffer@@Base+0x210>
  4129cf:	mov    rdi,QWORD PTR [rbp-0x10]
  4129d3:	mov    esi,0xa
  4129d8:	mov    DWORD PTR [rbp-0x48],eax
  4129db:	call   40a310 <gen_monster@@Base+0x7d0>
  4129e0:	mov    rdi,QWORD PTR [rbp-0x10]
  4129e4:	mov    DWORD PTR [rbp-0x4c],eax
  4129e7:	call   40ae60 <gen_monster@@Base+0x1320>
  4129ec:	mov    rdi,QWORD PTR [rbp-0x10]
  4129f0:	lea    rsi,[rbp-0x20]
  4129f4:	mov    DWORD PTR [rbp-0x50],eax
  4129f7:	call   41e9b0 <flatcc_builder_get_direct_buffer@@Base>
  4129fc:	mov    rsi,QWORD PTR [rip+0x1f5f5]        # 431ff8 <stderr@GLIBC_2.2.5>
  412a03:	mov    QWORD PTR [rbp-0x18],rax
  412a07:	mov    rax,QWORD PTR [rbp-0x18]
  412a0b:	mov    rdx,QWORD PTR [rbp-0x20]
  412a0f:	mov    rcx,QWORD PTR [rsi]
  412a12:	lea    rdi,[rip+0x12c57]        # 425670 <_IO_stdin_used@@Base+0x2670>
  412a19:	mov    rsi,rax
  412a1c:	call   404db0 <test_type_aliases@@Base+0x4b0>
  412a21:	mov    rdi,QWORD PTR [rbp-0x18]
  412a25:	call   4044a0 <verify_empty_monster@@Base+0x280>
  412a2a:	mov    QWORD PTR [rbp-0x28],rax
  412a2e:	mov    rdi,QWORD PTR [rbp-0x28]
  412a32:	call   408050 <verify_monster@@Base+0x1440>
  412a37:	lea    rsi,[rip+0x10919]        # 423357 <_IO_stdin_used@@Base+0x357>
  412a3e:	mov    rdi,rax
  412a41:	call   4040d0 <strcmp@plt>
  412a46:	cmp    eax,0x0
  412a49:	je     412a6c <test_nested_buffer@@Base+0xfc>
  412a4f:	lea    rdi,[rip+0x12c2c]        # 425682 <_IO_stdin_used@@Base+0x2682>
  412a56:	mov    al,0x0
  412a58:	call   404070 <printf@plt>
  412a5d:	mov    DWORD PTR [rbp-0x4],0xffffffff
  412a64:	mov    DWORD PTR [rbp-0x54],eax
  412a67:	jmp    412b27 <test_nested_buffer@@Base+0x1b7>
  412a6c:	mov    rdi,QWORD PTR [rbp-0x28]
  412a70:	call   412bd0 <test_nested_buffer@@Base+0x260>
  412a75:	mov    QWORD PTR [rbp-0x30],rax
  412a79:	mov    rdi,QWORD PTR [rbp-0x28]
  412a7d:	call   404510 <verify_empty_monster@@Base+0x2f0>
  412a82:	movsx  ecx,ax
  412a85:	cmp    ecx,0xa
  412a88:	je     412aab <test_nested_buffer@@Base+0x13b>
  412a8e:	lea    rdi,[rip+0x12c09]        # 42569e <_IO_stdin_used@@Base+0x269e>
  412a95:	mov    al,0x0
  412a97:	call   404070 <printf@plt>
  412a9c:	mov    DWORD PTR [rbp-0x4],0xffffffff
  412aa3:	mov    DWORD PTR [rbp-0x58],eax
  412aa6:	jmp    412b27 <test_nested_buffer@@Base+0x1b7>
  412aab:	mov    rdi,QWORD PTR [rbp-0x30]
  412aaf:	call   408050 <verify_monster@@Base+0x1440>
  412ab4:	cmp    rax,0x0
  412ab8:	je     412ac3 <test_nested_buffer@@Base+0x153>
  412abe:	jmp    412ae2 <test_nested_buffer@@Base+0x172>
  412ac3:	lea    rdi,[rip+0x12bf9]        # 4256c3 <_IO_stdin_used@@Base+0x26c3>
  412aca:	lea    rsi,[rip+0x1111e]        # 423bef <_IO_stdin_used@@Base+0xbef>
  412ad1:	mov    edx,0x88c
  412ad6:	lea    rcx,[rip+0x12bff]        # 4256dc <_IO_stdin_used@@Base+0x26dc>
  412add:	call   404090 <__assert_fail@plt>
  412ae2:	mov    rdi,QWORD PTR [rbp-0x30]
  412ae6:	call   408050 <verify_monster@@Base+0x1440>
  412aeb:	lea    rsi,[rip+0x12b6e]        # 425660 <_IO_stdin_used@@Base+0x2660>
  412af2:	mov    rdi,rax
  412af5:	call   4040d0 <strcmp@plt>
  412afa:	cmp    eax,0x0
  412afd:	je     412b20 <test_nested_buffer@@Base+0x1b0>
  412b03:	lea    rdi,[rip+0x12bfd]        # 425707 <_IO_stdin_used@@Base+0x2707>
  412b0a:	mov    al,0x0
  412b0c:	call   404070 <printf@plt>
  412b11:	mov    DWORD PTR [rbp-0x4],0xffffffff
  412b18:	mov    DWORD PTR [rbp-0x5c],eax
  412b1b:	jmp    412b27 <test_nested_buffer@@Base+0x1b7>
  412b20:	mov    DWORD PTR [rbp-0x4],0x0
  412b27:	mov    eax,DWORD PTR [rbp-0x4]
  412b2a:	add    rsp,0x60
  412b2e:	pop    rbp
  412b2f:	ret    
  412b30:	push   rbp
  412b31:	mov    rbp,rsp
  412b34:	sub    rsp,0x10
  412b38:	mov    QWORD PTR [rbp-0x8],rdi
  412b3c:	mov    rdi,QWORD PTR [rbp-0x8]
  412b40:	lea    rsi,[rip+0x10639]        # 423180 <_IO_stdin_used@@Base+0x180>
  412b47:	call   405bf0 <test_empty_monster@@Base+0x160>
  412b4c:	cmp    eax,0x0
  412b4f:	je     412b62 <test_nested_buffer@@Base+0x1f2>
  412b55:	mov    eax,0xffffffff
  412b5a:	mov    DWORD PTR [rbp-0xc],eax
  412b5d:	jmp    412b6e <test_nested_buffer@@Base+0x1fe>
  412b62:	mov    rdi,QWORD PTR [rbp-0x8]
  412b66:	call   405c20 <test_empty_monster@@Base+0x190>
  412b6b:	mov    DWORD PTR [rbp-0xc],eax
  412b6e:	mov    eax,DWORD PTR [rbp-0xc]
  412b71:	add    rsp,0x10
  412b75:	pop    rbp
  412b76:	ret    
  412b77:	nop    WORD PTR [rax+rax*1+0x0]
  412b80:	push   rbp
  412b81:	mov    rbp,rsp
  412b84:	sub    rsp,0x20
  412b88:	mov    QWORD PTR [rbp-0x8],rdi
  412b8c:	mov    rdi,QWORD PTR [rbp-0x8]
  412b90:	mov    rax,QWORD PTR [rbp-0x8]
  412b94:	mov    rcx,QWORD PTR [rbp-0x8]
  412b98:	mov    QWORD PTR [rbp-0x10],rdi
  412b9c:	mov    rdi,rcx
  412b9f:	mov    QWORD PTR [rbp-0x18],rax
  412ba3:	call   405c80 <test_empty_monster@@Base+0x1f0>
  412ba8:	mov    rdi,QWORD PTR [rbp-0x18]
  412bac:	mov    esi,eax
  412bae:	call   405ce0 <test_empty_monster@@Base+0x250>
  412bb3:	mov    rdi,QWORD PTR [rbp-0x10]
  412bb7:	mov    esi,eax
  412bb9:	call   418ea0 <main@@Base+0x4ab0>
  412bbe:	add    rsp,0x20
  412bc2:	pop    rbp
  412bc3:	ret    
  412bc4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412bce:	xchg   ax,ax
  412bd0:	push   rbp
  412bd1:	mov    rbp,rsp
  412bd4:	sub    rsp,0x30
  412bd8:	mov    QWORD PTR [rbp-0x8],rdi
  412bdc:	lea    rdi,[rip+0x1059d]        # 423180 <_IO_stdin_used@@Base+0x180>
  412be3:	mov    QWORD PTR [rbp-0x10],rdi
  412be7:	mov    rdi,QWORD PTR [rbp-0x8]
  412beb:	call   418f00 <main@@Base+0x4b10>
  412bf0:	mov    QWORD PTR [rbp-0x18],rax
  412bf4:	cmp    QWORD PTR [rbp-0x18],0x0
  412bf9:	je     412c15 <test_nested_buffer@@Base+0x2a5>
  412bff:	mov    rdi,QWORD PTR [rbp-0x18]
  412c03:	mov    rsi,QWORD PTR [rbp-0x10]
  412c07:	call   406a20 <test_typed_table_with_emptystruct@@Base+0x470>
  412c0c:	cmp    eax,0x0
  412c0f:	jne    412c22 <test_nested_buffer@@Base+0x2b2>
  412c15:	xor    eax,eax
  412c17:	mov    ecx,eax
  412c19:	mov    QWORD PTR [rbp-0x20],rcx
  412c1d:	jmp    412c42 <test_nested_buffer@@Base+0x2d2>
  412c22:	mov    rax,QWORD PTR [rbp-0x18]
  412c26:	mov    rdi,QWORD PTR [rbp-0x18]
  412c2a:	mov    QWORD PTR [rbp-0x28],rax
  412c2e:	call   414930 <main@@Base+0x540>
  412c33:	mov    eax,eax
  412c35:	mov    edi,eax
  412c37:	mov    rcx,QWORD PTR [rbp-0x28]
  412c3b:	add    rcx,rdi
  412c3e:	mov    QWORD PTR [rbp-0x20],rcx
  412c42:	mov    rax,QWORD PTR [rbp-0x20]
  412c46:	add    rsp,0x30
  412c4a:	pop    rbp
  412c4b:	ret    
  412c4c:	nop    DWORD PTR [rax+0x0]

0000000000412c50 <test_nested_buffer_first@@Base>:
  412c50:	push   rbp
  412c51:	mov    rbp,rsp
  412c54:	sub    rsp,0x60
  412c58:	mov    QWORD PTR [rbp-0x10],rdi
  412c5c:	mov    rdi,QWORD PTR [rbp-0x10]
  412c60:	call   4197b0 <flatcc_builder_reset@@Base>
  412c65:	mov    rdi,QWORD PTR [rbp-0x10]
  412c69:	mov    DWORD PTR [rbp-0x34],eax
  412c6c:	call   40a2c0 <gen_monster@@Base+0x780>
  412c71:	mov    rdi,QWORD PTR [rbp-0x10]
  412c75:	mov    DWORD PTR [rbp-0x38],eax
  412c78:	call   412b30 <test_nested_buffer@@Base+0x1c0>
  412c7d:	mov    rdi,QWORD PTR [rbp-0x10]
  412c81:	lea    rsi,[rip+0x129d8]        # 425660 <_IO_stdin_used@@Base+0x2660>
  412c88:	mov    DWORD PTR [rbp-0x3c],eax
  412c8b:	call   405c40 <test_empty_monster@@Base+0x1b0>
  412c90:	mov    rdi,QWORD PTR [rbp-0x10]
  412c94:	mov    DWORD PTR [rbp-0x40],eax
  412c97:	call   412b80 <test_nested_buffer@@Base+0x210>
  412c9c:	mov    rdi,QWORD PTR [rbp-0x10]
  412ca0:	mov    esi,0xa
  412ca5:	mov    DWORD PTR [rbp-0x44],eax
  412ca8:	call   40a310 <gen_monster@@Base+0x7d0>
  412cad:	mov    rdi,QWORD PTR [rbp-0x10]
  412cb1:	lea    rsi,[rip+0x1069f]        # 423357 <_IO_stdin_used@@Base+0x357>
  412cb8:	mov    DWORD PTR [rbp-0x48],eax
  412cbb:	call   405c40 <test_empty_monster@@Base+0x1b0>
  412cc0:	mov    rdi,QWORD PTR [rbp-0x10]
  412cc4:	mov    DWORD PTR [rbp-0x4c],eax
  412cc7:	call   40ae60 <gen_monster@@Base+0x1320>
  412ccc:	mov    rdi,QWORD PTR [rbp-0x10]
  412cd0:	lea    rsi,[rbp-0x20]
  412cd4:	mov    DWORD PTR [rbp-0x50],eax
  412cd7:	call   41e9b0 <flatcc_builder_get_direct_buffer@@Base>
  412cdc:	mov    rsi,QWORD PTR [rip+0x1f315]        # 431ff8 <stderr@GLIBC_2.2.5>
  412ce3:	mov    QWORD PTR [rbp-0x18],rax
  412ce7:	mov    rax,QWORD PTR [rbp-0x18]
  412ceb:	mov    rdx,QWORD PTR [rbp-0x20]
  412cef:	mov    rcx,QWORD PTR [rsi]
  412cf2:	lea    rdi,[rip+0x12977]        # 425670 <_IO_stdin_used@@Base+0x2670>
  412cf9:	mov    rsi,rax
  412cfc:	call   404db0 <test_type_aliases@@Base+0x4b0>
  412d01:	mov    rdi,QWORD PTR [rbp-0x18]
  412d05:	call   4044a0 <verify_empty_monster@@Base+0x280>
  412d0a:	mov    QWORD PTR [rbp-0x28],rax
  412d0e:	mov    rdi,QWORD PTR [rbp-0x28]
  412d12:	call   408050 <verify_monster@@Base+0x1440>
  412d17:	lea    rsi,[rip+0x10639]        # 423357 <_IO_stdin_used@@Base+0x357>
  412d1e:	mov    rdi,rax
  412d21:	call   4040d0 <strcmp@plt>
  412d26:	cmp    eax,0x0
  412d29:	je     412d4c <test_nested_buffer_first@@Base+0xfc>
  412d2f:	lea    rdi,[rip+0x1294c]        # 425682 <_IO_stdin_used@@Base+0x2682>
  412d36:	mov    al,0x0
  412d38:	call   404070 <printf@plt>
  412d3d:	mov    DWORD PTR [rbp-0x4],0xffffffff
  412d44:	mov    DWORD PTR [rbp-0x54],eax
  412d47:	jmp    412e07 <test_nested_buffer_first@@Base+0x1b7>
  412d4c:	mov    rdi,QWORD PTR [rbp-0x28]
  412d50:	call   412bd0 <test_nested_buffer@@Base+0x260>
  412d55:	mov    QWORD PTR [rbp-0x30],rax
  412d59:	mov    rdi,QWORD PTR [rbp-0x28]
  412d5d:	call   404510 <verify_empty_monster@@Base+0x2f0>
  412d62:	movsx  ecx,ax
  412d65:	cmp    ecx,0xa
  412d68:	je     412d8b <test_nested_buffer_first@@Base+0x13b>
  412d6e:	lea    rdi,[rip+0x12929]        # 42569e <_IO_stdin_used@@Base+0x269e>
  412d75:	mov    al,0x0
  412d77:	call   404070 <printf@plt>
  412d7c:	mov    DWORD PTR [rbp-0x4],0xffffffff
  412d83:	mov    DWORD PTR [rbp-0x58],eax
  412d86:	jmp    412e07 <test_nested_buffer_first@@Base+0x1b7>
  412d8b:	mov    rdi,QWORD PTR [rbp-0x30]
  412d8f:	call   408050 <verify_monster@@Base+0x1440>
  412d94:	cmp    rax,0x0
  412d98:	je     412da3 <test_nested_buffer_first@@Base+0x153>
  412d9e:	jmp    412dc2 <test_nested_buffer_first@@Base+0x172>
  412da3:	lea    rdi,[rip+0x12919]        # 4256c3 <_IO_stdin_used@@Base+0x26c3>
  412daa:	lea    rsi,[rip+0x10e3e]        # 423bef <_IO_stdin_used@@Base+0xbef>
  412db1:	mov    edx,0x8c1
  412db6:	lea    rcx,[rip+0x12968]        # 425725 <_IO_stdin_used@@Base+0x2725>
  412dbd:	call   404090 <__assert_fail@plt>
  412dc2:	mov    rdi,QWORD PTR [rbp-0x30]
  412dc6:	call   408050 <verify_monster@@Base+0x1440>
  412dcb:	lea    rsi,[rip+0x1288e]        # 425660 <_IO_stdin_used@@Base+0x2660>
  412dd2:	mov    rdi,rax
  412dd5:	call   4040d0 <strcmp@plt>
  412dda:	cmp    eax,0x0
  412ddd:	je     412e00 <test_nested_buffer_first@@Base+0x1b0>
  412de3:	lea    rdi,[rip+0x1291d]        # 425707 <_IO_stdin_used@@Base+0x2707>
  412dea:	mov    al,0x0
  412dec:	call   404070 <printf@plt>
  412df1:	mov    DWORD PTR [rbp-0x4],0xffffffff
  412df8:	mov    DWORD PTR [rbp-0x5c],eax
  412dfb:	jmp    412e07 <test_nested_buffer_first@@Base+0x1b7>
  412e00:	mov    DWORD PTR [rbp-0x4],0x0
  412e07:	mov    eax,DWORD PTR [rbp-0x4]
  412e0a:	add    rsp,0x60
  412e0e:	pop    rbp
  412e0f:	ret    

0000000000412e10 <test_nested_buffer_using_nest@@Base>:
  412e10:	push   rbp
  412e11:	mov    rbp,rsp
  412e14:	sub    rsp,0x480
  412e1b:	mov    QWORD PTR [rbp-0x10],rdi
  412e1f:	mov    rdi,QWORD PTR [rbp-0x10]
  412e23:	call   4197b0 <flatcc_builder_reset@@Base>
  412e28:	mov    rdi,QWORD PTR [rbp-0x10]
  412e2c:	mov    DWORD PTR [rbp-0x444],eax
  412e32:	call   40a2c0 <gen_monster@@Base+0x780>
  412e37:	mov    rdi,QWORD PTR [rbp-0x10]
  412e3b:	lea    rsi,[rip+0x1281e]        # 425660 <_IO_stdin_used@@Base+0x2660>
  412e42:	mov    DWORD PTR [rbp-0x448],eax
  412e48:	call   405c40 <test_empty_monster@@Base+0x1b0>
  412e4d:	mov    rdi,QWORD PTR [rbp-0x10]
  412e51:	mov    esi,0x2a
  412e56:	mov    DWORD PTR [rbp-0x44c],eax
  412e5c:	call   4126b0 <test_add_set_defaults@@Base+0x250>
  412e61:	mov    rdi,QWORD PTR [rbp-0x10]
  412e65:	mov    DWORD PTR [rbp-0x450],eax
  412e6b:	call   40ae60 <gen_monster@@Base+0x1320>
  412e70:	mov    rdi,QWORD PTR [rbp-0x10]
  412e74:	mov    DWORD PTR [rbp-0x454],eax
  412e7a:	call   41e830 <flatcc_builder_get_buffer_size@@Base>
  412e7f:	mov    esi,0x400
  412e84:	mov    edx,esi
  412e86:	lea    rsi,[rbp-0x420]
  412e8d:	mov    QWORD PTR [rbp-0x430],rax
  412e94:	mov    rdi,QWORD PTR [rbp-0x10]
  412e98:	call   41ea90 <flatcc_builder_copy_buffer@@Base>
  412e9d:	cmp    rax,0x0
  412ea1:	jne    412ec7 <test_nested_buffer_using_nest@@Base+0xb7>
  412ea7:	lea    rdi,[rip+0x128a8]        # 425756 <_IO_stdin_used@@Base+0x2756>
  412eae:	mov    al,0x0
  412eb0:	call   404070 <printf@plt>
  412eb5:	mov    DWORD PTR [rbp-0x4],0xffffffff
  412ebc:	mov    DWORD PTR [rbp-0x458],eax
  412ec2:	jmp    4130d1 <test_nested_buffer_using_nest@@Base+0x2c1>
  412ec7:	mov    rdi,QWORD PTR [rbp-0x10]
  412ecb:	call   4197b0 <flatcc_builder_reset@@Base>
  412ed0:	mov    rdi,QWORD PTR [rbp-0x10]
  412ed4:	mov    DWORD PTR [rbp-0x45c],eax
  412eda:	call   40a2c0 <gen_monster@@Base+0x780>
  412edf:	xor    ecx,ecx
  412ee1:	lea    rsi,[rbp-0x420]
  412ee8:	mov    rdi,QWORD PTR [rbp-0x10]
  412eec:	mov    rdx,QWORD PTR [rbp-0x430]
  412ef3:	mov    DWORD PTR [rbp-0x460],eax
  412ef9:	call   4130e0 <test_nested_buffer_using_nest@@Base+0x2d0>
  412efe:	mov    rdi,QWORD PTR [rbp-0x10]
  412f02:	mov    esi,0xa
  412f07:	mov    DWORD PTR [rbp-0x464],eax
  412f0d:	call   40a310 <gen_monster@@Base+0x7d0>
  412f12:	mov    rdi,QWORD PTR [rbp-0x10]
  412f16:	lea    rsi,[rip+0x1043a]        # 423357 <_IO_stdin_used@@Base+0x357>
  412f1d:	mov    DWORD PTR [rbp-0x468],eax
  412f23:	call   405c40 <test_empty_monster@@Base+0x1b0>
  412f28:	mov    rdi,QWORD PTR [rbp-0x10]
  412f2c:	mov    DWORD PTR [rbp-0x46c],eax
  412f32:	call   40ae60 <gen_monster@@Base+0x1320>
  412f37:	mov    rdi,QWORD PTR [rbp-0x10]
  412f3b:	lea    rsi,[rbp-0x428]
  412f42:	mov    DWORD PTR [rbp-0x470],eax
  412f48:	call   41e9b0 <flatcc_builder_get_direct_buffer@@Base>
  412f4d:	mov    rdx,QWORD PTR [rip+0x1f0a4]        # 431ff8 <stderr@GLIBC_2.2.5>
  412f54:	mov    QWORD PTR [rbp-0x18],rax
  412f58:	mov    rsi,QWORD PTR [rbp-0x18]
  412f5c:	mov    rax,QWORD PTR [rbp-0x428]
  412f63:	mov    rcx,QWORD PTR [rdx]
  412f66:	lea    rdi,[rip+0x12804]        # 425771 <_IO_stdin_used@@Base+0x2771>
  412f6d:	mov    rdx,rax
  412f70:	call   404db0 <test_type_aliases@@Base+0x4b0>
  412f75:	mov    rdi,QWORD PTR [rbp-0x18]
  412f79:	call   4044a0 <verify_empty_monster@@Base+0x280>
  412f7e:	mov    QWORD PTR [rbp-0x438],rax
  412f85:	mov    rdi,QWORD PTR [rbp-0x438]
  412f8c:	call   408050 <verify_monster@@Base+0x1440>
  412f91:	lea    rsi,[rip+0x103bf]        # 423357 <_IO_stdin_used@@Base+0x357>
  412f98:	mov    rdi,rax
  412f9b:	call   4040d0 <strcmp@plt>
  412fa0:	cmp    eax,0x0
  412fa3:	je     412fc9 <test_nested_buffer_using_nest@@Base+0x1b9>
  412fa9:	lea    rdi,[rip+0x126d2]        # 425682 <_IO_stdin_used@@Base+0x2682>
  412fb0:	mov    al,0x0
  412fb2:	call   404070 <printf@plt>
  412fb7:	mov    DWORD PTR [rbp-0x4],0xffffffff
  412fbe:	mov    DWORD PTR [rbp-0x474],eax
  412fc4:	jmp    4130d1 <test_nested_buffer_using_nest@@Base+0x2c1>
  412fc9:	mov    rdi,QWORD PTR [rbp-0x438]
  412fd0:	call   412bd0 <test_nested_buffer@@Base+0x260>
  412fd5:	mov    QWORD PTR [rbp-0x440],rax
  412fdc:	mov    rdi,QWORD PTR [rbp-0x438]
  412fe3:	call   404510 <verify_empty_monster@@Base+0x2f0>
  412fe8:	movsx  ecx,ax
  412feb:	cmp    ecx,0xa
  412fee:	je     413014 <test_nested_buffer_using_nest@@Base+0x204>
  412ff4:	lea    rdi,[rip+0x126a3]        # 42569e <_IO_stdin_used@@Base+0x269e>
  412ffb:	mov    al,0x0
  412ffd:	call   404070 <printf@plt>
  413002:	mov    DWORD PTR [rbp-0x4],0xffffffff
  413009:	mov    DWORD PTR [rbp-0x478],eax
  41300f:	jmp    4130d1 <test_nested_buffer_using_nest@@Base+0x2c1>
  413014:	mov    rdi,QWORD PTR [rbp-0x440]
  41301b:	call   408050 <verify_monster@@Base+0x1440>
  413020:	cmp    rax,0x0
  413024:	je     41302f <test_nested_buffer_using_nest@@Base+0x21f>
  41302a:	jmp    41304e <test_nested_buffer_using_nest@@Base+0x23e>
  41302f:	lea    rdi,[rip+0x1268d]        # 4256c3 <_IO_stdin_used@@Base+0x26c3>
  413036:	lea    rsi,[rip+0x10bb2]        # 423bef <_IO_stdin_used@@Base+0xbef>
  41303d:	mov    edx,0x8fa
  413042:	lea    rcx,[rip+0x1274a]        # 425793 <_IO_stdin_used@@Base+0x2793>
  413049:	call   404090 <__assert_fail@plt>
  41304e:	mov    rdi,QWORD PTR [rbp-0x440]
  413055:	call   408050 <verify_monster@@Base+0x1440>
  41305a:	lea    rsi,[rip+0x125ff]        # 425660 <_IO_stdin_used@@Base+0x2660>
  413061:	mov    rdi,rax
  413064:	call   4040d0 <strcmp@plt>
  413069:	cmp    eax,0x0
  41306c:	je     413092 <test_nested_buffer_using_nest@@Base+0x282>
  413072:	lea    rdi,[rip+0x1268e]        # 425707 <_IO_stdin_used@@Base+0x2707>
  413079:	mov    al,0x0
  41307b:	call   404070 <printf@plt>
  413080:	mov    DWORD PTR [rbp-0x4],0xffffffff
  413087:	mov    DWORD PTR [rbp-0x47c],eax
  41308d:	jmp    4130d1 <test_nested_buffer_using_nest@@Base+0x2c1>
  413092:	mov    rdi,QWORD PTR [rbp-0x440]
  413099:	call   408660 <verify_monster@@Base+0x1a50>
  41309e:	movsx  ecx,ax
  4130a1:	cmp    ecx,0x2a
  4130a4:	je     4130ca <test_nested_buffer_using_nest@@Base+0x2ba>
  4130aa:	lea    rdi,[rip+0x12718]        # 4257c9 <_IO_stdin_used@@Base+0x27c9>
  4130b1:	mov    al,0x0
  4130b3:	call   404070 <printf@plt>
  4130b8:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4130bf:	mov    DWORD PTR [rbp-0x480],eax
  4130c5:	jmp    4130d1 <test_nested_buffer_using_nest@@Base+0x2c1>
  4130ca:	mov    DWORD PTR [rbp-0x4],0x0
  4130d1:	mov    eax,DWORD PTR [rbp-0x4]
  4130d4:	add    rsp,0x480
  4130db:	pop    rbp
  4130dc:	ret    
  4130dd:	nop    DWORD PTR [rax]
  4130e0:	push   rbp
  4130e1:	mov    rbp,rsp
  4130e4:	sub    rsp,0x50
  4130e8:	mov    ax,cx
  4130eb:	mov    QWORD PTR [rbp-0x8],rdi
  4130ef:	mov    QWORD PTR [rbp-0x10],rsi
  4130f3:	mov    QWORD PTR [rbp-0x18],rdx
  4130f7:	mov    WORD PTR [rbp-0x1a],ax
  4130fb:	mov    rdi,QWORD PTR [rbp-0x8]
  4130ff:	mov    rdx,QWORD PTR [rbp-0x8]
  413103:	mov    rsi,QWORD PTR [rbp-0x10]
  413107:	mov    r8,QWORD PTR [rbp-0x18]
  41310b:	movzx  ecx,WORD PTR [rbp-0x1a]
  41310f:	cmp    ecx,0x0
  413112:	mov    QWORD PTR [rbp-0x28],rdi
  413116:	mov    QWORD PTR [rbp-0x30],rdx
  41311a:	mov    QWORD PTR [rbp-0x38],rsi
  41311e:	mov    QWORD PTR [rbp-0x40],r8
  413122:	je     413134 <test_nested_buffer_using_nest@@Base+0x324>
  413128:	movzx  eax,WORD PTR [rbp-0x1a]
  41312c:	mov    DWORD PTR [rbp-0x44],eax
  41312f:	jmp    413141 <test_nested_buffer_using_nest@@Base+0x331>
  413134:	mov    eax,0x8
  413139:	mov    DWORD PTR [rbp-0x44],eax
  41313c:	jmp    413141 <test_nested_buffer_using_nest@@Base+0x331>
  413141:	mov    eax,DWORD PTR [rbp-0x44]
  413144:	mov    ecx,0x1
  413149:	mov    edx,0xffffffff
  41314e:	mov    r9d,edx
  413151:	mov    si,ax
  413154:	mov    rdi,QWORD PTR [rbp-0x30]
  413158:	mov    r8,QWORD PTR [rbp-0x38]
  41315c:	mov    WORD PTR [rbp-0x46],si
  413160:	mov    rsi,r8
  413163:	mov    rdx,QWORD PTR [rbp-0x40]
  413167:	mov    r10w,WORD PTR [rbp-0x46]
  41316c:	movzx  r8d,r10w
  413170:	call   41ccb0 <flatcc_builder_create_vector@@Base>
  413175:	mov    rdi,QWORD PTR [rbp-0x28]
  413179:	mov    esi,eax
  41317b:	call   418ea0 <main@@Base+0x4ab0>
  413180:	add    rsp,0x50
  413184:	pop    rbp
  413185:	ret    
  413186:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000413190 <verify_include@@Base>:
  413190:	push   rbp
  413191:	mov    rbp,rsp
  413194:	xor    eax,eax
  413196:	mov    QWORD PTR [rbp-0x8],rdi
  41319a:	pop    rbp
  41319b:	ret    
  41319c:	nop    DWORD PTR [rax+0x0]

00000000004131a0 <test_struct_buffer@@Base>:
  4131a0:	push   rbp
  4131a1:	mov    rbp,rsp
  4131a4:	sub    rsp,0xd0
  4131ab:	mov    QWORD PTR [rbp-0x10],rdi
  4131af:	mov    rdi,QWORD PTR [rbp-0x10]
  4131b3:	call   4197b0 <flatcc_builder_reset@@Base>
  4131b8:	vmovss xmm0,DWORD PTR [rip+0xfe4c]        # 42300c <_IO_stdin_used@@Base+0xc>
  4131c0:	vmovss xmm1,DWORD PTR [rip+0xfe48]        # 423010 <_IO_stdin_used@@Base+0x10>
  4131c8:	vmovss xmm2,DWORD PTR [rip+0xfe48]        # 423018 <_IO_stdin_used@@Base+0x18>
  4131d0:	vmovsd xmm3,QWORD PTR [rip+0xfe50]        # 423028 <_IO_stdin_used@@Base+0x28>
  4131d8:	mov    rdi,QWORD PTR [rbp-0x10]
  4131dc:	mov    esi,0x8
  4131e1:	mov    edx,0xaaa
  4131e6:	mov    ecx,0xffffffef
  4131eb:	mov    DWORD PTR [rbp-0x9c],eax
  4131f1:	call   4134e0 <test_struct_buffer@@Base+0x340>
  4131f6:	mov    rdi,QWORD PTR [rbp-0x10]
  4131fa:	mov    DWORD PTR [rbp-0xa0],eax
  413200:	call   41e830 <flatcc_builder_get_buffer_size@@Base>
  413205:	mov    QWORD PTR [rbp-0x88],rax
  41320c:	cmp    QWORD PTR [rbp-0x88],0x30
  413214:	jne    41321f <test_struct_buffer@@Base+0x7f>
  41321a:	jmp    41323e <test_struct_buffer@@Base+0x9e>
  41321f:	lea    rdi,[rip+0x125c8]        # 4257ee <_IO_stdin_used@@Base+0x27ee>
  413226:	lea    rsi,[rip+0x109c2]        # 423bef <_IO_stdin_used@@Base+0xbef>
  41322d:	mov    edx,0x923
  413232:	lea    rcx,[rip+0x125c0]        # 4257f9 <_IO_stdin_used@@Base+0x27f9>
  413239:	call   404090 <__assert_fail@plt>
  41323e:	mov    rax,QWORD PTR [rbp-0x88]
  413245:	mov    ecx,eax
  413247:	lea    rdi,[rip+0x125d6]        # 425824 <_IO_stdin_used@@Base+0x2824>
  41324e:	mov    esi,ecx
  413250:	mov    al,0x0
  413252:	call   404070 <printf@plt>
  413257:	mov    rdi,QWORD PTR [rbp-0x10]
  41325b:	mov    DWORD PTR [rbp-0xa4],eax
  413261:	call   41edc0 <flatcc_builder_get_emit_context@@Base>
  413266:	mov    rdi,rax
  413269:	call   413580 <test_struct_buffer@@Base+0x3e0>
  41326e:	cmp    rax,QWORD PTR [rbp-0x88]
  413275:	jne    413280 <test_struct_buffer@@Base+0xe0>
  41327b:	jmp    41329f <test_struct_buffer@@Base+0xff>
  413280:	lea    rdi,[rip+0x125ba]        # 425841 <_IO_stdin_used@@Base+0x2841>
  413287:	lea    rsi,[rip+0x10961]        # 423bef <_IO_stdin_used@@Base+0xbef>
  41328e:	mov    edx,0x925
  413293:	lea    rcx,[rip+0x1255f]        # 4257f9 <_IO_stdin_used@@Base+0x27f9>
  41329a:	call   404090 <__assert_fail@plt>
  41329f:	mov    eax,0x64
  4132a4:	mov    edx,eax
  4132a6:	lea    rsi,[rbp-0x80]
  4132aa:	mov    rdi,QWORD PTR [rbp-0x10]
  4132ae:	call   41ea90 <flatcc_builder_copy_buffer@@Base>
  4132b3:	cmp    rax,0x0
  4132b7:	jne    4132dd <test_struct_buffer@@Base+0x13d>
  4132bd:	lea    rdi,[rip+0x125c8]        # 42588c <_IO_stdin_used@@Base+0x288c>
  4132c4:	mov    al,0x0
  4132c6:	call   404070 <printf@plt>
  4132cb:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4132d2:	mov    DWORD PTR [rbp-0xa8],eax
  4132d8:	jmp    4134cf <test_struct_buffer@@Base+0x32f>
  4132dd:	mov    rax,QWORD PTR [rip+0x1ed14]        # 431ff8 <stderr@GLIBC_2.2.5>
  4132e4:	lea    rsi,[rbp-0x80]
  4132e8:	mov    rdx,QWORD PTR [rbp-0x88]
  4132ef:	mov    rcx,QWORD PTR [rax]
  4132f2:	lea    rdi,[rip+0x12644]        # 42593d <_IO_stdin_used@@Base+0x293d>
  4132f9:	call   404db0 <test_type_aliases@@Base+0x4b0>
  4132fe:	lea    rdi,[rbp-0x80]
  413302:	lea    rsi,[rip+0xfe77]        # 423180 <_IO_stdin_used@@Base+0x180>
  413309:	call   406a20 <test_typed_table_with_emptystruct@@Base+0x470>
  41330e:	cmp    eax,0x0
  413311:	jne    413337 <test_struct_buffer@@Base+0x197>
  413317:	lea    rdi,[rip+0x12589]        # 4258a7 <_IO_stdin_used@@Base+0x28a7>
  41331e:	mov    al,0x0
  413320:	call   404070 <printf@plt>
  413325:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41332c:	mov    DWORD PTR [rbp-0xac],eax
  413332:	jmp    4134cf <test_struct_buffer@@Base+0x32f>
  413337:	lea    rdi,[rbp-0x80]
  41333b:	lea    rsi,[rip+0x12557]        # 425899 <_IO_stdin_used@@Base+0x2899>
  413342:	call   406a20 <test_typed_table_with_emptystruct@@Base+0x470>
  413347:	cmp    eax,0x0
  41334a:	je     413370 <test_struct_buffer@@Base+0x1d0>
  413350:	lea    rdi,[rip+0x12547]        # 42589e <_IO_stdin_used@@Base+0x289e>
  413357:	mov    al,0x0
  413359:	call   404070 <printf@plt>
  41335e:	mov    DWORD PTR [rbp-0x4],0xffffffff
  413365:	mov    DWORD PTR [rbp-0xb0],eax
  41336b:	jmp    4134cf <test_struct_buffer@@Base+0x32f>
  413370:	lea    rdi,[rbp-0x80]
  413374:	lea    rsi,[rip+0xfe05]        # 423180 <_IO_stdin_used@@Base+0x180>
  41337b:	call   406a20 <test_typed_table_with_emptystruct@@Base+0x470>
  413380:	cmp    eax,0x0
  413383:	jne    4133a9 <test_struct_buffer@@Base+0x209>
  413389:	lea    rdi,[rip+0x12539]        # 4258c9 <_IO_stdin_used@@Base+0x28c9>
  413390:	mov    al,0x0
  413392:	call   404070 <printf@plt>
  413397:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41339e:	mov    DWORD PTR [rbp-0xb4],eax
  4133a4:	jmp    4134cf <test_struct_buffer@@Base+0x32f>
  4133a9:	lea    rdi,[rbp-0x80]
  4133ad:	call   4135a0 <test_struct_buffer@@Base+0x400>
  4133b2:	mov    QWORD PTR [rbp-0x98],rax
  4133b9:	mov    rax,QWORD PTR [rbp-0x98]
  4133c0:	mov    QWORD PTR [rbp-0x90],rax
  4133c7:	mov    rdi,QWORD PTR [rbp-0x90]
  4133ce:	call   413610 <test_struct_buffer@@Base+0x470>
  4133d3:	vmovss xmm0,DWORD PTR [rip+0xfc31]        # 42300c <_IO_stdin_used@@Base+0xc>
  4133db:	mov    rdi,QWORD PTR [rbp-0x90]
  4133e2:	vmovss xmm1,DWORD PTR [rdi]
  4133e6:	vucomiss xmm1,xmm0
  4133ea:	mov    QWORD PTR [rbp-0xc0],rax
  4133f1:	jne    4134a8 <test_struct_buffer@@Base+0x308>
  4133f7:	jp     4134a8 <test_struct_buffer@@Base+0x308>
  4133fd:	vmovss xmm0,DWORD PTR [rip+0xfc0b]        # 423010 <_IO_stdin_used@@Base+0x10>
  413405:	mov    rax,QWORD PTR [rbp-0x90]
  41340c:	vmovss xmm1,DWORD PTR [rax+0x4]
  413411:	vucomiss xmm1,xmm0
  413415:	jne    4134a8 <test_struct_buffer@@Base+0x308>
  41341b:	jp     4134a8 <test_struct_buffer@@Base+0x308>
  413421:	vmovss xmm0,DWORD PTR [rip+0xfbef]        # 423018 <_IO_stdin_used@@Base+0x18>
  413429:	mov    rax,QWORD PTR [rbp-0x90]
  413430:	vmovss xmm1,DWORD PTR [rax+0x8]
  413435:	vucomiss xmm1,xmm0
  413439:	jne    4134a8 <test_struct_buffer@@Base+0x308>
  41343f:	jp     4134a8 <test_struct_buffer@@Base+0x308>
  413445:	vmovsd xmm0,QWORD PTR [rip+0xfbdb]        # 423028 <_IO_stdin_used@@Base+0x28>
  41344d:	mov    rax,QWORD PTR [rbp-0x90]
  413454:	vmovsd xmm1,QWORD PTR [rax+0x10]
  413459:	vucomisd xmm1,xmm0
  41345d:	jne    4134a8 <test_struct_buffer@@Base+0x308>
  413463:	jp     4134a8 <test_struct_buffer@@Base+0x308>
  413469:	mov    rax,QWORD PTR [rbp-0x90]
  413470:	movsx  ecx,BYTE PTR [rax+0x18]
  413474:	cmp    ecx,0x8
  413477:	jne    4134a8 <test_struct_buffer@@Base+0x308>
  41347d:	mov    rax,QWORD PTR [rbp-0x90]
  413484:	movsx  ecx,WORD PTR [rax+0x1a]
  413488:	cmp    ecx,0xaaa
  41348e:	jne    4134a8 <test_struct_buffer@@Base+0x308>
  413494:	mov    rax,QWORD PTR [rbp-0x90]
  41349b:	movsx  ecx,BYTE PTR [rax+0x1c]
  41349f:	cmp    ecx,0xffffffef
  4134a2:	je     4134c8 <test_struct_buffer@@Base+0x328>
  4134a8:	lea    rdi,[rip+0x1243e]        # 4258ed <_IO_stdin_used@@Base+0x28ed>
  4134af:	mov    al,0x0
  4134b1:	call   404070 <printf@plt>
  4134b6:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4134bd:	mov    DWORD PTR [rbp-0xc4],eax
  4134c3:	jmp    4134cf <test_struct_buffer@@Base+0x32f>
  4134c8:	mov    DWORD PTR [rbp-0x4],0x0
  4134cf:	mov    eax,DWORD PTR [rbp-0x4]
  4134d2:	add    rsp,0xd0
  4134d9:	pop    rbp
  4134da:	ret    
  4134db:	nop    DWORD PTR [rax+rax*1+0x0]
  4134e0:	push   rbp
  4134e1:	mov    rbp,rsp
  4134e4:	sub    rsp,0x40
  4134e8:	mov    al,cl
  4134ea:	mov    r8w,dx
  4134ee:	mov    r9b,sil
  4134f1:	mov    QWORD PTR [rbp-0x8],rdi
  4134f5:	vmovss DWORD PTR [rbp-0xc],xmm0
  4134fa:	vmovss DWORD PTR [rbp-0x10],xmm1
  4134ff:	vmovss DWORD PTR [rbp-0x14],xmm2
  413504:	vmovsd QWORD PTR [rbp-0x20],xmm3
  413509:	mov    BYTE PTR [rbp-0x21],r9b
  41350d:	mov    WORD PTR [rbp-0x24],r8w
  413512:	mov    BYTE PTR [rbp-0x25],al
  413515:	mov    rdi,QWORD PTR [rbp-0x8]
  413519:	mov    r10,QWORD PTR [rbp-0x8]
  41351d:	vmovss xmm0,DWORD PTR [rbp-0xc]
  413522:	vmovss xmm1,DWORD PTR [rbp-0x10]
  413527:	vmovss xmm2,DWORD PTR [rbp-0x14]
  41352c:	vmovsd xmm3,QWORD PTR [rbp-0x20]
  413531:	mov    al,BYTE PTR [rbp-0x21]
  413534:	mov    r8w,WORD PTR [rbp-0x24]
  413539:	mov    QWORD PTR [rbp-0x30],rdi
  41353d:	mov    rdi,r10
  413540:	movsx  esi,al
  413543:	movsx  edx,r8w
  413547:	movsx  ecx,BYTE PTR [rbp-0x25]
  41354b:	call   419030 <main@@Base+0x4c40>
  413550:	xor    ecx,ecx
  413552:	mov    rdi,QWORD PTR [rbp-0x30]
  413556:	lea    rsi,[rip+0xfc23]        # 423180 <_IO_stdin_used@@Base+0x180>
  41355d:	mov    edx,ecx
  41355f:	mov    DWORD PTR [rbp-0x34],ecx
  413562:	mov    ecx,eax
  413564:	mov    r8d,0x10
  41356a:	mov    r9d,DWORD PTR [rbp-0x34]
  41356e:	call   41a1b0 <flatcc_builder_create_buffer@@Base>
  413573:	add    rsp,0x40
  413577:	pop    rbp
  413578:	ret    
  413579:	nop    DWORD PTR [rax+0x0]
  413580:	push   rbp
  413581:	mov    rbp,rsp
  413584:	mov    QWORD PTR [rbp-0x8],rdi
  413588:	mov    rdi,QWORD PTR [rbp-0x8]
  41358c:	mov    rax,QWORD PTR [rdi+0x30]
  413590:	pop    rbp
  413591:	ret    
  413592:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41359c:	nop    DWORD PTR [rax+0x0]
  4135a0:	push   rbp
  4135a1:	mov    rbp,rsp
  4135a4:	sub    rsp,0x20
  4135a8:	mov    QWORD PTR [rbp-0x8],rdi
  4135ac:	lea    rdi,[rip+0xfbcd]        # 423180 <_IO_stdin_used@@Base+0x180>
  4135b3:	mov    QWORD PTR [rbp-0x10],rdi
  4135b7:	cmp    QWORD PTR [rbp-0x8],0x0
  4135bc:	je     4135d8 <test_struct_buffer@@Base+0x438>
  4135c2:	mov    rdi,QWORD PTR [rbp-0x8]
  4135c6:	mov    rsi,QWORD PTR [rbp-0x10]
  4135ca:	call   406a20 <test_typed_table_with_emptystruct@@Base+0x470>
  4135cf:	cmp    eax,0x0
  4135d2:	jne    4135e5 <test_struct_buffer@@Base+0x445>
  4135d8:	xor    eax,eax
  4135da:	mov    ecx,eax
  4135dc:	mov    QWORD PTR [rbp-0x18],rcx
  4135e0:	jmp    413605 <test_struct_buffer@@Base+0x465>
  4135e5:	mov    rax,QWORD PTR [rbp-0x8]
  4135e9:	mov    rdi,QWORD PTR [rbp-0x8]
  4135ed:	mov    QWORD PTR [rbp-0x20],rax
  4135f1:	call   414930 <main@@Base+0x540>
  4135f6:	mov    eax,eax
  4135f8:	mov    edi,eax
  4135fa:	mov    rcx,QWORD PTR [rbp-0x20]
  4135fe:	add    rcx,rdi
  413601:	mov    QWORD PTR [rbp-0x18],rcx
  413605:	mov    rax,QWORD PTR [rbp-0x18]
  413609:	add    rsp,0x20
  41360d:	pop    rbp
  41360e:	ret    
  41360f:	nop
  413610:	push   rbp
  413611:	mov    rbp,rsp
  413614:	mov    QWORD PTR [rbp-0x8],rdi
  413618:	mov    rax,QWORD PTR [rbp-0x8]
  41361c:	pop    rbp
  41361d:	ret    
  41361e:	xchg   ax,ax

0000000000413620 <test_typed_struct_buffer@@Base>:
  413620:	push   rbp
  413621:	mov    rbp,rsp
  413624:	sub    rsp,0xe0
  41362b:	mov    QWORD PTR [rbp-0x10],rdi
  41362f:	mov    rdi,QWORD PTR [rbp-0x10]
  413633:	call   4197b0 <flatcc_builder_reset@@Base>
  413638:	vmovss xmm0,DWORD PTR [rip+0xf9cc]        # 42300c <_IO_stdin_used@@Base+0xc>
  413640:	vmovss xmm1,DWORD PTR [rip+0xf9c8]        # 423010 <_IO_stdin_used@@Base+0x10>
  413648:	vmovss xmm2,DWORD PTR [rip+0xf9c8]        # 423018 <_IO_stdin_used@@Base+0x18>
  413650:	vmovsd xmm3,QWORD PTR [rip+0xf9d0]        # 423028 <_IO_stdin_used@@Base+0x28>
  413658:	mov    rdi,QWORD PTR [rbp-0x10]
  41365c:	mov    esi,0x8
  413661:	mov    edx,0xaaa
  413666:	mov    ecx,0xffffffef
  41366b:	mov    DWORD PTR [rbp-0x9c],eax
  413671:	call   413a40 <test_typed_struct_buffer@@Base+0x420>
  413676:	mov    rdi,QWORD PTR [rbp-0x10]
  41367a:	mov    DWORD PTR [rbp-0xa0],eax
  413680:	call   41e830 <flatcc_builder_get_buffer_size@@Base>
  413685:	mov    QWORD PTR [rbp-0x88],rax
  41368c:	cmp    QWORD PTR [rbp-0x88],0x30
  413694:	jne    41369f <test_typed_struct_buffer@@Base+0x7f>
  41369a:	jmp    4136be <test_typed_struct_buffer@@Base+0x9e>
  41369f:	lea    rdi,[rip+0x12148]        # 4257ee <_IO_stdin_used@@Base+0x27ee>
  4136a6:	lea    rsi,[rip+0x10542]        # 423bef <_IO_stdin_used@@Base+0xbef>
  4136ad:	mov    edx,0x954
  4136b2:	lea    rcx,[rip+0x1224d]        # 425906 <_IO_stdin_used@@Base+0x2906>
  4136b9:	call   404090 <__assert_fail@plt>
  4136be:	mov    rax,QWORD PTR [rbp-0x88]
  4136c5:	mov    ecx,eax
  4136c7:	lea    rdi,[rip+0x12156]        # 425824 <_IO_stdin_used@@Base+0x2824>
  4136ce:	mov    esi,ecx
  4136d0:	mov    al,0x0
  4136d2:	call   404070 <printf@plt>
  4136d7:	mov    rdi,QWORD PTR [rbp-0x10]
  4136db:	mov    DWORD PTR [rbp-0xa4],eax
  4136e1:	call   41edc0 <flatcc_builder_get_emit_context@@Base>
  4136e6:	mov    rdi,rax
  4136e9:	call   413580 <test_struct_buffer@@Base+0x3e0>
  4136ee:	cmp    rax,QWORD PTR [rbp-0x88]
  4136f5:	jne    413700 <test_typed_struct_buffer@@Base+0xe0>
  4136fb:	jmp    41371f <test_typed_struct_buffer@@Base+0xff>
  413700:	lea    rdi,[rip+0x1213a]        # 425841 <_IO_stdin_used@@Base+0x2841>
  413707:	lea    rsi,[rip+0x104e1]        # 423bef <_IO_stdin_used@@Base+0xbef>
  41370e:	mov    edx,0x956
  413713:	lea    rcx,[rip+0x121ec]        # 425906 <_IO_stdin_used@@Base+0x2906>
  41371a:	call   404090 <__assert_fail@plt>
  41371f:	mov    eax,0x64
  413724:	mov    edx,eax
  413726:	lea    rsi,[rbp-0x80]
  41372a:	mov    rdi,QWORD PTR [rbp-0x10]
  41372e:	call   41ea90 <flatcc_builder_copy_buffer@@Base>
  413733:	cmp    rax,0x0
  413737:	jne    41375d <test_typed_struct_buffer@@Base+0x13d>
  41373d:	lea    rdi,[rip+0x12148]        # 42588c <_IO_stdin_used@@Base+0x288c>
  413744:	mov    al,0x0
  413746:	call   404070 <printf@plt>
  41374b:	mov    DWORD PTR [rbp-0x4],0xffffffff
  413752:	mov    DWORD PTR [rbp-0xa8],eax
  413758:	jmp    413a2e <test_typed_struct_buffer@@Base+0x40e>
  41375d:	mov    rax,QWORD PTR [rip+0x1e894]        # 431ff8 <stderr@GLIBC_2.2.5>
  413764:	lea    rsi,[rbp-0x80]
  413768:	mov    rdx,QWORD PTR [rbp-0x88]
  41376f:	mov    rcx,QWORD PTR [rax]
  413772:	lea    rdi,[rip+0x121be]        # 425937 <_IO_stdin_used@@Base+0x2937>
  413779:	call   404db0 <test_type_aliases@@Base+0x4b0>
  41377e:	lea    rdi,[rbp-0x80]
  413782:	lea    rsi,[rip+0x121c7]        # 425950 <_IO_stdin_used@@Base+0x2950>
  413789:	call   406a20 <test_typed_table_with_emptystruct@@Base+0x470>
  41378e:	cmp    eax,0x0
  413791:	jne    4137b7 <test_typed_struct_buffer@@Base+0x197>
  413797:	lea    rdi,[rip+0x12109]        # 4258a7 <_IO_stdin_used@@Base+0x28a7>
  41379e:	mov    al,0x0
  4137a0:	call   404070 <printf@plt>
  4137a5:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4137ac:	mov    DWORD PTR [rbp-0xac],eax
  4137b2:	jmp    413a2e <test_typed_struct_buffer@@Base+0x40e>
  4137b7:	lea    rdi,[rbp-0x80]
  4137bb:	lea    rsi,[rip+0x120d7]        # 425899 <_IO_stdin_used@@Base+0x2899>
  4137c2:	call   406a20 <test_typed_table_with_emptystruct@@Base+0x470>
  4137c7:	cmp    eax,0x0
  4137ca:	je     4137f0 <test_typed_struct_buffer@@Base+0x1d0>
  4137d0:	lea    rdi,[rip+0x120c7]        # 42589e <_IO_stdin_used@@Base+0x289e>
  4137d7:	mov    al,0x0
  4137d9:	call   404070 <printf@plt>
  4137de:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4137e5:	mov    DWORD PTR [rbp-0xb0],eax
  4137eb:	jmp    413a2e <test_typed_struct_buffer@@Base+0x40e>
  4137f0:	lea    rdi,[rbp-0x80]
  4137f4:	lea    rsi,[rip+0x12155]        # 425950 <_IO_stdin_used@@Base+0x2950>
  4137fb:	call   406a20 <test_typed_table_with_emptystruct@@Base+0x470>
  413800:	cmp    eax,0x0
  413803:	jne    413829 <test_typed_struct_buffer@@Base+0x209>
  413809:	lea    rdi,[rip+0x120b9]        # 4258c9 <_IO_stdin_used@@Base+0x28c9>
  413810:	mov    al,0x0
  413812:	call   404070 <printf@plt>
  413817:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41381e:	mov    DWORD PTR [rbp-0xb4],eax
  413824:	jmp    413a2e <test_typed_struct_buffer@@Base+0x40e>
  413829:	lea    rdi,[rbp-0x80]
  41382d:	mov    esi,0xa8f53ed2
  413832:	call   413ae0 <test_typed_struct_buffer@@Base+0x4c0>
  413837:	cmp    rax,0x0
  41383b:	jne    413861 <test_typed_struct_buffer@@Base+0x241>
  413841:	lea    rdi,[rip+0x1210d]        # 425955 <_IO_stdin_used@@Base+0x2955>
  413848:	mov    al,0x0
  41384a:	call   404070 <printf@plt>
  41384f:	mov    DWORD PTR [rbp-0x4],0xffffffff
  413856:	mov    DWORD PTR [rbp-0xb8],eax
  41385c:	jmp    413a2e <test_typed_struct_buffer@@Base+0x40e>
  413861:	lea    rdi,[rbp-0x80]
  413865:	mov    rsi,QWORD PTR [rbp-0x88]
  41386c:	mov    edx,0xa8f53ed2
  413871:	call   413b50 <test_typed_struct_buffer@@Base+0x530>
  413876:	xor    edx,edx
  413878:	cmp    edx,eax
  41387a:	je     4138a0 <test_typed_struct_buffer@@Base+0x280>
  413880:	lea    rdi,[rip+0x120f7]        # 42597e <_IO_stdin_used@@Base+0x297e>
  413887:	mov    al,0x0
  413889:	call   404070 <printf@plt>
  41388e:	mov    DWORD PTR [rbp-0x4],0xffffffff
  413895:	mov    DWORD PTR [rbp-0xbc],eax
  41389b:	jmp    413a2e <test_typed_struct_buffer@@Base+0x40e>
  4138a0:	lea    rdi,[rbp-0x80]
  4138a4:	call   413b90 <test_typed_struct_buffer@@Base+0x570>
  4138a9:	mov    QWORD PTR [rbp-0x98],rax
  4138b0:	cmp    QWORD PTR [rbp-0x98],0x0
  4138b8:	jne    4138de <test_typed_struct_buffer@@Base+0x2be>
  4138be:	lea    rdi,[rip+0x120dc]        # 4259a1 <_IO_stdin_used@@Base+0x29a1>
  4138c5:	mov    al,0x0
  4138c7:	call   404070 <printf@plt>
  4138cc:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4138d3:	mov    DWORD PTR [rbp-0xc0],eax
  4138d9:	jmp    413a2e <test_typed_struct_buffer@@Base+0x40e>
  4138de:	lea    rdi,[rbp-0x80]
  4138e2:	mov    rsi,QWORD PTR [rbp-0x88]
  4138e9:	call   413c00 <test_typed_struct_buffer@@Base+0x5e0>
  4138ee:	xor    ecx,ecx
  4138f0:	cmp    ecx,eax
  4138f2:	je     413918 <test_typed_struct_buffer@@Base+0x2f8>
  4138f8:	lea    rdi,[rip+0x120c0]        # 4259bf <_IO_stdin_used@@Base+0x29bf>
  4138ff:	mov    al,0x0
  413901:	call   404070 <printf@plt>
  413906:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41390d:	mov    DWORD PTR [rbp-0xc4],eax
  413913:	jmp    413a2e <test_typed_struct_buffer@@Base+0x40e>
  413918:	mov    rax,QWORD PTR [rbp-0x98]
  41391f:	mov    QWORD PTR [rbp-0x90],rax
  413926:	mov    rdi,QWORD PTR [rbp-0x90]
  41392d:	call   413610 <test_struct_buffer@@Base+0x470>
  413932:	vmovss xmm0,DWORD PTR [rip+0xf6d2]        # 42300c <_IO_stdin_used@@Base+0xc>
  41393a:	mov    rdi,QWORD PTR [rbp-0x90]
  413941:	vmovss xmm1,DWORD PTR [rdi]
  413945:	vucomiss xmm1,xmm0
  413949:	mov    QWORD PTR [rbp-0xd0],rax
  413950:	jne    413a07 <test_typed_struct_buffer@@Base+0x3e7>
  413956:	jp     413a07 <test_typed_struct_buffer@@Base+0x3e7>
  41395c:	vmovss xmm0,DWORD PTR [rip+0xf6ac]        # 423010 <_IO_stdin_used@@Base+0x10>
  413964:	mov    rax,QWORD PTR [rbp-0x90]
  41396b:	vmovss xmm1,DWORD PTR [rax+0x4]
  413970:	vucomiss xmm1,xmm0
  413974:	jne    413a07 <test_typed_struct_buffer@@Base+0x3e7>
  41397a:	jp     413a07 <test_typed_struct_buffer@@Base+0x3e7>
  413980:	vmovss xmm0,DWORD PTR [rip+0xf690]        # 423018 <_IO_stdin_used@@Base+0x18>
  413988:	mov    rax,QWORD PTR [rbp-0x90]
  41398f:	vmovss xmm1,DWORD PTR [rax+0x8]
  413994:	vucomiss xmm1,xmm0
  413998:	jne    413a07 <test_typed_struct_buffer@@Base+0x3e7>
  41399e:	jp     413a07 <test_typed_struct_buffer@@Base+0x3e7>
  4139a4:	vmovsd xmm0,QWORD PTR [rip+0xf67c]        # 423028 <_IO_stdin_used@@Base+0x28>
  4139ac:	mov    rax,QWORD PTR [rbp-0x90]
  4139b3:	vmovsd xmm1,QWORD PTR [rax+0x10]
  4139b8:	vucomisd xmm1,xmm0
  4139bc:	jne    413a07 <test_typed_struct_buffer@@Base+0x3e7>
  4139c2:	jp     413a07 <test_typed_struct_buffer@@Base+0x3e7>
  4139c8:	mov    rax,QWORD PTR [rbp-0x90]
  4139cf:	movsx  ecx,BYTE PTR [rax+0x18]
  4139d3:	cmp    ecx,0x8
  4139d6:	jne    413a07 <test_typed_struct_buffer@@Base+0x3e7>
  4139dc:	mov    rax,QWORD PTR [rbp-0x90]
  4139e3:	movsx  ecx,WORD PTR [rax+0x1a]
  4139e7:	cmp    ecx,0xaaa
  4139ed:	jne    413a07 <test_typed_struct_buffer@@Base+0x3e7>
  4139f3:	mov    rax,QWORD PTR [rbp-0x90]
  4139fa:	movsx  ecx,BYTE PTR [rax+0x1c]
  4139fe:	cmp    ecx,0xffffffef
  413a01:	je     413a27 <test_typed_struct_buffer@@Base+0x407>
  413a07:	lea    rdi,[rip+0x11edf]        # 4258ed <_IO_stdin_used@@Base+0x28ed>
  413a0e:	mov    al,0x0
  413a10:	call   404070 <printf@plt>
  413a15:	mov    DWORD PTR [rbp-0x4],0xffffffff
  413a1c:	mov    DWORD PTR [rbp-0xd4],eax
  413a22:	jmp    413a2e <test_typed_struct_buffer@@Base+0x40e>
  413a27:	mov    DWORD PTR [rbp-0x4],0x0
  413a2e:	mov    eax,DWORD PTR [rbp-0x4]
  413a31:	add    rsp,0xe0
  413a38:	pop    rbp
  413a39:	ret    
  413a3a:	nop    WORD PTR [rax+rax*1+0x0]
  413a40:	push   rbp
  413a41:	mov    rbp,rsp
  413a44:	sub    rsp,0x40
  413a48:	mov    al,cl
  413a4a:	mov    r8w,dx
  413a4e:	mov    r9b,sil
  413a51:	mov    QWORD PTR [rbp-0x8],rdi
  413a55:	vmovss DWORD PTR [rbp-0xc],xmm0
  413a5a:	vmovss DWORD PTR [rbp-0x10],xmm1
  413a5f:	vmovss DWORD PTR [rbp-0x14],xmm2
  413a64:	vmovsd QWORD PTR [rbp-0x20],xmm3
  413a69:	mov    BYTE PTR [rbp-0x21],r9b
  413a6d:	mov    WORD PTR [rbp-0x24],r8w
  413a72:	mov    BYTE PTR [rbp-0x25],al
  413a75:	mov    rdi,QWORD PTR [rbp-0x8]
  413a79:	mov    r10,QWORD PTR [rbp-0x8]
  413a7d:	vmovss xmm0,DWORD PTR [rbp-0xc]
  413a82:	vmovss xmm1,DWORD PTR [rbp-0x10]
  413a87:	vmovss xmm2,DWORD PTR [rbp-0x14]
  413a8c:	vmovsd xmm3,QWORD PTR [rbp-0x20]
  413a91:	mov    al,BYTE PTR [rbp-0x21]
  413a94:	mov    r8w,WORD PTR [rbp-0x24]
  413a99:	mov    QWORD PTR [rbp-0x30],rdi
  413a9d:	mov    rdi,r10
  413aa0:	movsx  esi,al
  413aa3:	movsx  edx,r8w
  413aa7:	movsx  ecx,BYTE PTR [rbp-0x25]
  413aab:	call   419030 <main@@Base+0x4c40>
  413ab0:	xor    ecx,ecx
  413ab2:	mov    rdi,QWORD PTR [rbp-0x30]
  413ab6:	lea    rsi,[rip+0x11e93]        # 425950 <_IO_stdin_used@@Base+0x2950>
  413abd:	mov    edx,ecx
  413abf:	mov    DWORD PTR [rbp-0x34],ecx
  413ac2:	mov    ecx,eax
  413ac4:	mov    r8d,0x10
  413aca:	mov    r9d,DWORD PTR [rbp-0x34]
  413ace:	call   41a1b0 <flatcc_builder_create_buffer@@Base>
  413ad3:	add    rsp,0x40
  413ad7:	pop    rbp
  413ad8:	ret    
  413ad9:	nop    DWORD PTR [rax+0x0]
  413ae0:	push   rbp
  413ae1:	mov    rbp,rsp
  413ae4:	sub    rsp,0x20
  413ae8:	mov    QWORD PTR [rbp-0x8],rdi
  413aec:	mov    DWORD PTR [rbp-0xc],esi
  413aef:	cmp    QWORD PTR [rbp-0x8],0x0
  413af4:	je     413b0f <test_typed_struct_buffer@@Base+0x4ef>
  413afa:	mov    rdi,QWORD PTR [rbp-0x8]
  413afe:	mov    esi,DWORD PTR [rbp-0xc]
  413b01:	call   406150 <test_typed_empty_monster@@Base+0x3c0>
  413b06:	cmp    eax,0x0
  413b09:	jne    413b1c <test_typed_struct_buffer@@Base+0x4fc>
  413b0f:	xor    eax,eax
  413b11:	mov    ecx,eax
  413b13:	mov    QWORD PTR [rbp-0x18],rcx
  413b17:	jmp    413b3c <test_typed_struct_buffer@@Base+0x51c>
  413b1c:	mov    rax,QWORD PTR [rbp-0x8]
  413b20:	mov    rdi,QWORD PTR [rbp-0x8]
  413b24:	mov    QWORD PTR [rbp-0x20],rax
  413b28:	call   414930 <main@@Base+0x540>
  413b2d:	mov    eax,eax
  413b2f:	mov    edi,eax
  413b31:	mov    rcx,QWORD PTR [rbp-0x20]
  413b35:	add    rcx,rdi
  413b38:	mov    QWORD PTR [rbp-0x18],rcx
  413b3c:	mov    rax,QWORD PTR [rbp-0x18]
  413b40:	add    rsp,0x20
  413b44:	pop    rbp
  413b45:	ret    
  413b46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413b50:	push   rbp
  413b51:	mov    rbp,rsp
  413b54:	sub    rsp,0x20
  413b58:	mov    eax,0x20
  413b5d:	mov    ecx,eax
  413b5f:	mov    QWORD PTR [rbp-0x8],rdi
  413b63:	mov    QWORD PTR [rbp-0x10],rsi
  413b67:	mov    DWORD PTR [rbp-0x14],edx
  413b6a:	mov    rdi,QWORD PTR [rbp-0x8]
  413b6e:	mov    rsi,QWORD PTR [rbp-0x10]
  413b72:	mov    edx,DWORD PTR [rbp-0x14]
  413b75:	mov    r8d,0x10
  413b7b:	call   421310 <flatcc_verify_struct_as_typed_root@@Base>
  413b80:	add    rsp,0x20
  413b84:	pop    rbp
  413b85:	ret    
  413b86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413b90:	push   rbp
  413b91:	mov    rbp,rsp
  413b94:	sub    rsp,0x20
  413b98:	mov    QWORD PTR [rbp-0x8],rdi
  413b9c:	cmp    QWORD PTR [rbp-0x8],0x0
  413ba1:	je     413bbe <test_typed_struct_buffer@@Base+0x59e>
  413ba7:	mov    rdi,QWORD PTR [rbp-0x8]
  413bab:	mov    esi,0xa8f53ed2
  413bb0:	call   406150 <test_typed_empty_monster@@Base+0x3c0>
  413bb5:	cmp    eax,0x0
  413bb8:	jne    413bcb <test_typed_struct_buffer@@Base+0x5ab>
  413bbe:	xor    eax,eax
  413bc0:	mov    ecx,eax
  413bc2:	mov    QWORD PTR [rbp-0x10],rcx
  413bc6:	jmp    413beb <test_typed_struct_buffer@@Base+0x5cb>
  413bcb:	mov    rax,QWORD PTR [rbp-0x8]
  413bcf:	mov    rdi,QWORD PTR [rbp-0x8]
  413bd3:	mov    QWORD PTR [rbp-0x18],rax
  413bd7:	call   414930 <main@@Base+0x540>
  413bdc:	mov    eax,eax
  413bde:	mov    edi,eax
  413be0:	mov    rcx,QWORD PTR [rbp-0x18]
  413be4:	add    rcx,rdi
  413be7:	mov    QWORD PTR [rbp-0x10],rcx
  413beb:	mov    rax,QWORD PTR [rbp-0x10]
  413bef:	add    rsp,0x20
  413bf3:	pop    rbp
  413bf4:	ret    
  413bf5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413bff:	nop
  413c00:	push   rbp
  413c01:	mov    rbp,rsp
  413c04:	sub    rsp,0x10
  413c08:	mov    eax,0x20
  413c0d:	mov    ecx,eax
  413c0f:	mov    QWORD PTR [rbp-0x8],rdi
  413c13:	mov    QWORD PTR [rbp-0x10],rsi
  413c17:	mov    rdi,QWORD PTR [rbp-0x8]
  413c1b:	mov    rsi,QWORD PTR [rbp-0x10]
  413c1f:	mov    edx,0xa8f53ed2
  413c24:	mov    r8d,0x10
  413c2a:	call   421310 <flatcc_verify_struct_as_typed_root@@Base>
  413c2f:	add    rsp,0x10
  413c33:	pop    rbp
  413c34:	ret    
  413c35:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413c3f:	nop

0000000000413c40 <gen_monster_benchmark@@Base>:
  413c40:	push   rbp
  413c41:	mov    rbp,rsp
  413c44:	sub    rsp,0x70
  413c48:	mov    QWORD PTR [rbp-0x8],rdi
  413c4c:	mov    rdi,QWORD PTR [rip+0xf4da]        # 42312d <_IO_stdin_used@@Base+0x12d>
  413c53:	mov    QWORD PTR [rbp-0x12],rdi
  413c57:	mov    ax,WORD PTR [rip+0xf4d7]        # 423135 <_IO_stdin_used@@Base+0x135>
  413c5e:	mov    WORD PTR [rbp-0xa],ax
  413c62:	mov    rdi,QWORD PTR [rbp-0x8]
  413c66:	call   4197b0 <flatcc_builder_reset@@Base>
  413c6b:	mov    rdi,QWORD PTR [rbp-0x8]
  413c6f:	mov    DWORD PTR [rbp-0x34],eax
  413c72:	call   40a2c0 <gen_monster@@Base+0x780>
  413c77:	mov    rdi,QWORD PTR [rbp-0x8]
  413c7b:	mov    esi,0x50
  413c80:	mov    DWORD PTR [rbp-0x38],eax
  413c83:	call   40a310 <gen_monster@@Base+0x7d0>
  413c88:	mov    rdi,QWORD PTR [rbp-0x8]
  413c8c:	mov    DWORD PTR [rbp-0x3c],eax
  413c8f:	call   40a390 <gen_monster@@Base+0x850>
  413c94:	vmovss xmm0,DWORD PTR [rip+0xf36c]        # 423008 <_IO_stdin_used@@Base+0x8>
  413c9c:	vmovss xmm1,DWORD PTR [rip+0xf36c]        # 423010 <_IO_stdin_used@@Base+0x10>
  413ca4:	vmovss xmm2,DWORD PTR [rip+0xf360]        # 42300c <_IO_stdin_used@@Base+0xc>
  413cac:	mov    QWORD PTR [rbp-0x20],rax
  413cb0:	mov    rax,QWORD PTR [rbp-0x20]
  413cb4:	vmovss DWORD PTR [rax],xmm2
  413cb8:	mov    rax,QWORD PTR [rbp-0x20]
  413cbc:	vmovss DWORD PTR [rax+0x4],xmm1
  413cc1:	mov    rax,QWORD PTR [rbp-0x20]
  413cc5:	vmovss DWORD PTR [rax+0x8],xmm0
  413cca:	mov    rdi,QWORD PTR [rbp-0x8]
  413cce:	call   40a3c0 <gen_monster@@Base+0x880>
  413cd3:	mov    rdi,QWORD PTR [rbp-0x8]
  413cd7:	lea    rsi,[rip+0xf679]        # 423357 <_IO_stdin_used@@Base+0x357>
  413cde:	mov    DWORD PTR [rbp-0x40],eax
  413ce1:	call   405c40 <test_empty_monster@@Base+0x1b0>
  413ce6:	mov    ecx,0xa
  413ceb:	mov    edx,ecx
  413ced:	lea    rsi,[rbp-0x12]
  413cf1:	mov    rdi,QWORD PTR [rbp-0x8]
  413cf5:	mov    DWORD PTR [rbp-0x44],eax
  413cf8:	call   40a450 <gen_monster@@Base+0x910>
  413cfd:	mov    rdi,QWORD PTR [rbp-0x8]
  413d01:	mov    DWORD PTR [rbp-0x48],eax
  413d04:	call   40a4a0 <gen_monster@@Base+0x960>
  413d09:	mov    ecx,0x1
  413d0e:	mov    esi,ecx
  413d10:	mov    rdi,QWORD PTR [rbp-0x8]
  413d14:	mov    DWORD PTR [rbp-0x4c],eax
  413d17:	call   40a4c0 <gen_monster@@Base+0x980>
  413d1c:	mov    ecx,0x2
  413d21:	mov    esi,ecx
  413d23:	mov    QWORD PTR [rbp-0x28],rax
  413d27:	mov    rax,QWORD PTR [rbp-0x28]
  413d2b:	mov    WORD PTR [rax],0x10
  413d30:	mov    rax,QWORD PTR [rbp-0x28]
  413d34:	mov    BYTE PTR [rax+0x2],0x20
  413d38:	mov    rdi,QWORD PTR [rbp-0x8]
  413d3c:	call   40a4c0 <gen_monster@@Base+0x980>
  413d41:	mov    QWORD PTR [rbp-0x28],rax
  413d45:	mov    rax,QWORD PTR [rbp-0x28]
  413d49:	mov    WORD PTR [rax],0x30
  413d4e:	mov    rax,QWORD PTR [rbp-0x28]
  413d52:	mov    BYTE PTR [rax+0x2],0x40
  413d56:	mov    rax,QWORD PTR [rbp-0x28]
  413d5a:	mov    WORD PTR [rax+0x4],0x50
  413d60:	mov    rax,QWORD PTR [rbp-0x28]
  413d64:	mov    BYTE PTR [rax+0x6],0x60
  413d68:	mov    rdi,QWORD PTR [rbp-0x8]
  413d6c:	mov    esi,0x70
  413d71:	mov    edx,0xffffff80
  413d76:	call   40a4f0 <gen_monster@@Base+0x9b0>
  413d7b:	mov    WORD PTR [rbp-0x30],0x191
  413d81:	mov    BYTE PTR [rbp-0x2e],0x91
  413d85:	mov    rdi,QWORD PTR [rbp-0x8]
  413d89:	lea    rsi,[rbp-0x30]
  413d8d:	mov    QWORD PTR [rbp-0x58],rax
  413d91:	call   40a560 <gen_monster@@Base+0xa20>
  413d96:	mov    rdi,QWORD PTR [rbp-0x8]
  413d9a:	mov    QWORD PTR [rbp-0x60],rax
  413d9e:	call   40a6d0 <gen_monster@@Base+0xb90>
  413da3:	mov    rdi,QWORD PTR [rbp-0x8]
  413da7:	mov    DWORD PTR [rbp-0x64],eax
  413daa:	call   40ae60 <gen_monster@@Base+0x1320>
  413daf:	xor    ecx,ecx
  413db1:	mov    DWORD PTR [rbp-0x68],eax
  413db4:	mov    eax,ecx
  413db6:	add    rsp,0x70
  413dba:	pop    rbp
  413dbb:	ret    
  413dbc:	nop    DWORD PTR [rax+0x0]

0000000000413dc0 <time_monster@@Base>:
  413dc0:	push   rbp
  413dc1:	mov    rbp,rsp
  413dc4:	sub    rsp,0x40
  413dc8:	mov    QWORD PTR [rbp-0x8],rdi
  413dcc:	mov    DWORD PTR [rbp-0x1c],0xf4240
  413dd3:	lea    rdi,[rip+0x11c0c]        # 4259e6 <_IO_stdin_used@@Base+0x29e6>
  413dda:	mov    al,0x0
  413ddc:	call   404070 <printf@plt>
  413de1:	mov    DWORD PTR [rbp-0x30],eax
  413de4:	call   413e70 <time_monster@@Base+0xb0>
  413de9:	vmovsd QWORD PTR [rbp-0x10],xmm0
  413dee:	mov    DWORD PTR [rbp-0x2c],0x0
  413df5:	cmp    DWORD PTR [rbp-0x2c],0xf4240
  413dfc:	jge    413e1c <time_monster@@Base+0x5c>
  413e02:	mov    rdi,QWORD PTR [rbp-0x8]
  413e06:	call   413c40 <gen_monster_benchmark@@Base>
  413e0b:	mov    DWORD PTR [rbp-0x34],eax
  413e0e:	mov    eax,DWORD PTR [rbp-0x2c]
  413e11:	add    eax,0x1
  413e14:	mov    DWORD PTR [rbp-0x2c],eax
  413e17:	jmp    413df5 <time_monster@@Base+0x35>
  413e1c:	mov    rdi,QWORD PTR [rbp-0x8]
  413e20:	call   41e830 <flatcc_builder_get_buffer_size@@Base>
  413e25:	mov    QWORD PTR [rbp-0x28],rax
  413e29:	call   413e70 <time_monster@@Base+0xb0>
  413e2e:	vmovsd QWORD PTR [rbp-0x18],xmm0
  413e33:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  413e38:	vmovsd xmm1,QWORD PTR [rbp-0x18]
  413e3d:	mov    rsi,QWORD PTR [rbp-0x28]
  413e41:	lea    rdi,[rip+0x11bb0]        # 4259f8 <_IO_stdin_used@@Base+0x29f8>
  413e48:	mov    edx,0xf4240
  413e4d:	lea    rcx,[rip+0x11bba]        # 425a0e <_IO_stdin_used@@Base+0x2a0e>
  413e54:	call   413ef0 <time_monster@@Base+0x130>
  413e59:	xor    edx,edx
  413e5b:	mov    DWORD PTR [rbp-0x38],eax
  413e5e:	mov    eax,edx
  413e60:	add    rsp,0x40
  413e64:	pop    rbp
  413e65:	ret    
  413e66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413e70:	push   rbp
  413e71:	mov    rbp,rsp
  413e74:	sub    rsp,0x20
  413e78:	xor    eax,eax
  413e7a:	mov    esi,eax
  413e7c:	lea    rdi,[rbp-0x10]
  413e80:	call   404080 <gettimeofday@plt>
  413e85:	cmp    QWORD PTR [rip+0x1e233],0x0        # 4320c0 <__bss_start@@Base+0x8>
  413e8d:	mov    DWORD PTR [rbp-0x14],eax
  413e90:	jne    413eac <time_monster@@Base+0xec>
  413e96:	mov    rax,QWORD PTR [rbp-0x10]
  413e9a:	mov    QWORD PTR [rip+0x1e21f],rax        # 4320c0 <__bss_start@@Base+0x8>
  413ea1:	mov    rax,QWORD PTR [rbp-0x8]
  413ea5:	mov    QWORD PTR [rip+0x1e21c],rax        # 4320c8 <__bss_start@@Base+0x10>
  413eac:	vmovsd xmm0,QWORD PTR [rip+0xf17c]        # 423030 <_IO_stdin_used@@Base+0x30>
  413eb4:	mov    rax,QWORD PTR [rbp-0x10]
  413eb8:	sub    rax,QWORD PTR [rip+0x1e201]        # 4320c0 <__bss_start@@Base+0x8>
  413ebf:	vcvtsi2sd xmm1,xmm1,rax
  413ec4:	mov    rax,QWORD PTR [rbp-0x8]
  413ec8:	sub    rax,QWORD PTR [rip+0x1e1f9]        # 4320c8 <__bss_start@@Base+0x10>
  413ecf:	vcvtsi2sd xmm2,xmm2,rax
  413ed4:	vdivsd xmm0,xmm2,xmm0
  413ed8:	vaddsd xmm0,xmm1,xmm0
  413edc:	add    rsp,0x20
  413ee0:	pop    rbp
  413ee1:	ret    
  413ee2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413eec:	nop    DWORD PTR [rax+0x0]
  413ef0:	push   rbp
  413ef1:	mov    rbp,rsp
  413ef4:	sub    rsp,0x80
  413efb:	vmovsd xmm2,QWORD PTR [rip+0xf12d]        # 423030 <_IO_stdin_used@@Base+0x30>
  413f03:	mov    QWORD PTR [rbp-0x8],rdi
  413f07:	vmovsd QWORD PTR [rbp-0x10],xmm0
  413f0c:	vmovsd QWORD PTR [rbp-0x18],xmm1
  413f11:	mov    QWORD PTR [rbp-0x20],rsi
  413f15:	mov    DWORD PTR [rbp-0x24],edx
  413f18:	mov    QWORD PTR [rbp-0x30],rcx
  413f1c:	vmovsd xmm0,QWORD PTR [rbp-0x18]
  413f21:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  413f26:	vsubsd xmm0,xmm0,xmm1
  413f2a:	vmovsd QWORD PTR [rbp-0x38],xmm0
  413f2f:	mov    rsi,QWORD PTR [rbp-0x8]
  413f33:	lea    rdi,[rip+0x13b41]        # 427a7b <_IO_stdin_used@@Base+0x4a7b>
  413f3a:	xor    edx,edx
  413f3c:	mov    al,dl
  413f3e:	mov    BYTE PTR [rbp-0x41],al
  413f41:	vmovsd QWORD PTR [rbp-0x50],xmm2
  413f46:	call   404070 <printf@plt>
  413f4b:	vmovsd xmm0,QWORD PTR [rbp-0x38]
  413f50:	lea    rdi,[rip+0x13b33]        # 427a8a <_IO_stdin_used@@Base+0x4a8a>
  413f57:	mov    r8b,0x1
  413f5a:	mov    DWORD PTR [rbp-0x54],eax
  413f5d:	mov    al,r8b
  413f60:	call   404070 <printf@plt>
  413f65:	mov    esi,DWORD PTR [rbp-0x24]
  413f68:	lea    rdi,[rip+0x13b33]        # 427aa2 <_IO_stdin_used@@Base+0x4aa2>
  413f6f:	mov    r8b,BYTE PTR [rbp-0x41]
  413f73:	mov    DWORD PTR [rbp-0x58],eax
  413f76:	mov    al,r8b
  413f79:	call   404070 <printf@plt>
  413f7e:	mov    rsi,QWORD PTR [rbp-0x20]
  413f82:	lea    rdi,[rip+0x13b29]        # 427ab2 <_IO_stdin_used@@Base+0x4ab2>
  413f89:	mov    r8b,BYTE PTR [rbp-0x41]
  413f8d:	mov    DWORD PTR [rbp-0x5c],eax
  413f90:	mov    al,r8b
  413f93:	call   404070 <printf@plt>
  413f98:	vcvtsi2sd xmm0,xmm0,DWORD PTR [rbp-0x24]
  413f9d:	vmovdqa xmm1,XMMWORD PTR [rip+0xf1ab]        # 423150 <_IO_stdin_used@@Base+0x150>
  413fa5:	vmovq  xmm2,QWORD PTR [rbp-0x20]
  413faa:	vpunpckldq xmm1,xmm2,xmm1
  413fae:	vmovapd xmm2,XMMWORD PTR [rip+0xf1aa]        # 423160 <_IO_stdin_used@@Base+0x160>
  413fb6:	vsubpd xmm1,xmm1,xmm2
  413fba:	vhaddpd xmm1,xmm1,xmm1
  413fbe:	vmulsd xmm0,xmm0,xmm1
  413fc2:	vmovsd xmm1,QWORD PTR [rbp-0x50]
  413fc7:	vdivsd xmm0,xmm0,xmm1
  413fcb:	vdivsd xmm0,xmm0,QWORD PTR [rbp-0x38]
  413fd0:	lea    rdi,[rip+0x13aee]        # 427ac5 <_IO_stdin_used@@Base+0x4ac5>
  413fd7:	mov    DWORD PTR [rbp-0x60],eax
  413fda:	mov    al,0x1
  413fdc:	call   404070 <printf@plt>
  413fe1:	mov    edx,DWORD PTR [rbp-0x24]
  413fe4:	vcvtsi2sd xmm0,xmm0,edx
  413fe8:	vdivsd xmm0,xmm0,QWORD PTR [rbp-0x38]
  413fed:	lea    rdi,[rip+0x13ae9]        # 427add <_IO_stdin_used@@Base+0x4add>
  413ff4:	mov    DWORD PTR [rbp-0x64],eax
  413ff7:	mov    al,0x1
  413ff9:	call   404070 <printf@plt>
  413ffe:	cmp    QWORD PTR [rbp-0x30],0x0
  414003:	mov    DWORD PTR [rbp-0x68],eax
  414006:	je     414038 <time_monster@@Base+0x278>
  41400c:	cmp    DWORD PTR [rbp-0x24],0x1
  414010:	je     414038 <time_monster@@Base+0x278>
  414016:	vmovsd xmm0,QWORD PTR [rip+0xf01a]        # 423038 <_IO_stdin_used@@Base+0x38>
  41401e:	mov    rsi,QWORD PTR [rbp-0x30]
  414022:	vdivsd xmm0,xmm0,QWORD PTR [rbp-0x38]
  414027:	lea    rdi,[rip+0x13ad0]        # 427afe <_IO_stdin_used@@Base+0x4afe>
  41402e:	mov    al,0x1
  414030:	call   404070 <printf@plt>
  414035:	mov    DWORD PTR [rbp-0x6c],eax
  414038:	vmovsd xmm0,QWORD PTR [rip+0xf000]        # 423040 <_IO_stdin_used@@Base+0x40>
  414040:	vmovsd xmm1,QWORD PTR [rip+0xf000]        # 423048 <_IO_stdin_used@@Base+0x48>
  414048:	vmulsd xmm1,xmm1,QWORD PTR [rbp-0x38]
  41404d:	mov    eax,DWORD PTR [rbp-0x24]
  414050:	vcvtsi2sd xmm2,xmm2,eax
  414054:	vdivsd xmm1,xmm1,xmm2
  414058:	vmovsd QWORD PTR [rbp-0x40],xmm1
  41405d:	vucomisd xmm0,QWORD PTR [rbp-0x40]
  414062:	jbe    414083 <time_monster@@Base+0x2c3>
  414068:	vmovsd xmm0,QWORD PTR [rbp-0x40]
  41406d:	lea    rdi,[rip+0x13aae]        # 427b22 <_IO_stdin_used@@Base+0x4b22>
  414074:	mov    al,0x1
  414076:	call   404070 <printf@plt>
  41407b:	mov    DWORD PTR [rbp-0x70],eax
  41407e:	jmp    414123 <time_monster@@Base+0x363>
  414083:	vmovsd xmm0,QWORD PTR [rip+0xefa5]        # 423030 <_IO_stdin_used@@Base+0x30>
  41408b:	vucomisd xmm0,QWORD PTR [rbp-0x40]
  414090:	jbe    4140bd <time_monster@@Base+0x2fd>
  414096:	vmovsd xmm0,QWORD PTR [rip+0xefa2]        # 423040 <_IO_stdin_used@@Base+0x40>
  41409e:	vmovsd xmm1,QWORD PTR [rbp-0x40]
  4140a3:	vdivsd xmm0,xmm1,xmm0
  4140a7:	lea    rdi,[rip+0x13a8c]        # 427b3a <_IO_stdin_used@@Base+0x4b3a>
  4140ae:	mov    al,0x1
  4140b0:	call   404070 <printf@plt>
  4140b5:	mov    DWORD PTR [rbp-0x74],eax
  4140b8:	jmp    41411e <time_monster@@Base+0x35e>
  4140bd:	vmovsd xmm0,QWORD PTR [rip+0xef83]        # 423048 <_IO_stdin_used@@Base+0x48>
  4140c5:	vucomisd xmm0,QWORD PTR [rbp-0x40]
  4140ca:	jbe    4140f7 <time_monster@@Base+0x337>
  4140d0:	vmovsd xmm0,QWORD PTR [rip+0xef58]        # 423030 <_IO_stdin_used@@Base+0x30>
  4140d8:	vmovsd xmm1,QWORD PTR [rbp-0x40]
  4140dd:	vdivsd xmm0,xmm1,xmm0
  4140e1:	lea    rdi,[rip+0x13a6a]        # 427b52 <_IO_stdin_used@@Base+0x4b52>
  4140e8:	mov    al,0x1
  4140ea:	call   404070 <printf@plt>
  4140ef:	mov    DWORD PTR [rbp-0x78],eax
  4140f2:	jmp    414119 <time_monster@@Base+0x359>
  4140f7:	vmovsd xmm0,QWORD PTR [rip+0xef49]        # 423048 <_IO_stdin_used@@Base+0x48>
  4140ff:	vmovsd xmm1,QWORD PTR [rbp-0x40]
  414104:	vdivsd xmm0,xmm1,xmm0
  414108:	lea    rdi,[rip+0x13a5b]        # 427b6a <_IO_stdin_used@@Base+0x4b6a>
  41410f:	mov    al,0x1
  414111:	call   404070 <printf@plt>
  414116:	mov    DWORD PTR [rbp-0x7c],eax
  414119:	jmp    41411e <time_monster@@Base+0x35e>
  41411e:	jmp    414123 <time_monster@@Base+0x363>
  414123:	xor    eax,eax
  414125:	add    rsp,0x80
  41412c:	pop    rbp
  41412d:	ret    
  41412e:	xchg   ax,ax

0000000000414130 <gen_struct_buffer_benchmark@@Base>:
  414130:	push   rbp
  414131:	mov    rbp,rsp
  414134:	sub    rsp,0x40
  414138:	mov    QWORD PTR [rbp-0x10],rdi
  41413c:	mov    rdi,QWORD PTR [rbp-0x10]
  414140:	call   4197b0 <flatcc_builder_reset@@Base>
  414145:	vmovss xmm0,DWORD PTR [rip+0xeebf]        # 42300c <_IO_stdin_used@@Base+0xc>
  41414d:	vmovss xmm1,DWORD PTR [rip+0xeebb]        # 423010 <_IO_stdin_used@@Base+0x10>
  414155:	vmovss xmm2,DWORD PTR [rip+0xeebb]        # 423018 <_IO_stdin_used@@Base+0x18>
  41415d:	vmovsd xmm3,QWORD PTR [rip+0xeec3]        # 423028 <_IO_stdin_used@@Base+0x28>
  414165:	mov    rdi,QWORD PTR [rbp-0x10]
  414169:	mov    esi,0x8
  41416e:	mov    edx,0xaaa
  414173:	mov    ecx,0xffffffef
  414178:	mov    DWORD PTR [rbp-0x2c],eax
  41417b:	call   4134e0 <test_struct_buffer@@Base+0x340>
  414180:	xor    ecx,ecx
  414182:	mov    esi,ecx
  414184:	mov    rdi,QWORD PTR [rbp-0x10]
  414188:	mov    DWORD PTR [rbp-0x30],eax
  41418b:	call   41e9b0 <flatcc_builder_get_direct_buffer@@Base>
  414190:	mov    QWORD PTR [rbp-0x18],rax
  414194:	cmp    QWORD PTR [rbp-0x18],0x0
  414199:	jne    4141ab <gen_struct_buffer_benchmark@@Base+0x7b>
  41419f:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4141a6:	jmp    41429d <gen_struct_buffer_benchmark@@Base+0x16d>
  4141ab:	xor    eax,eax
  4141ad:	mov    esi,eax
  4141af:	mov    rdi,QWORD PTR [rbp-0x18]
  4141b3:	call   4142b0 <gen_struct_buffer_benchmark@@Base+0x180>
  4141b8:	mov    QWORD PTR [rbp-0x28],rax
  4141bc:	mov    rax,QWORD PTR [rbp-0x28]
  4141c0:	mov    QWORD PTR [rbp-0x20],rax
  4141c4:	mov    rdi,QWORD PTR [rbp-0x20]
  4141c8:	call   413610 <test_struct_buffer@@Base+0x470>
  4141cd:	vmovss xmm0,DWORD PTR [rip+0xee37]        # 42300c <_IO_stdin_used@@Base+0xc>
  4141d5:	mov    rsi,QWORD PTR [rbp-0x20]
  4141d9:	vmovss xmm1,DWORD PTR [rsi]
  4141dd:	vucomiss xmm1,xmm0
  4141e1:	mov    QWORD PTR [rbp-0x38],rax
  4141e5:	jne    41428a <gen_struct_buffer_benchmark@@Base+0x15a>
  4141eb:	jp     41428a <gen_struct_buffer_benchmark@@Base+0x15a>
  4141f1:	vmovss xmm0,DWORD PTR [rip+0xee17]        # 423010 <_IO_stdin_used@@Base+0x10>
  4141f9:	mov    rax,QWORD PTR [rbp-0x20]
  4141fd:	vmovss xmm1,DWORD PTR [rax+0x4]
  414202:	vucomiss xmm1,xmm0
  414206:	jne    41428a <gen_struct_buffer_benchmark@@Base+0x15a>
  41420c:	jp     41428a <gen_struct_buffer_benchmark@@Base+0x15a>
  414212:	vmovss xmm0,DWORD PTR [rip+0xedfe]        # 423018 <_IO_stdin_used@@Base+0x18>
  41421a:	mov    rax,QWORD PTR [rbp-0x20]
  41421e:	vmovss xmm1,DWORD PTR [rax+0x8]
  414223:	vucomiss xmm1,xmm0
  414227:	jne    41428a <gen_struct_buffer_benchmark@@Base+0x15a>
  41422d:	jp     41428a <gen_struct_buffer_benchmark@@Base+0x15a>
  414233:	vmovsd xmm0,QWORD PTR [rip+0xeded]        # 423028 <_IO_stdin_used@@Base+0x28>
  41423b:	mov    rax,QWORD PTR [rbp-0x20]
  41423f:	vmovsd xmm1,QWORD PTR [rax+0x10]
  414244:	vucomisd xmm1,xmm0
  414248:	jne    41428a <gen_struct_buffer_benchmark@@Base+0x15a>
  41424e:	jp     41428a <gen_struct_buffer_benchmark@@Base+0x15a>
  414254:	mov    rax,QWORD PTR [rbp-0x20]
  414258:	movsx  ecx,BYTE PTR [rax+0x18]
  41425c:	cmp    ecx,0x8
  41425f:	jne    41428a <gen_struct_buffer_benchmark@@Base+0x15a>
  414265:	mov    rax,QWORD PTR [rbp-0x20]
  414269:	movsx  ecx,WORD PTR [rax+0x1a]
  41426d:	cmp    ecx,0xaaa
  414273:	jne    41428a <gen_struct_buffer_benchmark@@Base+0x15a>
  414279:	mov    rax,QWORD PTR [rbp-0x20]
  41427d:	movsx  ecx,BYTE PTR [rax+0x1c]
  414281:	cmp    ecx,0xffffffef
  414284:	je     414296 <gen_struct_buffer_benchmark@@Base+0x166>
  41428a:	mov    DWORD PTR [rbp-0x4],0xffffffff
  414291:	jmp    41429d <gen_struct_buffer_benchmark@@Base+0x16d>
  414296:	mov    DWORD PTR [rbp-0x4],0x0
  41429d:	mov    eax,DWORD PTR [rbp-0x4]
  4142a0:	add    rsp,0x40
  4142a4:	pop    rbp
  4142a5:	ret    
  4142a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4142b0:	push   rbp
  4142b1:	mov    rbp,rsp
  4142b4:	sub    rsp,0x20
  4142b8:	mov    QWORD PTR [rbp-0x8],rdi
  4142bc:	mov    QWORD PTR [rbp-0x10],rsi
  4142c0:	cmp    QWORD PTR [rbp-0x8],0x0
  4142c5:	je     4142e1 <gen_struct_buffer_benchmark@@Base+0x1b1>
  4142cb:	mov    rdi,QWORD PTR [rbp-0x8]
  4142cf:	mov    rsi,QWORD PTR [rbp-0x10]
  4142d3:	call   406a20 <test_typed_table_with_emptystruct@@Base+0x470>
  4142d8:	cmp    eax,0x0
  4142db:	jne    4142ee <gen_struct_buffer_benchmark@@Base+0x1be>
  4142e1:	xor    eax,eax
  4142e3:	mov    ecx,eax
  4142e5:	mov    QWORD PTR [rbp-0x18],rcx
  4142e9:	jmp    41430e <gen_struct_buffer_benchmark@@Base+0x1de>
  4142ee:	mov    rax,QWORD PTR [rbp-0x8]
  4142f2:	mov    rdi,QWORD PTR [rbp-0x8]
  4142f6:	mov    QWORD PTR [rbp-0x20],rax
  4142fa:	call   414930 <main@@Base+0x540>
  4142ff:	mov    eax,eax
  414301:	mov    edi,eax
  414303:	mov    rcx,QWORD PTR [rbp-0x20]
  414307:	add    rcx,rdi
  41430a:	mov    QWORD PTR [rbp-0x18],rcx
  41430e:	mov    rax,QWORD PTR [rbp-0x18]
  414312:	add    rsp,0x20
  414316:	pop    rbp
  414317:	ret    
  414318:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000414320 <time_struct_buffer@@Base>:
  414320:	push   rbp
  414321:	mov    rbp,rsp
  414324:	sub    rsp,0x40
  414328:	mov    QWORD PTR [rbp-0x8],rdi
  41432c:	mov    DWORD PTR [rbp-0x1c],0xf4240
  414333:	mov    DWORD PTR [rbp-0x30],0x0
  41433a:	lea    rdi,[rip+0x116a5]        # 4259e6 <_IO_stdin_used@@Base+0x29e6>
  414341:	mov    al,0x0
  414343:	call   404070 <printf@plt>
  414348:	mov    DWORD PTR [rbp-0x34],eax
  41434b:	call   413e70 <time_monster@@Base+0xb0>
  414350:	vmovsd QWORD PTR [rbp-0x10],xmm0
  414355:	mov    DWORD PTR [rbp-0x2c],0x0
  41435c:	cmp    DWORD PTR [rbp-0x2c],0xf4240
  414363:	jge    414386 <time_struct_buffer@@Base+0x66>
  414369:	mov    rdi,QWORD PTR [rbp-0x8]
  41436d:	call   414130 <gen_struct_buffer_benchmark@@Base>
  414372:	or     eax,DWORD PTR [rbp-0x30]
  414375:	mov    DWORD PTR [rbp-0x30],eax
  414378:	mov    eax,DWORD PTR [rbp-0x2c]
  41437b:	add    eax,0x1
  41437e:	mov    DWORD PTR [rbp-0x2c],eax
  414381:	jmp    41435c <time_struct_buffer@@Base+0x3c>
  414386:	call   413e70 <time_monster@@Base+0xb0>
  41438b:	vmovsd QWORD PTR [rbp-0x18],xmm0
  414390:	mov    rdi,QWORD PTR [rbp-0x8]
  414394:	call   41e830 <flatcc_builder_get_buffer_size@@Base>
  414399:	mov    QWORD PTR [rbp-0x28],rax
  41439d:	cmp    DWORD PTR [rbp-0x30],0x0
  4143a1:	je     4143b8 <time_struct_buffer@@Base+0x98>
  4143a7:	lea    rdi,[rip+0x11668]        # 425a16 <_IO_stdin_used@@Base+0x2a16>
  4143ae:	mov    al,0x0
  4143b0:	call   404070 <printf@plt>
  4143b5:	mov    DWORD PTR [rbp-0x38],eax
  4143b8:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  4143bd:	vmovsd xmm1,QWORD PTR [rbp-0x18]
  4143c2:	mov    rsi,QWORD PTR [rbp-0x28]
  4143c6:	lea    rdi,[rip+0x1165b]        # 425a28 <_IO_stdin_used@@Base+0x2a28>
  4143cd:	mov    edx,0xf4240
  4143d2:	lea    rcx,[rip+0x11635]        # 425a0e <_IO_stdin_used@@Base+0x2a0e>
  4143d9:	call   413ef0 <time_monster@@Base+0x130>
  4143de:	mov    edx,DWORD PTR [rbp-0x30]
  4143e1:	mov    DWORD PTR [rbp-0x3c],eax
  4143e4:	mov    eax,edx
  4143e6:	add    rsp,0x40
  4143ea:	pop    rbp
  4143eb:	ret    
  4143ec:	nop    DWORD PTR [rax+0x0]

00000000004143f0 <main@@Base>:
  4143f0:	push   rbp
  4143f1:	mov    rbp,rsp
  4143f4:	sub    rsp,0x210
  4143fb:	mov    DWORD PTR [rbp-0x4],0x0
  414402:	mov    DWORD PTR [rbp-0x8],edi
  414405:	mov    QWORD PTR [rbp-0x10],rsi
  414409:	lea    rsi,[rbp-0x198]
  414410:	mov    QWORD PTR [rbp-0x1a0],rsi
  414417:	mov    rdi,QWORD PTR [rbp-0x1a0]
  41441e:	call   419520 <flatcc_builder_init@@Base>
  414423:	lea    rdi,[rip+0x1162b]        # 425a55 <_IO_stdin_used@@Base+0x2a55>
  41442a:	mov    DWORD PTR [rbp-0x1a4],eax
  414430:	mov    al,0x0
  414432:	call   404070 <printf@plt>
  414437:	mov    rdi,QWORD PTR [rbp-0x1a0]
  41443e:	mov    DWORD PTR [rbp-0x1a8],eax
  414444:	call   4064c0 <test_table_with_emptystruct@@Base>
  414449:	cmp    eax,0x0
  41444c:	je     414472 <main@@Base+0x82>
  414452:	lea    rdi,[rip+0x11618]        # 425a71 <_IO_stdin_used@@Base+0x2a71>
  414459:	mov    al,0x0
  41445b:	call   404070 <printf@plt>
  414460:	mov    DWORD PTR [rbp-0x4],0xffffffff
  414467:	mov    DWORD PTR [rbp-0x1ac],eax
  41446d:	jmp    414916 <main@@Base+0x526>
  414472:	mov    rdi,QWORD PTR [rbp-0x1a0]
  414479:	call   4048f0 <test_enums@@Base>
  41447e:	cmp    eax,0x0
  414481:	je     4144a7 <main@@Base+0xb7>
  414487:	lea    rdi,[rip+0x115e3]        # 425a71 <_IO_stdin_used@@Base+0x2a71>
  41448e:	mov    al,0x0
  414490:	call   404070 <printf@plt>
  414495:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41449c:	mov    DWORD PTR [rbp-0x1b0],eax
  4144a2:	jmp    414916 <main@@Base+0x526>
  4144a7:	mov    rdi,QWORD PTR [rbp-0x1a0]
  4144ae:	call   405a90 <test_empty_monster@@Base>
  4144b3:	cmp    eax,0x0
  4144b6:	je     4144dc <main@@Base+0xec>
  4144bc:	lea    rdi,[rip+0x115ae]        # 425a71 <_IO_stdin_used@@Base+0x2a71>
  4144c3:	mov    al,0x0
  4144c5:	call   404070 <printf@plt>
  4144ca:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4144d1:	mov    DWORD PTR [rbp-0x1b4],eax
  4144d7:	jmp    414916 <main@@Base+0x526>
  4144dc:	mov    rdi,QWORD PTR [rbp-0x1a0]
  4144e3:	call   40aea0 <test_monster@@Base>
  4144e8:	cmp    eax,0x0
  4144eb:	je     414511 <main@@Base+0x121>
  4144f1:	lea    rdi,[rip+0x11579]        # 425a71 <_IO_stdin_used@@Base+0x2a71>
  4144f8:	mov    al,0x0
  4144fa:	call   404070 <printf@plt>
  4144ff:	mov    DWORD PTR [rbp-0x4],0xffffffff
  414506:	mov    DWORD PTR [rbp-0x1b8],eax
  41450c:	jmp    414916 <main@@Base+0x526>
  414511:	mov    rdi,QWORD PTR [rbp-0x1a0]
  414518:	call   40af60 <test_monster_with_size@@Base>
  41451d:	cmp    eax,0x0
  414520:	je     414546 <main@@Base+0x156>
  414526:	lea    rdi,[rip+0x11544]        # 425a71 <_IO_stdin_used@@Base+0x2a71>
  41452d:	mov    al,0x0
  41452f:	call   404070 <printf@plt>
  414534:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41453b:	mov    DWORD PTR [rbp-0x1bc],eax
  414541:	jmp    414916 <main@@Base+0x526>
  414546:	mov    rdi,QWORD PTR [rbp-0x1a0]
  41454d:	call   40b100 <test_string@@Base>
  414552:	cmp    eax,0x0
  414555:	je     41457b <main@@Base+0x18b>
  41455b:	lea    rdi,[rip+0x1150f]        # 425a71 <_IO_stdin_used@@Base+0x2a71>
  414562:	mov    al,0x0
  414564:	call   404070 <printf@plt>
  414569:	mov    DWORD PTR [rbp-0x4],0xffffffff
  414570:	mov    DWORD PTR [rbp-0x1c0],eax
  414576:	jmp    414916 <main@@Base+0x526>
  41457b:	mov    rdi,QWORD PTR [rbp-0x1a0]
  414582:	call   4131a0 <test_struct_buffer@@Base>
  414587:	cmp    eax,0x0
  41458a:	je     4145b0 <main@@Base+0x1c0>
  414590:	lea    rdi,[rip+0x114da]        # 425a71 <_IO_stdin_used@@Base+0x2a71>
  414597:	mov    al,0x0
  414599:	call   404070 <printf@plt>
  41459e:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4145a5:	mov    DWORD PTR [rbp-0x1c4],eax
  4145ab:	jmp    414916 <main@@Base+0x526>
  4145b0:	mov    rdi,QWORD PTR [rbp-0x1a0]
  4145b7:	call   405d90 <test_typed_empty_monster@@Base>
  4145bc:	cmp    eax,0x0
  4145bf:	je     4145e5 <main@@Base+0x1f5>
  4145c5:	lea    rdi,[rip+0x114a5]        # 425a71 <_IO_stdin_used@@Base+0x2a71>
  4145cc:	mov    al,0x0
  4145ce:	call   404070 <printf@plt>
  4145d3:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4145da:	mov    DWORD PTR [rbp-0x1c8],eax
  4145e0:	jmp    414916 <main@@Base+0x526>
  4145e5:	mov    rdi,QWORD PTR [rbp-0x1a0]
  4145ec:	call   4065b0 <test_typed_table_with_emptystruct@@Base>
  4145f1:	cmp    eax,0x0
  4145f4:	je     41461a <main@@Base+0x22a>
  4145fa:	lea    rdi,[rip+0x11470]        # 425a71 <_IO_stdin_used@@Base+0x2a71>
  414601:	mov    al,0x0
  414603:	call   404070 <printf@plt>
  414608:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41460f:	mov    DWORD PTR [rbp-0x1cc],eax
  414615:	jmp    414916 <main@@Base+0x526>
  41461a:	mov    rdi,QWORD PTR [rbp-0x1a0]
  414621:	call   413620 <test_typed_struct_buffer@@Base>
  414626:	cmp    eax,0x0
  414629:	je     41464f <main@@Base+0x25f>
  41462f:	lea    rdi,[rip+0x1143b]        # 425a71 <_IO_stdin_used@@Base+0x2a71>
  414636:	mov    al,0x0
  414638:	call   404070 <printf@plt>
  41463d:	mov    DWORD PTR [rbp-0x4],0xffffffff
  414644:	mov    DWORD PTR [rbp-0x1d0],eax
  41464a:	jmp    414916 <main@@Base+0x526>
  41464f:	mov    rdi,QWORD PTR [rbp-0x1a0]
  414656:	call   40e6f0 <test_clone_slice@@Base>
  41465b:	cmp    eax,0x0
  41465e:	je     414684 <main@@Base+0x294>
  414664:	lea    rdi,[rip+0x11406]        # 425a71 <_IO_stdin_used@@Base+0x2a71>
  41466b:	mov    al,0x0
  41466d:	call   404070 <printf@plt>
  414672:	mov    DWORD PTR [rbp-0x4],0xffffffff
  414679:	mov    DWORD PTR [rbp-0x1d4],eax
  41467f:	jmp    414916 <main@@Base+0x526>
  414684:	mov    rdi,QWORD PTR [rbp-0x1a0]
  41468b:	call   412460 <test_add_set_defaults@@Base>
  414690:	cmp    eax,0x0
  414693:	je     4146b9 <main@@Base+0x2c9>
  414699:	lea    rdi,[rip+0x113d1]        # 425a71 <_IO_stdin_used@@Base+0x2a71>
  4146a0:	mov    al,0x0
  4146a2:	call   404070 <printf@plt>
  4146a7:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4146ae:	mov    DWORD PTR [rbp-0x1d8],eax
  4146b4:	jmp    414916 <main@@Base+0x526>
  4146b9:	mov    rdi,QWORD PTR [rbp-0x1a0]
  4146c0:	call   40f250 <test_create_add_field@@Base>
  4146c5:	cmp    eax,0x0
  4146c8:	je     4146ee <main@@Base+0x2fe>
  4146ce:	lea    rdi,[rip+0x1139c]        # 425a71 <_IO_stdin_used@@Base+0x2a71>
  4146d5:	mov    al,0x0
  4146d7:	call   404070 <printf@plt>
  4146dc:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4146e3:	mov    DWORD PTR [rbp-0x1dc],eax
  4146e9:	jmp    414916 <main@@Base+0x526>
  4146ee:	mov    rdi,QWORD PTR [rbp-0x1a0]
  4146f5:	call   40f620 <test_union_vector@@Base>
  4146fa:	cmp    eax,0x0
  4146fd:	je     414723 <main@@Base+0x333>
  414703:	lea    rdi,[rip+0x11367]        # 425a71 <_IO_stdin_used@@Base+0x2a71>
  41470a:	mov    al,0x0
  41470c:	call   404070 <printf@plt>
  414711:	mov    DWORD PTR [rbp-0x4],0xffffffff
  414718:	mov    DWORD PTR [rbp-0x1e0],eax
  41471e:	jmp    414916 <main@@Base+0x526>
  414723:	mov    rdi,QWORD PTR [rbp-0x1a0]
  41472a:	call   40e360 <test_basic_sort@@Base>
  41472f:	cmp    eax,0x0
  414732:	je     414758 <main@@Base+0x368>
  414738:	lea    rdi,[rip+0x11332]        # 425a71 <_IO_stdin_used@@Base+0x2a71>
  41473f:	mov    al,0x0
  414741:	call   404070 <printf@plt>
  414746:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41474d:	mov    DWORD PTR [rbp-0x1e4],eax
  414753:	jmp    414916 <main@@Base+0x526>
  414758:	mov    rdi,QWORD PTR [rbp-0x1a0]
  41475f:	call   40b4f0 <test_sort_find@@Base>
  414764:	cmp    eax,0x0
  414767:	je     41478d <main@@Base+0x39d>
  41476d:	lea    rdi,[rip+0x112fd]        # 425a71 <_IO_stdin_used@@Base+0x2a71>
  414774:	mov    al,0x0
  414776:	call   404070 <printf@plt>
  41477b:	mov    DWORD PTR [rbp-0x4],0xffffffff
  414782:	mov    DWORD PTR [rbp-0x1e8],eax
  414788:	jmp    414916 <main@@Base+0x526>
  41478d:	mov    rdi,QWORD PTR [rbp-0x1a0]
  414794:	call   40be00 <test_scan@@Base>
  414799:	cmp    eax,0x0
  41479c:	je     4147c2 <main@@Base+0x3d2>
  4147a2:	lea    rdi,[rip+0x112c8]        # 425a71 <_IO_stdin_used@@Base+0x2a71>
  4147a9:	mov    al,0x0
  4147ab:	call   404070 <printf@plt>
  4147b0:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4147b7:	mov    DWORD PTR [rbp-0x1ec],eax
  4147bd:	jmp    414916 <main@@Base+0x526>
  4147c2:	mov    rdi,QWORD PTR [rbp-0x1a0]
  4147c9:	call   412970 <test_nested_buffer@@Base>
  4147ce:	cmp    eax,0x0
  4147d1:	je     4147f7 <main@@Base+0x407>
  4147d7:	lea    rdi,[rip+0x11293]        # 425a71 <_IO_stdin_used@@Base+0x2a71>
  4147de:	mov    al,0x0
  4147e0:	call   404070 <printf@plt>
  4147e5:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4147ec:	mov    DWORD PTR [rbp-0x1f0],eax
  4147f2:	jmp    414916 <main@@Base+0x526>
  4147f7:	mov    rdi,QWORD PTR [rbp-0x1a0]
  4147fe:	call   412c50 <test_nested_buffer_first@@Base>
  414803:	cmp    eax,0x0
  414806:	je     41482c <main@@Base+0x43c>
  41480c:	lea    rdi,[rip+0x1125e]        # 425a71 <_IO_stdin_used@@Base+0x2a71>
  414813:	mov    al,0x0
  414815:	call   404070 <printf@plt>
  41481a:	mov    DWORD PTR [rbp-0x4],0xffffffff
  414821:	mov    DWORD PTR [rbp-0x1f4],eax
  414827:	jmp    414916 <main@@Base+0x526>
  41482c:	mov    rdi,QWORD PTR [rbp-0x1a0]
  414833:	call   412e10 <test_nested_buffer_using_nest@@Base>
  414838:	cmp    eax,0x0
  41483b:	je     414861 <main@@Base+0x471>
  414841:	lea    rdi,[rip+0x11229]        # 425a71 <_IO_stdin_used@@Base+0x2a71>
  414848:	mov    al,0x0
  41484a:	call   404070 <printf@plt>
  41484f:	mov    DWORD PTR [rbp-0x4],0xffffffff
  414856:	mov    DWORD PTR [rbp-0x1f8],eax
  41485c:	jmp    414916 <main@@Base+0x526>
  414861:	mov    rax,QWORD PTR [rbp-0x1a0]
  414868:	mov    rdi,rax
  41486b:	call   413190 <verify_include@@Base>
  414870:	cmp    eax,0x0
  414873:	je     414899 <main@@Base+0x4a9>
  414879:	lea    rdi,[rip+0x111f1]        # 425a71 <_IO_stdin_used@@Base+0x2a71>
  414880:	mov    al,0x0
  414882:	call   404070 <printf@plt>
  414887:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41488e:	mov    DWORD PTR [rbp-0x1fc],eax
  414894:	jmp    414916 <main@@Base+0x526>
  414899:	mov    rdi,QWORD PTR [rbp-0x1a0]
  4148a0:	call   404900 <test_type_aliases@@Base>
  4148a5:	cmp    eax,0x0
  4148a8:	je     4148ce <main@@Base+0x4de>
  4148ae:	lea    rdi,[rip+0x111bc]        # 425a71 <_IO_stdin_used@@Base+0x2a71>
  4148b5:	mov    al,0x0
  4148b7:	call   404070 <printf@plt>
  4148bc:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4148c3:	mov    DWORD PTR [rbp-0x200],eax
  4148c9:	jmp    414916 <main@@Base+0x526>
  4148ce:	mov    rdi,QWORD PTR [rbp-0x1a0]
  4148d5:	call   4103a0 <test_mixed_type_union@@Base>
  4148da:	cmp    eax,0x0
  4148dd:	je     414903 <main@@Base+0x513>
  4148e3:	lea    rdi,[rip+0x11187]        # 425a71 <_IO_stdin_used@@Base+0x2a71>
  4148ea:	mov    al,0x0
  4148ec:	call   404070 <printf@plt>
  4148f1:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4148f8:	mov    DWORD PTR [rbp-0x204],eax
  4148fe:	jmp    414916 <main@@Base+0x526>
  414903:	mov    rdi,QWORD PTR [rbp-0x1a0]
  41490a:	call   4197e0 <flatcc_builder_clear@@Base>
  41490f:	mov    DWORD PTR [rbp-0x4],0x0
  414916:	mov    eax,DWORD PTR [rbp-0x4]
  414919:	add    rsp,0x210
  414920:	pop    rbp
  414921:	ret    
  414922:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41492c:	nop    DWORD PTR [rax+0x0]
  414930:	push   rbp
  414931:	mov    rbp,rsp
  414934:	sub    rsp,0x10
  414938:	mov    QWORD PTR [rbp-0x8],rdi
  41493c:	mov    rdi,QWORD PTR [rbp-0x8]
  414940:	mov    edi,DWORD PTR [rdi]
  414942:	call   414950 <main@@Base+0x560>
  414947:	add    rsp,0x10
  41494b:	pop    rbp
  41494c:	ret    
  41494d:	nop    DWORD PTR [rax]
  414950:	push   rbp
  414951:	mov    rbp,rsp
  414954:	mov    DWORD PTR [rbp-0x4],edi
  414957:	mov    eax,DWORD PTR [rbp-0x4]
  41495a:	pop    rbp
  41495b:	ret    
  41495c:	nop    DWORD PTR [rax+0x0]
  414960:	push   rbp
  414961:	mov    rbp,rsp
  414964:	sub    rsp,0x10
  414968:	mov    QWORD PTR [rbp-0x8],rdi
  41496c:	mov    rdi,QWORD PTR [rbp-0x8]
  414970:	mov    edi,DWORD PTR [rdi]
  414972:	call   4149d0 <main@@Base+0x5e0>
  414977:	add    rsp,0x10
  41497b:	pop    rbp
  41497c:	ret    
  41497d:	nop    DWORD PTR [rax]
  414980:	push   rbp
  414981:	mov    rbp,rsp
  414984:	sub    rsp,0x10
  414988:	mov    QWORD PTR [rbp-0x8],rdi
  41498c:	mov    rdi,QWORD PTR [rbp-0x8]
  414990:	movzx  edi,WORD PTR [rdi]
  414993:	call   4149e0 <main@@Base+0x5f0>
  414998:	movzx  eax,ax
  41499b:	add    rsp,0x10
  41499f:	pop    rbp
  4149a0:	ret    
  4149a1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4149ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4149b0:	push   rbp
  4149b1:	mov    rbp,rsp
  4149b4:	sub    rsp,0x10
  4149b8:	mov    QWORD PTR [rbp-0x8],rdi
  4149bc:	mov    rdi,QWORD PTR [rbp-0x8]
  4149c0:	movsx  edi,WORD PTR [rdi]
  4149c3:	call   414a00 <main@@Base+0x610>
  4149c8:	cwde   
  4149c9:	add    rsp,0x10
  4149cd:	pop    rbp
  4149ce:	ret    
  4149cf:	nop
  4149d0:	push   rbp
  4149d1:	mov    rbp,rsp
  4149d4:	mov    DWORD PTR [rbp-0x4],edi
  4149d7:	mov    eax,DWORD PTR [rbp-0x4]
  4149da:	pop    rbp
  4149db:	ret    
  4149dc:	nop    DWORD PTR [rax+0x0]
  4149e0:	push   rbp
  4149e1:	mov    rbp,rsp
  4149e4:	mov    ax,di
  4149e7:	mov    WORD PTR [rbp-0x2],ax
  4149eb:	movzx  eax,WORD PTR [rbp-0x2]
  4149ef:	pop    rbp
  4149f0:	ret    
  4149f1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4149fb:	nop    DWORD PTR [rax+rax*1+0x0]
  414a00:	push   rbp
  414a01:	mov    rbp,rsp
  414a04:	mov    ax,di
  414a07:	mov    WORD PTR [rbp-0x2],ax
  414a0b:	movsx  eax,WORD PTR [rbp-0x2]
  414a0f:	pop    rbp
  414a10:	ret    
  414a11:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414a1b:	nop    DWORD PTR [rax+rax*1+0x0]
  414a20:	push   rbp
  414a21:	mov    rbp,rsp
  414a24:	push   r15
  414a26:	push   r14
  414a28:	push   rbx
  414a29:	sub    rsp,0x58
  414a2d:	mov    ax,r8w
  414a31:	mov    r10w,cx
  414a35:	mov    r11b,dl
  414a38:	mov    bl,sil
  414a3b:	mov    ecx,DWORD PTR [rbp+0x30]
  414a3e:	mov    edx,DWORD PTR [rbp+0x28]
  414a41:	mov    r14,QWORD PTR [rbp+0x20]
  414a45:	mov    r15,QWORD PTR [rbp+0x18]
  414a49:	mov    esi,DWORD PTR [rbp+0x10]
  414a4c:	mov    QWORD PTR [rbp-0x28],rdi
  414a50:	mov    BYTE PTR [rbp-0x29],bl
  414a53:	mov    BYTE PTR [rbp-0x2a],r11b
  414a57:	mov    WORD PTR [rbp-0x2c],r10w
  414a5c:	mov    WORD PTR [rbp-0x2e],ax
  414a60:	mov    DWORD PTR [rbp-0x34],r9d
  414a64:	vmovss DWORD PTR [rbp-0x38],xmm0
  414a69:	vmovsd QWORD PTR [rbp-0x40],xmm1
  414a6e:	mov    rdi,QWORD PTR [rbp-0x28]
  414a72:	mov    DWORD PTR [rbp-0x44],edx
  414a75:	mov    QWORD PTR [rbp-0x50],r14
  414a79:	mov    DWORD PTR [rbp-0x54],esi
  414a7c:	mov    QWORD PTR [rbp-0x60],r15
  414a80:	mov    DWORD PTR [rbp-0x64],ecx
  414a83:	call   414bc0 <main@@Base+0x7d0>
  414a88:	cmp    eax,0x0
  414a8b:	jne    414b97 <main@@Base+0x7a7>
  414a91:	mov    rdi,QWORD PTR [rbp-0x28]
  414a95:	mov    rsi,QWORD PTR [rbp+0x18]
  414a99:	call   414be0 <main@@Base+0x7f0>
  414a9e:	cmp    eax,0x0
  414aa1:	jne    414b97 <main@@Base+0x7a7>
  414aa7:	mov    rdi,QWORD PTR [rbp-0x28]
  414aab:	mov    rsi,QWORD PTR [rbp+0x20]
  414aaf:	call   414c60 <main@@Base+0x870>
  414ab4:	cmp    eax,0x0
  414ab7:	jne    414b97 <main@@Base+0x7a7>
  414abd:	mov    rdi,QWORD PTR [rbp-0x28]
  414ac1:	vmovsd xmm0,QWORD PTR [rbp-0x40]
  414ac6:	call   414ce0 <main@@Base+0x8f0>
  414acb:	cmp    eax,0x0
  414ace:	jne    414b97 <main@@Base+0x7a7>
  414ad4:	mov    rdi,QWORD PTR [rbp-0x28]
  414ad8:	mov    esi,DWORD PTR [rbp-0x34]
  414adb:	call   414d70 <main@@Base+0x980>
  414ae0:	cmp    eax,0x0
  414ae3:	jne    414b97 <main@@Base+0x7a7>
  414ae9:	mov    rdi,QWORD PTR [rbp-0x28]
  414aed:	mov    esi,DWORD PTR [rbp+0x10]
  414af0:	call   414df0 <main@@Base+0xa00>
  414af5:	cmp    eax,0x0
  414af8:	jne    414b97 <main@@Base+0x7a7>
  414afe:	mov    rdi,QWORD PTR [rbp-0x28]
  414b02:	vmovss xmm0,DWORD PTR [rbp-0x38]
  414b07:	call   414e70 <main@@Base+0xa80>
  414b0c:	cmp    eax,0x0
  414b0f:	jne    414b97 <main@@Base+0x7a7>
  414b15:	mov    rdi,QWORD PTR [rbp-0x28]
  414b19:	mov    esi,DWORD PTR [rbp+0x28]
  414b1c:	call   414f00 <main@@Base+0xb10>
  414b21:	cmp    eax,0x0
  414b24:	jne    414b97 <main@@Base+0x7a7>
  414b2a:	mov    rdi,QWORD PTR [rbp-0x28]
  414b2e:	mov    esi,DWORD PTR [rbp+0x30]
  414b31:	call   414f60 <main@@Base+0xb70>
  414b36:	cmp    eax,0x0
  414b39:	jne    414b97 <main@@Base+0x7a7>
  414b3f:	mov    rdi,QWORD PTR [rbp-0x28]
  414b43:	movsx  esi,WORD PTR [rbp-0x2c]
  414b47:	call   414fc0 <main@@Base+0xbd0>
  414b4c:	cmp    eax,0x0
  414b4f:	jne    414b97 <main@@Base+0x7a7>
  414b55:	mov    rdi,QWORD PTR [rbp-0x28]
  414b59:	movzx  esi,WORD PTR [rbp-0x2e]
  414b5d:	call   415040 <main@@Base+0xc50>
  414b62:	cmp    eax,0x0
  414b65:	jne    414b97 <main@@Base+0x7a7>
  414b6b:	mov    rdi,QWORD PTR [rbp-0x28]
  414b6f:	movsx  esi,BYTE PTR [rbp-0x29]
  414b73:	call   4150d0 <main@@Base+0xce0>
  414b78:	cmp    eax,0x0
  414b7b:	jne    414b97 <main@@Base+0x7a7>
  414b81:	mov    rdi,QWORD PTR [rbp-0x28]
  414b85:	movzx  esi,BYTE PTR [rbp-0x2a]
  414b89:	call   415150 <main@@Base+0xd60>
  414b8e:	cmp    eax,0x0
  414b91:	je     414ba3 <main@@Base+0x7b3>
  414b97:	mov    DWORD PTR [rbp-0x1c],0x0
  414b9e:	jmp    414baf <main@@Base+0x7bf>
  414ba3:	mov    rdi,QWORD PTR [rbp-0x28]
  414ba7:	call   4151d0 <main@@Base+0xde0>
  414bac:	mov    DWORD PTR [rbp-0x1c],eax
  414baf:	mov    eax,DWORD PTR [rbp-0x1c]
  414bb2:	add    rsp,0x58
  414bb6:	pop    rbx
  414bb7:	pop    r14
  414bb9:	pop    r15
  414bbb:	pop    rbp
  414bbc:	ret    
  414bbd:	nop    DWORD PTR [rax]
  414bc0:	push   rbp
  414bc1:	mov    rbp,rsp
  414bc4:	sub    rsp,0x10
  414bc8:	mov    QWORD PTR [rbp-0x8],rdi
  414bcc:	mov    rdi,QWORD PTR [rbp-0x8]
  414bd0:	mov    esi,0xc
  414bd5:	call   41be00 <flatcc_builder_start_table@@Base>
  414bda:	add    rsp,0x10
  414bde:	pop    rbp
  414bdf:	ret    
  414be0:	push   rbp
  414be1:	mov    rbp,rsp
  414be4:	sub    rsp,0x30
  414be8:	mov    QWORD PTR [rbp-0x10],rdi
  414bec:	mov    QWORD PTR [rbp-0x18],rsi
  414bf0:	cmp    QWORD PTR [rbp-0x18],0x0
  414bf5:	jne    414c07 <main@@Base+0x817>
  414bfb:	mov    DWORD PTR [rbp-0x4],0x0
  414c02:	jmp    414c53 <main@@Base+0x863>
  414c07:	mov    eax,0x8
  414c0c:	mov    edx,eax
  414c0e:	mov    rdi,QWORD PTR [rbp-0x10]
  414c12:	mov    esi,0x6
  414c17:	mov    ecx,0x8
  414c1c:	call   41d6d0 <flatcc_builder_table_add@@Base>
  414c21:	mov    QWORD PTR [rbp-0x20],rax
  414c25:	cmp    rax,0x0
  414c29:	jne    414c3b <main@@Base+0x84b>
  414c2f:	mov    DWORD PTR [rbp-0x4],0xffffffff
  414c36:	jmp    414c53 <main@@Base+0x863>
  414c3b:	mov    rdi,QWORD PTR [rbp-0x20]
  414c3f:	mov    rsi,QWORD PTR [rbp-0x18]
  414c43:	call   415230 <main@@Base+0xe40>
  414c48:	mov    DWORD PTR [rbp-0x4],0x0
  414c4f:	mov    QWORD PTR [rbp-0x28],rax
  414c53:	mov    eax,DWORD PTR [rbp-0x4]
  414c56:	add    rsp,0x30
  414c5a:	pop    rbp
  414c5b:	ret    
  414c5c:	nop    DWORD PTR [rax+0x0]
  414c60:	push   rbp
  414c61:	mov    rbp,rsp
  414c64:	sub    rsp,0x30
  414c68:	mov    QWORD PTR [rbp-0x10],rdi
  414c6c:	mov    QWORD PTR [rbp-0x18],rsi
  414c70:	cmp    QWORD PTR [rbp-0x18],0x0
  414c75:	jne    414c87 <main@@Base+0x897>
  414c7b:	mov    DWORD PTR [rbp-0x4],0x0
  414c82:	jmp    414cd3 <main@@Base+0x8e3>
  414c87:	mov    eax,0x8
  414c8c:	mov    edx,eax
  414c8e:	mov    rdi,QWORD PTR [rbp-0x10]
  414c92:	mov    esi,0x7
  414c97:	mov    ecx,0x8
  414c9c:	call   41d6d0 <flatcc_builder_table_add@@Base>
  414ca1:	mov    QWORD PTR [rbp-0x20],rax
  414ca5:	cmp    rax,0x0
  414ca9:	jne    414cbb <main@@Base+0x8cb>
  414caf:	mov    DWORD PTR [rbp-0x4],0xffffffff
  414cb6:	jmp    414cd3 <main@@Base+0x8e3>
  414cbb:	mov    rdi,QWORD PTR [rbp-0x20]
  414cbf:	mov    rsi,QWORD PTR [rbp-0x18]
  414cc3:	call   415270 <main@@Base+0xe80>
  414cc8:	mov    DWORD PTR [rbp-0x4],0x0
  414ccf:	mov    QWORD PTR [rbp-0x28],rax
  414cd3:	mov    eax,DWORD PTR [rbp-0x4]
  414cd6:	add    rsp,0x30
  414cda:	pop    rbp
  414cdb:	ret    
  414cdc:	nop    DWORD PTR [rax+0x0]
  414ce0:	push   rbp
  414ce1:	mov    rbp,rsp
  414ce4:	sub    rsp,0x30
  414ce8:	mov    QWORD PTR [rbp-0x10],rdi
  414cec:	vmovsd QWORD PTR [rbp-0x18],xmm0
  414cf1:	vmovsd xmm0,QWORD PTR [rbp-0x18]
  414cf6:	vxorps xmm1,xmm1,xmm1
  414cfa:	vucomisd xmm0,xmm1
  414cfe:	jne    414d16 <main@@Base+0x926>
  414d04:	jp     414d16 <main@@Base+0x926>
  414d0a:	mov    DWORD PTR [rbp-0x4],0x0
  414d11:	jmp    414d63 <main@@Base+0x973>
  414d16:	mov    eax,0x8
  414d1b:	mov    edx,eax
  414d1d:	mov    rdi,QWORD PTR [rbp-0x10]
  414d21:	mov    esi,0x9
  414d26:	mov    ecx,0x8
  414d2b:	call   41d6d0 <flatcc_builder_table_add@@Base>
  414d30:	mov    QWORD PTR [rbp-0x20],rax
  414d34:	cmp    rax,0x0
  414d38:	jne    414d4a <main@@Base+0x95a>
  414d3e:	mov    DWORD PTR [rbp-0x4],0xffffffff
  414d45:	jmp    414d63 <main@@Base+0x973>
  414d4a:	mov    rdi,QWORD PTR [rbp-0x20]
  414d4e:	vmovsd xmm0,QWORD PTR [rbp-0x18]
  414d53:	call   4152b0 <main@@Base+0xec0>
  414d58:	mov    DWORD PTR [rbp-0x4],0x0
  414d5f:	mov    QWORD PTR [rbp-0x28],rax
  414d63:	mov    eax,DWORD PTR [rbp-0x4]
  414d66:	add    rsp,0x30
  414d6a:	pop    rbp
  414d6b:	ret    
  414d6c:	nop    DWORD PTR [rax+0x0]
  414d70:	push   rbp
  414d71:	mov    rbp,rsp
  414d74:	sub    rsp,0x30
  414d78:	mov    QWORD PTR [rbp-0x10],rdi
  414d7c:	mov    DWORD PTR [rbp-0x14],esi
  414d7f:	cmp    DWORD PTR [rbp-0x14],0x0
  414d83:	jne    414d95 <main@@Base+0x9a5>
  414d89:	mov    DWORD PTR [rbp-0x4],0x0
  414d90:	jmp    414ddf <main@@Base+0x9ef>
  414d95:	mov    eax,0x4
  414d9a:	mov    edx,eax
  414d9c:	mov    rdi,QWORD PTR [rbp-0x10]
  414da0:	mov    eax,0x4
  414da5:	mov    esi,eax
  414da7:	mov    ecx,eax
  414da9:	call   41d6d0 <flatcc_builder_table_add@@Base>
  414dae:	mov    QWORD PTR [rbp-0x20],rax
  414db2:	cmp    rax,0x0
  414db6:	jne    414dc8 <main@@Base+0x9d8>
  414dbc:	mov    DWORD PTR [rbp-0x4],0xffffffff
  414dc3:	jmp    414ddf <main@@Base+0x9ef>
  414dc8:	mov    rdi,QWORD PTR [rbp-0x20]
  414dcc:	mov    esi,DWORD PTR [rbp-0x14]
  414dcf:	call   415310 <main@@Base+0xf20>
  414dd4:	mov    DWORD PTR [rbp-0x4],0x0
  414ddb:	mov    QWORD PTR [rbp-0x28],rax
  414ddf:	mov    eax,DWORD PTR [rbp-0x4]
  414de2:	add    rsp,0x30
  414de6:	pop    rbp
  414de7:	ret    
  414de8:	nop    DWORD PTR [rax+rax*1+0x0]
  414df0:	push   rbp
  414df1:	mov    rbp,rsp
  414df4:	sub    rsp,0x30
  414df8:	mov    QWORD PTR [rbp-0x10],rdi
  414dfc:	mov    DWORD PTR [rbp-0x14],esi
  414dff:	cmp    DWORD PTR [rbp-0x14],0x0
  414e03:	jne    414e15 <main@@Base+0xa25>
  414e09:	mov    DWORD PTR [rbp-0x4],0x0
  414e10:	jmp    414e60 <main@@Base+0xa70>
  414e15:	mov    eax,0x4
  414e1a:	mov    edx,eax
  414e1c:	mov    rdi,QWORD PTR [rbp-0x10]
  414e20:	mov    esi,0x5
  414e25:	mov    ecx,0x4
  414e2a:	call   41d6d0 <flatcc_builder_table_add@@Base>
  414e2f:	mov    QWORD PTR [rbp-0x20],rax
  414e33:	cmp    rax,0x0
  414e37:	jne    414e49 <main@@Base+0xa59>
  414e3d:	mov    DWORD PTR [rbp-0x4],0xffffffff
  414e44:	jmp    414e60 <main@@Base+0xa70>
  414e49:	mov    rdi,QWORD PTR [rbp-0x20]
  414e4d:	mov    esi,DWORD PTR [rbp-0x14]
  414e50:	call   415350 <main@@Base+0xf60>
  414e55:	mov    DWORD PTR [rbp-0x4],0x0
  414e5c:	mov    QWORD PTR [rbp-0x28],rax
  414e60:	mov    eax,DWORD PTR [rbp-0x4]
  414e63:	add    rsp,0x30
  414e67:	pop    rbp
  414e68:	ret    
  414e69:	nop    DWORD PTR [rax+0x0]
  414e70:	push   rbp
  414e71:	mov    rbp,rsp
  414e74:	sub    rsp,0x30
  414e78:	mov    QWORD PTR [rbp-0x10],rdi
  414e7c:	vmovss DWORD PTR [rbp-0x14],xmm0
  414e81:	vmovss xmm0,DWORD PTR [rbp-0x14]
  414e86:	vxorps xmm1,xmm1,xmm1
  414e8a:	vucomiss xmm0,xmm1
  414e8e:	jne    414ea6 <main@@Base+0xab6>
  414e94:	jp     414ea6 <main@@Base+0xab6>
  414e9a:	mov    DWORD PTR [rbp-0x4],0x0
  414ea1:	jmp    414ef3 <main@@Base+0xb03>
  414ea6:	mov    eax,0x4
  414eab:	mov    edx,eax
  414ead:	mov    rdi,QWORD PTR [rbp-0x10]
  414eb1:	mov    esi,0x8
  414eb6:	mov    ecx,0x4
  414ebb:	call   41d6d0 <flatcc_builder_table_add@@Base>
  414ec0:	mov    QWORD PTR [rbp-0x20],rax
  414ec4:	cmp    rax,0x0
  414ec8:	jne    414eda <main@@Base+0xaea>
  414ece:	mov    DWORD PTR [rbp-0x4],0xffffffff
  414ed5:	jmp    414ef3 <main@@Base+0xb03>
  414eda:	mov    rdi,QWORD PTR [rbp-0x20]
  414ede:	vmovss xmm0,DWORD PTR [rbp-0x14]
  414ee3:	call   415390 <main@@Base+0xfa0>
  414ee8:	mov    DWORD PTR [rbp-0x4],0x0
  414eef:	mov    QWORD PTR [rbp-0x28],rax
  414ef3:	mov    eax,DWORD PTR [rbp-0x4]
  414ef6:	add    rsp,0x30
  414efa:	pop    rbp
  414efb:	ret    
  414efc:	nop    DWORD PTR [rax+0x0]
  414f00:	push   rbp
  414f01:	mov    rbp,rsp
  414f04:	sub    rsp,0x20
  414f08:	mov    QWORD PTR [rbp-0x8],rdi
  414f0c:	mov    DWORD PTR [rbp-0xc],esi
  414f0f:	cmp    DWORD PTR [rbp-0xc],0x0
  414f13:	je     414f48 <main@@Base+0xb58>
  414f19:	mov    rdi,QWORD PTR [rbp-0x8]
  414f1d:	mov    esi,0xa
  414f22:	call   41d5d0 <flatcc_builder_table_add_offset@@Base>
  414f27:	mov    QWORD PTR [rbp-0x18],rax
  414f2b:	cmp    rax,0x0
  414f2f:	je     414f48 <main@@Base+0xb58>
  414f35:	xor    eax,eax
  414f37:	mov    ecx,DWORD PTR [rbp-0xc]
  414f3a:	mov    rdx,QWORD PTR [rbp-0x18]
  414f3e:	mov    DWORD PTR [rdx],ecx
  414f40:	mov    DWORD PTR [rbp-0x1c],eax
  414f43:	jmp    414f55 <main@@Base+0xb65>
  414f48:	mov    eax,0xffffffff
  414f4d:	mov    DWORD PTR [rbp-0x1c],eax
  414f50:	jmp    414f55 <main@@Base+0xb65>
  414f55:	mov    eax,DWORD PTR [rbp-0x1c]
  414f58:	add    rsp,0x20
  414f5c:	pop    rbp
  414f5d:	ret    
  414f5e:	xchg   ax,ax
  414f60:	push   rbp
  414f61:	mov    rbp,rsp
  414f64:	sub    rsp,0x20
  414f68:	mov    QWORD PTR [rbp-0x8],rdi
  414f6c:	mov    DWORD PTR [rbp-0xc],esi
  414f6f:	cmp    DWORD PTR [rbp-0xc],0x0
  414f73:	je     414fa8 <main@@Base+0xbb8>
  414f79:	mov    rdi,QWORD PTR [rbp-0x8]
  414f7d:	mov    esi,0xb
  414f82:	call   41d5d0 <flatcc_builder_table_add_offset@@Base>
  414f87:	mov    QWORD PTR [rbp-0x18],rax
  414f8b:	cmp    rax,0x0
  414f8f:	je     414fa8 <main@@Base+0xbb8>
  414f95:	xor    eax,eax
  414f97:	mov    ecx,DWORD PTR [rbp-0xc]
  414f9a:	mov    rdx,QWORD PTR [rbp-0x18]
  414f9e:	mov    DWORD PTR [rdx],ecx
  414fa0:	mov    DWORD PTR [rbp-0x1c],eax
  414fa3:	jmp    414fb5 <main@@Base+0xbc5>
  414fa8:	mov    eax,0xffffffff
  414fad:	mov    DWORD PTR [rbp-0x1c],eax
  414fb0:	jmp    414fb5 <main@@Base+0xbc5>
  414fb5:	mov    eax,DWORD PTR [rbp-0x1c]
  414fb8:	add    rsp,0x20
  414fbc:	pop    rbp
  414fbd:	ret    
  414fbe:	xchg   ax,ax
  414fc0:	push   rbp
  414fc1:	mov    rbp,rsp
  414fc4:	sub    rsp,0x30
  414fc8:	mov    ax,si
  414fcb:	mov    QWORD PTR [rbp-0x10],rdi
  414fcf:	mov    WORD PTR [rbp-0x12],ax
  414fd3:	movsx  esi,WORD PTR [rbp-0x12]
  414fd7:	cmp    esi,0x0
  414fda:	jne    414fec <main@@Base+0xbfc>
  414fe0:	mov    DWORD PTR [rbp-0x4],0x0
  414fe7:	jmp    415037 <main@@Base+0xc47>
  414fec:	mov    eax,0x2
  414ff1:	mov    edx,eax
  414ff3:	mov    rdi,QWORD PTR [rbp-0x10]
  414ff7:	mov    eax,0x2
  414ffc:	mov    esi,eax
  414ffe:	mov    ecx,eax
  415000:	call   41d6d0 <flatcc_builder_table_add@@Base>
  415005:	mov    QWORD PTR [rbp-0x20],rax
  415009:	cmp    rax,0x0
  41500d:	jne    41501f <main@@Base+0xc2f>
  415013:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41501a:	jmp    415037 <main@@Base+0xc47>
  41501f:	mov    rdi,QWORD PTR [rbp-0x20]
  415023:	movsx  esi,WORD PTR [rbp-0x12]
  415027:	call   4153e0 <main@@Base+0xff0>
  41502c:	mov    DWORD PTR [rbp-0x4],0x0
  415033:	mov    QWORD PTR [rbp-0x28],rax
  415037:	mov    eax,DWORD PTR [rbp-0x4]
  41503a:	add    rsp,0x30
  41503e:	pop    rbp
  41503f:	ret    
  415040:	push   rbp
  415041:	mov    rbp,rsp
  415044:	sub    rsp,0x30
  415048:	mov    ax,si
  41504b:	mov    QWORD PTR [rbp-0x10],rdi
  41504f:	mov    WORD PTR [rbp-0x12],ax
  415053:	movzx  esi,WORD PTR [rbp-0x12]
  415057:	cmp    esi,0x0
  41505a:	jne    41506c <main@@Base+0xc7c>
  415060:	mov    DWORD PTR [rbp-0x4],0x0
  415067:	jmp    4150b8 <main@@Base+0xcc8>
  41506c:	mov    eax,0x2
  415071:	mov    edx,eax
  415073:	mov    rdi,QWORD PTR [rbp-0x10]
  415077:	mov    esi,0x3
  41507c:	mov    ecx,0x2
  415081:	call   41d6d0 <flatcc_builder_table_add@@Base>
  415086:	mov    QWORD PTR [rbp-0x20],rax
  41508a:	cmp    rax,0x0
  41508e:	jne    4150a0 <main@@Base+0xcb0>
  415094:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41509b:	jmp    4150b8 <main@@Base+0xcc8>
  4150a0:	mov    rdi,QWORD PTR [rbp-0x20]
  4150a4:	movzx  esi,WORD PTR [rbp-0x12]
  4150a8:	call   415430 <main@@Base+0x1040>
  4150ad:	mov    DWORD PTR [rbp-0x4],0x0
  4150b4:	mov    QWORD PTR [rbp-0x28],rax
  4150b8:	mov    eax,DWORD PTR [rbp-0x4]
  4150bb:	add    rsp,0x30
  4150bf:	pop    rbp
  4150c0:	ret    
  4150c1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4150cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4150d0:	push   rbp
  4150d1:	mov    rbp,rsp
  4150d4:	sub    rsp,0x30
  4150d8:	mov    al,sil
  4150db:	mov    QWORD PTR [rbp-0x10],rdi
  4150df:	mov    BYTE PTR [rbp-0x11],al
  4150e2:	movsx  esi,BYTE PTR [rbp-0x11]
  4150e6:	cmp    esi,0x0
  4150e9:	jne    4150fb <main@@Base+0xd0b>
  4150ef:	mov    DWORD PTR [rbp-0x4],0x0
  4150f6:	jmp    415144 <main@@Base+0xd54>
  4150fb:	xor    esi,esi
  4150fd:	mov    eax,0x1
  415102:	mov    edx,eax
  415104:	mov    rdi,QWORD PTR [rbp-0x10]
  415108:	mov    ecx,0x1
  41510d:	call   41d6d0 <flatcc_builder_table_add@@Base>
  415112:	mov    QWORD PTR [rbp-0x20],rax
  415116:	cmp    rax,0x0
  41511a:	jne    41512c <main@@Base+0xd3c>
  415120:	mov    DWORD PTR [rbp-0x4],0xffffffff
  415127:	jmp    415144 <main@@Base+0xd54>
  41512c:	mov    rdi,QWORD PTR [rbp-0x20]
  415130:	movsx  esi,BYTE PTR [rbp-0x11]
  415134:	call   415480 <main@@Base+0x1090>
  415139:	mov    DWORD PTR [rbp-0x4],0x0
  415140:	mov    QWORD PTR [rbp-0x28],rax
  415144:	mov    eax,DWORD PTR [rbp-0x4]
  415147:	add    rsp,0x30
  41514b:	pop    rbp
  41514c:	ret    
  41514d:	nop    DWORD PTR [rax]
  415150:	push   rbp
  415151:	mov    rbp,rsp
  415154:	sub    rsp,0x30
  415158:	mov    al,sil
  41515b:	mov    QWORD PTR [rbp-0x10],rdi
  41515f:	mov    BYTE PTR [rbp-0x11],al
  415162:	movzx  esi,BYTE PTR [rbp-0x11]
  415166:	cmp    esi,0x0
  415169:	jne    41517b <main@@Base+0xd8b>
  41516f:	mov    DWORD PTR [rbp-0x4],0x0
  415176:	jmp    4151c6 <main@@Base+0xdd6>
  41517b:	mov    eax,0x1
  415180:	mov    edx,eax
  415182:	mov    rdi,QWORD PTR [rbp-0x10]
  415186:	mov    eax,0x1
  41518b:	mov    esi,eax
  41518d:	mov    ecx,eax
  41518f:	call   41d6d0 <flatcc_builder_table_add@@Base>
  415194:	mov    QWORD PTR [rbp-0x20],rax
  415198:	cmp    rax,0x0
  41519c:	jne    4151ae <main@@Base+0xdbe>
  4151a2:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4151a9:	jmp    4151c6 <main@@Base+0xdd6>
  4151ae:	mov    rdi,QWORD PTR [rbp-0x20]
  4151b2:	movzx  esi,BYTE PTR [rbp-0x11]
  4151b6:	call   4154c0 <main@@Base+0x10d0>
  4151bb:	mov    DWORD PTR [rbp-0x4],0x0
  4151c2:	mov    QWORD PTR [rbp-0x28],rax
  4151c6:	mov    eax,DWORD PTR [rbp-0x4]
  4151c9:	add    rsp,0x30
  4151cd:	pop    rbp
  4151ce:	ret    
  4151cf:	nop
  4151d0:	push   rbp
  4151d1:	mov    rbp,rsp
  4151d4:	sub    rsp,0x10
  4151d8:	xor    edx,edx
  4151da:	mov    QWORD PTR [rbp-0x8],rdi
  4151de:	mov    rdi,QWORD PTR [rbp-0x8]
  4151e2:	lea    rsi,[rip+0xdf4f]        # 423138 <_IO_stdin_used@@Base+0x138>
  4151e9:	call   41c9c0 <flatcc_builder_check_required@@Base>
  4151ee:	cmp    eax,0x0
  4151f1:	je     4151fc <main@@Base+0xe0c>
  4151f7:	jmp    41521b <main@@Base+0xe2b>
  4151fc:	lea    rdi,[rip+0x10a64]        # 425c67 <_IO_stdin_used@@Base+0x2c67>
  415203:	lea    rsi,[rip+0x10b0b]        # 425d15 <_IO_stdin_used@@Base+0x2d15>
  41520a:	mov    edx,0xed
  41520f:	lea    rcx,[rip+0x10b7c]        # 425d92 <_IO_stdin_used@@Base+0x2d92>
  415216:	call   404090 <__assert_fail@plt>
  41521b:	mov    rdi,QWORD PTR [rbp-0x8]
  41521f:	call   41ca90 <flatcc_builder_end_table@@Base>
  415224:	add    rsp,0x10
  415228:	pop    rbp
  415229:	ret    
  41522a:	nop    WORD PTR [rax+rax*1+0x0]
  415230:	push   rbp
  415231:	mov    rbp,rsp
  415234:	sub    rsp,0x10
  415238:	mov    QWORD PTR [rbp-0x8],rdi
  41523c:	mov    QWORD PTR [rbp-0x10],rsi
  415240:	mov    rdi,QWORD PTR [rbp-0x10]
  415244:	call   415260 <main@@Base+0xe70>
  415249:	mov    rsi,QWORD PTR [rbp-0x8]
  41524d:	mov    QWORD PTR [rsi],rax
  415250:	mov    rax,QWORD PTR [rbp-0x8]
  415254:	add    rsp,0x10
  415258:	pop    rbp
  415259:	ret    
  41525a:	nop    WORD PTR [rax+rax*1+0x0]
  415260:	push   rbp
  415261:	mov    rbp,rsp
  415264:	mov    QWORD PTR [rbp-0x8],rdi
  415268:	mov    rax,QWORD PTR [rbp-0x8]
  41526c:	pop    rbp
  41526d:	ret    
  41526e:	xchg   ax,ax
  415270:	push   rbp
  415271:	mov    rbp,rsp
  415274:	sub    rsp,0x10
  415278:	mov    QWORD PTR [rbp-0x8],rdi
  41527c:	mov    QWORD PTR [rbp-0x10],rsi
  415280:	mov    rdi,QWORD PTR [rbp-0x10]
  415284:	call   4152a0 <main@@Base+0xeb0>
  415289:	mov    rsi,QWORD PTR [rbp-0x8]
  41528d:	mov    QWORD PTR [rsi],rax
  415290:	mov    rax,QWORD PTR [rbp-0x8]
  415294:	add    rsp,0x10
  415298:	pop    rbp
  415299:	ret    
  41529a:	nop    WORD PTR [rax+rax*1+0x0]
  4152a0:	push   rbp
  4152a1:	mov    rbp,rsp
  4152a4:	mov    QWORD PTR [rbp-0x8],rdi
  4152a8:	mov    rax,QWORD PTR [rbp-0x8]
  4152ac:	pop    rbp
  4152ad:	ret    
  4152ae:	xchg   ax,ax
  4152b0:	push   rbp
  4152b1:	mov    rbp,rsp
  4152b4:	sub    rsp,0x10
  4152b8:	mov    QWORD PTR [rbp-0x8],rdi
  4152bc:	vmovsd QWORD PTR [rbp-0x10],xmm0
  4152c1:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  4152c6:	call   4152e0 <main@@Base+0xef0>
  4152cb:	mov    rdi,QWORD PTR [rbp-0x8]
  4152cf:	vmovsd QWORD PTR [rdi],xmm0
  4152d3:	mov    rax,QWORD PTR [rbp-0x8]
  4152d7:	add    rsp,0x10
  4152db:	pop    rbp
  4152dc:	ret    
  4152dd:	nop    DWORD PTR [rax]
  4152e0:	push   rbp
  4152e1:	mov    rbp,rsp
  4152e4:	vmovsd QWORD PTR [rbp-0x8],xmm0
  4152e9:	vmovsd xmm0,QWORD PTR [rbp-0x8]
  4152ee:	vmovsd QWORD PTR [rbp-0x10],xmm0
  4152f3:	mov    rax,QWORD PTR [rbp-0x10]
  4152f7:	mov    QWORD PTR [rbp-0x10],rax
  4152fb:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  415300:	pop    rbp
  415301:	ret    
  415302:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41530c:	nop    DWORD PTR [rax+0x0]
  415310:	push   rbp
  415311:	mov    rbp,rsp
  415314:	sub    rsp,0x10
  415318:	mov    QWORD PTR [rbp-0x8],rdi
  41531c:	mov    DWORD PTR [rbp-0xc],esi
  41531f:	mov    edi,DWORD PTR [rbp-0xc]
  415322:	call   415340 <main@@Base+0xf50>
  415327:	mov    rcx,QWORD PTR [rbp-0x8]
  41532b:	mov    DWORD PTR [rcx],eax
  41532d:	mov    rax,QWORD PTR [rbp-0x8]
  415331:	add    rsp,0x10
  415335:	pop    rbp
  415336:	ret    
  415337:	nop    WORD PTR [rax+rax*1+0x0]
  415340:	push   rbp
  415341:	mov    rbp,rsp
  415344:	mov    DWORD PTR [rbp-0x4],edi
  415347:	mov    eax,DWORD PTR [rbp-0x4]
  41534a:	pop    rbp
  41534b:	ret    
  41534c:	nop    DWORD PTR [rax+0x0]
  415350:	push   rbp
  415351:	mov    rbp,rsp
  415354:	sub    rsp,0x10
  415358:	mov    QWORD PTR [rbp-0x8],rdi
  41535c:	mov    DWORD PTR [rbp-0xc],esi
  41535f:	mov    edi,DWORD PTR [rbp-0xc]
  415362:	call   415380 <main@@Base+0xf90>
  415367:	mov    rcx,QWORD PTR [rbp-0x8]
  41536b:	mov    DWORD PTR [rcx],eax
  41536d:	mov    rax,QWORD PTR [rbp-0x8]
  415371:	add    rsp,0x10
  415375:	pop    rbp
  415376:	ret    
  415377:	nop    WORD PTR [rax+rax*1+0x0]
  415380:	push   rbp
  415381:	mov    rbp,rsp
  415384:	mov    DWORD PTR [rbp-0x4],edi
  415387:	mov    eax,DWORD PTR [rbp-0x4]
  41538a:	pop    rbp
  41538b:	ret    
  41538c:	nop    DWORD PTR [rax+0x0]
  415390:	push   rbp
  415391:	mov    rbp,rsp
  415394:	sub    rsp,0x10
  415398:	mov    QWORD PTR [rbp-0x8],rdi
  41539c:	vmovss DWORD PTR [rbp-0xc],xmm0
  4153a1:	vmovss xmm0,DWORD PTR [rbp-0xc]
  4153a6:	call   4153c0 <main@@Base+0xfd0>
  4153ab:	mov    rdi,QWORD PTR [rbp-0x8]
  4153af:	vmovss DWORD PTR [rdi],xmm0
  4153b3:	mov    rax,QWORD PTR [rbp-0x8]
  4153b7:	add    rsp,0x10
  4153bb:	pop    rbp
  4153bc:	ret    
  4153bd:	nop    DWORD PTR [rax]
  4153c0:	push   rbp
  4153c1:	mov    rbp,rsp
  4153c4:	vmovss DWORD PTR [rbp-0x4],xmm0
  4153c9:	vmovss xmm0,DWORD PTR [rbp-0x4]
  4153ce:	vmovss DWORD PTR [rbp-0x8],xmm0
  4153d3:	mov    eax,DWORD PTR [rbp-0x8]
  4153d6:	mov    DWORD PTR [rbp-0x8],eax
  4153d9:	vmovss xmm0,DWORD PTR [rbp-0x8]
  4153de:	pop    rbp
  4153df:	ret    
  4153e0:	push   rbp
  4153e1:	mov    rbp,rsp
  4153e4:	sub    rsp,0x10
  4153e8:	mov    ax,si
  4153eb:	mov    QWORD PTR [rbp-0x8],rdi
  4153ef:	mov    WORD PTR [rbp-0xa],ax
  4153f3:	movsx  edi,WORD PTR [rbp-0xa]
  4153f7:	call   415410 <main@@Base+0x1020>
  4153fc:	mov    rcx,QWORD PTR [rbp-0x8]
  415400:	mov    WORD PTR [rcx],ax
  415403:	mov    rax,QWORD PTR [rbp-0x8]
  415407:	add    rsp,0x10
  41540b:	pop    rbp
  41540c:	ret    
  41540d:	nop    DWORD PTR [rax]
  415410:	push   rbp
  415411:	mov    rbp,rsp
  415414:	mov    ax,di
  415417:	mov    WORD PTR [rbp-0x2],ax
  41541b:	movsx  eax,WORD PTR [rbp-0x2]
  41541f:	pop    rbp
  415420:	ret    
  415421:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41542b:	nop    DWORD PTR [rax+rax*1+0x0]
  415430:	push   rbp
  415431:	mov    rbp,rsp
  415434:	sub    rsp,0x10
  415438:	mov    ax,si
  41543b:	mov    QWORD PTR [rbp-0x8],rdi
  41543f:	mov    WORD PTR [rbp-0xa],ax
  415443:	movzx  edi,WORD PTR [rbp-0xa]
  415447:	call   415460 <main@@Base+0x1070>
  41544c:	mov    rcx,QWORD PTR [rbp-0x8]
  415450:	mov    WORD PTR [rcx],ax
  415453:	mov    rax,QWORD PTR [rbp-0x8]
  415457:	add    rsp,0x10
  41545b:	pop    rbp
  41545c:	ret    
  41545d:	nop    DWORD PTR [rax]
  415460:	push   rbp
  415461:	mov    rbp,rsp
  415464:	mov    ax,di
  415467:	mov    WORD PTR [rbp-0x2],ax
  41546b:	movzx  eax,WORD PTR [rbp-0x2]
  41546f:	pop    rbp
  415470:	ret    
  415471:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41547b:	nop    DWORD PTR [rax+rax*1+0x0]
  415480:	push   rbp
  415481:	mov    rbp,rsp
  415484:	sub    rsp,0x10
  415488:	mov    al,sil
  41548b:	mov    QWORD PTR [rbp-0x8],rdi
  41548f:	mov    BYTE PTR [rbp-0x9],al
  415492:	movsx  edi,BYTE PTR [rbp-0x9]
  415496:	call   4154b0 <main@@Base+0x10c0>
  41549b:	mov    rcx,QWORD PTR [rbp-0x8]
  41549f:	mov    BYTE PTR [rcx],al
  4154a1:	mov    rax,QWORD PTR [rbp-0x8]
  4154a5:	add    rsp,0x10
  4154a9:	pop    rbp
  4154aa:	ret    
  4154ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4154b0:	push   rbp
  4154b1:	mov    rbp,rsp
  4154b4:	mov    al,dil
  4154b7:	mov    BYTE PTR [rbp-0x1],al
  4154ba:	movsx  eax,BYTE PTR [rbp-0x1]
  4154be:	pop    rbp
  4154bf:	ret    
  4154c0:	push   rbp
  4154c1:	mov    rbp,rsp
  4154c4:	sub    rsp,0x10
  4154c8:	mov    al,sil
  4154cb:	mov    QWORD PTR [rbp-0x8],rdi
  4154cf:	mov    BYTE PTR [rbp-0x9],al
  4154d2:	movzx  edi,BYTE PTR [rbp-0x9]
  4154d6:	call   4154f0 <main@@Base+0x1100>
  4154db:	mov    rcx,QWORD PTR [rbp-0x8]
  4154df:	mov    BYTE PTR [rcx],al
  4154e1:	mov    rax,QWORD PTR [rbp-0x8]
  4154e5:	add    rsp,0x10
  4154e9:	pop    rbp
  4154ea:	ret    
  4154eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4154f0:	push   rbp
  4154f1:	mov    rbp,rsp
  4154f4:	mov    al,dil
  4154f7:	mov    BYTE PTR [rbp-0x1],al
  4154fa:	movzx  eax,BYTE PTR [rbp-0x1]
  4154fe:	pop    rbp
  4154ff:	ret    
  415500:	push   rbp
  415501:	mov    rbp,rsp
  415504:	sub    rsp,0x20
  415508:	xor    esi,esi
  41550a:	mov    eax,0x1
  41550f:	mov    edx,eax
  415511:	mov    QWORD PTR [rbp-0x10],rdi
  415515:	mov    rdi,QWORD PTR [rbp-0x10]
  415519:	mov    ecx,0x1
  41551e:	call   41ff40 <flatcc_verify_field@@Base>
  415523:	mov    DWORD PTR [rbp-0x14],eax
  415526:	cmp    eax,0x0
  415529:	je     41553a <main@@Base+0x114a>
  41552f:	mov    eax,DWORD PTR [rbp-0x14]
  415532:	mov    DWORD PTR [rbp-0x4],eax
  415535:	jmp    41576f <main@@Base+0x137f>
  41553a:	mov    eax,0x1
  41553f:	mov    edx,eax
  415541:	mov    rdi,QWORD PTR [rbp-0x10]
  415545:	mov    eax,0x1
  41554a:	mov    esi,eax
  41554c:	mov    ecx,eax
  41554e:	call   41ff40 <flatcc_verify_field@@Base>
  415553:	mov    DWORD PTR [rbp-0x14],eax
  415556:	cmp    eax,0x0
  415559:	je     41556a <main@@Base+0x117a>
  41555f:	mov    eax,DWORD PTR [rbp-0x14]
  415562:	mov    DWORD PTR [rbp-0x4],eax
  415565:	jmp    41576f <main@@Base+0x137f>
  41556a:	mov    eax,0x2
  41556f:	mov    edx,eax
  415571:	mov    rdi,QWORD PTR [rbp-0x10]
  415575:	mov    eax,0x2
  41557a:	mov    esi,eax
  41557c:	mov    ecx,eax
  41557e:	call   41ff40 <flatcc_verify_field@@Base>
  415583:	mov    DWORD PTR [rbp-0x14],eax
  415586:	cmp    eax,0x0
  415589:	je     41559a <main@@Base+0x11aa>
  41558f:	mov    eax,DWORD PTR [rbp-0x14]
  415592:	mov    DWORD PTR [rbp-0x4],eax
  415595:	jmp    41576f <main@@Base+0x137f>
  41559a:	mov    eax,0x2
  41559f:	mov    edx,eax
  4155a1:	mov    rdi,QWORD PTR [rbp-0x10]
  4155a5:	mov    esi,0x3
  4155aa:	mov    ecx,0x2
  4155af:	call   41ff40 <flatcc_verify_field@@Base>
  4155b4:	mov    DWORD PTR [rbp-0x14],eax
  4155b7:	cmp    eax,0x0
  4155ba:	je     4155cb <main@@Base+0x11db>
  4155c0:	mov    eax,DWORD PTR [rbp-0x14]
  4155c3:	mov    DWORD PTR [rbp-0x4],eax
  4155c6:	jmp    41576f <main@@Base+0x137f>
  4155cb:	mov    eax,0x4
  4155d0:	mov    edx,eax
  4155d2:	mov    rdi,QWORD PTR [rbp-0x10]
  4155d6:	mov    eax,0x4
  4155db:	mov    esi,eax
  4155dd:	mov    ecx,eax
  4155df:	call   41ff40 <flatcc_verify_field@@Base>
  4155e4:	mov    DWORD PTR [rbp-0x14],eax
  4155e7:	cmp    eax,0x0
  4155ea:	je     4155fb <main@@Base+0x120b>
  4155f0:	mov    eax,DWORD PTR [rbp-0x14]
  4155f3:	mov    DWORD PTR [rbp-0x4],eax
  4155f6:	jmp    41576f <main@@Base+0x137f>
  4155fb:	mov    eax,0x4
  415600:	mov    edx,eax
  415602:	mov    rdi,QWORD PTR [rbp-0x10]
  415606:	mov    esi,0x5
  41560b:	mov    ecx,0x4
  415610:	call   41ff40 <flatcc_verify_field@@Base>
  415615:	mov    DWORD PTR [rbp-0x14],eax
  415618:	cmp    eax,0x0
  41561b:	je     41562c <main@@Base+0x123c>
  415621:	mov    eax,DWORD PTR [rbp-0x14]
  415624:	mov    DWORD PTR [rbp-0x4],eax
  415627:	jmp    41576f <main@@Base+0x137f>
  41562c:	mov    eax,0x8
  415631:	mov    edx,eax
  415633:	mov    rdi,QWORD PTR [rbp-0x10]
  415637:	mov    esi,0x6
  41563c:	mov    ecx,0x8
  415641:	call   41ff40 <flatcc_verify_field@@Base>
  415646:	mov    DWORD PTR [rbp-0x14],eax
  415649:	cmp    eax,0x0
  41564c:	je     41565d <main@@Base+0x126d>
  415652:	mov    eax,DWORD PTR [rbp-0x14]
  415655:	mov    DWORD PTR [rbp-0x4],eax
  415658:	jmp    41576f <main@@Base+0x137f>
  41565d:	mov    eax,0x8
  415662:	mov    edx,eax
  415664:	mov    rdi,QWORD PTR [rbp-0x10]
  415668:	mov    esi,0x7
  41566d:	mov    ecx,0x8
  415672:	call   41ff40 <flatcc_verify_field@@Base>
  415677:	mov    DWORD PTR [rbp-0x14],eax
  41567a:	cmp    eax,0x0
  41567d:	je     41568e <main@@Base+0x129e>
  415683:	mov    eax,DWORD PTR [rbp-0x14]
  415686:	mov    DWORD PTR [rbp-0x4],eax
  415689:	jmp    41576f <main@@Base+0x137f>
  41568e:	mov    eax,0x4
  415693:	mov    edx,eax
  415695:	mov    rdi,QWORD PTR [rbp-0x10]
  415699:	mov    esi,0x8
  41569e:	mov    ecx,0x4
  4156a3:	call   41ff40 <flatcc_verify_field@@Base>
  4156a8:	mov    DWORD PTR [rbp-0x14],eax
  4156ab:	cmp    eax,0x0
  4156ae:	je     4156bf <main@@Base+0x12cf>
  4156b4:	mov    eax,DWORD PTR [rbp-0x14]
  4156b7:	mov    DWORD PTR [rbp-0x4],eax
  4156ba:	jmp    41576f <main@@Base+0x137f>
  4156bf:	mov    eax,0x8
  4156c4:	mov    edx,eax
  4156c6:	mov    rdi,QWORD PTR [rbp-0x10]
  4156ca:	mov    esi,0x9
  4156cf:	mov    ecx,0x8
  4156d4:	call   41ff40 <flatcc_verify_field@@Base>
  4156d9:	mov    DWORD PTR [rbp-0x14],eax
  4156dc:	cmp    eax,0x0
  4156df:	je     4156f0 <main@@Base+0x1300>
  4156e5:	mov    eax,DWORD PTR [rbp-0x14]
  4156e8:	mov    DWORD PTR [rbp-0x4],eax
  4156eb:	jmp    41576f <main@@Base+0x137f>
  4156f0:	xor    edx,edx
  4156f2:	mov    eax,0x1
  4156f7:	mov    ecx,eax
  4156f9:	mov    eax,0xffffffff
  4156fe:	mov    r9d,eax
  415701:	mov    rdi,QWORD PTR [rbp-0x10]
  415705:	mov    esi,0xa
  41570a:	mov    r8d,0x1
  415710:	call   420450 <flatcc_verify_vector_field@@Base>
  415715:	mov    DWORD PTR [rbp-0x14],eax
  415718:	cmp    eax,0x0
  41571b:	je     41572c <main@@Base+0x133c>
  415721:	mov    eax,DWORD PTR [rbp-0x14]
  415724:	mov    DWORD PTR [rbp-0x4],eax
  415727:	jmp    41576f <main@@Base+0x137f>
  41572c:	xor    edx,edx
  41572e:	mov    eax,0x8
  415733:	mov    ecx,eax
  415735:	mov    eax,0x1fffffff
  41573a:	mov    r9d,eax
  41573d:	mov    rdi,QWORD PTR [rbp-0x10]
  415741:	mov    esi,0xb
  415746:	mov    r8d,0x8
  41574c:	call   420450 <flatcc_verify_vector_field@@Base>
  415751:	mov    DWORD PTR [rbp-0x14],eax
  415754:	cmp    eax,0x0
  415757:	je     415768 <main@@Base+0x1378>
  41575d:	mov    eax,DWORD PTR [rbp-0x14]
  415760:	mov    DWORD PTR [rbp-0x4],eax
  415763:	jmp    41576f <main@@Base+0x137f>
  415768:	mov    DWORD PTR [rbp-0x4],0x0
  41576f:	mov    eax,DWORD PTR [rbp-0x4]
  415772:	add    rsp,0x20
  415776:	pop    rbp
  415777:	ret    
  415778:	nop    DWORD PTR [rax+rax*1+0x0]
  415780:	push   rbp
  415781:	mov    rbp,rsp
  415784:	sub    rsp,0x10
  415788:	mov    QWORD PTR [rbp-0x8],rdi
  41578c:	mov    rdi,QWORD PTR [rbp-0x8]
  415790:	movsx  edi,BYTE PTR [rdi]
  415793:	call   4157b0 <main@@Base+0x13c0>
  415798:	movsx  eax,al
  41579b:	add    rsp,0x10
  41579f:	pop    rbp
  4157a0:	ret    
  4157a1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4157ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4157b0:	push   rbp
  4157b1:	mov    rbp,rsp
  4157b4:	mov    al,dil
  4157b7:	mov    BYTE PTR [rbp-0x1],al
  4157ba:	movsx  eax,BYTE PTR [rbp-0x1]
  4157be:	pop    rbp
  4157bf:	ret    
  4157c0:	push   rbp
  4157c1:	mov    rbp,rsp
  4157c4:	sub    rsp,0x10
  4157c8:	mov    QWORD PTR [rbp-0x8],rdi
  4157cc:	mov    rdi,QWORD PTR [rbp-0x8]
  4157d0:	mov    edi,DWORD PTR [rdi]
  4157d2:	call   4157e0 <main@@Base+0x13f0>
  4157d7:	add    rsp,0x10
  4157db:	pop    rbp
  4157dc:	ret    
  4157dd:	nop    DWORD PTR [rax]
  4157e0:	push   rbp
  4157e1:	mov    rbp,rsp
  4157e4:	mov    DWORD PTR [rbp-0x4],edi
  4157e7:	mov    eax,DWORD PTR [rbp-0x4]
  4157ea:	pop    rbp
  4157eb:	ret    
  4157ec:	nop    DWORD PTR [rax+0x0]
  4157f0:	push   rbp
  4157f1:	mov    rbp,rsp
  4157f4:	sub    rsp,0x10
  4157f8:	mov    QWORD PTR [rbp-0x8],rdi
  4157fc:	mov    rdi,QWORD PTR [rbp-0x8]
  415800:	mov    rdi,QWORD PTR [rdi]
  415803:	call   415810 <main@@Base+0x1420>
  415808:	add    rsp,0x10
  41580c:	pop    rbp
  41580d:	ret    
  41580e:	xchg   ax,ax
  415810:	push   rbp
  415811:	mov    rbp,rsp
  415814:	mov    QWORD PTR [rbp-0x8],rdi
  415818:	mov    rax,QWORD PTR [rbp-0x8]
  41581c:	pop    rbp
  41581d:	ret    
  41581e:	xchg   ax,ax
  415820:	push   rbp
  415821:	mov    rbp,rsp
  415824:	sub    rsp,0x10
  415828:	mov    QWORD PTR [rbp-0x8],rdi
  41582c:	mov    rdi,QWORD PTR [rbp-0x8]
  415830:	movzx  edi,BYTE PTR [rdi]
  415833:	call   415850 <main@@Base+0x1460>
  415838:	movzx  eax,al
  41583b:	add    rsp,0x10
  41583f:	pop    rbp
  415840:	ret    
  415841:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41584b:	nop    DWORD PTR [rax+rax*1+0x0]
  415850:	push   rbp
  415851:	mov    rbp,rsp
  415854:	mov    al,dil
  415857:	mov    BYTE PTR [rbp-0x1],al
  41585a:	movzx  eax,BYTE PTR [rbp-0x1]
  41585e:	pop    rbp
  41585f:	ret    
  415860:	push   rbp
  415861:	mov    rbp,rsp
  415864:	sub    rsp,0x10
  415868:	mov    QWORD PTR [rbp-0x8],rdi
  41586c:	mov    rdi,QWORD PTR [rbp-0x8]
  415870:	movzx  edi,WORD PTR [rdi]
  415873:	call   415890 <main@@Base+0x14a0>
  415878:	movzx  eax,ax
  41587b:	add    rsp,0x10
  41587f:	pop    rbp
  415880:	ret    
  415881:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41588b:	nop    DWORD PTR [rax+rax*1+0x0]
  415890:	push   rbp
  415891:	mov    rbp,rsp
  415894:	mov    ax,di
  415897:	mov    WORD PTR [rbp-0x2],ax
  41589b:	movzx  eax,WORD PTR [rbp-0x2]
  41589f:	pop    rbp
  4158a0:	ret    
  4158a1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4158ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4158b0:	push   rbp
  4158b1:	mov    rbp,rsp
  4158b4:	sub    rsp,0x10
  4158b8:	mov    QWORD PTR [rbp-0x8],rdi
  4158bc:	mov    rdi,QWORD PTR [rbp-0x8]
  4158c0:	mov    edi,DWORD PTR [rdi]
  4158c2:	call   4158d0 <main@@Base+0x14e0>
  4158c7:	add    rsp,0x10
  4158cb:	pop    rbp
  4158cc:	ret    
  4158cd:	nop    DWORD PTR [rax]
  4158d0:	push   rbp
  4158d1:	mov    rbp,rsp
  4158d4:	mov    DWORD PTR [rbp-0x4],edi
  4158d7:	mov    eax,DWORD PTR [rbp-0x4]
  4158da:	pop    rbp
  4158db:	ret    
  4158dc:	nop    DWORD PTR [rax+0x0]
  4158e0:	push   rbp
  4158e1:	mov    rbp,rsp
  4158e4:	sub    rsp,0x10
  4158e8:	mov    QWORD PTR [rbp-0x8],rdi
  4158ec:	mov    rdi,QWORD PTR [rbp-0x8]
  4158f0:	mov    rdi,QWORD PTR [rdi]
  4158f3:	call   415900 <main@@Base+0x1510>
  4158f8:	add    rsp,0x10
  4158fc:	pop    rbp
  4158fd:	ret    
  4158fe:	xchg   ax,ax
  415900:	push   rbp
  415901:	mov    rbp,rsp
  415904:	mov    QWORD PTR [rbp-0x8],rdi
  415908:	mov    rax,QWORD PTR [rbp-0x8]
  41590c:	pop    rbp
  41590d:	ret    
  41590e:	xchg   ax,ax
  415910:	push   rbp
  415911:	mov    rbp,rsp
  415914:	sub    rsp,0x10
  415918:	mov    QWORD PTR [rbp-0x8],rdi
  41591c:	mov    rdi,QWORD PTR [rbp-0x8]
  415920:	vmovss xmm0,DWORD PTR [rdi]
  415924:	call   415930 <main@@Base+0x1540>
  415929:	add    rsp,0x10
  41592d:	pop    rbp
  41592e:	ret    
  41592f:	nop
  415930:	push   rbp
  415931:	mov    rbp,rsp
  415934:	vmovss DWORD PTR [rbp-0x4],xmm0
  415939:	vmovss xmm0,DWORD PTR [rbp-0x4]
  41593e:	vmovss DWORD PTR [rbp-0x8],xmm0
  415943:	mov    eax,DWORD PTR [rbp-0x8]
  415946:	mov    DWORD PTR [rbp-0x8],eax
  415949:	vmovss xmm0,DWORD PTR [rbp-0x8]
  41594e:	pop    rbp
  41594f:	ret    
  415950:	push   rbp
  415951:	mov    rbp,rsp
  415954:	sub    rsp,0x10
  415958:	mov    QWORD PTR [rbp-0x8],rdi
  41595c:	mov    rdi,QWORD PTR [rbp-0x8]
  415960:	vmovsd xmm0,QWORD PTR [rdi]
  415964:	call   415970 <main@@Base+0x1580>
  415969:	add    rsp,0x10
  41596d:	pop    rbp
  41596e:	ret    
  41596f:	nop
  415970:	push   rbp
  415971:	mov    rbp,rsp
  415974:	vmovsd QWORD PTR [rbp-0x8],xmm0
  415979:	vmovsd xmm0,QWORD PTR [rbp-0x8]
  41597e:	vmovsd QWORD PTR [rbp-0x10],xmm0
  415983:	mov    rax,QWORD PTR [rbp-0x10]
  415987:	mov    QWORD PTR [rbp-0x10],rax
  41598b:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  415990:	pop    rbp
  415991:	ret    
  415992:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41599c:	nop    DWORD PTR [rax+0x0]
  4159a0:	push   rbp
  4159a1:	mov    rbp,rsp
  4159a4:	sub    rsp,0x20
  4159a8:	xor    esi,esi
  4159aa:	mov    eax,0x20
  4159af:	mov    edx,eax
  4159b1:	mov    QWORD PTR [rbp-0x10],rdi
  4159b5:	mov    rdi,QWORD PTR [rbp-0x10]
  4159b9:	mov    ecx,0x10
  4159be:	call   41ff40 <flatcc_verify_field@@Base>
  4159c3:	mov    DWORD PTR [rbp-0x14],eax
  4159c6:	cmp    eax,0x0
  4159c9:	je     4159da <main@@Base+0x15ea>
  4159cf:	mov    eax,DWORD PTR [rbp-0x14]
  4159d2:	mov    DWORD PTR [rbp-0x4],eax
  4159d5:	jmp    416063 <main@@Base+0x1c73>
  4159da:	mov    eax,0x2
  4159df:	mov    edx,eax
  4159e1:	mov    rdi,QWORD PTR [rbp-0x10]
  4159e5:	mov    eax,0x2
  4159ea:	mov    esi,eax
  4159ec:	mov    ecx,eax
  4159ee:	call   41ff40 <flatcc_verify_field@@Base>
  4159f3:	mov    DWORD PTR [rbp-0x14],eax
  4159f6:	cmp    eax,0x0
  4159f9:	je     415a0a <main@@Base+0x161a>
  4159ff:	mov    eax,DWORD PTR [rbp-0x14]
  415a02:	mov    DWORD PTR [rbp-0x4],eax
  415a05:	jmp    416063 <main@@Base+0x1c73>
  415a0a:	mov    eax,0x2
  415a0f:	mov    edx,eax
  415a11:	mov    rdi,QWORD PTR [rbp-0x10]
  415a15:	mov    esi,0x1
  415a1a:	mov    ecx,0x2
  415a1f:	call   41ff40 <flatcc_verify_field@@Base>
  415a24:	mov    DWORD PTR [rbp-0x14],eax
  415a27:	cmp    eax,0x0
  415a2a:	je     415a3b <main@@Base+0x164b>
  415a30:	mov    eax,DWORD PTR [rbp-0x14]
  415a33:	mov    DWORD PTR [rbp-0x4],eax
  415a36:	jmp    416063 <main@@Base+0x1c73>
  415a3b:	mov    rdi,QWORD PTR [rbp-0x10]
  415a3f:	mov    esi,0x3
  415a44:	mov    edx,0x1
  415a49:	call   420140 <flatcc_verify_string_field@@Base>
  415a4e:	mov    DWORD PTR [rbp-0x14],eax
  415a51:	cmp    eax,0x0
  415a54:	je     415a65 <main@@Base+0x1675>
  415a5a:	mov    eax,DWORD PTR [rbp-0x14]
  415a5d:	mov    DWORD PTR [rbp-0x4],eax
  415a60:	jmp    416063 <main@@Base+0x1c73>
  415a65:	mov    eax,0x1
  415a6a:	mov    edx,eax
  415a6c:	mov    rdi,QWORD PTR [rbp-0x10]
  415a70:	mov    esi,0x6
  415a75:	mov    ecx,0x1
  415a7a:	call   41ff40 <flatcc_verify_field@@Base>
  415a7f:	mov    DWORD PTR [rbp-0x14],eax
  415a82:	cmp    eax,0x0
  415a85:	je     415a96 <main@@Base+0x16a6>
  415a8b:	mov    eax,DWORD PTR [rbp-0x14]
  415a8e:	mov    DWORD PTR [rbp-0x4],eax
  415a91:	jmp    416063 <main@@Base+0x1c73>
  415a96:	xor    edx,edx
  415a98:	mov    eax,0x1
  415a9d:	mov    ecx,eax
  415a9f:	mov    eax,0xffffffff
  415aa4:	mov    r9d,eax
  415aa7:	mov    rdi,QWORD PTR [rbp-0x10]
  415aab:	mov    esi,0x5
  415ab0:	mov    r8d,0x1
  415ab6:	call   420450 <flatcc_verify_vector_field@@Base>
  415abb:	mov    DWORD PTR [rbp-0x14],eax
  415abe:	cmp    eax,0x0
  415ac1:	je     415ad2 <main@@Base+0x16e2>
  415ac7:	mov    eax,DWORD PTR [rbp-0x14]
  415aca:	mov    DWORD PTR [rbp-0x4],eax
  415acd:	jmp    416063 <main@@Base+0x1c73>
  415ad2:	xor    edx,edx
  415ad4:	mov    rdi,QWORD PTR [rbp-0x10]
  415ad8:	mov    esi,0xb
  415add:	lea    rcx,[rip+0xfffffffffffffebc]        # 4159a0 <main@@Base+0x15b0>
  415ae4:	call   420b70 <flatcc_verify_table_vector_field@@Base>
  415ae9:	mov    DWORD PTR [rbp-0x14],eax
  415aec:	cmp    eax,0x0
  415aef:	je     415b00 <main@@Base+0x1710>
  415af5:	mov    eax,DWORD PTR [rbp-0x14]
  415af8:	mov    DWORD PTR [rbp-0x4],eax
  415afb:	jmp    416063 <main@@Base+0x1c73>
  415b00:	xor    edx,edx
  415b02:	mov    rdi,QWORD PTR [rbp-0x10]
  415b06:	mov    esi,0xa
  415b0b:	call   420640 <flatcc_verify_string_vector_field@@Base>
  415b10:	mov    DWORD PTR [rbp-0x14],eax
  415b13:	cmp    eax,0x0
  415b16:	je     415b27 <main@@Base+0x1737>
  415b1c:	mov    eax,DWORD PTR [rbp-0x14]
  415b1f:	mov    DWORD PTR [rbp-0x4],eax
  415b22:	jmp    416063 <main@@Base+0x1c73>
  415b27:	xor    edx,edx
  415b29:	mov    rdi,QWORD PTR [rbp-0x10]
  415b2d:	mov    esi,0x1c
  415b32:	call   420640 <flatcc_verify_string_vector_field@@Base>
  415b37:	mov    DWORD PTR [rbp-0x14],eax
  415b3a:	cmp    eax,0x0
  415b3d:	je     415b4e <main@@Base+0x175e>
  415b43:	mov    eax,DWORD PTR [rbp-0x14]
  415b46:	mov    DWORD PTR [rbp-0x4],eax
  415b49:	jmp    416063 <main@@Base+0x1c73>
  415b4e:	xor    edx,edx
  415b50:	mov    eax,0x1
  415b55:	mov    ecx,eax
  415b57:	mov    eax,0xffffffff
  415b5c:	mov    r9d,eax
  415b5f:	mov    rdi,QWORD PTR [rbp-0x10]
  415b63:	mov    esi,0x18
  415b68:	mov    r8d,0x1
  415b6e:	call   420450 <flatcc_verify_vector_field@@Base>
  415b73:	mov    DWORD PTR [rbp-0x14],eax
  415b76:	cmp    eax,0x0
  415b79:	je     415b8a <main@@Base+0x179a>
  415b7f:	mov    eax,DWORD PTR [rbp-0x14]
  415b82:	mov    DWORD PTR [rbp-0x4],eax
  415b85:	jmp    416063 <main@@Base+0x1c73>
  415b8a:	xor    edx,edx
  415b8c:	mov    eax,0x8
  415b91:	mov    ecx,eax
  415b93:	mov    eax,0x1fffffff
  415b98:	mov    r9d,eax
  415b9b:	mov    rdi,QWORD PTR [rbp-0x10]
  415b9f:	mov    esi,0x1d
  415ba4:	mov    r8d,0x4
  415baa:	call   420450 <flatcc_verify_vector_field@@Base>
  415baf:	mov    DWORD PTR [rbp-0x14],eax
  415bb2:	cmp    eax,0x0
  415bb5:	je     415bc6 <main@@Base+0x17d6>
  415bbb:	mov    eax,DWORD PTR [rbp-0x14]
  415bbe:	mov    DWORD PTR [rbp-0x4],eax
  415bc1:	jmp    416063 <main@@Base+0x1c73>
  415bc6:	xor    edx,edx
  415bc8:	mov    rdi,QWORD PTR [rbp-0x10]
  415bcc:	mov    esi,0xc
  415bd1:	lea    rcx,[rip+0xfffffffffffffdc8]        # 4159a0 <main@@Base+0x15b0>
  415bd8:	call   420840 <flatcc_verify_table_field@@Base>
  415bdd:	mov    DWORD PTR [rbp-0x14],eax
  415be0:	cmp    eax,0x0
  415be3:	je     415bf4 <main@@Base+0x1804>
  415be9:	mov    eax,DWORD PTR [rbp-0x14]
  415bec:	mov    DWORD PTR [rbp-0x4],eax
  415bef:	jmp    416063 <main@@Base+0x1c73>
  415bf4:	xor    edx,edx
  415bf6:	mov    rdi,QWORD PTR [rbp-0x10]
  415bfa:	mov    esi,0x8
  415bff:	lea    rcx,[rip+0x46a]        # 416070 <main@@Base+0x1c80>
  415c06:	call   421810 <flatcc_verify_union_field@@Base>
  415c0b:	mov    DWORD PTR [rbp-0x14],eax
  415c0e:	cmp    eax,0x0
  415c11:	je     415c22 <main@@Base+0x1832>
  415c17:	mov    eax,DWORD PTR [rbp-0x14]
  415c1a:	mov    DWORD PTR [rbp-0x4],eax
  415c1d:	jmp    416063 <main@@Base+0x1c73>
  415c22:	xor    edx,edx
  415c24:	mov    eax,0x4
  415c29:	mov    ecx,eax
  415c2b:	mov    eax,0x3fffffff
  415c30:	mov    r9d,eax
  415c33:	mov    rdi,QWORD PTR [rbp-0x10]
  415c37:	mov    esi,0x9
  415c3c:	mov    r8d,0x2
  415c42:	call   420450 <flatcc_verify_vector_field@@Base>
  415c47:	mov    DWORD PTR [rbp-0x14],eax
  415c4a:	cmp    eax,0x0
  415c4d:	je     415c5e <main@@Base+0x186e>
  415c53:	mov    eax,DWORD PTR [rbp-0x14]
  415c56:	mov    DWORD PTR [rbp-0x4],eax
  415c59:	jmp    416063 <main@@Base+0x1c73>
  415c5e:	xor    edx,edx
  415c60:	mov    eax,0x4
  415c65:	mov    ecx,eax
  415c67:	mov    eax,0x3fffffff
  415c6c:	mov    r9d,eax
  415c6f:	mov    rdi,QWORD PTR [rbp-0x10]
  415c73:	mov    esi,0x1f
  415c78:	mov    r8d,0x2
  415c7e:	call   420450 <flatcc_verify_vector_field@@Base>
  415c83:	mov    DWORD PTR [rbp-0x14],eax
  415c86:	cmp    eax,0x0
  415c89:	je     415c9a <main@@Base+0x18aa>
  415c8f:	mov    eax,DWORD PTR [rbp-0x14]
  415c92:	mov    DWORD PTR [rbp-0x4],eax
  415c95:	jmp    416063 <main@@Base+0x1c73>
  415c9a:	xor    edx,edx
  415c9c:	xor    eax,eax
  415c9e:	mov    ecx,eax
  415ca0:	mov    rdi,QWORD PTR [rbp-0x10]
  415ca4:	mov    esi,0xd
  415ca9:	mov    r8d,0x1
  415caf:	lea    r9,[rip+0xfffffffffffffcea]        # 4159a0 <main@@Base+0x15b0>
  415cb6:	call   421690 <flatcc_verify_table_as_nested_root@@Base>
  415cbb:	mov    DWORD PTR [rbp-0x14],eax
  415cbe:	cmp    eax,0x0
  415cc1:	je     415cd2 <main@@Base+0x18e2>
  415cc7:	mov    eax,DWORD PTR [rbp-0x14]
  415cca:	mov    DWORD PTR [rbp-0x4],eax
  415ccd:	jmp    416063 <main@@Base+0x1c73>
  415cd2:	xor    edx,edx
  415cd4:	mov    rdi,QWORD PTR [rbp-0x10]
  415cd8:	mov    esi,0xe
  415cdd:	lea    rcx,[rip+0x43c]        # 416120 <main@@Base+0x1d30>
  415ce4:	call   420840 <flatcc_verify_table_field@@Base>
  415ce9:	mov    DWORD PTR [rbp-0x14],eax
  415cec:	cmp    eax,0x0
  415cef:	je     415d00 <main@@Base+0x1910>
  415cf5:	mov    eax,DWORD PTR [rbp-0x14]
  415cf8:	mov    DWORD PTR [rbp-0x4],eax
  415cfb:	jmp    416063 <main@@Base+0x1c73>
  415d00:	mov    eax,0x1
  415d05:	mov    edx,eax
  415d07:	mov    rdi,QWORD PTR [rbp-0x10]
  415d0b:	mov    esi,0xf
  415d10:	mov    ecx,0x1
  415d15:	call   41ff40 <flatcc_verify_field@@Base>
  415d1a:	mov    DWORD PTR [rbp-0x14],eax
  415d1d:	cmp    eax,0x0
  415d20:	je     415d31 <main@@Base+0x1941>
  415d26:	mov    eax,DWORD PTR [rbp-0x14]
  415d29:	mov    DWORD PTR [rbp-0x4],eax
  415d2c:	jmp    416063 <main@@Base+0x1c73>
  415d31:	mov    eax,0x4
  415d36:	mov    edx,eax
  415d38:	mov    rdi,QWORD PTR [rbp-0x10]
  415d3c:	mov    esi,0x10
  415d41:	mov    ecx,0x4
  415d46:	call   41ff40 <flatcc_verify_field@@Base>
  415d4b:	mov    DWORD PTR [rbp-0x14],eax
  415d4e:	cmp    eax,0x0
  415d51:	je     415d62 <main@@Base+0x1972>
  415d57:	mov    eax,DWORD PTR [rbp-0x14]
  415d5a:	mov    DWORD PTR [rbp-0x4],eax
  415d5d:	jmp    416063 <main@@Base+0x1c73>
  415d62:	mov    eax,0x4
  415d67:	mov    edx,eax
  415d69:	mov    rdi,QWORD PTR [rbp-0x10]
  415d6d:	mov    esi,0x11
  415d72:	mov    ecx,0x4
  415d77:	call   41ff40 <flatcc_verify_field@@Base>
  415d7c:	mov    DWORD PTR [rbp-0x14],eax
  415d7f:	cmp    eax,0x0
  415d82:	je     415d93 <main@@Base+0x19a3>
  415d88:	mov    eax,DWORD PTR [rbp-0x14]
  415d8b:	mov    DWORD PTR [rbp-0x4],eax
  415d8e:	jmp    416063 <main@@Base+0x1c73>
  415d93:	mov    eax,0x8
  415d98:	mov    edx,eax
  415d9a:	mov    rdi,QWORD PTR [rbp-0x10]
  415d9e:	mov    esi,0x12
  415da3:	mov    ecx,0x8
  415da8:	call   41ff40 <flatcc_verify_field@@Base>
  415dad:	mov    DWORD PTR [rbp-0x14],eax
  415db0:	cmp    eax,0x0
  415db3:	je     415dc4 <main@@Base+0x19d4>
  415db9:	mov    eax,DWORD PTR [rbp-0x14]
  415dbc:	mov    DWORD PTR [rbp-0x4],eax
  415dbf:	jmp    416063 <main@@Base+0x1c73>
  415dc4:	mov    eax,0x8
  415dc9:	mov    edx,eax
  415dcb:	mov    rdi,QWORD PTR [rbp-0x10]
  415dcf:	mov    esi,0x13
  415dd4:	mov    ecx,0x8
  415dd9:	call   41ff40 <flatcc_verify_field@@Base>
  415dde:	mov    DWORD PTR [rbp-0x14],eax
  415de1:	cmp    eax,0x0
  415de4:	je     415df5 <main@@Base+0x1a05>
  415dea:	mov    eax,DWORD PTR [rbp-0x14]
  415ded:	mov    DWORD PTR [rbp-0x4],eax
  415df0:	jmp    416063 <main@@Base+0x1c73>
  415df5:	mov    eax,0x4
  415dfa:	mov    edx,eax
  415dfc:	mov    rdi,QWORD PTR [rbp-0x10]
  415e00:	mov    esi,0x14
  415e05:	mov    ecx,0x4
  415e0a:	call   41ff40 <flatcc_verify_field@@Base>
  415e0f:	mov    DWORD PTR [rbp-0x14],eax
  415e12:	cmp    eax,0x0
  415e15:	je     415e26 <main@@Base+0x1a36>
  415e1b:	mov    eax,DWORD PTR [rbp-0x14]
  415e1e:	mov    DWORD PTR [rbp-0x4],eax
  415e21:	jmp    416063 <main@@Base+0x1c73>
  415e26:	mov    eax,0x4
  415e2b:	mov    edx,eax
  415e2d:	mov    rdi,QWORD PTR [rbp-0x10]
  415e31:	mov    esi,0x15
  415e36:	mov    ecx,0x4
  415e3b:	call   41ff40 <flatcc_verify_field@@Base>
  415e40:	mov    DWORD PTR [rbp-0x14],eax
  415e43:	cmp    eax,0x0
  415e46:	je     415e57 <main@@Base+0x1a67>
  415e4c:	mov    eax,DWORD PTR [rbp-0x14]
  415e4f:	mov    DWORD PTR [rbp-0x4],eax
  415e52:	jmp    416063 <main@@Base+0x1c73>
  415e57:	mov    eax,0x8
  415e5c:	mov    edx,eax
  415e5e:	mov    rdi,QWORD PTR [rbp-0x10]
  415e62:	mov    esi,0x16
  415e67:	mov    ecx,0x8
  415e6c:	call   41ff40 <flatcc_verify_field@@Base>
  415e71:	mov    DWORD PTR [rbp-0x14],eax
  415e74:	cmp    eax,0x0
  415e77:	je     415e88 <main@@Base+0x1a98>
  415e7d:	mov    eax,DWORD PTR [rbp-0x14]
  415e80:	mov    DWORD PTR [rbp-0x4],eax
  415e83:	jmp    416063 <main@@Base+0x1c73>
  415e88:	mov    eax,0x8
  415e8d:	mov    edx,eax
  415e8f:	mov    rdi,QWORD PTR [rbp-0x10]
  415e93:	mov    esi,0x17
  415e98:	mov    ecx,0x8
  415e9d:	call   41ff40 <flatcc_verify_field@@Base>
  415ea2:	mov    DWORD PTR [rbp-0x14],eax
  415ea5:	cmp    eax,0x0
  415ea8:	je     415eb9 <main@@Base+0x1ac9>
  415eae:	mov    eax,DWORD PTR [rbp-0x14]
  415eb1:	mov    DWORD PTR [rbp-0x4],eax
  415eb4:	jmp    416063 <main@@Base+0x1c73>
  415eb9:	mov    eax,0x4
  415ebe:	mov    edx,eax
  415ec0:	mov    rdi,QWORD PTR [rbp-0x10]
  415ec4:	mov    esi,0x19
  415ec9:	mov    ecx,0x4
  415ece:	call   41ff40 <flatcc_verify_field@@Base>
  415ed3:	mov    DWORD PTR [rbp-0x14],eax
  415ed6:	cmp    eax,0x0
  415ed9:	je     415eea <main@@Base+0x1afa>
  415edf:	mov    eax,DWORD PTR [rbp-0x14]
  415ee2:	mov    DWORD PTR [rbp-0x4],eax
  415ee5:	jmp    416063 <main@@Base+0x1c73>
  415eea:	mov    eax,0x4
  415eef:	mov    edx,eax
  415ef1:	mov    rdi,QWORD PTR [rbp-0x10]
  415ef5:	mov    esi,0x1a
  415efa:	mov    ecx,0x4
  415eff:	call   41ff40 <flatcc_verify_field@@Base>
  415f04:	mov    DWORD PTR [rbp-0x14],eax
  415f07:	cmp    eax,0x0
  415f0a:	je     415f1b <main@@Base+0x1b2b>
  415f10:	mov    eax,DWORD PTR [rbp-0x14]
  415f13:	mov    DWORD PTR [rbp-0x4],eax
  415f16:	jmp    416063 <main@@Base+0x1c73>
  415f1b:	mov    eax,0x4
  415f20:	mov    edx,eax
  415f22:	mov    rdi,QWORD PTR [rbp-0x10]
  415f26:	mov    esi,0x1b
  415f2b:	mov    ecx,0x4
  415f30:	call   41ff40 <flatcc_verify_field@@Base>
  415f35:	mov    DWORD PTR [rbp-0x14],eax
  415f38:	cmp    eax,0x0
  415f3b:	je     415f4c <main@@Base+0x1b5c>
  415f41:	mov    eax,DWORD PTR [rbp-0x14]
  415f44:	mov    DWORD PTR [rbp-0x4],eax
  415f47:	jmp    416063 <main@@Base+0x1c73>
  415f4c:	xor    edx,edx
  415f4e:	mov    eax,0x1
  415f53:	mov    ecx,eax
  415f55:	mov    eax,0xffffffff
  415f5a:	mov    r9d,eax
  415f5d:	mov    rdi,QWORD PTR [rbp-0x10]
  415f61:	mov    esi,0x1e
  415f66:	mov    r8d,0x1
  415f6c:	call   420450 <flatcc_verify_vector_field@@Base>
  415f71:	mov    DWORD PTR [rbp-0x14],eax
  415f74:	cmp    eax,0x0
  415f77:	je     415f88 <main@@Base+0x1b98>
  415f7d:	mov    eax,DWORD PTR [rbp-0x14]
  415f80:	mov    DWORD PTR [rbp-0x4],eax
  415f83:	jmp    416063 <main@@Base+0x1c73>
  415f88:	xor    edx,edx
  415f8a:	mov    eax,0x8
  415f8f:	mov    ecx,eax
  415f91:	mov    eax,0x1fffffff
  415f96:	mov    r9d,eax
  415f99:	mov    rdi,QWORD PTR [rbp-0x10]
  415f9d:	mov    esi,0x20
  415fa2:	mov    r8d,0x8
  415fa8:	call   420450 <flatcc_verify_vector_field@@Base>
  415fad:	mov    DWORD PTR [rbp-0x14],eax
  415fb0:	cmp    eax,0x0
  415fb3:	je     415fc4 <main@@Base+0x1bd4>
  415fb9:	mov    eax,DWORD PTR [rbp-0x14]
  415fbc:	mov    DWORD PTR [rbp-0x4],eax
  415fbf:	jmp    416063 <main@@Base+0x1c73>
  415fc4:	xor    edx,edx
  415fc6:	mov    eax,0x8
  415fcb:	mov    ecx,eax
  415fcd:	mov    eax,0x1fffffff
  415fd2:	mov    r9d,eax
  415fd5:	mov    rdi,QWORD PTR [rbp-0x10]
  415fd9:	mov    esi,0x21
  415fde:	mov    r8d,0x8
  415fe4:	call   420450 <flatcc_verify_vector_field@@Base>
  415fe9:	mov    DWORD PTR [rbp-0x14],eax
  415fec:	cmp    eax,0x0
  415fef:	je     416000 <main@@Base+0x1c10>
  415ff5:	mov    eax,DWORD PTR [rbp-0x14]
  415ff8:	mov    DWORD PTR [rbp-0x4],eax
  415ffb:	jmp    416063 <main@@Base+0x1c73>
  416000:	xor    edx,edx
  416002:	mov    rdi,QWORD PTR [rbp-0x10]
  416006:	mov    esi,0x22
  41600b:	lea    rcx,[rip+0x1be]        # 4161d0 <main@@Base+0x1de0>
  416012:	call   420840 <flatcc_verify_table_field@@Base>
  416017:	mov    DWORD PTR [rbp-0x14],eax
  41601a:	cmp    eax,0x0
  41601d:	je     41602e <main@@Base+0x1c3e>
  416023:	mov    eax,DWORD PTR [rbp-0x14]
  416026:	mov    DWORD PTR [rbp-0x4],eax
  416029:	jmp    416063 <main@@Base+0x1c73>
  41602e:	xor    edx,edx
  416030:	mov    rdi,QWORD PTR [rbp-0x10]
  416034:	mov    esi,0x23
  416039:	lea    rcx,[rip+0x1a0]        # 4161e0 <main@@Base+0x1df0>
  416040:	call   420840 <flatcc_verify_table_field@@Base>
  416045:	mov    DWORD PTR [rbp-0x14],eax
  416048:	cmp    eax,0x0
  41604b:	je     41605c <main@@Base+0x1c6c>
  416051:	mov    eax,DWORD PTR [rbp-0x14]
  416054:	mov    DWORD PTR [rbp-0x4],eax
  416057:	jmp    416063 <main@@Base+0x1c73>
  41605c:	mov    DWORD PTR [rbp-0x4],0x0
  416063:	mov    eax,DWORD PTR [rbp-0x4]
  416066:	add    rsp,0x20
  41606a:	pop    rbp
  41606b:	ret    
  41606c:	nop    DWORD PTR [rax+0x0]
  416070:	push   rbp
  416071:	mov    rbp,rsp
  416074:	sub    rsp,0x20
  416078:	mov    QWORD PTR [rbp-0x10],rdi
  41607c:	mov    rdi,QWORD PTR [rbp-0x10]
  416080:	movzx  eax,BYTE PTR [rdi+0x10]
  416084:	add    eax,0xffffffff
  416087:	mov    edi,eax
  416089:	sub    eax,0x3
  41608c:	mov    QWORD PTR [rbp-0x18],rdi
  416090:	mov    DWORD PTR [rbp-0x1c],eax
  416093:	ja     41610d <main@@Base+0x1d1d>
  416099:	lea    rax,[rip+0xcfc4]        # 423064 <_IO_stdin_used@@Base+0x64>
  4160a0:	mov    rcx,QWORD PTR [rbp-0x18]
  4160a4:	movsxd rdx,DWORD PTR [rax+rcx*4]
  4160a8:	add    rdx,rax
  4160ab:	jmp    rdx
  4160ad:	mov    rdi,QWORD PTR [rbp-0x10]
  4160b1:	lea    rsi,[rip+0xfffffffffffff8e8]        # 4159a0 <main@@Base+0x15b0>
  4160b8:	call   420dd0 <flatcc_verify_union_table@@Base>
  4160bd:	mov    DWORD PTR [rbp-0x4],eax
  4160c0:	jmp    416114 <main@@Base+0x1d24>
  4160c5:	mov    rdi,QWORD PTR [rbp-0x10]
  4160c9:	lea    rsi,[rip+0x1e0]        # 4162b0 <main@@Base+0x1ec0>
  4160d0:	call   420dd0 <flatcc_verify_union_table@@Base>
  4160d5:	mov    DWORD PTR [rbp-0x4],eax
  4160d8:	jmp    416114 <main@@Base+0x1d24>
  4160dd:	mov    rdi,QWORD PTR [rbp-0x10]
  4160e1:	lea    rsi,[rip+0x2a8]        # 416390 <main@@Base+0x1fa0>
  4160e8:	call   420dd0 <flatcc_verify_union_table@@Base>
  4160ed:	mov    DWORD PTR [rbp-0x4],eax
  4160f0:	jmp    416114 <main@@Base+0x1d24>
  4160f5:	mov    rdi,QWORD PTR [rbp-0x10]
  4160f9:	lea    rsi,[rip+0x2a0]        # 4163a0 <main@@Base+0x1fb0>
  416100:	call   420dd0 <flatcc_verify_union_table@@Base>
  416105:	mov    DWORD PTR [rbp-0x4],eax
  416108:	jmp    416114 <main@@Base+0x1d24>
  41610d:	mov    DWORD PTR [rbp-0x4],0x0
  416114:	mov    eax,DWORD PTR [rbp-0x4]
  416117:	add    rsp,0x20
  41611b:	pop    rbp
  41611c:	ret    
  41611d:	nop    DWORD PTR [rax]
  416120:	push   rbp
  416121:	mov    rbp,rsp
  416124:	sub    rsp,0x20
  416128:	xor    eax,eax
  41612a:	mov    QWORD PTR [rbp-0x10],rdi
  41612e:	mov    rdi,QWORD PTR [rbp-0x10]
  416132:	mov    esi,eax
  416134:	mov    edx,eax
  416136:	call   420140 <flatcc_verify_string_field@@Base>
  41613b:	mov    DWORD PTR [rbp-0x14],eax
  41613e:	cmp    eax,0x0
  416141:	je     416152 <main@@Base+0x1d62>
  416147:	mov    eax,DWORD PTR [rbp-0x14]
  41614a:	mov    DWORD PTR [rbp-0x4],eax
  41614d:	jmp    4161ba <main@@Base+0x1dca>
  416152:	mov    eax,0x8
  416157:	mov    edx,eax
  416159:	mov    rdi,QWORD PTR [rbp-0x10]
  41615d:	mov    esi,0x1
  416162:	mov    ecx,0x8
  416167:	call   41ff40 <flatcc_verify_field@@Base>
  41616c:	mov    DWORD PTR [rbp-0x14],eax
  41616f:	cmp    eax,0x0
  416172:	je     416183 <main@@Base+0x1d93>
  416178:	mov    eax,DWORD PTR [rbp-0x14]
  41617b:	mov    DWORD PTR [rbp-0x4],eax
  41617e:	jmp    4161ba <main@@Base+0x1dca>
  416183:	mov    eax,0x2
  416188:	mov    edx,eax
  41618a:	mov    rdi,QWORD PTR [rbp-0x10]
  41618e:	mov    eax,0x2
  416193:	mov    esi,eax
  416195:	mov    ecx,eax
  416197:	call   41ff40 <flatcc_verify_field@@Base>
  41619c:	mov    DWORD PTR [rbp-0x14],eax
  41619f:	cmp    eax,0x0
  4161a2:	je     4161b3 <main@@Base+0x1dc3>
  4161a8:	mov    eax,DWORD PTR [rbp-0x14]
  4161ab:	mov    DWORD PTR [rbp-0x4],eax
  4161ae:	jmp    4161ba <main@@Base+0x1dca>
  4161b3:	mov    DWORD PTR [rbp-0x4],0x0
  4161ba:	mov    eax,DWORD PTR [rbp-0x4]
  4161bd:	add    rsp,0x20
  4161c1:	pop    rbp
  4161c2:	ret    
  4161c3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4161cd:	nop    DWORD PTR [rax]
  4161d0:	push   rbp
  4161d1:	mov    rbp,rsp
  4161d4:	xor    eax,eax
  4161d6:	mov    QWORD PTR [rbp-0x8],rdi
  4161da:	pop    rbp
  4161db:	ret    
  4161dc:	nop    DWORD PTR [rax+0x0]
  4161e0:	push   rbp
  4161e1:	mov    rbp,rsp
  4161e4:	sub    rsp,0x20
  4161e8:	xor    eax,eax
  4161ea:	mov    ecx,0x1
  4161ef:	mov    edx,0xffffffff
  4161f4:	mov    r9d,edx
  4161f7:	mov    QWORD PTR [rbp-0x10],rdi
  4161fb:	mov    rdi,QWORD PTR [rbp-0x10]
  4161ff:	mov    esi,eax
  416201:	mov    edx,eax
  416203:	mov    r8d,0x1
  416209:	call   420450 <flatcc_verify_vector_field@@Base>
  41620e:	mov    DWORD PTR [rbp-0x14],eax
  416211:	cmp    eax,0x0
  416214:	je     416225 <main@@Base+0x1e35>
  41621a:	mov    eax,DWORD PTR [rbp-0x14]
  41621d:	mov    DWORD PTR [rbp-0x4],eax
  416220:	jmp    41629f <main@@Base+0x1eaf>
  416225:	xor    edx,edx
  416227:	mov    eax,0x1
  41622c:	mov    ecx,eax
  41622e:	mov    eax,0xffffffff
  416233:	mov    r9d,eax
  416236:	mov    rdi,QWORD PTR [rbp-0x10]
  41623a:	mov    eax,0x1
  41623f:	mov    esi,eax
  416241:	mov    r8d,eax
  416244:	call   420450 <flatcc_verify_vector_field@@Base>
  416249:	mov    DWORD PTR [rbp-0x14],eax
  41624c:	cmp    eax,0x0
  41624f:	je     416260 <main@@Base+0x1e70>
  416255:	mov    eax,DWORD PTR [rbp-0x14]
  416258:	mov    DWORD PTR [rbp-0x4],eax
  41625b:	jmp    41629f <main@@Base+0x1eaf>
  416260:	xor    edx,edx
  416262:	xor    eax,eax
  416264:	mov    ecx,eax
  416266:	mov    rdi,QWORD PTR [rbp-0x10]
  41626a:	mov    esi,0x2
  41626f:	mov    r8d,0x1
  416275:	lea    r9,[rip+0xfffffffffffff724]        # 4159a0 <main@@Base+0x15b0>
  41627c:	call   421690 <flatcc_verify_table_as_nested_root@@Base>
  416281:	mov    DWORD PTR [rbp-0x14],eax
  416284:	cmp    eax,0x0
  416287:	je     416298 <main@@Base+0x1ea8>
  41628d:	mov    eax,DWORD PTR [rbp-0x14]
  416290:	mov    DWORD PTR [rbp-0x4],eax
  416293:	jmp    41629f <main@@Base+0x1eaf>
  416298:	mov    DWORD PTR [rbp-0x4],0x0
  41629f:	mov    eax,DWORD PTR [rbp-0x4]
  4162a2:	add    rsp,0x20
  4162a6:	pop    rbp
  4162a7:	ret    
  4162a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4162b0:	push   rbp
  4162b1:	mov    rbp,rsp
  4162b4:	sub    rsp,0x20
  4162b8:	xor    esi,esi
  4162ba:	mov    eax,0x1
  4162bf:	mov    edx,eax
  4162c1:	mov    QWORD PTR [rbp-0x10],rdi
  4162c5:	mov    rdi,QWORD PTR [rbp-0x10]
  4162c9:	mov    ecx,0x1
  4162ce:	call   41ff40 <flatcc_verify_field@@Base>
  4162d3:	mov    DWORD PTR [rbp-0x14],eax
  4162d6:	cmp    eax,0x0
  4162d9:	je     4162ea <main@@Base+0x1efa>
  4162df:	mov    eax,DWORD PTR [rbp-0x14]
  4162e2:	mov    DWORD PTR [rbp-0x4],eax
  4162e5:	jmp    416383 <main@@Base+0x1f93>
  4162ea:	mov    eax,0x1
  4162ef:	mov    edx,eax
  4162f1:	mov    rdi,QWORD PTR [rbp-0x10]
  4162f5:	mov    eax,0x1
  4162fa:	mov    esi,eax
  4162fc:	mov    ecx,eax
  4162fe:	call   41ff40 <flatcc_verify_field@@Base>
  416303:	mov    DWORD PTR [rbp-0x14],eax
  416306:	cmp    eax,0x0
  416309:	je     41631a <main@@Base+0x1f2a>
  41630f:	mov    eax,DWORD PTR [rbp-0x14]
  416312:	mov    DWORD PTR [rbp-0x4],eax
  416315:	jmp    416383 <main@@Base+0x1f93>
  41631a:	mov    eax,0x1
  41631f:	mov    edx,eax
  416321:	mov    rdi,QWORD PTR [rbp-0x10]
  416325:	mov    esi,0x2
  41632a:	mov    ecx,0x1
  41632f:	call   41ff40 <flatcc_verify_field@@Base>
  416334:	mov    DWORD PTR [rbp-0x14],eax
  416337:	cmp    eax,0x0
  41633a:	je     41634b <main@@Base+0x1f5b>
  416340:	mov    eax,DWORD PTR [rbp-0x14]
  416343:	mov    DWORD PTR [rbp-0x4],eax
  416346:	jmp    416383 <main@@Base+0x1f93>
  41634b:	mov    eax,0x1
  416350:	mov    edx,eax
  416352:	mov    rdi,QWORD PTR [rbp-0x10]
  416356:	mov    esi,0x3
  41635b:	mov    ecx,0x1
  416360:	call   41ff40 <flatcc_verify_field@@Base>
  416365:	mov    DWORD PTR [rbp-0x14],eax
  416368:	cmp    eax,0x0
  41636b:	je     41637c <main@@Base+0x1f8c>
  416371:	mov    eax,DWORD PTR [rbp-0x14]
  416374:	mov    DWORD PTR [rbp-0x4],eax
  416377:	jmp    416383 <main@@Base+0x1f93>
  41637c:	mov    DWORD PTR [rbp-0x4],0x0
  416383:	mov    eax,DWORD PTR [rbp-0x4]
  416386:	add    rsp,0x20
  41638a:	pop    rbp
  41638b:	ret    
  41638c:	nop    DWORD PTR [rax+0x0]
  416390:	push   rbp
  416391:	mov    rbp,rsp
  416394:	xor    eax,eax
  416396:	mov    QWORD PTR [rbp-0x8],rdi
  41639a:	pop    rbp
  41639b:	ret    
  41639c:	nop    DWORD PTR [rax+0x0]
  4163a0:	push   rbp
  4163a1:	mov    rbp,rsp
  4163a4:	sub    rsp,0x20
  4163a8:	xor    eax,eax
  4163aa:	mov    QWORD PTR [rbp-0x10],rdi
  4163ae:	mov    rdi,QWORD PTR [rbp-0x10]
  4163b2:	mov    esi,eax
  4163b4:	mov    edx,eax
  4163b6:	lea    rcx,[rip+0x93]        # 416450 <main@@Base+0x2060>
  4163bd:	call   420840 <flatcc_verify_table_field@@Base>
  4163c2:	mov    DWORD PTR [rbp-0x14],eax
  4163c5:	cmp    eax,0x0
  4163c8:	je     4163d9 <main@@Base+0x1fe9>
  4163ce:	mov    eax,DWORD PTR [rbp-0x14]
  4163d1:	mov    DWORD PTR [rbp-0x4],eax
  4163d4:	jmp    41643c <main@@Base+0x204c>
  4163d9:	xor    edx,edx
  4163db:	mov    rdi,QWORD PTR [rbp-0x10]
  4163df:	mov    esi,0x1
  4163e4:	lea    rcx,[rip+0x115]        # 416500 <main@@Base+0x2110>
  4163eb:	call   420840 <flatcc_verify_table_field@@Base>
  4163f0:	mov    DWORD PTR [rbp-0x14],eax
  4163f3:	cmp    eax,0x0
  4163f6:	je     416407 <main@@Base+0x2017>
  4163fc:	mov    eax,DWORD PTR [rbp-0x14]
  4163ff:	mov    DWORD PTR [rbp-0x4],eax
  416402:	jmp    41643c <main@@Base+0x204c>
  416407:	xor    edx,edx
  416409:	mov    rdi,QWORD PTR [rbp-0x10]
  41640d:	mov    esi,0x3
  416412:	lea    rcx,[rip+0xfffffffffffffc57]        # 416070 <main@@Base+0x1c80>
  416419:	call   421ad0 <flatcc_verify_union_vector_field@@Base>
  41641e:	mov    DWORD PTR [rbp-0x14],eax
  416421:	cmp    eax,0x0
  416424:	je     416435 <main@@Base+0x2045>
  41642a:	mov    eax,DWORD PTR [rbp-0x14]
  41642d:	mov    DWORD PTR [rbp-0x4],eax
  416430:	jmp    41643c <main@@Base+0x204c>
  416435:	mov    DWORD PTR [rbp-0x4],0x0
  41643c:	mov    eax,DWORD PTR [rbp-0x4]
  41643f:	add    rsp,0x20
  416443:	pop    rbp
  416444:	ret    
  416445:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41644f:	nop
  416450:	push   rbp
  416451:	mov    rbp,rsp
  416454:	sub    rsp,0x20
  416458:	xor    eax,eax
  41645a:	mov    QWORD PTR [rbp-0x10],rdi
  41645e:	mov    rdi,QWORD PTR [rbp-0x10]
  416462:	mov    esi,eax
  416464:	mov    edx,eax
  416466:	lea    rcx,[rip+0x1a3]        # 416610 <main@@Base+0x2220>
  41646d:	call   420840 <flatcc_verify_table_field@@Base>
  416472:	mov    DWORD PTR [rbp-0x14],eax
  416475:	cmp    eax,0x0
  416478:	je     416489 <main@@Base+0x2099>
  41647e:	mov    eax,DWORD PTR [rbp-0x14]
  416481:	mov    DWORD PTR [rbp-0x4],eax
  416484:	jmp    4164ec <main@@Base+0x20fc>
  416489:	xor    edx,edx
  41648b:	mov    rdi,QWORD PTR [rbp-0x10]
  41648f:	mov    esi,0x1
  416494:	lea    rcx,[rip+0x335]        # 4167d0 <main@@Base+0x23e0>
  41649b:	call   420840 <flatcc_verify_table_field@@Base>
  4164a0:	mov    DWORD PTR [rbp-0x14],eax
  4164a3:	cmp    eax,0x0
  4164a6:	je     4164b7 <main@@Base+0x20c7>
  4164ac:	mov    eax,DWORD PTR [rbp-0x14]
  4164af:	mov    DWORD PTR [rbp-0x4],eax
  4164b2:	jmp    4164ec <main@@Base+0x20fc>
  4164b7:	xor    edx,edx
  4164b9:	mov    rdi,QWORD PTR [rbp-0x10]
  4164bd:	mov    esi,0x2
  4164c2:	lea    rcx,[rip+0x387]        # 416850 <main@@Base+0x2460>
  4164c9:	call   420840 <flatcc_verify_table_field@@Base>
  4164ce:	mov    DWORD PTR [rbp-0x14],eax
  4164d1:	cmp    eax,0x0
  4164d4:	je     4164e5 <main@@Base+0x20f5>
  4164da:	mov    eax,DWORD PTR [rbp-0x14]
  4164dd:	mov    DWORD PTR [rbp-0x4],eax
  4164e0:	jmp    4164ec <main@@Base+0x20fc>
  4164e5:	mov    DWORD PTR [rbp-0x4],0x0
  4164ec:	mov    eax,DWORD PTR [rbp-0x4]
  4164ef:	add    rsp,0x20
  4164f3:	pop    rbp
  4164f4:	ret    
  4164f5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4164ff:	nop
  416500:	push   rbp
  416501:	mov    rbp,rsp
  416504:	sub    rsp,0x20
  416508:	xor    edx,edx
  41650a:	mov    QWORD PTR [rbp-0x10],rdi
  41650e:	mov    rdi,QWORD PTR [rbp-0x10]
  416512:	mov    esi,0x1
  416517:	lea    rcx,[rip+0x3b2]        # 4168d0 <main@@Base+0x24e0>
  41651e:	call   421810 <flatcc_verify_union_field@@Base>
  416523:	mov    DWORD PTR [rbp-0x14],eax
  416526:	cmp    eax,0x0
  416529:	je     41653a <main@@Base+0x214a>
  41652f:	mov    eax,DWORD PTR [rbp-0x14]
  416532:	mov    DWORD PTR [rbp-0x4],eax
  416535:	jmp    4165f9 <main@@Base+0x2209>
  41653a:	xor    edx,edx
  41653c:	mov    rdi,QWORD PTR [rbp-0x10]
  416540:	mov    esi,0x3
  416545:	lea    rcx,[rip+0x384]        # 4168d0 <main@@Base+0x24e0>
  41654c:	call   421810 <flatcc_verify_union_field@@Base>
  416551:	mov    DWORD PTR [rbp-0x14],eax
  416554:	cmp    eax,0x0
  416557:	je     416568 <main@@Base+0x2178>
  41655d:	mov    eax,DWORD PTR [rbp-0x14]
  416560:	mov    DWORD PTR [rbp-0x4],eax
  416563:	jmp    4165f9 <main@@Base+0x2209>
  416568:	xor    edx,edx
  41656a:	mov    rdi,QWORD PTR [rbp-0x10]
  41656e:	mov    esi,0x5
  416573:	lea    rcx,[rip+0x356]        # 4168d0 <main@@Base+0x24e0>
  41657a:	call   421810 <flatcc_verify_union_field@@Base>
  41657f:	mov    DWORD PTR [rbp-0x14],eax
  416582:	cmp    eax,0x0
  416585:	je     416596 <main@@Base+0x21a6>
  41658b:	mov    eax,DWORD PTR [rbp-0x14]
  41658e:	mov    DWORD PTR [rbp-0x4],eax
  416591:	jmp    4165f9 <main@@Base+0x2209>
  416596:	xor    edx,edx
  416598:	mov    rdi,QWORD PTR [rbp-0x10]
  41659c:	mov    esi,0x7
  4165a1:	lea    rcx,[rip+0x328]        # 4168d0 <main@@Base+0x24e0>
  4165a8:	call   421810 <flatcc_verify_union_field@@Base>
  4165ad:	mov    DWORD PTR [rbp-0x14],eax
  4165b0:	cmp    eax,0x0
  4165b3:	je     4165c4 <main@@Base+0x21d4>
  4165b9:	mov    eax,DWORD PTR [rbp-0x14]
  4165bc:	mov    DWORD PTR [rbp-0x4],eax
  4165bf:	jmp    4165f9 <main@@Base+0x2209>
  4165c4:	xor    edx,edx
  4165c6:	mov    rdi,QWORD PTR [rbp-0x10]
  4165ca:	mov    esi,0x9
  4165cf:	lea    rcx,[rip+0x2fa]        # 4168d0 <main@@Base+0x24e0>
  4165d6:	call   421ad0 <flatcc_verify_union_vector_field@@Base>
  4165db:	mov    DWORD PTR [rbp-0x14],eax
  4165de:	cmp    eax,0x0
  4165e1:	je     4165f2 <main@@Base+0x2202>
  4165e7:	mov    eax,DWORD PTR [rbp-0x14]
  4165ea:	mov    DWORD PTR [rbp-0x4],eax
  4165ed:	jmp    4165f9 <main@@Base+0x2209>
  4165f2:	mov    DWORD PTR [rbp-0x4],0x0
  4165f9:	mov    eax,DWORD PTR [rbp-0x4]
  4165fc:	add    rsp,0x20
  416600:	pop    rbp
  416601:	ret    
  416602:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41660c:	nop    DWORD PTR [rax+0x0]
  416610:	push   rbp
  416611:	mov    rbp,rsp
  416614:	sub    rsp,0x20
  416618:	xor    eax,eax
  41661a:	mov    QWORD PTR [rbp-0x10],rdi
  41661e:	mov    rdi,QWORD PTR [rbp-0x10]
  416622:	mov    esi,eax
  416624:	mov    edx,eax
  416626:	call   420140 <flatcc_verify_string_field@@Base>
  41662b:	mov    DWORD PTR [rbp-0x14],eax
  41662e:	cmp    eax,0x0
  416631:	je     416642 <main@@Base+0x2252>
  416637:	mov    eax,DWORD PTR [rbp-0x14]
  41663a:	mov    DWORD PTR [rbp-0x4],eax
  41663d:	jmp    4167bd <main@@Base+0x23cd>
  416642:	mov    eax,0x4
  416647:	mov    edx,eax
  416649:	mov    rdi,QWORD PTR [rbp-0x10]
  41664d:	mov    esi,0x1
  416652:	mov    ecx,0x4
  416657:	call   41ff40 <flatcc_verify_field@@Base>
  41665c:	mov    DWORD PTR [rbp-0x14],eax
  41665f:	cmp    eax,0x0
  416662:	je     416673 <main@@Base+0x2283>
  416668:	mov    eax,DWORD PTR [rbp-0x14]
  41666b:	mov    DWORD PTR [rbp-0x4],eax
  41666e:	jmp    4167bd <main@@Base+0x23cd>
  416673:	xor    edx,edx
  416675:	mov    rdi,QWORD PTR [rbp-0x10]
  416679:	mov    esi,0x2
  41667e:	call   420140 <flatcc_verify_string_field@@Base>
  416683:	mov    DWORD PTR [rbp-0x14],eax
  416686:	cmp    eax,0x0
  416689:	je     41669a <main@@Base+0x22aa>
  41668f:	mov    eax,DWORD PTR [rbp-0x14]
  416692:	mov    DWORD PTR [rbp-0x4],eax
  416695:	jmp    4167bd <main@@Base+0x23cd>
  41669a:	mov    eax,0x8
  41669f:	mov    edx,eax
  4166a1:	mov    rdi,QWORD PTR [rbp-0x10]
  4166a5:	mov    esi,0x3
  4166aa:	mov    ecx,0x8
  4166af:	call   41ff40 <flatcc_verify_field@@Base>
  4166b4:	mov    DWORD PTR [rbp-0x14],eax
  4166b7:	cmp    eax,0x0
  4166ba:	je     4166cb <main@@Base+0x22db>
  4166c0:	mov    eax,DWORD PTR [rbp-0x14]
  4166c3:	mov    DWORD PTR [rbp-0x4],eax
  4166c6:	jmp    4167bd <main@@Base+0x23cd>
  4166cb:	xor    edx,edx
  4166cd:	mov    rdi,QWORD PTR [rbp-0x10]
  4166d1:	mov    esi,0x4
  4166d6:	call   420140 <flatcc_verify_string_field@@Base>
  4166db:	mov    DWORD PTR [rbp-0x14],eax
  4166de:	cmp    eax,0x0
  4166e1:	je     4166f2 <main@@Base+0x2302>
  4166e7:	mov    eax,DWORD PTR [rbp-0x14]
  4166ea:	mov    DWORD PTR [rbp-0x4],eax
  4166ed:	jmp    4167bd <main@@Base+0x23cd>
  4166f2:	mov    eax,0x8
  4166f7:	mov    edx,eax
  4166f9:	mov    rdi,QWORD PTR [rbp-0x10]
  4166fd:	mov    esi,0x5
  416702:	mov    ecx,0x8
  416707:	call   41ff40 <flatcc_verify_field@@Base>
  41670c:	mov    DWORD PTR [rbp-0x14],eax
  41670f:	cmp    eax,0x0
  416712:	je     416723 <main@@Base+0x2333>
  416718:	mov    eax,DWORD PTR [rbp-0x14]
  41671b:	mov    DWORD PTR [rbp-0x4],eax
  41671e:	jmp    4167bd <main@@Base+0x23cd>
  416723:	mov    eax,0x4
  416728:	mov    edx,eax
  41672a:	mov    rdi,QWORD PTR [rbp-0x10]
  41672e:	mov    esi,0x6
  416733:	mov    ecx,0x4
  416738:	call   41ff40 <flatcc_verify_field@@Base>
  41673d:	mov    DWORD PTR [rbp-0x14],eax
  416740:	cmp    eax,0x0
  416743:	je     416754 <main@@Base+0x2364>
  416749:	mov    eax,DWORD PTR [rbp-0x14]
  41674c:	mov    DWORD PTR [rbp-0x4],eax
  41674f:	jmp    4167bd <main@@Base+0x23cd>
  416754:	mov    eax,0x8
  416759:	mov    edx,eax
  41675b:	mov    rdi,QWORD PTR [rbp-0x10]
  41675f:	mov    esi,0x7
  416764:	mov    ecx,0x8
  416769:	call   41ff40 <flatcc_verify_field@@Base>
  41676e:	mov    DWORD PTR [rbp-0x14],eax
  416771:	cmp    eax,0x0
  416774:	je     416785 <main@@Base+0x2395>
  41677a:	mov    eax,DWORD PTR [rbp-0x14]
  41677d:	mov    DWORD PTR [rbp-0x4],eax
  416780:	jmp    4167bd <main@@Base+0x23cd>
  416785:	mov    eax,0x4
  41678a:	mov    edx,eax
  41678c:	mov    rdi,QWORD PTR [rbp-0x10]
  416790:	mov    esi,0x8
  416795:	mov    ecx,0x4
  41679a:	call   41ff40 <flatcc_verify_field@@Base>
  41679f:	mov    DWORD PTR [rbp-0x14],eax
  4167a2:	cmp    eax,0x0
  4167a5:	je     4167b6 <main@@Base+0x23c6>
  4167ab:	mov    eax,DWORD PTR [rbp-0x14]
  4167ae:	mov    DWORD PTR [rbp-0x4],eax
  4167b1:	jmp    4167bd <main@@Base+0x23cd>
  4167b6:	mov    DWORD PTR [rbp-0x4],0x0
  4167bd:	mov    eax,DWORD PTR [rbp-0x4]
  4167c0:	add    rsp,0x20
  4167c4:	pop    rbp
  4167c5:	ret    
  4167c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4167d0:	push   rbp
  4167d1:	mov    rbp,rsp
  4167d4:	sub    rsp,0x20
  4167d8:	xor    esi,esi
  4167da:	mov    eax,0x8
  4167df:	mov    edx,eax
  4167e1:	mov    QWORD PTR [rbp-0x10],rdi
  4167e5:	mov    rdi,QWORD PTR [rbp-0x10]
  4167e9:	mov    ecx,0x8
  4167ee:	call   41ff40 <flatcc_verify_field@@Base>
  4167f3:	mov    DWORD PTR [rbp-0x14],eax
  4167f6:	cmp    eax,0x0
  4167f9:	je     41680a <main@@Base+0x241a>
  4167ff:	mov    eax,DWORD PTR [rbp-0x14]
  416802:	mov    DWORD PTR [rbp-0x4],eax
  416805:	jmp    416842 <main@@Base+0x2452>
  41680a:	mov    eax,0x4
  41680f:	mov    edx,eax
  416811:	mov    rdi,QWORD PTR [rbp-0x10]
  416815:	mov    esi,0x1
  41681a:	mov    ecx,0x4
  41681f:	call   41ff40 <flatcc_verify_field@@Base>
  416824:	mov    DWORD PTR [rbp-0x14],eax
  416827:	cmp    eax,0x0
  41682a:	je     41683b <main@@Base+0x244b>
  416830:	mov    eax,DWORD PTR [rbp-0x14]
  416833:	mov    DWORD PTR [rbp-0x4],eax
  416836:	jmp    416842 <main@@Base+0x2452>
  41683b:	mov    DWORD PTR [rbp-0x4],0x0
  416842:	mov    eax,DWORD PTR [rbp-0x4]
  416845:	add    rsp,0x20
  416849:	pop    rbp
  41684a:	ret    
  41684b:	nop    DWORD PTR [rax+rax*1+0x0]
  416850:	push   rbp
  416851:	mov    rbp,rsp
  416854:	sub    rsp,0x20
  416858:	xor    esi,esi
  41685a:	mov    eax,0x8
  41685f:	mov    edx,eax
  416861:	mov    QWORD PTR [rbp-0x10],rdi
  416865:	mov    rdi,QWORD PTR [rbp-0x10]
  416869:	mov    ecx,0x8
  41686e:	call   41ff40 <flatcc_verify_field@@Base>
  416873:	mov    DWORD PTR [rbp-0x14],eax
  416876:	cmp    eax,0x0
  416879:	je     41688a <main@@Base+0x249a>
  41687f:	mov    eax,DWORD PTR [rbp-0x14]
  416882:	mov    DWORD PTR [rbp-0x4],eax
  416885:	jmp    4168c2 <main@@Base+0x24d2>
  41688a:	mov    eax,0x4
  41688f:	mov    edx,eax
  416891:	mov    rdi,QWORD PTR [rbp-0x10]
  416895:	mov    esi,0x1
  41689a:	mov    ecx,0x4
  41689f:	call   41ff40 <flatcc_verify_field@@Base>
  4168a4:	mov    DWORD PTR [rbp-0x14],eax
  4168a7:	cmp    eax,0x0
  4168aa:	je     4168bb <main@@Base+0x24cb>
  4168b0:	mov    eax,DWORD PTR [rbp-0x14]
  4168b3:	mov    DWORD PTR [rbp-0x4],eax
  4168b6:	jmp    4168c2 <main@@Base+0x24d2>
  4168bb:	mov    DWORD PTR [rbp-0x4],0x0
  4168c2:	mov    eax,DWORD PTR [rbp-0x4]
  4168c5:	add    rsp,0x20
  4168c9:	pop    rbp
  4168ca:	ret    
  4168cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4168d0:	push   rbp
  4168d1:	mov    rbp,rsp
  4168d4:	sub    rsp,0x30
  4168d8:	mov    QWORD PTR [rbp-0x10],rdi
  4168dc:	mov    rdi,QWORD PTR [rbp-0x10]
  4168e0:	movzx  eax,BYTE PTR [rdi+0x10]
  4168e4:	mov    ecx,eax
  4168e6:	sub    ecx,0x2
  4168e9:	mov    DWORD PTR [rbp-0x14],eax
  4168ec:	mov    DWORD PTR [rbp-0x18],ecx
  4168ef:	je     416960 <main@@Base+0x2570>
  4168f5:	jmp    4168fa <main@@Base+0x250a>
  4168fa:	mov    eax,DWORD PTR [rbp-0x14]
  4168fd:	sub    eax,0x8
  416900:	mov    DWORD PTR [rbp-0x1c],eax
  416903:	je     416978 <main@@Base+0x2588>
  416909:	jmp    41690e <main@@Base+0x251e>
  41690e:	mov    eax,DWORD PTR [rbp-0x14]
  416911:	sub    eax,0x9
  416914:	mov    DWORD PTR [rbp-0x20],eax
  416917:	je     416995 <main@@Base+0x25a5>
  41691d:	jmp    416922 <main@@Base+0x2532>
  416922:	mov    eax,DWORD PTR [rbp-0x14]
  416925:	sub    eax,0xa
  416928:	mov    DWORD PTR [rbp-0x24],eax
  41692b:	je     4169b2 <main@@Base+0x25c2>
  416931:	jmp    416936 <main@@Base+0x2546>
  416936:	mov    eax,DWORD PTR [rbp-0x14]
  416939:	sub    eax,0xb
  41693c:	mov    DWORD PTR [rbp-0x28],eax
  41693f:	je     4169cf <main@@Base+0x25df>
  416945:	jmp    41694a <main@@Base+0x255a>
  41694a:	mov    eax,DWORD PTR [rbp-0x14]
  41694d:	sub    eax,0xff
  416952:	mov    DWORD PTR [rbp-0x2c],eax
  416955:	je     4169e0 <main@@Base+0x25f0>
  41695b:	jmp    4169f1 <main@@Base+0x2601>
  416960:	mov    rdi,QWORD PTR [rbp-0x10]
  416964:	lea    rsi,[rip+0xa5]        # 416a10 <main@@Base+0x2620>
  41696b:	call   420dd0 <flatcc_verify_union_table@@Base>
  416970:	mov    DWORD PTR [rbp-0x4],eax
  416973:	jmp    4169f8 <main@@Base+0x2608>
  416978:	mov    eax,0x2
  41697d:	mov    esi,eax
  41697f:	mov    rdi,QWORD PTR [rbp-0x10]
  416983:	mov    edx,0x2
  416988:	call   420e20 <flatcc_verify_union_struct@@Base>
  41698d:	mov    DWORD PTR [rbp-0x4],eax
  416990:	jmp    4169f8 <main@@Base+0x2608>
  416995:	mov    eax,0x4
  41699a:	mov    esi,eax
  41699c:	mov    rdi,QWORD PTR [rbp-0x10]
  4169a0:	mov    edx,0x4
  4169a5:	call   420e20 <flatcc_verify_union_struct@@Base>
  4169aa:	mov    DWORD PTR [rbp-0x4],eax
  4169ad:	jmp    4169f8 <main@@Base+0x2608>
  4169b2:	mov    eax,0x4
  4169b7:	mov    esi,eax
  4169b9:	mov    rdi,QWORD PTR [rbp-0x10]
  4169bd:	mov    edx,0x4
  4169c2:	call   420e20 <flatcc_verify_union_struct@@Base>
  4169c7:	mov    DWORD PTR [rbp-0x4],eax
  4169ca:	jmp    4169f8 <main@@Base+0x2608>
  4169cf:	mov    rdi,QWORD PTR [rbp-0x10]
  4169d3:	call   420f70 <flatcc_verify_union_string@@Base>
  4169d8:	mov    DWORD PTR [rbp-0x4],eax
  4169db:	jmp    4169f8 <main@@Base+0x2608>
  4169e0:	mov    rdi,QWORD PTR [rbp-0x10]
  4169e4:	call   420f70 <flatcc_verify_union_string@@Base>
  4169e9:	mov    DWORD PTR [rbp-0x4],eax
  4169ec:	jmp    4169f8 <main@@Base+0x2608>
  4169f1:	mov    DWORD PTR [rbp-0x4],0x0
  4169f8:	mov    eax,DWORD PTR [rbp-0x4]
  4169fb:	add    rsp,0x30
  4169ff:	pop    rbp
  416a00:	ret    
  416a01:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416a0b:	nop    DWORD PTR [rax+rax*1+0x0]
  416a10:	push   rbp
  416a11:	mov    rbp,rsp
  416a14:	sub    rsp,0x20
  416a18:	xor    esi,esi
  416a1a:	mov    eax,0x4
  416a1f:	mov    edx,eax
  416a21:	mov    QWORD PTR [rbp-0x10],rdi
  416a25:	mov    rdi,QWORD PTR [rbp-0x10]
  416a29:	mov    ecx,0x4
  416a2e:	call   41ff40 <flatcc_verify_field@@Base>
  416a33:	mov    DWORD PTR [rbp-0x14],eax
  416a36:	cmp    eax,0x0
  416a39:	je     416a4a <main@@Base+0x265a>
  416a3f:	mov    eax,DWORD PTR [rbp-0x14]
  416a42:	mov    DWORD PTR [rbp-0x4],eax
  416a45:	jmp    416a51 <main@@Base+0x2661>
  416a4a:	mov    DWORD PTR [rbp-0x4],0x0
  416a51:	mov    eax,DWORD PTR [rbp-0x4]
  416a54:	add    rsp,0x20
  416a58:	pop    rbp
  416a59:	ret    
  416a5a:	nop    WORD PTR [rax+rax*1+0x0]
  416a60:	push   rbp
  416a61:	mov    rbp,rsp
  416a64:	sub    rsp,0x10
  416a68:	mov    QWORD PTR [rbp-0x8],rdi
  416a6c:	mov    rdi,QWORD PTR [rbp-0x8]
  416a70:	mov    edi,DWORD PTR [rdi]
  416a72:	call   416a80 <main@@Base+0x2690>
  416a77:	add    rsp,0x10
  416a7b:	pop    rbp
  416a7c:	ret    
  416a7d:	nop    DWORD PTR [rax]
  416a80:	push   rbp
  416a81:	mov    rbp,rsp
  416a84:	mov    DWORD PTR [rbp-0x4],edi
  416a87:	mov    eax,DWORD PTR [rbp-0x4]
  416a8a:	pop    rbp
  416a8b:	ret    
  416a8c:	nop    DWORD PTR [rax+0x0]
  416a90:	push   rbp
  416a91:	mov    rbp,rsp
  416a94:	xor    eax,eax
  416a96:	pop    rbp
  416a97:	ret    
  416a98:	nop    DWORD PTR [rax+rax*1+0x0]
  416aa0:	push   rbp
  416aa1:	mov    rbp,rsp
  416aa4:	sub    rsp,0x20
  416aa8:	mov    QWORD PTR [rbp-0x10],rdi
  416aac:	mov    QWORD PTR [rbp-0x18],rsi
  416ab0:	mov    rdi,QWORD PTR [rbp-0x10]
  416ab4:	call   416b00 <main@@Base+0x2710>
  416ab9:	cmp    eax,0x0
  416abc:	jne    416ad8 <main@@Base+0x26e8>
  416ac2:	mov    rdi,QWORD PTR [rbp-0x10]
  416ac6:	mov    rsi,QWORD PTR [rbp-0x18]
  416aca:	call   416b20 <main@@Base+0x2730>
  416acf:	cmp    eax,0x0
  416ad2:	je     416ae4 <main@@Base+0x26f4>
  416ad8:	mov    DWORD PTR [rbp-0x4],0x0
  416adf:	jmp    416af0 <main@@Base+0x2700>
  416ae4:	mov    rdi,QWORD PTR [rbp-0x10]
  416ae8:	call   416b80 <main@@Base+0x2790>
  416aed:	mov    DWORD PTR [rbp-0x4],eax
  416af0:	mov    eax,DWORD PTR [rbp-0x4]
  416af3:	add    rsp,0x20
  416af7:	pop    rbp
  416af8:	ret    
  416af9:	nop    DWORD PTR [rax+0x0]
  416b00:	push   rbp
  416b01:	mov    rbp,rsp
  416b04:	sub    rsp,0x10
  416b08:	mov    QWORD PTR [rbp-0x8],rdi
  416b0c:	mov    rdi,QWORD PTR [rbp-0x8]
  416b10:	mov    esi,0x1
  416b15:	call   41be00 <flatcc_builder_start_table@@Base>
  416b1a:	add    rsp,0x10
  416b1e:	pop    rbp
  416b1f:	ret    
  416b20:	push   rbp
  416b21:	mov    rbp,rsp
  416b24:	sub    rsp,0x30
  416b28:	mov    QWORD PTR [rbp-0x10],rdi
  416b2c:	mov    QWORD PTR [rbp-0x18],rsi
  416b30:	mov    rdi,QWORD PTR [rbp-0x10]
  416b34:	call   416be0 <main@@Base+0x27f0>
  416b39:	mov    QWORD PTR [rbp-0x20],rax
  416b3d:	cmp    QWORD PTR [rbp-0x20],0x0
  416b42:	jne    416b54 <main@@Base+0x2764>
  416b48:	mov    DWORD PTR [rbp-0x4],0xffffffff
  416b4f:	jmp    416b6c <main@@Base+0x277c>
  416b54:	mov    rdi,QWORD PTR [rbp-0x20]
  416b58:	mov    rsi,QWORD PTR [rbp-0x18]
  416b5c:	call   416c10 <main@@Base+0x2820>
  416b61:	mov    DWORD PTR [rbp-0x4],0x0
  416b68:	mov    QWORD PTR [rbp-0x28],rax
  416b6c:	mov    eax,DWORD PTR [rbp-0x4]
  416b6f:	add    rsp,0x30
  416b73:	pop    rbp
  416b74:	ret    
  416b75:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416b7f:	nop
  416b80:	push   rbp
  416b81:	mov    rbp,rsp
  416b84:	sub    rsp,0x10
  416b88:	xor    edx,edx
  416b8a:	mov    QWORD PTR [rbp-0x8],rdi
  416b8e:	mov    rdi,QWORD PTR [rbp-0x8]
  416b92:	lea    rsi,[rip+0xc5a5]        # 42313e <_IO_stdin_used@@Base+0x13e>
  416b99:	call   41c9c0 <flatcc_builder_check_required@@Base>
  416b9e:	cmp    eax,0x0
  416ba1:	je     416bac <main@@Base+0x27bc>
  416ba7:	jmp    416bcb <main@@Base+0x27db>
  416bac:	lea    rdi,[rip+0xf6a6]        # 426259 <_IO_stdin_used@@Base+0x3259>
  416bb3:	lea    rsi,[rip+0xf15b]        # 425d15 <_IO_stdin_used@@Base+0x2d15>
  416bba:	mov    edx,0xd7
  416bbf:	lea    rcx,[rip+0xf750]        # 426316 <_IO_stdin_used@@Base+0x3316>
  416bc6:	call   404090 <__assert_fail@plt>
  416bcb:	mov    rdi,QWORD PTR [rbp-0x8]
  416bcf:	call   41ca90 <flatcc_builder_end_table@@Base>
  416bd4:	add    rsp,0x10
  416bd8:	pop    rbp
  416bd9:	ret    
  416bda:	nop    WORD PTR [rax+rax*1+0x0]
  416be0:	push   rbp
  416be1:	mov    rbp,rsp
  416be4:	sub    rsp,0x10
  416be8:	xor    esi,esi
  416bea:	xor    eax,eax
  416bec:	mov    edx,eax
  416bee:	mov    QWORD PTR [rbp-0x8],rdi
  416bf2:	mov    rdi,QWORD PTR [rbp-0x8]
  416bf6:	mov    ecx,0x1
  416bfb:	call   41d6d0 <flatcc_builder_table_add@@Base>
  416c00:	add    rsp,0x10
  416c04:	pop    rbp
  416c05:	ret    
  416c06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416c10:	push   rbp
  416c11:	mov    rbp,rsp
  416c14:	mov    QWORD PTR [rbp-0x8],rdi
  416c18:	mov    QWORD PTR [rbp-0x10],rsi
  416c1c:	mov    rax,QWORD PTR [rbp-0x8]
  416c20:	pop    rbp
  416c21:	ret    
  416c22:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416c2c:	nop    DWORD PTR [rax+0x0]
  416c30:	push   rbp
  416c31:	mov    rbp,rsp
  416c34:	sub    rsp,0x20
  416c38:	xor    esi,esi
  416c3a:	xor    eax,eax
  416c3c:	mov    edx,eax
  416c3e:	mov    QWORD PTR [rbp-0x10],rdi
  416c42:	mov    rdi,QWORD PTR [rbp-0x10]
  416c46:	mov    ecx,0x1
  416c4b:	call   41ff40 <flatcc_verify_field@@Base>
  416c50:	mov    DWORD PTR [rbp-0x14],eax
  416c53:	cmp    eax,0x0
  416c56:	je     416c67 <main@@Base+0x2877>
  416c5c:	mov    eax,DWORD PTR [rbp-0x14]
  416c5f:	mov    DWORD PTR [rbp-0x4],eax
  416c62:	jmp    416c6e <main@@Base+0x287e>
  416c67:	mov    DWORD PTR [rbp-0x4],0x0
  416c6e:	mov    eax,DWORD PTR [rbp-0x4]
  416c71:	add    rsp,0x20
  416c75:	pop    rbp
  416c76:	ret    
  416c77:	nop    WORD PTR [rax+rax*1+0x0]
  416c80:	push   rbp
  416c81:	mov    rbp,rsp
  416c84:	mov    DWORD PTR [rbp-0x4],edi
  416c87:	mov    eax,DWORD PTR [rbp-0x4]
  416c8a:	pop    rbp
  416c8b:	ret    
  416c8c:	nop    DWORD PTR [rax+0x0]
  416c90:	push   rbp
  416c91:	mov    rbp,rsp
  416c94:	mov    eax,0x20
  416c99:	pop    rbp
  416c9a:	ret    
  416c9b:	nop    DWORD PTR [rax+rax*1+0x0]
  416ca0:	push   rbp
  416ca1:	mov    rbp,rsp
  416ca4:	sub    rsp,0x10
  416ca8:	mov    QWORD PTR [rbp-0x8],rdi
  416cac:	mov    QWORD PTR [rbp-0x10],rsi
  416cb0:	mov    rsi,QWORD PTR [rbp-0x10]
  416cb4:	vmovss xmm0,DWORD PTR [rsi]
  416cb8:	call   415930 <main@@Base+0x1540>
  416cbd:	mov    rsi,QWORD PTR [rbp-0x8]
  416cc1:	vmovss DWORD PTR [rsi],xmm0
  416cc5:	mov    rax,QWORD PTR [rbp-0x8]
  416cc9:	add    rsp,0x10
  416ccd:	pop    rbp
  416cce:	ret    
  416ccf:	nop
  416cd0:	push   rbp
  416cd1:	mov    rbp,rsp
  416cd4:	sub    rsp,0x10
  416cd8:	mov    QWORD PTR [rbp-0x8],rdi
  416cdc:	mov    QWORD PTR [rbp-0x10],rsi
  416ce0:	mov    rsi,QWORD PTR [rbp-0x10]
  416ce4:	vmovsd xmm0,QWORD PTR [rsi]
  416ce8:	call   415970 <main@@Base+0x1580>
  416ced:	mov    rsi,QWORD PTR [rbp-0x8]
  416cf1:	vmovsd QWORD PTR [rsi],xmm0
  416cf5:	mov    rax,QWORD PTR [rbp-0x8]
  416cf9:	add    rsp,0x10
  416cfd:	pop    rbp
  416cfe:	ret    
  416cff:	nop
  416d00:	push   rbp
  416d01:	mov    rbp,rsp
  416d04:	sub    rsp,0x20
  416d08:	mov    QWORD PTR [rbp-0x8],rdi
  416d0c:	mov    QWORD PTR [rbp-0x10],rsi
  416d10:	mov    rdi,QWORD PTR [rbp-0x8]
  416d14:	mov    rsi,QWORD PTR [rbp-0x10]
  416d18:	call   416d40 <main@@Base+0x2950>
  416d1d:	mov    rsi,QWORD PTR [rbp-0x10]
  416d21:	mov    cl,BYTE PTR [rsi+0x2]
  416d24:	mov    rsi,QWORD PTR [rbp-0x8]
  416d28:	mov    BYTE PTR [rsi+0x2],cl
  416d2b:	mov    rsi,QWORD PTR [rbp-0x8]
  416d2f:	mov    QWORD PTR [rbp-0x18],rax
  416d33:	mov    rax,rsi
  416d36:	add    rsp,0x20
  416d3a:	pop    rbp
  416d3b:	ret    
  416d3c:	nop    DWORD PTR [rax+0x0]
  416d40:	push   rbp
  416d41:	mov    rbp,rsp
  416d44:	sub    rsp,0x10
  416d48:	mov    QWORD PTR [rbp-0x8],rdi
  416d4c:	mov    QWORD PTR [rbp-0x10],rsi
  416d50:	mov    rsi,QWORD PTR [rbp-0x10]
  416d54:	movsx  edi,WORD PTR [rsi]
  416d57:	call   414a00 <main@@Base+0x610>
  416d5c:	mov    rsi,QWORD PTR [rbp-0x8]
  416d60:	mov    WORD PTR [rsi],ax
  416d63:	mov    rax,QWORD PTR [rbp-0x8]
  416d67:	add    rsp,0x10
  416d6b:	pop    rbp
  416d6c:	ret    
  416d6d:	nop    DWORD PTR [rax]
  416d70:	push   rbp
  416d71:	mov    rbp,rsp
  416d74:	sub    rsp,0x10
  416d78:	mov    QWORD PTR [rbp-0x8],rdi
  416d7c:	mov    rdi,QWORD PTR [rbp-0x8]
  416d80:	movsx  edi,BYTE PTR [rdi]
  416d83:	call   416da0 <main@@Base+0x29b0>
  416d88:	movsx  eax,al
  416d8b:	add    rsp,0x10
  416d8f:	pop    rbp
  416d90:	ret    
  416d91:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416d9b:	nop    DWORD PTR [rax+rax*1+0x0]
  416da0:	push   rbp
  416da1:	mov    rbp,rsp
  416da4:	mov    al,dil
  416da7:	mov    BYTE PTR [rbp-0x1],al
  416daa:	movsx  eax,BYTE PTR [rbp-0x1]
  416dae:	pop    rbp
  416daf:	ret    
  416db0:	push   rbp
  416db1:	mov    rbp,rsp
  416db4:	sub    rsp,0x10
  416db8:	mov    QWORD PTR [rbp-0x8],rdi
  416dbc:	cmp    QWORD PTR [rbp-0x8],0x0
  416dc1:	je     416de4 <main@@Base+0x29f4>
  416dc7:	mov    rax,QWORD PTR [rbp-0x8]
  416dcb:	add    rax,0xfffffffffffffffc
  416dcf:	mov    rdi,rax
  416dd2:	call   414930 <main@@Base+0x540>
  416dd7:	mov    eax,eax
  416dd9:	mov    edi,eax
  416ddb:	mov    QWORD PTR [rbp-0x10],rdi
  416ddf:	jmp    416df1 <main@@Base+0x2a01>
  416de4:	xor    eax,eax
  416de6:	mov    ecx,eax
  416de8:	mov    QWORD PTR [rbp-0x10],rcx
  416dec:	jmp    416df1 <main@@Base+0x2a01>
  416df1:	mov    rax,QWORD PTR [rbp-0x10]
  416df5:	add    rsp,0x10
  416df9:	pop    rbp
  416dfa:	ret    
  416dfb:	nop    DWORD PTR [rax+rax*1+0x0]
  416e00:	push   rbp
  416e01:	mov    rbp,rsp
  416e04:	sub    rsp,0x10
  416e08:	mov    QWORD PTR [rbp-0x8],rdi
  416e0c:	mov    rdi,QWORD PTR [rbp-0x8]
  416e10:	movzx  edi,BYTE PTR [rdi]
  416e13:	call   416e30 <main@@Base+0x2a40>
  416e18:	movzx  eax,al
  416e1b:	add    rsp,0x10
  416e1f:	pop    rbp
  416e20:	ret    
  416e21:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416e2b:	nop    DWORD PTR [rax+rax*1+0x0]
  416e30:	push   rbp
  416e31:	mov    rbp,rsp
  416e34:	mov    al,dil
  416e37:	mov    BYTE PTR [rbp-0x1],al
  416e3a:	movzx  eax,BYTE PTR [rbp-0x1]
  416e3e:	pop    rbp
  416e3f:	ret    
  416e40:	push   rbp
  416e41:	mov    rbp,rsp
  416e44:	sub    rsp,0x10
  416e48:	mov    QWORD PTR [rbp-0x8],rdi
  416e4c:	mov    rdi,QWORD PTR [rbp-0x8]
  416e50:	movzx  edi,BYTE PTR [rdi]
  416e53:	call   416e70 <main@@Base+0x2a80>
  416e58:	movzx  eax,al
  416e5b:	add    rsp,0x10
  416e5f:	pop    rbp
  416e60:	ret    
  416e61:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416e6b:	nop    DWORD PTR [rax+rax*1+0x0]
  416e70:	push   rbp
  416e71:	mov    rbp,rsp
  416e74:	mov    al,dil
  416e77:	mov    BYTE PTR [rbp-0x1],al
  416e7a:	movzx  eax,BYTE PTR [rbp-0x1]
  416e7e:	pop    rbp
  416e7f:	ret    
  416e80:	push   rbp
  416e81:	mov    rbp,rsp
  416e84:	sub    rsp,0x10
  416e88:	xor    edx,edx
  416e8a:	mov    QWORD PTR [rbp-0x8],rdi
  416e8e:	mov    QWORD PTR [rbp-0x10],rsi
  416e92:	mov    rdi,QWORD PTR [rbp-0x8]
  416e96:	mov    rsi,QWORD PTR [rbp-0x10]
  416e9a:	mov    ecx,0x2
  416e9f:	call   41a790 <flatcc_builder_start_buffer@@Base>
  416ea4:	add    rsp,0x10
  416ea8:	pop    rbp
  416ea9:	ret    
  416eaa:	nop    WORD PTR [rax+rax*1+0x0]
  416eb0:	push   rbp
  416eb1:	mov    rbp,rsp
  416eb4:	sub    rsp,0x10
  416eb8:	mov    al,sil
  416ebb:	mov    QWORD PTR [rbp-0x8],rdi
  416ebf:	mov    BYTE PTR [rbp-0x9],al
  416ec2:	movsx  edi,BYTE PTR [rbp-0x9]
  416ec6:	call   416ee0 <main@@Base+0x2af0>
  416ecb:	mov    rcx,QWORD PTR [rbp-0x8]
  416ecf:	mov    BYTE PTR [rcx],al
  416ed1:	mov    rax,QWORD PTR [rbp-0x8]
  416ed5:	add    rsp,0x10
  416ed9:	pop    rbp
  416eda:	ret    
  416edb:	nop    DWORD PTR [rax+rax*1+0x0]
  416ee0:	push   rbp
  416ee1:	mov    rbp,rsp
  416ee4:	mov    al,dil
  416ee7:	mov    BYTE PTR [rbp-0x1],al
  416eea:	movsx  eax,BYTE PTR [rbp-0x1]
  416eee:	pop    rbp
  416eef:	ret    
  416ef0:	push   rbp
  416ef1:	mov    rbp,rsp
  416ef4:	sub    rsp,0x20
  416ef8:	mov    QWORD PTR [rbp-0x8],rdi
  416efc:	mov    DWORD PTR [rbp-0xc],esi
  416eff:	cmp    DWORD PTR [rbp-0xc],0x0
  416f03:	je     416f38 <main@@Base+0x2b48>
  416f09:	mov    rdi,QWORD PTR [rbp-0x8]
  416f0d:	mov    esi,0x5
  416f12:	call   41d5d0 <flatcc_builder_table_add_offset@@Base>
  416f17:	mov    QWORD PTR [rbp-0x18],rax
  416f1b:	cmp    rax,0x0
  416f1f:	je     416f38 <main@@Base+0x2b48>
  416f25:	xor    eax,eax
  416f27:	mov    ecx,DWORD PTR [rbp-0xc]
  416f2a:	mov    rdx,QWORD PTR [rbp-0x18]
  416f2e:	mov    DWORD PTR [rdx],ecx
  416f30:	mov    DWORD PTR [rbp-0x1c],eax
  416f33:	jmp    416f45 <main@@Base+0x2b55>
  416f38:	mov    eax,0xffffffff
  416f3d:	mov    DWORD PTR [rbp-0x1c],eax
  416f40:	jmp    416f45 <main@@Base+0x2b55>
  416f45:	mov    eax,DWORD PTR [rbp-0x1c]
  416f48:	add    rsp,0x20
  416f4c:	pop    rbp
  416f4d:	ret    
  416f4e:	xchg   ax,ax
  416f50:	push   rbp
  416f51:	mov    rbp,rsp
  416f54:	sub    rsp,0x10
  416f58:	mov    eax,0x4
  416f5d:	mov    esi,eax
  416f5f:	mov    eax,0x3fffffff
  416f64:	mov    ecx,eax
  416f66:	mov    QWORD PTR [rbp-0x8],rdi
  416f6a:	mov    rdi,QWORD PTR [rbp-0x8]
  416f6e:	mov    edx,0x2
  416f73:	call   41b9a0 <flatcc_builder_start_vector@@Base>
  416f78:	add    rsp,0x10
  416f7c:	pop    rbp
  416f7d:	ret    
  416f7e:	xchg   ax,ax
  416f80:	push   rbp
  416f81:	mov    rbp,rsp
  416f84:	mov    al,dl
  416f86:	mov    cx,si
  416f89:	mov    QWORD PTR [rbp-0x8],rdi
  416f8d:	mov    WORD PTR [rbp-0xa],cx
  416f91:	mov    BYTE PTR [rbp-0xb],al
  416f94:	mov    cx,WORD PTR [rbp-0xa]
  416f98:	mov    rdi,QWORD PTR [rbp-0x8]
  416f9c:	mov    WORD PTR [rdi],cx
  416f9f:	mov    al,BYTE PTR [rbp-0xb]
  416fa2:	mov    rdi,QWORD PTR [rbp-0x8]
  416fa6:	mov    BYTE PTR [rdi+0x2],al
  416fa9:	mov    rax,QWORD PTR [rbp-0x8]
  416fad:	pop    rbp
  416fae:	ret    
  416faf:	nop
  416fb0:	push   rbp
  416fb1:	mov    rbp,rsp
  416fb4:	mov    eax,0x4
  416fb9:	pop    rbp
  416fba:	ret    
  416fbb:	nop    DWORD PTR [rax+rax*1+0x0]
  416fc0:	push   rbp
  416fc1:	mov    rbp,rsp
  416fc4:	sub    rsp,0x20
  416fc8:	mov    QWORD PTR [rbp-0x8],rdi
  416fcc:	mov    DWORD PTR [rbp-0xc],esi
  416fcf:	cmp    DWORD PTR [rbp-0xc],0x0
  416fd3:	je     417008 <main@@Base+0x2c18>
  416fd9:	mov    rdi,QWORD PTR [rbp-0x8]
  416fdd:	mov    esi,0x9
  416fe2:	call   41d5d0 <flatcc_builder_table_add_offset@@Base>
  416fe7:	mov    QWORD PTR [rbp-0x18],rax
  416feb:	cmp    rax,0x0
  416fef:	je     417008 <main@@Base+0x2c18>
  416ff5:	xor    eax,eax
  416ff7:	mov    ecx,DWORD PTR [rbp-0xc]
  416ffa:	mov    rdx,QWORD PTR [rbp-0x18]
  416ffe:	mov    DWORD PTR [rdx],ecx
  417000:	mov    DWORD PTR [rbp-0x1c],eax
  417003:	jmp    417015 <main@@Base+0x2c25>
  417008:	mov    eax,0xffffffff
  41700d:	mov    DWORD PTR [rbp-0x1c],eax
  417010:	jmp    417015 <main@@Base+0x2c25>
  417015:	mov    eax,DWORD PTR [rbp-0x1c]
  417018:	add    rsp,0x20
  41701c:	pop    rbp
  41701d:	ret    
  41701e:	xchg   ax,ax
  417020:	push   rbp
  417021:	mov    rbp,rsp
  417024:	sub    rsp,0x10
  417028:	mov    QWORD PTR [rbp-0x8],rdi
  41702c:	mov    rdi,QWORD PTR [rbp-0x8]
  417030:	call   41cee0 <flatcc_builder_end_vector@@Base>
  417035:	add    rsp,0x10
  417039:	pop    rbp
  41703a:	ret    
  41703b:	nop    DWORD PTR [rax+rax*1+0x0]
  417040:	push   rbp
  417041:	mov    rbp,rsp
  417044:	sub    rsp,0x20
  417048:	mov    QWORD PTR [rbp-0x8],rdi
  41704c:	mov    DWORD PTR [rbp-0xc],esi
  41704f:	cmp    DWORD PTR [rbp-0xc],0x0
  417053:	je     41706e <main@@Base+0x2c7e>
  417059:	mov    rdi,QWORD PTR [rbp-0x8]
  41705d:	mov    esi,DWORD PTR [rbp-0xc]
  417060:	call   41b2d0 <flatcc_builder_offset_vector_push@@Base>
  417065:	mov    QWORD PTR [rbp-0x18],rax
  417069:	jmp    41707b <main@@Base+0x2c8b>
  41706e:	xor    eax,eax
  417070:	mov    ecx,eax
  417072:	mov    QWORD PTR [rbp-0x18],rcx
  417076:	jmp    41707b <main@@Base+0x2c8b>
  41707b:	mov    rax,QWORD PTR [rbp-0x18]
  41707f:	add    rsp,0x20
  417083:	pop    rbp
  417084:	ret    
  417085:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41708f:	nop
  417090:	push   rbp
  417091:	mov    rbp,rsp
  417094:	sub    rsp,0x20
  417098:	mov    QWORD PTR [rbp-0x8],rdi
  41709c:	mov    DWORD PTR [rbp-0xc],esi
  41709f:	cmp    DWORD PTR [rbp-0xc],0x0
  4170a3:	je     4170d8 <main@@Base+0x2ce8>
  4170a9:	mov    rdi,QWORD PTR [rbp-0x8]
  4170ad:	mov    esi,0xb
  4170b2:	call   41d5d0 <flatcc_builder_table_add_offset@@Base>
  4170b7:	mov    QWORD PTR [rbp-0x18],rax
  4170bb:	cmp    rax,0x0
  4170bf:	je     4170d8 <main@@Base+0x2ce8>
  4170c5:	xor    eax,eax
  4170c7:	mov    ecx,DWORD PTR [rbp-0xc]
  4170ca:	mov    rdx,QWORD PTR [rbp-0x18]
  4170ce:	mov    DWORD PTR [rdx],ecx
  4170d0:	mov    DWORD PTR [rbp-0x1c],eax
  4170d3:	jmp    4170e5 <main@@Base+0x2cf5>
  4170d8:	mov    eax,0xffffffff
  4170dd:	mov    DWORD PTR [rbp-0x1c],eax
  4170e0:	jmp    4170e5 <main@@Base+0x2cf5>
  4170e5:	mov    eax,DWORD PTR [rbp-0x1c]
  4170e8:	add    rsp,0x20
  4170ec:	pop    rbp
  4170ed:	ret    
  4170ee:	xchg   ax,ax
  4170f0:	push   rbp
  4170f1:	mov    rbp,rsp
  4170f4:	sub    rsp,0x20
  4170f8:	mov    QWORD PTR [rbp-0x8],rdi
  4170fc:	mov    DWORD PTR [rbp-0xc],esi
  4170ff:	cmp    DWORD PTR [rbp-0xc],0x0
  417103:	je     417138 <main@@Base+0x2d48>
  417109:	mov    rdi,QWORD PTR [rbp-0x8]
  41710d:	mov    esi,0xa
  417112:	call   41d5d0 <flatcc_builder_table_add_offset@@Base>
  417117:	mov    QWORD PTR [rbp-0x18],rax
  41711b:	cmp    rax,0x0
  41711f:	je     417138 <main@@Base+0x2d48>
  417125:	xor    eax,eax
  417127:	mov    ecx,DWORD PTR [rbp-0xc]
  41712a:	mov    rdx,QWORD PTR [rbp-0x18]
  41712e:	mov    DWORD PTR [rdx],ecx
  417130:	mov    DWORD PTR [rbp-0x1c],eax
  417133:	jmp    417145 <main@@Base+0x2d55>
  417138:	mov    eax,0xffffffff
  41713d:	mov    DWORD PTR [rbp-0x1c],eax
  417140:	jmp    417145 <main@@Base+0x2d55>
  417145:	mov    eax,DWORD PTR [rbp-0x1c]
  417148:	add    rsp,0x20
  41714c:	pop    rbp
  41714d:	ret    
  41714e:	xchg   ax,ax
  417150:	push   rbp
  417151:	mov    rbp,rsp
  417154:	sub    rsp,0x10
  417158:	mov    eax,0x1
  41715d:	mov    esi,eax
  41715f:	mov    eax,0xffffffff
  417164:	mov    ecx,eax
  417166:	mov    QWORD PTR [rbp-0x8],rdi
  41716a:	mov    rdi,QWORD PTR [rbp-0x8]
  41716e:	mov    edx,0x1
  417173:	call   41b9a0 <flatcc_builder_start_vector@@Base>
  417178:	add    rsp,0x10
  41717c:	pop    rbp
  41717d:	ret    
  41717e:	xchg   ax,ax
  417180:	push   rbp
  417181:	mov    rbp,rsp
  417184:	sub    rsp,0x20
  417188:	mov    QWORD PTR [rbp-0x8],rdi
  41718c:	mov    DWORD PTR [rbp-0xc],esi
  41718f:	cmp    DWORD PTR [rbp-0xc],0x0
  417193:	je     4171c8 <main@@Base+0x2dd8>
  417199:	mov    rdi,QWORD PTR [rbp-0x8]
  41719d:	mov    esi,0x18
  4171a2:	call   41d5d0 <flatcc_builder_table_add_offset@@Base>
  4171a7:	mov    QWORD PTR [rbp-0x18],rax
  4171ab:	cmp    rax,0x0
  4171af:	je     4171c8 <main@@Base+0x2dd8>
  4171b5:	xor    eax,eax
  4171b7:	mov    ecx,DWORD PTR [rbp-0xc]
  4171ba:	mov    rdx,QWORD PTR [rbp-0x18]
  4171be:	mov    DWORD PTR [rdx],ecx
  4171c0:	mov    DWORD PTR [rbp-0x1c],eax
  4171c3:	jmp    4171d5 <main@@Base+0x2de5>
  4171c8:	mov    eax,0xffffffff
  4171cd:	mov    DWORD PTR [rbp-0x1c],eax
  4171d0:	jmp    4171d5 <main@@Base+0x2de5>
  4171d5:	mov    eax,DWORD PTR [rbp-0x1c]
  4171d8:	add    rsp,0x20
  4171dc:	pop    rbp
  4171dd:	ret    
  4171de:	xchg   ax,ax
  4171e0:	push   rbp
  4171e1:	mov    rbp,rsp
  4171e4:	sub    rsp,0x10
  4171e8:	mov    QWORD PTR [rbp-0x8],rdi
  4171ec:	mov    rdi,QWORD PTR [rbp-0x8]
  4171f0:	call   41cee0 <flatcc_builder_end_vector@@Base>
  4171f5:	add    rsp,0x10
  4171f9:	pop    rbp
  4171fa:	ret    
  4171fb:	nop    DWORD PTR [rax+rax*1+0x0]
  417200:	push   rbp
  417201:	mov    rbp,rsp
  417204:	sub    rsp,0x20
  417208:	mov    QWORD PTR [rbp-0x8],rdi
  41720c:	mov    DWORD PTR [rbp-0xc],esi
  41720f:	cmp    DWORD PTR [rbp-0xc],0x0
  417213:	je     41722e <main@@Base+0x2e3e>
  417219:	mov    rdi,QWORD PTR [rbp-0x8]
  41721d:	mov    esi,DWORD PTR [rbp-0xc]
  417220:	call   41b2d0 <flatcc_builder_offset_vector_push@@Base>
  417225:	mov    QWORD PTR [rbp-0x18],rax
  417229:	jmp    41723b <main@@Base+0x2e4b>
  41722e:	xor    eax,eax
  417230:	mov    ecx,eax
  417232:	mov    QWORD PTR [rbp-0x18],rcx
  417236:	jmp    41723b <main@@Base+0x2e4b>
  41723b:	mov    rax,QWORD PTR [rbp-0x18]
  41723f:	add    rsp,0x20
  417243:	pop    rbp
  417244:	ret    
  417245:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41724f:	nop
  417250:	push   rbp
  417251:	mov    rbp,rsp
  417254:	sub    rsp,0x10
  417258:	mov    al,sil
  41725b:	mov    QWORD PTR [rbp-0x8],rdi
  41725f:	mov    BYTE PTR [rbp-0x9],al
  417262:	movzx  edi,BYTE PTR [rbp-0x9]
  417266:	call   417280 <main@@Base+0x2e90>
  41726b:	mov    rcx,QWORD PTR [rbp-0x8]
  41726f:	mov    BYTE PTR [rcx],al
  417271:	mov    rax,QWORD PTR [rbp-0x8]
  417275:	add    rsp,0x10
  417279:	pop    rbp
  41727a:	ret    
  41727b:	nop    DWORD PTR [rax+rax*1+0x0]
  417280:	push   rbp
  417281:	mov    rbp,rsp
  417284:	mov    al,dil
  417287:	mov    BYTE PTR [rbp-0x1],al
  41728a:	movzx  eax,BYTE PTR [rbp-0x1]
  41728e:	pop    rbp
  41728f:	ret    
  417290:	push   rbp
  417291:	mov    rbp,rsp
  417294:	sub    rsp,0x10
  417298:	mov    QWORD PTR [rbp-0x8],rdi
  41729c:	mov    rdi,QWORD PTR [rbp-0x8]
  4172a0:	mov    esi,0x3
  4172a5:	call   41be00 <flatcc_builder_start_table@@Base>
  4172aa:	add    rsp,0x10
  4172ae:	pop    rbp
  4172af:	ret    
  4172b0:	push   rbp
  4172b1:	mov    rbp,rsp
  4172b4:	sub    rsp,0x20
  4172b8:	mov    QWORD PTR [rbp-0x8],rdi
  4172bc:	mov    DWORD PTR [rbp-0xc],esi
  4172bf:	cmp    DWORD PTR [rbp-0xc],0x0
  4172c3:	je     4172f8 <main@@Base+0x2f08>
  4172c9:	mov    rdi,QWORD PTR [rbp-0x8]
  4172cd:	mov    esi,0xe
  4172d2:	call   41d5d0 <flatcc_builder_table_add_offset@@Base>
  4172d7:	mov    QWORD PTR [rbp-0x18],rax
  4172db:	cmp    rax,0x0
  4172df:	je     4172f8 <main@@Base+0x2f08>
  4172e5:	xor    eax,eax
  4172e7:	mov    ecx,DWORD PTR [rbp-0xc]
  4172ea:	mov    rdx,QWORD PTR [rbp-0x18]
  4172ee:	mov    DWORD PTR [rdx],ecx
  4172f0:	mov    DWORD PTR [rbp-0x1c],eax
  4172f3:	jmp    417305 <main@@Base+0x2f15>
  4172f8:	mov    eax,0xffffffff
  4172fd:	mov    DWORD PTR [rbp-0x1c],eax
  417300:	jmp    417305 <main@@Base+0x2f15>
  417305:	mov    eax,DWORD PTR [rbp-0x1c]
  417308:	add    rsp,0x20
  41730c:	pop    rbp
  41730d:	ret    
  41730e:	xchg   ax,ax
  417310:	push   rbp
  417311:	mov    rbp,rsp
  417314:	sub    rsp,0x10
  417318:	xor    edx,edx
  41731a:	mov    QWORD PTR [rbp-0x8],rdi
  41731e:	mov    rdi,QWORD PTR [rbp-0x8]
  417322:	lea    rsi,[rip+0xbe17]        # 423140 <_IO_stdin_used@@Base+0x140>
  417329:	call   41c9c0 <flatcc_builder_check_required@@Base>
  41732e:	cmp    eax,0x0
  417331:	je     41733c <main@@Base+0x2f4c>
  417337:	jmp    41735b <main@@Base+0x2f6b>
  41733c:	lea    rdi,[rip+0xf90c]        # 426c4f <_IO_stdin_used@@Base+0x3c4f>
  417343:	lea    rsi,[rip+0xe9cb]        # 425d15 <_IO_stdin_used@@Base+0x2d15>
  41734a:	mov    edx,0xdd
  41734f:	lea    rcx,[rip+0xf992]        # 426ce8 <_IO_stdin_used@@Base+0x3ce8>
  417356:	call   404090 <__assert_fail@plt>
  41735b:	mov    rdi,QWORD PTR [rbp-0x8]
  41735f:	call   41ca90 <flatcc_builder_end_table@@Base>
  417364:	add    rsp,0x10
  417368:	pop    rbp
  417369:	ret    
  41736a:	nop    WORD PTR [rax+rax*1+0x0]
  417370:	push   rbp
  417371:	mov    rbp,rsp
  417374:	sub    rsp,0x30
  417378:	mov    QWORD PTR [rbp-0x8],rdi
  41737c:	mov    rdi,QWORD PTR [rbp-0x8]
  417380:	call   408c20 <verify_monster@@Base+0x2010>
  417385:	mov    QWORD PTR [rbp-0x20],rax
  417389:	cmp    QWORD PTR [rbp-0x20],0x0
  41738e:	jne    417399 <main@@Base+0x2fa9>
  417394:	jmp    417475 <main@@Base+0x3085>
  417399:	mov    rax,QWORD PTR [rbp-0x20]
  41739d:	sub    rax,0x1
  4173a1:	mov    QWORD PTR [rbp-0x18],rax
  4173a5:	mov    rax,QWORD PTR [rbp-0x20]
  4173a9:	shr    rax,0x1
  4173ad:	mov    QWORD PTR [rbp-0x10],rax
  4173b1:	mov    rdi,QWORD PTR [rbp-0x8]
  4173b5:	mov    rsi,QWORD PTR [rbp-0x10]
  4173b9:	mov    rdx,QWORD PTR [rbp-0x18]
  4173bd:	call   417480 <main@@Base+0x3090>
  4173c2:	mov    rax,QWORD PTR [rbp-0x10]
  4173c6:	mov    rcx,rax
  4173c9:	add    rcx,0xffffffffffffffff
  4173cd:	mov    QWORD PTR [rbp-0x10],rcx
  4173d1:	cmp    rax,0x0
  4173d5:	jne    4173b1 <main@@Base+0x2fc1>
  4173db:	jmp    4173e0 <main@@Base+0x2ff0>
  4173e0:	cmp    QWORD PTR [rbp-0x18],0x0
  4173e5:	jbe    417475 <main@@Base+0x3085>
  4173eb:	xor    eax,eax
  4173ed:	mov    ecx,eax
  4173ef:	sub    rcx,QWORD PTR [rbp-0x18]
  4173f3:	shl    rcx,0x2
  4173f7:	mov    eax,ecx
  4173f9:	mov    DWORD PTR [rbp-0x2c],eax
  4173fc:	mov    rcx,QWORD PTR [rbp-0x8]
  417400:	mov    rdx,QWORD PTR [rbp-0x18]
  417404:	shl    rdx,0x2
  417408:	add    rcx,rdx
  41740b:	mov    rdi,rcx
  41740e:	call   414930 <main@@Base+0x540>
  417413:	sub    eax,DWORD PTR [rbp-0x2c]
  417416:	mov    DWORD PTR [rbp-0x24],eax
  417419:	mov    rcx,QWORD PTR [rbp-0x8]
  41741d:	mov    rdi,rcx
  417420:	call   414930 <main@@Base+0x540>
  417425:	add    eax,DWORD PTR [rbp-0x2c]
  417428:	mov    DWORD PTR [rbp-0x28],eax
  41742b:	mov    rcx,QWORD PTR [rbp-0x8]
  41742f:	mov    esi,DWORD PTR [rbp-0x24]
  417432:	mov    rdi,rcx
  417435:	call   417650 <main@@Base+0x3260>
  41743a:	mov    rcx,QWORD PTR [rbp-0x8]
  41743e:	mov    rdx,QWORD PTR [rbp-0x18]
  417442:	shl    rdx,0x2
  417446:	add    rcx,rdx
  417449:	mov    esi,DWORD PTR [rbp-0x28]
  41744c:	mov    rdi,rcx
  41744f:	call   417650 <main@@Base+0x3260>
  417454:	xor    eax,eax
  417456:	mov    esi,eax
  417458:	mov    rdi,QWORD PTR [rbp-0x8]
  41745c:	mov    rcx,QWORD PTR [rbp-0x18]
  417460:	add    rcx,0xffffffffffffffff
  417464:	mov    QWORD PTR [rbp-0x18],rcx
  417468:	mov    rdx,rcx
  41746b:	call   417480 <main@@Base+0x3090>
  417470:	jmp    4173e0 <main@@Base+0x2ff0>
  417475:	add    rsp,0x30
  417479:	pop    rbp
  41747a:	ret    
  41747b:	nop    DWORD PTR [rax+rax*1+0x0]
  417480:	push   rbp
  417481:	mov    rbp,rsp
  417484:	sub    rsp,0x70
  417488:	mov    QWORD PTR [rbp-0x8],rdi
  41748c:	mov    QWORD PTR [rbp-0x10],rsi
  417490:	mov    QWORD PTR [rbp-0x18],rdx
  417494:	mov    rdx,QWORD PTR [rbp-0x10]
  417498:	mov    QWORD PTR [rbp-0x28],rdx
  41749c:	mov    rax,QWORD PTR [rbp-0x28]
  4174a0:	shl    rax,0x1
  4174a4:	cmp    rax,QWORD PTR [rbp-0x18]
  4174a8:	ja     417644 <main@@Base+0x3254>
  4174ae:	mov    rax,QWORD PTR [rbp-0x28]
  4174b2:	shl    rax,0x1
  4174b6:	mov    QWORD PTR [rbp-0x20],rax
  4174ba:	mov    rax,QWORD PTR [rbp-0x20]
  4174be:	cmp    rax,QWORD PTR [rbp-0x18]
  4174c2:	jae    417547 <main@@Base+0x3157>
  4174c8:	mov    rdi,QWORD PTR [rbp-0x8]
  4174cc:	mov    rsi,QWORD PTR [rbp-0x20]
  4174d0:	call   408c70 <verify_monster@@Base+0x2060>
  4174d5:	mov    rdi,rax
  4174d8:	call   408050 <verify_monster@@Base+0x1440>
  4174dd:	mov    QWORD PTR [rbp-0x30],rax
  4174e1:	mov    rdi,QWORD PTR [rbp-0x8]
  4174e5:	mov    rax,QWORD PTR [rbp-0x20]
  4174e9:	add    rax,0x1
  4174ed:	mov    rsi,rax
  4174f0:	call   408c70 <verify_monster@@Base+0x2060>
  4174f5:	mov    rdi,rax
  4174f8:	call   408050 <verify_monster@@Base+0x1440>
  4174fd:	mov    QWORD PTR [rbp-0x38],rax
  417501:	mov    rdi,QWORD PTR [rbp-0x30]
  417505:	mov    rsi,QWORD PTR [rbp-0x38]
  417509:	mov    rax,QWORD PTR [rbp-0x38]
  41750d:	mov    QWORD PTR [rbp-0x58],rdi
  417511:	mov    rdi,rax
  417514:	mov    QWORD PTR [rbp-0x60],rsi
  417518:	call   408190 <verify_monster@@Base+0x1580>
  41751d:	mov    rdi,QWORD PTR [rbp-0x58]
  417521:	mov    rsi,QWORD PTR [rbp-0x60]
  417525:	mov    rdx,rax
  417528:	call   417680 <main@@Base+0x3290>
  41752d:	cmp    eax,0x0
  417530:	jge    417542 <main@@Base+0x3152>
  417536:	mov    rax,QWORD PTR [rbp-0x20]
  41753a:	add    rax,0x1
  41753e:	mov    QWORD PTR [rbp-0x20],rax
  417542:	jmp    417547 <main@@Base+0x3157>
  417547:	mov    rdi,QWORD PTR [rbp-0x8]
  41754b:	mov    rsi,QWORD PTR [rbp-0x28]
  41754f:	call   408c70 <verify_monster@@Base+0x2060>
  417554:	mov    rdi,rax
  417557:	call   408050 <verify_monster@@Base+0x1440>
  41755c:	mov    QWORD PTR [rbp-0x40],rax
  417560:	mov    rdi,QWORD PTR [rbp-0x8]
  417564:	mov    rsi,QWORD PTR [rbp-0x20]
  417568:	call   408c70 <verify_monster@@Base+0x2060>
  41756d:	mov    rdi,rax
  417570:	call   408050 <verify_monster@@Base+0x1440>
  417575:	mov    QWORD PTR [rbp-0x30],rax
  417579:	mov    rdi,QWORD PTR [rbp-0x40]
  41757d:	mov    rsi,QWORD PTR [rbp-0x30]
  417581:	mov    rax,QWORD PTR [rbp-0x30]
  417585:	mov    QWORD PTR [rbp-0x68],rdi
  417589:	mov    rdi,rax
  41758c:	mov    QWORD PTR [rbp-0x70],rsi
  417590:	call   408190 <verify_monster@@Base+0x1580>
  417595:	mov    rdi,QWORD PTR [rbp-0x68]
  417599:	mov    rsi,QWORD PTR [rbp-0x70]
  41759d:	mov    rdx,rax
  4175a0:	call   417680 <main@@Base+0x3290>
  4175a5:	cmp    eax,0x0
  4175a8:	jge    41763a <main@@Base+0x324a>
  4175ae:	mov    rax,QWORD PTR [rbp-0x28]
  4175b2:	sub    rax,QWORD PTR [rbp-0x20]
  4175b6:	shl    rax,0x2
  4175ba:	mov    ecx,eax
  4175bc:	mov    DWORD PTR [rbp-0x4c],ecx
  4175bf:	mov    rax,QWORD PTR [rbp-0x8]
  4175c3:	mov    rdx,QWORD PTR [rbp-0x20]
  4175c7:	shl    rdx,0x2
  4175cb:	add    rax,rdx
  4175ce:	mov    rdi,rax
  4175d1:	call   414930 <main@@Base+0x540>
  4175d6:	sub    eax,DWORD PTR [rbp-0x4c]
  4175d9:	mov    DWORD PTR [rbp-0x44],eax
  4175dc:	mov    rdx,QWORD PTR [rbp-0x8]
  4175e0:	mov    rdi,QWORD PTR [rbp-0x28]
  4175e4:	shl    rdi,0x2
  4175e8:	add    rdx,rdi
  4175eb:	mov    rdi,rdx
  4175ee:	call   414930 <main@@Base+0x540>
  4175f3:	add    eax,DWORD PTR [rbp-0x4c]
  4175f6:	mov    DWORD PTR [rbp-0x48],eax
  4175f9:	mov    rdx,QWORD PTR [rbp-0x8]
  4175fd:	mov    rdi,QWORD PTR [rbp-0x28]
  417601:	shl    rdi,0x2
  417605:	add    rdx,rdi
  417608:	mov    esi,DWORD PTR [rbp-0x44]
  41760b:	mov    rdi,rdx
  41760e:	call   417650 <main@@Base+0x3260>
  417613:	mov    rdx,QWORD PTR [rbp-0x8]
  417617:	mov    rdi,QWORD PTR [rbp-0x20]
  41761b:	shl    rdi,0x2
  41761f:	add    rdx,rdi
  417622:	mov    esi,DWORD PTR [rbp-0x48]
  417625:	mov    rdi,rdx
  417628:	call   417650 <main@@Base+0x3260>
  41762d:	mov    rdx,QWORD PTR [rbp-0x20]
  417631:	mov    QWORD PTR [rbp-0x28],rdx
  417635:	jmp    41763f <main@@Base+0x324f>
  41763a:	jmp    417644 <main@@Base+0x3254>
  41763f:	jmp    41749c <main@@Base+0x30ac>
  417644:	add    rsp,0x70
  417648:	pop    rbp
  417649:	ret    
  41764a:	nop    WORD PTR [rax+rax*1+0x0]
  417650:	push   rbp
  417651:	mov    rbp,rsp
  417654:	sub    rsp,0x10
  417658:	mov    QWORD PTR [rbp-0x8],rdi
  41765c:	mov    DWORD PTR [rbp-0xc],esi
  41765f:	mov    edi,DWORD PTR [rbp-0xc]
  417662:	call   417740 <main@@Base+0x3350>
  417667:	mov    rcx,QWORD PTR [rbp-0x8]
  41766b:	mov    DWORD PTR [rcx],eax
  41766d:	add    rsp,0x10
  417671:	pop    rbp
  417672:	ret    
  417673:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41767d:	nop    DWORD PTR [rax]
  417680:	push   rbp
  417681:	mov    rbp,rsp
  417684:	sub    rsp,0x50
  417688:	mov    QWORD PTR [rbp-0x8],rdi
  41768c:	mov    QWORD PTR [rbp-0x10],rsi
  417690:	mov    QWORD PTR [rbp-0x18],rdx
  417694:	mov    rdi,QWORD PTR [rbp-0x8]
  417698:	call   408190 <verify_monster@@Base+0x1580>
  41769d:	mov    QWORD PTR [rbp-0x20],rax
  4176a1:	mov    rdi,QWORD PTR [rbp-0x8]
  4176a5:	mov    rsi,QWORD PTR [rbp-0x10]
  4176a9:	mov    rax,QWORD PTR [rbp-0x20]
  4176ad:	cmp    rax,QWORD PTR [rbp-0x18]
  4176b1:	mov    QWORD PTR [rbp-0x30],rdi
  4176b5:	mov    QWORD PTR [rbp-0x38],rsi
  4176b9:	jae    4176cc <main@@Base+0x32dc>
  4176bf:	mov    rax,QWORD PTR [rbp-0x20]
  4176c3:	mov    QWORD PTR [rbp-0x40],rax
  4176c7:	jmp    4176d4 <main@@Base+0x32e4>
  4176cc:	mov    rax,QWORD PTR [rbp-0x18]
  4176d0:	mov    QWORD PTR [rbp-0x40],rax
  4176d4:	mov    rax,QWORD PTR [rbp-0x40]
  4176d8:	mov    rdi,QWORD PTR [rbp-0x30]
  4176dc:	mov    rsi,QWORD PTR [rbp-0x38]
  4176e0:	mov    rdx,rax
  4176e3:	call   404050 <strncmp@plt>
  4176e8:	mov    DWORD PTR [rbp-0x24],eax
  4176eb:	cmp    DWORD PTR [rbp-0x24],0x0
  4176ef:	je     417700 <main@@Base+0x3310>
  4176f5:	mov    eax,DWORD PTR [rbp-0x24]
  4176f8:	mov    DWORD PTR [rbp-0x44],eax
  4176fb:	jmp    417735 <main@@Base+0x3345>
  417700:	mov    rax,QWORD PTR [rbp-0x20]
  417704:	cmp    rax,QWORD PTR [rbp-0x18]
  417708:	jae    41771b <main@@Base+0x332b>
  41770e:	mov    eax,0xffffffff
  417713:	mov    DWORD PTR [rbp-0x48],eax
  417716:	jmp    41772f <main@@Base+0x333f>
  41771b:	mov    rax,QWORD PTR [rbp-0x20]
  41771f:	cmp    rax,QWORD PTR [rbp-0x18]
  417723:	seta   cl
  417726:	and    cl,0x1
  417729:	movzx  edx,cl
  41772c:	mov    DWORD PTR [rbp-0x48],edx
  41772f:	mov    eax,DWORD PTR [rbp-0x48]
  417732:	mov    DWORD PTR [rbp-0x44],eax
  417735:	mov    eax,DWORD PTR [rbp-0x44]
  417738:	add    rsp,0x50
  41773c:	pop    rbp
  41773d:	ret    
  41773e:	xchg   ax,ax
  417740:	push   rbp
  417741:	mov    rbp,rsp
  417744:	mov    DWORD PTR [rbp-0x4],edi
  417747:	mov    eax,DWORD PTR [rbp-0x4]
  41774a:	pop    rbp
  41774b:	ret    
  41774c:	nop    DWORD PTR [rax+0x0]
  417750:	push   rbp
  417751:	mov    rbp,rsp
  417754:	sub    rsp,0x20
  417758:	mov    QWORD PTR [rbp-0x8],rdi
  41775c:	mov    QWORD PTR [rbp-0x10],rsi
  417760:	mov    QWORD PTR [rbp-0x18],rdx
  417764:	mov    rdi,QWORD PTR [rbp-0x8]
  417768:	mov    rsi,QWORD PTR [rbp-0x10]
  41776c:	call   4040d0 <strcmp@plt>
  417771:	add    rsp,0x20
  417775:	pop    rbp
  417776:	ret    
  417777:	nop    WORD PTR [rax+rax*1+0x0]
  417780:	push   rbp
  417781:	mov    rbp,rsp
  417784:	sub    rsp,0x40
  417788:	mov    QWORD PTR [rbp-0x10],rdi
  41778c:	mov    QWORD PTR [rbp-0x18],rsi
  417790:	mov    DWORD PTR [rbp-0x1c],edx
  417793:	mov    QWORD PTR [rbp-0x30],0x0
  41779b:	mov    rax,QWORD PTR [rbp-0x30]
  41779f:	mov    rdi,QWORD PTR [rbp-0x10]
  4177a3:	mov    QWORD PTR [rbp-0x38],rax
  4177a7:	call   408c20 <verify_monster@@Base+0x2010>
  4177ac:	mov    rdi,QWORD PTR [rbp-0x38]
  4177b0:	cmp    rdi,rax
  4177b3:	jae    41780f <main@@Base+0x341f>
  4177b9:	mov    rdi,QWORD PTR [rbp-0x10]
  4177bd:	mov    rsi,QWORD PTR [rbp-0x30]
  4177c1:	call   408c70 <verify_monster@@Base+0x2060>
  4177c6:	mov    rdi,rax
  4177c9:	call   408050 <verify_monster@@Base+0x1440>
  4177ce:	mov    QWORD PTR [rbp-0x28],rax
  4177d2:	mov    rdi,QWORD PTR [rbp-0x28]
  4177d6:	mov    rsi,QWORD PTR [rbp-0x18]
  4177da:	movsxd rdx,DWORD PTR [rbp-0x1c]
  4177de:	call   417680 <main@@Base+0x3290>
  4177e3:	cmp    eax,0x0
  4177e6:	jne    4177f9 <main@@Base+0x3409>
  4177ec:	mov    rax,QWORD PTR [rbp-0x30]
  4177f0:	mov    QWORD PTR [rbp-0x8],rax
  4177f4:	jmp    41781a <main@@Base+0x342a>
  4177f9:	jmp    4177fe <main@@Base+0x340e>
  4177fe:	mov    rax,QWORD PTR [rbp-0x30]
  417802:	add    rax,0x1
  417806:	mov    QWORD PTR [rbp-0x30],rax
  41780a:	jmp    41779b <main@@Base+0x33ab>
  41780f:	mov    rax,QWORD PTR [rip+0x1a892]        # 4320a8 <__data_start@@Base+0x10>
  417816:	mov    QWORD PTR [rbp-0x8],rax
  41781a:	mov    rax,QWORD PTR [rbp-0x8]
  41781e:	add    rsp,0x40
  417822:	pop    rbp
  417823:	ret    
  417824:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41782e:	xchg   ax,ax
  417830:	push   rbp
  417831:	mov    rbp,rsp
  417834:	sub    rsp,0x30
  417838:	mov    QWORD PTR [rbp-0x8],rdi
  41783c:	mov    rdi,QWORD PTR [rbp-0x8]
  417840:	call   4085d0 <verify_monster@@Base+0x19c0>
  417845:	mov    QWORD PTR [rbp-0x20],rax
  417849:	cmp    QWORD PTR [rbp-0x20],0x0
  41784e:	jne    417859 <main@@Base+0x3469>
  417854:	jmp    4178fa <main@@Base+0x350a>
  417859:	mov    rax,QWORD PTR [rbp-0x20]
  41785d:	sub    rax,0x1
  417861:	mov    QWORD PTR [rbp-0x18],rax
  417865:	mov    rax,QWORD PTR [rbp-0x20]
  417869:	shr    rax,0x1
  41786d:	mov    QWORD PTR [rbp-0x10],rax
  417871:	mov    rdi,QWORD PTR [rbp-0x8]
  417875:	mov    rsi,QWORD PTR [rbp-0x10]
  417879:	mov    rdx,QWORD PTR [rbp-0x18]
  41787d:	call   417900 <main@@Base+0x3510>
  417882:	mov    rax,QWORD PTR [rbp-0x10]
  417886:	mov    rcx,rax
  417889:	add    rcx,0xffffffffffffffff
  41788d:	mov    QWORD PTR [rbp-0x10],rcx
  417891:	cmp    rax,0x0
  417895:	jne    417871 <main@@Base+0x3481>
  41789b:	jmp    4178a0 <main@@Base+0x34b0>
  4178a0:	cmp    QWORD PTR [rbp-0x18],0x0
  4178a5:	jbe    4178fa <main@@Base+0x350a>
  4178ab:	xor    eax,eax
  4178ad:	mov    esi,eax
  4178af:	mov    rcx,QWORD PTR [rbp-0x8]
  4178b3:	mov    rdx,QWORD PTR [rbp-0x18]
  4178b7:	mov    dil,BYTE PTR [rcx+rdx*1]
  4178bb:	mov    BYTE PTR [rbp-0x21],dil
  4178bf:	mov    rcx,QWORD PTR [rbp-0x8]
  4178c3:	mov    dil,BYTE PTR [rcx]
  4178c6:	mov    rcx,QWORD PTR [rbp-0x8]
  4178ca:	mov    rdx,QWORD PTR [rbp-0x18]
  4178ce:	mov    BYTE PTR [rcx+rdx*1],dil
  4178d2:	mov    dil,BYTE PTR [rbp-0x21]
  4178d6:	mov    rcx,QWORD PTR [rbp-0x8]
  4178da:	mov    BYTE PTR [rcx],dil
  4178dd:	mov    rdi,QWORD PTR [rbp-0x8]
  4178e1:	mov    rcx,QWORD PTR [rbp-0x18]
  4178e5:	add    rcx,0xffffffffffffffff
  4178e9:	mov    QWORD PTR [rbp-0x18],rcx
  4178ed:	mov    rdx,rcx
  4178f0:	call   417900 <main@@Base+0x3510>
  4178f5:	jmp    4178a0 <main@@Base+0x34b0>
  4178fa:	add    rsp,0x30
  4178fe:	pop    rbp
  4178ff:	ret    
  417900:	push   rbp
  417901:	mov    rbp,rsp
  417904:	sub    rsp,0x40
  417908:	mov    QWORD PTR [rbp-0x8],rdi
  41790c:	mov    QWORD PTR [rbp-0x10],rsi
  417910:	mov    QWORD PTR [rbp-0x18],rdx
  417914:	mov    rdx,QWORD PTR [rbp-0x10]
  417918:	mov    QWORD PTR [rbp-0x28],rdx
  41791c:	mov    rax,QWORD PTR [rbp-0x28]
  417920:	shl    rax,0x1
  417924:	cmp    rax,QWORD PTR [rbp-0x18]
  417928:	ja     417a64 <main@@Base+0x3674>
  41792e:	mov    rax,QWORD PTR [rbp-0x28]
  417932:	shl    rax,0x1
  417936:	mov    QWORD PTR [rbp-0x20],rax
  41793a:	mov    rax,QWORD PTR [rbp-0x20]
  41793e:	cmp    rax,QWORD PTR [rbp-0x18]
  417942:	jae    4179bc <main@@Base+0x35cc>
  417948:	mov    rdi,QWORD PTR [rbp-0x8]
  41794c:	mov    rsi,QWORD PTR [rbp-0x20]
  417950:	call   4085f0 <verify_monster@@Base+0x19e0>
  417955:	mov    BYTE PTR [rbp-0x29],al
  417958:	mov    rdi,QWORD PTR [rbp-0x8]
  41795c:	mov    rsi,QWORD PTR [rbp-0x20]
  417960:	add    rsi,0x1
  417964:	call   4085f0 <verify_monster@@Base+0x19e0>
  417969:	mov    BYTE PTR [rbp-0x2a],al
  41796c:	movzx  ecx,BYTE PTR [rbp-0x29]
  417970:	movzx  edx,BYTE PTR [rbp-0x2a]
  417974:	cmp    ecx,edx
  417976:	jge    417989 <main@@Base+0x3599>
  41797c:	mov    eax,0xffffffff
  417981:	mov    DWORD PTR [rbp-0x30],eax
  417984:	jmp    41799f <main@@Base+0x35af>
  417989:	movzx  eax,BYTE PTR [rbp-0x29]
  41798d:	movzx  ecx,BYTE PTR [rbp-0x2a]
  417991:	cmp    eax,ecx
  417993:	setg   dl
  417996:	and    dl,0x1
  417999:	movzx  eax,dl
  41799c:	mov    DWORD PTR [rbp-0x30],eax
  41799f:	mov    eax,DWORD PTR [rbp-0x30]
  4179a2:	cmp    eax,0x0
  4179a5:	jge    4179b7 <main@@Base+0x35c7>
  4179ab:	mov    rax,QWORD PTR [rbp-0x20]
  4179af:	add    rax,0x1
  4179b3:	mov    QWORD PTR [rbp-0x20],rax
  4179b7:	jmp    4179bc <main@@Base+0x35cc>
  4179bc:	mov    rdi,QWORD PTR [rbp-0x8]
  4179c0:	mov    rsi,QWORD PTR [rbp-0x28]
  4179c4:	call   4085f0 <verify_monster@@Base+0x19e0>
  4179c9:	mov    BYTE PTR [rbp-0x2b],al
  4179cc:	mov    rdi,QWORD PTR [rbp-0x8]
  4179d0:	mov    rsi,QWORD PTR [rbp-0x20]
  4179d4:	call   4085f0 <verify_monster@@Base+0x19e0>
  4179d9:	mov    BYTE PTR [rbp-0x29],al
  4179dc:	movzx  ecx,BYTE PTR [rbp-0x2b]
  4179e0:	movzx  edx,BYTE PTR [rbp-0x29]
  4179e4:	cmp    ecx,edx
  4179e6:	jge    4179f9 <main@@Base+0x3609>
  4179ec:	mov    eax,0xffffffff
  4179f1:	mov    DWORD PTR [rbp-0x34],eax
  4179f4:	jmp    417a0f <main@@Base+0x361f>
  4179f9:	movzx  eax,BYTE PTR [rbp-0x2b]
  4179fd:	movzx  ecx,BYTE PTR [rbp-0x29]
  417a01:	cmp    eax,ecx
  417a03:	setg   dl
  417a06:	and    dl,0x1
  417a09:	movzx  eax,dl
  417a0c:	mov    DWORD PTR [rbp-0x34],eax
  417a0f:	mov    eax,DWORD PTR [rbp-0x34]
  417a12:	cmp    eax,0x0
  417a15:	jge    417a5a <main@@Base+0x366a>
  417a1b:	mov    rax,QWORD PTR [rbp-0x8]
  417a1f:	mov    rcx,QWORD PTR [rbp-0x20]
  417a23:	mov    dl,BYTE PTR [rax+rcx*1]
  417a26:	mov    BYTE PTR [rbp-0x2c],dl
  417a29:	mov    rax,QWORD PTR [rbp-0x8]
  417a2d:	mov    rcx,QWORD PTR [rbp-0x28]
  417a31:	mov    dl,BYTE PTR [rax+rcx*1]
  417a34:	mov    rax,QWORD PTR [rbp-0x8]
  417a38:	mov    rcx,QWORD PTR [rbp-0x20]
  417a3c:	mov    BYTE PTR [rax+rcx*1],dl
  417a3f:	mov    dl,BYTE PTR [rbp-0x2c]
  417a42:	mov    rax,QWORD PTR [rbp-0x8]
  417a46:	mov    rcx,QWORD PTR [rbp-0x28]
  417a4a:	mov    BYTE PTR [rax+rcx*1],dl
  417a4d:	mov    rax,QWORD PTR [rbp-0x20]
  417a51:	mov    QWORD PTR [rbp-0x28],rax
  417a55:	jmp    417a5f <main@@Base+0x366f>
  417a5a:	jmp    417a64 <main@@Base+0x3674>
  417a5f:	jmp    41791c <main@@Base+0x352c>
  417a64:	add    rsp,0x40
  417a68:	pop    rbp
  417a69:	ret    
  417a6a:	nop    WORD PTR [rax+rax*1+0x0]
  417a70:	push   rbp
  417a71:	mov    rbp,rsp
  417a74:	sub    rsp,0x20
  417a78:	mov    eax,0x1
  417a7d:	mov    ecx,eax
  417a7f:	mov    eax,0xffffffff
  417a84:	mov    r9d,eax
  417a87:	mov    QWORD PTR [rbp-0x8],rdi
  417a8b:	mov    QWORD PTR [rbp-0x10],rsi
  417a8f:	mov    QWORD PTR [rbp-0x18],rdx
  417a93:	mov    rdi,QWORD PTR [rbp-0x8]
  417a97:	mov    rsi,QWORD PTR [rbp-0x10]
  417a9b:	mov    rdx,QWORD PTR [rbp-0x18]
  417a9f:	mov    r8d,0x1
  417aa5:	call   41ccb0 <flatcc_builder_create_vector@@Base>
  417aaa:	add    rsp,0x20
  417aae:	pop    rbp
  417aaf:	ret    
  417ab0:	push   rbp
  417ab1:	mov    rbp,rsp
  417ab4:	sub    rsp,0x20
  417ab8:	mov    QWORD PTR [rbp-0x8],rdi
  417abc:	mov    QWORD PTR [rbp-0x10],rsi
  417ac0:	mov    rdi,QWORD PTR [rbp-0x8]
  417ac4:	mov    rsi,QWORD PTR [rbp-0x10]
  417ac8:	mov    rax,QWORD PTR [rbp-0x10]
  417acc:	mov    QWORD PTR [rbp-0x18],rdi
  417ad0:	mov    rdi,rax
  417ad3:	mov    QWORD PTR [rbp-0x20],rsi
  417ad7:	call   408190 <verify_monster@@Base+0x1580>
  417adc:	mov    rdi,QWORD PTR [rbp-0x18]
  417ae0:	mov    rsi,QWORD PTR [rbp-0x20]
  417ae4:	mov    rdx,rax
  417ae7:	call   41e090 <flatcc_builder_create_string@@Base>
  417aec:	add    rsp,0x20
  417af0:	pop    rbp
  417af1:	ret    
  417af2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417afc:	nop    DWORD PTR [rax+0x0]
  417b00:	push   rbp
  417b01:	mov    rbp,rsp
  417b04:	sub    rsp,0x20
  417b08:	mov    QWORD PTR [rbp-0x8],rdi
  417b0c:	mov    DWORD PTR [rbp-0xc],esi
  417b0f:	cmp    DWORD PTR [rbp-0xc],0x0
  417b13:	je     417b2e <main@@Base+0x373e>
  417b19:	mov    rdi,QWORD PTR [rbp-0x8]
  417b1d:	mov    esi,DWORD PTR [rbp-0xc]
  417b20:	call   41b2d0 <flatcc_builder_offset_vector_push@@Base>
  417b25:	mov    QWORD PTR [rbp-0x18],rax
  417b29:	jmp    417b3b <main@@Base+0x374b>
  417b2e:	xor    eax,eax
  417b30:	mov    ecx,eax
  417b32:	mov    QWORD PTR [rbp-0x18],rcx
  417b36:	jmp    417b3b <main@@Base+0x374b>
  417b3b:	mov    rax,QWORD PTR [rbp-0x18]
  417b3f:	add    rsp,0x20
  417b43:	pop    rbp
  417b44:	ret    
  417b45:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417b4f:	nop
  417b50:	push   rbp
  417b51:	mov    rbp,rsp
  417b54:	sub    rsp,0x30
  417b58:	mov    QWORD PTR [rbp-0x8],rdi
  417b5c:	mov    QWORD PTR [rbp-0x10],rsi
  417b60:	mov    QWORD PTR [rbp-0x18],rdx
  417b64:	mov    QWORD PTR [rbp-0x20],rcx
  417b68:	mov    rdi,QWORD PTR [rbp-0x10]
  417b6c:	call   408190 <verify_monster@@Base+0x1580>
  417b71:	mov    QWORD PTR [rbp-0x28],rax
  417b75:	mov    rax,QWORD PTR [rbp-0x18]
  417b79:	cmp    rax,QWORD PTR [rbp-0x28]
  417b7d:	jb     417b8b <main@@Base+0x379b>
  417b83:	mov    rax,QWORD PTR [rbp-0x28]
  417b87:	mov    QWORD PTR [rbp-0x18],rax
  417b8b:	mov    rax,QWORD PTR [rbp-0x18]
  417b8f:	mov    rcx,QWORD PTR [rbp-0x28]
  417b93:	sub    rcx,rax
  417b96:	mov    QWORD PTR [rbp-0x28],rcx
  417b9a:	mov    rax,QWORD PTR [rbp-0x20]
  417b9e:	cmp    rax,QWORD PTR [rbp-0x28]
  417ba2:	jbe    417bb0 <main@@Base+0x37c0>
  417ba8:	mov    rax,QWORD PTR [rbp-0x28]
  417bac:	mov    QWORD PTR [rbp-0x20],rax
  417bb0:	mov    rdi,QWORD PTR [rbp-0x8]
  417bb4:	mov    rax,QWORD PTR [rbp-0x10]
  417bb8:	add    rax,QWORD PTR [rbp-0x18]
  417bbc:	mov    rdx,QWORD PTR [rbp-0x20]
  417bc0:	mov    rsi,rax
  417bc3:	call   41e090 <flatcc_builder_create_string@@Base>
  417bc8:	add    rsp,0x30
  417bcc:	pop    rbp
  417bcd:	ret    
  417bce:	xchg   ax,ax
  417bd0:	push   rbp
  417bd1:	mov    rbp,rsp
  417bd4:	sub    rsp,0x20
  417bd8:	mov    QWORD PTR [rbp-0x8],rdi
  417bdc:	mov    QWORD PTR [rbp-0x10],rsi
  417be0:	mov    rdi,QWORD PTR [rbp-0x8]
  417be4:	mov    rsi,QWORD PTR [rbp-0x10]
  417be8:	mov    rax,QWORD PTR [rbp-0x10]
  417bec:	mov    QWORD PTR [rbp-0x18],rdi
  417bf0:	mov    rdi,rax
  417bf3:	mov    QWORD PTR [rbp-0x20],rsi
  417bf7:	call   409140 <verify_monster@@Base+0x2530>
  417bfc:	mov    ecx,0x1
  417c01:	mov    edx,0xffffffff
  417c06:	mov    r9d,edx
  417c09:	mov    rdi,QWORD PTR [rbp-0x18]
  417c0d:	mov    rsi,QWORD PTR [rbp-0x20]
  417c11:	mov    rdx,rax
  417c14:	mov    r8d,0x1
  417c1a:	call   41ccb0 <flatcc_builder_create_vector@@Base>
  417c1f:	add    rsp,0x20
  417c23:	pop    rbp
  417c24:	ret    
  417c25:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417c2f:	nop
  417c30:	push   rbp
  417c31:	mov    rbp,rsp
  417c34:	sub    rsp,0x30
  417c38:	mov    QWORD PTR [rbp-0x8],rdi
  417c3c:	mov    QWORD PTR [rbp-0x10],rsi
  417c40:	mov    QWORD PTR [rbp-0x18],rdx
  417c44:	mov    QWORD PTR [rbp-0x20],rcx
  417c48:	mov    rdi,QWORD PTR [rbp-0x10]
  417c4c:	call   408990 <verify_monster@@Base+0x1d80>
  417c51:	mov    QWORD PTR [rbp-0x28],rax
  417c55:	mov    rax,QWORD PTR [rbp-0x18]
  417c59:	cmp    rax,QWORD PTR [rbp-0x28]
  417c5d:	jb     417c6b <main@@Base+0x387b>
  417c63:	mov    rax,QWORD PTR [rbp-0x28]
  417c67:	mov    QWORD PTR [rbp-0x18],rax
  417c6b:	mov    rax,QWORD PTR [rbp-0x18]
  417c6f:	mov    rcx,QWORD PTR [rbp-0x28]
  417c73:	sub    rcx,rax
  417c76:	mov    QWORD PTR [rbp-0x28],rcx
  417c7a:	mov    rax,QWORD PTR [rbp-0x20]
  417c7e:	cmp    rax,QWORD PTR [rbp-0x28]
  417c82:	jbe    417c90 <main@@Base+0x38a0>
  417c88:	mov    rax,QWORD PTR [rbp-0x28]
  417c8c:	mov    QWORD PTR [rbp-0x20],rax
  417c90:	mov    rdi,QWORD PTR [rbp-0x8]
  417c94:	mov    rax,QWORD PTR [rbp-0x10]
  417c98:	mov    rsi,QWORD PTR [rbp-0x18]
  417c9c:	mov    QWORD PTR [rbp-0x30],rdi
  417ca0:	mov    rdi,rax
  417ca3:	call   417ce0 <main@@Base+0x38f0>
  417ca8:	mov    ecx,0x4
  417cad:	mov    edx,0x3fffffff
  417cb2:	mov    r9d,edx
  417cb5:	mov    rdx,QWORD PTR [rbp-0x20]
  417cb9:	mov    rdi,QWORD PTR [rbp-0x30]
  417cbd:	mov    rsi,rax
  417cc0:	mov    r8d,0x2
  417cc6:	call   41ccb0 <flatcc_builder_create_vector@@Base>
  417ccb:	add    rsp,0x30
  417ccf:	pop    rbp
  417cd0:	ret    
  417cd1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417cdb:	nop    DWORD PTR [rax+rax*1+0x0]
  417ce0:	push   rbp
  417ce1:	mov    rbp,rsp
  417ce4:	mov    QWORD PTR [rbp-0x8],rdi
  417ce8:	mov    QWORD PTR [rbp-0x10],rsi
  417cec:	mov    rsi,QWORD PTR [rbp-0x8]
  417cf0:	mov    rdi,QWORD PTR [rbp-0x10]
  417cf4:	shl    rdi,0x2
  417cf8:	add    rsi,rdi
  417cfb:	mov    rax,rsi
  417cfe:	pop    rbp
  417cff:	ret    
  417d00:	push   rbp
  417d01:	mov    rbp,rsp
  417d04:	sub    rsp,0x30
  417d08:	mov    QWORD PTR [rbp-0x8],rdi
  417d0c:	mov    QWORD PTR [rbp-0x10],rsi
  417d10:	mov    QWORD PTR [rbp-0x18],rdx
  417d14:	mov    QWORD PTR [rbp-0x20],rcx
  417d18:	mov    rdi,QWORD PTR [rbp-0x10]
  417d1c:	call   409140 <verify_monster@@Base+0x2530>
  417d21:	mov    QWORD PTR [rbp-0x28],rax
  417d25:	mov    rax,QWORD PTR [rbp-0x18]
  417d29:	cmp    rax,QWORD PTR [rbp-0x28]
  417d2d:	jb     417d3b <main@@Base+0x394b>
  417d33:	mov    rax,QWORD PTR [rbp-0x28]
  417d37:	mov    QWORD PTR [rbp-0x18],rax
  417d3b:	mov    rax,QWORD PTR [rbp-0x18]
  417d3f:	mov    rcx,QWORD PTR [rbp-0x28]
  417d43:	sub    rcx,rax
  417d46:	mov    QWORD PTR [rbp-0x28],rcx
  417d4a:	mov    rax,QWORD PTR [rbp-0x20]
  417d4e:	cmp    rax,QWORD PTR [rbp-0x28]
  417d52:	jbe    417d60 <main@@Base+0x3970>
  417d58:	mov    rax,QWORD PTR [rbp-0x28]
  417d5c:	mov    QWORD PTR [rbp-0x20],rax
  417d60:	mov    rdi,QWORD PTR [rbp-0x8]
  417d64:	mov    rax,QWORD PTR [rbp-0x10]
  417d68:	mov    rsi,QWORD PTR [rbp-0x18]
  417d6c:	mov    QWORD PTR [rbp-0x30],rdi
  417d70:	mov    rdi,rax
  417d73:	call   417db0 <main@@Base+0x39c0>
  417d78:	mov    ecx,0x1
  417d7d:	mov    edx,0xffffffff
  417d82:	mov    r9d,edx
  417d85:	mov    rdx,QWORD PTR [rbp-0x20]
  417d89:	mov    rdi,QWORD PTR [rbp-0x30]
  417d8d:	mov    rsi,rax
  417d90:	mov    r8d,0x1
  417d96:	call   41ccb0 <flatcc_builder_create_vector@@Base>
  417d9b:	add    rsp,0x30
  417d9f:	pop    rbp
  417da0:	ret    
  417da1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417dab:	nop    DWORD PTR [rax+rax*1+0x0]
  417db0:	push   rbp
  417db1:	mov    rbp,rsp
  417db4:	mov    QWORD PTR [rbp-0x8],rdi
  417db8:	mov    QWORD PTR [rbp-0x10],rsi
  417dbc:	mov    rsi,QWORD PTR [rbp-0x8]
  417dc0:	add    rsi,QWORD PTR [rbp-0x10]
  417dc4:	mov    rax,rsi
  417dc7:	pop    rbp
  417dc8:	ret    
  417dc9:	nop    DWORD PTR [rax+0x0]
  417dd0:	push   rbp
  417dd1:	mov    rbp,rsp
  417dd4:	sub    rsp,0x20
  417dd8:	mov    QWORD PTR [rbp-0x8],rdi
  417ddc:	mov    QWORD PTR [rbp-0x10],rsi
  417de0:	mov    rdi,QWORD PTR [rbp-0x8]
  417de4:	mov    rsi,QWORD PTR [rbp-0x10]
  417de8:	mov    rax,QWORD PTR [rbp-0x10]
  417dec:	mov    QWORD PTR [rbp-0x18],rdi
  417df0:	mov    rdi,rax
  417df3:	mov    QWORD PTR [rbp-0x20],rsi
  417df7:	call   408990 <verify_monster@@Base+0x1d80>
  417dfc:	mov    ecx,0x4
  417e01:	mov    edx,0x3fffffff
  417e06:	mov    r9d,edx
  417e09:	mov    rdi,QWORD PTR [rbp-0x18]
  417e0d:	mov    rsi,QWORD PTR [rbp-0x20]
  417e11:	mov    rdx,rax
  417e14:	mov    r8d,0x2
  417e1a:	call   41ccb0 <flatcc_builder_create_vector@@Base>
  417e1f:	add    rsp,0x20
  417e23:	pop    rbp
  417e24:	ret    
  417e25:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417e2f:	nop
  417e30:	push   rbp
  417e31:	mov    rbp,rsp
  417e34:	sub    rsp,0x30
  417e38:	mov    ax,cx
  417e3b:	mov    QWORD PTR [rbp-0x10],rdi
  417e3f:	mov    DWORD PTR [rbp-0x14],esi
  417e42:	mov    QWORD PTR [rbp-0x20],rdx
  417e46:	mov    WORD PTR [rbp-0x22],ax
  417e4a:	mov    rdi,QWORD PTR [rbp-0x10]
  417e4e:	call   417290 <main@@Base+0x2ea0>
  417e53:	cmp    eax,0x0
  417e56:	jne    417e9d <main@@Base+0x3aad>
  417e5c:	mov    rdi,QWORD PTR [rbp-0x10]
  417e60:	mov    rsi,QWORD PTR [rbp-0x20]
  417e64:	call   417ec0 <main@@Base+0x3ad0>
  417e69:	cmp    eax,0x0
  417e6c:	jne    417e9d <main@@Base+0x3aad>
  417e72:	mov    rdi,QWORD PTR [rbp-0x10]
  417e76:	mov    esi,DWORD PTR [rbp-0x14]
  417e79:	call   417f40 <main@@Base+0x3b50>
  417e7e:	cmp    eax,0x0
  417e81:	jne    417e9d <main@@Base+0x3aad>
  417e87:	mov    rdi,QWORD PTR [rbp-0x10]
  417e8b:	movzx  esi,WORD PTR [rbp-0x22]
  417e8f:	call   417fa0 <main@@Base+0x3bb0>
  417e94:	cmp    eax,0x0
  417e97:	je     417ea9 <main@@Base+0x3ab9>
  417e9d:	mov    DWORD PTR [rbp-0x4],0x0
  417ea4:	jmp    417eb5 <main@@Base+0x3ac5>
  417ea9:	mov    rdi,QWORD PTR [rbp-0x10]
  417ead:	call   417310 <main@@Base+0x2f20>
  417eb2:	mov    DWORD PTR [rbp-0x4],eax
  417eb5:	mov    eax,DWORD PTR [rbp-0x4]
  417eb8:	add    rsp,0x30
  417ebc:	pop    rbp
  417ebd:	ret    
  417ebe:	xchg   ax,ax
  417ec0:	push   rbp
  417ec1:	mov    rbp,rsp
  417ec4:	sub    rsp,0x30
  417ec8:	mov    QWORD PTR [rbp-0x10],rdi
  417ecc:	mov    QWORD PTR [rbp-0x18],rsi
  417ed0:	cmp    QWORD PTR [rbp-0x18],0x0
  417ed5:	jne    417ee7 <main@@Base+0x3af7>
  417edb:	mov    DWORD PTR [rbp-0x4],0x0
  417ee2:	jmp    417f33 <main@@Base+0x3b43>
  417ee7:	mov    eax,0x8
  417eec:	mov    edx,eax
  417eee:	mov    rdi,QWORD PTR [rbp-0x10]
  417ef2:	mov    esi,0x1
  417ef7:	mov    ecx,0x8
  417efc:	call   41d6d0 <flatcc_builder_table_add@@Base>
  417f01:	mov    QWORD PTR [rbp-0x20],rax
  417f05:	cmp    rax,0x0
  417f09:	jne    417f1b <main@@Base+0x3b2b>
  417f0f:	mov    DWORD PTR [rbp-0x4],0xffffffff
  417f16:	jmp    417f33 <main@@Base+0x3b43>
  417f1b:	mov    rdi,QWORD PTR [rbp-0x20]
  417f1f:	mov    rsi,QWORD PTR [rbp-0x18]
  417f23:	call   415230 <main@@Base+0xe40>
  417f28:	mov    DWORD PTR [rbp-0x4],0x0
  417f2f:	mov    QWORD PTR [rbp-0x28],rax
  417f33:	mov    eax,DWORD PTR [rbp-0x4]
  417f36:	add    rsp,0x30
  417f3a:	pop    rbp
  417f3b:	ret    
  417f3c:	nop    DWORD PTR [rax+0x0]
  417f40:	push   rbp
  417f41:	mov    rbp,rsp
  417f44:	sub    rsp,0x20
  417f48:	mov    QWORD PTR [rbp-0x8],rdi
  417f4c:	mov    DWORD PTR [rbp-0xc],esi
  417f4f:	cmp    DWORD PTR [rbp-0xc],0x0
  417f53:	je     417f85 <main@@Base+0x3b95>
  417f59:	xor    esi,esi
  417f5b:	mov    rdi,QWORD PTR [rbp-0x8]
  417f5f:	call   41d5d0 <flatcc_builder_table_add_offset@@Base>
  417f64:	mov    QWORD PTR [rbp-0x18],rax
  417f68:	cmp    rax,0x0
  417f6c:	je     417f85 <main@@Base+0x3b95>
  417f72:	xor    eax,eax
  417f74:	mov    ecx,DWORD PTR [rbp-0xc]
  417f77:	mov    rdx,QWORD PTR [rbp-0x18]
  417f7b:	mov    DWORD PTR [rdx],ecx
  417f7d:	mov    DWORD PTR [rbp-0x1c],eax
  417f80:	jmp    417f92 <main@@Base+0x3ba2>
  417f85:	mov    eax,0xffffffff
  417f8a:	mov    DWORD PTR [rbp-0x1c],eax
  417f8d:	jmp    417f92 <main@@Base+0x3ba2>
  417f92:	mov    eax,DWORD PTR [rbp-0x1c]
  417f95:	add    rsp,0x20
  417f99:	pop    rbp
  417f9a:	ret    
  417f9b:	nop    DWORD PTR [rax+rax*1+0x0]
  417fa0:	push   rbp
  417fa1:	mov    rbp,rsp
  417fa4:	sub    rsp,0x30
  417fa8:	mov    ax,si
  417fab:	mov    QWORD PTR [rbp-0x10],rdi
  417faf:	mov    WORD PTR [rbp-0x12],ax
  417fb3:	movzx  esi,WORD PTR [rbp-0x12]
  417fb7:	cmp    esi,0x0
  417fba:	jne    417fcc <main@@Base+0x3bdc>
  417fc0:	mov    DWORD PTR [rbp-0x4],0x0
  417fc7:	jmp    418017 <main@@Base+0x3c27>
  417fcc:	mov    eax,0x2
  417fd1:	mov    edx,eax
  417fd3:	mov    rdi,QWORD PTR [rbp-0x10]
  417fd7:	mov    eax,0x2
  417fdc:	mov    esi,eax
  417fde:	mov    ecx,eax
  417fe0:	call   41d6d0 <flatcc_builder_table_add@@Base>
  417fe5:	mov    QWORD PTR [rbp-0x20],rax
  417fe9:	cmp    rax,0x0
  417fed:	jne    417fff <main@@Base+0x3c0f>
  417ff3:	mov    DWORD PTR [rbp-0x4],0xffffffff
  417ffa:	jmp    418017 <main@@Base+0x3c27>
  417fff:	mov    rdi,QWORD PTR [rbp-0x20]
  418003:	movzx  esi,WORD PTR [rbp-0x12]
  418007:	call   415430 <main@@Base+0x1040>
  41800c:	mov    DWORD PTR [rbp-0x4],0x0
  418013:	mov    QWORD PTR [rbp-0x28],rax
  418017:	mov    eax,DWORD PTR [rbp-0x4]
  41801a:	add    rsp,0x30
  41801e:	pop    rbp
  41801f:	ret    
  418020:	push   rbp
  418021:	mov    rbp,rsp
  418024:	sub    rsp,0x10
  418028:	mov    QWORD PTR [rbp-0x8],rdi
  41802c:	mov    rdi,QWORD PTR [rbp-0x8]
  418030:	mov    esi,0x4
  418035:	call   41be00 <flatcc_builder_start_table@@Base>
  41803a:	add    rsp,0x10
  41803e:	pop    rbp
  41803f:	ret    
  418040:	push   rbp
  418041:	mov    rbp,rsp
  418044:	sub    rsp,0x30
  418048:	mov    al,sil
  41804b:	mov    QWORD PTR [rbp-0x10],rdi
  41804f:	mov    BYTE PTR [rbp-0x11],al
  418052:	movsx  esi,BYTE PTR [rbp-0x11]
  418056:	cmp    esi,0x2
  418059:	jne    41806b <main@@Base+0x3c7b>
  41805f:	mov    DWORD PTR [rbp-0x4],0x0
  418066:	jmp    4180b4 <main@@Base+0x3cc4>
  41806b:	xor    esi,esi
  41806d:	mov    eax,0x1
  418072:	mov    edx,eax
  418074:	mov    rdi,QWORD PTR [rbp-0x10]
  418078:	mov    ecx,0x1
  41807d:	call   41d6d0 <flatcc_builder_table_add@@Base>
  418082:	mov    QWORD PTR [rbp-0x20],rax
  418086:	cmp    rax,0x0
  41808a:	jne    41809c <main@@Base+0x3cac>
  418090:	mov    DWORD PTR [rbp-0x4],0xffffffff
  418097:	jmp    4180b4 <main@@Base+0x3cc4>
  41809c:	mov    rdi,QWORD PTR [rbp-0x20]
  4180a0:	movsx  esi,BYTE PTR [rbp-0x11]
  4180a4:	call   416eb0 <main@@Base+0x2ac0>
  4180a9:	mov    DWORD PTR [rbp-0x4],0x0
  4180b0:	mov    QWORD PTR [rbp-0x28],rax
  4180b4:	mov    eax,DWORD PTR [rbp-0x4]
  4180b7:	add    rsp,0x30
  4180bb:	pop    rbp
  4180bc:	ret    
  4180bd:	nop    DWORD PTR [rax]
  4180c0:	push   rbp
  4180c1:	mov    rbp,rsp
  4180c4:	sub    rsp,0x30
  4180c8:	mov    al,sil
  4180cb:	mov    QWORD PTR [rbp-0x10],rdi
  4180cf:	mov    BYTE PTR [rbp-0x11],al
  4180d2:	movsx  esi,BYTE PTR [rbp-0x11]
  4180d6:	cmp    esi,0x2
  4180d9:	jne    4180eb <main@@Base+0x3cfb>
  4180df:	mov    DWORD PTR [rbp-0x4],0x0
  4180e6:	jmp    418136 <main@@Base+0x3d46>
  4180eb:	mov    eax,0x1
  4180f0:	mov    edx,eax
  4180f2:	mov    rdi,QWORD PTR [rbp-0x10]
  4180f6:	mov    eax,0x1
  4180fb:	mov    esi,eax
  4180fd:	mov    ecx,eax
  4180ff:	call   41d6d0 <flatcc_builder_table_add@@Base>
  418104:	mov    QWORD PTR [rbp-0x20],rax
  418108:	cmp    rax,0x0
  41810c:	jne    41811e <main@@Base+0x3d2e>
  418112:	mov    DWORD PTR [rbp-0x4],0xffffffff
  418119:	jmp    418136 <main@@Base+0x3d46>
  41811e:	mov    rdi,QWORD PTR [rbp-0x20]
  418122:	movsx  esi,BYTE PTR [rbp-0x11]
  418126:	call   416eb0 <main@@Base+0x2ac0>
  41812b:	mov    DWORD PTR [rbp-0x4],0x0
  418132:	mov    QWORD PTR [rbp-0x28],rax
  418136:	mov    eax,DWORD PTR [rbp-0x4]
  418139:	add    rsp,0x30
  41813d:	pop    rbp
  41813e:	ret    
  41813f:	nop
  418140:	push   rbp
  418141:	mov    rbp,rsp
  418144:	sub    rsp,0x30
  418148:	mov    al,sil
  41814b:	mov    QWORD PTR [rbp-0x10],rdi
  41814f:	mov    BYTE PTR [rbp-0x11],al
  418152:	movzx  esi,BYTE PTR [rbp-0x11]
  418156:	cmp    esi,0x2
  418159:	jne    41816b <main@@Base+0x3d7b>
  41815f:	mov    DWORD PTR [rbp-0x4],0x0
  418166:	jmp    4181b7 <main@@Base+0x3dc7>
  41816b:	mov    eax,0x1
  418170:	mov    edx,eax
  418172:	mov    rdi,QWORD PTR [rbp-0x10]
  418176:	mov    esi,0x2
  41817b:	mov    ecx,0x1
  418180:	call   41d6d0 <flatcc_builder_table_add@@Base>
  418185:	mov    QWORD PTR [rbp-0x20],rax
  418189:	cmp    rax,0x0
  41818d:	jne    41819f <main@@Base+0x3daf>
  418193:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41819a:	jmp    4181b7 <main@@Base+0x3dc7>
  41819f:	mov    rdi,QWORD PTR [rbp-0x20]
  4181a3:	movzx  esi,BYTE PTR [rbp-0x11]
  4181a7:	call   4154c0 <main@@Base+0x10d0>
  4181ac:	mov    DWORD PTR [rbp-0x4],0x0
  4181b3:	mov    QWORD PTR [rbp-0x28],rax
  4181b7:	mov    eax,DWORD PTR [rbp-0x4]
  4181ba:	add    rsp,0x30
  4181be:	pop    rbp
  4181bf:	ret    
  4181c0:	push   rbp
  4181c1:	mov    rbp,rsp
  4181c4:	sub    rsp,0x30
  4181c8:	mov    al,sil
  4181cb:	mov    QWORD PTR [rbp-0x10],rdi
  4181cf:	mov    BYTE PTR [rbp-0x11],al
  4181d2:	movzx  esi,BYTE PTR [rbp-0x11]
  4181d6:	cmp    esi,0x2
  4181d9:	jne    4181eb <main@@Base+0x3dfb>
  4181df:	mov    DWORD PTR [rbp-0x4],0x0
  4181e6:	jmp    418237 <main@@Base+0x3e47>
  4181eb:	mov    eax,0x1
  4181f0:	mov    edx,eax
  4181f2:	mov    rdi,QWORD PTR [rbp-0x10]
  4181f6:	mov    esi,0x3
  4181fb:	mov    ecx,0x1
  418200:	call   41d6d0 <flatcc_builder_table_add@@Base>
  418205:	mov    QWORD PTR [rbp-0x20],rax
  418209:	cmp    rax,0x0
  41820d:	jne    41821f <main@@Base+0x3e2f>
  418213:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41821a:	jmp    418237 <main@@Base+0x3e47>
  41821f:	mov    rdi,QWORD PTR [rbp-0x20]
  418223:	movzx  esi,BYTE PTR [rbp-0x11]
  418227:	call   4154c0 <main@@Base+0x10d0>
  41822c:	mov    DWORD PTR [rbp-0x4],0x0
  418233:	mov    QWORD PTR [rbp-0x28],rax
  418237:	mov    eax,DWORD PTR [rbp-0x4]
  41823a:	add    rsp,0x30
  41823e:	pop    rbp
  41823f:	ret    
  418240:	push   rbp
  418241:	mov    rbp,rsp
  418244:	sub    rsp,0x10
  418248:	xor    edx,edx
  41824a:	mov    QWORD PTR [rbp-0x8],rdi
  41824e:	mov    rdi,QWORD PTR [rbp-0x8]
  418252:	lea    rsi,[rip+0xaee9]        # 423142 <_IO_stdin_used@@Base+0x142>
  418259:	call   41c9c0 <flatcc_builder_check_required@@Base>
  41825e:	cmp    eax,0x0
  418261:	je     41826c <main@@Base+0x3e7c>
  418267:	jmp    41828b <main@@Base+0x3e9b>
  41826c:	lea    rdi,[rip+0xeb49]        # 426dbc <_IO_stdin_used@@Base+0x3dbc>
  418273:	lea    rsi,[rip+0xda9b]        # 425d15 <_IO_stdin_used@@Base+0x2d15>
  41827a:	mov    edx,0xd9
  41827f:	lea    rcx,[rip+0xec08]        # 426e8e <_IO_stdin_used@@Base+0x3e8e>
  418286:	call   404090 <__assert_fail@plt>
  41828b:	mov    rdi,QWORD PTR [rbp-0x8]
  41828f:	call   41ca90 <flatcc_builder_end_table@@Base>
  418294:	add    rsp,0x10
  418298:	pop    rbp
  418299:	ret    
  41829a:	nop    WORD PTR [rax+rax*1+0x0]
  4182a0:	push   rbp
  4182a1:	mov    rbp,rsp
  4182a4:	sub    rsp,0x10
  4182a8:	mov    QWORD PTR [rbp-0x8],rdi
  4182ac:	mov    rdi,QWORD PTR [rbp-0x8]
  4182b0:	mov    esi,0x4
  4182b5:	call   41be00 <flatcc_builder_start_table@@Base>
  4182ba:	add    rsp,0x10
  4182be:	pop    rbp
  4182bf:	ret    
  4182c0:	push   rbp
  4182c1:	mov    rbp,rsp
  4182c4:	sub    rsp,0x10
  4182c8:	xor    edx,edx
  4182ca:	mov    QWORD PTR [rbp-0x8],rdi
  4182ce:	mov    rdi,QWORD PTR [rbp-0x8]
  4182d2:	lea    rsi,[rip+0xae6b]        # 423144 <_IO_stdin_used@@Base+0x144>
  4182d9:	call   41c9c0 <flatcc_builder_check_required@@Base>
  4182de:	cmp    eax,0x0
  4182e1:	je     4182ec <main@@Base+0x3efc>
  4182e7:	jmp    41830b <main@@Base+0x3f1b>
  4182ec:	lea    rdi,[rip+0xec0c]        # 426eff <_IO_stdin_used@@Base+0x3eff>
  4182f3:	lea    rsi,[rip+0xda1b]        # 425d15 <_IO_stdin_used@@Base+0x2d15>
  4182fa:	mov    edx,0xdf
  4182ff:	lea    rcx,[rip+0xec8f]        # 426f95 <_IO_stdin_used@@Base+0x3f95>
  418306:	call   404090 <__assert_fail@plt>
  41830b:	mov    rdi,QWORD PTR [rbp-0x8]
  41830f:	call   41ca90 <flatcc_builder_end_table@@Base>
  418314:	add    rsp,0x10
  418318:	pop    rbp
  418319:	ret    
  41831a:	nop    WORD PTR [rax+rax*1+0x0]
  418320:	push   rbp
  418321:	mov    rbp,rsp
  418324:	sub    rsp,0x20
  418328:	mov    QWORD PTR [rbp-0x8],rdi
  41832c:	mov    DWORD PTR [rbp-0xc],esi
  41832f:	mov    rdi,QWORD PTR [rbp-0x8]
  418333:	mov    esi,DWORD PTR [rbp-0xc]
  418336:	mov    QWORD PTR [rbp-0x20],rdi
  41833a:	mov    edi,esi
  41833c:	call   418360 <main@@Base+0x3f70>
  418341:	mov    QWORD PTR [rbp-0x18],rax
  418345:	mov    rsi,QWORD PTR [rbp-0x18]
  418349:	mov    rdi,QWORD PTR [rbp-0x20]
  41834d:	call   40aa90 <gen_monster@@Base+0xf50>
  418352:	add    rsp,0x20
  418356:	pop    rbp
  418357:	ret    
  418358:	nop    DWORD PTR [rax+rax*1+0x0]
  418360:	push   rbp
  418361:	mov    rbp,rsp
  418364:	mov    DWORD PTR [rbp-0xc],edi
  418367:	mov    BYTE PTR [rbp-0x8],0x4
  41836b:	mov    edi,DWORD PTR [rbp-0xc]
  41836e:	mov    DWORD PTR [rbp-0x4],edi
  418371:	mov    rax,QWORD PTR [rbp-0x8]
  418375:	pop    rbp
  418376:	ret    
  418377:	nop    WORD PTR [rax+rax*1+0x0]
  418380:	push   rbp
  418381:	mov    rbp,rsp
  418384:	sub    rsp,0x10
  418388:	mov    QWORD PTR [rbp-0x8],rdi
  41838c:	mov    rdi,QWORD PTR [rbp-0x8]
  418390:	movzx  edi,BYTE PTR [rdi]
  418393:	call   4183b0 <main@@Base+0x3fc0>
  418398:	movzx  eax,al
  41839b:	add    rsp,0x10
  41839f:	pop    rbp
  4183a0:	ret    
  4183a1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4183ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4183b0:	push   rbp
  4183b1:	mov    rbp,rsp
  4183b4:	mov    al,dil
  4183b7:	mov    BYTE PTR [rbp-0x1],al
  4183ba:	movzx  eax,BYTE PTR [rbp-0x1]
  4183be:	pop    rbp
  4183bf:	ret    
  4183c0:	push   rbp
  4183c1:	mov    rbp,rsp
  4183c4:	sub    rsp,0x10
  4183c8:	mov    QWORD PTR [rbp-0x8],rdi
  4183cc:	mov    rdi,QWORD PTR [rbp-0x8]
  4183d0:	mov    esi,0xa
  4183d5:	call   41be00 <flatcc_builder_start_table@@Base>
  4183da:	add    rsp,0x10
  4183de:	pop    rbp
  4183df:	ret    
  4183e0:	push   rbp
  4183e1:	mov    rbp,rsp
  4183e4:	sub    rsp,0x10
  4183e8:	mov    eax,0x4
  4183ed:	mov    esi,eax
  4183ef:	mov    QWORD PTR [rbp-0x8],rdi
  4183f3:	mov    rdi,QWORD PTR [rbp-0x8]
  4183f7:	mov    edx,0x4
  4183fc:	call   41acf0 <flatcc_builder_start_struct@@Base>
  418401:	add    rsp,0x10
  418405:	pop    rbp
  418406:	ret    
  418407:	nop    WORD PTR [rax+rax*1+0x0]
  418410:	push   rbp
  418411:	mov    rbp,rsp
  418414:	sub    rsp,0x20
  418418:	mov    QWORD PTR [rbp-0x8],rdi
  41841c:	mov    DWORD PTR [rbp-0xc],esi
  41841f:	mov    rdi,QWORD PTR [rbp-0x8]
  418423:	mov    esi,DWORD PTR [rbp-0xc]
  418426:	call   415310 <main@@Base+0xf20>
  41842b:	mov    rdi,QWORD PTR [rbp-0x8]
  41842f:	mov    QWORD PTR [rbp-0x18],rax
  418433:	mov    rax,rdi
  418436:	add    rsp,0x20
  41843a:	pop    rbp
  41843b:	ret    
  41843c:	nop    DWORD PTR [rax+0x0]
  418440:	push   rbp
  418441:	mov    rbp,rsp
  418444:	sub    rsp,0x10
  418448:	mov    QWORD PTR [rbp-0x8],rdi
  41844c:	mov    rdi,QWORD PTR [rbp-0x8]
  418450:	call   41aea0 <flatcc_builder_end_struct@@Base>
  418455:	add    rsp,0x10
  418459:	pop    rbp
  41845a:	ret    
  41845b:	nop    DWORD PTR [rax+rax*1+0x0]
  418460:	push   rbp
  418461:	mov    rbp,rsp
  418464:	sub    rsp,0x10
  418468:	mov    eax,0x2
  41846d:	mov    esi,eax
  41846f:	mov    QWORD PTR [rbp-0x8],rdi
  418473:	mov    rdi,QWORD PTR [rbp-0x8]
  418477:	mov    edx,0x2
  41847c:	call   41acf0 <flatcc_builder_start_struct@@Base>
  418481:	add    rsp,0x10
  418485:	pop    rbp
  418486:	ret    
  418487:	nop    WORD PTR [rax+rax*1+0x0]
  418490:	push   rbp
  418491:	mov    rbp,rsp
  418494:	sub    rsp,0x20
  418498:	mov    ax,si
  41849b:	mov    QWORD PTR [rbp-0x8],rdi
  41849f:	mov    WORD PTR [rbp-0xa],ax
  4184a3:	mov    rdi,QWORD PTR [rbp-0x8]
  4184a7:	movzx  esi,WORD PTR [rbp-0xa]
  4184ab:	call   415430 <main@@Base+0x1040>
  4184b0:	mov    rdi,QWORD PTR [rbp-0x8]
  4184b4:	mov    QWORD PTR [rbp-0x18],rax
  4184b8:	mov    rax,rdi
  4184bb:	add    rsp,0x20
  4184bf:	pop    rbp
  4184c0:	ret    
  4184c1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4184cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4184d0:	push   rbp
  4184d1:	mov    rbp,rsp
  4184d4:	sub    rsp,0x10
  4184d8:	mov    QWORD PTR [rbp-0x8],rdi
  4184dc:	mov    rdi,QWORD PTR [rbp-0x8]
  4184e0:	call   41aea0 <flatcc_builder_end_struct@@Base>
  4184e5:	add    rsp,0x10
  4184e9:	pop    rbp
  4184ea:	ret    
  4184eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4184f0:	push   rbp
  4184f1:	mov    rbp,rsp
  4184f4:	sub    rsp,0x30
  4184f8:	mov    QWORD PTR [rbp-0x10],rsi
  4184fc:	mov    QWORD PTR [rbp-0x18],rdi
  418500:	movzx  eax,BYTE PTR [rbp-0x10]
  418504:	cmp    eax,0x0
  418507:	jne    418519 <main@@Base+0x4129>
  41850d:	mov    DWORD PTR [rbp-0x4],0x0
  418514:	jmp    418595 <main@@Base+0x41a5>
  418519:	cmp    DWORD PTR [rbp-0xc],0x0
  41851d:	jne    41852f <main@@Base+0x413f>
  418523:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41852a:	jmp    418595 <main@@Base+0x41a5>
  41852f:	xor    esi,esi
  418531:	mov    eax,0x1
  418536:	mov    edx,eax
  418538:	mov    rdi,QWORD PTR [rbp-0x18]
  41853c:	mov    ecx,0x1
  418541:	call   41d6d0 <flatcc_builder_table_add@@Base>
  418546:	mov    QWORD PTR [rbp-0x28],rax
  41854a:	cmp    rax,0x0
  41854e:	je     418570 <main@@Base+0x4180>
  418554:	mov    rdi,QWORD PTR [rbp-0x18]
  418558:	mov    esi,0x1
  41855d:	call   41d5d0 <flatcc_builder_table_add_offset@@Base>
  418562:	mov    QWORD PTR [rbp-0x20],rax
  418566:	cmp    rax,0x0
  41856a:	jne    41857c <main@@Base+0x418c>
  418570:	mov    DWORD PTR [rbp-0x4],0xffffffff
  418577:	jmp    418595 <main@@Base+0x41a5>
  41857c:	mov    al,BYTE PTR [rbp-0x10]
  41857f:	mov    rcx,QWORD PTR [rbp-0x28]
  418583:	mov    BYTE PTR [rcx],al
  418585:	mov    edx,DWORD PTR [rbp-0xc]
  418588:	mov    rcx,QWORD PTR [rbp-0x20]
  41858c:	mov    DWORD PTR [rcx],edx
  41858e:	mov    DWORD PTR [rbp-0x4],0x0
  418595:	mov    eax,DWORD PTR [rbp-0x4]
  418598:	add    rsp,0x30
  41859c:	pop    rbp
  41859d:	ret    
  41859e:	xchg   ax,ax
  4185a0:	push   rbp
  4185a1:	mov    rbp,rsp
  4185a4:	sub    rsp,0x30
  4185a8:	mov    QWORD PTR [rbp-0x10],rsi
  4185ac:	mov    QWORD PTR [rbp-0x18],rdi
  4185b0:	movzx  eax,BYTE PTR [rbp-0x10]
  4185b4:	cmp    eax,0x0
  4185b7:	jne    4185c9 <main@@Base+0x41d9>
  4185bd:	mov    DWORD PTR [rbp-0x4],0x0
  4185c4:	jmp    418648 <main@@Base+0x4258>
  4185c9:	cmp    DWORD PTR [rbp-0xc],0x0
  4185cd:	jne    4185df <main@@Base+0x41ef>
  4185d3:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4185da:	jmp    418648 <main@@Base+0x4258>
  4185df:	mov    eax,0x1
  4185e4:	mov    edx,eax
  4185e6:	mov    rdi,QWORD PTR [rbp-0x18]
  4185ea:	mov    esi,0x6
  4185ef:	mov    ecx,0x1
  4185f4:	call   41d6d0 <flatcc_builder_table_add@@Base>
  4185f9:	mov    QWORD PTR [rbp-0x28],rax
  4185fd:	cmp    rax,0x0
  418601:	je     418623 <main@@Base+0x4233>
  418607:	mov    rdi,QWORD PTR [rbp-0x18]
  41860b:	mov    esi,0x7
  418610:	call   41d5d0 <flatcc_builder_table_add_offset@@Base>
  418615:	mov    QWORD PTR [rbp-0x20],rax
  418619:	cmp    rax,0x0
  41861d:	jne    41862f <main@@Base+0x423f>
  418623:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41862a:	jmp    418648 <main@@Base+0x4258>
  41862f:	mov    al,BYTE PTR [rbp-0x10]
  418632:	mov    rcx,QWORD PTR [rbp-0x28]
  418636:	mov    BYTE PTR [rcx],al
  418638:	mov    edx,DWORD PTR [rbp-0xc]
  41863b:	mov    rcx,QWORD PTR [rbp-0x20]
  41863f:	mov    DWORD PTR [rcx],edx
  418641:	mov    DWORD PTR [rbp-0x4],0x0
  418648:	mov    eax,DWORD PTR [rbp-0x4]
  41864b:	add    rsp,0x30
  41864f:	pop    rbp
  418650:	ret    
  418651:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41865b:	nop    DWORD PTR [rax+rax*1+0x0]
  418660:	push   rbp
  418661:	mov    rbp,rsp
  418664:	sub    rsp,0x10
  418668:	mov    QWORD PTR [rbp-0x8],rdi
  41866c:	mov    rdi,QWORD PTR [rbp-0x8]
  418670:	mov    esi,0x1
  418675:	call   41be00 <flatcc_builder_start_table@@Base>
  41867a:	add    rsp,0x10
  41867e:	pop    rbp
  41867f:	ret    
  418680:	push   rbp
  418681:	mov    rbp,rsp
  418684:	sub    rsp,0x30
  418688:	mov    QWORD PTR [rbp-0x10],rdi
  41868c:	mov    DWORD PTR [rbp-0x14],esi
  41868f:	cmp    DWORD PTR [rbp-0x14],0x0
  418693:	jne    4186a5 <main@@Base+0x42b5>
  418699:	mov    DWORD PTR [rbp-0x4],0x0
  4186a0:	jmp    4186ed <main@@Base+0x42fd>
  4186a5:	xor    esi,esi
  4186a7:	mov    eax,0x4
  4186ac:	mov    edx,eax
  4186ae:	mov    rdi,QWORD PTR [rbp-0x10]
  4186b2:	mov    ecx,0x4
  4186b7:	call   41d6d0 <flatcc_builder_table_add@@Base>
  4186bc:	mov    QWORD PTR [rbp-0x20],rax
  4186c0:	cmp    rax,0x0
  4186c4:	jne    4186d6 <main@@Base+0x42e6>
  4186ca:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4186d1:	jmp    4186ed <main@@Base+0x42fd>
  4186d6:	mov    rdi,QWORD PTR [rbp-0x20]
  4186da:	mov    esi,DWORD PTR [rbp-0x14]
  4186dd:	call   415310 <main@@Base+0xf20>
  4186e2:	mov    DWORD PTR [rbp-0x4],0x0
  4186e9:	mov    QWORD PTR [rbp-0x28],rax
  4186ed:	mov    eax,DWORD PTR [rbp-0x4]
  4186f0:	add    rsp,0x30
  4186f4:	pop    rbp
  4186f5:	ret    
  4186f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418700:	push   rbp
  418701:	mov    rbp,rsp
  418704:	sub    rsp,0x10
  418708:	xor    edx,edx
  41870a:	mov    QWORD PTR [rbp-0x8],rdi
  41870e:	mov    rdi,QWORD PTR [rbp-0x8]
  418712:	lea    rsi,[rip+0xaa2d]        # 423146 <_IO_stdin_used@@Base+0x146>
  418719:	call   41c9c0 <flatcc_builder_check_required@@Base>
  41871e:	cmp    eax,0x0
  418721:	je     41872c <main@@Base+0x433c>
  418727:	jmp    41874b <main@@Base+0x435b>
  41872c:	lea    rdi,[rip+0xec27]        # 42735a <_IO_stdin_used@@Base+0x435a>
  418733:	lea    rsi,[rip+0xd5db]        # 425d15 <_IO_stdin_used@@Base+0x2d15>
  41873a:	mov    edx,0xef
  41873f:	lea    rcx,[rip+0xeca4]        # 4273ea <_IO_stdin_used@@Base+0x43ea>
  418746:	call   404090 <__assert_fail@plt>
  41874b:	mov    rdi,QWORD PTR [rbp-0x8]
  41874f:	call   41ca90 <flatcc_builder_end_table@@Base>
  418754:	add    rsp,0x10
  418758:	pop    rbp
  418759:	ret    
  41875a:	nop    WORD PTR [rax+rax*1+0x0]
  418760:	push   rbp
  418761:	mov    rbp,rsp
  418764:	sub    rsp,0x30
  418768:	mov    QWORD PTR [rbp-0x10],rsi
  41876c:	mov    QWORD PTR [rbp-0x18],rdi
  418770:	movzx  eax,BYTE PTR [rbp-0x10]
  418774:	cmp    eax,0x0
  418777:	jne    418789 <main@@Base+0x4399>
  41877d:	mov    DWORD PTR [rbp-0x4],0x0
  418784:	jmp    418808 <main@@Base+0x4418>
  418789:	cmp    DWORD PTR [rbp-0xc],0x0
  41878d:	jne    41879f <main@@Base+0x43af>
  418793:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41879a:	jmp    418808 <main@@Base+0x4418>
  41879f:	mov    eax,0x1
  4187a4:	mov    edx,eax
  4187a6:	mov    rdi,QWORD PTR [rbp-0x18]
  4187aa:	mov    esi,0x2
  4187af:	mov    ecx,0x1
  4187b4:	call   41d6d0 <flatcc_builder_table_add@@Base>
  4187b9:	mov    QWORD PTR [rbp-0x28],rax
  4187bd:	cmp    rax,0x0
  4187c1:	je     4187e3 <main@@Base+0x43f3>
  4187c7:	mov    rdi,QWORD PTR [rbp-0x18]
  4187cb:	mov    esi,0x3
  4187d0:	call   41d5d0 <flatcc_builder_table_add_offset@@Base>
  4187d5:	mov    QWORD PTR [rbp-0x20],rax
  4187d9:	cmp    rax,0x0
  4187dd:	jne    4187ef <main@@Base+0x43ff>
  4187e3:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4187ea:	jmp    418808 <main@@Base+0x4418>
  4187ef:	mov    al,BYTE PTR [rbp-0x10]
  4187f2:	mov    rcx,QWORD PTR [rbp-0x28]
  4187f6:	mov    BYTE PTR [rcx],al
  4187f8:	mov    edx,DWORD PTR [rbp-0xc]
  4187fb:	mov    rcx,QWORD PTR [rbp-0x20]
  4187ff:	mov    DWORD PTR [rcx],edx
  418801:	mov    DWORD PTR [rbp-0x4],0x0
  418808:	mov    eax,DWORD PTR [rbp-0x4]
  41880b:	add    rsp,0x30
  41880f:	pop    rbp
  418810:	ret    
  418811:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41881b:	nop    DWORD PTR [rax+rax*1+0x0]
  418820:	push   rbp
  418821:	mov    rbp,rsp
  418824:	mov    DWORD PTR [rbp-0xc],edi
  418827:	mov    BYTE PTR [rbp-0x8],0x2
  41882b:	mov    edi,DWORD PTR [rbp-0xc]
  41882e:	mov    DWORD PTR [rbp-0x4],edi
  418831:	mov    rax,QWORD PTR [rbp-0x8]
  418835:	pop    rbp
  418836:	ret    
  418837:	nop    WORD PTR [rax+rax*1+0x0]
  418840:	push   rbp
  418841:	mov    rbp,rsp
  418844:	sub    rsp,0x20
  418848:	mov    QWORD PTR [rbp-0x8],rdi
  41884c:	mov    DWORD PTR [rbp-0xc],esi
  41884f:	mov    rdi,QWORD PTR [rbp-0x8]
  418853:	mov    esi,DWORD PTR [rbp-0xc]
  418856:	mov    QWORD PTR [rbp-0x20],rdi
  41885a:	mov    edi,esi
  41885c:	call   4113a0 <test_mixed_type_union@@Base+0x1000>
  418861:	mov    QWORD PTR [rbp-0x18],rax
  418865:	mov    rsi,QWORD PTR [rbp-0x18]
  418869:	mov    rdi,QWORD PTR [rbp-0x20]
  41886d:	call   418880 <main@@Base+0x4490>
  418872:	add    rsp,0x20
  418876:	pop    rbp
  418877:	ret    
  418878:	nop    DWORD PTR [rax+rax*1+0x0]
  418880:	push   rbp
  418881:	mov    rbp,rsp
  418884:	sub    rsp,0x30
  418888:	mov    QWORD PTR [rbp-0x10],rsi
  41888c:	mov    QWORD PTR [rbp-0x18],rdi
  418890:	movzx  eax,BYTE PTR [rbp-0x10]
  418894:	cmp    eax,0x0
  418897:	jne    4188a9 <main@@Base+0x44b9>
  41889d:	mov    DWORD PTR [rbp-0x4],0x0
  4188a4:	jmp    418928 <main@@Base+0x4538>
  4188a9:	cmp    DWORD PTR [rbp-0xc],0x0
  4188ad:	jne    4188bf <main@@Base+0x44cf>
  4188b3:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4188ba:	jmp    418928 <main@@Base+0x4538>
  4188bf:	mov    eax,0x1
  4188c4:	mov    edx,eax
  4188c6:	mov    rdi,QWORD PTR [rbp-0x18]
  4188ca:	mov    esi,0x4
  4188cf:	mov    ecx,0x1
  4188d4:	call   41d6d0 <flatcc_builder_table_add@@Base>
  4188d9:	mov    QWORD PTR [rbp-0x28],rax
  4188dd:	cmp    rax,0x0
  4188e1:	je     418903 <main@@Base+0x4513>
  4188e7:	mov    rdi,QWORD PTR [rbp-0x18]
  4188eb:	mov    esi,0x5
  4188f0:	call   41d5d0 <flatcc_builder_table_add_offset@@Base>
  4188f5:	mov    QWORD PTR [rbp-0x20],rax
  4188f9:	cmp    rax,0x0
  4188fd:	jne    41890f <main@@Base+0x451f>
  418903:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41890a:	jmp    418928 <main@@Base+0x4538>
  41890f:	mov    al,BYTE PTR [rbp-0x10]
  418912:	mov    rcx,QWORD PTR [rbp-0x28]
  418916:	mov    BYTE PTR [rcx],al
  418918:	mov    edx,DWORD PTR [rbp-0xc]
  41891b:	mov    rcx,QWORD PTR [rbp-0x20]
  41891f:	mov    DWORD PTR [rcx],edx
  418921:	mov    DWORD PTR [rbp-0x4],0x0
  418928:	mov    eax,DWORD PTR [rbp-0x4]
  41892b:	add    rsp,0x30
  41892f:	pop    rbp
  418930:	ret    
  418931:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41893b:	nop    DWORD PTR [rax+rax*1+0x0]
  418940:	push   rbp
  418941:	mov    rbp,rsp
  418944:	mov    DWORD PTR [rbp-0xc],edi
  418947:	mov    BYTE PTR [rbp-0x8],0x9
  41894b:	mov    edi,DWORD PTR [rbp-0xc]
  41894e:	mov    DWORD PTR [rbp-0x4],edi
  418951:	mov    rax,QWORD PTR [rbp-0x8]
  418955:	pop    rbp
  418956:	ret    
  418957:	nop    WORD PTR [rax+rax*1+0x0]
  418960:	push   rbp
  418961:	mov    rbp,rsp
  418964:	sub    rsp,0x10
  418968:	mov    QWORD PTR [rbp-0x8],rdi
  41896c:	mov    rdi,QWORD PTR [rbp-0x8]
  418970:	call   41aea0 <flatcc_builder_end_struct@@Base>
  418975:	add    rsp,0x10
  418979:	pop    rbp
  41897a:	ret    
  41897b:	nop    DWORD PTR [rax+rax*1+0x0]
  418980:	push   rbp
  418981:	mov    rbp,rsp
  418984:	sub    rsp,0x20
  418988:	mov    QWORD PTR [rbp-0x10],rsi
  41898c:	mov    QWORD PTR [rbp-0x18],rdi
  418990:	cmp    DWORD PTR [rbp-0x10],0x0
  418994:	je     4189a4 <main@@Base+0x45b4>
  41899a:	cmp    DWORD PTR [rbp-0xc],0x0
  41899e:	jne    4189be <main@@Base+0x45ce>
  4189a4:	xor    eax,eax
  4189a6:	mov    ecx,DWORD PTR [rbp-0x10]
  4189a9:	mov    edx,DWORD PTR [rbp-0xc]
  4189ac:	cmp    ecx,edx
  4189ae:	mov    ecx,0xffffffff
  4189b3:	cmove  ecx,eax
  4189b6:	mov    DWORD PTR [rbp-0x4],ecx
  4189b9:	jmp    418a27 <main@@Base+0x4637>
  4189be:	mov    rdi,QWORD PTR [rbp-0x18]
  4189c2:	mov    esi,0x8
  4189c7:	call   41d5d0 <flatcc_builder_table_add_offset@@Base>
  4189cc:	mov    QWORD PTR [rbp-0x20],rax
  4189d0:	cmp    rax,0x0
  4189d4:	jne    4189e6 <main@@Base+0x45f6>
  4189da:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4189e1:	jmp    418a27 <main@@Base+0x4637>
  4189e6:	mov    eax,DWORD PTR [rbp-0x10]
  4189e9:	mov    rcx,QWORD PTR [rbp-0x20]
  4189ed:	mov    DWORD PTR [rcx],eax
  4189ef:	mov    rdi,QWORD PTR [rbp-0x18]
  4189f3:	mov    esi,0x9
  4189f8:	call   41d5d0 <flatcc_builder_table_add_offset@@Base>
  4189fd:	mov    QWORD PTR [rbp-0x20],rax
  418a01:	cmp    rax,0x0
  418a05:	jne    418a17 <main@@Base+0x4627>
  418a0b:	mov    DWORD PTR [rbp-0x4],0xffffffff
  418a12:	jmp    418a27 <main@@Base+0x4637>
  418a17:	mov    eax,DWORD PTR [rbp-0xc]
  418a1a:	mov    rcx,QWORD PTR [rbp-0x20]
  418a1e:	mov    DWORD PTR [rcx],eax
  418a20:	mov    DWORD PTR [rbp-0x4],0x0
  418a27:	mov    eax,DWORD PTR [rbp-0x4]
  418a2a:	add    rsp,0x20
  418a2e:	pop    rbp
  418a2f:	ret    
  418a30:	push   rbp
  418a31:	mov    rbp,rsp
  418a34:	sub    rsp,0x10
  418a38:	xor    edx,edx
  418a3a:	mov    QWORD PTR [rbp-0x8],rdi
  418a3e:	mov    rdi,QWORD PTR [rbp-0x8]
  418a42:	lea    rsi,[rip+0xa6ff]        # 423148 <_IO_stdin_used@@Base+0x148>
  418a49:	call   41c9c0 <flatcc_builder_check_required@@Base>
  418a4e:	cmp    eax,0x0
  418a51:	je     418a5c <main@@Base+0x466c>
  418a57:	jmp    418a7b <main@@Base+0x468b>
  418a5c:	lea    rdi,[rip+0xe9cc]        # 42742f <_IO_stdin_used@@Base+0x442f>
  418a63:	lea    rsi,[rip+0xd2ab]        # 425d15 <_IO_stdin_used@@Base+0x2d15>
  418a6a:	mov    edx,0xf1
  418a6f:	lea    rcx,[rip+0xea40]        # 4274b6 <_IO_stdin_used@@Base+0x44b6>
  418a76:	call   404090 <__assert_fail@plt>
  418a7b:	mov    rdi,QWORD PTR [rbp-0x8]
  418a7f:	call   41ca90 <flatcc_builder_end_table@@Base>
  418a84:	add    rsp,0x10
  418a88:	pop    rbp
  418a89:	ret    
  418a8a:	nop    WORD PTR [rax+rax*1+0x0]
  418a90:	push   rbp
  418a91:	mov    rbp,rsp
  418a94:	sub    rsp,0x30
  418a98:	mov    QWORD PTR [rbp-0x8],rdi
  418a9c:	mov    WORD PTR [rbp-0xa],0x0
  418aa2:	cmp    QWORD PTR [rbp-0x8],0x0
  418aa7:	je     418ac1 <main@@Base+0x46d1>
  418aad:	mov    al,0x1
  418aaf:	test   al,0x1
  418ab1:	jne    418abc <main@@Base+0x46cc>
  418ab7:	jmp    418ac1 <main@@Base+0x46d1>
  418abc:	jmp    418ae0 <main@@Base+0x46f0>
  418ac1:	lea    rdi,[rip+0xcfd0]        # 425a98 <_IO_stdin_used@@Base+0x2a98>
  418ac8:	lea    rsi,[rip+0xcfef]        # 425abe <_IO_stdin_used@@Base+0x2abe>
  418acf:	mov    edx,0x333
  418ad4:	lea    rcx,[rip+0xea9c]        # 427577 <_IO_stdin_used@@Base+0x4577>
  418adb:	call   404090 <__assert_fail@plt>
  418ae0:	mov    WORD PTR [rbp-0xc],0x0
  418ae6:	mov    rax,QWORD PTR [rbp-0x8]
  418aea:	mov    rcx,QWORD PTR [rbp-0x8]
  418aee:	mov    rdi,rcx
  418af1:	mov    QWORD PTR [rbp-0x20],rax
  418af5:	call   414960 <main@@Base+0x570>
  418afa:	xor    edx,edx
  418afc:	mov    ecx,edx
  418afe:	movsxd rdi,eax
  418b01:	sub    rcx,rdi
  418b04:	mov    rdi,QWORD PTR [rbp-0x20]
  418b08:	add    rdi,rcx
  418b0b:	mov    QWORD PTR [rbp-0x18],rdi
  418b0f:	mov    rcx,QWORD PTR [rbp-0x18]
  418b13:	mov    rdi,rcx
  418b16:	call   414980 <main@@Base+0x590>
  418b1b:	movzx  edx,ax
  418b1e:	mov    ecx,edx
  418b20:	movzx  edx,WORD PTR [rbp-0xc]
  418b24:	add    edx,0x3
  418b27:	movsxd rdi,edx
  418b2a:	shl    rdi,0x1
  418b2e:	cmp    rcx,rdi
  418b31:	jb     418b59 <main@@Base+0x4769>
  418b37:	mov    rax,QWORD PTR [rbp-0x18]
  418b3b:	movzx  ecx,WORD PTR [rbp-0xc]
  418b3f:	movsxd rdx,ecx
  418b42:	shl    rdx,0x1
  418b46:	add    rax,rdx
  418b49:	add    rax,0x4
  418b4d:	mov    rdi,rax
  418b50:	call   414980 <main@@Base+0x590>
  418b55:	mov    WORD PTR [rbp-0xa],ax
  418b59:	movzx  eax,WORD PTR [rbp-0xa]
  418b5d:	cmp    eax,0x0
  418b60:	je     418b87 <main@@Base+0x4797>
  418b66:	mov    rax,QWORD PTR [rbp-0x8]
  418b6a:	movzx  ecx,WORD PTR [rbp-0xa]
  418b6e:	movsxd rdx,ecx
  418b71:	add    rax,rdx
  418b74:	mov    rdi,rax
  418b77:	call   416e40 <main@@Base+0x2a50>
  418b7c:	movzx  ecx,al
  418b7f:	mov    DWORD PTR [rbp-0x24],ecx
  418b82:	jmp    418b91 <main@@Base+0x47a1>
  418b87:	xor    eax,eax
  418b89:	mov    DWORD PTR [rbp-0x24],eax
  418b8c:	jmp    418b91 <main@@Base+0x47a1>
  418b91:	mov    eax,DWORD PTR [rbp-0x24]
  418b94:	mov    cl,al
  418b96:	movzx  eax,cl
  418b99:	add    rsp,0x30
  418b9d:	pop    rbp
  418b9e:	ret    
  418b9f:	nop
  418ba0:	push   rbp
  418ba1:	mov    rbp,rsp
  418ba4:	sub    rsp,0x40
  418ba8:	mov    QWORD PTR [rbp-0x10],rdi
  418bac:	mov    WORD PTR [rbp-0x1a],0x0
  418bb2:	cmp    QWORD PTR [rbp-0x10],0x0
  418bb7:	je     418bd1 <main@@Base+0x47e1>
  418bbd:	mov    al,0x1
  418bbf:	test   al,0x1
  418bc1:	jne    418bcc <main@@Base+0x47dc>
  418bc7:	jmp    418bd1 <main@@Base+0x47e1>
  418bcc:	jmp    418bf0 <main@@Base+0x4800>
  418bd1:	lea    rdi,[rip+0xcec0]        # 425a98 <_IO_stdin_used@@Base+0x2a98>
  418bd8:	lea    rsi,[rip+0xcedf]        # 425abe <_IO_stdin_used@@Base+0x2abe>
  418bdf:	mov    edx,0x333
  418be4:	lea    rcx,[rip+0xe9e4]        # 4275cf <_IO_stdin_used@@Base+0x45cf>
  418beb:	call   404090 <__assert_fail@plt>
  418bf0:	mov    WORD PTR [rbp-0x1c],0x1
  418bf6:	mov    rax,QWORD PTR [rbp-0x10]
  418bfa:	mov    rcx,QWORD PTR [rbp-0x10]
  418bfe:	mov    rdi,rcx
  418c01:	mov    QWORD PTR [rbp-0x30],rax
  418c05:	call   414960 <main@@Base+0x570>
  418c0a:	xor    edx,edx
  418c0c:	mov    ecx,edx
  418c0e:	movsxd rdi,eax
  418c11:	sub    rcx,rdi
  418c14:	mov    rdi,QWORD PTR [rbp-0x30]
  418c18:	add    rdi,rcx
  418c1b:	mov    QWORD PTR [rbp-0x28],rdi
  418c1f:	mov    rcx,QWORD PTR [rbp-0x28]
  418c23:	mov    rdi,rcx
  418c26:	call   414980 <main@@Base+0x590>
  418c2b:	movzx  edx,ax
  418c2e:	mov    ecx,edx
  418c30:	movzx  edx,WORD PTR [rbp-0x1c]
  418c34:	add    edx,0x3
  418c37:	movsxd rdi,edx
  418c3a:	shl    rdi,0x1
  418c3e:	cmp    rcx,rdi
  418c41:	jb     418c69 <main@@Base+0x4879>
  418c47:	mov    rax,QWORD PTR [rbp-0x28]
  418c4b:	movzx  ecx,WORD PTR [rbp-0x1c]
  418c4f:	movsxd rdx,ecx
  418c52:	shl    rdx,0x1
  418c56:	add    rax,rdx
  418c59:	add    rax,0x4
  418c5d:	mov    rdi,rax
  418c60:	call   414980 <main@@Base+0x590>
  418c65:	mov    WORD PTR [rbp-0x1a],ax
  418c69:	cmp    WORD PTR [rbp-0x1a],0x0
  418c6e:	je     418cae <main@@Base+0x48be>
  418c74:	mov    rax,QWORD PTR [rbp-0x10]
  418c78:	movzx  ecx,WORD PTR [rbp-0x1a]
  418c7c:	movsxd rdx,ecx
  418c7f:	add    rax,rdx
  418c82:	mov    QWORD PTR [rbp-0x18],rax
  418c86:	mov    rax,QWORD PTR [rbp-0x18]
  418c8a:	mov    rdx,QWORD PTR [rbp-0x18]
  418c8e:	mov    rdi,rdx
  418c91:	mov    QWORD PTR [rbp-0x38],rax
  418c95:	call   414930 <main@@Base+0x540>
  418c9a:	mov    eax,eax
  418c9c:	mov    edx,eax
  418c9e:	mov    rdi,QWORD PTR [rbp-0x38]
  418ca2:	add    rdi,rdx
  418ca5:	mov    QWORD PTR [rbp-0x8],rdi
  418ca9:	jmp    418cb6 <main@@Base+0x48c6>
  418cae:	mov    QWORD PTR [rbp-0x8],0x0
  418cb6:	mov    rax,QWORD PTR [rbp-0x8]
  418cba:	add    rsp,0x40
  418cbe:	pop    rbp
  418cbf:	ret    
  418cc0:	push   rbp
  418cc1:	mov    rbp,rsp
  418cc4:	mov    eax,0x4
  418cc9:	pop    rbp
  418cca:	ret    
  418ccb:	nop    DWORD PTR [rax+rax*1+0x0]
  418cd0:	push   rbp
  418cd1:	mov    rbp,rsp
  418cd4:	sub    rsp,0x40
  418cd8:	mov    QWORD PTR [rbp-0x10],rdi
  418cdc:	mov    WORD PTR [rbp-0x1a],0x0
  418ce2:	cmp    QWORD PTR [rbp-0x10],0x0
  418ce7:	je     418d01 <main@@Base+0x4911>
  418ced:	mov    al,0x1
  418cef:	test   al,0x1
  418cf1:	jne    418cfc <main@@Base+0x490c>
  418cf7:	jmp    418d01 <main@@Base+0x4911>
  418cfc:	jmp    418d20 <main@@Base+0x4930>
  418d01:	lea    rdi,[rip+0xcd90]        # 425a98 <_IO_stdin_used@@Base+0x2a98>
  418d08:	lea    rsi,[rip+0xcdaf]        # 425abe <_IO_stdin_used@@Base+0x2abe>
  418d0f:	mov    edx,0x337
  418d14:	lea    rcx,[rip+0xeb5b]        # 427876 <_IO_stdin_used@@Base+0x4876>
  418d1b:	call   404090 <__assert_fail@plt>
  418d20:	mov    WORD PTR [rbp-0x1c],0x9
  418d26:	mov    rax,QWORD PTR [rbp-0x10]
  418d2a:	mov    rcx,QWORD PTR [rbp-0x10]
  418d2e:	mov    rdi,rcx
  418d31:	mov    QWORD PTR [rbp-0x30],rax
  418d35:	call   414960 <main@@Base+0x570>
  418d3a:	xor    edx,edx
  418d3c:	mov    ecx,edx
  418d3e:	movsxd rdi,eax
  418d41:	sub    rcx,rdi
  418d44:	mov    rdi,QWORD PTR [rbp-0x30]
  418d48:	add    rdi,rcx
  418d4b:	mov    QWORD PTR [rbp-0x28],rdi
  418d4f:	mov    rcx,QWORD PTR [rbp-0x28]
  418d53:	mov    rdi,rcx
  418d56:	call   414980 <main@@Base+0x590>
  418d5b:	movzx  edx,ax
  418d5e:	mov    ecx,edx
  418d60:	movzx  edx,WORD PTR [rbp-0x1c]
  418d64:	add    edx,0x3
  418d67:	movsxd rdi,edx
  418d6a:	shl    rdi,0x1
  418d6e:	cmp    rcx,rdi
  418d71:	jb     418d99 <main@@Base+0x49a9>
  418d77:	mov    rax,QWORD PTR [rbp-0x28]
  418d7b:	movzx  ecx,WORD PTR [rbp-0x1c]
  418d7f:	movsxd rdx,ecx
  418d82:	shl    rdx,0x1
  418d86:	add    rax,rdx
  418d89:	add    rax,0x4
  418d8d:	mov    rdi,rax
  418d90:	call   414980 <main@@Base+0x590>
  418d95:	mov    WORD PTR [rbp-0x1a],ax
  418d99:	cmp    WORD PTR [rbp-0x1a],0x0
  418d9e:	je     418de2 <main@@Base+0x49f2>
  418da4:	mov    rax,QWORD PTR [rbp-0x10]
  418da8:	movzx  ecx,WORD PTR [rbp-0x1a]
  418dac:	movsxd rdx,ecx
  418daf:	add    rax,rdx
  418db2:	mov    QWORD PTR [rbp-0x18],rax
  418db6:	mov    rax,QWORD PTR [rbp-0x18]
  418dba:	add    rax,0x4
  418dbe:	mov    rdx,QWORD PTR [rbp-0x18]
  418dc2:	mov    rdi,rdx
  418dc5:	mov    QWORD PTR [rbp-0x38],rax
  418dc9:	call   414930 <main@@Base+0x540>
  418dce:	mov    eax,eax
  418dd0:	mov    edx,eax
  418dd2:	mov    rdi,QWORD PTR [rbp-0x38]
  418dd6:	add    rdi,rdx
  418dd9:	mov    QWORD PTR [rbp-0x8],rdi
  418ddd:	jmp    418dea <main@@Base+0x49fa>
  418de2:	mov    QWORD PTR [rbp-0x8],0x0
  418dea:	mov    rax,QWORD PTR [rbp-0x8]
  418dee:	add    rsp,0x40
  418df2:	pop    rbp
  418df3:	ret    
  418df4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418dfe:	xchg   ax,ax
  418e00:	push   rbp
  418e01:	mov    rbp,rsp
  418e04:	sub    rsp,0x20
  418e08:	mov    QWORD PTR [rbp-0x8],rdi
  418e0c:	mov    QWORD PTR [rbp-0x10],rsi
  418e10:	mov    rsi,QWORD PTR [rbp-0x8]
  418e14:	mov    rdi,QWORD PTR [rbp-0x10]
  418e18:	shl    rdi,0x2
  418e1c:	add    rsi,rdi
  418e1f:	mov    QWORD PTR [rbp-0x18],rsi
  418e23:	mov    rsi,QWORD PTR [rbp-0x8]
  418e27:	mov    rdi,rsi
  418e2a:	call   416db0 <main@@Base+0x29c0>
  418e2f:	cmp    rax,QWORD PTR [rbp-0x10]
  418e33:	jbe    418e4d <main@@Base+0x4a5d>
  418e39:	mov    al,0x1
  418e3b:	test   al,0x1
  418e3d:	jne    418e48 <main@@Base+0x4a58>
  418e43:	jmp    418e4d <main@@Base+0x4a5d>
  418e48:	jmp    418e6c <main@@Base+0x4a7c>
  418e4d:	lea    rdi,[rip+0xd665]        # 4264b9 <_IO_stdin_used@@Base+0x34b9>
  418e54:	lea    rsi,[rip+0xd695]        # 4264f0 <_IO_stdin_used@@Base+0x34f0>
  418e5b:	mov    edx,0x77
  418e60:	lea    rcx,[rip+0xeb06]        # 42796d <_IO_stdin_used@@Base+0x496d>
  418e67:	call   404090 <__assert_fail@plt>
  418e6c:	mov    rax,QWORD PTR [rbp-0x18]
  418e70:	mov    rcx,QWORD PTR [rbp-0x18]
  418e74:	mov    rdi,rcx
  418e77:	mov    QWORD PTR [rbp-0x20],rax
  418e7b:	call   414930 <main@@Base+0x540>
  418e80:	mov    eax,eax
  418e82:	mov    ecx,eax
  418e84:	mov    rdi,QWORD PTR [rbp-0x20]
  418e88:	add    rdi,rcx
  418e8b:	add    rdi,0x4
  418e8f:	mov    rax,rdi
  418e92:	add    rsp,0x20
  418e96:	pop    rbp
  418e97:	ret    
  418e98:	nop    DWORD PTR [rax+rax*1+0x0]
  418ea0:	push   rbp
  418ea1:	mov    rbp,rsp
  418ea4:	sub    rsp,0x20
  418ea8:	mov    QWORD PTR [rbp-0x8],rdi
  418eac:	mov    DWORD PTR [rbp-0xc],esi
  418eaf:	cmp    DWORD PTR [rbp-0xc],0x0
  418eb3:	je     418ee8 <main@@Base+0x4af8>
  418eb9:	mov    rdi,QWORD PTR [rbp-0x8]
  418ebd:	mov    esi,0xd
  418ec2:	call   41d5d0 <flatcc_builder_table_add_offset@@Base>
  418ec7:	mov    QWORD PTR [rbp-0x18],rax
  418ecb:	cmp    rax,0x0
  418ecf:	je     418ee8 <main@@Base+0x4af8>
  418ed5:	xor    eax,eax
  418ed7:	mov    ecx,DWORD PTR [rbp-0xc]
  418eda:	mov    rdx,QWORD PTR [rbp-0x18]
  418ede:	mov    DWORD PTR [rdx],ecx
  418ee0:	mov    DWORD PTR [rbp-0x1c],eax
  418ee3:	jmp    418ef5 <main@@Base+0x4b05>
  418ee8:	mov    eax,0xffffffff
  418eed:	mov    DWORD PTR [rbp-0x1c],eax
  418ef0:	jmp    418ef5 <main@@Base+0x4b05>
  418ef5:	mov    eax,DWORD PTR [rbp-0x1c]
  418ef8:	add    rsp,0x20
  418efc:	pop    rbp
  418efd:	ret    
  418efe:	xchg   ax,ax
  418f00:	push   rbp
  418f01:	mov    rbp,rsp
  418f04:	sub    rsp,0x40
  418f08:	mov    QWORD PTR [rbp-0x10],rdi
  418f0c:	mov    WORD PTR [rbp-0x1a],0x0
  418f12:	cmp    QWORD PTR [rbp-0x10],0x0
  418f17:	je     418f31 <main@@Base+0x4b41>
  418f1d:	mov    al,0x1
  418f1f:	test   al,0x1
  418f21:	jne    418f2c <main@@Base+0x4b3c>
  418f27:	jmp    418f31 <main@@Base+0x4b41>
  418f2c:	jmp    418f50 <main@@Base+0x4b60>
  418f31:	lea    rdi,[rip+0xcb60]        # 425a98 <_IO_stdin_used@@Base+0x2a98>
  418f38:	lea    rsi,[rip+0xcb7f]        # 425abe <_IO_stdin_used@@Base+0x2abe>
  418f3f:	mov    edx,0x2d0
  418f44:	lea    rcx,[rip+0xeacc]        # 427a17 <_IO_stdin_used@@Base+0x4a17>
  418f4b:	call   404090 <__assert_fail@plt>
  418f50:	mov    WORD PTR [rbp-0x1c],0xd
  418f56:	mov    rax,QWORD PTR [rbp-0x10]
  418f5a:	mov    rcx,QWORD PTR [rbp-0x10]
  418f5e:	mov    rdi,rcx
  418f61:	mov    QWORD PTR [rbp-0x30],rax
  418f65:	call   414960 <main@@Base+0x570>
  418f6a:	xor    edx,edx
  418f6c:	mov    ecx,edx
  418f6e:	movsxd rdi,eax
  418f71:	sub    rcx,rdi
  418f74:	mov    rdi,QWORD PTR [rbp-0x30]
  418f78:	add    rdi,rcx
  418f7b:	mov    QWORD PTR [rbp-0x28],rdi
  418f7f:	mov    rcx,QWORD PTR [rbp-0x28]
  418f83:	mov    rdi,rcx
  418f86:	call   414980 <main@@Base+0x590>
  418f8b:	movzx  edx,ax
  418f8e:	mov    ecx,edx
  418f90:	movzx  edx,WORD PTR [rbp-0x1c]
  418f94:	add    edx,0x3
  418f97:	movsxd rdi,edx
  418f9a:	shl    rdi,0x1
  418f9e:	cmp    rcx,rdi
  418fa1:	jb     418fc9 <main@@Base+0x4bd9>
  418fa7:	mov    rax,QWORD PTR [rbp-0x28]
  418fab:	movzx  ecx,WORD PTR [rbp-0x1c]
  418faf:	movsxd rdx,ecx
  418fb2:	shl    rdx,0x1
  418fb6:	add    rax,rdx
  418fb9:	add    rax,0x4
  418fbd:	mov    rdi,rax
  418fc0:	call   414980 <main@@Base+0x590>
  418fc5:	mov    WORD PTR [rbp-0x1a],ax
  418fc9:	cmp    WORD PTR [rbp-0x1a],0x0
  418fce:	je     419012 <main@@Base+0x4c22>
  418fd4:	mov    rax,QWORD PTR [rbp-0x10]
  418fd8:	movzx  ecx,WORD PTR [rbp-0x1a]
  418fdc:	movsxd rdx,ecx
  418fdf:	add    rax,rdx
  418fe2:	mov    QWORD PTR [rbp-0x18],rax
  418fe6:	mov    rax,QWORD PTR [rbp-0x18]
  418fea:	add    rax,0x4
  418fee:	mov    rdx,QWORD PTR [rbp-0x18]
  418ff2:	mov    rdi,rdx
  418ff5:	mov    QWORD PTR [rbp-0x38],rax
  418ff9:	call   414930 <main@@Base+0x540>
  418ffe:	mov    eax,eax
  419000:	mov    edx,eax
  419002:	mov    rdi,QWORD PTR [rbp-0x38]
  419006:	add    rdi,rdx
  419009:	mov    QWORD PTR [rbp-0x8],rdi
  41900d:	jmp    41901a <main@@Base+0x4c2a>
  419012:	mov    QWORD PTR [rbp-0x8],0x0
  41901a:	mov    rax,QWORD PTR [rbp-0x8]
  41901e:	add    rsp,0x40
  419022:	pop    rbp
  419023:	ret    
  419024:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41902e:	xchg   ax,ax
  419030:	push   rbp
  419031:	mov    rbp,rsp
  419034:	sub    rsp,0x40
  419038:	mov    al,cl
  41903a:	mov    r8w,dx
  41903e:	mov    r9b,sil
  419041:	mov    QWORD PTR [rbp-0x10],rdi
  419045:	vmovss DWORD PTR [rbp-0x14],xmm0
  41904a:	vmovss DWORD PTR [rbp-0x18],xmm1
  41904f:	vmovss DWORD PTR [rbp-0x1c],xmm2
  419054:	vmovsd QWORD PTR [rbp-0x28],xmm3
  419059:	mov    BYTE PTR [rbp-0x29],r9b
  41905d:	mov    WORD PTR [rbp-0x2c],r8w
  419062:	mov    BYTE PTR [rbp-0x2d],al
  419065:	mov    rdi,QWORD PTR [rbp-0x10]
  419069:	call   4190d0 <main@@Base+0x4ce0>
  41906e:	mov    QWORD PTR [rbp-0x38],rax
  419072:	cmp    QWORD PTR [rbp-0x38],0x0
  419077:	jne    419089 <main@@Base+0x4c99>
  41907d:	mov    DWORD PTR [rbp-0x4],0x0
  419084:	jmp    4190c7 <main@@Base+0x4cd7>
  419089:	mov    rdi,QWORD PTR [rbp-0x38]
  41908d:	vmovss xmm0,DWORD PTR [rbp-0x14]
  419092:	vmovss xmm1,DWORD PTR [rbp-0x18]
  419097:	vmovss xmm2,DWORD PTR [rbp-0x1c]
  41909c:	vmovsd xmm3,QWORD PTR [rbp-0x28]
  4190a1:	mov    al,BYTE PTR [rbp-0x29]
  4190a4:	mov    cx,WORD PTR [rbp-0x2c]
  4190a8:	movsx  esi,al
  4190ab:	movsx  edx,cx
  4190ae:	movsx  ecx,BYTE PTR [rbp-0x2d]
  4190b2:	call   419100 <main@@Base+0x4d10>
  4190b7:	mov    rdi,QWORD PTR [rbp-0x10]
  4190bb:	mov    QWORD PTR [rbp-0x40],rax
  4190bf:	call   4191c0 <main@@Base+0x4dd0>
  4190c4:	mov    DWORD PTR [rbp-0x4],eax
  4190c7:	mov    eax,DWORD PTR [rbp-0x4]
  4190ca:	add    rsp,0x40
  4190ce:	pop    rbp
  4190cf:	ret    
  4190d0:	push   rbp
  4190d1:	mov    rbp,rsp
  4190d4:	sub    rsp,0x10
  4190d8:	mov    eax,0x20
  4190dd:	mov    esi,eax
  4190df:	mov    QWORD PTR [rbp-0x8],rdi
  4190e3:	mov    rdi,QWORD PTR [rbp-0x8]
  4190e7:	mov    edx,0x10
  4190ec:	call   41acf0 <flatcc_builder_start_struct@@Base>
  4190f1:	add    rsp,0x10
  4190f5:	pop    rbp
  4190f6:	ret    
  4190f7:	nop    WORD PTR [rax+rax*1+0x0]
  419100:	push   rbp
  419101:	mov    rbp,rsp
  419104:	sub    rsp,0x50
  419108:	mov    al,cl
  41910a:	mov    r8w,dx
  41910e:	mov    r9b,sil
  419111:	mov    QWORD PTR [rbp-0x8],rdi
  419115:	vmovss DWORD PTR [rbp-0xc],xmm0
  41911a:	vmovss DWORD PTR [rbp-0x10],xmm1
  41911f:	vmovss DWORD PTR [rbp-0x14],xmm2
  419124:	vmovsd QWORD PTR [rbp-0x20],xmm3
  419129:	mov    BYTE PTR [rbp-0x21],r9b
  41912d:	mov    WORD PTR [rbp-0x24],r8w
  419132:	mov    BYTE PTR [rbp-0x25],al
  419135:	mov    rdi,QWORD PTR [rbp-0x8]
  419139:	vmovss xmm0,DWORD PTR [rbp-0xc]
  41913e:	call   415390 <main@@Base+0xfa0>
  419143:	mov    rdi,QWORD PTR [rbp-0x8]
  419147:	add    rdi,0x4
  41914b:	vmovss xmm0,DWORD PTR [rbp-0x10]
  419150:	mov    QWORD PTR [rbp-0x30],rax
  419154:	call   415390 <main@@Base+0xfa0>
  419159:	mov    rdi,QWORD PTR [rbp-0x8]
  41915d:	add    rdi,0x8
  419161:	vmovss xmm0,DWORD PTR [rbp-0x14]
  419166:	mov    QWORD PTR [rbp-0x38],rax
  41916a:	call   415390 <main@@Base+0xfa0>
  41916f:	mov    rdi,QWORD PTR [rbp-0x8]
  419173:	add    rdi,0x10
  419177:	vmovsd xmm0,QWORD PTR [rbp-0x20]
  41917c:	mov    QWORD PTR [rbp-0x40],rax
  419180:	call   4152b0 <main@@Base+0xec0>
  419185:	mov    r9b,BYTE PTR [rbp-0x21]
  419189:	mov    rdi,QWORD PTR [rbp-0x8]
  41918d:	mov    BYTE PTR [rdi+0x18],r9b
  419191:	mov    rdi,QWORD PTR [rbp-0x8]
  419195:	add    rdi,0x1a
  419199:	mov    r8w,WORD PTR [rbp-0x24]
  41919e:	movsx  esi,r8w
  4191a2:	movsx  edx,BYTE PTR [rbp-0x25]
  4191a6:	mov    QWORD PTR [rbp-0x48],rax
  4191aa:	call   4191e0 <main@@Base+0x4df0>
  4191af:	mov    rdi,QWORD PTR [rbp-0x8]
  4191b3:	mov    QWORD PTR [rbp-0x50],rax
  4191b7:	mov    rax,rdi
  4191ba:	add    rsp,0x50
  4191be:	pop    rbp
  4191bf:	ret    
  4191c0:	push   rbp
  4191c1:	mov    rbp,rsp
  4191c4:	sub    rsp,0x10
  4191c8:	mov    QWORD PTR [rbp-0x8],rdi
  4191cc:	mov    rdi,QWORD PTR [rbp-0x8]
  4191d0:	call   41aea0 <flatcc_builder_end_struct@@Base>
  4191d5:	add    rsp,0x10
  4191d9:	pop    rbp
  4191da:	ret    
  4191db:	nop    DWORD PTR [rax+rax*1+0x0]
  4191e0:	push   rbp
  4191e1:	mov    rbp,rsp
  4191e4:	sub    rsp,0x20
  4191e8:	mov    al,dl
  4191ea:	mov    cx,si
  4191ed:	mov    QWORD PTR [rbp-0x8],rdi
  4191f1:	mov    WORD PTR [rbp-0xa],cx
  4191f5:	mov    BYTE PTR [rbp-0xb],al
  4191f8:	mov    rdi,QWORD PTR [rbp-0x8]
  4191fc:	movsx  esi,WORD PTR [rbp-0xa]
  419200:	call   4153e0 <main@@Base+0xff0>
  419205:	mov    r8b,BYTE PTR [rbp-0xb]
  419209:	mov    rdi,QWORD PTR [rbp-0x8]
  41920d:	mov    BYTE PTR [rdi+0x2],r8b
  419211:	mov    rdi,QWORD PTR [rbp-0x8]
  419215:	mov    QWORD PTR [rbp-0x18],rax
  419219:	mov    rax,rdi
  41921c:	add    rsp,0x20
  419220:	pop    rbp
  419221:	ret    
  419222:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41922c:	nop    DWORD PTR [rax+0x0]

0000000000419230 <flatcc_builder_default_alloc@@Base>:
  419230:	push   rbp
  419231:	mov    rbp,rsp
  419234:	sub    rsp,0x50
  419238:	mov    QWORD PTR [rbp-0x10],rdi
  41923c:	mov    QWORD PTR [rbp-0x18],rsi
  419240:	mov    QWORD PTR [rbp-0x20],rdx
  419244:	mov    DWORD PTR [rbp-0x24],ecx
  419247:	mov    DWORD PTR [rbp-0x28],r8d
  41924b:	cmp    QWORD PTR [rbp-0x20],0x0
  419250:	jne    419293 <flatcc_builder_default_alloc@@Base+0x63>
  419256:	mov    rax,QWORD PTR [rbp-0x18]
  41925a:	cmp    QWORD PTR [rax],0x0
  41925e:	je     419287 <flatcc_builder_default_alloc@@Base+0x57>
  419264:	mov    rax,QWORD PTR [rbp-0x18]
  419268:	mov    rdi,QWORD PTR [rax]
  41926b:	call   404030 <free@plt>
  419270:	mov    rax,QWORD PTR [rbp-0x18]
  419274:	mov    QWORD PTR [rax],0x0
  41927b:	mov    rax,QWORD PTR [rbp-0x18]
  41927f:	mov    QWORD PTR [rax+0x8],0x0
  419287:	mov    DWORD PTR [rbp-0x4],0x0
  41928e:	jmp    4193dc <flatcc_builder_default_alloc@@Base+0x1ac>
  419293:	mov    eax,DWORD PTR [rbp-0x28]
  419296:	add    eax,0xffffffff
  419299:	mov    ecx,eax
  41929b:	sub    eax,0x6
  41929e:	mov    QWORD PTR [rbp-0x40],rcx
  4192a2:	mov    DWORD PTR [rbp-0x44],eax
  4192a5:	ja     4192f3 <flatcc_builder_default_alloc@@Base+0xc3>
  4192ab:	lea    rax,[rip+0xe8de]        # 427b90 <_IO_stdin_used@@Base+0x4b90>
  4192b2:	mov    rcx,QWORD PTR [rbp-0x40]
  4192b6:	movsxd rdx,DWORD PTR [rax+rcx*4]
  4192ba:	add    rdx,rax
  4192bd:	jmp    rdx
  4192bf:	mov    QWORD PTR [rbp-0x38],0x100
  4192c7:	jmp    4192fb <flatcc_builder_default_alloc@@Base+0xcb>
  4192cc:	mov    rax,QWORD PTR [rbp-0x20]
  4192d0:	mov    QWORD PTR [rbp-0x38],rax
  4192d4:	jmp    4192fb <flatcc_builder_default_alloc@@Base+0xcb>
  4192d9:	mov    QWORD PTR [rbp-0x38],0x120
  4192e1:	jmp    4192fb <flatcc_builder_default_alloc@@Base+0xcb>
  4192e6:	mov    QWORD PTR [rbp-0x38],0x40
  4192ee:	jmp    4192fb <flatcc_builder_default_alloc@@Base+0xcb>
  4192f3:	mov    QWORD PTR [rbp-0x38],0x20
  4192fb:	jmp    419300 <flatcc_builder_default_alloc@@Base+0xd0>
  419300:	mov    rax,QWORD PTR [rbp-0x38]
  419304:	cmp    rax,QWORD PTR [rbp-0x20]
  419308:	jae    41931f <flatcc_builder_default_alloc@@Base+0xef>
  41930e:	mov    rax,QWORD PTR [rbp-0x38]
  419312:	shl    rax,0x1
  419316:	mov    QWORD PTR [rbp-0x38],rax
  41931a:	jmp    419300 <flatcc_builder_default_alloc@@Base+0xd0>
  41931f:	mov    rax,QWORD PTR [rbp-0x20]
  419323:	mov    rcx,QWORD PTR [rbp-0x18]
  419327:	cmp    rax,QWORD PTR [rcx+0x8]
  41932b:	ja     419353 <flatcc_builder_default_alloc@@Base+0x123>
  419331:	mov    rax,QWORD PTR [rbp-0x18]
  419335:	mov    rax,QWORD PTR [rax+0x8]
  419339:	shr    rax,0x1
  41933d:	cmp    rax,QWORD PTR [rbp-0x38]
  419341:	jb     419353 <flatcc_builder_default_alloc@@Base+0x123>
  419347:	mov    DWORD PTR [rbp-0x4],0x0
  41934e:	jmp    4193dc <flatcc_builder_default_alloc@@Base+0x1ac>
  419353:	mov    rax,QWORD PTR [rbp-0x18]
  419357:	mov    rdi,QWORD PTR [rax]
  41935a:	mov    rsi,QWORD PTR [rbp-0x38]
  41935e:	call   404110 <realloc@plt>
  419363:	mov    QWORD PTR [rbp-0x30],rax
  419367:	cmp    rax,0x0
  41936b:	jne    41937d <flatcc_builder_default_alloc@@Base+0x14d>
  419371:	mov    DWORD PTR [rbp-0x4],0xffffffff
  419378:	jmp    4193dc <flatcc_builder_default_alloc@@Base+0x1ac>
  41937d:	cmp    DWORD PTR [rbp-0x24],0x0
  419381:	je     4193be <flatcc_builder_default_alloc@@Base+0x18e>
  419387:	mov    rax,QWORD PTR [rbp-0x18]
  41938b:	mov    rax,QWORD PTR [rax+0x8]
  41938f:	cmp    rax,QWORD PTR [rbp-0x38]
  419393:	jae    4193be <flatcc_builder_default_alloc@@Base+0x18e>
  419399:	xor    esi,esi
  41939b:	mov    rax,QWORD PTR [rbp-0x30]
  41939f:	mov    rcx,QWORD PTR [rbp-0x18]
  4193a3:	add    rax,QWORD PTR [rcx+0x8]
  4193a7:	mov    rcx,QWORD PTR [rbp-0x38]
  4193ab:	mov    rdx,QWORD PTR [rbp-0x18]
  4193af:	sub    rcx,QWORD PTR [rdx+0x8]
  4193b3:	mov    rdi,rax
  4193b6:	mov    rdx,rcx
  4193b9:	call   4040a0 <memset@plt>
  4193be:	mov    rax,QWORD PTR [rbp-0x30]
  4193c2:	mov    rcx,QWORD PTR [rbp-0x18]
  4193c6:	mov    QWORD PTR [rcx],rax
  4193c9:	mov    rax,QWORD PTR [rbp-0x38]
  4193cd:	mov    rcx,QWORD PTR [rbp-0x18]
  4193d1:	mov    QWORD PTR [rcx+0x8],rax
  4193d5:	mov    DWORD PTR [rbp-0x4],0x0
  4193dc:	mov    eax,DWORD PTR [rbp-0x4]
  4193df:	add    rsp,0x50
  4193e3:	pop    rbp
  4193e4:	ret    
  4193e5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4193ef:	nop

00000000004193f0 <flatcc_builder_flush_vtable_cache@@Base>:
  4193f0:	push   rbp
  4193f1:	mov    rbp,rsp
  4193f4:	sub    rsp,0x10
  4193f8:	mov    QWORD PTR [rbp-0x8],rdi
  4193fc:	mov    rdi,QWORD PTR [rbp-0x8]
  419400:	add    rdi,0x58
  419404:	add    rdi,0x50
  419408:	mov    QWORD PTR [rbp-0x10],rdi
  41940c:	mov    rdi,QWORD PTR [rbp-0x8]
  419410:	cmp    QWORD PTR [rdi+0xd8],0x0
  419418:	jne    419423 <flatcc_builder_flush_vtable_cache@@Base+0x33>
  41941e:	jmp    419455 <flatcc_builder_flush_vtable_cache@@Base+0x65>
  419423:	xor    esi,esi
  419425:	mov    rax,QWORD PTR [rbp-0x10]
  419429:	mov    rdi,QWORD PTR [rax]
  41942c:	mov    rax,QWORD PTR [rbp-0x10]
  419430:	mov    rdx,QWORD PTR [rax+0x8]
  419434:	call   4040a0 <memset@plt>
  419439:	mov    rax,QWORD PTR [rbp-0x8]
  41943d:	mov    DWORD PTR [rax+0xe4],0x10
  419447:	mov    rax,QWORD PTR [rbp-0x8]
  41944b:	mov    DWORD PTR [rax+0xe0],0x0
  419455:	add    rsp,0x10
  419459:	pop    rbp
  41945a:	ret    
  41945b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000419460 <flatcc_builder_custom_init@@Base>:
  419460:	push   rbp
  419461:	mov    rbp,rsp
  419464:	sub    rsp,0x30
  419468:	xor    eax,eax
  41946a:	mov    r9d,0x188
  419470:	mov    r10d,r9d
  419473:	mov    QWORD PTR [rbp-0x8],rdi
  419477:	mov    QWORD PTR [rbp-0x10],rsi
  41947b:	mov    QWORD PTR [rbp-0x18],rdx
  41947f:	mov    QWORD PTR [rbp-0x20],rcx
  419483:	mov    QWORD PTR [rbp-0x28],r8
  419487:	mov    rcx,QWORD PTR [rbp-0x8]
  41948b:	mov    rdi,rcx
  41948e:	mov    esi,eax
  419490:	mov    rdx,r10
  419493:	call   4040a0 <memset@plt>
  419498:	cmp    QWORD PTR [rbp-0x10],0x0
  41949d:	jne    4194ca <flatcc_builder_custom_init@@Base+0x6a>
  4194a3:	lea    rax,[rip+0x5e96]        # 41f340 <flatcc_emitter@@Base>
  4194aa:	mov    rcx,QWORD PTR [rbp-0x8]
  4194ae:	mov    DWORD PTR [rcx+0x128],0x1
  4194b8:	mov    QWORD PTR [rbp-0x10],rax
  4194bc:	mov    rax,QWORD PTR [rbp-0x8]
  4194c0:	add    rax,0x130
  4194c6:	mov    QWORD PTR [rbp-0x18],rax
  4194ca:	cmp    QWORD PTR [rbp-0x20],0x0
  4194cf:	jne    4194e0 <flatcc_builder_custom_init@@Base+0x80>
  4194d5:	lea    rax,[rip+0xfffffffffffffd54]        # 419230 <flatcc_builder_default_alloc@@Base>
  4194dc:	mov    QWORD PTR [rbp-0x20],rax
  4194e0:	xor    eax,eax
  4194e2:	mov    rcx,QWORD PTR [rbp-0x28]
  4194e6:	mov    rdx,QWORD PTR [rbp-0x8]
  4194ea:	mov    QWORD PTR [rdx+0x40],rcx
  4194ee:	mov    rcx,QWORD PTR [rbp-0x20]
  4194f2:	mov    rdx,QWORD PTR [rbp-0x8]
  4194f6:	mov    QWORD PTR [rdx+0x50],rcx
  4194fa:	mov    rcx,QWORD PTR [rbp-0x18]
  4194fe:	mov    rdx,QWORD PTR [rbp-0x8]
  419502:	mov    QWORD PTR [rdx+0x38],rcx
  419506:	mov    rcx,QWORD PTR [rbp-0x10]
  41950a:	mov    rdx,QWORD PTR [rbp-0x8]
  41950e:	mov    QWORD PTR [rdx+0x48],rcx
  419512:	add    rsp,0x30
  419516:	pop    rbp
  419517:	ret    
  419518:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000419520 <flatcc_builder_init@@Base>:
  419520:	push   rbp
  419521:	mov    rbp,rsp
  419524:	sub    rsp,0x10
  419528:	xor    eax,eax
  41952a:	mov    ecx,eax
  41952c:	mov    QWORD PTR [rbp-0x8],rdi
  419530:	mov    rdi,QWORD PTR [rbp-0x8]
  419534:	mov    rsi,rcx
  419537:	mov    rdx,rcx
  41953a:	mov    QWORD PTR [rbp-0x10],rcx
  41953e:	mov    r8,QWORD PTR [rbp-0x10]
  419542:	call   419460 <flatcc_builder_custom_init@@Base>
  419547:	add    rsp,0x10
  41954b:	pop    rbp
  41954c:	ret    
  41954d:	nop    DWORD PTR [rax]

0000000000419550 <flatcc_builder_custom_reset@@Base>:
  419550:	push   rbp
  419551:	mov    rbp,rsp
  419554:	sub    rsp,0x30
  419558:	mov    QWORD PTR [rbp-0x10],rdi
  41955c:	mov    DWORD PTR [rbp-0x14],esi
  41955f:	mov    DWORD PTR [rbp-0x18],edx
  419562:	mov    DWORD PTR [rbp-0x24],0x0
  419569:	cmp    DWORD PTR [rbp-0x24],0x8
  41956d:	jge    419658 <flatcc_builder_custom_reset@@Base+0x108>
  419573:	mov    rax,QWORD PTR [rbp-0x10]
  419577:	add    rax,0x58
  41957b:	movsxd rcx,DWORD PTR [rbp-0x24]
  41957f:	shl    rcx,0x4
  419583:	add    rax,rcx
  419586:	mov    QWORD PTR [rbp-0x20],rax
  41958a:	mov    rax,QWORD PTR [rbp-0x20]
  41958e:	cmp    QWORD PTR [rax],0x0
  419592:	je     41960d <flatcc_builder_custom_reset@@Base+0xbd>
  419598:	cmp    DWORD PTR [rbp-0x24],0x5
  41959c:	je     4195f2 <flatcc_builder_custom_reset@@Base+0xa2>
  4195a2:	cmp    DWORD PTR [rbp-0x18],0x0
  4195a6:	je     4195f2 <flatcc_builder_custom_reset@@Base+0xa2>
  4195ac:	mov    eax,0x1
  4195b1:	mov    edx,eax
  4195b3:	mov    rcx,QWORD PTR [rbp-0x10]
  4195b7:	mov    rcx,QWORD PTR [rcx+0x50]
  4195bb:	mov    rsi,QWORD PTR [rbp-0x10]
  4195bf:	mov    rdi,QWORD PTR [rsi+0x40]
  4195c3:	mov    rsi,QWORD PTR [rbp-0x20]
  4195c7:	mov    r8d,DWORD PTR [rbp-0x24]
  4195cb:	mov    eax,0x1
  4195d0:	mov    QWORD PTR [rbp-0x30],rcx
  4195d4:	mov    ecx,eax
  4195d6:	mov    r9,QWORD PTR [rbp-0x30]
  4195da:	call   r9
  4195dd:	cmp    eax,0x0
  4195e0:	je     4195f2 <flatcc_builder_custom_reset@@Base+0xa2>
  4195e6:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4195ed:	jmp    419799 <flatcc_builder_custom_reset@@Base+0x249>
  4195f2:	xor    esi,esi
  4195f4:	mov    rax,QWORD PTR [rbp-0x20]
  4195f8:	mov    rdi,QWORD PTR [rax]
  4195fb:	mov    rax,QWORD PTR [rbp-0x20]
  4195ff:	mov    rdx,QWORD PTR [rax+0x8]
  419603:	call   4040a0 <memset@plt>
  419608:	jmp    419645 <flatcc_builder_custom_reset@@Base+0xf5>
  41960d:	mov    rax,QWORD PTR [rbp-0x20]
  419611:	cmp    QWORD PTR [rax+0x8],0x0
  419616:	jne    419621 <flatcc_builder_custom_reset@@Base+0xd1>
  41961c:	jmp    419640 <flatcc_builder_custom_reset@@Base+0xf0>
  419621:	lea    rdi,[rip+0xe788]        # 427db0 <flatcc_builder_padding_base@@Base+0x200>
  419628:	lea    rsi,[rip+0xe793]        # 427dc2 <flatcc_builder_padding_base@@Base+0x212>
  41962f:	mov    edx,0x1b2
  419634:	lea    rcx,[rip+0xe7e7]        # 427e22 <flatcc_builder_padding_base@@Base+0x272>
  41963b:	call   404090 <__assert_fail@plt>
  419640:	jmp    419645 <flatcc_builder_custom_reset@@Base+0xf5>
  419645:	jmp    41964a <flatcc_builder_custom_reset@@Base+0xfa>
  41964a:	mov    eax,DWORD PTR [rbp-0x24]
  41964d:	add    eax,0x1
  419650:	mov    DWORD PTR [rbp-0x24],eax
  419653:	jmp    419569 <flatcc_builder_custom_reset@@Base+0x19>
  419658:	mov    rax,QWORD PTR [rbp-0x10]
  41965c:	mov    DWORD PTR [rax+0xe0],0x0
  419666:	mov    rax,QWORD PTR [rbp-0x10]
  41966a:	cmp    DWORD PTR [rax+0xe4],0x0
  419671:	jbe    419685 <flatcc_builder_custom_reset@@Base+0x135>
  419677:	mov    rax,QWORD PTR [rbp-0x10]
  41967b:	mov    DWORD PTR [rax+0xe4],0x10
  419685:	mov    rax,QWORD PTR [rbp-0x10]
  419689:	mov    WORD PTR [rax+0xe8],0x0
  419692:	mov    rax,QWORD PTR [rbp-0x10]
  419696:	mov    DWORD PTR [rax+0xf0],0x0
  4196a0:	mov    rax,QWORD PTR [rbp-0x10]
  4196a4:	mov    DWORD PTR [rax+0xf4],0x0
  4196ae:	mov    rax,QWORD PTR [rbp-0x10]
  4196b2:	mov    DWORD PTR [rax+0x104],0x0
  4196bc:	mov    rax,QWORD PTR [rbp-0x10]
  4196c0:	mov    DWORD PTR [rax+0x108],0x0
  4196ca:	mov    rax,QWORD PTR [rbp-0x10]
  4196ce:	mov    DWORD PTR [rax+0x20],0x0
  4196d5:	mov    rax,QWORD PTR [rbp-0x10]
  4196d9:	mov    DWORD PTR [rax+0x24],0x0
  4196e0:	mov    rax,QWORD PTR [rbp-0x10]
  4196e4:	mov    DWORD PTR [rax+0xfc],0x0
  4196ee:	mov    rax,QWORD PTR [rbp-0x10]
  4196f2:	mov    DWORD PTR [rax+0x100],0x0
  4196fc:	mov    rax,QWORD PTR [rbp-0x10]
  419700:	mov    rax,QWORD PTR [rax+0x68]
  419704:	mov    rcx,QWORD PTR [rbp-0x10]
  419708:	mov    QWORD PTR [rcx+0x18],rax
  41970c:	mov    rax,QWORD PTR [rbp-0x10]
  419710:	mov    rax,QWORD PTR [rax+0x88]
  419717:	mov    rcx,QWORD PTR [rbp-0x10]
  41971b:	mov    QWORD PTR [rcx],rax
  41971e:	mov    rax,QWORD PTR [rbp-0x10]
  419722:	mov    rax,QWORD PTR [rax+0x58]
  419726:	mov    rcx,QWORD PTR [rbp-0x10]
  41972a:	mov    QWORD PTR [rcx+0x8],rax
  41972e:	mov    rax,QWORD PTR [rbp-0x10]
  419732:	mov    QWORD PTR [rax+0x30],0x0
  41973a:	cmp    DWORD PTR [rbp-0x14],0x0
  41973e:	je     41976f <flatcc_builder_custom_reset@@Base+0x21f>
  419744:	mov    rax,QWORD PTR [rbp-0x10]
  419748:	mov    QWORD PTR [rax+0x118],0x0
  419753:	mov    rax,QWORD PTR [rbp-0x10]
  419757:	mov    DWORD PTR [rax+0x120],0x0
  419761:	mov    rax,QWORD PTR [rbp-0x10]
  419765:	mov    DWORD PTR [rax+0x124],0x0
  41976f:	mov    rax,QWORD PTR [rbp-0x10]
  419773:	cmp    DWORD PTR [rax+0x128],0x0
  41977a:	je     419792 <flatcc_builder_custom_reset@@Base+0x242>
  419780:	mov    rax,QWORD PTR [rbp-0x10]
  419784:	add    rax,0x130
  41978a:	mov    rdi,rax
  41978d:	call   41f100 <flatcc_emitter_reset@@Base>
  419792:	mov    DWORD PTR [rbp-0x4],0x0
  419799:	mov    eax,DWORD PTR [rbp-0x4]
  41979c:	add    rsp,0x30
  4197a0:	pop    rbp
  4197a1:	ret    
  4197a2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4197ac:	nop    DWORD PTR [rax+0x0]

00000000004197b0 <flatcc_builder_reset@@Base>:
  4197b0:	push   rbp
  4197b1:	mov    rbp,rsp
  4197b4:	sub    rsp,0x10
  4197b8:	xor    eax,eax
  4197ba:	mov    QWORD PTR [rbp-0x8],rdi
  4197be:	mov    rdi,QWORD PTR [rbp-0x8]
  4197c2:	mov    esi,eax
  4197c4:	mov    edx,eax
  4197c6:	call   419550 <flatcc_builder_custom_reset@@Base>
  4197cb:	add    rsp,0x10
  4197cf:	pop    rbp
  4197d0:	ret    
  4197d1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4197db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004197e0 <flatcc_builder_clear@@Base>:
  4197e0:	push   rbp
  4197e1:	mov    rbp,rsp
  4197e4:	sub    rsp,0x30
  4197e8:	mov    QWORD PTR [rbp-0x8],rdi
  4197ec:	mov    DWORD PTR [rbp-0x14],0x0
  4197f3:	cmp    DWORD PTR [rbp-0x14],0x8
  4197f7:	jge    419853 <flatcc_builder_clear@@Base+0x73>
  4197fd:	xor    eax,eax
  4197ff:	mov    edx,eax
  419801:	xor    ecx,ecx
  419803:	mov    rsi,QWORD PTR [rbp-0x8]
  419807:	add    rsi,0x58
  41980b:	movsxd rdi,DWORD PTR [rbp-0x14]
  41980f:	shl    rdi,0x4
  419813:	add    rsi,rdi
  419816:	mov    QWORD PTR [rbp-0x10],rsi
  41981a:	mov    rsi,QWORD PTR [rbp-0x8]
  41981e:	mov    rsi,QWORD PTR [rsi+0x50]
  419822:	mov    rdi,QWORD PTR [rbp-0x8]
  419826:	mov    rdi,QWORD PTR [rdi+0x40]
  41982a:	mov    r8,QWORD PTR [rbp-0x10]
  41982e:	mov    eax,DWORD PTR [rbp-0x14]
  419831:	mov    QWORD PTR [rbp-0x20],rsi
  419835:	mov    rsi,r8
  419838:	mov    r8d,eax
  41983b:	mov    r9,QWORD PTR [rbp-0x20]
  41983f:	call   r9
  419842:	mov    DWORD PTR [rbp-0x24],eax
  419845:	mov    eax,DWORD PTR [rbp-0x14]
  419848:	add    eax,0x1
  41984b:	mov    DWORD PTR [rbp-0x14],eax
  41984e:	jmp    4197f3 <flatcc_builder_clear@@Base+0x13>
  419853:	mov    rax,QWORD PTR [rbp-0x8]
  419857:	cmp    DWORD PTR [rax+0x128],0x0
  41985e:	je     419876 <flatcc_builder_clear@@Base+0x96>
  419864:	mov    rax,QWORD PTR [rbp-0x8]
  419868:	add    rax,0x130
  41986e:	mov    rdi,rax
  419871:	call   41f2a0 <flatcc_emitter_clear@@Base>
  419876:	xor    esi,esi
  419878:	mov    eax,0x188
  41987d:	mov    edx,eax
  41987f:	mov    rcx,QWORD PTR [rbp-0x8]
  419883:	mov    rdi,rcx
  419886:	call   4040a0 <memset@plt>
  41988b:	add    rsp,0x30
  41988f:	pop    rbp
  419890:	ret    
  419891:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41989b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004198a0 <flatcc_builder_enter_user_frame_ptr@@Base>:
  4198a0:	push   rbp
  4198a1:	mov    rbp,rsp
  4198a4:	sub    rsp,0x20
  4198a8:	xor    r8d,r8d
  4198ab:	mov    QWORD PTR [rbp-0x10],rdi
  4198af:	mov    QWORD PTR [rbp-0x18],rsi
  4198b3:	mov    rsi,QWORD PTR [rbp-0x18]
  4198b7:	add    rsi,0x8
  4198bb:	sub    rsi,0x1
  4198bf:	and    rsi,0xfffffffffffffff8
  4198c3:	add    rsi,0x8
  4198c7:	mov    QWORD PTR [rbp-0x18],rsi
  4198cb:	mov    rdi,QWORD PTR [rbp-0x10]
  4198cf:	mov    rsi,QWORD PTR [rbp-0x10]
  4198d3:	mov    rdx,QWORD PTR [rsi+0x180]
  4198da:	mov    rcx,QWORD PTR [rbp-0x18]
  4198de:	mov    esi,0x7
  4198e3:	call   419980 <flatcc_builder_enter_user_frame_ptr@@Base+0xe0>
  4198e8:	mov    QWORD PTR [rbp-0x20],rax
  4198ec:	cmp    rax,0x0
  4198f0:	jne    419903 <flatcc_builder_enter_user_frame_ptr@@Base+0x63>
  4198f6:	mov    QWORD PTR [rbp-0x8],0x0
  4198fe:	jmp    41996a <flatcc_builder_enter_user_frame_ptr@@Base+0xca>
  419903:	xor    esi,esi
  419905:	mov    rax,QWORD PTR [rbp-0x20]
  419909:	mov    rdx,QWORD PTR [rbp-0x18]
  41990d:	mov    rdi,rax
  419910:	call   4040a0 <memset@plt>
  419915:	mov    rax,QWORD PTR [rbp-0x10]
  419919:	mov    rax,QWORD PTR [rax+0x178]
  419920:	mov    rdx,QWORD PTR [rbp-0x20]
  419924:	mov    rdi,rdx
  419927:	add    rdi,0x8
  41992b:	mov    QWORD PTR [rbp-0x20],rdi
  41992f:	mov    QWORD PTR [rdx],rax
  419932:	mov    rax,QWORD PTR [rbp-0x10]
  419936:	mov    rax,QWORD PTR [rax+0x180]
  41993d:	add    rax,0x8
  419941:	mov    rdx,QWORD PTR [rbp-0x10]
  419945:	mov    QWORD PTR [rdx+0x178],rax
  41994c:	mov    rax,QWORD PTR [rbp-0x18]
  419950:	mov    rdx,QWORD PTR [rbp-0x10]
  419954:	add    rax,QWORD PTR [rdx+0x180]
  41995b:	mov    QWORD PTR [rdx+0x180],rax
  419962:	mov    rax,QWORD PTR [rbp-0x20]
  419966:	mov    QWORD PTR [rbp-0x8],rax
  41996a:	mov    rax,QWORD PTR [rbp-0x8]
  41996e:	add    rsp,0x20
  419972:	pop    rbp
  419973:	ret    
  419974:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41997e:	xchg   ax,ax
  419980:	push   rbp
  419981:	mov    rbp,rsp
  419984:	sub    rsp,0x40
  419988:	mov    QWORD PTR [rbp-0x8],rdi
  41998c:	mov    DWORD PTR [rbp-0xc],esi
  41998f:	mov    QWORD PTR [rbp-0x18],rdx
  419993:	mov    QWORD PTR [rbp-0x20],rcx
  419997:	mov    DWORD PTR [rbp-0x24],r8d
  41999b:	mov    rcx,QWORD PTR [rbp-0x8]
  41999f:	add    rcx,0x58
  4199a3:	movsxd rdx,DWORD PTR [rbp-0xc]
  4199a7:	shl    rdx,0x4
  4199ab:	add    rcx,rdx
  4199ae:	mov    QWORD PTR [rbp-0x30],rcx
  4199b2:	mov    rcx,QWORD PTR [rbp-0x18]
  4199b6:	add    rcx,QWORD PTR [rbp-0x20]
  4199ba:	mov    rdx,QWORD PTR [rbp-0x30]
  4199be:	cmp    rcx,QWORD PTR [rdx+0x8]
  4199c2:	jbe    419a23 <flatcc_builder_enter_user_frame_ptr@@Base+0x183>
  4199c8:	mov    rax,QWORD PTR [rbp-0x8]
  4199cc:	mov    rax,QWORD PTR [rax+0x50]
  4199d0:	mov    rcx,QWORD PTR [rbp-0x8]
  4199d4:	mov    rdi,QWORD PTR [rcx+0x40]
  4199d8:	mov    rsi,QWORD PTR [rbp-0x30]
  4199dc:	mov    rcx,QWORD PTR [rbp-0x18]
  4199e0:	add    rcx,QWORD PTR [rbp-0x20]
  4199e4:	mov    edx,DWORD PTR [rbp-0x24]
  4199e7:	mov    r8d,DWORD PTR [rbp-0xc]
  4199eb:	mov    DWORD PTR [rbp-0x34],edx
  4199ee:	mov    rdx,rcx
  4199f1:	mov    ecx,DWORD PTR [rbp-0x34]
  4199f4:	call   rax
  4199f6:	cmp    eax,0x0
  4199f9:	je     419a1e <flatcc_builder_enter_user_frame_ptr@@Base+0x17e>
  4199ff:	lea    rdi,[rip+0xf57c]        # 428f82 <flatcc_builder_padding_base@@Base+0x13d2>
  419a06:	lea    rsi,[rip+0xe3b5]        # 427dc2 <flatcc_builder_padding_base@@Base+0x212>
  419a0d:	mov    edx,0x134
  419a12:	lea    rcx,[rip+0xf3a3]        # 428dbc <flatcc_builder_padding_base@@Base+0x120c>
  419a19:	call   404090 <__assert_fail@plt>
  419a1e:	jmp    419a23 <flatcc_builder_enter_user_frame_ptr@@Base+0x183>
  419a23:	mov    rax,QWORD PTR [rbp-0x30]
  419a27:	mov    rax,QWORD PTR [rax]
  419a2a:	add    rax,QWORD PTR [rbp-0x18]
  419a2e:	add    rsp,0x40
  419a32:	pop    rbp
  419a33:	ret    
  419a34:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419a3e:	xchg   ax,ax

0000000000419a40 <flatcc_builder_enter_user_frame@@Base>:
  419a40:	push   rbp
  419a41:	mov    rbp,rsp
  419a44:	sub    rsp,0x20
  419a48:	xor    r8d,r8d
  419a4b:	mov    QWORD PTR [rbp-0x10],rdi
  419a4f:	mov    QWORD PTR [rbp-0x18],rsi
  419a53:	mov    rsi,QWORD PTR [rbp-0x18]
  419a57:	add    rsi,0x8
  419a5b:	sub    rsi,0x1
  419a5f:	and    rsi,0xfffffffffffffff8
  419a63:	add    rsi,0x8
  419a67:	mov    QWORD PTR [rbp-0x18],rsi
  419a6b:	mov    rdi,QWORD PTR [rbp-0x10]
  419a6f:	mov    rsi,QWORD PTR [rbp-0x10]
  419a73:	mov    rdx,QWORD PTR [rsi+0x180]
  419a7a:	mov    rcx,QWORD PTR [rbp-0x18]
  419a7e:	mov    esi,0x7
  419a83:	call   419980 <flatcc_builder_enter_user_frame_ptr@@Base+0xe0>
  419a88:	mov    QWORD PTR [rbp-0x20],rax
  419a8c:	cmp    rax,0x0
  419a90:	jne    419aa3 <flatcc_builder_enter_user_frame@@Base+0x63>
  419a96:	mov    QWORD PTR [rbp-0x8],0x0
  419a9e:	jmp    419b11 <flatcc_builder_enter_user_frame@@Base+0xd1>
  419aa3:	xor    esi,esi
  419aa5:	mov    rax,QWORD PTR [rbp-0x20]
  419aa9:	mov    rdx,QWORD PTR [rbp-0x18]
  419aad:	mov    rdi,rax
  419ab0:	call   4040a0 <memset@plt>
  419ab5:	mov    rax,QWORD PTR [rbp-0x10]
  419ab9:	mov    rax,QWORD PTR [rax+0x178]
  419ac0:	mov    rdx,QWORD PTR [rbp-0x20]
  419ac4:	mov    rdi,rdx
  419ac7:	add    rdi,0x8
  419acb:	mov    QWORD PTR [rbp-0x20],rdi
  419acf:	mov    QWORD PTR [rdx],rax
  419ad2:	mov    rax,QWORD PTR [rbp-0x10]
  419ad6:	mov    rax,QWORD PTR [rax+0x180]
  419add:	add    rax,0x8
  419ae1:	mov    rdx,QWORD PTR [rbp-0x10]
  419ae5:	mov    QWORD PTR [rdx+0x178],rax
  419aec:	mov    rax,QWORD PTR [rbp-0x18]
  419af0:	mov    rdx,QWORD PTR [rbp-0x10]
  419af4:	add    rax,QWORD PTR [rdx+0x180]
  419afb:	mov    QWORD PTR [rdx+0x180],rax
  419b02:	mov    rax,QWORD PTR [rbp-0x10]
  419b06:	mov    rax,QWORD PTR [rax+0x178]
  419b0d:	mov    QWORD PTR [rbp-0x8],rax
  419b11:	mov    rax,QWORD PTR [rbp-0x8]
  419b15:	add    rsp,0x20
  419b19:	pop    rbp
  419b1a:	ret    
  419b1b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000419b20 <flatcc_builder_exit_user_frame@@Base>:
  419b20:	push   rbp
  419b21:	mov    rbp,rsp
  419b24:	sub    rsp,0x10
  419b28:	mov    QWORD PTR [rbp-0x8],rdi
  419b2c:	mov    rdi,QWORD PTR [rbp-0x8]
  419b30:	cmp    QWORD PTR [rdi+0x178],0x0
  419b38:	jbe    419b43 <flatcc_builder_exit_user_frame@@Base+0x23>
  419b3e:	jmp    419b62 <flatcc_builder_exit_user_frame@@Base+0x42>
  419b43:	lea    rdi,[rip+0xe316]        # 427e60 <flatcc_builder_padding_base@@Base+0x2b0>
  419b4a:	lea    rsi,[rip+0xe271]        # 427dc2 <flatcc_builder_padding_base@@Base+0x212>
  419b51:	mov    edx,0x21e
  419b56:	lea    rcx,[rip+0xe31c]        # 427e79 <flatcc_builder_padding_base@@Base+0x2c9>
  419b5d:	call   404090 <__assert_fail@plt>
  419b62:	mov    rax,QWORD PTR [rbp-0x8]
  419b66:	mov    rax,QWORD PTR [rax+0xc8]
  419b6d:	mov    rcx,QWORD PTR [rbp-0x8]
  419b71:	mov    rcx,QWORD PTR [rcx+0x178]
  419b78:	mov    edx,ecx
  419b7a:	mov    edx,edx
  419b7c:	mov    ecx,edx
  419b7e:	add    rax,rcx
  419b81:	mov    QWORD PTR [rbp-0x10],rax
  419b85:	mov    rax,QWORD PTR [rbp-0x8]
  419b89:	mov    rax,QWORD PTR [rax+0x178]
  419b90:	sub    rax,0x8
  419b94:	mov    rcx,QWORD PTR [rbp-0x8]
  419b98:	mov    QWORD PTR [rcx+0x180],rax
  419b9f:	mov    rax,QWORD PTR [rbp-0x10]
  419ba3:	mov    rax,QWORD PTR [rax-0x8]
  419ba7:	mov    rcx,QWORD PTR [rbp-0x8]
  419bab:	mov    QWORD PTR [rcx+0x178],rax
  419bb2:	add    rsp,0x10
  419bb6:	pop    rbp
  419bb7:	ret    
  419bb8:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000419bc0 <flatcc_builder_exit_user_frame_at@@Base>:
  419bc0:	push   rbp
  419bc1:	mov    rbp,rsp
  419bc4:	sub    rsp,0x10
  419bc8:	mov    QWORD PTR [rbp-0x8],rdi
  419bcc:	mov    QWORD PTR [rbp-0x10],rsi
  419bd0:	mov    rsi,QWORD PTR [rbp-0x8]
  419bd4:	mov    rsi,QWORD PTR [rsi+0x178]
  419bdb:	cmp    rsi,QWORD PTR [rbp-0x10]
  419bdf:	jb     419bea <flatcc_builder_exit_user_frame_at@@Base+0x2a>
  419be5:	jmp    419c09 <flatcc_builder_exit_user_frame_at@@Base+0x49>
  419bea:	lea    rdi,[rip+0xe2c2]        # 427eb3 <flatcc_builder_padding_base@@Base+0x303>
  419bf1:	lea    rsi,[rip+0xe1ca]        # 427dc2 <flatcc_builder_padding_base@@Base+0x212>
  419bf8:	mov    edx,0x227
  419bfd:	lea    rcx,[rip+0xe2ce]        # 427ed2 <flatcc_builder_padding_base@@Base+0x322>
  419c04:	call   404090 <__assert_fail@plt>
  419c09:	mov    rax,QWORD PTR [rbp-0x10]
  419c0d:	mov    rcx,QWORD PTR [rbp-0x8]
  419c11:	mov    QWORD PTR [rcx+0x178],rax
  419c18:	mov    rdi,QWORD PTR [rbp-0x8]
  419c1c:	call   419b20 <flatcc_builder_exit_user_frame@@Base>
  419c21:	add    rsp,0x10
  419c25:	pop    rbp
  419c26:	ret    
  419c27:	nop    WORD PTR [rax+rax*1+0x0]

0000000000419c30 <flatcc_builder_get_current_user_frame@@Base>:
  419c30:	push   rbp
  419c31:	mov    rbp,rsp
  419c34:	mov    QWORD PTR [rbp-0x8],rdi
  419c38:	mov    rdi,QWORD PTR [rbp-0x8]
  419c3c:	mov    rax,QWORD PTR [rdi+0x178]
  419c43:	pop    rbp
  419c44:	ret    
  419c45:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419c4f:	nop

0000000000419c50 <flatcc_builder_get_user_frame_ptr@@Base>:
  419c50:	push   rbp
  419c51:	mov    rbp,rsp
  419c54:	mov    QWORD PTR [rbp-0x8],rdi
  419c58:	mov    QWORD PTR [rbp-0x10],rsi
  419c5c:	mov    rsi,QWORD PTR [rbp-0x8]
  419c60:	mov    rsi,QWORD PTR [rsi+0xc8]
  419c67:	mov    rdi,QWORD PTR [rbp-0x10]
  419c6b:	mov    eax,edi
  419c6d:	mov    eax,eax
  419c6f:	mov    edi,eax
  419c71:	add    rsi,rdi
  419c74:	mov    rax,rsi
  419c77:	pop    rbp
  419c78:	ret    
  419c79:	nop    DWORD PTR [rax+0x0]

0000000000419c80 <flatcc_builder_embed_buffer@@Base>:
  419c80:	push   rbp
  419c81:	mov    rbp,rsp
  419c84:	sub    rsp,0xd0
  419c8b:	mov    ax,r8w
  419c8f:	mov    r10w,si
  419c93:	mov    QWORD PTR [rbp-0x10],rdi
  419c97:	mov    WORD PTR [rbp-0x12],r10w
  419c9c:	mov    QWORD PTR [rbp-0x20],rdx
  419ca0:	mov    QWORD PTR [rbp-0x28],rcx
  419ca4:	mov    WORD PTR [rbp-0x2a],ax
  419ca8:	mov    DWORD PTR [rbp-0x30],r9d
  419cac:	mov    esi,DWORD PTR [rbp-0x30]
  419caf:	and    esi,0x2
  419cb2:	mov    DWORD PTR [rbp-0xcc],esi
  419cb8:	mov    rdi,QWORD PTR [rbp-0x10]
  419cbc:	mov    ax,WORD PTR [rbp-0x12]
  419cc0:	mov    rcx,QWORD PTR [rbp-0x10]
  419cc4:	cmp    DWORD PTR [rcx+0x100],0x0
  419ccb:	sete   r11b
  419ccf:	xor    r11b,0xff
  419cd3:	and    r11b,0x1
  419cd7:	movzx  ecx,r11b
  419cdb:	lea    rsi,[rbp-0x2a]
  419cdf:	movzx  edx,ax
  419ce2:	call   419ed0 <flatcc_builder_embed_buffer@@Base+0x250>
  419ce7:	cmp    eax,0x0
  419cea:	je     419cfc <flatcc_builder_embed_buffer@@Base+0x7c>
  419cf0:	mov    DWORD PTR [rbp-0x4],0x0
  419cf7:	jmp    419eb5 <flatcc_builder_embed_buffer@@Base+0x235>
  419cfc:	xor    eax,eax
  419cfe:	mov    ecx,eax
  419d00:	mov    eax,0x4
  419d05:	mov    edx,eax
  419d07:	mov    rdi,QWORD PTR [rbp-0x10]
  419d0b:	mov    rsi,QWORD PTR [rbp-0x28]
  419d0f:	mov    eax,esi
  419d11:	mov    eax,eax
  419d13:	mov    esi,eax
  419d15:	mov    eax,DWORD PTR [rbp-0xcc]
  419d1b:	cmp    eax,0x0
  419d1e:	cmovne rcx,rdx
  419d22:	add    rsi,rcx
  419d25:	mov    eax,esi
  419d27:	mov    esi,eax
  419d29:	movzx  edx,WORD PTR [rbp-0x2a]
  419d2d:	call   41a070 <flatcc_builder_embed_buffer@@Base+0x3f0>
  419d32:	mov    DWORD PTR [rbp-0x38],eax
  419d35:	mov    rcx,QWORD PTR [rbp-0x28]
  419d39:	mov    eax,ecx
  419d3b:	add    eax,DWORD PTR [rbp-0x38]
  419d3e:	mov    edi,eax
  419d40:	call   41a0a0 <flatcc_builder_embed_buffer@@Base+0x420>
  419d45:	mov    DWORD PTR [rbp-0x34],eax
  419d48:	mov    QWORD PTR [rbp-0xc8],0x0
  419d53:	mov    DWORD PTR [rbp-0xc0],0x0
  419d5d:	mov    rcx,QWORD PTR [rbp-0x10]
  419d61:	cmp    DWORD PTR [rcx+0x100],0x0
  419d68:	je     419dcc <flatcc_builder_embed_buffer@@Base+0x14c>
  419d6e:	mov    rax,QWORD PTR [rbp-0xc8]
  419d75:	add    rax,0x4
  419d79:	mov    QWORD PTR [rbp-0xc8],rax
  419d80:	lea    rax,[rbp-0x34]
  419d84:	lea    rcx,[rbp-0xc8]
  419d8b:	mov    rdx,rcx
  419d8e:	add    rdx,0x10
  419d92:	movsxd rsi,DWORD PTR [rbp-0xc0]
  419d99:	shl    rsi,0x4
  419d9d:	add    rdx,rsi
  419da0:	mov    QWORD PTR [rdx],rax
  419da3:	add    rcx,0x10
  419da7:	movsxd rax,DWORD PTR [rbp-0xc0]
  419dae:	shl    rax,0x4
  419db2:	add    rcx,rax
  419db5:	mov    QWORD PTR [rcx+0x8],0x4
  419dbd:	mov    edi,DWORD PTR [rbp-0xc0]
  419dc3:	add    edi,0x1
  419dc6:	mov    DWORD PTR [rbp-0xc0],edi
  419dcc:	cmp    QWORD PTR [rbp-0x28],0x0
  419dd1:	jbe    419e35 <flatcc_builder_embed_buffer@@Base+0x1b5>
  419dd7:	mov    rax,QWORD PTR [rbp-0x28]
  419ddb:	add    rax,QWORD PTR [rbp-0xc8]
  419de2:	mov    QWORD PTR [rbp-0xc8],rax
  419de9:	mov    rax,QWORD PTR [rbp-0x20]
  419ded:	lea    rcx,[rbp-0xc8]
  419df4:	mov    rdx,rcx
  419df7:	add    rdx,0x10
  419dfb:	movsxd rsi,DWORD PTR [rbp-0xc0]
  419e02:	shl    rsi,0x4
  419e06:	add    rdx,rsi
  419e09:	mov    QWORD PTR [rdx],rax
  419e0c:	mov    rax,QWORD PTR [rbp-0x28]
  419e10:	add    rcx,0x10
  419e14:	movsxd rdx,DWORD PTR [rbp-0xc0]
  419e1b:	shl    rdx,0x4
  419e1f:	add    rcx,rdx
  419e22:	mov    QWORD PTR [rcx+0x8],rax
  419e26:	mov    edi,DWORD PTR [rbp-0xc0]
  419e2c:	add    edi,0x1
  419e2f:	mov    DWORD PTR [rbp-0xc0],edi
  419e35:	cmp    DWORD PTR [rbp-0x38],0x0
  419e39:	jbe    419ea2 <flatcc_builder_embed_buffer@@Base+0x222>
  419e3f:	lea    rax,[rip+0xdd6a]        # 427bb0 <flatcc_builder_padding_base@@Base>
  419e46:	mov    ecx,DWORD PTR [rbp-0x38]
  419e49:	mov    edx,ecx
  419e4b:	add    rdx,QWORD PTR [rbp-0xc8]
  419e52:	mov    QWORD PTR [rbp-0xc8],rdx
  419e59:	lea    rdx,[rbp-0xc8]
  419e60:	mov    rsi,rdx
  419e63:	add    rsi,0x10
  419e67:	movsxd rdi,DWORD PTR [rbp-0xc0]
  419e6e:	shl    rdi,0x4
  419e72:	add    rsi,rdi
  419e75:	mov    QWORD PTR [rsi],rax
  419e78:	mov    ecx,DWORD PTR [rbp-0x38]
  419e7b:	mov    eax,ecx
  419e7d:	add    rdx,0x10
  419e81:	movsxd rsi,DWORD PTR [rbp-0xc0]
  419e88:	shl    rsi,0x4
  419e8c:	add    rdx,rsi
  419e8f:	mov    QWORD PTR [rdx+0x8],rax
  419e93:	mov    ecx,DWORD PTR [rbp-0xc0]
  419e99:	add    ecx,0x1
  419e9c:	mov    DWORD PTR [rbp-0xc0],ecx
  419ea2:	mov    rdi,QWORD PTR [rbp-0x10]
  419ea6:	lea    rsi,[rbp-0xc8]
  419ead:	call   41a0b0 <flatcc_builder_embed_buffer@@Base+0x430>
  419eb2:	mov    DWORD PTR [rbp-0x4],eax
  419eb5:	mov    eax,DWORD PTR [rbp-0x4]
  419eb8:	add    rsp,0xd0
  419ebf:	pop    rbp
  419ec0:	ret    
  419ec1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419ecb:	nop    DWORD PTR [rax+rax*1+0x0]
  419ed0:	push   rbp
  419ed1:	mov    rbp,rsp
  419ed4:	sub    rsp,0xc0
  419edb:	mov    ax,dx
  419ede:	mov    QWORD PTR [rbp-0x8],rdi
  419ee2:	mov    QWORD PTR [rbp-0x10],rsi
  419ee6:	mov    WORD PTR [rbp-0x12],ax
  419eea:	mov    DWORD PTR [rbp-0x18],ecx
  419eed:	movzx  ecx,WORD PTR [rbp-0x12]
  419ef1:	cmp    ecx,0x0
  419ef4:	je     419f09 <flatcc_builder_embed_buffer@@Base+0x289>
  419efa:	movzx  eax,WORD PTR [rbp-0x12]
  419efe:	mov    DWORD PTR [rbp-0xb4],eax
  419f04:	jmp    419f4f <flatcc_builder_embed_buffer@@Base+0x2cf>
  419f09:	mov    rax,QWORD PTR [rbp-0x8]
  419f0d:	movzx  ecx,WORD PTR [rax+0xec]
  419f14:	cmp    ecx,0x0
  419f17:	je     419f33 <flatcc_builder_embed_buffer@@Base+0x2b3>
  419f1d:	mov    rax,QWORD PTR [rbp-0x8]
  419f21:	movzx  ecx,WORD PTR [rax+0xec]
  419f28:	mov    DWORD PTR [rbp-0xb8],ecx
  419f2e:	jmp    419f43 <flatcc_builder_embed_buffer@@Base+0x2c3>
  419f33:	mov    eax,0x1
  419f38:	mov    DWORD PTR [rbp-0xb8],eax
  419f3e:	jmp    419f43 <flatcc_builder_embed_buffer@@Base+0x2c3>
  419f43:	mov    eax,DWORD PTR [rbp-0xb8]
  419f49:	mov    DWORD PTR [rbp-0xb4],eax
  419f4f:	mov    eax,DWORD PTR [rbp-0xb4]
  419f55:	mov    cx,ax
  419f58:	mov    WORD PTR [rbp-0x12],cx
  419f5c:	mov    rdi,QWORD PTR [rbp-0x10]
  419f60:	mov    esi,0x4
  419f65:	call   41ba50 <flatcc_builder_start_vector@@Base+0xb0>
  419f6a:	mov    rdi,QWORD PTR [rbp-0x10]
  419f6e:	movzx  esi,WORD PTR [rbp-0x12]
  419f72:	call   41ba50 <flatcc_builder_start_vector@@Base+0xb0>
  419f77:	cmp    DWORD PTR [rbp-0x18],0x0
  419f7b:	jne    41a065 <flatcc_builder_embed_buffer@@Base+0x3e5>
  419f81:	mov    rdi,QWORD PTR [rbp-0x8]
  419f85:	movzx  esi,WORD PTR [rbp-0x12]
  419f89:	call   41ede0 <flatcc_builder_get_emit_context@@Base+0x20>
  419f8e:	mov    eax,eax
  419f90:	mov    edi,eax
  419f92:	mov    QWORD PTR [rbp-0x20],rdi
  419f96:	cmp    QWORD PTR [rbp-0x20],0x0
  419f9b:	je     41a060 <flatcc_builder_embed_buffer@@Base+0x3e0>
  419fa1:	mov    QWORD PTR [rbp-0xb0],0x0
  419fac:	mov    DWORD PTR [rbp-0xa8],0x0
  419fb6:	cmp    QWORD PTR [rbp-0x20],0x0
  419fbb:	jbe    41a022 <flatcc_builder_embed_buffer@@Base+0x3a2>
  419fc1:	lea    rax,[rip+0xdbe8]        # 427bb0 <flatcc_builder_padding_base@@Base>
  419fc8:	mov    rcx,QWORD PTR [rbp-0x20]
  419fcc:	add    rcx,QWORD PTR [rbp-0xb0]
  419fd3:	mov    QWORD PTR [rbp-0xb0],rcx
  419fda:	lea    rcx,[rbp-0xb0]
  419fe1:	mov    rdx,rcx
  419fe4:	add    rdx,0x10
  419fe8:	movsxd rsi,DWORD PTR [rbp-0xa8]
  419fef:	shl    rsi,0x4
  419ff3:	add    rdx,rsi
  419ff6:	mov    QWORD PTR [rdx],rax
  419ff9:	mov    rax,QWORD PTR [rbp-0x20]
  419ffd:	add    rcx,0x10
  41a001:	movsxd rdx,DWORD PTR [rbp-0xa8]
  41a008:	shl    rdx,0x4
  41a00c:	add    rcx,rdx
  41a00f:	mov    QWORD PTR [rcx+0x8],rax
  41a013:	mov    edi,DWORD PTR [rbp-0xa8]
  41a019:	add    edi,0x1
  41a01c:	mov    DWORD PTR [rbp-0xa8],edi
  41a022:	mov    rdi,QWORD PTR [rbp-0x8]
  41a026:	lea    rsi,[rbp-0xb0]
  41a02d:	call   41c050 <flatcc_builder_create_vtable@@Base+0x140>
  41a032:	xor    ecx,ecx
  41a034:	cmp    ecx,eax
  41a036:	jne    41a05b <flatcc_builder_embed_buffer@@Base+0x3db>
  41a03c:	lea    rdi,[rip+0xef3f]        # 428f82 <flatcc_builder_padding_base@@Base+0x13d2>
  41a043:	lea    rsi,[rip+0xdd78]        # 427dc2 <flatcc_builder_padding_base@@Base+0x212>
  41a04a:	mov    edx,0x2be
  41a04f:	lea    rcx,[rip+0xeda9]        # 428dff <flatcc_builder_padding_base@@Base+0x124f>
  41a056:	call   404090 <__assert_fail@plt>
  41a05b:	jmp    41a060 <flatcc_builder_embed_buffer@@Base+0x3e0>
  41a060:	jmp    41a065 <flatcc_builder_embed_buffer@@Base+0x3e5>
  41a065:	xor    eax,eax
  41a067:	add    rsp,0xc0
  41a06e:	pop    rbp
  41a06f:	ret    
  41a070:	push   rbp
  41a071:	mov    rbp,rsp
  41a074:	mov    ax,dx
  41a077:	mov    QWORD PTR [rbp-0x8],rdi
  41a07b:	mov    DWORD PTR [rbp-0xc],esi
  41a07e:	mov    WORD PTR [rbp-0xe],ax
  41a082:	mov    rdi,QWORD PTR [rbp-0x8]
  41a086:	mov    edx,DWORD PTR [rdi+0xf0]
  41a08c:	sub    edx,DWORD PTR [rbp-0xc]
  41a08f:	movzx  esi,WORD PTR [rbp-0xe]
  41a093:	sub    esi,0x1
  41a096:	and    edx,esi
  41a098:	mov    eax,edx
  41a09a:	pop    rbp
  41a09b:	ret    
  41a09c:	nop    DWORD PTR [rax+0x0]
  41a0a0:	push   rbp
  41a0a1:	mov    rbp,rsp
  41a0a4:	mov    DWORD PTR [rbp-0x4],edi
  41a0a7:	mov    eax,DWORD PTR [rbp-0x4]
  41a0aa:	pop    rbp
  41a0ab:	ret    
  41a0ac:	nop    DWORD PTR [rax+0x0]
  41a0b0:	push   rbp
  41a0b1:	mov    rbp,rsp
  41a0b4:	sub    rsp,0x20
  41a0b8:	mov    QWORD PTR [rbp-0x8],rdi
  41a0bc:	mov    QWORD PTR [rbp-0x10],rsi
  41a0c0:	mov    rsi,QWORD PTR [rbp-0x8]
  41a0c4:	mov    eax,DWORD PTR [rsi+0xf0]
  41a0ca:	mov    rsi,QWORD PTR [rbp-0x10]
  41a0ce:	mov    rsi,QWORD PTR [rsi]
  41a0d1:	mov    ecx,esi
  41a0d3:	sub    eax,ecx
  41a0d5:	mov    DWORD PTR [rbp-0x14],eax
  41a0d8:	mov    rsi,QWORD PTR [rbp-0x10]
  41a0dc:	cmp    QWORD PTR [rsi],0x10
  41a0e0:	jbe    41a101 <flatcc_builder_embed_buffer@@Base+0x481>
  41a0e6:	mov    eax,0xffffffff
  41a0eb:	mov    ecx,eax
  41a0ed:	mov    rdx,QWORD PTR [rbp-0x10]
  41a0f1:	mov    rdx,QWORD PTR [rdx]
  41a0f4:	sub    rdx,0x10
  41a0f8:	cmp    rdx,rcx
  41a0fb:	ja     41a114 <flatcc_builder_embed_buffer@@Base+0x494>
  41a101:	mov    eax,DWORD PTR [rbp-0x14]
  41a104:	mov    rcx,QWORD PTR [rbp-0x8]
  41a108:	cmp    eax,DWORD PTR [rcx+0xf0]
  41a10e:	jl     41a133 <flatcc_builder_embed_buffer@@Base+0x4b3>
  41a114:	lea    rdi,[rip+0xee67]        # 428f82 <flatcc_builder_padding_base@@Base+0x13d2>
  41a11b:	lea    rsi,[rip+0xdca0]        # 427dc2 <flatcc_builder_padding_base@@Base+0x212>
  41a122:	mov    edx,0x287
  41a127:	lea    rcx,[rip+0xed13]        # 428e41 <flatcc_builder_padding_base@@Base+0x1291>
  41a12e:	call   404090 <__assert_fail@plt>
  41a133:	mov    rax,QWORD PTR [rbp-0x8]
  41a137:	mov    rax,QWORD PTR [rax+0x48]
  41a13b:	mov    rcx,QWORD PTR [rbp-0x8]
  41a13f:	mov    rdi,QWORD PTR [rcx+0x38]
  41a143:	mov    rcx,QWORD PTR [rbp-0x10]
  41a147:	add    rcx,0x10
  41a14b:	mov    rdx,QWORD PTR [rbp-0x10]
  41a14f:	mov    edx,DWORD PTR [rdx+0x8]
  41a152:	mov    esi,DWORD PTR [rbp-0x14]
  41a155:	mov    r8,QWORD PTR [rbp-0x10]
  41a159:	mov    r8,QWORD PTR [r8]
  41a15c:	mov    DWORD PTR [rbp-0x18],esi
  41a15f:	mov    rsi,rcx
  41a162:	mov    ecx,DWORD PTR [rbp-0x18]
  41a165:	call   rax
  41a167:	cmp    eax,0x0
  41a16a:	je     41a18f <flatcc_builder_embed_buffer@@Base+0x50f>
  41a170:	lea    rdi,[rip+0xee0b]        # 428f82 <flatcc_builder_padding_base@@Base+0x13d2>
  41a177:	lea    rsi,[rip+0xdc44]        # 427dc2 <flatcc_builder_padding_base@@Base+0x212>
  41a17e:	mov    edx,0x28b
  41a183:	lea    rcx,[rip+0xecb7]        # 428e41 <flatcc_builder_padding_base@@Base+0x1291>
  41a18a:	call   404090 <__assert_fail@plt>
  41a18f:	mov    eax,DWORD PTR [rbp-0x14]
  41a192:	mov    rcx,QWORD PTR [rbp-0x8]
  41a196:	mov    DWORD PTR [rcx+0xf0],eax
  41a19c:	add    rsp,0x20
  41a1a0:	pop    rbp
  41a1a1:	ret    
  41a1a2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a1ac:	nop    DWORD PTR [rax+0x0]

000000000041a1b0 <flatcc_builder_create_buffer@@Base>:
  41a1b0:	push   rbp
  41a1b1:	mov    rbp,rsp
  41a1b4:	sub    rsp,0xf0
  41a1bb:	mov    ax,r8w
  41a1bf:	mov    r10w,dx
  41a1c3:	mov    QWORD PTR [rbp-0x10],rdi
  41a1c7:	mov    QWORD PTR [rbp-0x18],rsi
  41a1cb:	mov    WORD PTR [rbp-0x1a],r10w
  41a1d0:	mov    DWORD PTR [rbp-0x20],ecx
  41a1d3:	mov    WORD PTR [rbp-0x22],ax
  41a1d7:	mov    DWORD PTR [rbp-0x28],r9d
  41a1db:	mov    DWORD PTR [rbp-0x34],0x0
  41a1e2:	mov    DWORD PTR [rbp-0xd4],0x0
  41a1ec:	mov    ecx,DWORD PTR [rbp-0x28]
  41a1ef:	and    ecx,0x1
  41a1f2:	cmp    ecx,0x0
  41a1f5:	setne  r11b
  41a1f9:	and    r11b,0x1
  41a1fd:	movzx  ecx,r11b
  41a201:	mov    DWORD PTR [rbp-0xd8],ecx
  41a207:	mov    ecx,DWORD PTR [rbp-0x28]
  41a20a:	and    ecx,0x2
  41a20d:	cmp    ecx,0x0
  41a210:	setne  r11b
  41a214:	and    r11b,0x1
  41a218:	movzx  ecx,r11b
  41a21c:	mov    DWORD PTR [rbp-0xdc],ecx
  41a222:	mov    rdi,QWORD PTR [rbp-0x10]
  41a226:	mov    ax,WORD PTR [rbp-0x1a]
  41a22a:	mov    ecx,DWORD PTR [rbp-0xd8]
  41a230:	lea    rsi,[rbp-0x22]
  41a234:	movzx  edx,ax
  41a237:	call   419ed0 <flatcc_builder_embed_buffer@@Base+0x250>
  41a23c:	cmp    eax,0x0
  41a23f:	je     41a251 <flatcc_builder_create_buffer@@Base+0xa1>
  41a245:	mov    DWORD PTR [rbp-0x4],0x0
  41a24c:	jmp    41a5ab <flatcc_builder_create_buffer@@Base+0x3fb>
  41a251:	mov    rdi,QWORD PTR [rbp-0x10]
  41a255:	movzx  esi,WORD PTR [rbp-0x22]
  41a259:	call   41a5c0 <flatcc_builder_create_buffer@@Base+0x410>
  41a25e:	cmp    QWORD PTR [rbp-0x18],0x0
  41a263:	je     41a297 <flatcc_builder_create_buffer@@Base+0xe7>
  41a269:	mov    rax,QWORD PTR [rbp-0x18]
  41a26d:	mov    ecx,DWORD PTR [rax]
  41a26f:	mov    DWORD PTR [rbp-0xd4],ecx
  41a275:	mov    edi,DWORD PTR [rbp-0xd4]
  41a27b:	call   41a600 <flatcc_builder_create_buffer@@Base+0x450>
  41a280:	mov    DWORD PTR [rbp-0xd4],eax
  41a286:	mov    edi,DWORD PTR [rbp-0xd4]
  41a28c:	call   41a0a0 <flatcc_builder_embed_buffer@@Base+0x420>
  41a291:	mov    DWORD PTR [rbp-0xd4],eax
  41a297:	xor    eax,eax
  41a299:	mov    ecx,eax
  41a29b:	mov    eax,0x4
  41a2a0:	mov    edx,eax
  41a2a2:	xor    eax,eax
  41a2a4:	mov    esi,DWORD PTR [rbp-0xd4]
  41a2aa:	cmp    esi,0x0
  41a2ad:	mov    esi,0x4
  41a2b2:	cmovne eax,esi
  41a2b5:	mov    DWORD PTR [rbp-0x34],eax
  41a2b8:	mov    rdi,QWORD PTR [rbp-0x10]
  41a2bc:	mov    eax,DWORD PTR [rbp-0x34]
  41a2bf:	mov    r8d,eax
  41a2c2:	add    r8,0x4
  41a2c6:	mov    eax,DWORD PTR [rbp-0xdc]
  41a2cc:	cmp    eax,0x0
  41a2cf:	cmovne rcx,rdx
  41a2d3:	add    r8,rcx
  41a2d6:	mov    eax,r8d
  41a2d9:	mov    esi,eax
  41a2db:	movzx  edx,WORD PTR [rbp-0x22]
  41a2df:	call   41a070 <flatcc_builder_embed_buffer@@Base+0x3f0>
  41a2e4:	mov    DWORD PTR [rbp-0x30],eax
  41a2e7:	mov    QWORD PTR [rbp-0xd0],0x0
  41a2f2:	mov    DWORD PTR [rbp-0xc8],0x0
  41a2fc:	cmp    DWORD PTR [rbp-0xd8],0x0
  41a303:	jne    41a316 <flatcc_builder_create_buffer@@Base+0x166>
  41a309:	cmp    DWORD PTR [rbp-0xdc],0x0
  41a310:	je     41a374 <flatcc_builder_create_buffer@@Base+0x1c4>
  41a316:	mov    rax,QWORD PTR [rbp-0xd0]
  41a31d:	add    rax,0x4
  41a321:	mov    QWORD PTR [rbp-0xd0],rax
  41a328:	lea    rax,[rbp-0x3c]
  41a32c:	lea    rcx,[rbp-0xd0]
  41a333:	mov    rdx,rcx
  41a336:	add    rdx,0x10
  41a33a:	movsxd rsi,DWORD PTR [rbp-0xc8]
  41a341:	shl    rsi,0x4
  41a345:	add    rdx,rsi
  41a348:	mov    QWORD PTR [rdx],rax
  41a34b:	add    rcx,0x10
  41a34f:	movsxd rax,DWORD PTR [rbp-0xc8]
  41a356:	shl    rax,0x4
  41a35a:	add    rcx,rax
  41a35d:	mov    QWORD PTR [rcx+0x8],0x4
  41a365:	mov    edi,DWORD PTR [rbp-0xc8]
  41a36b:	add    edi,0x1
  41a36e:	mov    DWORD PTR [rbp-0xc8],edi
  41a374:	mov    rax,QWORD PTR [rbp-0xd0]
  41a37b:	add    rax,0x4
  41a37f:	mov    QWORD PTR [rbp-0xd0],rax
  41a386:	lea    rax,[rbp-0x38]
  41a38a:	lea    rcx,[rbp-0xd0]
  41a391:	mov    rdx,rcx
  41a394:	add    rdx,0x10
  41a398:	movsxd rsi,DWORD PTR [rbp-0xc8]
  41a39f:	shl    rsi,0x4
  41a3a3:	add    rdx,rsi
  41a3a6:	mov    QWORD PTR [rdx],rax
  41a3a9:	add    rcx,0x10
  41a3ad:	movsxd rax,DWORD PTR [rbp-0xc8]
  41a3b4:	shl    rax,0x4
  41a3b8:	add    rcx,rax
  41a3bb:	mov    QWORD PTR [rcx+0x8],0x4
  41a3c3:	mov    edi,DWORD PTR [rbp-0xc8]
  41a3c9:	add    edi,0x1
  41a3cc:	mov    DWORD PTR [rbp-0xc8],edi
  41a3d2:	cmp    DWORD PTR [rbp-0x34],0x0
  41a3d6:	jbe    41a43f <flatcc_builder_create_buffer@@Base+0x28f>
  41a3dc:	mov    eax,DWORD PTR [rbp-0x34]
  41a3df:	mov    ecx,eax
  41a3e1:	add    rcx,QWORD PTR [rbp-0xd0]
  41a3e8:	mov    QWORD PTR [rbp-0xd0],rcx
  41a3ef:	lea    rcx,[rbp-0xd4]
  41a3f6:	lea    rdx,[rbp-0xd0]
  41a3fd:	mov    rsi,rdx
  41a400:	add    rsi,0x10
  41a404:	movsxd rdi,DWORD PTR [rbp-0xc8]
  41a40b:	shl    rdi,0x4
  41a40f:	add    rsi,rdi
  41a412:	mov    QWORD PTR [rsi],rcx
  41a415:	mov    eax,DWORD PTR [rbp-0x34]
  41a418:	mov    ecx,eax
  41a41a:	add    rdx,0x10
  41a41e:	movsxd rsi,DWORD PTR [rbp-0xc8]
  41a425:	shl    rsi,0x4
  41a429:	add    rdx,rsi
  41a42c:	mov    QWORD PTR [rdx+0x8],rcx
  41a430:	mov    eax,DWORD PTR [rbp-0xc8]
  41a436:	add    eax,0x1
  41a439:	mov    DWORD PTR [rbp-0xc8],eax
  41a43f:	cmp    DWORD PTR [rbp-0x30],0x0
  41a443:	jbe    41a4ac <flatcc_builder_create_buffer@@Base+0x2fc>
  41a449:	lea    rax,[rip+0xd760]        # 427bb0 <flatcc_builder_padding_base@@Base>
  41a450:	mov    ecx,DWORD PTR [rbp-0x30]
  41a453:	mov    edx,ecx
  41a455:	add    rdx,QWORD PTR [rbp-0xd0]
  41a45c:	mov    QWORD PTR [rbp-0xd0],rdx
  41a463:	lea    rdx,[rbp-0xd0]
  41a46a:	mov    rsi,rdx
  41a46d:	add    rsi,0x10
  41a471:	movsxd rdi,DWORD PTR [rbp-0xc8]
  41a478:	shl    rdi,0x4
  41a47c:	add    rsi,rdi
  41a47f:	mov    QWORD PTR [rsi],rax
  41a482:	mov    ecx,DWORD PTR [rbp-0x30]
  41a485:	mov    eax,ecx
  41a487:	add    rdx,0x10
  41a48b:	movsxd rsi,DWORD PTR [rbp-0xc8]
  41a492:	shl    rsi,0x4
  41a496:	add    rdx,rsi
  41a499:	mov    QWORD PTR [rdx+0x8],rax
  41a49d:	mov    ecx,DWORD PTR [rbp-0xc8]
  41a4a3:	add    ecx,0x1
  41a4a6:	mov    DWORD PTR [rbp-0xc8],ecx
  41a4ac:	mov    rax,QWORD PTR [rbp-0x10]
  41a4b0:	mov    ecx,DWORD PTR [rax+0xf0]
  41a4b6:	mov    rax,QWORD PTR [rbp-0xd0]
  41a4bd:	mov    edx,eax
  41a4bf:	sub    ecx,edx
  41a4c1:	mov    ecx,ecx
  41a4c3:	mov    eax,ecx
  41a4c5:	cmp    DWORD PTR [rbp-0xd8],0x0
  41a4cc:	mov    sil,0x1
  41a4cf:	mov    QWORD PTR [rbp-0xe8],rax
  41a4d6:	mov    BYTE PTR [rbp-0xe9],sil
  41a4dd:	jne    41a4f3 <flatcc_builder_create_buffer@@Base+0x343>
  41a4e3:	cmp    DWORD PTR [rbp-0xdc],0x0
  41a4ea:	setne  al
  41a4ed:	mov    BYTE PTR [rbp-0xe9],al
  41a4f3:	mov    al,BYTE PTR [rbp-0xe9]
  41a4f9:	xor    ecx,ecx
  41a4fb:	mov    edx,ecx
  41a4fd:	mov    ecx,0x4
  41a502:	mov    esi,ecx
  41a504:	test   al,0x1
  41a506:	cmovne rdx,rsi
  41a50a:	mov    rsi,QWORD PTR [rbp-0xe8]
  41a511:	add    rsi,rdx
  41a514:	mov    ecx,esi
  41a516:	mov    DWORD PTR [rbp-0x40],ecx
  41a519:	cmp    DWORD PTR [rbp-0xd8],0x0
  41a520:	je     41a542 <flatcc_builder_create_buffer@@Base+0x392>
  41a526:	mov    rax,QWORD PTR [rbp-0x10]
  41a52a:	mov    ecx,DWORD PTR [rax+0xf8]
  41a530:	sub    ecx,DWORD PTR [rbp-0x40]
  41a533:	mov    edi,ecx
  41a535:	call   41a0a0 <flatcc_builder_embed_buffer@@Base+0x420>
  41a53a:	mov    DWORD PTR [rbp-0x3c],eax
  41a53d:	jmp    41a559 <flatcc_builder_create_buffer@@Base+0x3a9>
  41a542:	mov    rax,QWORD PTR [rbp-0x10]
  41a546:	mov    ecx,DWORD PTR [rax+0xf4]
  41a54c:	sub    ecx,DWORD PTR [rbp-0x40]
  41a54f:	mov    edi,ecx
  41a551:	call   41a0a0 <flatcc_builder_embed_buffer@@Base+0x420>
  41a556:	mov    DWORD PTR [rbp-0x3c],eax
  41a559:	mov    eax,DWORD PTR [rbp-0x20]
  41a55c:	sub    eax,DWORD PTR [rbp-0x40]
  41a55f:	mov    edi,eax
  41a561:	call   41a0a0 <flatcc_builder_embed_buffer@@Base+0x420>
  41a566:	mov    DWORD PTR [rbp-0x38],eax
  41a569:	mov    rdi,QWORD PTR [rbp-0x10]
  41a56d:	lea    rsi,[rbp-0xd0]
  41a574:	call   41a0b0 <flatcc_builder_embed_buffer@@Base+0x430>
  41a579:	xor    ecx,ecx
  41a57b:	mov    DWORD PTR [rbp-0x2c],eax
  41a57e:	cmp    ecx,eax
  41a580:	jne    41a5a5 <flatcc_builder_create_buffer@@Base+0x3f5>
  41a586:	lea    rdi,[rip+0xe9f5]        # 428f82 <flatcc_builder_padding_base@@Base+0x13d2>
  41a58d:	lea    rsi,[rip+0xd82e]        # 427dc2 <flatcc_builder_padding_base@@Base+0x212>
  41a594:	mov    edx,0x304
  41a599:	lea    rcx,[rip+0xd977]        # 427f17 <flatcc_builder_padding_base@@Base+0x367>
  41a5a0:	call   404090 <__assert_fail@plt>
  41a5a5:	mov    eax,DWORD PTR [rbp-0x2c]
  41a5a8:	mov    DWORD PTR [rbp-0x4],eax
  41a5ab:	mov    eax,DWORD PTR [rbp-0x4]
  41a5ae:	add    rsp,0xf0
  41a5b5:	pop    rbp
  41a5b6:	ret    
  41a5b7:	nop    WORD PTR [rax+rax*1+0x0]
  41a5c0:	push   rbp
  41a5c1:	mov    rbp,rsp
  41a5c4:	mov    ax,si
  41a5c7:	mov    QWORD PTR [rbp-0x8],rdi
  41a5cb:	mov    WORD PTR [rbp-0xa],ax
  41a5cf:	mov    rdi,QWORD PTR [rbp-0x8]
  41a5d3:	movzx  esi,WORD PTR [rdi+0xe8]
  41a5da:	movzx  ecx,WORD PTR [rbp-0xa]
  41a5de:	cmp    esi,ecx
  41a5e0:	jge    41a5f5 <flatcc_builder_create_buffer@@Base+0x445>
  41a5e6:	mov    ax,WORD PTR [rbp-0xa]
  41a5ea:	mov    rcx,QWORD PTR [rbp-0x8]
  41a5ee:	mov    WORD PTR [rcx+0xe8],ax
  41a5f5:	pop    rbp
  41a5f6:	ret    
  41a5f7:	nop    WORD PTR [rax+rax*1+0x0]
  41a600:	push   rbp
  41a601:	mov    rbp,rsp
  41a604:	mov    DWORD PTR [rbp-0x4],edi
  41a607:	mov    eax,DWORD PTR [rbp-0x4]
  41a60a:	pop    rbp
  41a60b:	ret    
  41a60c:	nop    DWORD PTR [rax+0x0]

000000000041a610 <flatcc_builder_create_struct@@Base>:
  41a610:	push   rbp
  41a611:	mov    rbp,rsp
  41a614:	sub    rsp,0xc0
  41a61b:	mov    ax,cx
  41a61e:	mov    QWORD PTR [rbp-0x8],rdi
  41a622:	mov    QWORD PTR [rbp-0x10],rsi
  41a626:	mov    QWORD PTR [rbp-0x18],rdx
  41a62a:	mov    WORD PTR [rbp-0x1a],ax
  41a62e:	movzx  ecx,WORD PTR [rbp-0x1a]
  41a632:	cmp    ecx,0x1
  41a635:	jl     41a640 <flatcc_builder_create_struct@@Base+0x30>
  41a63b:	jmp    41a65f <flatcc_builder_create_struct@@Base+0x4f>
  41a640:	lea    rdi,[rip+0xd953]        # 427f9a <flatcc_builder_padding_base@@Base+0x3ea>
  41a647:	lea    rsi,[rip+0xd774]        # 427dc2 <flatcc_builder_padding_base@@Base+0x212>
  41a64e:	mov    edx,0x30f
  41a653:	lea    rcx,[rip+0xd94b]        # 427fa5 <flatcc_builder_padding_base@@Base+0x3f5>
  41a65a:	call   404090 <__assert_fail@plt>
  41a65f:	mov    rdi,QWORD PTR [rbp-0x8]
  41a663:	movzx  esi,WORD PTR [rbp-0x1a]
  41a667:	call   41a5c0 <flatcc_builder_create_buffer@@Base+0x410>
  41a66c:	mov    rdi,QWORD PTR [rbp-0x8]
  41a670:	mov    rax,QWORD PTR [rbp-0x18]
  41a674:	mov    esi,eax
  41a676:	movzx  edx,WORD PTR [rbp-0x1a]
  41a67a:	call   41a070 <flatcc_builder_embed_buffer@@Base+0x3f0>
  41a67f:	mov    eax,eax
  41a681:	mov    edi,eax
  41a683:	mov    QWORD PTR [rbp-0x28],rdi
  41a687:	mov    QWORD PTR [rbp-0xb8],0x0
  41a692:	mov    DWORD PTR [rbp-0xb0],0x0
  41a69c:	cmp    QWORD PTR [rbp-0x18],0x0
  41a6a1:	jbe    41a705 <flatcc_builder_create_struct@@Base+0xf5>
  41a6a7:	mov    rax,QWORD PTR [rbp-0x18]
  41a6ab:	add    rax,QWORD PTR [rbp-0xb8]
  41a6b2:	mov    QWORD PTR [rbp-0xb8],rax
  41a6b9:	mov    rax,QWORD PTR [rbp-0x10]
  41a6bd:	lea    rcx,[rbp-0xb8]
  41a6c4:	mov    rdx,rcx
  41a6c7:	add    rdx,0x10
  41a6cb:	movsxd rsi,DWORD PTR [rbp-0xb0]
  41a6d2:	shl    rsi,0x4
  41a6d6:	add    rdx,rsi
  41a6d9:	mov    QWORD PTR [rdx],rax
  41a6dc:	mov    rax,QWORD PTR [rbp-0x18]
  41a6e0:	add    rcx,0x10
  41a6e4:	movsxd rdx,DWORD PTR [rbp-0xb0]
  41a6eb:	shl    rdx,0x4
  41a6ef:	add    rcx,rdx
  41a6f2:	mov    QWORD PTR [rcx+0x8],rax
  41a6f6:	mov    edi,DWORD PTR [rbp-0xb0]
  41a6fc:	add    edi,0x1
  41a6ff:	mov    DWORD PTR [rbp-0xb0],edi
  41a705:	cmp    QWORD PTR [rbp-0x28],0x0
  41a70a:	jbe    41a771 <flatcc_builder_create_struct@@Base+0x161>
  41a710:	lea    rax,[rip+0xd499]        # 427bb0 <flatcc_builder_padding_base@@Base>
  41a717:	mov    rcx,QWORD PTR [rbp-0x28]
  41a71b:	add    rcx,QWORD PTR [rbp-0xb8]
  41a722:	mov    QWORD PTR [rbp-0xb8],rcx
  41a729:	lea    rcx,[rbp-0xb8]
  41a730:	mov    rdx,rcx
  41a733:	add    rdx,0x10
  41a737:	movsxd rsi,DWORD PTR [rbp-0xb0]
  41a73e:	shl    rsi,0x4
  41a742:	add    rdx,rsi
  41a745:	mov    QWORD PTR [rdx],rax
  41a748:	mov    rax,QWORD PTR [rbp-0x28]
  41a74c:	add    rcx,0x10
  41a750:	movsxd rdx,DWORD PTR [rbp-0xb0]
  41a757:	shl    rdx,0x4
  41a75b:	add    rcx,rdx
  41a75e:	mov    QWORD PTR [rcx+0x8],rax
  41a762:	mov    edi,DWORD PTR [rbp-0xb0]
  41a768:	add    edi,0x1
  41a76b:	mov    DWORD PTR [rbp-0xb0],edi
  41a771:	mov    rdi,QWORD PTR [rbp-0x8]
  41a775:	lea    rsi,[rbp-0xb8]
  41a77c:	call   41a0b0 <flatcc_builder_embed_buffer@@Base+0x430>
  41a781:	add    rsp,0xc0
  41a788:	pop    rbp
  41a789:	ret    
  41a78a:	nop    WORD PTR [rax+rax*1+0x0]

000000000041a790 <flatcc_builder_start_buffer@@Base>:
  41a790:	push   rbp
  41a791:	mov    rbp,rsp
  41a794:	sub    rsp,0x30
  41a798:	mov    ax,dx
  41a79b:	mov    QWORD PTR [rbp-0x10],rdi
  41a79f:	mov    QWORD PTR [rbp-0x18],rsi
  41a7a3:	mov    WORD PTR [rbp-0x1a],ax
  41a7a7:	mov    DWORD PTR [rbp-0x20],ecx
  41a7aa:	mov    rdi,QWORD PTR [rbp-0x10]
  41a7ae:	mov    rsi,QWORD PTR [rbp-0x10]
  41a7b2:	movzx  esi,WORD PTR [rsi+0xe8]
  41a7b9:	call   41a900 <flatcc_builder_start_buffer@@Base+0x170>
  41a7be:	cmp    eax,0x0
  41a7c1:	je     41a7d3 <flatcc_builder_start_buffer@@Base+0x43>
  41a7c7:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41a7ce:	jmp    41a8f7 <flatcc_builder_start_buffer@@Base+0x167>
  41a7d3:	mov    rax,QWORD PTR [rbp-0x10]
  41a7d7:	mov    WORD PTR [rax+0xe8],0x1
  41a7e0:	mov    rax,QWORD PTR [rbp-0x10]
  41a7e4:	mov    cx,WORD PTR [rax+0xec]
  41a7eb:	mov    rax,QWORD PTR [rbp-0x10]
  41a7ef:	mov    rax,QWORD PTR [rax+0x30]
  41a7f3:	mov    WORD PTR [rax+0x22],cx
  41a7f7:	mov    cx,WORD PTR [rbp-0x1a]
  41a7fb:	mov    rax,QWORD PTR [rbp-0x10]
  41a7ff:	mov    WORD PTR [rax+0xec],cx
  41a806:	mov    rax,QWORD PTR [rbp-0x10]
  41a80a:	mov    cx,WORD PTR [rax+0x10c]
  41a811:	mov    rax,QWORD PTR [rbp-0x10]
  41a815:	mov    rax,QWORD PTR [rax+0x30]
  41a819:	mov    WORD PTR [rax+0x20],cx
  41a81d:	mov    edx,DWORD PTR [rbp-0x20]
  41a820:	mov    cx,dx
  41a823:	mov    rax,QWORD PTR [rbp-0x10]
  41a827:	mov    WORD PTR [rax+0x10c],cx
  41a82e:	mov    rax,QWORD PTR [rbp-0x10]
  41a832:	mov    edx,DWORD PTR [rax+0xf8]
  41a838:	mov    rax,QWORD PTR [rbp-0x10]
  41a83c:	mov    rax,QWORD PTR [rax+0x30]
  41a840:	mov    DWORD PTR [rax+0x14],edx
  41a843:	mov    rax,QWORD PTR [rbp-0x10]
  41a847:	mov    edx,DWORD PTR [rax+0x100]
  41a84d:	mov    rax,QWORD PTR [rbp-0x10]
  41a851:	mov    rax,QWORD PTR [rax+0x30]
  41a855:	mov    DWORD PTR [rax+0x1c],edx
  41a858:	mov    rax,QWORD PTR [rbp-0x10]
  41a85c:	mov    edx,DWORD PTR [rax+0xf0]
  41a862:	mov    rax,QWORD PTR [rbp-0x10]
  41a866:	mov    DWORD PTR [rax+0xf8],edx
  41a86c:	mov    rax,QWORD PTR [rbp-0x10]
  41a870:	mov    edx,DWORD PTR [rax+0xfc]
  41a876:	mov    esi,edx
  41a878:	add    esi,0x1
  41a87b:	mov    DWORD PTR [rax+0xfc],esi
  41a881:	mov    rax,QWORD PTR [rbp-0x10]
  41a885:	mov    DWORD PTR [rax+0x100],edx
  41a88b:	mov    rax,QWORD PTR [rbp-0x10]
  41a88f:	mov    edx,DWORD PTR [rax+0x110]
  41a895:	mov    rax,QWORD PTR [rbp-0x10]
  41a899:	mov    rax,QWORD PTR [rax+0x30]
  41a89d:	mov    DWORD PTR [rax+0x10],edx
  41a8a0:	mov    rax,QWORD PTR [rbp-0x10]
  41a8a4:	add    rax,0x110
  41a8aa:	cmp    QWORD PTR [rbp-0x18],0x0
  41a8af:	mov    QWORD PTR [rbp-0x28],rax
  41a8b3:	je     41a8c6 <flatcc_builder_start_buffer@@Base+0x136>
  41a8b9:	mov    rax,QWORD PTR [rbp-0x18]
  41a8bd:	mov    QWORD PTR [rbp-0x30],rax
  41a8c1:	jmp    41a8d6 <flatcc_builder_start_buffer@@Base+0x146>
  41a8c6:	lea    rax,[rip+0xd2e3]        # 427bb0 <flatcc_builder_padding_base@@Base>
  41a8cd:	mov    QWORD PTR [rbp-0x30],rax
  41a8d1:	jmp    41a8d6 <flatcc_builder_start_buffer@@Base+0x146>
  41a8d6:	mov    rax,QWORD PTR [rbp-0x30]
  41a8da:	mov    ecx,DWORD PTR [rax]
  41a8dc:	mov    rax,QWORD PTR [rbp-0x28]
  41a8e0:	mov    DWORD PTR [rax],ecx
  41a8e2:	mov    rdx,QWORD PTR [rbp-0x10]
  41a8e6:	mov    rdx,QWORD PTR [rdx+0x30]
  41a8ea:	mov    WORD PTR [rdx+0xe],0x1
  41a8f0:	mov    DWORD PTR [rbp-0x4],0x0
  41a8f7:	mov    eax,DWORD PTR [rbp-0x4]
  41a8fa:	add    rsp,0x30
  41a8fe:	pop    rbp
  41a8ff:	ret    
  41a900:	push   rbp
  41a901:	mov    rbp,rsp
  41a904:	sub    rsp,0x20
  41a908:	mov    ax,si
  41a90b:	mov    QWORD PTR [rbp-0x10],rdi
  41a90f:	mov    WORD PTR [rbp-0x12],ax
  41a913:	mov    rdi,QWORD PTR [rbp-0x10]
  41a917:	mov    esi,DWORD PTR [rdi+0x104]
  41a91d:	add    esi,0x1
  41a920:	mov    DWORD PTR [rdi+0x104],esi
  41a926:	mov    rdi,QWORD PTR [rbp-0x10]
  41a92a:	cmp    esi,DWORD PTR [rdi+0x108]
  41a930:	jle    41aa20 <flatcc_builder_start_buffer@@Base+0x290>
  41a936:	mov    rax,QWORD PTR [rbp-0x10]
  41a93a:	cmp    DWORD PTR [rax+0x120],0x0
  41a941:	jle    41a96d <flatcc_builder_start_buffer@@Base+0x1dd>
  41a947:	mov    rax,QWORD PTR [rbp-0x10]
  41a94b:	mov    ecx,DWORD PTR [rax+0x104]
  41a951:	mov    rax,QWORD PTR [rbp-0x10]
  41a955:	cmp    ecx,DWORD PTR [rax+0x120]
  41a95b:	jle    41a96d <flatcc_builder_start_buffer@@Base+0x1dd>
  41a961:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41a968:	jmp    41aab8 <flatcc_builder_start_buffer@@Base+0x328>
  41a96d:	mov    eax,0x24
  41a972:	mov    ecx,eax
  41a974:	xor    r8d,r8d
  41a977:	mov    rdi,QWORD PTR [rbp-0x10]
  41a97b:	mov    rdx,QWORD PTR [rbp-0x10]
  41a97f:	mov    eax,DWORD PTR [rdx+0x104]
  41a985:	sub    eax,0x1
  41a988:	movsxd rdx,eax
  41a98b:	imul   rdx,rdx,0x24
  41a98f:	mov    esi,0x4
  41a994:	call   419980 <flatcc_builder_enter_user_frame_ptr@@Base+0xe0>
  41a999:	mov    rcx,QWORD PTR [rbp-0x10]
  41a99d:	mov    QWORD PTR [rcx+0x30],rax
  41a9a1:	cmp    rax,0x0
  41a9a5:	jne    41a9b7 <flatcc_builder_start_buffer@@Base+0x227>
  41a9ab:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41a9b2:	jmp    41aab8 <flatcc_builder_start_buffer@@Base+0x328>
  41a9b7:	mov    eax,0x24
  41a9bc:	mov    ecx,eax
  41a9be:	mov    rdx,QWORD PTR [rbp-0x10]
  41a9c2:	mov    rax,QWORD PTR [rdx+0xa0]
  41a9c9:	xor    esi,esi
  41a9cb:	mov    edx,esi
  41a9cd:	div    rcx
  41a9d0:	mov    esi,eax
  41a9d2:	mov    rax,QWORD PTR [rbp-0x10]
  41a9d6:	mov    DWORD PTR [rax+0x108],esi
  41a9dc:	mov    rax,QWORD PTR [rbp-0x10]
  41a9e0:	cmp    DWORD PTR [rax+0x120],0x0
  41a9e7:	jle    41aa1b <flatcc_builder_start_buffer@@Base+0x28b>
  41a9ed:	mov    rax,QWORD PTR [rbp-0x10]
  41a9f1:	mov    ecx,DWORD PTR [rax+0x120]
  41a9f7:	mov    rax,QWORD PTR [rbp-0x10]
  41a9fb:	cmp    ecx,DWORD PTR [rax+0x108]
  41aa01:	jge    41aa1b <flatcc_builder_start_buffer@@Base+0x28b>
  41aa07:	mov    rax,QWORD PTR [rbp-0x10]
  41aa0b:	mov    ecx,DWORD PTR [rax+0x120]
  41aa11:	mov    rax,QWORD PTR [rbp-0x10]
  41aa15:	mov    DWORD PTR [rax+0x108],ecx
  41aa1b:	jmp    41aa30 <flatcc_builder_start_buffer@@Base+0x2a0>
  41aa20:	mov    rax,QWORD PTR [rbp-0x10]
  41aa24:	mov    rcx,QWORD PTR [rax+0x30]
  41aa28:	add    rcx,0x24
  41aa2c:	mov    QWORD PTR [rax+0x30],rcx
  41aa30:	mov    rax,QWORD PTR [rbp-0x10]
  41aa34:	mov    ecx,DWORD PTR [rax+0x20]
  41aa37:	mov    rax,QWORD PTR [rbp-0x10]
  41aa3b:	mov    rax,QWORD PTR [rax+0x30]
  41aa3f:	mov    DWORD PTR [rax+0x8],ecx
  41aa42:	mov    rax,QWORD PTR [rbp-0x10]
  41aa46:	mov    dx,WORD PTR [rax+0xea]
  41aa4d:	mov    rax,QWORD PTR [rbp-0x10]
  41aa51:	mov    rax,QWORD PTR [rax+0x30]
  41aa55:	mov    WORD PTR [rax+0xc],dx
  41aa59:	mov    dx,WORD PTR [rbp-0x12]
  41aa5d:	mov    rax,QWORD PTR [rbp-0x10]
  41aa61:	mov    WORD PTR [rax+0xea],dx
  41aa68:	mov    rax,QWORD PTR [rbp-0x10]
  41aa6c:	mov    ecx,DWORD PTR [rax+0x28]
  41aa6f:	mov    rax,QWORD PTR [rbp-0x10]
  41aa73:	mov    rax,QWORD PTR [rax+0x30]
  41aa77:	mov    DWORD PTR [rax],ecx
  41aa79:	mov    rax,QWORD PTR [rbp-0x10]
  41aa7d:	mov    rax,QWORD PTR [rax+0x30]
  41aa81:	mov    DWORD PTR [rax+0x4],0xfffffffc
  41aa88:	mov    rax,QWORD PTR [rbp-0x10]
  41aa8c:	mov    ecx,DWORD PTR [rax+0x28]
  41aa8f:	mov    rax,QWORD PTR [rbp-0x10]
  41aa93:	add    ecx,DWORD PTR [rax+0x20]
  41aa96:	add    ecx,0x8
  41aa99:	sub    ecx,0x1
  41aa9c:	and    ecx,0xfffffff8
  41aa9f:	mov    rax,QWORD PTR [rbp-0x10]
  41aaa3:	mov    DWORD PTR [rax+0x28],ecx
  41aaa6:	mov    rax,QWORD PTR [rbp-0x10]
  41aaaa:	mov    DWORD PTR [rax+0x20],0x0
  41aab1:	mov    DWORD PTR [rbp-0x4],0x0
  41aab8:	mov    eax,DWORD PTR [rbp-0x4]
  41aabb:	add    rsp,0x20
  41aabf:	pop    rbp
  41aac0:	ret    
  41aac1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41aacb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041aad0 <flatcc_builder_end_buffer@@Base>:
  41aad0:	push   rbp
  41aad1:	mov    rbp,rsp
  41aad4:	sub    rsp,0x20
  41aad8:	xor    eax,eax
  41aada:	mov    QWORD PTR [rbp-0x10],rdi
  41aade:	mov    DWORD PTR [rbp-0x14],esi
  41aae1:	mov    rdi,QWORD PTR [rbp-0x10]
  41aae5:	movzx  esi,WORD PTR [rdi+0x10c]
  41aaec:	and    esi,0x2
  41aaef:	mov    DWORD PTR [rbp-0x1c],esi
  41aaf2:	mov    rdi,QWORD PTR [rbp-0x10]
  41aaf6:	mov    esi,DWORD PTR [rdi+0x100]
  41aafc:	cmp    esi,0x0
  41aaff:	mov    esi,0x1
  41ab04:	cmove  esi,eax
  41ab07:	or     esi,DWORD PTR [rbp-0x1c]
  41ab0a:	mov    DWORD PTR [rbp-0x1c],esi
  41ab0d:	mov    rdi,QWORD PTR [rbp-0x10]
  41ab11:	mov    rdi,QWORD PTR [rdi+0x30]
  41ab15:	movzx  eax,WORD PTR [rdi+0xe]
  41ab19:	cmp    eax,0x1
  41ab1c:	jne    41ab27 <flatcc_builder_end_buffer@@Base+0x57>
  41ab22:	jmp    41ab46 <flatcc_builder_end_buffer@@Base+0x76>
  41ab27:	lea    rdi,[rip+0xd4dd]        # 42800b <flatcc_builder_padding_base@@Base+0x45b>
  41ab2e:	lea    rsi,[rip+0xd28d]        # 427dc2 <flatcc_builder_padding_base@@Base+0x212>
  41ab35:	mov    edx,0x346
  41ab3a:	lea    rcx,[rip+0xd4f6]        # 428037 <flatcc_builder_padding_base@@Base+0x487>
  41ab41:	call   404090 <__assert_fail@plt>
  41ab46:	mov    rdi,QWORD PTR [rbp-0x10]
  41ab4a:	mov    rax,QWORD PTR [rbp-0x10]
  41ab4e:	movzx  esi,WORD PTR [rax+0xec]
  41ab55:	call   41a5c0 <flatcc_builder_create_buffer@@Base+0x410>
  41ab5a:	mov    rdi,QWORD PTR [rbp-0x10]
  41ab5e:	mov    rax,QWORD PTR [rbp-0x10]
  41ab62:	add    rax,0x110
  41ab68:	mov    rcx,QWORD PTR [rbp-0x10]
  41ab6c:	mov    dx,WORD PTR [rcx+0xec]
  41ab73:	mov    ecx,DWORD PTR [rbp-0x14]
  41ab76:	mov    r8,QWORD PTR [rbp-0x10]
  41ab7a:	mov    r9w,WORD PTR [r8+0xe8]
  41ab82:	mov    esi,DWORD PTR [rbp-0x1c]
  41ab85:	mov    DWORD PTR [rbp-0x20],esi
  41ab88:	mov    rsi,rax
  41ab8b:	movzx  edx,dx
  41ab8e:	movzx  r8d,r9w
  41ab92:	mov    r9d,DWORD PTR [rbp-0x20]
  41ab96:	call   41a1b0 <flatcc_builder_create_buffer@@Base>
  41ab9b:	xor    ecx,ecx
  41ab9d:	mov    DWORD PTR [rbp-0x18],eax
  41aba0:	cmp    ecx,eax
  41aba2:	jne    41abb4 <flatcc_builder_end_buffer@@Base+0xe4>
  41aba8:	mov    DWORD PTR [rbp-0x4],0x0
  41abaf:	jmp    41ac19 <flatcc_builder_end_buffer@@Base+0x149>
  41abb4:	mov    rax,QWORD PTR [rbp-0x10]
  41abb8:	mov    rax,QWORD PTR [rax+0x30]
  41abbc:	mov    ecx,DWORD PTR [rax+0x14]
  41abbf:	mov    rax,QWORD PTR [rbp-0x10]
  41abc3:	mov    DWORD PTR [rax+0xf8],ecx
  41abc9:	mov    rax,QWORD PTR [rbp-0x10]
  41abcd:	mov    rax,QWORD PTR [rax+0x30]
  41abd1:	mov    ecx,DWORD PTR [rax+0x1c]
  41abd4:	mov    rax,QWORD PTR [rbp-0x10]
  41abd8:	mov    DWORD PTR [rax+0x100],ecx
  41abde:	mov    rax,QWORD PTR [rbp-0x10]
  41abe2:	mov    rax,QWORD PTR [rax+0x30]
  41abe6:	mov    ecx,DWORD PTR [rax+0x10]
  41abe9:	mov    rax,QWORD PTR [rbp-0x10]
  41abed:	mov    DWORD PTR [rax+0x110],ecx
  41abf3:	mov    rax,QWORD PTR [rbp-0x10]
  41abf7:	mov    rax,QWORD PTR [rax+0x30]
  41abfb:	mov    dx,WORD PTR [rax+0x20]
  41abff:	mov    rax,QWORD PTR [rbp-0x10]
  41ac03:	mov    WORD PTR [rax+0x10c],dx
  41ac0a:	mov    rdi,QWORD PTR [rbp-0x10]
  41ac0e:	call   41ac30 <flatcc_builder_end_buffer@@Base+0x160>
  41ac13:	mov    ecx,DWORD PTR [rbp-0x18]
  41ac16:	mov    DWORD PTR [rbp-0x4],ecx
  41ac19:	mov    eax,DWORD PTR [rbp-0x4]
  41ac1c:	add    rsp,0x20
  41ac20:	pop    rbp
  41ac21:	ret    
  41ac22:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ac2c:	nop    DWORD PTR [rax+0x0]
  41ac30:	push   rbp
  41ac31:	mov    rbp,rsp
  41ac34:	sub    rsp,0x10
  41ac38:	xor    esi,esi
  41ac3a:	mov    QWORD PTR [rbp-0x8],rdi
  41ac3e:	mov    rdi,QWORD PTR [rbp-0x8]
  41ac42:	mov    rdi,QWORD PTR [rdi+0x18]
  41ac46:	mov    rax,QWORD PTR [rbp-0x8]
  41ac4a:	mov    ecx,DWORD PTR [rax+0x20]
  41ac4d:	mov    edx,ecx
  41ac4f:	call   4040a0 <memset@plt>
  41ac54:	mov    rax,QWORD PTR [rbp-0x8]
  41ac58:	mov    rax,QWORD PTR [rax+0x30]
  41ac5c:	mov    ecx,DWORD PTR [rax+0x8]
  41ac5f:	mov    rax,QWORD PTR [rbp-0x8]
  41ac63:	mov    DWORD PTR [rax+0x20],ecx
  41ac66:	mov    rax,QWORD PTR [rbp-0x8]
  41ac6a:	mov    rax,QWORD PTR [rax+0x30]
  41ac6e:	mov    ecx,DWORD PTR [rax]
  41ac70:	mov    rax,QWORD PTR [rbp-0x8]
  41ac74:	mov    DWORD PTR [rax+0x28],ecx
  41ac77:	mov    rdi,QWORD PTR [rbp-0x8]
  41ac7b:	mov    rax,QWORD PTR [rbp-0x8]
  41ac7f:	mov    rax,QWORD PTR [rax+0x30]
  41ac83:	mov    esi,DWORD PTR [rax+0x4]
  41ac86:	call   41ad70 <flatcc_builder_start_struct@@Base+0x80>
  41ac8b:	mov    rdi,QWORD PTR [rbp-0x8]
  41ac8f:	mov    rax,QWORD PTR [rbp-0x8]
  41ac93:	movzx  esi,WORD PTR [rax+0xea]
  41ac9a:	call   41a5c0 <flatcc_builder_create_buffer@@Base+0x410>
  41ac9f:	mov    rax,QWORD PTR [rbp-0x8]
  41aca3:	mov    rax,QWORD PTR [rax+0x30]
  41aca7:	mov    r8w,WORD PTR [rax+0xc]
  41acac:	mov    rax,QWORD PTR [rbp-0x8]
  41acb0:	mov    WORD PTR [rax+0xea],r8w
  41acb8:	mov    rax,QWORD PTR [rbp-0x8]
  41acbc:	mov    rdx,QWORD PTR [rax+0x30]
  41acc0:	add    rdx,0xffffffffffffffdc
  41acc4:	mov    QWORD PTR [rax+0x30],rdx
  41acc8:	mov    rax,QWORD PTR [rbp-0x8]
  41accc:	mov    ecx,DWORD PTR [rax+0x104]
  41acd2:	add    ecx,0xffffffff
  41acd5:	mov    DWORD PTR [rax+0x104],ecx
  41acdb:	add    rsp,0x10
  41acdf:	pop    rbp
  41ace0:	ret    
  41ace1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41aceb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041acf0 <flatcc_builder_start_struct@@Base>:
  41acf0:	push   rbp
  41acf1:	mov    rbp,rsp
  41acf4:	sub    rsp,0x20
  41acf8:	mov    ax,dx
  41acfb:	mov    QWORD PTR [rbp-0x10],rdi
  41acff:	mov    QWORD PTR [rbp-0x18],rsi
  41ad03:	mov    WORD PTR [rbp-0x1a],ax
  41ad07:	mov    rdi,QWORD PTR [rbp-0x10]
  41ad0b:	movzx  esi,WORD PTR [rbp-0x1a]
  41ad0f:	call   41a900 <flatcc_builder_start_buffer@@Base+0x170>
  41ad14:	cmp    eax,0x0
  41ad17:	je     41ad2a <flatcc_builder_start_struct@@Base+0x3a>
  41ad1d:	mov    QWORD PTR [rbp-0x8],0x0
  41ad25:	jmp    41ad59 <flatcc_builder_start_struct@@Base+0x69>
  41ad2a:	mov    rax,QWORD PTR [rbp-0x10]
  41ad2e:	mov    rax,QWORD PTR [rax+0x30]
  41ad32:	mov    WORD PTR [rax+0xe],0x2
  41ad38:	mov    rdi,QWORD PTR [rbp-0x10]
  41ad3c:	mov    esi,0xfffffffc
  41ad41:	call   41ad70 <flatcc_builder_start_struct@@Base+0x80>
  41ad46:	mov    rdi,QWORD PTR [rbp-0x10]
  41ad4a:	mov    rax,QWORD PTR [rbp-0x18]
  41ad4e:	mov    esi,eax
  41ad50:	call   41adf0 <flatcc_builder_start_struct@@Base+0x100>
  41ad55:	mov    QWORD PTR [rbp-0x8],rax
  41ad59:	mov    rax,QWORD PTR [rbp-0x8]
  41ad5d:	add    rsp,0x20
  41ad61:	pop    rbp
  41ad62:	ret    
  41ad63:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ad6d:	nop    DWORD PTR [rax]
  41ad70:	push   rbp
  41ad71:	mov    rbp,rsp
  41ad74:	mov    QWORD PTR [rbp-0x8],rdi
  41ad78:	mov    DWORD PTR [rbp-0xc],esi
  41ad7b:	mov    rdi,QWORD PTR [rbp-0x8]
  41ad7f:	add    rdi,0x58
  41ad83:	add    rdi,0x10
  41ad87:	mov    QWORD PTR [rbp-0x18],rdi
  41ad8b:	mov    rdi,QWORD PTR [rbp-0x8]
  41ad8f:	mov    rdi,QWORD PTR [rdi+0x68]
  41ad93:	mov    rax,QWORD PTR [rbp-0x8]
  41ad97:	mov    esi,DWORD PTR [rax+0x28]
  41ad9a:	mov    eax,esi
  41ad9c:	add    rdi,rax
  41ad9f:	mov    rax,QWORD PTR [rbp-0x8]
  41ada3:	mov    QWORD PTR [rax+0x18],rdi
  41ada7:	mov    rax,QWORD PTR [rbp-0x18]
  41adab:	mov    rax,QWORD PTR [rax+0x8]
  41adaf:	mov    esi,eax
  41adb1:	mov    rax,QWORD PTR [rbp-0x8]
  41adb5:	sub    esi,DWORD PTR [rax+0x28]
  41adb8:	mov    rax,QWORD PTR [rbp-0x8]
  41adbc:	mov    DWORD PTR [rax+0x24],esi
  41adbf:	mov    rax,QWORD PTR [rbp-0x8]
  41adc3:	mov    esi,DWORD PTR [rax+0x24]
  41adc6:	cmp    esi,DWORD PTR [rbp-0xc]
  41adc9:	jbe    41add9 <flatcc_builder_start_struct@@Base+0xe9>
  41adcf:	mov    eax,DWORD PTR [rbp-0xc]
  41add2:	mov    rcx,QWORD PTR [rbp-0x8]
  41add6:	mov    DWORD PTR [rcx+0x24],eax
  41add9:	mov    eax,DWORD PTR [rbp-0xc]
  41addc:	mov    rcx,QWORD PTR [rbp-0x8]
  41ade0:	mov    rcx,QWORD PTR [rcx+0x30]
  41ade4:	mov    DWORD PTR [rcx+0x4],eax
  41ade7:	pop    rbp
  41ade8:	ret    
  41ade9:	nop    DWORD PTR [rax+0x0]
  41adf0:	push   rbp
  41adf1:	mov    rbp,rsp
  41adf4:	sub    rsp,0x20
  41adf8:	mov    QWORD PTR [rbp-0x10],rdi
  41adfc:	mov    DWORD PTR [rbp-0x14],esi
  41adff:	mov    rdi,QWORD PTR [rbp-0x10]
  41ae03:	mov    esi,DWORD PTR [rdi+0x20]
  41ae06:	mov    edi,esi
  41ae08:	mov    QWORD PTR [rbp-0x20],rdi
  41ae0c:	mov    esi,DWORD PTR [rbp-0x14]
  41ae0f:	mov    rdi,QWORD PTR [rbp-0x10]
  41ae13:	add    esi,DWORD PTR [rdi+0x20]
  41ae16:	mov    DWORD PTR [rdi+0x20],esi
  41ae19:	mov    rdi,QWORD PTR [rbp-0x10]
  41ae1d:	cmp    esi,DWORD PTR [rdi+0x24]
  41ae20:	jb     41ae5d <flatcc_builder_start_struct@@Base+0x16d>
  41ae26:	mov    rdi,QWORD PTR [rbp-0x10]
  41ae2a:	mov    rax,QWORD PTR [rbp-0x10]
  41ae2e:	mov    ecx,DWORD PTR [rax+0x20]
  41ae31:	add    ecx,0x1
  41ae34:	mov    ecx,ecx
  41ae36:	mov    esi,ecx
  41ae38:	mov    edx,0xfffffffc
  41ae3d:	call   41ee10 <flatcc_builder_get_emit_context@@Base+0x50>
  41ae42:	cmp    eax,0x0
  41ae45:	je     41ae58 <flatcc_builder_start_struct@@Base+0x168>
  41ae4b:	mov    QWORD PTR [rbp-0x8],0x0
  41ae53:	jmp    41ae6d <flatcc_builder_start_struct@@Base+0x17d>
  41ae58:	jmp    41ae5d <flatcc_builder_start_struct@@Base+0x16d>
  41ae5d:	mov    rax,QWORD PTR [rbp-0x10]
  41ae61:	mov    rax,QWORD PTR [rax+0x18]
  41ae65:	add    rax,QWORD PTR [rbp-0x20]
  41ae69:	mov    QWORD PTR [rbp-0x8],rax
  41ae6d:	mov    rax,QWORD PTR [rbp-0x8]
  41ae71:	add    rsp,0x20
  41ae75:	pop    rbp
  41ae76:	ret    
  41ae77:	nop    WORD PTR [rax+rax*1+0x0]

000000000041ae80 <flatcc_builder_struct_edit@@Base>:
  41ae80:	push   rbp
  41ae81:	mov    rbp,rsp
  41ae84:	mov    QWORD PTR [rbp-0x8],rdi
  41ae88:	mov    rdi,QWORD PTR [rbp-0x8]
  41ae8c:	mov    rax,QWORD PTR [rdi+0x18]
  41ae90:	pop    rbp
  41ae91:	ret    
  41ae92:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ae9c:	nop    DWORD PTR [rax+0x0]

000000000041aea0 <flatcc_builder_end_struct@@Base>:
  41aea0:	push   rbp
  41aea1:	mov    rbp,rsp
  41aea4:	sub    rsp,0x20
  41aea8:	mov    QWORD PTR [rbp-0x10],rdi
  41aeac:	mov    rdi,QWORD PTR [rbp-0x10]
  41aeb0:	mov    rdi,QWORD PTR [rdi+0x30]
  41aeb4:	movzx  eax,WORD PTR [rdi+0xe]
  41aeb8:	cmp    eax,0x2
  41aebb:	jne    41aec6 <flatcc_builder_end_struct@@Base+0x26>
  41aec1:	jmp    41aee5 <flatcc_builder_end_struct@@Base+0x45>
  41aec6:	lea    rdi,[rip+0xd1c3]        # 428090 <flatcc_builder_padding_base@@Base+0x4e0>
  41aecd:	lea    rsi,[rip+0xceee]        # 427dc2 <flatcc_builder_padding_base@@Base+0x212>
  41aed4:	mov    edx,0x368
  41aed9:	lea    rcx,[rip+0xd1dc]        # 4280bc <flatcc_builder_padding_base@@Base+0x50c>
  41aee0:	call   404090 <__assert_fail@plt>
  41aee5:	mov    rdi,QWORD PTR [rbp-0x10]
  41aee9:	mov    rax,QWORD PTR [rbp-0x10]
  41aeed:	mov    rsi,QWORD PTR [rax+0x18]
  41aef1:	mov    rax,QWORD PTR [rbp-0x10]
  41aef5:	mov    ecx,DWORD PTR [rax+0x20]
  41aef8:	mov    edx,ecx
  41aefa:	mov    rax,QWORD PTR [rbp-0x10]
  41aefe:	movzx  ecx,WORD PTR [rax+0xea]
  41af05:	call   41a610 <flatcc_builder_create_struct@@Base>
  41af0a:	xor    ecx,ecx
  41af0c:	mov    DWORD PTR [rbp-0x14],eax
  41af0f:	cmp    ecx,eax
  41af11:	jne    41af23 <flatcc_builder_end_struct@@Base+0x83>
  41af17:	mov    DWORD PTR [rbp-0x4],0x0
  41af1e:	jmp    41af32 <flatcc_builder_end_struct@@Base+0x92>
  41af23:	mov    rdi,QWORD PTR [rbp-0x10]
  41af27:	call   41ac30 <flatcc_builder_end_buffer@@Base+0x160>
  41af2c:	mov    eax,DWORD PTR [rbp-0x14]
  41af2f:	mov    DWORD PTR [rbp-0x4],eax
  41af32:	mov    eax,DWORD PTR [rbp-0x4]
  41af35:	add    rsp,0x20
  41af39:	pop    rbp
  41af3a:	ret    
  41af3b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041af40 <flatcc_builder_extend_vector@@Base>:
  41af40:	push   rbp
  41af41:	mov    rbp,rsp
  41af44:	sub    rsp,0x20
  41af48:	mov    QWORD PTR [rbp-0x10],rdi
  41af4c:	mov    QWORD PTR [rbp-0x18],rsi
  41af50:	mov    rdi,QWORD PTR [rbp-0x10]
  41af54:	mov    rsi,QWORD PTR [rbp-0x18]
  41af58:	mov    eax,esi
  41af5a:	mov    rsi,QWORD PTR [rbp-0x10]
  41af5e:	mov    rsi,QWORD PTR [rsi+0x30]
  41af62:	mov    edx,DWORD PTR [rsi+0x18]
  41af65:	mov    esi,eax
  41af67:	call   41afb0 <flatcc_builder_extend_vector@@Base+0x70>
  41af6c:	cmp    eax,0x0
  41af6f:	je     41af82 <flatcc_builder_extend_vector@@Base+0x42>
  41af75:	mov    QWORD PTR [rbp-0x8],0x0
  41af7d:	jmp    41afa5 <flatcc_builder_extend_vector@@Base+0x65>
  41af82:	mov    rdi,QWORD PTR [rbp-0x10]
  41af86:	mov    rax,QWORD PTR [rbp-0x10]
  41af8a:	mov    rax,QWORD PTR [rax+0x30]
  41af8e:	mov    ecx,DWORD PTR [rax+0x10]
  41af91:	mov    rax,QWORD PTR [rbp-0x18]
  41af95:	mov    edx,eax
  41af97:	imul   ecx,edx
  41af9a:	mov    esi,ecx
  41af9c:	call   41adf0 <flatcc_builder_start_struct@@Base+0x100>
  41afa1:	mov    QWORD PTR [rbp-0x8],rax
  41afa5:	mov    rax,QWORD PTR [rbp-0x8]
  41afa9:	add    rsp,0x20
  41afad:	pop    rbp
  41afae:	ret    
  41afaf:	nop
  41afb0:	push   rbp
  41afb1:	mov    rbp,rsp
  41afb4:	sub    rsp,0x20
  41afb8:	mov    QWORD PTR [rbp-0x10],rdi
  41afbc:	mov    DWORD PTR [rbp-0x14],esi
  41afbf:	mov    DWORD PTR [rbp-0x18],edx
  41afc2:	mov    rdi,QWORD PTR [rbp-0x10]
  41afc6:	mov    rdi,QWORD PTR [rdi+0x30]
  41afca:	mov    edx,DWORD PTR [rdi+0x14]
  41afcd:	mov    DWORD PTR [rbp-0x1c],edx
  41afd0:	mov    edx,DWORD PTR [rbp-0x1c]
  41afd3:	add    edx,DWORD PTR [rbp-0x14]
  41afd6:	mov    DWORD PTR [rbp-0x20],edx
  41afd9:	mov    edx,DWORD PTR [rbp-0x1c]
  41afdc:	cmp    edx,DWORD PTR [rbp-0x20]
  41afdf:	ja     41aff1 <flatcc_builder_extend_vector@@Base+0xb1>
  41afe5:	mov    eax,DWORD PTR [rbp-0x20]
  41afe8:	cmp    eax,DWORD PTR [rbp-0x18]
  41afeb:	jbe    41b039 <flatcc_builder_extend_vector@@Base+0xf9>
  41aff1:	mov    eax,DWORD PTR [rbp-0x1c]
  41aff4:	cmp    eax,DWORD PTR [rbp-0x20]
  41aff7:	ja     41b00e <flatcc_builder_extend_vector@@Base+0xce>
  41affd:	mov    eax,DWORD PTR [rbp-0x20]
  41b000:	cmp    eax,DWORD PTR [rbp-0x18]
  41b003:	ja     41b00e <flatcc_builder_extend_vector@@Base+0xce>
  41b009:	jmp    41b02d <flatcc_builder_extend_vector@@Base+0xed>
  41b00e:	lea    rdi,[rip+0xde76]        # 428e8b <flatcc_builder_padding_base@@Base+0x12db>
  41b015:	lea    rsi,[rip+0xcda6]        # 427dc2 <flatcc_builder_padding_base@@Base+0x212>
  41b01c:	mov    edx,0x37c
  41b021:	lea    rcx,[rip+0xde7e]        # 428ea6 <flatcc_builder_padding_base@@Base+0x12f6>
  41b028:	call   404090 <__assert_fail@plt>
  41b02d:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41b034:	jmp    41b04e <flatcc_builder_extend_vector@@Base+0x10e>
  41b039:	mov    eax,DWORD PTR [rbp-0x20]
  41b03c:	mov    rcx,QWORD PTR [rbp-0x10]
  41b040:	mov    rcx,QWORD PTR [rcx+0x30]
  41b044:	mov    DWORD PTR [rcx+0x14],eax
  41b047:	mov    DWORD PTR [rbp-0x4],0x0
  41b04e:	mov    eax,DWORD PTR [rbp-0x4]
  41b051:	add    rsp,0x20
  41b055:	pop    rbp
  41b056:	ret    
  41b057:	nop    WORD PTR [rax+rax*1+0x0]

000000000041b060 <flatcc_builder_vector_push@@Base>:
  41b060:	push   rbp
  41b061:	mov    rbp,rsp
  41b064:	sub    rsp,0x20
  41b068:	mov    QWORD PTR [rbp-0x10],rdi
  41b06c:	mov    QWORD PTR [rbp-0x18],rsi
  41b070:	mov    rsi,QWORD PTR [rbp-0x10]
  41b074:	mov    rsi,QWORD PTR [rsi+0x30]
  41b078:	movzx  eax,WORD PTR [rsi+0xe]
  41b07c:	cmp    eax,0x4
  41b07f:	jne    41b08a <flatcc_builder_vector_push@@Base+0x2a>
  41b085:	jmp    41b0a9 <flatcc_builder_vector_push@@Base+0x49>
  41b08a:	lea    rdi,[rip+0xd06e]        # 4280ff <flatcc_builder_padding_base@@Base+0x54f>
  41b091:	lea    rsi,[rip+0xcd2a]        # 427dc2 <flatcc_builder_padding_base@@Base+0x212>
  41b098:	mov    edx,0x38b
  41b09d:	lea    rcx,[rip+0xd087]        # 42812b <flatcc_builder_padding_base@@Base+0x57b>
  41b0a4:	call   404090 <__assert_fail@plt>
  41b0a9:	mov    rax,QWORD PTR [rbp-0x10]
  41b0ad:	mov    rax,QWORD PTR [rax+0x30]
  41b0b1:	mov    ecx,DWORD PTR [rax+0x14]
  41b0b4:	mov    rax,QWORD PTR [rbp-0x10]
  41b0b8:	mov    rax,QWORD PTR [rax+0x30]
  41b0bc:	cmp    ecx,DWORD PTR [rax+0x18]
  41b0bf:	jbe    41b112 <flatcc_builder_vector_push@@Base+0xb2>
  41b0c5:	mov    rax,QWORD PTR [rbp-0x10]
  41b0c9:	mov    rax,QWORD PTR [rax+0x30]
  41b0cd:	mov    ecx,DWORD PTR [rax+0x14]
  41b0d0:	mov    rax,QWORD PTR [rbp-0x10]
  41b0d4:	mov    rax,QWORD PTR [rax+0x30]
  41b0d8:	cmp    ecx,DWORD PTR [rax+0x18]
  41b0db:	ja     41b0e6 <flatcc_builder_vector_push@@Base+0x86>
  41b0e1:	jmp    41b105 <flatcc_builder_vector_push@@Base+0xa5>
  41b0e6:	lea    rdi,[rip+0xd081]        # 42816e <flatcc_builder_padding_base@@Base+0x5be>
  41b0ed:	lea    rsi,[rip+0xccce]        # 427dc2 <flatcc_builder_padding_base@@Base+0x212>
  41b0f4:	mov    edx,0x38c
  41b0f9:	lea    rcx,[rip+0xd02b]        # 42812b <flatcc_builder_padding_base@@Base+0x57b>
  41b100:	call   404090 <__assert_fail@plt>
  41b105:	mov    QWORD PTR [rbp-0x8],0x0
  41b10d:	jmp    41b13f <flatcc_builder_vector_push@@Base+0xdf>
  41b112:	mov    rax,QWORD PTR [rbp-0x10]
  41b116:	mov    rax,QWORD PTR [rax+0x30]
  41b11a:	mov    ecx,DWORD PTR [rax+0x14]
  41b11d:	add    ecx,0x1
  41b120:	mov    DWORD PTR [rax+0x14],ecx
  41b123:	mov    rdi,QWORD PTR [rbp-0x10]
  41b127:	mov    rsi,QWORD PTR [rbp-0x18]
  41b12b:	mov    rax,QWORD PTR [rbp-0x10]
  41b12f:	mov    rax,QWORD PTR [rax+0x30]
  41b133:	mov    edx,DWORD PTR [rax+0x10]
  41b136:	call   41b150 <flatcc_builder_vector_push@@Base+0xf0>
  41b13b:	mov    QWORD PTR [rbp-0x8],rax
  41b13f:	mov    rax,QWORD PTR [rbp-0x8]
  41b143:	add    rsp,0x20
  41b147:	pop    rbp
  41b148:	ret    
  41b149:	nop    DWORD PTR [rax+0x0]
  41b150:	push   rbp
  41b151:	mov    rbp,rsp
  41b154:	sub    rsp,0x30
  41b158:	mov    QWORD PTR [rbp-0x10],rdi
  41b15c:	mov    QWORD PTR [rbp-0x18],rsi
  41b160:	mov    DWORD PTR [rbp-0x1c],edx
  41b163:	mov    rdi,QWORD PTR [rbp-0x10]
  41b167:	mov    esi,DWORD PTR [rbp-0x1c]
  41b16a:	call   41adf0 <flatcc_builder_start_struct@@Base+0x100>
  41b16f:	mov    QWORD PTR [rbp-0x28],rax
  41b173:	cmp    rax,0x0
  41b177:	jne    41b18a <flatcc_builder_vector_push@@Base+0x12a>
  41b17d:	mov    QWORD PTR [rbp-0x8],0x0
  41b185:	jmp    41b1a4 <flatcc_builder_vector_push@@Base+0x144>
  41b18a:	mov    rdi,QWORD PTR [rbp-0x28]
  41b18e:	mov    rsi,QWORD PTR [rbp-0x18]
  41b192:	mov    eax,DWORD PTR [rbp-0x1c]
  41b195:	mov    edx,eax
  41b197:	call   4040f0 <memcpy@plt>
  41b19c:	mov    rdx,QWORD PTR [rbp-0x28]
  41b1a0:	mov    QWORD PTR [rbp-0x8],rdx
  41b1a4:	mov    rax,QWORD PTR [rbp-0x8]
  41b1a8:	add    rsp,0x30
  41b1ac:	pop    rbp
  41b1ad:	ret    
  41b1ae:	xchg   ax,ax

000000000041b1b0 <flatcc_builder_append_vector@@Base>:
  41b1b0:	push   rbp
  41b1b1:	mov    rbp,rsp
  41b1b4:	sub    rsp,0x20
  41b1b8:	mov    QWORD PTR [rbp-0x10],rdi
  41b1bc:	mov    QWORD PTR [rbp-0x18],rsi
  41b1c0:	mov    QWORD PTR [rbp-0x20],rdx
  41b1c4:	mov    rdx,QWORD PTR [rbp-0x10]
  41b1c8:	mov    rdx,QWORD PTR [rdx+0x30]
  41b1cc:	movzx  eax,WORD PTR [rdx+0xe]
  41b1d0:	cmp    eax,0x4
  41b1d3:	jne    41b1de <flatcc_builder_append_vector@@Base+0x2e>
  41b1d9:	jmp    41b1fd <flatcc_builder_append_vector@@Base+0x4d>
  41b1de:	lea    rdi,[rip+0xcf1a]        # 4280ff <flatcc_builder_padding_base@@Base+0x54f>
  41b1e5:	lea    rsi,[rip+0xcbd6]        # 427dc2 <flatcc_builder_padding_base@@Base+0x212>
  41b1ec:	mov    edx,0x393
  41b1f1:	lea    rcx,[rip+0xcfb3]        # 4281ab <flatcc_builder_padding_base@@Base+0x5fb>
  41b1f8:	call   404090 <__assert_fail@plt>
  41b1fd:	mov    rdi,QWORD PTR [rbp-0x10]
  41b201:	mov    rax,QWORD PTR [rbp-0x20]
  41b205:	mov    ecx,eax
  41b207:	mov    rax,QWORD PTR [rbp-0x10]
  41b20b:	mov    rax,QWORD PTR [rax+0x30]
  41b20f:	mov    edx,DWORD PTR [rax+0x18]
  41b212:	mov    esi,ecx
  41b214:	call   41afb0 <flatcc_builder_extend_vector@@Base+0x70>
  41b219:	cmp    eax,0x0
  41b21c:	je     41b22f <flatcc_builder_append_vector@@Base+0x7f>
  41b222:	mov    QWORD PTR [rbp-0x8],0x0
  41b22a:	jmp    41b256 <flatcc_builder_append_vector@@Base+0xa6>
  41b22f:	mov    rdi,QWORD PTR [rbp-0x10]
  41b233:	mov    rsi,QWORD PTR [rbp-0x18]
  41b237:	mov    rax,QWORD PTR [rbp-0x10]
  41b23b:	mov    rax,QWORD PTR [rax+0x30]
  41b23f:	mov    ecx,DWORD PTR [rax+0x10]
  41b242:	mov    rax,QWORD PTR [rbp-0x20]
  41b246:	mov    edx,eax
  41b248:	imul   ecx,edx
  41b24b:	mov    edx,ecx
  41b24d:	call   41b150 <flatcc_builder_vector_push@@Base+0xf0>
  41b252:	mov    QWORD PTR [rbp-0x8],rax
  41b256:	mov    rax,QWORD PTR [rbp-0x8]
  41b25a:	add    rsp,0x20
  41b25e:	pop    rbp
  41b25f:	ret    

000000000041b260 <flatcc_builder_extend_offset_vector@@Base>:
  41b260:	push   rbp
  41b261:	mov    rbp,rsp
  41b264:	sub    rsp,0x20
  41b268:	mov    QWORD PTR [rbp-0x10],rdi
  41b26c:	mov    QWORD PTR [rbp-0x18],rsi
  41b270:	mov    rdi,QWORD PTR [rbp-0x10]
  41b274:	mov    rsi,QWORD PTR [rbp-0x18]
  41b278:	mov    eax,esi
  41b27a:	mov    esi,eax
  41b27c:	mov    edx,0x3fffffff
  41b281:	call   41afb0 <flatcc_builder_extend_vector@@Base+0x70>
  41b286:	cmp    eax,0x0
  41b289:	je     41b29c <flatcc_builder_extend_offset_vector@@Base+0x3c>
  41b28f:	mov    QWORD PTR [rbp-0x8],0x0
  41b297:	jmp    41b2bb <flatcc_builder_extend_offset_vector@@Base+0x5b>
  41b29c:	mov    rdi,QWORD PTR [rbp-0x10]
  41b2a0:	mov    rax,QWORD PTR [rbp-0x18]
  41b2a4:	mov    ecx,eax
  41b2a6:	mov    ecx,ecx
  41b2a8:	mov    eax,ecx
  41b2aa:	shl    rax,0x2
  41b2ae:	mov    ecx,eax
  41b2b0:	mov    esi,ecx
  41b2b2:	call   41adf0 <flatcc_builder_start_struct@@Base+0x100>
  41b2b7:	mov    QWORD PTR [rbp-0x8],rax
  41b2bb:	mov    rax,QWORD PTR [rbp-0x8]
  41b2bf:	add    rsp,0x20
  41b2c3:	pop    rbp
  41b2c4:	ret    
  41b2c5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b2cf:	nop

000000000041b2d0 <flatcc_builder_offset_vector_push@@Base>:
  41b2d0:	push   rbp
  41b2d1:	mov    rbp,rsp
  41b2d4:	sub    rsp,0x20
  41b2d8:	mov    QWORD PTR [rbp-0x10],rdi
  41b2dc:	mov    DWORD PTR [rbp-0x14],esi
  41b2df:	mov    rdi,QWORD PTR [rbp-0x10]
  41b2e3:	mov    rdi,QWORD PTR [rdi+0x30]
  41b2e7:	movzx  esi,WORD PTR [rdi+0xe]
  41b2eb:	cmp    esi,0x5
  41b2ee:	jne    41b2f9 <flatcc_builder_offset_vector_push@@Base+0x29>
  41b2f4:	jmp    41b318 <flatcc_builder_offset_vector_push@@Base+0x48>
  41b2f9:	lea    rdi,[rip+0xcef8]        # 4281f8 <flatcc_builder_padding_base@@Base+0x648>
  41b300:	lea    rsi,[rip+0xcabb]        # 427dc2 <flatcc_builder_padding_base@@Base+0x212>
  41b307:	mov    edx,0x3a6
  41b30c:	lea    rcx,[rip+0xcf18]        # 42822b <flatcc_builder_padding_base@@Base+0x67b>
  41b313:	call   404090 <__assert_fail@plt>
  41b318:	mov    rax,QWORD PTR [rbp-0x10]
  41b31c:	mov    rax,QWORD PTR [rax+0x30]
  41b320:	mov    ecx,DWORD PTR [rax+0x14]
  41b323:	mov    eax,ecx
  41b325:	cmp    rax,0x3fffffff
  41b32b:	jne    41b33e <flatcc_builder_offset_vector_push@@Base+0x6e>
  41b331:	mov    QWORD PTR [rbp-0x8],0x0
  41b339:	jmp    41b38c <flatcc_builder_offset_vector_push@@Base+0xbc>
  41b33e:	mov    rax,QWORD PTR [rbp-0x10]
  41b342:	mov    rax,QWORD PTR [rax+0x30]
  41b346:	mov    ecx,DWORD PTR [rax+0x14]
  41b349:	add    ecx,0x1
  41b34c:	mov    DWORD PTR [rax+0x14],ecx
  41b34f:	mov    rdi,QWORD PTR [rbp-0x10]
  41b353:	mov    esi,0x4
  41b358:	call   41adf0 <flatcc_builder_start_struct@@Base+0x100>
  41b35d:	xor    ecx,ecx
  41b35f:	mov    edi,ecx
  41b361:	mov    QWORD PTR [rbp-0x20],rax
  41b365:	cmp    rdi,rax
  41b368:	jne    41b37b <flatcc_builder_offset_vector_push@@Base+0xab>
  41b36e:	mov    QWORD PTR [rbp-0x8],0x0
  41b376:	jmp    41b38c <flatcc_builder_offset_vector_push@@Base+0xbc>
  41b37b:	mov    eax,DWORD PTR [rbp-0x14]
  41b37e:	mov    rcx,QWORD PTR [rbp-0x20]
  41b382:	mov    DWORD PTR [rcx],eax
  41b384:	mov    rcx,QWORD PTR [rbp-0x20]
  41b388:	mov    QWORD PTR [rbp-0x8],rcx
  41b38c:	mov    rax,QWORD PTR [rbp-0x8]
  41b390:	add    rsp,0x20
  41b394:	pop    rbp
  41b395:	ret    
  41b396:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000041b3a0 <flatcc_builder_append_offset_vector@@Base>:
  41b3a0:	push   rbp
  41b3a1:	mov    rbp,rsp
  41b3a4:	sub    rsp,0x20
  41b3a8:	mov    QWORD PTR [rbp-0x10],rdi
  41b3ac:	mov    QWORD PTR [rbp-0x18],rsi
  41b3b0:	mov    QWORD PTR [rbp-0x20],rdx
  41b3b4:	mov    rdx,QWORD PTR [rbp-0x10]
  41b3b8:	mov    rdx,QWORD PTR [rdx+0x30]
  41b3bc:	movzx  eax,WORD PTR [rdx+0xe]
  41b3c0:	cmp    eax,0x5
  41b3c3:	jne    41b3ce <flatcc_builder_append_offset_vector@@Base+0x2e>
  41b3c9:	jmp    41b3ed <flatcc_builder_append_offset_vector@@Base+0x4d>
  41b3ce:	lea    rdi,[rip+0xce23]        # 4281f8 <flatcc_builder_padding_base@@Base+0x648>
  41b3d5:	lea    rsi,[rip+0xc9e6]        # 427dc2 <flatcc_builder_padding_base@@Base+0x212>
  41b3dc:	mov    edx,0x3b4
  41b3e1:	lea    rcx,[rip+0xcea5]        # 42828d <flatcc_builder_padding_base@@Base+0x6dd>
  41b3e8:	call   404090 <__assert_fail@plt>
  41b3ed:	mov    rdi,QWORD PTR [rbp-0x10]
  41b3f1:	mov    rax,QWORD PTR [rbp-0x20]
  41b3f5:	mov    ecx,eax
  41b3f7:	mov    esi,ecx
  41b3f9:	mov    edx,0x3fffffff
  41b3fe:	call   41afb0 <flatcc_builder_extend_vector@@Base+0x70>
  41b403:	cmp    eax,0x0
  41b406:	je     41b419 <flatcc_builder_append_offset_vector@@Base+0x79>
  41b40c:	mov    QWORD PTR [rbp-0x8],0x0
  41b414:	jmp    41b43d <flatcc_builder_append_offset_vector@@Base+0x9d>
  41b419:	mov    rdi,QWORD PTR [rbp-0x10]
  41b41d:	mov    rax,QWORD PTR [rbp-0x18]
  41b421:	mov    rcx,QWORD PTR [rbp-0x20]
  41b425:	mov    edx,ecx
  41b427:	mov    edx,edx
  41b429:	mov    ecx,edx
  41b42b:	shl    rcx,0x2
  41b42f:	mov    edx,ecx
  41b431:	mov    rsi,rax
  41b434:	call   41b150 <flatcc_builder_vector_push@@Base+0xf0>
  41b439:	mov    QWORD PTR [rbp-0x8],rax
  41b43d:	mov    rax,QWORD PTR [rbp-0x8]
  41b441:	add    rsp,0x20
  41b445:	pop    rbp
  41b446:	ret    
  41b447:	nop    WORD PTR [rax+rax*1+0x0]

000000000041b450 <flatcc_builder_extend_string@@Base>:
  41b450:	push   rbp
  41b451:	mov    rbp,rsp
  41b454:	sub    rsp,0x20
  41b458:	mov    QWORD PTR [rbp-0x10],rdi
  41b45c:	mov    QWORD PTR [rbp-0x18],rsi
  41b460:	mov    rsi,QWORD PTR [rbp-0x10]
  41b464:	mov    rsi,QWORD PTR [rsi+0x30]
  41b468:	movzx  eax,WORD PTR [rsi+0xe]
  41b46c:	cmp    eax,0x6
  41b46f:	jne    41b47a <flatcc_builder_extend_string@@Base+0x2a>
  41b475:	jmp    41b499 <flatcc_builder_extend_string@@Base+0x49>
  41b47a:	lea    rdi,[rip+0xce80]        # 428301 <flatcc_builder_padding_base@@Base+0x751>
  41b481:	lea    rsi,[rip+0xc93a]        # 427dc2 <flatcc_builder_padding_base@@Base+0x212>
  41b488:	mov    edx,0x3bd
  41b48d:	lea    rcx,[rip+0xce99]        # 42832d <flatcc_builder_padding_base@@Base+0x77d>
  41b494:	call   404090 <__assert_fail@plt>
  41b499:	mov    rdi,QWORD PTR [rbp-0x10]
  41b49d:	mov    rax,QWORD PTR [rbp-0x18]
  41b4a1:	mov    ecx,eax
  41b4a3:	mov    esi,ecx
  41b4a5:	mov    edx,0xffffffff
  41b4aa:	call   41afb0 <flatcc_builder_extend_vector@@Base+0x70>
  41b4af:	cmp    eax,0x0
  41b4b2:	je     41b4c5 <flatcc_builder_extend_string@@Base+0x75>
  41b4b8:	mov    QWORD PTR [rbp-0x8],0x0
  41b4c0:	jmp    41b4da <flatcc_builder_extend_string@@Base+0x8a>
  41b4c5:	mov    rdi,QWORD PTR [rbp-0x10]
  41b4c9:	mov    rax,QWORD PTR [rbp-0x18]
  41b4cd:	mov    ecx,eax
  41b4cf:	mov    esi,ecx
  41b4d1:	call   41adf0 <flatcc_builder_start_struct@@Base+0x100>
  41b4d6:	mov    QWORD PTR [rbp-0x8],rax
  41b4da:	mov    rax,QWORD PTR [rbp-0x8]
  41b4de:	add    rsp,0x20
  41b4e2:	pop    rbp
  41b4e3:	ret    
  41b4e4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b4ee:	xchg   ax,ax

000000000041b4f0 <flatcc_builder_append_string@@Base>:
  41b4f0:	push   rbp
  41b4f1:	mov    rbp,rsp
  41b4f4:	sub    rsp,0x20
  41b4f8:	mov    QWORD PTR [rbp-0x10],rdi
  41b4fc:	mov    QWORD PTR [rbp-0x18],rsi
  41b500:	mov    QWORD PTR [rbp-0x20],rdx
  41b504:	mov    rdx,QWORD PTR [rbp-0x10]
  41b508:	mov    rdx,QWORD PTR [rdx+0x30]
  41b50c:	movzx  eax,WORD PTR [rdx+0xe]
  41b510:	cmp    eax,0x6
  41b513:	jne    41b51e <flatcc_builder_append_string@@Base+0x2e>
  41b519:	jmp    41b53d <flatcc_builder_append_string@@Base+0x4d>
  41b51e:	lea    rdi,[rip+0xcddc]        # 428301 <flatcc_builder_padding_base@@Base+0x751>
  41b525:	lea    rsi,[rip+0xc896]        # 427dc2 <flatcc_builder_padding_base@@Base+0x212>
  41b52c:	mov    edx,0x3c6
  41b531:	lea    rcx,[rip+0xce34]        # 42836c <flatcc_builder_padding_base@@Base+0x7bc>
  41b538:	call   404090 <__assert_fail@plt>
  41b53d:	mov    rdi,QWORD PTR [rbp-0x10]
  41b541:	mov    rax,QWORD PTR [rbp-0x20]
  41b545:	mov    ecx,eax
  41b547:	mov    esi,ecx
  41b549:	mov    edx,0xffffffff
  41b54e:	call   41afb0 <flatcc_builder_extend_vector@@Base+0x70>
  41b553:	cmp    eax,0x0
  41b556:	je     41b569 <flatcc_builder_append_string@@Base+0x79>
  41b55c:	mov    QWORD PTR [rbp-0x8],0x0
  41b564:	jmp    41b582 <flatcc_builder_append_string@@Base+0x92>
  41b569:	mov    rdi,QWORD PTR [rbp-0x10]
  41b56d:	mov    rsi,QWORD PTR [rbp-0x18]
  41b571:	mov    rax,QWORD PTR [rbp-0x20]
  41b575:	mov    ecx,eax
  41b577:	mov    edx,ecx
  41b579:	call   41b150 <flatcc_builder_vector_push@@Base+0xf0>
  41b57e:	mov    QWORD PTR [rbp-0x8],rax
  41b582:	mov    rax,QWORD PTR [rbp-0x8]
  41b586:	add    rsp,0x20
  41b58a:	pop    rbp
  41b58b:	ret    
  41b58c:	nop    DWORD PTR [rax+0x0]

000000000041b590 <flatcc_builder_append_string_str@@Base>:
  41b590:	push   rbp
  41b591:	mov    rbp,rsp
  41b594:	sub    rsp,0x20
  41b598:	mov    QWORD PTR [rbp-0x8],rdi
  41b59c:	mov    QWORD PTR [rbp-0x10],rsi
  41b5a0:	mov    rdi,QWORD PTR [rbp-0x8]
  41b5a4:	mov    rsi,QWORD PTR [rbp-0x10]
  41b5a8:	mov    rax,QWORD PTR [rbp-0x10]
  41b5ac:	mov    QWORD PTR [rbp-0x18],rdi
  41b5b0:	mov    rdi,rax
  41b5b3:	mov    QWORD PTR [rbp-0x20],rsi
  41b5b7:	call   404060 <strlen@plt>
  41b5bc:	mov    rdi,QWORD PTR [rbp-0x18]
  41b5c0:	mov    rsi,QWORD PTR [rbp-0x20]
  41b5c4:	mov    rdx,rax
  41b5c7:	call   41b4f0 <flatcc_builder_append_string@@Base>
  41b5cc:	add    rsp,0x20
  41b5d0:	pop    rbp
  41b5d1:	ret    
  41b5d2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b5dc:	nop    DWORD PTR [rax+0x0]

000000000041b5e0 <flatcc_builder_append_string_strn@@Base>:
  41b5e0:	push   rbp
  41b5e1:	mov    rbp,rsp
  41b5e4:	sub    rsp,0x30
  41b5e8:	mov    QWORD PTR [rbp-0x8],rdi
  41b5ec:	mov    QWORD PTR [rbp-0x10],rsi
  41b5f0:	mov    QWORD PTR [rbp-0x18],rdx
  41b5f4:	mov    rdi,QWORD PTR [rbp-0x8]
  41b5f8:	mov    rsi,QWORD PTR [rbp-0x10]
  41b5fc:	mov    rdx,QWORD PTR [rbp-0x10]
  41b600:	mov    rax,QWORD PTR [rbp-0x18]
  41b604:	mov    QWORD PTR [rbp-0x20],rdi
  41b608:	mov    rdi,rdx
  41b60b:	mov    QWORD PTR [rbp-0x28],rsi
  41b60f:	mov    rsi,rax
  41b612:	call   41b630 <flatcc_builder_append_string_strn@@Base+0x50>
  41b617:	mov    rdi,QWORD PTR [rbp-0x20]
  41b61b:	mov    rsi,QWORD PTR [rbp-0x28]
  41b61f:	mov    rdx,rax
  41b622:	call   41b4f0 <flatcc_builder_append_string@@Base>
  41b627:	add    rsp,0x30
  41b62b:	pop    rbp
  41b62c:	ret    
  41b62d:	nop    DWORD PTR [rax]
  41b630:	push   rbp
  41b631:	mov    rbp,rsp
  41b634:	sub    rsp,0x20
  41b638:	mov    QWORD PTR [rbp-0x8],rdi
  41b63c:	mov    QWORD PTR [rbp-0x10],rsi
  41b640:	mov    rdi,QWORD PTR [rbp-0x8]
  41b644:	mov    rdx,QWORD PTR [rbp-0x10]
  41b648:	xor    esi,esi
  41b64a:	call   4040b0 <memchr@plt>
  41b64f:	mov    QWORD PTR [rbp-0x18],rax
  41b653:	cmp    QWORD PTR [rbp-0x18],0x0
  41b658:	je     41b672 <flatcc_builder_append_string_strn@@Base+0x92>
  41b65e:	mov    rax,QWORD PTR [rbp-0x18]
  41b662:	mov    rcx,QWORD PTR [rbp-0x8]
  41b666:	sub    rax,rcx
  41b669:	mov    QWORD PTR [rbp-0x20],rax
  41b66d:	jmp    41b67a <flatcc_builder_append_string_strn@@Base+0x9a>
  41b672:	mov    rax,QWORD PTR [rbp-0x10]
  41b676:	mov    QWORD PTR [rbp-0x20],rax
  41b67a:	mov    rax,QWORD PTR [rbp-0x20]
  41b67e:	add    rsp,0x20
  41b682:	pop    rbp
  41b683:	ret    
  41b684:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b68e:	xchg   ax,ax

000000000041b690 <flatcc_builder_truncate_vector@@Base>:
  41b690:	push   rbp
  41b691:	mov    rbp,rsp
  41b694:	sub    rsp,0x20
  41b698:	mov    QWORD PTR [rbp-0x10],rdi
  41b69c:	mov    QWORD PTR [rbp-0x18],rsi
  41b6a0:	mov    rsi,QWORD PTR [rbp-0x10]
  41b6a4:	mov    rsi,QWORD PTR [rsi+0x30]
  41b6a8:	movzx  eax,WORD PTR [rsi+0xe]
  41b6ac:	cmp    eax,0x4
  41b6af:	jne    41b6ba <flatcc_builder_truncate_vector@@Base+0x2a>
  41b6b5:	jmp    41b6d9 <flatcc_builder_truncate_vector@@Base+0x49>
  41b6ba:	lea    rdi,[rip+0xca3e]        # 4280ff <flatcc_builder_padding_base@@Base+0x54f>
  41b6c1:	lea    rsi,[rip+0xc6fa]        # 427dc2 <flatcc_builder_padding_base@@Base+0x212>
  41b6c8:	mov    edx,0x3d9
  41b6cd:	lea    rcx,[rip+0xcce5]        # 4283b9 <flatcc_builder_padding_base@@Base+0x809>
  41b6d4:	call   404090 <__assert_fail@plt>
  41b6d9:	mov    rax,QWORD PTR [rbp-0x10]
  41b6dd:	mov    rax,QWORD PTR [rax+0x30]
  41b6e1:	mov    ecx,DWORD PTR [rax+0x14]
  41b6e4:	mov    eax,ecx
  41b6e6:	cmp    rax,QWORD PTR [rbp-0x18]
  41b6ea:	jae    41b737 <flatcc_builder_truncate_vector@@Base+0xa7>
  41b6f0:	mov    rax,QWORD PTR [rbp-0x10]
  41b6f4:	mov    rax,QWORD PTR [rax+0x30]
  41b6f8:	mov    ecx,DWORD PTR [rax+0x14]
  41b6fb:	mov    eax,ecx
  41b6fd:	cmp    rax,QWORD PTR [rbp-0x18]
  41b701:	jb     41b70c <flatcc_builder_truncate_vector@@Base+0x7c>
  41b707:	jmp    41b72b <flatcc_builder_truncate_vector@@Base+0x9b>
  41b70c:	lea    rdi,[rip+0xcce5]        # 4283f8 <flatcc_builder_padding_base@@Base+0x848>
  41b713:	lea    rsi,[rip+0xc6a8]        # 427dc2 <flatcc_builder_padding_base@@Base+0x212>
  41b71a:	mov    edx,0x3da
  41b71f:	lea    rcx,[rip+0xcc93]        # 4283b9 <flatcc_builder_padding_base@@Base+0x809>
  41b726:	call   404090 <__assert_fail@plt>
  41b72b:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41b732:	jmp    41b773 <flatcc_builder_truncate_vector@@Base+0xe3>
  41b737:	mov    rax,QWORD PTR [rbp-0x18]
  41b73b:	mov    ecx,eax
  41b73d:	mov    rax,QWORD PTR [rbp-0x10]
  41b741:	mov    rax,QWORD PTR [rax+0x30]
  41b745:	mov    edx,DWORD PTR [rax+0x14]
  41b748:	sub    edx,ecx
  41b74a:	mov    DWORD PTR [rax+0x14],edx
  41b74d:	mov    rdi,QWORD PTR [rbp-0x10]
  41b751:	mov    rax,QWORD PTR [rbp-0x10]
  41b755:	mov    rax,QWORD PTR [rax+0x30]
  41b759:	mov    ecx,DWORD PTR [rax+0x10]
  41b75c:	mov    rax,QWORD PTR [rbp-0x18]
  41b760:	mov    edx,eax
  41b762:	imul   ecx,edx
  41b765:	mov    esi,ecx
  41b767:	call   41b780 <flatcc_builder_truncate_vector@@Base+0xf0>
  41b76c:	mov    DWORD PTR [rbp-0x4],0x0
  41b773:	mov    eax,DWORD PTR [rbp-0x4]
  41b776:	add    rsp,0x20
  41b77a:	pop    rbp
  41b77b:	ret    
  41b77c:	nop    DWORD PTR [rax+0x0]
  41b780:	push   rbp
  41b781:	mov    rbp,rsp
  41b784:	sub    rsp,0x10
  41b788:	xor    eax,eax
  41b78a:	mov    QWORD PTR [rbp-0x8],rdi
  41b78e:	mov    DWORD PTR [rbp-0xc],esi
  41b791:	mov    esi,DWORD PTR [rbp-0xc]
  41b794:	mov    rdi,QWORD PTR [rbp-0x8]
  41b798:	mov    ecx,DWORD PTR [rdi+0x20]
  41b79b:	sub    ecx,esi
  41b79d:	mov    DWORD PTR [rdi+0x20],ecx
  41b7a0:	mov    rdi,QWORD PTR [rbp-0x8]
  41b7a4:	mov    rdi,QWORD PTR [rdi+0x18]
  41b7a8:	mov    rdx,QWORD PTR [rbp-0x8]
  41b7ac:	mov    ecx,DWORD PTR [rdx+0x20]
  41b7af:	mov    edx,ecx
  41b7b1:	add    rdi,rdx
  41b7b4:	mov    ecx,DWORD PTR [rbp-0xc]
  41b7b7:	mov    edx,ecx
  41b7b9:	mov    esi,eax
  41b7bb:	call   4040a0 <memset@plt>
  41b7c0:	add    rsp,0x10
  41b7c4:	pop    rbp
  41b7c5:	ret    
  41b7c6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000041b7d0 <flatcc_builder_truncate_offset_vector@@Base>:
  41b7d0:	push   rbp
  41b7d1:	mov    rbp,rsp
  41b7d4:	sub    rsp,0x20
  41b7d8:	mov    QWORD PTR [rbp-0x10],rdi
  41b7dc:	mov    QWORD PTR [rbp-0x18],rsi
  41b7e0:	mov    rsi,QWORD PTR [rbp-0x10]
  41b7e4:	mov    rsi,QWORD PTR [rsi+0x30]
  41b7e8:	movzx  eax,WORD PTR [rsi+0xe]
  41b7ec:	cmp    eax,0x5
  41b7ef:	jne    41b7fa <flatcc_builder_truncate_offset_vector@@Base+0x2a>
  41b7f5:	jmp    41b819 <flatcc_builder_truncate_offset_vector@@Base+0x49>
  41b7fa:	lea    rdi,[rip+0xc9f7]        # 4281f8 <flatcc_builder_padding_base@@Base+0x648>
  41b801:	lea    rsi,[rip+0xc5ba]        # 427dc2 <flatcc_builder_padding_base@@Base+0x212>
  41b808:	mov    edx,0x3e2
  41b80d:	lea    rcx,[rip+0xcc08]        # 42841c <flatcc_builder_padding_base@@Base+0x86c>
  41b814:	call   404090 <__assert_fail@plt>
  41b819:	mov    rax,QWORD PTR [rbp-0x10]
  41b81d:	mov    rax,QWORD PTR [rax+0x30]
  41b821:	mov    ecx,DWORD PTR [rax+0x14]
  41b824:	mov    rax,QWORD PTR [rbp-0x18]
  41b828:	mov    edx,eax
  41b82a:	cmp    ecx,edx
  41b82c:	jae    41b87b <flatcc_builder_truncate_offset_vector@@Base+0xab>
  41b832:	mov    rax,QWORD PTR [rbp-0x10]
  41b836:	mov    rax,QWORD PTR [rax+0x30]
  41b83a:	mov    ecx,DWORD PTR [rax+0x14]
  41b83d:	mov    rax,QWORD PTR [rbp-0x18]
  41b841:	mov    edx,eax
  41b843:	cmp    ecx,edx
  41b845:	jb     41b850 <flatcc_builder_truncate_offset_vector@@Base+0x80>
  41b84b:	jmp    41b86f <flatcc_builder_truncate_offset_vector@@Base+0x9f>
  41b850:	lea    rdi,[rip+0xcc0b]        # 428462 <flatcc_builder_padding_base@@Base+0x8b2>
  41b857:	lea    rsi,[rip+0xc564]        # 427dc2 <flatcc_builder_padding_base@@Base+0x212>
  41b85e:	mov    edx,0x3e3
  41b863:	lea    rcx,[rip+0xcbb2]        # 42841c <flatcc_builder_padding_base@@Base+0x86c>
  41b86a:	call   404090 <__assert_fail@plt>
  41b86f:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41b876:	jmp    41b8b7 <flatcc_builder_truncate_offset_vector@@Base+0xe7>
  41b87b:	mov    rax,QWORD PTR [rbp-0x18]
  41b87f:	mov    ecx,eax
  41b881:	mov    rax,QWORD PTR [rbp-0x10]
  41b885:	mov    rax,QWORD PTR [rax+0x30]
  41b889:	mov    edx,DWORD PTR [rax+0x14]
  41b88c:	sub    edx,ecx
  41b88e:	mov    DWORD PTR [rax+0x14],edx
  41b891:	mov    rdi,QWORD PTR [rbp-0x10]
  41b895:	mov    rax,QWORD PTR [rbp-0x10]
  41b899:	mov    rax,QWORD PTR [rax+0x30]
  41b89d:	mov    ecx,DWORD PTR [rax+0x10]
  41b8a0:	mov    rax,QWORD PTR [rbp-0x18]
  41b8a4:	mov    edx,eax
  41b8a6:	imul   ecx,edx
  41b8a9:	mov    esi,ecx
  41b8ab:	call   41b780 <flatcc_builder_truncate_vector@@Base+0xf0>
  41b8b0:	mov    DWORD PTR [rbp-0x4],0x0
  41b8b7:	mov    eax,DWORD PTR [rbp-0x4]
  41b8ba:	add    rsp,0x20
  41b8be:	pop    rbp
  41b8bf:	ret    

000000000041b8c0 <flatcc_builder_truncate_string@@Base>:
  41b8c0:	push   rbp
  41b8c1:	mov    rbp,rsp
  41b8c4:	sub    rsp,0x20
  41b8c8:	mov    QWORD PTR [rbp-0x10],rdi
  41b8cc:	mov    QWORD PTR [rbp-0x18],rsi
  41b8d0:	mov    rsi,QWORD PTR [rbp-0x10]
  41b8d4:	mov    rsi,QWORD PTR [rsi+0x30]
  41b8d8:	movzx  eax,WORD PTR [rsi+0xe]
  41b8dc:	cmp    eax,0x6
  41b8df:	jne    41b8ea <flatcc_builder_truncate_string@@Base+0x2a>
  41b8e5:	jmp    41b909 <flatcc_builder_truncate_string@@Base+0x49>
  41b8ea:	lea    rdi,[rip+0xca10]        # 428301 <flatcc_builder_padding_base@@Base+0x751>
  41b8f1:	lea    rsi,[rip+0xc4ca]        # 427dc2 <flatcc_builder_padding_base@@Base+0x212>
  41b8f8:	mov    edx,0x3eb
  41b8fd:	lea    rcx,[rip+0xcb99]        # 42849d <flatcc_builder_padding_base@@Base+0x8ed>
  41b904:	call   404090 <__assert_fail@plt>
  41b909:	mov    rax,QWORD PTR [rbp-0x10]
  41b90d:	mov    rax,QWORD PTR [rax+0x30]
  41b911:	mov    ecx,DWORD PTR [rax+0x14]
  41b914:	mov    eax,ecx
  41b916:	cmp    rax,QWORD PTR [rbp-0x18]
  41b91a:	jae    41b967 <flatcc_builder_truncate_string@@Base+0xa7>
  41b920:	mov    rax,QWORD PTR [rbp-0x10]
  41b924:	mov    rax,QWORD PTR [rax+0x30]
  41b928:	mov    ecx,DWORD PTR [rax+0x14]
  41b92b:	mov    eax,ecx
  41b92d:	cmp    rax,QWORD PTR [rbp-0x18]
  41b931:	jb     41b93c <flatcc_builder_truncate_string@@Base+0x7c>
  41b937:	jmp    41b95b <flatcc_builder_truncate_string@@Base+0x9b>
  41b93c:	lea    rdi,[rip+0xcb99]        # 4284dc <flatcc_builder_padding_base@@Base+0x92c>
  41b943:	lea    rsi,[rip+0xc478]        # 427dc2 <flatcc_builder_padding_base@@Base+0x212>
  41b94a:	mov    edx,0x3ec
  41b94f:	lea    rcx,[rip+0xcb47]        # 42849d <flatcc_builder_padding_base@@Base+0x8ed>
  41b956:	call   404090 <__assert_fail@plt>
  41b95b:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41b962:	jmp    41b995 <flatcc_builder_truncate_string@@Base+0xd5>
  41b967:	mov    rax,QWORD PTR [rbp-0x18]
  41b96b:	mov    ecx,eax
  41b96d:	mov    rax,QWORD PTR [rbp-0x10]
  41b971:	mov    rax,QWORD PTR [rax+0x30]
  41b975:	mov    edx,DWORD PTR [rax+0x14]
  41b978:	sub    edx,ecx
  41b97a:	mov    DWORD PTR [rax+0x14],edx
  41b97d:	mov    rdi,QWORD PTR [rbp-0x10]
  41b981:	mov    rax,QWORD PTR [rbp-0x18]
  41b985:	mov    ecx,eax
  41b987:	mov    esi,ecx
  41b989:	call   41b780 <flatcc_builder_truncate_vector@@Base+0xf0>
  41b98e:	mov    DWORD PTR [rbp-0x4],0x0
  41b995:	mov    eax,DWORD PTR [rbp-0x4]
  41b998:	add    rsp,0x20
  41b99c:	pop    rbp
  41b99d:	ret    
  41b99e:	xchg   ax,ax

000000000041b9a0 <flatcc_builder_start_vector@@Base>:
  41b9a0:	push   rbp
  41b9a1:	mov    rbp,rsp
  41b9a4:	sub    rsp,0x30
  41b9a8:	mov    ax,dx
  41b9ab:	mov    QWORD PTR [rbp-0x10],rdi
  41b9af:	mov    QWORD PTR [rbp-0x18],rsi
  41b9b3:	mov    WORD PTR [rbp-0x1a],ax
  41b9b7:	mov    QWORD PTR [rbp-0x28],rcx
  41b9bb:	lea    rdi,[rbp-0x1a]
  41b9bf:	mov    esi,0x4
  41b9c4:	call   41ba50 <flatcc_builder_start_vector@@Base+0xb0>
  41b9c9:	mov    rdi,QWORD PTR [rbp-0x10]
  41b9cd:	movzx  esi,WORD PTR [rbp-0x1a]
  41b9d1:	call   41a900 <flatcc_builder_start_buffer@@Base+0x170>
  41b9d6:	cmp    eax,0x0
  41b9d9:	je     41b9eb <flatcc_builder_start_vector@@Base+0x4b>
  41b9df:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41b9e6:	jmp    41ba3f <flatcc_builder_start_vector@@Base+0x9f>
  41b9eb:	mov    rax,QWORD PTR [rbp-0x18]
  41b9ef:	mov    ecx,eax
  41b9f1:	mov    rax,QWORD PTR [rbp-0x10]
  41b9f5:	mov    rax,QWORD PTR [rax+0x30]
  41b9f9:	mov    DWORD PTR [rax+0x10],ecx
  41b9fc:	mov    rax,QWORD PTR [rbp-0x10]
  41ba00:	mov    rax,QWORD PTR [rax+0x30]
  41ba04:	mov    DWORD PTR [rax+0x14],0x0
  41ba0b:	mov    rax,QWORD PTR [rbp-0x28]
  41ba0f:	mov    ecx,eax
  41ba11:	mov    rax,QWORD PTR [rbp-0x10]
  41ba15:	mov    rax,QWORD PTR [rax+0x30]
  41ba19:	mov    DWORD PTR [rax+0x18],ecx
  41ba1c:	mov    rax,QWORD PTR [rbp-0x10]
  41ba20:	mov    rax,QWORD PTR [rax+0x30]
  41ba24:	mov    WORD PTR [rax+0xe],0x4
  41ba2a:	mov    rdi,QWORD PTR [rbp-0x10]
  41ba2e:	mov    esi,0xfffffffc
  41ba33:	call   41ad70 <flatcc_builder_start_struct@@Base+0x80>
  41ba38:	mov    DWORD PTR [rbp-0x4],0x0
  41ba3f:	mov    eax,DWORD PTR [rbp-0x4]
  41ba42:	add    rsp,0x30
  41ba46:	pop    rbp
  41ba47:	ret    
  41ba48:	nop    DWORD PTR [rax+rax*1+0x0]
  41ba50:	push   rbp
  41ba51:	mov    rbp,rsp
  41ba54:	mov    ax,si
  41ba57:	mov    QWORD PTR [rbp-0x8],rdi
  41ba5b:	mov    WORD PTR [rbp-0xa],ax
  41ba5f:	mov    rdi,QWORD PTR [rbp-0x8]
  41ba63:	movzx  esi,WORD PTR [rdi]
  41ba66:	movzx  ecx,WORD PTR [rbp-0xa]
  41ba6a:	cmp    esi,ecx
  41ba6c:	jge    41ba7d <flatcc_builder_start_vector@@Base+0xdd>
  41ba72:	mov    ax,WORD PTR [rbp-0xa]
  41ba76:	mov    rcx,QWORD PTR [rbp-0x8]
  41ba7a:	mov    WORD PTR [rcx],ax
  41ba7d:	pop    rbp
  41ba7e:	ret    
  41ba7f:	nop

000000000041ba80 <flatcc_builder_start_offset_vector@@Base>:
  41ba80:	push   rbp
  41ba81:	mov    rbp,rsp
  41ba84:	sub    rsp,0x10
  41ba88:	mov    QWORD PTR [rbp-0x10],rdi
  41ba8c:	mov    rdi,QWORD PTR [rbp-0x10]
  41ba90:	mov    esi,0x4
  41ba95:	call   41a900 <flatcc_builder_start_buffer@@Base+0x170>
  41ba9a:	cmp    eax,0x0
  41ba9d:	je     41baaf <flatcc_builder_start_offset_vector@@Base+0x2f>
  41baa3:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41baaa:	jmp    41baf0 <flatcc_builder_start_offset_vector@@Base+0x70>
  41baaf:	mov    rax,QWORD PTR [rbp-0x10]
  41bab3:	mov    rax,QWORD PTR [rax+0x30]
  41bab7:	mov    DWORD PTR [rax+0x10],0x4
  41babe:	mov    rax,QWORD PTR [rbp-0x10]
  41bac2:	mov    rax,QWORD PTR [rax+0x30]
  41bac6:	mov    DWORD PTR [rax+0x14],0x0
  41bacd:	mov    rax,QWORD PTR [rbp-0x10]
  41bad1:	mov    rax,QWORD PTR [rax+0x30]
  41bad5:	mov    WORD PTR [rax+0xe],0x5
  41badb:	mov    rdi,QWORD PTR [rbp-0x10]
  41badf:	mov    esi,0xfffffffc
  41bae4:	call   41ad70 <flatcc_builder_start_struct@@Base+0x80>
  41bae9:	mov    DWORD PTR [rbp-0x4],0x0
  41baf0:	mov    eax,DWORD PTR [rbp-0x4]
  41baf3:	add    rsp,0x10
  41baf7:	pop    rbp
  41baf8:	ret    
  41baf9:	nop    DWORD PTR [rax+0x0]

000000000041bb00 <flatcc_builder_create_offset_vector@@Base>:
  41bb00:	push   rbp
  41bb01:	mov    rbp,rsp
  41bb04:	sub    rsp,0x30
  41bb08:	mov    QWORD PTR [rbp-0x10],rdi
  41bb0c:	mov    QWORD PTR [rbp-0x18],rsi
  41bb10:	mov    QWORD PTR [rbp-0x20],rdx
  41bb14:	mov    rdi,QWORD PTR [rbp-0x10]
  41bb18:	call   41ba80 <flatcc_builder_start_offset_vector@@Base>
  41bb1d:	cmp    eax,0x0
  41bb20:	je     41bb32 <flatcc_builder_create_offset_vector@@Base+0x32>
  41bb26:	mov    DWORD PTR [rbp-0x4],0x0
  41bb2d:	jmp    41bb80 <flatcc_builder_create_offset_vector@@Base+0x80>
  41bb32:	mov    rdi,QWORD PTR [rbp-0x10]
  41bb36:	mov    rsi,QWORD PTR [rbp-0x20]
  41bb3a:	call   41b260 <flatcc_builder_extend_offset_vector@@Base>
  41bb3f:	mov    QWORD PTR [rbp-0x28],rax
  41bb43:	cmp    rax,0x0
  41bb47:	jne    41bb59 <flatcc_builder_create_offset_vector@@Base+0x59>
  41bb4d:	mov    DWORD PTR [rbp-0x4],0x0
  41bb54:	jmp    41bb80 <flatcc_builder_create_offset_vector@@Base+0x80>
  41bb59:	mov    rax,QWORD PTR [rbp-0x28]
  41bb5d:	mov    rcx,QWORD PTR [rbp-0x18]
  41bb61:	mov    rdx,QWORD PTR [rbp-0x20]
  41bb65:	shl    rdx,0x2
  41bb69:	mov    rdi,rax
  41bb6c:	mov    rsi,rcx
  41bb6f:	call   4040f0 <memcpy@plt>
  41bb74:	mov    rdi,QWORD PTR [rbp-0x10]
  41bb78:	call   41bb90 <flatcc_builder_end_offset_vector@@Base>
  41bb7d:	mov    DWORD PTR [rbp-0x4],eax
  41bb80:	mov    eax,DWORD PTR [rbp-0x4]
  41bb83:	add    rsp,0x30
  41bb87:	pop    rbp
  41bb88:	ret    
  41bb89:	nop    DWORD PTR [rax+0x0]

000000000041bb90 <flatcc_builder_end_offset_vector@@Base>:
  41bb90:	push   rbp
  41bb91:	mov    rbp,rsp
  41bb94:	sub    rsp,0x20
  41bb98:	mov    QWORD PTR [rbp-0x10],rdi
  41bb9c:	mov    rdi,QWORD PTR [rbp-0x10]
  41bba0:	mov    rdi,QWORD PTR [rdi+0x30]
  41bba4:	movzx  eax,WORD PTR [rdi+0xe]
  41bba8:	cmp    eax,0x5
  41bbab:	jne    41bbb6 <flatcc_builder_end_offset_vector@@Base+0x26>
  41bbb1:	jmp    41bbd5 <flatcc_builder_end_offset_vector@@Base+0x45>
  41bbb6:	lea    rdi,[rip+0xc63b]        # 4281f8 <flatcc_builder_padding_base@@Base+0x648>
  41bbbd:	lea    rsi,[rip+0xc1fe]        # 427dc2 <flatcc_builder_padding_base@@Base+0x212>
  41bbc4:	mov    edx,0x5c8
  41bbc9:	lea    rcx,[rip+0xcc57]        # 428827 <flatcc_builder_padding_base@@Base+0xc77>
  41bbd0:	call   404090 <__assert_fail@plt>
  41bbd5:	mov    rdi,QWORD PTR [rbp-0x10]
  41bbd9:	mov    rax,QWORD PTR [rbp-0x10]
  41bbdd:	mov    rax,QWORD PTR [rax+0x18]
  41bbe1:	mov    rcx,QWORD PTR [rbp-0x10]
  41bbe5:	mov    rcx,QWORD PTR [rcx+0x30]
  41bbe9:	mov    edx,DWORD PTR [rcx+0x14]
  41bbec:	mov    rsi,rax
  41bbef:	call   41cfe0 <flatcc_builder_create_offset_vector_direct@@Base>
  41bbf4:	xor    r8d,r8d
  41bbf7:	mov    DWORD PTR [rbp-0x14],eax
  41bbfa:	cmp    r8d,eax
  41bbfd:	jne    41bc0f <flatcc_builder_end_offset_vector@@Base+0x7f>
  41bc03:	mov    DWORD PTR [rbp-0x4],0x0
  41bc0a:	jmp    41bc1e <flatcc_builder_end_offset_vector@@Base+0x8e>
  41bc0f:	mov    rdi,QWORD PTR [rbp-0x10]
  41bc13:	call   41ac30 <flatcc_builder_end_buffer@@Base+0x160>
  41bc18:	mov    eax,DWORD PTR [rbp-0x14]
  41bc1b:	mov    DWORD PTR [rbp-0x4],eax
  41bc1e:	mov    eax,DWORD PTR [rbp-0x4]
  41bc21:	add    rsp,0x20
  41bc25:	pop    rbp
  41bc26:	ret    
  41bc27:	nop    WORD PTR [rax+rax*1+0x0]

000000000041bc30 <flatcc_builder_start_string@@Base>:
  41bc30:	push   rbp
  41bc31:	mov    rbp,rsp
  41bc34:	sub    rsp,0x10
  41bc38:	mov    QWORD PTR [rbp-0x10],rdi
  41bc3c:	mov    rdi,QWORD PTR [rbp-0x10]
  41bc40:	mov    esi,0x1
  41bc45:	call   41a900 <flatcc_builder_start_buffer@@Base+0x170>
  41bc4a:	cmp    eax,0x0
  41bc4d:	je     41bc5f <flatcc_builder_start_string@@Base+0x2f>
  41bc53:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41bc5a:	jmp    41bca0 <flatcc_builder_start_string@@Base+0x70>
  41bc5f:	mov    rax,QWORD PTR [rbp-0x10]
  41bc63:	mov    rax,QWORD PTR [rax+0x30]
  41bc67:	mov    DWORD PTR [rax+0x10],0x1
  41bc6e:	mov    rax,QWORD PTR [rbp-0x10]
  41bc72:	mov    rax,QWORD PTR [rax+0x30]
  41bc76:	mov    DWORD PTR [rax+0x14],0x0
  41bc7d:	mov    rax,QWORD PTR [rbp-0x10]
  41bc81:	mov    rax,QWORD PTR [rax+0x30]
  41bc85:	mov    WORD PTR [rax+0xe],0x6
  41bc8b:	mov    rdi,QWORD PTR [rbp-0x10]
  41bc8f:	mov    esi,0xfffffffc
  41bc94:	call   41ad70 <flatcc_builder_start_struct@@Base+0x80>
  41bc99:	mov    DWORD PTR [rbp-0x4],0x0
  41bca0:	mov    eax,DWORD PTR [rbp-0x4]
  41bca3:	add    rsp,0x10
  41bca7:	pop    rbp
  41bca8:	ret    
  41bca9:	nop    DWORD PTR [rax+0x0]

000000000041bcb0 <flatcc_builder_reserve_table@@Base>:
  41bcb0:	push   rbp
  41bcb1:	mov    rbp,rsp
  41bcb4:	sub    rsp,0x10
  41bcb8:	mov    QWORD PTR [rbp-0x8],rdi
  41bcbc:	mov    DWORD PTR [rbp-0xc],esi
  41bcbf:	cmp    DWORD PTR [rbp-0xc],0x0
  41bcc3:	jl     41bcce <flatcc_builder_reserve_table@@Base+0x1e>
  41bcc9:	jmp    41bced <flatcc_builder_reserve_table@@Base+0x3d>
  41bcce:	lea    rdi,[rip+0xc86a]        # 42853f <flatcc_builder_padding_base@@Base+0x98f>
  41bcd5:	lea    rsi,[rip+0xc0e6]        # 427dc2 <flatcc_builder_padding_base@@Base+0x212>
  41bcdc:	mov    edx,0x429
  41bce1:	lea    rcx,[rip+0xc816]        # 4284fe <flatcc_builder_padding_base@@Base+0x94e>
  41bce8:	call   404090 <__assert_fail@plt>
  41bced:	mov    rdi,QWORD PTR [rbp-0x8]
  41bcf1:	mov    esi,DWORD PTR [rbp-0xc]
  41bcf4:	call   41bd00 <flatcc_builder_reserve_table@@Base+0x50>
  41bcf9:	add    rsp,0x10
  41bcfd:	pop    rbp
  41bcfe:	ret    
  41bcff:	nop
  41bd00:	push   rbp
  41bd01:	mov    rbp,rsp
  41bd04:	sub    rsp,0x20
  41bd08:	xor    eax,eax
  41bd0a:	mov    QWORD PTR [rbp-0x10],rdi
  41bd0e:	mov    DWORD PTR [rbp-0x14],esi
  41bd11:	mov    rdi,QWORD PTR [rbp-0x10]
  41bd15:	mov    rdi,QWORD PTR [rdi+0x30]
  41bd19:	mov    esi,DWORD PTR [rdi+0x10]
  41bd1c:	mov    edi,esi
  41bd1e:	mov    rcx,QWORD PTR [rbp-0x10]
  41bd22:	mov    rcx,QWORD PTR [rcx+0x30]
  41bd26:	movzx  esi,WORD PTR [rcx+0x1c]
  41bd2a:	mov    ecx,esi
  41bd2c:	shl    rcx,0x1
  41bd30:	add    rdi,rcx
  41bd33:	mov    esi,edi
  41bd35:	mov    DWORD PTR [rbp-0x18],esi
  41bd38:	mov    esi,DWORD PTR [rbp-0x14]
  41bd3b:	add    esi,0x2
  41bd3e:	movsxd rcx,esi
  41bd41:	shl    rcx,0x1
  41bd45:	mov    esi,ecx
  41bd47:	mov    DWORD PTR [rbp-0x1c],esi
  41bd4a:	mov    rdi,QWORD PTR [rbp-0x10]
  41bd4e:	mov    esi,DWORD PTR [rbp-0x18]
  41bd51:	mov    edx,esi
  41bd53:	mov    esi,DWORD PTR [rbp-0x1c]
  41bd56:	mov    ecx,esi
  41bd58:	mov    esi,eax
  41bd5a:	mov    r8d,0x1
  41bd60:	call   419980 <flatcc_builder_enter_user_frame_ptr@@Base+0xe0>
  41bd65:	mov    rcx,QWORD PTR [rbp-0x10]
  41bd69:	mov    QWORD PTR [rcx+0x8],rax
  41bd6d:	cmp    rax,0x0
  41bd71:	jne    41bd83 <flatcc_builder_reserve_table@@Base+0xd3>
  41bd77:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41bd7e:	jmp    41bdef <flatcc_builder_reserve_table@@Base+0x13f>
  41bd83:	xor    r8d,r8d
  41bd86:	mov    rax,QWORD PTR [rbp-0x10]
  41bd8a:	mov    rcx,QWORD PTR [rax+0x8]
  41bd8e:	add    rcx,0x4
  41bd92:	mov    QWORD PTR [rax+0x8],rcx
  41bd96:	mov    rax,QWORD PTR [rbp-0x10]
  41bd9a:	mov    rax,QWORD PTR [rax+0x30]
  41bd9e:	mov    edx,DWORD PTR [rax+0x14]
  41bda1:	mov    DWORD PTR [rbp-0x18],edx
  41bda4:	movsxd rax,DWORD PTR [rbp-0x14]
  41bda8:	shl    rax,0x1
  41bdac:	add    rax,0x1
  41bdb0:	mov    edx,eax
  41bdb2:	mov    DWORD PTR [rbp-0x1c],edx
  41bdb5:	mov    rdi,QWORD PTR [rbp-0x10]
  41bdb9:	mov    edx,DWORD PTR [rbp-0x18]
  41bdbc:	mov    esi,DWORD PTR [rbp-0x1c]
  41bdbf:	mov    ecx,esi
  41bdc1:	mov    esi,0x3
  41bdc6:	call   419980 <flatcc_builder_enter_user_frame_ptr@@Base+0xe0>
  41bdcb:	mov    rcx,QWORD PTR [rbp-0x10]
  41bdcf:	mov    QWORD PTR [rcx],rax
  41bdd2:	cmp    rax,0x0
  41bdd6:	jne    41bde8 <flatcc_builder_reserve_table@@Base+0x138>
  41bddc:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41bde3:	jmp    41bdef <flatcc_builder_reserve_table@@Base+0x13f>
  41bde8:	mov    DWORD PTR [rbp-0x4],0x0
  41bdef:	mov    eax,DWORD PTR [rbp-0x4]
  41bdf2:	add    rsp,0x20
  41bdf6:	pop    rbp
  41bdf7:	ret    
  41bdf8:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041be00 <flatcc_builder_start_table@@Base>:
  41be00:	push   rbp
  41be01:	mov    rbp,rsp
  41be04:	sub    rsp,0x20
  41be08:	mov    QWORD PTR [rbp-0x10],rdi
  41be0c:	mov    DWORD PTR [rbp-0x14],esi
  41be0f:	mov    rdi,QWORD PTR [rbp-0x10]
  41be13:	mov    esi,0x4
  41be18:	call   41a900 <flatcc_builder_start_buffer@@Base+0x170>
  41be1d:	cmp    eax,0x0
  41be20:	je     41be32 <flatcc_builder_start_table@@Base+0x32>
  41be26:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41be2d:	jmp    41befe <flatcc_builder_start_table@@Base+0xfe>
  41be32:	mov    rax,QWORD PTR [rbp-0x10]
  41be36:	mov    rax,QWORD PTR [rax+0x8]
  41be3a:	mov    rcx,QWORD PTR [rbp-0x10]
  41be3e:	mov    rcx,QWORD PTR [rcx+0x58]
  41be42:	sub    rax,rcx
  41be45:	mov    edx,eax
  41be47:	mov    rax,QWORD PTR [rbp-0x10]
  41be4b:	mov    rax,QWORD PTR [rax+0x30]
  41be4f:	mov    DWORD PTR [rax+0x10],edx
  41be52:	mov    rax,QWORD PTR [rbp-0x10]
  41be56:	mov    rax,QWORD PTR [rax]
  41be59:	mov    rcx,QWORD PTR [rbp-0x10]
  41be5d:	mov    rcx,QWORD PTR [rcx+0x88]
  41be64:	sub    rax,rcx
  41be67:	mov    edx,eax
  41be69:	mov    rax,QWORD PTR [rbp-0x10]
  41be6d:	mov    rax,QWORD PTR [rax+0x30]
  41be71:	mov    DWORD PTR [rax+0x14],edx
  41be74:	mov    rax,QWORD PTR [rbp-0x10]
  41be78:	mov    edx,DWORD PTR [rax+0x14]
  41be7b:	mov    rax,QWORD PTR [rbp-0x10]
  41be7f:	mov    rax,QWORD PTR [rax+0x30]
  41be83:	mov    DWORD PTR [rax+0x18],edx
  41be86:	mov    rax,QWORD PTR [rbp-0x10]
  41be8a:	mov    si,WORD PTR [rax+0x10]
  41be8e:	mov    rax,QWORD PTR [rbp-0x10]
  41be92:	mov    rax,QWORD PTR [rax+0x30]
  41be96:	mov    WORD PTR [rax+0x1c],si
  41be9a:	mov    rax,QWORD PTR [rbp-0x10]
  41be9e:	mov    DWORD PTR [rax+0x14],0x0
  41bea5:	mov    rax,QWORD PTR [rbp-0x10]
  41bea9:	mov    DWORD PTR [rax+0x14],0x2f693b52
  41beb0:	mov    rax,QWORD PTR [rbp-0x10]
  41beb4:	mov    WORD PTR [rax+0x10],0x0
  41beba:	mov    rax,QWORD PTR [rbp-0x10]
  41bebe:	mov    rax,QWORD PTR [rax+0x30]
  41bec2:	mov    WORD PTR [rax+0xe],0x3
  41bec8:	mov    rdi,QWORD PTR [rbp-0x10]
  41becc:	mov    esi,DWORD PTR [rbp-0x14]
  41becf:	call   41bd00 <flatcc_builder_reserve_table@@Base+0x50>
  41bed4:	cmp    eax,0x0
  41bed7:	je     41bee9 <flatcc_builder_start_table@@Base+0xe9>
  41bedd:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41bee4:	jmp    41befe <flatcc_builder_start_table@@Base+0xfe>
  41bee9:	mov    rdi,QWORD PTR [rbp-0x10]
  41beed:	mov    esi,0xfffc
  41bef2:	call   41ad70 <flatcc_builder_start_struct@@Base+0x80>
  41bef7:	mov    DWORD PTR [rbp-0x4],0x0
  41befe:	mov    eax,DWORD PTR [rbp-0x4]
  41bf01:	add    rsp,0x20
  41bf05:	pop    rbp
  41bf06:	ret    
  41bf07:	nop    WORD PTR [rax+rax*1+0x0]

000000000041bf10 <flatcc_builder_create_vtable@@Base>:
  41bf10:	push   rbp
  41bf11:	mov    rbp,rsp
  41bf14:	sub    rsp,0xc0
  41bf1b:	mov    ax,dx
  41bf1e:	mov    QWORD PTR [rbp-0x10],rdi
  41bf22:	mov    QWORD PTR [rbp-0x18],rsi
  41bf26:	mov    WORD PTR [rbp-0x1a],ax
  41bf2a:	mov    QWORD PTR [rbp-0xb0],0x0
  41bf35:	mov    DWORD PTR [rbp-0xa8],0x0
  41bf3f:	movzx  edx,WORD PTR [rbp-0x1a]
  41bf43:	cmp    edx,0x0
  41bf46:	jle    41bfae <flatcc_builder_create_vtable@@Base+0x9e>
  41bf4c:	movzx  eax,WORD PTR [rbp-0x1a]
  41bf50:	mov    ecx,eax
  41bf52:	add    rcx,QWORD PTR [rbp-0xb0]
  41bf59:	mov    QWORD PTR [rbp-0xb0],rcx
  41bf60:	mov    rcx,QWORD PTR [rbp-0x18]
  41bf64:	lea    rdx,[rbp-0xb0]
  41bf6b:	mov    rsi,rdx
  41bf6e:	add    rsi,0x10
  41bf72:	movsxd rdi,DWORD PTR [rbp-0xa8]
  41bf79:	shl    rdi,0x4
  41bf7d:	add    rsi,rdi
  41bf80:	mov    QWORD PTR [rsi],rcx
  41bf83:	movzx  eax,WORD PTR [rbp-0x1a]
  41bf87:	mov    ecx,eax
  41bf89:	add    rdx,0x10
  41bf8d:	movsxd rsi,DWORD PTR [rbp-0xa8]
  41bf94:	shl    rsi,0x4
  41bf98:	add    rdx,rsi
  41bf9b:	mov    QWORD PTR [rdx+0x8],rcx
  41bf9f:	mov    eax,DWORD PTR [rbp-0xa8]
  41bfa5:	add    eax,0x1
  41bfa8:	mov    DWORD PTR [rbp-0xa8],eax
  41bfae:	mov    rax,QWORD PTR [rbp-0x10]
  41bfb2:	cmp    DWORD PTR [rax+0x100],0x0
  41bfb9:	jne    41bffe <flatcc_builder_create_vtable@@Base+0xee>
  41bfbf:	mov    rax,QWORD PTR [rbp-0x10]
  41bfc3:	cmp    DWORD PTR [rax+0x124],0x0
  41bfca:	jne    41bffe <flatcc_builder_create_vtable@@Base+0xee>
  41bfd0:	mov    rdi,QWORD PTR [rbp-0x10]
  41bfd4:	lea    rsi,[rbp-0xb0]
  41bfdb:	call   41c050 <flatcc_builder_create_vtable@@Base+0x140>
  41bfe0:	xor    ecx,ecx
  41bfe2:	mov    DWORD PTR [rbp-0x20],eax
  41bfe5:	cmp    ecx,eax
  41bfe7:	jne    41bff9 <flatcc_builder_create_vtable@@Base+0xe9>
  41bfed:	mov    DWORD PTR [rbp-0x4],0x0
  41bff4:	jmp    41c036 <flatcc_builder_create_vtable@@Base+0x126>
  41bff9:	jmp    41c030 <flatcc_builder_create_vtable@@Base+0x120>
  41bffe:	mov    rdi,QWORD PTR [rbp-0x10]
  41c002:	lea    rsi,[rbp-0xb0]
  41c009:	call   41a0b0 <flatcc_builder_embed_buffer@@Base+0x430>
  41c00e:	xor    ecx,ecx
  41c010:	mov    DWORD PTR [rbp-0x20],eax
  41c013:	cmp    ecx,eax
  41c015:	jne    41c027 <flatcc_builder_create_vtable@@Base+0x117>
  41c01b:	mov    DWORD PTR [rbp-0x4],0x0
  41c022:	jmp    41c036 <flatcc_builder_create_vtable@@Base+0x126>
  41c027:	mov    eax,DWORD PTR [rbp-0x20]
  41c02a:	add    eax,0x1
  41c02d:	mov    DWORD PTR [rbp-0x20],eax
  41c030:	mov    eax,DWORD PTR [rbp-0x20]
  41c033:	mov    DWORD PTR [rbp-0x4],eax
  41c036:	mov    eax,DWORD PTR [rbp-0x4]
  41c039:	add    rsp,0xc0
  41c040:	pop    rbp
  41c041:	ret    
  41c042:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c04c:	nop    DWORD PTR [rax+0x0]
  41c050:	push   rbp
  41c051:	mov    rbp,rsp
  41c054:	sub    rsp,0x20
  41c058:	mov    QWORD PTR [rbp-0x8],rdi
  41c05c:	mov    QWORD PTR [rbp-0x10],rsi
  41c060:	mov    rsi,QWORD PTR [rbp-0x8]
  41c064:	mov    eax,DWORD PTR [rsi+0xf4]
  41c06a:	mov    DWORD PTR [rbp-0x14],eax
  41c06d:	mov    eax,DWORD PTR [rbp-0x14]
  41c070:	mov    rsi,QWORD PTR [rbp-0x10]
  41c074:	mov    rsi,QWORD PTR [rsi]
  41c077:	mov    ecx,esi
  41c079:	add    eax,ecx
  41c07b:	mov    rsi,QWORD PTR [rbp-0x8]
  41c07f:	mov    DWORD PTR [rsi+0xf4],eax
  41c085:	mov    rsi,QWORD PTR [rbp-0x8]
  41c089:	mov    eax,DWORD PTR [rsi+0xf4]
  41c08f:	cmp    eax,DWORD PTR [rbp-0x14]
  41c092:	jge    41c0b7 <flatcc_builder_create_vtable@@Base+0x1a7>
  41c098:	lea    rdi,[rip+0xcee3]        # 428f82 <flatcc_builder_padding_base@@Base+0x13d2>
  41c09f:	lea    rsi,[rip+0xbd1c]        # 427dc2 <flatcc_builder_padding_base@@Base+0x212>
  41c0a6:	mov    edx,0x2a1
  41c0ab:	lea    rcx,[rip+0xce4b]        # 428efd <flatcc_builder_padding_base@@Base+0x134d>
  41c0b2:	call   404090 <__assert_fail@plt>
  41c0b7:	mov    rax,QWORD PTR [rbp-0x8]
  41c0bb:	mov    rax,QWORD PTR [rax+0x48]
  41c0bf:	mov    rcx,QWORD PTR [rbp-0x8]
  41c0c3:	mov    rdi,QWORD PTR [rcx+0x38]
  41c0c7:	mov    rcx,QWORD PTR [rbp-0x10]
  41c0cb:	add    rcx,0x10
  41c0cf:	mov    rdx,QWORD PTR [rbp-0x10]
  41c0d3:	mov    edx,DWORD PTR [rdx+0x8]
  41c0d6:	mov    esi,DWORD PTR [rbp-0x14]
  41c0d9:	mov    r8,QWORD PTR [rbp-0x10]
  41c0dd:	mov    r8,QWORD PTR [r8]
  41c0e0:	mov    DWORD PTR [rbp-0x18],esi
  41c0e3:	mov    rsi,rcx
  41c0e6:	mov    ecx,DWORD PTR [rbp-0x18]
  41c0e9:	call   rax
  41c0eb:	cmp    eax,0x0
  41c0ee:	je     41c113 <flatcc_builder_create_vtable@@Base+0x203>
  41c0f4:	lea    rdi,[rip+0xce87]        # 428f82 <flatcc_builder_padding_base@@Base+0x13d2>
  41c0fb:	lea    rsi,[rip+0xbcc0]        # 427dc2 <flatcc_builder_padding_base@@Base+0x212>
  41c102:	mov    edx,0x2a5
  41c107:	lea    rcx,[rip+0xcdef]        # 428efd <flatcc_builder_padding_base@@Base+0x134d>
  41c10e:	call   404090 <__assert_fail@plt>
  41c113:	mov    eax,DWORD PTR [rbp-0x14]
  41c116:	add    eax,0x1
  41c119:	add    rsp,0x20
  41c11d:	pop    rbp
  41c11e:	ret    
  41c11f:	nop

000000000041c120 <flatcc_builder_create_cached_vtable@@Base>:
  41c120:	push   rbp
  41c121:	mov    rbp,rsp
  41c124:	sub    rsp,0x70
  41c128:	mov    ax,dx
  41c12b:	mov    QWORD PTR [rbp-0x10],rdi
  41c12f:	mov    QWORD PTR [rbp-0x18],rsi
  41c133:	mov    WORD PTR [rbp-0x1a],ax
  41c137:	mov    DWORD PTR [rbp-0x20],ecx
  41c13a:	mov    rdi,QWORD PTR [rbp-0x10]
  41c13e:	mov    esi,DWORD PTR [rbp-0x20]
  41c141:	call   41c450 <flatcc_builder_create_cached_vtable@@Base+0x330>
  41c146:	mov    QWORD PTR [rbp-0x40],rax
  41c14a:	cmp    rax,0x0
  41c14e:	jne    41c160 <flatcc_builder_create_cached_vtable@@Base+0x40>
  41c154:	mov    DWORD PTR [rbp-0x4],0x0
  41c15b:	jmp    41c438 <flatcc_builder_create_cached_vtable@@Base+0x318>
  41c160:	mov    rax,QWORD PTR [rbp-0x40]
  41c164:	mov    QWORD PTR [rbp-0x38],rax
  41c168:	mov    rax,QWORD PTR [rbp-0x38]
  41c16c:	mov    ecx,DWORD PTR [rax]
  41c16e:	mov    DWORD PTR [rbp-0x44],ecx
  41c171:	mov    QWORD PTR [rbp-0x30],0x0
  41c179:	cmp    DWORD PTR [rbp-0x44],0x0
  41c17d:	je     41c28c <flatcc_builder_create_cached_vtable@@Base+0x16c>
  41c183:	mov    rax,QWORD PTR [rbp-0x10]
  41c187:	mov    rax,QWORD PTR [rax+0xb8]
  41c18e:	mov    ecx,DWORD PTR [rbp-0x44]
  41c191:	mov    edx,ecx
  41c193:	add    rax,rdx
  41c196:	mov    QWORD PTR [rbp-0x28],rax
  41c19a:	mov    rax,QWORD PTR [rbp-0x10]
  41c19e:	mov    rax,QWORD PTR [rax+0x78]
  41c1a2:	mov    rdx,QWORD PTR [rbp-0x28]
  41c1a6:	mov    ecx,DWORD PTR [rdx+0x8]
  41c1a9:	mov    edx,ecx
  41c1ab:	add    rax,rdx
  41c1ae:	mov    QWORD PTR [rbp-0x50],rax
  41c1b2:	mov    rax,QWORD PTR [rbp-0x50]
  41c1b6:	movzx  ecx,WORD PTR [rax]
  41c1b9:	movzx  esi,WORD PTR [rbp-0x1a]
  41c1bd:	cmp    ecx,esi
  41c1bf:	jne    41c1f8 <flatcc_builder_create_cached_vtable@@Base+0xd8>
  41c1c5:	xor    eax,eax
  41c1c7:	mov    rcx,QWORD PTR [rbp-0x18]
  41c1cb:	mov    rdx,QWORD PTR [rbp-0x50]
  41c1cf:	movzx  esi,WORD PTR [rbp-0x1a]
  41c1d3:	mov    edi,esi
  41c1d5:	mov    QWORD PTR [rbp-0x58],rdi
  41c1d9:	mov    rdi,rcx
  41c1dc:	mov    rsi,rdx
  41c1df:	mov    rdx,QWORD PTR [rbp-0x58]
  41c1e3:	mov    DWORD PTR [rbp-0x5c],eax
  41c1e6:	call   4040c0 <memcmp@plt>
  41c1eb:	mov    r8d,DWORD PTR [rbp-0x5c]
  41c1ef:	cmp    r8d,eax
  41c1f2:	je     41c213 <flatcc_builder_create_cached_vtable@@Base+0xf3>
  41c1f8:	mov    rax,QWORD PTR [rbp-0x28]
  41c1fc:	add    rax,0xc
  41c200:	mov    QWORD PTR [rbp-0x38],rax
  41c204:	mov    rax,QWORD PTR [rbp-0x28]
  41c208:	mov    ecx,DWORD PTR [rax+0xc]
  41c20b:	mov    DWORD PTR [rbp-0x44],ecx
  41c20e:	jmp    41c179 <flatcc_builder_create_cached_vtable@@Base+0x59>
  41c213:	mov    rax,QWORD PTR [rbp-0x28]
  41c217:	mov    ecx,DWORD PTR [rax+0x4]
  41c21a:	mov    rax,QWORD PTR [rbp-0x10]
  41c21e:	cmp    ecx,DWORD PTR [rax+0x100]
  41c224:	je     41c24d <flatcc_builder_create_cached_vtable@@Base+0x12d>
  41c22a:	mov    rax,QWORD PTR [rbp-0x28]
  41c22e:	mov    QWORD PTR [rbp-0x30],rax
  41c232:	mov    rax,QWORD PTR [rbp-0x28]
  41c236:	add    rax,0xc
  41c23a:	mov    QWORD PTR [rbp-0x38],rax
  41c23e:	mov    rax,QWORD PTR [rbp-0x28]
  41c242:	mov    ecx,DWORD PTR [rax+0xc]
  41c245:	mov    DWORD PTR [rbp-0x44],ecx
  41c248:	jmp    41c179 <flatcc_builder_create_cached_vtable@@Base+0x59>
  41c24d:	mov    rax,QWORD PTR [rbp-0x38]
  41c251:	cmp    rax,QWORD PTR [rbp-0x40]
  41c255:	je     41c27e <flatcc_builder_create_cached_vtable@@Base+0x15e>
  41c25b:	mov    rax,QWORD PTR [rbp-0x28]
  41c25f:	mov    ecx,DWORD PTR [rax+0xc]
  41c262:	mov    rax,QWORD PTR [rbp-0x38]
  41c266:	mov    DWORD PTR [rax],ecx
  41c268:	mov    rax,QWORD PTR [rbp-0x40]
  41c26c:	mov    ecx,DWORD PTR [rax]
  41c26e:	mov    rax,QWORD PTR [rbp-0x28]
  41c272:	mov    DWORD PTR [rax+0xc],ecx
  41c275:	mov    ecx,DWORD PTR [rbp-0x44]
  41c278:	mov    rax,QWORD PTR [rbp-0x40]
  41c27c:	mov    DWORD PTR [rax],ecx
  41c27e:	mov    rax,QWORD PTR [rbp-0x28]
  41c282:	mov    ecx,DWORD PTR [rax]
  41c284:	mov    DWORD PTR [rbp-0x4],ecx
  41c287:	jmp    41c438 <flatcc_builder_create_cached_vtable@@Base+0x318>
  41c28c:	mov    eax,0x10
  41c291:	mov    ecx,eax
  41c293:	xor    r8d,r8d
  41c296:	mov    rdi,QWORD PTR [rbp-0x10]
  41c29a:	mov    rdx,QWORD PTR [rbp-0x10]
  41c29e:	mov    eax,DWORD PTR [rdx+0xe4]
  41c2a4:	mov    edx,eax
  41c2a6:	mov    esi,0x6
  41c2ab:	call   419980 <flatcc_builder_enter_user_frame_ptr@@Base+0xe0>
  41c2b0:	mov    QWORD PTR [rbp-0x28],rax
  41c2b4:	cmp    rax,0x0
  41c2b8:	jne    41c2ca <flatcc_builder_create_cached_vtable@@Base+0x1aa>
  41c2be:	mov    DWORD PTR [rbp-0x4],0x0
  41c2c5:	jmp    41c438 <flatcc_builder_create_cached_vtable@@Base+0x318>
  41c2ca:	mov    rax,QWORD PTR [rbp-0x10]
  41c2ce:	mov    ecx,DWORD PTR [rax+0xe4]
  41c2d4:	mov    DWORD PTR [rbp-0x44],ecx
  41c2d7:	mov    rax,QWORD PTR [rbp-0x10]
  41c2db:	mov    ecx,DWORD PTR [rax+0xe4]
  41c2e1:	mov    edx,ecx
  41c2e3:	add    rdx,0x10
  41c2e7:	mov    ecx,edx
  41c2e9:	mov    DWORD PTR [rax+0xe4],ecx
  41c2ef:	mov    rax,QWORD PTR [rbp-0x10]
  41c2f3:	mov    ecx,DWORD PTR [rax+0x100]
  41c2f9:	mov    rax,QWORD PTR [rbp-0x28]
  41c2fd:	mov    DWORD PTR [rax+0x4],ecx
  41c300:	mov    rax,QWORD PTR [rbp-0x40]
  41c304:	mov    ecx,DWORD PTR [rax]
  41c306:	mov    rax,QWORD PTR [rbp-0x28]
  41c30a:	mov    DWORD PTR [rax+0xc],ecx
  41c30d:	mov    ecx,DWORD PTR [rbp-0x44]
  41c310:	mov    rax,QWORD PTR [rbp-0x40]
  41c314:	mov    DWORD PTR [rax],ecx
  41c316:	mov    rdi,QWORD PTR [rbp-0x10]
  41c31a:	mov    rsi,QWORD PTR [rbp-0x18]
  41c31e:	movzx  edx,WORD PTR [rbp-0x1a]
  41c322:	call   41bf10 <flatcc_builder_create_vtable@@Base>
  41c327:	xor    ecx,ecx
  41c329:	mov    rsi,QWORD PTR [rbp-0x28]
  41c32d:	mov    DWORD PTR [rsi],eax
  41c32f:	cmp    ecx,eax
  41c331:	jne    41c343 <flatcc_builder_create_cached_vtable@@Base+0x223>
  41c337:	mov    DWORD PTR [rbp-0x4],0x0
  41c33e:	jmp    41c438 <flatcc_builder_create_cached_vtable@@Base+0x318>
  41c343:	cmp    QWORD PTR [rbp-0x30],0x0
  41c348:	je     41c361 <flatcc_builder_create_cached_vtable@@Base+0x241>
  41c34e:	mov    rax,QWORD PTR [rbp-0x30]
  41c352:	mov    ecx,DWORD PTR [rax+0x8]
  41c355:	mov    rax,QWORD PTR [rbp-0x28]
  41c359:	mov    DWORD PTR [rax+0x8],ecx
  41c35c:	jmp    41c42f <flatcc_builder_create_cached_vtable@@Base+0x30f>
  41c361:	mov    rax,QWORD PTR [rbp-0x10]
  41c365:	cmp    QWORD PTR [rax+0x118],0x0
  41c36d:	je     41c3a9 <flatcc_builder_create_cached_vtable@@Base+0x289>
  41c373:	mov    rax,QWORD PTR [rbp-0x10]
  41c377:	mov    rax,QWORD PTR [rax+0x118]
  41c37e:	mov    rcx,QWORD PTR [rbp-0x10]
  41c382:	mov    edx,DWORD PTR [rcx+0xe0]
  41c388:	movzx  esi,WORD PTR [rbp-0x1a]
  41c38c:	add    edx,esi
  41c38e:	mov    edx,edx
  41c390:	mov    ecx,edx
  41c392:	cmp    rax,rcx
  41c395:	jae    41c3a9 <flatcc_builder_create_cached_vtable@@Base+0x289>
  41c39b:	mov    rdi,QWORD PTR [rbp-0x10]
  41c39f:	call   4193f0 <flatcc_builder_flush_vtable_cache@@Base>
  41c3a4:	jmp    41c42a <flatcc_builder_create_cached_vtable@@Base+0x30a>
  41c3a9:	xor    r8d,r8d
  41c3ac:	mov    rdi,QWORD PTR [rbp-0x10]
  41c3b0:	mov    rax,QWORD PTR [rbp-0x10]
  41c3b4:	mov    ecx,DWORD PTR [rax+0xe0]
  41c3ba:	mov    edx,ecx
  41c3bc:	movzx  ecx,WORD PTR [rbp-0x1a]
  41c3c0:	mov    esi,0x2
  41c3c5:	call   419980 <flatcc_builder_enter_user_frame_ptr@@Base+0xe0>
  41c3ca:	mov    QWORD PTR [rbp-0x50],rax
  41c3ce:	cmp    rax,0x0
  41c3d2:	jne    41c3e4 <flatcc_builder_create_cached_vtable@@Base+0x2c4>
  41c3d8:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41c3df:	jmp    41c438 <flatcc_builder_create_cached_vtable@@Base+0x318>
  41c3e4:	mov    rax,QWORD PTR [rbp-0x10]
  41c3e8:	mov    ecx,DWORD PTR [rax+0xe0]
  41c3ee:	mov    rax,QWORD PTR [rbp-0x28]
  41c3f2:	mov    DWORD PTR [rax+0x8],ecx
  41c3f5:	movzx  ecx,WORD PTR [rbp-0x1a]
  41c3f9:	mov    rax,QWORD PTR [rbp-0x10]
  41c3fd:	add    ecx,DWORD PTR [rax+0xe0]
  41c403:	mov    DWORD PTR [rax+0xe0],ecx
  41c409:	mov    rax,QWORD PTR [rbp-0x50]
  41c40d:	mov    rdx,QWORD PTR [rbp-0x18]
  41c411:	movzx  ecx,WORD PTR [rbp-0x1a]
  41c415:	mov    esi,ecx
  41c417:	mov    rdi,rax
  41c41a:	mov    QWORD PTR [rbp-0x68],rsi
  41c41e:	mov    rsi,rdx
  41c421:	mov    rdx,QWORD PTR [rbp-0x68]
  41c425:	call   4040f0 <memcpy@plt>
  41c42a:	jmp    41c42f <flatcc_builder_create_cached_vtable@@Base+0x30f>
  41c42f:	mov    rax,QWORD PTR [rbp-0x28]
  41c433:	mov    ecx,DWORD PTR [rax]
  41c435:	mov    DWORD PTR [rbp-0x4],ecx
  41c438:	mov    eax,DWORD PTR [rbp-0x4]
  41c43b:	add    rsp,0x70
  41c43f:	pop    rbp
  41c440:	ret    
  41c441:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c44b:	nop    DWORD PTR [rax+rax*1+0x0]
  41c450:	push   rbp
  41c451:	mov    rbp,rsp
  41c454:	sub    rsp,0x20
  41c458:	mov    QWORD PTR [rbp-0x10],rdi
  41c45c:	mov    DWORD PTR [rbp-0x14],esi
  41c45f:	mov    rdi,QWORD PTR [rbp-0x10]
  41c463:	cmp    QWORD PTR [rdi+0xd8],0x0
  41c46b:	jne    41c495 <flatcc_builder_create_cached_vtable@@Base+0x375>
  41c471:	mov    rdi,QWORD PTR [rbp-0x10]
  41c475:	call   41eea0 <flatcc_builder_get_emit_context@@Base+0xe0>
  41c47a:	cmp    eax,0x0
  41c47d:	je     41c490 <flatcc_builder_create_cached_vtable@@Base+0x370>
  41c483:	mov    QWORD PTR [rbp-0x8],0x0
  41c48b:	jmp    41c4d2 <flatcc_builder_create_cached_vtable@@Base+0x3b2>
  41c490:	jmp    41c495 <flatcc_builder_create_cached_vtable@@Base+0x375>
  41c495:	mov    eax,0x20
  41c49a:	mov    ecx,eax
  41c49c:	mov    rdx,QWORD PTR [rbp-0x10]
  41c4a0:	mov    rdx,QWORD PTR [rdx+0xa8]
  41c4a7:	mov    QWORD PTR [rbp-0x20],rdx
  41c4ab:	mov    rdx,QWORD PTR [rbp-0x20]
  41c4af:	mov    eax,DWORD PTR [rbp-0x14]
  41c4b2:	mov    rsi,QWORD PTR [rbp-0x10]
  41c4b6:	sub    rcx,QWORD PTR [rsi+0xd8]
  41c4bd:	mov    edi,ecx
  41c4bf:	mov    ecx,edi
  41c4c1:	shr    eax,cl
  41c4c3:	mov    eax,eax
  41c4c5:	mov    esi,eax
  41c4c7:	shl    rsi,0x2
  41c4cb:	add    rdx,rsi
  41c4ce:	mov    QWORD PTR [rbp-0x8],rdx
  41c4d2:	mov    rax,QWORD PTR [rbp-0x8]
  41c4d6:	add    rsp,0x20
  41c4da:	pop    rbp
  41c4db:	ret    
  41c4dc:	nop    DWORD PTR [rax+0x0]

000000000041c4e0 <flatcc_builder_create_table@@Base>:
  41c4e0:	push   rbp
  41c4e1:	mov    rbp,rsp
  41c4e4:	sub    rsp,0xf0
  41c4eb:	mov    ax,cx
  41c4ee:	mov    ecx,DWORD PTR [rbp+0x10]
  41c4f1:	mov    QWORD PTR [rbp-0x10],rdi
  41c4f5:	mov    QWORD PTR [rbp-0x18],rsi
  41c4f9:	mov    QWORD PTR [rbp-0x20],rdx
  41c4fd:	mov    WORD PTR [rbp-0x22],ax
  41c501:	mov    QWORD PTR [rbp-0x30],r8
  41c505:	mov    DWORD PTR [rbp-0x34],r9d
  41c509:	cmp    DWORD PTR [rbp-0x34],0x0
  41c50d:	mov    DWORD PTR [rbp-0xec],ecx
  41c513:	jl     41c51e <flatcc_builder_create_table@@Base+0x3e>
  41c519:	jmp    41c53d <flatcc_builder_create_table@@Base+0x5d>
  41c51e:	lea    rdi,[rip+0xc013]        # 428538 <flatcc_builder_padding_base@@Base+0x988>
  41c525:	lea    rsi,[rip+0xb896]        # 427dc2 <flatcc_builder_padding_base@@Base+0x212>
  41c52c:	mov    edx,0x4d5
  41c531:	lea    rcx,[rip+0xc012]        # 42854a <flatcc_builder_padding_base@@Base+0x99a>
  41c538:	call   404090 <__assert_fail@plt>
  41c53d:	mov    eax,DWORD PTR [rbp+0x10]
  41c540:	and    eax,0x1
  41c543:	cmp    eax,0x0
  41c546:	je     41c551 <flatcc_builder_create_table@@Base+0x71>
  41c54c:	jmp    41c570 <flatcc_builder_create_table@@Base+0x90>
  41c551:	lea    rdi,[rip+0xc08e]        # 4285e6 <flatcc_builder_padding_base@@Base+0xa36>
  41c558:	lea    rsi,[rip+0xb863]        # 427dc2 <flatcc_builder_padding_base@@Base+0x212>
  41c55f:	mov    edx,0x4db
  41c564:	lea    rcx,[rip+0xbfdf]        # 42854a <flatcc_builder_padding_base@@Base+0x99a>
  41c56b:	call   404090 <__assert_fail@plt>
  41c570:	lea    rdi,[rbp-0x22]
  41c574:	mov    esi,0x4
  41c579:	call   41ba50 <flatcc_builder_start_vector@@Base+0xb0>
  41c57e:	mov    rdi,QWORD PTR [rbp-0x10]
  41c582:	movzx  esi,WORD PTR [rbp-0x22]
  41c586:	call   41a5c0 <flatcc_builder_create_buffer@@Base+0x410>
  41c58b:	mov    rdi,QWORD PTR [rbp-0x10]
  41c58f:	mov    rax,QWORD PTR [rbp-0x20]
  41c593:	mov    esi,eax
  41c595:	movzx  edx,WORD PTR [rbp-0x22]
  41c599:	call   41a070 <flatcc_builder_embed_buffer@@Base+0x3f0>
  41c59e:	mov    DWORD PTR [rbp-0x3c],eax
  41c5a1:	mov    rdi,QWORD PTR [rbp-0x10]
  41c5a5:	mov    eax,DWORD PTR [rdi+0xf0]
  41c5ab:	mov    edx,DWORD PTR [rbp-0x3c]
  41c5ae:	mov    edi,edx
  41c5b0:	add    rdi,QWORD PTR [rbp-0x20]
  41c5b4:	add    rdi,0x4
  41c5b8:	mov    edx,edi
  41c5ba:	sub    eax,edx
  41c5bc:	mov    DWORD PTR [rbp-0x4c],eax
  41c5bf:	mov    eax,DWORD PTR [rbp+0x10]
  41c5c2:	sub    eax,0x1
  41c5c5:	mov    DWORD PTR [rbp-0x48],eax
  41c5c8:	mov    eax,DWORD PTR [rbp-0x4c]
  41c5cb:	sub    eax,DWORD PTR [rbp-0x48]
  41c5ce:	mov    DWORD PTR [rbp-0x40],eax
  41c5d1:	mov    eax,DWORD PTR [rbp-0x4c]
  41c5d4:	sub    eax,DWORD PTR [rbp-0x40]
  41c5d7:	cmp    eax,DWORD PTR [rbp-0x48]
  41c5da:	je     41c5ec <flatcc_builder_create_table@@Base+0x10c>
  41c5e0:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41c5e7:	jmp    41c7bf <flatcc_builder_create_table@@Base+0x2df>
  41c5ec:	mov    edi,DWORD PTR [rbp-0x40]
  41c5ef:	call   41a0a0 <flatcc_builder_embed_buffer@@Base+0x420>
  41c5f4:	mov    DWORD PTR [rbp-0x44],eax
  41c5f7:	mov    DWORD PTR [rbp-0x38],0x0
  41c5fe:	mov    eax,DWORD PTR [rbp-0x38]
  41c601:	cmp    eax,DWORD PTR [rbp-0x34]
  41c604:	jge    41c663 <flatcc_builder_create_table@@Base+0x183>
  41c60a:	mov    rax,QWORD PTR [rbp-0x18]
  41c60e:	mov    rcx,QWORD PTR [rbp-0x30]
  41c612:	movsxd rdx,DWORD PTR [rbp-0x38]
  41c616:	movzx  esi,WORD PTR [rcx+rdx*2]
  41c61a:	mov    ecx,esi
  41c61c:	add    rax,rcx
  41c61f:	mov    QWORD PTR [rbp-0x58],rax
  41c623:	mov    rax,QWORD PTR [rbp-0x58]
  41c627:	mov    esi,DWORD PTR [rax]
  41c629:	sub    esi,DWORD PTR [rbp-0x4c]
  41c62c:	mov    rax,QWORD PTR [rbp-0x30]
  41c630:	movsxd rcx,DWORD PTR [rbp-0x38]
  41c634:	movzx  edi,WORD PTR [rax+rcx*2]
  41c638:	sub    esi,edi
  41c63a:	mov    esi,esi
  41c63c:	mov    eax,esi
  41c63e:	sub    rax,0x4
  41c642:	mov    esi,eax
  41c644:	mov    DWORD PTR [rbp-0x50],esi
  41c647:	mov    edi,DWORD PTR [rbp-0x50]
  41c64a:	call   41a0a0 <flatcc_builder_embed_buffer@@Base+0x420>
  41c64f:	mov    rcx,QWORD PTR [rbp-0x58]
  41c653:	mov    DWORD PTR [rcx],eax
  41c655:	mov    eax,DWORD PTR [rbp-0x38]
  41c658:	add    eax,0x1
  41c65b:	mov    DWORD PTR [rbp-0x38],eax
  41c65e:	jmp    41c5fe <flatcc_builder_create_table@@Base+0x11e>
  41c663:	mov    QWORD PTR [rbp-0xe8],0x0
  41c66e:	mov    DWORD PTR [rbp-0xe0],0x0
  41c678:	mov    rax,QWORD PTR [rbp-0xe8]
  41c67f:	add    rax,0x4
  41c683:	mov    QWORD PTR [rbp-0xe8],rax
  41c68a:	lea    rax,[rbp-0x44]
  41c68e:	lea    rcx,[rbp-0xe8]
  41c695:	mov    rdx,rcx
  41c698:	add    rdx,0x10
  41c69c:	movsxd rsi,DWORD PTR [rbp-0xe0]
  41c6a3:	shl    rsi,0x4
  41c6a7:	add    rdx,rsi
  41c6aa:	mov    QWORD PTR [rdx],rax
  41c6ad:	add    rcx,0x10
  41c6b1:	movsxd rax,DWORD PTR [rbp-0xe0]
  41c6b8:	shl    rax,0x4
  41c6bc:	add    rcx,rax
  41c6bf:	mov    QWORD PTR [rcx+0x8],0x4
  41c6c7:	mov    edi,DWORD PTR [rbp-0xe0]
  41c6cd:	add    edi,0x1
  41c6d0:	mov    DWORD PTR [rbp-0xe0],edi
  41c6d6:	cmp    QWORD PTR [rbp-0x20],0x0
  41c6db:	jbe    41c73f <flatcc_builder_create_table@@Base+0x25f>
  41c6e1:	mov    rax,QWORD PTR [rbp-0x20]
  41c6e5:	add    rax,QWORD PTR [rbp-0xe8]
  41c6ec:	mov    QWORD PTR [rbp-0xe8],rax
  41c6f3:	mov    rax,QWORD PTR [rbp-0x18]
  41c6f7:	lea    rcx,[rbp-0xe8]
  41c6fe:	mov    rdx,rcx
  41c701:	add    rdx,0x10
  41c705:	movsxd rsi,DWORD PTR [rbp-0xe0]
  41c70c:	shl    rsi,0x4
  41c710:	add    rdx,rsi
  41c713:	mov    QWORD PTR [rdx],rax
  41c716:	mov    rax,QWORD PTR [rbp-0x20]
  41c71a:	add    rcx,0x10
  41c71e:	movsxd rdx,DWORD PTR [rbp-0xe0]
  41c725:	shl    rdx,0x4
  41c729:	add    rcx,rdx
  41c72c:	mov    QWORD PTR [rcx+0x8],rax
  41c730:	mov    edi,DWORD PTR [rbp-0xe0]
  41c736:	add    edi,0x1
  41c739:	mov    DWORD PTR [rbp-0xe0],edi
  41c73f:	cmp    DWORD PTR [rbp-0x3c],0x0
  41c743:	jbe    41c7ac <flatcc_builder_create_table@@Base+0x2cc>
  41c749:	lea    rax,[rip+0xb460]        # 427bb0 <flatcc_builder_padding_base@@Base>
  41c750:	mov    ecx,DWORD PTR [rbp-0x3c]
  41c753:	mov    edx,ecx
  41c755:	add    rdx,QWORD PTR [rbp-0xe8]
  41c75c:	mov    QWORD PTR [rbp-0xe8],rdx
  41c763:	lea    rdx,[rbp-0xe8]
  41c76a:	mov    rsi,rdx
  41c76d:	add    rsi,0x10
  41c771:	movsxd rdi,DWORD PTR [rbp-0xe0]
  41c778:	shl    rdi,0x4
  41c77c:	add    rsi,rdi
  41c77f:	mov    QWORD PTR [rsi],rax
  41c782:	mov    ecx,DWORD PTR [rbp-0x3c]
  41c785:	mov    eax,ecx
  41c787:	add    rdx,0x10
  41c78b:	movsxd rsi,DWORD PTR [rbp-0xe0]
  41c792:	shl    rsi,0x4
  41c796:	add    rdx,rsi
  41c799:	mov    QWORD PTR [rdx+0x8],rax
  41c79d:	mov    ecx,DWORD PTR [rbp-0xe0]
  41c7a3:	add    ecx,0x1
  41c7a6:	mov    DWORD PTR [rbp-0xe0],ecx
  41c7ac:	mov    rdi,QWORD PTR [rbp-0x10]
  41c7b0:	lea    rsi,[rbp-0xe8]
  41c7b7:	call   41a0b0 <flatcc_builder_embed_buffer@@Base+0x430>
  41c7bc:	mov    DWORD PTR [rbp-0x4],eax
  41c7bf:	mov    eax,DWORD PTR [rbp-0x4]
  41c7c2:	add    rsp,0xf0
  41c7c9:	pop    rbp
  41c7ca:	ret    
  41c7cb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041c7d0 <flatcc_builder_check_required_field@@Base>:
  41c7d0:	push   rbp
  41c7d1:	mov    rbp,rsp
  41c7d4:	sub    rsp,0x10
  41c7d8:	mov    ax,si
  41c7db:	mov    QWORD PTR [rbp-0x8],rdi
  41c7df:	mov    WORD PTR [rbp-0xa],ax
  41c7e3:	mov    rdi,QWORD PTR [rbp-0x8]
  41c7e7:	mov    rdi,QWORD PTR [rdi+0x30]
  41c7eb:	movzx  esi,WORD PTR [rdi+0xe]
  41c7ef:	cmp    esi,0x3
  41c7f2:	jne    41c7fd <flatcc_builder_check_required_field@@Base+0x2d>
  41c7f8:	jmp    41c81c <flatcc_builder_check_required_field@@Base+0x4c>
  41c7fd:	lea    rdi,[rip+0xbded]        # 4285f1 <flatcc_builder_padding_base@@Base+0xa41>
  41c804:	lea    rsi,[rip+0xb5b7]        # 427dc2 <flatcc_builder_padding_base@@Base+0x212>
  41c80b:	mov    edx,0x4f8
  41c810:	lea    rcx,[rip+0xbe05]        # 42861c <flatcc_builder_padding_base@@Base+0xa6c>
  41c817:	call   404090 <__assert_fail@plt>
  41c81c:	xor    eax,eax
  41c81e:	mov    cl,al
  41c820:	movzx  eax,WORD PTR [rbp-0xa]
  41c824:	mov    rdx,QWORD PTR [rbp-0x8]
  41c828:	movzx  esi,WORD PTR [rdx+0x10]
  41c82c:	cmp    eax,esi
  41c82e:	mov    BYTE PTR [rbp-0xb],cl
  41c831:	jge    41c854 <flatcc_builder_check_required_field@@Base+0x84>
  41c837:	mov    rax,QWORD PTR [rbp-0x8]
  41c83b:	mov    rax,QWORD PTR [rax+0x8]
  41c83f:	movzx  ecx,WORD PTR [rbp-0xa]
  41c843:	mov    edx,ecx
  41c845:	movzx  ecx,WORD PTR [rax+rdx*2]
  41c849:	cmp    ecx,0x0
  41c84c:	setne  sil
  41c850:	mov    BYTE PTR [rbp-0xb],sil
  41c854:	mov    al,BYTE PTR [rbp-0xb]
  41c857:	and    al,0x1
  41c859:	movzx  eax,al
  41c85c:	add    rsp,0x10
  41c860:	pop    rbp
  41c861:	ret    
  41c862:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c86c:	nop    DWORD PTR [rax+0x0]

000000000041c870 <flatcc_builder_check_union_field@@Base>:
  41c870:	push   rbp
  41c871:	mov    rbp,rsp
  41c874:	sub    rsp,0x20
  41c878:	mov    ax,si
  41c87b:	mov    QWORD PTR [rbp-0x10],rdi
  41c87f:	mov    WORD PTR [rbp-0x12],ax
  41c883:	mov    rdi,QWORD PTR [rbp-0x10]
  41c887:	mov    rdi,QWORD PTR [rdi+0x30]
  41c88b:	movzx  esi,WORD PTR [rdi+0xe]
  41c88f:	cmp    esi,0x3
  41c892:	jne    41c89d <flatcc_builder_check_union_field@@Base+0x2d>
  41c898:	jmp    41c8bc <flatcc_builder_check_union_field@@Base+0x4c>
  41c89d:	lea    rdi,[rip+0xbd4d]        # 4285f1 <flatcc_builder_padding_base@@Base+0xa41>
  41c8a4:	lea    rsi,[rip+0xb517]        # 427dc2 <flatcc_builder_padding_base@@Base+0x212>
  41c8ab:	mov    edx,0x4ff
  41c8b0:	lea    rcx,[rip+0xbdb8]        # 42866f <flatcc_builder_padding_base@@Base+0xabf>
  41c8b7:	call   404090 <__assert_fail@plt>
  41c8bc:	movzx  eax,WORD PTR [rbp-0x12]
  41c8c0:	cmp    eax,0x0
  41c8c3:	je     41c8dd <flatcc_builder_check_union_field@@Base+0x6d>
  41c8c9:	movzx  eax,WORD PTR [rbp-0x12]
  41c8cd:	mov    rcx,QWORD PTR [rbp-0x10]
  41c8d1:	movzx  edx,WORD PTR [rcx+0x10]
  41c8d5:	cmp    eax,edx
  41c8d7:	jl     41c8e9 <flatcc_builder_check_union_field@@Base+0x79>
  41c8dd:	mov    DWORD PTR [rbp-0x4],0x0
  41c8e4:	jmp    41c9a9 <flatcc_builder_check_union_field@@Base+0x139>
  41c8e9:	mov    rax,QWORD PTR [rbp-0x10]
  41c8ed:	mov    rax,QWORD PTR [rax+0x8]
  41c8f1:	movzx  ecx,WORD PTR [rbp-0x12]
  41c8f5:	sub    ecx,0x1
  41c8f8:	movsxd rdx,ecx
  41c8fb:	movzx  ecx,WORD PTR [rax+rdx*2]
  41c8ff:	cmp    ecx,0x0
  41c902:	jne    41c931 <flatcc_builder_check_union_field@@Base+0xc1>
  41c908:	mov    rax,QWORD PTR [rbp-0x10]
  41c90c:	mov    rax,QWORD PTR [rax+0x8]
  41c910:	movzx  ecx,WORD PTR [rbp-0x12]
  41c914:	mov    edx,ecx
  41c916:	movzx  ecx,WORD PTR [rax+rdx*2]
  41c91a:	cmp    ecx,0x0
  41c91d:	sete   sil
  41c921:	and    sil,0x1
  41c925:	movzx  ecx,sil
  41c929:	mov    DWORD PTR [rbp-0x4],ecx
  41c92c:	jmp    41c9a9 <flatcc_builder_check_union_field@@Base+0x139>
  41c931:	mov    rax,QWORD PTR [rbp-0x10]
  41c935:	mov    rax,QWORD PTR [rax+0x18]
  41c939:	mov    rcx,QWORD PTR [rbp-0x10]
  41c93d:	mov    rcx,QWORD PTR [rcx+0x8]
  41c941:	movzx  edx,WORD PTR [rbp-0x12]
  41c945:	sub    edx,0x1
  41c948:	movsxd rsi,edx
  41c94b:	movzx  edx,WORD PTR [rcx+rsi*2]
  41c94f:	movsxd rcx,edx
  41c952:	cmp    BYTE PTR [rax+rcx*1],0x0
  41c956:	je     41c985 <flatcc_builder_check_union_field@@Base+0x115>
  41c95c:	mov    rax,QWORD PTR [rbp-0x10]
  41c960:	mov    rax,QWORD PTR [rax+0x8]
  41c964:	movzx  ecx,WORD PTR [rbp-0x12]
  41c968:	mov    edx,ecx
  41c96a:	movzx  ecx,WORD PTR [rax+rdx*2]
  41c96e:	cmp    ecx,0x0
  41c971:	setne  sil
  41c975:	and    sil,0x1
  41c979:	movzx  ecx,sil
  41c97d:	mov    DWORD PTR [rbp-0x4],ecx
  41c980:	jmp    41c9a9 <flatcc_builder_check_union_field@@Base+0x139>
  41c985:	mov    rax,QWORD PTR [rbp-0x10]
  41c989:	mov    rax,QWORD PTR [rax+0x8]
  41c98d:	movzx  ecx,WORD PTR [rbp-0x12]
  41c991:	mov    edx,ecx
  41c993:	movzx  ecx,WORD PTR [rax+rdx*2]
  41c997:	cmp    ecx,0x0
  41c99a:	sete   sil
  41c99e:	and    sil,0x1
  41c9a2:	movzx  ecx,sil
  41c9a6:	mov    DWORD PTR [rbp-0x4],ecx
  41c9a9:	mov    eax,DWORD PTR [rbp-0x4]
  41c9ac:	add    rsp,0x20
  41c9b0:	pop    rbp
  41c9b1:	ret    
  41c9b2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c9bc:	nop    DWORD PTR [rax+0x0]

000000000041c9c0 <flatcc_builder_check_required@@Base>:
  41c9c0:	push   rbp
  41c9c1:	mov    rbp,rsp
  41c9c4:	sub    rsp,0x20
  41c9c8:	mov    QWORD PTR [rbp-0x10],rdi
  41c9cc:	mov    QWORD PTR [rbp-0x18],rsi
  41c9d0:	mov    DWORD PTR [rbp-0x1c],edx
  41c9d3:	mov    rsi,QWORD PTR [rbp-0x10]
  41c9d7:	mov    rsi,QWORD PTR [rsi+0x30]
  41c9db:	movzx  edx,WORD PTR [rsi+0xe]
  41c9df:	cmp    edx,0x3
  41c9e2:	jne    41c9ed <flatcc_builder_check_required@@Base+0x2d>
  41c9e8:	jmp    41ca0c <flatcc_builder_check_required@@Base+0x4c>
  41c9ed:	lea    rdi,[rip+0xbbfd]        # 4285f1 <flatcc_builder_padding_base@@Base+0xa41>
  41c9f4:	lea    rsi,[rip+0xb3c7]        # 427dc2 <flatcc_builder_padding_base@@Base+0x212>
  41c9fb:	mov    edx,0x511
  41ca00:	lea    rcx,[rip+0xbcb8]        # 4286bf <flatcc_builder_padding_base@@Base+0xb0f>
  41ca07:	call   404090 <__assert_fail@plt>
  41ca0c:	mov    rax,QWORD PTR [rbp-0x10]
  41ca10:	movzx  ecx,WORD PTR [rax+0x10]
  41ca14:	cmp    ecx,DWORD PTR [rbp-0x1c]
  41ca17:	jge    41ca29 <flatcc_builder_check_required@@Base+0x69>
  41ca1d:	mov    DWORD PTR [rbp-0x4],0x0
  41ca24:	jmp    41ca85 <flatcc_builder_check_required@@Base+0xc5>
  41ca29:	mov    DWORD PTR [rbp-0x20],0x0
  41ca30:	mov    eax,DWORD PTR [rbp-0x20]
  41ca33:	cmp    eax,DWORD PTR [rbp-0x1c]
  41ca36:	jge    41ca7e <flatcc_builder_check_required@@Base+0xbe>
  41ca3c:	mov    rax,QWORD PTR [rbp-0x10]
  41ca40:	mov    rax,QWORD PTR [rax+0x8]
  41ca44:	mov    rcx,QWORD PTR [rbp-0x18]
  41ca48:	movsxd rdx,DWORD PTR [rbp-0x20]
  41ca4c:	movzx  esi,WORD PTR [rcx+rdx*2]
  41ca50:	mov    ecx,esi
  41ca52:	movzx  esi,WORD PTR [rax+rcx*2]
  41ca56:	cmp    esi,0x0
  41ca59:	jne    41ca6b <flatcc_builder_check_required@@Base+0xab>
  41ca5f:	mov    DWORD PTR [rbp-0x4],0x0
  41ca66:	jmp    41ca85 <flatcc_builder_check_required@@Base+0xc5>
  41ca6b:	jmp    41ca70 <flatcc_builder_check_required@@Base+0xb0>
  41ca70:	mov    eax,DWORD PTR [rbp-0x20]
  41ca73:	add    eax,0x1
  41ca76:	mov    DWORD PTR [rbp-0x20],eax
  41ca79:	jmp    41ca30 <flatcc_builder_check_required@@Base+0x70>
  41ca7e:	mov    DWORD PTR [rbp-0x4],0x1
  41ca85:	mov    eax,DWORD PTR [rbp-0x4]
  41ca88:	add    rsp,0x20
  41ca8c:	pop    rbp
  41ca8d:	ret    
  41ca8e:	xchg   ax,ax

000000000041ca90 <flatcc_builder_end_table@@Base>:
  41ca90:	push   rbp
  41ca91:	mov    rbp,rsp
  41ca94:	sub    rsp,0x40
  41ca98:	mov    QWORD PTR [rbp-0x10],rdi
  41ca9c:	mov    rdi,QWORD PTR [rbp-0x10]
  41caa0:	mov    rdi,QWORD PTR [rdi+0x30]
  41caa4:	movzx  eax,WORD PTR [rdi+0xe]
  41caa8:	cmp    eax,0x3
  41caab:	jne    41cab6 <flatcc_builder_end_table@@Base+0x26>
  41cab1:	jmp    41cad5 <flatcc_builder_end_table@@Base+0x45>
  41cab6:	lea    rdi,[rip+0xbb34]        # 4285f1 <flatcc_builder_padding_base@@Base+0xa41>
  41cabd:	lea    rsi,[rip+0xb2fe]        # 427dc2 <flatcc_builder_padding_base@@Base+0x212>
  41cac4:	mov    edx,0x525
  41cac9:	lea    rcx,[rip+0xbc49]        # 428719 <flatcc_builder_padding_base@@Base+0xb69>
  41cad0:	call   404090 <__assert_fail@plt>
  41cad5:	mov    rax,QWORD PTR [rbp-0x10]
  41cad9:	mov    rax,QWORD PTR [rax+0x8]
  41cadd:	add    rax,0xfffffffffffffffc
  41cae1:	mov    QWORD PTR [rbp-0x18],rax
  41cae5:	mov    rax,QWORD PTR [rbp-0x10]
  41cae9:	movzx  ecx,WORD PTR [rax+0x10]
  41caed:	add    ecx,0x2
  41caf0:	movsxd rax,ecx
  41caf3:	shl    rax,0x1
  41caf7:	mov    dx,ax
  41cafa:	mov    WORD PTR [rbp-0x1a],dx
  41cafe:	mov    dx,WORD PTR [rbp-0x1a]
  41cb02:	mov    rax,QWORD PTR [rbp-0x18]
  41cb06:	mov    WORD PTR [rax],dx
  41cb09:	mov    rax,QWORD PTR [rbp-0x10]
  41cb0d:	mov    ecx,DWORD PTR [rax+0x20]
  41cb10:	mov    dx,cx
  41cb13:	movzx  ecx,dx
  41cb16:	mov    eax,ecx
  41cb18:	add    rax,0x4
  41cb1c:	mov    dx,ax
  41cb1f:	mov    rax,QWORD PTR [rbp-0x18]
  41cb23:	mov    WORD PTR [rax+0x2],dx
  41cb27:	mov    rax,QWORD PTR [rbp-0x18]
  41cb2b:	movzx  ecx,WORD PTR [rax]
  41cb2e:	mov    rax,QWORD PTR [rbp-0x10]
  41cb32:	xor    ecx,DWORD PTR [rax+0x14]
  41cb35:	imul   ecx,ecx,0x9e3779b1
  41cb3b:	mov    rax,QWORD PTR [rbp-0x18]
  41cb3f:	movzx  esi,WORD PTR [rax+0x2]
  41cb43:	xor    ecx,esi
  41cb45:	imul   ecx,ecx,0x9e3779b1
  41cb4b:	mov    rax,QWORD PTR [rbp-0x10]
  41cb4f:	mov    DWORD PTR [rax+0x14],ecx
  41cb52:	mov    rdi,QWORD PTR [rbp-0x10]
  41cb56:	mov    rsi,QWORD PTR [rbp-0x18]
  41cb5a:	mov    dx,WORD PTR [rbp-0x1a]
  41cb5e:	mov    rax,QWORD PTR [rbp-0x10]
  41cb62:	mov    ecx,DWORD PTR [rax+0x14]
  41cb65:	movzx  edx,dx
  41cb68:	call   41c120 <flatcc_builder_create_cached_vtable@@Base>
  41cb6d:	mov    DWORD PTR [rbp-0x24],eax
  41cb70:	cmp    eax,0x0
  41cb73:	jne    41cb85 <flatcc_builder_end_table@@Base+0xf5>
  41cb79:	mov    DWORD PTR [rbp-0x4],0x0
  41cb80:	jmp    41cca5 <flatcc_builder_end_table@@Base+0x215>
  41cb85:	xor    esi,esi
  41cb87:	mov    rax,QWORD PTR [rbp-0x18]
  41cb8b:	movzx  ecx,WORD PTR [rbp-0x1a]
  41cb8f:	mov    edx,ecx
  41cb91:	mov    rdi,rax
  41cb94:	call   4040a0 <memset@plt>
  41cb99:	mov    rax,QWORD PTR [rbp-0x10]
  41cb9d:	mov    rax,QWORD PTR [rax+0x88]
  41cba4:	mov    rdx,QWORD PTR [rbp-0x10]
  41cba8:	mov    rdx,QWORD PTR [rdx+0x30]
  41cbac:	mov    ecx,DWORD PTR [rdx+0x14]
  41cbaf:	mov    edx,ecx
  41cbb1:	add    rax,rdx
  41cbb4:	mov    QWORD PTR [rbp-0x30],rax
  41cbb8:	mov    rax,QWORD PTR [rbp-0x10]
  41cbbc:	mov    rax,QWORD PTR [rax]
  41cbbf:	mov    rdx,QWORD PTR [rbp-0x30]
  41cbc3:	sub    rax,rdx
  41cbc6:	sar    rax,0x1
  41cbca:	mov    ecx,eax
  41cbcc:	mov    DWORD PTR [rbp-0x28],ecx
  41cbcf:	mov    rdi,QWORD PTR [rbp-0x10]
  41cbd3:	mov    rax,QWORD PTR [rbp-0x10]
  41cbd7:	mov    rsi,QWORD PTR [rax+0x18]
  41cbdb:	mov    rax,QWORD PTR [rbp-0x10]
  41cbdf:	mov    ecx,DWORD PTR [rax+0x20]
  41cbe2:	mov    edx,ecx
  41cbe4:	mov    rax,QWORD PTR [rbp-0x10]
  41cbe8:	mov    r8w,WORD PTR [rax+0xea]
  41cbf0:	mov    rax,QWORD PTR [rbp-0x30]
  41cbf4:	mov    r9d,DWORD PTR [rbp-0x28]
  41cbf8:	mov    ecx,DWORD PTR [rbp-0x24]
  41cbfb:	movzx  r10d,r8w
  41cbff:	mov    DWORD PTR [rbp-0x34],ecx
  41cc02:	mov    ecx,r10d
  41cc05:	mov    r8,rax
  41cc08:	mov    r10d,DWORD PTR [rbp-0x34]
  41cc0c:	mov    DWORD PTR [rsp],r10d
  41cc10:	call   41c4e0 <flatcc_builder_create_table@@Base>
  41cc15:	xor    ecx,ecx
  41cc17:	mov    DWORD PTR [rbp-0x20],eax
  41cc1a:	cmp    ecx,eax
  41cc1c:	jne    41cc2e <flatcc_builder_end_table@@Base+0x19e>
  41cc22:	mov    DWORD PTR [rbp-0x4],0x0
  41cc29:	jmp    41cca5 <flatcc_builder_end_table@@Base+0x215>
  41cc2e:	mov    rax,QWORD PTR [rbp-0x10]
  41cc32:	mov    rax,QWORD PTR [rax+0x30]
  41cc36:	mov    ecx,DWORD PTR [rax+0x18]
  41cc39:	mov    rax,QWORD PTR [rbp-0x10]
  41cc3d:	mov    DWORD PTR [rax+0x14],ecx
  41cc40:	mov    rax,QWORD PTR [rbp-0x10]
  41cc44:	mov    rax,QWORD PTR [rax+0x30]
  41cc48:	mov    dx,WORD PTR [rax+0x1c]
  41cc4c:	mov    rax,QWORD PTR [rbp-0x10]
  41cc50:	mov    WORD PTR [rax+0x10],dx
  41cc54:	mov    rax,QWORD PTR [rbp-0x10]
  41cc58:	mov    rax,QWORD PTR [rax+0x58]
  41cc5c:	mov    rsi,QWORD PTR [rbp-0x10]
  41cc60:	mov    rsi,QWORD PTR [rsi+0x30]
  41cc64:	mov    ecx,DWORD PTR [rsi+0x10]
  41cc67:	mov    esi,ecx
  41cc69:	add    rax,rsi
  41cc6c:	mov    rsi,QWORD PTR [rbp-0x10]
  41cc70:	mov    QWORD PTR [rsi+0x8],rax
  41cc74:	mov    rax,QWORD PTR [rbp-0x10]
  41cc78:	mov    rax,QWORD PTR [rax+0x88]
  41cc7f:	mov    rsi,QWORD PTR [rbp-0x10]
  41cc83:	mov    rsi,QWORD PTR [rsi+0x30]
  41cc87:	mov    ecx,DWORD PTR [rsi+0x14]
  41cc8a:	mov    esi,ecx
  41cc8c:	add    rax,rsi
  41cc8f:	mov    rsi,QWORD PTR [rbp-0x10]
  41cc93:	mov    QWORD PTR [rsi],rax
  41cc96:	mov    rdi,QWORD PTR [rbp-0x10]
  41cc9a:	call   41ac30 <flatcc_builder_end_buffer@@Base+0x160>
  41cc9f:	mov    ecx,DWORD PTR [rbp-0x20]
  41cca2:	mov    DWORD PTR [rbp-0x4],ecx
  41cca5:	mov    eax,DWORD PTR [rbp-0x4]
  41cca8:	add    rsp,0x40
  41ccac:	pop    rbp
  41ccad:	ret    
  41ccae:	xchg   ax,ax

000000000041ccb0 <flatcc_builder_create_vector@@Base>:
  41ccb0:	push   rbp
  41ccb1:	mov    rbp,rsp
  41ccb4:	sub    rsp,0xe0
  41ccbb:	mov    ax,r8w
  41ccbf:	mov    QWORD PTR [rbp-0x10],rdi
  41ccc3:	mov    QWORD PTR [rbp-0x18],rsi
  41ccc7:	mov    QWORD PTR [rbp-0x20],rdx
  41cccb:	mov    QWORD PTR [rbp-0x28],rcx
  41cccf:	mov    WORD PTR [rbp-0x2a],ax
  41ccd3:	mov    QWORD PTR [rbp-0x38],r9
  41ccd7:	mov    rcx,QWORD PTR [rbp-0x20]
  41ccdb:	cmp    rcx,QWORD PTR [rbp-0x38]
  41ccdf:	jbe    41cd23 <flatcc_builder_create_vector@@Base+0x73>
  41cce5:	mov    rax,QWORD PTR [rbp-0x20]
  41cce9:	cmp    rax,QWORD PTR [rbp-0x38]
  41cced:	ja     41ccf8 <flatcc_builder_create_vector@@Base+0x48>
  41ccf3:	jmp    41cd17 <flatcc_builder_create_vector@@Base+0x67>
  41ccf8:	lea    rdi,[rip+0xba5c]        # 42875b <flatcc_builder_padding_base@@Base+0xbab>
  41ccff:	lea    rsi,[rip+0xb0bc]        # 427dc2 <flatcc_builder_padding_base@@Base+0x212>
  41cd06:	mov    edx,0x555
  41cd0b:	lea    rcx,[rip+0xba5c]        # 42876e <flatcc_builder_padding_base@@Base+0xbbe>
  41cd12:	call   404090 <__assert_fail@plt>
  41cd17:	mov    DWORD PTR [rbp-0x4],0x0
  41cd1e:	jmp    41ced0 <flatcc_builder_create_vector@@Base+0x220>
  41cd23:	lea    rdi,[rbp-0x2a]
  41cd27:	mov    esi,0x4
  41cd2c:	call   41ba50 <flatcc_builder_start_vector@@Base+0xb0>
  41cd31:	mov    rdi,QWORD PTR [rbp-0x10]
  41cd35:	movzx  esi,WORD PTR [rbp-0x2a]
  41cd39:	call   41a5c0 <flatcc_builder_create_buffer@@Base+0x410>
  41cd3e:	mov    rdi,QWORD PTR [rbp-0x20]
  41cd42:	mov    esi,edi
  41cd44:	mov    rdi,QWORD PTR [rbp-0x28]
  41cd48:	mov    eax,edi
  41cd4a:	imul   esi,eax
  41cd4d:	mov    DWORD PTR [rbp-0x3c],esi
  41cd50:	mov    rdi,QWORD PTR [rbp-0x20]
  41cd54:	mov    eax,edi
  41cd56:	mov    edi,eax
  41cd58:	call   41a0a0 <flatcc_builder_embed_buffer@@Base+0x420>
  41cd5d:	mov    DWORD PTR [rbp-0x44],eax
  41cd60:	mov    rdi,QWORD PTR [rbp-0x10]
  41cd64:	mov    esi,DWORD PTR [rbp-0x3c]
  41cd67:	movzx  edx,WORD PTR [rbp-0x2a]
  41cd6b:	call   41a070 <flatcc_builder_embed_buffer@@Base+0x3f0>
  41cd70:	mov    DWORD PTR [rbp-0x40],eax
  41cd73:	mov    QWORD PTR [rbp-0xd8],0x0
  41cd7e:	mov    DWORD PTR [rbp-0xd0],0x0
  41cd88:	mov    rdi,QWORD PTR [rbp-0xd8]
  41cd8f:	add    rdi,0x4
  41cd93:	mov    QWORD PTR [rbp-0xd8],rdi
  41cd9a:	lea    rdi,[rbp-0x44]
  41cd9e:	lea    rcx,[rbp-0xd8]
  41cda5:	mov    r8,rcx
  41cda8:	add    r8,0x10
  41cdac:	movsxd r9,DWORD PTR [rbp-0xd0]
  41cdb3:	shl    r9,0x4
  41cdb7:	add    r8,r9
  41cdba:	mov    QWORD PTR [r8],rdi
  41cdbd:	add    rcx,0x10
  41cdc1:	movsxd rdi,DWORD PTR [rbp-0xd0]
  41cdc8:	shl    rdi,0x4
  41cdcc:	add    rcx,rdi
  41cdcf:	mov    QWORD PTR [rcx+0x8],0x4
  41cdd7:	mov    eax,DWORD PTR [rbp-0xd0]
  41cddd:	add    eax,0x1
  41cde0:	mov    DWORD PTR [rbp-0xd0],eax
  41cde6:	cmp    DWORD PTR [rbp-0x3c],0x0
  41cdea:	jbe    41ce50 <flatcc_builder_create_vector@@Base+0x1a0>
  41cdf0:	mov    eax,DWORD PTR [rbp-0x3c]
  41cdf3:	mov    ecx,eax
  41cdf5:	add    rcx,QWORD PTR [rbp-0xd8]
  41cdfc:	mov    QWORD PTR [rbp-0xd8],rcx
  41ce03:	mov    rcx,QWORD PTR [rbp-0x18]
  41ce07:	lea    rdx,[rbp-0xd8]
  41ce0e:	mov    rsi,rdx
  41ce11:	add    rsi,0x10
  41ce15:	movsxd rdi,DWORD PTR [rbp-0xd0]
  41ce1c:	shl    rdi,0x4
  41ce20:	add    rsi,rdi
  41ce23:	mov    QWORD PTR [rsi],rcx
  41ce26:	mov    eax,DWORD PTR [rbp-0x3c]
  41ce29:	mov    ecx,eax
  41ce2b:	add    rdx,0x10
  41ce2f:	movsxd rsi,DWORD PTR [rbp-0xd0]
  41ce36:	shl    rsi,0x4
  41ce3a:	add    rdx,rsi
  41ce3d:	mov    QWORD PTR [rdx+0x8],rcx
  41ce41:	mov    eax,DWORD PTR [rbp-0xd0]
  41ce47:	add    eax,0x1
  41ce4a:	mov    DWORD PTR [rbp-0xd0],eax
  41ce50:	cmp    DWORD PTR [rbp-0x40],0x0
  41ce54:	jbe    41cebd <flatcc_builder_create_vector@@Base+0x20d>
  41ce5a:	lea    rax,[rip+0xad4f]        # 427bb0 <flatcc_builder_padding_base@@Base>
  41ce61:	mov    ecx,DWORD PTR [rbp-0x40]
  41ce64:	mov    edx,ecx
  41ce66:	add    rdx,QWORD PTR [rbp-0xd8]
  41ce6d:	mov    QWORD PTR [rbp-0xd8],rdx
  41ce74:	lea    rdx,[rbp-0xd8]
  41ce7b:	mov    rsi,rdx
  41ce7e:	add    rsi,0x10
  41ce82:	movsxd rdi,DWORD PTR [rbp-0xd0]
  41ce89:	shl    rdi,0x4
  41ce8d:	add    rsi,rdi
  41ce90:	mov    QWORD PTR [rsi],rax
  41ce93:	mov    ecx,DWORD PTR [rbp-0x40]
  41ce96:	mov    eax,ecx
  41ce98:	add    rdx,0x10
  41ce9c:	movsxd rsi,DWORD PTR [rbp-0xd0]
  41cea3:	shl    rsi,0x4
  41cea7:	add    rdx,rsi
  41ceaa:	mov    QWORD PTR [rdx+0x8],rax
  41ceae:	mov    ecx,DWORD PTR [rbp-0xd0]
  41ceb4:	add    ecx,0x1
  41ceb7:	mov    DWORD PTR [rbp-0xd0],ecx
  41cebd:	mov    rdi,QWORD PTR [rbp-0x10]
  41cec1:	lea    rsi,[rbp-0xd8]
  41cec8:	call   41a0b0 <flatcc_builder_embed_buffer@@Base+0x430>
  41cecd:	mov    DWORD PTR [rbp-0x4],eax
  41ced0:	mov    eax,DWORD PTR [rbp-0x4]
  41ced3:	add    rsp,0xe0
  41ceda:	pop    rbp
  41cedb:	ret    
  41cedc:	nop    DWORD PTR [rax+0x0]

000000000041cee0 <flatcc_builder_end_vector@@Base>:
  41cee0:	push   rbp
  41cee1:	mov    rbp,rsp
  41cee4:	sub    rsp,0x20
  41cee8:	mov    QWORD PTR [rbp-0x10],rdi
  41ceec:	mov    rdi,QWORD PTR [rbp-0x10]
  41cef0:	mov    rdi,QWORD PTR [rdi+0x30]
  41cef4:	movzx  eax,WORD PTR [rdi+0xe]
  41cef8:	cmp    eax,0x4
  41cefb:	jne    41cf06 <flatcc_builder_end_vector@@Base+0x26>
  41cf01:	jmp    41cf25 <flatcc_builder_end_vector@@Base+0x45>
  41cf06:	lea    rdi,[rip+0xb1f2]        # 4280ff <flatcc_builder_padding_base@@Base+0x54f>
  41cf0d:	lea    rsi,[rip+0xaeae]        # 427dc2 <flatcc_builder_padding_base@@Base+0x212>
  41cf14:	mov    edx,0x578
  41cf19:	lea    rcx,[rip+0xb8c4]        # 4287e4 <flatcc_builder_padding_base@@Base+0xc34>
  41cf20:	call   404090 <__assert_fail@plt>
  41cf25:	mov    rdi,QWORD PTR [rbp-0x10]
  41cf29:	mov    rax,QWORD PTR [rbp-0x10]
  41cf2d:	mov    rsi,QWORD PTR [rax+0x18]
  41cf31:	mov    rax,QWORD PTR [rbp-0x10]
  41cf35:	mov    rax,QWORD PTR [rax+0x30]
  41cf39:	mov    ecx,DWORD PTR [rax+0x14]
  41cf3c:	mov    edx,ecx
  41cf3e:	mov    rax,QWORD PTR [rbp-0x10]
  41cf42:	mov    rax,QWORD PTR [rax+0x30]
  41cf46:	mov    ecx,DWORD PTR [rax+0x10]
  41cf49:	mov    rax,QWORD PTR [rbp-0x10]
  41cf4d:	mov    r8w,WORD PTR [rax+0xea]
  41cf55:	mov    rax,QWORD PTR [rbp-0x10]
  41cf59:	mov    rax,QWORD PTR [rax+0x30]
  41cf5d:	mov    r9d,DWORD PTR [rax+0x18]
  41cf61:	movzx  r8d,r8w
  41cf65:	call   41ccb0 <flatcc_builder_create_vector@@Base>
  41cf6a:	xor    r8d,r8d
  41cf6d:	mov    DWORD PTR [rbp-0x14],eax
  41cf70:	cmp    r8d,eax
  41cf73:	jne    41cf85 <flatcc_builder_end_vector@@Base+0xa5>
  41cf79:	mov    DWORD PTR [rbp-0x4],0x0
  41cf80:	jmp    41cf94 <flatcc_builder_end_vector@@Base+0xb4>
  41cf85:	mov    rdi,QWORD PTR [rbp-0x10]
  41cf89:	call   41ac30 <flatcc_builder_end_buffer@@Base+0x160>
  41cf8e:	mov    eax,DWORD PTR [rbp-0x14]
  41cf91:	mov    DWORD PTR [rbp-0x4],eax
  41cf94:	mov    eax,DWORD PTR [rbp-0x4]
  41cf97:	add    rsp,0x20
  41cf9b:	pop    rbp
  41cf9c:	ret    
  41cf9d:	nop    DWORD PTR [rax]

000000000041cfa0 <flatcc_builder_vector_count@@Base>:
  41cfa0:	push   rbp
  41cfa1:	mov    rbp,rsp
  41cfa4:	mov    QWORD PTR [rbp-0x8],rdi
  41cfa8:	mov    rdi,QWORD PTR [rbp-0x8]
  41cfac:	mov    rdi,QWORD PTR [rdi+0x30]
  41cfb0:	mov    eax,DWORD PTR [rdi+0x14]
  41cfb3:	pop    rbp
  41cfb4:	ret    
  41cfb5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41cfbf:	nop

000000000041cfc0 <flatcc_builder_vector_edit@@Base>:
  41cfc0:	push   rbp
  41cfc1:	mov    rbp,rsp
  41cfc4:	mov    QWORD PTR [rbp-0x8],rdi
  41cfc8:	mov    rdi,QWORD PTR [rbp-0x8]
  41cfcc:	mov    rax,QWORD PTR [rdi+0x18]
  41cfd0:	pop    rbp
  41cfd1:	ret    
  41cfd2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41cfdc:	nop    DWORD PTR [rax+0x0]

000000000041cfe0 <flatcc_builder_create_offset_vector_direct@@Base>:
  41cfe0:	push   rbp
  41cfe1:	mov    rbp,rsp
  41cfe4:	sub    rsp,0x20
  41cfe8:	xor    eax,eax
  41cfea:	mov    ecx,eax
  41cfec:	mov    QWORD PTR [rbp-0x8],rdi
  41cff0:	mov    QWORD PTR [rbp-0x10],rsi
  41cff4:	mov    QWORD PTR [rbp-0x18],rdx
  41cff8:	mov    rdi,QWORD PTR [rbp-0x8]
  41cffc:	mov    rsi,QWORD PTR [rbp-0x10]
  41d000:	mov    rdx,QWORD PTR [rbp-0x18]
  41d004:	call   41d010 <flatcc_builder_create_offset_vector_direct@@Base+0x30>
  41d009:	add    rsp,0x20
  41d00d:	pop    rbp
  41d00e:	ret    
  41d00f:	nop
  41d010:	push   rbp
  41d011:	mov    rbp,rsp
  41d014:	sub    rsp,0xd0
  41d01b:	mov    QWORD PTR [rbp-0x10],rdi
  41d01f:	mov    QWORD PTR [rbp-0x18],rsi
  41d023:	mov    QWORD PTR [rbp-0x20],rdx
  41d027:	mov    QWORD PTR [rbp-0x28],rcx
  41d02b:	mov    rcx,QWORD PTR [rbp-0x20]
  41d02f:	mov    eax,ecx
  41d031:	mov    eax,eax
  41d033:	mov    ecx,eax
  41d035:	cmp    rcx,0x3fffffff
  41d03c:	jbe    41d04e <flatcc_builder_create_offset_vector_direct@@Base+0x6e>
  41d042:	mov    DWORD PTR [rbp-0x4],0x0
  41d049:	jmp    41d33f <flatcc_builder_create_offset_vector_direct@@Base+0x35f>
  41d04e:	mov    rdi,QWORD PTR [rbp-0x10]
  41d052:	mov    esi,0x4
  41d057:	call   41a5c0 <flatcc_builder_create_buffer@@Base+0x410>
  41d05c:	mov    rdi,QWORD PTR [rbp-0x20]
  41d060:	mov    esi,edi
  41d062:	mov    esi,esi
  41d064:	mov    edi,esi
  41d066:	shl    rdi,0x2
  41d06a:	mov    esi,edi
  41d06c:	mov    DWORD PTR [rbp-0x2c],esi
  41d06f:	mov    rdi,QWORD PTR [rbp-0x20]
  41d073:	mov    esi,edi
  41d075:	mov    edi,esi
  41d077:	call   41a0a0 <flatcc_builder_embed_buffer@@Base+0x420>
  41d07c:	mov    DWORD PTR [rbp-0x34],eax
  41d07f:	mov    rdi,QWORD PTR [rbp-0x10]
  41d083:	mov    esi,DWORD PTR [rbp-0x2c]
  41d086:	mov    edx,0x4
  41d08b:	call   41a070 <flatcc_builder_embed_buffer@@Base+0x3f0>
  41d090:	mov    DWORD PTR [rbp-0x30],eax
  41d093:	mov    QWORD PTR [rbp-0xd0],0x0
  41d09e:	mov    DWORD PTR [rbp-0xc8],0x0
  41d0a8:	mov    rdi,QWORD PTR [rbp-0xd0]
  41d0af:	add    rdi,0x4
  41d0b3:	mov    QWORD PTR [rbp-0xd0],rdi
  41d0ba:	lea    rdi,[rbp-0x34]
  41d0be:	lea    rcx,[rbp-0xd0]
  41d0c5:	mov    r8,rcx
  41d0c8:	add    r8,0x10
  41d0cc:	movsxd r9,DWORD PTR [rbp-0xc8]
  41d0d3:	shl    r9,0x4
  41d0d7:	add    r8,r9
  41d0da:	mov    QWORD PTR [r8],rdi
  41d0dd:	add    rcx,0x10
  41d0e1:	movsxd rdi,DWORD PTR [rbp-0xc8]
  41d0e8:	shl    rdi,0x4
  41d0ec:	add    rcx,rdi
  41d0ef:	mov    QWORD PTR [rcx+0x8],0x4
  41d0f7:	mov    eax,DWORD PTR [rbp-0xc8]
  41d0fd:	add    eax,0x1
  41d100:	mov    DWORD PTR [rbp-0xc8],eax
  41d106:	cmp    DWORD PTR [rbp-0x2c],0x0
  41d10a:	jbe    41d170 <flatcc_builder_create_offset_vector_direct@@Base+0x190>
  41d110:	mov    eax,DWORD PTR [rbp-0x2c]
  41d113:	mov    ecx,eax
  41d115:	add    rcx,QWORD PTR [rbp-0xd0]
  41d11c:	mov    QWORD PTR [rbp-0xd0],rcx
  41d123:	mov    rcx,QWORD PTR [rbp-0x18]
  41d127:	lea    rdx,[rbp-0xd0]
  41d12e:	mov    rsi,rdx
  41d131:	add    rsi,0x10
  41d135:	movsxd rdi,DWORD PTR [rbp-0xc8]
  41d13c:	shl    rdi,0x4
  41d140:	add    rsi,rdi
  41d143:	mov    QWORD PTR [rsi],rcx
  41d146:	mov    eax,DWORD PTR [rbp-0x2c]
  41d149:	mov    ecx,eax
  41d14b:	add    rdx,0x10
  41d14f:	movsxd rsi,DWORD PTR [rbp-0xc8]
  41d156:	shl    rsi,0x4
  41d15a:	add    rdx,rsi
  41d15d:	mov    QWORD PTR [rdx+0x8],rcx
  41d161:	mov    eax,DWORD PTR [rbp-0xc8]
  41d167:	add    eax,0x1
  41d16a:	mov    DWORD PTR [rbp-0xc8],eax
  41d170:	cmp    DWORD PTR [rbp-0x30],0x0
  41d174:	jbe    41d1dd <flatcc_builder_create_offset_vector_direct@@Base+0x1fd>
  41d17a:	lea    rax,[rip+0xaa2f]        # 427bb0 <flatcc_builder_padding_base@@Base>
  41d181:	mov    ecx,DWORD PTR [rbp-0x30]
  41d184:	mov    edx,ecx
  41d186:	add    rdx,QWORD PTR [rbp-0xd0]
  41d18d:	mov    QWORD PTR [rbp-0xd0],rdx
  41d194:	lea    rdx,[rbp-0xd0]
  41d19b:	mov    rsi,rdx
  41d19e:	add    rsi,0x10
  41d1a2:	movsxd rdi,DWORD PTR [rbp-0xc8]
  41d1a9:	shl    rdi,0x4
  41d1ad:	add    rsi,rdi
  41d1b0:	mov    QWORD PTR [rsi],rax
  41d1b3:	mov    ecx,DWORD PTR [rbp-0x30]
  41d1b6:	mov    eax,ecx
  41d1b8:	add    rdx,0x10
  41d1bc:	movsxd rsi,DWORD PTR [rbp-0xc8]
  41d1c3:	shl    rsi,0x4
  41d1c7:	add    rdx,rsi
  41d1ca:	mov    QWORD PTR [rdx+0x8],rax
  41d1ce:	mov    ecx,DWORD PTR [rbp-0xc8]
  41d1d4:	add    ecx,0x1
  41d1d7:	mov    DWORD PTR [rbp-0xc8],ecx
  41d1dd:	mov    rax,QWORD PTR [rbp-0x10]
  41d1e1:	mov    ecx,DWORD PTR [rax+0xf0]
  41d1e7:	mov    rax,QWORD PTR [rbp-0xd0]
  41d1ee:	mov    edx,eax
  41d1f0:	sub    ecx,edx
  41d1f2:	mov    DWORD PTR [rbp-0x38],ecx
  41d1f5:	mov    DWORD PTR [rbp-0x40],0x0
  41d1fc:	mov    eax,DWORD PTR [rbp-0x40]
  41d1ff:	mov    rcx,QWORD PTR [rbp-0x20]
  41d203:	mov    edx,ecx
  41d205:	cmp    eax,edx
  41d207:	jae    41d32c <flatcc_builder_create_offset_vector_direct@@Base+0x34c>
  41d20d:	mov    rax,QWORD PTR [rbp-0x18]
  41d211:	mov    ecx,DWORD PTR [rbp-0x40]
  41d214:	mov    edx,ecx
  41d216:	cmp    DWORD PTR [rax+rdx*4],0x0
  41d21a:	je     41d2ab <flatcc_builder_create_offset_vector_direct@@Base+0x2cb>
  41d220:	mov    rax,QWORD PTR [rbp-0x18]
  41d224:	mov    ecx,DWORD PTR [rbp-0x40]
  41d227:	mov    edx,ecx
  41d229:	mov    ecx,DWORD PTR [rax+rdx*4]
  41d22c:	sub    ecx,DWORD PTR [rbp-0x38]
  41d22f:	mov    ecx,ecx
  41d231:	mov    eax,ecx
  41d233:	mov    ecx,DWORD PTR [rbp-0x40]
  41d236:	mov    edx,ecx
  41d238:	shl    rdx,0x2
  41d23c:	sub    rax,rdx
  41d23f:	sub    rax,0x4
  41d243:	mov    ecx,eax
  41d245:	mov    DWORD PTR [rbp-0x3c],ecx
  41d248:	mov    edi,DWORD PTR [rbp-0x3c]
  41d24b:	call   41a0a0 <flatcc_builder_embed_buffer@@Base+0x420>
  41d250:	mov    rdx,QWORD PTR [rbp-0x18]
  41d254:	mov    ecx,DWORD PTR [rbp-0x40]
  41d257:	mov    esi,ecx
  41d259:	mov    DWORD PTR [rdx+rsi*4],eax
  41d25c:	cmp    QWORD PTR [rbp-0x28],0x0
  41d261:	je     41d2a6 <flatcc_builder_create_offset_vector_direct@@Base+0x2c6>
  41d267:	mov    rax,QWORD PTR [rbp-0x28]
  41d26b:	mov    ecx,DWORD PTR [rbp-0x40]
  41d26e:	mov    edx,ecx
  41d270:	movzx  ecx,BYTE PTR [rax+rdx*1]
  41d274:	cmp    ecx,0x0
  41d277:	je     41d282 <flatcc_builder_create_offset_vector_direct@@Base+0x2a2>
  41d27d:	jmp    41d2a1 <flatcc_builder_create_offset_vector_direct@@Base+0x2c1>
  41d282:	lea    rdi,[rip+0xbced]        # 428f76 <flatcc_builder_padding_base@@Base+0x13c6>
  41d289:	lea    rsi,[rip+0xab32]        # 427dc2 <flatcc_builder_padding_base@@Base+0x212>
  41d290:	mov    edx,0x5b1
  41d295:	lea    rcx,[rip+0xbce8]        # 428f84 <flatcc_builder_padding_base@@Base+0x13d4>
  41d29c:	call   404090 <__assert_fail@plt>
  41d2a1:	jmp    41d2a6 <flatcc_builder_create_offset_vector_direct@@Base+0x2c6>
  41d2a6:	jmp    41d319 <flatcc_builder_create_offset_vector_direct@@Base+0x339>
  41d2ab:	cmp    QWORD PTR [rbp-0x28],0x0
  41d2b0:	je     41d2f5 <flatcc_builder_create_offset_vector_direct@@Base+0x315>
  41d2b6:	mov    rax,QWORD PTR [rbp-0x28]
  41d2ba:	mov    ecx,DWORD PTR [rbp-0x40]
  41d2bd:	mov    edx,ecx
  41d2bf:	movzx  ecx,BYTE PTR [rax+rdx*1]
  41d2c3:	cmp    ecx,0x0
  41d2c6:	jne    41d2d1 <flatcc_builder_create_offset_vector_direct@@Base+0x2f1>
  41d2cc:	jmp    41d2f0 <flatcc_builder_create_offset_vector_direct@@Base+0x310>
  41d2d1:	lea    rdi,[rip+0xbd2f]        # 429007 <flatcc_builder_padding_base@@Base+0x1457>
  41d2d8:	lea    rsi,[rip+0xaae3]        # 427dc2 <flatcc_builder_padding_base@@Base+0x212>
  41d2df:	mov    edx,0x5b5
  41d2e4:	lea    rcx,[rip+0xbc99]        # 428f84 <flatcc_builder_padding_base@@Base+0x13d4>
  41d2eb:	call   404090 <__assert_fail@plt>
  41d2f0:	jmp    41d314 <flatcc_builder_create_offset_vector_direct@@Base+0x334>
  41d2f5:	lea    rdi,[rip+0xbc86]        # 428f82 <flatcc_builder_padding_base@@Base+0x13d2>
  41d2fc:	lea    rsi,[rip+0xaabf]        # 427dc2 <flatcc_builder_padding_base@@Base+0x212>
  41d303:	mov    edx,0x5b7
  41d308:	lea    rcx,[rip+0xbc75]        # 428f84 <flatcc_builder_padding_base@@Base+0x13d4>
  41d30f:	call   404090 <__assert_fail@plt>
  41d314:	jmp    41d319 <flatcc_builder_create_offset_vector_direct@@Base+0x339>
  41d319:	jmp    41d31e <flatcc_builder_create_offset_vector_direct@@Base+0x33e>
  41d31e:	mov    eax,DWORD PTR [rbp-0x40]
  41d321:	add    eax,0x1
  41d324:	mov    DWORD PTR [rbp-0x40],eax
  41d327:	jmp    41d1fc <flatcc_builder_create_offset_vector_direct@@Base+0x21c>
  41d32c:	mov    rdi,QWORD PTR [rbp-0x10]
  41d330:	lea    rsi,[rbp-0xd0]
  41d337:	call   41a0b0 <flatcc_builder_embed_buffer@@Base+0x430>
  41d33c:	mov    DWORD PTR [rbp-0x4],eax
  41d33f:	mov    eax,DWORD PTR [rbp-0x4]
  41d342:	add    rsp,0xd0
  41d349:	pop    rbp
  41d34a:	ret    
  41d34b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041d350 <flatcc_builder_end_offset_vector_for_unions@@Base>:
  41d350:	push   rbp
  41d351:	mov    rbp,rsp
  41d354:	sub    rsp,0x20
  41d358:	mov    QWORD PTR [rbp-0x10],rdi
  41d35c:	mov    QWORD PTR [rbp-0x18],rsi
  41d360:	mov    rsi,QWORD PTR [rbp-0x10]
  41d364:	mov    rsi,QWORD PTR [rsi+0x30]
  41d368:	movzx  eax,WORD PTR [rsi+0xe]
  41d36c:	cmp    eax,0x5
  41d36f:	jne    41d37a <flatcc_builder_end_offset_vector_for_unions@@Base+0x2a>
  41d375:	jmp    41d399 <flatcc_builder_end_offset_vector_for_unions@@Base+0x49>
  41d37a:	lea    rdi,[rip+0xae77]        # 4281f8 <flatcc_builder_padding_base@@Base+0x648>
  41d381:	lea    rsi,[rip+0xaa3a]        # 427dc2 <flatcc_builder_padding_base@@Base+0x212>
  41d388:	mov    edx,0x5d5
  41d38d:	lea    rcx,[rip+0xb4dd]        # 428871 <flatcc_builder_padding_base@@Base+0xcc1>
  41d394:	call   404090 <__assert_fail@plt>
  41d399:	mov    rdi,QWORD PTR [rbp-0x10]
  41d39d:	mov    rax,QWORD PTR [rbp-0x10]
  41d3a1:	mov    rax,QWORD PTR [rax+0x18]
  41d3a5:	mov    rcx,QWORD PTR [rbp-0x10]
  41d3a9:	mov    rcx,QWORD PTR [rcx+0x30]
  41d3ad:	mov    edx,DWORD PTR [rcx+0x14]
  41d3b0:	mov    rcx,QWORD PTR [rbp-0x18]
  41d3b4:	mov    rsi,rax
  41d3b7:	call   41d010 <flatcc_builder_create_offset_vector_direct@@Base+0x30>
  41d3bc:	xor    r8d,r8d
  41d3bf:	mov    DWORD PTR [rbp-0x1c],eax
  41d3c2:	cmp    r8d,eax
  41d3c5:	jne    41d3d7 <flatcc_builder_end_offset_vector_for_unions@@Base+0x87>
  41d3cb:	mov    DWORD PTR [rbp-0x4],0x0
  41d3d2:	jmp    41d3e6 <flatcc_builder_end_offset_vector_for_unions@@Base+0x96>
  41d3d7:	mov    rdi,QWORD PTR [rbp-0x10]
  41d3db:	call   41ac30 <flatcc_builder_end_buffer@@Base+0x160>
  41d3e0:	mov    eax,DWORD PTR [rbp-0x1c]
  41d3e3:	mov    DWORD PTR [rbp-0x4],eax
  41d3e6:	mov    eax,DWORD PTR [rbp-0x4]
  41d3e9:	add    rsp,0x20
  41d3ed:	pop    rbp
  41d3ee:	ret    
  41d3ef:	nop

000000000041d3f0 <flatcc_builder_offset_vector_edit@@Base>:
  41d3f0:	push   rbp
  41d3f1:	mov    rbp,rsp
  41d3f4:	mov    QWORD PTR [rbp-0x8],rdi
  41d3f8:	mov    rdi,QWORD PTR [rbp-0x8]
  41d3fc:	mov    rax,QWORD PTR [rdi+0x18]
  41d400:	pop    rbp
  41d401:	ret    
  41d402:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d40c:	nop    DWORD PTR [rax+0x0]

000000000041d410 <flatcc_builder_offset_vector_count@@Base>:
  41d410:	push   rbp
  41d411:	mov    rbp,rsp
  41d414:	mov    QWORD PTR [rbp-0x8],rdi
  41d418:	mov    rdi,QWORD PTR [rbp-0x8]
  41d41c:	mov    rdi,QWORD PTR [rdi+0x30]
  41d420:	mov    eax,DWORD PTR [rdi+0x14]
  41d423:	pop    rbp
  41d424:	ret    
  41d425:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d42f:	nop

000000000041d430 <flatcc_builder_table_add_union@@Base>:
  41d430:	push   rbp
  41d431:	mov    rbp,rsp
  41d434:	sub    rsp,0x30
  41d438:	mov    QWORD PTR [rbp-0x10],rdx
  41d43c:	mov    QWORD PTR [rbp-0x18],rdi
  41d440:	mov    DWORD PTR [rbp-0x1c],esi
  41d443:	mov    rdx,QWORD PTR [rbp-0x18]
  41d447:	mov    rdx,QWORD PTR [rdx+0x30]
  41d44b:	movzx  esi,WORD PTR [rdx+0xe]
  41d44f:	cmp    esi,0x3
  41d452:	jne    41d45d <flatcc_builder_table_add_union@@Base+0x2d>
  41d458:	jmp    41d47c <flatcc_builder_table_add_union@@Base+0x4c>
  41d45d:	lea    rdi,[rip+0xb18d]        # 4285f1 <flatcc_builder_padding_base@@Base+0xa41>
  41d464:	lea    rsi,[rip+0xa957]        # 427dc2 <flatcc_builder_padding_base@@Base+0x212>
  41d46b:	mov    edx,0x5ee
  41d470:	lea    rcx,[rip+0xb46c]        # 4288e3 <flatcc_builder_padding_base@@Base+0xd33>
  41d477:	call   404090 <__assert_fail@plt>
  41d47c:	movzx  eax,BYTE PTR [rbp-0x10]
  41d480:	cmp    eax,0x0
  41d483:	jne    41d4da <flatcc_builder_table_add_union@@Base+0xaa>
  41d489:	cmp    DWORD PTR [rbp-0xc],0x0
  41d48d:	je     41d4da <flatcc_builder_table_add_union@@Base+0xaa>
  41d493:	movzx  eax,BYTE PTR [rbp-0x10]
  41d497:	cmp    eax,0x0
  41d49a:	jne    41d4aa <flatcc_builder_table_add_union@@Base+0x7a>
  41d4a0:	cmp    DWORD PTR [rbp-0xc],0x0
  41d4a4:	jne    41d4af <flatcc_builder_table_add_union@@Base+0x7f>
  41d4aa:	jmp    41d4ce <flatcc_builder_table_add_union@@Base+0x9e>
  41d4af:	lea    rdi,[rip+0xb485]        # 42893b <flatcc_builder_padding_base@@Base+0xd8b>
  41d4b6:	lea    rsi,[rip+0xa905]        # 427dc2 <flatcc_builder_padding_base@@Base+0x212>
  41d4bd:	mov    edx,0x5ef
  41d4c2:	lea    rcx,[rip+0xb41a]        # 4288e3 <flatcc_builder_padding_base@@Base+0xd33>
  41d4c9:	call   404090 <__assert_fail@plt>
  41d4ce:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41d4d5:	jmp    41d5c0 <flatcc_builder_table_add_union@@Base+0x190>
  41d4da:	cmp    DWORD PTR [rbp-0xc],0x0
  41d4de:	je     41d543 <flatcc_builder_table_add_union@@Base+0x113>
  41d4e4:	mov    rdi,QWORD PTR [rbp-0x18]
  41d4e8:	mov    esi,DWORD PTR [rbp-0x1c]
  41d4eb:	call   41d5d0 <flatcc_builder_table_add_offset@@Base>
  41d4f0:	mov    QWORD PTR [rbp-0x28],rax
  41d4f4:	cmp    QWORD PTR [rbp-0x28],0x0
  41d4f9:	jne    41d53a <flatcc_builder_table_add_union@@Base+0x10a>
  41d4ff:	cmp    QWORD PTR [rbp-0x28],0x0
  41d504:	je     41d50f <flatcc_builder_table_add_union@@Base+0xdf>
  41d50a:	jmp    41d52e <flatcc_builder_table_add_union@@Base+0xfe>
  41d50f:	lea    rdi,[rip+0xb447]        # 42895d <flatcc_builder_padding_base@@Base+0xdad>
  41d516:	lea    rsi,[rip+0xa8a5]        # 427dc2 <flatcc_builder_padding_base@@Base+0x212>
  41d51d:	mov    edx,0x5f2
  41d522:	lea    rcx,[rip+0xb3ba]        # 4288e3 <flatcc_builder_padding_base@@Base+0xd33>
  41d529:	call   404090 <__assert_fail@plt>
  41d52e:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41d535:	jmp    41d5c0 <flatcc_builder_table_add_union@@Base+0x190>
  41d53a:	mov    eax,DWORD PTR [rbp-0xc]
  41d53d:	mov    rcx,QWORD PTR [rbp-0x28]
  41d541:	mov    DWORD PTR [rcx],eax
  41d543:	mov    eax,0x1
  41d548:	mov    edx,eax
  41d54a:	mov    rdi,QWORD PTR [rbp-0x18]
  41d54e:	mov    eax,DWORD PTR [rbp-0x1c]
  41d551:	sub    eax,0x1
  41d554:	mov    esi,eax
  41d556:	mov    ecx,0x1
  41d55b:	call   41d6d0 <flatcc_builder_table_add@@Base>
  41d560:	mov    QWORD PTR [rbp-0x30],rax
  41d564:	cmp    QWORD PTR [rbp-0x30],0x0
  41d569:	jne    41d5aa <flatcc_builder_table_add_union@@Base+0x17a>
  41d56f:	cmp    QWORD PTR [rbp-0x30],0x0
  41d574:	je     41d57f <flatcc_builder_table_add_union@@Base+0x14f>
  41d57a:	jmp    41d59e <flatcc_builder_table_add_union@@Base+0x16e>
  41d57f:	lea    rdi,[rip+0xb3e1]        # 428967 <flatcc_builder_padding_base@@Base+0xdb7>
  41d586:	lea    rsi,[rip+0xa835]        # 427dc2 <flatcc_builder_padding_base@@Base+0x212>
  41d58d:	mov    edx,0x5f6
  41d592:	lea    rcx,[rip+0xb34a]        # 4288e3 <flatcc_builder_padding_base@@Base+0xd33>
  41d599:	call   404090 <__assert_fail@plt>
  41d59e:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41d5a5:	jmp    41d5c0 <flatcc_builder_table_add_union@@Base+0x190>
  41d5aa:	movzx  edi,BYTE PTR [rbp-0x10]
  41d5ae:	call   41d820 <flatcc_builder_table_add@@Base+0x150>
  41d5b3:	mov    rcx,QWORD PTR [rbp-0x30]
  41d5b7:	mov    BYTE PTR [rcx],al
  41d5b9:	mov    DWORD PTR [rbp-0x4],0x0
  41d5c0:	mov    eax,DWORD PTR [rbp-0x4]
  41d5c3:	add    rsp,0x30
  41d5c7:	pop    rbp
  41d5c8:	ret    
  41d5c9:	nop    DWORD PTR [rax+0x0]

000000000041d5d0 <flatcc_builder_table_add_offset@@Base>:
  41d5d0:	push   rbp
  41d5d1:	mov    rbp,rsp
  41d5d4:	sub    rsp,0x10
  41d5d8:	mov    QWORD PTR [rbp-0x8],rdi
  41d5dc:	mov    DWORD PTR [rbp-0xc],esi
  41d5df:	mov    rdi,QWORD PTR [rbp-0x8]
  41d5e3:	mov    rdi,QWORD PTR [rdi+0x30]
  41d5e7:	movzx  esi,WORD PTR [rdi+0xe]
  41d5eb:	cmp    esi,0x3
  41d5ee:	jne    41d5f9 <flatcc_builder_table_add_offset@@Base+0x29>
  41d5f4:	jmp    41d618 <flatcc_builder_table_add_offset@@Base+0x48>
  41d5f9:	lea    rdi,[rip+0xaff1]        # 4285f1 <flatcc_builder_padding_base@@Base+0xa41>
  41d600:	lea    rsi,[rip+0xa7bb]        # 427dc2 <flatcc_builder_padding_base@@Base+0x212>
  41d607:	mov    edx,0x713
  41d60c:	lea    rcx,[rip+0xb6d2]        # 428ce5 <flatcc_builder_padding_base@@Base+0x1135>
  41d613:	call   404090 <__assert_fail@plt>
  41d618:	cmp    DWORD PTR [rbp-0xc],0x0
  41d61c:	jl     41d634 <flatcc_builder_table_add_offset@@Base+0x64>
  41d622:	cmp    DWORD PTR [rbp-0xc],0x7ffc
  41d629:	jg     41d634 <flatcc_builder_table_add_offset@@Base+0x64>
  41d62f:	jmp    41d653 <flatcc_builder_table_add_offset@@Base+0x83>
  41d634:	lea    rdi,[rip+0xb62a]        # 428c65 <flatcc_builder_padding_base@@Base+0x10b5>
  41d63b:	lea    rsi,[rip+0xa780]        # 427dc2 <flatcc_builder_padding_base@@Base+0x212>
  41d642:	mov    edx,0x714
  41d647:	lea    rcx,[rip+0xb697]        # 428ce5 <flatcc_builder_padding_base@@Base+0x1135>
  41d64e:	call   404090 <__assert_fail@plt>
  41d653:	mov    rax,QWORD PTR [rbp-0x8]
  41d657:	mov    rax,QWORD PTR [rax+0x8]
  41d65b:	movsxd rcx,DWORD PTR [rbp-0xc]
  41d65f:	movzx  edx,WORD PTR [rax+rcx*2]
  41d663:	cmp    edx,0x0
  41d666:	je     41d68b <flatcc_builder_table_add_offset@@Base+0xbb>
  41d66c:	lea    rdi,[rip+0xb90f]        # 428f82 <flatcc_builder_padding_base@@Base+0x13d2>
  41d673:	lea    rsi,[rip+0xa748]        # 427dc2 <flatcc_builder_padding_base@@Base+0x212>
  41d67a:	mov    edx,0x71b
  41d67f:	lea    rcx,[rip+0xb65f]        # 428ce5 <flatcc_builder_padding_base@@Base+0x1135>
  41d686:	call   404090 <__assert_fail@plt>
  41d68b:	mov    eax,DWORD PTR [rbp-0xc]
  41d68e:	mov    rcx,QWORD PTR [rbp-0x8]
  41d692:	xor    eax,DWORD PTR [rcx+0x14]
  41d695:	imul   eax,eax,0x9e3779b1
  41d69b:	xor    eax,0x4
  41d69e:	imul   eax,eax,0x9e3779b1
  41d6a4:	mov    rcx,QWORD PTR [rbp-0x8]
  41d6a8:	mov    DWORD PTR [rcx+0x14],eax
  41d6ab:	mov    rdi,QWORD PTR [rbp-0x8]
  41d6af:	mov    eax,DWORD PTR [rbp-0xc]
  41d6b2:	mov    dx,ax
  41d6b5:	movzx  esi,dx
  41d6b8:	call   41e5f0 <flatcc_builder_table_add_copy@@Base+0x60>
  41d6bd:	add    rsp,0x10
  41d6c1:	pop    rbp
  41d6c2:	ret    
  41d6c3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d6cd:	nop    DWORD PTR [rax]

000000000041d6d0 <flatcc_builder_table_add@@Base>:
  41d6d0:	push   rbp
  41d6d1:	mov    rbp,rsp
  41d6d4:	sub    rsp,0x20
  41d6d8:	mov    ax,cx
  41d6db:	mov    QWORD PTR [rbp-0x8],rdi
  41d6df:	mov    DWORD PTR [rbp-0xc],esi
  41d6e2:	mov    QWORD PTR [rbp-0x18],rdx
  41d6e6:	mov    WORD PTR [rbp-0x1a],ax
  41d6ea:	mov    rdx,QWORD PTR [rbp-0x8]
  41d6ee:	mov    rdx,QWORD PTR [rdx+0x30]
  41d6f2:	movzx  ecx,WORD PTR [rdx+0xe]
  41d6f6:	cmp    ecx,0x3
  41d6f9:	jne    41d704 <flatcc_builder_table_add@@Base+0x34>
  41d6ff:	jmp    41d723 <flatcc_builder_table_add@@Base+0x53>
  41d704:	lea    rdi,[rip+0xaee6]        # 4285f1 <flatcc_builder_padding_base@@Base+0xa41>
  41d70b:	lea    rsi,[rip+0xa6b0]        # 427dc2 <flatcc_builder_padding_base@@Base+0x212>
  41d712:	mov    edx,0x6ed
  41d717:	lea    rcx,[rip+0xb4fd]        # 428c1b <flatcc_builder_padding_base@@Base+0x106b>
  41d71e:	call   404090 <__assert_fail@plt>
  41d723:	cmp    DWORD PTR [rbp-0xc],0x0
  41d727:	jl     41d73f <flatcc_builder_table_add@@Base+0x6f>
  41d72d:	cmp    DWORD PTR [rbp-0xc],0x7ffc
  41d734:	jg     41d73f <flatcc_builder_table_add@@Base+0x6f>
  41d73a:	jmp    41d75e <flatcc_builder_table_add@@Base+0x8e>
  41d73f:	lea    rdi,[rip+0xb51f]        # 428c65 <flatcc_builder_padding_base@@Base+0x10b5>
  41d746:	lea    rsi,[rip+0xa675]        # 427dc2 <flatcc_builder_padding_base@@Base+0x212>
  41d74d:	mov    edx,0x6ee
  41d752:	lea    rcx,[rip+0xb4c2]        # 428c1b <flatcc_builder_padding_base@@Base+0x106b>
  41d759:	call   404090 <__assert_fail@plt>
  41d75e:	movzx  eax,WORD PTR [rbp-0x1a]
  41d762:	mov    rcx,QWORD PTR [rbp-0x8]
  41d766:	movzx  edx,WORD PTR [rcx+0xea]
  41d76d:	cmp    eax,edx
  41d76f:	jle    41d784 <flatcc_builder_table_add@@Base+0xb4>
  41d775:	mov    ax,WORD PTR [rbp-0x1a]
  41d779:	mov    rcx,QWORD PTR [rbp-0x8]
  41d77d:	mov    WORD PTR [rcx+0xea],ax
  41d784:	mov    rax,QWORD PTR [rbp-0x8]
  41d788:	mov    rax,QWORD PTR [rax+0x8]
  41d78c:	movsxd rcx,DWORD PTR [rbp-0xc]
  41d790:	movzx  edx,WORD PTR [rax+rcx*2]
  41d794:	cmp    edx,0x0
  41d797:	je     41d7bc <flatcc_builder_table_add@@Base+0xec>
  41d79d:	lea    rdi,[rip+0xb7de]        # 428f82 <flatcc_builder_padding_base@@Base+0x13d2>
  41d7a4:	lea    rsi,[rip+0xa617]        # 427dc2 <flatcc_builder_padding_base@@Base+0x212>
  41d7ab:	mov    edx,0x6f8
  41d7b0:	lea    rcx,[rip+0xb464]        # 428c1b <flatcc_builder_padding_base@@Base+0x106b>
  41d7b7:	call   404090 <__assert_fail@plt>
  41d7bc:	mov    eax,DWORD PTR [rbp-0xc]
  41d7bf:	mov    rcx,QWORD PTR [rbp-0x8]
  41d7c3:	xor    eax,DWORD PTR [rcx+0x14]
  41d7c6:	imul   eax,eax,0x9e3779b1
  41d7cc:	mov    rcx,QWORD PTR [rbp-0x18]
  41d7d0:	mov    edx,ecx
  41d7d2:	xor    eax,edx
  41d7d4:	imul   eax,eax,0x9e3779b1
  41d7da:	mov    rcx,QWORD PTR [rbp-0x8]
  41d7de:	mov    DWORD PTR [rcx+0x14],eax
  41d7e1:	mov    rdi,QWORD PTR [rbp-0x8]
  41d7e5:	mov    rcx,QWORD PTR [rbp-0x18]
  41d7e9:	mov    eax,ecx
  41d7eb:	mov    si,WORD PTR [rbp-0x1a]
  41d7ef:	mov    edx,DWORD PTR [rbp-0xc]
  41d7f2:	mov    r8w,dx
  41d7f6:	mov    WORD PTR [rbp-0x1c],si
  41d7fa:	mov    esi,eax
  41d7fc:	mov    r9w,WORD PTR [rbp-0x1c]
  41d801:	movzx  edx,r9w
  41d805:	movzx  ecx,r8w
  41d809:	call   41e410 <flatcc_builder_string_len@@Base+0x20>
  41d80e:	add    rsp,0x20
  41d812:	pop    rbp
  41d813:	ret    
  41d814:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d81e:	xchg   ax,ax
  41d820:	push   rbp
  41d821:	mov    rbp,rsp
  41d824:	mov    al,dil
  41d827:	mov    BYTE PTR [rbp-0x1],al
  41d82a:	movzx  eax,BYTE PTR [rbp-0x1]
  41d82e:	pop    rbp
  41d82f:	ret    

000000000041d830 <flatcc_builder_table_add_union_vector@@Base>:
  41d830:	push   rbp
  41d831:	mov    rbp,rsp
  41d834:	sub    rsp,0x30
  41d838:	mov    QWORD PTR [rbp-0x10],rdx
  41d83c:	mov    QWORD PTR [rbp-0x18],rdi
  41d840:	mov    DWORD PTR [rbp-0x1c],esi
  41d843:	mov    rdx,QWORD PTR [rbp-0x18]
  41d847:	mov    rdx,QWORD PTR [rdx+0x30]
  41d84b:	movzx  esi,WORD PTR [rdx+0xe]
  41d84f:	cmp    esi,0x3
  41d852:	jne    41d85d <flatcc_builder_table_add_union_vector@@Base+0x2d>
  41d858:	jmp    41d87c <flatcc_builder_table_add_union_vector@@Base+0x4c>
  41d85d:	lea    rdi,[rip+0xad8d]        # 4285f1 <flatcc_builder_padding_base@@Base+0xa41>
  41d864:	lea    rsi,[rip+0xa557]        # 427dc2 <flatcc_builder_padding_base@@Base+0x212>
  41d86b:	mov    edx,0x600
  41d870:	lea    rcx,[rip+0xb0fc]        # 428973 <flatcc_builder_padding_base@@Base+0xdc3>
  41d877:	call   404090 <__assert_fail@plt>
  41d87c:	cmp    DWORD PTR [rbp-0x10],0x0
  41d880:	sete   al
  41d883:	and    al,0x1
  41d885:	movzx  ecx,al
  41d888:	cmp    DWORD PTR [rbp-0xc],0x0
  41d88c:	sete   al
  41d88f:	and    al,0x1
  41d891:	movzx  edx,al
  41d894:	cmp    ecx,edx
  41d896:	je     41d8ec <flatcc_builder_table_add_union_vector@@Base+0xbc>
  41d89c:	cmp    DWORD PTR [rbp-0x10],0x0
  41d8a0:	sete   al
  41d8a3:	and    al,0x1
  41d8a5:	movzx  ecx,al
  41d8a8:	cmp    DWORD PTR [rbp-0xc],0x0
  41d8ac:	sete   al
  41d8af:	and    al,0x1
  41d8b1:	movzx  edx,al
  41d8b4:	cmp    ecx,edx
  41d8b6:	jne    41d8c1 <flatcc_builder_table_add_union_vector@@Base+0x91>
  41d8bc:	jmp    41d8e0 <flatcc_builder_table_add_union_vector@@Base+0xb0>
  41d8c1:	lea    rdi,[rip+0xb10e]        # 4289d6 <flatcc_builder_padding_base@@Base+0xe26>
  41d8c8:	lea    rsi,[rip+0xa4f3]        # 427dc2 <flatcc_builder_padding_base@@Base+0x212>
  41d8cf:	mov    edx,0x601
  41d8d4:	lea    rcx,[rip+0xb098]        # 428973 <flatcc_builder_padding_base@@Base+0xdc3>
  41d8db:	call   404090 <__assert_fail@plt>
  41d8e0:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41d8e7:	jmp    41d9c0 <flatcc_builder_table_add_union_vector@@Base+0x190>
  41d8ec:	cmp    DWORD PTR [rbp-0x10],0x0
  41d8f0:	je     41d9b9 <flatcc_builder_table_add_union_vector@@Base+0x189>
  41d8f6:	mov    rdi,QWORD PTR [rbp-0x18]
  41d8fa:	mov    eax,DWORD PTR [rbp-0x1c]
  41d8fd:	sub    eax,0x1
  41d900:	mov    esi,eax
  41d902:	call   41d5d0 <flatcc_builder_table_add_offset@@Base>
  41d907:	mov    QWORD PTR [rbp-0x28],rax
  41d90b:	cmp    QWORD PTR [rbp-0x28],0x0
  41d910:	jne    41d951 <flatcc_builder_table_add_union_vector@@Base+0x121>
  41d916:	cmp    QWORD PTR [rbp-0x28],0x0
  41d91b:	je     41d926 <flatcc_builder_table_add_union_vector@@Base+0xf6>
  41d921:	jmp    41d945 <flatcc_builder_table_add_union_vector@@Base+0x115>
  41d926:	lea    rdi,[rip+0xb030]        # 42895d <flatcc_builder_padding_base@@Base+0xdad>
  41d92d:	lea    rsi,[rip+0xa48e]        # 427dc2 <flatcc_builder_padding_base@@Base+0x212>
  41d934:	mov    edx,0x604
  41d939:	lea    rcx,[rip+0xb033]        # 428973 <flatcc_builder_padding_base@@Base+0xdc3>
  41d940:	call   404090 <__assert_fail@plt>
  41d945:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41d94c:	jmp    41d9c0 <flatcc_builder_table_add_union_vector@@Base+0x190>
  41d951:	mov    eax,DWORD PTR [rbp-0x10]
  41d954:	mov    rcx,QWORD PTR [rbp-0x28]
  41d958:	mov    DWORD PTR [rcx],eax
  41d95a:	mov    rdi,QWORD PTR [rbp-0x18]
  41d95e:	mov    esi,DWORD PTR [rbp-0x1c]
  41d961:	call   41d5d0 <flatcc_builder_table_add_offset@@Base>
  41d966:	mov    QWORD PTR [rbp-0x28],rax
  41d96a:	cmp    QWORD PTR [rbp-0x28],0x0
  41d96f:	jne    41d9b0 <flatcc_builder_table_add_union_vector@@Base+0x180>
  41d975:	cmp    QWORD PTR [rbp-0x28],0x0
  41d97a:	je     41d985 <flatcc_builder_table_add_union_vector@@Base+0x155>
  41d980:	jmp    41d9a4 <flatcc_builder_table_add_union_vector@@Base+0x174>
  41d985:	lea    rdi,[rip+0xafd1]        # 42895d <flatcc_builder_padding_base@@Base+0xdad>
  41d98c:	lea    rsi,[rip+0xa42f]        # 427dc2 <flatcc_builder_padding_base@@Base+0x212>
  41d993:	mov    edx,0x608
  41d998:	lea    rcx,[rip+0xafd4]        # 428973 <flatcc_builder_padding_base@@Base+0xdc3>
  41d99f:	call   404090 <__assert_fail@plt>
  41d9a4:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41d9ab:	jmp    41d9c0 <flatcc_builder_table_add_union_vector@@Base+0x190>
  41d9b0:	mov    eax,DWORD PTR [rbp-0xc]
  41d9b3:	mov    rcx,QWORD PTR [rbp-0x28]
  41d9b7:	mov    DWORD PTR [rcx],eax
  41d9b9:	mov    DWORD PTR [rbp-0x4],0x0
  41d9c0:	mov    eax,DWORD PTR [rbp-0x4]
  41d9c3:	add    rsp,0x30
  41d9c7:	pop    rbp
  41d9c8:	ret    
  41d9c9:	nop    DWORD PTR [rax+0x0]

000000000041d9d0 <flatcc_builder_create_union_vector@@Base>:
  41d9d0:	push   rbp
  41d9d1:	mov    rbp,rsp
  41d9d4:	sub    rsp,0x40
  41d9d8:	xor    eax,eax
  41d9da:	mov    ecx,0x8
  41d9df:	mov    r8d,ecx
  41d9e2:	mov    QWORD PTR [rbp-0x10],rdi
  41d9e6:	mov    QWORD PTR [rbp-0x18],rsi
  41d9ea:	mov    QWORD PTR [rbp-0x20],rdx
  41d9ee:	lea    rdx,[rbp-0x8]
  41d9f2:	mov    rdi,rdx
  41d9f5:	mov    esi,eax
  41d9f7:	mov    rdx,r8
  41d9fa:	call   4040a0 <memset@plt>
  41d9ff:	mov    rdi,QWORD PTR [rbp-0x10]
  41da03:	call   41ba80 <flatcc_builder_start_offset_vector@@Base>
  41da08:	cmp    eax,0x0
  41da0b:	je     41da16 <flatcc_builder_create_union_vector@@Base+0x46>
  41da11:	jmp    41daeb <flatcc_builder_create_union_vector@@Base+0x11b>
  41da16:	mov    rdi,QWORD PTR [rbp-0x10]
  41da1a:	mov    rsi,QWORD PTR [rbp-0x20]
  41da1e:	call   41b260 <flatcc_builder_extend_offset_vector@@Base>
  41da23:	xor    ecx,ecx
  41da25:	mov    esi,ecx
  41da27:	cmp    rsi,rax
  41da2a:	jne    41da35 <flatcc_builder_create_union_vector@@Base+0x65>
  41da30:	jmp    41daeb <flatcc_builder_create_union_vector@@Base+0x11b>
  41da35:	mov    rdi,QWORD PTR [rbp-0x10]
  41da39:	mov    rax,QWORD PTR [rbp-0x20]
  41da3d:	shl    rax,0x0
  41da41:	mov    ecx,eax
  41da43:	mov    esi,ecx
  41da45:	call   41adf0 <flatcc_builder_start_struct@@Base+0x100>
  41da4a:	xor    ecx,ecx
  41da4c:	mov    edi,ecx
  41da4e:	mov    QWORD PTR [rbp-0x28],rax
  41da52:	cmp    rdi,rax
  41da55:	jne    41da60 <flatcc_builder_create_union_vector@@Base+0x90>
  41da5b:	jmp    41daeb <flatcc_builder_create_union_vector@@Base+0x11b>
  41da60:	mov    rdi,QWORD PTR [rbp-0x10]
  41da64:	call   41d3f0 <flatcc_builder_offset_vector_edit@@Base>
  41da69:	mov    QWORD PTR [rbp-0x30],rax
  41da6d:	mov    QWORD PTR [rbp-0x38],0x0
  41da75:	mov    rax,QWORD PTR [rbp-0x38]
  41da79:	cmp    rax,QWORD PTR [rbp-0x20]
  41da7d:	jae    41dac1 <flatcc_builder_create_union_vector@@Base+0xf1>
  41da83:	mov    rax,QWORD PTR [rbp-0x18]
  41da87:	mov    rcx,QWORD PTR [rbp-0x38]
  41da8b:	mov    dl,BYTE PTR [rax+rcx*8]
  41da8e:	mov    rax,QWORD PTR [rbp-0x28]
  41da92:	mov    rcx,QWORD PTR [rbp-0x38]
  41da96:	mov    BYTE PTR [rax+rcx*1],dl
  41da99:	mov    rax,QWORD PTR [rbp-0x18]
  41da9d:	mov    rcx,QWORD PTR [rbp-0x38]
  41daa1:	mov    esi,DWORD PTR [rax+rcx*8+0x4]
  41daa5:	mov    rax,QWORD PTR [rbp-0x30]
  41daa9:	mov    rcx,QWORD PTR [rbp-0x38]
  41daad:	mov    DWORD PTR [rax+rcx*4],esi
  41dab0:	mov    rax,QWORD PTR [rbp-0x38]
  41dab4:	add    rax,0x1
  41dab8:	mov    QWORD PTR [rbp-0x38],rax
  41dabc:	jmp    41da75 <flatcc_builder_create_union_vector@@Base+0xa5>
  41dac1:	mov    rdi,QWORD PTR [rbp-0x10]
  41dac5:	mov    rsi,QWORD PTR [rbp-0x28]
  41dac9:	mov    rdx,QWORD PTR [rbp-0x30]
  41dacd:	mov    rcx,QWORD PTR [rbp-0x20]
  41dad1:	call   41db00 <flatcc_builder_create_union_vector_direct@@Base>
  41dad6:	mov    QWORD PTR [rbp-0x40],rax
  41dada:	mov    rax,QWORD PTR [rbp-0x40]
  41dade:	mov    QWORD PTR [rbp-0x8],rax
  41dae2:	mov    rdi,QWORD PTR [rbp-0x10]
  41dae6:	call   41ac30 <flatcc_builder_end_buffer@@Base+0x160>
  41daeb:	mov    rax,QWORD PTR [rbp-0x8]
  41daef:	add    rsp,0x40
  41daf3:	pop    rbp
  41daf4:	ret    
  41daf5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41daff:	nop

000000000041db00 <flatcc_builder_create_union_vector_direct@@Base>:
  41db00:	push   rbp
  41db01:	mov    rbp,rsp
  41db04:	sub    rsp,0x30
  41db08:	xor    eax,eax
  41db0a:	mov    r8d,0x8
  41db10:	mov    r9d,r8d
  41db13:	mov    QWORD PTR [rbp-0x10],rdi
  41db17:	mov    QWORD PTR [rbp-0x18],rsi
  41db1b:	mov    QWORD PTR [rbp-0x20],rdx
  41db1f:	mov    QWORD PTR [rbp-0x28],rcx
  41db23:	lea    rcx,[rbp-0x8]
  41db27:	mov    rdi,rcx
  41db2a:	mov    esi,eax
  41db2c:	mov    rdx,r9
  41db2f:	call   4040a0 <memset@plt>
  41db34:	mov    rdi,QWORD PTR [rbp-0x10]
  41db38:	mov    rsi,QWORD PTR [rbp-0x20]
  41db3c:	mov    rdx,QWORD PTR [rbp-0x28]
  41db40:	mov    rcx,QWORD PTR [rbp-0x18]
  41db44:	call   41d010 <flatcc_builder_create_offset_vector_direct@@Base+0x30>
  41db49:	xor    r8d,r8d
  41db4c:	mov    DWORD PTR [rbp-0x4],eax
  41db4f:	cmp    r8d,eax
  41db52:	jne    41db5d <flatcc_builder_create_union_vector_direct@@Base+0x5d>
  41db58:	jmp    41db9c <flatcc_builder_create_union_vector_direct@@Base+0x9c>
  41db5d:	mov    eax,0x1
  41db62:	mov    ecx,eax
  41db64:	mov    eax,0xffffffff
  41db69:	mov    r9d,eax
  41db6c:	mov    rdi,QWORD PTR [rbp-0x10]
  41db70:	mov    rsi,QWORD PTR [rbp-0x18]
  41db74:	mov    rdx,QWORD PTR [rbp-0x28]
  41db78:	mov    r8d,0x1
  41db7e:	call   41ccb0 <flatcc_builder_create_vector@@Base>
  41db83:	xor    r8d,r8d
  41db86:	mov    DWORD PTR [rbp-0x8],eax
  41db89:	cmp    r8d,eax
  41db8c:	jne    41db97 <flatcc_builder_create_union_vector_direct@@Base+0x97>
  41db92:	jmp    41db9c <flatcc_builder_create_union_vector_direct@@Base+0x9c>
  41db97:	jmp    41db9c <flatcc_builder_create_union_vector_direct@@Base+0x9c>
  41db9c:	mov    rax,QWORD PTR [rbp-0x8]
  41dba0:	add    rsp,0x30
  41dba4:	pop    rbp
  41dba5:	ret    
  41dba6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000041dbb0 <flatcc_builder_start_union_vector@@Base>:
  41dbb0:	push   rbp
  41dbb1:	mov    rbp,rsp
  41dbb4:	sub    rsp,0x10
  41dbb8:	mov    QWORD PTR [rbp-0x10],rdi
  41dbbc:	mov    rdi,QWORD PTR [rbp-0x10]
  41dbc0:	mov    esi,0x4
  41dbc5:	call   41a900 <flatcc_builder_start_buffer@@Base+0x170>
  41dbca:	cmp    eax,0x0
  41dbcd:	je     41dbdf <flatcc_builder_start_union_vector@@Base+0x2f>
  41dbd3:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41dbda:	jmp    41dc20 <flatcc_builder_start_union_vector@@Base+0x70>
  41dbdf:	mov    rax,QWORD PTR [rbp-0x10]
  41dbe3:	mov    rax,QWORD PTR [rax+0x30]
  41dbe7:	mov    DWORD PTR [rax+0x10],0x8
  41dbee:	mov    rax,QWORD PTR [rbp-0x10]
  41dbf2:	mov    rax,QWORD PTR [rax+0x30]
  41dbf6:	mov    DWORD PTR [rax+0x14],0x0
  41dbfd:	mov    rax,QWORD PTR [rbp-0x10]
  41dc01:	mov    rax,QWORD PTR [rax+0x30]
  41dc05:	mov    WORD PTR [rax+0xe],0x7
  41dc0b:	mov    rdi,QWORD PTR [rbp-0x10]
  41dc0f:	mov    esi,0xfffffffc
  41dc14:	call   41ad70 <flatcc_builder_start_struct@@Base+0x80>
  41dc19:	mov    DWORD PTR [rbp-0x4],0x0
  41dc20:	mov    eax,DWORD PTR [rbp-0x4]
  41dc23:	add    rsp,0x10
  41dc27:	pop    rbp
  41dc28:	ret    
  41dc29:	nop    DWORD PTR [rax+0x0]

000000000041dc30 <flatcc_builder_end_union_vector@@Base>:
  41dc30:	push   rbp
  41dc31:	mov    rbp,rsp
  41dc34:	sub    rsp,0x40
  41dc38:	xor    esi,esi
  41dc3a:	mov    eax,0x8
  41dc3f:	mov    edx,eax
  41dc41:	mov    QWORD PTR [rbp-0x10],rdi
  41dc45:	lea    rdi,[rbp-0x8]
  41dc49:	call   4040a0 <memset@plt>
  41dc4e:	mov    rdx,QWORD PTR [rbp-0x10]
  41dc52:	mov    rdx,QWORD PTR [rdx+0x30]
  41dc56:	movzx  eax,WORD PTR [rdx+0xe]
  41dc5a:	cmp    eax,0x7
  41dc5d:	jne    41dc68 <flatcc_builder_end_union_vector@@Base+0x38>
  41dc63:	jmp    41dc87 <flatcc_builder_end_union_vector@@Base+0x57>
  41dc68:	lea    rdi,[rip+0xad8f]        # 4289fe <flatcc_builder_padding_base@@Base+0xe4e>
  41dc6f:	lea    rsi,[rip+0xa14c]        # 427dc2 <flatcc_builder_padding_base@@Base+0x212>
  41dc76:	mov    edx,0x651
  41dc7b:	lea    rcx,[rip+0xadae]        # 428a30 <flatcc_builder_padding_base@@Base+0xe80>
  41dc82:	call   404090 <__assert_fail@plt>
  41dc87:	mov    rdi,QWORD PTR [rbp-0x10]
  41dc8b:	call   41dd70 <flatcc_builder_union_vector_count@@Base>
  41dc90:	mov    QWORD PTR [rbp-0x38],rax
  41dc94:	mov    rdi,QWORD PTR [rbp-0x10]
  41dc98:	imul   rax,QWORD PTR [rbp-0x38],0x5
  41dc9d:	mov    ecx,eax
  41dc9f:	mov    esi,ecx
  41dca1:	call   41adf0 <flatcc_builder_start_struct@@Base+0x100>
  41dca6:	xor    ecx,ecx
  41dca8:	mov    edi,ecx
  41dcaa:	mov    QWORD PTR [rbp-0x28],rax
  41dcae:	cmp    rdi,rax
  41dcb1:	jne    41dcbc <flatcc_builder_end_union_vector@@Base+0x8c>
  41dcb7:	jmp    41dd5a <flatcc_builder_end_union_vector@@Base+0x12a>
  41dcbc:	mov    rax,QWORD PTR [rbp-0x28]
  41dcc0:	mov    rcx,QWORD PTR [rbp-0x38]
  41dcc4:	shl    rcx,0x2
  41dcc8:	add    rax,rcx
  41dccb:	mov    QWORD PTR [rbp-0x18],rax
  41dccf:	mov    rdi,QWORD PTR [rbp-0x10]
  41dcd3:	call   41dd90 <flatcc_builder_union_vector_edit@@Base>
  41dcd8:	mov    QWORD PTR [rbp-0x20],rax
  41dcdc:	mov    QWORD PTR [rbp-0x30],0x0
  41dce4:	mov    rax,QWORD PTR [rbp-0x30]
  41dce8:	cmp    rax,QWORD PTR [rbp-0x38]
  41dcec:	jae    41dd30 <flatcc_builder_end_union_vector@@Base+0x100>
  41dcf2:	mov    rax,QWORD PTR [rbp-0x20]
  41dcf6:	mov    rcx,QWORD PTR [rbp-0x30]
  41dcfa:	mov    dl,BYTE PTR [rax+rcx*8]
  41dcfd:	mov    rax,QWORD PTR [rbp-0x18]
  41dd01:	mov    rcx,QWORD PTR [rbp-0x30]
  41dd05:	mov    BYTE PTR [rax+rcx*1],dl
  41dd08:	mov    rax,QWORD PTR [rbp-0x20]
  41dd0c:	mov    rcx,QWORD PTR [rbp-0x30]
  41dd10:	mov    esi,DWORD PTR [rax+rcx*8+0x4]
  41dd14:	mov    rax,QWORD PTR [rbp-0x28]
  41dd18:	mov    rcx,QWORD PTR [rbp-0x30]
  41dd1c:	mov    DWORD PTR [rax+rcx*4],esi
  41dd1f:	mov    rax,QWORD PTR [rbp-0x30]
  41dd23:	add    rax,0x1
  41dd27:	mov    QWORD PTR [rbp-0x30],rax
  41dd2b:	jmp    41dce4 <flatcc_builder_end_union_vector@@Base+0xb4>
  41dd30:	mov    rdi,QWORD PTR [rbp-0x10]
  41dd34:	mov    rsi,QWORD PTR [rbp-0x18]
  41dd38:	mov    rdx,QWORD PTR [rbp-0x28]
  41dd3c:	mov    rcx,QWORD PTR [rbp-0x38]
  41dd40:	call   41db00 <flatcc_builder_create_union_vector_direct@@Base>
  41dd45:	mov    QWORD PTR [rbp-0x40],rax
  41dd49:	mov    rax,QWORD PTR [rbp-0x40]
  41dd4d:	mov    QWORD PTR [rbp-0x8],rax
  41dd51:	mov    rdi,QWORD PTR [rbp-0x10]
  41dd55:	call   41ac30 <flatcc_builder_end_buffer@@Base+0x160>
  41dd5a:	mov    rax,QWORD PTR [rbp-0x8]
  41dd5e:	add    rsp,0x40
  41dd62:	pop    rbp
  41dd63:	ret    
  41dd64:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41dd6e:	xchg   ax,ax

000000000041dd70 <flatcc_builder_union_vector_count@@Base>:
  41dd70:	push   rbp
  41dd71:	mov    rbp,rsp
  41dd74:	mov    QWORD PTR [rbp-0x8],rdi
  41dd78:	mov    rdi,QWORD PTR [rbp-0x8]
  41dd7c:	mov    rdi,QWORD PTR [rdi+0x30]
  41dd80:	mov    eax,DWORD PTR [rdi+0x14]
  41dd83:	pop    rbp
  41dd84:	ret    
  41dd85:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41dd8f:	nop

000000000041dd90 <flatcc_builder_union_vector_edit@@Base>:
  41dd90:	push   rbp
  41dd91:	mov    rbp,rsp
  41dd94:	mov    QWORD PTR [rbp-0x8],rdi
  41dd98:	mov    rdi,QWORD PTR [rbp-0x8]
  41dd9c:	mov    rax,QWORD PTR [rdi+0x18]
  41dda0:	pop    rbp
  41dda1:	ret    
  41dda2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ddac:	nop    DWORD PTR [rax+0x0]

000000000041ddb0 <flatcc_builder_extend_union_vector@@Base>:
  41ddb0:	push   rbp
  41ddb1:	mov    rbp,rsp
  41ddb4:	sub    rsp,0x20
  41ddb8:	mov    QWORD PTR [rbp-0x10],rdi
  41ddbc:	mov    QWORD PTR [rbp-0x18],rsi
  41ddc0:	mov    rdi,QWORD PTR [rbp-0x10]
  41ddc4:	mov    rsi,QWORD PTR [rbp-0x18]
  41ddc8:	mov    eax,esi
  41ddca:	mov    esi,eax
  41ddcc:	mov    edx,0x1fffffff
  41ddd1:	call   41afb0 <flatcc_builder_extend_vector@@Base+0x70>
  41ddd6:	cmp    eax,0x0
  41ddd9:	je     41ddec <flatcc_builder_extend_union_vector@@Base+0x3c>
  41dddf:	mov    QWORD PTR [rbp-0x8],0x0
  41dde7:	jmp    41de0b <flatcc_builder_extend_union_vector@@Base+0x5b>
  41ddec:	mov    rdi,QWORD PTR [rbp-0x10]
  41ddf0:	mov    rax,QWORD PTR [rbp-0x18]
  41ddf4:	mov    ecx,eax
  41ddf6:	mov    ecx,ecx
  41ddf8:	mov    eax,ecx
  41ddfa:	shl    rax,0x3
  41ddfe:	mov    ecx,eax
  41de00:	mov    esi,ecx
  41de02:	call   41adf0 <flatcc_builder_start_struct@@Base+0x100>
  41de07:	mov    QWORD PTR [rbp-0x8],rax
  41de0b:	mov    rax,QWORD PTR [rbp-0x8]
  41de0f:	add    rsp,0x20
  41de13:	pop    rbp
  41de14:	ret    
  41de15:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41de1f:	nop

000000000041de20 <flatcc_builder_truncate_union_vector@@Base>:
  41de20:	push   rbp
  41de21:	mov    rbp,rsp
  41de24:	sub    rsp,0x20
  41de28:	mov    QWORD PTR [rbp-0x10],rdi
  41de2c:	mov    QWORD PTR [rbp-0x18],rsi
  41de30:	mov    rsi,QWORD PTR [rbp-0x10]
  41de34:	mov    rsi,QWORD PTR [rsi+0x30]
  41de38:	movzx  eax,WORD PTR [rsi+0xe]
  41de3c:	cmp    eax,0x7
  41de3f:	jne    41de4a <flatcc_builder_truncate_union_vector@@Base+0x2a>
  41de45:	jmp    41de69 <flatcc_builder_truncate_union_vector@@Base+0x49>
  41de4a:	lea    rdi,[rip+0xabad]        # 4289fe <flatcc_builder_padding_base@@Base+0xe4e>
  41de51:	lea    rsi,[rip+0x9f6a]        # 427dc2 <flatcc_builder_padding_base@@Base+0x212>
  41de58:	mov    edx,0x681
  41de5d:	lea    rcx,[rip+0xac1f]        # 428a83 <flatcc_builder_padding_base@@Base+0xed3>
  41de64:	call   404090 <__assert_fail@plt>
  41de69:	mov    rax,QWORD PTR [rbp-0x10]
  41de6d:	mov    rax,QWORD PTR [rax+0x30]
  41de71:	mov    ecx,DWORD PTR [rax+0x14]
  41de74:	mov    rax,QWORD PTR [rbp-0x18]
  41de78:	mov    edx,eax
  41de7a:	cmp    ecx,edx
  41de7c:	jae    41decb <flatcc_builder_truncate_union_vector@@Base+0xab>
  41de82:	mov    rax,QWORD PTR [rbp-0x10]
  41de86:	mov    rax,QWORD PTR [rax+0x30]
  41de8a:	mov    ecx,DWORD PTR [rax+0x14]
  41de8d:	mov    rax,QWORD PTR [rbp-0x18]
  41de91:	mov    edx,eax
  41de93:	cmp    ecx,edx
  41de95:	jb     41dea0 <flatcc_builder_truncate_union_vector@@Base+0x80>
  41de9b:	jmp    41debf <flatcc_builder_truncate_union_vector@@Base+0x9f>
  41dea0:	lea    rdi,[rip+0xa5bb]        # 428462 <flatcc_builder_padding_base@@Base+0x8b2>
  41dea7:	lea    rsi,[rip+0x9f14]        # 427dc2 <flatcc_builder_padding_base@@Base+0x212>
  41deae:	mov    edx,0x682
  41deb3:	lea    rcx,[rip+0xabc9]        # 428a83 <flatcc_builder_padding_base@@Base+0xed3>
  41deba:	call   404090 <__assert_fail@plt>
  41debf:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41dec6:	jmp    41df07 <flatcc_builder_truncate_union_vector@@Base+0xe7>
  41decb:	mov    rax,QWORD PTR [rbp-0x18]
  41decf:	mov    ecx,eax
  41ded1:	mov    rax,QWORD PTR [rbp-0x10]
  41ded5:	mov    rax,QWORD PTR [rax+0x30]
  41ded9:	mov    edx,DWORD PTR [rax+0x14]
  41dedc:	sub    edx,ecx
  41dede:	mov    DWORD PTR [rax+0x14],edx
  41dee1:	mov    rdi,QWORD PTR [rbp-0x10]
  41dee5:	mov    rax,QWORD PTR [rbp-0x10]
  41dee9:	mov    rax,QWORD PTR [rax+0x30]
  41deed:	mov    ecx,DWORD PTR [rax+0x10]
  41def0:	mov    rax,QWORD PTR [rbp-0x18]
  41def4:	mov    edx,eax
  41def6:	imul   ecx,edx
  41def9:	mov    esi,ecx
  41defb:	call   41b780 <flatcc_builder_truncate_vector@@Base+0xf0>
  41df00:	mov    DWORD PTR [rbp-0x4],0x0
  41df07:	mov    eax,DWORD PTR [rbp-0x4]
  41df0a:	add    rsp,0x20
  41df0e:	pop    rbp
  41df0f:	ret    

000000000041df10 <flatcc_builder_union_vector_push@@Base>:
  41df10:	push   rbp
  41df11:	mov    rbp,rsp
  41df14:	sub    rsp,0x20
  41df18:	mov    QWORD PTR [rbp-0x10],rsi
  41df1c:	mov    QWORD PTR [rbp-0x18],rdi
  41df20:	mov    rsi,QWORD PTR [rbp-0x18]
  41df24:	mov    rsi,QWORD PTR [rsi+0x30]
  41df28:	movzx  eax,WORD PTR [rsi+0xe]
  41df2c:	cmp    eax,0x7
  41df2f:	jne    41df3a <flatcc_builder_union_vector_push@@Base+0x2a>
  41df35:	jmp    41df59 <flatcc_builder_union_vector_push@@Base+0x49>
  41df3a:	lea    rdi,[rip+0xaabd]        # 4289fe <flatcc_builder_padding_base@@Base+0xe4e>
  41df41:	lea    rsi,[rip+0x9e7a]        # 427dc2 <flatcc_builder_padding_base@@Base+0x212>
  41df48:	mov    edx,0x68d
  41df4d:	lea    rcx,[rip+0xab74]        # 428ac8 <flatcc_builder_padding_base@@Base+0xf18>
  41df54:	call   404090 <__assert_fail@plt>
  41df59:	mov    rax,QWORD PTR [rbp-0x18]
  41df5d:	mov    rax,QWORD PTR [rax+0x30]
  41df61:	mov    ecx,DWORD PTR [rax+0x14]
  41df64:	mov    eax,ecx
  41df66:	cmp    rax,0x1fffffff
  41df6c:	jne    41df7f <flatcc_builder_union_vector_push@@Base+0x6f>
  41df72:	mov    QWORD PTR [rbp-0x8],0x0
  41df7a:	jmp    41dfcf <flatcc_builder_union_vector_push@@Base+0xbf>
  41df7f:	mov    rax,QWORD PTR [rbp-0x18]
  41df83:	mov    rax,QWORD PTR [rax+0x30]
  41df87:	mov    ecx,DWORD PTR [rax+0x14]
  41df8a:	add    ecx,0x1
  41df8d:	mov    DWORD PTR [rax+0x14],ecx
  41df90:	mov    rdi,QWORD PTR [rbp-0x18]
  41df94:	mov    esi,0x8
  41df99:	call   41adf0 <flatcc_builder_start_struct@@Base+0x100>
  41df9e:	xor    ecx,ecx
  41dfa0:	mov    edi,ecx
  41dfa2:	mov    QWORD PTR [rbp-0x20],rax
  41dfa6:	cmp    rdi,rax
  41dfa9:	jne    41dfbc <flatcc_builder_union_vector_push@@Base+0xac>
  41dfaf:	mov    QWORD PTR [rbp-0x8],0x0
  41dfb7:	jmp    41dfcf <flatcc_builder_union_vector_push@@Base+0xbf>
  41dfbc:	mov    rax,QWORD PTR [rbp-0x20]
  41dfc0:	mov    rcx,QWORD PTR [rbp-0x10]
  41dfc4:	mov    QWORD PTR [rax],rcx
  41dfc7:	mov    rax,QWORD PTR [rbp-0x20]
  41dfcb:	mov    QWORD PTR [rbp-0x8],rax
  41dfcf:	mov    rax,QWORD PTR [rbp-0x8]
  41dfd3:	add    rsp,0x20
  41dfd7:	pop    rbp
  41dfd8:	ret    
  41dfd9:	nop    DWORD PTR [rax+0x0]

000000000041dfe0 <flatcc_builder_append_union_vector@@Base>:
  41dfe0:	push   rbp
  41dfe1:	mov    rbp,rsp
  41dfe4:	sub    rsp,0x20
  41dfe8:	mov    QWORD PTR [rbp-0x10],rdi
  41dfec:	mov    QWORD PTR [rbp-0x18],rsi
  41dff0:	mov    QWORD PTR [rbp-0x20],rdx
  41dff4:	mov    rdx,QWORD PTR [rbp-0x10]
  41dff8:	mov    rdx,QWORD PTR [rdx+0x30]
  41dffc:	movzx  eax,WORD PTR [rdx+0xe]
  41e000:	cmp    eax,0x7
  41e003:	jne    41e00e <flatcc_builder_append_union_vector@@Base+0x2e>
  41e009:	jmp    41e02d <flatcc_builder_append_union_vector@@Base+0x4d>
  41e00e:	lea    rdi,[rip+0xa9e9]        # 4289fe <flatcc_builder_padding_base@@Base+0xe4e>
  41e015:	lea    rsi,[rip+0x9da6]        # 427dc2 <flatcc_builder_padding_base@@Base+0x212>
  41e01c:	mov    edx,0x69c
  41e021:	lea    rcx,[rip+0xab0d]        # 428b35 <flatcc_builder_padding_base@@Base+0xf85>
  41e028:	call   404090 <__assert_fail@plt>
  41e02d:	mov    rdi,QWORD PTR [rbp-0x10]
  41e031:	mov    rax,QWORD PTR [rbp-0x20]
  41e035:	mov    ecx,eax
  41e037:	mov    esi,ecx
  41e039:	mov    edx,0x1fffffff
  41e03e:	call   41afb0 <flatcc_builder_extend_vector@@Base+0x70>
  41e043:	cmp    eax,0x0
  41e046:	je     41e059 <flatcc_builder_append_union_vector@@Base+0x79>
  41e04c:	mov    QWORD PTR [rbp-0x8],0x0
  41e054:	jmp    41e07d <flatcc_builder_append_union_vector@@Base+0x9d>
  41e059:	mov    rdi,QWORD PTR [rbp-0x10]
  41e05d:	mov    rax,QWORD PTR [rbp-0x18]
  41e061:	mov    rcx,QWORD PTR [rbp-0x20]
  41e065:	mov    edx,ecx
  41e067:	mov    edx,edx
  41e069:	mov    ecx,edx
  41e06b:	shl    rcx,0x3
  41e06f:	mov    edx,ecx
  41e071:	mov    rsi,rax
  41e074:	call   41b150 <flatcc_builder_vector_push@@Base+0xf0>
  41e079:	mov    QWORD PTR [rbp-0x8],rax
  41e07d:	mov    rax,QWORD PTR [rbp-0x8]
  41e081:	add    rsp,0x20
  41e085:	pop    rbp
  41e086:	ret    
  41e087:	nop    WORD PTR [rax+rax*1+0x0]

000000000041e090 <flatcc_builder_create_string@@Base>:
  41e090:	push   rbp
  41e091:	mov    rbp,rsp
  41e094:	sub    rsp,0xc0
  41e09b:	mov    eax,0xffffffff
  41e0a0:	mov    ecx,eax
  41e0a2:	mov    QWORD PTR [rbp-0x10],rdi
  41e0a6:	mov    QWORD PTR [rbp-0x18],rsi
  41e0aa:	mov    QWORD PTR [rbp-0x20],rdx
  41e0ae:	cmp    QWORD PTR [rbp-0x20],rcx
  41e0b2:	jbe    41e0c4 <flatcc_builder_create_string@@Base+0x34>
  41e0b8:	mov    DWORD PTR [rbp-0x4],0x0
  41e0bf:	jmp    41e24f <flatcc_builder_create_string@@Base+0x1bf>
  41e0c4:	mov    rax,QWORD PTR [rbp-0x20]
  41e0c8:	mov    ecx,eax
  41e0ca:	mov    edi,ecx
  41e0cc:	call   41a0a0 <flatcc_builder_embed_buffer@@Base+0x420>
  41e0d1:	mov    DWORD PTR [rbp-0x28],eax
  41e0d4:	mov    rdi,QWORD PTR [rbp-0x10]
  41e0d8:	mov    rdx,QWORD PTR [rbp-0x20]
  41e0dc:	mov    eax,edx
  41e0de:	add    eax,0x1
  41e0e1:	mov    esi,eax
  41e0e3:	mov    edx,0x4
  41e0e8:	call   41a070 <flatcc_builder_embed_buffer@@Base+0x3f0>
  41e0ed:	add    eax,0x1
  41e0f0:	mov    DWORD PTR [rbp-0x24],eax
  41e0f3:	mov    QWORD PTR [rbp-0xb8],0x0
  41e0fe:	mov    DWORD PTR [rbp-0xb0],0x0
  41e108:	mov    rdi,QWORD PTR [rbp-0xb8]
  41e10f:	add    rdi,0x4
  41e113:	mov    QWORD PTR [rbp-0xb8],rdi
  41e11a:	lea    rdi,[rbp-0x28]
  41e11e:	lea    r8,[rbp-0xb8]
  41e125:	mov    r9,r8
  41e128:	add    r9,0x10
  41e12c:	movsxd r10,DWORD PTR [rbp-0xb0]
  41e133:	shl    r10,0x4
  41e137:	add    r9,r10
  41e13a:	mov    QWORD PTR [r9],rdi
  41e13d:	add    r8,0x10
  41e141:	movsxd rdi,DWORD PTR [rbp-0xb0]
  41e148:	shl    rdi,0x4
  41e14c:	add    r8,rdi
  41e14f:	mov    QWORD PTR [r8+0x8],0x4
  41e157:	mov    eax,DWORD PTR [rbp-0xb0]
  41e15d:	add    eax,0x1
  41e160:	mov    DWORD PTR [rbp-0xb0],eax
  41e166:	cmp    QWORD PTR [rbp-0x20],0x0
  41e16b:	jbe    41e1cf <flatcc_builder_create_string@@Base+0x13f>
  41e171:	mov    rax,QWORD PTR [rbp-0x20]
  41e175:	add    rax,QWORD PTR [rbp-0xb8]
  41e17c:	mov    QWORD PTR [rbp-0xb8],rax
  41e183:	mov    rax,QWORD PTR [rbp-0x18]
  41e187:	lea    rcx,[rbp-0xb8]
  41e18e:	mov    rdx,rcx
  41e191:	add    rdx,0x10
  41e195:	movsxd rsi,DWORD PTR [rbp-0xb0]
  41e19c:	shl    rsi,0x4
  41e1a0:	add    rdx,rsi
  41e1a3:	mov    QWORD PTR [rdx],rax
  41e1a6:	mov    rax,QWORD PTR [rbp-0x20]
  41e1aa:	add    rcx,0x10
  41e1ae:	movsxd rdx,DWORD PTR [rbp-0xb0]
  41e1b5:	shl    rdx,0x4
  41e1b9:	add    rcx,rdx
  41e1bc:	mov    QWORD PTR [rcx+0x8],rax
  41e1c0:	mov    edi,DWORD PTR [rbp-0xb0]
  41e1c6:	add    edi,0x1
  41e1c9:	mov    DWORD PTR [rbp-0xb0],edi
  41e1cf:	cmp    DWORD PTR [rbp-0x24],0x0
  41e1d3:	jbe    41e23c <flatcc_builder_create_string@@Base+0x1ac>
  41e1d9:	lea    rax,[rip+0x99d0]        # 427bb0 <flatcc_builder_padding_base@@Base>
  41e1e0:	mov    ecx,DWORD PTR [rbp-0x24]
  41e1e3:	mov    edx,ecx
  41e1e5:	add    rdx,QWORD PTR [rbp-0xb8]
  41e1ec:	mov    QWORD PTR [rbp-0xb8],rdx
  41e1f3:	lea    rdx,[rbp-0xb8]
  41e1fa:	mov    rsi,rdx
  41e1fd:	add    rsi,0x10
  41e201:	movsxd rdi,DWORD PTR [rbp-0xb0]
  41e208:	shl    rdi,0x4
  41e20c:	add    rsi,rdi
  41e20f:	mov    QWORD PTR [rsi],rax
  41e212:	mov    ecx,DWORD PTR [rbp-0x24]
  41e215:	mov    eax,ecx
  41e217:	add    rdx,0x10
  41e21b:	movsxd rsi,DWORD PTR [rbp-0xb0]
  41e222:	shl    rsi,0x4
  41e226:	add    rdx,rsi
  41e229:	mov    QWORD PTR [rdx+0x8],rax
  41e22d:	mov    ecx,DWORD PTR [rbp-0xb0]
  41e233:	add    ecx,0x1
  41e236:	mov    DWORD PTR [rbp-0xb0],ecx
  41e23c:	mov    rdi,QWORD PTR [rbp-0x10]
  41e240:	lea    rsi,[rbp-0xb8]
  41e247:	call   41a0b0 <flatcc_builder_embed_buffer@@Base+0x430>
  41e24c:	mov    DWORD PTR [rbp-0x4],eax
  41e24f:	mov    eax,DWORD PTR [rbp-0x4]
  41e252:	add    rsp,0xc0
  41e259:	pop    rbp
  41e25a:	ret    
  41e25b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041e260 <flatcc_builder_create_string_str@@Base>:
  41e260:	push   rbp
  41e261:	mov    rbp,rsp
  41e264:	sub    rsp,0x20
  41e268:	mov    QWORD PTR [rbp-0x8],rdi
  41e26c:	mov    QWORD PTR [rbp-0x10],rsi
  41e270:	mov    rdi,QWORD PTR [rbp-0x8]
  41e274:	mov    rsi,QWORD PTR [rbp-0x10]
  41e278:	mov    rax,QWORD PTR [rbp-0x10]
  41e27c:	mov    QWORD PTR [rbp-0x18],rdi
  41e280:	mov    rdi,rax
  41e283:	mov    QWORD PTR [rbp-0x20],rsi
  41e287:	call   404060 <strlen@plt>
  41e28c:	mov    rdi,QWORD PTR [rbp-0x18]
  41e290:	mov    rsi,QWORD PTR [rbp-0x20]
  41e294:	mov    rdx,rax
  41e297:	call   41e090 <flatcc_builder_create_string@@Base>
  41e29c:	add    rsp,0x20
  41e2a0:	pop    rbp
  41e2a1:	ret    
  41e2a2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e2ac:	nop    DWORD PTR [rax+0x0]

000000000041e2b0 <flatcc_builder_create_string_strn@@Base>:
  41e2b0:	push   rbp
  41e2b1:	mov    rbp,rsp
  41e2b4:	sub    rsp,0x30
  41e2b8:	mov    QWORD PTR [rbp-0x8],rdi
  41e2bc:	mov    QWORD PTR [rbp-0x10],rsi
  41e2c0:	mov    QWORD PTR [rbp-0x18],rdx
  41e2c4:	mov    rdi,QWORD PTR [rbp-0x8]
  41e2c8:	mov    rsi,QWORD PTR [rbp-0x10]
  41e2cc:	mov    rdx,QWORD PTR [rbp-0x10]
  41e2d0:	mov    rax,QWORD PTR [rbp-0x18]
  41e2d4:	mov    QWORD PTR [rbp-0x20],rdi
  41e2d8:	mov    rdi,rdx
  41e2db:	mov    QWORD PTR [rbp-0x28],rsi
  41e2df:	mov    rsi,rax
  41e2e2:	call   41b630 <flatcc_builder_append_string_strn@@Base+0x50>
  41e2e7:	mov    rdi,QWORD PTR [rbp-0x20]
  41e2eb:	mov    rsi,QWORD PTR [rbp-0x28]
  41e2ef:	mov    rdx,rax
  41e2f2:	call   41e090 <flatcc_builder_create_string@@Base>
  41e2f7:	add    rsp,0x30
  41e2fb:	pop    rbp
  41e2fc:	ret    
  41e2fd:	nop    DWORD PTR [rax]

000000000041e300 <flatcc_builder_end_string@@Base>:
  41e300:	push   rbp
  41e301:	mov    rbp,rsp
  41e304:	sub    rsp,0x20
  41e308:	mov    QWORD PTR [rbp-0x10],rdi
  41e30c:	mov    rdi,QWORD PTR [rbp-0x10]
  41e310:	mov    rdi,QWORD PTR [rdi+0x30]
  41e314:	movzx  eax,WORD PTR [rdi+0xe]
  41e318:	cmp    eax,0x6
  41e31b:	jne    41e326 <flatcc_builder_end_string@@Base+0x26>
  41e321:	jmp    41e345 <flatcc_builder_end_string@@Base+0x45>
  41e326:	lea    rdi,[rip+0x9fd4]        # 428301 <flatcc_builder_padding_base@@Base+0x751>
  41e32d:	lea    rsi,[rip+0x9a8e]        # 427dc2 <flatcc_builder_padding_base@@Base+0x212>
  41e334:	mov    edx,0x6c4
  41e339:	lea    rcx,[rip+0xa874]        # 428bb4 <flatcc_builder_padding_base@@Base+0x1004>
  41e340:	call   404090 <__assert_fail@plt>
  41e345:	mov    rax,QWORD PTR [rbp-0x10]
  41e349:	mov    rax,QWORD PTR [rax+0x30]
  41e34d:	mov    ecx,DWORD PTR [rax+0x14]
  41e350:	mov    rax,QWORD PTR [rbp-0x10]
  41e354:	cmp    ecx,DWORD PTR [rax+0x20]
  41e357:	jne    41e362 <flatcc_builder_end_string@@Base+0x62>
  41e35d:	jmp    41e381 <flatcc_builder_end_string@@Base+0x81>
  41e362:	lea    rdi,[rip+0xa88e]        # 428bf7 <flatcc_builder_padding_base@@Base+0x1047>
  41e369:	lea    rsi,[rip+0x9a52]        # 427dc2 <flatcc_builder_padding_base@@Base+0x212>
  41e370:	mov    edx,0x6c5
  41e375:	lea    rcx,[rip+0xa838]        # 428bb4 <flatcc_builder_padding_base@@Base+0x1004>
  41e37c:	call   404090 <__assert_fail@plt>
  41e381:	mov    rdi,QWORD PTR [rbp-0x10]
  41e385:	mov    rax,QWORD PTR [rbp-0x10]
  41e389:	mov    rsi,QWORD PTR [rax+0x18]
  41e38d:	mov    rax,QWORD PTR [rbp-0x10]
  41e391:	mov    ecx,DWORD PTR [rax+0x20]
  41e394:	mov    edx,ecx
  41e396:	call   41e090 <flatcc_builder_create_string@@Base>
  41e39b:	xor    ecx,ecx
  41e39d:	mov    DWORD PTR [rbp-0x14],eax
  41e3a0:	cmp    ecx,eax
  41e3a2:	jne    41e3b4 <flatcc_builder_end_string@@Base+0xb4>
  41e3a8:	mov    DWORD PTR [rbp-0x4],0x0
  41e3af:	jmp    41e3c3 <flatcc_builder_end_string@@Base+0xc3>
  41e3b4:	mov    rdi,QWORD PTR [rbp-0x10]
  41e3b8:	call   41ac30 <flatcc_builder_end_buffer@@Base+0x160>
  41e3bd:	mov    eax,DWORD PTR [rbp-0x14]
  41e3c0:	mov    DWORD PTR [rbp-0x4],eax
  41e3c3:	mov    eax,DWORD PTR [rbp-0x4]
  41e3c6:	add    rsp,0x20
  41e3ca:	pop    rbp
  41e3cb:	ret    
  41e3cc:	nop    DWORD PTR [rax+0x0]

000000000041e3d0 <flatcc_builder_string_edit@@Base>:
  41e3d0:	push   rbp
  41e3d1:	mov    rbp,rsp
  41e3d4:	mov    QWORD PTR [rbp-0x8],rdi
  41e3d8:	mov    rdi,QWORD PTR [rbp-0x8]
  41e3dc:	mov    rax,QWORD PTR [rdi+0x18]
  41e3e0:	pop    rbp
  41e3e1:	ret    
  41e3e2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e3ec:	nop    DWORD PTR [rax+0x0]

000000000041e3f0 <flatcc_builder_string_len@@Base>:
  41e3f0:	push   rbp
  41e3f1:	mov    rbp,rsp
  41e3f4:	mov    QWORD PTR [rbp-0x8],rdi
  41e3f8:	mov    rdi,QWORD PTR [rbp-0x8]
  41e3fc:	mov    rdi,QWORD PTR [rdi+0x30]
  41e400:	mov    eax,DWORD PTR [rdi+0x14]
  41e403:	pop    rbp
  41e404:	ret    
  41e405:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e40f:	nop
  41e410:	push   rbp
  41e411:	mov    rbp,rsp
  41e414:	sub    rsp,0x20
  41e418:	mov    ax,cx
  41e41b:	mov    r8w,dx
  41e41f:	mov    QWORD PTR [rbp-0x10],rdi
  41e423:	mov    DWORD PTR [rbp-0x14],esi
  41e426:	mov    WORD PTR [rbp-0x16],r8w
  41e42b:	mov    WORD PTR [rbp-0x18],ax
  41e42f:	mov    rdi,QWORD PTR [rbp-0x10]
  41e433:	mov    ecx,DWORD PTR [rdi+0x20]
  41e436:	movzx  edx,WORD PTR [rbp-0x16]
  41e43a:	add    ecx,edx
  41e43c:	sub    ecx,0x1
  41e43f:	movzx  edx,WORD PTR [rbp-0x16]
  41e443:	sub    edx,0x1
  41e446:	xor    edx,0xffffffff
  41e449:	and    ecx,edx
  41e44b:	mov    DWORD PTR [rbp-0x1c],ecx
  41e44e:	mov    ecx,DWORD PTR [rbp-0x1c]
  41e451:	add    ecx,DWORD PTR [rbp-0x14]
  41e454:	mov    rdi,QWORD PTR [rbp-0x10]
  41e458:	mov    DWORD PTR [rdi+0x20],ecx
  41e45b:	mov    rdi,QWORD PTR [rbp-0x10]
  41e45f:	cmp    ecx,DWORD PTR [rdi+0x24]
  41e462:	jb     41e49f <flatcc_builder_string_len@@Base+0xaf>
  41e468:	mov    rdi,QWORD PTR [rbp-0x10]
  41e46c:	mov    rax,QWORD PTR [rbp-0x10]
  41e470:	mov    ecx,DWORD PTR [rax+0x20]
  41e473:	add    ecx,0x1
  41e476:	mov    ecx,ecx
  41e478:	mov    esi,ecx
  41e47a:	mov    edx,0xfffc
  41e47f:	call   41ee10 <flatcc_builder_get_emit_context@@Base+0x50>
  41e484:	cmp    eax,0x0
  41e487:	je     41e49a <flatcc_builder_string_len@@Base+0xaa>
  41e48d:	mov    QWORD PTR [rbp-0x8],0x0
  41e495:	jmp    41e4f7 <flatcc_builder_string_len@@Base+0x107>
  41e49a:	jmp    41e49f <flatcc_builder_string_len@@Base+0xaf>
  41e49f:	mov    eax,DWORD PTR [rbp-0x1c]
  41e4a2:	mov    ecx,eax
  41e4a4:	add    rcx,0x4
  41e4a8:	mov    dx,cx
  41e4ab:	mov    rcx,QWORD PTR [rbp-0x10]
  41e4af:	mov    rcx,QWORD PTR [rcx+0x8]
  41e4b3:	movzx  eax,WORD PTR [rbp-0x18]
  41e4b7:	mov    esi,eax
  41e4b9:	mov    WORD PTR [rcx+rsi*2],dx
  41e4bd:	movzx  eax,WORD PTR [rbp-0x18]
  41e4c1:	mov    rcx,QWORD PTR [rbp-0x10]
  41e4c5:	movzx  edi,WORD PTR [rcx+0x10]
  41e4c9:	cmp    eax,edi
  41e4cb:	jl     41e4e3 <flatcc_builder_string_len@@Base+0xf3>
  41e4d1:	movzx  eax,WORD PTR [rbp-0x18]
  41e4d5:	add    eax,0x1
  41e4d8:	mov    cx,ax
  41e4db:	mov    rdx,QWORD PTR [rbp-0x10]
  41e4df:	mov    WORD PTR [rdx+0x10],cx
  41e4e3:	mov    rax,QWORD PTR [rbp-0x10]
  41e4e7:	mov    rax,QWORD PTR [rax+0x18]
  41e4eb:	mov    ecx,DWORD PTR [rbp-0x1c]
  41e4ee:	mov    edx,ecx
  41e4f0:	add    rax,rdx
  41e4f3:	mov    QWORD PTR [rbp-0x8],rax
  41e4f7:	mov    rax,QWORD PTR [rbp-0x8]
  41e4fb:	add    rsp,0x20
  41e4ff:	pop    rbp
  41e500:	ret    
  41e501:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e50b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041e510 <flatcc_builder_table_edit@@Base>:
  41e510:	push   rbp
  41e511:	mov    rbp,rsp
  41e514:	sub    rsp,0x10
  41e518:	mov    QWORD PTR [rbp-0x8],rdi
  41e51c:	mov    QWORD PTR [rbp-0x10],rsi
  41e520:	mov    rsi,QWORD PTR [rbp-0x8]
  41e524:	mov    rsi,QWORD PTR [rsi+0x30]
  41e528:	movzx  eax,WORD PTR [rsi+0xe]
  41e52c:	cmp    eax,0x3
  41e52f:	jne    41e53a <flatcc_builder_table_edit@@Base+0x2a>
  41e535:	jmp    41e559 <flatcc_builder_table_edit@@Base+0x49>
  41e53a:	lea    rdi,[rip+0xa0b0]        # 4285f1 <flatcc_builder_padding_base@@Base+0xa41>
  41e541:	lea    rsi,[rip+0x987a]        # 427dc2 <flatcc_builder_padding_base@@Base+0x212>
  41e548:	mov    edx,0x702
  41e54d:	lea    rcx,[rip+0xa755]        # 428ca9 <flatcc_builder_padding_base@@Base+0x10f9>
  41e554:	call   404090 <__assert_fail@plt>
  41e559:	xor    eax,eax
  41e55b:	mov    ecx,eax
  41e55d:	mov    rdx,QWORD PTR [rbp-0x8]
  41e561:	mov    rdx,QWORD PTR [rdx+0x18]
  41e565:	mov    rsi,QWORD PTR [rbp-0x8]
  41e569:	mov    eax,DWORD PTR [rsi+0x20]
  41e56c:	mov    esi,eax
  41e56e:	add    rdx,rsi
  41e571:	sub    rcx,QWORD PTR [rbp-0x10]
  41e575:	add    rdx,rcx
  41e578:	mov    rax,rdx
  41e57b:	add    rsp,0x10
  41e57f:	pop    rbp
  41e580:	ret    
  41e581:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e58b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041e590 <flatcc_builder_table_add_copy@@Base>:
  41e590:	push   rbp
  41e591:	mov    rbp,rsp
  41e594:	sub    rsp,0x30
  41e598:	mov    ax,r8w
  41e59c:	mov    QWORD PTR [rbp-0x8],rdi
  41e5a0:	mov    DWORD PTR [rbp-0xc],esi
  41e5a3:	mov    QWORD PTR [rbp-0x18],rdx
  41e5a7:	mov    QWORD PTR [rbp-0x20],rcx
  41e5ab:	mov    WORD PTR [rbp-0x22],ax
  41e5af:	mov    rdi,QWORD PTR [rbp-0x8]
  41e5b3:	mov    esi,DWORD PTR [rbp-0xc]
  41e5b6:	mov    rdx,QWORD PTR [rbp-0x20]
  41e5ba:	movzx  ecx,WORD PTR [rbp-0x22]
  41e5be:	call   41d6d0 <flatcc_builder_table_add@@Base>
  41e5c3:	mov    QWORD PTR [rbp-0x30],rax
  41e5c7:	cmp    rax,0x0
  41e5cb:	je     41e5e2 <flatcc_builder_table_add_copy@@Base+0x52>
  41e5d1:	mov    rdi,QWORD PTR [rbp-0x30]
  41e5d5:	mov    rsi,QWORD PTR [rbp-0x18]
  41e5d9:	mov    rdx,QWORD PTR [rbp-0x20]
  41e5dd:	call   4040f0 <memcpy@plt>
  41e5e2:	mov    rax,QWORD PTR [rbp-0x30]
  41e5e6:	add    rsp,0x30
  41e5ea:	pop    rbp
  41e5eb:	ret    
  41e5ec:	nop    DWORD PTR [rax+0x0]
  41e5f0:	push   rbp
  41e5f1:	mov    rbp,rsp
  41e5f4:	sub    rsp,0x20
  41e5f8:	mov    ax,si
  41e5fb:	mov    QWORD PTR [rbp-0x10],rdi
  41e5ff:	mov    WORD PTR [rbp-0x12],ax
  41e603:	mov    rdi,QWORD PTR [rbp-0x10]
  41e607:	mov    esi,DWORD PTR [rdi+0x20]
  41e60a:	mov    edi,esi
  41e60c:	add    rdi,0x4
  41e610:	sub    rdi,0x1
  41e614:	and    rdi,0xfffffffffffffffc
  41e618:	mov    esi,edi
  41e61a:	mov    DWORD PTR [rbp-0x18],esi
  41e61d:	mov    esi,DWORD PTR [rbp-0x18]
  41e620:	mov    edi,esi
  41e622:	add    rdi,0x4
  41e626:	mov    esi,edi
  41e628:	mov    rdi,QWORD PTR [rbp-0x10]
  41e62c:	mov    DWORD PTR [rdi+0x20],esi
  41e62f:	mov    rdi,QWORD PTR [rbp-0x10]
  41e633:	cmp    esi,DWORD PTR [rdi+0x24]
  41e636:	jbe    41e66e <flatcc_builder_table_add_copy@@Base+0xde>
  41e63c:	mov    rdi,QWORD PTR [rbp-0x10]
  41e640:	mov    rax,QWORD PTR [rbp-0x10]
  41e644:	mov    ecx,DWORD PTR [rax+0x20]
  41e647:	mov    esi,ecx
  41e649:	mov    edx,0xfffc
  41e64e:	call   41ee10 <flatcc_builder_get_emit_context@@Base+0x50>
  41e653:	cmp    eax,0x0
  41e656:	je     41e669 <flatcc_builder_table_add_copy@@Base+0xd9>
  41e65c:	mov    QWORD PTR [rbp-0x8],0x0
  41e664:	jmp    41e6e0 <flatcc_builder_table_add_copy@@Base+0x150>
  41e669:	jmp    41e66e <flatcc_builder_table_add_copy@@Base+0xde>
  41e66e:	mov    eax,DWORD PTR [rbp-0x18]
  41e671:	mov    ecx,eax
  41e673:	add    rcx,0x4
  41e677:	mov    dx,cx
  41e67a:	mov    rcx,QWORD PTR [rbp-0x10]
  41e67e:	mov    rcx,QWORD PTR [rcx+0x8]
  41e682:	movzx  eax,WORD PTR [rbp-0x12]
  41e686:	mov    esi,eax
  41e688:	mov    WORD PTR [rcx+rsi*2],dx
  41e68c:	movzx  eax,WORD PTR [rbp-0x12]
  41e690:	mov    rcx,QWORD PTR [rbp-0x10]
  41e694:	movzx  edi,WORD PTR [rcx+0x10]
  41e698:	cmp    eax,edi
  41e69a:	jl     41e6b2 <flatcc_builder_table_add_copy@@Base+0x122>
  41e6a0:	movzx  eax,WORD PTR [rbp-0x12]
  41e6a4:	add    eax,0x1
  41e6a7:	mov    cx,ax
  41e6aa:	mov    rdx,QWORD PTR [rbp-0x10]
  41e6ae:	mov    WORD PTR [rdx+0x10],cx
  41e6b2:	mov    eax,DWORD PTR [rbp-0x18]
  41e6b5:	mov    cx,ax
  41e6b8:	mov    rdx,QWORD PTR [rbp-0x10]
  41e6bc:	mov    rsi,QWORD PTR [rdx]
  41e6bf:	mov    rdi,rsi
  41e6c2:	add    rdi,0x2
  41e6c6:	mov    QWORD PTR [rdx],rdi
  41e6c9:	mov    WORD PTR [rsi],cx
  41e6cc:	mov    rdx,QWORD PTR [rbp-0x10]
  41e6d0:	mov    rdx,QWORD PTR [rdx+0x18]
  41e6d4:	mov    eax,DWORD PTR [rbp-0x18]
  41e6d7:	mov    esi,eax
  41e6d9:	add    rdx,rsi
  41e6dc:	mov    QWORD PTR [rbp-0x8],rdx
  41e6e0:	mov    rax,QWORD PTR [rbp-0x8]
  41e6e4:	add    rsp,0x20
  41e6e8:	pop    rbp
  41e6e9:	ret    
  41e6ea:	nop    WORD PTR [rax+rax*1+0x0]

000000000041e6f0 <flatcc_builder_push_buffer_alignment@@Base>:
  41e6f0:	push   rbp
  41e6f1:	mov    rbp,rsp
  41e6f4:	mov    QWORD PTR [rbp-0x8],rdi
  41e6f8:	mov    rdi,QWORD PTR [rbp-0x8]
  41e6fc:	mov    ax,WORD PTR [rdi+0xe8]
  41e703:	mov    WORD PTR [rbp-0xa],ax
  41e707:	mov    rdi,QWORD PTR [rbp-0x8]
  41e70b:	mov    WORD PTR [rdi+0xe8],0x4
  41e714:	movzx  eax,WORD PTR [rbp-0xa]
  41e718:	pop    rbp
  41e719:	ret    
  41e71a:	nop    WORD PTR [rax+rax*1+0x0]

000000000041e720 <flatcc_builder_pop_buffer_alignment@@Base>:
  41e720:	push   rbp
  41e721:	mov    rbp,rsp
  41e724:	sub    rsp,0x10
  41e728:	mov    ax,si
  41e72b:	mov    QWORD PTR [rbp-0x8],rdi
  41e72f:	mov    WORD PTR [rbp-0xa],ax
  41e733:	mov    rdi,QWORD PTR [rbp-0x8]
  41e737:	movzx  esi,WORD PTR [rbp-0xa]
  41e73b:	call   41a5c0 <flatcc_builder_create_buffer@@Base+0x410>
  41e740:	add    rsp,0x10
  41e744:	pop    rbp
  41e745:	ret    
  41e746:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000041e750 <flatcc_builder_get_buffer_alignment@@Base>:
  41e750:	push   rbp
  41e751:	mov    rbp,rsp
  41e754:	mov    QWORD PTR [rbp-0x8],rdi
  41e758:	mov    rdi,QWORD PTR [rbp-0x8]
  41e75c:	movzx  eax,WORD PTR [rdi+0xe8]
  41e763:	pop    rbp
  41e764:	ret    
  41e765:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e76f:	nop

000000000041e770 <flatcc_builder_set_vtable_clustering@@Base>:
  41e770:	push   rbp
  41e771:	mov    rbp,rsp
  41e774:	mov    QWORD PTR [rbp-0x8],rdi
  41e778:	mov    DWORD PTR [rbp-0xc],esi
  41e77b:	cmp    DWORD PTR [rbp-0xc],0x0
  41e77f:	setne  al
  41e782:	xor    al,0xff
  41e784:	and    al,0x1
  41e786:	movzx  esi,al
  41e789:	mov    rdi,QWORD PTR [rbp-0x8]
  41e78d:	mov    DWORD PTR [rdi+0x124],esi
  41e793:	pop    rbp
  41e794:	ret    
  41e795:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e79f:	nop

000000000041e7a0 <flatcc_builder_set_block_align@@Base>:
  41e7a0:	push   rbp
  41e7a1:	mov    rbp,rsp
  41e7a4:	mov    ax,si
  41e7a7:	mov    QWORD PTR [rbp-0x8],rdi
  41e7ab:	mov    WORD PTR [rbp-0xa],ax
  41e7af:	mov    ax,WORD PTR [rbp-0xa]
  41e7b3:	mov    rdi,QWORD PTR [rbp-0x8]
  41e7b7:	mov    WORD PTR [rdi+0xec],ax
  41e7be:	pop    rbp
  41e7bf:	ret    

000000000041e7c0 <flatcc_builder_get_level@@Base>:
  41e7c0:	push   rbp
  41e7c1:	mov    rbp,rsp
  41e7c4:	mov    QWORD PTR [rbp-0x8],rdi
  41e7c8:	mov    rdi,QWORD PTR [rbp-0x8]
  41e7cc:	mov    eax,DWORD PTR [rdi+0x104]
  41e7d2:	pop    rbp
  41e7d3:	ret    
  41e7d4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e7de:	xchg   ax,ax

000000000041e7e0 <flatcc_builder_set_max_level@@Base>:
  41e7e0:	push   rbp
  41e7e1:	mov    rbp,rsp
  41e7e4:	mov    QWORD PTR [rbp-0x8],rdi
  41e7e8:	mov    DWORD PTR [rbp-0xc],esi
  41e7eb:	mov    esi,DWORD PTR [rbp-0xc]
  41e7ee:	mov    rdi,QWORD PTR [rbp-0x8]
  41e7f2:	mov    DWORD PTR [rdi+0x120],esi
  41e7f8:	mov    rdi,QWORD PTR [rbp-0x8]
  41e7fc:	mov    esi,DWORD PTR [rdi+0x108]
  41e802:	mov    rdi,QWORD PTR [rbp-0x8]
  41e806:	cmp    esi,DWORD PTR [rdi+0x120]
  41e80c:	jge    41e826 <flatcc_builder_set_max_level@@Base+0x46>
  41e812:	mov    rax,QWORD PTR [rbp-0x8]
  41e816:	mov    ecx,DWORD PTR [rax+0x120]
  41e81c:	mov    rax,QWORD PTR [rbp-0x8]
  41e820:	mov    DWORD PTR [rax+0x108],ecx
  41e826:	pop    rbp
  41e827:	ret    
  41e828:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041e830 <flatcc_builder_get_buffer_size@@Base>:
  41e830:	push   rbp
  41e831:	mov    rbp,rsp
  41e834:	mov    QWORD PTR [rbp-0x8],rdi
  41e838:	mov    rdi,QWORD PTR [rbp-0x8]
  41e83c:	mov    eax,DWORD PTR [rdi+0xf4]
  41e842:	mov    rdi,QWORD PTR [rbp-0x8]
  41e846:	sub    eax,DWORD PTR [rdi+0xf0]
  41e84c:	cdqe   
  41e84e:	pop    rbp
  41e84f:	ret    

000000000041e850 <flatcc_builder_get_buffer_start@@Base>:
  41e850:	push   rbp
  41e851:	mov    rbp,rsp
  41e854:	mov    QWORD PTR [rbp-0x8],rdi
  41e858:	mov    rdi,QWORD PTR [rbp-0x8]
  41e85c:	mov    eax,DWORD PTR [rdi+0xf0]
  41e862:	pop    rbp
  41e863:	ret    
  41e864:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e86e:	xchg   ax,ax

000000000041e870 <flatcc_builder_get_buffer_end@@Base>:
  41e870:	push   rbp
  41e871:	mov    rbp,rsp
  41e874:	mov    QWORD PTR [rbp-0x8],rdi
  41e878:	mov    rdi,QWORD PTR [rbp-0x8]
  41e87c:	mov    eax,DWORD PTR [rdi+0xf4]
  41e882:	pop    rbp
  41e883:	ret    
  41e884:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e88e:	xchg   ax,ax

000000000041e890 <flatcc_builder_set_vtable_cache_limit@@Base>:
  41e890:	push   rbp
  41e891:	mov    rbp,rsp
  41e894:	mov    QWORD PTR [rbp-0x8],rdi
  41e898:	mov    QWORD PTR [rbp-0x10],rsi
  41e89c:	mov    rsi,QWORD PTR [rbp-0x10]
  41e8a0:	mov    rdi,QWORD PTR [rbp-0x8]
  41e8a4:	mov    QWORD PTR [rdi+0x118],rsi
  41e8ab:	pop    rbp
  41e8ac:	ret    
  41e8ad:	nop    DWORD PTR [rax]

000000000041e8b0 <flatcc_builder_set_identifier@@Base>:
  41e8b0:	push   rbp
  41e8b1:	mov    rbp,rsp
  41e8b4:	mov    QWORD PTR [rbp-0x8],rdi
  41e8b8:	mov    QWORD PTR [rbp-0x10],rsi
  41e8bc:	mov    rsi,QWORD PTR [rbp-0x8]
  41e8c0:	add    rsi,0x110
  41e8c7:	cmp    QWORD PTR [rbp-0x10],0x0
  41e8cc:	mov    QWORD PTR [rbp-0x18],rsi
  41e8d0:	je     41e8e3 <flatcc_builder_set_identifier@@Base+0x33>
  41e8d6:	mov    rax,QWORD PTR [rbp-0x10]
  41e8da:	mov    QWORD PTR [rbp-0x20],rax
  41e8de:	jmp    41e8f3 <flatcc_builder_set_identifier@@Base+0x43>
  41e8e3:	lea    rax,[rip+0x92c6]        # 427bb0 <flatcc_builder_padding_base@@Base>
  41e8ea:	mov    QWORD PTR [rbp-0x20],rax
  41e8ee:	jmp    41e8f3 <flatcc_builder_set_identifier@@Base+0x43>
  41e8f3:	mov    rax,QWORD PTR [rbp-0x20]
  41e8f7:	mov    ecx,DWORD PTR [rax]
  41e8f9:	mov    rax,QWORD PTR [rbp-0x18]
  41e8fd:	mov    DWORD PTR [rax],ecx
  41e8ff:	pop    rbp
  41e900:	ret    
  41e901:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e90b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041e910 <flatcc_builder_get_type@@Base>:
  41e910:	push   rbp
  41e911:	mov    rbp,rsp
  41e914:	mov    QWORD PTR [rbp-0x8],rdi
  41e918:	mov    rdi,QWORD PTR [rbp-0x8]
  41e91c:	cmp    QWORD PTR [rdi+0x30],0x0
  41e921:	je     41e93b <flatcc_builder_get_type@@Base+0x2b>
  41e927:	mov    rax,QWORD PTR [rbp-0x8]
  41e92b:	mov    rax,QWORD PTR [rax+0x30]
  41e92f:	movzx  ecx,WORD PTR [rax+0xe]
  41e933:	mov    DWORD PTR [rbp-0xc],ecx
  41e936:	jmp    41e945 <flatcc_builder_get_type@@Base+0x35>
  41e93b:	xor    eax,eax
  41e93d:	mov    DWORD PTR [rbp-0xc],eax
  41e940:	jmp    41e945 <flatcc_builder_get_type@@Base+0x35>
  41e945:	mov    eax,DWORD PTR [rbp-0xc]
  41e948:	pop    rbp
  41e949:	ret    
  41e94a:	nop    WORD PTR [rax+rax*1+0x0]

000000000041e950 <flatcc_builder_get_type_at@@Base>:
  41e950:	push   rbp
  41e951:	mov    rbp,rsp
  41e954:	mov    QWORD PTR [rbp-0x10],rdi
  41e958:	mov    DWORD PTR [rbp-0x14],esi
  41e95b:	cmp    DWORD PTR [rbp-0x14],0x1
  41e95f:	jl     41e978 <flatcc_builder_get_type_at@@Base+0x28>
  41e965:	mov    eax,DWORD PTR [rbp-0x14]
  41e968:	mov    rcx,QWORD PTR [rbp-0x10]
  41e96c:	cmp    eax,DWORD PTR [rcx+0x104]
  41e972:	jle    41e984 <flatcc_builder_get_type_at@@Base+0x34>
  41e978:	mov    DWORD PTR [rbp-0x4],0x0
  41e97f:	jmp    41e9aa <flatcc_builder_get_type_at@@Base+0x5a>
  41e984:	mov    rax,QWORD PTR [rbp-0x10]
  41e988:	mov    rax,QWORD PTR [rax+0x30]
  41e98c:	mov    ecx,DWORD PTR [rbp-0x14]
  41e98f:	mov    rdx,QWORD PTR [rbp-0x10]
  41e993:	sub    ecx,DWORD PTR [rdx+0x104]
  41e999:	movsxd rdx,ecx
  41e99c:	imul   rdx,rdx,0x24
  41e9a0:	add    rax,rdx
  41e9a3:	movzx  ecx,WORD PTR [rax+0xe]
  41e9a7:	mov    DWORD PTR [rbp-0x4],ecx
  41e9aa:	mov    eax,DWORD PTR [rbp-0x4]
  41e9ad:	pop    rbp
  41e9ae:	ret    
  41e9af:	nop

000000000041e9b0 <flatcc_builder_get_direct_buffer@@Base>:
  41e9b0:	push   rbp
  41e9b1:	mov    rbp,rsp
  41e9b4:	sub    rsp,0x20
  41e9b8:	mov    QWORD PTR [rbp-0x10],rdi
  41e9bc:	mov    QWORD PTR [rbp-0x18],rsi
  41e9c0:	mov    rsi,QWORD PTR [rbp-0x10]
  41e9c4:	cmp    DWORD PTR [rsi+0x128],0x0
  41e9cb:	je     41e9f0 <flatcc_builder_get_direct_buffer@@Base+0x40>
  41e9d1:	mov    rax,QWORD PTR [rbp-0x10]
  41e9d5:	add    rax,0x130
  41e9db:	mov    rsi,QWORD PTR [rbp-0x18]
  41e9df:	mov    rdi,rax
  41e9e2:	call   41ea20 <flatcc_builder_get_direct_buffer@@Base+0x70>
  41e9e7:	mov    QWORD PTR [rbp-0x8],rax
  41e9eb:	jmp    41ea13 <flatcc_builder_get_direct_buffer@@Base+0x63>
  41e9f0:	cmp    QWORD PTR [rbp-0x18],0x0
  41e9f5:	je     41ea06 <flatcc_builder_get_direct_buffer@@Base+0x56>
  41e9fb:	mov    rax,QWORD PTR [rbp-0x18]
  41e9ff:	mov    QWORD PTR [rax],0x0
  41ea06:	jmp    41ea0b <flatcc_builder_get_direct_buffer@@Base+0x5b>
  41ea0b:	mov    QWORD PTR [rbp-0x8],0x0
  41ea13:	mov    rax,QWORD PTR [rbp-0x8]
  41ea17:	add    rsp,0x20
  41ea1b:	pop    rbp
  41ea1c:	ret    
  41ea1d:	nop    DWORD PTR [rax]
  41ea20:	push   rbp
  41ea21:	mov    rbp,rsp
  41ea24:	mov    QWORD PTR [rbp-0x10],rdi
  41ea28:	mov    QWORD PTR [rbp-0x18],rsi
  41ea2c:	mov    rsi,QWORD PTR [rbp-0x10]
  41ea30:	mov    rsi,QWORD PTR [rsi]
  41ea33:	mov    rdi,QWORD PTR [rbp-0x10]
  41ea37:	cmp    rsi,QWORD PTR [rdi+0x8]
  41ea3b:	jne    41ea6c <flatcc_builder_get_direct_buffer@@Base+0xbc>
  41ea41:	cmp    QWORD PTR [rbp-0x18],0x0
  41ea46:	je     41ea5b <flatcc_builder_get_direct_buffer@@Base+0xab>
  41ea4c:	mov    rax,QWORD PTR [rbp-0x10]
  41ea50:	mov    rax,QWORD PTR [rax+0x30]
  41ea54:	mov    rcx,QWORD PTR [rbp-0x18]
  41ea58:	mov    QWORD PTR [rcx],rax
  41ea5b:	mov    rax,QWORD PTR [rbp-0x10]
  41ea5f:	mov    rax,QWORD PTR [rax+0x10]
  41ea63:	mov    QWORD PTR [rbp-0x8],rax
  41ea67:	jmp    41ea8a <flatcc_builder_get_direct_buffer@@Base+0xda>
  41ea6c:	cmp    QWORD PTR [rbp-0x18],0x0
  41ea71:	je     41ea82 <flatcc_builder_get_direct_buffer@@Base+0xd2>
  41ea77:	mov    rax,QWORD PTR [rbp-0x18]
  41ea7b:	mov    QWORD PTR [rax],0x0
  41ea82:	mov    QWORD PTR [rbp-0x8],0x0
  41ea8a:	mov    rax,QWORD PTR [rbp-0x8]
  41ea8e:	pop    rbp
  41ea8f:	ret    

000000000041ea90 <flatcc_builder_copy_buffer@@Base>:
  41ea90:	push   rbp
  41ea91:	mov    rbp,rsp
  41ea94:	sub    rsp,0x20
  41ea98:	mov    QWORD PTR [rbp-0x10],rdi
  41ea9c:	mov    QWORD PTR [rbp-0x18],rsi
  41eaa0:	mov    QWORD PTR [rbp-0x20],rdx
  41eaa4:	mov    rdx,QWORD PTR [rbp-0x10]
  41eaa8:	cmp    DWORD PTR [rdx+0x128],0x0
  41eaaf:	jne    41eac2 <flatcc_builder_copy_buffer@@Base+0x32>
  41eab5:	mov    QWORD PTR [rbp-0x8],0x0
  41eabd:	jmp    41eb17 <flatcc_builder_copy_buffer@@Base+0x87>
  41eac2:	mov    rax,QWORD PTR [rbp-0x10]
  41eac6:	add    rax,0x130
  41eacc:	mov    rsi,QWORD PTR [rbp-0x18]
  41ead0:	mov    rdx,QWORD PTR [rbp-0x20]
  41ead4:	mov    rdi,rax
  41ead7:	call   41f730 <flatcc_emitter_copy_buffer@@Base>
  41eadc:	mov    QWORD PTR [rbp-0x18],rax
  41eae0:	cmp    QWORD PTR [rbp-0x18],0x0
  41eae5:	je     41eaf0 <flatcc_builder_copy_buffer@@Base+0x60>
  41eaeb:	jmp    41eb0f <flatcc_builder_copy_buffer@@Base+0x7f>
  41eaf0:	lea    rdi,[rip+0x6070]        # 424b67 <_IO_stdin_used@@Base+0x1b67>
  41eaf7:	lea    rsi,[rip+0x92c4]        # 427dc2 <flatcc_builder_padding_base@@Base+0x212>
  41eafe:	mov    edx,0x786
  41eb03:	lea    rcx,[rip+0xa22a]        # 428d34 <flatcc_builder_padding_base@@Base+0x1184>
  41eb0a:	call   404090 <__assert_fail@plt>
  41eb0f:	mov    rax,QWORD PTR [rbp-0x18]
  41eb13:	mov    QWORD PTR [rbp-0x8],rax
  41eb17:	mov    rax,QWORD PTR [rbp-0x8]
  41eb1b:	add    rsp,0x20
  41eb1f:	pop    rbp
  41eb20:	ret    
  41eb21:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41eb2b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041eb30 <flatcc_builder_finalize_buffer@@Base>:
  41eb30:	push   rbp
  41eb31:	mov    rbp,rsp
  41eb34:	sub    rsp,0x20
  41eb38:	mov    QWORD PTR [rbp-0x8],rdi
  41eb3c:	mov    QWORD PTR [rbp-0x10],rsi
  41eb40:	mov    rdi,QWORD PTR [rbp-0x8]
  41eb44:	call   41e830 <flatcc_builder_get_buffer_size@@Base>
  41eb49:	mov    QWORD PTR [rbp-0x20],rax
  41eb4d:	cmp    QWORD PTR [rbp-0x10],0x0
  41eb52:	je     41eb63 <flatcc_builder_finalize_buffer@@Base+0x33>
  41eb58:	mov    rax,QWORD PTR [rbp-0x20]
  41eb5c:	mov    rcx,QWORD PTR [rbp-0x10]
  41eb60:	mov    QWORD PTR [rcx],rax
  41eb63:	mov    rdi,QWORD PTR [rbp-0x20]
  41eb67:	call   404100 <malloc@plt>
  41eb6c:	mov    QWORD PTR [rbp-0x18],rax
  41eb70:	cmp    QWORD PTR [rbp-0x18],0x0
  41eb75:	jne    41eb9a <flatcc_builder_finalize_buffer@@Base+0x6a>
  41eb7b:	lea    rdi,[rip+0xa400]        # 428f82 <flatcc_builder_padding_base@@Base+0x13d2>
  41eb82:	lea    rsi,[rip+0x9239]        # 427dc2 <flatcc_builder_padding_base@@Base+0x212>
  41eb89:	mov    edx,0x798
  41eb8e:	lea    rcx,[rip+0xa1e4]        # 428d79 <flatcc_builder_padding_base@@Base+0x11c9>
  41eb95:	call   404090 <__assert_fail@plt>
  41eb9a:	mov    rdi,QWORD PTR [rbp-0x8]
  41eb9e:	mov    rsi,QWORD PTR [rbp-0x18]
  41eba2:	mov    rdx,QWORD PTR [rbp-0x20]
  41eba6:	call   41ea90 <flatcc_builder_copy_buffer@@Base>
  41ebab:	cmp    rax,0x0
  41ebaf:	jne    41ebd4 <flatcc_builder_finalize_buffer@@Base+0xa4>
  41ebb5:	lea    rdi,[rip+0xa3c6]        # 428f82 <flatcc_builder_padding_base@@Base+0x13d2>
  41ebbc:	lea    rsi,[rip+0x91ff]        # 427dc2 <flatcc_builder_padding_base@@Base+0x212>
  41ebc3:	mov    edx,0x79c
  41ebc8:	lea    rcx,[rip+0xa1aa]        # 428d79 <flatcc_builder_padding_base@@Base+0x11c9>
  41ebcf:	call   404090 <__assert_fail@plt>
  41ebd4:	jmp    41ebd9 <flatcc_builder_finalize_buffer@@Base+0xa9>
  41ebd9:	cmp    QWORD PTR [rbp-0x18],0x0
  41ebde:	jne    41ebfa <flatcc_builder_finalize_buffer@@Base+0xca>
  41ebe4:	cmp    QWORD PTR [rbp-0x10],0x0
  41ebe9:	je     41ebfa <flatcc_builder_finalize_buffer@@Base+0xca>
  41ebef:	mov    rax,QWORD PTR [rbp-0x10]
  41ebf3:	mov    QWORD PTR [rax],0x0
  41ebfa:	mov    rax,QWORD PTR [rbp-0x18]
  41ebfe:	add    rsp,0x20
  41ec02:	pop    rbp
  41ec03:	ret    
  41ec04:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ec0e:	xchg   ax,ax

000000000041ec10 <flatcc_builder_finalize_aligned_buffer@@Base>:
  41ec10:	push   rbp
  41ec11:	mov    rbp,rsp
  41ec14:	sub    rsp,0x30
  41ec18:	mov    QWORD PTR [rbp-0x8],rdi
  41ec1c:	mov    QWORD PTR [rbp-0x10],rsi
  41ec20:	mov    rdi,QWORD PTR [rbp-0x8]
  41ec24:	call   41e830 <flatcc_builder_get_buffer_size@@Base>
  41ec29:	mov    QWORD PTR [rbp-0x28],rax
  41ec2d:	cmp    QWORD PTR [rbp-0x10],0x0
  41ec32:	je     41ec43 <flatcc_builder_finalize_aligned_buffer@@Base+0x33>
  41ec38:	mov    rax,QWORD PTR [rbp-0x28]
  41ec3c:	mov    rcx,QWORD PTR [rbp-0x10]
  41ec40:	mov    QWORD PTR [rcx],rax
  41ec43:	mov    rdi,QWORD PTR [rbp-0x8]
  41ec47:	call   41e750 <flatcc_builder_get_buffer_alignment@@Base>
  41ec4c:	movzx  ecx,ax
  41ec4f:	mov    edi,ecx
  41ec51:	mov    QWORD PTR [rbp-0x20],rdi
  41ec55:	mov    rdi,QWORD PTR [rbp-0x28]
  41ec59:	add    rdi,QWORD PTR [rbp-0x20]
  41ec5d:	sub    rdi,0x1
  41ec61:	mov    rdx,QWORD PTR [rbp-0x20]
  41ec65:	sub    rdx,0x1
  41ec69:	xor    rdx,0xffffffffffffffff
  41ec6d:	and    rdi,rdx
  41ec70:	mov    QWORD PTR [rbp-0x28],rdi
  41ec74:	mov    rdi,QWORD PTR [rbp-0x20]
  41ec78:	mov    rsi,QWORD PTR [rbp-0x28]
  41ec7c:	call   41ed00 <flatcc_builder_finalize_aligned_buffer@@Base+0xf0>
  41ec81:	mov    QWORD PTR [rbp-0x18],rax
  41ec85:	cmp    QWORD PTR [rbp-0x18],0x0
  41ec8a:	jne    41ec95 <flatcc_builder_finalize_aligned_buffer@@Base+0x85>
  41ec90:	jmp    41eccb <flatcc_builder_finalize_aligned_buffer@@Base+0xbb>
  41ec95:	mov    rdi,QWORD PTR [rbp-0x8]
  41ec99:	mov    rsi,QWORD PTR [rbp-0x18]
  41ec9d:	mov    rdx,QWORD PTR [rbp-0x28]
  41eca1:	call   41ea90 <flatcc_builder_copy_buffer@@Base>
  41eca6:	cmp    rax,0x0
  41ecaa:	jne    41ecc6 <flatcc_builder_finalize_aligned_buffer@@Base+0xb6>
  41ecb0:	mov    rdi,QWORD PTR [rbp-0x18]
  41ecb4:	call   404030 <free@plt>
  41ecb9:	mov    QWORD PTR [rbp-0x18],0x0
  41ecc1:	jmp    41eccb <flatcc_builder_finalize_aligned_buffer@@Base+0xbb>
  41ecc6:	jmp    41eccb <flatcc_builder_finalize_aligned_buffer@@Base+0xbb>
  41eccb:	cmp    QWORD PTR [rbp-0x18],0x0
  41ecd0:	jne    41ecec <flatcc_builder_finalize_aligned_buffer@@Base+0xdc>
  41ecd6:	cmp    QWORD PTR [rbp-0x10],0x0
  41ecdb:	je     41ecec <flatcc_builder_finalize_aligned_buffer@@Base+0xdc>
  41ece1:	mov    rax,QWORD PTR [rbp-0x10]
  41ece5:	mov    QWORD PTR [rax],0x0
  41ecec:	mov    rax,QWORD PTR [rbp-0x18]
  41ecf0:	add    rsp,0x30
  41ecf4:	pop    rbp
  41ecf5:	ret    
  41ecf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ed00:	push   rbp
  41ed01:	mov    rbp,rsp
  41ed04:	sub    rsp,0x20
  41ed08:	mov    QWORD PTR [rbp-0x8],rdi
  41ed0c:	mov    QWORD PTR [rbp-0x10],rsi
  41ed10:	mov    QWORD PTR [rbp-0x20],0x0
  41ed18:	cmp    QWORD PTR [rbp-0x8],0x8
  41ed1d:	jae    41ed2b <flatcc_builder_finalize_aligned_buffer@@Base+0x11b>
  41ed23:	mov    QWORD PTR [rbp-0x8],0x8
  41ed2b:	mov    rsi,QWORD PTR [rbp-0x8]
  41ed2f:	mov    rdx,QWORD PTR [rbp-0x10]
  41ed33:	lea    rdi,[rbp-0x20]
  41ed37:	call   404120 <posix_memalign@plt>
  41ed3c:	mov    DWORD PTR [rbp-0x14],eax
  41ed3f:	cmp    DWORD PTR [rbp-0x14],0x0
  41ed43:	je     41ed65 <flatcc_builder_finalize_aligned_buffer@@Base+0x155>
  41ed49:	cmp    QWORD PTR [rbp-0x20],0x0
  41ed4e:	je     41ed65 <flatcc_builder_finalize_aligned_buffer@@Base+0x155>
  41ed54:	mov    rdi,QWORD PTR [rbp-0x20]
  41ed58:	call   404030 <free@plt>
  41ed5d:	mov    QWORD PTR [rbp-0x20],0x0
  41ed65:	mov    rax,QWORD PTR [rbp-0x20]
  41ed69:	add    rsp,0x20
  41ed6d:	pop    rbp
  41ed6e:	ret    
  41ed6f:	nop

000000000041ed70 <flatcc_builder_aligned_alloc@@Base>:
  41ed70:	push   rbp
  41ed71:	mov    rbp,rsp
  41ed74:	sub    rsp,0x10
  41ed78:	mov    QWORD PTR [rbp-0x8],rdi
  41ed7c:	mov    QWORD PTR [rbp-0x10],rsi
  41ed80:	mov    rdi,QWORD PTR [rbp-0x8]
  41ed84:	mov    rsi,QWORD PTR [rbp-0x10]
  41ed88:	call   41ed00 <flatcc_builder_finalize_aligned_buffer@@Base+0xf0>
  41ed8d:	add    rsp,0x10
  41ed91:	pop    rbp
  41ed92:	ret    
  41ed93:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ed9d:	nop    DWORD PTR [rax]

000000000041eda0 <flatcc_builder_aligned_free@@Base>:
  41eda0:	push   rbp
  41eda1:	mov    rbp,rsp
  41eda4:	sub    rsp,0x10
  41eda8:	mov    QWORD PTR [rbp-0x8],rdi
  41edac:	mov    rdi,QWORD PTR [rbp-0x8]
  41edb0:	call   404030 <free@plt>
  41edb5:	add    rsp,0x10
  41edb9:	pop    rbp
  41edba:	ret    
  41edbb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041edc0 <flatcc_builder_get_emit_context@@Base>:
  41edc0:	push   rbp
  41edc1:	mov    rbp,rsp
  41edc4:	mov    QWORD PTR [rbp-0x8],rdi
  41edc8:	mov    rdi,QWORD PTR [rbp-0x8]
  41edcc:	mov    rax,QWORD PTR [rdi+0x38]
  41edd0:	pop    rbp
  41edd1:	ret    
  41edd2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41eddc:	nop    DWORD PTR [rax+0x0]
  41ede0:	push   rbp
  41ede1:	mov    rbp,rsp
  41ede4:	mov    ax,si
  41ede7:	mov    QWORD PTR [rbp-0x8],rdi
  41edeb:	mov    WORD PTR [rbp-0xa],ax
  41edef:	mov    rdi,QWORD PTR [rbp-0x8]
  41edf3:	mov    esi,DWORD PTR [rdi+0xf4]
  41edf9:	movzx  ecx,WORD PTR [rbp-0xa]
  41edfd:	sub    ecx,0x1
  41ee00:	and    esi,ecx
  41ee02:	mov    eax,esi
  41ee04:	pop    rbp
  41ee05:	ret    
  41ee06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ee10:	push   rbp
  41ee11:	mov    rbp,rsp
  41ee14:	sub    rsp,0x30
  41ee18:	mov    QWORD PTR [rbp-0x10],rdi
  41ee1c:	mov    QWORD PTR [rbp-0x18],rsi
  41ee20:	mov    DWORD PTR [rbp-0x1c],edx
  41ee23:	mov    rsi,QWORD PTR [rbp-0x10]
  41ee27:	add    rsi,0x58
  41ee2b:	add    rsi,0x10
  41ee2f:	mov    QWORD PTR [rbp-0x28],rsi
  41ee33:	mov    rsi,QWORD PTR [rbp-0x10]
  41ee37:	mov    rsi,QWORD PTR [rsi+0x50]
  41ee3b:	mov    rdi,QWORD PTR [rbp-0x10]
  41ee3f:	mov    rdi,QWORD PTR [rdi+0x40]
  41ee43:	mov    rax,QWORD PTR [rbp-0x28]
  41ee47:	mov    rcx,QWORD PTR [rbp-0x10]
  41ee4b:	mov    edx,DWORD PTR [rcx+0x28]
  41ee4e:	mov    ecx,edx
  41ee50:	add    rcx,QWORD PTR [rbp-0x18]
  41ee54:	mov    QWORD PTR [rbp-0x30],rsi
  41ee58:	mov    rsi,rax
  41ee5b:	mov    rdx,rcx
  41ee5e:	mov    r8d,0x1
  41ee64:	mov    ecx,r8d
  41ee67:	mov    rax,QWORD PTR [rbp-0x30]
  41ee6b:	call   rax
  41ee6d:	cmp    eax,0x0
  41ee70:	je     41ee82 <flatcc_builder_get_emit_context@@Base+0xc2>
  41ee76:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41ee7d:	jmp    41ee95 <flatcc_builder_get_emit_context@@Base+0xd5>
  41ee82:	mov    rdi,QWORD PTR [rbp-0x10]
  41ee86:	mov    esi,DWORD PTR [rbp-0x1c]
  41ee89:	call   41ad70 <flatcc_builder_start_struct@@Base+0x80>
  41ee8e:	mov    DWORD PTR [rbp-0x4],0x0
  41ee95:	mov    eax,DWORD PTR [rbp-0x4]
  41ee98:	add    rsp,0x30
  41ee9c:	pop    rbp
  41ee9d:	ret    
  41ee9e:	xchg   ax,ax
  41eea0:	push   rbp
  41eea1:	mov    rbp,rsp
  41eea4:	sub    rsp,0x30
  41eea8:	mov    QWORD PTR [rbp-0x10],rdi
  41eeac:	mov    rdi,QWORD PTR [rbp-0x10]
  41eeb0:	add    rdi,0x58
  41eeb4:	add    rdi,0x50
  41eeb8:	mov    QWORD PTR [rbp-0x18],rdi
  41eebc:	mov    rdi,QWORD PTR [rbp-0x10]
  41eec0:	cmp    DWORD PTR [rdi+0xe4],0x0
  41eec7:	jne    41eed2 <flatcc_builder_get_emit_context@@Base+0x112>
  41eecd:	jmp    41eef1 <flatcc_builder_get_emit_context@@Base+0x131>
  41eed2:	lea    rdi,[rip+0xa06d]        # 428f46 <flatcc_builder_padding_base@@Base+0x1396>
  41eed9:	lea    rsi,[rip+0x8ee2]        # 427dc2 <flatcc_builder_padding_base@@Base+0x212>
  41eee0:	mov    edx,0x156
  41eee5:	lea    rcx,[rip+0xa069]        # 428f55 <flatcc_builder_padding_base@@Base+0x13a5>
  41eeec:	call   404090 <__assert_fail@plt>
  41eef1:	mov    eax,0x10
  41eef6:	mov    ecx,eax
  41eef8:	xor    r8d,r8d
  41eefb:	mov    rdi,QWORD PTR [rbp-0x10]
  41eeff:	mov    rdx,QWORD PTR [rbp-0x10]
  41ef03:	mov    eax,DWORD PTR [rdx+0xe4]
  41ef09:	mov    edx,eax
  41ef0b:	mov    esi,0x6
  41ef10:	call   419980 <flatcc_builder_enter_user_frame_ptr@@Base+0xe0>
  41ef15:	cmp    rax,0x0
  41ef19:	jne    41ef2b <flatcc_builder_get_emit_context@@Base+0x16b>
  41ef1f:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41ef26:	jmp    41f00a <flatcc_builder_get_emit_context@@Base+0x24a>
  41ef2b:	mov    rax,QWORD PTR [rbp-0x10]
  41ef2f:	mov    DWORD PTR [rax+0xe4],0x10
  41ef39:	mov    QWORD PTR [rbp-0x20],0x100
  41ef41:	mov    rax,QWORD PTR [rbp-0x10]
  41ef45:	mov    rax,QWORD PTR [rax+0x50]
  41ef49:	mov    rcx,QWORD PTR [rbp-0x10]
  41ef4d:	mov    rdi,QWORD PTR [rcx+0x40]
  41ef51:	mov    rsi,QWORD PTR [rbp-0x18]
  41ef55:	mov    rdx,QWORD PTR [rbp-0x20]
  41ef59:	mov    ecx,0x1
  41ef5e:	mov    r8d,0x5
  41ef64:	call   rax
  41ef66:	cmp    eax,0x0
  41ef69:	je     41ef7b <flatcc_builder_get_emit_context@@Base+0x1bb>
  41ef6f:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41ef76:	jmp    41f00a <flatcc_builder_get_emit_context@@Base+0x24a>
  41ef7b:	jmp    41ef80 <flatcc_builder_get_emit_context@@Base+0x1c0>
  41ef80:	mov    rax,QWORD PTR [rbp-0x20]
  41ef84:	shl    rax,0x1
  41ef88:	mov    rcx,QWORD PTR [rbp-0x18]
  41ef8c:	cmp    rax,QWORD PTR [rcx+0x8]
  41ef90:	ja     41efa7 <flatcc_builder_get_emit_context@@Base+0x1e7>
  41ef96:	mov    rax,QWORD PTR [rbp-0x20]
  41ef9a:	shl    rax,0x1
  41ef9e:	mov    QWORD PTR [rbp-0x20],rax
  41efa2:	jmp    41ef80 <flatcc_builder_get_emit_context@@Base+0x1c0>
  41efa7:	mov    rax,QWORD PTR [rbp-0x20]
  41efab:	shr    rax,0x2
  41efaf:	mov    QWORD PTR [rbp-0x20],rax
  41efb3:	mov    QWORD PTR [rbp-0x28],0x0
  41efbb:	mov    eax,0x1
  41efc0:	mov    ecx,eax
  41efc2:	mov    rdx,QWORD PTR [rbp-0x28]
  41efc6:	mov    QWORD PTR [rbp-0x30],rcx
  41efca:	mov    rcx,rdx
  41efcd:	mov    rdx,QWORD PTR [rbp-0x30]
  41efd1:	shl    rdx,cl
  41efd4:	cmp    rdx,QWORD PTR [rbp-0x20]
  41efd8:	jae    41eff4 <flatcc_builder_get_emit_context@@Base+0x234>
  41efde:	jmp    41efe3 <flatcc_builder_get_emit_context@@Base+0x223>
  41efe3:	mov    rax,QWORD PTR [rbp-0x28]
  41efe7:	add    rax,0x1
  41efeb:	mov    QWORD PTR [rbp-0x28],rax
  41efef:	jmp    41efbb <flatcc_builder_get_emit_context@@Base+0x1fb>
  41eff4:	mov    rax,QWORD PTR [rbp-0x28]
  41eff8:	mov    rcx,QWORD PTR [rbp-0x10]
  41effc:	mov    QWORD PTR [rcx+0xd8],rax
  41f003:	mov    DWORD PTR [rbp-0x4],0x0
  41f00a:	mov    eax,DWORD PTR [rbp-0x4]
  41f00d:	add    rsp,0x30
  41f011:	pop    rbp
  41f012:	ret    
  41f013:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f01d:	nop    DWORD PTR [rax]

000000000041f020 <flatcc_emitter_recycle_page@@Base>:
  41f020:	push   rbp
  41f021:	mov    rbp,rsp
  41f024:	mov    QWORD PTR [rbp-0x10],rdi
  41f028:	mov    QWORD PTR [rbp-0x18],rsi
  41f02c:	mov    rsi,QWORD PTR [rbp-0x18]
  41f030:	mov    rdi,QWORD PTR [rbp-0x10]
  41f034:	cmp    rsi,QWORD PTR [rdi]
  41f037:	je     41f04f <flatcc_emitter_recycle_page@@Base+0x2f>
  41f03d:	mov    rax,QWORD PTR [rbp-0x18]
  41f041:	mov    rcx,QWORD PTR [rbp-0x10]
  41f045:	cmp    rax,QWORD PTR [rcx+0x8]
  41f049:	jne    41f05b <flatcc_emitter_recycle_page@@Base+0x3b>
  41f04f:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41f056:	jmp    41f0f3 <flatcc_emitter_recycle_page@@Base+0xd3>
  41f05b:	mov    rax,QWORD PTR [rbp-0x18]
  41f05f:	mov    rax,QWORD PTR [rax+0xb88]
  41f066:	mov    rcx,QWORD PTR [rbp-0x18]
  41f06a:	mov    rcx,QWORD PTR [rcx+0xb80]
  41f071:	mov    QWORD PTR [rcx+0xb88],rax
  41f078:	mov    rax,QWORD PTR [rbp-0x18]
  41f07c:	mov    rax,QWORD PTR [rax+0xb80]
  41f083:	mov    rcx,QWORD PTR [rbp-0x18]
  41f087:	mov    rcx,QWORD PTR [rcx+0xb88]
  41f08e:	mov    QWORD PTR [rcx+0xb80],rax
  41f095:	mov    rax,QWORD PTR [rbp-0x10]
  41f099:	mov    rax,QWORD PTR [rax]
  41f09c:	mov    rax,QWORD PTR [rax+0xb88]
  41f0a3:	mov    rcx,QWORD PTR [rbp-0x18]
  41f0a7:	mov    QWORD PTR [rcx+0xb88],rax
  41f0ae:	mov    rax,QWORD PTR [rbp-0x10]
  41f0b2:	mov    rax,QWORD PTR [rax]
  41f0b5:	mov    rcx,QWORD PTR [rbp-0x18]
  41f0b9:	mov    QWORD PTR [rcx+0xb80],rax
  41f0c0:	mov    rax,QWORD PTR [rbp-0x18]
  41f0c4:	mov    rcx,QWORD PTR [rbp-0x18]
  41f0c8:	mov    rcx,QWORD PTR [rcx+0xb88]
  41f0cf:	mov    QWORD PTR [rcx+0xb80],rax
  41f0d6:	mov    rax,QWORD PTR [rbp-0x18]
  41f0da:	mov    rcx,QWORD PTR [rbp-0x18]
  41f0de:	mov    rcx,QWORD PTR [rcx+0xb80]
  41f0e5:	mov    QWORD PTR [rcx+0xb88],rax
  41f0ec:	mov    DWORD PTR [rbp-0x4],0x0
  41f0f3:	mov    eax,DWORD PTR [rbp-0x4]
  41f0f6:	pop    rbp
  41f0f7:	ret    
  41f0f8:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041f100 <flatcc_emitter_reset@@Base>:
  41f100:	push   rbp
  41f101:	mov    rbp,rsp
  41f104:	sub    rsp,0x20
  41f108:	mov    QWORD PTR [rbp-0x8],rdi
  41f10c:	mov    rdi,QWORD PTR [rbp-0x8]
  41f110:	mov    rdi,QWORD PTR [rdi]
  41f113:	mov    QWORD PTR [rbp-0x10],rdi
  41f117:	mov    rdi,QWORD PTR [rbp-0x8]
  41f11b:	cmp    QWORD PTR [rdi],0x0
  41f11f:	jne    41f12a <flatcc_emitter_reset@@Base+0x2a>
  41f125:	jmp    41f299 <flatcc_emitter_reset@@Base+0x199>
  41f12a:	xor    eax,eax
  41f12c:	mov    rcx,QWORD PTR [rbp-0x8]
  41f130:	mov    rcx,QWORD PTR [rcx]
  41f133:	mov    rdx,QWORD PTR [rbp-0x8]
  41f137:	mov    QWORD PTR [rdx+0x8],rcx
  41f13b:	mov    rcx,QWORD PTR [rbp-0x8]
  41f13f:	mov    rcx,QWORD PTR [rcx]
  41f142:	add    rcx,0x5c0
  41f149:	mov    rdx,QWORD PTR [rbp-0x8]
  41f14d:	mov    QWORD PTR [rdx+0x10],rcx
  41f151:	mov    rcx,QWORD PTR [rbp-0x8]
  41f155:	mov    rcx,QWORD PTR [rcx+0x10]
  41f159:	mov    rdx,QWORD PTR [rbp-0x8]
  41f15d:	mov    QWORD PTR [rdx+0x20],rcx
  41f161:	mov    rcx,QWORD PTR [rbp-0x8]
  41f165:	mov    QWORD PTR [rcx+0x18],0x5c0
  41f16d:	mov    rcx,QWORD PTR [rbp-0x8]
  41f171:	mov    QWORD PTR [rcx+0x28],0x5c0
  41f179:	mov    rcx,QWORD PTR [rbp-0x8]
  41f17d:	mov    rcx,QWORD PTR [rcx+0x18]
  41f181:	mov    esi,ecx
  41f183:	sub    eax,esi
  41f185:	mov    rcx,QWORD PTR [rbp-0x8]
  41f189:	mov    rcx,QWORD PTR [rcx]
  41f18c:	mov    DWORD PTR [rcx+0xb90],eax
  41f192:	mov    rcx,QWORD PTR [rbp-0x8]
  41f196:	cmp    QWORD PTR [rcx+0x40],0x0
  41f19b:	jne    41f1b1 <flatcc_emitter_reset@@Base+0xb1>
  41f1a1:	mov    rax,QWORD PTR [rbp-0x8]
  41f1a5:	mov    rax,QWORD PTR [rax+0x30]
  41f1a9:	mov    rcx,QWORD PTR [rbp-0x8]
  41f1ad:	mov    QWORD PTR [rcx+0x40],rax
  41f1b1:	mov    rax,QWORD PTR [rbp-0x8]
  41f1b5:	imul   rax,QWORD PTR [rax+0x40],0x3
  41f1ba:	shr    rax,0x2
  41f1be:	mov    rcx,QWORD PTR [rbp-0x8]
  41f1c2:	mov    rcx,QWORD PTR [rcx+0x30]
  41f1c6:	shr    rcx,0x2
  41f1ca:	add    rax,rcx
  41f1cd:	mov    rcx,QWORD PTR [rbp-0x8]
  41f1d1:	mov    QWORD PTR [rcx+0x40],rax
  41f1d5:	mov    rax,QWORD PTR [rbp-0x8]
  41f1d9:	mov    QWORD PTR [rax+0x30],0x0
  41f1e1:	xor    eax,eax
  41f1e3:	mov    cl,al
  41f1e5:	mov    rdx,QWORD PTR [rbp-0x8]
  41f1e9:	mov    rdx,QWORD PTR [rdx+0x40]
  41f1ed:	shl    rdx,0x1
  41f1f1:	mov    rsi,QWORD PTR [rbp-0x8]
  41f1f5:	cmp    rdx,QWORD PTR [rsi+0x38]
  41f1f9:	mov    BYTE PTR [rbp-0x11],cl
  41f1fc:	jae    41f21e <flatcc_emitter_reset@@Base+0x11e>
  41f202:	mov    rax,QWORD PTR [rbp-0x8]
  41f206:	mov    rax,QWORD PTR [rax+0x8]
  41f20a:	mov    rax,QWORD PTR [rax+0xb80]
  41f211:	mov    rcx,QWORD PTR [rbp-0x8]
  41f215:	cmp    rax,QWORD PTR [rcx]
  41f218:	setne  dl
  41f21b:	mov    BYTE PTR [rbp-0x11],dl
  41f21e:	mov    al,BYTE PTR [rbp-0x11]
  41f221:	test   al,0x1
  41f223:	jne    41f22e <flatcc_emitter_reset@@Base+0x12e>
  41f229:	jmp    41f299 <flatcc_emitter_reset@@Base+0x199>
  41f22e:	mov    rax,QWORD PTR [rbp-0x8]
  41f232:	mov    rax,QWORD PTR [rax+0x8]
  41f236:	mov    rax,QWORD PTR [rax+0xb80]
  41f23d:	mov    QWORD PTR [rbp-0x10],rax
  41f241:	mov    rax,QWORD PTR [rbp-0x10]
  41f245:	mov    rax,QWORD PTR [rax+0xb80]
  41f24c:	mov    rcx,QWORD PTR [rbp-0x8]
  41f250:	mov    rcx,QWORD PTR [rcx+0x8]
  41f254:	mov    QWORD PTR [rcx+0xb80],rax
  41f25b:	mov    rax,QWORD PTR [rbp-0x8]
  41f25f:	mov    rax,QWORD PTR [rax+0x8]
  41f263:	mov    rcx,QWORD PTR [rbp-0x10]
  41f267:	mov    rcx,QWORD PTR [rcx+0xb80]
  41f26e:	mov    QWORD PTR [rcx+0xb88],rax
  41f275:	mov    rax,QWORD PTR [rbp-0x10]
  41f279:	mov    rdi,rax
  41f27c:	call   404030 <free@plt>
  41f281:	mov    rax,QWORD PTR [rbp-0x8]
  41f285:	mov    rcx,QWORD PTR [rax+0x38]
  41f289:	sub    rcx,0xb80
  41f290:	mov    QWORD PTR [rax+0x38],rcx
  41f294:	jmp    41f1e1 <flatcc_emitter_reset@@Base+0xe1>
  41f299:	add    rsp,0x20
  41f29d:	pop    rbp
  41f29e:	ret    
  41f29f:	nop

000000000041f2a0 <flatcc_emitter_clear@@Base>:
  41f2a0:	push   rbp
  41f2a1:	mov    rbp,rsp
  41f2a4:	sub    rsp,0x10
  41f2a8:	mov    QWORD PTR [rbp-0x8],rdi
  41f2ac:	mov    rdi,QWORD PTR [rbp-0x8]
  41f2b0:	mov    rdi,QWORD PTR [rdi]
  41f2b3:	mov    QWORD PTR [rbp-0x10],rdi
  41f2b7:	cmp    QWORD PTR [rbp-0x10],0x0
  41f2bc:	jne    41f2c7 <flatcc_emitter_clear@@Base+0x27>
  41f2c2:	jmp    41f337 <flatcc_emitter_clear@@Base+0x97>
  41f2c7:	mov    rax,QWORD PTR [rbp-0x10]
  41f2cb:	mov    rax,QWORD PTR [rax+0xb88]
  41f2d2:	mov    QWORD PTR [rax+0xb80],0x0
  41f2dd:	mov    rax,QWORD PTR [rbp-0x10]
  41f2e1:	cmp    QWORD PTR [rax+0xb80],0x0
  41f2e9:	je     41f316 <flatcc_emitter_clear@@Base+0x76>
  41f2ef:	mov    rax,QWORD PTR [rbp-0x10]
  41f2f3:	mov    rax,QWORD PTR [rax+0xb80]
  41f2fa:	mov    QWORD PTR [rbp-0x10],rax
  41f2fe:	mov    rax,QWORD PTR [rbp-0x10]
  41f302:	mov    rax,QWORD PTR [rax+0xb88]
  41f309:	mov    rdi,rax
  41f30c:	call   404030 <free@plt>
  41f311:	jmp    41f2dd <flatcc_emitter_clear@@Base+0x3d>
  41f316:	mov    rax,QWORD PTR [rbp-0x10]
  41f31a:	mov    rdi,rax
  41f31d:	call   404030 <free@plt>
  41f322:	xor    esi,esi
  41f324:	mov    ecx,0x48
  41f329:	mov    edx,ecx
  41f32b:	mov    rax,QWORD PTR [rbp-0x8]
  41f32f:	mov    rdi,rax
  41f332:	call   4040a0 <memset@plt>
  41f337:	add    rsp,0x10
  41f33b:	pop    rbp
  41f33c:	ret    
  41f33d:	nop    DWORD PTR [rax]

000000000041f340 <flatcc_emitter@@Base>:
  41f340:	push   rbp
  41f341:	mov    rbp,rsp
  41f344:	sub    rsp,0x40
  41f348:	mov    QWORD PTR [rbp-0x10],rdi
  41f34c:	mov    QWORD PTR [rbp-0x18],rsi
  41f350:	mov    DWORD PTR [rbp-0x1c],edx
  41f353:	mov    DWORD PTR [rbp-0x20],ecx
  41f356:	mov    QWORD PTR [rbp-0x28],r8
  41f35a:	mov    rsi,QWORD PTR [rbp-0x10]
  41f35e:	mov    QWORD PTR [rbp-0x30],rsi
  41f362:	mov    rsi,QWORD PTR [rbp-0x28]
  41f366:	mov    rdi,QWORD PTR [rbp-0x30]
  41f36a:	add    rsi,QWORD PTR [rdi+0x30]
  41f36e:	mov    QWORD PTR [rdi+0x30],rsi
  41f372:	cmp    DWORD PTR [rbp-0x20],0x0
  41f376:	jge    41f438 <flatcc_emitter@@Base+0xf8>
  41f37c:	mov    rax,QWORD PTR [rbp-0x28]
  41f380:	mov    rcx,QWORD PTR [rbp-0x30]
  41f384:	cmp    rax,QWORD PTR [rcx+0x18]
  41f388:	ja     41f3cc <flatcc_emitter@@Base+0x8c>
  41f38e:	xor    eax,eax
  41f390:	mov    ecx,eax
  41f392:	mov    rdx,QWORD PTR [rbp-0x28]
  41f396:	mov    rsi,QWORD PTR [rbp-0x30]
  41f39a:	mov    rdi,QWORD PTR [rsi+0x10]
  41f39e:	sub    rcx,rdx
  41f3a1:	add    rdi,rcx
  41f3a4:	mov    QWORD PTR [rsi+0x10],rdi
  41f3a8:	mov    rcx,QWORD PTR [rbp-0x28]
  41f3ac:	mov    rdx,QWORD PTR [rbp-0x30]
  41f3b0:	mov    rsi,QWORD PTR [rdx+0x18]
  41f3b4:	sub    rsi,rcx
  41f3b7:	mov    QWORD PTR [rdx+0x18],rsi
  41f3bb:	mov    rcx,QWORD PTR [rbp-0x30]
  41f3bf:	mov    rcx,QWORD PTR [rcx+0x10]
  41f3c3:	mov    QWORD PTR [rbp-0x38],rcx
  41f3c7:	jmp    41f4e6 <flatcc_emitter@@Base+0x1a6>
  41f3cc:	mov    eax,DWORD PTR [rbp-0x1c]
  41f3cf:	mov    rcx,QWORD PTR [rbp-0x18]
  41f3d3:	movsxd rdx,eax
  41f3d6:	shl    rdx,0x4
  41f3da:	add    rcx,rdx
  41f3dd:	mov    QWORD PTR [rbp-0x18],rcx
  41f3e1:	mov    eax,DWORD PTR [rbp-0x1c]
  41f3e4:	mov    ecx,eax
  41f3e6:	add    ecx,0xffffffff
  41f3e9:	mov    DWORD PTR [rbp-0x1c],ecx
  41f3ec:	cmp    eax,0x0
  41f3ef:	je     41f433 <flatcc_emitter@@Base+0xf3>
  41f3f5:	mov    rax,QWORD PTR [rbp-0x18]
  41f3f9:	add    rax,0xfffffffffffffff0
  41f3fd:	mov    QWORD PTR [rbp-0x18],rax
  41f401:	mov    rdi,QWORD PTR [rbp-0x30]
  41f405:	mov    rax,QWORD PTR [rbp-0x18]
  41f409:	mov    rsi,QWORD PTR [rax]
  41f40c:	mov    rax,QWORD PTR [rbp-0x18]
  41f410:	mov    rdx,QWORD PTR [rax+0x8]
  41f414:	call   41f550 <flatcc_emitter@@Base+0x210>
  41f419:	cmp    eax,0x0
  41f41c:	je     41f42e <flatcc_emitter@@Base+0xee>
  41f422:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41f429:	jmp    41f53f <flatcc_emitter@@Base+0x1ff>
  41f42e:	jmp    41f3e1 <flatcc_emitter@@Base+0xa1>
  41f433:	jmp    41f4da <flatcc_emitter@@Base+0x19a>
  41f438:	mov    rax,QWORD PTR [rbp-0x28]
  41f43c:	mov    rcx,QWORD PTR [rbp-0x30]
  41f440:	cmp    rax,QWORD PTR [rcx+0x28]
  41f444:	ja     41f47e <flatcc_emitter@@Base+0x13e>
  41f44a:	mov    rax,QWORD PTR [rbp-0x30]
  41f44e:	mov    rax,QWORD PTR [rax+0x20]
  41f452:	mov    QWORD PTR [rbp-0x38],rax
  41f456:	mov    rax,QWORD PTR [rbp-0x28]
  41f45a:	mov    rcx,QWORD PTR [rbp-0x30]
  41f45e:	add    rax,QWORD PTR [rcx+0x20]
  41f462:	mov    QWORD PTR [rcx+0x20],rax
  41f466:	mov    rax,QWORD PTR [rbp-0x28]
  41f46a:	mov    rcx,QWORD PTR [rbp-0x30]
  41f46e:	mov    rdx,QWORD PTR [rcx+0x28]
  41f472:	sub    rdx,rax
  41f475:	mov    QWORD PTR [rcx+0x28],rdx
  41f479:	jmp    41f4e6 <flatcc_emitter@@Base+0x1a6>
  41f47e:	jmp    41f483 <flatcc_emitter@@Base+0x143>
  41f483:	mov    eax,DWORD PTR [rbp-0x1c]
  41f486:	mov    ecx,eax
  41f488:	add    ecx,0xffffffff
  41f48b:	mov    DWORD PTR [rbp-0x1c],ecx
  41f48e:	cmp    eax,0x0
  41f491:	je     41f4d5 <flatcc_emitter@@Base+0x195>
  41f497:	mov    rdi,QWORD PTR [rbp-0x30]
  41f49b:	mov    rax,QWORD PTR [rbp-0x18]
  41f49f:	mov    rsi,QWORD PTR [rax]
  41f4a2:	mov    rax,QWORD PTR [rbp-0x18]
  41f4a6:	mov    rdx,QWORD PTR [rax+0x8]
  41f4aa:	call   41f650 <flatcc_emitter@@Base+0x310>
  41f4af:	cmp    eax,0x0
  41f4b2:	je     41f4c4 <flatcc_emitter@@Base+0x184>
  41f4b8:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41f4bf:	jmp    41f53f <flatcc_emitter@@Base+0x1ff>
  41f4c4:	mov    rax,QWORD PTR [rbp-0x18]
  41f4c8:	add    rax,0x10
  41f4cc:	mov    QWORD PTR [rbp-0x18],rax
  41f4d0:	jmp    41f483 <flatcc_emitter@@Base+0x143>
  41f4d5:	jmp    41f4da <flatcc_emitter@@Base+0x19a>
  41f4da:	mov    DWORD PTR [rbp-0x4],0x0
  41f4e1:	jmp    41f53f <flatcc_emitter@@Base+0x1ff>
  41f4e6:	jmp    41f4eb <flatcc_emitter@@Base+0x1ab>
  41f4eb:	mov    eax,DWORD PTR [rbp-0x1c]
  41f4ee:	mov    ecx,eax
  41f4f0:	add    ecx,0xffffffff
  41f4f3:	mov    DWORD PTR [rbp-0x1c],ecx
  41f4f6:	cmp    eax,0x0
  41f4f9:	je     41f538 <flatcc_emitter@@Base+0x1f8>
  41f4ff:	mov    rdi,QWORD PTR [rbp-0x38]
  41f503:	mov    rax,QWORD PTR [rbp-0x18]
  41f507:	mov    rsi,QWORD PTR [rax]
  41f50a:	mov    rax,QWORD PTR [rbp-0x18]
  41f50e:	mov    rdx,QWORD PTR [rax+0x8]
  41f512:	call   4040f0 <memcpy@plt>
  41f517:	mov    rax,QWORD PTR [rbp-0x18]
  41f51b:	mov    rax,QWORD PTR [rax+0x8]
  41f51f:	add    rax,QWORD PTR [rbp-0x38]
  41f523:	mov    QWORD PTR [rbp-0x38],rax
  41f527:	mov    rax,QWORD PTR [rbp-0x18]
  41f52b:	add    rax,0x10
  41f52f:	mov    QWORD PTR [rbp-0x18],rax
  41f533:	jmp    41f4eb <flatcc_emitter@@Base+0x1ab>
  41f538:	mov    DWORD PTR [rbp-0x4],0x0
  41f53f:	mov    eax,DWORD PTR [rbp-0x4]
  41f542:	add    rsp,0x40
  41f546:	pop    rbp
  41f547:	ret    
  41f548:	nop    DWORD PTR [rax+rax*1+0x0]
  41f550:	push   rbp
  41f551:	mov    rbp,rsp
  41f554:	sub    rsp,0x30
  41f558:	mov    QWORD PTR [rbp-0x10],rdi
  41f55c:	mov    QWORD PTR [rbp-0x18],rsi
  41f560:	mov    QWORD PTR [rbp-0x20],rdx
  41f564:	mov    rdx,QWORD PTR [rbp-0x20]
  41f568:	add    rdx,QWORD PTR [rbp-0x18]
  41f56c:	mov    QWORD PTR [rbp-0x18],rdx
  41f570:	cmp    QWORD PTR [rbp-0x20],0x0
  41f575:	je     41f63f <flatcc_emitter@@Base+0x2ff>
  41f57b:	mov    rax,QWORD PTR [rbp-0x20]
  41f57f:	mov    QWORD PTR [rbp-0x28],rax
  41f583:	mov    rax,QWORD PTR [rbp-0x28]
  41f587:	mov    rcx,QWORD PTR [rbp-0x10]
  41f58b:	cmp    rax,QWORD PTR [rcx+0x18]
  41f58f:	jbe    41f5d4 <flatcc_emitter@@Base+0x294>
  41f595:	mov    rax,QWORD PTR [rbp-0x10]
  41f599:	mov    rax,QWORD PTR [rax+0x18]
  41f59d:	mov    QWORD PTR [rbp-0x28],rax
  41f5a1:	cmp    QWORD PTR [rbp-0x28],0x0
  41f5a6:	jne    41f5cf <flatcc_emitter@@Base+0x28f>
  41f5ac:	mov    rdi,QWORD PTR [rbp-0x10]
  41f5b0:	call   41f880 <flatcc_emitter_copy_buffer@@Base+0x150>
  41f5b5:	cmp    eax,0x0
  41f5b8:	je     41f5ca <flatcc_emitter@@Base+0x28a>
  41f5be:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41f5c5:	jmp    41f646 <flatcc_emitter@@Base+0x306>
  41f5ca:	jmp    41f570 <flatcc_emitter@@Base+0x230>
  41f5cf:	jmp    41f5d4 <flatcc_emitter@@Base+0x294>
  41f5d4:	xor    eax,eax
  41f5d6:	mov    ecx,eax
  41f5d8:	mov    rdx,QWORD PTR [rbp-0x28]
  41f5dc:	mov    rsi,QWORD PTR [rbp-0x10]
  41f5e0:	mov    rdi,QWORD PTR [rsi+0x10]
  41f5e4:	mov    r8,rcx
  41f5e7:	sub    r8,rdx
  41f5ea:	add    rdi,r8
  41f5ed:	mov    QWORD PTR [rsi+0x10],rdi
  41f5f1:	mov    rdx,QWORD PTR [rbp-0x28]
  41f5f5:	mov    rsi,QWORD PTR [rbp-0x10]
  41f5f9:	mov    rdi,QWORD PTR [rsi+0x18]
  41f5fd:	sub    rdi,rdx
  41f600:	mov    QWORD PTR [rsi+0x18],rdi
  41f604:	mov    rdx,QWORD PTR [rbp-0x28]
  41f608:	mov    rsi,QWORD PTR [rbp-0x18]
  41f60c:	sub    rcx,rdx
  41f60f:	add    rsi,rcx
  41f612:	mov    QWORD PTR [rbp-0x18],rsi
  41f616:	mov    rcx,QWORD PTR [rbp-0x28]
  41f61a:	mov    rdx,QWORD PTR [rbp-0x20]
  41f61e:	sub    rdx,rcx
  41f621:	mov    QWORD PTR [rbp-0x20],rdx
  41f625:	mov    rcx,QWORD PTR [rbp-0x10]
  41f629:	mov    rdi,QWORD PTR [rcx+0x10]
  41f62d:	mov    rsi,QWORD PTR [rbp-0x18]
  41f631:	mov    rdx,QWORD PTR [rbp-0x28]
  41f635:	call   4040f0 <memcpy@plt>
  41f63a:	jmp    41f570 <flatcc_emitter@@Base+0x230>
  41f63f:	mov    DWORD PTR [rbp-0x4],0x0
  41f646:	mov    eax,DWORD PTR [rbp-0x4]
  41f649:	add    rsp,0x30
  41f64d:	pop    rbp
  41f64e:	ret    
  41f64f:	nop
  41f650:	push   rbp
  41f651:	mov    rbp,rsp
  41f654:	sub    rsp,0x30
  41f658:	mov    QWORD PTR [rbp-0x10],rdi
  41f65c:	mov    QWORD PTR [rbp-0x18],rsi
  41f660:	mov    QWORD PTR [rbp-0x20],rdx
  41f664:	cmp    QWORD PTR [rbp-0x20],0x0
  41f669:	je     41f720 <flatcc_emitter@@Base+0x3e0>
  41f66f:	mov    rax,QWORD PTR [rbp-0x20]
  41f673:	mov    QWORD PTR [rbp-0x28],rax
  41f677:	mov    rax,QWORD PTR [rbp-0x28]
  41f67b:	mov    rcx,QWORD PTR [rbp-0x10]
  41f67f:	cmp    rax,QWORD PTR [rcx+0x28]
  41f683:	jbe    41f6c8 <flatcc_emitter@@Base+0x388>
  41f689:	mov    rax,QWORD PTR [rbp-0x10]
  41f68d:	mov    rax,QWORD PTR [rax+0x28]
  41f691:	mov    QWORD PTR [rbp-0x28],rax
  41f695:	cmp    QWORD PTR [rbp-0x28],0x0
  41f69a:	jne    41f6c3 <flatcc_emitter@@Base+0x383>
  41f6a0:	mov    rdi,QWORD PTR [rbp-0x10]
  41f6a4:	call   41faa0 <flatcc_emitter_copy_buffer@@Base+0x370>
  41f6a9:	cmp    eax,0x0
  41f6ac:	je     41f6be <flatcc_emitter@@Base+0x37e>
  41f6b2:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41f6b9:	jmp    41f727 <flatcc_emitter@@Base+0x3e7>
  41f6be:	jmp    41f664 <flatcc_emitter@@Base+0x324>
  41f6c3:	jmp    41f6c8 <flatcc_emitter@@Base+0x388>
  41f6c8:	mov    rax,QWORD PTR [rbp-0x10]
  41f6cc:	mov    rdi,QWORD PTR [rax+0x20]
  41f6d0:	mov    rsi,QWORD PTR [rbp-0x18]
  41f6d4:	mov    rdx,QWORD PTR [rbp-0x28]
  41f6d8:	call   4040f0 <memcpy@plt>
  41f6dd:	mov    rax,QWORD PTR [rbp-0x28]
  41f6e1:	mov    rdx,QWORD PTR [rbp-0x20]
  41f6e5:	sub    rdx,rax
  41f6e8:	mov    QWORD PTR [rbp-0x20],rdx
  41f6ec:	mov    rax,QWORD PTR [rbp-0x28]
  41f6f0:	add    rax,QWORD PTR [rbp-0x18]
  41f6f4:	mov    QWORD PTR [rbp-0x18],rax
  41f6f8:	mov    rax,QWORD PTR [rbp-0x28]
  41f6fc:	mov    rdx,QWORD PTR [rbp-0x10]
  41f700:	add    rax,QWORD PTR [rdx+0x20]
  41f704:	mov    QWORD PTR [rdx+0x20],rax
  41f708:	mov    rax,QWORD PTR [rbp-0x28]
  41f70c:	mov    rdx,QWORD PTR [rbp-0x10]
  41f710:	mov    rsi,QWORD PTR [rdx+0x28]
  41f714:	sub    rsi,rax
  41f717:	mov    QWORD PTR [rdx+0x28],rsi
  41f71b:	jmp    41f664 <flatcc_emitter@@Base+0x324>
  41f720:	mov    DWORD PTR [rbp-0x4],0x0
  41f727:	mov    eax,DWORD PTR [rbp-0x4]
  41f72a:	add    rsp,0x30
  41f72e:	pop    rbp
  41f72f:	ret    

000000000041f730 <flatcc_emitter_copy_buffer@@Base>:
  41f730:	push   rbp
  41f731:	mov    rbp,rsp
  41f734:	sub    rsp,0x30
  41f738:	mov    QWORD PTR [rbp-0x10],rdi
  41f73c:	mov    QWORD PTR [rbp-0x18],rsi
  41f740:	mov    QWORD PTR [rbp-0x20],rdx
  41f744:	mov    rdx,QWORD PTR [rbp-0x20]
  41f748:	mov    rsi,QWORD PTR [rbp-0x10]
  41f74c:	cmp    rdx,QWORD PTR [rsi+0x30]
  41f750:	jae    41f763 <flatcc_emitter_copy_buffer@@Base+0x33>
  41f756:	mov    QWORD PTR [rbp-0x8],0x0
  41f75e:	jmp    41f86f <flatcc_emitter_copy_buffer@@Base+0x13f>
  41f763:	mov    rax,QWORD PTR [rbp-0x10]
  41f767:	cmp    QWORD PTR [rax],0x0
  41f76b:	jne    41f77e <flatcc_emitter_copy_buffer@@Base+0x4e>
  41f771:	mov    QWORD PTR [rbp-0x8],0x0
  41f779:	jmp    41f86f <flatcc_emitter_copy_buffer@@Base+0x13f>
  41f77e:	mov    rax,QWORD PTR [rbp-0x10]
  41f782:	mov    rax,QWORD PTR [rax]
  41f785:	mov    rcx,QWORD PTR [rbp-0x10]
  41f789:	cmp    rax,QWORD PTR [rcx+0x8]
  41f78d:	jne    41f7b9 <flatcc_emitter_copy_buffer@@Base+0x89>
  41f793:	mov    rdi,QWORD PTR [rbp-0x18]
  41f797:	mov    rax,QWORD PTR [rbp-0x10]
  41f79b:	mov    rsi,QWORD PTR [rax+0x10]
  41f79f:	mov    rax,QWORD PTR [rbp-0x10]
  41f7a3:	mov    rdx,QWORD PTR [rax+0x30]
  41f7a7:	call   4040f0 <memcpy@plt>
  41f7ac:	mov    rax,QWORD PTR [rbp-0x18]
  41f7b0:	mov    QWORD PTR [rbp-0x8],rax
  41f7b4:	jmp    41f86f <flatcc_emitter_copy_buffer@@Base+0x13f>
  41f7b9:	mov    eax,0xb80
  41f7be:	mov    ecx,eax
  41f7c0:	mov    rdx,QWORD PTR [rbp-0x10]
  41f7c4:	sub    rcx,QWORD PTR [rdx+0x18]
  41f7c8:	mov    QWORD PTR [rbp-0x30],rcx
  41f7cc:	mov    rdi,QWORD PTR [rbp-0x18]
  41f7d0:	mov    rcx,QWORD PTR [rbp-0x10]
  41f7d4:	mov    rsi,QWORD PTR [rcx+0x10]
  41f7d8:	mov    rdx,QWORD PTR [rbp-0x30]
  41f7dc:	call   4040f0 <memcpy@plt>
  41f7e1:	mov    rcx,QWORD PTR [rbp-0x18]
  41f7e5:	add    rcx,QWORD PTR [rbp-0x30]
  41f7e9:	mov    QWORD PTR [rbp-0x18],rcx
  41f7ed:	mov    rcx,QWORD PTR [rbp-0x10]
  41f7f1:	mov    rcx,QWORD PTR [rcx]
  41f7f4:	mov    rcx,QWORD PTR [rcx+0xb80]
  41f7fb:	mov    QWORD PTR [rbp-0x28],rcx
  41f7ff:	mov    rax,QWORD PTR [rbp-0x28]
  41f803:	mov    rcx,QWORD PTR [rbp-0x10]
  41f807:	cmp    rax,QWORD PTR [rcx+0x8]
  41f80b:	je     41f848 <flatcc_emitter_copy_buffer@@Base+0x118>
  41f811:	mov    eax,0xb80
  41f816:	mov    edx,eax
  41f818:	mov    rdi,QWORD PTR [rbp-0x18]
  41f81c:	mov    rsi,QWORD PTR [rbp-0x28]
  41f820:	call   4040f0 <memcpy@plt>
  41f825:	mov    rdx,QWORD PTR [rbp-0x18]
  41f829:	add    rdx,0xb80
  41f830:	mov    QWORD PTR [rbp-0x18],rdx
  41f834:	mov    rdx,QWORD PTR [rbp-0x28]
  41f838:	mov    rdx,QWORD PTR [rdx+0xb80]
  41f83f:	mov    QWORD PTR [rbp-0x28],rdx
  41f843:	jmp    41f7ff <flatcc_emitter_copy_buffer@@Base+0xcf>
  41f848:	mov    eax,0xb80
  41f84d:	mov    ecx,eax
  41f84f:	mov    rdi,QWORD PTR [rbp-0x18]
  41f853:	mov    rsi,QWORD PTR [rbp-0x28]
  41f857:	mov    rdx,QWORD PTR [rbp-0x10]
  41f85b:	sub    rcx,QWORD PTR [rdx+0x28]
  41f85f:	mov    rdx,rcx
  41f862:	call   4040f0 <memcpy@plt>
  41f867:	mov    rcx,QWORD PTR [rbp-0x18]
  41f86b:	mov    QWORD PTR [rbp-0x8],rcx
  41f86f:	mov    rax,QWORD PTR [rbp-0x8]
  41f873:	add    rsp,0x30
  41f877:	pop    rbp
  41f878:	ret    
  41f879:	nop    DWORD PTR [rax+0x0]
  41f880:	push   rbp
  41f881:	mov    rbp,rsp
  41f884:	sub    rsp,0x20
  41f888:	mov    QWORD PTR [rbp-0x10],rdi
  41f88c:	mov    QWORD PTR [rbp-0x18],0x0
  41f894:	mov    rdi,QWORD PTR [rbp-0x10]
  41f898:	cmp    QWORD PTR [rdi],0x0
  41f89c:	je     41f8ff <flatcc_emitter_copy_buffer@@Base+0x1cf>
  41f8a2:	mov    rax,QWORD PTR [rbp-0x10]
  41f8a6:	mov    rax,QWORD PTR [rax]
  41f8a9:	mov    rax,QWORD PTR [rax+0xb88]
  41f8b0:	mov    rcx,QWORD PTR [rbp-0x10]
  41f8b4:	cmp    rax,QWORD PTR [rcx+0x8]
  41f8b8:	je     41f8ff <flatcc_emitter_copy_buffer@@Base+0x1cf>
  41f8be:	mov    rax,QWORD PTR [rbp-0x10]
  41f8c2:	mov    rax,QWORD PTR [rax]
  41f8c5:	mov    ecx,DWORD PTR [rax+0xb90]
  41f8cb:	sub    ecx,0xb80
  41f8d1:	mov    rax,QWORD PTR [rbp-0x10]
  41f8d5:	mov    rax,QWORD PTR [rax]
  41f8d8:	mov    rax,QWORD PTR [rax+0xb88]
  41f8df:	mov    DWORD PTR [rax+0xb90],ecx
  41f8e5:	mov    rax,QWORD PTR [rbp-0x10]
  41f8e9:	mov    rax,QWORD PTR [rax]
  41f8ec:	mov    rax,QWORD PTR [rax+0xb88]
  41f8f3:	mov    rdx,QWORD PTR [rbp-0x10]
  41f8f7:	mov    QWORD PTR [rdx],rax
  41f8fa:	jmp    41fa42 <flatcc_emitter_copy_buffer@@Base+0x312>
  41f8ff:	mov    eax,0xb98
  41f904:	mov    edi,eax
  41f906:	call   404100 <malloc@plt>
  41f90b:	mov    QWORD PTR [rbp-0x18],rax
  41f90f:	cmp    rax,0x0
  41f913:	jne    41f925 <flatcc_emitter_copy_buffer@@Base+0x1f5>
  41f919:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41f920:	jmp    41fa91 <flatcc_emitter_copy_buffer@@Base+0x361>
  41f925:	mov    rax,QWORD PTR [rbp-0x10]
  41f929:	mov    rcx,QWORD PTR [rax+0x38]
  41f92d:	add    rcx,0xb80
  41f934:	mov    QWORD PTR [rax+0x38],rcx
  41f938:	mov    rax,QWORD PTR [rbp-0x10]
  41f93c:	cmp    QWORD PTR [rax],0x0
  41f940:	je     41f9a0 <flatcc_emitter_copy_buffer@@Base+0x270>
  41f946:	mov    rax,QWORD PTR [rbp-0x10]
  41f94a:	mov    rax,QWORD PTR [rax+0x8]
  41f94e:	mov    rcx,QWORD PTR [rbp-0x18]
  41f952:	mov    QWORD PTR [rcx+0xb88],rax
  41f959:	mov    rax,QWORD PTR [rbp-0x10]
  41f95d:	mov    rax,QWORD PTR [rax]
  41f960:	mov    rcx,QWORD PTR [rbp-0x18]
  41f964:	mov    QWORD PTR [rcx+0xb80],rax
  41f96b:	mov    rax,QWORD PTR [rbp-0x18]
  41f96f:	mov    rcx,QWORD PTR [rbp-0x10]
  41f973:	mov    rcx,QWORD PTR [rcx]
  41f976:	mov    QWORD PTR [rcx+0xb88],rax
  41f97d:	mov    rax,QWORD PTR [rbp-0x18]
  41f981:	mov    rcx,QWORD PTR [rbp-0x10]
  41f985:	mov    rcx,QWORD PTR [rcx+0x8]
  41f989:	mov    QWORD PTR [rcx+0xb80],rax
  41f990:	mov    rax,QWORD PTR [rbp-0x18]
  41f994:	mov    rcx,QWORD PTR [rbp-0x10]
  41f998:	mov    QWORD PTR [rcx],rax
  41f99b:	jmp    41fa42 <flatcc_emitter_copy_buffer@@Base+0x312>
  41f9a0:	xor    eax,eax
  41f9a2:	mov    ecx,0xb80
  41f9a7:	mov    edx,ecx
  41f9a9:	mov    rsi,QWORD PTR [rbp-0x18]
  41f9ad:	mov    rdi,QWORD PTR [rbp-0x10]
  41f9b1:	mov    QWORD PTR [rdi],rsi
  41f9b4:	mov    rsi,QWORD PTR [rbp-0x18]
  41f9b8:	mov    rdi,QWORD PTR [rbp-0x10]
  41f9bc:	mov    QWORD PTR [rdi+0x8],rsi
  41f9c0:	mov    rsi,QWORD PTR [rbp-0x18]
  41f9c4:	mov    rdi,QWORD PTR [rbp-0x18]
  41f9c8:	mov    QWORD PTR [rdi+0xb80],rsi
  41f9cf:	mov    rsi,QWORD PTR [rbp-0x18]
  41f9d3:	mov    rdi,QWORD PTR [rbp-0x18]
  41f9d7:	mov    QWORD PTR [rdi+0xb88],rsi
  41f9de:	mov    rsi,QWORD PTR [rbp-0x10]
  41f9e2:	mov    rsi,QWORD PTR [rsi]
  41f9e5:	add    rsi,0x5c0
  41f9ec:	mov    rdi,QWORD PTR [rbp-0x10]
  41f9f0:	mov    QWORD PTR [rdi+0x10],rsi
  41f9f4:	mov    rsi,QWORD PTR [rbp-0x10]
  41f9f8:	mov    rsi,QWORD PTR [rsi+0x10]
  41f9fc:	mov    rdi,QWORD PTR [rbp-0x10]
  41fa00:	mov    QWORD PTR [rdi+0x20],rsi
  41fa04:	mov    rsi,QWORD PTR [rbp-0x10]
  41fa08:	mov    QWORD PTR [rsi+0x18],0x5c0
  41fa10:	mov    rsi,QWORD PTR [rbp-0x10]
  41fa14:	sub    rdx,QWORD PTR [rsi+0x18]
  41fa18:	mov    rsi,QWORD PTR [rbp-0x10]
  41fa1c:	mov    QWORD PTR [rsi+0x28],rdx
  41fa20:	mov    rdx,QWORD PTR [rbp-0x10]
  41fa24:	mov    rdx,QWORD PTR [rdx+0x18]
  41fa28:	mov    ecx,edx
  41fa2a:	sub    eax,ecx
  41fa2c:	mov    rdx,QWORD PTR [rbp-0x18]
  41fa30:	mov    DWORD PTR [rdx+0xb90],eax
  41fa36:	mov    DWORD PTR [rbp-0x4],0x0
  41fa3d:	jmp    41fa91 <flatcc_emitter_copy_buffer@@Base+0x361>
  41fa42:	mov    rax,QWORD PTR [rbp-0x10]
  41fa46:	mov    rax,QWORD PTR [rax]
  41fa49:	add    rax,0xb80
  41fa4f:	mov    rcx,QWORD PTR [rbp-0x10]
  41fa53:	mov    QWORD PTR [rcx+0x10],rax
  41fa57:	mov    rax,QWORD PTR [rbp-0x10]
  41fa5b:	mov    QWORD PTR [rax+0x18],0xb80
  41fa63:	mov    rax,QWORD PTR [rbp-0x10]
  41fa67:	mov    rax,QWORD PTR [rax]
  41fa6a:	mov    rax,QWORD PTR [rax+0xb80]
  41fa71:	mov    edx,DWORD PTR [rax+0xb90]
  41fa77:	sub    edx,0xb80
  41fa7d:	mov    rax,QWORD PTR [rbp-0x10]
  41fa81:	mov    rax,QWORD PTR [rax]
  41fa84:	mov    DWORD PTR [rax+0xb90],edx
  41fa8a:	mov    DWORD PTR [rbp-0x4],0x0
  41fa91:	mov    eax,DWORD PTR [rbp-0x4]
  41fa94:	add    rsp,0x20
  41fa98:	pop    rbp
  41fa99:	ret    
  41fa9a:	nop    WORD PTR [rax+rax*1+0x0]
  41faa0:	push   rbp
  41faa1:	mov    rbp,rsp
  41faa4:	sub    rsp,0x20
  41faa8:	mov    QWORD PTR [rbp-0x10],rdi
  41faac:	mov    QWORD PTR [rbp-0x18],0x0
  41fab4:	mov    rdi,QWORD PTR [rbp-0x10]
  41fab8:	cmp    QWORD PTR [rdi+0x8],0x0
  41fabd:	je     41fafb <flatcc_emitter_copy_buffer@@Base+0x3cb>
  41fac3:	mov    rax,QWORD PTR [rbp-0x10]
  41fac7:	mov    rax,QWORD PTR [rax+0x8]
  41facb:	mov    rax,QWORD PTR [rax+0xb80]
  41fad2:	mov    rcx,QWORD PTR [rbp-0x10]
  41fad6:	cmp    rax,QWORD PTR [rcx]
  41fad9:	je     41fafb <flatcc_emitter_copy_buffer@@Base+0x3cb>
  41fadf:	mov    rax,QWORD PTR [rbp-0x10]
  41fae3:	mov    rax,QWORD PTR [rax+0x8]
  41fae7:	mov    rax,QWORD PTR [rax+0xb80]
  41faee:	mov    rcx,QWORD PTR [rbp-0x10]
  41faf2:	mov    QWORD PTR [rcx+0x8],rax
  41faf6:	jmp    41fc40 <flatcc_emitter_copy_buffer@@Base+0x510>
  41fafb:	mov    eax,0xb98
  41fb00:	mov    edi,eax
  41fb02:	call   404100 <malloc@plt>
  41fb07:	mov    QWORD PTR [rbp-0x18],rax
  41fb0b:	cmp    rax,0x0
  41fb0f:	jne    41fb21 <flatcc_emitter_copy_buffer@@Base+0x3f1>
  41fb15:	mov    DWORD PTR [rbp-0x4],0xffffffff
  41fb1c:	jmp    41fc8c <flatcc_emitter_copy_buffer@@Base+0x55c>
  41fb21:	mov    rax,QWORD PTR [rbp-0x10]
  41fb25:	mov    rcx,QWORD PTR [rax+0x38]
  41fb29:	add    rcx,0xb80
  41fb30:	mov    QWORD PTR [rax+0x38],rcx
  41fb34:	mov    rax,QWORD PTR [rbp-0x10]
  41fb38:	cmp    QWORD PTR [rax+0x8],0x0
  41fb3d:	je     41fb9e <flatcc_emitter_copy_buffer@@Base+0x46e>
  41fb43:	mov    rax,QWORD PTR [rbp-0x10]
  41fb47:	mov    rax,QWORD PTR [rax+0x8]
  41fb4b:	mov    rcx,QWORD PTR [rbp-0x18]
  41fb4f:	mov    QWORD PTR [rcx+0xb88],rax
  41fb56:	mov    rax,QWORD PTR [rbp-0x10]
  41fb5a:	mov    rax,QWORD PTR [rax]
  41fb5d:	mov    rcx,QWORD PTR [rbp-0x18]
  41fb61:	mov    QWORD PTR [rcx+0xb80],rax
  41fb68:	mov    rax,QWORD PTR [rbp-0x18]
  41fb6c:	mov    rcx,QWORD PTR [rbp-0x10]
  41fb70:	mov    rcx,QWORD PTR [rcx]
  41fb73:	mov    QWORD PTR [rcx+0xb88],rax
  41fb7a:	mov    rax,QWORD PTR [rbp-0x18]
  41fb7e:	mov    rcx,QWORD PTR [rbp-0x10]
  41fb82:	mov    rcx,QWORD PTR [rcx+0x8]
  41fb86:	mov    QWORD PTR [rcx+0xb80],rax
  41fb8d:	mov    rax,QWORD PTR [rbp-0x18]
  41fb91:	mov    rcx,QWORD PTR [rbp-0x10]
  41fb95:	mov    QWORD PTR [rcx+0x8],rax
  41fb99:	jmp    41fc40 <flatcc_emitter_copy_buffer@@Base+0x510>
  41fb9e:	xor    eax,eax
  41fba0:	mov    ecx,0xb80
  41fba5:	mov    edx,ecx
  41fba7:	mov    rsi,QWORD PTR [rbp-0x18]
  41fbab:	mov    rdi,QWORD PTR [rbp-0x10]
  41fbaf:	mov    QWORD PTR [rdi],rsi
  41fbb2:	mov    rsi,QWORD PTR [rbp-0x18]
  41fbb6:	mov    rdi,QWORD PTR [rbp-0x10]
  41fbba:	mov    QWORD PTR [rdi+0x8],rsi
  41fbbe:	mov    rsi,QWORD PTR [rbp-0x18]
  41fbc2:	mov    rdi,QWORD PTR [rbp-0x18]
  41fbc6:	mov    QWORD PTR [rdi+0xb80],rsi
  41fbcd:	mov    rsi,QWORD PTR [rbp-0x18]
  41fbd1:	mov    rdi,QWORD PTR [rbp-0x18]
  41fbd5:	mov    QWORD PTR [rdi+0xb88],rsi
  41fbdc:	mov    rsi,QWORD PTR [rbp-0x10]
  41fbe0:	mov    rsi,QWORD PTR [rsi]
  41fbe3:	add    rsi,0x5c0
  41fbea:	mov    rdi,QWORD PTR [rbp-0x10]
  41fbee:	mov    QWORD PTR [rdi+0x10],rsi
  41fbf2:	mov    rsi,QWORD PTR [rbp-0x10]
  41fbf6:	mov    rsi,QWORD PTR [rsi+0x10]
  41fbfa:	mov    rdi,QWORD PTR [rbp-0x10]
  41fbfe:	mov    QWORD PTR [rdi+0x20],rsi
  41fc02:	mov    rsi,QWORD PTR [rbp-0x10]
  41fc06:	mov    QWORD PTR [rsi+0x18],0x5c0
  41fc0e:	mov    rsi,QWORD PTR [rbp-0x10]
  41fc12:	sub    rdx,QWORD PTR [rsi+0x18]
  41fc16:	mov    rsi,QWORD PTR [rbp-0x10]
  41fc1a:	mov    QWORD PTR [rsi+0x28],rdx
  41fc1e:	mov    rdx,QWORD PTR [rbp-0x10]
  41fc22:	mov    rdx,QWORD PTR [rdx+0x18]
  41fc26:	mov    ecx,edx
  41fc28:	sub    eax,ecx
  41fc2a:	mov    rdx,QWORD PTR [rbp-0x18]
  41fc2e:	mov    DWORD PTR [rdx+0xb90],eax
  41fc34:	mov    DWORD PTR [rbp-0x4],0x0
  41fc3b:	jmp    41fc8c <flatcc_emitter_copy_buffer@@Base+0x55c>
  41fc40:	mov    rax,QWORD PTR [rbp-0x10]
  41fc44:	mov    rax,QWORD PTR [rax+0x8]
  41fc48:	mov    rcx,QWORD PTR [rbp-0x10]
  41fc4c:	mov    QWORD PTR [rcx+0x20],rax
  41fc50:	mov    rax,QWORD PTR [rbp-0x10]
  41fc54:	mov    QWORD PTR [rax+0x28],0xb80
  41fc5c:	mov    rax,QWORD PTR [rbp-0x10]
  41fc60:	mov    rax,QWORD PTR [rax+0x8]
  41fc64:	mov    rax,QWORD PTR [rax+0xb88]
  41fc6b:	mov    edx,DWORD PTR [rax+0xb90]
  41fc71:	add    edx,0xb80
  41fc77:	mov    rax,QWORD PTR [rbp-0x10]
  41fc7b:	mov    rax,QWORD PTR [rax+0x8]
  41fc7f:	mov    DWORD PTR [rax+0xb90],edx
  41fc85:	mov    DWORD PTR [rbp-0x4],0x0
  41fc8c:	mov    eax,DWORD PTR [rbp-0x4]
  41fc8f:	add    rsp,0x20
  41fc93:	pop    rbp
  41fc94:	ret    
  41fc95:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41fc9f:	nop

000000000041fca0 <flatcc_verify_error_string@@Base>:
  41fca0:	push   rbp
  41fca1:	mov    rbp,rsp
  41fca4:	mov    DWORD PTR [rbp-0xc],edi
  41fca7:	mov    edi,DWORD PTR [rbp-0xc]
  41fcaa:	mov    eax,edi
  41fcac:	mov    rcx,rax
  41fcaf:	sub    rcx,0x24
  41fcb3:	mov    QWORD PTR [rbp-0x18],rax
  41fcb7:	mov    QWORD PTR [rbp-0x20],rcx
  41fcbb:	ja     41ff25 <flatcc_verify_error_string@@Base+0x285>
  41fcc1:	lea    rax,[rip+0x9350]        # 429018 <flatcc_builder_padding_base@@Base+0x1468>
  41fcc8:	mov    rcx,QWORD PTR [rbp-0x18]
  41fccc:	movsxd rdx,DWORD PTR [rax+rcx*4]
  41fcd0:	add    rdx,rax
  41fcd3:	jmp    rdx
  41fcd5:	lea    rax,[rip+0x93d0]        # 4290ac <flatcc_builder_padding_base@@Base+0x14fc>
  41fcdc:	mov    QWORD PTR [rbp-0x8],rax
  41fce0:	jmp    41ff30 <flatcc_verify_error_string@@Base+0x290>
  41fce5:	lea    rax,[rip+0x93c3]        # 4290af <flatcc_builder_padding_base@@Base+0x14ff>
  41fcec:	mov    QWORD PTR [rbp-0x8],rax
  41fcf0:	jmp    41ff30 <flatcc_verify_error_string@@Base+0x290>
  41fcf5:	lea    rax,[rip+0x93cb]        # 4290c7 <flatcc_builder_padding_base@@Base+0x1517>
  41fcfc:	mov    QWORD PTR [rbp-0x8],rax
  41fd00:	jmp    41ff30 <flatcc_verify_error_string@@Base+0x290>
  41fd05:	lea    rax,[rip+0x93cf]        # 4290db <flatcc_builder_padding_base@@Base+0x152b>
  41fd0c:	mov    QWORD PTR [rbp-0x8],rax
  41fd10:	jmp    41ff30 <flatcc_verify_error_string@@Base+0x290>
  41fd15:	lea    rax,[rip+0x93d9]        # 4290f5 <flatcc_builder_padding_base@@Base+0x1545>
  41fd1c:	mov    QWORD PTR [rbp-0x8],rax
  41fd20:	jmp    41ff30 <flatcc_verify_error_string@@Base+0x290>
  41fd25:	lea    rax,[rip+0x93e0]        # 42910c <flatcc_builder_padding_base@@Base+0x155c>
  41fd2c:	mov    QWORD PTR [rbp-0x8],rax
  41fd30:	jmp    41ff30 <flatcc_verify_error_string@@Base+0x290>
  41fd35:	lea    rax,[rip+0x93f3]        # 42912f <flatcc_builder_padding_base@@Base+0x157f>
  41fd3c:	mov    QWORD PTR [rbp-0x8],rax
  41fd40:	jmp    41ff30 <flatcc_verify_error_string@@Base+0x290>
  41fd45:	lea    rax,[rip+0x9402]        # 42914e <flatcc_builder_padding_base@@Base+0x159e>
  41fd4c:	mov    QWORD PTR [rbp-0x8],rax
  41fd50:	jmp    41ff30 <flatcc_verify_error_string@@Base+0x290>
  41fd55:	lea    rax,[rip+0x940d]        # 429169 <flatcc_builder_padding_base@@Base+0x15b9>
  41fd5c:	mov    QWORD PTR [rbp-0x8],rax
  41fd60:	jmp    41ff30 <flatcc_verify_error_string@@Base+0x290>
  41fd65:	lea    rax,[rip+0x9411]        # 42917d <flatcc_builder_padding_base@@Base+0x15cd>
  41fd6c:	mov    QWORD PTR [rbp-0x8],rax
  41fd70:	jmp    41ff30 <flatcc_verify_error_string@@Base+0x290>
  41fd75:	lea    rax,[rip+0x9415]        # 429191 <flatcc_builder_padding_base@@Base+0x15e1>
  41fd7c:	mov    QWORD PTR [rbp-0x8],rax
  41fd80:	jmp    41ff30 <flatcc_verify_error_string@@Base+0x290>
  41fd85:	lea    rax,[rip+0x941a]        # 4291a6 <flatcc_builder_padding_base@@Base+0x15f6>
  41fd8c:	mov    QWORD PTR [rbp-0x8],rax
  41fd90:	jmp    41ff30 <flatcc_verify_error_string@@Base+0x290>
  41fd95:	lea    rax,[rip+0x941b]        # 4291b7 <flatcc_builder_padding_base@@Base+0x1607>
  41fd9c:	mov    QWORD PTR [rbp-0x8],rax
  41fda0:	jmp    41ff30 <flatcc_verify_error_string@@Base+0x290>
  41fda5:	lea    rax,[rip+0x9423]        # 4291cf <flatcc_builder_padding_base@@Base+0x161f>
  41fdac:	mov    QWORD PTR [rbp-0x8],rax
  41fdb0:	jmp    41ff30 <flatcc_verify_error_string@@Base+0x290>
  41fdb5:	lea    rax,[rip+0x942c]        # 4291e8 <flatcc_builder_padding_base@@Base+0x1638>
  41fdbc:	mov    QWORD PTR [rbp-0x8],rax
  41fdc0:	jmp    41ff30 <flatcc_verify_error_string@@Base+0x290>
  41fdc5:	lea    rax,[rip+0x9436]        # 429202 <flatcc_builder_padding_base@@Base+0x1652>
  41fdcc:	mov    QWORD PTR [rbp-0x8],rax
  41fdd0:	jmp    41ff30 <flatcc_verify_error_string@@Base+0x290>
  41fdd5:	lea    rax,[rip+0x944d]        # 429229 <flatcc_builder_padding_base@@Base+0x1679>
  41fddc:	mov    QWORD PTR [rbp-0x8],rax
  41fde0:	jmp    41ff30 <flatcc_verify_error_string@@Base+0x290>
  41fde5:	lea    rax,[rip+0x9465]        # 429251 <flatcc_builder_padding_base@@Base+0x16a1>
  41fdec:	mov    QWORD PTR [rbp-0x8],rax
  41fdf0:	jmp    41ff30 <flatcc_verify_error_string@@Base+0x290>
  41fdf5:	lea    rax,[rip+0x947d]        # 429279 <flatcc_builder_padding_base@@Base+0x16c9>
  41fdfc:	mov    QWORD PTR [rbp-0x8],rax
  41fe00:	jmp    41ff30 <flatcc_verify_error_string@@Base+0x290>
  41fe05:	lea    rax,[rip+0x95c1]        # 4293cd <flatcc_builder_padding_base@@Base+0x181d>
  41fe0c:	mov    QWORD PTR [rbp-0x8],rax
  41fe10:	jmp    41ff30 <flatcc_verify_error_string@@Base+0x290>
  41fe15:	lea    rax,[rip+0x9471]        # 42928d <flatcc_builder_padding_base@@Base+0x16dd>
  41fe1c:	mov    QWORD PTR [rbp-0x8],rax
  41fe20:	jmp    41ff30 <flatcc_verify_error_string@@Base+0x290>
  41fe25:	lea    rax,[rip+0x9479]        # 4292a5 <flatcc_builder_padding_base@@Base+0x16f5>
  41fe2c:	mov    QWORD PTR [rbp-0x8],rax
  41fe30:	jmp    41ff30 <flatcc_verify_error_string@@Base+0x290>
  41fe35:	lea    rax,[rip+0x9495]        # 4292d1 <flatcc_builder_padding_base@@Base+0x1721>
  41fe3c:	mov    QWORD PTR [rbp-0x8],rax
  41fe40:	jmp    41ff30 <flatcc_verify_error_string@@Base+0x290>
  41fe45:	lea    rax,[rip+0x94b8]        # 429304 <flatcc_builder_padding_base@@Base+0x1754>
  41fe4c:	mov    QWORD PTR [rbp-0x8],rax
  41fe50:	jmp    41ff30 <flatcc_verify_error_string@@Base+0x290>
  41fe55:	lea    rax,[rip+0x94d1]        # 42932d <flatcc_builder_padding_base@@Base+0x177d>
  41fe5c:	mov    QWORD PTR [rbp-0x8],rax
  41fe60:	jmp    41ff30 <flatcc_verify_error_string@@Base+0x290>
  41fe65:	lea    rax,[rip+0x94ea]        # 429356 <flatcc_builder_padding_base@@Base+0x17a6>
  41fe6c:	mov    QWORD PTR [rbp-0x8],rax
  41fe70:	jmp    41ff30 <flatcc_verify_error_string@@Base+0x290>
  41fe75:	lea    rax,[rip+0x9509]        # 429385 <flatcc_builder_padding_base@@Base+0x17d5>
  41fe7c:	mov    QWORD PTR [rbp-0x8],rax
  41fe80:	jmp    41ff30 <flatcc_verify_error_string@@Base+0x290>
  41fe85:	lea    rax,[rip+0x950d]        # 429399 <flatcc_builder_padding_base@@Base+0x17e9>
  41fe8c:	mov    QWORD PTR [rbp-0x8],rax
  41fe90:	jmp    41ff30 <flatcc_verify_error_string@@Base+0x290>
  41fe95:	lea    rax,[rip+0x9518]        # 4293b4 <flatcc_builder_padding_base@@Base+0x1804>
  41fe9c:	mov    QWORD PTR [rbp-0x8],rax
  41fea0:	jmp    41ff30 <flatcc_verify_error_string@@Base+0x290>
  41fea5:	lea    rax,[rip+0x9520]        # 4293cc <flatcc_builder_padding_base@@Base+0x181c>
  41feac:	mov    QWORD PTR [rbp-0x8],rax
  41feb0:	jmp    41ff30 <flatcc_verify_error_string@@Base+0x290>
  41feb5:	lea    rax,[rip+0x9538]        # 4293f4 <flatcc_builder_padding_base@@Base+0x1844>
  41febc:	mov    QWORD PTR [rbp-0x8],rax
  41fec0:	jmp    41ff30 <flatcc_verify_error_string@@Base+0x290>
  41fec5:	lea    rax,[rip+0x954e]        # 42941a <flatcc_builder_padding_base@@Base+0x186a>
  41fecc:	mov    QWORD PTR [rbp-0x8],rax
  41fed0:	jmp    41ff30 <flatcc_verify_error_string@@Base+0x290>
  41fed5:	lea    rax,[rip+0x9553]        # 42942f <flatcc_builder_padding_base@@Base+0x187f>
  41fedc:	mov    QWORD PTR [rbp-0x8],rax
  41fee0:	jmp    41ff30 <flatcc_verify_error_string@@Base+0x290>
  41fee5:	lea    rax,[rip+0x956a]        # 429456 <flatcc_builder_padding_base@@Base+0x18a6>
  41feec:	mov    QWORD PTR [rbp-0x8],rax
  41fef0:	jmp    41ff30 <flatcc_verify_error_string@@Base+0x290>
  41fef5:	lea    rax,[rip+0x957f]        # 42947b <flatcc_builder_padding_base@@Base+0x18cb>
  41fefc:	mov    QWORD PTR [rbp-0x8],rax
  41ff00:	jmp    41ff30 <flatcc_verify_error_string@@Base+0x290>
  41ff05:	lea    rax,[rip+0x95a3]        # 4294af <flatcc_builder_padding_base@@Base+0x18ff>
  41ff0c:	mov    QWORD PTR [rbp-0x8],rax
  41ff10:	jmp    41ff30 <flatcc_verify_error_string@@Base+0x290>
  41ff15:	lea    rax,[rip+0x95ad]        # 4294c9 <flatcc_builder_padding_base@@Base+0x1919>
  41ff1c:	mov    QWORD PTR [rbp-0x8],rax
  41ff20:	jmp    41ff30 <flatcc_verify_error_string@@Base+0x290>
  41ff25:	lea    rax,[rip+0x95ab]        # 4294d7 <flatcc_builder_padding_base@@Base+0x1927>
  41ff2c:	mov    QWORD PTR [rbp-0x8],rax
  41ff30:	mov    rax,QWORD PTR [rbp-0x8]
  41ff34:	pop    rbp
  41ff35:	ret    
  41ff36:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000041ff40 <flatcc_verify_field@@Base>:
  41ff40:	push   rbp
  41ff41:	mov    rbp,rsp
  41ff44:	sub    rsp,0x30
  41ff48:	mov    ax,cx
  41ff4b:	mov    r8w,si
  41ff4f:	xor    ecx,ecx
  41ff51:	mov    QWORD PTR [rbp-0x10],rdi
  41ff55:	mov    WORD PTR [rbp-0x12],r8w
  41ff5a:	mov    QWORD PTR [rbp-0x20],rdx
  41ff5e:	mov    WORD PTR [rbp-0x22],ax
  41ff62:	mov    rdi,QWORD PTR [rbp-0x10]
  41ff66:	mov    ax,WORD PTR [rbp-0x12]
  41ff6a:	mov    rdx,QWORD PTR [rbp-0x20]
  41ff6e:	mov    esi,edx
  41ff70:	movzx  r9d,ax
  41ff74:	mov    DWORD PTR [rbp-0x28],esi
  41ff77:	mov    esi,r9d
  41ff7a:	mov    edx,ecx
  41ff7c:	mov    ecx,DWORD PTR [rbp-0x28]
  41ff7f:	movzx  r8d,WORD PTR [rbp-0x22]
  41ff84:	call   41ffe0 <flatcc_verify_field@@Base+0xa0>
  41ff89:	cmp    eax,0x0
  41ff8c:	je     41ffc1 <flatcc_verify_field@@Base+0x81>
  41ff92:	xor    edx,edx
  41ff94:	mov    rdi,QWORD PTR [rbp-0x10]
  41ff98:	mov    ax,WORD PTR [rbp-0x12]
  41ff9c:	mov    rcx,QWORD PTR [rbp-0x20]
  41ffa0:	mov    esi,ecx
  41ffa2:	movzx  r8d,ax
  41ffa6:	mov    DWORD PTR [rbp-0x2c],esi
  41ffa9:	mov    esi,r8d
  41ffac:	mov    ecx,DWORD PTR [rbp-0x2c]
  41ffaf:	movzx  r8d,WORD PTR [rbp-0x22]
  41ffb4:	call   41ffe0 <flatcc_verify_field@@Base+0xa0>
  41ffb9:	mov    DWORD PTR [rbp-0x4],eax
  41ffbc:	jmp    41ffc8 <flatcc_verify_field@@Base+0x88>
  41ffc1:	mov    DWORD PTR [rbp-0x4],0x0
  41ffc8:	mov    eax,DWORD PTR [rbp-0x4]
  41ffcb:	add    rsp,0x30
  41ffcf:	pop    rbp
  41ffd0:	ret    
  41ffd1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ffdb:	nop    DWORD PTR [rax+rax*1+0x0]
  41ffe0:	push   rbp
  41ffe1:	mov    rbp,rsp
  41ffe4:	sub    rsp,0x40
  41ffe8:	mov    ax,r8w
  41ffec:	mov    r9w,si
  41fff0:	mov    QWORD PTR [rbp-0x10],rdi
  41fff4:	mov    WORD PTR [rbp-0x12],r9w
  41fff9:	mov    DWORD PTR [rbp-0x18],edx
  41fffc:	mov    DWORD PTR [rbp-0x1c],ecx
  41ffff:	mov    WORD PTR [rbp-0x1e],ax
  420003:	mov    rdi,QWORD PTR [rbp-0x10]
  420007:	mov    rdi,QWORD PTR [rdi]
  42000a:	mov    ecx,edi
  42000c:	mov    DWORD PTR [rbp-0x30],ecx
  42000f:	mov    rdi,QWORD PTR [rbp-0x10]
  420013:	movzx  esi,WORD PTR [rbp-0x12]
  420017:	call   421a60 <flatcc_verify_union_field@@Base+0x250>
  42001c:	mov    r9w,ax
  420020:	mov    WORD PTR [rbp-0x2a],r9w
  420025:	cmp    WORD PTR [rbp-0x2a],0x0
  42002a:	jne    42006d <flatcc_verify_field@@Base+0x12d>
  420030:	jmp    420035 <flatcc_verify_field@@Base+0xf5>
  420035:	cmp    DWORD PTR [rbp-0x18],0x0
  420039:	setne  al
  42003c:	xor    al,0xff
  42003e:	and    al,0x1
  420040:	movzx  ecx,al
  420043:	mov    DWORD PTR [rbp-0x34],ecx
  420046:	cmp    DWORD PTR [rbp-0x34],0x0
  42004a:	jne    42005c <flatcc_verify_field@@Base+0x11c>
  420050:	mov    DWORD PTR [rbp-0x4],0x4
  420057:	jmp    42012b <flatcc_verify_field@@Base+0x1eb>
  42005c:	jmp    420061 <flatcc_verify_field@@Base+0x121>
  420061:	mov    DWORD PTR [rbp-0x4],0x0
  420068:	jmp    42012b <flatcc_verify_field@@Base+0x1eb>
  42006d:	movzx  eax,WORD PTR [rbp-0x2a]
  420071:	mov    DWORD PTR [rbp-0x24],eax
  420074:	mov    eax,DWORD PTR [rbp-0x24]
  420077:	add    eax,DWORD PTR [rbp-0x1c]
  42007a:	mov    DWORD PTR [rbp-0x28],eax
  42007d:	mov    eax,DWORD PTR [rbp-0x28]
  420080:	mov    rcx,QWORD PTR [rbp-0x10]
  420084:	movzx  edx,WORD PTR [rcx+0x1c]
  420088:	cmp    eax,edx
  42008a:	setbe  sil
  42008e:	and    sil,0x1
  420092:	movzx  eax,sil
  420096:	mov    DWORD PTR [rbp-0x38],eax
  420099:	cmp    DWORD PTR [rbp-0x38],0x0
  42009d:	jne    4200af <flatcc_verify_field@@Base+0x16f>
  4200a3:	mov    DWORD PTR [rbp-0x4],0xd
  4200aa:	jmp    42012b <flatcc_verify_field@@Base+0x1eb>
  4200af:	jmp    4200b4 <flatcc_verify_field@@Base+0x174>
  4200b4:	jmp    4200b9 <flatcc_verify_field@@Base+0x179>
  4200b9:	mov    DWORD PTR [rbp-0x3c],0x1
  4200c0:	cmp    DWORD PTR [rbp-0x3c],0x0
  4200c4:	jne    4200d6 <flatcc_verify_field@@Base+0x196>
  4200ca:	mov    DWORD PTR [rbp-0x4],0xe
  4200d1:	jmp    42012b <flatcc_verify_field@@Base+0x1eb>
  4200d6:	jmp    4200db <flatcc_verify_field@@Base+0x19b>
  4200db:	mov    rax,QWORD PTR [rbp-0x10]
  4200df:	mov    ecx,DWORD PTR [rax+0x18]
  4200e2:	add    ecx,DWORD PTR [rbp-0x30]
  4200e5:	add    ecx,DWORD PTR [rbp-0x24]
  4200e8:	mov    DWORD PTR [rbp-0x24],ecx
  4200eb:	mov    eax,DWORD PTR [rbp-0x24]
  4200ee:	movzx  ecx,WORD PTR [rbp-0x1e]
  4200f2:	sub    ecx,0x1
  4200f5:	and    eax,ecx
  4200f7:	cmp    eax,0x0
  4200fa:	setne  dl
  4200fd:	xor    dl,0xff
  420100:	and    dl,0x1
  420103:	movzx  eax,dl
  420106:	mov    DWORD PTR [rbp-0x40],eax
  420109:	cmp    DWORD PTR [rbp-0x40],0x0
  42010d:	jne    42011f <flatcc_verify_field@@Base+0x1df>
  420113:	mov    DWORD PTR [rbp-0x4],0xc
  42011a:	jmp    42012b <flatcc_verify_field@@Base+0x1eb>
  42011f:	jmp    420124 <flatcc_verify_field@@Base+0x1e4>
  420124:	mov    DWORD PTR [rbp-0x4],0x0
  42012b:	mov    eax,DWORD PTR [rbp-0x4]
  42012e:	add    rsp,0x40
  420132:	pop    rbp
  420133:	ret    
  420134:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42013e:	xchg   ax,ax

0000000000420140 <flatcc_verify_string_field@@Base>:
  420140:	push   rbp
  420141:	mov    rbp,rsp
  420144:	sub    rsp,0x30
  420148:	mov    ax,si
  42014b:	mov    QWORD PTR [rbp-0x10],rdi
  42014f:	mov    WORD PTR [rbp-0x12],ax
  420153:	mov    DWORD PTR [rbp-0x18],edx
  420156:	mov    rdi,QWORD PTR [rbp-0x10]
  42015a:	mov    ax,WORD PTR [rbp-0x12]
  42015e:	mov    edx,DWORD PTR [rbp-0x18]
  420161:	movzx  esi,ax
  420164:	lea    rcx,[rbp-0x1c]
  420168:	call   4201e0 <flatcc_verify_string_field@@Base+0xa0>
  42016d:	mov    DWORD PTR [rbp-0x20],eax
  420170:	cmp    DWORD PTR [rbp-0x20],0x0
  420174:	jne    420184 <flatcc_verify_string_field@@Base+0x44>
  42017a:	cmp    DWORD PTR [rbp-0x1c],0x0
  42017e:	jne    42018f <flatcc_verify_string_field@@Base+0x4f>
  420184:	mov    eax,DWORD PTR [rbp-0x20]
  420187:	mov    DWORD PTR [rbp-0x4],eax
  42018a:	jmp    4201d7 <flatcc_verify_string_field@@Base+0x97>
  42018f:	jmp    420194 <flatcc_verify_string_field@@Base+0x54>
  420194:	mov    rax,QWORD PTR [rbp-0x10]
  420198:	mov    rdi,QWORD PTR [rax]
  42019b:	mov    rax,QWORD PTR [rbp-0x10]
  42019f:	mov    esi,DWORD PTR [rax+0x8]
  4201a2:	mov    edx,DWORD PTR [rbp-0x1c]
  4201a5:	mov    rax,QWORD PTR [rbp-0x10]
  4201a9:	mov    rax,QWORD PTR [rax]
  4201ac:	mov    ecx,DWORD PTR [rbp-0x1c]
  4201af:	mov    QWORD PTR [rbp-0x28],rdi
  4201b3:	mov    rdi,rax
  4201b6:	mov    DWORD PTR [rbp-0x2c],esi
  4201b9:	mov    esi,ecx
  4201bb:	mov    DWORD PTR [rbp-0x30],edx
  4201be:	call   420420 <flatcc_verify_string_field@@Base+0x2e0>
  4201c3:	mov    rdi,QWORD PTR [rbp-0x28]
  4201c7:	mov    esi,DWORD PTR [rbp-0x2c]
  4201ca:	mov    edx,DWORD PTR [rbp-0x30]
  4201cd:	mov    ecx,eax
  4201cf:	call   420320 <flatcc_verify_string_field@@Base+0x1e0>
  4201d4:	mov    DWORD PTR [rbp-0x4],eax
  4201d7:	mov    eax,DWORD PTR [rbp-0x4]
  4201da:	add    rsp,0x30
  4201de:	pop    rbp
  4201df:	ret    
  4201e0:	push   rbp
  4201e1:	mov    rbp,rsp
  4201e4:	sub    rsp,0x40
  4201e8:	mov    ax,si
  4201eb:	mov    QWORD PTR [rbp-0x10],rdi
  4201ef:	mov    WORD PTR [rbp-0x12],ax
  4201f3:	mov    DWORD PTR [rbp-0x18],edx
  4201f6:	mov    QWORD PTR [rbp-0x20],rcx
  4201fa:	mov    rdi,QWORD PTR [rbp-0x10]
  4201fe:	movzx  esi,WORD PTR [rbp-0x12]
  420202:	call   421a60 <flatcc_verify_union_field@@Base+0x250>
  420207:	mov    r8w,ax
  42020b:	mov    WORD PTR [rbp-0x2a],r8w
  420210:	cmp    WORD PTR [rbp-0x2a],0x0
  420215:	jne    420247 <flatcc_verify_string_field@@Base+0x107>
  42021b:	mov    rax,QWORD PTR [rbp-0x20]
  42021f:	mov    DWORD PTR [rax],0x0
  420225:	cmp    DWORD PTR [rbp-0x18],0x0
  420229:	je     42023b <flatcc_verify_string_field@@Base+0xfb>
  42022f:	mov    DWORD PTR [rbp-0x4],0x4
  420236:	jmp    42030e <flatcc_verify_string_field@@Base+0x1ce>
  42023b:	mov    DWORD PTR [rbp-0x4],0x0
  420242:	jmp    42030e <flatcc_verify_string_field@@Base+0x1ce>
  420247:	movzx  eax,WORD PTR [rbp-0x2a]
  42024b:	mov    DWORD PTR [rbp-0x24],eax
  42024e:	mov    eax,DWORD PTR [rbp-0x24]
  420251:	mov    ecx,eax
  420253:	add    rcx,0x4
  420257:	mov    eax,ecx
  420259:	mov    DWORD PTR [rbp-0x28],eax
  42025c:	mov    eax,DWORD PTR [rbp-0x28]
  42025f:	mov    rcx,QWORD PTR [rbp-0x10]
  420263:	movzx  edx,WORD PTR [rcx+0x1c]
  420267:	cmp    eax,edx
  420269:	setbe  sil
  42026d:	and    sil,0x1
  420271:	movzx  eax,sil
  420275:	mov    DWORD PTR [rbp-0x30],eax
  420278:	cmp    DWORD PTR [rbp-0x30],0x0
  42027c:	jne    42028e <flatcc_verify_string_field@@Base+0x14e>
  420282:	mov    DWORD PTR [rbp-0x4],0xd
  420289:	jmp    42030e <flatcc_verify_string_field@@Base+0x1ce>
  42028e:	jmp    420293 <flatcc_verify_string_field@@Base+0x153>
  420293:	jmp    420298 <flatcc_verify_string_field@@Base+0x158>
  420298:	mov    DWORD PTR [rbp-0x34],0x1
  42029f:	cmp    DWORD PTR [rbp-0x34],0x0
  4202a3:	jne    4202b5 <flatcc_verify_string_field@@Base+0x175>
  4202a9:	mov    DWORD PTR [rbp-0x4],0xe
  4202b0:	jmp    42030e <flatcc_verify_string_field@@Base+0x1ce>
  4202b5:	jmp    4202ba <flatcc_verify_string_field@@Base+0x17a>
  4202ba:	mov    rax,QWORD PTR [rbp-0x10]
  4202be:	mov    ecx,DWORD PTR [rax+0x18]
  4202c1:	add    ecx,DWORD PTR [rbp-0x24]
  4202c4:	mov    DWORD PTR [rbp-0x24],ecx
  4202c7:	mov    eax,DWORD PTR [rbp-0x24]
  4202ca:	mov    ecx,eax
  4202cc:	and    rcx,0x3
  4202d0:	cmp    rcx,0x0
  4202d4:	setne  dl
  4202d7:	xor    dl,0xff
  4202da:	and    dl,0x1
  4202dd:	movzx  eax,dl
  4202e0:	mov    DWORD PTR [rbp-0x38],eax
  4202e3:	cmp    DWORD PTR [rbp-0x38],0x0
  4202e7:	jne    4202f9 <flatcc_verify_string_field@@Base+0x1b9>
  4202ed:	mov    DWORD PTR [rbp-0x4],0xc
  4202f4:	jmp    42030e <flatcc_verify_string_field@@Base+0x1ce>
  4202f9:	jmp    4202fe <flatcc_verify_string_field@@Base+0x1be>
  4202fe:	mov    eax,DWORD PTR [rbp-0x24]
  420301:	mov    rcx,QWORD PTR [rbp-0x20]
  420305:	mov    DWORD PTR [rcx],eax
  420307:	mov    DWORD PTR [rbp-0x4],0x0
  42030e:	mov    eax,DWORD PTR [rbp-0x4]
  420311:	add    rsp,0x40
  420315:	pop    rbp
  420316:	ret    
  420317:	nop    WORD PTR [rax+rax*1+0x0]
  420320:	push   rbp
  420321:	mov    rbp,rsp
  420324:	sub    rsp,0x30
  420328:	mov    QWORD PTR [rbp-0x10],rdi
  42032c:	mov    DWORD PTR [rbp-0x14],esi
  42032f:	mov    DWORD PTR [rbp-0x18],edx
  420332:	mov    DWORD PTR [rbp-0x1c],ecx
  420335:	mov    edi,DWORD PTR [rbp-0x14]
  420338:	mov    esi,DWORD PTR [rbp-0x18]
  42033b:	mov    edx,DWORD PTR [rbp-0x1c]
  42033e:	call   421f70 <flatcc_verify_union_vector_field@@Base+0x4a0>
  420343:	mov    DWORD PTR [rbp-0x24],eax
  420346:	cmp    DWORD PTR [rbp-0x24],0x0
  42034a:	jne    42035c <flatcc_verify_string_field@@Base+0x21c>
  420350:	mov    DWORD PTR [rbp-0x4],0x11
  420357:	jmp    42040a <flatcc_verify_string_field@@Base+0x2ca>
  42035c:	jmp    420361 <flatcc_verify_string_field@@Base+0x221>
  420361:	mov    eax,DWORD PTR [rbp-0x1c]
  420364:	add    eax,DWORD PTR [rbp-0x18]
  420367:	mov    DWORD PTR [rbp-0x18],eax
  42036a:	mov    rdi,QWORD PTR [rbp-0x10]
  42036e:	mov    esi,DWORD PTR [rbp-0x18]
  420371:	call   420420 <flatcc_verify_string_field@@Base+0x2e0>
  420376:	mov    DWORD PTR [rbp-0x20],eax
  420379:	mov    eax,DWORD PTR [rbp-0x18]
  42037c:	mov    edi,eax
  42037e:	add    rdi,0x4
  420382:	mov    eax,edi
  420384:	mov    DWORD PTR [rbp-0x18],eax
  420387:	mov    eax,DWORD PTR [rbp-0x14]
  42038a:	sub    eax,DWORD PTR [rbp-0x18]
  42038d:	mov    ecx,DWORD PTR [rbp-0x20]
  420390:	add    ecx,0x1
  420393:	cmp    eax,ecx
  420395:	setae  dl
  420398:	and    dl,0x1
  42039b:	movzx  eax,dl
  42039e:	mov    DWORD PTR [rbp-0x28],eax
  4203a1:	cmp    DWORD PTR [rbp-0x28],0x0
  4203a5:	jne    4203b7 <flatcc_verify_string_field@@Base+0x277>
  4203ab:	mov    DWORD PTR [rbp-0x4],0x8
  4203b2:	jmp    42040a <flatcc_verify_string_field@@Base+0x2ca>
  4203b7:	jmp    4203bc <flatcc_verify_string_field@@Base+0x27c>
  4203bc:	jmp    4203c1 <flatcc_verify_string_field@@Base+0x281>
  4203c1:	mov    rax,QWORD PTR [rbp-0x10]
  4203c5:	mov    ecx,DWORD PTR [rbp-0x18]
  4203c8:	mov    edx,ecx
  4203ca:	add    rax,rdx
  4203cd:	mov    ecx,DWORD PTR [rbp-0x20]
  4203d0:	mov    edx,ecx
  4203d2:	movzx  ecx,BYTE PTR [rax+rdx*1]
  4203d6:	cmp    ecx,0x0
  4203d9:	sete   sil
  4203dd:	and    sil,0x1
  4203e1:	movzx  ecx,sil
  4203e5:	mov    DWORD PTR [rbp-0x2c],ecx
  4203e8:	cmp    DWORD PTR [rbp-0x2c],0x0
  4203ec:	jne    4203fe <flatcc_verify_string_field@@Base+0x2be>
  4203f2:	mov    DWORD PTR [rbp-0x4],0x7
  4203f9:	jmp    42040a <flatcc_verify_string_field@@Base+0x2ca>
  4203fe:	jmp    420403 <flatcc_verify_string_field@@Base+0x2c3>
  420403:	mov    DWORD PTR [rbp-0x4],0x0
  42040a:	mov    eax,DWORD PTR [rbp-0x4]
  42040d:	add    rsp,0x30
  420411:	pop    rbp
  420412:	ret    
  420413:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42041d:	nop    DWORD PTR [rax]
  420420:	push   rbp
  420421:	mov    rbp,rsp
  420424:	sub    rsp,0x10
  420428:	mov    QWORD PTR [rbp-0x8],rdi
  42042c:	mov    DWORD PTR [rbp-0xc],esi
  42042f:	mov    rdi,QWORD PTR [rbp-0x8]
  420433:	mov    esi,DWORD PTR [rbp-0xc]
  420436:	mov    eax,esi
  420438:	add    rdi,rax
  42043b:	call   421fe0 <flatcc_verify_union_vector_field@@Base+0x510>
  420440:	add    rsp,0x10
  420444:	pop    rbp
  420445:	ret    
  420446:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000420450 <flatcc_verify_vector_field@@Base>:
  420450:	push   rbp
  420451:	mov    rbp,rsp
  420454:	sub    rsp,0x60
  420458:	mov    ax,r8w
  42045c:	mov    r10w,si
  420460:	mov    QWORD PTR [rbp-0x10],rdi
  420464:	mov    WORD PTR [rbp-0x12],r10w
  420469:	mov    DWORD PTR [rbp-0x18],edx
  42046c:	mov    QWORD PTR [rbp-0x20],rcx
  420470:	mov    WORD PTR [rbp-0x22],ax
  420474:	mov    QWORD PTR [rbp-0x30],r9
  420478:	mov    rdi,QWORD PTR [rbp-0x10]
  42047c:	mov    ax,WORD PTR [rbp-0x12]
  420480:	mov    edx,DWORD PTR [rbp-0x18]
  420483:	movzx  esi,ax
  420486:	lea    rcx,[rbp-0x34]
  42048a:	call   4201e0 <flatcc_verify_string_field@@Base+0xa0>
  42048f:	mov    DWORD PTR [rbp-0x38],eax
  420492:	cmp    DWORD PTR [rbp-0x38],0x0
  420496:	jne    4204a6 <flatcc_verify_vector_field@@Base+0x56>
  42049c:	cmp    DWORD PTR [rbp-0x34],0x0
  4204a0:	jne    4204b1 <flatcc_verify_vector_field@@Base+0x61>
  4204a6:	mov    eax,DWORD PTR [rbp-0x38]
  4204a9:	mov    DWORD PTR [rbp-0x4],eax
  4204ac:	jmp    420530 <flatcc_verify_vector_field@@Base+0xe0>
  4204b1:	jmp    4204b6 <flatcc_verify_vector_field@@Base+0x66>
  4204b6:	mov    rax,QWORD PTR [rbp-0x10]
  4204ba:	mov    rdi,QWORD PTR [rax]
  4204bd:	mov    rax,QWORD PTR [rbp-0x10]
  4204c1:	mov    esi,DWORD PTR [rax+0x8]
  4204c4:	mov    edx,DWORD PTR [rbp-0x34]
  4204c7:	mov    rax,QWORD PTR [rbp-0x10]
  4204cb:	mov    rax,QWORD PTR [rax]
  4204ce:	mov    ecx,DWORD PTR [rbp-0x34]
  4204d1:	mov    QWORD PTR [rbp-0x40],rdi
  4204d5:	mov    rdi,rax
  4204d8:	mov    DWORD PTR [rbp-0x44],esi
  4204db:	mov    esi,ecx
  4204dd:	mov    DWORD PTR [rbp-0x48],edx
  4204e0:	call   420420 <flatcc_verify_string_field@@Base+0x2e0>
  4204e5:	mov    rdi,QWORD PTR [rbp-0x20]
  4204e9:	mov    ecx,edi
  4204eb:	mov    r8w,WORD PTR [rbp-0x22]
  4204f0:	mov    rdi,QWORD PTR [rbp-0x30]
  4204f4:	mov    edx,edi
  4204f6:	mov    rdi,QWORD PTR [rbp-0x40]
  4204fa:	mov    esi,DWORD PTR [rbp-0x44]
  4204fd:	mov    r9d,DWORD PTR [rbp-0x48]
  420501:	mov    DWORD PTR [rbp-0x4c],edx
  420504:	mov    edx,r9d
  420507:	mov    DWORD PTR [rbp-0x50],ecx
  42050a:	mov    ecx,eax
  42050c:	mov    eax,DWORD PTR [rbp-0x50]
  42050f:	mov    WORD PTR [rbp-0x52],r8w
  420514:	mov    r8d,eax
  420517:	mov    r10w,WORD PTR [rbp-0x52]
  42051c:	movzx  r9d,r10w
  420520:	mov    r11d,DWORD PTR [rbp-0x4c]
  420524:	mov    DWORD PTR [rsp],r11d
  420528:	call   420540 <flatcc_verify_vector_field@@Base+0xf0>
  42052d:	mov    DWORD PTR [rbp-0x4],eax
  420530:	mov    eax,DWORD PTR [rbp-0x4]
  420533:	add    rsp,0x60
  420537:	pop    rbp
  420538:	ret    
  420539:	nop    DWORD PTR [rax+0x0]
  420540:	push   rbp
  420541:	mov    rbp,rsp
  420544:	sub    rsp,0x40
  420548:	mov    ax,r9w
  42054c:	mov    r9d,DWORD PTR [rbp+0x10]
  420550:	mov    QWORD PTR [rbp-0x10],rdi
  420554:	mov    DWORD PTR [rbp-0x14],esi
  420557:	mov    DWORD PTR [rbp-0x18],edx
  42055a:	mov    DWORD PTR [rbp-0x1c],ecx
  42055d:	mov    DWORD PTR [rbp-0x20],r8d
  420561:	mov    WORD PTR [rbp-0x22],ax
  420565:	mov    DWORD PTR [rbp-0x38],r9d
  420569:	mov    edi,DWORD PTR [rbp-0x14]
  42056c:	mov    esi,DWORD PTR [rbp-0x18]
  42056f:	mov    edx,DWORD PTR [rbp-0x1c]
  420572:	movzx  ecx,WORD PTR [rbp-0x22]
  420576:	call   422010 <flatcc_verify_union_vector_field@@Base+0x540>
  42057b:	mov    DWORD PTR [rbp-0x2c],eax
  42057e:	cmp    DWORD PTR [rbp-0x2c],0x0
  420582:	jne    420594 <flatcc_verify_vector_field@@Base+0x144>
  420588:	mov    DWORD PTR [rbp-0x4],0x10
  42058f:	jmp    42062e <flatcc_verify_vector_field@@Base+0x1de>
  420594:	jmp    420599 <flatcc_verify_vector_field@@Base+0x149>
  420599:	mov    eax,DWORD PTR [rbp-0x1c]
  42059c:	add    eax,DWORD PTR [rbp-0x18]
  42059f:	mov    DWORD PTR [rbp-0x18],eax
  4205a2:	mov    rdi,QWORD PTR [rbp-0x10]
  4205a6:	mov    esi,DWORD PTR [rbp-0x18]
  4205a9:	call   420420 <flatcc_verify_string_field@@Base+0x2e0>
  4205ae:	mov    DWORD PTR [rbp-0x28],eax
  4205b1:	mov    eax,DWORD PTR [rbp-0x18]
  4205b4:	mov    edi,eax
  4205b6:	add    rdi,0x4
  4205ba:	mov    eax,edi
  4205bc:	mov    DWORD PTR [rbp-0x18],eax
  4205bf:	mov    eax,DWORD PTR [rbp-0x28]
  4205c2:	cmp    eax,DWORD PTR [rbp+0x10]
  4205c5:	setbe  cl
  4205c8:	and    cl,0x1
  4205cb:	movzx  eax,cl
  4205ce:	mov    DWORD PTR [rbp-0x30],eax
  4205d1:	cmp    DWORD PTR [rbp-0x30],0x0
  4205d5:	jne    4205e7 <flatcc_verify_vector_field@@Base+0x197>
  4205db:	mov    DWORD PTR [rbp-0x4],0x19
  4205e2:	jmp    42062e <flatcc_verify_vector_field@@Base+0x1de>
  4205e7:	jmp    4205ec <flatcc_verify_vector_field@@Base+0x19c>
  4205ec:	jmp    4205f1 <flatcc_verify_vector_field@@Base+0x1a1>
  4205f1:	mov    eax,DWORD PTR [rbp-0x14]
  4205f4:	sub    eax,DWORD PTR [rbp-0x18]
  4205f7:	mov    ecx,DWORD PTR [rbp-0x28]
  4205fa:	imul   ecx,DWORD PTR [rbp-0x20]
  4205fe:	cmp    eax,ecx
  420600:	setae  dl
  420603:	and    dl,0x1
  420606:	movzx  eax,dl
  420609:	mov    DWORD PTR [rbp-0x34],eax
  42060c:	cmp    DWORD PTR [rbp-0x34],0x0
  420610:	jne    420622 <flatcc_verify_vector_field@@Base+0x1d2>
  420616:	mov    DWORD PTR [rbp-0x4],0x1a
  42061d:	jmp    42062e <flatcc_verify_vector_field@@Base+0x1de>
  420622:	jmp    420627 <flatcc_verify_vector_field@@Base+0x1d7>
  420627:	mov    DWORD PTR [rbp-0x4],0x0
  42062e:	mov    eax,DWORD PTR [rbp-0x4]
  420631:	add    rsp,0x40
  420635:	pop    rbp
  420636:	ret    
  420637:	nop    WORD PTR [rax+rax*1+0x0]

0000000000420640 <flatcc_verify_string_vector_field@@Base>:
  420640:	push   rbp
  420641:	mov    rbp,rsp
  420644:	sub    rsp,0x30
  420648:	mov    ax,si
  42064b:	mov    QWORD PTR [rbp-0x10],rdi
  42064f:	mov    WORD PTR [rbp-0x12],ax
  420653:	mov    DWORD PTR [rbp-0x18],edx
  420656:	mov    rdi,QWORD PTR [rbp-0x10]
  42065a:	mov    ax,WORD PTR [rbp-0x12]
  42065e:	mov    edx,DWORD PTR [rbp-0x18]
  420661:	movzx  esi,ax
  420664:	lea    rcx,[rbp-0x1c]
  420668:	call   4201e0 <flatcc_verify_string_field@@Base+0xa0>
  42066d:	mov    DWORD PTR [rbp-0x20],eax
  420670:	cmp    DWORD PTR [rbp-0x20],0x0
  420674:	jne    420684 <flatcc_verify_string_vector_field@@Base+0x44>
  42067a:	cmp    DWORD PTR [rbp-0x1c],0x0
  42067e:	jne    42068f <flatcc_verify_string_vector_field@@Base+0x4f>
  420684:	mov    eax,DWORD PTR [rbp-0x20]
  420687:	mov    DWORD PTR [rbp-0x4],eax
  42068a:	jmp    4206d7 <flatcc_verify_string_vector_field@@Base+0x97>
  42068f:	jmp    420694 <flatcc_verify_string_vector_field@@Base+0x54>
  420694:	mov    rax,QWORD PTR [rbp-0x10]
  420698:	mov    rdi,QWORD PTR [rax]
  42069b:	mov    rax,QWORD PTR [rbp-0x10]
  42069f:	mov    esi,DWORD PTR [rax+0x8]
  4206a2:	mov    edx,DWORD PTR [rbp-0x1c]
  4206a5:	mov    rax,QWORD PTR [rbp-0x10]
  4206a9:	mov    rax,QWORD PTR [rax]
  4206ac:	mov    ecx,DWORD PTR [rbp-0x1c]
  4206af:	mov    QWORD PTR [rbp-0x28],rdi
  4206b3:	mov    rdi,rax
  4206b6:	mov    DWORD PTR [rbp-0x2c],esi
  4206b9:	mov    esi,ecx
  4206bb:	mov    DWORD PTR [rbp-0x30],edx
  4206be:	call   420420 <flatcc_verify_string_field@@Base+0x2e0>
  4206c3:	mov    rdi,QWORD PTR [rbp-0x28]
  4206c7:	mov    esi,DWORD PTR [rbp-0x2c]
  4206ca:	mov    edx,DWORD PTR [rbp-0x30]
  4206cd:	mov    ecx,eax
  4206cf:	call   4206e0 <flatcc_verify_string_vector_field@@Base+0xa0>
  4206d4:	mov    DWORD PTR [rbp-0x4],eax
  4206d7:	mov    eax,DWORD PTR [rbp-0x4]
  4206da:	add    rsp,0x30
  4206de:	pop    rbp
  4206df:	ret    
  4206e0:	push   rbp
  4206e1:	mov    rbp,rsp
  4206e4:	sub    rsp,0x50
  4206e8:	mov    QWORD PTR [rbp-0x10],rdi
  4206ec:	mov    DWORD PTR [rbp-0x14],esi
  4206ef:	mov    DWORD PTR [rbp-0x18],edx
  4206f2:	mov    DWORD PTR [rbp-0x1c],ecx
  4206f5:	mov    rdi,QWORD PTR [rbp-0x10]
  4206f9:	mov    esi,DWORD PTR [rbp-0x14]
  4206fc:	mov    edx,DWORD PTR [rbp-0x18]
  4206ff:	mov    ecx,DWORD PTR [rbp-0x1c]
  420702:	mov    eax,0x4
  420707:	mov    r8d,eax
  42070a:	mov    r9d,eax
  42070d:	mov    DWORD PTR [rsp],0x3fffffff
  420714:	call   420540 <flatcc_verify_vector_field@@Base+0xf0>
  420719:	cmp    eax,0x0
  42071c:	je     42074e <flatcc_verify_string_vector_field@@Base+0x10e>
  420722:	mov    rdi,QWORD PTR [rbp-0x10]
  420726:	mov    esi,DWORD PTR [rbp-0x14]
  420729:	mov    edx,DWORD PTR [rbp-0x18]
  42072c:	mov    ecx,DWORD PTR [rbp-0x1c]
  42072f:	mov    eax,0x4
  420734:	mov    r8d,eax
  420737:	mov    r9d,eax
  42073a:	mov    DWORD PTR [rsp],0x3fffffff
  420741:	call   420540 <flatcc_verify_vector_field@@Base+0xf0>
  420746:	mov    DWORD PTR [rbp-0x4],eax
  420749:	jmp    42082c <flatcc_verify_string_vector_field@@Base+0x1ec>
  42074e:	mov    eax,DWORD PTR [rbp-0x1c]
  420751:	add    eax,DWORD PTR [rbp-0x18]
  420754:	mov    DWORD PTR [rbp-0x18],eax
  420757:	mov    rdi,QWORD PTR [rbp-0x10]
  42075b:	mov    esi,DWORD PTR [rbp-0x18]
  42075e:	call   420420 <flatcc_verify_string_field@@Base+0x2e0>
  420763:	mov    DWORD PTR [rbp-0x24],eax
  420766:	mov    eax,DWORD PTR [rbp-0x18]
  420769:	mov    edi,eax
  42076b:	add    rdi,0x4
  42076f:	mov    eax,edi
  420771:	mov    DWORD PTR [rbp-0x18],eax
  420774:	mov    DWORD PTR [rbp-0x20],0x0
  42077b:	mov    eax,DWORD PTR [rbp-0x20]
  42077e:	cmp    eax,DWORD PTR [rbp-0x24]
  420781:	jae    420825 <flatcc_verify_string_vector_field@@Base+0x1e5>
  420787:	mov    rdi,QWORD PTR [rbp-0x10]
  42078b:	mov    esi,DWORD PTR [rbp-0x14]
  42078e:	mov    edx,DWORD PTR [rbp-0x18]
  420791:	mov    rax,QWORD PTR [rbp-0x10]
  420795:	mov    ecx,DWORD PTR [rbp-0x18]
  420798:	mov    QWORD PTR [rbp-0x30],rdi
  42079c:	mov    rdi,rax
  42079f:	mov    DWORD PTR [rbp-0x34],esi
  4207a2:	mov    esi,ecx
  4207a4:	mov    DWORD PTR [rbp-0x38],edx
  4207a7:	call   420420 <flatcc_verify_string_field@@Base+0x2e0>
  4207ac:	mov    rdi,QWORD PTR [rbp-0x30]
  4207b0:	mov    esi,DWORD PTR [rbp-0x34]
  4207b3:	mov    edx,DWORD PTR [rbp-0x38]
  4207b6:	mov    ecx,eax
  4207b8:	call   420320 <flatcc_verify_string_field@@Base+0x1e0>
  4207bd:	cmp    eax,0x0
  4207c0:	je     420804 <flatcc_verify_string_vector_field@@Base+0x1c4>
  4207c6:	mov    rdi,QWORD PTR [rbp-0x10]
  4207ca:	mov    esi,DWORD PTR [rbp-0x14]
  4207cd:	mov    edx,DWORD PTR [rbp-0x18]
  4207d0:	mov    rax,QWORD PTR [rbp-0x10]
  4207d4:	mov    ecx,DWORD PTR [rbp-0x18]
  4207d7:	mov    QWORD PTR [rbp-0x40],rdi
  4207db:	mov    rdi,rax
  4207de:	mov    DWORD PTR [rbp-0x44],esi
  4207e1:	mov    esi,ecx
  4207e3:	mov    DWORD PTR [rbp-0x48],edx
  4207e6:	call   420420 <flatcc_verify_string_field@@Base+0x2e0>
  4207eb:	mov    rdi,QWORD PTR [rbp-0x40]
  4207ef:	mov    esi,DWORD PTR [rbp-0x44]
  4207f2:	mov    edx,DWORD PTR [rbp-0x48]
  4207f5:	mov    ecx,eax
  4207f7:	call   420320 <flatcc_verify_string_field@@Base+0x1e0>
  4207fc:	mov    DWORD PTR [rbp-0x4],eax
  4207ff:	jmp    42082c <flatcc_verify_string_vector_field@@Base+0x1ec>
  420804:	jmp    420809 <flatcc_verify_string_vector_field@@Base+0x1c9>
  420809:	mov    eax,DWORD PTR [rbp-0x20]
  42080c:	add    eax,0x1
  42080f:	mov    DWORD PTR [rbp-0x20],eax
  420812:	mov    eax,DWORD PTR [rbp-0x18]
  420815:	mov    ecx,eax
  420817:	add    rcx,0x4
  42081b:	mov    eax,ecx
  42081d:	mov    DWORD PTR [rbp-0x18],eax
  420820:	jmp    42077b <flatcc_verify_string_vector_field@@Base+0x13b>
  420825:	mov    DWORD PTR [rbp-0x4],0x0
  42082c:	mov    eax,DWORD PTR [rbp-0x4]
  42082f:	add    rsp,0x50
  420833:	pop    rbp
  420834:	ret    
  420835:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42083f:	nop

0000000000420840 <flatcc_verify_table_field@@Base>:
  420840:	push   rbp
  420841:	mov    rbp,rsp
  420844:	sub    rsp,0x40
  420848:	mov    ax,si
  42084b:	mov    QWORD PTR [rbp-0x10],rdi
  42084f:	mov    WORD PTR [rbp-0x12],ax
  420853:	mov    DWORD PTR [rbp-0x18],edx
  420856:	mov    QWORD PTR [rbp-0x20],rcx
  42085a:	mov    rdi,QWORD PTR [rbp-0x10]
  42085e:	mov    ax,WORD PTR [rbp-0x12]
  420862:	mov    edx,DWORD PTR [rbp-0x18]
  420865:	movzx  esi,ax
  420868:	lea    rcx,[rbp-0x24]
  42086c:	call   4201e0 <flatcc_verify_string_field@@Base+0xa0>
  420871:	mov    DWORD PTR [rbp-0x28],eax
  420874:	cmp    DWORD PTR [rbp-0x28],0x0
  420878:	jne    420888 <flatcc_verify_table_field@@Base+0x48>
  42087e:	cmp    DWORD PTR [rbp-0x24],0x0
  420882:	jne    420893 <flatcc_verify_table_field@@Base+0x53>
  420888:	mov    eax,DWORD PTR [rbp-0x28]
  42088b:	mov    DWORD PTR [rbp-0x4],eax
  42088e:	jmp    4208e7 <flatcc_verify_table_field@@Base+0xa7>
  420893:	jmp    420898 <flatcc_verify_table_field@@Base+0x58>
  420898:	mov    rax,QWORD PTR [rbp-0x10]
  42089c:	mov    rdi,QWORD PTR [rax]
  42089f:	mov    rax,QWORD PTR [rbp-0x10]
  4208a3:	mov    esi,DWORD PTR [rax+0x8]
  4208a6:	mov    edx,DWORD PTR [rbp-0x24]
  4208a9:	mov    rax,QWORD PTR [rbp-0x10]
  4208ad:	mov    rax,QWORD PTR [rax]
  4208b0:	mov    ecx,DWORD PTR [rbp-0x24]
  4208b3:	mov    QWORD PTR [rbp-0x30],rdi
  4208b7:	mov    rdi,rax
  4208ba:	mov    DWORD PTR [rbp-0x34],esi
  4208bd:	mov    esi,ecx
  4208bf:	mov    DWORD PTR [rbp-0x38],edx
  4208c2:	call   420420 <flatcc_verify_string_field@@Base+0x2e0>
  4208c7:	mov    rdi,QWORD PTR [rbp-0x10]
  4208cb:	mov    r8d,DWORD PTR [rdi+0xc]
  4208cf:	mov    r9,QWORD PTR [rbp-0x20]
  4208d3:	mov    rdi,QWORD PTR [rbp-0x30]
  4208d7:	mov    esi,DWORD PTR [rbp-0x34]
  4208da:	mov    edx,DWORD PTR [rbp-0x38]
  4208dd:	mov    ecx,eax
  4208df:	call   4208f0 <flatcc_verify_table_field@@Base+0xb0>
  4208e4:	mov    DWORD PTR [rbp-0x4],eax
  4208e7:	mov    eax,DWORD PTR [rbp-0x4]
  4208ea:	add    rsp,0x40
  4208ee:	pop    rbp
  4208ef:	ret    
  4208f0:	push   rbp
  4208f1:	mov    rbp,rsp
  4208f4:	sub    rsp,0x80
  4208fb:	mov    QWORD PTR [rbp-0x10],rdi
  4208ff:	mov    DWORD PTR [rbp-0x14],esi
  420902:	mov    DWORD PTR [rbp-0x18],edx
  420905:	mov    DWORD PTR [rbp-0x1c],ecx
  420908:	mov    DWORD PTR [rbp-0x20],r8d
  42090c:	mov    QWORD PTR [rbp-0x28],r9
  420910:	mov    eax,DWORD PTR [rbp-0x20]
  420913:	sub    eax,0x1
  420916:	mov    DWORD PTR [rbp-0x44],eax
  420919:	mov    DWORD PTR [rbp-0x54],eax
  42091c:	cmp    DWORD PTR [rbp-0x54],0x0
  420920:	jne    420932 <flatcc_verify_table_field@@Base+0xf2>
  420926:	mov    DWORD PTR [rbp-0x4],0x3
  42092d:	jmp    420b56 <flatcc_verify_table_field@@Base+0x316>
  420932:	jmp    420937 <flatcc_verify_table_field@@Base+0xf7>
  420937:	jmp    42093c <flatcc_verify_table_field@@Base+0xfc>
  42093c:	mov    edi,DWORD PTR [rbp-0x14]
  42093f:	mov    esi,DWORD PTR [rbp-0x18]
  420942:	mov    edx,DWORD PTR [rbp-0x1c]
  420945:	call   421f70 <flatcc_verify_union_vector_field@@Base+0x4a0>
  42094a:	mov    DWORD PTR [rbp-0x58],eax
  42094d:	cmp    DWORD PTR [rbp-0x58],0x0
  420951:	jne    420963 <flatcc_verify_table_field@@Base+0x123>
  420957:	mov    DWORD PTR [rbp-0x4],0xf
  42095e:	jmp    420b56 <flatcc_verify_table_field@@Base+0x316>
  420963:	jmp    420968 <flatcc_verify_table_field@@Base+0x128>
  420968:	mov    eax,DWORD PTR [rbp-0x18]
  42096b:	add    eax,DWORD PTR [rbp-0x1c]
  42096e:	mov    DWORD PTR [rbp-0x38],eax
  420971:	mov    eax,DWORD PTR [rbp-0x38]
  420974:	mov    rdi,QWORD PTR [rbp-0x10]
  420978:	mov    esi,DWORD PTR [rbp-0x38]
  42097b:	mov    DWORD PTR [rbp-0x74],eax
  42097e:	call   420420 <flatcc_verify_string_field@@Base+0x2e0>
  420983:	mov    esi,DWORD PTR [rbp-0x74]
  420986:	sub    esi,eax
  420988:	mov    DWORD PTR [rbp-0x2c],esi
  42098b:	xor    eax,eax
  42098d:	mov    cl,al
  42098f:	cmp    DWORD PTR [rbp-0x2c],0x0
  420993:	mov    BYTE PTR [rbp-0x75],cl
  420996:	jl     4209b2 <flatcc_verify_table_field@@Base+0x172>
  42099c:	mov    eax,DWORD PTR [rbp-0x2c]
  42099f:	mov    ecx,eax
  4209a1:	and    rcx,0x1
  4209a5:	cmp    rcx,0x0
  4209a9:	setne  dl
  4209ac:	xor    dl,0xff
  4209af:	mov    BYTE PTR [rbp-0x75],dl
  4209b2:	mov    al,BYTE PTR [rbp-0x75]
  4209b5:	and    al,0x1
  4209b7:	movzx  ecx,al
  4209ba:	mov    DWORD PTR [rbp-0x5c],ecx
  4209bd:	cmp    DWORD PTR [rbp-0x5c],0x0
  4209c1:	jne    4209d3 <flatcc_verify_table_field@@Base+0x193>
  4209c7:	mov    DWORD PTR [rbp-0x4],0x1d
  4209ce:	jmp    420b56 <flatcc_verify_table_field@@Base+0x316>
  4209d3:	jmp    4209d8 <flatcc_verify_table_field@@Base+0x198>
  4209d8:	jmp    4209dd <flatcc_verify_table_field@@Base+0x19d>
  4209dd:	mov    eax,DWORD PTR [rbp-0x2c]
  4209e0:	mov    ecx,eax
  4209e2:	add    rcx,0x2
  4209e6:	mov    eax,DWORD PTR [rbp-0x14]
  4209e9:	mov    edx,eax
  4209eb:	cmp    rcx,rdx
  4209ee:	setbe  sil
  4209f2:	and    sil,0x1
  4209f6:	movzx  eax,sil
  4209fa:	mov    DWORD PTR [rbp-0x60],eax
  4209fd:	cmp    DWORD PTR [rbp-0x60],0x0
  420a01:	jne    420a13 <flatcc_verify_table_field@@Base+0x1d3>
  420a07:	mov    DWORD PTR [rbp-0x4],0x1b
  420a0e:	jmp    420b56 <flatcc_verify_table_field@@Base+0x316>
  420a13:	jmp    420a18 <flatcc_verify_table_field@@Base+0x1d8>
  420a18:	mov    rdi,QWORD PTR [rbp-0x10]
  420a1c:	mov    esi,DWORD PTR [rbp-0x2c]
  420a1f:	call   4220d0 <flatcc_verify_union_vector_field@@Base+0x600>
  420a24:	mov    WORD PTR [rbp-0x32],ax
  420a28:	mov    esi,DWORD PTR [rbp-0x2c]
  420a2b:	movzx  ecx,WORD PTR [rbp-0x32]
  420a2f:	add    esi,ecx
  420a31:	mov    DWORD PTR [rbp-0x30],esi
  420a34:	xor    eax,eax
  420a36:	mov    cl,al
  420a38:	mov    eax,DWORD PTR [rbp-0x30]
  420a3b:	cmp    eax,DWORD PTR [rbp-0x14]
  420a3e:	mov    BYTE PTR [rbp-0x76],cl
  420a41:	ja     420a5e <flatcc_verify_table_field@@Base+0x21e>
  420a47:	movzx  eax,WORD PTR [rbp-0x32]
  420a4b:	mov    ecx,eax
  420a4d:	and    rcx,0x1
  420a51:	cmp    rcx,0x0
  420a55:	setne  dl
  420a58:	xor    dl,0xff
  420a5b:	mov    BYTE PTR [rbp-0x76],dl
  420a5e:	mov    al,BYTE PTR [rbp-0x76]
  420a61:	and    al,0x1
  420a63:	movzx  ecx,al
  420a66:	mov    DWORD PTR [rbp-0x64],ecx
  420a69:	cmp    DWORD PTR [rbp-0x64],0x0
  420a6d:	jne    420a7f <flatcc_verify_table_field@@Base+0x23f>
  420a73:	mov    DWORD PTR [rbp-0x4],0x1e
  420a7a:	jmp    420b56 <flatcc_verify_table_field@@Base+0x316>
  420a7f:	jmp    420a84 <flatcc_verify_table_field@@Base+0x244>
  420a84:	jmp    420a89 <flatcc_verify_table_field@@Base+0x249>
  420a89:	mov    DWORD PTR [rbp-0x68],0x1
  420a90:	cmp    DWORD PTR [rbp-0x68],0x0
  420a94:	jne    420aa6 <flatcc_verify_table_field@@Base+0x266>
  420a9a:	mov    DWORD PTR [rbp-0x4],0x1f
  420aa1:	jmp    420b56 <flatcc_verify_table_field@@Base+0x316>
  420aa6:	jmp    420aab <flatcc_verify_table_field@@Base+0x26b>
  420aab:	jmp    420ab0 <flatcc_verify_table_field@@Base+0x270>
  420ab0:	movzx  eax,WORD PTR [rbp-0x32]
  420ab4:	mov    ecx,eax
  420ab6:	cmp    rcx,0x4
  420aba:	setae  dl
  420abd:	and    dl,0x1
  420ac0:	movzx  eax,dl
  420ac3:	mov    DWORD PTR [rbp-0x6c],eax
  420ac6:	cmp    DWORD PTR [rbp-0x6c],0x0
  420aca:	jne    420adc <flatcc_verify_table_field@@Base+0x29c>
  420ad0:	mov    DWORD PTR [rbp-0x4],0x1c
  420ad7:	jmp    420b56 <flatcc_verify_table_field@@Base+0x316>
  420adc:	jmp    420ae1 <flatcc_verify_table_field@@Base+0x2a1>
  420ae1:	mov    rdi,QWORD PTR [rbp-0x10]
  420ae5:	mov    eax,DWORD PTR [rbp-0x2c]
  420ae8:	mov    ecx,eax
  420aea:	add    rcx,0x2
  420aee:	mov    eax,ecx
  420af0:	mov    esi,eax
  420af2:	call   4220d0 <flatcc_verify_union_vector_field@@Base+0x600>
  420af7:	mov    WORD PTR [rbp-0x34],ax
  420afb:	mov    eax,DWORD PTR [rbp-0x14]
  420afe:	sub    eax,DWORD PTR [rbp-0x38]
  420b01:	movzx  ecx,WORD PTR [rbp-0x34]
  420b05:	cmp    eax,ecx
  420b07:	setae  dl
  420b0a:	and    dl,0x1
  420b0d:	movzx  eax,dl
  420b10:	mov    DWORD PTR [rbp-0x70],eax
  420b13:	cmp    DWORD PTR [rbp-0x70],0x0
  420b17:	jne    420b29 <flatcc_verify_table_field@@Base+0x2e9>
  420b1d:	mov    DWORD PTR [rbp-0x4],0x14
  420b24:	jmp    420b56 <flatcc_verify_table_field@@Base+0x316>
  420b29:	jmp    420b2e <flatcc_verify_table_field@@Base+0x2ee>
  420b2e:	mov    rax,QWORD PTR [rbp-0x10]
  420b32:	mov    ecx,DWORD PTR [rbp-0x2c]
  420b35:	mov    edx,ecx
  420b37:	add    rax,rdx
  420b3a:	mov    QWORD PTR [rbp-0x40],rax
  420b3e:	mov    rax,QWORD PTR [rbp-0x10]
  420b42:	mov    QWORD PTR [rbp-0x50],rax
  420b46:	mov    ecx,DWORD PTR [rbp-0x14]
  420b49:	mov    DWORD PTR [rbp-0x48],ecx
  420b4c:	lea    rdi,[rbp-0x50]
  420b50:	call   QWORD PTR [rbp-0x28]
  420b53:	mov    DWORD PTR [rbp-0x4],eax
  420b56:	mov    eax,DWORD PTR [rbp-0x4]
  420b59:	add    rsp,0x80
  420b60:	pop    rbp
  420b61:	ret    
  420b62:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420b6c:	nop    DWORD PTR [rax+0x0]

0000000000420b70 <flatcc_verify_table_vector_field@@Base>:
  420b70:	push   rbp
  420b71:	mov    rbp,rsp
  420b74:	sub    rsp,0x40
  420b78:	mov    ax,si
  420b7b:	mov    QWORD PTR [rbp-0x10],rdi
  420b7f:	mov    WORD PTR [rbp-0x12],ax
  420b83:	mov    DWORD PTR [rbp-0x18],edx
  420b86:	mov    QWORD PTR [rbp-0x20],rcx
  420b8a:	mov    rdi,QWORD PTR [rbp-0x10]
  420b8e:	mov    ax,WORD PTR [rbp-0x12]
  420b92:	mov    edx,DWORD PTR [rbp-0x18]
  420b95:	movzx  esi,ax
  420b98:	lea    rcx,[rbp-0x24]
  420b9c:	call   4201e0 <flatcc_verify_string_field@@Base+0xa0>
  420ba1:	mov    DWORD PTR [rbp-0x28],eax
  420ba4:	cmp    DWORD PTR [rbp-0x28],0x0
  420ba8:	jne    420bb8 <flatcc_verify_table_vector_field@@Base+0x48>
  420bae:	cmp    DWORD PTR [rbp-0x24],0x0
  420bb2:	jne    420bc3 <flatcc_verify_table_vector_field@@Base+0x53>
  420bb8:	mov    eax,DWORD PTR [rbp-0x28]
  420bbb:	mov    DWORD PTR [rbp-0x4],eax
  420bbe:	jmp    420c17 <flatcc_verify_table_vector_field@@Base+0xa7>
  420bc3:	jmp    420bc8 <flatcc_verify_table_vector_field@@Base+0x58>
  420bc8:	mov    rax,QWORD PTR [rbp-0x10]
  420bcc:	mov    rdi,QWORD PTR [rax]
  420bcf:	mov    rax,QWORD PTR [rbp-0x10]
  420bd3:	mov    esi,DWORD PTR [rax+0x8]
  420bd6:	mov    edx,DWORD PTR [rbp-0x24]
  420bd9:	mov    rax,QWORD PTR [rbp-0x10]
  420bdd:	mov    rax,QWORD PTR [rax]
  420be0:	mov    ecx,DWORD PTR [rbp-0x24]
  420be3:	mov    QWORD PTR [rbp-0x30],rdi
  420be7:	mov    rdi,rax
  420bea:	mov    DWORD PTR [rbp-0x34],esi
  420bed:	mov    esi,ecx
  420bef:	mov    DWORD PTR [rbp-0x38],edx
  420bf2:	call   420420 <flatcc_verify_string_field@@Base+0x2e0>
  420bf7:	mov    rdi,QWORD PTR [rbp-0x10]
  420bfb:	mov    r8d,DWORD PTR [rdi+0xc]
  420bff:	mov    r9,QWORD PTR [rbp-0x20]
  420c03:	mov    rdi,QWORD PTR [rbp-0x30]
  420c07:	mov    esi,DWORD PTR [rbp-0x34]
  420c0a:	mov    edx,DWORD PTR [rbp-0x38]
  420c0d:	mov    ecx,eax
  420c0f:	call   420c20 <flatcc_verify_table_vector_field@@Base+0xb0>
  420c14:	mov    DWORD PTR [rbp-0x4],eax
  420c17:	mov    eax,DWORD PTR [rbp-0x4]
  420c1a:	add    rsp,0x40
  420c1e:	pop    rbp
  420c1f:	ret    
  420c20:	push   rbp
  420c21:	mov    rbp,rsp
  420c24:	sub    rsp,0x60
  420c28:	mov    QWORD PTR [rbp-0x10],rdi
  420c2c:	mov    DWORD PTR [rbp-0x14],esi
  420c2f:	mov    DWORD PTR [rbp-0x18],edx
  420c32:	mov    DWORD PTR [rbp-0x1c],ecx
  420c35:	mov    DWORD PTR [rbp-0x20],r8d
  420c39:	mov    QWORD PTR [rbp-0x28],r9
  420c3d:	mov    eax,DWORD PTR [rbp-0x20]
  420c40:	mov    ecx,eax
  420c42:	add    ecx,0xffffffff
  420c45:	mov    DWORD PTR [rbp-0x20],ecx
  420c48:	cmp    eax,0x0
  420c4b:	setg   dl
  420c4e:	and    dl,0x1
  420c51:	movzx  eax,dl
  420c54:	mov    DWORD PTR [rbp-0x34],eax
  420c57:	cmp    DWORD PTR [rbp-0x34],0x0
  420c5b:	jne    420c6d <flatcc_verify_table_vector_field@@Base+0xfd>
  420c61:	mov    DWORD PTR [rbp-0x4],0x3
  420c68:	jmp    420db9 <flatcc_verify_table_vector_field@@Base+0x249>
  420c6d:	jmp    420c72 <flatcc_verify_table_vector_field@@Base+0x102>
  420c72:	mov    rdi,QWORD PTR [rbp-0x10]
  420c76:	mov    esi,DWORD PTR [rbp-0x14]
  420c79:	mov    edx,DWORD PTR [rbp-0x18]
  420c7c:	mov    ecx,DWORD PTR [rbp-0x1c]
  420c7f:	mov    eax,0x4
  420c84:	mov    r8d,eax
  420c87:	mov    r9d,eax
  420c8a:	mov    DWORD PTR [rsp],0x3fffffff
  420c91:	call   420540 <flatcc_verify_vector_field@@Base+0xf0>
  420c96:	cmp    eax,0x0
  420c99:	je     420ccb <flatcc_verify_table_vector_field@@Base+0x15b>
  420c9f:	mov    rdi,QWORD PTR [rbp-0x10]
  420ca3:	mov    esi,DWORD PTR [rbp-0x14]
  420ca6:	mov    edx,DWORD PTR [rbp-0x18]
  420ca9:	mov    ecx,DWORD PTR [rbp-0x1c]
  420cac:	mov    eax,0x4
  420cb1:	mov    r8d,eax
  420cb4:	mov    r9d,eax
  420cb7:	mov    DWORD PTR [rsp],0x3fffffff
  420cbe:	call   420540 <flatcc_verify_vector_field@@Base+0xf0>
  420cc3:	mov    DWORD PTR [rbp-0x4],eax
  420cc6:	jmp    420db9 <flatcc_verify_table_vector_field@@Base+0x249>
  420ccb:	mov    eax,DWORD PTR [rbp-0x1c]
  420cce:	add    eax,DWORD PTR [rbp-0x18]
  420cd1:	mov    DWORD PTR [rbp-0x18],eax
  420cd4:	mov    rdi,QWORD PTR [rbp-0x10]
  420cd8:	mov    esi,DWORD PTR [rbp-0x18]
  420cdb:	call   420420 <flatcc_verify_string_field@@Base+0x2e0>
  420ce0:	mov    DWORD PTR [rbp-0x30],eax
  420ce3:	mov    eax,DWORD PTR [rbp-0x18]
  420ce6:	mov    edi,eax
  420ce8:	add    rdi,0x4
  420cec:	mov    eax,edi
  420cee:	mov    DWORD PTR [rbp-0x18],eax
  420cf1:	mov    DWORD PTR [rbp-0x2c],0x0
  420cf8:	mov    eax,DWORD PTR [rbp-0x2c]
  420cfb:	cmp    eax,DWORD PTR [rbp-0x30]
  420cfe:	jae    420db2 <flatcc_verify_table_vector_field@@Base+0x242>
  420d04:	mov    rdi,QWORD PTR [rbp-0x10]
  420d08:	mov    esi,DWORD PTR [rbp-0x14]
  420d0b:	mov    edx,DWORD PTR [rbp-0x18]
  420d0e:	mov    rax,QWORD PTR [rbp-0x10]
  420d12:	mov    ecx,DWORD PTR [rbp-0x18]
  420d15:	mov    QWORD PTR [rbp-0x40],rdi
  420d19:	mov    rdi,rax
  420d1c:	mov    DWORD PTR [rbp-0x44],esi
  420d1f:	mov    esi,ecx
  420d21:	mov    DWORD PTR [rbp-0x48],edx
  420d24:	call   420420 <flatcc_verify_string_field@@Base+0x2e0>
  420d29:	mov    r8d,DWORD PTR [rbp-0x20]
  420d2d:	mov    r9,QWORD PTR [rbp-0x28]
  420d31:	mov    rdi,QWORD PTR [rbp-0x40]
  420d35:	mov    esi,DWORD PTR [rbp-0x44]
  420d38:	mov    edx,DWORD PTR [rbp-0x48]
  420d3b:	mov    ecx,eax
  420d3d:	call   4208f0 <flatcc_verify_table_field@@Base+0xb0>
  420d42:	cmp    eax,0x0
  420d45:	je     420d91 <flatcc_verify_table_vector_field@@Base+0x221>
  420d4b:	mov    rdi,QWORD PTR [rbp-0x10]
  420d4f:	mov    esi,DWORD PTR [rbp-0x14]
  420d52:	mov    edx,DWORD PTR [rbp-0x18]
  420d55:	mov    rax,QWORD PTR [rbp-0x10]
  420d59:	mov    ecx,DWORD PTR [rbp-0x18]
  420d5c:	mov    QWORD PTR [rbp-0x50],rdi
  420d60:	mov    rdi,rax
  420d63:	mov    DWORD PTR [rbp-0x54],esi
  420d66:	mov    esi,ecx
  420d68:	mov    DWORD PTR [rbp-0x58],edx
  420d6b:	call   420420 <flatcc_verify_string_field@@Base+0x2e0>
  420d70:	mov    r8d,DWORD PTR [rbp-0x20]
  420d74:	mov    r9,QWORD PTR [rbp-0x28]
  420d78:	mov    rdi,QWORD PTR [rbp-0x50]
  420d7c:	mov    esi,DWORD PTR [rbp-0x54]
  420d7f:	mov    edx,DWORD PTR [rbp-0x58]
  420d82:	mov    ecx,eax
  420d84:	call   4208f0 <flatcc_verify_table_field@@Base+0xb0>
  420d89:	mov    DWORD PTR [rbp-0x4],eax
  420d8c:	jmp    420db9 <flatcc_verify_table_vector_field@@Base+0x249>
  420d91:	jmp    420d96 <flatcc_verify_table_vector_field@@Base+0x226>
  420d96:	mov    eax,DWORD PTR [rbp-0x2c]
  420d99:	add    eax,0x1
  420d9c:	mov    DWORD PTR [rbp-0x2c],eax
  420d9f:	mov    eax,DWORD PTR [rbp-0x18]
  420da2:	mov    ecx,eax
  420da4:	add    rcx,0x4
  420da8:	mov    eax,ecx
  420daa:	mov    DWORD PTR [rbp-0x18],eax
  420dad:	jmp    420cf8 <flatcc_verify_table_vector_field@@Base+0x188>
  420db2:	mov    DWORD PTR [rbp-0x4],0x0
  420db9:	mov    eax,DWORD PTR [rbp-0x4]
  420dbc:	add    rsp,0x60
  420dc0:	pop    rbp
  420dc1:	ret    
  420dc2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420dcc:	nop    DWORD PTR [rax+0x0]

0000000000420dd0 <flatcc_verify_union_table@@Base>:
  420dd0:	push   rbp
  420dd1:	mov    rbp,rsp
  420dd4:	sub    rsp,0x10
  420dd8:	mov    QWORD PTR [rbp-0x8],rdi
  420ddc:	mov    QWORD PTR [rbp-0x10],rsi
  420de0:	mov    rsi,QWORD PTR [rbp-0x8]
  420de4:	mov    rdi,QWORD PTR [rsi]
  420de7:	mov    rsi,QWORD PTR [rbp-0x8]
  420deb:	mov    esi,DWORD PTR [rsi+0x8]
  420dee:	mov    rax,QWORD PTR [rbp-0x8]
  420df2:	mov    edx,DWORD PTR [rax+0x14]
  420df5:	mov    rax,QWORD PTR [rbp-0x8]
  420df9:	mov    ecx,DWORD PTR [rax+0x18]
  420dfc:	mov    rax,QWORD PTR [rbp-0x8]
  420e00:	mov    r8d,DWORD PTR [rax+0xc]
  420e04:	mov    r9,QWORD PTR [rbp-0x10]
  420e08:	call   4208f0 <flatcc_verify_table_field@@Base+0xb0>
  420e0d:	add    rsp,0x10
  420e11:	pop    rbp
  420e12:	ret    
  420e13:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420e1d:	nop    DWORD PTR [rax]

0000000000420e20 <flatcc_verify_union_struct@@Base>:
  420e20:	push   rbp
  420e21:	mov    rbp,rsp
  420e24:	sub    rsp,0x20
  420e28:	mov    ax,dx
  420e2b:	mov    QWORD PTR [rbp-0x8],rdi
  420e2f:	mov    QWORD PTR [rbp-0x10],rsi
  420e33:	mov    WORD PTR [rbp-0x12],ax
  420e37:	mov    rsi,QWORD PTR [rbp-0x8]
  420e3b:	mov    edi,DWORD PTR [rsi+0x8]
  420e3e:	mov    rsi,QWORD PTR [rbp-0x8]
  420e42:	mov    esi,DWORD PTR [rsi+0x14]
  420e45:	mov    rcx,QWORD PTR [rbp-0x8]
  420e49:	mov    edx,DWORD PTR [rcx+0x18]
  420e4c:	mov    rcx,QWORD PTR [rbp-0x10]
  420e50:	mov    r8d,ecx
  420e53:	mov    ecx,r8d
  420e56:	movzx  r8d,WORD PTR [rbp-0x12]
  420e5b:	call   420e70 <flatcc_verify_union_struct@@Base+0x50>
  420e60:	add    rsp,0x20
  420e64:	pop    rbp
  420e65:	ret    
  420e66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420e70:	push   rbp
  420e71:	mov    rbp,rsp
  420e74:	mov    ax,r8w
  420e78:	mov    DWORD PTR [rbp-0x8],edi
  420e7b:	mov    DWORD PTR [rbp-0xc],esi
  420e7e:	mov    DWORD PTR [rbp-0x10],edx
  420e81:	mov    DWORD PTR [rbp-0x14],ecx
  420e84:	mov    WORD PTR [rbp-0x16],ax
  420e88:	cmp    DWORD PTR [rbp-0x10],0x0
  420e8c:	je     420ea1 <flatcc_verify_union_struct@@Base+0x81>
  420e92:	mov    eax,DWORD PTR [rbp-0xc]
  420e95:	add    eax,DWORD PTR [rbp-0x10]
  420e98:	cmp    eax,DWORD PTR [rbp-0x8]
  420e9b:	jbe    420ead <flatcc_verify_union_struct@@Base+0x8d>
  420ea1:	mov    DWORD PTR [rbp-0x4],0x12
  420ea8:	jmp    420f60 <flatcc_verify_union_struct@@Base+0x140>
  420ead:	mov    eax,DWORD PTR [rbp-0x10]
  420eb0:	add    eax,DWORD PTR [rbp-0xc]
  420eb3:	mov    DWORD PTR [rbp-0xc],eax
  420eb6:	mov    eax,DWORD PTR [rbp-0xc]
  420eb9:	add    eax,DWORD PTR [rbp-0x14]
  420ebc:	cmp    eax,DWORD PTR [rbp-0xc]
  420ebf:	setae  cl
  420ec2:	and    cl,0x1
  420ec5:	movzx  eax,cl
  420ec8:	mov    DWORD PTR [rbp-0x1c],eax
  420ecb:	cmp    DWORD PTR [rbp-0x1c],0x0
  420ecf:	jne    420ee1 <flatcc_verify_union_struct@@Base+0xc1>
  420ed5:	mov    DWORD PTR [rbp-0x4],0xa
  420edc:	jmp    420f60 <flatcc_verify_union_struct@@Base+0x140>
  420ee1:	jmp    420ee6 <flatcc_verify_union_struct@@Base+0xc6>
  420ee6:	jmp    420eeb <flatcc_verify_union_struct@@Base+0xcb>
  420eeb:	mov    eax,DWORD PTR [rbp-0xc]
  420eee:	add    eax,DWORD PTR [rbp-0x14]
  420ef1:	cmp    eax,DWORD PTR [rbp-0x8]
  420ef4:	setbe  cl
  420ef7:	and    cl,0x1
  420efa:	movzx  eax,cl
  420efd:	mov    DWORD PTR [rbp-0x20],eax
  420f00:	cmp    DWORD PTR [rbp-0x20],0x0
  420f04:	jne    420f16 <flatcc_verify_union_struct@@Base+0xf6>
  420f0a:	mov    DWORD PTR [rbp-0x4],0x9
  420f11:	jmp    420f60 <flatcc_verify_union_struct@@Base+0x140>
  420f16:	jmp    420f1b <flatcc_verify_union_struct@@Base+0xfb>
  420f1b:	jmp    420f20 <flatcc_verify_union_struct@@Base+0x100>
  420f20:	mov    eax,DWORD PTR [rbp-0xc]
  420f23:	movzx  ecx,WORD PTR [rbp-0x16]
  420f27:	sub    ecx,0x1
  420f2a:	and    eax,ecx
  420f2c:	cmp    eax,0x0
  420f2f:	setne  dl
  420f32:	xor    dl,0xff
  420f35:	and    dl,0x1
  420f38:	movzx  eax,dl
  420f3b:	mov    DWORD PTR [rbp-0x24],eax
  420f3e:	cmp    DWORD PTR [rbp-0x24],0x0
  420f42:	jne    420f54 <flatcc_verify_union_struct@@Base+0x134>
  420f48:	mov    DWORD PTR [rbp-0x4],0xb
  420f4f:	jmp    420f60 <flatcc_verify_union_struct@@Base+0x140>
  420f54:	jmp    420f59 <flatcc_verify_union_struct@@Base+0x139>
  420f59:	mov    DWORD PTR [rbp-0x4],0x0
  420f60:	mov    eax,DWORD PTR [rbp-0x4]
  420f63:	pop    rbp
  420f64:	ret    
  420f65:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420f6f:	nop

0000000000420f70 <flatcc_verify_union_string@@Base>:
  420f70:	push   rbp
  420f71:	mov    rbp,rsp
  420f74:	sub    rsp,0x10
  420f78:	mov    QWORD PTR [rbp-0x8],rdi
  420f7c:	mov    rdi,QWORD PTR [rbp-0x8]
  420f80:	mov    rdi,QWORD PTR [rdi]
  420f83:	mov    rax,QWORD PTR [rbp-0x8]
  420f87:	mov    esi,DWORD PTR [rax+0x8]
  420f8a:	mov    rax,QWORD PTR [rbp-0x8]
  420f8e:	mov    edx,DWORD PTR [rax+0x14]
  420f91:	mov    rax,QWORD PTR [rbp-0x8]
  420f95:	mov    ecx,DWORD PTR [rax+0x18]
  420f98:	call   420320 <flatcc_verify_string_field@@Base+0x1e0>
  420f9d:	add    rsp,0x10
  420fa1:	pop    rbp
  420fa2:	ret    
  420fa3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420fad:	nop    DWORD PTR [rax]

0000000000420fb0 <flatcc_verify_buffer_header@@Base>:
  420fb0:	push   rbp
  420fb1:	mov    rbp,rsp
  420fb4:	sub    rsp,0x40
  420fb8:	mov    QWORD PTR [rbp-0x10],rdi
  420fbc:	mov    QWORD PTR [rbp-0x18],rsi
  420fc0:	mov    QWORD PTR [rbp-0x20],rdx
  420fc4:	mov    rax,QWORD PTR [rbp-0x10]
  420fc8:	and    rax,0x3
  420fcc:	cmp    rax,0x0
  420fd0:	setne  cl
  420fd3:	xor    cl,0xff
  420fd6:	and    cl,0x1
  420fd9:	movzx  edx,cl
  420fdc:	mov    DWORD PTR [rbp-0x2c],edx
  420fdf:	cmp    DWORD PTR [rbp-0x2c],0x0
  420fe3:	jne    420ff5 <flatcc_verify_buffer_header@@Base+0x45>
  420fe9:	mov    DWORD PTR [rbp-0x4],0x5
  420ff0:	jmp    4210d6 <flatcc_verify_buffer_header@@Base+0x126>
  420ff5:	jmp    420ffa <flatcc_verify_buffer_header@@Base+0x4a>
  420ffa:	jmp    420fff <flatcc_verify_buffer_header@@Base+0x4f>
  420fff:	mov    eax,0xfffffff7
  421004:	mov    ecx,eax
  421006:	cmp    QWORD PTR [rbp-0x18],rcx
  42100a:	setbe  dl
  42100d:	and    dl,0x1
  421010:	movzx  eax,dl
  421013:	mov    DWORD PTR [rbp-0x30],eax
  421016:	cmp    DWORD PTR [rbp-0x30],0x0
  42101a:	jne    42102c <flatcc_verify_buffer_header@@Base+0x7c>
  421020:	mov    DWORD PTR [rbp-0x4],0x6
  421027:	jmp    4210d6 <flatcc_verify_buffer_header@@Base+0x126>
  42102c:	jmp    421031 <flatcc_verify_buffer_header@@Base+0x81>
  421031:	jmp    421036 <flatcc_verify_buffer_header@@Base+0x86>
  421036:	cmp    QWORD PTR [rbp-0x18],0x8
  42103b:	setae  al
  42103e:	and    al,0x1
  421040:	movzx  ecx,al
  421043:	mov    DWORD PTR [rbp-0x34],ecx
  421046:	cmp    DWORD PTR [rbp-0x34],0x0
  42104a:	jne    42105c <flatcc_verify_buffer_header@@Base+0xac>
  421050:	mov    DWORD PTR [rbp-0x4],0x1
  421057:	jmp    4210d6 <flatcc_verify_buffer_header@@Base+0x126>
  42105c:	jmp    421061 <flatcc_verify_buffer_header@@Base+0xb1>
  421061:	cmp    QWORD PTR [rbp-0x20],0x0
  421066:	je     4210cf <flatcc_verify_buffer_header@@Base+0x11f>
  42106c:	mov    rdi,QWORD PTR [rbp-0x20]
  421070:	call   4210e0 <flatcc_verify_buffer_header@@Base+0x130>
  421075:	mov    DWORD PTR [rbp-0x28],eax
  421078:	mov    rdi,QWORD PTR [rbp-0x10]
  42107c:	mov    esi,0x4
  421081:	call   421120 <flatcc_verify_buffer_header@@Base+0x170>
  421086:	mov    DWORD PTR [rbp-0x24],eax
  421089:	cmp    DWORD PTR [rbp-0x28],0x0
  42108d:	mov    al,0x1
  42108f:	mov    BYTE PTR [rbp-0x39],al
  421092:	je     4210a4 <flatcc_verify_buffer_header@@Base+0xf4>
  421098:	mov    eax,DWORD PTR [rbp-0x24]
  42109b:	cmp    eax,DWORD PTR [rbp-0x28]
  42109e:	sete   cl
  4210a1:	mov    BYTE PTR [rbp-0x39],cl
  4210a4:	mov    al,BYTE PTR [rbp-0x39]
  4210a7:	and    al,0x1
  4210a9:	movzx  ecx,al
  4210ac:	mov    DWORD PTR [rbp-0x38],ecx
  4210af:	cmp    DWORD PTR [rbp-0x38],0x0
  4210b3:	jne    4210c5 <flatcc_verify_buffer_header@@Base+0x115>
  4210b9:	mov    DWORD PTR [rbp-0x4],0x2
  4210c0:	jmp    4210d6 <flatcc_verify_buffer_header@@Base+0x126>
  4210c5:	jmp    4210ca <flatcc_verify_buffer_header@@Base+0x11a>
  4210ca:	jmp    4210cf <flatcc_verify_buffer_header@@Base+0x11f>
  4210cf:	mov    DWORD PTR [rbp-0x4],0x0
  4210d6:	mov    eax,DWORD PTR [rbp-0x4]
  4210d9:	add    rsp,0x40
  4210dd:	pop    rbp
  4210de:	ret    
  4210df:	nop
  4210e0:	push   rbp
  4210e1:	mov    rbp,rsp
  4210e4:	sub    rsp,0x20
  4210e8:	mov    eax,0x4
  4210ed:	mov    edx,eax
  4210ef:	mov    QWORD PTR [rbp-0x8],rdi
  4210f3:	mov    DWORD PTR [rbp-0xc],0x0
  4210fa:	lea    rdi,[rbp-0xc]
  4210fe:	mov    rsi,QWORD PTR [rbp-0x8]
  421102:	call   404040 <strncpy@plt>
  421107:	mov    edi,DWORD PTR [rbp-0xc]
  42110a:	mov    QWORD PTR [rbp-0x18],rax
  42110e:	call   422150 <flatcc_verify_union_vector_field@@Base+0x680>
  421113:	add    rsp,0x20
  421117:	pop    rbp
  421118:	ret    
  421119:	nop    DWORD PTR [rax+0x0]
  421120:	push   rbp
  421121:	mov    rbp,rsp
  421124:	sub    rsp,0x10
  421128:	mov    QWORD PTR [rbp-0x8],rdi
  42112c:	mov    DWORD PTR [rbp-0xc],esi
  42112f:	mov    rdi,QWORD PTR [rbp-0x8]
  421133:	mov    esi,DWORD PTR [rbp-0xc]
  421136:	mov    eax,esi
  421138:	add    rdi,rax
  42113b:	call   422160 <flatcc_verify_union_vector_field@@Base+0x690>
  421140:	add    rsp,0x10
  421144:	pop    rbp
  421145:	ret    
  421146:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000421150 <flatcc_verify_typed_buffer_header@@Base>:
  421150:	push   rbp
  421151:	mov    rbp,rsp
  421154:	sub    rsp,0x40
  421158:	mov    QWORD PTR [rbp-0x10],rdi
  42115c:	mov    QWORD PTR [rbp-0x18],rsi
  421160:	mov    DWORD PTR [rbp-0x1c],edx
  421163:	mov    rax,QWORD PTR [rbp-0x10]
  421167:	and    rax,0x3
  42116b:	cmp    rax,0x0
  42116f:	setne  cl
  421172:	xor    cl,0xff
  421175:	and    cl,0x1
  421178:	movzx  edx,cl
  42117b:	mov    DWORD PTR [rbp-0x28],edx
  42117e:	cmp    DWORD PTR [rbp-0x28],0x0
  421182:	jne    421194 <flatcc_verify_typed_buffer_header@@Base+0x44>
  421188:	mov    DWORD PTR [rbp-0x4],0x5
  42118f:	jmp    42126e <flatcc_verify_typed_buffer_header@@Base+0x11e>
  421194:	jmp    421199 <flatcc_verify_typed_buffer_header@@Base+0x49>
  421199:	jmp    42119e <flatcc_verify_typed_buffer_header@@Base+0x4e>
  42119e:	mov    eax,0xfffffff7
  4211a3:	mov    ecx,eax
  4211a5:	cmp    QWORD PTR [rbp-0x18],rcx
  4211a9:	setbe  dl
  4211ac:	and    dl,0x1
  4211af:	movzx  eax,dl
  4211b2:	mov    DWORD PTR [rbp-0x2c],eax
  4211b5:	cmp    DWORD PTR [rbp-0x2c],0x0
  4211b9:	jne    4211cb <flatcc_verify_typed_buffer_header@@Base+0x7b>
  4211bf:	mov    DWORD PTR [rbp-0x4],0x6
  4211c6:	jmp    42126e <flatcc_verify_typed_buffer_header@@Base+0x11e>
  4211cb:	jmp    4211d0 <flatcc_verify_typed_buffer_header@@Base+0x80>
  4211d0:	jmp    4211d5 <flatcc_verify_typed_buffer_header@@Base+0x85>
  4211d5:	cmp    QWORD PTR [rbp-0x18],0x8
  4211da:	setae  al
  4211dd:	and    al,0x1
  4211df:	movzx  ecx,al
  4211e2:	mov    DWORD PTR [rbp-0x30],ecx
  4211e5:	cmp    DWORD PTR [rbp-0x30],0x0
  4211e9:	jne    4211fb <flatcc_verify_typed_buffer_header@@Base+0xab>
  4211ef:	mov    DWORD PTR [rbp-0x4],0x1
  4211f6:	jmp    42126e <flatcc_verify_typed_buffer_header@@Base+0x11e>
  4211fb:	jmp    421200 <flatcc_verify_typed_buffer_header@@Base+0xb0>
  421200:	cmp    DWORD PTR [rbp-0x1c],0x0
  421204:	je     421267 <flatcc_verify_typed_buffer_header@@Base+0x117>
  42120a:	mov    eax,DWORD PTR [rbp-0x1c]
  42120d:	mov    DWORD PTR [rbp-0x24],eax
  421210:	mov    rdi,QWORD PTR [rbp-0x10]
  421214:	mov    esi,0x4
  421219:	call   421120 <flatcc_verify_buffer_header@@Base+0x170>
  42121e:	mov    DWORD PTR [rbp-0x20],eax
  421221:	cmp    DWORD PTR [rbp-0x24],0x0
  421225:	mov    al,0x1
  421227:	mov    BYTE PTR [rbp-0x35],al
  42122a:	je     42123c <flatcc_verify_typed_buffer_header@@Base+0xec>
  421230:	mov    eax,DWORD PTR [rbp-0x20]
  421233:	cmp    eax,DWORD PTR [rbp-0x24]
  421236:	sete   cl
  421239:	mov    BYTE PTR [rbp-0x35],cl
  42123c:	mov    al,BYTE PTR [rbp-0x35]
  42123f:	and    al,0x1
  421241:	movzx  ecx,al
  421244:	mov    DWORD PTR [rbp-0x34],ecx
  421247:	cmp    DWORD PTR [rbp-0x34],0x0
  42124b:	jne    42125d <flatcc_verify_typed_buffer_header@@Base+0x10d>
  421251:	mov    DWORD PTR [rbp-0x4],0x2
  421258:	jmp    42126e <flatcc_verify_typed_buffer_header@@Base+0x11e>
  42125d:	jmp    421262 <flatcc_verify_typed_buffer_header@@Base+0x112>
  421262:	jmp    421267 <flatcc_verify_typed_buffer_header@@Base+0x117>
  421267:	mov    DWORD PTR [rbp-0x4],0x0
  42126e:	mov    eax,DWORD PTR [rbp-0x4]
  421271:	add    rsp,0x40
  421275:	pop    rbp
  421276:	ret    
  421277:	nop    WORD PTR [rax+rax*1+0x0]

0000000000421280 <flatcc_verify_struct_as_root@@Base>:
  421280:	push   rbp
  421281:	mov    rbp,rsp
  421284:	sub    rsp,0x30
  421288:	mov    ax,r8w
  42128c:	mov    QWORD PTR [rbp-0x10],rdi
  421290:	mov    QWORD PTR [rbp-0x18],rsi
  421294:	mov    QWORD PTR [rbp-0x20],rdx
  421298:	mov    QWORD PTR [rbp-0x28],rcx
  42129c:	mov    WORD PTR [rbp-0x2a],ax
  4212a0:	mov    rdi,QWORD PTR [rbp-0x10]
  4212a4:	mov    rsi,QWORD PTR [rbp-0x18]
  4212a8:	mov    rdx,QWORD PTR [rbp-0x20]
  4212ac:	call   420fb0 <flatcc_verify_buffer_header@@Base>
  4212b1:	cmp    eax,0x0
  4212b4:	je     4212d3 <flatcc_verify_struct_as_root@@Base+0x53>
  4212ba:	mov    rdi,QWORD PTR [rbp-0x10]
  4212be:	mov    rsi,QWORD PTR [rbp-0x18]
  4212c2:	mov    rdx,QWORD PTR [rbp-0x20]
  4212c6:	call   420fb0 <flatcc_verify_buffer_header@@Base>
  4212cb:	mov    DWORD PTR [rbp-0x4],eax
  4212ce:	jmp    421301 <flatcc_verify_struct_as_root@@Base+0x81>
  4212d3:	xor    esi,esi
  4212d5:	mov    rax,QWORD PTR [rbp-0x18]
  4212d9:	mov    ecx,eax
  4212db:	mov    rdi,QWORD PTR [rbp-0x10]
  4212df:	mov    DWORD PTR [rbp-0x30],ecx
  4212e2:	call   420420 <flatcc_verify_string_field@@Base+0x2e0>
  4212e7:	xor    esi,esi
  4212e9:	mov    rdi,QWORD PTR [rbp-0x28]
  4212ed:	mov    ecx,edi
  4212ef:	mov    edi,DWORD PTR [rbp-0x30]
  4212f2:	mov    edx,eax
  4212f4:	movzx  r8d,WORD PTR [rbp-0x2a]
  4212f9:	call   420e70 <flatcc_verify_union_struct@@Base+0x50>
  4212fe:	mov    DWORD PTR [rbp-0x4],eax
  421301:	mov    eax,DWORD PTR [rbp-0x4]
  421304:	add    rsp,0x30
  421308:	pop    rbp
  421309:	ret    
  42130a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000421310 <flatcc_verify_struct_as_typed_root@@Base>:
  421310:	push   rbp
  421311:	mov    rbp,rsp
  421314:	sub    rsp,0x30
  421318:	mov    ax,r8w
  42131c:	mov    QWORD PTR [rbp-0x10],rdi
  421320:	mov    QWORD PTR [rbp-0x18],rsi
  421324:	mov    DWORD PTR [rbp-0x1c],edx
  421327:	mov    QWORD PTR [rbp-0x28],rcx
  42132b:	mov    WORD PTR [rbp-0x2a],ax
  42132f:	mov    rdi,QWORD PTR [rbp-0x10]
  421333:	mov    rsi,QWORD PTR [rbp-0x18]
  421337:	mov    edx,DWORD PTR [rbp-0x1c]
  42133a:	call   421150 <flatcc_verify_typed_buffer_header@@Base>
  42133f:	cmp    eax,0x0
  421342:	je     421360 <flatcc_verify_struct_as_typed_root@@Base+0x50>
  421348:	mov    rdi,QWORD PTR [rbp-0x10]
  42134c:	mov    rsi,QWORD PTR [rbp-0x18]
  421350:	mov    edx,DWORD PTR [rbp-0x1c]
  421353:	call   421150 <flatcc_verify_typed_buffer_header@@Base>
  421358:	mov    DWORD PTR [rbp-0x4],eax
  42135b:	jmp    42138e <flatcc_verify_struct_as_typed_root@@Base+0x7e>
  421360:	xor    esi,esi
  421362:	mov    rax,QWORD PTR [rbp-0x18]
  421366:	mov    ecx,eax
  421368:	mov    rdi,QWORD PTR [rbp-0x10]
  42136c:	mov    DWORD PTR [rbp-0x30],ecx
  42136f:	call   420420 <flatcc_verify_string_field@@Base+0x2e0>
  421374:	xor    esi,esi
  421376:	mov    rdi,QWORD PTR [rbp-0x28]
  42137a:	mov    ecx,edi
  42137c:	mov    edi,DWORD PTR [rbp-0x30]
  42137f:	mov    edx,eax
  421381:	movzx  r8d,WORD PTR [rbp-0x2a]
  421386:	call   420e70 <flatcc_verify_union_struct@@Base+0x50>
  42138b:	mov    DWORD PTR [rbp-0x4],eax
  42138e:	mov    eax,DWORD PTR [rbp-0x4]
  421391:	add    rsp,0x30
  421395:	pop    rbp
  421396:	ret    
  421397:	nop    WORD PTR [rax+rax*1+0x0]

00000000004213a0 <flatcc_verify_table_as_root@@Base>:
  4213a0:	push   rbp
  4213a1:	mov    rbp,rsp
  4213a4:	sub    rsp,0x40
  4213a8:	mov    QWORD PTR [rbp-0x10],rdi
  4213ac:	mov    QWORD PTR [rbp-0x18],rsi
  4213b0:	mov    QWORD PTR [rbp-0x20],rdx
  4213b4:	mov    QWORD PTR [rbp-0x28],rcx
  4213b8:	mov    rdi,QWORD PTR [rbp-0x10]
  4213bc:	mov    rcx,QWORD PTR [rbp-0x18]
  4213c0:	mov    eax,ecx
  4213c2:	mov    eax,eax
  4213c4:	mov    esi,eax
  4213c6:	mov    rdx,QWORD PTR [rbp-0x20]
  4213ca:	call   420fb0 <flatcc_verify_buffer_header@@Base>
  4213cf:	cmp    eax,0x0
  4213d2:	je     4213f7 <flatcc_verify_table_as_root@@Base+0x57>
  4213d8:	mov    rdi,QWORD PTR [rbp-0x10]
  4213dc:	mov    rax,QWORD PTR [rbp-0x18]
  4213e0:	mov    ecx,eax
  4213e2:	mov    ecx,ecx
  4213e4:	mov    esi,ecx
  4213e6:	mov    rdx,QWORD PTR [rbp-0x20]
  4213ea:	call   420fb0 <flatcc_verify_buffer_header@@Base>
  4213ef:	mov    DWORD PTR [rbp-0x4],eax
  4213f2:	jmp    421433 <flatcc_verify_table_as_root@@Base+0x93>
  4213f7:	xor    esi,esi
  4213f9:	mov    rdi,QWORD PTR [rbp-0x10]
  4213fd:	mov    rax,QWORD PTR [rbp-0x18]
  421401:	mov    ecx,eax
  421403:	mov    rax,QWORD PTR [rbp-0x10]
  421407:	mov    QWORD PTR [rbp-0x30],rdi
  42140b:	mov    rdi,rax
  42140e:	mov    DWORD PTR [rbp-0x34],ecx
  421411:	call   420420 <flatcc_verify_string_field@@Base+0x2e0>
  421416:	xor    edx,edx
  421418:	mov    r9,QWORD PTR [rbp-0x28]
  42141c:	mov    rdi,QWORD PTR [rbp-0x30]
  421420:	mov    esi,DWORD PTR [rbp-0x34]
  421423:	mov    ecx,eax
  421425:	mov    r8d,0x64
  42142b:	call   4208f0 <flatcc_verify_table_field@@Base+0xb0>
  421430:	mov    DWORD PTR [rbp-0x4],eax
  421433:	mov    eax,DWORD PTR [rbp-0x4]
  421436:	add    rsp,0x40
  42143a:	pop    rbp
  42143b:	ret    
  42143c:	nop    DWORD PTR [rax+0x0]

0000000000421440 <flatcc_verify_table_as_typed_root@@Base>:
  421440:	push   rbp
  421441:	mov    rbp,rsp
  421444:	sub    rsp,0x40
  421448:	mov    QWORD PTR [rbp-0x10],rdi
  42144c:	mov    QWORD PTR [rbp-0x18],rsi
  421450:	mov    DWORD PTR [rbp-0x1c],edx
  421453:	mov    QWORD PTR [rbp-0x28],rcx
  421457:	mov    rdi,QWORD PTR [rbp-0x10]
  42145b:	mov    rcx,QWORD PTR [rbp-0x18]
  42145f:	mov    edx,ecx
  421461:	mov    edx,edx
  421463:	mov    esi,edx
  421465:	mov    edx,DWORD PTR [rbp-0x1c]
  421468:	call   421150 <flatcc_verify_typed_buffer_header@@Base>
  42146d:	cmp    eax,0x0
  421470:	je     421494 <flatcc_verify_table_as_typed_root@@Base+0x54>
  421476:	mov    rdi,QWORD PTR [rbp-0x10]
  42147a:	mov    rax,QWORD PTR [rbp-0x18]
  42147e:	mov    ecx,eax
  421480:	mov    ecx,ecx
  421482:	mov    esi,ecx
  421484:	mov    edx,DWORD PTR [rbp-0x1c]
  421487:	call   421150 <flatcc_verify_typed_buffer_header@@Base>
  42148c:	mov    DWORD PTR [rbp-0x4],eax
  42148f:	jmp    4214d0 <flatcc_verify_table_as_typed_root@@Base+0x90>
  421494:	xor    esi,esi
  421496:	mov    rdi,QWORD PTR [rbp-0x10]
  42149a:	mov    rax,QWORD PTR [rbp-0x18]
  42149e:	mov    ecx,eax
  4214a0:	mov    rax,QWORD PTR [rbp-0x10]
  4214a4:	mov    QWORD PTR [rbp-0x30],rdi
  4214a8:	mov    rdi,rax
  4214ab:	mov    DWORD PTR [rbp-0x34],ecx
  4214ae:	call   420420 <flatcc_verify_string_field@@Base+0x2e0>
  4214b3:	xor    edx,edx
  4214b5:	mov    r9,QWORD PTR [rbp-0x28]
  4214b9:	mov    rdi,QWORD PTR [rbp-0x30]
  4214bd:	mov    esi,DWORD PTR [rbp-0x34]
  4214c0:	mov    ecx,eax
  4214c2:	mov    r8d,0x64
  4214c8:	call   4208f0 <flatcc_verify_table_field@@Base+0xb0>
  4214cd:	mov    DWORD PTR [rbp-0x4],eax
  4214d0:	mov    eax,DWORD PTR [rbp-0x4]
  4214d3:	add    rsp,0x40
  4214d7:	pop    rbp
  4214d8:	ret    
  4214d9:	nop    DWORD PTR [rax+0x0]

00000000004214e0 <flatcc_verify_struct_as_nested_root@@Base>:
  4214e0:	push   rbp
  4214e1:	mov    rbp,rsp
  4214e4:	sub    rsp,0x60
  4214e8:	mov    ax,r9w
  4214ec:	mov    r10w,si
  4214f0:	mov    esi,0xffffffff
  4214f5:	mov    r9d,esi
  4214f8:	mov    QWORD PTR [rbp-0x10],rdi
  4214fc:	mov    WORD PTR [rbp-0x12],r10w
  421501:	mov    DWORD PTR [rbp-0x18],edx
  421504:	mov    QWORD PTR [rbp-0x20],rcx
  421508:	mov    QWORD PTR [rbp-0x28],r8
  42150c:	mov    WORD PTR [rbp-0x2a],ax
  421510:	mov    rdi,QWORD PTR [rbp-0x10]
  421514:	mov    ax,WORD PTR [rbp-0x12]
  421518:	mov    edx,DWORD PTR [rbp-0x18]
  42151b:	movzx  esi,WORD PTR [rbp-0x2a]
  42151f:	mov    ecx,esi
  421521:	movzx  esi,ax
  421524:	mov    r8d,0x1
  42152a:	call   420450 <flatcc_verify_vector_field@@Base>
  42152f:	cmp    eax,0x0
  421532:	je     421571 <flatcc_verify_struct_as_nested_root@@Base+0x91>
  421538:	mov    eax,0xffffffff
  42153d:	mov    r9d,eax
  421540:	mov    rdi,QWORD PTR [rbp-0x10]
  421544:	mov    cx,WORD PTR [rbp-0x12]
  421548:	mov    edx,DWORD PTR [rbp-0x18]
  42154b:	movzx  eax,WORD PTR [rbp-0x2a]
  42154f:	mov    esi,eax
  421551:	movzx  eax,cx
  421554:	mov    QWORD PTR [rbp-0x48],rsi
  421558:	mov    esi,eax
  42155a:	mov    rcx,QWORD PTR [rbp-0x48]
  42155e:	mov    r8d,0x1
  421564:	call   420450 <flatcc_verify_vector_field@@Base>
  421569:	mov    DWORD PTR [rbp-0x4],eax
  42156c:	jmp    421606 <flatcc_verify_struct_as_nested_root@@Base+0x126>
  421571:	mov    rdi,QWORD PTR [rbp-0x10]
  421575:	movzx  esi,WORD PTR [rbp-0x12]
  421579:	call   421610 <flatcc_verify_struct_as_nested_root@@Base+0x130>
  42157e:	xor    esi,esi
  421580:	mov    edi,esi
  421582:	mov    QWORD PTR [rbp-0x38],rax
  421586:	cmp    rdi,rax
  421589:	jne    42159b <flatcc_verify_struct_as_nested_root@@Base+0xbb>
  42158f:	mov    DWORD PTR [rbp-0x4],0x0
  421596:	jmp    421606 <flatcc_verify_struct_as_nested_root@@Base+0x126>
  42159b:	xor    esi,esi
  42159d:	mov    rax,QWORD PTR [rbp-0x38]
  4215a1:	mov    rcx,QWORD PTR [rbp-0x38]
  4215a5:	mov    rdi,rcx
  4215a8:	mov    QWORD PTR [rbp-0x50],rax
  4215ac:	call   420420 <flatcc_verify_string_field@@Base+0x2e0>
  4215b1:	xor    esi,esi
  4215b3:	mov    eax,eax
  4215b5:	mov    ecx,eax
  4215b7:	mov    rdi,QWORD PTR [rbp-0x50]
  4215bb:	add    rdi,rcx
  4215be:	mov    QWORD PTR [rbp-0x38],rdi
  4215c2:	mov    rcx,QWORD PTR [rbp-0x38]
  4215c6:	mov    rdi,rcx
  4215c9:	call   420420 <flatcc_verify_string_field@@Base+0x2e0>
  4215ce:	mov    DWORD PTR [rbp-0x3c],eax
  4215d1:	mov    rcx,QWORD PTR [rbp-0x38]
  4215d5:	add    rcx,0x4
  4215d9:	mov    QWORD PTR [rbp-0x38],rcx
  4215dd:	mov    rcx,QWORD PTR [rbp-0x38]
  4215e1:	mov    eax,DWORD PTR [rbp-0x3c]
  4215e4:	mov    esi,eax
  4215e6:	mov    rdx,QWORD PTR [rbp-0x20]
  4215ea:	mov    rdi,QWORD PTR [rbp-0x28]
  4215ee:	mov    QWORD PTR [rbp-0x58],rdi
  4215f2:	mov    rdi,rcx
  4215f5:	mov    rcx,QWORD PTR [rbp-0x58]
  4215f9:	movzx  r8d,WORD PTR [rbp-0x2a]
  4215fe:	call   421280 <flatcc_verify_struct_as_root@@Base>
  421603:	mov    DWORD PTR [rbp-0x4],eax
  421606:	mov    eax,DWORD PTR [rbp-0x4]
  421609:	add    rsp,0x60
  42160d:	pop    rbp
  42160e:	ret    
  42160f:	nop
  421610:	push   rbp
  421611:	mov    rbp,rsp
  421614:	sub    rsp,0x20
  421618:	mov    ax,si
  42161b:	mov    QWORD PTR [rbp-0x8],rdi
  42161f:	mov    WORD PTR [rbp-0xa],ax
  421623:	mov    rdi,QWORD PTR [rbp-0x8]
  421627:	movzx  esi,WORD PTR [rbp-0xa]
  42162b:	call   421a60 <flatcc_verify_union_field@@Base+0x250>
  421630:	mov    cx,ax
  421633:	mov    WORD PTR [rbp-0xc],cx
  421637:	movzx  eax,WORD PTR [rbp-0xc]
  42163b:	cmp    eax,0x0
  42163e:	je     42166a <flatcc_verify_struct_as_nested_root@@Base+0x18a>
  421644:	mov    rax,QWORD PTR [rbp-0x8]
  421648:	mov    rax,QWORD PTR [rax]
  42164b:	mov    rcx,QWORD PTR [rbp-0x8]
  42164f:	mov    edx,DWORD PTR [rcx+0x18]
  421652:	mov    ecx,edx
  421654:	add    rax,rcx
  421657:	movzx  edx,WORD PTR [rbp-0xc]
  42165b:	movsxd rcx,edx
  42165e:	add    rax,rcx
  421661:	mov    QWORD PTR [rbp-0x18],rax
  421665:	jmp    421677 <flatcc_verify_struct_as_nested_root@@Base+0x197>
  42166a:	xor    eax,eax
  42166c:	mov    ecx,eax
  42166e:	mov    QWORD PTR [rbp-0x18],rcx
  421672:	jmp    421677 <flatcc_verify_struct_as_nested_root@@Base+0x197>
  421677:	mov    rax,QWORD PTR [rbp-0x18]
  42167b:	add    rsp,0x20
  42167f:	pop    rbp
  421680:	ret    
  421681:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42168b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000421690 <flatcc_verify_table_as_nested_root@@Base>:
  421690:	push   rbp
  421691:	mov    rbp,rsp
  421694:	sub    rsp,0x60
  421698:	mov    ax,r8w
  42169c:	mov    r10w,si
  4216a0:	mov    esi,0xffffffff
  4216a5:	mov    r11d,esi
  4216a8:	mov    QWORD PTR [rbp-0x10],rdi
  4216ac:	mov    WORD PTR [rbp-0x12],r10w
  4216b1:	mov    DWORD PTR [rbp-0x18],edx
  4216b4:	mov    QWORD PTR [rbp-0x20],rcx
  4216b8:	mov    WORD PTR [rbp-0x22],ax
  4216bc:	mov    QWORD PTR [rbp-0x30],r9
  4216c0:	mov    rdi,QWORD PTR [rbp-0x10]
  4216c4:	mov    ax,WORD PTR [rbp-0x12]
  4216c8:	mov    edx,DWORD PTR [rbp-0x18]
  4216cb:	movzx  esi,WORD PTR [rbp-0x22]
  4216cf:	mov    ecx,esi
  4216d1:	movzx  esi,ax
  4216d4:	mov    r8d,0x1
  4216da:	mov    r9,r11
  4216dd:	call   420450 <flatcc_verify_vector_field@@Base>
  4216e2:	cmp    eax,0x0
  4216e5:	je     421724 <flatcc_verify_table_as_nested_root@@Base+0x94>
  4216eb:	mov    eax,0xffffffff
  4216f0:	mov    r9d,eax
  4216f3:	mov    rdi,QWORD PTR [rbp-0x10]
  4216f7:	mov    cx,WORD PTR [rbp-0x12]
  4216fb:	mov    edx,DWORD PTR [rbp-0x18]
  4216fe:	movzx  eax,WORD PTR [rbp-0x22]
  421702:	mov    esi,eax
  421704:	movzx  eax,cx
  421707:	mov    QWORD PTR [rbp-0x48],rsi
  42170b:	mov    esi,eax
  42170d:	mov    rcx,QWORD PTR [rbp-0x48]
  421711:	mov    r8d,0x1
  421717:	call   420450 <flatcc_verify_vector_field@@Base>
  42171c:	mov    DWORD PTR [rbp-0x4],eax
  42171f:	jmp    421806 <flatcc_verify_table_as_nested_root@@Base+0x176>
  421724:	mov    rdi,QWORD PTR [rbp-0x10]
  421728:	movzx  esi,WORD PTR [rbp-0x12]
  42172c:	call   421610 <flatcc_verify_struct_as_nested_root@@Base+0x130>
  421731:	xor    esi,esi
  421733:	mov    edi,esi
  421735:	mov    QWORD PTR [rbp-0x38],rax
  421739:	cmp    rdi,rax
  42173c:	jne    42174e <flatcc_verify_table_as_nested_root@@Base+0xbe>
  421742:	mov    DWORD PTR [rbp-0x4],0x0
  421749:	jmp    421806 <flatcc_verify_table_as_nested_root@@Base+0x176>
  42174e:	xor    esi,esi
  421750:	mov    rax,QWORD PTR [rbp-0x38]
  421754:	mov    rcx,QWORD PTR [rbp-0x38]
  421758:	mov    rdi,rcx
  42175b:	mov    QWORD PTR [rbp-0x50],rax
  42175f:	call   420420 <flatcc_verify_string_field@@Base+0x2e0>
  421764:	xor    esi,esi
  421766:	mov    eax,eax
  421768:	mov    ecx,eax
  42176a:	mov    rdi,QWORD PTR [rbp-0x50]
  42176e:	add    rdi,rcx
  421771:	mov    QWORD PTR [rbp-0x38],rdi
  421775:	mov    rcx,QWORD PTR [rbp-0x38]
  421779:	mov    rdi,rcx
  42177c:	call   420420 <flatcc_verify_string_field@@Base+0x2e0>
  421781:	mov    DWORD PTR [rbp-0x3c],eax
  421784:	mov    rcx,QWORD PTR [rbp-0x38]
  421788:	add    rcx,0x4
  42178c:	mov    QWORD PTR [rbp-0x38],rcx
  421790:	mov    rcx,QWORD PTR [rbp-0x38]
  421794:	mov    eax,DWORD PTR [rbp-0x3c]
  421797:	mov    esi,eax
  421799:	mov    rdx,QWORD PTR [rbp-0x20]
  42179d:	mov    rdi,rcx
  4217a0:	call   420fb0 <flatcc_verify_buffer_header@@Base>
  4217a5:	cmp    eax,0x0
  4217a8:	je     4217cb <flatcc_verify_table_as_nested_root@@Base+0x13b>
  4217ae:	mov    rax,QWORD PTR [rbp-0x38]
  4217b2:	mov    ecx,DWORD PTR [rbp-0x3c]
  4217b5:	mov    esi,ecx
  4217b7:	mov    rdx,QWORD PTR [rbp-0x20]
  4217bb:	mov    rdi,rax
  4217be:	call   420fb0 <flatcc_verify_buffer_header@@Base>
  4217c3:	mov    DWORD PTR [rbp-0x4],eax
  4217c6:	jmp    421806 <flatcc_verify_table_as_nested_root@@Base+0x176>
  4217cb:	xor    esi,esi
  4217cd:	mov    rax,QWORD PTR [rbp-0x38]
  4217d1:	mov    ecx,DWORD PTR [rbp-0x3c]
  4217d4:	mov    rdx,QWORD PTR [rbp-0x38]
  4217d8:	mov    rdi,rdx
  4217db:	mov    DWORD PTR [rbp-0x54],ecx
  4217de:	mov    QWORD PTR [rbp-0x60],rax
  4217e2:	call   420420 <flatcc_verify_string_field@@Base+0x2e0>
  4217e7:	xor    edx,edx
  4217e9:	mov    rdi,QWORD PTR [rbp-0x10]
  4217ed:	mov    r8d,DWORD PTR [rdi+0xc]
  4217f1:	mov    r9,QWORD PTR [rbp-0x30]
  4217f5:	mov    rdi,QWORD PTR [rbp-0x60]
  4217f9:	mov    esi,DWORD PTR [rbp-0x54]
  4217fc:	mov    ecx,eax
  4217fe:	call   4208f0 <flatcc_verify_table_field@@Base+0xb0>
  421803:	mov    DWORD PTR [rbp-0x4],eax
  421806:	mov    eax,DWORD PTR [rbp-0x4]
  421809:	add    rsp,0x60
  42180d:	pop    rbp
  42180e:	ret    
  42180f:	nop

0000000000421810 <flatcc_verify_union_field@@Base>:
  421810:	push   rbp
  421811:	mov    rbp,rsp
  421814:	sub    rsp,0x70
  421818:	mov    ax,si
  42181b:	mov    QWORD PTR [rbp-0x10],rdi
  42181f:	mov    WORD PTR [rbp-0x12],ax
  421823:	mov    DWORD PTR [rbp-0x18],edx
  421826:	mov    QWORD PTR [rbp-0x20],rcx
  42182a:	mov    rdi,QWORD PTR [rbp-0x10]
  42182e:	movzx  edx,WORD PTR [rbp-0x12]
  421832:	sub    edx,0x1
  421835:	mov    ax,dx
  421838:	movzx  esi,ax
  42183b:	call   421a60 <flatcc_verify_union_field@@Base+0x250>
  421840:	xor    edx,edx
  421842:	mov    r8w,ax
  421846:	mov    WORD PTR [rbp-0x22],r8w
  42184b:	movzx  eax,r8w
  42184f:	cmp    edx,eax
  421851:	jne    4218d6 <flatcc_verify_union_field@@Base+0xc6>
  421857:	mov    rdi,QWORD PTR [rbp-0x10]
  42185b:	movzx  esi,WORD PTR [rbp-0x12]
  42185f:	call   421a60 <flatcc_verify_union_field@@Base+0x250>
  421864:	mov    cx,ax
  421867:	mov    WORD PTR [rbp-0x24],cx
  42186b:	movzx  eax,WORD PTR [rbp-0x24]
  42186f:	cmp    eax,0x0
  421872:	sete   cl
  421875:	and    cl,0x1
  421878:	movzx  eax,cl
  42187b:	mov    DWORD PTR [rbp-0x5c],eax
  42187e:	cmp    DWORD PTR [rbp-0x5c],0x0
  421882:	jne    421894 <flatcc_verify_union_field@@Base+0x84>
  421888:	mov    DWORD PTR [rbp-0x4],0x17
  42188f:	jmp    421a51 <flatcc_verify_union_field@@Base+0x241>
  421894:	jmp    421899 <flatcc_verify_union_field@@Base+0x89>
  421899:	jmp    42189e <flatcc_verify_union_field@@Base+0x8e>
  42189e:	cmp    DWORD PTR [rbp-0x18],0x0
  4218a2:	setne  al
  4218a5:	xor    al,0xff
  4218a7:	and    al,0x1
  4218a9:	movzx  ecx,al
  4218ac:	mov    DWORD PTR [rbp-0x60],ecx
  4218af:	cmp    DWORD PTR [rbp-0x60],0x0
  4218b3:	jne    4218c5 <flatcc_verify_union_field@@Base+0xb5>
  4218b9:	mov    DWORD PTR [rbp-0x4],0x15
  4218c0:	jmp    421a51 <flatcc_verify_union_field@@Base+0x241>
  4218c5:	jmp    4218ca <flatcc_verify_union_field@@Base+0xba>
  4218ca:	mov    DWORD PTR [rbp-0x4],0x0
  4218d1:	jmp    421a51 <flatcc_verify_union_field@@Base+0x241>
  4218d6:	xor    edx,edx
  4218d8:	mov    rdi,QWORD PTR [rbp-0x10]
  4218dc:	movzx  eax,WORD PTR [rbp-0x12]
  4218e0:	sub    eax,0x1
  4218e3:	mov    cx,ax
  4218e6:	movzx  esi,cx
  4218e9:	mov    eax,0x1
  4218ee:	mov    ecx,eax
  4218f0:	mov    r8d,eax
  4218f3:	call   41ffe0 <flatcc_verify_field@@Base+0xa0>
  4218f8:	cmp    eax,0x0
  4218fb:	je     42192b <flatcc_verify_union_field@@Base+0x11b>
  421901:	xor    edx,edx
  421903:	mov    rdi,QWORD PTR [rbp-0x10]
  421907:	movzx  eax,WORD PTR [rbp-0x12]
  42190b:	sub    eax,0x1
  42190e:	mov    cx,ax
  421911:	movzx  esi,cx
  421914:	mov    eax,0x1
  421919:	mov    ecx,eax
  42191b:	mov    r8d,eax
  42191e:	call   41ffe0 <flatcc_verify_field@@Base+0xa0>
  421923:	mov    DWORD PTR [rbp-0x4],eax
  421926:	jmp    421a51 <flatcc_verify_union_field@@Base+0x241>
  42192b:	mov    rdi,QWORD PTR [rbp-0x10]
  42192f:	movzx  esi,WORD PTR [rbp-0x12]
  421933:	call   421a60 <flatcc_verify_union_field@@Base+0x250>
  421938:	mov    cx,ax
  42193b:	mov    WORD PTR [rbp-0x24],cx
  42193f:	mov    rdi,QWORD PTR [rbp-0x10]
  421943:	mov    rdi,QWORD PTR [rdi]
  421946:	mov    rdx,QWORD PTR [rbp-0x10]
  42194a:	mov    eax,DWORD PTR [rdx+0x18]
  42194d:	mov    edx,eax
  42194f:	add    rdi,rdx
  421952:	movzx  eax,WORD PTR [rbp-0x22]
  421956:	movsxd rdx,eax
  421959:	add    rdi,rdx
  42195c:	mov    QWORD PTR [rbp-0x30],rdi
  421960:	mov    rax,QWORD PTR [rbp-0x30]
  421964:	movzx  ecx,BYTE PTR [rax]
  421967:	cmp    ecx,0x0
  42196a:	mov    dl,0x1
  42196c:	mov    BYTE PTR [rbp-0x69],dl
  42196f:	jne    421982 <flatcc_verify_union_field@@Base+0x172>
  421975:	movzx  eax,WORD PTR [rbp-0x24]
  421979:	cmp    eax,0x0
  42197c:	sete   cl
  42197f:	mov    BYTE PTR [rbp-0x69],cl
  421982:	mov    al,BYTE PTR [rbp-0x69]
  421985:	and    al,0x1
  421987:	movzx  ecx,al
  42198a:	mov    DWORD PTR [rbp-0x64],ecx
  42198d:	cmp    DWORD PTR [rbp-0x64],0x0
  421991:	jne    4219a3 <flatcc_verify_union_field@@Base+0x193>
  421997:	mov    DWORD PTR [rbp-0x4],0x18
  42199e:	jmp    421a51 <flatcc_verify_union_field@@Base+0x241>
  4219a3:	jmp    4219a8 <flatcc_verify_union_field@@Base+0x198>
  4219a8:	mov    rax,QWORD PTR [rbp-0x30]
  4219ac:	movzx  ecx,BYTE PTR [rax]
  4219af:	cmp    ecx,0x0
  4219b2:	jne    4219c4 <flatcc_verify_union_field@@Base+0x1b4>
  4219b8:	mov    DWORD PTR [rbp-0x4],0x0
  4219bf:	jmp    421a51 <flatcc_verify_union_field@@Base+0x241>
  4219c4:	jmp    4219c9 <flatcc_verify_union_field@@Base+0x1b9>
  4219c9:	mov    rdi,QWORD PTR [rbp-0x10]
  4219cd:	mov    ax,WORD PTR [rbp-0x12]
  4219d1:	mov    edx,DWORD PTR [rbp-0x18]
  4219d4:	movzx  esi,ax
  4219d7:	lea    rcx,[rbp-0x34]
  4219db:	call   4201e0 <flatcc_verify_string_field@@Base+0xa0>
  4219e0:	mov    DWORD PTR [rbp-0x68],eax
  4219e3:	cmp    DWORD PTR [rbp-0x68],0x0
  4219e7:	jne    4219f7 <flatcc_verify_union_field@@Base+0x1e7>
  4219ed:	cmp    DWORD PTR [rbp-0x34],0x0
  4219f1:	jne    421a02 <flatcc_verify_union_field@@Base+0x1f2>
  4219f7:	mov    eax,DWORD PTR [rbp-0x68]
  4219fa:	mov    DWORD PTR [rbp-0x4],eax
  4219fd:	jmp    421a51 <flatcc_verify_union_field@@Base+0x241>
  421a02:	jmp    421a07 <flatcc_verify_union_field@@Base+0x1f7>
  421a07:	mov    rax,QWORD PTR [rbp-0x10]
  421a0b:	mov    rax,QWORD PTR [rax]
  421a0e:	mov    QWORD PTR [rbp-0x58],rax
  421a12:	mov    rax,QWORD PTR [rbp-0x10]
  421a16:	mov    ecx,DWORD PTR [rax+0x8]
  421a19:	mov    DWORD PTR [rbp-0x50],ecx
  421a1c:	mov    rax,QWORD PTR [rbp-0x10]
  421a20:	mov    ecx,DWORD PTR [rax+0xc]
  421a23:	mov    DWORD PTR [rbp-0x4c],ecx
  421a26:	mov    ecx,DWORD PTR [rbp-0x34]
  421a29:	mov    DWORD PTR [rbp-0x44],ecx
  421a2c:	mov    rax,QWORD PTR [rbp-0x10]
  421a30:	mov    rdi,QWORD PTR [rax]
  421a33:	mov    esi,DWORD PTR [rbp-0x34]
  421a36:	call   420420 <flatcc_verify_string_field@@Base+0x2e0>
  421a3b:	mov    DWORD PTR [rbp-0x40],eax
  421a3e:	mov    rdi,QWORD PTR [rbp-0x30]
  421a42:	mov    dl,BYTE PTR [rdi]
  421a44:	mov    BYTE PTR [rbp-0x48],dl
  421a47:	lea    rdi,[rbp-0x58]
  421a4b:	call   QWORD PTR [rbp-0x20]
  421a4e:	mov    DWORD PTR [rbp-0x4],eax
  421a51:	mov    eax,DWORD PTR [rbp-0x4]
  421a54:	add    rsp,0x70
  421a58:	pop    rbp
  421a59:	ret    
  421a5a:	nop    WORD PTR [rax+rax*1+0x0]
  421a60:	push   rbp
  421a61:	mov    rbp,rsp
  421a64:	sub    rsp,0x20
  421a68:	mov    ax,si
  421a6b:	mov    QWORD PTR [rbp-0x10],rdi
  421a6f:	mov    WORD PTR [rbp-0x12],ax
  421a73:	movzx  esi,WORD PTR [rbp-0x12]
  421a77:	add    esi,0x2
  421a7a:	movsxd rdi,esi
  421a7d:	shl    rdi,0x1
  421a81:	mov    ax,di
  421a84:	mov    WORD PTR [rbp-0x14],ax
  421a88:	movzx  esi,WORD PTR [rbp-0x14]
  421a8c:	mov    rdi,QWORD PTR [rbp-0x10]
  421a90:	movzx  ecx,WORD PTR [rdi+0x1e]
  421a94:	cmp    esi,ecx
  421a96:	jl     421aa8 <flatcc_verify_union_field@@Base+0x298>
  421a9c:	mov    DWORD PTR [rbp-0x4],0x0
  421aa3:	jmp    421abf <flatcc_verify_union_field@@Base+0x2af>
  421aa8:	mov    rax,QWORD PTR [rbp-0x10]
  421aac:	mov    rdi,QWORD PTR [rax+0x10]
  421ab0:	movzx  esi,WORD PTR [rbp-0x14]
  421ab4:	call   4220d0 <flatcc_verify_union_vector_field@@Base+0x600>
  421ab9:	movzx  esi,ax
  421abc:	mov    DWORD PTR [rbp-0x4],esi
  421abf:	mov    eax,DWORD PTR [rbp-0x4]
  421ac2:	add    rsp,0x20
  421ac6:	pop    rbp
  421ac7:	ret    
  421ac8:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000421ad0 <flatcc_verify_union_vector_field@@Base>:
  421ad0:	push   rbp
  421ad1:	mov    rbp,rsp
  421ad4:	sub    rsp,0x80
  421adb:	mov    ax,si
  421ade:	mov    QWORD PTR [rbp-0x10],rdi
  421ae2:	mov    WORD PTR [rbp-0x12],ax
  421ae6:	mov    DWORD PTR [rbp-0x18],edx
  421ae9:	mov    QWORD PTR [rbp-0x20],rcx
  421aed:	mov    rdi,QWORD PTR [rbp-0x10]
  421af1:	movzx  edx,WORD PTR [rbp-0x12]
  421af5:	sub    edx,0x1
  421af8:	mov    ax,dx
  421afb:	movzx  esi,ax
  421afe:	call   421a60 <flatcc_verify_union_field@@Base+0x250>
  421b03:	xor    edx,edx
  421b05:	mov    r8w,ax
  421b09:	mov    WORD PTR [rbp-0x22],r8w
  421b0e:	movzx  eax,r8w
  421b12:	cmp    edx,eax
  421b14:	jne    421b76 <flatcc_verify_union_vector_field@@Base+0xa6>
  421b1a:	mov    rdi,QWORD PTR [rbp-0x10]
  421b1e:	movzx  esi,WORD PTR [rbp-0x12]
  421b22:	call   421a60 <flatcc_verify_union_field@@Base+0x250>
  421b27:	xor    esi,esi
  421b29:	mov    cx,ax
  421b2c:	mov    WORD PTR [rbp-0x24],cx
  421b30:	movzx  eax,cx
  421b33:	cmp    esi,eax
  421b35:	jne    421b71 <flatcc_verify_union_vector_field@@Base+0xa1>
  421b3b:	jmp    421b40 <flatcc_verify_union_vector_field@@Base+0x70>
  421b40:	cmp    DWORD PTR [rbp-0x18],0x0
  421b44:	setne  al
  421b47:	xor    al,0xff
  421b49:	and    al,0x1
  421b4b:	movzx  ecx,al
  421b4e:	mov    DWORD PTR [rbp-0x44],ecx
  421b51:	cmp    DWORD PTR [rbp-0x44],0x0
  421b55:	jne    421b67 <flatcc_verify_union_vector_field@@Base+0x97>
  421b5b:	mov    DWORD PTR [rbp-0x4],0x16
  421b62:	jmp    421d11 <flatcc_verify_union_vector_field@@Base+0x241>
  421b67:	jmp    421b6c <flatcc_verify_union_vector_field@@Base+0x9c>
  421b6c:	jmp    421b71 <flatcc_verify_union_vector_field@@Base+0xa1>
  421b71:	jmp    421b76 <flatcc_verify_union_vector_field@@Base+0xa6>
  421b76:	mov    eax,0x1
  421b7b:	mov    ecx,eax
  421b7d:	mov    eax,0xffffffff
  421b82:	mov    r9d,eax
  421b85:	mov    rdi,QWORD PTR [rbp-0x10]
  421b89:	movzx  eax,WORD PTR [rbp-0x12]
  421b8d:	sub    eax,0x1
  421b90:	mov    dx,ax
  421b93:	mov    eax,DWORD PTR [rbp-0x18]
  421b96:	movzx  esi,dx
  421b99:	mov    edx,eax
  421b9b:	mov    r8d,0x1
  421ba1:	call   420450 <flatcc_verify_vector_field@@Base>
  421ba6:	cmp    eax,0x0
  421ba9:	je     421be7 <flatcc_verify_union_vector_field@@Base+0x117>
  421baf:	mov    eax,0x1
  421bb4:	mov    ecx,eax
  421bb6:	mov    eax,0xffffffff
  421bbb:	mov    r9d,eax
  421bbe:	mov    rdi,QWORD PTR [rbp-0x10]
  421bc2:	movzx  eax,WORD PTR [rbp-0x12]
  421bc6:	sub    eax,0x1
  421bc9:	mov    dx,ax
  421bcc:	mov    eax,DWORD PTR [rbp-0x18]
  421bcf:	movzx  esi,dx
  421bd2:	mov    edx,eax
  421bd4:	mov    r8d,0x1
  421bda:	call   420450 <flatcc_verify_vector_field@@Base>
  421bdf:	mov    DWORD PTR [rbp-0x4],eax
  421be2:	jmp    421d11 <flatcc_verify_union_vector_field@@Base+0x241>
  421be7:	mov    rdi,QWORD PTR [rbp-0x10]
  421beb:	movzx  eax,WORD PTR [rbp-0x12]
  421bef:	sub    eax,0x1
  421bf2:	mov    cx,ax
  421bf5:	movzx  esi,cx
  421bf8:	call   421610 <flatcc_verify_struct_as_nested_root@@Base+0x130>
  421bfd:	xor    esi,esi
  421bff:	mov    edi,esi
  421c01:	mov    QWORD PTR [rbp-0x30],rax
  421c05:	cmp    rdi,rax
  421c08:	jne    421c1a <flatcc_verify_union_vector_field@@Base+0x14a>
  421c0e:	mov    DWORD PTR [rbp-0x4],0x0
  421c15:	jmp    421d11 <flatcc_verify_union_vector_field@@Base+0x241>
  421c1a:	xor    esi,esi
  421c1c:	mov    rax,QWORD PTR [rbp-0x30]
  421c20:	mov    rcx,QWORD PTR [rbp-0x30]
  421c24:	mov    rdi,rcx
  421c27:	mov    QWORD PTR [rbp-0x50],rax
  421c2b:	call   420420 <flatcc_verify_string_field@@Base+0x2e0>
  421c30:	xor    esi,esi
  421c32:	mov    eax,eax
  421c34:	mov    ecx,eax
  421c36:	mov    rdi,QWORD PTR [rbp-0x50]
  421c3a:	add    rdi,rcx
  421c3d:	mov    QWORD PTR [rbp-0x30],rdi
  421c41:	mov    rcx,QWORD PTR [rbp-0x30]
  421c45:	mov    rdi,rcx
  421c48:	call   420420 <flatcc_verify_string_field@@Base+0x2e0>
  421c4d:	mov    DWORD PTR [rbp-0x3c],eax
  421c50:	mov    rcx,QWORD PTR [rbp-0x30]
  421c54:	add    rcx,0x4
  421c58:	mov    QWORD PTR [rbp-0x30],rcx
  421c5c:	mov    rcx,QWORD PTR [rbp-0x30]
  421c60:	mov    QWORD PTR [rbp-0x38],rcx
  421c64:	mov    rdi,QWORD PTR [rbp-0x10]
  421c68:	mov    ax,WORD PTR [rbp-0x12]
  421c6c:	mov    edx,DWORD PTR [rbp-0x18]
  421c6f:	movzx  esi,ax
  421c72:	lea    rcx,[rbp-0x40]
  421c76:	call   4201e0 <flatcc_verify_string_field@@Base+0xa0>
  421c7b:	mov    DWORD PTR [rbp-0x48],eax
  421c7e:	cmp    DWORD PTR [rbp-0x48],0x0
  421c82:	jne    421c92 <flatcc_verify_union_vector_field@@Base+0x1c2>
  421c88:	cmp    DWORD PTR [rbp-0x40],0x0
  421c8c:	jne    421c9d <flatcc_verify_union_vector_field@@Base+0x1cd>
  421c92:	mov    eax,DWORD PTR [rbp-0x48]
  421c95:	mov    DWORD PTR [rbp-0x4],eax
  421c98:	jmp    421d11 <flatcc_verify_union_vector_field@@Base+0x241>
  421c9d:	jmp    421ca2 <flatcc_verify_union_vector_field@@Base+0x1d2>
  421ca2:	mov    rax,QWORD PTR [rbp-0x10]
  421ca6:	mov    rdi,QWORD PTR [rax]
  421ca9:	mov    rax,QWORD PTR [rbp-0x10]
  421cad:	mov    esi,DWORD PTR [rax+0x8]
  421cb0:	mov    edx,DWORD PTR [rbp-0x40]
  421cb3:	mov    rax,QWORD PTR [rbp-0x10]
  421cb7:	mov    rax,QWORD PTR [rax]
  421cba:	mov    ecx,DWORD PTR [rbp-0x40]
  421cbd:	mov    QWORD PTR [rbp-0x58],rdi
  421cc1:	mov    rdi,rax
  421cc4:	mov    DWORD PTR [rbp-0x5c],esi
  421cc7:	mov    esi,ecx
  421cc9:	mov    DWORD PTR [rbp-0x60],edx
  421ccc:	call   420420 <flatcc_verify_string_field@@Base+0x2e0>
  421cd1:	mov    r8d,DWORD PTR [rbp-0x3c]
  421cd5:	mov    r9,QWORD PTR [rbp-0x38]
  421cd9:	mov    rdi,QWORD PTR [rbp-0x10]
  421cdd:	mov    ecx,DWORD PTR [rdi+0xc]
  421ce0:	mov    rdi,QWORD PTR [rbp-0x20]
  421ce4:	mov    r10,QWORD PTR [rbp-0x58]
  421ce8:	mov    QWORD PTR [rbp-0x68],rdi
  421cec:	mov    rdi,r10
  421cef:	mov    esi,DWORD PTR [rbp-0x5c]
  421cf2:	mov    edx,DWORD PTR [rbp-0x60]
  421cf5:	mov    DWORD PTR [rbp-0x6c],ecx
  421cf8:	mov    ecx,eax
  421cfa:	mov    eax,DWORD PTR [rbp-0x6c]
  421cfd:	mov    DWORD PTR [rsp],eax
  421d00:	mov    r11,QWORD PTR [rbp-0x68]
  421d04:	mov    QWORD PTR [rsp+0x8],r11
  421d09:	call   421d20 <flatcc_verify_union_vector_field@@Base+0x250>
  421d0e:	mov    DWORD PTR [rbp-0x4],eax
  421d11:	mov    eax,DWORD PTR [rbp-0x4]
  421d14:	add    rsp,0x80
  421d1b:	pop    rbp
  421d1c:	ret    
  421d1d:	nop    DWORD PTR [rax]
  421d20:	push   rbp
  421d21:	mov    rbp,rsp
  421d24:	sub    rsp,0x80
  421d2b:	mov    rax,QWORD PTR [rbp+0x18]
  421d2f:	mov    r10d,DWORD PTR [rbp+0x10]
  421d33:	mov    QWORD PTR [rbp-0x10],rdi
  421d37:	mov    DWORD PTR [rbp-0x14],esi
  421d3a:	mov    DWORD PTR [rbp-0x18],edx
  421d3d:	mov    DWORD PTR [rbp-0x1c],ecx
  421d40:	mov    DWORD PTR [rbp-0x20],r8d
  421d44:	mov    QWORD PTR [rbp-0x28],r9
  421d48:	mov    DWORD PTR [rbp-0x6c],r10d
  421d4c:	mov    QWORD PTR [rbp-0x78],rax
  421d50:	mov    eax,DWORD PTR [rbp+0x10]
  421d53:	mov    ecx,eax
  421d55:	add    ecx,0xffffffff
  421d58:	mov    DWORD PTR [rbp+0x10],ecx
  421d5b:	cmp    eax,0x0
  421d5e:	setg   dl
  421d61:	and    dl,0x1
  421d64:	movzx  eax,dl
  421d67:	mov    DWORD PTR [rbp-0x5c],eax
  421d6a:	cmp    DWORD PTR [rbp-0x5c],0x0
  421d6e:	jne    421d80 <flatcc_verify_union_vector_field@@Base+0x2b0>
  421d74:	mov    DWORD PTR [rbp-0x4],0x3
  421d7b:	jmp    421f5d <flatcc_verify_union_vector_field@@Base+0x48d>
  421d80:	jmp    421d85 <flatcc_verify_union_vector_field@@Base+0x2b5>
  421d85:	mov    rdi,QWORD PTR [rbp-0x10]
  421d89:	mov    esi,DWORD PTR [rbp-0x14]
  421d8c:	mov    edx,DWORD PTR [rbp-0x18]
  421d8f:	mov    ecx,DWORD PTR [rbp-0x1c]
  421d92:	mov    eax,0x4
  421d97:	mov    r8d,eax
  421d9a:	mov    r9d,eax
  421d9d:	mov    DWORD PTR [rsp],0x3fffffff
  421da4:	call   420540 <flatcc_verify_vector_field@@Base+0xf0>
  421da9:	cmp    eax,0x0
  421dac:	je     421dde <flatcc_verify_union_vector_field@@Base+0x30e>
  421db2:	mov    rdi,QWORD PTR [rbp-0x10]
  421db6:	mov    esi,DWORD PTR [rbp-0x14]
  421db9:	mov    edx,DWORD PTR [rbp-0x18]
  421dbc:	mov    ecx,DWORD PTR [rbp-0x1c]
  421dbf:	mov    eax,0x4
  421dc4:	mov    r8d,eax
  421dc7:	mov    r9d,eax
  421dca:	mov    DWORD PTR [rsp],0x3fffffff
  421dd1:	call   420540 <flatcc_verify_vector_field@@Base+0xf0>
  421dd6:	mov    DWORD PTR [rbp-0x4],eax
  421dd9:	jmp    421f5d <flatcc_verify_union_vector_field@@Base+0x48d>
  421dde:	mov    eax,DWORD PTR [rbp-0x1c]
  421de1:	add    eax,DWORD PTR [rbp-0x18]
  421de4:	mov    DWORD PTR [rbp-0x18],eax
  421de7:	mov    rdi,QWORD PTR [rbp-0x10]
  421deb:	mov    esi,DWORD PTR [rbp-0x18]
  421dee:	call   420420 <flatcc_verify_string_field@@Base+0x2e0>
  421df3:	mov    DWORD PTR [rbp-0x30],eax
  421df6:	mov    eax,DWORD PTR [rbp-0x30]
  421df9:	cmp    eax,DWORD PTR [rbp-0x20]
  421dfc:	sete   cl
  421dff:	and    cl,0x1
  421e02:	movzx  eax,cl
  421e05:	mov    DWORD PTR [rbp-0x60],eax
  421e08:	cmp    DWORD PTR [rbp-0x60],0x0
  421e0c:	jne    421e1e <flatcc_verify_union_vector_field@@Base+0x34e>
  421e12:	mov    DWORD PTR [rbp-0x4],0x22
  421e19:	jmp    421f5d <flatcc_verify_union_vector_field@@Base+0x48d>
  421e1e:	jmp    421e23 <flatcc_verify_union_vector_field@@Base+0x353>
  421e23:	mov    eax,DWORD PTR [rbp-0x18]
  421e26:	mov    ecx,eax
  421e28:	add    rcx,0x4
  421e2c:	mov    eax,ecx
  421e2e:	mov    DWORD PTR [rbp-0x18],eax
  421e31:	mov    rcx,QWORD PTR [rbp-0x10]
  421e35:	mov    QWORD PTR [rbp-0x58],rcx
  421e39:	mov    eax,DWORD PTR [rbp-0x14]
  421e3c:	mov    DWORD PTR [rbp-0x50],eax
  421e3f:	mov    eax,DWORD PTR [rbp+0x10]
  421e42:	mov    DWORD PTR [rbp-0x4c],eax
  421e45:	mov    DWORD PTR [rbp-0x2c],0x0
  421e4c:	mov    eax,DWORD PTR [rbp-0x2c]
  421e4f:	cmp    eax,DWORD PTR [rbp-0x30]
  421e52:	jae    421f56 <flatcc_verify_union_vector_field@@Base+0x486>
  421e58:	mov    rdi,QWORD PTR [rbp-0x10]
  421e5c:	mov    esi,DWORD PTR [rbp-0x18]
  421e5f:	call   420420 <flatcc_verify_string_field@@Base+0x2e0>
  421e64:	mov    DWORD PTR [rbp-0x34],eax
  421e67:	cmp    DWORD PTR [rbp-0x34],0x0
  421e6b:	jne    421eb5 <flatcc_verify_union_vector_field@@Base+0x3e5>
  421e71:	jmp    421e76 <flatcc_verify_union_vector_field@@Base+0x3a6>
  421e76:	mov    rax,QWORD PTR [rbp-0x28]
  421e7a:	mov    ecx,DWORD PTR [rbp-0x2c]
  421e7d:	mov    edx,ecx
  421e7f:	movzx  ecx,BYTE PTR [rax+rdx*1]
  421e83:	cmp    ecx,0x0
  421e86:	sete   sil
  421e8a:	and    sil,0x1
  421e8e:	movzx  ecx,sil
  421e92:	mov    DWORD PTR [rbp-0x64],ecx
  421e95:	cmp    DWORD PTR [rbp-0x64],0x0
  421e99:	jne    421eab <flatcc_verify_union_vector_field@@Base+0x3db>
  421e9f:	mov    DWORD PTR [rbp-0x4],0x20
  421ea6:	jmp    421f5d <flatcc_verify_union_vector_field@@Base+0x48d>
  421eab:	jmp    421eb0 <flatcc_verify_union_vector_field@@Base+0x3e0>
  421eb0:	jmp    421f35 <flatcc_verify_union_vector_field@@Base+0x465>
  421eb5:	jmp    421eba <flatcc_verify_union_vector_field@@Base+0x3ea>
  421eba:	mov    rax,QWORD PTR [rbp-0x28]
  421ebe:	mov    ecx,DWORD PTR [rbp-0x2c]
  421ec1:	mov    edx,ecx
  421ec3:	movzx  ecx,BYTE PTR [rax+rdx*1]
  421ec7:	cmp    ecx,0x0
  421eca:	setne  sil
  421ece:	and    sil,0x1
  421ed2:	movzx  ecx,sil
  421ed6:	mov    DWORD PTR [rbp-0x68],ecx
  421ed9:	cmp    DWORD PTR [rbp-0x68],0x0
  421edd:	jne    421eef <flatcc_verify_union_vector_field@@Base+0x41f>
  421ee3:	mov    DWORD PTR [rbp-0x4],0x21
  421eea:	jmp    421f5d <flatcc_verify_union_vector_field@@Base+0x48d>
  421eef:	jmp    421ef4 <flatcc_verify_union_vector_field@@Base+0x424>
  421ef4:	mov    rax,QWORD PTR [rbp-0x28]
  421ef8:	mov    ecx,DWORD PTR [rbp-0x2c]
  421efb:	mov    edx,ecx
  421efd:	mov    sil,BYTE PTR [rax+rdx*1]
  421f01:	mov    BYTE PTR [rbp-0x48],sil
  421f05:	mov    ecx,DWORD PTR [rbp-0x18]
  421f08:	mov    DWORD PTR [rbp-0x44],ecx
  421f0b:	mov    ecx,DWORD PTR [rbp-0x34]
  421f0e:	mov    DWORD PTR [rbp-0x40],ecx
  421f11:	lea    rdi,[rbp-0x58]
  421f15:	call   QWORD PTR [rbp+0x18]
  421f18:	cmp    eax,0x0
  421f1b:	je     421f30 <flatcc_verify_union_vector_field@@Base+0x460>
  421f21:	lea    rdi,[rbp-0x58]
  421f25:	call   QWORD PTR [rbp+0x18]
  421f28:	mov    DWORD PTR [rbp-0x4],eax
  421f2b:	jmp    421f5d <flatcc_verify_union_vector_field@@Base+0x48d>
  421f30:	jmp    421f35 <flatcc_verify_union_vector_field@@Base+0x465>
  421f35:	jmp    421f3a <flatcc_verify_union_vector_field@@Base+0x46a>
  421f3a:	mov    eax,DWORD PTR [rbp-0x2c]
  421f3d:	add    eax,0x1
  421f40:	mov    DWORD PTR [rbp-0x2c],eax
  421f43:	mov    eax,DWORD PTR [rbp-0x18]
  421f46:	mov    ecx,eax
  421f48:	add    rcx,0x4
  421f4c:	mov    eax,ecx
  421f4e:	mov    DWORD PTR [rbp-0x18],eax
  421f51:	jmp    421e4c <flatcc_verify_union_vector_field@@Base+0x37c>
  421f56:	mov    DWORD PTR [rbp-0x4],0x0
  421f5d:	mov    eax,DWORD PTR [rbp-0x4]
  421f60:	add    rsp,0x80
  421f67:	pop    rbp
  421f68:	ret    
  421f69:	nop    DWORD PTR [rax+0x0]
  421f70:	push   rbp
  421f71:	mov    rbp,rsp
  421f74:	xor    eax,eax
  421f76:	mov    cl,al
  421f78:	mov    DWORD PTR [rbp-0x4],edi
  421f7b:	mov    DWORD PTR [rbp-0x8],esi
  421f7e:	mov    DWORD PTR [rbp-0xc],edx
  421f81:	mov    eax,DWORD PTR [rbp-0x8]
  421f84:	add    eax,DWORD PTR [rbp-0xc]
  421f87:	mov    DWORD PTR [rbp-0x10],eax
  421f8a:	mov    eax,DWORD PTR [rbp-0x10]
  421f8d:	cmp    eax,DWORD PTR [rbp-0x8]
  421f90:	mov    BYTE PTR [rbp-0x11],cl
  421f93:	jbe    421fcd <flatcc_verify_union_vector_field@@Base+0x4fd>
  421f99:	xor    eax,eax
  421f9b:	mov    cl,al
  421f9d:	mov    eax,DWORD PTR [rbp-0x10]
  421fa0:	mov    edx,eax
  421fa2:	add    rdx,0x4
  421fa6:	mov    eax,DWORD PTR [rbp-0x4]
  421fa9:	mov    esi,eax
  421fab:	cmp    rdx,rsi
  421fae:	mov    BYTE PTR [rbp-0x11],cl
  421fb1:	ja     421fcd <flatcc_verify_union_vector_field@@Base+0x4fd>
  421fb7:	mov    eax,DWORD PTR [rbp-0x10]
  421fba:	mov    ecx,eax
  421fbc:	and    rcx,0x3
  421fc0:	cmp    rcx,0x0
  421fc4:	setne  dl
  421fc7:	xor    dl,0xff
  421fca:	mov    BYTE PTR [rbp-0x11],dl
  421fcd:	mov    al,BYTE PTR [rbp-0x11]
  421fd0:	and    al,0x1
  421fd2:	movzx  eax,al
  421fd5:	pop    rbp
  421fd6:	ret    
  421fd7:	nop    WORD PTR [rax+rax*1+0x0]
  421fe0:	push   rbp
  421fe1:	mov    rbp,rsp
  421fe4:	sub    rsp,0x10
  421fe8:	mov    QWORD PTR [rbp-0x8],rdi
  421fec:	mov    rdi,QWORD PTR [rbp-0x8]
  421ff0:	mov    edi,DWORD PTR [rdi]
  421ff2:	call   422000 <flatcc_verify_union_vector_field@@Base+0x530>
  421ff7:	add    rsp,0x10
  421ffb:	pop    rbp
  421ffc:	ret    
  421ffd:	nop    DWORD PTR [rax]
  422000:	push   rbp
  422001:	mov    rbp,rsp
  422004:	mov    DWORD PTR [rbp-0x4],edi
  422007:	mov    eax,DWORD PTR [rbp-0x4]
  42200a:	pop    rbp
  42200b:	ret    
  42200c:	nop    DWORD PTR [rax+0x0]
  422010:	push   rbp
  422011:	mov    rbp,rsp
  422014:	mov    ax,cx
  422017:	mov    DWORD PTR [rbp-0x4],edi
  42201a:	mov    DWORD PTR [rbp-0x8],esi
  42201d:	mov    DWORD PTR [rbp-0xc],edx
  422020:	mov    WORD PTR [rbp-0xe],ax
  422024:	mov    ecx,DWORD PTR [rbp-0x8]
  422027:	add    ecx,DWORD PTR [rbp-0xc]
  42202a:	mov    DWORD PTR [rbp-0x14],ecx
  42202d:	movzx  ecx,WORD PTR [rbp-0xe]
  422031:	mov    r8d,ecx
  422034:	cmp    r8,0x4
  422038:	jae    42204e <flatcc_verify_union_vector_field@@Base+0x57e>
  42203e:	mov    eax,0x4
  422043:	mov    ecx,eax
  422045:	mov    QWORD PTR [rbp-0x20],rcx
  422049:	jmp    422058 <flatcc_verify_union_vector_field@@Base+0x588>
  42204e:	movzx  eax,WORD PTR [rbp-0xe]
  422052:	mov    ecx,eax
  422054:	mov    QWORD PTR [rbp-0x20],rcx
  422058:	mov    rax,QWORD PTR [rbp-0x20]
  42205c:	xor    ecx,ecx
  42205e:	mov    dl,cl
  422060:	mov    si,ax
  422063:	mov    WORD PTR [rbp-0xe],si
  422067:	mov    ecx,DWORD PTR [rbp-0x14]
  42206a:	cmp    ecx,DWORD PTR [rbp-0x8]
  42206d:	mov    BYTE PTR [rbp-0x21],dl
  422070:	jbe    4220be <flatcc_verify_union_vector_field@@Base+0x5ee>
  422076:	xor    eax,eax
  422078:	mov    cl,al
  42207a:	mov    eax,DWORD PTR [rbp-0x14]
  42207d:	mov    edx,eax
  42207f:	add    rdx,0x4
  422083:	mov    eax,DWORD PTR [rbp-0x4]
  422086:	mov    esi,eax
  422088:	cmp    rdx,rsi
  42208b:	mov    BYTE PTR [rbp-0x21],cl
  42208e:	ja     4220be <flatcc_verify_union_vector_field@@Base+0x5ee>
  422094:	mov    eax,DWORD PTR [rbp-0x14]
  422097:	mov    ecx,eax
  422099:	add    rcx,0x4
  42209d:	movzx  eax,WORD PTR [rbp-0xe]
  4220a1:	sub    eax,0x1
  4220a4:	movsxd rdx,eax
  4220a7:	or     rdx,0x3
  4220ab:	and    rcx,rdx
  4220ae:	cmp    rcx,0x0
  4220b2:	setne  sil
  4220b6:	xor    sil,0xff
  4220ba:	mov    BYTE PTR [rbp-0x21],sil
  4220be:	mov    al,BYTE PTR [rbp-0x21]
  4220c1:	and    al,0x1
  4220c3:	movzx  eax,al
  4220c6:	pop    rbp
  4220c7:	ret    
  4220c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4220d0:	push   rbp
  4220d1:	mov    rbp,rsp
  4220d4:	sub    rsp,0x10
  4220d8:	mov    QWORD PTR [rbp-0x8],rdi
  4220dc:	mov    DWORD PTR [rbp-0xc],esi
  4220df:	mov    rdi,QWORD PTR [rbp-0x8]
  4220e3:	mov    esi,DWORD PTR [rbp-0xc]
  4220e6:	mov    eax,esi
  4220e8:	add    rdi,rax
  4220eb:	call   422100 <flatcc_verify_union_vector_field@@Base+0x630>
  4220f0:	movzx  eax,ax
  4220f3:	add    rsp,0x10
  4220f7:	pop    rbp
  4220f8:	ret    
  4220f9:	nop    DWORD PTR [rax+0x0]
  422100:	push   rbp
  422101:	mov    rbp,rsp
  422104:	sub    rsp,0x10
  422108:	mov    QWORD PTR [rbp-0x8],rdi
  42210c:	mov    rdi,QWORD PTR [rbp-0x8]
  422110:	movzx  edi,WORD PTR [rdi]
  422113:	call   422130 <flatcc_verify_union_vector_field@@Base+0x660>
  422118:	movzx  eax,ax
  42211b:	add    rsp,0x10
  42211f:	pop    rbp
  422120:	ret    
  422121:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42212b:	nop    DWORD PTR [rax+rax*1+0x0]
  422130:	push   rbp
  422131:	mov    rbp,rsp
  422134:	mov    ax,di
  422137:	mov    WORD PTR [rbp-0x2],ax
  42213b:	movzx  eax,WORD PTR [rbp-0x2]
  42213f:	pop    rbp
  422140:	ret    
  422141:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42214b:	nop    DWORD PTR [rax+rax*1+0x0]
  422150:	push   rbp
  422151:	mov    rbp,rsp
  422154:	mov    DWORD PTR [rbp-0x4],edi
  422157:	mov    eax,DWORD PTR [rbp-0x4]
  42215a:	pop    rbp
  42215b:	ret    
  42215c:	nop    DWORD PTR [rax+0x0]
  422160:	push   rbp
  422161:	mov    rbp,rsp
  422164:	sub    rsp,0x10
  422168:	mov    QWORD PTR [rbp-0x8],rdi
  42216c:	mov    rdi,QWORD PTR [rbp-0x8]
  422170:	mov    edi,DWORD PTR [rdi]
  422172:	call   422180 <flatcc_verify_union_vector_field@@Base+0x6b0>
  422177:	add    rsp,0x10
  42217b:	pop    rbp
  42217c:	ret    
  42217d:	nop    DWORD PTR [rax]
  422180:	push   rbp
  422181:	mov    rbp,rsp
  422184:	mov    DWORD PTR [rbp-0x4],edi
  422187:	mov    eax,DWORD PTR [rbp-0x4]
  42218a:	pop    rbp
  42218b:	ret    
  42218c:	nop    DWORD PTR [rax+0x0]

0000000000422190 <__libc_csu_init@@Base>:
  422190:	endbr64 
  422194:	push   r15
  422196:	lea    r15,[rip+0xfc5b]        # 431df8 <flatcc_builder_padding_base@@Base+0xa248>
  42219d:	push   r14
  42219f:	mov    r14,rdx
  4221a2:	push   r13
  4221a4:	mov    r13,rsi
  4221a7:	push   r12
  4221a9:	mov    r12d,edi
  4221ac:	push   rbp
  4221ad:	lea    rbp,[rip+0xfc4c]        # 431e00 <flatcc_builder_padding_base@@Base+0xa250>
  4221b4:	push   rbx
  4221b5:	sub    rbp,r15
  4221b8:	sub    rsp,0x8
  4221bc:	call   404000 <free@plt-0x30>
  4221c1:	sar    rbp,0x3
  4221c5:	je     4221e6 <__libc_csu_init@@Base+0x56>
  4221c7:	xor    ebx,ebx
  4221c9:	nop    DWORD PTR [rax+0x0]
  4221d0:	mov    rdx,r14
  4221d3:	mov    rsi,r13
  4221d6:	mov    edi,r12d
  4221d9:	call   QWORD PTR [r15+rbx*8]
  4221dd:	add    rbx,0x1
  4221e1:	cmp    rbp,rbx
  4221e4:	jne    4221d0 <__libc_csu_init@@Base+0x40>
  4221e6:	add    rsp,0x8
  4221ea:	pop    rbx
  4221eb:	pop    rbp
  4221ec:	pop    r12
  4221ee:	pop    r13
  4221f0:	pop    r14
  4221f2:	pop    r15
  4221f4:	ret    
  4221f5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000422200 <__libc_csu_fini@@Base>:
  422200:	endbr64 
  422204:	ret    

Disassembly of section .fini:

0000000000422208 <.fini>:
  422208:	endbr64 
  42220c:	sub    rsp,0x8
  422210:	add    rsp,0x8
  422214:	ret    
