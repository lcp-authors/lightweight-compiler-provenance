
../repos/xmidt-org-trower-base64-20eecf3/tests/simple:     file format elf64-x86-64


Disassembly of section .init:

0000000000402000 <.init>:
  402000:	endbr64 
  402004:	sub    rsp,0x8
  402008:	mov    rax,QWORD PTR [rip+0x6fe1]        # 408ff0 <__gmon_start__>
  40200f:	test   rax,rax
  402012:	je     402016 <CU_basic_set_mode@plt-0x1a>
  402014:	call   rax
  402016:	add    rsp,0x8
  40201a:	ret    

Disassembly of section .plt:

0000000000402020 <CU_basic_set_mode@plt-0x10>:
  402020:	push   QWORD PTR [rip+0x6fe2]        # 409008 <_IO_stdin_used@@Base+0x3008>
  402026:	jmp    QWORD PTR [rip+0x6fe4]        # 409010 <_IO_stdin_used@@Base+0x3010>
  40202c:	nop    DWORD PTR [rax+0x0]

0000000000402030 <CU_basic_set_mode@plt>:
  402030:	jmp    QWORD PTR [rip+0x6fe2]        # 409018 <CU_basic_set_mode>
  402036:	push   0x0
  40203b:	jmp    402020 <CU_basic_set_mode@plt-0x10>

0000000000402040 <getenv@plt>:
  402040:	jmp    QWORD PTR [rip+0x6fda]        # 409020 <getenv@GLIBC_2.2.5>
  402046:	push   0x1
  40204b:	jmp    402020 <CU_basic_set_mode@plt-0x10>

0000000000402050 <free@plt>:
  402050:	jmp    QWORD PTR [rip+0x6fd2]        # 409028 <free@GLIBC_2.2.5>
  402056:	push   0x2
  40205b:	jmp    402020 <CU_basic_set_mode@plt-0x10>

0000000000402060 <CU_initialize_registry@plt>:
  402060:	jmp    QWORD PTR [rip+0x6fca]        # 409030 <CU_initialize_registry>
  402066:	push   0x3
  40206b:	jmp    402020 <CU_basic_set_mode@plt-0x10>

0000000000402070 <putchar@plt>:
  402070:	jmp    QWORD PTR [rip+0x6fc2]        # 409038 <putchar@GLIBC_2.2.5>
  402076:	push   0x4
  40207b:	jmp    402020 <CU_basic_set_mode@plt-0x10>

0000000000402080 <__vfprintf_chk@plt>:
  402080:	jmp    QWORD PTR [rip+0x6fba]        # 409040 <__vfprintf_chk@GLIBC_2.3.4>
  402086:	push   0x5
  40208b:	jmp    402020 <CU_basic_set_mode@plt-0x10>

0000000000402090 <abort@plt>:
  402090:	jmp    QWORD PTR [rip+0x6fb2]        # 409048 <abort@GLIBC_2.2.5>
  402096:	push   0x6
  40209b:	jmp    402020 <CU_basic_set_mode@plt-0x10>

00000000004020a0 <__errno_location@plt>:
  4020a0:	jmp    QWORD PTR [rip+0x6faa]        # 409050 <__errno_location@GLIBC_2.2.5>
  4020a6:	push   0x7
  4020ab:	jmp    402020 <CU_basic_set_mode@plt-0x10>

00000000004020b0 <strcpy@plt>:
  4020b0:	jmp    QWORD PTR [rip+0x6fa2]        # 409058 <strcpy@GLIBC_2.2.5>
  4020b6:	push   0x8
  4020bb:	jmp    402020 <CU_basic_set_mode@plt-0x10>

00000000004020c0 <mkdir@plt>:
  4020c0:	jmp    QWORD PTR [rip+0x6f9a]        # 409060 <mkdir@GLIBC_2.2.5>
  4020c6:	push   0x9
  4020cb:	jmp    402020 <CU_basic_set_mode@plt-0x10>

00000000004020d0 <puts@plt>:
  4020d0:	jmp    QWORD PTR [rip+0x6f92]        # 409068 <puts@GLIBC_2.2.5>
  4020d6:	push   0xa
  4020db:	jmp    402020 <CU_basic_set_mode@plt-0x10>

00000000004020e0 <CU_get_number_of_tests_failed@plt>:
  4020e0:	jmp    QWORD PTR [rip+0x6f8a]        # 409070 <CU_get_number_of_tests_failed>
  4020e6:	push   0xb
  4020eb:	jmp    402020 <CU_basic_set_mode@plt-0x10>

00000000004020f0 <fread@plt>:
  4020f0:	jmp    QWORD PTR [rip+0x6f82]        # 409078 <fread@GLIBC_2.2.5>
  4020f6:	push   0xc
  4020fb:	jmp    402020 <CU_basic_set_mode@plt-0x10>

0000000000402100 <CU_cleanup_registry@plt>:
  402100:	jmp    QWORD PTR [rip+0x6f7a]        # 409080 <CU_cleanup_registry>
  402106:	push   0xd
  40210b:	jmp    402020 <CU_basic_set_mode@plt-0x10>

0000000000402110 <fcntl@plt>:
  402110:	jmp    QWORD PTR [rip+0x6f72]        # 409088 <fcntl@GLIBC_2.2.5>
  402116:	push   0xe
  40211b:	jmp    402020 <CU_basic_set_mode@plt-0x10>

0000000000402120 <CU_add_suite@plt>:
  402120:	jmp    QWORD PTR [rip+0x6f6a]        # 409090 <CU_add_suite>
  402126:	push   0xf
  40212b:	jmp    402020 <CU_basic_set_mode@plt-0x10>

0000000000402130 <CU_basic_run_tests@plt>:
  402130:	jmp    QWORD PTR [rip+0x6f62]        # 409098 <CU_basic_run_tests>
  402136:	push   0x10
  40213b:	jmp    402020 <CU_basic_set_mode@plt-0x10>

0000000000402140 <getpid@plt>:
  402140:	jmp    QWORD PTR [rip+0x6f5a]        # 4090a0 <getpid@GLIBC_2.2.5>
  402146:	push   0x11
  40214b:	jmp    402020 <CU_basic_set_mode@plt-0x10>

0000000000402150 <CU_basic_show_failures@plt>:
  402150:	jmp    QWORD PTR [rip+0x6f52]        # 4090a8 <CU_basic_show_failures>
  402156:	push   0x12
  40215b:	jmp    402020 <CU_basic_set_mode@plt-0x10>

0000000000402160 <fclose@plt>:
  402160:	jmp    QWORD PTR [rip+0x6f4a]        # 4090b0 <fclose@GLIBC_2.2.5>
  402166:	push   0x13
  40216b:	jmp    402020 <CU_basic_set_mode@plt-0x10>

0000000000402170 <strlen@plt>:
  402170:	jmp    QWORD PTR [rip+0x6f42]        # 4090b8 <strlen@GLIBC_2.2.5>
  402176:	push   0x14
  40217b:	jmp    402020 <CU_basic_set_mode@plt-0x10>

0000000000402180 <__stack_chk_fail@plt>:
  402180:	jmp    QWORD PTR [rip+0x6f3a]        # 4090c0 <__stack_chk_fail@GLIBC_2.4>
  402186:	push   0x15
  40218b:	jmp    402020 <CU_basic_set_mode@plt-0x10>

0000000000402190 <setbuf@plt>:
  402190:	jmp    QWORD PTR [rip+0x6f32]        # 4090c8 <setbuf@GLIBC_2.2.5>
  402196:	push   0x16
  40219b:	jmp    402020 <CU_basic_set_mode@plt-0x10>

00000000004021a0 <printf@plt>:
  4021a0:	jmp    QWORD PTR [rip+0x6f2a]        # 4090d0 <printf@GLIBC_2.2.5>
  4021a6:	push   0x17
  4021ab:	jmp    402020 <CU_basic_set_mode@plt-0x10>

00000000004021b0 <close@plt>:
  4021b0:	jmp    QWORD PTR [rip+0x6f22]        # 4090d8 <close@GLIBC_2.2.5>
  4021b6:	push   0x18
  4021bb:	jmp    402020 <CU_basic_set_mode@plt-0x10>

00000000004021c0 <ftell@plt>:
  4021c0:	jmp    QWORD PTR [rip+0x6f1a]        # 4090e0 <ftell@GLIBC_2.2.5>
  4021c6:	push   0x19
  4021cb:	jmp    402020 <CU_basic_set_mode@plt-0x10>

00000000004021d0 <CU_assertImplementation@plt>:
  4021d0:	jmp    QWORD PTR [rip+0x6f12]        # 4090e8 <CU_assertImplementation>
  4021d6:	push   0x1a
  4021db:	jmp    402020 <CU_basic_set_mode@plt-0x10>

00000000004021e0 <strtol@plt>:
  4021e0:	jmp    QWORD PTR [rip+0x6f0a]        # 4090f0 <strtol@GLIBC_2.2.5>
  4021e6:	push   0x1b
  4021eb:	jmp    402020 <CU_basic_set_mode@plt-0x10>

00000000004021f0 <memcpy@plt>:
  4021f0:	jmp    QWORD PTR [rip+0x6f02]        # 4090f8 <memcpy@GLIBC_2.14>
  4021f6:	push   0x1c
  4021fb:	jmp    402020 <CU_basic_set_mode@plt-0x10>

0000000000402200 <malloc@plt>:
  402200:	jmp    QWORD PTR [rip+0x6efa]        # 409100 <malloc@GLIBC_2.2.5>
  402206:	push   0x1d
  40220b:	jmp    402020 <CU_basic_set_mode@plt-0x10>

0000000000402210 <__fxstat@plt>:
  402210:	jmp    QWORD PTR [rip+0x6ef2]        # 409108 <__fxstat@GLIBC_2.2.5>
  402216:	push   0x1e
  40221b:	jmp    402020 <CU_basic_set_mode@plt-0x10>

0000000000402220 <fseek@plt>:
  402220:	jmp    QWORD PTR [rip+0x6eea]        # 409110 <fseek@GLIBC_2.2.5>
  402226:	push   0x1f
  40222b:	jmp    402020 <CU_basic_set_mode@plt-0x10>

0000000000402230 <CU_add_test@plt>:
  402230:	jmp    QWORD PTR [rip+0x6ee2]        # 409118 <CU_add_test>
  402236:	push   0x20
  40223b:	jmp    402020 <CU_basic_set_mode@plt-0x10>

0000000000402240 <fdopen@plt>:
  402240:	jmp    QWORD PTR [rip+0x6eda]        # 409120 <fdopen@GLIBC_2.2.5>
  402246:	push   0x21
  40224b:	jmp    402020 <CU_basic_set_mode@plt-0x10>

0000000000402250 <open@plt>:
  402250:	jmp    QWORD PTR [rip+0x6ed2]        # 409128 <open@GLIBC_2.2.5>
  402256:	push   0x22
  40225b:	jmp    402020 <CU_basic_set_mode@plt-0x10>

0000000000402260 <access@plt>:
  402260:	jmp    QWORD PTR [rip+0x6eca]        # 409130 <access@GLIBC_2.2.5>
  402266:	push   0x23
  40226b:	jmp    402020 <CU_basic_set_mode@plt-0x10>

0000000000402270 <__cxa_atexit@plt>:
  402270:	jmp    QWORD PTR [rip+0x6ec2]        # 409138 <__cxa_atexit@GLIBC_2.2.5>
  402276:	push   0x24
  40227b:	jmp    402020 <CU_basic_set_mode@plt-0x10>

0000000000402280 <CU_get_failure_list@plt>:
  402280:	jmp    QWORD PTR [rip+0x6eba]        # 409140 <CU_get_failure_list>
  402286:	push   0x25
  40228b:	jmp    402020 <CU_basic_set_mode@plt-0x10>

0000000000402290 <fwrite@plt>:
  402290:	jmp    QWORD PTR [rip+0x6eb2]        # 409148 <fwrite@GLIBC_2.2.5>
  402296:	push   0x26
  40229b:	jmp    402020 <CU_basic_set_mode@plt-0x10>

00000000004022a0 <__fprintf_chk@plt>:
  4022a0:	jmp    QWORD PTR [rip+0x6eaa]        # 409150 <__fprintf_chk@GLIBC_2.3.4>
  4022a6:	push   0x27
  4022ab:	jmp    402020 <CU_basic_set_mode@plt-0x10>

Disassembly of section .text:

00000000004022b0 <_start@@Base>:
  4022b0:	endbr64 
  4022b4:	xor    ebp,ebp
  4022b6:	mov    r9,rdx
  4022b9:	pop    rsi
  4022ba:	mov    rdx,rsp
  4022bd:	and    rsp,0xfffffffffffffff0
  4022c1:	push   rax
  4022c2:	push   rsp
  4022c3:	mov    r8,0x405b30
  4022ca:	mov    rcx,0x405ac0
  4022d1:	mov    rdi,0x403218
  4022d8:	call   QWORD PTR [rip+0x6d0a]        # 408fe8 <__libc_start_main@GLIBC_2.2.5>
  4022de:	hlt    
  4022df:	nop
  4022e0:	endbr64 
  4022e4:	ret    
  4022e5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4022ef:	nop
  4022f0:	mov    eax,0x4096b7
  4022f5:	push   rbp
  4022f6:	sub    rax,0x4096b0
  4022fc:	cmp    rax,0xe
  402300:	mov    rbp,rsp
  402303:	jbe    402320 <_start@@Base+0x70>
  402305:	mov    eax,0x0
  40230a:	test   rax,rax
  40230d:	je     402320 <_start@@Base+0x70>
  40230f:	pop    rbp
  402310:	mov    edi,0x4096b0
  402315:	jmp    rax
  402317:	nop    WORD PTR [rax+rax*1+0x0]
  402320:	pop    rbp
  402321:	ret    
  402322:	nop    DWORD PTR [rax+0x0]
  402326:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402330:	mov    esi,0x4096b0
  402335:	push   rbp
  402336:	sub    rsi,0x4096b0
  40233d:	sar    rsi,0x3
  402341:	mov    rbp,rsp
  402344:	mov    rax,rsi
  402347:	shr    rax,0x3f
  40234b:	add    rsi,rax
  40234e:	sar    rsi,1
  402351:	je     402368 <_start@@Base+0xb8>
  402353:	mov    eax,0x0
  402358:	test   rax,rax
  40235b:	je     402368 <_start@@Base+0xb8>
  40235d:	pop    rbp
  40235e:	mov    edi,0x4096b0
  402363:	jmp    rax
  402365:	nop    DWORD PTR [rax]
  402368:	pop    rbp
  402369:	ret    
  40236a:	nop    WORD PTR [rax+rax*1+0x0]
  402370:	cmp    BYTE PTR [rip+0x7349],0x0        # 4096c0 <__bss_start@@Base+0x10>
  402377:	jne    40238a <_start@@Base+0xda>
  402379:	push   rbp
  40237a:	mov    rbp,rsp
  40237d:	call   4022f0 <_start@@Base+0x40>
  402382:	pop    rbp
  402383:	mov    BYTE PTR [rip+0x7336],0x1        # 4096c0 <__bss_start@@Base+0x10>
  40238a:	repz ret 
  40238c:	nop    DWORD PTR [rax+0x0]
  402390:	mov    edi,0x408e00
  402395:	cmp    QWORD PTR [rdi],0x0
  402399:	jne    4023a0 <_start@@Base+0xf0>
  40239b:	jmp    402330 <_start@@Base+0x80>
  40239d:	nop    DWORD PTR [rax]
  4023a0:	mov    eax,0x0
  4023a5:	test   rax,rax
  4023a8:	je     40239b <_start@@Base+0xeb>
  4023aa:	push   rbp
  4023ab:	mov    rbp,rsp
  4023ae:	call   rax
  4023b0:	pop    rbp
  4023b1:	jmp    402330 <_start@@Base+0x80>

00000000004023b6 <test_encoded_size@@Base>:
  4023b6:	push   rbp
  4023b7:	mov    rbp,rsp
  4023ba:	mov    rax,QWORD PTR [rip+0x75bf]        # 409980 <__bss_start@@Base+0x2d0>
  4023c1:	add    rax,0x1
  4023c5:	mov    QWORD PTR [rip+0x75b4],rax        # 409980 <__bss_start@@Base+0x2d0>
  4023cc:	mov    edi,0x0
  4023d1:	call   4033e0 <b64_get_encoded_buffer_size@@Base>
  4023d6:	mov    rdx,rax
  4023d9:	mov    rax,QWORD PTR [rip+0x75a8]        # 409988 <__bss_start@@Base+0x2d8>
  4023e0:	add    rax,0x1
  4023e4:	mov    QWORD PTR [rip+0x759d],rax        # 409988 <__bss_start@@Base+0x2d8>
  4023eb:	test   rdx,rdx
  4023ee:	sete   al
  4023f1:	movzx  eax,al
  4023f4:	mov    r9d,0x0
  4023fa:	lea    r8,[rip+0x3c07]        # 406008 <_IO_stdin_used@@Base+0x8>
  402401:	lea    rcx,[rip+0x3c08]        # 406010 <_IO_stdin_used@@Base+0x10>
  402408:	lea    rdx,[rip+0x3c61]        # 406070 <_IO_stdin_used@@Base+0x70>
  40240f:	mov    esi,0x1d
  402414:	mov    edi,eax
  402416:	call   4021d0 <CU_assertImplementation@plt>
  40241b:	mov    rax,QWORD PTR [rip+0x756e]        # 409990 <__bss_start@@Base+0x2e0>
  402422:	add    rax,0x1
  402426:	mov    QWORD PTR [rip+0x7563],rax        # 409990 <__bss_start@@Base+0x2e0>
  40242d:	mov    edi,0x1
  402432:	call   4033e0 <b64_get_encoded_buffer_size@@Base>
  402437:	mov    rdx,rax
  40243a:	mov    rax,QWORD PTR [rip+0x7557]        # 409998 <__bss_start@@Base+0x2e8>
  402441:	add    rax,0x1
  402445:	mov    QWORD PTR [rip+0x754c],rax        # 409998 <__bss_start@@Base+0x2e8>
  40244c:	cmp    rdx,0x4
  402450:	sete   al
  402453:	movzx  eax,al
  402456:	mov    r9d,0x0
  40245c:	lea    r8,[rip+0x3ba5]        # 406008 <_IO_stdin_used@@Base+0x8>
  402463:	lea    rcx,[rip+0x3ba6]        # 406010 <_IO_stdin_used@@Base+0x10>
  40246a:	lea    rdx,[rip+0x3c37]        # 4060a8 <_IO_stdin_used@@Base+0xa8>
  402471:	mov    esi,0x1e
  402476:	mov    edi,eax
  402478:	call   4021d0 <CU_assertImplementation@plt>
  40247d:	mov    rax,QWORD PTR [rip+0x751c]        # 4099a0 <__bss_start@@Base+0x2f0>
  402484:	add    rax,0x1
  402488:	mov    QWORD PTR [rip+0x7511],rax        # 4099a0 <__bss_start@@Base+0x2f0>
  40248f:	mov    edi,0x2
  402494:	call   4033e0 <b64_get_encoded_buffer_size@@Base>
  402499:	mov    rdx,rax
  40249c:	mov    rax,QWORD PTR [rip+0x7505]        # 4099a8 <__bss_start@@Base+0x2f8>
  4024a3:	add    rax,0x1
  4024a7:	mov    QWORD PTR [rip+0x74fa],rax        # 4099a8 <__bss_start@@Base+0x2f8>
  4024ae:	cmp    rdx,0x4
  4024b2:	sete   al
  4024b5:	movzx  eax,al
  4024b8:	mov    r9d,0x0
  4024be:	lea    r8,[rip+0x3b43]        # 406008 <_IO_stdin_used@@Base+0x8>
  4024c5:	lea    rcx,[rip+0x3b44]        # 406010 <_IO_stdin_used@@Base+0x10>
  4024cc:	lea    rdx,[rip+0x3c0d]        # 4060e0 <_IO_stdin_used@@Base+0xe0>
  4024d3:	mov    esi,0x1f
  4024d8:	mov    edi,eax
  4024da:	call   4021d0 <CU_assertImplementation@plt>
  4024df:	mov    rax,QWORD PTR [rip+0x74ca]        # 4099b0 <__bss_start@@Base+0x300>
  4024e6:	add    rax,0x1
  4024ea:	mov    QWORD PTR [rip+0x74bf],rax        # 4099b0 <__bss_start@@Base+0x300>
  4024f1:	mov    edi,0x3
  4024f6:	call   4033e0 <b64_get_encoded_buffer_size@@Base>
  4024fb:	mov    rdx,rax
  4024fe:	mov    rax,QWORD PTR [rip+0x74b3]        # 4099b8 <__bss_start@@Base+0x308>
  402505:	add    rax,0x1
  402509:	mov    QWORD PTR [rip+0x74a8],rax        # 4099b8 <__bss_start@@Base+0x308>
  402510:	cmp    rdx,0x4
  402514:	sete   al
  402517:	movzx  eax,al
  40251a:	mov    r9d,0x0
  402520:	lea    r8,[rip+0x3ae1]        # 406008 <_IO_stdin_used@@Base+0x8>
  402527:	lea    rcx,[rip+0x3ae2]        # 406010 <_IO_stdin_used@@Base+0x10>
  40252e:	lea    rdx,[rip+0x3be3]        # 406118 <_IO_stdin_used@@Base+0x118>
  402535:	mov    esi,0x20
  40253a:	mov    edi,eax
  40253c:	call   4021d0 <CU_assertImplementation@plt>
  402541:	mov    rax,QWORD PTR [rip+0x7478]        # 4099c0 <__bss_start@@Base+0x310>
  402548:	add    rax,0x1
  40254c:	mov    QWORD PTR [rip+0x746d],rax        # 4099c0 <__bss_start@@Base+0x310>
  402553:	mov    edi,0x4
  402558:	call   4033e0 <b64_get_encoded_buffer_size@@Base>
  40255d:	mov    rdx,rax
  402560:	mov    rax,QWORD PTR [rip+0x7461]        # 4099c8 <__bss_start@@Base+0x318>
  402567:	add    rax,0x1
  40256b:	mov    QWORD PTR [rip+0x7456],rax        # 4099c8 <__bss_start@@Base+0x318>
  402572:	cmp    rdx,0x8
  402576:	sete   al
  402579:	movzx  eax,al
  40257c:	mov    r9d,0x0
  402582:	lea    r8,[rip+0x3a7f]        # 406008 <_IO_stdin_used@@Base+0x8>
  402589:	lea    rcx,[rip+0x3a80]        # 406010 <_IO_stdin_used@@Base+0x10>
  402590:	lea    rdx,[rip+0x3bb9]        # 406150 <_IO_stdin_used@@Base+0x150>
  402597:	mov    esi,0x21
  40259c:	mov    edi,eax
  40259e:	call   4021d0 <CU_assertImplementation@plt>
  4025a3:	mov    rax,QWORD PTR [rip+0x7426]        # 4099d0 <__bss_start@@Base+0x320>
  4025aa:	add    rax,0x1
  4025ae:	mov    QWORD PTR [rip+0x741b],rax        # 4099d0 <__bss_start@@Base+0x320>
  4025b5:	mov    edi,0x12c
  4025ba:	call   4033e0 <b64_get_encoded_buffer_size@@Base>
  4025bf:	mov    rdx,rax
  4025c2:	mov    rax,QWORD PTR [rip+0x740f]        # 4099d8 <__bss_start@@Base+0x328>
  4025c9:	add    rax,0x1
  4025cd:	mov    QWORD PTR [rip+0x7404],rax        # 4099d8 <__bss_start@@Base+0x328>
  4025d4:	cmp    rdx,0x190
  4025db:	sete   al
  4025de:	movzx  eax,al
  4025e1:	mov    r9d,0x0
  4025e7:	lea    r8,[rip+0x3a1a]        # 406008 <_IO_stdin_used@@Base+0x8>
  4025ee:	lea    rcx,[rip+0x3a1b]        # 406010 <_IO_stdin_used@@Base+0x10>
  4025f5:	lea    rdx,[rip+0x3b8c]        # 406188 <_IO_stdin_used@@Base+0x188>
  4025fc:	mov    esi,0x22
  402601:	mov    edi,eax
  402603:	call   4021d0 <CU_assertImplementation@plt>
  402608:	mov    rax,QWORD PTR [rip+0x73d1]        # 4099e0 <__bss_start@@Base+0x330>
  40260f:	add    rax,0x1
  402613:	mov    QWORD PTR [rip+0x73c6],rax        # 4099e0 <__bss_start@@Base+0x330>
  40261a:	nop
  40261b:	pop    rbp
  40261c:	ret    

000000000040261d <test_decoded_size@@Base>:
  40261d:	push   rbp
  40261e:	mov    rbp,rsp
  402621:	mov    rax,QWORD PTR [rip+0x72d8]        # 409900 <__bss_start@@Base+0x250>
  402628:	add    rax,0x1
  40262c:	mov    QWORD PTR [rip+0x72cd],rax        # 409900 <__bss_start@@Base+0x250>
  402633:	mov    edi,0x0
  402638:	call   403684 <b64_get_decoded_buffer_size@@Base>
  40263d:	mov    rdx,rax
  402640:	mov    rax,QWORD PTR [rip+0x72c1]        # 409908 <__bss_start@@Base+0x258>
  402647:	add    rax,0x1
  40264b:	mov    QWORD PTR [rip+0x72b6],rax        # 409908 <__bss_start@@Base+0x258>
  402652:	test   rdx,rdx
  402655:	sete   al
  402658:	movzx  eax,al
  40265b:	mov    r9d,0x0
  402661:	lea    r8,[rip+0x39a0]        # 406008 <_IO_stdin_used@@Base+0x8>
  402668:	lea    rcx,[rip+0x39a1]        # 406010 <_IO_stdin_used@@Base+0x10>
  40266f:	lea    rdx,[rip+0x3b4a]        # 4061c0 <_IO_stdin_used@@Base+0x1c0>
  402676:	mov    esi,0x26
  40267b:	mov    edi,eax
  40267d:	call   4021d0 <CU_assertImplementation@plt>
  402682:	mov    rax,QWORD PTR [rip+0x7287]        # 409910 <__bss_start@@Base+0x260>
  402689:	add    rax,0x1
  40268d:	mov    QWORD PTR [rip+0x727c],rax        # 409910 <__bss_start@@Base+0x260>
  402694:	mov    edi,0x1
  402699:	call   403684 <b64_get_decoded_buffer_size@@Base>
  40269e:	mov    rdx,rax
  4026a1:	mov    rax,QWORD PTR [rip+0x7270]        # 409918 <__bss_start@@Base+0x268>
  4026a8:	add    rax,0x1
  4026ac:	mov    QWORD PTR [rip+0x7265],rax        # 409918 <__bss_start@@Base+0x268>
  4026b3:	test   rdx,rdx
  4026b6:	sete   al
  4026b9:	movzx  eax,al
  4026bc:	mov    r9d,0x0
  4026c2:	lea    r8,[rip+0x393f]        # 406008 <_IO_stdin_used@@Base+0x8>
  4026c9:	lea    rcx,[rip+0x3940]        # 406010 <_IO_stdin_used@@Base+0x10>
  4026d0:	lea    rdx,[rip+0x3b21]        # 4061f8 <_IO_stdin_used@@Base+0x1f8>
  4026d7:	mov    esi,0x27
  4026dc:	mov    edi,eax
  4026de:	call   4021d0 <CU_assertImplementation@plt>
  4026e3:	mov    rax,QWORD PTR [rip+0x7236]        # 409920 <__bss_start@@Base+0x270>
  4026ea:	add    rax,0x1
  4026ee:	mov    QWORD PTR [rip+0x722b],rax        # 409920 <__bss_start@@Base+0x270>
  4026f5:	mov    edi,0x2
  4026fa:	call   403684 <b64_get_decoded_buffer_size@@Base>
  4026ff:	mov    rdx,rax
  402702:	mov    rax,QWORD PTR [rip+0x721f]        # 409928 <__bss_start@@Base+0x278>
  402709:	add    rax,0x1
  40270d:	mov    QWORD PTR [rip+0x7214],rax        # 409928 <__bss_start@@Base+0x278>
  402714:	test   rdx,rdx
  402717:	sete   al
  40271a:	movzx  eax,al
  40271d:	mov    r9d,0x0
  402723:	lea    r8,[rip+0x38de]        # 406008 <_IO_stdin_used@@Base+0x8>
  40272a:	lea    rcx,[rip+0x38df]        # 406010 <_IO_stdin_used@@Base+0x10>
  402731:	lea    rdx,[rip+0x3af8]        # 406230 <_IO_stdin_used@@Base+0x230>
  402738:	mov    esi,0x28
  40273d:	mov    edi,eax
  40273f:	call   4021d0 <CU_assertImplementation@plt>
  402744:	mov    rax,QWORD PTR [rip+0x71e5]        # 409930 <__bss_start@@Base+0x280>
  40274b:	add    rax,0x1
  40274f:	mov    QWORD PTR [rip+0x71da],rax        # 409930 <__bss_start@@Base+0x280>
  402756:	mov    edi,0x3
  40275b:	call   403684 <b64_get_decoded_buffer_size@@Base>
  402760:	mov    rdx,rax
  402763:	mov    rax,QWORD PTR [rip+0x71ce]        # 409938 <__bss_start@@Base+0x288>
  40276a:	add    rax,0x1
  40276e:	mov    QWORD PTR [rip+0x71c3],rax        # 409938 <__bss_start@@Base+0x288>
  402775:	test   rdx,rdx
  402778:	sete   al
  40277b:	movzx  eax,al
  40277e:	mov    r9d,0x0
  402784:	lea    r8,[rip+0x387d]        # 406008 <_IO_stdin_used@@Base+0x8>
  40278b:	lea    rcx,[rip+0x387e]        # 406010 <_IO_stdin_used@@Base+0x10>
  402792:	lea    rdx,[rip+0x3acf]        # 406268 <_IO_stdin_used@@Base+0x268>
  402799:	mov    esi,0x29
  40279e:	mov    edi,eax
  4027a0:	call   4021d0 <CU_assertImplementation@plt>
  4027a5:	mov    rax,QWORD PTR [rip+0x7194]        # 409940 <__bss_start@@Base+0x290>
  4027ac:	add    rax,0x1
  4027b0:	mov    QWORD PTR [rip+0x7189],rax        # 409940 <__bss_start@@Base+0x290>
  4027b7:	mov    edi,0x4
  4027bc:	call   403684 <b64_get_decoded_buffer_size@@Base>
  4027c1:	mov    rdx,rax
  4027c4:	mov    rax,QWORD PTR [rip+0x717d]        # 409948 <__bss_start@@Base+0x298>
  4027cb:	add    rax,0x1
  4027cf:	mov    QWORD PTR [rip+0x7172],rax        # 409948 <__bss_start@@Base+0x298>
  4027d6:	cmp    rdx,0x3
  4027da:	sete   al
  4027dd:	movzx  eax,al
  4027e0:	mov    r9d,0x0
  4027e6:	lea    r8,[rip+0x381b]        # 406008 <_IO_stdin_used@@Base+0x8>
  4027ed:	lea    rcx,[rip+0x381c]        # 406010 <_IO_stdin_used@@Base+0x10>
  4027f4:	lea    rdx,[rip+0x3aa5]        # 4062a0 <_IO_stdin_used@@Base+0x2a0>
  4027fb:	mov    esi,0x2a
  402800:	mov    edi,eax
  402802:	call   4021d0 <CU_assertImplementation@plt>
  402807:	mov    rax,QWORD PTR [rip+0x7142]        # 409950 <__bss_start@@Base+0x2a0>
  40280e:	add    rax,0x1
  402812:	mov    QWORD PTR [rip+0x7137],rax        # 409950 <__bss_start@@Base+0x2a0>
  402819:	mov    edi,0x8
  40281e:	call   403684 <b64_get_decoded_buffer_size@@Base>
  402823:	mov    rdx,rax
  402826:	mov    rax,QWORD PTR [rip+0x712b]        # 409958 <__bss_start@@Base+0x2a8>
  40282d:	add    rax,0x1
  402831:	mov    QWORD PTR [rip+0x7120],rax        # 409958 <__bss_start@@Base+0x2a8>
  402838:	cmp    rdx,0x6
  40283c:	sete   al
  40283f:	movzx  eax,al
  402842:	mov    r9d,0x0
  402848:	lea    r8,[rip+0x37b9]        # 406008 <_IO_stdin_used@@Base+0x8>
  40284f:	lea    rcx,[rip+0x37ba]        # 406010 <_IO_stdin_used@@Base+0x10>
  402856:	lea    rdx,[rip+0x3a7b]        # 4062d8 <_IO_stdin_used@@Base+0x2d8>
  40285d:	mov    esi,0x2b
  402862:	mov    edi,eax
  402864:	call   4021d0 <CU_assertImplementation@plt>
  402869:	mov    rax,QWORD PTR [rip+0x70f0]        # 409960 <__bss_start@@Base+0x2b0>
  402870:	add    rax,0x1
  402874:	mov    QWORD PTR [rip+0x70e5],rax        # 409960 <__bss_start@@Base+0x2b0>
  40287b:	nop
  40287c:	pop    rbp
  40287d:	ret    

000000000040287e <test_encode@@Base>:
  40287e:	push   rbp
  40287f:	mov    rbp,rsp
  402882:	mov    rax,QWORD PTR [rip+0x7017]        # 4098a0 <__bss_start@@Base+0x1f0>
  402889:	add    rax,0x1
  40288d:	mov    QWORD PTR [rip+0x700c],rax        # 4098a0 <__bss_start@@Base+0x1f0>
  402894:	mov    ecx,0xc
  402899:	lea    rdx,[rip+0x3a6a]        # 40630a <_IO_stdin_used@@Base+0x30a>
  4028a0:	mov    esi,0x8
  4028a5:	lea    rdi,[rip+0x3a6b]        # 406317 <_IO_stdin_used@@Base+0x317>
  4028ac:	call   402a5f <test_encoded_stuff@@Base>
  4028b1:	mov    edx,eax
  4028b3:	mov    rax,QWORD PTR [rip+0x6fee]        # 4098a8 <__bss_start@@Base+0x1f8>
  4028ba:	add    rax,0x1
  4028be:	mov    QWORD PTR [rip+0x6fe3],rax        # 4098a8 <__bss_start@@Base+0x1f8>
  4028c5:	mov    eax,edx
  4028c7:	xor    eax,0x1
  4028ca:	movzx  eax,al
  4028cd:	mov    r9d,0x0
  4028d3:	lea    r8,[rip+0x372e]        # 406008 <_IO_stdin_used@@Base+0x8>
  4028da:	lea    rcx,[rip+0x372f]        # 406010 <_IO_stdin_used@@Base+0x10>
  4028e1:	lea    rdx,[rip+0x3a38]        # 406320 <_IO_stdin_used@@Base+0x320>
  4028e8:	mov    esi,0x2f
  4028ed:	mov    edi,eax
  4028ef:	call   4021d0 <CU_assertImplementation@plt>
  4028f4:	mov    rax,QWORD PTR [rip+0x6fb5]        # 4098b0 <__bss_start@@Base+0x200>
  4028fb:	add    rax,0x1
  4028ff:	mov    QWORD PTR [rip+0x6faa],rax        # 4098b0 <__bss_start@@Base+0x200>
  402906:	mov    ecx,0xc
  40290b:	lea    rdx,[rip+0x3a6b]        # 40637d <_IO_stdin_used@@Base+0x37d>
  402912:	mov    esi,0x7
  402917:	lea    rdi,[rip+0x3a6c]        # 40638a <_IO_stdin_used@@Base+0x38a>
  40291e:	call   402a5f <test_encoded_stuff@@Base>
  402923:	mov    edx,eax
  402925:	mov    rax,QWORD PTR [rip+0x6f8c]        # 4098b8 <__bss_start@@Base+0x208>
  40292c:	add    rax,0x1
  402930:	mov    QWORD PTR [rip+0x6f81],rax        # 4098b8 <__bss_start@@Base+0x208>
  402937:	mov    eax,edx
  402939:	xor    eax,0x1
  40293c:	movzx  eax,al
  40293f:	mov    r9d,0x0
  402945:	lea    r8,[rip+0x36bc]        # 406008 <_IO_stdin_used@@Base+0x8>
  40294c:	lea    rcx,[rip+0x36bd]        # 406010 <_IO_stdin_used@@Base+0x10>
  402953:	lea    rdx,[rip+0x3a3e]        # 406398 <_IO_stdin_used@@Base+0x398>
  40295a:	mov    esi,0x30
  40295f:	mov    edi,eax
  402961:	call   4021d0 <CU_assertImplementation@plt>
  402966:	mov    rax,QWORD PTR [rip+0x6f53]        # 4098c0 <__bss_start@@Base+0x210>
  40296d:	add    rax,0x1
  402971:	mov    QWORD PTR [rip+0x6f48],rax        # 4098c0 <__bss_start@@Base+0x210>
  402978:	mov    ecx,0x8
  40297d:	lea    rdx,[rip+0x3a70]        # 4063f4 <_IO_stdin_used@@Base+0x3f4>
  402984:	mov    esi,0x6
  402989:	lea    rdi,[rip+0x3a6d]        # 4063fd <_IO_stdin_used@@Base+0x3fd>
  402990:	call   402a5f <test_encoded_stuff@@Base>
  402995:	mov    edx,eax
  402997:	mov    rax,QWORD PTR [rip+0x6f2a]        # 4098c8 <__bss_start@@Base+0x218>
  40299e:	add    rax,0x1
  4029a2:	mov    QWORD PTR [rip+0x6f1f],rax        # 4098c8 <__bss_start@@Base+0x218>
  4029a9:	mov    eax,edx
  4029ab:	xor    eax,0x1
  4029ae:	movzx  eax,al
  4029b1:	mov    r9d,0x0
  4029b7:	lea    r8,[rip+0x364a]        # 406008 <_IO_stdin_used@@Base+0x8>
  4029be:	lea    rcx,[rip+0x364b]        # 406010 <_IO_stdin_used@@Base+0x10>
  4029c5:	lea    rdx,[rip+0x3a3c]        # 406408 <_IO_stdin_used@@Base+0x408>
  4029cc:	mov    esi,0x31
  4029d1:	mov    edi,eax
  4029d3:	call   4021d0 <CU_assertImplementation@plt>
  4029d8:	mov    rax,QWORD PTR [rip+0x6ef1]        # 4098d0 <__bss_start@@Base+0x220>
  4029df:	add    rax,0x1
  4029e3:	mov    QWORD PTR [rip+0x6ee6],rax        # 4098d0 <__bss_start@@Base+0x220>
  4029ea:	mov    ecx,0x8
  4029ef:	lea    rdx,[rip+0x3a68]        # 40645e <_IO_stdin_used@@Base+0x45e>
  4029f6:	mov    esi,0x5
  4029fb:	lea    rdi,[rip+0x3a65]        # 406467 <_IO_stdin_used@@Base+0x467>
  402a02:	call   402a5f <test_encoded_stuff@@Base>
  402a07:	mov    edx,eax
  402a09:	mov    rax,QWORD PTR [rip+0x6ec8]        # 4098d8 <__bss_start@@Base+0x228>
  402a10:	add    rax,0x1
  402a14:	mov    QWORD PTR [rip+0x6ebd],rax        # 4098d8 <__bss_start@@Base+0x228>
  402a1b:	mov    eax,edx
  402a1d:	xor    eax,0x1
  402a20:	movzx  eax,al
  402a23:	mov    r9d,0x0
  402a29:	lea    r8,[rip+0x35d8]        # 406008 <_IO_stdin_used@@Base+0x8>
  402a30:	lea    rcx,[rip+0x35d9]        # 406010 <_IO_stdin_used@@Base+0x10>
  402a37:	lea    rdx,[rip+0x3a32]        # 406470 <_IO_stdin_used@@Base+0x470>
  402a3e:	mov    esi,0x32
  402a43:	mov    edi,eax
  402a45:	call   4021d0 <CU_assertImplementation@plt>
  402a4a:	mov    rax,QWORD PTR [rip+0x6e8f]        # 4098e0 <__bss_start@@Base+0x230>
  402a51:	add    rax,0x1
  402a55:	mov    QWORD PTR [rip+0x6e84],rax        # 4098e0 <__bss_start@@Base+0x230>
  402a5c:	nop
  402a5d:	pop    rbp
  402a5e:	ret    

0000000000402a5f <test_encoded_stuff@@Base>:
  402a5f:	push   rbp
  402a60:	mov    rbp,rsp
  402a63:	sub    rsp,0x40
  402a67:	mov    QWORD PTR [rbp-0x28],rdi
  402a6b:	mov    QWORD PTR [rbp-0x30],rsi
  402a6f:	mov    QWORD PTR [rbp-0x38],rdx
  402a73:	mov    QWORD PTR [rbp-0x40],rcx
  402a77:	mov    rax,QWORD PTR [rip+0x6de2]        # 409860 <__bss_start@@Base+0x1b0>
  402a7e:	add    rax,0x1
  402a82:	mov    QWORD PTR [rip+0x6dd7],rax        # 409860 <__bss_start@@Base+0x1b0>
  402a89:	mov    BYTE PTR [rbp-0x19],0x0
  402a8d:	mov    rax,QWORD PTR [rbp-0x30]
  402a91:	mov    rdi,rax
  402a94:	call   4033e0 <b64_get_encoded_buffer_size@@Base>
  402a99:	mov    QWORD PTR [rbp-0x10],rax
  402a9d:	mov    rax,QWORD PTR [rip+0x6dc4]        # 409868 <__bss_start@@Base+0x1b8>
  402aa4:	add    rax,0x1
  402aa8:	mov    QWORD PTR [rip+0x6db9],rax        # 409868 <__bss_start@@Base+0x1b8>
  402aaf:	mov    rax,QWORD PTR [rbp-0x10]
  402ab3:	mov    rdi,rax
  402ab6:	call   402200 <malloc@plt>
  402abb:	mov    QWORD PTR [rbp-0x8],rax
  402abf:	mov    rdx,QWORD PTR [rbp-0x8]
  402ac3:	mov    rcx,QWORD PTR [rbp-0x30]
  402ac7:	mov    rax,QWORD PTR [rbp-0x28]
  402acb:	mov    rsi,rcx
  402ace:	mov    rdi,rax
  402ad1:	call   403422 <b64_encode@@Base>
  402ad6:	mov    rax,QWORD PTR [rip+0x6d93]        # 409870 <__bss_start@@Base+0x1c0>
  402add:	add    rax,0x1
  402ae1:	mov    QWORD PTR [rip+0x6d88],rax        # 409870 <__bss_start@@Base+0x1c0>
  402ae8:	mov    rax,QWORD PTR [rbp-0x40]
  402aec:	cmp    rax,QWORD PTR [rbp-0x10]
  402af0:	sete   al
  402af3:	movzx  eax,al
  402af6:	mov    r9d,0x0
  402afc:	lea    r8,[rip+0x3505]        # 406008 <_IO_stdin_used@@Base+0x8>
  402b03:	lea    rcx,[rip+0x3506]        # 406010 <_IO_stdin_used@@Base+0x10>
  402b0a:	lea    rdx,[rip+0x39b7]        # 4064c8 <_IO_stdin_used@@Base+0x4c8>
  402b11:	mov    esi,0x3e
  402b16:	mov    edi,eax
  402b18:	call   4021d0 <CU_assertImplementation@plt>
  402b1d:	movzx  edx,BYTE PTR [rbp-0x19]
  402b21:	mov    rax,QWORD PTR [rbp-0x40]
  402b25:	cmp    rax,QWORD PTR [rbp-0x10]
  402b29:	setne  al
  402b2c:	movzx  eax,al
  402b2f:	or     eax,edx
  402b31:	test   eax,eax
  402b33:	setne  al
  402b36:	mov    BYTE PTR [rbp-0x19],al
  402b39:	mov    QWORD PTR [rbp-0x18],0x0
  402b41:	jmp    402c69 <test_encoded_stuff@@Base+0x20a>
  402b46:	mov    rax,QWORD PTR [rip+0x6d43]        # 409890 <__bss_start@@Base+0x1e0>
  402b4d:	add    rax,0x1
  402b51:	mov    QWORD PTR [rip+0x6d38],rax        # 409890 <__bss_start@@Base+0x1e0>
  402b58:	mov    rdx,QWORD PTR [rbp-0x8]
  402b5c:	mov    rax,QWORD PTR [rbp-0x18]
  402b60:	add    rax,rdx
  402b63:	movzx  edx,BYTE PTR [rax]
  402b66:	mov    rcx,QWORD PTR [rbp-0x38]
  402b6a:	mov    rax,QWORD PTR [rbp-0x18]
  402b6e:	add    rax,rcx
  402b71:	movzx  eax,BYTE PTR [rax]
  402b74:	cmp    dl,al
  402b76:	sete   al
  402b79:	movzx  eax,al
  402b7c:	mov    r9d,0x0
  402b82:	lea    r8,[rip+0x347f]        # 406008 <_IO_stdin_used@@Base+0x8>
  402b89:	lea    rcx,[rip+0x3480]        # 406010 <_IO_stdin_used@@Base+0x10>
  402b90:	lea    rdx,[rip+0x3961]        # 4064f8 <_IO_stdin_used@@Base+0x4f8>
  402b97:	mov    esi,0x41
  402b9c:	mov    edi,eax
  402b9e:	call   4021d0 <CU_assertImplementation@plt>
  402ba3:	mov    rax,QWORD PTR [rip+0x6cce]        # 409878 <__bss_start@@Base+0x1c8>
  402baa:	add    rax,0x1
  402bae:	mov    QWORD PTR [rip+0x6cc3],rax        # 409878 <__bss_start@@Base+0x1c8>
  402bb5:	mov    rdx,QWORD PTR [rbp-0x8]
  402bb9:	mov    rax,QWORD PTR [rbp-0x18]
  402bbd:	add    rax,rdx
  402bc0:	movzx  edx,BYTE PTR [rax]
  402bc3:	mov    rcx,QWORD PTR [rbp-0x38]
  402bc7:	mov    rax,QWORD PTR [rbp-0x18]
  402bcb:	add    rax,rcx
  402bce:	movzx  eax,BYTE PTR [rax]
  402bd1:	cmp    dl,al
  402bd3:	je     402c52 <test_encoded_stuff@@Base+0x1f3>
  402bd5:	mov    rax,QWORD PTR [rip+0x6ca4]        # 409880 <__bss_start@@Base+0x1d0>
  402bdc:	add    rax,0x1
  402be0:	mov    QWORD PTR [rip+0x6c99],rax        # 409880 <__bss_start@@Base+0x1d0>
  402be7:	mov    BYTE PTR [rbp-0x19],0x1
  402beb:	mov    rax,QWORD PTR [rbp-0x10]
  402bef:	mov    r8d,eax
  402bf2:	mov    rdx,QWORD PTR [rbp-0x8]
  402bf6:	mov    rax,QWORD PTR [rbp-0x18]
  402bfa:	add    rax,rdx
  402bfd:	movzx  eax,BYTE PTR [rax]
  402c00:	movzx  ecx,al
  402c03:	mov    rax,QWORD PTR [rbp-0x40]
  402c07:	mov    r10d,eax
  402c0a:	mov    rdx,QWORD PTR [rbp-0x38]
  402c0e:	mov    rax,QWORD PTR [rbp-0x18]
  402c12:	add    rax,rdx
  402c15:	movzx  eax,BYTE PTR [rax]
  402c18:	movzx  edx,al
  402c1b:	mov    rdi,QWORD PTR [rbp-0x18]
  402c1f:	mov    rsi,QWORD PTR [rbp-0x38]
  402c23:	mov    rax,QWORD PTR [rbp-0x18]
  402c27:	sub    rsp,0x8
  402c2b:	push   QWORD PTR [rbp-0x8]
  402c2e:	push   r8
  402c30:	push   rcx
  402c31:	mov    r9,rdi
  402c34:	mov    r8,rsi
  402c37:	mov    ecx,r10d
  402c3a:	mov    rsi,rax
  402c3d:	lea    rdi,[rip+0x38e4]        # 406528 <_IO_stdin_used@@Base+0x528>
  402c44:	mov    eax,0x0
  402c49:	call   4021a0 <printf@plt>
  402c4e:	add    rsp,0x20
  402c52:	add    QWORD PTR [rbp-0x18],0x1
  402c57:	mov    rax,QWORD PTR [rip+0x6c2a]        # 409888 <__bss_start@@Base+0x1d8>
  402c5e:	add    rax,0x1
  402c62:	mov    QWORD PTR [rip+0x6c1f],rax        # 409888 <__bss_start@@Base+0x1d8>
  402c69:	mov    rax,QWORD PTR [rbp-0x18]
  402c6d:	cmp    rax,QWORD PTR [rbp-0x40]
  402c71:	jb     402b46 <test_encoded_stuff@@Base+0xe7>
  402c77:	mov    rax,QWORD PTR [rbp-0x8]
  402c7b:	mov    rdi,rax
  402c7e:	call   402050 <free@plt>
  402c83:	movzx  eax,BYTE PTR [rbp-0x19]
  402c87:	mov    rdx,QWORD PTR [rip+0x6c0a]        # 409898 <__bss_start@@Base+0x1e8>
  402c8e:	add    rdx,0x1
  402c92:	mov    QWORD PTR [rip+0x6bff],rdx        # 409898 <__bss_start@@Base+0x1e8>
  402c99:	leave  
  402c9a:	ret    

0000000000402c9b <test_decode@@Base>:
  402c9b:	push   rbp
  402c9c:	mov    rbp,rsp
  402c9f:	mov    rax,QWORD PTR [rip+0x6b5a]        # 409800 <__bss_start@@Base+0x150>
  402ca6:	add    rax,0x1
  402caa:	mov    QWORD PTR [rip+0x6b4f],rax        # 409800 <__bss_start@@Base+0x150>
  402cb1:	mov    ecx,0x8
  402cb6:	lea    rdx,[rip+0x365a]        # 406317 <_IO_stdin_used@@Base+0x317>
  402cbd:	mov    esi,0xc
  402cc2:	lea    rdi,[rip+0x3641]        # 40630a <_IO_stdin_used@@Base+0x30a>
  402cc9:	call   402e7c <test_decoded_stuff@@Base>
  402cce:	mov    edx,eax
  402cd0:	mov    rax,QWORD PTR [rip+0x6b31]        # 409808 <__bss_start@@Base+0x158>
  402cd7:	add    rax,0x1
  402cdb:	mov    QWORD PTR [rip+0x6b26],rax        # 409808 <__bss_start@@Base+0x158>
  402ce2:	mov    eax,edx
  402ce4:	xor    eax,0x1
  402ce7:	movzx  eax,al
  402cea:	mov    r9d,0x0
  402cf0:	lea    r8,[rip+0x3311]        # 406008 <_IO_stdin_used@@Base+0x8>
  402cf7:	lea    rcx,[rip+0x3312]        # 406010 <_IO_stdin_used@@Base+0x10>
  402cfe:	lea    rdx,[rip+0x3853]        # 406558 <_IO_stdin_used@@Base+0x558>
  402d05:	mov    esi,0x4e
  402d0a:	mov    edi,eax
  402d0c:	call   4021d0 <CU_assertImplementation@plt>
  402d11:	mov    rax,QWORD PTR [rip+0x6af8]        # 409810 <__bss_start@@Base+0x160>
  402d18:	add    rax,0x1
  402d1c:	mov    QWORD PTR [rip+0x6aed],rax        # 409810 <__bss_start@@Base+0x160>
  402d23:	mov    ecx,0x7
  402d28:	lea    rdx,[rip+0x365b]        # 40638a <_IO_stdin_used@@Base+0x38a>
  402d2f:	mov    esi,0xc
  402d34:	lea    rdi,[rip+0x3642]        # 40637d <_IO_stdin_used@@Base+0x37d>
  402d3b:	call   402e7c <test_decoded_stuff@@Base>
  402d40:	mov    edx,eax
  402d42:	mov    rax,QWORD PTR [rip+0x6acf]        # 409818 <__bss_start@@Base+0x168>
  402d49:	add    rax,0x1
  402d4d:	mov    QWORD PTR [rip+0x6ac4],rax        # 409818 <__bss_start@@Base+0x168>
  402d54:	mov    eax,edx
  402d56:	xor    eax,0x1
  402d59:	movzx  eax,al
  402d5c:	mov    r9d,0x0
  402d62:	lea    r8,[rip+0x329f]        # 406008 <_IO_stdin_used@@Base+0x8>
  402d69:	lea    rcx,[rip+0x32a0]        # 406010 <_IO_stdin_used@@Base+0x10>
  402d70:	lea    rdx,[rip+0x3841]        # 4065b8 <_IO_stdin_used@@Base+0x5b8>
  402d77:	mov    esi,0x4f
  402d7c:	mov    edi,eax
  402d7e:	call   4021d0 <CU_assertImplementation@plt>
  402d83:	mov    rax,QWORD PTR [rip+0x6a96]        # 409820 <__bss_start@@Base+0x170>
  402d8a:	add    rax,0x1
  402d8e:	mov    QWORD PTR [rip+0x6a8b],rax        # 409820 <__bss_start@@Base+0x170>
  402d95:	mov    ecx,0x6
  402d9a:	lea    rdx,[rip+0x365c]        # 4063fd <_IO_stdin_used@@Base+0x3fd>
  402da1:	mov    esi,0x8
  402da6:	lea    rdi,[rip+0x3647]        # 4063f4 <_IO_stdin_used@@Base+0x3f4>
  402dad:	call   402e7c <test_decoded_stuff@@Base>
  402db2:	mov    edx,eax
  402db4:	mov    rax,QWORD PTR [rip+0x6a6d]        # 409828 <__bss_start@@Base+0x178>
  402dbb:	add    rax,0x1
  402dbf:	mov    QWORD PTR [rip+0x6a62],rax        # 409828 <__bss_start@@Base+0x178>
  402dc6:	mov    eax,edx
  402dc8:	xor    eax,0x1
  402dcb:	movzx  eax,al
  402dce:	mov    r9d,0x0
  402dd4:	lea    r8,[rip+0x322d]        # 406008 <_IO_stdin_used@@Base+0x8>
  402ddb:	lea    rcx,[rip+0x322e]        # 406010 <_IO_stdin_used@@Base+0x10>
  402de2:	lea    rdx,[rip+0x382f]        # 406618 <_IO_stdin_used@@Base+0x618>
  402de9:	mov    esi,0x50
  402dee:	mov    edi,eax
  402df0:	call   4021d0 <CU_assertImplementation@plt>
  402df5:	mov    rax,QWORD PTR [rip+0x6a34]        # 409830 <__bss_start@@Base+0x180>
  402dfc:	add    rax,0x1
  402e00:	mov    QWORD PTR [rip+0x6a29],rax        # 409830 <__bss_start@@Base+0x180>
  402e07:	mov    ecx,0x5
  402e0c:	lea    rdx,[rip+0x3654]        # 406467 <_IO_stdin_used@@Base+0x467>
  402e13:	mov    esi,0x8
  402e18:	lea    rdi,[rip+0x363f]        # 40645e <_IO_stdin_used@@Base+0x45e>
  402e1f:	call   402e7c <test_decoded_stuff@@Base>
  402e24:	mov    edx,eax
  402e26:	mov    rax,QWORD PTR [rip+0x6a0b]        # 409838 <__bss_start@@Base+0x188>
  402e2d:	add    rax,0x1
  402e31:	mov    QWORD PTR [rip+0x6a00],rax        # 409838 <__bss_start@@Base+0x188>
  402e38:	mov    eax,edx
  402e3a:	xor    eax,0x1
  402e3d:	movzx  eax,al
  402e40:	mov    r9d,0x0
  402e46:	lea    r8,[rip+0x31bb]        # 406008 <_IO_stdin_used@@Base+0x8>
  402e4d:	lea    rcx,[rip+0x31bc]        # 406010 <_IO_stdin_used@@Base+0x10>
  402e54:	lea    rdx,[rip+0x3815]        # 406670 <_IO_stdin_used@@Base+0x670>
  402e5b:	mov    esi,0x51
  402e60:	mov    edi,eax
  402e62:	call   4021d0 <CU_assertImplementation@plt>
  402e67:	mov    rax,QWORD PTR [rip+0x69d2]        # 409840 <__bss_start@@Base+0x190>
  402e6e:	add    rax,0x1
  402e72:	mov    QWORD PTR [rip+0x69c7],rax        # 409840 <__bss_start@@Base+0x190>
  402e79:	nop
  402e7a:	pop    rbp
  402e7b:	ret    

0000000000402e7c <test_decoded_stuff@@Base>:
  402e7c:	push   rbp
  402e7d:	mov    rbp,rsp
  402e80:	sub    rsp,0x50
  402e84:	mov    QWORD PTR [rbp-0x38],rdi
  402e88:	mov    QWORD PTR [rbp-0x40],rsi
  402e8c:	mov    QWORD PTR [rbp-0x48],rdx
  402e90:	mov    QWORD PTR [rbp-0x50],rcx
  402e94:	mov    rax,QWORD PTR [rip+0x6905]        # 4097a0 <__bss_start@@Base+0xf0>
  402e9b:	add    rax,0x1
  402e9f:	mov    QWORD PTR [rip+0x68fa],rax        # 4097a0 <__bss_start@@Base+0xf0>
  402ea6:	mov    BYTE PTR [rbp-0x21],0x0
  402eaa:	mov    rax,QWORD PTR [rbp-0x40]
  402eae:	mov    rdi,rax
  402eb1:	call   403684 <b64_get_decoded_buffer_size@@Base>
  402eb6:	mov    QWORD PTR [rbp-0x18],rax
  402eba:	mov    rax,QWORD PTR [rip+0x68e7]        # 4097a8 <__bss_start@@Base+0xf8>
  402ec1:	add    rax,0x1
  402ec5:	mov    QWORD PTR [rip+0x68dc],rax        # 4097a8 <__bss_start@@Base+0xf8>
  402ecc:	mov    rax,QWORD PTR [rbp-0x18]
  402ed0:	mov    rdi,rax
  402ed3:	call   402200 <malloc@plt>
  402ed8:	mov    QWORD PTR [rbp-0x10],rax
  402edc:	mov    rdx,QWORD PTR [rbp-0x10]
  402ee0:	mov    rcx,QWORD PTR [rbp-0x40]
  402ee4:	mov    rax,QWORD PTR [rbp-0x38]
  402ee8:	mov    rsi,rcx
  402eeb:	mov    rdi,rax
  402eee:	call   4036fb <b64_decode@@Base>
  402ef3:	mov    QWORD PTR [rbp-0x8],rax
  402ef7:	mov    rax,QWORD PTR [rip+0x68b2]        # 4097b0 <__bss_start@@Base+0x100>
  402efe:	add    rax,0x1
  402f02:	mov    QWORD PTR [rip+0x68a7],rax        # 4097b0 <__bss_start@@Base+0x100>
  402f09:	mov    rax,QWORD PTR [rbp-0x50]
  402f0d:	cmp    rax,QWORD PTR [rbp-0x8]
  402f11:	sete   al
  402f14:	movzx  eax,al
  402f17:	mov    r9d,0x0
  402f1d:	lea    r8,[rip+0x30e4]        # 406008 <_IO_stdin_used@@Base+0x8>
  402f24:	lea    rcx,[rip+0x30e5]        # 406010 <_IO_stdin_used@@Base+0x10>
  402f2b:	lea    rdx,[rip+0x3796]        # 4066c8 <_IO_stdin_used@@Base+0x6c8>
  402f32:	mov    esi,0x5c
  402f37:	mov    edi,eax
  402f39:	call   4021d0 <CU_assertImplementation@plt>
  402f3e:	mov    rax,QWORD PTR [rip+0x6873]        # 4097b8 <__bss_start@@Base+0x108>
  402f45:	add    rax,0x1
  402f49:	mov    QWORD PTR [rip+0x6868],rax        # 4097b8 <__bss_start@@Base+0x108>
  402f50:	movzx  edx,BYTE PTR [rbp-0x21]
  402f54:	mov    rax,QWORD PTR [rbp-0x50]
  402f58:	cmp    rax,QWORD PTR [rbp-0x8]
  402f5c:	setne  al
  402f5f:	movzx  eax,al
  402f62:	or     eax,edx
  402f64:	test   eax,eax
  402f66:	setne  al
  402f69:	mov    BYTE PTR [rbp-0x21],al
  402f6c:	cmp    BYTE PTR [rbp-0x21],0x0
  402f70:	je     402fa8 <test_decoded_stuff@@Base+0x12c>
  402f72:	mov    rax,QWORD PTR [rip+0x6847]        # 4097c0 <__bss_start@@Base+0x110>
  402f79:	add    rax,0x1
  402f7d:	mov    QWORD PTR [rip+0x683c],rax        # 4097c0 <__bss_start@@Base+0x110>
  402f84:	mov    rax,QWORD PTR [rbp-0x8]
  402f88:	mov    ecx,eax
  402f8a:	mov    rax,QWORD PTR [rbp-0x50]
  402f8e:	mov    edx,eax
  402f90:	mov    rax,QWORD PTR [rbp-0x48]
  402f94:	mov    rsi,rax
  402f97:	lea    rdi,[rip+0x3753]        # 4066f1 <_IO_stdin_used@@Base+0x6f1>
  402f9e:	mov    eax,0x0
  402fa3:	call   4021a0 <printf@plt>
  402fa8:	mov    QWORD PTR [rbp-0x20],0x0
  402fb0:	jmp    4030d7 <test_decoded_stuff@@Base+0x25b>
  402fb5:	mov    rax,QWORD PTR [rip+0x6824]        # 4097e0 <__bss_start@@Base+0x130>
  402fbc:	add    rax,0x1
  402fc0:	mov    QWORD PTR [rip+0x6819],rax        # 4097e0 <__bss_start@@Base+0x130>
  402fc7:	mov    rdx,QWORD PTR [rbp-0x10]
  402fcb:	mov    rax,QWORD PTR [rbp-0x20]
  402fcf:	add    rax,rdx
  402fd2:	movzx  edx,BYTE PTR [rax]
  402fd5:	mov    rcx,QWORD PTR [rbp-0x48]
  402fd9:	mov    rax,QWORD PTR [rbp-0x20]
  402fdd:	add    rax,rcx
  402fe0:	movzx  eax,BYTE PTR [rax]
  402fe3:	cmp    dl,al
  402fe5:	sete   al
  402fe8:	movzx  eax,al
  402feb:	mov    r9d,0x0
  402ff1:	lea    r8,[rip+0x3010]        # 406008 <_IO_stdin_used@@Base+0x8>
  402ff8:	lea    rcx,[rip+0x3011]        # 406010 <_IO_stdin_used@@Base+0x10>
  402fff:	lea    rdx,[rip+0x34f2]        # 4064f8 <_IO_stdin_used@@Base+0x4f8>
  403006:	mov    esi,0x63
  40300b:	mov    edi,eax
  40300d:	call   4021d0 <CU_assertImplementation@plt>
  403012:	mov    rax,QWORD PTR [rip+0x67af]        # 4097c8 <__bss_start@@Base+0x118>
  403019:	add    rax,0x1
  40301d:	mov    QWORD PTR [rip+0x67a4],rax        # 4097c8 <__bss_start@@Base+0x118>
  403024:	mov    rdx,QWORD PTR [rbp-0x10]
  403028:	mov    rax,QWORD PTR [rbp-0x20]
  40302c:	add    rax,rdx
  40302f:	movzx  edx,BYTE PTR [rax]
  403032:	mov    rcx,QWORD PTR [rbp-0x48]
  403036:	mov    rax,QWORD PTR [rbp-0x20]
  40303a:	add    rax,rcx
  40303d:	movzx  eax,BYTE PTR [rax]
  403040:	cmp    dl,al
  403042:	je     4030c0 <test_decoded_stuff@@Base+0x244>
  403044:	mov    rax,QWORD PTR [rip+0x6785]        # 4097d0 <__bss_start@@Base+0x120>
  40304b:	add    rax,0x1
  40304f:	mov    QWORD PTR [rip+0x677a],rax        # 4097d0 <__bss_start@@Base+0x120>
  403056:	mov    BYTE PTR [rbp-0x21],0x1
  40305a:	mov    rax,QWORD PTR [rbp-0x8]
  40305e:	mov    r8d,eax
  403061:	mov    rdx,QWORD PTR [rbp-0x10]
  403065:	mov    rax,QWORD PTR [rbp-0x20]
  403069:	add    rax,rdx
  40306c:	movzx  eax,BYTE PTR [rax]
  40306f:	movzx  edx,al
  403072:	mov    rax,QWORD PTR [rbp-0x20]
  403076:	mov    r9d,eax
  403079:	mov    rax,QWORD PTR [rbp-0x50]
  40307d:	mov    edi,eax
  40307f:	mov    rcx,QWORD PTR [rbp-0x48]
  403083:	mov    rax,QWORD PTR [rbp-0x20]
  403087:	add    rax,rcx
  40308a:	movzx  eax,BYTE PTR [rax]
  40308d:	movzx  eax,al
  403090:	mov    rcx,QWORD PTR [rbp-0x20]
  403094:	mov    esi,ecx
  403096:	mov    rcx,QWORD PTR [rbp-0x48]
  40309a:	sub    rsp,0x8
  40309e:	push   QWORD PTR [rbp-0x10]
  4030a1:	push   r8
  4030a3:	push   rdx
  4030a4:	mov    r8,rcx
  4030a7:	mov    ecx,edi
  4030a9:	mov    edx,eax
  4030ab:	lea    rdi,[rip+0x365e]        # 406710 <_IO_stdin_used@@Base+0x710>
  4030b2:	mov    eax,0x0
  4030b7:	call   4021a0 <printf@plt>
  4030bc:	add    rsp,0x20
  4030c0:	add    QWORD PTR [rbp-0x20],0x1
  4030c5:	mov    rax,QWORD PTR [rip+0x670c]        # 4097d8 <__bss_start@@Base+0x128>
  4030cc:	add    rax,0x1
  4030d0:	mov    QWORD PTR [rip+0x6701],rax        # 4097d8 <__bss_start@@Base+0x128>
  4030d7:	mov    rax,QWORD PTR [rbp-0x20]
  4030db:	cmp    rax,QWORD PTR [rbp-0x50]
  4030df:	jb     402fb5 <test_decoded_stuff@@Base+0x139>
  4030e5:	mov    rax,QWORD PTR [rbp-0x10]
  4030e9:	mov    rdi,rax
  4030ec:	call   402050 <free@plt>
  4030f1:	movzx  eax,BYTE PTR [rbp-0x21]
  4030f5:	mov    rdx,QWORD PTR [rip+0x66ec]        # 4097e8 <__bss_start@@Base+0x138>
  4030fc:	add    rdx,0x1
  403100:	mov    QWORD PTR [rip+0x66e1],rdx        # 4097e8 <__bss_start@@Base+0x138>
  403107:	leave  
  403108:	ret    

0000000000403109 <add_suites@@Base>:
  403109:	push   rbp
  40310a:	mov    rbp,rsp
  40310d:	sub    rsp,0x10
  403111:	mov    QWORD PTR [rbp-0x8],rdi
  403115:	mov    rax,QWORD PTR [rip+0x6644]        # 409760 <__bss_start@@Base+0xb0>
  40311c:	add    rax,0x1
  403120:	mov    QWORD PTR [rip+0x6639],rax        # 409760 <__bss_start@@Base+0xb0>
  403127:	mov    edx,0x0
  40312c:	mov    esi,0x0
  403131:	lea    rdi,[rip+0x3601]        # 406739 <_IO_stdin_used@@Base+0x739>
  403138:	call   402120 <CU_add_suite@plt>
  40313d:	mov    rdx,rax
  403140:	mov    rax,QWORD PTR [rip+0x6621]        # 409768 <__bss_start@@Base+0xb8>
  403147:	add    rax,0x1
  40314b:	mov    QWORD PTR [rip+0x6616],rax        # 409768 <__bss_start@@Base+0xb8>
  403152:	mov    rax,QWORD PTR [rbp-0x8]
  403156:	mov    QWORD PTR [rax],rdx
  403159:	mov    rax,QWORD PTR [rbp-0x8]
  40315d:	mov    rax,QWORD PTR [rax]
  403160:	mov    rdx,0x4023b6
  403167:	lea    rsi,[rip+0x35e1]        # 40674f <_IO_stdin_used@@Base+0x74f>
  40316e:	mov    rdi,rax
  403171:	call   402230 <CU_add_test@plt>
  403176:	mov    rax,QWORD PTR [rip+0x65f3]        # 409770 <__bss_start@@Base+0xc0>
  40317d:	add    rax,0x1
  403181:	mov    QWORD PTR [rip+0x65e8],rax        # 409770 <__bss_start@@Base+0xc0>
  403188:	mov    rax,QWORD PTR [rbp-0x8]
  40318c:	mov    rax,QWORD PTR [rax]
  40318f:	mov    rdx,0x40261d
  403196:	lea    rsi,[rip+0x35cc]        # 406769 <_IO_stdin_used@@Base+0x769>
  40319d:	mov    rdi,rax
  4031a0:	call   402230 <CU_add_test@plt>
  4031a5:	mov    rax,QWORD PTR [rip+0x65cc]        # 409778 <__bss_start@@Base+0xc8>
  4031ac:	add    rax,0x1
  4031b0:	mov    QWORD PTR [rip+0x65c1],rax        # 409778 <__bss_start@@Base+0xc8>
  4031b7:	mov    rax,QWORD PTR [rbp-0x8]
  4031bb:	mov    rax,QWORD PTR [rax]
  4031be:	mov    rdx,0x40287e
  4031c5:	lea    rsi,[rip+0x35b7]        # 406783 <_IO_stdin_used@@Base+0x783>
  4031cc:	mov    rdi,rax
  4031cf:	call   402230 <CU_add_test@plt>
  4031d4:	mov    rax,QWORD PTR [rip+0x65a5]        # 409780 <__bss_start@@Base+0xd0>
  4031db:	add    rax,0x1
  4031df:	mov    QWORD PTR [rip+0x659a],rax        # 409780 <__bss_start@@Base+0xd0>
  4031e6:	mov    rax,QWORD PTR [rbp-0x8]
  4031ea:	mov    rax,QWORD PTR [rax]
  4031ed:	mov    rdx,0x402c9b
  4031f4:	lea    rsi,[rip+0x35a2]        # 40679d <_IO_stdin_used@@Base+0x79d>
  4031fb:	mov    rdi,rax
  4031fe:	call   402230 <CU_add_test@plt>
  403203:	mov    rax,QWORD PTR [rip+0x657e]        # 409788 <__bss_start@@Base+0xd8>
  40320a:	add    rax,0x1
  40320e:	mov    QWORD PTR [rip+0x6573],rax        # 409788 <__bss_start@@Base+0xd8>
  403215:	nop
  403216:	leave  
  403217:	ret    

0000000000403218 <main@@Base>:
  403218:	push   rbp
  403219:	mov    rbp,rsp
  40321c:	sub    rsp,0x20
  403220:	mov    rax,QWORD PTR fs:0x28
  403229:	mov    QWORD PTR [rbp-0x8],rax
  40322d:	xor    eax,eax
  40322f:	mov    rax,QWORD PTR [rip+0x64aa]        # 4096e0 <__bss_start@@Base+0x30>
  403236:	add    rax,0x1
  40323a:	mov    QWORD PTR [rip+0x649f],rax        # 4096e0 <__bss_start@@Base+0x30>
  403241:	mov    DWORD PTR [rbp-0x14],0x1
  403248:	mov    QWORD PTR [rbp-0x10],0x0
  403250:	call   402060 <CU_initialize_registry@plt>
  403255:	mov    edx,eax
  403257:	mov    rax,QWORD PTR [rip+0x648a]        # 4096e8 <__bss_start@@Base+0x38>
  40325e:	add    rax,0x1
  403262:	mov    QWORD PTR [rip+0x647f],rax        # 4096e8 <__bss_start@@Base+0x38>
  403269:	test   edx,edx
  40326b:	jne    403380 <main@@Base+0x168>
  403271:	mov    rax,QWORD PTR [rip+0x6478]        # 4096f0 <__bss_start@@Base+0x40>
  403278:	add    rax,0x1
  40327c:	mov    QWORD PTR [rip+0x646d],rax        # 4096f0 <__bss_start@@Base+0x40>
  403283:	lea    rax,[rbp-0x10]
  403287:	mov    rdi,rax
  40328a:	call   403109 <add_suites@@Base>
  40328f:	mov    rax,QWORD PTR [rip+0x6462]        # 4096f8 <__bss_start@@Base+0x48>
  403296:	add    rax,0x1
  40329a:	mov    QWORD PTR [rip+0x6457],rax        # 4096f8 <__bss_start@@Base+0x48>
  4032a1:	mov    rax,QWORD PTR [rbp-0x10]
  4032a5:	test   rax,rax
  4032a8:	je     40337b <main@@Base+0x163>
  4032ae:	mov    rax,QWORD PTR [rip+0x644b]        # 409700 <__bss_start@@Base+0x50>
  4032b5:	add    rax,0x1
  4032b9:	mov    QWORD PTR [rip+0x6440],rax        # 409700 <__bss_start@@Base+0x50>
  4032c0:	mov    edi,0x2
  4032c5:	call   402030 <CU_basic_set_mode@plt>
  4032ca:	mov    rax,QWORD PTR [rip+0x6437]        # 409708 <__bss_start@@Base+0x58>
  4032d1:	add    rax,0x1
  4032d5:	mov    QWORD PTR [rip+0x642c],rax        # 409708 <__bss_start@@Base+0x58>
  4032dc:	call   402130 <CU_basic_run_tests@plt>
  4032e1:	mov    rax,QWORD PTR [rip+0x6428]        # 409710 <__bss_start@@Base+0x60>
  4032e8:	add    rax,0x1
  4032ec:	mov    QWORD PTR [rip+0x641d],rax        # 409710 <__bss_start@@Base+0x60>
  4032f3:	mov    edi,0xa
  4032f8:	call   402070 <putchar@plt>
  4032fd:	mov    rax,QWORD PTR [rip+0x6414]        # 409718 <__bss_start@@Base+0x68>
  403304:	add    rax,0x1
  403308:	mov    QWORD PTR [rip+0x6409],rax        # 409718 <__bss_start@@Base+0x68>
  40330f:	call   402280 <CU_get_failure_list@plt>
  403314:	mov    rdx,rax
  403317:	mov    rax,QWORD PTR [rip+0x6402]        # 409720 <__bss_start@@Base+0x70>
  40331e:	add    rax,0x1
  403322:	mov    QWORD PTR [rip+0x63f7],rax        # 409720 <__bss_start@@Base+0x70>
  403329:	mov    rdi,rdx
  40332c:	call   402150 <CU_basic_show_failures@plt>
  403331:	mov    rax,QWORD PTR [rip+0x63f0]        # 409728 <__bss_start@@Base+0x78>
  403338:	add    rax,0x1
  40333c:	mov    QWORD PTR [rip+0x63e5],rax        # 409728 <__bss_start@@Base+0x78>
  403343:	lea    rdi,[rip+0x346d]        # 4067b7 <_IO_stdin_used@@Base+0x7b7>
  40334a:	call   4020d0 <puts@plt>
  40334f:	mov    rax,QWORD PTR [rip+0x63da]        # 409730 <__bss_start@@Base+0x80>
  403356:	add    rax,0x1
  40335a:	mov    QWORD PTR [rip+0x63cf],rax        # 409730 <__bss_start@@Base+0x80>
  403361:	call   4020e0 <CU_get_number_of_tests_failed@plt>
  403366:	mov    DWORD PTR [rbp-0x14],eax
  403369:	mov    rax,QWORD PTR [rip+0x63c8]        # 409738 <__bss_start@@Base+0x88>
  403370:	add    rax,0x1
  403374:	mov    QWORD PTR [rip+0x63bd],rax        # 409738 <__bss_start@@Base+0x88>
  40337b:	call   402100 <CU_cleanup_registry@plt>
  403380:	cmp    DWORD PTR [rbp-0x14],0x0
  403384:	je     40338d <main@@Base+0x175>
  403386:	mov    edx,0x1
  40338b:	jmp    4033a4 <main@@Base+0x18c>
  40338d:	mov    edx,0x0
  403392:	mov    rax,QWORD PTR [rip+0x63a7]        # 409740 <__bss_start@@Base+0x90>
  403399:	add    rax,0x1
  40339d:	mov    QWORD PTR [rip+0x639c],rax        # 409740 <__bss_start@@Base+0x90>
  4033a4:	mov    rax,QWORD PTR [rip+0x639d]        # 409748 <__bss_start@@Base+0x98>
  4033ab:	add    rax,0x1
  4033af:	mov    QWORD PTR [rip+0x6392],rax        # 409748 <__bss_start@@Base+0x98>
  4033b6:	mov    eax,edx
  4033b8:	mov    rcx,QWORD PTR [rbp-0x8]
  4033bc:	xor    rcx,QWORD PTR fs:0x28
  4033c5:	je     4033cc <main@@Base+0x1b4>
  4033c7:	call   402180 <__stack_chk_fail@plt>
  4033cc:	leave  
  4033cd:	ret    
  4033ce:	push   rbp
  4033cf:	mov    rbp,rsp
  4033d2:	lea    rdi,[rip+0x5fe7]        # 4093c0 <__data_start@@Base+0x260>
  4033d9:	call   4059c0 <__gcov_sort_n_vals@@Base+0x1640>
  4033de:	pop    rbp
  4033df:	ret    

00000000004033e0 <b64_get_encoded_buffer_size@@Base>:
  4033e0:	push   rbp
  4033e1:	mov    rbp,rsp
  4033e4:	mov    QWORD PTR [rbp-0x8],rdi
  4033e8:	mov    rax,QWORD PTR [rbp-0x8]
  4033ec:	add    rax,0x2
  4033f0:	movabs rdx,0xaaaaaaaaaaaaaaab
  4033fa:	mul    rdx
  4033fd:	mov    rax,rdx
  403400:	shr    rax,1
  403403:	lea    rdx,[rax*4+0x0]
  40340b:	mov    rax,QWORD PTR [rip+0x6636]        # 409a48 <__bss_start@@Base+0x398>
  403412:	add    rax,0x1
  403416:	mov    QWORD PTR [rip+0x662b],rax        # 409a48 <__bss_start@@Base+0x398>
  40341d:	mov    rax,rdx
  403420:	pop    rbp
  403421:	ret    

0000000000403422 <b64_encode@@Base>:
  403422:	push   rbp
  403423:	mov    rbp,rsp
  403426:	mov    QWORD PTR [rbp-0x28],rdi
  40342a:	mov    QWORD PTR [rbp-0x30],rsi
  40342e:	mov    QWORD PTR [rbp-0x38],rdx
  403432:	mov    rax,QWORD PTR [rbp-0x30]
  403436:	mov    QWORD PTR [rbp-0x8],rax
  40343a:	jmp    4035b0 <b64_encode@@Base+0x18e>
  40343f:	mov    rax,QWORD PTR [rip+0x65f2]        # 409a38 <__bss_start@@Base+0x388>
  403446:	add    rax,0x1
  40344a:	mov    QWORD PTR [rip+0x65e7],rax        # 409a38 <__bss_start@@Base+0x388>
  403451:	mov    eax,0x3
  403456:	cmp    QWORD PTR [rbp-0x8],0x3
  40345b:	cmovbe rax,QWORD PTR [rbp-0x8]
  403460:	mov    DWORD PTR [rbp-0x10],eax
  403463:	mov    eax,DWORD PTR [rbp-0x10]
  403466:	cdqe   
  403468:	sub    QWORD PTR [rbp-0x8],rax
  40346c:	mov    DWORD PTR [rbp-0x14],0x0
  403473:	mov    DWORD PTR [rbp-0x18],0x0
  40347a:	jmp    4034b1 <b64_encode@@Base+0x8f>
  40347c:	mov    rax,QWORD PTR [rip+0x657d]        # 409a00 <__bss_start@@Base+0x350>
  403483:	add    rax,0x1
  403487:	mov    QWORD PTR [rip+0x6572],rax        # 409a00 <__bss_start@@Base+0x350>
  40348e:	mov    eax,DWORD PTR [rbp-0x14]
  403491:	shl    eax,0x8
  403494:	mov    ecx,eax
  403496:	mov    rax,QWORD PTR [rbp-0x28]
  40349a:	lea    rdx,[rax+0x1]
  40349e:	mov    QWORD PTR [rbp-0x28],rdx
  4034a2:	movzx  eax,BYTE PTR [rax]
  4034a5:	movzx  eax,al
  4034a8:	or     eax,ecx
  4034aa:	mov    DWORD PTR [rbp-0x14],eax
  4034ad:	add    DWORD PTR [rbp-0x18],0x1
  4034b1:	cmp    DWORD PTR [rbp-0x18],0x2
  4034b5:	jle    40347c <b64_encode@@Base+0x5a>
  4034b7:	mov    DWORD PTR [rbp-0x18],0x4
  4034be:	jmp    40359d <b64_encode@@Base+0x17b>
  4034c3:	mov    rax,QWORD PTR [rip+0x6566]        # 409a30 <__bss_start@@Base+0x380>
  4034ca:	add    rax,0x1
  4034ce:	mov    QWORD PTR [rip+0x655b],rax        # 409a30 <__bss_start@@Base+0x380>
  4034d5:	mov    eax,DWORD PTR [rbp-0x14]
  4034d8:	and    eax,0x3f
  4034db:	mov    DWORD PTR [rbp-0xc],eax
  4034de:	mov    eax,DWORD PTR [rbp-0x18]
  4034e1:	movsxd rdx,eax
  4034e4:	mov    rax,QWORD PTR [rbp-0x38]
  4034e8:	add    rdx,rax
  4034eb:	mov    eax,DWORD PTR [rbp-0x18]
  4034ee:	cmp    eax,DWORD PTR [rbp-0x10]
  4034f1:	jg     403580 <b64_encode@@Base+0x15e>
  4034f7:	cmp    DWORD PTR [rbp-0xc],0x19
  4034fb:	jg     403508 <b64_encode@@Base+0xe6>
  4034fd:	mov    eax,DWORD PTR [rbp-0xc]
  403500:	add    eax,0x41
  403503:	jmp    403597 <b64_encode@@Base+0x175>
  403508:	cmp    DWORD PTR [rbp-0xc],0x33
  40350c:	jg     403516 <b64_encode@@Base+0xf4>
  40350e:	mov    eax,DWORD PTR [rbp-0xc]
  403511:	add    eax,0x47
  403514:	jmp    40356c <b64_encode@@Base+0x14a>
  403516:	cmp    DWORD PTR [rbp-0xc],0x3d
  40351a:	jg     403524 <b64_encode@@Base+0x102>
  40351c:	mov    eax,DWORD PTR [rbp-0xc]
  40351f:	sub    eax,0x4
  403522:	jmp    40355a <b64_encode@@Base+0x138>
  403524:	cmp    DWORD PTR [rbp-0xc],0x3e
  403528:	jne    403531 <b64_encode@@Base+0x10f>
  40352a:	mov    eax,0x2b
  40352f:	jmp    403548 <b64_encode@@Base+0x126>
  403531:	mov    eax,0x2f
  403536:	mov    rcx,QWORD PTR [rip+0x64cb]        # 409a08 <__bss_start@@Base+0x358>
  40353d:	add    rcx,0x1
  403541:	mov    QWORD PTR [rip+0x64c0],rcx        # 409a08 <__bss_start@@Base+0x358>
  403548:	mov    rcx,QWORD PTR [rip+0x64c1]        # 409a10 <__bss_start@@Base+0x360>
  40354f:	add    rcx,0x1
  403553:	mov    QWORD PTR [rip+0x64b6],rcx        # 409a10 <__bss_start@@Base+0x360>
  40355a:	mov    rcx,QWORD PTR [rip+0x64b7]        # 409a18 <__bss_start@@Base+0x368>
  403561:	add    rcx,0x1
  403565:	mov    QWORD PTR [rip+0x64ac],rcx        # 409a18 <__bss_start@@Base+0x368>
  40356c:	mov    rcx,QWORD PTR [rip+0x64ad]        # 409a20 <__bss_start@@Base+0x370>
  403573:	add    rcx,0x1
  403577:	mov    QWORD PTR [rip+0x64a2],rcx        # 409a20 <__bss_start@@Base+0x370>
  40357e:	jmp    403597 <b64_encode@@Base+0x175>
  403580:	mov    eax,0x3d
  403585:	mov    rcx,QWORD PTR [rip+0x649c]        # 409a28 <__bss_start@@Base+0x378>
  40358c:	add    rcx,0x1
  403590:	mov    QWORD PTR [rip+0x6491],rcx        # 409a28 <__bss_start@@Base+0x378>
  403597:	mov    BYTE PTR [rdx],al
  403599:	shr    DWORD PTR [rbp-0x14],0x6
  40359d:	sub    DWORD PTR [rbp-0x18],0x1
  4035a1:	cmp    DWORD PTR [rbp-0x18],0x0
  4035a5:	jns    4034c3 <b64_encode@@Base+0xa1>
  4035ab:	add    QWORD PTR [rbp-0x38],0x4
  4035b0:	cmp    QWORD PTR [rbp-0x8],0x0
  4035b5:	jne    40343f <b64_encode@@Base+0x1d>
  4035bb:	mov    rax,QWORD PTR [rip+0x647e]        # 409a40 <__bss_start@@Base+0x390>
  4035c2:	add    rax,0x1
  4035c6:	mov    QWORD PTR [rip+0x6473],rax        # 409a40 <__bss_start@@Base+0x390>
  4035cd:	nop
  4035ce:	pop    rbp
  4035cf:	ret    
  4035d0:	push   rbp
  4035d1:	mov    rbp,rsp
  4035d4:	lea    rdi,[rip+0x5ee5]        # 4094c0 <__data_start@@Base+0x360>
  4035db:	call   4059c0 <__gcov_sort_n_vals@@Base+0x1640>
  4035e0:	pop    rbp
  4035e1:	ret    
  4035e2:	push   rbp
  4035e3:	mov    rbp,rsp
  4035e6:	mov    QWORD PTR [rbp-0x8],rdi
  4035ea:	mov    QWORD PTR [rbp-0x10],rsi
  4035ee:	mov    rax,QWORD PTR [rip+0x64f3]        # 409ae8 <__bss_start@@Base+0x438>
  4035f5:	add    rax,0x1
  4035f9:	mov    QWORD PTR [rip+0x64e8],rax        # 409ae8 <__bss_start@@Base+0x438>
  403600:	mov    rax,QWORD PTR [rbp-0x8]
  403604:	movzx  eax,BYTE PTR [rax]
  403607:	movzx  eax,al
  40360a:	shl    eax,0x2
  40360d:	mov    edx,eax
  40360f:	mov    rax,QWORD PTR [rbp-0x8]
  403613:	add    rax,0x1
  403617:	movzx  eax,BYTE PTR [rax]
  40361a:	shr    al,0x4
  40361d:	or     eax,edx
  40361f:	mov    edx,eax
  403621:	mov    rax,QWORD PTR [rbp-0x10]
  403625:	mov    BYTE PTR [rax],dl
  403627:	mov    rax,QWORD PTR [rbp-0x10]
  40362b:	add    rax,0x1
  40362f:	mov    rdx,QWORD PTR [rbp-0x8]
  403633:	add    rdx,0x1
  403637:	movzx  edx,BYTE PTR [rdx]
  40363a:	movzx  edx,dl
  40363d:	shl    edx,0x4
  403640:	mov    ecx,edx
  403642:	mov    rdx,QWORD PTR [rbp-0x8]
  403646:	add    rdx,0x2
  40364a:	movzx  edx,BYTE PTR [rdx]
  40364d:	shr    dl,0x2
  403650:	or     edx,ecx
  403652:	mov    BYTE PTR [rax],dl
  403654:	mov    rax,QWORD PTR [rbp-0x10]
  403658:	add    rax,0x2
  40365c:	mov    rdx,QWORD PTR [rbp-0x8]
  403660:	add    rdx,0x2
  403664:	movzx  edx,BYTE PTR [rdx]
  403667:	movzx  edx,dl
  40366a:	shl    edx,0x6
  40366d:	mov    ecx,edx
  40366f:	and    ecx,0xffffffc0
  403672:	mov    rdx,QWORD PTR [rbp-0x8]
  403676:	add    rdx,0x3
  40367a:	movzx  edx,BYTE PTR [rdx]
  40367d:	or     edx,ecx
  40367f:	mov    BYTE PTR [rax],dl
  403681:	nop
  403682:	pop    rbp
  403683:	ret    

0000000000403684 <b64_get_decoded_buffer_size@@Base>:
  403684:	push   rbp
  403685:	mov    rbp,rsp
  403688:	mov    QWORD PTR [rbp-0x18],rdi
  40368c:	cmp    QWORD PTR [rbp-0x18],0x0
  403691:	je     4036b2 <b64_get_decoded_buffer_size@@Base+0x2e>
  403693:	mov    rax,QWORD PTR [rip+0x6436]        # 409ad0 <__bss_start@@Base+0x420>
  40369a:	add    rax,0x1
  40369e:	mov    QWORD PTR [rip+0x642b],rax        # 409ad0 <__bss_start@@Base+0x420>
  4036a5:	mov    rax,QWORD PTR [rbp-0x18]
  4036a9:	shr    rax,0x2
  4036ad:	test   rax,rax
  4036b0:	jne    4036cb <b64_get_decoded_buffer_size@@Base+0x47>
  4036b2:	mov    eax,0x0
  4036b7:	mov    rdx,QWORD PTR [rip+0x641a]        # 409ad8 <__bss_start@@Base+0x428>
  4036be:	add    rdx,0x1
  4036c2:	mov    QWORD PTR [rip+0x640f],rdx        # 409ad8 <__bss_start@@Base+0x428>
  4036c9:	jmp    4036f9 <b64_get_decoded_buffer_size@@Base+0x75>
  4036cb:	mov    rax,QWORD PTR [rbp-0x18]
  4036cf:	shr    rax,0x2
  4036d3:	mov    rdx,rax
  4036d6:	mov    rax,rdx
  4036d9:	add    rax,rax
  4036dc:	add    rax,rdx
  4036df:	mov    QWORD PTR [rbp-0x8],rax
  4036e3:	mov    rax,QWORD PTR [rbp-0x8]
  4036e7:	mov    rdx,QWORD PTR [rip+0x63f2]        # 409ae0 <__bss_start@@Base+0x430>
  4036ee:	add    rdx,0x1
  4036f2:	mov    QWORD PTR [rip+0x63e7],rdx        # 409ae0 <__bss_start@@Base+0x430>
  4036f9:	pop    rbp
  4036fa:	ret    

00000000004036fb <b64_decode@@Base>:
  4036fb:	push   rbp
  4036fc:	mov    rbp,rsp
  4036ff:	sub    rsp,0x50
  403703:	mov    QWORD PTR [rbp-0x38],rdi
  403707:	mov    QWORD PTR [rbp-0x40],rsi
  40370b:	mov    QWORD PTR [rbp-0x48],rdx
  40370f:	mov    rax,QWORD PTR fs:0x28
  403718:	mov    QWORD PTR [rbp-0x8],rax
  40371c:	xor    eax,eax
  40371e:	mov    rax,QWORD PTR [rbp-0x48]
  403722:	mov    QWORD PTR [rbp-0x20],rax
  403726:	mov    QWORD PTR [rbp-0x18],0x0
  40372e:	jmp    40391f <b64_decode@@Base+0x224>
  403733:	mov    rax,QWORD PTR [rip+0x6386]        # 409ac0 <__bss_start@@Base+0x410>
  40373a:	add    rax,0x1
  40373e:	mov    QWORD PTR [rip+0x637b],rax        # 409ac0 <__bss_start@@Base+0x410>
  403745:	mov    DWORD PTR [rbp-0x28],0x0
  40374c:	mov    DWORD PTR [rbp-0x2c],0x0
  403753:	jmp    4038af <b64_decode@@Base+0x1b4>
  403758:	mov    rax,QWORD PTR [rip+0x6349]        # 409aa8 <__bss_start@@Base+0x3f8>
  40375f:	add    rax,0x1
  403763:	mov    QWORD PTR [rip+0x633e],rax        # 409aa8 <__bss_start@@Base+0x3f8>
  40376a:	mov    BYTE PTR [rbp-0x2d],0x0
  40376e:	jmp    403819 <b64_decode@@Base+0x11e>
  403773:	mov    rax,QWORD PTR [rip+0x6306]        # 409a80 <__bss_start@@Base+0x3d0>
  40377a:	add    rax,0x1
  40377e:	mov    QWORD PTR [rip+0x62fb],rax        # 409a80 <__bss_start@@Base+0x3d0>
  403785:	mov    rax,QWORD PTR [rbp-0x18]
  403789:	lea    rdx,[rax+0x1]
  40378d:	mov    QWORD PTR [rbp-0x18],rdx
  403791:	mov    rdx,QWORD PTR [rbp-0x38]
  403795:	add    rax,rdx
  403798:	movzx  eax,BYTE PTR [rax]
  40379b:	mov    BYTE PTR [rbp-0x2d],al
  40379e:	movzx  eax,BYTE PTR [rbp-0x2d]
  4037a2:	sub    eax,0x2b
  4037a5:	mov    DWORD PTR [rbp-0x24],eax
  4037a8:	cmp    DWORD PTR [rbp-0x24],0x4f
  4037ac:	ja     4037be <b64_decode@@Base+0xc3>
  4037ae:	mov    edx,DWORD PTR [rbp-0x24]
  4037b1:	lea    rax,[rip+0x3108]        # 4068c0 <_IO_stdin_used@@Base+0x8c0>
  4037b8:	movzx  eax,BYTE PTR [rdx+rax*1]
  4037bc:	jmp    4037d5 <b64_decode@@Base+0xda>
  4037be:	mov    eax,0x0
  4037c3:	mov    rdx,QWORD PTR [rip+0x6296]        # 409a60 <__bss_start@@Base+0x3b0>
  4037ca:	add    rdx,0x1
  4037ce:	mov    QWORD PTR [rip+0x628b],rdx        # 409a60 <__bss_start@@Base+0x3b0>
  4037d5:	mov    BYTE PTR [rbp-0x2d],al
  4037d8:	cmp    BYTE PTR [rbp-0x2d],0x0
  4037dc:	je     403819 <b64_decode@@Base+0x11e>
  4037de:	cmp    BYTE PTR [rbp-0x2d],0x24
  4037e2:	je     4037ed <b64_decode@@Base+0xf2>
  4037e4:	movzx  eax,BYTE PTR [rbp-0x2d]
  4037e8:	sub    eax,0x3d
  4037eb:	jmp    403804 <b64_decode@@Base+0x109>
  4037ed:	mov    eax,0x0
  4037f2:	mov    rdx,QWORD PTR [rip+0x626f]        # 409a68 <__bss_start@@Base+0x3b8>
  4037f9:	add    rdx,0x1
  4037fd:	mov    QWORD PTR [rip+0x6264],rdx        # 409a68 <__bss_start@@Base+0x3b8>
  403804:	mov    BYTE PTR [rbp-0x2d],al
  403807:	mov    rax,QWORD PTR [rip+0x6262]        # 409a70 <__bss_start@@Base+0x3c0>
  40380e:	add    rax,0x1
  403812:	mov    QWORD PTR [rip+0x6257],rax        # 409a70 <__bss_start@@Base+0x3c0>
  403819:	mov    rax,QWORD PTR [rbp-0x18]
  40381d:	cmp    rax,QWORD PTR [rbp-0x40]
  403821:	jae    40383f <b64_decode@@Base+0x144>
  403823:	mov    rax,QWORD PTR [rip+0x624e]        # 409a78 <__bss_start@@Base+0x3c8>
  40382a:	add    rax,0x1
  40382e:	mov    QWORD PTR [rip+0x6243],rax        # 409a78 <__bss_start@@Base+0x3c8>
  403835:	cmp    BYTE PTR [rbp-0x2d],0x0
  403839:	je     403773 <b64_decode@@Base+0x78>
  40383f:	mov    rax,QWORD PTR [rbp-0x18]
  403843:	cmp    rax,QWORD PTR [rbp-0x40]
  403847:	jb     403861 <b64_decode@@Base+0x166>
  403849:	mov    rax,QWORD PTR [rip+0x6238]        # 409a88 <__bss_start@@Base+0x3d8>
  403850:	add    rax,0x1
  403854:	mov    QWORD PTR [rip+0x622d],rax        # 409a88 <__bss_start@@Base+0x3d8>
  40385b:	cmp    BYTE PTR [rbp-0x2d],0x0
  40385f:	je     40388f <b64_decode@@Base+0x194>
  403861:	add    DWORD PTR [rbp-0x28],0x1
  403865:	cmp    BYTE PTR [rbp-0x2d],0x0
  403869:	je     4038ab <b64_decode@@Base+0x1b0>
  40386b:	movzx  eax,BYTE PTR [rbp-0x2d]
  40386f:	lea    edx,[rax-0x1]
  403872:	mov    eax,DWORD PTR [rbp-0x2c]
  403875:	cdqe   
  403877:	mov    BYTE PTR [rbp+rax*1-0xc],dl
  40387b:	mov    rax,QWORD PTR [rip+0x620e]        # 409a90 <__bss_start@@Base+0x3e0>
  403882:	add    rax,0x1
  403886:	mov    QWORD PTR [rip+0x6203],rax        # 409a90 <__bss_start@@Base+0x3e0>
  40388d:	jmp    4038ab <b64_decode@@Base+0x1b0>
  40388f:	mov    eax,DWORD PTR [rbp-0x2c]
  403892:	cdqe   
  403894:	mov    BYTE PTR [rbp+rax*1-0xc],0x0
  403899:	mov    rax,QWORD PTR [rip+0x61f8]        # 409a98 <__bss_start@@Base+0x3e8>
  4038a0:	add    rax,0x1
  4038a4:	mov    QWORD PTR [rip+0x61ed],rax        # 409a98 <__bss_start@@Base+0x3e8>
  4038ab:	add    DWORD PTR [rbp-0x2c],0x1
  4038af:	cmp    DWORD PTR [rbp-0x2c],0x3
  4038b3:	jg     4038d5 <b64_decode@@Base+0x1da>
  4038b5:	mov    rax,QWORD PTR [rip+0x61e4]        # 409aa0 <__bss_start@@Base+0x3f0>
  4038bc:	add    rax,0x1
  4038c0:	mov    QWORD PTR [rip+0x61d9],rax        # 409aa0 <__bss_start@@Base+0x3f0>
  4038c7:	mov    rax,QWORD PTR [rbp-0x18]
  4038cb:	cmp    rax,QWORD PTR [rbp-0x40]
  4038cf:	jb     403758 <b64_decode@@Base+0x5d>
  4038d5:	cmp    DWORD PTR [rbp-0x28],0x0
  4038d9:	je     40391f <b64_decode@@Base+0x224>
  4038db:	mov    rax,QWORD PTR [rip+0x61ce]        # 409ab0 <__bss_start@@Base+0x400>
  4038e2:	add    rax,0x1
  4038e6:	mov    QWORD PTR [rip+0x61c3],rax        # 409ab0 <__bss_start@@Base+0x400>
  4038ed:	mov    rdx,QWORD PTR [rbp-0x20]
  4038f1:	lea    rax,[rbp-0xc]
  4038f5:	mov    rsi,rdx
  4038f8:	mov    rdi,rax
  4038fb:	call   4035e2 <b64_encode@@Base+0x1c0>
  403900:	mov    eax,DWORD PTR [rbp-0x28]
  403903:	cdqe   
  403905:	sub    rax,0x1
  403909:	add    QWORD PTR [rbp-0x20],rax
  40390d:	mov    rax,QWORD PTR [rip+0x61a4]        # 409ab8 <__bss_start@@Base+0x408>
  403914:	add    rax,0x1
  403918:	mov    QWORD PTR [rip+0x6199],rax        # 409ab8 <__bss_start@@Base+0x408>
  40391f:	mov    rax,QWORD PTR [rbp-0x18]
  403923:	cmp    rax,QWORD PTR [rbp-0x40]
  403927:	jb     403733 <b64_decode@@Base+0x38>
  40392d:	mov    rdx,QWORD PTR [rbp-0x20]
  403931:	mov    rax,QWORD PTR [rbp-0x48]
  403935:	sub    rdx,rax
  403938:	mov    rax,rdx
  40393b:	mov    rdx,rax
  40393e:	mov    rax,QWORD PTR [rip+0x6183]        # 409ac8 <__bss_start@@Base+0x418>
  403945:	add    rax,0x1
  403949:	mov    QWORD PTR [rip+0x6178],rax        # 409ac8 <__bss_start@@Base+0x418>
  403950:	mov    rax,rdx
  403953:	mov    rcx,QWORD PTR [rbp-0x8]
  403957:	xor    rcx,QWORD PTR fs:0x28
  403960:	je     403967 <b64_decode@@Base+0x26c>
  403962:	call   402180 <__stack_chk_fail@plt>
  403967:	leave  
  403968:	ret    
  403969:	push   rbp
  40396a:	mov    rbp,rsp
  40396d:	lea    rdi,[rip+0x5cac]        # 409620 <__data_start@@Base+0x4c0>
  403974:	call   4059c0 <__gcov_sort_n_vals@@Base+0x1640>
  403979:	pop    rbp
  40397a:	ret    
  40397b:	nop    DWORD PTR [rax+rax*1+0x0]
  403980:	test   esi,esi
  403982:	je     4039af <b64_decode@@Base+0x2b4>
  403984:	lea    eax,[rsi-0x1]
  403987:	push   rbp
  403988:	push   rbx
  403989:	mov    rbx,rdi
  40398c:	lea    rbp,[rdi+rax*8+0x8]
  403991:	sub    rsp,0x8
  403995:	nop    DWORD PTR [rax]
  403998:	call   404070 <b64_decode@@Base+0x975>
  40399d:	add    QWORD PTR [rbx],rax
  4039a0:	add    rbx,0x8
  4039a4:	cmp    rbx,rbp
  4039a7:	jne    403998 <b64_decode@@Base+0x29d>
  4039a9:	add    rsp,0x8
  4039ad:	pop    rbx
  4039ae:	pop    rbp
  4039af:	repz ret 
  4039b1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4039bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4039c0:	push   rbp
  4039c1:	push   rbx
  4039c2:	lea    esi,[rdi*4+0x0]
  4039c9:	mov    ebp,edi
  4039cb:	mov    edx,0x1
  4039d0:	sub    rsp,0x8
  4039d4:	mov    rbx,0x409b20
  4039db:	mov    rcx,QWORD PTR [rbx]
  4039de:	lea    rdi,[rbx+0x20]
  4039e2:	call   402290 <fwrite@plt>
  4039e7:	cmp    rax,0x1
  4039eb:	je     4039f4 <b64_decode@@Base+0x2f9>
  4039ed:	mov    DWORD PTR [rbx+0x18],0x1
  4039f4:	add    DWORD PTR [rbx+0x8],ebp
  4039f7:	sub    DWORD PTR [rbx+0xc],ebp
  4039fa:	add    rsp,0x8
  4039fe:	pop    rbx
  4039ff:	pop    rbp
  403a00:	ret    
  403a01:	nop    DWORD PTR [rax+rax*1+0x0]
  403a06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403a10:	push   rbp
  403a11:	push   rbx
  403a12:	mov    ebp,edi
  403a14:	sub    rsp,0x8
  403a18:	mov    rbx,0x409b20
  403a1f:	mov    eax,DWORD PTR [rbx+0xc]
  403a22:	cmp    eax,0x3ff
  403a27:	ja     403a40 <b64_decode@@Base+0x345>
  403a29:	add    ebp,eax
  403a2b:	lea    rax,[rbx+rax*4+0x20]
  403a30:	mov    DWORD PTR [rbx+0xc],ebp
  403a33:	add    rsp,0x8
  403a37:	pop    rbx
  403a38:	pop    rbp
  403a39:	ret    
  403a3a:	nop    WORD PTR [rax+rax*1+0x0]
  403a40:	mov    edi,0x400
  403a45:	call   4039c0 <b64_decode@@Base+0x2c5>
  403a4a:	mov    eax,DWORD PTR [rbx+0xc]
  403a4d:	test   eax,eax
  403a4f:	je     403a29 <b64_decode@@Base+0x32e>
  403a51:	mov    edx,DWORD PTR [rbx+0x1020]
  403a57:	mov    DWORD PTR [rbx+0x20],edx
  403a5a:	jmp    403a29 <b64_decode@@Base+0x32e>
  403a5c:	nop    DWORD PTR [rax+0x0]
  403a60:	push   rbp
  403a61:	push   rbx
  403a62:	mov    ebp,edi
  403a64:	sub    rsp,0x8
  403a68:	mov    rbx,0x409b20
  403a6f:	mov    edi,DWORD PTR [rbx+0xc]
  403a72:	mov    eax,DWORD PTR [rbx+0x10]
  403a75:	sub    eax,edi
  403a77:	cmp    eax,ebp
  403a79:	jae    403abb <b64_decode@@Base+0x3c0>
  403a7b:	add    DWORD PTR [rbx+0x8],edi
  403a7e:	test   eax,eax
  403a80:	je     403a89 <b64_decode@@Base+0x38e>
  403a82:	mov    edx,DWORD PTR [rbx+rdi*4+0x20]
  403a86:	mov    DWORD PTR [rbx+0x20],edx
  403a89:	mov    rcx,QWORD PTR [rbx]
  403a8c:	lea    rdi,[rbx+rax*4+0x20]
  403a91:	mov    edx,0x1000
  403a96:	mov    esi,0x1
  403a9b:	mov    DWORD PTR [rbx+0xc],0x0
  403aa2:	mov    DWORD PTR [rbx+0x10],eax
  403aa5:	call   4020f0 <fread@plt>
  403aaa:	shr    rax,0x2
  403aae:	add    eax,DWORD PTR [rbx+0x10]
  403ab1:	cmp    ebp,eax
  403ab3:	mov    DWORD PTR [rbx+0x10],eax
  403ab6:	ja     403ad0 <b64_decode@@Base+0x3d5>
  403ab8:	mov    edi,DWORD PTR [rbx+0xc]
  403abb:	mov    eax,edi
  403abd:	add    edi,ebp
  403abf:	lea    rax,[rbx+rax*4+0x20]
  403ac4:	mov    DWORD PTR [rbx+0xc],edi
  403ac7:	add    rsp,0x8
  403acb:	pop    rbx
  403acc:	pop    rbp
  403acd:	ret    
  403ace:	xchg   ax,ax
  403ad0:	sub    ebp,eax
  403ad2:	mov    DWORD PTR [rbx+0x10],0x0
  403ad9:	add    DWORD PTR [rbx+0x14],ebp
  403adc:	xor    eax,eax
  403ade:	jmp    403ac7 <b64_decode@@Base+0x3cc>
  403ae0:	sub    rsp,0xd8
  403ae7:	test   al,al
  403ae9:	mov    QWORD PTR [rsp+0x28],rsi
  403aee:	mov    QWORD PTR [rsp+0x30],rdx
  403af3:	mov    QWORD PTR [rsp+0x38],rcx
  403af8:	mov    QWORD PTR [rsp+0x40],r8
  403afd:	mov    QWORD PTR [rsp+0x48],r9
  403b02:	je     403b3b <b64_decode@@Base+0x440>
  403b04:	movaps XMMWORD PTR [rsp+0x50],xmm0
  403b09:	movaps XMMWORD PTR [rsp+0x60],xmm1
  403b0e:	movaps XMMWORD PTR [rsp+0x70],xmm2
  403b13:	movaps XMMWORD PTR [rsp+0x80],xmm3
  403b1b:	movaps XMMWORD PTR [rsp+0x90],xmm4
  403b23:	movaps XMMWORD PTR [rsp+0xa0],xmm5
  403b2b:	movaps XMMWORD PTR [rsp+0xb0],xmm6
  403b33:	movaps XMMWORD PTR [rsp+0xc0],xmm7
  403b3b:	lea    rax,[rsp+0xe0]
  403b43:	mov    rdx,rdi
  403b46:	lea    rcx,[rsp+0x8]
  403b4b:	mov    esi,0x1
  403b50:	mov    QWORD PTR [rsp+0x10],rax
  403b55:	lea    rax,[rsp+0x20]
  403b5a:	mov    DWORD PTR [rsp+0x8],0x8
  403b62:	mov    DWORD PTR [rsp+0xc],0x30
  403b6a:	mov    QWORD PTR [rsp+0x18],rax
  403b6f:	mov    rax,QWORD PTR [rip+0x5482]        # 408ff8 <stderr@GLIBC_2.2.5>
  403b76:	mov    rdi,QWORD PTR [rax]
  403b79:	call   402080 <__vfprintf_chk@plt>
  403b7e:	add    rsp,0xd8
  403b85:	ret    
  403b86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403b90:	test   rsi,rsi
  403b93:	push   r14
  403b95:	push   r13
  403b97:	push   r12
  403b99:	push   rbp
  403b9a:	push   rbx
  403b9b:	je     403bf2 <b64_decode@@Base+0x4f7>
  403b9d:	test   edx,edx
  403b9f:	mov    rbp,rsi
  403ba2:	mov    r13,QWORD PTR [rsi]
  403ba5:	je     403bde <b64_decode@@Base+0x4e3>
  403ba7:	lea    eax,[rdx-0x1]
  403baa:	lea    r14,[rdi+0x20]
  403bae:	lea    r12,[rdi+rax*8+0x28]
  403bb3:	xor    eax,eax
  403bb5:	nop    DWORD PTR [rax]
  403bb8:	cmp    QWORD PTR [r14],0x0
  403bbc:	je     403bd5 <b64_decode@@Base+0x4da>
  403bbe:	lea    ebx,[rax+0x1]
  403bc1:	add    rax,0x2
  403bc5:	shl    rax,0x4
  403bc9:	mov    rdi,QWORD PTR [rbp+rax*1+0x10]
  403bce:	call   402050 <free@plt>
  403bd3:	mov    eax,ebx
  403bd5:	add    r14,0x8
  403bd9:	cmp    r14,r12
  403bdc:	jne    403bb8 <b64_decode@@Base+0x4bd>
  403bde:	mov    rdi,rbp
  403be1:	call   402050 <free@plt>
  403be6:	pop    rbx
  403be7:	mov    rax,r13
  403bea:	pop    rbp
  403beb:	pop    r12
  403bed:	pop    r13
  403bef:	pop    r14
  403bf1:	ret    
  403bf2:	xor    r13d,r13d
  403bf5:	jmp    403be6 <b64_decode@@Base+0x4eb>
  403bf7:	nop    WORD PTR [rax+rax*1+0x0]
  403c00:	cmp    esi,0x3630342a
  403c06:	je     403c70 <b64_decode@@Base+0x575>
  403c08:	mov    rax,rdx
  403c0b:	mov    edx,esi
  403c0d:	sub    rsp,0x18
  403c11:	shr    edx,0x18
  403c14:	mov    BYTE PTR [rsp+0xb],sil
  403c19:	mov    BYTE PTR [rsp+0xc],0x36
  403c1e:	mov    BYTE PTR [rsp+0x8],dl
  403c22:	mov    edx,esi
  403c24:	mov    BYTE PTR [rsp+0xd],0x30
  403c29:	shr    edx,0x10
  403c2c:	mov    BYTE PTR [rsp+0xe],0x34
  403c31:	mov    BYTE PTR [rsp+0xf],0x2a
  403c36:	mov    BYTE PTR [rsp+0x9],dl
  403c3a:	mov    edx,esi
  403c3c:	shr    edx,0x8
  403c3f:	test   rax,rax
  403c42:	mov    BYTE PTR [rsp+0xa],dl
  403c46:	je     403c80 <b64_decode@@Base+0x585>
  403c48:	lea    rcx,[rsp+0x8]
  403c4d:	lea    rdx,[rsp+0xc]
  403c52:	lea    rdi,[rip+0x2d47]        # 4069a0 <_IO_stdin_used@@Base+0x9a0>
  403c59:	mov    rsi,rax
  403c5c:	xor    eax,eax
  403c5e:	call   403ae0 <b64_decode@@Base+0x3e5>
  403c63:	xor    eax,eax
  403c65:	add    rsp,0x18
  403c69:	ret    
  403c6a:	nop    WORD PTR [rax+rax*1+0x0]
  403c70:	mov    eax,0x1
  403c75:	ret    
  403c76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403c80:	mov    rax,QWORD PTR [rdi]
  403c83:	jmp    403c48 <b64_decode@@Base+0x54d>
  403c85:	nop
  403c86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403c90:	mov    rax,0x409b20
  403c97:	xor    edx,edx
  403c99:	xor    esi,esi
  403c9b:	mov    rdi,QWORD PTR [rax]
  403c9e:	mov    DWORD PTR [rax+0x1c],0xffffffff
  403ca5:	mov    DWORD PTR [rax+0x8],0x0
  403cac:	mov    DWORD PTR [rax+0xc],0x0
  403cb3:	jmp    402220 <fseek@plt>
  403cb8:	nop    DWORD PTR [rax+rax*1+0x0]
  403cc0:	push   r12
  403cc2:	push   rbp
  403cc3:	xor    eax,eax
  403cc5:	push   rbx
  403cc6:	mov    rbp,rdi
  403cc9:	sub    rsp,0xb0
  403cd0:	mov    WORD PTR [rsp+0x2],ax
  403cd5:	mov    QWORD PTR [rsp+0x8],0x0
  403cde:	mov    QWORD PTR [rsp+0x10],0x0
  403ce7:	call   402140 <getpid@plt>
  403cec:	mov    rbx,0x409b20
  403cf3:	mov    edx,0x1
  403cf8:	mov    DWORD PTR [rsp+0x18],eax
  403cfc:	mov    WORD PTR [rsp],dx
  403d00:	xor    eax,eax
  403d02:	mov    edx,0x1b6
  403d07:	mov    esi,0x42
  403d0c:	mov    rdi,rbp
  403d0f:	mov    DWORD PTR [rbx+0x8],0x0
  403d16:	mov    DWORD PTR [rbx+0x10],0x0
  403d1d:	mov    DWORD PTR [rbx+0xc],0x0
  403d24:	mov    DWORD PTR [rbx+0x14],0xffffffff
  403d2b:	mov    DWORD PTR [rbx+0x18],0x0
  403d32:	call   402250 <open@plt>
  403d37:	test   eax,eax
  403d39:	js     403db0 <b64_decode@@Base+0x6b5>
  403d3b:	mov    ebp,eax
  403d3d:	mov    r12,rsp
  403d40:	xor    eax,eax
  403d42:	mov    rdx,r12
  403d45:	mov    esi,0x7
  403d4a:	mov    edi,ebp
  403d4c:	call   402110 <fcntl@plt>
  403d51:	test   eax,eax
  403d53:	je     403d5f <b64_decode@@Base+0x664>
  403d55:	call   4020a0 <__errno_location@plt>
  403d5a:	cmp    DWORD PTR [rax],0x4
  403d5d:	je     403d40 <b64_decode@@Base+0x645>
  403d5f:	lea    rsi,[rip+0x2ddc]        # 406b42 <_IO_stdin_used@@Base+0xb42>
  403d66:	mov    edi,ebp
  403d68:	call   402240 <fdopen@plt>
  403d6d:	test   rax,rax
  403d70:	mov    QWORD PTR [rbx],rax
  403d73:	je     403dc0 <b64_decode@@Base+0x6c5>
  403d75:	lea    rdx,[rsp+0x20]
  403d7a:	mov    esi,ebp
  403d7c:	mov    edi,0x1
  403d81:	call   402210 <__fxstat@plt>
  403d86:	test   eax,eax
  403d88:	js     403dd0 <b64_decode@@Base+0x6d5>
  403d8a:	mov    rdi,QWORD PTR [rbx]
  403d8d:	xor    esi,esi
  403d8f:	mov    DWORD PTR [rbx+0x1c],0x1
  403d96:	call   402190 <setbuf@plt>
  403d9b:	mov    eax,0x1
  403da0:	add    rsp,0xb0
  403da7:	pop    rbx
  403da8:	pop    rbp
  403da9:	pop    r12
  403dab:	ret    
  403dac:	nop    DWORD PTR [rax+0x0]
  403db0:	add    rsp,0xb0
  403db7:	xor    eax,eax
  403db9:	pop    rbx
  403dba:	pop    rbp
  403dbb:	pop    r12
  403dbd:	ret    
  403dbe:	xchg   ax,ax
  403dc0:	mov    edi,ebp
  403dc2:	call   4021b0 <close@plt>
  403dc7:	xor    eax,eax
  403dc9:	jmp    403da0 <b64_decode@@Base+0x6a5>
  403dcb:	nop    DWORD PTR [rax+rax*1+0x0]
  403dd0:	mov    rdi,QWORD PTR [rbx]
  403dd3:	call   402160 <fclose@plt>
  403dd8:	mov    QWORD PTR [rbx],0x0
  403ddf:	xor    eax,eax
  403de1:	jmp    403da0 <b64_decode@@Base+0x6a5>
  403de3:	nop    DWORD PTR [rax]
  403de6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403df0:	push   rbx
  403df1:	mov    rbx,0x409b20
  403df8:	mov    rdi,QWORD PTR [rbx]
  403dfb:	test   rdi,rdi
  403dfe:	je     403e1a <b64_decode@@Base+0x71f>
  403e00:	mov    eax,DWORD PTR [rbx+0xc]
  403e03:	test   eax,eax
  403e05:	jne    403e30 <b64_decode@@Base+0x735>
  403e07:	call   402160 <fclose@plt>
  403e0c:	mov    QWORD PTR [rbx],0x0
  403e13:	mov    DWORD PTR [rbx+0x10],0x0
  403e1a:	mov    eax,DWORD PTR [rbx+0x18]
  403e1d:	mov    DWORD PTR [rbx+0x1c],0x0
  403e24:	pop    rbx
  403e25:	ret    
  403e26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403e30:	mov    edx,DWORD PTR [rbx+0x1c]
  403e33:	test   edx,edx
  403e35:	jns    403e07 <b64_decode@@Base+0x70c>
  403e37:	mov    edi,eax
  403e39:	call   4039c0 <b64_decode@@Base+0x2c5>
  403e3e:	mov    rdi,QWORD PTR [rbx]
  403e41:	jmp    403e07 <b64_decode@@Base+0x70c>
  403e43:	nop    DWORD PTR [rax]
  403e46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403e50:	push   rbx
  403e51:	mov    ebx,edi
  403e53:	mov    edi,0x1
  403e58:	call   403a10 <b64_decode@@Base+0x315>
  403e5d:	mov    DWORD PTR [rax],ebx
  403e5f:	pop    rbx
  403e60:	ret    
  403e61:	nop    DWORD PTR [rax+rax*1+0x0]
  403e66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403e70:	push   rbx
  403e71:	mov    rbx,rdi
  403e74:	mov    edi,0x2
  403e79:	call   403a10 <b64_decode@@Base+0x315>
  403e7e:	mov    DWORD PTR [rax],ebx
  403e80:	sar    rbx,0x20
  403e84:	mov    DWORD PTR [rax+0x4],ebx
  403e87:	pop    rbx
  403e88:	ret    
  403e89:	nop    DWORD PTR [rax+0x0]
  403e90:	push   rbp
  403e91:	push   rbx
  403e92:	mov    ebp,edi
  403e94:	mov    ebx,esi
  403e96:	mov    edi,0x2
  403e9b:	sub    rsp,0x8
  403e9f:	call   403a10 <b64_decode@@Base+0x315>
  403ea4:	mov    DWORD PTR [rax],ebp
  403ea6:	mov    DWORD PTR [rax+0x4],ebx
  403ea9:	add    rsp,0x8
  403ead:	pop    rbx
  403eae:	pop    rbp
  403eaf:	ret    
  403eb0:	push   r15
  403eb2:	push   r14
  403eb4:	mov    r14d,edi
  403eb7:	push   r13
  403eb9:	push   r12
  403ebb:	push   rbp
  403ebc:	push   rbx
  403ebd:	mov    rbp,rsi
  403ec0:	sub    rsp,0x28
  403ec4:	lea    rax,[rsp+0x20]
  403ec9:	mov    r15,rsp
  403ecc:	mov    r13,rsp
  403ecf:	nop
  403ed0:	mov    DWORD PTR [r13+0x0],0x0
  403ed8:	add    r13,0x4
  403edc:	cmp    rax,r13
  403edf:	jne    403ed0 <b64_decode@@Base+0x7d5>
  403ee1:	lea    rbx,[rbp+0x28]
  403ee5:	xor    r12d,r12d
  403ee8:	xor    ecx,ecx
  403eea:	mov    edi,0x1
  403eef:	mov    rax,rbx
  403ef2:	nop    WORD PTR [rax+rax*1+0x0]
  403ef8:	mov    edx,DWORD PTR [rax]
  403efa:	test   edx,edx
  403efc:	je     403f0e <b64_decode@@Base+0x813>
  403efe:	mov    edx,ecx
  403f00:	mov    esi,edi
  403f02:	add    r12d,0x1
  403f06:	shr    edx,0x5
  403f09:	shl    esi,cl
  403f0b:	or     DWORD PTR [rsp+rdx*4],esi
  403f0e:	add    ecx,0x1
  403f11:	add    rax,0x18
  403f15:	cmp    ecx,0xfc
  403f1b:	jne    403ef8 <b64_decode@@Base+0x7fd>
  403f1d:	mov    edi,0x2
  403f22:	call   403a10 <b64_decode@@Base+0x315>
  403f27:	lea    edx,[r12+r12*4+0x11]
  403f2c:	mov    DWORD PTR [rax],r14d
  403f2f:	mov    edi,0x1
  403f34:	mov    DWORD PTR [rax+0x4],edx
  403f37:	mov    r12d,DWORD PTR [rbp+0x0]
  403f3b:	call   403a10 <b64_decode@@Base+0x315>
  403f40:	mov    edi,0x1
  403f45:	mov    DWORD PTR [rax],r12d
  403f48:	mov    r12d,DWORD PTR [rbp+0x8]
  403f4c:	call   403a10 <b64_decode@@Base+0x315>
  403f51:	mov    edi,0x1
  403f56:	mov    DWORD PTR [rax],r12d
  403f59:	mov    r12d,DWORD PTR [rbp+0xc]
  403f5d:	call   403a10 <b64_decode@@Base+0x315>
  403f62:	mov    edi,0x2
  403f67:	mov    DWORD PTR [rax],r12d
  403f6a:	mov    r12,QWORD PTR [rbp+0x10]
  403f6e:	call   403a10 <b64_decode@@Base+0x315>
  403f73:	mov    edi,0x2
  403f78:	mov    DWORD PTR [rax],r12d
  403f7b:	sar    r12,0x20
  403f7f:	mov    DWORD PTR [rax+0x4],r12d
  403f83:	mov    r12,QWORD PTR [rbp+0x18]
  403f87:	call   403a10 <b64_decode@@Base+0x315>
  403f8c:	mov    edi,0x2
  403f91:	mov    DWORD PTR [rax],r12d
  403f94:	sar    r12,0x20
  403f98:	mov    DWORD PTR [rax+0x4],r12d
  403f9c:	mov    r12,QWORD PTR [rbp+0x20]
  403fa0:	call   403a10 <b64_decode@@Base+0x315>
  403fa5:	mov    DWORD PTR [rax],r12d
  403fa8:	sar    r12,0x20
  403fac:	mov    DWORD PTR [rax+0x4],r12d
  403fb0:	mov    r12d,DWORD PTR [r15]
  403fb3:	mov    edi,0x1
  403fb8:	add    r15,0x4
  403fbc:	call   403a10 <b64_decode@@Base+0x315>
  403fc1:	cmp    r15,r13
  403fc4:	mov    DWORD PTR [rax],r12d
  403fc7:	jne    403fb0 <b64_decode@@Base+0x8b5>
  403fc9:	lea    r13,[rbp+0x17c8]
  403fd0:	jmp    403fe1 <b64_decode@@Base+0x8e6>
  403fd2:	nop    WORD PTR [rax+rax*1+0x0]
  403fd8:	add    rbx,0x18
  403fdc:	cmp    rbx,r13
  403fdf:	je     40402e <b64_decode@@Base+0x933>
  403fe1:	mov    ebp,DWORD PTR [rbx]
  403fe3:	test   ebp,ebp
  403fe5:	je     403fd8 <b64_decode@@Base+0x8dd>
  403fe7:	mov    edi,0x1
  403fec:	add    rbx,0x18
  403ff0:	call   403a10 <b64_decode@@Base+0x315>
  403ff5:	mov    r12,QWORD PTR [rbx-0x10]
  403ff9:	mov    edi,0x2
  403ffe:	mov    DWORD PTR [rax],ebp
  404000:	call   403a10 <b64_decode@@Base+0x315>
  404005:	mov    edi,0x2
  40400a:	mov    DWORD PTR [rax],r12d
  40400d:	sar    r12,0x20
  404011:	mov    DWORD PTR [rax+0x4],r12d
  404015:	mov    r12,QWORD PTR [rbx-0x8]
  404019:	call   403a10 <b64_decode@@Base+0x315>
  40401e:	mov    DWORD PTR [rax],r12d
  404021:	sar    r12,0x20
  404025:	cmp    rbx,r13
  404028:	mov    DWORD PTR [rax+0x4],r12d
  40402c:	jne    403fe1 <b64_decode@@Base+0x8e6>
  40402e:	add    rsp,0x28
  404032:	pop    rbx
  404033:	pop    rbp
  404034:	pop    r12
  404036:	pop    r13
  404038:	pop    r14
  40403a:	pop    r15
  40403c:	ret    
  40403d:	nop    DWORD PTR [rax]
  404040:	sub    rsp,0x8
  404044:	mov    edi,0x1
  404049:	call   403a60 <b64_decode@@Base+0x365>
  40404e:	test   rax,rax
  404051:	je     404060 <b64_decode@@Base+0x965>
  404053:	mov    eax,DWORD PTR [rax]
  404055:	add    rsp,0x8
  404059:	ret    
  40405a:	nop    WORD PTR [rax+rax*1+0x0]
  404060:	xor    eax,eax
  404062:	add    rsp,0x8
  404066:	ret    
  404067:	nop    WORD PTR [rax+rax*1+0x0]
  404070:	sub    rsp,0x8
  404074:	mov    edi,0x2
  404079:	call   403a60 <b64_decode@@Base+0x365>
  40407e:	test   rax,rax
  404081:	je     404090 <b64_decode@@Base+0x995>
  404083:	mov    rax,QWORD PTR [rax]
  404086:	add    rsp,0x8
  40408a:	ret    
  40408b:	nop    DWORD PTR [rax+rax*1+0x0]
  404090:	xor    eax,eax
  404092:	add    rsp,0x8
  404096:	ret    
  404097:	nop    WORD PTR [rax+rax*1+0x0]
  4040a0:	push   r15
  4040a2:	push   r14
  4040a4:	push   r13
  4040a6:	push   r12
  4040a8:	mov    r12,rdi
  4040ab:	push   rbp
  4040ac:	push   rbx
  4040ad:	mov    edi,0x1
  4040b2:	sub    rsp,0x28
  4040b6:	call   403a60 <b64_decode@@Base+0x365>
  4040bb:	test   rax,rax
  4040be:	je     4042ff <b64_decode@@Base+0xc04>
  4040c4:	mov    eax,DWORD PTR [rax]
  4040c6:	mov    DWORD PTR [r12],eax
  4040ca:	mov    edi,0x1
  4040cf:	call   403a60 <b64_decode@@Base+0x365>
  4040d4:	test   rax,rax
  4040d7:	je     404306 <b64_decode@@Base+0xc0b>
  4040dd:	mov    eax,DWORD PTR [rax]
  4040df:	mov    DWORD PTR [r12+0x8],eax
  4040e4:	mov    edi,0x1
  4040e9:	call   403a60 <b64_decode@@Base+0x365>
  4040ee:	test   rax,rax
  4040f1:	je     40430d <b64_decode@@Base+0xc12>
  4040f7:	mov    eax,DWORD PTR [rax]
  4040f9:	mov    DWORD PTR [r12+0xc],eax
  4040fe:	mov    edi,0x2
  404103:	call   403a60 <b64_decode@@Base+0x365>
  404108:	test   rax,rax
  40410b:	je     404314 <b64_decode@@Base+0xc19>
  404111:	mov    rax,QWORD PTR [rax]
  404114:	mov    QWORD PTR [r12+0x10],rax
  404119:	mov    edi,0x2
  40411e:	call   403a60 <b64_decode@@Base+0x365>
  404123:	test   rax,rax
  404126:	je     40431b <b64_decode@@Base+0xc20>
  40412c:	mov    rax,QWORD PTR [rax]
  40412f:	mov    QWORD PTR [r12+0x18],rax
  404134:	mov    edi,0x2
  404139:	call   403a60 <b64_decode@@Base+0x365>
  40413e:	test   rax,rax
  404141:	je     404322 <b64_decode@@Base+0xc27>
  404147:	mov    rax,QWORD PTR [rax]
  40414a:	lea    rdi,[r12+0x30]
  40414f:	mov    QWORD PTR [r12+0x20],rax
  404154:	mov    eax,r12d
  404157:	mov    QWORD PTR [r12+0x28],0x0
  404160:	mov    QWORD PTR [r12+0x17c0],0x0
  40416c:	mov    rbx,rsp
  40416f:	and    rdi,0xfffffffffffffff8
  404173:	lea    r13,[rsp+0x20]
  404178:	xor    r15d,r15d
  40417b:	sub    eax,edi
  40417d:	lea    ecx,[rax+0x17c8]
  404183:	xor    eax,eax
  404185:	shr    ecx,0x3
  404188:	rep stos QWORD PTR es:[rdi],rax
  40418b:	jmp    4041a9 <b64_decode@@Base+0xaae>
  40418d:	nop    DWORD PTR [rax]
  404190:	mov    edi,DWORD PTR [rax]
  404192:	add    rbx,0x4
  404196:	mov    rbp,rdi
  404199:	call   405a60 <__gcov_sort_n_vals@@Base+0x16e0>
  40419e:	mov    DWORD PTR [rbx-0x4],ebp
  4041a1:	add    r15d,eax
  4041a4:	cmp    rbx,r13
  4041a7:	je     4041d0 <b64_decode@@Base+0xad5>
  4041a9:	mov    edi,0x1
  4041ae:	call   403a60 <b64_decode@@Base+0x365>
  4041b3:	test   rax,rax
  4041b6:	jne    404190 <b64_decode@@Base+0xa95>
  4041b8:	xor    ebp,ebp
  4041ba:	add    rbx,0x4
  4041be:	add    r15d,eax
  4041c1:	mov    DWORD PTR [rbx-0x4],ebp
  4041c4:	cmp    rbx,r13
  4041c7:	jne    4041a9 <b64_decode@@Base+0xaae>
  4041c9:	nop    DWORD PTR [rax+0x0]
  4041d0:	xor    ebx,ebx
  4041d2:	xor    ebp,ebp
  4041d4:	xor    r14d,r14d
  4041d7:	test   r15d,r15d
  4041da:	lea    r13d,[r15-0x1]
  4041de:	je     4042a7 <b64_decode@@Base+0xbac>
  4041e4:	nop    DWORD PTR [rax+0x0]
  4041e8:	test   ebx,ebx
  4041ea:	je     4041f2 <b64_decode@@Base+0xaf7>
  4041ec:	jmp    404226 <b64_decode@@Base+0xb2b>
  4041ee:	xchg   ax,ax
  4041f0:	mov    ebp,ecx
  4041f2:	cmp    ebp,0x7
  4041f5:	jbe    404205 <b64_decode@@Base+0xb0a>
  4041f7:	lea    rdi,[rip+0x281a]        # 406a18 <_IO_stdin_used@@Base+0xa18>
  4041fe:	xor    eax,eax
  404200:	call   403ae0 <b64_decode@@Base+0x3e5>
  404205:	mov    eax,ebp
  404207:	lea    ecx,[rbp+0x1]
  40420a:	mov    ebx,DWORD PTR [rsp+rax*4]
  40420d:	test   ebx,ebx
  40420f:	je     4041f0 <b64_decode@@Base+0xaf5>
  404211:	mov    r14d,ebp
  404214:	mov    ebp,ecx
  404216:	shl    r14d,0x5
  40421a:	test   bl,0x1
  40421d:	jne    40422b <b64_decode@@Base+0xb30>
  40421f:	nop
  404220:	add    r14d,0x1
  404224:	shr    ebx,1
  404226:	test   bl,0x1
  404229:	je     404220 <b64_decode@@Base+0xb25>
  40422b:	cmp    r14d,0xfb
  404232:	ja     4042c0 <b64_decode@@Base+0xbc5>
  404238:	mov    edi,0x1
  40423d:	call   403a60 <b64_decode@@Base+0x365>
  404242:	test   rax,rax
  404245:	je     4042e1 <b64_decode@@Base+0xbe6>
  40424b:	mov    ecx,DWORD PTR [rax]
  40424d:	mov    r15d,r14d
  404250:	mov    edi,0x2
  404255:	lea    rax,[r15+r15*2]
  404259:	mov    DWORD PTR [r12+rax*8+0x28],ecx
  40425e:	call   403a60 <b64_decode@@Base+0x365>
  404263:	test   rax,rax
  404266:	je     4042f8 <b64_decode@@Base+0xbfd>
  40426c:	mov    rcx,QWORD PTR [rax]
  40426f:	lea    rax,[r15+r15*2]
  404273:	mov    edi,0x2
  404278:	mov    QWORD PTR [r12+rax*8+0x30],rcx
  40427d:	call   403a60 <b64_decode@@Base+0x365>
  404282:	test   rax,rax
  404285:	je     4042f0 <b64_decode@@Base+0xbf5>
  404287:	mov    rcx,QWORD PTR [rax]
  40428a:	lea    rax,[r15+r15*2]
  40428e:	sub    r13d,0x1
  404292:	shr    ebx,1
  404294:	add    r14d,0x1
  404298:	cmp    r13d,0xffffffff
  40429c:	mov    QWORD PTR [r12+rax*8+0x38],rcx
  4042a1:	jne    4041e8 <b64_decode@@Base+0xaed>
  4042a7:	add    rsp,0x28
  4042ab:	pop    rbx
  4042ac:	pop    rbp
  4042ad:	pop    r12
  4042af:	pop    r13
  4042b1:	pop    r14
  4042b3:	pop    r15
  4042b5:	ret    
  4042b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4042c0:	lea    rdi,[rip+0x2711]        # 4069d8 <_IO_stdin_used@@Base+0x9d8>
  4042c7:	xor    eax,eax
  4042c9:	call   403ae0 <b64_decode@@Base+0x3e5>
  4042ce:	mov    edi,0x1
  4042d3:	call   403a60 <b64_decode@@Base+0x365>
  4042d8:	test   rax,rax
  4042db:	jne    40424b <b64_decode@@Base+0xb50>
  4042e1:	xor    ecx,ecx
  4042e3:	jmp    40424d <b64_decode@@Base+0xb52>
  4042e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4042f0:	xor    ecx,ecx
  4042f2:	jmp    40428a <b64_decode@@Base+0xb8f>
  4042f4:	nop    DWORD PTR [rax+0x0]
  4042f8:	xor    ecx,ecx
  4042fa:	jmp    40426f <b64_decode@@Base+0xb74>
  4042ff:	xor    eax,eax
  404301:	jmp    4040c6 <b64_decode@@Base+0x9cb>
  404306:	xor    eax,eax
  404308:	jmp    4040df <b64_decode@@Base+0x9e4>
  40430d:	xor    eax,eax
  40430f:	jmp    4040f9 <b64_decode@@Base+0x9fe>
  404314:	xor    eax,eax
  404316:	jmp    404114 <b64_decode@@Base+0xa19>
  40431b:	xor    eax,eax
  40431d:	jmp    40412f <b64_decode@@Base+0xa34>
  404322:	xor    eax,eax
  404324:	jmp    40414a <b64_decode@@Base+0xa4f>
  404329:	nop    DWORD PTR [rax+0x0]
  404330:	push   rbp
  404331:	push   rbx
  404332:	mov    ebx,edi
  404334:	sub    rsp,0x8
  404338:	mov    rbp,0x409b20
  40433f:	mov    edi,DWORD PTR [rbp+0xc]
  404342:	test   edi,edi
  404344:	je     40434b <b64_decode@@Base+0xc50>
  404346:	call   4039c0 <b64_decode@@Base+0x2c5>
  40434b:	mov    rdi,QWORD PTR [rbp+0x0]
  40434f:	lea    esi,[rbx*4+0x0]
  404356:	xor    edx,edx
  404358:	call   402220 <fseek@plt>
  40435d:	mov    rdi,QWORD PTR [rbp+0x0]
  404361:	call   4021c0 <ftell@plt>
  404366:	sar    rax,0x2
  40436a:	mov    DWORD PTR [rbp+0x8],eax
  40436d:	add    rsp,0x8
  404371:	pop    rbx
  404372:	pop    rbp
  404373:	ret    
  404374:	xchg   ax,ax
  404376:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000404380 <__gcov_sort_n_vals@@Base>:
  404380:	cmp    esi,0x2
  404383:	jle    40440d <__gcov_sort_n_vals@@Base+0x8d>
  404389:	sub    esi,0x3
  40438c:	push   rbp
  40438d:	lea    r9,[rdi+0x8]
  404391:	shr    esi,1
  404393:	push   rbx
  404394:	xor    r11d,r11d
  404397:	mov    eax,esi
  404399:	xor    r10d,r10d
  40439c:	lea    rbp,[rax+rax*1+0x2]
  4043a1:	nop    DWORD PTR [rax+0x0]
  4043a8:	mov    rsi,QWORD PTR [r9+0x10]
  4043ac:	cmp    rsi,QWORD PTR [r9]
  4043af:	mov    edx,r10d
  4043b2:	mov    rbx,QWORD PTR [r9+0x8]
  4043b6:	mov    rax,r10
  4043b9:	jle    4043ed <__gcov_sort_n_vals@@Base+0x6d>
  4043bb:	lea    r8,[r9+r11*1]
  4043bf:	jmp    4043d3 <__gcov_sort_n_vals@@Base+0x53>
  4043c1:	nop    DWORD PTR [rax+0x0]
  4043c8:	sub    rax,0x2
  4043cc:	cmp    rsi,QWORD PTR [rdi+rax*8+0x8]
  4043d1:	jle    4043ed <__gcov_sort_n_vals@@Base+0x6d>
  4043d3:	mov    rcx,QWORD PTR [rdi+rax*8]
  4043d7:	sub    edx,0x2
  4043da:	mov    QWORD PTR [rdi+rax*8+0x10],rcx
  4043df:	mov    rcx,QWORD PTR [r8+rax*8]
  4043e3:	mov    QWORD PTR [rdi+rax*8+0x18],rcx
  4043e8:	jns    4043c8 <__gcov_sort_n_vals@@Base+0x48>
  4043ea:	movsxd rax,edx
  4043ed:	add    r10,0x2
  4043f1:	add    rax,0x2
  4043f5:	add    r9,0x10
  4043f9:	sub    r11,0x10
  4043fd:	cmp    rbp,r10
  404400:	mov    QWORD PTR [rdi+rax*8],rbx
  404404:	mov    QWORD PTR [rdi+rax*8+0x8],rsi
  404409:	jne    4043a8 <__gcov_sort_n_vals@@Base+0x28>
  40440b:	pop    rbx
  40440c:	pop    rbp
  40440d:	repz ret 
  40440f:	nop
  404410:	push   r15
  404412:	push   r14
  404414:	xor    eax,eax
  404416:	push   r13
  404418:	push   r12
  40441a:	mov    r13,rdi
  40441d:	push   rbp
  40441e:	push   rbx
  40441f:	mov    ecx,0x2f9
  404424:	sub    rsp,0x4808
  40442b:	test   r13,r13
  40442e:	lea    rdi,[rsp+0x90]
  404436:	mov    DWORD PTR [rsp+0x6c],esi
  40443a:	mov    QWORD PTR [rsp+0x8],rdi
  40443f:	rep stos QWORD PTR es:[rdi],rax
  404442:	je     405729 <__gcov_sort_n_vals@@Base+0x13a9>
  404448:	mov    rbx,r13
  40444b:	xor    ebp,ebp
  40444d:	mov    QWORD PTR [rsp+0x10],0x0
  404456:	xor    r15d,r15d
  404459:	mov    QWORD PTR [rsp+0x18],r13
  40445e:	mov    rdi,QWORD PTR [rbx+0x18]
  404462:	call   402170 <strlen@plt>
  404467:	mov    rsi,QWORD PTR [rsp+0x10]
  40446c:	mov    ecx,DWORD PTR [rbx+0x10]
  40446f:	mov    edx,0x20
  404474:	cmp    rsi,rax
  404477:	cmovae rax,rsi
  40447b:	mov    QWORD PTR [rsp+0x10],rax
  404480:	mov    eax,ecx
  404482:	add    ecx,ecx
  404484:	xor    eax,r15d
  404487:	add    r15d,r15d
  40448a:	sar    eax,0x1f
  40448d:	and    eax,0x4c11db7
  404492:	xor    r15d,eax
  404495:	sub    edx,0x1
  404498:	jne    404480 <__gcov_sort_n_vals@@Base+0x100>
  40449a:	mov    edi,DWORD PTR [rbx+0x70]
  40449d:	mov    edx,0x20
  4044a2:	mov    ecx,edi
  4044a4:	nop    DWORD PTR [rax+0x0]
  4044a8:	mov    eax,ecx
  4044aa:	add    ecx,ecx
  4044ac:	xor    eax,r15d
  4044af:	add    r15d,r15d
  4044b2:	sar    eax,0x1f
  4044b5:	and    eax,0x4c11db7
  4044ba:	xor    r15d,eax
  4044bd:	sub    edx,0x1
  4044c0:	jne    4044a8 <__gcov_sort_n_vals@@Base+0x128>
  4044c2:	test   edi,edi
  4044c4:	je     404620 <__gcov_sort_n_vals@@Base+0x2a0>
  4044ca:	mov    r8,QWORD PTR [rbx+0x78]
  4044ce:	lea    eax,[rdi-0x1]
  4044d1:	mov    r12d,DWORD PTR [rsp+0x98]
  4044d9:	mov    rcx,QWORD PTR [rsp+0xa0]
  4044e1:	mov    rsi,QWORD PTR [rsp+0xa8]
  4044e9:	xor    r9d,r9d
  4044ec:	xor    r13d,r13d
  4044ef:	xor    r11d,r11d
  4044f2:	lea    r10,[r8+rax*8+0x8]
  4044f7:	nop    WORD PTR [rax+rax*1+0x0]
  404500:	mov    rdi,QWORD PTR [r8]
  404503:	test   rdi,rdi
  404506:	je     4049fc <__gcov_sort_n_vals@@Base+0x67c>
  40450c:	cmp    QWORD PTR [rdi],rbx
  40450f:	je     4049ec <__gcov_sort_n_vals@@Base+0x66c>
  404515:	xor    edi,edi
  404517:	xor    edx,edx
  404519:	mov    r14d,0x20
  40451f:	nop
  404520:	mov    eax,r15d
  404523:	add    r15d,r15d
  404526:	xor    eax,edx
  404528:	add    edx,edx
  40452a:	sar    eax,0x1f
  40452d:	and    eax,0x4c11db7
  404532:	xor    r15d,eax
  404535:	sub    r14d,0x1
  404539:	jne    404520 <__gcov_sort_n_vals@@Base+0x1a0>
  40453b:	test   rdi,rdi
  40453e:	je     4049f4 <__gcov_sort_n_vals@@Base+0x674>
  404544:	mov    r14d,DWORD PTR [rdi+0xc]
  404548:	mov    edx,0x20
  40454d:	nop    DWORD PTR [rax]
  404550:	mov    eax,r15d
  404553:	add    r15d,r15d
  404556:	xor    eax,r14d
  404559:	add    r14d,r14d
  40455c:	sar    eax,0x1f
  40455f:	and    eax,0x4c11db7
  404564:	xor    r15d,eax
  404567:	sub    edx,0x1
  40456a:	jne    404550 <__gcov_sort_n_vals@@Base+0x1d0>
  40456c:	test   rdi,rdi
  40456f:	je     4045f4 <__gcov_sort_n_vals@@Base+0x274>
  404575:	cmp    QWORD PTR [rbx+0x20],0x0
  40457a:	je     4045f4 <__gcov_sort_n_vals@@Base+0x274>
  40457c:	mov    r12d,DWORD PTR [rdi+0x18]
  404580:	mov    edx,0x20
  404585:	add    ebp,r12d
  404588:	mov    r11d,r12d
  40458b:	nop    DWORD PTR [rax+rax*1+0x0]
  404590:	mov    eax,r15d
  404593:	add    r15d,r15d
  404596:	xor    eax,r11d
  404599:	add    r11d,r11d
  40459c:	sar    eax,0x1f
  40459f:	and    eax,0x4c11db7
  4045a4:	xor    r15d,eax
  4045a7:	sub    edx,0x1
  4045aa:	jne    404590 <__gcov_sort_n_vals@@Base+0x210>
  4045ac:	test   r12d,r12d
  4045af:	je     404a80 <__gcov_sort_n_vals@@Base+0x700>
  4045b5:	mov    rax,QWORD PTR [rdi+0x20]
  4045b9:	lea    edx,[r12-0x1]
  4045be:	lea    rdi,[rax+rdx*8+0x8]
  4045c3:	nop    DWORD PTR [rax+rax*1+0x0]
  4045c8:	mov    rdx,QWORD PTR [rax]
  4045cb:	add    rcx,rdx
  4045ce:	cmp    rsi,rdx
  4045d1:	jge    4045dc <__gcov_sort_n_vals@@Base+0x25c>
  4045d3:	mov    rsi,rdx
  4045d6:	mov    r9d,0x1
  4045dc:	add    rax,0x8
  4045e0:	cmp    rax,rdi
  4045e3:	jne    4045c8 <__gcov_sort_n_vals@@Base+0x248>
  4045e5:	mov    r12d,ebp
  4045e8:	mov    r13d,0x1
  4045ee:	mov    r11d,0x1
  4045f4:	add    r8,0x8
  4045f8:	cmp    r10,r8
  4045fb:	jne    404500 <__gcov_sort_n_vals@@Base+0x180>
  404601:	test   r11b,r11b
  404604:	jne    405702 <__gcov_sort_n_vals@@Base+0x1382>
  40460a:	test   r13b,r13b
  40460d:	je     404617 <__gcov_sort_n_vals@@Base+0x297>
  40460f:	mov    QWORD PTR [rsp+0xa0],rcx
  404617:	test   r9b,r9b
  40461a:	jne    40570f <__gcov_sort_n_vals@@Base+0x138f>
  404620:	mov    rbx,QWORD PTR [rbx+0x8]
  404624:	test   rbx,rbx
  404627:	jne    40445e <__gcov_sort_n_vals@@Base+0xde>
  40462d:	mov    r14,QWORD PTR [rsp+0x10]
  404632:	mov    r13,QWORD PTR [rsp+0x18]
  404637:	add    r14,0x2
  40463b:	test   ebp,ebp
  40463d:	je     404772 <__gcov_sort_n_vals@@Base+0x3f2>
  404643:	mov    rbx,QWORD PTR [rsp+0x8]
  404648:	mov    rcx,QWORD PTR [rsp+0xa8]
  404650:	mov    rax,rbx
  404653:	lea    rdx,[rbx+0x17c8]
  40465a:	add    rax,0x28
  40465e:	xchg   ax,ax
  404660:	mov    DWORD PTR [rax],0x0
  404666:	mov    QWORD PTR [rax+0x8],rcx
  40466a:	add    rax,0x18
  40466e:	mov    QWORD PTR [rax-0x8],0x0
  404676:	cmp    rdx,rax
  404679:	jne    404660 <__gcov_sort_n_vals@@Base+0x2e0>
  40467b:	mov    rax,QWORD PTR [rsp+0x8]
  404680:	mov    r10,r13
  404683:	mov    r12d,0x3f
  404689:	mov    ebp,0x3d
  40468e:	mov    ebx,0x4000003e
  404693:	lea    r8,[rax+0x28]
  404697:	cmp    QWORD PTR [r10+0x20],0x0
  40469c:	je     404765 <__gcov_sort_n_vals@@Base+0x3e5>
  4046a2:	mov    eax,DWORD PTR [r10+0x70]
  4046a6:	test   eax,eax
  4046a8:	je     404765 <__gcov_sort_n_vals@@Base+0x3e5>
  4046ae:	mov    rdi,QWORD PTR [r10+0x78]
  4046b2:	sub    eax,0x1
  4046b5:	lea    r11,[rdi+rax*8+0x8]
  4046ba:	jmp    4046cd <__gcov_sort_n_vals@@Base+0x34d>
  4046bc:	nop    DWORD PTR [rax+0x0]
  4046c0:	add    rdi,0x8
  4046c4:	cmp    r11,rdi
  4046c7:	je     404765 <__gcov_sort_n_vals@@Base+0x3e5>
  4046cd:	mov    rax,QWORD PTR [rdi]
  4046d0:	test   rax,rax
  4046d3:	je     4046c0 <__gcov_sort_n_vals@@Base+0x340>
  4046d5:	cmp    QWORD PTR [rax],r10
  4046d8:	jne    4046c0 <__gcov_sort_n_vals@@Base+0x340>
  4046da:	mov    edx,DWORD PTR [rax+0x18]
  4046dd:	test   edx,edx
  4046df:	je     4046c0 <__gcov_sort_n_vals@@Base+0x340>
  4046e1:	mov    rsi,QWORD PTR [rax+0x20]
  4046e5:	lea    eax,[rdx-0x1]
  4046e8:	mov    QWORD PTR [rsp+0x10],rdi
  4046ed:	lea    r9,[rsi+rax*8+0x8]
  4046f2:	nop    WORD PTR [rax+rax*1+0x0]
  4046f8:	mov    rdx,QWORD PTR [rsi]
  4046fb:	test   rdx,rdx
  4046fe:	je     404a08 <__gcov_sort_n_vals@@Base+0x688>
  404704:	bsr    rax,rdx
  404708:	mov    ecx,r12d
  40470b:	xor    rax,0x3f
  40470f:	sub    ecx,eax
  404711:	cmp    ecx,0x1
  404714:	jbe    404a08 <__gcov_sort_n_vals@@Base+0x688>
  40471a:	mov    ecx,ebp
  40471c:	mov    rdi,rdx
  40471f:	sub    ecx,eax
  404721:	shr    rdi,cl
  404724:	mov    rcx,rdi
  404727:	mov    edi,ebx
  404729:	and    ecx,0x3
  40472c:	sub    edi,eax
  40472e:	lea    eax,[rcx+rdi*4]
  404731:	lea    rax,[rax+rax*2]
  404735:	lea    rax,[r8+rax*8]
  404739:	add    DWORD PTR [rax],0x1
  40473c:	add    QWORD PTR [rax+0x10],rdx
  404740:	cmp    rdx,QWORD PTR [rax+0x8]
  404744:	jge    40474a <__gcov_sort_n_vals@@Base+0x3ca>
  404746:	mov    QWORD PTR [rax+0x8],rdx
  40474a:	add    rsi,0x8
  40474e:	cmp    rsi,r9
  404751:	jne    4046f8 <__gcov_sort_n_vals@@Base+0x378>
  404753:	mov    rdi,QWORD PTR [rsp+0x10]
  404758:	add    rdi,0x8
  40475c:	cmp    r11,rdi
  40475f:	jne    4046cd <__gcov_sort_n_vals@@Base+0x34d>
  404765:	mov    r10,QWORD PTR [r10+0x8]
  404769:	test   r10,r10
  40476c:	jne    404697 <__gcov_sort_n_vals@@Base+0x317>
  404772:	lea    rdi,[rip+0x241b]        # 406b94 <_IO_stdin_used@@Base+0xb94>
  404779:	call   402040 <getenv@plt>
  40477e:	test   rax,rax
  404781:	je     405665 <__gcov_sort_n_vals@@Base+0x12e5>
  404787:	xor    esi,esi
  404789:	mov    edx,0xa
  40478e:	mov    rdi,rax
  404791:	call   4021e0 <strtol@plt>
  404796:	mov    edx,0x0
  40479b:	test   eax,eax
  40479d:	lea    rdi,[rip+0x2402]        # 406ba6 <_IO_stdin_used@@Base+0xba6>
  4047a4:	cmovns edx,eax
  4047a7:	mov    DWORD PTR [rsp+0x3c],edx
  4047ab:	call   402040 <getenv@plt>
  4047b0:	test   rax,rax
  4047b3:	mov    rbx,rax
  4047b6:	je     405648 <__gcov_sort_n_vals@@Base+0x12c8>
  4047bc:	mov    rdi,rax
  4047bf:	call   402170 <strlen@plt>
  4047c4:	test   rax,rax
  4047c7:	mov    QWORD PTR [rsp+0x20],rax
  4047cc:	je     405648 <__gcov_sort_n_vals@@Base+0x12c8>
  4047d2:	mov    rsi,QWORD PTR [rsp+0x20]
  4047d7:	mov    rax,rsi
  4047da:	sub    rax,0x1
  4047de:	cmp    BYTE PTR [rbx+rsi*1-0x1],0x2f
  4047e3:	je     4056ef <__gcov_sort_n_vals@@Base+0x136f>
  4047e9:	mov    rbp,QWORD PTR [rsp+0x20]
  4047ee:	lea    rdi,[r14+rbp*1]
  4047f2:	call   402200 <malloc@plt>
  4047f7:	mov    rdx,rbp
  4047fa:	mov    rsi,rbx
  4047fd:	mov    rdi,rax
  404800:	call   4021f0 <memcpy@plt>
  404805:	mov    QWORD PTR [rsp+0x10],rax
  40480a:	test   r13,r13
  40480d:	je     4049d1 <__gcov_sort_n_vals@@Base+0x651>
  404813:	mov    rax,QWORD PTR [rsp+0x10]
  404818:	add    rax,QWORD PTR [rsp+0x20]
  40481d:	mov    r12,r13
  404820:	mov    DWORD PTR [rsp+0x60],r15d
  404825:	mov    QWORD PTR [rsp+0x58],rax
  40482a:	add    rax,0x1
  40482e:	mov    QWORD PTR [rsp+0x80],rax
  404836:	lea    rax,[rsp+0x1860]
  40483e:	mov    QWORD PTR [rsp+0x30],rax
  404843:	cmp    QWORD PTR [r12+0x68],0x0
  404849:	mov    QWORD PTR [rip+0x52a4],0x0        # 409af8 <__bss_start@@Base+0x448>
  404854:	mov    QWORD PTR [rip+0x5291],0x0        # 409af0 <__bss_start@@Base+0x440>
  40485f:	je     4048ae <__gcov_sort_n_vals@@Base+0x52e>
  404861:	mov    r11d,DWORD PTR [r12+0x70]
  404866:	test   r11d,r11d
  404869:	je     4048ae <__gcov_sort_n_vals@@Base+0x52e>
  40486b:	xor    r13d,r13d
  40486e:	xor    ebp,ebp
  404870:	mov    rax,QWORD PTR [r12+0x78]
  404875:	mov    rcx,QWORD PTR [rax+r13*1]
  404879:	xor    eax,eax
  40487b:	add    rcx,0x18
  40487f:	nop
  404880:	cmp    QWORD PTR [r12+rax*8+0x20],0x0
  404886:	je     404896 <__gcov_sort_n_vals@@Base+0x516>
  404888:	cmp    rax,0x9
  40488c:	je     404a10 <__gcov_sort_n_vals@@Base+0x690>
  404892:	add    rcx,0x10
  404896:	add    rax,0x1
  40489a:	cmp    rax,0xa
  40489e:	jne    404880 <__gcov_sort_n_vals@@Base+0x500>
  4048a0:	add    ebp,0x1
  4048a3:	add    r13,0x8
  4048a7:	cmp    DWORD PTR [r12+0x70],ebp
  4048ac:	jne    404870 <__gcov_sort_n_vals@@Base+0x4f0>
  4048ae:	mov    ebx,DWORD PTR [rsp+0x3c]
  4048b2:	mov    rsi,QWORD PTR [r12+0x18]
  4048b7:	mov    rdi,QWORD PTR [rsp+0x58]
  4048bc:	test   ebx,ebx
  4048be:	je     404905 <__gcov_sort_n_vals@@Base+0x585>
  4048c0:	movzx  edx,BYTE PTR [rsi]
  4048c3:	mov    rax,rsi
  4048c6:	cmp    dl,0x2f
  4048c9:	je     404b00 <__gcov_sort_n_vals@@Base+0x780>
  4048cf:	test   dl,dl
  4048d1:	je     404905 <__gcov_sort_n_vals@@Base+0x585>
  4048d3:	mov    ecx,DWORD PTR [rsp+0x3c]
  4048d7:	jmp    4048ef <__gcov_sort_n_vals@@Base+0x56f>
  4048d9:	nop    DWORD PTR [rax+0x0]
  4048e0:	add    rax,0x1
  4048e4:	movzx  edx,BYTE PTR [rax]
  4048e7:	test   dl,dl
  4048e9:	je     404905 <__gcov_sort_n_vals@@Base+0x585>
  4048eb:	test   ecx,ecx
  4048ed:	je     404905 <__gcov_sort_n_vals@@Base+0x585>
  4048ef:	cmp    dl,0x2f
  4048f2:	jne    4048e0 <__gcov_sort_n_vals@@Base+0x560>
  4048f4:	mov    rsi,rax
  4048f7:	add    rax,0x1
  4048fb:	movzx  edx,BYTE PTR [rax]
  4048fe:	sub    ecx,0x1
  404901:	test   dl,dl
  404903:	jne    4048eb <__gcov_sort_n_vals@@Base+0x56b>
  404905:	cmp    QWORD PTR [rsp+0x20],0x0
  40490b:	je     404922 <__gcov_sort_n_vals@@Base+0x5a2>
  40490d:	cmp    BYTE PTR [rsi],0x2f
  404910:	je     404922 <__gcov_sort_n_vals@@Base+0x5a2>
  404912:	mov    rax,QWORD PTR [rsp+0x58]
  404917:	mov    rdi,QWORD PTR [rsp+0x80]
  40491f:	mov    BYTE PTR [rax],0x2f
  404922:	call   4020b0 <strcpy@plt>
  404927:	mov    rdi,QWORD PTR [rsp+0x10]
  40492c:	call   403cc0 <b64_decode@@Base+0x5c5>
  404931:	test   eax,eax
  404933:	je     404a8e <__gcov_sort_n_vals@@Base+0x70e>
  404939:	mov    edi,0x1
  40493e:	call   403a60 <b64_decode@@Base+0x365>
  404943:	test   rax,rax
  404946:	je     40500e <__gcov_sort_n_vals@@Base+0xc8e>
  40494c:	mov    eax,DWORD PTR [rax]
  40494e:	test   eax,eax
  404950:	je     40500e <__gcov_sort_n_vals@@Base+0xc8e>
  404956:	cmp    eax,0x67636461
  40495b:	je     404b80 <__gcov_sort_n_vals@@Base+0x800>
  404961:	mov    rsi,QWORD PTR [rsp+0x10]
  404966:	lea    rdi,[rip+0x2133]        # 406aa0 <_IO_stdin_used@@Base+0xaa0>
  40496d:	xor    eax,eax
  40496f:	call   403ae0 <b64_decode@@Base+0x3e5>
  404974:	mov    rax,QWORD PTR [rip+0x517d]        # 409af8 <__bss_start@@Base+0x448>
  40497b:	test   rax,rax
  40497e:	je     40499c <__gcov_sort_n_vals@@Base+0x61c>
  404980:	mov    edx,0xa
  404985:	mov    rsi,rax
  404988:	mov    rdi,r12
  40498b:	call   403b90 <b64_decode@@Base+0x495>
  404990:	test   rax,rax
  404993:	mov    QWORD PTR [rip+0x515e],rax        # 409af8 <__bss_start@@Base+0x448>
  40499a:	jne    404980 <__gcov_sort_n_vals@@Base+0x600>
  40499c:	call   403df0 <b64_decode@@Base+0x6f5>
  4049a1:	test   eax,eax
  4049a3:	je     4049c3 <__gcov_sort_n_vals@@Base+0x643>
  4049a5:	lea    rax,[rip+0x20ac]        # 406a58 <_IO_stdin_used@@Base+0xa58>
  4049ac:	lea    rdi,[rip+0x21c3]        # 406b76 <_IO_stdin_used@@Base+0xb76>
  4049b3:	mov    rsi,QWORD PTR [rsp+0x10]
  4049b8:	cmovs  rdi,rax
  4049bc:	xor    eax,eax
  4049be:	call   403ae0 <b64_decode@@Base+0x3e5>
  4049c3:	mov    r12,QWORD PTR [r12+0x8]
  4049c8:	test   r12,r12
  4049cb:	jne    404843 <__gcov_sort_n_vals@@Base+0x4c3>
  4049d1:	mov    rdi,QWORD PTR [rsp+0x10]
  4049d6:	add    rsp,0x4808
  4049dd:	pop    rbx
  4049de:	pop    rbp
  4049df:	pop    r12
  4049e1:	pop    r13
  4049e3:	pop    r14
  4049e5:	pop    r15
  4049e7:	jmp    402050 <free@plt>
  4049ec:	mov    edx,DWORD PTR [rdi+0x10]
  4049ef:	jmp    404519 <__gcov_sort_n_vals@@Base+0x199>
  4049f4:	xor    r14d,r14d
  4049f7:	jmp    404548 <__gcov_sort_n_vals@@Base+0x1c8>
  4049fc:	xor    edx,edx
  4049fe:	jmp    404519 <__gcov_sort_n_vals@@Base+0x199>
  404a03:	nop    DWORD PTR [rax+rax*1+0x0]
  404a08:	mov    eax,edx
  404a0a:	jmp    404731 <__gcov_sort_n_vals@@Base+0x3b1>
  404a0f:	nop
  404a10:	mov    r14d,DWORD PTR [rcx]
  404a13:	mov    eax,0x38e38e39
  404a18:	imul   r14d
  404a1b:	mov    eax,r14d
  404a1e:	sar    eax,0x1f
  404a21:	sar    edx,1
  404a23:	mov    ebx,edx
  404a25:	sub    ebx,eax
  404a27:	lea    eax,[rbx+rbx*8]
  404a2a:	mov    ebx,r14d
  404a2d:	sub    ebx,eax
  404a2f:	jne    4056ea <__gcov_sort_n_vals@@Base+0x136a>
  404a35:	mov    r15,QWORD PTR [rcx+0x8]
  404a39:	add    r15,0x8
  404a3d:	test   r14d,r14d
  404a40:	jle    4048a0 <__gcov_sort_n_vals@@Base+0x520>
  404a46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404a50:	mov    rdi,r15
  404a53:	mov    esi,0x8
  404a58:	add    ebx,0x9
  404a5b:	call   404380 <__gcov_sort_n_vals@@Base>
  404a60:	add    r15,0x48
  404a64:	cmp    r14d,ebx
  404a67:	jg     404a50 <__gcov_sort_n_vals@@Base+0x6d0>
  404a69:	add    ebp,0x1
  404a6c:	add    r13,0x8
  404a70:	cmp    DWORD PTR [r12+0x70],ebp
  404a75:	jne    404870 <__gcov_sort_n_vals@@Base+0x4f0>
  404a7b:	jmp    4048ae <__gcov_sort_n_vals@@Base+0x52e>
  404a80:	mov    r12d,ebp
  404a83:	mov    r11d,0x1
  404a89:	jmp    4045f4 <__gcov_sort_n_vals@@Base+0x274>
  404a8e:	mov    rbx,QWORD PTR [rsp+0x10]
  404a93:	movzx  eax,BYTE PTR [rbx]
  404a96:	cmp    al,0x2f
  404a98:	je     404b70 <__gcov_sort_n_vals@@Base+0x7f0>
  404a9e:	test   al,al
  404aa0:	je     404adf <__gcov_sort_n_vals@@Base+0x75f>
  404aa2:	mov    rbp,QWORD PTR [rsp+0x10]
  404aa7:	jmp    404abb <__gcov_sort_n_vals@@Base+0x73b>
  404aa9:	nop    DWORD PTR [rax+0x0]
  404ab0:	add    rbx,0x1
  404ab4:	movzx  eax,BYTE PTR [rbx]
  404ab7:	test   al,al
  404ab9:	je     404adf <__gcov_sort_n_vals@@Base+0x75f>
  404abb:	cmp    al,0x2f
  404abd:	jne    404ab0 <__gcov_sort_n_vals@@Base+0x730>
  404abf:	xor    esi,esi
  404ac1:	mov    BYTE PTR [rbx],0x0
  404ac4:	mov    rdi,rbp
  404ac7:	call   402260 <access@plt>
  404acc:	cmp    eax,0xffffffff
  404acf:	je     404b0d <__gcov_sort_n_vals@@Base+0x78d>
  404ad1:	mov    BYTE PTR [rbx],0x2f
  404ad4:	add    rbx,0x1
  404ad8:	movzx  eax,BYTE PTR [rbx]
  404adb:	test   al,al
  404add:	jne    404abb <__gcov_sort_n_vals@@Base+0x73b>
  404adf:	mov    rdi,QWORD PTR [rsp+0x10]
  404ae4:	call   403cc0 <b64_decode@@Base+0x5c5>
  404ae9:	test   eax,eax
  404aeb:	jne    404939 <__gcov_sort_n_vals@@Base+0x5b9>
  404af1:	mov    rcx,QWORD PTR [rsp+0x10]
  404af6:	lea    rdx,[rip+0x20c8]        # 406bc5 <_IO_stdin_used@@Base+0xbc5>
  404afd:	jmp    404b4c <__gcov_sort_n_vals@@Base+0x7cc>
  404aff:	nop
  404b00:	lea    rax,[rsi+0x1]
  404b04:	movzx  edx,BYTE PTR [rsi+0x1]
  404b08:	jmp    4048cf <__gcov_sort_n_vals@@Base+0x54f>
  404b0d:	mov    esi,0x1ed
  404b12:	mov    rdi,rbp
  404b15:	call   4020c0 <mkdir@plt>
  404b1a:	cmp    eax,0xffffffff
  404b1d:	jne    404ad1 <__gcov_sort_n_vals@@Base+0x751>
  404b1f:	call   4020a0 <__errno_location@plt>
  404b24:	cmp    DWORD PTR [rax],0x11
  404b27:	je     404ad1 <__gcov_sort_n_vals@@Base+0x751>
  404b29:	mov    r14,QWORD PTR [rsp+0x10]
  404b2e:	lea    rdi,[rip+0x1f43]        # 406a78 <_IO_stdin_used@@Base+0xa78>
  404b35:	xor    eax,eax
  404b37:	mov    rsi,r14
  404b3a:	call   403ae0 <b64_decode@@Base+0x3e5>
  404b3f:	lea    rdx,[rip+0x206c]        # 406bb2 <_IO_stdin_used@@Base+0xbb2>
  404b46:	mov    BYTE PTR [rbx],0x2f
  404b49:	mov    rcx,r14
  404b4c:	mov    rax,QWORD PTR [rip+0x44a5]        # 408ff8 <stderr@GLIBC_2.2.5>
  404b53:	mov    esi,0x1
  404b58:	mov    rdi,QWORD PTR [rax]
  404b5b:	xor    eax,eax
  404b5d:	call   4022a0 <__fprintf_chk@plt>
  404b62:	jmp    4049c3 <__gcov_sort_n_vals@@Base+0x643>
  404b67:	nop    WORD PTR [rax+rax*1+0x0]
  404b70:	mov    rax,rbx
  404b73:	lea    rbx,[rbx+0x1]
  404b77:	movzx  eax,BYTE PTR [rax+0x1]
  404b7b:	jmp    404a9e <__gcov_sort_n_vals@@Base+0x71e>
  404b80:	mov    edi,0x1
  404b85:	call   403a60 <b64_decode@@Base+0x365>
  404b8a:	test   rax,rax
  404b8d:	je     4056c4 <__gcov_sort_n_vals@@Base+0x1344>
  404b93:	mov    esi,DWORD PTR [rax]
  404b95:	lea    rax,[r12+0x18]
  404b9a:	mov    rdx,QWORD PTR [rsp+0x10]
  404b9f:	mov    rdi,rax
  404ba2:	mov    QWORD PTR [rsp+0x78],rax
  404ba7:	call   403c00 <b64_decode@@Base+0x505>
  404bac:	test   eax,eax
  404bae:	je     404974 <__gcov_sort_n_vals@@Base+0x5f4>
  404bb4:	mov    edi,0x1
  404bb9:	call   403a60 <b64_decode@@Base+0x365>
  404bbe:	test   rax,rax
  404bc1:	je     4056cb <__gcov_sort_n_vals@@Base+0x134b>
  404bc7:	mov    eax,DWORD PTR [rax]
  404bc9:	cmp    DWORD PTR [r12+0x10],eax
  404bce:	jne    40500e <__gcov_sort_n_vals@@Base+0xc8e>
  404bd4:	mov    r15,0x409b20
  404bdb:	lea    rbx,[rip+0x4f0e]        # 409af0 <__bss_start@@Base+0x440>
  404be2:	lea    rbp,[rsp+0x3030]
  404bea:	xor    r13d,r13d
  404bed:	mov    eax,DWORD PTR [r15+0xc]
  404bf1:	add    eax,DWORD PTR [r15+0x8]
  404bf5:	mov    edi,0x1
  404bfa:	mov    DWORD PTR [rsp+0x28],eax
  404bfe:	call   403a60 <b64_decode@@Base+0x365>
  404c03:	test   rax,rax
  404c06:	je     404ca8 <__gcov_sort_n_vals@@Base+0x928>
  404c0c:	mov    eax,DWORD PTR [rax]
  404c0e:	cmp    eax,0xa3000000
  404c13:	jne    4056ba <__gcov_sort_n_vals@@Base+0x133a>
  404c19:	mov    edi,0x1
  404c1e:	call   403a60 <b64_decode@@Base+0x365>
  404c23:	mov    rdi,rbp
  404c26:	call   4040a0 <b64_decode@@Base+0x9a5>
  404c2b:	cmp    QWORD PTR [r15],0x0
  404c2f:	je     404fef <__gcov_sort_n_vals@@Base+0xc6f>
  404c35:	mov    eax,DWORD PTR [r15+0x18]
  404c39:	test   eax,eax
  404c3b:	jne    404fe4 <__gcov_sort_n_vals@@Base+0xc64>
  404c41:	test   r13d,r13d
  404c44:	jne    404c7d <__gcov_sort_n_vals@@Base+0x8fd>
  404c46:	mov    eax,DWORD PTR [rsp+0x60]
  404c4a:	cmp    DWORD PTR [rsp+0x3030],eax
  404c51:	jne    404bed <__gcov_sort_n_vals@@Base+0x86d>
  404c53:	mov    eax,DWORD PTR [rsp+0x98]
  404c5a:	cmp    DWORD PTR [rsp+0x3038],eax
  404c61:	jne    404bed <__gcov_sort_n_vals@@Base+0x86d>
  404c63:	mov    ecx,0x2f9
  404c68:	mov    rdi,QWORD PTR [rsp+0x30]
  404c6d:	mov    rsi,rbp
  404c70:	mov    r13d,DWORD PTR [rsp+0x28]
  404c75:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  404c78:	jmp    404bed <__gcov_sort_n_vals@@Base+0x86d>
  404c7d:	mov    edi,0x17d0
  404c82:	call   402200 <malloc@plt>
  404c87:	mov    ecx,0x2f9
  404c8c:	mov    QWORD PTR [rbx],rax
  404c8f:	lea    rdi,[rax+0x8]
  404c93:	mov    rsi,rbp
  404c96:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  404c99:	mov    QWORD PTR [rax],0x0
  404ca0:	mov    rbx,QWORD PTR [rbx]
  404ca3:	jmp    404bed <__gcov_sort_n_vals@@Base+0x86d>
  404ca8:	mov    DWORD PTR [rsp+0x18],r13d
  404cad:	xor    eax,eax
  404caf:	lea    rbx,[rip+0x4e42]        # 409af8 <__bss_start@@Base+0x448>
  404cb6:	mov    QWORD PTR [rsp+0x48],0x0
  404cbf:	mov    QWORD PTR [rsp+0x70],r15
  404cc4:	mov    QWORD PTR [rsp+0x50],rbx
  404cc9:	mov    rbx,QWORD PTR [rsp+0x48]
  404cce:	cmp    ebx,DWORD PTR [r12+0x70]
  404cd3:	mov    DWORD PTR [rsp+0x88],ebx
  404cda:	mov    DWORD PTR [rsp+0x64],ebx
  404cde:	je     405815 <__gcov_sort_n_vals@@Base+0x1495>
  404ce4:	mov    rdx,QWORD PTR [r12+0x78]
  404ce9:	mov    rbx,QWORD PTR [rsp+0x48]
  404cee:	cmp    eax,0x1000000
  404cf3:	mov    rbx,QWORD PTR [rdx+rbx*8]
  404cf7:	jne    404f26 <__gcov_sort_n_vals@@Base+0xba6>
  404cfd:	mov    edi,0x1
  404d02:	call   403a60 <b64_decode@@Base+0x365>
  404d07:	test   rax,rax
  404d0a:	je     404ec9 <__gcov_sort_n_vals@@Base+0xb49>
  404d10:	mov    eax,DWORD PTR [rax]
  404d12:	test   eax,eax
  404d14:	je     404ec9 <__gcov_sort_n_vals@@Base+0xb49>
  404d1a:	cmp    eax,0x3
  404d1d:	jne    404f26 <__gcov_sort_n_vals@@Base+0xba6>
  404d23:	test   rbx,rbx
  404d26:	je     404d31 <__gcov_sort_n_vals@@Base+0x9b1>
  404d28:	cmp    QWORD PTR [rbx],r12
  404d2b:	je     405769 <__gcov_sort_n_vals@@Base+0x13e9>
  404d31:	mov    rcx,QWORD PTR [rsp+0x78]
  404d36:	lea    rdx,[r12+0x68]
  404d3b:	xor    eax,eax
  404d3d:	cmp    QWORD PTR [rdx],0x1
  404d41:	sbb    eax,0xffffffff
  404d44:	sub    rdx,0x8
  404d48:	cmp    rdx,rcx
  404d4b:	jne    404d3d <__gcov_sort_n_vals@@Base+0x9bd>
  404d4d:	shl    eax,0x4
  404d50:	lea    edi,[rax+0x38]
  404d53:	mov    DWORD PTR [rsp+0x40],edi
  404d57:	call   402200 <malloc@plt>
  404d5c:	test   rax,rax
  404d5f:	mov    r13,rax
  404d62:	mov    ecx,DWORD PTR [rsp+0x40]
  404d66:	je     404f5c <__gcov_sort_n_vals@@Base+0xbdc>
  404d6c:	mov    QWORD PTR [rax],0x0
  404d73:	mov    eax,DWORD PTR [rsp+0x64]
  404d77:	mov    edi,0x1
  404d7c:	mov    DWORD PTR [r13+0x8],eax
  404d80:	call   403a60 <b64_decode@@Base+0x365>
  404d85:	test   rax,rax
  404d88:	je     405762 <__gcov_sort_n_vals@@Base+0x13e2>
  404d8e:	mov    eax,DWORD PTR [rax]
  404d90:	mov    DWORD PTR [r13+0x18],eax
  404d94:	mov    edi,0x1
  404d99:	call   403a60 <b64_decode@@Base+0x365>
  404d9e:	test   rax,rax
  404da1:	je     40575b <__gcov_sort_n_vals@@Base+0x13db>
  404da7:	mov    eax,DWORD PTR [rax]
  404da9:	mov    DWORD PTR [r13+0x1c],eax
  404dad:	mov    edi,0x1
  404db2:	call   403a60 <b64_decode@@Base+0x365>
  404db7:	test   rax,rax
  404dba:	je     405754 <__gcov_sort_n_vals@@Base+0x13d4>
  404dc0:	mov    eax,DWORD PTR [rax]
  404dc2:	mov    DWORD PTR [r13+0x20],eax
  404dc6:	mov    r14d,0x1a10000
  404dcc:	xor    ebx,ebx
  404dce:	mov    DWORD PTR [rsp+0x68],0x0
  404dd6:	mov    QWORD PTR [rsp+0x40],r13
  404ddb:	cmp    QWORD PTR [r12+rbx*8+0x20],0x0
  404de1:	mov    ebp,ebx
  404de3:	je     404e9f <__gcov_sort_n_vals@@Base+0xb1f>
  404de9:	mov    edi,0x1
  404dee:	call   403a60 <b64_decode@@Base+0x365>
  404df3:	test   rax,rax
  404df6:	je     404ee9 <__gcov_sort_n_vals@@Base+0xb69>
  404dfc:	cmp    r14d,DWORD PTR [rax]
  404dff:	jne    404ee9 <__gcov_sort_n_vals@@Base+0xb69>
  404e05:	mov    edi,0x1
  404e0a:	call   403a60 <b64_decode@@Base+0x365>
  404e0f:	test   rax,rax
  404e12:	je     404f50 <__gcov_sort_n_vals@@Base+0xbd0>
  404e18:	mov    esi,DWORD PTR [rax]
  404e1a:	shr    esi,1
  404e1c:	lea    edi,[rsi*8+0x0]
  404e23:	mov    r15,rdi
  404e26:	mov    DWORD PTR [rsp+0x8c],esi
  404e2d:	call   402200 <malloc@plt>
  404e32:	test   rax,rax
  404e35:	mov    r13,rax
  404e38:	je     405745 <__gcov_sort_n_vals@@Base+0x13c5>
  404e3e:	mov    eax,DWORD PTR [rsp+0x68]
  404e42:	mov    esi,DWORD PTR [rsp+0x8c]
  404e49:	shl    rax,0x4
  404e4d:	add    rax,QWORD PTR [rsp+0x40]
  404e52:	test   esi,esi
  404e54:	mov    DWORD PTR [rax+0x28],esi
  404e57:	mov    QWORD PTR [rax+0x30],r13
  404e5b:	lea    eax,[rsi-0x1]
  404e5e:	lea    rbp,[r13+rax*8+0x8]
  404e63:	jne    404e7c <__gcov_sort_n_vals@@Base+0xafc>
  404e65:	jmp    404e9a <__gcov_sort_n_vals@@Base+0xb1a>
  404e67:	nop    WORD PTR [rax+rax*1+0x0]
  404e70:	mov    rax,QWORD PTR [rax]
  404e73:	cmp    rbp,r13
  404e76:	mov    QWORD PTR [r13-0x8],rax
  404e7a:	je     404e9a <__gcov_sort_n_vals@@Base+0xb1a>
  404e7c:	mov    edi,0x2
  404e81:	add    r13,0x8
  404e85:	call   403a60 <b64_decode@@Base+0x365>
  404e8a:	test   rax,rax
  404e8d:	jne    404e70 <__gcov_sort_n_vals@@Base+0xaf0>
  404e8f:	xor    eax,eax
  404e91:	cmp    rbp,r13
  404e94:	mov    QWORD PTR [r13-0x8],rax
  404e98:	jne    404e7c <__gcov_sort_n_vals@@Base+0xafc>
  404e9a:	add    DWORD PTR [rsp+0x68],0x1
  404e9f:	add    r14d,0x20000
  404ea6:	add    rbx,0x1
  404eaa:	cmp    r14d,0x1b50000
  404eb1:	jne    404ddb <__gcov_sort_n_vals@@Base+0xa5b>
  404eb7:	mov    r13,QWORD PTR [rsp+0x40]
  404ebc:	mov    rax,QWORD PTR [rsp+0x50]
  404ec1:	mov    QWORD PTR [rsp+0x50],r13
  404ec6:	mov    QWORD PTR [rax],r13
  404ec9:	mov    edi,0x1
  404ece:	call   403a60 <b64_decode@@Base+0x365>
  404ed3:	test   rax,rax
  404ed6:	je     404f80 <__gcov_sort_n_vals@@Base+0xc00>
  404edc:	mov    eax,DWORD PTR [rax]
  404ede:	add    QWORD PTR [rsp+0x48],0x1
  404ee4:	jmp    404cc9 <__gcov_sort_n_vals@@Base+0x949>
  404ee9:	mov    r13,QWORD PTR [rsp+0x40]
  404eee:	lea    rcx,[rip+0x1c61]        # 406b56 <_IO_stdin_used@@Base+0xb56>
  404ef5:	mov    edx,DWORD PTR [rsp+0x64]
  404ef9:	mov    rsi,QWORD PTR [rsp+0x10]
  404efe:	lea    rdi,[rip+0x1beb]        # 406af0 <_IO_stdin_used@@Base+0xaf0>
  404f05:	mov    r8d,ebp
  404f08:	xor    eax,eax
  404f0a:	call   403ae0 <b64_decode@@Base+0x3e5>
  404f0f:	mov    edx,ebx
  404f11:	mov    rsi,r13
  404f14:	mov    rdi,r12
  404f17:	call   403b90 <b64_decode@@Base+0x495>
  404f1c:	test   rax,rax
  404f1f:	mov    QWORD PTR [rsp+0x50],rax
  404f24:	jne    404ec9 <__gcov_sort_n_vals@@Base+0xb49>
  404f26:	mov    ecx,DWORD PTR [rsp+0x88]
  404f2d:	mov    rsi,QWORD PTR [rsp+0x10]
  404f32:	lea    rdx,[rip+0x1ca6]        # 406bdf <_IO_stdin_used@@Base+0xbdf>
  404f39:	lea    rdi,[rip+0x1b88]        # 406ac8 <_IO_stdin_used@@Base+0xac8>
  404f40:	xor    eax,eax
  404f42:	call   403ae0 <b64_decode@@Base+0x3e5>
  404f47:	jmp    404974 <__gcov_sort_n_vals@@Base+0x5f4>
  404f4c:	nop    DWORD PTR [rax+0x0]
  404f50:	xor    edi,edi
  404f52:	xor    r15d,r15d
  404f55:	xor    esi,esi
  404f57:	jmp    404e26 <__gcov_sort_n_vals@@Base+0xaa6>
  404f5c:	mov    ebx,0xffffffff
  404f61:	test   ecx,ecx
  404f63:	je     405737 <__gcov_sort_n_vals@@Base+0x13b7>
  404f69:	mov    ebp,ecx
  404f6b:	lea    rcx,[rip+0x1bd4]        # 406b46 <_IO_stdin_used@@Base+0xb46>
  404f72:	jmp    404ef5 <__gcov_sort_n_vals@@Base+0xb75>
  404f77:	nop    WORD PTR [rax+rax*1+0x0]
  404f80:	xor    eax,eax
  404f82:	jmp    404ede <__gcov_sort_n_vals@@Base+0xb5e>
  404f87:	mov    edi,0x1
  404f8c:	call   403a60 <b64_decode@@Base+0x365>
  404f91:	test   rax,rax
  404f94:	je     404f26 <__gcov_sort_n_vals@@Base+0xba6>
  404f96:	xor    r15d,r15d
  404f99:	mov    eax,DWORD PTR [rax]
  404f9b:	cmp    ebp,r15d
  404f9e:	jne    404f26 <__gcov_sort_n_vals@@Base+0xba6>
  404fa0:	mov    esi,DWORD PTR [rbx]
  404fa2:	lea    edx,[rsi+rsi*1]
  404fa5:	cmp    edx,eax
  404fa7:	jne    404f26 <__gcov_sort_n_vals@@Base+0xba6>
  404fad:	mov    rdi,QWORD PTR [rbx+0x8]
  404fb1:	add    rbx,0x10
  404fb5:	call   r14
  404fb8:	add    ebp,0x20000
  404fbe:	add    r13,0x8
  404fc2:	cmp    ebp,0x1b50000
  404fc8:	jne    4057c9 <__gcov_sort_n_vals@@Base+0x1449>
  404fce:	mov    rax,QWORD PTR [rsp+0x70]
  404fd3:	cmp    QWORD PTR [rax],0x0
  404fd7:	je     404fef <__gcov_sort_n_vals@@Base+0xc6f>
  404fd9:	mov    eax,DWORD PTR [rax+0x18]
  404fdc:	test   eax,eax
  404fde:	je     404ec9 <__gcov_sort_n_vals@@Base+0xb49>
  404fe4:	test   eax,eax
  404fe6:	lea    rdx,[rip+0x1b7a]        # 406b67 <_IO_stdin_used@@Base+0xb67>
  404fed:	js     404ff6 <__gcov_sort_n_vals@@Base+0xc76>
  404fef:	lea    rdx,[rip+0x1b7a]        # 406b70 <_IO_stdin_used@@Base+0xb70>
  404ff6:	mov    rsi,QWORD PTR [rsp+0x10]
  404ffb:	lea    rdi,[rip+0x1be6]        # 406be8 <_IO_stdin_used@@Base+0xbe8>
  405002:	xor    eax,eax
  405004:	call   403ae0 <b64_decode@@Base+0x3e5>
  405009:	jmp    404974 <__gcov_sort_n_vals@@Base+0x5f4>
  40500e:	mov    r15,0x409b20
  405015:	xor    edx,edx
  405017:	xor    esi,esi
  405019:	mov    rdi,QWORD PTR [r15]
  40501c:	mov    DWORD PTR [r15+0x1c],0xffffffff
  405024:	mov    DWORD PTR [r15+0x8],0x0
  40502c:	mov    DWORD PTR [r15+0xc],0x0
  405034:	call   402220 <fseek@plt>
  405039:	mov    rdi,QWORD PTR [rsp+0x30]
  40503e:	xor    eax,eax
  405040:	mov    ecx,0x2f9
  405045:	rep stos QWORD PTR es:[rdi],rax
  405048:	cmp    QWORD PTR [r12+0x20],0x0
  40504e:	je     4055f0 <__gcov_sort_n_vals@@Base+0x1270>
  405054:	mov    DWORD PTR [rsp+0x28],0x0
  40505c:	xor    eax,eax
  40505e:	mov    DWORD PTR [rsp+0x18],0x0
  405066:	mov    r9d,DWORD PTR [rsp+0x6c]
  40506b:	test   r9d,r9d
  40506e:	jne    40507a <__gcov_sort_n_vals@@Base+0xcfa>
  405070:	lea    edx,[rax+0x1]
  405073:	mov    DWORD PTR [rsp+0x186c],edx
  40507a:	test   eax,eax
  40507c:	je     405569 <__gcov_sort_n_vals@@Base+0x11e9>
  405082:	mov    rax,QWORD PTR [rsp+0xa0]
  40508a:	add    QWORD PTR [rsp+0x1870],rax
  405092:	mov    rax,QWORD PTR [rsp+0xa8]
  40509a:	cmp    QWORD PTR [rsp+0x1878],rax
  4050a2:	jl     4056dd <__gcov_sort_n_vals@@Base+0x135d>
  4050a8:	lea    rdi,[rsp+0x3030]
  4050b0:	add    QWORD PTR [rsp+0x1880],rax
  4050b8:	mov    ecx,0x2f4
  4050bd:	xor    eax,eax
  4050bf:	xor    r11d,r11d
  4050c2:	xor    r14d,r14d
  4050c5:	mov    QWORD PTR [rsp+0x40],rdi
  4050ca:	mov    esi,0xfb
  4050cf:	mov    r8d,0xfb
  4050d5:	rep stos QWORD PTR es:[rdi],rax
  4050d8:	mov    rax,QWORD PTR [rsp+0x30]
  4050dd:	xor    edi,edi
  4050df:	lea    rbp,[rax+0x17b0]
  4050e6:	mov    rax,QWORD PTR [rsp+0x8]
  4050eb:	lea    r15,[rax+0x28]
  4050ef:	mov    r10d,DWORD PTR [rbp+0x0]
  4050f3:	mov    rbx,QWORD PTR [rbp+0x10]
  4050f7:	mov    ecx,r14d
  4050fa:	test   r10d,r10d
  4050fd:	je     40548f <__gcov_sort_n_vals@@Base+0x110f>
  405103:	nop    DWORD PTR [rax+rax*1+0x0]
  405108:	test   edi,edi
  40510a:	jne    405400 <__gcov_sort_n_vals@@Base+0x1080>
  405110:	test   esi,esi
  405112:	js     40515a <__gcov_sort_n_vals@@Base+0xdda>
  405114:	movsxd rax,esi
  405117:	lea    rax,[rax+rax*2]
  40511b:	shl    rax,0x3
  40511f:	lea    rdx,[r15+rax*1]
  405123:	mov    edi,DWORD PTR [rdx]
  405125:	test   edi,edi
  405127:	jne    405560 <__gcov_sort_n_vals@@Base+0x11e0>
  40512d:	mov    rdi,QWORD PTR [rsp+0x8]
  405132:	lea    rax,[rdi+rax*1+0x10]
  405137:	jmp    405152 <__gcov_sort_n_vals@@Base+0xdd2>
  405139:	nop    DWORD PTR [rax+0x0]
  405140:	mov    rdx,rax
  405143:	sub    rax,0x18
  405147:	mov    edi,DWORD PTR [rax+0x18]
  40514a:	test   edi,edi
  40514c:	jne    405560 <__gcov_sort_n_vals@@Base+0x11e0>
  405152:	sub    esi,0x1
  405155:	cmp    esi,0xffffffff
  405158:	jne    405140 <__gcov_sort_n_vals@@Base+0xdc0>
  40515a:	movsxd rdx,r8d
  40515d:	movsxd r14,ecx
  405160:	mov    rcx,QWORD PTR [rbp+0x8]
  405164:	lea    rax,[rdx+rdx*2]
  405168:	shl    rax,0x3
  40516c:	add    DWORD PTR [rsp+rax*1+0x3030],r10d
  405174:	add    QWORD PTR [rsp+rax*1+0x3040],rbx
  40517c:	mov    rax,QWORD PTR [rsp+rax*1+0x3038]
  405184:	test   rax,rax
  405187:	je     40518e <__gcov_sort_n_vals@@Base+0xe0e>
  405189:	cmp    rax,rcx
  40518c:	jle    40519a <__gcov_sort_n_vals@@Base+0xe1a>
  40518e:	lea    rax,[rdx+rdx*2]
  405192:	mov    QWORD PTR [rsp+rax*8+0x3038],rcx
  40519a:	lea    rax,[rdx+rdx*2]
  40519e:	mov    rbx,QWORD PTR [rsp+0x30]
  4051a3:	shl    rax,0x3
  4051a7:	lea    rdx,[rbx+rax*1+0x10]
  4051ac:	mov    rbx,QWORD PTR [rsp+0x40]
  4051b1:	lea    rax,[rbx+rax*1-0x18]
  4051b6:	jmp    4051ea <__gcov_sort_n_vals@@Base+0xe6a>
  4051b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4051c0:	mov    ecx,DWORD PTR [rdx]
  4051c2:	add    DWORD PTR [rax],ecx
  4051c4:	mov    rcx,QWORD PTR [rdx+0x10]
  4051c8:	add    QWORD PTR [rax+0x10],rcx
  4051cc:	mov    rcx,QWORD PTR [rax+0x8]
  4051d0:	mov    rsi,QWORD PTR [rdx+0x8]
  4051d4:	test   rcx,rcx
  4051d7:	je     4051de <__gcov_sort_n_vals@@Base+0xe5e>
  4051d9:	cmp    rcx,rsi
  4051dc:	jle    4051e2 <__gcov_sort_n_vals@@Base+0xe62>
  4051de:	mov    QWORD PTR [rax+0x8],rsi
  4051e2:	sub    rdx,0x18
  4051e6:	sub    rax,0x18
  4051ea:	sub    r8d,0x1
  4051ee:	jns    4051c0 <__gcov_sort_n_vals@@Base+0xe40>
  4051f0:	lea    rax,[r14+r14*2]
  4051f4:	lea    rdi,[rsp+0x1888]
  4051fc:	mov    ecx,0x2f4
  405201:	mov    rsi,QWORD PTR [rsp+0x40]
  405206:	add    QWORD PTR [rsp+rax*8+0x3040],r11
  40520e:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  405211:	mov    r8d,DWORD PTR [rsp+0x28]
  405216:	mov    eax,DWORD PTR [rsp+0x60]
  40521a:	test   r8d,r8d
  40521d:	mov    DWORD PTR [rsp+0x1860],eax
  405224:	je     405603 <__gcov_sort_n_vals@@Base+0x1283>
  40522a:	mov    edi,DWORD PTR [rsp+0x18]
  40522e:	test   edi,edi
  405230:	jne    405637 <__gcov_sort_n_vals@@Base+0x12b7>
  405236:	mov    rsi,QWORD PTR [rsp+0x30]
  40523b:	mov    edi,0xa3000000
  405240:	mov    ebx,0xa3000000
  405245:	call   403eb0 <b64_decode@@Base+0x7b5>
  40524a:	mov    rbp,QWORD PTR [rip+0x489f]        # 409af0 <__bss_start@@Base+0x440>
  405251:	test   rbp,rbp
  405254:	je     40527c <__gcov_sort_n_vals@@Base+0xefc>
  405256:	lea    rsi,[rbp+0x8]
  40525a:	mov    edi,ebx
  40525c:	call   403eb0 <b64_decode@@Base+0x7b5>
  405261:	mov    rdi,QWORD PTR [rip+0x4888]        # 409af0 <__bss_start@@Base+0x440>
  405268:	mov    rbp,QWORD PTR [rdi]
  40526b:	call   402050 <free@plt>
  405270:	test   rbp,rbp
  405273:	mov    QWORD PTR [rip+0x4876],rbp        # 409af0 <__bss_start@@Base+0x440>
  40527a:	jne    405256 <__gcov_sort_n_vals@@Base+0xed6>
  40527c:	mov    esi,DWORD PTR [r12+0x70]
  405281:	mov    DWORD PTR [rsp+0x18],0x0
  405289:	test   esi,esi
  40528b:	je     4055db <__gcov_sort_n_vals@@Base+0x125b>
  405291:	mov    QWORD PTR [rsp+0x28],r12
  405296:	jmp    4052e6 <__gcov_sort_n_vals@@Base+0xf66>
  405298:	mov    rbx,QWORD PTR [rsp+0x28]
  40529d:	mov    eax,DWORD PTR [rsp+0x18]
  4052a1:	mov    rdx,QWORD PTR [rbx+0x78]
  4052a5:	mov    rbp,QWORD PTR [rdx+rax*8]
  4052a9:	test   rbp,rbp
  4052ac:	je     4052b8 <__gcov_sort_n_vals@@Base+0xf38>
  4052ae:	cmp    QWORD PTR [rbp+0x0],rbx
  4052b2:	je     4055cb <__gcov_sort_n_vals@@Base+0x124b>
  4052b8:	mov    edi,0x2
  4052bd:	call   403a10 <b64_decode@@Base+0x315>
  4052c2:	mov    DWORD PTR [rax],0x1000000
  4052c8:	mov    DWORD PTR [rax+0x4],0x0
  4052cf:	mov    rbx,QWORD PTR [rsp+0x28]
  4052d4:	add    DWORD PTR [rsp+0x18],0x1
  4052d9:	mov    eax,DWORD PTR [rsp+0x18]
  4052dd:	cmp    eax,DWORD PTR [rbx+0x70]
  4052e0:	je     4055d8 <__gcov_sort_n_vals@@Base+0x1258>
  4052e6:	mov    rbp,QWORD PTR [rip+0x480b]        # 409af8 <__bss_start@@Base+0x448>
  4052ed:	test   rbp,rbp
  4052f0:	je     405298 <__gcov_sort_n_vals@@Base+0xf18>
  4052f2:	mov    eax,DWORD PTR [rsp+0x18]
  4052f6:	cmp    DWORD PTR [rbp+0x8],eax
  4052f9:	jne    405298 <__gcov_sort_n_vals@@Base+0xf18>
  4052fb:	add    rbp,0x10
  4052ff:	mov    DWORD PTR [rsp+0x40],0x1
  405307:	mov    edi,0x2
  40530c:	add    rbp,0x18
  405310:	mov    r13d,0x1a10000
  405316:	call   403a10 <b64_decode@@Base+0x315>
  40531b:	mov    DWORD PTR [rax],0x1000000
  405321:	mov    DWORD PTR [rax+0x4],0x3
  405328:	mov    edi,0x1
  40532d:	mov    ebx,DWORD PTR [rbp-0x10]
  405330:	call   403a10 <b64_decode@@Base+0x315>
  405335:	mov    edi,0x1
  40533a:	mov    DWORD PTR [rax],ebx
  40533c:	mov    ebx,DWORD PTR [rbp-0xc]
  40533f:	call   403a10 <b64_decode@@Base+0x315>
  405344:	mov    edi,0x1
  405349:	mov    DWORD PTR [rax],ebx
  40534b:	mov    ebx,DWORD PTR [rbp-0x8]
  40534e:	call   403a10 <b64_decode@@Base+0x315>
  405353:	mov    DWORD PTR [rax],ebx
  405355:	mov    rax,QWORD PTR [rsp+0x28]
  40535a:	lea    r14,[rax+0x20]
  40535e:	xchg   ax,ax
  405360:	cmp    QWORD PTR [r14],0x0
  405364:	je     4053b4 <__gcov_sort_n_vals@@Base+0x1034>
  405366:	mov    ebx,DWORD PTR [rbp+0x0]
  405369:	mov    edi,0x2
  40536e:	call   403a10 <b64_decode@@Base+0x315>
  405373:	mov    r15,QWORD PTR [rbp+0x8]
  405377:	mov    DWORD PTR [rax],r13d
  40537a:	lea    edx,[rbx+rbx*1]
  40537d:	test   ebx,ebx
  40537f:	mov    DWORD PTR [rax+0x4],edx
  405382:	lea    eax,[rbx-0x1]
  405385:	lea    r12,[r15+rax*8+0x8]
  40538a:	je     4053b0 <__gcov_sort_n_vals@@Base+0x1030>
  40538c:	nop    DWORD PTR [rax+0x0]
  405390:	add    r15,0x8
  405394:	mov    rbx,QWORD PTR [r15-0x8]
  405398:	mov    edi,0x2
  40539d:	call   403a10 <b64_decode@@Base+0x315>
  4053a2:	mov    DWORD PTR [rax],ebx
  4053a4:	sar    rbx,0x20
  4053a8:	cmp    r12,r15
  4053ab:	mov    DWORD PTR [rax+0x4],ebx
  4053ae:	jne    405390 <__gcov_sort_n_vals@@Base+0x1010>
  4053b0:	add    rbp,0x10
  4053b4:	add    r13d,0x20000
  4053bb:	add    r14,0x8
  4053bf:	cmp    r13d,0x1b50000
  4053c6:	jne    405360 <__gcov_sort_n_vals@@Base+0xfe0>
  4053c8:	mov    ecx,DWORD PTR [rsp+0x40]
  4053cc:	test   ecx,ecx
  4053ce:	je     4052cf <__gcov_sort_n_vals@@Base+0xf4f>
  4053d4:	mov    rsi,QWORD PTR [rip+0x471d]        # 409af8 <__bss_start@@Base+0x448>
  4053db:	mov    rdi,QWORD PTR [rsp+0x28]
  4053e0:	mov    edx,0xa
  4053e5:	call   403b90 <b64_decode@@Base+0x495>
  4053ea:	mov    QWORD PTR [rip+0x4707],rax        # 409af8 <__bss_start@@Base+0x448>
  4053f1:	jmp    4052cf <__gcov_sort_n_vals@@Base+0xf4f>
  4053f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405400:	movsxd rax,esi
  405403:	lea    rax,[rax+rax*2]
  405407:	lea    rdx,[r15+rax*8]
  40540b:	mov    r9,QWORD PTR [rdx+0x8]
  40540f:	add    r9,QWORD PTR [rbp+0x8]
  405413:	cmp    r10d,edi
  405416:	ja     405530 <__gcov_sort_n_vals@@Base+0x11b0>
  40541c:	cmp    r10d,edi
  40541f:	jae    4056d2 <__gcov_sort_n_vals@@Base+0x1352>
  405425:	mov    eax,r10d
  405428:	mov    ecx,edi
  40542a:	imul   rax,r11
  40542e:	cqo    
  405430:	idiv   rcx
  405433:	sub    r11,rax
  405436:	sub    edi,r10d
  405439:	mov    r14d,r10d
  40543c:	mov    r13,rbx
  40543f:	xor    r10d,r10d
  405442:	xor    ebx,ebx
  405444:	add    r13,rax
  405447:	test   r9,r9
  40544a:	jne    4054f0 <__gcov_sort_n_vals@@Base+0x1170>
  405450:	mov    ecx,r9d
  405453:	movsxd rdx,ecx
  405456:	lea    rax,[rdx+rdx*2]
  40545a:	shl    rax,0x3
  40545e:	add    DWORD PTR [rsp+rax*1+0x3030],r14d
  405466:	add    QWORD PTR [rsp+rax*1+0x3040],r13
  40546e:	mov    rax,QWORD PTR [rsp+rax*1+0x3038]
  405476:	test   rax,rax
  405479:	je     4054e0 <__gcov_sort_n_vals@@Base+0x1160>
  40547b:	cmp    rax,r9
  40547e:	jg     4054e0 <__gcov_sort_n_vals@@Base+0x1160>
  405480:	cmp    edi,0x1
  405483:	sbb    esi,0x0
  405486:	test   r10d,r10d
  405489:	jne    405108 <__gcov_sort_n_vals@@Base+0xd88>
  40548f:	sub    r8d,0x1
  405493:	sub    rbp,0x18
  405497:	movsxd r14,ecx
  40549a:	cmp    r8d,0xffffffff
  40549e:	jne    4050ef <__gcov_sort_n_vals@@Base+0xd6f>
  4054a4:	cmp    edi,0x1
  4054a7:	adc    esi,0xffffffff
  4054aa:	test   esi,esi
  4054ac:	js     4051f0 <__gcov_sort_n_vals@@Base+0xe70>
  4054b2:	mov    rbx,QWORD PTR [rsp+0x8]
  4054b7:	movsxd rsi,esi
  4054ba:	lea    rax,[rsi+rsi*2]
  4054be:	lea    rdx,[rbx+0x20]
  4054c2:	lea    rax,[rbx+rax*8+0x38]
  4054c7:	add    r11,QWORD PTR [rax]
  4054ca:	sub    rax,0x18
  4054ce:	cmp    rdx,rax
  4054d1:	jne    4054c7 <__gcov_sort_n_vals@@Base+0x1147>
  4054d3:	jmp    4051f0 <__gcov_sort_n_vals@@Base+0xe70>
  4054d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4054e0:	lea    rax,[rdx+rdx*2]
  4054e4:	mov    QWORD PTR [rsp+rax*8+0x3038],r9
  4054ec:	jmp    405480 <__gcov_sort_n_vals@@Base+0x1100>
  4054ee:	xchg   ax,ax
  4054f0:	bsr    rax,r9
  4054f4:	mov    edx,0x3f
  4054f9:	xor    rax,0x3f
  4054fd:	sub    edx,eax
  4054ff:	cmp    edx,0x1
  405502:	jbe    405450 <__gcov_sort_n_vals@@Base+0x10d0>
  405508:	mov    ecx,0x3d
  40550d:	mov    rdx,r9
  405510:	sub    ecx,eax
  405512:	shr    rdx,cl
  405515:	mov    ecx,0x4000003e
  40551a:	and    edx,0x3
  40551d:	sub    ecx,eax
  40551f:	lea    ecx,[rdx+rcx*4]
  405522:	jmp    405453 <__gcov_sort_n_vals@@Base+0x10d3>
  405527:	nop    WORD PTR [rax+rax*1+0x0]
  405530:	mov    eax,edi
  405532:	mov    ecx,r10d
  405535:	mov    r14d,edi
  405538:	imul   rax,rbx
  40553c:	sub    r10d,edi
  40553f:	xor    edi,edi
  405541:	cqo    
  405543:	idiv   rcx
  405546:	mov    r13,rax
  405549:	sub    rbx,rax
  40554c:	mov    rax,r11
  40554f:	xor    r11d,r11d
  405552:	jmp    405444 <__gcov_sort_n_vals@@Base+0x10c4>
  405557:	nop    WORD PTR [rax+rax*1+0x0]
  405560:	mov    r11,QWORD PTR [rdx+0x10]
  405564:	jmp    40540b <__gcov_sort_n_vals@@Base+0x108b>
  405569:	mov    eax,DWORD PTR [rsp+0x98]
  405570:	mov    DWORD PTR [rsp+0x1868],eax
  405577:	mov    rax,QWORD PTR [rsp+0xa0]
  40557f:	add    QWORD PTR [rsp+0x1870],rax
  405587:	mov    rax,QWORD PTR [rsp+0xa8]
  40558f:	cmp    QWORD PTR [rsp+0x1878],rax
  405597:	jge    4055a1 <__gcov_sort_n_vals@@Base+0x1221>
  405599:	mov    QWORD PTR [rsp+0x1878],rax
  4055a1:	add    QWORD PTR [rsp+0x1880],rax
  4055a9:	mov    rax,QWORD PTR [rsp+0x30]
  4055ae:	mov    ecx,0x2f4
  4055b3:	mov    rbx,QWORD PTR [rsp+0x8]
  4055b8:	add    rax,0x28
  4055bc:	lea    rsi,[rbx+0x28]
  4055c0:	mov    rdi,rax
  4055c3:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  4055c6:	jmp    405211 <__gcov_sort_n_vals@@Base+0xe91>
  4055cb:	mov    DWORD PTR [rsp+0x40],0x0
  4055d3:	jmp    405307 <__gcov_sort_n_vals@@Base+0xf87>
  4055d8:	mov    r12,rbx
  4055db:	mov    edi,0x1
  4055e0:	call   403a10 <b64_decode@@Base+0x315>
  4055e5:	mov    DWORD PTR [rax],0x0
  4055eb:	jmp    404974 <__gcov_sort_n_vals@@Base+0x5f4>
  4055f0:	mov    eax,DWORD PTR [rsp+0x60]
  4055f4:	mov    DWORD PTR [rsp+0x18],0x0
  4055fc:	mov    DWORD PTR [rsp+0x1860],eax
  405603:	mov    edi,0x2
  405608:	call   403a10 <b64_decode@@Base+0x315>
  40560d:	mov    edi,0x1
  405612:	mov    DWORD PTR [rax],0x67636461
  405618:	mov    DWORD PTR [rax+0x4],0x3630342a
  40561f:	mov    ebx,DWORD PTR [r12+0x10]
  405624:	call   403a10 <b64_decode@@Base+0x315>
  405629:	mov    edi,DWORD PTR [rsp+0x18]
  40562d:	mov    DWORD PTR [rax],ebx
  40562f:	test   edi,edi
  405631:	je     405236 <__gcov_sort_n_vals@@Base+0xeb6>
  405637:	mov    edi,DWORD PTR [rsp+0x18]
  40563b:	call   404330 <b64_decode@@Base+0xc35>
  405640:	jmp    405236 <__gcov_sort_n_vals@@Base+0xeb6>
  405645:	nop    DWORD PTR [rax]
  405648:	mov    ebp,DWORD PTR [rsp+0x3c]
  40564c:	test   ebp,ebp
  40564e:	je     405697 <__gcov_sort_n_vals@@Base+0x1317>
  405650:	mov    QWORD PTR [rsp+0x20],0x1
  405659:	lea    rbx,[rip+0x1532]        # 406b92 <_IO_stdin_used@@Base+0xb92>
  405660:	jmp    4047e9 <__gcov_sort_n_vals@@Base+0x469>
  405665:	lea    rdi,[rip+0x153a]        # 406ba6 <_IO_stdin_used@@Base+0xba6>
  40566c:	call   402040 <getenv@plt>
  405671:	test   rax,rax
  405674:	mov    rbx,rax
  405677:	je     405697 <__gcov_sort_n_vals@@Base+0x1317>
  405679:	mov    rdi,rax
  40567c:	call   402170 <strlen@plt>
  405681:	test   rax,rax
  405684:	mov    QWORD PTR [rsp+0x20],rax
  405689:	mov    DWORD PTR [rsp+0x3c],0x0
  405691:	jne    4047d2 <__gcov_sort_n_vals@@Base+0x452>
  405697:	mov    rdi,r14
  40569a:	call   402200 <malloc@plt>
  40569f:	mov    DWORD PTR [rsp+0x3c],0x0
  4056a7:	mov    QWORD PTR [rsp+0x10],rax
  4056ac:	mov    QWORD PTR [rsp+0x20],0x0
  4056b5:	jmp    40480a <__gcov_sort_n_vals@@Base+0x48a>
  4056ba:	mov    DWORD PTR [rsp+0x18],r13d
  4056bf:	jmp    404caf <__gcov_sort_n_vals@@Base+0x92f>
  4056c4:	xor    esi,esi
  4056c6:	jmp    404b95 <__gcov_sort_n_vals@@Base+0x815>
  4056cb:	xor    eax,eax
  4056cd:	jmp    404bc9 <__gcov_sort_n_vals@@Base+0x849>
  4056d2:	mov    rax,r11
  4056d5:	xor    r11d,r11d
  4056d8:	jmp    405436 <__gcov_sort_n_vals@@Base+0x10b6>
  4056dd:	mov    QWORD PTR [rsp+0x1878],rax
  4056e5:	jmp    4050a8 <__gcov_sort_n_vals@@Base+0xd28>
  4056ea:	call   402090 <abort@plt>
  4056ef:	test   rax,rax
  4056f2:	je     405648 <__gcov_sort_n_vals@@Base+0x12c8>
  4056f8:	mov    QWORD PTR [rsp+0x20],rax
  4056fd:	jmp    4047e9 <__gcov_sort_n_vals@@Base+0x469>
  405702:	mov    DWORD PTR [rsp+0x98],r12d
  40570a:	jmp    40460a <__gcov_sort_n_vals@@Base+0x28a>
  40570f:	mov    rbx,QWORD PTR [rbx+0x8]
  405713:	mov    QWORD PTR [rsp+0xa8],rsi
  40571b:	test   rbx,rbx
  40571e:	jne    40445e <__gcov_sort_n_vals@@Base+0xde>
  405724:	jmp    40462d <__gcov_sort_n_vals@@Base+0x2ad>
  405729:	mov    r14d,0x2
  40572f:	xor    r15d,r15d
  405732:	jmp    404772 <__gcov_sort_n_vals@@Base+0x3f2>
  405737:	mov    ebp,ebx
  405739:	lea    rcx,[rip+0x1416]        # 406b56 <_IO_stdin_used@@Base+0xb56>
  405740:	jmp    404ef5 <__gcov_sort_n_vals@@Base+0xb75>
  405745:	mov    ecx,r15d
  405748:	mov    r13,QWORD PTR [rsp+0x40]
  40574d:	mov    ebx,ebp
  40574f:	jmp    404f61 <__gcov_sort_n_vals@@Base+0xbe1>
  405754:	xor    eax,eax
  405756:	jmp    404dc2 <__gcov_sort_n_vals@@Base+0xa42>
  40575b:	xor    eax,eax
  40575d:	jmp    404da9 <__gcov_sort_n_vals@@Base+0xa29>
  405762:	xor    eax,eax
  405764:	jmp    404d90 <__gcov_sort_n_vals@@Base+0xa10>
  405769:	mov    edi,0x1
  40576e:	call   403a60 <b64_decode@@Base+0x365>
  405773:	test   rax,rax
  405776:	je     40580e <__gcov_sort_n_vals@@Base+0x148e>
  40577c:	mov    eax,DWORD PTR [rax]
  40577e:	cmp    DWORD PTR [rbx+0x8],eax
  405781:	jne    404f26 <__gcov_sort_n_vals@@Base+0xba6>
  405787:	mov    edi,0x1
  40578c:	call   403a60 <b64_decode@@Base+0x365>
  405791:	test   rax,rax
  405794:	je     40580a <__gcov_sort_n_vals@@Base+0x148a>
  405796:	mov    eax,DWORD PTR [rax]
  405798:	cmp    DWORD PTR [rbx+0xc],eax
  40579b:	jne    404f26 <__gcov_sort_n_vals@@Base+0xba6>
  4057a1:	mov    edi,0x1
  4057a6:	call   403a60 <b64_decode@@Base+0x365>
  4057ab:	test   rax,rax
  4057ae:	je     405806 <__gcov_sort_n_vals@@Base+0x1486>
  4057b0:	mov    eax,DWORD PTR [rax]
  4057b2:	cmp    DWORD PTR [rbx+0x10],eax
  4057b5:	jne    404f26 <__gcov_sort_n_vals@@Base+0xba6>
  4057bb:	lea    r13,[r12+0x20]
  4057c0:	add    rbx,0x18
  4057c4:	mov    ebp,0x1a10000
  4057c9:	mov    r14,QWORD PTR [r13+0x0]
  4057cd:	test   r14,r14
  4057d0:	je     404fb8 <__gcov_sort_n_vals@@Base+0xc38>
  4057d6:	mov    edi,0x1
  4057db:	call   403a60 <b64_decode@@Base+0x365>
  4057e0:	test   rax,rax
  4057e3:	je     404f87 <__gcov_sort_n_vals@@Base+0xc07>
  4057e9:	mov    edi,0x1
  4057ee:	mov    r15d,DWORD PTR [rax]
  4057f1:	call   403a60 <b64_decode@@Base+0x365>
  4057f6:	test   rax,rax
  4057f9:	jne    404f99 <__gcov_sort_n_vals@@Base+0xc19>
  4057ff:	xor    eax,eax
  405801:	jmp    404f9b <__gcov_sort_n_vals@@Base+0xc1b>
  405806:	xor    eax,eax
  405808:	jmp    4057b2 <__gcov_sort_n_vals@@Base+0x1432>
  40580a:	xor    eax,eax
  40580c:	jmp    405798 <__gcov_sort_n_vals@@Base+0x1418>
  40580e:	xor    eax,eax
  405810:	jmp    40577e <__gcov_sort_n_vals@@Base+0x13fe>
  405815:	test   eax,eax
  405817:	mov    r15,QWORD PTR [rsp+0x70]
  40581c:	jne    404f26 <__gcov_sort_n_vals@@Base+0xba6>
  405822:	mov    rdi,QWORD PTR [r15]
  405825:	xor    edx,edx
  405827:	xor    esi,esi
  405829:	mov    DWORD PTR [r15+0x1c],0xffffffff
  405831:	mov    DWORD PTR [r15+0x8],0x0
  405839:	mov    DWORD PTR [r15+0xc],0x0
  405841:	call   402220 <fseek@plt>
  405846:	mov    r10d,DWORD PTR [rsp+0x18]
  40584b:	test   r10d,r10d
  40584e:	je     40588c <__gcov_sort_n_vals@@Base+0x150c>
  405850:	cmp    QWORD PTR [r12+0x20],0x0
  405856:	mov    eax,DWORD PTR [rsp+0x186c]
  40585d:	jne    405066 <__gcov_sort_n_vals@@Base+0xce6>
  405863:	test   eax,eax
  405865:	jne    4058be <__gcov_sort_n_vals@@Base+0x153e>
  405867:	mov    eax,DWORD PTR [rsp+0x60]
  40586b:	mov    DWORD PTR [rsp+0x1860],eax
  405872:	mov    eax,DWORD PTR [rsp+0x28]
  405876:	test   eax,eax
  405878:	je     405603 <__gcov_sort_n_vals@@Base+0x1283>
  40587e:	mov    edi,DWORD PTR [rsp+0x18]
  405882:	call   404330 <b64_decode@@Base+0xc35>
  405887:	jmp    405236 <__gcov_sort_n_vals@@Base+0xeb6>
  40588c:	mov    rdi,QWORD PTR [rsp+0x30]
  405891:	xor    eax,eax
  405893:	mov    ecx,0x2f9
  405898:	rep stos QWORD PTR es:[rdi],rax
  40589b:	mov    eax,DWORD PTR [rsp+0x28]
  40589f:	cmp    QWORD PTR [r12+0x20],0x0
  4058a5:	je     4058d6 <__gcov_sort_n_vals@@Base+0x1556>
  4058a7:	mov    edx,DWORD PTR [rsp+0x6c]
  4058ab:	mov    DWORD PTR [rsp+0x18],eax
  4058af:	test   edx,edx
  4058b1:	jne    405569 <__gcov_sort_n_vals@@Base+0x11e9>
  4058b7:	xor    eax,eax
  4058b9:	jmp    405070 <__gcov_sort_n_vals@@Base+0xcf0>
  4058be:	mov    rsi,QWORD PTR [rsp+0x10]
  4058c3:	lea    rdi,[rip+0x124e]        # 406b18 <_IO_stdin_used@@Base+0xb18>
  4058ca:	xor    eax,eax
  4058cc:	call   403ae0 <b64_decode@@Base+0x3e5>
  4058d1:	jmp    404974 <__gcov_sort_n_vals@@Base+0x5f4>
  4058d6:	mov    DWORD PTR [rsp+0x18],eax
  4058da:	jmp    405211 <__gcov_sort_n_vals@@Base+0xe91>
  4058df:	nop
  4058e0:	movzx  esi,BYTE PTR [rip+0x4221]        # 409b08 <__bss_start@@Base+0x458>
  4058e7:	test   sil,0x1
  4058eb:	je     405918 <__gcov_sort_n_vals@@Base+0x1598>
  4058ed:	mov    rax,QWORD PTR [rip+0x421c]        # 409b10 <__bss_start@@Base+0x460>
  4058f4:	test   rax,rax
  4058f7:	je     405904 <__gcov_sort_n_vals@@Base+0x1584>
  4058f9:	mov    rdx,QWORD PTR [rip+0x4218]        # 409b18 <__bss_start@@Base+0x468>
  405900:	mov    QWORD PTR [rax+0x18],rdx
  405904:	mov    rdx,QWORD PTR [rip+0x420d]        # 409b18 <__bss_start@@Base+0x468>
  40590b:	test   rdx,rdx
  40590e:	je     405968 <__gcov_sort_n_vals@@Base+0x15e8>
  405910:	mov    QWORD PTR [rdx+0x10],rax
  405914:	ret    
  405915:	nop    DWORD PTR [rax]
  405918:	sub    rsp,0x8
  40591c:	mov    rdi,QWORD PTR [rip+0x41dd]        # 409b00 <__bss_start@@Base+0x450>
  405923:	shr    sil,1
  405926:	and    esi,0x1
  405929:	call   404410 <__gcov_sort_n_vals@@Base+0x90>
  40592e:	mov    rax,QWORD PTR [rip+0x41db]        # 409b10 <__bss_start@@Base+0x460>
  405935:	or     BYTE PTR [rip+0x41cc],0x3        # 409b08 <__bss_start@@Base+0x458>
  40593c:	test   rax,rax
  40593f:	je     40594c <__gcov_sort_n_vals@@Base+0x15cc>
  405941:	mov    rdx,QWORD PTR [rip+0x41d0]        # 409b18 <__bss_start@@Base+0x468>
  405948:	mov    QWORD PTR [rax+0x18],rdx
  40594c:	mov    rdx,QWORD PTR [rip+0x41c5]        # 409b18 <__bss_start@@Base+0x468>
  405953:	test   rdx,rdx
  405956:	je     405978 <__gcov_sort_n_vals@@Base+0x15f8>
  405958:	mov    QWORD PTR [rdx+0x10],rax
  40595c:	add    rsp,0x8
  405960:	ret    
  405961:	nop    DWORD PTR [rax+0x0]
  405968:	mov    rdx,0x4096a0
  40596f:	mov    QWORD PTR [rdx+0x8],rax
  405973:	ret    
  405974:	nop    DWORD PTR [rax+0x0]
  405978:	mov    rdx,0x4096a0
  40597f:	mov    QWORD PTR [rdx+0x8],rax
  405983:	jmp    40595c <__gcov_sort_n_vals@@Base+0x15dc>
  405985:	nop
  405986:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405990:	movzx  esi,BYTE PTR [rdi+0x8]
  405994:	test   sil,0x1
  405998:	je     4059a0 <__gcov_sort_n_vals@@Base+0x1620>
  40599a:	ret    
  40599b:	nop    DWORD PTR [rax+rax*1+0x0]
  4059a0:	push   rbx
  4059a1:	mov    rbx,rdi
  4059a4:	mov    rdi,QWORD PTR [rdi]
  4059a7:	shr    sil,1
  4059aa:	and    esi,0x1
  4059ad:	call   404410 <__gcov_sort_n_vals@@Base+0x90>
  4059b2:	or     BYTE PTR [rbx+0x8],0x3
  4059b6:	pop    rbx
  4059b7:	ret    
  4059b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4059c0:	mov    esi,DWORD PTR [rdi]
  4059c2:	test   esi,esi
  4059c4:	je     4059cd <__gcov_sort_n_vals@@Base+0x164d>
  4059c6:	mov    eax,DWORD PTR [rdi+0x70]
  4059c9:	test   eax,eax
  4059cb:	jne    4059d0 <__gcov_sort_n_vals@@Base+0x1650>
  4059cd:	ret    
  4059ce:	xchg   ax,ax
  4059d0:	push   r12
  4059d2:	push   rbp
  4059d3:	xor    edx,edx
  4059d5:	push   rbx
  4059d6:	mov    rbx,rdi
  4059d9:	lea    rdi,[rdi+0x18]
  4059dd:	call   403c00 <b64_decode@@Base+0x505>
  4059e2:	test   eax,eax
  4059e4:	je     405a04 <__gcov_sort_n_vals@@Base+0x1684>
  4059e6:	mov    rax,QWORD PTR [rip+0x4113]        # 409b00 <__bss_start@@Base+0x450>
  4059ed:	lea    rbp,[rip+0x410c]        # 409b00 <__bss_start@@Base+0x450>
  4059f4:	test   rax,rax
  4059f7:	je     405a09 <__gcov_sort_n_vals@@Base+0x1689>
  4059f9:	mov    QWORD PTR [rbx+0x8],rax
  4059fd:	mov    QWORD PTR [rip+0x40fc],rbx        # 409b00 <__bss_start@@Base+0x450>
  405a04:	pop    rbx
  405a05:	pop    rbp
  405a06:	pop    r12
  405a08:	ret    
  405a09:	mov    r12,0x4096a0
  405a10:	lea    rdx,[rip+0x11ea]        # 406c01 <_IO_stdin_used@@Base+0xc01>
  405a17:	mov    edi,0x18
  405a1c:	mov    esi,DWORD PTR [r12]
  405a20:	call   403c00 <b64_decode@@Base+0x505>
  405a25:	test   eax,eax
  405a27:	je     405a43 <__gcov_sort_n_vals@@Base+0x16c3>
  405a29:	mov    rax,QWORD PTR [r12+0x8]
  405a2e:	test   rax,rax
  405a31:	mov    QWORD PTR [rip+0x40d8],rax        # 409b10 <__bss_start@@Base+0x460>
  405a38:	je     405a3e <__gcov_sort_n_vals@@Base+0x16be>
  405a3a:	mov    QWORD PTR [rax+0x18],rbp
  405a3e:	mov    QWORD PTR [r12+0x8],rbp
  405a43:	lea    rdi,[rip+0xfffffffffffffe96]        # 4058e0 <__gcov_sort_n_vals@@Base+0x1560>
  405a4a:	call   405b40 <__libc_csu_fini@@Base+0x10>
  405a4f:	mov    rax,QWORD PTR [rip+0x40aa]        # 409b00 <__bss_start@@Base+0x450>
  405a56:	jmp    4059f9 <__gcov_sort_n_vals@@Base+0x1679>
  405a58:	nop    DWORD PTR [rax+rax*1+0x0]
  405a60:	mov    rax,rdi
  405a63:	movabs rdx,0x5555555555555555
  405a6d:	shr    rax,1
  405a70:	and    rax,rdx
  405a73:	movabs rdx,0x3333333333333333
  405a7d:	sub    rdi,rax
  405a80:	mov    rax,rdi
  405a83:	shr    rdi,0x2
  405a87:	and    rax,rdx
  405a8a:	and    rdi,rdx
  405a8d:	movabs rdx,0xf0f0f0f0f0f0f0f
  405a97:	add    rdi,rax
  405a9a:	mov    rax,rdi
  405a9d:	shr    rax,0x4
  405aa1:	add    rax,rdi
  405aa4:	and    rax,rdx
  405aa7:	movabs rdx,0x101010101010101
  405ab1:	imul   rax,rdx
  405ab5:	shr    rax,0x38
  405ab9:	ret    
  405aba:	nop    WORD PTR [rax+rax*1+0x0]

0000000000405ac0 <__libc_csu_init@@Base>:
  405ac0:	endbr64 
  405ac4:	push   r15
  405ac6:	lea    r15,[rip+0x330b]        # 408dd8 <_IO_stdin_used@@Base+0x2dd8>
  405acd:	push   r14
  405acf:	mov    r14,rdx
  405ad2:	push   r13
  405ad4:	mov    r13,rsi
  405ad7:	push   r12
  405ad9:	mov    r12d,edi
  405adc:	push   rbp
  405add:	lea    rbp,[rip+0x3314]        # 408df8 <_IO_stdin_used@@Base+0x2df8>
  405ae4:	push   rbx
  405ae5:	sub    rbp,r15
  405ae8:	sub    rsp,0x8
  405aec:	call   402000 <CU_basic_set_mode@plt-0x30>
  405af1:	sar    rbp,0x3
  405af5:	je     405b16 <__libc_csu_init@@Base+0x56>
  405af7:	xor    ebx,ebx
  405af9:	nop    DWORD PTR [rax+0x0]
  405b00:	mov    rdx,r14
  405b03:	mov    rsi,r13
  405b06:	mov    edi,r12d
  405b09:	call   QWORD PTR [r15+rbx*8]
  405b0d:	add    rbx,0x1
  405b11:	cmp    rbp,rbx
  405b14:	jne    405b00 <__libc_csu_init@@Base+0x40>
  405b16:	add    rsp,0x8
  405b1a:	pop    rbx
  405b1b:	pop    rbp
  405b1c:	pop    r12
  405b1e:	pop    r13
  405b20:	pop    r14
  405b22:	pop    r15
  405b24:	ret    
  405b25:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000405b30 <__libc_csu_fini@@Base>:
  405b30:	endbr64 
  405b34:	ret    
  405b35:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405b3f:	nop
  405b40:	endbr64 
  405b44:	mov    rdx,QWORD PTR [rip+0x361d]        # 409168 <__data_start@@Base+0x8>
  405b4b:	xor    esi,esi
  405b4d:	jmp    402270 <__cxa_atexit@plt>

Disassembly of section .fini:

0000000000405b54 <.fini>:
  405b54:	endbr64 
  405b58:	sub    rsp,0x8
  405b5c:	add    rsp,0x8
  405b60:	ret    
