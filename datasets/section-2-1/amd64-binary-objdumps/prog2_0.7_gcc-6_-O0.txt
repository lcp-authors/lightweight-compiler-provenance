
../repos/prog2/0.7:     file format elf64-x86-64


Disassembly of section .init:

0000000000401000 <.init>:
  401000:	endbr64 
  401004:	sub    rsp,0x8
  401008:	mov    rax,QWORD PTR [rip+0x2fe9]        # 403ff8 <__gmon_start__>
  40100f:	test   rax,rax
  401012:	je     401016 <__stack_chk_fail@plt-0x1a>
  401014:	call   rax
  401016:	add    rsp,0x8
  40101a:	ret    

Disassembly of section .plt:

0000000000401020 <__stack_chk_fail@plt-0x10>:
  401020:	push   QWORD PTR [rip+0x2fe2]        # 404008 <_IO_stdin_used@@Base+0x2008>
  401026:	jmp    QWORD PTR [rip+0x2fe4]        # 404010 <_IO_stdin_used@@Base+0x2010>
  40102c:	nop    DWORD PTR [rax+0x0]

0000000000401030 <__stack_chk_fail@plt>:
  401030:	jmp    QWORD PTR [rip+0x2fe2]        # 404018 <__stack_chk_fail@GLIBC_2.4>
  401036:	push   0x0
  40103b:	jmp    401020 <__stack_chk_fail@plt-0x10>

0000000000401040 <printf@plt>:
  401040:	jmp    QWORD PTR [rip+0x2fda]        # 404020 <printf@GLIBC_2.2.5>
  401046:	push   0x1
  40104b:	jmp    401020 <__stack_chk_fail@plt-0x10>

0000000000401050 <__isoc99_scanf@plt>:
  401050:	jmp    QWORD PTR [rip+0x2fd2]        # 404028 <__isoc99_scanf@GLIBC_2.7>
  401056:	push   0x2
  40105b:	jmp    401020 <__stack_chk_fail@plt-0x10>

Disassembly of section .text:

0000000000401060 <_start@@Base>:
  401060:	endbr64 
  401064:	xor    ebp,ebp
  401066:	mov    r9,rdx
  401069:	pop    rsi
  40106a:	mov    rdx,rsp
  40106d:	and    rsp,0xfffffffffffffff0
  401071:	push   rax
  401072:	push   rsp
  401073:	mov    r8,0x4013e0
  40107a:	mov    rcx,0x401370
  401081:	mov    rdi,0x4012e0
  401088:	call   QWORD PTR [rip+0x2f62]        # 403ff0 <__libc_start_main@GLIBC_2.2.5>
  40108e:	hlt    
  40108f:	nop
  401090:	endbr64 
  401094:	ret    
  401095:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40109f:	nop
  4010a0:	mov    eax,0x404047
  4010a5:	push   rbp
  4010a6:	sub    rax,0x404040
  4010ac:	cmp    rax,0xe
  4010b0:	mov    rbp,rsp
  4010b3:	jbe    4010d0 <_start@@Base+0x70>
  4010b5:	mov    eax,0x0
  4010ba:	test   rax,rax
  4010bd:	je     4010d0 <_start@@Base+0x70>
  4010bf:	pop    rbp
  4010c0:	mov    edi,0x404040
  4010c5:	jmp    rax
  4010c7:	nop    WORD PTR [rax+rax*1+0x0]
  4010d0:	pop    rbp
  4010d1:	ret    
  4010d2:	nop    DWORD PTR [rax+0x0]
  4010d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4010e0:	mov    esi,0x404040
  4010e5:	push   rbp
  4010e6:	sub    rsi,0x404040
  4010ed:	sar    rsi,0x3
  4010f1:	mov    rbp,rsp
  4010f4:	mov    rax,rsi
  4010f7:	shr    rax,0x3f
  4010fb:	add    rsi,rax
  4010fe:	sar    rsi,1
  401101:	je     401118 <_start@@Base+0xb8>
  401103:	mov    eax,0x0
  401108:	test   rax,rax
  40110b:	je     401118 <_start@@Base+0xb8>
  40110d:	pop    rbp
  40110e:	mov    edi,0x404040
  401113:	jmp    rax
  401115:	nop    DWORD PTR [rax]
  401118:	pop    rbp
  401119:	ret    
  40111a:	nop    WORD PTR [rax+rax*1+0x0]
  401120:	cmp    BYTE PTR [rip+0x2f19],0x0        # 404040 <__bss_start@@Base>
  401127:	jne    40113a <_start@@Base+0xda>
  401129:	push   rbp
  40112a:	mov    rbp,rsp
  40112d:	call   4010a0 <_start@@Base+0x40>
  401132:	pop    rbp
  401133:	mov    BYTE PTR [rip+0x2f06],0x1        # 404040 <__bss_start@@Base>
  40113a:	repz ret 
  40113c:	nop    DWORD PTR [rax+0x0]
  401140:	mov    edi,0x403e18
  401145:	cmp    QWORD PTR [rdi],0x0
  401149:	jne    401150 <_start@@Base+0xf0>
  40114b:	jmp    4010e0 <_start@@Base+0x80>
  40114d:	nop    DWORD PTR [rax]
  401150:	mov    eax,0x0
  401155:	test   rax,rax
  401158:	je     40114b <_start@@Base+0xeb>
  40115a:	push   rbp
  40115b:	mov    rbp,rsp
  40115e:	call   rax
  401160:	pop    rbp
  401161:	jmp    4010e0 <_start@@Base+0x80>

0000000000401166 <media@@Base>:
  401166:	push   rbp
  401167:	mov    rbp,rsp
  40116a:	mov    QWORD PTR [rbp-0x18],rdi
  40116e:	mov    DWORD PTR [rbp-0x1c],esi
  401171:	vxorps xmm0,xmm0,xmm0
  401175:	vmovss DWORD PTR [rbp-0x4],xmm0
  40117a:	mov    DWORD PTR [rbp-0x8],0x0
  401181:	jmp    401214 <media@@Base+0xae>
  401186:	mov    eax,DWORD PTR [rbp-0x8]
  401189:	cdqe   
  40118b:	lea    rdx,[rax*4+0x0]
  401193:	mov    rax,QWORD PTR [rbp-0x18]
  401197:	add    rax,rdx
  40119a:	vmovss xmm0,DWORD PTR [rax]
  40119e:	vcvtss2sd xmm0,xmm0,xmm0
  4011a2:	vucomisd xmm0,QWORD PTR [rip+0xe8e]        # 402038 <_IO_stdin_used@@Base+0x38>
  4011aa:	jb     4011ea <media@@Base+0x84>
  4011ac:	mov    eax,DWORD PTR [rbp-0x8]
  4011af:	cdqe   
  4011b1:	lea    rdx,[rax*4+0x0]
  4011b9:	mov    rax,QWORD PTR [rbp-0x18]
  4011bd:	add    rax,rdx
  4011c0:	vmovss xmm1,DWORD PTR [rax]
  4011c4:	vmovss xmm0,DWORD PTR [rip+0xe74]        # 402040 <_IO_stdin_used@@Base+0x40>
  4011cc:	vucomiss xmm0,xmm1
  4011d0:	jbe    4011ea <media@@Base+0x84>
  4011d2:	vmovss xmm1,DWORD PTR [rbp-0x4]
  4011d7:	vmovss xmm0,DWORD PTR [rip+0xe61]        # 402040 <_IO_stdin_used@@Base+0x40>
  4011df:	vaddss xmm0,xmm1,xmm0
  4011e3:	vmovss DWORD PTR [rbp-0x4],xmm0
  4011e8:	jmp    401210 <media@@Base+0xaa>
  4011ea:	mov    eax,DWORD PTR [rbp-0x8]
  4011ed:	cdqe   
  4011ef:	lea    rdx,[rax*4+0x0]
  4011f7:	mov    rax,QWORD PTR [rbp-0x18]
  4011fb:	add    rax,rdx
  4011fe:	vmovss xmm0,DWORD PTR [rax]
  401202:	vmovss xmm1,DWORD PTR [rbp-0x4]
  401207:	vaddss xmm0,xmm1,xmm0
  40120b:	vmovss DWORD PTR [rbp-0x4],xmm0
  401210:	add    DWORD PTR [rbp-0x8],0x1
  401214:	mov    eax,DWORD PTR [rbp-0x8]
  401217:	cmp    eax,DWORD PTR [rbp-0x1c]
  40121a:	jl     401186 <media@@Base+0x20>
  401220:	vxorps xmm0,xmm0,xmm0
  401224:	vcvtsi2ss xmm0,xmm0,DWORD PTR [rbp-0x1c]
  401229:	vmovss xmm1,DWORD PTR [rbp-0x4]
  40122e:	vdivss xmm0,xmm1,xmm0
  401232:	pop    rbp
  401233:	ret    

0000000000401234 <lernotas@@Base>:
  401234:	push   rbp
  401235:	mov    rbp,rsp
  401238:	sub    rsp,0x30
  40123c:	mov    QWORD PTR [rbp-0x28],rdi
  401240:	mov    rax,QWORD PTR fs:0x28
  401249:	mov    QWORD PTR [rbp-0x8],rax
  40124d:	xor    eax,eax
  40124f:	mov    DWORD PTR [rbp-0xc],0x0
  401256:	jmp    4012a6 <lernotas@@Base+0x72>
  401258:	mov    eax,DWORD PTR [rbp-0xc]
  40125b:	cdqe   
  40125d:	lea    rdx,[rax*4+0x0]
  401265:	mov    rax,QWORD PTR [rbp-0x28]
  401269:	add    rax,rdx
  40126c:	vmovss xmm0,DWORD PTR [rbp-0x14]
  401271:	vcvtss2sd xmm0,xmm0,xmm0
  401275:	vmovsd xmm1,QWORD PTR [rip+0xdcb]        # 402048 <_IO_stdin_used@@Base+0x48>
  40127d:	vmulsd xmm1,xmm0,xmm1
  401281:	vmovss xmm0,DWORD PTR [rbp-0x10]
  401286:	vcvtss2sd xmm0,xmm0,xmm0
  40128a:	vmovsd xmm2,QWORD PTR [rip+0xdbe]        # 402050 <_IO_stdin_used@@Base+0x50>
  401292:	vmulsd xmm0,xmm0,xmm2
  401296:	vaddsd xmm0,xmm1,xmm0
  40129a:	vcvtsd2ss xmm0,xmm0,xmm0
  40129e:	vmovss DWORD PTR [rax],xmm0
  4012a2:	add    DWORD PTR [rbp-0xc],0x1
  4012a6:	lea    rdx,[rbp-0x10]
  4012aa:	lea    rax,[rbp-0x14]
  4012ae:	mov    rsi,rax
  4012b1:	lea    rdi,[rip+0xd50]        # 402008 <_IO_stdin_used@@Base+0x8>
  4012b8:	mov    eax,0x0
  4012bd:	call   401050 <__isoc99_scanf@plt>
  4012c2:	cmp    eax,0x2
  4012c5:	je     401258 <lernotas@@Base+0x24>
  4012c7:	mov    eax,DWORD PTR [rbp-0xc]
  4012ca:	mov    rcx,QWORD PTR [rbp-0x8]
  4012ce:	xor    rcx,QWORD PTR fs:0x28
  4012d7:	je     4012de <lernotas@@Base+0xaa>
  4012d9:	call   401030 <__stack_chk_fail@plt>
  4012de:	leave  
  4012df:	ret    

00000000004012e0 <main@@Base>:
  4012e0:	push   rbp
  4012e1:	mov    rbp,rsp
  4012e4:	sub    rsp,0x1b0
  4012eb:	mov    rax,QWORD PTR fs:0x28
  4012f4:	mov    QWORD PTR [rbp-0x8],rax
  4012f8:	xor    eax,eax
  4012fa:	lea    rdx,[rbp-0x1a0]
  401301:	mov    eax,0x0
  401306:	mov    ecx,0x32
  40130b:	mov    rdi,rdx
  40130e:	rep stos QWORD PTR es:[rdi],rax
  401311:	lea    rax,[rbp-0x1a0]
  401318:	mov    rdi,rax
  40131b:	call   401234 <lernotas@@Base>
  401320:	mov    DWORD PTR [rbp-0x1a4],eax
  401326:	mov    edx,DWORD PTR [rbp-0x1a4]
  40132c:	lea    rax,[rbp-0x1a0]
  401333:	mov    esi,edx
  401335:	mov    rdi,rax
  401338:	call   401166 <media@@Base>
  40133d:	vcvtss2sd xmm0,xmm0,xmm0
  401341:	lea    rdi,[rip+0xcc8]        # 402010 <_IO_stdin_used@@Base+0x10>
  401348:	mov    eax,0x1
  40134d:	call   401040 <printf@plt>
  401352:	mov    eax,0x0
  401357:	mov    rsi,QWORD PTR [rbp-0x8]
  40135b:	xor    rsi,QWORD PTR fs:0x28
  401364:	je     40136b <main@@Base+0x8b>
  401366:	call   401030 <__stack_chk_fail@plt>
  40136b:	leave  
  40136c:	ret    
  40136d:	nop    DWORD PTR [rax]

0000000000401370 <__libc_csu_init@@Base>:
  401370:	endbr64 
  401374:	push   r15
  401376:	lea    r15,[rip+0x2a8b]        # 403e08 <_IO_stdin_used@@Base+0x1e08>
  40137d:	push   r14
  40137f:	mov    r14,rdx
  401382:	push   r13
  401384:	mov    r13,rsi
  401387:	push   r12
  401389:	mov    r12d,edi
  40138c:	push   rbp
  40138d:	lea    rbp,[rip+0x2a7c]        # 403e10 <_IO_stdin_used@@Base+0x1e10>
  401394:	push   rbx
  401395:	sub    rbp,r15
  401398:	sub    rsp,0x8
  40139c:	call   401000 <__stack_chk_fail@plt-0x30>
  4013a1:	sar    rbp,0x3
  4013a5:	je     4013c6 <__libc_csu_init@@Base+0x56>
  4013a7:	xor    ebx,ebx
  4013a9:	nop    DWORD PTR [rax+0x0]
  4013b0:	mov    rdx,r14
  4013b3:	mov    rsi,r13
  4013b6:	mov    edi,r12d
  4013b9:	call   QWORD PTR [r15+rbx*8]
  4013bd:	add    rbx,0x1
  4013c1:	cmp    rbp,rbx
  4013c4:	jne    4013b0 <__libc_csu_init@@Base+0x40>
  4013c6:	add    rsp,0x8
  4013ca:	pop    rbx
  4013cb:	pop    rbp
  4013cc:	pop    r12
  4013ce:	pop    r13
  4013d0:	pop    r14
  4013d2:	pop    r15
  4013d4:	ret    
  4013d5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

00000000004013e0 <__libc_csu_fini@@Base>:
  4013e0:	endbr64 
  4013e4:	ret    

Disassembly of section .fini:

00000000004013e8 <.fini>:
  4013e8:	endbr64 
  4013ec:	sub    rsp,0x8
  4013f0:	add    rsp,0x8
  4013f4:	ret    
