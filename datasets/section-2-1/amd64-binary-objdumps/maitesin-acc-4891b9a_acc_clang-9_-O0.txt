
../repos/maitesin-acc-4891b9a/bin/acc:     file format elf64-x86-64


Disassembly of section .init:

0000000000403000 <.init>:
  403000:	endbr64 
  403004:	sub    rsp,0x8
  403008:	mov    rax,QWORD PTR [rip+0xffd9]        # 412fe8 <__gmon_start__>
  40300f:	test   rax,rax
  403012:	je     403016 <getenv@plt-0x1a>
  403014:	call   rax
  403016:	add    rsp,0x8
  40301a:	ret    

Disassembly of section .plt:

0000000000403020 <getenv@plt-0x10>:
  403020:	push   QWORD PTR [rip+0xffe2]        # 413008 <_IO_stdin_used@@Base+0x5008>
  403026:	jmp    QWORD PTR [rip+0xffe4]        # 413010 <_IO_stdin_used@@Base+0x5010>
  40302c:	nop    DWORD PTR [rax+0x0]

0000000000403030 <getenv@plt>:
  403030:	jmp    QWORD PTR [rip+0xffe2]        # 413018 <getenv@GLIBC_2.2.5>
  403036:	push   0x0
  40303b:	jmp    403020 <getenv@plt-0x10>

0000000000403040 <free@plt>:
  403040:	jmp    QWORD PTR [rip+0xffda]        # 413020 <free@GLIBC_2.2.5>
  403046:	push   0x1
  40304b:	jmp    403020 <getenv@plt-0x10>

0000000000403050 <__errno_location@plt>:
  403050:	jmp    QWORD PTR [rip+0xffd2]        # 413028 <__errno_location@GLIBC_2.2.5>
  403056:	push   0x2
  40305b:	jmp    403020 <getenv@plt-0x10>

0000000000403060 <strncpy@plt>:
  403060:	jmp    QWORD PTR [rip+0xffca]        # 413030 <strncpy@GLIBC_2.2.5>
  403066:	push   0x3
  40306b:	jmp    403020 <getenv@plt-0x10>

0000000000403070 <strncmp@plt>:
  403070:	jmp    QWORD PTR [rip+0xffc2]        # 413038 <strncmp@GLIBC_2.2.5>
  403076:	push   0x4
  40307b:	jmp    403020 <getenv@plt-0x10>

0000000000403080 <mkdir@plt>:
  403080:	jmp    QWORD PTR [rip+0xffba]        # 413040 <mkdir@GLIBC_2.2.5>
  403086:	push   0x5
  40308b:	jmp    403020 <getenv@plt-0x10>

0000000000403090 <fread@plt>:
  403090:	jmp    QWORD PTR [rip+0xffb2]        # 413048 <fread@GLIBC_2.2.5>
  403096:	push   0x6
  40309b:	jmp    403020 <getenv@plt-0x10>

00000000004030a0 <fcntl@plt>:
  4030a0:	jmp    QWORD PTR [rip+0xffaa]        # 413050 <fcntl@GLIBC_2.2.5>
  4030a6:	push   0x7
  4030ab:	jmp    403020 <getenv@plt-0x10>

00000000004030b0 <getpid@plt>:
  4030b0:	jmp    QWORD PTR [rip+0xffa2]        # 413058 <getpid@GLIBC_2.2.5>
  4030b6:	push   0x8
  4030bb:	jmp    403020 <getenv@plt-0x10>

00000000004030c0 <fclose@plt>:
  4030c0:	jmp    QWORD PTR [rip+0xff9a]        # 413060 <fclose@GLIBC_2.2.5>
  4030c6:	push   0x9
  4030cb:	jmp    403020 <getenv@plt-0x10>

00000000004030d0 <msync@plt>:
  4030d0:	jmp    QWORD PTR [rip+0xff92]        # 413068 <msync@GLIBC_2.2.5>
  4030d6:	push   0xa
  4030db:	jmp    403020 <getenv@plt-0x10>

00000000004030e0 <strlen@plt>:
  4030e0:	jmp    QWORD PTR [rip+0xff8a]        # 413070 <strlen@GLIBC_2.2.5>
  4030e6:	push   0xb
  4030eb:	jmp    403020 <getenv@plt-0x10>

00000000004030f0 <mmap@plt>:
  4030f0:	jmp    QWORD PTR [rip+0xff82]        # 413078 <mmap@GLIBC_2.2.5>
  4030f6:	push   0xc
  4030fb:	jmp    403020 <getenv@plt-0x10>

0000000000403100 <strchr@plt>:
  403100:	jmp    QWORD PTR [rip+0xff7a]        # 413080 <strchr@GLIBC_2.2.5>
  403106:	push   0xd
  40310b:	jmp    403020 <getenv@plt-0x10>

0000000000403110 <strrchr@plt>:
  403110:	jmp    QWORD PTR [rip+0xff72]        # 413088 <strrchr@GLIBC_2.2.5>
  403116:	push   0xe
  40311b:	jmp    403020 <getenv@plt-0x10>

0000000000403120 <uname@plt>:
  403120:	jmp    QWORD PTR [rip+0xff6a]        # 413090 <uname@GLIBC_2.2.5>
  403126:	push   0xf
  40312b:	jmp    403020 <getenv@plt-0x10>

0000000000403130 <memset@plt>:
  403130:	jmp    QWORD PTR [rip+0xff62]        # 413098 <memset@GLIBC_2.2.5>
  403136:	push   0x10
  40313b:	jmp    403020 <getenv@plt-0x10>

0000000000403140 <strnlen@plt>:
  403140:	jmp    QWORD PTR [rip+0xff5a]        # 4130a0 <strnlen@GLIBC_2.2.5>
  403146:	push   0x11
  40314b:	jmp    403020 <getenv@plt-0x10>

0000000000403150 <fprintf@plt>:
  403150:	jmp    QWORD PTR [rip+0xff52]        # 4130a8 <fprintf@GLIBC_2.2.5>
  403156:	push   0x12
  40315b:	jmp    403020 <getenv@plt-0x10>

0000000000403160 <ftell@plt>:
  403160:	jmp    QWORD PTR [rip+0xff4a]        # 4130b0 <ftell@GLIBC_2.2.5>
  403166:	push   0x13
  40316b:	jmp    403020 <getenv@plt-0x10>

0000000000403170 <strtol@plt>:
  403170:	jmp    QWORD PTR [rip+0xff42]        # 4130b8 <strtol@GLIBC_2.2.5>
  403176:	push   0x14
  40317b:	jmp    403020 <getenv@plt-0x10>

0000000000403180 <memcpy@plt>:
  403180:	jmp    QWORD PTR [rip+0xff3a]        # 4130c0 <memcpy@GLIBC_2.14>
  403186:	push   0x15
  40318b:	jmp    403020 <getenv@plt-0x10>

0000000000403190 <prctl@plt>:
  403190:	jmp    QWORD PTR [rip+0xff32]        # 4130c8 <prctl@GLIBC_2.2.5>
  403196:	push   0x16
  40319b:	jmp    403020 <getenv@plt-0x10>

00000000004031a0 <fileno@plt>:
  4031a0:	jmp    QWORD PTR [rip+0xff2a]        # 4130d0 <fileno@GLIBC_2.2.5>
  4031a6:	push   0x17
  4031ab:	jmp    403020 <getenv@plt-0x10>

00000000004031b0 <malloc@plt>:
  4031b0:	jmp    QWORD PTR [rip+0xff22]        # 4130d8 <malloc@GLIBC_2.2.5>
  4031b6:	push   0x18
  4031bb:	jmp    403020 <getenv@plt-0x10>

00000000004031c0 <fflush@plt>:
  4031c0:	jmp    QWORD PTR [rip+0xff1a]        # 4130e0 <fflush@GLIBC_2.2.5>
  4031c6:	push   0x19
  4031cb:	jmp    403020 <getenv@plt-0x10>

00000000004031d0 <fseek@plt>:
  4031d0:	jmp    QWORD PTR [rip+0xff12]        # 4130e8 <fseek@GLIBC_2.2.5>
  4031d6:	push   0x1a
  4031db:	jmp    403020 <getenv@plt-0x10>

00000000004031e0 <realloc@plt>:
  4031e0:	jmp    QWORD PTR [rip+0xff0a]        # 4130f0 <realloc@GLIBC_2.2.5>
  4031e6:	push   0x1b
  4031eb:	jmp    403020 <getenv@plt-0x10>

00000000004031f0 <fdopen@plt>:
  4031f0:	jmp    QWORD PTR [rip+0xff02]        # 4130f8 <fdopen@GLIBC_2.2.5>
  4031f6:	push   0x1c
  4031fb:	jmp    403020 <getenv@plt-0x10>

0000000000403200 <munmap@plt>:
  403200:	jmp    QWORD PTR [rip+0xfefa]        # 413100 <munmap@GLIBC_2.2.5>
  403206:	push   0x1d
  40320b:	jmp    403020 <getenv@plt-0x10>

0000000000403210 <open@plt>:
  403210:	jmp    QWORD PTR [rip+0xfef2]        # 413108 <open@GLIBC_2.2.5>
  403216:	push   0x1e
  40321b:	jmp    403020 <getenv@plt-0x10>

0000000000403220 <fopen@plt>:
  403220:	jmp    QWORD PTR [rip+0xfeea]        # 413110 <fopen@GLIBC_2.2.5>
  403226:	push   0x1f
  40322b:	jmp    403020 <getenv@plt-0x10>

0000000000403230 <getopt@plt>:
  403230:	jmp    QWORD PTR [rip+0xfee2]        # 413118 <getopt@GLIBC_2.2.5>
  403236:	push   0x20
  40323b:	jmp    403020 <getenv@plt-0x10>

0000000000403240 <__cxa_atexit@plt>:
  403240:	jmp    QWORD PTR [rip+0xfeda]        # 413120 <__cxa_atexit@GLIBC_2.2.5>
  403246:	push   0x21
  40324b:	jmp    403020 <getenv@plt-0x10>

0000000000403250 <atoi@plt>:
  403250:	jmp    QWORD PTR [rip+0xfed2]        # 413128 <atoi@GLIBC_2.2.5>
  403256:	push   0x22
  40325b:	jmp    403020 <getenv@plt-0x10>

0000000000403260 <exit@plt>:
  403260:	jmp    QWORD PTR [rip+0xfeca]        # 413130 <exit@GLIBC_2.2.5>
  403266:	push   0x23
  40326b:	jmp    403020 <getenv@plt-0x10>

0000000000403270 <fwrite@plt>:
  403270:	jmp    QWORD PTR [rip+0xfec2]        # 413138 <fwrite@GLIBC_2.2.5>
  403276:	push   0x24
  40327b:	jmp    403020 <getenv@plt-0x10>

0000000000403280 <strdup@plt>:
  403280:	jmp    QWORD PTR [rip+0xfeba]        # 413140 <strdup@GLIBC_2.2.5>
  403286:	push   0x25
  40328b:	jmp    403020 <getenv@plt-0x10>

0000000000403290 <strerror@plt>:
  403290:	jmp    QWORD PTR [rip+0xfeb2]        # 413148 <strerror@GLIBC_2.2.5>
  403296:	push   0x26
  40329b:	jmp    403020 <getenv@plt-0x10>

Disassembly of section .text:

00000000004032a0 <_start@@Base>:
  4032a0:	endbr64 
  4032a4:	xor    ebp,ebp
  4032a6:	mov    r9,rdx
  4032a9:	pop    rsi
  4032aa:	mov    rdx,rsp
  4032ad:	and    rsp,0xfffffffffffffff0
  4032b1:	push   rax
  4032b2:	push   rsp
  4032b3:	mov    r8,0x40dea0
  4032ba:	mov    rcx,0x40de30
  4032c1:	mov    rdi,0x403760
  4032c8:	call   QWORD PTR [rip+0xfd0a]        # 412fd8 <__libc_start_main@GLIBC_2.2.5>
  4032ce:	hlt    
  4032cf:	nop
  4032d0:	endbr64 
  4032d4:	ret    
  4032d5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4032df:	nop
  4032e0:	mov    eax,0x413168
  4032e5:	cmp    rax,0x413168
  4032eb:	je     403300 <_start@@Base+0x60>
  4032ed:	mov    eax,0x0
  4032f2:	test   rax,rax
  4032f5:	je     403300 <_start@@Base+0x60>
  4032f7:	mov    edi,0x413168
  4032fc:	jmp    rax
  4032fe:	xchg   ax,ax
  403300:	ret    
  403301:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40330c:	nop    DWORD PTR [rax+0x0]
  403310:	mov    esi,0x413168
  403315:	sub    rsi,0x413168
  40331c:	mov    rax,rsi
  40331f:	shr    rsi,0x3f
  403323:	sar    rax,0x3
  403327:	add    rsi,rax
  40332a:	sar    rsi,1
  40332d:	je     403340 <_start@@Base+0xa0>
  40332f:	mov    eax,0x0
  403334:	test   rax,rax
  403337:	je     403340 <_start@@Base+0xa0>
  403339:	mov    edi,0x413168
  40333e:	jmp    rax
  403340:	ret    
  403341:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40334c:	nop    DWORD PTR [rax+0x0]
  403350:	endbr64 
  403354:	cmp    BYTE PTR [rip+0xfe15],0x0        # 413170 <__bss_start@@Base+0x8>
  40335b:	jne    403370 <_start@@Base+0xd0>
  40335d:	push   rbp
  40335e:	mov    rbp,rsp
  403361:	call   4032e0 <_start@@Base+0x40>
  403366:	mov    BYTE PTR [rip+0xfe03],0x1        # 413170 <__bss_start@@Base+0x8>
  40336d:	pop    rbp
  40336e:	ret    
  40336f:	nop
  403370:	ret    
  403371:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40337c:	nop    DWORD PTR [rax+0x0]
  403380:	endbr64 
  403384:	jmp    403310 <_start@@Base+0x70>
  403386:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000403390 <load_file@@Base>:
  403390:	push   rbp
  403391:	mov    rbp,rsp
  403394:	sub    rsp,0xa0
  40339b:	lea    rax,[rip+0xfdde]        # 413180 <__bss_start@@Base+0x18>
  4033a2:	mov    QWORD PTR [rbp-0x30],rdi
  4033a6:	mov    QWORD PTR [rbp-0x38],rax
  4033aa:	mov    rax,QWORD PTR [rbp-0x38]
  4033ae:	mov    rcx,QWORD PTR [rax]
  4033b1:	add    rcx,0x1
  4033b8:	mov    QWORD PTR [rax],rcx
  4033bb:	mov    rax,QWORD PTR [rbp-0x30]
  4033bf:	mov    QWORD PTR [rbp-0x8],rax
  4033c3:	mov    QWORD PTR [rbp-0x10],0x0
  4033cb:	mov    rdi,QWORD PTR [rbp-0x8]
  4033cf:	lea    rsi,[rip+0xb0c2]        # 40e498 <_IO_stdin_used@@Base+0x498>
  4033d6:	call   403220 <fopen@plt>
  4033db:	lea    rcx,[rip+0xfd9e]        # 413180 <__bss_start@@Base+0x18>
  4033e2:	mov    rdx,rcx
  4033e5:	add    rdx,0x8
  4033ec:	add    rcx,0x10
  4033f3:	mov    QWORD PTR [rbp-0x18],rax
  4033f7:	cmp    QWORD PTR [rbp-0x18],0x0
  4033fc:	mov    QWORD PTR [rbp-0x40],rdx
  403400:	mov    QWORD PTR [rbp-0x48],rcx
  403404:	je     40366b <load_file@@Base+0x2db>
  40340a:	mov    rax,QWORD PTR [rbp-0x40]
  40340e:	xor    ecx,ecx
  403410:	mov    esi,ecx
  403412:	mov    rdx,QWORD PTR [rax]
  403415:	add    rdx,0x1
  40341c:	mov    QWORD PTR [rax],rdx
  40341f:	mov    rdi,QWORD PTR [rbp-0x18]
  403423:	mov    edx,0x2
  403428:	call   4031d0 <fseek@plt>
  40342d:	lea    rsi,[rip+0xfd4c]        # 413180 <__bss_start@@Base+0x18>
  403434:	mov    rdi,rsi
  403437:	add    rdi,0x18
  40343e:	add    rsi,0x20
  403445:	cmp    eax,0x0
  403448:	mov    QWORD PTR [rbp-0x50],rdi
  40344c:	mov    QWORD PTR [rbp-0x58],rsi
  403450:	jne    40363f <load_file@@Base+0x2af>
  403456:	mov    rax,QWORD PTR [rbp-0x50]
  40345a:	mov    rcx,QWORD PTR [rax]
  40345d:	add    rcx,0x1
  403464:	mov    QWORD PTR [rax],rcx
  403467:	mov    rdi,QWORD PTR [rbp-0x18]
  40346b:	call   403160 <ftell@plt>
  403470:	lea    rcx,[rip+0xfd09]        # 413180 <__bss_start@@Base+0x18>
  403477:	mov    rdx,rcx
  40347a:	add    rdx,0x28
  403481:	add    rcx,0x30
  403488:	mov    QWORD PTR [rbp-0x20],rax
  40348c:	cmp    QWORD PTR [rbp-0x20],0xffffffffffffffff
  403491:	mov    QWORD PTR [rbp-0x60],rdx
  403495:	mov    QWORD PTR [rbp-0x68],rcx
  403499:	jne    4034d5 <load_file@@Base+0x145>
  40349f:	mov    rax,QWORD PTR [rbp-0x60]
  4034a3:	mov    rcx,QWORD PTR [rip+0xfb46]        # 412ff0 <stderr@GLIBC_2.2.5>
  4034aa:	mov    rdx,QWORD PTR [rax]
  4034ad:	add    rdx,0x1
  4034b4:	mov    QWORD PTR [rax],rdx
  4034b7:	mov    rdi,QWORD PTR [rcx]
  4034ba:	lea    rsi,[rip+0xab43]        # 40e004 <_IO_stdin_used@@Base+0x4>
  4034c1:	mov    al,0x0
  4034c3:	call   403150 <fprintf@plt>
  4034c8:	mov    edi,0x1
  4034cd:	mov    DWORD PTR [rbp-0x6c],eax
  4034d0:	call   403260 <exit@plt>
  4034d5:	mov    rax,QWORD PTR [rbp-0x68]
  4034d9:	mov    rcx,QWORD PTR [rax]
  4034dc:	add    rcx,0x1
  4034e3:	mov    QWORD PTR [rax],rcx
  4034e6:	mov    rax,QWORD PTR [rbp-0x20]
  4034ea:	shl    rax,0x0
  4034ee:	add    rax,0x1
  4034f4:	mov    rdi,rax
  4034f7:	call   4031b0 <malloc@plt>
  4034fc:	xor    edx,edx
  4034fe:	mov    esi,edx
  403500:	xor    edx,edx
  403502:	mov    QWORD PTR [rbp-0x10],rax
  403506:	mov    rdi,QWORD PTR [rbp-0x18]
  40350a:	call   4031d0 <fseek@plt>
  40350f:	lea    rcx,[rip+0xfc6a]        # 413180 <__bss_start@@Base+0x18>
  403516:	mov    rsi,rcx
  403519:	add    rsi,0x38
  403520:	add    rcx,0x40
  403527:	cmp    eax,0x0
  40352a:	mov    QWORD PTR [rbp-0x78],rsi
  40352e:	mov    QWORD PTR [rbp-0x80],rcx
  403532:	je     403571 <load_file@@Base+0x1e1>
  403538:	mov    rax,QWORD PTR [rbp-0x78]
  40353c:	mov    rcx,QWORD PTR [rip+0xfaad]        # 412ff0 <stderr@GLIBC_2.2.5>
  403543:	mov    rdx,QWORD PTR [rax]
  403546:	add    rdx,0x1
  40354d:	mov    QWORD PTR [rax],rdx
  403550:	mov    rdi,QWORD PTR [rcx]
  403553:	lea    rsi,[rip+0xaade]        # 40e038 <_IO_stdin_used@@Base+0x38>
  40355a:	mov    al,0x0
  40355c:	call   403150 <fprintf@plt>
  403561:	mov    edi,0x1
  403566:	mov    DWORD PTR [rbp-0x84],eax
  40356c:	call   403260 <exit@plt>
  403571:	mov    rax,QWORD PTR [rbp-0x80]
  403575:	mov    rcx,QWORD PTR [rax]
  403578:	add    rcx,0x1
  40357f:	mov    QWORD PTR [rax],rcx
  403582:	mov    rdi,QWORD PTR [rbp-0x10]
  403586:	mov    rdx,QWORD PTR [rbp-0x20]
  40358a:	mov    rcx,QWORD PTR [rbp-0x18]
  40358e:	mov    esi,0x1
  403593:	call   403090 <fread@plt>
  403598:	lea    rcx,[rip+0xfbe1]        # 413180 <__bss_start@@Base+0x18>
  40359f:	mov    rdx,rcx
  4035a2:	add    rdx,0x48
  4035a9:	add    rcx,0x50
  4035b0:	mov    QWORD PTR [rbp-0x28],rax
  4035b4:	cmp    QWORD PTR [rbp-0x28],0x0
  4035b9:	mov    QWORD PTR [rbp-0x90],rdx
  4035c0:	mov    QWORD PTR [rbp-0x98],rcx
  4035c7:	jne    40360d <load_file@@Base+0x27d>
  4035cd:	mov    rax,QWORD PTR [rbp-0x90]
  4035d4:	mov    rcx,QWORD PTR [rip+0xfa15]        # 412ff0 <stderr@GLIBC_2.2.5>
  4035db:	mov    rdx,QWORD PTR [rax]
  4035de:	add    rdx,0x1
  4035e5:	mov    QWORD PTR [rax],rdx
  4035e8:	mov    rdi,QWORD PTR [rcx]
  4035eb:	mov    rdx,QWORD PTR [rbp-0x8]
  4035ef:	lea    rsi,[rip+0xaa74]        # 40e06a <_IO_stdin_used@@Base+0x6a>
  4035f6:	mov    al,0x0
  4035f8:	call   403150 <fprintf@plt>
  4035fd:	mov    edi,0x1
  403602:	mov    DWORD PTR [rbp-0x9c],eax
  403608:	call   403260 <exit@plt>
  40360d:	mov    rax,QWORD PTR [rbp-0x98]
  403614:	lea    rcx,[rip+0xfb65]        # 413180 <__bss_start@@Base+0x18>
  40361b:	add    rcx,0x58
  403622:	mov    rdx,QWORD PTR [rax]
  403625:	add    rdx,0x1
  40362c:	mov    QWORD PTR [rax],rdx
  40362f:	mov    rax,QWORD PTR [rbp-0x10]
  403633:	mov    rdx,QWORD PTR [rbp-0x28]
  403637:	mov    BYTE PTR [rax+rdx*1],0x0
  40363b:	mov    QWORD PTR [rbp-0x58],rcx
  40363f:	mov    rax,QWORD PTR [rbp-0x58]
  403643:	mov    rcx,QWORD PTR [rax]
  403646:	add    rcx,0x1
  40364d:	mov    QWORD PTR [rax],rcx
  403650:	mov    rdi,QWORD PTR [rbp-0x18]
  403654:	call   4030c0 <fclose@plt>
  403659:	lea    rcx,[rip+0xfb20]        # 413180 <__bss_start@@Base+0x18>
  403660:	add    rcx,0x60
  403667:	mov    QWORD PTR [rbp-0x48],rcx
  40366b:	mov    rax,QWORD PTR [rbp-0x48]
  40366f:	mov    rcx,QWORD PTR [rax]
  403672:	add    rcx,0x1
  403679:	mov    QWORD PTR [rax],rcx
  40367c:	mov    rax,QWORD PTR [rip+0xfb65]        # 4131e8 <__bss_start@@Base+0x80>
  403683:	add    rax,0x1
  403689:	mov    QWORD PTR [rip+0xfb58],rax        # 4131e8 <__bss_start@@Base+0x80>
  403690:	mov    rax,QWORD PTR [rbp-0x10]
  403694:	add    rsp,0xa0
  40369b:	pop    rbp
  40369c:	ret    
  40369d:	nop    DWORD PTR [rax]

00000000004036a0 <my_main@@Base>:
  4036a0:	push   rbp
  4036a1:	mov    rbp,rsp
  4036a4:	sub    rsp,0x70
  4036a8:	lea    rax,[rip+0xfb41]        # 4131f0 <__bss_start@@Base+0x88>
  4036af:	mov    QWORD PTR [rbp-0x58],rdi
  4036b3:	mov    QWORD PTR [rbp-0x60],rsi
  4036b7:	mov    QWORD PTR [rbp-0x68],rax
  4036bb:	mov    rax,QWORD PTR [rbp-0x68]
  4036bf:	mov    rcx,QWORD PTR [rax]
  4036c2:	add    rcx,0x1
  4036c9:	mov    QWORD PTR [rax],rcx
  4036cc:	mov    rax,QWORD PTR [rip+0xfb25]        # 4131f8 <__bss_start@@Base+0x90>
  4036d3:	add    rax,0x1
  4036d9:	mov    QWORD PTR [rip+0xfb18],rax        # 4131f8 <__bss_start@@Base+0x90>
  4036e0:	mov    rax,QWORD PTR [rbp-0x58]
  4036e4:	mov    QWORD PTR [rbp-0x8],rax
  4036e8:	mov    rcx,QWORD PTR [rbp-0x60]
  4036ec:	mov    QWORD PTR [rbp-0x10],rcx
  4036f0:	mov    rdi,QWORD PTR [rbp-0x8]
  4036f4:	call   403390 <load_file@@Base>
  4036f9:	mov    QWORD PTR [rbp-0x50],rax
  4036fd:	mov    rsi,QWORD PTR [rbp-0x50]
  403701:	lea    rdi,[rbp-0x28]
  403705:	call   4049e0 <init_lexer@@Base>
  40370a:	lea    rdi,[rbp-0x30]
  40370e:	lea    rsi,[rbp-0x28]
  403712:	call   408f50 <init_grammar@@Base>
  403717:	mov    rdx,QWORD PTR [rbp-0x10]
  40371b:	lea    rdi,[rbp-0x48]
  40371f:	lea    rsi,[rbp-0x30]
  403723:	call   40ac50 <init_generator@@Base>
  403728:	lea    rdi,[rbp-0x48]
  40372c:	call   40ad50 <generate_code@@Base>
  403731:	lea    rdi,[rbp-0x48]
  403735:	call   40acf0 <destroy_generator@@Base>
  40373a:	lea    rdi,[rbp-0x30]
  40373e:	call   408fb0 <destroy_grammar@@Base>
  403743:	lea    rdi,[rbp-0x28]
  403747:	call   404a60 <destroy_lexer@@Base>
  40374c:	mov    rdi,QWORD PTR [rbp-0x50]
  403750:	call   403040 <free@plt>
  403755:	xor    eax,eax
  403757:	add    rsp,0x70
  40375b:	pop    rbp
  40375c:	ret    
  40375d:	nop    DWORD PTR [rax]

0000000000403760 <main@@Base>:
  403760:	push   rbp
  403761:	mov    rbp,rsp
  403764:	sub    rsp,0xa0
  40376b:	lea    rax,[rip+0xfa8e]        # 413200 <__bss_start@@Base+0x98>
  403772:	mov    DWORD PTR [rbp-0x20],edi
  403775:	mov    QWORD PTR [rbp-0x28],rsi
  403779:	mov    QWORD PTR [rbp-0x30],rax
  40377d:	mov    rax,QWORD PTR [rbp-0x30]
  403781:	lea    rcx,[rip+0xfa78]        # 413200 <__bss_start@@Base+0x98>
  403788:	add    rcx,0x8
  40378f:	mov    rdx,QWORD PTR [rax]
  403792:	add    rdx,0x1
  403799:	mov    QWORD PTR [rax],rdx
  40379c:	mov    DWORD PTR [rbp-0x4],0x0
  4037a3:	mov    esi,DWORD PTR [rbp-0x20]
  4037a6:	mov    DWORD PTR [rbp-0x8],esi
  4037a9:	mov    rax,QWORD PTR [rbp-0x28]
  4037ad:	mov    QWORD PTR [rbp-0x10],rax
  4037b1:	mov    QWORD PTR [rbp-0x18],0x0
  4037b9:	mov    DWORD PTR [rbp-0x1c],0x0
  4037c0:	mov    QWORD PTR [rbp-0x38],rcx
  4037c4:	mov    rax,QWORD PTR [rbp-0x38]
  4037c8:	mov    rcx,QWORD PTR [rax]
  4037cb:	add    rcx,0x1
  4037d2:	mov    QWORD PTR [rax],rcx
  4037d5:	mov    edi,DWORD PTR [rbp-0x8]
  4037d8:	mov    rsi,QWORD PTR [rbp-0x10]
  4037dc:	lea    rdx,[rip+0xa89f]        # 40e082 <_IO_stdin_used@@Base+0x82>
  4037e3:	call   403230 <getopt@plt>
  4037e8:	lea    rcx,[rip+0xfa11]        # 413200 <__bss_start@@Base+0x98>
  4037ef:	mov    rdx,rcx
  4037f2:	add    rdx,0x10
  4037f9:	add    rcx,0x18
  403800:	mov    DWORD PTR [rbp-0x1c],eax
  403803:	cmp    eax,0xffffffff
  403806:	mov    QWORD PTR [rbp-0x40],rdx
  40380a:	mov    QWORD PTR [rbp-0x48],rcx
  40380e:	je     4038a1 <main@@Base+0x141>
  403814:	mov    rax,QWORD PTR [rbp-0x40]
  403818:	mov    rcx,QWORD PTR [rax]
  40381b:	inc    rcx
  40381e:	mov    QWORD PTR [rax],rcx
  403821:	lea    rax,[rip+0xfa00]        # 413228 <__bss_start@@Base+0xc0>
  403828:	lea    rcx,[rip+0xf9f1]        # 413220 <__bss_start@@Base+0xb8>
  40382f:	mov    edx,DWORD PTR [rbp-0x1c]
  403832:	sub    edx,0x6f
  403835:	mov    QWORD PTR [rbp-0x50],rax
  403839:	mov    QWORD PTR [rbp-0x58],rcx
  40383d:	jne    403879 <main@@Base+0x119>
  403843:	jmp    403848 <main@@Base+0xe8>
  403848:	mov    rax,QWORD PTR [rbp-0x50]
  40384c:	lea    rcx,[rip+0xf9ad]        # 413200 <__bss_start@@Base+0x98>
  403853:	add    rcx,0x30
  40385a:	mov    rdx,QWORD PTR [rip+0xf77f]        # 412fe0 <optarg@GLIBC_2.2.5>
  403861:	mov    rsi,QWORD PTR [rax]
  403864:	add    rsi,0x1
  40386b:	mov    QWORD PTR [rax],rsi
  40386e:	mov    rax,QWORD PTR [rdx]
  403871:	mov    QWORD PTR [rbp-0x18],rax
  403875:	mov    QWORD PTR [rbp-0x58],rcx
  403879:	mov    rax,QWORD PTR [rbp-0x58]
  40387d:	lea    rcx,[rip+0xf97c]        # 413200 <__bss_start@@Base+0x98>
  403884:	add    rcx,0x38
  40388b:	mov    rdx,QWORD PTR [rax]
  40388e:	add    rdx,0x1
  403895:	mov    QWORD PTR [rax],rdx
  403898:	mov    QWORD PTR [rbp-0x38],rcx
  40389c:	jmp    4037c4 <main@@Base+0x64>
  4038a1:	mov    rax,QWORD PTR [rbp-0x48]
  4038a5:	lea    rcx,[rip+0xf954]        # 413200 <__bss_start@@Base+0x98>
  4038ac:	mov    rdx,rcx
  4038af:	add    rdx,0x40
  4038b6:	add    rcx,0x48
  4038bd:	mov    rsi,QWORD PTR [rip+0xf70c]        # 412fd0 <optind@GLIBC_2.2.5>
  4038c4:	mov    rdi,QWORD PTR [rax]
  4038c7:	add    rdi,0x1
  4038ce:	mov    QWORD PTR [rax],rdi
  4038d1:	mov    r8d,DWORD PTR [rsi]
  4038d4:	cmp    r8d,DWORD PTR [rbp-0x8]
  4038d8:	mov    QWORD PTR [rbp-0x60],rdx
  4038dc:	mov    QWORD PTR [rbp-0x68],rcx
  4038e0:	jge    4039e7 <main@@Base+0x287>
  4038e6:	mov    rax,QWORD PTR [rbp-0x60]
  4038ea:	lea    rcx,[rip+0xf90f]        # 413200 <__bss_start@@Base+0x98>
  4038f1:	mov    rdx,rcx
  4038f4:	add    rdx,0x50
  4038fb:	add    rcx,0x58
  403902:	mov    rsi,QWORD PTR [rip+0xf6c7]        # 412fd0 <optind@GLIBC_2.2.5>
  403909:	mov    rdi,QWORD PTR [rax]
  40390c:	add    rdi,0x1
  403913:	mov    QWORD PTR [rax],rdi
  403916:	mov    rax,QWORD PTR [rbp-0x10]
  40391a:	movsxd rsi,DWORD PTR [rsi]
  40391d:	mov    rdi,QWORD PTR [rax+rsi*8]
  403921:	cmp    QWORD PTR [rbp-0x18],0x0
  403926:	mov    QWORD PTR [rbp-0x70],rdi
  40392a:	mov    QWORD PTR [rbp-0x78],rdx
  40392e:	mov    QWORD PTR [rbp-0x80],rcx
  403932:	jne    403971 <main@@Base+0x211>
  403938:	mov    rax,QWORD PTR [rbp-0x78]
  40393c:	lea    rcx,[rip+0xf8bd]        # 413200 <__bss_start@@Base+0x98>
  403943:	add    rcx,0x60
  40394a:	mov    rdx,QWORD PTR [rax]
  40394d:	add    rdx,0x1
  403954:	mov    QWORD PTR [rax],rdx
  403957:	lea    rax,[rip+0xa727]        # 40e085 <_IO_stdin_used@@Base+0x85>
  40395e:	mov    QWORD PTR [rbp-0x88],rcx
  403965:	mov    QWORD PTR [rbp-0x90],rax
  40396c:	jmp    4039a2 <main@@Base+0x242>
  403971:	mov    rax,QWORD PTR [rbp-0x80]
  403975:	lea    rcx,[rip+0xf884]        # 413200 <__bss_start@@Base+0x98>
  40397c:	add    rcx,0x68
  403983:	mov    rdx,QWORD PTR [rax]
  403986:	add    rdx,0x1
  40398d:	mov    QWORD PTR [rax],rdx
  403990:	mov    rax,QWORD PTR [rbp-0x18]
  403994:	mov    QWORD PTR [rbp-0x88],rcx
  40399b:	mov    QWORD PTR [rbp-0x90],rax
  4039a2:	mov    rax,QWORD PTR [rbp-0x90]
  4039a9:	mov    rcx,QWORD PTR [rbp-0x88]
  4039b0:	mov    rdx,QWORD PTR [rcx]
  4039b3:	add    rdx,0x1
  4039ba:	mov    QWORD PTR [rcx],rdx
  4039bd:	mov    rcx,QWORD PTR [rip+0xf8ac]        # 413270 <__bss_start@@Base+0x108>
  4039c4:	add    rcx,0x1
  4039cb:	mov    QWORD PTR [rip+0xf89e],rcx        # 413270 <__bss_start@@Base+0x108>
  4039d2:	mov    rdi,QWORD PTR [rbp-0x70]
  4039d6:	mov    rsi,rax
  4039d9:	call   4036a0 <my_main@@Base>
  4039de:	add    rsp,0xa0
  4039e5:	pop    rbp
  4039e6:	ret    
  4039e7:	mov    rax,QWORD PTR [rbp-0x68]
  4039eb:	mov    rcx,QWORD PTR [rip+0xf5fe]        # 412ff0 <stderr@GLIBC_2.2.5>
  4039f2:	mov    rdx,QWORD PTR [rax]
  4039f5:	add    rdx,0x1
  4039fc:	mov    QWORD PTR [rax],rdx
  4039ff:	mov    rdi,QWORD PTR [rcx]
  403a02:	lea    rsi,[rip+0xa680]        # 40e089 <_IO_stdin_used@@Base+0x89>
  403a09:	mov    al,0x0
  403a0b:	call   403150 <fprintf@plt>
  403a10:	mov    edi,0x1
  403a15:	mov    DWORD PTR [rbp-0x94],eax
  403a1b:	call   403260 <exit@plt>
  403a20:	sub    rsp,0x38
  403a24:	xor    eax,eax
  403a26:	mov    DWORD PTR [rsp+0x34],eax
  403a2a:	jmp    403a2f <main@@Base+0x2cf>
  403a2f:	mov    eax,DWORD PTR [rsp+0x34]
  403a33:	movsxd rcx,eax
  403a36:	imul   rcx,rcx,0x30
  403a3d:	lea    rdx,[rip+0xe4ac]        # 411ef0 <_IO_stdin_used@@Base+0x3ef0>
  403a44:	add    rdx,rcx
  403a47:	mov    rdi,QWORD PTR [rdx]
  403a4a:	mov    rsi,QWORD PTR [rdx+0x8]
  403a4e:	mov    r8d,DWORD PTR [rdx+0x10]
  403a52:	mov    QWORD PTR [rsp+0x28],rdx
  403a57:	mov    edx,r8d
  403a5a:	mov    DWORD PTR [rsp+0x24],eax
  403a5e:	call   40c050 <__generate_code_for_binary_boolean_expression@@Base+0x8f0>
  403a63:	xor    eax,eax
  403a65:	mov    rcx,QWORD PTR [rsp+0x28]
  403a6a:	mov    edx,DWORD PTR [rcx+0x18]
  403a6d:	mov    rsi,QWORD PTR [rcx+0x20]
  403a71:	mov    rdi,QWORD PTR [rcx+0x28]
  403a75:	cmp    eax,edx
  403a77:	mov    DWORD PTR [rsp+0x20],edx
  403a7b:	mov    QWORD PTR [rsp+0x18],rsi
  403a80:	mov    QWORD PTR [rsp+0x10],rdi
  403a85:	mov    DWORD PTR [rsp+0xc],eax
  403a89:	jge    403afd <main@@Base+0x39d>
  403a8f:	mov    eax,DWORD PTR [rsp+0xc]
  403a93:	movsxd rcx,eax
  403a96:	shl    rcx,0x5
  403a9a:	mov    rdx,QWORD PTR [rsp+0x18]
  403a9f:	add    rdx,rcx
  403aa2:	mov    edi,DWORD PTR [rdx]
  403aa4:	mov    rsi,QWORD PTR [rdx+0x8]
  403aa8:	mov    r8d,DWORD PTR [rdx+0x10]
  403aac:	mov    r9b,BYTE PTR [rdx+0x14]
  403ab0:	mov    r10d,DWORD PTR [rdx+0x18]
  403ab4:	mov    edx,r8d
  403ab7:	movzx  ecx,r9b
  403abb:	mov    r8d,r10d
  403abe:	mov    DWORD PTR [rsp+0x8],eax
  403ac2:	call   40c4a0 <__generate_code_for_binary_boolean_expression@@Base+0xd40>
  403ac7:	mov    eax,DWORD PTR [rsp+0x8]
  403acb:	movsxd rsi,eax
  403ace:	shl    rsi,0x4
  403ad2:	mov    r11,QWORD PTR [rsp+0x10]
  403ad7:	add    r11,rsi
  403ada:	mov    edi,DWORD PTR [r11]
  403add:	mov    rsi,QWORD PTR [r11+0x8]
  403ae1:	call   40c8c0 <__generate_code_for_binary_boolean_expression@@Base+0x1160>
  403ae6:	mov    eax,DWORD PTR [rsp+0x8]
  403aea:	add    eax,0x1
  403aed:	mov    ecx,DWORD PTR [rsp+0x20]
  403af1:	cmp    eax,ecx
  403af3:	mov    DWORD PTR [rsp+0xc],eax
  403af7:	jl     403a8f <main@@Base+0x32f>
  403afd:	call   40ccd0 <__generate_code_for_binary_boolean_expression@@Base+0x1570>
  403b02:	call   40d470 <__generate_code_for_binary_boolean_expression@@Base+0x1d10>
  403b07:	mov    eax,DWORD PTR [rsp+0x24]
  403b0b:	add    eax,0x1
  403b0e:	cmp    eax,0x1
  403b11:	mov    DWORD PTR [rsp+0x34],eax
  403b15:	jl     403a2f <main@@Base+0x2cf>
  403b1b:	add    rsp,0x38
  403b1f:	ret    
  403b20:	push   rax
  403b21:	call   403a20 <main@@Base+0x2c0>
  403b26:	mov    QWORD PTR [rip+0xf6b7],0x0        # 4131e8 <__bss_start@@Base+0x80>
  403b31:	mov    QWORD PTR [rip+0xf6a4],0x0        # 4131e0 <__bss_start@@Base+0x78>
  403b3c:	mov    QWORD PTR [rip+0xf691],0x0        # 4131d8 <__bss_start@@Base+0x70>
  403b47:	mov    QWORD PTR [rip+0xf67e],0x0        # 4131d0 <__bss_start@@Base+0x68>
  403b52:	mov    QWORD PTR [rip+0xf66b],0x0        # 4131c8 <__bss_start@@Base+0x60>
  403b5d:	mov    QWORD PTR [rip+0xf658],0x0        # 4131c0 <__bss_start@@Base+0x58>
  403b68:	mov    QWORD PTR [rip+0xf645],0x0        # 4131b8 <__bss_start@@Base+0x50>
  403b73:	mov    QWORD PTR [rip+0xf632],0x0        # 4131b0 <__bss_start@@Base+0x48>
  403b7e:	mov    QWORD PTR [rip+0xf61f],0x0        # 4131a8 <__bss_start@@Base+0x40>
  403b89:	mov    QWORD PTR [rip+0xf60c],0x0        # 4131a0 <__bss_start@@Base+0x38>
  403b94:	mov    QWORD PTR [rip+0xf5f9],0x0        # 413198 <__bss_start@@Base+0x30>
  403b9f:	mov    QWORD PTR [rip+0xf5e6],0x0        # 413190 <__bss_start@@Base+0x28>
  403baa:	mov    QWORD PTR [rip+0xf5d3],0x0        # 413188 <__bss_start@@Base+0x20>
  403bb5:	mov    QWORD PTR [rip+0xf5c0],0x0        # 413180 <__bss_start@@Base+0x18>
  403bc0:	mov    QWORD PTR [rip+0xf62d],0x0        # 4131f8 <__bss_start@@Base+0x90>
  403bcb:	mov    QWORD PTR [rip+0xf61a],0x0        # 4131f0 <__bss_start@@Base+0x88>
  403bd6:	mov    QWORD PTR [rip+0xf68f],0x0        # 413270 <__bss_start@@Base+0x108>
  403be1:	mov    QWORD PTR [rip+0xf67c],0x0        # 413268 <__bss_start@@Base+0x100>
  403bec:	mov    QWORD PTR [rip+0xf669],0x0        # 413260 <__bss_start@@Base+0xf8>
  403bf7:	mov    QWORD PTR [rip+0xf656],0x0        # 413258 <__bss_start@@Base+0xf0>
  403c02:	mov    QWORD PTR [rip+0xf643],0x0        # 413250 <__bss_start@@Base+0xe8>
  403c0d:	mov    QWORD PTR [rip+0xf630],0x0        # 413248 <__bss_start@@Base+0xe0>
  403c18:	mov    QWORD PTR [rip+0xf61d],0x0        # 413240 <__bss_start@@Base+0xd8>
  403c23:	mov    QWORD PTR [rip+0xf60a],0x0        # 413238 <__bss_start@@Base+0xd0>
  403c2e:	mov    QWORD PTR [rip+0xf5f7],0x0        # 413230 <__bss_start@@Base+0xc8>
  403c39:	mov    QWORD PTR [rip+0xf5e4],0x0        # 413228 <__bss_start@@Base+0xc0>
  403c44:	mov    QWORD PTR [rip+0xf5d1],0x0        # 413220 <__bss_start@@Base+0xb8>
  403c4f:	mov    QWORD PTR [rip+0xf5be],0x0        # 413218 <__bss_start@@Base+0xb0>
  403c5a:	mov    QWORD PTR [rip+0xf5ab],0x0        # 413210 <__bss_start@@Base+0xa8>
  403c65:	mov    QWORD PTR [rip+0xf598],0x0        # 413208 <__bss_start@@Base+0xa0>
  403c70:	mov    QWORD PTR [rip+0xf585],0x0        # 413200 <__bss_start@@Base+0x98>
  403c7b:	pop    rax
  403c7c:	ret    
  403c7d:	nop    DWORD PTR [rax]
  403c80:	push   rax
  403c81:	lea    rdi,[rip+0xfffffffffffffd98]        # 403a20 <main@@Base+0x2c0>
  403c88:	lea    rsi,[rip+0xfffffffffffffe91]        # 403b20 <main@@Base+0x3c0>
  403c8f:	call   40d850 <__gcov_flush@@Base+0xb0>
  403c94:	pop    rax
  403c95:	ret    
  403c96:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000403ca0 <init_token_int_type@@Base>:
  403ca0:	push   rbp
  403ca1:	mov    rbp,rsp
  403ca4:	lea    rax,[rip+0xf5d5]        # 413280 <__bss_start@@Base+0x118>
  403cab:	mov    QWORD PTR [rbp-0x10],rdi
  403caf:	mov    QWORD PTR [rbp-0x18],rax
  403cb3:	mov    rax,QWORD PTR [rbp-0x18]
  403cb7:	mov    rcx,QWORD PTR [rax]
  403cba:	add    rcx,0x1
  403cc1:	mov    QWORD PTR [rax],rcx
  403cc4:	mov    rax,QWORD PTR [rip+0xf5bd]        # 413288 <__bss_start@@Base+0x120>
  403ccb:	add    rax,0x1
  403cd1:	mov    QWORD PTR [rip+0xf5b0],rax        # 413288 <__bss_start@@Base+0x120>
  403cd8:	mov    rax,QWORD PTR [rbp-0x10]
  403cdc:	mov    QWORD PTR [rbp-0x8],rax
  403ce0:	mov    rcx,QWORD PTR [rbp-0x8]
  403ce4:	mov    DWORD PTR [rcx],0x0
  403cea:	pop    rbp
  403ceb:	ret    
  403cec:	nop    DWORD PTR [rax+0x0]

0000000000403cf0 <init_token_int_value@@Base>:
  403cf0:	push   rbp
  403cf1:	mov    rbp,rsp
  403cf4:	lea    rax,[rip+0xf595]        # 413290 <__bss_start@@Base+0x128>
  403cfb:	mov    QWORD PTR [rbp-0x18],rdi
  403cff:	mov    DWORD PTR [rbp-0x1c],esi
  403d02:	mov    QWORD PTR [rbp-0x28],rax
  403d06:	mov    rax,QWORD PTR [rbp-0x28]
  403d0a:	mov    rcx,QWORD PTR [rax]
  403d0d:	add    rcx,0x1
  403d14:	mov    QWORD PTR [rax],rcx
  403d17:	mov    rax,QWORD PTR [rip+0xf57a]        # 413298 <__bss_start@@Base+0x130>
  403d1e:	add    rax,0x1
  403d24:	mov    QWORD PTR [rip+0xf56d],rax        # 413298 <__bss_start@@Base+0x130>
  403d2b:	mov    rax,QWORD PTR [rbp-0x18]
  403d2f:	mov    QWORD PTR [rbp-0x8],rax
  403d33:	mov    edx,DWORD PTR [rbp-0x1c]
  403d36:	mov    DWORD PTR [rbp-0xc],edx
  403d39:	mov    rcx,QWORD PTR [rbp-0x8]
  403d3d:	mov    DWORD PTR [rcx],0x1
  403d43:	mov    esi,DWORD PTR [rbp-0xc]
  403d46:	mov    rcx,QWORD PTR [rbp-0x8]
  403d4a:	mov    DWORD PTR [rcx+0x4],esi
  403d4d:	pop    rbp
  403d4e:	ret    
  403d4f:	nop

0000000000403d50 <init_token_function@@Base>:
  403d50:	push   rbp
  403d51:	mov    rbp,rsp
  403d54:	lea    rax,[rip+0xf545]        # 4132a0 <__bss_start@@Base+0x138>
  403d5b:	mov    QWORD PTR [rbp-0x18],rdi
  403d5f:	mov    QWORD PTR [rbp-0x20],rsi
  403d63:	mov    QWORD PTR [rbp-0x28],rax
  403d67:	mov    rax,QWORD PTR [rbp-0x28]
  403d6b:	mov    rcx,QWORD PTR [rax]
  403d6e:	add    rcx,0x1
  403d75:	mov    QWORD PTR [rax],rcx
  403d78:	mov    rax,QWORD PTR [rip+0xf529]        # 4132a8 <__bss_start@@Base+0x140>
  403d7f:	add    rax,0x1
  403d85:	mov    QWORD PTR [rip+0xf51c],rax        # 4132a8 <__bss_start@@Base+0x140>
  403d8c:	mov    rax,QWORD PTR [rbp-0x18]
  403d90:	mov    QWORD PTR [rbp-0x8],rax
  403d94:	mov    rcx,QWORD PTR [rbp-0x20]
  403d98:	mov    QWORD PTR [rbp-0x10],rcx
  403d9c:	mov    rdx,QWORD PTR [rbp-0x8]
  403da0:	mov    DWORD PTR [rdx],0x2
  403da6:	mov    rdx,QWORD PTR [rbp-0x10]
  403daa:	mov    rsi,QWORD PTR [rbp-0x8]
  403dae:	mov    QWORD PTR [rsi+0x8],rdx
  403db2:	pop    rbp
  403db3:	ret    
  403db4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403dbe:	xchg   ax,ax

0000000000403dc0 <init_token_opar@@Base>:
  403dc0:	push   rbp
  403dc1:	mov    rbp,rsp
  403dc4:	lea    rax,[rip+0xf4e5]        # 4132b0 <__bss_start@@Base+0x148>
  403dcb:	mov    QWORD PTR [rbp-0x10],rdi
  403dcf:	mov    QWORD PTR [rbp-0x18],rax
  403dd3:	mov    rax,QWORD PTR [rbp-0x18]
  403dd7:	mov    rcx,QWORD PTR [rax]
  403dda:	add    rcx,0x1
  403de1:	mov    QWORD PTR [rax],rcx
  403de4:	mov    rax,QWORD PTR [rip+0xf4cd]        # 4132b8 <__bss_start@@Base+0x150>
  403deb:	add    rax,0x1
  403df1:	mov    QWORD PTR [rip+0xf4c0],rax        # 4132b8 <__bss_start@@Base+0x150>
  403df8:	mov    rax,QWORD PTR [rbp-0x10]
  403dfc:	mov    QWORD PTR [rbp-0x8],rax
  403e00:	mov    rcx,QWORD PTR [rbp-0x8]
  403e04:	mov    DWORD PTR [rcx],0x3
  403e0a:	pop    rbp
  403e0b:	ret    
  403e0c:	nop    DWORD PTR [rax+0x0]

0000000000403e10 <init_token_cpar@@Base>:
  403e10:	push   rbp
  403e11:	mov    rbp,rsp
  403e14:	lea    rax,[rip+0xf4a5]        # 4132c0 <__bss_start@@Base+0x158>
  403e1b:	mov    QWORD PTR [rbp-0x10],rdi
  403e1f:	mov    QWORD PTR [rbp-0x18],rax
  403e23:	mov    rax,QWORD PTR [rbp-0x18]
  403e27:	mov    rcx,QWORD PTR [rax]
  403e2a:	add    rcx,0x1
  403e31:	mov    QWORD PTR [rax],rcx
  403e34:	mov    rax,QWORD PTR [rip+0xf48d]        # 4132c8 <__bss_start@@Base+0x160>
  403e3b:	add    rax,0x1
  403e41:	mov    QWORD PTR [rip+0xf480],rax        # 4132c8 <__bss_start@@Base+0x160>
  403e48:	mov    rax,QWORD PTR [rbp-0x10]
  403e4c:	mov    QWORD PTR [rbp-0x8],rax
  403e50:	mov    rcx,QWORD PTR [rbp-0x8]
  403e54:	mov    DWORD PTR [rcx],0x4
  403e5a:	pop    rbp
  403e5b:	ret    
  403e5c:	nop    DWORD PTR [rax+0x0]

0000000000403e60 <init_token_obra@@Base>:
  403e60:	push   rbp
  403e61:	mov    rbp,rsp
  403e64:	lea    rax,[rip+0xf465]        # 4132d0 <__bss_start@@Base+0x168>
  403e6b:	mov    QWORD PTR [rbp-0x10],rdi
  403e6f:	mov    QWORD PTR [rbp-0x18],rax
  403e73:	mov    rax,QWORD PTR [rbp-0x18]
  403e77:	mov    rcx,QWORD PTR [rax]
  403e7a:	add    rcx,0x1
  403e81:	mov    QWORD PTR [rax],rcx
  403e84:	mov    rax,QWORD PTR [rip+0xf44d]        # 4132d8 <__bss_start@@Base+0x170>
  403e8b:	add    rax,0x1
  403e91:	mov    QWORD PTR [rip+0xf440],rax        # 4132d8 <__bss_start@@Base+0x170>
  403e98:	mov    rax,QWORD PTR [rbp-0x10]
  403e9c:	mov    QWORD PTR [rbp-0x8],rax
  403ea0:	mov    rcx,QWORD PTR [rbp-0x8]
  403ea4:	mov    DWORD PTR [rcx],0x5
  403eaa:	pop    rbp
  403eab:	ret    
  403eac:	nop    DWORD PTR [rax+0x0]

0000000000403eb0 <init_token_cbra@@Base>:
  403eb0:	push   rbp
  403eb1:	mov    rbp,rsp
  403eb4:	lea    rax,[rip+0xf425]        # 4132e0 <__bss_start@@Base+0x178>
  403ebb:	mov    QWORD PTR [rbp-0x10],rdi
  403ebf:	mov    QWORD PTR [rbp-0x18],rax
  403ec3:	mov    rax,QWORD PTR [rbp-0x18]
  403ec7:	mov    rcx,QWORD PTR [rax]
  403eca:	add    rcx,0x1
  403ed1:	mov    QWORD PTR [rax],rcx
  403ed4:	mov    rax,QWORD PTR [rip+0xf40d]        # 4132e8 <__bss_start@@Base+0x180>
  403edb:	add    rax,0x1
  403ee1:	mov    QWORD PTR [rip+0xf400],rax        # 4132e8 <__bss_start@@Base+0x180>
  403ee8:	mov    rax,QWORD PTR [rbp-0x10]
  403eec:	mov    QWORD PTR [rbp-0x8],rax
  403ef0:	mov    rcx,QWORD PTR [rbp-0x8]
  403ef4:	mov    DWORD PTR [rcx],0x6
  403efa:	pop    rbp
  403efb:	ret    
  403efc:	nop    DWORD PTR [rax+0x0]

0000000000403f00 <init_token_return@@Base>:
  403f00:	push   rbp
  403f01:	mov    rbp,rsp
  403f04:	lea    rax,[rip+0xf3e5]        # 4132f0 <__bss_start@@Base+0x188>
  403f0b:	mov    QWORD PTR [rbp-0x10],rdi
  403f0f:	mov    QWORD PTR [rbp-0x18],rax
  403f13:	mov    rax,QWORD PTR [rbp-0x18]
  403f17:	mov    rcx,QWORD PTR [rax]
  403f1a:	add    rcx,0x1
  403f21:	mov    QWORD PTR [rax],rcx
  403f24:	mov    rax,QWORD PTR [rip+0xf3cd]        # 4132f8 <__bss_start@@Base+0x190>
  403f2b:	add    rax,0x1
  403f31:	mov    QWORD PTR [rip+0xf3c0],rax        # 4132f8 <__bss_start@@Base+0x190>
  403f38:	mov    rax,QWORD PTR [rbp-0x10]
  403f3c:	mov    QWORD PTR [rbp-0x8],rax
  403f40:	mov    rcx,QWORD PTR [rbp-0x8]
  403f44:	mov    DWORD PTR [rcx],0x7
  403f4a:	pop    rbp
  403f4b:	ret    
  403f4c:	nop    DWORD PTR [rax+0x0]

0000000000403f50 <init_token_semicolon@@Base>:
  403f50:	push   rbp
  403f51:	mov    rbp,rsp
  403f54:	lea    rax,[rip+0xf3a5]        # 413300 <__bss_start@@Base+0x198>
  403f5b:	mov    QWORD PTR [rbp-0x10],rdi
  403f5f:	mov    QWORD PTR [rbp-0x18],rax
  403f63:	mov    rax,QWORD PTR [rbp-0x18]
  403f67:	mov    rcx,QWORD PTR [rax]
  403f6a:	add    rcx,0x1
  403f71:	mov    QWORD PTR [rax],rcx
  403f74:	mov    rax,QWORD PTR [rip+0xf38d]        # 413308 <__bss_start@@Base+0x1a0>
  403f7b:	add    rax,0x1
  403f81:	mov    QWORD PTR [rip+0xf380],rax        # 413308 <__bss_start@@Base+0x1a0>
  403f88:	mov    rax,QWORD PTR [rbp-0x10]
  403f8c:	mov    QWORD PTR [rbp-0x8],rax
  403f90:	mov    rcx,QWORD PTR [rbp-0x8]
  403f94:	mov    DWORD PTR [rcx],0x8
  403f9a:	pop    rbp
  403f9b:	ret    
  403f9c:	nop    DWORD PTR [rax+0x0]

0000000000403fa0 <init_token_eof@@Base>:
  403fa0:	push   rbp
  403fa1:	mov    rbp,rsp
  403fa4:	lea    rax,[rip+0xf365]        # 413310 <__bss_start@@Base+0x1a8>
  403fab:	mov    QWORD PTR [rbp-0x10],rdi
  403faf:	mov    QWORD PTR [rbp-0x18],rax
  403fb3:	mov    rax,QWORD PTR [rbp-0x18]
  403fb7:	mov    rcx,QWORD PTR [rax]
  403fba:	add    rcx,0x1
  403fc1:	mov    QWORD PTR [rax],rcx
  403fc4:	mov    rax,QWORD PTR [rip+0xf34d]        # 413318 <__bss_start@@Base+0x1b0>
  403fcb:	add    rax,0x1
  403fd1:	mov    QWORD PTR [rip+0xf340],rax        # 413318 <__bss_start@@Base+0x1b0>
  403fd8:	mov    rax,QWORD PTR [rbp-0x10]
  403fdc:	mov    QWORD PTR [rbp-0x8],rax
  403fe0:	mov    rcx,QWORD PTR [rbp-0x8]
  403fe4:	mov    DWORD PTR [rcx],0x9
  403fea:	pop    rbp
  403feb:	ret    
  403fec:	nop    DWORD PTR [rax+0x0]

0000000000403ff0 <init_token_if@@Base>:
  403ff0:	push   rbp
  403ff1:	mov    rbp,rsp
  403ff4:	lea    rax,[rip+0xf325]        # 413320 <__bss_start@@Base+0x1b8>
  403ffb:	mov    QWORD PTR [rbp-0x10],rdi
  403fff:	mov    QWORD PTR [rbp-0x18],rax
  404003:	mov    rax,QWORD PTR [rbp-0x18]
  404007:	mov    rcx,QWORD PTR [rax]
  40400a:	add    rcx,0x1
  404011:	mov    QWORD PTR [rax],rcx
  404014:	mov    rax,QWORD PTR [rip+0xf30d]        # 413328 <__bss_start@@Base+0x1c0>
  40401b:	add    rax,0x1
  404021:	mov    QWORD PTR [rip+0xf300],rax        # 413328 <__bss_start@@Base+0x1c0>
  404028:	mov    rax,QWORD PTR [rbp-0x10]
  40402c:	mov    QWORD PTR [rbp-0x8],rax
  404030:	mov    rcx,QWORD PTR [rbp-0x8]
  404034:	mov    DWORD PTR [rcx],0xa
  40403a:	pop    rbp
  40403b:	ret    
  40403c:	nop    DWORD PTR [rax+0x0]

0000000000404040 <init_token_else@@Base>:
  404040:	push   rbp
  404041:	mov    rbp,rsp
  404044:	lea    rax,[rip+0xf2e5]        # 413330 <__bss_start@@Base+0x1c8>
  40404b:	mov    QWORD PTR [rbp-0x10],rdi
  40404f:	mov    QWORD PTR [rbp-0x18],rax
  404053:	mov    rax,QWORD PTR [rbp-0x18]
  404057:	mov    rcx,QWORD PTR [rax]
  40405a:	add    rcx,0x1
  404061:	mov    QWORD PTR [rax],rcx
  404064:	mov    rax,QWORD PTR [rip+0xf2cd]        # 413338 <__bss_start@@Base+0x1d0>
  40406b:	add    rax,0x1
  404071:	mov    QWORD PTR [rip+0xf2c0],rax        # 413338 <__bss_start@@Base+0x1d0>
  404078:	mov    rax,QWORD PTR [rbp-0x10]
  40407c:	mov    QWORD PTR [rbp-0x8],rax
  404080:	mov    rcx,QWORD PTR [rbp-0x8]
  404084:	mov    DWORD PTR [rcx],0xb
  40408a:	pop    rbp
  40408b:	ret    
  40408c:	nop    DWORD PTR [rax+0x0]

0000000000404090 <init_token_boolean_op@@Base>:
  404090:	push   rbp
  404091:	mov    rbp,rsp
  404094:	lea    rax,[rip+0xf2a5]        # 413340 <__bss_start@@Base+0x1d8>
  40409b:	mov    QWORD PTR [rbp-0x18],rdi
  40409f:	mov    QWORD PTR [rbp-0x20],rsi
  4040a3:	mov    QWORD PTR [rbp-0x28],rax
  4040a7:	mov    rax,QWORD PTR [rbp-0x28]
  4040ab:	mov    rcx,QWORD PTR [rax]
  4040ae:	add    rcx,0x1
  4040b5:	mov    QWORD PTR [rax],rcx
  4040b8:	mov    rax,QWORD PTR [rip+0xf289]        # 413348 <__bss_start@@Base+0x1e0>
  4040bf:	add    rax,0x1
  4040c5:	mov    QWORD PTR [rip+0xf27c],rax        # 413348 <__bss_start@@Base+0x1e0>
  4040cc:	mov    rax,QWORD PTR [rbp-0x18]
  4040d0:	mov    QWORD PTR [rbp-0x8],rax
  4040d4:	mov    rcx,QWORD PTR [rbp-0x20]
  4040d8:	mov    QWORD PTR [rbp-0x10],rcx
  4040dc:	mov    rdx,QWORD PTR [rbp-0x8]
  4040e0:	mov    DWORD PTR [rdx],0xc
  4040e6:	mov    rdx,QWORD PTR [rbp-0x10]
  4040ea:	mov    rsi,QWORD PTR [rbp-0x8]
  4040ee:	mov    QWORD PTR [rsi+0x8],rdx
  4040f2:	pop    rbp
  4040f3:	ret    
  4040f4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4040fe:	xchg   ax,ax

0000000000404100 <free_token_int_type@@Base>:
  404100:	push   rbp
  404101:	mov    rbp,rsp
  404104:	sub    rsp,0x20
  404108:	lea    rax,[rip+0xf241]        # 413350 <__bss_start@@Base+0x1e8>
  40410f:	mov    QWORD PTR [rbp-0x10],rdi
  404113:	mov    QWORD PTR [rbp-0x18],rax
  404117:	mov    rax,QWORD PTR [rbp-0x18]
  40411b:	mov    rcx,QWORD PTR [rax]
  40411e:	add    rcx,0x1
  404125:	mov    QWORD PTR [rax],rcx
  404128:	mov    rax,QWORD PTR [rip+0xf229]        # 413358 <__bss_start@@Base+0x1f0>
  40412f:	add    rax,0x1
  404135:	mov    QWORD PTR [rip+0xf21c],rax        # 413358 <__bss_start@@Base+0x1f0>
  40413c:	mov    rax,QWORD PTR [rbp-0x10]
  404140:	mov    QWORD PTR [rbp-0x8],rax
  404144:	mov    rcx,QWORD PTR [rbp-0x8]
  404148:	mov    rdi,rcx
  40414b:	call   403040 <free@plt>
  404150:	add    rsp,0x20
  404154:	pop    rbp
  404155:	ret    
  404156:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000404160 <free_token_int_value@@Base>:
  404160:	push   rbp
  404161:	mov    rbp,rsp
  404164:	sub    rsp,0x20
  404168:	lea    rax,[rip+0xf1f1]        # 413360 <__bss_start@@Base+0x1f8>
  40416f:	mov    QWORD PTR [rbp-0x10],rdi
  404173:	mov    QWORD PTR [rbp-0x18],rax
  404177:	mov    rax,QWORD PTR [rbp-0x18]
  40417b:	mov    rcx,QWORD PTR [rax]
  40417e:	add    rcx,0x1
  404185:	mov    QWORD PTR [rax],rcx
  404188:	mov    rax,QWORD PTR [rip+0xf1d9]        # 413368 <__bss_start@@Base+0x200>
  40418f:	add    rax,0x1
  404195:	mov    QWORD PTR [rip+0xf1cc],rax        # 413368 <__bss_start@@Base+0x200>
  40419c:	mov    rax,QWORD PTR [rbp-0x10]
  4041a0:	mov    QWORD PTR [rbp-0x8],rax
  4041a4:	mov    rcx,QWORD PTR [rbp-0x8]
  4041a8:	mov    rdi,rcx
  4041ab:	call   403040 <free@plt>
  4041b0:	add    rsp,0x20
  4041b4:	pop    rbp
  4041b5:	ret    
  4041b6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004041c0 <free_token_function@@Base>:
  4041c0:	push   rbp
  4041c1:	mov    rbp,rsp
  4041c4:	sub    rsp,0x20
  4041c8:	lea    rax,[rip+0xf1a1]        # 413370 <__bss_start@@Base+0x208>
  4041cf:	mov    QWORD PTR [rbp-0x10],rdi
  4041d3:	mov    QWORD PTR [rbp-0x18],rax
  4041d7:	mov    rax,QWORD PTR [rbp-0x18]
  4041db:	mov    rcx,QWORD PTR [rax]
  4041de:	add    rcx,0x1
  4041e5:	mov    QWORD PTR [rax],rcx
  4041e8:	mov    rax,QWORD PTR [rip+0xf189]        # 413378 <__bss_start@@Base+0x210>
  4041ef:	add    rax,0x1
  4041f5:	mov    QWORD PTR [rip+0xf17c],rax        # 413378 <__bss_start@@Base+0x210>
  4041fc:	mov    rax,QWORD PTR [rbp-0x10]
  404200:	mov    QWORD PTR [rbp-0x8],rax
  404204:	mov    rcx,QWORD PTR [rbp-0x8]
  404208:	mov    rdi,rcx
  40420b:	call   403040 <free@plt>
  404210:	add    rsp,0x20
  404214:	pop    rbp
  404215:	ret    
  404216:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000404220 <free_token_opar@@Base>:
  404220:	push   rbp
  404221:	mov    rbp,rsp
  404224:	sub    rsp,0x20
  404228:	lea    rax,[rip+0xf151]        # 413380 <__bss_start@@Base+0x218>
  40422f:	mov    QWORD PTR [rbp-0x10],rdi
  404233:	mov    QWORD PTR [rbp-0x18],rax
  404237:	mov    rax,QWORD PTR [rbp-0x18]
  40423b:	mov    rcx,QWORD PTR [rax]
  40423e:	add    rcx,0x1
  404245:	mov    QWORD PTR [rax],rcx
  404248:	mov    rax,QWORD PTR [rip+0xf139]        # 413388 <__bss_start@@Base+0x220>
  40424f:	add    rax,0x1
  404255:	mov    QWORD PTR [rip+0xf12c],rax        # 413388 <__bss_start@@Base+0x220>
  40425c:	mov    rax,QWORD PTR [rbp-0x10]
  404260:	mov    QWORD PTR [rbp-0x8],rax
  404264:	mov    rcx,QWORD PTR [rbp-0x8]
  404268:	mov    rdi,rcx
  40426b:	call   403040 <free@plt>
  404270:	add    rsp,0x20
  404274:	pop    rbp
  404275:	ret    
  404276:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000404280 <free_token_cpar@@Base>:
  404280:	push   rbp
  404281:	mov    rbp,rsp
  404284:	sub    rsp,0x20
  404288:	lea    rax,[rip+0xf101]        # 413390 <__bss_start@@Base+0x228>
  40428f:	mov    QWORD PTR [rbp-0x10],rdi
  404293:	mov    QWORD PTR [rbp-0x18],rax
  404297:	mov    rax,QWORD PTR [rbp-0x18]
  40429b:	mov    rcx,QWORD PTR [rax]
  40429e:	add    rcx,0x1
  4042a5:	mov    QWORD PTR [rax],rcx
  4042a8:	mov    rax,QWORD PTR [rip+0xf0e9]        # 413398 <__bss_start@@Base+0x230>
  4042af:	add    rax,0x1
  4042b5:	mov    QWORD PTR [rip+0xf0dc],rax        # 413398 <__bss_start@@Base+0x230>
  4042bc:	mov    rax,QWORD PTR [rbp-0x10]
  4042c0:	mov    QWORD PTR [rbp-0x8],rax
  4042c4:	mov    rcx,QWORD PTR [rbp-0x8]
  4042c8:	mov    rdi,rcx
  4042cb:	call   403040 <free@plt>
  4042d0:	add    rsp,0x20
  4042d4:	pop    rbp
  4042d5:	ret    
  4042d6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004042e0 <free_token_obra@@Base>:
  4042e0:	push   rbp
  4042e1:	mov    rbp,rsp
  4042e4:	sub    rsp,0x20
  4042e8:	lea    rax,[rip+0xf0b1]        # 4133a0 <__bss_start@@Base+0x238>
  4042ef:	mov    QWORD PTR [rbp-0x10],rdi
  4042f3:	mov    QWORD PTR [rbp-0x18],rax
  4042f7:	mov    rax,QWORD PTR [rbp-0x18]
  4042fb:	mov    rcx,QWORD PTR [rax]
  4042fe:	add    rcx,0x1
  404305:	mov    QWORD PTR [rax],rcx
  404308:	mov    rax,QWORD PTR [rip+0xf099]        # 4133a8 <__bss_start@@Base+0x240>
  40430f:	add    rax,0x1
  404315:	mov    QWORD PTR [rip+0xf08c],rax        # 4133a8 <__bss_start@@Base+0x240>
  40431c:	mov    rax,QWORD PTR [rbp-0x10]
  404320:	mov    QWORD PTR [rbp-0x8],rax
  404324:	mov    rcx,QWORD PTR [rbp-0x8]
  404328:	mov    rdi,rcx
  40432b:	call   403040 <free@plt>
  404330:	add    rsp,0x20
  404334:	pop    rbp
  404335:	ret    
  404336:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000404340 <free_token_cbra@@Base>:
  404340:	push   rbp
  404341:	mov    rbp,rsp
  404344:	sub    rsp,0x20
  404348:	lea    rax,[rip+0xf061]        # 4133b0 <__bss_start@@Base+0x248>
  40434f:	mov    QWORD PTR [rbp-0x10],rdi
  404353:	mov    QWORD PTR [rbp-0x18],rax
  404357:	mov    rax,QWORD PTR [rbp-0x18]
  40435b:	mov    rcx,QWORD PTR [rax]
  40435e:	add    rcx,0x1
  404365:	mov    QWORD PTR [rax],rcx
  404368:	mov    rax,QWORD PTR [rip+0xf049]        # 4133b8 <__bss_start@@Base+0x250>
  40436f:	add    rax,0x1
  404375:	mov    QWORD PTR [rip+0xf03c],rax        # 4133b8 <__bss_start@@Base+0x250>
  40437c:	mov    rax,QWORD PTR [rbp-0x10]
  404380:	mov    QWORD PTR [rbp-0x8],rax
  404384:	mov    rcx,QWORD PTR [rbp-0x8]
  404388:	mov    rdi,rcx
  40438b:	call   403040 <free@plt>
  404390:	add    rsp,0x20
  404394:	pop    rbp
  404395:	ret    
  404396:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004043a0 <free_token_return@@Base>:
  4043a0:	push   rbp
  4043a1:	mov    rbp,rsp
  4043a4:	sub    rsp,0x20
  4043a8:	lea    rax,[rip+0xf011]        # 4133c0 <__bss_start@@Base+0x258>
  4043af:	mov    QWORD PTR [rbp-0x10],rdi
  4043b3:	mov    QWORD PTR [rbp-0x18],rax
  4043b7:	mov    rax,QWORD PTR [rbp-0x18]
  4043bb:	mov    rcx,QWORD PTR [rax]
  4043be:	add    rcx,0x1
  4043c5:	mov    QWORD PTR [rax],rcx
  4043c8:	mov    rax,QWORD PTR [rip+0xeff9]        # 4133c8 <__bss_start@@Base+0x260>
  4043cf:	add    rax,0x1
  4043d5:	mov    QWORD PTR [rip+0xefec],rax        # 4133c8 <__bss_start@@Base+0x260>
  4043dc:	mov    rax,QWORD PTR [rbp-0x10]
  4043e0:	mov    QWORD PTR [rbp-0x8],rax
  4043e4:	mov    rcx,QWORD PTR [rbp-0x8]
  4043e8:	mov    rdi,rcx
  4043eb:	call   403040 <free@plt>
  4043f0:	add    rsp,0x20
  4043f4:	pop    rbp
  4043f5:	ret    
  4043f6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000404400 <free_token_semicolon@@Base>:
  404400:	push   rbp
  404401:	mov    rbp,rsp
  404404:	sub    rsp,0x20
  404408:	lea    rax,[rip+0xefc1]        # 4133d0 <__bss_start@@Base+0x268>
  40440f:	mov    QWORD PTR [rbp-0x10],rdi
  404413:	mov    QWORD PTR [rbp-0x18],rax
  404417:	mov    rax,QWORD PTR [rbp-0x18]
  40441b:	mov    rcx,QWORD PTR [rax]
  40441e:	add    rcx,0x1
  404425:	mov    QWORD PTR [rax],rcx
  404428:	mov    rax,QWORD PTR [rip+0xefa9]        # 4133d8 <__bss_start@@Base+0x270>
  40442f:	add    rax,0x1
  404435:	mov    QWORD PTR [rip+0xef9c],rax        # 4133d8 <__bss_start@@Base+0x270>
  40443c:	mov    rax,QWORD PTR [rbp-0x10]
  404440:	mov    QWORD PTR [rbp-0x8],rax
  404444:	mov    rcx,QWORD PTR [rbp-0x8]
  404448:	mov    rdi,rcx
  40444b:	call   403040 <free@plt>
  404450:	add    rsp,0x20
  404454:	pop    rbp
  404455:	ret    
  404456:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000404460 <free_token_eof@@Base>:
  404460:	push   rbp
  404461:	mov    rbp,rsp
  404464:	sub    rsp,0x20
  404468:	lea    rax,[rip+0xef71]        # 4133e0 <__bss_start@@Base+0x278>
  40446f:	mov    QWORD PTR [rbp-0x10],rdi
  404473:	mov    QWORD PTR [rbp-0x18],rax
  404477:	mov    rax,QWORD PTR [rbp-0x18]
  40447b:	mov    rcx,QWORD PTR [rax]
  40447e:	add    rcx,0x1
  404485:	mov    QWORD PTR [rax],rcx
  404488:	mov    rax,QWORD PTR [rip+0xef59]        # 4133e8 <__bss_start@@Base+0x280>
  40448f:	add    rax,0x1
  404495:	mov    QWORD PTR [rip+0xef4c],rax        # 4133e8 <__bss_start@@Base+0x280>
  40449c:	mov    rax,QWORD PTR [rbp-0x10]
  4044a0:	mov    QWORD PTR [rbp-0x8],rax
  4044a4:	mov    rcx,QWORD PTR [rbp-0x8]
  4044a8:	mov    rdi,rcx
  4044ab:	call   403040 <free@plt>
  4044b0:	add    rsp,0x20
  4044b4:	pop    rbp
  4044b5:	ret    
  4044b6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004044c0 <free_token_if@@Base>:
  4044c0:	push   rbp
  4044c1:	mov    rbp,rsp
  4044c4:	sub    rsp,0x20
  4044c8:	lea    rax,[rip+0xef21]        # 4133f0 <__bss_start@@Base+0x288>
  4044cf:	mov    QWORD PTR [rbp-0x10],rdi
  4044d3:	mov    QWORD PTR [rbp-0x18],rax
  4044d7:	mov    rax,QWORD PTR [rbp-0x18]
  4044db:	mov    rcx,QWORD PTR [rax]
  4044de:	add    rcx,0x1
  4044e5:	mov    QWORD PTR [rax],rcx
  4044e8:	mov    rax,QWORD PTR [rip+0xef09]        # 4133f8 <__bss_start@@Base+0x290>
  4044ef:	add    rax,0x1
  4044f5:	mov    QWORD PTR [rip+0xeefc],rax        # 4133f8 <__bss_start@@Base+0x290>
  4044fc:	mov    rax,QWORD PTR [rbp-0x10]
  404500:	mov    QWORD PTR [rbp-0x8],rax
  404504:	mov    rcx,QWORD PTR [rbp-0x8]
  404508:	mov    rdi,rcx
  40450b:	call   403040 <free@plt>
  404510:	add    rsp,0x20
  404514:	pop    rbp
  404515:	ret    
  404516:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000404520 <free_token_else@@Base>:
  404520:	push   rbp
  404521:	mov    rbp,rsp
  404524:	sub    rsp,0x20
  404528:	lea    rax,[rip+0xeed1]        # 413400 <__bss_start@@Base+0x298>
  40452f:	mov    QWORD PTR [rbp-0x10],rdi
  404533:	mov    QWORD PTR [rbp-0x18],rax
  404537:	mov    rax,QWORD PTR [rbp-0x18]
  40453b:	mov    rcx,QWORD PTR [rax]
  40453e:	add    rcx,0x1
  404545:	mov    QWORD PTR [rax],rcx
  404548:	mov    rax,QWORD PTR [rip+0xeeb9]        # 413408 <__bss_start@@Base+0x2a0>
  40454f:	add    rax,0x1
  404555:	mov    QWORD PTR [rip+0xeeac],rax        # 413408 <__bss_start@@Base+0x2a0>
  40455c:	mov    rax,QWORD PTR [rbp-0x10]
  404560:	mov    QWORD PTR [rbp-0x8],rax
  404564:	mov    rcx,QWORD PTR [rbp-0x8]
  404568:	mov    rdi,rcx
  40456b:	call   403040 <free@plt>
  404570:	add    rsp,0x20
  404574:	pop    rbp
  404575:	ret    
  404576:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000404580 <free_token_boolean_op@@Base>:
  404580:	push   rbp
  404581:	mov    rbp,rsp
  404584:	sub    rsp,0x30
  404588:	lea    rax,[rip+0xee81]        # 413410 <__bss_start@@Base+0x2a8>
  40458f:	mov    QWORD PTR [rbp-0x10],rdi
  404593:	mov    QWORD PTR [rbp-0x18],rax
  404597:	mov    rax,QWORD PTR [rbp-0x18]
  40459b:	lea    rcx,[rip+0xee6e]        # 413410 <__bss_start@@Base+0x2a8>
  4045a2:	mov    rdx,rcx
  4045a5:	add    rdx,0x8
  4045ac:	add    rcx,0x10
  4045b3:	mov    rsi,QWORD PTR [rax]
  4045b6:	add    rsi,0x1
  4045bd:	mov    QWORD PTR [rax],rsi
  4045c0:	mov    rax,QWORD PTR [rbp-0x10]
  4045c4:	mov    QWORD PTR [rbp-0x8],rax
  4045c8:	mov    rsi,QWORD PTR [rbp-0x8]
  4045cc:	cmp    QWORD PTR [rsi+0x8],0x0
  4045d1:	mov    QWORD PTR [rbp-0x20],rdx
  4045d5:	mov    QWORD PTR [rbp-0x28],rcx
  4045d9:	je     40460e <free_token_boolean_op@@Base+0x8e>
  4045df:	mov    rax,QWORD PTR [rbp-0x20]
  4045e3:	mov    rcx,QWORD PTR [rax]
  4045e6:	add    rcx,0x1
  4045ed:	mov    QWORD PTR [rax],rcx
  4045f0:	mov    rax,QWORD PTR [rbp-0x8]
  4045f4:	mov    rdi,QWORD PTR [rax+0x8]
  4045f8:	call   403040 <free@plt>
  4045fd:	lea    rax,[rip+0xee0c]        # 413410 <__bss_start@@Base+0x2a8>
  404604:	add    rax,0x18
  40460a:	mov    QWORD PTR [rbp-0x28],rax
  40460e:	mov    rax,QWORD PTR [rbp-0x28]
  404612:	mov    rcx,QWORD PTR [rax]
  404615:	add    rcx,0x1
  40461c:	mov    QWORD PTR [rax],rcx
  40461f:	mov    rax,QWORD PTR [rip+0xee0a]        # 413430 <__bss_start@@Base+0x2c8>
  404626:	add    rax,0x1
  40462c:	mov    QWORD PTR [rip+0xedfd],rax        # 413430 <__bss_start@@Base+0x2c8>
  404633:	mov    rax,QWORD PTR [rbp-0x8]
  404637:	mov    rdi,rax
  40463a:	call   403040 <free@plt>
  40463f:	add    rsp,0x30
  404643:	pop    rbp
  404644:	ret    
  404645:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40464f:	nop
  404650:	sub    rsp,0x38
  404654:	xor    eax,eax
  404656:	mov    DWORD PTR [rsp+0x34],eax
  40465a:	jmp    40465f <free_token_boolean_op@@Base+0xdf>
  40465f:	mov    eax,DWORD PTR [rsp+0x34]
  404663:	movsxd rcx,eax
  404666:	imul   rcx,rcx,0x30
  40466d:	lea    rdx,[rip+0xdd8c]        # 412400 <_IO_stdin_used@@Base+0x4400>
  404674:	add    rdx,rcx
  404677:	mov    rdi,QWORD PTR [rdx]
  40467a:	mov    rsi,QWORD PTR [rdx+0x8]
  40467e:	mov    r8d,DWORD PTR [rdx+0x10]
  404682:	mov    QWORD PTR [rsp+0x28],rdx
  404687:	mov    edx,r8d
  40468a:	mov    DWORD PTR [rsp+0x24],eax
  40468e:	call   40c050 <__generate_code_for_binary_boolean_expression@@Base+0x8f0>
  404693:	xor    eax,eax
  404695:	mov    rcx,QWORD PTR [rsp+0x28]
  40469a:	mov    edx,DWORD PTR [rcx+0x18]
  40469d:	mov    rsi,QWORD PTR [rcx+0x20]
  4046a1:	mov    rdi,QWORD PTR [rcx+0x28]
  4046a5:	cmp    eax,edx
  4046a7:	mov    DWORD PTR [rsp+0x20],edx
  4046ab:	mov    QWORD PTR [rsp+0x18],rsi
  4046b0:	mov    QWORD PTR [rsp+0x10],rdi
  4046b5:	mov    DWORD PTR [rsp+0xc],eax
  4046b9:	jge    40472d <free_token_boolean_op@@Base+0x1ad>
  4046bf:	mov    eax,DWORD PTR [rsp+0xc]
  4046c3:	movsxd rcx,eax
  4046c6:	shl    rcx,0x5
  4046ca:	mov    rdx,QWORD PTR [rsp+0x18]
  4046cf:	add    rdx,rcx
  4046d2:	mov    edi,DWORD PTR [rdx]
  4046d4:	mov    rsi,QWORD PTR [rdx+0x8]
  4046d8:	mov    r8d,DWORD PTR [rdx+0x10]
  4046dc:	mov    r9b,BYTE PTR [rdx+0x14]
  4046e0:	mov    r10d,DWORD PTR [rdx+0x18]
  4046e4:	mov    edx,r8d
  4046e7:	movzx  ecx,r9b
  4046eb:	mov    r8d,r10d
  4046ee:	mov    DWORD PTR [rsp+0x8],eax
  4046f2:	call   40c4a0 <__generate_code_for_binary_boolean_expression@@Base+0xd40>
  4046f7:	mov    eax,DWORD PTR [rsp+0x8]
  4046fb:	movsxd rsi,eax
  4046fe:	shl    rsi,0x4
  404702:	mov    r11,QWORD PTR [rsp+0x10]
  404707:	add    r11,rsi
  40470a:	mov    edi,DWORD PTR [r11]
  40470d:	mov    rsi,QWORD PTR [r11+0x8]
  404711:	call   40c8c0 <__generate_code_for_binary_boolean_expression@@Base+0x1160>
  404716:	mov    eax,DWORD PTR [rsp+0x8]
  40471a:	add    eax,0x1
  40471d:	mov    ecx,DWORD PTR [rsp+0x20]
  404721:	cmp    eax,ecx
  404723:	mov    DWORD PTR [rsp+0xc],eax
  404727:	jl     4046bf <free_token_boolean_op@@Base+0x13f>
  40472d:	call   40ccd0 <__generate_code_for_binary_boolean_expression@@Base+0x1570>
  404732:	call   40d470 <__generate_code_for_binary_boolean_expression@@Base+0x1d10>
  404737:	mov    eax,DWORD PTR [rsp+0x24]
  40473b:	add    eax,0x1
  40473e:	cmp    eax,0x1
  404741:	mov    DWORD PTR [rsp+0x34],eax
  404745:	jl     40465f <free_token_boolean_op@@Base+0xdf>
  40474b:	add    rsp,0x38
  40474f:	ret    
  404750:	push   rax
  404751:	call   404650 <free_token_boolean_op@@Base+0xd0>
  404756:	mov    QWORD PTR [rip+0xeb27],0x0        # 413288 <__bss_start@@Base+0x120>
  404761:	mov    QWORD PTR [rip+0xeb14],0x0        # 413280 <__bss_start@@Base+0x118>
  40476c:	mov    QWORD PTR [rip+0xeb21],0x0        # 413298 <__bss_start@@Base+0x130>
  404777:	mov    QWORD PTR [rip+0xeb0e],0x0        # 413290 <__bss_start@@Base+0x128>
  404782:	mov    QWORD PTR [rip+0xeb1b],0x0        # 4132a8 <__bss_start@@Base+0x140>
  40478d:	mov    QWORD PTR [rip+0xeb08],0x0        # 4132a0 <__bss_start@@Base+0x138>
  404798:	mov    QWORD PTR [rip+0xeb15],0x0        # 4132b8 <__bss_start@@Base+0x150>
  4047a3:	mov    QWORD PTR [rip+0xeb02],0x0        # 4132b0 <__bss_start@@Base+0x148>
  4047ae:	mov    QWORD PTR [rip+0xeb0f],0x0        # 4132c8 <__bss_start@@Base+0x160>
  4047b9:	mov    QWORD PTR [rip+0xeafc],0x0        # 4132c0 <__bss_start@@Base+0x158>
  4047c4:	mov    QWORD PTR [rip+0xeb09],0x0        # 4132d8 <__bss_start@@Base+0x170>
  4047cf:	mov    QWORD PTR [rip+0xeaf6],0x0        # 4132d0 <__bss_start@@Base+0x168>
  4047da:	mov    QWORD PTR [rip+0xeb03],0x0        # 4132e8 <__bss_start@@Base+0x180>
  4047e5:	mov    QWORD PTR [rip+0xeaf0],0x0        # 4132e0 <__bss_start@@Base+0x178>
  4047f0:	mov    QWORD PTR [rip+0xeafd],0x0        # 4132f8 <__bss_start@@Base+0x190>
  4047fb:	mov    QWORD PTR [rip+0xeaea],0x0        # 4132f0 <__bss_start@@Base+0x188>
  404806:	mov    QWORD PTR [rip+0xeaf7],0x0        # 413308 <__bss_start@@Base+0x1a0>
  404811:	mov    QWORD PTR [rip+0xeae4],0x0        # 413300 <__bss_start@@Base+0x198>
  40481c:	mov    QWORD PTR [rip+0xeaf1],0x0        # 413318 <__bss_start@@Base+0x1b0>
  404827:	mov    QWORD PTR [rip+0xeade],0x0        # 413310 <__bss_start@@Base+0x1a8>
  404832:	mov    QWORD PTR [rip+0xeaeb],0x0        # 413328 <__bss_start@@Base+0x1c0>
  40483d:	mov    QWORD PTR [rip+0xead8],0x0        # 413320 <__bss_start@@Base+0x1b8>
  404848:	mov    QWORD PTR [rip+0xeae5],0x0        # 413338 <__bss_start@@Base+0x1d0>
  404853:	mov    QWORD PTR [rip+0xead2],0x0        # 413330 <__bss_start@@Base+0x1c8>
  40485e:	mov    QWORD PTR [rip+0xeadf],0x0        # 413348 <__bss_start@@Base+0x1e0>
  404869:	mov    QWORD PTR [rip+0xeacc],0x0        # 413340 <__bss_start@@Base+0x1d8>
  404874:	mov    QWORD PTR [rip+0xead9],0x0        # 413358 <__bss_start@@Base+0x1f0>
  40487f:	mov    QWORD PTR [rip+0xeac6],0x0        # 413350 <__bss_start@@Base+0x1e8>
  40488a:	mov    QWORD PTR [rip+0xead3],0x0        # 413368 <__bss_start@@Base+0x200>
  404895:	mov    QWORD PTR [rip+0xeac0],0x0        # 413360 <__bss_start@@Base+0x1f8>
  4048a0:	mov    QWORD PTR [rip+0xeacd],0x0        # 413378 <__bss_start@@Base+0x210>
  4048ab:	mov    QWORD PTR [rip+0xeaba],0x0        # 413370 <__bss_start@@Base+0x208>
  4048b6:	mov    QWORD PTR [rip+0xeac7],0x0        # 413388 <__bss_start@@Base+0x220>
  4048c1:	mov    QWORD PTR [rip+0xeab4],0x0        # 413380 <__bss_start@@Base+0x218>
  4048cc:	mov    QWORD PTR [rip+0xeac1],0x0        # 413398 <__bss_start@@Base+0x230>
  4048d7:	mov    QWORD PTR [rip+0xeaae],0x0        # 413390 <__bss_start@@Base+0x228>
  4048e2:	mov    QWORD PTR [rip+0xeabb],0x0        # 4133a8 <__bss_start@@Base+0x240>
  4048ed:	mov    QWORD PTR [rip+0xeaa8],0x0        # 4133a0 <__bss_start@@Base+0x238>
  4048f8:	mov    QWORD PTR [rip+0xeab5],0x0        # 4133b8 <__bss_start@@Base+0x250>
  404903:	mov    QWORD PTR [rip+0xeaa2],0x0        # 4133b0 <__bss_start@@Base+0x248>
  40490e:	mov    QWORD PTR [rip+0xeaaf],0x0        # 4133c8 <__bss_start@@Base+0x260>
  404919:	mov    QWORD PTR [rip+0xea9c],0x0        # 4133c0 <__bss_start@@Base+0x258>
  404924:	mov    QWORD PTR [rip+0xeaa9],0x0        # 4133d8 <__bss_start@@Base+0x270>
  40492f:	mov    QWORD PTR [rip+0xea96],0x0        # 4133d0 <__bss_start@@Base+0x268>
  40493a:	mov    QWORD PTR [rip+0xeaa3],0x0        # 4133e8 <__bss_start@@Base+0x280>
  404945:	mov    QWORD PTR [rip+0xea90],0x0        # 4133e0 <__bss_start@@Base+0x278>
  404950:	mov    QWORD PTR [rip+0xea9d],0x0        # 4133f8 <__bss_start@@Base+0x290>
  40495b:	mov    QWORD PTR [rip+0xea8a],0x0        # 4133f0 <__bss_start@@Base+0x288>
  404966:	mov    QWORD PTR [rip+0xea97],0x0        # 413408 <__bss_start@@Base+0x2a0>
  404971:	mov    QWORD PTR [rip+0xea84],0x0        # 413400 <__bss_start@@Base+0x298>
  40497c:	mov    QWORD PTR [rip+0xeaa9],0x0        # 413430 <__bss_start@@Base+0x2c8>
  404987:	mov    QWORD PTR [rip+0xea96],0x0        # 413428 <__bss_start@@Base+0x2c0>
  404992:	mov    QWORD PTR [rip+0xea83],0x0        # 413420 <__bss_start@@Base+0x2b8>
  40499d:	mov    QWORD PTR [rip+0xea70],0x0        # 413418 <__bss_start@@Base+0x2b0>
  4049a8:	mov    QWORD PTR [rip+0xea5d],0x0        # 413410 <__bss_start@@Base+0x2a8>
  4049b3:	pop    rax
  4049b4:	ret    
  4049b5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4049bf:	nop
  4049c0:	push   rax
  4049c1:	lea    rdi,[rip+0xfffffffffffffc88]        # 404650 <free_token_boolean_op@@Base+0xd0>
  4049c8:	lea    rsi,[rip+0xfffffffffffffd81]        # 404750 <free_token_boolean_op@@Base+0x1d0>
  4049cf:	call   40d850 <__gcov_flush@@Base+0xb0>
  4049d4:	pop    rax
  4049d5:	ret    
  4049d6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004049e0 <init_lexer@@Base>:
  4049e0:	push   rbp
  4049e1:	mov    rbp,rsp
  4049e4:	lea    rax,[rip+0xea55]        # 413440 <__bss_start@@Base+0x2d8>
  4049eb:	mov    QWORD PTR [rbp-0x18],rdi
  4049ef:	mov    QWORD PTR [rbp-0x20],rsi
  4049f3:	mov    QWORD PTR [rbp-0x28],rax
  4049f7:	mov    rax,QWORD PTR [rbp-0x28]
  4049fb:	mov    rcx,QWORD PTR [rax]
  4049fe:	add    rcx,0x1
  404a05:	mov    QWORD PTR [rax],rcx
  404a08:	mov    rax,QWORD PTR [rip+0xea39]        # 413448 <__bss_start@@Base+0x2e0>
  404a0f:	add    rax,0x1
  404a15:	mov    QWORD PTR [rip+0xea2c],rax        # 413448 <__bss_start@@Base+0x2e0>
  404a1c:	mov    rax,QWORD PTR [rbp-0x18]
  404a20:	mov    QWORD PTR [rbp-0x8],rax
  404a24:	mov    rcx,QWORD PTR [rbp-0x20]
  404a28:	mov    QWORD PTR [rbp-0x10],rcx
  404a2c:	mov    rdx,QWORD PTR [rbp-0x10]
  404a30:	mov    rsi,QWORD PTR [rbp-0x8]
  404a34:	mov    QWORD PTR [rsi],rdx
  404a37:	mov    rdx,QWORD PTR [rbp-0x8]
  404a3b:	mov    QWORD PTR [rdx+0x8],0x0
  404a43:	mov    rdx,QWORD PTR [rbp-0x8]
  404a47:	mov    QWORD PTR [rdx+0x10],0x0
  404a4f:	pop    rbp
  404a50:	ret    
  404a51:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404a5b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404a60 <destroy_lexer@@Base>:
  404a60:	push   rbp
  404a61:	mov    rbp,rsp
  404a64:	sub    rsp,0x40
  404a68:	lea    rax,[rip+0xe9e1]        # 413450 <__bss_start@@Base+0x2e8>
  404a6f:	mov    QWORD PTR [rbp-0x20],rdi
  404a73:	mov    QWORD PTR [rbp-0x28],rax
  404a77:	mov    rax,QWORD PTR [rbp-0x28]
  404a7b:	lea    rcx,[rip+0xe9ce]        # 413450 <__bss_start@@Base+0x2e8>
  404a82:	mov    rdx,rcx
  404a85:	add    rdx,0x8
  404a8c:	add    rcx,0x10
  404a93:	mov    rsi,QWORD PTR [rax]
  404a96:	add    rsi,0x1
  404a9d:	mov    QWORD PTR [rax],rsi
  404aa0:	mov    rax,QWORD PTR [rbp-0x20]
  404aa4:	mov    QWORD PTR [rbp-0x8],rax
  404aa8:	mov    QWORD PTR [rbp-0x10],0x0
  404ab0:	mov    rsi,QWORD PTR [rbp-0x8]
  404ab4:	mov    rsi,QWORD PTR [rsi+0x8]
  404ab8:	mov    QWORD PTR [rbp-0x18],rsi
  404abc:	cmp    QWORD PTR [rbp-0x18],0x0
  404ac1:	mov    QWORD PTR [rbp-0x30],rdx
  404ac5:	mov    QWORD PTR [rbp-0x38],rcx
  404ac9:	je     404b0d <destroy_lexer@@Base+0xad>
  404acf:	mov    rax,QWORD PTR [rbp-0x30]
  404ad3:	mov    rcx,QWORD PTR [rax]
  404ad6:	add    rcx,0x1
  404add:	mov    QWORD PTR [rax],rcx
  404ae0:	mov    rax,QWORD PTR [rbp-0x18]
  404ae4:	mov    QWORD PTR [rbp-0x10],rax
  404ae8:	mov    rax,QWORD PTR [rbp-0x18]
  404aec:	mov    rax,QWORD PTR [rax]
  404aef:	mov    QWORD PTR [rbp-0x18],rax
  404af3:	mov    rdi,QWORD PTR [rbp-0x10]
  404af7:	call   404b40 <free_stack_base@@Base>
  404afc:	lea    rax,[rip+0xe94d]        # 413450 <__bss_start@@Base+0x2e8>
  404b03:	add    rax,0x18
  404b09:	mov    QWORD PTR [rbp-0x38],rax
  404b0d:	mov    rax,QWORD PTR [rbp-0x38]
  404b11:	mov    rcx,QWORD PTR [rax]
  404b14:	add    rcx,0x1
  404b1b:	mov    QWORD PTR [rax],rcx
  404b1e:	mov    rax,QWORD PTR [rip+0xe94b]        # 413470 <__bss_start@@Base+0x308>
  404b25:	add    rax,0x1
  404b2b:	mov    QWORD PTR [rip+0xe93e],rax        # 413470 <__bss_start@@Base+0x308>
  404b32:	add    rsp,0x40
  404b36:	pop    rbp
  404b37:	ret    
  404b38:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404b40 <free_stack_base@@Base>:
  404b40:	push   rbp
  404b41:	mov    rbp,rsp
  404b44:	sub    rsp,0x20
  404b48:	lea    rax,[rip+0xe929]        # 413478 <__bss_start@@Base+0x310>
  404b4f:	mov    QWORD PTR [rbp-0x10],rdi
  404b53:	mov    QWORD PTR [rbp-0x18],rax
  404b57:	mov    rax,QWORD PTR [rbp-0x18]
  404b5b:	mov    rcx,QWORD PTR [rax]
  404b5e:	add    rcx,0x1
  404b65:	mov    QWORD PTR [rax],rcx
  404b68:	mov    rax,QWORD PTR [rip+0xe911]        # 413480 <__bss_start@@Base+0x318>
  404b6f:	add    rax,0x1
  404b75:	mov    QWORD PTR [rip+0xe904],rax        # 413480 <__bss_start@@Base+0x318>
  404b7c:	mov    rax,QWORD PTR [rbp-0x10]
  404b80:	mov    QWORD PTR [rbp-0x8],rax
  404b84:	mov    rcx,QWORD PTR [rbp-0x8]
  404b88:	mov    rdi,rcx
  404b8b:	call   403040 <free@plt>
  404b90:	add    rsp,0x20
  404b94:	pop    rbp
  404b95:	ret    
  404b96:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000404ba0 <push_back@@Base>:
  404ba0:	push   rbp
  404ba1:	mov    rbp,rsp
  404ba4:	sub    rsp,0x30
  404ba8:	lea    rax,[rip+0xe8d9]        # 413488 <__bss_start@@Base+0x320>
  404baf:	mov    QWORD PTR [rbp-0x20],rdi
  404bb3:	mov    QWORD PTR [rbp-0x28],rsi
  404bb7:	mov    QWORD PTR [rbp-0x30],rax
  404bbb:	mov    rax,QWORD PTR [rbp-0x30]
  404bbf:	mov    rcx,QWORD PTR [rax]
  404bc2:	add    rcx,0x1
  404bc9:	mov    QWORD PTR [rax],rcx
  404bcc:	mov    rax,QWORD PTR [rip+0xe8bd]        # 413490 <__bss_start@@Base+0x328>
  404bd3:	add    rax,0x1
  404bd9:	mov    QWORD PTR [rip+0xe8b0],rax        # 413490 <__bss_start@@Base+0x328>
  404be0:	mov    rax,QWORD PTR [rbp-0x20]
  404be4:	mov    QWORD PTR [rbp-0x8],rax
  404be8:	mov    rcx,QWORD PTR [rbp-0x28]
  404bec:	mov    QWORD PTR [rbp-0x10],rcx
  404bf0:	mov    edi,0x10
  404bf5:	call   4031b0 <malloc@plt>
  404bfa:	mov    QWORD PTR [rbp-0x18],rax
  404bfe:	mov    rax,QWORD PTR [rbp-0x10]
  404c02:	mov    rcx,QWORD PTR [rbp-0x18]
  404c06:	mov    QWORD PTR [rcx+0x8],rax
  404c0a:	mov    rax,QWORD PTR [rbp-0x8]
  404c0e:	mov    rax,QWORD PTR [rax+0x8]
  404c12:	mov    rcx,QWORD PTR [rbp-0x18]
  404c16:	mov    QWORD PTR [rcx],rax
  404c19:	mov    rax,QWORD PTR [rbp-0x18]
  404c1d:	mov    rcx,QWORD PTR [rbp-0x8]
  404c21:	mov    QWORD PTR [rcx+0x8],rax
  404c25:	add    rsp,0x30
  404c29:	pop    rbp
  404c2a:	ret    
  404c2b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404c30 <get_char@@Base>:
  404c30:	push   rbp
  404c31:	mov    rbp,rsp
  404c34:	lea    rax,[rip+0xe85d]        # 413498 <__bss_start@@Base+0x330>
  404c3b:	mov    QWORD PTR [rbp-0x10],rdi
  404c3f:	mov    QWORD PTR [rbp-0x18],rax
  404c43:	mov    rax,QWORD PTR [rbp-0x18]
  404c47:	mov    rcx,QWORD PTR [rax]
  404c4a:	add    rcx,0x1
  404c51:	mov    QWORD PTR [rax],rcx
  404c54:	mov    rax,QWORD PTR [rip+0xe845]        # 4134a0 <__bss_start@@Base+0x338>
  404c5b:	add    rax,0x1
  404c61:	mov    QWORD PTR [rip+0xe838],rax        # 4134a0 <__bss_start@@Base+0x338>
  404c68:	mov    rax,QWORD PTR [rbp-0x10]
  404c6c:	mov    QWORD PTR [rbp-0x8],rax
  404c70:	mov    rcx,QWORD PTR [rbp-0x8]
  404c74:	mov    rcx,QWORD PTR [rcx]
  404c77:	mov    rdx,QWORD PTR [rbp-0x8]
  404c7b:	mov    rsi,QWORD PTR [rdx+0x10]
  404c7f:	mov    rdi,rsi
  404c82:	add    rdi,0x1
  404c89:	mov    QWORD PTR [rdx+0x10],rdi
  404c8d:	movsx  r8d,BYTE PTR [rcx+rsi*1]
  404c92:	mov    eax,r8d
  404c95:	pop    rbp
  404c96:	ret    
  404c97:	nop    WORD PTR [rax+rax*1+0x0]

0000000000404ca0 <push_back_chars@@Base>:
  404ca0:	push   rbp
  404ca1:	mov    rbp,rsp
  404ca4:	sub    rsp,0x50
  404ca8:	lea    rax,[rip+0xe801]        # 4134b0 <__bss_start@@Base+0x348>
  404caf:	mov    QWORD PTR [rbp-0x18],rdi
  404cb3:	mov    QWORD PTR [rbp-0x20],rsi
  404cb7:	mov    QWORD PTR [rbp-0x28],rax
  404cbb:	mov    rax,QWORD PTR [rbp-0x28]
  404cbf:	lea    rcx,[rip+0xe7ea]        # 4134b0 <__bss_start@@Base+0x348>
  404cc6:	mov    rdx,rcx
  404cc9:	add    rdx,0x8
  404cd0:	add    rcx,0x10
  404cd7:	mov    rsi,QWORD PTR [rax]
  404cda:	add    rsi,0x1
  404ce1:	mov    QWORD PTR [rax],rsi
  404ce4:	mov    rax,QWORD PTR [rbp-0x18]
  404ce8:	mov    QWORD PTR [rbp-0x8],rax
  404cec:	mov    rsi,QWORD PTR [rbp-0x20]
  404cf0:	mov    QWORD PTR [rbp-0x10],rsi
  404cf4:	mov    rdi,QWORD PTR [rbp-0x8]
  404cf8:	mov    rdi,QWORD PTR [rdi+0x10]
  404cfc:	cmp    rdi,QWORD PTR [rbp-0x10]
  404d00:	mov    QWORD PTR [rbp-0x30],rdx
  404d04:	mov    QWORD PTR [rbp-0x38],rcx
  404d08:	jb     404d49 <push_back_chars@@Base+0xa9>
  404d0e:	mov    rax,QWORD PTR [rbp-0x30]
  404d12:	lea    rcx,[rip+0xe797]        # 4134b0 <__bss_start@@Base+0x348>
  404d19:	add    rcx,0x18
  404d20:	mov    rdx,QWORD PTR [rax]
  404d23:	add    rdx,0x1
  404d2a:	mov    QWORD PTR [rax],rdx
  404d2d:	mov    rax,QWORD PTR [rbp-0x10]
  404d31:	mov    rdx,QWORD PTR [rbp-0x8]
  404d35:	mov    rsi,QWORD PTR [rdx+0x10]
  404d39:	sub    rsi,rax
  404d3c:	mov    QWORD PTR [rdx+0x10],rsi
  404d40:	mov    QWORD PTR [rbp-0x40],rcx
  404d44:	jmp    404d7f <push_back_chars@@Base+0xdf>
  404d49:	mov    rax,QWORD PTR [rbp-0x38]
  404d4d:	mov    rcx,QWORD PTR [rip+0xe29c]        # 412ff0 <stderr@GLIBC_2.2.5>
  404d54:	mov    rdx,QWORD PTR [rax]
  404d57:	add    rdx,0x1
  404d5e:	mov    QWORD PTR [rax],rdx
  404d61:	mov    rdi,QWORD PTR [rcx]
  404d64:	lea    rsi,[rip+0x961d]        # 40e388 <_IO_stdin_used@@Base+0x388>
  404d6b:	mov    al,0x0
  404d6d:	call   403150 <fprintf@plt>
  404d72:	mov    edi,0x1
  404d77:	mov    DWORD PTR [rbp-0x44],eax
  404d7a:	call   403260 <exit@plt>
  404d7f:	mov    rax,QWORD PTR [rbp-0x40]
  404d83:	mov    rcx,QWORD PTR [rax]
  404d86:	add    rcx,0x1
  404d8d:	mov    QWORD PTR [rax],rcx
  404d90:	mov    rax,QWORD PTR [rip+0xe739]        # 4134d0 <__bss_start@@Base+0x368>
  404d97:	add    rax,0x1
  404d9d:	mov    QWORD PTR [rip+0xe72c],rax        # 4134d0 <__bss_start@@Base+0x368>
  404da4:	add    rsp,0x50
  404da8:	pop    rbp
  404da9:	ret    
  404daa:	nop    WORD PTR [rax+rax*1+0x0]

0000000000404db0 <push_back_one_char@@Base>:
  404db0:	push   rbp
  404db1:	mov    rbp,rsp
  404db4:	sub    rsp,0x20
  404db8:	lea    rax,[rip+0xe719]        # 4134d8 <__bss_start@@Base+0x370>
  404dbf:	mov    QWORD PTR [rbp-0x10],rdi
  404dc3:	mov    QWORD PTR [rbp-0x18],rax
  404dc7:	mov    rax,QWORD PTR [rbp-0x18]
  404dcb:	mov    rcx,QWORD PTR [rax]
  404dce:	add    rcx,0x1
  404dd5:	mov    QWORD PTR [rax],rcx
  404dd8:	mov    rax,QWORD PTR [rip+0xe701]        # 4134e0 <__bss_start@@Base+0x378>
  404ddf:	add    rax,0x1
  404de5:	mov    QWORD PTR [rip+0xe6f4],rax        # 4134e0 <__bss_start@@Base+0x378>
  404dec:	mov    rax,QWORD PTR [rbp-0x10]
  404df0:	mov    QWORD PTR [rbp-0x8],rax
  404df4:	mov    rdi,QWORD PTR [rbp-0x8]
  404df8:	mov    esi,0x1
  404dfd:	call   404ca0 <push_back_chars@@Base>
  404e02:	add    rsp,0x20
  404e06:	pop    rbp
  404e07:	ret    
  404e08:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404e10 <next@@Base>:
  404e10:	push   rbp
  404e11:	mov    rbp,rsp
  404e14:	sub    rsp,0x620
  404e1b:	lea    rax,[rip+0xe6ce]        # 4134f0 <__bss_start@@Base+0x388>
  404e22:	mov    QWORD PTR [rbp-0x250],rdi
  404e29:	mov    QWORD PTR [rbp-0x258],rax
  404e30:	mov    rax,QWORD PTR [rbp-0x258]
  404e37:	lea    rcx,[rip+0xe6b2]        # 4134f0 <__bss_start@@Base+0x388>
  404e3e:	mov    rdx,rcx
  404e41:	add    rdx,0x8
  404e48:	add    rcx,0x10
  404e4f:	mov    rsi,QWORD PTR [rax]
  404e52:	add    rsi,0x1
  404e59:	mov    QWORD PTR [rax],rsi
  404e5c:	mov    rax,QWORD PTR [rbp-0x250]
  404e63:	mov    QWORD PTR [rbp-0x10],rax
  404e67:	mov    QWORD PTR [rbp-0x218],0x0
  404e72:	mov    DWORD PTR [rbp-0x21c],0x0
  404e7c:	mov    QWORD PTR [rbp-0x228],0x0
  404e87:	mov    QWORD PTR [rbp-0x238],0x0
  404e92:	mov    QWORD PTR [rbp-0x240],0x0
  404e9d:	mov    rsi,QWORD PTR [rbp-0x10]
  404ea1:	cmp    QWORD PTR [rsi+0x8],0x0
  404ea6:	mov    QWORD PTR [rbp-0x260],rdx
  404ead:	mov    QWORD PTR [rbp-0x268],rcx
  404eb4:	je     404f41 <next@@Base+0x131>
  404eba:	mov    rax,QWORD PTR [rbp-0x260]
  404ec1:	mov    rcx,QWORD PTR [rax]
  404ec4:	add    rcx,0x1
  404ecb:	mov    QWORD PTR [rax],rcx
  404ece:	mov    rax,QWORD PTR [rbp-0x10]
  404ed2:	mov    rax,QWORD PTR [rax+0x8]
  404ed6:	mov    QWORD PTR [rbp-0x248],rax
  404edd:	mov    rax,QWORD PTR [rbp-0x10]
  404ee1:	mov    rax,QWORD PTR [rax+0x8]
  404ee5:	mov    rax,QWORD PTR [rax]
  404ee8:	mov    rcx,QWORD PTR [rbp-0x10]
  404eec:	mov    QWORD PTR [rcx+0x8],rax
  404ef0:	mov    rax,QWORD PTR [rbp-0x248]
  404ef7:	mov    rax,QWORD PTR [rax+0x8]
  404efb:	mov    QWORD PTR [rbp-0x238],rax
  404f02:	mov    rax,QWORD PTR [rbp-0x248]
  404f09:	mov    QWORD PTR [rax+0x8],0x0
  404f11:	mov    rdi,QWORD PTR [rbp-0x248]
  404f18:	call   404b40 <free_stack_base@@Base>
  404f1d:	lea    rax,[rip+0xe5cc]        # 4134f0 <__bss_start@@Base+0x388>
  404f24:	add    rax,0x18
  404f2a:	mov    rcx,QWORD PTR [rbp-0x238]
  404f31:	mov    QWORD PTR [rbp-0x8],rcx
  404f35:	mov    QWORD PTR [rbp-0x270],rax
  404f3c:	jmp    40704a <next@@Base+0x223a>
  404f41:	mov    rax,QWORD PTR [rbp-0x268]
  404f48:	mov    rcx,QWORD PTR [rax]
  404f4b:	add    rcx,0x1
  404f52:	mov    QWORD PTR [rax],rcx
  404f55:	mov    rdi,QWORD PTR [rbp-0x10]
  404f59:	call   404c30 <get_char@@Base>
  404f5e:	lea    rcx,[rip+0xe58b]        # 4134f0 <__bss_start@@Base+0x388>
  404f65:	add    rcx,0x20
  404f6c:	mov    BYTE PTR [rbp-0x229],al
  404f72:	mov    QWORD PTR [rbp-0x278],rcx
  404f79:	mov    rax,QWORD PTR [rbp-0x278]
  404f80:	lea    rcx,[rip+0xe569]        # 4134f0 <__bss_start@@Base+0x388>
  404f87:	mov    rdx,rcx
  404f8a:	add    rdx,0x28
  404f91:	add    rcx,0x30
  404f98:	mov    rsi,QWORD PTR [rax]
  404f9b:	add    rsi,0x1
  404fa2:	mov    QWORD PTR [rax],rsi
  404fa5:	movsx  edi,BYTE PTR [rbp-0x229]
  404fac:	cmp    edi,0x0
  404faf:	mov    QWORD PTR [rbp-0x280],rdx
  404fb6:	mov    QWORD PTR [rbp-0x288],rcx
  404fbd:	je     406ff7 <next@@Base+0x21e7>
  404fc3:	mov    rax,QWORD PTR [rbp-0x280]
  404fca:	mov    rcx,QWORD PTR [rax]
  404fcd:	inc    rcx
  404fd0:	mov    QWORD PTR [rax],rcx
  404fd3:	lea    rax,[rip+0xe57e]        # 413558 <__bss_start@@Base+0x3f0>
  404fda:	lea    rcx,[rip+0xe56f]        # 413550 <__bss_start@@Base+0x3e8>
  404fe1:	lea    rdx,[rip+0xe560]        # 413548 <__bss_start@@Base+0x3e0>
  404fe8:	lea    rsi,[rip+0xe551]        # 413540 <__bss_start@@Base+0x3d8>
  404fef:	lea    rdi,[rip+0xe542]        # 413538 <__bss_start@@Base+0x3d0>
  404ff6:	lea    r8,[rip+0xe533]        # 413530 <__bss_start@@Base+0x3c8>
  404ffd:	lea    r9,[rip+0xe524]        # 413528 <__bss_start@@Base+0x3c0>
  405004:	mov    r10,QWORD PTR [rbp-0x228]
  40500b:	mov    r11,r10
  40500e:	sub    r11,0x5
  405012:	mov    QWORD PTR [rbp-0x290],rax
  405019:	mov    QWORD PTR [rbp-0x298],rcx
  405020:	mov    QWORD PTR [rbp-0x2a0],rdx
  405027:	mov    QWORD PTR [rbp-0x2a8],rsi
  40502e:	mov    QWORD PTR [rbp-0x2b0],rdi
  405035:	mov    QWORD PTR [rbp-0x2b8],r8
  40503c:	mov    QWORD PTR [rbp-0x2c0],r10
  405043:	mov    QWORD PTR [rbp-0x2c8],r9
  40504a:	ja     406fc9 <next@@Base+0x21b9>
  405050:	lea    rax,[rip+0x9319]        # 40e370 <_IO_stdin_used@@Base+0x370>
  405057:	mov    rcx,QWORD PTR [rbp-0x2c0]
  40505e:	movsxd rdx,DWORD PTR [rax+rcx*4]
  405062:	add    rdx,rax
  405065:	mov    rax,QWORD PTR [rbp-0x2b8]
  40506c:	mov    rsi,QWORD PTR [rbp-0x2b0]
  405073:	mov    rdi,QWORD PTR [rbp-0x2a8]
  40507a:	mov    r8,QWORD PTR [rbp-0x2a0]
  405081:	mov    r9,QWORD PTR [rbp-0x298]
  405088:	mov    r10,QWORD PTR [rbp-0x290]
  40508f:	mov    QWORD PTR [rbp-0x2d0],rax
  405096:	mov    QWORD PTR [rbp-0x2d8],rsi
  40509d:	mov    QWORD PTR [rbp-0x2e0],rdi
  4050a4:	mov    QWORD PTR [rbp-0x2e8],r8
  4050ab:	mov    QWORD PTR [rbp-0x2f0],r9
  4050b2:	mov    QWORD PTR [rbp-0x2f8],r10
  4050b9:	jmp    rdx
  4050bb:	mov    rax,QWORD PTR [rbp-0x2d0]
  4050c2:	lea    rcx,[rip+0xe427]        # 4134f0 <__bss_start@@Base+0x388>
  4050c9:	mov    rdx,rcx
  4050cc:	add    rdx,0x70
  4050d3:	add    rcx,0x78
  4050da:	mov    rsi,QWORD PTR [rax]
  4050dd:	add    rsi,0x1
  4050e4:	mov    QWORD PTR [rax],rsi
  4050e7:	movsx  edi,BYTE PTR [rbp-0x229]
  4050ee:	cmp    edi,0x9
  4050f1:	mov    QWORD PTR [rbp-0x300],rcx
  4050f8:	mov    QWORD PTR [rbp-0x308],rdx
  4050ff:	je     405199 <next@@Base+0x389>
  405105:	mov    rax,QWORD PTR [rbp-0x300]
  40510c:	lea    rcx,[rip+0xe3dd]        # 4134f0 <__bss_start@@Base+0x388>
  405113:	mov    rdx,rcx
  405116:	add    rdx,0x80
  40511d:	add    rcx,0x88
  405124:	mov    rsi,QWORD PTR [rax]
  405127:	add    rsi,0x1
  40512e:	mov    QWORD PTR [rax],rsi
  405131:	movsx  edi,BYTE PTR [rbp-0x229]
  405138:	cmp    edi,0x20
  40513b:	mov    QWORD PTR [rbp-0x310],rcx
  405142:	mov    QWORD PTR [rbp-0x308],rdx
  405149:	je     405199 <next@@Base+0x389>
  40514f:	mov    rax,QWORD PTR [rbp-0x310]
  405156:	lea    rcx,[rip+0xe393]        # 4134f0 <__bss_start@@Base+0x388>
  40515d:	mov    rdx,rcx
  405160:	add    rdx,0x90
  405167:	add    rcx,0x98
  40516e:	mov    rsi,QWORD PTR [rax]
  405171:	add    rsi,0x1
  405178:	mov    QWORD PTR [rax],rsi
  40517b:	movsx  edi,BYTE PTR [rbp-0x229]
  405182:	cmp    edi,0xa
  405185:	mov    QWORD PTR [rbp-0x308],rdx
  40518c:	mov    QWORD PTR [rbp-0x318],rcx
  405193:	jne    4051d6 <next@@Base+0x3c6>
  405199:	mov    rax,QWORD PTR [rbp-0x308]
  4051a0:	mov    rcx,QWORD PTR [rax]
  4051a3:	add    rcx,0x1
  4051aa:	mov    QWORD PTR [rax],rcx
  4051ad:	mov    rdi,QWORD PTR [rbp-0x10]
  4051b1:	call   404c30 <get_char@@Base>
  4051b6:	lea    rcx,[rip+0xe333]        # 4134f0 <__bss_start@@Base+0x388>
  4051bd:	add    rcx,0xa0
  4051c4:	mov    BYTE PTR [rbp-0x229],al
  4051ca:	mov    QWORD PTR [rbp-0x320],rcx
  4051d1:	jmp    406403 <next@@Base+0x15f3>
  4051d6:	mov    rax,QWORD PTR [rbp-0x318]
  4051dd:	lea    rcx,[rip+0xe30c]        # 4134f0 <__bss_start@@Base+0x388>
  4051e4:	mov    rdx,rcx
  4051e7:	add    rdx,0xa8
  4051ee:	add    rcx,0xb0
  4051f5:	mov    rsi,QWORD PTR [rax]
  4051f8:	add    rsi,0x1
  4051ff:	mov    QWORD PTR [rax],rsi
  405202:	movsx  edi,BYTE PTR [rbp-0x229]
  405209:	cmp    edi,0x30
  40520c:	mov    QWORD PTR [rbp-0x328],rdx
  405213:	mov    QWORD PTR [rbp-0x330],rcx
  40521a:	jne    40527a <next@@Base+0x46a>
  405220:	mov    rax,QWORD PTR [rbp-0x328]
  405227:	mov    rcx,QWORD PTR [rax]
  40522a:	add    rcx,0x1
  405231:	mov    QWORD PTR [rax],rcx
  405234:	mov    edi,0x8
  405239:	call   4031b0 <malloc@plt>
  40523e:	xor    esi,esi
  405240:	mov    QWORD PTR [rbp-0x238],rax
  405247:	mov    rax,QWORD PTR [rbp-0x238]
  40524e:	mov    rdi,rax
  405251:	call   403cf0 <init_token_int_value@@Base>
  405256:	lea    rax,[rip+0xe293]        # 4134f0 <__bss_start@@Base+0x388>
  40525d:	add    rax,0xb8
  405263:	mov    rcx,QWORD PTR [rbp-0x238]
  40526a:	mov    QWORD PTR [rbp-0x8],rcx
  40526e:	mov    QWORD PTR [rbp-0x270],rax
  405275:	jmp    40704a <next@@Base+0x223a>
  40527a:	mov    rax,QWORD PTR [rbp-0x330]
  405281:	lea    rcx,[rip+0xe268]        # 4134f0 <__bss_start@@Base+0x388>
  405288:	mov    rdx,rcx
  40528b:	add    rdx,0xc0
  405292:	add    rcx,0xc8
  405299:	mov    rsi,QWORD PTR [rax]
  40529c:	add    rsi,0x1
  4052a3:	mov    QWORD PTR [rax],rsi
  4052a6:	movsx  edi,BYTE PTR [rbp-0x229]
  4052ad:	cmp    edi,0x31
  4052b0:	mov    QWORD PTR [rbp-0x338],rdx
  4052b7:	mov    QWORD PTR [rbp-0x340],rcx
  4052be:	jl     405377 <next@@Base+0x567>
  4052c4:	mov    rax,QWORD PTR [rbp-0x338]
  4052cb:	lea    rcx,[rip+0xe21e]        # 4134f0 <__bss_start@@Base+0x388>
  4052d2:	mov    rdx,rcx
  4052d5:	add    rdx,0xd0
  4052dc:	add    rcx,0xd8
  4052e3:	mov    rsi,QWORD PTR [rax]
  4052e6:	add    rsi,0x1
  4052ed:	mov    QWORD PTR [rax],rsi
  4052f0:	movsx  edi,BYTE PTR [rbp-0x229]
  4052f7:	cmp    edi,0x39
  4052fa:	mov    QWORD PTR [rbp-0x348],rdx
  405301:	mov    QWORD PTR [rbp-0x340],rcx
  405308:	jg     405377 <next@@Base+0x567>
  40530e:	mov    rax,QWORD PTR [rbp-0x348]
  405315:	mov    rcx,QWORD PTR [rax]
  405318:	add    rcx,0x1
  40531f:	mov    QWORD PTR [rax],rcx
  405322:	mov    dl,BYTE PTR [rbp-0x229]
  405328:	mov    esi,DWORD PTR [rbp-0x21c]
  40532e:	mov    edi,esi
  405330:	add    edi,0x1
  405333:	mov    DWORD PTR [rbp-0x21c],edi
  405339:	movsxd rax,esi
  40533c:	mov    BYTE PTR [rbp+rax*1-0x210],dl
  405343:	mov    rdi,QWORD PTR [rbp-0x10]
  405347:	call   404c30 <get_char@@Base>
  40534c:	lea    rcx,[rip+0xe19d]        # 4134f0 <__bss_start@@Base+0x388>
  405353:	add    rcx,0xe0
  40535a:	mov    BYTE PTR [rbp-0x229],al
  405360:	mov    QWORD PTR [rbp-0x228],0x1
  40536b:	mov    QWORD PTR [rbp-0x350],rcx
  405372:	jmp    4063b1 <next@@Base+0x15a1>
  405377:	mov    rax,QWORD PTR [rbp-0x340]
  40537e:	lea    rcx,[rip+0xe16b]        # 4134f0 <__bss_start@@Base+0x388>
  405385:	mov    rdx,rcx
  405388:	add    rdx,0xe8
  40538f:	add    rcx,0xf0
  405396:	mov    rsi,QWORD PTR [rax]
  405399:	add    rsi,0x1
  4053a0:	mov    QWORD PTR [rax],rsi
  4053a3:	movsx  edi,BYTE PTR [rbp-0x229]
  4053aa:	cmp    edi,0x28
  4053ad:	mov    QWORD PTR [rbp-0x358],rdx
  4053b4:	mov    QWORD PTR [rbp-0x360],rcx
  4053bb:	jne    405419 <next@@Base+0x609>
  4053c1:	mov    rax,QWORD PTR [rbp-0x358]
  4053c8:	mov    rcx,QWORD PTR [rax]
  4053cb:	add    rcx,0x1
  4053d2:	mov    QWORD PTR [rax],rcx
  4053d5:	mov    edi,0x4
  4053da:	call   4031b0 <malloc@plt>
  4053df:	mov    QWORD PTR [rbp-0x238],rax
  4053e6:	mov    rax,QWORD PTR [rbp-0x238]
  4053ed:	mov    rdi,rax
  4053f0:	call   403dc0 <init_token_opar@@Base>
  4053f5:	lea    rax,[rip+0xe0f4]        # 4134f0 <__bss_start@@Base+0x388>
  4053fc:	add    rax,0xf8
  405402:	mov    rcx,QWORD PTR [rbp-0x238]
  405409:	mov    QWORD PTR [rbp-0x8],rcx
  40540d:	mov    QWORD PTR [rbp-0x270],rax
  405414:	jmp    40704a <next@@Base+0x223a>
  405419:	mov    rax,QWORD PTR [rbp-0x360]
  405420:	lea    rcx,[rip+0xe0c9]        # 4134f0 <__bss_start@@Base+0x388>
  405427:	mov    rdx,rcx
  40542a:	add    rdx,0x100
  405431:	add    rcx,0x108
  405438:	mov    rsi,QWORD PTR [rax]
  40543b:	add    rsi,0x1
  405442:	mov    QWORD PTR [rax],rsi
  405445:	movsx  edi,BYTE PTR [rbp-0x229]
  40544c:	cmp    edi,0x29
  40544f:	mov    QWORD PTR [rbp-0x368],rdx
  405456:	mov    QWORD PTR [rbp-0x370],rcx
  40545d:	jne    4054bb <next@@Base+0x6ab>
  405463:	mov    rax,QWORD PTR [rbp-0x368]
  40546a:	mov    rcx,QWORD PTR [rax]
  40546d:	add    rcx,0x1
  405474:	mov    QWORD PTR [rax],rcx
  405477:	mov    edi,0x4
  40547c:	call   4031b0 <malloc@plt>
  405481:	mov    QWORD PTR [rbp-0x238],rax
  405488:	mov    rax,QWORD PTR [rbp-0x238]
  40548f:	mov    rdi,rax
  405492:	call   403e10 <init_token_cpar@@Base>
  405497:	lea    rax,[rip+0xe052]        # 4134f0 <__bss_start@@Base+0x388>
  40549e:	add    rax,0x110
  4054a4:	mov    rcx,QWORD PTR [rbp-0x238]
  4054ab:	mov    QWORD PTR [rbp-0x8],rcx
  4054af:	mov    QWORD PTR [rbp-0x270],rax
  4054b6:	jmp    40704a <next@@Base+0x223a>
  4054bb:	mov    rax,QWORD PTR [rbp-0x370]
  4054c2:	lea    rcx,[rip+0xe027]        # 4134f0 <__bss_start@@Base+0x388>
  4054c9:	mov    rdx,rcx
  4054cc:	add    rdx,0x118
  4054d3:	add    rcx,0x120
  4054da:	mov    rsi,QWORD PTR [rax]
  4054dd:	add    rsi,0x1
  4054e4:	mov    QWORD PTR [rax],rsi
  4054e7:	movsx  edi,BYTE PTR [rbp-0x229]
  4054ee:	cmp    edi,0x7b
  4054f1:	mov    QWORD PTR [rbp-0x378],rdx
  4054f8:	mov    QWORD PTR [rbp-0x380],rcx
  4054ff:	jne    40555d <next@@Base+0x74d>
  405505:	mov    rax,QWORD PTR [rbp-0x378]
  40550c:	mov    rcx,QWORD PTR [rax]
  40550f:	add    rcx,0x1
  405516:	mov    QWORD PTR [rax],rcx
  405519:	mov    edi,0x4
  40551e:	call   4031b0 <malloc@plt>
  405523:	mov    QWORD PTR [rbp-0x238],rax
  40552a:	mov    rax,QWORD PTR [rbp-0x238]
  405531:	mov    rdi,rax
  405534:	call   403e60 <init_token_obra@@Base>
  405539:	lea    rax,[rip+0xdfb0]        # 4134f0 <__bss_start@@Base+0x388>
  405540:	add    rax,0x128
  405546:	mov    rcx,QWORD PTR [rbp-0x238]
  40554d:	mov    QWORD PTR [rbp-0x8],rcx
  405551:	mov    QWORD PTR [rbp-0x270],rax
  405558:	jmp    40704a <next@@Base+0x223a>
  40555d:	mov    rax,QWORD PTR [rbp-0x380]
  405564:	lea    rcx,[rip+0xdf85]        # 4134f0 <__bss_start@@Base+0x388>
  40556b:	mov    rdx,rcx
  40556e:	add    rdx,0x130
  405575:	add    rcx,0x138
  40557c:	mov    rsi,QWORD PTR [rax]
  40557f:	add    rsi,0x1
  405586:	mov    QWORD PTR [rax],rsi
  405589:	movsx  edi,BYTE PTR [rbp-0x229]
  405590:	cmp    edi,0x7d
  405593:	mov    QWORD PTR [rbp-0x388],rdx
  40559a:	mov    QWORD PTR [rbp-0x390],rcx
  4055a1:	jne    4055ff <next@@Base+0x7ef>
  4055a7:	mov    rax,QWORD PTR [rbp-0x388]
  4055ae:	mov    rcx,QWORD PTR [rax]
  4055b1:	add    rcx,0x1
  4055b8:	mov    QWORD PTR [rax],rcx
  4055bb:	mov    edi,0x4
  4055c0:	call   4031b0 <malloc@plt>
  4055c5:	mov    QWORD PTR [rbp-0x238],rax
  4055cc:	mov    rax,QWORD PTR [rbp-0x238]
  4055d3:	mov    rdi,rax
  4055d6:	call   403eb0 <init_token_cbra@@Base>
  4055db:	lea    rax,[rip+0xdf0e]        # 4134f0 <__bss_start@@Base+0x388>
  4055e2:	add    rax,0x140
  4055e8:	mov    rcx,QWORD PTR [rbp-0x238]
  4055ef:	mov    QWORD PTR [rbp-0x8],rcx
  4055f3:	mov    QWORD PTR [rbp-0x270],rax
  4055fa:	jmp    40704a <next@@Base+0x223a>
  4055ff:	mov    rax,QWORD PTR [rbp-0x390]
  405606:	lea    rcx,[rip+0xdee3]        # 4134f0 <__bss_start@@Base+0x388>
  40560d:	mov    rdx,rcx
  405610:	add    rdx,0x148
  405617:	add    rcx,0x150
  40561e:	mov    rsi,QWORD PTR [rax]
  405621:	add    rsi,0x1
  405628:	mov    QWORD PTR [rax],rsi
  40562b:	movsx  edi,BYTE PTR [rbp-0x229]
  405632:	cmp    edi,0x3b
  405635:	mov    QWORD PTR [rbp-0x398],rdx
  40563c:	mov    QWORD PTR [rbp-0x3a0],rcx
  405643:	jne    4056a1 <next@@Base+0x891>
  405649:	mov    rax,QWORD PTR [rbp-0x398]
  405650:	mov    rcx,QWORD PTR [rax]
  405653:	add    rcx,0x1
  40565a:	mov    QWORD PTR [rax],rcx
  40565d:	mov    edi,0x4
  405662:	call   4031b0 <malloc@plt>
  405667:	mov    QWORD PTR [rbp-0x238],rax
  40566e:	mov    rax,QWORD PTR [rbp-0x238]
  405675:	mov    rdi,rax
  405678:	call   403f50 <init_token_semicolon@@Base>
  40567d:	lea    rax,[rip+0xde6c]        # 4134f0 <__bss_start@@Base+0x388>
  405684:	add    rax,0x158
  40568a:	mov    rcx,QWORD PTR [rbp-0x238]
  405691:	mov    QWORD PTR [rbp-0x8],rcx
  405695:	mov    QWORD PTR [rbp-0x270],rax
  40569c:	jmp    40704a <next@@Base+0x223a>
  4056a1:	mov    rax,QWORD PTR [rbp-0x3a0]
  4056a8:	lea    rcx,[rip+0xde41]        # 4134f0 <__bss_start@@Base+0x388>
  4056af:	mov    rdx,rcx
  4056b2:	add    rdx,0x160
  4056b9:	add    rcx,0x168
  4056c0:	mov    rsi,QWORD PTR [rax]
  4056c3:	add    rsi,0x1
  4056ca:	mov    QWORD PTR [rax],rsi
  4056cd:	movsx  edi,BYTE PTR [rbp-0x229]
  4056d4:	cmp    edi,0x65
  4056d7:	mov    QWORD PTR [rbp-0x3a8],rdx
  4056de:	mov    QWORD PTR [rbp-0x3b0],rcx
  4056e5:	jne    405754 <next@@Base+0x944>
  4056eb:	mov    rax,QWORD PTR [rbp-0x3a8]
  4056f2:	mov    rcx,QWORD PTR [rax]
  4056f5:	add    rcx,0x1
  4056fc:	mov    QWORD PTR [rax],rcx
  4056ff:	mov    dl,BYTE PTR [rbp-0x229]
  405705:	mov    esi,DWORD PTR [rbp-0x21c]
  40570b:	mov    edi,esi
  40570d:	add    edi,0x1
  405710:	mov    DWORD PTR [rbp-0x21c],edi
  405716:	movsxd rax,esi
  405719:	mov    BYTE PTR [rbp+rax*1-0x210],dl
  405720:	mov    rdi,QWORD PTR [rbp-0x10]
  405724:	call   404c30 <get_char@@Base>
  405729:	lea    rcx,[rip+0xddc0]        # 4134f0 <__bss_start@@Base+0x388>
  405730:	add    rcx,0x170
  405737:	mov    BYTE PTR [rbp-0x229],al
  40573d:	mov    QWORD PTR [rbp-0x228],0x5
  405748:	mov    QWORD PTR [rbp-0x3b8],rcx
  40574f:	jmp    4062bb <next@@Base+0x14ab>
  405754:	mov    rax,QWORD PTR [rbp-0x3b0]
  40575b:	lea    rcx,[rip+0xdd8e]        # 4134f0 <__bss_start@@Base+0x388>
  405762:	mov    rdx,rcx
  405765:	add    rdx,0x178
  40576c:	add    rcx,0x180
  405773:	mov    rsi,QWORD PTR [rax]
  405776:	add    rsi,0x1
  40577d:	mov    QWORD PTR [rax],rsi
  405780:	movsx  edi,BYTE PTR [rbp-0x229]
  405787:	cmp    edi,0x69
  40578a:	mov    QWORD PTR [rbp-0x3c0],rdx
  405791:	mov    QWORD PTR [rbp-0x3c8],rcx
  405798:	jne    405807 <next@@Base+0x9f7>
  40579e:	mov    rax,QWORD PTR [rbp-0x3c0]
  4057a5:	mov    rcx,QWORD PTR [rax]
  4057a8:	add    rcx,0x1
  4057af:	mov    QWORD PTR [rax],rcx
  4057b2:	mov    dl,BYTE PTR [rbp-0x229]
  4057b8:	mov    esi,DWORD PTR [rbp-0x21c]
  4057be:	mov    edi,esi
  4057c0:	add    edi,0x1
  4057c3:	mov    DWORD PTR [rbp-0x21c],edi
  4057c9:	movsxd rax,esi
  4057cc:	mov    BYTE PTR [rbp+rax*1-0x210],dl
  4057d3:	mov    rdi,QWORD PTR [rbp-0x10]
  4057d7:	call   404c30 <get_char@@Base>
  4057dc:	lea    rcx,[rip+0xdd0d]        # 4134f0 <__bss_start@@Base+0x388>
  4057e3:	add    rcx,0x188
  4057ea:	mov    BYTE PTR [rbp-0x229],al
  4057f0:	mov    QWORD PTR [rbp-0x228],0x2
  4057fb:	mov    QWORD PTR [rbp-0x3d0],rcx
  405802:	jmp    406292 <next@@Base+0x1482>
  405807:	mov    rax,QWORD PTR [rbp-0x3c8]
  40580e:	lea    rcx,[rip+0xdcdb]        # 4134f0 <__bss_start@@Base+0x388>
  405815:	mov    rdx,rcx
  405818:	add    rdx,0x190
  40581f:	add    rcx,0x198
  405826:	mov    rsi,QWORD PTR [rax]
  405829:	add    rsi,0x1
  405830:	mov    QWORD PTR [rax],rsi
  405833:	movsx  edi,BYTE PTR [rbp-0x229]
  40583a:	cmp    edi,0x6d
  40583d:	mov    QWORD PTR [rbp-0x3d8],rdx
  405844:	mov    QWORD PTR [rbp-0x3e0],rcx
  40584b:	jne    4058ba <next@@Base+0xaaa>
  405851:	mov    rax,QWORD PTR [rbp-0x3d8]
  405858:	mov    rcx,QWORD PTR [rax]
  40585b:	add    rcx,0x1
  405862:	mov    QWORD PTR [rax],rcx
  405865:	mov    dl,BYTE PTR [rbp-0x229]
  40586b:	mov    esi,DWORD PTR [rbp-0x21c]
  405871:	mov    edi,esi
  405873:	add    edi,0x1
  405876:	mov    DWORD PTR [rbp-0x21c],edi
  40587c:	movsxd rax,esi
  40587f:	mov    BYTE PTR [rbp+rax*1-0x210],dl
  405886:	mov    rdi,QWORD PTR [rbp-0x10]
  40588a:	call   404c30 <get_char@@Base>
  40588f:	lea    rcx,[rip+0xdc5a]        # 4134f0 <__bss_start@@Base+0x388>
  405896:	add    rcx,0x1a0
  40589d:	mov    BYTE PTR [rbp-0x229],al
  4058a3:	mov    QWORD PTR [rbp-0x228],0x3
  4058ae:	mov    QWORD PTR [rbp-0x3e8],rcx
  4058b5:	jmp    406269 <next@@Base+0x1459>
  4058ba:	mov    rax,QWORD PTR [rbp-0x3e0]
  4058c1:	lea    rcx,[rip+0xdc28]        # 4134f0 <__bss_start@@Base+0x388>
  4058c8:	mov    rdx,rcx
  4058cb:	add    rdx,0x1a8
  4058d2:	add    rcx,0x1b0
  4058d9:	mov    rsi,QWORD PTR [rax]
  4058dc:	add    rsi,0x1
  4058e3:	mov    QWORD PTR [rax],rsi
  4058e6:	movsx  edi,BYTE PTR [rbp-0x229]
  4058ed:	cmp    edi,0x72
  4058f0:	mov    QWORD PTR [rbp-0x3f0],rdx
  4058f7:	mov    QWORD PTR [rbp-0x3f8],rcx
  4058fe:	jne    40596d <next@@Base+0xb5d>
  405904:	mov    rax,QWORD PTR [rbp-0x3f0]
  40590b:	mov    rcx,QWORD PTR [rax]
  40590e:	add    rcx,0x1
  405915:	mov    QWORD PTR [rax],rcx
  405918:	mov    dl,BYTE PTR [rbp-0x229]
  40591e:	mov    esi,DWORD PTR [rbp-0x21c]
  405924:	mov    edi,esi
  405926:	add    edi,0x1
  405929:	mov    DWORD PTR [rbp-0x21c],edi
  40592f:	movsxd rax,esi
  405932:	mov    BYTE PTR [rbp+rax*1-0x210],dl
  405939:	mov    rdi,QWORD PTR [rbp-0x10]
  40593d:	call   404c30 <get_char@@Base>
  405942:	lea    rcx,[rip+0xdba7]        # 4134f0 <__bss_start@@Base+0x388>
  405949:	add    rcx,0x1b8
  405950:	mov    BYTE PTR [rbp-0x229],al
  405956:	mov    QWORD PTR [rbp-0x228],0x4
  405961:	mov    QWORD PTR [rbp-0x400],rcx
  405968:	jmp    406240 <next@@Base+0x1430>
  40596d:	mov    rax,QWORD PTR [rbp-0x3f8]
  405974:	lea    rcx,[rip+0xdb75]        # 4134f0 <__bss_start@@Base+0x388>
  40597b:	mov    rdx,rcx
  40597e:	add    rdx,0x1c0
  405985:	add    rcx,0x1c8
  40598c:	mov    rsi,QWORD PTR [rax]
  40598f:	add    rsi,0x1
  405996:	mov    QWORD PTR [rax],rsi
  405999:	movsx  edi,BYTE PTR [rbp-0x229]
  4059a0:	cmp    edi,0x21
  4059a3:	mov    QWORD PTR [rbp-0x408],rdx
  4059aa:	mov    QWORD PTR [rbp-0x410],rcx
  4059b1:	jne    405b56 <next@@Base+0xd46>
  4059b7:	mov    rax,QWORD PTR [rbp-0x408]
  4059be:	mov    rcx,QWORD PTR [rax]
  4059c1:	add    rcx,0x1
  4059c8:	mov    QWORD PTR [rax],rcx
  4059cb:	mov    dl,BYTE PTR [rbp-0x229]
  4059d1:	mov    esi,DWORD PTR [rbp-0x21c]
  4059d7:	mov    edi,esi
  4059d9:	add    edi,0x1
  4059dc:	mov    DWORD PTR [rbp-0x21c],edi
  4059e2:	movsxd rax,esi
  4059e5:	mov    BYTE PTR [rbp+rax*1-0x210],dl
  4059ec:	mov    rdi,QWORD PTR [rbp-0x10]
  4059f0:	call   404c30 <get_char@@Base>
  4059f5:	mov    BYTE PTR [rbp-0x229],al
  4059fb:	mov    edi,0x10
  405a00:	call   4031b0 <malloc@plt>
  405a05:	lea    rcx,[rip+0xdae4]        # 4134f0 <__bss_start@@Base+0x388>
  405a0c:	mov    rdi,rcx
  405a0f:	add    rdi,0x1d0
  405a16:	add    rcx,0x1d8
  405a1d:	mov    QWORD PTR [rbp-0x238],rax
  405a24:	movsx  esi,BYTE PTR [rbp-0x229]
  405a2b:	cmp    esi,0x3d
  405a2e:	mov    QWORD PTR [rbp-0x418],rdi
  405a35:	mov    QWORD PTR [rbp-0x420],rcx
  405a3c:	je     405aa4 <next@@Base+0xc94>
  405a42:	mov    rax,QWORD PTR [rbp-0x418]
  405a49:	mov    rcx,QWORD PTR [rax]
  405a4c:	add    rcx,0x1
  405a53:	mov    QWORD PTR [rax],rcx
  405a56:	mov    rdi,QWORD PTR [rbp-0x10]
  405a5a:	call   404db0 <push_back_one_char@@Base>
  405a5f:	mov    edi,0x2
  405a64:	call   4031b0 <malloc@plt>
  405a69:	lea    rcx,[rip+0xda80]        # 4134f0 <__bss_start@@Base+0x388>
  405a70:	add    rcx,0x1e0
  405a77:	mov    QWORD PTR [rbp-0x218],rax
  405a7e:	mov    dl,BYTE PTR [rbp-0x210]
  405a84:	mov    rax,QWORD PTR [rbp-0x218]
  405a8b:	mov    BYTE PTR [rax],dl
  405a8d:	mov    rax,QWORD PTR [rbp-0x218]
  405a94:	mov    BYTE PTR [rax+0x1],0x0
  405a98:	mov    QWORD PTR [rbp-0x428],rcx
  405a9f:	jmp    405b08 <next@@Base+0xcf8>
  405aa4:	mov    rax,QWORD PTR [rbp-0x420]
  405aab:	mov    rcx,QWORD PTR [rax]
  405aae:	add    rcx,0x1
  405ab5:	mov    QWORD PTR [rax],rcx
  405ab8:	mov    edi,0x3
  405abd:	call   4031b0 <malloc@plt>
  405ac2:	lea    rcx,[rip+0xda27]        # 4134f0 <__bss_start@@Base+0x388>
  405ac9:	add    rcx,0x1e8
  405ad0:	mov    QWORD PTR [rbp-0x218],rax
  405ad7:	mov    dl,BYTE PTR [rbp-0x210]
  405add:	mov    rax,QWORD PTR [rbp-0x218]
  405ae4:	mov    BYTE PTR [rax],dl
  405ae6:	mov    dl,BYTE PTR [rbp-0x229]
  405aec:	mov    rax,QWORD PTR [rbp-0x218]
  405af3:	mov    BYTE PTR [rax+0x1],dl
  405af6:	mov    rax,QWORD PTR [rbp-0x218]
  405afd:	mov    BYTE PTR [rax+0x2],0x0
  405b01:	mov    QWORD PTR [rbp-0x428],rcx
  405b08:	mov    rax,QWORD PTR [rbp-0x428]
  405b0f:	mov    rcx,QWORD PTR [rax]
  405b12:	add    rcx,0x1
  405b19:	mov    QWORD PTR [rax],rcx
  405b1c:	mov    rax,QWORD PTR [rbp-0x238]
  405b23:	mov    rsi,QWORD PTR [rbp-0x218]
  405b2a:	mov    rdi,rax
  405b2d:	call   404090 <init_token_boolean_op@@Base>
  405b32:	lea    rax,[rip+0xd9b7]        # 4134f0 <__bss_start@@Base+0x388>
  405b39:	add    rax,0x1f0
  405b3f:	mov    rcx,QWORD PTR [rbp-0x238]
  405b46:	mov    QWORD PTR [rbp-0x8],rcx
  405b4a:	mov    QWORD PTR [rbp-0x270],rax
  405b51:	jmp    40704a <next@@Base+0x223a>
  405b56:	mov    rax,QWORD PTR [rbp-0x410]
  405b5d:	lea    rcx,[rip+0xd98c]        # 4134f0 <__bss_start@@Base+0x388>
  405b64:	mov    rdx,rcx
  405b67:	add    rdx,0x1f8
  405b6e:	add    rcx,0x200
  405b75:	mov    rsi,QWORD PTR [rax]
  405b78:	add    rsi,0x1
  405b7f:	mov    QWORD PTR [rax],rsi
  405b82:	movsx  edi,BYTE PTR [rbp-0x229]
  405b89:	cmp    edi,0x3c
  405b8c:	mov    QWORD PTR [rbp-0x430],rcx
  405b93:	mov    QWORD PTR [rbp-0x438],rdx
  405b9a:	je     405bea <next@@Base+0xdda>
  405ba0:	mov    rax,QWORD PTR [rbp-0x430]
  405ba7:	lea    rcx,[rip+0xd942]        # 4134f0 <__bss_start@@Base+0x388>
  405bae:	mov    rdx,rcx
  405bb1:	add    rdx,0x208
  405bb8:	add    rcx,0x210
  405bbf:	mov    rsi,QWORD PTR [rax]
  405bc2:	add    rsi,0x1
  405bc9:	mov    QWORD PTR [rax],rsi
  405bcc:	movsx  edi,BYTE PTR [rbp-0x229]
  405bd3:	cmp    edi,0x3e
  405bd6:	mov    QWORD PTR [rbp-0x438],rdx
  405bdd:	mov    QWORD PTR [rbp-0x440],rcx
  405be4:	jne    405d89 <next@@Base+0xf79>
  405bea:	mov    rax,QWORD PTR [rbp-0x438]
  405bf1:	mov    rcx,QWORD PTR [rax]
  405bf4:	add    rcx,0x1
  405bfb:	mov    QWORD PTR [rax],rcx
  405bfe:	mov    dl,BYTE PTR [rbp-0x229]
  405c04:	mov    esi,DWORD PTR [rbp-0x21c]
  405c0a:	mov    edi,esi
  405c0c:	add    edi,0x1
  405c0f:	mov    DWORD PTR [rbp-0x21c],edi
  405c15:	movsxd rax,esi
  405c18:	mov    BYTE PTR [rbp+rax*1-0x210],dl
  405c1f:	mov    rdi,QWORD PTR [rbp-0x10]
  405c23:	call   404c30 <get_char@@Base>
  405c28:	mov    BYTE PTR [rbp-0x229],al
  405c2e:	mov    edi,0x10
  405c33:	call   4031b0 <malloc@plt>
  405c38:	lea    rcx,[rip+0xd8b1]        # 4134f0 <__bss_start@@Base+0x388>
  405c3f:	mov    rdi,rcx
  405c42:	add    rdi,0x218
  405c49:	add    rcx,0x220
  405c50:	mov    QWORD PTR [rbp-0x238],rax
  405c57:	movsx  esi,BYTE PTR [rbp-0x229]
  405c5e:	cmp    esi,0x3d
  405c61:	mov    QWORD PTR [rbp-0x448],rdi
  405c68:	mov    QWORD PTR [rbp-0x450],rcx
  405c6f:	je     405cd7 <next@@Base+0xec7>
  405c75:	mov    rax,QWORD PTR [rbp-0x448]
  405c7c:	mov    rcx,QWORD PTR [rax]
  405c7f:	add    rcx,0x1
  405c86:	mov    QWORD PTR [rax],rcx
  405c89:	mov    rdi,QWORD PTR [rbp-0x10]
  405c8d:	call   404db0 <push_back_one_char@@Base>
  405c92:	mov    edi,0x2
  405c97:	call   4031b0 <malloc@plt>
  405c9c:	lea    rcx,[rip+0xd84d]        # 4134f0 <__bss_start@@Base+0x388>
  405ca3:	add    rcx,0x228
  405caa:	mov    QWORD PTR [rbp-0x218],rax
  405cb1:	mov    dl,BYTE PTR [rbp-0x210]
  405cb7:	mov    rax,QWORD PTR [rbp-0x218]
  405cbe:	mov    BYTE PTR [rax],dl
  405cc0:	mov    rax,QWORD PTR [rbp-0x218]
  405cc7:	mov    BYTE PTR [rax+0x1],0x0
  405ccb:	mov    QWORD PTR [rbp-0x458],rcx
  405cd2:	jmp    405d3b <next@@Base+0xf2b>
  405cd7:	mov    rax,QWORD PTR [rbp-0x450]
  405cde:	mov    rcx,QWORD PTR [rax]
  405ce1:	add    rcx,0x1
  405ce8:	mov    QWORD PTR [rax],rcx
  405ceb:	mov    edi,0x3
  405cf0:	call   4031b0 <malloc@plt>
  405cf5:	lea    rcx,[rip+0xd7f4]        # 4134f0 <__bss_start@@Base+0x388>
  405cfc:	add    rcx,0x230
  405d03:	mov    QWORD PTR [rbp-0x218],rax
  405d0a:	mov    dl,BYTE PTR [rbp-0x210]
  405d10:	mov    rax,QWORD PTR [rbp-0x218]
  405d17:	mov    BYTE PTR [rax],dl
  405d19:	mov    dl,BYTE PTR [rbp-0x229]
  405d1f:	mov    rax,QWORD PTR [rbp-0x218]
  405d26:	mov    BYTE PTR [rax+0x1],dl
  405d29:	mov    rax,QWORD PTR [rbp-0x218]
  405d30:	mov    BYTE PTR [rax+0x2],0x0
  405d34:	mov    QWORD PTR [rbp-0x458],rcx
  405d3b:	mov    rax,QWORD PTR [rbp-0x458]
  405d42:	mov    rcx,QWORD PTR [rax]
  405d45:	add    rcx,0x1
  405d4c:	mov    QWORD PTR [rax],rcx
  405d4f:	mov    rax,QWORD PTR [rbp-0x238]
  405d56:	mov    rsi,QWORD PTR [rbp-0x218]
  405d5d:	mov    rdi,rax
  405d60:	call   404090 <init_token_boolean_op@@Base>
  405d65:	lea    rax,[rip+0xd784]        # 4134f0 <__bss_start@@Base+0x388>
  405d6c:	add    rax,0x238
  405d72:	mov    rcx,QWORD PTR [rbp-0x238]
  405d79:	mov    QWORD PTR [rbp-0x8],rcx
  405d7d:	mov    QWORD PTR [rbp-0x270],rax
  405d84:	jmp    40704a <next@@Base+0x223a>
  405d89:	mov    rax,QWORD PTR [rbp-0x440]
  405d90:	lea    rcx,[rip+0xd759]        # 4134f0 <__bss_start@@Base+0x388>
  405d97:	mov    rdx,rcx
  405d9a:	add    rdx,0x240
  405da1:	add    rcx,0x248
  405da8:	mov    rsi,QWORD PTR [rax]
  405dab:	add    rsi,0x1
  405db2:	mov    QWORD PTR [rax],rsi
  405db5:	movsx  edi,BYTE PTR [rbp-0x229]
  405dbc:	cmp    edi,0x3d
  405dbf:	mov    QWORD PTR [rbp-0x460],rdx
  405dc6:	mov    QWORD PTR [rbp-0x468],rcx
  405dcd:	jne    405f05 <next@@Base+0x10f5>
  405dd3:	mov    rax,QWORD PTR [rbp-0x460]
  405dda:	mov    rcx,QWORD PTR [rax]
  405ddd:	add    rcx,0x1
  405de4:	mov    QWORD PTR [rax],rcx
  405de7:	mov    dl,BYTE PTR [rbp-0x229]
  405ded:	mov    esi,DWORD PTR [rbp-0x21c]
  405df3:	mov    edi,esi
  405df5:	add    edi,0x1
  405df8:	mov    DWORD PTR [rbp-0x21c],edi
  405dfe:	movsxd rax,esi
  405e01:	mov    BYTE PTR [rbp+rax*1-0x210],dl
  405e08:	mov    rdi,QWORD PTR [rbp-0x10]
  405e0c:	call   404c30 <get_char@@Base>
  405e11:	mov    BYTE PTR [rbp-0x229],al
  405e17:	mov    edi,0x10
  405e1c:	call   4031b0 <malloc@plt>
  405e21:	lea    rcx,[rip+0xd6c8]        # 4134f0 <__bss_start@@Base+0x388>
  405e28:	mov    rdi,rcx
  405e2b:	add    rdi,0x250
  405e32:	add    rcx,0x258
  405e39:	mov    QWORD PTR [rbp-0x238],rax
  405e40:	movsx  esi,BYTE PTR [rbp-0x229]
  405e47:	cmp    esi,0x3d
  405e4a:	mov    QWORD PTR [rbp-0x470],rdi
  405e51:	mov    QWORD PTR [rbp-0x478],rcx
  405e58:	je     405e7c <next@@Base+0x106c>
  405e5e:	mov    rax,QWORD PTR [rbp-0x470]
  405e65:	mov    rcx,QWORD PTR [rax]
  405e68:	add    rcx,0x1
  405e6f:	mov    QWORD PTR [rax],rcx
  405e72:	mov    edi,0x1
  405e77:	call   403260 <exit@plt>
  405e7c:	mov    rax,QWORD PTR [rbp-0x478]
  405e83:	mov    rcx,QWORD PTR [rax]
  405e86:	add    rcx,0x1
  405e8d:	mov    QWORD PTR [rax],rcx
  405e90:	mov    edi,0x3
  405e95:	call   4031b0 <malloc@plt>
  405e9a:	mov    QWORD PTR [rbp-0x218],rax
  405ea1:	mov    dl,BYTE PTR [rbp-0x210]
  405ea7:	mov    rax,QWORD PTR [rbp-0x218]
  405eae:	mov    BYTE PTR [rax],dl
  405eb0:	mov    dl,BYTE PTR [rbp-0x229]
  405eb6:	mov    rax,QWORD PTR [rbp-0x218]
  405ebd:	mov    BYTE PTR [rax+0x1],dl
  405ec0:	mov    rax,QWORD PTR [rbp-0x218]
  405ec7:	mov    BYTE PTR [rax+0x2],0x0
  405ecb:	mov    rax,QWORD PTR [rbp-0x238]
  405ed2:	mov    rsi,QWORD PTR [rbp-0x218]
  405ed9:	mov    rdi,rax
  405edc:	call   404090 <init_token_boolean_op@@Base>
  405ee1:	lea    rax,[rip+0xd608]        # 4134f0 <__bss_start@@Base+0x388>
  405ee8:	add    rax,0x260
  405eee:	mov    rcx,QWORD PTR [rbp-0x238]
  405ef5:	mov    QWORD PTR [rbp-0x8],rcx
  405ef9:	mov    QWORD PTR [rbp-0x270],rax
  405f00:	jmp    40704a <next@@Base+0x223a>
  405f05:	mov    rax,QWORD PTR [rbp-0x468]
  405f0c:	lea    rcx,[rip+0xd5dd]        # 4134f0 <__bss_start@@Base+0x388>
  405f13:	mov    rdx,rcx
  405f16:	add    rdx,0x268
  405f1d:	add    rcx,0x270
  405f24:	mov    rsi,QWORD PTR [rax]
  405f27:	add    rsi,0x1
  405f2e:	mov    QWORD PTR [rax],rsi
  405f31:	movsx  edi,BYTE PTR [rbp-0x229]
  405f38:	cmp    edi,0x7c
  405f3b:	mov    QWORD PTR [rbp-0x480],rdx
  405f42:	mov    QWORD PTR [rbp-0x488],rcx
  405f49:	jne    406081 <next@@Base+0x1271>
  405f4f:	mov    rax,QWORD PTR [rbp-0x480]
  405f56:	mov    rcx,QWORD PTR [rax]
  405f59:	add    rcx,0x1
  405f60:	mov    QWORD PTR [rax],rcx
  405f63:	mov    dl,BYTE PTR [rbp-0x229]
  405f69:	mov    esi,DWORD PTR [rbp-0x21c]
  405f6f:	mov    edi,esi
  405f71:	add    edi,0x1
  405f74:	mov    DWORD PTR [rbp-0x21c],edi
  405f7a:	movsxd rax,esi
  405f7d:	mov    BYTE PTR [rbp+rax*1-0x210],dl
  405f84:	mov    rdi,QWORD PTR [rbp-0x10]
  405f88:	call   404c30 <get_char@@Base>
  405f8d:	mov    BYTE PTR [rbp-0x229],al
  405f93:	mov    edi,0x10
  405f98:	call   4031b0 <malloc@plt>
  405f9d:	lea    rcx,[rip+0xd54c]        # 4134f0 <__bss_start@@Base+0x388>
  405fa4:	mov    rdi,rcx
  405fa7:	add    rdi,0x278
  405fae:	add    rcx,0x280
  405fb5:	mov    QWORD PTR [rbp-0x238],rax
  405fbc:	movsx  esi,BYTE PTR [rbp-0x229]
  405fc3:	cmp    esi,0x7c
  405fc6:	mov    QWORD PTR [rbp-0x490],rdi
  405fcd:	mov    QWORD PTR [rbp-0x498],rcx
  405fd4:	je     405ff8 <next@@Base+0x11e8>
  405fda:	mov    rax,QWORD PTR [rbp-0x490]
  405fe1:	mov    rcx,QWORD PTR [rax]
  405fe4:	add    rcx,0x1
  405feb:	mov    QWORD PTR [rax],rcx
  405fee:	mov    edi,0x1
  405ff3:	call   403260 <exit@plt>
  405ff8:	mov    rax,QWORD PTR [rbp-0x498]
  405fff:	mov    rcx,QWORD PTR [rax]
  406002:	add    rcx,0x1
  406009:	mov    QWORD PTR [rax],rcx
  40600c:	mov    edi,0x3
  406011:	call   4031b0 <malloc@plt>
  406016:	mov    QWORD PTR [rbp-0x218],rax
  40601d:	mov    dl,BYTE PTR [rbp-0x210]
  406023:	mov    rax,QWORD PTR [rbp-0x218]
  40602a:	mov    BYTE PTR [rax],dl
  40602c:	mov    dl,BYTE PTR [rbp-0x229]
  406032:	mov    rax,QWORD PTR [rbp-0x218]
  406039:	mov    BYTE PTR [rax+0x1],dl
  40603c:	mov    rax,QWORD PTR [rbp-0x218]
  406043:	mov    BYTE PTR [rax+0x2],0x0
  406047:	mov    rax,QWORD PTR [rbp-0x238]
  40604e:	mov    rsi,QWORD PTR [rbp-0x218]
  406055:	mov    rdi,rax
  406058:	call   404090 <init_token_boolean_op@@Base>
  40605d:	lea    rax,[rip+0xd48c]        # 4134f0 <__bss_start@@Base+0x388>
  406064:	add    rax,0x288
  40606a:	mov    rcx,QWORD PTR [rbp-0x238]
  406071:	mov    QWORD PTR [rbp-0x8],rcx
  406075:	mov    QWORD PTR [rbp-0x270],rax
  40607c:	jmp    40704a <next@@Base+0x223a>
  406081:	mov    rax,QWORD PTR [rbp-0x488]
  406088:	lea    rcx,[rip+0xd461]        # 4134f0 <__bss_start@@Base+0x388>
  40608f:	mov    rdx,rcx
  406092:	add    rdx,0x290
  406099:	add    rcx,0x298
  4060a0:	mov    rsi,QWORD PTR [rax]
  4060a3:	add    rsi,0x1
  4060aa:	mov    QWORD PTR [rax],rsi
  4060ad:	movsx  edi,BYTE PTR [rbp-0x229]
  4060b4:	cmp    edi,0x26
  4060b7:	mov    QWORD PTR [rbp-0x4a0],rdx
  4060be:	mov    QWORD PTR [rbp-0x4a8],rcx
  4060c5:	jne    4061fd <next@@Base+0x13ed>
  4060cb:	mov    rax,QWORD PTR [rbp-0x4a0]
  4060d2:	mov    rcx,QWORD PTR [rax]
  4060d5:	add    rcx,0x1
  4060dc:	mov    QWORD PTR [rax],rcx
  4060df:	mov    dl,BYTE PTR [rbp-0x229]
  4060e5:	mov    esi,DWORD PTR [rbp-0x21c]
  4060eb:	mov    edi,esi
  4060ed:	add    edi,0x1
  4060f0:	mov    DWORD PTR [rbp-0x21c],edi
  4060f6:	movsxd rax,esi
  4060f9:	mov    BYTE PTR [rbp+rax*1-0x210],dl
  406100:	mov    rdi,QWORD PTR [rbp-0x10]
  406104:	call   404c30 <get_char@@Base>
  406109:	mov    BYTE PTR [rbp-0x229],al
  40610f:	mov    edi,0x10
  406114:	call   4031b0 <malloc@plt>
  406119:	lea    rcx,[rip+0xd3d0]        # 4134f0 <__bss_start@@Base+0x388>
  406120:	mov    rdi,rcx
  406123:	add    rdi,0x2a0
  40612a:	add    rcx,0x2a8
  406131:	mov    QWORD PTR [rbp-0x238],rax
  406138:	movsx  esi,BYTE PTR [rbp-0x229]
  40613f:	cmp    esi,0x26
  406142:	mov    QWORD PTR [rbp-0x4b0],rdi
  406149:	mov    QWORD PTR [rbp-0x4b8],rcx
  406150:	je     406174 <next@@Base+0x1364>
  406156:	mov    rax,QWORD PTR [rbp-0x4b0]
  40615d:	mov    rcx,QWORD PTR [rax]
  406160:	add    rcx,0x1
  406167:	mov    QWORD PTR [rax],rcx
  40616a:	mov    edi,0x1
  40616f:	call   403260 <exit@plt>
  406174:	mov    rax,QWORD PTR [rbp-0x4b8]
  40617b:	mov    rcx,QWORD PTR [rax]
  40617e:	add    rcx,0x1
  406185:	mov    QWORD PTR [rax],rcx
  406188:	mov    edi,0x3
  40618d:	call   4031b0 <malloc@plt>
  406192:	mov    QWORD PTR [rbp-0x218],rax
  406199:	mov    dl,BYTE PTR [rbp-0x210]
  40619f:	mov    rax,QWORD PTR [rbp-0x218]
  4061a6:	mov    BYTE PTR [rax],dl
  4061a8:	mov    dl,BYTE PTR [rbp-0x229]
  4061ae:	mov    rax,QWORD PTR [rbp-0x218]
  4061b5:	mov    BYTE PTR [rax+0x1],dl
  4061b8:	mov    rax,QWORD PTR [rbp-0x218]
  4061bf:	mov    BYTE PTR [rax+0x2],0x0
  4061c3:	mov    rax,QWORD PTR [rbp-0x238]
  4061ca:	mov    rsi,QWORD PTR [rbp-0x218]
  4061d1:	mov    rdi,rax
  4061d4:	call   404090 <init_token_boolean_op@@Base>
  4061d9:	lea    rax,[rip+0xd310]        # 4134f0 <__bss_start@@Base+0x388>
  4061e0:	add    rax,0x2b0
  4061e6:	mov    rcx,QWORD PTR [rbp-0x238]
  4061ed:	mov    QWORD PTR [rbp-0x8],rcx
  4061f1:	mov    QWORD PTR [rbp-0x270],rax
  4061f8:	jmp    40704a <next@@Base+0x223a>
  4061fd:	mov    rax,QWORD PTR [rbp-0x4a8]
  406204:	mov    rcx,QWORD PTR [rip+0xcde5]        # 412ff0 <stderr@GLIBC_2.2.5>
  40620b:	mov    rdx,QWORD PTR [rax]
  40620e:	add    rdx,0x1
  406215:	mov    QWORD PTR [rax],rdx
  406218:	mov    rdi,QWORD PTR [rcx]
  40621b:	movsx  edx,BYTE PTR [rbp-0x229]
  406222:	lea    rsi,[rip+0x8180]        # 40e3a9 <_IO_stdin_used@@Base+0x3a9>
  406229:	mov    al,0x0
  40622b:	call   403150 <fprintf@plt>
  406230:	mov    edi,0x1
  406235:	mov    DWORD PTR [rbp-0x4bc],eax
  40623b:	call   403260 <exit@plt>
  406240:	mov    rax,QWORD PTR [rbp-0x400]
  406247:	lea    rcx,[rip+0xd2a2]        # 4134f0 <__bss_start@@Base+0x388>
  40624e:	add    rcx,0x2b8
  406255:	mov    rdx,QWORD PTR [rax]
  406258:	add    rdx,0x1
  40625f:	mov    QWORD PTR [rax],rdx
  406262:	mov    QWORD PTR [rbp-0x3e8],rcx
  406269:	mov    rax,QWORD PTR [rbp-0x3e8]
  406270:	lea    rcx,[rip+0xd279]        # 4134f0 <__bss_start@@Base+0x388>
  406277:	add    rcx,0x2c0
  40627e:	mov    rdx,QWORD PTR [rax]
  406281:	add    rdx,0x1
  406288:	mov    QWORD PTR [rax],rdx
  40628b:	mov    QWORD PTR [rbp-0x3d0],rcx
  406292:	mov    rax,QWORD PTR [rbp-0x3d0]
  406299:	lea    rcx,[rip+0xd250]        # 4134f0 <__bss_start@@Base+0x388>
  4062a0:	add    rcx,0x2c8
  4062a7:	mov    rdx,QWORD PTR [rax]
  4062aa:	add    rdx,0x1
  4062b1:	mov    QWORD PTR [rax],rdx
  4062b4:	mov    QWORD PTR [rbp-0x3b8],rcx
  4062bb:	mov    rax,QWORD PTR [rbp-0x3b8]
  4062c2:	lea    rcx,[rip+0xd227]        # 4134f0 <__bss_start@@Base+0x388>
  4062c9:	add    rcx,0x2d0
  4062d0:	mov    rdx,QWORD PTR [rax]
  4062d3:	add    rdx,0x1
  4062da:	mov    QWORD PTR [rax],rdx
  4062dd:	mov    QWORD PTR [rbp-0x4c8],rcx
  4062e4:	mov    rax,QWORD PTR [rbp-0x4c8]
  4062eb:	lea    rcx,[rip+0xd1fe]        # 4134f0 <__bss_start@@Base+0x388>
  4062f2:	add    rcx,0x2d8
  4062f9:	mov    rdx,QWORD PTR [rax]
  4062fc:	add    rdx,0x1
  406303:	mov    QWORD PTR [rax],rdx
  406306:	mov    QWORD PTR [rbp-0x4d0],rcx
  40630d:	mov    rax,QWORD PTR [rbp-0x4d0]
  406314:	lea    rcx,[rip+0xd1d5]        # 4134f0 <__bss_start@@Base+0x388>
  40631b:	add    rcx,0x2e0
  406322:	mov    rdx,QWORD PTR [rax]
  406325:	add    rdx,0x1
  40632c:	mov    QWORD PTR [rax],rdx
  40632f:	mov    QWORD PTR [rbp-0x4d8],rcx
  406336:	mov    rax,QWORD PTR [rbp-0x4d8]
  40633d:	lea    rcx,[rip+0xd1ac]        # 4134f0 <__bss_start@@Base+0x388>
  406344:	add    rcx,0x2e8
  40634b:	mov    rdx,QWORD PTR [rax]
  40634e:	add    rdx,0x1
  406355:	mov    QWORD PTR [rax],rdx
  406358:	mov    QWORD PTR [rbp-0x4e0],rcx
  40635f:	mov    rax,QWORD PTR [rbp-0x4e0]
  406366:	lea    rcx,[rip+0xd183]        # 4134f0 <__bss_start@@Base+0x388>
  40636d:	add    rcx,0x2f0
  406374:	mov    rdx,QWORD PTR [rax]
  406377:	add    rdx,0x1
  40637e:	mov    QWORD PTR [rax],rdx
  406381:	mov    QWORD PTR [rbp-0x4e8],rcx
  406388:	mov    rax,QWORD PTR [rbp-0x4e8]
  40638f:	lea    rcx,[rip+0xd15a]        # 4134f0 <__bss_start@@Base+0x388>
  406396:	add    rcx,0x2f8
  40639d:	mov    rdx,QWORD PTR [rax]
  4063a0:	add    rdx,0x1
  4063a7:	mov    QWORD PTR [rax],rdx
  4063aa:	mov    QWORD PTR [rbp-0x350],rcx
  4063b1:	mov    rax,QWORD PTR [rbp-0x350]
  4063b8:	lea    rcx,[rip+0xd131]        # 4134f0 <__bss_start@@Base+0x388>
  4063bf:	add    rcx,0x300
  4063c6:	mov    rdx,QWORD PTR [rax]
  4063c9:	add    rdx,0x1
  4063d0:	mov    QWORD PTR [rax],rdx
  4063d3:	mov    QWORD PTR [rbp-0x4f0],rcx
  4063da:	mov    rax,QWORD PTR [rbp-0x4f0]
  4063e1:	lea    rcx,[rip+0xd108]        # 4134f0 <__bss_start@@Base+0x388>
  4063e8:	add    rcx,0x308
  4063ef:	mov    rdx,QWORD PTR [rax]
  4063f2:	add    rdx,0x1
  4063f9:	mov    QWORD PTR [rax],rdx
  4063fc:	mov    QWORD PTR [rbp-0x320],rcx
  406403:	mov    rax,QWORD PTR [rbp-0x320]
  40640a:	lea    rcx,[rip+0xd0df]        # 4134f0 <__bss_start@@Base+0x388>
  406411:	add    rcx,0x310
  406418:	mov    rdx,QWORD PTR [rax]
  40641b:	add    rdx,0x1
  406422:	mov    QWORD PTR [rax],rdx
  406425:	mov    QWORD PTR [rbp-0x2c8],rcx
  40642c:	jmp    406fc9 <next@@Base+0x21b9>
  406431:	mov    rax,QWORD PTR [rbp-0x2d8]
  406438:	lea    rcx,[rip+0xd0b1]        # 4134f0 <__bss_start@@Base+0x388>
  40643f:	add    rcx,0x318
  406446:	mov    rdx,QWORD PTR [rax]
  406449:	add    rdx,0x1
  406450:	mov    QWORD PTR [rax],rdx
  406453:	mov    QWORD PTR [rbp-0x4f8],rcx
  40645a:	mov    rax,QWORD PTR [rbp-0x4f8]
  406461:	lea    rcx,[rip+0xd088]        # 4134f0 <__bss_start@@Base+0x388>
  406468:	mov    rdx,rcx
  40646b:	add    rdx,0x320
  406472:	add    rcx,0x328
  406479:	xor    esi,esi
  40647b:	mov    rdi,QWORD PTR [rax]
  40647e:	add    rdi,0x1
  406485:	mov    QWORD PTR [rax],rdi
  406488:	movsx  r8d,BYTE PTR [rbp-0x229]
  406490:	cmp    r8d,0x30
  406494:	mov    QWORD PTR [rbp-0x500],rdx
  40649b:	mov    QWORD PTR [rbp-0x508],rcx
  4064a2:	mov    BYTE PTR [rbp-0x509],sil
  4064a9:	jl     4064ed <next@@Base+0x16dd>
  4064af:	mov    rax,QWORD PTR [rbp-0x500]
  4064b6:	lea    rcx,[rip+0xd033]        # 4134f0 <__bss_start@@Base+0x388>
  4064bd:	add    rcx,0x330
  4064c4:	mov    rdx,QWORD PTR [rax]
  4064c7:	add    rdx,0x1
  4064ce:	mov    QWORD PTR [rax],rdx
  4064d1:	movsx  esi,BYTE PTR [rbp-0x229]
  4064d8:	cmp    esi,0x39
  4064db:	setle  dil
  4064df:	mov    QWORD PTR [rbp-0x508],rcx
  4064e6:	mov    BYTE PTR [rbp-0x509],dil
  4064ed:	mov    al,BYTE PTR [rbp-0x509]
  4064f3:	mov    rcx,QWORD PTR [rbp-0x508]
  4064fa:	lea    rdx,[rip+0xcfef]        # 4134f0 <__bss_start@@Base+0x388>
  406501:	mov    rsi,rdx
  406504:	add    rsi,0x338
  40650b:	add    rdx,0x340
  406512:	mov    rdi,QWORD PTR [rcx]
  406515:	add    rdi,0x1
  40651c:	mov    QWORD PTR [rcx],rdi
  40651f:	test   al,0x1
  406521:	mov    QWORD PTR [rbp-0x518],rsi
  406528:	mov    QWORD PTR [rbp-0x520],rdx
  40652f:	jne    40653a <next@@Base+0x172a>
  406535:	jmp    406598 <next@@Base+0x1788>
  40653a:	mov    rax,QWORD PTR [rbp-0x518]
  406541:	mov    rcx,QWORD PTR [rax]
  406544:	add    rcx,0x1
  40654b:	mov    QWORD PTR [rax],rcx
  40654e:	mov    dl,BYTE PTR [rbp-0x229]
  406554:	mov    esi,DWORD PTR [rbp-0x21c]
  40655a:	mov    edi,esi
  40655c:	add    edi,0x1
  40655f:	mov    DWORD PTR [rbp-0x21c],edi
  406565:	movsxd rax,esi
  406568:	mov    BYTE PTR [rbp+rax*1-0x210],dl
  40656f:	mov    rdi,QWORD PTR [rbp-0x10]
  406573:	call   404c30 <get_char@@Base>
  406578:	lea    rcx,[rip+0xcf71]        # 4134f0 <__bss_start@@Base+0x388>
  40657f:	add    rcx,0x348
  406586:	mov    BYTE PTR [rbp-0x229],al
  40658c:	mov    QWORD PTR [rbp-0x4f8],rcx
  406593:	jmp    40645a <next@@Base+0x164a>
  406598:	mov    rax,QWORD PTR [rbp-0x520]
  40659f:	mov    rcx,QWORD PTR [rax]
  4065a2:	add    rcx,0x1
  4065a9:	mov    QWORD PTR [rax],rcx
  4065ac:	mov    rdi,QWORD PTR [rbp-0x10]
  4065b0:	call   404db0 <push_back_one_char@@Base>
  4065b5:	movsxd rax,DWORD PTR [rbp-0x21c]
  4065bc:	mov    BYTE PTR [rbp+rax*1-0x210],0x0
  4065c4:	mov    edi,0x8
  4065c9:	call   4031b0 <malloc@plt>
  4065ce:	lea    rdi,[rbp-0x210]
  4065d5:	mov    QWORD PTR [rbp-0x238],rax
  4065dc:	mov    rax,QWORD PTR [rbp-0x238]
  4065e3:	mov    QWORD PTR [rbp-0x528],rax
  4065ea:	call   403250 <atoi@plt>
  4065ef:	mov    rdi,QWORD PTR [rbp-0x528]
  4065f6:	mov    esi,eax
  4065f8:	call   403cf0 <init_token_int_value@@Base>
  4065fd:	lea    rcx,[rip+0xceec]        # 4134f0 <__bss_start@@Base+0x388>
  406604:	add    rcx,0x350
  40660b:	mov    rdx,QWORD PTR [rbp-0x238]
  406612:	mov    QWORD PTR [rbp-0x8],rdx
  406616:	mov    QWORD PTR [rbp-0x270],rcx
  40661d:	jmp    40704a <next@@Base+0x223a>
  406622:	mov    rax,QWORD PTR [rbp-0x2e0]
  406629:	mov    rcx,QWORD PTR [rax]
  40662c:	inc    rcx
  40662f:	mov    QWORD PTR [rax],rcx
  406632:	movsx  edx,BYTE PTR [rbp-0x229]
  406639:	lea    rax,[rip+0xd218]        # 413858 <__bss_start@@Base+0x6f0>
  406640:	lea    rcx,[rip+0xd209]        # 413850 <__bss_start@@Base+0x6e8>
  406647:	lea    rsi,[rip+0xd1fa]        # 413848 <__bss_start@@Base+0x6e0>
  40664e:	mov    edi,edx
  406650:	sub    edi,0x66
  406653:	mov    DWORD PTR [rbp-0x52c],edx
  406659:	mov    QWORD PTR [rbp-0x538],rcx
  406660:	mov    QWORD PTR [rbp-0x540],rsi
  406667:	mov    QWORD PTR [rbp-0x548],rax
  40666e:	je     406799 <next@@Base+0x1989>
  406674:	jmp    406679 <next@@Base+0x1869>
  406679:	mov    eax,DWORD PTR [rbp-0x52c]
  40667f:	sub    eax,0x6e
  406682:	mov    rcx,QWORD PTR [rbp-0x538]
  406689:	mov    rdx,QWORD PTR [rbp-0x540]
  406690:	mov    QWORD PTR [rbp-0x550],rcx
  406697:	mov    QWORD PTR [rbp-0x558],rdx
  40669e:	jne    406821 <next@@Base+0x1a11>
  4066a4:	jmp    4066a9 <next@@Base+0x1899>
  4066a9:	mov    rax,QWORD PTR [rbp-0x550]
  4066b0:	mov    rcx,QWORD PTR [rax]
  4066b3:	add    rcx,0x1
  4066ba:	mov    QWORD PTR [rax],rcx
  4066bd:	mov    dl,BYTE PTR [rbp-0x229]
  4066c3:	mov    esi,DWORD PTR [rbp-0x21c]
  4066c9:	mov    edi,esi
  4066cb:	add    edi,0x1
  4066ce:	mov    DWORD PTR [rbp-0x21c],edi
  4066d4:	movsxd rax,esi
  4066d7:	mov    BYTE PTR [rbp+rax*1-0x210],dl
  4066de:	mov    rdi,QWORD PTR [rbp-0x10]
  4066e2:	call   404c30 <get_char@@Base>
  4066e7:	lea    rcx,[rip+0xce02]        # 4134f0 <__bss_start@@Base+0x388>
  4066ee:	mov    rdi,rcx
  4066f1:	add    rdi,0x370
  4066f8:	add    rcx,0x378
  4066ff:	mov    BYTE PTR [rbp-0x229],al
  406705:	movsx  esi,BYTE PTR [rbp-0x229]
  40670c:	cmp    esi,0x74
  40670f:	mov    QWORD PTR [rbp-0x560],rdi
  406716:	mov    QWORD PTR [rbp-0x568],rcx
  40671d:	je     406741 <next@@Base+0x1931>
  406723:	mov    rax,QWORD PTR [rbp-0x560]
  40672a:	mov    rcx,QWORD PTR [rax]
  40672d:	add    rcx,0x1
  406734:	mov    QWORD PTR [rax],rcx
  406737:	mov    edi,0x1
  40673c:	call   403260 <exit@plt>
  406741:	mov    rax,QWORD PTR [rbp-0x568]
  406748:	mov    rcx,QWORD PTR [rax]
  40674b:	add    rcx,0x1
  406752:	mov    QWORD PTR [rax],rcx
  406755:	mov    edi,0x4
  40675a:	call   4031b0 <malloc@plt>
  40675f:	mov    QWORD PTR [rbp-0x238],rax
  406766:	mov    rax,QWORD PTR [rbp-0x238]
  40676d:	mov    rdi,rax
  406770:	call   403ca0 <init_token_int_type@@Base>
  406775:	lea    rax,[rip+0xcd74]        # 4134f0 <__bss_start@@Base+0x388>
  40677c:	add    rax,0x380
  406782:	mov    rcx,QWORD PTR [rbp-0x238]
  406789:	mov    QWORD PTR [rbp-0x8],rcx
  40678d:	mov    QWORD PTR [rbp-0x270],rax
  406794:	jmp    40704a <next@@Base+0x223a>
  406799:	mov    rax,QWORD PTR [rbp-0x548]
  4067a0:	mov    rcx,QWORD PTR [rax]
  4067a3:	add    rcx,0x1
  4067aa:	mov    QWORD PTR [rax],rcx
  4067ad:	mov    dl,BYTE PTR [rbp-0x229]
  4067b3:	mov    esi,DWORD PTR [rbp-0x21c]
  4067b9:	mov    edi,esi
  4067bb:	add    edi,0x1
  4067be:	mov    DWORD PTR [rbp-0x21c],edi
  4067c4:	movsxd rax,esi
  4067c7:	mov    BYTE PTR [rbp+rax*1-0x210],dl
  4067ce:	movsxd rax,DWORD PTR [rbp-0x21c]
  4067d5:	mov    BYTE PTR [rbp+rax*1-0x210],0x0
  4067dd:	mov    edi,0x4
  4067e2:	call   4031b0 <malloc@plt>
  4067e7:	mov    QWORD PTR [rbp-0x238],rax
  4067ee:	mov    rax,QWORD PTR [rbp-0x238]
  4067f5:	mov    rdi,rax
  4067f8:	call   403ff0 <init_token_if@@Base>
  4067fd:	lea    rax,[rip+0xccec]        # 4134f0 <__bss_start@@Base+0x388>
  406804:	add    rax,0x388
  40680a:	mov    rcx,QWORD PTR [rbp-0x238]
  406811:	mov    QWORD PTR [rbp-0x8],rcx
  406815:	mov    QWORD PTR [rbp-0x270],rax
  40681c:	jmp    40704a <next@@Base+0x223a>
  406821:	mov    rax,QWORD PTR [rbp-0x558]
  406828:	mov    rcx,QWORD PTR [rax]
  40682b:	add    rcx,0x1
  406832:	mov    QWORD PTR [rax],rcx
  406835:	mov    edi,0x1
  40683a:	call   403260 <exit@plt>
  40683f:	mov    rax,QWORD PTR [rbp-0x2e8]
  406846:	lea    rcx,[rip+0xcca3]        # 4134f0 <__bss_start@@Base+0x388>
  40684d:	mov    rdx,rcx
  406850:	add    rdx,0x390
  406857:	add    rcx,0x398
  40685e:	mov    rsi,QWORD PTR [rax]
  406861:	add    rsi,0x1
  406868:	mov    QWORD PTR [rax],rsi
  40686b:	movsx  edi,BYTE PTR [rbp-0x229]
  406872:	cmp    edi,0x61
  406875:	mov    QWORD PTR [rbp-0x570],rdx
  40687c:	mov    QWORD PTR [rbp-0x578],rcx
  406883:	je     4068a7 <next@@Base+0x1a97>
  406889:	mov    rax,QWORD PTR [rbp-0x570]
  406890:	mov    rcx,QWORD PTR [rax]
  406893:	add    rcx,0x1
  40689a:	mov    QWORD PTR [rax],rcx
  40689d:	mov    edi,0x1
  4068a2:	call   403260 <exit@plt>
  4068a7:	mov    rax,QWORD PTR [rbp-0x578]
  4068ae:	mov    rcx,QWORD PTR [rax]
  4068b1:	add    rcx,0x1
  4068b8:	mov    QWORD PTR [rax],rcx
  4068bb:	mov    dl,BYTE PTR [rbp-0x229]
  4068c1:	mov    esi,DWORD PTR [rbp-0x21c]
  4068c7:	mov    edi,esi
  4068c9:	add    edi,0x1
  4068cc:	mov    DWORD PTR [rbp-0x21c],edi
  4068d2:	movsxd rax,esi
  4068d5:	mov    BYTE PTR [rbp+rax*1-0x210],dl
  4068dc:	mov    rdi,QWORD PTR [rbp-0x10]
  4068e0:	call   404c30 <get_char@@Base>
  4068e5:	lea    rcx,[rip+0xcc04]        # 4134f0 <__bss_start@@Base+0x388>
  4068ec:	mov    rdi,rcx
  4068ef:	add    rdi,0x3a0
  4068f6:	add    rcx,0x3a8
  4068fd:	mov    BYTE PTR [rbp-0x229],al
  406903:	movsx  esi,BYTE PTR [rbp-0x229]
  40690a:	cmp    esi,0x69
  40690d:	mov    QWORD PTR [rbp-0x580],rdi
  406914:	mov    QWORD PTR [rbp-0x588],rcx
  40691b:	je     40693f <next@@Base+0x1b2f>
  406921:	mov    rax,QWORD PTR [rbp-0x580]
  406928:	mov    rcx,QWORD PTR [rax]
  40692b:	add    rcx,0x1
  406932:	mov    QWORD PTR [rax],rcx
  406935:	mov    edi,0x1
  40693a:	call   403260 <exit@plt>
  40693f:	mov    rax,QWORD PTR [rbp-0x588]
  406946:	mov    rcx,QWORD PTR [rax]
  406949:	add    rcx,0x1
  406950:	mov    QWORD PTR [rax],rcx
  406953:	mov    dl,BYTE PTR [rbp-0x229]
  406959:	mov    esi,DWORD PTR [rbp-0x21c]
  40695f:	mov    edi,esi
  406961:	add    edi,0x1
  406964:	mov    DWORD PTR [rbp-0x21c],edi
  40696a:	movsxd rax,esi
  40696d:	mov    BYTE PTR [rbp+rax*1-0x210],dl
  406974:	mov    rdi,QWORD PTR [rbp-0x10]
  406978:	call   404c30 <get_char@@Base>
  40697d:	lea    rcx,[rip+0xcb6c]        # 4134f0 <__bss_start@@Base+0x388>
  406984:	mov    rdi,rcx
  406987:	add    rdi,0x3b0
  40698e:	add    rcx,0x3b8
  406995:	mov    BYTE PTR [rbp-0x229],al
  40699b:	movsx  esi,BYTE PTR [rbp-0x229]
  4069a2:	cmp    esi,0x6e
  4069a5:	mov    QWORD PTR [rbp-0x590],rdi
  4069ac:	mov    QWORD PTR [rbp-0x598],rcx
  4069b3:	je     4069d7 <next@@Base+0x1bc7>
  4069b9:	mov    rax,QWORD PTR [rbp-0x590]
  4069c0:	mov    rcx,QWORD PTR [rax]
  4069c3:	add    rcx,0x1
  4069ca:	mov    QWORD PTR [rax],rcx
  4069cd:	mov    edi,0x1
  4069d2:	call   403260 <exit@plt>
  4069d7:	mov    rax,QWORD PTR [rbp-0x598]
  4069de:	mov    rcx,QWORD PTR [rax]
  4069e1:	add    rcx,0x1
  4069e8:	mov    QWORD PTR [rax],rcx
  4069eb:	mov    dl,BYTE PTR [rbp-0x229]
  4069f1:	mov    esi,DWORD PTR [rbp-0x21c]
  4069f7:	mov    edi,esi
  4069f9:	add    edi,0x1
  4069fc:	mov    DWORD PTR [rbp-0x21c],edi
  406a02:	movsxd rax,esi
  406a05:	mov    BYTE PTR [rbp+rax*1-0x210],dl
  406a0c:	movsxd rax,DWORD PTR [rbp-0x21c]
  406a13:	mov    BYTE PTR [rbp+rax*1-0x210],0x0
  406a1b:	movsxd rax,DWORD PTR [rbp-0x21c]
  406a22:	shl    rax,0x0
  406a26:	add    rax,0x1
  406a2c:	mov    rdi,rax
  406a2f:	call   4031b0 <malloc@plt>
  406a34:	lea    rsi,[rbp-0x210]
  406a3b:	mov    QWORD PTR [rbp-0x218],rax
  406a42:	mov    rdi,QWORD PTR [rbp-0x218]
  406a49:	movsxd rdx,DWORD PTR [rbp-0x21c]
  406a50:	call   403060 <strncpy@plt>
  406a55:	mov    rcx,QWORD PTR [rbp-0x218]
  406a5c:	movsxd rdx,DWORD PTR [rbp-0x21c]
  406a63:	mov    BYTE PTR [rcx+rdx*1],0x0
  406a67:	mov    edi,0x10
  406a6c:	mov    QWORD PTR [rbp-0x5a0],rax
  406a73:	call   4031b0 <malloc@plt>
  406a78:	mov    QWORD PTR [rbp-0x238],rax
  406a7f:	mov    rax,QWORD PTR [rbp-0x238]
  406a86:	mov    rsi,QWORD PTR [rbp-0x218]
  406a8d:	mov    rdi,rax
  406a90:	call   403d50 <init_token_function@@Base>
  406a95:	lea    rax,[rip+0xca54]        # 4134f0 <__bss_start@@Base+0x388>
  406a9c:	add    rax,0x3c0
  406aa2:	mov    rcx,QWORD PTR [rbp-0x238]
  406aa9:	mov    QWORD PTR [rbp-0x8],rcx
  406aad:	mov    QWORD PTR [rbp-0x270],rax
  406ab4:	jmp    40704a <next@@Base+0x223a>
  406ab9:	mov    rax,QWORD PTR [rbp-0x2f0]
  406ac0:	lea    rcx,[rip+0xca29]        # 4134f0 <__bss_start@@Base+0x388>
  406ac7:	mov    rdx,rcx
  406aca:	add    rdx,0x3c8
  406ad1:	add    rcx,0x3d0
  406ad8:	mov    rsi,QWORD PTR [rax]
  406adb:	add    rsi,0x1
  406ae2:	mov    QWORD PTR [rax],rsi
  406ae5:	movsx  edi,BYTE PTR [rbp-0x229]
  406aec:	cmp    edi,0x65
  406aef:	mov    QWORD PTR [rbp-0x5a8],rdx
  406af6:	mov    QWORD PTR [rbp-0x5b0],rcx
  406afd:	je     406b21 <next@@Base+0x1d11>
  406b03:	mov    rax,QWORD PTR [rbp-0x5a8]
  406b0a:	mov    rcx,QWORD PTR [rax]
  406b0d:	add    rcx,0x1
  406b14:	mov    QWORD PTR [rax],rcx
  406b17:	mov    edi,0x1
  406b1c:	call   403260 <exit@plt>
  406b21:	mov    rax,QWORD PTR [rbp-0x5b0]
  406b28:	mov    rcx,QWORD PTR [rax]
  406b2b:	add    rcx,0x1
  406b32:	mov    QWORD PTR [rax],rcx
  406b35:	mov    dl,BYTE PTR [rbp-0x229]
  406b3b:	mov    esi,DWORD PTR [rbp-0x21c]
  406b41:	mov    edi,esi
  406b43:	add    edi,0x1
  406b46:	mov    DWORD PTR [rbp-0x21c],edi
  406b4c:	movsxd rax,esi
  406b4f:	mov    BYTE PTR [rbp+rax*1-0x210],dl
  406b56:	mov    rdi,QWORD PTR [rbp-0x10]
  406b5a:	call   404c30 <get_char@@Base>
  406b5f:	lea    rcx,[rip+0xc98a]        # 4134f0 <__bss_start@@Base+0x388>
  406b66:	mov    rdi,rcx
  406b69:	add    rdi,0x3d8
  406b70:	add    rcx,0x3e0
  406b77:	mov    BYTE PTR [rbp-0x229],al
  406b7d:	movsx  esi,BYTE PTR [rbp-0x229]
  406b84:	cmp    esi,0x74
  406b87:	mov    QWORD PTR [rbp-0x5b8],rdi
  406b8e:	mov    QWORD PTR [rbp-0x5c0],rcx
  406b95:	je     406bb9 <next@@Base+0x1da9>
  406b9b:	mov    rax,QWORD PTR [rbp-0x5b8]
  406ba2:	mov    rcx,QWORD PTR [rax]
  406ba5:	add    rcx,0x1
  406bac:	mov    QWORD PTR [rax],rcx
  406baf:	mov    edi,0x1
  406bb4:	call   403260 <exit@plt>
  406bb9:	mov    rax,QWORD PTR [rbp-0x5c0]
  406bc0:	mov    rcx,QWORD PTR [rax]
  406bc3:	add    rcx,0x1
  406bca:	mov    QWORD PTR [rax],rcx
  406bcd:	mov    dl,BYTE PTR [rbp-0x229]
  406bd3:	mov    esi,DWORD PTR [rbp-0x21c]
  406bd9:	mov    edi,esi
  406bdb:	add    edi,0x1
  406bde:	mov    DWORD PTR [rbp-0x21c],edi
  406be4:	movsxd rax,esi
  406be7:	mov    BYTE PTR [rbp+rax*1-0x210],dl
  406bee:	mov    rdi,QWORD PTR [rbp-0x10]
  406bf2:	call   404c30 <get_char@@Base>
  406bf7:	lea    rcx,[rip+0xc8f2]        # 4134f0 <__bss_start@@Base+0x388>
  406bfe:	mov    rdi,rcx
  406c01:	add    rdi,0x3e8
  406c08:	add    rcx,0x3f0
  406c0f:	mov    BYTE PTR [rbp-0x229],al
  406c15:	movsx  esi,BYTE PTR [rbp-0x229]
  406c1c:	cmp    esi,0x75
  406c1f:	mov    QWORD PTR [rbp-0x5c8],rdi
  406c26:	mov    QWORD PTR [rbp-0x5d0],rcx
  406c2d:	je     406c51 <next@@Base+0x1e41>
  406c33:	mov    rax,QWORD PTR [rbp-0x5c8]
  406c3a:	mov    rcx,QWORD PTR [rax]
  406c3d:	add    rcx,0x1
  406c44:	mov    QWORD PTR [rax],rcx
  406c47:	mov    edi,0x1
  406c4c:	call   403260 <exit@plt>
  406c51:	mov    rax,QWORD PTR [rbp-0x5d0]
  406c58:	mov    rcx,QWORD PTR [rax]
  406c5b:	add    rcx,0x1
  406c62:	mov    QWORD PTR [rax],rcx
  406c65:	mov    dl,BYTE PTR [rbp-0x229]
  406c6b:	mov    esi,DWORD PTR [rbp-0x21c]
  406c71:	mov    edi,esi
  406c73:	add    edi,0x1
  406c76:	mov    DWORD PTR [rbp-0x21c],edi
  406c7c:	movsxd rax,esi
  406c7f:	mov    BYTE PTR [rbp+rax*1-0x210],dl
  406c86:	mov    rdi,QWORD PTR [rbp-0x10]
  406c8a:	call   404c30 <get_char@@Base>
  406c8f:	lea    rcx,[rip+0xc85a]        # 4134f0 <__bss_start@@Base+0x388>
  406c96:	mov    rdi,rcx
  406c99:	add    rdi,0x3f8
  406ca0:	add    rcx,0x400
  406ca7:	mov    BYTE PTR [rbp-0x229],al
  406cad:	movsx  esi,BYTE PTR [rbp-0x229]
  406cb4:	cmp    esi,0x72
  406cb7:	mov    QWORD PTR [rbp-0x5d8],rdi
  406cbe:	mov    QWORD PTR [rbp-0x5e0],rcx
  406cc5:	je     406ce9 <next@@Base+0x1ed9>
  406ccb:	mov    rax,QWORD PTR [rbp-0x5d8]
  406cd2:	mov    rcx,QWORD PTR [rax]
  406cd5:	add    rcx,0x1
  406cdc:	mov    QWORD PTR [rax],rcx
  406cdf:	mov    edi,0x1
  406ce4:	call   403260 <exit@plt>
  406ce9:	mov    rax,QWORD PTR [rbp-0x5e0]
  406cf0:	mov    rcx,QWORD PTR [rax]
  406cf3:	add    rcx,0x1
  406cfa:	mov    QWORD PTR [rax],rcx
  406cfd:	mov    dl,BYTE PTR [rbp-0x229]
  406d03:	mov    esi,DWORD PTR [rbp-0x21c]
  406d09:	mov    edi,esi
  406d0b:	add    edi,0x1
  406d0e:	mov    DWORD PTR [rbp-0x21c],edi
  406d14:	movsxd rax,esi
  406d17:	mov    BYTE PTR [rbp+rax*1-0x210],dl
  406d1e:	mov    rdi,QWORD PTR [rbp-0x10]
  406d22:	call   404c30 <get_char@@Base>
  406d27:	lea    rcx,[rip+0xc7c2]        # 4134f0 <__bss_start@@Base+0x388>
  406d2e:	mov    rdi,rcx
  406d31:	add    rdi,0x408
  406d38:	add    rcx,0x410
  406d3f:	mov    BYTE PTR [rbp-0x229],al
  406d45:	movsx  esi,BYTE PTR [rbp-0x229]
  406d4c:	cmp    esi,0x6e
  406d4f:	mov    QWORD PTR [rbp-0x5e8],rdi
  406d56:	mov    QWORD PTR [rbp-0x5f0],rcx
  406d5d:	je     406d81 <next@@Base+0x1f71>
  406d63:	mov    rax,QWORD PTR [rbp-0x5e8]
  406d6a:	mov    rcx,QWORD PTR [rax]
  406d6d:	add    rcx,0x1
  406d74:	mov    QWORD PTR [rax],rcx
  406d77:	mov    edi,0x1
  406d7c:	call   403260 <exit@plt>
  406d81:	mov    rax,QWORD PTR [rbp-0x5f0]
  406d88:	mov    rcx,QWORD PTR [rax]
  406d8b:	add    rcx,0x1
  406d92:	mov    QWORD PTR [rax],rcx
  406d95:	mov    edi,0x4
  406d9a:	call   4031b0 <malloc@plt>
  406d9f:	mov    QWORD PTR [rbp-0x238],rax
  406da6:	mov    rax,QWORD PTR [rbp-0x238]
  406dad:	mov    rdi,rax
  406db0:	call   403f00 <init_token_return@@Base>
  406db5:	lea    rax,[rip+0xc734]        # 4134f0 <__bss_start@@Base+0x388>
  406dbc:	add    rax,0x418
  406dc2:	mov    rcx,QWORD PTR [rbp-0x238]
  406dc9:	mov    QWORD PTR [rbp-0x8],rcx
  406dcd:	mov    QWORD PTR [rbp-0x270],rax
  406dd4:	jmp    40704a <next@@Base+0x223a>
  406dd9:	mov    rax,QWORD PTR [rbp-0x2f8]
  406de0:	lea    rcx,[rip+0xc709]        # 4134f0 <__bss_start@@Base+0x388>
  406de7:	mov    rdx,rcx
  406dea:	add    rdx,0x420
  406df1:	add    rcx,0x428
  406df8:	mov    rsi,QWORD PTR [rax]
  406dfb:	add    rsi,0x1
  406e02:	mov    QWORD PTR [rax],rsi
  406e05:	movsx  edi,BYTE PTR [rbp-0x229]
  406e0c:	cmp    edi,0x6c
  406e0f:	mov    QWORD PTR [rbp-0x5f8],rdx
  406e16:	mov    QWORD PTR [rbp-0x600],rcx
  406e1d:	je     406e41 <next@@Base+0x2031>
  406e23:	mov    rax,QWORD PTR [rbp-0x5f8]
  406e2a:	mov    rcx,QWORD PTR [rax]
  406e2d:	add    rcx,0x1
  406e34:	mov    QWORD PTR [rax],rcx
  406e37:	mov    edi,0x1
  406e3c:	call   403260 <exit@plt>
  406e41:	mov    rax,QWORD PTR [rbp-0x600]
  406e48:	mov    rcx,QWORD PTR [rax]
  406e4b:	add    rcx,0x1
  406e52:	mov    QWORD PTR [rax],rcx
  406e55:	mov    dl,BYTE PTR [rbp-0x229]
  406e5b:	mov    esi,DWORD PTR [rbp-0x21c]
  406e61:	mov    edi,esi
  406e63:	add    edi,0x1
  406e66:	mov    DWORD PTR [rbp-0x21c],edi
  406e6c:	movsxd rax,esi
  406e6f:	mov    BYTE PTR [rbp+rax*1-0x210],dl
  406e76:	mov    rdi,QWORD PTR [rbp-0x10]
  406e7a:	call   404c30 <get_char@@Base>
  406e7f:	lea    rcx,[rip+0xc66a]        # 4134f0 <__bss_start@@Base+0x388>
  406e86:	mov    rdi,rcx
  406e89:	add    rdi,0x430
  406e90:	add    rcx,0x438
  406e97:	mov    BYTE PTR [rbp-0x229],al
  406e9d:	movsx  esi,BYTE PTR [rbp-0x229]
  406ea4:	cmp    esi,0x73
  406ea7:	mov    QWORD PTR [rbp-0x608],rdi
  406eae:	mov    QWORD PTR [rbp-0x610],rcx
  406eb5:	je     406ed9 <next@@Base+0x20c9>
  406ebb:	mov    rax,QWORD PTR [rbp-0x608]
  406ec2:	mov    rcx,QWORD PTR [rax]
  406ec5:	add    rcx,0x1
  406ecc:	mov    QWORD PTR [rax],rcx
  406ecf:	mov    edi,0x1
  406ed4:	call   403260 <exit@plt>
  406ed9:	mov    rax,QWORD PTR [rbp-0x610]
  406ee0:	mov    rcx,QWORD PTR [rax]
  406ee3:	add    rcx,0x1
  406eea:	mov    QWORD PTR [rax],rcx
  406eed:	mov    dl,BYTE PTR [rbp-0x229]
  406ef3:	mov    esi,DWORD PTR [rbp-0x21c]
  406ef9:	mov    edi,esi
  406efb:	add    edi,0x1
  406efe:	mov    DWORD PTR [rbp-0x21c],edi
  406f04:	movsxd rax,esi
  406f07:	mov    BYTE PTR [rbp+rax*1-0x210],dl
  406f0e:	mov    rdi,QWORD PTR [rbp-0x10]
  406f12:	call   404c30 <get_char@@Base>
  406f17:	lea    rcx,[rip+0xc5d2]        # 4134f0 <__bss_start@@Base+0x388>
  406f1e:	mov    rdi,rcx
  406f21:	add    rdi,0x440
  406f28:	add    rcx,0x448
  406f2f:	mov    BYTE PTR [rbp-0x229],al
  406f35:	movsx  esi,BYTE PTR [rbp-0x229]
  406f3c:	cmp    esi,0x65
  406f3f:	mov    QWORD PTR [rbp-0x618],rdi
  406f46:	mov    QWORD PTR [rbp-0x620],rcx
  406f4d:	je     406f71 <next@@Base+0x2161>
  406f53:	mov    rax,QWORD PTR [rbp-0x618]
  406f5a:	mov    rcx,QWORD PTR [rax]
  406f5d:	add    rcx,0x1
  406f64:	mov    QWORD PTR [rax],rcx
  406f67:	mov    edi,0x1
  406f6c:	call   403260 <exit@plt>
  406f71:	mov    rax,QWORD PTR [rbp-0x620]
  406f78:	mov    rcx,QWORD PTR [rax]
  406f7b:	add    rcx,0x1
  406f82:	mov    QWORD PTR [rax],rcx
  406f85:	mov    edi,0x4
  406f8a:	call   4031b0 <malloc@plt>
  406f8f:	mov    QWORD PTR [rbp-0x238],rax
  406f96:	mov    rax,QWORD PTR [rbp-0x238]
  406f9d:	mov    rdi,rax
  406fa0:	call   404040 <init_token_else@@Base>
  406fa5:	lea    rax,[rip+0xc544]        # 4134f0 <__bss_start@@Base+0x388>
  406fac:	add    rax,0x450
  406fb2:	mov    rcx,QWORD PTR [rbp-0x238]
  406fb9:	mov    QWORD PTR [rbp-0x8],rcx
  406fbd:	mov    QWORD PTR [rbp-0x270],rax
  406fc4:	jmp    40704a <next@@Base+0x223a>
  406fc9:	mov    rax,QWORD PTR [rbp-0x2c8]
  406fd0:	lea    rcx,[rip+0xc519]        # 4134f0 <__bss_start@@Base+0x388>
  406fd7:	add    rcx,0x458
  406fde:	mov    rdx,QWORD PTR [rax]
  406fe1:	add    rdx,0x1
  406fe8:	mov    QWORD PTR [rax],rdx
  406feb:	mov    QWORD PTR [rbp-0x278],rcx
  406ff2:	jmp    404f79 <next@@Base+0x169>
  406ff7:	mov    rax,QWORD PTR [rbp-0x288]
  406ffe:	mov    rcx,QWORD PTR [rax]
  407001:	add    rcx,0x1
  407008:	mov    QWORD PTR [rax],rcx
  40700b:	mov    edi,0x4
  407010:	call   4031b0 <malloc@plt>
  407015:	mov    QWORD PTR [rbp-0x238],rax
  40701c:	mov    rax,QWORD PTR [rbp-0x238]
  407023:	mov    rdi,rax
  407026:	call   403fa0 <init_token_eof@@Base>
  40702b:	lea    rax,[rip+0xc4be]        # 4134f0 <__bss_start@@Base+0x388>
  407032:	add    rax,0x460
  407038:	mov    rcx,QWORD PTR [rbp-0x238]
  40703f:	mov    QWORD PTR [rbp-0x8],rcx
  407043:	mov    QWORD PTR [rbp-0x270],rax
  40704a:	mov    rax,QWORD PTR [rbp-0x270]
  407051:	mov    rcx,QWORD PTR [rax]
  407054:	add    rcx,0x1
  40705b:	mov    QWORD PTR [rax],rcx
  40705e:	mov    rax,QWORD PTR [rip+0xc8f3]        # 413958 <__bss_start@@Base+0x7f0>
  407065:	add    rax,0x1
  40706b:	mov    QWORD PTR [rip+0xc8e6],rax        # 413958 <__bss_start@@Base+0x7f0>
  407072:	mov    rax,QWORD PTR [rbp-0x8]
  407076:	add    rsp,0x620
  40707d:	pop    rbp
  40707e:	ret    
  40707f:	nop
  407080:	sub    rsp,0x38
  407084:	xor    eax,eax
  407086:	mov    DWORD PTR [rsp+0x34],eax
  40708a:	jmp    40708f <next@@Base+0x227f>
  40708f:	mov    eax,DWORD PTR [rsp+0x34]
  407093:	movsxd rcx,eax
  407096:	imul   rcx,rcx,0x30
  40709d:	lea    rdx,[rip+0xb50c]        # 4125b0 <_IO_stdin_used@@Base+0x45b0>
  4070a4:	add    rdx,rcx
  4070a7:	mov    rdi,QWORD PTR [rdx]
  4070aa:	mov    rsi,QWORD PTR [rdx+0x8]
  4070ae:	mov    r8d,DWORD PTR [rdx+0x10]
  4070b2:	mov    QWORD PTR [rsp+0x28],rdx
  4070b7:	mov    edx,r8d
  4070ba:	mov    DWORD PTR [rsp+0x24],eax
  4070be:	call   40c050 <__generate_code_for_binary_boolean_expression@@Base+0x8f0>
  4070c3:	xor    eax,eax
  4070c5:	mov    rcx,QWORD PTR [rsp+0x28]
  4070ca:	mov    edx,DWORD PTR [rcx+0x18]
  4070cd:	mov    rsi,QWORD PTR [rcx+0x20]
  4070d1:	mov    rdi,QWORD PTR [rcx+0x28]
  4070d5:	cmp    eax,edx
  4070d7:	mov    DWORD PTR [rsp+0x20],edx
  4070db:	mov    QWORD PTR [rsp+0x18],rsi
  4070e0:	mov    QWORD PTR [rsp+0x10],rdi
  4070e5:	mov    DWORD PTR [rsp+0xc],eax
  4070e9:	jge    40715d <next@@Base+0x234d>
  4070ef:	mov    eax,DWORD PTR [rsp+0xc]
  4070f3:	movsxd rcx,eax
  4070f6:	shl    rcx,0x5
  4070fa:	mov    rdx,QWORD PTR [rsp+0x18]
  4070ff:	add    rdx,rcx
  407102:	mov    edi,DWORD PTR [rdx]
  407104:	mov    rsi,QWORD PTR [rdx+0x8]
  407108:	mov    r8d,DWORD PTR [rdx+0x10]
  40710c:	mov    r9b,BYTE PTR [rdx+0x14]
  407110:	mov    r10d,DWORD PTR [rdx+0x18]
  407114:	mov    edx,r8d
  407117:	movzx  ecx,r9b
  40711b:	mov    r8d,r10d
  40711e:	mov    DWORD PTR [rsp+0x8],eax
  407122:	call   40c4a0 <__generate_code_for_binary_boolean_expression@@Base+0xd40>
  407127:	mov    eax,DWORD PTR [rsp+0x8]
  40712b:	movsxd rsi,eax
  40712e:	shl    rsi,0x4
  407132:	mov    r11,QWORD PTR [rsp+0x10]
  407137:	add    r11,rsi
  40713a:	mov    edi,DWORD PTR [r11]
  40713d:	mov    rsi,QWORD PTR [r11+0x8]
  407141:	call   40c8c0 <__generate_code_for_binary_boolean_expression@@Base+0x1160>
  407146:	mov    eax,DWORD PTR [rsp+0x8]
  40714a:	add    eax,0x1
  40714d:	mov    ecx,DWORD PTR [rsp+0x20]
  407151:	cmp    eax,ecx
  407153:	mov    DWORD PTR [rsp+0xc],eax
  407157:	jl     4070ef <next@@Base+0x22df>
  40715d:	call   40ccd0 <__generate_code_for_binary_boolean_expression@@Base+0x1570>
  407162:	call   40d470 <__generate_code_for_binary_boolean_expression@@Base+0x1d10>
  407167:	mov    eax,DWORD PTR [rsp+0x24]
  40716b:	add    eax,0x1
  40716e:	cmp    eax,0x1
  407171:	mov    DWORD PTR [rsp+0x34],eax
  407175:	jl     40708f <next@@Base+0x227f>
  40717b:	add    rsp,0x38
  40717f:	ret    
  407180:	push   rax
  407181:	call   407080 <next@@Base+0x2270>
  407186:	mov    QWORD PTR [rip+0xc2b7],0x0        # 413448 <__bss_start@@Base+0x2e0>
  407191:	mov    QWORD PTR [rip+0xc2a4],0x0        # 413440 <__bss_start@@Base+0x2d8>
  40719c:	mov    QWORD PTR [rip+0xc2c9],0x0        # 413470 <__bss_start@@Base+0x308>
  4071a7:	mov    QWORD PTR [rip+0xc2b6],0x0        # 413468 <__bss_start@@Base+0x300>
  4071b2:	mov    QWORD PTR [rip+0xc2a3],0x0        # 413460 <__bss_start@@Base+0x2f8>
  4071bd:	mov    QWORD PTR [rip+0xc290],0x0        # 413458 <__bss_start@@Base+0x2f0>
  4071c8:	mov    QWORD PTR [rip+0xc27d],0x0        # 413450 <__bss_start@@Base+0x2e8>
  4071d3:	mov    QWORD PTR [rip+0xc2a2],0x0        # 413480 <__bss_start@@Base+0x318>
  4071de:	mov    QWORD PTR [rip+0xc28f],0x0        # 413478 <__bss_start@@Base+0x310>
  4071e9:	mov    QWORD PTR [rip+0xc29c],0x0        # 413490 <__bss_start@@Base+0x328>
  4071f4:	mov    QWORD PTR [rip+0xc289],0x0        # 413488 <__bss_start@@Base+0x320>
  4071ff:	mov    QWORD PTR [rip+0xc296],0x0        # 4134a0 <__bss_start@@Base+0x338>
  40720a:	mov    QWORD PTR [rip+0xc283],0x0        # 413498 <__bss_start@@Base+0x330>
  407215:	mov    QWORD PTR [rip+0xc2b0],0x0        # 4134d0 <__bss_start@@Base+0x368>
  407220:	mov    QWORD PTR [rip+0xc29d],0x0        # 4134c8 <__bss_start@@Base+0x360>
  40722b:	mov    QWORD PTR [rip+0xc28a],0x0        # 4134c0 <__bss_start@@Base+0x358>
  407236:	mov    QWORD PTR [rip+0xc277],0x0        # 4134b8 <__bss_start@@Base+0x350>
  407241:	mov    QWORD PTR [rip+0xc264],0x0        # 4134b0 <__bss_start@@Base+0x348>
  40724c:	mov    QWORD PTR [rip+0xc289],0x0        # 4134e0 <__bss_start@@Base+0x378>
  407257:	mov    QWORD PTR [rip+0xc276],0x0        # 4134d8 <__bss_start@@Base+0x370>
  407262:	mov    QWORD PTR [rip+0xc47b],0x0        # 4136e8 <__bss_start@@Base+0x580>
  40726d:	mov    QWORD PTR [rip+0xc468],0x0        # 4136e0 <__bss_start@@Base+0x578>
  407278:	mov    QWORD PTR [rip+0xc455],0x0        # 4136d8 <__bss_start@@Base+0x570>
  407283:	mov    QWORD PTR [rip+0xc442],0x0        # 4136d0 <__bss_start@@Base+0x568>
  40728e:	mov    QWORD PTR [rip+0xc42f],0x0        # 4136c8 <__bss_start@@Base+0x560>
  407299:	mov    QWORD PTR [rip+0xc41c],0x0        # 4136c0 <__bss_start@@Base+0x558>
  4072a4:	mov    QWORD PTR [rip+0xc409],0x0        # 4136b8 <__bss_start@@Base+0x550>
  4072af:	mov    QWORD PTR [rip+0xc3f6],0x0        # 4136b0 <__bss_start@@Base+0x548>
  4072ba:	mov    QWORD PTR [rip+0xc3e3],0x0        # 4136a8 <__bss_start@@Base+0x540>
  4072c5:	mov    QWORD PTR [rip+0xc3d0],0x0        # 4136a0 <__bss_start@@Base+0x538>
  4072d0:	mov    QWORD PTR [rip+0xc3bd],0x0        # 413698 <__bss_start@@Base+0x530>
  4072db:	mov    QWORD PTR [rip+0xc3aa],0x0        # 413690 <__bss_start@@Base+0x528>
  4072e6:	mov    QWORD PTR [rip+0xc397],0x0        # 413688 <__bss_start@@Base+0x520>
  4072f1:	mov    QWORD PTR [rip+0xc384],0x0        # 413680 <__bss_start@@Base+0x518>
  4072fc:	mov    QWORD PTR [rip+0xc371],0x0        # 413678 <__bss_start@@Base+0x510>
  407307:	mov    QWORD PTR [rip+0xc35e],0x0        # 413670 <__bss_start@@Base+0x508>
  407312:	mov    QWORD PTR [rip+0xc34b],0x0        # 413668 <__bss_start@@Base+0x500>
  40731d:	mov    QWORD PTR [rip+0xc338],0x0        # 413660 <__bss_start@@Base+0x4f8>
  407328:	mov    QWORD PTR [rip+0xc325],0x0        # 413658 <__bss_start@@Base+0x4f0>
  407333:	mov    QWORD PTR [rip+0xc312],0x0        # 413650 <__bss_start@@Base+0x4e8>
  40733e:	mov    QWORD PTR [rip+0xc2ff],0x0        # 413648 <__bss_start@@Base+0x4e0>
  407349:	mov    QWORD PTR [rip+0xc2ec],0x0        # 413640 <__bss_start@@Base+0x4d8>
  407354:	mov    QWORD PTR [rip+0xc2d9],0x0        # 413638 <__bss_start@@Base+0x4d0>
  40735f:	mov    QWORD PTR [rip+0xc2c6],0x0        # 413630 <__bss_start@@Base+0x4c8>
  40736a:	mov    QWORD PTR [rip+0xc2b3],0x0        # 413628 <__bss_start@@Base+0x4c0>
  407375:	mov    QWORD PTR [rip+0xc2a0],0x0        # 413620 <__bss_start@@Base+0x4b8>
  407380:	mov    QWORD PTR [rip+0xc28d],0x0        # 413618 <__bss_start@@Base+0x4b0>
  40738b:	mov    QWORD PTR [rip+0xc27a],0x0        # 413610 <__bss_start@@Base+0x4a8>
  407396:	mov    QWORD PTR [rip+0xc267],0x0        # 413608 <__bss_start@@Base+0x4a0>
  4073a1:	mov    QWORD PTR [rip+0xc254],0x0        # 413600 <__bss_start@@Base+0x498>
  4073ac:	mov    QWORD PTR [rip+0xc241],0x0        # 4135f8 <__bss_start@@Base+0x490>
  4073b7:	mov    QWORD PTR [rip+0xc22e],0x0        # 4135f0 <__bss_start@@Base+0x488>
  4073c2:	mov    QWORD PTR [rip+0xc21b],0x0        # 4135e8 <__bss_start@@Base+0x480>
  4073cd:	mov    QWORD PTR [rip+0xc208],0x0        # 4135e0 <__bss_start@@Base+0x478>
  4073d8:	mov    QWORD PTR [rip+0xc1f5],0x0        # 4135d8 <__bss_start@@Base+0x470>
  4073e3:	mov    QWORD PTR [rip+0xc1e2],0x0        # 4135d0 <__bss_start@@Base+0x468>
  4073ee:	mov    QWORD PTR [rip+0xc1cf],0x0        # 4135c8 <__bss_start@@Base+0x460>
  4073f9:	mov    QWORD PTR [rip+0xc1bc],0x0        # 4135c0 <__bss_start@@Base+0x458>
  407404:	mov    QWORD PTR [rip+0xc1a9],0x0        # 4135b8 <__bss_start@@Base+0x450>
  40740f:	mov    QWORD PTR [rip+0xc196],0x0        # 4135b0 <__bss_start@@Base+0x448>
  40741a:	mov    QWORD PTR [rip+0xc183],0x0        # 4135a8 <__bss_start@@Base+0x440>
  407425:	mov    QWORD PTR [rip+0xc170],0x0        # 4135a0 <__bss_start@@Base+0x438>
  407430:	mov    QWORD PTR [rip+0xc15d],0x0        # 413598 <__bss_start@@Base+0x430>
  40743b:	mov    QWORD PTR [rip+0xc14a],0x0        # 413590 <__bss_start@@Base+0x428>
  407446:	mov    QWORD PTR [rip+0xc137],0x0        # 413588 <__bss_start@@Base+0x420>
  407451:	mov    QWORD PTR [rip+0xc124],0x0        # 413580 <__bss_start@@Base+0x418>
  40745c:	mov    QWORD PTR [rip+0xc111],0x0        # 413578 <__bss_start@@Base+0x410>
  407467:	mov    QWORD PTR [rip+0xc0fe],0x0        # 413570 <__bss_start@@Base+0x408>
  407472:	mov    QWORD PTR [rip+0xc0eb],0x0        # 413568 <__bss_start@@Base+0x400>
  40747d:	mov    QWORD PTR [rip+0xc0d8],0x0        # 413560 <__bss_start@@Base+0x3f8>
  407488:	mov    QWORD PTR [rip+0xc0c5],0x0        # 413558 <__bss_start@@Base+0x3f0>
  407493:	mov    QWORD PTR [rip+0xc0b2],0x0        # 413550 <__bss_start@@Base+0x3e8>
  40749e:	mov    QWORD PTR [rip+0xc09f],0x0        # 413548 <__bss_start@@Base+0x3e0>
  4074a9:	mov    QWORD PTR [rip+0xc08c],0x0        # 413540 <__bss_start@@Base+0x3d8>
  4074b4:	mov    QWORD PTR [rip+0xc079],0x0        # 413538 <__bss_start@@Base+0x3d0>
  4074bf:	mov    QWORD PTR [rip+0xc066],0x0        # 413530 <__bss_start@@Base+0x3c8>
  4074ca:	mov    QWORD PTR [rip+0xc053],0x0        # 413528 <__bss_start@@Base+0x3c0>
  4074d5:	mov    QWORD PTR [rip+0xc040],0x0        # 413520 <__bss_start@@Base+0x3b8>
  4074e0:	mov    QWORD PTR [rip+0xc02d],0x0        # 413518 <__bss_start@@Base+0x3b0>
  4074eb:	mov    QWORD PTR [rip+0xc01a],0x0        # 413510 <__bss_start@@Base+0x3a8>
  4074f6:	mov    QWORD PTR [rip+0xc007],0x0        # 413508 <__bss_start@@Base+0x3a0>
  407501:	mov    QWORD PTR [rip+0xbff4],0x0        # 413500 <__bss_start@@Base+0x398>
  40750c:	mov    QWORD PTR [rip+0xbfe1],0x0        # 4134f8 <__bss_start@@Base+0x390>
  407517:	mov    QWORD PTR [rip+0xbfce],0x0        # 4134f0 <__bss_start@@Base+0x388>
  407522:	mov    QWORD PTR [rip+0xc3bb],0x0        # 4138e8 <__bss_start@@Base+0x780>
  40752d:	mov    QWORD PTR [rip+0xc3a8],0x0        # 4138e0 <__bss_start@@Base+0x778>
  407538:	mov    QWORD PTR [rip+0xc395],0x0        # 4138d8 <__bss_start@@Base+0x770>
  407543:	mov    QWORD PTR [rip+0xc382],0x0        # 4138d0 <__bss_start@@Base+0x768>
  40754e:	mov    QWORD PTR [rip+0xc36f],0x0        # 4138c8 <__bss_start@@Base+0x760>
  407559:	mov    QWORD PTR [rip+0xc35c],0x0        # 4138c0 <__bss_start@@Base+0x758>
  407564:	mov    QWORD PTR [rip+0xc349],0x0        # 4138b8 <__bss_start@@Base+0x750>
  40756f:	mov    QWORD PTR [rip+0xc336],0x0        # 4138b0 <__bss_start@@Base+0x748>
  40757a:	mov    QWORD PTR [rip+0xc323],0x0        # 4138a8 <__bss_start@@Base+0x740>
  407585:	mov    QWORD PTR [rip+0xc310],0x0        # 4138a0 <__bss_start@@Base+0x738>
  407590:	mov    QWORD PTR [rip+0xc2fd],0x0        # 413898 <__bss_start@@Base+0x730>
  40759b:	mov    QWORD PTR [rip+0xc2ea],0x0        # 413890 <__bss_start@@Base+0x728>
  4075a6:	mov    QWORD PTR [rip+0xc2d7],0x0        # 413888 <__bss_start@@Base+0x720>
  4075b1:	mov    QWORD PTR [rip+0xc2c4],0x0        # 413880 <__bss_start@@Base+0x718>
  4075bc:	mov    QWORD PTR [rip+0xc2b1],0x0        # 413878 <__bss_start@@Base+0x710>
  4075c7:	mov    QWORD PTR [rip+0xc29e],0x0        # 413870 <__bss_start@@Base+0x708>
  4075d2:	mov    QWORD PTR [rip+0xc28b],0x0        # 413868 <__bss_start@@Base+0x700>
  4075dd:	mov    QWORD PTR [rip+0xc278],0x0        # 413860 <__bss_start@@Base+0x6f8>
  4075e8:	mov    QWORD PTR [rip+0xc265],0x0        # 413858 <__bss_start@@Base+0x6f0>
  4075f3:	mov    QWORD PTR [rip+0xc252],0x0        # 413850 <__bss_start@@Base+0x6e8>
  4075fe:	mov    QWORD PTR [rip+0xc23f],0x0        # 413848 <__bss_start@@Base+0x6e0>
  407609:	mov    QWORD PTR [rip+0xc22c],0x0        # 413840 <__bss_start@@Base+0x6d8>
  407614:	mov    QWORD PTR [rip+0xc219],0x0        # 413838 <__bss_start@@Base+0x6d0>
  40761f:	mov    QWORD PTR [rip+0xc206],0x0        # 413830 <__bss_start@@Base+0x6c8>
  40762a:	mov    QWORD PTR [rip+0xc1f3],0x0        # 413828 <__bss_start@@Base+0x6c0>
  407635:	mov    QWORD PTR [rip+0xc1e0],0x0        # 413820 <__bss_start@@Base+0x6b8>
  407640:	mov    QWORD PTR [rip+0xc1cd],0x0        # 413818 <__bss_start@@Base+0x6b0>
  40764b:	mov    QWORD PTR [rip+0xc1ba],0x0        # 413810 <__bss_start@@Base+0x6a8>
  407656:	mov    QWORD PTR [rip+0xc1a7],0x0        # 413808 <__bss_start@@Base+0x6a0>
  407661:	mov    QWORD PTR [rip+0xc194],0x0        # 413800 <__bss_start@@Base+0x698>
  40766c:	mov    QWORD PTR [rip+0xc181],0x0        # 4137f8 <__bss_start@@Base+0x690>
  407677:	mov    QWORD PTR [rip+0xc16e],0x0        # 4137f0 <__bss_start@@Base+0x688>
  407682:	mov    QWORD PTR [rip+0xc15b],0x0        # 4137e8 <__bss_start@@Base+0x680>
  40768d:	mov    QWORD PTR [rip+0xc148],0x0        # 4137e0 <__bss_start@@Base+0x678>
  407698:	mov    QWORD PTR [rip+0xc135],0x0        # 4137d8 <__bss_start@@Base+0x670>
  4076a3:	mov    QWORD PTR [rip+0xc122],0x0        # 4137d0 <__bss_start@@Base+0x668>
  4076ae:	mov    QWORD PTR [rip+0xc10f],0x0        # 4137c8 <__bss_start@@Base+0x660>
  4076b9:	mov    QWORD PTR [rip+0xc0fc],0x0        # 4137c0 <__bss_start@@Base+0x658>
  4076c4:	mov    QWORD PTR [rip+0xc0e9],0x0        # 4137b8 <__bss_start@@Base+0x650>
  4076cf:	mov    QWORD PTR [rip+0xc0d6],0x0        # 4137b0 <__bss_start@@Base+0x648>
  4076da:	mov    QWORD PTR [rip+0xc0c3],0x0        # 4137a8 <__bss_start@@Base+0x640>
  4076e5:	mov    QWORD PTR [rip+0xc0b0],0x0        # 4137a0 <__bss_start@@Base+0x638>
  4076f0:	mov    QWORD PTR [rip+0xc09d],0x0        # 413798 <__bss_start@@Base+0x630>
  4076fb:	mov    QWORD PTR [rip+0xc08a],0x0        # 413790 <__bss_start@@Base+0x628>
  407706:	mov    QWORD PTR [rip+0xc077],0x0        # 413788 <__bss_start@@Base+0x620>
  407711:	mov    QWORD PTR [rip+0xc064],0x0        # 413780 <__bss_start@@Base+0x618>
  40771c:	mov    QWORD PTR [rip+0xc051],0x0        # 413778 <__bss_start@@Base+0x610>
  407727:	mov    QWORD PTR [rip+0xc03e],0x0        # 413770 <__bss_start@@Base+0x608>
  407732:	mov    QWORD PTR [rip+0xc02b],0x0        # 413768 <__bss_start@@Base+0x600>
  40773d:	mov    QWORD PTR [rip+0xc018],0x0        # 413760 <__bss_start@@Base+0x5f8>
  407748:	mov    QWORD PTR [rip+0xc005],0x0        # 413758 <__bss_start@@Base+0x5f0>
  407753:	mov    QWORD PTR [rip+0xbff2],0x0        # 413750 <__bss_start@@Base+0x5e8>
  40775e:	mov    QWORD PTR [rip+0xbfdf],0x0        # 413748 <__bss_start@@Base+0x5e0>
  407769:	mov    QWORD PTR [rip+0xbfcc],0x0        # 413740 <__bss_start@@Base+0x5d8>
  407774:	mov    QWORD PTR [rip+0xbfb9],0x0        # 413738 <__bss_start@@Base+0x5d0>
  40777f:	mov    QWORD PTR [rip+0xbfa6],0x0        # 413730 <__bss_start@@Base+0x5c8>
  40778a:	mov    QWORD PTR [rip+0xbf93],0x0        # 413728 <__bss_start@@Base+0x5c0>
  407795:	mov    QWORD PTR [rip+0xbf80],0x0        # 413720 <__bss_start@@Base+0x5b8>
  4077a0:	mov    QWORD PTR [rip+0xbf6d],0x0        # 413718 <__bss_start@@Base+0x5b0>
  4077ab:	mov    QWORD PTR [rip+0xbf5a],0x0        # 413710 <__bss_start@@Base+0x5a8>
  4077b6:	mov    QWORD PTR [rip+0xbf47],0x0        # 413708 <__bss_start@@Base+0x5a0>
  4077c1:	mov    QWORD PTR [rip+0xbf34],0x0        # 413700 <__bss_start@@Base+0x598>
  4077cc:	mov    QWORD PTR [rip+0xbf21],0x0        # 4136f8 <__bss_start@@Base+0x590>
  4077d7:	mov    QWORD PTR [rip+0xbf0e],0x0        # 4136f0 <__bss_start@@Base+0x588>
  4077e2:	mov    QWORD PTR [rip+0xc16b],0x0        # 413958 <__bss_start@@Base+0x7f0>
  4077ed:	mov    QWORD PTR [rip+0xc158],0x0        # 413950 <__bss_start@@Base+0x7e8>
  4077f8:	mov    QWORD PTR [rip+0xc145],0x0        # 413948 <__bss_start@@Base+0x7e0>
  407803:	mov    QWORD PTR [rip+0xc132],0x0        # 413940 <__bss_start@@Base+0x7d8>
  40780e:	mov    QWORD PTR [rip+0xc11f],0x0        # 413938 <__bss_start@@Base+0x7d0>
  407819:	mov    QWORD PTR [rip+0xc10c],0x0        # 413930 <__bss_start@@Base+0x7c8>
  407824:	mov    QWORD PTR [rip+0xc0f9],0x0        # 413928 <__bss_start@@Base+0x7c0>
  40782f:	mov    QWORD PTR [rip+0xc0e6],0x0        # 413920 <__bss_start@@Base+0x7b8>
  40783a:	mov    QWORD PTR [rip+0xc0d3],0x0        # 413918 <__bss_start@@Base+0x7b0>
  407845:	mov    QWORD PTR [rip+0xc0c0],0x0        # 413910 <__bss_start@@Base+0x7a8>
  407850:	mov    QWORD PTR [rip+0xc0ad],0x0        # 413908 <__bss_start@@Base+0x7a0>
  40785b:	mov    QWORD PTR [rip+0xc09a],0x0        # 413900 <__bss_start@@Base+0x798>
  407866:	mov    QWORD PTR [rip+0xc087],0x0        # 4138f8 <__bss_start@@Base+0x790>
  407871:	mov    QWORD PTR [rip+0xc074],0x0        # 4138f0 <__bss_start@@Base+0x788>
  40787c:	pop    rax
  40787d:	ret    
  40787e:	xchg   ax,ax
  407880:	push   rax
  407881:	lea    rdi,[rip+0xfffffffffffff7f8]        # 407080 <next@@Base+0x2270>
  407888:	lea    rsi,[rip+0xfffffffffffff8f1]        # 407180 <next@@Base+0x2370>
  40788f:	call   40d850 <__gcov_flush@@Base+0xb0>
  407894:	pop    rax
  407895:	ret    
  407896:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004078a0 <init_ast_base@@Base>:
  4078a0:	push   rbp
  4078a1:	mov    rbp,rsp
  4078a4:	lea    rax,[rip+0xc0b5]        # 413960 <__bss_start@@Base+0x7f8>
  4078ab:	mov    QWORD PTR [rbp-0x20],rdi
  4078af:	mov    DWORD PTR [rbp-0x24],esi
  4078b2:	mov    QWORD PTR [rbp-0x30],rdx
  4078b6:	mov    QWORD PTR [rbp-0x38],rax
  4078ba:	mov    rax,QWORD PTR [rbp-0x38]
  4078be:	mov    rcx,QWORD PTR [rax]
  4078c1:	add    rcx,0x1
  4078c8:	mov    QWORD PTR [rax],rcx
  4078cb:	mov    rax,QWORD PTR [rip+0xc096]        # 413968 <__bss_start@@Base+0x800>
  4078d2:	add    rax,0x1
  4078d8:	mov    QWORD PTR [rip+0xc089],rax        # 413968 <__bss_start@@Base+0x800>
  4078df:	mov    rax,QWORD PTR [rbp-0x20]
  4078e3:	mov    QWORD PTR [rbp-0x8],rax
  4078e7:	mov    edx,DWORD PTR [rbp-0x24]
  4078ea:	mov    DWORD PTR [rbp-0xc],edx
  4078ed:	mov    rcx,QWORD PTR [rbp-0x30]
  4078f1:	mov    QWORD PTR [rbp-0x18],rcx
  4078f5:	mov    esi,DWORD PTR [rbp-0xc]
  4078f8:	mov    rdi,QWORD PTR [rbp-0x8]
  4078fc:	mov    DWORD PTR [rdi],esi
  4078fe:	mov    rdi,QWORD PTR [rbp-0x18]
  407902:	mov    r8,QWORD PTR [rbp-0x8]
  407906:	mov    QWORD PTR [r8+0x8],rdi
  40790a:	pop    rbp
  40790b:	ret    
  40790c:	nop    DWORD PTR [rax+0x0]

0000000000407910 <init_ast_base_single@@Base>:
  407910:	push   rbp
  407911:	mov    rbp,rsp
  407914:	sub    rsp,0x30
  407918:	lea    rax,[rip+0xc051]        # 413970 <__bss_start@@Base+0x808>
  40791f:	mov    QWORD PTR [rbp-0x18],rdi
  407923:	mov    DWORD PTR [rbp-0x1c],esi
  407926:	mov    QWORD PTR [rbp-0x28],rax
  40792a:	mov    rax,QWORD PTR [rbp-0x28]
  40792e:	xor    ecx,ecx
  407930:	mov    edx,ecx
  407932:	mov    rsi,QWORD PTR [rax]
  407935:	add    rsi,0x1
  40793c:	mov    QWORD PTR [rax],rsi
  40793f:	mov    rax,QWORD PTR [rip+0xc032]        # 413978 <__bss_start@@Base+0x810>
  407946:	add    rax,0x1
  40794c:	mov    QWORD PTR [rip+0xc025],rax        # 413978 <__bss_start@@Base+0x810>
  407953:	mov    rax,QWORD PTR [rbp-0x18]
  407957:	mov    QWORD PTR [rbp-0x8],rax
  40795b:	mov    ecx,DWORD PTR [rbp-0x1c]
  40795e:	mov    DWORD PTR [rbp-0xc],ecx
  407961:	mov    rdi,QWORD PTR [rbp-0x8]
  407965:	mov    esi,DWORD PTR [rbp-0xc]
  407968:	call   4078a0 <init_ast_base@@Base>
  40796d:	add    rsp,0x30
  407971:	pop    rbp
  407972:	ret    
  407973:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40797d:	nop    DWORD PTR [rax]

0000000000407980 <init_node_id@@Base>:
  407980:	push   rbp
  407981:	mov    rbp,rsp
  407984:	sub    rsp,0x30
  407988:	lea    rax,[rip+0xbff1]        # 413980 <__bss_start@@Base+0x818>
  40798f:	mov    QWORD PTR [rbp-0x18],rdi
  407993:	mov    QWORD PTR [rbp-0x20],rsi
  407997:	mov    QWORD PTR [rbp-0x28],rax
  40799b:	mov    rax,QWORD PTR [rbp-0x28]
  40799f:	xor    esi,esi
  4079a1:	mov    rcx,QWORD PTR [rax]
  4079a4:	add    rcx,0x1
  4079ab:	mov    QWORD PTR [rax],rcx
  4079ae:	mov    rax,QWORD PTR [rip+0xbfd3]        # 413988 <__bss_start@@Base+0x820>
  4079b5:	add    rax,0x1
  4079bb:	mov    QWORD PTR [rip+0xbfc6],rax        # 413988 <__bss_start@@Base+0x820>
  4079c2:	mov    rax,QWORD PTR [rbp-0x18]
  4079c6:	mov    QWORD PTR [rbp-0x8],rax
  4079ca:	mov    rcx,QWORD PTR [rbp-0x20]
  4079ce:	mov    QWORD PTR [rbp-0x10],rcx
  4079d2:	mov    rdi,QWORD PTR [rbp-0x8]
  4079d6:	call   407910 <init_ast_base_single@@Base>
  4079db:	mov    rax,QWORD PTR [rbp-0x10]
  4079df:	mov    rcx,QWORD PTR [rbp-0x8]
  4079e3:	mov    QWORD PTR [rcx+0x10],rax
  4079e7:	add    rsp,0x30
  4079eb:	pop    rbp
  4079ec:	ret    
  4079ed:	nop    DWORD PTR [rax]

00000000004079f0 <init_node_int@@Base>:
  4079f0:	push   rbp
  4079f1:	mov    rbp,rsp
  4079f4:	sub    rsp,0x30
  4079f8:	lea    rax,[rip+0xbf91]        # 413990 <__bss_start@@Base+0x828>
  4079ff:	mov    QWORD PTR [rbp-0x18],rdi
  407a03:	mov    DWORD PTR [rbp-0x1c],esi
  407a06:	mov    QWORD PTR [rbp-0x28],rax
  407a0a:	mov    rax,QWORD PTR [rbp-0x28]
  407a0e:	mov    rcx,QWORD PTR [rax]
  407a11:	add    rcx,0x1
  407a18:	mov    QWORD PTR [rax],rcx
  407a1b:	mov    rax,QWORD PTR [rip+0xbf76]        # 413998 <__bss_start@@Base+0x830>
  407a22:	add    rax,0x1
  407a28:	mov    QWORD PTR [rip+0xbf69],rax        # 413998 <__bss_start@@Base+0x830>
  407a2f:	mov    rax,QWORD PTR [rbp-0x18]
  407a33:	mov    QWORD PTR [rbp-0x8],rax
  407a37:	mov    edx,DWORD PTR [rbp-0x1c]
  407a3a:	mov    DWORD PTR [rbp-0xc],edx
  407a3d:	mov    rdi,QWORD PTR [rbp-0x8]
  407a41:	mov    esi,0x1
  407a46:	call   407910 <init_ast_base_single@@Base>
  407a4b:	mov    edx,DWORD PTR [rbp-0xc]
  407a4e:	mov    rax,QWORD PTR [rbp-0x8]
  407a52:	mov    DWORD PTR [rax+0x10],edx
  407a55:	add    rsp,0x30
  407a59:	pop    rbp
  407a5a:	ret    
  407a5b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000407a60 <init_node_function@@Base>:
  407a60:	push   rbp
  407a61:	mov    rbp,rsp
  407a64:	sub    rsp,0x40
  407a68:	lea    rax,[rip+0xbf31]        # 4139a0 <__bss_start@@Base+0x838>
  407a6f:	mov    QWORD PTR [rbp-0x20],rdi
  407a73:	mov    QWORD PTR [rbp-0x28],rsi
  407a77:	mov    QWORD PTR [rbp-0x30],rdx
  407a7b:	mov    QWORD PTR [rbp-0x38],rax
  407a7f:	mov    rax,QWORD PTR [rbp-0x38]
  407a83:	mov    rcx,QWORD PTR [rax]
  407a86:	add    rcx,0x1
  407a8d:	mov    QWORD PTR [rax],rcx
  407a90:	mov    rax,QWORD PTR [rip+0xbf11]        # 4139a8 <__bss_start@@Base+0x840>
  407a97:	add    rax,0x1
  407a9d:	mov    QWORD PTR [rip+0xbf04],rax        # 4139a8 <__bss_start@@Base+0x840>
  407aa4:	mov    rax,QWORD PTR [rbp-0x20]
  407aa8:	mov    QWORD PTR [rbp-0x8],rax
  407aac:	mov    rcx,QWORD PTR [rbp-0x28]
  407ab0:	mov    QWORD PTR [rbp-0x10],rcx
  407ab4:	mov    rdx,QWORD PTR [rbp-0x30]
  407ab8:	mov    QWORD PTR [rbp-0x18],rdx
  407abc:	mov    rdi,QWORD PTR [rbp-0x8]
  407ac0:	mov    esi,0x2
  407ac5:	call   407910 <init_ast_base_single@@Base>
  407aca:	mov    rax,QWORD PTR [rbp-0x10]
  407ace:	mov    rcx,QWORD PTR [rbp-0x8]
  407ad2:	mov    QWORD PTR [rcx+0x10],rax
  407ad6:	mov    rax,QWORD PTR [rbp-0x18]
  407ada:	mov    rcx,QWORD PTR [rbp-0x8]
  407ade:	mov    QWORD PTR [rcx+0x18],rax
  407ae2:	add    rsp,0x40
  407ae6:	pop    rbp
  407ae7:	ret    
  407ae8:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000407af0 <init_node_return@@Base>:
  407af0:	push   rbp
  407af1:	mov    rbp,rsp
  407af4:	sub    rsp,0x30
  407af8:	lea    rax,[rip+0xbeb1]        # 4139b0 <__bss_start@@Base+0x848>
  407aff:	mov    QWORD PTR [rbp-0x18],rdi
  407b03:	mov    QWORD PTR [rbp-0x20],rsi
  407b07:	mov    QWORD PTR [rbp-0x28],rax
  407b0b:	mov    rax,QWORD PTR [rbp-0x28]
  407b0f:	mov    rcx,QWORD PTR [rax]
  407b12:	add    rcx,0x1
  407b19:	mov    QWORD PTR [rax],rcx
  407b1c:	mov    rax,QWORD PTR [rip+0xbe95]        # 4139b8 <__bss_start@@Base+0x850>
  407b23:	add    rax,0x1
  407b29:	mov    QWORD PTR [rip+0xbe88],rax        # 4139b8 <__bss_start@@Base+0x850>
  407b30:	mov    rax,QWORD PTR [rbp-0x18]
  407b34:	mov    QWORD PTR [rbp-0x8],rax
  407b38:	mov    rcx,QWORD PTR [rbp-0x20]
  407b3c:	mov    QWORD PTR [rbp-0x10],rcx
  407b40:	mov    rdi,QWORD PTR [rbp-0x8]
  407b44:	mov    esi,0x3
  407b49:	call   407910 <init_ast_base_single@@Base>
  407b4e:	mov    rax,QWORD PTR [rbp-0x10]
  407b52:	mov    rcx,QWORD PTR [rbp-0x8]
  407b56:	mov    QWORD PTR [rcx+0x10],rax
  407b5a:	add    rsp,0x30
  407b5e:	pop    rbp
  407b5f:	ret    

0000000000407b60 <init_node_if@@Base>:
  407b60:	push   rbp
  407b61:	mov    rbp,rsp
  407b64:	sub    rsp,0x50
  407b68:	lea    rax,[rip+0xbe51]        # 4139c0 <__bss_start@@Base+0x858>
  407b6f:	mov    QWORD PTR [rbp-0x28],rdi
  407b73:	mov    QWORD PTR [rbp-0x30],rsi
  407b77:	mov    QWORD PTR [rbp-0x38],rdx
  407b7b:	mov    QWORD PTR [rbp-0x40],rcx
  407b7f:	mov    QWORD PTR [rbp-0x48],rax
  407b83:	mov    rax,QWORD PTR [rbp-0x48]
  407b87:	mov    rcx,QWORD PTR [rax]
  407b8a:	add    rcx,0x1
  407b91:	mov    QWORD PTR [rax],rcx
  407b94:	mov    rax,QWORD PTR [rip+0xbe2d]        # 4139c8 <__bss_start@@Base+0x860>
  407b9b:	add    rax,0x1
  407ba1:	mov    QWORD PTR [rip+0xbe20],rax        # 4139c8 <__bss_start@@Base+0x860>
  407ba8:	mov    rax,QWORD PTR [rbp-0x28]
  407bac:	mov    QWORD PTR [rbp-0x8],rax
  407bb0:	mov    rcx,QWORD PTR [rbp-0x30]
  407bb4:	mov    QWORD PTR [rbp-0x10],rcx
  407bb8:	mov    rdx,QWORD PTR [rbp-0x38]
  407bbc:	mov    QWORD PTR [rbp-0x18],rdx
  407bc0:	mov    rsi,QWORD PTR [rbp-0x40]
  407bc4:	mov    QWORD PTR [rbp-0x20],rsi
  407bc8:	mov    rdi,QWORD PTR [rbp-0x8]
  407bcc:	mov    r8d,0x4
  407bd2:	mov    esi,r8d
  407bd5:	call   407910 <init_ast_base_single@@Base>
  407bda:	mov    rax,QWORD PTR [rbp-0x10]
  407bde:	mov    rcx,QWORD PTR [rbp-0x8]
  407be2:	mov    QWORD PTR [rcx+0x10],rax
  407be6:	mov    rax,QWORD PTR [rbp-0x18]
  407bea:	mov    rcx,QWORD PTR [rbp-0x8]
  407bee:	mov    QWORD PTR [rcx+0x18],rax
  407bf2:	mov    rax,QWORD PTR [rbp-0x20]
  407bf6:	mov    rcx,QWORD PTR [rbp-0x8]
  407bfa:	mov    QWORD PTR [rcx+0x20],rax
  407bfe:	add    rsp,0x50
  407c02:	pop    rbp
  407c03:	ret    
  407c04:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407c0e:	xchg   ax,ax

0000000000407c10 <init_node_boolean_operator@@Base>:
  407c10:	push   rbp
  407c11:	mov    rbp,rsp
  407c14:	sub    rsp,0x50
  407c18:	lea    rax,[rip+0xbdb1]        # 4139d0 <__bss_start@@Base+0x868>
  407c1f:	mov    QWORD PTR [rbp-0x28],rdi
  407c23:	mov    DWORD PTR [rbp-0x2c],esi
  407c26:	mov    QWORD PTR [rbp-0x38],rdx
  407c2a:	mov    QWORD PTR [rbp-0x40],rcx
  407c2e:	mov    QWORD PTR [rbp-0x48],rax
  407c32:	mov    rax,QWORD PTR [rbp-0x48]
  407c36:	xor    esi,esi
  407c38:	mov    rcx,QWORD PTR [rax]
  407c3b:	add    rcx,0x1
  407c42:	mov    QWORD PTR [rax],rcx
  407c45:	mov    rax,QWORD PTR [rip+0xbd8c]        # 4139d8 <__bss_start@@Base+0x870>
  407c4c:	add    rax,0x1
  407c52:	mov    QWORD PTR [rip+0xbd7f],rax        # 4139d8 <__bss_start@@Base+0x870>
  407c59:	mov    rax,QWORD PTR [rbp-0x28]
  407c5d:	mov    QWORD PTR [rbp-0x8],rax
  407c61:	mov    edx,DWORD PTR [rbp-0x2c]
  407c64:	mov    DWORD PTR [rbp-0xc],edx
  407c67:	mov    rcx,QWORD PTR [rbp-0x38]
  407c6b:	mov    QWORD PTR [rbp-0x18],rcx
  407c6f:	mov    rdi,QWORD PTR [rbp-0x40]
  407c73:	mov    QWORD PTR [rbp-0x20],rdi
  407c77:	mov    rdi,QWORD PTR [rbp-0x8]
  407c7b:	call   407910 <init_ast_base_single@@Base>
  407c80:	mov    rax,QWORD PTR [rbp-0x8]
  407c84:	mov    DWORD PTR [rax],0x5
  407c8a:	mov    edx,DWORD PTR [rbp-0xc]
  407c8d:	mov    rax,QWORD PTR [rbp-0x8]
  407c91:	mov    DWORD PTR [rax+0x20],edx
  407c94:	mov    rax,QWORD PTR [rbp-0x18]
  407c98:	mov    rcx,QWORD PTR [rbp-0x8]
  407c9c:	mov    QWORD PTR [rcx+0x10],rax
  407ca0:	mov    rax,QWORD PTR [rbp-0x20]
  407ca4:	mov    rcx,QWORD PTR [rbp-0x8]
  407ca8:	mov    QWORD PTR [rcx+0x18],rax
  407cac:	add    rsp,0x50
  407cb0:	pop    rbp
  407cb1:	ret    
  407cb2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407cbc:	nop    DWORD PTR [rax+0x0]

0000000000407cc0 <free_node@@Base>:
  407cc0:	push   rbp
  407cc1:	mov    rbp,rsp
  407cc4:	push   r14
  407cc6:	push   rbx
  407cc7:	sub    rsp,0xa0
  407cce:	lea    rax,[rip+0xbd0b]        # 4139e0 <__bss_start@@Base+0x878>
  407cd5:	mov    QWORD PTR [rbp-0x20],rdi
  407cd9:	mov    QWORD PTR [rbp-0x28],rax
  407cdd:	mov    rax,QWORD PTR [rbp-0x28]
  407ce1:	mov    rcx,QWORD PTR [rax]
  407ce4:	inc    rcx
  407ce7:	mov    QWORD PTR [rax],rcx
  407cea:	mov    rax,QWORD PTR [rbp-0x20]
  407cee:	mov    QWORD PTR [rbp-0x18],rax
  407cf2:	mov    rcx,QWORD PTR [rbp-0x18]
  407cf6:	mov    edx,DWORD PTR [rcx]
  407cf8:	mov    ecx,edx
  407cfa:	lea    rsi,[rip+0xbd17]        # 413a18 <__bss_start@@Base+0x8b0>
  407d01:	lea    rdi,[rip+0xbd08]        # 413a10 <__bss_start@@Base+0x8a8>
  407d08:	lea    r8,[rip+0xbcf9]        # 413a08 <__bss_start@@Base+0x8a0>
  407d0f:	lea    r9,[rip+0xbcea]        # 413a00 <__bss_start@@Base+0x898>
  407d16:	lea    r10,[rip+0xbcdb]        # 4139f8 <__bss_start@@Base+0x890>
  407d1d:	lea    r11,[rip+0xbccc]        # 4139f0 <__bss_start@@Base+0x888>
  407d24:	lea    rbx,[rip+0xbcbd]        # 4139e8 <__bss_start@@Base+0x880>
  407d2b:	mov    r14,rcx
  407d2e:	sub    r14,0x5
  407d32:	mov    QWORD PTR [rbp-0x30],rcx
  407d36:	mov    QWORD PTR [rbp-0x38],rsi
  407d3a:	mov    QWORD PTR [rbp-0x40],rdi
  407d3e:	mov    QWORD PTR [rbp-0x48],r8
  407d42:	mov    QWORD PTR [rbp-0x50],r9
  407d46:	mov    QWORD PTR [rbp-0x58],r10
  407d4a:	mov    QWORD PTR [rbp-0x60],r11
  407d4e:	mov    QWORD PTR [rbp-0x68],rbx
  407d52:	ja     407ef2 <free_node@@Base+0x232>
  407d58:	lea    rax,[rip+0x6741]        # 40e4a0 <_IO_stdin_used@@Base+0x4a0>
  407d5f:	mov    rcx,QWORD PTR [rbp-0x30]
  407d63:	movsxd rdx,DWORD PTR [rax+rcx*4]
  407d67:	add    rdx,rax
  407d6a:	mov    rax,QWORD PTR [rbp-0x60]
  407d6e:	mov    rsi,QWORD PTR [rbp-0x58]
  407d72:	mov    rdi,QWORD PTR [rbp-0x50]
  407d76:	mov    r8,QWORD PTR [rbp-0x48]
  407d7a:	mov    r9,QWORD PTR [rbp-0x40]
  407d7e:	mov    r10,QWORD PTR [rbp-0x38]
  407d82:	mov    QWORD PTR [rbp-0x70],rax
  407d86:	mov    QWORD PTR [rbp-0x78],rsi
  407d8a:	mov    QWORD PTR [rbp-0x80],rdi
  407d8e:	mov    QWORD PTR [rbp-0x88],r8
  407d95:	mov    QWORD PTR [rbp-0x90],r9
  407d9c:	mov    QWORD PTR [rbp-0x98],r10
  407da3:	jmp    rdx
  407da5:	mov    rax,QWORD PTR [rbp-0x70]
  407da9:	mov    rcx,QWORD PTR [rax]
  407dac:	add    rcx,0x1
  407db3:	mov    QWORD PTR [rax],rcx
  407db6:	mov    rax,QWORD PTR [rbp-0x18]
  407dba:	mov    rdi,rax
  407dbd:	call   407f60 <free_node_id@@Base>
  407dc2:	lea    rax,[rip+0xbc17]        # 4139e0 <__bss_start@@Base+0x878>
  407dc9:	add    rax,0x40
  407dcf:	mov    QWORD PTR [rbp-0xa0],rax
  407dd6:	jmp    407f2b <free_node@@Base+0x26b>
  407ddb:	mov    rax,QWORD PTR [rbp-0x78]
  407ddf:	mov    rcx,QWORD PTR [rax]
  407de2:	add    rcx,0x1
  407de9:	mov    QWORD PTR [rax],rcx
  407dec:	mov    rax,QWORD PTR [rbp-0x18]
  407df0:	mov    rdi,rax
  407df3:	call   408030 <free_node_int@@Base>
  407df8:	lea    rax,[rip+0xbbe1]        # 4139e0 <__bss_start@@Base+0x878>
  407dff:	add    rax,0x48
  407e05:	mov    QWORD PTR [rbp-0xa0],rax
  407e0c:	jmp    407f2b <free_node@@Base+0x26b>
  407e11:	mov    rax,QWORD PTR [rbp-0x80]
  407e15:	mov    rcx,QWORD PTR [rax]
  407e18:	add    rcx,0x1
  407e1f:	mov    QWORD PTR [rax],rcx
  407e22:	mov    rax,QWORD PTR [rbp-0x18]
  407e26:	mov    rdi,rax
  407e29:	call   408100 <free_node_function@@Base>
  407e2e:	lea    rax,[rip+0xbbab]        # 4139e0 <__bss_start@@Base+0x878>
  407e35:	add    rax,0x50
  407e3b:	mov    QWORD PTR [rbp-0xa0],rax
  407e42:	jmp    407f2b <free_node@@Base+0x26b>
  407e47:	mov    rax,QWORD PTR [rbp-0x88]
  407e4e:	mov    rcx,QWORD PTR [rax]
  407e51:	add    rcx,0x1
  407e58:	mov    QWORD PTR [rax],rcx
  407e5b:	mov    rax,QWORD PTR [rbp-0x18]
  407e5f:	mov    rdi,rax
  407e62:	call   4081e0 <free_node_return@@Base>
  407e67:	lea    rax,[rip+0xbb72]        # 4139e0 <__bss_start@@Base+0x878>
  407e6e:	add    rax,0x58
  407e74:	mov    QWORD PTR [rbp-0xa0],rax
  407e7b:	jmp    407f2b <free_node@@Base+0x26b>
  407e80:	mov    rax,QWORD PTR [rbp-0x90]
  407e87:	mov    rcx,QWORD PTR [rax]
  407e8a:	add    rcx,0x1
  407e91:	mov    QWORD PTR [rax],rcx
  407e94:	mov    rax,QWORD PTR [rbp-0x18]
  407e98:	mov    rdi,rax
  407e9b:	call   4082b0 <free_node_if@@Base>
  407ea0:	lea    rax,[rip+0xbb39]        # 4139e0 <__bss_start@@Base+0x878>
  407ea7:	add    rax,0x60
  407ead:	mov    QWORD PTR [rbp-0xa0],rax
  407eb4:	jmp    407f2b <free_node@@Base+0x26b>
  407eb9:	mov    rax,QWORD PTR [rbp-0x98]
  407ec0:	mov    rcx,QWORD PTR [rax]
  407ec3:	add    rcx,0x1
  407eca:	mov    QWORD PTR [rax],rcx
  407ecd:	mov    rax,QWORD PTR [rbp-0x18]
  407ed1:	mov    rdi,rax
  407ed4:	call   4083a0 <free_node_boolean_operator@@Base>
  407ed9:	lea    rax,[rip+0xbb00]        # 4139e0 <__bss_start@@Base+0x878>
  407ee0:	add    rax,0x68
  407ee6:	mov    QWORD PTR [rbp-0xa0],rax
  407eed:	jmp    407f2b <free_node@@Base+0x26b>
  407ef2:	mov    rax,QWORD PTR [rbp-0x68]
  407ef6:	mov    rcx,QWORD PTR [rip+0xb0f3]        # 412ff0 <stderr@GLIBC_2.2.5>
  407efd:	mov    rdx,QWORD PTR [rax]
  407f00:	add    rdx,0x1
  407f07:	mov    QWORD PTR [rax],rdx
  407f0a:	mov    rdi,QWORD PTR [rcx]
  407f0d:	lea    rsi,[rip+0x65a4]        # 40e4b8 <_IO_stdin_used@@Base+0x4b8>
  407f14:	mov    al,0x0
  407f16:	call   403150 <fprintf@plt>
  407f1b:	mov    edi,0x1
  407f20:	mov    DWORD PTR [rbp-0xa4],eax
  407f26:	call   403260 <exit@plt>
  407f2b:	mov    rax,QWORD PTR [rbp-0xa0]
  407f32:	mov    rcx,QWORD PTR [rax]
  407f35:	add    rcx,0x1
  407f3c:	mov    QWORD PTR [rax],rcx
  407f3f:	mov    rax,QWORD PTR [rip+0xbb0a]        # 413a50 <__bss_start@@Base+0x8e8>
  407f46:	add    rax,0x1
  407f4c:	mov    QWORD PTR [rip+0xbafd],rax        # 413a50 <__bss_start@@Base+0x8e8>
  407f53:	add    rsp,0xa0
  407f5a:	pop    rbx
  407f5b:	pop    r14
  407f5d:	pop    rbp
  407f5e:	ret    
  407f5f:	nop

0000000000407f60 <free_node_id@@Base>:
  407f60:	push   rbp
  407f61:	mov    rbp,rsp
  407f64:	sub    rsp,0x30
  407f68:	lea    rax,[rip+0xbaf1]        # 413a60 <__bss_start@@Base+0x8f8>
  407f6f:	mov    QWORD PTR [rbp-0x10],rdi
  407f73:	mov    QWORD PTR [rbp-0x18],rax
  407f77:	mov    rax,QWORD PTR [rbp-0x18]
  407f7b:	lea    rcx,[rip+0xbade]        # 413a60 <__bss_start@@Base+0x8f8>
  407f82:	mov    rdx,rcx
  407f85:	add    rdx,0x8
  407f8c:	add    rcx,0x10
  407f93:	mov    rsi,QWORD PTR [rax]
  407f96:	add    rsi,0x1
  407f9d:	mov    QWORD PTR [rax],rsi
  407fa0:	mov    rax,QWORD PTR [rbp-0x10]
  407fa4:	mov    QWORD PTR [rbp-0x8],rax
  407fa8:	mov    rsi,QWORD PTR [rbp-0x8]
  407fac:	cmp    QWORD PTR [rsi+0x8],0x0
  407fb1:	mov    QWORD PTR [rbp-0x20],rdx
  407fb5:	mov    QWORD PTR [rbp-0x28],rcx
  407fb9:	je     407fee <free_node_id@@Base+0x8e>
  407fbf:	mov    rax,QWORD PTR [rbp-0x20]
  407fc3:	mov    rcx,QWORD PTR [rax]
  407fc6:	add    rcx,0x1
  407fcd:	mov    QWORD PTR [rax],rcx
  407fd0:	mov    rax,QWORD PTR [rbp-0x8]
  407fd4:	mov    rdi,QWORD PTR [rax+0x8]
  407fd8:	call   407cc0 <free_node@@Base>
  407fdd:	lea    rax,[rip+0xba7c]        # 413a60 <__bss_start@@Base+0x8f8>
  407fe4:	add    rax,0x18
  407fea:	mov    QWORD PTR [rbp-0x28],rax
  407fee:	mov    rax,QWORD PTR [rbp-0x28]
  407ff2:	mov    rcx,QWORD PTR [rax]
  407ff5:	add    rcx,0x1
  407ffc:	mov    QWORD PTR [rax],rcx
  407fff:	mov    rax,QWORD PTR [rip+0xba7a]        # 413a80 <__bss_start@@Base+0x918>
  408006:	add    rax,0x1
  40800c:	mov    QWORD PTR [rip+0xba6d],rax        # 413a80 <__bss_start@@Base+0x918>
  408013:	mov    rax,QWORD PTR [rbp-0x8]
  408017:	mov    rdi,rax
  40801a:	call   403040 <free@plt>
  40801f:	add    rsp,0x30
  408023:	pop    rbp
  408024:	ret    
  408025:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40802f:	nop

0000000000408030 <free_node_int@@Base>:
  408030:	push   rbp
  408031:	mov    rbp,rsp
  408034:	sub    rsp,0x30
  408038:	lea    rax,[rip+0xba51]        # 413a90 <__bss_start@@Base+0x928>
  40803f:	mov    QWORD PTR [rbp-0x10],rdi
  408043:	mov    QWORD PTR [rbp-0x18],rax
  408047:	mov    rax,QWORD PTR [rbp-0x18]
  40804b:	lea    rcx,[rip+0xba3e]        # 413a90 <__bss_start@@Base+0x928>
  408052:	mov    rdx,rcx
  408055:	add    rdx,0x8
  40805c:	add    rcx,0x10
  408063:	mov    rsi,QWORD PTR [rax]
  408066:	add    rsi,0x1
  40806d:	mov    QWORD PTR [rax],rsi
  408070:	mov    rax,QWORD PTR [rbp-0x10]
  408074:	mov    QWORD PTR [rbp-0x8],rax
  408078:	mov    rsi,QWORD PTR [rbp-0x8]
  40807c:	cmp    QWORD PTR [rsi+0x8],0x0
  408081:	mov    QWORD PTR [rbp-0x20],rdx
  408085:	mov    QWORD PTR [rbp-0x28],rcx
  408089:	je     4080be <free_node_int@@Base+0x8e>
  40808f:	mov    rax,QWORD PTR [rbp-0x20]
  408093:	mov    rcx,QWORD PTR [rax]
  408096:	add    rcx,0x1
  40809d:	mov    QWORD PTR [rax],rcx
  4080a0:	mov    rax,QWORD PTR [rbp-0x8]
  4080a4:	mov    rdi,QWORD PTR [rax+0x8]
  4080a8:	call   407cc0 <free_node@@Base>
  4080ad:	lea    rax,[rip+0xb9dc]        # 413a90 <__bss_start@@Base+0x928>
  4080b4:	add    rax,0x18
  4080ba:	mov    QWORD PTR [rbp-0x28],rax
  4080be:	mov    rax,QWORD PTR [rbp-0x28]
  4080c2:	mov    rcx,QWORD PTR [rax]
  4080c5:	add    rcx,0x1
  4080cc:	mov    QWORD PTR [rax],rcx
  4080cf:	mov    rax,QWORD PTR [rip+0xb9da]        # 413ab0 <__bss_start@@Base+0x948>
  4080d6:	add    rax,0x1
  4080dc:	mov    QWORD PTR [rip+0xb9cd],rax        # 413ab0 <__bss_start@@Base+0x948>
  4080e3:	mov    rax,QWORD PTR [rbp-0x8]
  4080e7:	mov    rdi,rax
  4080ea:	call   403040 <free@plt>
  4080ef:	add    rsp,0x30
  4080f3:	pop    rbp
  4080f4:	ret    
  4080f5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4080ff:	nop

0000000000408100 <free_node_function@@Base>:
  408100:	push   rbp
  408101:	mov    rbp,rsp
  408104:	sub    rsp,0x30
  408108:	lea    rax,[rip+0xb9b1]        # 413ac0 <__bss_start@@Base+0x958>
  40810f:	mov    QWORD PTR [rbp-0x10],rdi
  408113:	mov    QWORD PTR [rbp-0x18],rax
  408117:	mov    rax,QWORD PTR [rbp-0x18]
  40811b:	lea    rcx,[rip+0xb99e]        # 413ac0 <__bss_start@@Base+0x958>
  408122:	mov    rdx,rcx
  408125:	add    rdx,0x8
  40812c:	add    rcx,0x10
  408133:	mov    rsi,QWORD PTR [rax]
  408136:	add    rsi,0x1
  40813d:	mov    QWORD PTR [rax],rsi
  408140:	mov    rax,QWORD PTR [rbp-0x10]
  408144:	mov    QWORD PTR [rbp-0x8],rax
  408148:	mov    rsi,QWORD PTR [rbp-0x8]
  40814c:	cmp    QWORD PTR [rsi+0x8],0x0
  408151:	mov    QWORD PTR [rbp-0x20],rdx
  408155:	mov    QWORD PTR [rbp-0x28],rcx
  408159:	je     40818e <free_node_function@@Base+0x8e>
  40815f:	mov    rax,QWORD PTR [rbp-0x20]
  408163:	mov    rcx,QWORD PTR [rax]
  408166:	add    rcx,0x1
  40816d:	mov    QWORD PTR [rax],rcx
  408170:	mov    rax,QWORD PTR [rbp-0x8]
  408174:	mov    rdi,QWORD PTR [rax+0x8]
  408178:	call   407cc0 <free_node@@Base>
  40817d:	lea    rax,[rip+0xb93c]        # 413ac0 <__bss_start@@Base+0x958>
  408184:	add    rax,0x18
  40818a:	mov    QWORD PTR [rbp-0x28],rax
  40818e:	mov    rax,QWORD PTR [rbp-0x28]
  408192:	mov    rcx,QWORD PTR [rax]
  408195:	add    rcx,0x1
  40819c:	mov    QWORD PTR [rax],rcx
  40819f:	mov    rax,QWORD PTR [rip+0xb93a]        # 413ae0 <__bss_start@@Base+0x978>
  4081a6:	add    rax,0x1
  4081ac:	mov    QWORD PTR [rip+0xb92d],rax        # 413ae0 <__bss_start@@Base+0x978>
  4081b3:	mov    rax,QWORD PTR [rbp-0x8]
  4081b7:	mov    rdi,QWORD PTR [rax+0x10]
  4081bb:	call   403040 <free@plt>
  4081c0:	mov    rax,QWORD PTR [rbp-0x8]
  4081c4:	mov    rdi,rax
  4081c7:	call   403040 <free@plt>
  4081cc:	add    rsp,0x30
  4081d0:	pop    rbp
  4081d1:	ret    
  4081d2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4081dc:	nop    DWORD PTR [rax+0x0]

00000000004081e0 <free_node_return@@Base>:
  4081e0:	push   rbp
  4081e1:	mov    rbp,rsp
  4081e4:	sub    rsp,0x30
  4081e8:	lea    rax,[rip+0xb901]        # 413af0 <__bss_start@@Base+0x988>
  4081ef:	mov    QWORD PTR [rbp-0x10],rdi
  4081f3:	mov    QWORD PTR [rbp-0x18],rax
  4081f7:	mov    rax,QWORD PTR [rbp-0x18]
  4081fb:	lea    rcx,[rip+0xb8ee]        # 413af0 <__bss_start@@Base+0x988>
  408202:	mov    rdx,rcx
  408205:	add    rdx,0x8
  40820c:	add    rcx,0x10
  408213:	mov    rsi,QWORD PTR [rax]
  408216:	add    rsi,0x1
  40821d:	mov    QWORD PTR [rax],rsi
  408220:	mov    rax,QWORD PTR [rbp-0x10]
  408224:	mov    QWORD PTR [rbp-0x8],rax
  408228:	mov    rsi,QWORD PTR [rbp-0x8]
  40822c:	cmp    QWORD PTR [rsi+0x8],0x0
  408231:	mov    QWORD PTR [rbp-0x20],rdx
  408235:	mov    QWORD PTR [rbp-0x28],rcx
  408239:	je     40826e <free_node_return@@Base+0x8e>
  40823f:	mov    rax,QWORD PTR [rbp-0x20]
  408243:	mov    rcx,QWORD PTR [rax]
  408246:	add    rcx,0x1
  40824d:	mov    QWORD PTR [rax],rcx
  408250:	mov    rax,QWORD PTR [rbp-0x8]
  408254:	mov    rdi,QWORD PTR [rax+0x8]
  408258:	call   407cc0 <free_node@@Base>
  40825d:	lea    rax,[rip+0xb88c]        # 413af0 <__bss_start@@Base+0x988>
  408264:	add    rax,0x18
  40826a:	mov    QWORD PTR [rbp-0x28],rax
  40826e:	mov    rax,QWORD PTR [rbp-0x28]
  408272:	mov    rcx,QWORD PTR [rax]
  408275:	add    rcx,0x1
  40827c:	mov    QWORD PTR [rax],rcx
  40827f:	mov    rax,QWORD PTR [rip+0xb88a]        # 413b10 <__bss_start@@Base+0x9a8>
  408286:	add    rax,0x1
  40828c:	mov    QWORD PTR [rip+0xb87d],rax        # 413b10 <__bss_start@@Base+0x9a8>
  408293:	mov    rax,QWORD PTR [rbp-0x8]
  408297:	mov    rdi,rax
  40829a:	call   403040 <free@plt>
  40829f:	add    rsp,0x30
  4082a3:	pop    rbp
  4082a4:	ret    
  4082a5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4082af:	nop

00000000004082b0 <free_node_if@@Base>:
  4082b0:	push   rbp
  4082b1:	mov    rbp,rsp
  4082b4:	sub    rsp,0x30
  4082b8:	lea    rax,[rip+0xb861]        # 413b20 <__bss_start@@Base+0x9b8>
  4082bf:	mov    QWORD PTR [rbp-0x10],rdi
  4082c3:	mov    QWORD PTR [rbp-0x18],rax
  4082c7:	mov    rax,QWORD PTR [rbp-0x18]
  4082cb:	lea    rcx,[rip+0xb84e]        # 413b20 <__bss_start@@Base+0x9b8>
  4082d2:	mov    rdx,rcx
  4082d5:	add    rdx,0x8
  4082dc:	add    rcx,0x10
  4082e3:	mov    rsi,QWORD PTR [rax]
  4082e6:	add    rsi,0x1
  4082ed:	mov    QWORD PTR [rax],rsi
  4082f0:	mov    rax,QWORD PTR [rbp-0x10]
  4082f4:	mov    QWORD PTR [rbp-0x8],rax
  4082f8:	mov    rsi,QWORD PTR [rbp-0x8]
  4082fc:	cmp    QWORD PTR [rsi+0x8],0x0
  408301:	mov    QWORD PTR [rbp-0x20],rdx
  408305:	mov    QWORD PTR [rbp-0x28],rcx
  408309:	je     40833e <free_node_if@@Base+0x8e>
  40830f:	mov    rax,QWORD PTR [rbp-0x20]
  408313:	mov    rcx,QWORD PTR [rax]
  408316:	add    rcx,0x1
  40831d:	mov    QWORD PTR [rax],rcx
  408320:	mov    rax,QWORD PTR [rbp-0x8]
  408324:	mov    rdi,QWORD PTR [rax+0x8]
  408328:	call   407cc0 <free_node@@Base>
  40832d:	lea    rax,[rip+0xb7ec]        # 413b20 <__bss_start@@Base+0x9b8>
  408334:	add    rax,0x18
  40833a:	mov    QWORD PTR [rbp-0x28],rax
  40833e:	mov    rax,QWORD PTR [rbp-0x28]
  408342:	mov    rcx,QWORD PTR [rax]
  408345:	add    rcx,0x1
  40834c:	mov    QWORD PTR [rax],rcx
  40834f:	mov    rax,QWORD PTR [rip+0xb7ea]        # 413b40 <__bss_start@@Base+0x9d8>
  408356:	add    rax,0x1
  40835c:	mov    QWORD PTR [rip+0xb7dd],rax        # 413b40 <__bss_start@@Base+0x9d8>
  408363:	mov    rax,QWORD PTR [rbp-0x8]
  408367:	mov    rdi,QWORD PTR [rax+0x10]
  40836b:	call   407cc0 <free_node@@Base>
  408370:	mov    rax,QWORD PTR [rbp-0x8]
  408374:	mov    rdi,QWORD PTR [rax+0x18]
  408378:	call   407cc0 <free_node@@Base>
  40837d:	mov    rax,QWORD PTR [rbp-0x8]
  408381:	mov    rdi,QWORD PTR [rax+0x20]
  408385:	call   407cc0 <free_node@@Base>
  40838a:	mov    rax,QWORD PTR [rbp-0x8]
  40838e:	mov    rdi,rax
  408391:	call   403040 <free@plt>
  408396:	add    rsp,0x30
  40839a:	pop    rbp
  40839b:	ret    
  40839c:	nop    DWORD PTR [rax+0x0]

00000000004083a0 <free_node_boolean_operator@@Base>:
  4083a0:	push   rbp
  4083a1:	mov    rbp,rsp
  4083a4:	sub    rsp,0x30
  4083a8:	lea    rax,[rip+0xb7a1]        # 413b50 <__bss_start@@Base+0x9e8>
  4083af:	mov    QWORD PTR [rbp-0x10],rdi
  4083b3:	mov    QWORD PTR [rbp-0x18],rax
  4083b7:	mov    rax,QWORD PTR [rbp-0x18]
  4083bb:	lea    rcx,[rip+0xb78e]        # 413b50 <__bss_start@@Base+0x9e8>
  4083c2:	mov    rdx,rcx
  4083c5:	add    rdx,0x8
  4083cc:	add    rcx,0x10
  4083d3:	mov    rsi,QWORD PTR [rax]
  4083d6:	add    rsi,0x1
  4083dd:	mov    QWORD PTR [rax],rsi
  4083e0:	mov    rax,QWORD PTR [rbp-0x10]
  4083e4:	mov    QWORD PTR [rbp-0x8],rax
  4083e8:	mov    rsi,QWORD PTR [rbp-0x8]
  4083ec:	cmp    QWORD PTR [rsi+0x8],0x0
  4083f1:	mov    QWORD PTR [rbp-0x20],rdx
  4083f5:	mov    QWORD PTR [rbp-0x28],rcx
  4083f9:	je     40842e <free_node_boolean_operator@@Base+0x8e>
  4083ff:	mov    rax,QWORD PTR [rbp-0x20]
  408403:	mov    rcx,QWORD PTR [rax]
  408406:	add    rcx,0x1
  40840d:	mov    QWORD PTR [rax],rcx
  408410:	mov    rax,QWORD PTR [rbp-0x8]
  408414:	mov    rdi,QWORD PTR [rax+0x8]
  408418:	call   407cc0 <free_node@@Base>
  40841d:	lea    rax,[rip+0xb72c]        # 413b50 <__bss_start@@Base+0x9e8>
  408424:	add    rax,0x18
  40842a:	mov    QWORD PTR [rbp-0x28],rax
  40842e:	mov    rax,QWORD PTR [rbp-0x28]
  408432:	mov    rcx,QWORD PTR [rax]
  408435:	add    rcx,0x1
  40843c:	mov    QWORD PTR [rax],rcx
  40843f:	mov    rax,QWORD PTR [rip+0xb72a]        # 413b70 <__bss_start@@Base+0xa08>
  408446:	add    rax,0x1
  40844c:	mov    QWORD PTR [rip+0xb71d],rax        # 413b70 <__bss_start@@Base+0xa08>
  408453:	mov    rax,QWORD PTR [rbp-0x8]
  408457:	mov    rdi,QWORD PTR [rax+0x10]
  40845b:	call   407cc0 <free_node@@Base>
  408460:	mov    rax,QWORD PTR [rbp-0x8]
  408464:	mov    rdi,QWORD PTR [rax+0x18]
  408468:	call   407cc0 <free_node@@Base>
  40846d:	mov    rax,QWORD PTR [rbp-0x8]
  408471:	mov    rdi,rax
  408474:	call   403040 <free@plt>
  408479:	add    rsp,0x30
  40847d:	pop    rbp
  40847e:	ret    
  40847f:	nop

0000000000408480 <get_boolean_op_value@@Base>:
  408480:	push   rbp
  408481:	mov    rbp,rsp
  408484:	sub    rsp,0x100
  40848b:	lea    rax,[rip+0xb6ee]        # 413b80 <__bss_start@@Base+0xa18>
  408492:	mov    QWORD PTR [rbp-0x20],rdi
  408496:	mov    QWORD PTR [rbp-0x28],rax
  40849a:	mov    rax,QWORD PTR [rbp-0x28]
  40849e:	lea    rcx,[rip+0xb6db]        # 413b80 <__bss_start@@Base+0xa18>
  4084a5:	mov    rdx,rcx
  4084a8:	add    rdx,0x8
  4084af:	add    rcx,0x10
  4084b6:	mov    rsi,QWORD PTR [rax]
  4084b9:	add    rsi,0x1
  4084c0:	mov    QWORD PTR [rax],rsi
  4084c3:	mov    rax,QWORD PTR [rbp-0x20]
  4084c7:	mov    QWORD PTR [rbp-0x10],rax
  4084cb:	mov    rsi,QWORD PTR [rbp-0x10]
  4084cf:	mov    rdi,QWORD PTR [rsi+0x8]
  4084d3:	mov    esi,0x2
  4084d8:	mov    QWORD PTR [rbp-0x30],rdx
  4084dc:	mov    QWORD PTR [rbp-0x38],rcx
  4084e0:	call   403140 <strnlen@plt>
  4084e5:	mov    QWORD PTR [rbp-0x18],rax
  4084e9:	cmp    QWORD PTR [rbp-0x18],0x2
  4084ee:	mov    rax,QWORD PTR [rbp-0x30]
  4084f2:	mov    rcx,QWORD PTR [rbp-0x38]
  4084f6:	mov    QWORD PTR [rbp-0x40],rax
  4084fa:	mov    QWORD PTR [rbp-0x48],rcx
  4084fe:	jne    408875 <get_boolean_op_value@@Base+0x3f5>
  408504:	mov    rax,QWORD PTR [rbp-0x40]
  408508:	mov    rcx,QWORD PTR [rax]
  40850b:	add    rcx,0x1
  408512:	mov    QWORD PTR [rax],rcx
  408515:	mov    rax,QWORD PTR [rbp-0x10]
  408519:	mov    rdi,QWORD PTR [rax+0x8]
  40851d:	lea    rsi,[rip+0x5fb4]        # 40e4d8 <_IO_stdin_used@@Base+0x4d8>
  408524:	mov    edx,0x2
  408529:	call   403070 <strncmp@plt>
  40852e:	lea    rcx,[rip+0xb64b]        # 413b80 <__bss_start@@Base+0xa18>
  408535:	mov    rdx,rcx
  408538:	add    rdx,0x18
  40853f:	add    rcx,0x20
  408546:	cmp    eax,0x0
  408549:	mov    QWORD PTR [rbp-0x50],rdx
  40854d:	mov    QWORD PTR [rbp-0x58],rcx
  408551:	jne    408586 <get_boolean_op_value@@Base+0x106>
  408557:	mov    rax,QWORD PTR [rbp-0x50]
  40855b:	lea    rcx,[rip+0xb61e]        # 413b80 <__bss_start@@Base+0xa18>
  408562:	add    rcx,0x28
  408569:	mov    rdx,QWORD PTR [rax]
  40856c:	add    rdx,0x1
  408573:	mov    QWORD PTR [rax],rdx
  408576:	mov    DWORD PTR [rbp-0x4],0x0
  40857d:	mov    QWORD PTR [rbp-0x60],rcx
  408581:	jmp    408a09 <get_boolean_op_value@@Base+0x589>
  408586:	mov    rax,QWORD PTR [rbp-0x58]
  40858a:	mov    rcx,QWORD PTR [rax]
  40858d:	add    rcx,0x1
  408594:	mov    QWORD PTR [rax],rcx
  408597:	mov    rax,QWORD PTR [rbp-0x10]
  40859b:	mov    rdi,QWORD PTR [rax+0x8]
  40859f:	lea    rsi,[rip+0x5f35]        # 40e4db <_IO_stdin_used@@Base+0x4db>
  4085a6:	mov    edx,0x2
  4085ab:	call   403070 <strncmp@plt>
  4085b0:	lea    rcx,[rip+0xb5c9]        # 413b80 <__bss_start@@Base+0xa18>
  4085b7:	mov    rdx,rcx
  4085ba:	add    rdx,0x30
  4085c1:	add    rcx,0x38
  4085c8:	cmp    eax,0x0
  4085cb:	mov    QWORD PTR [rbp-0x68],rdx
  4085cf:	mov    QWORD PTR [rbp-0x70],rcx
  4085d3:	jne    408608 <get_boolean_op_value@@Base+0x188>
  4085d9:	mov    rax,QWORD PTR [rbp-0x68]
  4085dd:	lea    rcx,[rip+0xb59c]        # 413b80 <__bss_start@@Base+0xa18>
  4085e4:	add    rcx,0x40
  4085eb:	mov    rdx,QWORD PTR [rax]
  4085ee:	add    rdx,0x1
  4085f5:	mov    QWORD PTR [rax],rdx
  4085f8:	mov    DWORD PTR [rbp-0x4],0x1
  4085ff:	mov    QWORD PTR [rbp-0x60],rcx
  408603:	jmp    408a09 <get_boolean_op_value@@Base+0x589>
  408608:	mov    rax,QWORD PTR [rbp-0x70]
  40860c:	mov    rcx,QWORD PTR [rax]
  40860f:	add    rcx,0x1
  408616:	mov    QWORD PTR [rax],rcx
  408619:	mov    rax,QWORD PTR [rbp-0x10]
  40861d:	mov    rdi,QWORD PTR [rax+0x8]
  408621:	lea    rsi,[rip+0x5eb6]        # 40e4de <_IO_stdin_used@@Base+0x4de>
  408628:	mov    edx,0x2
  40862d:	call   403070 <strncmp@plt>
  408632:	lea    rcx,[rip+0xb547]        # 413b80 <__bss_start@@Base+0xa18>
  408639:	mov    rdx,rcx
  40863c:	add    rdx,0x48
  408643:	add    rcx,0x50
  40864a:	cmp    eax,0x0
  40864d:	mov    QWORD PTR [rbp-0x78],rdx
  408651:	mov    QWORD PTR [rbp-0x80],rcx
  408655:	jne    40868a <get_boolean_op_value@@Base+0x20a>
  40865b:	mov    rax,QWORD PTR [rbp-0x78]
  40865f:	lea    rcx,[rip+0xb51a]        # 413b80 <__bss_start@@Base+0xa18>
  408666:	add    rcx,0x58
  40866d:	mov    rdx,QWORD PTR [rax]
  408670:	add    rdx,0x1
  408677:	mov    QWORD PTR [rax],rdx
  40867a:	mov    DWORD PTR [rbp-0x4],0x2
  408681:	mov    QWORD PTR [rbp-0x60],rcx
  408685:	jmp    408a09 <get_boolean_op_value@@Base+0x589>
  40868a:	mov    rax,QWORD PTR [rbp-0x80]
  40868e:	mov    rcx,QWORD PTR [rax]
  408691:	add    rcx,0x1
  408698:	mov    QWORD PTR [rax],rcx
  40869b:	mov    rax,QWORD PTR [rbp-0x10]
  40869f:	mov    rdi,QWORD PTR [rax+0x8]
  4086a3:	lea    rsi,[rip+0x5e37]        # 40e4e1 <_IO_stdin_used@@Base+0x4e1>
  4086aa:	mov    edx,0x2
  4086af:	call   403070 <strncmp@plt>
  4086b4:	lea    rcx,[rip+0xb4c5]        # 413b80 <__bss_start@@Base+0xa18>
  4086bb:	mov    rdx,rcx
  4086be:	add    rdx,0x60
  4086c5:	add    rcx,0x68
  4086cc:	cmp    eax,0x0
  4086cf:	mov    QWORD PTR [rbp-0x88],rdx
  4086d6:	mov    QWORD PTR [rbp-0x90],rcx
  4086dd:	jne    408715 <get_boolean_op_value@@Base+0x295>
  4086e3:	mov    rax,QWORD PTR [rbp-0x88]
  4086ea:	lea    rcx,[rip+0xb48f]        # 413b80 <__bss_start@@Base+0xa18>
  4086f1:	add    rcx,0x70
  4086f8:	mov    rdx,QWORD PTR [rax]
  4086fb:	add    rdx,0x1
  408702:	mov    QWORD PTR [rax],rdx
  408705:	mov    DWORD PTR [rbp-0x4],0x3
  40870c:	mov    QWORD PTR [rbp-0x60],rcx
  408710:	jmp    408a09 <get_boolean_op_value@@Base+0x589>
  408715:	mov    rax,QWORD PTR [rbp-0x90]
  40871c:	mov    rcx,QWORD PTR [rax]
  40871f:	add    rcx,0x1
  408726:	mov    QWORD PTR [rax],rcx
  408729:	mov    rax,QWORD PTR [rbp-0x10]
  40872d:	mov    rdi,QWORD PTR [rax+0x8]
  408731:	lea    rsi,[rip+0x5dac]        # 40e4e4 <_IO_stdin_used@@Base+0x4e4>
  408738:	mov    edx,0x2
  40873d:	call   403070 <strncmp@plt>
  408742:	lea    rcx,[rip+0xb437]        # 413b80 <__bss_start@@Base+0xa18>
  408749:	mov    rdx,rcx
  40874c:	add    rdx,0x78
  408753:	add    rcx,0x80
  40875a:	cmp    eax,0x0
  40875d:	mov    QWORD PTR [rbp-0x98],rdx
  408764:	mov    QWORD PTR [rbp-0xa0],rcx
  40876b:	jne    4087a3 <get_boolean_op_value@@Base+0x323>
  408771:	mov    rax,QWORD PTR [rbp-0x98]
  408778:	lea    rcx,[rip+0xb401]        # 413b80 <__bss_start@@Base+0xa18>
  40877f:	add    rcx,0x88
  408786:	mov    rdx,QWORD PTR [rax]
  408789:	add    rdx,0x1
  408790:	mov    QWORD PTR [rax],rdx
  408793:	mov    DWORD PTR [rbp-0x4],0x4
  40879a:	mov    QWORD PTR [rbp-0x60],rcx
  40879e:	jmp    408a09 <get_boolean_op_value@@Base+0x589>
  4087a3:	mov    rax,QWORD PTR [rbp-0xa0]
  4087aa:	mov    rcx,QWORD PTR [rax]
  4087ad:	add    rcx,0x1
  4087b4:	mov    QWORD PTR [rax],rcx
  4087b7:	mov    rax,QWORD PTR [rbp-0x10]
  4087bb:	mov    rdi,QWORD PTR [rax+0x8]
  4087bf:	lea    rsi,[rip+0x5d21]        # 40e4e7 <_IO_stdin_used@@Base+0x4e7>
  4087c6:	mov    edx,0x2
  4087cb:	call   403070 <strncmp@plt>
  4087d0:	lea    rcx,[rip+0xb3a9]        # 413b80 <__bss_start@@Base+0xa18>
  4087d7:	mov    rdx,rcx
  4087da:	add    rdx,0x90
  4087e1:	add    rcx,0x98
  4087e8:	cmp    eax,0x0
  4087eb:	mov    QWORD PTR [rbp-0xa8],rdx
  4087f2:	mov    QWORD PTR [rbp-0xb0],rcx
  4087f9:	jne    408831 <get_boolean_op_value@@Base+0x3b1>
  4087ff:	mov    rax,QWORD PTR [rbp-0xa8]
  408806:	lea    rcx,[rip+0xb373]        # 413b80 <__bss_start@@Base+0xa18>
  40880d:	add    rcx,0xa0
  408814:	mov    rdx,QWORD PTR [rax]
  408817:	add    rdx,0x1
  40881e:	mov    QWORD PTR [rax],rdx
  408821:	mov    DWORD PTR [rbp-0x4],0x5
  408828:	mov    QWORD PTR [rbp-0x60],rcx
  40882c:	jmp    408a09 <get_boolean_op_value@@Base+0x589>
  408831:	mov    rax,QWORD PTR [rbp-0xb0]
  408838:	mov    rcx,QWORD PTR [rip+0xa7b1]        # 412ff0 <stderr@GLIBC_2.2.5>
  40883f:	mov    rdx,QWORD PTR [rax]
  408842:	add    rdx,0x1
  408849:	mov    QWORD PTR [rax],rdx
  40884c:	mov    rdi,QWORD PTR [rcx]
  40884f:	mov    rax,QWORD PTR [rbp-0x10]
  408853:	mov    rdx,QWORD PTR [rax+0x8]
  408857:	lea    rsi,[rip+0x5c8c]        # 40e4ea <_IO_stdin_used@@Base+0x4ea>
  40885e:	mov    al,0x0
  408860:	call   403150 <fprintf@plt>
  408865:	mov    edi,0x1
  40886a:	mov    DWORD PTR [rbp-0xb4],eax
  408870:	call   403260 <exit@plt>
  408875:	mov    rax,QWORD PTR [rbp-0x48]
  408879:	mov    rcx,QWORD PTR [rax]
  40887c:	inc    rcx
  40887f:	mov    QWORD PTR [rax],rcx
  408882:	mov    rax,QWORD PTR [rbp-0x10]
  408886:	mov    rax,QWORD PTR [rax+0x8]
  40888a:	movsx  edx,BYTE PTR [rax]
  40888d:	lea    rax,[rip+0xb3ac]        # 413c40 <__bss_start@@Base+0xad8>
  408894:	lea    rcx,[rip+0xb39d]        # 413c38 <__bss_start@@Base+0xad0>
  40889b:	lea    rsi,[rip+0xb38e]        # 413c30 <__bss_start@@Base+0xac8>
  4088a2:	lea    rdi,[rip+0xb37f]        # 413c28 <__bss_start@@Base+0xac0>
  4088a9:	mov    r8d,edx
  4088ac:	sub    r8d,0x21
  4088b0:	mov    DWORD PTR [rbp-0xb8],edx
  4088b6:	mov    QWORD PTR [rbp-0xc0],rax
  4088bd:	mov    QWORD PTR [rbp-0xc8],rcx
  4088c4:	mov    QWORD PTR [rbp-0xd0],rdi
  4088cb:	mov    QWORD PTR [rbp-0xd8],rsi
  4088d2:	je     40892f <get_boolean_op_value@@Base+0x4af>
  4088d8:	jmp    4088dd <get_boolean_op_value@@Base+0x45d>
  4088dd:	mov    eax,DWORD PTR [rbp-0xb8]
  4088e3:	sub    eax,0x3c
  4088e6:	mov    rcx,QWORD PTR [rbp-0xc8]
  4088ed:	mov    QWORD PTR [rbp-0xe0],rcx
  4088f4:	je     408961 <get_boolean_op_value@@Base+0x4e1>
  4088fa:	jmp    4088ff <get_boolean_op_value@@Base+0x47f>
  4088ff:	mov    eax,DWORD PTR [rbp-0xb8]
  408905:	sub    eax,0x3e
  408908:	mov    rcx,QWORD PTR [rbp-0xc0]
  40890f:	mov    rdx,QWORD PTR [rbp-0xd0]
  408916:	mov    QWORD PTR [rbp-0xe8],rcx
  40891d:	mov    QWORD PTR [rbp-0xf0],rdx
  408924:	je     408993 <get_boolean_op_value@@Base+0x513>
  40892a:	jmp    4089c5 <get_boolean_op_value@@Base+0x545>
  40892f:	mov    rax,QWORD PTR [rbp-0xd8]
  408936:	lea    rcx,[rip+0xb243]        # 413b80 <__bss_start@@Base+0xa18>
  40893d:	add    rcx,0xc8
  408944:	mov    rdx,QWORD PTR [rax]
  408947:	add    rdx,0x1
  40894e:	mov    QWORD PTR [rax],rdx
  408951:	mov    DWORD PTR [rbp-0x4],0x8
  408958:	mov    QWORD PTR [rbp-0x60],rcx
  40895c:	jmp    408a09 <get_boolean_op_value@@Base+0x589>
  408961:	mov    rax,QWORD PTR [rbp-0xe0]
  408968:	lea    rcx,[rip+0xb211]        # 413b80 <__bss_start@@Base+0xa18>
  40896f:	add    rcx,0xd0
  408976:	mov    rdx,QWORD PTR [rax]
  408979:	add    rdx,0x1
  408980:	mov    QWORD PTR [rax],rdx
  408983:	mov    DWORD PTR [rbp-0x4],0x6
  40898a:	mov    QWORD PTR [rbp-0x60],rcx
  40898e:	jmp    408a09 <get_boolean_op_value@@Base+0x589>
  408993:	mov    rax,QWORD PTR [rbp-0xe8]
  40899a:	lea    rcx,[rip+0xb1df]        # 413b80 <__bss_start@@Base+0xa18>
  4089a1:	add    rcx,0xd8
  4089a8:	mov    rdx,QWORD PTR [rax]
  4089ab:	add    rdx,0x1
  4089b2:	mov    QWORD PTR [rax],rdx
  4089b5:	mov    DWORD PTR [rbp-0x4],0x7
  4089bc:	mov    QWORD PTR [rbp-0x60],rcx
  4089c0:	jmp    408a09 <get_boolean_op_value@@Base+0x589>
  4089c5:	mov    rax,QWORD PTR [rbp-0xf0]
  4089cc:	mov    rcx,QWORD PTR [rip+0xa61d]        # 412ff0 <stderr@GLIBC_2.2.5>
  4089d3:	mov    rdx,QWORD PTR [rax]
  4089d6:	add    rdx,0x1
  4089dd:	mov    QWORD PTR [rax],rdx
  4089e0:	mov    rdi,QWORD PTR [rcx]
  4089e3:	mov    rax,QWORD PTR [rbp-0x10]
  4089e7:	mov    rdx,QWORD PTR [rax+0x8]
  4089eb:	lea    rsi,[rip+0x5af8]        # 40e4ea <_IO_stdin_used@@Base+0x4ea>
  4089f2:	mov    al,0x0
  4089f4:	call   403150 <fprintf@plt>
  4089f9:	mov    edi,0x1
  4089fe:	mov    DWORD PTR [rbp-0xf4],eax
  408a04:	call   403260 <exit@plt>
  408a09:	mov    rax,QWORD PTR [rbp-0x60]
  408a0d:	mov    rcx,QWORD PTR [rax]
  408a10:	add    rcx,0x1
  408a17:	mov    QWORD PTR [rax],rcx
  408a1a:	mov    rax,QWORD PTR [rip+0xb23f]        # 413c60 <__bss_start@@Base+0xaf8>
  408a21:	add    rax,0x1
  408a27:	mov    QWORD PTR [rip+0xb232],rax        # 413c60 <__bss_start@@Base+0xaf8>
  408a2e:	mov    eax,DWORD PTR [rbp-0x4]
  408a31:	add    rsp,0x100
  408a38:	pop    rbp
  408a39:	ret    
  408a3a:	nop    WORD PTR [rax+rax*1+0x0]
  408a40:	sub    rsp,0x38
  408a44:	xor    eax,eax
  408a46:	mov    DWORD PTR [rsp+0x34],eax
  408a4a:	jmp    408a4f <get_boolean_op_value@@Base+0x5cf>
  408a4f:	mov    eax,DWORD PTR [rsp+0x34]
  408a53:	movsxd rcx,eax
  408a56:	imul   rcx,rcx,0x30
  408a5d:	lea    rdx,[rip+0x9e7c]        # 4128e0 <_IO_stdin_used@@Base+0x48e0>
  408a64:	add    rdx,rcx
  408a67:	mov    rdi,QWORD PTR [rdx]
  408a6a:	mov    rsi,QWORD PTR [rdx+0x8]
  408a6e:	mov    r8d,DWORD PTR [rdx+0x10]
  408a72:	mov    QWORD PTR [rsp+0x28],rdx
  408a77:	mov    edx,r8d
  408a7a:	mov    DWORD PTR [rsp+0x24],eax
  408a7e:	call   40c050 <__generate_code_for_binary_boolean_expression@@Base+0x8f0>
  408a83:	xor    eax,eax
  408a85:	mov    rcx,QWORD PTR [rsp+0x28]
  408a8a:	mov    edx,DWORD PTR [rcx+0x18]
  408a8d:	mov    rsi,QWORD PTR [rcx+0x20]
  408a91:	mov    rdi,QWORD PTR [rcx+0x28]
  408a95:	cmp    eax,edx
  408a97:	mov    DWORD PTR [rsp+0x20],edx
  408a9b:	mov    QWORD PTR [rsp+0x18],rsi
  408aa0:	mov    QWORD PTR [rsp+0x10],rdi
  408aa5:	mov    DWORD PTR [rsp+0xc],eax
  408aa9:	jge    408b1d <get_boolean_op_value@@Base+0x69d>
  408aaf:	mov    eax,DWORD PTR [rsp+0xc]
  408ab3:	movsxd rcx,eax
  408ab6:	shl    rcx,0x5
  408aba:	mov    rdx,QWORD PTR [rsp+0x18]
  408abf:	add    rdx,rcx
  408ac2:	mov    edi,DWORD PTR [rdx]
  408ac4:	mov    rsi,QWORD PTR [rdx+0x8]
  408ac8:	mov    r8d,DWORD PTR [rdx+0x10]
  408acc:	mov    r9b,BYTE PTR [rdx+0x14]
  408ad0:	mov    r10d,DWORD PTR [rdx+0x18]
  408ad4:	mov    edx,r8d
  408ad7:	movzx  ecx,r9b
  408adb:	mov    r8d,r10d
  408ade:	mov    DWORD PTR [rsp+0x8],eax
  408ae2:	call   40c4a0 <__generate_code_for_binary_boolean_expression@@Base+0xd40>
  408ae7:	mov    eax,DWORD PTR [rsp+0x8]
  408aeb:	movsxd rsi,eax
  408aee:	shl    rsi,0x4
  408af2:	mov    r11,QWORD PTR [rsp+0x10]
  408af7:	add    r11,rsi
  408afa:	mov    edi,DWORD PTR [r11]
  408afd:	mov    rsi,QWORD PTR [r11+0x8]
  408b01:	call   40c8c0 <__generate_code_for_binary_boolean_expression@@Base+0x1160>
  408b06:	mov    eax,DWORD PTR [rsp+0x8]
  408b0a:	add    eax,0x1
  408b0d:	mov    ecx,DWORD PTR [rsp+0x20]
  408b11:	cmp    eax,ecx
  408b13:	mov    DWORD PTR [rsp+0xc],eax
  408b17:	jl     408aaf <get_boolean_op_value@@Base+0x62f>
  408b1d:	call   40ccd0 <__generate_code_for_binary_boolean_expression@@Base+0x1570>
  408b22:	call   40d470 <__generate_code_for_binary_boolean_expression@@Base+0x1d10>
  408b27:	mov    eax,DWORD PTR [rsp+0x24]
  408b2b:	add    eax,0x1
  408b2e:	cmp    eax,0x1
  408b31:	mov    DWORD PTR [rsp+0x34],eax
  408b35:	jl     408a4f <get_boolean_op_value@@Base+0x5cf>
  408b3b:	add    rsp,0x38
  408b3f:	ret    
  408b40:	push   rax
  408b41:	call   408a40 <get_boolean_op_value@@Base+0x5c0>
  408b46:	mov    QWORD PTR [rip+0xae17],0x0        # 413968 <__bss_start@@Base+0x800>
  408b51:	mov    QWORD PTR [rip+0xae04],0x0        # 413960 <__bss_start@@Base+0x7f8>
  408b5c:	mov    QWORD PTR [rip+0xae11],0x0        # 413978 <__bss_start@@Base+0x810>
  408b67:	mov    QWORD PTR [rip+0xadfe],0x0        # 413970 <__bss_start@@Base+0x808>
  408b72:	mov    QWORD PTR [rip+0xae0b],0x0        # 413988 <__bss_start@@Base+0x820>
  408b7d:	mov    QWORD PTR [rip+0xadf8],0x0        # 413980 <__bss_start@@Base+0x818>
  408b88:	mov    QWORD PTR [rip+0xae05],0x0        # 413998 <__bss_start@@Base+0x830>
  408b93:	mov    QWORD PTR [rip+0xadf2],0x0        # 413990 <__bss_start@@Base+0x828>
  408b9e:	mov    QWORD PTR [rip+0xadff],0x0        # 4139a8 <__bss_start@@Base+0x840>
  408ba9:	mov    QWORD PTR [rip+0xadec],0x0        # 4139a0 <__bss_start@@Base+0x838>
  408bb4:	mov    QWORD PTR [rip+0xadf9],0x0        # 4139b8 <__bss_start@@Base+0x850>
  408bbf:	mov    QWORD PTR [rip+0xade6],0x0        # 4139b0 <__bss_start@@Base+0x848>
  408bca:	mov    QWORD PTR [rip+0xadf3],0x0        # 4139c8 <__bss_start@@Base+0x860>
  408bd5:	mov    QWORD PTR [rip+0xade0],0x0        # 4139c0 <__bss_start@@Base+0x858>
  408be0:	mov    QWORD PTR [rip+0xaded],0x0        # 4139d8 <__bss_start@@Base+0x870>
  408beb:	mov    QWORD PTR [rip+0xadda],0x0        # 4139d0 <__bss_start@@Base+0x868>
  408bf6:	mov    QWORD PTR [rip+0xae4f],0x0        # 413a50 <__bss_start@@Base+0x8e8>
  408c01:	mov    QWORD PTR [rip+0xae3c],0x0        # 413a48 <__bss_start@@Base+0x8e0>
  408c0c:	mov    QWORD PTR [rip+0xae29],0x0        # 413a40 <__bss_start@@Base+0x8d8>
  408c17:	mov    QWORD PTR [rip+0xae16],0x0        # 413a38 <__bss_start@@Base+0x8d0>
  408c22:	mov    QWORD PTR [rip+0xae03],0x0        # 413a30 <__bss_start@@Base+0x8c8>
  408c2d:	mov    QWORD PTR [rip+0xadf0],0x0        # 413a28 <__bss_start@@Base+0x8c0>
  408c38:	mov    QWORD PTR [rip+0xaddd],0x0        # 413a20 <__bss_start@@Base+0x8b8>
  408c43:	mov    QWORD PTR [rip+0xadca],0x0        # 413a18 <__bss_start@@Base+0x8b0>
  408c4e:	mov    QWORD PTR [rip+0xadb7],0x0        # 413a10 <__bss_start@@Base+0x8a8>
  408c59:	mov    QWORD PTR [rip+0xada4],0x0        # 413a08 <__bss_start@@Base+0x8a0>
  408c64:	mov    QWORD PTR [rip+0xad91],0x0        # 413a00 <__bss_start@@Base+0x898>
  408c6f:	mov    QWORD PTR [rip+0xad7e],0x0        # 4139f8 <__bss_start@@Base+0x890>
  408c7a:	mov    QWORD PTR [rip+0xad6b],0x0        # 4139f0 <__bss_start@@Base+0x888>
  408c85:	mov    QWORD PTR [rip+0xad58],0x0        # 4139e8 <__bss_start@@Base+0x880>
  408c90:	mov    QWORD PTR [rip+0xad45],0x0        # 4139e0 <__bss_start@@Base+0x878>
  408c9b:	mov    QWORD PTR [rip+0xadda],0x0        # 413a80 <__bss_start@@Base+0x918>
  408ca6:	mov    QWORD PTR [rip+0xadc7],0x0        # 413a78 <__bss_start@@Base+0x910>
  408cb1:	mov    QWORD PTR [rip+0xadb4],0x0        # 413a70 <__bss_start@@Base+0x908>
  408cbc:	mov    QWORD PTR [rip+0xada1],0x0        # 413a68 <__bss_start@@Base+0x900>
  408cc7:	mov    QWORD PTR [rip+0xad8e],0x0        # 413a60 <__bss_start@@Base+0x8f8>
  408cd2:	mov    QWORD PTR [rip+0xadd3],0x0        # 413ab0 <__bss_start@@Base+0x948>
  408cdd:	mov    QWORD PTR [rip+0xadc0],0x0        # 413aa8 <__bss_start@@Base+0x940>
  408ce8:	mov    QWORD PTR [rip+0xadad],0x0        # 413aa0 <__bss_start@@Base+0x938>
  408cf3:	mov    QWORD PTR [rip+0xad9a],0x0        # 413a98 <__bss_start@@Base+0x930>
  408cfe:	mov    QWORD PTR [rip+0xad87],0x0        # 413a90 <__bss_start@@Base+0x928>
  408d09:	mov    QWORD PTR [rip+0xadcc],0x0        # 413ae0 <__bss_start@@Base+0x978>
  408d14:	mov    QWORD PTR [rip+0xadb9],0x0        # 413ad8 <__bss_start@@Base+0x970>
  408d1f:	mov    QWORD PTR [rip+0xada6],0x0        # 413ad0 <__bss_start@@Base+0x968>
  408d2a:	mov    QWORD PTR [rip+0xad93],0x0        # 413ac8 <__bss_start@@Base+0x960>
  408d35:	mov    QWORD PTR [rip+0xad80],0x0        # 413ac0 <__bss_start@@Base+0x958>
  408d40:	mov    QWORD PTR [rip+0xadc5],0x0        # 413b10 <__bss_start@@Base+0x9a8>
  408d4b:	mov    QWORD PTR [rip+0xadb2],0x0        # 413b08 <__bss_start@@Base+0x9a0>
  408d56:	mov    QWORD PTR [rip+0xad9f],0x0        # 413b00 <__bss_start@@Base+0x998>
  408d61:	mov    QWORD PTR [rip+0xad8c],0x0        # 413af8 <__bss_start@@Base+0x990>
  408d6c:	mov    QWORD PTR [rip+0xad79],0x0        # 413af0 <__bss_start@@Base+0x988>
  408d77:	mov    QWORD PTR [rip+0xadbe],0x0        # 413b40 <__bss_start@@Base+0x9d8>
  408d82:	mov    QWORD PTR [rip+0xadab],0x0        # 413b38 <__bss_start@@Base+0x9d0>
  408d8d:	mov    QWORD PTR [rip+0xad98],0x0        # 413b30 <__bss_start@@Base+0x9c8>
  408d98:	mov    QWORD PTR [rip+0xad85],0x0        # 413b28 <__bss_start@@Base+0x9c0>
  408da3:	mov    QWORD PTR [rip+0xad72],0x0        # 413b20 <__bss_start@@Base+0x9b8>
  408dae:	mov    QWORD PTR [rip+0xadb7],0x0        # 413b70 <__bss_start@@Base+0xa08>
  408db9:	mov    QWORD PTR [rip+0xada4],0x0        # 413b68 <__bss_start@@Base+0xa00>
  408dc4:	mov    QWORD PTR [rip+0xad91],0x0        # 413b60 <__bss_start@@Base+0x9f8>
  408dcf:	mov    QWORD PTR [rip+0xad7e],0x0        # 413b58 <__bss_start@@Base+0x9f0>
  408dda:	mov    QWORD PTR [rip+0xad6b],0x0        # 413b50 <__bss_start@@Base+0x9e8>
  408de5:	mov    QWORD PTR [rip+0xae70],0x0        # 413c60 <__bss_start@@Base+0xaf8>
  408df0:	mov    QWORD PTR [rip+0xae5d],0x0        # 413c58 <__bss_start@@Base+0xaf0>
  408dfb:	mov    QWORD PTR [rip+0xae4a],0x0        # 413c50 <__bss_start@@Base+0xae8>
  408e06:	mov    QWORD PTR [rip+0xae37],0x0        # 413c48 <__bss_start@@Base+0xae0>
  408e11:	mov    QWORD PTR [rip+0xae24],0x0        # 413c40 <__bss_start@@Base+0xad8>
  408e1c:	mov    QWORD PTR [rip+0xae11],0x0        # 413c38 <__bss_start@@Base+0xad0>
  408e27:	mov    QWORD PTR [rip+0xadfe],0x0        # 413c30 <__bss_start@@Base+0xac8>
  408e32:	mov    QWORD PTR [rip+0xadeb],0x0        # 413c28 <__bss_start@@Base+0xac0>
  408e3d:	mov    QWORD PTR [rip+0xadd8],0x0        # 413c20 <__bss_start@@Base+0xab8>
  408e48:	mov    QWORD PTR [rip+0xadc5],0x0        # 413c18 <__bss_start@@Base+0xab0>
  408e53:	mov    QWORD PTR [rip+0xadb2],0x0        # 413c10 <__bss_start@@Base+0xaa8>
  408e5e:	mov    QWORD PTR [rip+0xad9f],0x0        # 413c08 <__bss_start@@Base+0xaa0>
  408e69:	mov    QWORD PTR [rip+0xad8c],0x0        # 413c00 <__bss_start@@Base+0xa98>
  408e74:	mov    QWORD PTR [rip+0xad79],0x0        # 413bf8 <__bss_start@@Base+0xa90>
  408e7f:	mov    QWORD PTR [rip+0xad66],0x0        # 413bf0 <__bss_start@@Base+0xa88>
  408e8a:	mov    QWORD PTR [rip+0xad53],0x0        # 413be8 <__bss_start@@Base+0xa80>
  408e95:	mov    QWORD PTR [rip+0xad40],0x0        # 413be0 <__bss_start@@Base+0xa78>
  408ea0:	mov    QWORD PTR [rip+0xad2d],0x0        # 413bd8 <__bss_start@@Base+0xa70>
  408eab:	mov    QWORD PTR [rip+0xad1a],0x0        # 413bd0 <__bss_start@@Base+0xa68>
  408eb6:	mov    QWORD PTR [rip+0xad07],0x0        # 413bc8 <__bss_start@@Base+0xa60>
  408ec1:	mov    QWORD PTR [rip+0xacf4],0x0        # 413bc0 <__bss_start@@Base+0xa58>
  408ecc:	mov    QWORD PTR [rip+0xace1],0x0        # 413bb8 <__bss_start@@Base+0xa50>
  408ed7:	mov    QWORD PTR [rip+0xacce],0x0        # 413bb0 <__bss_start@@Base+0xa48>
  408ee2:	mov    QWORD PTR [rip+0xacbb],0x0        # 413ba8 <__bss_start@@Base+0xa40>
  408eed:	mov    QWORD PTR [rip+0xaca8],0x0        # 413ba0 <__bss_start@@Base+0xa38>
  408ef8:	mov    QWORD PTR [rip+0xac95],0x0        # 413b98 <__bss_start@@Base+0xa30>
  408f03:	mov    QWORD PTR [rip+0xac82],0x0        # 413b90 <__bss_start@@Base+0xa28>
  408f0e:	mov    QWORD PTR [rip+0xac6f],0x0        # 413b88 <__bss_start@@Base+0xa20>
  408f19:	mov    QWORD PTR [rip+0xac5c],0x0        # 413b80 <__bss_start@@Base+0xa18>
  408f24:	pop    rax
  408f25:	ret    
  408f26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408f30:	push   rax
  408f31:	lea    rdi,[rip+0xfffffffffffffb08]        # 408a40 <get_boolean_op_value@@Base+0x5c0>
  408f38:	lea    rsi,[rip+0xfffffffffffffc01]        # 408b40 <get_boolean_op_value@@Base+0x6c0>
  408f3f:	call   40d850 <__gcov_flush@@Base+0xb0>
  408f44:	pop    rax
  408f45:	ret    
  408f46:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000408f50 <init_grammar@@Base>:
  408f50:	push   rbp
  408f51:	mov    rbp,rsp
  408f54:	lea    rax,[rip+0xad15]        # 413c70 <__bss_start@@Base+0xb08>
  408f5b:	mov    QWORD PTR [rbp-0x18],rdi
  408f5f:	mov    QWORD PTR [rbp-0x20],rsi
  408f63:	mov    QWORD PTR [rbp-0x28],rax
  408f67:	mov    rax,QWORD PTR [rbp-0x28]
  408f6b:	mov    rcx,QWORD PTR [rax]
  408f6e:	add    rcx,0x1
  408f75:	mov    QWORD PTR [rax],rcx
  408f78:	mov    rax,QWORD PTR [rip+0xacf9]        # 413c78 <__bss_start@@Base+0xb10>
  408f7f:	add    rax,0x1
  408f85:	mov    QWORD PTR [rip+0xacec],rax        # 413c78 <__bss_start@@Base+0xb10>
  408f8c:	mov    rax,QWORD PTR [rbp-0x18]
  408f90:	mov    QWORD PTR [rbp-0x8],rax
  408f94:	mov    rcx,QWORD PTR [rbp-0x20]
  408f98:	mov    QWORD PTR [rbp-0x10],rcx
  408f9c:	mov    rdx,QWORD PTR [rbp-0x10]
  408fa0:	mov    rsi,QWORD PTR [rbp-0x8]
  408fa4:	mov    QWORD PTR [rsi],rdx
  408fa7:	pop    rbp
  408fa8:	ret    
  408fa9:	nop    DWORD PTR [rax+0x0]

0000000000408fb0 <destroy_grammar@@Base>:
  408fb0:	push   rbp
  408fb1:	mov    rbp,rsp
  408fb4:	lea    rax,[rip+0xacc5]        # 413c80 <__bss_start@@Base+0xb18>
  408fbb:	mov    QWORD PTR [rbp-0x10],rdi
  408fbf:	mov    QWORD PTR [rbp-0x18],rax
  408fc3:	mov    rax,QWORD PTR [rbp-0x18]
  408fc7:	mov    rcx,QWORD PTR [rax]
  408fca:	add    rcx,0x1
  408fd1:	mov    QWORD PTR [rax],rcx
  408fd4:	mov    rax,QWORD PTR [rip+0xacad]        # 413c88 <__bss_start@@Base+0xb20>
  408fdb:	add    rax,0x1
  408fe1:	mov    QWORD PTR [rip+0xaca0],rax        # 413c88 <__bss_start@@Base+0xb20>
  408fe8:	mov    rax,QWORD PTR [rbp-0x10]
  408fec:	mov    QWORD PTR [rbp-0x8],rax
  408ff0:	pop    rbp
  408ff1:	ret    
  408ff2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408ffc:	nop    DWORD PTR [rax+0x0]

0000000000409000 <build_ast@@Base>:
  409000:	push   rbp
  409001:	mov    rbp,rsp
  409004:	sub    rsp,0x20
  409008:	lea    rax,[rip+0xac81]        # 413c90 <__bss_start@@Base+0xb28>
  40900f:	mov    QWORD PTR [rbp-0x10],rdi
  409013:	mov    QWORD PTR [rbp-0x18],rax
  409017:	mov    rax,QWORD PTR [rbp-0x18]
  40901b:	mov    rcx,QWORD PTR [rax]
  40901e:	add    rcx,0x1
  409025:	mov    QWORD PTR [rax],rcx
  409028:	mov    rax,QWORD PTR [rip+0xac69]        # 413c98 <__bss_start@@Base+0xb30>
  40902f:	add    rax,0x1
  409035:	mov    QWORD PTR [rip+0xac5c],rax        # 413c98 <__bss_start@@Base+0xb30>
  40903c:	mov    rax,QWORD PTR [rbp-0x10]
  409040:	mov    QWORD PTR [rbp-0x8],rax
  409044:	mov    rdi,QWORD PTR [rbp-0x8]
  409048:	call   409060 <read_function_ast_node@@Base>
  40904d:	add    rsp,0x20
  409051:	pop    rbp
  409052:	ret    
  409053:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40905d:	nop    DWORD PTR [rax]

0000000000409060 <read_function_ast_node@@Base>:
  409060:	push   rbp
  409061:	mov    rbp,rsp
  409064:	sub    rsp,0x90
  40906b:	lea    rax,[rip+0xac2e]        # 413ca0 <__bss_start@@Base+0xb38>
  409072:	mov    QWORD PTR [rbp-0x38],rdi
  409076:	mov    QWORD PTR [rbp-0x40],rax
  40907a:	mov    rax,QWORD PTR [rbp-0x40]
  40907e:	mov    rcx,QWORD PTR [rax]
  409081:	add    rcx,0x1
  409088:	mov    QWORD PTR [rax],rcx
  40908b:	mov    rax,QWORD PTR [rbp-0x38]
  40908f:	mov    QWORD PTR [rbp-0x10],rax
  409093:	mov    QWORD PTR [rbp-0x18],0x0
  40909b:	mov    QWORD PTR [rbp-0x20],0x0
  4090a3:	mov    QWORD PTR [rbp-0x28],0x0
  4090ab:	mov    QWORD PTR [rbp-0x30],0x0
  4090b3:	mov    rcx,QWORD PTR [rbp-0x10]
  4090b7:	mov    rdi,QWORD PTR [rcx]
  4090ba:	call   404e10 <next@@Base>
  4090bf:	lea    rcx,[rip+0xabda]        # 413ca0 <__bss_start@@Base+0xb38>
  4090c6:	mov    rdx,rcx
  4090c9:	add    rdx,0x8
  4090d0:	add    rcx,0x10
  4090d7:	mov    QWORD PTR [rbp-0x28],rax
  4090db:	mov    rax,QWORD PTR [rbp-0x28]
  4090df:	cmp    DWORD PTR [rax],0x0
  4090e2:	mov    QWORD PTR [rbp-0x48],rdx
  4090e6:	mov    QWORD PTR [rbp-0x50],rcx
  4090ea:	je     409120 <read_function_ast_node@@Base+0xc0>
  4090f0:	mov    rax,QWORD PTR [rbp-0x48]
  4090f4:	lea    rcx,[rip+0xaba5]        # 413ca0 <__bss_start@@Base+0xb38>
  4090fb:	add    rcx,0x18
  409102:	mov    rdx,QWORD PTR [rax]
  409105:	add    rdx,0x1
  40910c:	mov    QWORD PTR [rax],rdx
  40910f:	mov    QWORD PTR [rbp-0x8],0x0
  409117:	mov    QWORD PTR [rbp-0x58],rcx
  40911b:	jmp    409332 <read_function_ast_node@@Base+0x2d2>
  409120:	mov    rax,QWORD PTR [rbp-0x50]
  409124:	mov    rcx,QWORD PTR [rax]
  409127:	add    rcx,0x1
  40912e:	mov    QWORD PTR [rax],rcx
  409131:	mov    rax,QWORD PTR [rbp-0x28]
  409135:	mov    rdi,rax
  409138:	call   404100 <free_token_int_type@@Base>
  40913d:	mov    rax,QWORD PTR [rbp-0x10]
  409141:	mov    rdi,QWORD PTR [rax]
  409144:	call   404e10 <next@@Base>
  409149:	lea    rcx,[rip+0xab50]        # 413ca0 <__bss_start@@Base+0xb38>
  409150:	mov    rdx,rcx
  409153:	add    rdx,0x20
  40915a:	add    rcx,0x28
  409161:	mov    QWORD PTR [rbp-0x28],rax
  409165:	mov    rax,QWORD PTR [rbp-0x28]
  409169:	cmp    DWORD PTR [rax],0x2
  40916c:	mov    QWORD PTR [rbp-0x60],rdx
  409170:	mov    QWORD PTR [rbp-0x68],rcx
  409174:	je     4091aa <read_function_ast_node@@Base+0x14a>
  40917a:	mov    rax,QWORD PTR [rbp-0x60]
  40917e:	lea    rcx,[rip+0xab1b]        # 413ca0 <__bss_start@@Base+0xb38>
  409185:	add    rcx,0x30
  40918c:	mov    rdx,QWORD PTR [rax]
  40918f:	add    rdx,0x1
  409196:	mov    QWORD PTR [rax],rdx
  409199:	mov    QWORD PTR [rbp-0x8],0x0
  4091a1:	mov    QWORD PTR [rbp-0x58],rcx
  4091a5:	jmp    409332 <read_function_ast_node@@Base+0x2d2>
  4091aa:	mov    rax,QWORD PTR [rbp-0x68]
  4091ae:	mov    rcx,QWORD PTR [rax]
  4091b1:	add    rcx,0x1
  4091b8:	mov    QWORD PTR [rax],rcx
  4091bb:	mov    rax,QWORD PTR [rbp-0x28]
  4091bf:	mov    QWORD PTR [rbp-0x30],rax
  4091c3:	mov    rax,QWORD PTR [rbp-0x10]
  4091c7:	mov    rdi,QWORD PTR [rax]
  4091ca:	call   404e10 <next@@Base>
  4091cf:	lea    rcx,[rip+0xaaca]        # 413ca0 <__bss_start@@Base+0xb38>
  4091d6:	mov    rdx,rcx
  4091d9:	add    rdx,0x38
  4091e0:	add    rcx,0x40
  4091e7:	mov    QWORD PTR [rbp-0x28],rax
  4091eb:	mov    rax,QWORD PTR [rbp-0x28]
  4091ef:	cmp    DWORD PTR [rax],0x3
  4091f2:	mov    QWORD PTR [rbp-0x70],rdx
  4091f6:	mov    QWORD PTR [rbp-0x78],rcx
  4091fa:	je     409230 <read_function_ast_node@@Base+0x1d0>
  409200:	mov    rax,QWORD PTR [rbp-0x70]
  409204:	lea    rcx,[rip+0xaa95]        # 413ca0 <__bss_start@@Base+0xb38>
  40920b:	add    rcx,0x48
  409212:	mov    rdx,QWORD PTR [rax]
  409215:	add    rdx,0x1
  40921c:	mov    QWORD PTR [rax],rdx
  40921f:	mov    QWORD PTR [rbp-0x8],0x0
  409227:	mov    QWORD PTR [rbp-0x58],rcx
  40922b:	jmp    409332 <read_function_ast_node@@Base+0x2d2>
  409230:	mov    rax,QWORD PTR [rbp-0x78]
  409234:	mov    rcx,QWORD PTR [rax]
  409237:	add    rcx,0x1
  40923e:	mov    QWORD PTR [rax],rcx
  409241:	mov    rax,QWORD PTR [rbp-0x28]
  409245:	mov    rdi,rax
  409248:	call   404220 <free_token_opar@@Base>
  40924d:	mov    rax,QWORD PTR [rbp-0x10]
  409251:	mov    rdi,QWORD PTR [rax]
  409254:	call   404e10 <next@@Base>
  409259:	lea    rcx,[rip+0xaa40]        # 413ca0 <__bss_start@@Base+0xb38>
  409260:	mov    rdx,rcx
  409263:	add    rdx,0x50
  40926a:	add    rcx,0x58
  409271:	mov    QWORD PTR [rbp-0x28],rax
  409275:	mov    rax,QWORD PTR [rbp-0x28]
  409279:	cmp    DWORD PTR [rax],0x4
  40927c:	mov    QWORD PTR [rbp-0x80],rdx
  409280:	mov    QWORD PTR [rbp-0x88],rcx
  409287:	je     4092bd <read_function_ast_node@@Base+0x25d>
  40928d:	mov    rax,QWORD PTR [rbp-0x80]
  409291:	lea    rcx,[rip+0xaa08]        # 413ca0 <__bss_start@@Base+0xb38>
  409298:	add    rcx,0x60
  40929f:	mov    rdx,QWORD PTR [rax]
  4092a2:	add    rdx,0x1
  4092a9:	mov    QWORD PTR [rax],rdx
  4092ac:	mov    QWORD PTR [rbp-0x8],0x0
  4092b4:	mov    QWORD PTR [rbp-0x58],rcx
  4092b8:	jmp    409332 <read_function_ast_node@@Base+0x2d2>
  4092bd:	mov    rax,QWORD PTR [rbp-0x88]
  4092c4:	mov    rcx,QWORD PTR [rax]
  4092c7:	add    rcx,0x1
  4092ce:	mov    QWORD PTR [rax],rcx
  4092d1:	mov    rax,QWORD PTR [rbp-0x28]
  4092d5:	mov    rdi,rax
  4092d8:	call   404280 <free_token_cpar@@Base>
  4092dd:	mov    rdi,QWORD PTR [rbp-0x10]
  4092e1:	call   409370 <read_body@@Base>
  4092e6:	mov    QWORD PTR [rbp-0x20],rax
  4092ea:	mov    edi,0x20
  4092ef:	call   4031b0 <malloc@plt>
  4092f4:	mov    QWORD PTR [rbp-0x18],rax
  4092f8:	mov    rax,QWORD PTR [rbp-0x18]
  4092fc:	mov    rcx,QWORD PTR [rbp-0x30]
  409300:	mov    rsi,QWORD PTR [rcx+0x8]
  409304:	mov    rdx,QWORD PTR [rbp-0x20]
  409308:	mov    rdi,rax
  40930b:	call   407a60 <init_node_function@@Base>
  409310:	mov    rdi,QWORD PTR [rbp-0x30]
  409314:	call   4041c0 <free_token_function@@Base>
  409319:	lea    rax,[rip+0xa980]        # 413ca0 <__bss_start@@Base+0xb38>
  409320:	add    rax,0x68
  409326:	mov    rcx,QWORD PTR [rbp-0x18]
  40932a:	mov    QWORD PTR [rbp-0x8],rcx
  40932e:	mov    QWORD PTR [rbp-0x58],rax
  409332:	mov    rax,QWORD PTR [rbp-0x58]
  409336:	mov    rcx,QWORD PTR [rax]
  409339:	add    rcx,0x1
  409340:	mov    QWORD PTR [rax],rcx
  409343:	mov    rax,QWORD PTR [rip+0xa9c6]        # 413d10 <__bss_start@@Base+0xba8>
  40934a:	add    rax,0x1
  409350:	mov    QWORD PTR [rip+0xa9b9],rax        # 413d10 <__bss_start@@Base+0xba8>
  409357:	mov    rax,QWORD PTR [rbp-0x8]
  40935b:	add    rsp,0x90
  409362:	pop    rbp
  409363:	ret    
  409364:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40936e:	xchg   ax,ax

0000000000409370 <read_body@@Base>:
  409370:	push   rbp
  409371:	mov    rbp,rsp
  409374:	sub    rsp,0xc0
  40937b:	lea    rax,[rip+0xa99e]        # 413d20 <__bss_start@@Base+0xbb8>
  409382:	mov    QWORD PTR [rbp-0x38],rdi
  409386:	mov    QWORD PTR [rbp-0x40],rax
  40938a:	mov    rax,QWORD PTR [rbp-0x40]
  40938e:	mov    rcx,QWORD PTR [rax]
  409391:	add    rcx,0x1
  409398:	mov    QWORD PTR [rax],rcx
  40939b:	mov    rax,QWORD PTR [rbp-0x38]
  40939f:	mov    QWORD PTR [rbp-0x10],rax
  4093a3:	mov    QWORD PTR [rbp-0x18],0x0
  4093ab:	mov    QWORD PTR [rbp-0x20],0x0
  4093b3:	mov    QWORD PTR [rbp-0x28],0x0
  4093bb:	mov    QWORD PTR [rbp-0x30],0x0
  4093c3:	mov    rcx,QWORD PTR [rbp-0x10]
  4093c7:	mov    rdi,QWORD PTR [rcx]
  4093ca:	call   404e10 <next@@Base>
  4093cf:	lea    rcx,[rip+0xa94a]        # 413d20 <__bss_start@@Base+0xbb8>
  4093d6:	mov    rdx,rcx
  4093d9:	add    rdx,0x8
  4093e0:	add    rcx,0x10
  4093e7:	mov    QWORD PTR [rbp-0x30],rax
  4093eb:	mov    rax,QWORD PTR [rbp-0x30]
  4093ef:	cmp    DWORD PTR [rax],0x5
  4093f2:	mov    QWORD PTR [rbp-0x48],rdx
  4093f6:	mov    QWORD PTR [rbp-0x50],rcx
  4093fa:	je     409430 <read_body@@Base+0xc0>
  409400:	mov    rax,QWORD PTR [rbp-0x48]
  409404:	lea    rcx,[rip+0xa915]        # 413d20 <__bss_start@@Base+0xbb8>
  40940b:	add    rcx,0x18
  409412:	mov    rdx,QWORD PTR [rax]
  409415:	add    rdx,0x1
  40941c:	mov    QWORD PTR [rax],rdx
  40941f:	mov    QWORD PTR [rbp-0x8],0x0
  409427:	mov    QWORD PTR [rbp-0x58],rcx
  40942b:	jmp    409725 <read_body@@Base+0x3b5>
  409430:	mov    rax,QWORD PTR [rbp-0x50]
  409434:	mov    rcx,QWORD PTR [rax]
  409437:	add    rcx,0x1
  40943e:	mov    QWORD PTR [rax],rcx
  409441:	mov    rax,QWORD PTR [rbp-0x30]
  409445:	mov    rdi,rax
  409448:	call   4042e0 <free_token_obra@@Base>
  40944d:	mov    rax,QWORD PTR [rbp-0x10]
  409451:	mov    rdi,QWORD PTR [rax]
  409454:	call   404e10 <next@@Base>
  409459:	lea    rcx,[rip+0xa8c0]        # 413d20 <__bss_start@@Base+0xbb8>
  409460:	add    rcx,0x20
  409467:	mov    QWORD PTR [rbp-0x30],rax
  40946b:	mov    QWORD PTR [rbp-0x60],rcx
  40946f:	mov    rax,QWORD PTR [rbp-0x60]
  409473:	lea    rcx,[rip+0xa8a6]        # 413d20 <__bss_start@@Base+0xbb8>
  40947a:	mov    rdx,rcx
  40947d:	add    rdx,0x28
  409484:	add    rcx,0x30
  40948b:	mov    rsi,QWORD PTR [rax]
  40948e:	add    rsi,0x1
  409495:	mov    QWORD PTR [rax],rsi
  409498:	mov    rax,QWORD PTR [rbp-0x30]
  40949c:	cmp    DWORD PTR [rax],0x6
  40949f:	mov    QWORD PTR [rbp-0x68],rdx
  4094a3:	mov    QWORD PTR [rbp-0x70],rcx
  4094a7:	je     4096ef <read_body@@Base+0x37f>
  4094ad:	mov    rax,QWORD PTR [rbp-0x68]
  4094b1:	mov    rcx,QWORD PTR [rax]
  4094b4:	inc    rcx
  4094b7:	mov    QWORD PTR [rax],rcx
  4094ba:	mov    rax,QWORD PTR [rbp-0x30]
  4094be:	mov    edx,DWORD PTR [rax]
  4094c0:	lea    rax,[rip+0xa8a1]        # 413d68 <__bss_start@@Base+0xc00>
  4094c7:	lea    rcx,[rip+0xa892]        # 413d60 <__bss_start@@Base+0xbf8>
  4094ce:	lea    rsi,[rip+0xa883]        # 413d58 <__bss_start@@Base+0xbf0>
  4094d5:	mov    edi,edx
  4094d7:	sub    edi,0x7
  4094da:	mov    DWORD PTR [rbp-0x74],edx
  4094dd:	mov    QWORD PTR [rbp-0x80],rax
  4094e1:	mov    QWORD PTR [rbp-0x88],rsi
  4094e8:	mov    QWORD PTR [rbp-0x90],rcx
  4094ef:	je     409524 <read_body@@Base+0x1b4>
  4094f5:	jmp    4094fa <read_body@@Base+0x18a>
  4094fa:	mov    eax,DWORD PTR [rbp-0x74]
  4094fd:	sub    eax,0xa
  409500:	mov    rcx,QWORD PTR [rbp-0x80]
  409504:	mov    rdx,QWORD PTR [rbp-0x88]
  40950b:	mov    QWORD PTR [rbp-0x98],rcx
  409512:	mov    QWORD PTR [rbp-0xa0],rdx
  409519:	je     40956b <read_body@@Base+0x1fb>
  40951f:	jmp    4095b2 <read_body@@Base+0x242>
  409524:	mov    rax,QWORD PTR [rbp-0x90]
  40952b:	mov    rcx,QWORD PTR [rax]
  40952e:	add    rcx,0x1
  409535:	mov    QWORD PTR [rax],rcx
  409538:	mov    rax,QWORD PTR [rbp-0x30]
  40953c:	mov    rdi,rax
  40953f:	call   4043a0 <free_token_return@@Base>
  409544:	mov    rdi,QWORD PTR [rbp-0x10]
  409548:	call   409760 <read_return_expression@@Base>
  40954d:	lea    rcx,[rip+0xa7cc]        # 413d20 <__bss_start@@Base+0xbb8>
  409554:	add    rcx,0x50
  40955b:	mov    QWORD PTR [rbp-0x20],rax
  40955f:	mov    QWORD PTR [rbp-0xa8],rcx
  409566:	jmp    4095f4 <read_body@@Base+0x284>
  40956b:	mov    rax,QWORD PTR [rbp-0x98]
  409572:	mov    rcx,QWORD PTR [rax]
  409575:	add    rcx,0x1
  40957c:	mov    QWORD PTR [rax],rcx
  40957f:	mov    rax,QWORD PTR [rbp-0x30]
  409583:	mov    rdi,rax
  409586:	call   4044c0 <free_token_if@@Base>
  40958b:	mov    rdi,QWORD PTR [rbp-0x10]
  40958f:	call   409950 <read_if_statement@@Base>
  409594:	lea    rcx,[rip+0xa785]        # 413d20 <__bss_start@@Base+0xbb8>
  40959b:	add    rcx,0x58
  4095a2:	mov    QWORD PTR [rbp-0x20],rax
  4095a6:	mov    QWORD PTR [rbp-0xa8],rcx
  4095ad:	jmp    4095f4 <read_body@@Base+0x284>
  4095b2:	mov    rax,QWORD PTR [rbp-0xa0]
  4095b9:	mov    rcx,QWORD PTR [rax]
  4095bc:	add    rcx,0x1
  4095c3:	mov    QWORD PTR [rax],rcx
  4095c6:	mov    rax,QWORD PTR [rbp-0x10]
  4095ca:	mov    rdi,QWORD PTR [rax]
  4095cd:	mov    rsi,QWORD PTR [rbp-0x30]
  4095d1:	call   404ba0 <push_back@@Base>
  4095d6:	lea    rax,[rip+0xa743]        # 413d20 <__bss_start@@Base+0xbb8>
  4095dd:	add    rax,0x60
  4095e3:	mov    rcx,QWORD PTR [rbp-0x18]
  4095e7:	mov    QWORD PTR [rbp-0x8],rcx
  4095eb:	mov    QWORD PTR [rbp-0x58],rax
  4095ef:	jmp    409725 <read_body@@Base+0x3b5>
  4095f4:	mov    rax,QWORD PTR [rbp-0xa8]
  4095fb:	lea    rcx,[rip+0xa71e]        # 413d20 <__bss_start@@Base+0xbb8>
  409602:	mov    rdx,rcx
  409605:	add    rdx,0x68
  40960c:	add    rcx,0x70
  409613:	mov    rsi,QWORD PTR [rax]
  409616:	add    rsi,0x1
  40961d:	mov    QWORD PTR [rax],rsi
  409620:	cmp    QWORD PTR [rbp-0x18],0x0
  409625:	mov    QWORD PTR [rbp-0xb0],rdx
  40962c:	mov    QWORD PTR [rbp-0xb8],rcx
  409633:	je     40967b <read_body@@Base+0x30b>
  409639:	mov    rax,QWORD PTR [rbp-0xb0]
  409640:	lea    rcx,[rip+0xa6d9]        # 413d20 <__bss_start@@Base+0xbb8>
  409647:	add    rcx,0x78
  40964e:	mov    rdx,QWORD PTR [rax]
  409651:	add    rdx,0x1
  409658:	mov    QWORD PTR [rax],rdx
  40965b:	mov    rax,QWORD PTR [rbp-0x20]
  40965f:	mov    rdx,QWORD PTR [rbp-0x28]
  409663:	mov    QWORD PTR [rdx+0x8],rax
  409667:	mov    rax,QWORD PTR [rbp-0x20]
  40966b:	mov    QWORD PTR [rbp-0x28],rax
  40966f:	mov    QWORD PTR [rbp-0xc0],rcx
  409676:	jmp    4096b4 <read_body@@Base+0x344>
  40967b:	mov    rax,QWORD PTR [rbp-0xb8]
  409682:	lea    rcx,[rip+0xa697]        # 413d20 <__bss_start@@Base+0xbb8>
  409689:	add    rcx,0x80
  409690:	mov    rdx,QWORD PTR [rax]
  409693:	add    rdx,0x1
  40969a:	mov    QWORD PTR [rax],rdx
  40969d:	mov    rax,QWORD PTR [rbp-0x20]
  4096a1:	mov    QWORD PTR [rbp-0x18],rax
  4096a5:	mov    rax,QWORD PTR [rbp-0x20]
  4096a9:	mov    QWORD PTR [rbp-0x28],rax
  4096ad:	mov    QWORD PTR [rbp-0xc0],rcx
  4096b4:	mov    rax,QWORD PTR [rbp-0xc0]
  4096bb:	mov    rcx,QWORD PTR [rax]
  4096be:	add    rcx,0x1
  4096c5:	mov    QWORD PTR [rax],rcx
  4096c8:	mov    rax,QWORD PTR [rbp-0x10]
  4096cc:	mov    rdi,QWORD PTR [rax]
  4096cf:	call   404e10 <next@@Base>
  4096d4:	lea    rcx,[rip+0xa645]        # 413d20 <__bss_start@@Base+0xbb8>
  4096db:	add    rcx,0x88
  4096e2:	mov    QWORD PTR [rbp-0x30],rax
  4096e6:	mov    QWORD PTR [rbp-0x60],rcx
  4096ea:	jmp    40946f <read_body@@Base+0xff>
  4096ef:	mov    rax,QWORD PTR [rbp-0x70]
  4096f3:	mov    rcx,QWORD PTR [rax]
  4096f6:	add    rcx,0x1
  4096fd:	mov    QWORD PTR [rax],rcx
  409700:	mov    rax,QWORD PTR [rbp-0x30]
  409704:	mov    rdi,rax
  409707:	call   404340 <free_token_cbra@@Base>
  40970c:	lea    rax,[rip+0xa60d]        # 413d20 <__bss_start@@Base+0xbb8>
  409713:	add    rax,0x90
  409719:	mov    rcx,QWORD PTR [rbp-0x18]
  40971d:	mov    QWORD PTR [rbp-0x8],rcx
  409721:	mov    QWORD PTR [rbp-0x58],rax
  409725:	mov    rax,QWORD PTR [rbp-0x58]
  409729:	mov    rcx,QWORD PTR [rax]
  40972c:	add    rcx,0x1
  409733:	mov    QWORD PTR [rax],rcx
  409736:	mov    rax,QWORD PTR [rip+0xa67b]        # 413db8 <__bss_start@@Base+0xc50>
  40973d:	add    rax,0x1
  409743:	mov    QWORD PTR [rip+0xa66e],rax        # 413db8 <__bss_start@@Base+0xc50>
  40974a:	mov    rax,QWORD PTR [rbp-0x8]
  40974e:	add    rsp,0xc0
  409755:	pop    rbp
  409756:	ret    
  409757:	nop    WORD PTR [rax+rax*1+0x0]

0000000000409760 <read_return_expression@@Base>:
  409760:	push   rbp
  409761:	mov    rbp,rsp
  409764:	sub    rsp,0x70
  409768:	lea    rax,[rip+0xa651]        # 413dc0 <__bss_start@@Base+0xc58>
  40976f:	mov    QWORD PTR [rbp-0x38],rdi
  409773:	mov    QWORD PTR [rbp-0x40],rax
  409777:	mov    rax,QWORD PTR [rbp-0x40]
  40977b:	mov    rcx,QWORD PTR [rax]
  40977e:	add    rcx,0x1
  409785:	mov    QWORD PTR [rax],rcx
  409788:	mov    rax,QWORD PTR [rbp-0x38]
  40978c:	mov    QWORD PTR [rbp-0x10],rax
  409790:	mov    QWORD PTR [rbp-0x18],0x0
  409798:	mov    QWORD PTR [rbp-0x20],0x0
  4097a0:	mov    QWORD PTR [rbp-0x28],0x0
  4097a8:	mov    QWORD PTR [rbp-0x30],0x0
  4097b0:	mov    rcx,QWORD PTR [rbp-0x10]
  4097b4:	mov    rdi,QWORD PTR [rcx]
  4097b7:	call   404e10 <next@@Base>
  4097bc:	lea    rcx,[rip+0xa5fd]        # 413dc0 <__bss_start@@Base+0xc58>
  4097c3:	mov    rdx,rcx
  4097c6:	add    rdx,0x8
  4097cd:	add    rcx,0x10
  4097d4:	mov    QWORD PTR [rbp-0x28],rax
  4097d8:	mov    rax,QWORD PTR [rbp-0x28]
  4097dc:	cmp    DWORD PTR [rax],0x1
  4097df:	mov    QWORD PTR [rbp-0x48],rdx
  4097e3:	mov    QWORD PTR [rbp-0x50],rcx
  4097e7:	je     40981d <read_return_expression@@Base+0xbd>
  4097ed:	mov    rax,QWORD PTR [rbp-0x48]
  4097f1:	lea    rcx,[rip+0xa5c8]        # 413dc0 <__bss_start@@Base+0xc58>
  4097f8:	add    rcx,0x18
  4097ff:	mov    rdx,QWORD PTR [rax]
  409802:	add    rdx,0x1
  409809:	mov    QWORD PTR [rax],rdx
  40980c:	mov    QWORD PTR [rbp-0x8],0x0
  409814:	mov    QWORD PTR [rbp-0x58],rcx
  409818:	jmp    409921 <read_return_expression@@Base+0x1c1>
  40981d:	mov    rax,QWORD PTR [rbp-0x50]
  409821:	mov    rcx,QWORD PTR [rax]
  409824:	add    rcx,0x1
  40982b:	mov    QWORD PTR [rax],rcx
  40982e:	mov    rax,QWORD PTR [rbp-0x28]
  409832:	mov    QWORD PTR [rbp-0x30],rax
  409836:	mov    edi,0x18
  40983b:	call   4031b0 <malloc@plt>
  409840:	mov    QWORD PTR [rbp-0x20],rax
  409844:	mov    rax,QWORD PTR [rbp-0x20]
  409848:	mov    rcx,QWORD PTR [rbp-0x30]
  40984c:	mov    esi,DWORD PTR [rcx+0x4]
  40984f:	mov    rdi,rax
  409852:	call   4079f0 <init_node_int@@Base>
  409857:	mov    rdi,QWORD PTR [rbp-0x30]
  40985b:	call   404160 <free_token_int_value@@Base>
  409860:	mov    edi,0x18
  409865:	call   4031b0 <malloc@plt>
  40986a:	mov    QWORD PTR [rbp-0x18],rax
  40986e:	mov    rax,QWORD PTR [rbp-0x18]
  409872:	mov    rsi,QWORD PTR [rbp-0x20]
  409876:	mov    rdi,rax
  409879:	call   407af0 <init_node_return@@Base>
  40987e:	mov    rax,QWORD PTR [rbp-0x10]
  409882:	mov    rdi,QWORD PTR [rax]
  409885:	call   404e10 <next@@Base>
  40988a:	lea    rcx,[rip+0xa52f]        # 413dc0 <__bss_start@@Base+0xc58>
  409891:	mov    rdx,rcx
  409894:	add    rdx,0x20
  40989b:	add    rcx,0x28
  4098a2:	mov    QWORD PTR [rbp-0x28],rax
  4098a6:	mov    rax,QWORD PTR [rbp-0x28]
  4098aa:	cmp    DWORD PTR [rax],0x8
  4098ad:	mov    QWORD PTR [rbp-0x60],rdx
  4098b1:	mov    QWORD PTR [rbp-0x68],rcx
  4098b5:	je     4098eb <read_return_expression@@Base+0x18b>
  4098bb:	mov    rax,QWORD PTR [rbp-0x60]
  4098bf:	lea    rcx,[rip+0xa4fa]        # 413dc0 <__bss_start@@Base+0xc58>
  4098c6:	add    rcx,0x30
  4098cd:	mov    rdx,QWORD PTR [rax]
  4098d0:	add    rdx,0x1
  4098d7:	mov    QWORD PTR [rax],rdx
  4098da:	mov    QWORD PTR [rbp-0x8],0x0
  4098e2:	mov    QWORD PTR [rbp-0x58],rcx
  4098e6:	jmp    409921 <read_return_expression@@Base+0x1c1>
  4098eb:	mov    rax,QWORD PTR [rbp-0x68]
  4098ef:	mov    rcx,QWORD PTR [rax]
  4098f2:	add    rcx,0x1
  4098f9:	mov    QWORD PTR [rax],rcx
  4098fc:	mov    rax,QWORD PTR [rbp-0x28]
  409900:	mov    rdi,rax
  409903:	call   404400 <free_token_semicolon@@Base>
  409908:	lea    rax,[rip+0xa4b1]        # 413dc0 <__bss_start@@Base+0xc58>
  40990f:	add    rax,0x38
  409915:	mov    rcx,QWORD PTR [rbp-0x18]
  409919:	mov    QWORD PTR [rbp-0x8],rcx
  40991d:	mov    QWORD PTR [rbp-0x58],rax
  409921:	mov    rax,QWORD PTR [rbp-0x58]
  409925:	mov    rcx,QWORD PTR [rax]
  409928:	add    rcx,0x1
  40992f:	mov    QWORD PTR [rax],rcx
  409932:	mov    rax,QWORD PTR [rip+0xa4c7]        # 413e00 <__bss_start@@Base+0xc98>
  409939:	add    rax,0x1
  40993f:	mov    QWORD PTR [rip+0xa4ba],rax        # 413e00 <__bss_start@@Base+0xc98>
  409946:	mov    rax,QWORD PTR [rbp-0x8]
  40994a:	add    rsp,0x70
  40994e:	pop    rbp
  40994f:	ret    

0000000000409950 <read_if_statement@@Base>:
  409950:	push   rbp
  409951:	mov    rbp,rsp
  409954:	sub    rsp,0x80
  40995b:	lea    rax,[rip+0xa4ae]        # 413e10 <__bss_start@@Base+0xca8>
  409962:	mov    QWORD PTR [rbp-0x40],rdi
  409966:	mov    QWORD PTR [rbp-0x48],rax
  40996a:	mov    rax,QWORD PTR [rbp-0x48]
  40996e:	mov    rcx,QWORD PTR [rax]
  409971:	add    rcx,0x1
  409978:	mov    QWORD PTR [rax],rcx
  40997b:	mov    rax,QWORD PTR [rbp-0x40]
  40997f:	mov    QWORD PTR [rbp-0x10],rax
  409983:	mov    QWORD PTR [rbp-0x18],0x0
  40998b:	mov    QWORD PTR [rbp-0x20],0x0
  409993:	mov    QWORD PTR [rbp-0x28],0x0
  40999b:	mov    QWORD PTR [rbp-0x30],0x0
  4099a3:	mov    QWORD PTR [rbp-0x38],0x0
  4099ab:	mov    rcx,QWORD PTR [rbp-0x10]
  4099af:	mov    rdi,QWORD PTR [rcx]
  4099b2:	call   404e10 <next@@Base>
  4099b7:	lea    rcx,[rip+0xa452]        # 413e10 <__bss_start@@Base+0xca8>
  4099be:	mov    rdx,rcx
  4099c1:	add    rdx,0x8
  4099c8:	add    rcx,0x10
  4099cf:	mov    QWORD PTR [rbp-0x38],rax
  4099d3:	mov    rax,QWORD PTR [rbp-0x38]
  4099d7:	cmp    DWORD PTR [rax],0x3
  4099da:	mov    QWORD PTR [rbp-0x50],rdx
  4099de:	mov    QWORD PTR [rbp-0x58],rcx
  4099e2:	je     409a18 <read_if_statement@@Base+0xc8>
  4099e8:	mov    rax,QWORD PTR [rbp-0x50]
  4099ec:	lea    rcx,[rip+0xa41d]        # 413e10 <__bss_start@@Base+0xca8>
  4099f3:	add    rcx,0x18
  4099fa:	mov    rdx,QWORD PTR [rax]
  4099fd:	add    rdx,0x1
  409a04:	mov    QWORD PTR [rax],rdx
  409a07:	mov    QWORD PTR [rbp-0x8],0x0
  409a0f:	mov    QWORD PTR [rbp-0x60],rcx
  409a13:	jmp    409b4f <read_if_statement@@Base+0x1ff>
  409a18:	mov    rax,QWORD PTR [rbp-0x58]
  409a1c:	mov    rcx,QWORD PTR [rax]
  409a1f:	add    rcx,0x1
  409a26:	mov    QWORD PTR [rax],rcx
  409a29:	mov    rax,QWORD PTR [rbp-0x38]
  409a2d:	mov    rdi,rax
  409a30:	call   404220 <free_token_opar@@Base>
  409a35:	mov    rdi,QWORD PTR [rbp-0x10]
  409a39:	call   409b90 <read_boolean_expression@@Base>
  409a3e:	mov    QWORD PTR [rbp-0x20],rax
  409a42:	mov    rdi,QWORD PTR [rbp-0x10]
  409a46:	call   409370 <read_body@@Base>
  409a4b:	mov    QWORD PTR [rbp-0x28],rax
  409a4f:	mov    rax,QWORD PTR [rbp-0x10]
  409a53:	mov    rdi,QWORD PTR [rax]
  409a56:	call   404e10 <next@@Base>
  409a5b:	lea    rcx,[rip+0xa3ae]        # 413e10 <__bss_start@@Base+0xca8>
  409a62:	mov    rdx,rcx
  409a65:	add    rdx,0x20
  409a6c:	add    rcx,0x28
  409a73:	mov    QWORD PTR [rbp-0x38],rax
  409a77:	mov    rax,QWORD PTR [rbp-0x38]
  409a7b:	cmp    DWORD PTR [rax],0xb
  409a7e:	mov    QWORD PTR [rbp-0x68],rdx
  409a82:	mov    QWORD PTR [rbp-0x70],rcx
  409a86:	jne    409acd <read_if_statement@@Base+0x17d>
  409a8c:	mov    rax,QWORD PTR [rbp-0x68]
  409a90:	mov    rcx,QWORD PTR [rax]
  409a93:	add    rcx,0x1
  409a9a:	mov    QWORD PTR [rax],rcx
  409a9d:	mov    rax,QWORD PTR [rbp-0x38]
  409aa1:	mov    rdi,rax
  409aa4:	call   404520 <free_token_else@@Base>
  409aa9:	mov    rdi,QWORD PTR [rbp-0x10]
  409aad:	call   409370 <read_body@@Base>
  409ab2:	lea    rcx,[rip+0xa357]        # 413e10 <__bss_start@@Base+0xca8>
  409ab9:	add    rcx,0x30
  409ac0:	mov    QWORD PTR [rbp-0x30],rax
  409ac4:	mov    QWORD PTR [rbp-0x78],rcx
  409ac8:	jmp    409aff <read_if_statement@@Base+0x1af>
  409acd:	mov    rax,QWORD PTR [rbp-0x70]
  409ad1:	mov    rcx,QWORD PTR [rax]
  409ad4:	add    rcx,0x1
  409adb:	mov    QWORD PTR [rax],rcx
  409ade:	mov    rax,QWORD PTR [rbp-0x10]
  409ae2:	mov    rdi,QWORD PTR [rax]
  409ae5:	mov    rsi,QWORD PTR [rbp-0x38]
  409ae9:	call   404ba0 <push_back@@Base>
  409aee:	lea    rax,[rip+0xa31b]        # 413e10 <__bss_start@@Base+0xca8>
  409af5:	add    rax,0x38
  409afb:	mov    QWORD PTR [rbp-0x78],rax
  409aff:	mov    rax,QWORD PTR [rbp-0x78]
  409b03:	mov    rcx,QWORD PTR [rax]
  409b06:	add    rcx,0x1
  409b0d:	mov    QWORD PTR [rax],rcx
  409b10:	mov    edi,0x28
  409b15:	call   4031b0 <malloc@plt>
  409b1a:	mov    QWORD PTR [rbp-0x18],rax
  409b1e:	mov    rax,QWORD PTR [rbp-0x18]
  409b22:	mov    rsi,QWORD PTR [rbp-0x20]
  409b26:	mov    rdx,QWORD PTR [rbp-0x28]
  409b2a:	mov    rcx,QWORD PTR [rbp-0x30]
  409b2e:	mov    rdi,rax
  409b31:	call   407b60 <init_node_if@@Base>
  409b36:	lea    rax,[rip+0xa2d3]        # 413e10 <__bss_start@@Base+0xca8>
  409b3d:	add    rax,0x40
  409b43:	mov    rcx,QWORD PTR [rbp-0x18]
  409b47:	mov    QWORD PTR [rbp-0x8],rcx
  409b4b:	mov    QWORD PTR [rbp-0x60],rax
  409b4f:	mov    rax,QWORD PTR [rbp-0x60]
  409b53:	mov    rcx,QWORD PTR [rax]
  409b56:	add    rcx,0x1
  409b5d:	mov    QWORD PTR [rax],rcx
  409b60:	mov    rax,QWORD PTR [rip+0xa2f1]        # 413e58 <__bss_start@@Base+0xcf0>
  409b67:	add    rax,0x1
  409b6d:	mov    QWORD PTR [rip+0xa2e4],rax        # 413e58 <__bss_start@@Base+0xcf0>
  409b74:	mov    rax,QWORD PTR [rbp-0x8]
  409b78:	add    rsp,0x80
  409b7f:	pop    rbp
  409b80:	ret    
  409b81:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409b8b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000409b90 <read_boolean_expression@@Base>:
  409b90:	push   rbp
  409b91:	mov    rbp,rsp
  409b94:	sub    rsp,0xa0
  409b9b:	lea    rax,[rip+0xa2be]        # 413e60 <__bss_start@@Base+0xcf8>
  409ba2:	mov    QWORD PTR [rbp-0x28],rdi
  409ba6:	mov    QWORD PTR [rbp-0x30],rax
  409baa:	mov    rax,QWORD PTR [rbp-0x30]
  409bae:	mov    rcx,QWORD PTR [rax]
  409bb1:	add    rcx,0x1
  409bb8:	mov    QWORD PTR [rax],rcx
  409bbb:	mov    rax,QWORD PTR [rbp-0x28]
  409bbf:	mov    QWORD PTR [rbp-0x8],rax
  409bc3:	mov    QWORD PTR [rbp-0x10],0x0
  409bcb:	mov    QWORD PTR [rbp-0x18],0x0
  409bd3:	mov    DWORD PTR [rbp-0x20],0x0
  409bda:	mov    rcx,QWORD PTR [rbp-0x8]
  409bde:	mov    rdi,QWORD PTR [rcx]
  409be1:	call   404e10 <next@@Base>
  409be6:	lea    rcx,[rip+0xa273]        # 413e60 <__bss_start@@Base+0xcf8>
  409bed:	add    rcx,0x8
  409bf4:	mov    QWORD PTR [rbp-0x18],rax
  409bf8:	mov    QWORD PTR [rbp-0x38],rcx
  409bfc:	mov    rax,QWORD PTR [rbp-0x38]
  409c00:	lea    rcx,[rip+0xa259]        # 413e60 <__bss_start@@Base+0xcf8>
  409c07:	mov    rdx,rcx
  409c0a:	add    rdx,0x10
  409c11:	add    rcx,0x18
  409c18:	mov    rsi,QWORD PTR [rax]
  409c1b:	add    rsi,0x1
  409c22:	mov    QWORD PTR [rax],rsi
  409c25:	mov    rax,QWORD PTR [rbp-0x18]
  409c29:	cmp    DWORD PTR [rax],0x4
  409c2c:	mov    QWORD PTR [rbp-0x40],rdx
  409c30:	mov    QWORD PTR [rbp-0x48],rcx
  409c34:	je     409e19 <read_boolean_expression@@Base+0x289>
  409c3a:	mov    rax,QWORD PTR [rbp-0x40]
  409c3e:	mov    rcx,QWORD PTR [rax]
  409c41:	inc    rcx
  409c44:	mov    QWORD PTR [rax],rcx
  409c47:	mov    rax,QWORD PTR [rbp-0x18]
  409c4b:	mov    edx,DWORD PTR [rax]
  409c4d:	lea    rax,[rip+0xa244]        # 413e98 <__bss_start@@Base+0xd30>
  409c54:	lea    rcx,[rip+0xa235]        # 413e90 <__bss_start@@Base+0xd28>
  409c5b:	lea    rsi,[rip+0xa226]        # 413e88 <__bss_start@@Base+0xd20>
  409c62:	lea    rdi,[rip+0xa217]        # 413e80 <__bss_start@@Base+0xd18>
  409c69:	mov    r8d,edx
  409c6c:	sub    r8d,0x1
  409c70:	mov    DWORD PTR [rbp-0x4c],edx
  409c73:	mov    QWORD PTR [rbp-0x58],rax
  409c77:	mov    QWORD PTR [rbp-0x60],rcx
  409c7b:	mov    QWORD PTR [rbp-0x68],rdi
  409c7f:	mov    QWORD PTR [rbp-0x70],rsi
  409c83:	je     409ccb <read_boolean_expression@@Base+0x13b>
  409c89:	jmp    409c8e <read_boolean_expression@@Base+0xfe>
  409c8e:	mov    eax,DWORD PTR [rbp-0x4c]
  409c91:	sub    eax,0x3
  409c94:	mov    rcx,QWORD PTR [rbp-0x58]
  409c98:	mov    QWORD PTR [rbp-0x78],rcx
  409c9c:	je     409d5f <read_boolean_expression@@Base+0x1cf>
  409ca2:	jmp    409ca7 <read_boolean_expression@@Base+0x117>
  409ca7:	mov    eax,DWORD PTR [rbp-0x4c]
  409caa:	sub    eax,0xc
  409cad:	mov    rcx,QWORD PTR [rbp-0x60]
  409cb1:	mov    rdx,QWORD PTR [rbp-0x68]
  409cb5:	mov    QWORD PTR [rbp-0x80],rcx
  409cb9:	mov    QWORD PTR [rbp-0x88],rdx
  409cc0:	je     409d1e <read_boolean_expression@@Base+0x18e>
  409cc6:	jmp    409da2 <read_boolean_expression@@Base+0x212>
  409ccb:	mov    rax,QWORD PTR [rbp-0x70]
  409ccf:	mov    rcx,QWORD PTR [rax]
  409cd2:	add    rcx,0x1
  409cd9:	mov    QWORD PTR [rax],rcx
  409cdc:	mov    rax,QWORD PTR [rbp-0x8]
  409ce0:	mov    rdi,QWORD PTR [rax]
  409ce3:	mov    rsi,QWORD PTR [rbp-0x18]
  409ce7:	call   404ba0 <push_back@@Base>
  409cec:	mov    rdi,QWORD PTR [rbp-0x8]
  409cf0:	mov    rsi,QWORD PTR [rbp-0x10]
  409cf4:	mov    ecx,DWORD PTR [rbp-0x1c]
  409cf7:	lea    rdx,[rbp-0x20]
  409cfb:	call   409e60 <read_single_boolean_expression@@Base>
  409d00:	lea    rdx,[rip+0xa159]        # 413e60 <__bss_start@@Base+0xcf8>
  409d07:	add    rdx,0x40
  409d0e:	mov    QWORD PTR [rbp-0x10],rax
  409d12:	mov    QWORD PTR [rbp-0x90],rdx
  409d19:	jmp    409dde <read_boolean_expression@@Base+0x24e>
  409d1e:	mov    rax,QWORD PTR [rbp-0x80]
  409d22:	mov    rcx,QWORD PTR [rax]
  409d25:	add    rcx,0x1
  409d2c:	mov    QWORD PTR [rax],rcx
  409d2f:	mov    rax,QWORD PTR [rbp-0x18]
  409d33:	mov    rdi,rax
  409d36:	call   408480 <get_boolean_op_value@@Base>
  409d3b:	lea    rcx,[rip+0xa11e]        # 413e60 <__bss_start@@Base+0xcf8>
  409d42:	add    rcx,0x48
  409d49:	mov    DWORD PTR [rbp-0x1c],eax
  409d4c:	mov    DWORD PTR [rbp-0x20],0x1
  409d53:	mov    QWORD PTR [rbp-0x90],rcx
  409d5a:	jmp    409dde <read_boolean_expression@@Base+0x24e>
  409d5f:	mov    rax,QWORD PTR [rbp-0x78]
  409d63:	mov    rcx,QWORD PTR [rax]
  409d66:	add    rcx,0x1
  409d6d:	mov    QWORD PTR [rax],rcx
  409d70:	mov    rdi,QWORD PTR [rbp-0x8]
  409d74:	mov    rsi,QWORD PTR [rbp-0x10]
  409d78:	mov    ecx,DWORD PTR [rbp-0x1c]
  409d7b:	lea    rdx,[rbp-0x20]
  409d7f:	call   409e60 <read_single_boolean_expression@@Base>
  409d84:	lea    rdx,[rip+0xa0d5]        # 413e60 <__bss_start@@Base+0xcf8>
  409d8b:	add    rdx,0x50
  409d92:	mov    QWORD PTR [rbp-0x10],rax
  409d96:	mov    QWORD PTR [rbp-0x90],rdx
  409d9d:	jmp    409dde <read_boolean_expression@@Base+0x24e>
  409da2:	mov    rax,QWORD PTR [rbp-0x88]
  409da9:	mov    rcx,QWORD PTR [rip+0x9240]        # 412ff0 <stderr@GLIBC_2.2.5>
  409db0:	mov    rdx,QWORD PTR [rax]
  409db3:	add    rdx,0x1
  409dba:	mov    QWORD PTR [rax],rdx
  409dbd:	mov    rdi,QWORD PTR [rcx]
  409dc0:	lea    rsi,[rip+0x48d1]        # 40e698 <_IO_stdin_used@@Base+0x698>
  409dc7:	mov    al,0x0
  409dc9:	call   403150 <fprintf@plt>
  409dce:	mov    edi,0x1
  409dd3:	mov    DWORD PTR [rbp-0x94],eax
  409dd9:	call   403260 <exit@plt>
  409dde:	mov    rax,QWORD PTR [rbp-0x90]
  409de5:	mov    rcx,QWORD PTR [rax]
  409de8:	add    rcx,0x1
  409def:	mov    QWORD PTR [rax],rcx
  409df2:	mov    rax,QWORD PTR [rbp-0x8]
  409df6:	mov    rdi,QWORD PTR [rax]
  409df9:	call   404e10 <next@@Base>
  409dfe:	lea    rcx,[rip+0xa05b]        # 413e60 <__bss_start@@Base+0xcf8>
  409e05:	add    rcx,0x58
  409e0c:	mov    QWORD PTR [rbp-0x18],rax
  409e10:	mov    QWORD PTR [rbp-0x38],rcx
  409e14:	jmp    409bfc <read_boolean_expression@@Base+0x6c>
  409e19:	mov    rax,QWORD PTR [rbp-0x48]
  409e1d:	mov    rcx,QWORD PTR [rax]
  409e20:	add    rcx,0x1
  409e27:	mov    QWORD PTR [rax],rcx
  409e2a:	mov    rax,QWORD PTR [rip+0xa08f]        # 413ec0 <__bss_start@@Base+0xd58>
  409e31:	add    rax,0x1
  409e37:	mov    QWORD PTR [rip+0xa082],rax        # 413ec0 <__bss_start@@Base+0xd58>
  409e3e:	mov    rax,QWORD PTR [rbp-0x18]
  409e42:	mov    rdi,rax
  409e45:	call   404280 <free_token_cpar@@Base>
  409e4a:	mov    rax,QWORD PTR [rbp-0x10]
  409e4e:	add    rsp,0xa0
  409e55:	pop    rbp
  409e56:	ret    
  409e57:	nop    WORD PTR [rax+rax*1+0x0]

0000000000409e60 <read_single_boolean_expression@@Base>:
  409e60:	push   rbp
  409e61:	mov    rbp,rsp
  409e64:	sub    rsp,0xb0
  409e6b:	lea    rax,[rip+0xa05e]        # 413ed0 <__bss_start@@Base+0xd68>
  409e72:	mov    QWORD PTR [rbp-0x50],rdi
  409e76:	mov    QWORD PTR [rbp-0x58],rsi
  409e7a:	mov    QWORD PTR [rbp-0x60],rdx
  409e7e:	mov    DWORD PTR [rbp-0x64],ecx
  409e81:	mov    QWORD PTR [rbp-0x70],rax
  409e85:	mov    rax,QWORD PTR [rbp-0x70]
  409e89:	lea    rcx,[rip+0xa040]        # 413ed0 <__bss_start@@Base+0xd68>
  409e90:	mov    rdx,rcx
  409e93:	add    rdx,0x8
  409e9a:	add    rcx,0x10
  409ea1:	mov    rsi,QWORD PTR [rax]
  409ea4:	add    rsi,0x1
  409eab:	mov    QWORD PTR [rax],rsi
  409eae:	mov    rax,QWORD PTR [rbp-0x50]
  409eb2:	mov    QWORD PTR [rbp-0x8],rax
  409eb6:	mov    rsi,QWORD PTR [rbp-0x58]
  409eba:	mov    QWORD PTR [rbp-0x10],rsi
  409ebe:	mov    rdi,QWORD PTR [rbp-0x60]
  409ec2:	mov    QWORD PTR [rbp-0x18],rdi
  409ec6:	mov    r8d,DWORD PTR [rbp-0x64]
  409eca:	mov    DWORD PTR [rbp-0x1c],r8d
  409ece:	mov    QWORD PTR [rbp-0x28],0x0
  409ed6:	mov    QWORD PTR [rbp-0x30],0x0
  409ede:	mov    QWORD PTR [rbp-0x38],0x0
  409ee6:	mov    QWORD PTR [rbp-0x40],0x0
  409eee:	mov    QWORD PTR [rbp-0x48],0x0
  409ef6:	cmp    QWORD PTR [rbp-0x10],0x0
  409efb:	mov    QWORD PTR [rbp-0x78],rdx
  409eff:	mov    QWORD PTR [rbp-0x80],rcx
  409f03:	jne    409f41 <read_single_boolean_expression@@Base+0xe1>
  409f09:	mov    rax,QWORD PTR [rbp-0x78]
  409f0d:	mov    rcx,QWORD PTR [rax]
  409f10:	add    rcx,0x1
  409f17:	mov    QWORD PTR [rax],rcx
  409f1a:	mov    rdi,QWORD PTR [rbp-0x8]
  409f1e:	call   40a0a0 <read_boolean_binary_expression@@Base>
  409f23:	lea    rcx,[rip+0x9fa6]        # 413ed0 <__bss_start@@Base+0xd68>
  409f2a:	add    rcx,0x18
  409f31:	mov    QWORD PTR [rbp-0x30],rax
  409f35:	mov    QWORD PTR [rbp-0x88],rcx
  409f3c:	jmp    40a06a <read_single_boolean_expression@@Base+0x20a>
  409f41:	mov    rax,QWORD PTR [rbp-0x80]
  409f45:	lea    rcx,[rip+0x9f84]        # 413ed0 <__bss_start@@Base+0xd68>
  409f4c:	mov    rdx,rcx
  409f4f:	add    rdx,0x20
  409f56:	add    rcx,0x28
  409f5d:	mov    rsi,QWORD PTR [rax]
  409f60:	add    rsi,0x1
  409f67:	mov    QWORD PTR [rax],rsi
  409f6a:	mov    rax,QWORD PTR [rbp-0x18]
  409f6e:	cmp    DWORD PTR [rax],0x0
  409f71:	mov    QWORD PTR [rbp-0x90],rdx
  409f78:	mov    QWORD PTR [rbp-0x98],rcx
  409f7f:	je     409ffe <read_single_boolean_expression@@Base+0x19e>
  409f85:	mov    rax,QWORD PTR [rbp-0x90]
  409f8c:	mov    rcx,QWORD PTR [rax]
  409f8f:	add    rcx,0x1
  409f96:	mov    QWORD PTR [rax],rcx
  409f99:	mov    rdi,QWORD PTR [rbp-0x8]
  409f9d:	call   40a0a0 <read_boolean_binary_expression@@Base>
  409fa2:	mov    QWORD PTR [rbp-0x38],rax
  409fa6:	mov    rax,QWORD PTR [rbp-0x30]
  409faa:	mov    QWORD PTR [rbp-0x40],rax
  409fae:	mov    rax,QWORD PTR [rbp-0x38]
  409fb2:	mov    QWORD PTR [rbp-0x48],rax
  409fb6:	mov    edi,0x28
  409fbb:	call   4031b0 <malloc@plt>
  409fc0:	mov    QWORD PTR [rbp-0x30],rax
  409fc4:	mov    rax,QWORD PTR [rbp-0x30]
  409fc8:	mov    esi,DWORD PTR [rbp-0x1c]
  409fcb:	mov    rdx,QWORD PTR [rbp-0x40]
  409fcf:	mov    rcx,QWORD PTR [rbp-0x48]
  409fd3:	mov    rdi,rax
  409fd6:	call   407c10 <init_node_boolean_operator@@Base>
  409fdb:	lea    rax,[rip+0x9eee]        # 413ed0 <__bss_start@@Base+0xd68>
  409fe2:	add    rax,0x30
  409fe8:	mov    rcx,QWORD PTR [rbp-0x18]
  409fec:	mov    DWORD PTR [rcx],0x0
  409ff2:	mov    QWORD PTR [rbp-0xa0],rax
  409ff9:	jmp    40a041 <read_single_boolean_expression@@Base+0x1e1>
  409ffe:	mov    rax,QWORD PTR [rbp-0x98]
  40a005:	mov    rcx,QWORD PTR [rip+0x8fe4]        # 412ff0 <stderr@GLIBC_2.2.5>
  40a00c:	mov    rdx,QWORD PTR [rax]
  40a00f:	add    rdx,0x1
  40a016:	mov    QWORD PTR [rax],rdx
  40a019:	mov    rdi,QWORD PTR [rcx]
  40a01c:	mov    rax,QWORD PTR [rbp-0x28]
  40a020:	mov    edx,DWORD PTR [rax+0x4]
  40a023:	lea    rsi,[rip+0x4690]        # 40e6ba <_IO_stdin_used@@Base+0x6ba>
  40a02a:	mov    al,0x0
  40a02c:	call   403150 <fprintf@plt>
  40a031:	mov    edi,0x1
  40a036:	mov    DWORD PTR [rbp-0xa4],eax
  40a03c:	call   403260 <exit@plt>
  40a041:	mov    rax,QWORD PTR [rbp-0xa0]
  40a048:	lea    rcx,[rip+0x9e81]        # 413ed0 <__bss_start@@Base+0xd68>
  40a04f:	add    rcx,0x38
  40a056:	mov    rdx,QWORD PTR [rax]
  40a059:	add    rdx,0x1
  40a060:	mov    QWORD PTR [rax],rdx
  40a063:	mov    QWORD PTR [rbp-0x88],rcx
  40a06a:	mov    rax,QWORD PTR [rbp-0x88]
  40a071:	mov    rcx,QWORD PTR [rax]
  40a074:	add    rcx,0x1
  40a07b:	mov    QWORD PTR [rax],rcx
  40a07e:	mov    rax,QWORD PTR [rip+0x9e8b]        # 413f10 <__bss_start@@Base+0xda8>
  40a085:	add    rax,0x1
  40a08b:	mov    QWORD PTR [rip+0x9e7e],rax        # 413f10 <__bss_start@@Base+0xda8>
  40a092:	mov    rax,QWORD PTR [rbp-0x30]
  40a096:	add    rsp,0xb0
  40a09d:	pop    rbp
  40a09e:	ret    
  40a09f:	nop

000000000040a0a0 <read_boolean_binary_expression@@Base>:
  40a0a0:	push   rbp
  40a0a1:	mov    rbp,rsp
  40a0a4:	sub    rsp,0xb0
  40a0ab:	lea    rax,[rip+0x9e6e]        # 413f20 <__bss_start@@Base+0xdb8>
  40a0b2:	mov    QWORD PTR [rbp-0x58],rdi
  40a0b6:	mov    QWORD PTR [rbp-0x60],rax
  40a0ba:	mov    rax,QWORD PTR [rbp-0x60]
  40a0be:	mov    rcx,QWORD PTR [rax]
  40a0c1:	add    rcx,0x1
  40a0c8:	mov    QWORD PTR [rax],rcx
  40a0cb:	mov    rax,QWORD PTR [rbp-0x58]
  40a0cf:	mov    QWORD PTR [rbp-0x10],rax
  40a0d3:	mov    QWORD PTR [rbp-0x18],0x0
  40a0db:	mov    QWORD PTR [rbp-0x20],0x0
  40a0e3:	mov    QWORD PTR [rbp-0x28],0x0
  40a0eb:	mov    QWORD PTR [rbp-0x30],0x0
  40a0f3:	mov    QWORD PTR [rbp-0x38],0x0
  40a0fb:	mov    QWORD PTR [rbp-0x40],0x0
  40a103:	mov    QWORD PTR [rbp-0x48],0x0
  40a10b:	mov    rcx,QWORD PTR [rbp-0x10]
  40a10f:	mov    rdi,QWORD PTR [rcx]
  40a112:	call   404e10 <next@@Base>
  40a117:	lea    rcx,[rip+0x9e02]        # 413f20 <__bss_start@@Base+0xdb8>
  40a11e:	mov    rdx,rcx
  40a121:	add    rdx,0x8
  40a128:	add    rcx,0x10
  40a12f:	mov    QWORD PTR [rbp-0x38],rax
  40a133:	mov    rax,QWORD PTR [rbp-0x38]
  40a137:	cmp    DWORD PTR [rax],0x1
  40a13a:	mov    QWORD PTR [rbp-0x68],rdx
  40a13e:	mov    QWORD PTR [rbp-0x70],rcx
  40a142:	je     40a201 <read_boolean_binary_expression@@Base+0x161>
  40a148:	mov    rax,QWORD PTR [rbp-0x68]
  40a14c:	lea    rcx,[rip+0x9dcd]        # 413f20 <__bss_start@@Base+0xdb8>
  40a153:	mov    rdx,rcx
  40a156:	add    rdx,0x18
  40a15d:	add    rcx,0x20
  40a164:	mov    rsi,QWORD PTR [rax]
  40a167:	add    rsi,0x1
  40a16e:	mov    QWORD PTR [rax],rsi
  40a171:	mov    rax,QWORD PTR [rbp-0x38]
  40a175:	cmp    DWORD PTR [rax],0xc
  40a178:	mov    QWORD PTR [rbp-0x78],rdx
  40a17c:	mov    QWORD PTR [rbp-0x80],rcx
  40a180:	jne    40a1ce <read_boolean_binary_expression@@Base+0x12e>
  40a186:	mov    rax,QWORD PTR [rbp-0x78]
  40a18a:	mov    rcx,QWORD PTR [rax]
  40a18d:	add    rcx,0x1
  40a194:	mov    QWORD PTR [rax],rcx
  40a197:	mov    rax,QWORD PTR [rbp-0x10]
  40a19b:	mov    rdi,QWORD PTR [rax]
  40a19e:	mov    rsi,QWORD PTR [rbp-0x38]
  40a1a2:	call   404ba0 <push_back@@Base>
  40a1a7:	mov    rdi,QWORD PTR [rbp-0x10]
  40a1ab:	call   40a450 <read_boolean_unary_expression@@Base>
  40a1b0:	lea    rcx,[rip+0x9d69]        # 413f20 <__bss_start@@Base+0xdb8>
  40a1b7:	add    rcx,0x28
  40a1be:	mov    QWORD PTR [rbp-0x8],rax
  40a1c2:	mov    QWORD PTR [rbp-0x88],rcx
  40a1c9:	jmp    40a40e <read_boolean_binary_expression@@Base+0x36e>
  40a1ce:	mov    rax,QWORD PTR [rbp-0x80]
  40a1d2:	lea    rcx,[rip+0x9d47]        # 413f20 <__bss_start@@Base+0xdb8>
  40a1d9:	add    rcx,0x30
  40a1e0:	mov    rdx,QWORD PTR [rax]
  40a1e3:	add    rdx,0x1
  40a1ea:	mov    QWORD PTR [rax],rdx
  40a1ed:	mov    QWORD PTR [rbp-0x8],0x0
  40a1f5:	mov    QWORD PTR [rbp-0x88],rcx
  40a1fc:	jmp    40a40e <read_boolean_binary_expression@@Base+0x36e>
  40a201:	mov    rax,QWORD PTR [rbp-0x70]
  40a205:	mov    rcx,QWORD PTR [rax]
  40a208:	add    rcx,0x1
  40a20f:	mov    QWORD PTR [rax],rcx
  40a212:	mov    rax,QWORD PTR [rbp-0x38]
  40a216:	mov    QWORD PTR [rbp-0x40],rax
  40a21a:	mov    edi,0x18
  40a21f:	call   4031b0 <malloc@plt>
  40a224:	mov    QWORD PTR [rbp-0x20],rax
  40a228:	mov    rax,QWORD PTR [rbp-0x20]
  40a22c:	mov    rcx,QWORD PTR [rbp-0x40]
  40a230:	mov    esi,DWORD PTR [rcx+0x4]
  40a233:	mov    rdi,rax
  40a236:	call   4079f0 <init_node_int@@Base>
  40a23b:	mov    rdi,QWORD PTR [rbp-0x40]
  40a23f:	call   404160 <free_token_int_value@@Base>
  40a244:	mov    rax,QWORD PTR [rbp-0x20]
  40a248:	mov    QWORD PTR [rbp-0x28],rax
  40a24c:	mov    rax,QWORD PTR [rbp-0x10]
  40a250:	mov    rdi,QWORD PTR [rax]
  40a253:	call   404e10 <next@@Base>
  40a258:	lea    rcx,[rip+0x9cc1]        # 413f20 <__bss_start@@Base+0xdb8>
  40a25f:	mov    rdx,rcx
  40a262:	add    rdx,0x38
  40a269:	add    rcx,0x40
  40a270:	mov    QWORD PTR [rbp-0x38],rax
  40a274:	mov    rax,QWORD PTR [rbp-0x38]
  40a278:	cmp    DWORD PTR [rax],0xc
  40a27b:	mov    QWORD PTR [rbp-0x90],rdx
  40a282:	mov    QWORD PTR [rbp-0x98],rcx
  40a289:	je     40a2cd <read_boolean_binary_expression@@Base+0x22d>
  40a28f:	mov    rax,QWORD PTR [rbp-0x90]
  40a296:	mov    rcx,QWORD PTR [rax]
  40a299:	add    rcx,0x1
  40a2a0:	mov    QWORD PTR [rax],rcx
  40a2a3:	mov    rdi,QWORD PTR [rbp-0x28]
  40a2a7:	call   407cc0 <free_node@@Base>
  40a2ac:	lea    rax,[rip+0x9c6d]        # 413f20 <__bss_start@@Base+0xdb8>
  40a2b3:	add    rax,0x48
  40a2b9:	mov    QWORD PTR [rbp-0x8],0x0
  40a2c1:	mov    QWORD PTR [rbp-0x88],rax
  40a2c8:	jmp    40a40e <read_boolean_binary_expression@@Base+0x36e>
  40a2cd:	mov    rax,QWORD PTR [rbp-0x98]
  40a2d4:	mov    rcx,QWORD PTR [rax]
  40a2d7:	add    rcx,0x1
  40a2de:	mov    QWORD PTR [rax],rcx
  40a2e1:	mov    rax,QWORD PTR [rbp-0x38]
  40a2e5:	mov    QWORD PTR [rbp-0x48],rax
  40a2e9:	mov    rdi,QWORD PTR [rbp-0x48]
  40a2ed:	call   408480 <get_boolean_op_value@@Base>
  40a2f2:	mov    DWORD PTR [rbp-0x4c],eax
  40a2f5:	mov    rdi,QWORD PTR [rbp-0x48]
  40a2f9:	call   404580 <free_token_boolean_op@@Base>
  40a2fe:	mov    rcx,QWORD PTR [rbp-0x10]
  40a302:	mov    rdi,QWORD PTR [rcx]
  40a305:	call   404e10 <next@@Base>
  40a30a:	lea    rcx,[rip+0x9c0f]        # 413f20 <__bss_start@@Base+0xdb8>
  40a311:	mov    rdx,rcx
  40a314:	add    rdx,0x50
  40a31b:	add    rcx,0x58
  40a322:	mov    QWORD PTR [rbp-0x38],rax
  40a326:	mov    rax,QWORD PTR [rbp-0x38]
  40a32a:	cmp    DWORD PTR [rax],0x1
  40a32d:	mov    QWORD PTR [rbp-0xa0],rdx
  40a334:	mov    QWORD PTR [rbp-0xa8],rcx
  40a33b:	je     40a37f <read_boolean_binary_expression@@Base+0x2df>
  40a341:	mov    rax,QWORD PTR [rbp-0xa0]
  40a348:	mov    rcx,QWORD PTR [rax]
  40a34b:	add    rcx,0x1
  40a352:	mov    QWORD PTR [rax],rcx
  40a355:	mov    rdi,QWORD PTR [rbp-0x28]
  40a359:	call   407cc0 <free_node@@Base>
  40a35e:	lea    rax,[rip+0x9bbb]        # 413f20 <__bss_start@@Base+0xdb8>
  40a365:	add    rax,0x60
  40a36b:	mov    QWORD PTR [rbp-0x8],0x0
  40a373:	mov    QWORD PTR [rbp-0x88],rax
  40a37a:	jmp    40a40e <read_boolean_binary_expression@@Base+0x36e>
  40a37f:	mov    rax,QWORD PTR [rbp-0xa8]
  40a386:	mov    rcx,QWORD PTR [rax]
  40a389:	add    rcx,0x1
  40a390:	mov    QWORD PTR [rax],rcx
  40a393:	mov    rax,QWORD PTR [rbp-0x38]
  40a397:	mov    QWORD PTR [rbp-0x40],rax
  40a39b:	mov    edi,0x18
  40a3a0:	call   4031b0 <malloc@plt>
  40a3a5:	mov    QWORD PTR [rbp-0x20],rax
  40a3a9:	mov    rax,QWORD PTR [rbp-0x20]
  40a3ad:	mov    rcx,QWORD PTR [rbp-0x40]
  40a3b1:	mov    esi,DWORD PTR [rcx+0x4]
  40a3b4:	mov    rdi,rax
  40a3b7:	call   4079f0 <init_node_int@@Base>
  40a3bc:	mov    rdi,QWORD PTR [rbp-0x40]
  40a3c0:	call   404160 <free_token_int_value@@Base>
  40a3c5:	mov    rax,QWORD PTR [rbp-0x20]
  40a3c9:	mov    QWORD PTR [rbp-0x30],rax
  40a3cd:	mov    edi,0x28
  40a3d2:	call   4031b0 <malloc@plt>
  40a3d7:	mov    QWORD PTR [rbp-0x18],rax
  40a3db:	mov    rax,QWORD PTR [rbp-0x18]
  40a3df:	mov    esi,DWORD PTR [rbp-0x4c]
  40a3e2:	mov    rdx,QWORD PTR [rbp-0x28]
  40a3e6:	mov    rcx,QWORD PTR [rbp-0x30]
  40a3ea:	mov    rdi,rax
  40a3ed:	call   407c10 <init_node_boolean_operator@@Base>
  40a3f2:	lea    rax,[rip+0x9b27]        # 413f20 <__bss_start@@Base+0xdb8>
  40a3f9:	add    rax,0x68
  40a3ff:	mov    rcx,QWORD PTR [rbp-0x18]
  40a403:	mov    QWORD PTR [rbp-0x8],rcx
  40a407:	mov    QWORD PTR [rbp-0x88],rax
  40a40e:	mov    rax,QWORD PTR [rbp-0x88]
  40a415:	mov    rcx,QWORD PTR [rax]
  40a418:	add    rcx,0x1
  40a41f:	mov    QWORD PTR [rax],rcx
  40a422:	mov    rax,QWORD PTR [rip+0x9b67]        # 413f90 <__bss_start@@Base+0xe28>
  40a429:	add    rax,0x1
  40a42f:	mov    QWORD PTR [rip+0x9b5a],rax        # 413f90 <__bss_start@@Base+0xe28>
  40a436:	mov    rax,QWORD PTR [rbp-0x8]
  40a43a:	add    rsp,0xb0
  40a441:	pop    rbp
  40a442:	ret    
  40a443:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a44d:	nop    DWORD PTR [rax]

000000000040a450 <read_boolean_unary_expression@@Base>:
  40a450:	push   rbp
  40a451:	mov    rbp,rsp
  40a454:	sub    rsp,0x80
  40a45b:	lea    rax,[rip+0x9b3e]        # 413fa0 <__bss_start@@Base+0xe38>
  40a462:	mov    QWORD PTR [rbp-0x48],rdi
  40a466:	mov    QWORD PTR [rbp-0x50],rax
  40a46a:	mov    rax,QWORD PTR [rbp-0x50]
  40a46e:	mov    rcx,QWORD PTR [rax]
  40a471:	add    rcx,0x1
  40a478:	mov    QWORD PTR [rax],rcx
  40a47b:	mov    rax,QWORD PTR [rbp-0x48]
  40a47f:	mov    QWORD PTR [rbp-0x10],rax
  40a483:	mov    QWORD PTR [rbp-0x18],0x0
  40a48b:	mov    QWORD PTR [rbp-0x20],0x0
  40a493:	mov    QWORD PTR [rbp-0x28],0x0
  40a49b:	mov    QWORD PTR [rbp-0x30],0x0
  40a4a3:	mov    QWORD PTR [rbp-0x38],0x0
  40a4ab:	mov    edi,0x28
  40a4b0:	call   4031b0 <malloc@plt>
  40a4b5:	mov    QWORD PTR [rbp-0x18],rax
  40a4b9:	mov    rax,QWORD PTR [rbp-0x10]
  40a4bd:	mov    rdi,QWORD PTR [rax]
  40a4c0:	call   404e10 <next@@Base>
  40a4c5:	lea    rcx,[rip+0x9ad4]        # 413fa0 <__bss_start@@Base+0xe38>
  40a4cc:	mov    rdx,rcx
  40a4cf:	add    rdx,0x8
  40a4d6:	add    rcx,0x10
  40a4dd:	mov    QWORD PTR [rbp-0x30],rax
  40a4e1:	mov    rax,QWORD PTR [rbp-0x30]
  40a4e5:	cmp    DWORD PTR [rax],0xc
  40a4e8:	mov    QWORD PTR [rbp-0x58],rdx
  40a4ec:	mov    QWORD PTR [rbp-0x60],rcx
  40a4f0:	je     40a531 <read_boolean_unary_expression@@Base+0xe1>
  40a4f6:	mov    rax,QWORD PTR [rbp-0x58]
  40a4fa:	mov    rcx,QWORD PTR [rax]
  40a4fd:	add    rcx,0x1
  40a504:	mov    QWORD PTR [rax],rcx
  40a507:	mov    rax,QWORD PTR [rbp-0x18]
  40a50b:	mov    rdi,rax
  40a50e:	call   4083a0 <free_node_boolean_operator@@Base>
  40a513:	lea    rax,[rip+0x9a86]        # 413fa0 <__bss_start@@Base+0xe38>
  40a51a:	add    rax,0x18
  40a520:	mov    QWORD PTR [rbp-0x8],0x0
  40a528:	mov    QWORD PTR [rbp-0x68],rax
  40a52c:	jmp    40a650 <read_boolean_unary_expression@@Base+0x200>
  40a531:	mov    rax,QWORD PTR [rbp-0x60]
  40a535:	mov    rcx,QWORD PTR [rax]
  40a538:	add    rcx,0x1
  40a53f:	mov    QWORD PTR [rax],rcx
  40a542:	mov    rax,QWORD PTR [rbp-0x30]
  40a546:	mov    rdi,rax
  40a549:	call   408480 <get_boolean_op_value@@Base>
  40a54e:	mov    DWORD PTR [rbp-0x3c],eax
  40a551:	mov    rcx,QWORD PTR [rbp-0x30]
  40a555:	mov    rdi,rcx
  40a558:	call   404580 <free_token_boolean_op@@Base>
  40a55d:	mov    rcx,QWORD PTR [rbp-0x10]
  40a561:	mov    rdi,QWORD PTR [rcx]
  40a564:	call   404e10 <next@@Base>
  40a569:	lea    rcx,[rip+0x9a30]        # 413fa0 <__bss_start@@Base+0xe38>
  40a570:	mov    rdx,rcx
  40a573:	add    rdx,0x20
  40a57a:	add    rcx,0x28
  40a581:	mov    QWORD PTR [rbp-0x30],rax
  40a585:	mov    rax,QWORD PTR [rbp-0x30]
  40a589:	cmp    DWORD PTR [rax],0x1
  40a58c:	mov    QWORD PTR [rbp-0x70],rdx
  40a590:	mov    QWORD PTR [rbp-0x78],rcx
  40a594:	je     40a5d5 <read_boolean_unary_expression@@Base+0x185>
  40a59a:	mov    rax,QWORD PTR [rbp-0x70]
  40a59e:	mov    rcx,QWORD PTR [rax]
  40a5a1:	add    rcx,0x1
  40a5a8:	mov    QWORD PTR [rax],rcx
  40a5ab:	mov    rax,QWORD PTR [rbp-0x18]
  40a5af:	mov    rdi,rax
  40a5b2:	call   4083a0 <free_node_boolean_operator@@Base>
  40a5b7:	lea    rax,[rip+0x99e2]        # 413fa0 <__bss_start@@Base+0xe38>
  40a5be:	add    rax,0x30
  40a5c4:	mov    QWORD PTR [rbp-0x8],0x0
  40a5cc:	mov    QWORD PTR [rbp-0x68],rax
  40a5d0:	jmp    40a650 <read_boolean_unary_expression@@Base+0x200>
  40a5d5:	mov    rax,QWORD PTR [rbp-0x78]
  40a5d9:	mov    rcx,QWORD PTR [rax]
  40a5dc:	add    rcx,0x1
  40a5e3:	mov    QWORD PTR [rax],rcx
  40a5e6:	mov    rax,QWORD PTR [rbp-0x30]
  40a5ea:	mov    QWORD PTR [rbp-0x38],rax
  40a5ee:	mov    edi,0x18
  40a5f3:	call   4031b0 <malloc@plt>
  40a5f8:	mov    QWORD PTR [rbp-0x20],rax
  40a5fc:	mov    rax,QWORD PTR [rbp-0x20]
  40a600:	mov    rcx,QWORD PTR [rbp-0x38]
  40a604:	mov    esi,DWORD PTR [rcx+0x4]
  40a607:	mov    rdi,rax
  40a60a:	call   4079f0 <init_node_int@@Base>
  40a60f:	mov    rdi,QWORD PTR [rbp-0x38]
  40a613:	call   404160 <free_token_int_value@@Base>
  40a618:	xor    edx,edx
  40a61a:	mov    ecx,edx
  40a61c:	mov    rax,QWORD PTR [rbp-0x20]
  40a620:	mov    QWORD PTR [rbp-0x28],rax
  40a624:	mov    rax,QWORD PTR [rbp-0x18]
  40a628:	mov    esi,DWORD PTR [rbp-0x3c]
  40a62b:	mov    rdx,QWORD PTR [rbp-0x28]
  40a62f:	mov    rdi,rax
  40a632:	call   407c10 <init_node_boolean_operator@@Base>
  40a637:	lea    rax,[rip+0x9962]        # 413fa0 <__bss_start@@Base+0xe38>
  40a63e:	add    rax,0x38
  40a644:	mov    rcx,QWORD PTR [rbp-0x18]
  40a648:	mov    QWORD PTR [rbp-0x8],rcx
  40a64c:	mov    QWORD PTR [rbp-0x68],rax
  40a650:	mov    rax,QWORD PTR [rbp-0x68]
  40a654:	mov    rcx,QWORD PTR [rax]
  40a657:	add    rcx,0x1
  40a65e:	mov    QWORD PTR [rax],rcx
  40a661:	mov    rax,QWORD PTR [rip+0x9978]        # 413fe0 <__bss_start@@Base+0xe78>
  40a668:	add    rax,0x1
  40a66e:	mov    QWORD PTR [rip+0x996b],rax        # 413fe0 <__bss_start@@Base+0xe78>
  40a675:	mov    rax,QWORD PTR [rbp-0x8]
  40a679:	add    rsp,0x80
  40a680:	pop    rbp
  40a681:	ret    
  40a682:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a68c:	nop    DWORD PTR [rax+0x0]
  40a690:	sub    rsp,0x38
  40a694:	xor    eax,eax
  40a696:	mov    DWORD PTR [rsp+0x34],eax
  40a69a:	jmp    40a69f <read_boolean_unary_expression@@Base+0x24f>
  40a69f:	mov    eax,DWORD PTR [rsp+0x34]
  40a6a3:	movsxd rcx,eax
  40a6a6:	imul   rcx,rcx,0x30
  40a6ad:	lea    rdx,[rip+0x846c]        # 412b20 <_IO_stdin_used@@Base+0x4b20>
  40a6b4:	add    rdx,rcx
  40a6b7:	mov    rdi,QWORD PTR [rdx]
  40a6ba:	mov    rsi,QWORD PTR [rdx+0x8]
  40a6be:	mov    r8d,DWORD PTR [rdx+0x10]
  40a6c2:	mov    QWORD PTR [rsp+0x28],rdx
  40a6c7:	mov    edx,r8d
  40a6ca:	mov    DWORD PTR [rsp+0x24],eax
  40a6ce:	call   40c050 <__generate_code_for_binary_boolean_expression@@Base+0x8f0>
  40a6d3:	xor    eax,eax
  40a6d5:	mov    rcx,QWORD PTR [rsp+0x28]
  40a6da:	mov    edx,DWORD PTR [rcx+0x18]
  40a6dd:	mov    rsi,QWORD PTR [rcx+0x20]
  40a6e1:	mov    rdi,QWORD PTR [rcx+0x28]
  40a6e5:	cmp    eax,edx
  40a6e7:	mov    DWORD PTR [rsp+0x20],edx
  40a6eb:	mov    QWORD PTR [rsp+0x18],rsi
  40a6f0:	mov    QWORD PTR [rsp+0x10],rdi
  40a6f5:	mov    DWORD PTR [rsp+0xc],eax
  40a6f9:	jge    40a76d <read_boolean_unary_expression@@Base+0x31d>
  40a6ff:	mov    eax,DWORD PTR [rsp+0xc]
  40a703:	movsxd rcx,eax
  40a706:	shl    rcx,0x5
  40a70a:	mov    rdx,QWORD PTR [rsp+0x18]
  40a70f:	add    rdx,rcx
  40a712:	mov    edi,DWORD PTR [rdx]
  40a714:	mov    rsi,QWORD PTR [rdx+0x8]
  40a718:	mov    r8d,DWORD PTR [rdx+0x10]
  40a71c:	mov    r9b,BYTE PTR [rdx+0x14]
  40a720:	mov    r10d,DWORD PTR [rdx+0x18]
  40a724:	mov    edx,r8d
  40a727:	movzx  ecx,r9b
  40a72b:	mov    r8d,r10d
  40a72e:	mov    DWORD PTR [rsp+0x8],eax
  40a732:	call   40c4a0 <__generate_code_for_binary_boolean_expression@@Base+0xd40>
  40a737:	mov    eax,DWORD PTR [rsp+0x8]
  40a73b:	movsxd rsi,eax
  40a73e:	shl    rsi,0x4
  40a742:	mov    r11,QWORD PTR [rsp+0x10]
  40a747:	add    r11,rsi
  40a74a:	mov    edi,DWORD PTR [r11]
  40a74d:	mov    rsi,QWORD PTR [r11+0x8]
  40a751:	call   40c8c0 <__generate_code_for_binary_boolean_expression@@Base+0x1160>
  40a756:	mov    eax,DWORD PTR [rsp+0x8]
  40a75a:	add    eax,0x1
  40a75d:	mov    ecx,DWORD PTR [rsp+0x20]
  40a761:	cmp    eax,ecx
  40a763:	mov    DWORD PTR [rsp+0xc],eax
  40a767:	jl     40a6ff <read_boolean_unary_expression@@Base+0x2af>
  40a76d:	call   40ccd0 <__generate_code_for_binary_boolean_expression@@Base+0x1570>
  40a772:	call   40d470 <__generate_code_for_binary_boolean_expression@@Base+0x1d10>
  40a777:	mov    eax,DWORD PTR [rsp+0x24]
  40a77b:	add    eax,0x1
  40a77e:	cmp    eax,0x1
  40a781:	mov    DWORD PTR [rsp+0x34],eax
  40a785:	jl     40a69f <read_boolean_unary_expression@@Base+0x24f>
  40a78b:	add    rsp,0x38
  40a78f:	ret    
  40a790:	push   rax
  40a791:	call   40a690 <read_boolean_unary_expression@@Base+0x240>
  40a796:	mov    QWORD PTR [rip+0x94d7],0x0        # 413c78 <__bss_start@@Base+0xb10>
  40a7a1:	mov    QWORD PTR [rip+0x94c4],0x0        # 413c70 <__bss_start@@Base+0xb08>
  40a7ac:	mov    QWORD PTR [rip+0x94d1],0x0        # 413c88 <__bss_start@@Base+0xb20>
  40a7b7:	mov    QWORD PTR [rip+0x94be],0x0        # 413c80 <__bss_start@@Base+0xb18>
  40a7c2:	mov    QWORD PTR [rip+0x94cb],0x0        # 413c98 <__bss_start@@Base+0xb30>
  40a7cd:	mov    QWORD PTR [rip+0x94b8],0x0        # 413c90 <__bss_start@@Base+0xb28>
  40a7d8:	mov    QWORD PTR [rip+0x952d],0x0        # 413d10 <__bss_start@@Base+0xba8>
  40a7e3:	mov    QWORD PTR [rip+0x951a],0x0        # 413d08 <__bss_start@@Base+0xba0>
  40a7ee:	mov    QWORD PTR [rip+0x9507],0x0        # 413d00 <__bss_start@@Base+0xb98>
  40a7f9:	mov    QWORD PTR [rip+0x94f4],0x0        # 413cf8 <__bss_start@@Base+0xb90>
  40a804:	mov    QWORD PTR [rip+0x94e1],0x0        # 413cf0 <__bss_start@@Base+0xb88>
  40a80f:	mov    QWORD PTR [rip+0x94ce],0x0        # 413ce8 <__bss_start@@Base+0xb80>
  40a81a:	mov    QWORD PTR [rip+0x94bb],0x0        # 413ce0 <__bss_start@@Base+0xb78>
  40a825:	mov    QWORD PTR [rip+0x94a8],0x0        # 413cd8 <__bss_start@@Base+0xb70>
  40a830:	mov    QWORD PTR [rip+0x9495],0x0        # 413cd0 <__bss_start@@Base+0xb68>
  40a83b:	mov    QWORD PTR [rip+0x9482],0x0        # 413cc8 <__bss_start@@Base+0xb60>
  40a846:	mov    QWORD PTR [rip+0x946f],0x0        # 413cc0 <__bss_start@@Base+0xb58>
  40a851:	mov    QWORD PTR [rip+0x945c],0x0        # 413cb8 <__bss_start@@Base+0xb50>
  40a85c:	mov    QWORD PTR [rip+0x9449],0x0        # 413cb0 <__bss_start@@Base+0xb48>
  40a867:	mov    QWORD PTR [rip+0x9436],0x0        # 413ca8 <__bss_start@@Base+0xb40>
  40a872:	mov    QWORD PTR [rip+0x9423],0x0        # 413ca0 <__bss_start@@Base+0xb38>
  40a87d:	mov    QWORD PTR [rip+0x9530],0x0        # 413db8 <__bss_start@@Base+0xc50>
  40a888:	mov    QWORD PTR [rip+0x951d],0x0        # 413db0 <__bss_start@@Base+0xc48>
  40a893:	mov    QWORD PTR [rip+0x950a],0x0        # 413da8 <__bss_start@@Base+0xc40>
  40a89e:	mov    QWORD PTR [rip+0x94f7],0x0        # 413da0 <__bss_start@@Base+0xc38>
  40a8a9:	mov    QWORD PTR [rip+0x94e4],0x0        # 413d98 <__bss_start@@Base+0xc30>
  40a8b4:	mov    QWORD PTR [rip+0x94d1],0x0        # 413d90 <__bss_start@@Base+0xc28>
  40a8bf:	mov    QWORD PTR [rip+0x94be],0x0        # 413d88 <__bss_start@@Base+0xc20>
  40a8ca:	mov    QWORD PTR [rip+0x94ab],0x0        # 413d80 <__bss_start@@Base+0xc18>
  40a8d5:	mov    QWORD PTR [rip+0x9498],0x0        # 413d78 <__bss_start@@Base+0xc10>
  40a8e0:	mov    QWORD PTR [rip+0x9485],0x0        # 413d70 <__bss_start@@Base+0xc08>
  40a8eb:	mov    QWORD PTR [rip+0x9472],0x0        # 413d68 <__bss_start@@Base+0xc00>
  40a8f6:	mov    QWORD PTR [rip+0x945f],0x0        # 413d60 <__bss_start@@Base+0xbf8>
  40a901:	mov    QWORD PTR [rip+0x944c],0x0        # 413d58 <__bss_start@@Base+0xbf0>
  40a90c:	mov    QWORD PTR [rip+0x9439],0x0        # 413d50 <__bss_start@@Base+0xbe8>
  40a917:	mov    QWORD PTR [rip+0x9426],0x0        # 413d48 <__bss_start@@Base+0xbe0>
  40a922:	mov    QWORD PTR [rip+0x9413],0x0        # 413d40 <__bss_start@@Base+0xbd8>
  40a92d:	mov    QWORD PTR [rip+0x9400],0x0        # 413d38 <__bss_start@@Base+0xbd0>
  40a938:	mov    QWORD PTR [rip+0x93ed],0x0        # 413d30 <__bss_start@@Base+0xbc8>
  40a943:	mov    QWORD PTR [rip+0x93da],0x0        # 413d28 <__bss_start@@Base+0xbc0>
  40a94e:	mov    QWORD PTR [rip+0x93c7],0x0        # 413d20 <__bss_start@@Base+0xbb8>
  40a959:	mov    QWORD PTR [rip+0x949c],0x0        # 413e00 <__bss_start@@Base+0xc98>
  40a964:	mov    QWORD PTR [rip+0x9489],0x0        # 413df8 <__bss_start@@Base+0xc90>
  40a96f:	mov    QWORD PTR [rip+0x9476],0x0        # 413df0 <__bss_start@@Base+0xc88>
  40a97a:	mov    QWORD PTR [rip+0x9463],0x0        # 413de8 <__bss_start@@Base+0xc80>
  40a985:	mov    QWORD PTR [rip+0x9450],0x0        # 413de0 <__bss_start@@Base+0xc78>
  40a990:	mov    QWORD PTR [rip+0x943d],0x0        # 413dd8 <__bss_start@@Base+0xc70>
  40a99b:	mov    QWORD PTR [rip+0x942a],0x0        # 413dd0 <__bss_start@@Base+0xc68>
  40a9a6:	mov    QWORD PTR [rip+0x9417],0x0        # 413dc8 <__bss_start@@Base+0xc60>
  40a9b1:	mov    QWORD PTR [rip+0x9404],0x0        # 413dc0 <__bss_start@@Base+0xc58>
  40a9bc:	mov    QWORD PTR [rip+0x9491],0x0        # 413e58 <__bss_start@@Base+0xcf0>
  40a9c7:	mov    QWORD PTR [rip+0x947e],0x0        # 413e50 <__bss_start@@Base+0xce8>
  40a9d2:	mov    QWORD PTR [rip+0x946b],0x0        # 413e48 <__bss_start@@Base+0xce0>
  40a9dd:	mov    QWORD PTR [rip+0x9458],0x0        # 413e40 <__bss_start@@Base+0xcd8>
  40a9e8:	mov    QWORD PTR [rip+0x9445],0x0        # 413e38 <__bss_start@@Base+0xcd0>
  40a9f3:	mov    QWORD PTR [rip+0x9432],0x0        # 413e30 <__bss_start@@Base+0xcc8>
  40a9fe:	mov    QWORD PTR [rip+0x941f],0x0        # 413e28 <__bss_start@@Base+0xcc0>
  40aa09:	mov    QWORD PTR [rip+0x940c],0x0        # 413e20 <__bss_start@@Base+0xcb8>
  40aa14:	mov    QWORD PTR [rip+0x93f9],0x0        # 413e18 <__bss_start@@Base+0xcb0>
  40aa1f:	mov    QWORD PTR [rip+0x93e6],0x0        # 413e10 <__bss_start@@Base+0xca8>
  40aa2a:	mov    QWORD PTR [rip+0x948b],0x0        # 413ec0 <__bss_start@@Base+0xd58>
  40aa35:	mov    QWORD PTR [rip+0x9478],0x0        # 413eb8 <__bss_start@@Base+0xd50>
  40aa40:	mov    QWORD PTR [rip+0x9465],0x0        # 413eb0 <__bss_start@@Base+0xd48>
  40aa4b:	mov    QWORD PTR [rip+0x9452],0x0        # 413ea8 <__bss_start@@Base+0xd40>
  40aa56:	mov    QWORD PTR [rip+0x943f],0x0        # 413ea0 <__bss_start@@Base+0xd38>
  40aa61:	mov    QWORD PTR [rip+0x942c],0x0        # 413e98 <__bss_start@@Base+0xd30>
  40aa6c:	mov    QWORD PTR [rip+0x9419],0x0        # 413e90 <__bss_start@@Base+0xd28>
  40aa77:	mov    QWORD PTR [rip+0x9406],0x0        # 413e88 <__bss_start@@Base+0xd20>
  40aa82:	mov    QWORD PTR [rip+0x93f3],0x0        # 413e80 <__bss_start@@Base+0xd18>
  40aa8d:	mov    QWORD PTR [rip+0x93e0],0x0        # 413e78 <__bss_start@@Base+0xd10>
  40aa98:	mov    QWORD PTR [rip+0x93cd],0x0        # 413e70 <__bss_start@@Base+0xd08>
  40aaa3:	mov    QWORD PTR [rip+0x93ba],0x0        # 413e68 <__bss_start@@Base+0xd00>
  40aaae:	mov    QWORD PTR [rip+0x93a7],0x0        # 413e60 <__bss_start@@Base+0xcf8>
  40aab9:	mov    QWORD PTR [rip+0x944c],0x0        # 413f10 <__bss_start@@Base+0xda8>
  40aac4:	mov    QWORD PTR [rip+0x9439],0x0        # 413f08 <__bss_start@@Base+0xda0>
  40aacf:	mov    QWORD PTR [rip+0x9426],0x0        # 413f00 <__bss_start@@Base+0xd98>
  40aada:	mov    QWORD PTR [rip+0x9413],0x0        # 413ef8 <__bss_start@@Base+0xd90>
  40aae5:	mov    QWORD PTR [rip+0x9400],0x0        # 413ef0 <__bss_start@@Base+0xd88>
  40aaf0:	mov    QWORD PTR [rip+0x93ed],0x0        # 413ee8 <__bss_start@@Base+0xd80>
  40aafb:	mov    QWORD PTR [rip+0x93da],0x0        # 413ee0 <__bss_start@@Base+0xd78>
  40ab06:	mov    QWORD PTR [rip+0x93c7],0x0        # 413ed8 <__bss_start@@Base+0xd70>
  40ab11:	mov    QWORD PTR [rip+0x93b4],0x0        # 413ed0 <__bss_start@@Base+0xd68>
  40ab1c:	mov    QWORD PTR [rip+0x9469],0x0        # 413f90 <__bss_start@@Base+0xe28>
  40ab27:	mov    QWORD PTR [rip+0x9456],0x0        # 413f88 <__bss_start@@Base+0xe20>
  40ab32:	mov    QWORD PTR [rip+0x9443],0x0        # 413f80 <__bss_start@@Base+0xe18>
  40ab3d:	mov    QWORD PTR [rip+0x9430],0x0        # 413f78 <__bss_start@@Base+0xe10>
  40ab48:	mov    QWORD PTR [rip+0x941d],0x0        # 413f70 <__bss_start@@Base+0xe08>
  40ab53:	mov    QWORD PTR [rip+0x940a],0x0        # 413f68 <__bss_start@@Base+0xe00>
  40ab5e:	mov    QWORD PTR [rip+0x93f7],0x0        # 413f60 <__bss_start@@Base+0xdf8>
  40ab69:	mov    QWORD PTR [rip+0x93e4],0x0        # 413f58 <__bss_start@@Base+0xdf0>
  40ab74:	mov    QWORD PTR [rip+0x93d1],0x0        # 413f50 <__bss_start@@Base+0xde8>
  40ab7f:	mov    QWORD PTR [rip+0x93be],0x0        # 413f48 <__bss_start@@Base+0xde0>
  40ab8a:	mov    QWORD PTR [rip+0x93ab],0x0        # 413f40 <__bss_start@@Base+0xdd8>
  40ab95:	mov    QWORD PTR [rip+0x9398],0x0        # 413f38 <__bss_start@@Base+0xdd0>
  40aba0:	mov    QWORD PTR [rip+0x9385],0x0        # 413f30 <__bss_start@@Base+0xdc8>
  40abab:	mov    QWORD PTR [rip+0x9372],0x0        # 413f28 <__bss_start@@Base+0xdc0>
  40abb6:	mov    QWORD PTR [rip+0x935f],0x0        # 413f20 <__bss_start@@Base+0xdb8>
  40abc1:	mov    QWORD PTR [rip+0x9414],0x0        # 413fe0 <__bss_start@@Base+0xe78>
  40abcc:	mov    QWORD PTR [rip+0x9401],0x0        # 413fd8 <__bss_start@@Base+0xe70>
  40abd7:	mov    QWORD PTR [rip+0x93ee],0x0        # 413fd0 <__bss_start@@Base+0xe68>
  40abe2:	mov    QWORD PTR [rip+0x93db],0x0        # 413fc8 <__bss_start@@Base+0xe60>
  40abed:	mov    QWORD PTR [rip+0x93c8],0x0        # 413fc0 <__bss_start@@Base+0xe58>
  40abf8:	mov    QWORD PTR [rip+0x93b5],0x0        # 413fb8 <__bss_start@@Base+0xe50>
  40ac03:	mov    QWORD PTR [rip+0x93a2],0x0        # 413fb0 <__bss_start@@Base+0xe48>
  40ac0e:	mov    QWORD PTR [rip+0x938f],0x0        # 413fa8 <__bss_start@@Base+0xe40>
  40ac19:	mov    QWORD PTR [rip+0x937c],0x0        # 413fa0 <__bss_start@@Base+0xe38>
  40ac24:	pop    rax
  40ac25:	ret    
  40ac26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ac30:	push   rax
  40ac31:	lea    rdi,[rip+0xfffffffffffffa58]        # 40a690 <read_boolean_unary_expression@@Base+0x240>
  40ac38:	lea    rsi,[rip+0xfffffffffffffb51]        # 40a790 <read_boolean_unary_expression@@Base+0x340>
  40ac3f:	call   40d850 <__gcov_flush@@Base+0xb0>
  40ac44:	pop    rax
  40ac45:	ret    
  40ac46:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000040ac50 <init_generator@@Base>:
  40ac50:	push   rbp
  40ac51:	mov    rbp,rsp
  40ac54:	sub    rsp,0x40
  40ac58:	lea    rax,[rip+0x9391]        # 413ff0 <__bss_start@@Base+0xe88>
  40ac5f:	mov    QWORD PTR [rbp-0x20],rdi
  40ac63:	mov    QWORD PTR [rbp-0x28],rsi
  40ac67:	mov    QWORD PTR [rbp-0x30],rdx
  40ac6b:	mov    QWORD PTR [rbp-0x38],rax
  40ac6f:	mov    rax,QWORD PTR [rbp-0x38]
  40ac73:	mov    rcx,QWORD PTR [rax]
  40ac76:	add    rcx,0x1
  40ac7d:	mov    QWORD PTR [rax],rcx
  40ac80:	mov    rax,QWORD PTR [rip+0x9371]        # 413ff8 <__bss_start@@Base+0xe90>
  40ac87:	add    rax,0x1
  40ac8d:	mov    QWORD PTR [rip+0x9364],rax        # 413ff8 <__bss_start@@Base+0xe90>
  40ac94:	mov    rax,QWORD PTR [rbp-0x20]
  40ac98:	mov    QWORD PTR [rbp-0x8],rax
  40ac9c:	mov    rcx,QWORD PTR [rbp-0x28]
  40aca0:	mov    QWORD PTR [rbp-0x10],rcx
  40aca4:	mov    rdx,QWORD PTR [rbp-0x30]
  40aca8:	mov    QWORD PTR [rbp-0x18],rdx
  40acac:	mov    rsi,QWORD PTR [rbp-0x10]
  40acb0:	mov    rdi,QWORD PTR [rbp-0x8]
  40acb4:	mov    QWORD PTR [rdi],rsi
  40acb7:	mov    rdi,QWORD PTR [rbp-0x18]
  40acbb:	lea    rsi,[rip+0x3ba2]        # 40e864 <_IO_stdin_used@@Base+0x864>
  40acc2:	call   403220 <fopen@plt>
  40acc7:	mov    rcx,QWORD PTR [rbp-0x8]
  40accb:	mov    QWORD PTR [rcx+0x8],rax
  40accf:	mov    rax,QWORD PTR [rbp-0x8]
  40acd3:	mov    QWORD PTR [rax+0x10],0x0
  40acdb:	add    rsp,0x40
  40acdf:	pop    rbp
  40ace0:	ret    
  40ace1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40aceb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040acf0 <destroy_generator@@Base>:
  40acf0:	push   rbp
  40acf1:	mov    rbp,rsp
  40acf4:	sub    rsp,0x20
  40acf8:	lea    rax,[rip+0x9301]        # 414000 <__bss_start@@Base+0xe98>
  40acff:	mov    QWORD PTR [rbp-0x10],rdi
  40ad03:	mov    QWORD PTR [rbp-0x18],rax
  40ad07:	mov    rax,QWORD PTR [rbp-0x18]
  40ad0b:	mov    rcx,QWORD PTR [rax]
  40ad0e:	add    rcx,0x1
  40ad15:	mov    QWORD PTR [rax],rcx
  40ad18:	mov    rax,QWORD PTR [rip+0x92e9]        # 414008 <__bss_start@@Base+0xea0>
  40ad1f:	add    rax,0x1
  40ad25:	mov    QWORD PTR [rip+0x92dc],rax        # 414008 <__bss_start@@Base+0xea0>
  40ad2c:	mov    rax,QWORD PTR [rbp-0x10]
  40ad30:	mov    QWORD PTR [rbp-0x8],rax
  40ad34:	mov    rcx,QWORD PTR [rbp-0x8]
  40ad38:	mov    rdi,QWORD PTR [rcx+0x8]
  40ad3c:	call   4030c0 <fclose@plt>
  40ad41:	add    rsp,0x20
  40ad45:	pop    rbp
  40ad46:	ret    
  40ad47:	nop    WORD PTR [rax+rax*1+0x0]

000000000040ad50 <generate_code@@Base>:
  40ad50:	push   rbp
  40ad51:	mov    rbp,rsp
  40ad54:	sub    rsp,0x20
  40ad58:	lea    rax,[rip+0x92b1]        # 414010 <__bss_start@@Base+0xea8>
  40ad5f:	mov    QWORD PTR [rbp-0x18],rdi
  40ad63:	mov    QWORD PTR [rbp-0x20],rax
  40ad67:	mov    rax,QWORD PTR [rbp-0x20]
  40ad6b:	mov    rcx,QWORD PTR [rax]
  40ad6e:	add    rcx,0x1
  40ad75:	mov    QWORD PTR [rax],rcx
  40ad78:	mov    rax,QWORD PTR [rip+0x9299]        # 414018 <__bss_start@@Base+0xeb0>
  40ad7f:	add    rax,0x1
  40ad85:	mov    QWORD PTR [rip+0x928c],rax        # 414018 <__bss_start@@Base+0xeb0>
  40ad8c:	mov    rax,QWORD PTR [rbp-0x18]
  40ad90:	mov    QWORD PTR [rbp-0x8],rax
  40ad94:	mov    QWORD PTR [rbp-0x10],0x0
  40ad9c:	mov    rcx,QWORD PTR [rbp-0x8]
  40ada0:	mov    rdi,QWORD PTR [rcx]
  40ada3:	call   409000 <build_ast@@Base>
  40ada8:	mov    QWORD PTR [rbp-0x10],rax
  40adac:	mov    rdi,QWORD PTR [rbp-0x8]
  40adb0:	mov    rsi,QWORD PTR [rbp-0x10]
  40adb4:	call   40add0 <__generate_code@@Base>
  40adb9:	mov    rdi,QWORD PTR [rbp-0x10]
  40adbd:	call   407cc0 <free_node@@Base>
  40adc2:	add    rsp,0x20
  40adc6:	pop    rbp
  40adc7:	ret    
  40adc8:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040add0 <__generate_code@@Base>:
  40add0:	push   rbp
  40add1:	mov    rbp,rsp
  40add4:	sub    rsp,0x30
  40add8:	lea    rax,[rip+0x9241]        # 414020 <__bss_start@@Base+0xeb8>
  40addf:	mov    QWORD PTR [rbp-0x18],rdi
  40ade3:	mov    QWORD PTR [rbp-0x20],rsi
  40ade7:	mov    QWORD PTR [rbp-0x28],rax
  40adeb:	mov    rax,QWORD PTR [rbp-0x28]
  40adef:	mov    rcx,QWORD PTR [rax]
  40adf2:	add    rcx,0x1
  40adf9:	mov    QWORD PTR [rax],rcx
  40adfc:	mov    rax,QWORD PTR [rip+0x9225]        # 414028 <__bss_start@@Base+0xec0>
  40ae03:	add    rax,0x1
  40ae09:	mov    QWORD PTR [rip+0x9218],rax        # 414028 <__bss_start@@Base+0xec0>
  40ae10:	mov    rax,QWORD PTR [rbp-0x18]
  40ae14:	mov    QWORD PTR [rbp-0x8],rax
  40ae18:	mov    rcx,QWORD PTR [rbp-0x20]
  40ae1c:	mov    QWORD PTR [rbp-0x10],rcx
  40ae20:	mov    rdx,QWORD PTR [rbp-0x8]
  40ae24:	mov    rdi,QWORD PTR [rdx+0x8]
  40ae28:	lea    rsi,[rip+0x3a37]        # 40e866 <_IO_stdin_used@@Base+0x866>
  40ae2f:	mov    al,0x0
  40ae31:	call   403150 <fprintf@plt>
  40ae36:	mov    rdi,QWORD PTR [rbp-0x8]
  40ae3a:	mov    rsi,QWORD PTR [rbp-0x10]
  40ae3e:	mov    DWORD PTR [rbp-0x2c],eax
  40ae41:	call   40ae50 <__generate_code_for_main@@Base>
  40ae46:	add    rsp,0x30
  40ae4a:	pop    rbp
  40ae4b:	ret    
  40ae4c:	nop    DWORD PTR [rax+0x0]

000000000040ae50 <__generate_code_for_main@@Base>:
  40ae50:	push   rbp
  40ae51:	mov    rbp,rsp
  40ae54:	sub    rsp,0x50
  40ae58:	lea    rax,[rip+0x91d1]        # 414030 <__bss_start@@Base+0xec8>
  40ae5f:	mov    QWORD PTR [rbp-0x18],rdi
  40ae63:	mov    QWORD PTR [rbp-0x20],rsi
  40ae67:	mov    QWORD PTR [rbp-0x28],rax
  40ae6b:	mov    rax,QWORD PTR [rbp-0x28]
  40ae6f:	mov    rcx,QWORD PTR [rax]
  40ae72:	inc    rcx
  40ae75:	mov    QWORD PTR [rax],rcx
  40ae78:	mov    rax,QWORD PTR [rbp-0x18]
  40ae7c:	mov    QWORD PTR [rbp-0x8],rax
  40ae80:	mov    rcx,QWORD PTR [rbp-0x20]
  40ae84:	mov    QWORD PTR [rbp-0x10],rcx
  40ae88:	mov    rdx,QWORD PTR [rbp-0x10]
  40ae8c:	mov    esi,DWORD PTR [rdx]
  40ae8e:	lea    rdx,[rip+0x91ab]        # 414040 <__bss_start@@Base+0xed8>
  40ae95:	lea    rdi,[rip+0x919c]        # 414038 <__bss_start@@Base+0xed0>
  40ae9c:	sub    esi,0x2
  40ae9f:	mov    QWORD PTR [rbp-0x30],rdx
  40aea3:	mov    QWORD PTR [rbp-0x38],rdi
  40aea7:	jne    40aee9 <__generate_code_for_main@@Base+0x99>
  40aead:	jmp    40aeb2 <__generate_code_for_main@@Base+0x62>
  40aeb2:	mov    rax,QWORD PTR [rbp-0x30]
  40aeb6:	mov    rcx,QWORD PTR [rax]
  40aeb9:	add    rcx,0x1
  40aec0:	mov    QWORD PTR [rax],rcx
  40aec3:	mov    rdi,QWORD PTR [rbp-0x8]
  40aec7:	mov    rax,QWORD PTR [rbp-0x10]
  40aecb:	mov    rsi,rax
  40aece:	call   40af50 <__generate_code_for_function@@Base>
  40aed3:	lea    rax,[rip+0x9156]        # 414030 <__bss_start@@Base+0xec8>
  40aeda:	add    rax,0x18
  40aee0:	mov    QWORD PTR [rbp-0x40],rax
  40aee4:	jmp    40af1f <__generate_code_for_main@@Base+0xcf>
  40aee9:	mov    rax,QWORD PTR [rbp-0x38]
  40aeed:	mov    rcx,QWORD PTR [rip+0x80fc]        # 412ff0 <stderr@GLIBC_2.2.5>
  40aef4:	mov    rdx,QWORD PTR [rax]
  40aef7:	add    rdx,0x1
  40aefe:	mov    QWORD PTR [rax],rdx
  40af01:	mov    rdi,QWORD PTR [rcx]
  40af04:	lea    rsi,[rip+0x3971]        # 40e87c <_IO_stdin_used@@Base+0x87c>
  40af0b:	mov    al,0x0
  40af0d:	call   403150 <fprintf@plt>
  40af12:	mov    edi,0x1
  40af17:	mov    DWORD PTR [rbp-0x44],eax
  40af1a:	call   403260 <exit@plt>
  40af1f:	mov    rax,QWORD PTR [rbp-0x40]
  40af23:	mov    rcx,QWORD PTR [rax]
  40af26:	add    rcx,0x1
  40af2d:	mov    QWORD PTR [rax],rcx
  40af30:	mov    rax,QWORD PTR [rip+0x9119]        # 414050 <__bss_start@@Base+0xee8>
  40af37:	add    rax,0x1
  40af3d:	mov    QWORD PTR [rip+0x910c],rax        # 414050 <__bss_start@@Base+0xee8>
  40af44:	add    rsp,0x50
  40af48:	pop    rbp
  40af49:	ret    
  40af4a:	nop    WORD PTR [rax+rax*1+0x0]

000000000040af50 <__generate_code_for_function@@Base>:
  40af50:	push   rbp
  40af51:	mov    rbp,rsp
  40af54:	sub    rsp,0x30
  40af58:	lea    rax,[rip+0x90f9]        # 414058 <__bss_start@@Base+0xef0>
  40af5f:	mov    QWORD PTR [rbp-0x18],rdi
  40af63:	mov    QWORD PTR [rbp-0x20],rsi
  40af67:	mov    QWORD PTR [rbp-0x28],rax
  40af6b:	mov    rax,QWORD PTR [rbp-0x28]
  40af6f:	mov    rcx,QWORD PTR [rax]
  40af72:	add    rcx,0x1
  40af79:	mov    QWORD PTR [rax],rcx
  40af7c:	mov    rax,QWORD PTR [rip+0x90dd]        # 414060 <__bss_start@@Base+0xef8>
  40af83:	add    rax,0x1
  40af89:	mov    QWORD PTR [rip+0x90d0],rax        # 414060 <__bss_start@@Base+0xef8>
  40af90:	mov    rax,QWORD PTR [rbp-0x18]
  40af94:	mov    QWORD PTR [rbp-0x8],rax
  40af98:	mov    rcx,QWORD PTR [rbp-0x20]
  40af9c:	mov    QWORD PTR [rbp-0x10],rcx
  40afa0:	mov    rdx,QWORD PTR [rbp-0x8]
  40afa4:	mov    rdi,QWORD PTR [rdx+0x8]
  40afa8:	mov    rdx,QWORD PTR [rbp-0x10]
  40afac:	mov    rdx,QWORD PTR [rdx+0x10]
  40afb0:	lea    rsi,[rip+0x38f4]        # 40e8ab <_IO_stdin_used@@Base+0x8ab>
  40afb7:	mov    al,0x0
  40afb9:	call   403150 <fprintf@plt>
  40afbe:	mov    rdi,QWORD PTR [rbp-0x8]
  40afc2:	mov    rcx,QWORD PTR [rbp-0x10]
  40afc6:	mov    rsi,QWORD PTR [rcx+0x18]
  40afca:	mov    DWORD PTR [rbp-0x2c],eax
  40afcd:	call   40afe0 <__generate_code_for_body@@Base>
  40afd2:	add    rsp,0x30
  40afd6:	pop    rbp
  40afd7:	ret    
  40afd8:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040afe0 <__generate_code_for_body@@Base>:
  40afe0:	push   rbp
  40afe1:	mov    rbp,rsp
  40afe4:	sub    rsp,0x90
  40afeb:	lea    rax,[rip+0x907e]        # 414070 <__bss_start@@Base+0xf08>
  40aff2:	mov    QWORD PTR [rbp-0x20],rdi
  40aff6:	mov    QWORD PTR [rbp-0x28],rsi
  40affa:	mov    QWORD PTR [rbp-0x30],rax
  40affe:	mov    rax,QWORD PTR [rbp-0x30]
  40b002:	lea    rcx,[rip+0x9067]        # 414070 <__bss_start@@Base+0xf08>
  40b009:	add    rcx,0x8
  40b010:	mov    rdx,QWORD PTR [rax]
  40b013:	add    rdx,0x1
  40b01a:	mov    QWORD PTR [rax],rdx
  40b01d:	mov    rax,QWORD PTR [rbp-0x20]
  40b021:	mov    QWORD PTR [rbp-0x8],rax
  40b025:	mov    rdx,QWORD PTR [rbp-0x28]
  40b029:	mov    QWORD PTR [rbp-0x10],rdx
  40b02d:	mov    QWORD PTR [rbp-0x18],0x0
  40b035:	mov    QWORD PTR [rbp-0x38],rcx
  40b039:	mov    rax,QWORD PTR [rbp-0x38]
  40b03d:	lea    rcx,[rip+0x902c]        # 414070 <__bss_start@@Base+0xf08>
  40b044:	mov    rdx,rcx
  40b047:	add    rdx,0x10
  40b04e:	add    rcx,0x18
  40b055:	mov    rsi,QWORD PTR [rax]
  40b058:	add    rsi,0x1
  40b05f:	mov    QWORD PTR [rax],rsi
  40b062:	cmp    QWORD PTR [rbp-0x10],0x0
  40b067:	mov    QWORD PTR [rbp-0x40],rdx
  40b06b:	mov    QWORD PTR [rbp-0x48],rcx
  40b06f:	je     40b1c0 <__generate_code_for_body@@Base+0x1e0>
  40b075:	mov    rax,QWORD PTR [rbp-0x40]
  40b079:	mov    rcx,QWORD PTR [rax]
  40b07c:	inc    rcx
  40b07f:	mov    QWORD PTR [rax],rcx
  40b082:	mov    rax,QWORD PTR [rbp-0x10]
  40b086:	mov    QWORD PTR [rbp-0x18],rax
  40b08a:	mov    rax,QWORD PTR [rbp-0x10]
  40b08e:	mov    rax,QWORD PTR [rax+0x8]
  40b092:	mov    QWORD PTR [rbp-0x10],rax
  40b096:	mov    rax,QWORD PTR [rbp-0x18]
  40b09a:	mov    edx,DWORD PTR [rax]
  40b09c:	lea    rax,[rip+0x8ffd]        # 4140a0 <__bss_start@@Base+0xf38>
  40b0a3:	lea    rcx,[rip+0x8fee]        # 414098 <__bss_start@@Base+0xf30>
  40b0aa:	lea    rsi,[rip+0x8fdf]        # 414090 <__bss_start@@Base+0xf28>
  40b0b1:	mov    edi,edx
  40b0b3:	sub    edi,0x3
  40b0b6:	mov    DWORD PTR [rbp-0x4c],edx
  40b0b9:	mov    QWORD PTR [rbp-0x58],rax
  40b0bd:	mov    QWORD PTR [rbp-0x60],rsi
  40b0c1:	mov    QWORD PTR [rbp-0x68],rcx
  40b0c5:	je     40b0f1 <__generate_code_for_body@@Base+0x111>
  40b0cb:	jmp    40b0d0 <__generate_code_for_body@@Base+0xf0>
  40b0d0:	mov    eax,DWORD PTR [rbp-0x4c]
  40b0d3:	sub    eax,0x4
  40b0d6:	mov    rcx,QWORD PTR [rbp-0x58]
  40b0da:	mov    rdx,QWORD PTR [rbp-0x60]
  40b0de:	mov    QWORD PTR [rbp-0x70],rcx
  40b0e2:	mov    QWORD PTR [rbp-0x78],rdx
  40b0e6:	je     40b128 <__generate_code_for_body@@Base+0x148>
  40b0ec:	jmp    40b15f <__generate_code_for_body@@Base+0x17f>
  40b0f1:	mov    rax,QWORD PTR [rbp-0x68]
  40b0f5:	mov    rcx,QWORD PTR [rax]
  40b0f8:	add    rcx,0x1
  40b0ff:	mov    QWORD PTR [rax],rcx
  40b102:	mov    rdi,QWORD PTR [rbp-0x8]
  40b106:	mov    rax,QWORD PTR [rbp-0x18]
  40b10a:	mov    rsi,rax
  40b10d:	call   40b430 <__generate_code_for_return@@Base>
  40b112:	lea    rax,[rip+0x8f57]        # 414070 <__bss_start@@Base+0xf08>
  40b119:	add    rax,0x38
  40b11f:	mov    QWORD PTR [rbp-0x80],rax
  40b123:	jmp    40b198 <__generate_code_for_body@@Base+0x1b8>
  40b128:	mov    rax,QWORD PTR [rbp-0x70]
  40b12c:	mov    rcx,QWORD PTR [rax]
  40b12f:	add    rcx,0x1
  40b136:	mov    QWORD PTR [rax],rcx
  40b139:	mov    rdi,QWORD PTR [rbp-0x8]
  40b13d:	mov    rax,QWORD PTR [rbp-0x18]
  40b141:	mov    rsi,rax
  40b144:	call   40b1f0 <__generate_code_for_if@@Base>
  40b149:	lea    rax,[rip+0x8f20]        # 414070 <__bss_start@@Base+0xf08>
  40b150:	add    rax,0x40
  40b156:	mov    QWORD PTR [rbp-0x80],rax
  40b15a:	jmp    40b198 <__generate_code_for_body@@Base+0x1b8>
  40b15f:	mov    rax,QWORD PTR [rbp-0x78]
  40b163:	mov    rcx,QWORD PTR [rip+0x7e86]        # 412ff0 <stderr@GLIBC_2.2.5>
  40b16a:	mov    rdx,QWORD PTR [rax]
  40b16d:	add    rdx,0x1
  40b174:	mov    QWORD PTR [rax],rdx
  40b177:	mov    rdi,QWORD PTR [rcx]
  40b17a:	lea    rsi,[rip+0x3830]        # 40e9b1 <_IO_stdin_used@@Base+0x9b1>
  40b181:	mov    al,0x0
  40b183:	call   403150 <fprintf@plt>
  40b188:	mov    edi,0x1
  40b18d:	mov    DWORD PTR [rbp-0x84],eax
  40b193:	call   403260 <exit@plt>
  40b198:	mov    rax,QWORD PTR [rbp-0x80]
  40b19c:	lea    rcx,[rip+0x8ecd]        # 414070 <__bss_start@@Base+0xf08>
  40b1a3:	add    rcx,0x48
  40b1aa:	mov    rdx,QWORD PTR [rax]
  40b1ad:	add    rdx,0x1
  40b1b4:	mov    QWORD PTR [rax],rdx
  40b1b7:	mov    QWORD PTR [rbp-0x38],rcx
  40b1bb:	jmp    40b039 <__generate_code_for_body@@Base+0x59>
  40b1c0:	mov    rax,QWORD PTR [rbp-0x48]
  40b1c4:	mov    rcx,QWORD PTR [rax]
  40b1c7:	add    rcx,0x1
  40b1ce:	mov    QWORD PTR [rax],rcx
  40b1d1:	mov    rax,QWORD PTR [rip+0x8ee8]        # 4140c0 <__bss_start@@Base+0xf58>
  40b1d8:	add    rax,0x1
  40b1de:	mov    QWORD PTR [rip+0x8edb],rax        # 4140c0 <__bss_start@@Base+0xf58>
  40b1e5:	add    rsp,0x90
  40b1ec:	pop    rbp
  40b1ed:	ret    
  40b1ee:	xchg   ax,ax

000000000040b1f0 <__generate_code_for_if@@Base>:
  40b1f0:	push   rbp
  40b1f1:	mov    rbp,rsp
  40b1f4:	sub    rsp,0x40
  40b1f8:	lea    rax,[rip+0x8ed1]        # 4140d0 <__bss_start@@Base+0xf68>
  40b1ff:	mov    QWORD PTR [rbp-0x20],rdi
  40b203:	mov    QWORD PTR [rbp-0x28],rsi
  40b207:	mov    QWORD PTR [rbp-0x30],rax
  40b20b:	mov    rax,QWORD PTR [rbp-0x30]
  40b20f:	mov    rcx,QWORD PTR [rax]
  40b212:	add    rcx,0x1
  40b219:	mov    QWORD PTR [rax],rcx
  40b21c:	mov    rax,QWORD PTR [rbp-0x20]
  40b220:	mov    QWORD PTR [rbp-0x8],rax
  40b224:	mov    rcx,QWORD PTR [rbp-0x28]
  40b228:	mov    QWORD PTR [rbp-0x10],rcx
  40b22c:	mov    rdx,QWORD PTR [rbp-0x8]
  40b230:	mov    rdx,QWORD PTR [rdx+0x10]
  40b234:	mov    QWORD PTR [rbp-0x18],rdx
  40b238:	mov    rdx,QWORD PTR [rbp-0x8]
  40b23c:	mov    rsi,QWORD PTR [rdx+0x10]
  40b240:	add    rsi,0x1
  40b247:	mov    QWORD PTR [rdx+0x10],rsi
  40b24b:	mov    rdi,QWORD PTR [rbp-0x8]
  40b24f:	mov    rdx,QWORD PTR [rbp-0x10]
  40b253:	mov    rsi,QWORD PTR [rdx+0x10]
  40b257:	mov    rdx,QWORD PTR [rbp-0x18]
  40b25b:	call   40b320 <__generate_code_for_if_expression@@Base>
  40b260:	mov    rdi,QWORD PTR [rbp-0x8]
  40b264:	mov    rax,QWORD PTR [rbp-0x10]
  40b268:	mov    rsi,QWORD PTR [rax+0x18]
  40b26c:	call   40afe0 <__generate_code_for_body@@Base>
  40b271:	mov    rax,QWORD PTR [rbp-0x8]
  40b275:	mov    rdi,QWORD PTR [rax+0x8]
  40b279:	mov    rdx,QWORD PTR [rbp-0x18]
  40b27d:	lea    rsi,[rip+0x362c]        # 40e8b0 <_IO_stdin_used@@Base+0x8b0>
  40b284:	mov    al,0x0
  40b286:	call   403150 <fprintf@plt>
  40b28b:	lea    rcx,[rip+0x8e3e]        # 4140d0 <__bss_start@@Base+0xf68>
  40b292:	mov    rdx,rcx
  40b295:	add    rdx,0x8
  40b29c:	add    rcx,0x10
  40b2a3:	mov    rsi,QWORD PTR [rbp-0x10]
  40b2a7:	cmp    QWORD PTR [rsi+0x20],0x0
  40b2ac:	mov    QWORD PTR [rbp-0x38],rdx
  40b2b0:	mov    QWORD PTR [rbp-0x40],rcx
  40b2b4:	je     40b2ed <__generate_code_for_if@@Base+0xfd>
  40b2ba:	mov    rax,QWORD PTR [rbp-0x38]
  40b2be:	mov    rcx,QWORD PTR [rax]
  40b2c1:	add    rcx,0x1
  40b2c8:	mov    QWORD PTR [rax],rcx
  40b2cb:	mov    rdi,QWORD PTR [rbp-0x8]
  40b2cf:	mov    rax,QWORD PTR [rbp-0x10]
  40b2d3:	mov    rsi,QWORD PTR [rax+0x20]
  40b2d7:	call   40afe0 <__generate_code_for_body@@Base>
  40b2dc:	lea    rax,[rip+0x8ded]        # 4140d0 <__bss_start@@Base+0xf68>
  40b2e3:	add    rax,0x18
  40b2e9:	mov    QWORD PTR [rbp-0x40],rax
  40b2ed:	mov    rax,QWORD PTR [rbp-0x40]
  40b2f1:	mov    rcx,QWORD PTR [rax]
  40b2f4:	add    rcx,0x1
  40b2fb:	mov    QWORD PTR [rax],rcx
  40b2fe:	mov    rax,QWORD PTR [rip+0x8deb]        # 4140f0 <__bss_start@@Base+0xf88>
  40b305:	add    rax,0x1
  40b30b:	mov    QWORD PTR [rip+0x8dde],rax        # 4140f0 <__bss_start@@Base+0xf88>
  40b312:	add    rsp,0x40
  40b316:	pop    rbp
  40b317:	ret    
  40b318:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040b320 <__generate_code_for_if_expression@@Base>:
  40b320:	push   rbp
  40b321:	mov    rbp,rsp
  40b324:	sub    rsp,0x60
  40b328:	lea    rax,[rip+0x8dd1]        # 414100 <__bss_start@@Base+0xf98>
  40b32f:	mov    QWORD PTR [rbp-0x28],rdi
  40b333:	mov    QWORD PTR [rbp-0x30],rsi
  40b337:	mov    QWORD PTR [rbp-0x38],rdx
  40b33b:	mov    QWORD PTR [rbp-0x40],rax
  40b33f:	mov    rax,QWORD PTR [rbp-0x40]
  40b343:	mov    rcx,QWORD PTR [rax]
  40b346:	inc    rcx
  40b349:	mov    QWORD PTR [rax],rcx
  40b34c:	mov    rax,QWORD PTR [rbp-0x28]
  40b350:	mov    QWORD PTR [rbp-0x8],rax
  40b354:	mov    rcx,QWORD PTR [rbp-0x30]
  40b358:	mov    QWORD PTR [rbp-0x10],rcx
  40b35c:	mov    rdx,QWORD PTR [rbp-0x38]
  40b360:	mov    QWORD PTR [rbp-0x18],rdx
  40b364:	mov    rsi,QWORD PTR [rbp-0x10]
  40b368:	mov    QWORD PTR [rbp-0x20],rsi
  40b36c:	mov    rsi,QWORD PTR [rbp-0x20]
  40b370:	mov    edi,DWORD PTR [rsi+0x20]
  40b373:	lea    rsi,[rip+0x8d96]        # 414110 <__bss_start@@Base+0xfa8>
  40b37a:	lea    r8,[rip+0x8d87]        # 414108 <__bss_start@@Base+0xfa0>
  40b381:	sub    edi,0x8
  40b384:	mov    QWORD PTR [rbp-0x48],rsi
  40b388:	mov    QWORD PTR [rbp-0x50],r8
  40b38c:	jne    40b3cf <__generate_code_for_if_expression@@Base+0xaf>
  40b392:	jmp    40b397 <__generate_code_for_if_expression@@Base+0x77>
  40b397:	mov    rax,QWORD PTR [rbp-0x48]
  40b39b:	mov    rcx,QWORD PTR [rax]
  40b39e:	add    rcx,0x1
  40b3a5:	mov    QWORD PTR [rax],rcx
  40b3a8:	mov    rdi,QWORD PTR [rbp-0x8]
  40b3ac:	mov    rsi,QWORD PTR [rbp-0x20]
  40b3b0:	mov    rdx,QWORD PTR [rbp-0x18]
  40b3b4:	call   40b5f0 <__generate_code_for_unary_boolean_expression@@Base>
  40b3b9:	lea    rax,[rip+0x8d40]        # 414100 <__bss_start@@Base+0xf98>
  40b3c0:	add    rax,0x18
  40b3c6:	mov    QWORD PTR [rbp-0x58],rax
  40b3ca:	jmp    40b402 <__generate_code_for_if_expression@@Base+0xe2>
  40b3cf:	mov    rax,QWORD PTR [rbp-0x50]
  40b3d3:	mov    rcx,QWORD PTR [rax]
  40b3d6:	add    rcx,0x1
  40b3dd:	mov    QWORD PTR [rax],rcx
  40b3e0:	mov    rdi,QWORD PTR [rbp-0x8]
  40b3e4:	mov    rsi,QWORD PTR [rbp-0x20]
  40b3e8:	mov    rdx,QWORD PTR [rbp-0x18]
  40b3ec:	call   40b760 <__generate_code_for_binary_boolean_expression@@Base>
  40b3f1:	lea    rax,[rip+0x8d08]        # 414100 <__bss_start@@Base+0xf98>
  40b3f8:	add    rax,0x20
  40b3fe:	mov    QWORD PTR [rbp-0x58],rax
  40b402:	mov    rax,QWORD PTR [rbp-0x58]
  40b406:	mov    rcx,QWORD PTR [rax]
  40b409:	add    rcx,0x1
  40b410:	mov    QWORD PTR [rax],rcx
  40b413:	mov    rax,QWORD PTR [rip+0x8d0e]        # 414128 <__bss_start@@Base+0xfc0>
  40b41a:	add    rax,0x1
  40b420:	mov    QWORD PTR [rip+0x8d01],rax        # 414128 <__bss_start@@Base+0xfc0>
  40b427:	add    rsp,0x60
  40b42b:	pop    rbp
  40b42c:	ret    
  40b42d:	nop    DWORD PTR [rax]

000000000040b430 <__generate_code_for_return@@Base>:
  40b430:	push   rbp
  40b431:	mov    rbp,rsp
  40b434:	sub    rsp,0x50
  40b438:	lea    rax,[rip+0x8cf1]        # 414130 <__bss_start@@Base+0xfc8>
  40b43f:	mov    QWORD PTR [rbp-0x20],rdi
  40b443:	mov    QWORD PTR [rbp-0x28],rsi
  40b447:	mov    QWORD PTR [rbp-0x30],rax
  40b44b:	mov    rax,QWORD PTR [rbp-0x30]
  40b44f:	mov    rcx,QWORD PTR [rax]
  40b452:	inc    rcx
  40b455:	mov    QWORD PTR [rax],rcx
  40b458:	mov    rax,QWORD PTR [rbp-0x20]
  40b45c:	mov    QWORD PTR [rbp-0x8],rax
  40b460:	mov    rcx,QWORD PTR [rbp-0x28]
  40b464:	mov    QWORD PTR [rbp-0x10],rcx
  40b468:	mov    rdx,QWORD PTR [rbp-0x10]
  40b46c:	mov    rdx,QWORD PTR [rdx+0x10]
  40b470:	mov    QWORD PTR [rbp-0x18],rdx
  40b474:	mov    rdx,QWORD PTR [rbp-0x8]
  40b478:	mov    rdi,QWORD PTR [rdx+0x8]
  40b47c:	lea    rsi,[rip+0x343c]        # 40e8bf <_IO_stdin_used@@Base+0x8bf>
  40b483:	xor    r8d,r8d
  40b486:	mov    al,r8b
  40b489:	call   403150 <fprintf@plt>
  40b48e:	mov    rcx,QWORD PTR [rbp-0x18]
  40b492:	mov    r9d,DWORD PTR [rcx]
  40b495:	lea    rcx,[rip+0x8ca4]        # 414140 <__bss_start@@Base+0xfd8>
  40b49c:	lea    rdx,[rip+0x8c95]        # 414138 <__bss_start@@Base+0xfd0>
  40b4a3:	sub    r9d,0x1
  40b4a7:	mov    QWORD PTR [rbp-0x38],rcx
  40b4ab:	mov    QWORD PTR [rbp-0x40],rdx
  40b4af:	jne    40b4f1 <__generate_code_for_return@@Base+0xc1>
  40b4b5:	jmp    40b4ba <__generate_code_for_return@@Base+0x8a>
  40b4ba:	mov    rax,QWORD PTR [rbp-0x38]
  40b4be:	mov    rcx,QWORD PTR [rax]
  40b4c1:	add    rcx,0x1
  40b4c8:	mov    QWORD PTR [rax],rcx
  40b4cb:	mov    rdi,QWORD PTR [rbp-0x8]
  40b4cf:	mov    rax,QWORD PTR [rbp-0x18]
  40b4d3:	mov    rsi,rax
  40b4d6:	call   40b570 <__generate_code_for_int@@Base>
  40b4db:	lea    rax,[rip+0x8c4e]        # 414130 <__bss_start@@Base+0xfc8>
  40b4e2:	add    rax,0x18
  40b4e8:	mov    QWORD PTR [rbp-0x48],rax
  40b4ec:	jmp    40b527 <__generate_code_for_return@@Base+0xf7>
  40b4f1:	mov    rax,QWORD PTR [rbp-0x40]
  40b4f5:	mov    rcx,QWORD PTR [rip+0x7af4]        # 412ff0 <stderr@GLIBC_2.2.5>
  40b4fc:	mov    rdx,QWORD PTR [rax]
  40b4ff:	add    rdx,0x1
  40b506:	mov    QWORD PTR [rax],rdx
  40b509:	mov    rdi,QWORD PTR [rcx]
  40b50c:	lea    rsi,[rip+0x33b6]        # 40e8c9 <_IO_stdin_used@@Base+0x8c9>
  40b513:	mov    al,0x0
  40b515:	call   403150 <fprintf@plt>
  40b51a:	mov    edi,0x1
  40b51f:	mov    DWORD PTR [rbp-0x4c],eax
  40b522:	call   403260 <exit@plt>
  40b527:	mov    rax,QWORD PTR [rbp-0x48]
  40b52b:	mov    rcx,QWORD PTR [rax]
  40b52e:	add    rcx,0x1
  40b535:	mov    QWORD PTR [rax],rcx
  40b538:	mov    rax,QWORD PTR [rip+0x8c11]        # 414150 <__bss_start@@Base+0xfe8>
  40b53f:	add    rax,0x1
  40b545:	mov    QWORD PTR [rip+0x8c04],rax        # 414150 <__bss_start@@Base+0xfe8>
  40b54c:	mov    rax,QWORD PTR [rbp-0x8]
  40b550:	mov    rdi,QWORD PTR [rax+0x8]
  40b554:	lea    rsi,[rip+0x3394]        # 40e8ef <_IO_stdin_used@@Base+0x8ef>
  40b55b:	mov    al,0x0
  40b55d:	call   403150 <fprintf@plt>
  40b562:	add    rsp,0x50
  40b566:	pop    rbp
  40b567:	ret    
  40b568:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040b570 <__generate_code_for_int@@Base>:
  40b570:	push   rbp
  40b571:	mov    rbp,rsp
  40b574:	sub    rsp,0x30
  40b578:	lea    rax,[rip+0x8bd9]        # 414158 <__bss_start@@Base+0xff0>
  40b57f:	mov    QWORD PTR [rbp-0x18],rdi
  40b583:	mov    QWORD PTR [rbp-0x20],rsi
  40b587:	mov    QWORD PTR [rbp-0x28],rax
  40b58b:	mov    rax,QWORD PTR [rbp-0x28]
  40b58f:	mov    rcx,QWORD PTR [rax]
  40b592:	add    rcx,0x1
  40b599:	mov    QWORD PTR [rax],rcx
  40b59c:	mov    rax,QWORD PTR [rip+0x8bbd]        # 414160 <__bss_start@@Base+0xff8>
  40b5a3:	add    rax,0x1
  40b5a9:	mov    QWORD PTR [rip+0x8bb0],rax        # 414160 <__bss_start@@Base+0xff8>
  40b5b0:	mov    rax,QWORD PTR [rbp-0x18]
  40b5b4:	mov    QWORD PTR [rbp-0x8],rax
  40b5b8:	mov    rcx,QWORD PTR [rbp-0x20]
  40b5bc:	mov    QWORD PTR [rbp-0x10],rcx
  40b5c0:	mov    rdx,QWORD PTR [rbp-0x8]
  40b5c4:	mov    rdi,QWORD PTR [rdx+0x8]
  40b5c8:	mov    rdx,QWORD PTR [rbp-0x10]
  40b5cc:	mov    edx,DWORD PTR [rdx+0x10]
  40b5cf:	lea    rsi,[rip+0x3322]        # 40e8f8 <_IO_stdin_used@@Base+0x8f8>
  40b5d6:	mov    al,0x0
  40b5d8:	call   403150 <fprintf@plt>
  40b5dd:	add    rsp,0x30
  40b5e1:	pop    rbp
  40b5e2:	ret    
  40b5e3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b5ed:	nop    DWORD PTR [rax]

000000000040b5f0 <__generate_code_for_unary_boolean_expression@@Base>:
  40b5f0:	push   rbp
  40b5f1:	mov    rbp,rsp
  40b5f4:	sub    rsp,0x70
  40b5f8:	lea    rax,[rip+0x8b71]        # 414170 <__bss_start@@Base+0x1008>
  40b5ff:	mov    QWORD PTR [rbp-0x28],rdi
  40b603:	mov    QWORD PTR [rbp-0x30],rsi
  40b607:	mov    QWORD PTR [rbp-0x38],rdx
  40b60b:	mov    QWORD PTR [rbp-0x40],rax
  40b60f:	mov    rax,QWORD PTR [rbp-0x40]
  40b613:	mov    rcx,QWORD PTR [rax]
  40b616:	inc    rcx
  40b619:	mov    QWORD PTR [rax],rcx
  40b61c:	mov    rax,QWORD PTR [rbp-0x28]
  40b620:	mov    QWORD PTR [rbp-0x8],rax
  40b624:	mov    rcx,QWORD PTR [rbp-0x30]
  40b628:	mov    QWORD PTR [rbp-0x10],rcx
  40b62c:	mov    rdx,QWORD PTR [rbp-0x38]
  40b630:	mov    QWORD PTR [rbp-0x18],rdx
  40b634:	mov    rsi,QWORD PTR [rbp-0x10]
  40b638:	mov    rsi,QWORD PTR [rsi+0x10]
  40b63c:	mov    QWORD PTR [rbp-0x20],rsi
  40b640:	mov    rsi,QWORD PTR [rbp-0x8]
  40b644:	mov    rdi,QWORD PTR [rsi+0x8]
  40b648:	lea    rsi,[rip+0x3356]        # 40e9a5 <_IO_stdin_used@@Base+0x9a5>
  40b64f:	xor    r8d,r8d
  40b652:	mov    al,r8b
  40b655:	mov    BYTE PTR [rbp-0x41],r8b
  40b659:	call   403150 <fprintf@plt>
  40b65e:	mov    rcx,QWORD PTR [rbp-0x8]
  40b662:	mov    rdi,QWORD PTR [rcx+0x8]
  40b666:	lea    rsi,[rip+0x328f]        # 40e8fc <_IO_stdin_used@@Base+0x8fc>
  40b66d:	mov    r8b,BYTE PTR [rbp-0x41]
  40b671:	mov    DWORD PTR [rbp-0x48],eax
  40b674:	mov    al,r8b
  40b677:	call   403150 <fprintf@plt>
  40b67c:	mov    rdi,QWORD PTR [rbp-0x8]
  40b680:	mov    rsi,QWORD PTR [rbp-0x20]
  40b684:	mov    DWORD PTR [rbp-0x4c],eax
  40b687:	call   40b570 <__generate_code_for_int@@Base>
  40b68c:	mov    rcx,QWORD PTR [rbp-0x10]
  40b690:	mov    eax,DWORD PTR [rcx+0x20]
  40b693:	lea    rcx,[rip+0x8ae6]        # 414180 <__bss_start@@Base+0x1018>
  40b69a:	lea    rdx,[rip+0x8ad7]        # 414178 <__bss_start@@Base+0x1010>
  40b6a1:	sub    eax,0x8
  40b6a4:	mov    QWORD PTR [rbp-0x58],rcx
  40b6a8:	mov    QWORD PTR [rbp-0x60],rdx
  40b6ac:	jne    40b6f9 <__generate_code_for_unary_boolean_expression@@Base+0x109>
  40b6b2:	jmp    40b6b7 <__generate_code_for_unary_boolean_expression@@Base+0xc7>
  40b6b7:	mov    rax,QWORD PTR [rbp-0x58]
  40b6bb:	mov    rcx,QWORD PTR [rax]
  40b6be:	add    rcx,0x1
  40b6c5:	mov    QWORD PTR [rax],rcx
  40b6c8:	mov    rax,QWORD PTR [rbp-0x8]
  40b6cc:	mov    rdi,QWORD PTR [rax+0x8]
  40b6d0:	mov    rdx,QWORD PTR [rbp-0x18]
  40b6d4:	lea    rsi,[rip+0x324b]        # 40e926 <_IO_stdin_used@@Base+0x926>
  40b6db:	mov    al,0x0
  40b6dd:	call   403150 <fprintf@plt>
  40b6e2:	lea    rcx,[rip+0x8a87]        # 414170 <__bss_start@@Base+0x1008>
  40b6e9:	add    rcx,0x18
  40b6f0:	mov    QWORD PTR [rbp-0x68],rcx
  40b6f4:	jmp    40b72f <__generate_code_for_unary_boolean_expression@@Base+0x13f>
  40b6f9:	mov    rax,QWORD PTR [rbp-0x60]
  40b6fd:	mov    rcx,QWORD PTR [rip+0x78ec]        # 412ff0 <stderr@GLIBC_2.2.5>
  40b704:	mov    rdx,QWORD PTR [rax]
  40b707:	add    rdx,0x1
  40b70e:	mov    QWORD PTR [rax],rdx
  40b711:	mov    rdi,QWORD PTR [rcx]
  40b714:	lea    rsi,[rip+0x326a]        # 40e985 <_IO_stdin_used@@Base+0x985>
  40b71b:	mov    al,0x0
  40b71d:	call   403150 <fprintf@plt>
  40b722:	mov    edi,0x1
  40b727:	mov    DWORD PTR [rbp-0x6c],eax
  40b72a:	call   403260 <exit@plt>
  40b72f:	mov    rax,QWORD PTR [rbp-0x68]
  40b733:	mov    rcx,QWORD PTR [rax]
  40b736:	add    rcx,0x1
  40b73d:	mov    QWORD PTR [rax],rcx
  40b740:	mov    rax,QWORD PTR [rip+0x8a49]        # 414190 <__bss_start@@Base+0x1028>
  40b747:	add    rax,0x1
  40b74d:	mov    QWORD PTR [rip+0x8a3c],rax        # 414190 <__bss_start@@Base+0x1028>
  40b754:	add    rsp,0x70
  40b758:	pop    rbp
  40b759:	ret    
  40b75a:	nop    WORD PTR [rax+rax*1+0x0]

000000000040b760 <__generate_code_for_binary_boolean_expression@@Base>:
  40b760:	push   rbp
  40b761:	mov    rbp,rsp
  40b764:	push   r15
  40b766:	push   r14
  40b768:	push   r13
  40b76a:	push   r12
  40b76c:	push   rbx
  40b76d:	sub    rsp,0x108
  40b774:	lea    rax,[rip+0x8a25]        # 4141a0 <__bss_start@@Base+0x1038>
  40b77b:	mov    QWORD PTR [rbp-0x58],rdi
  40b77f:	mov    QWORD PTR [rbp-0x60],rsi
  40b783:	mov    QWORD PTR [rbp-0x68],rdx
  40b787:	mov    QWORD PTR [rbp-0x70],rax
  40b78b:	mov    rax,QWORD PTR [rbp-0x70]
  40b78f:	mov    rcx,QWORD PTR [rax]
  40b792:	inc    rcx
  40b795:	mov    QWORD PTR [rax],rcx
  40b798:	mov    rax,QWORD PTR [rbp-0x58]
  40b79c:	mov    QWORD PTR [rbp-0x30],rax
  40b7a0:	mov    rcx,QWORD PTR [rbp-0x60]
  40b7a4:	mov    QWORD PTR [rbp-0x38],rcx
  40b7a8:	mov    rdx,QWORD PTR [rbp-0x68]
  40b7ac:	mov    QWORD PTR [rbp-0x40],rdx
  40b7b0:	mov    rsi,QWORD PTR [rbp-0x38]
  40b7b4:	mov    rsi,QWORD PTR [rsi+0x10]
  40b7b8:	mov    QWORD PTR [rbp-0x48],rsi
  40b7bc:	mov    rsi,QWORD PTR [rbp-0x38]
  40b7c0:	mov    rsi,QWORD PTR [rsi+0x18]
  40b7c4:	mov    QWORD PTR [rbp-0x50],rsi
  40b7c8:	mov    rsi,QWORD PTR [rbp-0x30]
  40b7cc:	mov    rdi,QWORD PTR [rsi+0x8]
  40b7d0:	lea    rsi,[rip+0x30e8]        # 40e8bf <_IO_stdin_used@@Base+0x8bf>
  40b7d7:	xor    r8d,r8d
  40b7da:	mov    al,r8b
  40b7dd:	mov    BYTE PTR [rbp-0x71],r8b
  40b7e1:	call   403150 <fprintf@plt>
  40b7e6:	mov    rdi,QWORD PTR [rbp-0x30]
  40b7ea:	mov    rsi,QWORD PTR [rbp-0x48]
  40b7ee:	mov    DWORD PTR [rbp-0x78],eax
  40b7f1:	call   40b570 <__generate_code_for_int@@Base>
  40b7f6:	mov    rcx,QWORD PTR [rbp-0x30]
  40b7fa:	mov    rdi,QWORD PTR [rcx+0x8]
  40b7fe:	lea    rcx,[rip+0x2831]        # 40e036 <_IO_stdin_used@@Base+0x36>
  40b805:	mov    rsi,rcx
  40b808:	mov    al,BYTE PTR [rbp-0x71]
  40b80b:	mov    QWORD PTR [rbp-0x80],rcx
  40b80f:	call   403150 <fprintf@plt>
  40b814:	mov    rcx,QWORD PTR [rbp-0x30]
  40b818:	mov    rdi,QWORD PTR [rcx+0x8]
  40b81c:	lea    rsi,[rip+0x30d9]        # 40e8fc <_IO_stdin_used@@Base+0x8fc>
  40b823:	mov    r8b,BYTE PTR [rbp-0x71]
  40b827:	mov    DWORD PTR [rbp-0x84],eax
  40b82d:	mov    al,r8b
  40b830:	call   403150 <fprintf@plt>
  40b835:	mov    rdi,QWORD PTR [rbp-0x30]
  40b839:	mov    rsi,QWORD PTR [rbp-0x50]
  40b83d:	mov    DWORD PTR [rbp-0x88],eax
  40b843:	call   40b570 <__generate_code_for_int@@Base>
  40b848:	mov    rcx,QWORD PTR [rbp-0x30]
  40b84c:	mov    rdi,QWORD PTR [rcx+0x8]
  40b850:	mov    rsi,QWORD PTR [rbp-0x80]
  40b854:	mov    al,BYTE PTR [rbp-0x71]
  40b857:	call   403150 <fprintf@plt>
  40b85c:	mov    rcx,QWORD PTR [rbp-0x30]
  40b860:	mov    rdi,QWORD PTR [rcx+0x8]
  40b864:	lea    rsi,[rip+0x309b]        # 40e906 <_IO_stdin_used@@Base+0x906>
  40b86b:	mov    r8b,BYTE PTR [rbp-0x71]
  40b86f:	mov    DWORD PTR [rbp-0x8c],eax
  40b875:	mov    al,r8b
  40b878:	call   403150 <fprintf@plt>
  40b87d:	mov    rcx,QWORD PTR [rbp-0x38]
  40b881:	mov    r9d,DWORD PTR [rcx+0x20]
  40b885:	mov    ecx,r9d
  40b888:	lea    rdx,[rip+0x8959]        # 4141e8 <__bss_start@@Base+0x1080>
  40b88f:	lea    rsi,[rip+0x894a]        # 4141e0 <__bss_start@@Base+0x1078>
  40b896:	lea    rdi,[rip+0x893b]        # 4141d8 <__bss_start@@Base+0x1070>
  40b89d:	lea    r10,[rip+0x892c]        # 4141d0 <__bss_start@@Base+0x1068>
  40b8a4:	lea    r11,[rip+0x891d]        # 4141c8 <__bss_start@@Base+0x1060>
  40b8ab:	lea    rbx,[rip+0x890e]        # 4141c0 <__bss_start@@Base+0x1058>
  40b8b2:	lea    r14,[rip+0x88ff]        # 4141b8 <__bss_start@@Base+0x1050>
  40b8b9:	lea    r15,[rip+0x88f0]        # 4141b0 <__bss_start@@Base+0x1048>
  40b8c0:	lea    r12,[rip+0x88e1]        # 4141a8 <__bss_start@@Base+0x1040>
  40b8c7:	mov    r13,rcx
  40b8ca:	sub    r13,0x7
  40b8ce:	mov    QWORD PTR [rbp-0x98],rcx
  40b8d5:	mov    QWORD PTR [rbp-0xa0],rdx
  40b8dc:	mov    QWORD PTR [rbp-0xa8],rsi
  40b8e3:	mov    QWORD PTR [rbp-0xb0],rdi
  40b8ea:	mov    QWORD PTR [rbp-0xb8],r10
  40b8f1:	mov    QWORD PTR [rbp-0xc0],r11
  40b8f8:	mov    QWORD PTR [rbp-0xc8],rbx
  40b8ff:	mov    QWORD PTR [rbp-0xd0],r14
  40b906:	mov    QWORD PTR [rbp-0xd8],r15
  40b90d:	mov    QWORD PTR [rbp-0xe0],r12
  40b914:	ja     40bbad <__generate_code_for_binary_boolean_expression@@Base+0x44d>
  40b91a:	lea    rax,[rip+0x2f23]        # 40e844 <_IO_stdin_used@@Base+0x844>
  40b921:	mov    rcx,QWORD PTR [rbp-0x98]
  40b928:	movsxd rdx,DWORD PTR [rax+rcx*4]
  40b92c:	add    rdx,rax
  40b92f:	mov    rax,QWORD PTR [rbp-0xd8]
  40b936:	mov    rsi,QWORD PTR [rbp-0xd0]
  40b93d:	mov    rdi,QWORD PTR [rbp-0xc8]
  40b944:	mov    r8,QWORD PTR [rbp-0xc0]
  40b94b:	mov    r9,QWORD PTR [rbp-0xb8]
  40b952:	mov    r10,QWORD PTR [rbp-0xb0]
  40b959:	mov    r11,QWORD PTR [rbp-0xa8]
  40b960:	mov    rbx,QWORD PTR [rbp-0xa0]
  40b967:	mov    QWORD PTR [rbp-0xe8],rax
  40b96e:	mov    QWORD PTR [rbp-0xf0],rsi
  40b975:	mov    QWORD PTR [rbp-0xf8],rdi
  40b97c:	mov    QWORD PTR [rbp-0x100],r8
  40b983:	mov    QWORD PTR [rbp-0x108],r9
  40b98a:	mov    QWORD PTR [rbp-0x110],r10
  40b991:	mov    QWORD PTR [rbp-0x118],r11
  40b998:	mov    QWORD PTR [rbp-0x120],rbx
  40b99f:	jmp    rdx
  40b9a1:	mov    rax,QWORD PTR [rbp-0xe8]
  40b9a8:	mov    rcx,QWORD PTR [rax]
  40b9ab:	add    rcx,0x1
  40b9b2:	mov    QWORD PTR [rax],rcx
  40b9b5:	mov    rax,QWORD PTR [rbp-0x30]
  40b9b9:	mov    rdi,QWORD PTR [rax+0x8]
  40b9bd:	mov    rdx,QWORD PTR [rbp-0x40]
  40b9c1:	lea    rsi,[rip+0x2f4b]        # 40e913 <_IO_stdin_used@@Base+0x913>
  40b9c8:	mov    al,0x0
  40b9ca:	call   403150 <fprintf@plt>
  40b9cf:	lea    rcx,[rip+0x87ca]        # 4141a0 <__bss_start@@Base+0x1038>
  40b9d6:	add    rcx,0x50
  40b9dd:	mov    QWORD PTR [rbp-0x128],rcx
  40b9e4:	jmp    40bbe9 <__generate_code_for_binary_boolean_expression@@Base+0x489>
  40b9e9:	mov    rax,QWORD PTR [rbp-0xf0]
  40b9f0:	mov    rcx,QWORD PTR [rax]
  40b9f3:	add    rcx,0x1
  40b9fa:	mov    QWORD PTR [rax],rcx
  40b9fd:	mov    rax,QWORD PTR [rbp-0x30]
  40ba01:	mov    rdi,QWORD PTR [rax+0x8]
  40ba05:	mov    rdx,QWORD PTR [rbp-0x40]
  40ba09:	lea    rsi,[rip+0x2f16]        # 40e926 <_IO_stdin_used@@Base+0x926>
  40ba10:	mov    al,0x0
  40ba12:	call   403150 <fprintf@plt>
  40ba17:	lea    rcx,[rip+0x8782]        # 4141a0 <__bss_start@@Base+0x1038>
  40ba1e:	add    rcx,0x58
  40ba25:	mov    QWORD PTR [rbp-0x128],rcx
  40ba2c:	jmp    40bbe9 <__generate_code_for_binary_boolean_expression@@Base+0x489>
  40ba31:	mov    rax,QWORD PTR [rbp-0xf8]
  40ba38:	mov    rcx,QWORD PTR [rax]
  40ba3b:	add    rcx,0x1
  40ba42:	mov    QWORD PTR [rax],rcx
  40ba45:	mov    rax,QWORD PTR [rbp-0x30]
  40ba49:	mov    rdi,QWORD PTR [rax+0x8]
  40ba4d:	mov    rdx,QWORD PTR [rbp-0x40]
  40ba51:	lea    rsi,[rip+0x2ee1]        # 40e939 <_IO_stdin_used@@Base+0x939>
  40ba58:	mov    al,0x0
  40ba5a:	call   403150 <fprintf@plt>
  40ba5f:	lea    rcx,[rip+0x873a]        # 4141a0 <__bss_start@@Base+0x1038>
  40ba66:	add    rcx,0x60
  40ba6d:	mov    QWORD PTR [rbp-0x128],rcx
  40ba74:	jmp    40bbe9 <__generate_code_for_binary_boolean_expression@@Base+0x489>
  40ba79:	mov    rax,QWORD PTR [rbp-0x100]
  40ba80:	mov    rcx,QWORD PTR [rax]
  40ba83:	add    rcx,0x1
  40ba8a:	mov    QWORD PTR [rax],rcx
  40ba8d:	mov    rax,QWORD PTR [rbp-0x30]
  40ba91:	mov    rdi,QWORD PTR [rax+0x8]
  40ba95:	mov    rdx,QWORD PTR [rbp-0x40]
  40ba99:	lea    rsi,[rip+0x2eac]        # 40e94c <_IO_stdin_used@@Base+0x94c>
  40baa0:	mov    al,0x0
  40baa2:	call   403150 <fprintf@plt>
  40baa7:	lea    rcx,[rip+0x86f2]        # 4141a0 <__bss_start@@Base+0x1038>
  40baae:	add    rcx,0x68
  40bab5:	mov    QWORD PTR [rbp-0x128],rcx
  40babc:	jmp    40bbe9 <__generate_code_for_binary_boolean_expression@@Base+0x489>
  40bac1:	mov    rax,QWORD PTR [rbp-0x108]
  40bac8:	lea    rcx,[rip+0x86d1]        # 4141a0 <__bss_start@@Base+0x1038>
  40bacf:	add    rcx,0x70
  40bad6:	mov    rdx,QWORD PTR [rax]
  40bad9:	add    rdx,0x1
  40bae0:	mov    QWORD PTR [rax],rdx
  40bae3:	mov    QWORD PTR [rbp-0x128],rcx
  40baea:	jmp    40bbe9 <__generate_code_for_binary_boolean_expression@@Base+0x489>
  40baef:	mov    rax,QWORD PTR [rbp-0x110]
  40baf6:	lea    rcx,[rip+0x86a3]        # 4141a0 <__bss_start@@Base+0x1038>
  40bafd:	add    rcx,0x78
  40bb04:	mov    rdx,QWORD PTR [rax]
  40bb07:	add    rdx,0x1
  40bb0e:	mov    QWORD PTR [rax],rdx
  40bb11:	mov    QWORD PTR [rbp-0x128],rcx
  40bb18:	jmp    40bbe9 <__generate_code_for_binary_boolean_expression@@Base+0x489>
  40bb1d:	mov    rax,QWORD PTR [rbp-0x118]
  40bb24:	mov    rcx,QWORD PTR [rax]
  40bb27:	add    rcx,0x1
  40bb2e:	mov    QWORD PTR [rax],rcx
  40bb31:	mov    rax,QWORD PTR [rbp-0x30]
  40bb35:	mov    rdi,QWORD PTR [rax+0x8]
  40bb39:	mov    rdx,QWORD PTR [rbp-0x40]
  40bb3d:	lea    rsi,[rip+0x2e1b]        # 40e95f <_IO_stdin_used@@Base+0x95f>
  40bb44:	mov    al,0x0
  40bb46:	call   403150 <fprintf@plt>
  40bb4b:	lea    rcx,[rip+0x864e]        # 4141a0 <__bss_start@@Base+0x1038>
  40bb52:	add    rcx,0x80
  40bb59:	mov    QWORD PTR [rbp-0x128],rcx
  40bb60:	jmp    40bbe9 <__generate_code_for_binary_boolean_expression@@Base+0x489>
  40bb65:	mov    rax,QWORD PTR [rbp-0x120]
  40bb6c:	mov    rcx,QWORD PTR [rax]
  40bb6f:	add    rcx,0x1
  40bb76:	mov    QWORD PTR [rax],rcx
  40bb79:	mov    rax,QWORD PTR [rbp-0x30]
  40bb7d:	mov    rdi,QWORD PTR [rax+0x8]
  40bb81:	mov    rdx,QWORD PTR [rbp-0x40]
  40bb85:	lea    rsi,[rip+0x2de6]        # 40e972 <_IO_stdin_used@@Base+0x972>
  40bb8c:	mov    al,0x0
  40bb8e:	call   403150 <fprintf@plt>
  40bb93:	lea    rcx,[rip+0x8606]        # 4141a0 <__bss_start@@Base+0x1038>
  40bb9a:	add    rcx,0x88
  40bba1:	mov    QWORD PTR [rbp-0x128],rcx
  40bba8:	jmp    40bbe9 <__generate_code_for_binary_boolean_expression@@Base+0x489>
  40bbad:	mov    rax,QWORD PTR [rbp-0xe0]
  40bbb4:	mov    rcx,QWORD PTR [rip+0x7435]        # 412ff0 <stderr@GLIBC_2.2.5>
  40bbbb:	mov    rdx,QWORD PTR [rax]
  40bbbe:	add    rdx,0x1
  40bbc5:	mov    QWORD PTR [rax],rdx
  40bbc8:	mov    rdi,QWORD PTR [rcx]
  40bbcb:	lea    rsi,[rip+0x2db3]        # 40e985 <_IO_stdin_used@@Base+0x985>
  40bbd2:	mov    al,0x0
  40bbd4:	call   403150 <fprintf@plt>
  40bbd9:	mov    edi,0x1
  40bbde:	mov    DWORD PTR [rbp-0x12c],eax
  40bbe4:	call   403260 <exit@plt>
  40bbe9:	mov    rax,QWORD PTR [rbp-0x128]
  40bbf0:	mov    rcx,QWORD PTR [rax]
  40bbf3:	add    rcx,0x1
  40bbfa:	mov    QWORD PTR [rax],rcx
  40bbfd:	mov    rax,QWORD PTR [rip+0x862c]        # 414230 <__bss_start@@Base+0x10c8>
  40bc04:	add    rax,0x1
  40bc0a:	mov    QWORD PTR [rip+0x861f],rax        # 414230 <__bss_start@@Base+0x10c8>
  40bc11:	add    rsp,0x108
  40bc18:	pop    rbx
  40bc19:	pop    r12
  40bc1b:	pop    r13
  40bc1d:	pop    r14
  40bc1f:	pop    r15
  40bc21:	pop    rbp
  40bc22:	ret    
  40bc23:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bc2d:	nop    DWORD PTR [rax]
  40bc30:	sub    rsp,0x38
  40bc34:	xor    eax,eax
  40bc36:	mov    DWORD PTR [rsp+0x34],eax
  40bc3a:	jmp    40bc3f <__generate_code_for_binary_boolean_expression@@Base+0x4df>
  40bc3f:	mov    eax,DWORD PTR [rsp+0x34]
  40bc43:	movsxd rcx,eax
  40bc46:	imul   rcx,rcx,0x30
  40bc4d:	lea    rdx,[rip+0x716c]        # 412dc0 <_IO_stdin_used@@Base+0x4dc0>
  40bc54:	add    rdx,rcx
  40bc57:	mov    rdi,QWORD PTR [rdx]
  40bc5a:	mov    rsi,QWORD PTR [rdx+0x8]
  40bc5e:	mov    r8d,DWORD PTR [rdx+0x10]
  40bc62:	mov    QWORD PTR [rsp+0x28],rdx
  40bc67:	mov    edx,r8d
  40bc6a:	mov    DWORD PTR [rsp+0x24],eax
  40bc6e:	call   40c050 <__generate_code_for_binary_boolean_expression@@Base+0x8f0>
  40bc73:	xor    eax,eax
  40bc75:	mov    rcx,QWORD PTR [rsp+0x28]
  40bc7a:	mov    edx,DWORD PTR [rcx+0x18]
  40bc7d:	mov    rsi,QWORD PTR [rcx+0x20]
  40bc81:	mov    rdi,QWORD PTR [rcx+0x28]
  40bc85:	cmp    eax,edx
  40bc87:	mov    DWORD PTR [rsp+0x20],edx
  40bc8b:	mov    QWORD PTR [rsp+0x18],rsi
  40bc90:	mov    QWORD PTR [rsp+0x10],rdi
  40bc95:	mov    DWORD PTR [rsp+0xc],eax
  40bc99:	jge    40bd0d <__generate_code_for_binary_boolean_expression@@Base+0x5ad>
  40bc9f:	mov    eax,DWORD PTR [rsp+0xc]
  40bca3:	movsxd rcx,eax
  40bca6:	shl    rcx,0x5
  40bcaa:	mov    rdx,QWORD PTR [rsp+0x18]
  40bcaf:	add    rdx,rcx
  40bcb2:	mov    edi,DWORD PTR [rdx]
  40bcb4:	mov    rsi,QWORD PTR [rdx+0x8]
  40bcb8:	mov    r8d,DWORD PTR [rdx+0x10]
  40bcbc:	mov    r9b,BYTE PTR [rdx+0x14]
  40bcc0:	mov    r10d,DWORD PTR [rdx+0x18]
  40bcc4:	mov    edx,r8d
  40bcc7:	movzx  ecx,r9b
  40bccb:	mov    r8d,r10d
  40bcce:	mov    DWORD PTR [rsp+0x8],eax
  40bcd2:	call   40c4a0 <__generate_code_for_binary_boolean_expression@@Base+0xd40>
  40bcd7:	mov    eax,DWORD PTR [rsp+0x8]
  40bcdb:	movsxd rsi,eax
  40bcde:	shl    rsi,0x4
  40bce2:	mov    r11,QWORD PTR [rsp+0x10]
  40bce7:	add    r11,rsi
  40bcea:	mov    edi,DWORD PTR [r11]
  40bced:	mov    rsi,QWORD PTR [r11+0x8]
  40bcf1:	call   40c8c0 <__generate_code_for_binary_boolean_expression@@Base+0x1160>
  40bcf6:	mov    eax,DWORD PTR [rsp+0x8]
  40bcfa:	add    eax,0x1
  40bcfd:	mov    ecx,DWORD PTR [rsp+0x20]
  40bd01:	cmp    eax,ecx
  40bd03:	mov    DWORD PTR [rsp+0xc],eax
  40bd07:	jl     40bc9f <__generate_code_for_binary_boolean_expression@@Base+0x53f>
  40bd0d:	call   40ccd0 <__generate_code_for_binary_boolean_expression@@Base+0x1570>
  40bd12:	call   40d470 <__generate_code_for_binary_boolean_expression@@Base+0x1d10>
  40bd17:	mov    eax,DWORD PTR [rsp+0x24]
  40bd1b:	add    eax,0x1
  40bd1e:	cmp    eax,0x1
  40bd21:	mov    DWORD PTR [rsp+0x34],eax
  40bd25:	jl     40bc3f <__generate_code_for_binary_boolean_expression@@Base+0x4df>
  40bd2b:	add    rsp,0x38
  40bd2f:	ret    
  40bd30:	push   rax
  40bd31:	call   40bc30 <__generate_code_for_binary_boolean_expression@@Base+0x4d0>
  40bd36:	mov    QWORD PTR [rip+0x82b7],0x0        # 413ff8 <__bss_start@@Base+0xe90>
  40bd41:	mov    QWORD PTR [rip+0x82a4],0x0        # 413ff0 <__bss_start@@Base+0xe88>
  40bd4c:	mov    QWORD PTR [rip+0x82b1],0x0        # 414008 <__bss_start@@Base+0xea0>
  40bd57:	mov    QWORD PTR [rip+0x829e],0x0        # 414000 <__bss_start@@Base+0xe98>
  40bd62:	mov    QWORD PTR [rip+0x82ab],0x0        # 414018 <__bss_start@@Base+0xeb0>
  40bd6d:	mov    QWORD PTR [rip+0x8298],0x0        # 414010 <__bss_start@@Base+0xea8>
  40bd78:	mov    QWORD PTR [rip+0x82a5],0x0        # 414028 <__bss_start@@Base+0xec0>
  40bd83:	mov    QWORD PTR [rip+0x8292],0x0        # 414020 <__bss_start@@Base+0xeb8>
  40bd8e:	mov    QWORD PTR [rip+0x82b7],0x0        # 414050 <__bss_start@@Base+0xee8>
  40bd99:	mov    QWORD PTR [rip+0x82a4],0x0        # 414048 <__bss_start@@Base+0xee0>
  40bda4:	mov    QWORD PTR [rip+0x8291],0x0        # 414040 <__bss_start@@Base+0xed8>
  40bdaf:	mov    QWORD PTR [rip+0x827e],0x0        # 414038 <__bss_start@@Base+0xed0>
  40bdba:	mov    QWORD PTR [rip+0x826b],0x0        # 414030 <__bss_start@@Base+0xec8>
  40bdc5:	mov    QWORD PTR [rip+0x8290],0x0        # 414060 <__bss_start@@Base+0xef8>
  40bdd0:	mov    QWORD PTR [rip+0x827d],0x0        # 414058 <__bss_start@@Base+0xef0>
  40bddb:	mov    QWORD PTR [rip+0x82da],0x0        # 4140c0 <__bss_start@@Base+0xf58>
  40bde6:	mov    QWORD PTR [rip+0x82c7],0x0        # 4140b8 <__bss_start@@Base+0xf50>
  40bdf1:	mov    QWORD PTR [rip+0x82b4],0x0        # 4140b0 <__bss_start@@Base+0xf48>
  40bdfc:	mov    QWORD PTR [rip+0x82a1],0x0        # 4140a8 <__bss_start@@Base+0xf40>
  40be07:	mov    QWORD PTR [rip+0x828e],0x0        # 4140a0 <__bss_start@@Base+0xf38>
  40be12:	mov    QWORD PTR [rip+0x827b],0x0        # 414098 <__bss_start@@Base+0xf30>
  40be1d:	mov    QWORD PTR [rip+0x8268],0x0        # 414090 <__bss_start@@Base+0xf28>
  40be28:	mov    QWORD PTR [rip+0x8255],0x0        # 414088 <__bss_start@@Base+0xf20>
  40be33:	mov    QWORD PTR [rip+0x8242],0x0        # 414080 <__bss_start@@Base+0xf18>
  40be3e:	mov    QWORD PTR [rip+0x822f],0x0        # 414078 <__bss_start@@Base+0xf10>
  40be49:	mov    QWORD PTR [rip+0x821c],0x0        # 414070 <__bss_start@@Base+0xf08>
  40be54:	mov    QWORD PTR [rip+0x8291],0x0        # 4140f0 <__bss_start@@Base+0xf88>
  40be5f:	mov    QWORD PTR [rip+0x827e],0x0        # 4140e8 <__bss_start@@Base+0xf80>
  40be6a:	mov    QWORD PTR [rip+0x826b],0x0        # 4140e0 <__bss_start@@Base+0xf78>
  40be75:	mov    QWORD PTR [rip+0x8258],0x0        # 4140d8 <__bss_start@@Base+0xf70>
  40be80:	mov    QWORD PTR [rip+0x8245],0x0        # 4140d0 <__bss_start@@Base+0xf68>
  40be8b:	mov    QWORD PTR [rip+0x8292],0x0        # 414128 <__bss_start@@Base+0xfc0>
  40be96:	mov    QWORD PTR [rip+0x827f],0x0        # 414120 <__bss_start@@Base+0xfb8>
  40bea1:	mov    QWORD PTR [rip+0x826c],0x0        # 414118 <__bss_start@@Base+0xfb0>
  40beac:	mov    QWORD PTR [rip+0x8259],0x0        # 414110 <__bss_start@@Base+0xfa8>
  40beb7:	mov    QWORD PTR [rip+0x8246],0x0        # 414108 <__bss_start@@Base+0xfa0>
  40bec2:	mov    QWORD PTR [rip+0x8233],0x0        # 414100 <__bss_start@@Base+0xf98>
  40becd:	mov    QWORD PTR [rip+0x8278],0x0        # 414150 <__bss_start@@Base+0xfe8>
  40bed8:	mov    QWORD PTR [rip+0x8265],0x0        # 414148 <__bss_start@@Base+0xfe0>
  40bee3:	mov    QWORD PTR [rip+0x8252],0x0        # 414140 <__bss_start@@Base+0xfd8>
  40beee:	mov    QWORD PTR [rip+0x823f],0x0        # 414138 <__bss_start@@Base+0xfd0>
  40bef9:	mov    QWORD PTR [rip+0x822c],0x0        # 414130 <__bss_start@@Base+0xfc8>
  40bf04:	mov    QWORD PTR [rip+0x8251],0x0        # 414160 <__bss_start@@Base+0xff8>
  40bf0f:	mov    QWORD PTR [rip+0x823e],0x0        # 414158 <__bss_start@@Base+0xff0>
  40bf1a:	mov    QWORD PTR [rip+0x826b],0x0        # 414190 <__bss_start@@Base+0x1028>
  40bf25:	mov    QWORD PTR [rip+0x8258],0x0        # 414188 <__bss_start@@Base+0x1020>
  40bf30:	mov    QWORD PTR [rip+0x8245],0x0        # 414180 <__bss_start@@Base+0x1018>
  40bf3b:	mov    QWORD PTR [rip+0x8232],0x0        # 414178 <__bss_start@@Base+0x1010>
  40bf46:	mov    QWORD PTR [rip+0x821f],0x0        # 414170 <__bss_start@@Base+0x1008>
  40bf51:	mov    QWORD PTR [rip+0x82d4],0x0        # 414230 <__bss_start@@Base+0x10c8>
  40bf5c:	mov    QWORD PTR [rip+0x82c1],0x0        # 414228 <__bss_start@@Base+0x10c0>
  40bf67:	mov    QWORD PTR [rip+0x82ae],0x0        # 414220 <__bss_start@@Base+0x10b8>
  40bf72:	mov    QWORD PTR [rip+0x829b],0x0        # 414218 <__bss_start@@Base+0x10b0>
  40bf7d:	mov    QWORD PTR [rip+0x8288],0x0        # 414210 <__bss_start@@Base+0x10a8>
  40bf88:	mov    QWORD PTR [rip+0x8275],0x0        # 414208 <__bss_start@@Base+0x10a0>
  40bf93:	mov    QWORD PTR [rip+0x8262],0x0        # 414200 <__bss_start@@Base+0x1098>
  40bf9e:	mov    QWORD PTR [rip+0x824f],0x0        # 4141f8 <__bss_start@@Base+0x1090>
  40bfa9:	mov    QWORD PTR [rip+0x823c],0x0        # 4141f0 <__bss_start@@Base+0x1088>
  40bfb4:	mov    QWORD PTR [rip+0x8229],0x0        # 4141e8 <__bss_start@@Base+0x1080>
  40bfbf:	mov    QWORD PTR [rip+0x8216],0x0        # 4141e0 <__bss_start@@Base+0x1078>
  40bfca:	mov    QWORD PTR [rip+0x8203],0x0        # 4141d8 <__bss_start@@Base+0x1070>
  40bfd5:	mov    QWORD PTR [rip+0x81f0],0x0        # 4141d0 <__bss_start@@Base+0x1068>
  40bfe0:	mov    QWORD PTR [rip+0x81dd],0x0        # 4141c8 <__bss_start@@Base+0x1060>
  40bfeb:	mov    QWORD PTR [rip+0x81ca],0x0        # 4141c0 <__bss_start@@Base+0x1058>
  40bff6:	mov    QWORD PTR [rip+0x81b7],0x0        # 4141b8 <__bss_start@@Base+0x1050>
  40c001:	mov    QWORD PTR [rip+0x81a4],0x0        # 4141b0 <__bss_start@@Base+0x1048>
  40c00c:	mov    QWORD PTR [rip+0x8191],0x0        # 4141a8 <__bss_start@@Base+0x1040>
  40c017:	mov    QWORD PTR [rip+0x817e],0x0        # 4141a0 <__bss_start@@Base+0x1038>
  40c022:	pop    rax
  40c023:	ret    
  40c024:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c02e:	xchg   ax,ax
  40c030:	push   rax
  40c031:	lea    rdi,[rip+0xfffffffffffffbf8]        # 40bc30 <__generate_code_for_binary_boolean_expression@@Base+0x4d0>
  40c038:	lea    rsi,[rip+0xfffffffffffffcf1]        # 40bd30 <__generate_code_for_binary_boolean_expression@@Base+0x5d0>
  40c03f:	call   40d850 <__gcov_flush@@Base+0xb0>
  40c044:	pop    rax
  40c045:	ret    
  40c046:	xchg   ax,ax
  40c048:	nop    DWORD PTR [rax+rax*1+0x0]
  40c050:	push   rbp
  40c051:	push   r15
  40c053:	push   r14
  40c055:	push   r13
  40c057:	push   r12
  40c059:	push   rbx
  40c05a:	sub    rsp,0x18
  40c05e:	mov    r14d,edx
  40c061:	mov    r15,rsi
  40c064:	mov    r12,rdi
  40c067:	lea    rdi,[rsp+0xc]
  40c06c:	lea    rsi,[rsp+0x10]
  40c071:	call   40dc80 <__gcov_flush@@Base+0x4e0>
  40c076:	test   rax,rax
  40c079:	je     40c0b3 <__generate_code_for_binary_boolean_expression@@Base+0x953>
  40c07b:	mov    rbx,rax
  40c07e:	mov    r13,QWORD PTR [rsp+0x10]
  40c083:	mov    rdi,r12
  40c086:	call   4030e0 <strlen@plt>
  40c08b:	lea    rdi,[rax+r13*1]
  40c08f:	add    rdi,0x2
  40c093:	call   4031b0 <malloc@plt>
  40c098:	mov    rbp,rax
  40c09b:	mov    r8d,DWORD PTR [rsp+0xc]
  40c0a0:	mov    rdi,rax
  40c0a3:	mov    rsi,r12
  40c0a6:	mov    rdx,rbx
  40c0a9:	mov    rcx,r13
  40c0ac:	call   40dd10 <__gcov_flush@@Base+0x570>
  40c0b1:	jmp    40c0be <__generate_code_for_binary_boolean_expression@@Base+0x95e>
  40c0b3:	mov    rdi,r12
  40c0b6:	call   403280 <strdup@plt>
  40c0bb:	mov    rbp,rax
  40c0be:	mov    QWORD PTR [rip+0x8173],rbp        # 414238 <__bss_start@@Base+0x10d0>
  40c0c5:	mov    BYTE PTR [rip+0x8174],0x0        # 414240 <__bss_start@@Base+0x10d8>
  40c0cc:	mov    rdi,rbp
  40c0cf:	mov    esi,0x2
  40c0d4:	xor    eax,eax
  40c0d6:	call   403210 <open@plt>
  40c0db:	mov    DWORD PTR [rip+0x707f],eax        # 413160 <__data_start@@Base+0x10>
  40c0e1:	cmp    eax,0xffffffff
  40c0e4:	je     40c0ef <__generate_code_for_binary_boolean_expression@@Base+0x98f>
  40c0e6:	lea    rbx,[rip+0x2aae]        # 40eb9b <_IO_stdin_used@@Base+0xb9b>
  40c0ed:	jmp    40c153 <__generate_code_for_binary_boolean_expression@@Base+0x9f3>
  40c0ef:	mov    BYTE PTR [rip+0x814a],0x1        # 414240 <__bss_start@@Base+0x10d8>
  40c0f6:	mov    rdi,QWORD PTR [rip+0x813b]        # 414238 <__bss_start@@Base+0x10d0>
  40c0fd:	mov    esi,0x42
  40c102:	mov    edx,0x1a4
  40c107:	xor    eax,eax
  40c109:	call   403210 <open@plt>
  40c10e:	mov    DWORD PTR [rip+0x704c],eax        # 413160 <__data_start@@Base+0x10>
  40c114:	lea    rbx,[rip+0x2a84]        # 40eb9f <_IO_stdin_used@@Base+0xb9f>
  40c11b:	cmp    eax,0xffffffff
  40c11e:	jne    40c153 <__generate_code_for_binary_boolean_expression@@Base+0x9f3>
  40c120:	mov    rdi,QWORD PTR [rip+0x8111]        # 414238 <__bss_start@@Base+0x10d0>
  40c127:	call   40d940 <__gcov_flush@@Base+0x1a0>
  40c12c:	mov    rdi,QWORD PTR [rip+0x8105]        # 414238 <__bss_start@@Base+0x10d0>
  40c133:	mov    esi,0x42
  40c138:	mov    edx,0x1a4
  40c13d:	xor    eax,eax
  40c13f:	call   403210 <open@plt>
  40c144:	mov    DWORD PTR [rip+0x7016],eax        # 413160 <__data_start@@Base+0x10>
  40c14a:	cmp    eax,0xffffffff
  40c14d:	je     40c438 <__generate_code_for_binary_boolean_expression@@Base+0xcd8>
  40c153:	mov    edi,eax
  40c155:	call   40d9f0 <__gcov_flush@@Base+0x250>
  40c15a:	mov    edi,DWORD PTR [rip+0x7000]        # 413160 <__data_start@@Base+0x10>
  40c160:	mov    rsi,rbx
  40c163:	call   4031f0 <fdopen@plt>
  40c168:	mov    QWORD PTR [rip+0x80d9],rax        # 414248 <__bss_start@@Base+0x10e0>
  40c16f:	mov    QWORD PTR [rip+0x80d6],0x0        # 414250 <__bss_start@@Base+0x10e8>
  40c17a:	mov    QWORD PTR [rip+0x80d3],0x0        # 414258 <__bss_start@@Base+0x10f0>
  40c185:	mov    QWORD PTR [rip+0x80d0],0x0        # 414260 <__bss_start@@Base+0x10f8>
  40c190:	mov    ebx,0x20000
  40c195:	cmp    BYTE PTR [rip+0x80a4],0x0        # 414240 <__bss_start@@Base+0x10d8>
  40c19c:	je     40c239 <__generate_code_for_binary_boolean_expression@@Base+0xad9>
  40c1a2:	mov    rdi,rbx
  40c1a5:	call   4031b0 <malloc@plt>
  40c1aa:	mov    r12,rax
  40c1ad:	mov    QWORD PTR [rip+0x809c],rax        # 414250 <__bss_start@@Base+0x10e8>
  40c1b4:	mov    QWORD PTR [rip+0x809d],rbx        # 414258 <__bss_start@@Base+0x10f0>
  40c1bb:	mov    edx,0x20000
  40c1c0:	mov    rdi,r12
  40c1c3:	xor    esi,esi
  40c1c5:	call   403130 <memset@plt>
  40c1ca:	mov    rbx,QWORD PTR [rip+0x808f]        # 414260 <__bss_start@@Base+0x10f8>
  40c1d1:	lea    rax,[rbx+0x4]
  40c1d5:	cmp    rax,QWORD PTR [rip+0x807c]        # 414258 <__bss_start@@Base+0x10f0>
  40c1dc:	jbe    40c2d7 <__generate_code_for_binary_boolean_expression@@Base+0xb77>
  40c1e2:	add    rbx,0x20003
  40c1e9:	and    rbx,0xfffffffffffe0000
  40c1f0:	mov    rdi,r12
  40c1f3:	mov    rsi,rbx
  40c1f6:	call   4031e0 <realloc@plt>
  40c1fb:	mov    r12,rax
  40c1fe:	mov    QWORD PTR [rip+0x804b],rax        # 414250 <__bss_start@@Base+0x10e8>
  40c205:	mov    QWORD PTR [rip+0x804c],rbx        # 414258 <__bss_start@@Base+0x10f0>
  40c20c:	mov    al,BYTE PTR [rip+0x802e]        # 414240 <__bss_start@@Base+0x10d8>
  40c212:	mov    rbp,QWORD PTR [rip+0x8047]        # 414260 <__bss_start@@Base+0x10f8>
  40c219:	mov    DWORD PTR [r12+rbp*1],0x67636461
  40c221:	lea    rbx,[rbp+0x4]
  40c225:	mov    QWORD PTR [rip+0x8034],rbx        # 414260 <__bss_start@@Base+0x10f8>
  40c22c:	cmp    al,0x1
  40c22e:	jne    40c2bd <__generate_code_for_binary_boolean_expression@@Base+0xb5d>
  40c234:	jmp    40c2f1 <__generate_code_for_binary_boolean_expression@@Base+0xb91>
  40c239:	mov    rdi,rax
  40c23c:	xor    esi,esi
  40c23e:	mov    edx,0x2
  40c243:	call   4031d0 <fseek@plt>
  40c248:	mov    rdi,QWORD PTR [rip+0x7ff9]        # 414248 <__bss_start@@Base+0x10e0>
  40c24f:	call   403160 <ftell@plt>
  40c254:	mov    QWORD PTR [rip+0x8025],rax        # 414280 <__bss_start@@Base+0x1118>
  40c25b:	test   rax,rax
  40c25e:	je     40c3f0 <__generate_code_for_binary_boolean_expression@@Base+0xc90>
  40c264:	mov    r8d,DWORD PTR [rip+0x6ef5]        # 413160 <__data_start@@Base+0x10>
  40c26b:	xor    edi,edi
  40c26d:	mov    rsi,rax
  40c270:	mov    edx,0x3
  40c275:	mov    ecx,0x1
  40c27a:	xor    r9d,r9d
  40c27d:	call   4030f0 <mmap@plt>
  40c282:	mov    QWORD PTR [rip+0x7fc7],rax        # 414250 <__bss_start@@Base+0x10e8>
  40c289:	cmp    rax,0xffffffffffffffff
  40c28d:	je     40c3bc <__generate_code_for_binary_boolean_expression@@Base+0xc5c>
  40c293:	mov    r12,rax
  40c296:	cmp    BYTE PTR [rip+0x7fa3],0x0        # 414240 <__bss_start@@Base+0x10d8>
  40c29d:	jne    40c1ca <__generate_code_for_binary_boolean_expression@@Base+0xa6a>
  40c2a3:	mov    rbx,QWORD PTR [rip+0x7fb6]        # 414260 <__bss_start@@Base+0x10f8>
  40c2aa:	mov    DWORD PTR [r12+rbx*1],0x67636461
  40c2b2:	add    rbx,0x4
  40c2b6:	mov    QWORD PTR [rip+0x7fa3],rbx        # 414260 <__bss_start@@Base+0x10f8>
  40c2bd:	mov    eax,DWORD PTR [r15]
  40c2c0:	mov    DWORD PTR [r12+rbx*1],eax
  40c2c4:	add    rbx,0x4
  40c2c8:	mov    QWORD PTR [rip+0x7f91],rbx        # 414260 <__bss_start@@Base+0x10f8>
  40c2cf:	mov    rax,rbx
  40c2d2:	jmp    40c39e <__generate_code_for_binary_boolean_expression@@Base+0xc3e>
  40c2d7:	mov    rbp,QWORD PTR [rip+0x7f82]        # 414260 <__bss_start@@Base+0x10f8>
  40c2de:	mov    DWORD PTR [r12+rbp*1],0x67636461
  40c2e6:	lea    rbx,[rbp+0x4]
  40c2ea:	mov    QWORD PTR [rip+0x7f6f],rbx        # 414260 <__bss_start@@Base+0x10f8>
  40c2f1:	lea    rax,[rbp+0x8]
  40c2f5:	cmp    rax,QWORD PTR [rip+0x7f5c]        # 414258 <__bss_start@@Base+0x10f0>
  40c2fc:	jbe    40c34e <__generate_code_for_binary_boolean_expression@@Base+0xbee>
  40c2fe:	add    rbp,0x20007
  40c305:	and    rbp,0xfffffffffffe0000
  40c30c:	mov    rdi,r12
  40c30f:	mov    rsi,rbp
  40c312:	call   4031e0 <realloc@plt>
  40c317:	mov    r12,rax
  40c31a:	mov    QWORD PTR [rip+0x7f2f],rax        # 414250 <__bss_start@@Base+0x10e8>
  40c321:	mov    QWORD PTR [rip+0x7f30],rbp        # 414258 <__bss_start@@Base+0x10f0>
  40c328:	mov    rbx,QWORD PTR [rip+0x7f31]        # 414260 <__bss_start@@Base+0x10f8>
  40c32f:	mov    cl,BYTE PTR [rip+0x7f0b]        # 414240 <__bss_start@@Base+0x10d8>
  40c335:	mov    eax,DWORD PTR [r15]
  40c338:	mov    DWORD PTR [r12+rbx*1],eax
  40c33c:	lea    rax,[rbx+0x4]
  40c340:	mov    QWORD PTR [rip+0x7f19],rax        # 414260 <__bss_start@@Base+0x10f8>
  40c347:	cmp    cl,0x1
  40c34a:	je     40c360 <__generate_code_for_binary_boolean_expression@@Base+0xc00>
  40c34c:	jmp    40c39e <__generate_code_for_binary_boolean_expression@@Base+0xc3e>
  40c34e:	mov    eax,DWORD PTR [r15]
  40c351:	mov    DWORD PTR [r12+rbx*1],eax
  40c355:	lea    rax,[rbx+0x4]
  40c359:	mov    QWORD PTR [rip+0x7f00],rax        # 414260 <__bss_start@@Base+0x10f8>
  40c360:	lea    rcx,[rbx+0x8]
  40c364:	cmp    rcx,QWORD PTR [rip+0x7eed]        # 414258 <__bss_start@@Base+0x10f0>
  40c36b:	jbe    40c39e <__generate_code_for_binary_boolean_expression@@Base+0xc3e>
  40c36d:	add    rbx,0x20007
  40c374:	and    rbx,0xfffffffffffe0000
  40c37b:	mov    rdi,r12
  40c37e:	mov    rsi,rbx
  40c381:	call   4031e0 <realloc@plt>
  40c386:	mov    r12,rax
  40c389:	mov    QWORD PTR [rip+0x7ec0],rax        # 414250 <__bss_start@@Base+0x10e8>
  40c390:	mov    QWORD PTR [rip+0x7ec1],rbx        # 414258 <__bss_start@@Base+0x10f0>
  40c397:	mov    rax,QWORD PTR [rip+0x7ec2]        # 414260 <__bss_start@@Base+0x10f8>
  40c39e:	mov    DWORD PTR [r12+rax*1],r14d
  40c3a2:	add    rax,0x4
  40c3a6:	mov    QWORD PTR [rip+0x7eb3],rax        # 414260 <__bss_start@@Base+0x10f8>
  40c3ad:	add    rsp,0x18
  40c3b1:	pop    rbx
  40c3b2:	pop    r12
  40c3b4:	pop    r13
  40c3b6:	pop    r14
  40c3b8:	pop    r15
  40c3ba:	pop    rbp
  40c3bb:	ret    
  40c3bc:	call   403050 <__errno_location@plt>
  40c3c1:	mov    edi,DWORD PTR [rax]
  40c3c3:	mov    rax,QWORD PTR [rip+0x6c26]        # 412ff0 <stderr@GLIBC_2.2.5>
  40c3ca:	mov    rbx,QWORD PTR [rax]
  40c3cd:	mov    rbp,QWORD PTR [rip+0x7e64]        # 414238 <__bss_start@@Base+0x10d0>
  40c3d4:	call   403290 <strerror@plt>
  40c3d9:	lea    rsi,[rip+0x291d]        # 40ecfd <_IO_stdin_used@@Base+0xcfd>
  40c3e0:	mov    rdi,rbx
  40c3e3:	mov    rdx,rbp
  40c3e6:	mov    rcx,rax
  40c3e9:	xor    eax,eax
  40c3eb:	call   403150 <fprintf@plt>
  40c3f0:	mov    BYTE PTR [rip+0x7e49],0x1        # 414240 <__bss_start@@Base+0x10d8>
  40c3f7:	mov    QWORD PTR [rip+0x7e4e],0x0        # 414250 <__bss_start@@Base+0x10e8>
  40c402:	mov    QWORD PTR [rip+0x7e4b],0x0        # 414258 <__bss_start@@Base+0x10f0>
  40c40d:	mov    rbx,QWORD PTR [rip+0x7e4c]        # 414260 <__bss_start@@Base+0x10f8>
  40c414:	cmp    rbx,0xfffffffffffe0000
  40c41b:	jne    40c425 <__generate_code_for_binary_boolean_expression@@Base+0xcc5>
  40c41d:	xor    r12d,r12d
  40c420:	jmp    40c1bb <__generate_code_for_binary_boolean_expression@@Base+0xa5b>
  40c425:	add    rbx,0x3ffff
  40c42c:	and    rbx,0xfffffffffffe0000
  40c433:	jmp    40c1a2 <__generate_code_for_binary_boolean_expression@@Base+0xa42>
  40c438:	call   403050 <__errno_location@plt>
  40c43d:	mov    edi,DWORD PTR [rax]
  40c43f:	mov    rax,QWORD PTR [rip+0x6baa]        # 412ff0 <stderr@GLIBC_2.2.5>
  40c446:	mov    rbx,QWORD PTR [rax]
  40c449:	mov    rbp,QWORD PTR [rip+0x7de8]        # 414238 <__bss_start@@Base+0x10d0>
  40c450:	call   403290 <strerror@plt>
  40c455:	lea    rsi,[rip+0x2747]        # 40eba3 <_IO_stdin_used@@Base+0xba3>
  40c45c:	mov    rdi,rbx
  40c45f:	mov    rdx,rbp
  40c462:	mov    rcx,rax
  40c465:	xor    eax,eax
  40c467:	call   403150 <fprintf@plt>
  40c46c:	jmp    40c3ad <__generate_code_for_binary_boolean_expression@@Base+0xc4d>
  40c471:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c47b:	nop    DWORD PTR [rax+rax*1+0x0]
  40c480:	mov    eax,DWORD PTR [rdi]
  40c482:	mov    ecx,0xffffffff
  40c487:	cmp    rax,rcx
  40c48a:	je     40c499 <__generate_code_for_binary_boolean_expression@@Base+0xd39>
  40c48c:	mov    rax,QWORD PTR [rsi+rax*8]
  40c490:	test   rax,rax
  40c493:	je     40c499 <__generate_code_for_binary_boolean_expression@@Base+0xd39>
  40c495:	add    QWORD PTR [rax],0x1
  40c499:	ret    
  40c49a:	nop    WORD PTR [rax+rax*1+0x0]
  40c4a0:	push   rbp
  40c4a1:	push   r15
  40c4a3:	push   r14
  40c4a5:	push   r13
  40c4a7:	push   r12
  40c4a9:	push   rbx
  40c4aa:	sub    rsp,0x18
  40c4ae:	mov    r15d,ecx
  40c4b1:	xor    r14d,r14d
  40c4b4:	test   r15b,r15b
  40c4b7:	setne  al
  40c4ba:	cmp    QWORD PTR [rip+0x7d86],0x0        # 414248 <__bss_start@@Base+0x10e0>
  40c4c2:	je     40c7e3 <__generate_code_for_binary_boolean_expression@@Base+0x1083>
  40c4c8:	mov    DWORD PTR [rsp+0x4],edi
  40c4cc:	mov    DWORD PTR [rsp+0x14],edx
  40c4d0:	mov    DWORD PTR [rsp],r8d
  40c4d4:	mov    QWORD PTR [rsp+0x8],rsi
  40c4d9:	mov    r14b,al
  40c4dc:	cmp    BYTE PTR [rip+0x7d5d],0x1        # 414240 <__bss_start@@Base+0x10d8>
  40c4e3:	jne    40c524 <__generate_code_for_binary_boolean_expression@@Base+0xdc4>
  40c4e5:	mov    rbx,QWORD PTR [rip+0x7d74]        # 414260 <__bss_start@@Base+0x10f8>
  40c4ec:	lea    rax,[rbx+0x4]
  40c4f0:	cmp    rax,QWORD PTR [rip+0x7d61]        # 414258 <__bss_start@@Base+0x10f0>
  40c4f7:	jbe    40c524 <__generate_code_for_binary_boolean_expression@@Base+0xdc4>
  40c4f9:	add    rbx,0x20003
  40c500:	and    rbx,0xfffffffffffe0000
  40c507:	mov    rdi,QWORD PTR [rip+0x7d42]        # 414250 <__bss_start@@Base+0x10e8>
  40c50e:	mov    rsi,rbx
  40c511:	call   4031e0 <realloc@plt>
  40c516:	mov    QWORD PTR [rip+0x7d33],rax        # 414250 <__bss_start@@Base+0x10e8>
  40c51d:	mov    QWORD PTR [rip+0x7d34],rbx        # 414258 <__bss_start@@Base+0x10f0>
  40c524:	or     r14d,0x2
  40c528:	mov    r12,QWORD PTR [rip+0x7d21]        # 414250 <__bss_start@@Base+0x10e8>
  40c52f:	mov    rbp,QWORD PTR [rip+0x7d2a]        # 414260 <__bss_start@@Base+0x10f8>
  40c536:	mov    DWORD PTR [r12+rbp*1],0x1000000
  40c53e:	lea    r13,[rbp+0x4]
  40c542:	mov    QWORD PTR [rip+0x7d17],r13        # 414260 <__bss_start@@Base+0x10f8>
  40c549:	mov    rdi,QWORD PTR [rsp+0x8]
  40c54e:	test   rdi,rdi
  40c551:	je     40c564 <__generate_code_for_binary_boolean_expression@@Base+0xe04>
  40c553:	call   4030e0 <strlen@plt>
  40c558:	shr    rax,0x2
  40c55c:	lea    r14d,[r14+rax*1]
  40c560:	add    r14d,0x2
  40c564:	cmp    BYTE PTR [rip+0x7cd5],0x0        # 414240 <__bss_start@@Base+0x10d8>
  40c56b:	je     40c5cd <__generate_code_for_binary_boolean_expression@@Base+0xe6d>
  40c56d:	lea    rbx,[rbp+0x8]
  40c571:	cmp    rbx,QWORD PTR [rip+0x7ce0]        # 414258 <__bss_start@@Base+0x10f0>
  40c578:	jbe    40c7f2 <__generate_code_for_binary_boolean_expression@@Base+0x1092>
  40c57e:	add    rbp,0x20007
  40c585:	and    rbp,0xfffffffffffe0000
  40c58c:	mov    rdi,r12
  40c58f:	mov    rsi,rbp
  40c592:	call   4031e0 <realloc@plt>
  40c597:	mov    r12,rax
  40c59a:	mov    QWORD PTR [rip+0x7caf],rax        # 414250 <__bss_start@@Base+0x10e8>
  40c5a1:	mov    QWORD PTR [rip+0x7cb0],rbp        # 414258 <__bss_start@@Base+0x10f0>
  40c5a8:	mov    r13,QWORD PTR [rip+0x7cb1]        # 414260 <__bss_start@@Base+0x10f8>
  40c5af:	mov    al,BYTE PTR [rip+0x7c8b]        # 414240 <__bss_start@@Base+0x10d8>
  40c5b5:	mov    DWORD PTR [r12+r13*1],r14d
  40c5b9:	lea    rbx,[r13+0x4]
  40c5bd:	mov    QWORD PTR [rip+0x7c9c],rbx        # 414260 <__bss_start@@Base+0x10f8>
  40c5c4:	cmp    al,0x1
  40c5c6:	jne    40c5e0 <__generate_code_for_binary_boolean_expression@@Base+0xe80>
  40c5c8:	jmp    40c7fe <__generate_code_for_binary_boolean_expression@@Base+0x109e>
  40c5cd:	mov    DWORD PTR [r12+rbp*1+0x4],r14d
  40c5d2:	add    rbp,0x8
  40c5d6:	mov    QWORD PTR [rip+0x7c83],rbp        # 414260 <__bss_start@@Base+0x10f8>
  40c5dd:	mov    rbx,rbp
  40c5e0:	mov    eax,DWORD PTR [rsp+0x4]
  40c5e4:	mov    DWORD PTR [r12+rbx*1],eax
  40c5e8:	add    rbx,0x4
  40c5ec:	mov    QWORD PTR [rip+0x7c6d],rbx        # 414260 <__bss_start@@Base+0x10f8>
  40c5f3:	mov    r13,rbx
  40c5f6:	lea    rbp,[r13+0x4]
  40c5fa:	mov    eax,DWORD PTR [rsp+0x14]
  40c5fe:	mov    DWORD PTR [r12+r13*1],eax
  40c602:	mov    QWORD PTR [rip+0x7c57],rbp        # 414260 <__bss_start@@Base+0x10f8>
  40c609:	test   r15b,r15b
  40c60c:	je     40c676 <__generate_code_for_binary_boolean_expression@@Base+0xf16>
  40c60e:	cmp    BYTE PTR [rip+0x7c2b],0x1        # 414240 <__bss_start@@Base+0x10d8>
  40c615:	jne    40c655 <__generate_code_for_binary_boolean_expression@@Base+0xef5>
  40c617:	lea    rax,[r13+0x8]
  40c61b:	cmp    rax,QWORD PTR [rip+0x7c36]        # 414258 <__bss_start@@Base+0x10f0>
  40c622:	jbe    40c655 <__generate_code_for_binary_boolean_expression@@Base+0xef5>
  40c624:	add    r13,0x20007
  40c62b:	and    r13,0xfffffffffffe0000
  40c632:	mov    rdi,r12
  40c635:	mov    rsi,r13
  40c638:	call   4031e0 <realloc@plt>
  40c63d:	mov    r12,rax
  40c640:	mov    QWORD PTR [rip+0x7c09],rax        # 414250 <__bss_start@@Base+0x10e8>
  40c647:	mov    QWORD PTR [rip+0x7c0a],r13        # 414258 <__bss_start@@Base+0x10f0>
  40c64e:	mov    rbp,QWORD PTR [rip+0x7c0b]        # 414260 <__bss_start@@Base+0x10f8>
  40c655:	mov    r13,QWORD PTR [rsp+0x8]
  40c65a:	mov    eax,DWORD PTR [rsp]
  40c65d:	mov    DWORD PTR [r12+rbp*1],eax
  40c661:	add    rbp,0x4
  40c665:	mov    QWORD PTR [rip+0x7bf4],rbp        # 414260 <__bss_start@@Base+0x10f8>
  40c66c:	test   r13,r13
  40c66f:	jne    40c684 <__generate_code_for_binary_boolean_expression@@Base+0xf24>
  40c671:	jmp    40c7e3 <__generate_code_for_binary_boolean_expression@@Base+0x1083>
  40c676:	mov    r13,QWORD PTR [rsp+0x8]
  40c67b:	test   r13,r13
  40c67e:	je     40c7e3 <__generate_code_for_binary_boolean_expression@@Base+0x1083>
  40c684:	mov    rdi,r13
  40c687:	call   4030e0 <strlen@plt>
  40c68c:	mov    rbx,rax
  40c68f:	shr    rbx,0x2
  40c693:	add    ebx,0x1
  40c696:	cmp    BYTE PTR [rip+0x7ba3],0x1        # 414240 <__bss_start@@Base+0x10d8>
  40c69d:	jne    40c6e9 <__generate_code_for_binary_boolean_expression@@Base+0xf89>
  40c69f:	lea    rax,[rbp+0x4]
  40c6a3:	mov    r14b,0x1
  40c6a6:	cmp    rax,QWORD PTR [rip+0x7bab]        # 414258 <__bss_start@@Base+0x10f0>
  40c6ad:	jbe    40c6ec <__generate_code_for_binary_boolean_expression@@Base+0xf8c>
  40c6af:	add    rbp,0x20003
  40c6b6:	and    rbp,0xfffffffffffe0000
  40c6bd:	mov    rdi,r12
  40c6c0:	mov    rsi,rbp
  40c6c3:	call   4031e0 <realloc@plt>
  40c6c8:	mov    r12,rax
  40c6cb:	mov    QWORD PTR [rip+0x7b7e],rax        # 414250 <__bss_start@@Base+0x10e8>
  40c6d2:	mov    QWORD PTR [rip+0x7b7f],rbp        # 414258 <__bss_start@@Base+0x10f0>
  40c6d9:	mov    r14b,BYTE PTR [rip+0x7b60]        # 414240 <__bss_start@@Base+0x10d8>
  40c6e0:	mov    rbp,QWORD PTR [rip+0x7b79]        # 414260 <__bss_start@@Base+0x10f8>
  40c6e7:	jmp    40c6ec <__generate_code_for_binary_boolean_expression@@Base+0xf8c>
  40c6e9:	xor    r14d,r14d
  40c6ec:	mov    DWORD PTR [r12+rbp*1],ebx
  40c6f0:	add    rbp,0x4
  40c6f4:	mov    QWORD PTR [rip+0x7b65],rbp        # 414260 <__bss_start@@Base+0x10f8>
  40c6fb:	mov    rdi,r13
  40c6fe:	call   4030e0 <strlen@plt>
  40c703:	mov    rbx,rax
  40c706:	test   r14b,0x1
  40c70a:	je     40c756 <__generate_code_for_binary_boolean_expression@@Base+0xff6>
  40c70c:	lea    r15,[rbx+rbp*1]
  40c710:	mov    r14b,0x1
  40c713:	cmp    r15,QWORD PTR [rip+0x7b3e]        # 414258 <__bss_start@@Base+0x10f0>
  40c71a:	jbe    40c759 <__generate_code_for_binary_boolean_expression@@Base+0xff9>
  40c71c:	add    r15,0x1ffff
  40c723:	and    r15,0xfffffffffffe0000
  40c72a:	mov    rdi,r12
  40c72d:	mov    rsi,r15
  40c730:	call   4031e0 <realloc@plt>
  40c735:	mov    r12,rax
  40c738:	mov    QWORD PTR [rip+0x7b11],rax        # 414250 <__bss_start@@Base+0x10e8>
  40c73f:	mov    QWORD PTR [rip+0x7b12],r15        # 414258 <__bss_start@@Base+0x10f0>
  40c746:	mov    rbp,QWORD PTR [rip+0x7b13]        # 414260 <__bss_start@@Base+0x10f8>
  40c74d:	mov    r14b,BYTE PTR [rip+0x7aec]        # 414240 <__bss_start@@Base+0x10d8>
  40c754:	jmp    40c759 <__generate_code_for_binary_boolean_expression@@Base+0xff9>
  40c756:	xor    r14d,r14d
  40c759:	lea    rdi,[r12+rbp*1]
  40c75d:	mov    rsi,r13
  40c760:	mov    rdx,rbx
  40c763:	call   403180 <memcpy@plt>
  40c768:	add    rbx,rbp
  40c76b:	mov    QWORD PTR [rip+0x7aee],rbx        # 414260 <__bss_start@@Base+0x10f8>
  40c772:	mov    rdi,r13
  40c775:	call   4030e0 <strlen@plt>
  40c77a:	and    eax,0x3
  40c77d:	mov    ebp,0x4
  40c782:	sub    rbp,rax
  40c785:	test   r14b,0x1
  40c789:	je     40c7c9 <__generate_code_for_binary_boolean_expression@@Base+0x1069>
  40c78b:	lea    r14,[rbx+rbp*1]
  40c78f:	cmp    r14,QWORD PTR [rip+0x7ac2]        # 414258 <__bss_start@@Base+0x10f0>
  40c796:	jbe    40c7c9 <__generate_code_for_binary_boolean_expression@@Base+0x1069>
  40c798:	add    r14,0x1ffff
  40c79f:	and    r14,0xfffffffffffe0000
  40c7a6:	mov    rdi,r12
  40c7a9:	mov    rsi,r14
  40c7ac:	call   4031e0 <realloc@plt>
  40c7b1:	mov    r12,rax
  40c7b4:	mov    QWORD PTR [rip+0x7a95],rax        # 414250 <__bss_start@@Base+0x10e8>
  40c7bb:	mov    QWORD PTR [rip+0x7a96],r14        # 414258 <__bss_start@@Base+0x10f0>
  40c7c2:	mov    rbx,QWORD PTR [rip+0x7a97]        # 414260 <__bss_start@@Base+0x10f8>
  40c7c9:	add    r12,rbx
  40c7cc:	mov    rdi,r12
  40c7cf:	xor    esi,esi
  40c7d1:	mov    rdx,rbp
  40c7d4:	call   403130 <memset@plt>
  40c7d9:	add    rbx,rbp
  40c7dc:	mov    QWORD PTR [rip+0x7a7d],rbx        # 414260 <__bss_start@@Base+0x10f8>
  40c7e3:	add    rsp,0x18
  40c7e7:	pop    rbx
  40c7e8:	pop    r12
  40c7ea:	pop    r13
  40c7ec:	pop    r14
  40c7ee:	pop    r15
  40c7f0:	pop    rbp
  40c7f1:	ret    
  40c7f2:	mov    DWORD PTR [r12+rbp*1+0x4],r14d
  40c7f7:	mov    QWORD PTR [rip+0x7a62],rbx        # 414260 <__bss_start@@Base+0x10f8>
  40c7fe:	lea    rax,[r13+0x8]
  40c802:	cmp    rax,QWORD PTR [rip+0x7a4f]        # 414258 <__bss_start@@Base+0x10f0>
  40c809:	jbe    40c85f <__generate_code_for_binary_boolean_expression@@Base+0x10ff>
  40c80b:	add    r13,0x20007
  40c812:	and    r13,0xfffffffffffe0000
  40c819:	mov    rdi,r12
  40c81c:	mov    rsi,r13
  40c81f:	call   4031e0 <realloc@plt>
  40c824:	mov    r12,rax
  40c827:	mov    QWORD PTR [rip+0x7a22],rax        # 414250 <__bss_start@@Base+0x10e8>
  40c82e:	mov    QWORD PTR [rip+0x7a23],r13        # 414258 <__bss_start@@Base+0x10f0>
  40c835:	mov    rbx,QWORD PTR [rip+0x7a24]        # 414260 <__bss_start@@Base+0x10f8>
  40c83c:	mov    al,BYTE PTR [rip+0x79fe]        # 414240 <__bss_start@@Base+0x10d8>
  40c842:	mov    ecx,DWORD PTR [rsp+0x4]
  40c846:	mov    DWORD PTR [r12+rbx*1],ecx
  40c84a:	lea    r13,[rbx+0x4]
  40c84e:	mov    QWORD PTR [rip+0x7a0b],r13        # 414260 <__bss_start@@Base+0x10f8>
  40c855:	cmp    al,0x1
  40c857:	jne    40c5f6 <__generate_code_for_binary_boolean_expression@@Base+0xe96>
  40c85d:	jmp    40c872 <__generate_code_for_binary_boolean_expression@@Base+0x1112>
  40c85f:	mov    eax,DWORD PTR [rsp+0x4]
  40c863:	mov    DWORD PTR [r12+rbx*1],eax
  40c867:	lea    r13,[rbx+0x4]
  40c86b:	mov    QWORD PTR [rip+0x79ee],r13        # 414260 <__bss_start@@Base+0x10f8>
  40c872:	lea    rax,[rbx+0x8]
  40c876:	cmp    rax,QWORD PTR [rip+0x79db]        # 414258 <__bss_start@@Base+0x10f0>
  40c87d:	jbe    40c5f6 <__generate_code_for_binary_boolean_expression@@Base+0xe96>
  40c883:	add    rbx,0x20007
  40c88a:	and    rbx,0xfffffffffffe0000
  40c891:	mov    rdi,r12
  40c894:	mov    rsi,rbx
  40c897:	call   4031e0 <realloc@plt>
  40c89c:	mov    r12,rax
  40c89f:	mov    QWORD PTR [rip+0x79aa],rax        # 414250 <__bss_start@@Base+0x10e8>
  40c8a6:	mov    QWORD PTR [rip+0x79ab],rbx        # 414258 <__bss_start@@Base+0x10f0>
  40c8ad:	mov    r13,QWORD PTR [rip+0x79ac]        # 414260 <__bss_start@@Base+0x10f8>
  40c8b4:	jmp    40c5f6 <__generate_code_for_binary_boolean_expression@@Base+0xe96>
  40c8b9:	nop    DWORD PTR [rax+0x0]
  40c8c0:	push   rbp
  40c8c1:	push   r15
  40c8c3:	push   r14
  40c8c5:	push   r13
  40c8c7:	push   r12
  40c8c9:	push   rbx
  40c8ca:	sub    rsp,0x18
  40c8ce:	cmp    QWORD PTR [rip+0x7972],0x0        # 414248 <__bss_start@@Base+0x10e0>
  40c8d6:	je     40c97a <__generate_code_for_binary_boolean_expression@@Base+0x121a>
  40c8dc:	mov    r13d,edi
  40c8df:	mov    r14,QWORD PTR [rip+0x797a]        # 414260 <__bss_start@@Base+0x10f8>
  40c8e6:	cmp    BYTE PTR [rip+0x7953],0x0        # 414240 <__bss_start@@Base+0x10d8>
  40c8ed:	mov    QWORD PTR [rsp+0x8],rsi
  40c8f2:	je     40c989 <__generate_code_for_binary_boolean_expression@@Base+0x1229>
  40c8f8:	lea    rbx,[r14+0x4]
  40c8fc:	cmp    rbx,QWORD PTR [rip+0x7955]        # 414258 <__bss_start@@Base+0x10f0>
  40c903:	jbe    40ca11 <__generate_code_for_binary_boolean_expression@@Base+0x12b1>
  40c909:	add    r14,0x20003
  40c910:	and    r14,0xfffffffffffe0000
  40c917:	mov    rdi,QWORD PTR [rip+0x7932]        # 414250 <__bss_start@@Base+0x10e8>
  40c91e:	mov    rsi,r14
  40c921:	call   4031e0 <realloc@plt>
  40c926:	mov    rsi,QWORD PTR [rsp+0x8]
  40c92b:	mov    r15,rax
  40c92e:	mov    QWORD PTR [rip+0x791b],rax        # 414250 <__bss_start@@Base+0x10e8>
  40c935:	mov    QWORD PTR [rip+0x791c],r14        # 414258 <__bss_start@@Base+0x10f0>
  40c93c:	mov    r14,QWORD PTR [rip+0x791d]        # 414260 <__bss_start@@Base+0x10f8>
  40c943:	mov    al,BYTE PTR [rip+0x78f7]        # 414240 <__bss_start@@Base+0x10d8>
  40c949:	lea    rbx,[r14+0x4]
  40c94d:	mov    DWORD PTR [r15+r14*1],0x1a10000
  40c955:	mov    QWORD PTR [rip+0x7904],rbx        # 414260 <__bss_start@@Base+0x10f8>
  40c95c:	lea    ebp,[r13+r13*1+0x0]
  40c961:	xor    ecx,ecx
  40c963:	mov    QWORD PTR [rsp],rcx
  40c967:	mov    r12d,0x0
  40c96d:	cmp    al,0x1
  40c96f:	je     40ca2c <__generate_code_for_binary_boolean_expression@@Base+0x12cc>
  40c975:	jmp    40cb5f <__generate_code_for_binary_boolean_expression@@Base+0x13ff>
  40c97a:	add    rsp,0x18
  40c97e:	pop    rbx
  40c97f:	pop    r12
  40c981:	pop    r13
  40c983:	pop    r14
  40c985:	pop    r15
  40c987:	pop    rbp
  40c988:	ret    
  40c989:	mov    r15,QWORD PTR [rip+0x78c0]        # 414250 <__bss_start@@Base+0x10e8>
  40c990:	mov    ecx,DWORD PTR [r15+r14*1]
  40c994:	lea    rbx,[r14+0x4]
  40c998:	mov    QWORD PTR [rip+0x78c1],rbx        # 414260 <__bss_start@@Base+0x10f8>
  40c99f:	cmp    ecx,0xffffffff
  40c9a2:	je     40ca85 <__generate_code_for_binary_boolean_expression@@Base+0x1325>
  40c9a8:	cmp    ecx,0x1a10000
  40c9ae:	jne    40ca93 <__generate_code_for_binary_boolean_expression@@Base+0x1333>
  40c9b4:	mov    ecx,DWORD PTR [r15+r14*1+0x4]
  40c9b9:	lea    rbp,[r14+0x8]
  40c9bd:	mov    QWORD PTR [rip+0x789c],rbp        # 414260 <__bss_start@@Base+0x10f8>
  40c9c4:	cmp    ecx,0xffffffff
  40c9c7:	je     40caad <__generate_code_for_binary_boolean_expression@@Base+0x134d>
  40c9cd:	mov    eax,ecx
  40c9cf:	shr    eax,1
  40c9d1:	cmp    eax,r13d
  40c9d4:	jne    40caad <__generate_code_for_binary_boolean_expression@@Base+0x134d>
  40c9da:	mov    r12d,r13d
  40c9dd:	lea    rdi,[r12*8+0x0]
  40c9e5:	call   4031b0 <malloc@plt>
  40c9ea:	test   r13d,r13d
  40c9ed:	mov    rcx,rax
  40c9f0:	mov    QWORD PTR [rsp],rax
  40c9f4:	je     40cada <__generate_code_for_binary_boolean_expression@@Base+0x137a>
  40c9fa:	mov    eax,r12d
  40c9fd:	and    eax,0x1
  40ca00:	cmp    r13d,0x1
  40ca04:	jne    40cae4 <__generate_code_for_binary_boolean_expression@@Base+0x1384>
  40ca0a:	xor    ecx,ecx
  40ca0c:	jmp    40cb23 <__generate_code_for_binary_boolean_expression@@Base+0x13c3>
  40ca11:	mov    r15,QWORD PTR [rip+0x7838]        # 414250 <__bss_start@@Base+0x10e8>
  40ca18:	mov    DWORD PTR [r15+r14*1],0x1a10000
  40ca20:	mov    QWORD PTR [rip+0x7839],rbx        # 414260 <__bss_start@@Base+0x10f8>
  40ca27:	lea    ebp,[r13+r13*1+0x0]
  40ca2c:	lea    rax,[r14+0x8]
  40ca30:	cmp    rax,QWORD PTR [rip+0x7821]        # 414258 <__bss_start@@Base+0x10f0>
  40ca37:	jbe    40ca77 <__generate_code_for_binary_boolean_expression@@Base+0x1317>
  40ca39:	add    r14,0x20007
  40ca40:	and    r14,0xfffffffffffe0000
  40ca47:	mov    rdi,r15
  40ca4a:	mov    rsi,r14
  40ca4d:	call   4031e0 <realloc@plt>
  40ca52:	mov    rsi,QWORD PTR [rsp+0x8]
  40ca57:	mov    r15,rax
  40ca5a:	mov    QWORD PTR [rip+0x77ef],rax        # 414250 <__bss_start@@Base+0x10e8>
  40ca61:	mov    QWORD PTR [rip+0x77f0],r14        # 414258 <__bss_start@@Base+0x10f0>
  40ca68:	xor    eax,eax
  40ca6a:	mov    QWORD PTR [rsp],rax
  40ca6e:	mov    rbx,QWORD PTR [rip+0x77eb]        # 414260 <__bss_start@@Base+0x10f8>
  40ca75:	jmp    40ca7d <__generate_code_for_binary_boolean_expression@@Base+0x131d>
  40ca77:	xor    eax,eax
  40ca79:	mov    QWORD PTR [rsp],rax
  40ca7d:	xor    r12d,r12d
  40ca80:	jmp    40cb5f <__generate_code_for_binary_boolean_expression@@Base+0x13ff>
  40ca85:	xor    r12d,r12d
  40ca88:	xor    eax,eax
  40ca8a:	mov    QWORD PTR [rsp],rax
  40ca8e:	jmp    40cb44 <__generate_code_for_binary_boolean_expression@@Base+0x13e4>
  40ca93:	mov    rax,QWORD PTR [rip+0x6556]        # 412ff0 <stderr@GLIBC_2.2.5>
  40ca9a:	mov    rdi,QWORD PTR [rax]
  40ca9d:	mov    rdx,QWORD PTR [rip+0x7794]        # 414238 <__bss_start@@Base+0x10d0>
  40caa4:	lea    rsi,[rip+0x2118]        # 40ebc3 <_IO_stdin_used@@Base+0xbc3>
  40caab:	jmp    40cac5 <__generate_code_for_binary_boolean_expression@@Base+0x1365>
  40caad:	mov    rax,QWORD PTR [rip+0x653c]        # 412ff0 <stderr@GLIBC_2.2.5>
  40cab4:	mov    rdi,QWORD PTR [rax]
  40cab7:	mov    rdx,QWORD PTR [rip+0x777a]        # 414238 <__bss_start@@Base+0x10d0>
  40cabe:	lea    rsi,[rip+0x2148]        # 40ec0d <_IO_stdin_used@@Base+0xc0d>
  40cac5:	xor    eax,eax
  40cac7:	add    rsp,0x18
  40cacb:	pop    rbx
  40cacc:	pop    r12
  40cace:	pop    r13
  40cad0:	pop    r14
  40cad2:	pop    r15
  40cad4:	pop    rbp
  40cad5:	jmp    403150 <fprintf@plt>
  40cada:	mov    r12,rax
  40cadd:	mov    rsi,QWORD PTR [rsp+0x8]
  40cae2:	jmp    40cb44 <__generate_code_for_binary_boolean_expression@@Base+0x13e4>
  40cae4:	mov    rbp,0xfffffffffffffff8
  40caeb:	sub    rbp,r14
  40caee:	lea    rdx,[r14+r15*1]
  40caf2:	add    rdx,0x14
  40caf6:	sub    r12,rax
  40caf9:	xor    ecx,ecx
  40cafb:	mov    rdi,QWORD PTR [rsp]
  40caff:	nop
  40cb00:	mov    rsi,QWORD PTR [rdx+rcx*8-0xc]
  40cb05:	mov    QWORD PTR [rdi+rcx*8],rsi
  40cb09:	mov    rsi,QWORD PTR [rdx+rcx*8-0x4]
  40cb0e:	mov    QWORD PTR [rdi+rcx*8+0x8],rsi
  40cb13:	add    rcx,0x2
  40cb17:	add    rbp,0xfffffffffffffff0
  40cb1b:	cmp    r12,rcx
  40cb1e:	jne    40cb00 <__generate_code_for_binary_boolean_expression@@Base+0x13a0>
  40cb20:	neg    rbp
  40cb23:	mov    rsi,QWORD PTR [rsp+0x8]
  40cb28:	test   rax,rax
  40cb2b:	mov    r12,QWORD PTR [rsp]
  40cb2f:	je     40cb3d <__generate_code_for_binary_boolean_expression@@Base+0x13dd>
  40cb31:	mov    rax,QWORD PTR [r15+rbp*1]
  40cb35:	mov    QWORD PTR [r12+rcx*8],rax
  40cb39:	add    rbp,0x8
  40cb3d:	mov    QWORD PTR [rip+0x771c],rbp        # 414260 <__bss_start@@Base+0x10f8>
  40cb44:	mov    QWORD PTR [rip+0x7715],r14        # 414260 <__bss_start@@Base+0x10f8>
  40cb4b:	mov    DWORD PTR [r15+r14*1],0x1a10000
  40cb53:	mov    QWORD PTR [rip+0x7706],rbx        # 414260 <__bss_start@@Base+0x10f8>
  40cb5a:	lea    ebp,[r13+r13*1+0x0]
  40cb5f:	mov    DWORD PTR [r15+rbx*1],ebp
  40cb63:	add    rbx,0x4
  40cb67:	mov    QWORD PTR [rip+0x76f2],rbx        # 414260 <__bss_start@@Base+0x10f8>
  40cb6e:	test   r13d,r13d
  40cb71:	je     40ccb8 <__generate_code_for_binary_boolean_expression@@Base+0x1558>
  40cb77:	mov    edi,r13d
  40cb7a:	xor    ebp,ebp
  40cb7c:	mov    QWORD PTR [rsp+0x10],rdi
  40cb81:	test   r12,r12
  40cb84:	jne    40cbc6 <__generate_code_for_binary_boolean_expression@@Base+0x1466>
  40cb86:	jmp    40cbd0 <__generate_code_for_binary_boolean_expression@@Base+0x1470>
  40cb88:	nop    DWORD PTR [rax+rax*1+0x0]
  40cb90:	mov    DWORD PTR [r15+rbx*1],r14d
  40cb94:	add    rbx,0x4
  40cb98:	mov    QWORD PTR [rip+0x76c1],rbx        # 414260 <__bss_start@@Base+0x10f8>
  40cb9f:	mov    rax,rbx
  40cba2:	mov    DWORD PTR [r15+rax*1],r13d
  40cba6:	add    rax,0x4
  40cbaa:	mov    QWORD PTR [rip+0x76af],rax        # 414260 <__bss_start@@Base+0x10f8>
  40cbb1:	add    rbp,0x1
  40cbb5:	mov    rbx,rax
  40cbb8:	cmp    rdi,rbp
  40cbbb:	je     40ccb8 <__generate_code_for_binary_boolean_expression@@Base+0x1558>
  40cbc1:	test   r12,r12
  40cbc4:	je     40cbd0 <__generate_code_for_binary_boolean_expression@@Base+0x1470>
  40cbc6:	mov    r14,QWORD PTR [r12+rbp*8]
  40cbca:	jmp    40cbd3 <__generate_code_for_binary_boolean_expression@@Base+0x1473>
  40cbcc:	nop    DWORD PTR [rax+0x0]
  40cbd0:	xor    r14d,r14d
  40cbd3:	add    r14,QWORD PTR [rsi+rbp*8]
  40cbd7:	mov    QWORD PTR [rsi+rbp*8],r14
  40cbdb:	mov    r13,r14
  40cbde:	shr    r13,0x20
  40cbe2:	cmp    BYTE PTR [rip+0x7657],0x0        # 414240 <__bss_start@@Base+0x10d8>
  40cbe9:	je     40cb90 <__generate_code_for_binary_boolean_expression@@Base+0x1430>
  40cbeb:	lea    rax,[rbx+0x4]
  40cbef:	mov    rcx,QWORD PTR [rip+0x7662]        # 414258 <__bss_start@@Base+0x10f0>
  40cbf6:	cmp    rax,rcx
  40cbf9:	jbe    40cc60 <__generate_code_for_binary_boolean_expression@@Base+0x1500>
  40cbfb:	add    rbx,0x20003
  40cc02:	and    rbx,0xfffffffffffe0000
  40cc09:	mov    rdi,r15
  40cc0c:	mov    rsi,rbx
  40cc0f:	call   4031e0 <realloc@plt>
  40cc14:	mov    rdi,QWORD PTR [rsp+0x10]
  40cc19:	mov    rsi,QWORD PTR [rsp+0x8]
  40cc1e:	mov    r15,rax
  40cc21:	mov    QWORD PTR [rip+0x7628],rax        # 414250 <__bss_start@@Base+0x10e8>
  40cc28:	mov    QWORD PTR [rip+0x7629],rbx        # 414258 <__bss_start@@Base+0x10f0>
  40cc2f:	mov    dl,BYTE PTR [rip+0x760b]        # 414240 <__bss_start@@Base+0x10d8>
  40cc35:	mov    rcx,rbx
  40cc38:	mov    rbx,QWORD PTR [rip+0x7621]        # 414260 <__bss_start@@Base+0x10f8>
  40cc3f:	mov    DWORD PTR [rax+rbx*1],r14d
  40cc43:	lea    rax,[rbx+0x4]
  40cc47:	mov    QWORD PTR [rip+0x7612],rax        # 414260 <__bss_start@@Base+0x10f8>
  40cc4e:	cmp    dl,0x1
  40cc51:	jne    40cba2 <__generate_code_for_binary_boolean_expression@@Base+0x1442>
  40cc57:	jmp    40cc6b <__generate_code_for_binary_boolean_expression@@Base+0x150b>
  40cc59:	nop    DWORD PTR [rax+0x0]
  40cc60:	mov    DWORD PTR [r15+rbx*1],r14d
  40cc64:	mov    QWORD PTR [rip+0x75f5],rax        # 414260 <__bss_start@@Base+0x10f8>
  40cc6b:	lea    rdx,[rbx+0x8]
  40cc6f:	cmp    rdx,rcx
  40cc72:	jbe    40cba2 <__generate_code_for_binary_boolean_expression@@Base+0x1442>
  40cc78:	add    rbx,0x20007
  40cc7f:	and    rbx,0xfffffffffffe0000
  40cc86:	mov    rdi,r15
  40cc89:	mov    rsi,rbx
  40cc8c:	call   4031e0 <realloc@plt>
  40cc91:	mov    rdi,QWORD PTR [rsp+0x10]
  40cc96:	mov    rsi,QWORD PTR [rsp+0x8]
  40cc9b:	mov    r15,rax
  40cc9e:	mov    QWORD PTR [rip+0x75ab],rax        # 414250 <__bss_start@@Base+0x10e8>
  40cca5:	mov    QWORD PTR [rip+0x75ac],rbx        # 414258 <__bss_start@@Base+0x10f0>
  40ccac:	mov    rax,QWORD PTR [rip+0x75ad]        # 414260 <__bss_start@@Base+0x10f8>
  40ccb3:	jmp    40cba2 <__generate_code_for_binary_boolean_expression@@Base+0x1442>
  40ccb8:	mov    rdi,QWORD PTR [rsp]
  40ccbc:	add    rsp,0x18
  40ccc0:	pop    rbx
  40ccc1:	pop    r12
  40ccc3:	pop    r13
  40ccc5:	pop    r14
  40ccc7:	pop    r15
  40ccc9:	pop    rbp
  40ccca:	jmp    403040 <free@plt>
  40cccf:	nop
  40ccd0:	push   rbp
  40ccd1:	push   r15
  40ccd3:	push   r14
  40ccd5:	push   rbx
  40ccd6:	push   rax
  40ccd7:	cmp    QWORD PTR [rip+0x7569],0x0        # 414248 <__bss_start@@Base+0x10e0>
  40ccdf:	je     40d056 <__generate_code_for_binary_boolean_expression@@Base+0x18f6>
  40cce5:	mov    rbx,QWORD PTR [rip+0x7574]        # 414260 <__bss_start@@Base+0x10f8>
  40ccec:	cmp    BYTE PTR [rip+0x754d],0x0        # 414240 <__bss_start@@Base+0x10d8>
  40ccf3:	je     40cd5f <__generate_code_for_binary_boolean_expression@@Base+0x15ff>
  40ccf5:	lea    r14,[rbx+0x4]
  40ccf9:	cmp    r14,QWORD PTR [rip+0x7558]        # 414258 <__bss_start@@Base+0x10f0>
  40cd00:	jbe    40cdab <__generate_code_for_binary_boolean_expression@@Base+0x164b>
  40cd06:	add    rbx,0x20003
  40cd0d:	and    rbx,0xfffffffffffe0000
  40cd14:	mov    rdi,QWORD PTR [rip+0x7535]        # 414250 <__bss_start@@Base+0x10e8>
  40cd1b:	mov    rsi,rbx
  40cd1e:	call   4031e0 <realloc@plt>
  40cd23:	mov    QWORD PTR [rip+0x7526],rax        # 414250 <__bss_start@@Base+0x10e8>
  40cd2a:	mov    QWORD PTR [rip+0x7527],rbx        # 414258 <__bss_start@@Base+0x10f0>
  40cd31:	mov    rbx,QWORD PTR [rip+0x7528]        # 414260 <__bss_start@@Base+0x10f8>
  40cd38:	mov    cl,BYTE PTR [rip+0x7502]        # 414240 <__bss_start@@Base+0x10d8>
  40cd3e:	lea    r14,[rbx+0x4]
  40cd42:	mov    DWORD PTR [rax+rbx*1],0xa1000000
  40cd49:	mov    QWORD PTR [rip+0x7510],r14        # 414260 <__bss_start@@Base+0x10f8>
  40cd50:	mov    ebp,0x1
  40cd55:	cmp    cl,0x1
  40cd58:	je     40cdc0 <__generate_code_for_binary_boolean_expression@@Base+0x1660>
  40cd5a:	jmp    40cedb <__generate_code_for_binary_boolean_expression@@Base+0x177b>
  40cd5f:	mov    rax,QWORD PTR [rip+0x74ea]        # 414250 <__bss_start@@Base+0x10e8>
  40cd66:	mov    ecx,DWORD PTR [rax+rbx*1]
  40cd69:	lea    r14,[rbx+0x4]
  40cd6d:	mov    QWORD PTR [rip+0x74ec],r14        # 414260 <__bss_start@@Base+0x10f8>
  40cd74:	cmp    ecx,0xa1000000
  40cd7a:	je     40ce9c <__generate_code_for_binary_boolean_expression@@Base+0x173c>
  40cd80:	mov    ebp,0x1
  40cd85:	cmp    ecx,0xffffffff
  40cd88:	je     40cecd <__generate_code_for_binary_boolean_expression@@Base+0x176d>
  40cd8e:	mov    rax,QWORD PTR [rip+0x625b]        # 412ff0 <stderr@GLIBC_2.2.5>
  40cd95:	mov    rdi,QWORD PTR [rax]
  40cd98:	mov    rdx,QWORD PTR [rip+0x7499]        # 414238 <__bss_start@@Base+0x10d0>
  40cd9f:	lea    rsi,[rip+0x1ebb]        # 40ec61 <_IO_stdin_used@@Base+0xc61>
  40cda6:	jmp    40d2b5 <__generate_code_for_binary_boolean_expression@@Base+0x1b55>
  40cdab:	mov    rax,QWORD PTR [rip+0x749e]        # 414250 <__bss_start@@Base+0x10e8>
  40cdb2:	mov    DWORD PTR [rax+rbx*1],0xa1000000
  40cdb9:	mov    QWORD PTR [rip+0x74a0],r14        # 414260 <__bss_start@@Base+0x10f8>
  40cdc0:	lea    rcx,[rbx+0x8]
  40cdc4:	cmp    rcx,QWORD PTR [rip+0x748d]        # 414258 <__bss_start@@Base+0x10f0>
  40cdcb:	jbe    40ce23 <__generate_code_for_binary_boolean_expression@@Base+0x16c3>
  40cdcd:	add    rbx,0x20007
  40cdd4:	and    rbx,0xfffffffffffe0000
  40cddb:	mov    rdi,rax
  40cdde:	mov    rsi,rbx
  40cde1:	call   4031e0 <realloc@plt>
  40cde6:	mov    QWORD PTR [rip+0x7463],rax        # 414250 <__bss_start@@Base+0x10e8>
  40cded:	mov    QWORD PTR [rip+0x7464],rbx        # 414258 <__bss_start@@Base+0x10f0>
  40cdf4:	mov    r14,QWORD PTR [rip+0x7465]        # 414260 <__bss_start@@Base+0x10f8>
  40cdfb:	mov    cl,BYTE PTR [rip+0x743f]        # 414240 <__bss_start@@Base+0x10d8>
  40ce01:	mov    DWORD PTR [rax+r14*1],0x9
  40ce09:	lea    rbx,[r14+0x4]
  40ce0d:	mov    QWORD PTR [rip+0x744c],rbx        # 414260 <__bss_start@@Base+0x10f8>
  40ce14:	mov    ebp,0x1
  40ce19:	cmp    cl,0x1
  40ce1c:	je     40ce36 <__generate_code_for_binary_boolean_expression@@Base+0x16d6>
  40ce1e:	jmp    40cef1 <__generate_code_for_binary_boolean_expression@@Base+0x1791>
  40ce23:	mov    DWORD PTR [rax+r14*1],0x9
  40ce2b:	lea    rbx,[r14+0x4]
  40ce2f:	mov    QWORD PTR [rip+0x742a],rbx        # 414260 <__bss_start@@Base+0x10f8>
  40ce36:	lea    rcx,[r14+0x8]
  40ce3a:	cmp    rcx,QWORD PTR [rip+0x7417]        # 414258 <__bss_start@@Base+0x10f0>
  40ce41:	jbe    40d0dd <__generate_code_for_binary_boolean_expression@@Base+0x197d>
  40ce47:	add    r14,0x20007
  40ce4e:	and    r14,0xfffffffffffe0000
  40ce55:	mov    rdi,rax
  40ce58:	mov    rsi,r14
  40ce5b:	call   4031e0 <realloc@plt>
  40ce60:	mov    QWORD PTR [rip+0x73e9],rax        # 414250 <__bss_start@@Base+0x10e8>
  40ce67:	mov    QWORD PTR [rip+0x73ea],r14        # 414258 <__bss_start@@Base+0x10f0>
  40ce6e:	mov    rbx,QWORD PTR [rip+0x73eb]        # 414260 <__bss_start@@Base+0x10f8>
  40ce75:	mov    cl,BYTE PTR [rip+0x73c5]        # 414240 <__bss_start@@Base+0x10d8>
  40ce7b:	mov    DWORD PTR [rax+rbx*1],0x0
  40ce82:	lea    r14,[rbx+0x4]
  40ce86:	mov    QWORD PTR [rip+0x73d3],r14        # 414260 <__bss_start@@Base+0x10f8>
  40ce8d:	mov    ebp,0x1
  40ce92:	cmp    cl,0x1
  40ce95:	jne    40cf06 <__generate_code_for_binary_boolean_expression@@Base+0x17a6>
  40ce97:	jmp    40d0ef <__generate_code_for_binary_boolean_expression@@Base+0x198f>
  40ce9c:	mov    ecx,DWORD PTR [rax+rbx*1+0x4]
  40cea0:	lea    rdx,[rbx+0x8]
  40cea4:	mov    QWORD PTR [rip+0x73b5],rdx        # 414260 <__bss_start@@Base+0x10f8>
  40ceab:	cmp    ecx,0x9
  40ceae:	jne    40d29d <__generate_code_for_binary_boolean_expression@@Base+0x1b3d>
  40ceb4:	lea    rcx,[rbx+0x14]
  40ceb8:	movzx  ebp,BYTE PTR [rip+0x73a9]        # 414268 <__bss_start@@Base+0x1100>
  40cebf:	xor    ebp,0x1
  40cec2:	add    ebp,DWORD PTR [rbx+rax*1+0x10]
  40cec6:	mov    QWORD PTR [rip+0x7393],rcx        # 414260 <__bss_start@@Base+0x10f8>
  40cecd:	mov    DWORD PTR [rax+rbx*1],0xa1000000
  40ced4:	mov    QWORD PTR [rip+0x7385],r14        # 414260 <__bss_start@@Base+0x10f8>
  40cedb:	mov    DWORD PTR [rax+r14*1],0x9
  40cee3:	add    r14,0x4
  40cee7:	mov    QWORD PTR [rip+0x7372],r14        # 414260 <__bss_start@@Base+0x10f8>
  40ceee:	mov    rbx,r14
  40cef1:	mov    DWORD PTR [rax+rbx*1],0x0
  40cef8:	add    rbx,0x4
  40cefc:	mov    QWORD PTR [rip+0x735d],rbx        # 414260 <__bss_start@@Base+0x10f8>
  40cf03:	mov    r14,rbx
  40cf06:	mov    DWORD PTR [rax+r14*1],0x0
  40cf0e:	add    r14,0x4
  40cf12:	mov    QWORD PTR [rip+0x7347],r14        # 414260 <__bss_start@@Base+0x10f8>
  40cf19:	mov    rbx,r14
  40cf1c:	mov    DWORD PTR [rax+rbx*1],ebp
  40cf1f:	lea    r14,[rbx+0x4]
  40cf23:	mov    QWORD PTR [rip+0x7336],r14        # 414260 <__bss_start@@Base+0x10f8>
  40cf2a:	cmp    BYTE PTR [rip+0x730f],0x0        # 414240 <__bss_start@@Base+0x10d8>
  40cf31:	je     40cf97 <__generate_code_for_binary_boolean_expression@@Base+0x1837>
  40cf33:	lea    r15,[rbx+0x8]
  40cf37:	cmp    r15,QWORD PTR [rip+0x731a]        # 414258 <__bss_start@@Base+0x10f0>
  40cf3e:	jbe    40d061 <__generate_code_for_binary_boolean_expression@@Base+0x1901>
  40cf44:	add    rbx,0x20007
  40cf4b:	and    rbx,0xfffffffffffe0000
  40cf52:	mov    rdi,QWORD PTR [rip+0x72f7]        # 414250 <__bss_start@@Base+0x10e8>
  40cf59:	mov    rsi,rbx
  40cf5c:	call   4031e0 <realloc@plt>
  40cf61:	mov    QWORD PTR [rip+0x72e8],rax        # 414250 <__bss_start@@Base+0x10e8>
  40cf68:	mov    QWORD PTR [rip+0x72e9],rbx        # 414258 <__bss_start@@Base+0x10f0>
  40cf6f:	mov    r14,QWORD PTR [rip+0x72ea]        # 414260 <__bss_start@@Base+0x10f8>
  40cf76:	lea    r15,[r14+0x4]
  40cf7a:	cmp    BYTE PTR [rip+0x72bf],0x0        # 414240 <__bss_start@@Base+0x10d8>
  40cf81:	mov    DWORD PTR [rax+r14*1],0x0
  40cf89:	mov    QWORD PTR [rip+0x72d0],r15        # 414260 <__bss_start@@Base+0x10f8>
  40cf90:	je     40cfb4 <__generate_code_for_binary_boolean_expression@@Base+0x1854>
  40cf92:	jmp    40d077 <__generate_code_for_binary_boolean_expression@@Base+0x1917>
  40cf97:	mov    rax,QWORD PTR [rip+0x72b2]        # 414250 <__bss_start@@Base+0x10e8>
  40cf9e:	mov    DWORD PTR [rax+rbx*1+0x4],0x0
  40cfa6:	add    rbx,0x8
  40cfaa:	mov    QWORD PTR [rip+0x72af],rbx        # 414260 <__bss_start@@Base+0x10f8>
  40cfb1:	mov    r15,rbx
  40cfb4:	mov    DWORD PTR [rax+r15*1],0x0
  40cfbc:	add    r15,0x4
  40cfc0:	mov    QWORD PTR [rip+0x7299],r15        # 414260 <__bss_start@@Base+0x10f8>
  40cfc7:	mov    r14,r15
  40cfca:	mov    DWORD PTR [rax+r14*1],0x0
  40cfd2:	add    r14,0x4
  40cfd6:	mov    QWORD PTR [rip+0x7283],r14        # 414260 <__bss_start@@Base+0x10f8>
  40cfdd:	mov    rbx,r14
  40cfe0:	mov    DWORD PTR [rax+rbx*1],0x0
  40cfe7:	add    rbx,0x4
  40cfeb:	mov    QWORD PTR [rip+0x726e],rbx        # 414260 <__bss_start@@Base+0x10f8>
  40cff2:	mov    r14,rbx
  40cff5:	mov    DWORD PTR [rax+r14*1],0x0
  40cffd:	add    r14,0x4
  40d001:	mov    QWORD PTR [rip+0x7258],r14        # 414260 <__bss_start@@Base+0x10f8>
  40d008:	mov    rbx,r14
  40d00b:	mov    DWORD PTR [rax+rbx*1],0x0
  40d012:	add    rbx,0x4
  40d016:	mov    QWORD PTR [rip+0x7243],rbx        # 414260 <__bss_start@@Base+0x10f8>
  40d01d:	mov    r14,rbx
  40d020:	mov    DWORD PTR [rax+r14*1],0xa3000000
  40d028:	add    r14,0x4
  40d02c:	mov    QWORD PTR [rip+0x722d],r14        # 414260 <__bss_start@@Base+0x10f8>
  40d033:	mov    rcx,r14
  40d036:	mov    rax,QWORD PTR [rip+0x7213]        # 414250 <__bss_start@@Base+0x10e8>
  40d03d:	mov    DWORD PTR [rax+rcx*1],0x0
  40d044:	add    rcx,0x4
  40d048:	mov    QWORD PTR [rip+0x7211],rcx        # 414260 <__bss_start@@Base+0x10f8>
  40d04f:	mov    BYTE PTR [rip+0x7212],0x1        # 414268 <__bss_start@@Base+0x1100>
  40d056:	add    rsp,0x8
  40d05a:	pop    rbx
  40d05b:	pop    r14
  40d05d:	pop    r15
  40d05f:	pop    rbp
  40d060:	ret    
  40d061:	mov    rax,QWORD PTR [rip+0x71e8]        # 414250 <__bss_start@@Base+0x10e8>
  40d068:	mov    DWORD PTR [rax+rbx*1+0x4],0x0
  40d070:	mov    QWORD PTR [rip+0x71e9],r15        # 414260 <__bss_start@@Base+0x10f8>
  40d077:	lea    rcx,[r14+0x8]
  40d07b:	cmp    rcx,QWORD PTR [rip+0x71d6]        # 414258 <__bss_start@@Base+0x10f0>
  40d082:	jbe    40d15a <__generate_code_for_binary_boolean_expression@@Base+0x19fa>
  40d088:	add    r14,0x20007
  40d08f:	and    r14,0xfffffffffffe0000
  40d096:	mov    rdi,rax
  40d099:	mov    rsi,r14
  40d09c:	call   4031e0 <realloc@plt>
  40d0a1:	mov    QWORD PTR [rip+0x71a8],rax        # 414250 <__bss_start@@Base+0x10e8>
  40d0a8:	mov    QWORD PTR [rip+0x71a9],r14        # 414258 <__bss_start@@Base+0x10f0>
  40d0af:	mov    r15,QWORD PTR [rip+0x71aa]        # 414260 <__bss_start@@Base+0x10f8>
  40d0b6:	mov    cl,BYTE PTR [rip+0x7184]        # 414240 <__bss_start@@Base+0x10d8>
  40d0bc:	mov    DWORD PTR [rax+r15*1],0x0
  40d0c4:	lea    r14,[r15+0x4]
  40d0c8:	mov    QWORD PTR [rip+0x7191],r14        # 414260 <__bss_start@@Base+0x10f8>
  40d0cf:	cmp    cl,0x1
  40d0d2:	jne    40cfca <__generate_code_for_binary_boolean_expression@@Base+0x186a>
  40d0d8:	jmp    40d16d <__generate_code_for_binary_boolean_expression@@Base+0x1a0d>
  40d0dd:	mov    DWORD PTR [rax+rbx*1],0x0
  40d0e4:	lea    r14,[rbx+0x4]
  40d0e8:	mov    QWORD PTR [rip+0x7171],r14        # 414260 <__bss_start@@Base+0x10f8>
  40d0ef:	lea    rcx,[rbx+0x8]
  40d0f3:	cmp    rcx,QWORD PTR [rip+0x715e]        # 414258 <__bss_start@@Base+0x10f0>
  40d0fa:	jbe    40d1d0 <__generate_code_for_binary_boolean_expression@@Base+0x1a70>
  40d100:	add    rbx,0x20007
  40d107:	and    rbx,0xfffffffffffe0000
  40d10e:	mov    rdi,rax
  40d111:	mov    rsi,rbx
  40d114:	call   4031e0 <realloc@plt>
  40d119:	mov    QWORD PTR [rip+0x7130],rax        # 414250 <__bss_start@@Base+0x10e8>
  40d120:	mov    QWORD PTR [rip+0x7131],rbx        # 414258 <__bss_start@@Base+0x10f0>
  40d127:	mov    r14,QWORD PTR [rip+0x7132]        # 414260 <__bss_start@@Base+0x10f8>
  40d12e:	mov    cl,BYTE PTR [rip+0x710c]        # 414240 <__bss_start@@Base+0x10d8>
  40d134:	mov    DWORD PTR [rax+r14*1],0x0
  40d13c:	lea    rbx,[r14+0x4]
  40d140:	mov    QWORD PTR [rip+0x7119],rbx        # 414260 <__bss_start@@Base+0x10f8>
  40d147:	mov    ebp,0x1
  40d14c:	cmp    cl,0x1
  40d14f:	jne    40cf1c <__generate_code_for_binary_boolean_expression@@Base+0x17bc>
  40d155:	jmp    40d1e3 <__generate_code_for_binary_boolean_expression@@Base+0x1a83>
  40d15a:	mov    DWORD PTR [rax+r15*1],0x0
  40d162:	lea    r14,[r15+0x4]
  40d166:	mov    QWORD PTR [rip+0x70f3],r14        # 414260 <__bss_start@@Base+0x10f8>
  40d16d:	lea    rcx,[r15+0x8]
  40d171:	cmp    rcx,QWORD PTR [rip+0x70e0]        # 414258 <__bss_start@@Base+0x10f0>
  40d178:	jbe    40d22c <__generate_code_for_binary_boolean_expression@@Base+0x1acc>
  40d17e:	add    r15,0x20007
  40d185:	and    r15,0xfffffffffffe0000
  40d18c:	mov    rdi,rax
  40d18f:	mov    rsi,r15
  40d192:	call   4031e0 <realloc@plt>
  40d197:	mov    QWORD PTR [rip+0x70b2],rax        # 414250 <__bss_start@@Base+0x10e8>
  40d19e:	mov    QWORD PTR [rip+0x70b3],r15        # 414258 <__bss_start@@Base+0x10f0>
  40d1a5:	mov    r14,QWORD PTR [rip+0x70b4]        # 414260 <__bss_start@@Base+0x10f8>
  40d1ac:	mov    cl,BYTE PTR [rip+0x708e]        # 414240 <__bss_start@@Base+0x10d8>
  40d1b2:	mov    DWORD PTR [rax+r14*1],0x0
  40d1ba:	lea    rbx,[r14+0x4]
  40d1be:	mov    QWORD PTR [rip+0x709b],rbx        # 414260 <__bss_start@@Base+0x10f8>
  40d1c5:	cmp    cl,0x1
  40d1c8:	jne    40cfe0 <__generate_code_for_binary_boolean_expression@@Base+0x1880>
  40d1ce:	jmp    40d23f <__generate_code_for_binary_boolean_expression@@Base+0x1adf>
  40d1d0:	mov    DWORD PTR [rax+r14*1],0x0
  40d1d8:	lea    rbx,[r14+0x4]
  40d1dc:	mov    QWORD PTR [rip+0x707d],rbx        # 414260 <__bss_start@@Base+0x10f8>
  40d1e3:	lea    rcx,[r14+0x8]
  40d1e7:	mov    ebp,0x1
  40d1ec:	cmp    rcx,QWORD PTR [rip+0x7065]        # 414258 <__bss_start@@Base+0x10f0>
  40d1f3:	jbe    40cf1c <__generate_code_for_binary_boolean_expression@@Base+0x17bc>
  40d1f9:	add    r14,0x20007
  40d200:	and    r14,0xfffffffffffe0000
  40d207:	mov    rdi,rax
  40d20a:	mov    rsi,r14
  40d20d:	call   4031e0 <realloc@plt>
  40d212:	mov    QWORD PTR [rip+0x7037],rax        # 414250 <__bss_start@@Base+0x10e8>
  40d219:	mov    QWORD PTR [rip+0x7038],r14        # 414258 <__bss_start@@Base+0x10f0>
  40d220:	mov    rbx,QWORD PTR [rip+0x7039]        # 414260 <__bss_start@@Base+0x10f8>
  40d227:	jmp    40cf1c <__generate_code_for_binary_boolean_expression@@Base+0x17bc>
  40d22c:	mov    DWORD PTR [rax+r14*1],0x0
  40d234:	lea    rbx,[r14+0x4]
  40d238:	mov    QWORD PTR [rip+0x7021],rbx        # 414260 <__bss_start@@Base+0x10f8>
  40d23f:	lea    rcx,[r14+0x8]
  40d243:	cmp    rcx,QWORD PTR [rip+0x700e]        # 414258 <__bss_start@@Base+0x10f0>
  40d24a:	jbe    40d2c6 <__generate_code_for_binary_boolean_expression@@Base+0x1b66>
  40d24c:	add    r14,0x20007
  40d253:	and    r14,0xfffffffffffe0000
  40d25a:	mov    rdi,rax
  40d25d:	mov    rsi,r14
  40d260:	call   4031e0 <realloc@plt>
  40d265:	mov    QWORD PTR [rip+0x6fe4],rax        # 414250 <__bss_start@@Base+0x10e8>
  40d26c:	mov    QWORD PTR [rip+0x6fe5],r14        # 414258 <__bss_start@@Base+0x10f0>
  40d273:	mov    rbx,QWORD PTR [rip+0x6fe6]        # 414260 <__bss_start@@Base+0x10f8>
  40d27a:	mov    cl,BYTE PTR [rip+0x6fc0]        # 414240 <__bss_start@@Base+0x10d8>
  40d280:	mov    DWORD PTR [rax+rbx*1],0x0
  40d287:	lea    r14,[rbx+0x4]
  40d28b:	mov    QWORD PTR [rip+0x6fce],r14        # 414260 <__bss_start@@Base+0x10f8>
  40d292:	cmp    cl,0x1
  40d295:	jne    40cff5 <__generate_code_for_binary_boolean_expression@@Base+0x1895>
  40d29b:	jmp    40d2d8 <__generate_code_for_binary_boolean_expression@@Base+0x1b78>
  40d29d:	mov    rax,QWORD PTR [rip+0x5d4c]        # 412ff0 <stderr@GLIBC_2.2.5>
  40d2a4:	mov    rdi,QWORD PTR [rax]
  40d2a7:	mov    rdx,QWORD PTR [rip+0x6f8a]        # 414238 <__bss_start@@Base+0x10d0>
  40d2ae:	lea    rsi,[rip+0x19f9]        # 40ecae <_IO_stdin_used@@Base+0xcae>
  40d2b5:	xor    eax,eax
  40d2b7:	add    rsp,0x8
  40d2bb:	pop    rbx
  40d2bc:	pop    r14
  40d2be:	pop    r15
  40d2c0:	pop    rbp
  40d2c1:	jmp    403150 <fprintf@plt>
  40d2c6:	mov    DWORD PTR [rax+rbx*1],0x0
  40d2cd:	lea    r14,[rbx+0x4]
  40d2d1:	mov    QWORD PTR [rip+0x6f88],r14        # 414260 <__bss_start@@Base+0x10f8>
  40d2d8:	lea    rcx,[rbx+0x8]
  40d2dc:	cmp    rcx,QWORD PTR [rip+0x6f75]        # 414258 <__bss_start@@Base+0x10f0>
  40d2e3:	jbe    40d337 <__generate_code_for_binary_boolean_expression@@Base+0x1bd7>
  40d2e5:	add    rbx,0x20007
  40d2ec:	and    rbx,0xfffffffffffe0000
  40d2f3:	mov    rdi,rax
  40d2f6:	mov    rsi,rbx
  40d2f9:	call   4031e0 <realloc@plt>
  40d2fe:	mov    QWORD PTR [rip+0x6f4b],rax        # 414250 <__bss_start@@Base+0x10e8>
  40d305:	mov    QWORD PTR [rip+0x6f4c],rbx        # 414258 <__bss_start@@Base+0x10f0>
  40d30c:	mov    r14,QWORD PTR [rip+0x6f4d]        # 414260 <__bss_start@@Base+0x10f8>
  40d313:	mov    cl,BYTE PTR [rip+0x6f27]        # 414240 <__bss_start@@Base+0x10d8>
  40d319:	mov    DWORD PTR [rax+r14*1],0x0
  40d321:	lea    rbx,[r14+0x4]
  40d325:	mov    QWORD PTR [rip+0x6f34],rbx        # 414260 <__bss_start@@Base+0x10f8>
  40d32c:	cmp    cl,0x1
  40d32f:	jne    40d00b <__generate_code_for_binary_boolean_expression@@Base+0x18ab>
  40d335:	jmp    40d34a <__generate_code_for_binary_boolean_expression@@Base+0x1bea>
  40d337:	mov    DWORD PTR [rax+r14*1],0x0
  40d33f:	lea    rbx,[r14+0x4]
  40d343:	mov    QWORD PTR [rip+0x6f16],rbx        # 414260 <__bss_start@@Base+0x10f8>
  40d34a:	lea    rcx,[r14+0x8]
  40d34e:	cmp    rcx,QWORD PTR [rip+0x6f03]        # 414258 <__bss_start@@Base+0x10f0>
  40d355:	jbe    40d3a6 <__generate_code_for_binary_boolean_expression@@Base+0x1c46>
  40d357:	add    r14,0x20007
  40d35e:	and    r14,0xfffffffffffe0000
  40d365:	mov    rdi,rax
  40d368:	mov    rsi,r14
  40d36b:	call   4031e0 <realloc@plt>
  40d370:	mov    QWORD PTR [rip+0x6ed9],rax        # 414250 <__bss_start@@Base+0x10e8>
  40d377:	mov    QWORD PTR [rip+0x6eda],r14        # 414258 <__bss_start@@Base+0x10f0>
  40d37e:	mov    rbx,QWORD PTR [rip+0x6edb]        # 414260 <__bss_start@@Base+0x10f8>
  40d385:	lea    r14,[rbx+0x4]
  40d389:	cmp    BYTE PTR [rip+0x6eb0],0x0        # 414240 <__bss_start@@Base+0x10d8>
  40d390:	mov    DWORD PTR [rax+rbx*1],0x0
  40d397:	mov    QWORD PTR [rip+0x6ec2],r14        # 414260 <__bss_start@@Base+0x10f8>
  40d39e:	je     40d020 <__generate_code_for_binary_boolean_expression@@Base+0x18c0>
  40d3a4:	jmp    40d3b8 <__generate_code_for_binary_boolean_expression@@Base+0x1c58>
  40d3a6:	mov    DWORD PTR [rax+rbx*1],0x0
  40d3ad:	lea    r14,[rbx+0x4]
  40d3b1:	mov    QWORD PTR [rip+0x6ea8],r14        # 414260 <__bss_start@@Base+0x10f8>
  40d3b8:	lea    rcx,[rbx+0x8]
  40d3bc:	cmp    rcx,QWORD PTR [rip+0x6e95]        # 414258 <__bss_start@@Base+0x10f0>
  40d3c3:	jbe    40d417 <__generate_code_for_binary_boolean_expression@@Base+0x1cb7>
  40d3c5:	add    rbx,0x20007
  40d3cc:	and    rbx,0xfffffffffffe0000
  40d3d3:	mov    rdi,rax
  40d3d6:	mov    rsi,rbx
  40d3d9:	call   4031e0 <realloc@plt>
  40d3de:	mov    QWORD PTR [rip+0x6e6b],rax        # 414250 <__bss_start@@Base+0x10e8>
  40d3e5:	mov    QWORD PTR [rip+0x6e6c],rbx        # 414258 <__bss_start@@Base+0x10f0>
  40d3ec:	mov    dl,BYTE PTR [rip+0x6e4e]        # 414240 <__bss_start@@Base+0x10d8>
  40d3f2:	mov    r14,QWORD PTR [rip+0x6e67]        # 414260 <__bss_start@@Base+0x10f8>
  40d3f9:	mov    DWORD PTR [rax+r14*1],0xa3000000
  40d401:	lea    rcx,[r14+0x4]
  40d405:	mov    QWORD PTR [rip+0x6e54],rcx        # 414260 <__bss_start@@Base+0x10f8>
  40d40c:	cmp    dl,0x1
  40d40f:	jne    40d036 <__generate_code_for_binary_boolean_expression@@Base+0x18d6>
  40d415:	jmp    40d42a <__generate_code_for_binary_boolean_expression@@Base+0x1cca>
  40d417:	mov    DWORD PTR [rax+r14*1],0xa3000000
  40d41f:	lea    rcx,[r14+0x4]
  40d423:	mov    QWORD PTR [rip+0x6e36],rcx        # 414260 <__bss_start@@Base+0x10f8>
  40d42a:	lea    rdx,[r14+0x8]
  40d42e:	cmp    rdx,QWORD PTR [rip+0x6e23]        # 414258 <__bss_start@@Base+0x10f0>
  40d435:	jbe    40d036 <__generate_code_for_binary_boolean_expression@@Base+0x18d6>
  40d43b:	add    r14,0x20007
  40d442:	and    r14,0xfffffffffffe0000
  40d449:	mov    rdi,rax
  40d44c:	mov    rsi,r14
  40d44f:	call   4031e0 <realloc@plt>
  40d454:	mov    QWORD PTR [rip+0x6df5],rax        # 414250 <__bss_start@@Base+0x10e8>
  40d45b:	mov    QWORD PTR [rip+0x6df6],r14        # 414258 <__bss_start@@Base+0x10f0>
  40d462:	mov    rcx,QWORD PTR [rip+0x6df7]        # 414260 <__bss_start@@Base+0x10f8>
  40d469:	jmp    40d036 <__generate_code_for_binary_boolean_expression@@Base+0x18d6>
  40d46e:	xchg   ax,ax
  40d470:	push   r14
  40d472:	push   rbx
  40d473:	push   rax
  40d474:	cmp    QWORD PTR [rip+0x6dcc],0x0        # 414248 <__bss_start@@Base+0x10e0>
  40d47c:	je     40d5d7 <__generate_code_for_binary_boolean_expression@@Base+0x1e77>
  40d482:	cmp    BYTE PTR [rip+0x6db7],0x0        # 414240 <__bss_start@@Base+0x10d8>
  40d489:	je     40d4fa <__generate_code_for_binary_boolean_expression@@Base+0x1d9a>
  40d48b:	mov    rbx,QWORD PTR [rip+0x6dce]        # 414260 <__bss_start@@Base+0x10f8>
  40d492:	lea    rax,[rbx+0x8]
  40d496:	cmp    rax,QWORD PTR [rip+0x6dbb]        # 414258 <__bss_start@@Base+0x10f0>
  40d49d:	jbe    40d560 <__generate_code_for_binary_boolean_expression@@Base+0x1e00>
  40d4a3:	add    rbx,0x20007
  40d4aa:	and    rbx,0xfffffffffffe0000
  40d4b1:	mov    rdi,QWORD PTR [rip+0x6d98]        # 414250 <__bss_start@@Base+0x10e8>
  40d4b8:	mov    rsi,rbx
  40d4bb:	call   4031e0 <realloc@plt>
  40d4c0:	mov    rdi,rax
  40d4c3:	mov    QWORD PTR [rip+0x6d86],rax        # 414250 <__bss_start@@Base+0x10e8>
  40d4ca:	mov    QWORD PTR [rip+0x6d87],rbx        # 414258 <__bss_start@@Base+0x10f0>
  40d4d1:	mov    al,BYTE PTR [rip+0x6d69]        # 414240 <__bss_start@@Base+0x10d8>
  40d4d7:	mov    rsi,QWORD PTR [rip+0x6d82]        # 414260 <__bss_start@@Base+0x10f8>
  40d4de:	mov    QWORD PTR [rdi+rsi*1],0x0
  40d4e6:	add    rsi,0x8
  40d4ea:	mov    QWORD PTR [rip+0x6d6f],rsi        # 414260 <__bss_start@@Base+0x10f8>
  40d4f1:	cmp    al,0x1
  40d4f3:	jne    40d51b <__generate_code_for_binary_boolean_expression@@Base+0x1dbb>
  40d4f5:	jmp    40d581 <__generate_code_for_binary_boolean_expression@@Base+0x1e21>
  40d4fa:	mov    rdi,QWORD PTR [rip+0x6d4f]        # 414250 <__bss_start@@Base+0x10e8>
  40d501:	mov    rax,QWORD PTR [rip+0x6d58]        # 414260 <__bss_start@@Base+0x10f8>
  40d508:	mov    QWORD PTR [rdi+rax*1],0x0
  40d510:	add    rax,0x8
  40d514:	mov    QWORD PTR [rip+0x6d45],rax        # 414260 <__bss_start@@Base+0x10f8>
  40d51b:	mov    rsi,QWORD PTR [rip+0x6d5e]        # 414280 <__bss_start@@Base+0x1118>
  40d522:	mov    edx,0x4
  40d527:	call   4030d0 <msync@plt>
  40d52c:	cmp    eax,0xffffffff
  40d52f:	je     40d5ea <__generate_code_for_binary_boolean_expression@@Base+0x1e8a>
  40d535:	mov    rdi,QWORD PTR [rip+0x6d14]        # 414250 <__bss_start@@Base+0x10e8>
  40d53c:	mov    rsi,QWORD PTR [rip+0x6d3d]        # 414280 <__bss_start@@Base+0x1118>
  40d543:	call   403200 <munmap@plt>
  40d548:	mov    QWORD PTR [rip+0x6cfd],0x0        # 414250 <__bss_start@@Base+0x10e8>
  40d553:	mov    QWORD PTR [rip+0x6d22],0x0        # 414280 <__bss_start@@Base+0x1118>
  40d55e:	jmp    40d59e <__generate_code_for_binary_boolean_expression@@Base+0x1e3e>
  40d560:	mov    rdi,QWORD PTR [rip+0x6ce9]        # 414250 <__bss_start@@Base+0x10e8>
  40d567:	mov    rsi,QWORD PTR [rip+0x6cf2]        # 414260 <__bss_start@@Base+0x10f8>
  40d56e:	mov    QWORD PTR [rdi+rsi*1],0x0
  40d576:	add    rsi,0x8
  40d57a:	mov    QWORD PTR [rip+0x6cdf],rsi        # 414260 <__bss_start@@Base+0x10f8>
  40d581:	mov    rcx,QWORD PTR [rip+0x6cc0]        # 414248 <__bss_start@@Base+0x10e0>
  40d588:	mov    edx,0x1
  40d58d:	call   403270 <fwrite@plt>
  40d592:	mov    rdi,QWORD PTR [rip+0x6cb7]        # 414250 <__bss_start@@Base+0x10e8>
  40d599:	call   403040 <free@plt>
  40d59e:	mov    rdi,QWORD PTR [rip+0x6ca3]        # 414248 <__bss_start@@Base+0x10e0>
  40d5a5:	call   4031c0 <fflush@plt>
  40d5aa:	mov    edi,DWORD PTR [rip+0x5bb0]        # 413160 <__data_start@@Base+0x10>
  40d5b0:	call   40da60 <__gcov_flush@@Base+0x2c0>
  40d5b5:	mov    rdi,QWORD PTR [rip+0x6c8c]        # 414248 <__bss_start@@Base+0x10e0>
  40d5bc:	call   4030c0 <fclose@plt>
  40d5c1:	mov    QWORD PTR [rip+0x6c7c],0x0        # 414248 <__bss_start@@Base+0x10e0>
  40d5cc:	mov    QWORD PTR [rip+0x6c79],0x0        # 414250 <__bss_start@@Base+0x10e8>
  40d5d7:	mov    rdi,QWORD PTR [rip+0x6c5a]        # 414238 <__bss_start@@Base+0x10d0>
  40d5de:	add    rsp,0x8
  40d5e2:	pop    rbx
  40d5e3:	pop    r14
  40d5e5:	jmp    403040 <free@plt>
  40d5ea:	call   403050 <__errno_location@plt>
  40d5ef:	mov    edi,DWORD PTR [rax]
  40d5f1:	mov    rax,QWORD PTR [rip+0x59f8]        # 412ff0 <stderr@GLIBC_2.2.5>
  40d5f8:	mov    rbx,QWORD PTR [rax]
  40d5fb:	mov    r14,QWORD PTR [rip+0x6c36]        # 414238 <__bss_start@@Base+0x10d0>
  40d602:	call   403290 <strerror@plt>
  40d607:	lea    rsi,[rip+0x170e]        # 40ed1c <_IO_stdin_used@@Base+0xd1c>
  40d60e:	mov    rdi,rbx
  40d611:	mov    rdx,r14
  40d614:	mov    rcx,rax
  40d617:	xor    eax,eax
  40d619:	call   403150 <fprintf@plt>
  40d61e:	jmp    40d535 <__generate_code_for_binary_boolean_expression@@Base+0x1dd5>
  40d623:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d62d:	nop    DWORD PTR [rax]
  40d630:	push   rbx
  40d631:	mov    rbx,rdi
  40d634:	mov    edi,0x18
  40d639:	call   4031b0 <malloc@plt>
  40d63e:	mov    QWORD PTR [rax+0x8],rbx
  40d642:	mov    QWORD PTR [rax+0x10],0x0
  40d64a:	lea    rcx,[rip+0x6c1f]        # 414270 <__bss_start@@Base+0x1108>
  40d651:	mov    QWORD PTR [rax],rcx
  40d654:	lea    rcx,[rip+0x6c3d]        # 414298 <writeout_fn_list@@Base>
  40d65b:	lea    rdx,[rcx+0x8]
  40d65f:	mov    rsi,QWORD PTR [rcx+0x8]
  40d663:	add    rsi,0x10
  40d667:	xor    edi,edi
  40d669:	cmp    QWORD PTR [rcx],0x0
  40d66d:	setne  dil
  40d671:	cmove  rsi,rdx
  40d675:	mov    QWORD PTR [rsi],rax
  40d678:	mov    QWORD PTR [rcx+rdi*8],rax
  40d67c:	pop    rbx
  40d67d:	ret    
  40d67e:	xchg   ax,ax
  40d680:	push   r14
  40d682:	push   rbx
  40d683:	push   rax
  40d684:	lea    rax,[rip+0x6c0d]        # 414298 <writeout_fn_list@@Base>
  40d68b:	mov    rbx,QWORD PTR [rax]
  40d68e:	test   rbx,rbx
  40d691:	je     40d6b5 <__generate_code_for_binary_boolean_expression@@Base+0x1f55>
  40d693:	lea    r14,[rip+0x6bd6]        # 414270 <__bss_start@@Base+0x1108>
  40d69a:	cmp    QWORD PTR [rbx],r14
  40d69d:	je     40d6ae <__generate_code_for_binary_boolean_expression@@Base+0x1f4e>
  40d69f:	nop
  40d6a0:	mov    rbx,QWORD PTR [rbx+0x10]
  40d6a4:	test   rbx,rbx
  40d6a7:	je     40d6b5 <__generate_code_for_binary_boolean_expression@@Base+0x1f55>
  40d6a9:	cmp    QWORD PTR [rbx],r14
  40d6ac:	jne    40d6a0 <__generate_code_for_binary_boolean_expression@@Base+0x1f40>
  40d6ae:	xor    eax,eax
  40d6b0:	call   QWORD PTR [rbx+0x8]
  40d6b3:	jmp    40d6a0 <__generate_code_for_binary_boolean_expression@@Base+0x1f40>
  40d6b5:	add    rsp,0x8
  40d6b9:	pop    rbx
  40d6ba:	pop    r14
  40d6bc:	ret    
  40d6bd:	nop    DWORD PTR [rax]
  40d6c0:	push   r15
  40d6c2:	push   r14
  40d6c4:	push   r12
  40d6c6:	push   rbx
  40d6c7:	push   rax
  40d6c8:	lea    r14,[rip+0x6bc9]        # 414298 <writeout_fn_list@@Base>
  40d6cf:	mov    rdi,QWORD PTR [r14]
  40d6d2:	test   rdi,rdi
  40d6d5:	je     40d73b <__generate_code_for_binary_boolean_expression@@Base+0x1fdb>
  40d6d7:	xor    r12d,r12d
  40d6da:	lea    r15,[rip+0x6b8f]        # 414270 <__bss_start@@Base+0x1108>
  40d6e1:	jmp    40d6fd <__generate_code_for_binary_boolean_expression@@Base+0x1f9d>
  40d6e3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d6ed:	nop    DWORD PTR [rax]
  40d6f0:	call   403040 <free@plt>
  40d6f5:	mov    rdi,rbx
  40d6f8:	test   rbx,rbx
  40d6fb:	je     40d73b <__generate_code_for_binary_boolean_expression@@Base+0x1fdb>
  40d6fd:	mov    rbx,QWORD PTR [rdi+0x10]
  40d701:	cmp    QWORD PTR [rdi],r15
  40d704:	je     40d710 <__generate_code_for_binary_boolean_expression@@Base+0x1fb0>
  40d706:	mov    r12,rdi
  40d709:	jmp    40d6f5 <__generate_code_for_binary_boolean_expression@@Base+0x1f95>
  40d70b:	nop    DWORD PTR [rax+rax*1+0x0]
  40d710:	cmp    rdi,QWORD PTR [r14]
  40d713:	je     40d722 <__generate_code_for_binary_boolean_expression@@Base+0x1fc2>
  40d715:	cmp    rdi,QWORD PTR [r14+0x8]
  40d719:	je     40d72b <__generate_code_for_binary_boolean_expression@@Base+0x1fcb>
  40d71b:	test   r12,r12
  40d71e:	jne    40d734 <__generate_code_for_binary_boolean_expression@@Base+0x1fd4>
  40d720:	jmp    40d6f0 <__generate_code_for_binary_boolean_expression@@Base+0x1f90>
  40d722:	mov    QWORD PTR [r14],rbx
  40d725:	cmp    rdi,QWORD PTR [r14+0x8]
  40d729:	jne    40d71b <__generate_code_for_binary_boolean_expression@@Base+0x1fbb>
  40d72b:	mov    QWORD PTR [r14+0x8],r12
  40d72f:	test   r12,r12
  40d732:	je     40d6f0 <__generate_code_for_binary_boolean_expression@@Base+0x1f90>
  40d734:	mov    QWORD PTR [r12+0x10],rbx
  40d739:	jmp    40d6f0 <__generate_code_for_binary_boolean_expression@@Base+0x1f90>
  40d73b:	add    rsp,0x8
  40d73f:	pop    rbx
  40d740:	pop    r12
  40d742:	pop    r14
  40d744:	pop    r15
  40d746:	ret    
  40d747:	nop    WORD PTR [rax+rax*1+0x0]
  40d750:	push   rbx
  40d751:	mov    rbx,rdi
  40d754:	mov    edi,0x18
  40d759:	call   4031b0 <malloc@plt>
  40d75e:	mov    QWORD PTR [rax+0x8],rbx
  40d762:	mov    QWORD PTR [rax+0x10],0x0
  40d76a:	lea    rcx,[rip+0x6aff]        # 414270 <__bss_start@@Base+0x1108>
  40d771:	mov    QWORD PTR [rax],rcx
  40d774:	lea    rcx,[rip+0x6b0d]        # 414288 <flush_fn_list@@Base>
  40d77b:	lea    rdx,[rcx+0x8]
  40d77f:	mov    rsi,QWORD PTR [rcx+0x8]
  40d783:	add    rsi,0x10
  40d787:	xor    edi,edi
  40d789:	cmp    QWORD PTR [rcx],0x0
  40d78d:	setne  dil
  40d791:	cmove  rsi,rdx
  40d795:	mov    QWORD PTR [rsi],rax
  40d798:	mov    QWORD PTR [rcx+rdi*8],rax
  40d79c:	pop    rbx
  40d79d:	ret    
  40d79e:	xchg   ax,ax

000000000040d7a0 <__gcov_flush@@Base>:
  40d7a0:	push   rbx
  40d7a1:	lea    rax,[rip+0x6ae0]        # 414288 <flush_fn_list@@Base>
  40d7a8:	mov    rbx,QWORD PTR [rax]
  40d7ab:	test   rbx,rbx
  40d7ae:	je     40d7be <__gcov_flush@@Base+0x1e>
  40d7b0:	xor    eax,eax
  40d7b2:	call   QWORD PTR [rbx+0x8]
  40d7b5:	mov    rbx,QWORD PTR [rbx+0x10]
  40d7b9:	test   rbx,rbx
  40d7bc:	jne    40d7b0 <__gcov_flush@@Base+0x10>
  40d7be:	pop    rbx
  40d7bf:	ret    
  40d7c0:	push   r15
  40d7c2:	push   r14
  40d7c4:	push   r12
  40d7c6:	push   rbx
  40d7c7:	push   rax
  40d7c8:	lea    r14,[rip+0x6ab9]        # 414288 <flush_fn_list@@Base>
  40d7cf:	mov    rdi,QWORD PTR [r14]
  40d7d2:	test   rdi,rdi
  40d7d5:	je     40d83b <__gcov_flush@@Base+0x9b>
  40d7d7:	xor    r12d,r12d
  40d7da:	lea    r15,[rip+0x6a8f]        # 414270 <__bss_start@@Base+0x1108>
  40d7e1:	jmp    40d7fd <__gcov_flush@@Base+0x5d>
  40d7e3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d7ed:	nop    DWORD PTR [rax]
  40d7f0:	call   403040 <free@plt>
  40d7f5:	mov    rdi,rbx
  40d7f8:	test   rbx,rbx
  40d7fb:	je     40d83b <__gcov_flush@@Base+0x9b>
  40d7fd:	mov    rbx,QWORD PTR [rdi+0x10]
  40d801:	cmp    QWORD PTR [rdi],r15
  40d804:	je     40d810 <__gcov_flush@@Base+0x70>
  40d806:	mov    r12,rdi
  40d809:	jmp    40d7f5 <__gcov_flush@@Base+0x55>
  40d80b:	nop    DWORD PTR [rax+rax*1+0x0]
  40d810:	cmp    rdi,QWORD PTR [r14]
  40d813:	je     40d822 <__gcov_flush@@Base+0x82>
  40d815:	cmp    rdi,QWORD PTR [r14+0x8]
  40d819:	je     40d82b <__gcov_flush@@Base+0x8b>
  40d81b:	test   r12,r12
  40d81e:	jne    40d834 <__gcov_flush@@Base+0x94>
  40d820:	jmp    40d7f0 <__gcov_flush@@Base+0x50>
  40d822:	mov    QWORD PTR [r14],rbx
  40d825:	cmp    rdi,QWORD PTR [r14+0x8]
  40d829:	jne    40d81b <__gcov_flush@@Base+0x7b>
  40d82b:	mov    QWORD PTR [r14+0x8],r12
  40d82f:	test   r12,r12
  40d832:	je     40d7f0 <__gcov_flush@@Base+0x50>
  40d834:	mov    QWORD PTR [r12+0x10],rbx
  40d839:	jmp    40d7f0 <__gcov_flush@@Base+0x50>
  40d83b:	add    rsp,0x8
  40d83f:	pop    rbx
  40d840:	pop    r12
  40d842:	pop    r14
  40d844:	pop    r15
  40d846:	ret    
  40d847:	nop    WORD PTR [rax+rax*1+0x0]
  40d850:	push   r14
  40d852:	push   rbx
  40d853:	push   rax
  40d854:	mov    r14,rsi
  40d857:	test   rdi,rdi
  40d85a:	je     40d8a7 <__gcov_flush@@Base+0x107>
  40d85c:	mov    rbx,rdi
  40d85f:	mov    edi,0x18
  40d864:	call   4031b0 <malloc@plt>
  40d869:	mov    QWORD PTR [rax+0x8],rbx
  40d86d:	mov    QWORD PTR [rax+0x10],0x0
  40d875:	lea    rcx,[rip+0x69f4]        # 414270 <__bss_start@@Base+0x1108>
  40d87c:	mov    QWORD PTR [rax],rcx
  40d87f:	lea    rcx,[rip+0x6a12]        # 414298 <writeout_fn_list@@Base>
  40d886:	lea    rdx,[rcx+0x8]
  40d88a:	mov    rsi,QWORD PTR [rcx+0x8]
  40d88e:	add    rsi,0x10
  40d892:	xor    edi,edi
  40d894:	cmp    QWORD PTR [rcx],0x0
  40d898:	setne  dil
  40d89c:	cmove  rsi,rdx
  40d8a0:	mov    QWORD PTR [rsi],rax
  40d8a3:	mov    QWORD PTR [rcx+rdi*8],rax
  40d8a7:	test   r14,r14
  40d8aa:	je     40d8f4 <__gcov_flush@@Base+0x154>
  40d8ac:	mov    edi,0x18
  40d8b1:	call   4031b0 <malloc@plt>
  40d8b6:	mov    QWORD PTR [rax+0x8],r14
  40d8ba:	mov    QWORD PTR [rax+0x10],0x0
  40d8c2:	lea    rcx,[rip+0x69a7]        # 414270 <__bss_start@@Base+0x1108>
  40d8c9:	mov    QWORD PTR [rax],rcx
  40d8cc:	lea    rcx,[rip+0x69b5]        # 414288 <flush_fn_list@@Base>
  40d8d3:	lea    rdx,[rcx+0x8]
  40d8d7:	mov    rsi,QWORD PTR [rcx+0x8]
  40d8db:	add    rsi,0x10
  40d8df:	xor    edi,edi
  40d8e1:	cmp    QWORD PTR [rcx],0x0
  40d8e5:	setne  dil
  40d8e9:	cmove  rsi,rdx
  40d8ed:	mov    QWORD PTR [rsi],rax
  40d8f0:	mov    QWORD PTR [rcx+rdi*8],rax
  40d8f4:	cmp    BYTE PTR [rip+0x697d],0x0        # 414278 <__bss_start@@Base+0x1110>
  40d8fb:	je     40d905 <__gcov_flush@@Base+0x165>
  40d8fd:	add    rsp,0x8
  40d901:	pop    rbx
  40d902:	pop    r14
  40d904:	ret    
  40d905:	mov    BYTE PTR [rip+0x696c],0x1        # 414278 <__bss_start@@Base+0x1110>
  40d90c:	lea    rdi,[rip+0xfffffffffffffead]        # 40d7c0 <__gcov_flush@@Base+0x20>
  40d913:	call   40deb0 <__libc_csu_fini@@Base+0x10>
  40d918:	lea    rdi,[rip+0xfffffffffffffda1]        # 40d6c0 <__generate_code_for_binary_boolean_expression@@Base+0x1f60>
  40d91f:	call   40deb0 <__libc_csu_fini@@Base+0x10>
  40d924:	lea    rdi,[rip+0xfffffffffffffd55]        # 40d680 <__generate_code_for_binary_boolean_expression@@Base+0x1f20>
  40d92b:	add    rsp,0x8
  40d92f:	pop    rbx
  40d930:	pop    r14
  40d932:	jmp    40deb0 <__libc_csu_fini@@Base+0x10>
  40d937:	nop
  40d938:	nop    DWORD PTR [rax+rax*1+0x0]
  40d940:	push   r15
  40d942:	push   r14
  40d944:	push   rbx
  40d945:	mov    r14,rdi
  40d948:	lea    rbx,[rdi+0x1]
  40d94c:	lea    r15,[rip+0x5811]        # 413164 <lprofDirMode@@Base>
  40d953:	jmp    40d975 <__gcov_flush@@Base+0x1d5>
  40d955:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d95f:	nop
  40d960:	mov    BYTE PTR [rbx],0x0
  40d963:	mov    esi,DWORD PTR [r15]
  40d966:	mov    rdi,r14
  40d969:	call   403080 <mkdir@plt>
  40d96e:	mov    BYTE PTR [rbx],0x2f
  40d971:	add    rbx,0x1
  40d975:	movzx  eax,BYTE PTR [rbx]
  40d978:	cmp    al,0x2f
  40d97a:	je     40d960 <__gcov_flush@@Base+0x1c0>
  40d97c:	test   al,al
  40d97e:	jne    40d971 <__gcov_flush@@Base+0x1d1>
  40d980:	pop    rbx
  40d981:	pop    r14
  40d983:	pop    r15
  40d985:	ret    
  40d986:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d990:	lea    rax,[rip+0x57cd]        # 413164 <lprofDirMode@@Base>
  40d997:	mov    eax,DWORD PTR [rax]
  40d999:	ret    
  40d99a:	nop    WORD PTR [rax+rax*1+0x0]
  40d9a0:	lea    rax,[rip+0x57bd]        # 413164 <lprofDirMode@@Base>
  40d9a7:	mov    DWORD PTR [rax],edi
  40d9a9:	ret    
  40d9aa:	nop    WORD PTR [rax+rax*1+0x0]
  40d9b0:	push   rbp
  40d9b1:	push   rbx
  40d9b2:	sub    rsp,0x188
  40d9b9:	mov    ebp,esi
  40d9bb:	mov    rbx,rdi
  40d9be:	mov    rdi,rsp
  40d9c1:	call   403120 <uname@plt>
  40d9c6:	test   eax,eax
  40d9c8:	js     40d9dc <__gcov_flush@@Base+0x23c>
  40d9ca:	lea    rsi,[rsp+0x41]
  40d9cf:	movsxd rdx,ebp
  40d9d2:	mov    rdi,rbx
  40d9d5:	call   403060 <strncpy@plt>
  40d9da:	xor    eax,eax
  40d9dc:	add    rsp,0x188
  40d9e3:	pop    rbx
  40d9e4:	pop    rbp
  40d9e5:	ret    
  40d9e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d9f0:	push   rbp
  40d9f1:	push   r14
  40d9f3:	push   rbx
  40d9f4:	sub    rsp,0x20
  40d9f8:	mov    ebx,edi
  40d9fa:	mov    WORD PTR [rsp+0x2],0x0
  40da01:	xorps  xmm0,xmm0
  40da04:	movups XMMWORD PTR [rsp+0x8],xmm0
  40da09:	call   4030b0 <getpid@plt>
  40da0e:	mov    DWORD PTR [rsp+0x18],eax
  40da12:	mov    WORD PTR [rsp],0x1
  40da18:	mov    r14,rsp
  40da1b:	xor    ebp,ebp
  40da1d:	nop    DWORD PTR [rax]
  40da20:	mov    edi,ebx
  40da22:	mov    esi,0x7
  40da27:	mov    rdx,r14
  40da2a:	xor    eax,eax
  40da2c:	call   4030a0 <fcntl@plt>
  40da31:	cmp    eax,0xffffffff
  40da34:	jne    40da4c <__gcov_flush@@Base+0x2ac>
  40da36:	call   403050 <__errno_location@plt>
  40da3b:	mov    eax,DWORD PTR [rax]
  40da3d:	cmp    eax,0x4
  40da40:	je     40da20 <__gcov_flush@@Base+0x280>
  40da42:	cmp    eax,0x25
  40da45:	jne    40da4c <__gcov_flush@@Base+0x2ac>
  40da47:	mov    ebp,0xffffffff
  40da4c:	mov    eax,ebp
  40da4e:	add    rsp,0x20
  40da52:	pop    rbx
  40da53:	pop    r14
  40da55:	pop    rbp
  40da56:	ret    
  40da57:	nop    WORD PTR [rax+rax*1+0x0]
  40da60:	push   rbp
  40da61:	push   r14
  40da63:	push   rbx
  40da64:	sub    rsp,0x20
  40da68:	mov    ebx,edi
  40da6a:	mov    WORD PTR [rsp+0x2],0x0
  40da71:	xorps  xmm0,xmm0
  40da74:	movups XMMWORD PTR [rsp+0x8],xmm0
  40da79:	call   4030b0 <getpid@plt>
  40da7e:	mov    DWORD PTR [rsp+0x18],eax
  40da82:	mov    WORD PTR [rsp],0x2
  40da88:	mov    r14,rsp
  40da8b:	xor    ebp,ebp
  40da8d:	nop    DWORD PTR [rax]
  40da90:	mov    edi,ebx
  40da92:	mov    esi,0x7
  40da97:	mov    rdx,r14
  40da9a:	xor    eax,eax
  40da9c:	call   4030a0 <fcntl@plt>
  40daa1:	cmp    eax,0xffffffff
  40daa4:	jne    40dabc <__gcov_flush@@Base+0x31c>
  40daa6:	call   403050 <__errno_location@plt>
  40daab:	mov    eax,DWORD PTR [rax]
  40daad:	cmp    eax,0x4
  40dab0:	je     40da90 <__gcov_flush@@Base+0x2f0>
  40dab2:	cmp    eax,0x25
  40dab5:	jne    40dabc <__gcov_flush@@Base+0x31c>
  40dab7:	mov    ebp,0xffffffff
  40dabc:	mov    eax,ebp
  40dabe:	add    rsp,0x20
  40dac2:	pop    rbx
  40dac3:	pop    r14
  40dac5:	pop    rbp
  40dac6:	ret    
  40dac7:	nop    WORD PTR [rax+rax*1+0x0]
  40dad0:	push   rbp
  40dad1:	push   r14
  40dad3:	push   rbx
  40dad4:	sub    rsp,0x20
  40dad8:	call   4031a0 <fileno@plt>
  40dadd:	mov    ebx,eax
  40dadf:	mov    WORD PTR [rsp+0x2],0x0
  40dae6:	xorps  xmm0,xmm0
  40dae9:	movups XMMWORD PTR [rsp+0x8],xmm0
  40daee:	call   4030b0 <getpid@plt>
  40daf3:	mov    DWORD PTR [rsp+0x18],eax
  40daf7:	mov    WORD PTR [rsp],0x1
  40dafd:	mov    r14,rsp
  40db00:	xor    ebp,ebp
  40db02:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40db0c:	nop    DWORD PTR [rax+0x0]
  40db10:	mov    edi,ebx
  40db12:	mov    esi,0x7
  40db17:	mov    rdx,r14
  40db1a:	xor    eax,eax
  40db1c:	call   4030a0 <fcntl@plt>
  40db21:	cmp    eax,0xffffffff
  40db24:	jne    40db3c <__gcov_flush@@Base+0x39c>
  40db26:	call   403050 <__errno_location@plt>
  40db2b:	mov    eax,DWORD PTR [rax]
  40db2d:	cmp    eax,0x4
  40db30:	je     40db10 <__gcov_flush@@Base+0x370>
  40db32:	cmp    eax,0x25
  40db35:	jne    40db3c <__gcov_flush@@Base+0x39c>
  40db37:	mov    ebp,0xffffffff
  40db3c:	mov    eax,ebp
  40db3e:	add    rsp,0x20
  40db42:	pop    rbx
  40db43:	pop    r14
  40db45:	pop    rbp
  40db46:	ret    
  40db47:	nop    WORD PTR [rax+rax*1+0x0]
  40db50:	push   rbp
  40db51:	push   r14
  40db53:	push   rbx
  40db54:	sub    rsp,0x20
  40db58:	call   4031a0 <fileno@plt>
  40db5d:	mov    ebx,eax
  40db5f:	mov    WORD PTR [rsp+0x2],0x0
  40db66:	xorps  xmm0,xmm0
  40db69:	movups XMMWORD PTR [rsp+0x8],xmm0
  40db6e:	call   4030b0 <getpid@plt>
  40db73:	mov    DWORD PTR [rsp+0x18],eax
  40db77:	mov    WORD PTR [rsp],0x2
  40db7d:	mov    r14,rsp
  40db80:	xor    ebp,ebp
  40db82:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40db8c:	nop    DWORD PTR [rax+0x0]
  40db90:	mov    edi,ebx
  40db92:	mov    esi,0x7
  40db97:	mov    rdx,r14
  40db9a:	xor    eax,eax
  40db9c:	call   4030a0 <fcntl@plt>
  40dba1:	cmp    eax,0xffffffff
  40dba4:	jne    40dbbc <__gcov_flush@@Base+0x41c>
  40dba6:	call   403050 <__errno_location@plt>
  40dbab:	mov    eax,DWORD PTR [rax]
  40dbad:	cmp    eax,0x4
  40dbb0:	je     40db90 <__gcov_flush@@Base+0x3f0>
  40dbb2:	cmp    eax,0x25
  40dbb5:	jne    40dbbc <__gcov_flush@@Base+0x41c>
  40dbb7:	mov    ebp,0xffffffff
  40dbbc:	mov    eax,ebp
  40dbbe:	add    rsp,0x20
  40dbc2:	pop    rbx
  40dbc3:	pop    r14
  40dbc5:	pop    rbp
  40dbc6:	ret    
  40dbc7:	nop    WORD PTR [rax+rax*1+0x0]
  40dbd0:	push   rbp
  40dbd1:	push   r14
  40dbd3:	push   rbx
  40dbd4:	sub    rsp,0x20
  40dbd8:	xor    ebx,ebx
  40dbda:	mov    esi,0x42
  40dbdf:	mov    edx,0x1b6
  40dbe4:	xor    eax,eax
  40dbe6:	call   403210 <open@plt>
  40dbeb:	test   eax,eax
  40dbed:	js     40dc4a <__gcov_flush@@Base+0x4aa>
  40dbef:	mov    ebp,eax
  40dbf1:	mov    WORD PTR [rsp+0x2],0x0
  40dbf8:	xorps  xmm0,xmm0
  40dbfb:	movups XMMWORD PTR [rsp+0x8],xmm0
  40dc00:	call   4030b0 <getpid@plt>
  40dc05:	mov    DWORD PTR [rsp+0x18],eax
  40dc09:	mov    WORD PTR [rsp],0x1
  40dc0f:	mov    r14,rsp
  40dc12:	mov    edi,ebp
  40dc14:	mov    esi,0x7
  40dc19:	mov    rdx,r14
  40dc1c:	xor    eax,eax
  40dc1e:	call   4030a0 <fcntl@plt>
  40dc23:	cmp    eax,0xffffffff
  40dc26:	jne    40dc39 <__gcov_flush@@Base+0x499>
  40dc28:	call   403050 <__errno_location@plt>
  40dc2d:	mov    eax,DWORD PTR [rax]
  40dc2f:	cmp    eax,0x4
  40dc32:	je     40dc12 <__gcov_flush@@Base+0x472>
  40dc34:	cmp    eax,0x25
  40dc37:	je     40dc56 <__gcov_flush@@Base+0x4b6>
  40dc39:	lea    rsi,[rip+0xf5b]        # 40eb9b <_IO_stdin_used@@Base+0xb9b>
  40dc40:	mov    edi,ebp
  40dc42:	call   4031f0 <fdopen@plt>
  40dc47:	mov    rbx,rax
  40dc4a:	mov    rax,rbx
  40dc4d:	add    rsp,0x20
  40dc51:	pop    rbx
  40dc52:	pop    r14
  40dc54:	pop    rbp
  40dc55:	ret    
  40dc56:	mov    rax,QWORD PTR [rip+0x5393]        # 412ff0 <stderr@GLIBC_2.2.5>
  40dc5d:	mov    rdi,QWORD PTR [rax]
  40dc60:	lea    rsi,[rip+0x10d6]        # 40ed3d <_IO_stdin_used@@Base+0xd3d>
  40dc67:	lea    rdx,[rip+0x1118]        # 40ed86 <_IO_stdin_used@@Base+0xd86>
  40dc6e:	xor    eax,eax
  40dc70:	call   403150 <fprintf@plt>
  40dc75:	jmp    40dc39 <__gcov_flush@@Base+0x499>
  40dc77:	nop    WORD PTR [rax+rax*1+0x0]
  40dc80:	push   r15
  40dc82:	push   r14
  40dc84:	push   r12
  40dc86:	push   rbx
  40dc87:	push   rax
  40dc88:	mov    r14,rsi
  40dc8b:	mov    r15,rdi
  40dc8e:	lea    rdi,[rip+0x111f]        # 40edb4 <_IO_stdin_used@@Base+0xdb4>
  40dc95:	call   403030 <getenv@plt>
  40dc9a:	mov    rbx,rax
  40dc9d:	lea    rdi,[rip+0x111c]        # 40edc0 <_IO_stdin_used@@Base+0xdc0>
  40dca4:	call   403030 <getenv@plt>
  40dca9:	mov    QWORD PTR [r14],0x0
  40dcb0:	mov    DWORD PTR [r15],0x0
  40dcb7:	test   rbx,rbx
  40dcba:	je     40dcf1 <__gcov_flush@@Base+0x551>
  40dcbc:	xor    r12d,r12d
  40dcbf:	cmp    BYTE PTR [rbx],0x0
  40dcc2:	je     40dcf1 <__gcov_flush@@Base+0x551>
  40dcc4:	test   rax,rax
  40dcc7:	je     40dce1 <__gcov_flush@@Base+0x541>
  40dcc9:	xor    r12d,r12d
  40dccc:	mov    rdi,rax
  40dccf:	xor    esi,esi
  40dcd1:	mov    edx,0xa
  40dcd6:	call   403170 <strtol@plt>
  40dcdb:	test   eax,eax
  40dcdd:	cmovns r12d,eax
  40dce1:	mov    DWORD PTR [r15],r12d
  40dce4:	mov    rdi,rbx
  40dce7:	call   4030e0 <strlen@plt>
  40dcec:	mov    QWORD PTR [r14],rax
  40dcef:	jmp    40dcf3 <__gcov_flush@@Base+0x553>
  40dcf1:	xor    ebx,ebx
  40dcf3:	mov    rax,rbx
  40dcf6:	add    rsp,0x8
  40dcfa:	pop    rbx
  40dcfb:	pop    r12
  40dcfd:	pop    r14
  40dcff:	pop    r15
  40dd01:	ret    
  40dd02:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40dd0c:	nop    DWORD PTR [rax+0x0]
  40dd10:	push   r15
  40dd12:	push   r14
  40dd14:	push   r12
  40dd16:	push   rbx
  40dd17:	push   rax
  40dd18:	mov    r15,rcx
  40dd1b:	mov    r12,rdx
  40dd1e:	mov    rbx,rsi
  40dd21:	mov    r14,rdi
  40dd24:	test   r8d,r8d
  40dd27:	jle    40dd5b <__gcov_flush@@Base+0x5bb>
  40dd29:	lea    rax,[rbx+0x1]
  40dd2d:	xor    ecx,ecx
  40dd2f:	jmp    40dd4f <__gcov_flush@@Base+0x5af>
  40dd31:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40dd3b:	nop    DWORD PTR [rax+rax*1+0x0]
  40dd40:	add    ecx,0x1
  40dd43:	mov    rbx,rax
  40dd46:	add    rax,0x1
  40dd4a:	cmp    ecx,r8d
  40dd4d:	jge    40dd5b <__gcov_flush@@Base+0x5bb>
  40dd4f:	movzx  edx,BYTE PTR [rax]
  40dd52:	cmp    dl,0x2f
  40dd55:	je     40dd40 <__gcov_flush@@Base+0x5a0>
  40dd57:	test   dl,dl
  40dd59:	jne    40dd46 <__gcov_flush@@Base+0x5a6>
  40dd5b:	mov    rdi,r14
  40dd5e:	mov    rsi,r12
  40dd61:	mov    rdx,r15
  40dd64:	call   403180 <memcpy@plt>
  40dd69:	cmp    BYTE PTR [r15+r12*1-0x1],0x2f
  40dd6f:	je     40dd7a <__gcov_flush@@Base+0x5da>
  40dd71:	mov    BYTE PTR [r14+r15*1],0x2f
  40dd76:	add    r15,0x1
  40dd7a:	add    r14,r15
  40dd7d:	mov    rdi,rbx
  40dd80:	call   4030e0 <strlen@plt>
  40dd85:	lea    rdx,[rax+0x1]
  40dd89:	mov    rdi,r14
  40dd8c:	mov    rsi,rbx
  40dd8f:	add    rsp,0x8
  40dd93:	pop    rbx
  40dd94:	pop    r12
  40dd96:	pop    r14
  40dd98:	pop    r15
  40dd9a:	jmp    403180 <memcpy@plt>
  40dd9f:	nop
  40dda0:	mov    esi,0x2f
  40dda5:	jmp    403100 <strchr@plt>
  40ddaa:	nop    WORD PTR [rax+rax*1+0x0]
  40ddb0:	mov    esi,0x2f
  40ddb5:	jmp    403110 <strrchr@plt>
  40ddba:	nop    WORD PTR [rax+rax*1+0x0]
  40ddc0:	push   rax
  40ddc1:	mov    DWORD PTR [rsp+0x4],0x0
  40ddc9:	lea    rsi,[rsp+0x4]
  40ddce:	mov    edi,0x2
  40ddd3:	xor    eax,eax
  40ddd5:	call   403190 <prctl@plt>
  40ddda:	mov    ecx,DWORD PTR [rsp+0x4]
  40ddde:	test   eax,eax
  40dde0:	jne    40ddf9 <__gcov_flush@@Base+0x659>
  40dde2:	cmp    ecx,0x9
  40dde5:	jne    40ddf9 <__gcov_flush@@Base+0x659>
  40dde7:	mov    edi,0x1
  40ddec:	xor    esi,esi
  40ddee:	xor    eax,eax
  40ddf0:	call   403190 <prctl@plt>
  40ddf5:	mov    ecx,DWORD PTR [rsp+0x4]
  40ddf9:	xor    eax,eax
  40ddfb:	cmp    ecx,0x9
  40ddfe:	sete   al
  40de01:	pop    rcx
  40de02:	ret    
  40de03:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40de0d:	nop    DWORD PTR [rax]
  40de10:	mov    edi,0x1
  40de15:	mov    esi,0x9
  40de1a:	xor    eax,eax
  40de1c:	jmp    403190 <prctl@plt>
  40de21:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40de2b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040de30 <__libc_csu_init@@Base>:
  40de30:	endbr64 
  40de34:	push   r15
  40de36:	lea    r15,[rip+0x3fe3]        # 411e20 <_IO_stdin_used@@Base+0x3e20>
  40de3d:	push   r14
  40de3f:	mov    r14,rdx
  40de42:	push   r13
  40de44:	mov    r13,rsi
  40de47:	push   r12
  40de49:	mov    r12d,edi
  40de4c:	push   rbp
  40de4d:	lea    rbp,[rip+0x4004]        # 411e58 <_IO_stdin_used@@Base+0x3e58>
  40de54:	push   rbx
  40de55:	sub    rbp,r15
  40de58:	sub    rsp,0x8
  40de5c:	call   403000 <getenv@plt-0x30>
  40de61:	sar    rbp,0x3
  40de65:	je     40de86 <__libc_csu_init@@Base+0x56>
  40de67:	xor    ebx,ebx
  40de69:	nop    DWORD PTR [rax+0x0]
  40de70:	mov    rdx,r14
  40de73:	mov    rsi,r13
  40de76:	mov    edi,r12d
  40de79:	call   QWORD PTR [r15+rbx*8]
  40de7d:	add    rbx,0x1
  40de81:	cmp    rbp,rbx
  40de84:	jne    40de70 <__libc_csu_init@@Base+0x40>
  40de86:	add    rsp,0x8
  40de8a:	pop    rbx
  40de8b:	pop    rbp
  40de8c:	pop    r12
  40de8e:	pop    r13
  40de90:	pop    r14
  40de92:	pop    r15
  40de94:	ret    
  40de95:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000040dea0 <__libc_csu_fini@@Base>:
  40dea0:	endbr64 
  40dea4:	ret    
  40dea5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40deaf:	nop
  40deb0:	endbr64 
  40deb4:	mov    rdx,QWORD PTR [rip+0x529d]        # 413158 <__data_start@@Base+0x8>
  40debb:	xor    esi,esi
  40debd:	jmp    403240 <__cxa_atexit@plt>

Disassembly of section .fini:

000000000040dec4 <.fini>:
  40dec4:	endbr64 
  40dec8:	sub    rsp,0x8
  40decc:	add    rsp,0x8
  40ded0:	ret    
