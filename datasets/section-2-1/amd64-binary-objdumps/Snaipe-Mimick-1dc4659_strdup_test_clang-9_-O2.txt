
../repos/Snaipe-Mimick-1dc4659/sample/strdup/strdup_test:     file format elf64-x86-64


Disassembly of section .init:

0000000000402000 <.init>:
  402000:	endbr64 
  402004:	sub    rsp,0x8
  402008:	mov    rax,QWORD PTR [rip+0x5fd9]        # 407fe8 <__gmon_start__>
  40200f:	test   rax,rax
  402012:	je     402016 <free@plt-0x1a>
  402014:	call   rax
  402016:	add    rsp,0x8
  40201a:	ret    

Disassembly of section .plt:

0000000000402020 <free@plt-0x10>:
  402020:	push   QWORD PTR [rip+0x5fe2]        # 408008 <_IO_stdin_used@@Base+0x3008>
  402026:	jmp    QWORD PTR [rip+0x5fe4]        # 408010 <_IO_stdin_used@@Base+0x3010>
  40202c:	nop    DWORD PTR [rax+0x0]

0000000000402030 <free@plt>:
  402030:	jmp    QWORD PTR [rip+0x5fe2]        # 408018 <free@GLIBC_2.2.5>
  402036:	push   0x0
  40203b:	jmp    402020 <free@plt-0x10>

0000000000402040 <abort@plt>:
  402040:	jmp    QWORD PTR [rip+0x5fda]        # 408020 <abort@GLIBC_2.2.5>
  402046:	push   0x1
  40204b:	jmp    402020 <free@plt-0x10>

0000000000402050 <__errno_location@plt>:
  402050:	jmp    QWORD PTR [rip+0x5fd2]        # 408028 <__errno_location@GLIBC_2.2.5>
  402056:	push   0x2
  40205b:	jmp    402020 <free@plt-0x10>

0000000000402060 <strncmp@plt>:
  402060:	jmp    QWORD PTR [rip+0x5fca]        # 408030 <strncmp@GLIBC_2.2.5>
  402066:	push   0x3
  40206b:	jmp    402020 <free@plt-0x10>

0000000000402070 <strlen@plt>:
  402070:	jmp    QWORD PTR [rip+0x5fc2]        # 408038 <strlen@GLIBC_2.2.5>
  402076:	push   0x4
  40207b:	jmp    402020 <free@plt-0x10>

0000000000402080 <mmap@plt>:
  402080:	jmp    QWORD PTR [rip+0x5fba]        # 408040 <mmap@GLIBC_2.2.5>
  402086:	push   0x5
  40208b:	jmp    402020 <free@plt-0x10>

0000000000402090 <strchr@plt>:
  402090:	jmp    QWORD PTR [rip+0x5fb2]        # 408048 <strchr@GLIBC_2.2.5>
  402096:	push   0x6
  40209b:	jmp    402020 <free@plt-0x10>

00000000004020a0 <snprintf@plt>:
  4020a0:	jmp    QWORD PTR [rip+0x5faa]        # 408050 <snprintf@GLIBC_2.2.5>
  4020a6:	push   0x7
  4020ab:	jmp    402020 <free@plt-0x10>

00000000004020b0 <memset@plt>:
  4020b0:	jmp    QWORD PTR [rip+0x5fa2]        # 408058 <memset@GLIBC_2.2.5>
  4020b6:	push   0x8
  4020bb:	jmp    402020 <free@plt-0x10>

00000000004020c0 <__tls_get_addr@plt>:
  4020c0:	jmp    QWORD PTR [rip+0x5f9a]        # 408060 <__tls_get_addr@GLIBC_2.3>
  4020c6:	push   0x9
  4020cb:	jmp    402020 <free@plt-0x10>

00000000004020d0 <strcmp@plt>:
  4020d0:	jmp    QWORD PTR [rip+0x5f92]        # 408068 <strcmp@GLIBC_2.2.5>
  4020d6:	push   0xa
  4020db:	jmp    402020 <free@plt-0x10>

00000000004020e0 <fprintf@plt>:
  4020e0:	jmp    QWORD PTR [rip+0x5f8a]        # 408070 <fprintf@GLIBC_2.2.5>
  4020e6:	push   0xb
  4020eb:	jmp    402020 <free@plt-0x10>

00000000004020f0 <memcpy@plt>:
  4020f0:	jmp    QWORD PTR [rip+0x5f82]        # 408078 <memcpy@GLIBC_2.14>
  4020f6:	push   0xc
  4020fb:	jmp    402020 <free@plt-0x10>

0000000000402100 <realloc@plt>:
  402100:	jmp    QWORD PTR [rip+0x5f7a]        # 408080 <realloc@GLIBC_2.2.5>
  402106:	push   0xd
  40210b:	jmp    402020 <free@plt-0x10>

0000000000402110 <munmap@plt>:
  402110:	jmp    QWORD PTR [rip+0x5f72]        # 408088 <munmap@GLIBC_2.2.5>
  402116:	push   0xe
  40211b:	jmp    402020 <free@plt-0x10>

0000000000402120 <my_strdup@plt>:
  402120:	jmp    QWORD PTR [rip+0x5f6a]        # 408090 <my_strdup>
  402126:	push   0xf
  40212b:	jmp    402020 <free@plt-0x10>

0000000000402130 <mprotect@plt>:
  402130:	jmp    QWORD PTR [rip+0x5f62]        # 408098 <mprotect@GLIBC_2.2.5>
  402136:	push   0x10
  40213b:	jmp    402020 <free@plt-0x10>

0000000000402140 <strstr@plt>:
  402140:	jmp    QWORD PTR [rip+0x5f5a]        # 4080a0 <strstr@GLIBC_2.2.5>
  402146:	push   0x11
  40214b:	jmp    402020 <free@plt-0x10>

Disassembly of section .plt.got:

0000000000402150 <malloc@plt>:
  402150:	jmp    QWORD PTR [rip+0x5e9a]        # 407ff0 <malloc@GLIBC_2.2.5>
  402156:	xchg   ax,ax

Disassembly of section .text:

0000000000402160 <_start@@Base>:
  402160:	endbr64 
  402164:	xor    ebp,ebp
  402166:	mov    r9,rdx
  402169:	pop    rsi
  40216a:	mov    rdx,rsp
  40216d:	and    rsp,0xfffffffffffffff0
  402171:	push   rax
  402172:	push   rsp
  402173:	mov    r8,0x404360
  40217a:	mov    rcx,0x4042f0
  402181:	mov    rdi,0x402530
  402188:	call   QWORD PTR [rip+0x5e52]        # 407fe0 <__libc_start_main@GLIBC_2.2.5>
  40218e:	hlt    
  40218f:	nop
  402190:	endbr64 
  402194:	ret    
  402195:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40219f:	nop
  4021a0:	mov    eax,0x4080c8
  4021a5:	cmp    rax,0x4080c8
  4021ab:	je     4021c0 <_start@@Base+0x60>
  4021ad:	mov    eax,0x0
  4021b2:	test   rax,rax
  4021b5:	je     4021c0 <_start@@Base+0x60>
  4021b7:	mov    edi,0x4080c8
  4021bc:	jmp    rax
  4021be:	xchg   ax,ax
  4021c0:	ret    
  4021c1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4021cc:	nop    DWORD PTR [rax+0x0]
  4021d0:	mov    esi,0x4080c8
  4021d5:	sub    rsi,0x4080c8
  4021dc:	mov    rax,rsi
  4021df:	shr    rsi,0x3f
  4021e3:	sar    rax,0x3
  4021e7:	add    rsi,rax
  4021ea:	sar    rsi,1
  4021ed:	je     402200 <_start@@Base+0xa0>
  4021ef:	mov    eax,0x0
  4021f4:	test   rax,rax
  4021f7:	je     402200 <_start@@Base+0xa0>
  4021f9:	mov    edi,0x4080c8
  4021fe:	jmp    rax
  402200:	ret    
  402201:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40220c:	nop    DWORD PTR [rax+0x0]
  402210:	endbr64 
  402214:	cmp    BYTE PTR [rip+0x5ead],0x0        # 4080c8 <__bss_start@@Base>
  40221b:	jne    402230 <_start@@Base+0xd0>
  40221d:	push   rbp
  40221e:	mov    rbp,rsp
  402221:	call   4021a0 <_start@@Base+0x40>
  402226:	mov    BYTE PTR [rip+0x5e9b],0x1        # 4080c8 <__bss_start@@Base>
  40222d:	pop    rbp
  40222e:	ret    
  40222f:	nop
  402230:	ret    
  402231:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40223c:	nop    DWORD PTR [rax+0x0]
  402240:	endbr64 
  402244:	jmp    4021d0 <_start@@Base+0x70>
  402246:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000402250 <test_simple_case@@Base>:
  402250:	push   rbp
  402251:	mov    rbp,rsp
  402254:	sub    rsp,0xa0
  40225b:	lea    rdi,[rip+0x2da2]        # 405004 <_IO_stdin_used@@Base+0x4>
  402262:	call   402400 <test_simple_case@@Base+0x1b0>
  402267:	xor    edi,edi
  402269:	mov    QWORD PTR [rbp-0x70],rax
  40226d:	call   402c70 <mmk_matcher_init@@Base>
  402272:	lea    rax,[rbp-0x6]
  402276:	xor    esi,esi
  402278:	lea    rcx,[rbp-0x28]
  40227c:	mov    rdx,rcx
  40227f:	mov    rdi,rdx
  402282:	mov    edx,0x20
  402287:	mov    QWORD PTR [rbp-0x78],rax
  40228b:	mov    QWORD PTR [rbp-0x80],rcx
  40228f:	call   4020b0 <memset@plt>
  402294:	mov    rax,QWORD PTR [rbp-0x78]
  402298:	mov    QWORD PTR [rbp-0x30],rax
  40229c:	lea    rcx,[rbp-0x30]
  4022a0:	mov    QWORD PTR [rbp-0x20],rcx
  4022a4:	mov    rdi,QWORD PTR [rbp-0x80]
  4022a8:	call   4041a0 <mmk_when_init@@Base>
  4022ad:	mov    edi,0x6
  4022b2:	call   402150 <malloc@plt>
  4022b7:	mov    QWORD PTR [rbp-0x88],rax
  4022be:	call   402cb0 <mmk_matcher_term@@Base>
  4022c3:	lea    rdi,[rip+0x2d4c]        # 405016 <_IO_stdin_used@@Base+0x16>
  4022ca:	call   402120 <my_strdup@plt>
  4022cf:	mov    QWORD PTR [rbp-0x38],rax
  4022d3:	mov    edi,0x1
  4022d8:	call   402c70 <mmk_matcher_init@@Base>
  4022dd:	xor    esi,esi
  4022df:	mov    edi,0x8000000a
  4022e4:	call   402cf0 <mmk_matcher_add@@Base>
  4022e9:	mov    edi,0x6
  4022ee:	call   402150 <malloc@plt>
  4022f3:	mov    QWORD PTR [rbp-0x90],rax
  4022fa:	call   402cb0 <mmk_matcher_term@@Base>
  4022ff:	mov    DWORD PTR [rbp-0x68],0x1
  402306:	mov    DWORD PTR [rbp-0x64],0x0
  40230d:	mov    QWORD PTR [rbp-0x60],0x0
  402315:	mov    QWORD PTR [rbp-0x58],0x0
  40231d:	mov    QWORD PTR [rbp-0x50],0x1
  402325:	mov    QWORD PTR [rbp-0x48],0x0
  40232d:	lea    rdi,[rbp-0x68]
  402331:	call   403a30 <mmk_verify_times@@Base>
  402336:	mov    DWORD PTR [rbp-0x3c],eax
  402339:	cmp    DWORD PTR [rbp-0x3c],0x0
  40233d:	jne    402379 <test_simple_case@@Base+0x129>
  402343:	mov    rax,QWORD PTR [rip+0x5cae]        # 407ff8 <stderr@GLIBC_2.2.5>
  40234a:	mov    rdi,QWORD PTR [rax]
  40234d:	lea    rsi,[rip+0x2cc8]        # 40501c <_IO_stdin_used@@Base+0x1c>
  402354:	lea    rdx,[rip+0x2cde]        # 405039 <_IO_stdin_used@@Base+0x39>
  40235b:	mov    ecx,0x17
  402360:	lea    r8,[rip+0x2d2e]        # 405095 <_IO_stdin_used@@Base+0x95>
  402367:	mov    al,0x0
  402369:	call   4020e0 <fprintf@plt>
  40236e:	mov    DWORD PTR [rbp-0x94],eax
  402374:	call   402040 <abort@plt>
  402379:	jmp    40237e <test_simple_case@@Base+0x12e>
  40237e:	jmp    402383 <test_simple_case@@Base+0x133>
  402383:	lea    rax,[rbp-0x6]
  402387:	mov    rcx,QWORD PTR [rbp-0x38]
  40238b:	cmp    rcx,rax
  40238e:	jne    4023ad <test_simple_case@@Base+0x15d>
  402394:	lea    rsi,[rbp-0x6]
  402398:	lea    rdi,[rip+0x5d19]        # 4080b8 <__data_start@@Base+0x10>
  40239f:	call   4020d0 <strcmp@plt>
  4023a4:	cmp    eax,0x0
  4023a7:	je     4023e3 <test_simple_case@@Base+0x193>
  4023ad:	mov    rax,QWORD PTR [rip+0x5c44]        # 407ff8 <stderr@GLIBC_2.2.5>
  4023b4:	mov    rdi,QWORD PTR [rax]
  4023b7:	lea    rsi,[rip+0x2c5e]        # 40501c <_IO_stdin_used@@Base+0x1c>
  4023be:	lea    rdx,[rip+0x2c74]        # 405039 <_IO_stdin_used@@Base+0x39>
  4023c5:	mov    ecx,0x18
  4023ca:	lea    r8,[rip+0x2cc9]        # 40509a <_IO_stdin_used@@Base+0x9a>
  4023d1:	mov    al,0x0
  4023d3:	call   4020e0 <fprintf@plt>
  4023d8:	mov    DWORD PTR [rbp-0x98],eax
  4023de:	call   402040 <abort@plt>
  4023e3:	jmp    4023e8 <test_simple_case@@Base+0x198>
  4023e8:	mov    rax,QWORD PTR [rip+0x5c01]        # 407ff0 <malloc@GLIBC_2.2.5>
  4023ef:	mov    rdi,rax
  4023f2:	call   402c50 <mmk_reset@@Base>
  4023f7:	add    rsp,0xa0
  4023fe:	pop    rbp
  4023ff:	ret    
  402400:	push   rbp
  402401:	mov    rbp,rsp
  402404:	sub    rsp,0x10
  402408:	lea    rax,[rip+0x151]        # 402560 <main@@Base+0x30>
  40240f:	mov    QWORD PTR [rbp-0x8],rdi
  402413:	mov    rdi,QWORD PTR [rbp-0x8]
  402417:	mov    rsi,rax
  40241a:	call   402d60 <mmk_mock_create_internal@@Base>
  40241f:	add    rsp,0x10
  402423:	pop    rbp
  402424:	ret    
  402425:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40242f:	nop

0000000000402430 <test_error_case@@Base>:
  402430:	push   rbp
  402431:	mov    rbp,rsp
  402434:	sub    rsp,0x60
  402438:	lea    rdi,[rip+0x2bc5]        # 405004 <_IO_stdin_used@@Base+0x4>
  40243f:	call   402400 <test_simple_case@@Base+0x1b0>
  402444:	xor    edi,edi
  402446:	mov    QWORD PTR [rbp-0x8],rax
  40244a:	call   402c70 <mmk_matcher_init@@Base>
  40244f:	mov    DWORD PTR [rbp-0x28],0x0
  402456:	mov    DWORD PTR [rbp-0x24],0xc
  40245d:	mov    QWORD PTR [rbp-0x30],0x0
  402465:	lea    rax,[rbp-0x30]
  402469:	mov    QWORD PTR [rbp-0x20],rax
  40246d:	mov    QWORD PTR [rbp-0x18],0x0
  402475:	mov    QWORD PTR [rbp-0x10],0x0
  40247d:	lea    rdi,[rbp-0x28]
  402481:	call   4041a0 <mmk_when_init@@Base>
  402486:	xor    edi,edi
  402488:	mov    rax,QWORD PTR [rbp-0x8]
  40248c:	mov    esi,0x1
  402491:	mov    QWORD PTR [rbp-0x48],rax
  402495:	call   402cf0 <mmk_matcher_add@@Base>
  40249a:	mov    QWORD PTR [rbp-0x38],0x0
  4024a2:	mov    rdi,QWORD PTR [rbp-0x38]
  4024a6:	mov    rax,QWORD PTR [rbp-0x48]
  4024aa:	call   rax
  4024ac:	mov    QWORD PTR [rbp-0x50],rax
  4024b0:	call   402cb0 <mmk_matcher_term@@Base>
  4024b5:	lea    rdi,[rip+0x2bfe]        # 4050ba <_IO_stdin_used@@Base+0xba>
  4024bc:	call   402120 <my_strdup@plt>
  4024c1:	mov    QWORD PTR [rbp-0x40],rax
  4024c5:	cmp    QWORD PTR [rbp-0x40],0x0
  4024ca:	jne    4024de <test_error_case@@Base+0xae>
  4024d0:	call   402050 <__errno_location@plt>
  4024d5:	cmp    DWORD PTR [rax],0xc
  4024d8:	je     402511 <test_error_case@@Base+0xe1>
  4024de:	mov    rax,QWORD PTR [rip+0x5b13]        # 407ff8 <stderr@GLIBC_2.2.5>
  4024e5:	mov    rdi,QWORD PTR [rax]
  4024e8:	lea    rsi,[rip+0x2b2d]        # 40501c <_IO_stdin_used@@Base+0x1c>
  4024ef:	lea    rdx,[rip+0x2b43]        # 405039 <_IO_stdin_used@@Base+0x39>
  4024f6:	mov    ecx,0x27
  4024fb:	lea    r8,[rip+0x2bbc]        # 4050be <_IO_stdin_used@@Base+0xbe>
  402502:	mov    al,0x0
  402504:	call   4020e0 <fprintf@plt>
  402509:	mov    DWORD PTR [rbp-0x54],eax
  40250c:	call   402040 <abort@plt>
  402511:	jmp    402516 <test_error_case@@Base+0xe6>
  402516:	mov    rax,QWORD PTR [rbp-0x8]
  40251a:	mov    rdi,rax
  40251d:	call   402c50 <mmk_reset@@Base>
  402522:	add    rsp,0x60
  402526:	pop    rbp
  402527:	ret    
  402528:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402530 <main@@Base>:
  402530:	push   rbp
  402531:	mov    rbp,rsp
  402534:	sub    rsp,0x10
  402538:	mov    DWORD PTR [rbp-0x4],0x0
  40253f:	call   402250 <test_simple_case@@Base>
  402544:	call   402430 <test_error_case@@Base>
  402549:	xor    eax,eax
  40254b:	add    rsp,0x10
  40254f:	pop    rbp
  402550:	ret    
  402551:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40255b:	nop    DWORD PTR [rax+rax*1+0x0]
  402560:	push   rbp
  402561:	mov    rbp,rsp
  402564:	sub    rsp,0xd0
  40256b:	mov    QWORD PTR [rbp-0x10],rdi
  40256f:	jmp    402574 <main@@Base+0x44>
  402574:	call   402cd0 <mmk_matcher_ctx@@Base>
  402579:	mov    QWORD PTR [rbp-0x18],rax
  40257d:	cmp    QWORD PTR [rbp-0x18],0x0
  402582:	je     402822 <main@@Base+0x2f2>
  402588:	call   403800 <mmk_ctx@@Base>
  40258d:	mov    rdi,rax
  402590:	call   403660 <mmk_stub_context@@Base>
  402595:	mov    QWORD PTR [rbp-0x20],rax
  402599:	mov    rax,QWORD PTR [rbp-0x18]
  40259d:	cmp    DWORD PTR [rax],0x0
  4025a0:	jne    402610 <main@@Base+0xe0>
  4025a6:	mov    edi,0x50
  4025ab:	call   404070 <mmk_malloc@@Base>
  4025b0:	mov    QWORD PTR [rbp-0x28],rax
  4025b4:	mov    rax,QWORD PTR [rbp-0x28]
  4025b8:	mov    QWORD PTR [rbp-0xc0],rax
  4025bf:	call   4041c0 <mmk_when_get_result@@Base>
  4025c4:	mov    rcx,QWORD PTR [rax]
  4025c7:	mov    rdx,QWORD PTR [rbp-0xc0]
  4025ce:	mov    QWORD PTR [rdx+0x10],rcx
  4025d2:	mov    rcx,QWORD PTR [rax+0x8]
  4025d6:	mov    QWORD PTR [rdx+0x18],rcx
  4025da:	mov    rcx,QWORD PTR [rax+0x10]
  4025de:	mov    QWORD PTR [rdx+0x20],rcx
  4025e2:	mov    rax,QWORD PTR [rax+0x18]
  4025e6:	mov    QWORD PTR [rdx+0x28],rax
  4025ea:	mov    rax,QWORD PTR [rbp-0x10]
  4025ee:	mov    rcx,QWORD PTR [rbp-0x28]
  4025f2:	mov    QWORD PTR [rcx+0x48],rax
  4025f6:	jmp    4025fb <main@@Base+0xcb>
  4025fb:	mov    rdi,QWORD PTR [rbp-0x20]
  4025ff:	mov    rax,QWORD PTR [rbp-0x28]
  402603:	mov    rsi,rax
  402606:	call   4041e0 <mmk_when_impl@@Base>
  40260b:	jmp    402808 <main@@Base+0x2d8>
  402610:	mov    rax,QWORD PTR [rbp-0x18]
  402614:	cmp    DWORD PTR [rax],0x1
  402617:	jne    402803 <main@@Base+0x2d3>
  40261d:	mov    QWORD PTR [rbp-0x30],0x0
  402625:	mov    rdi,QWORD PTR [rbp-0x20]
  402629:	call   402f50 <mmk_mock_params_begin@@Base>
  40262e:	mov    QWORD PTR [rbp-0x38],rax
  402632:	cmp    QWORD PTR [rbp-0x38],0x0
  402637:	je     4027c2 <main@@Base+0x292>
  40263d:	mov    rax,QWORD PTR [rbp-0x18]
  402641:	mov    QWORD PTR [rbp-0x40],rax
  402645:	mov    rax,QWORD PTR [rbp-0x40]
  402649:	cmp    QWORD PTR [rax+0x10],0x0
  40264e:	je     40275a <main@@Base+0x22a>
  402654:	mov    rax,QWORD PTR [rbp-0x40]
  402658:	mov    rax,QWORD PTR [rax+0x10]
  40265c:	mov    QWORD PTR [rbp-0x40],rax
  402660:	mov    rax,QWORD PTR [rbp-0x40]
  402664:	cmp    DWORD PTR [rax],0x0
  402667:	jne    402672 <main@@Base+0x142>
  40266d:	jmp    402755 <main@@Base+0x225>
  402672:	mov    rax,QWORD PTR [rbp-0x40]
  402676:	mov    ecx,DWORD PTR [rax]
  402678:	and    ecx,0x80000000
  40267e:	cmp    ecx,0x0
  402681:	je     402710 <main@@Base+0x1e0>
  402687:	mov    rax,QWORD PTR [rbp-0x38]
  40268b:	add    rax,0x18
  402691:	lea    rcx,[rbp-0x10]
  402695:	mov    rdi,rax
  402698:	mov    rsi,rcx
  40269b:	mov    edx,0x8
  4026a0:	call   403c60 <mmk_memcmp@@Base>
  4026a5:	mov    DWORD PTR [rbp-0x44],eax
  4026a8:	cmp    DWORD PTR [rbp-0x44],0x0
  4026ac:	jne    4026c9 <main@@Base+0x199>
  4026b2:	mov    rax,QWORD PTR [rbp-0x40]
  4026b6:	mov    ecx,DWORD PTR [rax]
  4026b8:	and    ecx,0x2
  4026bb:	cmp    ecx,0x0
  4026be:	jne    4026c9 <main@@Base+0x199>
  4026c4:	jmp    4027a4 <main@@Base+0x274>
  4026c9:	cmp    DWORD PTR [rbp-0x44],0x0
  4026cd:	jge    4026ea <main@@Base+0x1ba>
  4026d3:	mov    rax,QWORD PTR [rbp-0x40]
  4026d7:	mov    ecx,DWORD PTR [rax]
  4026d9:	and    ecx,0x4
  4026dc:	cmp    ecx,0x0
  4026df:	jne    4026ea <main@@Base+0x1ba>
  4026e5:	jmp    4027a4 <main@@Base+0x274>
  4026ea:	cmp    DWORD PTR [rbp-0x44],0x0
  4026ee:	jle    40270b <main@@Base+0x1db>
  4026f4:	mov    rax,QWORD PTR [rbp-0x40]
  4026f8:	mov    ecx,DWORD PTR [rax]
  4026fa:	and    ecx,0x8
  4026fd:	cmp    ecx,0x0
  402700:	jne    40270b <main@@Base+0x1db>
  402706:	jmp    4027a4 <main@@Base+0x274>
  40270b:	jmp    402750 <main@@Base+0x220>
  402710:	mov    rax,QWORD PTR [rbp-0x40]
  402714:	cmp    DWORD PTR [rax],0x1
  402717:	jne    40274b <main@@Base+0x21b>
  40271d:	mov    rdi,QWORD PTR [rbp-0x40]
  402721:	call   402d50 <mmk_matcher_get_predicate@@Base>
  402726:	mov    QWORD PTR [rbp-0x50],rax
  40272a:	mov    rax,QWORD PTR [rbp-0x50]
  40272e:	mov    rcx,QWORD PTR [rbp-0x38]
  402732:	mov    rdi,QWORD PTR [rcx+0x18]
  402736:	call   rax
  402738:	cmp    eax,0x0
  40273b:	jne    402746 <main@@Base+0x216>
  402741:	jmp    4027a4 <main@@Base+0x274>
  402746:	jmp    40274b <main@@Base+0x21b>
  40274b:	jmp    402750 <main@@Base+0x220>
  402750:	jmp    402755 <main@@Base+0x225>
  402755:	jmp    40278b <main@@Base+0x25b>
  40275a:	mov    rax,QWORD PTR [rbp-0x38]
  40275e:	add    rax,0x18
  402764:	lea    rcx,[rbp-0x10]
  402768:	mov    rdi,rax
  40276b:	mov    rsi,rcx
  40276e:	mov    edx,0x8
  402773:	call   403c60 <mmk_memcmp@@Base>
  402778:	cmp    eax,0x0
  40277b:	je     402786 <main@@Base+0x256>
  402781:	jmp    4027a4 <main@@Base+0x274>
  402786:	jmp    40278b <main@@Base+0x25b>
  40278b:	jmp    402790 <main@@Base+0x260>
  402790:	jmp    402795 <main@@Base+0x265>
  402795:	mov    rax,QWORD PTR [rbp-0x38]
  402799:	mov    rax,QWORD PTR [rax]
  40279c:	add    rax,QWORD PTR [rbp-0x30]
  4027a0:	mov    QWORD PTR [rbp-0x30],rax
  4027a4:	jmp    4027a9 <main@@Base+0x279>
  4027a9:	mov    rdi,QWORD PTR [rbp-0x20]
  4027ad:	mov    rax,QWORD PTR [rbp-0x38]
  4027b1:	mov    rsi,rax
  4027b4:	call   402f70 <mmk_mock_params_next@@Base>
  4027b9:	mov    QWORD PTR [rbp-0x38],rax
  4027bd:	jmp    402632 <main@@Base+0x102>
  4027c2:	mov    rax,QWORD PTR [rbp-0x18]
  4027c6:	mov    QWORD PTR [rbp-0x58],rax
  4027ca:	cmp    QWORD PTR [rbp-0x58],0x0
  4027cf:	je     4027fa <main@@Base+0x2ca>
  4027d5:	mov    rax,QWORD PTR [rbp-0x58]
  4027d9:	mov    rax,QWORD PTR [rax+0x10]
  4027dd:	mov    QWORD PTR [rbp-0x60],rax
  4027e1:	mov    rax,QWORD PTR [rbp-0x58]
  4027e5:	mov    rdi,rax
  4027e8:	call   404090 <mmk_free@@Base>
  4027ed:	mov    rax,QWORD PTR [rbp-0x60]
  4027f1:	mov    QWORD PTR [rbp-0x58],rax
  4027f5:	jmp    4027ca <main@@Base+0x29a>
  4027fa:	mov    rdi,QWORD PTR [rbp-0x30]
  4027fe:	call   403a10 <mmk_verify_set_times@@Base>
  402803:	jmp    402808 <main@@Base+0x2d8>
  402808:	jmp    40280d <main@@Base+0x2dd>
  40280d:	jmp    402812 <main@@Base+0x2e2>
  402812:	mov    rax,QWORD PTR [rip+0x58b7]        # 4080d0 <__bss_start@@Base+0x8>
  402819:	mov    QWORD PTR [rbp-0x8],rax
  40281d:	jmp    402b8b <main@@Base+0x65b>
  402822:	mov    QWORD PTR [rbp-0x88],0x0
  40282d:	mov    QWORD PTR [rbp-0x80],0x0
  402835:	mov    QWORD PTR [rbp-0x78],0x0
  40283d:	mov    rax,QWORD PTR [rbp-0x10]
  402841:	mov    QWORD PTR [rbp-0x70],rax
  402845:	lea    rax,[rbp-0x88]
  40284c:	mov    QWORD PTR [rbp-0x68],rax
  402850:	jmp    402855 <main@@Base+0x325>
  402855:	mov    rax,QWORD PTR [rbp-0x68]
  402859:	mov    rdi,rax
  40285c:	mov    esi,0x20
  402861:	call   403aa0 <mmk_verify_register_call@@Base>
  402866:	call   402f90 <mmk_mock_get_params@@Base>
  40286b:	mov    QWORD PTR [rbp-0x90],rax
  402872:	cmp    QWORD PTR [rbp-0x90],0x0
  40287a:	je     402b76 <main@@Base+0x646>
  402880:	mov    rax,QWORD PTR [rbp-0x90]
  402887:	mov    QWORD PTR [rbp-0x98],rax
  40288e:	mov    rax,QWORD PTR [rbp-0x90]
  402895:	mov    rax,QWORD PTR [rax]
  402898:	mov    QWORD PTR [rbp-0xa0],rax
  40289f:	mov    rax,QWORD PTR [rbp-0xa0]
  4028a6:	cmp    QWORD PTR [rax+0x10],0x0
  4028ab:	je     4029d9 <main@@Base+0x4a9>
  4028b1:	mov    rax,QWORD PTR [rbp-0xa0]
  4028b8:	mov    rax,QWORD PTR [rax+0x10]
  4028bc:	mov    QWORD PTR [rbp-0xa0],rax
  4028c3:	mov    rax,QWORD PTR [rbp-0xa0]
  4028ca:	cmp    DWORD PTR [rax],0x0
  4028cd:	jne    4028d8 <main@@Base+0x3a8>
  4028d3:	jmp    4029d4 <main@@Base+0x4a4>
  4028d8:	mov    rax,QWORD PTR [rbp-0xa0]
  4028df:	mov    ecx,DWORD PTR [rax]
  4028e1:	and    ecx,0x80000000
  4028e7:	cmp    ecx,0x0
  4028ea:	je     402987 <main@@Base+0x457>
  4028f0:	lea    rax,[rbp-0x10]
  4028f4:	mov    rcx,rax
  4028f7:	mov    rdi,rcx
  4028fa:	mov    rsi,rax
  4028fd:	mov    edx,0x8
  402902:	call   403c60 <mmk_memcmp@@Base>
  402907:	mov    DWORD PTR [rbp-0xa4],eax
  40290d:	cmp    DWORD PTR [rbp-0xa4],0x0
  402914:	jne    402934 <main@@Base+0x404>
  40291a:	mov    rax,QWORD PTR [rbp-0xa0]
  402921:	mov    ecx,DWORD PTR [rax]
  402923:	and    ecx,0x2
  402926:	cmp    ecx,0x0
  402929:	jne    402934 <main@@Base+0x404>
  40292f:	jmp    402b5f <main@@Base+0x62f>
  402934:	cmp    DWORD PTR [rbp-0xa4],0x0
  40293b:	jge    40295b <main@@Base+0x42b>
  402941:	mov    rax,QWORD PTR [rbp-0xa0]
  402948:	mov    ecx,DWORD PTR [rax]
  40294a:	and    ecx,0x4
  40294d:	cmp    ecx,0x0
  402950:	jne    40295b <main@@Base+0x42b>
  402956:	jmp    402b5f <main@@Base+0x62f>
  40295b:	cmp    DWORD PTR [rbp-0xa4],0x0
  402962:	jle    402982 <main@@Base+0x452>
  402968:	mov    rax,QWORD PTR [rbp-0xa0]
  40296f:	mov    ecx,DWORD PTR [rax]
  402971:	and    ecx,0x8
  402974:	cmp    ecx,0x0
  402977:	jne    402982 <main@@Base+0x452>
  40297d:	jmp    402b5f <main@@Base+0x62f>
  402982:	jmp    4029cf <main@@Base+0x49f>
  402987:	mov    rax,QWORD PTR [rbp-0xa0]
  40298e:	cmp    DWORD PTR [rax],0x1
  402991:	jne    4029ca <main@@Base+0x49a>
  402997:	mov    rdi,QWORD PTR [rbp-0xa0]
  40299e:	call   402d50 <mmk_matcher_get_predicate@@Base>
  4029a3:	mov    QWORD PTR [rbp-0xb0],rax
  4029aa:	mov    rax,QWORD PTR [rbp-0xb0]
  4029b1:	mov    rdi,QWORD PTR [rbp-0x10]
  4029b5:	call   rax
  4029b7:	cmp    eax,0x0
  4029ba:	jne    4029c5 <main@@Base+0x495>
  4029c0:	jmp    402b5f <main@@Base+0x62f>
  4029c5:	jmp    4029ca <main@@Base+0x49a>
  4029ca:	jmp    4029cf <main@@Base+0x49f>
  4029cf:	jmp    4029d4 <main@@Base+0x4a4>
  4029d4:	jmp    402a15 <main@@Base+0x4e5>
  4029d9:	lea    rax,[rbp-0x10]
  4029dd:	mov    rcx,QWORD PTR [rbp-0x98]
  4029e4:	add    rcx,0x30
  4029eb:	add    rcx,0x18
  4029f2:	mov    rdi,rax
  4029f5:	mov    rsi,rcx
  4029f8:	mov    edx,0x8
  4029fd:	call   403c60 <mmk_memcmp@@Base>
  402a02:	cmp    eax,0x0
  402a05:	je     402a10 <main@@Base+0x4e0>
  402a0b:	jmp    402b5f <main@@Base+0x62f>
  402a10:	jmp    402a15 <main@@Base+0x4e5>
  402a15:	mov    rax,QWORD PTR [rbp-0x98]
  402a1c:	cmp    DWORD PTR [rax+0x14],0x0
  402a20:	je     402a43 <main@@Base+0x513>
  402a26:	mov    rax,QWORD PTR [rbp-0x98]
  402a2d:	mov    ecx,DWORD PTR [rax+0x14]
  402a30:	mov    DWORD PTR [rbp-0xc4],ecx
  402a36:	call   402050 <__errno_location@plt>
  402a3b:	mov    ecx,DWORD PTR [rbp-0xc4]
  402a41:	mov    DWORD PTR [rax],ecx
  402a43:	mov    rax,QWORD PTR [rbp-0x98]
  402a4a:	cmp    QWORD PTR [rax+0x20],0x0
  402a4f:	je     402aad <main@@Base+0x57d>
  402a55:	mov    rax,QWORD PTR [rbp-0x98]
  402a5c:	cmp    QWORD PTR [rax+0x18],0x0
  402a61:	jne    402aad <main@@Base+0x57d>
  402a67:	jmp    402a6c <main@@Base+0x53c>
  402a6c:	jmp    402a71 <main@@Base+0x541>
  402a71:	jmp    402a76 <main@@Base+0x546>
  402a76:	mov    rax,QWORD PTR [rbp-0x98]
  402a7d:	mov    rax,QWORD PTR [rax+0x20]
  402a81:	mov    rdi,QWORD PTR [rbp-0x10]
  402a85:	call   rax
  402a87:	mov    QWORD PTR [rbp-0xb8],rax
  402a8e:	jmp    402a93 <main@@Base+0x563>
  402a93:	jmp    402a98 <main@@Base+0x568>
  402a98:	jmp    402a9d <main@@Base+0x56d>
  402a9d:	mov    rax,QWORD PTR [rbp-0xb8]
  402aa4:	mov    QWORD PTR [rbp-0x8],rax
  402aa8:	jmp    402b8b <main@@Base+0x65b>
  402aad:	mov    rax,QWORD PTR [rbp-0x98]
  402ab4:	cmp    QWORD PTR [rax+0x20],0x0
  402ab9:	je     402b12 <main@@Base+0x5e2>
  402abf:	mov    rax,QWORD PTR [rbp-0x98]
  402ac6:	cmp    QWORD PTR [rax+0x18],0x0
  402acb:	je     402b12 <main@@Base+0x5e2>
  402ad1:	jmp    402ad6 <main@@Base+0x5a6>
  402ad6:	jmp    402adb <main@@Base+0x5ab>
  402adb:	mov    rax,QWORD PTR [rbp-0x98]
  402ae2:	mov    rax,QWORD PTR [rax+0x20]
  402ae6:	mov    rdi,QWORD PTR [rbp-0x10]
  402aea:	call   rax
  402aec:	jmp    402af1 <main@@Base+0x5c1>
  402af1:	jmp    402af6 <main@@Base+0x5c6>
  402af6:	jmp    402afb <main@@Base+0x5cb>
  402afb:	mov    rax,QWORD PTR [rbp-0x98]
  402b02:	mov    rax,QWORD PTR [rax+0x18]
  402b06:	mov    rax,QWORD PTR [rax]
  402b09:	mov    QWORD PTR [rbp-0x8],rax
  402b0d:	jmp    402b8b <main@@Base+0x65b>
  402b12:	mov    rax,QWORD PTR [rbp-0x98]
  402b19:	cmp    QWORD PTR [rax+0x18],0x0
  402b1e:	je     402b45 <main@@Base+0x615>
  402b24:	jmp    402b29 <main@@Base+0x5f9>
  402b29:	jmp    402b2e <main@@Base+0x5fe>
  402b2e:	mov    rax,QWORD PTR [rbp-0x98]
  402b35:	mov    rax,QWORD PTR [rax+0x18]
  402b39:	mov    rax,QWORD PTR [rax]
  402b3c:	mov    QWORD PTR [rbp-0x8],rax
  402b40:	jmp    402b8b <main@@Base+0x65b>
  402b45:	jmp    402b4a <main@@Base+0x61a>
  402b4a:	jmp    402b4f <main@@Base+0x61f>
  402b4f:	mov    rax,QWORD PTR [rip+0x557a]        # 4080d0 <__bss_start@@Base+0x8>
  402b56:	mov    QWORD PTR [rbp-0x8],rax
  402b5a:	jmp    402b8b <main@@Base+0x65b>
  402b5f:	mov    rax,QWORD PTR [rbp-0x90]
  402b66:	mov    rax,QWORD PTR [rax+0x8]
  402b6a:	mov    QWORD PTR [rbp-0x90],rax
  402b71:	jmp    402872 <main@@Base+0x342>
  402b76:	jmp    402b7b <main@@Base+0x64b>
  402b7b:	jmp    402b80 <main@@Base+0x650>
  402b80:	mov    rax,QWORD PTR [rip+0x5549]        # 4080d0 <__bss_start@@Base+0x8>
  402b87:	mov    QWORD PTR [rbp-0x8],rax
  402b8b:	mov    rax,QWORD PTR [rbp-0x8]
  402b8f:	add    rsp,0xd0
  402b96:	pop    rbp
  402b97:	ret    
  402b98:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402ba0 <mmk_init@@Base>:
  402ba0:	push   rax
  402ba1:	cmp    BYTE PTR [rip+0x5530],0x0        # 4080d8 <__bss_start@@Base+0x10>
  402ba8:	jne    402bcb <mmk_init@@Base+0x2b>
  402baa:	call   402fb0 <plt_init_ctx@@Base>
  402baf:	mov    QWORD PTR [rip+0x552a],rax        # 4080e0 <__bss_start@@Base+0x18>
  402bb6:	cmp    rax,0xffffffffffffffff
  402bba:	je     402bcd <mmk_init@@Base+0x2d>
  402bbc:	mov    rdi,rax
  402bbf:	call   4040a0 <mmk_init_vital_functions@@Base>
  402bc4:	mov    BYTE PTR [rip+0x550d],0x1        # 4080d8 <__bss_start@@Base+0x10>
  402bcb:	pop    rax
  402bcc:	ret    
  402bcd:	mov    rax,QWORD PTR [rip+0x5424]        # 407ff8 <stderr@GLIBC_2.2.5>
  402bd4:	mov    rdi,QWORD PTR [rax]
  402bd7:	lea    rsi,[rip+0x243e]        # 40501c <_IO_stdin_used@@Base+0x1c>
  402bde:	lea    rdx,[rip+0x24f8]        # 4050dd <_IO_stdin_used@@Base+0xdd>
  402be5:	lea    r8,[rip+0x2543]        # 40512f <_IO_stdin_used@@Base+0x12f>
  402bec:	mov    ecx,0x2d
  402bf1:	xor    eax,eax
  402bf3:	call   4020e0 <fprintf@plt>
  402bf8:	call   402040 <abort@plt>
  402bfd:	nop    DWORD PTR [rax]

0000000000402c00 <mmk_plt_ctx@@Base>:
  402c00:	push   rax
  402c01:	cmp    BYTE PTR [rip+0x54d0],0x0        # 4080d8 <__bss_start@@Base+0x10>
  402c08:	je     402c13 <mmk_plt_ctx@@Base+0x13>
  402c0a:	mov    rax,QWORD PTR [rip+0x54cf]        # 4080e0 <__bss_start@@Base+0x18>
  402c11:	pop    rcx
  402c12:	ret    
  402c13:	mov    rax,QWORD PTR [rip+0x53de]        # 407ff8 <stderr@GLIBC_2.2.5>
  402c1a:	mov    rdi,QWORD PTR [rax]
  402c1d:	lea    rsi,[rip+0x23f8]        # 40501c <_IO_stdin_used@@Base+0x1c>
  402c24:	lea    rdx,[rip+0x24b2]        # 4050dd <_IO_stdin_used@@Base+0xdd>
  402c2b:	lea    r8,[rip+0x2514]        # 405146 <_IO_stdin_used@@Base+0x146>
  402c32:	mov    ecx,0x36
  402c37:	xor    eax,eax
  402c39:	call   4020e0 <fprintf@plt>
  402c3e:	call   402040 <abort@plt>
  402c43:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402c4d:	nop    DWORD PTR [rax]

0000000000402c50 <mmk_reset@@Base>:
  402c50:	test   rdi,rdi
  402c53:	je     402c6c <mmk_reset@@Base+0x1c>
  402c55:	push   rax
  402c56:	call   4038f0 <mmk_ask_ctx@@Base>
  402c5b:	mov    rdi,rax
  402c5e:	call   403660 <mmk_stub_context@@Base>
  402c63:	mov    rdi,rax
  402c66:	pop    rax
  402c67:	jmp    402eb0 <mmk_mock_destroy_internal@@Base>
  402c6c:	ret    
  402c6d:	nop    DWORD PTR [rax]

0000000000402c70 <mmk_matcher_init@@Base>:
  402c70:	push   rbp
  402c71:	push   rbx
  402c72:	push   rax
  402c73:	mov    ebp,edi
  402c75:	mov    edi,0x18
  402c7a:	call   404070 <mmk_malloc@@Base>
  402c7f:	mov    rbx,rax
  402c82:	mov    DWORD PTR [rax],ebp
  402c84:	vxorps xmm0,xmm0,xmm0
  402c88:	vmovups XMMWORD PTR [rax+0x4],xmm0
  402c8d:	mov    DWORD PTR [rax+0x14],0x0
  402c94:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  402ca0:	mov    QWORD PTR [rax-0x28],rbx
  402ca7:	add    rsp,0x8
  402cab:	pop    rbx
  402cac:	pop    rbp
  402cad:	ret    
  402cae:	xchg   ax,ax

0000000000402cb0 <mmk_matcher_term@@Base>:
  402cb0:	push   rax
  402cb1:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  402cbd:	mov    QWORD PTR [rax-0x28],0x0
  402cc8:	pop    rax
  402cc9:	ret    
  402cca:	nop    WORD PTR [rax+rax*1+0x0]

0000000000402cd0 <mmk_matcher_ctx@@Base>:
  402cd0:	push   rax
  402cd1:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  402cdd:	mov    rax,QWORD PTR [rax-0x28]
  402ce4:	pop    rcx
  402ce5:	ret    
  402ce6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000402cf0 <mmk_matcher_add@@Base>:
  402cf0:	push   rbp
  402cf1:	push   r14
  402cf3:	push   rbx
  402cf4:	mov    ebp,esi
  402cf6:	mov    r14d,edi
  402cf9:	mov    edi,0x18
  402cfe:	call   404070 <mmk_malloc@@Base>
  402d03:	mov    rbx,rax
  402d06:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  402d12:	mov    rax,QWORD PTR [rax-0x28]
  402d19:	movsxd rcx,ebp
  402d1c:	mov    DWORD PTR [rbx],r14d
  402d1f:	mov    QWORD PTR [rbx+0x8],rcx
  402d23:	mov    QWORD PTR [rbx+0x10],0x0
  402d2b:	nop    DWORD PTR [rax+rax*1+0x0]
  402d30:	mov    rdx,rax
  402d33:	mov    rax,QWORD PTR [rax+0x10]
  402d37:	test   rax,rax
  402d3a:	je     402d42 <mmk_matcher_add@@Base+0x52>
  402d3c:	cmp    QWORD PTR [rax+0x8],rcx
  402d40:	jb     402d30 <mmk_matcher_add@@Base+0x40>
  402d42:	mov    QWORD PTR [rbx+0x10],rax
  402d46:	mov    QWORD PTR [rdx+0x10],rbx
  402d4a:	pop    rbx
  402d4b:	pop    r14
  402d4d:	pop    rbp
  402d4e:	ret    
  402d4f:	nop

0000000000402d50 <mmk_matcher_get_predicate@@Base>:
  402d50:	lea    rax,[rdi+0x18]
  402d54:	ret    
  402d55:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402d5f:	nop

0000000000402d60 <mmk_mock_create_internal@@Base>:
  402d60:	push   rbp
  402d61:	push   r15
  402d63:	push   r14
  402d65:	push   r13
  402d67:	push   r12
  402d69:	push   rbx
  402d6a:	push   rax
  402d6b:	mov    r15,rsi
  402d6e:	mov    r14,rdi
  402d71:	call   402ba0 <mmk_init@@Base>
  402d76:	mov    edi,0x28
  402d7b:	call   404070 <mmk_malloc@@Base>
  402d80:	test   rax,rax
  402d83:	je     402e5b <mmk_mock_create_internal@@Base+0xfb>
  402d89:	mov    r13,rax
  402d8c:	vxorps xmm0,xmm0,xmm0
  402d90:	vmovups YMMWORD PTR [rax],ymm0
  402d94:	mov    QWORD PTR [rax+0x20],0x0
  402d9c:	mov    rdi,r14
  402d9f:	mov    esi,0x40
  402da4:	vzeroupper 
  402da7:	call   403f80 <mmk_strchr@@Base>
  402dac:	mov    rbx,rax
  402daf:	test   rax,rax
  402db2:	je     402dbc <mmk_mock_create_internal@@Base+0x5c>
  402db4:	mov    rbp,rbx
  402db7:	sub    rbp,r14
  402dba:	jmp    402dc7 <mmk_mock_create_internal@@Base+0x67>
  402dbc:	mov    rdi,r14
  402dbf:	call   404020 <mmk_strlen@@Base>
  402dc4:	mov    rbp,rax
  402dc7:	lea    rdi,[rbp+0x1]
  402dcb:	call   404070 <mmk_malloc@@Base>
  402dd0:	mov    r12,rax
  402dd3:	mov    rdi,rax
  402dd6:	mov    rsi,r14
  402dd9:	mov    rdx,rbp
  402ddc:	call   403fe0 <mmk_strncpy@@Base>
  402de1:	mov    BYTE PTR [r12+rbp*1],0x0
  402de6:	test   rbx,rbx
  402de9:	je     402e09 <mmk_mock_create_internal@@Base+0xa9>
  402deb:	inc    rbx
  402dee:	lea    rsi,[rip+0x23b8]        # 4051ad <_IO_stdin_used@@Base+0x1ad>
  402df5:	mov    edx,0x4
  402dfa:	mov    rdi,rbx
  402dfd:	call   403f30 <mmk_strneq@@Base>
  402e02:	test   eax,eax
  402e04:	setne  bl
  402e07:	jmp    402e0b <mmk_mock_create_internal@@Base+0xab>
  402e09:	mov    bl,0x1
  402e0b:	mov    rdi,r14
  402e0e:	mov    rsi,r15
  402e11:	mov    rdx,r13
  402e14:	call   403820 <mmk_stub_create@@Base>
  402e19:	mov    QWORD PTR [r13+0x8],rax
  402e1d:	test   rax,rax
  402e20:	je     402e8b <mmk_mock_create_internal@@Base+0x12b>
  402e22:	test   bl,bl
  402e24:	jne    402e3c <mmk_mock_create_internal@@Base+0xdc>
  402e26:	mov    rdi,r12
  402e29:	mov    rsi,r15
  402e2c:	mov    rdx,r13
  402e2f:	call   403820 <mmk_stub_create@@Base>
  402e34:	mov    rcx,QWORD PTR [r13+0x8]
  402e38:	mov    QWORD PTR [rcx+0x48],rax
  402e3c:	mov    rdi,r12
  402e3f:	call   404090 <mmk_free@@Base>
  402e44:	mov    rax,QWORD PTR [r13+0x8]
  402e48:	mov    rax,QWORD PTR [rax+0x40]
  402e4c:	add    rsp,0x8
  402e50:	pop    rbx
  402e51:	pop    r12
  402e53:	pop    r13
  402e55:	pop    r14
  402e57:	pop    r15
  402e59:	pop    rbp
  402e5a:	ret    
  402e5b:	mov    rax,QWORD PTR [rip+0x5196]        # 407ff8 <stderr@GLIBC_2.2.5>
  402e62:	mov    rdi,QWORD PTR [rax]
  402e65:	lea    rsi,[rip+0x21b0]        # 40501c <_IO_stdin_used@@Base+0x1c>
  402e6c:	lea    rdx,[rip+0x22e4]        # 405157 <_IO_stdin_used@@Base+0x157>
  402e73:	lea    r8,[rip+0x232f]        # 4051a9 <_IO_stdin_used@@Base+0x1a9>
  402e7a:	mov    ecx,0x24
  402e7f:	xor    eax,eax
  402e81:	call   4020e0 <fprintf@plt>
  402e86:	call   402040 <abort@plt>
  402e8b:	mov    rax,QWORD PTR [rip+0x5166]        # 407ff8 <stderr@GLIBC_2.2.5>
  402e92:	mov    rdi,QWORD PTR [rax]
  402e95:	lea    rsi,[rip+0x2316]        # 4051b2 <_IO_stdin_used@@Base+0x1b2>
  402e9c:	mov    rdx,r14
  402e9f:	xor    eax,eax
  402ea1:	call   4020e0 <fprintf@plt>
  402ea6:	call   402040 <abort@plt>
  402eab:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402eb0 <mmk_mock_destroy_internal@@Base>:
  402eb0:	push   r15
  402eb2:	push   r14
  402eb4:	push   r12
  402eb6:	push   rbx
  402eb7:	push   rax
  402eb8:	mov    r14,rdi
  402ebb:	mov    rdi,QWORD PTR [rdi+0x8]
  402ebf:	test   rdi,rdi
  402ec2:	je     402ee1 <mmk_mock_destroy_internal@@Base+0x31>
  402ec4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402ece:	xchg   ax,ax
  402ed0:	mov    rbx,QWORD PTR [rdi+0x48]
  402ed4:	call   4038b0 <mmk_stub_destroy@@Base>
  402ed9:	mov    rdi,rbx
  402edc:	test   rbx,rbx
  402edf:	jne    402ed0 <mmk_mock_destroy_internal@@Base+0x20>
  402ee1:	mov    rdi,QWORD PTR [r14+0x10]
  402ee5:	call   404090 <mmk_free@@Base>
  402eea:	mov    r12,QWORD PTR [r14]
  402eed:	test   r12,r12
  402ef0:	jne    402f10 <mmk_mock_destroy_internal@@Base+0x60>
  402ef2:	jmp    402f33 <mmk_mock_destroy_internal@@Base+0x83>
  402ef4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402efe:	xchg   ax,ax
  402f00:	mov    rdi,r12
  402f03:	call   404090 <mmk_free@@Base>
  402f08:	mov    r12,r15
  402f0b:	test   r15,r15
  402f0e:	je     402f33 <mmk_mock_destroy_internal@@Base+0x83>
  402f10:	mov    rdi,QWORD PTR [r12]
  402f14:	mov    r15,QWORD PTR [r12+0x8]
  402f19:	test   rdi,rdi
  402f1c:	je     402f00 <mmk_mock_destroy_internal@@Base+0x50>
  402f1e:	xchg   ax,ax
  402f20:	mov    rbx,QWORD PTR [rdi+0x10]
  402f24:	call   404090 <mmk_free@@Base>
  402f29:	mov    rdi,rbx
  402f2c:	test   rbx,rbx
  402f2f:	jne    402f20 <mmk_mock_destroy_internal@@Base+0x70>
  402f31:	jmp    402f00 <mmk_mock_destroy_internal@@Base+0x50>
  402f33:	mov    rdi,r14
  402f36:	add    rsp,0x8
  402f3a:	pop    rbx
  402f3b:	pop    r12
  402f3d:	pop    r14
  402f3f:	pop    r15
  402f41:	jmp    404090 <mmk_free@@Base>
  402f46:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000402f50 <mmk_mock_params_begin@@Base>:
  402f50:	mov    rax,QWORD PTR [rdi+0x10]
  402f54:	test   rax,rax
  402f57:	je     402f69 <mmk_mock_params_begin@@Base+0x19>
  402f59:	mov    rcx,QWORD PTR [rdi+0x18]
  402f5d:	add    rax,0x8
  402f61:	test   rcx,rcx
  402f64:	cmove  rax,rcx
  402f68:	ret    
  402f69:	xor    eax,eax
  402f6b:	ret    
  402f6c:	nop    DWORD PTR [rax+0x0]

0000000000402f70 <mmk_mock_params_next@@Base>:
  402f70:	mov    rax,QWORD PTR [rsi-0x8]
  402f74:	lea    rcx,[rax+rsi*1]
  402f78:	add    rcx,0x8
  402f7c:	mov    rdx,QWORD PTR [rdi+0x10]
  402f80:	add    rdx,QWORD PTR [rdi+0x18]
  402f84:	xor    eax,eax
  402f86:	cmp    rcx,rdx
  402f89:	cmovb  rax,rcx
  402f8d:	ret    
  402f8e:	xchg   ax,ax

0000000000402f90 <mmk_mock_get_params@@Base>:
  402f90:	push   rax
  402f91:	call   403800 <mmk_ctx@@Base>
  402f96:	mov    rdi,rax
  402f99:	call   403660 <mmk_stub_context@@Base>
  402f9e:	mov    rax,QWORD PTR [rax]
  402fa1:	pop    rcx
  402fa2:	ret    
  402fa3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402fad:	nop    DWORD PTR [rax]

0000000000402fb0 <plt_init_ctx@@Base>:
  402fb0:	mov    rax,QWORD PTR [rip+0x5109]        # 4080c0 <__data_start@@Base+0x18>
  402fb7:	cmp    rax,0xffffffffffffffff
  402fbb:	je     402fbe <plt_init_ctx@@Base+0xe>
  402fbd:	ret    
  402fbe:	mov    rax,QWORD PTR [rip+0x500b]        # 407fd0 <_r_debug@GLIBC_2.2.5>
  402fc5:	mov    QWORD PTR [rip+0x50f4],rax        # 4080c0 <__data_start@@Base+0x18>
  402fcc:	ret    
  402fcd:	nop    DWORD PTR [rax]

0000000000402fd0 <plt_get_lib@@Base>:
  402fd0:	push   rbp
  402fd1:	mov    rbp,rsp
  402fd4:	push   r15
  402fd6:	push   r14
  402fd8:	push   r13
  402fda:	push   r12
  402fdc:	push   rbx
  402fdd:	sub    rsp,0x28
  402fe1:	mov    r14,rdi
  402fe4:	test   rsi,rsi
  402fe7:	lea    rbx,[rip+0x21bf]        # 4051ad <_IO_stdin_used@@Base+0x1ad>
  402fee:	cmovne rbx,rsi
  402ff2:	lea    rsi,[rip+0x21ec]        # 4051e5 <_IO_stdin_used@@Base+0x1e5>
  402ff9:	mov    edx,0x4
  402ffe:	mov    rdi,rbx
  403001:	call   402060 <strncmp@plt>
  403006:	test   eax,eax
  403008:	je     403061 <plt_get_lib@@Base+0x91>
  40300a:	lea    rsi,[rip+0x21d9]        # 4051ea <_IO_stdin_used@@Base+0x1ea>
  403011:	mov    edx,0x5
  403016:	mov    rdi,rbx
  403019:	call   402060 <strncmp@plt>
  40301e:	test   eax,eax
  403020:	je     403069 <plt_get_lib@@Base+0x99>
  403022:	lea    rsi,[rip+0x21c7]        # 4051f0 <_IO_stdin_used@@Base+0x1f0>
  403029:	mov    edx,0x4
  40302e:	mov    rdi,rbx
  403031:	call   402060 <strncmp@plt>
  403036:	test   eax,eax
  403038:	je     403071 <plt_get_lib@@Base+0xa1>
  40303a:	lea    rsi,[rip+0x216c]        # 4051ad <_IO_stdin_used@@Base+0x1ad>
  403041:	mov    rdi,rbx
  403044:	call   4020d0 <strcmp@plt>
  403049:	test   eax,eax
  40304b:	jne    4031b5 <plt_get_lib@@Base+0x1e5>
  403051:	xor    r12d,r12d
  403054:	lea    r15,[rip+0x21de]        # 405239 <_IO_stdin_used@@Base+0x239>
  40305b:	mov    QWORD PTR [rbp-0x38],r15
  40305f:	jmp    40308e <plt_get_lib@@Base+0xbe>
  403061:	mov    r12d,0x1
  403067:	jmp    403077 <plt_get_lib@@Base+0xa7>
  403069:	mov    r12d,0x2
  40306f:	jmp    403077 <plt_get_lib@@Base+0xa7>
  403071:	mov    r12d,0x3
  403077:	mov    QWORD PTR [rbp-0x38],rbx
  40307b:	mov    rdi,rbx
  40307e:	mov    esi,0x3a
  403083:	call   402090 <strchr@plt>
  403088:	mov    r15,rax
  40308b:	inc    r15
  40308e:	mov    rdi,r15
  403091:	call   402070 <strlen@plt>
  403096:	mov    r13,rax
  403099:	lea    rsi,[rip+0x220c]        # 4052ac <_IO_stdin_used@@Base+0x2ac>
  4030a0:	mov    QWORD PTR [rbp-0x40],r15
  4030a4:	mov    rdi,r15
  4030a7:	call   4020d0 <strcmp@plt>
  4030ac:	mov    DWORD PTR [rbp-0x2c],eax
  4030af:	mov    rbx,QWORD PTR [r14+0x8]
  4030b3:	test   rbx,rbx
  4030b6:	je     4031a1 <plt_get_lib@@Base+0x1d1>
  4030bc:	add    r13,0x8
  4030c0:	lea    rax,[r13+0xf]
  4030c4:	and    rax,0xfffffffffffffff0
  4030c8:	mov    QWORD PTR [rbp-0x48],rax
  4030cc:	cmp    r12d,0x1
  4030d0:	jne    403150 <plt_get_lib@@Base+0x180>
  4030d2:	jmp    403108 <plt_get_lib@@Base+0x138>
  4030d4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4030de:	xchg   ax,ax
  4030e0:	mov    rsi,QWORD PTR [rbx+0x8]
  4030e4:	mov    rdi,QWORD PTR [rbp-0x38]
  4030e8:	call   4020d0 <strcmp@plt>
  4030ed:	test   eax,eax
  4030ef:	je     4031a3 <plt_get_lib@@Base+0x1d3>
  4030f5:	mov    rbx,QWORD PTR [rbx+0x18]
  4030f9:	test   rbx,rbx
  4030fc:	je     4031a1 <plt_get_lib@@Base+0x1d1>
  403102:	cmp    r12d,0x1
  403106:	jne    403150 <plt_get_lib@@Base+0x180>
  403108:	cmp    DWORD PTR [rbp-0x2c],0x0
  40310c:	je     40316f <plt_get_lib@@Base+0x19f>
  40310e:	mov    r15,rsp
  403111:	mov    r14,rsp
  403114:	sub    r14,QWORD PTR [rbp-0x48]
  403118:	mov    rsp,r14
  40311b:	mov    rdi,r14
  40311e:	mov    rsi,r13
  403121:	lea    rdx,[rip+0x2124]        # 40524c <_IO_stdin_used@@Base+0x24c>
  403128:	mov    rcx,QWORD PTR [rbp-0x40]
  40312c:	xor    eax,eax
  40312e:	call   4020a0 <snprintf@plt>
  403133:	mov    rdi,QWORD PTR [rbx+0x8]
  403137:	mov    rsi,r14
  40313a:	call   402140 <strstr@plt>
  40313f:	test   rax,rax
  403142:	mov    rsp,r15
  403145:	je     4030f5 <plt_get_lib@@Base+0x125>
  403147:	jmp    4031a3 <plt_get_lib@@Base+0x1d3>
  403149:	nop    DWORD PTR [rax+0x0]
  403150:	test   r12b,0x1
  403154:	je     4030e0 <plt_get_lib@@Base+0x110>
  403156:	cmp    r12d,0x3
  40315a:	jne    4030f5 <plt_get_lib@@Base+0x125>
  40315c:	mov    rdi,rbx
  40315f:	mov    rsi,QWORD PTR [rbp-0x40]
  403163:	call   403220 <plt_get_lib@@Base+0x250>
  403168:	test   rax,rax
  40316b:	je     4030f5 <plt_get_lib@@Base+0x125>
  40316d:	jmp    4031a3 <plt_get_lib@@Base+0x1d3>
  40316f:	mov    r14,QWORD PTR [rbx+0x8]
  403173:	mov    rdi,r14
  403176:	lea    rsi,[rip+0x20bd]        # 40523a <_IO_stdin_used@@Base+0x23a>
  40317d:	call   402140 <strstr@plt>
  403182:	test   rax,rax
  403185:	jne    4031a3 <plt_get_lib@@Base+0x1d3>
  403187:	mov    rdi,r14
  40318a:	lea    rsi,[rip+0x20b2]        # 405243 <_IO_stdin_used@@Base+0x243>
  403191:	call   402140 <strstr@plt>
  403196:	test   rax,rax
  403199:	je     4030f5 <plt_get_lib@@Base+0x125>
  40319f:	jmp    4031a3 <plt_get_lib@@Base+0x1d3>
  4031a1:	xor    ebx,ebx
  4031a3:	mov    rax,rbx
  4031a6:	lea    rsp,[rbp-0x28]
  4031aa:	pop    rbx
  4031ab:	pop    r12
  4031ad:	pop    r13
  4031af:	pop    r14
  4031b1:	pop    r15
  4031b3:	pop    rbp
  4031b4:	ret    
  4031b5:	mov    r14,rbx
  4031b8:	mov    rdi,rbx
  4031bb:	mov    esi,0x3a
  4031c0:	call   402090 <strchr@plt>
  4031c5:	test   rax,rax
  4031c8:	jne    4031ea <plt_get_lib@@Base+0x21a>
  4031ca:	mov    rax,QWORD PTR [rip+0x4e27]        # 407ff8 <stderr@GLIBC_2.2.5>
  4031d1:	mov    rdi,QWORD PTR [rax]
  4031d4:	lea    rsi,[rip+0x203c]        # 405217 <_IO_stdin_used@@Base+0x217>
  4031db:	mov    rdx,r14
  4031de:	xor    eax,eax
  4031e0:	call   4020e0 <fprintf@plt>
  4031e5:	call   402040 <abort@plt>
  4031ea:	sub    eax,r14d
  4031ed:	mov    rcx,QWORD PTR [rip+0x4e04]        # 407ff8 <stderr@GLIBC_2.2.5>
  4031f4:	mov    rdi,QWORD PTR [rcx]
  4031f7:	inc    eax
  4031f9:	lea    rsi,[rip+0x1ff5]        # 4051f5 <_IO_stdin_used@@Base+0x1f5>
  403200:	mov    edx,eax
  403202:	mov    rcx,r14
  403205:	xor    eax,eax
  403207:	call   4020e0 <fprintf@plt>
  40320c:	call   402040 <abort@plt>
  403211:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40321b:	nop    DWORD PTR [rax+rax*1+0x0]
  403220:	push   rbp
  403221:	push   r15
  403223:	push   r14
  403225:	push   r13
  403227:	push   r12
  403229:	push   rbx
  40322a:	sub    rsp,0x18
  40322e:	mov    QWORD PTR [rsp+0x10],rsi
  403233:	mov    rbx,QWORD PTR [rdi]
  403236:	mov    rax,QWORD PTR [rdi+0x10]
  40323a:	mov    rcx,QWORD PTR [rax]
  40323d:	test   rcx,rcx
  403240:	je     403264 <plt_get_lib@@Base+0x294>
  403242:	lea    rdx,[rax+0x10]
  403246:	xor    r8d,r8d
  403249:	mov    rsi,rcx
  40324c:	nop    DWORD PTR [rax+0x0]
  403250:	cmp    rsi,0x6
  403254:	je     40327c <plt_get_lib@@Base+0x2ac>
  403256:	mov    rsi,QWORD PTR [rdx]
  403259:	add    rdx,0x10
  40325d:	test   rsi,rsi
  403260:	jne    403250 <plt_get_lib@@Base+0x280>
  403262:	jmp    40328d <plt_get_lib@@Base+0x2bd>
  403264:	xor    eax,eax
  403266:	mov    QWORD PTR [rsp],rax
  40326a:	xor    edx,edx
  40326c:	xor    r8d,r8d
  40326f:	xor    r9d,r9d
  403272:	xor    ebp,ebp
  403274:	xor    r15d,r15d
  403277:	jmp    403387 <plt_get_lib@@Base+0x3b7>
  40327c:	mov    r8,QWORD PTR [rdx-0x8]
  403280:	cmp    r8,rbx
  403283:	jb     40328a <plt_get_lib@@Base+0x2ba>
  403285:	test   r8,r8
  403288:	jns    40328d <plt_get_lib@@Base+0x2bd>
  40328a:	add    r8,rbx
  40328d:	lea    rdx,[rax+0x10]
  403291:	xor    r9d,r9d
  403294:	mov    rsi,rcx
  403297:	nop    WORD PTR [rax+rax*1+0x0]
  4032a0:	cmp    rsi,0x5
  4032a4:	je     4032b4 <plt_get_lib@@Base+0x2e4>
  4032a6:	mov    rsi,QWORD PTR [rdx]
  4032a9:	add    rdx,0x10
  4032ad:	test   rsi,rsi
  4032b0:	jne    4032a0 <plt_get_lib@@Base+0x2d0>
  4032b2:	jmp    4032c5 <plt_get_lib@@Base+0x2f5>
  4032b4:	mov    r9,QWORD PTR [rdx-0x8]
  4032b8:	cmp    r9,rbx
  4032bb:	jb     4032c2 <plt_get_lib@@Base+0x2f2>
  4032bd:	test   r9,r9
  4032c0:	jns    4032c5 <plt_get_lib@@Base+0x2f5>
  4032c2:	add    r9,rbx
  4032c5:	lea    rsi,[rax+0x10]
  4032c9:	xor    edx,edx
  4032cb:	mov    rdi,rcx
  4032ce:	xchg   ax,ax
  4032d0:	cmp    rdi,0x14
  4032d4:	je     4032e4 <plt_get_lib@@Base+0x314>
  4032d6:	mov    rdi,QWORD PTR [rsi]
  4032d9:	add    rsi,0x10
  4032dd:	test   rdi,rdi
  4032e0:	jne    4032d0 <plt_get_lib@@Base+0x300>
  4032e2:	jmp    4032e8 <plt_get_lib@@Base+0x318>
  4032e4:	mov    rdx,QWORD PTR [rsi-0x8]
  4032e8:	lea    rsi,[rax+0x10]
  4032ec:	xor    ebp,ebp
  4032ee:	mov    rdi,rcx
  4032f1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4032fb:	nop    DWORD PTR [rax+rax*1+0x0]
  403300:	cmp    rdi,0x17
  403304:	je     403314 <plt_get_lib@@Base+0x344>
  403306:	mov    rdi,QWORD PTR [rsi]
  403309:	add    rsi,0x10
  40330d:	test   rdi,rdi
  403310:	jne    403300 <plt_get_lib@@Base+0x330>
  403312:	jmp    403325 <plt_get_lib@@Base+0x355>
  403314:	mov    rbp,QWORD PTR [rsi-0x8]
  403318:	cmp    rbp,rbx
  40331b:	jb     403322 <plt_get_lib@@Base+0x352>
  40331d:	test   rbp,rbp
  403320:	jns    403325 <plt_get_lib@@Base+0x355>
  403322:	add    rbp,rbx
  403325:	lea    rsi,[rax+0x10]
  403329:	xor    edi,edi
  40332b:	mov    QWORD PTR [rsp],rdi
  40332f:	mov    rdi,rcx
  403332:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40333c:	nop    DWORD PTR [rax+0x0]
  403340:	cmp    rdi,0x2
  403344:	je     403354 <plt_get_lib@@Base+0x384>
  403346:	mov    rdi,QWORD PTR [rsi]
  403349:	add    rsi,0x10
  40334d:	test   rdi,rdi
  403350:	jne    403340 <plt_get_lib@@Base+0x370>
  403352:	jmp    40335c <plt_get_lib@@Base+0x38c>
  403354:	mov    rsi,QWORD PTR [rsi-0x8]
  403358:	mov    QWORD PTR [rsp],rsi
  40335c:	lea    rsi,[rdx+0x2]
  403360:	add    rax,0x10
  403364:	xor    r15d,r15d
  403367:	nop    WORD PTR [rax+rax*1+0x0]
  403370:	cmp    rcx,rsi
  403373:	je     403383 <plt_get_lib@@Base+0x3b3>
  403375:	mov    rcx,QWORD PTR [rax]
  403378:	add    rax,0x10
  40337c:	test   rcx,rcx
  40337f:	jne    403370 <plt_get_lib@@Base+0x3a0>
  403381:	jmp    403387 <plt_get_lib@@Base+0x3b7>
  403383:	mov    r15,QWORD PTR [rax-0x8]
  403387:	xor    eax,eax
  403389:	test   r15,r15
  40338c:	je     40343e <plt_get_lib@@Base+0x46e>
  403392:	cmp    QWORD PTR [rsp],0x0
  403397:	je     40343e <plt_get_lib@@Base+0x46e>
  40339d:	test   rbp,rbp
  4033a0:	je     40343e <plt_get_lib@@Base+0x46e>
  4033a6:	test   rdx,rdx
  4033a9:	je     40343e <plt_get_lib@@Base+0x46e>
  4033af:	test   r8,r8
  4033b2:	je     40343e <plt_get_lib@@Base+0x46e>
  4033b8:	test   r9,r9
  4033bb:	je     40343e <plt_get_lib@@Base+0x46e>
  4033c1:	mov    QWORD PTR [rsp+0x8],rbx
  4033c6:	cmp    r15,QWORD PTR [rsp]
  4033ca:	ja     40343c <plt_get_lib@@Base+0x46c>
  4033cc:	add    rbp,0x8
  4033d0:	xor    r14d,r14d
  4033d3:	mov    rbx,QWORD PTR [rsp]
  4033d7:	or     rbx,r15
  4033da:	shr    rbx,0x20
  4033de:	jmp    4033f7 <plt_get_lib@@Base+0x427>
  4033e0:	mov    rax,QWORD PTR [rsp]
  4033e4:	xor    edx,edx
  4033e6:	div    r15
  4033e9:	mov    r8,r13
  4033ec:	mov    r9,r12
  4033ef:	add    rbp,r15
  4033f2:	cmp    r14,rax
  4033f5:	jae    40343c <plt_get_lib@@Base+0x46c>
  4033f7:	mov    eax,DWORD PTR [rbp+0x4]
  4033fa:	lea    rax,[rax+rax*2]
  4033fe:	mov    r13,r8
  403401:	mov    edi,DWORD PTR [r8+rax*8]
  403405:	mov    r12,r9
  403408:	add    rdi,r9
  40340b:	mov    rsi,QWORD PTR [rsp+0x10]
  403410:	call   4020d0 <strcmp@plt>
  403415:	test   eax,eax
  403417:	je     40342c <plt_get_lib@@Base+0x45c>
  403419:	inc    r14
  40341c:	test   rbx,rbx
  40341f:	jne    4033e0 <plt_get_lib@@Base+0x410>
  403421:	mov    rax,QWORD PTR [rsp]
  403425:	xor    edx,edx
  403427:	div    r15d
  40342a:	jmp    4033e9 <plt_get_lib@@Base+0x419>
  40342c:	mov    rax,QWORD PTR [rbp-0x8]
  403430:	test   rax,rax
  403433:	je     40343c <plt_get_lib@@Base+0x46c>
  403435:	add    rax,QWORD PTR [rsp+0x8]
  40343a:	jmp    40343e <plt_get_lib@@Base+0x46e>
  40343c:	xor    eax,eax
  40343e:	add    rsp,0x18
  403442:	pop    rbx
  403443:	pop    r12
  403445:	pop    r13
  403447:	pop    r14
  403449:	pop    r15
  40344b:	pop    rbp
  40344c:	ret    
  40344d:	nop    DWORD PTR [rax]

0000000000403450 <plt_get_offsets@@Base>:
  403450:	push   r14
  403452:	push   rbx
  403453:	push   rax
  403454:	mov    r14,rdx
  403457:	call   403220 <plt_get_lib@@Base+0x250>
  40345c:	test   rax,rax
  40345f:	je     403482 <plt_get_offsets@@Base+0x32>
  403461:	mov    rbx,rax
  403464:	mov    edi,0x10
  403469:	call   404070 <mmk_malloc@@Base>
  40346e:	mov    QWORD PTR [r14],0x1
  403475:	mov    QWORD PTR [rax],rbx
  403478:	mov    QWORD PTR [rax+0x8],0x0
  403480:	jmp    403484 <plt_get_offsets@@Base+0x34>
  403482:	xor    eax,eax
  403484:	add    rsp,0x8
  403488:	pop    rbx
  403489:	pop    r14
  40348b:	ret    
  40348c:	nop    DWORD PTR [rax+0x0]

0000000000403490 <plt_set_offsets@@Base>:
  403490:	test   rsi,rsi
  403493:	je     403538 <plt_set_offsets@@Base+0xa8>
  403499:	mov    r8d,esi
  40349c:	and    r8d,0x1
  4034a0:	cmp    rsi,0x1
  4034a4:	jne    4034ab <plt_set_offsets@@Base+0x1b>
  4034a6:	xor    r10d,r10d
  4034a9:	jmp    40350a <plt_set_offsets@@Base+0x7a>
  4034ab:	sub    rsi,r8
  4034ae:	lea    rcx,[rdi+0x18]
  4034b2:	xor    r10d,r10d
  4034b5:	cmp    QWORD PTR [rcx-0x10],0x0
  4034ba:	jne    4034e1 <plt_set_offsets@@Base+0x51>
  4034bc:	jmp    4034f0 <plt_set_offsets@@Base+0x60>
  4034be:	xchg   ax,ax
  4034c0:	mov    r9,QWORD PTR [rcx-0x8]
  4034c4:	mov    rax,QWORD PTR [r9]
  4034c7:	mov    QWORD PTR [rcx],rax
  4034ca:	mov    QWORD PTR [r9],rdx
  4034cd:	add    r10,0x2
  4034d1:	add    rcx,0x20
  4034d5:	cmp    rsi,r10
  4034d8:	je     40350a <plt_set_offsets@@Base+0x7a>
  4034da:	cmp    QWORD PTR [rcx-0x10],0x0
  4034df:	je     4034f0 <plt_set_offsets@@Base+0x60>
  4034e1:	mov    r9,QWORD PTR [rcx-0x18]
  4034e5:	jmp    4034fb <plt_set_offsets@@Base+0x6b>
  4034e7:	nop    WORD PTR [rax+rax*1+0x0]
  4034f0:	mov    r9,QWORD PTR [rcx-0x18]
  4034f4:	mov    rax,QWORD PTR [r9]
  4034f7:	mov    QWORD PTR [rcx-0x10],rax
  4034fb:	mov    QWORD PTR [r9],rdx
  4034fe:	cmp    QWORD PTR [rcx],0x0
  403502:	je     4034c0 <plt_set_offsets@@Base+0x30>
  403504:	mov    r9,QWORD PTR [rcx-0x8]
  403508:	jmp    4034ca <plt_set_offsets@@Base+0x3a>
  40350a:	test   r8,r8
  40350d:	je     403538 <plt_set_offsets@@Base+0xa8>
  40350f:	shl    r10,0x4
  403513:	lea    rcx,[rdi+r10*1]
  403517:	cmp    QWORD PTR [rdi+r10*1+0x8],0x0
  40351d:	je     403524 <plt_set_offsets@@Base+0x94>
  40351f:	mov    rax,QWORD PTR [rcx]
  403522:	jmp    403535 <plt_set_offsets@@Base+0xa5>
  403524:	lea    rsi,[rdi+r10*1]
  403528:	add    rsi,0x8
  40352c:	mov    rax,QWORD PTR [rcx]
  40352f:	mov    rcx,QWORD PTR [rax]
  403532:	mov    QWORD PTR [rsi],rcx
  403535:	mov    QWORD PTR [rax],rdx
  403538:	ret    
  403539:	nop    DWORD PTR [rax+0x0]

0000000000403540 <plt_reset_offsets@@Base>:
  403540:	test   rsi,rsi
  403543:	je     403603 <plt_reset_offsets@@Base+0xc3>
  403549:	lea    rcx,[rsi-0x1]
  40354d:	mov    r9d,esi
  403550:	and    r9d,0x7
  403554:	cmp    rcx,0x7
  403558:	jae    403566 <plt_reset_offsets@@Base+0x26>
  40355a:	xor    ecx,ecx
  40355c:	test   r9,r9
  40355f:	jne    4035d9 <plt_reset_offsets@@Base+0x99>
  403561:	jmp    403603 <plt_reset_offsets@@Base+0xc3>
  403566:	sub    rsi,r9
  403569:	lea    rdx,[rdi+0x78]
  40356d:	xor    ecx,ecx
  40356f:	nop
  403570:	mov    r8,QWORD PTR [rdx-0x78]
  403574:	mov    rax,QWORD PTR [rdx-0x70]
  403578:	mov    QWORD PTR [r8],rax
  40357b:	mov    r8,QWORD PTR [rdx-0x68]
  40357f:	mov    rax,QWORD PTR [rdx-0x60]
  403583:	mov    QWORD PTR [r8],rax
  403586:	mov    r8,QWORD PTR [rdx-0x58]
  40358a:	mov    rax,QWORD PTR [rdx-0x50]
  40358e:	mov    QWORD PTR [r8],rax
  403591:	mov    r8,QWORD PTR [rdx-0x48]
  403595:	mov    rax,QWORD PTR [rdx-0x40]
  403599:	mov    QWORD PTR [r8],rax
  40359c:	mov    r8,QWORD PTR [rdx-0x38]
  4035a0:	mov    rax,QWORD PTR [rdx-0x30]
  4035a4:	mov    QWORD PTR [r8],rax
  4035a7:	mov    r8,QWORD PTR [rdx-0x28]
  4035ab:	mov    rax,QWORD PTR [rdx-0x20]
  4035af:	mov    QWORD PTR [r8],rax
  4035b2:	mov    r8,QWORD PTR [rdx-0x18]
  4035b6:	mov    rax,QWORD PTR [rdx-0x10]
  4035ba:	mov    QWORD PTR [r8],rax
  4035bd:	mov    r8,QWORD PTR [rdx-0x8]
  4035c1:	mov    rax,QWORD PTR [rdx]
  4035c4:	mov    QWORD PTR [r8],rax
  4035c7:	add    rcx,0x8
  4035cb:	sub    rdx,0xffffffffffffff80
  4035cf:	cmp    rsi,rcx
  4035d2:	jne    403570 <plt_reset_offsets@@Base+0x30>
  4035d4:	test   r9,r9
  4035d7:	je     403603 <plt_reset_offsets@@Base+0xc3>
  4035d9:	shl    rcx,0x4
  4035dd:	add    rcx,rdi
  4035e0:	add    rcx,0x8
  4035e4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4035ee:	xchg   ax,ax
  4035f0:	mov    rdx,QWORD PTR [rcx-0x8]
  4035f4:	mov    rsi,QWORD PTR [rcx]
  4035f7:	mov    QWORD PTR [rdx],rsi
  4035fa:	add    rcx,0x10
  4035fe:	dec    r9
  403601:	jne    4035f0 <plt_reset_offsets@@Base+0xb0>
  403603:	ret    
  403604:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40360e:	xchg   ax,ax

0000000000403610 <plt_get_real_fn@@Base>:
  403610:	push   r15
  403612:	push   r14
  403614:	push   rbx
  403615:	mov    rbx,QWORD PTR [rdi+0x8]
  403619:	test   rbx,rbx
  40361c:	je     40364b <plt_get_real_fn@@Base+0x3b>
  40361e:	mov    r15,rsi
  403621:	xor    r14d,r14d
  403624:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40362e:	xchg   ax,ax
  403630:	mov    rdi,rbx
  403633:	mov    rsi,r15
  403636:	call   403220 <plt_get_lib@@Base+0x250>
  40363b:	test   rax,rax
  40363e:	jne    403650 <plt_get_real_fn@@Base+0x40>
  403640:	mov    rbx,QWORD PTR [rbx+0x18]
  403644:	test   rbx,rbx
  403647:	jne    403630 <plt_get_real_fn@@Base+0x20>
  403649:	jmp    403653 <plt_get_real_fn@@Base+0x43>
  40364b:	xor    r14d,r14d
  40364e:	jmp    403653 <plt_get_real_fn@@Base+0x43>
  403650:	mov    r14,QWORD PTR [rax]
  403653:	mov    rax,r14
  403656:	pop    rbx
  403657:	pop    r14
  403659:	pop    r15
  40365b:	ret    
  40365c:	nop    DWORD PTR [rax+0x0]

0000000000403660 <mmk_stub_context@@Base>:
  403660:	test   rdi,rdi
  403663:	je     40366a <mmk_stub_context@@Base+0xa>
  403665:	mov    rax,QWORD PTR [rdi+0x18]
  403669:	ret    
  40366a:	xor    eax,eax
  40366c:	ret    
  40366d:	nop    DWORD PTR [rax]

0000000000403670 <mmk_stub_create_static@@Base>:
  403670:	push   rbp
  403671:	push   r15
  403673:	push   r14
  403675:	push   r13
  403677:	push   r12
  403679:	push   rbx
  40367a:	push   rax
  40367b:	mov    r15,rcx
  40367e:	mov    r14,rdx
  403681:	mov    rbx,rsi
  403684:	mov    r12,rdi
  403687:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  403693:	mov    BYTE PTR [rax-0x20],0x0
  40369a:	mov    QWORD PTR [rax-0x18],0x0
  4036a5:	mov    rdi,rbx
  4036a8:	call   404020 <mmk_strlen@@Base>
  4036ad:	lea    rdi,[rax+0x1]
  4036b1:	call   404070 <mmk_malloc@@Base>
  4036b6:	test   rax,rax
  4036b9:	je     4036e6 <mmk_stub_create_static@@Base+0x76>
  4036bb:	mov    r13,rax
  4036be:	mov    rdi,rax
  4036c1:	mov    rsi,rbx
  4036c4:	call   403fb0 <mmk_strcpy@@Base>
  4036c9:	mov    rdi,r13
  4036cc:	mov    esi,0x40
  4036d1:	call   403f80 <mmk_strchr@@Base>
  4036d6:	test   rax,rax
  4036d9:	je     4036f0 <mmk_stub_create_static@@Base+0x80>
  4036db:	mov    rbx,rax
  4036de:	mov    BYTE PTR [rax],0x0
  4036e1:	inc    rbx
  4036e4:	jmp    4036f2 <mmk_stub_create_static@@Base+0x82>
  4036e6:	mov    eax,0xfffffff4
  4036eb:	jmp    4037a6 <mmk_stub_create_static@@Base+0x136>
  4036f0:	xor    ebx,ebx
  4036f2:	call   402c00 <mmk_plt_ctx@@Base>
  4036f7:	mov    rdi,rax
  4036fa:	mov    rsi,rbx
  4036fd:	call   402fd0 <plt_get_lib@@Base>
  403702:	test   rax,rax
  403705:	je     4037a1 <mmk_stub_create_static@@Base+0x131>
  40370b:	mov    QWORD PTR [rsp],0x0
  403713:	mov    rdx,rsp
  403716:	mov    rdi,rax
  403719:	mov    rsi,r13
  40371c:	call   403450 <plt_get_offsets@@Base>
  403721:	mov    rbp,rax
  403724:	mov    eax,0xfffffffe
  403729:	test   rbp,rbp
  40372c:	je     4037a6 <mmk_stub_create_static@@Base+0x136>
  40372e:	mov    rcx,QWORD PTR [rsp]
  403732:	test   rcx,rcx
  403735:	je     4037a6 <mmk_stub_create_static@@Base+0x136>
  403737:	lea    rax,[rip+0x82]        # 4037c0 <mmk_ctx_asked@@Base>
  40373e:	mov    QWORD PTR [r12],rax
  403742:	lea    rax,[rip+0x97]        # 4037e0 <mmk_set_ctx@@Base>
  403749:	mov    QWORD PTR [r12+0x8],rax
  40374e:	lea    rax,[rip+0xab]        # 403800 <mmk_ctx@@Base>
  403755:	mov    QWORD PTR [r12+0x10],rax
  40375a:	mov    QWORD PTR [r12+0x18],r15
  40375f:	mov    QWORD PTR [r12+0x20],r13
  403764:	mov    QWORD PTR [r12+0x28],rbx
  403769:	mov    QWORD PTR [r12+0x30],rbp
  40376e:	mov    QWORD PTR [r12+0x38],rcx
  403773:	vxorps xmm0,xmm0,xmm0
  403777:	vmovups XMMWORD PTR [r12+0x40],xmm0
  40377e:	mov    rdi,r12
  403781:	mov    rsi,r14
  403784:	call   403910 <create_trampoline@@Base>
  403789:	mov    QWORD PTR [r12+0x40],rax
  40378e:	mov    rsi,QWORD PTR [rsp]
  403792:	mov    rdi,rbp
  403795:	mov    rdx,rax
  403798:	call   403490 <plt_set_offsets@@Base>
  40379d:	xor    eax,eax
  40379f:	jmp    4037a6 <mmk_stub_create_static@@Base+0x136>
  4037a1:	mov    eax,0xfffffffe
  4037a6:	add    rsp,0x8
  4037aa:	pop    rbx
  4037ab:	pop    r12
  4037ad:	pop    r13
  4037af:	pop    r14
  4037b1:	pop    r15
  4037b3:	pop    rbp
  4037b4:	ret    
  4037b5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4037bf:	nop

00000000004037c0 <mmk_ctx_asked@@Base>:
  4037c0:	push   rax
  4037c1:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  4037cd:	movzx  ecx,BYTE PTR [rax-0x20]
  4037d4:	mov    BYTE PTR [rax-0x20],0x0
  4037db:	mov    eax,ecx
  4037dd:	pop    rcx
  4037de:	ret    
  4037df:	nop

00000000004037e0 <mmk_set_ctx@@Base>:
  4037e0:	push   rbx
  4037e1:	mov    rbx,rdi
  4037e4:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  4037f0:	mov    QWORD PTR [rax-0x18],rbx
  4037f7:	pop    rbx
  4037f8:	ret    
  4037f9:	nop    DWORD PTR [rax+0x0]

0000000000403800 <mmk_ctx@@Base>:
  403800:	push   rax
  403801:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  40380d:	mov    rax,QWORD PTR [rax-0x18]
  403814:	pop    rcx
  403815:	ret    
  403816:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000403820 <mmk_stub_create@@Base>:
  403820:	push   rbp
  403821:	push   r15
  403823:	push   r14
  403825:	push   rbx
  403826:	push   rax
  403827:	mov    r14,rdx
  40382a:	mov    r15,rsi
  40382d:	mov    rbp,rdi
  403830:	call   402ba0 <mmk_init@@Base>
  403835:	mov    edi,0x50
  40383a:	call   404070 <mmk_malloc@@Base>
  40383f:	mov    rbx,rax
  403842:	mov    rdi,rax
  403845:	mov    rsi,rbp
  403848:	mov    rdx,r15
  40384b:	mov    rcx,r14
  40384e:	call   403670 <mmk_stub_create_static@@Base>
  403853:	test   eax,eax
  403855:	jns    40386a <mmk_stub_create@@Base+0x4a>
  403857:	mov    ebp,eax
  403859:	mov    rdi,rbx
  40385c:	call   404090 <mmk_free@@Base>
  403861:	call   402050 <__errno_location@plt>
  403866:	mov    DWORD PTR [rax],ebp
  403868:	xor    ebx,ebx
  40386a:	mov    rax,rbx
  40386d:	add    rsp,0x8
  403871:	pop    rbx
  403872:	pop    r14
  403874:	pop    r15
  403876:	pop    rbp
  403877:	ret    
  403878:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403880 <mmk_stub_destroy_static@@Base>:
  403880:	push   rbx
  403881:	mov    rbx,rdi
  403884:	mov    rdi,QWORD PTR [rdi+0x30]
  403888:	mov    rsi,QWORD PTR [rbx+0x38]
  40388c:	call   403540 <plt_reset_offsets@@Base>
  403891:	mov    rdi,QWORD PTR [rbx+0x30]
  403895:	call   404090 <mmk_free@@Base>
  40389a:	mov    rdi,QWORD PTR [rbx+0x40]
  40389e:	call   403a00 <destroy_trampoline@@Base>
  4038a3:	mov    rdi,QWORD PTR [rbx+0x20]
  4038a7:	pop    rbx
  4038a8:	jmp    404090 <mmk_free@@Base>
  4038ad:	nop    DWORD PTR [rax]

00000000004038b0 <mmk_stub_destroy@@Base>:
  4038b0:	push   rbx
  4038b1:	mov    rbx,rdi
  4038b4:	mov    rdi,QWORD PTR [rdi+0x30]
  4038b8:	mov    rsi,QWORD PTR [rbx+0x38]
  4038bc:	call   403540 <plt_reset_offsets@@Base>
  4038c1:	mov    rdi,QWORD PTR [rbx+0x30]
  4038c5:	call   404090 <mmk_free@@Base>
  4038ca:	mov    rdi,QWORD PTR [rbx+0x40]
  4038ce:	call   403a00 <destroy_trampoline@@Base>
  4038d3:	mov    rdi,QWORD PTR [rbx+0x20]
  4038d7:	call   404090 <mmk_free@@Base>
  4038dc:	mov    rdi,rbx
  4038df:	pop    rbx
  4038e0:	jmp    404090 <mmk_free@@Base>
  4038e5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4038ef:	nop

00000000004038f0 <mmk_ask_ctx@@Base>:
  4038f0:	push   rbx
  4038f1:	mov    rbx,rdi
  4038f4:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  403900:	mov    BYTE PTR [rax-0x20],0x1
  403907:	mov    rax,rbx
  40390a:	pop    rbx
  40390b:	jmp    rax
  40390d:	nop    DWORD PTR [rax]

0000000000403910 <create_trampoline@@Base>:
  403910:	push   r15
  403912:	push   r14
  403914:	push   r12
  403916:	push   rbx
  403917:	push   rax
  403918:	lea    r12,[rip+0x9c1]        # 4042e0 <mmk_trampoline_end@@Base>
  40391f:	mov    rax,r12
  403922:	sub    rax,QWORD PTR [rip+0x46af]        # 407fd8 <mmk_trampoline@@Base+0x3dd4>
  403929:	cmp    rax,0x1000
  40392f:	jae    4039a6 <create_trampoline@@Base+0x96>
  403931:	mov    r14,rsi
  403934:	mov    r15,rdi
  403937:	mov    esi,0x1000
  40393c:	mov    edi,0x0
  403941:	mov    edx,0x7
  403946:	mov    ecx,0x22
  40394b:	mov    r8d,0xffffffff
  403951:	xor    r9d,r9d
  403954:	call   402080 <mmap@plt>
  403959:	cmp    rax,0xffffffffffffffff
  40395d:	je     4039cc <create_trampoline@@Base+0xbc>
  40395f:	mov    rbx,rax
  403962:	mov    QWORD PTR [rax],r15
  403965:	mov    QWORD PTR [rax+0x8],r14
  403969:	mov    r14,rax
  40396c:	add    r14,0x10
  403970:	lea    rsi,[rip+0x88d]        # 404204 <mmk_trampoline@@Base>
  403977:	sub    r12,rsi
  40397a:	mov    rdi,r14
  40397d:	mov    rdx,r12
  403980:	call   4020f0 <memcpy@plt>
  403985:	mov    esi,0x1000
  40398a:	mov    rdi,rbx
  40398d:	mov    edx,0x5
  403992:	call   402130 <mprotect@plt>
  403997:	mov    rax,r14
  40399a:	add    rsp,0x8
  40399e:	pop    rbx
  40399f:	pop    r12
  4039a1:	pop    r14
  4039a3:	pop    r15
  4039a5:	ret    
  4039a6:	mov    rax,QWORD PTR [rip+0x464b]        # 407ff8 <stderr@GLIBC_2.2.5>
  4039ad:	mov    rdi,QWORD PTR [rax]
  4039b0:	lea    rsi,[rip+0x1665]        # 40501c <_IO_stdin_used@@Base+0x1c>
  4039b7:	lea    rdx,[rip+0x1898]        # 405256 <_IO_stdin_used@@Base+0x256>
  4039be:	lea    r8,[rip+0x18e9]        # 4052ae <_IO_stdin_used@@Base+0x2ae>
  4039c5:	mov    ecx,0x2d
  4039ca:	jmp    4039f0 <create_trampoline@@Base+0xe0>
  4039cc:	mov    rax,QWORD PTR [rip+0x4625]        # 407ff8 <stderr@GLIBC_2.2.5>
  4039d3:	mov    rdi,QWORD PTR [rax]
  4039d6:	lea    rsi,[rip+0x163f]        # 40501c <_IO_stdin_used@@Base+0x1c>
  4039dd:	lea    rdx,[rip+0x1872]        # 405256 <_IO_stdin_used@@Base+0x256>
  4039e4:	lea    r8,[rip+0x18dd]        # 4052c8 <_IO_stdin_used@@Base+0x2c8>
  4039eb:	mov    ecx,0x45
  4039f0:	xor    eax,eax
  4039f2:	call   4020e0 <fprintf@plt>
  4039f7:	call   402040 <abort@plt>
  4039fc:	nop    DWORD PTR [rax+0x0]

0000000000403a00 <destroy_trampoline@@Base>:
  403a00:	add    rdi,0xfffffffffffffff0
  403a04:	mov    esi,0x1000
  403a09:	jmp    402110 <munmap@plt>
  403a0e:	xchg   ax,ax

0000000000403a10 <mmk_verify_set_times@@Base>:
  403a10:	push   rbx
  403a11:	mov    rbx,rdi
  403a14:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  403a20:	mov    QWORD PTR [rax-0x10],rbx
  403a27:	pop    rbx
  403a28:	ret    
  403a29:	nop    DWORD PTR [rax+0x0]

0000000000403a30 <mmk_verify_times@@Base>:
  403a30:	push   rbx
  403a31:	mov    rbx,rdi
  403a34:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  403a40:	mov    rdi,QWORD PTR [rax-0x10]
  403a47:	cmp    DWORD PTR [rbx+0x4],0x0
  403a4b:	je     403a57 <mmk_verify_times@@Base+0x27>
  403a4d:	xor    eax,eax
  403a4f:	test   rdi,rdi
  403a52:	sete   al
  403a55:	pop    rbx
  403a56:	ret    
  403a57:	mov    rcx,QWORD PTR [rbx+0x8]
  403a5b:	mov    rax,QWORD PTR [rbx+0x10]
  403a5f:	mov    rdx,rcx
  403a62:	or     rdx,rax
  403a65:	je     403a81 <mmk_verify_times@@Base+0x51>
  403a67:	test   rax,rax
  403a6a:	cmove  rax,rdi
  403a6e:	cmp    rdi,rcx
  403a71:	setae  cl
  403a74:	cmp    rdi,rax
  403a77:	setbe  al
  403a7a:	and    al,cl
  403a7c:	movzx  eax,al
  403a7f:	pop    rbx
  403a80:	ret    
  403a81:	mov    rax,QWORD PTR [rbx+0x20]
  403a85:	test   rax,rax
  403a88:	je     403a8d <mmk_verify_times@@Base+0x5d>
  403a8a:	pop    rbx
  403a8b:	jmp    rax
  403a8d:	xor    eax,eax
  403a8f:	cmp    QWORD PTR [rbx+0x18],rdi
  403a93:	jmp    403a52 <mmk_verify_times@@Base+0x22>
  403a95:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403a9f:	nop

0000000000403aa0 <mmk_verify_register_call@@Base>:
  403aa0:	push   rbp
  403aa1:	push   r15
  403aa3:	push   r14
  403aa5:	push   r13
  403aa7:	push   r12
  403aa9:	push   rbx
  403aaa:	sub    rsp,0x18
  403aae:	mov    r12,rsi
  403ab1:	mov    QWORD PTR [rsp+0x10],rdi
  403ab6:	mov    QWORD PTR [rsp+0x8],rsi
  403abb:	call   403800 <mmk_ctx@@Base>
  403ac0:	mov    rdi,rax
  403ac3:	call   403660 <mmk_stub_context@@Base>
  403ac8:	mov    r15,rax
  403acb:	mov    r13,rax
  403ace:	cmp    QWORD PTR [rax+0x10],0x0
  403ad3:	jne    403af4 <mmk_verify_register_call@@Base+0x54>
  403ad5:	mov    edi,0x1000
  403ada:	call   404070 <mmk_malloc@@Base>
  403adf:	mov    QWORD PTR [r13+0x10],rax
  403ae3:	test   rax,rax
  403ae6:	je     403c00 <mmk_verify_register_call@@Base+0x160>
  403aec:	mov    QWORD PTR [r13+0x20],0x1000
  403af4:	mov    rdi,r13
  403af7:	call   402f50 <mmk_mock_params_begin@@Base>
  403afc:	test   rax,rax
  403aff:	je     403b4a <mmk_verify_register_call@@Base+0xaa>
  403b01:	mov    rbx,rax
  403b04:	mov    rax,QWORD PTR [rsp+0x10]
  403b09:	lea    rbp,[rax+0x8]
  403b0d:	lea    r14,[r12-0x8]
  403b12:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403b1c:	nop    DWORD PTR [rax+0x0]
  403b20:	lea    rdi,[rbx+0x8]
  403b24:	mov    rsi,rbp
  403b27:	mov    rdx,r14
  403b2a:	call   403c60 <mmk_memcmp@@Base>
  403b2f:	test   eax,eax
  403b31:	je     403be0 <mmk_verify_register_call@@Base+0x140>
  403b37:	mov    rdi,r13
  403b3a:	mov    rsi,rbx
  403b3d:	call   402f70 <mmk_mock_params_next@@Base>
  403b42:	mov    rbx,rax
  403b45:	test   rax,rax
  403b48:	jne    403b20 <mmk_verify_register_call@@Base+0x80>
  403b4a:	add    r15,0x18
  403b4e:	mov    rdi,QWORD PTR [r13+0x18]
  403b52:	mov    rsi,QWORD PTR [r13+0x20]
  403b56:	lea    rax,[rdi+r12*1]
  403b5a:	add    rax,0x8
  403b5e:	cmp    rax,rsi
  403b61:	jae    403b70 <mmk_verify_register_call@@Base+0xd0>
  403b63:	mov    rax,QWORD PTR [r13+0x10]
  403b67:	jmp    403b99 <mmk_verify_register_call@@Base+0xf9>
  403b69:	nop    DWORD PTR [rax+0x0]
  403b70:	add    rsi,0x1000
  403b77:	cmp    rax,rsi
  403b7a:	jae    403b70 <mmk_verify_register_call@@Base+0xd0>
  403b7c:	mov    QWORD PTR [r13+0x20],rsi
  403b80:	mov    rdi,QWORD PTR [r13+0x10]
  403b84:	call   404080 <mmk_realloc@@Base>
  403b89:	mov    QWORD PTR [r13+0x10],rax
  403b8d:	test   rax,rax
  403b90:	je     403c26 <mmk_verify_register_call@@Base+0x186>
  403b96:	mov    rdi,QWORD PTR [r15]
  403b99:	add    rdi,rax
  403b9c:	lea    rsi,[rsp+0x8]
  403ba1:	mov    edx,0x8
  403ba6:	call   403ca0 <mmk_memcpy@@Base>
  403bab:	mov    rax,QWORD PTR [r13+0x10]
  403baf:	mov    rcx,QWORD PTR [r13+0x18]
  403bb3:	lea    rdi,[rax+rcx*1]
  403bb7:	add    rdi,0x8
  403bbb:	mov    rdx,QWORD PTR [rsp+0x8]
  403bc0:	mov    rsi,QWORD PTR [rsp+0x10]
  403bc5:	call   403ca0 <mmk_memcpy@@Base>
  403bca:	mov    QWORD PTR [rax],0x1
  403bd1:	mov    rax,QWORD PTR [rsp+0x8]
  403bd6:	add    rax,0x8
  403bda:	mov    rcx,QWORD PTR [r13+0x18]
  403bde:	jmp    403beb <mmk_verify_register_call@@Base+0x14b>
  403be0:	mov    rax,QWORD PTR [rbx]
  403be3:	mov    ecx,0x1
  403be8:	mov    r15,rbx
  403beb:	add    rcx,rax
  403bee:	mov    QWORD PTR [r15],rcx
  403bf1:	add    rsp,0x18
  403bf5:	pop    rbx
  403bf6:	pop    r12
  403bf8:	pop    r13
  403bfa:	pop    r14
  403bfc:	pop    r15
  403bfe:	pop    rbp
  403bff:	ret    
  403c00:	mov    rax,QWORD PTR [rip+0x43f1]        # 407ff8 <stderr@GLIBC_2.2.5>
  403c07:	mov    rdi,QWORD PTR [rax]
  403c0a:	lea    rsi,[rip+0x140b]        # 40501c <_IO_stdin_used@@Base+0x1c>
  403c11:	lea    rdx,[rip+0x16c2]        # 4052da <_IO_stdin_used@@Base+0x2da>
  403c18:	lea    r8,[rip+0x170f]        # 40532e <_IO_stdin_used@@Base+0x32e>
  403c1f:	mov    ecx,0x4f
  403c24:	jmp    403c4a <mmk_verify_register_call@@Base+0x1aa>
  403c26:	mov    rax,QWORD PTR [rip+0x43cb]        # 407ff8 <stderr@GLIBC_2.2.5>
  403c2d:	mov    rdi,QWORD PTR [rax]
  403c30:	lea    rsi,[rip+0x13e5]        # 40501c <_IO_stdin_used@@Base+0x1c>
  403c37:	lea    rdx,[rip+0x169c]        # 4052da <_IO_stdin_used@@Base+0x2da>
  403c3e:	lea    r8,[rip+0x16e9]        # 40532e <_IO_stdin_used@@Base+0x32e>
  403c45:	mov    ecx,0x5b
  403c4a:	xor    eax,eax
  403c4c:	call   4020e0 <fprintf@plt>
  403c51:	call   402040 <abort@plt>
  403c56:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000403c60 <mmk_memcmp@@Base>:
  403c60:	test   rdx,rdx
  403c63:	je     403c81 <mmk_memcmp@@Base+0x21>
  403c65:	xor    eax,eax
  403c67:	nop    WORD PTR [rax+rax*1+0x0]
  403c70:	movzx  ecx,BYTE PTR [rsi+rax*1]
  403c74:	cmp    BYTE PTR [rdi+rax*1],cl
  403c77:	jne    403c84 <mmk_memcmp@@Base+0x24>
  403c79:	inc    rax
  403c7c:	cmp    rdx,rax
  403c7f:	jne    403c70 <mmk_memcmp@@Base+0x10>
  403c81:	xor    eax,eax
  403c83:	ret    
  403c84:	setge  al
  403c87:	movzx  eax,al
  403c8a:	lea    eax,[rax+rax*1]
  403c8d:	add    eax,0xffffffff
  403c90:	ret    
  403c91:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403c9b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403ca0 <mmk_memcpy@@Base>:
  403ca0:	mov    rax,rdi
  403ca3:	test   rdx,rdx
  403ca6:	je     403f1c <mmk_memcpy@@Base+0x27c>
  403cac:	cmp    rdx,0x7f
  403cb0:	jbe    403ccc <mmk_memcpy@@Base+0x2c>
  403cb2:	lea    rcx,[rsi+rdx*1]
  403cb6:	cmp    rcx,rax
  403cb9:	jbe    403d6c <mmk_memcpy@@Base+0xcc>
  403cbf:	lea    rcx,[rax+rdx*1]
  403cc3:	cmp    rcx,rsi
  403cc6:	jbe    403d6c <mmk_memcpy@@Base+0xcc>
  403ccc:	mov    r10,rax
  403ccf:	lea    r8,[rdx-0x1]
  403cd3:	mov    r9,rdx
  403cd6:	and    r9,0x7
  403cda:	je     403cf9 <mmk_memcpy@@Base+0x59>
  403cdc:	xor    edi,edi
  403cde:	xchg   ax,ax
  403ce0:	movzx  ecx,BYTE PTR [rsi+rdi*1]
  403ce4:	mov    BYTE PTR [r10+rdi*1],cl
  403ce8:	inc    rdi
  403ceb:	cmp    r9,rdi
  403cee:	jne    403ce0 <mmk_memcpy@@Base+0x40>
  403cf0:	add    r10,rdi
  403cf3:	add    rsi,rdi
  403cf6:	sub    rdx,rdi
  403cf9:	cmp    r8,0x7
  403cfd:	jb     403f1c <mmk_memcpy@@Base+0x27c>
  403d03:	xor    edi,edi
  403d05:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403d0f:	nop
  403d10:	movzx  ecx,BYTE PTR [rsi+rdi*1]
  403d14:	mov    BYTE PTR [r10+rdi*1],cl
  403d18:	movzx  ecx,BYTE PTR [rsi+rdi*1+0x1]
  403d1d:	mov    BYTE PTR [r10+rdi*1+0x1],cl
  403d22:	movzx  ecx,BYTE PTR [rsi+rdi*1+0x2]
  403d27:	mov    BYTE PTR [r10+rdi*1+0x2],cl
  403d2c:	movzx  ecx,BYTE PTR [rsi+rdi*1+0x3]
  403d31:	mov    BYTE PTR [r10+rdi*1+0x3],cl
  403d36:	movzx  ecx,BYTE PTR [rsi+rdi*1+0x4]
  403d3b:	mov    BYTE PTR [r10+rdi*1+0x4],cl
  403d40:	movzx  ecx,BYTE PTR [rsi+rdi*1+0x5]
  403d45:	mov    BYTE PTR [r10+rdi*1+0x5],cl
  403d4a:	movzx  ecx,BYTE PTR [rsi+rdi*1+0x6]
  403d4f:	mov    BYTE PTR [r10+rdi*1+0x6],cl
  403d54:	movzx  ecx,BYTE PTR [rsi+rdi*1+0x7]
  403d59:	mov    BYTE PTR [r10+rdi*1+0x7],cl
  403d5e:	add    rdi,0x8
  403d62:	cmp    rdx,rdi
  403d65:	jne    403d10 <mmk_memcpy@@Base+0x70>
  403d67:	jmp    403f1c <mmk_memcpy@@Base+0x27c>
  403d6c:	mov    r8,rdx
  403d6f:	and    r8,0xffffffffffffff80
  403d73:	lea    rcx,[r8-0x80]
  403d77:	mov    rdi,rcx
  403d7a:	shr    rdi,0x7
  403d7e:	inc    rdi
  403d81:	mov    r9d,edi
  403d84:	and    r9d,0x3
  403d88:	cmp    rcx,0x180
  403d8f:	jae    403da1 <mmk_memcpy@@Base+0x101>
  403d91:	xor    ecx,ecx
  403d93:	test   r9,r9
  403d96:	jne    403ecc <mmk_memcpy@@Base+0x22c>
  403d9c:	jmp    403f17 <mmk_memcpy@@Base+0x277>
  403da1:	sub    rdi,r9
  403da4:	xor    ecx,ecx
  403da6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403db0:	vmovups ymm0,YMMWORD PTR [rsi+rcx*1]
  403db5:	vmovups ymm1,YMMWORD PTR [rsi+rcx*1+0x20]
  403dbb:	vmovups ymm2,YMMWORD PTR [rsi+rcx*1+0x40]
  403dc1:	vmovups ymm3,YMMWORD PTR [rsi+rcx*1+0x60]
  403dc7:	vmovups YMMWORD PTR [rax+rcx*1],ymm0
  403dcc:	vmovups YMMWORD PTR [rax+rcx*1+0x20],ymm1
  403dd2:	vmovups YMMWORD PTR [rax+rcx*1+0x40],ymm2
  403dd8:	vmovups YMMWORD PTR [rax+rcx*1+0x60],ymm3
  403dde:	vmovups ymm0,YMMWORD PTR [rsi+rcx*1+0x80]
  403de7:	vmovups ymm1,YMMWORD PTR [rsi+rcx*1+0xa0]
  403df0:	vmovups ymm2,YMMWORD PTR [rsi+rcx*1+0xc0]
  403df9:	vmovups ymm3,YMMWORD PTR [rsi+rcx*1+0xe0]
  403e02:	vmovups YMMWORD PTR [rax+rcx*1+0x80],ymm0
  403e0b:	vmovups YMMWORD PTR [rax+rcx*1+0xa0],ymm1
  403e14:	vmovups YMMWORD PTR [rax+rcx*1+0xc0],ymm2
  403e1d:	vmovups YMMWORD PTR [rax+rcx*1+0xe0],ymm3
  403e26:	vmovups ymm0,YMMWORD PTR [rsi+rcx*1+0x100]
  403e2f:	vmovups ymm1,YMMWORD PTR [rsi+rcx*1+0x120]
  403e38:	vmovups ymm2,YMMWORD PTR [rsi+rcx*1+0x140]
  403e41:	vmovups ymm3,YMMWORD PTR [rsi+rcx*1+0x160]
  403e4a:	vmovups YMMWORD PTR [rax+rcx*1+0x100],ymm0
  403e53:	vmovups YMMWORD PTR [rax+rcx*1+0x120],ymm1
  403e5c:	vmovups YMMWORD PTR [rax+rcx*1+0x140],ymm2
  403e65:	vmovups YMMWORD PTR [rax+rcx*1+0x160],ymm3
  403e6e:	vmovups ymm0,YMMWORD PTR [rsi+rcx*1+0x180]
  403e77:	vmovups ymm1,YMMWORD PTR [rsi+rcx*1+0x1a0]
  403e80:	vmovups ymm2,YMMWORD PTR [rsi+rcx*1+0x1c0]
  403e89:	vmovups ymm3,YMMWORD PTR [rsi+rcx*1+0x1e0]
  403e92:	vmovups YMMWORD PTR [rax+rcx*1+0x180],ymm0
  403e9b:	vmovups YMMWORD PTR [rax+rcx*1+0x1a0],ymm1
  403ea4:	vmovups YMMWORD PTR [rax+rcx*1+0x1c0],ymm2
  403ead:	vmovups YMMWORD PTR [rax+rcx*1+0x1e0],ymm3
  403eb6:	add    rcx,0x200
  403ebd:	add    rdi,0xfffffffffffffffc
  403ec1:	jne    403db0 <mmk_memcpy@@Base+0x110>
  403ec7:	test   r9,r9
  403eca:	je     403f17 <mmk_memcpy@@Base+0x277>
  403ecc:	add    rcx,0x60
  403ed0:	neg    r9
  403ed3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403edd:	nop    DWORD PTR [rax]
  403ee0:	vmovups ymm0,YMMWORD PTR [rsi+rcx*1-0x60]
  403ee6:	vmovups ymm1,YMMWORD PTR [rsi+rcx*1-0x40]
  403eec:	vmovups ymm2,YMMWORD PTR [rsi+rcx*1-0x20]
  403ef2:	vmovups ymm3,YMMWORD PTR [rsi+rcx*1]
  403ef7:	vmovups YMMWORD PTR [rax+rcx*1-0x60],ymm0
  403efd:	vmovups YMMWORD PTR [rax+rcx*1-0x40],ymm1
  403f03:	vmovups YMMWORD PTR [rax+rcx*1-0x20],ymm2
  403f09:	vmovups YMMWORD PTR [rax+rcx*1],ymm3
  403f0e:	sub    rcx,0xffffffffffffff80
  403f12:	inc    r9
  403f15:	jne    403ee0 <mmk_memcpy@@Base+0x240>
  403f17:	cmp    r8,rdx
  403f1a:	jne    403f20 <mmk_memcpy@@Base+0x280>
  403f1c:	vzeroupper 
  403f1f:	ret    
  403f20:	lea    r10,[rax+r8*1]
  403f24:	add    rsi,r8
  403f27:	sub    rdx,r8
  403f2a:	jmp    403ccf <mmk_memcpy@@Base+0x2f>
  403f2f:	nop

0000000000403f30 <mmk_strneq@@Base>:
  403f30:	mov    al,BYTE PTR [rdi]
  403f32:	test   al,al
  403f34:	je     403f60 <mmk_strneq@@Base+0x30>
  403f36:	inc    rdi
  403f39:	nop    DWORD PTR [rax+0x0]
  403f40:	test   rdx,rdx
  403f43:	je     403f60 <mmk_strneq@@Base+0x30>
  403f45:	movzx  ecx,BYTE PTR [rsi]
  403f48:	test   cl,cl
  403f4a:	je     403f60 <mmk_strneq@@Base+0x30>
  403f4c:	cmp    al,cl
  403f4e:	jne    403f74 <mmk_strneq@@Base+0x44>
  403f50:	inc    rsi
  403f53:	dec    rdx
  403f56:	movzx  eax,BYTE PTR [rdi]
  403f59:	inc    rdi
  403f5c:	test   al,al
  403f5e:	jne    403f40 <mmk_strneq@@Base+0x10>
  403f60:	test   rdx,rdx
  403f63:	je     403f6e <mmk_strneq@@Base+0x3e>
  403f65:	xor    eax,eax
  403f67:	cmp    BYTE PTR [rsi],0x0
  403f6a:	sete   al
  403f6d:	ret    
  403f6e:	mov    eax,0x1
  403f73:	ret    
  403f74:	xor    eax,eax
  403f76:	ret    
  403f77:	nop    WORD PTR [rax+rax*1+0x0]

0000000000403f80 <mmk_strchr@@Base>:
  403f80:	mov    cl,BYTE PTR [rdi]
  403f82:	test   cl,cl
  403f84:	je     403fa2 <mmk_strchr@@Base+0x22>
  403f86:	mov    rax,rdi
  403f89:	nop    DWORD PTR [rax+0x0]
  403f90:	movsx  ecx,cl
  403f93:	cmp    ecx,esi
  403f95:	je     403fa4 <mmk_strchr@@Base+0x24>
  403f97:	movzx  ecx,BYTE PTR [rax+0x1]
  403f9b:	inc    rax
  403f9e:	test   cl,cl
  403fa0:	jne    403f90 <mmk_strchr@@Base+0x10>
  403fa2:	xor    eax,eax
  403fa4:	ret    
  403fa5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403faf:	nop

0000000000403fb0 <mmk_strcpy@@Base>:
  403fb0:	mov    rax,rdi
  403fb3:	mov    cl,BYTE PTR [rsi]
  403fb5:	test   cl,cl
  403fb7:	je     403fcf <mmk_strcpy@@Base+0x1f>
  403fb9:	inc    rsi
  403fbc:	nop    DWORD PTR [rax+0x0]
  403fc0:	mov    BYTE PTR [rax],cl
  403fc2:	inc    rax
  403fc5:	movzx  ecx,BYTE PTR [rsi]
  403fc8:	inc    rsi
  403fcb:	test   cl,cl
  403fcd:	jne    403fc0 <mmk_strcpy@@Base+0x10>
  403fcf:	mov    BYTE PTR [rax],0x0
  403fd2:	ret    
  403fd3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403fdd:	nop    DWORD PTR [rax]

0000000000403fe0 <mmk_strncpy@@Base>:
  403fe0:	mov    rax,rdi
  403fe3:	test   rdx,rdx
  403fe6:	je     40401b <mmk_strncpy@@Base+0x3b>
  403fe8:	mov    cl,BYTE PTR [rsi]
  403fea:	test   cl,cl
  403fec:	je     40401b <mmk_strncpy@@Base+0x3b>
  403fee:	dec    rdx
  403ff1:	xor    edi,edi
  403ff3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403ffd:	nop    DWORD PTR [rax]
  404000:	mov    BYTE PTR [rax+rdi*1],cl
  404003:	lea    r8,[rdi+0x1]
  404007:	cmp    rdx,rdi
  40400a:	je     404018 <mmk_strncpy@@Base+0x38>
  40400c:	movzx  ecx,BYTE PTR [rsi+rdi*1+0x1]
  404011:	mov    rdi,r8
  404014:	test   cl,cl
  404016:	jne    404000 <mmk_strncpy@@Base+0x20>
  404018:	add    rax,r8
  40401b:	mov    BYTE PTR [rax],0x0
  40401e:	ret    
  40401f:	nop

0000000000404020 <mmk_strlen@@Base>:
  404020:	cmp    BYTE PTR [rdi],0x0
  404023:	je     40403c <mmk_strlen@@Base+0x1c>
  404025:	xor    eax,eax
  404027:	nop    WORD PTR [rax+rax*1+0x0]
  404030:	cmp    BYTE PTR [rdi+rax*1+0x1],0x0
  404035:	lea    rax,[rax+0x1]
  404039:	jne    404030 <mmk_strlen@@Base+0x10>
  40403b:	ret    
  40403c:	xor    eax,eax
  40403e:	ret    
  40403f:	nop

0000000000404040 <mmk_isspace@@Base>:
  404040:	cmp    edi,0x20
  404043:	ja     40405d <mmk_isspace@@Base+0x1d>
  404045:	mov    eax,0x1
  40404a:	mov    ecx,edi
  40404c:	movabs rdx,0x100002200
  404056:	bt     rdx,rcx
  40405a:	jae    40405d <mmk_isspace@@Base+0x1d>
  40405c:	ret    
  40405d:	xor    eax,eax
  40405f:	cmp    edi,0xa
  404062:	sete   al
  404065:	ret    
  404066:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000404070 <mmk_malloc@@Base>:
  404070:	lea    rax,[rip+0x4081]        # 4080f8 <mmk_malloc_@@Base>
  404077:	jmp    QWORD PTR [rax]
  404079:	nop    DWORD PTR [rax+0x0]

0000000000404080 <mmk_realloc@@Base>:
  404080:	lea    rax,[rip+0x4061]        # 4080e8 <mmk_realloc_@@Base>
  404087:	mov    rax,QWORD PTR [rax]
  40408a:	jmp    rax
  40408c:	nop    DWORD PTR [rax+0x0]

0000000000404090 <mmk_free@@Base>:
  404090:	lea    rax,[rip+0x4059]        # 4080f0 <mmk_free_@@Base>
  404097:	jmp    QWORD PTR [rax]
  404099:	nop    DWORD PTR [rax+0x0]

00000000004040a0 <mmk_init_vital_functions@@Base>:
  4040a0:	push   rbx
  4040a1:	mov    rbx,rdi
  4040a4:	xor    edi,edi
  4040a6:	call   402150 <malloc@plt>
  4040ab:	mov    rdi,rax
  4040ae:	xor    esi,esi
  4040b0:	call   402100 <realloc@plt>
  4040b5:	mov    rdi,rax
  4040b8:	call   402030 <free@plt>
  4040bd:	lea    rsi,[rip+0x127a]        # 40533e <_IO_stdin_used@@Base+0x33e>
  4040c4:	mov    rdi,rbx
  4040c7:	call   403610 <plt_get_real_fn@@Base>
  4040cc:	lea    rcx,[rip+0x4025]        # 4080f8 <mmk_malloc_@@Base>
  4040d3:	mov    QWORD PTR [rcx],rax
  4040d6:	test   rax,rax
  4040d9:	je     404119 <mmk_init_vital_functions@@Base+0x79>
  4040db:	lea    rsi,[rip+0x12ed]        # 4053cf <_IO_stdin_used@@Base+0x3cf>
  4040e2:	mov    rdi,rbx
  4040e5:	call   403610 <plt_get_real_fn@@Base>
  4040ea:	lea    rcx,[rip+0x3ff7]        # 4080e8 <mmk_realloc_@@Base>
  4040f1:	mov    QWORD PTR [rcx],rax
  4040f4:	test   rax,rax
  4040f7:	je     40413f <mmk_init_vital_functions@@Base+0x9f>
  4040f9:	lea    rsi,[rip+0x130f]        # 40540f <_IO_stdin_used@@Base+0x40f>
  404100:	mov    rdi,rbx
  404103:	call   403610 <plt_get_real_fn@@Base>
  404108:	lea    rcx,[rip+0x3fe1]        # 4080f0 <mmk_free_@@Base>
  40410f:	mov    QWORD PTR [rcx],rax
  404112:	test   rax,rax
  404115:	je     404165 <mmk_init_vital_functions@@Base+0xc5>
  404117:	pop    rbx
  404118:	ret    
  404119:	mov    rax,QWORD PTR [rip+0x3ed8]        # 407ff8 <stderr@GLIBC_2.2.5>
  404120:	mov    rdi,QWORD PTR [rax]
  404123:	lea    rsi,[rip+0xef2]        # 40501c <_IO_stdin_used@@Base+0x1c>
  40412a:	lea    rdx,[rip+0x1214]        # 405345 <_IO_stdin_used@@Base+0x345>
  404131:	lea    r8,[rip+0x1261]        # 405399 <_IO_stdin_used@@Base+0x399>
  404138:	mov    ecx,0x58
  40413d:	jmp    404189 <mmk_init_vital_functions@@Base+0xe9>
  40413f:	mov    rax,QWORD PTR [rip+0x3eb2]        # 407ff8 <stderr@GLIBC_2.2.5>
  404146:	mov    rdi,QWORD PTR [rax]
  404149:	lea    rsi,[rip+0xecc]        # 40501c <_IO_stdin_used@@Base+0x1c>
  404150:	lea    rdx,[rip+0x11ee]        # 405345 <_IO_stdin_used@@Base+0x345>
  404157:	lea    r8,[rip+0x1279]        # 4053d7 <_IO_stdin_used@@Base+0x3d7>
  40415e:	mov    ecx,0x59
  404163:	jmp    404189 <mmk_init_vital_functions@@Base+0xe9>
  404165:	mov    rax,QWORD PTR [rip+0x3e8c]        # 407ff8 <stderr@GLIBC_2.2.5>
  40416c:	mov    rdi,QWORD PTR [rax]
  40416f:	lea    rsi,[rip+0xea6]        # 40501c <_IO_stdin_used@@Base+0x1c>
  404176:	lea    rdx,[rip+0x11c8]        # 405345 <_IO_stdin_used@@Base+0x345>
  40417d:	lea    r8,[rip+0x1290]        # 405414 <_IO_stdin_used@@Base+0x414>
  404184:	mov    ecx,0x5a
  404189:	xor    eax,eax
  40418b:	call   4020e0 <fprintf@plt>
  404190:	call   402040 <abort@plt>
  404195:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40419f:	nop

00000000004041a0 <mmk_when_init@@Base>:
  4041a0:	push   rbx
  4041a1:	mov    rbx,rdi
  4041a4:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  4041b0:	mov    QWORD PTR [rax-0x8],rbx
  4041b7:	pop    rbx
  4041b8:	ret    
  4041b9:	nop    DWORD PTR [rax+0x0]

00000000004041c0 <mmk_when_get_result@@Base>:
  4041c0:	push   rax
  4041c1:	data16 data16 data16 mov rax,QWORD PTR fs:0x0
  4041cd:	mov    rax,QWORD PTR [rax-0x8]
  4041d4:	pop    rcx
  4041d5:	ret    
  4041d6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004041e0 <mmk_when_impl@@Base>:
  4041e0:	push   r14
  4041e2:	push   rbx
  4041e3:	push   rax
  4041e4:	mov    rbx,rsi
  4041e7:	mov    r14,rdi
  4041ea:	call   402cd0 <mmk_matcher_ctx@@Base>
  4041ef:	mov    QWORD PTR [rbx],rax
  4041f2:	mov    rax,QWORD PTR [r14]
  4041f5:	mov    QWORD PTR [rbx+0x8],rax
  4041f9:	mov    QWORD PTR [r14],rbx
  4041fc:	add    rsp,0x8
  404200:	pop    rbx
  404201:	pop    r14
  404203:	ret    

0000000000404204 <mmk_trampoline@@Base>:
  404204:	call   404209 <mmk_trampoline@@Base+0x5>
  404209:	pop    rax
  40420a:	push   rax
  40420b:	mov    rax,QWORD PTR [rax-0x15]
  404212:	push   rdi
  404213:	push   rsi
  404214:	push   rdx
  404215:	push   rcx
  404216:	push   r8
  404218:	push   r9
  40421a:	sub    rsp,0x10
  40421e:	movdqu XMMWORD PTR [rsp],xmm0
  404223:	sub    rsp,0x10
  404227:	movdqu XMMWORD PTR [rsp],xmm1
  40422c:	sub    rsp,0x10
  404230:	movdqu XMMWORD PTR [rsp],xmm2
  404235:	sub    rsp,0x10
  404239:	movdqu XMMWORD PTR [rsp],xmm3
  40423e:	sub    rsp,0x10
  404242:	movdqu XMMWORD PTR [rsp],xmm4
  404247:	sub    rsp,0x10
  40424b:	movdqu XMMWORD PTR [rsp],xmm5
  404250:	sub    rsp,0x10
  404254:	movdqu XMMWORD PTR [rsp],xmm6
  404259:	sub    rsp,0x10
  40425d:	movdqu XMMWORD PTR [rsp],xmm7
  404262:	mov    rdi,rax
  404265:	push   rax
  404266:	mov    rax,QWORD PTR [rax+0x8]
  40426a:	call   rax
  40426c:	pop    rax
  40426d:	mov    rax,QWORD PTR [rax]
  404270:	call   rax
  404272:	movdqu xmm7,XMMWORD PTR [rsp]
  404277:	add    rsp,0x10
  40427b:	movdqu xmm6,XMMWORD PTR [rsp]
  404280:	add    rsp,0x10
  404284:	movdqu xmm5,XMMWORD PTR [rsp]
  404289:	add    rsp,0x10
  40428d:	movdqu xmm4,XMMWORD PTR [rsp]
  404292:	add    rsp,0x10
  404296:	movdqu xmm3,XMMWORD PTR [rsp]
  40429b:	add    rsp,0x10
  40429f:	movdqu xmm2,XMMWORD PTR [rsp]
  4042a4:	add    rsp,0x10
  4042a8:	movdqu xmm1,XMMWORD PTR [rsp]
  4042ad:	add    rsp,0x10
  4042b1:	movdqu xmm0,XMMWORD PTR [rsp]
  4042b6:	add    rsp,0x10
  4042ba:	pop    r9
  4042bc:	pop    r8
  4042be:	pop    rcx
  4042bf:	pop    rdx
  4042c0:	pop    rsi
  4042c1:	pop    rdi
  4042c2:	test   rax,rax
  4042c5:	jne    4042d1 <mmk_trampoline@@Base+0xcd>
  4042c7:	pop    rax
  4042c8:	mov    rax,QWORD PTR [rax-0xd]
  4042cf:	jmp    rax
  4042d1:	pop    rax
  4042d2:	mov    rax,QWORD PTR [rax-0x15]
  4042d9:	mov    rax,QWORD PTR [rax+0x10]
  4042dd:	call   rax
  4042df:	ret    

00000000004042e0 <mmk_trampoline_end@@Base>:
  4042e0:	nop
  4042e1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4042eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004042f0 <__libc_csu_init@@Base>:
  4042f0:	endbr64 
  4042f4:	push   r15
  4042f6:	lea    r15,[rip+0x3ab3]        # 407db0 <_IO_stdin_used@@Base+0x2db0>
  4042fd:	push   r14
  4042ff:	mov    r14,rdx
  404302:	push   r13
  404304:	mov    r13,rsi
  404307:	push   r12
  404309:	mov    r12d,edi
  40430c:	push   rbp
  40430d:	lea    rbp,[rip+0x3aa4]        # 407db8 <_IO_stdin_used@@Base+0x2db8>
  404314:	push   rbx
  404315:	sub    rbp,r15
  404318:	sub    rsp,0x8
  40431c:	call   402000 <free@plt-0x30>
  404321:	sar    rbp,0x3
  404325:	je     404346 <__libc_csu_init@@Base+0x56>
  404327:	xor    ebx,ebx
  404329:	nop    DWORD PTR [rax+0x0]
  404330:	mov    rdx,r14
  404333:	mov    rsi,r13
  404336:	mov    edi,r12d
  404339:	call   QWORD PTR [r15+rbx*8]
  40433d:	add    rbx,0x1
  404341:	cmp    rbp,rbx
  404344:	jne    404330 <__libc_csu_init@@Base+0x40>
  404346:	add    rsp,0x8
  40434a:	pop    rbx
  40434b:	pop    rbp
  40434c:	pop    r12
  40434e:	pop    r13
  404350:	pop    r14
  404352:	pop    r15
  404354:	ret    
  404355:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000404360 <__libc_csu_fini@@Base>:
  404360:	endbr64 
  404364:	ret    

Disassembly of section .fini:

0000000000404368 <.fini>:
  404368:	endbr64 
  40436c:	sub    rsp,0x8
  404370:	add    rsp,0x8
  404374:	ret    
