
../repos/prog2/1.4:     file format elf64-x86-64


Disassembly of section .init:

0000000000401000 <.init>:
  401000:	endbr64 
  401004:	sub    rsp,0x8
  401008:	mov    rax,QWORD PTR [rip+0x2fe9]        # 403ff8 <__gmon_start__>
  40100f:	test   rax,rax
  401012:	je     401016 <free@plt-0x9a>
  401014:	call   rax
  401016:	add    rsp,0x8
  40101a:	ret    

Disassembly of section .plt:

0000000000401020 <.plt>:
  401020:	push   QWORD PTR [rip+0x2fe2]        # 404008 <_IO_stdin_used@@Base+0x2008>
  401026:	bnd jmp QWORD PTR [rip+0x2fe3]        # 404010 <_IO_stdin_used@@Base+0x2010>
  40102d:	nop    DWORD PTR [rax]
  401030:	endbr64 
  401034:	push   0x0
  401039:	bnd jmp 401020 <free@plt-0x90>
  40103f:	nop
  401040:	endbr64 
  401044:	push   0x1
  401049:	bnd jmp 401020 <free@plt-0x90>
  40104f:	nop
  401050:	endbr64 
  401054:	push   0x2
  401059:	bnd jmp 401020 <free@plt-0x90>
  40105f:	nop
  401060:	endbr64 
  401064:	push   0x3
  401069:	bnd jmp 401020 <free@plt-0x90>
  40106f:	nop
  401070:	endbr64 
  401074:	push   0x4
  401079:	bnd jmp 401020 <free@plt-0x90>
  40107f:	nop
  401080:	endbr64 
  401084:	push   0x5
  401089:	bnd jmp 401020 <free@plt-0x90>
  40108f:	nop
  401090:	endbr64 
  401094:	push   0x6
  401099:	bnd jmp 401020 <free@plt-0x90>
  40109f:	nop
  4010a0:	endbr64 
  4010a4:	push   0x7
  4010a9:	bnd jmp 401020 <free@plt-0x90>
  4010af:	nop

Disassembly of section .plt.sec:

00000000004010b0 <free@plt>:
  4010b0:	endbr64 
  4010b4:	bnd jmp QWORD PTR [rip+0x2f5d]        # 404018 <free@GLIBC_2.2.5>
  4010bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004010c0 <fclose@plt>:
  4010c0:	endbr64 
  4010c4:	bnd jmp QWORD PTR [rip+0x2f55]        # 404020 <fclose@GLIBC_2.2.5>
  4010cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004010d0 <malloc@plt>:
  4010d0:	endbr64 
  4010d4:	bnd jmp QWORD PTR [rip+0x2f4d]        # 404028 <malloc@GLIBC_2.2.5>
  4010db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004010e0 <fseek@plt>:
  4010e0:	endbr64 
  4010e4:	bnd jmp QWORD PTR [rip+0x2f45]        # 404030 <fseek@GLIBC_2.2.5>
  4010eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004010f0 <__printf_chk@plt>:
  4010f0:	endbr64 
  4010f4:	bnd jmp QWORD PTR [rip+0x2f3d]        # 404038 <__printf_chk@GLIBC_2.3.4>
  4010fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401100 <fopen@plt>:
  401100:	endbr64 
  401104:	bnd jmp QWORD PTR [rip+0x2f35]        # 404040 <fopen@GLIBC_2.2.5>
  40110b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401110 <exit@plt>:
  401110:	endbr64 
  401114:	bnd jmp QWORD PTR [rip+0x2f2d]        # 404048 <exit@GLIBC_2.2.5>
  40111b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401120 <getc@plt>:
  401120:	endbr64 
  401124:	bnd jmp QWORD PTR [rip+0x2f25]        # 404050 <getc@GLIBC_2.2.5>
  40112b:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

0000000000401130 <main@@Base>:
  401130:	endbr64 
  401134:	push   r15
  401136:	lea    rdi,[rip+0x1019]        # 402156 <_IO_stdin_used@@Base+0x156>
  40113d:	lea    rsi,[rip+0x1010]        # 402154 <_IO_stdin_used@@Base+0x154>
  401144:	push   r14
  401146:	push   r13
  401148:	push   r12
  40114a:	push   rbp
  40114b:	push   rbx
  40114c:	sub    rsp,0x28
  401150:	call   401100 <fopen@plt>
  401155:	mov    rdi,rax
  401158:	mov    rbp,rax
  40115b:	call   401120 <getc@plt>
  401160:	cmp    eax,0x42
  401163:	jne    4014c3 <main@@Base+0x393>
  401169:	mov    rdi,rbp
  40116c:	call   401120 <getc@plt>
  401171:	cmp    eax,0x4d
  401174:	jne    4014c3 <main@@Base+0x393>
  40117a:	mov    rdi,rbp
  40117d:	call   401120 <getc@plt>
  401182:	mov    rdi,rbp
  401185:	mov    r13d,eax
  401188:	call   401120 <getc@plt>
  40118d:	mov    rdi,rbp
  401190:	mov    r12d,eax
  401193:	call   401120 <getc@plt>
  401198:	shl    eax,0x10
  40119b:	shl    r12d,0x8
  40119f:	mov    rdi,rbp
  4011a2:	or     r12d,eax
  4011a5:	call   401120 <getc@plt>
  4011aa:	shl    eax,0x18
  4011ad:	or     r12d,r13d
  4011b0:	mov    edx,eax
  4011b2:	or     edx,r12d
  4011b5:	lea    rsi,[rip+0xeb4]        # 402070 <_IO_stdin_used@@Base+0x70>
  4011bc:	mov    edi,0x1
  4011c1:	xor    eax,eax
  4011c3:	call   4010f0 <__printf_chk@plt>
  4011c8:	mov    edx,0x1
  4011cd:	mov    esi,0x4
  4011d2:	mov    rdi,rbp
  4011d5:	call   4010e0 <fseek@plt>
  4011da:	mov    rdi,rbp
  4011dd:	call   401120 <getc@plt>
  4011e2:	mov    rdi,rbp
  4011e5:	mov    r13d,eax
  4011e8:	call   401120 <getc@plt>
  4011ed:	mov    rdi,rbp
  4011f0:	mov    r12d,eax
  4011f3:	call   401120 <getc@plt>
  4011f8:	shl    eax,0x10
  4011fb:	shl    r12d,0x8
  4011ff:	or     r12d,eax
  401202:	mov    rdi,rbp
  401205:	call   401120 <getc@plt>
  40120a:	mov    ebx,r12d
  40120d:	mov    edx,0x1
  401212:	mov    esi,0x4
  401217:	or     ebx,r13d
  40121a:	shl    eax,0x18
  40121d:	mov    rdi,rbp
  401220:	or     ebx,eax
  401222:	call   4010e0 <fseek@plt>
  401227:	mov    rdi,rbp
  40122a:	call   401120 <getc@plt>
  40122f:	mov    rdi,rbp
  401232:	mov    r14d,eax
  401235:	call   401120 <getc@plt>
  40123a:	mov    rdi,rbp
  40123d:	mov    r13d,eax
  401240:	call   401120 <getc@plt>
  401245:	shl    eax,0x10
  401248:	shl    r13d,0x8
  40124c:	mov    rdi,rbp
  40124f:	or     r13d,eax
  401252:	call   401120 <getc@plt>
  401257:	or     r13d,r14d
  40125a:	shl    eax,0x18
  40125d:	mov    r14d,eax
  401260:	or     r14d,r13d
  401263:	mov    edx,r14d
  401266:	lea    rsi,[rip+0xefe]        # 40216b <_IO_stdin_used@@Base+0x16b>
  40126d:	mov    edi,0x1
  401272:	xor    eax,eax
  401274:	call   4010f0 <__printf_chk@plt>
  401279:	mov    rdi,rbp
  40127c:	call   401120 <getc@plt>
  401281:	mov    rdi,rbp
  401284:	mov    r15d,eax
  401287:	call   401120 <getc@plt>
  40128c:	mov    rdi,rbp
  40128f:	mov    r13d,eax
  401292:	call   401120 <getc@plt>
  401297:	shl    eax,0x10
  40129a:	mov    rdi,rbp
  40129d:	shl    r13d,0x8
  4012a1:	or     r13d,eax
  4012a4:	call   401120 <getc@plt>
  4012a9:	or     r13d,r15d
  4012ac:	shl    eax,0x18
  4012af:	or     eax,r13d
  4012b2:	mov    edx,eax
  4012b4:	lea    rsi,[rip+0xec7]        # 402182 <_IO_stdin_used@@Base+0x182>
  4012bb:	mov    DWORD PTR [rsp+0x10],eax
  4012bf:	mov    edi,0x1
  4012c4:	xor    eax,eax
  4012c6:	call   4010f0 <__printf_chk@plt>
  4012cb:	mov    rdi,rbp
  4012ce:	call   401120 <getc@plt>
  4012d3:	mov    rdi,rbp
  4012d6:	mov    r12d,eax
  4012d9:	call   401120 <getc@plt>
  4012de:	shl    eax,0x8
  4012e1:	or     eax,r12d
  4012e4:	cmp    eax,0x1
  4012e7:	jne    4014fd <main@@Base+0x3cd>
  4012ed:	mov    rdi,rbp
  4012f0:	call   401120 <getc@plt>
  4012f5:	mov    rdi,rbp
  4012f8:	mov    r13d,eax
  4012fb:	call   401120 <getc@plt>
  401300:	shl    eax,0x8
  401303:	mov    r12d,eax
  401306:	or     r12d,r13d
  401309:	xor    eax,eax
  40130b:	mov    edx,r12d
  40130e:	lea    rsi,[rip+0xe83]        # 402198 <_IO_stdin_used@@Base+0x198>
  401315:	mov    edi,0x1
  40131a:	call   4010f0 <__printf_chk@plt>
  40131f:	cmp    r12d,0x18
  401323:	jne    4014e0 <main@@Base+0x3b0>
  401329:	movsxd rsi,ebx
  40132c:	xor    edx,edx
  40132e:	mov    rdi,rbp
  401331:	call   4010e0 <fseek@plt>
  401336:	movsxd rax,DWORD PTR [rsp+0x10]
  40133b:	mov    rbx,rax
  40133e:	shl    rax,0x3
  401342:	mov    rdi,rax
  401345:	mov    QWORD PTR [rsp+0x18],rax
  40134a:	call   4010d0 <malloc@plt>
  40134f:	lea    edx,[rbx-0x1]
  401352:	mov    rsi,rax
  401355:	mov    QWORD PTR [rsp+0x8],rax
  40135a:	mov    DWORD PTR [rsp+0x14],edx
  40135e:	mov    r13d,edx
  401361:	test   ebx,ebx
  401363:	jle    40147c <main@@Base+0x34c>
  401369:	movsxd rax,r14d
  40136c:	lea    r12,[rax+rax*2]
  401370:	mov    eax,edx
  401372:	mov    r15,rsi
  401375:	lea    rbx,[rsi+rax*8+0x8]
  40137a:	nop    WORD PTR [rax+rax*1+0x0]
  401380:	mov    rdi,r12
  401383:	call   4010d0 <malloc@plt>
  401388:	mov    QWORD PTR [r15],rax
  40138b:	add    r15,0x8
  40138f:	cmp    r15,rbx
  401392:	jne    401380 <main@@Base+0x250>
  401394:	mov    rax,QWORD PTR [rsp+0x8]
  401399:	mov    rdx,QWORD PTR [rsp+0x18]
  40139e:	lea    r15,[rax+rdx*1-0x8]
  4013a3:	lea    eax,[r14-0x1]
  4013a7:	lea    r12,[rax+rax*2+0x3]
  4013ac:	nop    DWORD PTR [rax+0x0]
  4013b0:	xor    ebx,ebx
  4013b2:	test   r14d,r14d
  4013b5:	jle    4013f5 <main@@Base+0x2c5>
  4013b7:	nop    WORD PTR [rax+rax*1+0x0]
  4013c0:	mov    rdi,rbp
  4013c3:	call   401120 <getc@plt>
  4013c8:	mov    rcx,QWORD PTR [r15]
  4013cb:	mov    rdi,rbp
  4013ce:	mov    BYTE PTR [rcx+rbx*1+0x2],al
  4013d2:	call   401120 <getc@plt>
  4013d7:	mov    rcx,QWORD PTR [r15]
  4013da:	mov    rdi,rbp
  4013dd:	mov    BYTE PTR [rcx+rbx*1+0x1],al
  4013e1:	call   401120 <getc@plt>
  4013e6:	mov    rcx,QWORD PTR [r15]
  4013e9:	mov    BYTE PTR [rcx+rbx*1],al
  4013ec:	add    rbx,0x3
  4013f0:	cmp    r12,rbx
  4013f3:	jne    4013c0 <main@@Base+0x290>
  4013f5:	dec    r13d
  4013f8:	sub    r15,0x8
  4013fc:	cmp    r13d,0xffffffff
  401400:	jne    4013b0 <main@@Base+0x280>
  401402:	mov    rdi,rbp
  401405:	call   4010c0 <fclose@plt>
  40140a:	mov    rbx,QWORD PTR [rsp+0x8]
  40140f:	xor    edx,edx
  401411:	xor    esi,esi
  401413:	mov    rdi,rbx
  401416:	call   401610 <print_pixelinfo@@Base>
  40141b:	xor    edx,edx
  40141d:	mov    esi,0x214
  401422:	mov    rdi,rbx
  401425:	call   401610 <print_pixelinfo@@Base>
  40142a:	mov    edx,0x1bb
  40142f:	mov    esi,0x198
  401434:	mov    rdi,rbx
  401437:	call   401610 <print_pixelinfo@@Base>
  40143c:	mov    eax,DWORD PTR [rsp+0x10]
  401440:	test   eax,eax
  401442:	jle    401461 <main@@Base+0x331>
  401444:	mov    eax,DWORD PTR [rsp+0x14]
  401448:	lea    rbp,[rbx+rax*8+0x8]
  40144d:	nop    DWORD PTR [rax]
  401450:	mov    rdi,QWORD PTR [rbx]
  401453:	add    rbx,0x8
  401457:	call   4010b0 <free@plt>
  40145c:	cmp    rbx,rbp
  40145f:	jne    401450 <main@@Base+0x320>
  401461:	mov    rdi,QWORD PTR [rsp+0x8]
  401466:	call   4010b0 <free@plt>
  40146b:	add    rsp,0x28
  40146f:	pop    rbx
  401470:	pop    rbp
  401471:	pop    r12
  401473:	pop    r13
  401475:	pop    r14
  401477:	xor    eax,eax
  401479:	pop    r15
  40147b:	ret    
  40147c:	cmp    DWORD PTR [rsp+0x14],0x0
  401481:	jns    401394 <main@@Base+0x264>
  401487:	mov    rdi,rbp
  40148a:	call   4010c0 <fclose@plt>
  40148f:	mov    rbx,QWORD PTR [rsp+0x8]
  401494:	xor    edx,edx
  401496:	xor    esi,esi
  401498:	mov    rdi,rbx
  40149b:	call   401610 <print_pixelinfo@@Base>
  4014a0:	xor    edx,edx
  4014a2:	mov    rdi,rbx
  4014a5:	mov    esi,0x214
  4014aa:	call   401610 <print_pixelinfo@@Base>
  4014af:	mov    edx,0x1bb
  4014b4:	mov    esi,0x198
  4014b9:	mov    rdi,rbx
  4014bc:	call   401610 <print_pixelinfo@@Base>
  4014c1:	jmp    401461 <main@@Base+0x331>
  4014c3:	mov    edi,0x1
  4014c8:	lea    rsi,[rip+0xb61]        # 402030 <_IO_stdin_used@@Base+0x30>
  4014cf:	xor    eax,eax
  4014d1:	call   4010f0 <__printf_chk@plt>
  4014d6:	mov    edi,0x1
  4014db:	call   401110 <exit@plt>
  4014e0:	mov    edi,0x1
  4014e5:	lea    rsi,[rip+0xc0c]        # 4020f8 <_IO_stdin_used@@Base+0xf8>
  4014ec:	xor    eax,eax
  4014ee:	call   4010f0 <__printf_chk@plt>
  4014f3:	mov    edi,0x3
  4014f8:	call   401110 <exit@plt>
  4014fd:	mov    edi,0x1
  401502:	lea    rsi,[rip+0xb8f]        # 402098 <_IO_stdin_used@@Base+0x98>
  401509:	xor    eax,eax
  40150b:	call   4010f0 <__printf_chk@plt>
  401510:	mov    edi,0x2
  401515:	call   401110 <exit@plt>
  40151a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000401520 <_start@@Base>:
  401520:	endbr64 
  401524:	xor    ebp,ebp
  401526:	mov    r9,rdx
  401529:	pop    rsi
  40152a:	mov    rdx,rsp
  40152d:	and    rsp,0xfffffffffffffff0
  401531:	push   rax
  401532:	push   rsp
  401533:	mov    r8,0x4016c0
  40153a:	mov    rcx,0x401650
  401541:	mov    rdi,0x401130
  401548:	call   QWORD PTR [rip+0x2aa2]        # 403ff0 <__libc_start_main@GLIBC_2.2.5>
  40154e:	hlt    
  40154f:	nop
  401550:	endbr64 
  401554:	ret    
  401555:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40155f:	nop
  401560:	mov    eax,0x404068
  401565:	cmp    rax,0x404068
  40156b:	je     401580 <_start@@Base+0x60>
  40156d:	mov    eax,0x0
  401572:	test   rax,rax
  401575:	je     401580 <_start@@Base+0x60>
  401577:	mov    edi,0x404068
  40157c:	jmp    rax
  40157e:	xchg   ax,ax
  401580:	ret    
  401581:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40158c:	nop    DWORD PTR [rax+0x0]
  401590:	mov    esi,0x404068
  401595:	sub    rsi,0x404068
  40159c:	sar    rsi,0x3
  4015a0:	mov    rax,rsi
  4015a3:	shr    rax,0x3f
  4015a7:	add    rsi,rax
  4015aa:	sar    rsi,1
  4015ad:	je     4015c0 <_start@@Base+0xa0>
  4015af:	mov    eax,0x0
  4015b4:	test   rax,rax
  4015b7:	je     4015c0 <_start@@Base+0xa0>
  4015b9:	mov    edi,0x404068
  4015be:	jmp    rax
  4015c0:	ret    
  4015c1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4015cc:	nop    DWORD PTR [rax+0x0]
  4015d0:	endbr64 
  4015d4:	cmp    BYTE PTR [rip+0x2a8d],0x0        # 404068 <__bss_start@@Base>
  4015db:	jne    4015f0 <_start@@Base+0xd0>
  4015dd:	push   rbp
  4015de:	mov    rbp,rsp
  4015e1:	call   401560 <_start@@Base+0x40>
  4015e6:	mov    BYTE PTR [rip+0x2a7b],0x1        # 404068 <__bss_start@@Base>
  4015ed:	pop    rbp
  4015ee:	ret    
  4015ef:	nop
  4015f0:	ret    
  4015f1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4015fc:	nop    DWORD PTR [rax+0x0]
  401600:	endbr64 
  401604:	jmp    401590 <_start@@Base+0x70>
  401606:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000401610 <print_pixelinfo@@Base>:
  401610:	endbr64 
  401614:	movsxd rax,edx
  401617:	sub    rsp,0x10
  40161b:	movsxd rcx,esi
  40161e:	lea    rax,[rax+rax*2]
  401622:	add    rax,QWORD PTR [rdi+rcx*8]
  401626:	movzx  r9d,BYTE PTR [rax+0x1]
  40162b:	movzx  r8d,BYTE PTR [rax]
  40162f:	movzx  eax,BYTE PTR [rax+0x2]
  401633:	mov    ecx,edx
  401635:	push   rax
  401636:	mov    edx,esi
  401638:	mov    edi,0x1
  40163d:	lea    rsi,[rip+0x9c4]        # 402008 <_IO_stdin_used@@Base+0x8>
  401644:	xor    eax,eax
  401646:	call   4010f0 <__printf_chk@plt>
  40164b:	add    rsp,0x18
  40164f:	ret    

0000000000401650 <__libc_csu_init@@Base>:
  401650:	endbr64 
  401654:	push   r15
  401656:	lea    r15,[rip+0x27b3]        # 403e10 <_IO_stdin_used@@Base+0x1e10>
  40165d:	push   r14
  40165f:	mov    r14,rdx
  401662:	push   r13
  401664:	mov    r13,rsi
  401667:	push   r12
  401669:	mov    r12d,edi
  40166c:	push   rbp
  40166d:	lea    rbp,[rip+0x27a4]        # 403e18 <_IO_stdin_used@@Base+0x1e18>
  401674:	push   rbx
  401675:	sub    rbp,r15
  401678:	sub    rsp,0x8
  40167c:	call   401000 <free@plt-0xb0>
  401681:	sar    rbp,0x3
  401685:	je     4016a6 <__libc_csu_init@@Base+0x56>
  401687:	xor    ebx,ebx
  401689:	nop    DWORD PTR [rax+0x0]
  401690:	mov    rdx,r14
  401693:	mov    rsi,r13
  401696:	mov    edi,r12d
  401699:	call   QWORD PTR [r15+rbx*8]
  40169d:	add    rbx,0x1
  4016a1:	cmp    rbp,rbx
  4016a4:	jne    401690 <__libc_csu_init@@Base+0x40>
  4016a6:	add    rsp,0x8
  4016aa:	pop    rbx
  4016ab:	pop    rbp
  4016ac:	pop    r12
  4016ae:	pop    r13
  4016b0:	pop    r14
  4016b2:	pop    r15
  4016b4:	ret    
  4016b5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

00000000004016c0 <__libc_csu_fini@@Base>:
  4016c0:	endbr64 
  4016c4:	ret    

Disassembly of section .fini:

00000000004016c8 <.fini>:
  4016c8:	endbr64 
  4016cc:	sub    rsp,0x8
  4016d0:	add    rsp,0x8
  4016d4:	ret    
