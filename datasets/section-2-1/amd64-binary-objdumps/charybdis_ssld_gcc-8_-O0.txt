
../repos/charybdis/ssld/.libs/ssld:     file format elf64-x86-64


Disassembly of section .init:

0000000000402000 <.init>:
  402000:	endbr64 
  402004:	sub    rsp,0x8
  402008:	mov    rax,QWORD PTR [rip+0x5fd9]        # 407fe8 <open@plt+0x57a8>
  40200f:	test   rax,rax
  402012:	je     402016 <rb_sleep@plt-0x42a>
  402014:	call   rax
  402016:	add    rsp,0x8
  40201a:	ret    

Disassembly of section .plt:

0000000000402020 <.plt>:
  402020:	push   QWORD PTR [rip+0x5fe2]        # 408008 <open@plt+0x57c8>
  402026:	bnd jmp QWORD PTR [rip+0x5fe3]        # 408010 <open@plt+0x57d0>
  40202d:	nop    DWORD PTR [rax]
  402030:	endbr64 
  402034:	push   0x0
  402039:	bnd jmp 402020 <rb_sleep@plt-0x420>
  40203f:	nop
  402040:	endbr64 
  402044:	push   0x1
  402049:	bnd jmp 402020 <rb_sleep@plt-0x420>
  40204f:	nop
  402050:	endbr64 
  402054:	push   0x2
  402059:	bnd jmp 402020 <rb_sleep@plt-0x420>
  40205f:	nop
  402060:	endbr64 
  402064:	push   0x3
  402069:	bnd jmp 402020 <rb_sleep@plt-0x420>
  40206f:	nop
  402070:	endbr64 
  402074:	push   0x4
  402079:	bnd jmp 402020 <rb_sleep@plt-0x420>
  40207f:	nop
  402080:	endbr64 
  402084:	push   0x5
  402089:	bnd jmp 402020 <rb_sleep@plt-0x420>
  40208f:	nop
  402090:	endbr64 
  402094:	push   0x6
  402099:	bnd jmp 402020 <rb_sleep@plt-0x420>
  40209f:	nop
  4020a0:	endbr64 
  4020a4:	push   0x7
  4020a9:	bnd jmp 402020 <rb_sleep@plt-0x420>
  4020af:	nop
  4020b0:	endbr64 
  4020b4:	push   0x8
  4020b9:	bnd jmp 402020 <rb_sleep@plt-0x420>
  4020bf:	nop
  4020c0:	endbr64 
  4020c4:	push   0x9
  4020c9:	bnd jmp 402020 <rb_sleep@plt-0x420>
  4020cf:	nop
  4020d0:	endbr64 
  4020d4:	push   0xa
  4020d9:	bnd jmp 402020 <rb_sleep@plt-0x420>
  4020df:	nop
  4020e0:	endbr64 
  4020e4:	push   0xb
  4020e9:	bnd jmp 402020 <rb_sleep@plt-0x420>
  4020ef:	nop
  4020f0:	endbr64 
  4020f4:	push   0xc
  4020f9:	bnd jmp 402020 <rb_sleep@plt-0x420>
  4020ff:	nop
  402100:	endbr64 
  402104:	push   0xd
  402109:	bnd jmp 402020 <rb_sleep@plt-0x420>
  40210f:	nop
  402110:	endbr64 
  402114:	push   0xe
  402119:	bnd jmp 402020 <rb_sleep@plt-0x420>
  40211f:	nop
  402120:	endbr64 
  402124:	push   0xf
  402129:	bnd jmp 402020 <rb_sleep@plt-0x420>
  40212f:	nop
  402130:	endbr64 
  402134:	push   0x10
  402139:	bnd jmp 402020 <rb_sleep@plt-0x420>
  40213f:	nop
  402140:	endbr64 
  402144:	push   0x11
  402149:	bnd jmp 402020 <rb_sleep@plt-0x420>
  40214f:	nop
  402150:	endbr64 
  402154:	push   0x12
  402159:	bnd jmp 402020 <rb_sleep@plt-0x420>
  40215f:	nop
  402160:	endbr64 
  402164:	push   0x13
  402169:	bnd jmp 402020 <rb_sleep@plt-0x420>
  40216f:	nop
  402170:	endbr64 
  402174:	push   0x14
  402179:	bnd jmp 402020 <rb_sleep@plt-0x420>
  40217f:	nop
  402180:	endbr64 
  402184:	push   0x15
  402189:	bnd jmp 402020 <rb_sleep@plt-0x420>
  40218f:	nop
  402190:	endbr64 
  402194:	push   0x16
  402199:	bnd jmp 402020 <rb_sleep@plt-0x420>
  40219f:	nop
  4021a0:	endbr64 
  4021a4:	push   0x17
  4021a9:	bnd jmp 402020 <rb_sleep@plt-0x420>
  4021af:	nop
  4021b0:	endbr64 
  4021b4:	push   0x18
  4021b9:	bnd jmp 402020 <rb_sleep@plt-0x420>
  4021bf:	nop
  4021c0:	endbr64 
  4021c4:	push   0x19
  4021c9:	bnd jmp 402020 <rb_sleep@plt-0x420>
  4021cf:	nop
  4021d0:	endbr64 
  4021d4:	push   0x1a
  4021d9:	bnd jmp 402020 <rb_sleep@plt-0x420>
  4021df:	nop
  4021e0:	endbr64 
  4021e4:	push   0x1b
  4021e9:	bnd jmp 402020 <rb_sleep@plt-0x420>
  4021ef:	nop
  4021f0:	endbr64 
  4021f4:	push   0x1c
  4021f9:	bnd jmp 402020 <rb_sleep@plt-0x420>
  4021ff:	nop
  402200:	endbr64 
  402204:	push   0x1d
  402209:	bnd jmp 402020 <rb_sleep@plt-0x420>
  40220f:	nop
  402210:	endbr64 
  402214:	push   0x1e
  402219:	bnd jmp 402020 <rb_sleep@plt-0x420>
  40221f:	nop
  402220:	endbr64 
  402224:	push   0x1f
  402229:	bnd jmp 402020 <rb_sleep@plt-0x420>
  40222f:	nop
  402230:	endbr64 
  402234:	push   0x20
  402239:	bnd jmp 402020 <rb_sleep@plt-0x420>
  40223f:	nop
  402240:	endbr64 
  402244:	push   0x21
  402249:	bnd jmp 402020 <rb_sleep@plt-0x420>
  40224f:	nop
  402250:	endbr64 
  402254:	push   0x22
  402259:	bnd jmp 402020 <rb_sleep@plt-0x420>
  40225f:	nop
  402260:	endbr64 
  402264:	push   0x23
  402269:	bnd jmp 402020 <rb_sleep@plt-0x420>
  40226f:	nop
  402270:	endbr64 
  402274:	push   0x24
  402279:	bnd jmp 402020 <rb_sleep@plt-0x420>
  40227f:	nop
  402280:	endbr64 
  402284:	push   0x25
  402289:	bnd jmp 402020 <rb_sleep@plt-0x420>
  40228f:	nop
  402290:	endbr64 
  402294:	push   0x26
  402299:	bnd jmp 402020 <rb_sleep@plt-0x420>
  40229f:	nop
  4022a0:	endbr64 
  4022a4:	push   0x27
  4022a9:	bnd jmp 402020 <rb_sleep@plt-0x420>
  4022af:	nop
  4022b0:	endbr64 
  4022b4:	push   0x28
  4022b9:	bnd jmp 402020 <rb_sleep@plt-0x420>
  4022bf:	nop
  4022c0:	endbr64 
  4022c4:	push   0x29
  4022c9:	bnd jmp 402020 <rb_sleep@plt-0x420>
  4022cf:	nop
  4022d0:	endbr64 
  4022d4:	push   0x2a
  4022d9:	bnd jmp 402020 <rb_sleep@plt-0x420>
  4022df:	nop
  4022e0:	endbr64 
  4022e4:	push   0x2b
  4022e9:	bnd jmp 402020 <rb_sleep@plt-0x420>
  4022ef:	nop
  4022f0:	endbr64 
  4022f4:	push   0x2c
  4022f9:	bnd jmp 402020 <rb_sleep@plt-0x420>
  4022ff:	nop
  402300:	endbr64 
  402304:	push   0x2d
  402309:	bnd jmp 402020 <rb_sleep@plt-0x420>
  40230f:	nop
  402310:	endbr64 
  402314:	push   0x2e
  402319:	bnd jmp 402020 <rb_sleep@plt-0x420>
  40231f:	nop
  402320:	endbr64 
  402324:	push   0x2f
  402329:	bnd jmp 402020 <rb_sleep@plt-0x420>
  40232f:	nop
  402330:	endbr64 
  402334:	push   0x30
  402339:	bnd jmp 402020 <rb_sleep@plt-0x420>
  40233f:	nop
  402340:	endbr64 
  402344:	push   0x31
  402349:	bnd jmp 402020 <rb_sleep@plt-0x420>
  40234f:	nop
  402350:	endbr64 
  402354:	push   0x32
  402359:	bnd jmp 402020 <rb_sleep@plt-0x420>
  40235f:	nop
  402360:	endbr64 
  402364:	push   0x33
  402369:	bnd jmp 402020 <rb_sleep@plt-0x420>
  40236f:	nop
  402370:	endbr64 
  402374:	push   0x34
  402379:	bnd jmp 402020 <rb_sleep@plt-0x420>
  40237f:	nop
  402380:	endbr64 
  402384:	push   0x35
  402389:	bnd jmp 402020 <rb_sleep@plt-0x420>
  40238f:	nop
  402390:	endbr64 
  402394:	push   0x36
  402399:	bnd jmp 402020 <rb_sleep@plt-0x420>
  40239f:	nop
  4023a0:	endbr64 
  4023a4:	push   0x37
  4023a9:	bnd jmp 402020 <rb_sleep@plt-0x420>
  4023af:	nop
  4023b0:	endbr64 
  4023b4:	push   0x38
  4023b9:	bnd jmp 402020 <rb_sleep@plt-0x420>
  4023bf:	nop
  4023c0:	endbr64 
  4023c4:	push   0x39
  4023c9:	bnd jmp 402020 <rb_sleep@plt-0x420>
  4023cf:	nop
  4023d0:	endbr64 
  4023d4:	push   0x3a
  4023d9:	bnd jmp 402020 <rb_sleep@plt-0x420>
  4023df:	nop
  4023e0:	endbr64 
  4023e4:	push   0x3b
  4023e9:	bnd jmp 402020 <rb_sleep@plt-0x420>
  4023ef:	nop
  4023f0:	endbr64 
  4023f4:	push   0x3c
  4023f9:	bnd jmp 402020 <rb_sleep@plt-0x420>
  4023ff:	nop
  402400:	endbr64 
  402404:	push   0x3d
  402409:	bnd jmp 402020 <rb_sleep@plt-0x420>
  40240f:	nop
  402410:	endbr64 
  402414:	push   0x3e
  402419:	bnd jmp 402020 <rb_sleep@plt-0x420>
  40241f:	nop
  402420:	endbr64 
  402424:	push   0x3f
  402429:	bnd jmp 402020 <rb_sleep@plt-0x420>
  40242f:	nop
  402430:	endbr64 
  402434:	push   0x40
  402439:	bnd jmp 402020 <rb_sleep@plt-0x420>
  40243f:	nop

Disassembly of section .plt.sec:

0000000000402440 <rb_sleep@plt>:
  402440:	endbr64 
  402444:	bnd jmp QWORD PTR [rip+0x5bcd]        # 408018 <open@plt+0x57d8>
  40244b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402450 <dup2@plt>:
  402450:	endbr64 
  402454:	bnd jmp QWORD PTR [rip+0x5bc5]        # 408020 <open@plt+0x57e0>
  40245b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402460 <rb_get_type@plt>:
  402460:	endbr64 
  402464:	bnd jmp QWORD PTR [rip+0x5bbd]        # 408028 <open@plt+0x57e8>
  40246b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402470 <zError@plt>:
  402470:	endbr64 
  402474:	bnd jmp QWORD PTR [rip+0x5bb5]        # 408030 <open@plt+0x57f0>
  40247b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402480 <rb_event_addish@plt>:
  402480:	endbr64 
  402484:	bnd jmp QWORD PTR [rip+0x5bad]        # 408038 <open@plt+0x57f8>
  40248b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402490 <rb_ignore_errno@plt>:
  402490:	endbr64 
  402494:	bnd jmp QWORD PTR [rip+0x5ba5]        # 408040 <open@plt+0x5800>
  40249b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004024a0 <snprintf@plt>:
  4024a0:	endbr64 
  4024a4:	bnd jmp QWORD PTR [rip+0x5b9d]        # 408048 <open@plt+0x5808>
  4024ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004024b0 <rb_lib_version@plt>:
  4024b0:	endbr64 
  4024b4:	bnd jmp QWORD PTR [rip+0x5b95]        # 408050 <open@plt+0x5810>
  4024bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004024c0 <close@plt>:
  4024c0:	endbr64 
  4024c4:	bnd jmp QWORD PTR [rip+0x5b8d]        # 408058 <open@plt+0x5818>
  4024cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004024d0 <inflateEnd@plt>:
  4024d0:	endbr64 
  4024d4:	bnd jmp QWORD PTR [rip+0x5b85]        # 408060 <open@plt+0x5820>
  4024db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004024e0 <rb_setselect@plt>:
  4024e0:	endbr64 
  4024e4:	bnd jmp QWORD PTR [rip+0x5b7d]        # 408068 <open@plt+0x5828>
  4024eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004024f0 <rb_ssl_handshake_count@plt>:
  4024f0:	endbr64 
  4024f4:	bnd jmp QWORD PTR [rip+0x5b75]        # 408070 <open@plt+0x5830>
  4024fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402500 <rb_send_fd_buf@plt>:
  402500:	endbr64 
  402504:	bnd jmp QWORD PTR [rip+0x5b6d]        # 408078 <open@plt+0x5838>
  40250b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402510 <exit@plt>:
  402510:	endbr64 
  402514:	bnd jmp QWORD PTR [rip+0x5b65]        # 408080 <open@plt+0x5840>
  40251b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402520 <__assert_fail@plt>:
  402520:	endbr64 
  402524:	bnd jmp QWORD PTR [rip+0x5b5d]        # 408088 <open@plt+0x5848>
  40252b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402530 <deflate@plt>:
  402530:	endbr64 
  402534:	bnd jmp QWORD PTR [rip+0x5b55]        # 408090 <open@plt+0x5850>
  40253b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402540 <deflateInit_@plt>:
  402540:	endbr64 
  402544:	bnd jmp QWORD PTR [rip+0x5b4d]        # 408098 <open@plt+0x5858>
  40254b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402550 <strncmp@plt>:
  402550:	endbr64 
  402554:	bnd jmp QWORD PTR [rip+0x5b45]        # 4080a0 <open@plt+0x5860>
  40255b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402560 <rb_set_nb@plt>:
  402560:	endbr64 
  402564:	bnd jmp QWORD PTR [rip+0x5b3d]        # 4080a8 <open@plt+0x5868>
  40256b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402570 <rb_strlcpy@plt>:
  402570:	endbr64 
  402574:	bnd jmp QWORD PTR [rip+0x5b35]        # 4080b0 <open@plt+0x5870>
  40257b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402580 <rb_get_ssl_certfp@plt>:
  402580:	endbr64 
  402584:	bnd jmp QWORD PTR [rip+0x5b2d]        # 4080b8 <open@plt+0x5878>
  40258b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402590 <inflate@plt>:
  402590:	endbr64 
  402594:	bnd jmp QWORD PTR [rip+0x5b25]        # 4080c0 <open@plt+0x5880>
  40259b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004025a0 <rb_init_rawbuffers@plt>:
  4025a0:	endbr64 
  4025a4:	bnd jmp QWORD PTR [rip+0x5b1d]        # 4080c8 <open@plt+0x5888>
  4025ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004025b0 <free@plt>:
  4025b0:	endbr64 
  4025b4:	bnd jmp QWORD PTR [rip+0x5b15]        # 4080d0 <open@plt+0x5890>
  4025bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004025c0 <strlen@plt>:
  4025c0:	endbr64 
  4025c4:	bnd jmp QWORD PTR [rip+0x5b0d]        # 4080d8 <open@plt+0x5898>
  4025cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004025d0 <rb_lib_loop@plt>:
  4025d0:	endbr64 
  4025d4:	bnd jmp QWORD PTR [rip+0x5b05]        # 4080e0 <open@plt+0x58a0>
  4025db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004025e0 <deflateEnd@plt>:
  4025e0:	endbr64 
  4025e4:	bnd jmp QWORD PTR [rip+0x5afd]        # 4080e8 <open@plt+0x58a8>
  4025eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004025f0 <rb_read@plt>:
  4025f0:	endbr64 
  4025f4:	bnd jmp QWORD PTR [rip+0x5af5]        # 4080f0 <open@plt+0x58b0>
  4025fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402600 <rb_set_type@plt>:
  402600:	endbr64 
  402604:	bnd jmp QWORD PTR [rip+0x5aed]        # 4080f8 <open@plt+0x58b8>
  40260b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402610 <rb_ssl_get_cipher@plt>:
  402610:	endbr64 
  402614:	bnd jmp QWORD PTR [rip+0x5ae5]        # 408100 <open@plt+0x58c0>
  40261b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402620 <strerror@plt>:
  402620:	endbr64 
  402624:	bnd jmp QWORD PTR [rip+0x5add]        # 408108 <open@plt+0x58c8>
  40262b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402630 <sigaction@plt>:
  402630:	endbr64 
  402634:	bnd jmp QWORD PTR [rip+0x5ad5]        # 408110 <open@plt+0x58d0>
  40263b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402640 <rb_close@plt>:
  402640:	endbr64 
  402644:	bnd jmp QWORD PTR [rip+0x5acd]        # 408118 <open@plt+0x58d8>
  40264b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402650 <rb_ssl_clear_handshake_count@plt>:
  402650:	endbr64 
  402654:	bnd jmp QWORD PTR [rip+0x5ac5]        # 408120 <open@plt+0x58e0>
  40265b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402660 <atoi@plt>:
  402660:	endbr64 
  402664:	bnd jmp QWORD PTR [rip+0x5abd]        # 408128 <open@plt+0x58e8>
  40266b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402670 <rb_rawbuf_length@plt>:
  402670:	endbr64 
  402674:	bnd jmp QWORD PTR [rip+0x5ab5]        # 408130 <open@plt+0x58f0>
  40267b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402680 <rb_free_rawbuffer@plt>:
  402680:	endbr64 
  402684:	bnd jmp QWORD PTR [rip+0x5aad]        # 408138 <open@plt+0x58f8>
  40268b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402690 <rb_get_ssl_strerror@plt>:
  402690:	endbr64 
  402694:	bnd jmp QWORD PTR [rip+0x5aa5]        # 408140 <open@plt+0x5900>
  40269b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004026a0 <vsnprintf@plt>:
  4026a0:	endbr64 
  4026a4:	bnd jmp QWORD PTR [rip+0x5a9d]        # 408148 <open@plt+0x5908>
  4026ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004026b0 <rb_init_prng@plt>:
  4026b0:	endbr64 
  4026b4:	bnd jmp QWORD PTR [rip+0x5a95]        # 408150 <open@plt+0x5910>
  4026bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004026c0 <getenv@plt>:
  4026c0:	endbr64 
  4026c4:	bnd jmp QWORD PTR [rip+0x5a8d]        # 408158 <open@plt+0x5918>
  4026cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004026d0 <rb_outofmemory@plt>:
  4026d0:	endbr64 
  4026d4:	bnd jmp QWORD PTR [rip+0x5a85]        # 408160 <open@plt+0x5920>
  4026db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004026e0 <__errno_location@plt>:
  4026e0:	endbr64 
  4026e4:	bnd jmp QWORD PTR [rip+0x5a7d]        # 408168 <open@plt+0x5928>
  4026eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004026f0 <rb_supports_ssl@plt>:
  4026f0:	endbr64 
  4026f4:	bnd jmp QWORD PTR [rip+0x5a75]        # 408170 <open@plt+0x5930>
  4026fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402700 <sigaddset@plt>:
  402700:	endbr64 
  402704:	bnd jmp QWORD PTR [rip+0x5a6d]        # 408178 <open@plt+0x5938>
  40270b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402710 <__stack_chk_fail@plt>:
  402710:	endbr64 
  402714:	bnd jmp QWORD PTR [rip+0x5a65]        # 408180 <open@plt+0x5940>
  40271b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402720 <rb_ssl_start_connected@plt>:
  402720:	endbr64 
  402724:	bnd jmp QWORD PTR [rip+0x5a5d]        # 408188 <open@plt+0x5948>
  40272b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402730 <rb_lib_init@plt>:
  402730:	endbr64 
  402734:	bnd jmp QWORD PTR [rip+0x5a55]        # 408190 <open@plt+0x5950>
  40273b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402740 <rb_new_rawbuffer@plt>:
  402740:	endbr64 
  402744:	bnd jmp QWORD PTR [rip+0x5a4d]        # 408198 <open@plt+0x5958>
  40274b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402750 <strcpy@plt>:
  402750:	endbr64 
  402754:	bnd jmp QWORD PTR [rip+0x5a45]        # 4081a0 <open@plt+0x5960>
  40275b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402760 <rb_open@plt>:
  402760:	endbr64 
  402764:	bnd jmp QWORD PTR [rip+0x5a3d]        # 4081a8 <open@plt+0x5968>
  40276b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402770 <inflateInit_@plt>:
  402770:	endbr64 
  402774:	bnd jmp QWORD PTR [rip+0x5a35]        # 4081b0 <open@plt+0x5970>
  40277b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402780 <rb_recv_fd_buf@plt>:
  402780:	endbr64 
  402784:	bnd jmp QWORD PTR [rip+0x5a2d]        # 4081b8 <open@plt+0x5978>
  40278b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402790 <rb_ssl_start_accepted@plt>:
  402790:	endbr64 
  402794:	bnd jmp QWORD PTR [rip+0x5a25]        # 4081c0 <open@plt+0x5980>
  40279b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004027a0 <calloc@plt>:
  4027a0:	endbr64 
  4027a4:	bnd jmp QWORD PTR [rip+0x5a1d]        # 4081c8 <open@plt+0x5988>
  4027ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004027b0 <strncpy@plt>:
  4027b0:	endbr64 
  4027b4:	bnd jmp QWORD PTR [rip+0x5a15]        # 4081d0 <open@plt+0x5990>
  4027bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004027c0 <getrlimit@plt>:
  4027c0:	endbr64 
  4027c4:	bnd jmp QWORD PTR [rip+0x5a0d]        # 4081d8 <open@plt+0x5998>
  4027cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004027d0 <rb_event_add@plt>:
  4027d0:	endbr64 
  4027d4:	bnd jmp QWORD PTR [rip+0x5a05]        # 4081e0 <open@plt+0x59a0>
  4027db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004027e0 <sigemptyset@plt>:
  4027e0:	endbr64 
  4027e4:	bnd jmp QWORD PTR [rip+0x59fd]        # 4081e8 <open@plt+0x59a8>
  4027eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004027f0 <fwrite@plt>:
  4027f0:	endbr64 
  4027f4:	bnd jmp QWORD PTR [rip+0x59f5]        # 4081f0 <open@plt+0x59b0>
  4027fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402800 <rb_rawbuf_append@plt>:
  402800:	endbr64 
  402804:	bnd jmp QWORD PTR [rip+0x59ed]        # 4081f8 <open@plt+0x59b8>
  40280b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402810 <rb_rawbuf_flush@plt>:
  402810:	endbr64 
  402814:	bnd jmp QWORD PTR [rip+0x59e5]        # 408200 <open@plt+0x59c0>
  40281b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402820 <rb_setup_ssl_server@plt>:
  402820:	endbr64 
  402824:	bnd jmp QWORD PTR [rip+0x59dd]        # 408208 <open@plt+0x59c8>
  40282b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402830 <memcpy@plt>:
  402830:	endbr64 
  402834:	bnd jmp QWORD PTR [rip+0x59d5]        # 408210 <open@plt+0x59d0>
  40283b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402840 <open@plt>:
  402840:	endbr64 
  402844:	bnd jmp QWORD PTR [rip+0x59cd]        # 408218 <open@plt+0x59d8>
  40284b:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

0000000000402850 <.text>:
  402850:	endbr64 
  402854:	xor    ebp,ebp
  402856:	mov    r9,rdx
  402859:	pop    rsi
  40285a:	mov    rdx,rsp
  40285d:	and    rsp,0xfffffffffffffff0
  402861:	push   rax
  402862:	push   rsp
  402863:	mov    r8,0x405cd0
  40286a:	mov    rcx,0x405c60
  402871:	mov    rdi,0x4057a2
  402878:	call   QWORD PTR [rip+0x5772]        # 407ff0 <open@plt+0x57b0>
  40287e:	hlt    
  40287f:	nop
  402880:	endbr64 
  402884:	ret    
  402885:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40288f:	nop
  402890:	mov    eax,0x408258
  402895:	cmp    rax,0x408258
  40289b:	je     4028b0 <open@plt+0x70>
  40289d:	mov    eax,0x0
  4028a2:	test   rax,rax
  4028a5:	je     4028b0 <open@plt+0x70>
  4028a7:	mov    edi,0x408258
  4028ac:	jmp    rax
  4028ae:	xchg   ax,ax
  4028b0:	ret    
  4028b1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4028bc:	nop    DWORD PTR [rax+0x0]
  4028c0:	mov    esi,0x408258
  4028c5:	sub    rsi,0x408258
  4028cc:	sar    rsi,0x3
  4028d0:	mov    rax,rsi
  4028d3:	shr    rax,0x3f
  4028d7:	add    rsi,rax
  4028da:	sar    rsi,1
  4028dd:	je     4028f0 <open@plt+0xb0>
  4028df:	mov    eax,0x0
  4028e4:	test   rax,rax
  4028e7:	je     4028f0 <open@plt+0xb0>
  4028e9:	mov    edi,0x408258
  4028ee:	jmp    rax
  4028f0:	ret    
  4028f1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4028fc:	nop    DWORD PTR [rax+0x0]
  402900:	endbr64 
  402904:	cmp    BYTE PTR [rip+0x5955],0x0        # 408260 <open@plt+0x5a20>
  40290b:	jne    402920 <open@plt+0xe0>
  40290d:	push   rbp
  40290e:	mov    rbp,rsp
  402911:	call   402890 <open@plt+0x50>
  402916:	mov    BYTE PTR [rip+0x5943],0x1        # 408260 <open@plt+0x5a20>
  40291d:	pop    rbp
  40291e:	ret    
  40291f:	nop
  402920:	ret    
  402921:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40292c:	nop    DWORD PTR [rax+0x0]
  402930:	endbr64 
  402934:	jmp    4028c0 <open@plt+0x80>
  402936:	push   rbp
  402937:	mov    rbp,rsp
  40293a:	sub    rsp,0x20
  40293e:	mov    QWORD PTR [rbp-0x8],rdi
  402942:	mov    QWORD PTR [rbp-0x10],rsi
  402946:	mov    QWORD PTR [rbp-0x18],rdx
  40294a:	cmp    QWORD PTR [rbp-0x8],0x0
  40294f:	jne    402970 <open@plt+0x130>
  402951:	lea    rcx,[rip+0x39d0]        # 406328 <open@plt+0x3ae8>
  402958:	mov    edx,0x8f
  40295d:	lea    rsi,[rip+0x36ac]        # 406010 <open@plt+0x37d0>
  402964:	lea    rdi,[rip+0x36c1]        # 40602c <open@plt+0x37ec>
  40296b:	call   402520 <__assert_fail@plt>
  402970:	cmp    QWORD PTR [rbp-0x10],0x0
  402975:	jne    402996 <open@plt+0x156>
  402977:	lea    rcx,[rip+0x39aa]        # 406328 <open@plt+0x3ae8>
  40297e:	mov    edx,0x90
  402983:	lea    rsi,[rip+0x3686]        # 406010 <open@plt+0x37d0>
  40298a:	lea    rdi,[rip+0x36a8]        # 406039 <open@plt+0x37f9>
  402991:	call   402520 <__assert_fail@plt>
  402996:	cmp    QWORD PTR [rbp-0x18],0x0
  40299b:	jne    4029bc <open@plt+0x17c>
  40299d:	lea    rcx,[rip+0x3984]        # 406328 <open@plt+0x3ae8>
  4029a4:	mov    edx,0x91
  4029a9:	lea    rsi,[rip+0x3660]        # 406010 <open@plt+0x37d0>
  4029b0:	lea    rdi,[rip+0x368c]        # 406043 <open@plt+0x3803>
  4029b7:	call   402520 <__assert_fail@plt>
  4029bc:	mov    rax,QWORD PTR [rbp-0x10]
  4029c0:	mov    rdx,QWORD PTR [rbp-0x8]
  4029c4:	mov    QWORD PTR [rax],rdx
  4029c7:	mov    rax,QWORD PTR [rbp-0x10]
  4029cb:	mov    QWORD PTR [rax+0x8],0x0
  4029d3:	mov    rax,QWORD PTR [rbp-0x18]
  4029d7:	mov    rdx,QWORD PTR [rax]
  4029da:	mov    rax,QWORD PTR [rbp-0x10]
  4029de:	mov    QWORD PTR [rax+0x10],rdx
  4029e2:	mov    rax,QWORD PTR [rbp-0x18]
  4029e6:	mov    rax,QWORD PTR [rax]
  4029e9:	test   rax,rax
  4029ec:	je     4029ff <open@plt+0x1bf>
  4029ee:	mov    rax,QWORD PTR [rbp-0x18]
  4029f2:	mov    rax,QWORD PTR [rax]
  4029f5:	mov    rdx,QWORD PTR [rbp-0x10]
  4029f9:	mov    QWORD PTR [rax+0x8],rdx
  4029fd:	jmp    402a18 <open@plt+0x1d8>
  4029ff:	mov    rax,QWORD PTR [rbp-0x18]
  402a03:	mov    rax,QWORD PTR [rax+0x8]
  402a07:	test   rax,rax
  402a0a:	jne    402a18 <open@plt+0x1d8>
  402a0c:	mov    rax,QWORD PTR [rbp-0x18]
  402a10:	mov    rdx,QWORD PTR [rbp-0x10]
  402a14:	mov    QWORD PTR [rax+0x8],rdx
  402a18:	mov    rax,QWORD PTR [rbp-0x18]
  402a1c:	mov    rdx,QWORD PTR [rbp-0x10]
  402a20:	mov    QWORD PTR [rax],rdx
  402a23:	mov    rax,QWORD PTR [rbp-0x18]
  402a27:	mov    rax,QWORD PTR [rax+0x10]
  402a2b:	lea    rdx,[rax+0x1]
  402a2f:	mov    rax,QWORD PTR [rbp-0x18]
  402a33:	mov    QWORD PTR [rax+0x10],rdx
  402a37:	nop
  402a38:	leave  
  402a39:	ret    
  402a3a:	push   rbp
  402a3b:	mov    rbp,rsp
  402a3e:	sub    rsp,0x20
  402a42:	mov    QWORD PTR [rbp-0x8],rdi
  402a46:	mov    QWORD PTR [rbp-0x10],rsi
  402a4a:	mov    QWORD PTR [rbp-0x18],rdx
  402a4e:	cmp    QWORD PTR [rbp-0x10],0x0
  402a53:	jne    402a74 <open@plt+0x234>
  402a55:	lea    rcx,[rip+0x38f4]        # 406350 <open@plt+0x3b10>
  402a5c:	mov    edx,0xd3
  402a61:	lea    rsi,[rip+0x35a8]        # 406010 <open@plt+0x37d0>
  402a68:	lea    rdi,[rip+0x35ca]        # 406039 <open@plt+0x37f9>
  402a6f:	call   402520 <__assert_fail@plt>
  402a74:	cmp    QWORD PTR [rbp-0x18],0x0
  402a79:	jne    402a9a <open@plt+0x25a>
  402a7b:	lea    rcx,[rip+0x38ce]        # 406350 <open@plt+0x3b10>
  402a82:	mov    edx,0xd4
  402a87:	lea    rsi,[rip+0x3582]        # 406010 <open@plt+0x37d0>
  402a8e:	lea    rdi,[rip+0x35ae]        # 406043 <open@plt+0x3803>
  402a95:	call   402520 <__assert_fail@plt>
  402a9a:	cmp    QWORD PTR [rbp-0x8],0x0
  402a9f:	jne    402ac0 <open@plt+0x280>
  402aa1:	lea    rcx,[rip+0x38a8]        # 406350 <open@plt+0x3b10>
  402aa8:	mov    edx,0xd5
  402aad:	lea    rsi,[rip+0x355c]        # 406010 <open@plt+0x37d0>
  402ab4:	lea    rdi,[rip+0x3571]        # 40602c <open@plt+0x37ec>
  402abb:	call   402520 <__assert_fail@plt>
  402ac0:	mov    rax,QWORD PTR [rbp-0x10]
  402ac4:	mov    rdx,QWORD PTR [rbp-0x8]
  402ac8:	mov    QWORD PTR [rax],rdx
  402acb:	mov    rax,QWORD PTR [rbp-0x10]
  402acf:	mov    QWORD PTR [rax+0x10],0x0
  402ad7:	mov    rax,QWORD PTR [rbp-0x18]
  402adb:	mov    rdx,QWORD PTR [rax+0x8]
  402adf:	mov    rax,QWORD PTR [rbp-0x10]
  402ae3:	mov    QWORD PTR [rax+0x8],rdx
  402ae7:	mov    rax,QWORD PTR [rbp-0x18]
  402aeb:	mov    rax,QWORD PTR [rax+0x8]
  402aef:	test   rax,rax
  402af2:	je     402b06 <open@plt+0x2c6>
  402af4:	mov    rax,QWORD PTR [rbp-0x18]
  402af8:	mov    rax,QWORD PTR [rax+0x8]
  402afc:	mov    rdx,QWORD PTR [rbp-0x10]
  402b00:	mov    QWORD PTR [rax+0x10],rdx
  402b04:	jmp    402b1d <open@plt+0x2dd>
  402b06:	mov    rax,QWORD PTR [rbp-0x18]
  402b0a:	mov    rax,QWORD PTR [rax]
  402b0d:	test   rax,rax
  402b10:	jne    402b1d <open@plt+0x2dd>
  402b12:	mov    rax,QWORD PTR [rbp-0x18]
  402b16:	mov    rdx,QWORD PTR [rbp-0x10]
  402b1a:	mov    QWORD PTR [rax],rdx
  402b1d:	mov    rax,QWORD PTR [rbp-0x18]
  402b21:	mov    rdx,QWORD PTR [rbp-0x10]
  402b25:	mov    QWORD PTR [rax+0x8],rdx
  402b29:	mov    rax,QWORD PTR [rbp-0x18]
  402b2d:	mov    rax,QWORD PTR [rax+0x10]
  402b31:	lea    rdx,[rax+0x1]
  402b35:	mov    rax,QWORD PTR [rbp-0x18]
  402b39:	mov    QWORD PTR [rax+0x10],rdx
  402b3d:	nop
  402b3e:	leave  
  402b3f:	ret    
  402b40:	push   rbp
  402b41:	mov    rbp,rsp
  402b44:	sub    rsp,0x10
  402b48:	mov    QWORD PTR [rbp-0x8],rdi
  402b4c:	mov    QWORD PTR [rbp-0x10],rsi
  402b50:	cmp    QWORD PTR [rbp-0x8],0x0
  402b55:	jne    402b76 <open@plt+0x336>
  402b57:	lea    rcx,[rip+0x37da]        # 406338 <open@plt+0x3af8>
  402b5e:	mov    edx,0xeb
  402b63:	lea    rsi,[rip+0x34a6]        # 406010 <open@plt+0x37d0>
  402b6a:	lea    rdi,[rip+0x34c8]        # 406039 <open@plt+0x37f9>
  402b71:	call   402520 <__assert_fail@plt>
  402b76:	cmp    QWORD PTR [rbp-0x10],0x0
  402b7b:	jne    402b9c <open@plt+0x35c>
  402b7d:	lea    rcx,[rip+0x37b4]        # 406338 <open@plt+0x3af8>
  402b84:	mov    edx,0xec
  402b89:	lea    rsi,[rip+0x3480]        # 406010 <open@plt+0x37d0>
  402b90:	lea    rdi,[rip+0x34ac]        # 406043 <open@plt+0x3803>
  402b97:	call   402520 <__assert_fail@plt>
  402b9c:	mov    rax,QWORD PTR [rbp-0x8]
  402ba0:	mov    rax,QWORD PTR [rax+0x10]
  402ba4:	test   rax,rax
  402ba7:	je     402bbf <open@plt+0x37f>
  402ba9:	mov    rax,QWORD PTR [rbp-0x8]
  402bad:	mov    rax,QWORD PTR [rax+0x10]
  402bb1:	mov    rdx,QWORD PTR [rbp-0x8]
  402bb5:	mov    rdx,QWORD PTR [rdx+0x8]
  402bb9:	mov    QWORD PTR [rax+0x8],rdx
  402bbd:	jmp    402bcf <open@plt+0x38f>
  402bbf:	mov    rax,QWORD PTR [rbp-0x8]
  402bc3:	mov    rdx,QWORD PTR [rax+0x8]
  402bc7:	mov    rax,QWORD PTR [rbp-0x10]
  402bcb:	mov    QWORD PTR [rax+0x8],rdx
  402bcf:	mov    rax,QWORD PTR [rbp-0x8]
  402bd3:	mov    rax,QWORD PTR [rax+0x8]
  402bd7:	test   rax,rax
  402bda:	je     402bf2 <open@plt+0x3b2>
  402bdc:	mov    rax,QWORD PTR [rbp-0x8]
  402be0:	mov    rax,QWORD PTR [rax+0x8]
  402be4:	mov    rdx,QWORD PTR [rbp-0x8]
  402be8:	mov    rdx,QWORD PTR [rdx+0x10]
  402bec:	mov    QWORD PTR [rax+0x10],rdx
  402bf0:	jmp    402c01 <open@plt+0x3c1>
  402bf2:	mov    rax,QWORD PTR [rbp-0x8]
  402bf6:	mov    rdx,QWORD PTR [rax+0x10]
  402bfa:	mov    rax,QWORD PTR [rbp-0x10]
  402bfe:	mov    QWORD PTR [rax],rdx
  402c01:	mov    rax,QWORD PTR [rbp-0x8]
  402c05:	mov    QWORD PTR [rax+0x8],0x0
  402c0d:	mov    rax,QWORD PTR [rbp-0x8]
  402c11:	mov    rdx,QWORD PTR [rax+0x8]
  402c15:	mov    rax,QWORD PTR [rbp-0x8]
  402c19:	mov    QWORD PTR [rax+0x10],rdx
  402c1d:	mov    rax,QWORD PTR [rbp-0x10]
  402c21:	mov    rax,QWORD PTR [rax+0x10]
  402c25:	lea    rdx,[rax-0x1]
  402c29:	mov    rax,QWORD PTR [rbp-0x10]
  402c2d:	mov    QWORD PTR [rax+0x10],rdx
  402c31:	nop
  402c32:	leave  
  402c33:	ret    
  402c34:	push   rbp
  402c35:	mov    rbp,rsp
  402c38:	sub    rsp,0x20
  402c3c:	mov    QWORD PTR [rbp-0x18],rdi
  402c40:	mov    rax,QWORD PTR [rbp-0x18]
  402c44:	mov    rsi,rax
  402c47:	mov    edi,0x1
  402c4c:	call   4027a0 <calloc@plt>
  402c51:	mov    QWORD PTR [rbp-0x8],rax
  402c55:	cmp    QWORD PTR [rbp-0x8],0x0
  402c5a:	sete   al
  402c5d:	movzx  eax,al
  402c60:	test   rax,rax
  402c63:	je     402c6a <open@plt+0x42a>
  402c65:	call   4026d0 <rb_outofmemory@plt>
  402c6a:	mov    rax,QWORD PTR [rbp-0x8]
  402c6e:	leave  
  402c6f:	ret    
  402c70:	push   rbp
  402c71:	mov    rbp,rsp
  402c74:	sub    rsp,0x10
  402c78:	mov    QWORD PTR [rbp-0x8],rdi
  402c7c:	cmp    QWORD PTR [rbp-0x8],0x0
  402c81:	setne  al
  402c84:	movzx  eax,al
  402c87:	test   rax,rax
  402c8a:	je     402c98 <open@plt+0x458>
  402c8c:	mov    rax,QWORD PTR [rbp-0x8]
  402c90:	mov    rdi,rax
  402c93:	call   4025b0 <free@plt>
  402c98:	nop
  402c99:	leave  
  402c9a:	ret    
  402c9b:	push   rbp
  402c9c:	mov    rbp,rsp
  402c9f:	sub    rsp,0x20
  402ca3:	mov    QWORD PTR [rbp-0x18],rdi
  402ca7:	mov    rax,QWORD PTR fs:0x28
  402cb0:	mov    QWORD PTR [rbp-0x8],rax
  402cb4:	xor    eax,eax
  402cb6:	mov    rax,QWORD PTR [rbp-0x18]
  402cba:	mov    eax,DWORD PTR [rax]
  402cbc:	mov    DWORD PTR [rbp-0xc],eax
  402cbf:	mov    eax,DWORD PTR [rbp-0xc]
  402cc2:	mov    rdx,QWORD PTR [rbp-0x8]
  402cc6:	xor    rdx,QWORD PTR fs:0x28
  402ccf:	je     402cd6 <open@plt+0x496>
  402cd1:	call   402710 <__stack_chk_fail@plt>
  402cd6:	leave  
  402cd7:	ret    
  402cd8:	push   rbp
  402cd9:	mov    rbp,rsp
  402cdc:	mov    QWORD PTR [rbp-0x8],rdi
  402ce0:	mov    DWORD PTR [rbp-0xc],esi
  402ce3:	mov    edx,DWORD PTR [rbp-0xc]
  402ce6:	mov    rax,QWORD PTR [rbp-0x8]
  402cea:	mov    DWORD PTR [rax],edx
  402cec:	nop
  402ced:	pop    rbp
  402cee:	ret    
  402cef:	endbr64 
  402cf3:	push   rbp
  402cf4:	mov    rbp,rsp
  402cf7:	sub    rsp,0x20
  402cfb:	mov    QWORD PTR [rbp-0x8],rdi
  402cff:	mov    QWORD PTR [rbp-0x10],rsi
  402d03:	mov    QWORD PTR [rbp-0x18],rdx
  402d07:	mov    rax,QWORD PTR [rbp-0x10]
  402d0b:	imul   rax,QWORD PTR [rbp-0x18]
  402d10:	mov    rdi,rax
  402d13:	call   402c34 <open@plt+0x3f4>
  402d18:	leave  
  402d19:	ret    
  402d1a:	endbr64 
  402d1e:	push   rbp
  402d1f:	mov    rbp,rsp
  402d22:	sub    rsp,0x10
  402d26:	mov    QWORD PTR [rbp-0x8],rdi
  402d2a:	mov    QWORD PTR [rbp-0x10],rsi
  402d2e:	mov    rax,QWORD PTR [rbp-0x10]
  402d32:	mov    rdi,rax
  402d35:	call   402c70 <open@plt+0x430>
  402d3a:	nop
  402d3b:	leave  
  402d3c:	ret    
  402d3d:	endbr64 
  402d41:	push   rbp
  402d42:	mov    rbp,rsp
  402d45:	mov    DWORD PTR [rbp-0x14],edi
  402d48:	mov    ecx,DWORD PTR [rbp-0x14]
  402d4b:	mov    edx,0x10624dd3
  402d50:	mov    eax,ecx
  402d52:	mul    edx
  402d54:	mov    eax,edx
  402d56:	shr    eax,0x7
  402d59:	imul   eax,eax,0x7d0
  402d5f:	sub    ecx,eax
  402d61:	mov    eax,ecx
  402d63:	mov    edx,eax
  402d65:	mov    rax,rdx
  402d68:	add    rax,rax
  402d6b:	add    rax,rdx
  402d6e:	shl    rax,0x3
  402d72:	mov    rdx,rax
  402d75:	lea    rax,[rip+0x5524]        # 4082a0 <open@plt+0x5a60>
  402d7c:	mov    rax,QWORD PTR [rdx+rax*1]
  402d80:	mov    QWORD PTR [rbp-0x10],rax
  402d84:	jmp    402dc1 <open@plt+0x581>
  402d86:	mov    rax,QWORD PTR [rbp-0x10]
  402d8a:	mov    rax,QWORD PTR [rax]
  402d8d:	mov    QWORD PTR [rbp-0x8],rax
  402d91:	mov    rax,QWORD PTR [rbp-0x8]
  402d95:	mov    eax,DWORD PTR [rax+0x30]
  402d98:	cmp    DWORD PTR [rbp-0x14],eax
  402d9b:	jne    402db5 <open@plt+0x575>
  402d9d:	mov    rax,QWORD PTR [rbp-0x8]
  402da1:	movzx  eax,BYTE PTR [rax+0x68]
  402da5:	movzx  eax,al
  402da8:	and    eax,0x8
  402dab:	test   eax,eax
  402dad:	jne    402db5 <open@plt+0x575>
  402daf:	mov    rax,QWORD PTR [rbp-0x8]
  402db3:	jmp    402dcd <open@plt+0x58d>
  402db5:	mov    rax,QWORD PTR [rbp-0x10]
  402db9:	mov    rax,QWORD PTR [rax+0x10]
  402dbd:	mov    QWORD PTR [rbp-0x10],rax
  402dc1:	cmp    QWORD PTR [rbp-0x10],0x0
  402dc6:	jne    402d86 <open@plt+0x546>
  402dc8:	mov    eax,0x0
  402dcd:	pop    rbp
  402dce:	ret    
  402dcf:	endbr64 
  402dd3:	push   rbp
  402dd4:	mov    rbp,rsp
  402dd7:	sub    rsp,0x10
  402ddb:	mov    QWORD PTR [rbp-0x8],rdi
  402ddf:	mov    DWORD PTR [rbp-0xc],esi
  402de2:	mov    rax,QWORD PTR [rbp-0x8]
  402de6:	mov    edx,DWORD PTR [rbp-0xc]
  402de9:	mov    DWORD PTR [rax+0x30],edx
  402dec:	mov    ecx,DWORD PTR [rbp-0xc]
  402def:	mov    edx,0x10624dd3
  402df4:	mov    eax,ecx
  402df6:	mul    edx
  402df8:	mov    eax,edx
  402dfa:	shr    eax,0x7
  402dfd:	imul   eax,eax,0x7d0
  402e03:	sub    ecx,eax
  402e05:	mov    eax,ecx
  402e07:	mov    edx,eax
  402e09:	mov    rax,rdx
  402e0c:	add    rax,rax
  402e0f:	add    rax,rdx
  402e12:	shl    rax,0x3
  402e16:	lea    rdx,[rip+0x5483]        # 4082a0 <open@plt+0x5a60>
  402e1d:	add    rdx,rax
  402e20:	mov    rcx,QWORD PTR [rbp-0x8]
  402e24:	mov    rax,QWORD PTR [rbp-0x8]
  402e28:	mov    rsi,rcx
  402e2b:	mov    rdi,rax
  402e2e:	call   402936 <open@plt+0xf6>
  402e33:	nop
  402e34:	leave  
  402e35:	ret    
  402e36:	endbr64 
  402e3a:	push   rbp
  402e3b:	mov    rbp,rsp
  402e3e:	sub    rsp,0x20
  402e42:	mov    QWORD PTR [rbp-0x18],rdi
  402e46:	mov    rax,QWORD PTR [rbp-0x18]
  402e4a:	mov    rax,QWORD PTR [rax+0x20]
  402e4e:	mov    rdi,rax
  402e51:	call   402680 <rb_free_rawbuffer@plt>
  402e56:	mov    rax,QWORD PTR [rbp-0x18]
  402e5a:	mov    rax,QWORD PTR [rax+0x28]
  402e5e:	mov    rdi,rax
  402e61:	call   402680 <rb_free_rawbuffer@plt>
  402e66:	mov    rax,QWORD PTR [rbp-0x18]
  402e6a:	movzx  eax,BYTE PTR [rax+0x68]
  402e6e:	movzx  eax,al
  402e71:	and    eax,0x2
  402e74:	test   eax,eax
  402e76:	je     402eac <open@plt+0x66c>
  402e78:	mov    rax,QWORD PTR [rbp-0x18]
  402e7c:	mov    rax,QWORD PTR [rax+0x70]
  402e80:	mov    QWORD PTR [rbp-0x8],rax
  402e84:	mov    rax,QWORD PTR [rbp-0x8]
  402e88:	mov    rdi,rax
  402e8b:	call   4024d0 <inflateEnd@plt>
  402e90:	mov    rax,QWORD PTR [rbp-0x8]
  402e94:	add    rax,0x70
  402e98:	mov    rdi,rax
  402e9b:	call   4025e0 <deflateEnd@plt>
  402ea0:	mov    rax,QWORD PTR [rbp-0x8]
  402ea4:	mov    rdi,rax
  402ea7:	call   402c70 <open@plt+0x430>
  402eac:	mov    rax,QWORD PTR [rbp-0x18]
  402eb0:	mov    rdi,rax
  402eb3:	call   402c70 <open@plt+0x430>
  402eb8:	nop
  402eb9:	leave  
  402eba:	ret    
  402ebb:	endbr64 
  402ebf:	push   rbp
  402ec0:	mov    rbp,rsp
  402ec3:	sub    rsp,0x30
  402ec7:	mov    QWORD PTR [rbp-0x28],rdi
  402ecb:	mov    rax,QWORD PTR [rip+0x10f4e]        # 413e20 <open@plt+0x115e0>
  402ed2:	mov    QWORD PTR [rbp-0x18],rax
  402ed6:	cmp    QWORD PTR [rbp-0x18],0x0
  402edb:	je     402ee7 <open@plt+0x6a7>
  402edd:	mov    rax,QWORD PTR [rbp-0x18]
  402ee1:	mov    rax,QWORD PTR [rax+0x10]
  402ee5:	jmp    402eec <open@plt+0x6ac>
  402ee7:	mov    eax,0x0
  402eec:	mov    QWORD PTR [rbp-0x10],rax
  402ef0:	jmp    402f2b <open@plt+0x6eb>
  402ef2:	mov    rax,QWORD PTR [rbp-0x18]
  402ef6:	mov    rax,QWORD PTR [rax]
  402ef9:	mov    QWORD PTR [rbp-0x8],rax
  402efd:	mov    rax,QWORD PTR [rbp-0x8]
  402f01:	mov    rdi,rax
  402f04:	call   402e36 <open@plt+0x5f6>
  402f09:	mov    rax,QWORD PTR [rbp-0x10]
  402f0d:	mov    QWORD PTR [rbp-0x18],rax
  402f11:	cmp    QWORD PTR [rbp-0x18],0x0
  402f16:	je     402f22 <open@plt+0x6e2>
  402f18:	mov    rax,QWORD PTR [rbp-0x18]
  402f1c:	mov    rax,QWORD PTR [rax+0x10]
  402f20:	jmp    402f27 <open@plt+0x6e7>
  402f22:	mov    eax,0x0
  402f27:	mov    QWORD PTR [rbp-0x10],rax
  402f2b:	cmp    QWORD PTR [rbp-0x18],0x0
  402f30:	jne    402ef2 <open@plt+0x6b2>
  402f32:	mov    QWORD PTR [rip+0x10ee3],0x0        # 413e20 <open@plt+0x115e0>
  402f3d:	mov    rax,QWORD PTR [rip+0x10edc]        # 413e20 <open@plt+0x115e0>
  402f44:	mov    QWORD PTR [rip+0x10edd],rax        # 413e28 <open@plt+0x115e8>
  402f4b:	nop
  402f4c:	leave  
  402f4d:	ret    
  402f4e:	endbr64 
  402f52:	push   rbp
  402f53:	mov    rbp,rsp
  402f56:	sub    rsp,0x280
  402f5d:	mov    QWORD PTR [rbp-0x268],rdi
  402f64:	mov    DWORD PTR [rbp-0x26c],esi
  402f6a:	mov    QWORD PTR [rbp-0x278],rdx
  402f71:	mov    QWORD PTR [rbp-0x98],rcx
  402f78:	mov    QWORD PTR [rbp-0x90],r8
  402f7f:	mov    QWORD PTR [rbp-0x88],r9
  402f86:	test   al,al
  402f88:	je     402fb2 <open@plt+0x772>
  402f8a:	vmovaps XMMWORD PTR [rbp-0x80],xmm0
  402f8f:	vmovaps XMMWORD PTR [rbp-0x70],xmm1
  402f94:	vmovaps XMMWORD PTR [rbp-0x60],xmm2
  402f99:	vmovaps XMMWORD PTR [rbp-0x50],xmm3
  402f9e:	vmovaps XMMWORD PTR [rbp-0x40],xmm4
  402fa3:	vmovaps XMMWORD PTR [rbp-0x30],xmm5
  402fa8:	vmovaps XMMWORD PTR [rbp-0x20],xmm6
  402fad:	vmovaps XMMWORD PTR [rbp-0x10],xmm7
  402fb2:	mov    rax,QWORD PTR fs:0x28
  402fbb:	mov    QWORD PTR [rbp-0xb8],rax
  402fc2:	xor    eax,eax
  402fc4:	mov    rax,QWORD PTR [rbp-0x268]
  402fcb:	movzx  eax,BYTE PTR [rax+0x68]
  402fcf:	movzx  eax,al
  402fd2:	and    eax,0x8
  402fd5:	test   eax,eax
  402fd7:	jne    40321a <open@plt+0x9da>
  402fdd:	mov    rax,QWORD PTR [rbp-0x268]
  402fe4:	mov    rdx,QWORD PTR [rax+0x38]
  402fe8:	mov    rax,QWORD PTR [rbp-0x268]
  402fef:	mov    rax,QWORD PTR [rax+0x20]
  402ff3:	mov    rsi,rdx
  402ff6:	mov    rdi,rax
  402ff9:	call   402810 <rb_rawbuf_flush@plt>
  402ffe:	mov    rax,QWORD PTR [rbp-0x268]
  403005:	mov    rdx,QWORD PTR [rax+0x40]
  403009:	mov    rax,QWORD PTR [rbp-0x268]
  403010:	mov    rax,QWORD PTR [rax+0x28]
  403014:	mov    rsi,rdx
  403017:	mov    rdi,rax
  40301a:	call   402810 <rb_rawbuf_flush@plt>
  40301f:	mov    rax,QWORD PTR [rbp-0x268]
  403026:	mov    rax,QWORD PTR [rax+0x38]
  40302a:	mov    rdi,rax
  40302d:	call   402640 <rb_close@plt>
  403032:	mov    rax,QWORD PTR [rbp-0x268]
  403039:	movzx  eax,BYTE PTR [rax+0x68]
  40303d:	or     eax,0x8
  403040:	mov    edx,eax
  403042:	mov    rax,QWORD PTR [rbp-0x268]
  403049:	mov    BYTE PTR [rax+0x68],dl
  40304c:	mov    rax,QWORD PTR [rbp-0x268]
  403053:	movzx  eax,BYTE PTR [rax+0x68]
  403057:	movzx  eax,al
  40305a:	and    eax,0x40
  40305d:	test   eax,eax
  40305f:	jne    4030ae <open@plt+0x86e>
  403061:	mov    rax,QWORD PTR [rbp-0x268]
  403068:	mov    ecx,DWORD PTR [rax+0x30]
  40306b:	mov    edx,0x10624dd3
  403070:	mov    eax,ecx
  403072:	mul    edx
  403074:	mov    eax,edx
  403076:	shr    eax,0x7
  403079:	imul   eax,eax,0x7d0
  40307f:	sub    ecx,eax
  403081:	mov    eax,ecx
  403083:	mov    edx,eax
  403085:	mov    rax,rdx
  403088:	add    rax,rax
  40308b:	add    rax,rdx
  40308e:	shl    rax,0x3
  403092:	lea    rdx,[rip+0x5207]        # 4082a0 <open@plt+0x5a60>
  403099:	add    rdx,rax
  40309c:	mov    rax,QWORD PTR [rbp-0x268]
  4030a3:	mov    rsi,rdx
  4030a6:	mov    rdi,rax
  4030a9:	call   402b40 <open@plt+0x300>
  4030ae:	cmp    DWORD PTR [rbp-0x26c],0x0
  4030b5:	je     4030c1 <open@plt+0x881>
  4030b7:	cmp    QWORD PTR [rbp-0x278],0x0
  4030bf:	jne    4030f9 <open@plt+0x8b9>
  4030c1:	mov    rax,QWORD PTR [rbp-0x268]
  4030c8:	mov    rax,QWORD PTR [rax+0x40]
  4030cc:	mov    rdi,rax
  4030cf:	call   402640 <rb_close@plt>
  4030d4:	mov    rcx,QWORD PTR [rbp-0x268]
  4030db:	mov    rax,QWORD PTR [rbp-0x268]
  4030e2:	lea    rdx,[rip+0x10d37]        # 413e20 <open@plt+0x115e0>
  4030e9:	mov    rsi,rcx
  4030ec:	mov    rdi,rax
  4030ef:	call   402936 <open@plt+0xf6>
  4030f4:	jmp    40321b <open@plt+0x9db>
  4030f9:	mov    rax,QWORD PTR [rbp-0x268]
  403100:	mov    rax,QWORD PTR [rax+0x40]
  403104:	mov    rdx,QWORD PTR [rbp-0x268]
  40310b:	mov    rcx,rdx
  40310e:	lea    rdx,[rip+0xd27]        # 403e3c <open@plt+0x15fc>
  403115:	mov    esi,0x1
  40311a:	mov    rdi,rax
  40311d:	call   4024e0 <rb_setselect@plt>
  403122:	mov    rax,QWORD PTR [rbp-0x268]
  403129:	mov    rax,QWORD PTR [rax+0x40]
  40312d:	mov    ecx,0x0
  403132:	mov    edx,0x0
  403137:	mov    esi,0x2
  40313c:	mov    rdi,rax
  40313f:	call   4024e0 <rb_setselect@plt>
  403144:	mov    DWORD PTR [rbp-0x258],0x18
  40314e:	mov    DWORD PTR [rbp-0x254],0x30
  403158:	lea    rax,[rbp+0x10]
  40315c:	mov    QWORD PTR [rbp-0x250],rax
  403163:	lea    rax,[rbp-0xb0]
  40316a:	mov    QWORD PTR [rbp-0x248],rax
  403171:	lea    rcx,[rbp-0x258]
  403178:	mov    rdx,QWORD PTR [rbp-0x278]
  40317f:	lea    rax,[rbp-0x240]
  403186:	mov    esi,0x80
  40318b:	mov    rdi,rax
  40318e:	call   4026a0 <vsnprintf@plt>
  403193:	mov    BYTE PTR [rbp-0x1c0],0x44
  40319a:	mov    rax,QWORD PTR [rbp-0x268]
  4031a1:	mov    eax,DWORD PTR [rax+0x30]
  4031a4:	lea    rdx,[rbp-0x1c0]
  4031ab:	inc    rdx
  4031ae:	mov    esi,eax
  4031b0:	mov    rdi,rdx
  4031b3:	call   402cd8 <open@plt+0x498>
  4031b8:	lea    rax,[rbp-0x240]
  4031bf:	lea    rdx,[rbp-0x1c0]
  4031c6:	lea    rcx,[rdx+0x5]
  4031ca:	mov    edx,0xfb
  4031cf:	mov    rsi,rax
  4031d2:	mov    rdi,rcx
  4031d5:	call   402570 <rb_strlcpy@plt>
  4031da:	lea    rax,[rbp-0x240]
  4031e1:	mov    rdi,rax
  4031e4:	call   4025c0 <strlen@plt>
  4031e9:	add    eax,0x6
  4031ec:	mov    DWORD PTR [rbp-0x25c],eax
  4031f2:	mov    eax,DWORD PTR [rbp-0x25c]
  4031f8:	movsxd rdx,eax
  4031fb:	mov    rax,QWORD PTR [rbp-0x268]
  403202:	mov    rax,QWORD PTR [rax+0x18]
  403206:	lea    rcx,[rbp-0x1c0]
  40320d:	mov    rsi,rcx
  403210:	mov    rdi,rax
  403213:	call   4036fd <open@plt+0xebd>
  403218:	jmp    40321b <open@plt+0x9db>
  40321a:	nop
  40321b:	mov    rax,QWORD PTR [rbp-0xb8]
  403222:	xor    rax,QWORD PTR fs:0x28
  40322b:	je     403232 <open@plt+0x9f2>
  40322d:	call   402710 <__stack_chk_fail@plt>
  403232:	leave  
  403233:	ret    
  403234:	endbr64 
  403238:	push   rbp
  403239:	mov    rbp,rsp
  40323c:	sub    rsp,0x30
  403240:	mov    QWORD PTR [rbp-0x18],rdi
  403244:	mov    QWORD PTR [rbp-0x20],rsi
  403248:	mov    QWORD PTR [rbp-0x28],rdx
  40324c:	mov    edi,0x78
  403251:	call   402c34 <open@plt+0x3f4>
  403256:	mov    QWORD PTR [rbp-0x8],rax
  40325a:	mov    rax,QWORD PTR [rbp-0x8]
  40325e:	mov    rdx,QWORD PTR [rbp-0x18]
  403262:	mov    QWORD PTR [rax+0x18],rdx
  403266:	call   402740 <rb_new_rawbuffer@plt>
  40326b:	mov    rdx,rax
  40326e:	mov    rax,QWORD PTR [rbp-0x8]
  403272:	mov    QWORD PTR [rax+0x20],rdx
  403276:	call   402740 <rb_new_rawbuffer@plt>
  40327b:	mov    rdx,rax
  40327e:	mov    rax,QWORD PTR [rbp-0x8]
  403282:	mov    QWORD PTR [rax+0x28],rdx
  403286:	mov    rax,QWORD PTR [rbp-0x8]
  40328a:	mov    rdx,QWORD PTR [rbp-0x20]
  40328e:	mov    QWORD PTR [rax+0x38],rdx
  403292:	mov    rax,QWORD PTR [rbp-0x8]
  403296:	mov    rdx,QWORD PTR [rbp-0x28]
  40329a:	mov    QWORD PTR [rax+0x40],rdx
  40329e:	mov    rax,QWORD PTR [rbp-0x8]
  4032a2:	mov    DWORD PTR [rax+0x30],0xffffffff
  4032a9:	mov    rax,QWORD PTR [rbp-0x8]
  4032ad:	mov    QWORD PTR [rax+0x70],0x0
  4032b5:	mov    rax,QWORD PTR [rbp-0x20]
  4032b9:	mov    rdi,rax
  4032bc:	call   402560 <rb_set_nb@plt>
  4032c1:	mov    rax,QWORD PTR [rbp-0x28]
  4032c5:	mov    rdi,rax
  4032c8:	call   402560 <rb_set_nb@plt>
  4032cd:	mov    rax,QWORD PTR [rbp-0x8]
  4032d1:	leave  
  4032d2:	ret    
  4032d3:	endbr64 
  4032d7:	push   rbp
  4032d8:	mov    rbp,rsp
  4032db:	sub    rsp,0x30
  4032df:	mov    QWORD PTR [rbp-0x28],rdi
  4032e3:	mov    DWORD PTR [rbp-0x20],0x0
  4032ea:	jmp    4033cb <open@plt+0xb8b>
  4032ef:	mov    eax,DWORD PTR [rbp-0x20]
  4032f2:	movsxd rdx,eax
  4032f5:	mov    rax,rdx
  4032f8:	add    rax,rax
  4032fb:	add    rax,rdx
  4032fe:	shl    rax,0x3
  403302:	mov    rdx,rax
  403305:	lea    rax,[rip+0x4f94]        # 4082a0 <open@plt+0x5a60>
  40330c:	mov    rax,QWORD PTR [rdx+rax*1]
  403310:	mov    QWORD PTR [rbp-0x18],rax
  403314:	cmp    QWORD PTR [rbp-0x18],0x0
  403319:	je     403325 <open@plt+0xae5>
  40331b:	mov    rax,QWORD PTR [rbp-0x18]
  40331f:	mov    rax,QWORD PTR [rax+0x10]
  403323:	jmp    40332a <open@plt+0xaea>
  403325:	mov    eax,0x0
  40332a:	mov    QWORD PTR [rbp-0x10],rax
  40332e:	jmp    4033bd <open@plt+0xb7d>
  403333:	mov    rax,QWORD PTR [rbp-0x18]
  403337:	mov    rax,QWORD PTR [rax]
  40333a:	mov    QWORD PTR [rbp-0x8],rax
  40333e:	mov    rax,QWORD PTR [rbp-0x8]
  403342:	movzx  eax,BYTE PTR [rax+0x68]
  403346:	movzx  eax,al
  403349:	and    eax,0x1
  40334c:	test   eax,eax
  40334e:	je     40339a <open@plt+0xb5a>
  403350:	mov    rax,QWORD PTR [rbp-0x8]
  403354:	mov    rax,QWORD PTR [rax+0x38]
  403358:	mov    rdi,rax
  40335b:	call   4024f0 <rb_ssl_handshake_count@plt>
  403360:	mov    DWORD PTR [rbp-0x1c],eax
  403363:	cmp    DWORD PTR [rbp-0x1c],0x2
  403367:	jbe    403388 <open@plt+0xb48>
  403369:	mov    rax,QWORD PTR [rbp-0x8]
  40336d:	lea    rdx,[rip+0x2cfe]        # 406072 <open@plt+0x3832>
  403374:	mov    esi,0x1
  403379:	mov    rdi,rax
  40337c:	mov    eax,0x0
  403381:	call   402f4e <open@plt+0x70e>
  403386:	jmp    40339b <open@plt+0xb5b>
  403388:	mov    rax,QWORD PTR [rbp-0x8]
  40338c:	mov    rax,QWORD PTR [rax+0x38]
  403390:	mov    rdi,rax
  403393:	call   402650 <rb_ssl_clear_handshake_count@plt>
  403398:	jmp    40339b <open@plt+0xb5b>
  40339a:	nop
  40339b:	mov    rax,QWORD PTR [rbp-0x10]
  40339f:	mov    QWORD PTR [rbp-0x18],rax
  4033a3:	cmp    QWORD PTR [rbp-0x18],0x0
  4033a8:	je     4033b4 <open@plt+0xb74>
  4033aa:	mov    rax,QWORD PTR [rbp-0x18]
  4033ae:	mov    rax,QWORD PTR [rax+0x10]
  4033b2:	jmp    4033b9 <open@plt+0xb79>
  4033b4:	mov    eax,0x0
  4033b9:	mov    QWORD PTR [rbp-0x10],rax
  4033bd:	cmp    QWORD PTR [rbp-0x18],0x0
  4033c2:	jne    403333 <open@plt+0xaf3>
  4033c8:	inc    DWORD PTR [rbp-0x20]
  4033cb:	cmp    DWORD PTR [rbp-0x20],0x7cf
  4033d2:	jle    4032ef <open@plt+0xaaf>
  4033d8:	nop
  4033d9:	leave  
  4033da:	ret    
  4033db:	endbr64 
  4033df:	push   rbp
  4033e0:	mov    rbp,rsp
  4033e3:	sub    rsp,0x30
  4033e7:	mov    QWORD PTR [rbp-0x28],rdi
  4033eb:	mov    QWORD PTR [rbp-0x30],rsi
  4033ef:	mov    rax,QWORD PTR [rbp-0x30]
  4033f3:	mov    QWORD PTR [rbp-0x8],rax
  4033f7:	mov    rax,QWORD PTR [rbp-0x8]
  4033fb:	movzx  eax,BYTE PTR [rax+0x68]
  4033ff:	movzx  eax,al
  403402:	and    eax,0x8
  403405:	test   eax,eax
  403407:	jne    40365f <open@plt+0xe1f>
  40340d:	mov    rax,QWORD PTR [rbp-0x8]
  403411:	movzx  eax,BYTE PTR [rax+0x68]
  403415:	movzx  eax,al
  403418:	and    eax,0x10
  40341b:	test   eax,eax
  40341d:	je     403478 <open@plt+0xc38>
  40341f:	mov    rax,QWORD PTR [rbp-0x8]
  403423:	movzx  eax,BYTE PTR [rax+0x68]
  403427:	and    eax,0xffffffef
  40342a:	mov    rdx,QWORD PTR [rbp-0x8]
  40342e:	mov    BYTE PTR [rdx+0x68],al
  403431:	mov    rax,QWORD PTR [rbp-0x8]
  403435:	mov    rax,QWORD PTR [rax+0x38]
  403439:	mov    rdx,QWORD PTR [rbp-0x8]
  40343d:	mov    rsi,rdx
  403440:	mov    rdi,rax
  403443:	call   403f74 <open@plt+0x1734>
  403448:	mov    rax,QWORD PTR [rbp-0x8]
  40344c:	movzx  eax,BYTE PTR [rax+0x68]
  403450:	movzx  eax,al
  403453:	and    eax,0x8
  403456:	test   eax,eax
  403458:	jne    403662 <open@plt+0xe22>
  40345e:	jmp    403478 <open@plt+0xc38>
  403460:	mov    rax,QWORD PTR [rbp-0x8]
  403464:	mov    rdx,QWORD PTR [rax+0x48]
  403468:	mov    eax,DWORD PTR [rbp-0x14]
  40346b:	cdqe   
  40346d:	add    rdx,rax
  403470:	mov    rax,QWORD PTR [rbp-0x8]
  403474:	mov    QWORD PTR [rax+0x48],rdx
  403478:	mov    rax,QWORD PTR [rbp-0x8]
  40347c:	mov    rax,QWORD PTR [rax+0x20]
  403480:	mov    rdx,QWORD PTR [rbp-0x28]
  403484:	mov    rsi,rdx
  403487:	mov    rdi,rax
  40348a:	call   402810 <rb_rawbuf_flush@plt>
  40348f:	mov    DWORD PTR [rbp-0x14],eax
  403492:	cmp    DWORD PTR [rbp-0x14],0x0
  403496:	jg     403460 <open@plt+0xc20>
  403498:	cmp    DWORD PTR [rbp-0x14],0x0
  40349c:	je     4034be <open@plt+0xc7e>
  40349e:	cmp    DWORD PTR [rbp-0x14],0x0
  4034a2:	jns    403554 <open@plt+0xd14>
  4034a8:	call   4026e0 <__errno_location@plt>
  4034ad:	mov    eax,DWORD PTR [rax]
  4034af:	mov    edi,eax
  4034b1:	call   402490 <rb_ignore_errno@plt>
  4034b6:	test   eax,eax
  4034b8:	jne    403554 <open@plt+0xd14>
  4034be:	cmp    DWORD PTR [rbp-0x14],0x0
  4034c2:	jne    4034eb <open@plt+0xcab>
  4034c4:	mov    rdx,QWORD PTR [rip+0x4d6d]        # 408238 <open@plt+0x59f8>
  4034cb:	mov    rax,QWORD PTR [rbp-0x8]
  4034cf:	mov    rcx,rdx
  4034d2:	lea    rdx,[rip+0x2bac]        # 406085 <open@plt+0x3845>
  4034d9:	mov    esi,0x1
  4034de:	mov    rdi,rax
  4034e1:	mov    eax,0x0
  4034e6:	call   402f4e <open@plt+0x70e>
  4034eb:	mov    rax,QWORD PTR [rbp-0x8]
  4034ef:	movzx  eax,BYTE PTR [rax+0x68]
  4034f3:	movzx  eax,al
  4034f6:	and    eax,0x1
  4034f9:	test   eax,eax
  4034fb:	je     403519 <open@plt+0xcd9>
  4034fd:	cmp    DWORD PTR [rbp-0x14],0xfffffffe
  403501:	jne    403519 <open@plt+0xcd9>
  403503:	mov    rax,QWORD PTR [rbp-0x8]
  403507:	mov    rax,QWORD PTR [rax+0x38]
  40350b:	mov    rdi,rax
  40350e:	call   402690 <rb_get_ssl_strerror@plt>
  403513:	mov    QWORD PTR [rbp-0x10],rax
  403517:	jmp    40352b <open@plt+0xceb>
  403519:	call   4026e0 <__errno_location@plt>
  40351e:	mov    eax,DWORD PTR [rax]
  403520:	mov    edi,eax
  403522:	call   402620 <strerror@plt>
  403527:	mov    QWORD PTR [rbp-0x10],rax
  40352b:	mov    rdx,QWORD PTR [rbp-0x10]
  40352f:	mov    rax,QWORD PTR [rbp-0x8]
  403533:	mov    rcx,rdx
  403536:	lea    rdx,[rip+0x2b4b]        # 406088 <open@plt+0x3848>
  40353d:	mov    esi,0x1
  403542:	mov    rdi,rax
  403545:	mov    eax,0x0
  40354a:	call   402f4e <open@plt+0x70e>
  40354f:	jmp    403663 <open@plt+0xe23>
  403554:	mov    rax,QWORD PTR [rbp-0x8]
  403558:	mov    rax,QWORD PTR [rax+0x20]
  40355c:	mov    rdi,rax
  40355f:	call   402670 <rb_rawbuf_length@plt>
  403564:	test   eax,eax
  403566:	jle    4035ef <open@plt+0xdaf>
  40356c:	cmp    DWORD PTR [rbp-0x14],0xfffffffd
  403570:	je     403597 <open@plt+0xd57>
  403572:	mov    rax,QWORD PTR [rbp-0x8]
  403576:	mov    rax,QWORD PTR [rax+0x38]
  40357a:	mov    rdx,QWORD PTR [rbp-0x8]
  40357e:	mov    rcx,rdx
  403581:	lea    rdx,[rip+0xfffffffffffffe53]        # 4033db <open@plt+0xb9b>
  403588:	mov    esi,0x2
  40358d:	mov    rdi,rax
  403590:	call   4024e0 <rb_setselect@plt>
  403595:	jmp    40360e <open@plt+0xdce>
  403597:	mov    rax,QWORD PTR [rbp-0x8]
  40359b:	mov    rax,QWORD PTR [rax+0x38]
  40359f:	mov    rdx,QWORD PTR [rbp-0x8]
  4035a3:	mov    rcx,rdx
  4035a6:	lea    rdx,[rip+0xfffffffffffffe2e]        # 4033db <open@plt+0xb9b>
  4035ad:	mov    esi,0x1
  4035b2:	mov    rdi,rax
  4035b5:	call   4024e0 <rb_setselect@plt>
  4035ba:	mov    rax,QWORD PTR [rbp-0x8]
  4035be:	mov    rax,QWORD PTR [rax+0x38]
  4035c2:	mov    ecx,0x0
  4035c7:	mov    edx,0x0
  4035cc:	mov    esi,0x2
  4035d1:	mov    rdi,rax
  4035d4:	call   4024e0 <rb_setselect@plt>
  4035d9:	mov    rax,QWORD PTR [rbp-0x8]
  4035dd:	movzx  eax,BYTE PTR [rax+0x68]
  4035e1:	or     eax,0x10
  4035e4:	mov    edx,eax
  4035e6:	mov    rax,QWORD PTR [rbp-0x8]
  4035ea:	mov    BYTE PTR [rax+0x68],dl
  4035ed:	jmp    40360e <open@plt+0xdce>
  4035ef:	mov    rax,QWORD PTR [rbp-0x8]
  4035f3:	mov    rax,QWORD PTR [rax+0x38]
  4035f7:	mov    ecx,0x0
  4035fc:	mov    edx,0x0
  403601:	mov    esi,0x2
  403606:	mov    rdi,rax
  403609:	call   4024e0 <rb_setselect@plt>
  40360e:	mov    rax,QWORD PTR [rbp-0x8]
  403612:	movzx  eax,BYTE PTR [rax+0x68]
  403616:	movzx  eax,al
  403619:	and    eax,0x4
  40361c:	test   eax,eax
  40361e:	je     403663 <open@plt+0xe23>
  403620:	mov    rax,QWORD PTR [rbp-0x8]
  403624:	mov    rax,QWORD PTR [rax+0x20]
  403628:	mov    rdi,rax
  40362b:	call   402670 <rb_rawbuf_length@plt>
  403630:	test   eax,eax
  403632:	jne    403663 <open@plt+0xe23>
  403634:	mov    rax,QWORD PTR [rbp-0x8]
  403638:	movzx  eax,BYTE PTR [rax+0x68]
  40363c:	and    eax,0xfffffffb
  40363f:	mov    rdx,QWORD PTR [rbp-0x8]
  403643:	mov    BYTE PTR [rdx+0x68],al
  403646:	mov    rax,QWORD PTR [rbp-0x8]
  40364a:	mov    rax,QWORD PTR [rax+0x40]
  40364e:	mov    rdx,QWORD PTR [rbp-0x8]
  403652:	mov    rsi,rdx
  403655:	mov    rdi,rax
  403658:	call   403bf9 <open@plt+0x13b9>
  40365d:	jmp    403663 <open@plt+0xe23>
  40365f:	nop
  403660:	jmp    403663 <open@plt+0xe23>
  403662:	nop
  403663:	leave  
  403664:	ret    
  403665:	endbr64 
  403669:	push   rbp
  40366a:	mov    rbp,rsp
  40366d:	sub    rsp,0x20
  403671:	mov    QWORD PTR [rbp-0x8],rdi
  403675:	mov    QWORD PTR [rbp-0x10],rsi
  403679:	mov    QWORD PTR [rbp-0x18],rdx
  40367d:	mov    rax,QWORD PTR [rbp-0x8]
  403681:	movzx  eax,BYTE PTR [rax+0x68]
  403685:	movzx  eax,al
  403688:	and    eax,0x8
  40368b:	test   eax,eax
  40368d:	jne    4036ae <open@plt+0xe6e>
  40368f:	mov    rax,QWORD PTR [rbp-0x18]
  403693:	mov    edx,eax
  403695:	mov    rax,QWORD PTR [rbp-0x8]
  403699:	mov    rax,QWORD PTR [rax+0x20]
  40369d:	mov    rcx,QWORD PTR [rbp-0x10]
  4036a1:	mov    rsi,rcx
  4036a4:	mov    rdi,rax
  4036a7:	call   402800 <rb_rawbuf_append@plt>
  4036ac:	jmp    4036af <open@plt+0xe6f>
  4036ae:	nop
  4036af:	leave  
  4036b0:	ret    
  4036b1:	endbr64 
  4036b5:	push   rbp
  4036b6:	mov    rbp,rsp
  4036b9:	sub    rsp,0x20
  4036bd:	mov    QWORD PTR [rbp-0x8],rdi
  4036c1:	mov    QWORD PTR [rbp-0x10],rsi
  4036c5:	mov    QWORD PTR [rbp-0x18],rdx
  4036c9:	mov    rax,QWORD PTR [rbp-0x8]
  4036cd:	movzx  eax,BYTE PTR [rax+0x68]
  4036d1:	movzx  eax,al
  4036d4:	and    eax,0x8
  4036d7:	test   eax,eax
  4036d9:	jne    4036fa <open@plt+0xeba>
  4036db:	mov    rax,QWORD PTR [rbp-0x18]
  4036df:	mov    edx,eax
  4036e1:	mov    rax,QWORD PTR [rbp-0x8]
  4036e5:	mov    rax,QWORD PTR [rax+0x28]
  4036e9:	mov    rcx,QWORD PTR [rbp-0x10]
  4036ed:	mov    rsi,rcx
  4036f0:	mov    rdi,rax
  4036f3:	call   402800 <rb_rawbuf_append@plt>
  4036f8:	jmp    4036fb <open@plt+0xebb>
  4036fa:	nop
  4036fb:	leave  
  4036fc:	ret    
  4036fd:	endbr64 
  403701:	push   rbp
  403702:	mov    rbp,rsp
  403705:	sub    rsp,0x30
  403709:	mov    QWORD PTR [rbp-0x18],rdi
  40370d:	mov    QWORD PTR [rbp-0x20],rsi
  403711:	mov    QWORD PTR [rbp-0x28],rdx
  403715:	mov    edi,0x50
  40371a:	call   402c34 <open@plt+0x3f4>
  40371f:	mov    QWORD PTR [rbp-0x8],rax
  403723:	mov    rax,QWORD PTR [rbp-0x28]
  403727:	mov    rdi,rax
  40372a:	call   402c34 <open@plt+0x3f4>
  40372f:	mov    rdx,rax
  403732:	mov    rax,QWORD PTR [rbp-0x8]
  403736:	mov    QWORD PTR [rax+0x18],rdx
  40373a:	mov    rax,QWORD PTR [rbp-0x8]
  40373e:	mov    rdx,QWORD PTR [rbp-0x28]
  403742:	mov    QWORD PTR [rax+0x20],rdx
  403746:	mov    rax,QWORD PTR [rbp-0x8]
  40374a:	mov    rax,QWORD PTR [rax+0x18]
  40374e:	mov    rdx,QWORD PTR [rbp-0x28]
  403752:	mov    rcx,QWORD PTR [rbp-0x20]
  403756:	mov    rsi,rcx
  403759:	mov    rdi,rax
  40375c:	call   402830 <memcpy@plt>
  403761:	mov    rax,QWORD PTR [rbp-0x8]
  403765:	mov    DWORD PTR [rax+0x48],0x0
  40376c:	mov    rax,QWORD PTR [rbp-0x18]
  403770:	lea    rdx,[rax+0x48]
  403774:	mov    rcx,QWORD PTR [rbp-0x8]
  403778:	mov    rax,QWORD PTR [rbp-0x8]
  40377c:	mov    rsi,rcx
  40377f:	mov    rdi,rax
  403782:	call   402a3a <open@plt+0x1fa>
  403787:	mov    rax,QWORD PTR [rbp-0x18]
  40378b:	mov    rax,QWORD PTR [rax+0x20]
  40378f:	mov    rdx,QWORD PTR [rbp-0x18]
  403793:	mov    rsi,rdx
  403796:	mov    rdi,rax
  403799:	call   405548 <open@plt+0x2d08>
  40379e:	nop
  40379f:	leave  
  4037a0:	ret    
  4037a1:	endbr64 
  4037a5:	push   rbp
  4037a6:	mov    rbp,rsp
  4037a9:	lea    r11,[rsp-0x4000]
  4037b1:	sub    rsp,0x1000
  4037b8:	or     QWORD PTR [rsp],0x0
  4037bd:	cmp    rsp,r11
  4037c0:	jne    4037b1 <open@plt+0xf71>
  4037c2:	sub    rsp,0x40
  4037c6:	mov    QWORD PTR [rbp-0x4028],rdi
  4037cd:	mov    QWORD PTR [rbp-0x4030],rsi
  4037d4:	mov    QWORD PTR [rbp-0x4038],rdx
  4037db:	mov    rax,QWORD PTR fs:0x28
  4037e4:	mov    QWORD PTR [rbp-0x8],rax
  4037e8:	xor    eax,eax
  4037ea:	mov    rax,QWORD PTR [rbp-0x4028]
  4037f1:	mov    rax,QWORD PTR [rax+0x70]
  4037f5:	add    rax,0x70
  4037f9:	mov    QWORD PTR [rbp-0x4018],rax
  403800:	mov    rax,QWORD PTR [rbp-0x4018]
  403807:	mov    rdx,QWORD PTR [rbp-0x4030]
  40380e:	mov    QWORD PTR [rax],rdx
  403811:	mov    rax,QWORD PTR [rbp-0x4038]
  403818:	mov    edx,eax
  40381a:	mov    rax,QWORD PTR [rbp-0x4018]
  403821:	mov    DWORD PTR [rax+0x8],edx
  403824:	mov    rax,QWORD PTR [rbp-0x4018]
  40382b:	lea    rdx,[rbp-0x4010]
  403832:	mov    QWORD PTR [rax+0x18],rdx
  403836:	mov    rax,QWORD PTR [rbp-0x4018]
  40383d:	mov    DWORD PTR [rax+0x20],0x4000
  403844:	mov    rax,QWORD PTR [rbp-0x4018]
  40384b:	mov    esi,0x2
  403850:	mov    rdi,rax
  403853:	call   402530 <deflate@plt>
  403858:	mov    DWORD PTR [rbp-0x4020],eax
  40385e:	cmp    DWORD PTR [rbp-0x4020],0x0
  403865:	je     40389f <open@plt+0x105f>
  403867:	mov    eax,DWORD PTR [rbp-0x4020]
  40386d:	mov    edi,eax
  40386f:	call   402470 <zError@plt>
  403874:	mov    rdx,rax
  403877:	mov    rax,QWORD PTR [rbp-0x4028]
  40387e:	mov    rcx,rdx
  403881:	lea    rdx,[rip+0x2810]        # 406098 <open@plt+0x3858>
  403888:	mov    esi,0x1
  40388d:	mov    rdi,rax
  403890:	mov    eax,0x0
  403895:	call   402f4e <open@plt+0x70e>
  40389a:	jmp    40393a <open@plt+0x10fa>
  40389f:	mov    rax,QWORD PTR [rbp-0x4018]
  4038a6:	mov    eax,DWORD PTR [rax+0x20]
  4038a9:	test   eax,eax
  4038ab:	jne    4038cf <open@plt+0x108f>
  4038ad:	mov    rax,QWORD PTR [rbp-0x4028]
  4038b4:	lea    rdx,[rip+0x27f5]        # 4060b0 <open@plt+0x3870>
  4038bb:	mov    esi,0x1
  4038c0:	mov    rdi,rax
  4038c3:	mov    eax,0x0
  4038c8:	call   402f4e <open@plt+0x70e>
  4038cd:	jmp    40393a <open@plt+0x10fa>
  4038cf:	mov    rax,QWORD PTR [rbp-0x4018]
  4038d6:	mov    eax,DWORD PTR [rax+0x8]
  4038d9:	test   eax,eax
  4038db:	je     4038ff <open@plt+0x10bf>
  4038dd:	mov    rax,QWORD PTR [rbp-0x4028]
  4038e4:	lea    rdx,[rip+0x27ed]        # 4060d8 <open@plt+0x3898>
  4038eb:	mov    esi,0x1
  4038f0:	mov    rdi,rax
  4038f3:	mov    eax,0x0
  4038f8:	call   402f4e <open@plt+0x70e>
  4038fd:	jmp    40393a <open@plt+0x10fa>
  4038ff:	mov    rax,QWORD PTR [rbp-0x4018]
  403906:	mov    eax,DWORD PTR [rax+0x20]
  403909:	mov    edx,0x4000
  40390e:	sub    edx,eax
  403910:	mov    eax,edx
  403912:	mov    DWORD PTR [rbp-0x401c],eax
  403918:	mov    eax,DWORD PTR [rbp-0x401c]
  40391e:	movsxd rdx,eax
  403921:	lea    rcx,[rbp-0x4010]
  403928:	mov    rax,QWORD PTR [rbp-0x4028]
  40392f:	mov    rsi,rcx
  403932:	mov    rdi,rax
  403935:	call   403665 <open@plt+0xe25>
  40393a:	mov    rax,QWORD PTR [rbp-0x8]
  40393e:	xor    rax,QWORD PTR fs:0x28
  403947:	je     40394e <open@plt+0x110e>
  403949:	call   402710 <__stack_chk_fail@plt>
  40394e:	leave  
  40394f:	ret    
  403950:	endbr64 
  403954:	push   rbp
  403955:	mov    rbp,rsp
  403958:	lea    r11,[rsp-0x4000]
  403960:	sub    rsp,0x1000
  403967:	or     QWORD PTR [rsp],0x0
  40396c:	cmp    rsp,r11
  40396f:	jne    403960 <open@plt+0x1120>
  403971:	sub    rsp,0x40
  403975:	mov    QWORD PTR [rbp-0x4028],rdi
  40397c:	mov    QWORD PTR [rbp-0x4030],rsi
  403983:	mov    QWORD PTR [rbp-0x4038],rdx
  40398a:	mov    rax,QWORD PTR fs:0x28
  403993:	mov    QWORD PTR [rbp-0x8],rax
  403997:	xor    eax,eax
  403999:	mov    DWORD PTR [rbp-0x4018],0x0
  4039a3:	mov    rax,QWORD PTR [rbp-0x4028]
  4039aa:	mov    rax,QWORD PTR [rax+0x70]
  4039ae:	mov    rdx,QWORD PTR [rbp-0x4030]
  4039b5:	mov    QWORD PTR [rax],rdx
  4039b8:	mov    rax,QWORD PTR [rbp-0x4028]
  4039bf:	mov    rax,QWORD PTR [rax+0x70]
  4039c3:	mov    rdx,QWORD PTR [rbp-0x4038]
  4039ca:	mov    DWORD PTR [rax+0x8],edx
  4039cd:	mov    rax,QWORD PTR [rbp-0x4028]
  4039d4:	mov    rax,QWORD PTR [rax+0x70]
  4039d8:	lea    rdx,[rbp-0x4010]
  4039df:	mov    QWORD PTR [rax+0x18],rdx
  4039e3:	mov    rax,QWORD PTR [rbp-0x4028]
  4039ea:	mov    rax,QWORD PTR [rax+0x70]
  4039ee:	mov    DWORD PTR [rax+0x20],0x4000
  4039f5:	jmp    403b20 <open@plt+0x12e0>
  4039fa:	mov    rax,QWORD PTR [rbp-0x4028]
  403a01:	mov    rax,QWORD PTR [rax+0x70]
  403a05:	mov    esi,0x0
  403a0a:	mov    rdi,rax
  403a0d:	call   402590 <inflate@plt>
  403a12:	mov    DWORD PTR [rbp-0x4014],eax
  403a18:	cmp    DWORD PTR [rbp-0x4014],0x0
  403a1f:	je     403a9d <open@plt+0x125d>
  403a21:	mov    rax,QWORD PTR [rbp-0x4030]
  403a28:	mov    edx,0x6
  403a2d:	mov    rsi,rax
  403a30:	lea    rdi,[rip+0x26c7]        # 4060fe <open@plt+0x38be>
  403a37:	call   402550 <strncmp@plt>
  403a3c:	test   eax,eax
  403a3e:	jne    403a65 <open@plt+0x1225>
  403a40:	mov    rax,QWORD PTR [rbp-0x4028]
  403a47:	lea    rdx,[rip+0x26b7]        # 406105 <open@plt+0x38c5>
  403a4e:	mov    esi,0x1
  403a53:	mov    rdi,rax
  403a56:	mov    eax,0x0
  403a5b:	call   402f4e <open@plt+0x70e>
  403a60:	jmp    403b64 <open@plt+0x1324>
  403a65:	mov    eax,DWORD PTR [rbp-0x4014]
  403a6b:	mov    edi,eax
  403a6d:	call   402470 <zError@plt>
  403a72:	mov    rdx,rax
  403a75:	mov    rax,QWORD PTR [rbp-0x4028]
  403a7c:	mov    rcx,rdx
  403a7f:	lea    rdx,[rip+0x269b]        # 406121 <open@plt+0x38e1>
  403a86:	mov    esi,0x1
  403a8b:	mov    rdi,rax
  403a8e:	mov    eax,0x0
  403a93:	call   402f4e <open@plt+0x70e>
  403a98:	jmp    403b64 <open@plt+0x1324>
  403a9d:	mov    rax,QWORD PTR [rbp-0x4028]
  403aa4:	mov    rax,QWORD PTR [rax+0x70]
  403aa8:	mov    eax,DWORD PTR [rax+0x20]
  403aab:	mov    edx,0x4000
  403ab0:	sub    edx,eax
  403ab2:	mov    eax,edx
  403ab4:	mov    DWORD PTR [rbp-0x4018],eax
  403aba:	mov    rax,QWORD PTR [rbp-0x4028]
  403ac1:	mov    rax,QWORD PTR [rax+0x70]
  403ac5:	mov    eax,DWORD PTR [rax+0x8]
  403ac8:	test   eax,eax
  403aca:	je     403b20 <open@plt+0x12e0>
  403acc:	mov    eax,DWORD PTR [rbp-0x4018]
  403ad2:	movsxd rdx,eax
  403ad5:	lea    rcx,[rbp-0x4010]
  403adc:	mov    rax,QWORD PTR [rbp-0x4028]
  403ae3:	mov    rsi,rcx
  403ae6:	mov    rdi,rax
  403ae9:	call   4036b1 <open@plt+0xe71>
  403aee:	mov    DWORD PTR [rbp-0x4018],0x0
  403af8:	mov    rax,QWORD PTR [rbp-0x4028]
  403aff:	mov    rax,QWORD PTR [rax+0x70]
  403b03:	lea    rdx,[rbp-0x4010]
  403b0a:	mov    QWORD PTR [rax+0x18],rdx
  403b0e:	mov    rax,QWORD PTR [rbp-0x4028]
  403b15:	mov    rax,QWORD PTR [rax+0x70]
  403b19:	mov    DWORD PTR [rax+0x20],0x4000
  403b20:	mov    rax,QWORD PTR [rbp-0x4028]
  403b27:	mov    rax,QWORD PTR [rax+0x70]
  403b2b:	mov    eax,DWORD PTR [rax+0x8]
  403b2e:	test   eax,eax
  403b30:	jne    4039fa <open@plt+0x11ba>
  403b36:	cmp    DWORD PTR [rbp-0x4018],0x0
  403b3d:	je     403b63 <open@plt+0x1323>
  403b3f:	mov    eax,DWORD PTR [rbp-0x4018]
  403b45:	movsxd rdx,eax
  403b48:	lea    rcx,[rbp-0x4010]
  403b4f:	mov    rax,QWORD PTR [rbp-0x4028]
  403b56:	mov    rsi,rcx
  403b59:	mov    rdi,rax
  403b5c:	call   4036b1 <open@plt+0xe71>
  403b61:	jmp    403b64 <open@plt+0x1324>
  403b63:	nop
  403b64:	mov    rax,QWORD PTR [rbp-0x8]
  403b68:	xor    rax,QWORD PTR fs:0x28
  403b71:	je     403b78 <open@plt+0x1338>
  403b73:	call   402710 <__stack_chk_fail@plt>
  403b78:	leave  
  403b79:	ret    
  403b7a:	endbr64 
  403b7e:	push   rbp
  403b7f:	mov    rbp,rsp
  403b82:	sub    rsp,0x10
  403b86:	mov    QWORD PTR [rbp-0x8],rdi
  403b8a:	mov    rax,QWORD PTR [rbp-0x8]
  403b8e:	mov    rax,QWORD PTR [rax+0x20]
  403b92:	mov    rdi,rax
  403b95:	call   402670 <rb_rawbuf_length@plt>
  403b9a:	cmp    eax,0xfff
  403b9f:	jle    403bf2 <open@plt+0x13b2>
  403ba1:	mov    rax,QWORD PTR [rbp-0x8]
  403ba5:	movzx  eax,BYTE PTR [rax+0x68]
  403ba9:	or     eax,0x4
  403bac:	mov    edx,eax
  403bae:	mov    rax,QWORD PTR [rbp-0x8]
  403bb2:	mov    BYTE PTR [rax+0x68],dl
  403bb5:	mov    rax,QWORD PTR [rbp-0x8]
  403bb9:	mov    rax,QWORD PTR [rax+0x40]
  403bbd:	mov    ecx,0x0
  403bc2:	mov    edx,0x0
  403bc7:	mov    esi,0x1
  403bcc:	mov    rdi,rax
  403bcf:	call   4024e0 <rb_setselect@plt>
  403bd4:	mov    rax,QWORD PTR [rbp-0x8]
  403bd8:	mov    rax,QWORD PTR [rax+0x38]
  403bdc:	mov    rdx,QWORD PTR [rbp-0x8]
  403be0:	mov    rsi,rdx
  403be3:	mov    rdi,rax
  403be6:	call   4033db <open@plt+0xb9b>
  403beb:	mov    eax,0x1
  403bf0:	jmp    403bf7 <open@plt+0x13b7>
  403bf2:	mov    eax,0x0
  403bf7:	leave  
  403bf8:	ret    
  403bf9:	endbr64 
  403bfd:	push   rbp
  403bfe:	mov    rbp,rsp
  403c01:	lea    r11,[rsp-0x4000]
  403c09:	sub    rsp,0x1000
  403c10:	or     QWORD PTR [rsp],0x0
  403c15:	cmp    rsp,r11
  403c18:	jne    403c09 <open@plt+0x13c9>
  403c1a:	sub    rsp,0x30
  403c1e:	mov    QWORD PTR [rbp-0x4028],rdi
  403c25:	mov    QWORD PTR [rbp-0x4030],rsi
  403c2c:	mov    rax,QWORD PTR fs:0x28
  403c35:	mov    QWORD PTR [rbp-0x8],rax
  403c39:	xor    eax,eax
  403c3b:	mov    rax,QWORD PTR [rbp-0x4030]
  403c42:	mov    QWORD PTR [rbp-0x4018],rax
  403c49:	mov    DWORD PTR [rbp-0x401c],0x0
  403c53:	cmp    QWORD PTR [rbp-0x4018],0x0
  403c5b:	je     403e16 <open@plt+0x15d6>
  403c61:	mov    rax,QWORD PTR [rbp-0x4018]
  403c68:	movzx  eax,BYTE PTR [rax+0x68]
  403c6c:	movzx  eax,al
  403c6f:	and    eax,0x8
  403c72:	test   eax,eax
  403c74:	jne    403e19 <open@plt+0x15d9>
  403c7a:	mov    rax,QWORD PTR [rbp-0x4018]
  403c81:	mov    rdi,rax
  403c84:	call   403b7a <open@plt+0x133a>
  403c89:	test   al,al
  403c8b:	jne    403e1c <open@plt+0x15dc>
  403c91:	mov    rax,QWORD PTR [rbp-0x4018]
  403c98:	movzx  eax,BYTE PTR [rax+0x68]
  403c9c:	movzx  eax,al
  403c9f:	and    eax,0x8
  403ca2:	test   eax,eax
  403ca4:	jne    403e1f <open@plt+0x15df>
  403caa:	mov    rax,QWORD PTR [rbp-0x4018]
  403cb1:	mov    rax,QWORD PTR [rax+0x40]
  403cb5:	lea    rcx,[rbp-0x4010]
  403cbc:	mov    edx,0x4000
  403cc1:	mov    rsi,rcx
  403cc4:	mov    rdi,rax
  403cc7:	call   4025f0 <rb_read@plt>
  403ccc:	mov    DWORD PTR [rbp-0x401c],eax
  403cd2:	cmp    DWORD PTR [rbp-0x401c],0x0
  403cd9:	je     403cf6 <open@plt+0x14b6>
  403cdb:	cmp    DWORD PTR [rbp-0x401c],0x0
  403ce2:	jns    403d19 <open@plt+0x14d9>
  403ce4:	call   4026e0 <__errno_location@plt>
  403ce9:	mov    eax,DWORD PTR [rax]
  403ceb:	mov    edi,eax
  403ced:	call   402490 <rb_ignore_errno@plt>
  403cf2:	test   eax,eax
  403cf4:	jne    403d19 <open@plt+0x14d9>
  403cf6:	mov    rax,QWORD PTR [rbp-0x4018]
  403cfd:	mov    edx,0x0
  403d02:	mov    esi,0x0
  403d07:	mov    rdi,rax
  403d0a:	mov    eax,0x0
  403d0f:	call   402f4e <open@plt+0x70e>
  403d14:	jmp    403e26 <open@plt+0x15e6>
  403d19:	cmp    DWORD PTR [rbp-0x401c],0x0
  403d20:	jns    403d6d <open@plt+0x152d>
  403d22:	mov    rax,QWORD PTR [rbp-0x4018]
  403d29:	mov    rax,QWORD PTR [rax+0x40]
  403d2d:	mov    rdx,QWORD PTR [rbp-0x4018]
  403d34:	mov    rcx,rdx
  403d37:	lea    rdx,[rip+0xfffffffffffffebb]        # 403bf9 <open@plt+0x13b9>
  403d3e:	mov    esi,0x1
  403d43:	mov    rdi,rax
  403d46:	call   4024e0 <rb_setselect@plt>
  403d4b:	mov    rax,QWORD PTR [rbp-0x4018]
  403d52:	mov    rax,QWORD PTR [rax+0x38]
  403d56:	mov    rdx,QWORD PTR [rbp-0x4018]
  403d5d:	mov    rsi,rdx
  403d60:	mov    rdi,rax
  403d63:	call   4033db <open@plt+0xb9b>
  403d68:	jmp    403e26 <open@plt+0x15e6>
  403d6d:	mov    rax,QWORD PTR [rbp-0x4018]
  403d74:	mov    rdx,QWORD PTR [rax+0x58]
  403d78:	mov    eax,DWORD PTR [rbp-0x401c]
  403d7e:	cdqe   
  403d80:	add    rdx,rax
  403d83:	mov    rax,QWORD PTR [rbp-0x4018]
  403d8a:	mov    QWORD PTR [rax+0x58],rdx
  403d8e:	mov    rax,QWORD PTR [rbp-0x4018]
  403d95:	movzx  eax,BYTE PTR [rax+0x68]
  403d99:	movzx  eax,al
  403d9c:	and    eax,0x2
  403d9f:	test   eax,eax
  403da1:	je     403dc7 <open@plt+0x1587>
  403da3:	mov    eax,DWORD PTR [rbp-0x401c]
  403da9:	movsxd rdx,eax
  403dac:	lea    rcx,[rbp-0x4010]
  403db3:	mov    rax,QWORD PTR [rbp-0x4018]
  403dba:	mov    rsi,rcx
  403dbd:	mov    rdi,rax
  403dc0:	call   4037a1 <open@plt+0xf61>
  403dc5:	jmp    403de9 <open@plt+0x15a9>
  403dc7:	mov    eax,DWORD PTR [rbp-0x401c]
  403dcd:	movsxd rdx,eax
  403dd0:	lea    rcx,[rbp-0x4010]
  403dd7:	mov    rax,QWORD PTR [rbp-0x4018]
  403dde:	mov    rsi,rcx
  403de1:	mov    rdi,rax
  403de4:	call   403665 <open@plt+0xe25>
  403de9:	mov    rax,QWORD PTR [rbp-0x4018]
  403df0:	movzx  eax,BYTE PTR [rax+0x68]
  403df4:	movzx  eax,al
  403df7:	and    eax,0x8
  403dfa:	test   eax,eax
  403dfc:	jne    403e22 <open@plt+0x15e2>
  403dfe:	mov    rax,QWORD PTR [rbp-0x4018]
  403e05:	mov    rdi,rax
  403e08:	call   403b7a <open@plt+0x133a>
  403e0d:	test   al,al
  403e0f:	jne    403e25 <open@plt+0x15e5>
  403e11:	jmp    403c91 <open@plt+0x1451>
  403e16:	nop
  403e17:	jmp    403e26 <open@plt+0x15e6>
  403e19:	nop
  403e1a:	jmp    403e26 <open@plt+0x15e6>
  403e1c:	nop
  403e1d:	jmp    403e26 <open@plt+0x15e6>
  403e1f:	nop
  403e20:	jmp    403e26 <open@plt+0x15e6>
  403e22:	nop
  403e23:	jmp    403e26 <open@plt+0x15e6>
  403e25:	nop
  403e26:	mov    rax,QWORD PTR [rbp-0x8]
  403e2a:	xor    rax,QWORD PTR fs:0x28
  403e33:	je     403e3a <open@plt+0x15fa>
  403e35:	call   402710 <__stack_chk_fail@plt>
  403e3a:	leave  
  403e3b:	ret    
  403e3c:	endbr64 
  403e40:	push   rbp
  403e41:	mov    rbp,rsp
  403e44:	lea    r11,[rsp-0x4000]
  403e4c:	sub    rsp,0x1000
  403e53:	or     QWORD PTR [rsp],0x0
  403e58:	cmp    rsp,r11
  403e5b:	jne    403e4c <open@plt+0x160c>
  403e5d:	sub    rsp,0x30
  403e61:	mov    QWORD PTR [rbp-0x4028],rdi
  403e68:	mov    QWORD PTR [rbp-0x4030],rsi
  403e6f:	mov    rax,QWORD PTR fs:0x28
  403e78:	mov    QWORD PTR [rbp-0x8],rax
  403e7c:	xor    eax,eax
  403e7e:	mov    rax,QWORD PTR [rbp-0x4030]
  403e85:	mov    QWORD PTR [rbp-0x4018],rax
  403e8c:	mov    DWORD PTR [rbp-0x401c],0x0
  403e96:	cmp    QWORD PTR [rbp-0x4018],0x0
  403e9e:	je     403f5d <open@plt+0x171d>
  403ea4:	mov    rax,QWORD PTR [rbp-0x4018]
  403eab:	mov    rax,QWORD PTR [rax+0x40]
  403eaf:	lea    rcx,[rbp-0x4010]
  403eb6:	mov    edx,0x4000
  403ebb:	mov    rsi,rcx
  403ebe:	mov    rdi,rax
  403ec1:	call   4025f0 <rb_read@plt>
  403ec6:	mov    DWORD PTR [rbp-0x401c],eax
  403ecc:	cmp    DWORD PTR [rbp-0x401c],0x0
  403ed3:	je     403ef0 <open@plt+0x16b0>
  403ed5:	cmp    DWORD PTR [rbp-0x401c],0x0
  403edc:	jns    403f25 <open@plt+0x16e5>
  403ede:	call   4026e0 <__errno_location@plt>
  403ee3:	mov    eax,DWORD PTR [rax]
  403ee5:	mov    edi,eax
  403ee7:	call   402490 <rb_ignore_errno@plt>
  403eec:	test   eax,eax
  403eee:	jne    403f25 <open@plt+0x16e5>
  403ef0:	mov    rax,QWORD PTR [rbp-0x4018]
  403ef7:	mov    rax,QWORD PTR [rax+0x40]
  403efb:	mov    rdi,rax
  403efe:	call   402640 <rb_close@plt>
  403f03:	mov    rcx,QWORD PTR [rbp-0x4018]
  403f0a:	mov    rax,QWORD PTR [rbp-0x4018]
  403f11:	lea    rdx,[rip+0xff08]        # 413e20 <open@plt+0x115e0>
  403f18:	mov    rsi,rcx
  403f1b:	mov    rdi,rax
  403f1e:	call   402936 <open@plt+0xf6>
  403f23:	jmp    403f5e <open@plt+0x171e>
  403f25:	cmp    DWORD PTR [rbp-0x401c],0x0
  403f2c:	jns    403ea4 <open@plt+0x1664>
  403f32:	mov    rax,QWORD PTR [rbp-0x4018]
  403f39:	mov    rax,QWORD PTR [rax+0x40]
  403f3d:	mov    rdx,QWORD PTR [rbp-0x4018]
  403f44:	mov    rcx,rdx
  403f47:	lea    rdx,[rip+0xfffffffffffffeee]        # 403e3c <open@plt+0x15fc>
  403f4e:	mov    esi,0x1
  403f53:	mov    rdi,rax
  403f56:	call   4024e0 <rb_setselect@plt>
  403f5b:	jmp    403f5e <open@plt+0x171e>
  403f5d:	nop
  403f5e:	mov    rax,QWORD PTR [rbp-0x8]
  403f62:	xor    rax,QWORD PTR fs:0x28
  403f6b:	je     403f72 <open@plt+0x1732>
  403f6d:	call   402710 <__stack_chk_fail@plt>
  403f72:	leave  
  403f73:	ret    
  403f74:	endbr64 
  403f78:	push   rbp
  403f79:	mov    rbp,rsp
  403f7c:	lea    r11,[rsp-0x4000]
  403f84:	sub    rsp,0x1000
  403f8b:	or     QWORD PTR [rsp],0x0
  403f90:	cmp    rsp,r11
  403f93:	jne    403f84 <open@plt+0x1744>
  403f95:	sub    rsp,0x40
  403f99:	mov    QWORD PTR [rbp-0x4038],rdi
  403fa0:	mov    QWORD PTR [rbp-0x4040],rsi
  403fa7:	mov    rax,QWORD PTR fs:0x28
  403fb0:	mov    QWORD PTR [rbp-0x8],rax
  403fb4:	xor    eax,eax
  403fb6:	mov    rax,QWORD PTR [rbp-0x4040]
  403fbd:	mov    QWORD PTR [rbp-0x4018],rax
  403fc4:	cmp    QWORD PTR [rbp-0x4018],0x0
  403fcc:	je     4042bd <open@plt+0x1a7d>
  403fd2:	mov    rax,QWORD PTR [rbp-0x4018]
  403fd9:	movzx  eax,BYTE PTR [rax+0x68]
  403fdd:	movzx  eax,al
  403fe0:	and    eax,0x8
  403fe3:	test   eax,eax
  403fe5:	jne    4042c0 <open@plt+0x1a80>
  403feb:	mov    rax,QWORD PTR [rbp-0x4018]
  403ff2:	movzx  eax,BYTE PTR [rax+0x68]
  403ff6:	movzx  eax,al
  403ff9:	and    eax,0x20
  403ffc:	test   eax,eax
  403ffe:	je     40404e <open@plt+0x180e>
  404000:	mov    rax,QWORD PTR [rbp-0x4018]
  404007:	movzx  eax,BYTE PTR [rax+0x68]
  40400b:	and    eax,0xffffffdf
  40400e:	mov    rdx,QWORD PTR [rbp-0x4018]
  404015:	mov    BYTE PTR [rdx+0x68],al
  404018:	mov    rax,QWORD PTR [rbp-0x4018]
  40401f:	mov    rax,QWORD PTR [rax+0x38]
  404023:	mov    rdx,QWORD PTR [rbp-0x4018]
  40402a:	mov    rsi,rdx
  40402d:	mov    rdi,rax
  404030:	call   4033db <open@plt+0xb9b>
  404035:	mov    rax,QWORD PTR [rbp-0x4018]
  40403c:	movzx  eax,BYTE PTR [rax+0x68]
  404040:	movzx  eax,al
  404043:	and    eax,0x8
  404046:	test   eax,eax
  404048:	jne    4042c3 <open@plt+0x1a83>
  40404e:	mov    rax,QWORD PTR [rbp-0x4018]
  404055:	movzx  eax,BYTE PTR [rax+0x68]
  404059:	movzx  eax,al
  40405c:	and    eax,0x8
  40405f:	test   eax,eax
  404061:	jne    4042c6 <open@plt+0x1a86>
  404067:	mov    rax,QWORD PTR [rbp-0x4018]
  40406e:	mov    rax,QWORD PTR [rax+0x38]
  404072:	lea    rcx,[rbp-0x4010]
  404079:	mov    edx,0x4000
  40407e:	mov    rsi,rcx
  404081:	mov    rdi,rax
  404084:	call   4025f0 <rb_read@plt>
  404089:	mov    DWORD PTR [rbp-0x4024],eax
  40408f:	cmp    DWORD PTR [rbp-0x4024],0x0
  404096:	je     4040bb <open@plt+0x187b>
  404098:	cmp    DWORD PTR [rbp-0x4024],0x0
  40409f:	jns    404171 <open@plt+0x1931>
  4040a5:	call   4026e0 <__errno_location@plt>
  4040aa:	mov    eax,DWORD PTR [rax]
  4040ac:	mov    edi,eax
  4040ae:	call   402490 <rb_ignore_errno@plt>
  4040b3:	test   eax,eax
  4040b5:	jne    404171 <open@plt+0x1931>
  4040bb:	cmp    DWORD PTR [rbp-0x4024],0x0
  4040c2:	jne    4040f3 <open@plt+0x18b3>
  4040c4:	mov    rdx,QWORD PTR [rip+0x416d]        # 408238 <open@plt+0x59f8>
  4040cb:	mov    rax,QWORD PTR [rbp-0x4018]
  4040d2:	mov    rcx,rdx
  4040d5:	lea    rdx,[rip+0x1fa9]        # 406085 <open@plt+0x3845>
  4040dc:	mov    esi,0x1
  4040e1:	mov    rdi,rax
  4040e4:	mov    eax,0x0
  4040e9:	call   402f4e <open@plt+0x70e>
  4040ee:	jmp    4042c7 <open@plt+0x1a87>
  4040f3:	mov    rax,QWORD PTR [rbp-0x4018]
  4040fa:	movzx  eax,BYTE PTR [rax+0x68]
  4040fe:	movzx  eax,al
  404101:	and    eax,0x1
  404104:	test   eax,eax
  404106:	je     40412d <open@plt+0x18ed>
  404108:	cmp    DWORD PTR [rbp-0x4024],0xfffffffe
  40410f:	jne    40412d <open@plt+0x18ed>
  404111:	mov    rax,QWORD PTR [rbp-0x4018]
  404118:	mov    rax,QWORD PTR [rax+0x38]
  40411c:	mov    rdi,rax
  40411f:	call   402690 <rb_get_ssl_strerror@plt>
  404124:	mov    QWORD PTR [rbp-0x4020],rax
  40412b:	jmp    404142 <open@plt+0x1902>
  40412d:	call   4026e0 <__errno_location@plt>
  404132:	mov    eax,DWORD PTR [rax]
  404134:	mov    edi,eax
  404136:	call   402620 <strerror@plt>
  40413b:	mov    QWORD PTR [rbp-0x4020],rax
  404142:	mov    rdx,QWORD PTR [rbp-0x4020]
  404149:	mov    rax,QWORD PTR [rbp-0x4018]
  404150:	mov    rcx,rdx
  404153:	lea    rdx,[rip+0x1fda]        # 406134 <open@plt+0x38f4>
  40415a:	mov    esi,0x1
  40415f:	mov    rdi,rax
  404162:	mov    eax,0x0
  404167:	call   402f4e <open@plt+0x70e>
  40416c:	jmp    4042c7 <open@plt+0x1a87>
  404171:	cmp    DWORD PTR [rbp-0x4024],0x0
  404178:	jns    404239 <open@plt+0x19f9>
  40417e:	cmp    DWORD PTR [rbp-0x4024],0xfffffffc
  404185:	je     4041b2 <open@plt+0x1972>
  404187:	mov    rax,QWORD PTR [rbp-0x4018]
  40418e:	mov    rax,QWORD PTR [rax+0x38]
  404192:	mov    rdx,QWORD PTR [rbp-0x4018]
  404199:	mov    rcx,rdx
  40419c:	lea    rdx,[rip+0xfffffffffffffdd1]        # 403f74 <open@plt+0x1734>
  4041a3:	mov    esi,0x1
  4041a8:	mov    rdi,rax
  4041ab:	call   4024e0 <rb_setselect@plt>
  4041b0:	jmp    404217 <open@plt+0x19d7>
  4041b2:	mov    rax,QWORD PTR [rbp-0x4018]
  4041b9:	mov    rax,QWORD PTR [rax+0x38]
  4041bd:	mov    ecx,0x0
  4041c2:	mov    edx,0x0
  4041c7:	mov    esi,0x1
  4041cc:	mov    rdi,rax
  4041cf:	call   4024e0 <rb_setselect@plt>
  4041d4:	mov    rax,QWORD PTR [rbp-0x4018]
  4041db:	mov    rax,QWORD PTR [rax+0x38]
  4041df:	mov    rdx,QWORD PTR [rbp-0x4018]
  4041e6:	mov    rcx,rdx
  4041e9:	lea    rdx,[rip+0xfffffffffffffd84]        # 403f74 <open@plt+0x1734>
  4041f0:	mov    esi,0x2
  4041f5:	mov    rdi,rax
  4041f8:	call   4024e0 <rb_setselect@plt>
  4041fd:	mov    rax,QWORD PTR [rbp-0x4018]
  404204:	movzx  eax,BYTE PTR [rax+0x68]
  404208:	or     eax,0x20
  40420b:	mov    edx,eax
  40420d:	mov    rax,QWORD PTR [rbp-0x4018]
  404214:	mov    BYTE PTR [rax+0x68],dl
  404217:	mov    rax,QWORD PTR [rbp-0x4018]
  40421e:	mov    rax,QWORD PTR [rax+0x40]
  404222:	mov    rdx,QWORD PTR [rbp-0x4018]
  404229:	mov    rsi,rdx
  40422c:	mov    rdi,rax
  40422f:	call   4042dd <open@plt+0x1a9d>
  404234:	jmp    4042c7 <open@plt+0x1a87>
  404239:	mov    rax,QWORD PTR [rbp-0x4018]
  404240:	mov    rdx,QWORD PTR [rax+0x50]
  404244:	mov    eax,DWORD PTR [rbp-0x4024]
  40424a:	cdqe   
  40424c:	add    rdx,rax
  40424f:	mov    rax,QWORD PTR [rbp-0x4018]
  404256:	mov    QWORD PTR [rax+0x50],rdx
  40425a:	mov    rax,QWORD PTR [rbp-0x4018]
  404261:	movzx  eax,BYTE PTR [rax+0x68]
  404265:	movzx  eax,al
  404268:	and    eax,0x2
  40426b:	test   eax,eax
  40426d:	je     404296 <open@plt+0x1a56>
  40426f:	mov    eax,DWORD PTR [rbp-0x4024]
  404275:	movsxd rdx,eax
  404278:	lea    rcx,[rbp-0x4010]
  40427f:	mov    rax,QWORD PTR [rbp-0x4018]
  404286:	mov    rsi,rcx
  404289:	mov    rdi,rax
  40428c:	call   403950 <open@plt+0x1110>
  404291:	jmp    40404e <open@plt+0x180e>
  404296:	mov    eax,DWORD PTR [rbp-0x4024]
  40429c:	movsxd rdx,eax
  40429f:	lea    rcx,[rbp-0x4010]
  4042a6:	mov    rax,QWORD PTR [rbp-0x4018]
  4042ad:	mov    rsi,rcx
  4042b0:	mov    rdi,rax
  4042b3:	call   4036b1 <open@plt+0xe71>
  4042b8:	jmp    40404e <open@plt+0x180e>
  4042bd:	nop
  4042be:	jmp    4042c7 <open@plt+0x1a87>
  4042c0:	nop
  4042c1:	jmp    4042c7 <open@plt+0x1a87>
  4042c3:	nop
  4042c4:	jmp    4042c7 <open@plt+0x1a87>
  4042c6:	nop
  4042c7:	mov    rax,QWORD PTR [rbp-0x8]
  4042cb:	xor    rax,QWORD PTR fs:0x28
  4042d4:	je     4042db <open@plt+0x1a9b>
  4042d6:	call   402710 <__stack_chk_fail@plt>
  4042db:	leave  
  4042dc:	ret    
  4042dd:	endbr64 
  4042e1:	push   rbp
  4042e2:	mov    rbp,rsp
  4042e5:	sub    rsp,0x20
  4042e9:	mov    QWORD PTR [rbp-0x18],rdi
  4042ed:	mov    QWORD PTR [rbp-0x20],rsi
  4042f1:	mov    rax,QWORD PTR [rbp-0x20]
  4042f5:	mov    QWORD PTR [rbp-0x8],rax
  4042f9:	mov    rax,QWORD PTR [rbp-0x8]
  4042fd:	movzx  eax,BYTE PTR [rax+0x68]
  404301:	movzx  eax,al
  404304:	and    eax,0x8
  404307:	test   eax,eax
  404309:	jne    4043de <open@plt+0x1b9e>
  40430f:	jmp    404329 <open@plt+0x1ae9>
  404311:	mov    rax,QWORD PTR [rbp-0x8]
  404315:	mov    rdx,QWORD PTR [rax+0x60]
  404319:	mov    eax,DWORD PTR [rbp-0xc]
  40431c:	cdqe   
  40431e:	add    rdx,rax
  404321:	mov    rax,QWORD PTR [rbp-0x8]
  404325:	mov    QWORD PTR [rax+0x60],rdx
  404329:	mov    rax,QWORD PTR [rbp-0x8]
  40432d:	mov    rax,QWORD PTR [rax+0x28]
  404331:	mov    rdx,QWORD PTR [rbp-0x18]
  404335:	mov    rsi,rdx
  404338:	mov    rdi,rax
  40433b:	call   402810 <rb_rawbuf_flush@plt>
  404340:	mov    DWORD PTR [rbp-0xc],eax
  404343:	cmp    DWORD PTR [rbp-0xc],0x0
  404347:	jg     404311 <open@plt+0x1ad1>
  404349:	cmp    DWORD PTR [rbp-0xc],0x0
  40434d:	je     404367 <open@plt+0x1b27>
  40434f:	cmp    DWORD PTR [rbp-0xc],0x0
  404353:	jns    404384 <open@plt+0x1b44>
  404355:	call   4026e0 <__errno_location@plt>
  40435a:	mov    eax,DWORD PTR [rax]
  40435c:	mov    edi,eax
  40435e:	call   402490 <rb_ignore_errno@plt>
  404363:	test   eax,eax
  404365:	jne    404384 <open@plt+0x1b44>
  404367:	mov    rax,QWORD PTR [rbp-0x20]
  40436b:	mov    edx,0x0
  404370:	mov    esi,0x0
  404375:	mov    rdi,rax
  404378:	mov    eax,0x0
  40437d:	call   402f4e <open@plt+0x70e>
  404382:	jmp    4043df <open@plt+0x1b9f>
  404384:	mov    rax,QWORD PTR [rbp-0x8]
  404388:	mov    rax,QWORD PTR [rax+0x28]
  40438c:	mov    rdi,rax
  40438f:	call   402670 <rb_rawbuf_length@plt>
  404394:	test   eax,eax
  404396:	jle    4043bd <open@plt+0x1b7d>
  404398:	mov    rax,QWORD PTR [rbp-0x8]
  40439c:	mov    rax,QWORD PTR [rax+0x40]
  4043a0:	mov    rdx,QWORD PTR [rbp-0x8]
  4043a4:	mov    rcx,rdx
  4043a7:	lea    rdx,[rip+0xffffffffffffff2f]        # 4042dd <open@plt+0x1a9d>
  4043ae:	mov    esi,0x2
  4043b3:	mov    rdi,rax
  4043b6:	call   4024e0 <rb_setselect@plt>
  4043bb:	jmp    4043df <open@plt+0x1b9f>
  4043bd:	mov    rax,QWORD PTR [rbp-0x8]
  4043c1:	mov    rax,QWORD PTR [rax+0x40]
  4043c5:	mov    ecx,0x0
  4043ca:	mov    edx,0x0
  4043cf:	mov    esi,0x2
  4043d4:	mov    rdi,rax
  4043d7:	call   4024e0 <rb_setselect@plt>
  4043dc:	jmp    4043df <open@plt+0x1b9f>
  4043de:	nop
  4043df:	leave  
  4043e0:	ret    
  4043e1:	endbr64 
  4043e5:	push   rbp
  4043e6:	mov    rbp,rsp
  4043e9:	sub    rsp,0x20
  4043ed:	mov    rax,QWORD PTR fs:0x28
  4043f6:	mov    QWORD PTR [rbp-0x8],rax
  4043fa:	xor    eax,eax
  4043fc:	lea    rax,[rbp-0x20]
  404400:	mov    rsi,rax
  404403:	mov    edi,0x7
  404408:	call   4027c0 <getrlimit@plt>
  40440d:	test   eax,eax
  40440f:	jne    404417 <open@plt+0x1bd7>
  404411:	mov    rax,QWORD PTR [rbp-0x20]
  404415:	jmp    40441c <open@plt+0x1bdc>
  404417:	mov    eax,0xffff
  40441c:	mov    rdx,QWORD PTR [rbp-0x8]
  404420:	xor    rdx,QWORD PTR fs:0x28
  404429:	je     404430 <open@plt+0x1bf0>
  40442b:	call   402710 <__stack_chk_fail@plt>
  404430:	leave  
  404431:	ret    
  404432:	endbr64 
  404436:	push   rbp
  404437:	mov    rbp,rsp
  40443a:	sub    rsp,0x330
  404441:	mov    QWORD PTR [rbp-0x328],rdi
  404448:	mov    rax,QWORD PTR fs:0x28
  404451:	mov    QWORD PTR [rbp-0x8],rax
  404455:	xor    eax,eax
  404457:	mov    rax,QWORD PTR [rbp-0x328]
  40445e:	movzx  eax,BYTE PTR [rax+0x68]
  404462:	movzx  eax,al
  404465:	and    eax,0x1
  404468:	test   eax,eax
  40446a:	je     404538 <open@plt+0x1cf8>
  404470:	mov    rax,QWORD PTR [rbp-0x328]
  404477:	mov    rax,QWORD PTR [rax+0x38]
  40447b:	mov    rdi,rax
  40447e:	call   402610 <rb_ssl_get_cipher@plt>
  404483:	mov    QWORD PTR [rbp-0x320],rax
  40448a:	cmp    QWORD PTR [rbp-0x320],0x0
  404492:	je     40453b <open@plt+0x1cfb>
  404498:	mov    rcx,QWORD PTR [rbp-0x320]
  40449f:	lea    rax,[rbp-0x310]
  4044a6:	mov    edx,0x100
  4044ab:	mov    rsi,rcx
  4044ae:	mov    rdi,rax
  4044b1:	call   402570 <rb_strlcpy@plt>
  4044b6:	mov    BYTE PTR [rbp-0x210],0x43
  4044bd:	mov    rax,QWORD PTR [rbp-0x328]
  4044c4:	mov    eax,DWORD PTR [rax+0x30]
  4044c7:	lea    rdx,[rbp-0x210]
  4044ce:	inc    rdx
  4044d1:	mov    esi,eax
  4044d3:	mov    rdi,rdx
  4044d6:	call   402cd8 <open@plt+0x498>
  4044db:	lea    rax,[rbp-0x310]
  4044e2:	lea    rdx,[rbp-0x210]
  4044e9:	add    rdx,0x5
  4044ed:	mov    rsi,rax
  4044f0:	mov    rdi,rdx
  4044f3:	call   402750 <strcpy@plt>
  4044f8:	lea    rax,[rbp-0x310]
  4044ff:	mov    rdi,rax
  404502:	call   4025c0 <strlen@plt>
  404507:	add    rax,0x6
  40450b:	mov    QWORD PTR [rbp-0x318],rax
  404512:	mov    rax,QWORD PTR [rbp-0x328]
  404519:	mov    rax,QWORD PTR [rax+0x18]
  40451d:	mov    rdx,QWORD PTR [rbp-0x318]
  404524:	lea    rcx,[rbp-0x210]
  40452b:	mov    rsi,rcx
  40452e:	mov    rdi,rax
  404531:	call   4036fd <open@plt+0xebd>
  404536:	jmp    40453c <open@plt+0x1cfc>
  404538:	nop
  404539:	jmp    40453c <open@plt+0x1cfc>
  40453b:	nop
  40453c:	mov    rax,QWORD PTR [rbp-0x8]
  404540:	xor    rax,QWORD PTR fs:0x28
  404549:	je     404550 <open@plt+0x1d10>
  40454b:	call   402710 <__stack_chk_fail@plt>
  404550:	leave  
  404551:	ret    
  404552:	endbr64 
  404556:	push   rbp
  404557:	mov    rbp,rsp
  40455a:	add    rsp,0xffffffffffffff80
  40455e:	mov    QWORD PTR [rbp-0x78],rdi
  404562:	mov    rax,QWORD PTR fs:0x28
  40456b:	mov    QWORD PTR [rbp-0x8],rax
  40456f:	xor    eax,eax
  404571:	mov    edx,DWORD PTR [rip+0xf8c5]        # 413e3c <open@plt+0x115fc>
  404577:	mov    rax,QWORD PTR [rbp-0x78]
  40457b:	mov    rax,QWORD PTR [rax+0x38]
  40457f:	lea    rcx,[rbp-0x60]
  404583:	add    rcx,0xd
  404587:	mov    rsi,rcx
  40458a:	mov    rdi,rax
  40458d:	call   402580 <rb_get_ssl_certfp@plt>
  404592:	mov    DWORD PTR [rbp-0x64],eax
  404595:	cmp    DWORD PTR [rbp-0x64],0x0
  404599:	je     404608 <open@plt+0x1dc8>
  40459b:	mov    BYTE PTR [rbp-0x60],0x46
  40459f:	mov    rax,QWORD PTR [rbp-0x78]
  4045a3:	mov    eax,DWORD PTR [rax+0x30]
  4045a6:	lea    rdx,[rbp-0x60]
  4045aa:	inc    rdx
  4045ad:	mov    esi,eax
  4045af:	mov    rdi,rdx
  4045b2:	call   402cd8 <open@plt+0x498>
  4045b7:	mov    eax,DWORD PTR [rip+0xf87f]        # 413e3c <open@plt+0x115fc>
  4045bd:	mov    edx,eax
  4045bf:	lea    rax,[rbp-0x60]
  4045c3:	add    rax,0x5
  4045c7:	mov    esi,edx
  4045c9:	mov    rdi,rax
  4045cc:	call   402cd8 <open@plt+0x498>
  4045d1:	mov    eax,DWORD PTR [rbp-0x64]
  4045d4:	lea    rdx,[rbp-0x60]
  4045d8:	add    rdx,0x9
  4045dc:	mov    esi,eax
  4045de:	mov    rdi,rdx
  4045e1:	call   402cd8 <open@plt+0x498>
  4045e6:	mov    eax,DWORD PTR [rbp-0x64]
  4045e9:	add    eax,0xd
  4045ec:	movsxd rdx,eax
  4045ef:	mov    rax,QWORD PTR [rbp-0x78]
  4045f3:	mov    rax,QWORD PTR [rax+0x18]
  4045f7:	lea    rcx,[rbp-0x60]
  4045fb:	mov    rsi,rcx
  4045fe:	mov    rdi,rax
  404601:	call   4036fd <open@plt+0xebd>
  404606:	jmp    404609 <open@plt+0x1dc9>
  404608:	nop
  404609:	mov    rax,QWORD PTR [rbp-0x8]
  40460d:	xor    rax,QWORD PTR fs:0x28
  404616:	je     40461d <open@plt+0x1ddd>
  404618:	call   402710 <__stack_chk_fail@plt>
  40461d:	leave  
  40461e:	ret    
  40461f:	endbr64 
  404623:	push   rbp
  404624:	mov    rbp,rsp
  404627:	sub    rsp,0x20
  40462b:	mov    QWORD PTR [rbp-0x18],rdi
  40462f:	mov    rax,QWORD PTR fs:0x28
  404638:	mov    QWORD PTR [rbp-0x8],rax
  40463c:	xor    eax,eax
  40463e:	mov    BYTE PTR [rbp-0xd],0x4f
  404642:	mov    rax,QWORD PTR [rbp-0x18]
  404646:	mov    eax,DWORD PTR [rax+0x30]
  404649:	lea    rdx,[rbp-0xd]
  40464d:	inc    rdx
  404650:	mov    esi,eax
  404652:	mov    rdi,rdx
  404655:	call   402cd8 <open@plt+0x498>
  40465a:	mov    rax,QWORD PTR [rbp-0x18]
  40465e:	mov    rax,QWORD PTR [rax+0x18]
  404662:	lea    rcx,[rbp-0xd]
  404666:	mov    edx,0x5
  40466b:	mov    rsi,rcx
  40466e:	mov    rdi,rax
  404671:	call   4036fd <open@plt+0xebd>
  404676:	nop
  404677:	mov    rax,QWORD PTR [rbp-0x8]
  40467b:	xor    rax,QWORD PTR fs:0x28
  404684:	je     40468b <open@plt+0x1e4b>
  404686:	call   402710 <__stack_chk_fail@plt>
  40468b:	leave  
  40468c:	ret    
  40468d:	endbr64 
  404691:	push   rbp
  404692:	mov    rbp,rsp
  404695:	sub    rsp,0x30
  404699:	mov    QWORD PTR [rbp-0x18],rdi
  40469d:	mov    DWORD PTR [rbp-0x1c],esi
  4046a0:	mov    QWORD PTR [rbp-0x28],rdx
  4046a4:	mov    DWORD PTR [rbp-0x20],ecx
  4046a7:	mov    QWORD PTR [rbp-0x30],r8
  4046ab:	mov    rax,QWORD PTR [rbp-0x30]
  4046af:	mov    QWORD PTR [rbp-0x8],rax
  4046b3:	cmp    DWORD PTR [rbp-0x1c],0x0
  4046b7:	jne    40470d <open@plt+0x1ecd>
  4046b9:	mov    rax,QWORD PTR [rbp-0x8]
  4046bd:	mov    rdi,rax
  4046c0:	call   404432 <open@plt+0x1bf2>
  4046c5:	mov    rax,QWORD PTR [rbp-0x8]
  4046c9:	mov    rdi,rax
  4046cc:	call   404552 <open@plt+0x1d12>
  4046d1:	mov    rax,QWORD PTR [rbp-0x8]
  4046d5:	mov    rdi,rax
  4046d8:	call   40461f <open@plt+0x1ddf>
  4046dd:	mov    rax,QWORD PTR [rbp-0x8]
  4046e1:	mov    rax,QWORD PTR [rax+0x38]
  4046e5:	mov    rdx,QWORD PTR [rbp-0x8]
  4046e9:	mov    rsi,rdx
  4046ec:	mov    rdi,rax
  4046ef:	call   403f74 <open@plt+0x1734>
  4046f4:	mov    rax,QWORD PTR [rbp-0x8]
  4046f8:	mov    rax,QWORD PTR [rax+0x40]
  4046fc:	mov    rdx,QWORD PTR [rbp-0x8]
  404700:	mov    rsi,rdx
  404703:	mov    rdi,rax
  404706:	call   403bf9 <open@plt+0x13b9>
  40470b:	jmp    404729 <open@plt+0x1ee9>
  40470d:	mov    rax,QWORD PTR [rbp-0x8]
  404711:	mov    edx,0x0
  404716:	mov    esi,0x0
  40471b:	mov    rdi,rax
  40471e:	mov    eax,0x0
  404723:	call   402f4e <open@plt+0x70e>
  404728:	nop
  404729:	leave  
  40472a:	ret    
  40472b:	endbr64 
  40472f:	push   rbp
  404730:	mov    rbp,rsp
  404733:	sub    rsp,0x30
  404737:	mov    QWORD PTR [rbp-0x18],rdi
  40473b:	mov    DWORD PTR [rbp-0x1c],esi
  40473e:	mov    QWORD PTR [rbp-0x28],rdx
  404742:	mov    rax,QWORD PTR [rbp-0x28]
  404746:	mov    QWORD PTR [rbp-0x8],rax
  40474a:	cmp    DWORD PTR [rbp-0x1c],0x0
  40474e:	jne    4047a4 <open@plt+0x1f64>
  404750:	mov    rax,QWORD PTR [rbp-0x8]
  404754:	mov    rdi,rax
  404757:	call   404432 <open@plt+0x1bf2>
  40475c:	mov    rax,QWORD PTR [rbp-0x8]
  404760:	mov    rdi,rax
  404763:	call   404552 <open@plt+0x1d12>
  404768:	mov    rax,QWORD PTR [rbp-0x8]
  40476c:	mov    rdi,rax
  40476f:	call   40461f <open@plt+0x1ddf>
  404774:	mov    rax,QWORD PTR [rbp-0x8]
  404778:	mov    rax,QWORD PTR [rax+0x38]
  40477c:	mov    rdx,QWORD PTR [rbp-0x8]
  404780:	mov    rsi,rdx
  404783:	mov    rdi,rax
  404786:	call   403f74 <open@plt+0x1734>
  40478b:	mov    rax,QWORD PTR [rbp-0x8]
  40478f:	mov    rax,QWORD PTR [rax+0x40]
  404793:	mov    rdx,QWORD PTR [rbp-0x8]
  404797:	mov    rsi,rdx
  40479a:	mov    rdi,rax
  40479d:	call   403bf9 <open@plt+0x13b9>
  4047a2:	jmp    404821 <open@plt+0x1fe1>
  4047a4:	cmp    DWORD PTR [rbp-0x1c],0x3
  4047a8:	jne    4047c9 <open@plt+0x1f89>
  4047aa:	mov    rax,QWORD PTR [rbp-0x8]
  4047ae:	lea    rdx,[rip+0x198e]        # 406143 <open@plt+0x3903>
  4047b5:	mov    esi,0x1
  4047ba:	mov    rdi,rax
  4047bd:	mov    eax,0x0
  4047c2:	call   402f4e <open@plt+0x70e>
  4047c7:	jmp    404821 <open@plt+0x1fe1>
  4047c9:	cmp    DWORD PTR [rbp-0x1c],0x6
  4047cd:	jne    404804 <open@plt+0x1fc4>
  4047cf:	mov    rax,QWORD PTR [rbp-0x8]
  4047d3:	mov    rax,QWORD PTR [rax+0x38]
  4047d7:	mov    rdi,rax
  4047da:	call   402690 <rb_get_ssl_strerror@plt>
  4047df:	mov    rdx,rax
  4047e2:	mov    rax,QWORD PTR [rbp-0x8]
  4047e6:	mov    rcx,rdx
  4047e9:	lea    rdx,[rip+0x1895]        # 406085 <open@plt+0x3845>
  4047f0:	mov    esi,0x1
  4047f5:	mov    rdi,rax
  4047f8:	mov    eax,0x0
  4047fd:	call   402f4e <open@plt+0x70e>
  404802:	jmp    404821 <open@plt+0x1fe1>
  404804:	mov    rax,QWORD PTR [rbp-0x8]
  404808:	lea    rdx,[rip+0x194c]        # 40615b <open@plt+0x391b>
  40480f:	mov    esi,0x1
  404814:	mov    rdi,rax
  404817:	mov    eax,0x0
  40481c:	call   402f4e <open@plt+0x70e>
  404821:	nop
  404822:	leave  
  404823:	ret    
  404824:	endbr64 
  404828:	push   rbp
  404829:	mov    rbp,rsp
  40482c:	sub    rsp,0x20
  404830:	mov    QWORD PTR [rbp-0x18],rdi
  404834:	mov    QWORD PTR [rbp-0x20],rsi
  404838:	mov    DWORD PTR [rbp-0x4],0x0
  40483f:	jmp    40485f <open@plt+0x201f>
  404841:	mov    rax,QWORD PTR [rbp-0x20]
  404845:	mov    edx,DWORD PTR [rbp-0x4]
  404848:	movsxd rdx,edx
  40484b:	add    rdx,0x4
  40484f:	mov    rax,QWORD PTR [rax+rdx*8+0x8]
  404854:	mov    rdi,rax
  404857:	call   402640 <rb_close@plt>
  40485c:	inc    DWORD PTR [rbp-0x4]
  40485f:	mov    rax,QWORD PTR [rbp-0x20]
  404863:	mov    eax,DWORD PTR [rax+0x48]
  404866:	cmp    DWORD PTR [rbp-0x4],eax
  404869:	jl     404841 <open@plt+0x2001>
  40486b:	nop
  40486c:	leave  
  40486d:	ret    
  40486e:	endbr64 
  404872:	push   rbp
  404873:	mov    rbp,rsp
  404876:	sub    rsp,0x20
  40487a:	mov    QWORD PTR [rbp-0x18],rdi
  40487e:	mov    QWORD PTR [rbp-0x20],rsi
  404882:	mov    rax,QWORD PTR [rbp-0x20]
  404886:	mov    rdx,QWORD PTR [rax+0x30]
  40488a:	mov    rax,QWORD PTR [rbp-0x20]
  40488e:	mov    rcx,QWORD PTR [rax+0x28]
  404892:	mov    rax,QWORD PTR [rbp-0x18]
  404896:	mov    rsi,rcx
  404899:	mov    rdi,rax
  40489c:	call   403234 <open@plt+0x9f4>
  4048a1:	mov    QWORD PTR [rbp-0x8],rax
  4048a5:	mov    rax,QWORD PTR [rbp-0x20]
  4048a9:	mov    rax,QWORD PTR [rax+0x18]
  4048ad:	inc    rax
  4048b0:	mov    rdi,rax
  4048b3:	call   402c9b <open@plt+0x45b>
  4048b8:	mov    DWORD PTR [rbp-0xc],eax
  4048bb:	mov    edx,DWORD PTR [rbp-0xc]
  4048be:	mov    rax,QWORD PTR [rbp-0x8]
  4048c2:	mov    esi,edx
  4048c4:	mov    rdi,rax
  4048c7:	call   402dcf <open@plt+0x58f>
  4048cc:	mov    rax,QWORD PTR [rbp-0x8]
  4048d0:	movzx  eax,BYTE PTR [rax+0x68]
  4048d4:	or     eax,0x1
  4048d7:	mov    edx,eax
  4048d9:	mov    rax,QWORD PTR [rbp-0x8]
  4048dd:	mov    BYTE PTR [rax+0x68],dl
  4048e0:	mov    rax,QWORD PTR [rbp-0x8]
  4048e4:	mov    rax,QWORD PTR [rax+0x38]
  4048e8:	mov    rdi,rax
  4048eb:	call   402460 <rb_get_type@plt>
  4048f0:	movzx  eax,al
  4048f3:	and    eax,0x40
  4048f6:	test   eax,eax
  4048f8:	je     40490f <open@plt+0x20cf>
  4048fa:	mov    rax,QWORD PTR [rbp-0x8]
  4048fe:	mov    rax,QWORD PTR [rax+0x38]
  404902:	mov    esi,0x4
  404907:	mov    rdi,rax
  40490a:	call   402600 <rb_set_type@plt>
  40490f:	mov    rax,QWORD PTR [rbp-0x8]
  404913:	mov    rax,QWORD PTR [rax+0x40]
  404917:	mov    rdi,rax
  40491a:	call   402460 <rb_get_type@plt>
  40491f:	cmp    al,0x40
  404921:	jne    404938 <open@plt+0x20f8>
  404923:	mov    rax,QWORD PTR [rbp-0x8]
  404927:	mov    rax,QWORD PTR [rax+0x40]
  40492b:	mov    esi,0x4
  404930:	mov    rdi,rax
  404933:	call   402600 <rb_set_type@plt>
  404938:	mov    rax,QWORD PTR [rbp-0x20]
  40493c:	mov    rax,QWORD PTR [rax+0x28]
  404940:	mov    rdx,QWORD PTR [rbp-0x8]
  404944:	mov    ecx,0xa
  404949:	lea    rsi,[rip+0xfffffffffffffd3d]        # 40468d <open@plt+0x1e4d>
  404950:	mov    rdi,rax
  404953:	call   402790 <rb_ssl_start_accepted@plt>
  404958:	nop
  404959:	leave  
  40495a:	ret    
  40495b:	endbr64 
  40495f:	push   rbp
  404960:	mov    rbp,rsp
  404963:	sub    rsp,0x10
  404967:	mov    QWORD PTR [rbp-0x8],rdi
  40496b:	mov    QWORD PTR [rbp-0x10],rsi
  40496f:	mov    rax,QWORD PTR [rbp-0x10]
  404973:	mov    rax,QWORD PTR [rax+0x18]
  404977:	inc    rax
  40497a:	mov    rdi,rax
  40497d:	call   402c9b <open@plt+0x45b>
  404982:	mov    DWORD PTR [rip+0xf4b4],eax        # 413e3c <open@plt+0x115fc>
  404988:	nop
  404989:	leave  
  40498a:	ret    
  40498b:	endbr64 
  40498f:	push   rbp
  404990:	mov    rbp,rsp
  404993:	sub    rsp,0x20
  404997:	mov    QWORD PTR [rbp-0x18],rdi
  40499b:	mov    QWORD PTR [rbp-0x20],rsi
  40499f:	mov    rax,QWORD PTR [rbp-0x20]
  4049a3:	mov    rdx,QWORD PTR [rax+0x30]
  4049a7:	mov    rax,QWORD PTR [rbp-0x20]
  4049ab:	mov    rcx,QWORD PTR [rax+0x28]
  4049af:	mov    rax,QWORD PTR [rbp-0x18]
  4049b3:	mov    rsi,rcx
  4049b6:	mov    rdi,rax
  4049b9:	call   403234 <open@plt+0x9f4>
  4049be:	mov    QWORD PTR [rbp-0x8],rax
  4049c2:	mov    rax,QWORD PTR [rbp-0x20]
  4049c6:	mov    rax,QWORD PTR [rax+0x18]
  4049ca:	inc    rax
  4049cd:	mov    rdi,rax
  4049d0:	call   402c9b <open@plt+0x45b>
  4049d5:	mov    DWORD PTR [rbp-0xc],eax
  4049d8:	mov    edx,DWORD PTR [rbp-0xc]
  4049db:	mov    rax,QWORD PTR [rbp-0x8]
  4049df:	mov    esi,edx
  4049e1:	mov    rdi,rax
  4049e4:	call   402dcf <open@plt+0x58f>
  4049e9:	mov    rax,QWORD PTR [rbp-0x8]
  4049ed:	movzx  eax,BYTE PTR [rax+0x68]
  4049f1:	or     eax,0x1
  4049f4:	mov    edx,eax
  4049f6:	mov    rax,QWORD PTR [rbp-0x8]
  4049fa:	mov    BYTE PTR [rax+0x68],dl
  4049fd:	mov    rax,QWORD PTR [rbp-0x8]
  404a01:	mov    rax,QWORD PTR [rax+0x38]
  404a05:	mov    rdi,rax
  404a08:	call   402460 <rb_get_type@plt>
  404a0d:	cmp    al,0x40
  404a0f:	jne    404a26 <open@plt+0x21e6>
  404a11:	mov    rax,QWORD PTR [rbp-0x8]
  404a15:	mov    rax,QWORD PTR [rax+0x38]
  404a19:	mov    esi,0x4
  404a1e:	mov    rdi,rax
  404a21:	call   402600 <rb_set_type@plt>
  404a26:	mov    rax,QWORD PTR [rbp-0x8]
  404a2a:	mov    rax,QWORD PTR [rax+0x40]
  404a2e:	mov    rdi,rax
  404a31:	call   402460 <rb_get_type@plt>
  404a36:	cmp    al,0x40
  404a38:	jne    404a4f <open@plt+0x220f>
  404a3a:	mov    rax,QWORD PTR [rbp-0x8]
  404a3e:	mov    rax,QWORD PTR [rax+0x40]
  404a42:	mov    esi,0x4
  404a47:	mov    rdi,rax
  404a4a:	call   402600 <rb_set_type@plt>
  404a4f:	mov    rax,QWORD PTR [rbp-0x20]
  404a53:	mov    rax,QWORD PTR [rax+0x28]
  404a57:	mov    rdx,QWORD PTR [rbp-0x8]
  404a5b:	mov    ecx,0xa
  404a60:	lea    rsi,[rip+0xfffffffffffffcc4]        # 40472b <open@plt+0x1eeb>
  404a67:	mov    rdi,rax
  404a6a:	call   402720 <rb_ssl_start_connected@plt>
  404a6f:	nop
  404a70:	leave  
  404a71:	ret    
  404a72:	endbr64 
  404a76:	push   rbp
  404a77:	mov    rbp,rsp
  404a7a:	sub    rsp,0x240
  404a81:	mov    QWORD PTR [rbp-0x238],rdi
  404a88:	mov    QWORD PTR [rbp-0x240],rsi
  404a8f:	mov    rax,QWORD PTR fs:0x28
  404a98:	mov    QWORD PTR [rbp-0x8],rax
  404a9c:	xor    eax,eax
  404a9e:	mov    rax,QWORD PTR [rbp-0x240]
  404aa5:	mov    rax,QWORD PTR [rax+0x18]
  404aa9:	inc    rax
  404aac:	mov    rdi,rax
  404aaf:	call   402c9b <open@plt+0x45b>
  404ab4:	mov    DWORD PTR [rbp-0x224],eax
  404aba:	mov    rax,QWORD PTR [rbp-0x240]
  404ac1:	mov    rax,QWORD PTR [rax+0x18]
  404ac5:	add    rax,0x5
  404ac9:	mov    QWORD PTR [rbp-0x220],rax
  404ad0:	mov    eax,DWORD PTR [rbp-0x224]
  404ad6:	mov    edi,eax
  404ad8:	call   402d3d <open@plt+0x4fd>
  404add:	mov    QWORD PTR [rbp-0x218],rax
  404ae4:	cmp    QWORD PTR [rbp-0x218],0x0
  404aec:	je     404bbe <open@plt+0x237e>
  404af2:	mov    rax,QWORD PTR [rbp-0x218]
  404af9:	mov    rsi,QWORD PTR [rax+0x48]
  404afd:	mov    rax,QWORD PTR [rbp-0x218]
  404b04:	mov    rcx,QWORD PTR [rax+0x58]
  404b08:	mov    rax,QWORD PTR [rbp-0x218]
  404b0f:	mov    r8,QWORD PTR [rax+0x50]
  404b13:	mov    rax,QWORD PTR [rbp-0x218]
  404b1a:	mov    rdi,QWORD PTR [rax+0x60]
  404b1e:	mov    rdx,QWORD PTR [rbp-0x220]
  404b25:	lea    rax,[rbp-0x210]
  404b2c:	push   rsi
  404b2d:	push   rcx
  404b2e:	mov    r9,r8
  404b31:	mov    r8,rdi
  404b34:	mov    rcx,rdx
  404b37:	lea    rdx,[rip+0x1632]        # 406170 <open@plt+0x3930>
  404b3e:	mov    esi,0x200
  404b43:	mov    rdi,rax
  404b46:	mov    eax,0x0
  404b4b:	call   4024a0 <snprintf@plt>
  404b50:	add    rsp,0x10
  404b54:	mov    rax,QWORD PTR [rbp-0x218]
  404b5b:	mov    QWORD PTR [rax+0x60],0x0
  404b63:	mov    rax,QWORD PTR [rbp-0x218]
  404b6a:	mov    QWORD PTR [rax+0x58],0x0
  404b72:	mov    rax,QWORD PTR [rbp-0x218]
  404b79:	mov    QWORD PTR [rax+0x50],0x0
  404b81:	mov    rax,QWORD PTR [rbp-0x218]
  404b88:	mov    QWORD PTR [rax+0x48],0x0
  404b90:	lea    rax,[rbp-0x210]
  404b97:	mov    rdi,rax
  404b9a:	call   4025c0 <strlen@plt>
  404b9f:	lea    rdx,[rax+0x1]
  404ba3:	lea    rcx,[rbp-0x210]
  404baa:	mov    rax,QWORD PTR [rbp-0x238]
  404bb1:	mov    rsi,rcx
  404bb4:	mov    rdi,rax
  404bb7:	call   4036fd <open@plt+0xebd>
  404bbc:	jmp    404bbf <open@plt+0x237f>
  404bbe:	nop
  404bbf:	mov    rax,QWORD PTR [rbp-0x8]
  404bc3:	xor    rax,QWORD PTR fs:0x28
  404bcc:	je     404bd3 <open@plt+0x2393>
  404bce:	call   402710 <__stack_chk_fail@plt>
  404bd3:	leave  
  404bd4:	ret    
  404bd5:	endbr64 
  404bd9:	push   rbp
  404bda:	mov    rbp,rsp
  404bdd:	sub    rsp,0x50
  404be1:	mov    QWORD PTR [rbp-0x48],rdi
  404be5:	mov    QWORD PTR [rbp-0x50],rsi
  404be9:	mov    QWORD PTR [rbp-0x30],0x6
  404bf1:	mov    rax,QWORD PTR [rbp-0x50]
  404bf5:	mov    rdx,QWORD PTR [rax+0x30]
  404bf9:	mov    rax,QWORD PTR [rbp-0x50]
  404bfd:	mov    rcx,QWORD PTR [rax+0x28]
  404c01:	mov    rax,QWORD PTR [rbp-0x48]
  404c05:	mov    rsi,rcx
  404c08:	mov    rdi,rax
  404c0b:	call   403234 <open@plt+0x9f4>
  404c10:	mov    QWORD PTR [rbp-0x28],rax
  404c14:	mov    rax,QWORD PTR [rbp-0x28]
  404c18:	mov    rax,QWORD PTR [rax+0x38]
  404c1c:	mov    rdi,rax
  404c1f:	call   402460 <rb_get_type@plt>
  404c24:	cmp    al,0x40
  404c26:	jne    404c3d <open@plt+0x23fd>
  404c28:	mov    rax,QWORD PTR [rbp-0x28]
  404c2c:	mov    rax,QWORD PTR [rax+0x38]
  404c30:	mov    esi,0x4
  404c35:	mov    rdi,rax
  404c38:	call   402600 <rb_set_type@plt>
  404c3d:	mov    rax,QWORD PTR [rbp-0x28]
  404c41:	mov    rax,QWORD PTR [rax+0x40]
  404c45:	mov    rdi,rax
  404c48:	call   402460 <rb_get_type@plt>
  404c4d:	cmp    al,0x40
  404c4f:	jne    404c66 <open@plt+0x2426>
  404c51:	mov    rax,QWORD PTR [rbp-0x28]
  404c55:	mov    rax,QWORD PTR [rax+0x40]
  404c59:	mov    esi,0x4
  404c5e:	mov    rdi,rax
  404c61:	call   402600 <rb_set_type@plt>
  404c66:	mov    rax,QWORD PTR [rbp-0x50]
  404c6a:	mov    rax,QWORD PTR [rax+0x18]
  404c6e:	inc    rax
  404c71:	mov    rdi,rax
  404c74:	call   402c9b <open@plt+0x45b>
  404c79:	mov    DWORD PTR [rbp-0x34],eax
  404c7c:	mov    edx,DWORD PTR [rbp-0x34]
  404c7f:	mov    rax,QWORD PTR [rbp-0x28]
  404c83:	mov    esi,edx
  404c85:	mov    rdi,rax
  404c88:	call   402dcf <open@plt+0x58f>
  404c8d:	mov    rax,QWORD PTR [rbp-0x50]
  404c91:	mov    rax,QWORD PTR [rax+0x18]
  404c95:	add    rax,0x5
  404c99:	movzx  eax,BYTE PTR [rax]
  404c9c:	mov    BYTE PTR [rbp-0x35],al
  404c9f:	mov    rax,QWORD PTR [rbp-0x50]
  404ca3:	mov    rax,QWORD PTR [rax+0x20]
  404ca7:	sub    rax,QWORD PTR [rbp-0x30]
  404cab:	mov    QWORD PTR [rbp-0x20],rax
  404caf:	mov    rax,QWORD PTR [rbp-0x50]
  404cb3:	mov    rax,QWORD PTR [rax+0x18]
  404cb7:	add    rax,0x6
  404cbb:	mov    QWORD PTR [rbp-0x18],rax
  404cbf:	mov    rax,QWORD PTR [rbp-0x28]
  404cc3:	movzx  eax,BYTE PTR [rax+0x68]
  404cc7:	or     eax,0x2
  404cca:	mov    edx,eax
  404ccc:	mov    rax,QWORD PTR [rbp-0x28]
  404cd0:	mov    BYTE PTR [rax+0x68],dl
  404cd3:	mov    edi,0xe0
  404cd8:	call   402c34 <open@plt+0x3f4>
  404cdd:	mov    rdx,rax
  404ce0:	mov    rax,QWORD PTR [rbp-0x28]
  404ce4:	mov    QWORD PTR [rax+0x70],rdx
  404ce8:	mov    rax,QWORD PTR [rbp-0x28]
  404cec:	mov    rax,QWORD PTR [rax+0x70]
  404cf0:	mov    QWORD PTR [rbp-0x10],rax
  404cf4:	mov    rax,QWORD PTR [rbp-0x28]
  404cf8:	mov    rax,QWORD PTR [rax+0x70]
  404cfc:	add    rax,0x70
  404d00:	mov    QWORD PTR [rbp-0x8],rax
  404d04:	mov    rax,QWORD PTR [rbp-0x10]
  404d08:	mov    QWORD PTR [rax+0x10],0x0
  404d10:	mov    rax,QWORD PTR [rbp-0x10]
  404d14:	mov    QWORD PTR [rax+0x28],0x0
  404d1c:	mov    rax,QWORD PTR [rbp-0x10]
  404d20:	lea    rdx,[rip+0xffffffffffffdfc8]        # 402cef <open@plt+0x4af>
  404d27:	mov    QWORD PTR [rax+0x40],rdx
  404d2b:	mov    rax,QWORD PTR [rbp-0x10]
  404d2f:	lea    rdx,[rip+0xffffffffffffdfe4]        # 402d1a <open@plt+0x4da>
  404d36:	mov    QWORD PTR [rax+0x48],rdx
  404d3a:	mov    rax,QWORD PTR [rbp-0x10]
  404d3e:	mov    DWORD PTR [rax+0x58],0x1
  404d45:	mov    rax,QWORD PTR [rbp-0x28]
  404d49:	mov    rax,QWORD PTR [rax+0x70]
  404d4d:	mov    edx,0x70
  404d52:	lea    rsi,[rip+0x1430]        # 406189 <open@plt+0x3949>
  404d59:	mov    rdi,rax
  404d5c:	call   402770 <inflateInit_@plt>
  404d61:	mov    rax,QWORD PTR [rbp-0x8]
  404d65:	mov    QWORD PTR [rax+0x10],0x0
  404d6d:	mov    rax,QWORD PTR [rbp-0x8]
  404d71:	mov    QWORD PTR [rax+0x28],0x0
  404d79:	mov    rax,QWORD PTR [rbp-0x8]
  404d7d:	lea    rdx,[rip+0xffffffffffffdf6b]        # 402cef <open@plt+0x4af>
  404d84:	mov    QWORD PTR [rax+0x40],rdx
  404d88:	mov    rax,QWORD PTR [rbp-0x8]
  404d8c:	lea    rdx,[rip+0xffffffffffffdf87]        # 402d1a <open@plt+0x4da>
  404d93:	mov    QWORD PTR [rax+0x48],rdx
  404d97:	mov    rax,QWORD PTR [rbp-0x8]
  404d9b:	mov    DWORD PTR [rax+0x58],0x1
  404da2:	cmp    BYTE PTR [rbp-0x35],0x9
  404da6:	jbe    404dac <open@plt+0x256c>
  404da8:	mov    BYTE PTR [rbp-0x35],0xff
  404dac:	movzx  eax,BYTE PTR [rbp-0x35]
  404db0:	mov    rdx,QWORD PTR [rbp-0x28]
  404db4:	mov    rdx,QWORD PTR [rdx+0x70]
  404db8:	lea    rdi,[rdx+0x70]
  404dbc:	mov    ecx,0x70
  404dc1:	lea    rdx,[rip+0x13c1]        # 406189 <open@plt+0x3949>
  404dc8:	mov    esi,eax
  404dca:	call   402540 <deflateInit_@plt>
  404dcf:	cmp    QWORD PTR [rbp-0x20],0x0
  404dd4:	je     404ded <open@plt+0x25ad>
  404dd6:	mov    rdx,QWORD PTR [rbp-0x20]
  404dda:	mov    rcx,QWORD PTR [rbp-0x18]
  404dde:	mov    rax,QWORD PTR [rbp-0x28]
  404de2:	mov    rsi,rcx
  404de5:	mov    rdi,rax
  404de8:	call   403950 <open@plt+0x1110>
  404ded:	mov    rax,QWORD PTR [rbp-0x28]
  404df1:	mov    rax,QWORD PTR [rax+0x38]
  404df5:	mov    rdx,QWORD PTR [rbp-0x28]
  404df9:	mov    rsi,rdx
  404dfc:	mov    rdi,rax
  404dff:	call   403f74 <open@plt+0x1734>
  404e04:	mov    rax,QWORD PTR [rbp-0x28]
  404e08:	mov    rax,QWORD PTR [rax+0x40]
  404e0c:	mov    rdx,QWORD PTR [rbp-0x28]
  404e10:	mov    rsi,rdx
  404e13:	mov    rdi,rax
  404e16:	call   403bf9 <open@plt+0x13b9>
  404e1b:	nop
  404e1c:	leave  
  404e1d:	ret    
  404e1e:	endbr64 
  404e22:	push   rbp
  404e23:	mov    rbp,rsp
  404e26:	sub    rsp,0x40
  404e2a:	mov    QWORD PTR [rbp-0x38],rdi
  404e2e:	mov    QWORD PTR [rbp-0x40],rsi
  404e32:	mov    rax,QWORD PTR [rbp-0x40]
  404e36:	mov    rax,QWORD PTR [rax+0x18]
  404e3a:	add    rax,0x2
  404e3e:	mov    QWORD PTR [rbp-0x18],rax
  404e42:	mov    rax,QWORD PTR [rbp-0x18]
  404e46:	mov    QWORD PTR [rbp-0x10],rax
  404e4a:	mov    rax,QWORD PTR [rbp-0x10]
  404e4e:	mov    rdi,rax
  404e51:	call   4025c0 <strlen@plt>
  404e56:	inc    rax
  404e59:	add    QWORD PTR [rbp-0x18],rax
  404e5d:	mov    rax,QWORD PTR [rbp-0x18]
  404e61:	mov    QWORD PTR [rbp-0x30],rax
  404e65:	mov    rax,QWORD PTR [rbp-0x30]
  404e69:	mov    rdi,rax
  404e6c:	call   4025c0 <strlen@plt>
  404e71:	inc    rax
  404e74:	add    QWORD PTR [rbp-0x18],rax
  404e78:	mov    rax,QWORD PTR [rbp-0x18]
  404e7c:	mov    QWORD PTR [rbp-0x28],rax
  404e80:	mov    rax,QWORD PTR [rbp-0x28]
  404e84:	mov    rdi,rax
  404e87:	call   4025c0 <strlen@plt>
  404e8c:	inc    rax
  404e8f:	add    QWORD PTR [rbp-0x18],rax
  404e93:	mov    rax,QWORD PTR [rbp-0x18]
  404e97:	mov    QWORD PTR [rbp-0x20],rax
  404e9b:	mov    rax,QWORD PTR [rbp-0x30]
  404e9f:	movzx  eax,BYTE PTR [rax]
  404ea2:	test   al,al
  404ea4:	jne    404eae <open@plt+0x266e>
  404ea6:	mov    rax,QWORD PTR [rbp-0x10]
  404eaa:	mov    QWORD PTR [rbp-0x30],rax
  404eae:	mov    rax,QWORD PTR [rbp-0x28]
  404eb2:	movzx  eax,BYTE PTR [rax]
  404eb5:	test   al,al
  404eb7:	jne    404ec1 <open@plt+0x2681>
  404eb9:	mov    QWORD PTR [rbp-0x28],0x0
  404ec1:	mov    rax,QWORD PTR [rbp-0x20]
  404ec5:	movzx  eax,BYTE PTR [rax]
  404ec8:	test   al,al
  404eca:	jne    404ed4 <open@plt+0x2694>
  404ecc:	mov    QWORD PTR [rbp-0x20],0x0
  404ed4:	mov    rcx,QWORD PTR [rbp-0x20]
  404ed8:	mov    rdx,QWORD PTR [rbp-0x28]
  404edc:	mov    rsi,QWORD PTR [rbp-0x30]
  404ee0:	mov    rax,QWORD PTR [rbp-0x10]
  404ee4:	mov    rdi,rax
  404ee7:	call   402820 <rb_setup_ssl_server@plt>
  404eec:	test   eax,eax
  404eee:	jne    404f1e <open@plt+0x26de>
  404ef0:	lea    rax,[rip+0x1299]        # 406190 <open@plt+0x3950>
  404ef7:	mov    QWORD PTR [rbp-0x8],rax
  404efb:	mov    rax,QWORD PTR [rbp-0x8]
  404eff:	mov    rdi,rax
  404f02:	call   4025c0 <strlen@plt>
  404f07:	mov    rdx,rax
  404f0a:	mov    rcx,QWORD PTR [rbp-0x8]
  404f0e:	mov    rax,QWORD PTR [rbp-0x38]
  404f12:	mov    rsi,rcx
  404f15:	mov    rdi,rax
  404f18:	call   4036fd <open@plt+0xebd>
  404f1d:	nop
  404f1e:	leave  
  404f1f:	ret    
  404f20:	endbr64 
  404f24:	push   rbp
  404f25:	mov    rbp,rsp
  404f28:	sub    rsp,0x20
  404f2c:	mov    QWORD PTR [rbp-0x18],rdi
  404f30:	mov    QWORD PTR [rbp-0x20],rsi
  404f34:	cmp    QWORD PTR [rbp-0x20],0x0
  404f39:	je     404fa2 <open@plt+0x2762>
  404f3b:	mov    rax,QWORD PTR [rbp-0x20]
  404f3f:	mov    rdx,QWORD PTR [rax+0x30]
  404f43:	mov    rax,QWORD PTR [rbp-0x20]
  404f47:	mov    rcx,QWORD PTR [rax+0x28]
  404f4b:	mov    rax,QWORD PTR [rbp-0x18]
  404f4f:	mov    rsi,rcx
  404f52:	mov    rdi,rax
  404f55:	call   403234 <open@plt+0x9f4>
  404f5a:	mov    QWORD PTR [rbp-0x8],rax
  404f5e:	mov    rax,QWORD PTR [rbp-0x20]
  404f62:	mov    rax,QWORD PTR [rax+0x18]
  404f66:	inc    rax
  404f69:	mov    rdi,rax
  404f6c:	call   402c9b <open@plt+0x45b>
  404f71:	mov    DWORD PTR [rbp-0xc],eax
  404f74:	mov    edx,DWORD PTR [rbp-0xc]
  404f77:	mov    rax,QWORD PTR [rbp-0x8]
  404f7b:	mov    esi,edx
  404f7d:	mov    rdi,rax
  404f80:	call   402dcf <open@plt+0x58f>
  404f85:	mov    rax,QWORD PTR [rbp-0x8]
  404f89:	lea    rdx,[rip+0x1208]        # 406198 <open@plt+0x3958>
  404f90:	mov    esi,0x1
  404f95:	mov    rdi,rax
  404f98:	mov    eax,0x0
  404f9d:	call   402f4e <open@plt+0x70e>
  404fa2:	mov    rax,QWORD PTR [rip+0x3297]        # 408240 <open@plt+0x5a00>
  404fa9:	mov    rdi,rax
  404fac:	call   4025c0 <strlen@plt>
  404fb1:	mov    rdx,rax
  404fb4:	mov    rcx,QWORD PTR [rip+0x3285]        # 408240 <open@plt+0x5a00>
  404fbb:	mov    rax,QWORD PTR [rbp-0x18]
  404fbf:	mov    rsi,rcx
  404fc2:	mov    rdi,rax
  404fc5:	call   4036fd <open@plt+0xebd>
  404fca:	nop
  404fcb:	leave  
  404fcc:	ret    
  404fcd:	endbr64 
  404fd1:	push   rbp
  404fd2:	mov    rbp,rsp
  404fd5:	sub    rsp,0x10
  404fd9:	mov    QWORD PTR [rbp-0x8],rdi
  404fdd:	mov    rax,QWORD PTR [rip+0x3264]        # 408248 <open@plt+0x5a08>
  404fe4:	mov    rdi,rax
  404fe7:	call   4025c0 <strlen@plt>
  404fec:	mov    rdx,rax
  404fef:	mov    rcx,QWORD PTR [rip+0x3252]        # 408248 <open@plt+0x5a08>
  404ff6:	mov    rax,QWORD PTR [rbp-0x8]
  404ffa:	mov    rsi,rcx
  404ffd:	mov    rdi,rax
  405000:	call   4036fd <open@plt+0xebd>
  405005:	nop
  405006:	leave  
  405007:	ret    
  405008:	endbr64 
  40500c:	push   rbp
  40500d:	mov    rbp,rsp
  405010:	sub    rsp,0x120
  405017:	mov    QWORD PTR [rbp-0x118],rdi
  40501e:	mov    rax,QWORD PTR fs:0x28
  405027:	mov    QWORD PTR [rbp-0x8],rax
  40502b:	xor    eax,eax
  40502d:	lea    rdx,[rbp-0x110]
  405034:	mov    eax,0x0
  405039:	mov    ecx,0x20
  40503e:	mov    rdi,rdx
  405041:	rep stos QWORD PTR es:[rdi],rax
  405044:	mov    BYTE PTR [rbp-0x110],0x56
  40504b:	call   4024b0 <rb_lib_version@plt>
  405050:	mov    rcx,rax
  405053:	lea    rax,[rbp-0x110]
  40505a:	inc    rax
  40505d:	mov    edx,0xfe
  405062:	mov    rsi,rcx
  405065:	mov    rdi,rax
  405068:	call   4027b0 <strncpy@plt>
  40506d:	lea    rax,[rbp-0x110]
  405074:	mov    rdi,rax
  405077:	call   4025c0 <strlen@plt>
  40507c:	mov    rdx,rax
  40507f:	lea    rcx,[rbp-0x110]
  405086:	mov    rax,QWORD PTR [rbp-0x118]
  40508d:	mov    rsi,rcx
  405090:	mov    rdi,rax
  405093:	call   4036fd <open@plt+0xebd>
  405098:	nop
  405099:	mov    rax,QWORD PTR [rbp-0x8]
  40509d:	xor    rax,QWORD PTR fs:0x28
  4050a6:	je     4050ad <open@plt+0x286d>
  4050a8:	call   402710 <__stack_chk_fail@plt>
  4050ad:	leave  
  4050ae:	ret    
  4050af:	endbr64 
  4050b3:	push   rbp
  4050b4:	mov    rbp,rsp
  4050b7:	sub    rsp,0x20
  4050bb:	mov    QWORD PTR [rbp-0x18],rdi
  4050bf:	mov    QWORD PTR [rbp-0x20],rsi
  4050c3:	cmp    QWORD PTR [rbp-0x20],0x0
  4050c8:	je     405131 <open@plt+0x28f1>
  4050ca:	mov    rax,QWORD PTR [rbp-0x20]
  4050ce:	mov    rdx,QWORD PTR [rax+0x30]
  4050d2:	mov    rax,QWORD PTR [rbp-0x20]
  4050d6:	mov    rcx,QWORD PTR [rax+0x28]
  4050da:	mov    rax,QWORD PTR [rbp-0x18]
  4050de:	mov    rsi,rcx
  4050e1:	mov    rdi,rax
  4050e4:	call   403234 <open@plt+0x9f4>
  4050e9:	mov    QWORD PTR [rbp-0x8],rax
  4050ed:	mov    rax,QWORD PTR [rbp-0x20]
  4050f1:	mov    rax,QWORD PTR [rax+0x18]
  4050f5:	inc    rax
  4050f8:	mov    rdi,rax
  4050fb:	call   402c9b <open@plt+0x45b>
  405100:	mov    DWORD PTR [rbp-0xc],eax
  405103:	mov    edx,DWORD PTR [rbp-0xc]
  405106:	mov    rax,QWORD PTR [rbp-0x8]
  40510a:	mov    esi,edx
  40510c:	mov    rdi,rax
  40510f:	call   402dcf <open@plt+0x58f>
  405114:	mov    rax,QWORD PTR [rbp-0x8]
  405118:	lea    rdx,[rip+0x10a1]        # 4061c0 <open@plt+0x3980>
  40511f:	mov    esi,0x1
  405124:	mov    rdi,rax
  405127:	mov    eax,0x0
  40512c:	call   402f4e <open@plt+0x70e>
  405131:	mov    rax,QWORD PTR [rip+0x3118]        # 408250 <open@plt+0x5a10>
  405138:	mov    rdi,rax
  40513b:	call   4025c0 <strlen@plt>
  405140:	mov    rdx,rax
  405143:	mov    rcx,QWORD PTR [rip+0x3106]        # 408250 <open@plt+0x5a10>
  40514a:	mov    rax,QWORD PTR [rbp-0x18]
  40514e:	mov    rsi,rcx
  405151:	mov    rdi,rax
  405154:	call   4036fd <open@plt+0xebd>
  405159:	nop
  40515a:	leave  
  40515b:	ret    
  40515c:	endbr64 
  405160:	push   rbp
  405161:	mov    rbp,rsp
  405164:	sub    rsp,0x30
  405168:	mov    QWORD PTR [rbp-0x28],rdi
  40516c:	mov    rax,QWORD PTR [rbp-0x28]
  405170:	mov    rax,QWORD PTR [rax+0x30]
  405174:	mov    QWORD PTR [rbp-0x18],rax
  405178:	cmp    QWORD PTR [rbp-0x18],0x0
  40517d:	je     405189 <open@plt+0x2949>
  40517f:	mov    rax,QWORD PTR [rbp-0x18]
  405183:	mov    rax,QWORD PTR [rax+0x10]
  405187:	jmp    40518e <open@plt+0x294e>
  405189:	mov    eax,0x0
  40518e:	mov    QWORD PTR [rbp-0x10],rax
  405192:	jmp    4053d9 <open@plt+0x2b99>
  405197:	mov    rax,QWORD PTR [rbp-0x18]
  40519b:	mov    rax,QWORD PTR [rax]
  40519e:	mov    QWORD PTR [rbp-0x8],rax
  4051a2:	mov    rax,QWORD PTR [rbp-0x8]
  4051a6:	mov    rax,QWORD PTR [rax+0x18]
  4051aa:	movzx  eax,BYTE PTR [rax]
  4051ad:	movzx  eax,al
  4051b0:	sub    eax,0x41
  4051b3:	cmp    eax,0x19
  4051b6:	ja     405383 <open@plt+0x2b43>
  4051bc:	mov    eax,eax
  4051be:	lea    rdx,[rax*4+0x0]
  4051c6:	lea    rax,[rip+0x1017]        # 4061e4 <open@plt+0x39a4>
  4051cd:	mov    eax,DWORD PTR [rdx+rax*1]
  4051d0:	movsxd rdx,eax
  4051d3:	lea    rax,[rip+0x100a]        # 4061e4 <open@plt+0x39a4>
  4051da:	add    rax,rdx
  4051dd:	notrack jmp rax
  4051e0:	mov    rax,QWORD PTR [rbp-0x8]
  4051e4:	mov    eax,DWORD PTR [rax+0x48]
  4051e7:	cmp    eax,0x2
  4051ea:	jne    4051fa <open@plt+0x29ba>
  4051ec:	mov    rax,QWORD PTR [rbp-0x8]
  4051f0:	mov    rax,QWORD PTR [rax+0x20]
  4051f4:	cmp    rax,0x5
  4051f8:	je     405212 <open@plt+0x29d2>
  4051fa:	mov    rdx,QWORD PTR [rbp-0x8]
  4051fe:	mov    rax,QWORD PTR [rbp-0x28]
  405202:	mov    rsi,rdx
  405205:	mov    rdi,rax
  405208:	call   404824 <open@plt+0x1fe4>
  40520d:	jmp    405384 <open@plt+0x2b44>
  405212:	movzx  eax,BYTE PTR [rip+0xec1f]        # 413e38 <open@plt+0x115f8>
  405219:	xor    eax,0x1
  40521c:	test   al,al
  40521e:	je     405238 <open@plt+0x29f8>
  405220:	mov    rdx,QWORD PTR [rbp-0x8]
  405224:	mov    rax,QWORD PTR [rbp-0x28]
  405228:	mov    rsi,rdx
  40522b:	mov    rdi,rax
  40522e:	call   404f20 <open@plt+0x26e0>
  405233:	jmp    405384 <open@plt+0x2b44>
  405238:	mov    rdx,QWORD PTR [rbp-0x8]
  40523c:	mov    rax,QWORD PTR [rbp-0x28]
  405240:	mov    rsi,rdx
  405243:	mov    rdi,rax
  405246:	call   40486e <open@plt+0x202e>
  40524b:	jmp    405384 <open@plt+0x2b44>
  405250:	mov    rax,QWORD PTR [rbp-0x8]
  405254:	mov    rax,QWORD PTR [rax+0x20]
  405258:	cmp    rax,0x5
  40525c:	je     405276 <open@plt+0x2a36>
  40525e:	mov    rdx,QWORD PTR [rbp-0x8]
  405262:	mov    rax,QWORD PTR [rbp-0x28]
  405266:	mov    rsi,rdx
  405269:	mov    rdi,rax
  40526c:	call   404824 <open@plt+0x1fe4>
  405271:	jmp    405384 <open@plt+0x2b44>
  405276:	movzx  eax,BYTE PTR [rip+0xebbb]        # 413e38 <open@plt+0x115f8>
  40527d:	xor    eax,0x1
  405280:	test   al,al
  405282:	je     40529c <open@plt+0x2a5c>
  405284:	mov    rdx,QWORD PTR [rbp-0x8]
  405288:	mov    rax,QWORD PTR [rbp-0x28]
  40528c:	mov    rsi,rdx
  40528f:	mov    rdi,rax
  405292:	call   404f20 <open@plt+0x26e0>
  405297:	jmp    405384 <open@plt+0x2b44>
  40529c:	mov    rdx,QWORD PTR [rbp-0x8]
  4052a0:	mov    rax,QWORD PTR [rbp-0x28]
  4052a4:	mov    rsi,rdx
  4052a7:	mov    rdi,rax
  4052aa:	call   40498b <open@plt+0x214b>
  4052af:	jmp    405384 <open@plt+0x2b44>
  4052b4:	mov    rax,QWORD PTR [rbp-0x8]
  4052b8:	mov    rax,QWORD PTR [rax+0x20]
  4052bc:	cmp    rax,0x5
  4052c0:	je     4052da <open@plt+0x2a9a>
  4052c2:	mov    rdx,QWORD PTR [rbp-0x8]
  4052c6:	mov    rax,QWORD PTR [rbp-0x28]
  4052ca:	mov    rsi,rdx
  4052cd:	mov    rdi,rax
  4052d0:	call   404824 <open@plt+0x1fe4>
  4052d5:	jmp    405384 <open@plt+0x2b44>
  4052da:	mov    rdx,QWORD PTR [rbp-0x8]
  4052de:	mov    rax,QWORD PTR [rbp-0x28]
  4052e2:	mov    rsi,rdx
  4052e5:	mov    rdi,rax
  4052e8:	call   40495b <open@plt+0x211b>
  4052ed:	jmp    405384 <open@plt+0x2b44>
  4052f2:	movzx  eax,BYTE PTR [rip+0xeb3f]        # 413e38 <open@plt+0x115f8>
  4052f9:	xor    eax,0x1
  4052fc:	test   al,al
  4052fe:	je     405315 <open@plt+0x2ad5>
  405300:	mov    rdx,QWORD PTR [rbp-0x8]
  405304:	mov    rax,QWORD PTR [rbp-0x28]
  405308:	mov    rsi,rdx
  40530b:	mov    rdi,rax
  40530e:	call   404f20 <open@plt+0x26e0>
  405313:	jmp    405384 <open@plt+0x2b44>
  405315:	mov    rdx,QWORD PTR [rbp-0x8]
  405319:	mov    rax,QWORD PTR [rbp-0x28]
  40531d:	mov    rsi,rdx
  405320:	mov    rdi,rax
  405323:	call   404e1e <open@plt+0x25de>
  405328:	jmp    405384 <open@plt+0x2b44>
  40532a:	mov    rdx,QWORD PTR [rbp-0x8]
  40532e:	mov    rax,QWORD PTR [rbp-0x28]
  405332:	mov    rsi,rdx
  405335:	mov    rdi,rax
  405338:	call   404a72 <open@plt+0x2232>
  40533d:	jmp    405384 <open@plt+0x2b44>
  40533f:	mov    rax,QWORD PTR [rbp-0x8]
  405343:	mov    eax,DWORD PTR [rax+0x48]
  405346:	cmp    eax,0x2
  405349:	jne    405359 <open@plt+0x2b19>
  40534b:	mov    rax,QWORD PTR [rbp-0x8]
  40534f:	mov    rax,QWORD PTR [rax+0x20]
  405353:	cmp    rax,0x5
  405357:	ja     40536e <open@plt+0x2b2e>
  405359:	mov    rdx,QWORD PTR [rbp-0x8]
  40535d:	mov    rax,QWORD PTR [rbp-0x28]
  405361:	mov    rsi,rdx
  405364:	mov    rdi,rax
  405367:	call   404824 <open@plt+0x1fe4>
  40536c:	jmp    405384 <open@plt+0x2b44>
  40536e:	mov    rdx,QWORD PTR [rbp-0x8]
  405372:	mov    rax,QWORD PTR [rbp-0x28]
  405376:	mov    rsi,rdx
  405379:	mov    rdi,rax
  40537c:	call   404bd5 <open@plt+0x2395>
  405381:	jmp    405384 <open@plt+0x2b44>
  405383:	nop
  405384:	mov    rax,QWORD PTR [rbp-0x28]
  405388:	lea    rdx,[rax+0x30]
  40538c:	mov    rax,QWORD PTR [rbp-0x18]
  405390:	mov    rsi,rdx
  405393:	mov    rdi,rax
  405396:	call   402b40 <open@plt+0x300>
  40539b:	mov    rax,QWORD PTR [rbp-0x8]
  40539f:	mov    rax,QWORD PTR [rax+0x18]
  4053a3:	mov    rdi,rax
  4053a6:	call   402c70 <open@plt+0x430>
  4053ab:	mov    rax,QWORD PTR [rbp-0x8]
  4053af:	mov    rdi,rax
  4053b2:	call   402c70 <open@plt+0x430>
  4053b7:	mov    rax,QWORD PTR [rbp-0x10]
  4053bb:	mov    QWORD PTR [rbp-0x18],rax
  4053bf:	cmp    QWORD PTR [rbp-0x18],0x0
  4053c4:	je     4053d0 <open@plt+0x2b90>
  4053c6:	mov    rax,QWORD PTR [rbp-0x18]
  4053ca:	mov    rax,QWORD PTR [rax+0x10]
  4053ce:	jmp    4053d5 <open@plt+0x2b95>
  4053d0:	mov    eax,0x0
  4053d5:	mov    QWORD PTR [rbp-0x10],rax
  4053d9:	cmp    QWORD PTR [rbp-0x18],0x0
  4053de:	jne    405197 <open@plt+0x2957>
  4053e4:	nop
  4053e5:	leave  
  4053e6:	ret    
  4053e7:	endbr64 
  4053eb:	push   rbp
  4053ec:	mov    rbp,rsp
  4053ef:	sub    rsp,0x30
  4053f3:	mov    QWORD PTR [rbp-0x28],rdi
  4053f7:	mov    QWORD PTR [rbp-0x30],rsi
  4053fb:	mov    rax,QWORD PTR [rbp-0x30]
  4053ff:	mov    QWORD PTR [rbp-0x10],rax
  405403:	mov    edi,0x50
  405408:	call   402c34 <open@plt+0x3f4>
  40540d:	mov    QWORD PTR [rbp-0x8],rax
  405411:	mov    edi,0x4000
  405416:	call   402c34 <open@plt+0x3f4>
  40541b:	mov    rdx,rax
  40541e:	mov    rax,QWORD PTR [rbp-0x8]
  405422:	mov    QWORD PTR [rax+0x18],rdx
  405426:	mov    rax,QWORD PTR [rbp-0x8]
  40542a:	mov    QWORD PTR [rax+0x20],0x4000
  405432:	mov    rax,QWORD PTR [rbp-0x8]
  405436:	lea    rcx,[rax+0x28]
  40543a:	mov    rax,QWORD PTR [rbp-0x8]
  40543e:	mov    rdx,QWORD PTR [rax+0x20]
  405442:	mov    rax,QWORD PTR [rbp-0x8]
  405446:	mov    rsi,QWORD PTR [rax+0x18]
  40544a:	mov    rax,QWORD PTR [rbp-0x10]
  40544e:	mov    rax,QWORD PTR [rax+0x20]
  405452:	mov    r8d,0x4
  405458:	mov    rdi,rax
  40545b:	call   402780 <rb_recv_fd_buf@plt>
  405460:	mov    DWORD PTR [rbp-0x14],eax
  405463:	cmp    DWORD PTR [rbp-0x14],0x0
  405467:	jg     405487 <open@plt+0x2c47>
  405469:	mov    rax,QWORD PTR [rbp-0x8]
  40546d:	mov    rax,QWORD PTR [rax+0x18]
  405471:	mov    rdi,rax
  405474:	call   402c70 <open@plt+0x430>
  405479:	mov    rax,QWORD PTR [rbp-0x8]
  40547d:	mov    rdi,rax
  405480:	call   402c70 <open@plt+0x430>
  405485:	jmp    4054e4 <open@plt+0x2ca4>
  405487:	mov    eax,DWORD PTR [rbp-0x14]
  40548a:	movsxd rdx,eax
  40548d:	mov    rax,QWORD PTR [rbp-0x8]
  405491:	mov    QWORD PTR [rax+0x20],rdx
  405495:	mov    rax,QWORD PTR [rbp-0x10]
  405499:	lea    rdx,[rax+0x30]
  40549d:	mov    rcx,QWORD PTR [rbp-0x8]
  4054a1:	mov    rax,QWORD PTR [rbp-0x8]
  4054a5:	mov    rsi,rcx
  4054a8:	mov    rdi,rax
  4054ab:	call   402a3a <open@plt+0x1fa>
  4054b0:	mov    DWORD PTR [rbp-0x18],0x0
  4054b7:	jmp    4054bc <open@plt+0x2c7c>
  4054b9:	inc    DWORD PTR [rbp-0x18]
  4054bc:	cmp    DWORD PTR [rbp-0x18],0x3
  4054c0:	jg     4054da <open@plt+0x2c9a>
  4054c2:	mov    rax,QWORD PTR [rbp-0x8]
  4054c6:	mov    edx,DWORD PTR [rbp-0x18]
  4054c9:	movsxd rdx,edx
  4054cc:	add    rdx,0x4
  4054d0:	mov    rax,QWORD PTR [rax+rdx*8+0x8]
  4054d5:	test   rax,rax
  4054d8:	jne    4054b9 <open@plt+0x2c79>
  4054da:	mov    rax,QWORD PTR [rbp-0x8]
  4054de:	mov    edx,DWORD PTR [rbp-0x18]
  4054e1:	mov    DWORD PTR [rax+0x48],edx
  4054e4:	cmp    DWORD PTR [rbp-0x14],0x0
  4054e8:	jg     405403 <open@plt+0x2bc3>
  4054ee:	cmp    DWORD PTR [rbp-0x14],0x0
  4054f2:	je     40550c <open@plt+0x2ccc>
  4054f4:	cmp    DWORD PTR [rbp-0x14],0x0
  4054f8:	jns    405516 <open@plt+0x2cd6>
  4054fa:	call   4026e0 <__errno_location@plt>
  4054ff:	mov    eax,DWORD PTR [rax]
  405501:	mov    edi,eax
  405503:	call   402490 <rb_ignore_errno@plt>
  405508:	test   eax,eax
  40550a:	jne    405516 <open@plt+0x2cd6>
  40550c:	mov    edi,0x0
  405511:	call   402510 <exit@plt>
  405516:	mov    rax,QWORD PTR [rbp-0x10]
  40551a:	mov    rdi,rax
  40551d:	call   40515c <open@plt+0x291c>
  405522:	mov    rax,QWORD PTR [rbp-0x10]
  405526:	mov    rax,QWORD PTR [rax+0x20]
  40552a:	mov    rdx,QWORD PTR [rbp-0x10]
  40552e:	mov    rcx,rdx
  405531:	lea    rdx,[rip+0xfffffffffffffeaf]        # 4053e7 <open@plt+0x2ba7>
  405538:	mov    esi,0x1
  40553d:	mov    rdi,rax
  405540:	call   4024e0 <rb_setselect@plt>
  405545:	nop
  405546:	leave  
  405547:	ret    
  405548:	endbr64 
  40554c:	push   rbp
  40554d:	mov    rbp,rsp
  405550:	sub    rsp,0x40
  405554:	mov    QWORD PTR [rbp-0x38],rdi
  405558:	mov    QWORD PTR [rbp-0x40],rsi
  40555c:	mov    rax,QWORD PTR [rbp-0x40]
  405560:	mov    QWORD PTR [rbp-0x10],rax
  405564:	mov    rax,QWORD PTR [rbp-0x10]
  405568:	mov    rax,QWORD PTR [rax+0x48]
  40556c:	mov    QWORD PTR [rbp-0x20],rax
  405570:	cmp    QWORD PTR [rbp-0x20],0x0
  405575:	je     405581 <open@plt+0x2d41>
  405577:	mov    rax,QWORD PTR [rbp-0x20]
  40557b:	mov    rax,QWORD PTR [rax+0x10]
  40557f:	jmp    405586 <open@plt+0x2d46>
  405581:	mov    eax,0x0
  405586:	mov    QWORD PTR [rbp-0x18],rax
  40558a:	jmp    40568f <open@plt+0x2e4f>
  40558f:	mov    rax,QWORD PTR [rbp-0x20]
  405593:	mov    rax,QWORD PTR [rax]
  405596:	mov    QWORD PTR [rbp-0x8],rax
  40559a:	mov    r8d,DWORD PTR [rip+0x2cdf]        # 408280 <open@plt+0x5a40>
  4055a1:	mov    rax,QWORD PTR [rbp-0x8]
  4055a5:	mov    rdi,QWORD PTR [rax+0x20]
  4055a9:	mov    rax,QWORD PTR [rbp-0x8]
  4055ad:	mov    rcx,QWORD PTR [rax+0x18]
  4055b1:	mov    rax,QWORD PTR [rbp-0x8]
  4055b5:	mov    edx,DWORD PTR [rax+0x48]
  4055b8:	mov    rax,QWORD PTR [rbp-0x8]
  4055bc:	lea    rsi,[rax+0x28]
  4055c0:	mov    rax,QWORD PTR [rbp-0x10]
  4055c4:	mov    rax,QWORD PTR [rax+0x20]
  4055c8:	mov    r9d,r8d
  4055cb:	mov    r8,rdi
  4055ce:	mov    rdi,rax
  4055d1:	call   402500 <rb_send_fd_buf@plt>
  4055d6:	mov    DWORD PTR [rbp-0x24],eax
  4055d9:	cmp    DWORD PTR [rbp-0x24],0x0
  4055dd:	jle    405645 <open@plt+0x2e05>
  4055df:	mov    rax,QWORD PTR [rbp-0x10]
  4055e3:	lea    rdx,[rax+0x48]
  4055e7:	mov    rax,QWORD PTR [rbp-0x20]
  4055eb:	mov    rsi,rdx
  4055ee:	mov    rdi,rax
  4055f1:	call   402b40 <open@plt+0x300>
  4055f6:	mov    DWORD PTR [rbp-0x28],0x0
  4055fd:	jmp    40561d <open@plt+0x2ddd>
  4055ff:	mov    rax,QWORD PTR [rbp-0x8]
  405603:	mov    edx,DWORD PTR [rbp-0x28]
  405606:	movsxd rdx,edx
  405609:	add    rdx,0x4
  40560d:	mov    rax,QWORD PTR [rax+rdx*8+0x8]
  405612:	mov    rdi,rax
  405615:	call   402640 <rb_close@plt>
  40561a:	inc    DWORD PTR [rbp-0x28]
  40561d:	mov    rax,QWORD PTR [rbp-0x8]
  405621:	mov    eax,DWORD PTR [rax+0x48]
  405624:	cmp    DWORD PTR [rbp-0x28],eax
  405627:	jl     4055ff <open@plt+0x2dbf>
  405629:	mov    rax,QWORD PTR [rbp-0x8]
  40562d:	mov    rax,QWORD PTR [rax+0x18]
  405631:	mov    rdi,rax
  405634:	call   402c70 <open@plt+0x430>
  405639:	mov    rax,QWORD PTR [rbp-0x8]
  40563d:	mov    rdi,rax
  405640:	call   402c70 <open@plt+0x430>
  405645:	cmp    DWORD PTR [rbp-0x24],0x0
  405649:	je     405663 <open@plt+0x2e23>
  40564b:	cmp    DWORD PTR [rbp-0x24],0x0
  40564f:	jns    40566d <open@plt+0x2e2d>
  405651:	call   4026e0 <__errno_location@plt>
  405656:	mov    eax,DWORD PTR [rax]
  405658:	mov    edi,eax
  40565a:	call   402490 <rb_ignore_errno@plt>
  40565f:	test   eax,eax
  405661:	jne    40566d <open@plt+0x2e2d>
  405663:	mov    edi,0x0
  405668:	call   402510 <exit@plt>
  40566d:	mov    rax,QWORD PTR [rbp-0x18]
  405671:	mov    QWORD PTR [rbp-0x20],rax
  405675:	cmp    QWORD PTR [rbp-0x20],0x0
  40567a:	je     405686 <open@plt+0x2e46>
  40567c:	mov    rax,QWORD PTR [rbp-0x20]
  405680:	mov    rax,QWORD PTR [rax+0x10]
  405684:	jmp    40568b <open@plt+0x2e4b>
  405686:	mov    eax,0x0
  40568b:	mov    QWORD PTR [rbp-0x18],rax
  40568f:	cmp    QWORD PTR [rbp-0x20],0x0
  405694:	jne    40558f <open@plt+0x2d4f>
  40569a:	mov    rax,QWORD PTR [rbp-0x10]
  40569e:	mov    rax,QWORD PTR [rax+0x58]
  4056a2:	test   rax,rax
  4056a5:	je     4056ca <open@plt+0x2e8a>
  4056a7:	mov    rax,QWORD PTR [rbp-0x10]
  4056ab:	mov    rax,QWORD PTR [rax+0x20]
  4056af:	mov    rdx,QWORD PTR [rbp-0x10]
  4056b3:	mov    rcx,rdx
  4056b6:	lea    rdx,[rip+0xfffffffffffffe8b]        # 405548 <open@plt+0x2d08>
  4056bd:	mov    esi,0x2
  4056c2:	mov    rdi,rax
  4056c5:	call   4024e0 <rb_setselect@plt>
  4056ca:	nop
  4056cb:	leave  
  4056cc:	ret    
  4056cd:	endbr64 
  4056d1:	push   rbp
  4056d2:	mov    rbp,rsp
  4056d5:	lea    r11,[rsp-0x4000]
  4056dd:	sub    rsp,0x1000
  4056e4:	or     QWORD PTR [rsp],0x0
  4056e9:	cmp    rsp,r11
  4056ec:	jne    4056dd <open@plt+0x2e9d>
  4056ee:	sub    rsp,0x30
  4056f2:	mov    QWORD PTR [rbp-0x4028],rdi
  4056f9:	mov    QWORD PTR [rbp-0x4030],rsi
  405700:	mov    rax,QWORD PTR fs:0x28
  405709:	mov    QWORD PTR [rbp-0x8],rax
  40570d:	xor    eax,eax
  40570f:	nop
  405710:	lea    rcx,[rbp-0x4010]
  405717:	mov    rax,QWORD PTR [rbp-0x4028]
  40571e:	mov    edx,0x4000
  405723:	mov    rsi,rcx
  405726:	mov    rdi,rax
  405729:	call   4025f0 <rb_read@plt>
  40572e:	mov    DWORD PTR [rbp-0x4014],eax
  405734:	cmp    DWORD PTR [rbp-0x4014],0x0
  40573b:	jg     405710 <open@plt+0x2ed0>
  40573d:	cmp    DWORD PTR [rbp-0x4014],0x0
  405744:	je     405761 <open@plt+0x2f21>
  405746:	cmp    DWORD PTR [rbp-0x4014],0x0
  40574d:	jns    40576b <open@plt+0x2f2b>
  40574f:	call   4026e0 <__errno_location@plt>
  405754:	mov    eax,DWORD PTR [rax]
  405756:	mov    edi,eax
  405758:	call   402490 <rb_ignore_errno@plt>
  40575d:	test   eax,eax
  40575f:	jne    40576b <open@plt+0x2f2b>
  405761:	mov    edi,0x0
  405766:	call   402510 <exit@plt>
  40576b:	mov    rax,QWORD PTR [rbp-0x4028]
  405772:	mov    ecx,0x0
  405777:	lea    rdx,[rip+0xffffffffffffff4f]        # 4056cd <open@plt+0x2e8d>
  40577e:	mov    esi,0x1
  405783:	mov    rdi,rax
  405786:	call   4024e0 <rb_setselect@plt>
  40578b:	nop
  40578c:	mov    rax,QWORD PTR [rbp-0x8]
  405790:	xor    rax,QWORD PTR fs:0x28
  405799:	je     4057a0 <open@plt+0x2f60>
  40579b:	call   402710 <__stack_chk_fail@plt>
  4057a0:	leave  
  4057a1:	ret    
  4057a2:	endbr64 
  4057a6:	push   rbp
  4057a7:	mov    rbp,rsp
  4057aa:	push   rbx
  4057ab:	sub    rsp,0x48
  4057af:	mov    DWORD PTR [rbp-0x44],edi
  4057b2:	mov    QWORD PTR [rbp-0x50],rsi
  4057b6:	call   4043e1 <open@plt+0x1ba1>
  4057bb:	mov    DWORD PTR [rbp-0x34],eax
  4057be:	lea    rdi,[rip+0xa87]        # 40624c <open@plt+0x3a0c>
  4057c5:	call   4026c0 <getenv@plt>
  4057ca:	mov    QWORD PTR [rbp-0x28],rax
  4057ce:	lea    rdi,[rip+0xa7e]        # 406253 <open@plt+0x3a13>
  4057d5:	call   4026c0 <getenv@plt>
  4057da:	mov    QWORD PTR [rbp-0x20],rax
  4057de:	lea    rdi,[rip+0xa77]        # 40625c <open@plt+0x3a1c>
  4057e5:	call   4026c0 <getenv@plt>
  4057ea:	mov    QWORD PTR [rbp-0x18],rax
  4057ee:	cmp    QWORD PTR [rbp-0x28],0x0
  4057f3:	je     405803 <open@plt+0x2fc3>
  4057f5:	cmp    QWORD PTR [rbp-0x20],0x0
  4057fa:	je     405803 <open@plt+0x2fc3>
  4057fc:	cmp    QWORD PTR [rbp-0x18],0x0
  405801:	jne    405853 <open@plt+0x3013>
  405803:	mov    rax,QWORD PTR [rip+0x27ee]        # 407ff8 <open@plt+0x57b8>
  40580a:	mov    rax,QWORD PTR [rax]
  40580d:	mov    rcx,rax
  405810:	mov    edx,0x32
  405815:	mov    esi,0x1
  40581a:	lea    rdi,[rip+0xa47]        # 406268 <open@plt+0x3a28>
  405821:	call   4027f0 <fwrite@plt>
  405826:	mov    rax,QWORD PTR [rip+0x27cb]        # 407ff8 <open@plt+0x57b8>
  40582d:	mov    rax,QWORD PTR [rax]
  405830:	mov    rcx,rax
  405833:	mov    edx,0x31
  405838:	mov    esi,0x1
  40583d:	lea    rdi,[rip+0xa5c]        # 4062a0 <open@plt+0x3a60>
  405844:	call   4027f0 <fwrite@plt>
  405849:	mov    edi,0x1
  40584e:	call   402510 <exit@plt>
  405853:	mov    rax,QWORD PTR [rbp-0x28]
  405857:	mov    rdi,rax
  40585a:	call   402660 <atoi@plt>
  40585f:	mov    DWORD PTR [rbp-0x30],eax
  405862:	mov    rax,QWORD PTR [rbp-0x20]
  405866:	mov    rdi,rax
  405869:	call   402660 <atoi@plt>
  40586e:	mov    DWORD PTR [rbp-0x2c],eax
  405871:	mov    rax,QWORD PTR [rbp-0x18]
  405875:	mov    rdi,rax
  405878:	call   402660 <atoi@plt>
  40587d:	mov    DWORD PTR [rip+0x29fd],eax        # 408280 <open@plt+0x5a40>
  405883:	mov    DWORD PTR [rbp-0x38],0x3
  40588a:	jmp    4058a9 <open@plt+0x3069>
  40588c:	mov    eax,DWORD PTR [rbp-0x38]
  40588f:	cmp    eax,DWORD PTR [rbp-0x30]
  405892:	je     4058a6 <open@plt+0x3066>
  405894:	mov    eax,DWORD PTR [rbp-0x38]
  405897:	cmp    eax,DWORD PTR [rbp-0x2c]
  40589a:	je     4058a6 <open@plt+0x3066>
  40589c:	mov    eax,DWORD PTR [rbp-0x38]
  40589f:	mov    edi,eax
  4058a1:	call   4024c0 <close@plt>
  4058a6:	inc    DWORD PTR [rbp-0x38]
  4058a9:	mov    eax,DWORD PTR [rbp-0x38]
  4058ac:	cmp    eax,DWORD PTR [rbp-0x34]
  4058af:	jl     40588c <open@plt+0x304c>
  4058b1:	mov    esi,0x2
  4058b6:	lea    rdi,[rip+0xa15]        # 4062d2 <open@plt+0x3a92>
  4058bd:	mov    eax,0x0
  4058c2:	call   402840 <open@plt>
  4058c7:	mov    DWORD PTR [rbp-0x38],eax
  4058ca:	cmp    DWORD PTR [rbp-0x38],0x0
  4058ce:	js     405931 <open@plt+0x30f1>
  4058d0:	cmp    DWORD PTR [rbp-0x30],0x0
  4058d4:	je     4058eb <open@plt+0x30ab>
  4058d6:	cmp    DWORD PTR [rbp-0x2c],0x0
  4058da:	je     4058eb <open@plt+0x30ab>
  4058dc:	mov    eax,DWORD PTR [rbp-0x38]
  4058df:	mov    esi,0x0
  4058e4:	mov    edi,eax
  4058e6:	call   402450 <dup2@plt>
  4058eb:	cmp    DWORD PTR [rbp-0x30],0x1
  4058ef:	je     405906 <open@plt+0x30c6>
  4058f1:	cmp    DWORD PTR [rbp-0x2c],0x1
  4058f5:	je     405906 <open@plt+0x30c6>
  4058f7:	mov    eax,DWORD PTR [rbp-0x38]
  4058fa:	mov    esi,0x1
  4058ff:	mov    edi,eax
  405901:	call   402450 <dup2@plt>
  405906:	cmp    DWORD PTR [rbp-0x30],0x2
  40590a:	je     405921 <open@plt+0x30e1>
  40590c:	cmp    DWORD PTR [rbp-0x2c],0x2
  405910:	je     405921 <open@plt+0x30e1>
  405912:	mov    eax,DWORD PTR [rbp-0x38]
  405915:	mov    esi,0x2
  40591a:	mov    edi,eax
  40591c:	call   402450 <dup2@plt>
  405921:	cmp    DWORD PTR [rbp-0x38],0x2
  405925:	jle    405931 <open@plt+0x30f1>
  405927:	mov    eax,DWORD PTR [rbp-0x38]
  40592a:	mov    edi,eax
  40592c:	call   4024c0 <close@plt>
  405931:	call   405b28 <open@plt+0x32e8>
  405936:	mov    eax,DWORD PTR [rbp-0x34]
  405939:	sub    rsp,0x8
  40593d:	push   0x1000
  405942:	mov    r9d,0x400
  405948:	mov    r8d,eax
  40594b:	mov    ecx,0x0
  405950:	mov    edx,0x0
  405955:	mov    esi,0x0
  40595a:	mov    edi,0x0
  40595f:	call   402730 <rb_lib_init@plt>
  405964:	add    rsp,0x10
  405968:	mov    edi,0x400
  40596d:	call   4025a0 <rb_init_rawbuffers@plt>
  405972:	mov    esi,0x1
  405977:	mov    edi,0x0
  40597c:	call   4026b0 <rb_init_prng@plt>
  405981:	call   4026f0 <rb_supports_ssl@plt>
  405986:	test   eax,eax
  405988:	setne  al
  40598b:	mov    BYTE PTR [rip+0xe4a7],al        # 413e38 <open@plt+0x115f8>
  405991:	mov    edi,0x60
  405996:	call   402c34 <open@plt+0x3f4>
  40599b:	mov    QWORD PTR [rip+0x28e6],rax        # 408288 <open@plt+0x5a48>
  4059a2:	mov    rbx,QWORD PTR [rip+0x28df]        # 408288 <open@plt+0x5a48>
  4059a9:	mov    eax,DWORD PTR [rbp-0x30]
  4059ac:	lea    rdx,[rip+0x929]        # 4062dc <open@plt+0x3a9c>
  4059b3:	mov    esi,0x4
  4059b8:	mov    edi,eax
  4059ba:	call   402760 <rb_open@plt>
  4059bf:	mov    QWORD PTR [rbx+0x20],rax
  4059c3:	mov    rbx,QWORD PTR [rip+0x28be]        # 408288 <open@plt+0x5a48>
  4059ca:	mov    eax,DWORD PTR [rbp-0x2c]
  4059cd:	lea    rdx,[rip+0x91c]        # 4062f0 <open@plt+0x3ab0>
  4059d4:	mov    esi,0x8
  4059d9:	mov    edi,eax
  4059db:	call   402760 <rb_open@plt>
  4059e0:	mov    QWORD PTR [rbx+0x28],rax
  4059e4:	mov    rax,QWORD PTR [rip+0x289d]        # 408288 <open@plt+0x5a48>
  4059eb:	mov    rax,QWORD PTR [rax+0x20]
  4059ef:	mov    rdi,rax
  4059f2:	call   402560 <rb_set_nb@plt>
  4059f7:	mov    rax,QWORD PTR [rip+0x288a]        # 408288 <open@plt+0x5a48>
  4059fe:	mov    rax,QWORD PTR [rax+0x28]
  405a02:	mov    rdi,rax
  405a05:	call   402560 <rb_set_nb@plt>
  405a0a:	mov    ecx,0xa
  405a0f:	mov    edx,0x0
  405a14:	lea    rsi,[rip+0xffffffffffffd4a0]        # 402ebb <open@plt+0x67b>
  405a1b:	lea    rdi,[rip+0x8d8]        # 4062fa <open@plt+0x3aba>
  405a22:	call   402480 <rb_event_addish@plt>
  405a27:	mov    ecx,0xa
  405a2c:	mov    edx,0x0
  405a31:	lea    rsi,[rip+0xffffffffffffd89b]        # 4032d3 <open@plt+0xa93>
  405a38:	lea    rdi,[rip+0x8cc]        # 40630b <open@plt+0x3acb>
  405a3f:	call   4027d0 <rb_event_add@plt>
  405a44:	mov    rax,QWORD PTR [rip+0x283d]        # 408288 <open@plt+0x5a48>
  405a4b:	mov    rax,QWORD PTR [rax+0x28]
  405a4f:	mov    esi,0x0
  405a54:	mov    rdi,rax
  405a57:	call   4056cd <open@plt+0x2e8d>
  405a5c:	mov    rdx,QWORD PTR [rip+0x2825]        # 408288 <open@plt+0x5a48>
  405a63:	mov    rax,QWORD PTR [rip+0x281e]        # 408288 <open@plt+0x5a48>
  405a6a:	mov    rax,QWORD PTR [rax+0x20]
  405a6e:	mov    rsi,rdx
  405a71:	mov    rdi,rax
  405a74:	call   4053e7 <open@plt+0x2ba7>
  405a79:	mov    rax,QWORD PTR [rip+0x2808]        # 408288 <open@plt+0x5a48>
  405a80:	mov    rdi,rax
  405a83:	call   405008 <open@plt+0x27c8>
  405a88:	movzx  eax,BYTE PTR [rip+0x27a1]        # 408230 <open@plt+0x59f0>
  405a8f:	xor    eax,0x1
  405a92:	test   al,al
  405a94:	je     405acc <open@plt+0x328c>
  405a96:	movzx  eax,BYTE PTR [rip+0xe39b]        # 413e38 <open@plt+0x115f8>
  405a9d:	xor    eax,0x1
  405aa0:	test   al,al
  405aa2:	je     405acc <open@plt+0x328c>
  405aa4:	mov    rax,QWORD PTR [rip+0x27dd]        # 408288 <open@plt+0x5a48>
  405aab:	mov    rdi,rax
  405aae:	call   404fcd <open@plt+0x278d>
  405ab3:	mov    esi,0x0
  405ab8:	mov    edi,0x40000000
  405abd:	call   402440 <rb_sleep@plt>
  405ac2:	mov    edi,0x1
  405ac7:	call   402510 <exit@plt>
  405acc:	movzx  eax,BYTE PTR [rip+0x275d]        # 408230 <open@plt+0x59f0>
  405ad3:	xor    eax,0x1
  405ad6:	test   al,al
  405ad8:	je     405aee <open@plt+0x32ae>
  405ada:	mov    rax,QWORD PTR [rip+0x27a7]        # 408288 <open@plt+0x5a48>
  405ae1:	mov    esi,0x0
  405ae6:	mov    rdi,rax
  405ae9:	call   4050af <open@plt+0x286f>
  405aee:	movzx  eax,BYTE PTR [rip+0xe343]        # 413e38 <open@plt+0x115f8>
  405af5:	xor    eax,0x1
  405af8:	test   al,al
  405afa:	je     405b10 <open@plt+0x32d0>
  405afc:	mov    rax,QWORD PTR [rip+0x2785]        # 408288 <open@plt+0x5a48>
  405b03:	mov    esi,0x0
  405b08:	mov    rdi,rax
  405b0b:	call   404f20 <open@plt+0x26e0>
  405b10:	mov    edi,0x0
  405b15:	call   4025d0 <rb_lib_loop@plt>
  405b1a:	endbr64 
  405b1e:	push   rbp
  405b1f:	mov    rbp,rsp
  405b22:	mov    DWORD PTR [rbp-0x4],edi
  405b25:	nop
  405b26:	pop    rbp
  405b27:	ret    
  405b28:	endbr64 
  405b2c:	push   rbp
  405b2d:	mov    rbp,rsp
  405b30:	sub    rsp,0xa0
  405b37:	mov    rax,QWORD PTR fs:0x28
  405b40:	mov    QWORD PTR [rbp-0x8],rax
  405b44:	xor    eax,eax
  405b46:	mov    DWORD PTR [rbp-0x18],0x0
  405b4d:	mov    QWORD PTR [rbp-0xa0],0x1
  405b58:	lea    rax,[rbp-0xa0]
  405b5f:	add    rax,0x8
  405b63:	mov    rdi,rax
  405b66:	call   4027e0 <sigemptyset@plt>
  405b6b:	lea    rax,[rbp-0xa0]
  405b72:	add    rax,0x8
  405b76:	mov    esi,0xd
  405b7b:	mov    rdi,rax
  405b7e:	call   402700 <sigaddset@plt>
  405b83:	lea    rax,[rbp-0xa0]
  405b8a:	add    rax,0x8
  405b8e:	mov    esi,0xe
  405b93:	mov    rdi,rax
  405b96:	call   402700 <sigaddset@plt>
  405b9b:	lea    rax,[rbp-0xa0]
  405ba2:	add    rax,0x8
  405ba6:	mov    esi,0x5
  405bab:	mov    rdi,rax
  405bae:	call   402700 <sigaddset@plt>
  405bb3:	lea    rax,[rbp-0xa0]
  405bba:	add    rax,0x8
  405bbe:	mov    esi,0x1c
  405bc3:	mov    rdi,rax
  405bc6:	call   402700 <sigaddset@plt>
  405bcb:	lea    rax,[rbp-0xa0]
  405bd2:	mov    edx,0x0
  405bd7:	mov    rsi,rax
  405bda:	mov    edi,0x1c
  405bdf:	call   402630 <sigaction@plt>
  405be4:	lea    rax,[rbp-0xa0]
  405beb:	mov    edx,0x0
  405bf0:	mov    rsi,rax
  405bf3:	mov    edi,0xd
  405bf8:	call   402630 <sigaction@plt>
  405bfd:	lea    rax,[rbp-0xa0]
  405c04:	mov    edx,0x0
  405c09:	mov    rsi,rax
  405c0c:	mov    edi,0x5
  405c11:	call   402630 <sigaction@plt>
  405c16:	lea    rax,[rip+0xfffffffffffffefd]        # 405b1a <open@plt+0x32da>
  405c1d:	mov    QWORD PTR [rbp-0xa0],rax
  405c24:	lea    rax,[rbp-0xa0]
  405c2b:	mov    edx,0x0
  405c30:	mov    rsi,rax
  405c33:	mov    edi,0xe
  405c38:	call   402630 <sigaction@plt>
  405c3d:	nop
  405c3e:	mov    rax,QWORD PTR [rbp-0x8]
  405c42:	xor    rax,QWORD PTR fs:0x28
  405c4b:	je     405c52 <open@plt+0x3412>
  405c4d:	call   402710 <__stack_chk_fail@plt>
  405c52:	leave  
  405c53:	ret    
  405c54:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405c5e:	xchg   ax,ax
  405c60:	endbr64 
  405c64:	push   r15
  405c66:	lea    r15,[rip+0x216b]        # 407dd8 <open@plt+0x5598>
  405c6d:	push   r14
  405c6f:	mov    r14,rdx
  405c72:	push   r13
  405c74:	mov    r13,rsi
  405c77:	push   r12
  405c79:	mov    r12d,edi
  405c7c:	push   rbp
  405c7d:	lea    rbp,[rip+0x215c]        # 407de0 <open@plt+0x55a0>
  405c84:	push   rbx
  405c85:	sub    rbp,r15
  405c88:	sub    rsp,0x8
  405c8c:	call   402000 <rb_sleep@plt-0x440>
  405c91:	sar    rbp,0x3
  405c95:	je     405cb6 <open@plt+0x3476>
  405c97:	xor    ebx,ebx
  405c99:	nop    DWORD PTR [rax+0x0]
  405ca0:	mov    rdx,r14
  405ca3:	mov    rsi,r13
  405ca6:	mov    edi,r12d
  405ca9:	call   QWORD PTR [r15+rbx*8]
  405cad:	add    rbx,0x1
  405cb1:	cmp    rbp,rbx
  405cb4:	jne    405ca0 <open@plt+0x3460>
  405cb6:	add    rsp,0x8
  405cba:	pop    rbx
  405cbb:	pop    rbp
  405cbc:	pop    r12
  405cbe:	pop    r13
  405cc0:	pop    r14
  405cc2:	pop    r15
  405cc4:	ret    
  405cc5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  405cd0:	endbr64 
  405cd4:	ret    

Disassembly of section .fini:

0000000000405cd8 <.fini>:
  405cd8:	endbr64 
  405cdc:	sub    rsp,0x8
  405ce0:	add    rsp,0x8
  405ce4:	ret    
