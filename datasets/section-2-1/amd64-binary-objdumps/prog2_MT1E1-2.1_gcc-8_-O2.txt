
../repos/prog2/MT1E1-2.1:     file format elf64-x86-64


Disassembly of section .init:

0000000000401000 <.init>:
  401000:	endbr64 
  401004:	sub    rsp,0x8
  401008:	mov    rax,QWORD PTR [rip+0x3fe1]        # 404ff0 <__gmon_start__>
  40100f:	test   rax,rax
  401012:	je     401016 <free@plt-0xea>
  401014:	call   rax
  401016:	add    rsp,0x8
  40101a:	ret    

Disassembly of section .plt:

0000000000401020 <.plt>:
  401020:	push   QWORD PTR [rip+0x3fe2]        # 405008 <_IO_stdin_used@@Base+0x2008>
  401026:	bnd jmp QWORD PTR [rip+0x3fe3]        # 405010 <_IO_stdin_used@@Base+0x2010>
  40102d:	nop    DWORD PTR [rax]
  401030:	endbr64 
  401034:	push   0x0
  401039:	bnd jmp 401020 <free@plt-0xe0>
  40103f:	nop
  401040:	endbr64 
  401044:	push   0x1
  401049:	bnd jmp 401020 <free@plt-0xe0>
  40104f:	nop
  401050:	endbr64 
  401054:	push   0x2
  401059:	bnd jmp 401020 <free@plt-0xe0>
  40105f:	nop
  401060:	endbr64 
  401064:	push   0x3
  401069:	bnd jmp 401020 <free@plt-0xe0>
  40106f:	nop
  401070:	endbr64 
  401074:	push   0x4
  401079:	bnd jmp 401020 <free@plt-0xe0>
  40107f:	nop
  401080:	endbr64 
  401084:	push   0x5
  401089:	bnd jmp 401020 <free@plt-0xe0>
  40108f:	nop
  401090:	endbr64 
  401094:	push   0x6
  401099:	bnd jmp 401020 <free@plt-0xe0>
  40109f:	nop
  4010a0:	endbr64 
  4010a4:	push   0x7
  4010a9:	bnd jmp 401020 <free@plt-0xe0>
  4010af:	nop
  4010b0:	endbr64 
  4010b4:	push   0x8
  4010b9:	bnd jmp 401020 <free@plt-0xe0>
  4010bf:	nop
  4010c0:	endbr64 
  4010c4:	push   0x9
  4010c9:	bnd jmp 401020 <free@plt-0xe0>
  4010cf:	nop
  4010d0:	endbr64 
  4010d4:	push   0xa
  4010d9:	bnd jmp 401020 <free@plt-0xe0>
  4010df:	nop
  4010e0:	endbr64 
  4010e4:	push   0xb
  4010e9:	bnd jmp 401020 <free@plt-0xe0>
  4010ef:	nop
  4010f0:	endbr64 
  4010f4:	push   0xc
  4010f9:	bnd jmp 401020 <free@plt-0xe0>
  4010ff:	nop

Disassembly of section .plt.sec:

0000000000401100 <free@plt>:
  401100:	endbr64 
  401104:	bnd jmp QWORD PTR [rip+0x3f0d]        # 405018 <free@GLIBC_2.2.5>
  40110b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401110 <strcpy@plt>:
  401110:	endbr64 
  401114:	bnd jmp QWORD PTR [rip+0x3f05]        # 405020 <strcpy@GLIBC_2.2.5>
  40111b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401120 <puts@plt>:
  401120:	endbr64 
  401124:	bnd jmp QWORD PTR [rip+0x3efd]        # 405028 <puts@GLIBC_2.2.5>
  40112b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401130 <strlen@plt>:
  401130:	endbr64 
  401134:	bnd jmp QWORD PTR [rip+0x3ef5]        # 405030 <strlen@GLIBC_2.2.5>
  40113b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401140 <__stack_chk_fail@plt>:
  401140:	endbr64 
  401144:	bnd jmp QWORD PTR [rip+0x3eed]        # 405038 <__stack_chk_fail@GLIBC_2.4>
  40114b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401150 <calloc@plt>:
  401150:	endbr64 
  401154:	bnd jmp QWORD PTR [rip+0x3ee5]        # 405040 <calloc@GLIBC_2.2.5>
  40115b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401160 <strcmp@plt>:
  401160:	endbr64 
  401164:	bnd jmp QWORD PTR [rip+0x3edd]        # 405048 <strcmp@GLIBC_2.2.5>
  40116b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401170 <memcpy@plt>:
  401170:	endbr64 
  401174:	bnd jmp QWORD PTR [rip+0x3ed5]        # 405050 <memcpy@GLIBC_2.14>
  40117b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401180 <malloc@plt>:
  401180:	endbr64 
  401184:	bnd jmp QWORD PTR [rip+0x3ecd]        # 405058 <malloc@GLIBC_2.2.5>
  40118b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401190 <realloc@plt>:
  401190:	endbr64 
  401194:	bnd jmp QWORD PTR [rip+0x3ec5]        # 405060 <realloc@GLIBC_2.2.5>
  40119b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004011a0 <fwrite@plt>:
  4011a0:	endbr64 
  4011a4:	bnd jmp QWORD PTR [rip+0x3ebd]        # 405068 <fwrite@GLIBC_2.2.5>
  4011ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004011b0 <__fprintf_chk@plt>:
  4011b0:	endbr64 
  4011b4:	bnd jmp QWORD PTR [rip+0x3eb5]        # 405070 <__fprintf_chk@GLIBC_2.3.4>
  4011bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004011c0 <__sprintf_chk@plt>:
  4011c0:	endbr64 
  4011c4:	bnd jmp QWORD PTR [rip+0x3ead]        # 405078 <__sprintf_chk@GLIBC_2.3.4>
  4011cb:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

00000000004011d0 <main@@Base>:
  4011d0:	endbr64 
  4011d4:	push   r15
  4011d6:	xor    eax,eax
  4011d8:	push   r14
  4011da:	push   r13
  4011dc:	push   r12
  4011de:	push   rbp
  4011df:	push   rbx
  4011e0:	xor    ebx,ebx
  4011e2:	sub    rsp,0x18
  4011e6:	call   401840 <vetor_novo@@Base>
  4011eb:	mov    r12,rax
  4011ee:	mov    rax,0x405280
  4011f5:	mov    edx,ebx
  4011f7:	mov    rsi,QWORD PTR [rax+rbx*8]
  4011fb:	mov    rdi,r12
  4011fe:	inc    rbx
  401201:	call   4019d0 <vetor_insere@@Base>
  401206:	cmp    rbx,0x4
  40120a:	jne    4011ee <main@@Base+0x1e>
  40120c:	xor    eax,eax
  40120e:	call   401d10 <lista_nova@@Base>
  401213:	mov    rbp,0x4050a0
  40121a:	mov    rbx,rax
  40121d:	mov    r13,rbp
  401220:	lea    r14,[rbp+0xd0]
  401227:	nop    WORD PTR [rax+rax*1+0x0]
  401230:	mov    esi,DWORD PTR [r13+0x0]
  401234:	mov    rdi,rbx
  401237:	add    r13,0x4
  40123b:	call   401710 <insere_carta@@Base>
  401240:	cmp    r13,r14
  401243:	jne    401230 <main@@Base+0x60>
  401245:	xor    eax,eax
  401247:	call   401d10 <lista_nova@@Base>
  40124c:	mov    r15,0x405200
  401253:	mov    r13,rax
  401256:	lea    r14,[r15+0x68]
  40125a:	nop    WORD PTR [rax+rax*1+0x0]
  401260:	mov    rsi,QWORD PTR [r15]
  401263:	xor    edx,edx
  401265:	mov    rdi,r13
  401268:	add    r15,0x8
  40126c:	call   401e10 <lista_insere@@Base>
  401271:	cmp    r14,r15
  401274:	jne    401260 <main@@Base+0x90>
  401276:	mov    rsi,r13
  401279:	mov    rdi,rbx
  40127c:	call   401570 <tira_carta@@Base>
  401281:	mov    r14,QWORD PTR [rip+0x3d70]        # 404ff8 <stderr@GLIBC_2.2.5>
  401288:	mov    ecx,eax
  40128a:	mov    rdi,QWORD PTR [r14]
  40128d:	lea    rdx,[rip+0x1d73]        # 403007 <_IO_stdin_used@@Base+0x7>
  401294:	mov    esi,0x1
  401299:	xor    eax,eax
  40129b:	call   4011b0 <__fprintf_chk@plt>
  4012a0:	mov    rsi,r13
  4012a3:	mov    rdi,rbx
  4012a6:	call   401570 <tira_carta@@Base>
  4012ab:	mov    rdi,QWORD PTR [r14]
  4012ae:	mov    ecx,eax
  4012b0:	lea    rdx,[rip+0x1d6d]        # 403024 <_IO_stdin_used@@Base+0x24>
  4012b7:	mov    esi,0x1
  4012bc:	xor    eax,eax
  4012be:	call   4011b0 <__fprintf_chk@plt>
  4012c3:	mov    rsi,r13
  4012c6:	mov    rdi,rbx
  4012c9:	call   401570 <tira_carta@@Base>
  4012ce:	mov    rdi,QWORD PTR [r14]
  4012d1:	mov    ecx,eax
  4012d3:	lea    rdx,[rip+0x1d66]        # 403040 <_IO_stdin_used@@Base+0x40>
  4012da:	mov    esi,0x1
  4012df:	xor    eax,eax
  4012e1:	call   4011b0 <__fprintf_chk@plt>
  4012e6:	mov    esi,DWORD PTR [rbp+0xc4]
  4012ec:	mov    rdi,rbx
  4012ef:	call   401710 <insere_carta@@Base>
  4012f4:	mov    esi,DWORD PTR [rbp+0xc8]
  4012fa:	mov    rdi,rbx
  4012fd:	call   401710 <insere_carta@@Base>
  401302:	mov    esi,DWORD PTR [rbp+0xcc]
  401308:	mov    rdi,rbx
  40130b:	call   401710 <insere_carta@@Base>
  401310:	xor    eax,eax
  401312:	call   401840 <vetor_novo@@Base>
  401317:	mov    r15,rax
  40131a:	xor    ebp,ebp
  40131c:	nop    DWORD PTR [rax+0x0]
  401320:	mov    rdx,r13
  401323:	mov    rsi,rbx
  401326:	mov    rdi,r12
  401329:	call   4015d0 <faz_jogada@@Base>
  40132e:	test   rax,rax
  401331:	je     401340 <main@@Base+0x170>
  401333:	mov    edx,ebp
  401335:	mov    rsi,rax
  401338:	mov    rdi,r15
  40133b:	call   4019d0 <vetor_insere@@Base>
  401340:	mov    rdi,r12
  401343:	call   401980 <vetor_tamanho@@Base>
  401348:	cmp    eax,0x4
  40134b:	je     401366 <main@@Base+0x196>
  40134d:	mov    rcx,QWORD PTR [r14]
  401350:	mov    edx,0x2c
  401355:	mov    esi,0x1
  40135a:	lea    rdi,[rip+0x1d3f]        # 4030a0 <_IO_stdin_used@@Base+0xa0>
  401361:	call   4011a0 <fwrite@plt>
  401366:	inc    ebp
  401368:	cmp    ebp,0xd
  40136b:	jne    401320 <main@@Base+0x150>
  40136d:	lea    rdi,[rip+0x1d5c]        # 4030d0 <_IO_stdin_used@@Base+0xd0>
  401374:	call   401120 <puts@plt>
  401379:	mov    eax,DWORD PTR [r15]
  40137c:	test   eax,eax
  40137e:	jle    4013b9 <main@@Base+0x1e9>
  401380:	xor    ebp,ebp
  401382:	mov    esi,ebp
  401384:	mov    rdi,r15
  401387:	call   4019a0 <vetor_elemento@@Base>
  40138c:	inc    ebp
  40138e:	mov    rdi,QWORD PTR [r14]
  401391:	mov    r8,rax
  401394:	lea    rdx,[rip+0x1cc2]        # 40305d <_IO_stdin_used@@Base+0x5d>
  40139b:	xor    eax,eax
  40139d:	mov    ecx,ebp
  40139f:	mov    esi,0x1
  4013a4:	call   4011b0 <__fprintf_chk@plt>
  4013a9:	cmp    ebp,DWORD PTR [r15]
  4013ac:	setl   dl
  4013af:	cmp    ebp,0x2
  4013b2:	setle  al
  4013b5:	test   dl,al
  4013b7:	jne    401382 <main@@Base+0x1b2>
  4013b9:	mov    rdi,r15
  4013bc:	call   401870 <vetor_apaga@@Base>
  4013c1:	xor    eax,eax
  4013c3:	call   401840 <vetor_novo@@Base>
  4013c8:	mov    QWORD PTR [rsp+0x8],rax
  4013cd:	mov    rbp,0x405180
  4013d4:	xor    r15d,r15d
  4013d7:	nop    WORD PTR [rax+rax*1+0x0]
  4013e0:	mov    rsi,QWORD PTR [rbp+r15*8+0x0]
  4013e5:	mov    rdi,QWORD PTR [rsp+0x8]
  4013ea:	mov    edx,r15d
  4013ed:	inc    r15
  4013f0:	call   4019d0 <vetor_insere@@Base>
  4013f5:	cmp    r15,0xd
  4013f9:	jne    4013e0 <main@@Base+0x210>
  4013fb:	lea    rdi,[rip+0x1c3d]        # 40303f <_IO_stdin_used@@Base+0x3f>
  401402:	call   401120 <puts@plt>
  401407:	mov    r15,0x405280
  40140e:	lea    rbp,[r15+0x20]
  401412:	mov    rsi,QWORD PTR [r15]
  401415:	mov    rdi,QWORD PTR [rsp+0x8]
  40141a:	add    r15,0x8
  40141e:	call   4016a0 <numero_vitorias@@Base>
  401423:	mov    rcx,QWORD PTR [r15-0x8]
  401427:	mov    rdi,QWORD PTR [r14]
  40142a:	mov    r8d,eax
  40142d:	lea    rdx,[rip+0x1cc4]        # 4030f8 <_IO_stdin_used@@Base+0xf8>
  401434:	mov    esi,0x1
  401439:	xor    eax,eax
  40143b:	call   4011b0 <__fprintf_chk@plt>
  401440:	cmp    r15,rbp
  401443:	jne    401412 <main@@Base+0x242>
  401445:	mov    rdi,r12
  401448:	call   401870 <vetor_apaga@@Base>
  40144d:	mov    rdi,rbx
  401450:	call   401d50 <lista_apaga@@Base>
  401455:	mov    rdi,r13
  401458:	call   401d50 <lista_apaga@@Base>
  40145d:	mov    rdi,QWORD PTR [rsp+0x8]
  401462:	call   401870 <vetor_apaga@@Base>
  401467:	add    rsp,0x18
  40146b:	pop    rbx
  40146c:	pop    rbp
  40146d:	pop    r12
  40146f:	pop    r13
  401471:	pop    r14
  401473:	xor    eax,eax
  401475:	pop    r15
  401477:	ret    
  401478:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401480 <_start@@Base>:
  401480:	endbr64 
  401484:	xor    ebp,ebp
  401486:	mov    r9,rdx
  401489:	pop    rsi
  40148a:	mov    rdx,rsp
  40148d:	and    rsp,0xfffffffffffffff0
  401491:	push   rax
  401492:	push   rsp
  401493:	mov    r8,0x402170
  40149a:	mov    rcx,0x402100
  4014a1:	mov    rdi,0x4011d0
  4014a8:	call   QWORD PTR [rip+0x3b3a]        # 404fe8 <__libc_start_main@GLIBC_2.2.5>
  4014ae:	hlt    
  4014af:	nop
  4014b0:	endbr64 
  4014b4:	ret    
  4014b5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4014bf:	nop
  4014c0:	mov    eax,0x4052a0
  4014c5:	cmp    rax,0x4052a0
  4014cb:	je     4014e0 <_start@@Base+0x60>
  4014cd:	mov    eax,0x0
  4014d2:	test   rax,rax
  4014d5:	je     4014e0 <_start@@Base+0x60>
  4014d7:	mov    edi,0x4052a0
  4014dc:	jmp    rax
  4014de:	xchg   ax,ax
  4014e0:	ret    
  4014e1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4014ec:	nop    DWORD PTR [rax+0x0]
  4014f0:	mov    esi,0x4052a0
  4014f5:	sub    rsi,0x4052a0
  4014fc:	sar    rsi,0x3
  401500:	mov    rax,rsi
  401503:	shr    rax,0x3f
  401507:	add    rsi,rax
  40150a:	sar    rsi,1
  40150d:	je     401520 <_start@@Base+0xa0>
  40150f:	mov    eax,0x0
  401514:	test   rax,rax
  401517:	je     401520 <_start@@Base+0xa0>
  401519:	mov    edi,0x4052a0
  40151e:	jmp    rax
  401520:	ret    
  401521:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40152c:	nop    DWORD PTR [rax+0x0]
  401530:	endbr64 
  401534:	cmp    BYTE PTR [rip+0x3d65],0x0        # 4052a0 <__bss_start@@Base>
  40153b:	jne    401550 <_start@@Base+0xd0>
  40153d:	push   rbp
  40153e:	mov    rbp,rsp
  401541:	call   4014c0 <_start@@Base+0x40>
  401546:	mov    BYTE PTR [rip+0x3d53],0x1        # 4052a0 <__bss_start@@Base>
  40154d:	pop    rbp
  40154e:	ret    
  40154f:	nop
  401550:	ret    
  401551:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40155c:	nop    DWORD PTR [rax+0x0]
  401560:	endbr64 
  401564:	jmp    4014f0 <_start@@Base+0x70>
  401566:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000401570 <tira_carta@@Base>:
  401570:	endbr64 
  401574:	push   r14
  401576:	push   r13
  401578:	mov    r13,rdi
  40157b:	mov    r14,QWORD PTR [r13+0x0]
  40157f:	push   r12
  401581:	push   rbp
  401582:	xor    ebp,ebp
  401584:	push   rbx
  401585:	mov    rax,QWORD PTR [rsi]
  401588:	mov    r12,QWORD PTR [r14]
  40158b:	mov    rdi,QWORD PTR [rax]
  40158e:	mov    rbx,QWORD PTR [rax+0x8]
  401592:	jmp    4015a1 <tira_carta@@Base+0x31>
  401594:	nop    DWORD PTR [rax+0x0]
  401598:	mov    rdi,QWORD PTR [rbx]
  40159b:	mov    rbx,QWORD PTR [rbx+0x8]
  40159f:	inc    ebp
  4015a1:	mov    rsi,r12
  4015a4:	call   401160 <strcmp@plt>
  4015a9:	test   eax,eax
  4015ab:	jne    401598 <tira_carta@@Base+0x28>
  4015ad:	mov    rsi,r14
  4015b0:	mov    rdi,r13
  4015b3:	call   401ed0 <lista_remove@@Base>
  4015b8:	pop    rbx
  4015b9:	mov    eax,ebp
  4015bb:	pop    rbp
  4015bc:	pop    r12
  4015be:	pop    r13
  4015c0:	pop    r14
  4015c2:	ret    
  4015c3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4015ce:	xchg   ax,ax

00000000004015d0 <faz_jogada@@Base>:
  4015d0:	endbr64 
  4015d4:	push   r15
  4015d6:	push   r14
  4015d8:	mov    r14,rsi
  4015db:	push   r13
  4015dd:	mov    r13,rdx
  4015e0:	push   r12
  4015e2:	mov    r12,rdi
  4015e5:	push   rbp
  4015e6:	push   rbx
  4015e7:	xor    ebx,ebx
  4015e9:	sub    rsp,0x8
  4015ed:	movsxd rdi,DWORD PTR [rdi]
  4015f0:	mov    r15,rdi
  4015f3:	shl    rdi,0x2
  4015f7:	call   401180 <malloc@plt>
  4015fc:	mov    rbp,rax
  4015ff:	test   r15d,r15d
  401602:	jle    401688 <faz_jogada@@Base+0xb8>
  401608:	nop    DWORD PTR [rax+rax*1+0x0]
  401610:	mov    rsi,r13
  401613:	mov    rdi,r14
  401616:	call   401570 <tira_carta@@Base>
  40161b:	mov    DWORD PTR [rbp+rbx*4+0x0],eax
  40161f:	mov    eax,DWORD PTR [r12]
  401623:	inc    rbx
  401626:	cmp    eax,ebx
  401628:	jg     401610 <faz_jogada@@Base+0x40>
  40162a:	test   eax,eax
  40162c:	jle    401688 <faz_jogada@@Base+0xb8>
  40162e:	mov    rsi,0xffffffffffffffff
  401635:	lea    edi,[rax-0x1]
  401638:	mov    ecx,esi
  40163a:	xor    eax,eax
  40163c:	jmp    401643 <faz_jogada@@Base+0x73>
  40163e:	xchg   ax,ax
  401640:	mov    rax,rdx
  401643:	mov    edx,DWORD PTR [rbp+rax*4+0x0]
  401647:	cmp    edx,ecx
  401649:	jle    401650 <faz_jogada@@Base+0x80>
  40164b:	movsxd rsi,eax
  40164e:	mov    ecx,edx
  401650:	lea    rdx,[rax+0x1]
  401654:	cmp    rdi,rax
  401657:	jne    401640 <faz_jogada@@Base+0x70>
  401659:	lea    rbx,[rsi*8+0x0]
  401661:	mov    rdi,rbp
  401664:	call   401100 <free@plt>
  401669:	mov    rax,QWORD PTR [r12+0x8]
  40166e:	mov    rax,QWORD PTR [rax+rbx*1]
  401672:	add    rsp,0x8
  401676:	pop    rbx
  401677:	pop    rbp
  401678:	pop    r12
  40167a:	pop    r13
  40167c:	pop    r14
  40167e:	pop    r15
  401680:	ret    
  401681:	nop    DWORD PTR [rax+0x0]
  401688:	mov    rbx,0xfffffffffffffff8
  40168f:	jmp    401661 <faz_jogada@@Base+0x91>
  401691:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40169c:	nop    DWORD PTR [rax+0x0]

00000000004016a0 <numero_vitorias@@Base>:
  4016a0:	endbr64 
  4016a4:	push   r13
  4016a6:	push   r12
  4016a8:	push   rbp
  4016a9:	push   rbx
  4016aa:	sub    rsp,0x8
  4016ae:	mov    edx,DWORD PTR [rdi]
  4016b0:	test   edx,edx
  4016b2:	jle    401700 <numero_vitorias@@Base+0x60>
  4016b4:	mov    rax,QWORD PTR [rdi+0x8]
  4016b8:	dec    edx
  4016ba:	lea    rbx,[rax+0x8]
  4016be:	mov    r12,rsi
  4016c1:	lea    r13,[rbx+rdx*8]
  4016c5:	xor    ebp,ebp
  4016c7:	jmp    4016d4 <numero_vitorias@@Base+0x34>
  4016c9:	nop    DWORD PTR [rax+0x0]
  4016d0:	add    rbx,0x8
  4016d4:	mov    rsi,QWORD PTR [rax]
  4016d7:	mov    rdi,r12
  4016da:	call   401160 <strcmp@plt>
  4016df:	cmp    eax,0x1
  4016e2:	adc    ebp,0x0
  4016e5:	mov    rax,rbx
  4016e8:	cmp    rbx,r13
  4016eb:	jne    4016d0 <numero_vitorias@@Base+0x30>
  4016ed:	add    rsp,0x8
  4016f1:	pop    rbx
  4016f2:	mov    eax,ebp
  4016f4:	pop    rbp
  4016f5:	pop    r12
  4016f7:	pop    r13
  4016f9:	ret    
  4016fa:	nop    WORD PTR [rax+rax*1+0x0]
  401700:	add    rsp,0x8
  401704:	pop    rbx
  401705:	xor    ebp,ebp
  401707:	mov    eax,ebp
  401709:	pop    rbp
  40170a:	pop    r12
  40170c:	pop    r13
  40170e:	ret    
  40170f:	nop

0000000000401710 <insere_carta@@Base>:
  401710:	endbr64 
  401714:	push   rbp
  401715:	push   rbx
  401716:	mov    rbx,rdi
  401719:	sub    rsp,0x18
  40171d:	mov    rax,QWORD PTR fs:0x28
  401726:	mov    QWORD PTR [rsp+0x8],rax
  40172b:	xor    eax,eax
  40172d:	cmp    esi,0x7
  401730:	jle    401790 <insere_carta@@Base+0x80>
  401732:	cmp    esi,0x8
  401735:	je     4017d0 <insere_carta@@Base+0xc0>
  40173b:	cmp    esi,0x9
  40173e:	je     4017b8 <insere_carta@@Base+0xa8>
  401740:	cmp    esi,0xa
  401743:	je     4017f0 <insere_carta@@Base+0xe0>
  401749:	cmp    esi,0xb
  40174c:	je     401808 <insere_carta@@Base+0xf8>
  401752:	lea    rbp,[rsp+0x4]
  401757:	cmp    esi,0xc
  40175a:	je     401820 <insere_carta@@Base+0x110>
  401760:	mov    rdx,QWORD PTR [rbx]
  401763:	mov    rsi,rbp
  401766:	mov    rdi,rbx
  401769:	call   401e10 <lista_insere@@Base>
  40176e:	mov    rax,QWORD PTR [rsp+0x8]
  401773:	xor    rax,QWORD PTR fs:0x28
  40177c:	jne    40182f <insere_carta@@Base+0x11f>
  401782:	add    rsp,0x18
  401786:	pop    rbx
  401787:	pop    rbp
  401788:	ret    
  401789:	nop    DWORD PTR [rax+0x0]
  401790:	lea    rbp,[rsp+0x4]
  401795:	lea    r8d,[rsi+0x32]
  401799:	lea    rcx,[rip+0x1864]        # 403004 <_IO_stdin_used@@Base+0x4>
  4017a0:	mov    edx,0x4
  4017a5:	mov    esi,0x1
  4017aa:	mov    rdi,rbp
  4017ad:	call   4011c0 <__sprintf_chk@plt>
  4017b2:	jmp    401760 <insere_carta@@Base+0x50>
  4017b4:	nop    DWORD PTR [rax+0x0]
  4017b8:	mov    esi,0x4a
  4017bd:	mov    WORD PTR [rsp+0x4],si
  4017c2:	lea    rbp,[rsp+0x4]
  4017c7:	jmp    401760 <insere_carta@@Base+0x50>
  4017c9:	nop    DWORD PTR [rax+0x0]
  4017d0:	mov    edi,0x3031
  4017d5:	mov    WORD PTR [rsp+0x4],di
  4017da:	mov    BYTE PTR [rsp+0x6],0x0
  4017df:	lea    rbp,[rsp+0x4]
  4017e4:	jmp    401760 <insere_carta@@Base+0x50>
  4017e9:	nop    DWORD PTR [rax+0x0]
  4017f0:	mov    ecx,0x51
  4017f5:	mov    WORD PTR [rsp+0x4],cx
  4017fa:	lea    rbp,[rsp+0x4]
  4017ff:	jmp    401760 <insere_carta@@Base+0x50>
  401804:	nop    DWORD PTR [rax+0x0]
  401808:	mov    edx,0x4b
  40180d:	mov    WORD PTR [rsp+0x4],dx
  401812:	lea    rbp,[rsp+0x4]
  401817:	jmp    401760 <insere_carta@@Base+0x50>
  40181c:	nop    DWORD PTR [rax+0x0]
  401820:	mov    eax,0x41
  401825:	mov    WORD PTR [rsp+0x4],ax
  40182a:	jmp    401760 <insere_carta@@Base+0x50>
  40182f:	call   401140 <__stack_chk_fail@plt>
  401834:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40183e:	xchg   ax,ax

0000000000401840 <vetor_novo@@Base>:
  401840:	endbr64 
  401844:	sub    rsp,0x8
  401848:	mov    edi,0x10
  40184d:	call   401180 <malloc@plt>
  401852:	test   rax,rax
  401855:	je     401866 <vetor_novo@@Base+0x26>
  401857:	mov    QWORD PTR [rax],0x0
  40185e:	mov    QWORD PTR [rax+0x8],0x0
  401866:	add    rsp,0x8
  40186a:	ret    
  40186b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401870 <vetor_apaga@@Base>:
  401870:	endbr64 
  401874:	test   rdi,rdi
  401877:	je     4018c0 <vetor_apaga@@Base+0x50>
  401879:	push   rbp
  40187a:	mov    rbp,rdi
  40187d:	push   rbx
  40187e:	sub    rsp,0x8
  401882:	mov    eax,DWORD PTR [rdi]
  401884:	test   eax,eax
  401886:	jle    4018a5 <vetor_apaga@@Base+0x35>
  401888:	xor    ebx,ebx
  40188a:	nop    WORD PTR [rax+rax*1+0x0]
  401890:	mov    rax,QWORD PTR [rbp+0x8]
  401894:	mov    rdi,QWORD PTR [rax+rbx*8]
  401898:	inc    rbx
  40189b:	call   401100 <free@plt>
  4018a0:	cmp    DWORD PTR [rbp+0x0],ebx
  4018a3:	jg     401890 <vetor_apaga@@Base+0x20>
  4018a5:	mov    rdi,QWORD PTR [rbp+0x8]
  4018a9:	call   401100 <free@plt>
  4018ae:	add    rsp,0x8
  4018b2:	pop    rbx
  4018b3:	mov    rdi,rbp
  4018b6:	pop    rbp
  4018b7:	jmp    401100 <free@plt>
  4018bc:	nop    DWORD PTR [rax+0x0]
  4018c0:	ret    
  4018c1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4018cc:	nop    DWORD PTR [rax+0x0]

00000000004018d0 <vetor_atribui@@Base>:
  4018d0:	endbr64 
  4018d4:	test   rdi,rdi
  4018d7:	je     401972 <vetor_atribui@@Base+0xa2>
  4018dd:	test   esi,esi
  4018df:	js     401972 <vetor_atribui@@Base+0xa2>
  4018e5:	cmp    DWORD PTR [rdi],esi
  4018e7:	jle    401972 <vetor_atribui@@Base+0xa2>
  4018ed:	push   r15
  4018ef:	push   r14
  4018f1:	movsxd r14,esi
  4018f4:	push   r13
  4018f6:	mov    r13,rdx
  4018f9:	push   r12
  4018fb:	mov    r12,r14
  4018fe:	push   rbp
  4018ff:	mov    rbp,rdi
  401902:	mov    rdi,rdx
  401905:	push   rbx
  401906:	sub    rsp,0x18
  40190a:	call   401130 <strlen@plt>
  40190f:	mov    QWORD PTR [rsp+0x8],rax
  401914:	mov    rax,QWORD PTR [rbp+0x8]
  401918:	lea    r15,[rax+r14*8]
  40191c:	mov    rbx,QWORD PTR [r15]
  40191f:	mov    rdi,rbx
  401922:	call   401130 <strlen@plt>
  401927:	mov    rdx,QWORD PTR [rsp+0x8]
  40192c:	mov    ecx,edx
  40192e:	cmp    rax,rcx
  401931:	jb     401950 <vetor_atribui@@Base+0x80>
  401933:	mov    rsi,r13
  401936:	mov    rdi,rbx
  401939:	call   401110 <strcpy@plt>
  40193e:	mov    eax,r12d
  401941:	add    rsp,0x18
  401945:	pop    rbx
  401946:	pop    rbp
  401947:	pop    r12
  401949:	pop    r13
  40194b:	pop    r14
  40194d:	pop    r15
  40194f:	ret    
  401950:	mov    rdi,rbx
  401953:	lea    esi,[rdx+0x1]
  401956:	call   401190 <realloc@plt>
  40195b:	mov    QWORD PTR [r15],rax
  40195e:	mov    rax,QWORD PTR [rbp+0x8]
  401962:	mov    rbx,QWORD PTR [rax+r14*8]
  401966:	test   rbx,rbx
  401969:	jne    401933 <vetor_atribui@@Base+0x63>
  40196b:	mov    eax,0xffffffff
  401970:	jmp    401941 <vetor_atribui@@Base+0x71>
  401972:	or     eax,0xffffffff
  401975:	ret    
  401976:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000401980 <vetor_tamanho@@Base>:
  401980:	endbr64 
  401984:	test   rdi,rdi
  401987:	je     40198c <vetor_tamanho@@Base+0xc>
  401989:	mov    eax,DWORD PTR [rdi]
  40198b:	ret    
  40198c:	mov    eax,0xffffffff
  401991:	ret    
  401992:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40199d:	nop    DWORD PTR [rax]

00000000004019a0 <vetor_elemento@@Base>:
  4019a0:	endbr64 
  4019a4:	test   rdi,rdi
  4019a7:	je     4019c0 <vetor_elemento@@Base+0x20>
  4019a9:	test   esi,esi
  4019ab:	js     4019c0 <vetor_elemento@@Base+0x20>
  4019ad:	cmp    DWORD PTR [rdi],esi
  4019af:	jle    4019c0 <vetor_elemento@@Base+0x20>
  4019b1:	mov    rax,QWORD PTR [rdi+0x8]
  4019b5:	movsxd rsi,esi
  4019b8:	mov    rax,QWORD PTR [rax+rsi*8]
  4019bc:	ret    
  4019bd:	nop    DWORD PTR [rax]
  4019c0:	xor    eax,eax
  4019c2:	ret    
  4019c3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4019ce:	xchg   ax,ax

00000000004019d0 <vetor_insere@@Base>:
  4019d0:	endbr64 
  4019d4:	test   rdi,rdi
  4019d7:	je     401ad4 <vetor_insere@@Base+0x104>
  4019dd:	test   edx,edx
  4019df:	js     401ad4 <vetor_insere@@Base+0x104>
  4019e5:	push   r14
  4019e7:	push   r13
  4019e9:	push   r12
  4019eb:	push   rbp
  4019ec:	push   rbx
  4019ed:	mov    r12d,DWORD PTR [rdi]
  4019f0:	cmp    r12d,edx
  4019f3:	jl     401acd <vetor_insere@@Base+0xfd>
  4019f9:	mov    ebx,edx
  4019fb:	mov    rbp,rsi
  4019fe:	mov    r13,rdi
  401a01:	cmp    r12d,DWORD PTR [rdi+0x4]
  401a05:	je     401a90 <vetor_insere@@Base+0xc0>
  401a0b:	lea    eax,[r12-0x1]
  401a10:	mov    r14,QWORD PTR [r13+0x8]
  401a14:	cmp    ebx,eax
  401a16:	jg     401a48 <vetor_insere@@Base+0x78>
  401a18:	mov    edx,ebx
  401a1a:	cdqe   
  401a1c:	not    edx
  401a1e:	shl    rax,0x3
  401a22:	add    edx,r12d
  401a25:	lea    rcx,[r14+rax*1]
  401a29:	shl    rdx,0x3
  401a2d:	lea    rax,[r14+rax*1-0x8]
  401a32:	sub    rax,rdx
  401a35:	nop    DWORD PTR [rax]
  401a38:	mov    r8,QWORD PTR [rcx]
  401a3b:	sub    rcx,0x8
  401a3f:	mov    QWORD PTR [rcx+0x10],r8
  401a43:	cmp    rcx,rax
  401a46:	jne    401a38 <vetor_insere@@Base+0x68>
  401a48:	mov    rdi,rbp
  401a4b:	call   401130 <strlen@plt>
  401a50:	lea    rdi,[rax+0x1]
  401a54:	movsxd rdx,ebx
  401a57:	mov    esi,0x1
  401a5c:	lea    r14,[r14+rdx*8]
  401a60:	call   401150 <calloc@plt>
  401a65:	mov    QWORD PTR [r14],rax
  401a68:	test   rax,rax
  401a6b:	je     401acd <vetor_insere@@Base+0xfd>
  401a6d:	mov    rsi,rbp
  401a70:	mov    rdi,rax
  401a73:	inc    r12d
  401a76:	call   401110 <strcpy@plt>
  401a7b:	mov    DWORD PTR [r13+0x0],r12d
  401a7f:	mov    eax,ebx
  401a81:	pop    rbx
  401a82:	pop    rbp
  401a83:	pop    r12
  401a85:	pop    r13
  401a87:	pop    r14
  401a89:	ret    
  401a8a:	nop    WORD PTR [rax+rax*1+0x0]
  401a90:	test   r12d,r12d
  401a93:	je     401ac0 <vetor_insere@@Base+0xf0>
  401a95:	add    r12d,r12d
  401a98:	movsxd rsi,r12d
  401a9b:	shl    rsi,0x3
  401a9f:	mov    DWORD PTR [r13+0x4],r12d
  401aa3:	mov    rdi,QWORD PTR [r13+0x8]
  401aa7:	call   401190 <realloc@plt>
  401aac:	mov    QWORD PTR [r13+0x8],rax
  401ab0:	test   rax,rax
  401ab3:	je     401acd <vetor_insere@@Base+0xfd>
  401ab5:	mov    r12d,DWORD PTR [r13+0x0]
  401ab9:	jmp    401a0b <vetor_insere@@Base+0x3b>
  401abe:	xchg   ax,ax
  401ac0:	mov    esi,0x8
  401ac5:	mov    r12d,0x1
  401acb:	jmp    401a9f <vetor_insere@@Base+0xcf>
  401acd:	mov    eax,0xffffffff
  401ad2:	jmp    401a81 <vetor_insere@@Base+0xb1>
  401ad4:	or     eax,0xffffffff
  401ad7:	ret    
  401ad8:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401ae0 <vetor_remove@@Base>:
  401ae0:	endbr64 
  401ae4:	test   rdi,rdi
  401ae7:	je     401b61 <vetor_remove@@Base+0x81>
  401ae9:	test   esi,esi
  401aeb:	js     401b61 <vetor_remove@@Base+0x81>
  401aed:	cmp    DWORD PTR [rdi],esi
  401aef:	jle    401b61 <vetor_remove@@Base+0x81>
  401af1:	push   r13
  401af3:	push   r12
  401af5:	movsxd r12,esi
  401af8:	lea    r13,[r12*8+0x0]
  401b00:	push   rbp
  401b01:	push   rbx
  401b02:	mov    rbx,rdi
  401b05:	sub    rsp,0x8
  401b09:	mov    rax,QWORD PTR [rdi+0x8]
  401b0d:	mov    rdi,QWORD PTR [rax+r12*8]
  401b11:	call   401100 <free@plt>
  401b16:	mov    esi,DWORD PTR [rbx]
  401b18:	lea    eax,[r12+0x1]
  401b1d:	cmp    eax,esi
  401b1f:	jge    401b50 <vetor_remove@@Base+0x70>
  401b21:	mov    edx,esi
  401b23:	sub    edx,r12d
  401b26:	mov    rcx,QWORD PTR [rbx+0x8]
  401b2a:	sub    edx,0x2
  401b2d:	add    r12,rdx
  401b30:	lea    rax,[rcx+r13*1+0x8]
  401b35:	lea    rcx,[rcx+r12*8+0x10]
  401b3a:	nop    WORD PTR [rax+rax*1+0x0]
  401b40:	mov    rdx,QWORD PTR [rax]
  401b43:	add    rax,0x8
  401b47:	mov    QWORD PTR [rax-0x10],rdx
  401b4b:	cmp    rax,rcx
  401b4e:	jne    401b40 <vetor_remove@@Base+0x60>
  401b50:	dec    esi
  401b52:	mov    DWORD PTR [rbx],esi
  401b54:	add    rsp,0x8
  401b58:	xor    eax,eax
  401b5a:	pop    rbx
  401b5b:	pop    rbp
  401b5c:	pop    r12
  401b5e:	pop    r13
  401b60:	ret    
  401b61:	mov    eax,0xffffffff
  401b66:	ret    
  401b67:	nop    WORD PTR [rax+rax*1+0x0]

0000000000401b70 <vetor_pesquisa@@Base>:
  401b70:	endbr64 
  401b74:	push   r14
  401b76:	push   r13
  401b78:	push   r12
  401b7a:	push   rbp
  401b7b:	push   rbx
  401b7c:	test   rdi,rdi
  401b7f:	je     401bd0 <vetor_pesquisa@@Base+0x60>
  401b81:	mov    eax,DWORD PTR [rdi]
  401b83:	mov    r12d,0xffffffff
  401b89:	test   eax,eax
  401b8b:	jle    401bbf <vetor_pesquisa@@Base+0x4f>
  401b8d:	mov    rbp,rsi
  401b90:	mov    r14,QWORD PTR [rdi+0x8]
  401b94:	lea    r13d,[rax-0x1]
  401b98:	xor    ebx,ebx
  401b9a:	jmp    401bac <vetor_pesquisa@@Base+0x3c>
  401b9c:	nop    DWORD PTR [rax+0x0]
  401ba0:	lea    rax,[rbx+0x1]
  401ba4:	cmp    rbx,r13
  401ba7:	je     401bd0 <vetor_pesquisa@@Base+0x60>
  401ba9:	mov    rbx,rax
  401bac:	mov    rdi,QWORD PTR [r14+rbx*8]
  401bb0:	mov    rsi,rbp
  401bb3:	mov    r12d,ebx
  401bb6:	call   401160 <strcmp@plt>
  401bbb:	test   eax,eax
  401bbd:	jne    401ba0 <vetor_pesquisa@@Base+0x30>
  401bbf:	pop    rbx
  401bc0:	pop    rbp
  401bc1:	mov    eax,r12d
  401bc4:	pop    r12
  401bc6:	pop    r13
  401bc8:	pop    r14
  401bca:	ret    
  401bcb:	nop    DWORD PTR [rax+rax*1+0x0]
  401bd0:	pop    rbx
  401bd1:	pop    rbp
  401bd2:	mov    r12d,0xffffffff
  401bd8:	mov    eax,r12d
  401bdb:	pop    r12
  401bdd:	pop    r13
  401bdf:	pop    r14
  401be1:	ret    
  401be2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  401bed:	nop    DWORD PTR [rax]

0000000000401bf0 <vetor_ordena@@Base>:
  401bf0:	endbr64 
  401bf4:	test   rdi,rdi
  401bf7:	je     401c8b <vetor_ordena@@Base+0x9b>
  401bfd:	push   r15
  401bff:	push   r14
  401c01:	push   r13
  401c03:	push   r12
  401c05:	push   rbp
  401c06:	push   rbx
  401c07:	sub    rsp,0x18
  401c0b:	mov    eax,DWORD PTR [rdi]
  401c0d:	mov    DWORD PTR [rsp+0x4],eax
  401c11:	cmp    eax,0x1
  401c14:	jle    401c7a <vetor_ordena@@Base+0x8a>
  401c16:	mov    rax,QWORD PTR [rdi+0x8]
  401c1a:	mov    DWORD PTR [rsp],0x1
  401c21:	mov    QWORD PTR [rsp+0x8],rax
  401c26:	lea    r14,[rax+0x8]
  401c2a:	nop    WORD PTR [rax+rax*1+0x0]
  401c30:	mov    r12,QWORD PTR [r14]
  401c33:	mov    ebx,DWORD PTR [rsp]
  401c36:	mov    r15,r14
  401c39:	nop    DWORD PTR [rax+0x0]
  401c40:	mov    r13,QWORD PTR [r15-0x8]
  401c44:	mov    rdi,r12
  401c47:	mov    rsi,r13
  401c4a:	mov    rbp,r15
  401c4d:	call   401160 <strcmp@plt>
  401c52:	test   eax,eax
  401c54:	jns    401c66 <vetor_ordena@@Base+0x76>
  401c56:	mov    QWORD PTR [r15],r13
  401c59:	lea    r15,[rbp-0x8]
  401c5d:	dec    ebx
  401c5f:	jne    401c40 <vetor_ordena@@Base+0x50>
  401c61:	mov    rbp,QWORD PTR [rsp+0x8]
  401c66:	inc    DWORD PTR [rsp]
  401c69:	mov    QWORD PTR [rbp+0x0],r12
  401c6d:	add    r14,0x8
  401c71:	mov    eax,DWORD PTR [rsp]
  401c74:	cmp    eax,DWORD PTR [rsp+0x4]
  401c78:	jne    401c30 <vetor_ordena@@Base+0x40>
  401c7a:	add    rsp,0x18
  401c7e:	pop    rbx
  401c7f:	pop    rbp
  401c80:	pop    r12
  401c82:	pop    r13
  401c84:	pop    r14
  401c86:	xor    eax,eax
  401c88:	pop    r15
  401c8a:	ret    
  401c8b:	mov    eax,0xffffffff
  401c90:	ret    
  401c91:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401c9b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401ca0 <novo_str@@Base>:
  401ca0:	endbr64 
  401ca4:	push   r12
  401ca6:	mov    r12,rdi
  401ca9:	mov    edi,0x18
  401cae:	push   rbp
  401caf:	push   rbx
  401cb0:	call   401180 <malloc@plt>
  401cb5:	mov    rbx,rax
  401cb8:	test   rax,rax
  401cbb:	je     401cf7 <novo_str@@Base+0x57>
  401cbd:	mov    rdi,r12
  401cc0:	call   401130 <strlen@plt>
  401cc5:	lea    rbp,[rax+0x1]
  401cc9:	mov    rdi,rbp
  401ccc:	call   401180 <malloc@plt>
  401cd1:	mov    QWORD PTR [rbx],rax
  401cd4:	test   rax,rax
  401cd7:	je     401d00 <novo_str@@Base+0x60>
  401cd9:	mov    rdx,rbp
  401cdc:	mov    rsi,r12
  401cdf:	mov    rdi,rax
  401ce2:	call   401170 <memcpy@plt>
  401ce7:	mov    QWORD PTR [rbx+0x8],0x0
  401cef:	mov    QWORD PTR [rbx+0x10],0x0
  401cf7:	mov    rax,rbx
  401cfa:	pop    rbx
  401cfb:	pop    rbp
  401cfc:	pop    r12
  401cfe:	ret    
  401cff:	nop
  401d00:	mov    rdi,rbx
  401d03:	call   401100 <free@plt>
  401d08:	xor    ebx,ebx
  401d0a:	jmp    401cf7 <novo_str@@Base+0x57>
  401d0c:	nop    DWORD PTR [rax+0x0]

0000000000401d10 <lista_nova@@Base>:
  401d10:	endbr64 
  401d14:	sub    rsp,0x8
  401d18:	mov    edi,0x18
  401d1d:	call   401180 <malloc@plt>
  401d22:	test   rax,rax
  401d25:	je     401d3d <lista_nova@@Base+0x2d>
  401d27:	mov    QWORD PTR [rax],0x0
  401d2e:	mov    QWORD PTR [rax+0x8],0x0
  401d36:	mov    DWORD PTR [rax+0x10],0x0
  401d3d:	add    rsp,0x8
  401d41:	ret    
  401d42:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  401d4d:	nop    DWORD PTR [rax]

0000000000401d50 <lista_apaga@@Base>:
  401d50:	endbr64 
  401d54:	test   rdi,rdi
  401d57:	je     401da0 <lista_apaga@@Base+0x50>
  401d59:	push   rbp
  401d5a:	mov    rbp,rdi
  401d5d:	push   rbx
  401d5e:	sub    rsp,0x8
  401d62:	mov    rbx,QWORD PTR [rdi]
  401d65:	test   rbx,rbx
  401d68:	je     401d91 <lista_apaga@@Base+0x41>
  401d6a:	nop    WORD PTR [rax+rax*1+0x0]
  401d70:	mov    rax,QWORD PTR [rbx+0x8]
  401d74:	mov    rdi,QWORD PTR [rbx]
  401d77:	mov    QWORD PTR [rbp+0x0],rax
  401d7b:	call   401100 <free@plt>
  401d80:	mov    rdi,rbx
  401d83:	call   401100 <free@plt>
  401d88:	mov    rbx,QWORD PTR [rbp+0x0]
  401d8c:	test   rbx,rbx
  401d8f:	jne    401d70 <lista_apaga@@Base+0x20>
  401d91:	add    rsp,0x8
  401d95:	pop    rbx
  401d96:	mov    rdi,rbp
  401d99:	pop    rbp
  401d9a:	jmp    401100 <free@plt>
  401d9f:	nop
  401da0:	ret    
  401da1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  401dac:	nop    DWORD PTR [rax+0x0]

0000000000401db0 <lista_tamanho@@Base>:
  401db0:	endbr64 
  401db4:	test   rdi,rdi
  401db7:	je     401dbd <lista_tamanho@@Base+0xd>
  401db9:	mov    eax,DWORD PTR [rdi+0x10]
  401dbc:	ret    
  401dbd:	mov    eax,0xffffffff
  401dc2:	ret    
  401dc3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  401dce:	xchg   ax,ax

0000000000401dd0 <lista_inicio@@Base>:
  401dd0:	endbr64 
  401dd4:	test   rdi,rdi
  401dd7:	je     401de0 <lista_inicio@@Base+0x10>
  401dd9:	mov    rax,QWORD PTR [rdi]
  401ddc:	ret    
  401ddd:	nop    DWORD PTR [rax]
  401de0:	xor    eax,eax
  401de2:	ret    
  401de3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  401dee:	xchg   ax,ax

0000000000401df0 <lista_fim@@Base>:
  401df0:	endbr64 
  401df4:	test   rdi,rdi
  401df7:	je     401e00 <lista_fim@@Base+0x10>
  401df9:	mov    rax,QWORD PTR [rdi+0x8]
  401dfd:	ret    
  401dfe:	xchg   ax,ax
  401e00:	xor    eax,eax
  401e02:	ret    
  401e03:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  401e0e:	xchg   ax,ax

0000000000401e10 <lista_insere@@Base>:
  401e10:	endbr64 
  401e14:	test   rdi,rdi
  401e17:	je     401eb0 <lista_insere@@Base+0xa0>
  401e1d:	test   rsi,rsi
  401e20:	je     401eb0 <lista_insere@@Base+0xa0>
  401e26:	push   rbp
  401e27:	mov    rbp,rdx
  401e2a:	push   rbx
  401e2b:	mov    rbx,rdi
  401e2e:	mov    rdi,rsi
  401e31:	sub    rsp,0x8
  401e35:	call   401ca0 <novo_str@@Base>
  401e3a:	test   rax,rax
  401e3d:	je     401e70 <lista_insere@@Base+0x60>
  401e3f:	inc    DWORD PTR [rbx+0x10]
  401e42:	mov    rdx,QWORD PTR [rbx]
  401e45:	test   rbp,rbp
  401e48:	je     401e90 <lista_insere@@Base+0x80>
  401e4a:	cmp    rbp,rdx
  401e4d:	je     401e80 <lista_insere@@Base+0x70>
  401e4f:	mov    rdx,QWORD PTR [rbp+0x10]
  401e53:	mov    QWORD PTR [rax+0x8],rbp
  401e57:	mov    QWORD PTR [rax+0x10],rdx
  401e5b:	mov    rdx,QWORD PTR [rbp+0x10]
  401e5f:	mov    QWORD PTR [rdx+0x8],rax
  401e63:	mov    QWORD PTR [rbp+0x10],rax
  401e67:	add    rsp,0x8
  401e6b:	pop    rbx
  401e6c:	pop    rbp
  401e6d:	ret    
  401e6e:	xchg   ax,ax
  401e70:	add    rsp,0x8
  401e74:	pop    rbx
  401e75:	xor    eax,eax
  401e77:	pop    rbp
  401e78:	ret    
  401e79:	nop    DWORD PTR [rax+0x0]
  401e80:	mov    QWORD PTR [rax+0x8],rbp
  401e84:	mov    QWORD PTR [rbp+0x10],rax
  401e88:	mov    QWORD PTR [rbx],rax
  401e8b:	jmp    401e67 <lista_insere@@Base+0x57>
  401e8d:	nop    DWORD PTR [rax]
  401e90:	test   rdx,rdx
  401e93:	je     401eb8 <lista_insere@@Base+0xa8>
  401e95:	mov    rdx,QWORD PTR [rbx+0x8]
  401e99:	mov    QWORD PTR [rax+0x10],rdx
  401e9d:	mov    QWORD PTR [rdx+0x8],rax
  401ea1:	mov    QWORD PTR [rbx+0x8],rax
  401ea5:	jmp    401e67 <lista_insere@@Base+0x57>
  401ea7:	nop    WORD PTR [rax+rax*1+0x0]
  401eb0:	xor    eax,eax
  401eb2:	ret    
  401eb3:	nop    DWORD PTR [rax+rax*1+0x0]
  401eb8:	mov    QWORD PTR [rbx+0x8],rax
  401ebc:	mov    QWORD PTR [rbx],rax
  401ebf:	jmp    401e67 <lista_insere@@Base+0x57>
  401ec1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  401ecc:	nop    DWORD PTR [rax+0x0]

0000000000401ed0 <lista_remove@@Base>:
  401ed0:	endbr64 
  401ed4:	push   rbp
  401ed5:	push   rbx
  401ed6:	sub    rsp,0x8
  401eda:	test   rdi,rdi
  401edd:	je     401f40 <lista_remove@@Base+0x70>
  401edf:	test   rsi,rsi
  401ee2:	je     401f40 <lista_remove@@Base+0x70>
  401ee4:	mov    rax,QWORD PTR [rsi+0x10]
  401ee8:	dec    DWORD PTR [rdi+0x10]
  401eeb:	mov    rbp,QWORD PTR [rsi+0x8]
  401eef:	test   rax,rax
  401ef2:	je     401f28 <lista_remove@@Base+0x58>
  401ef4:	mov    QWORD PTR [rax+0x8],rbp
  401ef8:	mov    rbp,QWORD PTR [rsi+0x8]
  401efc:	test   rbp,rbp
  401eff:	je     401f30 <lista_remove@@Base+0x60>
  401f01:	mov    QWORD PTR [rbp+0x10],rax
  401f05:	mov    rdi,QWORD PTR [rsi]
  401f08:	mov    rbx,rsi
  401f0b:	call   401100 <free@plt>
  401f10:	mov    rdi,rbx
  401f13:	call   401100 <free@plt>
  401f18:	add    rsp,0x8
  401f1c:	pop    rbx
  401f1d:	mov    rax,rbp
  401f20:	pop    rbp
  401f21:	ret    
  401f22:	nop    WORD PTR [rax+rax*1+0x0]
  401f28:	mov    QWORD PTR [rdi],rbp
  401f2b:	test   rbp,rbp
  401f2e:	jne    401f01 <lista_remove@@Base+0x31>
  401f30:	mov    QWORD PTR [rdi+0x8],rax
  401f34:	jmp    401f05 <lista_remove@@Base+0x35>
  401f36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401f40:	add    rsp,0x8
  401f44:	xor    ebp,ebp
  401f46:	pop    rbx
  401f47:	mov    rax,rbp
  401f4a:	pop    rbp
  401f4b:	ret    
  401f4c:	nop    DWORD PTR [rax+0x0]

0000000000401f50 <lista_pesquisa@@Base>:
  401f50:	endbr64 
  401f54:	push   rbp
  401f55:	push   rbx
  401f56:	xor    ebx,ebx
  401f58:	sub    rsp,0x8
  401f5c:	test   rdi,rdi
  401f5f:	je     401f98 <lista_pesquisa@@Base+0x48>
  401f61:	test   rsi,rsi
  401f64:	je     401f98 <lista_pesquisa@@Base+0x48>
  401f66:	cmp    edx,0x1
  401f69:	ja     401f98 <lista_pesquisa@@Base+0x48>
  401f6b:	mov    rbp,rsi
  401f6e:	test   edx,edx
  401f70:	jne    401fa8 <lista_pesquisa@@Base+0x58>
  401f72:	mov    rbx,QWORD PTR [rdi]
  401f75:	test   rbx,rbx
  401f78:	jne    401f89 <lista_pesquisa@@Base+0x39>
  401f7a:	jmp    401f98 <lista_pesquisa@@Base+0x48>
  401f7c:	nop    DWORD PTR [rax+0x0]
  401f80:	mov    rbx,QWORD PTR [rbx+0x8]
  401f84:	test   rbx,rbx
  401f87:	je     401f98 <lista_pesquisa@@Base+0x48>
  401f89:	mov    rdi,QWORD PTR [rbx]
  401f8c:	mov    rsi,rbp
  401f8f:	call   401160 <strcmp@plt>
  401f94:	test   eax,eax
  401f96:	jne    401f80 <lista_pesquisa@@Base+0x30>
  401f98:	add    rsp,0x8
  401f9c:	mov    rax,rbx
  401f9f:	pop    rbx
  401fa0:	pop    rbp
  401fa1:	ret    
  401fa2:	nop    WORD PTR [rax+rax*1+0x0]
  401fa8:	mov    rbx,QWORD PTR [rdi+0x8]
  401fac:	test   rbx,rbx
  401faf:	jne    401fc1 <lista_pesquisa@@Base+0x71>
  401fb1:	jmp    401f98 <lista_pesquisa@@Base+0x48>
  401fb3:	nop    DWORD PTR [rax+rax*1+0x0]
  401fb8:	mov    rbx,QWORD PTR [rbx+0x10]
  401fbc:	test   rbx,rbx
  401fbf:	je     401f98 <lista_pesquisa@@Base+0x48>
  401fc1:	mov    rdi,QWORD PTR [rbx]
  401fc4:	mov    rsi,rbp
  401fc7:	call   401160 <strcmp@plt>
  401fcc:	test   eax,eax
  401fce:	jne    401fb8 <lista_pesquisa@@Base+0x68>
  401fd0:	add    rsp,0x8
  401fd4:	mov    rax,rbx
  401fd7:	pop    rbx
  401fd8:	pop    rbp
  401fd9:	ret    
  401fda:	nop    WORD PTR [rax+rax*1+0x0]

0000000000401fe0 <lista_ordena@@Base>:
  401fe0:	endbr64 
  401fe4:	test   rdi,rdi
  401fe7:	je     40205a <lista_ordena@@Base+0x7a>
  401fe9:	push   r13
  401feb:	push   r12
  401fed:	push   rbp
  401fee:	push   rbx
  401fef:	sub    rsp,0x8
  401ff3:	mov    r12,QWORD PTR [rdi]
  401ff6:	mov    r13,QWORD PTR [r12+0x8]
  401ffb:	test   r13,r13
  401ffe:	je     40204d <lista_ordena@@Base+0x6d>
  402000:	mov    rbp,r12
  402003:	mov    rbx,r13
  402006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402010:	mov    rsi,QWORD PTR [rbp+0x0]
  402014:	mov    rdi,QWORD PTR [rbx]
  402017:	call   401160 <strcmp@plt>
  40201c:	test   eax,eax
  40201e:	cmovs  rbp,rbx
  402022:	mov    rbx,QWORD PTR [rbx+0x8]
  402026:	test   rbx,rbx
  402029:	jne    402010 <lista_ordena@@Base+0x30>
  40202b:	cmp    r12,rbp
  40202e:	je     402040 <lista_ordena@@Base+0x60>
  402030:	mov    rax,QWORD PTR [r12]
  402034:	mov    rdx,QWORD PTR [rbp+0x0]
  402038:	mov    QWORD PTR [r12],rdx
  40203c:	mov    QWORD PTR [rbp+0x0],rax
  402040:	mov    r12,r13
  402043:	mov    r13,QWORD PTR [r12+0x8]
  402048:	test   r13,r13
  40204b:	jne    402000 <lista_ordena@@Base+0x20>
  40204d:	add    rsp,0x8
  402051:	pop    rbx
  402052:	pop    rbp
  402053:	pop    r12
  402055:	xor    eax,eax
  402057:	pop    r13
  402059:	ret    
  40205a:	mov    eax,0xffffffff
  40205f:	ret    

0000000000402060 <lista_inverte@@Base>:
  402060:	endbr64 
  402064:	test   rdi,rdi
  402067:	je     4020e3 <lista_inverte@@Base+0x83>
  402069:	mov    r10d,DWORD PTR [rdi+0x10]
  40206d:	xor    eax,eax
  40206f:	cmp    r10d,0x1
  402073:	jle    4020e8 <lista_inverte@@Base+0x88>
  402075:	mov    rdx,QWORD PTR [rdi]
  402078:	mov    rax,QWORD PTR [rdx+0x8]
  40207c:	cmp    r10d,0x2
  402080:	je     4020f0 <lista_inverte@@Base+0x90>
  402082:	sub    r10d,0x2
  402086:	xor    ecx,ecx
  402088:	jmp    402093 <lista_inverte@@Base+0x33>
  40208a:	nop    WORD PTR [rax+rax*1+0x0]
  402090:	mov    rax,r8
  402093:	mov    r8,QWORD PTR [rax+0x8]
  402097:	mov    rsi,QWORD PTR [rax+0x10]
  40209b:	inc    ecx
  40209d:	mov    QWORD PTR [rsi+0x8],r8
  4020a1:	mov    r9,QWORD PTR [rax+0x8]
  4020a5:	mov    QWORD PTR [r9+0x10],rsi
  4020a9:	mov    QWORD PTR [rax+0x8],rdx
  4020ad:	mov    QWORD PTR [rdx+0x10],rax
  4020b1:	mov    rdx,rax
  4020b4:	cmp    r10d,ecx
  4020b7:	jne    402090 <lista_inverte@@Base+0x30>
  4020b9:	mov    rdx,QWORD PTR [rdi+0x8]
  4020bd:	mov    rcx,QWORD PTR [rdx+0x10]
  4020c1:	mov    QWORD PTR [rdi+0x8],rcx
  4020c5:	mov    QWORD PTR [rcx+0x8],0x0
  4020cd:	mov    QWORD PTR [rdx+0x8],rax
  4020d1:	mov    QWORD PTR [rdx+0x10],0x0
  4020d9:	mov    QWORD PTR [rax+0x10],rdx
  4020dd:	mov    QWORD PTR [rdi],rdx
  4020e0:	xor    eax,eax
  4020e2:	ret    
  4020e3:	mov    eax,0xffffffff
  4020e8:	ret    
  4020e9:	nop    DWORD PTR [rax+0x0]
  4020f0:	mov    rax,rdx
  4020f3:	jmp    4020b9 <lista_inverte@@Base+0x59>
  4020f5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4020ff:	nop

0000000000402100 <__libc_csu_init@@Base>:
  402100:	endbr64 
  402104:	push   r15
  402106:	lea    r15,[rip+0x2cfb]        # 404e08 <_IO_stdin_used@@Base+0x1e08>
  40210d:	push   r14
  40210f:	mov    r14,rdx
  402112:	push   r13
  402114:	mov    r13,rsi
  402117:	push   r12
  402119:	mov    r12d,edi
  40211c:	push   rbp
  40211d:	lea    rbp,[rip+0x2cec]        # 404e10 <_IO_stdin_used@@Base+0x1e10>
  402124:	push   rbx
  402125:	sub    rbp,r15
  402128:	sub    rsp,0x8
  40212c:	call   401000 <free@plt-0x100>
  402131:	sar    rbp,0x3
  402135:	je     402156 <__libc_csu_init@@Base+0x56>
  402137:	xor    ebx,ebx
  402139:	nop    DWORD PTR [rax+0x0]
  402140:	mov    rdx,r14
  402143:	mov    rsi,r13
  402146:	mov    edi,r12d
  402149:	call   QWORD PTR [r15+rbx*8]
  40214d:	add    rbx,0x1
  402151:	cmp    rbp,rbx
  402154:	jne    402140 <__libc_csu_init@@Base+0x40>
  402156:	add    rsp,0x8
  40215a:	pop    rbx
  40215b:	pop    rbp
  40215c:	pop    r12
  40215e:	pop    r13
  402160:	pop    r14
  402162:	pop    r15
  402164:	ret    
  402165:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000402170 <__libc_csu_fini@@Base>:
  402170:	endbr64 
  402174:	ret    

Disassembly of section .fini:

0000000000402178 <.fini>:
  402178:	endbr64 
  40217c:	sub    rsp,0x8
  402180:	add    rsp,0x8
  402184:	ret    
