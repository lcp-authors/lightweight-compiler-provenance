
../repos/LuaJIT-2.0.5/src/host/minilua:     file format elf64-x86-64


Disassembly of section .init:

0000000000401000 <.init>:
  401000:	endbr64 
  401004:	sub    rsp,0x8
  401008:	mov    rax,QWORD PTR [rip+0x1bfe1]        # 41cff0 <__sprintf_chk@plt+0x1bd00>
  40100f:	test   rax,rax
  401012:	je     401016 <__ctype_toupper_loc@plt-0x1a>
  401014:	call   rax
  401016:	add    rsp,0x8
  40101a:	ret    

Disassembly of section .plt:

0000000000401020 <__ctype_toupper_loc@plt-0x10>:
  401020:	push   QWORD PTR [rip+0x1bfe2]        # 41d008 <__sprintf_chk@plt+0x1bd18>
  401026:	jmp    QWORD PTR [rip+0x1bfe4]        # 41d010 <__sprintf_chk@plt+0x1bd20>
  40102c:	nop    DWORD PTR [rax+0x0]

0000000000401030 <__ctype_toupper_loc@plt>:
  401030:	jmp    QWORD PTR [rip+0x1bfe2]        # 41d018 <__sprintf_chk@plt+0x1bd28>
  401036:	push   0x0
  40103b:	jmp    401020 <__ctype_toupper_loc@plt-0x10>

0000000000401040 <free@plt>:
  401040:	jmp    QWORD PTR [rip+0x1bfda]        # 41d020 <__sprintf_chk@plt+0x1bd30>
  401046:	push   0x1
  40104b:	jmp    401020 <__ctype_toupper_loc@plt-0x10>

0000000000401050 <__errno_location@plt>:
  401050:	jmp    QWORD PTR [rip+0x1bfd2]        # 41d028 <__sprintf_chk@plt+0x1bd38>
  401056:	push   0x2
  40105b:	jmp    401020 <__ctype_toupper_loc@plt-0x10>

0000000000401060 <strncpy@plt>:
  401060:	jmp    QWORD PTR [rip+0x1bfca]        # 41d030 <__sprintf_chk@plt+0x1bd40>
  401066:	push   0x3
  40106b:	jmp    401020 <__ctype_toupper_loc@plt-0x10>

0000000000401070 <remove@plt>:
  401070:	jmp    QWORD PTR [rip+0x1bfc2]        # 41d038 <__sprintf_chk@plt+0x1bd48>
  401076:	push   0x4
  40107b:	jmp    401020 <__ctype_toupper_loc@plt-0x10>

0000000000401080 <strcpy@plt>:
  401080:	jmp    QWORD PTR [rip+0x1bfba]        # 41d040 <__sprintf_chk@plt+0x1bd50>
  401086:	push   0x5
  40108b:	jmp    401020 <__ctype_toupper_loc@plt-0x10>

0000000000401090 <__isoc99_fscanf@plt>:
  401090:	jmp    QWORD PTR [rip+0x1bfb2]        # 41d048 <__sprintf_chk@plt+0x1bd58>
  401096:	push   0x6
  40109b:	jmp    401020 <__ctype_toupper_loc@plt-0x10>

00000000004010a0 <ferror@plt>:
  4010a0:	jmp    QWORD PTR [rip+0x1bfaa]        # 41d050 <__sprintf_chk@plt+0x1bd60>
  4010a6:	push   0x7
  4010ab:	jmp    401020 <__ctype_toupper_loc@plt-0x10>

00000000004010b0 <fread@plt>:
  4010b0:	jmp    QWORD PTR [rip+0x1bfa2]        # 41d058 <__sprintf_chk@plt+0x1bd68>
  4010b6:	push   0x8
  4010bb:	jmp    401020 <__ctype_toupper_loc@plt-0x10>

00000000004010c0 <strtod@plt>:
  4010c0:	jmp    QWORD PTR [rip+0x1bf9a]        # 41d060 <__sprintf_chk@plt+0x1bd70>
  4010c6:	push   0x9
  4010cb:	jmp    401020 <__ctype_toupper_loc@plt-0x10>

00000000004010d0 <pow@plt>:
  4010d0:	jmp    QWORD PTR [rip+0x1bf92]        # 41d068 <__sprintf_chk@plt+0x1bd78>
  4010d6:	push   0xa
  4010db:	jmp    401020 <__ctype_toupper_loc@plt-0x10>

00000000004010e0 <fclose@plt>:
  4010e0:	jmp    QWORD PTR [rip+0x1bf8a]        # 41d070 <__sprintf_chk@plt+0x1bd80>
  4010e6:	push   0xb
  4010eb:	jmp    401020 <__ctype_toupper_loc@plt-0x10>

00000000004010f0 <strlen@plt>:
  4010f0:	jmp    QWORD PTR [rip+0x1bf82]        # 41d078 <__sprintf_chk@plt+0x1bd88>
  4010f6:	push   0xc
  4010fb:	jmp    401020 <__ctype_toupper_loc@plt-0x10>

0000000000401100 <__stack_chk_fail@plt>:
  401100:	jmp    QWORD PTR [rip+0x1bf7a]        # 41d080 <__sprintf_chk@plt+0x1bd90>
  401106:	push   0xd
  40110b:	jmp    401020 <__ctype_toupper_loc@plt-0x10>

0000000000401110 <strchr@plt>:
  401110:	jmp    QWORD PTR [rip+0x1bf72]        # 41d088 <__sprintf_chk@plt+0x1bd98>
  401116:	push   0xe
  40111b:	jmp    401020 <__ctype_toupper_loc@plt-0x10>

0000000000401120 <freopen@plt>:
  401120:	jmp    QWORD PTR [rip+0x1bf6a]        # 41d090 <__sprintf_chk@plt+0x1bda0>
  401126:	push   0xf
  40112b:	jmp    401020 <__ctype_toupper_loc@plt-0x10>

0000000000401130 <strncat@plt>:
  401130:	jmp    QWORD PTR [rip+0x1bf62]        # 41d098 <__sprintf_chk@plt+0x1bda8>
  401136:	push   0x10
  40113b:	jmp    401020 <__ctype_toupper_loc@plt-0x10>

0000000000401140 <strcspn@plt>:
  401140:	jmp    QWORD PTR [rip+0x1bf5a]        # 41d0a0 <__sprintf_chk@plt+0x1bdb0>
  401146:	push   0x11
  40114b:	jmp    401020 <__ctype_toupper_loc@plt-0x10>

0000000000401150 <memchr@plt>:
  401150:	jmp    QWORD PTR [rip+0x1bf52]        # 41d0a8 <__sprintf_chk@plt+0x1bdb8>
  401156:	push   0x12
  40115b:	jmp    401020 <__ctype_toupper_loc@plt-0x10>

0000000000401160 <memcmp@plt>:
  401160:	jmp    QWORD PTR [rip+0x1bf4a]        # 41d0b0 <__sprintf_chk@plt+0x1bdc0>
  401166:	push   0x13
  40116b:	jmp    401020 <__ctype_toupper_loc@plt-0x10>

0000000000401170 <fgets@plt>:
  401170:	jmp    QWORD PTR [rip+0x1bf42]        # 41d0b8 <__sprintf_chk@plt+0x1bdc8>
  401176:	push   0x14
  40117b:	jmp    401020 <__ctype_toupper_loc@plt-0x10>

0000000000401180 <_setjmp@plt>:
  401180:	jmp    QWORD PTR [rip+0x1bf3a]        # 41d0c0 <__sprintf_chk@plt+0x1bdd0>
  401186:	push   0x15
  40118b:	jmp    401020 <__ctype_toupper_loc@plt-0x10>

0000000000401190 <strcmp@plt>:
  401190:	jmp    QWORD PTR [rip+0x1bf32]        # 41d0c8 <__sprintf_chk@plt+0x1bdd8>
  401196:	push   0x16
  40119b:	jmp    401020 <__ctype_toupper_loc@plt-0x10>

00000000004011a0 <feof@plt>:
  4011a0:	jmp    QWORD PTR [rip+0x1bf2a]        # 41d0d0 <__sprintf_chk@plt+0x1bde0>
  4011a6:	push   0x17
  4011ab:	jmp    401020 <__ctype_toupper_loc@plt-0x10>

00000000004011b0 <clearerr@plt>:
  4011b0:	jmp    QWORD PTR [rip+0x1bf22]        # 41d0d8 <__sprintf_chk@plt+0x1bde8>
  4011b6:	push   0x18
  4011bb:	jmp    401020 <__ctype_toupper_loc@plt-0x10>

00000000004011c0 <memcpy@plt>:
  4011c0:	jmp    QWORD PTR [rip+0x1bf1a]        # 41d0e0 <__sprintf_chk@plt+0x1bdf0>
  4011c6:	push   0x19
  4011cb:	jmp    401020 <__ctype_toupper_loc@plt-0x10>

00000000004011d0 <fflush@plt>:
  4011d0:	jmp    QWORD PTR [rip+0x1bf12]        # 41d0e8 <__sprintf_chk@plt+0x1bdf8>
  4011d6:	push   0x1a
  4011db:	jmp    401020 <__ctype_toupper_loc@plt-0x10>

00000000004011e0 <ungetc@plt>:
  4011e0:	jmp    QWORD PTR [rip+0x1bf0a]        # 41d0f0 <__sprintf_chk@plt+0x1be00>
  4011e6:	push   0x1b
  4011eb:	jmp    401020 <__ctype_toupper_loc@plt-0x10>

00000000004011f0 <strcoll@plt>:
  4011f0:	jmp    QWORD PTR [rip+0x1bf02]        # 41d0f8 <__sprintf_chk@plt+0x1be08>
  4011f6:	push   0x1c
  4011fb:	jmp    401020 <__ctype_toupper_loc@plt-0x10>

0000000000401200 <strpbrk@plt>:
  401200:	jmp    QWORD PTR [rip+0x1befa]        # 41d100 <__sprintf_chk@plt+0x1be10>
  401206:	push   0x1d
  40120b:	jmp    401020 <__ctype_toupper_loc@plt-0x10>

0000000000401210 <__strncpy_chk@plt>:
  401210:	jmp    QWORD PTR [rip+0x1bef2]        # 41d108 <__sprintf_chk@plt+0x1be18>
  401216:	push   0x1e
  40121b:	jmp    401020 <__ctype_toupper_loc@plt-0x10>

0000000000401220 <realloc@plt>:
  401220:	jmp    QWORD PTR [rip+0x1beea]        # 41d110 <__sprintf_chk@plt+0x1be20>
  401226:	push   0x1f
  40122b:	jmp    401020 <__ctype_toupper_loc@plt-0x10>

0000000000401230 <__longjmp_chk@plt>:
  401230:	jmp    QWORD PTR [rip+0x1bee2]        # 41d118 <__sprintf_chk@plt+0x1be28>
  401236:	push   0x20
  40123b:	jmp    401020 <__ctype_toupper_loc@plt-0x10>

0000000000401240 <fopen@plt>:
  401240:	jmp    QWORD PTR [rip+0x1beda]        # 41d120 <__sprintf_chk@plt+0x1be30>
  401246:	push   0x21
  40124b:	jmp    401020 <__ctype_toupper_loc@plt-0x10>

0000000000401250 <strtoul@plt>:
  401250:	jmp    QWORD PTR [rip+0x1bed2]        # 41d128 <__sprintf_chk@plt+0x1be38>
  401256:	push   0x22
  40125b:	jmp    401020 <__ctype_toupper_loc@plt-0x10>

0000000000401260 <floor@plt>:
  401260:	jmp    QWORD PTR [rip+0x1beca]        # 41d130 <__sprintf_chk@plt+0x1be40>
  401266:	push   0x23
  40126b:	jmp    401020 <__ctype_toupper_loc@plt-0x10>

0000000000401270 <strcat@plt>:
  401270:	jmp    QWORD PTR [rip+0x1bec2]        # 41d138 <__sprintf_chk@plt+0x1be48>
  401276:	push   0x24
  40127b:	jmp    401020 <__ctype_toupper_loc@plt-0x10>

0000000000401280 <exit@plt>:
  401280:	jmp    QWORD PTR [rip+0x1beba]        # 41d140 <__sprintf_chk@plt+0x1be50>
  401286:	push   0x25
  40128b:	jmp    401020 <__ctype_toupper_loc@plt-0x10>

0000000000401290 <fwrite@plt>:
  401290:	jmp    QWORD PTR [rip+0x1beb2]        # 41d148 <__sprintf_chk@plt+0x1be58>
  401296:	push   0x26
  40129b:	jmp    401020 <__ctype_toupper_loc@plt-0x10>

00000000004012a0 <__fprintf_chk@plt>:
  4012a0:	jmp    QWORD PTR [rip+0x1beaa]        # 41d150 <__sprintf_chk@plt+0x1be60>
  4012a6:	push   0x27
  4012ab:	jmp    401020 <__ctype_toupper_loc@plt-0x10>

00000000004012b0 <strerror@plt>:
  4012b0:	jmp    QWORD PTR [rip+0x1bea2]        # 41d158 <__sprintf_chk@plt+0x1be68>
  4012b6:	push   0x28
  4012bb:	jmp    401020 <__ctype_toupper_loc@plt-0x10>

00000000004012c0 <getc@plt>:
  4012c0:	jmp    QWORD PTR [rip+0x1be9a]        # 41d160 <__sprintf_chk@plt+0x1be70>
  4012c6:	push   0x29
  4012cb:	jmp    401020 <__ctype_toupper_loc@plt-0x10>

00000000004012d0 <__ctype_tolower_loc@plt>:
  4012d0:	jmp    QWORD PTR [rip+0x1be92]        # 41d168 <__sprintf_chk@plt+0x1be78>
  4012d6:	push   0x2a
  4012db:	jmp    401020 <__ctype_toupper_loc@plt-0x10>

00000000004012e0 <__ctype_b_loc@plt>:
  4012e0:	jmp    QWORD PTR [rip+0x1be8a]        # 41d170 <__sprintf_chk@plt+0x1be80>
  4012e6:	push   0x2b
  4012eb:	jmp    401020 <__ctype_toupper_loc@plt-0x10>

00000000004012f0 <__sprintf_chk@plt>:
  4012f0:	jmp    QWORD PTR [rip+0x1be82]        # 41d178 <__sprintf_chk@plt+0x1be88>
  4012f6:	push   0x2c
  4012fb:	jmp    401020 <__ctype_toupper_loc@plt-0x10>

Disassembly of section .text:

0000000000401300 <.text>:
  401300:	push   r13
  401302:	push   r12
  401304:	mov    r13,rsi
  401307:	push   rbp
  401308:	push   rbx
  401309:	mov    r12d,edi
  40130c:	mov    esi,0x268
  401311:	xor    edi,edi
  401313:	sub    rsp,0x38
  401317:	mov    rax,QWORD PTR fs:0x28
  401320:	mov    QWORD PTR [rsp+0x28],rax
  401325:	xor    eax,eax
  401327:	call   401220 <realloc@plt>
  40132c:	test   rax,rax
  40132f:	je     401744 <__sprintf_chk@plt+0x454>
  401335:	mov    rbx,rax
  401338:	mov    QWORD PTR [rax],0x0
  40133f:	mov    BYTE PTR [rax+0x8],0x8
  401343:	mov    BYTE PTR [rax+0xd8],0x21
  40134a:	mov    BYTE PTR [rax+0x9],0x61
  40134e:	lea    rax,[rax+0xb8]
  401355:	xor    ecx,ecx
  401357:	xor    esi,esi
  401359:	mov    QWORD PTR [rbx+0x40],0x0
  401361:	mov    QWORD PTR [rbx+0x20],rax
  401365:	lea    rax,[rip+0xdc4]        # 402130 <__sprintf_chk@plt+0xe40>
  40136c:	mov    DWORD PTR [rbx+0x58],0x0
  401373:	mov    QWORD PTR [rbx+0xa8],0x0
  40137e:	mov    QWORD PTR [rbx+0x70],0x0
  401386:	lea    rdx,[rbx+0x1e0]
  40138d:	mov    QWORD PTR [rbx+0xc8],rax
  401394:	lea    rax,[rbx+0x170]
  40139b:	mov    BYTE PTR [rbx+0x64],0x0
  40139f:	mov    DWORD PTR [rbx+0x68],0x0
  4013a6:	mov    BYTE PTR [rbx+0x65],0x1
  4013aa:	mov    QWORD PTR [rbx+0x188],rax
  4013b1:	mov    QWORD PTR [rbx+0x190],rax
  4013b8:	lea    rax,[rbx+0xe0]
  4013bf:	mov    DWORD PTR [rbx+0x6c],0x0
  4013c6:	mov    QWORD PTR [rbx+0x98],0x0
  4013d1:	mov    DWORD PTR [rbx+0x5c],0x0
  4013d8:	mov    WORD PTR [rbx+0x62],cx
  4013dc:	mov    WORD PTR [rbx+0x60],si
  4013e0:	mov    BYTE PTR [rbx+0xa],0x0
  4013e4:	mov    QWORD PTR [rbx+0x28],0x0
  4013ec:	mov    QWORD PTR [rbx+0x50],0x0
  4013f4:	mov    QWORD PTR [rbx+0x30],0x0
  4013fc:	mov    QWORD PTR [rbx+0xb0],0x0
  401407:	mov    DWORD PTR [rbx+0x80],0x0
  401411:	mov    QWORD PTR [rbx+0xd0],0x0
  40141c:	mov    QWORD PTR [rbx+0x168],rbx
  401423:	mov    QWORD PTR [rbx+0x128],0x0
  40142e:	mov    DWORD PTR [rbx+0xc4],0x0
  401438:	mov    DWORD PTR [rbx+0xc0],0x0
  401442:	mov    QWORD PTR [rbx+0xb8],0x0
  40144d:	mov    DWORD PTR [rbx+0x160],0x0
  401457:	mov    QWORD PTR [rbx+0xe8],rax
  40145e:	lea    rax,[rbx+0x198]
  401465:	mov    QWORD PTR [rbx+0x110],0x0
  401470:	mov    QWORD PTR [rbx+0x120],0x0
  40147b:	mov    QWORD PTR [rbx+0x150],0x0
  401486:	mov    BYTE PTR [rbx+0xd9],0x0
  40148d:	mov    QWORD PTR [rbx+0xe0],rbx
  401494:	mov    DWORD PTR [rbx+0xdc],0x0
  40149e:	mov    QWORD PTR [rbx+0xf0],0x0
  4014a9:	mov    QWORD PTR [rbx+0xf8],0x0
  4014b4:	mov    QWORD PTR [rbx+0x100],0x0
  4014bf:	mov    QWORD PTR [rbx+0x108],0x0
  4014ca:	mov    QWORD PTR [rbx+0x130],0x268
  4014d5:	mov    DWORD PTR [rbx+0x148],0xc8
  4014df:	mov    DWORD PTR [rbx+0x14c],0xc8
  4014e9:	mov    QWORD PTR [rbx+0x140],0x0
  4014f4:	nop    DWORD PTR [rax+0x0]
  4014f8:	mov    QWORD PTR [rax],0x0
  4014ff:	add    rax,0x8
  401503:	cmp    rax,rdx
  401506:	jne    4014f8 <__sprintf_chk@plt+0x208>
  401508:	lea    rsi,[rip+0x5fb1]        # 4074c0 <__sprintf_chk@plt+0x61d0>
  40150f:	xor    edx,edx
  401511:	mov    rdi,rbx
  401514:	call   402150 <__sprintf_chk@plt+0xe60>
  401519:	test   eax,eax
  40151b:	jne    401735 <__sprintf_chk@plt+0x445>
  401521:	mov    rax,QWORD PTR [rbx+0x20]
  401525:	lea    rcx,[rip+0xa574]        # 40baa0 <__sprintf_chk@plt+0xa7b0>
  40152c:	mov    QWORD PTR [rax+0x98],rcx
  401533:	lea    rbp,[rip+0x1b386]        # 41c8c0 <__sprintf_chk@plt+0x1b5d0>
  40153a:	lea    rsi,[rip+0xc75f]        # 40dca0 <__sprintf_chk@plt+0xc9b0>
  401541:	nop    DWORD PTR [rax+0x0]
  401548:	xor    edx,edx
  40154a:	mov    rdi,rbx
  40154d:	add    rbp,0x10
  401551:	call   40b870 <__sprintf_chk@plt+0xa580>
  401556:	mov    rsi,QWORD PTR [rbp-0x10]
  40155a:	mov    rdi,rbx
  40155d:	call   40b220 <__sprintf_chk@plt+0x9f30>
  401562:	mov    rax,QWORD PTR [rbx+0x10]
  401566:	xor    edx,edx
  401568:	mov    rdi,rbx
  40156b:	lea    rsi,[rax-0x20]
  40156f:	call   403e50 <__sprintf_chk@plt+0x2b60>
  401574:	mov    rsi,QWORD PTR [rbp+0x8]
  401578:	test   rsi,rsi
  40157b:	jne    401548 <__sprintf_chk@plt+0x258>
  40157d:	lea    rdx,[rip+0x1b25c]        # 41c7e0 <__sprintf_chk@plt+0x1b4f0>
  401584:	lea    rsi,[rip+0x15911]        # 416e9c <__sprintf_chk@plt+0x15bac>
  40158b:	mov    rdi,rbx
  40158e:	call   40db40 <__sprintf_chk@plt+0xc850>
  401593:	cmp    r12d,0x1
  401597:	mov    eax,0x8
  40159c:	jg     4015bd <__sprintf_chk@plt+0x2cd>
  40159e:	mov    rcx,QWORD PTR [rsp+0x28]
  4015a3:	xor    rcx,QWORD PTR fs:0x28
  4015ac:	jne    40174b <__sprintf_chk@plt+0x45b>
  4015b2:	add    rsp,0x38
  4015b6:	pop    rbx
  4015b7:	pop    rbp
  4015b8:	pop    r12
  4015ba:	pop    r13
  4015bc:	ret    
  4015bd:	mov    esi,0x1
  4015c2:	mov    rdi,rbx
  4015c5:	call   40d7f0 <__sprintf_chk@plt+0xc500>
  4015ca:	mov    rsi,QWORD PTR [r13+0x8]
  4015ce:	mov    rdi,rbx
  4015d1:	call   40b220 <__sprintf_chk@plt+0x9f30>
  4015d6:	xor    edx,edx
  4015d8:	mov    esi,0xfffffffe
  4015dd:	mov    rdi,rbx
  4015e0:	call   407e60 <__sprintf_chk@plt+0x6b70>
  4015e5:	lea    rdx,[rip+0x15840]        # 416e2c <__sprintf_chk@plt+0x15b3c>
  4015ec:	mov    esi,0xffffd8ee
  4015f1:	mov    rdi,rbx
  4015f4:	call   408a60 <__sprintf_chk@plt+0x7770>
  4015f9:	mov    rsi,QWORD PTR [r13+0x8]
  4015fd:	mov    rdi,rbx
  401600:	call   40d300 <__sprintf_chk@plt+0xc010>
  401605:	test   eax,eax
  401607:	jne    40167a <__sprintf_chk@plt+0x38a>
  401609:	cmp    r12d,0x2
  40160d:	je     401635 <__sprintf_chk@plt+0x345>
  40160f:	lea    eax,[r12-0x3]
  401614:	lea    rbp,[r13+0x10]
  401618:	lea    r13,[r13+rax*8+0x18]
  40161d:	nop    DWORD PTR [rax]
  401620:	mov    rsi,QWORD PTR [rbp+0x0]
  401624:	mov    rdi,rbx
  401627:	add    rbp,0x8
  40162b:	call   40b220 <__sprintf_chk@plt+0x9f30>
  401630:	cmp    r13,rbp
  401633:	jne    401620 <__sprintf_chk@plt+0x330>
  401635:	lea    eax,[r12-0x2]
  40163a:	mov    rcx,0xfffffffffffffff0
  401641:	lea    rdx,[rsp+0x10]
  401646:	lea    rsi,[rip+0xd083]        # 40e6d0 <__sprintf_chk@plt+0xd3e0>
  40164d:	xor    r8d,r8d
  401650:	mov    rdi,rbx
  401653:	cdqe   
  401655:	mov    DWORD PTR [rsp+0x18],0x0
  40165d:	shl    rax,0x4
  401661:	sub    rcx,rax
  401664:	add    rcx,QWORD PTR [rbx+0x10]
  401668:	mov    QWORD PTR [rsp+0x10],rcx
  40166d:	sub    rcx,QWORD PTR [rbx+0x40]
  401671:	call   405d60 <__sprintf_chk@plt+0x4a70>
  401676:	test   eax,eax
  401678:	je     4016b1 <__sprintf_chk@plt+0x3c1>
  40167a:	xor    edx,edx
  40167c:	or     esi,0xffffffff
  40167f:	mov    rdi,rbx
  401682:	call   40ba10 <__sprintf_chk@plt+0xa720>
  401687:	mov    rcx,rax
  40168a:	mov    rax,QWORD PTR [rip+0x1b967]        # 41cff8 <__sprintf_chk@plt+0x1bd08>
  401691:	lea    rdx,[rip+0x15798]        # 416e30 <__sprintf_chk@plt+0x15b40>
  401698:	mov    esi,0x1
  40169d:	mov    rdi,QWORD PTR [rax]
  4016a0:	xor    eax,eax
  4016a2:	call   4012a0 <__fprintf_chk@plt>
  4016a7:	mov    eax,0x1
  4016ac:	jmp    40159e <__sprintf_chk@plt+0x2ae>
  4016b1:	mov    rax,QWORD PTR [rbx+0x20]
  4016b5:	lea    rbp,[rip+0xcac4]        # 40e180 <__sprintf_chk@plt+0xce90>
  4016bc:	mov    rbx,QWORD PTR [rax+0xb0]
  4016c3:	mov    rsi,QWORD PTR [rbx+0x40]
  4016c7:	mov    rdi,rbx
  4016ca:	call   403560 <__sprintf_chk@plt+0x2270>
  4016cf:	lea    rdi,[rbx+0x20]
  4016d3:	mov    esi,0x1
  4016d8:	call   402930 <__sprintf_chk@plt+0x1640>
  4016dd:	mov    QWORD PTR [rbx+0xb0],0x0
  4016e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4016f0:	mov    rax,QWORD PTR [rbx+0x50]
  4016f4:	xor    edx,edx
  4016f6:	mov    rsi,rbp
  4016f9:	mov    rdi,rbx
  4016fc:	mov    QWORD PTR [rbx+0x28],rax
  401700:	mov    rax,QWORD PTR [rax]
  401703:	mov    WORD PTR [rbx+0x60],dx
  401707:	xor    edx,edx
  401709:	mov    QWORD PTR [rbx+0x10],rax
  40170d:	mov    QWORD PTR [rbx+0x18],rax
  401711:	xor    eax,eax
  401713:	mov    WORD PTR [rbx+0x62],ax
  401717:	call   402150 <__sprintf_chk@plt+0xe60>
  40171c:	test   eax,eax
  40171e:	jne    4016f0 <__sprintf_chk@plt+0x400>
  401720:	mov    rdi,rbx
  401723:	mov    DWORD PTR [rsp+0xc],eax
  401727:	call   403960 <__sprintf_chk@plt+0x2670>
  40172c:	mov    eax,DWORD PTR [rsp+0xc]
  401730:	jmp    40159e <__sprintf_chk@plt+0x2ae>
  401735:	mov    rdi,rbx
  401738:	xor    ebx,ebx
  40173a:	call   403960 <__sprintf_chk@plt+0x2670>
  40173f:	jmp    401533 <__sprintf_chk@plt+0x243>
  401744:	xor    ebx,ebx
  401746:	jmp    401533 <__sprintf_chk@plt+0x243>
  40174b:	call   401100 <__stack_chk_fail@plt>
  401750:	endbr64 
  401754:	xor    ebp,ebp
  401756:	mov    r9,rdx
  401759:	pop    rsi
  40175a:	mov    rdx,rsp
  40175d:	and    rsp,0xfffffffffffffff0
  401761:	push   rax
  401762:	push   rsp
  401763:	mov    r8,0x4150a0
  40176a:	mov    rcx,0x415030
  401771:	mov    rdi,0x401300
  401778:	call   QWORD PTR [rip+0x1b86a]        # 41cfe8 <__sprintf_chk@plt+0x1bcf8>
  40177e:	hlt    
  40177f:	nop
  401780:	endbr64 
  401784:	ret    
  401785:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40178f:	nop
  401790:	mov    eax,0x41d197
  401795:	push   rbp
  401796:	sub    rax,0x41d190
  40179c:	cmp    rax,0xe
  4017a0:	mov    rbp,rsp
  4017a3:	jbe    4017c0 <__sprintf_chk@plt+0x4d0>
  4017a5:	mov    eax,0x0
  4017aa:	test   rax,rax
  4017ad:	je     4017c0 <__sprintf_chk@plt+0x4d0>
  4017af:	pop    rbp
  4017b0:	mov    edi,0x41d190
  4017b5:	jmp    rax
  4017b7:	nop    WORD PTR [rax+rax*1+0x0]
  4017c0:	pop    rbp
  4017c1:	ret    
  4017c2:	nop    DWORD PTR [rax+0x0]
  4017c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4017d0:	mov    esi,0x41d190
  4017d5:	push   rbp
  4017d6:	sub    rsi,0x41d190
  4017dd:	sar    rsi,0x3
  4017e1:	mov    rbp,rsp
  4017e4:	mov    rax,rsi
  4017e7:	shr    rax,0x3f
  4017eb:	add    rsi,rax
  4017ee:	sar    rsi,1
  4017f1:	je     401808 <__sprintf_chk@plt+0x518>
  4017f3:	mov    eax,0x0
  4017f8:	test   rax,rax
  4017fb:	je     401808 <__sprintf_chk@plt+0x518>
  4017fd:	pop    rbp
  4017fe:	mov    edi,0x41d190
  401803:	jmp    rax
  401805:	nop    DWORD PTR [rax]
  401808:	pop    rbp
  401809:	ret    
  40180a:	nop    WORD PTR [rax+rax*1+0x0]
  401810:	cmp    BYTE PTR [rip+0x1b979],0x0        # 41d190 <__sprintf_chk@plt+0x1bea0>
  401817:	jne    40182a <__sprintf_chk@plt+0x53a>
  401819:	push   rbp
  40181a:	mov    rbp,rsp
  40181d:	call   401790 <__sprintf_chk@plt+0x4a0>
  401822:	pop    rbp
  401823:	mov    BYTE PTR [rip+0x1b966],0x1        # 41d190 <__sprintf_chk@plt+0x1bea0>
  40182a:	repz ret 
  40182c:	nop    DWORD PTR [rax+0x0]
  401830:	mov    edi,0x41c738
  401835:	cmp    QWORD PTR [rdi],0x0
  401839:	jne    401840 <__sprintf_chk@plt+0x550>
  40183b:	jmp    4017d0 <__sprintf_chk@plt+0x4e0>
  40183d:	nop    DWORD PTR [rax]
  401840:	mov    eax,0x0
  401845:	test   rax,rax
  401848:	je     40183b <__sprintf_chk@plt+0x54b>
  40184a:	push   rbp
  40184b:	mov    rbp,rsp
  40184e:	call   rax
  401850:	pop    rbp
  401851:	jmp    4017d0 <__sprintf_chk@plt+0x4e0>
  401856:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401860:	mov    edx,DWORD PTR [rdi+0x8]
  401863:	xor    eax,eax
  401865:	cmp    edx,DWORD PTR [rsi+0x8]
  401868:	je     401870 <__sprintf_chk@plt+0x580>
  40186a:	repz ret 
  40186c:	nop    DWORD PTR [rax+0x0]
  401870:	cmp    edx,0x1
  401873:	je     4018b0 <__sprintf_chk@plt+0x5c0>
  401875:	jle    401898 <__sprintf_chk@plt+0x5a8>
  401877:	cmp    edx,0x2
  40187a:	je     4018a1 <__sprintf_chk@plt+0x5b1>
  40187c:	cmp    edx,0x3
  40187f:	jne    4018a1 <__sprintf_chk@plt+0x5b1>
  401881:	vmovsd xmm0,QWORD PTR [rdi]
  401885:	xor    edx,edx
  401887:	vucomisd xmm0,QWORD PTR [rsi]
  40188b:	setnp  dl
  40188e:	cmove  eax,edx
  401891:	ret    
  401892:	nop    WORD PTR [rax+rax*1+0x0]
  401898:	test   edx,edx
  40189a:	mov    eax,0x1
  40189f:	je     40186a <__sprintf_chk@plt+0x57a>
  4018a1:	mov    rax,QWORD PTR [rsi]
  4018a4:	cmp    QWORD PTR [rdi],rax
  4018a7:	sete   al
  4018aa:	movzx  eax,al
  4018ad:	ret    
  4018ae:	xchg   ax,ax
  4018b0:	mov    eax,DWORD PTR [rsi]
  4018b2:	cmp    DWORD PTR [rdi],eax
  4018b4:	sete   al
  4018b7:	movzx  eax,al
  4018ba:	ret    
  4018bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4018c0:	movzx  ecx,BYTE PTR [rdi+0xb]
  4018c4:	mov    eax,0x1
  4018c9:	shlx   rax,rax,rcx
  4018ce:	sub    eax,0x1
  4018d1:	and    eax,DWORD PTR [rdx+0xc]
  4018d4:	cdqe   
  4018d6:	lea    rcx,[rax+rax*4]
  4018da:	mov    rax,QWORD PTR [rdi+0x20]
  4018de:	lea    rax,[rax+rcx*8]
  4018e2:	jmp    4018f1 <__sprintf_chk@plt+0x601>
  4018e4:	nop    DWORD PTR [rax+0x0]
  4018e8:	mov    rax,QWORD PTR [rax+0x20]
  4018ec:	test   rax,rax
  4018ef:	je     401910 <__sprintf_chk@plt+0x620>
  4018f1:	cmp    DWORD PTR [rax+0x18],0x4
  4018f5:	jne    4018e8 <__sprintf_chk@plt+0x5f8>
  4018f7:	cmp    rdx,QWORD PTR [rax+0x10]
  4018fb:	jne    4018e8 <__sprintf_chk@plt+0x5f8>
  4018fd:	mov    edx,DWORD PTR [rax+0x8]
  401900:	test   edx,edx
  401902:	je     401910 <__sprintf_chk@plt+0x620>
  401904:	repz ret 
  401906:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401910:	mov    eax,0x1
  401915:	shlx   esi,eax,esi
  40191a:	xor    eax,eax
  40191c:	or     BYTE PTR [rdi+0xa],sil
  401920:	ret    
  401921:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40192c:	nop    DWORD PTR [rax+0x0]
  401930:	mov    rcx,QWORD PTR [rdi+0x28]
  401934:	lea    rax,[rcx-0x28]
  401938:	mov    rdx,QWORD PTR [rcx+0x8]
  40193c:	mov    r8,QWORD PTR [rcx-0x28]
  401940:	mov    QWORD PTR [rdi+0x28],rax
  401944:	mov    eax,DWORD PTR [rcx+0x20]
  401947:	mov    rcx,QWORD PTR [rcx-0x10]
  40194b:	mov    QWORD PTR [rdi+0x18],r8
  40194f:	test   eax,eax
  401951:	mov    QWORD PTR [rdi+0x30],rcx
  401955:	je     4019bb <__sprintf_chk@plt+0x6cb>
  401957:	mov    r9,QWORD PTR [rdi+0x10]
  40195b:	mov    ecx,eax
  40195d:	jmp    40197d <__sprintf_chk@plt+0x68d>
  40195f:	nop
  401960:	add    rsi,0x10
  401964:	mov    r8,QWORD PTR [rsi-0x10]
  401968:	add    rdx,0x10
  40196c:	sub    ecx,0x1
  40196f:	mov    QWORD PTR [rdx-0x10],r8
  401973:	mov    r8d,DWORD PTR [rsi-0x8]
  401977:	mov    DWORD PTR [rdx-0x8],r8d
  40197b:	je     4019bb <__sprintf_chk@plt+0x6cb>
  40197d:	cmp    rsi,r9
  401980:	jb     401960 <__sprintf_chk@plt+0x670>
  401982:	test   ecx,ecx
  401984:	lea    r8d,[rcx-0x1]
  401988:	jle    4019bb <__sprintf_chk@plt+0x6cb>
  40198a:	lea    rsi,[r8+0x1]
  40198e:	mov    rcx,rdx
  401991:	shl    rsi,0x4
  401995:	add    rsi,rdx
  401998:	nop    DWORD PTR [rax+rax*1+0x0]
  4019a0:	add    rcx,0x10
  4019a4:	mov    DWORD PTR [rcx-0x8],0x0
  4019ab:	cmp    rcx,rsi
  4019ae:	jne    4019a0 <__sprintf_chk@plt+0x6b0>
  4019b0:	add    r8,0x1
  4019b4:	shl    r8,0x4
  4019b8:	add    rdx,r8
  4019bb:	mov    QWORD PTR [rdi+0x10],rdx
  4019bf:	add    eax,0x1
  4019c2:	ret    
  4019c3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4019ce:	xchg   ax,ax
  4019d0:	xor    eax,eax
  4019d2:	cmp    DWORD PTR [rdi+0x8],0x3
  4019d6:	je     4019e0 <__sprintf_chk@plt+0x6f0>
  4019d8:	repz ret 
  4019da:	nop    WORD PTR [rax+rax*1+0x0]
  4019e0:	vmovsd xmm0,QWORD PTR [rdi]
  4019e4:	vxorpd xmm1,xmm1,xmm1
  4019e8:	vcvttsd2si edx,xmm0
  4019ec:	vcvtsi2sd xmm1,xmm1,edx
  4019f0:	vucomisd xmm0,xmm1
  4019f4:	jp     401a40 <__sprintf_chk@plt+0x750>
  4019f6:	jne    401a40 <__sprintf_chk@plt+0x750>
  4019f8:	sub    edx,0x1
  4019fb:	cmp    edx,0x3fffffff
  401a01:	ja     4019d8 <__sprintf_chk@plt+0x6e8>
  401a03:	mov    eax,edx
  401a05:	mov    edx,0xffffffff
  401a0a:	cmp    eax,0xff
  401a0f:	jle    401a25 <__sprintf_chk@plt+0x735>
  401a11:	nop    DWORD PTR [rax+0x0]
  401a18:	shr    eax,0x8
  401a1b:	add    edx,0x8
  401a1e:	cmp    eax,0xff
  401a23:	ja     401a18 <__sprintf_chk@plt+0x728>
  401a25:	lea    rcx,[rip+0x14b14]        # 416540 <__sprintf_chk@plt+0x15250>
  401a2c:	movzx  eax,BYTE PTR [rcx+rax*1]
  401a30:	add    edx,eax
  401a32:	mov    eax,0x1
  401a37:	movsxd rdx,edx
  401a3a:	add    DWORD PTR [rsi+rdx*4+0x4],0x1
  401a3f:	ret    
  401a40:	xor    eax,eax
  401a42:	ret    
  401a43:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  401a4e:	xchg   ax,ax
  401a50:	push   r12
  401a52:	push   rbp
  401a53:	lea    rbp,[rip+0x145c6]        # 416020 <__sprintf_chk@plt+0x14d30>
  401a5a:	push   rbx
  401a5b:	movzx  eax,BYTE PTR [rsi+0x9]
  401a5f:	mov    r12,rdi
  401a62:	mov    rbx,rsi
  401a65:	and    eax,0xfffffffc
  401a68:	mov    edx,eax
  401a6a:	mov    BYTE PTR [rbx+0x9],al
  401a6d:	movzx  eax,BYTE PTR [rbx+0x8]
  401a71:	sub    eax,0x5
  401a74:	cmp    al,0x5
  401a76:	ja     401a96 <__sprintf_chk@plt+0x7a6>
  401a78:	movzx  eax,al
  401a7b:	movsxd rax,DWORD PTR [rbp+rax*4+0x0]
  401a80:	add    rax,rbp
  401a83:	jmp    rax
  401a85:	nop    DWORD PTR [rax]
  401a88:	mov    rax,QWORD PTR [r12+0x38]
  401a8d:	mov    QWORD PTR [rbx+0x68],rax
  401a91:	mov    QWORD PTR [r12+0x38],rbx
  401a96:	pop    rbx
  401a97:	pop    rbp
  401a98:	pop    r12
  401a9a:	ret    
  401a9b:	nop    DWORD PTR [rax+rax*1+0x0]
  401aa0:	mov    rax,QWORD PTR [r12+0x38]
  401aa5:	mov    QWORD PTR [rbx+0xa0],rax
  401aac:	mov    QWORD PTR [r12+0x38],rbx
  401ab1:	pop    rbx
  401ab2:	pop    rbp
  401ab3:	pop    r12
  401ab5:	ret    
  401ab6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401ac0:	mov    rax,QWORD PTR [rbx+0x10]
  401ac4:	cmp    DWORD PTR [rax+0x8],0x3
  401ac8:	jle    401ad7 <__sprintf_chk@plt+0x7e7>
  401aca:	mov    rsi,QWORD PTR [rax]
  401acd:	test   BYTE PTR [rsi+0x9],0x3
  401ad1:	jne    401b60 <__sprintf_chk@plt+0x870>
  401ad7:	lea    rdx,[rbx+0x18]
  401adb:	cmp    rax,rdx
  401ade:	jne    401a96 <__sprintf_chk@plt+0x7a6>
  401ae0:	or     BYTE PTR [rbx+0x9],0x4
  401ae4:	jmp    401a96 <__sprintf_chk@plt+0x7a6>
  401ae6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401af0:	mov    rax,QWORD PTR [r12+0x38]
  401af5:	mov    QWORD PTR [rbx+0x30],rax
  401af9:	mov    QWORD PTR [r12+0x38],rbx
  401afe:	pop    rbx
  401aff:	pop    rbp
  401b00:	pop    r12
  401b02:	ret    
  401b03:	nop    DWORD PTR [rax+rax*1+0x0]
  401b08:	mov    rax,QWORD PTR [r12+0x38]
  401b0d:	mov    QWORD PTR [rbx+0x10],rax
  401b11:	mov    QWORD PTR [r12+0x38],rbx
  401b16:	pop    rbx
  401b17:	pop    rbp
  401b18:	pop    r12
  401b1a:	ret    
  401b1b:	nop    DWORD PTR [rax+rax*1+0x0]
  401b20:	mov    rsi,QWORD PTR [rbx+0x10]
  401b24:	mov    eax,edx
  401b26:	or     eax,0x4
  401b29:	mov    BYTE PTR [rbx+0x9],al
  401b2c:	test   rsi,rsi
  401b2f:	je     401b37 <__sprintf_chk@plt+0x847>
  401b31:	test   BYTE PTR [rsi+0x9],0x3
  401b35:	jne    401b50 <__sprintf_chk@plt+0x860>
  401b37:	mov    rbx,QWORD PTR [rbx+0x18]
  401b3b:	movzx  eax,BYTE PTR [rbx+0x9]
  401b3f:	test   al,0x3
  401b41:	jne    401a65 <__sprintf_chk@plt+0x775>
  401b47:	jmp    401a96 <__sprintf_chk@plt+0x7a6>
  401b4c:	nop    DWORD PTR [rax+0x0]
  401b50:	mov    rdi,r12
  401b53:	call   401a50 <__sprintf_chk@plt+0x760>
  401b58:	jmp    401b37 <__sprintf_chk@plt+0x847>
  401b5a:	nop    WORD PTR [rax+rax*1+0x0]
  401b60:	mov    rdi,r12
  401b63:	call   401a50 <__sprintf_chk@plt+0x760>
  401b68:	mov    rax,QWORD PTR [rbx+0x10]
  401b6c:	jmp    401ad7 <__sprintf_chk@plt+0x7e7>
  401b71:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  401b7c:	nop    DWORD PTR [rax+0x0]
  401b80:	mov    r9,rdi
  401b83:	lea    rcx,[rdi+0xe0]
  401b8a:	lea    r8,[rdi+0x128]
  401b91:	jmp    401ba1 <__sprintf_chk@plt+0x8b1>
  401b93:	nop    DWORD PTR [rax+rax*1+0x0]
  401b98:	add    rcx,0x8
  401b9c:	cmp    rcx,r8
  401b9f:	je     401be0 <__sprintf_chk@plt+0x8f0>
  401ba1:	mov    rsi,QWORD PTR [rcx]
  401ba4:	test   rsi,rsi
  401ba7:	je     401b98 <__sprintf_chk@plt+0x8a8>
  401ba9:	test   BYTE PTR [rsi+0x9],0x3
  401bad:	je     401b98 <__sprintf_chk@plt+0x8a8>
  401baf:	sub    rsp,0x8
  401bb3:	mov    rdi,r9
  401bb6:	call   401a50 <__sprintf_chk@plt+0x760>
  401bbb:	add    rcx,0x8
  401bbf:	cmp    rcx,r8
  401bc2:	je     401bdb <__sprintf_chk@plt+0x8eb>
  401bc4:	mov    rsi,QWORD PTR [rcx]
  401bc7:	test   rsi,rsi
  401bca:	je     401bbb <__sprintf_chk@plt+0x8cb>
  401bcc:	test   BYTE PTR [rsi+0x9],0x3
  401bd0:	jne    401bb3 <__sprintf_chk@plt+0x8c3>
  401bd2:	add    rcx,0x8
  401bd6:	cmp    rcx,r8
  401bd9:	jne    401bc4 <__sprintf_chk@plt+0x8d4>
  401bdb:	add    rsp,0x8
  401bdf:	ret    
  401be0:	ret    
  401be1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  401bec:	nop    DWORD PTR [rax+0x0]
  401bf0:	mov    rax,QWORD PTR [rsi+0x8]
  401bf4:	cmp    DWORD PTR [rax+0x8],0x6
  401bf8:	je     401c00 <__sprintf_chk@plt+0x910>
  401bfa:	mov    eax,0xffffffff
  401bff:	ret    
  401c00:	mov    rdx,QWORD PTR [rax]
  401c03:	cmp    BYTE PTR [rdx+0xa],0x0
  401c07:	jne    401bfa <__sprintf_chk@plt+0x90a>
  401c09:	cmp    rsi,QWORD PTR [rdi+0x28]
  401c0d:	je     401c40 <__sprintf_chk@plt+0x950>
  401c0f:	mov    rax,QWORD PTR [rsi+0x18]
  401c13:	mov    rdx,QWORD PTR [rdx+0x20]
  401c17:	sub    rax,QWORD PTR [rdx+0x18]
  401c1b:	sar    rax,0x2
  401c1f:	sub    eax,0x1
  401c22:	js     401bfa <__sprintf_chk@plt+0x90a>
  401c24:	mov    rdx,QWORD PTR [rdx+0x28]
  401c28:	test   rdx,rdx
  401c2b:	je     401c38 <__sprintf_chk@plt+0x948>
  401c2d:	cdqe   
  401c2f:	mov    eax,DWORD PTR [rdx+rax*4]
  401c32:	ret    
  401c33:	nop    DWORD PTR [rax+rax*1+0x0]
  401c38:	xor    eax,eax
  401c3a:	ret    
  401c3b:	nop    DWORD PTR [rax+rax*1+0x0]
  401c40:	mov    rax,QWORD PTR [rdi+0x30]
  401c44:	mov    QWORD PTR [rsi+0x18],rax
  401c48:	jmp    401c13 <__sprintf_chk@plt+0x923>
  401c4a:	nop    WORD PTR [rax+rax*1+0x0]
  401c50:	push   rbx
  401c51:	mov    rbx,rdi
  401c54:	sub    rsp,0x10
  401c58:	mov    rsi,QWORD PTR [rdi+0x18]
  401c5c:	mov    rdi,QWORD PTR [rdi+0x20]
  401c60:	mov    rax,QWORD PTR fs:0x28
  401c69:	mov    QWORD PTR [rsp+0x8],rax
  401c6e:	xor    eax,eax
  401c70:	mov    rdx,rsp
  401c73:	call   QWORD PTR [rbx+0x10]
  401c76:	test   rax,rax
  401c79:	je     401cb0 <__sprintf_chk@plt+0x9c0>
  401c7b:	mov    rdx,QWORD PTR [rsp]
  401c7f:	test   rdx,rdx
  401c82:	je     401cb0 <__sprintf_chk@plt+0x9c0>
  401c84:	sub    rdx,0x1
  401c88:	mov    QWORD PTR [rbx],rdx
  401c8b:	lea    rdx,[rax+0x1]
  401c8f:	mov    QWORD PTR [rbx+0x8],rdx
  401c93:	movzx  eax,BYTE PTR [rax]
  401c96:	mov    rcx,QWORD PTR [rsp+0x8]
  401c9b:	xor    rcx,QWORD PTR fs:0x28
  401ca4:	jne    401cb7 <__sprintf_chk@plt+0x9c7>
  401ca6:	add    rsp,0x10
  401caa:	pop    rbx
  401cab:	ret    
  401cac:	nop    DWORD PTR [rax+0x0]
  401cb0:	mov    eax,0xffffffff
  401cb5:	jmp    401c96 <__sprintf_chk@plt+0x9a6>
  401cb7:	call   401100 <__stack_chk_fail@plt>
  401cbc:	nop    DWORD PTR [rax+0x0]
  401cc0:	cmp    esi,0xffffffff
  401cc3:	je     401d0d <__sprintf_chk@plt+0xa1d>
  401cc5:	mov    rax,QWORD PTR [rdi]
  401cc8:	lea    r8,[rip+0x149d1]        # 4166a0 <__sprintf_chk@plt+0x153b0>
  401ccf:	mov    rdi,QWORD PTR [rax+0x18]
  401cd3:	movsxd rax,esi
  401cd6:	test   esi,esi
  401cd8:	lea    rax,[rdi+rax*4]
  401cdc:	mov    rdx,rax
  401cdf:	jle    401cf4 <__sprintf_chk@plt+0xa04>
  401ce1:	mov    ecx,DWORD PTR [rax-0x4]
  401ce4:	lea    rdx,[rax-0x4]
  401ce8:	and    ecx,0x3f
  401ceb:	cmp    BYTE PTR [r8+rcx*1],0x0
  401cf0:	cmovns rdx,rax
  401cf4:	mov    edx,DWORD PTR [rdx]
  401cf6:	and    edx,0x3f
  401cf9:	cmp    edx,0x1b
  401cfc:	jne    401d10 <__sprintf_chk@plt+0xa20>
  401cfe:	mov    eax,DWORD PTR [rax]
  401d00:	shr    eax,0xe
  401d03:	sub    eax,0x1ffff
  401d08:	cmp    eax,0xffffffff
  401d0b:	jne    401d20 <__sprintf_chk@plt+0xa30>
  401d0d:	xor    eax,eax
  401d0f:	ret    
  401d10:	mov    eax,0x1
  401d15:	ret    
  401d16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401d20:	lea    esi,[rax+rsi*1+0x1]
  401d24:	cmp    esi,0xffffffff
  401d27:	jne    401cd3 <__sprintf_chk@plt+0x9e3>
  401d29:	jmp    401d0d <__sprintf_chk@plt+0xa1d>
  401d2b:	nop    DWORD PTR [rax+rax*1+0x0]
  401d30:	mov    rax,QWORD PTR [rdi]
  401d33:	movsxd rcx,esi
  401d36:	test   esi,esi
  401d38:	mov    rax,QWORD PTR [rax+0x18]
  401d3c:	lea    rcx,[rax+rcx*4]
  401d40:	jle    401d5b <__sprintf_chk@plt+0xa6b>
  401d42:	mov    eax,DWORD PTR [rcx-0x4]
  401d45:	lea    rdi,[rip+0x14954]        # 4166a0 <__sprintf_chk@plt+0x153b0>
  401d4c:	lea    rsi,[rcx-0x4]
  401d50:	and    eax,0x3f
  401d53:	cmp    BYTE PTR [rdi+rax*1],0x0
  401d57:	cmovs  rcx,rsi
  401d5b:	mov    esi,DWORD PTR [rcx]
  401d5d:	xor    eax,eax
  401d5f:	mov    edi,esi
  401d61:	and    edi,0x3f
  401d64:	cmp    edi,0x1b
  401d67:	je     401d70 <__sprintf_chk@plt+0xa80>
  401d69:	repz ret 
  401d6b:	nop    DWORD PTR [rax+rax*1+0x0]
  401d70:	mov    eax,esi
  401d72:	shr    eax,0x17
  401d75:	cmp    edx,0xff
  401d7b:	je     401da0 <__sprintf_chk@plt+0xab0>
  401d7d:	cmp    edx,eax
  401d7f:	je     401da0 <__sprintf_chk@plt+0xab0>
  401d81:	shl    edx,0x6
  401d84:	and    esi,0xffffc03f
  401d8a:	mov    eax,0x1
  401d8f:	and    edx,0x3fc0
  401d95:	or     esi,edx
  401d97:	mov    DWORD PTR [rcx],esi
  401d99:	ret    
  401d9a:	nop    WORD PTR [rax+rax*1+0x0]
  401da0:	and    esi,0x7fc000
  401da6:	shl    eax,0x6
  401da9:	or     esi,0x1a
  401dac:	or     esi,eax
  401dae:	mov    eax,0x1
  401db3:	mov    DWORD PTR [rcx],esi
  401db5:	ret    
  401db6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401dc0:	cmp    esi,0xffffffff
  401dc3:	mov    r9,rdi
  401dc6:	mov    r8d,esi
  401dc9:	je     401e05 <__sprintf_chk@plt+0xb15>
  401dcb:	nop    DWORD PTR [rax+rax*1+0x0]
  401dd0:	mov    edx,0xff
  401dd5:	mov    esi,r8d
  401dd8:	mov    rdi,r9
  401ddb:	call   401d30 <__sprintf_chk@plt+0xa40>
  401de0:	mov    rdx,QWORD PTR [r9]
  401de3:	movsxd rax,r8d
  401de6:	mov    rdx,QWORD PTR [rdx+0x18]
  401dea:	mov    eax,DWORD PTR [rdx+rax*4]
  401ded:	shr    eax,0xe
  401df0:	sub    eax,0x1ffff
  401df5:	cmp    eax,0xffffffff
  401df8:	je     401e05 <__sprintf_chk@plt+0xb15>
  401dfa:	lea    r8d,[rax+r8*1+0x1]
  401dff:	cmp    r8d,0xffffffff
  401e03:	jne    401dd0 <__sprintf_chk@plt+0xae0>
  401e05:	repz ret 
  401e07:	nop    WORD PTR [rax+rax*1+0x0]
  401e10:	mov    rax,QWORD PTR [rsi+0x8]
  401e14:	test   rax,rax
  401e17:	je     401e30 <__sprintf_chk@plt+0xb40>
  401e19:	mov    QWORD PTR [rdx],rax
  401e1c:	mov    QWORD PTR [rsi+0x8],0x0
  401e24:	mov    rax,QWORD PTR [rsi]
  401e27:	ret    
  401e28:	nop    DWORD PTR [rax+rax*1+0x0]
  401e30:	xor    eax,eax
  401e32:	ret    
  401e33:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  401e3e:	xchg   ax,ax
  401e40:	push   r14
  401e42:	push   r13
  401e44:	mov    r13,rsi
  401e47:	push   r12
  401e49:	push   rbp
  401e4a:	mov    r12,rdi
  401e4d:	push   rbx
  401e4e:	sub    rsp,0x10
  401e52:	mov    rsi,rsp
  401e55:	mov    rax,QWORD PTR fs:0x28
  401e5e:	mov    QWORD PTR [rsp+0x8],rax
  401e63:	xor    eax,eax
  401e65:	call   4010c0 <strtod@plt>
  401e6a:	mov    rbx,QWORD PTR [rsp]
  401e6e:	vmovsd QWORD PTR [r13+0x0],xmm0
  401e74:	cmp    r12,rbx
  401e77:	je     401f20 <__sprintf_chk@plt+0xc30>
  401e7d:	movzx  ebp,BYTE PTR [rbx]
  401e80:	mov    eax,ebp
  401e82:	and    eax,0xffffffdf
  401e85:	cmp    al,0x58
  401e87:	je     401ee8 <__sprintf_chk@plt+0xbf8>
  401e89:	test   bpl,bpl
  401e8c:	mov    eax,0x1
  401e91:	je     401ec7 <__sprintf_chk@plt+0xbd7>
  401e93:	call   4012e0 <__ctype_b_loc@plt>
  401e98:	mov    rcx,QWORD PTR [rax]
  401e9b:	lea    rax,[rbx+0x1]
  401e9f:	jmp    401eb4 <__sprintf_chk@plt+0xbc4>
  401ea1:	nop    DWORD PTR [rax+0x0]
  401ea8:	mov    QWORD PTR [rsp],rax
  401eac:	add    rax,0x1
  401eb0:	movzx  ebp,BYTE PTR [rax-0x1]
  401eb4:	movzx  edx,bpl
  401eb8:	test   BYTE PTR [rcx+rdx*2+0x1],0x20
  401ebd:	jne    401ea8 <__sprintf_chk@plt+0xbb8>
  401ebf:	xor    eax,eax
  401ec1:	test   bpl,bpl
  401ec4:	sete   al
  401ec7:	mov    rsi,QWORD PTR [rsp+0x8]
  401ecc:	xor    rsi,QWORD PTR fs:0x28
  401ed5:	jne    401f3f <__sprintf_chk@plt+0xc4f>
  401ed7:	add    rsp,0x10
  401edb:	pop    rbx
  401edc:	pop    rbp
  401edd:	pop    r12
  401edf:	pop    r13
  401ee1:	pop    r14
  401ee3:	ret    
  401ee4:	nop    DWORD PTR [rax+0x0]
  401ee8:	mov    edx,0x10
  401eed:	mov    rsi,rsp
  401ef0:	mov    rdi,r12
  401ef3:	call   401250 <strtoul@plt>
  401ef8:	test   rax,rax
  401efb:	js     401f24 <__sprintf_chk@plt+0xc34>
  401efd:	vxorpd xmm0,xmm0,xmm0
  401f01:	vcvtsi2sd xmm0,xmm0,rax
  401f06:	mov    rbx,QWORD PTR [rsp]
  401f0a:	vmovsd QWORD PTR [r13+0x0],xmm0
  401f10:	movzx  ebp,BYTE PTR [rbx]
  401f13:	jmp    401e89 <__sprintf_chk@plt+0xb99>
  401f18:	nop    DWORD PTR [rax+rax*1+0x0]
  401f20:	xor    eax,eax
  401f22:	jmp    401ec7 <__sprintf_chk@plt+0xbd7>
  401f24:	mov    rdx,rax
  401f27:	vxorpd xmm0,xmm0,xmm0
  401f2b:	shr    rdx,1
  401f2e:	and    eax,0x1
  401f31:	or     rdx,rax
  401f34:	vcvtsi2sd xmm0,xmm0,rdx
  401f39:	vaddsd xmm0,xmm0,xmm0
  401f3d:	jmp    401f06 <__sprintf_chk@plt+0xc16>
  401f3f:	call   401100 <__stack_chk_fail@plt>
  401f44:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  401f4f:	nop
  401f50:	mov    rdx,rdi
  401f53:	mov    ecx,DWORD PTR [rdx]
  401f55:	add    rdx,0x4
  401f59:	lea    eax,[rcx-0x1010101]
  401f5f:	andn   eax,ecx,eax
  401f64:	and    eax,0x80808080
  401f69:	je     401f53 <__sprintf_chk@plt+0xc63>
  401f6b:	mov    ecx,eax
  401f6d:	shr    ecx,0x10
  401f70:	test   eax,0x8080
  401f75:	cmove  eax,ecx
  401f78:	lea    rcx,[rdx+0x2]
  401f7c:	mov    esi,eax
  401f7e:	cmove  rdx,rcx
  401f82:	add    sil,al
  401f85:	mov    esi,0x6c
  401f8a:	sbb    rdx,0x3
  401f8e:	sub    rdx,rdi
  401f91:	lea    rax,[rdi+rdx*1-0x1]
  401f96:	movzx  ecx,BYTE PTR [rax]
  401f99:	mov    WORD PTR [rax],si
  401f9c:	mov    BYTE PTR [rdi+rdx*1+0x1],0x0
  401fa1:	mov    BYTE PTR [rdi+rdx*1],cl
  401fa4:	ret    
  401fa5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  401fb0:	push   r12
  401fb2:	push   rbp
  401fb3:	mov    r12,rsi
  401fb6:	push   rbx
  401fb7:	movzx  eax,BYTE PTR [rsi]
  401fba:	mov    rbx,rdi
  401fbd:	mov    rbp,rdx
  401fc0:	cmp    al,0x3d
  401fc2:	je     402088 <__sprintf_chk@plt+0xd98>
  401fc8:	cmp    al,0x40
  401fca:	je     402050 <__sprintf_chk@plt+0xd60>
  401fd0:	lea    rsi,[rip+0x14709]        # 4166e0 <__sprintf_chk@plt+0x153f0>
  401fd7:	mov    rdi,r12
  401fda:	call   401140 <strcspn@plt>
  401fdf:	lea    rdx,[rbp-0x11]
  401fe3:	mov    ecx,0x22
  401fe8:	mov    WORD PTR [rbx+0x8],cx
  401fec:	cmp    rdx,rax
  401fef:	cmova  rdx,rax
  401ff3:	movabs rax,0x20676e697274735b
  401ffd:	mov    QWORD PTR [rbx],rax
  402000:	cmp    BYTE PTR [r12+rdx*1],0x0
  402005:	jne    402030 <__sprintf_chk@plt+0xd40>
  402007:	lea    rdi,[rbx+0x9]
  40200b:	mov    rsi,r12
  40200e:	call   401080 <strcpy@plt>
  402013:	mov    rdi,rbx
  402016:	call   4010f0 <strlen@plt>
  40201b:	add    rbx,rax
  40201e:	mov    eax,0x5d22
  402023:	mov    WORD PTR [rbx],ax
  402026:	mov    BYTE PTR [rbx+0x2],0x0
  40202a:	pop    rbx
  40202b:	pop    rbp
  40202c:	pop    r12
  40202e:	ret    
  40202f:	nop
  402030:	mov    rsi,r12
  402033:	mov    rdi,rbx
  402036:	call   401130 <strncat@plt>
  40203b:	mov    rdi,rbx
  40203e:	call   4010f0 <strlen@plt>
  402043:	mov    DWORD PTR [rbx+rax*1],0x2e2e2e
  40204a:	jmp    402013 <__sprintf_chk@plt+0xd23>
  40204c:	nop    DWORD PTR [rax+0x0]
  402050:	add    r12,0x1
  402054:	sub    rbp,0x8
  402058:	mov    rdi,r12
  40205b:	call   4010f0 <strlen@plt>
  402060:	cmp    rbp,rax
  402063:	mov    BYTE PTR [rbx],0x0
  402066:	jae    402074 <__sprintf_chk@plt+0xd84>
  402068:	sub    rax,rbp
  40206b:	mov    DWORD PTR [rbx],0x2e2e2e
  402071:	add    r12,rax
  402074:	mov    rsi,r12
  402077:	mov    rdi,rbx
  40207a:	pop    rbx
  40207b:	pop    rbp
  40207c:	pop    r12
  40207e:	jmp    401270 <strcat@plt>
  402083:	nop    DWORD PTR [rax+rax*1+0x0]
  402088:	lea    rsi,[rsi+0x1]
  40208c:	call   401060 <strncpy@plt>
  402091:	mov    BYTE PTR [rbx+rbp*1-0x1],0x0
  402096:	jmp    40202a <__sprintf_chk@plt+0xd3a>
  402098:	nop    DWORD PTR [rax+rax*1+0x0]
  4020a0:	push   r13
  4020a2:	push   r12
  4020a4:	push   rbp
  4020a5:	push   rbx
  4020a6:	lea    rbp,[rsi+0x18]
  4020aa:	lea    rbx,[rdi+0x18]
  4020ae:	sub    rsp,0x8
  4020b2:	mov    r13,QWORD PTR [rdi+0x10]
  4020b6:	mov    r12,QWORD PTR [rsi+0x10]
  4020ba:	jmp    4020e2 <__sprintf_chk@plt+0xdf2>
  4020bc:	nop    DWORD PTR [rax+0x0]
  4020c0:	mov    rdi,rbx
  4020c3:	call   4010f0 <strlen@plt>
  4020c8:	cmp    r12,rax
  4020cb:	je     402100 <__sprintf_chk@plt+0xe10>
  4020cd:	cmp    r13,rax
  4020d0:	je     402118 <__sprintf_chk@plt+0xe28>
  4020d2:	add    rax,0x1
  4020d6:	add    rbx,rax
  4020d9:	sub    r13,rax
  4020dc:	add    rbp,rax
  4020df:	sub    r12,rax
  4020e2:	mov    rsi,rbp
  4020e5:	mov    rdi,rbx
  4020e8:	call   4011f0 <strcoll@plt>
  4020ed:	test   eax,eax
  4020ef:	je     4020c0 <__sprintf_chk@plt+0xdd0>
  4020f1:	add    rsp,0x8
  4020f5:	pop    rbx
  4020f6:	pop    rbp
  4020f7:	pop    r12
  4020f9:	pop    r13
  4020fb:	ret    
  4020fc:	nop    DWORD PTR [rax+0x0]
  402100:	xor    eax,eax
  402102:	cmp    r13,r12
  402105:	setne  al
  402108:	add    rsp,0x8
  40210c:	pop    rbx
  40210d:	pop    rbp
  40210e:	pop    r12
  402110:	pop    r13
  402112:	ret    
  402113:	nop    DWORD PTR [rax+rax*1+0x0]
  402118:	add    rsp,0x8
  40211c:	mov    eax,0xffffffff
  402121:	pop    rbx
  402122:	pop    rbp
  402123:	pop    r12
  402125:	pop    r13
  402127:	ret    
  402128:	nop    DWORD PTR [rax+rax*1+0x0]
  402130:	test   rcx,rcx
  402133:	mov    rdi,rsi
  402136:	je     402140 <__sprintf_chk@plt+0xe50>
  402138:	mov    rsi,rcx
  40213b:	jmp    401220 <realloc@plt>
  402140:	sub    rsp,0x8
  402144:	call   401040 <free@plt>
  402149:	xor    eax,eax
  40214b:	add    rsp,0x8
  40214f:	ret    
  402150:	sub    rsp,0x108
  402157:	mov    rcx,rdi
  40215a:	mov    rax,QWORD PTR [rdi+0xa8]
  402161:	mov    QWORD PTR [rsp+0x8],rdi
  402166:	lea    rdi,[rsp+0x20]
  40216b:	mov    QWORD PTR [rsp+0x10],rsi
  402170:	mov    QWORD PTR [rsp+0x18],rdx
  402175:	mov    QWORD PTR [rcx+0xa8],rdi
  40217c:	lea    rdi,[rsp+0x28]
  402181:	mov    QWORD PTR [rsp+0x20],rax
  402186:	mov    rsi,QWORD PTR fs:0x28
  40218f:	mov    QWORD PTR [rsp+0xf8],rsi
  402197:	xor    esi,esi
  402199:	mov    DWORD PTR [rsp+0xf0],0x0
  4021a4:	call   401180 <_setjmp@plt>
  4021a9:	test   eax,eax
  4021ab:	jne    4021be <__sprintf_chk@plt+0xece>
  4021ad:	mov    rsi,QWORD PTR [rsp+0x18]
  4021b2:	mov    rdi,QWORD PTR [rsp+0x8]
  4021b7:	mov    rax,QWORD PTR [rsp+0x10]
  4021bc:	call   rax
  4021be:	mov    rax,QWORD PTR [rsp+0x20]
  4021c3:	mov    rdx,QWORD PTR [rsp+0x8]
  4021c8:	mov    QWORD PTR [rdx+0xa8],rax
  4021cf:	mov    eax,DWORD PTR [rsp+0xf0]
  4021d6:	mov    rsi,QWORD PTR [rsp+0xf8]
  4021de:	xor    rsi,QWORD PTR fs:0x28
  4021e7:	jne    4021f1 <__sprintf_chk@plt+0xf01>
  4021e9:	add    rsp,0x108
  4021f0:	ret    
  4021f1:	call   401100 <__stack_chk_fail@plt>
  4021f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402200:	push   rbp
  402201:	movsxd rbp,esi
  402204:	push   rbx
  402205:	lea    edx,[rbp+0x80]
  40220b:	movsxd rbx,edi
  40220e:	mov    eax,ebp
  402210:	sub    rsp,0x8
  402214:	cmp    edx,0x17f
  40221a:	ja     40222a <__sprintf_chk@plt+0xf3a>
  40221c:	call   4012d0 <__ctype_tolower_loc@plt>
  402221:	mov    rcx,QWORD PTR [rax]
  402224:	movsxd rdx,ebp
  402227:	mov    eax,DWORD PTR [rcx+rdx*4]
  40222a:	sub    eax,0x61
  40222d:	cmp    eax,0x19
  402230:	ja     402390 <__sprintf_chk@plt+0x10a0>
  402236:	lea    rdx,[rip+0x13dfb]        # 416038 <__sprintf_chk@plt+0x14d48>
  40223d:	movsxd rax,DWORD PTR [rdx+rax*4]
  402241:	add    rax,rdx
  402244:	jmp    rax
  402246:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402250:	test   ebx,ebx
  402252:	sete   bl
  402255:	call   4012e0 <__ctype_b_loc@plt>
  40225a:	mov    rax,QWORD PTR [rax]
  40225d:	movzx  ebx,bl
  402260:	test   BYTE PTR [rax+rbp*2+0x1],0x2
  402265:	jne    40226f <__sprintf_chk@plt+0xf7f>
  402267:	test   ebx,ebx
  402269:	sete   bl
  40226c:	movzx  ebx,bl
  40226f:	add    rsp,0x8
  402273:	mov    eax,ebx
  402275:	pop    rbx
  402276:	pop    rbp
  402277:	ret    
  402278:	nop    DWORD PTR [rax+rax*1+0x0]
  402280:	call   4012e0 <__ctype_b_loc@plt>
  402285:	mov    rax,QWORD PTR [rax]
  402288:	movzx  ebx,WORD PTR [rax+rbx*2]
  40228c:	and    bx,0x400
  402291:	movzx  ebx,bx
  402294:	jmp    402260 <__sprintf_chk@plt+0xf70>
  402296:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4022a0:	call   4012e0 <__ctype_b_loc@plt>
  4022a5:	mov    rax,QWORD PTR [rax]
  4022a8:	movzx  ebx,WORD PTR [rax+rbx*2]
  4022ac:	and    ebx,0x2
  4022af:	movzx  ebx,bx
  4022b2:	jmp    402260 <__sprintf_chk@plt+0xf70>
  4022b4:	nop    DWORD PTR [rax+0x0]
  4022b8:	call   4012e0 <__ctype_b_loc@plt>
  4022bd:	mov    rax,QWORD PTR [rax]
  4022c0:	movzx  ebx,WORD PTR [rax+rbx*2]
  4022c4:	and    bx,0x800
  4022c9:	movzx  ebx,bx
  4022cc:	jmp    402260 <__sprintf_chk@plt+0xf70>
  4022ce:	xchg   ax,ax
  4022d0:	call   4012e0 <__ctype_b_loc@plt>
  4022d5:	mov    rax,QWORD PTR [rax]
  4022d8:	movzx  ebx,WORD PTR [rax+rbx*2]
  4022dc:	and    bx,0x200
  4022e1:	movzx  ebx,bx
  4022e4:	jmp    402260 <__sprintf_chk@plt+0xf70>
  4022e9:	nop    DWORD PTR [rax+0x0]
  4022f0:	call   4012e0 <__ctype_b_loc@plt>
  4022f5:	mov    rax,QWORD PTR [rax]
  4022f8:	movzx  ebx,WORD PTR [rax+rbx*2]
  4022fc:	and    ebx,0x4
  4022ff:	movzx  ebx,bx
  402302:	jmp    402260 <__sprintf_chk@plt+0xf70>
  402307:	nop    WORD PTR [rax+rax*1+0x0]
  402310:	call   4012e0 <__ctype_b_loc@plt>
  402315:	mov    rax,QWORD PTR [rax]
  402318:	movzx  ebx,WORD PTR [rax+rbx*2]
  40231c:	and    bx,0x2000
  402321:	movzx  ebx,bx
  402324:	jmp    402260 <__sprintf_chk@plt+0xf70>
  402329:	nop    DWORD PTR [rax+0x0]
  402330:	call   4012e0 <__ctype_b_loc@plt>
  402335:	mov    rax,QWORD PTR [rax]
  402338:	movzx  ebx,WORD PTR [rax+rbx*2]
  40233c:	and    bx,0x100
  402341:	movzx  ebx,bx
  402344:	jmp    402260 <__sprintf_chk@plt+0xf70>
  402349:	nop    DWORD PTR [rax+0x0]
  402350:	call   4012e0 <__ctype_b_loc@plt>
  402355:	mov    rax,QWORD PTR [rax]
  402358:	movzx  ebx,WORD PTR [rax+rbx*2]
  40235c:	and    ebx,0x8
  40235f:	movzx  ebx,bx
  402362:	jmp    402260 <__sprintf_chk@plt+0xf70>
  402367:	nop    WORD PTR [rax+rax*1+0x0]
  402370:	call   4012e0 <__ctype_b_loc@plt>
  402375:	mov    rax,QWORD PTR [rax]
  402378:	movzx  ebx,WORD PTR [rax+rbx*2]
  40237c:	and    bx,0x1000
  402381:	movzx  ebx,bx
  402384:	jmp    402260 <__sprintf_chk@plt+0xf70>
  402389:	nop    DWORD PTR [rax+0x0]
  402390:	cmp    ebp,ebx
  402392:	sete   bl
  402395:	movzx  ebx,bl
  402398:	jmp    40226f <__sprintf_chk@plt+0xf7f>
  40239d:	nop    DWORD PTR [rax]
  4023a0:	push   r13
  4023a2:	push   r12
  4023a4:	mov    r13d,edi
  4023a7:	push   rbp
  4023a8:	push   rbx
  4023a9:	mov    r12,rdx
  4023ac:	mov    ebp,0x1
  4023b1:	sub    rsp,0x8
  4023b5:	cmp    BYTE PTR [rsi+0x1],0x5e
  4023b9:	jne    4023ce <__sprintf_chk@plt+0x10de>
  4023bb:	jmp    402430 <__sprintf_chk@plt+0x1140>
  4023bd:	nop    DWORD PTR [rax]
  4023c0:	cmp    BYTE PTR [rsi+0x2],0x2d
  4023c4:	je     402400 <__sprintf_chk@plt+0x1110>
  4023c6:	cmp    r13d,eax
  4023c9:	je     4023f3 <__sprintf_chk@plt+0x1103>
  4023cb:	mov    rsi,rbx
  4023ce:	lea    rbx,[rsi+0x1]
  4023d2:	cmp    rbx,r12
  4023d5:	jae    402420 <__sprintf_chk@plt+0x1130>
  4023d7:	movzx  eax,BYTE PTR [rsi+0x1]
  4023db:	cmp    al,0x25
  4023dd:	jne    4023c0 <__sprintf_chk@plt+0x10d0>
  4023df:	lea    rbx,[rsi+0x2]
  4023e3:	movzx  esi,BYTE PTR [rsi+0x2]
  4023e7:	mov    edi,r13d
  4023ea:	call   402200 <__sprintf_chk@plt+0xf10>
  4023ef:	test   eax,eax
  4023f1:	je     4023cb <__sprintf_chk@plt+0x10db>
  4023f3:	add    rsp,0x8
  4023f7:	mov    eax,ebp
  4023f9:	pop    rbx
  4023fa:	pop    rbp
  4023fb:	pop    r12
  4023fd:	pop    r13
  4023ff:	ret    
  402400:	lea    rdx,[rsi+0x3]
  402404:	cmp    r12,rdx
  402407:	jbe    4023c6 <__sprintf_chk@plt+0x10d6>
  402409:	cmp    eax,r13d
  40240c:	jg     402417 <__sprintf_chk@plt+0x1127>
  40240e:	movzx  eax,BYTE PTR [rsi+0x3]
  402412:	cmp    r13d,eax
  402415:	jle    4023f3 <__sprintf_chk@plt+0x1103>
  402417:	mov    rbx,rdx
  40241a:	jmp    4023cb <__sprintf_chk@plt+0x10db>
  40241c:	nop    DWORD PTR [rax+0x0]
  402420:	add    rsp,0x8
  402424:	xor    ebp,0x1
  402427:	pop    rbx
  402428:	mov    eax,ebp
  40242a:	pop    rbp
  40242b:	pop    r12
  40242d:	pop    r13
  40242f:	ret    
  402430:	add    rsi,0x1
  402434:	xor    ebp,ebp
  402436:	jmp    4023ce <__sprintf_chk@plt+0x10de>
  402438:	nop    DWORD PTR [rax+rax*1+0x0]
  402440:	sub    rsp,0x18
  402444:	vmovq  rdx,xmm0
  402449:	mov    ecx,0x1
  40244e:	mov    rax,QWORD PTR fs:0x28
  402457:	mov    QWORD PTR [rsp+0x8],rax
  40245c:	xor    eax,eax
  40245e:	vmovq  rax,xmm0
  402463:	shr    rdx,0x20
  402467:	add    eax,edx
  402469:	movzx  edx,BYTE PTR [rdi]
  40246c:	shlx   rcx,rcx,rdx
  402471:	xor    edx,edx
  402473:	sub    rcx,0x1
  402477:	or     rcx,0x1
  40247b:	div    rcx
  40247e:	mov    rax,QWORD PTR [rsi]
  402481:	mov    rsi,QWORD PTR [rsp+0x8]
  402486:	xor    rsi,QWORD PTR fs:0x28
  40248f:	lea    rdx,[rdx+rdx*4]
  402493:	lea    rax,[rax+rdx*8]
  402497:	jne    40249e <__sprintf_chk@plt+0x11ae>
  402499:	add    rsp,0x18
  40249d:	ret    
  40249e:	call   401100 <__stack_chk_fail@plt>
  4024a3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4024ae:	xchg   ax,ax
  4024b0:	mov    eax,DWORD PTR [rsi+0x8]
  4024b3:	cmp    eax,0x2
  4024b6:	je     402508 <__sprintf_chk@plt+0x1218>
  4024b8:	jle    402538 <__sprintf_chk@plt+0x1248>
  4024ba:	cmp    eax,0x3
  4024bd:	je     4024f0 <__sprintf_chk@plt+0x1200>
  4024bf:	cmp    eax,0x4
  4024c2:	jne    402508 <__sprintf_chk@plt+0x1218>
  4024c4:	movzx  edx,BYTE PTR [rdi+0xb]
  4024c8:	mov    eax,0x1
  4024cd:	shlx   rax,rax,rdx
  4024d2:	mov    rdx,QWORD PTR [rsi]
  4024d5:	sub    eax,0x1
  4024d8:	and    eax,DWORD PTR [rdx+0xc]
  4024db:	cdqe   
  4024dd:	lea    rdx,[rax+rax*4]
  4024e1:	mov    rax,QWORD PTR [rdi+0x20]
  4024e5:	lea    rax,[rax+rdx*8]
  4024e9:	ret    
  4024ea:	nop    WORD PTR [rax+rax*1+0x0]
  4024f0:	vmovsd xmm0,QWORD PTR [rsi]
  4024f4:	vucomisd xmm0,QWORD PTR [rip+0x14f64]        # 417460 <__sprintf_chk@plt+0x16170>
  4024fc:	jp     402560 <__sprintf_chk@plt+0x1270>
  4024fe:	jne    402560 <__sprintf_chk@plt+0x1270>
  402500:	mov    rax,QWORD PTR [rdi+0x20]
  402504:	ret    
  402505:	nop    DWORD PTR [rax]
  402508:	movzx  edx,BYTE PTR [rdi+0xb]
  40250c:	mov    eax,DWORD PTR [rsi]
  40250e:	mov    ecx,0x1
  402513:	shlx   rcx,rcx,rdx
  402518:	xor    edx,edx
  40251a:	sub    rcx,0x1
  40251e:	or     rcx,0x1
  402522:	div    rcx
  402525:	mov    rax,QWORD PTR [rdi+0x20]
  402529:	lea    rdx,[rdx+rdx*4]
  40252d:	lea    rax,[rax+rdx*8]
  402531:	ret    
  402532:	nop    WORD PTR [rax+rax*1+0x0]
  402538:	cmp    eax,0x1
  40253b:	jne    402508 <__sprintf_chk@plt+0x1218>
  40253d:	movzx  edx,BYTE PTR [rdi+0xb]
  402541:	mov    eax,0x1
  402546:	shlx   rax,rax,rdx
  40254b:	sub    eax,0x1
  40254e:	and    eax,DWORD PTR [rsi]
  402550:	cdqe   
  402552:	lea    rdx,[rax+rax*4]
  402556:	mov    rax,QWORD PTR [rdi+0x20]
  40255a:	lea    rax,[rax+rdx*8]
  40255e:	ret    
  40255f:	nop
  402560:	lea    rsi,[rdi+0x20]
  402564:	add    rdi,0xb
  402568:	jmp    402440 <__sprintf_chk@plt+0x1150>
  40256d:	nop    DWORD PTR [rax]
  402570:	vxorpd xmm1,xmm1,xmm1
  402574:	vcvtsi2sd xmm1,xmm1,esi
  402578:	vucomisd xmm1,QWORD PTR [rip+0x14ee0]        # 417460 <__sprintf_chk@plt+0x16170>
  402580:	jp     4025c0 <__sprintf_chk@plt+0x12d0>
  402582:	jne    4025c0 <__sprintf_chk@plt+0x12d0>
  402584:	mov    rax,QWORD PTR [rdi+0x20]
  402588:	jmp    402599 <__sprintf_chk@plt+0x12a9>
  40258a:	nop    WORD PTR [rax+rax*1+0x0]
  402590:	mov    rax,QWORD PTR [rax+0x20]
  402594:	test   rax,rax
  402597:	je     4025b0 <__sprintf_chk@plt+0x12c0>
  402599:	cmp    DWORD PTR [rax+0x18],0x3
  40259d:	jne    402590 <__sprintf_chk@plt+0x12a0>
  40259f:	vucomisd xmm1,QWORD PTR [rax+0x10]
  4025a4:	jp     402590 <__sprintf_chk@plt+0x12a0>
  4025a6:	jne    402590 <__sprintf_chk@plt+0x12a0>
  4025a8:	repz ret 
  4025aa:	nop    WORD PTR [rax+rax*1+0x0]
  4025b0:	lea    rax,[rip+0x14119]        # 4166d0 <__sprintf_chk@plt+0x153e0>
  4025b7:	ret    
  4025b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4025c0:	lea    rsi,[rdi+0x20]
  4025c4:	vmovapd xmm0,xmm1
  4025c8:	sub    rsp,0x18
  4025cc:	add    rdi,0xb
  4025d0:	vmovsd QWORD PTR [rsp+0x8],xmm1
  4025d6:	call   402440 <__sprintf_chk@plt+0x1150>
  4025db:	vmovsd xmm1,QWORD PTR [rsp+0x8]
  4025e1:	jmp    4025f1 <__sprintf_chk@plt+0x1301>
  4025e3:	nop    DWORD PTR [rax+rax*1+0x0]
  4025e8:	mov    rax,QWORD PTR [rax+0x20]
  4025ec:	test   rax,rax
  4025ef:	je     402606 <__sprintf_chk@plt+0x1316>
  4025f1:	cmp    DWORD PTR [rax+0x18],0x3
  4025f5:	jne    4025e8 <__sprintf_chk@plt+0x12f8>
  4025f7:	vucomisd xmm1,QWORD PTR [rax+0x10]
  4025fc:	jp     4025e8 <__sprintf_chk@plt+0x12f8>
  4025fe:	jne    4025e8 <__sprintf_chk@plt+0x12f8>
  402600:	add    rsp,0x18
  402604:	repz ret 
  402606:	lea    rax,[rip+0x140c3]        # 4166d0 <__sprintf_chk@plt+0x153e0>
  40260d:	add    rsp,0x18
  402611:	jmp    402604 <__sprintf_chk@plt+0x1314>
  402613:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40261e:	xchg   ax,ax
  402620:	mov    edx,DWORD PTR [rsi+0x8]
  402623:	cmp    edx,0x3
  402626:	je     4026d0 <__sprintf_chk@plt+0x13e0>
  40262c:	cmp    edx,0x4
  40262f:	je     402678 <__sprintf_chk@plt+0x1388>
  402631:	test   edx,edx
  402633:	lea    rax,[rip+0x14096]        # 4166d0 <__sprintf_chk@plt+0x153e0>
  40263a:	je     402710 <__sprintf_chk@plt+0x1420>
  402640:	push   rbx
  402641:	mov    rbx,rsi
  402644:	call   4024b0 <__sprintf_chk@plt+0x11c0>
  402649:	mov    rcx,rax
  40264c:	jmp    40265d <__sprintf_chk@plt+0x136d>
  40264e:	xchg   ax,ax
  402650:	mov    rcx,QWORD PTR [rcx+0x20]
  402654:	test   rcx,rcx
  402657:	je     402718 <__sprintf_chk@plt+0x1428>
  40265d:	lea    rdi,[rcx+0x10]
  402661:	mov    rsi,rbx
  402664:	call   401860 <__sprintf_chk@plt+0x570>
  402669:	test   eax,eax
  40266b:	je     402650 <__sprintf_chk@plt+0x1360>
  40266d:	pop    rbx
  40266e:	mov    rax,rcx
  402671:	repz ret 
  402673:	nop    DWORD PTR [rax+rax*1+0x0]
  402678:	movzx  ecx,BYTE PTR [rdi+0xb]
  40267c:	mov    rdx,QWORD PTR [rsi]
  40267f:	mov    eax,0x1
  402684:	shlx   rax,rax,rcx
  402689:	sub    eax,0x1
  40268c:	and    eax,DWORD PTR [rdx+0xc]
  40268f:	cdqe   
  402691:	lea    rcx,[rax+rax*4]
  402695:	mov    rax,QWORD PTR [rdi+0x20]
  402699:	lea    rax,[rax+rcx*8]
  40269d:	jmp    4026a9 <__sprintf_chk@plt+0x13b9>
  40269f:	nop
  4026a0:	mov    rax,QWORD PTR [rax+0x20]
  4026a4:	test   rax,rax
  4026a7:	je     4026be <__sprintf_chk@plt+0x13ce>
  4026a9:	cmp    DWORD PTR [rax+0x18],0x4
  4026ad:	jne    4026a0 <__sprintf_chk@plt+0x13b0>
  4026af:	cmp    rdx,QWORD PTR [rax+0x10]
  4026b3:	je     402671 <__sprintf_chk@plt+0x1381>
  4026b5:	mov    rax,QWORD PTR [rax+0x20]
  4026b9:	test   rax,rax
  4026bc:	jne    4026a9 <__sprintf_chk@plt+0x13b9>
  4026be:	lea    rax,[rip+0x1400b]        # 4166d0 <__sprintf_chk@plt+0x153e0>
  4026c5:	ret    
  4026c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4026d0:	vmovsd xmm0,QWORD PTR [rsi]
  4026d4:	vxorpd xmm1,xmm1,xmm1
  4026d8:	vcvttsd2si eax,xmm0
  4026dc:	vcvtsi2sd xmm1,xmm1,eax
  4026e0:	vucomisd xmm0,xmm1
  4026e4:	jp     402640 <__sprintf_chk@plt+0x1350>
  4026ea:	jne    402640 <__sprintf_chk@plt+0x1350>
  4026f0:	lea    edx,[rax-0x1]
  4026f3:	cmp    edx,DWORD PTR [rdi+0x38]
  4026f6:	jae    402725 <__sprintf_chk@plt+0x1435>
  4026f8:	mov    rdx,QWORD PTR [rdi+0x18]
  4026fc:	cdqe   
  4026fe:	shl    rax,0x4
  402702:	lea    rax,[rdx+rax*1-0x10]
  402707:	ret    
  402708:	nop    DWORD PTR [rax+rax*1+0x0]
  402710:	repz ret 
  402712:	nop    WORD PTR [rax+rax*1+0x0]
  402718:	lea    rax,[rip+0x13fb1]        # 4166d0 <__sprintf_chk@plt+0x153e0>
  40271f:	pop    rbx
  402720:	jmp    402671 <__sprintf_chk@plt+0x1381>
  402725:	mov    esi,eax
  402727:	jmp    402570 <__sprintf_chk@plt+0x1280>
  40272c:	nop    DWORD PTR [rax+0x0]
  402730:	push   r13
  402732:	push   r12
  402734:	push   rbp
  402735:	push   rbx
  402736:	sub    rsp,0x8
  40273a:	mov    ebp,DWORD PTR [rdi+0x38]
  40273d:	test   ebp,ebp
  40273f:	mov    eax,ebp
  402741:	je     40275c <__sprintf_chk@plt+0x146c>
  402743:	mov    rsi,QWORD PTR [rdi+0x18]
  402747:	lea    edx,[rbp-0x1]
  40274a:	shl    rdx,0x4
  40274e:	mov    r8d,DWORD PTR [rsi+rdx*1+0x8]
  402753:	test   r8d,r8d
  402756:	je     402828 <__sprintf_chk@plt+0x1538>
  40275c:	lea    rdx,[rip+0x13efd]        # 416660 <__sprintf_chk@plt+0x15370>
  402763:	cmp    QWORD PTR [rdi+0x20],rdx
  402767:	je     402801 <__sprintf_chk@plt+0x1511>
  40276d:	mov    r12,rdi
  402770:	lea    ebx,[rbp+0x1]
  402773:	jmp    4027a8 <__sprintf_chk@plt+0x14b8>
  402775:	nop    DWORD PTR [rax]
  402778:	mov    rdx,QWORD PTR [r12+0x18]
  40277d:	movsxd rax,ebx
  402780:	shl    rax,0x4
  402784:	lea    rax,[rdx+rax*1-0x10]
  402789:	mov    edx,DWORD PTR [rax+0x8]
  40278c:	test   edx,edx
  40278e:	je     4027c0 <__sprintf_chk@plt+0x14d0>
  402790:	lea    edx,[rbx+rbx*1]
  402793:	cmp    edx,0x7ffffffd
  402799:	ja     402858 <__sprintf_chk@plt+0x1568>
  40279f:	mov    eax,DWORD PTR [r12+0x38]
  4027a4:	mov    ebp,ebx
  4027a6:	mov    ebx,edx
  4027a8:	lea    edx,[rbx-0x1]
  4027ab:	cmp    edx,eax
  4027ad:	jb     402778 <__sprintf_chk@plt+0x1488>
  4027af:	mov    esi,ebx
  4027b1:	mov    rdi,r12
  4027b4:	call   402570 <__sprintf_chk@plt+0x1280>
  4027b9:	mov    edx,DWORD PTR [rax+0x8]
  4027bc:	test   edx,edx
  4027be:	jne    402790 <__sprintf_chk@plt+0x14a0>
  4027c0:	mov    eax,ebx
  4027c2:	sub    eax,ebp
  4027c4:	cmp    eax,0x1
  4027c7:	jbe    4027ff <__sprintf_chk@plt+0x150f>
  4027c9:	lea    r13d,[rbx+rbp*1]
  4027cd:	shr    r13d,1
  4027d0:	lea    eax,[r13-0x1]
  4027d4:	cmp    eax,DWORD PTR [r12+0x38]
  4027d9:	jae    402818 <__sprintf_chk@plt+0x1528>
  4027db:	mov    rdx,QWORD PTR [r12+0x18]
  4027e0:	mov    eax,r13d
  4027e3:	shl    rax,0x4
  4027e7:	lea    rax,[rdx+rax*1-0x10]
  4027ec:	mov    eax,DWORD PTR [rax+0x8]
  4027ef:	test   eax,eax
  4027f1:	jne    402810 <__sprintf_chk@plt+0x1520>
  4027f3:	mov    ebx,r13d
  4027f6:	mov    eax,ebx
  4027f8:	sub    eax,ebp
  4027fa:	cmp    eax,0x1
  4027fd:	ja     4027c9 <__sprintf_chk@plt+0x14d9>
  4027ff:	mov    eax,ebp
  402801:	add    rsp,0x8
  402805:	pop    rbx
  402806:	pop    rbp
  402807:	pop    r12
  402809:	pop    r13
  40280b:	ret    
  40280c:	nop    DWORD PTR [rax+0x0]
  402810:	mov    ebp,r13d
  402813:	jmp    4027c0 <__sprintf_chk@plt+0x14d0>
  402815:	nop    DWORD PTR [rax]
  402818:	mov    esi,r13d
  40281b:	mov    rdi,r12
  40281e:	call   402570 <__sprintf_chk@plt+0x1280>
  402823:	jmp    4027ec <__sprintf_chk@plt+0x14fc>
  402825:	nop    DWORD PTR [rax]
  402828:	xor    eax,eax
  40282a:	jmp    402847 <__sprintf_chk@plt+0x1557>
  40282c:	nop    DWORD PTR [rax+0x0]
  402830:	lea    edx,[rbp+rax*1+0x0]
  402834:	shr    edx,1
  402836:	lea    ecx,[rdx-0x1]
  402839:	shl    rcx,0x4
  40283d:	mov    edi,DWORD PTR [rsi+rcx*1+0x8]
  402841:	test   edi,edi
  402843:	jne    4028a8 <__sprintf_chk@plt+0x15b8>
  402845:	mov    ebp,edx
  402847:	mov    edx,ebp
  402849:	sub    edx,eax
  40284b:	cmp    edx,0x1
  40284e:	ja     402830 <__sprintf_chk@plt+0x1540>
  402850:	jmp    402801 <__sprintf_chk@plt+0x1511>
  402852:	nop    WORD PTR [rax+rax*1+0x0]
  402858:	mov    ebp,0x1
  40285d:	jmp    40287b <__sprintf_chk@plt+0x158b>
  40285f:	nop
  402860:	mov    rdx,QWORD PTR [r12+0x18]
  402865:	movsxd rax,ebp
  402868:	shl    rax,0x4
  40286c:	lea    rax,[rdx+rax*1-0x10]
  402871:	mov    ecx,DWORD PTR [rax+0x8]
  402874:	test   ecx,ecx
  402876:	je     402896 <__sprintf_chk@plt+0x15a6>
  402878:	add    ebp,0x1
  40287b:	lea    ebx,[rbp-0x1]
  40287e:	cmp    ebx,DWORD PTR [r12+0x38]
  402883:	jb     402860 <__sprintf_chk@plt+0x1570>
  402885:	mov    esi,ebp
  402887:	mov    rdi,r12
  40288a:	call   402570 <__sprintf_chk@plt+0x1280>
  40288f:	mov    ecx,DWORD PTR [rax+0x8]
  402892:	test   ecx,ecx
  402894:	jne    402878 <__sprintf_chk@plt+0x1588>
  402896:	add    rsp,0x8
  40289a:	mov    eax,ebx
  40289c:	pop    rbx
  40289d:	pop    rbp
  40289e:	pop    r12
  4028a0:	pop    r13
  4028a2:	ret    
  4028a3:	nop    DWORD PTR [rax+rax*1+0x0]
  4028a8:	mov    eax,edx
  4028aa:	jmp    402847 <__sprintf_chk@plt+0x1557>
  4028ac:	nop    DWORD PTR [rax+0x0]
  4028b0:	cmp    edx,0x5
  4028b3:	je     4028ba <__sprintf_chk@plt+0x15ca>
  4028b5:	cmp    edx,0x7
  4028b8:	jne    402920 <__sprintf_chk@plt+0x1630>
  4028ba:	mov    rsi,QWORD PTR [rsi+0x10]
  4028be:	test   rsi,rsi
  4028c1:	je     402910 <__sprintf_chk@plt+0x1620>
  4028c3:	mov    rax,QWORD PTR [rdi]
  4028c6:	mov    ecx,ecx
  4028c8:	mov    rdx,QWORD PTR [rax+rcx*8+0x128]
  4028d0:	movzx  ecx,BYTE PTR [rsi+0xb]
  4028d4:	mov    eax,0x1
  4028d9:	shlx   rax,rax,rcx
  4028de:	sub    eax,0x1
  4028e1:	and    eax,DWORD PTR [rdx+0xc]
  4028e4:	cdqe   
  4028e6:	lea    rcx,[rax+rax*4]
  4028ea:	mov    rax,QWORD PTR [rsi+0x20]
  4028ee:	lea    rax,[rax+rcx*8]
  4028f2:	jmp    402901 <__sprintf_chk@plt+0x1611>
  4028f4:	nop    DWORD PTR [rax+0x0]
  4028f8:	mov    rax,QWORD PTR [rax+0x20]
  4028fc:	test   rax,rax
  4028ff:	je     402910 <__sprintf_chk@plt+0x1620>
  402901:	cmp    DWORD PTR [rax+0x18],0x4
  402905:	jne    4028f8 <__sprintf_chk@plt+0x1608>
  402907:	cmp    rdx,QWORD PTR [rax+0x10]
  40290b:	jne    4028f8 <__sprintf_chk@plt+0x1608>
  40290d:	repz ret 
  40290f:	nop
  402910:	lea    rax,[rip+0x13db9]        # 4166d0 <__sprintf_chk@plt+0x153e0>
  402917:	ret    
  402918:	nop    DWORD PTR [rax+rax*1+0x0]
  402920:	mov    rax,QWORD PTR [rdi]
  402923:	movsxd rdx,edx
  402926:	mov    rsi,QWORD PTR [rax+rdx*8+0xe0]
  40292e:	jmp    4028be <__sprintf_chk@plt+0x15ce>
  402930:	push   rbp
  402931:	push   rbx
  402932:	mov    rbp,rdi
  402935:	mov    rbx,QWORD PTR [rdi]
  402938:	mov    r10d,esi
  40293b:	xor    r11d,r11d
  40293e:	mov    r9,QWORD PTR [rbx+0xb0]
  402945:	jmp    40297c <__sprintf_chk@plt+0x168c>
  402947:	nop    WORD PTR [rax+rax*1+0x0]
  402950:	movzx  eax,BYTE PTR [r8+0x9]
  402955:	mov    edx,eax
  402957:	and    edx,0x3
  40295a:	or     edx,r10d
  40295d:	je     402979 <__sprintf_chk@plt+0x1689>
  40295f:	test   al,0x8
  402961:	jne    402979 <__sprintf_chk@plt+0x1689>
  402963:	mov    rdi,QWORD PTR [r8+0x10]
  402967:	test   rdi,rdi
  40296a:	je     402972 <__sprintf_chk@plt+0x1682>
  40296c:	test   BYTE PTR [rdi+0xa],0x4
  402970:	je     402990 <__sprintf_chk@plt+0x16a0>
  402972:	or     eax,0x8
  402975:	mov    BYTE PTR [r8+0x9],al
  402979:	mov    r9,r8
  40297c:	mov    r8,QWORD PTR [r9]
  40297f:	test   r8,r8
  402982:	jne    402950 <__sprintf_chk@plt+0x1660>
  402984:	mov    rax,r11
  402987:	pop    rbx
  402988:	pop    rbp
  402989:	ret    
  40298a:	nop    WORD PTR [rax+rax*1+0x0]
  402990:	mov    rax,QWORD PTR [rbp+0x0]
  402994:	mov    esi,0x2
  402999:	mov    rdx,QWORD PTR [rax+0x138]
  4029a0:	call   4018c0 <__sprintf_chk@plt+0x5d0>
  4029a5:	test   rax,rax
  4029a8:	je     4029df <__sprintf_chk@plt+0x16ef>
  4029aa:	mov    rax,QWORD PTR [r8+0x20]
  4029ae:	or     BYTE PTR [r8+0x9],0x8
  4029b3:	lea    r11,[r11+rax*1+0x28]
  4029b8:	mov    rax,QWORD PTR [r8]
  4029bb:	mov    QWORD PTR [r9],rax
  4029be:	mov    rax,QWORD PTR [rbx+0x50]
  4029c2:	test   rax,rax
  4029c5:	je     4029d6 <__sprintf_chk@plt+0x16e6>
  4029c7:	mov    rdx,QWORD PTR [rax]
  4029ca:	mov    QWORD PTR [r8],rdx
  4029cd:	mov    QWORD PTR [rax],r8
  4029d0:	mov    QWORD PTR [rbx+0x50],r8
  4029d4:	jmp    40297c <__sprintf_chk@plt+0x168c>
  4029d6:	mov    QWORD PTR [r8],r8
  4029d9:	mov    QWORD PTR [rbx+0x50],r8
  4029dd:	jmp    40297c <__sprintf_chk@plt+0x168c>
  4029df:	movzx  eax,BYTE PTR [r8+0x9]
  4029e4:	jmp    402972 <__sprintf_chk@plt+0x1682>
  4029e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4029f0:	test   edx,edx
  4029f2:	jle    402a28 <__sprintf_chk@plt+0x1738>
  4029f4:	mov    r8,QWORD PTR [rsi]
  4029f7:	jmp    402a1b <__sprintf_chk@plt+0x172b>
  4029f9:	nop    DWORD PTR [rax+0x0]
  402a00:	mov    rax,QWORD PTR [rdi+0x8]
  402a04:	sub    edx,0x1
  402a07:	mov    rax,QWORD PTR [rax]
  402a0a:	cmp    BYTE PTR [rax+0xa],0x0
  402a0e:	jne    402a13 <__sprintf_chk@plt+0x1723>
  402a10:	sub    edx,DWORD PTR [rdi+0x24]
  402a13:	sub    rdi,0x28
  402a17:	test   edx,edx
  402a19:	jle    402a28 <__sprintf_chk@plt+0x1738>
  402a1b:	cmp    rdi,r8
  402a1e:	ja     402a00 <__sprintf_chk@plt+0x1710>
  402a20:	xor    eax,eax
  402a22:	ret    
  402a23:	nop    DWORD PTR [rax+rax*1+0x0]
  402a28:	test   edx,edx
  402a2a:	jne    402a38 <__sprintf_chk@plt+0x1748>
  402a2c:	mov    rdx,QWORD PTR [rsi]
  402a2f:	xor    eax,eax
  402a31:	cmp    rdx,rdi
  402a34:	jb     402a48 <__sprintf_chk@plt+0x1758>
  402a36:	repz ret 
  402a38:	mov    DWORD PTR [rcx],0x0
  402a3e:	mov    eax,0x1
  402a43:	ret    
  402a44:	nop    DWORD PTR [rax+0x0]
  402a48:	sub    rdi,rdx
  402a4b:	movabs rax,0xcccccccccccccccd
  402a55:	sar    rdi,0x3
  402a59:	imul   rdi,rax
  402a5d:	mov    eax,0x1
  402a62:	mov    DWORD PTR [rcx],edi
  402a64:	ret    
  402a65:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402a70:	mov    eax,DWORD PTR [rsi]
  402a72:	cmp    eax,0xd
  402a75:	je     402aa8 <__sprintf_chk@plt+0x17b8>
  402a77:	cmp    eax,0xe
  402a7a:	je     402a80 <__sprintf_chk@plt+0x1790>
  402a7c:	repz ret 
  402a7e:	xchg   ax,ax
  402a80:	mov    rax,QWORD PTR [rdi]
  402a83:	movsxd rdx,DWORD PTR [rdx]
  402a86:	mov    rax,QWORD PTR [rax+0x18]
  402a8a:	lea    rdx,[rax+rdx*4]
  402a8e:	mov    eax,DWORD PTR [rdx]
  402a90:	and    eax,0x7fffff
  402a95:	or     eax,0x1000000
  402a9a:	mov    DWORD PTR [rdx],eax
  402a9c:	mov    DWORD PTR [rsi],0xb
  402aa2:	ret    
  402aa3:	nop    DWORD PTR [rax+rax*1+0x0]
  402aa8:	mov    rax,QWORD PTR [rdi]
  402aab:	movsxd rcx,DWORD PTR [rdx]
  402aae:	mov    DWORD PTR [rsi],0xc
  402ab4:	mov    rax,QWORD PTR [rax+0x18]
  402ab8:	mov    eax,DWORD PTR [rax+rcx*4]
  402abb:	shr    eax,0x6
  402abe:	and    eax,0xff
  402ac3:	mov    DWORD PTR [rdx],eax
  402ac5:	ret    
  402ac6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402ad0:	mov    rax,QWORD PTR [rdi]
  402ad3:	movsxd rdx,esi
  402ad6:	test   esi,esi
  402ad8:	mov    rax,QWORD PTR [rax+0x18]
  402adc:	lea    rax,[rax+rdx*4]
  402ae0:	jle    402afb <__sprintf_chk@plt+0x180b>
  402ae2:	mov    edx,DWORD PTR [rax-0x4]
  402ae5:	lea    rsi,[rip+0x13bb4]        # 4166a0 <__sprintf_chk@plt+0x153b0>
  402aec:	lea    rcx,[rax-0x4]
  402af0:	and    edx,0x3f
  402af3:	cmp    BYTE PTR [rsi+rdx*1],0x0
  402af7:	cmovs  rax,rcx
  402afb:	mov    edx,DWORD PTR [rax]
  402afd:	mov    ecx,edx
  402aff:	shr    edx,0x6
  402b02:	and    ecx,0xffffc03f
  402b08:	test   dl,dl
  402b0a:	sete   dl
  402b0d:	movzx  edx,dl
  402b10:	shl    edx,0x6
  402b13:	or     edx,ecx
  402b15:	mov    DWORD PTR [rax],edx
  402b17:	ret    
  402b18:	nop    DWORD PTR [rax+rax*1+0x0]
  402b20:	mov    rax,QWORD PTR [rdi+0x28]
  402b24:	mov    edx,0xffffd8ee
  402b29:	sub    edx,esi
  402b2b:	mov    rax,QWORD PTR [rax+0x8]
  402b2f:	mov    rcx,QWORD PTR [rax]
  402b32:	lea    rax,[rip+0x13b97]        # 4166d0 <__sprintf_chk@plt+0x153e0>
  402b39:	movzx  edi,BYTE PTR [rcx+0xb]
  402b3d:	cmp    edx,edi
  402b3f:	jg     402b53 <__sprintf_chk@plt+0x1863>
  402b41:	mov    eax,0xffffd8ed
  402b46:	sub    eax,esi
  402b48:	cdqe   
  402b4a:	shl    rax,0x4
  402b4e:	lea    rax,[rcx+rax*1+0x28]
  402b53:	repz ret 
  402b55:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402b60:	test   esi,esi
  402b62:	jle    402b88 <__sprintf_chk@plt+0x1898>
  402b64:	mov    rax,QWORD PTR [rdi+0x18]
  402b68:	movsxd rsi,esi
  402b6b:	lea    rdx,[rip+0x13b5e]        # 4166d0 <__sprintf_chk@plt+0x153e0>
  402b72:	shl    rsi,0x4
  402b76:	lea    rax,[rax+rsi*1-0x10]
  402b7b:	cmp    rax,QWORD PTR [rdi+0x10]
  402b7f:	cmovae rax,rdx
  402b83:	ret    
  402b84:	nop    DWORD PTR [rax+0x0]
  402b88:	cmp    esi,0xffffd8f1
  402b8e:	jge    402bb0 <__sprintf_chk@plt+0x18c0>
  402b90:	cmp    esi,0xffffd8ef
  402b96:	je     402bc0 <__sprintf_chk@plt+0x18d0>
  402b98:	cmp    esi,0xffffd8f0
  402b9e:	je     402bf8 <__sprintf_chk@plt+0x1908>
  402ba0:	cmp    esi,0xffffd8ee
  402ba6:	je     402bf0 <__sprintf_chk@plt+0x1900>
  402ba8:	jmp    402b20 <__sprintf_chk@plt+0x1830>
  402bad:	nop    DWORD PTR [rax]
  402bb0:	movsxd rax,esi
  402bb3:	shl    rax,0x4
  402bb7:	add    rax,QWORD PTR [rdi+0x10]
  402bbb:	ret    
  402bbc:	nop    DWORD PTR [rax+0x0]
  402bc0:	mov    rdx,QWORD PTR [rdi+0x28]
  402bc4:	lea    rax,[rdi+0x88]
  402bcb:	mov    rdx,QWORD PTR [rdx+0x8]
  402bcf:	mov    rdx,QWORD PTR [rdx]
  402bd2:	mov    rdx,QWORD PTR [rdx+0x18]
  402bd6:	mov    DWORD PTR [rdi+0x90],0x5
  402be0:	mov    QWORD PTR [rdi+0x88],rdx
  402be7:	ret    
  402be8:	nop    DWORD PTR [rax+rax*1+0x0]
  402bf0:	lea    rax,[rdi+0x78]
  402bf4:	ret    
  402bf5:	nop    DWORD PTR [rax]
  402bf8:	mov    rax,QWORD PTR [rdi+0x20]
  402bfc:	add    rax,0xa0
  402c02:	ret    
  402c03:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402c0e:	xchg   ax,ax
  402c10:	mov    r8,rdi
  402c13:	call   402b60 <__sprintf_chk@plt+0x1870>
  402c18:	mov    rcx,QWORD PTR [r8+0x10]
  402c1c:	add    rax,0x10
  402c20:	cmp    rax,rcx
  402c23:	jae    402c3e <__sprintf_chk@plt+0x194e>
  402c25:	nop    DWORD PTR [rax]
  402c28:	mov    rdx,QWORD PTR [rax]
  402c2b:	add    rax,0x10
  402c2f:	mov    QWORD PTR [rax-0x20],rdx
  402c33:	mov    edx,DWORD PTR [rax-0x8]
  402c36:	mov    DWORD PTR [rax-0x18],edx
  402c39:	cmp    rax,rcx
  402c3c:	jb     402c28 <__sprintf_chk@plt+0x1938>
  402c3e:	sub    rcx,0x10
  402c42:	mov    QWORD PTR [r8+0x10],rcx
  402c46:	ret    
  402c47:	nop    WORD PTR [rax+rax*1+0x0]
  402c50:	mov    r8,rdi
  402c53:	call   402b60 <__sprintf_chk@plt+0x1870>
  402c58:	mov    rsi,QWORD PTR [r8+0x10]
  402c5c:	cmp    rax,rsi
  402c5f:	mov    rdx,rsi
  402c62:	jae    402c7f <__sprintf_chk@plt+0x198f>
  402c64:	nop    DWORD PTR [rax+0x0]
  402c68:	mov    rcx,QWORD PTR [rdx-0x10]
  402c6c:	sub    rdx,0x10
  402c70:	mov    QWORD PTR [rdx+0x10],rcx
  402c74:	mov    ecx,DWORD PTR [rdx+0x8]
  402c77:	mov    DWORD PTR [rdx+0x18],ecx
  402c7a:	cmp    rax,rdx
  402c7d:	jb     402c68 <__sprintf_chk@plt+0x1978>
  402c7f:	mov    rdx,QWORD PTR [rsi]
  402c82:	mov    QWORD PTR [rax],rdx
  402c85:	mov    edx,DWORD PTR [rsi+0x8]
  402c88:	mov    DWORD PTR [rax+0x8],edx
  402c8b:	ret    
  402c8c:	nop    DWORD PTR [rax+0x0]
  402c90:	mov    r10d,edx
  402c93:	mov    r8,rdi
  402c96:	call   402b60 <__sprintf_chk@plt+0x1870>
  402c9b:	mov    esi,r10d
  402c9e:	mov    rdi,r8
  402ca1:	mov    r9,rax
  402ca4:	call   402b60 <__sprintf_chk@plt+0x1870>
  402ca9:	lea    rdx,[rip+0x13a20]        # 4166d0 <__sprintf_chk@plt+0x153e0>
  402cb0:	cmp    r9,rdx
  402cb3:	je     402cc8 <__sprintf_chk@plt+0x19d8>
  402cb5:	cmp    rax,rdx
  402cb8:	je     402cc8 <__sprintf_chk@plt+0x19d8>
  402cba:	mov    rsi,rax
  402cbd:	mov    rdi,r9
  402cc0:	jmp    401860 <__sprintf_chk@plt+0x570>
  402cc5:	nop    DWORD PTR [rax]
  402cc8:	xor    eax,eax
  402cca:	ret    
  402ccb:	nop    DWORD PTR [rax+rax*1+0x0]
  402cd0:	call   402b60 <__sprintf_chk@plt+0x1870>
  402cd5:	mov    ecx,DWORD PTR [rax+0x8]
  402cd8:	xor    edx,edx
  402cda:	test   ecx,ecx
  402cdc:	je     402ce8 <__sprintf_chk@plt+0x19f8>
  402cde:	cmp    ecx,0x1
  402ce1:	mov    edx,0x1
  402ce6:	je     402cf0 <__sprintf_chk@plt+0x1a00>
  402ce8:	mov    eax,edx
  402cea:	ret    
  402ceb:	nop    DWORD PTR [rax+rax*1+0x0]
  402cf0:	mov    eax,DWORD PTR [rax]
  402cf2:	xor    edx,edx
  402cf4:	test   eax,eax
  402cf6:	setne  dl
  402cf9:	mov    eax,edx
  402cfb:	ret    
  402cfc:	nop    DWORD PTR [rax+0x0]
  402d00:	call   402b60 <__sprintf_chk@plt+0x1870>
  402d05:	mov    edx,DWORD PTR [rax+0x8]
  402d08:	cmp    edx,0x2
  402d0b:	je     402d28 <__sprintf_chk@plt+0x1a38>
  402d0d:	cmp    edx,0x7
  402d10:	jne    402d20 <__sprintf_chk@plt+0x1a30>
  402d12:	mov    rax,QWORD PTR [rax]
  402d15:	add    rax,0x28
  402d19:	ret    
  402d1a:	nop    WORD PTR [rax+rax*1+0x0]
  402d20:	xor    eax,eax
  402d22:	ret    
  402d23:	nop    DWORD PTR [rax+rax*1+0x0]
  402d28:	mov    rax,QWORD PTR [rax]
  402d2b:	ret    
  402d2c:	nop    DWORD PTR [rax+0x0]
  402d30:	push   rbx
  402d31:	mov    rbx,rdi
  402d34:	call   402b60 <__sprintf_chk@plt+0x1870>
  402d39:	mov    rcx,QWORD PTR [rbx+0x10]
  402d3d:	mov    rdi,QWORD PTR [rax]
  402d40:	lea    rsi,[rcx-0x10]
  402d44:	call   402620 <__sprintf_chk@plt+0x1330>
  402d49:	mov    rdx,QWORD PTR [rbx+0x10]
  402d4d:	mov    rcx,QWORD PTR [rax]
  402d50:	mov    eax,DWORD PTR [rax+0x8]
  402d53:	mov    QWORD PTR [rdx-0x10],rcx
  402d57:	mov    DWORD PTR [rdx-0x8],eax
  402d5a:	pop    rbx
  402d5b:	ret    
  402d5c:	nop    DWORD PTR [rax+0x0]
  402d60:	push   rbx
  402d61:	movsxd r8,edx
  402d64:	mov    rbx,rdi
  402d67:	call   402b60 <__sprintf_chk@plt+0x1870>
  402d6c:	mov    rdi,QWORD PTR [rax]
  402d6f:	lea    eax,[r8-0x1]
  402d73:	cmp    eax,DWORD PTR [rdi+0x38]
  402d76:	jae    402da0 <__sprintf_chk@plt+0x1ab0>
  402d78:	mov    rax,QWORD PTR [rdi+0x18]
  402d7c:	shl    r8,0x4
  402d80:	lea    rax,[rax+r8*1-0x10]
  402d85:	mov    rdx,QWORD PTR [rbx+0x10]
  402d89:	mov    rcx,QWORD PTR [rax]
  402d8c:	mov    eax,DWORD PTR [rax+0x8]
  402d8f:	mov    QWORD PTR [rdx],rcx
  402d92:	add    rdx,0x10
  402d96:	mov    DWORD PTR [rdx-0x8],eax
  402d99:	mov    QWORD PTR [rbx+0x10],rdx
  402d9d:	pop    rbx
  402d9e:	ret    
  402d9f:	nop
  402da0:	mov    esi,r8d
  402da3:	call   402570 <__sprintf_chk@plt+0x1280>
  402da8:	jmp    402d85 <__sprintf_chk@plt+0x1a95>
  402daa:	nop    WORD PTR [rax+rax*1+0x0]
  402db0:	sub    rsp,0x8
  402db4:	mov    r8,rdi
  402db7:	call   402b60 <__sprintf_chk@plt+0x1870>
  402dbc:	mov    rdx,QWORD PTR [r8+0x10]
  402dc0:	mov    ecx,DWORD PTR [rdx-0x8]
  402dc3:	test   ecx,ecx
  402dc5:	je     402e18 <__sprintf_chk@plt+0x1b28>
  402dc7:	movsxd rcx,DWORD PTR [rax+0x8]
  402dcb:	mov    rsi,QWORD PTR [rdx-0x10]
  402dcf:	mov    rdi,rsi
  402dd2:	cmp    ecx,0x5
  402dd5:	jne    402e50 <__sprintf_chk@plt+0x1b60>
  402dd7:	mov    rdx,QWORD PTR [rax]
  402dda:	test   rsi,rsi
  402ddd:	mov    QWORD PTR [rdx+0x10],rsi
  402de1:	je     402e31 <__sprintf_chk@plt+0x1b41>
  402de3:	test   BYTE PTR [rsi+0x9],0x3
  402de7:	je     402e31 <__sprintf_chk@plt+0x1b41>
  402de9:	mov    rax,QWORD PTR [rax]
  402dec:	movzx  edx,BYTE PTR [rax+0x9]
  402df0:	test   dl,0x4
  402df3:	je     402e31 <__sprintf_chk@plt+0x1b41>
  402df5:	mov    rcx,QWORD PTR [r8+0x20]
  402df9:	and    edx,0xfffffffb
  402dfc:	mov    BYTE PTR [rax+0x9],dl
  402dff:	mov    rdx,QWORD PTR [rcx+0x40]
  402e03:	mov    QWORD PTR [rax+0x30],rdx
  402e07:	mov    QWORD PTR [rcx+0x40],rax
  402e0b:	mov    rdx,QWORD PTR [r8+0x10]
  402e0f:	jmp    402e35 <__sprintf_chk@plt+0x1b45>
  402e11:	nop    DWORD PTR [rax+0x0]
  402e18:	movsxd rcx,DWORD PTR [rax+0x8]
  402e1c:	cmp    ecx,0x5
  402e1f:	je     402ea0 <__sprintf_chk@plt+0x1bb0>
  402e21:	cmp    ecx,0x7
  402e24:	jne    402e90 <__sprintf_chk@plt+0x1ba0>
  402e26:	mov    rax,QWORD PTR [rax]
  402e29:	mov    QWORD PTR [rax+0x10],0x0
  402e31:	mov    rdx,QWORD PTR [r8+0x10]
  402e35:	sub    rdx,0x10
  402e39:	mov    eax,0x1
  402e3e:	mov    QWORD PTR [r8+0x10],rdx
  402e42:	add    rsp,0x8
  402e46:	ret    
  402e47:	nop    WORD PTR [rax+rax*1+0x0]
  402e50:	cmp    ecx,0x7
  402e53:	jne    402e92 <__sprintf_chk@plt+0x1ba2>
  402e55:	mov    rdx,QWORD PTR [rax]
  402e58:	test   rsi,rsi
  402e5b:	mov    QWORD PTR [rdx+0x10],rsi
  402e5f:	je     402e31 <__sprintf_chk@plt+0x1b41>
  402e61:	test   BYTE PTR [rsi+0x9],0x3
  402e65:	je     402e31 <__sprintf_chk@plt+0x1b41>
  402e67:	mov    rdx,QWORD PTR [rax]
  402e6a:	movzx  eax,BYTE PTR [rdx+0x9]
  402e6e:	test   al,0x4
  402e70:	je     402e31 <__sprintf_chk@plt+0x1b41>
  402e72:	mov    rdi,QWORD PTR [r8+0x20]
  402e76:	cmp    BYTE PTR [rdi+0x21],0x1
  402e7a:	je     402eb8 <__sprintf_chk@plt+0x1bc8>
  402e7c:	movzx  ecx,BYTE PTR [rdi+0x20]
  402e80:	and    eax,0xfffffff8
  402e83:	and    ecx,0x3
  402e86:	or     eax,ecx
  402e88:	mov    BYTE PTR [rdx+0x9],al
  402e8b:	jmp    402e31 <__sprintf_chk@plt+0x1b41>
  402e8d:	nop    DWORD PTR [rax]
  402e90:	xor    edi,edi
  402e92:	mov    rax,QWORD PTR [r8+0x20]
  402e96:	mov    QWORD PTR [rax+rcx*8+0xe0],rdi
  402e9e:	jmp    402e35 <__sprintf_chk@plt+0x1b45>
  402ea0:	mov    rax,QWORD PTR [rax]
  402ea3:	mov    QWORD PTR [rax+0x10],0x0
  402eab:	mov    rdx,QWORD PTR [r8+0x10]
  402eaf:	jmp    402e35 <__sprintf_chk@plt+0x1b45>
  402eb1:	nop    DWORD PTR [rax+0x0]
  402eb8:	call   401a50 <__sprintf_chk@plt+0x760>
  402ebd:	mov    rdx,QWORD PTR [r8+0x10]
  402ec1:	jmp    402e35 <__sprintf_chk@plt+0x1b45>
  402ec6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402ed0:	test   edx,edx
  402ed2:	js     402f10 <__sprintf_chk@plt+0x1c20>
  402ed4:	movsxd rdx,edx
  402ed7:	mov    rax,QWORD PTR [rdi]
  402eda:	mov    rcx,rdx
  402edd:	shl    rcx,0x4
  402ee1:	mov    rdx,rcx
  402ee4:	add    rdx,QWORD PTR [rsi]
  402ee7:	cmp    rdx,rax
  402eea:	jbe    402f0c <__sprintf_chk@plt+0x1c1c>
  402eec:	add    rax,0x10
  402ef0:	mov    QWORD PTR [rdi],rax
  402ef3:	mov    rdx,rcx
  402ef6:	add    rdx,QWORD PTR [rsi]
  402ef9:	mov    r8,rax
  402efc:	mov    DWORD PTR [rax-0x8],0x0
  402f03:	add    rax,0x10
  402f07:	cmp    r8,rdx
  402f0a:	jb     402ef0 <__sprintf_chk@plt+0x1c00>
  402f0c:	mov    QWORD PTR [rdi],rdx
  402f0f:	ret    
  402f10:	movsxd rax,edx
  402f13:	add    rax,0x1
  402f17:	shl    rax,0x4
  402f1b:	add    QWORD PTR [rdi],rax
  402f1e:	ret    
  402f1f:	nop
  402f20:	push   rbx
  402f21:	mov    rbx,rsi
  402f24:	sub    rsp,0x10
  402f28:	mov    rdi,QWORD PTR [rdi]
  402f2b:	mov    rsi,rsp
  402f2e:	mov    rax,QWORD PTR fs:0x28
  402f37:	mov    QWORD PTR [rsp+0x8],rax
  402f3c:	xor    eax,eax
  402f3e:	add    rdi,0x18
  402f42:	call   401e40 <__sprintf_chk@plt+0xb50>
  402f47:	test   eax,eax
  402f49:	je     402f78 <__sprintf_chk@plt+0x1c88>
  402f4b:	vmovsd xmm0,QWORD PTR [rsp]
  402f50:	mov    DWORD PTR [rbx+0x8],0x3
  402f57:	mov    rax,rbx
  402f5a:	vmovsd QWORD PTR [rbx],xmm0
  402f5e:	mov    rdx,QWORD PTR [rsp+0x8]
  402f63:	xor    rdx,QWORD PTR fs:0x28
  402f6c:	jne    402f7c <__sprintf_chk@plt+0x1c8c>
  402f6e:	add    rsp,0x10
  402f72:	pop    rbx
  402f73:	ret    
  402f74:	nop    DWORD PTR [rax+0x0]
  402f78:	xor    eax,eax
  402f7a:	jmp    402f5e <__sprintf_chk@plt+0x1c6e>
  402f7c:	call   401100 <__stack_chk_fail@plt>
  402f81:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402f8c:	nop    DWORD PTR [rax+0x0]
  402f90:	sub    rsp,0x28
  402f94:	mov    rax,QWORD PTR fs:0x28
  402f9d:	mov    QWORD PTR [rsp+0x18],rax
  402fa2:	xor    eax,eax
  402fa4:	call   402b60 <__sprintf_chk@plt+0x1870>
  402fa9:	mov    edx,DWORD PTR [rax+0x8]
  402fac:	cmp    edx,0x3
  402faf:	je     402fe0 <__sprintf_chk@plt+0x1cf0>
  402fb1:	cmp    edx,0x4
  402fb4:	je     402fd0 <__sprintf_chk@plt+0x1ce0>
  402fb6:	vxorpd xmm0,xmm0,xmm0
  402fba:	mov    rax,QWORD PTR [rsp+0x18]
  402fbf:	xor    rax,QWORD PTR fs:0x28
  402fc8:	jne    402fe6 <__sprintf_chk@plt+0x1cf6>
  402fca:	add    rsp,0x28
  402fce:	ret    
  402fcf:	nop
  402fd0:	mov    rsi,rsp
  402fd3:	mov    rdi,rax
  402fd6:	call   402f20 <__sprintf_chk@plt+0x1c30>
  402fdb:	test   rax,rax
  402fde:	je     402fb6 <__sprintf_chk@plt+0x1cc6>
  402fe0:	vmovsd xmm0,QWORD PTR [rax]
  402fe4:	jmp    402fba <__sprintf_chk@plt+0x1cca>
  402fe6:	call   401100 <__stack_chk_fail@plt>
  402feb:	nop    DWORD PTR [rax+rax*1+0x0]
  402ff0:	sub    rsp,0x28
  402ff4:	mov    rax,QWORD PTR fs:0x28
  402ffd:	mov    QWORD PTR [rsp+0x18],rax
  403002:	xor    eax,eax
  403004:	call   402b60 <__sprintf_chk@plt+0x1870>
  403009:	mov    edx,DWORD PTR [rax+0x8]
  40300c:	cmp    edx,0x3
  40300f:	je     403030 <__sprintf_chk@plt+0x1d40>
  403011:	mov    rdi,rax
  403014:	xor    eax,eax
  403016:	cmp    edx,0x4
  403019:	je     403040 <__sprintf_chk@plt+0x1d50>
  40301b:	mov    rcx,QWORD PTR [rsp+0x18]
  403020:	xor    rcx,QWORD PTR fs:0x28
  403029:	jne    403053 <__sprintf_chk@plt+0x1d63>
  40302b:	add    rsp,0x28
  40302f:	ret    
  403030:	mov    eax,0x1
  403035:	jmp    40301b <__sprintf_chk@plt+0x1d2b>
  403037:	nop    WORD PTR [rax+rax*1+0x0]
  403040:	mov    rsi,rsp
  403043:	call   402f20 <__sprintf_chk@plt+0x1c30>
  403048:	test   rax,rax
  40304b:	setne  al
  40304e:	movzx  eax,al
  403051:	jmp    40301b <__sprintf_chk@plt+0x1d2b>
  403053:	call   401100 <__stack_chk_fail@plt>
  403058:	nop    DWORD PTR [rax+rax*1+0x0]
  403060:	sub    rsp,0x28
  403064:	mov    rax,QWORD PTR fs:0x28
  40306d:	mov    QWORD PTR [rsp+0x18],rax
  403072:	xor    eax,eax
  403074:	call   402b60 <__sprintf_chk@plt+0x1870>
  403079:	mov    edx,DWORD PTR [rax+0x8]
  40307c:	cmp    edx,0x3
  40307f:	je     4030b0 <__sprintf_chk@plt+0x1dc0>
  403081:	cmp    edx,0x4
  403084:	je     4030a0 <__sprintf_chk@plt+0x1db0>
  403086:	xor    eax,eax
  403088:	mov    rcx,QWORD PTR [rsp+0x18]
  40308d:	xor    rcx,QWORD PTR fs:0x28
  403096:	jne    4030b7 <__sprintf_chk@plt+0x1dc7>
  403098:	add    rsp,0x28
  40309c:	ret    
  40309d:	nop    DWORD PTR [rax]
  4030a0:	mov    rsi,rsp
  4030a3:	mov    rdi,rax
  4030a6:	call   402f20 <__sprintf_chk@plt+0x1c30>
  4030ab:	test   rax,rax
  4030ae:	je     403086 <__sprintf_chk@plt+0x1d96>
  4030b0:	vcvttsd2si rax,QWORD PTR [rax]
  4030b5:	jmp    403088 <__sprintf_chk@plt+0x1d98>
  4030b7:	call   401100 <__stack_chk_fail@plt>
  4030bc:	nop    DWORD PTR [rax+0x0]
  4030c0:	movzx  eax,BYTE PTR [rsi]
  4030c3:	cmp    al,0x2e
  4030c5:	je     403100 <__sprintf_chk@plt+0x1e10>
  4030c7:	cmp    al,0x5b
  4030c9:	je     4030f0 <__sprintf_chk@plt+0x1e00>
  4030cb:	cmp    al,0x25
  4030cd:	je     4030e0 <__sprintf_chk@plt+0x1df0>
  4030cf:	cmp    eax,edi
  4030d1:	sete   al
  4030d4:	movzx  eax,al
  4030d7:	ret    
  4030d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4030e0:	movzx  esi,BYTE PTR [rsi+0x1]
  4030e4:	jmp    402200 <__sprintf_chk@plt+0xf10>
  4030e9:	nop    DWORD PTR [rax+0x0]
  4030f0:	sub    rdx,0x1
  4030f4:	jmp    4023a0 <__sprintf_chk@plt+0x10b0>
  4030f9:	nop    DWORD PTR [rax+0x0]
  403100:	mov    eax,0x1
  403105:	ret    
  403106:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403110:	mov    eax,DWORD PTR [rsi]
  403112:	test   eax,eax
  403114:	je     403130 <__sprintf_chk@plt+0x1e40>
  403116:	mov    DWORD PTR [rsi],0x0
  40311c:	lea    rax,[rip+0x13d16]        # 416e39 <__sprintf_chk@plt+0x15b49>
  403123:	mov    QWORD PTR [rdx],0x1
  40312a:	ret    
  40312b:	nop    DWORD PTR [rax+rax*1+0x0]
  403130:	push   r12
  403132:	push   rbp
  403133:	mov    r12,rdx
  403136:	push   rbx
  403137:	mov    rdi,QWORD PTR [rsi+0x8]
  40313b:	mov    rbx,rsi
  40313e:	call   4011a0 <feof@plt>
  403143:	test   eax,eax
  403145:	jne    403178 <__sprintf_chk@plt+0x1e88>
  403147:	lea    rbp,[rbx+0x10]
  40314b:	mov    rcx,QWORD PTR [rbx+0x8]
  40314f:	mov    edx,0x2000
  403154:	mov    esi,0x1
  403159:	mov    rdi,rbp
  40315c:	call   4010b0 <fread@plt>
  403161:	test   rax,rax
  403164:	mov    QWORD PTR [r12],rax
  403168:	je     403178 <__sprintf_chk@plt+0x1e88>
  40316a:	mov    rax,rbp
  40316d:	pop    rbx
  40316e:	pop    rbp
  40316f:	pop    r12
  403171:	ret    
  403172:	nop    WORD PTR [rax+rax*1+0x0]
  403178:	xor    eax,eax
  40317a:	jmp    40316d <__sprintf_chk@plt+0x1e7d>
  40317c:	nop    DWORD PTR [rax+0x0]
  403180:	test   rsi,rsi
  403183:	je     40318b <__sprintf_chk@plt+0x1e9b>
  403185:	test   BYTE PTR [rsi+0xa],0x10
  403189:	je     403198 <__sprintf_chk@plt+0x1ea8>
  40318b:	xor    r10d,r10d
  40318e:	mov    rax,r10
  403191:	ret    
  403192:	nop    WORD PTR [rax+rax*1+0x0]
  403198:	mov    rax,QWORD PTR [rdi]
  40319b:	mov    r9,rdx
  40319e:	mov    r8,rsi
  4031a1:	mov    r11,rdi
  4031a4:	mov    esi,0x4
  4031a9:	mov    rdi,r8
  4031ac:	mov    rdx,QWORD PTR [rax+0x148]
  4031b3:	call   4018c0 <__sprintf_chk@plt+0x5d0>
  4031b8:	test   rax,rax
  4031bb:	mov    r10,rax
  4031be:	je     40318b <__sprintf_chk@plt+0x1e9b>
  4031c0:	cmp    r8,r9
  4031c3:	je     40318e <__sprintf_chk@plt+0x1e9e>
  4031c5:	test   r9,r9
  4031c8:	je     40318b <__sprintf_chk@plt+0x1e9b>
  4031ca:	test   BYTE PTR [r9+0xa],0x10
  4031cf:	jne    40318b <__sprintf_chk@plt+0x1e9b>
  4031d1:	mov    rax,QWORD PTR [r11]
  4031d4:	mov    esi,0x4
  4031d9:	mov    rdi,r9
  4031dc:	mov    rdx,QWORD PTR [rax+0x148]
  4031e3:	call   4018c0 <__sprintf_chk@plt+0x5d0>
  4031e8:	test   rax,rax
  4031eb:	mov    rsi,rax
  4031ee:	je     40318b <__sprintf_chk@plt+0x1e9b>
  4031f0:	mov    rdi,r10
  4031f3:	call   401860 <__sprintf_chk@plt+0x570>
  4031f8:	test   eax,eax
  4031fa:	je     40318b <__sprintf_chk@plt+0x1e9b>
  4031fc:	mov    rax,r10
  4031ff:	ret    
  403200:	mov    rax,QWORD PTR [rdi+0x10]
  403204:	mov    rcx,rdi
  403207:	mov    edx,DWORD PTR [rax-0x18]
  40320a:	cmp    edx,0x7
  40320d:	je     403230 <__sprintf_chk@plt+0x1f40>
  40320f:	cmp    edx,0x8
  403212:	je     4032a0 <__sprintf_chk@plt+0x1fb0>
  403218:	cmp    edx,0x6
  40321b:	je     403230 <__sprintf_chk@plt+0x1f40>
  40321d:	mov    rdx,rax
  403220:	xor    eax,eax
  403222:	sub    rdx,0x10
  403226:	mov    QWORD PTR [rcx+0x10],rdx
  40322a:	ret    
  40322b:	nop    DWORD PTR [rax+rax*1+0x0]
  403230:	mov    rdx,QWORD PTR [rax-0x20]
  403234:	mov    rsi,QWORD PTR [rax-0x10]
  403238:	mov    QWORD PTR [rdx+0x18],rsi
  40323c:	mov    rdx,QWORD PTR [rcx+0x10]
  403240:	mov    rsi,QWORD PTR [rdx-0x10]
  403244:	test   BYTE PTR [rsi+0x9],0x3
  403248:	je     403290 <__sprintf_chk@plt+0x1fa0>
  40324a:	mov    r9,QWORD PTR [rax-0x20]
  40324e:	mov    eax,0x1
  403253:	movzx  r8d,BYTE PTR [r9+0x9]
  403258:	test   r8b,0x4
  40325c:	je     40327e <__sprintf_chk@plt+0x1f8e>
  40325e:	mov    rdi,QWORD PTR [rcx+0x20]
  403262:	cmp    BYTE PTR [rdi+0x21],0x1
  403266:	je     4032c0 <__sprintf_chk@plt+0x1fd0>
  403268:	movzx  edx,BYTE PTR [rdi+0x20]
  40326c:	and    r8d,0xfffffff8
  403270:	and    edx,0x3
  403273:	or     r8d,edx
  403276:	mov    BYTE PTR [r9+0x9],r8b
  40327a:	mov    rdx,QWORD PTR [rcx+0x10]
  40327e:	sub    rdx,0x10
  403282:	mov    QWORD PTR [rcx+0x10],rdx
  403286:	ret    
  403287:	nop    WORD PTR [rax+rax*1+0x0]
  403290:	sub    rdx,0x10
  403294:	mov    eax,0x1
  403299:	mov    QWORD PTR [rcx+0x10],rdx
  40329d:	ret    
  40329e:	xchg   ax,ax
  4032a0:	mov    rdx,QWORD PTR [rax-0x20]
  4032a4:	mov    rsi,QWORD PTR [rax-0x10]
  4032a8:	mov    DWORD PTR [rdx+0x80],0x5
  4032b2:	mov    QWORD PTR [rdx+0x78],rsi
  4032b6:	jmp    40323c <__sprintf_chk@plt+0x1f4c>
  4032b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4032c0:	sub    rsp,0x18
  4032c4:	mov    DWORD PTR [rsp+0xc],eax
  4032c8:	call   401a50 <__sprintf_chk@plt+0x760>
  4032cd:	mov    rdx,QWORD PTR [rcx+0x10]
  4032d1:	mov    eax,DWORD PTR [rsp+0xc]
  4032d5:	sub    rdx,0x10
  4032d9:	mov    QWORD PTR [rcx+0x10],rdx
  4032dd:	add    rsp,0x18
  4032e1:	ret    
  4032e2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4032ed:	nop    DWORD PTR [rax]
  4032f0:	mov    rdx,QWORD PTR [rdi+0x18]
  4032f4:	mov    rax,QWORD PTR [rdi+0x10]
  4032f8:	cmp    rdx,rax
  4032fb:	jae    403330 <__sprintf_chk@plt+0x2040>
  4032fd:	movsxd rcx,DWORD PTR [rdx+0x8]
  403301:	cmp    ecx,0x5
  403304:	jne    403350 <__sprintf_chk@plt+0x2060>
  403306:	mov    rdx,QWORD PTR [rdx]
  403309:	mov    rdx,QWORD PTR [rdx+0x10]
  40330d:	test   rdx,rdx
  403310:	je     403343 <__sprintf_chk@plt+0x2053>
  403312:	mov    QWORD PTR [rax],rdx
  403315:	mov    DWORD PTR [rax+0x8],0x5
  40331c:	mov    eax,0x1
  403321:	add    QWORD PTR [rdi+0x10],0x10
  403326:	ret    
  403327:	nop    WORD PTR [rax+rax*1+0x0]
  403330:	xor    ecx,ecx
  403332:	mov    rdx,QWORD PTR [rdi+0x20]
  403336:	mov    rdx,QWORD PTR [rdx+rcx*8+0xe0]
  40333e:	test   rdx,rdx
  403341:	jne    403312 <__sprintf_chk@plt+0x2022>
  403343:	xor    eax,eax
  403345:	ret    
  403346:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403350:	cmp    ecx,0x7
  403353:	je     403306 <__sprintf_chk@plt+0x2016>
  403355:	jmp    403332 <__sprintf_chk@plt+0x2042>
  403357:	nop    WORD PTR [rax+rax*1+0x0]
  403360:	mov    eax,DWORD PTR [rsi]
  403362:	test   ah,0x1
  403365:	je     403370 <__sprintf_chk@plt+0x2080>
  403367:	repz ret 
  403369:	nop    DWORD PTR [rax+0x0]
  403370:	movzx  edx,BYTE PTR [rdi+0x4a]
  403374:	cmp    eax,edx
  403376:	jl     403367 <__sprintf_chk@plt+0x2077>
  403378:	sub    DWORD PTR [rdi+0x3c],0x1
  40337c:	ret    
  40337d:	nop    DWORD PTR [rax]
  403380:	push   rbp
  403381:	push   rbx
  403382:	mov    rbx,rdi
  403385:	mov    ebp,esi
  403387:	sub    rsp,0x8
  40338b:	mov    rdi,QWORD PTR [rdi+0xa8]
  403392:	test   rdi,rdi
  403395:	je     4033ab <__sprintf_chk@plt+0x20bb>
  403397:	mov    DWORD PTR [rdi+0xd0],esi
  40339d:	add    rdi,0x8
  4033a1:	mov    esi,0x1
  4033a6:	call   401230 <__longjmp_chk@plt>
  4033ab:	mov    rax,QWORD PTR [rbx+0x20]
  4033af:	mov    BYTE PTR [rbx+0xa],sil
  4033b3:	cmp    QWORD PTR [rax+0x98],0x0
  4033bb:	je     403444 <__sprintf_chk@plt+0x2154>
  4033c1:	mov    rax,QWORD PTR [rbx+0x50]
  4033c5:	mov    rdi,rbx
  4033c8:	mov    rsi,QWORD PTR [rax]
  4033cb:	mov    QWORD PTR [rbx+0x28],rax
  4033cf:	mov    QWORD PTR [rbx+0x18],rsi
  4033d3:	call   403560 <__sprintf_chk@plt+0x2270>
  4033d8:	mov    rdx,QWORD PTR [rbx+0x18]
  4033dc:	mov    esi,ebp
  4033de:	mov    rdi,rbx
  4033e1:	call   405b10 <__sprintf_chk@plt+0x4820>
  4033e6:	movzx  eax,WORD PTR [rbx+0x62]
  4033ea:	cmp    DWORD PTR [rbx+0x5c],0x4e20
  4033f1:	mov    BYTE PTR [rbx+0x65],0x1
  4033f5:	mov    WORD PTR [rbx+0x60],ax
  4033f9:	jle    403421 <__sprintf_chk@plt+0x2131>
  4033fb:	mov    rax,QWORD PTR [rbx+0x28]
  4033ff:	sub    rax,QWORD PTR [rbx+0x50]
  403403:	sar    rax,0x3
  403407:	imul   eax,eax,0xcccccccd
  40340d:	cmp    eax,0x4e1e
  403412:	jg     403421 <__sprintf_chk@plt+0x2131>
  403414:	mov    esi,0x4e20
  403419:	mov    rdi,rbx
  40341c:	call   405ce0 <__sprintf_chk@plt+0x49f0>
  403421:	mov    rax,QWORD PTR [rbx+0x20]
  403425:	mov    QWORD PTR [rbx+0xb0],0x0
  403430:	mov    rdi,rbx
  403433:	mov    QWORD PTR [rbx+0xa8],0x0
  40343e:	call   QWORD PTR [rax+0x98]
  403444:	mov    edi,0x1
  403449:	call   401280 <exit@plt>
  40344e:	xchg   ax,ax
  403450:	push   r13
  403452:	push   r12
  403454:	mov    r13,rdi
  403457:	push   rbp
  403458:	push   rbx
  403459:	mov    r12,rdx
  40345c:	mov    rbx,rcx
  40345f:	sub    rsp,0x8
  403463:	mov    rbp,QWORD PTR [rdi+0x20]
  403467:	mov    rdi,QWORD PTR [rbp+0x18]
  40346b:	call   QWORD PTR [rbp+0x10]
  40346e:	test   rax,rax
  403471:	jne    403488 <__sprintf_chk@plt+0x2198>
  403473:	test   rbx,rbx
  403476:	je     403488 <__sprintf_chk@plt+0x2198>
  403478:	mov    esi,0x4
  40347d:	mov    rdi,r13
  403480:	call   403380 <__sprintf_chk@plt+0x2090>
  403485:	nop    DWORD PTR [rax]
  403488:	sub    rbx,r12
  40348b:	add    QWORD PTR [rbp+0x78],rbx
  40348f:	add    rsp,0x8
  403493:	pop    rbx
  403494:	pop    rbp
  403495:	pop    r12
  403497:	pop    r13
  403499:	ret    
  40349a:	nop    WORD PTR [rax+rax*1+0x0]
  4034a0:	push   r14
  4034a2:	push   r13
  4034a4:	mov    r14,rdi
  4034a7:	push   r12
  4034a9:	push   rbp
  4034aa:	mov    r13,rdx
  4034ad:	push   rbx
  4034ae:	lea    ebx,[rsi-0x1]
  4034b1:	mov    ebp,esi
  4034b3:	xor    edx,edx
  4034b5:	xor    esi,esi
  4034b7:	lea    ecx,[rbx*8+0x30]
  4034be:	movsxd r12,ebx
  4034c1:	movsxd rcx,ecx
  4034c4:	call   403450 <__sprintf_chk@plt+0x2160>
  4034c9:	mov    rdx,QWORD PTR [r14+0x20]
  4034cd:	mov    rcx,QWORD PTR [rdx+0x28]
  4034d1:	mov    QWORD PTR [rax],rcx
  4034d4:	mov    QWORD PTR [rdx+0x28],rax
  4034d8:	movzx  edx,BYTE PTR [rdx+0x20]
  4034dc:	mov    BYTE PTR [rax+0x8],0x6
  4034e0:	mov    BYTE PTR [rax+0xa],0x0
  4034e4:	mov    QWORD PTR [rax+0x18],r13
  4034e8:	mov    BYTE PTR [rax+0xb],bpl
  4034ec:	and    edx,0x3
  4034ef:	test   ebp,ebp
  4034f1:	mov    BYTE PTR [rax+0x9],dl
  4034f4:	lea    rdx,[rax+r12*8+0x28]
  4034f9:	je     403513 <__sprintf_chk@plt+0x2223>
  4034fb:	nop    DWORD PTR [rax+rax*1+0x0]
  403500:	sub    ebx,0x1
  403503:	mov    QWORD PTR [rdx],0x0
  40350a:	sub    rdx,0x8
  40350e:	cmp    ebx,0xffffffff
  403511:	jne    403500 <__sprintf_chk@plt+0x2210>
  403513:	pop    rbx
  403514:	pop    rbp
  403515:	pop    r12
  403517:	pop    r13
  403519:	pop    r14
  40351b:	ret    
  40351c:	nop    DWORD PTR [rax+0x0]
  403520:	push   rbp
  403521:	push   rbx
  403522:	mov    rbx,rsi
  403525:	xor    ecx,ecx
  403527:	mov    rbp,rdi
  40352a:	sub    rsp,0x8
  40352e:	movsxd rax,DWORD PTR [rsi+0x5c]
  403532:	mov    rsi,QWORD PTR [rsi+0x50]
  403536:	lea    rdx,[rax+rax*4]
  40353a:	shl    rdx,0x3
  40353e:	call   403450 <__sprintf_chk@plt+0x2160>
  403543:	movsxd rdx,DWORD PTR [rbx+0x58]
  403547:	mov    rsi,QWORD PTR [rbx+0x40]
  40354b:	add    rsp,0x8
  40354f:	mov    rdi,rbp
  403552:	xor    ecx,ecx
  403554:	pop    rbx
  403555:	pop    rbp
  403556:	shl    rdx,0x4
  40355a:	jmp    403450 <__sprintf_chk@plt+0x2160>
  40355f:	nop
  403560:	push   r12
  403562:	push   rbp
  403563:	mov    rbp,rsi
  403566:	push   rbx
  403567:	mov    r12,QWORD PTR [rdi+0x20]
  40356b:	mov    rbx,rdi
  40356e:	xchg   ax,ax
  403570:	mov    rsi,QWORD PTR [rbx+0x98]
  403577:	test   rsi,rsi
  40357a:	je     4035d7 <__sprintf_chk@plt+0x22e7>
  40357c:	mov    rdx,QWORD PTR [rsi+0x10]
  403580:	cmp    rdx,rbp
  403583:	jb     4035d7 <__sprintf_chk@plt+0x22e7>
  403585:	mov    rax,QWORD PTR [rsi]
  403588:	mov    QWORD PTR [rbx+0x98],rax
  40358f:	movzx  eax,BYTE PTR [r12+0x20]
  403595:	xor    eax,0x3
  403598:	and    al,BYTE PTR [rsi+0x9]
  40359b:	test   al,0x3
  40359d:	je     4035e0 <__sprintf_chk@plt+0x22f0>
  40359f:	lea    rax,[rsi+0x18]
  4035a3:	cmp    rdx,rax
  4035a6:	je     4035bc <__sprintf_chk@plt+0x22cc>
  4035a8:	mov    rdx,QWORD PTR [rsi+0x18]
  4035ac:	mov    rax,QWORD PTR [rsi+0x20]
  4035b0:	mov    QWORD PTR [rax+0x18],rdx
  4035b4:	mov    rdx,QWORD PTR [rsi+0x18]
  4035b8:	mov    QWORD PTR [rdx+0x20],rax
  4035bc:	xor    ecx,ecx
  4035be:	mov    edx,0x28
  4035c3:	mov    rdi,rbx
  4035c6:	call   403450 <__sprintf_chk@plt+0x2160>
  4035cb:	mov    rsi,QWORD PTR [rbx+0x98]
  4035d2:	test   rsi,rsi
  4035d5:	jne    40357c <__sprintf_chk@plt+0x228c>
  4035d7:	pop    rbx
  4035d8:	pop    rbp
  4035d9:	pop    r12
  4035db:	ret    
  4035dc:	nop    DWORD PTR [rax+0x0]
  4035e0:	mov    rax,QWORD PTR [rsi+0x20]
  4035e4:	mov    rcx,QWORD PTR [rsi+0x18]
  4035e8:	mov    QWORD PTR [rax+0x18],rcx
  4035ec:	mov    rcx,QWORD PTR [rsi+0x18]
  4035f0:	mov    QWORD PTR [rcx+0x20],rax
  4035f4:	mov    rax,QWORD PTR [rdx]
  4035f7:	mov    ecx,DWORD PTR [rdx+0x8]
  4035fa:	mov    QWORD PTR [rsi+0x18],rax
  4035fe:	lea    rax,[rsi+0x18]
  403602:	mov    DWORD PTR [rsi+0x20],ecx
  403605:	mov    QWORD PTR [rsi+0x10],rax
  403609:	mov    rax,QWORD PTR [rbx+0x20]
  40360d:	mov    rdx,QWORD PTR [rax+0x28]
  403611:	mov    QWORD PTR [rsi],rdx
  403614:	mov    QWORD PTR [rax+0x28],rsi
  403618:	movzx  edx,BYTE PTR [rsi+0x9]
  40361c:	test   dl,0x7
  40361f:	jne    403570 <__sprintf_chk@plt+0x2280>
  403625:	cmp    BYTE PTR [rax+0x21],0x1
  403629:	je     403640 <__sprintf_chk@plt+0x2350>
  40362b:	movzx  eax,BYTE PTR [rax+0x20]
  40362f:	and    edx,0xfffffff8
  403632:	and    eax,0x3
  403635:	or     edx,eax
  403637:	mov    BYTE PTR [rsi+0x9],dl
  40363a:	jmp    403570 <__sprintf_chk@plt+0x2280>
  40363f:	nop
  403640:	or     edx,0x4
  403643:	cmp    ecx,0x3
  403646:	mov    BYTE PTR [rsi+0x9],dl
  403649:	jle    403570 <__sprintf_chk@plt+0x2280>
  40364f:	mov    rax,QWORD PTR [rsi+0x18]
  403653:	test   BYTE PTR [rax+0x9],0x3
  403657:	je     403570 <__sprintf_chk@plt+0x2280>
  40365d:	mov    rdi,QWORD PTR [rbx+0x20]
  403661:	cmp    BYTE PTR [rdi+0x21],0x1
  403665:	je     40367b <__sprintf_chk@plt+0x238b>
  403667:	movzx  eax,BYTE PTR [rdi+0x20]
  40366b:	and    edx,0xfffffff8
  40366e:	and    eax,0x3
  403671:	or     edx,eax
  403673:	mov    BYTE PTR [rsi+0x9],dl
  403676:	jmp    403570 <__sprintf_chk@plt+0x2280>
  40367b:	mov    rsi,rax
  40367e:	call   401a50 <__sprintf_chk@plt+0x760>
  403683:	jmp    403570 <__sprintf_chk@plt+0x2280>
  403688:	nop    DWORD PTR [rax+rax*1+0x0]
  403690:	push   r15
  403692:	push   r14
  403694:	mov    r15,rsi
  403697:	push   r13
  403699:	push   r12
  40369b:	lea    r13,[rip+0x129fe]        # 4160a0 <__sprintf_chk@plt+0x14db0>
  4036a2:	push   rbp
  4036a3:	push   rbx
  4036a4:	mov    rbp,rdi
  4036a7:	mov    r12,rdx
  4036aa:	sub    rsp,0x18
  4036ae:	mov    r14,QWORD PTR [rdi+0x20]
  4036b2:	movzx  eax,BYTE PTR [r14+0x20]
  4036b7:	xor    eax,0x3
  4036ba:	mov    BYTE PTR [rsp+0xf],al
  4036be:	jmp    4036d7 <__sprintf_chk@plt+0x23e7>
  4036c0:	movzx  edx,BYTE PTR [r14+0x20]
  4036c5:	and    eax,0xfffffff8
  4036c8:	mov    r15,rbx
  4036cb:	and    edx,0x3
  4036ce:	or     eax,edx
  4036d0:	mov    BYTE PTR [rbx+0x9],al
  4036d3:	sub    r12,0x1
  4036d7:	mov    rbx,QWORD PTR [r15]
  4036da:	test   rbx,rbx
  4036dd:	je     403928 <__sprintf_chk@plt+0x2638>
  4036e3:	test   r12,r12
  4036e6:	je     403928 <__sprintf_chk@plt+0x2638>
  4036ec:	cmp    BYTE PTR [rbx+0x8],0x8
  4036f0:	je     403908 <__sprintf_chk@plt+0x2618>
  4036f6:	movzx  eax,BYTE PTR [rbx+0x9]
  4036fa:	mov    edx,eax
  4036fc:	xor    edx,0x3
  4036ff:	test   BYTE PTR [rsp+0xf],dl
  403703:	jne    4036c0 <__sprintf_chk@plt+0x23d0>
  403705:	mov    rax,QWORD PTR [rbx]
  403708:	mov    QWORD PTR [r15],rax
  40370b:	cmp    rbx,QWORD PTR [r14+0x28]
  40370f:	je     403940 <__sprintf_chk@plt+0x2650>
  403715:	movzx  eax,BYTE PTR [rbx+0x8]
  403719:	sub    eax,0x4
  40371c:	cmp    al,0x6
  40371e:	ja     4036d3 <__sprintf_chk@plt+0x23e3>
  403720:	movzx  eax,al
  403723:	movsxd rax,DWORD PTR [r13+rax*4+0x0]
  403728:	add    rax,r13
  40372b:	jmp    rax
  40372d:	nop    DWORD PTR [rax]
  403730:	movsxd rdx,DWORD PTR [rbx+0x50]
  403734:	mov    rsi,QWORD PTR [rbx+0x18]
  403738:	xor    ecx,ecx
  40373a:	mov    rdi,rbp
  40373d:	shl    rdx,0x2
  403741:	call   403450 <__sprintf_chk@plt+0x2160>
  403746:	movsxd rdx,DWORD PTR [rbx+0x58]
  40374a:	mov    rsi,QWORD PTR [rbx+0x20]
  40374e:	xor    ecx,ecx
  403750:	mov    rdi,rbp
  403753:	shl    rdx,0x3
  403757:	call   403450 <__sprintf_chk@plt+0x2160>
  40375c:	movsxd rdx,DWORD PTR [rbx+0x4c]
  403760:	mov    rsi,QWORD PTR [rbx+0x10]
  403764:	xor    ecx,ecx
  403766:	mov    rdi,rbp
  403769:	shl    rdx,0x4
  40376d:	call   403450 <__sprintf_chk@plt+0x2160>
  403772:	movsxd rdx,DWORD PTR [rbx+0x54]
  403776:	mov    rsi,QWORD PTR [rbx+0x28]
  40377a:	xor    ecx,ecx
  40377c:	mov    rdi,rbp
  40377f:	shl    rdx,0x2
  403783:	call   403450 <__sprintf_chk@plt+0x2160>
  403788:	movsxd rdx,DWORD PTR [rbx+0x5c]
  40378c:	mov    rsi,QWORD PTR [rbx+0x30]
  403790:	xor    ecx,ecx
  403792:	mov    rdi,rbp
  403795:	shl    rdx,0x4
  403799:	call   403450 <__sprintf_chk@plt+0x2160>
  40379e:	movsxd rdx,DWORD PTR [rbx+0x48]
  4037a2:	mov    rsi,QWORD PTR [rbx+0x38]
  4037a6:	xor    ecx,ecx
  4037a8:	mov    rdi,rbp
  4037ab:	shl    rdx,0x3
  4037af:	call   403450 <__sprintf_chk@plt+0x2160>
  4037b4:	xor    ecx,ecx
  4037b6:	mov    edx,0x78
  4037bb:	mov    rsi,rbx
  4037be:	mov    rdi,rbp
  4037c1:	call   403450 <__sprintf_chk@plt+0x2160>
  4037c6:	jmp    4036d3 <__sprintf_chk@plt+0x23e3>
  4037cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4037d0:	mov    rsi,QWORD PTR [rbx+0x40]
  4037d4:	mov    rdi,rbx
  4037d7:	call   403560 <__sprintf_chk@plt+0x2270>
  4037dc:	mov    rsi,rbx
  4037df:	mov    rdi,rbp
  4037e2:	call   403520 <__sprintf_chk@plt+0x2230>
  4037e7:	xor    ecx,ecx
  4037e9:	mov    edx,0xb8
  4037ee:	mov    rsi,rbx
  4037f1:	mov    rdi,rbp
  4037f4:	call   403450 <__sprintf_chk@plt+0x2160>
  4037f9:	jmp    4036d3 <__sprintf_chk@plt+0x23e3>
  4037fe:	xchg   ax,ax
  403800:	mov    rax,QWORD PTR [rbx+0x20]
  403804:	xor    ecx,ecx
  403806:	mov    rsi,rbx
  403809:	mov    rdi,rbp
  40380c:	lea    rdx,[rax+0x28]
  403810:	call   403450 <__sprintf_chk@plt+0x2160>
  403815:	jmp    4036d3 <__sprintf_chk@plt+0x23e3>
  40381a:	nop    WORD PTR [rax+rax*1+0x0]
  403820:	cmp    BYTE PTR [rbx+0xa],0x0
  403824:	movzx  eax,BYTE PTR [rbx+0xb]
  403828:	jne    403950 <__sprintf_chk@plt+0x2660>
  40382e:	lea    edx,[rax*8+0x28]
  403835:	movsxd rdx,edx
  403838:	xor    ecx,ecx
  40383a:	mov    rsi,rbx
  40383d:	mov    rdi,rbp
  403840:	call   403450 <__sprintf_chk@plt+0x2160>
  403845:	jmp    4036d3 <__sprintf_chk@plt+0x23e3>
  40384a:	nop    WORD PTR [rax+rax*1+0x0]
  403850:	mov    rsi,QWORD PTR [rbx+0x20]
  403854:	lea    rax,[rip+0x12e05]        # 416660 <__sprintf_chk@plt+0x15370>
  40385b:	cmp    rsi,rax
  40385e:	je     403878 <__sprintf_chk@plt+0x2588>
  403860:	movzx  edx,BYTE PTR [rbx+0xb]
  403864:	mov    eax,0x28
  403869:	xor    ecx,ecx
  40386b:	mov    rdi,rbp
  40386e:	shlx   rdx,rax,rdx
  403873:	call   403450 <__sprintf_chk@plt+0x2160>
  403878:	movsxd rdx,DWORD PTR [rbx+0x38]
  40387c:	mov    rsi,QWORD PTR [rbx+0x18]
  403880:	xor    ecx,ecx
  403882:	mov    rdi,rbp
  403885:	shl    rdx,0x4
  403889:	call   403450 <__sprintf_chk@plt+0x2160>
  40388e:	xor    ecx,ecx
  403890:	mov    edx,0x40
  403895:	mov    rsi,rbx
  403898:	mov    rdi,rbp
  40389b:	call   403450 <__sprintf_chk@plt+0x2160>
  4038a0:	jmp    4036d3 <__sprintf_chk@plt+0x23e3>
  4038a5:	nop    DWORD PTR [rax]
  4038a8:	mov    rax,QWORD PTR [rbp+0x20]
  4038ac:	xor    ecx,ecx
  4038ae:	mov    rsi,rbx
  4038b1:	mov    rdi,rbp
  4038b4:	sub    DWORD PTR [rax+0x8],0x1
  4038b8:	mov    rax,QWORD PTR [rbx+0x10]
  4038bc:	lea    rdx,[rax+0x19]
  4038c0:	call   403450 <__sprintf_chk@plt+0x2160>
  4038c5:	jmp    4036d3 <__sprintf_chk@plt+0x23e3>
  4038ca:	nop    WORD PTR [rax+rax*1+0x0]
  4038d0:	lea    rax,[rbx+0x18]
  4038d4:	cmp    QWORD PTR [rbx+0x10],rax
  4038d8:	je     4038ee <__sprintf_chk@plt+0x25fe>
  4038da:	mov    rdx,QWORD PTR [rbx+0x18]
  4038de:	mov    rax,QWORD PTR [rbx+0x20]
  4038e2:	mov    QWORD PTR [rax+0x18],rdx
  4038e6:	mov    rdx,QWORD PTR [rbx+0x18]
  4038ea:	mov    QWORD PTR [rdx+0x20],rax
  4038ee:	xor    ecx,ecx
  4038f0:	mov    edx,0x28
  4038f5:	mov    rsi,rbx
  4038f8:	mov    rdi,rbp
  4038fb:	call   403450 <__sprintf_chk@plt+0x2160>
  403900:	jmp    4036d3 <__sprintf_chk@plt+0x23e3>
  403905:	nop    DWORD PTR [rax]
  403908:	lea    rsi,[rbx+0x98]
  40390f:	mov    rdx,0xfffffffffffffffd
  403916:	mov    rdi,rbp
  403919:	call   403690 <__sprintf_chk@plt+0x23a0>
  40391e:	jmp    4036f6 <__sprintf_chk@plt+0x2406>
  403923:	nop    DWORD PTR [rax+rax*1+0x0]
  403928:	add    rsp,0x18
  40392c:	mov    rax,r15
  40392f:	pop    rbx
  403930:	pop    rbp
  403931:	pop    r12
  403933:	pop    r13
  403935:	pop    r14
  403937:	pop    r15
  403939:	ret    
  40393a:	nop    WORD PTR [rax+rax*1+0x0]
  403940:	mov    rax,QWORD PTR [rbx]
  403943:	mov    QWORD PTR [r14+0x28],rax
  403947:	jmp    403715 <__sprintf_chk@plt+0x2425>
  40394c:	nop    DWORD PTR [rax+0x0]
  403950:	shl    eax,0x4
  403953:	lea    edx,[rax+0x28]
  403956:	jmp    403835 <__sprintf_chk@plt+0x2545>
  40395b:	nop    DWORD PTR [rax+rax*1+0x0]
  403960:	push   r15
  403962:	push   r14
  403964:	mov    r14,0xfffffffffffffffd
  40396b:	push   r13
  40396d:	push   r12
  40396f:	mov    r13,rdi
  403972:	push   rbp
  403973:	push   rbx
  403974:	xor    ebp,ebp
  403976:	xor    ebx,ebx
  403978:	sub    rsp,0x8
  40397c:	mov    rsi,QWORD PTR [rdi+0x40]
  403980:	mov    r15,QWORD PTR [rdi+0x20]
  403984:	call   403560 <__sprintf_chk@plt+0x2270>
  403989:	mov    r12,QWORD PTR [r13+0x20]
  40398d:	mov    rdx,0xfffffffffffffffd
  403994:	mov    rdi,r13
  403997:	lea    rsi,[r12+0x28]
  40399c:	mov    BYTE PTR [r12+0x20],0x43
  4039a2:	call   403690 <__sprintf_chk@plt+0x23a0>
  4039a7:	mov    eax,DWORD PTR [r12+0xc]
  4039ac:	test   eax,eax
  4039ae:	jle    4039d0 <__sprintf_chk@plt+0x26e0>
  4039b0:	mov    rsi,rbp
  4039b3:	add    rsi,QWORD PTR [r12]
  4039b7:	mov    rdx,r14
  4039ba:	mov    rdi,r13
  4039bd:	add    ebx,0x1
  4039c0:	add    rbp,0x8
  4039c4:	call   403690 <__sprintf_chk@plt+0x23a0>
  4039c9:	cmp    ebx,DWORD PTR [r12+0xc]
  4039ce:	jl     4039b0 <__sprintf_chk@plt+0x26c0>
  4039d0:	mov    rax,QWORD PTR [r13+0x20]
  4039d4:	mov    rdi,r13
  4039d7:	xor    ecx,ecx
  4039d9:	movsxd rdx,DWORD PTR [rax+0xc]
  4039dd:	mov    rsi,QWORD PTR [rax]
  4039e0:	shl    rdx,0x3
  4039e4:	call   403450 <__sprintf_chk@plt+0x2160>
  4039e9:	mov    rdx,QWORD PTR [r15+0x68]
  4039ed:	mov    rsi,QWORD PTR [r15+0x58]
  4039f1:	xor    ecx,ecx
  4039f3:	mov    rdi,r13
  4039f6:	call   403450 <__sprintf_chk@plt+0x2160>
  4039fb:	mov    rsi,r13
  4039fe:	mov    QWORD PTR [r15+0x58],rax
  403a02:	mov    rdi,r13
  403a05:	mov    QWORD PTR [r15+0x68],0x0
  403a0d:	call   403520 <__sprintf_chk@plt+0x2230>
  403a12:	mov    rdi,QWORD PTR [r15+0x18]
  403a16:	mov    rax,QWORD PTR [r15+0x10]
  403a1a:	add    rsp,0x8
  403a1e:	pop    rbx
  403a1f:	mov    rsi,r13
  403a22:	xor    ecx,ecx
  403a24:	mov    edx,0x268
  403a29:	pop    rbp
  403a2a:	pop    r12
  403a2c:	pop    r13
  403a2e:	pop    r14
  403a30:	pop    r15
  403a32:	jmp    rax
  403a34:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  403a3f:	nop
  403a40:	push   rbx
  403a41:	mov    esi,DWORD PTR [rdi+0x5c]
  403a44:	mov    rbx,rdi
  403a47:	cmp    esi,0x4e20
  403a4d:	jg     403a90 <__sprintf_chk@plt+0x27a0>
  403a4f:	add    esi,esi
  403a51:	call   405ce0 <__sprintf_chk@plt+0x49f0>
  403a56:	cmp    DWORD PTR [rbx+0x5c],0x4e20
  403a5d:	jg     403a70 <__sprintf_chk@plt+0x2780>
  403a5f:	mov    rax,QWORD PTR [rbx+0x28]
  403a63:	add    rax,0x28
  403a67:	mov    QWORD PTR [rbx+0x28],rax
  403a6b:	pop    rbx
  403a6c:	ret    
  403a6d:	nop    DWORD PTR [rax]
  403a70:	lea    rsi,[rip+0x12c87]        # 4166fe <__sprintf_chk@plt+0x1540e>
  403a77:	mov    rdi,rbx
  403a7a:	xor    eax,eax
  403a7c:	call   405730 <__sprintf_chk@plt+0x4440>
  403a81:	mov    rax,QWORD PTR [rbx+0x28]
  403a85:	add    rax,0x28
  403a89:	mov    QWORD PTR [rbx+0x28],rax
  403a8d:	pop    rbx
  403a8e:	ret    
  403a8f:	nop
  403a90:	mov    esi,0x5
  403a95:	call   403380 <__sprintf_chk@plt+0x2090>
  403a9a:	nop    WORD PTR [rax+rax*1+0x0]
  403aa0:	push   r15
  403aa2:	push   r14
  403aa4:	push   r13
  403aa6:	push   r12
  403aa8:	mov    r12d,edx
  403aab:	push   rbp
  403aac:	push   rbx
  403aad:	mov    rbp,rsi
  403ab0:	mov    rbx,rdi
  403ab3:	sub    rsp,0x8
  403ab7:	mov    r15d,DWORD PTR [rsi+0x8]
  403abb:	cmp    r15d,0x6
  403abf:	je     403cf0 <__sprintf_chk@plt+0x2a00>
  403ac5:	mov    rsi,QWORD PTR [rsi]
  403ac8:	lea    rdi,[rdi+0x20]
  403acc:	mov    ecx,0x10
  403ad1:	mov    edx,r15d
  403ad4:	mov    r13,rbp
  403ad7:	call   4028b0 <__sprintf_chk@plt+0x15c0>
  403adc:	sub    r13,QWORD PTR [rbx+0x40]
  403ae0:	cmp    DWORD PTR [rax+0x8],0x6
  403ae4:	mov    r14,rax
  403ae7:	je     403b0f <__sprintf_chk@plt+0x281f>
  403ae9:	lea    rax,[rip+0x192b0]        # 41cda0 <__sprintf_chk@plt+0x1bab0>
  403af0:	movsxd r8,r15d
  403af3:	lea    rdx,[rip+0x1339b]        # 416e95 <__sprintf_chk@plt+0x15ba5>
  403afa:	lea    rsi,[rip+0x12be2]        # 4166e3 <__sprintf_chk@plt+0x153f3>
  403b01:	mov    rdi,rbx
  403b04:	mov    rcx,QWORD PTR [rax+r8*8]
  403b08:	xor    eax,eax
  403b0a:	call   405730 <__sprintf_chk@plt+0x4440>
  403b0f:	mov    rsi,QWORD PTR [rbx+0x10]
  403b13:	cmp    rbp,rsi
  403b16:	mov    rax,rsi
  403b19:	jae    403b37 <__sprintf_chk@plt+0x2847>
  403b1b:	nop    DWORD PTR [rax+rax*1+0x0]
  403b20:	mov    rdx,QWORD PTR [rax-0x10]
  403b24:	sub    rax,0x10
  403b28:	mov    QWORD PTR [rax+0x10],rdx
  403b2c:	mov    edx,DWORD PTR [rax+0x8]
  403b2f:	mov    DWORD PTR [rax+0x18],edx
  403b32:	cmp    rbp,rax
  403b35:	jb     403b20 <__sprintf_chk@plt+0x2830>
  403b37:	mov    rcx,QWORD PTR [rbx+0x38]
  403b3b:	mov    rax,rcx
  403b3e:	sub    rax,rsi
  403b41:	cmp    rax,0x10
  403b45:	jle    403cd8 <__sprintf_chk@plt+0x29e8>
  403b4b:	mov    rdx,QWORD PTR [rbx+0x40]
  403b4f:	mov    rax,QWORD PTR [r14]
  403b52:	add    QWORD PTR [rbx+0x10],0x10
  403b57:	lea    rbp,[rdx+r13*1]
  403b5b:	mov    QWORD PTR [rbp+0x0],rax
  403b5f:	mov    eax,DWORD PTR [r14+0x8]
  403b63:	mov    DWORD PTR [rbp+0x8],eax
  403b66:	mov    rsi,QWORD PTR [rbp+0x0]
  403b6a:	mov    rax,QWORD PTR [rbx+0x28]
  403b6e:	mov    r13,rbp
  403b71:	mov    rdi,QWORD PTR [rbx+0x30]
  403b75:	sub    r13,rdx
  403b78:	mov    QWORD PTR [rax+0x18],rdi
  403b7c:	cmp    BYTE PTR [rsi+0xa],0x0
  403b80:	jne    403c48 <__sprintf_chk@plt+0x2958>
  403b86:	mov    r14,QWORD PTR [rsi+0x20]
  403b8a:	mov    rdi,QWORD PTR [rbx+0x10]
  403b8e:	movzx  esi,BYTE PTR [r14+0x73]
  403b93:	sub    rcx,rdi
  403b96:	mov    r8d,esi
  403b99:	shl    r8d,0x4
  403b9d:	movsxd r8,r8d
  403ba0:	cmp    rcx,r8
  403ba3:	jle    403e00 <__sprintf_chk@plt+0x2b10>
  403ba9:	add    r13,rdx
  403bac:	cmp    BYTE PTR [r14+0x72],0x0
  403bb1:	jne    403d30 <__sprintf_chk@plt+0x2a40>
  403bb7:	movzx  edx,BYTE PTR [r14+0x71]
  403bbc:	lea    rbp,[r13+0x10]
  403bc0:	shl    rdx,0x4
  403bc4:	add    rdx,rbp
  403bc7:	cmp    rdx,rdi
  403bca:	jb     403d00 <__sprintf_chk@plt+0x2a10>
  403bd0:	cmp    QWORD PTR [rbx+0x48],rax
  403bd4:	je     403e38 <__sprintf_chk@plt+0x2b48>
  403bda:	add    rax,0x28
  403bde:	mov    QWORD PTR [rbx+0x28],rax
  403be2:	mov    QWORD PTR [rax+0x8],r13
  403be6:	mov    QWORD PTR [rax],rbp
  403be9:	mov    QWORD PTR [rbx+0x18],rbp
  403bed:	movzx  edx,BYTE PTR [r14+0x73]
  403bf2:	mov    rcx,QWORD PTR [r14+0x18]
  403bf6:	shl    rdx,0x4
  403bfa:	add    rdx,rbp
  403bfd:	mov    QWORD PTR [rax+0x10],rdx
  403c01:	mov    QWORD PTR [rbx+0x30],rcx
  403c05:	mov    DWORD PTR [rax+0x24],0x0
  403c0c:	mov    DWORD PTR [rax+0x20],r12d
  403c10:	mov    rax,QWORD PTR [rbx+0x10]
  403c14:	cmp    rdx,rax
  403c17:	jbe    403c30 <__sprintf_chk@plt+0x2940>
  403c19:	nop    DWORD PTR [rax+0x0]
  403c20:	mov    DWORD PTR [rax+0x8],0x0
  403c27:	add    rax,0x10
  403c2b:	cmp    rdx,rax
  403c2e:	ja     403c20 <__sprintf_chk@plt+0x2930>
  403c30:	mov    QWORD PTR [rbx+0x10],rdx
  403c34:	xor    eax,eax
  403c36:	add    rsp,0x8
  403c3a:	pop    rbx
  403c3b:	pop    rbp
  403c3c:	pop    r12
  403c3e:	pop    r13
  403c40:	pop    r14
  403c42:	pop    r15
  403c44:	ret    
  403c45:	nop    DWORD PTR [rax]
  403c48:	sub    rcx,QWORD PTR [rbx+0x10]
  403c4c:	cmp    rcx,0x140
  403c53:	jle    403d10 <__sprintf_chk@plt+0x2a20>
  403c59:	cmp    QWORD PTR [rbx+0x48],rax
  403c5d:	je     403e27 <__sprintf_chk@plt+0x2b37>
  403c63:	add    rax,0x28
  403c67:	mov    QWORD PTR [rbx+0x28],rax
  403c6b:	mov    rcx,rax
  403c6e:	add    r13,QWORD PTR [rbx+0x40]
  403c72:	mov    rdi,QWORD PTR [rbx+0x10]
  403c76:	lea    rdx,[rdi+0x140]
  403c7d:	mov    rdi,rbx
  403c80:	mov    QWORD PTR [rax+0x8],r13
  403c84:	add    r13,0x10
  403c88:	mov    QWORD PTR [rax],r13
  403c8b:	mov    QWORD PTR [rbx+0x18],r13
  403c8f:	mov    QWORD PTR [rax+0x10],rdx
  403c93:	mov    DWORD PTR [rax+0x20],r12d
  403c97:	mov    rax,QWORD PTR [rcx+0x8]
  403c9b:	mov    rax,QWORD PTR [rax]
  403c9e:	call   QWORD PTR [rax+0x20]
  403ca1:	movsxd rdx,eax
  403ca4:	mov    eax,0x2
  403ca9:	test   edx,edx
  403cab:	js     403c36 <__sprintf_chk@plt+0x2946>
  403cad:	mov    rsi,QWORD PTR [rbx+0x10]
  403cb1:	shl    rdx,0x4
  403cb5:	mov    rdi,rbx
  403cb8:	sub    rsi,rdx
  403cbb:	call   401930 <__sprintf_chk@plt+0x640>
  403cc0:	add    rsp,0x8
  403cc4:	mov    eax,0x1
  403cc9:	pop    rbx
  403cca:	pop    rbp
  403ccb:	pop    r12
  403ccd:	pop    r13
  403ccf:	pop    r14
  403cd1:	pop    r15
  403cd3:	ret    
  403cd4:	nop    DWORD PTR [rax+0x0]
  403cd8:	mov    esi,0x1
  403cdd:	mov    rdi,rbx
  403ce0:	call   406720 <__sprintf_chk@plt+0x5430>
  403ce5:	mov    rcx,QWORD PTR [rbx+0x38]
  403ce9:	jmp    403b4b <__sprintf_chk@plt+0x285b>
  403cee:	xchg   ax,ax
  403cf0:	mov    rcx,QWORD PTR [rdi+0x38]
  403cf4:	mov    rdx,QWORD PTR [rdi+0x40]
  403cf8:	jmp    403b66 <__sprintf_chk@plt+0x2876>
  403cfd:	nop    DWORD PTR [rax]
  403d00:	mov    QWORD PTR [rbx+0x10],rdx
  403d04:	jmp    403bd0 <__sprintf_chk@plt+0x28e0>
  403d09:	nop    DWORD PTR [rax+0x0]
  403d10:	mov    esi,0x14
  403d15:	mov    rdi,rbx
  403d18:	call   406720 <__sprintf_chk@plt+0x5430>
  403d1d:	mov    rax,QWORD PTR [rbx+0x28]
  403d21:	cmp    QWORD PTR [rbx+0x48],rax
  403d25:	jne    403c63 <__sprintf_chk@plt+0x2973>
  403d2b:	jmp    403e27 <__sprintf_chk@plt+0x2b37>
  403d30:	mov    r10,rdi
  403d33:	movzx  r9d,BYTE PTR [r14+0x71]
  403d38:	sub    r10,r13
  403d3b:	sar    r10,0x4
  403d3f:	lea    esi,[r10-0x1]
  403d43:	cmp    esi,r9d
  403d46:	jge    403e45 <__sprintf_chk@plt+0x2b55>
  403d4c:	mov    r8d,r9d
  403d4f:	lea    rdx,[rdi+0x8]
  403d53:	sub    r8d,r10d
  403d56:	mov    rcx,r8
  403d59:	shl    rcx,0x4
  403d5d:	lea    rcx,[rdi+rcx*1+0x18]
  403d62:	nop    WORD PTR [rax+rax*1+0x0]
  403d68:	mov    DWORD PTR [rdx],0x0
  403d6e:	add    rdx,0x10
  403d72:	cmp    rdx,rcx
  403d75:	jne    403d68 <__sprintf_chk@plt+0x2a78>
  403d77:	lea    rdx,[r8+0x1]
  403d7b:	shl    rdx,0x4
  403d7f:	lea    rbp,[rdi+rdx*1]
  403d83:	lea    edx,[r9+0x1]
  403d87:	sub    edx,r10d
  403d8a:	mov    QWORD PTR [rbx+0x10],rbp
  403d8e:	add    esi,edx
  403d90:	movsxd rsi,esi
  403d93:	shl    rsi,0x4
  403d97:	test   r9d,r9d
  403d9a:	je     403bd0 <__sprintf_chk@plt+0x28e0>
  403da0:	lea    ecx,[r9-0x1]
  403da4:	mov    rdx,rbp
  403da7:	mov    rdi,rbp
  403daa:	sub    rdx,rsi
  403dad:	sub    rdi,rsi
  403db0:	shl    rcx,0x4
  403db4:	add    rdx,0x8
  403db8:	lea    rdi,[rdi+rcx*1+0x18]
  403dbd:	mov    rcx,rbp
  403dc0:	jmp    403dcc <__sprintf_chk@plt+0x2adc>
  403dc2:	nop    WORD PTR [rax+rax*1+0x0]
  403dc8:	mov    rcx,QWORD PTR [rbx+0x10]
  403dcc:	lea    rsi,[rcx+0x10]
  403dd0:	add    rdx,0x10
  403dd4:	mov    QWORD PTR [rbx+0x10],rsi
  403dd8:	mov    rsi,QWORD PTR [rdx-0x18]
  403ddc:	mov    QWORD PTR [rcx],rsi
  403ddf:	mov    esi,DWORD PTR [rdx-0x10]
  403de2:	mov    DWORD PTR [rcx+0x8],esi
  403de5:	mov    DWORD PTR [rdx-0x10],0x0
  403dec:	cmp    rdi,rdx
  403def:	jne    403dc8 <__sprintf_chk@plt+0x2ad8>
  403df1:	jmp    403bd0 <__sprintf_chk@plt+0x28e0>
  403df6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403e00:	mov    rdi,rbx
  403e03:	call   406720 <__sprintf_chk@plt+0x5430>
  403e08:	mov    rdx,QWORD PTR [rbx+0x40]
  403e0c:	mov    rdi,QWORD PTR [rbx+0x10]
  403e10:	mov    rax,QWORD PTR [rbx+0x28]
  403e14:	add    r13,rdx
  403e17:	cmp    BYTE PTR [r14+0x72],0x0
  403e1c:	je     403bb7 <__sprintf_chk@plt+0x28c7>
  403e22:	jmp    403d30 <__sprintf_chk@plt+0x2a40>
  403e27:	mov    rdi,rbx
  403e2a:	call   403a40 <__sprintf_chk@plt+0x2750>
  403e2f:	mov    rcx,QWORD PTR [rbx+0x28]
  403e33:	jmp    403c6e <__sprintf_chk@plt+0x297e>
  403e38:	mov    rdi,rbx
  403e3b:	call   403a40 <__sprintf_chk@plt+0x2750>
  403e40:	jmp    403be2 <__sprintf_chk@plt+0x28f2>
  403e45:	mov    rbp,rdi
  403e48:	jmp    403d90 <__sprintf_chk@plt+0x2aa0>
  403e4d:	nop    DWORD PTR [rax]
  403e50:	push   r15
  403e52:	push   r14
  403e54:	mov    r15,rdi
  403e57:	push   r13
  403e59:	push   r12
  403e5b:	push   rbp
  403e5c:	push   rbx
  403e5d:	mov    rbx,rsi
  403e60:	sub    rsp,0x98
  403e67:	mov    rax,QWORD PTR fs:0x28
  403e70:	mov    QWORD PTR [rsp+0x88],rax
  403e78:	xor    eax,eax
  403e7a:	movzx  eax,WORD PTR [rdi+0x60]
  403e7e:	add    eax,0x1
  403e81:	cmp    ax,0xc7
  403e85:	mov    WORD PTR [rdi+0x60],ax
  403e89:	jbe    403e9f <__sprintf_chk@plt+0x2baf>
  403e8b:	cmp    ax,0xc8
  403e8f:	je     405241 <__sprintf_chk@plt+0x3f51>
  403e95:	cmp    ax,0xe0
  403e99:	ja     4051e4 <__sprintf_chk@plt+0x3ef4>
  403e9f:	mov    rsi,rbx
  403ea2:	mov    rdi,r15
  403ea5:	call   403aa0 <__sprintf_chk@plt+0x27b0>
  403eaa:	test   eax,eax
  403eac:	je     403ef8 <__sprintf_chk@plt+0x2c08>
  403eae:	mov    rax,QWORD PTR [r15+0x20]
  403eb2:	sub    WORD PTR [r15+0x60],0x1
  403eb8:	mov    rdi,QWORD PTR [rax+0x70]
  403ebc:	cmp    QWORD PTR [rax+0x78],rdi
  403ec0:	jb     403eca <__sprintf_chk@plt+0x2bda>
  403ec2:	mov    rdi,r15
  403ec5:	call   408be0 <__sprintf_chk@plt+0x78f0>
  403eca:	mov    rax,QWORD PTR [rsp+0x88]
  403ed2:	xor    rax,QWORD PTR fs:0x28
  403edb:	jne    405697 <__sprintf_chk@plt+0x43a7>
  403ee1:	add    rsp,0x98
  403ee8:	pop    rbx
  403ee9:	pop    rbp
  403eea:	pop    r12
  403eec:	pop    r13
  403eee:	pop    r14
  403ef0:	pop    r15
  403ef2:	ret    
  403ef3:	nop    DWORD PTR [rax+rax*1+0x0]
  403ef8:	lea    rdi,[r15+0x98]
  403eff:	mov    rax,QWORD PTR [r15+0x28]
  403f03:	mov    r11,QWORD PTR [r15+0x18]
  403f07:	mov    r12,QWORD PTR [r15+0x30]
  403f0b:	lea    r14,[rip+0x121aa]        # 4160bc <__sprintf_chk@plt+0x14dcc>
  403f12:	mov    DWORD PTR [rsp+0x4c],0x1
  403f1a:	mov    QWORD PTR [rsp+0x40],rdi
  403f1f:	mov    r10,r15
  403f22:	mov    rax,QWORD PTR [rax+0x8]
  403f26:	mov    r13,r10
  403f29:	mov    rax,QWORD PTR [rax]
  403f2c:	mov    QWORD PTR [rsp+0x18],rax
  403f31:	mov    rax,QWORD PTR [rax+0x20]
  403f35:	mov    rax,QWORD PTR [rax+0x10]
  403f39:	mov    QWORD PTR [rsp+0x8],rax
  403f3e:	xchg   ax,ax
  403f40:	mov    r9d,DWORD PTR [r12]
  403f44:	lea    r15,[r12+0x4]
  403f49:	mov    ebp,r9d
  403f4c:	mov    eax,r9d
  403f4f:	shr    ebp,0x6
  403f52:	and    eax,0x3f
  403f55:	movzx  ecx,bpl
  403f59:	mov    rbp,rcx
  403f5c:	shl    rcx,0x4
  403f60:	cmp    eax,0x25
  403f63:	lea    rbx,[r11+rcx*1]
  403f67:	ja     4045e0 <__sprintf_chk@plt+0x32f0>
  403f6d:	movsxd rax,DWORD PTR [r14+rax*4]
  403f71:	add    rax,r14
  403f74:	jmp    rax
  403f76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403f80:	mov    eax,DWORD PTR [rbx+0x8]
  403f83:	lea    rbp,[rbx+0x20]
  403f87:	mov    QWORD PTR [r13+0x30],r15
  403f8b:	cmp    eax,0x3
  403f8e:	je     404e4c <__sprintf_chk@plt+0x3b5c>
  403f94:	cmp    eax,0x4
  403f97:	je     404e24 <__sprintf_chk@plt+0x3b34>
  403f9d:	lea    rsi,[rip+0x13084]        # 417028 <__sprintf_chk@plt+0x15d38>
  403fa4:	mov    DWORD PTR [rsp+0x20],r9d
  403fa9:	mov    QWORD PTR [rsp+0x10],r11
  403fae:	mov    rdi,r13
  403fb1:	xor    eax,eax
  403fb3:	call   405730 <__sprintf_chk@plt+0x4440>
  403fb8:	mov    r11,QWORD PTR [rsp+0x10]
  403fbd:	mov    r9d,DWORD PTR [rsp+0x20]
  403fc2:	vmovsd xmm0,QWORD PTR [rbx]
  403fc6:	vsubsd xmm0,xmm0,QWORD PTR [rbp+0x0]
  403fcb:	mov    DWORD PTR [rbx+0x8],0x3
  403fd2:	vmovsd QWORD PTR [rbx],xmm0
  403fd6:	shr    r9d,0xe
  403fda:	lea    r12,[r15+r9*4-0x7fffc]
  403fe2:	jmp    403f40 <__sprintf_chk@plt+0x2c50>
  403fe7:	nop    WORD PTR [rax+rax*1+0x0]
  403ff0:	mov    edx,r9d
  403ff3:	mov    ebx,r9d
  403ff6:	mov    rdi,r13
  403ff9:	shr    edx,0xe
  403ffc:	shr    ebx,0x17
  403fff:	mov    QWORD PTR [r13+0x30],r15
  404003:	and    edx,0x1ff
  404009:	mov    QWORD PTR [rsp+0x10],rcx
  40400e:	mov    esi,edx
  404010:	sub    esi,ebx
  404012:	add    esi,0x1
  404015:	call   406c50 <__sprintf_chk@plt+0x5960>
  40401a:	mov    rax,QWORD PTR [r13+0x20]
  40401e:	mov    rcx,QWORD PTR [rsp+0x10]
  404023:	mov    rdi,QWORD PTR [rax+0x70]
  404027:	cmp    QWORD PTR [rax+0x78],rdi
  40402b:	jae    405363 <__sprintf_chk@plt+0x4073>
  404031:	mov    r11,QWORD PTR [r13+0x18]
  404035:	mov    eax,ebx
  404037:	mov    r12,r15
  40403a:	shl    rax,0x4
  40403e:	add    rax,r11
  404041:	add    rcx,r11
  404044:	mov    rdx,QWORD PTR [rax]
  404047:	mov    eax,DWORD PTR [rax+0x8]
  40404a:	mov    QWORD PTR [rcx],rdx
  40404d:	mov    DWORD PTR [rcx+0x8],eax
  404050:	jmp    403f40 <__sprintf_chk@plt+0x2c50>
  404055:	nop    DWORD PTR [rax]
  404058:	shr    r9d,0x17
  40405c:	mov    ebp,r9d
  40405f:	shl    rbp,0x4
  404063:	add    rbp,r11
  404066:	mov    eax,DWORD PTR [rbp+0x8]
  404069:	cmp    eax,0x4
  40406c:	je     405310 <__sprintf_chk@plt+0x4020>
  404072:	cmp    eax,0x5
  404075:	mov    QWORD PTR [rsp+0x10],r11
  40407a:	jne    4051ee <__sprintf_chk@plt+0x3efe>
  404080:	mov    rdi,QWORD PTR [rbp+0x0]
  404084:	mov    r12,r15
  404087:	call   402730 <__sprintf_chk@plt+0x1440>
  40408c:	vxorpd xmm0,xmm0,xmm0
  404090:	mov    DWORD PTR [rbx+0x8],0x3
  404097:	mov    r11,QWORD PTR [rsp+0x10]
  40409c:	vcvtsi2sd xmm0,xmm0,eax
  4040a0:	vmovsd QWORD PTR [rbx],xmm0
  4040a4:	jmp    403f40 <__sprintf_chk@plt+0x2c50>
  4040a9:	nop    DWORD PTR [rax+0x0]
  4040b0:	mov    eax,r9d
  4040b3:	mov    edx,0x1
  4040b8:	shr    eax,0x17
  4040bb:	shl    rax,0x4
  4040bf:	add    rax,r11
  4040c2:	mov    ecx,DWORD PTR [rax+0x8]
  4040c5:	test   ecx,ecx
  4040c7:	jne    404ec5 <__sprintf_chk@plt+0x3bd5>
  4040cd:	mov    DWORD PTR [rbx],edx
  4040cf:	mov    DWORD PTR [rbx+0x8],0x1
  4040d6:	mov    r12,r15
  4040d9:	jmp    403f40 <__sprintf_chk@plt+0x2c50>
  4040de:	xchg   ax,ax
  4040e0:	mov    edx,r9d
  4040e3:	shr    edx,0x17
  4040e6:	shl    rdx,0x4
  4040ea:	add    rdx,r11
  4040ed:	cmp    DWORD PTR [rdx+0x8],0x3
  4040f1:	je     4051c5 <__sprintf_chk@plt+0x3ed5>
  4040f7:	mov    QWORD PTR [r13+0x30],r15
  4040fb:	mov    r8d,0xb
  404101:	mov    rcx,rdx
  404104:	nop    DWORD PTR [rax+0x0]
  404108:	mov    rsi,rbx
  40410b:	mov    rdi,r13
  40410e:	call   4069f0 <__sprintf_chk@plt+0x5700>
  404113:	jmp    404589 <__sprintf_chk@plt+0x3299>
  404118:	nop    DWORD PTR [rax+rax*1+0x0]
  404120:	mov    eax,r9d
  404123:	shr    eax,0x17
  404126:	test   ah,0x1
  404129:	jne    4050e6 <__sprintf_chk@plt+0x3df6>
  40412f:	movsxd rdx,eax
  404132:	shr    r9d,0xe
  404136:	shl    rdx,0x4
  40413a:	add    rdx,r11
  40413d:	test   r9d,0x100
  404144:	je     405103 <__sprintf_chk@plt+0x3e13>
  40414a:	movzx  ecx,r9b
  40414e:	shl    rcx,0x4
  404152:	add    rcx,QWORD PTR [rsp+0x8]
  404157:	cmp    DWORD PTR [rdx+0x8],0x3
  40415b:	jne    404167 <__sprintf_chk@plt+0x2e77>
  40415d:	cmp    DWORD PTR [rcx+0x8],0x3
  404161:	je     40550f <__sprintf_chk@plt+0x421f>
  404167:	mov    QWORD PTR [r13+0x30],r15
  40416b:	mov    r8d,0x9
  404171:	jmp    404108 <__sprintf_chk@plt+0x2e18>
  404173:	nop    DWORD PTR [rax+rax*1+0x0]
  404178:	mov    eax,r9d
  40417b:	shr    eax,0x17
  40417e:	test   ah,0x1
  404181:	jne    4050b3 <__sprintf_chk@plt+0x3dc3>
  404187:	movsxd rdx,eax
  40418a:	shr    r9d,0xe
  40418e:	shl    rdx,0x4
  404192:	add    rdx,r11
  404195:	test   r9d,0x100
  40419c:	je     4050d0 <__sprintf_chk@plt+0x3de0>
  4041a2:	movzx  ecx,r9b
  4041a6:	shl    rcx,0x4
  4041aa:	add    rcx,QWORD PTR [rsp+0x8]
  4041af:	cmp    DWORD PTR [rdx+0x8],0x3
  4041b3:	jne    4041bf <__sprintf_chk@plt+0x2ecf>
  4041b5:	cmp    DWORD PTR [rcx+0x8],0x3
  4041b9:	je     4054be <__sprintf_chk@plt+0x41ce>
  4041bf:	mov    QWORD PTR [r13+0x30],r15
  4041c3:	mov    r8d,0x8
  4041c9:	jmp    404108 <__sprintf_chk@plt+0x2e18>
  4041ce:	xchg   ax,ax
  4041d0:	mov    eax,r9d
  4041d3:	shr    eax,0x17
  4041d6:	test   ah,0x1
  4041d9:	jne    405080 <__sprintf_chk@plt+0x3d90>
  4041df:	movsxd rdx,eax
  4041e2:	shr    r9d,0xe
  4041e6:	shl    rdx,0x4
  4041ea:	add    rdx,r11
  4041ed:	test   r9d,0x100
  4041f4:	je     40509d <__sprintf_chk@plt+0x3dad>
  4041fa:	movzx  ecx,r9b
  4041fe:	shl    rcx,0x4
  404202:	add    rcx,QWORD PTR [rsp+0x8]
  404207:	cmp    DWORD PTR [rdx+0x8],0x3
  40420b:	jne    404217 <__sprintf_chk@plt+0x2f27>
  40420d:	cmp    DWORD PTR [rcx+0x8],0x3
  404211:	je     405637 <__sprintf_chk@plt+0x4347>
  404217:	mov    QWORD PTR [r13+0x30],r15
  40421b:	mov    r8d,0xa
  404221:	jmp    404108 <__sprintf_chk@plt+0x2e18>
  404226:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404230:	mov    eax,r9d
  404233:	shr    eax,0x17
  404236:	test   ah,0x1
  404239:	jne    40504d <__sprintf_chk@plt+0x3d5d>
  40423f:	movsxd rdx,eax
  404242:	shr    r9d,0xe
  404246:	shl    rdx,0x4
  40424a:	add    rdx,r11
  40424d:	test   r9d,0x100
  404254:	je     40506a <__sprintf_chk@plt+0x3d7a>
  40425a:	movzx  ecx,r9b
  40425e:	shl    rcx,0x4
  404262:	add    rcx,QWORD PTR [rsp+0x8]
  404267:	cmp    DWORD PTR [rdx+0x8],0x3
  40426b:	jne    404277 <__sprintf_chk@plt+0x2f87>
  40426d:	cmp    DWORD PTR [rcx+0x8],0x3
  404271:	je     4054d9 <__sprintf_chk@plt+0x41e9>
  404277:	mov    QWORD PTR [r13+0x30],r15
  40427b:	mov    r8d,0x7
  404281:	jmp    404108 <__sprintf_chk@plt+0x2e18>
  404286:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404290:	mov    eax,r9d
  404293:	shr    eax,0x17
  404296:	test   ah,0x1
  404299:	jne    40514c <__sprintf_chk@plt+0x3e5c>
  40429f:	movsxd rdx,eax
  4042a2:	shr    r9d,0xe
  4042a6:	shl    rdx,0x4
  4042aa:	add    rdx,r11
  4042ad:	test   r9d,0x100
  4042b4:	je     405169 <__sprintf_chk@plt+0x3e79>
  4042ba:	movzx  ecx,r9b
  4042be:	shl    rcx,0x4
  4042c2:	add    rcx,QWORD PTR [rsp+0x8]
  4042c7:	cmp    DWORD PTR [rdx+0x8],0x3
  4042cb:	jne    4042d7 <__sprintf_chk@plt+0x2fe7>
  4042cd:	cmp    DWORD PTR [rcx+0x8],0x3
  4042d1:	je     40555a <__sprintf_chk@plt+0x426a>
  4042d7:	mov    QWORD PTR [r13+0x30],r15
  4042db:	mov    r8d,0x6
  4042e1:	jmp    404108 <__sprintf_chk@plt+0x2e18>
  4042e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4042f0:	mov    eax,r9d
  4042f3:	shr    eax,0x17
  4042f6:	test   ah,0x1
  4042f9:	jne    405119 <__sprintf_chk@plt+0x3e29>
  4042ff:	movsxd rdx,eax
  404302:	shr    r9d,0xe
  404306:	shl    rdx,0x4
  40430a:	add    rdx,r11
  40430d:	test   r9d,0x100
  404314:	je     405136 <__sprintf_chk@plt+0x3e46>
  40431a:	movzx  ecx,r9b
  40431e:	shl    rcx,0x4
  404322:	add    rcx,QWORD PTR [rsp+0x8]
  404327:	cmp    DWORD PTR [rdx+0x8],0x3
  40432b:	jne    404337 <__sprintf_chk@plt+0x3047>
  40432d:	cmp    DWORD PTR [rcx+0x8],0x3
  404331:	je     4054f4 <__sprintf_chk@plt+0x4204>
  404337:	mov    QWORD PTR [r13+0x30],r15
  40433b:	mov    r8d,0x5
  404341:	jmp    404108 <__sprintf_chk@plt+0x2e18>
  404346:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404350:	mov    esi,r9d
  404353:	shr    r9d,0xe
  404357:	shr    esi,0x17
  40435a:	shl    rsi,0x4
  40435e:	add    rsi,r11
  404361:	test   r9d,0x100
  404368:	mov    rax,QWORD PTR [rsi]
  40436b:	mov    QWORD PTR [rbx+0x10],rax
  40436f:	mov    eax,DWORD PTR [rsi+0x8]
  404372:	mov    DWORD PTR [rbx+0x18],eax
  404375:	mov    QWORD PTR [r13+0x30],r15
  404379:	je     40517f <__sprintf_chk@plt+0x3e8f>
  40437f:	movzx  edx,r9b
  404383:	shl    rdx,0x4
  404387:	add    rdx,QWORD PTR [rsp+0x8]
  40438c:	jmp    40457e <__sprintf_chk@plt+0x328e>
  404391:	nop    DWORD PTR [rax+0x0]
  404398:	mov    esi,r9d
  40439b:	shr    r9d,0xe
  40439f:	mov    edx,r9d
  4043a2:	shr    esi,0x17
  4043a5:	and    edx,0x1ff
  4043ab:	mov    eax,edx
  4043ad:	sar    eax,0x3
  4043b0:	and    eax,0x1f
  4043b3:	jne    405195 <__sprintf_chk@plt+0x3ea5>
  4043b9:	mov    eax,esi
  4043bb:	sar    eax,0x3
  4043be:	and    eax,0x1f
  4043c1:	jne    404eee <__sprintf_chk@plt+0x3bfe>
  4043c7:	mov    rdi,r13
  4043ca:	call   407420 <__sprintf_chk@plt+0x6130>
  4043cf:	mov    QWORD PTR [rbx],rax
  4043d2:	mov    rax,QWORD PTR [r13+0x20]
  4043d6:	mov    DWORD PTR [rbx+0x8],0x5
  4043dd:	mov    QWORD PTR [r13+0x30],r15
  4043e1:	mov    rdi,QWORD PTR [rax+0x70]
  4043e5:	cmp    QWORD PTR [rax+0x78],rdi
  4043e9:	jb     404589 <__sprintf_chk@plt+0x3299>
  4043ef:	mov    rdi,r13
  4043f2:	call   408be0 <__sprintf_chk@plt+0x78f0>
  4043f7:	jmp    404589 <__sprintf_chk@plt+0x3299>
  4043fc:	nop    DWORD PTR [rax+0x0]
  404400:	mov    eax,r9d
  404403:	mov    QWORD PTR [r13+0x30],r15
  404407:	shr    eax,0xe
  40440a:	test   ah,0x1
  40440d:	jne    405021 <__sprintf_chk@plt+0x3d31>
  404413:	and    eax,0x1ff
  404418:	shr    r9d,0x17
  40441c:	shl    rax,0x4
  404420:	mov    rcx,rax
  404423:	add    rcx,r11
  404426:	test   r9d,0x100
  40442d:	je     40503e <__sprintf_chk@plt+0x3d4e>
  404433:	movzx  edx,r9b
  404437:	shl    rdx,0x4
  40443b:	add    rdx,QWORD PTR [rsp+0x8]
  404440:	mov    rsi,rbx
  404443:	mov    rdi,r13
  404446:	mov    r12,r15
  404449:	call   408820 <__sprintf_chk@plt+0x7530>
  40444e:	mov    r11,QWORD PTR [r13+0x18]
  404452:	jmp    403f40 <__sprintf_chk@plt+0x2c50>
  404457:	nop    WORD PTR [rax+rax*1+0x0]
  404460:	mov    rax,QWORD PTR [rsp+0x18]
  404465:	shr    r9d,0x17
  404469:	mov    rcx,QWORD PTR [rbx]
  40446c:	mov    r12,r15
  40446f:	mov    rdx,QWORD PTR [rax+r9*8+0x28]
  404474:	mov    rax,QWORD PTR [rdx+0x10]
  404478:	mov    QWORD PTR [rax],rcx
  40447b:	mov    ecx,DWORD PTR [rbx+0x8]
  40447e:	mov    DWORD PTR [rax+0x8],ecx
  404481:	cmp    DWORD PTR [rbx+0x8],0x3
  404485:	jle    403f40 <__sprintf_chk@plt+0x2c50>
  40448b:	mov    rsi,QWORD PTR [rbx]
  40448e:	test   BYTE PTR [rsi+0x9],0x3
  404492:	je     403f40 <__sprintf_chk@plt+0x2c50>
  404498:	movzx  eax,BYTE PTR [rdx+0x9]
  40449c:	test   al,0x4
  40449e:	je     403f40 <__sprintf_chk@plt+0x2c50>
  4044a4:	mov    rdi,QWORD PTR [r13+0x20]
  4044a8:	cmp    BYTE PTR [rdi+0x21],0x1
  4044ac:	je     40567c <__sprintf_chk@plt+0x438c>
  4044b2:	movzx  ecx,BYTE PTR [rdi+0x20]
  4044b6:	and    eax,0xfffffff8
  4044b9:	and    ecx,0x3
  4044bc:	or     eax,ecx
  4044be:	mov    BYTE PTR [rdx+0x9],al
  4044c1:	jmp    403f40 <__sprintf_chk@plt+0x2c50>
  4044c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4044d0:	mov    rax,QWORD PTR [rsp+0x18]
  4044d5:	mov    edx,r9d
  4044d8:	lea    rsi,[rsp+0x70]
  4044dd:	shr    edx,0xe
  4044e0:	mov    rcx,rbx
  4044e3:	mov    rdi,r13
  4044e6:	shl    rdx,0x4
  4044ea:	add    rdx,QWORD PTR [rsp+0x8]
  4044ef:	mov    r12,r15
  4044f2:	mov    rax,QWORD PTR [rax+0x18]
  4044f6:	mov    QWORD PTR [r13+0x30],r15
  4044fa:	mov    DWORD PTR [rsp+0x78],0x5
  404502:	mov    QWORD PTR [rsp+0x70],rax
  404507:	call   408820 <__sprintf_chk@plt+0x7530>
  40450c:	mov    r11,QWORD PTR [r13+0x18]
  404510:	jmp    403f40 <__sprintf_chk@plt+0x2c50>
  404515:	nop    DWORD PTR [rax]
  404518:	mov    eax,r9d
  40451b:	mov    QWORD PTR [r13+0x30],r15
  40451f:	shr    eax,0xe
  404522:	test   ah,0x1
  404525:	jne    405010 <__sprintf_chk@plt+0x3d20>
  40452b:	and    eax,0x1ff
  404530:	shl    rax,0x4
  404534:	mov    rdx,rax
  404537:	add    rdx,r11
  40453a:	mov    esi,r9d
  40453d:	shr    esi,0x17
  404540:	shl    rsi,0x4
  404544:	add    rsi,r11
  404547:	jmp    40457e <__sprintf_chk@plt+0x328e>
  404549:	nop    DWORD PTR [rax+0x0]
  404550:	mov    rax,QWORD PTR [rsp+0x18]
  404555:	mov    edx,r9d
  404558:	lea    rsi,[rsp+0x70]
  40455d:	shr    edx,0xe
  404560:	shl    rdx,0x4
  404564:	add    rdx,QWORD PTR [rsp+0x8]
  404569:	mov    rax,QWORD PTR [rax+0x18]
  40456d:	mov    DWORD PTR [rsp+0x78],0x5
  404575:	mov    QWORD PTR [r13+0x30],r15
  404579:	mov    QWORD PTR [rsp+0x70],rax
  40457e:	mov    rcx,rbx
  404581:	mov    rdi,r13
  404584:	call   4082f0 <__sprintf_chk@plt+0x7000>
  404589:	mov    r11,QWORD PTR [r13+0x18]
  40458d:	mov    r12,r15
  404590:	jmp    403f40 <__sprintf_chk@plt+0x2c50>
  404595:	nop    DWORD PTR [rax]
  404598:	mov    rax,QWORD PTR [rsp+0x18]
  40459d:	shr    r9d,0x17
  4045a1:	mov    rax,QWORD PTR [rax+r9*8+0x28]
  4045a6:	mov    rax,QWORD PTR [rax+0x10]
  4045aa:	mov    rdx,QWORD PTR [rax]
  4045ad:	mov    r12,r15
  4045b0:	mov    QWORD PTR [rbx],rdx
  4045b3:	mov    eax,DWORD PTR [rax+0x8]
  4045b6:	mov    DWORD PTR [rbx+0x8],eax
  4045b9:	jmp    403f40 <__sprintf_chk@plt+0x2c50>
  4045be:	xchg   ax,ax
  4045c0:	mov    eax,r9d
  4045c3:	shr    eax,0x17
  4045c6:	shl    rax,0x4
  4045ca:	add    rax,r11
  4045cd:	nop    DWORD PTR [rax]
  4045d0:	sub    rax,0x10
  4045d4:	mov    DWORD PTR [rax+0x18],0x0
  4045db:	cmp    rbx,rax
  4045de:	jbe    4045d0 <__sprintf_chk@plt+0x32e0>
  4045e0:	mov    r12,r15
  4045e3:	jmp    403f40 <__sprintf_chk@plt+0x2c50>
  4045e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4045f0:	mov    eax,r9d
  4045f3:	add    r12,0x8
  4045f7:	mov    DWORD PTR [rbx+0x8],0x1
  4045fe:	shr    eax,0x17
  404601:	and    r9d,0x7fc000
  404608:	mov    DWORD PTR [rbx],eax
  40460a:	cmove  r12,r15
  40460e:	jmp    403f40 <__sprintf_chk@plt+0x2c50>
  404613:	nop    DWORD PTR [rax+rax*1+0x0]
  404618:	mov    eax,r9d
  40461b:	shr    eax,0xe
  40461e:	shl    rax,0x4
  404622:	add    rax,QWORD PTR [rsp+0x8]
  404627:	jmp    4045aa <__sprintf_chk@plt+0x32ba>
  404629:	nop    DWORD PTR [rax+0x0]
  404630:	mov    eax,r9d
  404633:	shr    eax,0x17
  404636:	shl    rax,0x4
  40463a:	add    rax,r11
  40463d:	jmp    4045aa <__sprintf_chk@plt+0x32ba>
  404642:	nop    WORD PTR [rax+rax*1+0x0]
  404648:	mov    rax,QWORD PTR [rsp+0x18]
  40464d:	mov    r12,QWORD PTR [r13+0x28]
  404651:	shr    r9d,0x17
  404655:	sub    r9d,0x1
  404659:	mov    rax,QWORD PTR [rax+0x20]
  40465d:	mov    rbp,QWORD PTR [r12]
  404661:	sub    rbp,QWORD PTR [r12+0x8]
  404666:	movzx  eax,BYTE PTR [rax+0x71]
  40466a:	sar    rbp,0x4
  40466e:	sub    ebp,eax
  404670:	sub    ebp,0x1
  404673:	cmp    r9d,0xffffffff
  404677:	je     405375 <__sprintf_chk@plt+0x4085>
  40467d:	test   r9d,r9d
  404680:	jle    4045e0 <__sprintf_chk@plt+0x32f0>
  404686:	movsxd rdx,ebp
  404689:	add    rbx,0x8
  40468d:	xor    eax,eax
  40468f:	neg    rdx
  404692:	shl    rdx,0x4
  404696:	jmp    4046c7 <__sprintf_chk@plt+0x33d7>
  404698:	nop    DWORD PTR [rax+rax*1+0x0]
  4046a0:	mov    rcx,rdx
  4046a3:	add    rcx,QWORD PTR [r12]
  4046a7:	mov    rsi,QWORD PTR [rcx]
  4046aa:	mov    ecx,DWORD PTR [rcx+0x8]
  4046ad:	mov    QWORD PTR [rbx-0x8],rsi
  4046b1:	mov    DWORD PTR [rbx],ecx
  4046b3:	add    eax,0x1
  4046b6:	add    rdx,0x10
  4046ba:	add    rbx,0x10
  4046be:	cmp    eax,r9d
  4046c1:	je     4045e0 <__sprintf_chk@plt+0x32f0>
  4046c7:	cmp    ebp,eax
  4046c9:	jg     4046a0 <__sprintf_chk@plt+0x33b0>
  4046cb:	mov    DWORD PTR [rbx],0x0
  4046d1:	jmp    4046b3 <__sprintf_chk@plt+0x33c3>
  4046d3:	nop    DWORD PTR [rax+rax*1+0x0]
  4046d8:	mov    rdi,QWORD PTR [rsp+0x18]
  4046dd:	shr    r9d,0xe
  4046e1:	mov    QWORD PTR [rsp+0x20],r11
  4046e6:	mov    rax,QWORD PTR [rdi+0x20]
  4046ea:	mov    rdx,QWORD PTR [rdi+0x18]
  4046ee:	mov    rdi,r13
  4046f1:	mov    rax,QWORD PTR [rax+0x20]
  4046f5:	mov    rcx,QWORD PTR [rax+r9*8]
  4046f9:	movzx  ebp,BYTE PTR [rcx+0x70]
  4046fd:	mov    QWORD PTR [rsp+0x10],rcx
  404702:	mov    esi,ebp
  404704:	call   4034a0 <__sprintf_chk@plt+0x21b0>
  404709:	mov    rcx,QWORD PTR [rsp+0x10]
  40470e:	test   ebp,ebp
  404710:	mov    QWORD PTR [rsp+0x50],rax
  404715:	mov    QWORD PTR [rax+0x20],rcx
  404719:	je     4055ab <__sprintf_chk@plt+0x42bb>
  40471f:	lea    ecx,[rbp-0x1]
  404722:	mov    r11,QWORD PTR [rsp+0x20]
  404727:	mov    r8d,0x1
  40472d:	mov    rbp,r8
  404730:	mov    r9,r12
  404733:	mov    r8,r13
  404736:	mov    QWORD PTR [rsp+0x58],rcx
  40473b:	add    rcx,0x2
  40473f:	mov    QWORD PTR [rsp+0x60],r15
  404744:	mov    QWORD PTR [rsp+0x10],rcx
  404749:	mov    QWORD PTR [rsp+0x38],r11
  40474e:	mov    r10,rax
  404751:	mov    QWORD PTR [rsp+0x68],rbx
  404756:	mov    r13,QWORD PTR [rsp+0x18]
  40475b:	jmp    40477c <__sprintf_chk@plt+0x348c>
  40475d:	nop    DWORD PTR [rax]
  404760:	shr    eax,0x17
  404763:	mov    rax,QWORD PTR [r13+rax*8+0x28]
  404768:	mov    QWORD PTR [r10+rbp*8+0x20],rax
  40476d:	add    rbp,0x1
  404771:	cmp    QWORD PTR [rsp+0x10],rbp
  404776:	je     40485f <__sprintf_chk@plt+0x356f>
  40477c:	mov    eax,DWORD PTR [r9+rbp*4]
  404780:	mov    edx,eax
  404782:	and    edx,0x3f
  404785:	cmp    edx,0x4
  404788:	je     404760 <__sprintf_chk@plt+0x3470>
  40478a:	mov    rdx,QWORD PTR [r8+0x98]
  404791:	shr    eax,0x17
  404794:	mov    r15,QWORD PTR [r8+0x20]
  404798:	mov    ebx,eax
  40479a:	mov    r12,QWORD PTR [rsp+0x40]
  40479f:	shl    rbx,0x4
  4047a3:	add    rbx,QWORD PTR [rsp+0x38]
  4047a8:	test   rdx,rdx
  4047ab:	je     4047dd <__sprintf_chk@plt+0x34ed>
  4047ad:	cmp    rbx,QWORD PTR [rdx+0x10]
  4047b1:	mov    rcx,rdx
  4047b4:	ja     4047dd <__sprintf_chk@plt+0x34ed>
  4047b6:	jne    4047d2 <__sprintf_chk@plt+0x34e2>
  4047b8:	jmp    404df7 <__sprintf_chk@plt+0x3b07>
  4047bd:	nop    DWORD PTR [rax]
  4047c0:	cmp    rbx,QWORD PTR [rdx+0x10]
  4047c4:	mov    rax,rdx
  4047c7:	ja     4047da <__sprintf_chk@plt+0x34ea>
  4047c9:	je     404e00 <__sprintf_chk@plt+0x3b10>
  4047cf:	mov    rcx,rdx
  4047d2:	mov    rdx,QWORD PTR [rdx]
  4047d5:	test   rdx,rdx
  4047d8:	jne    4047c0 <__sprintf_chk@plt+0x34d0>
  4047da:	mov    r12,rcx
  4047dd:	xor    edx,edx
  4047df:	mov    rdi,r8
  4047e2:	mov    ecx,0x28
  4047e7:	xor    esi,esi
  4047e9:	mov    QWORD PTR [rsp+0x30],r10
  4047ee:	mov    QWORD PTR [rsp+0x28],r9
  4047f3:	mov    QWORD PTR [rsp+0x20],r8
  4047f8:	call   403450 <__sprintf_chk@plt+0x2160>
  4047fd:	mov    BYTE PTR [rax+0x8],0xa
  404801:	movzx  edx,BYTE PTR [r15+0x20]
  404806:	mov    QWORD PTR [rax+0x10],rbx
  40480a:	mov    r10,QWORD PTR [rsp+0x30]
  40480f:	mov    r9,QWORD PTR [rsp+0x28]
  404814:	mov    r8,QWORD PTR [rsp+0x20]
  404819:	and    edx,0x3
  40481c:	mov    BYTE PTR [rax+0x9],dl
  40481f:	mov    rdx,QWORD PTR [r12]
  404823:	mov    QWORD PTR [rax],rdx
  404826:	lea    rdx,[r15+0xb8]
  40482d:	mov    QWORD PTR [r12],rax
  404831:	mov    QWORD PTR [rax+0x18],rdx
  404835:	mov    rdx,QWORD PTR [r15+0xd8]
  40483c:	mov    QWORD PTR [rax+0x20],rdx
  404840:	mov    QWORD PTR [rdx+0x18],rax
  404844:	mov    QWORD PTR [r15+0xd8],rax
  40484b:	mov    QWORD PTR [r10+rbp*8+0x20],rax
  404850:	add    rbp,0x1
  404854:	cmp    QWORD PTR [rsp+0x10],rbp
  404859:	jne    40477c <__sprintf_chk@plt+0x348c>
  40485f:	mov    r15,QWORD PTR [rsp+0x60]
  404864:	mov    rax,QWORD PTR [rsp+0x58]
  404869:	mov    r13,r8
  40486c:	mov    rbx,QWORD PTR [rsp+0x68]
  404871:	lea    r12,[r15+rax*4+0x4]
  404876:	mov    rax,QWORD PTR [rsp+0x50]
  40487b:	mov    DWORD PTR [rbx+0x8],0x6
  404882:	mov    QWORD PTR [rbx],rax
  404885:	mov    rax,QWORD PTR [r13+0x20]
  404889:	mov    QWORD PTR [r13+0x30],r12
  40488d:	mov    rdi,QWORD PTR [rax+0x70]
  404891:	cmp    QWORD PTR [rax+0x78],rdi
  404895:	jae    405356 <__sprintf_chk@plt+0x4066>
  40489b:	mov    r11,QWORD PTR [r13+0x18]
  40489f:	jmp    403f40 <__sprintf_chk@plt+0x2c50>
  4048a4:	nop    DWORD PTR [rax+0x0]
  4048a8:	mov    rsi,rbx
  4048ab:	mov    rdi,r13
  4048ae:	mov    QWORD PTR [rsp+0x10],r11
  4048b3:	mov    r12,r15
  4048b6:	call   403560 <__sprintf_chk@plt+0x2270>
  4048bb:	mov    r11,QWORD PTR [rsp+0x10]
  4048c0:	jmp    403f40 <__sprintf_chk@plt+0x2c50>
  4048c5:	nop    DWORD PTR [rax]
  4048c8:	mov    r8d,r9d
  4048cb:	shr    r9d,0xe
  4048cf:	shr    r8d,0x17
  4048d3:	and    r9d,0x1ff
  4048da:	test   r8d,r8d
  4048dd:	jne    4048fa <__sprintf_chk@plt+0x360a>
  4048df:	mov    rax,QWORD PTR [r13+0x28]
  4048e3:	mov    r8,QWORD PTR [r13+0x10]
  4048e7:	mov    rax,QWORD PTR [rax+0x10]
  4048eb:	sub    r8,rbx
  4048ee:	sar    r8,0x4
  4048f2:	sub    r8d,0x1
  4048f6:	mov    QWORD PTR [r13+0x10],rax
  4048fa:	test   r9d,r9d
  4048fd:	je     404ee0 <__sprintf_chk@plt+0x3bf0>
  404903:	mov    r12,r15
  404906:	cmp    DWORD PTR [rbx+0x8],0x5
  40490a:	jne    403f40 <__sprintf_chk@plt+0x2c50>
  404910:	lea    eax,[r9-0x1]
  404914:	mov    rbp,QWORD PTR [rbx]
  404917:	imul   eax,eax,0x32
  40491a:	add    eax,r8d
  40491d:	cmp    eax,DWORD PTR [rbp+0x38]
  404920:	jg     4055cc <__sprintf_chk@plt+0x42dc>
  404926:	test   r8d,r8d
  404929:	jle    403f40 <__sprintf_chk@plt+0x2c50>
  40492f:	movsxd rcx,r8d
  404932:	mov    edi,eax
  404934:	mov    QWORD PTR [rsp+0x10],r12
  404939:	shl    rcx,0x4
  40493d:	sub    edi,r8d
  404940:	mov    QWORD PTR [rsp+0x20],r11
  404945:	lea    r15,[rbx+rcx*1]
  404949:	mov    edx,eax
  40494b:	mov    r12,r15
  40494e:	mov    r15d,edi
  404951:	nop    DWORD PTR [rax+0x0]
  404958:	mov    rsi,rbp
  40495b:	mov    rdi,r13
  40495e:	lea    ebx,[rdx-0x1]
  404961:	call   407bd0 <__sprintf_chk@plt+0x68e0>
  404966:	mov    rdx,QWORD PTR [r12]
  40496a:	mov    QWORD PTR [rax],rdx
  40496d:	mov    edx,DWORD PTR [r12+0x8]
  404972:	mov    DWORD PTR [rax+0x8],edx
  404975:	cmp    DWORD PTR [r12+0x8],0x3
  40497b:	jle    4049a8 <__sprintf_chk@plt+0x36b8>
  40497d:	mov    rax,QWORD PTR [r12]
  404981:	test   BYTE PTR [rax+0x9],0x3
  404985:	je     4049a8 <__sprintf_chk@plt+0x36b8>
  404987:	movzx  eax,BYTE PTR [rbp+0x9]
  40498b:	test   al,0x4
  40498d:	je     4049a8 <__sprintf_chk@plt+0x36b8>
  40498f:	mov    rdx,QWORD PTR [r13+0x20]
  404993:	and    eax,0xfffffffb
  404996:	mov    BYTE PTR [rbp+0x9],al
  404999:	mov    rax,QWORD PTR [rdx+0x40]
  40499d:	mov    QWORD PTR [rbp+0x30],rax
  4049a1:	mov    QWORD PTR [rdx+0x40],rbp
  4049a5:	nop    DWORD PTR [rax]
  4049a8:	sub    r12,0x10
  4049ac:	cmp    ebx,r15d
  4049af:	mov    edx,ebx
  4049b1:	jne    404958 <__sprintf_chk@plt+0x3668>
  4049b3:	mov    r12,QWORD PTR [rsp+0x10]
  4049b8:	mov    r11,QWORD PTR [rsp+0x20]
  4049bd:	jmp    403f40 <__sprintf_chk@plt+0x2c50>
  4049c2:	nop    WORD PTR [rax+rax*1+0x0]
  4049c8:	mov    rax,QWORD PTR [rbx+0x20]
  4049cc:	mov    edx,r9d
  4049cf:	lea    rsi,[rbx+0x30]
  4049d3:	shr    edx,0xe
  4049d6:	mov    rdi,r13
  4049d9:	mov    QWORD PTR [rsp+0x10],rcx
  4049de:	and    edx,0x1ff
  4049e4:	mov    QWORD PTR [rbx+0x50],rax
  4049e8:	mov    eax,DWORD PTR [rbx+0x28]
  4049eb:	mov    DWORD PTR [rbx+0x58],eax
  4049ee:	mov    rax,QWORD PTR [rbx+0x10]
  4049f2:	mov    QWORD PTR [rbx+0x40],rax
  4049f6:	mov    eax,DWORD PTR [rbx+0x18]
  4049f9:	mov    DWORD PTR [rbx+0x48],eax
  4049fc:	mov    rax,QWORD PTR [rbx]
  4049ff:	mov    QWORD PTR [rbx+0x30],rax
  404a03:	mov    eax,DWORD PTR [rbx+0x8]
  404a06:	mov    DWORD PTR [rbx+0x38],eax
  404a09:	lea    rax,[rbx+0x60]
  404a0d:	mov    QWORD PTR [r13+0x30],r15
  404a11:	mov    QWORD PTR [r13+0x10],rax
  404a15:	call   403e50 <__sprintf_chk@plt+0x2b60>
  404a1a:	mov    rax,QWORD PTR [r13+0x28]
  404a1e:	mov    r11,QWORD PTR [r13+0x18]
  404a22:	mov    rcx,QWORD PTR [rsp+0x10]
  404a27:	mov    rax,QWORD PTR [rax+0x10]
  404a2b:	mov    QWORD PTR [r13+0x10],rax
  404a2f:	lea    rax,[r11+rcx*1+0x30]
  404a34:	mov    edx,DWORD PTR [rax+0x8]
  404a37:	test   edx,edx
  404a39:	je     404a55 <__sprintf_chk@plt+0x3765>
  404a3b:	mov    rcx,QWORD PTR [rax]
  404a3e:	mov    DWORD PTR [rax-0x8],edx
  404a41:	mov    QWORD PTR [rax-0x10],rcx
  404a45:	mov    eax,DWORD PTR [r12+0x4]
  404a4a:	shr    eax,0xe
  404a4d:	lea    r15,[r15+rax*4-0x7fffc]
  404a55:	lea    r12,[r15+0x4]
  404a59:	jmp    403f40 <__sprintf_chk@plt+0x2c50>
  404a5e:	xchg   ax,ax
  404a60:	mov    r10,r13
  404a63:	mov    r13d,r9d
  404a66:	shr    r13d,0x17
  404a6a:	test   r13d,r13d
  404a6d:	jne    404ffb <__sprintf_chk@plt+0x3d0b>
  404a73:	cmp    QWORD PTR [r10+0x98],0x0
  404a7b:	je     404a92 <__sprintf_chk@plt+0x37a2>
  404a7d:	mov    rdi,r10
  404a80:	mov    rsi,r11
  404a83:	mov    QWORD PTR [rsp+0x8],r10
  404a88:	call   403560 <__sprintf_chk@plt+0x2270>
  404a8d:	mov    r10,QWORD PTR [rsp+0x8]
  404a92:	mov    QWORD PTR [r10+0x30],r15
  404a96:	mov    rdi,r10
  404a99:	mov    rsi,rbx
  404a9c:	mov    QWORD PTR [rsp+0x8],r10
  404aa1:	call   401930 <__sprintf_chk@plt+0x640>
  404aa6:	sub    DWORD PTR [rsp+0x4c],0x1
  404aab:	mov    r10,QWORD PTR [rsp+0x8]
  404ab0:	je     405661 <__sprintf_chk@plt+0x4371>
  404ab6:	test   eax,eax
  404ab8:	mov    rax,QWORD PTR [r10+0x28]
  404abc:	je     4051b8 <__sprintf_chk@plt+0x3ec8>
  404ac2:	mov    rdx,QWORD PTR [rax+0x10]
  404ac6:	mov    r11,QWORD PTR [r10+0x18]
  404aca:	mov    r12,QWORD PTR [r10+0x30]
  404ace:	mov    QWORD PTR [r10+0x10],rdx
  404ad2:	jmp    403f22 <__sprintf_chk@plt+0x2c32>
  404ad7:	nop    WORD PTR [rax+rax*1+0x0]
  404ae0:	mov    edx,DWORD PTR [rbx+0x8]
  404ae3:	mov    eax,0x1
  404ae8:	test   edx,edx
  404aea:	jne    404fe2 <__sprintf_chk@plt+0x3cf2>
  404af0:	shr    r9d,0xe
  404af4:	and    r9d,0x1ff
  404afb:	cmp    r9d,eax
  404afe:	je     404a55 <__sprintf_chk@plt+0x3765>
  404b04:	mov    eax,DWORD PTR [r12+0x4]
  404b09:	shr    eax,0xe
  404b0c:	lea    r15,[r15+rax*4-0x7fffc]
  404b14:	lea    r12,[r15+0x4]
  404b18:	jmp    403f40 <__sprintf_chk@plt+0x2c50>
  404b1d:	nop    DWORD PTR [rax]
  404b20:	vxorpd xmm3,xmm3,xmm3
  404b24:	vmovsd xmm1,QWORD PTR [rbx+0x20]
  404b29:	vmovsd xmm2,QWORD PTR [rbx+0x10]
  404b2e:	vucomisd xmm1,xmm3
  404b32:	vaddsd xmm0,xmm1,QWORD PTR [rbx]
  404b36:	jbe    4053af <__sprintf_chk@plt+0x40bf>
  404b3c:	vucomisd xmm2,xmm0
  404b40:	setae  al
  404b43:	test   al,al
  404b45:	mov    r12,r15
  404b48:	je     403f40 <__sprintf_chk@plt+0x2c50>
  404b4e:	mov    eax,r9d
  404b51:	vmovsd QWORD PTR [rbx],xmm0
  404b55:	mov    DWORD PTR [rbx+0x8],0x3
  404b5c:	shr    eax,0xe
  404b5f:	vmovsd QWORD PTR [rbx+0x30],xmm0
  404b64:	mov    DWORD PTR [rbx+0x38],0x3
  404b6b:	lea    r12,[r15+rax*4-0x7fffc]
  404b73:	jmp    403f40 <__sprintf_chk@plt+0x2c50>
  404b78:	nop    DWORD PTR [rax+rax*1+0x0]
  404b80:	mov    eax,r9d
  404b83:	shr    r9d,0xe
  404b87:	shr    eax,0x17
  404b8a:	and    r9d,0x1ff
  404b91:	test   eax,eax
  404b93:	lea    ebp,[r9-0x1]
  404b97:	jne    404fd2 <__sprintf_chk@plt+0x3ce2>
  404b9d:	mov    QWORD PTR [r13+0x30],r15
  404ba1:	mov    edx,ebp
  404ba3:	mov    rsi,rbx
  404ba6:	mov    rdi,r13
  404ba9:	call   403aa0 <__sprintf_chk@plt+0x27b0>
  404bae:	test   eax,eax
  404bb0:	je     40533d <__sprintf_chk@plt+0x404d>
  404bb6:	cmp    eax,0x1
  404bb9:	jne    404c6a <__sprintf_chk@plt+0x397a>
  404bbf:	cmp    ebp,0xffffffff
  404bc2:	je     404589 <__sprintf_chk@plt+0x3299>
  404bc8:	mov    rax,QWORD PTR [r13+0x28]
  404bcc:	mov    rax,QWORD PTR [rax+0x10]
  404bd0:	mov    QWORD PTR [r13+0x10],rax
  404bd4:	jmp    404589 <__sprintf_chk@plt+0x3299>
  404bd9:	nop    DWORD PTR [rax+0x0]
  404be0:	mov    eax,r9d
  404be3:	mov    ecx,0x1
  404be8:	shr    eax,0x17
  404beb:	shl    rax,0x4
  404bef:	add    rax,r11
  404bf2:	mov    edx,DWORD PTR [rax+0x8]
  404bf5:	test   edx,edx
  404bf7:	jne    404fb9 <__sprintf_chk@plt+0x3cc9>
  404bfd:	shr    r9d,0xe
  404c01:	and    r9d,0x1ff
  404c08:	cmp    r9d,ecx
  404c0b:	je     404a55 <__sprintf_chk@plt+0x3765>
  404c11:	mov    rax,QWORD PTR [rax]
  404c14:	mov    DWORD PTR [rbx+0x8],edx
  404c17:	mov    QWORD PTR [rbx],rax
  404c1a:	mov    eax,DWORD PTR [r12+0x4]
  404c1f:	shr    eax,0xe
  404c22:	lea    r15,[r15+rax*4-0x7fffc]
  404c2a:	lea    r12,[r15+0x4]
  404c2e:	jmp    403f40 <__sprintf_chk@plt+0x2c50>
  404c33:	nop    DWORD PTR [rax+rax*1+0x0]
  404c38:	shr    r9d,0x17
  404c3c:	test   r9d,r9d
  404c3f:	jne    404f5d <__sprintf_chk@plt+0x3c6d>
  404c45:	mov    QWORD PTR [r13+0x30],r15
  404c49:	mov    edx,0xffffffff
  404c4e:	mov    rsi,rbx
  404c51:	mov    rdi,r13
  404c54:	call   403aa0 <__sprintf_chk@plt+0x27b0>
  404c59:	test   eax,eax
  404c5b:	je     40525c <__sprintf_chk@plt+0x3f6c>
  404c61:	cmp    eax,0x1
  404c64:	je     404589 <__sprintf_chk@plt+0x3299>
  404c6a:	mov    r15,r13
  404c6d:	jmp    403eae <__sprintf_chk@plt+0x2bbe>
  404c72:	nop    WORD PTR [rax+rax*1+0x0]
  404c78:	mov    eax,r9d
  404c7b:	mov    QWORD PTR [r13+0x30],r15
  404c7f:	shr    eax,0xe
  404c82:	test   ah,0x1
  404c85:	jne    404f31 <__sprintf_chk@plt+0x3c41>
  404c8b:	and    eax,0x1ff
  404c90:	shr    r9d,0x17
  404c94:	shl    rax,0x4
  404c98:	mov    rdx,rax
  404c9b:	add    rdx,r11
  404c9e:	test   r9d,0x100
  404ca5:	je     404f4e <__sprintf_chk@plt+0x3c5e>
  404cab:	movzx  esi,r9b
  404caf:	shl    rsi,0x4
  404cb3:	add    rsi,QWORD PTR [rsp+0x8]
  404cb8:	mov    rdi,r13
  404cbb:	call   408590 <__sprintf_chk@plt+0x72a0>
  404cc0:	cmp    ebp,eax
  404cc2:	jne    404dea <__sprintf_chk@plt+0x3afa>
  404cc8:	mov    eax,DWORD PTR [r12+0x4]
  404ccd:	shr    eax,0xe
  404cd0:	lea    r15,[r15+rax*4-0x7fffc]
  404cd8:	jmp    404dea <__sprintf_chk@plt+0x3afa>
  404cdd:	nop    DWORD PTR [rax]
  404ce0:	mov    eax,r9d
  404ce3:	mov    QWORD PTR [r13+0x30],r15
  404ce7:	shr    eax,0xe
  404cea:	test   ah,0x1
  404ced:	je     404f70 <__sprintf_chk@plt+0x3c80>
  404cf3:	movzx  r8d,al
  404cf7:	shr    r9d,0x17
  404cfb:	shl    r8,0x4
  404cff:	add    r8,QWORD PTR [rsp+0x8]
  404d04:	test   r9d,0x100
  404d0b:	je     404f90 <__sprintf_chk@plt+0x3ca0>
  404d11:	movzx  r9d,r9b
  404d15:	mov    rax,QWORD PTR [rsp+0x8]
  404d1a:	mov    edx,DWORD PTR [r8+0x8]
  404d1e:	mov    r11,r9
  404d21:	shl    r11,0x4
  404d25:	lea    rbx,[rax+r11*1]
  404d29:	mov    esi,DWORD PTR [rbx+0x8]
  404d2c:	cmp    esi,edx
  404d2e:	jne    404fac <__sprintf_chk@plt+0x3cbc>
  404d34:	cmp    esi,0x3
  404d37:	je     405575 <__sprintf_chk@plt+0x4285>
  404d3d:	cmp    esi,0x4
  404d40:	je     405593 <__sprintf_chk@plt+0x42a3>
  404d46:	mov    rdx,r8
  404d49:	mov    ecx,0xe
  404d4e:	mov    rsi,rbx
  404d51:	mov    rdi,r13
  404d54:	mov    QWORD PTR [rsp+0x10],r8
  404d59:	call   406850 <__sprintf_chk@plt+0x5560>
  404d5e:	cmp    eax,0xffffffff
  404d61:	mov    r8,QWORD PTR [rsp+0x10]
  404d66:	jne    404de2 <__sprintf_chk@plt+0x3af2>
  404d68:	mov    rsi,r8
  404d6b:	mov    ecx,0xd
  404d70:	mov    rdx,rbx
  404d73:	mov    rdi,r13
  404d76:	call   406850 <__sprintf_chk@plt+0x5560>
  404d7b:	cmp    eax,0xffffffff
  404d7e:	mov    r8,QWORD PTR [rsp+0x10]
  404d83:	je     405670 <__sprintf_chk@plt+0x4380>
  404d89:	test   eax,eax
  404d8b:	sete   al
  404d8e:	movzx  eax,al
  404d91:	jmp    404de2 <__sprintf_chk@plt+0x3af2>
  404d93:	nop    DWORD PTR [rax+rax*1+0x0]
  404d98:	mov    eax,r9d
  404d9b:	shr    eax,0x17
  404d9e:	test   ah,0x1
  404da1:	jne    404f01 <__sprintf_chk@plt+0x3c11>
  404da7:	movsxd rbx,eax
  404daa:	shr    r9d,0xe
  404dae:	shl    rbx,0x4
  404db2:	add    rbx,r11
  404db5:	test   r9d,0x100
  404dbc:	je     404f1e <__sprintf_chk@plt+0x3c2e>
  404dc2:	movzx  r9d,r9b
  404dc6:	shl    r9,0x4
  404dca:	add    r9,QWORD PTR [rsp+0x8]
  404dcf:	mov    eax,DWORD PTR [rbx+0x8]
  404dd2:	mov    QWORD PTR [r13+0x30],r15
  404dd6:	cmp    eax,DWORD PTR [r9+0x8]
  404dda:	je     4053bb <__sprintf_chk@plt+0x40cb>
  404de0:	xor    eax,eax
  404de2:	cmp    ebp,eax
  404de4:	je     404cc8 <__sprintf_chk@plt+0x39d8>
  404dea:	mov    r11,QWORD PTR [r13+0x18]
  404dee:	lea    r12,[r15+0x4]
  404df2:	jmp    403f40 <__sprintf_chk@plt+0x2c50>
  404df7:	mov    rax,rdx
  404dfa:	nop    WORD PTR [rax+rax*1+0x0]
  404e00:	movzx  ecx,BYTE PTR [r15+0x20]
  404e05:	movzx  esi,BYTE PTR [rdx+0x9]
  404e09:	xor    ecx,0x3
  404e0c:	and    ecx,0x3
  404e0f:	test   cl,sil
  404e12:	je     40484b <__sprintf_chk@plt+0x355b>
  404e18:	xor    esi,0x3
  404e1b:	mov    BYTE PTR [rdx+0x9],sil
  404e1f:	jmp    40484b <__sprintf_chk@plt+0x355b>
  404e24:	mov    rsi,rbx
  404e27:	mov    rdi,rbx
  404e2a:	mov    DWORD PTR [rsp+0x20],r9d
  404e2f:	mov    QWORD PTR [rsp+0x10],r11
  404e34:	call   402f20 <__sprintf_chk@plt+0x1c30>
  404e39:	test   rax,rax
  404e3c:	mov    r11,QWORD PTR [rsp+0x10]
  404e41:	mov    r9d,DWORD PTR [rsp+0x20]
  404e46:	je     403f9d <__sprintf_chk@plt+0x2cad>
  404e4c:	mov    eax,DWORD PTR [rbx+0x18]
  404e4f:	cmp    eax,0x3
  404e52:	je     404e94 <__sprintf_chk@plt+0x3ba4>
  404e54:	cmp    eax,0x4
  404e57:	je     404e6f <__sprintf_chk@plt+0x3b7f>
  404e59:	mov    DWORD PTR [rsp+0x20],r9d
  404e5e:	mov    QWORD PTR [rsp+0x10],r11
  404e63:	lea    rsi,[rip+0x118b1]        # 41671b <__sprintf_chk@plt+0x1542b>
  404e6a:	jmp    403fae <__sprintf_chk@plt+0x2cbe>
  404e6f:	lea    rdi,[rbx+0x10]
  404e73:	mov    DWORD PTR [rsp+0x20],r9d
  404e78:	mov    QWORD PTR [rsp+0x10],r11
  404e7d:	mov    rsi,rdi
  404e80:	call   402f20 <__sprintf_chk@plt+0x1c30>
  404e85:	test   rax,rax
  404e88:	mov    r11,QWORD PTR [rsp+0x10]
  404e8d:	mov    r9d,DWORD PTR [rsp+0x20]
  404e92:	je     404e59 <__sprintf_chk@plt+0x3b69>
  404e94:	mov    eax,DWORD PTR [rbx+0x28]
  404e97:	cmp    eax,0x3
  404e9a:	je     403fc2 <__sprintf_chk@plt+0x2cd2>
  404ea0:	cmp    eax,0x4
  404ea3:	je     4053d0 <__sprintf_chk@plt+0x40e0>
  404ea9:	lea    rsi,[rip+0x11888]        # 416738 <__sprintf_chk@plt+0x15448>
  404eb0:	mov    rdi,r13
  404eb3:	xor    eax,eax
  404eb5:	call   405730 <__sprintf_chk@plt+0x4440>
  404eba:	vmovsd xmm0,QWORD PTR ds:0x0
  404ec3:	ud2    
  404ec5:	xor    edx,edx
  404ec7:	cmp    ecx,0x1
  404eca:	jne    4040cd <__sprintf_chk@plt+0x2ddd>
  404ed0:	mov    r9d,DWORD PTR [rax]
  404ed3:	xor    edx,edx
  404ed5:	test   r9d,r9d
  404ed8:	sete   dl
  404edb:	jmp    4040cd <__sprintf_chk@plt+0x2ddd>
  404ee0:	mov    r9d,DWORD PTR [r12+0x4]
  404ee5:	add    r12,0x8
  404ee9:	jmp    404906 <__sprintf_chk@plt+0x3616>
  404eee:	and    esi,0x7
  404ef1:	sub    eax,0x1
  404ef4:	add    esi,0x8
  404ef7:	shlx   esi,esi,eax
  404efc:	jmp    4043c7 <__sprintf_chk@plt+0x30d7>
  404f01:	movzx  ebx,al
  404f04:	shr    r9d,0xe
  404f08:	shl    rbx,0x4
  404f0c:	add    rbx,QWORD PTR [rsp+0x8]
  404f11:	test   r9d,0x100
  404f18:	jne    404dc2 <__sprintf_chk@plt+0x3ad2>
  404f1e:	and    r9d,0x1ff
  404f25:	shl    r9,0x4
  404f29:	add    r9,r11
  404f2c:	jmp    404dcf <__sprintf_chk@plt+0x3adf>
  404f31:	movzx  edx,al
  404f34:	shr    r9d,0x17
  404f38:	shl    rdx,0x4
  404f3c:	add    rdx,QWORD PTR [rsp+0x8]
  404f41:	test   r9d,0x100
  404f48:	jne    404cab <__sprintf_chk@plt+0x39bb>
  404f4e:	movsxd rsi,r9d
  404f51:	shl    rsi,0x4
  404f55:	add    rsi,r11
  404f58:	jmp    404cb8 <__sprintf_chk@plt+0x39c8>
  404f5d:	mov    eax,r9d
  404f60:	shl    rax,0x4
  404f64:	add    rax,rbx
  404f67:	mov    QWORD PTR [r13+0x10],rax
  404f6b:	jmp    404c45 <__sprintf_chk@plt+0x3955>
  404f70:	and    eax,0x1ff
  404f75:	shr    r9d,0x17
  404f79:	shl    rax,0x4
  404f7d:	mov    r8,rax
  404f80:	add    r8,r11
  404f83:	test   r9d,0x100
  404f8a:	jne    404d11 <__sprintf_chk@plt+0x3a21>
  404f90:	movsxd r9,r9d
  404f93:	mov    edx,DWORD PTR [r8+0x8]
  404f97:	mov    rbx,r9
  404f9a:	shl    rbx,0x4
  404f9e:	add    rbx,r11
  404fa1:	mov    esi,DWORD PTR [rbx+0x8]
  404fa4:	cmp    esi,edx
  404fa6:	je     404d34 <__sprintf_chk@plt+0x3a44>
  404fac:	mov    rdi,r13
  404faf:	call   408550 <__sprintf_chk@plt+0x7260>
  404fb4:	jmp    404de2 <__sprintf_chk@plt+0x3af2>
  404fb9:	xor    ecx,ecx
  404fbb:	cmp    edx,0x1
  404fbe:	jne    404bfd <__sprintf_chk@plt+0x390d>
  404fc4:	mov    esi,DWORD PTR [rax]
  404fc6:	xor    ecx,ecx
  404fc8:	test   esi,esi
  404fca:	sete   cl
  404fcd:	jmp    404bfd <__sprintf_chk@plt+0x390d>
  404fd2:	shl    rax,0x4
  404fd6:	add    rax,rbx
  404fd9:	mov    QWORD PTR [r13+0x10],rax
  404fdd:	jmp    404b9d <__sprintf_chk@plt+0x38ad>
  404fe2:	xor    eax,eax
  404fe4:	cmp    edx,0x1
  404fe7:	jne    404af0 <__sprintf_chk@plt+0x3800>
  404fed:	mov    edi,DWORD PTR [rbx]
  404fef:	xor    eax,eax
  404ff1:	test   edi,edi
  404ff3:	sete   al
  404ff6:	jmp    404af0 <__sprintf_chk@plt+0x3800>
  404ffb:	mov    rax,r13
  404ffe:	shl    rax,0x4
  405002:	lea    rax,[rbx+rax*1-0x10]
  405007:	mov    QWORD PTR [r10+0x10],rax
  40500b:	jmp    404a73 <__sprintf_chk@plt+0x3783>
  405010:	movzx  edx,al
  405013:	shl    rdx,0x4
  405017:	add    rdx,QWORD PTR [rsp+0x8]
  40501c:	jmp    40453a <__sprintf_chk@plt+0x324a>
  405021:	movzx  ecx,al
  405024:	shr    r9d,0x17
  405028:	shl    rcx,0x4
  40502c:	add    rcx,QWORD PTR [rsp+0x8]
  405031:	test   r9d,0x100
  405038:	jne    404433 <__sprintf_chk@plt+0x3143>
  40503e:	movsxd rdx,r9d
  405041:	shl    rdx,0x4
  405045:	add    rdx,r11
  405048:	jmp    404440 <__sprintf_chk@plt+0x3150>
  40504d:	movzx  edx,al
  405050:	shr    r9d,0xe
  405054:	shl    rdx,0x4
  405058:	add    rdx,QWORD PTR [rsp+0x8]
  40505d:	test   r9d,0x100
  405064:	jne    40425a <__sprintf_chk@plt+0x2f6a>
  40506a:	and    r9d,0x1ff
  405071:	mov    rcx,r9
  405074:	shl    rcx,0x4
  405078:	add    rcx,r11
  40507b:	jmp    404267 <__sprintf_chk@plt+0x2f77>
  405080:	movzx  edx,al
  405083:	shr    r9d,0xe
  405087:	shl    rdx,0x4
  40508b:	add    rdx,QWORD PTR [rsp+0x8]
  405090:	test   r9d,0x100
  405097:	jne    4041fa <__sprintf_chk@plt+0x2f0a>
  40509d:	and    r9d,0x1ff
  4050a4:	mov    rcx,r9
  4050a7:	shl    rcx,0x4
  4050ab:	add    rcx,r11
  4050ae:	jmp    404207 <__sprintf_chk@plt+0x2f17>
  4050b3:	movzx  edx,al
  4050b6:	shr    r9d,0xe
  4050ba:	shl    rdx,0x4
  4050be:	add    rdx,QWORD PTR [rsp+0x8]
  4050c3:	test   r9d,0x100
  4050ca:	jne    4041a2 <__sprintf_chk@plt+0x2eb2>
  4050d0:	and    r9d,0x1ff
  4050d7:	mov    rcx,r9
  4050da:	shl    rcx,0x4
  4050de:	add    rcx,r11
  4050e1:	jmp    4041af <__sprintf_chk@plt+0x2ebf>
  4050e6:	movzx  edx,al
  4050e9:	shr    r9d,0xe
  4050ed:	shl    rdx,0x4
  4050f1:	add    rdx,QWORD PTR [rsp+0x8]
  4050f6:	test   r9d,0x100
  4050fd:	jne    40414a <__sprintf_chk@plt+0x2e5a>
  405103:	and    r9d,0x1ff
  40510a:	mov    rcx,r9
  40510d:	shl    rcx,0x4
  405111:	add    rcx,r11
  405114:	jmp    404157 <__sprintf_chk@plt+0x2e67>
  405119:	movzx  edx,al
  40511c:	shr    r9d,0xe
  405120:	shl    rdx,0x4
  405124:	add    rdx,QWORD PTR [rsp+0x8]
  405129:	test   r9d,0x100
  405130:	jne    40431a <__sprintf_chk@plt+0x302a>
  405136:	and    r9d,0x1ff
  40513d:	mov    rcx,r9
  405140:	shl    rcx,0x4
  405144:	add    rcx,r11
  405147:	jmp    404327 <__sprintf_chk@plt+0x3037>
  40514c:	movzx  edx,al
  40514f:	shr    r9d,0xe
  405153:	shl    rdx,0x4
  405157:	add    rdx,QWORD PTR [rsp+0x8]
  40515c:	test   r9d,0x100
  405163:	jne    4042ba <__sprintf_chk@plt+0x2fca>
  405169:	and    r9d,0x1ff
  405170:	mov    rcx,r9
  405173:	shl    rcx,0x4
  405177:	add    rcx,r11
  40517a:	jmp    4042c7 <__sprintf_chk@plt+0x2fd7>
  40517f:	and    r9d,0x1ff
  405186:	mov    rdx,r9
  405189:	shl    rdx,0x4
  40518d:	add    rdx,r11
  405190:	jmp    40457e <__sprintf_chk@plt+0x328e>
  405195:	and    r9d,0x7
  405199:	sub    eax,0x1
  40519c:	lea    edx,[r9+0x8]
  4051a0:	shlx   edx,edx,eax
  4051a5:	mov    eax,esi
  4051a7:	sar    eax,0x3
  4051aa:	and    eax,0x1f
  4051ad:	je     4043c7 <__sprintf_chk@plt+0x30d7>
  4051b3:	jmp    404eee <__sprintf_chk@plt+0x3bfe>
  4051b8:	mov    r11,QWORD PTR [r10+0x18]
  4051bc:	mov    r12,QWORD PTR [r10+0x30]
  4051c0:	jmp    403f22 <__sprintf_chk@plt+0x2c32>
  4051c5:	vmovsd xmm0,QWORD PTR [rdx]
  4051c9:	mov    r12,r15
  4051cc:	mov    DWORD PTR [rbx+0x8],0x3
  4051d3:	vxorpd xmm0,xmm0,XMMWORD PTR [rip+0x122a5]        # 417480 <__sprintf_chk@plt+0x16190>
  4051db:	vmovsd QWORD PTR [rbx],xmm0
  4051df:	jmp    403f40 <__sprintf_chk@plt+0x2c50>
  4051e4:	mov    esi,0x5
  4051e9:	call   403380 <__sprintf_chk@plt+0x2090>
  4051ee:	lea    rdx,[rip+0x114db]        # 4166d0 <__sprintf_chk@plt+0x153e0>
  4051f5:	mov    QWORD PTR [r13+0x30],r15
  4051f9:	mov    r8d,0xc
  4051ff:	mov    rcx,rbx
  405202:	mov    rsi,rbp
  405205:	mov    rdi,r13
  405208:	call   4067d0 <__sprintf_chk@plt+0x54e0>
  40520d:	test   eax,eax
  40520f:	jne    404589 <__sprintf_chk@plt+0x3299>
  405215:	movsxd rdx,DWORD PTR [rbp+0x8]
  405219:	lea    rax,[rip+0x17b80]        # 41cda0 <__sprintf_chk@plt+0x1bab0>
  405220:	lea    rsi,[rip+0x114bc]        # 4166e3 <__sprintf_chk@plt+0x153f3>
  405227:	mov    rdi,r13
  40522a:	mov    rcx,QWORD PTR [rax+rdx*8]
  40522e:	lea    rdx,[rip+0x114d8]        # 41670d <__sprintf_chk@plt+0x1541d>
  405235:	xor    eax,eax
  405237:	call   405730 <__sprintf_chk@plt+0x4440>
  40523c:	jmp    404589 <__sprintf_chk@plt+0x3299>
  405241:	lea    rsi,[rip+0x114b4]        # 4166fc <__sprintf_chk@plt+0x1540c>
  405248:	xor    eax,eax
  40524a:	mov    DWORD PTR [rsp+0x8],edx
  40524e:	call   405730 <__sprintf_chk@plt+0x4440>
  405253:	mov    edx,DWORD PTR [rsp+0x8]
  405257:	jmp    403e9f <__sprintf_chk@plt+0x2baf>
  40525c:	cmp    QWORD PTR [r13+0x98],0x0
  405264:	mov    rbx,QWORD PTR [r13+0x28]
  405268:	mov    r10,r13
  40526b:	mov    rbp,QWORD PTR [rbx-0x20]
  40526f:	mov    r12,QWORD PTR [rbx+0x8]
  405273:	je     405588 <__sprintf_chk@plt+0x4298>
  405279:	mov    rsi,QWORD PTR [rbx-0x28]
  40527d:	mov    rdi,r13
  405280:	mov    QWORD PTR [rsp+0x8],r13
  405285:	call   403560 <__sprintf_chk@plt+0x2270>
  40528a:	mov    r10,QWORD PTR [rsp+0x8]
  40528f:	mov    rdx,QWORD PTR [rbx-0x20]
  405293:	mov    rdi,QWORD PTR [r10+0x28]
  405297:	mov    rax,QWORD PTR [rbx]
  40529a:	mov    rsi,QWORD PTR [r10+0x10]
  40529e:	sub    rax,r12
  4052a1:	cmp    r12,rsi
  4052a4:	lea    r11,[rdx+rax*1]
  4052a8:	mov    QWORD PTR [rbx-0x28],r11
  4052ac:	mov    QWORD PTR [r10+0x18],r11
  4052b0:	jae    405669 <__sprintf_chk@plt+0x4379>
  4052b6:	mov    rdx,rbp
  4052b9:	mov    rax,r12
  4052bc:	nop    DWORD PTR [rax+0x0]
  4052c0:	mov    rcx,QWORD PTR [rax]
  4052c3:	add    rax,0x10
  4052c7:	add    rdx,0x10
  4052cb:	mov    QWORD PTR [rdx-0x10],rcx
  4052cf:	mov    ecx,DWORD PTR [rax-0x8]
  4052d2:	mov    DWORD PTR [rdx-0x8],ecx
  4052d5:	cmp    rax,rsi
  4052d8:	jb     4052c0 <__sprintf_chk@plt+0x3fd0>
  4052da:	mov    rdx,r12
  4052dd:	not    rdx
  4052e0:	lea    rax,[rdx+rsi*1]
  4052e4:	and    rax,0xfffffffffffffff0
  4052e8:	add    rax,0x10
  4052ec:	mov    r12,QWORD PTR [r10+0x30]
  4052f0:	add    rbp,rax
  4052f3:	lea    rax,[rdi-0x28]
  4052f7:	mov    QWORD PTR [r10+0x10],rbp
  4052fb:	mov    QWORD PTR [rbx-0x18],rbp
  4052ff:	add    DWORD PTR [rbx-0x4],0x1
  405303:	mov    QWORD PTR [rbx-0x10],r12
  405307:	mov    QWORD PTR [r10+0x28],rax
  40530b:	jmp    403f22 <__sprintf_chk@plt+0x2c32>
  405310:	mov    rax,QWORD PTR [rbp+0x0]
  405314:	mov    rax,QWORD PTR [rax+0x10]
  405318:	test   rax,rax
  40531b:	js     405619 <__sprintf_chk@plt+0x4329>
  405321:	vxorpd xmm0,xmm0,xmm0
  405325:	vcvtsi2sd xmm0,xmm0,rax
  40532a:	vmovsd QWORD PTR [rbx],xmm0
  40532e:	mov    DWORD PTR [rbx+0x8],0x3
  405335:	mov    r12,r15
  405338:	jmp    403f40 <__sprintf_chk@plt+0x2c50>
  40533d:	mov    r10,r13
  405340:	add    DWORD PTR [rsp+0x4c],0x1
  405345:	mov    rax,QWORD PTR [r13+0x28]
  405349:	mov    r11,QWORD PTR [r13+0x18]
  40534d:	mov    r12,QWORD PTR [r13+0x30]
  405351:	jmp    403f22 <__sprintf_chk@plt+0x2c32>
  405356:	mov    rdi,r13
  405359:	call   408be0 <__sprintf_chk@plt+0x78f0>
  40535e:	jmp    40489b <__sprintf_chk@plt+0x35ab>
  405363:	mov    rdi,r13
  405366:	call   408be0 <__sprintf_chk@plt+0x78f0>
  40536b:	mov    rcx,QWORD PTR [rsp+0x10]
  405370:	jmp    404031 <__sprintf_chk@plt+0x2d41>
  405375:	mov    rdx,QWORD PTR [r13+0x38]
  405379:	sub    rdx,QWORD PTR [r13+0x10]
  40537d:	mov    eax,ebp
  40537f:	shl    eax,0x4
  405382:	mov    QWORD PTR [r13+0x30],r15
  405386:	cdqe   
  405388:	cmp    rdx,rax
  40538b:	jle    4055b3 <__sprintf_chk@plt+0x42c3>
  405391:	mov    r11,QWORD PTR [r13+0x18]
  405395:	movsxd rax,ebp
  405398:	mov    r9d,ebp
  40539b:	shl    rax,0x4
  40539f:	lea    rbx,[r11+rcx*1]
  4053a3:	add    rax,rbx
  4053a6:	mov    QWORD PTR [r13+0x10],rax
  4053aa:	jmp    40467d <__sprintf_chk@plt+0x338d>
  4053af:	vucomisd xmm0,xmm2
  4053b3:	setae  al
  4053b6:	jmp    404b43 <__sprintf_chk@plt+0x3853>
  4053bb:	cmp    eax,0x7
  4053be:	ja     405400 <__sprintf_chk@plt+0x4110>
  4053c0:	lea    rdx,[rip+0x10d8d]        # 416154 <__sprintf_chk@plt+0x14e64>
  4053c7:	movsxd rax,DWORD PTR [rdx+rax*4]
  4053cb:	add    rax,rdx
  4053ce:	jmp    rax
  4053d0:	mov    rsi,rbp
  4053d3:	mov    rdi,rbp
  4053d6:	mov    DWORD PTR [rsp+0x20],r9d
  4053db:	mov    QWORD PTR [rsp+0x10],r11
  4053e0:	call   402f20 <__sprintf_chk@plt+0x1c30>
  4053e5:	test   rax,rax
  4053e8:	mov    rbp,rax
  4053eb:	mov    r11,QWORD PTR [rsp+0x10]
  4053f0:	mov    r9d,DWORD PTR [rsp+0x20]
  4053f5:	jne    403fc2 <__sprintf_chk@plt+0x2cd2>
  4053fb:	jmp    404ea9 <__sprintf_chk@plt+0x3bb9>
  405400:	mov    rax,QWORD PTR [r9]
  405403:	cmp    QWORD PTR [rbx],rax
  405406:	sete   al
  405409:	movzx  eax,al
  40540c:	jmp    404de2 <__sprintf_chk@plt+0x3af2>
  405411:	mov    rax,QWORD PTR [rbx]
  405414:	mov    rdx,QWORD PTR [r9]
  405417:	mov    QWORD PTR [rsp+0x10],r9
  40541c:	cmp    rax,rdx
  40541f:	jne    40543b <__sprintf_chk@plt+0x414b>
  405421:	mov    eax,0x1
  405426:	jmp    404de2 <__sprintf_chk@plt+0x3af2>
  40542b:	mov    rax,QWORD PTR [rbx]
  40542e:	mov    rdx,QWORD PTR [r9]
  405431:	cmp    rax,rdx
  405434:	je     405421 <__sprintf_chk@plt+0x4131>
  405436:	mov    QWORD PTR [rsp+0x10],r9
  40543b:	mov    rdx,QWORD PTR [rdx+0x10]
  40543f:	mov    rsi,QWORD PTR [rax+0x10]
  405443:	lea    rdi,[r13+0x20]
  405447:	call   403180 <__sprintf_chk@plt+0x1e90>
  40544c:	test   rax,rax
  40544f:	mov    r9,QWORD PTR [rsp+0x10]
  405454:	je     404de0 <__sprintf_chk@plt+0x3af0>
  40545a:	mov    rdx,QWORD PTR [rax]
  40545d:	mov    ecx,DWORD PTR [rax+0x8]
  405460:	mov    r8,rbx
  405463:	mov    rsi,QWORD PTR [r13+0x10]
  405467:	mov    rdi,r13
  40546a:	call   406740 <__sprintf_chk@plt+0x5450>
  40546f:	mov    rax,QWORD PTR [r13+0x10]
  405473:	mov    edx,DWORD PTR [rax+0x8]
  405476:	test   edx,edx
  405478:	je     404de0 <__sprintf_chk@plt+0x3af0>
  40547e:	cmp    edx,0x1
  405481:	jne    405421 <__sprintf_chk@plt+0x4131>
  405483:	mov    r8d,DWORD PTR [rax]
  405486:	xor    eax,eax
  405488:	test   r8d,r8d
  40548b:	setne  al
  40548e:	jmp    404de2 <__sprintf_chk@plt+0x3af2>
  405493:	mov    eax,DWORD PTR [r9]
  405496:	cmp    DWORD PTR [rbx],eax
  405498:	sete   al
  40549b:	movzx  eax,al
  40549e:	jmp    404de2 <__sprintf_chk@plt+0x3af2>
  4054a3:	vmovsd xmm0,QWORD PTR [rbx]
  4054a7:	xor    eax,eax
  4054a9:	mov    edx,0x0
  4054ae:	vucomisd xmm0,QWORD PTR [r9]
  4054b3:	setnp  al
  4054b6:	cmovne eax,edx
  4054b9:	jmp    404de2 <__sprintf_chk@plt+0x3af2>
  4054be:	vmovsd xmm0,QWORD PTR [rdx]
  4054c2:	mov    r12,r15
  4054c5:	vdivsd xmm0,xmm0,QWORD PTR [rcx]
  4054c9:	mov    DWORD PTR [rbx+0x8],0x3
  4054d0:	vmovsd QWORD PTR [rbx],xmm0
  4054d4:	jmp    403f40 <__sprintf_chk@plt+0x2c50>
  4054d9:	vmovsd xmm0,QWORD PTR [rdx]
  4054dd:	mov    r12,r15
  4054e0:	vmulsd xmm0,xmm0,QWORD PTR [rcx]
  4054e4:	mov    DWORD PTR [rbx+0x8],0x3
  4054eb:	vmovsd QWORD PTR [rbx],xmm0
  4054ef:	jmp    403f40 <__sprintf_chk@plt+0x2c50>
  4054f4:	vmovsd xmm0,QWORD PTR [rdx]
  4054f8:	mov    r12,r15
  4054fb:	vaddsd xmm0,xmm0,QWORD PTR [rcx]
  4054ff:	mov    DWORD PTR [rbx+0x8],0x3
  405506:	vmovsd QWORD PTR [rbx],xmm0
  40550a:	jmp    403f40 <__sprintf_chk@plt+0x2c50>
  40550f:	vmovsd xmm1,QWORD PTR [rdx]
  405513:	mov    QWORD PTR [rsp+0x28],r11
  405518:	vmovsd xmm2,QWORD PTR [rcx]
  40551c:	mov    r12,r15
  40551f:	vmovsd QWORD PTR [rsp+0x10],xmm1
  405525:	vdivsd xmm0,xmm1,xmm2
  405529:	vmovsd QWORD PTR [rsp+0x20],xmm2
  40552f:	call   401260 <floor@plt>
  405534:	vmovsd xmm1,QWORD PTR [rsp+0x10]
  40553a:	mov    DWORD PTR [rbx+0x8],0x3
  405541:	vmovsd xmm2,QWORD PTR [rsp+0x20]
  405547:	mov    r11,QWORD PTR [rsp+0x28]
  40554c:	vfnmadd231sd xmm1,xmm2,xmm0
  405551:	vmovsd QWORD PTR [rbx],xmm1
  405555:	jmp    403f40 <__sprintf_chk@plt+0x2c50>
  40555a:	vmovsd xmm0,QWORD PTR [rdx]
  40555e:	mov    r12,r15
  405561:	vsubsd xmm0,xmm0,QWORD PTR [rcx]
  405565:	mov    DWORD PTR [rbx+0x8],0x3
  40556c:	vmovsd QWORD PTR [rbx],xmm0
  405570:	jmp    403f40 <__sprintf_chk@plt+0x2c50>
  405575:	vmovsd xmm0,QWORD PTR [r8]
  40557a:	xor    eax,eax
  40557c:	vucomisd xmm0,QWORD PTR [rbx]
  405580:	setae  al
  405583:	jmp    404de2 <__sprintf_chk@plt+0x3af2>
  405588:	mov    rdi,rbx
  40558b:	mov    rdx,rbp
  40558e:	jmp    405297 <__sprintf_chk@plt+0x3fa7>
  405593:	mov    rsi,QWORD PTR [r8]
  405596:	mov    rdi,QWORD PTR [rbx]
  405599:	call   4020a0 <__sprintf_chk@plt+0xdb0>
  40559e:	test   eax,eax
  4055a0:	setle  al
  4055a3:	movzx  eax,al
  4055a6:	jmp    404de2 <__sprintf_chk@plt+0x3af2>
  4055ab:	mov    r12,r15
  4055ae:	jmp    404876 <__sprintf_chk@plt+0x3586>
  4055b3:	mov    esi,ebp
  4055b5:	mov    rdi,r13
  4055b8:	mov    QWORD PTR [rsp+0x10],rcx
  4055bd:	call   406720 <__sprintf_chk@plt+0x5430>
  4055c2:	mov    rcx,QWORD PTR [rsp+0x10]
  4055c7:	jmp    405391 <__sprintf_chk@plt+0x40a1>
  4055cc:	lea    rdx,[rip+0x1108d]        # 416660 <__sprintf_chk@plt+0x15370>
  4055d3:	cmp    QWORD PTR [rbp+0x20],rdx
  4055d7:	je     405690 <__sprintf_chk@plt+0x43a0>
  4055dd:	movzx  edx,BYTE PTR [rbp+0xb]
  4055e1:	mov    ecx,0x1
  4055e6:	shlx   rcx,rcx,rdx
  4055eb:	mov    edx,eax
  4055ed:	mov    rsi,rbp
  4055f0:	mov    rdi,r13
  4055f3:	mov    QWORD PTR [rsp+0x28],r11
  4055f8:	mov    DWORD PTR [rsp+0x20],r8d
  4055fd:	mov    DWORD PTR [rsp+0x10],eax
  405601:	call   407c80 <__sprintf_chk@plt+0x6990>
  405606:	mov    r11,QWORD PTR [rsp+0x28]
  40560b:	mov    r8d,DWORD PTR [rsp+0x20]
  405610:	mov    eax,DWORD PTR [rsp+0x10]
  405614:	jmp    404926 <__sprintf_chk@plt+0x3636>
  405619:	mov    rdx,rax
  40561c:	vxorpd xmm0,xmm0,xmm0
  405620:	shr    rdx,1
  405623:	and    eax,0x1
  405626:	or     rdx,rax
  405629:	vcvtsi2sd xmm0,xmm0,rdx
  40562e:	vaddsd xmm0,xmm0,xmm0
  405632:	jmp    40532a <__sprintf_chk@plt+0x403a>
  405637:	vmovsd xmm1,QWORD PTR [rcx]
  40563b:	mov    QWORD PTR [rsp+0x10],r11
  405640:	vmovsd xmm0,QWORD PTR [rdx]
  405644:	mov    r12,r15
  405647:	call   4010d0 <pow@plt>
  40564c:	mov    DWORD PTR [rbx+0x8],0x3
  405653:	vmovsd QWORD PTR [rbx],xmm0
  405657:	mov    r11,QWORD PTR [rsp+0x10]
  40565c:	jmp    403f40 <__sprintf_chk@plt+0x2c50>
  405661:	mov    r15,r10
  405664:	jmp    403eae <__sprintf_chk@plt+0x2bbe>
  405669:	xor    eax,eax
  40566b:	jmp    4052ec <__sprintf_chk@plt+0x3ffc>
  405670:	mov    edx,DWORD PTR [r8+0x8]
  405674:	mov    esi,DWORD PTR [rbx+0x8]
  405677:	jmp    404fac <__sprintf_chk@plt+0x3cbc>
  40567c:	mov    QWORD PTR [rsp+0x10],r11
  405681:	call   401a50 <__sprintf_chk@plt+0x760>
  405686:	mov    r11,QWORD PTR [rsp+0x10]
  40568b:	jmp    403f40 <__sprintf_chk@plt+0x2c50>
  405690:	xor    ecx,ecx
  405692:	jmp    4055eb <__sprintf_chk@plt+0x42fb>
  405697:	call   401100 <__stack_chk_fail@plt>
  40569c:	nop    DWORD PTR [rax+0x0]
  4056a0:	push   rbx
  4056a1:	mov    rax,QWORD PTR [rdi+0xb0]
  4056a8:	mov    rbx,rdi
  4056ab:	test   rax,rax
  4056ae:	je     405708 <__sprintf_chk@plt+0x4418>
  4056b0:	add    rax,QWORD PTR [rdi+0x40]
  4056b4:	cmp    DWORD PTR [rax+0x8],0x6
  4056b8:	je     4056c4 <__sprintf_chk@plt+0x43d4>
  4056ba:	mov    esi,0x5
  4056bf:	call   403380 <__sprintf_chk@plt+0x2090>
  4056c4:	mov    rsi,QWORD PTR [rdi+0x10]
  4056c8:	mov    rdx,QWORD PTR [rsi-0x10]
  4056cc:	mov    QWORD PTR [rsi],rdx
  4056cf:	mov    edx,DWORD PTR [rsi-0x8]
  4056d2:	mov    DWORD PTR [rsi+0x8],edx
  4056d5:	mov    rdx,QWORD PTR [rax]
  4056d8:	mov    eax,DWORD PTR [rax+0x8]
  4056db:	mov    QWORD PTR [rsi-0x10],rdx
  4056df:	mov    DWORD PTR [rsi-0x8],eax
  4056e2:	mov    rax,QWORD PTR [rdi+0x38]
  4056e6:	sub    rax,rsi
  4056e9:	cmp    rax,0x10
  4056ed:	jle    405715 <__sprintf_chk@plt+0x4425>
  4056ef:	lea    rax,[rsi+0x10]
  4056f3:	mov    edx,0x1
  4056f8:	sub    rsi,0x10
  4056fc:	mov    rdi,rbx
  4056ff:	mov    QWORD PTR [rbx+0x10],rax
  405703:	call   403e50 <__sprintf_chk@plt+0x2b60>
  405708:	mov    esi,0x2
  40570d:	mov    rdi,rbx
  405710:	call   403380 <__sprintf_chk@plt+0x2090>
  405715:	mov    esi,0x1
  40571a:	call   406720 <__sprintf_chk@plt+0x5430>
  40571f:	mov    rsi,QWORD PTR [rbx+0x10]
  405723:	jmp    4056ef <__sprintf_chk@plt+0x43ff>
  405725:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  405730:	push   r13
  405732:	push   r12
  405734:	push   rbp
  405735:	push   rbx
  405736:	mov    rbx,rdi
  405739:	sub    rsp,0x128
  405740:	test   al,al
  405742:	mov    QWORD PTR [rsp+0x80],rdx
  40574a:	mov    QWORD PTR [rsp+0x88],rcx
  405752:	mov    QWORD PTR [rsp+0x90],r8
  40575a:	mov    QWORD PTR [rsp+0x98],r9
  405762:	je     4057ac <__sprintf_chk@plt+0x44bc>
  405764:	vmovaps XMMWORD PTR [rsp+0xa0],xmm0
  40576d:	vmovaps XMMWORD PTR [rsp+0xb0],xmm1
  405776:	vmovaps XMMWORD PTR [rsp+0xc0],xmm2
  40577f:	vmovaps XMMWORD PTR [rsp+0xd0],xmm3
  405788:	vmovaps XMMWORD PTR [rsp+0xe0],xmm4
  405791:	vmovaps XMMWORD PTR [rsp+0xf0],xmm5
  40579a:	vmovaps XMMWORD PTR [rsp+0x100],xmm6
  4057a3:	vmovaps XMMWORD PTR [rsp+0x110],xmm7
  4057ac:	mov    rax,QWORD PTR fs:0x28
  4057b5:	mov    QWORD PTR [rsp+0x68],rax
  4057ba:	xor    eax,eax
  4057bc:	lea    rax,[rsp+0x150]
  4057c4:	lea    rdx,[rsp+0x8]
  4057c9:	mov    rdi,rbx
  4057cc:	mov    QWORD PTR [rsp+0x10],rax
  4057d1:	lea    rax,[rsp+0x70]
  4057d6:	mov    DWORD PTR [rsp+0x8],0x10
  4057de:	mov    DWORD PTR [rsp+0xc],0x30
  4057e6:	mov    QWORD PTR [rsp+0x18],rax
  4057eb:	call   406ee0 <__sprintf_chk@plt+0x5bf0>
  4057f0:	mov    r9,QWORD PTR [rbx+0x28]
  4057f4:	mov    rbp,rax
  4057f7:	mov    rax,QWORD PTR [r9+0x8]
  4057fb:	cmp    DWORD PTR [rax+0x8],0x6
  4057ff:	je     405809 <__sprintf_chk@plt+0x4519>
  405801:	mov    rdi,rbx
  405804:	call   4056a0 <__sprintf_chk@plt+0x43b0>
  405809:	mov    rax,QWORD PTR [rax]
  40580c:	cmp    BYTE PTR [rax+0xa],0x0
  405810:	jne    405801 <__sprintf_chk@plt+0x4511>
  405812:	mov    rsi,r9
  405815:	mov    rdi,rbx
  405818:	call   401bf0 <__sprintf_chk@plt+0x900>
  40581d:	mov    rdx,QWORD PTR [r9+0x8]
  405821:	mov    r13d,eax
  405824:	cmp    DWORD PTR [rdx+0x8],0x6
  405828:	je     405834 <__sprintf_chk@plt+0x4544>
  40582a:	mov    rax,QWORD PTR ds:0x40
  405832:	ud2    
  405834:	mov    rax,QWORD PTR [rdx]
  405837:	cmp    BYTE PTR [rax+0xa],0x0
  40583b:	jne    40582a <__sprintf_chk@plt+0x453a>
  40583d:	mov    rax,QWORD PTR [rax+0x20]
  405841:	lea    r12,[rsp+0x20]
  405846:	mov    edx,0x3c
  40584b:	mov    rdi,r12
  40584e:	mov    rsi,QWORD PTR [rax+0x40]
  405852:	add    rsi,0x18
  405856:	call   401fb0 <__sprintf_chk@plt+0xcc0>
  40585b:	lea    rsi,[rip+0x10ef2]        # 416754 <__sprintf_chk@plt+0x15464>
  405862:	mov    r8,rbp
  405865:	mov    ecx,r13d
  405868:	mov    rdx,r12
  40586b:	mov    rdi,rbx
  40586e:	xor    eax,eax
  405870:	call   407220 <__sprintf_chk@plt+0x5f30>
  405875:	jmp    405801 <__sprintf_chk@plt+0x4511>
  405877:	nop    WORD PTR [rax+rax*1+0x0]
  405880:	mov    rax,QWORD PTR [rdi+0x20]
  405884:	cmp    BYTE PTR [rax+0x21],0x2
  405888:	je     40595c <__sprintf_chk@plt+0x466c>
  40588e:	push   r13
  405890:	push   r12
  405892:	mov    r12,rdi
  405895:	push   rbp
  405896:	push   rbx
  405897:	mov    ebp,esi
  405899:	sub    rsp,0x8
  40589d:	cmp    esi,0xffffffff
  4058a0:	jl     40595e <__sprintf_chk@plt+0x466e>
  4058a6:	movsxd rcx,esi
  4058a9:	xor    edx,edx
  4058ab:	xor    esi,esi
  4058ad:	shl    rcx,0x3
  4058b1:	call   403450 <__sprintf_chk@plt+0x2160>
  4058b6:	test   ebp,ebp
  4058b8:	mov    rbx,rax
  4058bb:	mov    r13,QWORD PTR [r12+0x20]
  4058c0:	jle    4058e0 <__sprintf_chk@plt+0x45f0>
  4058c2:	lea    edx,[rbp-0x1]
  4058c5:	lea    rdx,[rax+rdx*8+0x8]
  4058ca:	nop    WORD PTR [rax+rax*1+0x0]
  4058d0:	mov    QWORD PTR [rax],0x0
  4058d7:	add    rax,0x8
  4058db:	cmp    rax,rdx
  4058de:	jne    4058d0 <__sprintf_chk@plt+0x45e0>
  4058e0:	mov    r11d,DWORD PTR [r13+0xc]
  4058e4:	test   r11d,r11d
  4058e7:	jle    40596c <__sprintf_chk@plt+0x467c>
  4058ed:	mov    rsi,QWORD PTR [r13+0x0]
  4058f1:	lea    eax,[r11-0x1]
  4058f5:	lea    edi,[rbp-0x1]
  4058f8:	lea    r10,[rsi+rax*8+0x8]
  4058fd:	mov    r9,rsi
  405900:	mov    rax,QWORD PTR [r9]
  405903:	test   rax,rax
  405906:	je     405930 <__sprintf_chk@plt+0x4640>
  405908:	nop    DWORD PTR [rax+rax*1+0x0]
  405910:	mov    edx,DWORD PTR [rax+0xc]
  405913:	mov    rcx,QWORD PTR [rax]
  405916:	and    edx,edi
  405918:	test   rcx,rcx
  40591b:	movsxd rdx,edx
  40591e:	lea    rdx,[rbx+rdx*8]
  405922:	mov    r8,QWORD PTR [rdx]
  405925:	mov    QWORD PTR [rax],r8
  405928:	mov    QWORD PTR [rdx],rax
  40592b:	mov    rax,rcx
  40592e:	jne    405910 <__sprintf_chk@plt+0x4620>
  405930:	add    r9,0x8
  405934:	cmp    r10,r9
  405937:	jne    405900 <__sprintf_chk@plt+0x4610>
  405939:	movsxd rdx,r11d
  40593c:	mov    rdi,r12
  40593f:	xor    ecx,ecx
  405941:	shl    rdx,0x3
  405945:	call   403450 <__sprintf_chk@plt+0x2160>
  40594a:	mov    DWORD PTR [r13+0xc],ebp
  40594e:	mov    QWORD PTR [r13+0x0],rbx
  405952:	add    rsp,0x8
  405956:	pop    rbx
  405957:	pop    rbp
  405958:	pop    r12
  40595a:	pop    r13
  40595c:	repz ret 
  40595e:	lea    rsi,[rip+0x116eb]        # 417050 <__sprintf_chk@plt+0x15d60>
  405965:	xor    eax,eax
  405967:	call   405730 <__sprintf_chk@plt+0x4440>
  40596c:	mov    rsi,QWORD PTR [r13+0x0]
  405970:	jmp    405939 <__sprintf_chk@plt+0x4649>
  405972:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40597d:	nop    DWORD PTR [rax]
  405980:	mov    rcx,rdx
  405983:	push   r15
  405985:	push   r14
  405987:	shr    rcx,0x5
  40598b:	push   r13
  40598d:	push   r12
  40598f:	push   rbp
  405990:	push   rbx
  405991:	add    rcx,0x1
  405995:	mov    r14,rsi
  405998:	mov    r13,rdx
  40599b:	mov    ebp,edx
  40599d:	sub    rsp,0x18
  4059a1:	cmp    rdx,rcx
  4059a4:	mov    QWORD PTR [rsp+0x8],rdi
  4059a9:	jb     4059ce <__sprintf_chk@plt+0x46de>
  4059ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4059b0:	mov    eax,ebp
  4059b2:	mov    esi,ebp
  4059b4:	shr    esi,0x2
  4059b7:	shl    eax,0x5
  4059ba:	add    eax,esi
  4059bc:	movzx  esi,BYTE PTR [r14+rdx*1-0x1]
  4059c2:	sub    rdx,rcx
  4059c5:	add    eax,esi
  4059c7:	xor    ebp,eax
  4059c9:	cmp    rcx,rdx
  4059cc:	jbe    4059b0 <__sprintf_chk@plt+0x46c0>
  4059ce:	mov    rax,QWORD PTR [rsp+0x8]
  4059d3:	mov    r15,QWORD PTR [rax+0x20]
  4059d7:	mov    eax,DWORD PTR [r15+0xc]
  4059db:	mov    rdx,QWORD PTR [r15]
  4059de:	sub    eax,0x1
  4059e1:	and    eax,ebp
  4059e3:	cdqe   
  4059e5:	mov    rbx,QWORD PTR [rdx+rax*8]
  4059e9:	test   rbx,rbx
  4059ec:	jne    4059f8 <__sprintf_chk@plt+0x4708>
  4059ee:	jmp    405a40 <__sprintf_chk@plt+0x4750>
  4059f0:	mov    rbx,QWORD PTR [rbx]
  4059f3:	test   rbx,rbx
  4059f6:	je     405a40 <__sprintf_chk@plt+0x4750>
  4059f8:	cmp    r13,QWORD PTR [rbx+0x10]
  4059fc:	mov    r12,rbx
  4059ff:	jne    4059f0 <__sprintf_chk@plt+0x4700>
  405a01:	lea    rsi,[rbx+0x18]
  405a05:	mov    rdx,r13
  405a08:	mov    rdi,r14
  405a0b:	call   401160 <memcmp@plt>
  405a10:	test   eax,eax
  405a12:	jne    4059f0 <__sprintf_chk@plt+0x4700>
  405a14:	movzx  eax,BYTE PTR [r15+0x20]
  405a19:	movzx  edx,BYTE PTR [rbx+0x9]
  405a1d:	xor    eax,0x3
  405a20:	and    eax,0x3
  405a23:	test   al,dl
  405a25:	je     405a2d <__sprintf_chk@plt+0x473d>
  405a27:	xor    edx,0x3
  405a2a:	mov    BYTE PTR [rbx+0x9],dl
  405a2d:	add    rsp,0x18
  405a31:	mov    rax,r12
  405a34:	pop    rbx
  405a35:	pop    rbp
  405a36:	pop    r12
  405a38:	pop    r13
  405a3a:	pop    r14
  405a3c:	pop    r15
  405a3e:	ret    
  405a3f:	nop
  405a40:	lea    rax,[r13+0x1]
  405a44:	cmp    rax,0xffffffffffffffe5
  405a48:	ja     405af0 <__sprintf_chk@plt+0x4800>
  405a4e:	mov    rbx,QWORD PTR [rsp+0x8]
  405a53:	lea    rcx,[r13+0x19]
  405a57:	xor    edx,edx
  405a59:	xor    esi,esi
  405a5b:	mov    rdi,rbx
  405a5e:	call   403450 <__sprintf_chk@plt+0x2160>
  405a63:	mov    r12,rax
  405a66:	mov    DWORD PTR [rax+0xc],ebp
  405a69:	mov    QWORD PTR [rax+0x10],r13
  405a6d:	mov    rax,QWORD PTR [rbx+0x20]
  405a71:	lea    rdi,[r12+0x18]
  405a76:	mov    rdx,r13
  405a79:	mov    rsi,r14
  405a7c:	movzx  eax,BYTE PTR [rax+0x20]
  405a80:	mov    BYTE PTR [r12+0x8],0x4
  405a86:	mov    BYTE PTR [r12+0xa],0x0
  405a8c:	and    eax,0x3
  405a8f:	mov    BYTE PTR [r12+0x9],al
  405a94:	call   4011c0 <memcpy@plt>
  405a99:	mov    BYTE PTR [r12+r13*1+0x18],0x0
  405a9f:	mov    rdx,QWORD PTR [rbx+0x20]
  405aa3:	mov    esi,DWORD PTR [rdx+0xc]
  405aa6:	lea    eax,[rsi-0x1]
  405aa9:	and    ebp,eax
  405aab:	mov    rax,QWORD PTR [rdx]
  405aae:	lea    rax,[rax+rbp*8]
  405ab2:	mov    rdi,QWORD PTR [rax]
  405ab5:	mov    QWORD PTR [r12],rdi
  405ab9:	mov    QWORD PTR [rax],r12
  405abc:	mov    eax,DWORD PTR [rdx+0x8]
  405abf:	add    eax,0x1
  405ac2:	cmp    eax,esi
  405ac4:	mov    DWORD PTR [rdx+0x8],eax
  405ac7:	jbe    405a2d <__sprintf_chk@plt+0x473d>
  405acd:	cmp    esi,0x3ffffffe
  405ad3:	jg     405a2d <__sprintf_chk@plt+0x473d>
  405ad9:	add    esi,esi
  405adb:	mov    rdi,rbx
  405ade:	call   405880 <__sprintf_chk@plt+0x4590>
  405ae3:	jmp    405a2d <__sprintf_chk@plt+0x473d>
  405ae8:	nop    DWORD PTR [rax+rax*1+0x0]
  405af0:	mov    rdi,QWORD PTR [rsp+0x8]
  405af5:	lea    rsi,[rip+0x11554]        # 417050 <__sprintf_chk@plt+0x15d60>
  405afc:	xor    eax,eax
  405afe:	call   405730 <__sprintf_chk@plt+0x4440>
  405b03:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  405b0e:	xchg   ax,ax
  405b10:	push   rbp
  405b11:	push   rbx
  405b12:	mov    rbp,rdi
  405b15:	mov    rbx,rdx
  405b18:	sub    rsp,0x8
  405b1c:	cmp    esi,0x4
  405b1f:	je     405b80 <__sprintf_chk@plt+0x4890>
  405b21:	jg     405b50 <__sprintf_chk@plt+0x4860>
  405b23:	cmp    esi,0x2
  405b26:	jl     405b39 <__sprintf_chk@plt+0x4849>
  405b28:	mov    rax,QWORD PTR [rdi+0x10]
  405b2c:	mov    rdx,QWORD PTR [rax-0x10]
  405b30:	mov    eax,DWORD PTR [rax-0x8]
  405b33:	mov    QWORD PTR [rbx],rdx
  405b36:	mov    DWORD PTR [rbx+0x8],eax
  405b39:	add    rbx,0x10
  405b3d:	mov    QWORD PTR [rbp+0x10],rbx
  405b41:	add    rsp,0x8
  405b45:	pop    rbx
  405b46:	pop    rbp
  405b47:	ret    
  405b48:	nop    DWORD PTR [rax+rax*1+0x0]
  405b50:	cmp    esi,0x5
  405b53:	jne    405b39 <__sprintf_chk@plt+0x4849>
  405b55:	lea    rsi,[rip+0x10c14]        # 416770 <__sprintf_chk@plt+0x15480>
  405b5c:	mov    edx,0x17
  405b61:	add    rbx,0x10
  405b65:	call   405980 <__sprintf_chk@plt+0x4690>
  405b6a:	mov    DWORD PTR [rbx-0x8],0x4
  405b71:	mov    QWORD PTR [rbx-0x10],rax
  405b75:	mov    QWORD PTR [rbp+0x10],rbx
  405b79:	add    rsp,0x8
  405b7d:	pop    rbx
  405b7e:	pop    rbp
  405b7f:	ret    
  405b80:	lea    rsi,[rip+0x10bd7]        # 41675e <__sprintf_chk@plt+0x1546e>
  405b87:	mov    edx,0x11
  405b8c:	add    rbx,0x10
  405b90:	call   405980 <__sprintf_chk@plt+0x4690>
  405b95:	mov    DWORD PTR [rbx-0x8],0x4
  405b9c:	mov    QWORD PTR [rbx-0x10],rax
  405ba0:	mov    QWORD PTR [rbp+0x10],rbx
  405ba4:	add    rsp,0x8
  405ba8:	pop    rbx
  405ba9:	pop    rbp
  405baa:	ret    
  405bab:	nop    DWORD PTR [rax+rax*1+0x0]
  405bb0:	push   r12
  405bb2:	push   rbp
  405bb3:	lea    rcx,[rip+0x10bce]        # 416788 <__sprintf_chk@plt+0x15498>
  405bba:	push   rbx
  405bbb:	mov    edx,0x20
  405bc0:	mov    r12,rdi
  405bc3:	mov    rbp,rsi
  405bc6:	sub    rsp,0x30
  405bca:	vmovsd xmm0,QWORD PTR [rsi]
  405bce:	mov    rdi,rsp
  405bd1:	mov    esi,0x1
  405bd6:	mov    rax,QWORD PTR fs:0x28
  405bdf:	mov    QWORD PTR [rsp+0x28],rax
  405be4:	xor    eax,eax
  405be6:	mov    eax,0x1
  405beb:	mov    rbx,rsp
  405bee:	call   4012f0 <__sprintf_chk@plt>
  405bf3:	mov    rdx,rsp
  405bf6:	mov    ecx,DWORD PTR [rdx]
  405bf8:	add    rdx,0x4
  405bfc:	lea    eax,[rcx-0x1010101]
  405c02:	andn   eax,ecx,eax
  405c07:	and    eax,0x80808080
  405c0c:	je     405bf6 <__sprintf_chk@plt+0x4906>
  405c0e:	mov    ecx,eax
  405c10:	mov    rdi,r12
  405c13:	shr    ecx,0x10
  405c16:	test   eax,0x8080
  405c1b:	cmove  eax,ecx
  405c1e:	lea    rcx,[rdx+0x2]
  405c22:	mov    esi,eax
  405c24:	cmove  rdx,rcx
  405c28:	add    sil,al
  405c2b:	mov    rsi,rbx
  405c2e:	sbb    rdx,0x3
  405c32:	sub    rdx,rbx
  405c35:	call   405980 <__sprintf_chk@plt+0x4690>
  405c3a:	mov    rdi,QWORD PTR [rsp+0x28]
  405c3f:	xor    rdi,QWORD PTR fs:0x28
  405c48:	mov    QWORD PTR [rbp+0x0],rax
  405c4c:	mov    DWORD PTR [rbp+0x8],0x4
  405c53:	mov    eax,0x1
  405c58:	jne    405c63 <__sprintf_chk@plt+0x4973>
  405c5a:	add    rsp,0x30
  405c5e:	pop    rbx
  405c5f:	pop    rbp
  405c60:	pop    r12
  405c62:	ret    
  405c63:	call   401100 <__stack_chk_fail@plt>
  405c68:	nop    DWORD PTR [rax+rax*1+0x0]
  405c70:	push   rbx
  405c71:	mov    r8,rdi
  405c74:	call   402b60 <__sprintf_chk@plt+0x1870>
  405c79:	mov    rbx,rax
  405c7c:	mov    eax,DWORD PTR [rax+0x8]
  405c7f:	cmp    eax,0x4
  405c82:	je     405cc4 <__sprintf_chk@plt+0x49d4>
  405c84:	jle    405cb0 <__sprintf_chk@plt+0x49c0>
  405c86:	cmp    eax,0x5
  405c89:	je     405ca0 <__sprintf_chk@plt+0x49b0>
  405c8b:	cmp    eax,0x7
  405c8e:	jne    405cd0 <__sprintf_chk@plt+0x49e0>
  405c90:	mov    rax,QWORD PTR [rbx]
  405c93:	pop    rbx
  405c94:	mov    rax,QWORD PTR [rax+0x20]
  405c98:	ret    
  405c99:	nop    DWORD PTR [rax+0x0]
  405ca0:	mov    rdi,QWORD PTR [rbx]
  405ca3:	call   402730 <__sprintf_chk@plt+0x1440>
  405ca8:	pop    rbx
  405ca9:	cdqe   
  405cab:	ret    
  405cac:	nop    DWORD PTR [rax+0x0]
  405cb0:	cmp    eax,0x3
  405cb3:	jne    405cd0 <__sprintf_chk@plt+0x49e0>
  405cb5:	mov    rsi,rbx
  405cb8:	mov    rdi,r8
  405cbb:	call   405bb0 <__sprintf_chk@plt+0x48c0>
  405cc0:	test   eax,eax
  405cc2:	je     405cd0 <__sprintf_chk@plt+0x49e0>
  405cc4:	mov    rax,QWORD PTR [rbx]
  405cc7:	pop    rbx
  405cc8:	mov    rax,QWORD PTR [rax+0x10]
  405ccc:	ret    
  405ccd:	nop    DWORD PTR [rax]
  405cd0:	xor    eax,eax
  405cd2:	pop    rbx
  405cd3:	ret    
  405cd4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  405cdf:	nop
  405ce0:	push   r13
  405ce2:	push   r12
  405ce4:	push   rbp
  405ce5:	push   rbx
  405ce6:	mov    rbx,rdi
  405ce9:	sub    rsp,0x8
  405ced:	cmp    esi,0xffffffff
  405cf0:	mov    r13,QWORD PTR [rdi+0x50]
  405cf4:	jl     405d48 <__sprintf_chk@plt+0x4a58>
  405cf6:	movsxd rax,esi
  405cf9:	mov    r12d,esi
  405cfc:	mov    rsi,r13
  405cff:	lea    rbp,[rax+rax*4]
  405d03:	movsxd rax,DWORD PTR [rdi+0x5c]
  405d07:	shl    rbp,0x3
  405d0b:	mov    rcx,rbp
  405d0e:	lea    rdx,[rax+rax*4]
  405d12:	shl    rdx,0x3
  405d16:	call   403450 <__sprintf_chk@plt+0x2160>
  405d1b:	mov    rdx,QWORD PTR [rbx+0x28]
  405d1f:	mov    QWORD PTR [rbx+0x50],rax
  405d23:	mov    DWORD PTR [rbx+0x5c],r12d
  405d27:	sub    rdx,r13
  405d2a:	add    rdx,rax
  405d2d:	lea    rax,[rax+rbp*1-0x28]
  405d32:	mov    QWORD PTR [rbx+0x28],rdx
  405d36:	mov    QWORD PTR [rbx+0x48],rax
  405d3a:	add    rsp,0x8
  405d3e:	pop    rbx
  405d3f:	pop    rbp
  405d40:	pop    r12
  405d42:	pop    r13
  405d44:	ret    
  405d45:	nop    DWORD PTR [rax]
  405d48:	lea    rsi,[rip+0x11301]        # 417050 <__sprintf_chk@plt+0x15d60>
  405d4f:	xor    eax,eax
  405d51:	call   405730 <__sprintf_chk@plt+0x4440>
  405d56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405d60:	push   r15
  405d62:	push   r14
  405d64:	push   r13
  405d66:	push   r12
  405d68:	push   rbp
  405d69:	push   rbx
  405d6a:	mov    rbx,rdi
  405d6d:	sub    rsp,0x18
  405d71:	mov    r12,QWORD PTR [rdi+0xb0]
  405d78:	mov    QWORD PTR [rdi+0xb0],r8
  405d7f:	mov    QWORD PTR [rsp+0x8],rcx
  405d84:	movzx  r14d,WORD PTR [rdi+0x60]
  405d89:	mov    rbp,QWORD PTR [rdi+0x28]
  405d8d:	mov    r15,QWORD PTR [rdi+0x50]
  405d91:	movzx  r13d,BYTE PTR [rdi+0x65]
  405d96:	call   402150 <__sprintf_chk@plt+0xe60>
  405d9b:	test   eax,eax
  405d9d:	mov    rcx,QWORD PTR [rsp+0x8]
  405da2:	jne    405dc0 <__sprintf_chk@plt+0x4ad0>
  405da4:	mov    QWORD PTR [rbx+0xb0],r12
  405dab:	add    rsp,0x18
  405daf:	pop    rbx
  405db0:	pop    rbp
  405db1:	pop    r12
  405db3:	pop    r13
  405db5:	pop    r14
  405db7:	pop    r15
  405db9:	ret    
  405dba:	nop    WORD PTR [rax+rax*1+0x0]
  405dc0:	add    rcx,QWORD PTR [rbx+0x40]
  405dc4:	mov    rdi,rbx
  405dc7:	sub    rbp,r15
  405dca:	mov    DWORD PTR [rsp+0x8],eax
  405dce:	mov    rsi,rcx
  405dd1:	mov    r15,rcx
  405dd4:	call   403560 <__sprintf_chk@plt+0x2270>
  405dd9:	mov    eax,DWORD PTR [rsp+0x8]
  405ddd:	mov    rdx,r15
  405de0:	mov    rdi,rbx
  405de3:	mov    esi,eax
  405de5:	call   405b10 <__sprintf_chk@plt+0x4820>
  405dea:	mov    rdx,rbp
  405ded:	add    rdx,QWORD PTR [rbx+0x50]
  405df1:	cmp    DWORD PTR [rbx+0x5c],0x4e20
  405df8:	mov    WORD PTR [rbx+0x60],r14w
  405dfd:	mov    eax,DWORD PTR [rsp+0x8]
  405e01:	mov    rcx,QWORD PTR [rdx]
  405e04:	mov    QWORD PTR [rbx+0x28],rdx
  405e08:	mov    rdx,QWORD PTR [rdx+0x18]
  405e0c:	mov    BYTE PTR [rbx+0x65],r13b
  405e10:	mov    QWORD PTR [rbx+0x18],rcx
  405e14:	mov    QWORD PTR [rbx+0x30],rdx
  405e18:	jle    405da4 <__sprintf_chk@plt+0x4ab4>
  405e1a:	sar    rbp,0x3
  405e1e:	imul   ebp,ebp,0xcccccccd
  405e24:	cmp    ebp,0x4e1e
  405e2a:	jg     405da4 <__sprintf_chk@plt+0x4ab4>
  405e30:	mov    esi,0x4e20
  405e35:	mov    rdi,rbx
  405e38:	call   405ce0 <__sprintf_chk@plt+0x49f0>
  405e3d:	mov    eax,DWORD PTR [rsp+0x8]
  405e41:	jmp    405da4 <__sprintf_chk@plt+0x4ab4>
  405e46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405e50:	push   rbp
  405e51:	push   rbx
  405e52:	mov    rbx,rdi
  405e55:	sub    rsp,0x38
  405e59:	mov    rcx,QWORD PTR [rdi+0x10]
  405e5d:	sub    rcx,QWORD PTR [rdi+0x40]
  405e61:	mov    r8,QWORD PTR [rdi+0xb0]
  405e68:	mov    QWORD PTR [rsp],rsi
  405e6c:	lea    rsi,[rip+0xdded]        # 413c60 <__sprintf_chk@plt+0x12970>
  405e73:	mov    QWORD PTR [rsp+0x20],rdx
  405e78:	mov    rdx,rsp
  405e7b:	mov    QWORD PTR [rsp+0x8],0x0
  405e84:	mov    rax,QWORD PTR fs:0x28
  405e8d:	mov    QWORD PTR [rsp+0x28],rax
  405e92:	xor    eax,eax
  405e94:	mov    QWORD PTR [rsp+0x18],0x0
  405e9d:	call   405d60 <__sprintf_chk@plt+0x4a70>
  405ea2:	mov    rdx,QWORD PTR [rsp+0x18]
  405ea7:	mov    rsi,QWORD PTR [rsp+0x8]
  405eac:	xor    ecx,ecx
  405eae:	mov    rdi,rbx
  405eb1:	mov    ebp,eax
  405eb3:	call   403450 <__sprintf_chk@plt+0x2160>
  405eb8:	mov    rdi,QWORD PTR [rsp+0x28]
  405ebd:	xor    rdi,QWORD PTR fs:0x28
  405ec6:	jne    405ed1 <__sprintf_chk@plt+0x4be1>
  405ec8:	add    rsp,0x38
  405ecc:	mov    eax,ebp
  405ece:	pop    rbx
  405ecf:	pop    rbp
  405ed0:	ret    
  405ed1:	call   401100 <__stack_chk_fail@plt>
  405ed6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405ee0:	cmp    ecx,0xffffffff
  405ee3:	push   r12
  405ee5:	push   rbp
  405ee6:	push   rbx
  405ee7:	jl     405f50 <__sprintf_chk@plt+0x4c60>
  405ee9:	mov    rbp,rdx
  405eec:	movsxd rdx,DWORD PTR [rdx]
  405eef:	mov    r12,rsi
  405ef2:	mov    rsi,QWORD PTR [rsi]
  405ef5:	mov    ebx,ecx
  405ef7:	movsxd rcx,ecx
  405efa:	shl    rcx,0x4
  405efe:	shl    rdx,0x4
  405f02:	call   403450 <__sprintf_chk@plt+0x2160>
  405f07:	mov    ecx,DWORD PTR [rbp+0x0]
  405f0a:	mov    QWORD PTR [r12],rax
  405f0e:	cmp    ebx,ecx
  405f10:	jle    405f47 <__sprintf_chk@plt+0x4c57>
  405f12:	movsxd rsi,ecx
  405f15:	not    ecx
  405f17:	add    ecx,ebx
  405f19:	mov    rdx,rsi
  405f1c:	add    rcx,rsi
  405f1f:	shl    rdx,0x4
  405f23:	shl    rcx,0x4
  405f27:	lea    rdx,[rax+rdx*1+0x8]
  405f2c:	lea    rax,[rax+rcx*1+0x18]
  405f31:	nop    DWORD PTR [rax+0x0]
  405f38:	mov    DWORD PTR [rdx],0x0
  405f3e:	add    rdx,0x10
  405f42:	cmp    rdx,rax
  405f45:	jne    405f38 <__sprintf_chk@plt+0x4c48>
  405f47:	mov    DWORD PTR [rbp+0x0],ebx
  405f4a:	pop    rbx
  405f4b:	pop    rbp
  405f4c:	pop    r12
  405f4e:	ret    
  405f4f:	nop
  405f50:	lea    rsi,[rip+0x110f9]        # 417050 <__sprintf_chk@plt+0x15d60>
  405f57:	xor    eax,eax
  405f59:	call   405730 <__sprintf_chk@plt+0x4440>
  405f5e:	xchg   ax,ax
  405f60:	push   r13
  405f62:	push   r12
  405f64:	lea    r12d,[rsi+0x6]
  405f68:	push   rbp
  405f69:	push   rbx
  405f6a:	mov    rbx,rdi
  405f6d:	sub    rsp,0x8
  405f71:	cmp    r12d,0xffffffff
  405f75:	jl     406040 <__sprintf_chk@plt+0x4d50>
  405f7b:	movsxd rdx,DWORD PTR [rdi+0x58]
  405f7f:	mov    rbp,QWORD PTR [rdi+0x40]
  405f83:	movsxd r13,r12d
  405f86:	shl    r13,0x4
  405f8a:	mov    rcx,r13
  405f8d:	mov    rsi,rbp
  405f90:	shl    rdx,0x4
  405f94:	call   403450 <__sprintf_chk@plt+0x2160>
  405f99:	lea    rdx,[rax+r13*1-0x60]
  405f9e:	mov    QWORD PTR [rbx+0x40],rax
  405fa2:	mov    DWORD PTR [rbx+0x58],r12d
  405fa6:	mov    QWORD PTR [rbx+0x38],rdx
  405faa:	mov    rdx,QWORD PTR [rbx+0x10]
  405fae:	sub    rdx,rbp
  405fb1:	add    rdx,rax
  405fb4:	mov    QWORD PTR [rbx+0x10],rdx
  405fb8:	mov    rdx,QWORD PTR [rbx+0x98]
  405fbf:	test   rdx,rdx
  405fc2:	je     405fe2 <__sprintf_chk@plt+0x4cf2>
  405fc4:	nop    DWORD PTR [rax+0x0]
  405fc8:	mov    rcx,QWORD PTR [rdx+0x10]
  405fcc:	sub    rcx,rbp
  405fcf:	add    rax,rcx
  405fd2:	mov    QWORD PTR [rdx+0x10],rax
  405fd6:	mov    rdx,QWORD PTR [rdx]
  405fd9:	mov    rax,QWORD PTR [rbx+0x40]
  405fdd:	test   rdx,rdx
  405fe0:	jne    405fc8 <__sprintf_chk@plt+0x4cd8>
  405fe2:	mov    rdx,QWORD PTR [rbx+0x50]
  405fe6:	mov    rsi,QWORD PTR [rbx+0x28]
  405fea:	cmp    rsi,rdx
  405fed:	jb     406023 <__sprintf_chk@plt+0x4d33>
  405fef:	nop
  405ff0:	mov    rcx,QWORD PTR [rdx+0x10]
  405ff4:	add    rdx,0x28
  405ff8:	sub    rcx,rbp
  405ffb:	add    rcx,rax
  405ffe:	mov    QWORD PTR [rdx-0x18],rcx
  406002:	mov    rcx,QWORD PTR [rdx-0x28]
  406006:	sub    rcx,rbp
  406009:	add    rcx,rax
  40600c:	mov    QWORD PTR [rdx-0x28],rcx
  406010:	mov    rcx,QWORD PTR [rdx-0x20]
  406014:	sub    rcx,rbp
  406017:	add    rcx,rax
  40601a:	mov    QWORD PTR [rdx-0x20],rcx
  40601e:	cmp    rsi,rdx
  406021:	jae    405ff0 <__sprintf_chk@plt+0x4d00>
  406023:	mov    rdx,QWORD PTR [rbx+0x18]
  406027:	sub    rdx,rbp
  40602a:	add    rax,rdx
  40602d:	mov    QWORD PTR [rbx+0x18],rax
  406031:	add    rsp,0x8
  406035:	pop    rbx
  406036:	pop    rbp
  406037:	pop    r12
  406039:	pop    r13
  40603b:	ret    
  40603c:	nop    DWORD PTR [rax+0x0]
  406040:	lea    rsi,[rip+0x11009]        # 417050 <__sprintf_chk@plt+0x15d60>
  406047:	xor    eax,eax
  406049:	call   405730 <__sprintf_chk@plt+0x4440>
  40604e:	xchg   ax,ax
  406050:	push   r15
  406052:	push   r14
  406054:	push   r13
  406056:	push   r12
  406058:	mov    r12,rdi
  40605b:	push   rbp
  40605c:	push   rbx
  40605d:	sub    rsp,0x18
  406061:	mov    rbx,QWORD PTR [rdi+0x38]
  406065:	movzx  edx,BYTE PTR [rbx+0x9]
  406069:	mov    eax,edx
  40606b:	or     eax,0x4
  40606e:	mov    BYTE PTR [rbx+0x9],al
  406071:	movzx  eax,BYTE PTR [rbx+0x8]
  406075:	cmp    al,0x6
  406077:	je     4063f0 <__sprintf_chk@plt+0x5100>
  40607d:	jbe    406358 <__sprintf_chk@plt+0x5068>
  406083:	cmp    al,0x8
  406085:	je     406170 <__sprintf_chk@plt+0x4e80>
  40608b:	cmp    al,0x9
  40608d:	jne    4063d8 <__sprintf_chk@plt+0x50e8>
  406093:	mov    rax,QWORD PTR [rbx+0x68]
  406097:	mov    QWORD PTR [rdi+0x38],rax
  40609b:	mov    rax,QWORD PTR [rbx+0x40]
  40609f:	test   rax,rax
  4060a2:	je     4060a8 <__sprintf_chk@plt+0x4db8>
  4060a4:	and    BYTE PTR [rax+0x9],0xfc
  4060a8:	mov    eax,DWORD PTR [rbx+0x4c]
  4060ab:	xor    ebp,ebp
  4060ad:	xor    r14d,r14d
  4060b0:	test   eax,eax
  4060b2:	jg     406212 <__sprintf_chk@plt+0x4f22>
  4060b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4060c0:	movsxd rsi,DWORD PTR [rbx+0x48]
  4060c4:	test   esi,esi
  4060c6:	jle    4060ed <__sprintf_chk@plt+0x4dfd>
  4060c8:	mov    rax,QWORD PTR [rbx+0x38]
  4060cc:	lea    edx,[rsi-0x1]
  4060cf:	lea    rcx,[rax+rdx*8+0x8]
  4060d4:	nop    DWORD PTR [rax+0x0]
  4060d8:	mov    rdx,QWORD PTR [rax]
  4060db:	test   rdx,rdx
  4060de:	je     4060e4 <__sprintf_chk@plt+0x4df4>
  4060e0:	and    BYTE PTR [rdx+0x9],0xfc
  4060e4:	add    rax,0x8
  4060e8:	cmp    rcx,rax
  4060eb:	jne    4060d8 <__sprintf_chk@plt+0x4de8>
  4060ed:	movsxd rdi,DWORD PTR [rbx+0x58]
  4060f1:	xor    ebp,ebp
  4060f3:	xor    r14d,r14d
  4060f6:	test   edi,edi
  4060f8:	jg     406249 <__sprintf_chk@plt+0x4f59>
  4060fe:	movsxd r8,DWORD PTR [rbx+0x5c]
  406102:	test   r8d,r8d
  406105:	jle    40613d <__sprintf_chk@plt+0x4e4d>
  406107:	nop    WORD PTR [rax+rax*1+0x0]
  406110:	lea    ecx,[r8-0x1]
  406114:	mov    rax,QWORD PTR [rbx+0x30]
  406118:	add    rcx,0x1
  40611c:	shl    rcx,0x4
  406120:	add    rcx,rax
  406123:	nop    DWORD PTR [rax+rax*1+0x0]
  406128:	mov    rdx,QWORD PTR [rax]
  40612b:	test   rdx,rdx
  40612e:	je     406134 <__sprintf_chk@plt+0x4e44>
  406130:	and    BYTE PTR [rdx+0x9],0xfc
  406134:	add    rax,0x10
  406138:	cmp    rcx,rax
  40613b:	jne    406128 <__sprintf_chk@plt+0x4e38>
  40613d:	movsxd rax,DWORD PTR [rbx+0x54]
  406141:	movsxd rdx,DWORD PTR [rbx+0x50]
  406145:	add    rsi,rdi
  406148:	lea    rdx,[rdx+rax*1+0x1e]
  40614d:	movsxd rax,DWORD PTR [rbx+0x4c]
  406151:	add    rsp,0x18
  406155:	pop    rbx
  406156:	pop    rbp
  406157:	pop    r12
  406159:	add    r8,rax
  40615c:	lea    rax,[rdx+r8*4]
  406160:	pop    r13
  406162:	lea    rax,[rax+rsi*2]
  406166:	pop    r14
  406168:	shl    rax,0x2
  40616c:	pop    r15
  40616e:	ret    
  40616f:	nop
  406170:	mov    rax,QWORD PTR [rbx+0xa0]
  406177:	and    edx,0xfffffffb
  40617a:	cmp    DWORD PTR [rbx+0x80],0x3
  406181:	mov    QWORD PTR [rdi+0x38],rax
  406185:	mov    rax,QWORD PTR [rdi+0x40]
  406189:	mov    QWORD PTR [rbx+0xa0],rax
  406190:	mov    QWORD PTR [rdi+0x40],rbx
  406194:	mov    BYTE PTR [rbx+0x9],dl
  406197:	jle    4061a7 <__sprintf_chk@plt+0x4eb7>
  406199:	mov    rsi,QWORD PTR [rbx+0x78]
  40619d:	test   BYTE PTR [rsi+0x9],0x3
  4061a1:	jne    406688 <__sprintf_chk@plt+0x5398>
  4061a7:	mov    rdi,QWORD PTR [rbx+0x50]
  4061ab:	mov    rsi,QWORD PTR [rbx+0x28]
  4061af:	mov    r8,QWORD PTR [rbx+0x10]
  4061b3:	cmp    rdi,rsi
  4061b6:	mov    rbp,r8
  4061b9:	ja     4061d4 <__sprintf_chk@plt+0x4ee4>
  4061bb:	mov    rax,rdi
  4061be:	xchg   ax,ax
  4061c0:	mov    rdx,QWORD PTR [rax+0x10]
  4061c4:	cmp    rbp,rdx
  4061c7:	cmovb  rbp,rdx
  4061cb:	add    rax,0x28
  4061cf:	cmp    rax,rsi
  4061d2:	jbe    4061c0 <__sprintf_chk@plt+0x4ed0>
  4061d4:	mov    r14,QWORD PTR [rbx+0x40]
  4061d8:	cmp    r8,r14
  4061db:	ja     406292 <__sprintf_chk@plt+0x4fa2>
  4061e1:	mov    r12,r14
  4061e4:	jmp    4062cc <__sprintf_chk@plt+0x4fdc>
  4061e9:	nop    DWORD PTR [rax+0x0]
  4061f0:	mov    rdi,r12
  4061f3:	call   401a50 <__sprintf_chk@plt+0x760>
  4061f8:	nop    DWORD PTR [rax+rax*1+0x0]
  406200:	add    r14d,0x1
  406204:	add    rbp,0x10
  406208:	cmp    r14d,DWORD PTR [rbx+0x4c]
  40620c:	jge    4060c0 <__sprintf_chk@plt+0x4dd0>
  406212:	mov    rax,rbp
  406215:	add    rax,QWORD PTR [rbx+0x10]
  406219:	cmp    DWORD PTR [rax+0x8],0x3
  40621d:	jle    406200 <__sprintf_chk@plt+0x4f10>
  40621f:	mov    rsi,QWORD PTR [rax]
  406222:	test   BYTE PTR [rsi+0x9],0x3
  406226:	je     406200 <__sprintf_chk@plt+0x4f10>
  406228:	jmp    4061f0 <__sprintf_chk@plt+0x4f00>
  40622a:	nop    WORD PTR [rax+rax*1+0x0]
  406230:	mov    rdi,r12
  406233:	call   401a50 <__sprintf_chk@plt+0x760>
  406238:	movsxd rdi,DWORD PTR [rbx+0x58]
  40623c:	add    r14d,0x1
  406240:	add    rbp,0x8
  406244:	cmp    r14d,edi
  406247:	jge    406269 <__sprintf_chk@plt+0x4f79>
  406249:	mov    rax,QWORD PTR [rbx+0x20]
  40624d:	mov    rsi,QWORD PTR [rax+rbp*1]
  406251:	test   rsi,rsi
  406254:	je     40623c <__sprintf_chk@plt+0x4f4c>
  406256:	test   BYTE PTR [rsi+0x9],0x3
  40625a:	jne    406230 <__sprintf_chk@plt+0x4f40>
  40625c:	add    r14d,0x1
  406260:	add    rbp,0x8
  406264:	cmp    r14d,edi
  406267:	jl     406249 <__sprintf_chk@plt+0x4f59>
  406269:	movsxd r8,DWORD PTR [rbx+0x5c]
  40626d:	movsxd rsi,DWORD PTR [rbx+0x48]
  406271:	test   r8d,r8d
  406274:	jg     406110 <__sprintf_chk@plt+0x4e20>
  40627a:	jmp    40613d <__sprintf_chk@plt+0x4e4d>
  40627f:	nop
  406280:	mov    rdi,r12
  406283:	call   401a50 <__sprintf_chk@plt+0x760>
  406288:	add    r14,0x10
  40628c:	cmp    r14,QWORD PTR [rbx+0x10]
  406290:	jae    4062ac <__sprintf_chk@plt+0x4fbc>
  406292:	cmp    DWORD PTR [r14+0x8],0x3
  406297:	jle    406288 <__sprintf_chk@plt+0x4f98>
  406299:	mov    rsi,QWORD PTR [r14]
  40629c:	test   BYTE PTR [rsi+0x9],0x3
  4062a0:	jne    406280 <__sprintf_chk@plt+0x4f90>
  4062a2:	add    r14,0x10
  4062a6:	cmp    r14,QWORD PTR [rbx+0x10]
  4062aa:	jb     406292 <__sprintf_chk@plt+0x4fa2>
  4062ac:	mov    rsi,QWORD PTR [rbx+0x28]
  4062b0:	mov    rdi,QWORD PTR [rbx+0x50]
  4062b4:	mov    r12,QWORD PTR [rbx+0x40]
  4062b8:	jmp    4062cc <__sprintf_chk@plt+0x4fdc>
  4062ba:	nop    WORD PTR [rax+rax*1+0x0]
  4062c0:	mov    DWORD PTR [r14+0x8],0x0
  4062c8:	add    r14,0x10
  4062cc:	cmp    r14,rbp
  4062cf:	jbe    4062c0 <__sprintf_chk@plt+0x4fd0>
  4062d1:	movsxd rcx,DWORD PTR [rbx+0x5c]
  4062d5:	cmp    ecx,0x4e20
  4062db:	jg     406500 <__sprintf_chk@plt+0x5210>
  4062e1:	sub    rsi,rdi
  4062e4:	mov    edx,0x10
  4062e9:	mov    rax,rsi
  4062ec:	sar    rax,0x3
  4062f0:	imul   eax,eax,0xccccccd
  4062f6:	shl    eax,0x2
  4062f9:	cmp    eax,0x10
  4062fc:	cmovl  eax,edx
  4062ff:	cmp    eax,ecx
  406301:	jl     406700 <__sprintf_chk@plt+0x5410>
  406307:	sub    rbp,r12
  40630a:	movsxd rdx,DWORD PTR [rbx+0x58]
  40630e:	mov    rax,rbp
  406311:	sar    rax,0x4
  406315:	shl    eax,0x2
  406318:	cmp    eax,edx
  40631a:	jge    406331 <__sprintf_chk@plt+0x5041>
  40631c:	cmp    edx,0x5a
  40631f:	jle    406331 <__sprintf_chk@plt+0x5041>
  406321:	mov    esi,edx
  406323:	mov    rdi,rbx
  406326:	sar    esi,1
  406328:	call   405f60 <__sprintf_chk@plt+0x4c70>
  40632d:	movsxd rdx,DWORD PTR [rbx+0x58]
  406331:	movsxd rcx,DWORD PTR [rbx+0x5c]
  406335:	lea    rax,[rcx+rcx*4]
  406339:	add    rsp,0x18
  40633d:	shl    rdx,0x4
  406341:	pop    rbx
  406342:	lea    rax,[rdx+rax*8+0xb8]
  40634a:	pop    rbp
  40634b:	pop    r12
  40634d:	pop    r13
  40634f:	pop    r14
  406351:	pop    r15
  406353:	ret    
  406354:	nop    DWORD PTR [rax+0x0]
  406358:	cmp    al,0x5
  40635a:	jne    4063d8 <__sprintf_chk@plt+0x50e8>
  40635c:	mov    rax,QWORD PTR [rbx+0x30]
  406360:	mov    QWORD PTR [rdi+0x38],rax
  406364:	mov    rdi,QWORD PTR [rbx+0x10]
  406368:	test   rdi,rdi
  40636b:	je     406381 <__sprintf_chk@plt+0x5091>
  40636d:	test   BYTE PTR [rdi+0x9],0x3
  406371:	jne    406698 <__sprintf_chk@plt+0x53a8>
  406377:	test   BYTE PTR [rdi+0xa],0x8
  40637b:	je     406600 <__sprintf_chk@plt+0x5310>
  406381:	xor    ebp,ebp
  406383:	movsxd r8,DWORD PTR [rbx+0x38]
  406387:	mov    eax,r8d
  40638a:	mov    rcx,r8
  40638d:	sub    r8,rax
  406390:	shl    rcx,0x4
  406394:	shl    r8,0x4
  406398:	lea    r14,[rcx-0x10]
  40639c:	lea    r15,[r8-0x10]
  4063a0:	jmp    4063b4 <__sprintf_chk@plt+0x50c4>
  4063a2:	nop    WORD PTR [rax+rax*1+0x0]
  4063a8:	mov    rdi,r12
  4063ab:	call   401a50 <__sprintf_chk@plt+0x760>
  4063b0:	sub    r14,0x10
  4063b4:	cmp    r14,r15
  4063b7:	je     406510 <__sprintf_chk@plt+0x5220>
  4063bd:	mov    rax,r14
  4063c0:	add    rax,QWORD PTR [rbx+0x18]
  4063c4:	cmp    DWORD PTR [rax+0x8],0x3
  4063c8:	jle    4063b0 <__sprintf_chk@plt+0x50c0>
  4063ca:	mov    rsi,QWORD PTR [rax]
  4063cd:	test   BYTE PTR [rsi+0x9],0x3
  4063d1:	je     4063b0 <__sprintf_chk@plt+0x50c0>
  4063d3:	jmp    4063a8 <__sprintf_chk@plt+0x50b8>
  4063d5:	nop    DWORD PTR [rax]
  4063d8:	add    rsp,0x18
  4063dc:	xor    eax,eax
  4063de:	pop    rbx
  4063df:	pop    rbp
  4063e0:	pop    r12
  4063e2:	pop    r13
  4063e4:	pop    r14
  4063e6:	pop    r15
  4063e8:	ret    
  4063e9:	nop    DWORD PTR [rax+0x0]
  4063f0:	mov    rax,QWORD PTR [rbx+0x10]
  4063f4:	mov    QWORD PTR [rdi+0x38],rax
  4063f8:	mov    rsi,QWORD PTR [rbx+0x18]
  4063fc:	test   BYTE PTR [rsi+0x9],0x3
  406400:	jne    406498 <__sprintf_chk@plt+0x51a8>
  406406:	cmp    BYTE PTR [rbx+0xa],0x0
  40640a:	je     406450 <__sprintf_chk@plt+0x5160>
  40640c:	cmp    BYTE PTR [rbx+0xb],0x0
  406410:	je     406711 <__sprintf_chk@plt+0x5421>
  406416:	lea    r14,[rbx+0x28]
  40641a:	xor    ebp,ebp
  40641c:	jmp    406433 <__sprintf_chk@plt+0x5143>
  40641e:	xchg   ax,ax
  406420:	movzx  eax,BYTE PTR [rbx+0xb]
  406424:	add    ebp,0x1
  406427:	add    r14,0x10
  40642b:	cmp    ebp,eax
  40642d:	jge    4064c0 <__sprintf_chk@plt+0x51d0>
  406433:	cmp    DWORD PTR [r14+0x8],0x3
  406438:	jle    406420 <__sprintf_chk@plt+0x5130>
  40643a:	mov    rsi,QWORD PTR [r14]
  40643d:	test   BYTE PTR [rsi+0x9],0x3
  406441:	je     406420 <__sprintf_chk@plt+0x5130>
  406443:	mov    rdi,r12
  406446:	call   401a50 <__sprintf_chk@plt+0x760>
  40644b:	jmp    406420 <__sprintf_chk@plt+0x5130>
  40644d:	nop    DWORD PTR [rax]
  406450:	mov    rsi,QWORD PTR [rbx+0x20]
  406454:	test   BYTE PTR [rsi+0x9],0x3
  406458:	jne    4064a8 <__sprintf_chk@plt+0x51b8>
  40645a:	xor    eax,eax
  40645c:	cmp    BYTE PTR [rbx+0xb],0x0
  406460:	je     4064e0 <__sprintf_chk@plt+0x51f0>
  406462:	mov    r14d,0x1
  406468:	jmp    40647f <__sprintf_chk@plt+0x518f>
  40646a:	nop    WORD PTR [rax+rax*1+0x0]
  406470:	movzx  eax,BYTE PTR [rbx+0xb]
  406474:	mov    edx,r14d
  406477:	add    r14,0x1
  40647b:	cmp    edx,eax
  40647d:	jge    4064c0 <__sprintf_chk@plt+0x51d0>
  40647f:	mov    rsi,QWORD PTR [rbx+r14*8+0x20]
  406484:	test   BYTE PTR [rsi+0x9],0x3
  406488:	je     406470 <__sprintf_chk@plt+0x5180>
  40648a:	mov    rdi,r12
  40648d:	call   401a50 <__sprintf_chk@plt+0x760>
  406492:	jmp    406470 <__sprintf_chk@plt+0x5180>
  406494:	nop    DWORD PTR [rax+0x0]
  406498:	call   401a50 <__sprintf_chk@plt+0x760>
  40649d:	jmp    406406 <__sprintf_chk@plt+0x5116>
  4064a2:	nop    WORD PTR [rax+rax*1+0x0]
  4064a8:	mov    rdi,r12
  4064ab:	call   401a50 <__sprintf_chk@plt+0x760>
  4064b0:	cmp    BYTE PTR [rbx+0xb],0x0
  4064b4:	jne    406462 <__sprintf_chk@plt+0x5172>
  4064b6:	xor    eax,eax
  4064b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4064c0:	cmp    BYTE PTR [rbx+0xa],0x0
  4064c4:	je     4064e0 <__sprintf_chk@plt+0x51f0>
  4064c6:	shl    eax,0x4
  4064c9:	add    rsp,0x18
  4064cd:	add    eax,0x28
  4064d0:	pop    rbx
  4064d1:	cdqe   
  4064d3:	pop    rbp
  4064d4:	pop    r12
  4064d6:	pop    r13
  4064d8:	pop    r14
  4064da:	pop    r15
  4064dc:	ret    
  4064dd:	nop    DWORD PTR [rax]
  4064e0:	lea    eax,[rax*8+0x28]
  4064e7:	add    rsp,0x18
  4064eb:	pop    rbx
  4064ec:	cdqe   
  4064ee:	pop    rbp
  4064ef:	pop    r12
  4064f1:	pop    r13
  4064f3:	pop    r14
  4064f5:	pop    r15
  4064f7:	ret    
  4064f8:	nop    DWORD PTR [rax+rax*1+0x0]
  406500:	movsxd rdx,DWORD PTR [rbx+0x58]
  406504:	jmp    406335 <__sprintf_chk@plt+0x5045>
  406509:	nop    DWORD PTR [rax+0x0]
  406510:	mov    DWORD PTR [rsp+0xc],ebp
  406514:	mov    DWORD PTR [rsp+0x8],0x0
  40651c:	movzx  eax,BYTE PTR [rbx+0xb]
  406520:	mov    edx,0x1
  406525:	shlx   rdx,rdx,rax
  40652a:	movsxd rax,edx
  40652d:	mov    edx,edx
  40652f:	lea    rcx,[rax+rax*4]
  406533:	sub    rax,rdx
  406536:	lea    rax,[rax+rax*4]
  40653a:	lea    r13,[rcx*8-0x28]
  406542:	lea    r15,[rax*8-0x28]
  40654a:	jmp    406563 <__sprintf_chk@plt+0x5273>
  40654c:	nop    DWORD PTR [rax+0x0]
  406550:	cmp    DWORD PTR [r8+0x18],0x3
  406555:	jle    40655f <__sprintf_chk@plt+0x526f>
  406557:	mov    DWORD PTR [r8+0x18],0xb
  40655f:	sub    r13,0x28
  406563:	cmp    r13,r15
  406566:	je     4065c0 <__sprintf_chk@plt+0x52d0>
  406568:	mov    r8,r13
  40656b:	add    r8,QWORD PTR [rbx+0x20]
  40656f:	mov    esi,DWORD PTR [r8+0x8]
  406573:	mov    r14,r8
  406576:	test   esi,esi
  406578:	je     406550 <__sprintf_chk@plt+0x5260>
  40657a:	test   ebp,ebp
  40657c:	jne    406598 <__sprintf_chk@plt+0x52a8>
  40657e:	cmp    DWORD PTR [r8+0x18],0x3
  406583:	jle    406598 <__sprintf_chk@plt+0x52a8>
  406585:	mov    rsi,QWORD PTR [r8+0x10]
  406589:	test   BYTE PTR [rsi+0x9],0x3
  40658d:	jne    4066b8 <__sprintf_chk@plt+0x53c8>
  406593:	nop    DWORD PTR [rax+rax*1+0x0]
  406598:	mov    ecx,DWORD PTR [rsp+0x8]
  40659c:	test   ecx,ecx
  40659e:	jne    40655f <__sprintf_chk@plt+0x526f>
  4065a0:	cmp    DWORD PTR [r14+0x8],0x3
  4065a5:	jle    40655f <__sprintf_chk@plt+0x526f>
  4065a7:	mov    rsi,QWORD PTR [r14]
  4065aa:	test   BYTE PTR [rsi+0x9],0x3
  4065ae:	je     40655f <__sprintf_chk@plt+0x526f>
  4065b0:	mov    rdi,r12
  4065b3:	call   401a50 <__sprintf_chk@plt+0x760>
  4065b8:	jmp    40655f <__sprintf_chk@plt+0x526f>
  4065ba:	nop    WORD PTR [rax+rax*1+0x0]
  4065c0:	mov    edx,DWORD PTR [rsp+0xc]
  4065c4:	test   edx,edx
  4065c6:	je     4065cc <__sprintf_chk@plt+0x52dc>
  4065c8:	and    BYTE PTR [rbx+0x9],0xfb
  4065cc:	movsxd rax,DWORD PTR [rbx+0x38]
  4065d0:	movzx  ecx,BYTE PTR [rbx+0xb]
  4065d4:	mov    edx,0x28
  4065d9:	add    rsp,0x18
  4065dd:	pop    rbx
  4065de:	pop    rbp
  4065df:	add    rax,0x4
  4065e3:	shlx   rdx,rdx,rcx
  4065e8:	shl    rax,0x4
  4065ec:	pop    r12
  4065ee:	add    rax,rdx
  4065f1:	pop    r13
  4065f3:	pop    r14
  4065f5:	pop    r15
  4065f7:	ret    
  4065f8:	nop    DWORD PTR [rax+rax*1+0x0]
  406600:	mov    rdx,QWORD PTR [r12+0x140]
  406608:	mov    esi,0x3
  40660d:	call   4018c0 <__sprintf_chk@plt+0x5d0>
  406612:	test   rax,rax
  406615:	je     406381 <__sprintf_chk@plt+0x5091>
  40661b:	cmp    DWORD PTR [rax+0x8],0x4
  40661f:	jne    406381 <__sprintf_chk@plt+0x5091>
  406625:	mov    r13,QWORD PTR [rax]
  406628:	mov    esi,0x6b
  40662d:	add    r13,0x18
  406631:	mov    rdi,r13
  406634:	call   401110 <strchr@plt>
  406639:	mov    esi,0x76
  40663e:	test   rax,rax
  406641:	mov    rdi,r13
  406644:	setne  r14b
  406648:	call   401110 <strchr@plt>
  40664d:	test   rax,rax
  406650:	movzx  ebp,r14b
  406654:	setne  dl
  406657:	test   r14b,r14b
  40665a:	movzx  esi,dl
  40665d:	jne    4066c8 <__sprintf_chk@plt+0x53d8>
  40665f:	test   dl,dl
  406661:	jne    4066c8 <__sprintf_chk@plt+0x53d8>
  406663:	test   rax,rax
  406666:	mov    DWORD PTR [rsp+0xc],0x1
  40666e:	mov    DWORD PTR [rsp+0x8],0x1
  406676:	jne    40651c <__sprintf_chk@plt+0x522c>
  40667c:	jmp    406383 <__sprintf_chk@plt+0x5093>
  406681:	nop    DWORD PTR [rax+0x0]
  406688:	call   401a50 <__sprintf_chk@plt+0x760>
  40668d:	jmp    4061a7 <__sprintf_chk@plt+0x4eb7>
  406692:	nop    WORD PTR [rax+rax*1+0x0]
  406698:	mov    rsi,rdi
  40669b:	mov    rdi,r12
  40669e:	call   401a50 <__sprintf_chk@plt+0x760>
  4066a3:	mov    rdi,QWORD PTR [rbx+0x10]
  4066a7:	test   rdi,rdi
  4066aa:	jne    406377 <__sprintf_chk@plt+0x5087>
  4066b0:	jmp    406381 <__sprintf_chk@plt+0x5091>
  4066b5:	nop    DWORD PTR [rax]
  4066b8:	mov    rdi,r12
  4066bb:	call   401a50 <__sprintf_chk@plt+0x760>
  4066c0:	jmp    406598 <__sprintf_chk@plt+0x52a8>
  4066c5:	nop    DWORD PTR [rax]
  4066c8:	lea    ecx,[rbp*8+0x0]
  4066cf:	shl    esi,0x4
  4066d2:	or     ecx,esi
  4066d4:	movzx  esi,BYTE PTR [rbx+0x9]
  4066d8:	and    esi,0xffffffe7
  4066db:	or     ecx,esi
  4066dd:	test   r14b,dl
  4066e0:	mov    BYTE PTR [rbx+0x9],cl
  4066e3:	mov    rcx,QWORD PTR [r12+0x48]
  4066e8:	mov    QWORD PTR [rbx+0x30],rcx
  4066ec:	mov    QWORD PTR [r12+0x48],rbx
  4066f1:	jne    4065c8 <__sprintf_chk@plt+0x52d8>
  4066f7:	jmp    406663 <__sprintf_chk@plt+0x5373>
  4066fc:	nop    DWORD PTR [rax+0x0]
  406700:	sar    ecx,1
  406702:	mov    rdi,rbx
  406705:	mov    esi,ecx
  406707:	call   405ce0 <__sprintf_chk@plt+0x49f0>
  40670c:	jmp    406307 <__sprintf_chk@plt+0x5017>
  406711:	xor    eax,eax
  406713:	jmp    4064c6 <__sprintf_chk@plt+0x51d6>
  406718:	nop    DWORD PTR [rax+rax*1+0x0]
  406720:	mov    eax,DWORD PTR [rdi+0x58]
  406723:	cmp    eax,esi
  406725:	jge    406730 <__sprintf_chk@plt+0x5440>
  406727:	add    esi,eax
  406729:	jmp    405f60 <__sprintf_chk@plt+0x4c70>
  40672e:	xchg   ax,ax
  406730:	lea    esi,[rax+rax*1]
  406733:	jmp    405f60 <__sprintf_chk@plt+0x4c70>
  406738:	nop    DWORD PTR [rax+rax*1+0x0]
  406740:	push   rbp
  406741:	push   rbx
  406742:	mov    rbx,rdi
  406745:	sub    rsp,0x8
  406749:	sub    rsi,QWORD PTR [rdi+0x40]
  40674d:	mov    rbp,rsi
  406750:	mov    rsi,QWORD PTR [rdi+0x10]
  406754:	mov    QWORD PTR [rsi],rdx
  406757:	mov    rax,QWORD PTR [r8]
  40675a:	mov    DWORD PTR [rsi+0x8],ecx
  40675d:	mov    QWORD PTR [rsi+0x10],rax
  406761:	mov    eax,DWORD PTR [r8+0x8]
  406765:	mov    DWORD PTR [rsi+0x18],eax
  406768:	mov    rax,QWORD PTR [r9]
  40676b:	mov    QWORD PTR [rsi+0x20],rax
  40676f:	mov    eax,DWORD PTR [r9+0x8]
  406773:	mov    DWORD PTR [rsi+0x28],eax
  406776:	mov    rax,QWORD PTR [rdi+0x38]
  40677a:	sub    rax,rsi
  40677d:	cmp    rax,0x30
  406781:	jg     406791 <__sprintf_chk@plt+0x54a1>
  406783:	mov    esi,0x3
  406788:	call   406720 <__sprintf_chk@plt+0x5430>
  40678d:	mov    rsi,QWORD PTR [rbx+0x10]
  406791:	lea    rax,[rsi+0x30]
  406795:	mov    edx,0x1
  40679a:	mov    rdi,rbx
  40679d:	mov    QWORD PTR [rbx+0x10],rax
  4067a1:	call   403e50 <__sprintf_chk@plt+0x2b60>
  4067a6:	mov    rax,QWORD PTR [rbx+0x10]
  4067aa:	mov    rsi,rbp
  4067ad:	add    rsi,QWORD PTR [rbx+0x40]
  4067b1:	lea    rdx,[rax-0x10]
  4067b5:	mov    QWORD PTR [rbx+0x10],rdx
  4067b9:	mov    rdx,QWORD PTR [rax-0x10]
  4067bd:	mov    eax,DWORD PTR [rax-0x8]
  4067c0:	mov    QWORD PTR [rsi],rdx
  4067c3:	mov    DWORD PTR [rsi+0x8],eax
  4067c6:	add    rsp,0x8
  4067ca:	pop    rbx
  4067cb:	pop    rbp
  4067cc:	ret    
  4067cd:	nop    DWORD PTR [rax]
  4067d0:	push   rbp
  4067d1:	push   rbx
  4067d2:	mov    r10,rsi
  4067d5:	mov    r9,rdx
  4067d8:	lea    rbx,[rdi+0x20]
  4067dc:	mov    r11,rdi
  4067df:	sub    rsp,0x8
  4067e3:	mov    edx,DWORD PTR [rsi+0x8]
  4067e6:	mov    rsi,QWORD PTR [rsi]
  4067e9:	mov    rbp,rcx
  4067ec:	mov    rdi,rbx
  4067ef:	mov    ecx,r8d
  4067f2:	call   4028b0 <__sprintf_chk@plt+0x15c0>
  4067f7:	mov    ecx,DWORD PTR [rax+0x8]
  4067fa:	test   ecx,ecx
  4067fc:	je     406820 <__sprintf_chk@plt+0x5530>
  4067fe:	mov    rdx,QWORD PTR [rax]
  406801:	mov    rsi,rbp
  406804:	mov    r8,r10
  406807:	mov    rdi,r11
  40680a:	call   406740 <__sprintf_chk@plt+0x5450>
  40680f:	add    rsp,0x8
  406813:	mov    eax,0x1
  406818:	pop    rbx
  406819:	pop    rbp
  40681a:	ret    
  40681b:	nop    DWORD PTR [rax+rax*1+0x0]
  406820:	mov    edx,DWORD PTR [r9+0x8]
  406824:	mov    rsi,QWORD PTR [r9]
  406827:	mov    ecx,r8d
  40682a:	mov    rdi,rbx
  40682d:	call   4028b0 <__sprintf_chk@plt+0x15c0>
  406832:	mov    ecx,DWORD PTR [rax+0x8]
  406835:	test   ecx,ecx
  406837:	jne    4067fe <__sprintf_chk@plt+0x550e>
  406839:	add    rsp,0x8
  40683d:	xor    eax,eax
  40683f:	pop    rbx
  406840:	pop    rbp
  406841:	ret    
  406842:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40684d:	nop    DWORD PTR [rax]
  406850:	push   r13
  406852:	push   r12
  406854:	mov    r8,rsi
  406857:	push   rbp
  406858:	push   rbx
  406859:	mov    r9,rdx
  40685c:	lea    rbp,[rdi+0x20]
  406860:	mov    rbx,rdi
  406863:	mov    r12d,ecx
  406866:	sub    rsp,0x8
  40686a:	mov    edx,DWORD PTR [rsi+0x8]
  40686d:	mov    rsi,QWORD PTR [rsi]
  406870:	mov    rdi,rbp
  406873:	call   4028b0 <__sprintf_chk@plt+0x15c0>
  406878:	mov    r13d,DWORD PTR [rax+0x8]
  40687c:	mov    r10d,0xffffffff
  406882:	test   r13d,r13d
  406885:	je     4068d6 <__sprintf_chk@plt+0x55e6>
  406887:	mov    rsi,QWORD PTR [r9]
  40688a:	mov    edx,DWORD PTR [r9+0x8]
  40688e:	mov    r11,rax
  406891:	mov    ecx,r12d
  406894:	mov    rdi,rbp
  406897:	call   4028b0 <__sprintf_chk@plt+0x15c0>
  40689c:	mov    rsi,rax
  40689f:	mov    rdi,r11
  4068a2:	call   401860 <__sprintf_chk@plt+0x570>
  4068a7:	test   eax,eax
  4068a9:	je     4068d6 <__sprintf_chk@plt+0x55e6>
  4068ab:	mov    rsi,QWORD PTR [rbx+0x10]
  4068af:	mov    rdx,QWORD PTR [r11]
  4068b2:	mov    ecx,r13d
  4068b5:	mov    rdi,rbx
  4068b8:	call   406740 <__sprintf_chk@plt+0x5450>
  4068bd:	mov    rax,QWORD PTR [rbx+0x10]
  4068c1:	mov    r10d,DWORD PTR [rax+0x8]
  4068c5:	test   r10d,r10d
  4068c8:	je     4068d6 <__sprintf_chk@plt+0x55e6>
  4068ca:	cmp    r10d,0x1
  4068ce:	je     4068e8 <__sprintf_chk@plt+0x55f8>
  4068d0:	mov    r10d,0x1
  4068d6:	add    rsp,0x8
  4068da:	mov    eax,r10d
  4068dd:	pop    rbx
  4068de:	pop    rbp
  4068df:	pop    r12
  4068e1:	pop    r13
  4068e3:	ret    
  4068e4:	nop    DWORD PTR [rax+0x0]
  4068e8:	mov    eax,DWORD PTR [rax]
  4068ea:	xor    r10d,r10d
  4068ed:	test   eax,eax
  4068ef:	setne  r10b
  4068f3:	add    rsp,0x8
  4068f7:	pop    rbx
  4068f8:	mov    eax,r10d
  4068fb:	pop    rbp
  4068fc:	pop    r12
  4068fe:	pop    r13
  406900:	ret    
  406901:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40690c:	nop    DWORD PTR [rax+0x0]
  406910:	push   r12
  406912:	push   rbp
  406913:	mov    r12,rsi
  406916:	push   rbx
  406917:	mov    rbp,QWORD PTR [rdi+0x10]
  40691b:	mov    rbx,rdi
  40691e:	mov    rdi,rsi
  406921:	call   4010f0 <strlen@plt>
  406926:	mov    rsi,r12
  406929:	mov    rdx,rax
  40692c:	mov    rdi,rbx
  40692f:	call   405980 <__sprintf_chk@plt+0x4690>
  406934:	mov    QWORD PTR [rbp+0x0],rax
  406938:	mov    rax,QWORD PTR [rbx+0x10]
  40693c:	mov    rdx,QWORD PTR [rbx+0x38]
  406940:	mov    DWORD PTR [rbp+0x8],0x4
  406947:	sub    rdx,rax
  40694a:	cmp    rdx,0x10
  40694e:	jg     406961 <__sprintf_chk@plt+0x5671>
  406950:	mov    esi,0x1
  406955:	mov    rdi,rbx
  406958:	call   406720 <__sprintf_chk@plt+0x5430>
  40695d:	mov    rax,QWORD PTR [rbx+0x10]
  406961:	add    rax,0x10
  406965:	mov    QWORD PTR [rbx+0x10],rax
  406969:	pop    rbx
  40696a:	pop    rbp
  40696b:	pop    r12
  40696d:	ret    
  40696e:	xchg   ax,ax
  406970:	xor    eax,eax
  406972:	cmp    esi,0x1f40
  406978:	jg     4069d8 <__sprintf_chk@plt+0x56e8>
  40697a:	push   rbp
  40697b:	push   rbx
  40697c:	movsxd rbp,esi
  40697f:	sub    rsp,0x8
  406983:	mov    rcx,QWORD PTR [rdi+0x10]
  406987:	mov    rdx,rcx
  40698a:	sub    rdx,QWORD PTR [rdi+0x18]
  40698e:	sar    rdx,0x4
  406992:	add    rdx,rbp
  406995:	cmp    rdx,0x1f40
  40699c:	jg     4069d2 <__sprintf_chk@plt+0x56e2>
  40699e:	test   esi,esi
  4069a0:	jle    4069cd <__sprintf_chk@plt+0x56dd>
  4069a2:	mov    rdx,QWORD PTR [rdi+0x38]
  4069a6:	mov    eax,esi
  4069a8:	mov    rbx,rdi
  4069ab:	shl    eax,0x4
  4069ae:	cdqe   
  4069b0:	sub    rdx,rcx
  4069b3:	cmp    rdx,rax
  4069b6:	jle    4069e0 <__sprintf_chk@plt+0x56f0>
  4069b8:	mov    rax,QWORD PTR [rbx+0x28]
  4069bc:	shl    rbp,0x4
  4069c0:	add    rcx,rbp
  4069c3:	cmp    QWORD PTR [rax+0x10],rcx
  4069c7:	jae    4069cd <__sprintf_chk@plt+0x56dd>
  4069c9:	mov    QWORD PTR [rax+0x10],rcx
  4069cd:	mov    eax,0x1
  4069d2:	add    rsp,0x8
  4069d6:	pop    rbx
  4069d7:	pop    rbp
  4069d8:	repz ret 
  4069da:	nop    WORD PTR [rax+rax*1+0x0]
  4069e0:	call   406720 <__sprintf_chk@plt+0x5430>
  4069e5:	mov    rcx,QWORD PTR [rbx+0x10]
  4069e9:	jmp    4069b8 <__sprintf_chk@plt+0x56c8>
  4069eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4069f0:	push   r14
  4069f2:	push   r13
  4069f4:	mov    r13,rdi
  4069f7:	push   r12
  4069f9:	push   rbp
  4069fa:	mov    r12,rsi
  4069fd:	push   rbx
  4069fe:	mov    rbp,rdx
  406a01:	mov    rbx,rcx
  406a04:	sub    rsp,0x50
  406a08:	mov    rax,QWORD PTR fs:0x28
  406a11:	mov    QWORD PTR [rsp+0x48],rax
  406a16:	xor    eax,eax
  406a18:	mov    eax,DWORD PTR [rdx+0x8]
  406a1b:	cmp    eax,0x3
  406a1e:	je     406a68 <__sprintf_chk@plt+0x5778>
  406a20:	cmp    eax,0x4
  406a23:	je     406bc0 <__sprintf_chk@plt+0x58d0>
  406a29:	mov    rcx,r12
  406a2c:	mov    rdx,rbx
  406a2f:	mov    rsi,rbp
  406a32:	mov    rdi,r13
  406a35:	call   4067d0 <__sprintf_chk@plt+0x54e0>
  406a3a:	test   eax,eax
  406a3c:	je     406bf0 <__sprintf_chk@plt+0x5900>
  406a42:	mov    rax,QWORD PTR [rsp+0x48]
  406a47:	xor    rax,QWORD PTR fs:0x28
  406a50:	jne    406c46 <__sprintf_chk@plt+0x5956>
  406a56:	add    rsp,0x50
  406a5a:	pop    rbx
  406a5b:	pop    rbp
  406a5c:	pop    r12
  406a5e:	pop    r13
  406a60:	pop    r14
  406a62:	ret    
  406a63:	nop    DWORD PTR [rax+rax*1+0x0]
  406a68:	mov    r14,rdx
  406a6b:	mov    eax,DWORD PTR [rbx+0x8]
  406a6e:	cmp    eax,0x3
  406a71:	je     406a95 <__sprintf_chk@plt+0x57a5>
  406a73:	cmp    eax,0x4
  406a76:	jne    406a29 <__sprintf_chk@plt+0x5739>
  406a78:	lea    rsi,[rsp+0x20]
  406a7d:	mov    rdi,rbx
  406a80:	mov    DWORD PTR [rsp],r8d
  406a84:	call   402f20 <__sprintf_chk@plt+0x1c30>
  406a89:	test   rax,rax
  406a8c:	mov    r8d,DWORD PTR [rsp]
  406a90:	je     406a29 <__sprintf_chk@plt+0x5739>
  406a92:	mov    rbx,rax
  406a95:	sub    r8d,0x5
  406a99:	vmovsd xmm2,QWORD PTR [r14]
  406a9e:	cmp    r8d,0x6
  406aa2:	vmovsd xmm1,QWORD PTR [rbx]
  406aa6:	ja     406a42 <__sprintf_chk@plt+0x5752>
  406aa8:	lea    rdx,[rip+0xf6c5]        # 416174 <__sprintf_chk@plt+0x14e84>
  406aaf:	movsxd rax,DWORD PTR [rdx+r8*4]
  406ab3:	add    rax,rdx
  406ab6:	jmp    rax
  406ab8:	nop    DWORD PTR [rax+rax*1+0x0]
  406ac0:	vmovapd xmm0,xmm2
  406ac4:	call   4010d0 <pow@plt>
  406ac9:	mov    DWORD PTR [r12+0x8],0x3
  406ad2:	vmovsd QWORD PTR [r12],xmm0
  406ad8:	jmp    406a42 <__sprintf_chk@plt+0x5752>
  406add:	nop    DWORD PTR [rax]
  406ae0:	vdivsd xmm0,xmm2,xmm1
  406ae4:	vmovsd QWORD PTR [rsp+0x8],xmm1
  406aea:	vmovsd QWORD PTR [rsp],xmm2
  406aef:	call   401260 <floor@plt>
  406af4:	vmovsd xmm2,QWORD PTR [rsp]
  406af9:	mov    DWORD PTR [r12+0x8],0x3
  406b02:	vmovsd xmm1,QWORD PTR [rsp+0x8]
  406b08:	vfnmadd231sd xmm2,xmm1,xmm0
  406b0d:	vmovsd QWORD PTR [r12],xmm2
  406b13:	jmp    406a42 <__sprintf_chk@plt+0x5752>
  406b18:	nop    DWORD PTR [rax+rax*1+0x0]
  406b20:	vdivsd xmm2,xmm2,xmm1
  406b24:	mov    DWORD PTR [r12+0x8],0x3
  406b2d:	vmovsd QWORD PTR [r12],xmm2
  406b33:	jmp    406a42 <__sprintf_chk@plt+0x5752>
  406b38:	nop    DWORD PTR [rax+rax*1+0x0]
  406b40:	vmulsd xmm2,xmm2,xmm1
  406b44:	mov    DWORD PTR [r12+0x8],0x3
  406b4d:	vmovsd QWORD PTR [r12],xmm2
  406b53:	jmp    406a42 <__sprintf_chk@plt+0x5752>
  406b58:	nop    DWORD PTR [rax+rax*1+0x0]
  406b60:	vsubsd xmm2,xmm2,xmm1
  406b64:	mov    DWORD PTR [r12+0x8],0x3
  406b6d:	vmovsd QWORD PTR [r12],xmm2
  406b73:	jmp    406a42 <__sprintf_chk@plt+0x5752>
  406b78:	nop    DWORD PTR [rax+rax*1+0x0]
  406b80:	vaddsd xmm2,xmm2,xmm1
  406b84:	mov    DWORD PTR [r12+0x8],0x3
  406b8d:	vmovsd QWORD PTR [r12],xmm2
  406b93:	jmp    406a42 <__sprintf_chk@plt+0x5752>
  406b98:	nop    DWORD PTR [rax+rax*1+0x0]
  406ba0:	vxorpd xmm2,xmm2,XMMWORD PTR [rip+0x108d8]        # 417480 <__sprintf_chk@plt+0x16190>
  406ba8:	mov    DWORD PTR [r12+0x8],0x3
  406bb1:	vmovsd QWORD PTR [r12],xmm2
  406bb7:	jmp    406a42 <__sprintf_chk@plt+0x5752>
  406bbc:	nop    DWORD PTR [rax+0x0]
  406bc0:	lea    rsi,[rsp+0x10]
  406bc5:	mov    rdi,rdx
  406bc8:	mov    DWORD PTR [rsp],r8d
  406bcc:	call   402f20 <__sprintf_chk@plt+0x1c30>
  406bd1:	test   rax,rax
  406bd4:	mov    r14,rax
  406bd7:	mov    r8d,DWORD PTR [rsp]
  406bdb:	jne    406a6b <__sprintf_chk@plt+0x577b>
  406be1:	jmp    406a29 <__sprintf_chk@plt+0x5739>
  406be6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406bf0:	movsxd rax,DWORD PTR [rbp+0x8]
  406bf4:	cmp    eax,0x3
  406bf7:	je     406c28 <__sprintf_chk@plt+0x5938>
  406bf9:	cmp    eax,0x4
  406bfc:	je     406c2e <__sprintf_chk@plt+0x593e>
  406bfe:	lea    rdx,[rip+0x1619b]        # 41cda0 <__sprintf_chk@plt+0x1bab0>
  406c05:	lea    rsi,[rip+0xfad7]        # 4166e3 <__sprintf_chk@plt+0x153f3>
  406c0c:	mov    rdi,r13
  406c0f:	mov    rcx,QWORD PTR [rdx+rax*8]
  406c13:	lea    rdx,[rip+0xfb74]        # 41678e <__sprintf_chk@plt+0x1549e>
  406c1a:	xor    eax,eax
  406c1c:	call   405730 <__sprintf_chk@plt+0x4440>
  406c21:	nop    DWORD PTR [rax+0x0]
  406c28:	movsxd rax,DWORD PTR [rbx+0x8]
  406c2c:	jmp    406bfe <__sprintf_chk@plt+0x590e>
  406c2e:	lea    rsi,[rsp+0x30]
  406c33:	mov    rdi,rbp
  406c36:	call   402f20 <__sprintf_chk@plt+0x1c30>
  406c3b:	test   rax,rax
  406c3e:	jne    406c28 <__sprintf_chk@plt+0x5938>
  406c40:	movsxd rax,DWORD PTR [rbp+0x8]
  406c44:	jmp    406bfe <__sprintf_chk@plt+0x590e>
  406c46:	call   401100 <__stack_chk_fail@plt>
  406c4b:	nop    DWORD PTR [rax+rax*1+0x0]
  406c50:	push   r15
  406c52:	push   r14
  406c54:	push   r13
  406c56:	push   r12
  406c58:	mov    r13,rdi
  406c5b:	push   rbp
  406c5c:	push   rbx
  406c5d:	mov    ebp,esi
  406c5f:	mov    r12d,edx
  406c62:	sub    rsp,0x28
  406c66:	movsxd rbx,r12d
  406c69:	add    rbx,0x1
  406c6d:	shl    rbx,0x4
  406c71:	add    rbx,QWORD PTR [r13+0x18]
  406c75:	mov    eax,DWORD PTR [rbx-0x18]
  406c78:	lea    r15,[rbx-0x10]
  406c7c:	sub    eax,0x3
  406c7f:	cmp    eax,0x1
  406c82:	jbe    406cc8 <__sprintf_chk@plt+0x59d8>
  406c84:	lea    r14,[rbx-0x20]
  406c88:	mov    r8d,0xf
  406c8e:	mov    rdx,r15
  406c91:	mov    rdi,r13
  406c94:	mov    rcx,r14
  406c97:	mov    rsi,r14
  406c9a:	call   4067d0 <__sprintf_chk@plt+0x54e0>
  406c9f:	test   eax,eax
  406ca1:	je     406de0 <__sprintf_chk@plt+0x5af0>
  406ca7:	mov    eax,0x1
  406cac:	sub    ebp,eax
  406cae:	sub    r12d,eax
  406cb1:	cmp    ebp,0x1
  406cb4:	jg     406c66 <__sprintf_chk@plt+0x5976>
  406cb6:	add    rsp,0x28
  406cba:	pop    rbx
  406cbb:	pop    rbp
  406cbc:	pop    r12
  406cbe:	pop    r13
  406cc0:	pop    r14
  406cc2:	pop    r15
  406cc4:	ret    
  406cc5:	nop    DWORD PTR [rax]
  406cc8:	mov    eax,DWORD PTR [rbx-0x8]
  406ccb:	cmp    eax,0x4
  406cce:	je     406cf0 <__sprintf_chk@plt+0x5a00>
  406cd0:	cmp    eax,0x3
  406cd3:	lea    r15,[rbx-0x10]
  406cd7:	jne    406c84 <__sprintf_chk@plt+0x5994>
  406cd9:	mov    rsi,r15
  406cdc:	mov    rdi,r13
  406cdf:	call   405bb0 <__sprintf_chk@plt+0x48c0>
  406ce4:	test   eax,eax
  406ce6:	je     406c84 <__sprintf_chk@plt+0x5994>
  406ce8:	nop    DWORD PTR [rax+rax*1+0x0]
  406cf0:	mov    rax,QWORD PTR [rbx-0x10]
  406cf4:	mov    r15,QWORD PTR [rax+0x10]
  406cf8:	test   r15,r15
  406cfb:	je     406d70 <__sprintf_chk@plt+0x5a80>
  406cfd:	cmp    ebp,0x1
  406d00:	lea    r14,[rbx-0x20]
  406d04:	mov    r8d,0x1
  406d0a:	jle    406d1e <__sprintf_chk@plt+0x5a2e>
  406d0c:	mov    eax,DWORD PTR [r14+0x8]
  406d10:	cmp    eax,0x4
  406d13:	je     406db0 <__sprintf_chk@plt+0x5ac0>
  406d19:	cmp    eax,0x3
  406d1c:	je     406d90 <__sprintf_chk@plt+0x5aa0>
  406d1e:	mov    r14,QWORD PTR [r13+0x20]
  406d22:	mov    rdx,QWORD PTR [r14+0x68]
  406d26:	cmp    r15,rdx
  406d29:	jbe    406e30 <__sprintf_chk@plt+0x5b40>
  406d2f:	cmp    r15,0x1f
  406d33:	ja     406ec0 <__sprintf_chk@plt+0x5bd0>
  406d39:	mov    r15d,0x20
  406d3f:	mov    rsi,QWORD PTR [r14+0x58]
  406d43:	mov    rcx,r15
  406d46:	mov    rdi,r13
  406d49:	mov    DWORD PTR [rsp+0x10],r8d
  406d4e:	call   403450 <__sprintf_chk@plt+0x2160>
  406d53:	mov    QWORD PTR [r14+0x68],r15
  406d57:	mov    QWORD PTR [r14+0x58],rax
  406d5b:	mov    QWORD PTR [rsp+0x8],rax
  406d60:	mov    r8d,DWORD PTR [rsp+0x10]
  406d65:	jmp    406e39 <__sprintf_chk@plt+0x5b49>
  406d6a:	nop    WORD PTR [rax+rax*1+0x0]
  406d70:	cmp    DWORD PTR [rbx-0x18],0x3
  406d74:	jne    406ca7 <__sprintf_chk@plt+0x59b7>
  406d7a:	lea    rsi,[rbx-0x20]
  406d7e:	mov    rdi,r13
  406d81:	call   405bb0 <__sprintf_chk@plt+0x48c0>
  406d86:	jmp    406ca7 <__sprintf_chk@plt+0x59b7>
  406d8b:	nop    DWORD PTR [rax+rax*1+0x0]
  406d90:	mov    rsi,r14
  406d93:	mov    rdi,r13
  406d96:	mov    DWORD PTR [rsp+0x10],r8d
  406d9b:	call   405bb0 <__sprintf_chk@plt+0x48c0>
  406da0:	test   eax,eax
  406da2:	mov    r8d,DWORD PTR [rsp+0x10]
  406da7:	je     406d1e <__sprintf_chk@plt+0x5a2e>
  406dad:	nop    DWORD PTR [rax]
  406db0:	mov    rax,QWORD PTR [r14]
  406db3:	mov    rdx,0xfffffffffffffffd
  406dba:	sub    rdx,r15
  406dbd:	mov    rax,QWORD PTR [rax+0x10]
  406dc1:	cmp    rax,rdx
  406dc4:	jae    406e18 <__sprintf_chk@plt+0x5b28>
  406dc6:	add    r8d,0x1
  406dca:	add    r15,rax
  406dcd:	sub    r14,0x10
  406dd1:	cmp    ebp,r8d
  406dd4:	jne    406d0c <__sprintf_chk@plt+0x5a1c>
  406dda:	jmp    406d1e <__sprintf_chk@plt+0x5a2e>
  406ddf:	nop
  406de0:	mov    eax,DWORD PTR [rbx-0x18]
  406de3:	lea    rsi,[rip+0xf8f9]        # 4166e3 <__sprintf_chk@plt+0x153f3>
  406dea:	mov    rdi,r13
  406ded:	sub    eax,0x3
  406df0:	cmp    eax,0x2
  406df3:	lea    rax,[rip+0x15fa6]        # 41cda0 <__sprintf_chk@plt+0x1bab0>
  406dfa:	cmovae r15,r14
  406dfe:	movsxd rdx,DWORD PTR [r15+0x8]
  406e02:	mov    rcx,QWORD PTR [rax+rdx*8]
  406e06:	lea    rdx,[rip+0xf997]        # 4167a4 <__sprintf_chk@plt+0x154b4>
  406e0d:	xor    eax,eax
  406e0f:	call   405730 <__sprintf_chk@plt+0x4440>
  406e14:	nop    DWORD PTR [rax+0x0]
  406e18:	lea    rsi,[rip+0xf991]        # 4167b0 <__sprintf_chk@plt+0x154c0>
  406e1f:	mov    rdi,r13
  406e22:	xor    eax,eax
  406e24:	call   405730 <__sprintf_chk@plt+0x4440>
  406e29:	nop    DWORD PTR [rax+0x0]
  406e30:	mov    rax,QWORD PTR [r14+0x58]
  406e34:	mov    QWORD PTR [rsp+0x8],rax
  406e39:	movsxd rax,r8d
  406e3c:	mov    DWORD PTR [rsp+0x14],r8d
  406e41:	shl    rax,0x4
  406e45:	sub    rbx,rax
  406e48:	mov    QWORD PTR [rsp+0x18],rbx
  406e4d:	mov    r14,rbx
  406e50:	xor    ebx,ebx
  406e52:	nop    WORD PTR [rax+rax*1+0x0]
  406e58:	mov    rsi,QWORD PTR [r14]
  406e5b:	mov    rax,QWORD PTR [rsp+0x8]
  406e60:	add    r14,0x10
  406e64:	mov    DWORD PTR [rsp+0x10],r8d
  406e69:	mov    r15,QWORD PTR [rsi+0x10]
  406e6d:	lea    rdi,[rax+rbx*1]
  406e71:	add    rsi,0x18
  406e75:	mov    rdx,r15
  406e78:	add    rbx,r15
  406e7b:	call   4011c0 <memcpy@plt>
  406e80:	sub    DWORD PTR [rsp+0x14],0x1
  406e85:	mov    r8d,DWORD PTR [rsp+0x10]
  406e8a:	jne    406e58 <__sprintf_chk@plt+0x5b68>
  406e8c:	mov    rsi,QWORD PTR [rsp+0x8]
  406e91:	mov    rdx,rbx
  406e94:	mov    rdi,r13
  406e97:	call   405980 <__sprintf_chk@plt+0x4690>
  406e9c:	mov    rcx,QWORD PTR [rsp+0x18]
  406ea1:	mov    r8d,DWORD PTR [rsp+0x10]
  406ea6:	mov    QWORD PTR [rcx],rax
  406ea9:	mov    DWORD PTR [rcx+0x8],0x4
  406eb0:	lea    eax,[r8-0x1]
  406eb4:	jmp    406cac <__sprintf_chk@plt+0x59bc>
  406eb9:	nop    DWORD PTR [rax+0x0]
  406ec0:	lea    rax,[r15+0x1]
  406ec4:	cmp    rax,0xfffffffffffffffd
  406ec8:	jbe    406d3f <__sprintf_chk@plt+0x5a4f>
  406ece:	lea    rsi,[rip+0x1017b]        # 417050 <__sprintf_chk@plt+0x15d60>
  406ed5:	mov    rdi,r13
  406ed8:	xor    eax,eax
  406eda:	call   405730 <__sprintf_chk@plt+0x4440>
  406edf:	nop
  406ee0:	push   r15
  406ee2:	push   r14
  406ee4:	mov    r15,rdi
  406ee7:	push   r13
  406ee9:	push   r12
  406eeb:	mov    r12,rsi
  406eee:	push   rbp
  406eef:	push   rbx
  406ef0:	lea    rsi,[rip+0xff43]        # 416e3a <__sprintf_chk@plt+0x15b4a>
  406ef7:	mov    ebx,0x1
  406efc:	sub    rsp,0x48
  406f00:	mov    QWORD PTR [rsp+0x8],rdx
  406f05:	lea    rbp,[rsp+0x10]
  406f0a:	mov    rax,QWORD PTR fs:0x28
  406f13:	mov    QWORD PTR [rsp+0x38],rax
  406f18:	xor    eax,eax
  406f1a:	call   406910 <__sprintf_chk@plt+0x5620>
  406f1f:	jmp    406f67 <__sprintf_chk@plt+0x5c77>
  406f21:	nop    DWORD PTR [rax+0x0]
  406f28:	cmp    al,0x70
  406f2a:	je     4071c0 <__sprintf_chk@plt+0x5ed0>
  406f30:	cmp    al,0x73
  406f32:	je     407120 <__sprintf_chk@plt+0x5e30>
  406f38:	cmp    al,0x66
  406f3a:	je     407158 <__sprintf_chk@plt+0x5e68>
  406f40:	mov    rsi,rbp
  406f43:	mov    rdi,r15
  406f46:	mov    BYTE PTR [rsp+0x10],0x25
  406f4b:	mov    BYTE PTR [rsp+0x11],al
  406f4f:	mov    BYTE PTR [rsp+0x12],0x0
  406f54:	call   406910 <__sprintf_chk@plt+0x5620>
  406f59:	nop    DWORD PTR [rax+0x0]
  406f60:	lea    r12,[r13+0x2]
  406f64:	add    ebx,0x2
  406f67:	mov    esi,0x25
  406f6c:	mov    rdi,r12
  406f6f:	call   401110 <strchr@plt>
  406f74:	test   rax,rax
  406f77:	mov    r13,rax
  406f7a:	je     407040 <__sprintf_chk@plt+0x5d50>
  406f80:	mov    r14,QWORD PTR [r15+0x10]
  406f84:	mov    rdx,rax
  406f87:	mov    rsi,r12
  406f8a:	sub    rdx,r12
  406f8d:	mov    rdi,r15
  406f90:	call   405980 <__sprintf_chk@plt+0x4690>
  406f95:	mov    QWORD PTR [r14],rax
  406f98:	mov    rdx,QWORD PTR [r15+0x10]
  406f9c:	mov    rax,QWORD PTR [r15+0x38]
  406fa0:	mov    DWORD PTR [r14+0x8],0x4
  406fa8:	sub    rax,rdx
  406fab:	cmp    rax,0x10
  406faf:	jle    407010 <__sprintf_chk@plt+0x5d20>
  406fb1:	lea    rax,[rdx+0x10]
  406fb5:	mov    QWORD PTR [r15+0x10],rax
  406fb9:	movzx  eax,BYTE PTR [r13+0x1]
  406fbe:	cmp    al,0x64
  406fc0:	je     4070a8 <__sprintf_chk@plt+0x5db8>
  406fc6:	jg     406f28 <__sprintf_chk@plt+0x5c38>
  406fcc:	cmp    al,0x25
  406fce:	je     407028 <__sprintf_chk@plt+0x5d38>
  406fd0:	cmp    al,0x63
  406fd2:	jne    406f40 <__sprintf_chk@plt+0x5c50>
  406fd8:	mov    rcx,QWORD PTR [rsp+0x8]
  406fdd:	mov    edx,DWORD PTR [rcx]
  406fdf:	cmp    edx,0x2f
  406fe2:	ja     4071a8 <__sprintf_chk@plt+0x5eb8>
  406fe8:	mov    eax,edx
  406fea:	add    rax,QWORD PTR [rcx+0x10]
  406fee:	add    edx,0x8
  406ff1:	mov    DWORD PTR [rcx],edx
  406ff3:	mov    eax,DWORD PTR [rax]
  406ff5:	mov    rsi,rbp
  406ff8:	mov    rdi,r15
  406ffb:	mov    BYTE PTR [rsp+0x11],0x0
  407000:	mov    BYTE PTR [rsp+0x10],al
  407004:	call   406910 <__sprintf_chk@plt+0x5620>
  407009:	jmp    406f60 <__sprintf_chk@plt+0x5c70>
  40700e:	xchg   ax,ax
  407010:	mov    esi,0x1
  407015:	mov    rdi,r15
  407018:	call   406720 <__sprintf_chk@plt+0x5430>
  40701d:	mov    rdx,QWORD PTR [r15+0x10]
  407021:	jmp    406fb1 <__sprintf_chk@plt+0x5cc1>
  407023:	nop    DWORD PTR [rax+rax*1+0x0]
  407028:	lea    rsi,[rip+0xf7a2]        # 4167d1 <__sprintf_chk@plt+0x154e1>
  40702f:	mov    rdi,r15
  407032:	call   406910 <__sprintf_chk@plt+0x5620>
  407037:	jmp    406f60 <__sprintf_chk@plt+0x5c70>
  40703c:	nop    DWORD PTR [rax+0x0]
  407040:	mov    rsi,r12
  407043:	mov    rdi,r15
  407046:	call   406910 <__sprintf_chk@plt+0x5620>
  40704b:	mov    rdx,QWORD PTR [r15+0x10]
  40704f:	sub    rdx,QWORD PTR [r15+0x18]
  407053:	lea    esi,[rbx+0x1]
  407056:	mov    rdi,r15
  407059:	movsxd rbx,ebx
  40705c:	shl    rbx,0x4
  407060:	sar    rdx,0x4
  407064:	sub    edx,0x1
  407067:	call   406c50 <__sprintf_chk@plt+0x5960>
  40706c:	mov    rax,QWORD PTR [r15+0x10]
  407070:	sub    rax,rbx
  407073:	mov    QWORD PTR [r15+0x10],rax
  407077:	mov    rax,QWORD PTR [rax-0x10]
  40707b:	add    rax,0x18
  40707f:	mov    rcx,QWORD PTR [rsp+0x38]
  407084:	xor    rcx,QWORD PTR fs:0x28
  40708d:	jne    4071a3 <__sprintf_chk@plt+0x5eb3>
  407093:	add    rsp,0x48
  407097:	pop    rbx
  407098:	pop    rbp
  407099:	pop    r12
  40709b:	pop    r13
  40709d:	pop    r14
  40709f:	pop    r15
  4070a1:	ret    
  4070a2:	nop    WORD PTR [rax+rax*1+0x0]
  4070a8:	mov    rdi,QWORD PTR [rsp+0x8]
  4070ad:	mov    ecx,DWORD PTR [rdi]
  4070af:	cmp    ecx,0x2f
  4070b2:	ja     40710b <__sprintf_chk@plt+0x5e1b>
  4070b4:	mov    eax,ecx
  4070b6:	add    rax,QWORD PTR [rdi+0x10]
  4070ba:	add    ecx,0x8
  4070bd:	mov    DWORD PTR [rdi],ecx
  4070bf:	vxorpd xmm0,xmm0,xmm0
  4070c3:	vcvtsi2sd xmm0,xmm0,DWORD PTR [rax]
  4070c7:	vmovsd QWORD PTR [rdx+0x10],xmm0
  4070cc:	mov    DWORD PTR [rdx+0x18],0x3
  4070d3:	mov    rax,QWORD PTR [r15+0x10]
  4070d7:	mov    rdx,QWORD PTR [r15+0x38]
  4070db:	sub    rdx,rax
  4070de:	cmp    rdx,0x10
  4070e2:	jle    4070f8 <__sprintf_chk@plt+0x5e08>
  4070e4:	add    rax,0x10
  4070e8:	mov    QWORD PTR [r15+0x10],rax
  4070ec:	jmp    406f60 <__sprintf_chk@plt+0x5c70>
  4070f1:	nop    DWORD PTR [rax+0x0]
  4070f8:	mov    esi,0x1
  4070fd:	mov    rdi,r15
  407100:	call   406720 <__sprintf_chk@plt+0x5430>
  407105:	mov    rax,QWORD PTR [r15+0x10]
  407109:	jmp    4070e4 <__sprintf_chk@plt+0x5df4>
  40710b:	mov    rdi,QWORD PTR [rsp+0x8]
  407110:	mov    rax,QWORD PTR [rdi+0x8]
  407114:	lea    rcx,[rax+0x8]
  407118:	mov    QWORD PTR [rdi+0x8],rcx
  40711c:	jmp    4070bf <__sprintf_chk@plt+0x5dcf>
  40711e:	xchg   ax,ax
  407120:	mov    rcx,QWORD PTR [rsp+0x8]
  407125:	mov    edx,DWORD PTR [rcx]
  407127:	cmp    edx,0x2f
  40712a:	ja     40717d <__sprintf_chk@plt+0x5e8d>
  40712c:	mov    eax,edx
  40712e:	add    rax,QWORD PTR [rcx+0x10]
  407132:	add    edx,0x8
  407135:	mov    DWORD PTR [rcx],edx
  407137:	mov    rsi,QWORD PTR [rax]
  40713a:	lea    rax,[rip+0xf686]        # 4167c7 <__sprintf_chk@plt+0x154d7>
  407141:	mov    rdi,r15
  407144:	test   rsi,rsi
  407147:	cmove  rsi,rax
  40714b:	call   406910 <__sprintf_chk@plt+0x5620>
  407150:	jmp    406f60 <__sprintf_chk@plt+0x5c70>
  407155:	nop    DWORD PTR [rax]
  407158:	mov    rdi,QWORD PTR [rsp+0x8]
  40715d:	mov    ecx,DWORD PTR [rdi+0x4]
  407160:	cmp    ecx,0xaf
  407166:	ja     407190 <__sprintf_chk@plt+0x5ea0>
  407168:	mov    eax,ecx
  40716a:	add    rax,QWORD PTR [rdi+0x10]
  40716e:	add    ecx,0x10
  407171:	mov    DWORD PTR [rdi+0x4],ecx
  407174:	vmovsd xmm0,QWORD PTR [rax]
  407178:	jmp    4070c7 <__sprintf_chk@plt+0x5dd7>
  40717d:	mov    rcx,QWORD PTR [rsp+0x8]
  407182:	mov    rax,QWORD PTR [rcx+0x8]
  407186:	lea    rdx,[rax+0x8]
  40718a:	mov    QWORD PTR [rcx+0x8],rdx
  40718e:	jmp    407137 <__sprintf_chk@plt+0x5e47>
  407190:	mov    rdi,QWORD PTR [rsp+0x8]
  407195:	mov    rax,QWORD PTR [rdi+0x8]
  407199:	lea    rcx,[rax+0x8]
  40719d:	mov    QWORD PTR [rdi+0x8],rcx
  4071a1:	jmp    407174 <__sprintf_chk@plt+0x5e84>
  4071a3:	call   401100 <__stack_chk_fail@plt>
  4071a8:	mov    rcx,QWORD PTR [rsp+0x8]
  4071ad:	mov    rax,QWORD PTR [rcx+0x8]
  4071b1:	lea    rdx,[rax+0x8]
  4071b5:	mov    QWORD PTR [rcx+0x8],rdx
  4071b9:	jmp    406ff3 <__sprintf_chk@plt+0x5d03>
  4071be:	xchg   ax,ax
  4071c0:	mov    rcx,QWORD PTR [rsp+0x8]
  4071c5:	mov    edx,DWORD PTR [rcx]
  4071c7:	cmp    edx,0x2f
  4071ca:	ja     407205 <__sprintf_chk@plt+0x5f15>
  4071cc:	mov    eax,edx
  4071ce:	add    rax,QWORD PTR [rcx+0x10]
  4071d2:	add    edx,0x8
  4071d5:	mov    DWORD PTR [rcx],edx
  4071d7:	mov    r8,QWORD PTR [rax]
  4071da:	lea    rcx,[rip+0xf5ed]        # 4167ce <__sprintf_chk@plt+0x154de>
  4071e1:	mov    rdi,rbp
  4071e4:	mov    edx,0x28
  4071e9:	mov    esi,0x1
  4071ee:	xor    eax,eax
  4071f0:	call   4012f0 <__sprintf_chk@plt>
  4071f5:	mov    rsi,rbp
  4071f8:	mov    rdi,r15
  4071fb:	call   406910 <__sprintf_chk@plt+0x5620>
  407200:	jmp    406f60 <__sprintf_chk@plt+0x5c70>
  407205:	mov    rcx,QWORD PTR [rsp+0x8]
  40720a:	mov    rax,QWORD PTR [rcx+0x8]
  40720e:	lea    rdx,[rax+0x8]
  407212:	mov    QWORD PTR [rcx+0x8],rdx
  407216:	jmp    4071d7 <__sprintf_chk@plt+0x5ee7>
  407218:	nop    DWORD PTR [rax+rax*1+0x0]
  407220:	sub    rsp,0xd8
  407227:	test   al,al
  407229:	mov    QWORD PTR [rsp+0x30],rdx
  40722e:	mov    QWORD PTR [rsp+0x38],rcx
  407233:	mov    QWORD PTR [rsp+0x40],r8
  407238:	mov    QWORD PTR [rsp+0x48],r9
  40723d:	je     40727e <__sprintf_chk@plt+0x5f8e>
  40723f:	vmovaps XMMWORD PTR [rsp+0x50],xmm0
  407245:	vmovaps XMMWORD PTR [rsp+0x60],xmm1
  40724b:	vmovaps XMMWORD PTR [rsp+0x70],xmm2
  407251:	vmovaps XMMWORD PTR [rsp+0x80],xmm3
  40725a:	vmovaps XMMWORD PTR [rsp+0x90],xmm4
  407263:	vmovaps XMMWORD PTR [rsp+0xa0],xmm5
  40726c:	vmovaps XMMWORD PTR [rsp+0xb0],xmm6
  407275:	vmovaps XMMWORD PTR [rsp+0xc0],xmm7
  40727e:	mov    rax,QWORD PTR fs:0x28
  407287:	mov    QWORD PTR [rsp+0x18],rax
  40728c:	xor    eax,eax
  40728e:	lea    rax,[rsp+0xe0]
  407296:	mov    rdx,rsp
  407299:	mov    QWORD PTR [rsp+0x8],rax
  40729e:	lea    rax,[rsp+0x20]
  4072a3:	mov    DWORD PTR [rsp],0x10
  4072aa:	mov    DWORD PTR [rsp+0x4],0x30
  4072b2:	mov    QWORD PTR [rsp+0x10],rax
  4072b7:	call   406ee0 <__sprintf_chk@plt+0x5bf0>
  4072bc:	mov    rcx,QWORD PTR [rsp+0x18]
  4072c1:	xor    rcx,QWORD PTR fs:0x28
  4072ca:	jne    4072d4 <__sprintf_chk@plt+0x5fe4>
  4072cc:	add    rsp,0xd8
  4072d3:	ret    
  4072d4:	call   401100 <__stack_chk_fail@plt>
  4072d9:	nop    DWORD PTR [rax+0x0]
  4072e0:	cmp    esi,0x100
  4072e6:	jg     407328 <__sprintf_chk@plt+0x6038>
  4072e8:	push   rbp
  4072e9:	push   rbx
  4072ea:	mov    rbp,rdi
  4072ed:	mov    ebx,esi
  4072ef:	sub    rsp,0x8
  4072f3:	call   4012e0 <__ctype_b_loc@plt>
  4072f8:	mov    rax,QWORD PTR [rax]
  4072fb:	movsxd rdx,ebx
  4072fe:	lea    rsi,[rip+0xf4ce]        # 4167d3 <__sprintf_chk@plt+0x154e3>
  407305:	test   BYTE PTR [rax+rdx*2],0x2
  407309:	mov    edx,ebx
  40730b:	jne    407314 <__sprintf_chk@plt+0x6024>
  40730d:	lea    rsi,[rip+0xf4c8]        # 4167dc <__sprintf_chk@plt+0x154ec>
  407314:	mov    rdi,QWORD PTR [rbp+0x0]
  407318:	add    rsp,0x8
  40731c:	xor    eax,eax
  40731e:	pop    rbx
  40731f:	pop    rbp
  407320:	jmp    407220 <__sprintf_chk@plt+0x5f30>
  407325:	nop    DWORD PTR [rax]
  407328:	sub    esi,0x101
  40732e:	lea    rax,[rip+0x1596b]        # 41cca0 <__sprintf_chk@plt+0x1b9b0>
  407335:	movsxd rsi,esi
  407338:	mov    rax,QWORD PTR [rax+rsi*8]
  40733c:	ret    
  40733d:	nop    DWORD PTR [rax]
  407340:	push   r13
  407342:	push   r12
  407344:	push   rbp
  407345:	push   rbx
  407346:	mov    rbp,rsi
  407349:	sub    rsp,0x8
  40734d:	test   edx,edx
  40734f:	je     407400 <__sprintf_chk@plt+0x6110>
  407355:	sub    edx,0x1
  407358:	mov    eax,0xffffffff
  40735d:	cmp    edx,0xff
  407363:	jbe    407376 <__sprintf_chk@plt+0x6086>
  407365:	nop    DWORD PTR [rax]
  407368:	shr    edx,0x8
  40736b:	add    eax,0x8
  40736e:	cmp    edx,0xff
  407374:	ja     407368 <__sprintf_chk@plt+0x6078>
  407376:	lea    rcx,[rip+0xf1c3]        # 416540 <__sprintf_chk@plt+0x15250>
  40737d:	movzx  edx,BYTE PTR [rcx+rdx*1]
  407381:	lea    r12d,[rax+rdx*1+0x1]
  407386:	cmp    r12d,0x1e
  40738a:	jg     407410 <__sprintf_chk@plt+0x6120>
  407390:	mov    eax,0x28
  407395:	xor    edx,edx
  407397:	xor    esi,esi
  407399:	shlx   r13,rax,r12
  40739e:	mov    ebx,0x1
  4073a3:	mov    rcx,r13
  4073a6:	shlx   rbx,rbx,r12
  4073ab:	call   403450 <__sprintf_chk@plt+0x2160>
  4073b0:	lea    rdx,[rax+0x8]
  4073b4:	mov    QWORD PTR [rbp+0x20],rax
  4073b8:	xor    ecx,ecx
  4073ba:	nop    WORD PTR [rax+rax*1+0x0]
  4073c0:	add    ecx,0x1
  4073c3:	mov    QWORD PTR [rdx+0x18],0x0
  4073cb:	mov    DWORD PTR [rdx+0x10],0x0
  4073d2:	mov    DWORD PTR [rdx],0x0
  4073d8:	add    rdx,0x28
  4073dc:	cmp    ebx,ecx
  4073de:	jg     4073c0 <__sprintf_chk@plt+0x60d0>
  4073e0:	add    rax,r13
  4073e3:	mov    BYTE PTR [rbp+0xb],r12b
  4073e7:	mov    QWORD PTR [rbp+0x28],rax
  4073eb:	add    rsp,0x8
  4073ef:	pop    rbx
  4073f0:	pop    rbp
  4073f1:	pop    r12
  4073f3:	pop    r13
  4073f5:	ret    
  4073f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407400:	lea    rax,[rip+0xf259]        # 416660 <__sprintf_chk@plt+0x15370>
  407407:	xor    r12d,r12d
  40740a:	mov    QWORD PTR [rsi+0x20],rax
  40740e:	jmp    4073e3 <__sprintf_chk@plt+0x60f3>
  407410:	lea    rsi,[rip+0xf458]        # 41686f <__sprintf_chk@plt+0x1557f>
  407417:	xor    eax,eax
  407419:	call   405730 <__sprintf_chk@plt+0x4440>
  40741e:	xchg   ax,ax
  407420:	push   r13
  407422:	push   r12
  407424:	mov    r13d,esi
  407427:	push   rbp
  407428:	push   rbx
  407429:	mov    rbp,rdi
  40742c:	mov    r12d,edx
  40742f:	mov    ecx,0x40
  407434:	xor    edx,edx
  407436:	sub    rsp,0x8
  40743a:	xor    esi,esi
  40743c:	call   403450 <__sprintf_chk@plt+0x2160>
  407441:	mov    rbx,rax
  407444:	mov    rax,QWORD PTR [rbp+0x20]
  407448:	mov    ecx,r13d
  40744b:	lea    rsi,[rbx+0x18]
  40744f:	mov    rdi,rbp
  407452:	mov    rdx,QWORD PTR [rax+0x28]
  407456:	mov    QWORD PTR [rbx],rdx
  407459:	mov    QWORD PTR [rax+0x28],rbx
  40745d:	lea    rdx,[rbx+0x38]
  407461:	movzx  eax,BYTE PTR [rax+0x20]
  407465:	mov    BYTE PTR [rbx+0x8],0x5
  407469:	mov    QWORD PTR [rbx+0x10],0x0
  407471:	mov    BYTE PTR [rbx+0xa],0xff
  407475:	mov    QWORD PTR [rbx+0x18],0x0
  40747d:	mov    DWORD PTR [rbx+0x38],0x0
  407484:	mov    BYTE PTR [rbx+0xb],0x0
  407488:	and    eax,0x3
  40748b:	mov    BYTE PTR [rbx+0x9],al
  40748e:	lea    rax,[rip+0xf1cb]        # 416660 <__sprintf_chk@plt+0x15370>
  407495:	mov    QWORD PTR [rbx+0x20],rax
  407499:	call   405ee0 <__sprintf_chk@plt+0x4bf0>
  40749e:	mov    edx,r12d
  4074a1:	mov    rsi,rbx
  4074a4:	mov    rdi,rbp
  4074a7:	call   407340 <__sprintf_chk@plt+0x6050>
  4074ac:	add    rsp,0x8
  4074b0:	mov    rax,rbx
  4074b3:	pop    rbx
  4074b4:	pop    rbp
  4074b5:	pop    r12
  4074b7:	pop    r13
  4074b9:	ret    
  4074ba:	nop    WORD PTR [rax+rax*1+0x0]
  4074c0:	push   r15
  4074c2:	push   r14
  4074c4:	mov    ecx,0x140
  4074c9:	push   r13
  4074cb:	push   r12
  4074cd:	xor    edx,edx
  4074cf:	push   rbp
  4074d0:	push   rbx
  4074d1:	mov    rbp,rdi
  4074d4:	xor    esi,esi
  4074d6:	lea    r15,[rip+0xf302]        # 4167df <__sprintf_chk@plt+0x154ef>
  4074dd:	lea    r14,[rip+0x1525c]        # 41c740 <__sprintf_chk@plt+0x1b450>
  4074e4:	sub    rsp,0x8
  4074e8:	mov    r13,QWORD PTR [rdi+0x20]
  4074ec:	call   403450 <__sprintf_chk@plt+0x2160>
  4074f1:	mov    QWORD PTR [rbp+0x50],rax
  4074f5:	mov    QWORD PTR [rbp+0x28],rax
  4074f9:	add    rax,0x118
  4074ff:	mov    ecx,0x2d0
  407504:	xor    edx,edx
  407506:	xor    esi,esi
  407508:	mov    rdi,rbp
  40750b:	mov    DWORD PTR [rbp+0x5c],0x8
  407512:	mov    QWORD PTR [rbp+0x48],rax
  407516:	call   403450 <__sprintf_chk@plt+0x2160>
  40751b:	lea    rdx,[rax+0x270]
  407522:	lea    rcx,[rax+0x10]
  407526:	mov    QWORD PTR [rbp+0x40],rax
  40752a:	mov    DWORD PTR [rbp+0x58],0x2d
  407531:	xor    esi,esi
  407533:	mov    rdi,rbp
  407536:	mov    QWORD PTR [rbp+0x38],rdx
  40753a:	mov    rdx,QWORD PTR [rbp+0x28]
  40753e:	mov    QWORD PTR [rdx+0x8],rax
  407542:	mov    QWORD PTR [rbp+0x10],rcx
  407546:	add    rax,0x150
  40754c:	mov    DWORD PTR [rax-0x148],0x0
  407556:	mov    QWORD PTR [rdx],rcx
  407559:	mov    QWORD PTR [rbp+0x18],rcx
  40755d:	mov    QWORD PTR [rdx+0x10],rax
  407561:	mov    edx,0x2
  407566:	call   407420 <__sprintf_chk@plt+0x6130>
  40756b:	mov    rbx,QWORD PTR [rbp+0x20]
  40756f:	mov    edx,0x2
  407574:	xor    esi,esi
  407576:	mov    rdi,rbp
  407579:	mov    QWORD PTR [rbp+0x78],rax
  40757d:	mov    DWORD PTR [rbp+0x80],0x5
  407587:	call   407420 <__sprintf_chk@plt+0x6130>
  40758c:	mov    DWORD PTR [rbx+0xa8],0x5
  407596:	mov    QWORD PTR [rbx+0xa0],rax
  40759d:	mov    esi,0x20
  4075a2:	mov    rdi,rbp
  4075a5:	xor    ebx,ebx
  4075a7:	call   405880 <__sprintf_chk@plt+0x4590>
  4075ac:	mov    r12,QWORD PTR [rbp+0x20]
  4075b0:	mov    edx,0x7
  4075b5:	jmp    4075cf <__sprintf_chk@plt+0x62df>
  4075b7:	nop    WORD PTR [rax+rax*1+0x0]
  4075c0:	mov    r15,QWORD PTR [r14+rbx*8]
  4075c4:	mov    rdi,r15
  4075c7:	call   4010f0 <strlen@plt>
  4075cc:	mov    rdx,rax
  4075cf:	mov    rsi,r15
  4075d2:	mov    rdi,rbp
  4075d5:	call   405980 <__sprintf_chk@plt+0x4690>
  4075da:	movsxd rdx,ebx
  4075dd:	add    rbx,0x1
  4075e1:	add    rdx,0x24
  4075e5:	mov    QWORD PTR [r12+rdx*8+0x8],rax
  4075ea:	mov    r12,QWORD PTR [rbp+0x20]
  4075ee:	mov    rax,QWORD PTR [r12+rdx*8+0x8]
  4075f3:	or     BYTE PTR [rax+0x9],0x20
  4075f7:	cmp    rbx,0x11
  4075fb:	jne    4075c0 <__sprintf_chk@plt+0x62d0>
  4075fd:	mov    ebx,0x1
  407602:	mov    edx,0x3
  407607:	lea    r12,[rip+0xf898]        # 416ea6 <__sprintf_chk@plt+0x15bb6>
  40760e:	lea    r14,[rip+0x1568b]        # 41cca0 <__sprintf_chk@plt+0x1b9b0>
  407615:	jmp    407633 <__sprintf_chk@plt+0x6343>
  407617:	nop    WORD PTR [rax+rax*1+0x0]
  407620:	mov    r12,QWORD PTR [r14+rbx*8]
  407624:	add    rbx,0x1
  407628:	mov    rdi,r12
  40762b:	call   4010f0 <strlen@plt>
  407630:	mov    rdx,rax
  407633:	mov    rsi,r12
  407636:	mov    rdi,rbp
  407639:	call   405980 <__sprintf_chk@plt+0x4690>
  40763e:	or     BYTE PTR [rax+0x9],0x20
  407642:	cmp    rbx,0x15
  407646:	mov    BYTE PTR [rax+0xa],bl
  407649:	jne    407620 <__sprintf_chk@plt+0x6330>
  40764b:	lea    rsi,[rip+0xf10c]        # 41675e <__sprintf_chk@plt+0x1546e>
  407652:	mov    rdi,rbp
  407655:	mov    edx,0x11
  40765a:	call   405980 <__sprintf_chk@plt+0x4690>
  40765f:	or     BYTE PTR [rax+0x9],0x20
  407663:	mov    rax,QWORD PTR [r13+0x78]
  407667:	shl    rax,0x2
  40766b:	mov    QWORD PTR [r13+0x70],rax
  40766f:	add    rsp,0x8
  407673:	pop    rbx
  407674:	pop    rbp
  407675:	pop    r12
  407677:	pop    r13
  407679:	pop    r14
  40767b:	pop    r15
  40767d:	ret    
  40767e:	xchg   ax,ax
  407680:	push   r13
  407682:	push   r12
  407684:	mov    r13,rdi
  407687:	push   rbp
  407688:	push   rbx
  407689:	mov    rbp,rsi
  40768c:	xor    edx,edx
  40768e:	xor    esi,esi
  407690:	mov    ecx,0x78
  407695:	sub    rsp,0x8
  407699:	mov    r12,QWORD PTR [rdi+0x38]
  40769d:	mov    rdi,r12
  4076a0:	call   403450 <__sprintf_chk@plt+0x2160>
  4076a5:	mov    rbx,rax
  4076a8:	mov    rax,QWORD PTR [r12+0x20]
  4076ad:	xor    esi,esi
  4076af:	mov    rdi,r12
  4076b2:	mov    rdx,QWORD PTR [rax+0x28]
  4076b6:	mov    QWORD PTR [rbx],rdx
  4076b9:	mov    QWORD PTR [rax+0x28],rbx
  4076bd:	xor    edx,edx
  4076bf:	movzx  eax,BYTE PTR [rax+0x20]
  4076c3:	mov    BYTE PTR [rbx+0x8],0x9
  4076c7:	mov    BYTE PTR [rbx+0x70],0x0
  4076cb:	mov    BYTE PTR [rbx+0x71],0x0
  4076cf:	mov    BYTE PTR [rbx+0x72],0x0
  4076d3:	mov    QWORD PTR [rbx+0x10],0x0
  4076db:	mov    DWORD PTR [rbx+0x4c],0x0
  4076e2:	mov    QWORD PTR [rbx+0x20],0x0
  4076ea:	and    eax,0x3
  4076ed:	mov    DWORD PTR [rbx+0x58],0x0
  4076f4:	mov    QWORD PTR [rbx+0x18],0x0
  4076fc:	mov    BYTE PTR [rbx+0x9],al
  4076ff:	mov    rax,QWORD PTR [r13+0x30]
  407703:	mov    DWORD PTR [rbx+0x50],0x0
  40770a:	mov    DWORD PTR [rbx+0x54],0x0
  407711:	mov    DWORD PTR [rbx+0x48],0x0
  407718:	mov    QWORD PTR [rbx+0x38],0x0
  407720:	mov    QWORD PTR [rbx+0x28],0x0
  407728:	mov    DWORD PTR [rbx+0x5c],0x0
  40772f:	mov    QWORD PTR [rbx+0x30],0x0
  407737:	mov    DWORD PTR [rbx+0x60],0x0
  40773e:	mov    DWORD PTR [rbx+0x64],0x0
  407745:	mov    QWORD PTR [rbp+0x10],rax
  407749:	xor    eax,eax
  40774b:	mov    QWORD PTR [rbp+0x0],rbx
  40774f:	mov    QWORD PTR [rbp+0x18],r13
  407753:	mov    QWORD PTR [rbp+0x20],r12
  407757:	mov    QWORD PTR [r13+0x30],rbp
  40775b:	mov    DWORD PTR [rbp+0x30],0x0
  407762:	mov    DWORD PTR [rbp+0x34],0xffffffff
  407769:	mov    DWORD PTR [rbp+0x38],0xffffffff
  407770:	mov    WORD PTR [rbp+0x48],ax
  407774:	mov    BYTE PTR [rbp+0x4a],0x0
  407778:	mov    rax,QWORD PTR [r13+0x50]
  40777c:	mov    DWORD PTR [rbp+0x3c],0x0
  407783:	mov    DWORD PTR [rbp+0x40],0x0
  40778a:	mov    DWORD PTR [rbp+0x44],0x0
  407791:	mov    QWORD PTR [rbp+0x28],0x0
  407799:	mov    QWORD PTR [rbx+0x40],rax
  40779d:	mov    BYTE PTR [rbx+0x73],0x2
  4077a1:	call   407420 <__sprintf_chk@plt+0x6130>
  4077a6:	mov    rdx,QWORD PTR [r12+0x10]
  4077ab:	mov    QWORD PTR [rbp+0x8],rax
  4077af:	mov    QWORD PTR [rdx],rax
  4077b2:	mov    DWORD PTR [rdx+0x8],0x5
  4077b9:	mov    rax,QWORD PTR [r12+0x10]
  4077be:	mov    rdx,QWORD PTR [r12+0x38]
  4077c3:	sub    rdx,rax
  4077c6:	cmp    rdx,0x10
  4077ca:	jle    407820 <__sprintf_chk@plt+0x6530>
  4077cc:	lea    rdx,[rax+0x10]
  4077d0:	mov    QWORD PTR [r12+0x10],rdx
  4077d5:	mov    QWORD PTR [rax+0x10],rbx
  4077d9:	mov    DWORD PTR [rax+0x18],0x9
  4077e0:	mov    rdx,QWORD PTR [r12+0x38]
  4077e5:	mov    rax,QWORD PTR [r12+0x10]
  4077ea:	sub    rdx,rax
  4077ed:	cmp    rdx,0x10
  4077f1:	jg     407805 <__sprintf_chk@plt+0x6515>
  4077f3:	mov    esi,0x1
  4077f8:	mov    rdi,r12
  4077fb:	call   406720 <__sprintf_chk@plt+0x5430>
  407800:	mov    rax,QWORD PTR [r12+0x10]
  407805:	add    rax,0x10
  407809:	mov    QWORD PTR [r12+0x10],rax
  40780e:	add    rsp,0x8
  407812:	pop    rbx
  407813:	pop    rbp
  407814:	pop    r12
  407816:	pop    r13
  407818:	ret    
  407819:	nop    DWORD PTR [rax+0x0]
  407820:	mov    esi,0x1
  407825:	mov    rdi,r12
  407828:	call   406720 <__sprintf_chk@plt+0x5430>
  40782d:	mov    rax,QWORD PTR [r12+0x10]
  407832:	jmp    4077cc <__sprintf_chk@plt+0x64dc>
  407834:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40783f:	nop
  407840:	push   r12
  407842:	push   rbp
  407843:	mov    r12,rdi
  407846:	push   rbx
  407847:	mov    rbx,rsi
  40784a:	mov    rsi,rdx
  40784d:	mov    rdi,rbx
  407850:	mov    rbp,rdx
  407853:	call   402620 <__sprintf_chk@plt+0x1330>
  407858:	lea    rdx,[rip+0xee71]        # 4166d0 <__sprintf_chk@plt+0x153e0>
  40785f:	mov    BYTE PTR [rbx+0xa],0x0
  407863:	cmp    rax,rdx
  407866:	je     407870 <__sprintf_chk@plt+0x6580>
  407868:	pop    rbx
  407869:	pop    rbp
  40786a:	pop    r12
  40786c:	ret    
  40786d:	nop    DWORD PTR [rax]
  407870:	mov    eax,DWORD PTR [rbp+0x8]
  407873:	test   eax,eax
  407875:	je     407890 <__sprintf_chk@plt+0x65a0>
  407877:	cmp    eax,0x3
  40787a:	je     4078a0 <__sprintf_chk@plt+0x65b0>
  40787c:	mov    rdx,rbp
  40787f:	mov    rsi,rbx
  407882:	mov    rdi,r12
  407885:	pop    rbx
  407886:	pop    rbp
  407887:	pop    r12
  407889:	jmp    4078c0 <__sprintf_chk@plt+0x65d0>
  40788b:	nop    DWORD PTR [rax+rax*1+0x0]
  407890:	lea    rsi,[rip+0xef50]        # 4167e7 <__sprintf_chk@plt+0x154f7>
  407897:	mov    rdi,r12
  40789a:	call   405730 <__sprintf_chk@plt+0x4440>
  40789f:	nop
  4078a0:	vmovsd xmm0,QWORD PTR [rbp+0x0]
  4078a5:	vucomisd xmm0,xmm0
  4078a9:	jnp    40787c <__sprintf_chk@plt+0x658c>
  4078ab:	lea    rsi,[rip+0xef48]        # 4167fa <__sprintf_chk@plt+0x1550a>
  4078b2:	mov    rdi,r12
  4078b5:	xor    eax,eax
  4078b7:	call   405730 <__sprintf_chk@plt+0x4440>
  4078bc:	nop    DWORD PTR [rax+0x0]
  4078c0:	push   r15
  4078c2:	push   r14
  4078c4:	push   r13
  4078c6:	push   r12
  4078c8:	mov    r12,rsi
  4078cb:	push   rbp
  4078cc:	push   rbx
  4078cd:	mov    rsi,rdx
  4078d0:	mov    rbp,rdi
  4078d3:	mov    rdi,r12
  4078d6:	mov    r13,rdx
  4078d9:	sub    rsp,0x98
  4078e0:	mov    rax,QWORD PTR fs:0x28
  4078e9:	mov    QWORD PTR [rsp+0x88],rax
  4078f1:	xor    eax,eax
  4078f3:	call   4024b0 <__sprintf_chk@plt+0x11c0>
  4078f8:	mov    esi,DWORD PTR [rax+0x8]
  4078fb:	mov    r15,rax
  4078fe:	test   esi,esi
  407900:	jne    407958 <__sprintf_chk@plt+0x6668>
  407902:	lea    rax,[rip+0xed57]        # 416660 <__sprintf_chk@plt+0x15370>
  407909:	cmp    r15,rax
  40790c:	je     407958 <__sprintf_chk@plt+0x6668>
  40790e:	mov    rax,QWORD PTR [r13+0x0]
  407912:	mov    QWORD PTR [r15+0x10],rax
  407916:	mov    eax,DWORD PTR [r13+0x8]
  40791a:	mov    DWORD PTR [r15+0x18],eax
  40791e:	cmp    DWORD PTR [r13+0x8],0x3
  407923:	jg     407af0 <__sprintf_chk@plt+0x6800>
  407929:	mov    rax,r15
  40792c:	mov    rdi,QWORD PTR [rsp+0x88]
  407934:	xor    rdi,QWORD PTR fs:0x28
  40793d:	jne    407bc1 <__sprintf_chk@plt+0x68d1>
  407943:	add    rsp,0x98
  40794a:	pop    rbx
  40794b:	pop    rbp
  40794c:	pop    r12
  40794e:	pop    r13
  407950:	pop    r14
  407952:	pop    r15
  407954:	ret    
  407955:	nop    DWORD PTR [rax]
  407958:	mov    rax,QWORD PTR [r12+0x20]
  40795d:	mov    rbx,QWORD PTR [r12+0x28]
  407962:	jmp    407976 <__sprintf_chk@plt+0x6686>
  407964:	nop    DWORD PTR [rax+0x0]
  407968:	mov    ecx,DWORD PTR [rbx-0x10]
  40796b:	test   ecx,ecx
  40796d:	je     407a78 <__sprintf_chk@plt+0x6788>
  407973:	mov    rbx,r14
  407976:	lea    r14,[rbx-0x28]
  40797a:	cmp    rax,rbx
  40797d:	mov    QWORD PTR [r12+0x28],r14
  407982:	jb     407968 <__sprintf_chk@plt+0x6678>
  407984:	lea    rax,[rsp+0x7c]
  407989:	mov    r10,rsp
  40798c:	mov    r9,rsp
  40798f:	mov    rsi,rsp
  407992:	nop    WORD PTR [rax+rax*1+0x0]
  407998:	mov    DWORD PTR [rsi],0x0
  40799e:	add    rsi,0x4
  4079a2:	cmp    rsi,rax
  4079a5:	jne    407998 <__sprintf_chk@plt+0x66a8>
  4079a7:	mov    ebx,DWORD PTR [r12+0x38]
  4079ac:	mov    rdi,r10
  4079af:	xor    r8d,r8d
  4079b2:	mov    edx,0x1
  4079b7:	mov    r11d,0x1
  4079bd:	nop    DWORD PTR [rax]
  4079c0:	cmp    ebx,r11d
  4079c3:	jge    407b30 <__sprintf_chk@plt+0x6840>
  4079c9:	cmp    ebx,edx
  4079cb:	jl     407a05 <__sprintf_chk@plt+0x6715>
  4079cd:	mov    ecx,ebx
  4079cf:	movsxd rax,edx
  4079d2:	xor    r14d,r14d
  4079d5:	shl    rax,0x4
  4079d9:	add    rax,QWORD PTR [r12+0x18]
  4079de:	xchg   ax,ax
  4079e0:	cmp    DWORD PTR [rax-0x8],0x1
  4079e4:	sbb    r14d,0xffffffff
  4079e8:	add    edx,0x1
  4079eb:	add    rax,0x10
  4079ef:	cmp    ecx,edx
  4079f1:	jge    4079e0 <__sprintf_chk@plt+0x66f0>
  4079f3:	add    DWORD PTR [rdi],r14d
  4079f6:	add    rdi,0x4
  4079fa:	add    r8d,r14d
  4079fd:	add    r11d,r11d
  407a00:	cmp    rdi,rsi
  407a03:	jne    4079c0 <__sprintf_chk@plt+0x66d0>
  407a05:	movzx  eax,BYTE PTR [r12+0xb]
  407a0b:	mov    edx,0x1
  407a10:	xor    r14d,r14d
  407a13:	xor    r15d,r15d
  407a16:	shlx   rdx,rdx,rax
  407a1b:	movsxd rax,edx
  407a1e:	mov    edx,edx
  407a20:	lea    rcx,[rax+rax*4]
  407a24:	sub    rax,rdx
  407a27:	lea    rax,[rax+rax*4]
  407a2b:	lea    r11,[rcx*8-0x28]
  407a33:	lea    rbx,[rax*8-0x28]
  407a3b:	jmp    407a44 <__sprintf_chk@plt+0x6754>
  407a3d:	nop    DWORD PTR [rax]
  407a40:	sub    r11,0x28
  407a44:	cmp    r11,rbx
  407a47:	je     407b45 <__sprintf_chk@plt+0x6855>
  407a4d:	mov    rax,r11
  407a50:	add    rax,QWORD PTR [r12+0x20]
  407a55:	mov    edx,DWORD PTR [rax+0x8]
  407a58:	test   edx,edx
  407a5a:	je     407a40 <__sprintf_chk@plt+0x6750>
  407a5c:	lea    rdi,[rax+0x10]
  407a60:	mov    rsi,r10
  407a63:	add    r15d,0x1
  407a67:	call   4019d0 <__sprintf_chk@plt+0x6e0>
  407a6c:	add    r14d,eax
  407a6f:	jmp    407a40 <__sprintf_chk@plt+0x6750>
  407a71:	nop    DWORD PTR [rax+0x0]
  407a78:	lea    rsi,[r15+0x10]
  407a7c:	mov    rdi,r12
  407a7f:	call   4024b0 <__sprintf_chk@plt+0x11c0>
  407a84:	cmp    r15,rax
  407a87:	jne    407aa3 <__sprintf_chk@plt+0x67b3>
  407a89:	mov    rax,QWORD PTR [r15+0x20]
  407a8d:	mov    QWORD PTR [rbx-0x8],rax
  407a91:	mov    QWORD PTR [r15+0x20],r14
  407a95:	mov    r15,r14
  407a98:	jmp    40790e <__sprintf_chk@plt+0x661e>
  407a9d:	nop    DWORD PTR [rax]
  407aa0:	mov    rax,rdx
  407aa3:	mov    rdx,QWORD PTR [rax+0x20]
  407aa7:	cmp    r15,rdx
  407aaa:	jne    407aa0 <__sprintf_chk@plt+0x67b0>
  407aac:	mov    QWORD PTR [rax+0x20],r14
  407ab0:	mov    rax,QWORD PTR [r15]
  407ab3:	mov    QWORD PTR [rbx-0x28],rax
  407ab7:	mov    rax,QWORD PTR [r15+0x8]
  407abb:	mov    QWORD PTR [rbx-0x20],rax
  407abf:	mov    rax,QWORD PTR [r15+0x10]
  407ac3:	mov    QWORD PTR [rbx-0x18],rax
  407ac7:	mov    rax,QWORD PTR [r15+0x18]
  407acb:	mov    QWORD PTR [rbx-0x10],rax
  407acf:	mov    rax,QWORD PTR [r15+0x20]
  407ad3:	mov    QWORD PTR [rbx-0x8],rax
  407ad7:	mov    QWORD PTR [r15+0x20],0x0
  407adf:	mov    DWORD PTR [r15+0x8],0x0
  407ae7:	jmp    40790e <__sprintf_chk@plt+0x661e>
  407aec:	nop    DWORD PTR [rax+0x0]
  407af0:	mov    rax,QWORD PTR [r13+0x0]
  407af4:	test   BYTE PTR [rax+0x9],0x3
  407af8:	je     407929 <__sprintf_chk@plt+0x6639>
  407afe:	movzx  eax,BYTE PTR [r12+0x9]
  407b04:	test   al,0x4
  407b06:	je     407929 <__sprintf_chk@plt+0x6639>
  407b0c:	mov    rdx,QWORD PTR [rbp+0x20]
  407b10:	and    eax,0xfffffffb
  407b13:	mov    BYTE PTR [r12+0x9],al
  407b18:	mov    rax,QWORD PTR [rdx+0x40]
  407b1c:	mov    QWORD PTR [r12+0x30],rax
  407b21:	mov    QWORD PTR [rdx+0x40],r12
  407b25:	jmp    407929 <__sprintf_chk@plt+0x6639>
  407b2a:	nop    WORD PTR [rax+rax*1+0x0]
  407b30:	cmp    r11d,edx
  407b33:	jl     407b3d <__sprintf_chk@plt+0x684d>
  407b35:	mov    ecx,r11d
  407b38:	jmp    4079cf <__sprintf_chk@plt+0x66df>
  407b3d:	xor    r14d,r14d
  407b40:	jmp    4079f3 <__sprintf_chk@plt+0x6703>
  407b45:	add    r14d,r8d
  407b48:	mov    rsi,r10
  407b4b:	mov    rdi,r13
  407b4e:	add    r8d,r15d
  407b51:	call   4019d0 <__sprintf_chk@plt+0x6e0>
  407b56:	lea    r10d,[rax+r14*1]
  407b5a:	xor    edx,edx
  407b5c:	xor    r11d,r11d
  407b5f:	lea    ecx,[r8+0x1]
  407b63:	test   r10d,r10d
  407b66:	jle    407ba0 <__sprintf_chk@plt+0x68b0>
  407b68:	mov    esi,0x1
  407b6d:	xor    edi,edi
  407b6f:	xor    eax,eax
  407b71:	jmp    407b87 <__sprintf_chk@plt+0x6897>
  407b73:	nop    DWORD PTR [rax+rax*1+0x0]
  407b78:	add    esi,esi
  407b7a:	add    r9,0x4
  407b7e:	mov    edi,esi
  407b80:	sar    edi,1
  407b82:	cmp    r10d,edi
  407b85:	jle    407ba0 <__sprintf_chk@plt+0x68b0>
  407b87:	mov    r8d,DWORD PTR [r9]
  407b8a:	test   r8d,r8d
  407b8d:	jle    407b9b <__sprintf_chk@plt+0x68ab>
  407b8f:	add    eax,r8d
  407b92:	cmp    edi,eax
  407b94:	jge    407b9b <__sprintf_chk@plt+0x68ab>
  407b96:	mov    edx,esi
  407b98:	mov    r11d,eax
  407b9b:	cmp    r10d,eax
  407b9e:	jne    407b78 <__sprintf_chk@plt+0x6888>
  407ba0:	mov    rsi,r12
  407ba3:	mov    rdi,rbp
  407ba6:	sub    ecx,r11d
  407ba9:	call   407c80 <__sprintf_chk@plt+0x6990>
  407bae:	mov    rdx,r13
  407bb1:	mov    rsi,r12
  407bb4:	mov    rdi,rbp
  407bb7:	call   407840 <__sprintf_chk@plt+0x6550>
  407bbc:	jmp    40792c <__sprintf_chk@plt+0x663c>
  407bc1:	call   401100 <__stack_chk_fail@plt>
  407bc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407bd0:	push   rbp
  407bd1:	push   rbx
  407bd2:	mov    rbp,rdi
  407bd5:	mov    rbx,rsi
  407bd8:	sub    rsp,0x38
  407bdc:	mov    rax,QWORD PTR fs:0x28
  407be5:	mov    QWORD PTR [rsp+0x28],rax
  407bea:	xor    eax,eax
  407bec:	lea    eax,[rdx-0x1]
  407bef:	cmp    eax,DWORD PTR [rsi+0x38]
  407bf2:	jae    407c30 <__sprintf_chk@plt+0x6940>
  407bf4:	mov    rcx,QWORD PTR [rsi+0x18]
  407bf8:	movsxd rax,edx
  407bfb:	shl    rax,0x4
  407bff:	lea    rax,[rcx+rax*1-0x10]
  407c04:	lea    rcx,[rip+0xeac5]        # 4166d0 <__sprintf_chk@plt+0x153e0>
  407c0b:	cmp    rax,rcx
  407c0e:	je     407c4e <__sprintf_chk@plt+0x695e>
  407c10:	mov    rsi,QWORD PTR [rsp+0x28]
  407c15:	xor    rsi,QWORD PTR fs:0x28
  407c1e:	jne    407c76 <__sprintf_chk@plt+0x6986>
  407c20:	add    rsp,0x38
  407c24:	pop    rbx
  407c25:	pop    rbp
  407c26:	ret    
  407c27:	nop    WORD PTR [rax+rax*1+0x0]
  407c30:	mov    esi,edx
  407c32:	mov    rdi,rbx
  407c35:	mov    DWORD PTR [rsp+0xc],edx
  407c39:	call   402570 <__sprintf_chk@plt+0x1280>
  407c3e:	lea    rcx,[rip+0xea8b]        # 4166d0 <__sprintf_chk@plt+0x153e0>
  407c45:	mov    edx,DWORD PTR [rsp+0xc]
  407c49:	cmp    rax,rcx
  407c4c:	jne    407c10 <__sprintf_chk@plt+0x6920>
  407c4e:	vxorpd xmm0,xmm0,xmm0
  407c52:	mov    rsi,rbx
  407c55:	mov    rdi,rbp
  407c58:	mov    DWORD PTR [rsp+0x18],0x3
  407c60:	vcvtsi2sd xmm0,xmm0,edx
  407c64:	lea    rdx,[rsp+0x10]
  407c69:	vmovsd QWORD PTR [rsp+0x10],xmm0
  407c6f:	call   4078c0 <__sprintf_chk@plt+0x65d0>
  407c74:	jmp    407c10 <__sprintf_chk@plt+0x6920>
  407c76:	call   401100 <__stack_chk_fail@plt>
  407c7b:	nop    DWORD PTR [rax+rax*1+0x0]
  407c80:	push   r15
  407c82:	push   r14
  407c84:	mov    r15,rsi
  407c87:	push   r13
  407c89:	push   r12
  407c8b:	mov    r12,rdi
  407c8e:	push   rbp
  407c8f:	push   rbx
  407c90:	mov    ebp,ecx
  407c92:	mov    ebx,edx
  407c94:	sub    rsp,0x28
  407c98:	mov    r14d,DWORD PTR [rsi+0x38]
  407c9c:	movzx  eax,BYTE PTR [rsi+0xb]
  407ca0:	mov    r13,QWORD PTR [rsi+0x20]
  407ca4:	cmp    r14d,edx
  407ca7:	mov    DWORD PTR [rsp+0x14],eax
  407cab:	jl     407e00 <__sprintf_chk@plt+0x6b10>
  407cb1:	mov    edx,ecx
  407cb3:	call   407340 <__sprintf_chk@plt+0x6050>
  407cb8:	cmp    r14d,ebx
  407cbb:	jle    407d64 <__sprintf_chk@plt+0x6a74>
  407cc1:	movsxd rbp,ebx
  407cc4:	mov    DWORD PTR [r15+0x38],ebx
  407cc8:	lea    ecx,[rbx+0x1]
  407ccb:	shl    rbp,0x4
  407ccf:	mov    QWORD PTR [rsp+0x18],rbp
  407cd4:	jmp    407cec <__sprintf_chk@plt+0x69fc>
  407cd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407ce0:	add    rbp,0x10
  407ce4:	add    ecx,0x1
  407ce7:	cmp    r14d,r11d
  407cea:	jle    407d3f <__sprintf_chk@plt+0x6a4f>
  407cec:	mov    r9,rbp
  407cef:	add    r9,QWORD PTR [r15+0x18]
  407cf3:	mov    r11d,ecx
  407cf6:	mov    edx,DWORD PTR [r9+0x8]
  407cfa:	test   edx,edx
  407cfc:	je     407ce0 <__sprintf_chk@plt+0x69f0>
  407cfe:	mov    edx,ecx
  407d00:	mov    rsi,r15
  407d03:	mov    rdi,r12
  407d06:	mov    QWORD PTR [rsp+0x8],r9
  407d0b:	mov    DWORD PTR [rsp+0x10],ecx
  407d0f:	add    rbp,0x10
  407d13:	mov    DWORD PTR [rsp+0x4],ecx
  407d17:	call   407bd0 <__sprintf_chk@plt+0x68e0>
  407d1c:	mov    r9,QWORD PTR [rsp+0x8]
  407d21:	mov    r11d,DWORD PTR [rsp+0x10]
  407d26:	mov    ecx,DWORD PTR [rsp+0x4]
  407d2a:	mov    rdx,QWORD PTR [r9]
  407d2d:	add    ecx,0x1
  407d30:	cmp    r14d,r11d
  407d33:	mov    QWORD PTR [rax],rdx
  407d36:	mov    edx,DWORD PTR [r9+0x8]
  407d3a:	mov    DWORD PTR [rax+0x8],edx
  407d3d:	jg     407cec <__sprintf_chk@plt+0x69fc>
  407d3f:	cmp    ebx,0xffffffff
  407d42:	jl     407e40 <__sprintf_chk@plt+0x6b50>
  407d48:	mov    rsi,QWORD PTR [r15+0x18]
  407d4c:	mov    rcx,QWORD PTR [rsp+0x18]
  407d51:	movsxd rdx,r14d
  407d54:	shl    rdx,0x4
  407d58:	mov    rdi,r12
  407d5b:	call   403450 <__sprintf_chk@plt+0x2160>
  407d60:	mov    QWORD PTR [r15+0x18],rax
  407d64:	movzx  eax,BYTE PTR [rsp+0x14]
  407d69:	mov    ebp,0x1
  407d6e:	shlx   rbp,rbp,rax
  407d73:	sub    ebp,0x1
  407d76:	js     407dca <__sprintf_chk@plt+0x6ada>
  407d78:	movsxd rbp,ebp
  407d7b:	lea    rax,[rbp+rbp*4+0x0]
  407d80:	lea    rbx,[r13+rax*8+0x10]
  407d85:	jmp    407d9c <__sprintf_chk@plt+0x6aac>
  407d87:	nop    WORD PTR [rax+rax*1+0x0]
  407d90:	sub    rbp,0x1
  407d94:	sub    rbx,0x28
  407d98:	test   ebp,ebp
  407d9a:	js     407dca <__sprintf_chk@plt+0x6ada>
  407d9c:	mov    eax,DWORD PTR [rbx-0x8]
  407d9f:	test   eax,eax
  407da1:	je     407d90 <__sprintf_chk@plt+0x6aa0>
  407da3:	mov    rdx,rbx
  407da6:	mov    rsi,r15
  407da9:	mov    rdi,r12
  407dac:	call   407840 <__sprintf_chk@plt+0x6550>
  407db1:	mov    rdx,QWORD PTR [rbx-0x10]
  407db5:	sub    rbp,0x1
  407db9:	sub    rbx,0x28
  407dbd:	mov    QWORD PTR [rax],rdx
  407dc0:	mov    edx,DWORD PTR [rbx+0x20]
  407dc3:	test   ebp,ebp
  407dc5:	mov    DWORD PTR [rax+0x8],edx
  407dc8:	jns    407d9c <__sprintf_chk@plt+0x6aac>
  407dca:	lea    rax,[rip+0xe88f]        # 416660 <__sprintf_chk@plt+0x15370>
  407dd1:	cmp    r13,rax
  407dd4:	je     407e28 <__sprintf_chk@plt+0x6b38>
  407dd6:	movzx  eax,BYTE PTR [rsp+0x14]
  407ddb:	add    rsp,0x28
  407ddf:	mov    rsi,r13
  407de2:	pop    rbx
  407de3:	mov    rdi,r12
  407de6:	mov    edx,0x28
  407deb:	xor    ecx,ecx
  407ded:	pop    rbp
  407dee:	pop    r12
  407df0:	pop    r13
  407df2:	pop    r14
  407df4:	pop    r15
  407df6:	shlx   rdx,rdx,rax
  407dfb:	jmp    403450 <__sprintf_chk@plt+0x2160>
  407e00:	lea    rdx,[rsi+0x38]
  407e04:	lea    rsi,[rsi+0x18]
  407e08:	mov    ecx,ebx
  407e0a:	call   405ee0 <__sprintf_chk@plt+0x4bf0>
  407e0f:	mov    edx,ebp
  407e11:	mov    rsi,r15
  407e14:	mov    rdi,r12
  407e17:	call   407340 <__sprintf_chk@plt+0x6050>
  407e1c:	jmp    407d64 <__sprintf_chk@plt+0x6a74>
  407e21:	nop    DWORD PTR [rax+0x0]
  407e28:	add    rsp,0x28
  407e2c:	pop    rbx
  407e2d:	pop    rbp
  407e2e:	pop    r12
  407e30:	pop    r13
  407e32:	pop    r14
  407e34:	pop    r15
  407e36:	ret    
  407e37:	nop    WORD PTR [rax+rax*1+0x0]
  407e40:	lea    rsi,[rip+0xf209]        # 417050 <__sprintf_chk@plt+0x15d60>
  407e47:	mov    rdi,r12
  407e4a:	xor    eax,eax
  407e4c:	call   405730 <__sprintf_chk@plt+0x4440>
  407e51:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  407e5c:	nop    DWORD PTR [rax+0x0]
  407e60:	push   r12
  407e62:	push   rbp
  407e63:	mov    r8d,edx
  407e66:	push   rbx
  407e67:	mov    rbx,rdi
  407e6a:	call   402b60 <__sprintf_chk@plt+0x1870>
  407e6f:	mov    rbp,QWORD PTR [rbx+0x10]
  407e73:	mov    rsi,QWORD PTR [rax]
  407e76:	mov    edx,r8d
  407e79:	mov    rdi,rbx
  407e7c:	mov    r12,rax
  407e7f:	call   407bd0 <__sprintf_chk@plt+0x68e0>
  407e84:	mov    rdx,QWORD PTR [rbp-0x10]
  407e88:	mov    QWORD PTR [rax],rdx
  407e8b:	mov    edx,DWORD PTR [rbp-0x8]
  407e8e:	mov    DWORD PTR [rax+0x8],edx
  407e91:	mov    rax,QWORD PTR [rbx+0x10]
  407e95:	cmp    DWORD PTR [rax-0x8],0x3
  407e99:	jle    407ec8 <__sprintf_chk@plt+0x6bd8>
  407e9b:	mov    rax,QWORD PTR [rax-0x10]
  407e9f:	test   BYTE PTR [rax+0x9],0x3
  407ea3:	je     407ec8 <__sprintf_chk@plt+0x6bd8>
  407ea5:	mov    rax,QWORD PTR [r12]
  407ea9:	movzx  edx,BYTE PTR [rax+0x9]
  407ead:	test   dl,0x4
  407eb0:	je     407ec8 <__sprintf_chk@plt+0x6bd8>
  407eb2:	mov    rcx,QWORD PTR [rbx+0x20]
  407eb6:	and    edx,0xfffffffb
  407eb9:	mov    BYTE PTR [rax+0x9],dl
  407ebc:	mov    rdx,QWORD PTR [rcx+0x40]
  407ec0:	mov    QWORD PTR [rax+0x30],rdx
  407ec4:	mov    QWORD PTR [rcx+0x40],rax
  407ec8:	sub    QWORD PTR [rbx+0x10],0x10
  407ecd:	pop    rbx
  407ece:	pop    rbp
  407ecf:	pop    r12
  407ed1:	ret    
  407ed2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  407edd:	nop    DWORD PTR [rax]
  407ee0:	push   r15
  407ee2:	push   r14
  407ee4:	mov    r15,rdx
  407ee7:	push   r13
  407ee9:	push   r12
  407eeb:	mov    r12,rsi
  407eee:	push   rbp
  407eef:	push   rbx
  407ef0:	mov    rbx,rdi
  407ef3:	sub    rsp,0x28
  407ef7:	cmp    BYTE PTR [rsi],0x3e
  407efa:	je     408168 <__sprintf_chk@plt+0x6e78>
  407f00:	movsxd rax,DWORD PTR [rdx+0x74]
  407f04:	test   eax,eax
  407f06:	je     408240 <__sprintf_chk@plt+0x6f50>
  407f0c:	lea    rdx,[rax+rax*4]
  407f10:	mov    rax,QWORD PTR [rdi+0x50]
  407f14:	lea    rax,[rax+rdx*8]
  407f18:	mov    QWORD PTR [rsp+0x18],rax
  407f1d:	mov    rax,QWORD PTR [rax+0x8]
  407f21:	mov    rbp,QWORD PTR [rax]
  407f24:	test   rbp,rbp
  407f27:	je     408240 <__sprintf_chk@plt+0x6f50>
  407f2d:	movzx  eax,BYTE PTR [r12]
  407f32:	lea    rdi,[r15+0x38]
  407f36:	mov    r13,r12
  407f39:	mov    DWORD PTR [rsp+0xc],0x1
  407f41:	lea    r14,[rip+0xe248]        # 416190 <__sprintf_chk@plt+0x14ea0>
  407f48:	mov    QWORD PTR [rsp+0x10],rdi
  407f4d:	test   al,al
  407f4f:	je     407f9b <__sprintf_chk@plt+0x6cab>
  407f51:	nop    DWORD PTR [rax+0x0]
  407f58:	sub    eax,0x4c
  407f5b:	cmp    al,0x29
  407f5d:	ja     408108 <__sprintf_chk@plt+0x6e18>
  407f63:	movzx  eax,al
  407f66:	movsxd rax,DWORD PTR [r14+rax*4]
  407f6a:	add    rax,r14
  407f6d:	jmp    rax
  407f6f:	nop
  407f70:	mov    rcx,QWORD PTR [rsp+0x18]
  407f75:	mov    eax,0xffffffff
  407f7a:	test   rcx,rcx
  407f7d:	je     407f8a <__sprintf_chk@plt+0x6c9a>
  407f7f:	mov    rsi,rcx
  407f82:	mov    rdi,rbx
  407f85:	call   401bf0 <__sprintf_chk@plt+0x900>
  407f8a:	mov    DWORD PTR [r15+0x28],eax
  407f8e:	add    r13,0x1
  407f92:	movzx  eax,BYTE PTR [r13+0x0]
  407f97:	test   al,al
  407f99:	jne    407f58 <__sprintf_chk@plt+0x6c68>
  407f9b:	mov    esi,0x66
  407fa0:	mov    rdi,r12
  407fa3:	call   401110 <strchr@plt>
  407fa8:	test   rax,rax
  407fab:	je     4081b0 <__sprintf_chk@plt+0x6ec0>
  407fb1:	mov    rax,QWORD PTR [rbx+0x10]
  407fb5:	mov    QWORD PTR [rax],rbp
  407fb8:	mov    DWORD PTR [rax+0x8],0x6
  407fbf:	mov    rax,QWORD PTR [rbx+0x10]
  407fc3:	mov    rdx,QWORD PTR [rbx+0x38]
  407fc7:	sub    rdx,rax
  407fca:	cmp    rdx,0x10
  407fce:	jle    408190 <__sprintf_chk@plt+0x6ea0>
  407fd4:	add    rax,0x10
  407fd8:	mov    esi,0x4c
  407fdd:	mov    rdi,r12
  407fe0:	mov    QWORD PTR [rbx+0x10],rax
  407fe4:	call   401110 <strchr@plt>
  407fe9:	test   rax,rax
  407fec:	je     40802e <__sprintf_chk@plt+0x6d3e>
  407fee:	test   rbp,rbp
  407ff1:	je     407ffd <__sprintf_chk@plt+0x6d0d>
  407ff3:	cmp    BYTE PTR [rbp+0xa],0x0
  407ff7:	je     4081d0 <__sprintf_chk@plt+0x6ee0>
  407ffd:	mov    rax,QWORD PTR [rbx+0x10]
  408001:	mov    DWORD PTR [rax+0x8],0x0
  408008:	mov    rdx,QWORD PTR [rbx+0x38]
  40800c:	sub    rdx,rax
  40800f:	cmp    rdx,0x10
  408013:	jg     408026 <__sprintf_chk@plt+0x6d36>
  408015:	mov    esi,0x1
  40801a:	mov    rdi,rbx
  40801d:	call   406720 <__sprintf_chk@plt+0x5430>
  408022:	mov    rax,QWORD PTR [rbx+0x10]
  408026:	add    rax,0x10
  40802a:	mov    QWORD PTR [rbx+0x10],rax
  40802e:	mov    eax,DWORD PTR [rsp+0xc]
  408032:	add    rsp,0x28
  408036:	pop    rbx
  408037:	pop    rbp
  408038:	pop    r12
  40803a:	pop    r13
  40803c:	pop    r14
  40803e:	pop    r15
  408040:	ret    
  408041:	nop    DWORD PTR [rax+0x0]
  408048:	movzx  eax,BYTE PTR [rbp+0xb]
  40804c:	add    r13,0x1
  408050:	mov    DWORD PTR [r15+0x2c],eax
  408054:	movzx  eax,BYTE PTR [r13+0x0]
  408059:	test   al,al
  40805b:	jne    407f58 <__sprintf_chk@plt+0x6c68>
  408061:	jmp    407f9b <__sprintf_chk@plt+0x6cab>
  408066:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408070:	cmp    BYTE PTR [rbp+0xa],0x0
  408074:	jne    408130 <__sprintf_chk@plt+0x6e40>
  40807a:	mov    rax,QWORD PTR [rbp+0x20]
  40807e:	mov    rcx,QWORD PTR [rax+0x40]
  408082:	mov    edx,DWORD PTR [rax+0x60]
  408085:	mov    eax,DWORD PTR [rax+0x64]
  408088:	test   edx,edx
  40808a:	mov    DWORD PTR [r15+0x30],edx
  40808e:	lea    rdx,[rip+0xe778]        # 41680d <__sprintf_chk@plt+0x1551d>
  408095:	mov    DWORD PTR [r15+0x34],eax
  408099:	lea    rax,[rip+0xe772]        # 416812 <__sprintf_chk@plt+0x15522>
  4080a0:	lea    rsi,[rcx+0x18]
  4080a4:	cmove  rax,rdx
  4080a8:	mov    QWORD PTR [r15+0x20],rsi
  4080ac:	mov    QWORD PTR [r15+0x18],rax
  4080b0:	mov    rdi,QWORD PTR [rsp+0x10]
  4080b5:	add    r13,0x1
  4080b9:	mov    edx,0x3c
  4080be:	call   401fb0 <__sprintf_chk@plt+0xcc0>
  4080c3:	movzx  eax,BYTE PTR [r13+0x0]
  4080c8:	test   al,al
  4080ca:	jne    407f58 <__sprintf_chk@plt+0x6c68>
  4080d0:	jmp    407f9b <__sprintf_chk@plt+0x6cab>
  4080d5:	nop    DWORD PTR [rax]
  4080d8:	lea    rax,[rip+0xed5b]        # 416e3a <__sprintf_chk@plt+0x15b4a>
  4080df:	add    r13,0x1
  4080e3:	mov    QWORD PTR [r15+0x8],0x0
  4080eb:	mov    QWORD PTR [r15+0x10],rax
  4080ef:	movzx  eax,BYTE PTR [r13+0x0]
  4080f4:	test   al,al
  4080f6:	jne    407f58 <__sprintf_chk@plt+0x6c68>
  4080fc:	jmp    407f9b <__sprintf_chk@plt+0x6cab>
  408101:	nop    DWORD PTR [rax+0x0]
  408108:	add    r13,0x1
  40810c:	movzx  eax,BYTE PTR [r13+0x0]
  408111:	mov    DWORD PTR [rsp+0xc],0x0
  408119:	test   al,al
  40811b:	jne    407f58 <__sprintf_chk@plt+0x6c68>
  408121:	jmp    407f9b <__sprintf_chk@plt+0x6cab>
  408126:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408130:	lea    rax,[rip+0xe6df]        # 416816 <__sprintf_chk@plt+0x15526>
  408137:	mov    DWORD PTR [r15+0x30],0xffffffff
  40813f:	mov    DWORD PTR [r15+0x34],0xffffffff
  408147:	lea    rsi,[rip+0xe6c8]        # 416816 <__sprintf_chk@plt+0x15526>
  40814e:	mov    QWORD PTR [r15+0x20],rax
  408152:	lea    rax,[rip+0xe6d4]        # 41682d <__sprintf_chk@plt+0x1553d>
  408159:	mov    QWORD PTR [r15+0x18],rax
  40815d:	jmp    4080b0 <__sprintf_chk@plt+0x6dc0>
  408162:	nop    WORD PTR [rax+rax*1+0x0]
  408168:	mov    rax,QWORD PTR [rdi+0x10]
  40816c:	add    r12,0x1
  408170:	mov    QWORD PTR [rsp+0x18],0x0
  408179:	mov    rbp,QWORD PTR [rax-0x10]
  40817d:	sub    rax,0x10
  408181:	mov    QWORD PTR [rdi+0x10],rax
  408185:	jmp    407f24 <__sprintf_chk@plt+0x6c34>
  40818a:	nop    WORD PTR [rax+rax*1+0x0]
  408190:	mov    esi,0x1
  408195:	mov    rdi,rbx
  408198:	call   406720 <__sprintf_chk@plt+0x5430>
  40819d:	mov    rax,QWORD PTR [rbx+0x10]
  4081a1:	jmp    407fd4 <__sprintf_chk@plt+0x6ce4>
  4081a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4081b0:	mov    esi,0x4c
  4081b5:	mov    rdi,r12
  4081b8:	call   401110 <strchr@plt>
  4081bd:	test   rax,rax
  4081c0:	je     40802e <__sprintf_chk@plt+0x6d3e>
  4081c6:	cmp    BYTE PTR [rbp+0xa],0x0
  4081ca:	jne    407ffd <__sprintf_chk@plt+0x6d0d>
  4081d0:	xor    edx,edx
  4081d2:	xor    esi,esi
  4081d4:	mov    rdi,rbx
  4081d7:	call   407420 <__sprintf_chk@plt+0x6130>
  4081dc:	mov    r13,rax
  4081df:	mov    rax,QWORD PTR [rbp+0x20]
  4081e3:	mov    r12d,0x1
  4081e9:	mov    r15,QWORD PTR [rax+0x28]
  4081ed:	mov    eax,DWORD PTR [rax+0x54]
  4081f0:	test   eax,eax
  4081f2:	jle    408225 <__sprintf_chk@plt+0x6f35>
  4081f4:	nop    DWORD PTR [rax+0x0]
  4081f8:	mov    edx,DWORD PTR [r15+r12*4-0x4]
  4081fd:	mov    rsi,r13
  408200:	mov    rdi,rbx
  408203:	call   407bd0 <__sprintf_chk@plt+0x68e0>
  408208:	mov    DWORD PTR [rax],0x1
  40820e:	mov    DWORD PTR [rax+0x8],0x1
  408215:	mov    edx,r12d
  408218:	mov    rax,QWORD PTR [rbp+0x20]
  40821c:	add    r12,0x1
  408220:	cmp    edx,DWORD PTR [rax+0x54]
  408223:	jl     4081f8 <__sprintf_chk@plt+0x6f08>
  408225:	mov    rax,QWORD PTR [rbx+0x10]
  408229:	mov    QWORD PTR [rax],r13
  40822c:	mov    DWORD PTR [rax+0x8],0x5
  408233:	mov    rax,QWORD PTR [rbx+0x10]
  408237:	jmp    408008 <__sprintf_chk@plt+0x6d18>
  40823c:	nop    DWORD PTR [rax+0x0]
  408240:	lea    rax,[rip+0xebf3]        # 416e3a <__sprintf_chk@plt+0x15b4a>
  408247:	lea    rsi,[rip+0xe5d2]        # 416820 <__sprintf_chk@plt+0x15530>
  40824e:	lea    rdi,[r15+0x38]
  408252:	mov    edx,0x3c
  408257:	mov    DWORD PTR [r15+0x28],0xffffffff
  40825f:	mov    DWORD PTR [r15+0x30],0xffffffff
  408267:	mov    QWORD PTR [r15+0x10],rax
  40826b:	mov    QWORD PTR [r15+0x8],rax
  40826f:	lea    rax,[rip+0xe5a5]        # 41681b <__sprintf_chk@plt+0x1552b>
  408276:	mov    QWORD PTR [r15+0x20],rsi
  40827a:	mov    DWORD PTR [r15+0x34],0xffffffff
  408282:	mov    QWORD PTR [r15+0x18],rax
  408286:	call   401fb0 <__sprintf_chk@plt+0xcc0>
  40828b:	mov    DWORD PTR [r15+0x2c],0x0
  408293:	mov    esi,0x66
  408298:	mov    rdi,r12
  40829b:	call   401110 <strchr@plt>
  4082a0:	test   rax,rax
  4082a3:	je     4082bf <__sprintf_chk@plt+0x6fcf>
  4082a5:	mov    rax,QWORD PTR [rbx+0x10]
  4082a9:	xor    ebp,ebp
  4082ab:	mov    DWORD PTR [rsp+0xc],0x1
  4082b3:	mov    DWORD PTR [rax+0x8],0x0
  4082ba:	jmp    407fc3 <__sprintf_chk@plt+0x6cd3>
  4082bf:	mov    esi,0x4c
  4082c4:	mov    rdi,r12
  4082c7:	call   401110 <strchr@plt>
  4082cc:	test   rax,rax
  4082cf:	mov    DWORD PTR [rsp+0xc],0x1
  4082d7:	jne    407ffd <__sprintf_chk@plt+0x6d0d>
  4082dd:	jmp    40802e <__sprintf_chk@plt+0x6d3e>
  4082e2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4082ed:	nop    DWORD PTR [rax]
  4082f0:	push   r15
  4082f2:	push   r14
  4082f4:	mov    r14,rdx
  4082f7:	push   r13
  4082f9:	push   r12
  4082fb:	mov    r13,rdi
  4082fe:	push   rbp
  4082ff:	push   rbx
  408300:	mov    rbp,rsi
  408303:	mov    ebx,0x64
  408308:	lea    r12,[rdi+0x20]
  40830c:	sub    rsp,0x18
  408310:	movsxd r8,DWORD PTR [rsi+0x8]
  408314:	mov    QWORD PTR [rsp+0x8],rcx
  408319:	jmp    408351 <__sprintf_chk@plt+0x7061>
  40831b:	nop    DWORD PTR [rax+rax*1+0x0]
  408320:	mov    rsi,QWORD PTR [rbp+0x0]
  408324:	xor    ecx,ecx
  408326:	mov    edx,r8d
  408329:	mov    rdi,r12
  40832c:	call   4028b0 <__sprintf_chk@plt+0x15c0>
  408331:	mov    edx,DWORD PTR [rax+0x8]
  408334:	test   edx,edx
  408336:	je     4083d0 <__sprintf_chk@plt+0x70e0>
  40833c:	movsxd r8,edx
  40833f:	cmp    r8d,0x6
  408343:	je     4083a4 <__sprintf_chk@plt+0x70b4>
  408345:	sub    ebx,0x1
  408348:	mov    rbp,rax
  40834b:	je     408418 <__sprintf_chk@plt+0x7128>
  408351:	cmp    r8d,0x5
  408355:	jne    408320 <__sprintf_chk@plt+0x7030>
  408357:	mov    r15,QWORD PTR [rbp+0x0]
  40835b:	mov    rsi,r14
  40835e:	mov    rdi,r15
  408361:	call   402620 <__sprintf_chk@plt+0x1330>
  408366:	mov    r8,rax
  408369:	mov    eax,DWORD PTR [rax+0x8]
  40836c:	test   eax,eax
  40836e:	jne    4083f7 <__sprintf_chk@plt+0x7107>
  408374:	mov    rdi,QWORD PTR [r15+0x10]
  408378:	test   rdi,rdi
  40837b:	je     4083f7 <__sprintf_chk@plt+0x7107>
  40837d:	test   BYTE PTR [rdi+0xa],0x1
  408381:	jne    4083f7 <__sprintf_chk@plt+0x7107>
  408383:	mov    rax,QWORD PTR [r13+0x20]
  408387:	xor    esi,esi
  408389:	mov    rdx,QWORD PTR [rax+0x128]
  408390:	call   4018c0 <__sprintf_chk@plt+0x5d0>
  408395:	test   rax,rax
  408398:	je     4083f3 <__sprintf_chk@plt+0x7103>
  40839a:	movsxd r8,DWORD PTR [rax+0x8]
  40839e:	cmp    r8d,0x6
  4083a2:	jne    408345 <__sprintf_chk@plt+0x7055>
  4083a4:	mov    rdx,QWORD PTR [rax]
  4083a7:	mov    rsi,QWORD PTR [rsp+0x8]
  4083ac:	add    rsp,0x18
  4083b0:	pop    rbx
  4083b1:	mov    r9,r14
  4083b4:	mov    r8,rbp
  4083b7:	mov    rdi,r13
  4083ba:	pop    rbp
  4083bb:	pop    r12
  4083bd:	pop    r13
  4083bf:	pop    r14
  4083c1:	pop    r15
  4083c3:	mov    ecx,0x6
  4083c8:	jmp    406740 <__sprintf_chk@plt+0x5450>
  4083cd:	nop    DWORD PTR [rax]
  4083d0:	lea    rax,[rip+0x149c9]        # 41cda0 <__sprintf_chk@plt+0x1bab0>
  4083d7:	lea    rdx,[rip+0xe624]        # 416a02 <__sprintf_chk@plt+0x15712>
  4083de:	lea    rsi,[rip+0xe2fe]        # 4166e3 <__sprintf_chk@plt+0x153f3>
  4083e5:	mov    rdi,r13
  4083e8:	mov    rcx,QWORD PTR [rax+r8*8]
  4083ec:	xor    eax,eax
  4083ee:	call   405730 <__sprintf_chk@plt+0x4440>
  4083f3:	mov    eax,DWORD PTR [r8+0x8]
  4083f7:	mov    rbx,QWORD PTR [rsp+0x8]
  4083fc:	mov    rdx,QWORD PTR [r8]
  4083ff:	mov    DWORD PTR [rbx+0x8],eax
  408402:	mov    QWORD PTR [rbx],rdx
  408405:	add    rsp,0x18
  408409:	pop    rbx
  40840a:	pop    rbp
  40840b:	pop    r12
  40840d:	pop    r13
  40840f:	pop    r14
  408411:	pop    r15
  408413:	ret    
  408414:	nop    DWORD PTR [rax+0x0]
  408418:	lea    rsi,[rip+0xe410]        # 41682f <__sprintf_chk@plt+0x1553f>
  40841f:	mov    rdi,r13
  408422:	xor    eax,eax
  408424:	call   405730 <__sprintf_chk@plt+0x4440>
  408429:	nop    DWORD PTR [rax+0x0]
  408430:	push   r12
  408432:	push   rbp
  408433:	mov    rbp,rdx
  408436:	push   rbx
  408437:	mov    rbx,rdi
  40843a:	sub    rsp,0x20
  40843e:	mov    rax,QWORD PTR fs:0x28
  408447:	mov    QWORD PTR [rsp+0x18],rax
  40844c:	xor    eax,eax
  40844e:	call   402b60 <__sprintf_chk@plt+0x1870>
  408453:	mov    rdi,rbp
  408456:	mov    r12,rax
  408459:	call   4010f0 <strlen@plt>
  40845e:	mov    rsi,rbp
  408461:	mov    rdx,rax
  408464:	mov    rdi,rbx
  408467:	call   405980 <__sprintf_chk@plt+0x4690>
  40846c:	mov    rcx,QWORD PTR [rbx+0x10]
  408470:	mov    rdx,rsp
  408473:	mov    rsi,r12
  408476:	mov    rdi,rbx
  408479:	mov    QWORD PTR [rsp],rax
  40847d:	mov    DWORD PTR [rsp+0x8],0x4
  408485:	call   4082f0 <__sprintf_chk@plt+0x7000>
  40848a:	add    QWORD PTR [rbx+0x10],0x10
  40848f:	mov    rax,QWORD PTR [rsp+0x18]
  408494:	xor    rax,QWORD PTR fs:0x28
  40849d:	jne    4084a8 <__sprintf_chk@plt+0x71b8>
  40849f:	add    rsp,0x20
  4084a3:	pop    rbx
  4084a4:	pop    rbp
  4084a5:	pop    r12
  4084a7:	ret    
  4084a8:	call   401100 <__stack_chk_fail@plt>
  4084ad:	nop    DWORD PTR [rax]
  4084b0:	push   rbx
  4084b1:	mov    rdx,QWORD PTR [rdi+0x18]
  4084b5:	mov    rbx,rdi
  4084b8:	mov    rax,QWORD PTR [rdi+0x10]
  4084bc:	cmp    rdx,rax
  4084bf:	jb     408508 <__sprintf_chk@plt+0x7218>
  4084c1:	mov    DWORD PTR [rax+0x8],0x0
  4084c8:	add    rax,0x10
  4084cc:	lea    rdx,[rip+0xe36d]        # 416840 <__sprintf_chk@plt+0x15550>
  4084d3:	mov    esi,0xffffffff
  4084d8:	mov    QWORD PTR [rbx+0x10],rax
  4084dc:	mov    rdi,rbx
  4084df:	call   408430 <__sprintf_chk@plt+0x7140>
  4084e4:	mov    rax,QWORD PTR [rbx+0x10]
  4084e8:	xor    edx,edx
  4084ea:	cmp    DWORD PTR [rax-0x8],0x6
  4084ee:	jne    4084fe <__sprintf_chk@plt+0x720e>
  4084f0:	mov    rax,QWORD PTR [rax-0x10]
  4084f4:	cmp    BYTE PTR [rax+0xa],0x0
  4084f8:	je     4084fe <__sprintf_chk@plt+0x720e>
  4084fa:	mov    rdx,QWORD PTR [rax+0x20]
  4084fe:	mov    rdi,rbx
  408501:	pop    rbx
  408502:	jmp    rdx
  408504:	nop    DWORD PTR [rax+0x0]
  408508:	mov    ecx,DWORD PTR [rdx+0x8]
  40850b:	cmp    ecx,0x7
  40850e:	je     408535 <__sprintf_chk@plt+0x7245>
  408510:	cmp    ecx,0x8
  408513:	jne    408530 <__sprintf_chk@plt+0x7240>
  408515:	mov    rdx,QWORD PTR [rdx]
  408518:	mov    rcx,QWORD PTR [rdx+0x78]
  40851c:	mov    edx,DWORD PTR [rdx+0x80]
  408522:	mov    QWORD PTR [rax],rcx
  408525:	mov    DWORD PTR [rax+0x8],edx
  408528:	jmp    4084c8 <__sprintf_chk@plt+0x71d8>
  40852a:	nop    WORD PTR [rax+rax*1+0x0]
  408530:	cmp    ecx,0x6
  408533:	jne    4084c1 <__sprintf_chk@plt+0x71d1>
  408535:	mov    rdx,QWORD PTR [rdx]
  408538:	mov    rdx,QWORD PTR [rdx+0x18]
  40853c:	mov    DWORD PTR [rax+0x8],0x5
  408543:	mov    QWORD PTR [rax],rdx
  408546:	mov    rax,QWORD PTR [rbx+0x10]
  40854a:	jmp    4084c8 <__sprintf_chk@plt+0x71d8>
  40854f:	nop
  408550:	lea    rcx,[rip+0x14849]        # 41cda0 <__sprintf_chk@plt+0x1bab0>
  408557:	movsxd rax,edx
  40855a:	movsxd rsi,esi
  40855d:	sub    rsp,0x8
  408561:	mov    rdx,QWORD PTR [rcx+rsi*8]
  408565:	mov    rcx,QWORD PTR [rcx+rax*8]
  408569:	movzx  eax,BYTE PTR [rcx+0x2]
  40856d:	cmp    BYTE PTR [rdx+0x2],al
  408570:	je     408580 <__sprintf_chk@plt+0x7290>
  408572:	lea    rsi,[rip+0xe2cf]        # 416848 <__sprintf_chk@plt+0x15558>
  408579:	xor    eax,eax
  40857b:	call   405730 <__sprintf_chk@plt+0x4440>
  408580:	lea    rsi,[rip+0xeaf1]        # 417078 <__sprintf_chk@plt+0x15d88>
  408587:	xor    eax,eax
  408589:	call   405730 <__sprintf_chk@plt+0x4440>
  40858e:	xchg   ax,ax
  408590:	push   r12
  408592:	push   rbp
  408593:	mov    rbp,rdx
  408596:	push   rbx
  408597:	mov    rbx,rsi
  40859a:	mov    edx,DWORD PTR [rdx+0x8]
  40859d:	mov    esi,DWORD PTR [rsi+0x8]
  4085a0:	mov    r12,rdi
  4085a3:	cmp    esi,edx
  4085a5:	jne    4085e0 <__sprintf_chk@plt+0x72f0>
  4085a7:	cmp    esi,0x3
  4085aa:	je     4085f0 <__sprintf_chk@plt+0x7300>
  4085ac:	cmp    esi,0x4
  4085af:	je     408608 <__sprintf_chk@plt+0x7318>
  4085b1:	mov    ecx,0xd
  4085b6:	mov    rdx,rbp
  4085b9:	mov    rsi,rbx
  4085bc:	call   406850 <__sprintf_chk@plt+0x5560>
  4085c1:	cmp    eax,0xffffffff
  4085c4:	je     4085d0 <__sprintf_chk@plt+0x72e0>
  4085c6:	pop    rbx
  4085c7:	pop    rbp
  4085c8:	pop    r12
  4085ca:	ret    
  4085cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4085d0:	mov    edx,DWORD PTR [rbp+0x8]
  4085d3:	mov    esi,DWORD PTR [rbx+0x8]
  4085d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4085e0:	mov    rdi,r12
  4085e3:	call   408550 <__sprintf_chk@plt+0x7260>
  4085e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4085f0:	vmovsd xmm0,QWORD PTR [rbp+0x0]
  4085f5:	xor    eax,eax
  4085f7:	vucomisd xmm0,QWORD PTR [rbx]
  4085fb:	pop    rbx
  4085fc:	pop    rbp
  4085fd:	pop    r12
  4085ff:	seta   al
  408602:	ret    
  408603:	nop    DWORD PTR [rax+rax*1+0x0]
  408608:	mov    rsi,QWORD PTR [rbp+0x0]
  40860c:	mov    rdi,QWORD PTR [rbx]
  40860f:	call   4020a0 <__sprintf_chk@plt+0xdb0>
  408614:	shr    eax,0x1f
  408617:	jmp    4085c6 <__sprintf_chk@plt+0x72d6>
  408619:	nop    DWORD PTR [rax+0x0]
  408620:	push   rbp
  408621:	push   rbx
  408622:	mov    ebx,r8d
  408625:	mov    eax,ebx
  408627:	mov    rbp,rdx
  40862a:	mov    r10,rcx
  40862d:	sub    rsp,0x8
  408631:	shr    eax,0x1f
  408634:	mov    r8d,DWORD PTR [rdx]
  408637:	add    eax,ebx
  408639:	sar    eax,1
  40863b:	cmp    r8d,eax
  40863e:	jl     408680 <__sprintf_chk@plt+0x7390>
  408640:	cmp    r8d,ebx
  408643:	jge    408698 <__sprintf_chk@plt+0x73a8>
  408645:	xor    edx,edx
  408647:	mov    rax,0xfffffffffffffffd
  40864e:	lea    ecx,[rbx+0x1]
  408651:	div    r10
  408654:	movsxd rcx,ecx
  408657:	cmp    rcx,rax
  40865a:	ja     4086a8 <__sprintf_chk@plt+0x73b8>
  40865c:	movsxd rcx,ebx
  40865f:	movsxd rdx,r8d
  408662:	imul   rcx,r10
  408666:	imul   rdx,r10
  40866a:	call   403450 <__sprintf_chk@plt+0x2160>
  40866f:	mov    DWORD PTR [rbp+0x0],ebx
  408672:	add    rsp,0x8
  408676:	pop    rbx
  408677:	pop    rbp
  408678:	ret    
  408679:	nop    DWORD PTR [rax+0x0]
  408680:	lea    ebx,[r8+r8*1]
  408684:	mov    eax,0x4
  408689:	cmp    ebx,0x4
  40868c:	cmovl  ebx,eax
  40868f:	jmp    408645 <__sprintf_chk@plt+0x7355>
  408691:	nop    DWORD PTR [rax+0x0]
  408698:	mov    rsi,r9
  40869b:	xor    eax,eax
  40869d:	call   405730 <__sprintf_chk@plt+0x4440>
  4086a2:	nop    WORD PTR [rax+rax*1+0x0]
  4086a8:	lea    rsi,[rip+0xe9a1]        # 417050 <__sprintf_chk@plt+0x15d60>
  4086af:	xor    eax,eax
  4086b1:	call   405730 <__sprintf_chk@plt+0x4440>
  4086b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4086c0:	push   r14
  4086c2:	push   r13
  4086c4:	push   r12
  4086c6:	push   rbp
  4086c7:	mov    r12,rdx
  4086ca:	push   rbx
  4086cb:	mov    rbp,QWORD PTR [rdi+0x20]
  4086cf:	mov    rdx,rsi
  4086d2:	mov    rsi,QWORD PTR [rdi+0x8]
  4086d6:	mov    rbx,rdi
  4086d9:	mov    rdi,rbp
  4086dc:	call   407840 <__sprintf_chk@plt+0x6550>
  4086e1:	cmp    DWORD PTR [rax+0x8],0x3
  4086e5:	je     4087f8 <__sprintf_chk@plt+0x7508>
  4086eb:	mov    r13,QWORD PTR [rbx]
  4086ee:	mov    ecx,DWORD PTR [rbx+0x40]
  4086f1:	vxorpd xmm0,xmm0,xmm0
  4086f5:	mov    r14d,DWORD PTR [r13+0x4c]
  4086f9:	mov    DWORD PTR [rax+0x8],0x3
  408700:	vcvtsi2sd xmm0,xmm0,ecx
  408704:	vmovsd QWORD PTR [rax],xmm0
  408708:	cmp    r14d,ecx
  40870b:	jle    408780 <__sprintf_chk@plt+0x7490>
  40870d:	mov    rdx,QWORD PTR [r13+0x10]
  408711:	movsxd rax,ecx
  408714:	shl    rax,0x4
  408718:	add    rdx,rax
  40871b:	mov    rax,QWORD PTR [r12]
  40871f:	mov    QWORD PTR [rdx],rax
  408722:	mov    eax,DWORD PTR [r12+0x8]
  408727:	mov    DWORD PTR [rdx+0x8],eax
  40872a:	cmp    DWORD PTR [r12+0x8],0x3
  408730:	jle    408766 <__sprintf_chk@plt+0x7476>
  408732:	mov    rsi,QWORD PTR [r12]
  408736:	test   BYTE PTR [rsi+0x9],0x3
  40873a:	je     408766 <__sprintf_chk@plt+0x7476>
  40873c:	movzx  eax,BYTE PTR [r13+0x9]
  408741:	test   al,0x4
  408743:	je     408766 <__sprintf_chk@plt+0x7476>
  408745:	mov    rdi,QWORD PTR [rbp+0x20]
  408749:	cmp    BYTE PTR [rdi+0x21],0x1
  40874d:	je     408807 <__sprintf_chk@plt+0x7517>
  408753:	movzx  edx,BYTE PTR [rdi+0x20]
  408757:	and    eax,0xfffffff8
  40875a:	and    edx,0x3
  40875d:	or     eax,edx
  40875f:	mov    BYTE PTR [r13+0x9],al
  408763:	mov    ecx,DWORD PTR [rbx+0x40]
  408766:	lea    eax,[rcx+0x1]
  408769:	mov    DWORD PTR [rbx+0x40],eax
  40876c:	mov    eax,ecx
  40876e:	pop    rbx
  40876f:	pop    rbp
  408770:	pop    r12
  408772:	pop    r13
  408774:	pop    r14
  408776:	ret    
  408777:	nop    WORD PTR [rax+rax*1+0x0]
  408780:	mov    rsi,QWORD PTR [r13+0x10]
  408784:	lea    rdx,[r13+0x4c]
  408788:	lea    r9,[rip+0xe0d7]        # 416866 <__sprintf_chk@plt+0x15576>
  40878f:	mov    r8d,0x3ffff
  408795:	mov    ecx,0x10
  40879a:	mov    rdi,rbp
  40879d:	call   408620 <__sprintf_chk@plt+0x7330>
  4087a2:	mov    rsi,rax
  4087a5:	mov    QWORD PTR [r13+0x10],rax
  4087a9:	mov    eax,DWORD PTR [r13+0x4c]
  4087ad:	cmp    r14d,eax
  4087b0:	jge    4087e7 <__sprintf_chk@plt+0x74f7>
  4087b2:	sub    eax,0x1
  4087b5:	movsxd rcx,r14d
  4087b8:	sub    eax,r14d
  4087bb:	mov    rdx,rcx
  4087be:	add    rax,rcx
  4087c1:	shl    rdx,0x4
  4087c5:	shl    rax,0x4
  4087c9:	lea    rdx,[rsi+rdx*1+0x8]
  4087ce:	lea    rcx,[rsi+rax*1+0x18]
  4087d3:	nop    DWORD PTR [rax+rax*1+0x0]
  4087d8:	mov    DWORD PTR [rdx],0x0
  4087de:	add    rdx,0x10
  4087e2:	cmp    rdx,rcx
  4087e5:	jne    4087d8 <__sprintf_chk@plt+0x74e8>
  4087e7:	mov    ecx,DWORD PTR [rbx+0x40]
  4087ea:	mov    rdx,rsi
  4087ed:	jmp    408711 <__sprintf_chk@plt+0x7421>
  4087f2:	nop    WORD PTR [rax+rax*1+0x0]
  4087f8:	pop    rbx
  4087f9:	vcvttsd2si ecx,QWORD PTR [rax]
  4087fd:	pop    rbp
  4087fe:	mov    eax,ecx
  408800:	pop    r12
  408802:	pop    r13
  408804:	pop    r14
  408806:	ret    
  408807:	call   401a50 <__sprintf_chk@plt+0x760>
  40880c:	mov    ecx,DWORD PTR [rbx+0x40]
  40880f:	jmp    408766 <__sprintf_chk@plt+0x7476>
  408814:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40881f:	nop
  408820:	push   r15
  408822:	push   r14
  408824:	lea    r14,[rdi+0x20]
  408828:	push   r13
  40882a:	push   r12
  40882c:	mov    r12,rdi
  40882f:	push   rbp
  408830:	push   rbx
  408831:	mov    rbp,rsi
  408834:	mov    ebx,0x64
  408839:	sub    rsp,0x48
  40883d:	mov    r15d,DWORD PTR [rsi+0x8]
  408841:	mov    rax,QWORD PTR fs:0x28
  40884a:	mov    QWORD PTR [rsp+0x38],rax
  40884f:	xor    eax,eax
  408851:	lea    r13,[rsp+0x20]
  408856:	mov    QWORD PTR [rsp+0x8],rdx
  40885b:	mov    QWORD PTR [rsp+0x18],rcx
  408860:	cmp    r15d,0x5
  408864:	je     4088c0 <__sprintf_chk@plt+0x75d0>
  408866:	mov    rsi,QWORD PTR [rbp+0x0]
  40886a:	mov    edx,r15d
  40886d:	mov    ecx,0x1
  408872:	mov    rdi,r14
  408875:	call   4028b0 <__sprintf_chk@plt+0x15c0>
  40887a:	mov    edx,DWORD PTR [rax+0x8]
  40887d:	test   edx,edx
  40887f:	je     408918 <__sprintf_chk@plt+0x7628>
  408885:	mov    r15d,edx
  408888:	cmp    r15d,0x6
  40888c:	mov    rax,QWORD PTR [rax]
  40888f:	je     4089b8 <__sprintf_chk@plt+0x76c8>
  408895:	sub    ebx,0x1
  408898:	mov    QWORD PTR [rsp+0x20],rax
  40889d:	mov    DWORD PTR [rsp+0x28],r15d
  4088a2:	mov    rbp,r13
  4088a5:	jne    408860 <__sprintf_chk@plt+0x7570>
  4088a7:	lea    rsi,[rip+0xdfd0]        # 41687e <__sprintf_chk@plt+0x1558e>
  4088ae:	mov    rdi,r12
  4088b1:	xor    eax,eax
  4088b3:	call   405730 <__sprintf_chk@plt+0x4440>
  4088b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4088c0:	mov    r15,QWORD PTR [rbp+0x0]
  4088c4:	mov    rdx,QWORD PTR [rsp+0x8]
  4088c9:	mov    rdi,r12
  4088cc:	mov    rsi,r15
  4088cf:	call   407840 <__sprintf_chk@plt+0x6550>
  4088d4:	mov    QWORD PTR [rsp+0x10],rax
  4088d9:	mov    eax,DWORD PTR [rax+0x8]
  4088dc:	test   eax,eax
  4088de:	jne    408940 <__sprintf_chk@plt+0x7650>
  4088e0:	mov    rdi,QWORD PTR [r15+0x10]
  4088e4:	test   rdi,rdi
  4088e7:	je     408940 <__sprintf_chk@plt+0x7650>
  4088e9:	test   BYTE PTR [rdi+0xa],0x2
  4088ed:	jne    408940 <__sprintf_chk@plt+0x7650>
  4088ef:	mov    rax,QWORD PTR [r12+0x20]
  4088f4:	mov    esi,0x1
  4088f9:	mov    rdx,QWORD PTR [rax+0x130]
  408900:	call   4018c0 <__sprintf_chk@plt+0x5d0>
  408905:	test   rax,rax
  408908:	je     408940 <__sprintf_chk@plt+0x7650>
  40890a:	mov    r15d,DWORD PTR [rax+0x8]
  40890e:	jmp    408888 <__sprintf_chk@plt+0x7598>
  408913:	nop    DWORD PTR [rax+rax*1+0x0]
  408918:	lea    rax,[rip+0x14481]        # 41cda0 <__sprintf_chk@plt+0x1bab0>
  40891f:	movsxd r8,r15d
  408922:	lea    rdx,[rip+0xe0d9]        # 416a02 <__sprintf_chk@plt+0x15712>
  408929:	lea    rsi,[rip+0xddb3]        # 4166e3 <__sprintf_chk@plt+0x153f3>
  408930:	mov    rdi,r12
  408933:	mov    rcx,QWORD PTR [rax+r8*8]
  408937:	xor    eax,eax
  408939:	call   405730 <__sprintf_chk@plt+0x4440>
  40893e:	xchg   ax,ax
  408940:	mov    rbx,QWORD PTR [rsp+0x18]
  408945:	mov    rcx,QWORD PTR [rsp+0x10]
  40894a:	mov    rax,QWORD PTR [rbx]
  40894d:	mov    QWORD PTR [rcx],rax
  408950:	mov    eax,DWORD PTR [rbx+0x8]
  408953:	mov    DWORD PTR [rcx+0x8],eax
  408956:	mov    BYTE PTR [r15+0xa],0x0
  40895b:	cmp    DWORD PTR [rbx+0x8],0x3
  40895f:	jle    408990 <__sprintf_chk@plt+0x76a0>
  408961:	mov    rax,QWORD PTR [rsp+0x18]
  408966:	mov    rax,QWORD PTR [rax]
  408969:	test   BYTE PTR [rax+0x9],0x3
  40896d:	je     408990 <__sprintf_chk@plt+0x76a0>
  40896f:	movzx  eax,BYTE PTR [r15+0x9]
  408974:	test   al,0x4
  408976:	je     408990 <__sprintf_chk@plt+0x76a0>
  408978:	mov    rdx,QWORD PTR [r12+0x20]
  40897d:	and    eax,0xfffffffb
  408980:	mov    BYTE PTR [r15+0x9],al
  408984:	mov    rax,QWORD PTR [rdx+0x40]
  408988:	mov    QWORD PTR [r15+0x30],rax
  40898c:	mov    QWORD PTR [rdx+0x40],r15
  408990:	mov    rax,QWORD PTR [rsp+0x38]
  408995:	xor    rax,QWORD PTR fs:0x28
  40899e:	jne    408a4c <__sprintf_chk@plt+0x775c>
  4089a4:	add    rsp,0x48
  4089a8:	pop    rbx
  4089a9:	pop    rbp
  4089aa:	pop    r12
  4089ac:	pop    r13
  4089ae:	pop    r14
  4089b0:	pop    r15
  4089b2:	ret    
  4089b3:	nop    DWORD PTR [rax+rax*1+0x0]
  4089b8:	mov    rsi,QWORD PTR [r12+0x10]
  4089bd:	mov    rbx,QWORD PTR [rsp+0x8]
  4089c2:	mov    QWORD PTR [rsi],rax
  4089c5:	mov    rax,QWORD PTR [rbp+0x0]
  4089c9:	mov    DWORD PTR [rsi+0x8],0x6
  4089d0:	mov    QWORD PTR [rsi+0x10],rax
  4089d4:	mov    eax,DWORD PTR [rbp+0x8]
  4089d7:	mov    DWORD PTR [rsi+0x18],eax
  4089da:	mov    rax,QWORD PTR [rbx]
  4089dd:	mov    QWORD PTR [rsi+0x20],rax
  4089e1:	mov    eax,DWORD PTR [rbx+0x8]
  4089e4:	mov    rbx,QWORD PTR [rsp+0x18]
  4089e9:	mov    DWORD PTR [rsi+0x28],eax
  4089ec:	mov    rax,QWORD PTR [rbx]
  4089ef:	mov    QWORD PTR [rsi+0x30],rax
  4089f3:	mov    eax,DWORD PTR [rbx+0x8]
  4089f6:	mov    DWORD PTR [rsi+0x38],eax
  4089f9:	mov    rax,QWORD PTR [r12+0x38]
  4089fe:	sub    rax,rsi
  408a01:	cmp    rax,0x40
  408a05:	jle    408a38 <__sprintf_chk@plt+0x7748>
  408a07:	lea    rax,[rsi+0x40]
  408a0b:	mov    QWORD PTR [r12+0x10],rax
  408a10:	mov    rax,QWORD PTR [rsp+0x38]
  408a15:	xor    rax,QWORD PTR fs:0x28
  408a1e:	jne    408a4c <__sprintf_chk@plt+0x775c>
  408a20:	add    rsp,0x48
  408a24:	mov    rdi,r12
  408a27:	xor    edx,edx
  408a29:	pop    rbx
  408a2a:	pop    rbp
  408a2b:	pop    r12
  408a2d:	pop    r13
  408a2f:	pop    r14
  408a31:	pop    r15
  408a33:	jmp    403e50 <__sprintf_chk@plt+0x2b60>
  408a38:	mov    esi,0x4
  408a3d:	mov    rdi,r12
  408a40:	call   406720 <__sprintf_chk@plt+0x5430>
  408a45:	mov    rsi,QWORD PTR [r12+0x10]
  408a4a:	jmp    408a07 <__sprintf_chk@plt+0x7717>
  408a4c:	call   401100 <__stack_chk_fail@plt>
  408a51:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  408a5c:	nop    DWORD PTR [rax+0x0]
  408a60:	push   r12
  408a62:	push   rbp
  408a63:	mov    rbp,rdx
  408a66:	push   rbx
  408a67:	mov    rbx,rdi
  408a6a:	sub    rsp,0x20
  408a6e:	mov    rax,QWORD PTR fs:0x28
  408a77:	mov    QWORD PTR [rsp+0x18],rax
  408a7c:	xor    eax,eax
  408a7e:	call   402b60 <__sprintf_chk@plt+0x1870>
  408a83:	mov    rdi,rbp
  408a86:	mov    r12,rax
  408a89:	call   4010f0 <strlen@plt>
  408a8e:	mov    rsi,rbp
  408a91:	mov    rdx,rax
  408a94:	mov    rdi,rbx
  408a97:	call   405980 <__sprintf_chk@plt+0x4690>
  408a9c:	mov    QWORD PTR [rsp],rax
  408aa0:	mov    rax,QWORD PTR [rbx+0x10]
  408aa4:	mov    rdx,rsp
  408aa7:	mov    rsi,r12
  408aaa:	mov    rdi,rbx
  408aad:	mov    DWORD PTR [rsp+0x8],0x4
  408ab5:	lea    rcx,[rax-0x10]
  408ab9:	call   408820 <__sprintf_chk@plt+0x7530>
  408abe:	sub    QWORD PTR [rbx+0x10],0x10
  408ac3:	mov    rax,QWORD PTR [rsp+0x18]
  408ac8:	xor    rax,QWORD PTR fs:0x28
  408ad1:	jne    408adc <__sprintf_chk@plt+0x77ec>
  408ad3:	add    rsp,0x20
  408ad7:	pop    rbx
  408ad8:	pop    rbp
  408ad9:	pop    r12
  408adb:	ret    
  408adc:	call   401100 <__stack_chk_fail@plt>
  408ae1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  408aec:	nop    DWORD PTR [rax+0x0]
  408af0:	push   r14
  408af2:	push   r13
  408af4:	push   r12
  408af6:	push   rbp
  408af7:	push   rbx
  408af8:	mov    rbp,QWORD PTR [rdi+0x20]
  408afc:	mov    rax,QWORD PTR [rbp+0x50]
  408b00:	mov    r14,QWORD PTR [rax]
  408b03:	cmp    rax,r14
  408b06:	je     408bd0 <__sprintf_chk@plt+0x78e0>
  408b0c:	mov    rdx,QWORD PTR [r14]
  408b0f:	mov    QWORD PTR [rax],rdx
  408b12:	mov    rax,QWORD PTR [rbp+0xb0]
  408b19:	mov    rdx,QWORD PTR [rax]
  408b1c:	mov    QWORD PTR [r14],rdx
  408b1f:	mov    QWORD PTR [rax],r14
  408b22:	movzx  eax,BYTE PTR [r14+0x9]
  408b27:	movzx  edx,BYTE PTR [rbp+0x20]
  408b2b:	and    eax,0xfffffff8
  408b2e:	and    edx,0x3
  408b31:	or     eax,edx
  408b33:	mov    BYTE PTR [r14+0x9],al
  408b37:	mov    rax,QWORD PTR [r14+0x10]
  408b3b:	test   rax,rax
  408b3e:	je     408b46 <__sprintf_chk@plt+0x7856>
  408b40:	test   BYTE PTR [rax+0xa],0x4
  408b44:	je     408b50 <__sprintf_chk@plt+0x7860>
  408b46:	pop    rbx
  408b47:	pop    rbp
  408b48:	pop    r12
  408b4a:	pop    r13
  408b4c:	pop    r14
  408b4e:	ret    
  408b4f:	nop
  408b50:	mov    rdx,QWORD PTR [rdi+0x20]
  408b54:	mov    rbx,rdi
  408b57:	mov    esi,0x2
  408b5c:	mov    rdi,rax
  408b5f:	mov    rdx,QWORD PTR [rdx+0x138]
  408b66:	call   4018c0 <__sprintf_chk@plt+0x5d0>
  408b6b:	test   rax,rax
  408b6e:	je     408b46 <__sprintf_chk@plt+0x7856>
  408b70:	mov    r12,QWORD PTR [rbp+0x70]
  408b74:	movzx  r13d,BYTE PTR [rbx+0x65]
  408b79:	mov    rdi,rbx
  408b7c:	mov    BYTE PTR [rbx+0x65],0x0
  408b80:	mov    rcx,QWORD PTR [rbp+0x78]
  408b84:	lea    rdx,[rcx+rcx*1]
  408b88:	mov    rcx,QWORD PTR [rax]
  408b8b:	mov    eax,DWORD PTR [rax+0x8]
  408b8e:	mov    QWORD PTR [rbp+0x70],rdx
  408b92:	mov    rdx,QWORD PTR [rbx+0x10]
  408b96:	mov    QWORD PTR [rdx+0x10],r14
  408b9a:	mov    rsi,QWORD PTR [rbx+0x10]
  408b9e:	mov    DWORD PTR [rdx+0x8],eax
  408ba1:	mov    QWORD PTR [rdx],rcx
  408ba4:	mov    DWORD PTR [rdx+0x18],0x7
  408bab:	xor    edx,edx
  408bad:	lea    rax,[rsi+0x20]
  408bb1:	mov    QWORD PTR [rbx+0x10],rax
  408bb5:	call   403e50 <__sprintf_chk@plt+0x2b60>
  408bba:	mov    BYTE PTR [rbx+0x65],r13b
  408bbe:	mov    QWORD PTR [rbp+0x70],r12
  408bc2:	pop    rbx
  408bc3:	pop    rbp
  408bc4:	pop    r12
  408bc6:	pop    r13
  408bc8:	pop    r14
  408bca:	ret    
  408bcb:	nop    DWORD PTR [rax+rax*1+0x0]
  408bd0:	mov    QWORD PTR [rbp+0x50],0x0
  408bd8:	jmp    408b12 <__sprintf_chk@plt+0x7822>
  408bdd:	nop    DWORD PTR [rax]
  408be0:	push   r15
  408be2:	push   r14
  408be4:	push   r13
  408be6:	push   r12
  408be8:	lea    r13,[rip+0xd649]        # 416238 <__sprintf_chk@plt+0x14f48>
  408bef:	push   rbp
  408bf0:	push   rbx
  408bf1:	mov    r12,rdi
  408bf4:	sub    rsp,0x28
  408bf8:	mov    rbp,QWORD PTR [rdi+0x20]
  408bfc:	mov    eax,DWORD PTR [rbp+0x94]
  408c02:	mov    r15,rbp
  408c05:	lea    eax,[rax+rax*4]
  408c08:	lea    ebx,[rax+rax*1]
  408c0b:	movabs rax,0x7ffffffffffffffe
  408c15:	test   ebx,ebx
  408c17:	cmove  rbx,rax
  408c1b:	mov    rax,QWORD PTR [rbp+0x78]
  408c1f:	add    rax,QWORD PTR [rbp+0x88]
  408c26:	sub    rax,QWORD PTR [rbp+0x70]
  408c2a:	mov    QWORD PTR [rbp+0x88],rax
  408c31:	lea    rax,[rdi+0x20]
  408c35:	mov    QWORD PTR [rsp+0x10],rax
  408c3a:	nop    WORD PTR [rax+rax*1+0x0]
  408c40:	cmp    BYTE PTR [r15+0x21],0x4
  408c45:	ja     408df0 <__sprintf_chk@plt+0x7b00>
  408c4b:	movzx  eax,BYTE PTR [r15+0x21]
  408c50:	movsxd rax,DWORD PTR [r13+rax*4+0x0]
  408c55:	add    rax,r13
  408c58:	jmp    rax
  408c5a:	nop    WORD PTR [rax+rax*1+0x0]
  408c60:	mov    rsi,QWORD PTR [r15+0x30]
  408c64:	mov    edx,0x28
  408c69:	mov    rdi,r12
  408c6c:	mov    r14,QWORD PTR [r15+0x78]
  408c70:	call   403690 <__sprintf_chk@plt+0x23a0>
  408c75:	cmp    QWORD PTR [rax],0x0
  408c79:	mov    QWORD PTR [r15+0x30],rax
  408c7d:	je     4091f4 <__sprintf_chk@plt+0x7f04>
  408c83:	mov    rax,QWORD PTR [r15+0x78]
  408c87:	add    rax,QWORD PTR [r15+0x80]
  408c8e:	sub    rax,r14
  408c91:	mov    QWORD PTR [r15+0x80],rax
  408c98:	mov    eax,0x190
  408c9d:	sub    rbx,rax
  408ca0:	cmp    BYTE PTR [rbp+0x21],0x0
  408ca4:	je     408d17 <__sprintf_chk@plt+0x7a27>
  408ca6:	test   rbx,rbx
  408ca9:	jle    408e68 <__sprintf_chk@plt+0x7b78>
  408caf:	mov    r15,QWORD PTR [r12+0x20]
  408cb4:	jmp    408c40 <__sprintf_chk@plt+0x7950>
  408cb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408cc0:	movsxd rax,DWORD PTR [r15+0x24]
  408cc4:	mov    rdx,QWORD PTR [r15]
  408cc7:	mov    rdi,r12
  408cca:	mov    r14,QWORD PTR [r15+0x78]
  408cce:	lea    ecx,[rax+0x1]
  408cd1:	lea    rsi,[rdx+rax*8]
  408cd5:	mov    rdx,0xfffffffffffffffd
  408cdc:	mov    DWORD PTR [r15+0x24],ecx
  408ce0:	call   403690 <__sprintf_chk@plt+0x23a0>
  408ce5:	mov    eax,DWORD PTR [r15+0xc]
  408ce9:	cmp    DWORD PTR [r15+0x24],eax
  408ced:	jl     408cf4 <__sprintf_chk@plt+0x7a04>
  408cef:	mov    BYTE PTR [r15+0x21],0x3
  408cf4:	mov    rax,QWORD PTR [r15+0x78]
  408cf8:	add    rax,QWORD PTR [r15+0x80]
  408cff:	sub    rax,r14
  408d02:	mov    QWORD PTR [r15+0x80],rax
  408d09:	mov    eax,0xa
  408d0e:	sub    rbx,rax
  408d11:	cmp    BYTE PTR [rbp+0x21],0x0
  408d15:	jne    408ca6 <__sprintf_chk@plt+0x79b6>
  408d17:	mov    eax,0x2
  408d1c:	shrx   rdx,QWORD PTR [rbp+0x80],rax
  408d25:	movabs rcx,0x28f5c28f5c28f5c3
  408d2f:	mov    rax,rdx
  408d32:	mul    rcx
  408d35:	movsxd rax,DWORD PTR [rbp+0x90]
  408d3c:	shr    rdx,0x2
  408d40:	imul   rdx,rax
  408d44:	mov    QWORD PTR [rbp+0x70],rdx
  408d48:	add    rsp,0x28
  408d4c:	pop    rbx
  408d4d:	pop    rbp
  408d4e:	pop    r12
  408d50:	pop    r13
  408d52:	pop    r14
  408d54:	pop    r15
  408d56:	ret    
  408d57:	nop    WORD PTR [rax+rax*1+0x0]
  408d60:	cmp    QWORD PTR [r15+0x38],0x0
  408d65:	je     408e98 <__sprintf_chk@plt+0x7ba8>
  408d6b:	mov    rdi,r15
  408d6e:	call   406050 <__sprintf_chk@plt+0x4d60>
  408d73:	jmp    408c9d <__sprintf_chk@plt+0x79ad>
  408d78:	nop    DWORD PTR [rax+rax*1+0x0]
  408d80:	mov    rsi,QWORD PTR [r15+0xb0]
  408d87:	mov    QWORD PTR [r15+0x38],0x0
  408d8f:	mov    QWORD PTR [r15+0x40],0x0
  408d97:	mov    QWORD PTR [r15+0x48],0x0
  408d9f:	test   BYTE PTR [rsi+0x9],0x3
  408da3:	jne    408e50 <__sprintf_chk@plt+0x7b60>
  408da9:	cmp    DWORD PTR [rsi+0x80],0x3
  408db0:	jle    408dc0 <__sprintf_chk@plt+0x7ad0>
  408db2:	mov    rsi,QWORD PTR [rsi+0x78]
  408db6:	test   BYTE PTR [rsi+0x9],0x3
  408dba:	jne    4091a6 <__sprintf_chk@plt+0x7eb6>
  408dc0:	mov    rax,QWORD PTR [r12+0x20]
  408dc5:	cmp    DWORD PTR [rax+0xa8],0x3
  408dcc:	jle    408de3 <__sprintf_chk@plt+0x7af3>
  408dce:	mov    rsi,QWORD PTR [rax+0xa0]
  408dd5:	test   BYTE PTR [rsi+0x9],0x3
  408dd9:	je     408de3 <__sprintf_chk@plt+0x7af3>
  408ddb:	mov    rdi,r15
  408dde:	call   401a50 <__sprintf_chk@plt+0x760>
  408de3:	mov    rdi,r15
  408de6:	call   401b80 <__sprintf_chk@plt+0x890>
  408deb:	mov    BYTE PTR [r15+0x21],0x1
  408df0:	cmp    BYTE PTR [rbp+0x21],0x0
  408df4:	jne    408caf <__sprintf_chk@plt+0x79bf>
  408dfa:	jmp    408d17 <__sprintf_chk@plt+0x7a27>
  408dff:	nop
  408e00:	cmp    QWORD PTR [r15+0x50],0x0
  408e05:	je     408e38 <__sprintf_chk@plt+0x7b48>
  408e07:	mov    rdi,r12
  408e0a:	call   408af0 <__sprintf_chk@plt+0x7800>
  408e0f:	mov    rdx,QWORD PTR [r15+0x80]
  408e16:	mov    eax,0x64
  408e1b:	cmp    rdx,0x64
  408e1f:	jbe    408c9d <__sprintf_chk@plt+0x79ad>
  408e25:	sub    rdx,0x64
  408e29:	mov    QWORD PTR [r15+0x80],rdx
  408e30:	jmp    408c9d <__sprintf_chk@plt+0x79ad>
  408e35:	nop    DWORD PTR [rax]
  408e38:	mov    BYTE PTR [r15+0x21],0x0
  408e3d:	mov    QWORD PTR [r15+0x88],0x0
  408e48:	jmp    408df0 <__sprintf_chk@plt+0x7b00>
  408e4a:	nop    WORD PTR [rax+rax*1+0x0]
  408e50:	mov    rdi,r15
  408e53:	call   401a50 <__sprintf_chk@plt+0x760>
  408e58:	mov    rsi,QWORD PTR [r15+0xb0]
  408e5f:	jmp    408da9 <__sprintf_chk@plt+0x7ab9>
  408e64:	nop    DWORD PTR [rax+0x0]
  408e68:	mov    rax,QWORD PTR [rbp+0x88]
  408e6f:	cmp    rax,0x3ff
  408e75:	ja     4091b3 <__sprintf_chk@plt+0x7ec3>
  408e7b:	mov    rax,QWORD PTR [rbp+0x78]
  408e7f:	add    rax,0x400
  408e85:	mov    QWORD PTR [rbp+0x70],rax
  408e89:	add    rsp,0x28
  408e8d:	pop    rbx
  408e8e:	pop    rbp
  408e8f:	pop    r12
  408e91:	pop    r13
  408e93:	pop    r14
  408e95:	pop    r15
  408e97:	ret    
  408e98:	mov    rcx,QWORD PTR [r15+0xd8]
  408e9f:	lea    r8,[r15+0xb8]
  408ea6:	cmp    rcx,r8
  408ea9:	je     408f07 <__sprintf_chk@plt+0x7c17>
  408eab:	mov    r14,rcx
  408eae:	mov    QWORD PTR [rsp+0x8],r8
  408eb3:	nop    DWORD PTR [rax+rax*1+0x0]
  408eb8:	test   BYTE PTR [r14+0x9],0x7
  408ebd:	jne    408ee0 <__sprintf_chk@plt+0x7bf0>
  408ebf:	mov    rax,QWORD PTR [r14+0x10]
  408ec3:	cmp    DWORD PTR [rax+0x8],0x3
  408ec7:	jle    408ee0 <__sprintf_chk@plt+0x7bf0>
  408ec9:	mov    rsi,QWORD PTR [rax]
  408ecc:	test   BYTE PTR [rsi+0x9],0x3
  408ed0:	jne    4091d7 <__sprintf_chk@plt+0x7ee7>
  408ed6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408ee0:	mov    r14,QWORD PTR [r14+0x20]
  408ee4:	cmp    r14,QWORD PTR [rsp+0x8]
  408ee9:	jne    408eb8 <__sprintf_chk@plt+0x7bc8>
  408eeb:	cmp    QWORD PTR [r15+0x38],0x0
  408ef0:	je     408f07 <__sprintf_chk@plt+0x7c17>
  408ef2:	nop    WORD PTR [rax+rax*1+0x0]
  408ef8:	mov    rdi,r15
  408efb:	call   406050 <__sprintf_chk@plt+0x4d60>
  408f00:	cmp    QWORD PTR [r15+0x38],0x0
  408f05:	jne    408ef8 <__sprintf_chk@plt+0x7c08>
  408f07:	mov    rax,QWORD PTR [r15+0x48]
  408f0b:	mov    QWORD PTR [r15+0x48],0x0
  408f13:	mov    QWORD PTR [r15+0x38],rax
  408f17:	test   BYTE PTR [r12+0x9],0x3
  408f1d:	jne    4091e4 <__sprintf_chk@plt+0x7ef4>
  408f23:	mov    rdi,r15
  408f26:	call   401b80 <__sprintf_chk@plt+0x890>
  408f2b:	cmp    QWORD PTR [r15+0x38],0x0
  408f30:	je     408f47 <__sprintf_chk@plt+0x7c57>
  408f32:	nop    WORD PTR [rax+rax*1+0x0]
  408f38:	mov    rdi,r15
  408f3b:	call   406050 <__sprintf_chk@plt+0x4d60>
  408f40:	cmp    QWORD PTR [r15+0x38],0x0
  408f45:	jne    408f38 <__sprintf_chk@plt+0x7c48>
  408f47:	mov    rax,QWORD PTR [r15+0x40]
  408f4b:	mov    QWORD PTR [r15+0x40],0x0
  408f53:	test   rax,rax
  408f56:	mov    QWORD PTR [r15+0x38],rax
  408f5a:	je     408f6f <__sprintf_chk@plt+0x7c7f>
  408f5c:	nop    DWORD PTR [rax+0x0]
  408f60:	mov    rdi,r15
  408f63:	call   406050 <__sprintf_chk@plt+0x4d60>
  408f68:	cmp    QWORD PTR [r15+0x38],0x0
  408f6d:	jne    408f60 <__sprintf_chk@plt+0x7c70>
  408f6f:	mov    rdi,QWORD PTR [rsp+0x10]
  408f74:	xor    esi,esi
  408f76:	call   402930 <__sprintf_chk@plt+0x1640>
  408f7b:	mov    rcx,QWORD PTR [r15+0x50]
  408f7f:	mov    QWORD PTR [rsp+0x8],rax
  408f84:	test   rcx,rcx
  408f87:	mov    r14,rcx
  408f8a:	je     408fba <__sprintf_chk@plt+0x7cca>
  408f8c:	nop    DWORD PTR [rax+0x0]
  408f90:	mov    r14,QWORD PTR [r14]
  408f93:	movzx  edx,BYTE PTR [r15+0x20]
  408f98:	mov    rdi,r15
  408f9b:	movzx  eax,BYTE PTR [r14+0x9]
  408fa0:	mov    rsi,r14
  408fa3:	and    edx,0x3
  408fa6:	and    eax,0xfffffff8
  408fa9:	or     eax,edx
  408fab:	mov    BYTE PTR [r14+0x9],al
  408faf:	call   401a50 <__sprintf_chk@plt+0x760>
  408fb4:	cmp    r14,QWORD PTR [r15+0x50]
  408fb8:	jne    408f90 <__sprintf_chk@plt+0x7ca0>
  408fba:	xor    r14d,r14d
  408fbd:	cmp    QWORD PTR [r15+0x38],0x0
  408fc2:	je     408fda <__sprintf_chk@plt+0x7cea>
  408fc4:	nop    DWORD PTR [rax+0x0]
  408fc8:	mov    rdi,r15
  408fcb:	call   406050 <__sprintf_chk@plt+0x4d60>
  408fd0:	add    r14,rax
  408fd3:	cmp    QWORD PTR [r15+0x38],0x0
  408fd8:	jne    408fc8 <__sprintf_chk@plt+0x7cd8>
  408fda:	mov    rsi,QWORD PTR [r15+0x48]
  408fde:	mov    edi,0x1
  408fe3:	test   rsi,rsi
  408fe6:	je     409125 <__sprintf_chk@plt+0x7e35>
  408fec:	nop    DWORD PTR [rax+0x0]
  408ff0:	test   BYTE PTR [rsi+0x9],0x10
  408ff4:	je     409060 <__sprintf_chk@plt+0x7d70>
  408ff6:	movsxd r8,DWORD PTR [rsi+0x38]
  408ffa:	mov    edx,r8d
  408ffd:	mov    rax,r8
  409000:	sub    r8,rdx
  409003:	shl    rax,0x4
  409007:	shl    r8,0x4
  40900b:	sub    rax,0x10
  40900f:	sub    r8,0x10
  409013:	jmp    40902c <__sprintf_chk@plt+0x7d3c>
  409015:	nop    DWORD PTR [rax]
  409018:	cmp    ecx,0x7
  40901b:	je     409190 <__sprintf_chk@plt+0x7ea0>
  409021:	nop    DWORD PTR [rax+0x0]
  409028:	sub    rax,0x10
  40902c:	cmp    r8,rax
  40902f:	je     409060 <__sprintf_chk@plt+0x7d70>
  409031:	mov    rdx,rax
  409034:	add    rdx,QWORD PTR [rsi+0x18]
  409038:	mov    ecx,DWORD PTR [rdx+0x8]
  40903b:	cmp    ecx,0x3
  40903e:	jle    409028 <__sprintf_chk@plt+0x7d38>
  409040:	cmp    ecx,0x4
  409043:	mov    r9,QWORD PTR [rdx]
  409046:	je     409160 <__sprintf_chk@plt+0x7e70>
  40904c:	movzx  r9d,BYTE PTR [r9+0x9]
  409051:	test   r9b,0x3
  409055:	je     409018 <__sprintf_chk@plt+0x7d28>
  409057:	mov    DWORD PTR [rdx+0x8],0x0
  40905e:	jmp    409028 <__sprintf_chk@plt+0x7d38>
  409060:	movzx  ecx,BYTE PTR [rsi+0xb]
  409064:	shlx   rcx,rdi,rcx
  409069:	movsxd rdx,ecx
  40906c:	mov    ecx,ecx
  40906e:	lea    rax,[rdx+rdx*4]
  409072:	sub    rdx,rcx
  409075:	lea    rdx,[rdx+rdx*4]
  409079:	lea    rax,[rax*8-0x28]
  409081:	lea    r9,[rdx*8-0x28]
  409089:	jmp    4090bc <__sprintf_chk@plt+0x7dcc>
  40908b:	nop    DWORD PTR [rax+rax*1+0x0]
  409090:	cmp    r8d,0x4
  409094:	mov    r10,QWORD PTR [rdx+0x10]
  409098:	je     409170 <__sprintf_chk@plt+0x7e80>
  40909e:	test   BYTE PTR [r10+0x9],0x3
  4090a3:	je     4090d9 <__sprintf_chk@plt+0x7de9>
  4090a5:	mov    DWORD PTR [rdx+0x8],0x0
  4090ac:	mov    DWORD PTR [rdx+0x18],0xb
  4090b3:	nop    DWORD PTR [rax+rax*1+0x0]
  4090b8:	sub    rax,0x28
  4090bc:	cmp    rax,r9
  4090bf:	je     409118 <__sprintf_chk@plt+0x7e28>
  4090c1:	mov    rdx,rax
  4090c4:	add    rdx,QWORD PTR [rsi+0x20]
  4090c8:	mov    ecx,DWORD PTR [rdx+0x8]
  4090cb:	test   ecx,ecx
  4090cd:	je     4090b8 <__sprintf_chk@plt+0x7dc8>
  4090cf:	mov    r8d,DWORD PTR [rdx+0x18]
  4090d3:	cmp    r8d,0x3
  4090d7:	jg     409090 <__sprintf_chk@plt+0x7da0>
  4090d9:	cmp    ecx,0x3
  4090dc:	jle    4090b8 <__sprintf_chk@plt+0x7dc8>
  4090de:	cmp    ecx,0x4
  4090e1:	mov    r8,QWORD PTR [rdx]
  4090e4:	je     409180 <__sprintf_chk@plt+0x7e90>
  4090ea:	movzx  r8d,BYTE PTR [r8+0x9]
  4090ef:	test   r8b,0x3
  4090f3:	jne    409100 <__sprintf_chk@plt+0x7e10>
  4090f5:	cmp    ecx,0x7
  4090f8:	jne    4090b8 <__sprintf_chk@plt+0x7dc8>
  4090fa:	and    r8d,0x8
  4090fe:	je     4090b8 <__sprintf_chk@plt+0x7dc8>
  409100:	mov    ecx,DWORD PTR [rdx+0x18]
  409103:	mov    DWORD PTR [rdx+0x8],0x0
  40910a:	cmp    ecx,0x3
  40910d:	jle    4090b8 <__sprintf_chk@plt+0x7dc8>
  40910f:	jmp    4090ac <__sprintf_chk@plt+0x7dbc>
  409111:	nop    DWORD PTR [rax+0x0]
  409118:	mov    rsi,QWORD PTR [rsi+0x30]
  40911c:	test   rsi,rsi
  40911f:	jne    408ff0 <__sprintf_chk@plt+0x7d00>
  409125:	lea    rax,[r15+0x28]
  409129:	xor    BYTE PTR [r15+0x20],0x3
  40912e:	mov    DWORD PTR [r15+0x24],0x0
  409136:	mov    BYTE PTR [r15+0x21],0x2
  40913b:	mov    QWORD PTR [r15+0x30],rax
  40913f:	mov    rax,QWORD PTR [r15+0x78]
  409143:	sub    rax,QWORD PTR [rsp+0x8]
  409148:	sub    rax,r14
  40914b:	mov    QWORD PTR [r15+0x80],rax
  409152:	jmp    408df0 <__sprintf_chk@plt+0x7b00>
  409157:	nop    WORD PTR [rax+rax*1+0x0]
  409160:	and    BYTE PTR [r9+0x9],0xfc
  409165:	jmp    409028 <__sprintf_chk@plt+0x7d38>
  40916a:	nop    WORD PTR [rax+rax*1+0x0]
  409170:	and    BYTE PTR [r10+0x9],0xfc
  409175:	mov    ecx,DWORD PTR [rdx+0x8]
  409178:	jmp    4090d9 <__sprintf_chk@plt+0x7de9>
  40917d:	nop    DWORD PTR [rax]
  409180:	and    BYTE PTR [r8+0x9],0xfc
  409185:	jmp    4090b8 <__sprintf_chk@plt+0x7dc8>
  40918a:	nop    WORD PTR [rax+rax*1+0x0]
  409190:	and    r9d,0x8
  409194:	je     409028 <__sprintf_chk@plt+0x7d38>
  40919a:	mov    DWORD PTR [rdx+0x8],0x0
  4091a1:	jmp    409028 <__sprintf_chk@plt+0x7d38>
  4091a6:	mov    rdi,r15
  4091a9:	call   401a50 <__sprintf_chk@plt+0x760>
  4091ae:	jmp    408dc0 <__sprintf_chk@plt+0x7ad0>
  4091b3:	sub    rax,0x400
  4091b9:	mov    QWORD PTR [rbp+0x88],rax
  4091c0:	mov    rax,QWORD PTR [rbp+0x78]
  4091c4:	mov    QWORD PTR [rbp+0x70],rax
  4091c8:	add    rsp,0x28
  4091cc:	pop    rbx
  4091cd:	pop    rbp
  4091ce:	pop    r12
  4091d0:	pop    r13
  4091d2:	pop    r14
  4091d4:	pop    r15
  4091d6:	ret    
  4091d7:	mov    rdi,r15
  4091da:	call   401a50 <__sprintf_chk@plt+0x760>
  4091df:	jmp    408ee0 <__sprintf_chk@plt+0x7bf0>
  4091e4:	mov    rsi,r12
  4091e7:	mov    rdi,r15
  4091ea:	call   401a50 <__sprintf_chk@plt+0x760>
  4091ef:	jmp    408f23 <__sprintf_chk@plt+0x7c33>
  4091f4:	mov    r8,QWORD PTR [r12+0x20]
  4091f9:	mov    edx,DWORD PTR [r8+0xc]
  4091fd:	lea    eax,[rdx+0x3]
  409200:	test   edx,edx
  409202:	cmovns eax,edx
  409205:	sar    eax,0x2
  409208:	cmp    DWORD PTR [r8+0x8],eax
  40920c:	jae    409213 <__sprintf_chk@plt+0x7f23>
  40920e:	cmp    edx,0x40
  409211:	jg     40925a <__sprintf_chk@plt+0x7f6a>
  409213:	mov    rdx,QWORD PTR [r8+0x68]
  409217:	cmp    rdx,0x40
  40921b:	ja     409227 <__sprintf_chk@plt+0x7f37>
  40921d:	mov    BYTE PTR [r15+0x21],0x4
  409222:	jmp    408c83 <__sprintf_chk@plt+0x7993>
  409227:	mov    r9,rdx
  40922a:	mov    rsi,QWORD PTR [r8+0x58]
  40922e:	mov    rdi,r12
  409231:	shr    r9,1
  409234:	mov    QWORD PTR [rsp+0x18],r8
  409239:	mov    rcx,r9
  40923c:	mov    QWORD PTR [rsp+0x8],r9
  409241:	call   403450 <__sprintf_chk@plt+0x2160>
  409246:	mov    r8,QWORD PTR [rsp+0x18]
  40924b:	mov    r9,QWORD PTR [rsp+0x8]
  409250:	mov    QWORD PTR [r8+0x58],rax
  409254:	mov    QWORD PTR [r8+0x68],r9
  409258:	jmp    40921d <__sprintf_chk@plt+0x7f2d>
  40925a:	mov    esi,edx
  40925c:	mov    rdi,r12
  40925f:	mov    QWORD PTR [rsp+0x8],r8
  409264:	sar    esi,1
  409266:	call   405880 <__sprintf_chk@plt+0x4590>
  40926b:	mov    r8,QWORD PTR [rsp+0x8]
  409270:	jmp    409213 <__sprintf_chk@plt+0x7f23>
  409272:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40927d:	nop    DWORD PTR [rax]
  409280:	push   rbx
  409281:	mov    rbx,rdi
  409284:	sub    rsp,0xe0
  40928b:	test   al,al
  40928d:	mov    QWORD PTR [rsp+0x40],rdx
  409292:	mov    QWORD PTR [rsp+0x48],rcx
  409297:	mov    QWORD PTR [rsp+0x50],r8
  40929c:	mov    QWORD PTR [rsp+0x58],r9
  4092a1:	je     4092e5 <__sprintf_chk@plt+0x7ff5>
  4092a3:	vmovaps XMMWORD PTR [rsp+0x60],xmm0
  4092a9:	vmovaps XMMWORD PTR [rsp+0x70],xmm1
  4092af:	vmovaps XMMWORD PTR [rsp+0x80],xmm2
  4092b8:	vmovaps XMMWORD PTR [rsp+0x90],xmm3
  4092c1:	vmovaps XMMWORD PTR [rsp+0xa0],xmm4
  4092ca:	vmovaps XMMWORD PTR [rsp+0xb0],xmm5
  4092d3:	vmovaps XMMWORD PTR [rsp+0xc0],xmm6
  4092dc:	vmovaps XMMWORD PTR [rsp+0xd0],xmm7
  4092e5:	mov    rax,QWORD PTR fs:0x28
  4092ee:	mov    QWORD PTR [rsp+0x28],rax
  4092f3:	xor    eax,eax
  4092f5:	mov    rax,QWORD PTR [rbx+0x20]
  4092f9:	mov    rcx,QWORD PTR [rax+0x70]
  4092fd:	cmp    QWORD PTR [rax+0x78],rcx
  409301:	jb     409315 <__sprintf_chk@plt+0x8025>
  409303:	mov    rdi,rbx
  409306:	mov    QWORD PTR [rsp+0x8],rsi
  40930b:	call   408be0 <__sprintf_chk@plt+0x78f0>
  409310:	mov    rsi,QWORD PTR [rsp+0x8]
  409315:	lea    rax,[rsp+0xf0]
  40931d:	lea    rdx,[rsp+0x10]
  409322:	mov    rdi,rbx
  409325:	mov    DWORD PTR [rsp+0x10],0x10
  40932d:	mov    DWORD PTR [rsp+0x14],0x30
  409335:	mov    QWORD PTR [rsp+0x18],rax
  40933a:	lea    rax,[rsp+0x30]
  40933f:	mov    QWORD PTR [rsp+0x20],rax
  409344:	call   406ee0 <__sprintf_chk@plt+0x5bf0>
  409349:	mov    rdi,QWORD PTR [rsp+0x28]
  40934e:	xor    rdi,QWORD PTR fs:0x28
  409357:	jne    409362 <__sprintf_chk@plt+0x8072>
  409359:	add    rsp,0xe0
  409360:	pop    rbx
  409361:	ret    
  409362:	call   401100 <__stack_chk_fail@plt>
  409367:	nop    WORD PTR [rax+rax*1+0x0]
  409370:	push   r12
  409372:	push   rbp
  409373:	mov    ebp,esi
  409375:	push   rbx
  409376:	mov    r12,rdx
  409379:	mov    rbx,rdi
  40937c:	call   401050 <__errno_location@plt>
  409381:	test   ebp,ebp
  409383:	jne    4093e8 <__sprintf_chk@plt+0x80f8>
  409385:	mov    ebp,DWORD PTR [rax]
  409387:	mov    rax,QWORD PTR [rbx+0x10]
  40938b:	mov    DWORD PTR [rax+0x8],0x0
  409392:	add    rax,0x10
  409396:	test   r12,r12
  409399:	mov    QWORD PTR [rbx+0x10],rax
  40939d:	mov    edi,ebp
  40939f:	je     409410 <__sprintf_chk@plt+0x8120>
  4093a1:	call   4012b0 <strerror@plt>
  4093a6:	lea    rsi,[rip+0xd731]        # 416ade <__sprintf_chk@plt+0x157ee>
  4093ad:	mov    rcx,rax
  4093b0:	mov    rdx,r12
  4093b3:	mov    rdi,rbx
  4093b6:	xor    eax,eax
  4093b8:	call   409280 <__sprintf_chk@plt+0x7f90>
  4093bd:	mov    rax,QWORD PTR [rbx+0x10]
  4093c1:	vxorpd xmm0,xmm0,xmm0
  4093c5:	mov    DWORD PTR [rax+0x8],0x3
  4093cc:	vcvtsi2sd xmm0,xmm0,ebp
  4093d0:	vmovsd QWORD PTR [rax],xmm0
  4093d4:	mov    eax,0x3
  4093d9:	add    QWORD PTR [rbx+0x10],0x10
  4093de:	pop    rbx
  4093df:	pop    rbp
  4093e0:	pop    r12
  4093e2:	ret    
  4093e3:	nop    DWORD PTR [rax+rax*1+0x0]
  4093e8:	mov    rax,QWORD PTR [rbx+0x10]
  4093ec:	mov    DWORD PTR [rax],0x1
  4093f2:	mov    DWORD PTR [rax+0x8],0x1
  4093f9:	mov    eax,0x1
  4093fe:	add    QWORD PTR [rbx+0x10],0x10
  409403:	pop    rbx
  409404:	pop    rbp
  409405:	pop    r12
  409407:	ret    
  409408:	nop    DWORD PTR [rax+rax*1+0x0]
  409410:	call   4012b0 <strerror@plt>
  409415:	lea    rsi,[rip+0xd33f]        # 41675b <__sprintf_chk@plt+0x1546b>
  40941c:	mov    rdx,rax
  40941f:	mov    rdi,rbx
  409422:	xor    eax,eax
  409424:	call   409280 <__sprintf_chk@plt+0x7f90>
  409429:	jmp    4093bd <__sprintf_chk@plt+0x80cd>
  40942b:	nop    DWORD PTR [rax+rax*1+0x0]
  409430:	push   rbp
  409431:	push   rbx
  409432:	movsxd rbx,esi
  409435:	mov    rbp,rdi
  409438:	sub    rsp,0x8
  40943c:	cmp    ebx,0x1
  40943f:	jle    409490 <__sprintf_chk@plt+0x81a0>
  409441:	mov    rax,QWORD PTR [rdi+0x20]
  409445:	mov    rcx,QWORD PTR [rax+0x70]
  409449:	cmp    QWORD PTR [rax+0x78],rcx
  40944d:	jae    409480 <__sprintf_chk@plt+0x8190>
  40944f:	mov    rdx,QWORD PTR [rbp+0x10]
  409453:	sub    rdx,QWORD PTR [rbp+0x18]
  409457:	mov    esi,ebx
  409459:	neg    rbx
  40945c:	mov    rdi,rbp
  40945f:	shl    rbx,0x4
  409463:	add    rbx,0x10
  409467:	sar    rdx,0x4
  40946b:	sub    edx,0x1
  40946e:	call   406c50 <__sprintf_chk@plt+0x5960>
  409473:	add    QWORD PTR [rbp+0x10],rbx
  409477:	add    rsp,0x8
  40947b:	pop    rbx
  40947c:	pop    rbp
  40947d:	ret    
  40947e:	xchg   ax,ax
  409480:	call   408be0 <__sprintf_chk@plt+0x78f0>
  409485:	jmp    40944f <__sprintf_chk@plt+0x815f>
  409487:	nop    WORD PTR [rax+rax*1+0x0]
  409490:	test   ebx,ebx
  409492:	jne    409477 <__sprintf_chk@plt+0x8187>
  409494:	mov    rbx,QWORD PTR [rdi+0x10]
  409498:	lea    rsi,[rip+0xd99b]        # 416e3a <__sprintf_chk@plt+0x15b4a>
  40949f:	xor    edx,edx
  4094a1:	call   405980 <__sprintf_chk@plt+0x4690>
  4094a6:	mov    DWORD PTR [rbx+0x8],0x4
  4094ad:	mov    QWORD PTR [rbx],rax
  4094b0:	add    QWORD PTR [rbp+0x10],0x10
  4094b5:	add    rsp,0x8
  4094b9:	pop    rbx
  4094ba:	pop    rbp
  4094bb:	ret    
  4094bc:	nop    DWORD PTR [rax+0x0]
  4094c0:	push   r13
  4094c2:	push   r12
  4094c4:	mov    r12,rdi
  4094c7:	push   rbp
  4094c8:	push   rbx
  4094c9:	mov    ebx,0x1
  4094ce:	sub    rsp,0x8
  4094d2:	mov    r13,QWORD PTR [rsi]
  4094d5:	mov    esi,0xffffffff
  4094da:	mov    rdi,r13
  4094dd:	call   405c70 <__sprintf_chk@plt+0x4980>
  4094e2:	mov    rbp,rax
  4094e5:	jmp    4094fa <__sprintf_chk@plt+0x820a>
  4094e7:	nop    WORD PTR [rax+rax*1+0x0]
  4094f0:	add    ebx,0x1
  4094f3:	add    rbp,rax
  4094f6:	cmp    edx,ebx
  4094f8:	jle    409518 <__sprintf_chk@plt+0x8228>
  4094fa:	mov    esi,ebx
  4094fc:	mov    rdi,r13
  4094ff:	not    esi
  409501:	call   405c70 <__sprintf_chk@plt+0x4980>
  409506:	mov    edx,DWORD PTR [r12]
  40950a:	mov    ecx,edx
  40950c:	sub    ecx,ebx
  40950e:	cmp    ecx,0x8
  409511:	jg     4094f0 <__sprintf_chk@plt+0x8200>
  409513:	cmp    rax,rbp
  409516:	jb     4094f0 <__sprintf_chk@plt+0x8200>
  409518:	mov    esi,ebx
  40951a:	mov    rdi,r13
  40951d:	call   409430 <__sprintf_chk@plt+0x8140>
  409522:	mov    eax,DWORD PTR [r12]
  409526:	sub    eax,ebx
  409528:	add    eax,0x1
  40952b:	mov    DWORD PTR [r12],eax
  40952f:	add    rsp,0x8
  409533:	pop    rbx
  409534:	pop    rbp
  409535:	pop    r12
  409537:	pop    r13
  409539:	ret    
  40953a:	nop    WORD PTR [rax+rax*1+0x0]
  409540:	push   rbp
  409541:	push   rbx
  409542:	mov    rbx,rdi
  409545:	sub    rsp,0x18
  409549:	mov    rax,QWORD PTR [rdi+0x20]
  40954d:	mov    rcx,QWORD PTR [rax+0x70]
  409551:	cmp    QWORD PTR [rax+0x78],rcx
  409555:	jb     40956e <__sprintf_chk@plt+0x827e>
  409557:	mov    QWORD PTR [rsp+0x8],rdx
  40955c:	mov    QWORD PTR [rsp],rsi
  409560:	call   408be0 <__sprintf_chk@plt+0x78f0>
  409565:	mov    rdx,QWORD PTR [rsp+0x8]
  40956a:	mov    rsi,QWORD PTR [rsp]
  40956e:	mov    rbp,QWORD PTR [rbx+0x10]
  409572:	mov    rdi,rbx
  409575:	call   405980 <__sprintf_chk@plt+0x4690>
  40957a:	mov    DWORD PTR [rbp+0x8],0x4
  409581:	mov    QWORD PTR [rbp+0x0],rax
  409585:	add    QWORD PTR [rbx+0x10],0x10
  40958a:	add    rsp,0x18
  40958e:	pop    rbx
  40958f:	pop    rbp
  409590:	ret    
  409591:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40959c:	nop    DWORD PTR [rax+0x0]
  4095a0:	push   rbp
  4095a1:	push   rbx
  4095a2:	mov    edx,esi
  4095a4:	mov    rbx,rdi
  4095a7:	lea    rsi,[rdi+0x50]
  4095ab:	sub    rsp,0x88
  4095b2:	mov    rdi,QWORD PTR [rdi+0x28]
  4095b6:	lea    rcx,[rsp+0x74]
  4095bb:	mov    rax,QWORD PTR fs:0x28
  4095c4:	mov    QWORD PTR [rsp+0x78],rax
  4095c9:	xor    eax,eax
  4095cb:	call   4029f0 <__sprintf_chk@plt+0x1700>
  4095d0:	test   eax,eax
  4095d2:	je     4095ee <__sprintf_chk@plt+0x82fe>
  4095d4:	lea    rsi,[rip+0xd2b4]        # 41688f <__sprintf_chk@plt+0x1559f>
  4095db:	mov    rdx,rsp
  4095de:	mov    rdi,rbx
  4095e1:	call   407ee0 <__sprintf_chk@plt+0x6bf0>
  4095e6:	mov    ecx,DWORD PTR [rsp+0x28]
  4095ea:	test   ecx,ecx
  4095ec:	jg     409620 <__sprintf_chk@plt+0x8330>
  4095ee:	lea    rsi,[rip+0xd845]        # 416e3a <__sprintf_chk@plt+0x15b4a>
  4095f5:	xor    edx,edx
  4095f7:	mov    rdi,rbx
  4095fa:	call   409540 <__sprintf_chk@plt+0x8250>
  4095ff:	mov    rax,QWORD PTR [rsp+0x78]
  409604:	xor    rax,QWORD PTR fs:0x28
  40960d:	jne    409638 <__sprintf_chk@plt+0x8348>
  40960f:	add    rsp,0x88
  409616:	pop    rbx
  409617:	pop    rbp
  409618:	ret    
  409619:	nop    DWORD PTR [rax+0x0]
  409620:	lea    rdx,[rsp+0x38]
  409625:	lea    rsi,[rip+0xd266]        # 416892 <__sprintf_chk@plt+0x155a2>
  40962c:	mov    rdi,rbx
  40962f:	xor    eax,eax
  409631:	call   409280 <__sprintf_chk@plt+0x7f90>
  409636:	jmp    4095ff <__sprintf_chk@plt+0x830f>
  409638:	call   401100 <__stack_chk_fail@plt>
  40963d:	nop    DWORD PTR [rax]
  409640:	push   rbp
  409641:	push   rbx
  409642:	mov    rbp,rsi
  409645:	mov    rbx,rdi
  409648:	sub    rsp,0xd8
  40964f:	test   al,al
  409651:	mov    QWORD PTR [rsp+0x30],rdx
  409656:	mov    QWORD PTR [rsp+0x38],rcx
  40965b:	mov    QWORD PTR [rsp+0x40],r8
  409660:	mov    QWORD PTR [rsp+0x48],r9
  409665:	je     4096a6 <__sprintf_chk@plt+0x83b6>
  409667:	vmovaps XMMWORD PTR [rsp+0x50],xmm0
  40966d:	vmovaps XMMWORD PTR [rsp+0x60],xmm1
  409673:	vmovaps XMMWORD PTR [rsp+0x70],xmm2
  409679:	vmovaps XMMWORD PTR [rsp+0x80],xmm3
  409682:	vmovaps XMMWORD PTR [rsp+0x90],xmm4
  40968b:	vmovaps XMMWORD PTR [rsp+0xa0],xmm5
  409694:	vmovaps XMMWORD PTR [rsp+0xb0],xmm6
  40969d:	vmovaps XMMWORD PTR [rsp+0xc0],xmm7
  4096a6:	mov    rax,QWORD PTR fs:0x28
  4096af:	mov    QWORD PTR [rsp+0x18],rax
  4096b4:	xor    eax,eax
  4096b6:	lea    rax,[rsp+0xf0]
  4096be:	mov    esi,0x1
  4096c3:	mov    rdi,rbx
  4096c6:	mov    QWORD PTR [rsp+0x8],rax
  4096cb:	lea    rax,[rsp+0x20]
  4096d0:	mov    DWORD PTR [rsp],0x10
  4096d7:	mov    DWORD PTR [rsp+0x4],0x30
  4096df:	mov    QWORD PTR [rsp+0x10],rax
  4096e4:	call   4095a0 <__sprintf_chk@plt+0x82b0>
  4096e9:	mov    rax,QWORD PTR [rbx+0x20]
  4096ed:	mov    rcx,QWORD PTR [rax+0x70]
  4096f1:	cmp    QWORD PTR [rax+0x78],rcx
  4096f5:	jb     4096ff <__sprintf_chk@plt+0x840f>
  4096f7:	mov    rdi,rbx
  4096fa:	call   408be0 <__sprintf_chk@plt+0x78f0>
  4096ff:	mov    rdx,rsp
  409702:	mov    rsi,rbp
  409705:	mov    rdi,rbx
  409708:	call   406ee0 <__sprintf_chk@plt+0x5bf0>
  40970d:	mov    rdi,rbx
  409710:	mov    esi,0x2
  409715:	call   409430 <__sprintf_chk@plt+0x8140>
  40971a:	mov    rdi,rbx
  40971d:	call   4056a0 <__sprintf_chk@plt+0x43b0>
  409722:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40972d:	nop    DWORD PTR [rax]
  409730:	sub    rsp,0x8
  409734:	movzx  edx,BYTE PTR [rsi]
  409737:	cmp    dl,0x25
  40973a:	je     409770 <__sprintf_chk@plt+0x8480>
  40973c:	cmp    dl,0x5b
  40973f:	lea    rax,[rsi+0x1]
  409743:	jne    40976b <__sprintf_chk@plt+0x847b>
  409745:	movzx  edx,BYTE PTR [rsi+0x1]
  409749:	cmp    dl,0x5e
  40974c:	je     4097c0 <__sprintf_chk@plt+0x84d0>
  40974e:	test   dl,dl
  409750:	je     409790 <__sprintf_chk@plt+0x84a0>
  409752:	cmp    dl,0x25
  409755:	lea    rcx,[rax+0x1]
  409759:	je     4097a8 <__sprintf_chk@plt+0x84b8>
  40975b:	movzx  edx,BYTE PTR [rax+0x1]
  40975f:	mov    rax,rcx
  409762:	cmp    dl,0x5d
  409765:	jne    40974e <__sprintf_chk@plt+0x845e>
  409767:	add    rax,0x1
  40976b:	add    rsp,0x8
  40976f:	ret    
  409770:	cmp    BYTE PTR [rsi+0x1],0x0
  409774:	lea    rax,[rsi+0x2]
  409778:	jne    40976b <__sprintf_chk@plt+0x847b>
  40977a:	mov    rdi,QWORD PTR [rdi]
  40977d:	lea    rsi,[rip+0xd91c]        # 4170a0 <__sprintf_chk@plt+0x15db0>
  409784:	xor    eax,eax
  409786:	call   409640 <__sprintf_chk@plt+0x8350>
  40978b:	nop    DWORD PTR [rax+rax*1+0x0]
  409790:	mov    rdi,QWORD PTR [rdi]
  409793:	lea    rsi,[rip+0xd92e]        # 4170c8 <__sprintf_chk@plt+0x15dd8>
  40979a:	xor    eax,eax
  40979c:	call   409640 <__sprintf_chk@plt+0x8350>
  4097a1:	nop    DWORD PTR [rax+0x0]
  4097a8:	cmp    BYTE PTR [rax+0x1],0x0
  4097ac:	je     409790 <__sprintf_chk@plt+0x84a0>
  4097ae:	movzx  edx,BYTE PTR [rax+0x2]
  4097b2:	add    rax,0x2
  4097b6:	jmp    409762 <__sprintf_chk@plt+0x8472>
  4097b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4097c0:	lea    rax,[rsi+0x2]
  4097c4:	movzx  edx,BYTE PTR [rsi+0x2]
  4097c8:	jmp    40974e <__sprintf_chk@plt+0x845e>
  4097ca:	nop    WORD PTR [rax+rax*1+0x0]
  4097d0:	push   rbp
  4097d1:	push   rbx
  4097d2:	mov    rbp,rdx
  4097d5:	mov    rbx,rdi
  4097d8:	sub    rsp,0x8
  4097dc:	call   406970 <__sprintf_chk@plt+0x5680>
  4097e1:	test   eax,eax
  4097e3:	je     4097f0 <__sprintf_chk@plt+0x8500>
  4097e5:	add    rsp,0x8
  4097e9:	pop    rbx
  4097ea:	pop    rbp
  4097eb:	ret    
  4097ec:	nop    DWORD PTR [rax+0x0]
  4097f0:	lea    rsi,[rip+0xd0a3]        # 41689a <__sprintf_chk@plt+0x155aa>
  4097f7:	mov    rdx,rbp
  4097fa:	mov    rdi,rbx
  4097fd:	call   409640 <__sprintf_chk@plt+0x8350>
  409802:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40980d:	nop    DWORD PTR [rax]
  409810:	push   rbp
  409811:	push   rbx
  409812:	mov    edx,esi
  409814:	mov    rbx,rdi
  409817:	mov    ebp,esi
  409819:	mov    esi,0xffffd8ef
  40981e:	sub    rsp,0x8
  409822:	call   402d60 <__sprintf_chk@plt+0x1a70>
  409827:	mov    esi,0xffffffff
  40982c:	mov    rdi,rbx
  40982f:	call   402d00 <__sprintf_chk@plt+0x1a10>
  409834:	mov    rax,QWORD PTR [rax]
  409837:	test   rax,rax
  40983a:	je     409848 <__sprintf_chk@plt+0x8558>
  40983c:	add    rsp,0x8
  409840:	pop    rbx
  409841:	pop    rbp
  409842:	ret    
  409843:	nop    DWORD PTR [rax+rax*1+0x0]
  409848:	lea    rax,[rip+0x132f1]        # 41cb40 <__sprintf_chk@plt+0x1b850>
  40984f:	sub    ebp,0x1
  409852:	lea    rsi,[rip+0xd055]        # 4168ae <__sprintf_chk@plt+0x155be>
  409859:	movsxd rbp,ebp
  40985c:	mov    rdi,rbx
  40985f:	mov    rdx,QWORD PTR [rax+rbp*8]
  409863:	xor    eax,eax
  409865:	call   409640 <__sprintf_chk@plt+0x8350>
  40986a:	nop    WORD PTR [rax+rax*1+0x0]
  409870:	push   rbx
  409871:	mov    esi,0x2
  409876:	mov    rbx,rdi
  409879:	call   409810 <__sprintf_chk@plt+0x8520>
  40987e:	mov    rdi,rax
  409881:	call   4011d0 <fflush@plt>
  409886:	mov    rdi,rbx
  409889:	xor    esi,esi
  40988b:	test   eax,eax
  40988d:	pop    rbx
  40988e:	sete   sil
  409892:	xor    edx,edx
  409894:	jmp    409370 <__sprintf_chk@plt+0x8080>
  409899:	nop    DWORD PTR [rax+0x0]
  4098a0:	push   r12
  4098a2:	push   rbp
  4098a3:	mov    ebp,esi
  4098a5:	push   rbx
  4098a6:	lea    rsi,[rdi+0x50]
  4098aa:	mov    rbx,rdi
  4098ad:	mov    r12,rdx
  4098b0:	xor    edx,edx
  4098b2:	add    rsp,0xffffffffffffff80
  4098b6:	mov    rdi,QWORD PTR [rdi+0x28]
  4098ba:	lea    rcx,[rsp+0x74]
  4098bf:	mov    rax,QWORD PTR fs:0x28
  4098c8:	mov    QWORD PTR [rsp+0x78],rax
  4098cd:	xor    eax,eax
  4098cf:	call   4029f0 <__sprintf_chk@plt+0x1700>
  4098d4:	test   eax,eax
  4098d6:	je     409924 <__sprintf_chk@plt+0x8634>
  4098d8:	lea    rsi,[rip+0xd724]        # 417003 <__sprintf_chk@plt+0x15d13>
  4098df:	mov    rdx,rsp
  4098e2:	mov    rdi,rbx
  4098e5:	call   407ee0 <__sprintf_chk@plt+0x6bf0>
  4098ea:	mov    rdi,QWORD PTR [rsp+0x10]
  4098ef:	lea    rsi,[rip+0xcfeb]        # 4168e1 <__sprintf_chk@plt+0x155f1>
  4098f6:	call   401190 <strcmp@plt>
  4098fb:	test   eax,eax
  4098fd:	jne    409904 <__sprintf_chk@plt+0x8614>
  4098ff:	sub    ebp,0x1
  409902:	je     409946 <__sprintf_chk@plt+0x8656>
  409904:	mov    rcx,QWORD PTR [rsp+0x8]
  409909:	test   rcx,rcx
  40990c:	je     409938 <__sprintf_chk@plt+0x8648>
  40990e:	lea    rsi,[rip+0xcff1]        # 416906 <__sprintf_chk@plt+0x15616>
  409915:	mov    r8,r12
  409918:	mov    edx,ebp
  40991a:	mov    rdi,rbx
  40991d:	xor    eax,eax
  40991f:	call   409640 <__sprintf_chk@plt+0x8350>
  409924:	lea    rsi,[rip+0xcfa0]        # 4168cb <__sprintf_chk@plt+0x155db>
  40992b:	mov    rcx,r12
  40992e:	mov    edx,ebp
  409930:	mov    rdi,rbx
  409933:	call   409640 <__sprintf_chk@plt+0x8350>
  409938:	lea    rcx,[rip+0xcf8a]        # 4168c9 <__sprintf_chk@plt+0x155d9>
  40993f:	mov    QWORD PTR [rsp+0x8],rcx
  409944:	jmp    40990e <__sprintf_chk@plt+0x861e>
  409946:	mov    rdx,QWORD PTR [rsp+0x8]
  40994b:	lea    rsi,[rip+0xcf96]        # 4168e8 <__sprintf_chk@plt+0x155f8>
  409952:	mov    rcx,r12
  409955:	mov    rdi,rbx
  409958:	call   409640 <__sprintf_chk@plt+0x8350>
  40995d:	nop    DWORD PTR [rax]
  409960:	push   rbp
  409961:	push   rbx
  409962:	mov    r8,rdx
  409965:	mov    rbx,rdi
  409968:	mov    ebp,esi
  40996a:	sub    rsp,0x8
  40996e:	call   402b60 <__sprintf_chk@plt+0x1870>
  409973:	lea    rdx,[rip+0xcd56]        # 4166d0 <__sprintf_chk@plt+0x153e0>
  40997a:	lea    rcx,[rip+0xcfa3]        # 416924 <__sprintf_chk@plt+0x15634>
  409981:	cmp    rax,rdx
  409984:	je     40999a <__sprintf_chk@plt+0x86aa>
  409986:	movsxd rax,DWORD PTR [rax+0x8]
  40998a:	cmp    eax,0xffffffff
  40998d:	je     40999a <__sprintf_chk@plt+0x86aa>
  40998f:	lea    rdx,[rip+0x1340a]        # 41cda0 <__sprintf_chk@plt+0x1bab0>
  409996:	mov    rcx,QWORD PTR [rdx+rax*8]
  40999a:	lea    rsi,[rip+0xcf8c]        # 41692d <__sprintf_chk@plt+0x1563d>
  4099a1:	mov    rdx,r8
  4099a4:	mov    rdi,rbx
  4099a7:	xor    eax,eax
  4099a9:	call   409280 <__sprintf_chk@plt+0x7f90>
  4099ae:	mov    esi,ebp
  4099b0:	mov    rdx,rax
  4099b3:	mov    rdi,rbx
  4099b6:	call   4098a0 <__sprintf_chk@plt+0x85b0>
  4099bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4099c0:	push   rbp
  4099c1:	push   rbx
  4099c2:	mov    ebp,esi
  4099c4:	mov    rbx,rdi
  4099c7:	sub    rsp,0x18
  4099cb:	call   402f90 <__sprintf_chk@plt+0x1ca0>
  4099d0:	vaddsd xmm0,xmm0,QWORD PTR [rip+0xda90]        # 417468 <__sprintf_chk@plt+0x16178>
  4099d8:	vucomisd xmm0,QWORD PTR [rip+0xda80]        # 417460 <__sprintf_chk@plt+0x16170>
  4099e0:	vmovq  QWORD PTR [rsp+0x8],xmm0
  4099e6:	jp     4099ea <__sprintf_chk@plt+0x86fa>
  4099e8:	je     4099f8 <__sprintf_chk@plt+0x8708>
  4099ea:	mov    eax,DWORD PTR [rsp+0x8]
  4099ee:	add    rsp,0x18
  4099f2:	pop    rbx
  4099f3:	pop    rbp
  4099f4:	ret    
  4099f5:	nop    DWORD PTR [rax]
  4099f8:	mov    esi,ebp
  4099fa:	mov    rdi,rbx
  4099fd:	call   402ff0 <__sprintf_chk@plt+0x1d00>
  409a02:	test   eax,eax
  409a04:	jne    4099ea <__sprintf_chk@plt+0x86fa>
  409a06:	lea    rdx,[rip+0xcd40]        # 41674d <__sprintf_chk@plt+0x1545d>
  409a0d:	mov    esi,ebp
  409a0f:	mov    rdi,rbx
  409a12:	call   409960 <__sprintf_chk@plt+0x8670>
  409a17:	nop    WORD PTR [rax+rax*1+0x0]
  409a20:	push   rbx
  409a21:	mov    esi,0x1
  409a26:	mov    rbx,rdi
  409a29:	call   4099c0 <__sprintf_chk@plt+0x86d0>
  409a2e:	mov    rdx,QWORD PTR [rbx+0x10]
  409a32:	vxorpd xmm0,xmm0,xmm0
  409a36:	bswap  eax
  409a38:	vcvtsi2sd xmm0,xmm0,eax
  409a3c:	mov    DWORD PTR [rdx+0x8],0x3
  409a43:	vmovsd QWORD PTR [rdx],xmm0
  409a47:	mov    eax,0x1
  409a4c:	add    QWORD PTR [rbx+0x10],0x10
  409a51:	pop    rbx
  409a52:	ret    
  409a53:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  409a5e:	xchg   ax,ax
  409a60:	push   rbp
  409a61:	push   rbx
  409a62:	mov    esi,0x1
  409a67:	mov    rbx,rdi
  409a6a:	sub    rsp,0x8
  409a6e:	call   4099c0 <__sprintf_chk@plt+0x86d0>
  409a73:	mov    rdi,rbx
  409a76:	mov    esi,0x2
  409a7b:	mov    ebp,eax
  409a7d:	call   4099c0 <__sprintf_chk@plt+0x86d0>
  409a82:	mov    rdx,QWORD PTR [rbx+0x10]
  409a86:	vxorpd xmm0,xmm0,xmm0
  409a8a:	mov    ecx,eax
  409a8c:	mov    eax,0x1
  409a91:	ror    ebp,cl
  409a93:	mov    DWORD PTR [rdx+0x8],0x3
  409a9a:	vcvtsi2sd xmm0,xmm0,ebp
  409a9e:	vmovsd QWORD PTR [rdx],xmm0
  409aa2:	add    QWORD PTR [rbx+0x10],0x10
  409aa7:	add    rsp,0x8
  409aab:	pop    rbx
  409aac:	pop    rbp
  409aad:	ret    
  409aae:	xchg   ax,ax
  409ab0:	push   rbp
  409ab1:	push   rbx
  409ab2:	mov    esi,0x1
  409ab7:	mov    rbx,rdi
  409aba:	sub    rsp,0x8
  409abe:	call   4099c0 <__sprintf_chk@plt+0x86d0>
  409ac3:	mov    rdi,rbx
  409ac6:	mov    esi,0x2
  409acb:	mov    ebp,eax
  409acd:	call   4099c0 <__sprintf_chk@plt+0x86d0>
  409ad2:	mov    rdx,QWORD PTR [rbx+0x10]
  409ad6:	vxorpd xmm0,xmm0,xmm0
  409ada:	mov    ecx,eax
  409adc:	mov    eax,0x1
  409ae1:	rol    ebp,cl
  409ae3:	mov    DWORD PTR [rdx+0x8],0x3
  409aea:	vcvtsi2sd xmm0,xmm0,ebp
  409aee:	vmovsd QWORD PTR [rdx],xmm0
  409af2:	add    QWORD PTR [rbx+0x10],0x10
  409af7:	add    rsp,0x8
  409afb:	pop    rbx
  409afc:	pop    rbp
  409afd:	ret    
  409afe:	xchg   ax,ax
  409b00:	push   rbp
  409b01:	push   rbx
  409b02:	mov    esi,0x1
  409b07:	mov    rbx,rdi
  409b0a:	sub    rsp,0x8
  409b0e:	call   4099c0 <__sprintf_chk@plt+0x86d0>
  409b13:	mov    rdi,rbx
  409b16:	mov    esi,0x2
  409b1b:	mov    ebp,eax
  409b1d:	call   4099c0 <__sprintf_chk@plt+0x86d0>
  409b22:	mov    rdx,QWORD PTR [rbx+0x10]
  409b26:	vxorpd xmm0,xmm0,xmm0
  409b2a:	mov    ecx,eax
  409b2c:	mov    eax,0x1
  409b31:	sar    ebp,cl
  409b33:	mov    DWORD PTR [rdx+0x8],0x3
  409b3a:	vcvtsi2sd xmm0,xmm0,ebp
  409b3e:	vmovsd QWORD PTR [rdx],xmm0
  409b42:	add    QWORD PTR [rbx+0x10],0x10
  409b47:	add    rsp,0x8
  409b4b:	pop    rbx
  409b4c:	pop    rbp
  409b4d:	ret    
  409b4e:	xchg   ax,ax
  409b50:	push   rbp
  409b51:	push   rbx
  409b52:	mov    esi,0x1
  409b57:	mov    rbx,rdi
  409b5a:	sub    rsp,0x8
  409b5e:	call   4099c0 <__sprintf_chk@plt+0x86d0>
  409b63:	mov    rdi,rbx
  409b66:	mov    esi,0x2
  409b6b:	mov    ebp,eax
  409b6d:	call   4099c0 <__sprintf_chk@plt+0x86d0>
  409b72:	mov    rdx,QWORD PTR [rbx+0x10]
  409b76:	vxorpd xmm0,xmm0,xmm0
  409b7a:	mov    ecx,eax
  409b7c:	mov    eax,0x1
  409b81:	shr    ebp,cl
  409b83:	mov    DWORD PTR [rdx+0x8],0x3
  409b8a:	vcvtsi2sd xmm0,xmm0,ebp
  409b8e:	vmovsd QWORD PTR [rdx],xmm0
  409b92:	add    QWORD PTR [rbx+0x10],0x10
  409b97:	add    rsp,0x8
  409b9b:	pop    rbx
  409b9c:	pop    rbp
  409b9d:	ret    
  409b9e:	xchg   ax,ax
  409ba0:	push   rbp
  409ba1:	push   rbx
  409ba2:	mov    esi,0x1
  409ba7:	mov    rbx,rdi
  409baa:	sub    rsp,0x8
  409bae:	call   4099c0 <__sprintf_chk@plt+0x86d0>
  409bb3:	mov    rdi,rbx
  409bb6:	mov    esi,0x2
  409bbb:	mov    ebp,eax
  409bbd:	call   4099c0 <__sprintf_chk@plt+0x86d0>
  409bc2:	mov    rdx,QWORD PTR [rbx+0x10]
  409bc6:	vxorpd xmm0,xmm0,xmm0
  409bca:	mov    ecx,eax
  409bcc:	mov    eax,0x1
  409bd1:	shl    ebp,cl
  409bd3:	mov    DWORD PTR [rdx+0x8],0x3
  409bda:	vcvtsi2sd xmm0,xmm0,ebp
  409bde:	vmovsd QWORD PTR [rdx],xmm0
  409be2:	add    QWORD PTR [rbx+0x10],0x10
  409be7:	add    rsp,0x8
  409beb:	pop    rbx
  409bec:	pop    rbp
  409bed:	ret    
  409bee:	xchg   ax,ax
  409bf0:	push   r12
  409bf2:	push   rbp
  409bf3:	mov    r12,rdi
  409bf6:	push   rbx
  409bf7:	mov    esi,0x1
  409bfc:	call   4099c0 <__sprintf_chk@plt+0x86d0>
  409c01:	mov    rdx,QWORD PTR [r12+0x10]
  409c06:	mov    ebp,eax
  409c08:	mov    rax,rdx
  409c0b:	sub    rax,QWORD PTR [r12+0x18]
  409c10:	sar    rax,0x4
  409c14:	cmp    eax,0x1
  409c17:	jle    409c39 <__sprintf_chk@plt+0x8949>
  409c19:	mov    ebx,eax
  409c1b:	nop    DWORD PTR [rax+rax*1+0x0]
  409c20:	mov    esi,ebx
  409c22:	mov    rdi,r12
  409c25:	sub    ebx,0x1
  409c28:	call   4099c0 <__sprintf_chk@plt+0x86d0>
  409c2d:	xor    ebp,eax
  409c2f:	cmp    ebx,0x1
  409c32:	jne    409c20 <__sprintf_chk@plt+0x8930>
  409c34:	mov    rdx,QWORD PTR [r12+0x10]
  409c39:	vxorpd xmm0,xmm0,xmm0
  409c3d:	mov    DWORD PTR [rdx+0x8],0x3
  409c44:	mov    eax,0x1
  409c49:	vcvtsi2sd xmm0,xmm0,ebp
  409c4d:	vmovsd QWORD PTR [rdx],xmm0
  409c51:	add    QWORD PTR [r12+0x10],0x10
  409c57:	pop    rbx
  409c58:	pop    rbp
  409c59:	pop    r12
  409c5b:	ret    
  409c5c:	nop    DWORD PTR [rax+0x0]
  409c60:	push   r12
  409c62:	push   rbp
  409c63:	mov    r12,rdi
  409c66:	push   rbx
  409c67:	mov    esi,0x1
  409c6c:	call   4099c0 <__sprintf_chk@plt+0x86d0>
  409c71:	mov    rdx,QWORD PTR [r12+0x10]
  409c76:	mov    ebp,eax
  409c78:	mov    rax,rdx
  409c7b:	sub    rax,QWORD PTR [r12+0x18]
  409c80:	sar    rax,0x4
  409c84:	cmp    eax,0x1
  409c87:	jle    409ca9 <__sprintf_chk@plt+0x89b9>
  409c89:	mov    ebx,eax
  409c8b:	nop    DWORD PTR [rax+rax*1+0x0]
  409c90:	mov    esi,ebx
  409c92:	mov    rdi,r12
  409c95:	sub    ebx,0x1
  409c98:	call   4099c0 <__sprintf_chk@plt+0x86d0>
  409c9d:	or     ebp,eax
  409c9f:	cmp    ebx,0x1
  409ca2:	jne    409c90 <__sprintf_chk@plt+0x89a0>
  409ca4:	mov    rdx,QWORD PTR [r12+0x10]
  409ca9:	vxorpd xmm0,xmm0,xmm0
  409cad:	mov    DWORD PTR [rdx+0x8],0x3
  409cb4:	mov    eax,0x1
  409cb9:	vcvtsi2sd xmm0,xmm0,ebp
  409cbd:	vmovsd QWORD PTR [rdx],xmm0
  409cc1:	add    QWORD PTR [r12+0x10],0x10
  409cc7:	pop    rbx
  409cc8:	pop    rbp
  409cc9:	pop    r12
  409ccb:	ret    
  409ccc:	nop    DWORD PTR [rax+0x0]
  409cd0:	push   r12
  409cd2:	push   rbp
  409cd3:	mov    r12,rdi
  409cd6:	push   rbx
  409cd7:	mov    esi,0x1
  409cdc:	call   4099c0 <__sprintf_chk@plt+0x86d0>
  409ce1:	mov    rdx,QWORD PTR [r12+0x10]
  409ce6:	mov    ebp,eax
  409ce8:	mov    rax,rdx
  409ceb:	sub    rax,QWORD PTR [r12+0x18]
  409cf0:	sar    rax,0x4
  409cf4:	cmp    eax,0x1
  409cf7:	jle    409d19 <__sprintf_chk@plt+0x8a29>
  409cf9:	mov    ebx,eax
  409cfb:	nop    DWORD PTR [rax+rax*1+0x0]
  409d00:	mov    esi,ebx
  409d02:	mov    rdi,r12
  409d05:	sub    ebx,0x1
  409d08:	call   4099c0 <__sprintf_chk@plt+0x86d0>
  409d0d:	and    ebp,eax
  409d0f:	cmp    ebx,0x1
  409d12:	jne    409d00 <__sprintf_chk@plt+0x8a10>
  409d14:	mov    rdx,QWORD PTR [r12+0x10]
  409d19:	vxorpd xmm0,xmm0,xmm0
  409d1d:	mov    DWORD PTR [rdx+0x8],0x3
  409d24:	mov    eax,0x1
  409d29:	vcvtsi2sd xmm0,xmm0,ebp
  409d2d:	vmovsd QWORD PTR [rdx],xmm0
  409d31:	add    QWORD PTR [r12+0x10],0x10
  409d37:	pop    rbx
  409d38:	pop    rbp
  409d39:	pop    r12
  409d3b:	ret    
  409d3c:	nop    DWORD PTR [rax+0x0]
  409d40:	push   rbx
  409d41:	mov    esi,0x1
  409d46:	mov    rbx,rdi
  409d49:	call   4099c0 <__sprintf_chk@plt+0x86d0>
  409d4e:	mov    rdx,QWORD PTR [rbx+0x10]
  409d52:	vxorpd xmm0,xmm0,xmm0
  409d56:	not    eax
  409d58:	vcvtsi2sd xmm0,xmm0,eax
  409d5c:	mov    DWORD PTR [rdx+0x8],0x3
  409d63:	vmovsd QWORD PTR [rdx],xmm0
  409d67:	mov    eax,0x1
  409d6c:	add    QWORD PTR [rbx+0x10],0x10
  409d71:	pop    rbx
  409d72:	ret    
  409d73:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  409d7e:	xchg   ax,ax
  409d80:	push   rbx
  409d81:	mov    esi,0x1
  409d86:	mov    rbx,rdi
  409d89:	call   4099c0 <__sprintf_chk@plt+0x86d0>
  409d8e:	mov    rdx,QWORD PTR [rbx+0x10]
  409d92:	vxorpd xmm0,xmm0,xmm0
  409d96:	mov    DWORD PTR [rdx+0x8],0x3
  409d9d:	vcvtsi2sd xmm0,xmm0,eax
  409da1:	mov    eax,0x1
  409da6:	vmovsd QWORD PTR [rdx],xmm0
  409daa:	add    QWORD PTR [rbx+0x10],0x10
  409daf:	pop    rbx
  409db0:	ret    
  409db1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  409dbc:	nop    DWORD PTR [rax+0x0]
  409dc0:	push   rbp
  409dc1:	push   rbx
  409dc2:	mov    ebp,esi
  409dc4:	mov    rbx,rdi
  409dc7:	sub    rsp,0x8
  409dcb:	call   402ff0 <__sprintf_chk@plt+0x1d00>
  409dd0:	test   eax,eax
  409dd2:	je     409de0 <__sprintf_chk@plt+0x8af0>
  409dd4:	add    rsp,0x8
  409dd8:	pop    rbx
  409dd9:	pop    rbp
  409dda:	ret    
  409ddb:	nop    DWORD PTR [rax+rax*1+0x0]
  409de0:	lea    rdx,[rip+0xc966]        # 41674d <__sprintf_chk@plt+0x1545d>
  409de7:	mov    esi,ebp
  409de9:	mov    rdi,rbx
  409dec:	call   409960 <__sprintf_chk@plt+0x8670>
  409df1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  409dfc:	nop    DWORD PTR [rax+0x0]
  409e00:	push   rbp
  409e01:	push   rbx
  409e02:	mov    ebp,esi
  409e04:	mov    rbx,rdi
  409e07:	sub    rsp,0x18
  409e0b:	call   403060 <__sprintf_chk@plt+0x1d70>
  409e10:	test   rax,rax
  409e13:	jne    409e29 <__sprintf_chk@plt+0x8b39>
  409e15:	mov    esi,ebp
  409e17:	mov    rdi,rbx
  409e1a:	mov    QWORD PTR [rsp+0x8],rax
  409e1f:	call   409dc0 <__sprintf_chk@plt+0x8ad0>
  409e24:	mov    rax,QWORD PTR [rsp+0x8]
  409e29:	add    rsp,0x18
  409e2d:	pop    rbx
  409e2e:	pop    rbp
  409e2f:	ret    
  409e30:	sub    rsp,0x8
  409e34:	mov    r8,rdi
  409e37:	mov    r9d,esi
  409e3a:	mov    r10,rdx
  409e3d:	call   402b60 <__sprintf_chk@plt+0x1870>
  409e42:	lea    rcx,[rip+0xc887]        # 4166d0 <__sprintf_chk@plt+0x153e0>
  409e49:	cmp    rax,rcx
  409e4c:	je     409e68 <__sprintf_chk@plt+0x8b78>
  409e4e:	mov    eax,DWORD PTR [rax+0x8]
  409e51:	test   eax,eax
  409e53:	jle    409e68 <__sprintf_chk@plt+0x8b78>
  409e55:	mov    esi,r9d
  409e58:	mov    rdi,r8
  409e5b:	add    rsp,0x8
  409e5f:	jmp    409e00 <__sprintf_chk@plt+0x8b10>
  409e61:	nop    DWORD PTR [rax+0x0]
  409e68:	mov    rax,r10
  409e6b:	add    rsp,0x8
  409e6f:	ret    
  409e70:	sub    rsp,0x8
  409e74:	xor    edx,edx
  409e76:	mov    esi,0x1
  409e7b:	call   409e30 <__sprintf_chk@plt+0x8b40>
  409e80:	mov    edi,eax
  409e82:	call   401280 <exit@plt>
  409e87:	nop    WORD PTR [rax+rax*1+0x0]
  409e90:	push   rbp
  409e91:	push   rbx
  409e92:	mov    ebp,esi
  409e94:	mov    rbx,rdi
  409e97:	sub    rsp,0x18
  409e9b:	call   402f90 <__sprintf_chk@plt+0x1ca0>
  409ea0:	vucomisd xmm0,QWORD PTR [rip+0xd5b8]        # 417460 <__sprintf_chk@plt+0x16170>
  409ea8:	jp     409ec2 <__sprintf_chk@plt+0x8bd2>
  409eaa:	jne    409ec2 <__sprintf_chk@plt+0x8bd2>
  409eac:	mov    esi,ebp
  409eae:	mov    rdi,rbx
  409eb1:	vmovsd QWORD PTR [rsp+0x8],xmm0
  409eb7:	call   409dc0 <__sprintf_chk@plt+0x8ad0>
  409ebc:	vmovsd xmm0,QWORD PTR [rsp+0x8]
  409ec2:	add    rsp,0x18
  409ec6:	pop    rbx
  409ec7:	pop    rbp
  409ec8:	ret    
  409ec9:	nop    DWORD PTR [rax+0x0]
  409ed0:	sub    rsp,0x8
  409ed4:	movsxd r8,edx
  409ed7:	mov    r9,rdi
  409eda:	mov    r10d,esi
  409edd:	call   402b60 <__sprintf_chk@plt+0x1870>
  409ee2:	lea    rcx,[rip+0xc7e7]        # 4166d0 <__sprintf_chk@plt+0x153e0>
  409ee9:	mov    edx,0xffffffff
  409eee:	cmp    rax,rcx
  409ef1:	je     409ef6 <__sprintf_chk@plt+0x8c06>
  409ef3:	mov    edx,DWORD PTR [rax+0x8]
  409ef6:	cmp    r8d,edx
  409ef9:	je     409f20 <__sprintf_chk@plt+0x8c30>
  409efb:	cmp    r8d,0xffffffff
  409eff:	lea    rdx,[rip+0xca1e]        # 416924 <__sprintf_chk@plt+0x15634>
  409f06:	je     409f13 <__sprintf_chk@plt+0x8c23>
  409f08:	lea    rax,[rip+0x12e91]        # 41cda0 <__sprintf_chk@plt+0x1bab0>
  409f0f:	mov    rdx,QWORD PTR [rax+r8*8]
  409f13:	mov    esi,r10d
  409f16:	mov    rdi,r9
  409f19:	call   409960 <__sprintf_chk@plt+0x8670>
  409f1e:	xchg   ax,ax
  409f20:	add    rsp,0x8
  409f24:	ret    
  409f25:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  409f30:	push   r14
  409f32:	push   r13
  409f34:	mov    edx,0x5
  409f39:	push   r12
  409f3b:	push   rbp
  409f3c:	mov    esi,0x1
  409f41:	push   rbx
  409f42:	mov    rbp,rdi
  409f45:	call   409ed0 <__sprintf_chk@plt+0x8be0>
  409f4a:	mov    esi,0x1
  409f4f:	mov    rdi,rbp
  409f52:	call   405c70 <__sprintf_chk@plt+0x4980>
  409f57:	mov    esi,0x2
  409f5c:	movsxd rdx,eax
  409f5f:	mov    rdi,rbp
  409f62:	mov    r14,rax
  409f65:	mov    r13d,eax
  409f68:	call   409e30 <__sprintf_chk@plt+0x8b40>
  409f6d:	test   eax,eax
  409f6f:	jle    409ff0 <__sprintf_chk@plt+0x8d00>
  409f71:	cmp    r14d,eax
  409f74:	mov    r12,rax
  409f77:	jl     409ff0 <__sprintf_chk@plt+0x8d00>
  409f79:	mov    edx,eax
  409f7b:	mov    esi,0x1
  409f80:	mov    rdi,rbp
  409f83:	mov    ebx,eax
  409f85:	call   402d60 <__sprintf_chk@plt+0x1a70>
  409f8a:	cmp    r14d,r12d
  409f8d:	jle    409fbb <__sprintf_chk@plt+0x8ccb>
  409f8f:	nop
  409f90:	lea    r12d,[rbx+0x1]
  409f94:	mov    esi,0x1
  409f99:	mov    rdi,rbp
  409f9c:	mov    edx,r12d
  409f9f:	call   402d60 <__sprintf_chk@plt+0x1a70>
  409fa4:	mov    edx,ebx
  409fa6:	mov    esi,0x1
  409fab:	mov    rdi,rbp
  409fae:	call   407e60 <__sprintf_chk@plt+0x6b70>
  409fb3:	cmp    r13d,r12d
  409fb6:	mov    ebx,r12d
  409fb9:	jne    409f90 <__sprintf_chk@plt+0x8ca0>
  409fbb:	mov    rax,QWORD PTR [rbp+0x10]
  409fbf:	mov    edx,r14d
  409fc2:	mov    rdi,rbp
  409fc5:	mov    esi,0x1
  409fca:	mov    DWORD PTR [rax+0x8],0x0
  409fd1:	add    rax,0x10
  409fd5:	mov    QWORD PTR [rbp+0x10],rax
  409fd9:	call   407e60 <__sprintf_chk@plt+0x6b70>
  409fde:	pop    rbx
  409fdf:	mov    eax,0x1
  409fe4:	pop    rbp
  409fe5:	pop    r12
  409fe7:	pop    r13
  409fe9:	pop    r14
  409feb:	ret    
  409fec:	nop    DWORD PTR [rax+0x0]
  409ff0:	pop    rbx
  409ff1:	xor    eax,eax
  409ff3:	pop    rbp
  409ff4:	pop    r12
  409ff6:	pop    r13
  409ff8:	pop    r14
  409ffa:	ret    
  409ffb:	nop    DWORD PTR [rax+rax*1+0x0]
  40a000:	push   r13
  40a002:	push   r12
  40a004:	mov    edx,0x5
  40a009:	push   rbp
  40a00a:	push   rbx
  40a00b:	mov    rbp,rdi
  40a00e:	mov    esi,0x1
  40a013:	sub    rsp,0x8
  40a017:	call   409ed0 <__sprintf_chk@plt+0x8be0>
  40a01c:	mov    rbx,QWORD PTR [rbp+0x18]
  40a020:	mov    rax,QWORD PTR [rbp+0x10]
  40a024:	lea    rdx,[rbx+0x20]
  40a028:	cmp    rax,rdx
  40a02b:	jae    40a040 <__sprintf_chk@plt+0x8d50>
  40a02d:	nop    DWORD PTR [rax]
  40a030:	add    rax,0x10
  40a034:	mov    DWORD PTR [rax-0x8],0x0
  40a03b:	cmp    rax,rdx
  40a03e:	jb     40a030 <__sprintf_chk@plt+0x8d40>
  40a040:	mov    eax,DWORD PTR [rbx+0x18]
  40a043:	mov    QWORD PTR [rbp+0x10],rdx
  40a047:	mov    r12,QWORD PTR [rbx]
  40a04a:	test   eax,eax
  40a04c:	je     40a260 <__sprintf_chk@plt+0x8f70>
  40a052:	cmp    eax,0x3
  40a055:	je     40a1f8 <__sprintf_chk@plt+0x8f08>
  40a05b:	lea    r13,[rbx+0x10]
  40a05f:	mov    rdi,r12
  40a062:	mov    rsi,r13
  40a065:	call   4024b0 <__sprintf_chk@plt+0x11c0>
  40a06a:	mov    rcx,rax
  40a06d:	jmp    40a07d <__sprintf_chk@plt+0x8d8d>
  40a06f:	nop
  40a070:	mov    rcx,QWORD PTR [rcx+0x20]
  40a074:	test   rcx,rcx
  40a077:	je     40a1e0 <__sprintf_chk@plt+0x8ef0>
  40a07d:	lea    rdi,[rcx+0x10]
  40a081:	mov    rsi,r13
  40a084:	call   401860 <__sprintf_chk@plt+0x570>
  40a089:	test   eax,eax
  40a08b:	jne    40a0a8 <__sprintf_chk@plt+0x8db8>
  40a08d:	cmp    DWORD PTR [rcx+0x18],0xb
  40a091:	jne    40a070 <__sprintf_chk@plt+0x8d80>
  40a093:	cmp    DWORD PTR [rbx+0x18],0x3
  40a097:	jle    40a070 <__sprintf_chk@plt+0x8d80>
  40a099:	mov    rax,QWORD PTR [rbx+0x10]
  40a09d:	cmp    QWORD PTR [rcx+0x10],rax
  40a0a1:	jne    40a070 <__sprintf_chk@plt+0x8d80>
  40a0a3:	nop    DWORD PTR [rax+rax*1+0x0]
  40a0a8:	sub    rcx,QWORD PTR [r12+0x20]
  40a0ad:	mov    esi,DWORD PTR [r12+0x38]
  40a0b2:	mov    rax,rcx
  40a0b5:	sar    rax,0x3
  40a0b9:	imul   eax,eax,0xcccccccd
  40a0bf:	lea    eax,[rsi+rax*1+0x1]
  40a0c3:	cmp    eax,esi
  40a0c5:	jge    40a10b <__sprintf_chk@plt+0x8e1b>
  40a0c7:	mov    rdi,QWORD PTR [r12+0x18]
  40a0cc:	movsxd rdx,eax
  40a0cf:	shl    rdx,0x4
  40a0d3:	lea    rcx,[rdi+rdx*1]
  40a0d7:	lea    rdx,[rdi+rdx*1+0x10]
  40a0dc:	mov    r10d,DWORD PTR [rcx+0x8]
  40a0e0:	test   r10d,r10d
  40a0e3:	je     40a104 <__sprintf_chk@plt+0x8e14>
  40a0e5:	jmp    40a1a0 <__sprintf_chk@plt+0x8eb0>
  40a0ea:	nop    WORD PTR [rax+rax*1+0x0]
  40a0f0:	mov    rcx,rdx
  40a0f3:	add    rdx,0x10
  40a0f7:	mov    r9d,DWORD PTR [rdx-0x8]
  40a0fb:	test   r9d,r9d
  40a0fe:	jne    40a1a0 <__sprintf_chk@plt+0x8eb0>
  40a104:	add    eax,0x1
  40a107:	cmp    eax,esi
  40a109:	jne    40a0f0 <__sprintf_chk@plt+0x8e00>
  40a10b:	movzx  edx,BYTE PTR [r12+0xb]
  40a111:	sub    eax,esi
  40a113:	mov    esi,0x1
  40a118:	shlx   rsi,rsi,rdx
  40a11d:	cmp    eax,esi
  40a11f:	jge    40a177 <__sprintf_chk@plt+0x8e87>
  40a121:	mov    rdi,QWORD PTR [r12+0x20]
  40a126:	movsxd rdx,eax
  40a129:	lea    rcx,[rdx+rdx*4]
  40a12d:	lea    rcx,[rdi+rcx*8]
  40a131:	mov    r8d,DWORD PTR [rcx+0x8]
  40a135:	test   r8d,r8d
  40a138:	jne    40a240 <__sprintf_chk@plt+0x8f50>
  40a13e:	lea    rcx,[rdx+0x1]
  40a142:	sub    esi,0x1
  40a145:	sub    esi,eax
  40a147:	lea    rax,[rsi+rcx*1]
  40a14b:	lea    rdx,[rcx+rcx*4]
  40a14f:	lea    rax,[rax+rax*4]
  40a153:	lea    rdx,[rdi+rdx*8]
  40a157:	lea    rax,[rdi+rax*8]
  40a15b:	jmp    40a172 <__sprintf_chk@plt+0x8e82>
  40a15d:	nop    DWORD PTR [rax]
  40a160:	mov    rcx,rdx
  40a163:	add    rdx,0x28
  40a167:	mov    esi,DWORD PTR [rdx-0x20]
  40a16a:	test   esi,esi
  40a16c:	jne    40a240 <__sprintf_chk@plt+0x8f50>
  40a172:	cmp    rdx,rax
  40a175:	jne    40a160 <__sprintf_chk@plt+0x8e70>
  40a177:	mov    rax,QWORD PTR [rbp+0x10]
  40a17b:	mov    DWORD PTR [rax-0x8],0x0
  40a182:	mov    QWORD PTR [rbp+0x10],rax
  40a186:	add    rsp,0x8
  40a18a:	pop    rbx
  40a18b:	mov    eax,0x1
  40a190:	pop    rbp
  40a191:	pop    r12
  40a193:	pop    r13
  40a195:	ret    
  40a196:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a1a0:	vxorpd xmm0,xmm0,xmm0
  40a1a4:	add    eax,0x1
  40a1a7:	mov    DWORD PTR [rbx+0x18],0x3
  40a1ae:	vcvtsi2sd xmm0,xmm0,eax
  40a1b2:	vmovsd QWORD PTR [rbx+0x10],xmm0
  40a1b7:	mov    rax,QWORD PTR [rcx]
  40a1ba:	mov    QWORD PTR [rbx+0x20],rax
  40a1be:	mov    eax,DWORD PTR [rcx+0x8]
  40a1c1:	mov    DWORD PTR [rbx+0x28],eax
  40a1c4:	add    QWORD PTR [rbp+0x10],0x10
  40a1c9:	add    rsp,0x8
  40a1cd:	mov    eax,0x2
  40a1d2:	pop    rbx
  40a1d3:	pop    rbp
  40a1d4:	pop    r12
  40a1d6:	pop    r13
  40a1d8:	ret    
  40a1d9:	nop    DWORD PTR [rax+0x0]
  40a1e0:	lea    rsi,[rip+0xc75a]        # 416941 <__sprintf_chk@plt+0x15651>
  40a1e7:	mov    rdi,rbp
  40a1ea:	xor    eax,eax
  40a1ec:	call   405730 <__sprintf_chk@plt+0x4440>
  40a1f1:	nop    DWORD PTR [rax+0x0]
  40a1f8:	vmovsd xmm0,QWORD PTR [rbx+0x10]
  40a1fd:	mov    ecx,0x0
  40a202:	vxorpd xmm1,xmm1,xmm1
  40a206:	vcvttsd2si eax,xmm0
  40a20a:	vcvtsi2sd xmm1,xmm1,eax
  40a20e:	vucomisd xmm1,xmm0
  40a212:	setnp  dl
  40a215:	cmovne edx,ecx
  40a218:	test   dl,dl
  40a21a:	je     40a05b <__sprintf_chk@plt+0x8d6b>
  40a220:	test   eax,eax
  40a222:	jle    40a05b <__sprintf_chk@plt+0x8d6b>
  40a228:	mov    esi,DWORD PTR [r12+0x38]
  40a22d:	cmp    eax,esi
  40a22f:	jg     40a05b <__sprintf_chk@plt+0x8d6b>
  40a235:	jmp    40a0c3 <__sprintf_chk@plt+0x8dd3>
  40a23a:	nop    WORD PTR [rax+rax*1+0x0]
  40a240:	mov    rax,QWORD PTR [rcx+0x10]
  40a244:	mov    QWORD PTR [rbx+0x10],rax
  40a248:	mov    eax,DWORD PTR [rcx+0x18]
  40a24b:	mov    DWORD PTR [rbx+0x18],eax
  40a24e:	mov    rax,QWORD PTR [rcx]
  40a251:	mov    QWORD PTR [rbx+0x20],rax
  40a255:	mov    eax,DWORD PTR [rcx+0x8]
  40a258:	mov    DWORD PTR [rbx+0x28],eax
  40a25b:	jmp    40a1c4 <__sprintf_chk@plt+0x8ed4>
  40a260:	mov    esi,DWORD PTR [r12+0x38]
  40a265:	jmp    40a0c3 <__sprintf_chk@plt+0x8dd3>
  40a26a:	nop    WORD PTR [rax+rax*1+0x0]
  40a270:	push   rbx
  40a271:	mov    edx,0x5
  40a276:	mov    rbx,rdi
  40a279:	mov    esi,0x1
  40a27e:	call   409ed0 <__sprintf_chk@plt+0x8be0>
  40a283:	mov    esi,0xffffd8ed
  40a288:	mov    rdi,rbx
  40a28b:	call   402b20 <__sprintf_chk@plt+0x1830>
  40a290:	mov    rdx,QWORD PTR [rbx+0x10]
  40a294:	mov    rcx,QWORD PTR [rax]
  40a297:	mov    eax,DWORD PTR [rax+0x8]
  40a29a:	mov    QWORD PTR [rdx],rcx
  40a29d:	lea    rcx,[rdx+0x10]
  40a2a1:	mov    DWORD PTR [rdx+0x8],eax
  40a2a4:	mov    rax,QWORD PTR [rbx+0x18]
  40a2a8:	cmp    rax,rcx
  40a2ab:	jae    40a2d0 <__sprintf_chk@plt+0x8fe0>
  40a2ad:	mov    ecx,DWORD PTR [rax+0x8]
  40a2b0:	mov    rax,QWORD PTR [rax]
  40a2b3:	add    rdx,0x30
  40a2b7:	mov    DWORD PTR [rdx-0x18],ecx
  40a2ba:	mov    DWORD PTR [rdx-0x8],0x0
  40a2c1:	mov    QWORD PTR [rdx-0x20],rax
  40a2c5:	mov    QWORD PTR [rbx+0x10],rdx
  40a2c9:	mov    eax,0x3
  40a2ce:	pop    rbx
  40a2cf:	ret    
  40a2d0:	xor    ecx,ecx
  40a2d2:	lea    rax,[rip+0xc3f7]        # 4166d0 <__sprintf_chk@plt+0x153e0>
  40a2d9:	jmp    40a2b0 <__sprintf_chk@plt+0x8fc0>
  40a2db:	nop    DWORD PTR [rax+rax*1+0x0]
  40a2e0:	push   rbp
  40a2e1:	push   rbx
  40a2e2:	mov    esi,0x2
  40a2e7:	mov    rbx,rdi
  40a2ea:	sub    rsp,0x8
  40a2ee:	call   409e00 <__sprintf_chk@plt+0x8b10>
  40a2f3:	mov    edx,0x5
  40a2f8:	mov    esi,0x1
  40a2fd:	mov    rdi,rbx
  40a300:	mov    rbp,rax
  40a303:	call   409ed0 <__sprintf_chk@plt+0x8be0>
  40a308:	mov    rax,QWORD PTR [rbx+0x10]
  40a30c:	vxorpd xmm0,xmm0,xmm0
  40a310:	lea    edx,[rbp+0x1]
  40a313:	mov    esi,0x1
  40a318:	mov    rdi,rbx
  40a31b:	vcvtsi2sd xmm0,xmm0,edx
  40a31f:	mov    DWORD PTR [rax+0x8],0x3
  40a326:	vmovsd QWORD PTR [rax],xmm0
  40a32a:	add    QWORD PTR [rbx+0x10],0x10
  40a32f:	call   402d60 <__sprintf_chk@plt+0x1a70>
  40a334:	mov    rax,QWORD PTR [rbx+0x10]
  40a338:	lea    rdx,[rip+0xc3a1]        # 4166e0 <__sprintf_chk@plt+0x153f0>
  40a33f:	cmp    rax,rdx
  40a342:	je     40a360 <__sprintf_chk@plt+0x9070>
  40a344:	mov    eax,DWORD PTR [rax-0x8]
  40a347:	mov    edx,0x2
  40a34c:	test   eax,eax
  40a34e:	cmovne eax,edx
  40a351:	add    rsp,0x8
  40a355:	pop    rbx
  40a356:	pop    rbp
  40a357:	ret    
  40a358:	nop    DWORD PTR [rax+rax*1+0x0]
  40a360:	add    rsp,0x8
  40a364:	mov    eax,0x2
  40a369:	pop    rbx
  40a36a:	pop    rbp
  40a36b:	ret    
  40a36c:	nop    DWORD PTR [rax+0x0]
  40a370:	push   rbx
  40a371:	mov    edx,0x5
  40a376:	mov    rbx,rdi
  40a379:	mov    esi,0x1
  40a37e:	call   409ed0 <__sprintf_chk@plt+0x8be0>
  40a383:	mov    esi,0xffffd8ed
  40a388:	mov    rdi,rbx
  40a38b:	call   402b20 <__sprintf_chk@plt+0x1830>
  40a390:	mov    rdx,QWORD PTR [rbx+0x10]
  40a394:	mov    rcx,QWORD PTR [rax]
  40a397:	mov    eax,DWORD PTR [rax+0x8]
  40a39a:	mov    QWORD PTR [rdx],rcx
  40a39d:	lea    rcx,[rdx+0x10]
  40a3a1:	mov    DWORD PTR [rdx+0x8],eax
  40a3a4:	mov    rax,QWORD PTR [rbx+0x18]
  40a3a8:	cmp    rax,rcx
  40a3ab:	jae    40a3e0 <__sprintf_chk@plt+0x90f0>
  40a3ad:	mov    ecx,DWORD PTR [rax+0x8]
  40a3b0:	mov    rax,QWORD PTR [rax]
  40a3b3:	mov    DWORD PTR [rdx+0x18],ecx
  40a3b6:	mov    QWORD PTR [rdx+0x10],rax
  40a3ba:	lea    rax,[rdx+0x20]
  40a3be:	mov    QWORD PTR [rbx+0x10],rax
  40a3c2:	mov    QWORD PTR [rdx+0x20],0x0
  40a3ca:	mov    eax,0x3
  40a3cf:	mov    DWORD PTR [rdx+0x28],0x3
  40a3d6:	add    QWORD PTR [rbx+0x10],0x10
  40a3db:	pop    rbx
  40a3dc:	ret    
  40a3dd:	nop    DWORD PTR [rax]
  40a3e0:	xor    ecx,ecx
  40a3e2:	lea    rax,[rip+0xc2e7]        # 4166d0 <__sprintf_chk@plt+0x153e0>
  40a3e9:	jmp    40a3b0 <__sprintf_chk@plt+0x90c0>
  40a3eb:	nop    DWORD PTR [rax+rax*1+0x0]
  40a3f0:	push   rbp
  40a3f1:	push   rbx
  40a3f2:	mov    esi,0x1
  40a3f7:	mov    rbx,rdi
  40a3fa:	sub    rsp,0x8
  40a3fe:	call   402d00 <__sprintf_chk@plt+0x1a10>
  40a403:	test   rax,rax
  40a406:	je     40a450 <__sprintf_chk@plt+0x9160>
  40a408:	mov    rdi,rbx
  40a40b:	mov    rbp,rax
  40a40e:	call   4032f0 <__sprintf_chk@plt+0x2000>
  40a413:	test   eax,eax
  40a415:	je     40a450 <__sprintf_chk@plt+0x9160>
  40a417:	lea    rdx,[rip+0xc539]        # 416957 <__sprintf_chk@plt+0x15667>
  40a41e:	mov    esi,0xffffd8f0
  40a423:	mov    rdi,rbx
  40a426:	call   408430 <__sprintf_chk@plt+0x7140>
  40a42b:	mov    edx,0xfffffffe
  40a430:	mov    esi,0xffffffff
  40a435:	mov    rdi,rbx
  40a438:	call   402c90 <__sprintf_chk@plt+0x19a0>
  40a43d:	test   eax,eax
  40a43f:	je     40a450 <__sprintf_chk@plt+0x9160>
  40a441:	sub    QWORD PTR [rbx+0x10],0x20
  40a446:	add    rsp,0x8
  40a44a:	mov    rax,rbp
  40a44d:	pop    rbx
  40a44e:	pop    rbp
  40a44f:	ret    
  40a450:	lea    rdx,[rip+0xc500]        # 416957 <__sprintf_chk@plt+0x15667>
  40a457:	mov    esi,0x1
  40a45c:	mov    rdi,rbx
  40a45f:	call   409960 <__sprintf_chk@plt+0x8670>
  40a464:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40a46f:	nop
  40a470:	push   rbp
  40a471:	push   rbx
  40a472:	mov    rbx,rdi
  40a475:	sub    rsp,0x8
  40a479:	call   40a3f0 <__sprintf_chk@plt+0x9100>
  40a47e:	mov    rdi,QWORD PTR [rax]
  40a481:	mov    rbp,rax
  40a484:	call   4010e0 <fclose@plt>
  40a489:	xor    esi,esi
  40a48b:	test   eax,eax
  40a48d:	mov    QWORD PTR [rbp+0x0],0x0
  40a495:	sete   sil
  40a499:	add    rsp,0x8
  40a49d:	mov    rdi,rbx
  40a4a0:	pop    rbx
  40a4a1:	pop    rbp
  40a4a2:	xor    edx,edx
  40a4a4:	jmp    409370 <__sprintf_chk@plt+0x8080>
  40a4a9:	nop    DWORD PTR [rax+0x0]
  40a4b0:	push   rbx
  40a4b1:	mov    rbx,rdi
  40a4b4:	call   40a3f0 <__sprintf_chk@plt+0x9100>
  40a4b9:	mov    rdi,rbx
  40a4bc:	mov    QWORD PTR [rax],0x0
  40a4c3:	xor    edx,edx
  40a4c5:	pop    rbx
  40a4c6:	xor    esi,esi
  40a4c8:	jmp    409370 <__sprintf_chk@plt+0x8080>
  40a4cd:	nop    DWORD PTR [rax]
  40a4d0:	push   rbx
  40a4d1:	mov    rbx,rdi
  40a4d4:	call   40a3f0 <__sprintf_chk@plt+0x9100>
  40a4d9:	cmp    QWORD PTR [rax],0x0
  40a4dd:	je     40a4e7 <__sprintf_chk@plt+0x91f7>
  40a4df:	mov    rdi,rbx
  40a4e2:	call   4084b0 <__sprintf_chk@plt+0x71c0>
  40a4e7:	xor    eax,eax
  40a4e9:	pop    rbx
  40a4ea:	ret    
  40a4eb:	nop    DWORD PTR [rax+rax*1+0x0]
  40a4f0:	sub    rsp,0x8
  40a4f4:	mov    r8,rdi
  40a4f7:	mov    r9d,esi
  40a4fa:	call   402b60 <__sprintf_chk@plt+0x1870>
  40a4ff:	lea    rdx,[rip+0xc1ca]        # 4166d0 <__sprintf_chk@plt+0x153e0>
  40a506:	cmp    rax,rdx
  40a509:	je     40a520 <__sprintf_chk@plt+0x9230>
  40a50b:	cmp    DWORD PTR [rax+0x8],0xffffffff
  40a50f:	je     40a520 <__sprintf_chk@plt+0x9230>
  40a511:	add    rsp,0x8
  40a515:	ret    
  40a516:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a520:	lea    rdx,[rip+0xc436]        # 41695d <__sprintf_chk@plt+0x1566d>
  40a527:	mov    esi,r9d
  40a52a:	mov    rdi,r8
  40a52d:	call   4098a0 <__sprintf_chk@plt+0x85b0>
  40a532:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40a53d:	nop    DWORD PTR [rax]
  40a540:	push   rbx
  40a541:	mov    edx,0x5
  40a546:	mov    rbx,rdi
  40a549:	mov    esi,0x1
  40a54e:	call   409ed0 <__sprintf_chk@plt+0x8be0>
  40a553:	mov    esi,0x2
  40a558:	mov    rdi,rbx
  40a55b:	call   40a4f0 <__sprintf_chk@plt+0x9200>
  40a560:	mov    rcx,QWORD PTR [rbx+0x18]
  40a564:	mov    rax,QWORD PTR [rbx+0x10]
  40a568:	lea    rdx,[rcx+0x20]
  40a56c:	cmp    rdx,rax
  40a56f:	jbe    40a588 <__sprintf_chk@plt+0x9298>
  40a571:	nop    DWORD PTR [rax+0x0]
  40a578:	add    rax,0x10
  40a57c:	mov    DWORD PTR [rax-0x8],0x0
  40a583:	cmp    rax,rdx
  40a586:	jb     40a578 <__sprintf_chk@plt+0x9288>
  40a588:	mov    QWORD PTR [rbx+0x10],rdx
  40a58c:	mov    rdi,rbx
  40a58f:	mov    esi,0x1
  40a594:	call   402d30 <__sprintf_chk@plt+0x1a40>
  40a599:	mov    eax,0x1
  40a59e:	pop    rbx
  40a59f:	ret    
  40a5a0:	push   rbx
  40a5a1:	mov    esi,0x1
  40a5a6:	mov    rbx,rdi
  40a5a9:	sub    rsp,0x20
  40a5ad:	mov    rax,QWORD PTR fs:0x28
  40a5b6:	mov    QWORD PTR [rsp+0x18],rax
  40a5bb:	xor    eax,eax
  40a5bd:	call   40a4f0 <__sprintf_chk@plt+0x9200>
  40a5c2:	mov    rdx,QWORD PTR [rbx+0x10]
  40a5c6:	lea    rsi,[rip+0x4103]        # 40e6d0 <__sprintf_chk@plt+0xd3e0>
  40a5cd:	xor    r8d,r8d
  40a5d0:	mov    rdi,rbx
  40a5d3:	mov    DWORD PTR [rsp+0x8],0xffffffff
  40a5db:	mov    rax,rdx
  40a5de:	sub    rax,QWORD PTR [rbx+0x18]
  40a5e2:	sar    rax,0x4
  40a5e6:	sub    eax,0x1
  40a5e9:	cdqe   
  40a5eb:	shl    rax,0x4
  40a5ef:	sub    rdx,rax
  40a5f2:	lea    rcx,[rdx-0x10]
  40a5f6:	mov    rdx,rsp
  40a5f9:	mov    QWORD PTR [rsp],rcx
  40a5fd:	sub    rcx,QWORD PTR [rbx+0x40]
  40a601:	call   405d60 <__sprintf_chk@plt+0x4a70>
  40a606:	mov    rcx,QWORD PTR [rbx+0x28]
  40a60a:	mov    rdx,QWORD PTR [rbx+0x10]
  40a60e:	cmp    rdx,QWORD PTR [rcx+0x10]
  40a612:	jb     40a61c <__sprintf_chk@plt+0x932c>
  40a614:	mov    QWORD PTR [rcx+0x10],rdx
  40a618:	mov    rdx,QWORD PTR [rbx+0x10]
  40a61c:	test   eax,eax
  40a61e:	mov    DWORD PTR [rdx+0x8],0x1
  40a625:	mov    esi,0x1
  40a62a:	sete   al
  40a62d:	mov    rdi,rbx
  40a630:	movzx  eax,al
  40a633:	mov    DWORD PTR [rdx],eax
  40a635:	add    QWORD PTR [rbx+0x10],0x10
  40a63a:	call   402c50 <__sprintf_chk@plt+0x1960>
  40a63f:	mov    rax,QWORD PTR [rbx+0x10]
  40a643:	sub    rax,QWORD PTR [rbx+0x18]
  40a647:	sar    rax,0x4
  40a64b:	mov    rsi,QWORD PTR [rsp+0x18]
  40a650:	xor    rsi,QWORD PTR fs:0x28
  40a659:	jne    40a661 <__sprintf_chk@plt+0x9371>
  40a65b:	add    rsp,0x20
  40a65f:	pop    rbx
  40a660:	ret    
  40a661:	call   401100 <__stack_chk_fail@plt>
  40a666:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a670:	push   r14
  40a672:	push   r13
  40a674:	mov    edx,0x5
  40a679:	push   r12
  40a67b:	push   rbp
  40a67c:	mov    esi,0x1
  40a681:	push   rbx
  40a682:	mov    rbp,rdi
  40a685:	call   409ed0 <__sprintf_chk@plt+0x8be0>
  40a68a:	mov    esi,0x1
  40a68f:	mov    rdi,rbp
  40a692:	call   405c70 <__sprintf_chk@plt+0x4980>
  40a697:	lea    ebx,[rax+0x1]
  40a69a:	mov    rax,QWORD PTR [rbp+0x10]
  40a69e:	sub    rax,QWORD PTR [rbp+0x18]
  40a6a2:	sar    rax,0x4
  40a6a6:	cmp    eax,0x2
  40a6a9:	je     40a6fe <__sprintf_chk@plt+0x940e>
  40a6ab:	cmp    eax,0x3
  40a6ae:	jne    40a720 <__sprintf_chk@plt+0x9430>
  40a6b0:	mov    esi,0x2
  40a6b5:	mov    rdi,rbp
  40a6b8:	call   409e00 <__sprintf_chk@plt+0x8b10>
  40a6bd:	cmp    ebx,eax
  40a6bf:	mov    r14,rax
  40a6c2:	mov    r13d,eax
  40a6c5:	jl     40a6fb <__sprintf_chk@plt+0x940b>
  40a6c7:	jle    40a6fb <__sprintf_chk@plt+0x940b>
  40a6c9:	nop    DWORD PTR [rax+0x0]
  40a6d0:	lea    r12d,[rbx-0x1]
  40a6d4:	mov    esi,0x1
  40a6d9:	mov    rdi,rbp
  40a6dc:	mov    edx,r12d
  40a6df:	call   402d60 <__sprintf_chk@plt+0x1a70>
  40a6e4:	mov    edx,ebx
  40a6e6:	mov    esi,0x1
  40a6eb:	mov    rdi,rbp
  40a6ee:	call   407e60 <__sprintf_chk@plt+0x6b70>
  40a6f3:	cmp    r13d,r12d
  40a6f6:	mov    ebx,r12d
  40a6f9:	jl     40a6d0 <__sprintf_chk@plt+0x93e0>
  40a6fb:	mov    ebx,r14d
  40a6fe:	mov    edx,ebx
  40a700:	mov    rdi,rbp
  40a703:	mov    esi,0x1
  40a708:	call   407e60 <__sprintf_chk@plt+0x6b70>
  40a70d:	pop    rbx
  40a70e:	xor    eax,eax
  40a710:	pop    rbp
  40a711:	pop    r12
  40a713:	pop    r13
  40a715:	pop    r14
  40a717:	ret    
  40a718:	nop    DWORD PTR [rax+rax*1+0x0]
  40a720:	lea    rsi,[rip+0xc9c1]        # 4170e8 <__sprintf_chk@plt+0x15df8>
  40a727:	mov    rdi,rbp
  40a72a:	xor    eax,eax
  40a72c:	call   409640 <__sprintf_chk@plt+0x8350>
  40a731:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40a73c:	nop    DWORD PTR [rax+0x0]
  40a740:	push   r14
  40a742:	push   r13
  40a744:	mov    edx,0x5
  40a749:	push   r12
  40a74b:	push   rbp
  40a74c:	mov    esi,0x1
  40a751:	push   rbx
  40a752:	mov    rbx,rdi
  40a755:	call   409ed0 <__sprintf_chk@plt+0x8be0>
  40a75a:	mov    edx,0x1
  40a75f:	mov    esi,0x2
  40a764:	mov    rdi,rbx
  40a767:	call   409e30 <__sprintf_chk@plt+0x8b40>
  40a76c:	mov    r13,rax
  40a76f:	mov    rax,QWORD PTR [rbx+0x18]
  40a773:	lea    rdx,[rax+0x20]
  40a777:	cmp    rdx,QWORD PTR [rbx+0x10]
  40a77b:	jb     40a7a8 <__sprintf_chk@plt+0x94b8>
  40a77d:	mov    esi,0x1
  40a782:	mov    rdi,rbx
  40a785:	xor    r14d,r14d
  40a788:	call   405c70 <__sprintf_chk@plt+0x4980>
  40a78d:	mov    r12d,eax
  40a790:	cmp    r13d,r12d
  40a793:	jle    40a7d3 <__sprintf_chk@plt+0x94e3>
  40a795:	pop    rbx
  40a796:	mov    eax,r14d
  40a799:	pop    rbp
  40a79a:	pop    r12
  40a79c:	pop    r13
  40a79e:	pop    r14
  40a7a0:	ret    
  40a7a1:	nop    DWORD PTR [rax+0x0]
  40a7a8:	lea    rcx,[rip+0xbf21]        # 4166d0 <__sprintf_chk@plt+0x153e0>
  40a7af:	cmp    rdx,rcx
  40a7b2:	je     40a77d <__sprintf_chk@plt+0x948d>
  40a7b4:	mov    eax,DWORD PTR [rax+0x28]
  40a7b7:	test   eax,eax
  40a7b9:	jle    40a77d <__sprintf_chk@plt+0x948d>
  40a7bb:	mov    esi,0x3
  40a7c0:	mov    rdi,rbx
  40a7c3:	xor    r14d,r14d
  40a7c6:	call   409e00 <__sprintf_chk@plt+0x8b10>
  40a7cb:	mov    r12d,eax
  40a7ce:	cmp    r13d,r12d
  40a7d1:	jg     40a795 <__sprintf_chk@plt+0x94a5>
  40a7d3:	mov    r14d,r12d
  40a7d6:	mov    rdi,rbx
  40a7d9:	sub    r14d,r13d
  40a7dc:	add    r14d,0x1
  40a7e0:	mov    esi,r14d
  40a7e3:	call   406970 <__sprintf_chk@plt+0x5680>
  40a7e8:	test   eax,eax
  40a7ea:	jne    40a800 <__sprintf_chk@plt+0x9510>
  40a7ec:	lea    rsi,[rip+0xc179]        # 41696c <__sprintf_chk@plt+0x1567c>
  40a7f3:	mov    rdi,rbx
  40a7f6:	xor    eax,eax
  40a7f8:	call   409640 <__sprintf_chk@plt+0x8350>
  40a7fd:	nop    DWORD PTR [rax]
  40a800:	mov    edx,r13d
  40a803:	mov    esi,0x1
  40a808:	mov    rdi,rbx
  40a80b:	call   402d60 <__sprintf_chk@plt+0x1a70>
  40a810:	cmp    r13d,r12d
  40a813:	lea    ebp,[r13+0x1]
  40a817:	jge    40a795 <__sprintf_chk@plt+0x94a5>
  40a81d:	add    r12d,0x1
  40a821:	nop    DWORD PTR [rax+0x0]
  40a828:	mov    edx,ebp
  40a82a:	mov    esi,0x1
  40a82f:	mov    rdi,rbx
  40a832:	add    ebp,0x1
  40a835:	call   402d60 <__sprintf_chk@plt+0x1a70>
  40a83a:	cmp    r12d,ebp
  40a83d:	jne    40a828 <__sprintf_chk@plt+0x9538>
  40a83f:	pop    rbx
  40a840:	mov    eax,r14d
  40a843:	pop    rbp
  40a844:	pop    r12
  40a846:	pop    r13
  40a848:	pop    r14
  40a84a:	ret    
  40a84b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a850:	push   rbx
  40a851:	mov    rbx,rdi
  40a854:	call   40a3f0 <__sprintf_chk@plt+0x9100>
  40a859:	mov    rax,QWORD PTR [rax]
  40a85c:	test   rax,rax
  40a85f:	je     40a868 <__sprintf_chk@plt+0x9578>
  40a861:	pop    rbx
  40a862:	ret    
  40a863:	nop    DWORD PTR [rax+rax*1+0x0]
  40a868:	lea    rsi,[rip+0xc118]        # 416987 <__sprintf_chk@plt+0x15697>
  40a86f:	mov    rdi,rbx
  40a872:	call   409640 <__sprintf_chk@plt+0x8350>
  40a877:	nop    WORD PTR [rax+rax*1+0x0]
  40a880:	push   rbx
  40a881:	mov    rax,QWORD PTR [rdi+0x18]
  40a885:	mov    rbx,rdi
  40a888:	cmp    rax,QWORD PTR [rdi+0x10]
  40a88c:	jb     40a8b8 <__sprintf_chk@plt+0x95c8>
  40a88e:	mov    edx,0x2
  40a893:	mov    esi,0xffffd8ef
  40a898:	mov    rdi,rbx
  40a89b:	call   402d60 <__sprintf_chk@plt+0x1a70>
  40a8a0:	mov    rdi,rbx
  40a8a3:	call   40a850 <__sprintf_chk@plt+0x9560>
  40a8a8:	mov    rdi,rbx
  40a8ab:	pop    rbx
  40a8ac:	jmp    4084b0 <__sprintf_chk@plt+0x71c0>
  40a8b1:	nop    DWORD PTR [rax+0x0]
  40a8b8:	lea    rdx,[rip+0xbe11]        # 4166d0 <__sprintf_chk@plt+0x153e0>
  40a8bf:	cmp    rax,rdx
  40a8c2:	je     40a88e <__sprintf_chk@plt+0x959e>
  40a8c4:	cmp    DWORD PTR [rax+0x8],0xffffffff
  40a8c8:	jne    40a8a0 <__sprintf_chk@plt+0x95b0>
  40a8ca:	jmp    40a88e <__sprintf_chk@plt+0x959e>
  40a8cc:	nop    DWORD PTR [rax+0x0]
  40a8d0:	push   rbx
  40a8d1:	mov    rbx,rdi
  40a8d4:	call   40a850 <__sprintf_chk@plt+0x9560>
  40a8d9:	mov    rdi,rax
  40a8dc:	call   4011d0 <fflush@plt>
  40a8e1:	mov    rdi,rbx
  40a8e4:	xor    esi,esi
  40a8e6:	test   eax,eax
  40a8e8:	pop    rbx
  40a8e9:	sete   sil
  40a8ed:	xor    edx,edx
  40a8ef:	jmp    409370 <__sprintf_chk@plt+0x8080>
  40a8f4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40a8ff:	nop
  40a900:	push   rbp
  40a901:	push   rbx
  40a902:	mov    edx,0x5
  40a907:	mov    rbx,rdi
  40a90a:	mov    esi,0x2
  40a90f:	sub    rsp,0x88
  40a916:	mov    rax,QWORD PTR fs:0x28
  40a91f:	mov    QWORD PTR [rsp+0x78],rax
  40a924:	xor    eax,eax
  40a926:	call   409ed0 <__sprintf_chk@plt+0x8be0>
  40a92b:	mov    rdx,QWORD PTR [rbx+0x18]
  40a92f:	mov    rax,QWORD PTR [rbx+0x10]
  40a933:	cmp    rdx,rax
  40a936:	jae    40a94e <__sprintf_chk@plt+0x965e>
  40a938:	lea    rcx,[rip+0xbd91]        # 4166d0 <__sprintf_chk@plt+0x153e0>
  40a93f:	cmp    rdx,rcx
  40a942:	je     40a94e <__sprintf_chk@plt+0x965e>
  40a944:	cmp    DWORD PTR [rdx+0x8],0x6
  40a948:	je     40aaf0 <__sprintf_chk@plt+0x9800>
  40a94e:	mov    esi,0x1
  40a953:	mov    rdi,rbx
  40a956:	call   409e00 <__sprintf_chk@plt+0x8b10>
  40a95b:	test   eax,eax
  40a95d:	mov    rbp,rax
  40a960:	js     40aad8 <__sprintf_chk@plt+0x97e8>
  40a966:	mov    rdi,QWORD PTR [rbx+0x28]
  40a96a:	lea    rcx,[rsp+0x74]
  40a96f:	lea    rsi,[rbx+0x50]
  40a973:	mov    edx,eax
  40a975:	call   4029f0 <__sprintf_chk@plt+0x1700>
  40a97a:	test   eax,eax
  40a97c:	je     40aa40 <__sprintf_chk@plt+0x9750>
  40a982:	lea    rsi,[rip+0xc0f0]        # 416a79 <__sprintf_chk@plt+0x15789>
  40a989:	mov    rdx,rsp
  40a98c:	mov    rdi,rbx
  40a98f:	call   407ee0 <__sprintf_chk@plt+0x6bf0>
  40a994:	mov    rax,QWORD PTR [rbx+0x10]
  40a998:	lea    rcx,[rip+0xbd41]        # 4166e0 <__sprintf_chk@plt+0x153f0>
  40a99f:	cmp    rax,rcx
  40a9a2:	je     40a9af <__sprintf_chk@plt+0x96bf>
  40a9a4:	mov    edx,DWORD PTR [rax-0x8]
  40a9a7:	test   edx,edx
  40a9a9:	je     40aaa0 <__sprintf_chk@plt+0x97b0>
  40a9af:	mov    rdx,QWORD PTR [rbx+0x18]
  40a9b3:	lea    rcx,[rdx+0x10]
  40a9b7:	cmp    rax,rcx
  40a9ba:	jbe    40aa30 <__sprintf_chk@plt+0x9740>
  40a9bc:	mov    esi,DWORD PTR [rdx+0x18]
  40a9bf:	mov    rdx,QWORD PTR [rcx]
  40a9c2:	add    rax,0x10
  40a9c6:	mov    DWORD PTR [rax-0x8],esi
  40a9c9:	mov    rdi,rbx
  40a9cc:	mov    esi,0x1
  40a9d1:	mov    QWORD PTR [rax-0x10],rdx
  40a9d5:	mov    QWORD PTR [rbx+0x10],rax
  40a9d9:	call   402ff0 <__sprintf_chk@plt+0x1d00>
  40a9de:	test   eax,eax
  40a9e0:	je     40a9fb <__sprintf_chk@plt+0x970b>
  40a9e2:	mov    esi,0x1
  40a9e7:	mov    rdi,rbx
  40a9ea:	call   402f90 <__sprintf_chk@plt+0x1ca0>
  40a9ef:	vucomisd xmm0,QWORD PTR [rip+0xca69]        # 417460 <__sprintf_chk@plt+0x16170>
  40a9f7:	jp     40a9fb <__sprintf_chk@plt+0x970b>
  40a9f9:	je     40aa58 <__sprintf_chk@plt+0x9768>
  40a9fb:	mov    rax,QWORD PTR [rbx+0x10]
  40a9ff:	cmp    DWORD PTR [rax-0x18],0x6
  40aa03:	je     40aac0 <__sprintf_chk@plt+0x97d0>
  40aa09:	mov    rdi,rbx
  40aa0c:	call   403200 <__sprintf_chk@plt+0x1f10>
  40aa11:	test   eax,eax
  40aa13:	jne    40aab8 <__sprintf_chk@plt+0x97c8>
  40aa19:	lea    rsi,[rip+0xc728]        # 417148 <__sprintf_chk@plt+0x15e58>
  40aa20:	mov    rdi,rbx
  40aa23:	xor    eax,eax
  40aa25:	call   409640 <__sprintf_chk@plt+0x8350>
  40aa2a:	nop    WORD PTR [rax+rax*1+0x0]
  40aa30:	xor    esi,esi
  40aa32:	lea    rcx,[rip+0xbc97]        # 4166d0 <__sprintf_chk@plt+0x153e0>
  40aa39:	jmp    40a9bf <__sprintf_chk@plt+0x96cf>
  40aa3b:	nop    DWORD PTR [rax+rax*1+0x0]
  40aa40:	lea    rdx,[rip+0xbf78]        # 4169bf <__sprintf_chk@plt+0x156cf>
  40aa47:	mov    esi,0x1
  40aa4c:	mov    rdi,rbx
  40aa4f:	call   4098a0 <__sprintf_chk@plt+0x85b0>
  40aa54:	nop    DWORD PTR [rax+0x0]
  40aa58:	mov    rax,QWORD PTR [rbx+0x10]
  40aa5c:	mov    esi,0xfffffffe
  40aa61:	mov    rdi,rbx
  40aa64:	mov    QWORD PTR [rax],rbx
  40aa67:	mov    DWORD PTR [rax+0x8],0x8
  40aa6e:	add    QWORD PTR [rbx+0x10],0x10
  40aa73:	call   402c50 <__sprintf_chk@plt+0x1960>
  40aa78:	mov    rdi,rbx
  40aa7b:	call   403200 <__sprintf_chk@plt+0x1f10>
  40aa80:	xor    eax,eax
  40aa82:	mov    rcx,QWORD PTR [rsp+0x78]
  40aa87:	xor    rcx,QWORD PTR fs:0x28
  40aa90:	jne    40ab07 <__sprintf_chk@plt+0x9817>
  40aa92:	add    rsp,0x88
  40aa99:	pop    rbx
  40aa9a:	pop    rbp
  40aa9b:	ret    
  40aa9c:	nop    DWORD PTR [rax+0x0]
  40aaa0:	lea    rsi,[rip+0xc669]        # 417110 <__sprintf_chk@plt+0x15e20>
  40aaa7:	mov    edx,ebp
  40aaa9:	mov    rdi,rbx
  40aaac:	xor    eax,eax
  40aaae:	call   409640 <__sprintf_chk@plt+0x8350>
  40aab3:	nop    DWORD PTR [rax+rax*1+0x0]
  40aab8:	mov    eax,0x1
  40aabd:	jmp    40aa82 <__sprintf_chk@plt+0x9792>
  40aabf:	nop
  40aac0:	mov    rax,QWORD PTR [rax-0x20]
  40aac4:	cmp    BYTE PTR [rax+0xa],0x0
  40aac8:	je     40aa09 <__sprintf_chk@plt+0x9719>
  40aace:	jmp    40aa19 <__sprintf_chk@plt+0x9729>
  40aad3:	nop    DWORD PTR [rax+rax*1+0x0]
  40aad8:	lea    rdx,[rip+0xbec5]        # 4169a4 <__sprintf_chk@plt+0x156b4>
  40aadf:	mov    esi,0x1
  40aae4:	mov    rdi,rbx
  40aae7:	call   4098a0 <__sprintf_chk@plt+0x85b0>
  40aaec:	nop    DWORD PTR [rax+0x0]
  40aaf0:	mov    rcx,QWORD PTR [rdx]
  40aaf3:	add    rax,0x10
  40aaf7:	mov    DWORD PTR [rax-0x8],0x6
  40aafe:	mov    QWORD PTR [rax-0x10],rcx
  40ab02:	jmp    40a9b3 <__sprintf_chk@plt+0x96c3>
  40ab07:	call   401100 <__stack_chk_fail@plt>
  40ab0c:	nop    DWORD PTR [rax+0x0]
  40ab10:	push   rbp
  40ab11:	push   rbx
  40ab12:	mov    edx,0x1
  40ab17:	mov    rbx,rdi
  40ab1a:	mov    esi,0x2
  40ab1f:	sub    rsp,0x8
  40ab23:	call   409e30 <__sprintf_chk@plt+0x8b40>
  40ab28:	mov    rdi,QWORD PTR [rbx+0x18]
  40ab2c:	mov    rdx,QWORD PTR [rbx+0x10]
  40ab30:	lea    rcx,[rdi+0x10]
  40ab34:	cmp    rcx,rdx
  40ab37:	jbe    40ab50 <__sprintf_chk@plt+0x9860>
  40ab39:	nop    DWORD PTR [rax+0x0]
  40ab40:	add    rdx,0x10
  40ab44:	mov    DWORD PTR [rdx-0x8],0x0
  40ab4b:	cmp    rdx,rcx
  40ab4e:	jb     40ab40 <__sprintf_chk@plt+0x9850>
  40ab50:	lea    rbp,[rip+0xbb79]        # 4166d0 <__sprintf_chk@plt+0x153e0>
  40ab57:	mov    QWORD PTR [rbx+0x10],rcx
  40ab5b:	cmp    rdi,rbp
  40ab5e:	je     40aba8 <__sprintf_chk@plt+0x98b8>
  40ab60:	mov    edx,DWORD PTR [rdi+0x8]
  40ab63:	sub    edx,0x3
  40ab66:	cmp    edx,0x1
  40ab69:	ja     40aba8 <__sprintf_chk@plt+0x98b8>
  40ab6b:	test   eax,eax
  40ab6d:	jle    40aba8 <__sprintf_chk@plt+0x98b8>
  40ab6f:	mov    esi,eax
  40ab71:	mov    rdi,rbx
  40ab74:	call   4095a0 <__sprintf_chk@plt+0x82b0>
  40ab79:	mov    rdx,QWORD PTR [rbx+0x18]
  40ab7d:	mov    rax,QWORD PTR [rbx+0x10]
  40ab81:	cmp    rdx,rax
  40ab84:	jae    40abb0 <__sprintf_chk@plt+0x98c0>
  40ab86:	mov    ecx,DWORD PTR [rdx+0x8]
  40ab89:	mov    rdx,QWORD PTR [rdx]
  40ab8c:	add    rax,0x10
  40ab90:	mov    DWORD PTR [rax-0x8],ecx
  40ab93:	mov    esi,0x2
  40ab98:	mov    rdi,rbx
  40ab9b:	mov    QWORD PTR [rax-0x10],rdx
  40ab9f:	mov    QWORD PTR [rbx+0x10],rax
  40aba3:	call   409430 <__sprintf_chk@plt+0x8140>
  40aba8:	mov    rdi,rbx
  40abab:	call   4056a0 <__sprintf_chk@plt+0x43b0>
  40abb0:	xor    ecx,ecx
  40abb2:	mov    rdx,rbp
  40abb5:	jmp    40ab89 <__sprintf_chk@plt+0x9899>
  40abb7:	nop    WORD PTR [rax+rax*1+0x0]
  40abc0:	push   rbp
  40abc1:	push   rbx
  40abc2:	lea    rbp,[rdi+0x18]
  40abc6:	sub    rsp,0x8
  40abca:	mov    rdx,QWORD PTR [rdi]
  40abcd:	sub    rdx,rbp
  40abd0:	jne    40abe0 <__sprintf_chk@plt+0x98f0>
  40abd2:	add    rsp,0x8
  40abd6:	xor    eax,eax
  40abd8:	pop    rbx
  40abd9:	pop    rbp
  40abda:	ret    
  40abdb:	nop    DWORD PTR [rax+rax*1+0x0]
  40abe0:	mov    rbx,rdi
  40abe3:	mov    rdi,QWORD PTR [rdi+0x10]
  40abe7:	mov    rsi,rbp
  40abea:	call   409540 <__sprintf_chk@plt+0x8250>
  40abef:	mov    QWORD PTR [rbx],rbp
  40abf2:	add    DWORD PTR [rbx+0x8],0x1
  40abf6:	add    rsp,0x8
  40abfa:	mov    eax,0x1
  40abff:	pop    rbx
  40ac00:	pop    rbp
  40ac01:	ret    
  40ac02:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40ac0d:	nop    DWORD PTR [rax]
  40ac10:	push   rbx
  40ac11:	mov    rbx,rdi
  40ac14:	call   40abc0 <__sprintf_chk@plt+0x98d0>
  40ac19:	test   eax,eax
  40ac1b:	je     40ac30 <__sprintf_chk@plt+0x9940>
  40ac1d:	cmp    DWORD PTR [rbx+0x8],0x1
  40ac21:	jle    40ac30 <__sprintf_chk@plt+0x9940>
  40ac23:	lea    rsi,[rbx+0x10]
  40ac27:	lea    rdi,[rbx+0x8]
  40ac2b:	call   4094c0 <__sprintf_chk@plt+0x81d0>
  40ac30:	lea    rax,[rbx+0x18]
  40ac34:	pop    rbx
  40ac35:	ret    
  40ac36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ac40:	push   r13
  40ac42:	push   r12
  40ac44:	lea    r12,[rsi+rdx*1]
  40ac48:	push   rbp
  40ac49:	push   rbx
  40ac4a:	sub    rsp,0x8
  40ac4e:	test   rdx,rdx
  40ac51:	je     40aca0 <__sprintf_chk@plt+0x99b0>
  40ac53:	mov    rbp,rdi
  40ac56:	mov    rbx,rsi
  40ac59:	lea    r13,[rdi+0x2018]
  40ac60:	jmp    40ac7f <__sprintf_chk@plt+0x998f>
  40ac62:	nop    WORD PTR [rax+rax*1+0x0]
  40ac68:	lea    rdx,[rax+0x1]
  40ac6c:	add    rbx,0x1
  40ac70:	cmp    rbx,r12
  40ac73:	mov    QWORD PTR [rbp+0x0],rdx
  40ac77:	movzx  edx,BYTE PTR [rbx-0x1]
  40ac7b:	mov    BYTE PTR [rax],dl
  40ac7d:	je     40aca0 <__sprintf_chk@plt+0x99b0>
  40ac7f:	mov    rax,QWORD PTR [rbp+0x0]
  40ac83:	cmp    r13,rax
  40ac86:	ja     40ac68 <__sprintf_chk@plt+0x9978>
  40ac88:	mov    rdi,rbp
  40ac8b:	call   40ac10 <__sprintf_chk@plt+0x9920>
  40ac90:	mov    rax,QWORD PTR [rbp+0x0]
  40ac94:	jmp    40ac68 <__sprintf_chk@plt+0x9978>
  40ac96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40aca0:	add    rsp,0x8
  40aca4:	pop    rbx
  40aca5:	pop    rbp
  40aca6:	pop    r12
  40aca8:	pop    r13
  40acaa:	ret    
  40acab:	nop    DWORD PTR [rax+rax*1+0x0]
  40acb0:	push   rbx
  40acb1:	mov    rbx,rdi
  40acb4:	call   40abc0 <__sprintf_chk@plt+0x98d0>
  40acb9:	mov    esi,DWORD PTR [rbx+0x8]
  40acbc:	mov    rdi,QWORD PTR [rbx+0x10]
  40acc0:	call   409430 <__sprintf_chk@plt+0x8140>
  40acc5:	mov    DWORD PTR [rbx+0x8],0x1
  40accc:	pop    rbx
  40accd:	ret    
  40acce:	xchg   ax,ax
  40acd0:	push   r13
  40acd2:	push   r12
  40acd4:	mov    r13,rdi
  40acd7:	push   rbp
  40acd8:	push   rbx
  40acd9:	mov    r12,rsi
  40acdc:	sub    rsp,0x2028
  40ace3:	mov    rax,QWORD PTR fs:0x28
  40acec:	mov    QWORD PTR [rsp+0x2018],rax
  40acf4:	xor    eax,eax
  40acf6:	lea    rax,[rsp+0x18]
  40acfb:	mov    QWORD PTR [rsp+0x10],rdi
  40ad00:	mov    rbp,rsp
  40ad03:	mov    DWORD PTR [rsp+0x8],0x0
  40ad0b:	mov    QWORD PTR [rsp],rax
  40ad0f:	jmp    40ad34 <__sprintf_chk@plt+0x9a44>
  40ad11:	nop    DWORD PTR [rax+0x0]
  40ad18:	mov    rdi,rbx
  40ad1b:	call   4010f0 <strlen@plt>
  40ad20:	test   rax,rax
  40ad23:	je     40ad30 <__sprintf_chk@plt+0x9a40>
  40ad25:	cmp    BYTE PTR [rbx+rax*1-0x1],0xa
  40ad2a:	lea    rdx,[rax-0x1]
  40ad2e:	je     40ad98 <__sprintf_chk@plt+0x9aa8>
  40ad30:	add    QWORD PTR [rsp],rax
  40ad34:	mov    rdi,rbp
  40ad37:	call   40ac10 <__sprintf_chk@plt+0x9920>
  40ad3c:	mov    rdx,r12
  40ad3f:	mov    esi,0x2000
  40ad44:	mov    rdi,rax
  40ad47:	mov    rbx,rax
  40ad4a:	call   401170 <fgets@plt>
  40ad4f:	test   rax,rax
  40ad52:	jne    40ad18 <__sprintf_chk@plt+0x9a28>
  40ad54:	mov    rdi,rbp
  40ad57:	call   40acb0 <__sprintf_chk@plt+0x99c0>
  40ad5c:	mov    esi,0xffffffff
  40ad61:	mov    rdi,r13
  40ad64:	call   405c70 <__sprintf_chk@plt+0x4980>
  40ad69:	test   rax,rax
  40ad6c:	setne  al
  40ad6f:	movzx  eax,al
  40ad72:	mov    rcx,QWORD PTR [rsp+0x2018]
  40ad7a:	xor    rcx,QWORD PTR fs:0x28
  40ad83:	jne    40adab <__sprintf_chk@plt+0x9abb>
  40ad85:	add    rsp,0x2028
  40ad8c:	pop    rbx
  40ad8d:	pop    rbp
  40ad8e:	pop    r12
  40ad90:	pop    r13
  40ad92:	ret    
  40ad93:	nop    DWORD PTR [rax+rax*1+0x0]
  40ad98:	mov    rdi,rbp
  40ad9b:	add    QWORD PTR [rsp],rdx
  40ad9f:	call   40acb0 <__sprintf_chk@plt+0x99c0>
  40ada4:	mov    eax,0x1
  40ada9:	jmp    40ad72 <__sprintf_chk@plt+0x9a82>
  40adab:	call   401100 <__stack_chk_fail@plt>
  40adb0:	push   r12
  40adb2:	push   rbp
  40adb3:	mov    esi,0xffffd8ed
  40adb8:	push   rbx
  40adb9:	mov    rbx,rdi
  40adbc:	call   402d00 <__sprintf_chk@plt+0x1a10>
  40adc1:	mov    rbp,QWORD PTR [rax]
  40adc4:	test   rbp,rbp
  40adc7:	je     40ae90 <__sprintf_chk@plt+0x9ba0>
  40adcd:	mov    rsi,rbp
  40add0:	mov    rdi,rbx
  40add3:	call   40acd0 <__sprintf_chk@plt+0x99e0>
  40add8:	mov    rdi,rbp
  40addb:	mov    r12d,eax
  40adde:	call   4010a0 <ferror@plt>
  40ade3:	test   eax,eax
  40ade5:	jne    40ae70 <__sprintf_chk@plt+0x9b80>
  40adeb:	test   r12d,r12d
  40adee:	mov    eax,0x1
  40adf3:	je     40ae00 <__sprintf_chk@plt+0x9b10>
  40adf5:	pop    rbx
  40adf6:	pop    rbp
  40adf7:	pop    r12
  40adf9:	ret    
  40adfa:	nop    WORD PTR [rax+rax*1+0x0]
  40ae00:	mov    esi,0xffffd8ec
  40ae05:	mov    rdi,rbx
  40ae08:	call   402cd0 <__sprintf_chk@plt+0x19e0>
  40ae0d:	test   eax,eax
  40ae0f:	je     40adf5 <__sprintf_chk@plt+0x9b05>
  40ae11:	mov    r8,QWORD PTR [rbx+0x18]
  40ae15:	mov    rax,QWORD PTR [rbx+0x10]
  40ae19:	cmp    rax,r8
  40ae1c:	jae    40ae30 <__sprintf_chk@plt+0x9b40>
  40ae1e:	xchg   ax,ax
  40ae20:	mov    DWORD PTR [rax+0x8],0x0
  40ae27:	add    rax,0x10
  40ae2b:	cmp    r8,rax
  40ae2e:	ja     40ae20 <__sprintf_chk@plt+0x9b30>
  40ae30:	mov    QWORD PTR [rbx+0x10],r8
  40ae34:	mov    rdi,rbx
  40ae37:	mov    esi,0xffffd8ed
  40ae3c:	call   402b20 <__sprintf_chk@plt+0x1830>
  40ae41:	mov    rdx,QWORD PTR [rax]
  40ae44:	mov    eax,DWORD PTR [rax+0x8]
  40ae47:	add    r8,0x10
  40ae4b:	mov    rdi,rbx
  40ae4e:	mov    QWORD PTR [r8-0x10],rdx
  40ae52:	mov    DWORD PTR [r8-0x8],eax
  40ae56:	mov    QWORD PTR [rbx+0x10],r8
  40ae5a:	call   4084b0 <__sprintf_chk@plt+0x71c0>
  40ae5f:	pop    rbx
  40ae60:	xor    eax,eax
  40ae62:	pop    rbp
  40ae63:	pop    r12
  40ae65:	ret    
  40ae66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ae70:	call   401050 <__errno_location@plt>
  40ae75:	mov    edi,DWORD PTR [rax]
  40ae77:	call   4012b0 <strerror@plt>
  40ae7c:	lea    rsi,[rip+0xb8d8]        # 41675b <__sprintf_chk@plt+0x1546b>
  40ae83:	mov    rdx,rax
  40ae86:	mov    rdi,rbx
  40ae89:	xor    eax,eax
  40ae8b:	call   409640 <__sprintf_chk@plt+0x8350>
  40ae90:	lea    rsi,[rip+0xbb36]        # 4169cd <__sprintf_chk@plt+0x156dd>
  40ae97:	mov    rdi,rbx
  40ae9a:	xor    eax,eax
  40ae9c:	call   409640 <__sprintf_chk@plt+0x8350>
  40aea1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40aeac:	nop    DWORD PTR [rax+0x0]
  40aeb0:	push   r14
  40aeb2:	push   r13
  40aeb4:	mov    r14,rdi
  40aeb7:	push   r12
  40aeb9:	push   rbp
  40aeba:	mov    r13,rsi
  40aebd:	push   rbx
  40aebe:	mov    ebp,0x2000
  40aec3:	mov    rbx,rdx
  40aec6:	sub    rsp,0x2020
  40aecd:	mov    rax,QWORD PTR fs:0x28
  40aed6:	mov    QWORD PTR [rsp+0x2018],rax
  40aede:	xor    eax,eax
  40aee0:	lea    rax,[rsp+0x18]
  40aee5:	mov    QWORD PTR [rsp+0x10],rdi
  40aeea:	mov    r12,rsp
  40aeed:	mov    DWORD PTR [rsp+0x8],0x0
  40aef5:	mov    QWORD PTR [rsp],rax
  40aef9:	jmp    40af05 <__sprintf_chk@plt+0x9c15>
  40aefb:	nop    DWORD PTR [rax+rax*1+0x0]
  40af00:	cmp    rbp,rax
  40af03:	jne    40af30 <__sprintf_chk@plt+0x9c40>
  40af05:	mov    rdi,r12
  40af08:	call   40ac10 <__sprintf_chk@plt+0x9920>
  40af0d:	cmp    rbp,rbx
  40af10:	mov    rcx,r13
  40af13:	mov    esi,0x1
  40af18:	cmova  rbp,rbx
  40af1c:	mov    rdi,rax
  40af1f:	mov    rdx,rbp
  40af22:	call   4010b0 <fread@plt>
  40af27:	add    QWORD PTR [rsp],rax
  40af2b:	sub    rbx,rax
  40af2e:	jne    40af00 <__sprintf_chk@plt+0x9c10>
  40af30:	mov    rdi,r12
  40af33:	call   40acb0 <__sprintf_chk@plt+0x99c0>
  40af38:	test   rbx,rbx
  40af3b:	mov    eax,0x1
  40af40:	je     40af58 <__sprintf_chk@plt+0x9c68>
  40af42:	mov    esi,0xffffffff
  40af47:	mov    rdi,r14
  40af4a:	call   405c70 <__sprintf_chk@plt+0x4980>
  40af4f:	test   rax,rax
  40af52:	setne  al
  40af55:	movzx  eax,al
  40af58:	mov    rcx,QWORD PTR [rsp+0x2018]
  40af60:	xor    rcx,QWORD PTR fs:0x28
  40af69:	jne    40af7b <__sprintf_chk@plt+0x9c8b>
  40af6b:	add    rsp,0x2020
  40af72:	pop    rbx
  40af73:	pop    rbp
  40af74:	pop    r12
  40af76:	pop    r13
  40af78:	pop    r14
  40af7a:	ret    
  40af7b:	call   401100 <__stack_chk_fail@plt>
  40af80:	push   r15
  40af82:	push   r14
  40af84:	push   r13
  40af86:	push   r12
  40af88:	push   rbp
  40af89:	push   rbx
  40af8a:	sub    rsp,0x2028
  40af91:	mov    rax,QWORD PTR fs:0x28
  40af9a:	mov    QWORD PTR [rsp+0x2018],rax
  40afa2:	xor    eax,eax
  40afa4:	mov    rax,QWORD PTR [rdi+0x10]
  40afa8:	sub    rax,QWORD PTR [rdi+0x18]
  40afac:	lea    rdx,[rsp+0x18]
  40afb1:	mov    QWORD PTR [rsp+0x10],rdi
  40afb6:	mov    r14,rsp
  40afb9:	mov    DWORD PTR [rsp+0x8],0x0
  40afc1:	mov    QWORD PTR [rsp],rdx
  40afc5:	sar    rax,0x4
  40afc9:	test   eax,eax
  40afcb:	jle    40b024 <__sprintf_chk@plt+0x9d34>
  40afcd:	lea    r12,[rsp+0x2018]
  40afd5:	mov    rbp,rdi
  40afd8:	mov    r13d,eax
  40afdb:	mov    ebx,0x1
  40afe0:	mov    esi,ebx
  40afe2:	mov    rdi,rbp
  40afe5:	call   409e00 <__sprintf_chk@plt+0x8b10>
  40afea:	test   eax,0xffffff00
  40afef:	mov    r15,rax
  40aff2:	je     40b008 <__sprintf_chk@plt+0x9d18>
  40aff4:	lea    rdx,[rip+0xb9e9]        # 4169e4 <__sprintf_chk@plt+0x156f4>
  40affb:	mov    esi,ebx
  40affd:	mov    rdi,rbp
  40b000:	call   4098a0 <__sprintf_chk@plt+0x85b0>
  40b005:	nop    DWORD PTR [rax]
  40b008:	mov    rax,QWORD PTR [rsp]
  40b00c:	cmp    rax,r12
  40b00f:	jae    40b060 <__sprintf_chk@plt+0x9d70>
  40b011:	lea    rdx,[rax+0x1]
  40b015:	add    ebx,0x1
  40b018:	cmp    ebx,r13d
  40b01b:	mov    QWORD PTR [rsp],rdx
  40b01f:	mov    BYTE PTR [rax],r15b
  40b022:	jle    40afe0 <__sprintf_chk@plt+0x9cf0>
  40b024:	mov    rdi,r14
  40b027:	call   40acb0 <__sprintf_chk@plt+0x99c0>
  40b02c:	mov    rcx,QWORD PTR [rsp+0x2018]
  40b034:	xor    rcx,QWORD PTR fs:0x28
  40b03d:	mov    eax,0x1
  40b042:	jne    40b06e <__sprintf_chk@plt+0x9d7e>
  40b044:	add    rsp,0x2028
  40b04b:	pop    rbx
  40b04c:	pop    rbp
  40b04d:	pop    r12
  40b04f:	pop    r13
  40b051:	pop    r14
  40b053:	pop    r15
  40b055:	ret    
  40b056:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b060:	mov    rdi,r14
  40b063:	call   40ac10 <__sprintf_chk@plt+0x9920>
  40b068:	mov    rax,QWORD PTR [rsp]
  40b06c:	jmp    40b011 <__sprintf_chk@plt+0x9d21>
  40b06e:	call   401100 <__stack_chk_fail@plt>
  40b073:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40b07e:	xchg   ax,ax
  40b080:	sub    rsp,0x8
  40b084:	cmp    DWORD PTR [rdi+0x18],esi
  40b087:	jg     40b0b0 <__sprintf_chk@plt+0x9dc0>
  40b089:	test   esi,esi
  40b08b:	jne    40b0e0 <__sprintf_chk@plt+0x9df0>
  40b08d:	mov    rdi,QWORD PTR [rdi+0x10]
  40b091:	mov    rax,rdx
  40b094:	sub    rcx,rdx
  40b097:	mov    rdx,rcx
  40b09a:	mov    rsi,rax
  40b09d:	add    rsp,0x8
  40b0a1:	jmp    409540 <__sprintf_chk@plt+0x8250>
  40b0a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b0b0:	movsxd rsi,esi
  40b0b3:	shl    rsi,0x4
  40b0b7:	add    rsi,rdi
  40b0ba:	mov    rdx,QWORD PTR [rsi+0x28]
  40b0be:	cmp    rdx,0xffffffffffffffff
  40b0c2:	je     40b0f8 <__sprintf_chk@plt+0x9e08>
  40b0c4:	cmp    rdx,0xfffffffffffffffe
  40b0c8:	je     40b110 <__sprintf_chk@plt+0x9e20>
  40b0ca:	mov    rsi,QWORD PTR [rsi+0x20]
  40b0ce:	mov    rdi,QWORD PTR [rdi+0x10]
  40b0d2:	add    rsp,0x8
  40b0d6:	jmp    409540 <__sprintf_chk@plt+0x8250>
  40b0db:	nop    DWORD PTR [rax+rax*1+0x0]
  40b0e0:	mov    rdi,QWORD PTR [rdi+0x10]
  40b0e4:	lea    rsi,[rip+0xb907]        # 4169f2 <__sprintf_chk@plt+0x15702>
  40b0eb:	xor    eax,eax
  40b0ed:	call   409640 <__sprintf_chk@plt+0x8350>
  40b0f2:	nop    WORD PTR [rax+rax*1+0x0]
  40b0f8:	mov    rdi,QWORD PTR [rdi+0x10]
  40b0fc:	lea    rsi,[rip+0xb905]        # 416a08 <__sprintf_chk@plt+0x15718>
  40b103:	xor    eax,eax
  40b105:	call   409640 <__sprintf_chk@plt+0x8350>
  40b10a:	nop    WORD PTR [rax+rax*1+0x0]
  40b110:	mov    rdx,QWORD PTR [rdi+0x10]
  40b114:	mov    rax,QWORD PTR [rsi+0x20]
  40b118:	sub    rax,QWORD PTR [rdi]
  40b11b:	vxorpd xmm0,xmm0,xmm0
  40b11f:	mov    rcx,QWORD PTR [rdx+0x10]
  40b123:	add    rax,0x1
  40b127:	mov    DWORD PTR [rcx+0x8],0x3
  40b12e:	vcvtsi2sd xmm0,xmm0,rax
  40b133:	vmovsd QWORD PTR [rcx],xmm0
  40b137:	add    QWORD PTR [rdx+0x10],0x10
  40b13c:	add    rsp,0x8
  40b140:	ret    
  40b141:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40b14c:	nop    DWORD PTR [rax+0x0]
  40b150:	push   r14
  40b152:	push   r13
  40b154:	mov    r14,rdx
  40b157:	push   r12
  40b159:	push   rbp
  40b15a:	mov    r12,rdi
  40b15d:	push   rbx
  40b15e:	mov    ebp,DWORD PTR [rdi+0x18]
  40b161:	mov    r13,rsi
  40b164:	mov    rdi,QWORD PTR [rdi+0x10]
  40b168:	lea    rdx,[rip+0xb8ac]        # 416a1b <__sprintf_chk@plt+0x1572b>
  40b16f:	test   ebp,ebp
  40b171:	jne    40b1a8 <__sprintf_chk@plt+0x9eb8>
  40b173:	test   rsi,rsi
  40b176:	je     40b1a8 <__sprintf_chk@plt+0x9eb8>
  40b178:	mov    esi,0x1
  40b17d:	mov    ebp,0x1
  40b182:	call   4097d0 <__sprintf_chk@plt+0x84e0>
  40b187:	mov    rcx,r14
  40b18a:	mov    rdx,r13
  40b18d:	xor    esi,esi
  40b18f:	mov    rdi,r12
  40b192:	call   40b080 <__sprintf_chk@plt+0x9d90>
  40b197:	pop    rbx
  40b198:	mov    eax,ebp
  40b19a:	pop    rbp
  40b19b:	pop    r12
  40b19d:	pop    r13
  40b19f:	pop    r14
  40b1a1:	ret    
  40b1a2:	nop    WORD PTR [rax+rax*1+0x0]
  40b1a8:	mov    esi,ebp
  40b1aa:	call   4097d0 <__sprintf_chk@plt+0x84e0>
  40b1af:	test   ebp,ebp
  40b1b1:	jle    40b197 <__sprintf_chk@plt+0x9ea7>
  40b1b3:	xor    ebx,ebx
  40b1b5:	nop    DWORD PTR [rax]
  40b1b8:	mov    esi,ebx
  40b1ba:	mov    rcx,r14
  40b1bd:	mov    rdx,r13
  40b1c0:	mov    rdi,r12
  40b1c3:	add    ebx,0x1
  40b1c6:	call   40b080 <__sprintf_chk@plt+0x9d90>
  40b1cb:	cmp    ebp,ebx
  40b1cd:	jg     40b1b8 <__sprintf_chk@plt+0x9ec8>
  40b1cf:	pop    rbx
  40b1d0:	mov    eax,ebp
  40b1d2:	pop    rbp
  40b1d3:	pop    r12
  40b1d5:	pop    r13
  40b1d7:	pop    r14
  40b1d9:	ret    
  40b1da:	nop    WORD PTR [rax+rax*1+0x0]
  40b1e0:	sub    rsp,0x8
  40b1e4:	mov    rax,QWORD PTR [rdi+0x10]
  40b1e8:	lea    rsi,[rip+0xb83e]        # 416a2d <__sprintf_chk@plt+0x1573d>
  40b1ef:	mov    edx,0x1a
  40b1f4:	mov    DWORD PTR [rax+0x8],0x0
  40b1fb:	add    rax,0x10
  40b1ff:	mov    QWORD PTR [rdi+0x10],rax
  40b203:	call   409540 <__sprintf_chk@plt+0x8250>
  40b208:	mov    eax,0x2
  40b20d:	add    rsp,0x8
  40b211:	ret    
  40b212:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40b21d:	nop    DWORD PTR [rax]
  40b220:	test   rsi,rsi
  40b223:	je     40b250 <__sprintf_chk@plt+0x9f60>
  40b225:	push   rbp
  40b226:	push   rbx
  40b227:	mov    rbp,rdi
  40b22a:	mov    rdi,rsi
  40b22d:	mov    rbx,rsi
  40b230:	sub    rsp,0x8
  40b234:	call   4010f0 <strlen@plt>
  40b239:	add    rsp,0x8
  40b23d:	mov    rsi,rbx
  40b240:	mov    rdi,rbp
  40b243:	pop    rbx
  40b244:	pop    rbp
  40b245:	mov    rdx,rax
  40b248:	jmp    409540 <__sprintf_chk@plt+0x8250>
  40b24d:	nop    DWORD PTR [rax]
  40b250:	mov    rax,QWORD PTR [rdi+0x10]
  40b254:	mov    DWORD PTR [rax+0x8],0x0
  40b25b:	add    rax,0x10
  40b25f:	mov    QWORD PTR [rdi+0x10],rax
  40b263:	ret    
  40b264:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40b26f:	nop
  40b270:	push   rbx
  40b271:	mov    esi,0x1
  40b276:	mov    rbx,rdi
  40b279:	call   40a4f0 <__sprintf_chk@plt+0x9200>
  40b27e:	mov    rax,QWORD PTR [rbx+0x18]
  40b282:	cmp    rax,QWORD PTR [rbx+0x10]
  40b286:	lea    rsi,[rip+0xb697]        # 416924 <__sprintf_chk@plt+0x15634>
  40b28d:	jae    40b2af <__sprintf_chk@plt+0x9fbf>
  40b28f:	lea    rdx,[rip+0xb43a]        # 4166d0 <__sprintf_chk@plt+0x153e0>
  40b296:	cmp    rax,rdx
  40b299:	je     40b2af <__sprintf_chk@plt+0x9fbf>
  40b29b:	movsxd rax,DWORD PTR [rax+0x8]
  40b29f:	cmp    eax,0xffffffff
  40b2a2:	je     40b2af <__sprintf_chk@plt+0x9fbf>
  40b2a4:	lea    rdx,[rip+0x11af5]        # 41cda0 <__sprintf_chk@plt+0x1bab0>
  40b2ab:	mov    rsi,QWORD PTR [rdx+rax*8]
  40b2af:	mov    rdi,rbx
  40b2b2:	call   40b220 <__sprintf_chk@plt+0x9f30>
  40b2b7:	mov    eax,0x1
  40b2bc:	pop    rbx
  40b2bd:	ret    
  40b2be:	xchg   ax,ax
  40b2c0:	push   r12
  40b2c2:	push   rbp
  40b2c3:	push   rbx
  40b2c4:	mov    rax,QWORD PTR [rdi+0x18]
  40b2c8:	mov    rbx,rdi
  40b2cb:	lea    rdx,[rax+0x10]
  40b2cf:	cmp    rdx,QWORD PTR [rdi+0x10]
  40b2d3:	jae    40b348 <__sprintf_chk@plt+0xa058>
  40b2d5:	lea    r12,[rip+0xb3f4]        # 4166d0 <__sprintf_chk@plt+0x153e0>
  40b2dc:	cmp    rdx,r12
  40b2df:	je     40b348 <__sprintf_chk@plt+0xa058>
  40b2e1:	mov    ebp,DWORD PTR [rax+0x18]
  40b2e4:	mov    edx,0x5
  40b2e9:	mov    esi,0x1
  40b2ee:	call   409ed0 <__sprintf_chk@plt+0x8be0>
  40b2f3:	test   ebp,ebp
  40b2f5:	jne    40b370 <__sprintf_chk@plt+0xa080>
  40b2f7:	mov    rdi,rbx
  40b2fa:	call   4032f0 <__sprintf_chk@plt+0x2000>
  40b2ff:	test   eax,eax
  40b301:	jne    40b381 <__sprintf_chk@plt+0xa091>
  40b303:	mov    rax,QWORD PTR [rbx+0x10]
  40b307:	mov    rcx,QWORD PTR [rbx+0x18]
  40b30b:	lea    rdx,[rcx+0x20]
  40b30f:	cmp    rdx,rax
  40b312:	jbe    40b328 <__sprintf_chk@plt+0xa038>
  40b314:	nop    DWORD PTR [rax+0x0]
  40b318:	add    rax,0x10
  40b31c:	mov    DWORD PTR [rax-0x8],0x0
  40b323:	cmp    rax,rdx
  40b326:	jb     40b318 <__sprintf_chk@plt+0xa028>
  40b328:	mov    QWORD PTR [rbx+0x10],rdx
  40b32c:	mov    rdi,rbx
  40b32f:	mov    esi,0x1
  40b334:	call   402db0 <__sprintf_chk@plt+0x1ac0>
  40b339:	pop    rbx
  40b33a:	mov    eax,0x1
  40b33f:	pop    rbp
  40b340:	pop    r12
  40b342:	ret    
  40b343:	nop    DWORD PTR [rax+rax*1+0x0]
  40b348:	mov    edx,0x5
  40b34d:	mov    esi,0x1
  40b352:	mov    rdi,rbx
  40b355:	call   409ed0 <__sprintf_chk@plt+0x8be0>
  40b35a:	lea    rdx,[rip+0xb6e7]        # 416a48 <__sprintf_chk@plt+0x15758>
  40b361:	mov    esi,0x2
  40b366:	mov    rdi,rbx
  40b369:	call   4098a0 <__sprintf_chk@plt+0x85b0>
  40b36e:	xchg   ax,ax
  40b370:	cmp    ebp,0x5
  40b373:	jne    40b35a <__sprintf_chk@plt+0xa06a>
  40b375:	mov    rdi,rbx
  40b378:	call   4032f0 <__sprintf_chk@plt+0x2000>
  40b37d:	test   eax,eax
  40b37f:	je     40b303 <__sprintf_chk@plt+0xa013>
  40b381:	lea    rsi,[rip+0xb6d6]        # 416a5e <__sprintf_chk@plt+0x1576e>
  40b388:	mov    rdi,rbx
  40b38b:	call   40b220 <__sprintf_chk@plt+0x9f30>
  40b390:	mov    esi,0xfffffffe
  40b395:	mov    rdi,rbx
  40b398:	call   402d30 <__sprintf_chk@plt+0x1a40>
  40b39d:	mov    rax,QWORD PTR [rbx+0x10]
  40b3a1:	lea    rdx,[rax-0x10]
  40b3a5:	cmp    rdx,r12
  40b3a8:	je     40b3b1 <__sprintf_chk@plt+0xa0c1>
  40b3aa:	mov    edx,DWORD PTR [rax-0x8]
  40b3ad:	test   edx,edx
  40b3af:	je     40b3d0 <__sprintf_chk@plt+0xa0e0>
  40b3b1:	mov    esi,0xfffffffe
  40b3b6:	mov    rdi,rbx
  40b3b9:	call   402c10 <__sprintf_chk@plt+0x1920>
  40b3be:	lea    rsi,[rip+0xbdbb]        # 417180 <__sprintf_chk@plt+0x15e90>
  40b3c5:	mov    rdi,rbx
  40b3c8:	xor    eax,eax
  40b3ca:	call   409640 <__sprintf_chk@plt+0x8350>
  40b3cf:	nop
  40b3d0:	sub    rax,0x20
  40b3d4:	mov    QWORD PTR [rbx+0x10],rax
  40b3d8:	jmp    40b307 <__sprintf_chk@plt+0xa017>
  40b3dd:	nop    DWORD PTR [rax]
  40b3e0:	push   rbp
  40b3e1:	push   rbx
  40b3e2:	mov    rbp,rdi
  40b3e5:	mov    esi,0x1
  40b3ea:	sub    rsp,0x18
  40b3ee:	mov    rax,QWORD PTR fs:0x28
  40b3f7:	mov    QWORD PTR [rsp+0x8],rax
  40b3fc:	xor    eax,eax
  40b3fe:	call   4099c0 <__sprintf_chk@plt+0x86d0>
  40b403:	mov    ebx,eax
  40b405:	mov    rax,QWORD PTR [rbp+0x18]
  40b409:	lea    rdx,[rax+0x10]
  40b40d:	cmp    rdx,QWORD PTR [rbp+0x10]
  40b411:	jae    40b488 <__sprintf_chk@plt+0xa198>
  40b413:	lea    rcx,[rip+0xb2b6]        # 4166d0 <__sprintf_chk@plt+0x153e0>
  40b41a:	cmp    rdx,rcx
  40b41d:	je     40b488 <__sprintf_chk@plt+0xa198>
  40b41f:	cmp    DWORD PTR [rax+0x18],0xffffffff
  40b423:	je     40b488 <__sprintf_chk@plt+0xa198>
  40b425:	mov    esi,0x2
  40b42a:	mov    rdi,rbp
  40b42d:	call   4099c0 <__sprintf_chk@plt+0x86d0>
  40b432:	test   eax,eax
  40b434:	jns    40b4c0 <__sprintf_chk@plt+0xa1d0>
  40b43a:	neg    eax
  40b43c:	lea    rdi,[rip+0xb638]        # 416a7b <__sprintf_chk@plt+0x1578b>
  40b443:	movsxd rdx,eax
  40b446:	mov    eax,0x8
  40b44b:	cmp    edx,0x8
  40b44e:	cmovg  rdx,rax
  40b452:	lea    eax,[rdx-0x1]
  40b455:	cmp    eax,0xffffffff
  40b458:	mov    rsi,rsp
  40b45b:	jne    40b499 <__sprintf_chk@plt+0xa1a9>
  40b45d:	nop    DWORD PTR [rax]
  40b460:	mov    rdi,rbp
  40b463:	call   409540 <__sprintf_chk@plt+0x8250>
  40b468:	mov    rdx,QWORD PTR [rsp+0x8]
  40b46d:	xor    rdx,QWORD PTR fs:0x28
  40b476:	mov    eax,0x1
  40b47b:	jne    40b4dd <__sprintf_chk@plt+0xa1ed>
  40b47d:	add    rsp,0x18
  40b481:	pop    rbx
  40b482:	pop    rbp
  40b483:	ret    
  40b484:	nop    DWORD PTR [rax+0x0]
  40b488:	lea    rdi,[rip+0xb5db]        # 416a6a <__sprintf_chk@plt+0x1577a>
  40b48f:	mov    edx,0x8
  40b494:	mov    eax,0x7
  40b499:	cdqe   
  40b49b:	mov    rsi,rsp
  40b49e:	xchg   ax,ax
  40b4a0:	mov    ecx,ebx
  40b4a2:	shr    ebx,0x4
  40b4a5:	and    ecx,0xf
  40b4a8:	movzx  ecx,BYTE PTR [rdi+rcx*1]
  40b4ac:	mov    BYTE PTR [rsi+rax*1],cl
  40b4af:	sub    rax,0x1
  40b4b3:	cmp    eax,0xffffffff
  40b4b6:	jne    40b4a0 <__sprintf_chk@plt+0xa1b0>
  40b4b8:	jmp    40b460 <__sprintf_chk@plt+0xa170>
  40b4ba:	nop    WORD PTR [rax+rax*1+0x0]
  40b4c0:	cmp    eax,0x8
  40b4c3:	mov    edx,0x8
  40b4c8:	lea    rdi,[rip+0xb59b]        # 416a6a <__sprintf_chk@plt+0x1577a>
  40b4cf:	cmovle edx,eax
  40b4d2:	lea    eax,[rdx-0x1]
  40b4d5:	movsxd rdx,edx
  40b4d8:	jmp    40b455 <__sprintf_chk@plt+0xa165>
  40b4dd:	call   401100 <__stack_chk_fail@plt>
  40b4e2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40b4ed:	nop    DWORD PTR [rax]
  40b4f0:	push   rbp
  40b4f1:	push   rbx
  40b4f2:	mov    esi,0x1
  40b4f7:	mov    rbx,rdi
  40b4fa:	sub    rsp,0x8
  40b4fe:	call   40a4f0 <__sprintf_chk@plt+0x9200>
  40b503:	mov    esi,0x1
  40b508:	mov    rdi,rbx
  40b50b:	call   402d00 <__sprintf_chk@plt+0x1a10>
  40b510:	lea    rdx,[rip+0xb440]        # 416957 <__sprintf_chk@plt+0x15667>
  40b517:	mov    rbp,rax
  40b51a:	mov    esi,0xffffd8f0
  40b51f:	mov    rdi,rbx
  40b522:	call   408430 <__sprintf_chk@plt+0x7140>
  40b527:	test   rbp,rbp
  40b52a:	je     40b538 <__sprintf_chk@plt+0xa248>
  40b52c:	mov    rdi,rbx
  40b52f:	call   4032f0 <__sprintf_chk@plt+0x2000>
  40b534:	test   eax,eax
  40b536:	jne    40b560 <__sprintf_chk@plt+0xa270>
  40b538:	mov    rax,QWORD PTR [rbx+0x10]
  40b53c:	mov    DWORD PTR [rax+0x8],0x0
  40b543:	add    rax,0x10
  40b547:	mov    QWORD PTR [rbx+0x10],rax
  40b54b:	add    rsp,0x8
  40b54f:	mov    eax,0x1
  40b554:	pop    rbx
  40b555:	pop    rbp
  40b556:	ret    
  40b557:	nop    WORD PTR [rax+rax*1+0x0]
  40b560:	mov    edx,0xffffffff
  40b565:	mov    esi,0xfffffffe
  40b56a:	mov    rdi,rbx
  40b56d:	call   402c90 <__sprintf_chk@plt+0x19a0>
  40b572:	test   eax,eax
  40b574:	je     40b538 <__sprintf_chk@plt+0xa248>
  40b576:	cmp    QWORD PTR [rbp+0x0],0x0
  40b57b:	je     40b5a0 <__sprintf_chk@plt+0xa2b0>
  40b57d:	lea    rsi,[rip+0xb41b]        # 41699f <__sprintf_chk@plt+0x156af>
  40b584:	mov    rdi,rbx
  40b587:	mov    edx,0x4
  40b58c:	call   409540 <__sprintf_chk@plt+0x8250>
  40b591:	add    rsp,0x8
  40b595:	mov    eax,0x1
  40b59a:	pop    rbx
  40b59b:	pop    rbp
  40b59c:	ret    
  40b59d:	nop    DWORD PTR [rax]
  40b5a0:	lea    rsi,[rip+0xb3f1]        # 416998 <__sprintf_chk@plt+0x156a8>
  40b5a7:	mov    edx,0xb
  40b5ac:	mov    rdi,rbx
  40b5af:	call   409540 <__sprintf_chk@plt+0x8250>
  40b5b4:	jmp    40b54b <__sprintf_chk@plt+0xa25b>
  40b5b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b5c0:	push   r12
  40b5c2:	push   rbp
  40b5c3:	mov    rbp,rsi
  40b5c6:	push   rbx
  40b5c7:	mov    rax,QWORD PTR [rdi+0x20]
  40b5cb:	mov    rbx,rdi
  40b5ce:	mov    rsi,QWORD PTR [rax+0x70]
  40b5d2:	cmp    QWORD PTR [rax+0x78],rsi
  40b5d6:	jae    40b678 <__sprintf_chk@plt+0xa388>
  40b5dc:	mov    rax,QWORD PTR [rbx+0x28]
  40b5e0:	cmp    rax,QWORD PTR [rbx+0x50]
  40b5e4:	je     40b68b <__sprintf_chk@plt+0xa39b>
  40b5ea:	mov    rax,QWORD PTR [rax+0x8]
  40b5ee:	mov    rax,QWORD PTR [rax]
  40b5f1:	mov    r12,QWORD PTR [rax+0x18]
  40b5f5:	cmp    rbp,0xffffffffffffffd5
  40b5f9:	ja     40b660 <__sprintf_chk@plt+0xa370>
  40b5fb:	lea    rcx,[rbp+0x28]
  40b5ff:	xor    edx,edx
  40b601:	mov    rdi,rbx
  40b604:	xor    esi,esi
  40b606:	call   403450 <__sprintf_chk@plt+0x2160>
  40b60b:	mov    rcx,QWORD PTR [rbx+0x20]
  40b60f:	movzx  edx,BYTE PTR [rcx+0x20]
  40b613:	mov    BYTE PTR [rax+0x8],0x7
  40b617:	mov    QWORD PTR [rax+0x20],rbp
  40b61b:	mov    QWORD PTR [rax+0x10],0x0
  40b623:	mov    QWORD PTR [rax+0x18],r12
  40b627:	and    edx,0x3
  40b62a:	mov    BYTE PTR [rax+0x9],dl
  40b62d:	mov    rdx,QWORD PTR [rcx+0xb0]
  40b634:	mov    rcx,QWORD PTR [rdx]
  40b637:	mov    QWORD PTR [rax],rcx
  40b63a:	mov    QWORD PTR [rdx],rax
  40b63d:	mov    rdx,QWORD PTR [rbx+0x10]
  40b641:	mov    QWORD PTR [rdx],rax
  40b644:	mov    DWORD PTR [rdx+0x8],0x7
  40b64b:	add    rax,0x28
  40b64f:	add    QWORD PTR [rbx+0x10],0x10
  40b654:	pop    rbx
  40b655:	pop    rbp
  40b656:	pop    r12
  40b658:	ret    
  40b659:	nop    DWORD PTR [rax+0x0]
  40b660:	lea    rsi,[rip+0xb9e9]        # 417050 <__sprintf_chk@plt+0x15d60>
  40b667:	mov    rdi,rbx
  40b66a:	xor    eax,eax
  40b66c:	call   405730 <__sprintf_chk@plt+0x4440>
  40b671:	nop    DWORD PTR [rax+0x0]
  40b678:	call   408be0 <__sprintf_chk@plt+0x78f0>
  40b67d:	mov    rax,QWORD PTR [rbx+0x28]
  40b681:	cmp    rax,QWORD PTR [rbx+0x50]
  40b685:	jne    40b5ea <__sprintf_chk@plt+0xa2fa>
  40b68b:	mov    r12,QWORD PTR [rbx+0x78]
  40b68f:	jmp    40b5f5 <__sprintf_chk@plt+0xa305>
  40b694:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40b69f:	nop
  40b6a0:	push   rbp
  40b6a1:	push   rbx
  40b6a2:	mov    esi,0x8
  40b6a7:	mov    rbx,rdi
  40b6aa:	sub    rsp,0x8
  40b6ae:	call   40b5c0 <__sprintf_chk@plt+0xa2d0>
  40b6b3:	lea    rdx,[rip+0xb29d]        # 416957 <__sprintf_chk@plt+0x15667>
  40b6ba:	mov    rdi,rbx
  40b6bd:	mov    QWORD PTR [rax],0x0
  40b6c4:	mov    esi,0xffffd8f0
  40b6c9:	mov    rbp,rax
  40b6cc:	call   408430 <__sprintf_chk@plt+0x7140>
  40b6d1:	mov    rdi,rbx
  40b6d4:	mov    esi,0xfffffffe
  40b6d9:	call   402db0 <__sprintf_chk@plt+0x1ac0>
  40b6de:	add    rsp,0x8
  40b6e2:	mov    rax,rbp
  40b6e5:	pop    rbx
  40b6e6:	pop    rbp
  40b6e7:	ret    
  40b6e8:	nop    DWORD PTR [rax+rax*1+0x0]
  40b6f0:	push   r13
  40b6f2:	push   r12
  40b6f4:	mov    r12d,edx
  40b6f7:	push   rbp
  40b6f8:	push   rbx
  40b6f9:	mov    r13,rsi
  40b6fc:	mov    rbx,rdi
  40b6ff:	mov    rbp,rcx
  40b702:	sub    rsp,0x8
  40b706:	call   40b6a0 <__sprintf_chk@plt+0xa3b0>
  40b70b:	test   r12d,r12d
  40b70e:	mov    QWORD PTR [rax],r13
  40b711:	jle    40b73d <__sprintf_chk@plt+0xa44d>
  40b713:	mov    rax,QWORD PTR [rbx+0x10]
  40b717:	mov    esi,0xffffd8ef
  40b71c:	mov    rdi,rbx
  40b71f:	mov    rdx,QWORD PTR [rax-0x10]
  40b723:	add    rax,0x10
  40b727:	mov    QWORD PTR [rax-0x10],rdx
  40b72b:	mov    edx,DWORD PTR [rax-0x18]
  40b72e:	mov    DWORD PTR [rax-0x8],edx
  40b731:	mov    QWORD PTR [rbx+0x10],rax
  40b735:	mov    edx,r12d
  40b738:	call   407e60 <__sprintf_chk@plt+0x6b70>
  40b73d:	mov    rax,QWORD PTR [rbx+0x10]
  40b741:	mov    rdi,rbx
  40b744:	mov    rdx,QWORD PTR [rax-0x20]
  40b748:	add    rax,0x10
  40b74c:	mov    QWORD PTR [rax-0x10],rdx
  40b750:	mov    edx,DWORD PTR [rax-0x28]
  40b753:	mov    DWORD PTR [rax-0x8],edx
  40b756:	mov    QWORD PTR [rbx+0x10],rax
  40b75a:	call   403200 <__sprintf_chk@plt+0x1f10>
  40b75f:	add    rsp,0x8
  40b763:	mov    rdx,rbp
  40b766:	mov    rdi,rbx
  40b769:	pop    rbx
  40b76a:	pop    rbp
  40b76b:	pop    r12
  40b76d:	pop    r13
  40b76f:	mov    esi,0xfffffffd
  40b774:	jmp    408a60 <__sprintf_chk@plt+0x7770>
  40b779:	nop    DWORD PTR [rax+0x0]
  40b780:	push   r12
  40b782:	push   rbp
  40b783:	mov    rbp,rsi
  40b786:	push   rbx
  40b787:	mov    rsi,rdx
  40b78a:	mov    r12,rdi
  40b78d:	mov    rdx,rcx
  40b790:	mov    rdi,rbp
  40b793:	sub    rsp,0x20
  40b797:	mov    rax,QWORD PTR fs:0x28
  40b7a0:	mov    QWORD PTR [rsp+0x18],rax
  40b7a5:	xor    eax,eax
  40b7a7:	call   405980 <__sprintf_chk@plt+0x4690>
  40b7ac:	mov    rbx,rax
  40b7af:	mov    rax,QWORD PTR [r12]
  40b7b3:	mov    rsi,QWORD PTR [rax+0x8]
  40b7b7:	mov    eax,0x1
  40b7bc:	movzx  edx,BYTE PTR [rsi+0xb]
  40b7c0:	shlx   rax,rax,rdx
  40b7c5:	sub    eax,0x1
  40b7c8:	and    eax,DWORD PTR [rbx+0xc]
  40b7cb:	cdqe   
  40b7cd:	lea    rdx,[rax+rax*4]
  40b7d1:	mov    rax,QWORD PTR [rsi+0x20]
  40b7d5:	lea    rax,[rax+rdx*8]
  40b7d9:	jmp    40b7e9 <__sprintf_chk@plt+0xa4f9>
  40b7db:	nop    DWORD PTR [rax+rax*1+0x0]
  40b7e0:	mov    rax,QWORD PTR [rax+0x20]
  40b7e4:	test   rax,rax
  40b7e7:	je     40b850 <__sprintf_chk@plt+0xa560>
  40b7e9:	cmp    DWORD PTR [rax+0x18],0x4
  40b7ed:	jne    40b7e0 <__sprintf_chk@plt+0xa4f0>
  40b7ef:	cmp    rbx,QWORD PTR [rax+0x10]
  40b7f3:	jne    40b7e0 <__sprintf_chk@plt+0xa4f0>
  40b7f5:	lea    rdx,[rip+0xaed4]        # 4166d0 <__sprintf_chk@plt+0x153e0>
  40b7fc:	cmp    rax,rdx
  40b7ff:	je     40b850 <__sprintf_chk@plt+0xa560>
  40b801:	mov    edx,DWORD PTR [rax+0x8]
  40b804:	test   edx,edx
  40b806:	jne    40b82b <__sprintf_chk@plt+0xa53b>
  40b808:	mov    DWORD PTR [rax],0x1
  40b80e:	mov    DWORD PTR [rax+0x8],0x1
  40b815:	mov    rax,QWORD PTR [rbp+0x20]
  40b819:	mov    rcx,QWORD PTR [rax+0x70]
  40b81d:	cmp    QWORD PTR [rax+0x78],rcx
  40b821:	jb     40b82b <__sprintf_chk@plt+0xa53b>
  40b823:	mov    rdi,rbp
  40b826:	call   408be0 <__sprintf_chk@plt+0x78f0>
  40b82b:	mov    rcx,QWORD PTR [rsp+0x18]
  40b830:	xor    rcx,QWORD PTR fs:0x28
  40b839:	mov    rax,rbx
  40b83c:	jne    40b869 <__sprintf_chk@plt+0xa579>
  40b83e:	add    rsp,0x20
  40b842:	pop    rbx
  40b843:	pop    rbp
  40b844:	pop    r12
  40b846:	ret    
  40b847:	nop    WORD PTR [rax+rax*1+0x0]
  40b850:	mov    rdx,rsp
  40b853:	mov    rdi,rbp
  40b856:	mov    QWORD PTR [rsp],rbx
  40b85a:	mov    DWORD PTR [rsp+0x8],0x4
  40b862:	call   4078c0 <__sprintf_chk@plt+0x65d0>
  40b867:	jmp    40b801 <__sprintf_chk@plt+0xa511>
  40b869:	call   401100 <__stack_chk_fail@plt>
  40b86e:	xchg   ax,ax
  40b870:	push   r15
  40b872:	push   r14
  40b874:	mov    r15d,edx
  40b877:	push   r13
  40b879:	push   r12
  40b87b:	mov    r13,rsi
  40b87e:	push   rbp
  40b87f:	push   rbx
  40b880:	mov    rbp,rdi
  40b883:	sub    rsp,0x8
  40b887:	mov    rax,QWORD PTR [rdi+0x20]
  40b88b:	mov    rdi,QWORD PTR [rax+0x70]
  40b88f:	cmp    QWORD PTR [rax+0x78],rdi
  40b893:	jae    40b968 <__sprintf_chk@plt+0xa678>
  40b899:	mov    rax,QWORD PTR [rbp+0x28]
  40b89d:	cmp    rax,QWORD PTR [rbp+0x50]
  40b8a1:	je     40b97e <__sprintf_chk@plt+0xa68e>
  40b8a7:	mov    rax,QWORD PTR [rax+0x8]
  40b8ab:	mov    rax,QWORD PTR [rax]
  40b8ae:	mov    r14,QWORD PTR [rax+0x18]
  40b8b2:	lea    r12d,[r15-0x1]
  40b8b6:	xor    edx,edx
  40b8b8:	xor    esi,esi
  40b8ba:	mov    rdi,rbp
  40b8bd:	mov    ecx,r12d
  40b8c0:	movsxd rbx,r12d
  40b8c3:	shl    ecx,0x4
  40b8c6:	add    ecx,0x38
  40b8c9:	movsxd rcx,ecx
  40b8cc:	call   403450 <__sprintf_chk@plt+0x2160>
  40b8d1:	mov    rdx,QWORD PTR [rbp+0x20]
  40b8d5:	mov    rcx,QWORD PTR [rdx+0x28]
  40b8d9:	mov    QWORD PTR [rax],rcx
  40b8dc:	mov    QWORD PTR [rdx+0x28],rax
  40b8e0:	movzx  edx,BYTE PTR [rdx+0x20]
  40b8e4:	mov    BYTE PTR [rax+0x8],0x6
  40b8e8:	mov    BYTE PTR [rax+0xa],0x1
  40b8ec:	mov    QWORD PTR [rax+0x18],r14
  40b8f0:	mov    BYTE PTR [rax+0xb],r15b
  40b8f4:	mov    QWORD PTR [rax+0x20],r13
  40b8f8:	and    edx,0x3
  40b8fb:	mov    BYTE PTR [rax+0x9],dl
  40b8fe:	mov    rcx,QWORD PTR [rbp+0x10]
  40b902:	movsxd rdx,r15d
  40b905:	shl    rdx,0x4
  40b909:	sub    rcx,rdx
  40b90c:	test   r15d,r15d
  40b90f:	mov    QWORD PTR [rbp+0x10],rcx
  40b913:	je     40b947 <__sprintf_chk@plt+0xa657>
  40b915:	mov    r12d,r12d
  40b918:	sub    rdx,0x10
  40b91c:	sub    rbx,r12
  40b91f:	shl    rbx,0x4
  40b923:	jmp    40b92c <__sprintf_chk@plt+0xa63c>
  40b925:	nop    DWORD PTR [rax]
  40b928:	sub    rdx,0x10
  40b92c:	add    rcx,rdx
  40b92f:	cmp    rdx,rbx
  40b932:	mov    rsi,QWORD PTR [rcx]
  40b935:	mov    QWORD PTR [rax+rdx*1+0x28],rsi
  40b93a:	mov    ecx,DWORD PTR [rcx+0x8]
  40b93d:	mov    DWORD PTR [rax+rdx*1+0x30],ecx
  40b941:	mov    rcx,QWORD PTR [rbp+0x10]
  40b945:	jne    40b928 <__sprintf_chk@plt+0xa638>
  40b947:	mov    QWORD PTR [rcx],rax
  40b94a:	mov    DWORD PTR [rcx+0x8],0x6
  40b951:	add    QWORD PTR [rbp+0x10],0x10
  40b956:	add    rsp,0x8
  40b95a:	pop    rbx
  40b95b:	pop    rbp
  40b95c:	pop    r12
  40b95e:	pop    r13
  40b960:	pop    r14
  40b962:	pop    r15
  40b964:	ret    
  40b965:	nop    DWORD PTR [rax]
  40b968:	mov    rdi,rbp
  40b96b:	call   408be0 <__sprintf_chk@plt+0x78f0>
  40b970:	mov    rax,QWORD PTR [rbp+0x28]
  40b974:	cmp    rax,QWORD PTR [rbp+0x50]
  40b978:	jne    40b8a7 <__sprintf_chk@plt+0xa5b7>
  40b97e:	mov    r14,QWORD PTR [rbp+0x78]
  40b982:	jmp    40b8b2 <__sprintf_chk@plt+0xa5c2>
  40b987:	nop    WORD PTR [rax+rax*1+0x0]
  40b990:	mov    r8,rdi
  40b993:	sub    rsp,0x8
  40b997:	mov    r9d,edx
  40b99a:	call   402b60 <__sprintf_chk@plt+0x1870>
  40b99f:	mov    rdx,QWORD PTR [rax]
  40b9a2:	mov    rcx,QWORD PTR [r8+0x10]
  40b9a6:	lea    rsi,[rip+0xfffffffffffff403]        # 40adb0 <__sprintf_chk@plt+0x9ac0>
  40b9ad:	mov    eax,DWORD PTR [rax+0x8]
  40b9b0:	mov    rdi,r8
  40b9b3:	mov    QWORD PTR [rcx],rdx
  40b9b6:	mov    edx,0x2
  40b9bb:	mov    DWORD PTR [rcx+0x8],eax
  40b9be:	lea    rax,[rcx+0x10]
  40b9c2:	mov    QWORD PTR [r8+0x10],rax
  40b9c6:	xor    eax,eax
  40b9c8:	test   r9d,r9d
  40b9cb:	setne  al
  40b9ce:	mov    DWORD PTR [rcx+0x18],0x1
  40b9d5:	mov    DWORD PTR [rcx+0x10],eax
  40b9d8:	add    QWORD PTR [r8+0x10],0x10
  40b9dd:	add    rsp,0x8
  40b9e1:	jmp    40b870 <__sprintf_chk@plt+0xa580>
  40b9e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b9f0:	push   rbx
  40b9f1:	mov    rbx,rdi
  40b9f4:	call   40a850 <__sprintf_chk@plt+0x9560>
  40b9f9:	mov    rdi,rbx
  40b9fc:	xor    edx,edx
  40b9fe:	mov    esi,0x1
  40ba03:	call   40b990 <__sprintf_chk@plt+0xa6a0>
  40ba08:	mov    eax,0x1
  40ba0d:	pop    rbx
  40ba0e:	ret    
  40ba0f:	nop
  40ba10:	push   r12
  40ba12:	push   rbp
  40ba13:	mov    r12d,esi
  40ba16:	push   rbx
  40ba17:	mov    rbp,rdi
  40ba1a:	mov    rbx,rdx
  40ba1d:	call   402b60 <__sprintf_chk@plt+0x1870>
  40ba22:	mov    edx,DWORD PTR [rax+0x8]
  40ba25:	cmp    edx,0x4
  40ba28:	je     40ba70 <__sprintf_chk@plt+0xa780>
  40ba2a:	cmp    edx,0x3
  40ba2d:	je     40ba48 <__sprintf_chk@plt+0xa758>
  40ba2f:	test   rbx,rbx
  40ba32:	je     40ba3b <__sprintf_chk@plt+0xa74b>
  40ba34:	mov    QWORD PTR [rbx],0x0
  40ba3b:	pop    rbx
  40ba3c:	xor    eax,eax
  40ba3e:	pop    rbp
  40ba3f:	pop    r12
  40ba41:	ret    
  40ba42:	nop    WORD PTR [rax+rax*1+0x0]
  40ba48:	mov    rsi,rax
  40ba4b:	mov    rdi,rbp
  40ba4e:	call   405bb0 <__sprintf_chk@plt+0x48c0>
  40ba53:	test   eax,eax
  40ba55:	je     40ba2f <__sprintf_chk@plt+0xa73f>
  40ba57:	mov    rax,QWORD PTR [rbp+0x20]
  40ba5b:	mov    rcx,QWORD PTR [rax+0x70]
  40ba5f:	cmp    QWORD PTR [rax+0x78],rcx
  40ba63:	jae    40ba90 <__sprintf_chk@plt+0xa7a0>
  40ba65:	mov    esi,r12d
  40ba68:	mov    rdi,rbp
  40ba6b:	call   402b60 <__sprintf_chk@plt+0x1870>
  40ba70:	test   rbx,rbx
  40ba73:	mov    rax,QWORD PTR [rax]
  40ba76:	je     40ba7f <__sprintf_chk@plt+0xa78f>
  40ba78:	mov    rdx,QWORD PTR [rax+0x10]
  40ba7c:	mov    QWORD PTR [rbx],rdx
  40ba7f:	pop    rbx
  40ba80:	add    rax,0x18
  40ba84:	pop    rbp
  40ba85:	pop    r12
  40ba87:	ret    
  40ba88:	nop    DWORD PTR [rax+rax*1+0x0]
  40ba90:	mov    rdi,rbp
  40ba93:	call   408be0 <__sprintf_chk@plt+0x78f0>
  40ba98:	jmp    40ba65 <__sprintf_chk@plt+0xa775>
  40ba9a:	nop    WORD PTR [rax+rax*1+0x0]
  40baa0:	sub    rsp,0x8
  40baa4:	xor    edx,edx
  40baa6:	mov    esi,0xffffffff
  40baab:	call   40ba10 <__sprintf_chk@plt+0xa720>
  40bab0:	mov    rcx,rax
  40bab3:	mov    rax,QWORD PTR [rip+0x1153e]        # 41cff8 <__sprintf_chk@plt+0x1bd08>
  40baba:	lea    rdx,[rip+0xb6e7]        # 4171a8 <__sprintf_chk@plt+0x15eb8>
  40bac1:	mov    esi,0x1
  40bac6:	mov    rdi,QWORD PTR [rax]
  40bac9:	xor    eax,eax
  40bacb:	call   4012a0 <__fprintf_chk@plt>
  40bad0:	xor    eax,eax
  40bad2:	add    rsp,0x8
  40bad6:	ret    
  40bad7:	nop    WORD PTR [rax+rax*1+0x0]
  40bae0:	push   rbp
  40bae1:	push   rbx
  40bae2:	mov    esi,0xffffffff
  40bae7:	mov    rbx,rdi
  40baea:	sub    rsp,0x18
  40baee:	mov    rbp,QWORD PTR [rdi+0x10]
  40baf2:	mov    rdx,rsp
  40baf5:	mov    rax,QWORD PTR fs:0x28
  40bafe:	mov    QWORD PTR [rsp+0x8],rax
  40bb03:	xor    eax,eax
  40bb05:	mov    rdi,rbp
  40bb08:	call   40ba10 <__sprintf_chk@plt+0xa720>
  40bb0d:	mov    rdi,QWORD PTR [rbx]
  40bb10:	mov    rdx,QWORD PTR [rsp]
  40bb14:	mov    rcx,rbx
  40bb17:	sub    rcx,rdi
  40bb1a:	add    rcx,0x2018
  40bb21:	cmp    rcx,rdx
  40bb24:	jae    40bb68 <__sprintf_chk@plt+0xa878>
  40bb26:	mov    rdi,rbx
  40bb29:	call   40abc0 <__sprintf_chk@plt+0x98d0>
  40bb2e:	test   eax,eax
  40bb30:	jne    40bb80 <__sprintf_chk@plt+0xa890>
  40bb32:	mov    eax,DWORD PTR [rbx+0x8]
  40bb35:	add    eax,0x1
  40bb38:	cmp    eax,0x1
  40bb3b:	mov    DWORD PTR [rbx+0x8],eax
  40bb3e:	jle    40bb4d <__sprintf_chk@plt+0xa85d>
  40bb40:	lea    rsi,[rbx+0x10]
  40bb44:	lea    rdi,[rbx+0x8]
  40bb48:	call   4094c0 <__sprintf_chk@plt+0x81d0>
  40bb4d:	mov    rax,QWORD PTR [rsp+0x8]
  40bb52:	xor    rax,QWORD PTR fs:0x28
  40bb5b:	jne    40bb9d <__sprintf_chk@plt+0xa8ad>
  40bb5d:	add    rsp,0x18
  40bb61:	pop    rbx
  40bb62:	pop    rbp
  40bb63:	ret    
  40bb64:	nop    DWORD PTR [rax+0x0]
  40bb68:	mov    rsi,rax
  40bb6b:	call   4011c0 <memcpy@plt>
  40bb70:	mov    rax,QWORD PTR [rsp]
  40bb74:	add    QWORD PTR [rbx],rax
  40bb77:	sub    QWORD PTR [rbp+0x10],0x10
  40bb7c:	jmp    40bb4d <__sprintf_chk@plt+0xa85d>
  40bb7e:	xchg   ax,ax
  40bb80:	mov    esi,0xfffffffe
  40bb85:	mov    rdi,rbp
  40bb88:	call   402c50 <__sprintf_chk@plt+0x1960>
  40bb8d:	mov    eax,DWORD PTR [rbx+0x8]
  40bb90:	add    eax,0x1
  40bb93:	cmp    eax,0x1
  40bb96:	mov    DWORD PTR [rbx+0x8],eax
  40bb99:	jg     40bb40 <__sprintf_chk@plt+0xa850>
  40bb9b:	jmp    40bb4d <__sprintf_chk@plt+0xa85d>
  40bb9d:	call   401100 <__stack_chk_fail@plt>
  40bba2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40bbad:	nop    DWORD PTR [rax]
  40bbb0:	push   r12
  40bbb2:	push   rbp
  40bbb3:	mov    r12,rsi
  40bbb6:	push   rbx
  40bbb7:	mov    esi,0x1
  40bbbc:	mov    rbx,rdi
  40bbbf:	mov    ebp,edx
  40bbc1:	call   402d60 <__sprintf_chk@plt+0x1a70>
  40bbc6:	mov    rax,QWORD PTR [rbx+0x10]
  40bbca:	lea    rdx,[rip+0xab0f]        # 4166e0 <__sprintf_chk@plt+0x153f0>
  40bbd1:	cmp    rax,rdx
  40bbd4:	je     40bc18 <__sprintf_chk@plt+0xa928>
  40bbd6:	movsxd rax,DWORD PTR [rax-0x8]
  40bbda:	lea    edx,[rax-0x3]
  40bbdd:	cmp    edx,0x1
  40bbe0:	jbe    40bc08 <__sprintf_chk@plt+0xa918>
  40bbe2:	cmp    eax,0xffffffff
  40bbe5:	je     40bc18 <__sprintf_chk@plt+0xa928>
  40bbe7:	lea    rdx,[rip+0x111b2]        # 41cda0 <__sprintf_chk@plt+0x1bab0>
  40bbee:	mov    rdx,QWORD PTR [rdx+rax*8]
  40bbf2:	lea    rsi,[rip+0xb5e7]        # 4171e0 <__sprintf_chk@plt+0x15ef0>
  40bbf9:	mov    ecx,ebp
  40bbfb:	mov    rdi,rbx
  40bbfe:	xor    eax,eax
  40bc00:	call   409640 <__sprintf_chk@plt+0x8350>
  40bc05:	nop    DWORD PTR [rax]
  40bc08:	pop    rbx
  40bc09:	mov    rdi,r12
  40bc0c:	pop    rbp
  40bc0d:	pop    r12
  40bc0f:	jmp    40bae0 <__sprintf_chk@plt+0xa7f0>
  40bc14:	nop    DWORD PTR [rax+0x0]
  40bc18:	lea    rdx,[rip+0xad05]        # 416924 <__sprintf_chk@plt+0x15634>
  40bc1f:	jmp    40bbf2 <__sprintf_chk@plt+0xa902>
  40bc21:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40bc2c:	nop    DWORD PTR [rax+0x0]
  40bc30:	push   rbp
  40bc31:	push   rbx
  40bc32:	mov    ebp,esi
  40bc34:	mov    rbx,rdi
  40bc37:	sub    rsp,0x8
  40bc3b:	call   40ba10 <__sprintf_chk@plt+0xa720>
  40bc40:	test   rax,rax
  40bc43:	je     40bc50 <__sprintf_chk@plt+0xa960>
  40bc45:	add    rsp,0x8
  40bc49:	pop    rbx
  40bc4a:	pop    rbp
  40bc4b:	ret    
  40bc4c:	nop    DWORD PTR [rax+0x0]
  40bc50:	lea    rdx,[rip+0xb094]        # 416ceb <__sprintf_chk@plt+0x159fb>
  40bc57:	mov    esi,ebp
  40bc59:	mov    rdi,rbx
  40bc5c:	call   409960 <__sprintf_chk@plt+0x8670>
  40bc61:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40bc6c:	nop    DWORD PTR [rax+0x0]
  40bc70:	push   rbx
  40bc71:	xor    edx,edx
  40bc73:	mov    rbx,rdi
  40bc76:	mov    esi,0x1
  40bc7b:	call   40bc30 <__sprintf_chk@plt+0xa940>
  40bc80:	xor    edx,edx
  40bc82:	mov    esi,0x2
  40bc87:	mov    rdi,rbx
  40bc8a:	call   40bc30 <__sprintf_chk@plt+0xa940>
  40bc8f:	mov    rcx,QWORD PTR [rbx+0x18]
  40bc93:	mov    rax,QWORD PTR [rbx+0x10]
  40bc97:	lea    rdx,[rcx+0x20]
  40bc9b:	cmp    rax,rdx
  40bc9e:	jae    40bcb0 <__sprintf_chk@plt+0xa9c0>
  40bca0:	add    rax,0x10
  40bca4:	mov    DWORD PTR [rax-0x8],0x0
  40bcab:	cmp    rax,rdx
  40bcae:	jb     40bca0 <__sprintf_chk@plt+0xa9b0>
  40bcb0:	mov    QWORD PTR [rbx+0x10],rdx
  40bcb4:	mov    QWORD PTR [rcx+0x20],0x0
  40bcbc:	lea    rsi,[rip+0x91dd]        # 414ea0 <__sprintf_chk@plt+0x13bb0>
  40bcc3:	mov    DWORD PTR [rcx+0x28],0x3
  40bcca:	add    QWORD PTR [rbx+0x10],0x10
  40bccf:	mov    rdi,rbx
  40bcd2:	mov    edx,0x3
  40bcd7:	call   40b870 <__sprintf_chk@plt+0xa580>
  40bcdc:	mov    eax,0x1
  40bce1:	pop    rbx
  40bce2:	ret    
  40bce3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40bcee:	xchg   ax,ax
  40bcf0:	push   rbp
  40bcf1:	push   rbx
  40bcf2:	mov    rbp,rdx
  40bcf5:	mov    r8,rdi
  40bcf8:	mov    r9d,esi
  40bcfb:	mov    rbx,rcx
  40bcfe:	sub    rsp,0x8
  40bd02:	call   402b60 <__sprintf_chk@plt+0x1870>
  40bd07:	lea    rdx,[rip+0xa9c2]        # 4166d0 <__sprintf_chk@plt+0x153e0>
  40bd0e:	cmp    rax,rdx
  40bd11:	je     40bd30 <__sprintf_chk@plt+0xaa40>
  40bd13:	mov    eax,DWORD PTR [rax+0x8]
  40bd16:	test   eax,eax
  40bd18:	jle    40bd30 <__sprintf_chk@plt+0xaa40>
  40bd1a:	add    rsp,0x8
  40bd1e:	mov    rdx,rbx
  40bd21:	mov    esi,r9d
  40bd24:	pop    rbx
  40bd25:	pop    rbp
  40bd26:	mov    rdi,r8
  40bd29:	jmp    40bc30 <__sprintf_chk@plt+0xa940>
  40bd2e:	xchg   ax,ax
  40bd30:	test   rbx,rbx
  40bd33:	je     40bd45 <__sprintf_chk@plt+0xaa55>
  40bd35:	test   rbp,rbp
  40bd38:	je     40bd50 <__sprintf_chk@plt+0xaa60>
  40bd3a:	mov    rdi,rbp
  40bd3d:	call   4010f0 <strlen@plt>
  40bd42:	mov    QWORD PTR [rbx],rax
  40bd45:	add    rsp,0x8
  40bd49:	mov    rax,rbp
  40bd4c:	pop    rbx
  40bd4d:	pop    rbp
  40bd4e:	ret    
  40bd4f:	nop
  40bd50:	xor    eax,eax
  40bd52:	jmp    40bd42 <__sprintf_chk@plt+0xaa52>
  40bd54:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40bd5f:	nop
  40bd60:	push   r15
  40bd62:	push   r14
  40bd64:	lea    rdx,[rip+0xb0cf]        # 416e3a <__sprintf_chk@plt+0x15b4a>
  40bd6b:	push   r13
  40bd6d:	push   r12
  40bd6f:	mov    esi,0x2
  40bd74:	push   rbp
  40bd75:	push   rbx
  40bd76:	mov    r12,rdi
  40bd79:	sub    rsp,0x2038
  40bd80:	lea    rcx,[rsp+0x8]
  40bd85:	mov    rax,QWORD PTR fs:0x28
  40bd8e:	mov    QWORD PTR [rsp+0x2028],rax
  40bd96:	xor    eax,eax
  40bd98:	call   40bcf0 <__sprintf_chk@plt+0xaa00>
  40bd9d:	mov    edx,0x5
  40bda2:	mov    esi,0x1
  40bda7:	mov    rdi,r12
  40bdaa:	mov    r14,rax
  40bdad:	call   409ed0 <__sprintf_chk@plt+0x8be0>
  40bdb2:	mov    edx,0x1
  40bdb7:	mov    esi,0x3
  40bdbc:	mov    rdi,r12
  40bdbf:	call   409e30 <__sprintf_chk@plt+0x8b40>
  40bdc4:	mov    r15,rax
  40bdc7:	mov    ebx,eax
  40bdc9:	mov    rax,QWORD PTR [r12+0x18]
  40bdce:	lea    rdx,[rax+0x30]
  40bdd2:	cmp    rdx,QWORD PTR [r12+0x10]
  40bdd7:	jb     40be70 <__sprintf_chk@plt+0xab80>
  40bddd:	mov    esi,0x1
  40bde2:	mov    rdi,r12
  40bde5:	call   405c70 <__sprintf_chk@plt+0x4980>
  40bdea:	mov    r13d,eax
  40bded:	lea    rbp,[rsp+0x10]
  40bdf2:	cmp    r13d,r15d
  40bdf5:	mov    QWORD PTR [rsp+0x20],r12
  40bdfa:	mov    DWORD PTR [rsp+0x18],0x0
  40be02:	lea    rax,[rbp+0x18]
  40be06:	mov    QWORD PTR [rsp+0x10],rax
  40be0b:	jle    40be38 <__sprintf_chk@plt+0xab48>
  40be0d:	nop    DWORD PTR [rax]
  40be10:	mov    edx,ebx
  40be12:	mov    rsi,rbp
  40be15:	mov    rdi,r12
  40be18:	call   40bbb0 <__sprintf_chk@plt+0xa8c0>
  40be1d:	mov    rdx,QWORD PTR [rsp+0x8]
  40be22:	mov    rsi,r14
  40be25:	mov    rdi,rbp
  40be28:	add    ebx,0x1
  40be2b:	call   40ac40 <__sprintf_chk@plt+0x9950>
  40be30:	cmp    r13d,ebx
  40be33:	jne    40be10 <__sprintf_chk@plt+0xab20>
  40be35:	mov    ebx,r13d
  40be38:	cmp    r13d,ebx
  40be3b:	je     40bea0 <__sprintf_chk@plt+0xabb0>
  40be3d:	mov    rdi,rbp
  40be40:	call   40acb0 <__sprintf_chk@plt+0x99c0>
  40be45:	mov    rcx,QWORD PTR [rsp+0x2028]
  40be4d:	xor    rcx,QWORD PTR fs:0x28
  40be56:	mov    eax,0x1
  40be5b:	jne    40beb0 <__sprintf_chk@plt+0xabc0>
  40be5d:	add    rsp,0x2038
  40be64:	pop    rbx
  40be65:	pop    rbp
  40be66:	pop    r12
  40be68:	pop    r13
  40be6a:	pop    r14
  40be6c:	pop    r15
  40be6e:	ret    
  40be6f:	nop
  40be70:	lea    rcx,[rip+0xa859]        # 4166d0 <__sprintf_chk@plt+0x153e0>
  40be77:	cmp    rdx,rcx
  40be7a:	je     40bddd <__sprintf_chk@plt+0xaaed>
  40be80:	mov    eax,DWORD PTR [rax+0x38]
  40be83:	test   eax,eax
  40be85:	jle    40bddd <__sprintf_chk@plt+0xaaed>
  40be8b:	mov    esi,0x4
  40be90:	mov    rdi,r12
  40be93:	call   409e00 <__sprintf_chk@plt+0x8b10>
  40be98:	mov    r13d,eax
  40be9b:	jmp    40bded <__sprintf_chk@plt+0xaafd>
  40bea0:	mov    edx,r13d
  40bea3:	mov    rsi,rbp
  40bea6:	mov    rdi,r12
  40bea9:	call   40bbb0 <__sprintf_chk@plt+0xa8c0>
  40beae:	jmp    40be3d <__sprintf_chk@plt+0xab4d>
  40beb0:	call   401100 <__stack_chk_fail@plt>
  40beb5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40bec0:	push   rbx
  40bec1:	mov    esi,0x1
  40bec6:	mov    rbx,rdi
  40bec9:	call   40a4f0 <__sprintf_chk@plt+0x9200>
  40bece:	mov    esi,0x1
  40bed3:	mov    rdi,rbx
  40bed6:	call   402cd0 <__sprintf_chk@plt+0x19e0>
  40bedb:	test   eax,eax
  40bedd:	je     40bef0 <__sprintf_chk@plt+0xac00>
  40bedf:	mov    rax,QWORD PTR [rbx+0x10]
  40bee3:	sub    rax,QWORD PTR [rbx+0x18]
  40bee7:	pop    rbx
  40bee8:	sar    rax,0x4
  40beec:	ret    
  40beed:	nop    DWORD PTR [rax]
  40bef0:	lea    rdx,[rip+0xab95]        # 416a8c <__sprintf_chk@plt+0x1579c>
  40bef7:	mov    esi,0x2
  40befc:	mov    rdi,rbx
  40beff:	xor    ecx,ecx
  40bf01:	call   40bcf0 <__sprintf_chk@plt+0xaa00>
  40bf06:	lea    rsi,[rip+0xa84e]        # 41675b <__sprintf_chk@plt+0x1546b>
  40bf0d:	mov    rdx,rax
  40bf10:	mov    rdi,rbx
  40bf13:	xor    eax,eax
  40bf15:	call   409640 <__sprintf_chk@plt+0x8350>
  40bf1a:	nop    WORD PTR [rax+rax*1+0x0]
  40bf20:	push   r14
  40bf22:	push   r13
  40bf24:	mov    esi,0x1
  40bf29:	push   r12
  40bf2b:	push   rbp
  40bf2c:	push   rbx
  40bf2d:	mov    rbx,rdi
  40bf30:	sub    rsp,0x10
  40bf34:	mov    rdx,rsp
  40bf37:	mov    rax,QWORD PTR fs:0x28
  40bf40:	mov    QWORD PTR [rsp+0x8],rax
  40bf45:	xor    eax,eax
  40bf47:	call   40bc30 <__sprintf_chk@plt+0xa940>
  40bf4c:	mov    r12,QWORD PTR [rsp]
  40bf50:	mov    esi,0x2
  40bf55:	mov    rdi,rbx
  40bf58:	mov    rbp,rax
  40bf5b:	call   409e00 <__sprintf_chk@plt+0x8b10>
  40bf60:	lea    rdx,[r12+rax*1+0x1]
  40bf65:	test   rax,rax
  40bf68:	mov    r14,QWORD PTR [rsp]
  40bf6c:	mov    esi,0x3
  40bf71:	mov    rdi,rbx
  40bf74:	cmovs  rax,rdx
  40bf78:	xor    r13d,r13d
  40bf7b:	mov    rdx,0xffffffffffffffff
  40bf82:	test   rax,rax
  40bf85:	cmovs  rax,r13
  40bf89:	mov    r12,rax
  40bf8c:	call   409e30 <__sprintf_chk@plt+0x8b40>
  40bf91:	lea    rdx,[r14+rax*1+0x1]
  40bf96:	test   rax,rax
  40bf99:	cmovs  rax,rdx
  40bf9d:	mov    edx,0x1
  40bfa2:	test   rax,rax
  40bfa5:	cmovs  rax,r13
  40bfa9:	test   r12,r12
  40bfac:	cmove  r12,rdx
  40bfb0:	cmp    QWORD PTR [rsp],rax
  40bfb4:	cmovle rax,QWORD PTR [rsp]
  40bfb9:	cmp    r12,rax
  40bfbc:	jle    40bff8 <__sprintf_chk@plt+0xad08>
  40bfbe:	lea    rsi,[rip+0xae75]        # 416e3a <__sprintf_chk@plt+0x15b4a>
  40bfc5:	xor    edx,edx
  40bfc7:	mov    rdi,rbx
  40bfca:	call   409540 <__sprintf_chk@plt+0x8250>
  40bfcf:	mov    rcx,QWORD PTR [rsp+0x8]
  40bfd4:	xor    rcx,QWORD PTR fs:0x28
  40bfdd:	mov    eax,0x1
  40bfe2:	jne    40c00e <__sprintf_chk@plt+0xad1e>
  40bfe4:	add    rsp,0x10
  40bfe8:	pop    rbx
  40bfe9:	pop    rbp
  40bfea:	pop    r12
  40bfec:	pop    r13
  40bfee:	pop    r14
  40bff0:	ret    
  40bff1:	nop    DWORD PTR [rax+0x0]
  40bff8:	sub    rax,r12
  40bffb:	lea    rsi,[rbp+r12*1-0x1]
  40c000:	mov    rdi,rbx
  40c003:	lea    rdx,[rax+0x1]
  40c007:	call   409540 <__sprintf_chk@plt+0x8250>
  40c00c:	jmp    40bfcf <__sprintf_chk@plt+0xacdf>
  40c00e:	call   401100 <__stack_chk_fail@plt>
  40c013:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40c01e:	xchg   ax,ax
  40c020:	push   r14
  40c022:	push   r13
  40c024:	mov    esi,0x1
  40c029:	push   r12
  40c02b:	push   rbp
  40c02c:	push   rbx
  40c02d:	mov    rbx,rdi
  40c030:	sub    rsp,0x10
  40c034:	mov    rdx,rsp
  40c037:	mov    rax,QWORD PTR fs:0x28
  40c040:	mov    QWORD PTR [rsp+0x8],rax
  40c045:	xor    eax,eax
  40c047:	call   40bc30 <__sprintf_chk@plt+0xa940>
  40c04c:	mov    rbp,QWORD PTR [rsp]
  40c050:	mov    edx,0x1
  40c055:	mov    esi,0x2
  40c05a:	mov    rdi,rbx
  40c05d:	mov    r12,rax
  40c060:	call   409e30 <__sprintf_chk@plt+0x8b40>
  40c065:	lea    rdx,[rbp+rax*1+0x1]
  40c06a:	test   rax,rax
  40c06d:	mov    r14,QWORD PTR [rsp]
  40c071:	mov    esi,0x3
  40c076:	mov    rdi,rbx
  40c079:	cmovs  rax,rdx
  40c07d:	xor    r13d,r13d
  40c080:	test   rax,rax
  40c083:	cmovs  rax,r13
  40c087:	mov    rdx,rax
  40c08a:	mov    rbp,rax
  40c08d:	call   409e30 <__sprintf_chk@plt+0x8b40>
  40c092:	lea    rdx,[r14+rax*1+0x1]
  40c097:	test   rax,rax
  40c09a:	cmovs  rax,rdx
  40c09e:	mov    rdx,r13
  40c0a1:	test   rax,rax
  40c0a4:	cmovns rdx,rax
  40c0a8:	test   rbp,rbp
  40c0ab:	mov    eax,0x1
  40c0b0:	cmove  rbp,rax
  40c0b4:	mov    rax,QWORD PTR [rsp]
  40c0b8:	cmp    rdx,rax
  40c0bb:	cmova  rdx,rax
  40c0bf:	cmp    rbp,rdx
  40c0c2:	jg     40c150 <__sprintf_chk@plt+0xae60>
  40c0c8:	mov    eax,edx
  40c0ca:	sub    eax,ebp
  40c0cc:	lea    r13d,[rax+0x1]
  40c0d0:	movsxd rax,r13d
  40c0d3:	add    rax,rbp
  40c0d6:	cmp    rdx,rax
  40c0d9:	jge    40c158 <__sprintf_chk@plt+0xae68>
  40c0db:	lea    rdx,[rip+0xa9bc]        # 416a9e <__sprintf_chk@plt+0x157ae>
  40c0e2:	mov    esi,r13d
  40c0e5:	mov    rdi,rbx
  40c0e8:	call   4097d0 <__sprintf_chk@plt+0x84e0>
  40c0ed:	test   r13d,r13d
  40c0f0:	jle    40c12e <__sprintf_chk@plt+0xae3e>
  40c0f2:	mov    rdx,QWORD PTR [rbx+0x10]
  40c0f6:	lea    rax,[r12+rbp*1]
  40c0fa:	xor    ecx,ecx
  40c0fc:	nop    DWORD PTR [rax+0x0]
  40c100:	movzx  esi,BYTE PTR [rax+rcx*1-0x1]
  40c105:	vxorpd xmm0,xmm0,xmm0
  40c109:	mov    DWORD PTR [rdx+0x8],0x3
  40c110:	add    rcx,0x1
  40c114:	cmp    r13d,ecx
  40c117:	vcvtsi2sd xmm0,xmm0,rsi
  40c11c:	vmovsd QWORD PTR [rdx],xmm0
  40c120:	mov    rdi,QWORD PTR [rbx+0x10]
  40c124:	lea    rdx,[rdi+0x10]
  40c128:	mov    QWORD PTR [rbx+0x10],rdx
  40c12c:	jg     40c100 <__sprintf_chk@plt+0xae10>
  40c12e:	mov    rsi,QWORD PTR [rsp+0x8]
  40c133:	xor    rsi,QWORD PTR fs:0x28
  40c13c:	mov    eax,r13d
  40c13f:	jne    40c169 <__sprintf_chk@plt+0xae79>
  40c141:	add    rsp,0x10
  40c145:	pop    rbx
  40c146:	pop    rbp
  40c147:	pop    r12
  40c149:	pop    r13
  40c14b:	pop    r14
  40c14d:	ret    
  40c14e:	xchg   ax,ax
  40c150:	xor    r13d,r13d
  40c153:	jmp    40c12e <__sprintf_chk@plt+0xae3e>
  40c155:	nop    DWORD PTR [rax]
  40c158:	lea    rsi,[rip+0xa93f]        # 416a9e <__sprintf_chk@plt+0x157ae>
  40c15f:	mov    rdi,rbx
  40c162:	xor    eax,eax
  40c164:	call   409640 <__sprintf_chk@plt+0x8350>
  40c169:	call   401100 <__stack_chk_fail@plt>
  40c16e:	xchg   ax,ax
  40c170:	push   r12
  40c172:	push   rbp
  40c173:	mov    esi,0x1
  40c178:	push   rbx
  40c179:	mov    rbx,rdi
  40c17c:	sub    rsp,0x2030
  40c183:	lea    rdx,[rsp+0x8]
  40c188:	lea    rbp,[rsp+0x10]
  40c18d:	mov    rax,QWORD PTR fs:0x28
  40c196:	mov    QWORD PTR [rsp+0x2028],rax
  40c19e:	xor    eax,eax
  40c1a0:	call   40bc30 <__sprintf_chk@plt+0xa940>
  40c1a5:	mov    rdi,rbx
  40c1a8:	mov    esi,0x2
  40c1ad:	mov    r12,rax
  40c1b0:	call   409e00 <__sprintf_chk@plt+0x8b10>
  40c1b5:	lea    rdx,[rbp+0x18]
  40c1b9:	test   eax,eax
  40c1bb:	mov    QWORD PTR [rsp+0x20],rbx
  40c1c0:	mov    DWORD PTR [rsp+0x18],0x0
  40c1c8:	lea    ebx,[rax-0x1]
  40c1cb:	mov    QWORD PTR [rsp+0x10],rdx
  40c1d0:	jle    40c1f0 <__sprintf_chk@plt+0xaf00>
  40c1d2:	nop    WORD PTR [rax+rax*1+0x0]
  40c1d8:	mov    rdx,QWORD PTR [rsp+0x8]
  40c1dd:	mov    rsi,r12
  40c1e0:	mov    rdi,rbp
  40c1e3:	sub    ebx,0x1
  40c1e6:	call   40ac40 <__sprintf_chk@plt+0x9950>
  40c1eb:	cmp    ebx,0xffffffff
  40c1ee:	jne    40c1d8 <__sprintf_chk@plt+0xaee8>
  40c1f0:	mov    rdi,rbp
  40c1f3:	call   40acb0 <__sprintf_chk@plt+0x99c0>
  40c1f8:	mov    rcx,QWORD PTR [rsp+0x2028]
  40c200:	xor    rcx,QWORD PTR fs:0x28
  40c209:	mov    eax,0x1
  40c20e:	jne    40c21c <__sprintf_chk@plt+0xaf2c>
  40c210:	add    rsp,0x2030
  40c217:	pop    rbx
  40c218:	pop    rbp
  40c219:	pop    r12
  40c21b:	ret    
  40c21c:	call   401100 <__stack_chk_fail@plt>
  40c221:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40c22c:	nop    DWORD PTR [rax+0x0]
  40c230:	push   r15
  40c232:	push   r14
  40c234:	mov    esi,0x1
  40c239:	push   r13
  40c23b:	push   r12
  40c23d:	mov    r14,rdi
  40c240:	push   rbp
  40c241:	push   rbx
  40c242:	sub    rsp,0x22b8
  40c249:	mov    rax,QWORD PTR fs:0x28
  40c252:	mov    QWORD PTR [rsp+0x22a8],rax
  40c25a:	xor    eax,eax
  40c25c:	mov    rax,QWORD PTR [rdi+0x10]
  40c260:	sub    rax,QWORD PTR [rdi+0x18]
  40c264:	lea    rdx,[rsp+0x50]
  40c269:	lea    r12,[rsp+0x60]
  40c26e:	shr    rax,0x4
  40c272:	mov    QWORD PTR [rsp],rax
  40c276:	call   40bc30 <__sprintf_chk@plt+0xa940>
  40c27b:	mov    rbx,rax
  40c27e:	add    rax,QWORD PTR [rsp+0x50]
  40c283:	mov    QWORD PTR [rsp+0x70],r14
  40c288:	mov    DWORD PTR [rsp+0x68],0x0
  40c290:	mov    DWORD PTR [rsp+0x24],0x1
  40c298:	mov    rcx,rax
  40c29b:	lea    rax,[r12+0x18]
  40c2a0:	cmp    rbx,rcx
  40c2a3:	mov    QWORD PTR [rsp+0x60],rax
  40c2a8:	jae    40c488 <__sprintf_chk@plt+0xb198>
  40c2ae:	lea    rax,[rsp+0x2080]
  40c2b6:	mov    r13,rcx
  40c2b9:	mov    QWORD PTR [rsp+0x28],r14
  40c2be:	mov    QWORD PTR [rsp+0x38],rax
  40c2c3:	lea    rax,[rsp+0x2081]
  40c2cb:	mov    QWORD PTR [rsp+0x30],rax
  40c2d0:	lea    rax,[rsp+0x58]
  40c2d5:	mov    QWORD PTR [rsp+0x40],rax
  40c2da:	jmp    40c312 <__sprintf_chk@plt+0xb022>
  40c2dc:	nop    DWORD PTR [rax+0x0]
  40c2e0:	mov    rax,QWORD PTR [rsp+0x60]
  40c2e5:	lea    rdx,[r12+0x2018]
  40c2ed:	cmp    rax,rdx
  40c2f0:	jae    40c420 <__sprintf_chk@plt+0xb130>
  40c2f6:	lea    rdx,[rax+0x1]
  40c2fa:	add    rbx,0x1
  40c2fe:	mov    QWORD PTR [rsp+0x60],rdx
  40c303:	movzx  edx,BYTE PTR [rbx-0x1]
  40c307:	mov    BYTE PTR [rax],dl
  40c309:	cmp    rbx,r13
  40c30c:	jae    40c488 <__sprintf_chk@plt+0xb198>
  40c312:	cmp    BYTE PTR [rbx],0x25
  40c315:	jne    40c2e0 <__sprintf_chk@plt+0xaff0>
  40c317:	movzx  r14d,BYTE PTR [rbx+0x1]
  40c31c:	cmp    r14b,0x25
  40c320:	je     40c450 <__sprintf_chk@plt+0xb160>
  40c326:	add    DWORD PTR [rsp+0x24],0x1
  40c32b:	mov    eax,DWORD PTR [rsp+0x24]
  40c32f:	cmp    eax,DWORD PTR [rsp]
  40c332:	jg     40c4c0 <__sprintf_chk@plt+0xb1d0>
  40c338:	add    rbx,0x1
  40c33c:	test   r14b,r14b
  40c33f:	lea    rbp,[rip+0xa76e]        # 416ab4 <__sprintf_chk@plt+0x157c4>
  40c346:	mov    r15,rbx
  40c349:	jne    40c35d <__sprintf_chk@plt+0xb06d>
  40c34b:	jmp    40c37e <__sprintf_chk@plt+0xb08e>
  40c34d:	nop    DWORD PTR [rax]
  40c350:	add    r15,0x1
  40c354:	movzx  r14d,BYTE PTR [r15]
  40c358:	test   r14b,r14b
  40c35b:	je     40c36e <__sprintf_chk@plt+0xb07e>
  40c35d:	movsx  esi,r14b
  40c361:	mov    rdi,rbp
  40c364:	call   401110 <strchr@plt>
  40c369:	test   rax,rax
  40c36c:	jne    40c350 <__sprintf_chk@plt+0xb060>
  40c36e:	mov    rax,r15
  40c371:	sub    rax,rbx
  40c374:	cmp    rax,0x5
  40c378:	ja     40c438 <__sprintf_chk@plt+0xb148>
  40c37e:	call   4012e0 <__ctype_b_loc@plt>
  40c383:	mov    rcx,QWORD PTR [rax]
  40c386:	movzx  edx,r14b
  40c38a:	movzx  eax,WORD PTR [rcx+rdx*2]
  40c38e:	and    ax,0x800
  40c392:	cmp    ax,0x1
  40c396:	sbb    r15,0xffffffffffffffff
  40c39a:	movzx  edx,BYTE PTR [r15]
  40c39e:	test   BYTE PTR [rcx+rdx*2+0x1],0x8
  40c3a3:	mov    rax,rdx
  40c3a6:	je     40c3b1 <__sprintf_chk@plt+0xb0c1>
  40c3a8:	movzx  eax,BYTE PTR [r15+0x1]
  40c3ad:	add    r15,0x1
  40c3b1:	cmp    al,0x2e
  40c3b3:	je     40c500 <__sprintf_chk@plt+0xb210>
  40c3b9:	test   BYTE PTR [rcx+rax*2+0x1],0x8
  40c3be:	jne    40c4e0 <__sprintf_chk@plt+0xb1f0>
  40c3c4:	mov    rbp,r15
  40c3c7:	mov    rdi,QWORD PTR [rsp+0x30]
  40c3cc:	mov    ecx,0x11
  40c3d1:	sub    rbp,rbx
  40c3d4:	mov    rsi,rbx
  40c3d7:	mov    BYTE PTR [rsp+0x2080],0x25
  40c3df:	lea    rdx,[rbp+0x1]
  40c3e3:	lea    rbx,[r15+0x1]
  40c3e7:	call   401210 <__strncpy_chk@plt>
  40c3ec:	mov    BYTE PTR [rsp+rbp*1+0x2082],0x0
  40c3f4:	movzx  ecx,BYTE PTR [r15]
  40c3f8:	lea    eax,[rcx-0x45]
  40c3fb:	cmp    al,0x33
  40c3fd:	ja     40c784 <__sprintf_chk@plt+0xb494>
  40c403:	lea    rdx,[rip+0x9e42]        # 41624c <__sprintf_chk@plt+0x14f5c>
  40c40a:	movzx  eax,al
  40c40d:	movsxd rax,DWORD PTR [rdx+rax*4]
  40c411:	add    rax,rdx
  40c414:	jmp    rax
  40c416:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c420:	mov    rdi,r12
  40c423:	call   40ac10 <__sprintf_chk@plt+0x9920>
  40c428:	mov    rax,QWORD PTR [rsp+0x60]
  40c42d:	jmp    40c2f6 <__sprintf_chk@plt+0xb006>
  40c432:	nop    WORD PTR [rax+rax*1+0x0]
  40c438:	mov    r14,QWORD PTR [rsp+0x28]
  40c43d:	lea    rsi,[rip+0xadd4]        # 417218 <__sprintf_chk@plt+0x15f28>
  40c444:	xor    eax,eax
  40c446:	mov    rdi,r14
  40c449:	call   409640 <__sprintf_chk@plt+0x8350>
  40c44e:	xchg   ax,ax
  40c450:	mov    rax,QWORD PTR [rsp+0x60]
  40c455:	lea    rdx,[r12+0x2018]
  40c45d:	cmp    rax,rdx
  40c460:	jae    40c518 <__sprintf_chk@plt+0xb228>
  40c466:	lea    rdx,[rax+0x1]
  40c46a:	add    rbx,0x2
  40c46e:	mov    QWORD PTR [rsp+0x60],rdx
  40c473:	movzx  edx,BYTE PTR [rbx-0x1]
  40c477:	cmp    rbx,r13
  40c47a:	mov    BYTE PTR [rax],dl
  40c47c:	jb     40c312 <__sprintf_chk@plt+0xb022>
  40c482:	nop    WORD PTR [rax+rax*1+0x0]
  40c488:	mov    rdi,r12
  40c48b:	call   40acb0 <__sprintf_chk@plt+0x99c0>
  40c490:	mov    rcx,QWORD PTR [rsp+0x22a8]
  40c498:	xor    rcx,QWORD PTR fs:0x28
  40c4a1:	mov    eax,0x1
  40c4a6:	jne    40c8a8 <__sprintf_chk@plt+0xb5b8>
  40c4ac:	add    rsp,0x22b8
  40c4b3:	pop    rbx
  40c4b4:	pop    rbp
  40c4b5:	pop    r12
  40c4b7:	pop    r13
  40c4b9:	pop    r14
  40c4bb:	pop    r15
  40c4bd:	ret    
  40c4be:	xchg   ax,ax
  40c4c0:	mov    r14,QWORD PTR [rsp+0x28]
  40c4c5:	mov    esi,DWORD PTR [rsp+0x24]
  40c4c9:	lea    rdx,[rip+0xa454]        # 416924 <__sprintf_chk@plt+0x15634>
  40c4d0:	mov    rdi,r14
  40c4d3:	call   4098a0 <__sprintf_chk@plt+0x85b0>
  40c4d8:	nop    DWORD PTR [rax+rax*1+0x0]
  40c4e0:	mov    r14,QWORD PTR [rsp+0x28]
  40c4e5:	lea    rsi,[rip+0xad4c]        # 417238 <__sprintf_chk@plt+0x15f48>
  40c4ec:	xor    eax,eax
  40c4ee:	mov    rdi,r14
  40c4f1:	call   409640 <__sprintf_chk@plt+0x8350>
  40c4f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c500:	movzx  eax,BYTE PTR [r15+0x1]
  40c505:	test   BYTE PTR [rcx+rax*2+0x1],0x8
  40c50a:	jne    40c52a <__sprintf_chk@plt+0xb23a>
  40c50c:	add    r15,0x1
  40c510:	jmp    40c3c4 <__sprintf_chk@plt+0xb0d4>
  40c515:	nop    DWORD PTR [rax]
  40c518:	mov    rdi,r12
  40c51b:	call   40ac10 <__sprintf_chk@plt+0x9920>
  40c520:	mov    rax,QWORD PTR [rsp+0x60]
  40c525:	jmp    40c466 <__sprintf_chk@plt+0xb176>
  40c52a:	movzx  eax,BYTE PTR [r15+0x2]
  40c52f:	lea    rdx,[r15+0x2]
  40c533:	test   BYTE PTR [rcx+rax*2+0x1],0x8
  40c538:	je     40c77c <__sprintf_chk@plt+0xb48c>
  40c53e:	movzx  eax,BYTE PTR [r15+0x3]
  40c543:	add    r15,0x3
  40c547:	jmp    40c3b9 <__sprintf_chk@plt+0xb0c9>
  40c54c:	mov    rdx,QWORD PTR [rsp+0x40]
  40c551:	mov    esi,DWORD PTR [rsp+0x24]
  40c555:	mov    rdi,QWORD PTR [rsp+0x28]
  40c55a:	call   40bc30 <__sprintf_chk@plt+0xa940>
  40c55f:	mov    rdi,QWORD PTR [rsp+0x38]
  40c564:	mov    esi,0x2e
  40c569:	mov    QWORD PTR [rsp+0x48],rax
  40c56e:	call   401110 <strchr@plt>
  40c573:	test   rax,rax
  40c576:	mov    r8,QWORD PTR [rsp+0x48]
  40c57b:	je     40c866 <__sprintf_chk@plt+0xb576>
  40c581:	mov    rcx,QWORD PTR [rsp+0x38]
  40c586:	lea    rbp,[rsp+0x20a0]
  40c58e:	mov    edx,0x200
  40c593:	mov    esi,0x1
  40c598:	mov    rdi,rbp
  40c59b:	xor    eax,eax
  40c59d:	call   4012f0 <__sprintf_chk@plt>
  40c5a2:	mov    rdx,rbp
  40c5a5:	mov    ecx,DWORD PTR [rdx]
  40c5a7:	add    rdx,0x4
  40c5ab:	lea    eax,[rcx-0x1010101]
  40c5b1:	andn   eax,ecx,eax
  40c5b6:	and    eax,0x80808080
  40c5bb:	je     40c5a5 <__sprintf_chk@plt+0xb2b5>
  40c5bd:	mov    ecx,eax
  40c5bf:	mov    rsi,rbp
  40c5c2:	mov    rdi,r12
  40c5c5:	shr    ecx,0x10
  40c5c8:	test   eax,0x8080
  40c5cd:	cmove  eax,ecx
  40c5d0:	lea    rcx,[rdx+0x2]
  40c5d4:	cmove  rdx,rcx
  40c5d8:	mov    ecx,eax
  40c5da:	add    cl,al
  40c5dc:	sbb    rdx,0x3
  40c5e0:	sub    rdx,rbp
  40c5e3:	call   40ac40 <__sprintf_chk@plt+0x9950>
  40c5e8:	jmp    40c309 <__sprintf_chk@plt+0xb019>
  40c5ed:	mov    esi,DWORD PTR [rsp+0x24]
  40c5f1:	mov    rdi,QWORD PTR [rsp+0x28]
  40c5f6:	lea    rbp,[rsp+0x20a0]
  40c5fe:	call   409e90 <__sprintf_chk@plt+0x8ba0>
  40c603:	mov    rcx,QWORD PTR [rsp+0x38]
  40c608:	mov    edx,0x200
  40c60d:	mov    esi,0x1
  40c612:	mov    rdi,rbp
  40c615:	mov    eax,0x1
  40c61a:	call   4012f0 <__sprintf_chk@plt>
  40c61f:	jmp    40c5a2 <__sprintf_chk@plt+0xb2b2>
  40c621:	mov    rdi,QWORD PTR [rsp+0x38]
  40c626:	call   401f50 <__sprintf_chk@plt+0xc60>
  40c62b:	mov    esi,DWORD PTR [rsp+0x24]
  40c62f:	mov    rdi,QWORD PTR [rsp+0x28]
  40c634:	call   409e90 <__sprintf_chk@plt+0x8ba0>
  40c639:	vucomisd xmm0,QWORD PTR [rip+0xae2f]        # 417470 <__sprintf_chk@plt+0x16180>
  40c641:	jae    40c835 <__sprintf_chk@plt+0xb545>
  40c647:	vcvttsd2si r8,xmm0
  40c64c:	jmp    40c581 <__sprintf_chk@plt+0xb291>
  40c651:	mov    esi,DWORD PTR [rsp+0x24]
  40c655:	mov    rdi,QWORD PTR [rsp+0x28]
  40c65a:	lea    rbp,[rsp+0x20a0]
  40c662:	call   409e90 <__sprintf_chk@plt+0x8ba0>
  40c667:	vcvttsd2si r8d,xmm0
  40c66b:	mov    rcx,QWORD PTR [rsp+0x38]
  40c670:	mov    edx,0x200
  40c675:	mov    esi,0x1
  40c67a:	mov    rdi,rbp
  40c67d:	xor    eax,eax
  40c67f:	call   4012f0 <__sprintf_chk@plt>
  40c684:	jmp    40c5a2 <__sprintf_chk@plt+0xb2b2>
  40c689:	mov    r15,QWORD PTR [rsp+0x38]
  40c68e:	lea    rbp,[rsp+0x20a0]
  40c696:	mov    rdi,r15
  40c699:	call   401f50 <__sprintf_chk@plt+0xc60>
  40c69e:	mov    esi,DWORD PTR [rsp+0x24]
  40c6a2:	mov    rdi,QWORD PTR [rsp+0x28]
  40c6a7:	call   409e90 <__sprintf_chk@plt+0x8ba0>
  40c6ac:	mov    rcx,r15
  40c6af:	vcvttsd2si r8,xmm0
  40c6b4:	jmp    40c58e <__sprintf_chk@plt+0xb29e>
  40c6b9:	mov    rdx,QWORD PTR [rsp+0x40]
  40c6be:	mov    esi,DWORD PTR [rsp+0x24]
  40c6c2:	mov    rdi,QWORD PTR [rsp+0x28]
  40c6c7:	call   40bc30 <__sprintf_chk@plt+0xa940>
  40c6cc:	mov    rbp,rax
  40c6cf:	mov    rax,QWORD PTR [rsp+0x60]
  40c6d4:	lea    rdx,[r12+0x2018]
  40c6dc:	cmp    rax,rdx
  40c6df:	jae    40c854 <__sprintf_chk@plt+0xb564>
  40c6e5:	lea    rdx,[rax+0x1]
  40c6e9:	lea    r14,[r12+0x2018]
  40c6f1:	mov    QWORD PTR [rsp+0x60],rdx
  40c6f6:	mov    BYTE PTR [rax],0x22
  40c6f9:	mov    rax,QWORD PTR [rsp+0x58]
  40c6fe:	lea    rdx,[rax-0x1]
  40c702:	test   rax,rax
  40c705:	mov    QWORD PTR [rsp+0x58],rdx
  40c70a:	jne    40c74f <__sprintf_chk@plt+0xb45f>
  40c70c:	jmp    40c7f6 <__sprintf_chk@plt+0xb506>
  40c711:	nop    DWORD PTR [rax+0x0]
  40c718:	test   al,al
  40c71a:	jne    40c7c0 <__sprintf_chk@plt+0xb4d0>
  40c720:	lea    rsi,[rip+0xa396]        # 416abd <__sprintf_chk@plt+0x157cd>
  40c727:	mov    edx,0x4
  40c72c:	mov    rdi,r12
  40c72f:	call   40ac40 <__sprintf_chk@plt+0x9950>
  40c734:	mov    rax,QWORD PTR [rsp+0x58]
  40c739:	add    rbp,0x1
  40c73d:	lea    rdx,[rax-0x1]
  40c741:	test   rax,rax
  40c744:	mov    QWORD PTR [rsp+0x58],rdx
  40c749:	je     40c7f6 <__sprintf_chk@plt+0xb506>
  40c74f:	movzx  eax,BYTE PTR [rbp+0x0]
  40c753:	cmp    al,0xd
  40c755:	je     40c7a0 <__sprintf_chk@plt+0xb4b0>
  40c757:	jle    40c718 <__sprintf_chk@plt+0xb428>
  40c759:	cmp    al,0x22
  40c75b:	je     40c7c4 <__sprintf_chk@plt+0xb4d4>
  40c75d:	cmp    al,0x5c
  40c75f:	je     40c7c4 <__sprintf_chk@plt+0xb4d4>
  40c761:	mov    rax,QWORD PTR [rsp+0x60]
  40c766:	cmp    rax,r14
  40c769:	jae    40c7e4 <__sprintf_chk@plt+0xb4f4>
  40c76b:	lea    rdx,[rax+0x1]
  40c76f:	mov    QWORD PTR [rsp+0x60],rdx
  40c774:	movzx  edx,BYTE PTR [rbp+0x0]
  40c778:	mov    BYTE PTR [rax],dl
  40c77a:	jmp    40c734 <__sprintf_chk@plt+0xb444>
  40c77c:	mov    r15,rdx
  40c77f:	jmp    40c3c4 <__sprintf_chk@plt+0xb0d4>
  40c784:	mov    r14,QWORD PTR [rsp+0x28]
  40c789:	lea    rsi,[rip+0xaad8]        # 417268 <__sprintf_chk@plt+0x15f78>
  40c790:	movsx  edx,cl
  40c793:	xor    eax,eax
  40c795:	mov    rdi,r14
  40c798:	call   409640 <__sprintf_chk@plt+0x8350>
  40c79d:	nop    DWORD PTR [rax]
  40c7a0:	lea    rsi,[rip+0xa313]        # 416aba <__sprintf_chk@plt+0x157ca>
  40c7a7:	mov    edx,0x2
  40c7ac:	mov    rdi,r12
  40c7af:	call   40ac40 <__sprintf_chk@plt+0x9950>
  40c7b4:	jmp    40c734 <__sprintf_chk@plt+0xb444>
  40c7b9:	nop    DWORD PTR [rax+0x0]
  40c7c0:	cmp    al,0xa
  40c7c2:	jne    40c761 <__sprintf_chk@plt+0xb471>
  40c7c4:	mov    rax,QWORD PTR [rsp+0x60]
  40c7c9:	cmp    rax,r14
  40c7cc:	jae    40c826 <__sprintf_chk@plt+0xb536>
  40c7ce:	lea    rdx,[rax+0x1]
  40c7d2:	mov    QWORD PTR [rsp+0x60],rdx
  40c7d7:	mov    BYTE PTR [rax],0x5c
  40c7da:	mov    rax,QWORD PTR [rsp+0x60]
  40c7df:	cmp    rax,r14
  40c7e2:	jb     40c76b <__sprintf_chk@plt+0xb47b>
  40c7e4:	mov    rdi,r12
  40c7e7:	call   40ac10 <__sprintf_chk@plt+0x9920>
  40c7ec:	mov    rax,QWORD PTR [rsp+0x60]
  40c7f1:	jmp    40c76b <__sprintf_chk@plt+0xb47b>
  40c7f6:	mov    rax,QWORD PTR [rsp+0x60]
  40c7fb:	lea    rdx,[r12+0x2018]
  40c803:	cmp    rax,rdx
  40c806:	jb     40c815 <__sprintf_chk@plt+0xb525>
  40c808:	mov    rdi,r12
  40c80b:	call   40ac10 <__sprintf_chk@plt+0x9920>
  40c810:	mov    rax,QWORD PTR [rsp+0x60]
  40c815:	lea    rdx,[rax+0x1]
  40c819:	mov    QWORD PTR [rsp+0x60],rdx
  40c81e:	mov    BYTE PTR [rax],0x22
  40c821:	jmp    40c309 <__sprintf_chk@plt+0xb019>
  40c826:	mov    rdi,r12
  40c829:	call   40ac10 <__sprintf_chk@plt+0x9920>
  40c82e:	mov    rax,QWORD PTR [rsp+0x60]
  40c833:	jmp    40c7ce <__sprintf_chk@plt+0xb4de>
  40c835:	vsubsd xmm0,xmm0,QWORD PTR [rip+0xac33]        # 417470 <__sprintf_chk@plt+0x16180>
  40c83d:	movabs rax,0x8000000000000000
  40c847:	vcvttsd2si r8,xmm0
  40c84c:	xor    r8,rax
  40c84f:	jmp    40c581 <__sprintf_chk@plt+0xb291>
  40c854:	mov    rdi,r12
  40c857:	call   40ac10 <__sprintf_chk@plt+0x9920>
  40c85c:	mov    rax,QWORD PTR [rsp+0x60]
  40c861:	jmp    40c6e5 <__sprintf_chk@plt+0xb3f5>
  40c866:	cmp    QWORD PTR [rsp+0x58],0x63
  40c86c:	jbe    40c581 <__sprintf_chk@plt+0xb291>
  40c872:	mov    r15,QWORD PTR [rsp+0x28]
  40c877:	mov    esi,DWORD PTR [rsp+0x24]
  40c87b:	mov    rdi,r15
  40c87e:	call   402b60 <__sprintf_chk@plt+0x1870>
  40c883:	mov    rdx,QWORD PTR [r15+0x10]
  40c887:	mov    rcx,QWORD PTR [rax]
  40c88a:	mov    rdi,r12
  40c88d:	mov    eax,DWORD PTR [rax+0x8]
  40c890:	mov    QWORD PTR [rdx],rcx
  40c893:	add    rdx,0x10
  40c897:	mov    DWORD PTR [rdx-0x8],eax
  40c89a:	mov    QWORD PTR [r15+0x10],rdx
  40c89e:	call   40bae0 <__sprintf_chk@plt+0xa7f0>
  40c8a3:	jmp    40c309 <__sprintf_chk@plt+0xb019>
  40c8a8:	call   401100 <__stack_chk_fail@plt>
  40c8ad:	nop    DWORD PTR [rax]
  40c8b0:	push   r13
  40c8b2:	push   r12
  40c8b4:	mov    edx,0xa
  40c8b9:	push   rbp
  40c8ba:	push   rbx
  40c8bb:	mov    esi,0x2
  40c8c0:	mov    rbp,rdi
  40c8c3:	sub    rsp,0x18
  40c8c7:	mov    rax,QWORD PTR fs:0x28
  40c8d0:	mov    QWORD PTR [rsp+0x8],rax
  40c8d5:	xor    eax,eax
  40c8d7:	call   409e30 <__sprintf_chk@plt+0x8b40>
  40c8dc:	cmp    eax,0xa
  40c8df:	je     40c9a8 <__sprintf_chk@plt+0xb6b8>
  40c8e5:	mov    rbx,rax
  40c8e8:	xor    edx,edx
  40c8ea:	mov    esi,0x1
  40c8ef:	mov    rdi,rbp
  40c8f2:	call   40bc30 <__sprintf_chk@plt+0xa940>
  40c8f7:	mov    r13,rax
  40c8fa:	lea    eax,[rbx-0x2]
  40c8fd:	cmp    eax,0x22
  40c900:	ja     40c9f0 <__sprintf_chk@plt+0xb700>
  40c906:	mov    edx,ebx
  40c908:	mov    rsi,rsp
  40c90b:	mov    rdi,r13
  40c90e:	call   401250 <strtoul@plt>
  40c913:	mov    rbx,QWORD PTR [rsp]
  40c917:	mov    r12,rax
  40c91a:	cmp    r13,rbx
  40c91d:	je     40c946 <__sprintf_chk@plt+0xb656>
  40c91f:	call   4012e0 <__ctype_b_loc@plt>
  40c924:	mov    rsi,QWORD PTR [rax]
  40c927:	mov    rax,rbx
  40c92a:	jmp    40c934 <__sprintf_chk@plt+0xb644>
  40c92c:	nop    DWORD PTR [rax+0x0]
  40c930:	mov    QWORD PTR [rsp],rax
  40c934:	movzx  ecx,BYTE PTR [rax]
  40c937:	add    rax,0x1
  40c93b:	test   BYTE PTR [rsi+rcx*2+0x1],0x20
  40c940:	jne    40c930 <__sprintf_chk@plt+0xb640>
  40c942:	test   cl,cl
  40c944:	je     40c980 <__sprintf_chk@plt+0xb690>
  40c946:	mov    rax,QWORD PTR [rbp+0x10]
  40c94a:	mov    DWORD PTR [rax+0x8],0x0
  40c951:	add    rax,0x10
  40c955:	mov    QWORD PTR [rbp+0x10],rax
  40c959:	mov    rdi,QWORD PTR [rsp+0x8]
  40c95e:	xor    rdi,QWORD PTR fs:0x28
  40c967:	mov    eax,0x1
  40c96c:	jne    40ca23 <__sprintf_chk@plt+0xb733>
  40c972:	add    rsp,0x18
  40c976:	pop    rbx
  40c977:	pop    rbp
  40c978:	pop    r12
  40c97a:	pop    r13
  40c97c:	ret    
  40c97d:	nop    DWORD PTR [rax]
  40c980:	test   r12,r12
  40c983:	mov    rax,QWORD PTR [rbp+0x10]
  40c987:	js     40ca04 <__sprintf_chk@plt+0xb714>
  40c989:	vxorpd xmm0,xmm0,xmm0
  40c98d:	vcvtsi2sd xmm0,xmm0,r12
  40c992:	vmovsd QWORD PTR [rax],xmm0
  40c996:	mov    DWORD PTR [rax+0x8],0x3
  40c99d:	add    QWORD PTR [rbp+0x10],0x10
  40c9a2:	jmp    40c959 <__sprintf_chk@plt+0xb669>
  40c9a4:	nop    DWORD PTR [rax+0x0]
  40c9a8:	mov    esi,0x1
  40c9ad:	mov    rdi,rbp
  40c9b0:	call   40a4f0 <__sprintf_chk@plt+0x9200>
  40c9b5:	mov    esi,0x1
  40c9ba:	mov    rdi,rbp
  40c9bd:	call   402ff0 <__sprintf_chk@plt+0x1d00>
  40c9c2:	test   eax,eax
  40c9c4:	je     40c946 <__sprintf_chk@plt+0xb656>
  40c9c6:	mov    esi,0x1
  40c9cb:	mov    rdi,rbp
  40c9ce:	call   402f90 <__sprintf_chk@plt+0x1ca0>
  40c9d3:	mov    rax,QWORD PTR [rbp+0x10]
  40c9d7:	vmovsd QWORD PTR [rax],xmm0
  40c9db:	mov    DWORD PTR [rax+0x8],0x3
  40c9e2:	add    QWORD PTR [rbp+0x10],0x10
  40c9e7:	jmp    40c959 <__sprintf_chk@plt+0xb669>
  40c9ec:	nop    DWORD PTR [rax+0x0]
  40c9f0:	lea    rdx,[rip+0xa0cb]        # 416ac2 <__sprintf_chk@plt+0x157d2>
  40c9f7:	mov    esi,0x2
  40c9fc:	mov    rdi,rbp
  40c9ff:	call   4098a0 <__sprintf_chk@plt+0x85b0>
  40ca04:	mov    rdx,r12
  40ca07:	vxorpd xmm0,xmm0,xmm0
  40ca0b:	shr    rdx,1
  40ca0e:	and    r12d,0x1
  40ca12:	or     rdx,r12
  40ca15:	vcvtsi2sd xmm0,xmm0,rdx
  40ca1a:	vaddsd xmm0,xmm0,xmm0
  40ca1e:	jmp    40c992 <__sprintf_chk@plt+0xb6a2>
  40ca23:	call   401100 <__stack_chk_fail@plt>
  40ca28:	nop    DWORD PTR [rax+rax*1+0x0]
  40ca30:	push   rbp
  40ca31:	push   rbx
  40ca32:	mov    esi,0x1
  40ca37:	mov    rbx,rdi
  40ca3a:	sub    rsp,0x58
  40ca3e:	lea    rdx,[rsp+0x8]
  40ca43:	mov    rax,QWORD PTR fs:0x28
  40ca4c:	mov    QWORD PTR [rsp+0x48],rax
  40ca51:	xor    eax,eax
  40ca53:	call   40bc30 <__sprintf_chk@plt+0xa940>
  40ca58:	xor    ecx,ecx
  40ca5a:	mov    rdx,rax
  40ca5d:	mov    esi,0x2
  40ca62:	mov    rdi,rbx
  40ca65:	mov    rbp,rax
  40ca68:	call   40bcf0 <__sprintf_chk@plt+0xaa00>
  40ca6d:	mov    rdx,QWORD PTR [rsp+0x8]
  40ca72:	test   rax,rax
  40ca75:	lea    rcx,[rip+0xffffffffffff5394]        # 401e10 <__sprintf_chk@plt+0xb20>
  40ca7c:	lea    rsi,[rsp+0x20]
  40ca81:	mov    rdi,rbx
  40ca84:	mov    QWORD PTR [rsp+0x10],rbp
  40ca89:	mov    QWORD PTR [rsp+0x40],rbx
  40ca8e:	mov    QWORD PTR [rsp+0x30],rcx
  40ca93:	mov    QWORD PTR [rsp+0x18],rdx
  40ca98:	lea    rdx,[rip+0x9e2a]        # 4168c9 <__sprintf_chk@plt+0x155d9>
  40ca9f:	mov    QWORD PTR [rsp+0x20],0x0
  40caa8:	mov    QWORD PTR [rsp+0x28],0x0
  40cab1:	cmove  rax,rdx
  40cab5:	lea    rdx,[rsp+0x10]
  40caba:	mov    QWORD PTR [rsp+0x38],rdx
  40cabf:	mov    rdx,rax
  40cac2:	call   405e50 <__sprintf_chk@plt+0x4b60>
  40cac7:	test   eax,eax
  40cac9:	mov    edx,0x1
  40cace:	je     40caf5 <__sprintf_chk@plt+0xb805>
  40cad0:	mov    rax,QWORD PTR [rbx+0x10]
  40cad4:	mov    esi,0xfffffffe
  40cad9:	mov    rdi,rbx
  40cadc:	mov    DWORD PTR [rax+0x8],0x0
  40cae3:	add    rax,0x10
  40cae7:	mov    QWORD PTR [rbx+0x10],rax
  40caeb:	call   402c50 <__sprintf_chk@plt+0x1960>
  40caf0:	mov    edx,0x2
  40caf5:	mov    rcx,QWORD PTR [rsp+0x48]
  40cafa:	xor    rcx,QWORD PTR fs:0x28
  40cb03:	mov    eax,edx
  40cb05:	jne    40cb0e <__sprintf_chk@plt+0xb81e>
  40cb07:	add    rsp,0x58
  40cb0b:	pop    rbx
  40cb0c:	pop    rbp
  40cb0d:	ret    
  40cb0e:	call   401100 <__stack_chk_fail@plt>
  40cb13:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40cb1e:	xchg   ax,ax
  40cb20:	push   r14
  40cb22:	push   r13
  40cb24:	mov    esi,0x1
  40cb29:	push   r12
  40cb2b:	push   rbp
  40cb2c:	push   rbx
  40cb2d:	mov    rbx,rdi
  40cb30:	sub    rsp,0x2030
  40cb37:	lea    rdx,[rsp+0x8]
  40cb3c:	lea    rbp,[rsp+0x10]
  40cb41:	mov    rax,QWORD PTR fs:0x28
  40cb4a:	mov    QWORD PTR [rsp+0x2028],rax
  40cb52:	xor    eax,eax
  40cb54:	call   40bc30 <__sprintf_chk@plt+0xa940>
  40cb59:	cmp    QWORD PTR [rsp+0x8],0x0
  40cb5f:	mov    QWORD PTR [rsp+0x20],rbx
  40cb64:	lea    rbx,[rbp+0x18]
  40cb68:	mov    DWORD PTR [rsp+0x18],0x0
  40cb70:	mov    QWORD PTR [rsp+0x10],rbx
  40cb75:	je     40cbd0 <__sprintf_chk@plt+0xb8e0>
  40cb77:	lea    r14,[rbp+0x2018]
  40cb7e:	mov    r12,rax
  40cb81:	call   401030 <__ctype_toupper_loc@plt>
  40cb86:	mov    r13,rax
  40cb89:	mov    rax,rbx
  40cb8c:	xor    ebx,ebx
  40cb8e:	xchg   ax,ax
  40cb90:	lea    rdx,[rax+0x1]
  40cb94:	mov    QWORD PTR [rsp+0x10],rdx
  40cb99:	movzx  ecx,BYTE PTR [r12+rbx*1]
  40cb9e:	add    rbx,0x1
  40cba2:	mov    rdx,QWORD PTR [r13+0x0]
  40cba6:	mov    edx,DWORD PTR [rdx+rcx*4]
  40cba9:	mov    BYTE PTR [rax],dl
  40cbab:	cmp    QWORD PTR [rsp+0x8],rbx
  40cbb0:	jbe    40cbd0 <__sprintf_chk@plt+0xb8e0>
  40cbb2:	mov    rax,QWORD PTR [rsp+0x10]
  40cbb7:	cmp    rax,r14
  40cbba:	jb     40cb90 <__sprintf_chk@plt+0xb8a0>
  40cbbc:	mov    rdi,rbp
  40cbbf:	call   40ac10 <__sprintf_chk@plt+0x9920>
  40cbc4:	mov    rax,QWORD PTR [rsp+0x10]
  40cbc9:	jmp    40cb90 <__sprintf_chk@plt+0xb8a0>
  40cbcb:	nop    DWORD PTR [rax+rax*1+0x0]
  40cbd0:	mov    rdi,rbp
  40cbd3:	call   40acb0 <__sprintf_chk@plt+0x99c0>
  40cbd8:	mov    rsi,QWORD PTR [rsp+0x2028]
  40cbe0:	xor    rsi,QWORD PTR fs:0x28
  40cbe9:	mov    eax,0x1
  40cbee:	jne    40cc00 <__sprintf_chk@plt+0xb910>
  40cbf0:	add    rsp,0x2030
  40cbf7:	pop    rbx
  40cbf8:	pop    rbp
  40cbf9:	pop    r12
  40cbfb:	pop    r13
  40cbfd:	pop    r14
  40cbff:	ret    
  40cc00:	call   401100 <__stack_chk_fail@plt>
  40cc05:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40cc10:	push   r14
  40cc12:	push   r13
  40cc14:	mov    esi,0x1
  40cc19:	push   r12
  40cc1b:	push   rbp
  40cc1c:	push   rbx
  40cc1d:	mov    rbx,rdi
  40cc20:	sub    rsp,0x2030
  40cc27:	lea    rdx,[rsp+0x8]
  40cc2c:	lea    rbp,[rsp+0x10]
  40cc31:	mov    rax,QWORD PTR fs:0x28
  40cc3a:	mov    QWORD PTR [rsp+0x2028],rax
  40cc42:	xor    eax,eax
  40cc44:	call   40bc30 <__sprintf_chk@plt+0xa940>
  40cc49:	cmp    QWORD PTR [rsp+0x8],0x0
  40cc4f:	mov    QWORD PTR [rsp+0x20],rbx
  40cc54:	lea    rbx,[rbp+0x18]
  40cc58:	mov    DWORD PTR [rsp+0x18],0x0
  40cc60:	mov    QWORD PTR [rsp+0x10],rbx
  40cc65:	je     40ccc0 <__sprintf_chk@plt+0xb9d0>
  40cc67:	lea    r14,[rbp+0x2018]
  40cc6e:	mov    r12,rax
  40cc71:	call   4012d0 <__ctype_tolower_loc@plt>
  40cc76:	mov    r13,rax
  40cc79:	mov    rax,rbx
  40cc7c:	xor    ebx,ebx
  40cc7e:	xchg   ax,ax
  40cc80:	lea    rdx,[rax+0x1]
  40cc84:	mov    QWORD PTR [rsp+0x10],rdx
  40cc89:	movzx  ecx,BYTE PTR [r12+rbx*1]
  40cc8e:	add    rbx,0x1
  40cc92:	mov    rdx,QWORD PTR [r13+0x0]
  40cc96:	mov    edx,DWORD PTR [rdx+rcx*4]
  40cc99:	mov    BYTE PTR [rax],dl
  40cc9b:	cmp    QWORD PTR [rsp+0x8],rbx
  40cca0:	jbe    40ccc0 <__sprintf_chk@plt+0xb9d0>
  40cca2:	mov    rax,QWORD PTR [rsp+0x10]
  40cca7:	cmp    rax,r14
  40ccaa:	jb     40cc80 <__sprintf_chk@plt+0xb990>
  40ccac:	mov    rdi,rbp
  40ccaf:	call   40ac10 <__sprintf_chk@plt+0x9920>
  40ccb4:	mov    rax,QWORD PTR [rsp+0x10]
  40ccb9:	jmp    40cc80 <__sprintf_chk@plt+0xb990>
  40ccbb:	nop    DWORD PTR [rax+rax*1+0x0]
  40ccc0:	mov    rdi,rbp
  40ccc3:	call   40acb0 <__sprintf_chk@plt+0x99c0>
  40ccc8:	mov    rsi,QWORD PTR [rsp+0x2028]
  40ccd0:	xor    rsi,QWORD PTR fs:0x28
  40ccd9:	mov    eax,0x1
  40ccde:	jne    40ccf0 <__sprintf_chk@plt+0xba00>
  40cce0:	add    rsp,0x2030
  40cce7:	pop    rbx
  40cce8:	pop    rbp
  40cce9:	pop    r12
  40cceb:	pop    r13
  40cced:	pop    r14
  40ccef:	ret    
  40ccf0:	call   401100 <__stack_chk_fail@plt>
  40ccf5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40cd00:	push   r12
  40cd02:	push   rbp
  40cd03:	xor    edx,edx
  40cd05:	push   rbx
  40cd06:	mov    esi,0x1
  40cd0b:	mov    rbx,rdi
  40cd0e:	call   40bc30 <__sprintf_chk@plt+0xa940>
  40cd13:	mov    rdi,rax
  40cd16:	mov    rbp,rax
  40cd19:	call   401070 <remove@plt>
  40cd1e:	mov    r12d,eax
  40cd21:	call   401050 <__errno_location@plt>
  40cd26:	test   r12d,r12d
  40cd29:	jne    40cd50 <__sprintf_chk@plt+0xba60>
  40cd2b:	mov    rax,QWORD PTR [rbx+0x10]
  40cd2f:	mov    DWORD PTR [rax],0x1
  40cd35:	mov    DWORD PTR [rax+0x8],0x1
  40cd3c:	mov    eax,0x1
  40cd41:	add    QWORD PTR [rbx+0x10],0x10
  40cd46:	pop    rbx
  40cd47:	pop    rbp
  40cd48:	pop    r12
  40cd4a:	ret    
  40cd4b:	nop    DWORD PTR [rax+rax*1+0x0]
  40cd50:	mov    r12d,DWORD PTR [rax]
  40cd53:	mov    rax,QWORD PTR [rbx+0x10]
  40cd57:	mov    DWORD PTR [rax+0x8],0x0
  40cd5e:	add    rax,0x10
  40cd62:	mov    edi,r12d
  40cd65:	mov    QWORD PTR [rbx+0x10],rax
  40cd69:	call   4012b0 <strerror@plt>
  40cd6e:	lea    rsi,[rip+0x9d69]        # 416ade <__sprintf_chk@plt+0x157ee>
  40cd75:	mov    rcx,rax
  40cd78:	mov    rdx,rbp
  40cd7b:	mov    rdi,rbx
  40cd7e:	xor    eax,eax
  40cd80:	call   409280 <__sprintf_chk@plt+0x7f90>
  40cd85:	mov    rax,QWORD PTR [rbx+0x10]
  40cd89:	vxorpd xmm0,xmm0,xmm0
  40cd8d:	mov    DWORD PTR [rax+0x8],0x3
  40cd94:	vcvtsi2sd xmm0,xmm0,r12d
  40cd99:	vmovsd QWORD PTR [rax],xmm0
  40cd9d:	mov    eax,0x3
  40cda2:	add    QWORD PTR [rbx+0x10],0x10
  40cda7:	pop    rbx
  40cda8:	pop    rbp
  40cda9:	pop    r12
  40cdab:	ret    
  40cdac:	nop    DWORD PTR [rax+0x0]
  40cdb0:	push   r15
  40cdb2:	push   r14
  40cdb4:	push   r13
  40cdb6:	push   r12
  40cdb8:	mov    r12,rdi
  40cdbb:	push   rbp
  40cdbc:	push   rbx
  40cdbd:	sub    rsp,0x28
  40cdc1:	mov    rax,QWORD PTR fs:0x28
  40cdca:	mov    QWORD PTR [rsp+0x18],rax
  40cdcf:	xor    eax,eax
  40cdd1:	mov    rax,QWORD PTR [rdi+0x10]
  40cdd5:	sub    rax,QWORD PTR [rdi+0x18]
  40cdd9:	mov    QWORD PTR [rsp+0x8],rsi
  40cdde:	sar    rax,0x4
  40cde2:	cmp    eax,0x1
  40cde5:	je     40cee3 <__sprintf_chk@plt+0xbbf3>
  40cdeb:	lea    r14d,[rax-0x2]
  40cdef:	lea    rax,[rsp+0x10]
  40cdf4:	mov    ebx,edx
  40cdf6:	xor    ebp,ebp
  40cdf8:	mov    r13d,0x1
  40cdfe:	lea    r15,[rip+0x98cb]        # 4166d0 <__sprintf_chk@plt+0x153e0>
  40ce05:	add    r14,0x1
  40ce09:	mov    QWORD PTR [rsp],rax
  40ce0d:	jmp    40ce25 <__sprintf_chk@plt+0xbb35>
  40ce0f:	nop
  40ce10:	test   r13d,r13d
  40ce13:	jne    40ceb0 <__sprintf_chk@plt+0xbbc0>
  40ce19:	add    rbp,0x1
  40ce1d:	add    ebx,0x1
  40ce20:	cmp    rbp,r14
  40ce23:	je     40ce80 <__sprintf_chk@plt+0xbb90>
  40ce25:	mov    esi,ebx
  40ce27:	mov    rdi,r12
  40ce2a:	call   402b60 <__sprintf_chk@plt+0x1870>
  40ce2f:	cmp    rax,r15
  40ce32:	je     40ce3a <__sprintf_chk@plt+0xbb4a>
  40ce34:	cmp    DWORD PTR [rax+0x8],0x3
  40ce38:	je     40ce10 <__sprintf_chk@plt+0xbb20>
  40ce3a:	mov    rdx,QWORD PTR [rsp]
  40ce3e:	mov    esi,ebx
  40ce40:	mov    rdi,r12
  40ce43:	call   40bc30 <__sprintf_chk@plt+0xa940>
  40ce48:	test   r13d,r13d
  40ce4b:	je     40ce19 <__sprintf_chk@plt+0xbb29>
  40ce4d:	mov    rcx,QWORD PTR [rsp+0x8]
  40ce52:	mov    rdx,QWORD PTR [rsp+0x10]
  40ce57:	mov    esi,0x1
  40ce5c:	mov    rdi,rax
  40ce5f:	xor    r13d,r13d
  40ce62:	call   401290 <fwrite@plt>
  40ce67:	cmp    QWORD PTR [rsp+0x10],rax
  40ce6c:	sete   r13b
  40ce70:	add    rbp,0x1
  40ce74:	add    ebx,0x1
  40ce77:	cmp    rbp,r14
  40ce7a:	jne    40ce25 <__sprintf_chk@plt+0xbb35>
  40ce7c:	nop    DWORD PTR [rax+0x0]
  40ce80:	xor    edx,edx
  40ce82:	mov    esi,r13d
  40ce85:	mov    rdi,r12
  40ce88:	call   409370 <__sprintf_chk@plt+0x8080>
  40ce8d:	mov    rcx,QWORD PTR [rsp+0x18]
  40ce92:	xor    rcx,QWORD PTR fs:0x28
  40ce9b:	jne    40cee8 <__sprintf_chk@plt+0xbbf8>
  40ce9d:	add    rsp,0x28
  40cea1:	pop    rbx
  40cea2:	pop    rbp
  40cea3:	pop    r12
  40cea5:	pop    r13
  40cea7:	pop    r14
  40cea9:	pop    r15
  40ceab:	ret    
  40ceac:	nop    DWORD PTR [rax+0x0]
  40ceb0:	mov    esi,ebx
  40ceb2:	mov    rdi,r12
  40ceb5:	xor    r13d,r13d
  40ceb8:	call   402f90 <__sprintf_chk@plt+0x1ca0>
  40cebd:	mov    rdi,QWORD PTR [rsp+0x8]
  40cec2:	lea    rdx,[rip+0x98bf]        # 416788 <__sprintf_chk@plt+0x15498>
  40cec9:	mov    esi,0x1
  40cece:	mov    eax,0x1
  40ced3:	call   4012a0 <__fprintf_chk@plt>
  40ced8:	test   eax,eax
  40ceda:	setg   r13b
  40cede:	jmp    40ce19 <__sprintf_chk@plt+0xbb29>
  40cee3:	mov    r13d,eax
  40cee6:	jmp    40ce80 <__sprintf_chk@plt+0xbb90>
  40cee8:	call   401100 <__stack_chk_fail@plt>
  40ceed:	nop    DWORD PTR [rax]
  40cef0:	push   rbx
  40cef1:	mov    esi,0x2
  40cef6:	mov    rbx,rdi
  40cef9:	call   409810 <__sprintf_chk@plt+0x8520>
  40cefe:	mov    rdi,rbx
  40cf01:	mov    edx,0x1
  40cf06:	mov    rsi,rax
  40cf09:	pop    rbx
  40cf0a:	jmp    40cdb0 <__sprintf_chk@plt+0xbac0>
  40cf0f:	nop
  40cf10:	push   rbx
  40cf11:	mov    rbx,rdi
  40cf14:	call   40a850 <__sprintf_chk@plt+0x9560>
  40cf19:	mov    rdi,rbx
  40cf1c:	mov    edx,0x2
  40cf21:	mov    rsi,rax
  40cf24:	pop    rbx
  40cf25:	jmp    40cdb0 <__sprintf_chk@plt+0xbac0>
  40cf2a:	nop    WORD PTR [rax+rax*1+0x0]
  40cf30:	push   r13
  40cf32:	push   r12
  40cf34:	xor    edx,edx
  40cf36:	push   rbp
  40cf37:	push   rbx
  40cf38:	mov    esi,0x1
  40cf3d:	mov    rbx,rdi
  40cf40:	sub    rsp,0x8
  40cf44:	call   40bc30 <__sprintf_chk@plt+0xa940>
  40cf49:	lea    rdx,[rip+0x9b6b]        # 416abb <__sprintf_chk@plt+0x157cb>
  40cf50:	xor    ecx,ecx
  40cf52:	mov    esi,0x2
  40cf57:	mov    rdi,rbx
  40cf5a:	mov    rbp,rax
  40cf5d:	call   40bcf0 <__sprintf_chk@plt+0xaa00>
  40cf62:	mov    rdi,rbx
  40cf65:	mov    r13,rax
  40cf68:	call   40b6a0 <__sprintf_chk@plt+0xa3b0>
  40cf6d:	mov    rsi,r13
  40cf70:	mov    rdi,rbp
  40cf73:	mov    r12,rax
  40cf76:	call   401240 <fopen@plt>
  40cf7b:	test   rax,rax
  40cf7e:	mov    QWORD PTR [r12],rax
  40cf82:	je     40cf98 <__sprintf_chk@plt+0xbca8>
  40cf84:	add    rsp,0x8
  40cf88:	mov    eax,0x1
  40cf8d:	pop    rbx
  40cf8e:	pop    rbp
  40cf8f:	pop    r12
  40cf91:	pop    r13
  40cf93:	ret    
  40cf94:	nop    DWORD PTR [rax+0x0]
  40cf98:	add    rsp,0x8
  40cf9c:	mov    rdx,rbp
  40cf9f:	mov    rdi,rbx
  40cfa2:	pop    rbx
  40cfa3:	pop    rbp
  40cfa4:	pop    r12
  40cfa6:	pop    r13
  40cfa8:	xor    esi,esi
  40cfaa:	jmp    409370 <__sprintf_chk@plt+0x8080>
  40cfaf:	nop
  40cfb0:	push   r13
  40cfb2:	push   r12
  40cfb4:	mov    r12,rsi
  40cfb7:	push   rbp
  40cfb8:	push   rbx
  40cfb9:	mov    ebp,edx
  40cfbb:	mov    rbx,rdi
  40cfbe:	sub    rsp,0x8
  40cfc2:	call   401050 <__errno_location@plt>
  40cfc7:	mov    edi,DWORD PTR [rax]
  40cfc9:	call   4012b0 <strerror@plt>
  40cfce:	mov    esi,ebp
  40cfd0:	mov    rdi,rbx
  40cfd3:	xor    edx,edx
  40cfd5:	mov    r13,rax
  40cfd8:	call   40ba10 <__sprintf_chk@plt+0xa720>
  40cfdd:	lea    rsi,[rip+0x9af0]        # 416ad4 <__sprintf_chk@plt+0x157e4>
  40cfe4:	lea    rcx,[rax+0x1]
  40cfe8:	mov    r8,r13
  40cfeb:	mov    rdx,r12
  40cfee:	mov    rdi,rbx
  40cff1:	xor    eax,eax
  40cff3:	call   409280 <__sprintf_chk@plt+0x7f90>
  40cff8:	mov    esi,ebp
  40cffa:	mov    rdi,rbx
  40cffd:	call   402c10 <__sprintf_chk@plt+0x1920>
  40d002:	add    rsp,0x8
  40d006:	mov    eax,0x6
  40d00b:	pop    rbx
  40d00c:	pop    rbp
  40d00d:	pop    r12
  40d00f:	pop    r13
  40d011:	ret    
  40d012:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40d01d:	nop    DWORD PTR [rax]
  40d020:	push   r15
  40d022:	push   r14
  40d024:	push   r13
  40d026:	push   r12
  40d028:	mov    r13d,edx
  40d02b:	push   rbp
  40d02c:	push   rbx
  40d02d:	mov    rbx,rdi
  40d030:	mov    r12,rsi
  40d033:	sub    rsp,0x28
  40d037:	mov    rbp,QWORD PTR [rdi+0x10]
  40d03b:	sub    rbp,QWORD PTR [rdi+0x18]
  40d03f:	mov    rdi,rsi
  40d042:	mov    rax,QWORD PTR fs:0x28
  40d04b:	mov    QWORD PTR [rsp+0x18],rax
  40d050:	xor    eax,eax
  40d052:	call   4011b0 <clearerr@plt>
  40d057:	sar    rbp,0x4
  40d05b:	cmp    ebp,0x1
  40d05e:	jne    40d0b8 <__sprintf_chk@plt+0xbdc8>
  40d060:	mov    rsi,r12
  40d063:	mov    rdi,rbx
  40d066:	lea    ebp,[r13+0x1]
  40d06a:	call   40acd0 <__sprintf_chk@plt+0x99e0>
  40d06f:	mov    r14d,eax
  40d072:	mov    rdi,r12
  40d075:	call   4010a0 <ferror@plt>
  40d07a:	test   eax,eax
  40d07c:	jne    40d210 <__sprintf_chk@plt+0xbf20>
  40d082:	test   r14d,r14d
  40d085:	je     40d250 <__sprintf_chk@plt+0xbf60>
  40d08b:	mov    eax,ebp
  40d08d:	sub    eax,r13d
  40d090:	mov    rcx,QWORD PTR [rsp+0x18]
  40d095:	xor    rcx,QWORD PTR fs:0x28
  40d09e:	jne    40d2b3 <__sprintf_chk@plt+0xbfc3>
  40d0a4:	add    rsp,0x28
  40d0a8:	pop    rbx
  40d0a9:	pop    rbp
  40d0aa:	pop    r12
  40d0ac:	pop    r13
  40d0ae:	pop    r14
  40d0b0:	pop    r15
  40d0b2:	ret    
  40d0b3:	nop    DWORD PTR [rax+rax*1+0x0]
  40d0b8:	lea    esi,[rbp+0x13]
  40d0bb:	lea    rdx,[rip+0x9a23]        # 416ae5 <__sprintf_chk@plt+0x157f5>
  40d0c2:	mov    rdi,rbx
  40d0c5:	call   4097d0 <__sprintf_chk@plt+0x84e0>
  40d0ca:	lea    rax,[rsp+0x10]
  40d0cf:	lea    edx,[rbp-0x2]
  40d0d2:	mov    ebp,r13d
  40d0d5:	mov    QWORD PTR [rsp+0x8],rax
  40d0da:	lea    r14d,[rbp+0x1]
  40d0de:	mov    r15d,edx
  40d0e1:	nop    DWORD PTR [rax+0x0]
  40d0e8:	lea    ebp,[r14-0x1]
  40d0ec:	mov    rdi,rbx
  40d0ef:	mov    esi,ebp
  40d0f1:	call   402b60 <__sprintf_chk@plt+0x1870>
  40d0f6:	lea    rcx,[rip+0x95d3]        # 4166d0 <__sprintf_chk@plt+0x153e0>
  40d0fd:	cmp    rax,rcx
  40d100:	je     40d108 <__sprintf_chk@plt+0xbe18>
  40d102:	cmp    DWORD PTR [rax+0x8],0x3
  40d106:	je     40d130 <__sprintf_chk@plt+0xbe40>
  40d108:	xor    edx,edx
  40d10a:	mov    esi,ebp
  40d10c:	mov    rdi,rbx
  40d10f:	call   40ba10 <__sprintf_chk@plt+0xa720>
  40d114:	test   rax,rax
  40d117:	je     40d11e <__sprintf_chk@plt+0xbe2e>
  40d119:	cmp    BYTE PTR [rax],0x2a
  40d11c:	je     40d170 <__sprintf_chk@plt+0xbe80>
  40d11e:	lea    rdx,[rip+0x99d3]        # 416af8 <__sprintf_chk@plt+0x15808>
  40d125:	mov    esi,ebp
  40d127:	mov    rdi,rbx
  40d12a:	call   4098a0 <__sprintf_chk@plt+0x85b0>
  40d12f:	nop
  40d130:	mov    esi,ebp
  40d132:	mov    rdi,rbx
  40d135:	call   403060 <__sprintf_chk@plt+0x1d70>
  40d13a:	test   rax,rax
  40d13d:	je     40d1a0 <__sprintf_chk@plt+0xbeb0>
  40d13f:	mov    rdx,rax
  40d142:	mov    rsi,r12
  40d145:	mov    rdi,rbx
  40d148:	call   40aeb0 <__sprintf_chk@plt+0x9bc0>
  40d14d:	mov    r14d,eax
  40d150:	add    ebp,0x1
  40d153:	test   r15d,r15d
  40d156:	lea    edx,[r15-0x1]
  40d15a:	je     40d072 <__sprintf_chk@plt+0xbd82>
  40d160:	test   r14d,r14d
  40d163:	jne    40d0da <__sprintf_chk@plt+0xbdea>
  40d169:	jmp    40d201 <__sprintf_chk@plt+0xbf11>
  40d16e:	xchg   ax,ax
  40d170:	movzx  eax,BYTE PTR [rax+0x1]
  40d174:	cmp    al,0x6c
  40d176:	je     40d2a0 <__sprintf_chk@plt+0xbfb0>
  40d17c:	cmp    al,0x6e
  40d17e:	je     40d1d0 <__sprintf_chk@plt+0xbee0>
  40d180:	cmp    al,0x61
  40d182:	je     40d228 <__sprintf_chk@plt+0xbf38>
  40d188:	lea    rdx,[rip+0x997c]        # 416b0b <__sprintf_chk@plt+0x1581b>
  40d18f:	mov    esi,ebp
  40d191:	mov    rdi,rbx
  40d194:	call   4098a0 <__sprintf_chk@plt+0x85b0>
  40d199:	nop    DWORD PTR [rax+0x0]
  40d1a0:	mov    rdi,r12
  40d1a3:	call   4012c0 <getc@plt>
  40d1a8:	mov    rsi,r12
  40d1ab:	mov    edi,eax
  40d1ad:	mov    r14d,eax
  40d1b0:	call   4011e0 <ungetc@plt>
  40d1b5:	xor    edx,edx
  40d1b7:	xor    esi,esi
  40d1b9:	mov    rdi,rbx
  40d1bc:	call   409540 <__sprintf_chk@plt+0x8250>
  40d1c1:	cmp    r14d,0xffffffff
  40d1c5:	setne  r14b
  40d1c9:	movzx  r14d,r14b
  40d1cd:	jmp    40d150 <__sprintf_chk@plt+0xbe60>
  40d1cf:	nop
  40d1d0:	mov    rdx,QWORD PTR [rsp+0x8]
  40d1d5:	lea    rsi,[rip+0x992b]        # 416b07 <__sprintf_chk@plt+0x15817>
  40d1dc:	xor    eax,eax
  40d1de:	mov    rdi,r12
  40d1e1:	call   401090 <__isoc99_fscanf@plt>
  40d1e6:	cmp    eax,0x1
  40d1e9:	mov    rax,QWORD PTR [rbx+0x10]
  40d1ed:	je     40d264 <__sprintf_chk@plt+0xbf74>
  40d1ef:	mov    DWORD PTR [rax+0x8],0x0
  40d1f6:	add    rax,0x10
  40d1fa:	add    ebp,0x1
  40d1fd:	mov    QWORD PTR [rbx+0x10],rax
  40d201:	mov    rdi,r12
  40d204:	call   4010a0 <ferror@plt>
  40d209:	test   eax,eax
  40d20b:	je     40d250 <__sprintf_chk@plt+0xbf60>
  40d20d:	nop    DWORD PTR [rax]
  40d210:	xor    edx,edx
  40d212:	xor    esi,esi
  40d214:	mov    rdi,rbx
  40d217:	call   409370 <__sprintf_chk@plt+0x8080>
  40d21c:	jmp    40d090 <__sprintf_chk@plt+0xbda0>
  40d221:	nop    DWORD PTR [rax+0x0]
  40d228:	mov    rdx,0xffffffffffffffff
  40d22f:	mov    rsi,r12
  40d232:	mov    rdi,rbx
  40d235:	call   40aeb0 <__sprintf_chk@plt+0x9bc0>
  40d23a:	test   r15d,r15d
  40d23d:	mov    ebp,r14d
  40d240:	je     40d282 <__sprintf_chk@plt+0xbf92>
  40d242:	add    r14d,0x1
  40d246:	sub    r15d,0x1
  40d24a:	jmp    40d0e8 <__sprintf_chk@plt+0xbdf8>
  40d24f:	nop
  40d250:	mov    rax,QWORD PTR [rbx+0x10]
  40d254:	mov    DWORD PTR [rax-0x8],0x0
  40d25b:	mov    QWORD PTR [rbx+0x10],rax
  40d25f:	jmp    40d08b <__sprintf_chk@plt+0xbd9b>
  40d264:	vmovsd xmm0,QWORD PTR [rsp+0x10]
  40d26a:	mov    DWORD PTR [rax+0x8],0x3
  40d271:	mov    ebp,r14d
  40d274:	vmovsd QWORD PTR [rax],xmm0
  40d278:	add    QWORD PTR [rbx+0x10],0x10
  40d27d:	test   r15d,r15d
  40d280:	jne    40d242 <__sprintf_chk@plt+0xbf52>
  40d282:	mov    rdi,r12
  40d285:	call   4010a0 <ferror@plt>
  40d28a:	test   eax,eax
  40d28c:	je     40d08b <__sprintf_chk@plt+0xbd9b>
  40d292:	jmp    40d210 <__sprintf_chk@plt+0xbf20>
  40d297:	nop    WORD PTR [rax+rax*1+0x0]
  40d2a0:	mov    rsi,r12
  40d2a3:	mov    rdi,rbx
  40d2a6:	call   40acd0 <__sprintf_chk@plt+0x99e0>
  40d2ab:	mov    r14d,eax
  40d2ae:	jmp    40d150 <__sprintf_chk@plt+0xbe60>
  40d2b3:	call   401100 <__stack_chk_fail@plt>
  40d2b8:	nop    DWORD PTR [rax+rax*1+0x0]
  40d2c0:	push   rbx
  40d2c1:	mov    esi,0x1
  40d2c6:	mov    rbx,rdi
  40d2c9:	call   409810 <__sprintf_chk@plt+0x8520>
  40d2ce:	mov    rdi,rbx
  40d2d1:	mov    edx,0x1
  40d2d6:	mov    rsi,rax
  40d2d9:	pop    rbx
  40d2da:	jmp    40d020 <__sprintf_chk@plt+0xbd30>
  40d2df:	nop
  40d2e0:	push   rbx
  40d2e1:	mov    rbx,rdi
  40d2e4:	call   40a850 <__sprintf_chk@plt+0x9560>
  40d2e9:	mov    rdi,rbx
  40d2ec:	mov    edx,0x2
  40d2f1:	mov    rsi,rax
  40d2f4:	pop    rbx
  40d2f5:	jmp    40d020 <__sprintf_chk@plt+0xbd30>
  40d2fa:	nop    WORD PTR [rax+rax*1+0x0]
  40d300:	push   r14
  40d302:	push   r13
  40d304:	push   r12
  40d306:	push   rbp
  40d307:	mov    r12,rsi
  40d30a:	push   rbx
  40d30b:	mov    rbx,rdi
  40d30e:	sub    rsp,0x2050
  40d315:	mov    rbp,QWORD PTR [rdi+0x10]
  40d319:	sub    rbp,QWORD PTR [rdi+0x18]
  40d31d:	mov    rax,QWORD PTR fs:0x28
  40d326:	mov    QWORD PTR [rsp+0x2048],rax
  40d32e:	xor    eax,eax
  40d330:	mov    DWORD PTR [rsp+0x30],0x0
  40d338:	sar    rbp,0x4
  40d33c:	add    ebp,0x1
  40d33f:	test   rsi,rsi
  40d342:	je     40d4f8 <__sprintf_chk@plt+0xc208>
  40d348:	mov    rdx,rsi
  40d34b:	lea    rsi,[rip+0x97cf]        # 416b21 <__sprintf_chk@plt+0x15831>
  40d352:	xor    eax,eax
  40d354:	call   409280 <__sprintf_chk@plt+0x7f90>
  40d359:	lea    rsi,[rip+0x975b]        # 416abb <__sprintf_chk@plt+0x157cb>
  40d360:	mov    rdi,r12
  40d363:	call   401240 <fopen@plt>
  40d368:	test   rax,rax
  40d36b:	mov    rdi,rax
  40d36e:	mov    QWORD PTR [rsp+0x38],rax
  40d373:	je     40d530 <__sprintf_chk@plt+0xc240>
  40d379:	call   4012c0 <getc@plt>
  40d37e:	cmp    eax,0x23
  40d381:	je     40d4c8 <__sprintf_chk@plt+0xc1d8>
  40d387:	cmp    eax,0x1b
  40d38a:	jne    40d3dc <__sprintf_chk@plt+0xc0ec>
  40d38c:	test   r12,r12
  40d38f:	je     40d3dc <__sprintf_chk@plt+0xc0ec>
  40d391:	mov    rdx,QWORD PTR [rsp+0x38]
  40d396:	lea    rsi,[rip+0x9788]        # 416b25 <__sprintf_chk@plt+0x15835>
  40d39d:	mov    rdi,r12
  40d3a0:	call   401120 <freopen@plt>
  40d3a5:	test   rax,rax
  40d3a8:	mov    rdi,rax
  40d3ab:	mov    QWORD PTR [rsp+0x38],rax
  40d3b0:	jne    40d3ca <__sprintf_chk@plt+0xc0da>
  40d3b2:	jmp    40d549 <__sprintf_chk@plt+0xc259>
  40d3b7:	nop    WORD PTR [rax+rax*1+0x0]
  40d3c0:	cmp    eax,0x1b
  40d3c3:	je     40d3d4 <__sprintf_chk@plt+0xc0e4>
  40d3c5:	mov    rdi,QWORD PTR [rsp+0x38]
  40d3ca:	call   4012c0 <getc@plt>
  40d3cf:	cmp    eax,0xffffffff
  40d3d2:	jne    40d3c0 <__sprintf_chk@plt+0xc0d0>
  40d3d4:	mov    DWORD PTR [rsp+0x30],0x0
  40d3dc:	mov    rsi,QWORD PTR [rsp+0x38]
  40d3e1:	mov    edi,eax
  40d3e3:	call   4011e0 <ungetc@plt>
  40d3e8:	xor    edx,edx
  40d3ea:	mov    esi,0xffffffff
  40d3ef:	mov    rdi,rbx
  40d3f2:	call   40ba10 <__sprintf_chk@plt+0xa720>
  40d3f7:	lea    rdx,[rip+0x94cb]        # 4168c9 <__sprintf_chk@plt+0x155d9>
  40d3fe:	test   rax,rax
  40d401:	lea    rcx,[rip+0xffffffffffff5d08]        # 403110 <__sprintf_chk@plt+0x1e20>
  40d408:	mov    rsi,rsp
  40d40b:	mov    rdi,rbx
  40d40e:	mov    QWORD PTR [rsp+0x20],rbx
  40d413:	cmove  rax,rdx
  40d417:	lea    rdx,[rsp+0x30]
  40d41c:	mov    QWORD PTR [rsp+0x10],rcx
  40d421:	mov    QWORD PTR [rsp],0x0
  40d429:	mov    QWORD PTR [rsp+0x8],0x0
  40d432:	mov    QWORD PTR [rsp+0x18],rdx
  40d437:	mov    rdx,rax
  40d43a:	call   405e50 <__sprintf_chk@plt+0x4b60>
  40d43f:	mov    rdi,QWORD PTR [rsp+0x38]
  40d444:	mov    r13d,eax
  40d447:	call   4010a0 <ferror@plt>
  40d44c:	test   r12,r12
  40d44f:	mov    r14d,eax
  40d452:	je     40d45e <__sprintf_chk@plt+0xc16e>
  40d454:	mov    rdi,QWORD PTR [rsp+0x38]
  40d459:	call   4010e0 <fclose@plt>
  40d45e:	test   r14d,r14d
  40d461:	jne    40d4a0 <__sprintf_chk@plt+0xc1b0>
  40d463:	mov    esi,ebp
  40d465:	mov    rdi,rbx
  40d468:	call   402c10 <__sprintf_chk@plt+0x1920>
  40d46d:	mov    rcx,QWORD PTR [rsp+0x2048]
  40d475:	xor    rcx,QWORD PTR fs:0x28
  40d47e:	mov    eax,r13d
  40d481:	jne    40d562 <__sprintf_chk@plt+0xc272>
  40d487:	add    rsp,0x2050
  40d48e:	pop    rbx
  40d48f:	pop    rbp
  40d490:	pop    r12
  40d492:	pop    r13
  40d494:	pop    r14
  40d496:	ret    
  40d497:	nop    WORD PTR [rax+rax*1+0x0]
  40d4a0:	lea    rsi,[rbx+0x18]
  40d4a4:	lea    rdi,[rbx+0x10]
  40d4a8:	mov    edx,ebp
  40d4aa:	call   402ed0 <__sprintf_chk@plt+0x1be0>
  40d4af:	lea    rsi,[rip+0x9b5a]        # 417010 <__sprintf_chk@plt+0x15d20>
  40d4b6:	mov    edx,ebp
  40d4b8:	mov    rdi,rbx
  40d4bb:	call   40cfb0 <__sprintf_chk@plt+0xbcc0>
  40d4c0:	mov    r13d,eax
  40d4c3:	jmp    40d46d <__sprintf_chk@plt+0xc17d>
  40d4c5:	nop    DWORD PTR [rax]
  40d4c8:	mov    DWORD PTR [rsp+0x30],0x1
  40d4d0:	jmp    40d4dd <__sprintf_chk@plt+0xc1ed>
  40d4d2:	nop    WORD PTR [rax+rax*1+0x0]
  40d4d8:	cmp    eax,0xa
  40d4db:	je     40d520 <__sprintf_chk@plt+0xc230>
  40d4dd:	mov    rdi,QWORD PTR [rsp+0x38]
  40d4e2:	call   4012c0 <getc@plt>
  40d4e7:	cmp    eax,0xffffffff
  40d4ea:	jne    40d4d8 <__sprintf_chk@plt+0xc1e8>
  40d4ec:	jmp    40d3dc <__sprintf_chk@plt+0xc0ec>
  40d4f1:	nop    DWORD PTR [rax+0x0]
  40d4f8:	lea    rsi,[rip+0x961b]        # 416b1a <__sprintf_chk@plt+0x1582a>
  40d4ff:	mov    edx,0x6
  40d504:	call   409540 <__sprintf_chk@plt+0x8250>
  40d509:	mov    rax,QWORD PTR [rip+0xfad0]        # 41cfe0 <__sprintf_chk@plt+0x1bcf0>
  40d510:	mov    rdi,QWORD PTR [rax]
  40d513:	mov    QWORD PTR [rsp+0x38],rdi
  40d518:	jmp    40d379 <__sprintf_chk@plt+0xc089>
  40d51d:	nop    DWORD PTR [rax]
  40d520:	mov    rdi,QWORD PTR [rsp+0x38]
  40d525:	call   4012c0 <getc@plt>
  40d52a:	jmp    40d387 <__sprintf_chk@plt+0xc097>
  40d52f:	nop
  40d530:	lea    rsi,[rip+0x95f3]        # 416b2a <__sprintf_chk@plt+0x1583a>
  40d537:	mov    edx,ebp
  40d539:	mov    rdi,rbx
  40d53c:	call   40cfb0 <__sprintf_chk@plt+0xbcc0>
  40d541:	mov    r13d,eax
  40d544:	jmp    40d46d <__sprintf_chk@plt+0xc17d>
  40d549:	lea    rsi,[rip+0x95d8]        # 416b28 <__sprintf_chk@plt+0x15838>
  40d550:	mov    edx,ebp
  40d552:	mov    rdi,rbx
  40d555:	call   40cfb0 <__sprintf_chk@plt+0xbcc0>
  40d55a:	mov    r13d,eax
  40d55d:	jmp    40d46d <__sprintf_chk@plt+0xc17d>
  40d562:	call   401100 <__stack_chk_fail@plt>
  40d567:	nop    WORD PTR [rax+rax*1+0x0]
  40d570:	push   rbx
  40d571:	xor    edx,edx
  40d573:	xor    ecx,ecx
  40d575:	mov    rbx,rdi
  40d578:	mov    esi,0x1
  40d57d:	call   40bcf0 <__sprintf_chk@plt+0xaa00>
  40d582:	mov    rdi,rbx
  40d585:	mov    rsi,rax
  40d588:	call   40d300 <__sprintf_chk@plt+0xc010>
  40d58d:	test   eax,eax
  40d58f:	mov    edx,0x1
  40d594:	je     40d5bb <__sprintf_chk@plt+0xc2cb>
  40d596:	mov    rax,QWORD PTR [rbx+0x10]
  40d59a:	mov    esi,0xfffffffe
  40d59f:	mov    rdi,rbx
  40d5a2:	mov    DWORD PTR [rax+0x8],0x0
  40d5a9:	add    rax,0x10
  40d5ad:	mov    QWORD PTR [rbx+0x10],rax
  40d5b1:	call   402c50 <__sprintf_chk@plt+0x1960>
  40d5b6:	mov    edx,0x2
  40d5bb:	mov    eax,edx
  40d5bd:	pop    rbx
  40d5be:	ret    
  40d5bf:	nop
  40d5c0:	push   rbp
  40d5c1:	push   rbx
  40d5c2:	mov    rbp,rsi
  40d5c5:	mov    rbx,rdi
  40d5c8:	sub    rsp,0x8
  40d5cc:	call   401050 <__errno_location@plt>
  40d5d1:	mov    edi,DWORD PTR [rax]
  40d5d3:	call   4012b0 <strerror@plt>
  40d5d8:	lea    rsi,[rip+0x94ff]        # 416ade <__sprintf_chk@plt+0x157ee>
  40d5df:	mov    rcx,rax
  40d5e2:	mov    rdx,rbp
  40d5e5:	mov    rdi,rbx
  40d5e8:	xor    eax,eax
  40d5ea:	call   409280 <__sprintf_chk@plt+0x7f90>
  40d5ef:	xor    edx,edx
  40d5f1:	mov    esi,0xffffffff
  40d5f6:	mov    rdi,rbx
  40d5f9:	call   40ba10 <__sprintf_chk@plt+0xa720>
  40d5fe:	mov    esi,0x1
  40d603:	mov    rdx,rax
  40d606:	mov    rdi,rbx
  40d609:	call   4098a0 <__sprintf_chk@plt+0x85b0>
  40d60e:	xchg   ax,ax
  40d610:	push   r12
  40d612:	push   rbp
  40d613:	push   rbx
  40d614:	mov    rax,QWORD PTR [rdi+0x18]
  40d618:	mov    rbx,rdi
  40d61b:	cmp    rax,QWORD PTR [rdi+0x10]
  40d61f:	jb     40d658 <__sprintf_chk@plt+0xc368>
  40d621:	mov    edx,0x1
  40d626:	mov    esi,0xffffd8ef
  40d62b:	mov    rdi,rbx
  40d62e:	call   402d60 <__sprintf_chk@plt+0x1a70>
  40d633:	mov    rdi,rbx
  40d636:	call   40a850 <__sprintf_chk@plt+0x9560>
  40d63b:	mov    rdi,rbx
  40d63e:	xor    edx,edx
  40d640:	mov    esi,0x1
  40d645:	call   40b990 <__sprintf_chk@plt+0xa6a0>
  40d64a:	pop    rbx
  40d64b:	mov    eax,0x1
  40d650:	pop    rbp
  40d651:	pop    r12
  40d653:	ret    
  40d654:	nop    DWORD PTR [rax+0x0]
  40d658:	lea    rdx,[rip+0x9071]        # 4166d0 <__sprintf_chk@plt+0x153e0>
  40d65f:	cmp    rax,rdx
  40d662:	je     40d621 <__sprintf_chk@plt+0xc331>
  40d664:	mov    eax,DWORD PTR [rax+0x8]
  40d667:	test   eax,eax
  40d669:	jle    40d621 <__sprintf_chk@plt+0xc331>
  40d66b:	xor    edx,edx
  40d66d:	mov    esi,0x1
  40d672:	call   40bc30 <__sprintf_chk@plt+0xa940>
  40d677:	mov    rdi,rbx
  40d67a:	mov    rbp,rax
  40d67d:	call   40b6a0 <__sprintf_chk@plt+0xa3b0>
  40d682:	lea    rsi,[rip+0x9432]        # 416abb <__sprintf_chk@plt+0x157cb>
  40d689:	mov    rdi,rbp
  40d68c:	mov    r12,rax
  40d68f:	call   401240 <fopen@plt>
  40d694:	test   rax,rax
  40d697:	mov    QWORD PTR [r12],rax
  40d69b:	je     40d6c0 <__sprintf_chk@plt+0xc3d0>
  40d69d:	mov    rsi,QWORD PTR [rbx+0x10]
  40d6a1:	sub    rsi,QWORD PTR [rbx+0x18]
  40d6a5:	mov    rdi,rbx
  40d6a8:	mov    edx,0x1
  40d6ad:	sar    rsi,0x4
  40d6b1:	call   40b990 <__sprintf_chk@plt+0xa6a0>
  40d6b6:	pop    rbx
  40d6b7:	mov    eax,0x1
  40d6bc:	pop    rbp
  40d6bd:	pop    r12
  40d6bf:	ret    
  40d6c0:	mov    rsi,rbp
  40d6c3:	mov    rdi,rbx
  40d6c6:	call   40d5c0 <__sprintf_chk@plt+0xc2d0>
  40d6cb:	nop    DWORD PTR [rax+rax*1+0x0]
  40d6d0:	push   r14
  40d6d2:	push   r13
  40d6d4:	push   r12
  40d6d6:	push   rbp
  40d6d7:	mov    ebp,esi
  40d6d9:	push   rbx
  40d6da:	mov    rax,QWORD PTR [rdi+0x18]
  40d6de:	mov    rbx,rdi
  40d6e1:	cmp    rax,QWORD PTR [rdi+0x10]
  40d6e5:	jae    40d73e <__sprintf_chk@plt+0xc44e>
  40d6e7:	lea    r14,[rip+0x8fe2]        # 4166d0 <__sprintf_chk@plt+0x153e0>
  40d6ee:	cmp    rax,r14
  40d6f1:	je     40d73e <__sprintf_chk@plt+0xc44e>
  40d6f3:	mov    eax,DWORD PTR [rax+0x8]
  40d6f6:	test   eax,eax
  40d6f8:	jle    40d73e <__sprintf_chk@plt+0xc44e>
  40d6fa:	mov    r13,rdx
  40d6fd:	mov    esi,0x1
  40d702:	xor    edx,edx
  40d704:	call   40ba10 <__sprintf_chk@plt+0xa720>
  40d709:	test   rax,rax
  40d70c:	mov    r12,rax
  40d70f:	mov    rdi,rbx
  40d712:	je     40d760 <__sprintf_chk@plt+0xc470>
  40d714:	call   40b6a0 <__sprintf_chk@plt+0xa3b0>
  40d719:	mov    rsi,r13
  40d71c:	mov    rdi,r12
  40d71f:	mov    r14,rax
  40d722:	call   401240 <fopen@plt>
  40d727:	test   rax,rax
  40d72a:	mov    QWORD PTR [r14],rax
  40d72d:	je     40d7a0 <__sprintf_chk@plt+0xc4b0>
  40d72f:	mov    edx,ebp
  40d731:	mov    esi,0xffffd8ef
  40d736:	mov    rdi,rbx
  40d739:	call   407e60 <__sprintf_chk@plt+0x6b70>
  40d73e:	mov    edx,ebp
  40d740:	mov    rdi,rbx
  40d743:	mov    esi,0xffffd8ef
  40d748:	call   402d60 <__sprintf_chk@plt+0x1a70>
  40d74d:	pop    rbx
  40d74e:	mov    eax,0x1
  40d753:	pop    rbp
  40d754:	pop    r12
  40d756:	pop    r13
  40d758:	pop    r14
  40d75a:	ret    
  40d75b:	nop    DWORD PTR [rax+rax*1+0x0]
  40d760:	call   40a850 <__sprintf_chk@plt+0x9560>
  40d765:	mov    rdx,QWORD PTR [rbx+0x18]
  40d769:	mov    rax,QWORD PTR [rbx+0x10]
  40d76d:	cmp    rdx,rax
  40d770:	jae    40d790 <__sprintf_chk@plt+0xc4a0>
  40d772:	mov    ecx,DWORD PTR [rdx+0x8]
  40d775:	mov    rdx,QWORD PTR [rdx]
  40d778:	add    rax,0x10
  40d77c:	mov    DWORD PTR [rax-0x8],ecx
  40d77f:	mov    QWORD PTR [rax-0x10],rdx
  40d783:	mov    QWORD PTR [rbx+0x10],rax
  40d787:	jmp    40d72f <__sprintf_chk@plt+0xc43f>
  40d789:	nop    DWORD PTR [rax+0x0]
  40d790:	xor    ecx,ecx
  40d792:	mov    rdx,r14
  40d795:	jmp    40d775 <__sprintf_chk@plt+0xc485>
  40d797:	nop    WORD PTR [rax+rax*1+0x0]
  40d7a0:	mov    rsi,r12
  40d7a3:	mov    rdi,rbx
  40d7a6:	call   40d5c0 <__sprintf_chk@plt+0xc2d0>
  40d7ab:	nop    DWORD PTR [rax+rax*1+0x0]
  40d7b0:	lea    rdx,[rip+0x90c5]        # 41687c <__sprintf_chk@plt+0x1558c>
  40d7b7:	mov    esi,0x2
  40d7bc:	jmp    40d6d0 <__sprintf_chk@plt+0xc3e0>
  40d7c1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40d7cc:	nop    DWORD PTR [rax+0x0]
  40d7d0:	lea    rdx,[rip+0x92e4]        # 416abb <__sprintf_chk@plt+0x157cb>
  40d7d7:	mov    esi,0x1
  40d7dc:	jmp    40d6d0 <__sprintf_chk@plt+0xc3e0>
  40d7e1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40d7ec:	nop    DWORD PTR [rax+0x0]
  40d7f0:	push   r12
  40d7f2:	push   rbp
  40d7f3:	mov    r12d,esi
  40d7f6:	push   rbx
  40d7f7:	mov    rax,QWORD PTR [rdi+0x20]
  40d7fb:	mov    rbx,rdi
  40d7fe:	mov    rcx,QWORD PTR [rax+0x70]
  40d802:	cmp    QWORD PTR [rax+0x78],rcx
  40d806:	jb     40d80d <__sprintf_chk@plt+0xc51d>
  40d808:	call   408be0 <__sprintf_chk@plt+0x78f0>
  40d80d:	mov    rbp,QWORD PTR [rbx+0x10]
  40d811:	mov    edx,r12d
  40d814:	mov    rdi,rbx
  40d817:	xor    esi,esi
  40d819:	call   407420 <__sprintf_chk@plt+0x6130>
  40d81e:	mov    DWORD PTR [rbp+0x8],0x5
  40d825:	mov    QWORD PTR [rbp+0x0],rax
  40d829:	add    QWORD PTR [rbx+0x10],0x10
  40d82e:	pop    rbx
  40d82f:	pop    rbp
  40d830:	pop    r12
  40d832:	ret    
  40d833:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40d83e:	xchg   ax,ax
  40d840:	push   r12
  40d842:	push   rbp
  40d843:	push   rbx
  40d844:	mov    rcx,QWORD PTR [rdi+0x18]
  40d848:	mov    rbx,rdi
  40d84b:	mov    rax,QWORD PTR [rdi+0x10]
  40d84f:	lea    rdx,[rcx+0x10]
  40d853:	cmp    rax,rdx
  40d856:	jae    40d870 <__sprintf_chk@plt+0xc580>
  40d858:	nop    DWORD PTR [rax+rax*1+0x0]
  40d860:	add    rax,0x10
  40d864:	mov    DWORD PTR [rax-0x8],0x0
  40d86b:	cmp    rax,rdx
  40d86e:	jb     40d860 <__sprintf_chk@plt+0xc570>
  40d870:	xor    esi,esi
  40d872:	mov    QWORD PTR [rbx+0x10],rdx
  40d876:	mov    rdi,rbx
  40d879:	call   40b5c0 <__sprintf_chk@plt+0xa2d0>
  40d87e:	mov    esi,0x1
  40d883:	mov    rdi,rbx
  40d886:	call   402cd0 <__sprintf_chk@plt+0x19e0>
  40d88b:	test   eax,eax
  40d88d:	jne    40d8a0 <__sprintf_chk@plt+0xc5b0>
  40d88f:	pop    rbx
  40d890:	mov    eax,0x1
  40d895:	pop    rbp
  40d896:	pop    r12
  40d898:	ret    
  40d899:	nop    DWORD PTR [rax+0x0]
  40d8a0:	mov    rax,QWORD PTR [rbx+0x18]
  40d8a4:	cmp    rax,QWORD PTR [rbx+0x10]
  40d8a8:	jae    40d988 <__sprintf_chk@plt+0xc698>
  40d8ae:	lea    rdx,[rip+0x8e1b]        # 4166d0 <__sprintf_chk@plt+0x153e0>
  40d8b5:	cmp    rax,rdx
  40d8b8:	je     40d988 <__sprintf_chk@plt+0xc698>
  40d8be:	cmp    DWORD PTR [rax+0x8],0x1
  40d8c2:	jne    40d988 <__sprintf_chk@plt+0xc698>
  40d8c8:	xor    esi,esi
  40d8ca:	mov    rdi,rbx
  40d8cd:	call   40d7f0 <__sprintf_chk@plt+0xc500>
  40d8d2:	mov    rax,QWORD PTR [rbx+0x10]
  40d8d6:	mov    esi,0xffffd8ed
  40d8db:	mov    rdi,rbx
  40d8de:	mov    rdx,QWORD PTR [rax-0x10]
  40d8e2:	mov    QWORD PTR [rax],rdx
  40d8e5:	mov    edx,DWORD PTR [rax-0x8]
  40d8e8:	mov    DWORD PTR [rax+0x8],edx
  40d8eb:	lea    rdx,[rax+0x10]
  40d8ef:	mov    QWORD PTR [rbx+0x10],rdx
  40d8f3:	mov    DWORD PTR [rax+0x10],0x1
  40d8fa:	mov    rbp,QWORD PTR [rbx+0x10]
  40d8fe:	mov    DWORD PTR [rax+0x18],0x1
  40d905:	lea    rax,[rbp+0x10]
  40d909:	mov    QWORD PTR [rbx+0x10],rax
  40d90d:	call   402b20 <__sprintf_chk@plt+0x1830>
  40d912:	mov    rsi,QWORD PTR [rax]
  40d915:	lea    rdx,[rbp-0x10]
  40d919:	mov    rdi,rbx
  40d91c:	mov    r12,rax
  40d91f:	call   407840 <__sprintf_chk@plt+0x6550>
  40d924:	mov    rdx,QWORD PTR [rbp+0x0]
  40d928:	mov    QWORD PTR [rax],rdx
  40d92b:	mov    edx,DWORD PTR [rbp+0x8]
  40d92e:	mov    DWORD PTR [rax+0x8],edx
  40d931:	mov    rax,QWORD PTR [rbx+0x10]
  40d935:	cmp    DWORD PTR [rax-0x8],0x3
  40d939:	jle    40d968 <__sprintf_chk@plt+0xc678>
  40d93b:	mov    rax,QWORD PTR [rax-0x10]
  40d93f:	test   BYTE PTR [rax+0x9],0x3
  40d943:	je     40d968 <__sprintf_chk@plt+0xc678>
  40d945:	mov    rax,QWORD PTR [r12]
  40d949:	movzx  edx,BYTE PTR [rax+0x9]
  40d94d:	test   dl,0x4
  40d950:	je     40d968 <__sprintf_chk@plt+0xc678>
  40d952:	mov    rcx,QWORD PTR [rbx+0x20]
  40d956:	and    edx,0xfffffffb
  40d959:	mov    BYTE PTR [rax+0x9],dl
  40d95c:	mov    rdx,QWORD PTR [rcx+0x40]
  40d960:	mov    QWORD PTR [rax+0x30],rdx
  40d964:	mov    QWORD PTR [rcx+0x40],rax
  40d968:	sub    QWORD PTR [rbx+0x10],0x20
  40d96d:	mov    rdi,rbx
  40d970:	mov    esi,0x2
  40d975:	call   402db0 <__sprintf_chk@plt+0x1ac0>
  40d97a:	pop    rbx
  40d97b:	mov    eax,0x1
  40d980:	pop    rbp
  40d981:	pop    r12
  40d983:	ret    
  40d984:	nop    DWORD PTR [rax+0x0]
  40d988:	mov    rdi,rbx
  40d98b:	call   4032f0 <__sprintf_chk@plt+0x2000>
  40d990:	test   eax,eax
  40d992:	jne    40d9a8 <__sprintf_chk@plt+0xc6b8>
  40d994:	lea    rdx,[rip+0x9194]        # 416b2f <__sprintf_chk@plt+0x1583f>
  40d99b:	mov    esi,0x1
  40d9a0:	mov    rdi,rbx
  40d9a3:	call   4098a0 <__sprintf_chk@plt+0x85b0>
  40d9a8:	mov    esi,0xffffd8ed
  40d9ad:	mov    rdi,rbx
  40d9b0:	call   402d30 <__sprintf_chk@plt+0x1a40>
  40d9b5:	mov    esi,0xffffffff
  40d9ba:	mov    rdi,rbx
  40d9bd:	call   402cd0 <__sprintf_chk@plt+0x19e0>
  40d9c2:	sub    QWORD PTR [rbx+0x10],0x10
  40d9c7:	test   eax,eax
  40d9c9:	je     40d994 <__sprintf_chk@plt+0xc6a4>
  40d9cb:	mov    rdi,rbx
  40d9ce:	call   4032f0 <__sprintf_chk@plt+0x2000>
  40d9d3:	jmp    40d96d <__sprintf_chk@plt+0xc67d>
  40d9d5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40d9e0:	push   r15
  40d9e2:	push   r14
  40d9e4:	mov    r15d,ecx
  40d9e7:	push   r13
  40d9e9:	push   r12
  40d9eb:	lea    r13,[rip+0x8cde]        # 4166d0 <__sprintf_chk@plt+0x153e0>
  40d9f2:	push   rbp
  40d9f3:	push   rbx
  40d9f4:	mov    rbx,rdi
  40d9f7:	mov    rbp,rdx
  40d9fa:	sub    rsp,0x8
  40d9fe:	call   402b60 <__sprintf_chk@plt+0x1870>
  40da03:	mov    rdx,QWORD PTR [rbx+0x10]
  40da07:	mov    rcx,QWORD PTR [rax]
  40da0a:	mov    eax,DWORD PTR [rax+0x8]
  40da0d:	mov    QWORD PTR [rdx],rcx
  40da10:	add    rdx,0x10
  40da14:	mov    DWORD PTR [rdx-0x8],eax
  40da17:	mov    QWORD PTR [rbx+0x10],rdx
  40da1b:	jmp    40da44 <__sprintf_chk@plt+0xc754>
  40da1d:	nop    DWORD PTR [rax]
  40da20:	cmp    esi,0x5
  40da23:	jne    40db20 <__sprintf_chk@plt+0xc830>
  40da29:	mov    esi,0xfffffffe
  40da2e:	mov    rdi,rbx
  40da31:	lea    rbp,[r14+0x1]
  40da35:	call   402c10 <__sprintf_chk@plt+0x1920>
  40da3a:	cmp    BYTE PTR [r14],0x2e
  40da3e:	jne    40db08 <__sprintf_chk@plt+0xc818>
  40da44:	mov    esi,0x2e
  40da49:	mov    rdi,rbp
  40da4c:	call   401110 <strchr@plt>
  40da51:	test   rax,rax
  40da54:	mov    r14,rax
  40da57:	je     40daf0 <__sprintf_chk@plt+0xc800>
  40da5d:	mov    r12,r14
  40da60:	mov    rsi,rbp
  40da63:	mov    rdi,rbx
  40da66:	sub    r12,rbp
  40da69:	mov    rdx,r12
  40da6c:	call   409540 <__sprintf_chk@plt+0x8250>
  40da71:	mov    esi,0xfffffffe
  40da76:	mov    rdi,rbx
  40da79:	call   402d30 <__sprintf_chk@plt+0x1a40>
  40da7e:	mov    rdx,QWORD PTR [rbx+0x10]
  40da82:	lea    rcx,[rdx-0x10]
  40da86:	cmp    rcx,r13
  40da89:	je     40db20 <__sprintf_chk@plt+0xc830>
  40da8f:	mov    esi,DWORD PTR [rdx-0x8]
  40da92:	test   esi,esi
  40da94:	jne    40da20 <__sprintf_chk@plt+0xc730>
  40da96:	mov    QWORD PTR [rbx+0x10],rcx
  40da9a:	cmp    BYTE PTR [r14],0x2e
  40da9e:	mov    esi,0x1
  40daa3:	mov    rdi,rbx
  40daa6:	cmovne esi,r15d
  40daaa:	call   40d7f0 <__sprintf_chk@plt+0xc500>
  40daaf:	mov    rdx,r12
  40dab2:	mov    rsi,rbp
  40dab5:	mov    rdi,rbx
  40dab8:	call   409540 <__sprintf_chk@plt+0x8250>
  40dabd:	mov    rcx,QWORD PTR [rbx+0x10]
  40dac1:	mov    rdi,rbx
  40dac4:	mov    rdx,QWORD PTR [rcx-0x20]
  40dac8:	lea    rsi,[rcx-0x30]
  40dacc:	mov    QWORD PTR [rcx],rdx
  40dacf:	mov    edx,DWORD PTR [rcx-0x18]
  40dad2:	mov    DWORD PTR [rcx+0x8],edx
  40dad5:	lea    rdx,[rcx+0x10]
  40dad9:	mov    QWORD PTR [rbx+0x10],rdx
  40dadd:	lea    rdx,[rcx-0x10]
  40dae1:	call   408820 <__sprintf_chk@plt+0x7530>
  40dae6:	sub    QWORD PTR [rbx+0x10],0x20
  40daeb:	jmp    40da29 <__sprintf_chk@plt+0xc739>
  40daf0:	mov    rdi,rbp
  40daf3:	call   4010f0 <strlen@plt>
  40daf8:	lea    r14,[rbp+rax*1+0x0]
  40dafd:	jmp    40da5d <__sprintf_chk@plt+0xc76d>
  40db02:	nop    WORD PTR [rax+rax*1+0x0]
  40db08:	add    rsp,0x8
  40db0c:	xor    eax,eax
  40db0e:	pop    rbx
  40db0f:	pop    rbp
  40db10:	pop    r12
  40db12:	pop    r13
  40db14:	pop    r14
  40db16:	pop    r15
  40db18:	ret    
  40db19:	nop    DWORD PTR [rax+0x0]
  40db20:	sub    rdx,0x20
  40db24:	mov    rax,rbp
  40db27:	mov    QWORD PTR [rbx+0x10],rdx
  40db2b:	add    rsp,0x8
  40db2f:	pop    rbx
  40db30:	pop    rbp
  40db31:	pop    r12
  40db33:	pop    r13
  40db35:	pop    r14
  40db37:	pop    r15
  40db39:	ret    
  40db3a:	nop    WORD PTR [rax+rax*1+0x0]
  40db40:	push   r13
  40db42:	push   r12
  40db44:	push   rbp
  40db45:	push   rbx
  40db46:	mov    rbp,rdi
  40db49:	mov    rbx,rdx
  40db4c:	sub    rsp,0x8
  40db50:	test   rsi,rsi
  40db53:	je     40dbdb <__sprintf_chk@plt+0xc8eb>
  40db59:	cmp    QWORD PTR [rdx],0x0
  40db5d:	mov    r13,rsi
  40db60:	je     40dc92 <__sprintf_chk@plt+0xc9a2>
  40db66:	mov    rax,rdx
  40db69:	xor    r12d,r12d
  40db6c:	nop    DWORD PTR [rax+0x0]
  40db70:	add    rax,0x10
  40db74:	add    r12d,0x1
  40db78:	cmp    QWORD PTR [rax],0x0
  40db7c:	jne    40db70 <__sprintf_chk@plt+0xc880>
  40db7e:	lea    rdx,[rip+0x8fc4]        # 416b49 <__sprintf_chk@plt+0x15859>
  40db85:	mov    ecx,0x1
  40db8a:	mov    esi,0xffffd8f0
  40db8f:	mov    rdi,rbp
  40db92:	call   40d9e0 <__sprintf_chk@plt+0xc6f0>
  40db97:	mov    rdx,r13
  40db9a:	mov    esi,0xffffffff
  40db9f:	mov    rdi,rbp
  40dba2:	call   408430 <__sprintf_chk@plt+0x7140>
  40dba7:	mov    rax,QWORD PTR [rbp+0x10]
  40dbab:	lea    rcx,[rip+0x8b1e]        # 4166d0 <__sprintf_chk@plt+0x153e0>
  40dbb2:	lea    rdx,[rax-0x10]
  40dbb6:	cmp    rdx,rcx
  40dbb9:	je     40dc33 <__sprintf_chk@plt+0xc943>
  40dbbb:	cmp    DWORD PTR [rax-0x8],0x5
  40dbbf:	jne    40dc33 <__sprintf_chk@plt+0xc943>
  40dbc1:	mov    esi,0xfffffffe
  40dbc6:	mov    rdi,rbp
  40dbc9:	call   402c10 <__sprintf_chk@plt+0x1920>
  40dbce:	mov    esi,0xffffffff
  40dbd3:	mov    rdi,rbp
  40dbd6:	call   402c50 <__sprintf_chk@plt+0x1960>
  40dbdb:	cmp    QWORD PTR [rbx],0x0
  40dbdf:	mov    r12d,0xfffffffe
  40dbe5:	je     40dc17 <__sprintf_chk@plt+0xc927>
  40dbe7:	nop    WORD PTR [rax+rax*1+0x0]
  40dbf0:	mov    rsi,QWORD PTR [rbx+0x8]
  40dbf4:	xor    edx,edx
  40dbf6:	mov    rdi,rbp
  40dbf9:	add    rbx,0x10
  40dbfd:	call   40b870 <__sprintf_chk@plt+0xa580>
  40dc02:	mov    rdx,QWORD PTR [rbx-0x10]
  40dc06:	mov    esi,r12d
  40dc09:	mov    rdi,rbp
  40dc0c:	call   408a60 <__sprintf_chk@plt+0x7770>
  40dc11:	cmp    QWORD PTR [rbx],0x0
  40dc15:	jne    40dbf0 <__sprintf_chk@plt+0xc900>
  40dc17:	add    rsp,0x8
  40dc1b:	lea    rsi,[rbp+0x18]
  40dc1f:	lea    rdi,[rbp+0x10]
  40dc23:	pop    rbx
  40dc24:	pop    rbp
  40dc25:	pop    r12
  40dc27:	pop    r13
  40dc29:	mov    edx,0xffffffff
  40dc2e:	jmp    402ed0 <__sprintf_chk@plt+0x1be0>
  40dc33:	mov    QWORD PTR [rbp+0x10],rdx
  40dc37:	mov    ecx,r12d
  40dc3a:	mov    rdx,r13
  40dc3d:	mov    esi,0xffffd8ee
  40dc42:	mov    rdi,rbp
  40dc45:	call   40d9e0 <__sprintf_chk@plt+0xc6f0>
  40dc4a:	test   rax,rax
  40dc4d:	je     40dc63 <__sprintf_chk@plt+0xc973>
  40dc4f:	lea    rsi,[rip+0x8efb]        # 416b51 <__sprintf_chk@plt+0x15861>
  40dc56:	mov    rdx,r13
  40dc59:	mov    rdi,rbp
  40dc5c:	xor    eax,eax
  40dc5e:	call   409640 <__sprintf_chk@plt+0x8350>
  40dc63:	mov    rax,QWORD PTR [rbp+0x10]
  40dc67:	mov    esi,0xfffffffd
  40dc6c:	mov    rdi,rbp
  40dc6f:	mov    rdx,QWORD PTR [rax-0x10]
  40dc73:	add    rax,0x10
  40dc77:	mov    QWORD PTR [rax-0x10],rdx
  40dc7b:	mov    edx,DWORD PTR [rax-0x18]
  40dc7e:	mov    DWORD PTR [rax-0x8],edx
  40dc81:	mov    QWORD PTR [rbp+0x10],rax
  40dc85:	mov    rdx,r13
  40dc88:	call   408a60 <__sprintf_chk@plt+0x7770>
  40dc8d:	jmp    40dbc1 <__sprintf_chk@plt+0xc8d1>
  40dc92:	xor    r12d,r12d
  40dc95:	jmp    40db7e <__sprintf_chk@plt+0xc88e>
  40dc9a:	nop    WORD PTR [rax+rax*1+0x0]
  40dca0:	push   rbx
  40dca1:	mov    rax,QWORD PTR [rdi+0x10]
  40dca5:	mov    esi,0xffffd8ee
  40dcaa:	mov    rdx,QWORD PTR [rdi+0x78]
  40dcae:	mov    rbx,rdi
  40dcb1:	add    rax,0x10
  40dcb5:	mov    QWORD PTR [rax-0x10],rdx
  40dcb9:	mov    edx,DWORD PTR [rdi+0x80]
  40dcbf:	mov    DWORD PTR [rax-0x8],edx
  40dcc2:	lea    rdx,[rip+0x8ea6]        # 416b6f <__sprintf_chk@plt+0x1587f>
  40dcc9:	mov    QWORD PTR [rdi+0x10],rax
  40dccd:	call   408a60 <__sprintf_chk@plt+0x7770>
  40dcd2:	lea    rdx,[rip+0xeee7]        # 41cbc0 <__sprintf_chk@plt+0x1b8d0>
  40dcd9:	lea    rsi,[rip+0x8e8f]        # 416b6f <__sprintf_chk@plt+0x1587f>
  40dce0:	mov    rdi,rbx
  40dce3:	call   40db40 <__sprintf_chk@plt+0xc850>
  40dce8:	lea    rsi,[rip+0x8e83]        # 416b72 <__sprintf_chk@plt+0x15882>
  40dcef:	mov    rdi,rbx
  40dcf2:	mov    edx,0x7
  40dcf7:	call   409540 <__sprintf_chk@plt+0x8250>
  40dcfc:	lea    rdx,[rip+0x8e77]        # 416b7a <__sprintf_chk@plt+0x1588a>
  40dd03:	mov    rdi,rbx
  40dd06:	mov    esi,0xffffd8ee
  40dd0b:	call   408a60 <__sprintf_chk@plt+0x7770>
  40dd10:	lea    rsi,[rip+0xffffffffffffc5c9]        # 40a2e0 <__sprintf_chk@plt+0x8ff0>
  40dd17:	mov    rdi,rbx
  40dd1a:	xor    edx,edx
  40dd1c:	call   40b870 <__sprintf_chk@plt+0xa580>
  40dd21:	lea    rsi,[rip+0xffffffffffffc648]        # 40a370 <__sprintf_chk@plt+0x9080>
  40dd28:	mov    rdi,rbx
  40dd2b:	mov    edx,0x1
  40dd30:	call   40b870 <__sprintf_chk@plt+0xa580>
  40dd35:	lea    rdx,[rip+0x8e47]        # 416b83 <__sprintf_chk@plt+0x15893>
  40dd3c:	mov    rdi,rbx
  40dd3f:	mov    esi,0xfffffffe
  40dd44:	call   408a60 <__sprintf_chk@plt+0x7770>
  40dd49:	lea    rsi,[rip+0xffffffffffffc2b0]        # 40a000 <__sprintf_chk@plt+0x8d10>
  40dd50:	mov    rdi,rbx
  40dd53:	xor    edx,edx
  40dd55:	call   40b870 <__sprintf_chk@plt+0xa580>
  40dd5a:	lea    rsi,[rip+0xffffffffffffc50f]        # 40a270 <__sprintf_chk@plt+0x8f80>
  40dd61:	mov    rdi,rbx
  40dd64:	mov    edx,0x1
  40dd69:	call   40b870 <__sprintf_chk@plt+0xa580>
  40dd6e:	lea    rdx,[rip+0x8e0f]        # 416b84 <__sprintf_chk@plt+0x15894>
  40dd75:	mov    rdi,rbx
  40dd78:	mov    esi,0xfffffffe
  40dd7d:	call   408a60 <__sprintf_chk@plt+0x7770>
  40dd82:	mov    rdi,rbx
  40dd85:	mov    esi,0x1
  40dd8a:	call   40d7f0 <__sprintf_chk@plt+0xc500>
  40dd8f:	mov    rax,QWORD PTR [rbx+0x10]
  40dd93:	mov    rdi,rbx
  40dd96:	mov    esi,0xfffffffe
  40dd9b:	mov    rdx,QWORD PTR [rax-0x10]
  40dd9f:	add    rax,0x10
  40dda3:	mov    QWORD PTR [rax-0x10],rdx
  40dda7:	mov    edx,DWORD PTR [rax-0x18]
  40ddaa:	mov    DWORD PTR [rax-0x8],edx
  40ddad:	mov    QWORD PTR [rbx+0x10],rax
  40ddb1:	call   402db0 <__sprintf_chk@plt+0x1ac0>
  40ddb6:	lea    rsi,[rip+0x8dcd]        # 416b8a <__sprintf_chk@plt+0x1589a>
  40ddbd:	mov    rdi,rbx
  40ddc0:	mov    edx,0x2
  40ddc5:	call   409540 <__sprintf_chk@plt+0x8250>
  40ddca:	lea    rdx,[rip+0x8dbc]        # 416b8d <__sprintf_chk@plt+0x1589d>
  40ddd1:	mov    rdi,rbx
  40ddd4:	mov    esi,0xfffffffe
  40ddd9:	call   408a60 <__sprintf_chk@plt+0x7770>
  40ddde:	lea    rsi,[rip+0xfffffffffffffa5b]        # 40d840 <__sprintf_chk@plt+0xc550>
  40dde5:	mov    rdi,rbx
  40dde8:	mov    edx,0x1
  40dded:	call   40b870 <__sprintf_chk@plt+0xa580>
  40ddf2:	lea    rdx,[rip+0x8d9b]        # 416b94 <__sprintf_chk@plt+0x158a4>
  40ddf9:	mov    rdi,rbx
  40ddfc:	mov    esi,0xffffd8ee
  40de01:	call   408a60 <__sprintf_chk@plt+0x7770>
  40de06:	mov    eax,0x1
  40de0b:	pop    rbx
  40de0c:	ret    
  40de0d:	nop    DWORD PTR [rax]
  40de10:	lea    rdx,[rip+0xed49]        # 41cb60 <__sprintf_chk@plt+0x1b870>
  40de17:	lea    rsi,[rip+0x8c46]        # 416a64 <__sprintf_chk@plt+0x15774>
  40de1e:	sub    rsp,0x8
  40de22:	call   40db40 <__sprintf_chk@plt+0xc850>
  40de27:	mov    eax,0x1
  40de2c:	add    rsp,0x8
  40de30:	ret    
  40de31:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40de3c:	nop    DWORD PTR [rax+0x0]
  40de40:	lea    rdx,[rip+0xeb99]        # 41c9e0 <__sprintf_chk@plt+0x1b6f0>
  40de47:	lea    rsi,[rip+0x8d4f]        # 416b9d <__sprintf_chk@plt+0x158ad>
  40de4e:	sub    rsp,0x8
  40de52:	call   40db40 <__sprintf_chk@plt+0xc850>
  40de57:	mov    eax,0x1
  40de5c:	add    rsp,0x8
  40de60:	ret    
  40de61:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40de6c:	nop    DWORD PTR [rax+0x0]
  40de70:	push   rbp
  40de71:	push   rbx
  40de72:	mov    rbp,rsi
  40de75:	mov    rbx,rdi
  40de78:	mov    esi,0x1
  40de7d:	sub    rsp,0x8
  40de81:	call   40d7f0 <__sprintf_chk@plt+0xc500>
  40de86:	mov    rsi,rbp
  40de89:	mov    rdi,rbx
  40de8c:	xor    edx,edx
  40de8e:	call   40b870 <__sprintf_chk@plt+0xa580>
  40de93:	add    rsp,0x8
  40de97:	mov    rdi,rbx
  40de9a:	lea    rdx,[rip+0x899f]        # 416840 <__sprintf_chk@plt+0x15550>
  40dea1:	pop    rbx
  40dea2:	pop    rbp
  40dea3:	mov    esi,0xfffffffe
  40dea8:	jmp    408a60 <__sprintf_chk@plt+0x7770>
  40dead:	nop    DWORD PTR [rax]
  40deb0:	push   rbx
  40deb1:	lea    rdx,[rip+0x8a9f]        # 416957 <__sprintf_chk@plt+0x15667>
  40deb8:	mov    rbx,rdi
  40debb:	mov    esi,0xffffd8f0
  40dec0:	call   408430 <__sprintf_chk@plt+0x7140>
  40dec5:	mov    rax,QWORD PTR [rbx+0x10]
  40dec9:	lea    rdx,[rip+0x8800]        # 4166d0 <__sprintf_chk@plt+0x153e0>
  40ded0:	lea    rcx,[rax-0x10]
  40ded4:	cmp    rcx,rdx
  40ded7:	mov    edx,DWORD PTR [rax-0x8]
  40deda:	je     40dee4 <__sprintf_chk@plt+0xcbf4>
  40dedc:	test   edx,edx
  40dede:	je     40e060 <__sprintf_chk@plt+0xcd70>
  40dee4:	mov    rcx,QWORD PTR [rax-0x10]
  40dee8:	mov    DWORD PTR [rax+0x8],edx
  40deeb:	add    rax,0x10
  40deef:	lea    rdx,[rip+0x88e9]        # 4167df <__sprintf_chk@plt+0x154ef>
  40def6:	mov    esi,0xfffffffe
  40defb:	mov    rdi,rbx
  40defe:	mov    QWORD PTR [rax-0x10],rcx
  40df02:	mov    QWORD PTR [rbx+0x10],rax
  40df06:	call   408a60 <__sprintf_chk@plt+0x7770>
  40df0b:	lea    rdx,[rip+0xeb0e]        # 41ca20 <__sprintf_chk@plt+0x1b730>
  40df12:	xor    esi,esi
  40df14:	mov    rdi,rbx
  40df17:	call   40db40 <__sprintf_chk@plt+0xc850>
  40df1c:	lea    rsi,[rip+0xffffffffffffc54d]        # 40a470 <__sprintf_chk@plt+0x9180>
  40df23:	mov    rdi,rbx
  40df26:	call   40de70 <__sprintf_chk@plt+0xcb80>
  40df2b:	mov    rax,QWORD PTR [rbx+0x50]
  40df2f:	cmp    QWORD PTR [rbx+0x28],rax
  40df33:	je     40e0b0 <__sprintf_chk@plt+0xcdc0>
  40df39:	mov    esi,0xffffd8ef
  40df3e:	mov    rdi,rbx
  40df41:	call   402b60 <__sprintf_chk@plt+0x1870>
  40df46:	mov    rax,QWORD PTR [rbx+0x28]
  40df4a:	mov    rax,QWORD PTR [rax+0x8]
  40df4e:	mov    rdx,QWORD PTR [rax]
  40df51:	mov    rax,QWORD PTR [rbx+0x10]
  40df55:	mov    rcx,QWORD PTR [rax-0x10]
  40df59:	mov    QWORD PTR [rdx+0x18],rcx
  40df5d:	cmp    DWORD PTR [rax-0x8],0x3
  40df61:	jle    40df97 <__sprintf_chk@plt+0xcca7>
  40df63:	mov    rsi,QWORD PTR [rax-0x10]
  40df67:	test   BYTE PTR [rsi+0x9],0x3
  40df6b:	je     40df97 <__sprintf_chk@plt+0xcca7>
  40df6d:	movzx  ecx,BYTE PTR [rdx+0x9]
  40df71:	test   cl,0x4
  40df74:	je     40df97 <__sprintf_chk@plt+0xcca7>
  40df76:	mov    rdi,QWORD PTR [rbx+0x20]
  40df7a:	cmp    BYTE PTR [rdi+0x21],0x1
  40df7e:	je     40e0c8 <__sprintf_chk@plt+0xcdd8>
  40df84:	movzx  eax,BYTE PTR [rdi+0x20]
  40df88:	and    ecx,0xfffffff8
  40df8b:	and    eax,0x3
  40df8e:	or     ecx,eax
  40df90:	mov    BYTE PTR [rdx+0x9],cl
  40df93:	mov    rax,QWORD PTR [rbx+0x10]
  40df97:	sub    rax,0x10
  40df9b:	lea    rdx,[rip+0xeafe]        # 41caa0 <__sprintf_chk@plt+0x1b7b0>
  40dfa2:	lea    rsi,[rip+0x8c0e]        # 416bb7 <__sprintf_chk@plt+0x158c7>
  40dfa9:	mov    QWORD PTR [rbx+0x10],rax
  40dfad:	mov    rdi,rbx
  40dfb0:	call   40db40 <__sprintf_chk@plt+0xc850>
  40dfb5:	lea    rsi,[rip+0xffffffffffffd224]        # 40b1e0 <__sprintf_chk@plt+0x9ef0>
  40dfbc:	mov    rdi,rbx
  40dfbf:	call   40de70 <__sprintf_chk@plt+0xcb80>
  40dfc4:	mov    rax,QWORD PTR [rip+0xf015]        # 41cfe0 <__sprintf_chk@plt+0x1bcf0>
  40dfcb:	lea    rcx,[rip+0x8b49]        # 416b1b <__sprintf_chk@plt+0x1582b>
  40dfd2:	mov    rdi,rbx
  40dfd5:	mov    edx,0x1
  40dfda:	mov    rsi,QWORD PTR [rax]
  40dfdd:	call   40b6f0 <__sprintf_chk@plt+0xa400>
  40dfe2:	mov    rax,QWORD PTR [rip+0xefef]        # 41cfd8 <__sprintf_chk@plt+0x1bce8>
  40dfe9:	lea    rcx,[rip+0x8bca]        # 416bba <__sprintf_chk@plt+0x158ca>
  40dff0:	mov    rdi,rbx
  40dff3:	mov    edx,0x2
  40dff8:	mov    rsi,QWORD PTR [rax]
  40dffb:	call   40b6f0 <__sprintf_chk@plt+0xa400>
  40e000:	mov    rax,QWORD PTR [rip+0xeff1]        # 41cff8 <__sprintf_chk@plt+0x1bd08>
  40e007:	lea    rcx,[rip+0x8bb3]        # 416bc1 <__sprintf_chk@plt+0x158d1>
  40e00e:	mov    rdi,rbx
  40e011:	xor    edx,edx
  40e013:	mov    rsi,QWORD PTR [rax]
  40e016:	call   40b6f0 <__sprintf_chk@plt+0xa400>
  40e01b:	sub    QWORD PTR [rbx+0x10],0x10
  40e020:	lea    rdx,[rip+0x8ba1]        # 416bc8 <__sprintf_chk@plt+0x158d8>
  40e027:	mov    rdi,rbx
  40e02a:	mov    esi,0xffffffff
  40e02f:	call   408430 <__sprintf_chk@plt+0x7140>
  40e034:	lea    rsi,[rip+0xffffffffffffc475]        # 40a4b0 <__sprintf_chk@plt+0x91c0>
  40e03b:	mov    rdi,rbx
  40e03e:	call   40de70 <__sprintf_chk@plt+0xcb80>
  40e043:	mov    rdi,rbx
  40e046:	call   403200 <__sprintf_chk@plt+0x1f10>
  40e04b:	sub    QWORD PTR [rbx+0x10],0x10
  40e050:	mov    eax,0x1
  40e055:	pop    rbx
  40e056:	ret    
  40e057:	nop    WORD PTR [rax+rax*1+0x0]
  40e060:	mov    QWORD PTR [rbx+0x10],rcx
  40e064:	xor    esi,esi
  40e066:	mov    rdi,rbx
  40e069:	call   40d7f0 <__sprintf_chk@plt+0xc500>
  40e06e:	mov    rax,QWORD PTR [rbx+0x10]
  40e072:	mov    esi,0xffffd8f0
  40e077:	mov    rdi,rbx
  40e07a:	mov    rdx,QWORD PTR [rax-0x10]
  40e07e:	add    rax,0x10
  40e082:	mov    QWORD PTR [rax-0x10],rdx
  40e086:	mov    edx,DWORD PTR [rax-0x18]
  40e089:	mov    DWORD PTR [rax-0x8],edx
  40e08c:	lea    rdx,[rip+0x88c4]        # 416957 <__sprintf_chk@plt+0x15667>
  40e093:	mov    QWORD PTR [rbx+0x10],rax
  40e097:	call   408a60 <__sprintf_chk@plt+0x7770>
  40e09c:	mov    rax,QWORD PTR [rbx+0x10]
  40e0a0:	mov    edx,DWORD PTR [rax-0x8]
  40e0a3:	jmp    40dee4 <__sprintf_chk@plt+0xcbf4>
  40e0a8:	nop    DWORD PTR [rax+rax*1+0x0]
  40e0b0:	lea    rsi,[rip+0x8ae9]        # 416ba0 <__sprintf_chk@plt+0x158b0>
  40e0b7:	mov    rdi,rbx
  40e0ba:	xor    eax,eax
  40e0bc:	call   405730 <__sprintf_chk@plt+0x4440>
  40e0c1:	nop    DWORD PTR [rax+0x0]
  40e0c8:	call   401a50 <__sprintf_chk@plt+0x760>
  40e0cd:	mov    rax,QWORD PTR [rbx+0x10]
  40e0d1:	jmp    40df97 <__sprintf_chk@plt+0xcca7>
  40e0d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e0e0:	push   rbx
  40e0e1:	lea    rdx,[rip+0xe838]        # 41c920 <__sprintf_chk@plt+0x1b630>
  40e0e8:	lea    rsi,[rip+0x8bfc]        # 416ceb <__sprintf_chk@plt+0x159fb>
  40e0ef:	mov    rbx,rdi
  40e0f2:	call   40db40 <__sprintf_chk@plt+0xc850>
  40e0f7:	mov    rdi,rbx
  40e0fa:	mov    esi,0x1
  40e0ff:	call   40d7f0 <__sprintf_chk@plt+0xc500>
  40e104:	lea    rsi,[rip+0x8d2f]        # 416e3a <__sprintf_chk@plt+0x15b4a>
  40e10b:	mov    rdi,rbx
  40e10e:	xor    edx,edx
  40e110:	call   409540 <__sprintf_chk@plt+0x8250>
  40e115:	mov    rax,QWORD PTR [rbx+0x10]
  40e119:	mov    rdi,rbx
  40e11c:	mov    esi,0xfffffffe
  40e121:	mov    rdx,QWORD PTR [rax-0x20]
  40e125:	add    rax,0x10
  40e129:	mov    QWORD PTR [rax-0x10],rdx
  40e12d:	mov    edx,DWORD PTR [rax-0x28]
  40e130:	mov    DWORD PTR [rax-0x8],edx
  40e133:	mov    QWORD PTR [rbx+0x10],rax
  40e137:	call   402db0 <__sprintf_chk@plt+0x1ac0>
  40e13c:	mov    rax,QWORD PTR [rbx+0x10]
  40e140:	mov    rdi,rbx
  40e143:	mov    esi,0xfffffffe
  40e148:	lea    rdx,[rax-0x10]
  40e14c:	mov    QWORD PTR [rbx+0x10],rdx
  40e150:	mov    rdx,QWORD PTR [rax-0x30]
  40e154:	mov    QWORD PTR [rax-0x10],rdx
  40e158:	mov    edx,DWORD PTR [rax-0x28]
  40e15b:	mov    DWORD PTR [rax-0x8],edx
  40e15e:	lea    rdx,[rip+0x867a]        # 4167df <__sprintf_chk@plt+0x154ef>
  40e165:	mov    QWORD PTR [rbx+0x10],rax
  40e169:	call   408a60 <__sprintf_chk@plt+0x7770>
  40e16e:	sub    QWORD PTR [rbx+0x10],0x10
  40e173:	mov    eax,0x1
  40e178:	pop    rbx
  40e179:	ret    
  40e17a:	nop    WORD PTR [rax+rax*1+0x0]
  40e180:	mov    rax,QWORD PTR [rdi+0x20]
  40e184:	cmp    QWORD PTR [rax+0x50],0x0
  40e189:	je     40e1a4 <__sprintf_chk@plt+0xceb4>
  40e18b:	push   rbx
  40e18c:	mov    rbx,rdi
  40e18f:	nop
  40e190:	mov    rdi,rbx
  40e193:	call   408af0 <__sprintf_chk@plt+0x7800>
  40e198:	mov    rax,QWORD PTR [rbx+0x20]
  40e19c:	cmp    QWORD PTR [rax+0x50],0x0
  40e1a1:	jne    40e190 <__sprintf_chk@plt+0xcea0>
  40e1a3:	pop    rbx
  40e1a4:	repz ret 
  40e1a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e1b0:	push   rbx
  40e1b1:	mov    rbx,rdi
  40e1b4:	mov    rdi,QWORD PTR [rdi+0x18]
  40e1b8:	mov    rax,QWORD PTR [rbx+0x10]
  40e1bc:	mov    r9d,edx
  40e1bf:	lea    rcx,[rdi+0x10]
  40e1c3:	cmp    rcx,rax
  40e1c6:	jae    40e220 <__sprintf_chk@plt+0xcf30>
  40e1c8:	lea    r10,[rip+0x8501]        # 4166d0 <__sprintf_chk@plt+0x153e0>
  40e1cf:	cmp    rcx,r10
  40e1d2:	je     40e2af <__sprintf_chk@plt+0xcfbf>
  40e1d8:	mov    r8d,DWORD PTR [rdi+0x18]
  40e1dc:	test   r8d,r8d
  40e1df:	jne    40e22a <__sprintf_chk@plt+0xcf3a>
  40e1e1:	mov    rdi,rbx
  40e1e4:	call   402b60 <__sprintf_chk@plt+0x1870>
  40e1e9:	mov    rdi,rbx
  40e1ec:	mov    esi,r9d
  40e1ef:	mov    r11,rax
  40e1f2:	call   402b60 <__sprintf_chk@plt+0x1870>
  40e1f7:	cmp    rax,r10
  40e1fa:	je     40e2aa <__sprintf_chk@plt+0xcfba>
  40e200:	cmp    r11,r10
  40e203:	je     40e2aa <__sprintf_chk@plt+0xcfba>
  40e209:	mov    rdi,rbx
  40e20c:	mov    rdx,rax
  40e20f:	mov    rsi,r11
  40e212:	pop    rbx
  40e213:	jmp    408590 <__sprintf_chk@plt+0x72a0>
  40e218:	nop    DWORD PTR [rax+rax*1+0x0]
  40e220:	lea    rcx,[rip+0x84a9]        # 4166d0 <__sprintf_chk@plt+0x153e0>
  40e227:	xor    r8d,r8d
  40e22a:	mov    rdx,QWORD PTR [rcx]
  40e22d:	add    rax,0x10
  40e231:	mov    DWORD PTR [rax-0x8],r8d
  40e235:	sub    esi,0x1
  40e238:	mov    rdi,rbx
  40e23b:	mov    QWORD PTR [rax-0x10],rdx
  40e23f:	mov    QWORD PTR [rbx+0x10],rax
  40e243:	call   402b60 <__sprintf_chk@plt+0x1870>
  40e248:	mov    rdx,QWORD PTR [rbx+0x10]
  40e24c:	mov    rcx,QWORD PTR [rax]
  40e24f:	lea    esi,[r9-0x2]
  40e253:	mov    eax,DWORD PTR [rax+0x8]
  40e256:	mov    rdi,rbx
  40e259:	mov    QWORD PTR [rdx],rcx
  40e25c:	add    rdx,0x10
  40e260:	mov    DWORD PTR [rdx-0x8],eax
  40e263:	mov    QWORD PTR [rbx+0x10],rdx
  40e267:	call   402b60 <__sprintf_chk@plt+0x1870>
  40e26c:	mov    rsi,QWORD PTR [rbx+0x10]
  40e270:	mov    rdx,QWORD PTR [rax]
  40e273:	mov    rdi,rbx
  40e276:	mov    eax,DWORD PTR [rax+0x8]
  40e279:	mov    QWORD PTR [rsi],rdx
  40e27c:	mov    edx,0x1
  40e281:	mov    DWORD PTR [rsi+0x8],eax
  40e284:	lea    rax,[rsi+0x10]
  40e288:	sub    rsi,0x20
  40e28c:	mov    QWORD PTR [rbx+0x10],rax
  40e290:	call   403e50 <__sprintf_chk@plt+0x2b60>
  40e295:	mov    esi,0xffffffff
  40e29a:	mov    rdi,rbx
  40e29d:	call   402cd0 <__sprintf_chk@plt+0x19e0>
  40e2a2:	sub    QWORD PTR [rbx+0x10],0x10
  40e2a7:	mov    r8d,eax
  40e2aa:	mov    eax,r8d
  40e2ad:	pop    rbx
  40e2ae:	ret    
  40e2af:	xor    r8d,r8d
  40e2b2:	jmp    40e22a <__sprintf_chk@plt+0xcf3a>
  40e2b7:	nop    WORD PTR [rax+rax*1+0x0]
  40e2c0:	cmp    esi,edx
  40e2c2:	jge    40e4de <__sprintf_chk@plt+0xd1ee>
  40e2c8:	push   r15
  40e2ca:	push   r14
  40e2cc:	mov    r15d,0xfffffffe
  40e2d2:	push   r13
  40e2d4:	push   r12
  40e2d6:	mov    r13d,edx
  40e2d9:	push   rbp
  40e2da:	push   rbx
  40e2db:	mov    r12d,esi
  40e2de:	mov    rbx,rdi
  40e2e1:	sub    rsp,0x18
  40e2e5:	mov    edx,r12d
  40e2e8:	mov    esi,0x1
  40e2ed:	mov    rdi,rbx
  40e2f0:	call   402d60 <__sprintf_chk@plt+0x1a70>
  40e2f5:	mov    edx,r13d
  40e2f8:	mov    esi,0x1
  40e2fd:	mov    rdi,rbx
  40e300:	call   402d60 <__sprintf_chk@plt+0x1a70>
  40e305:	mov    edx,r15d
  40e308:	mov    esi,0xffffffff
  40e30d:	mov    rdi,rbx
  40e310:	call   40e1b0 <__sprintf_chk@plt+0xcec0>
  40e315:	test   eax,eax
  40e317:	jne    40e520 <__sprintf_chk@plt+0xd230>
  40e31d:	sub    QWORD PTR [rbx+0x10],0x20
  40e322:	mov    r14d,r13d
  40e325:	sub    r14d,r12d
  40e328:	cmp    r14d,0x1
  40e32c:	je     40e4d0 <__sprintf_chk@plt+0xd1e0>
  40e332:	lea    eax,[r13+r12*1+0x0]
  40e337:	mov    esi,0x1
  40e33c:	mov    rdi,rbx
  40e33f:	mov    ebp,eax
  40e341:	shr    ebp,0x1f
  40e344:	add    ebp,eax
  40e346:	sar    ebp,1
  40e348:	mov    edx,ebp
  40e34a:	call   402d60 <__sprintf_chk@plt+0x1a70>
  40e34f:	mov    edx,r12d
  40e352:	mov    esi,0x1
  40e357:	mov    rdi,rbx
  40e35a:	call   402d60 <__sprintf_chk@plt+0x1a70>
  40e35f:	mov    edx,0xffffffff
  40e364:	mov    esi,r15d
  40e367:	mov    rdi,rbx
  40e36a:	call   40e1b0 <__sprintf_chk@plt+0xcec0>
  40e36f:	test   eax,eax
  40e371:	je     40e560 <__sprintf_chk@plt+0xd270>
  40e377:	mov    edx,ebp
  40e379:	mov    esi,0x1
  40e37e:	mov    rdi,rbx
  40e381:	call   407e60 <__sprintf_chk@plt+0x6b70>
  40e386:	mov    edx,r12d
  40e389:	mov    esi,0x1
  40e38e:	mov    rdi,rbx
  40e391:	call   407e60 <__sprintf_chk@plt+0x6b70>
  40e396:	cmp    r14d,0x2
  40e39a:	je     40e4d0 <__sprintf_chk@plt+0xd1e0>
  40e3a0:	mov    edx,ebp
  40e3a2:	mov    esi,0x1
  40e3a7:	mov    rdi,rbx
  40e3aa:	call   402d60 <__sprintf_chk@plt+0x1a70>
  40e3af:	mov    rax,QWORD PTR [rbx+0x10]
  40e3b3:	mov    esi,0x1
  40e3b8:	mov    rdi,rbx
  40e3bb:	mov    rdx,QWORD PTR [rax-0x10]
  40e3bf:	add    rax,0x10
  40e3c3:	mov    QWORD PTR [rax-0x10],rdx
  40e3c7:	mov    edx,DWORD PTR [rax-0x18]
  40e3ca:	mov    DWORD PTR [rax-0x8],edx
  40e3cd:	mov    QWORD PTR [rbx+0x10],rax
  40e3d1:	lea    eax,[r13-0x1]
  40e3d5:	mov    edx,eax
  40e3d7:	mov    r14d,eax
  40e3da:	mov    DWORD PTR [rsp+0xc],eax
  40e3de:	call   402d60 <__sprintf_chk@plt+0x1a70>
  40e3e3:	mov    edx,ebp
  40e3e5:	mov    esi,0x1
  40e3ea:	mov    rdi,rbx
  40e3ed:	call   407e60 <__sprintf_chk@plt+0x6b70>
  40e3f2:	mov    edx,r14d
  40e3f5:	mov    esi,0x1
  40e3fa:	mov    rdi,rbx
  40e3fd:	call   407e60 <__sprintf_chk@plt+0x6b70>
  40e402:	mov    ebp,r14d
  40e405:	mov    DWORD PTR [rsp+0x8],r12d
  40e40a:	mov    eax,DWORD PTR [rsp+0x8]
  40e40e:	mov    esi,0x1
  40e413:	mov    rdi,rbx
  40e416:	lea    r14d,[rax+0x1]
  40e41a:	mov    edx,r14d
  40e41d:	call   402d60 <__sprintf_chk@plt+0x1a70>
  40e422:	mov    edx,r15d
  40e425:	mov    esi,0xffffffff
  40e42a:	mov    rdi,rbx
  40e42d:	call   40e1b0 <__sprintf_chk@plt+0xcec0>
  40e432:	test   eax,eax
  40e434:	je     40e4e0 <__sprintf_chk@plt+0xd1f0>
  40e43a:	cmp    r13d,r14d
  40e43d:	jl     40e548 <__sprintf_chk@plt+0xd258>
  40e443:	sub    QWORD PTR [rbx+0x10],0x10
  40e448:	mov    DWORD PTR [rsp+0x8],r14d
  40e44d:	jmp    40e40a <__sprintf_chk@plt+0xd11a>
  40e44f:	mov    ebp,DWORD PTR [rsp+0xc]
  40e453:	sub    QWORD PTR [rbx+0x10],0x30
  40e458:	mov    esi,0x1
  40e45d:	mov    rdi,rbx
  40e460:	mov    edx,ebp
  40e462:	call   402d60 <__sprintf_chk@plt+0x1a70>
  40e467:	mov    edx,r14d
  40e46a:	mov    esi,0x1
  40e46f:	mov    rdi,rbx
  40e472:	call   402d60 <__sprintf_chk@plt+0x1a70>
  40e477:	mov    edx,ebp
  40e479:	mov    esi,0x1
  40e47e:	mov    rdi,rbx
  40e481:	call   407e60 <__sprintf_chk@plt+0x6b70>
  40e486:	mov    edx,r14d
  40e489:	mov    esi,0x1
  40e48e:	mov    rdi,rbx
  40e491:	call   407e60 <__sprintf_chk@plt+0x6b70>
  40e496:	mov    edx,r14d
  40e499:	mov    eax,r13d
  40e49c:	sub    edx,r12d
  40e49f:	sub    eax,r14d
  40e4a2:	cmp    edx,eax
  40e4a4:	jge    40e5ed <__sprintf_chk@plt+0xd2fd>
  40e4aa:	mov    eax,DWORD PTR [rsp+0x8]
  40e4ae:	mov    esi,r12d
  40e4b1:	lea    r12d,[rax+0x2]
  40e4b5:	mov    edx,DWORD PTR [rsp+0x8]
  40e4b9:	mov    rdi,rbx
  40e4bc:	call   40e2c0 <__sprintf_chk@plt+0xcfd0>
  40e4c1:	cmp    r12d,r13d
  40e4c4:	jl     40e2e5 <__sprintf_chk@plt+0xcff5>
  40e4ca:	nop    WORD PTR [rax+rax*1+0x0]
  40e4d0:	add    rsp,0x18
  40e4d4:	pop    rbx
  40e4d5:	pop    rbp
  40e4d6:	pop    r12
  40e4d8:	pop    r13
  40e4da:	pop    r14
  40e4dc:	pop    r15
  40e4de:	repz ret 
  40e4e0:	sub    ebp,0x1
  40e4e3:	mov    esi,0x1
  40e4e8:	mov    rdi,rbx
  40e4eb:	mov    edx,ebp
  40e4ed:	call   402d60 <__sprintf_chk@plt+0x1a70>
  40e4f2:	mov    edx,0xffffffff
  40e4f7:	mov    esi,0xfffffffd
  40e4fc:	mov    rdi,rbx
  40e4ff:	call   40e1b0 <__sprintf_chk@plt+0xcec0>
  40e504:	test   eax,eax
  40e506:	je     40e5c0 <__sprintf_chk@plt+0xd2d0>
  40e50c:	cmp    ebp,r12d
  40e50f:	jl     40e548 <__sprintf_chk@plt+0xd258>
  40e511:	sub    QWORD PTR [rbx+0x10],0x10
  40e516:	jmp    40e4e0 <__sprintf_chk@plt+0xd1f0>
  40e518:	nop    DWORD PTR [rax+rax*1+0x0]
  40e520:	mov    edx,r12d
  40e523:	mov    rdi,rbx
  40e526:	mov    esi,0x1
  40e52b:	call   407e60 <__sprintf_chk@plt+0x6b70>
  40e530:	mov    edx,r13d
  40e533:	mov    esi,0x1
  40e538:	mov    rdi,rbx
  40e53b:	call   407e60 <__sprintf_chk@plt+0x6b70>
  40e540:	jmp    40e322 <__sprintf_chk@plt+0xd032>
  40e545:	nop    DWORD PTR [rax]
  40e548:	lea    rsi,[rip+0x8d41]        # 417290 <__sprintf_chk@plt+0x15fa0>
  40e54f:	mov    rdi,rbx
  40e552:	xor    eax,eax
  40e554:	call   409640 <__sprintf_chk@plt+0x8350>
  40e559:	nop    DWORD PTR [rax+0x0]
  40e560:	sub    QWORD PTR [rbx+0x10],0x10
  40e565:	mov    edx,r13d
  40e568:	mov    esi,0x1
  40e56d:	mov    rdi,rbx
  40e570:	call   402d60 <__sprintf_chk@plt+0x1a70>
  40e575:	mov    edx,r15d
  40e578:	mov    esi,0xffffffff
  40e57d:	mov    rdi,rbx
  40e580:	call   40e1b0 <__sprintf_chk@plt+0xcec0>
  40e585:	test   eax,eax
  40e587:	je     40e5b0 <__sprintf_chk@plt+0xd2c0>
  40e589:	mov    edx,ebp
  40e58b:	mov    rdi,rbx
  40e58e:	mov    esi,0x1
  40e593:	call   407e60 <__sprintf_chk@plt+0x6b70>
  40e598:	mov    edx,r13d
  40e59b:	mov    esi,0x1
  40e5a0:	mov    rdi,rbx
  40e5a3:	call   407e60 <__sprintf_chk@plt+0x6b70>
  40e5a8:	jmp    40e396 <__sprintf_chk@plt+0xd0a6>
  40e5ad:	nop    DWORD PTR [rax]
  40e5b0:	sub    QWORD PTR [rbx+0x10],0x20
  40e5b5:	jmp    40e396 <__sprintf_chk@plt+0xd0a6>
  40e5ba:	nop    WORD PTR [rax+rax*1+0x0]
  40e5c0:	cmp    r14d,ebp
  40e5c3:	jg     40e44f <__sprintf_chk@plt+0xd15f>
  40e5c9:	mov    edx,r14d
  40e5cc:	mov    rdi,rbx
  40e5cf:	mov    esi,0x1
  40e5d4:	call   407e60 <__sprintf_chk@plt+0x6b70>
  40e5d9:	mov    edx,ebp
  40e5db:	mov    esi,0x1
  40e5e0:	mov    rdi,rbx
  40e5e3:	call   407e60 <__sprintf_chk@plt+0x6b70>
  40e5e8:	jmp    40e448 <__sprintf_chk@plt+0xd158>
  40e5ed:	mov    ecx,DWORD PTR [rsp+0x8]
  40e5f1:	mov    eax,r13d
  40e5f4:	mov    DWORD PTR [rsp+0x8],eax
  40e5f8:	lea    esi,[rcx+0x2]
  40e5fb:	mov    r13d,ecx
  40e5fe:	jmp    40e4b5 <__sprintf_chk@plt+0xd1c5>
  40e603:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40e60e:	xchg   ax,ax
  40e610:	push   rbp
  40e611:	push   rbx
  40e612:	mov    edx,0x5
  40e617:	mov    rbx,rdi
  40e61a:	mov    esi,0x1
  40e61f:	sub    rsp,0x8
  40e623:	call   409ed0 <__sprintf_chk@plt+0x8be0>
  40e628:	mov    esi,0x1
  40e62d:	mov    rdi,rbx
  40e630:	call   405c70 <__sprintf_chk@plt+0x4980>
  40e635:	lea    rdx,[rip+0x87fe]        # 416e3a <__sprintf_chk@plt+0x15b4a>
  40e63c:	mov    esi,0x28
  40e641:	mov    rdi,rbx
  40e644:	mov    rbp,rax
  40e647:	call   4097d0 <__sprintf_chk@plt+0x84e0>
  40e64c:	mov    rdx,QWORD PTR [rbx+0x18]
  40e650:	mov    rax,QWORD PTR [rbx+0x10]
  40e654:	lea    rcx,[rdx+0x10]
  40e658:	cmp    rcx,rax
  40e65b:	jae    40e68a <__sprintf_chk@plt+0xd39a>
  40e65d:	lea    rsi,[rip+0x806c]        # 4166d0 <__sprintf_chk@plt+0x153e0>
  40e664:	cmp    rcx,rsi
  40e667:	je     40e68a <__sprintf_chk@plt+0xd39a>
  40e669:	mov    ecx,DWORD PTR [rdx+0x18]
  40e66c:	test   ecx,ecx
  40e66e:	jle    40e68a <__sprintf_chk@plt+0xd39a>
  40e670:	mov    edx,0x6
  40e675:	mov    esi,0x2
  40e67a:	mov    rdi,rbx
  40e67d:	call   409ed0 <__sprintf_chk@plt+0x8be0>
  40e682:	mov    rax,QWORD PTR [rbx+0x10]
  40e686:	mov    rdx,QWORD PTR [rbx+0x18]
  40e68a:	add    rdx,0x20
  40e68e:	cmp    rax,rdx
  40e691:	jae    40e6a8 <__sprintf_chk@plt+0xd3b8>
  40e693:	nop    DWORD PTR [rax+rax*1+0x0]
  40e698:	add    rax,0x10
  40e69c:	mov    DWORD PTR [rax-0x8],0x0
  40e6a3:	cmp    rax,rdx
  40e6a6:	jb     40e698 <__sprintf_chk@plt+0xd3a8>
  40e6a8:	mov    QWORD PTR [rbx+0x10],rdx
  40e6ac:	mov    rdi,rbx
  40e6af:	mov    edx,ebp
  40e6b1:	mov    esi,0x1
  40e6b6:	call   40e2c0 <__sprintf_chk@plt+0xcfd0>
  40e6bb:	add    rsp,0x8
  40e6bf:	xor    eax,eax
  40e6c1:	pop    rbx
  40e6c2:	pop    rbp
  40e6c3:	ret    
  40e6c4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40e6cf:	nop
  40e6d0:	mov    edx,DWORD PTR [rsi+0x8]
  40e6d3:	mov    rsi,QWORD PTR [rsi]
  40e6d6:	jmp    403e50 <__sprintf_chk@plt+0x2b60>
  40e6db:	nop    DWORD PTR [rax+rax*1+0x0]
  40e6e0:	push   r13
  40e6e2:	push   r12
  40e6e4:	mov    r13,rsi
  40e6e7:	push   rbp
  40e6e8:	push   rbx
  40e6e9:	mov    r12d,edx
  40e6ec:	mov    rbx,rdi
  40e6ef:	mov    edx,0x50
  40e6f4:	sub    rsp,0x68
  40e6f8:	mov    rax,QWORD PTR fs:0x28
  40e701:	mov    QWORD PTR [rsp+0x58],rax
  40e706:	xor    eax,eax
  40e708:	mov    rax,QWORD PTR [rdi+0x50]
  40e70c:	mov    rdi,rsp
  40e70f:	lea    rsi,[rax+0x18]
  40e713:	call   401fb0 <__sprintf_chk@plt+0xcc0>
  40e718:	mov    ecx,DWORD PTR [rbx+0x4]
  40e71b:	mov    rdi,QWORD PTR [rbx+0x38]
  40e71f:	lea    rsi,[rip+0x802e]        # 416754 <__sprintf_chk@plt+0x15464>
  40e726:	xor    eax,eax
  40e728:	mov    r8,r13
  40e72b:	mov    rdx,rsp
  40e72e:	call   407220 <__sprintf_chk@plt+0x5f30>
  40e733:	test   r12d,r12d
  40e736:	jne    40e746 <__sprintf_chk@plt+0xd456>
  40e738:	mov    rdi,QWORD PTR [rbx+0x38]
  40e73c:	mov    esi,0x3
  40e741:	call   403380 <__sprintf_chk@plt+0x2090>
  40e746:	mov    rbp,rax
  40e749:	lea    eax,[r12-0x11c]
  40e751:	cmp    eax,0x2
  40e754:	jbe    40e77c <__sprintf_chk@plt+0xd48c>
  40e756:	lea    rdi,[rbx+0x38]
  40e75a:	mov    esi,r12d
  40e75d:	call   4072e0 <__sprintf_chk@plt+0x5ff0>
  40e762:	mov    rcx,rax
  40e765:	mov    rdi,QWORD PTR [rbx+0x38]
  40e769:	lea    rsi,[rip+0x845e]        # 416bce <__sprintf_chk@plt+0x158de>
  40e770:	mov    rdx,rbp
  40e773:	xor    eax,eax
  40e775:	call   407220 <__sprintf_chk@plt+0x5f30>
  40e77a:	jmp    40e738 <__sprintf_chk@plt+0xd448>
  40e77c:	xor    esi,esi
  40e77e:	mov    rdi,rbx
  40e781:	call   40fca0 <__sprintf_chk@plt+0xe9b0>
  40e786:	mov    rax,QWORD PTR [rbx+0x48]
  40e78a:	mov    rcx,QWORD PTR [rax]
  40e78d:	jmp    40e765 <__sprintf_chk@plt+0xd475>
  40e78f:	nop
  40e790:	push   rbp
  40e791:	push   rbx
  40e792:	mov    rbx,rdi
  40e795:	sub    rsp,0x8
  40e799:	mov    ebp,DWORD PTR [rdi]
  40e79b:	mov    rdi,QWORD PTR [rdi+0x40]
  40e79f:	mov    rax,QWORD PTR [rdi]
  40e7a2:	lea    rdx,[rax-0x1]
  40e7a6:	test   rax,rax
  40e7a9:	mov    QWORD PTR [rdi],rdx
  40e7ac:	je     40e828 <__sprintf_chk@plt+0xd538>
  40e7ae:	mov    rax,QWORD PTR [rdi+0x8]
  40e7b2:	lea    rdx,[rax+0x1]
  40e7b6:	mov    QWORD PTR [rdi+0x8],rdx
  40e7ba:	movzx  eax,BYTE PTR [rax]
  40e7bd:	cmp    eax,0xa
  40e7c0:	mov    DWORD PTR [rbx],eax
  40e7c2:	sete   cl
  40e7c5:	cmp    eax,0xd
  40e7c8:	sete   dl
  40e7cb:	or     cl,dl
  40e7cd:	je     40e7f7 <__sprintf_chk@plt+0xd507>
  40e7cf:	cmp    eax,ebp
  40e7d1:	je     40e7f7 <__sprintf_chk@plt+0xd507>
  40e7d3:	mov    rdi,QWORD PTR [rbx+0x40]
  40e7d7:	mov    rax,QWORD PTR [rdi]
  40e7da:	lea    rdx,[rax-0x1]
  40e7de:	test   rax,rax
  40e7e1:	mov    QWORD PTR [rdi],rdx
  40e7e4:	je     40e830 <__sprintf_chk@plt+0xd540>
  40e7e6:	mov    rax,QWORD PTR [rdi+0x8]
  40e7ea:	lea    rdx,[rax+0x1]
  40e7ee:	mov    QWORD PTR [rdi+0x8],rdx
  40e7f2:	movzx  eax,BYTE PTR [rax]
  40e7f5:	mov    DWORD PTR [rbx],eax
  40e7f7:	mov    eax,DWORD PTR [rbx+0x4]
  40e7fa:	add    eax,0x1
  40e7fd:	cmp    eax,0x7ffffffc
  40e802:	mov    DWORD PTR [rbx+0x4],eax
  40e805:	jg     40e810 <__sprintf_chk@plt+0xd520>
  40e807:	add    rsp,0x8
  40e80b:	pop    rbx
  40e80c:	pop    rbp
  40e80d:	ret    
  40e80e:	xchg   ax,ax
  40e810:	mov    edx,DWORD PTR [rbx+0x10]
  40e813:	lea    rsi,[rip+0x83c1]        # 416bdb <__sprintf_chk@plt+0x158eb>
  40e81a:	mov    rdi,rbx
  40e81d:	call   40e6e0 <__sprintf_chk@plt+0xd3f0>
  40e822:	nop    WORD PTR [rax+rax*1+0x0]
  40e828:	call   401c50 <__sprintf_chk@plt+0x960>
  40e82d:	jmp    40e7bd <__sprintf_chk@plt+0xd4cd>
  40e82f:	nop
  40e830:	call   401c50 <__sprintf_chk@plt+0x960>
  40e835:	mov    DWORD PTR [rbx],eax
  40e837:	jmp    40e7f7 <__sprintf_chk@plt+0xd507>
  40e839:	nop    DWORD PTR [rax+0x0]
  40e840:	movsxd r8,edx
  40e843:	add    edx,0x1
  40e846:	mov    rax,QWORD PTR [rdi+0x18]
  40e84a:	sub    ecx,edx
  40e84c:	mov    edx,ecx
  40e84e:	sar    edx,0x1f
  40e851:	lea    rdi,[rax+r8*4]
  40e855:	mov    eax,edx
  40e857:	xor    eax,ecx
  40e859:	sub    eax,edx
  40e85b:	cmp    eax,0x1ffff
  40e860:	jg     40e880 <__sprintf_chk@plt+0xd590>
  40e862:	mov    edx,DWORD PTR [rdi]
  40e864:	lea    eax,[rcx+0x1ffff]
  40e86a:	shl    eax,0xe
  40e86d:	and    edx,0x3fff
  40e873:	mov    ecx,eax
  40e875:	or     ecx,edx
  40e877:	mov    DWORD PTR [rdi],ecx
  40e879:	ret    
  40e87a:	nop    WORD PTR [rax+rax*1+0x0]
  40e880:	sub    rsp,0x8
  40e884:	mov    rdi,QWORD PTR [rsi]
  40e887:	lea    rsi,[rip+0x8366]        # 416bf4 <__sprintf_chk@plt+0x15904>
  40e88e:	mov    edx,DWORD PTR [rdi+0x10]
  40e891:	call   40e6e0 <__sprintf_chk@plt+0xd3f0>
  40e896:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e8a0:	cmp    esi,0xffffffff
  40e8a3:	je     40e920 <__sprintf_chk@plt+0xd630>
  40e8a5:	push   r15
  40e8a7:	push   r14
  40e8a9:	mov    r15,rdi
  40e8ac:	push   r13
  40e8ae:	push   r12
  40e8b0:	mov    r9d,esi
  40e8b3:	push   rbp
  40e8b4:	push   rbx
  40e8b5:	lea    rbx,[rdi+0x18]
  40e8b9:	mov    r13d,edx
  40e8bc:	mov    ebp,ecx
  40e8be:	mov    r12d,r8d
  40e8c1:	sub    rsp,0x8
  40e8c5:	nop    DWORD PTR [rax]
  40e8c8:	mov    rdx,QWORD PTR [r15]
  40e8cb:	movsxd rax,r9d
  40e8ce:	mov    rdx,QWORD PTR [rdx+0x18]
  40e8d2:	mov    eax,DWORD PTR [rdx+rax*4]
  40e8d5:	shr    eax,0xe
  40e8d8:	sub    eax,0x1ffff
  40e8dd:	cmp    eax,0xffffffff
  40e8e0:	je     40e940 <__sprintf_chk@plt+0xd650>
  40e8e2:	mov    edx,ebp
  40e8e4:	mov    esi,r9d
  40e8e7:	mov    rdi,r15
  40e8ea:	lea    r14d,[rax+r9*1+0x1]
  40e8ef:	call   401d30 <__sprintf_chk@plt+0xa40>
  40e8f4:	test   eax,eax
  40e8f6:	je     40e928 <__sprintf_chk@plt+0xd638>
  40e8f8:	mov    rdi,QWORD PTR [r15]
  40e8fb:	mov    ecx,r13d
  40e8fe:	mov    edx,r9d
  40e901:	mov    rsi,rbx
  40e904:	call   40e840 <__sprintf_chk@plt+0xd550>
  40e909:	cmp    r14d,0xffffffff
  40e90d:	mov    r9d,r14d
  40e910:	jne    40e8c8 <__sprintf_chk@plt+0xd5d8>
  40e912:	add    rsp,0x8
  40e916:	pop    rbx
  40e917:	pop    rbp
  40e918:	pop    r12
  40e91a:	pop    r13
  40e91c:	pop    r14
  40e91e:	pop    r15
  40e920:	repz ret 
  40e922:	nop    WORD PTR [rax+rax*1+0x0]
  40e928:	mov    rdi,QWORD PTR [r15]
  40e92b:	mov    ecx,r12d
  40e92e:	mov    edx,r9d
  40e931:	mov    rsi,rbx
  40e934:	call   40e840 <__sprintf_chk@plt+0xd550>
  40e939:	jmp    40e909 <__sprintf_chk@plt+0xd619>
  40e93b:	nop    DWORD PTR [rax+rax*1+0x0]
  40e940:	mov    edx,ebp
  40e942:	mov    esi,r9d
  40e945:	mov    rdi,r15
  40e948:	call   401d30 <__sprintf_chk@plt+0xa40>
  40e94d:	test   eax,eax
  40e94f:	mov    ecx,r13d
  40e952:	jne    40e957 <__sprintf_chk@plt+0xd667>
  40e954:	mov    ecx,r12d
  40e957:	mov    rdi,QWORD PTR [r15]
  40e95a:	add    rsp,0x8
  40e95e:	mov    rsi,rbx
  40e961:	pop    rbx
  40e962:	pop    rbp
  40e963:	pop    r12
  40e965:	pop    r13
  40e967:	pop    r14
  40e969:	pop    r15
  40e96b:	mov    edx,r9d
  40e96e:	jmp    40e840 <__sprintf_chk@plt+0xd550>
  40e973:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40e97e:	xchg   ax,ax
  40e980:	push   r13
  40e982:	push   r12
  40e984:	mov    r12d,edx
  40e987:	push   rbp
  40e988:	push   rbx
  40e989:	mov    r13d,esi
  40e98c:	mov    rbx,rdi
  40e98f:	mov    ecx,0xff
  40e994:	sub    rsp,0x8
  40e998:	mov    edx,DWORD PTR [rdi+0x30]
  40e99b:	mov    esi,DWORD PTR [rdi+0x38]
  40e99e:	mov    rbp,QWORD PTR [rdi]
  40e9a1:	mov    r8d,edx
  40e9a4:	call   40e8a0 <__sprintf_chk@plt+0xd5b0>
  40e9a9:	movsxd rdx,DWORD PTR [rbx+0x30]
  40e9ad:	mov    DWORD PTR [rbx+0x38],0xffffffff
  40e9b4:	cmp    edx,DWORD PTR [rbp+0x50]
  40e9b7:	jge    40ea20 <__sprintf_chk@plt+0xd730>
  40e9b9:	mov    rax,QWORD PTR [rbp+0x18]
  40e9bd:	mov    DWORD PTR [rax+rdx*4],r13d
  40e9c1:	movsxd rdx,DWORD PTR [rbx+0x30]
  40e9c5:	cmp    edx,DWORD PTR [rbp+0x54]
  40e9c8:	jge    40e9f0 <__sprintf_chk@plt+0xd700>
  40e9ca:	mov    rax,QWORD PTR [rbp+0x28]
  40e9ce:	mov    DWORD PTR [rax+rdx*4],r12d
  40e9d2:	mov    eax,DWORD PTR [rbx+0x30]
  40e9d5:	lea    edx,[rax+0x1]
  40e9d8:	mov    DWORD PTR [rbx+0x30],edx
  40e9db:	add    rsp,0x8
  40e9df:	pop    rbx
  40e9e0:	pop    rbp
  40e9e1:	pop    r12
  40e9e3:	pop    r13
  40e9e5:	ret    
  40e9e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e9f0:	mov    rsi,QWORD PTR [rbp+0x28]
  40e9f4:	mov    rdi,QWORD PTR [rbx+0x20]
  40e9f8:	lea    rdx,[rbp+0x54]
  40e9fc:	lea    r9,[rip+0x820c]        # 416c0f <__sprintf_chk@plt+0x1591f>
  40ea03:	mov    r8d,0x7ffffffd
  40ea09:	mov    ecx,0x4
  40ea0e:	call   408620 <__sprintf_chk@plt+0x7330>
  40ea13:	movsxd rdx,DWORD PTR [rbx+0x30]
  40ea17:	mov    QWORD PTR [rbp+0x28],rax
  40ea1b:	jmp    40e9ce <__sprintf_chk@plt+0xd6de>
  40ea1d:	nop    DWORD PTR [rax]
  40ea20:	mov    rsi,QWORD PTR [rbp+0x18]
  40ea24:	mov    rdi,QWORD PTR [rbx+0x20]
  40ea28:	lea    rdx,[rbp+0x50]
  40ea2c:	lea    r9,[rip+0x81dc]        # 416c0f <__sprintf_chk@plt+0x1591f>
  40ea33:	mov    r8d,0x7ffffffd
  40ea39:	mov    ecx,0x4
  40ea3e:	call   408620 <__sprintf_chk@plt+0x7330>
  40ea43:	movsxd rdx,DWORD PTR [rbx+0x30]
  40ea47:	mov    QWORD PTR [rbp+0x18],rax
  40ea4b:	jmp    40e9bd <__sprintf_chk@plt+0xd6cd>
  40ea50:	mov    eax,DWORD PTR [rsi]
  40ea52:	sub    eax,0x6
  40ea55:	cmp    eax,0x8
  40ea58:	ja     40eab1 <__sprintf_chk@plt+0xd7c1>
  40ea5a:	lea    rdx,[rip+0x78bb]        # 41631c <__sprintf_chk@plt+0x1502c>
  40ea61:	push   rbx
  40ea62:	mov    rbx,rsi
  40ea65:	movsxd rax,DWORD PTR [rdx+rax*4]
  40ea69:	add    rax,rdx
  40ea6c:	jmp    rax
  40ea6e:	xchg   ax,ax
  40ea70:	mov    eax,DWORD PTR [rsi+0xc]
  40ea73:	test   ah,0x1
  40ea76:	je     40eb50 <__sprintf_chk@plt+0xd860>
  40ea7c:	mov    eax,DWORD PTR [rbx+0x8]
  40ea7f:	test   ah,0x1
  40ea82:	je     40eb30 <__sprintf_chk@plt+0xd840>
  40ea88:	mov    rdx,QWORD PTR [rdi+0x18]
  40ea8c:	mov    ecx,0xe
  40ea91:	shlx   esi,DWORD PTR [rbx+0xc],ecx
  40ea97:	shl    eax,0x17
  40ea9a:	mov    edx,DWORD PTR [rdx+0x8]
  40ea9d:	or     esi,0x6
  40eaa0:	or     esi,eax
  40eaa2:	call   40e980 <__sprintf_chk@plt+0xd690>
  40eaa7:	mov    DWORD PTR [rbx],0xb
  40eaad:	mov    DWORD PTR [rbx+0x8],eax
  40eab0:	pop    rbx
  40eab1:	repz ret 
  40eab3:	nop    DWORD PTR [rax+rax*1+0x0]
  40eab8:	pop    rbx
  40eab9:	lea    rdx,[rsi+0x8]
  40eabd:	jmp    402a70 <__sprintf_chk@plt+0x1780>
  40eac2:	nop    WORD PTR [rax+rax*1+0x0]
  40eac8:	mov    DWORD PTR [rsi],0xc
  40eace:	pop    rbx
  40eacf:	jmp    40eab1 <__sprintf_chk@plt+0xd7c1>
  40ead1:	nop    DWORD PTR [rax+0x0]
  40ead8:	mov    rax,QWORD PTR [rdi+0x18]
  40eadc:	mov    edx,DWORD PTR [rax+0x8]
  40eadf:	mov    eax,0x17
  40eae4:	shlx   esi,DWORD PTR [rsi+0x8],eax
  40eaea:	or     esi,0x4
  40eaed:	call   40e980 <__sprintf_chk@plt+0xd690>
  40eaf2:	mov    DWORD PTR [rbx],0xb
  40eaf8:	mov    DWORD PTR [rbx+0x8],eax
  40eafb:	pop    rbx
  40eafc:	jmp    40eab1 <__sprintf_chk@plt+0xd7c1>
  40eafe:	xchg   ax,ax
  40eb00:	mov    rax,QWORD PTR [rdi+0x18]
  40eb04:	mov    edx,DWORD PTR [rax+0x8]
  40eb07:	mov    eax,0xe
  40eb0c:	shlx   esi,DWORD PTR [rsi+0x8],eax
  40eb12:	or     esi,0x5
  40eb15:	call   40e980 <__sprintf_chk@plt+0xd690>
  40eb1a:	mov    DWORD PTR [rbx],0xb
  40eb20:	mov    DWORD PTR [rbx+0x8],eax
  40eb23:	pop    rbx
  40eb24:	jmp    40eab1 <__sprintf_chk@plt+0xd7c1>
  40eb26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40eb30:	movzx  edx,BYTE PTR [rdi+0x4a]
  40eb34:	cmp    eax,edx
  40eb36:	jl     40ea88 <__sprintf_chk@plt+0xd798>
  40eb3c:	sub    DWORD PTR [rdi+0x3c],0x1
  40eb40:	mov    eax,DWORD PTR [rbx+0x8]
  40eb43:	jmp    40ea88 <__sprintf_chk@plt+0xd798>
  40eb48:	nop    DWORD PTR [rax+rax*1+0x0]
  40eb50:	movzx  edx,BYTE PTR [rdi+0x4a]
  40eb54:	cmp    eax,edx
  40eb56:	jl     40ea7c <__sprintf_chk@plt+0xd78c>
  40eb5c:	sub    DWORD PTR [rdi+0x3c],0x1
  40eb60:	jmp    40ea7c <__sprintf_chk@plt+0xd78c>
  40eb65:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40eb70:	movsxd rax,DWORD PTR [rdi+0x30]
  40eb74:	mov    ecx,edx
  40eb76:	cmp    eax,DWORD PTR [rdi+0x34]
  40eb79:	jle    40eb87 <__sprintf_chk@plt+0xd897>
  40eb7b:	test   eax,eax
  40eb7d:	jne    40eba8 <__sprintf_chk@plt+0xd8b8>
  40eb7f:	movzx  eax,BYTE PTR [rdi+0x4a]
  40eb83:	cmp    eax,esi
  40eb85:	jle    40ec00 <__sprintf_chk@plt+0xd910>
  40eb87:	mov    rax,QWORD PTR [rdi+0x18]
  40eb8b:	mov    edx,DWORD PTR [rax+0x8]
  40eb8e:	lea    eax,[rsi+rcx*1-0x1]
  40eb92:	shl    esi,0x6
  40eb95:	or     esi,0x3
  40eb98:	shl    eax,0x17
  40eb9b:	or     esi,eax
  40eb9d:	jmp    40e980 <__sprintf_chk@plt+0xd690>
  40eba2:	nop    WORD PTR [rax+rax*1+0x0]
  40eba8:	mov    rdx,QWORD PTR [rdi]
  40ebab:	mov    rdx,QWORD PTR [rdx+0x18]
  40ebaf:	lea    rdx,[rdx+rax*4-0x4]
  40ebb4:	mov    eax,DWORD PTR [rdx]
  40ebb6:	mov    r8d,eax
  40ebb9:	and    r8d,0x3f
  40ebbd:	cmp    r8d,0x3
  40ebc1:	jne    40eb87 <__sprintf_chk@plt+0xd897>
  40ebc3:	mov    r8d,eax
  40ebc6:	shr    r8d,0x6
  40ebca:	movzx  r8d,r8b
  40ebce:	cmp    esi,r8d
  40ebd1:	jl     40eb87 <__sprintf_chk@plt+0xd897>
  40ebd3:	mov    r8d,eax
  40ebd6:	shr    r8d,0x17
  40ebda:	lea    r9d,[r8+0x1]
  40ebde:	cmp    esi,r9d
  40ebe1:	jg     40eb87 <__sprintf_chk@plt+0xd897>
  40ebe3:	lea    ecx,[rsi+rcx*1-0x1]
  40ebe7:	cmp    r8d,ecx
  40ebea:	jge    40ec08 <__sprintf_chk@plt+0xd918>
  40ebec:	and    eax,0x7fffff
  40ebf1:	shl    ecx,0x17
  40ebf4:	or     eax,ecx
  40ebf6:	mov    DWORD PTR [rdx],eax
  40ebf8:	ret    
  40ebf9:	nop    DWORD PTR [rax+0x0]
  40ec00:	repz ret 
  40ec02:	nop    WORD PTR [rax+rax*1+0x0]
  40ec08:	repz ret 
  40ec0a:	nop    WORD PTR [rax+rax*1+0x0]
  40ec10:	push   r12
  40ec12:	push   rbp
  40ec13:	mov    r12,rdi
  40ec16:	push   rbx
  40ec17:	mov    rbx,rsi
  40ec1a:	mov    ebp,edx
  40ec1c:	sub    rsp,0x20
  40ec20:	mov    rax,QWORD PTR fs:0x28
  40ec29:	mov    QWORD PTR [rsp+0x18],rax
  40ec2e:	xor    eax,eax
  40ec30:	call   40ea50 <__sprintf_chk@plt+0xd760>
  40ec35:	mov    ecx,DWORD PTR [rbx]
  40ec37:	cmp    ecx,0xc
  40ec3a:	ja     40ec81 <__sprintf_chk@plt+0xd991>
  40ec3c:	lea    rsi,[rip+0x76fd]        # 416340 <__sprintf_chk@plt+0x15050>
  40ec43:	mov    edx,ecx
  40ec45:	movsxd rax,DWORD PTR [rsi+rdx*4]
  40ec49:	add    rax,rsi
  40ec4c:	jmp    rax
  40ec4e:	xchg   ax,ax
  40ec50:	mov    eax,DWORD PTR [rbx+0x8]
  40ec53:	cmp    ebp,eax
  40ec55:	je     40ec78 <__sprintf_chk@plt+0xd988>
  40ec57:	mov    rdx,QWORD PTR [r12+0x18]
  40ec5c:	mov    ecx,ebp
  40ec5e:	shl    eax,0x17
  40ec61:	shl    ecx,0x6
  40ec64:	mov    esi,eax
  40ec66:	mov    rdi,r12
  40ec69:	or     esi,ecx
  40ec6b:	mov    edx,DWORD PTR [rdx+0x8]
  40ec6e:	call   40e980 <__sprintf_chk@plt+0xd690>
  40ec73:	nop    DWORD PTR [rax+rax*1+0x0]
  40ec78:	mov    DWORD PTR [rbx+0x8],ebp
  40ec7b:	mov    DWORD PTR [rbx],0xc
  40ec81:	mov    rax,QWORD PTR [rsp+0x18]
  40ec86:	xor    rax,QWORD PTR fs:0x28
  40ec8f:	jne    40ed83 <__sprintf_chk@plt+0xda93>
  40ec95:	add    rsp,0x20
  40ec99:	pop    rbx
  40ec9a:	pop    rbp
  40ec9b:	pop    r12
  40ec9d:	ret    
  40ec9e:	xchg   ax,ax
  40eca0:	mov    edx,0x1
  40eca5:	mov    esi,ebp
  40eca7:	mov    rdi,r12
  40ecaa:	call   40eb70 <__sprintf_chk@plt+0xd880>
  40ecaf:	jmp    40ec78 <__sprintf_chk@plt+0xd988>
  40ecb1:	nop    DWORD PTR [rax+0x0]
  40ecb8:	mov    rax,QWORD PTR [r12+0x18]
  40ecbd:	mov    esi,ebp
  40ecbf:	mov    rdi,r12
  40ecc2:	shl    esi,0x6
  40ecc5:	or     esi,0x2
  40ecc8:	mov    edx,DWORD PTR [rax+0x8]
  40eccb:	xor    eax,eax
  40eccd:	cmp    ecx,0x2
  40ecd0:	sete   al
  40ecd3:	shl    eax,0x17
  40ecd6:	or     esi,eax
  40ecd8:	call   40e980 <__sprintf_chk@plt+0xd690>
  40ecdd:	jmp    40ec78 <__sprintf_chk@plt+0xd988>
  40ecdf:	nop
  40ece0:	mov    rax,QWORD PTR [r12+0x18]
  40ece5:	mov    esi,ebp
  40ece7:	mov    rdi,r12
  40ecea:	shl    esi,0x6
  40eced:	or     esi,0x1
  40ecf0:	mov    edx,DWORD PTR [rax+0x8]
  40ecf3:	mov    eax,0xe
  40ecf8:	shlx   eax,DWORD PTR [rbx+0x8],eax
  40ecfe:	or     esi,eax
  40ed00:	call   40e980 <__sprintf_chk@plt+0xd690>
  40ed05:	jmp    40ec78 <__sprintf_chk@plt+0xd988>
  40ed0a:	nop    WORD PTR [rax+rax*1+0x0]
  40ed10:	vmovsd xmm0,QWORD PTR [rbx+0x8]
  40ed15:	mov    rsi,rsp
  40ed18:	mov    rdx,rsp
  40ed1b:	mov    rdi,r12
  40ed1e:	mov    DWORD PTR [rsp+0x8],0x3
  40ed26:	vmovsd QWORD PTR [rsp],xmm0
  40ed2b:	call   4086c0 <__sprintf_chk@plt+0x73d0>
  40ed30:	mov    rdx,QWORD PTR [r12+0x18]
  40ed35:	mov    esi,ebp
  40ed37:	shl    eax,0xe
  40ed3a:	shl    esi,0x6
  40ed3d:	mov    rdi,r12
  40ed40:	or     esi,0x1
  40ed43:	mov    edx,DWORD PTR [rdx+0x8]
  40ed46:	or     esi,eax
  40ed48:	call   40e980 <__sprintf_chk@plt+0xd690>
  40ed4d:	jmp    40ec78 <__sprintf_chk@plt+0xd988>
  40ed52:	nop    WORD PTR [rax+rax*1+0x0]
  40ed58:	mov    rax,QWORD PTR [r12]
  40ed5c:	movsxd rdx,DWORD PTR [rbx+0x8]
  40ed60:	mov    rax,QWORD PTR [rax+0x18]
  40ed64:	lea    rcx,[rax+rdx*4]
  40ed68:	mov    edx,ebp
  40ed6a:	shl    edx,0x6
  40ed6d:	mov    eax,DWORD PTR [rcx]
  40ed6f:	and    edx,0x3fc0
  40ed75:	and    eax,0xffffc03f
  40ed7a:	or     eax,edx
  40ed7c:	mov    DWORD PTR [rcx],eax
  40ed7e:	jmp    40ec78 <__sprintf_chk@plt+0xd988>
  40ed83:	call   401100 <__stack_chk_fail@plt>
  40ed88:	nop    DWORD PTR [rax+rax*1+0x0]
  40ed90:	push   r12
  40ed92:	mov    r12d,esi
  40ed95:	lea    esi,[rdx-0x1]
  40ed98:	mov    edx,0x51eb851f
  40ed9d:	push   rbp
  40ed9e:	push   rbx
  40ed9f:	mov    eax,esi
  40eda1:	sar    esi,0x1f
  40eda4:	mov    rbp,rdi
  40eda7:	imul   edx
  40eda9:	mov    eax,0x0
  40edae:	sar    edx,0x4
  40edb1:	sub    edx,esi
  40edb3:	mov    esi,ecx
  40edb5:	shl    esi,0x17
  40edb8:	cmp    ecx,0xffffffff
  40edbb:	lea    ebx,[rdx+0x1]
  40edbe:	cmove  esi,eax
  40edc1:	mov    rax,QWORD PTR [rdi+0x18]
  40edc5:	mov    edx,DWORD PTR [rax+0x8]
  40edc8:	mov    eax,r12d
  40edcb:	shl    eax,0x6
  40edce:	or     eax,0x22
  40edd1:	cmp    ebx,0x1ff
  40edd7:	jle    40ee00 <__sprintf_chk@plt+0xdb10>
  40edd9:	or     esi,eax
  40eddb:	add    r12d,0x1
  40eddf:	call   40e980 <__sprintf_chk@plt+0xd690>
  40ede4:	mov    rax,QWORD PTR [rbp+0x18]
  40ede8:	mov    esi,ebx
  40edea:	mov    rdi,rbp
  40eded:	mov    edx,DWORD PTR [rax+0x8]
  40edf0:	call   40e980 <__sprintf_chk@plt+0xd690>
  40edf5:	mov    DWORD PTR [rbp+0x3c],r12d
  40edf9:	pop    rbx
  40edfa:	pop    rbp
  40edfb:	pop    r12
  40edfd:	ret    
  40edfe:	xchg   ax,ax
  40ee00:	shl    ebx,0xe
  40ee03:	add    r12d,0x1
  40ee07:	or     ebx,eax
  40ee09:	or     esi,ebx
  40ee0b:	call   40e980 <__sprintf_chk@plt+0xd690>
  40ee10:	mov    DWORD PTR [rbp+0x3c],r12d
  40ee14:	pop    rbx
  40ee15:	pop    rbp
  40ee16:	pop    r12
  40ee18:	ret    
  40ee19:	nop    DWORD PTR [rax+0x0]
  40ee20:	push   r13
  40ee22:	push   r12
  40ee24:	mov    r12,rdi
  40ee27:	push   rbp
  40ee28:	push   rbx
  40ee29:	sub    rsp,0x8
  40ee2d:	mov    rbx,QWORD PTR [rdi+0x30]
  40ee31:	mov    rbp,QWORD PTR [rdi+0x38]
  40ee35:	movzx  eax,BYTE PTR [rbx+0x4a]
  40ee39:	mov    r13,QWORD PTR [rbx]
  40ee3c:	test   al,al
  40ee3e:	je     40ee6e <__sprintf_chk@plt+0xdb7e>
  40ee40:	mov    rsi,QWORD PTR [r13+0x30]
  40ee44:	mov    ecx,DWORD PTR [rbx+0x30]
  40ee47:	nop    WORD PTR [rax+rax*1+0x0]
  40ee50:	sub    eax,0x1
  40ee53:	movzx  edx,al
  40ee56:	movzx  edx,WORD PTR [rbx+rdx*2+0xc4]
  40ee5e:	shl    rdx,0x4
  40ee62:	test   al,al
  40ee64:	mov    DWORD PTR [rsi+rdx*1+0xc],ecx
  40ee68:	jne    40ee50 <__sprintf_chk@plt+0xdb60>
  40ee6a:	mov    BYTE PTR [rbx+0x4a],0x0
  40ee6e:	mov    rax,QWORD PTR [rbx+0x18]
  40ee72:	mov    esi,0x80001e
  40ee77:	mov    rdi,rbx
  40ee7a:	mov    edx,DWORD PTR [rax+0x8]
  40ee7d:	call   40e980 <__sprintf_chk@plt+0xd690>
  40ee82:	movsxd rcx,DWORD PTR [rbx+0x30]
  40ee86:	cmp    ecx,0xffffffff
  40ee89:	jl     40efd0 <__sprintf_chk@plt+0xdce0>
  40ee8f:	movsxd rdx,DWORD PTR [r13+0x50]
  40ee93:	mov    rsi,QWORD PTR [r13+0x18]
  40ee97:	shl    rcx,0x2
  40ee9b:	mov    rdi,rbp
  40ee9e:	shl    rdx,0x2
  40eea2:	call   403450 <__sprintf_chk@plt+0x2160>
  40eea7:	mov    QWORD PTR [r13+0x18],rax
  40eeab:	movsxd rax,DWORD PTR [rbx+0x30]
  40eeaf:	cmp    eax,0xffffffff
  40eeb2:	mov    DWORD PTR [r13+0x50],eax
  40eeb6:	jl     40efd0 <__sprintf_chk@plt+0xdce0>
  40eebc:	movsxd rdx,DWORD PTR [r13+0x54]
  40eec0:	mov    rsi,QWORD PTR [r13+0x28]
  40eec4:	lea    rcx,[rax*4+0x0]
  40eecc:	mov    rdi,rbp
  40eecf:	shl    rdx,0x2
  40eed3:	call   403450 <__sprintf_chk@plt+0x2160>
  40eed8:	mov    QWORD PTR [r13+0x28],rax
  40eedc:	mov    eax,DWORD PTR [rbx+0x30]
  40eedf:	mov    DWORD PTR [r13+0x54],eax
  40eee3:	movsxd rax,DWORD PTR [rbx+0x40]
  40eee7:	cmp    eax,0xffffffff
  40eeea:	jl     40efd0 <__sprintf_chk@plt+0xdce0>
  40eef0:	movsxd rdx,DWORD PTR [r13+0x4c]
  40eef4:	mov    rsi,QWORD PTR [r13+0x10]
  40eef8:	shl    rax,0x4
  40eefc:	mov    rcx,rax
  40eeff:	mov    rdi,rbp
  40ef02:	shl    rdx,0x4
  40ef06:	call   403450 <__sprintf_chk@plt+0x2160>
  40ef0b:	mov    QWORD PTR [r13+0x10],rax
  40ef0f:	mov    eax,DWORD PTR [rbx+0x40]
  40ef12:	mov    DWORD PTR [r13+0x4c],eax
  40ef16:	movsxd rax,DWORD PTR [rbx+0x44]
  40ef1a:	cmp    eax,0xffffffff
  40ef1d:	jl     40efd0 <__sprintf_chk@plt+0xdce0>
  40ef23:	movsxd rdx,DWORD PTR [r13+0x58]
  40ef27:	mov    rsi,QWORD PTR [r13+0x20]
  40ef2b:	lea    rcx,[rax*8+0x0]
  40ef33:	mov    rdi,rbp
  40ef36:	shl    rdx,0x3
  40ef3a:	call   403450 <__sprintf_chk@plt+0x2160>
  40ef3f:	mov    QWORD PTR [r13+0x20],rax
  40ef43:	mov    eax,DWORD PTR [rbx+0x44]
  40ef46:	mov    DWORD PTR [r13+0x58],eax
  40ef4a:	movsx  rax,WORD PTR [rbx+0x48]
  40ef4f:	cmp    ax,0xffff
  40ef53:	jl     40efd0 <__sprintf_chk@plt+0xdce0>
  40ef55:	movsxd rdx,DWORD PTR [r13+0x5c]
  40ef59:	mov    rsi,QWORD PTR [r13+0x30]
  40ef5d:	shl    rax,0x4
  40ef61:	mov    rcx,rax
  40ef64:	mov    rdi,rbp
  40ef67:	shl    rdx,0x4
  40ef6b:	call   403450 <__sprintf_chk@plt+0x2160>
  40ef70:	movzx  ecx,BYTE PTR [r13+0x70]
  40ef75:	mov    QWORD PTR [r13+0x30],rax
  40ef79:	mov    rdi,rbp
  40ef7c:	movsx  eax,WORD PTR [rbx+0x48]
  40ef80:	movsxd rdx,DWORD PTR [r13+0x48]
  40ef84:	mov    rsi,QWORD PTR [r13+0x38]
  40ef88:	shl    rcx,0x3
  40ef8c:	shl    rdx,0x3
  40ef90:	mov    DWORD PTR [r13+0x5c],eax
  40ef94:	call   403450 <__sprintf_chk@plt+0x2160>
  40ef99:	mov    QWORD PTR [r13+0x38],rax
  40ef9d:	movzx  eax,BYTE PTR [r13+0x70]
  40efa2:	mov    DWORD PTR [r13+0x48],eax
  40efa6:	mov    rax,QWORD PTR [rbx+0x10]
  40efaa:	mov    QWORD PTR [r12+0x30],rax
  40efaf:	mov    eax,DWORD PTR [r12+0x10]
  40efb4:	sub    eax,0x11d
  40efb9:	cmp    eax,0x1
  40efbc:	jbe    40efe1 <__sprintf_chk@plt+0xdcf1>
  40efbe:	sub    QWORD PTR [rbp+0x10],0x20
  40efc3:	add    rsp,0x8
  40efc7:	pop    rbx
  40efc8:	pop    rbp
  40efc9:	pop    r12
  40efcb:	pop    r13
  40efcd:	ret    
  40efce:	xchg   ax,ax
  40efd0:	lea    rsi,[rip+0x8079]        # 417050 <__sprintf_chk@plt+0x15d60>
  40efd7:	mov    rdi,rbp
  40efda:	xor    eax,eax
  40efdc:	call   405730 <__sprintf_chk@plt+0x4440>
  40efe1:	mov    rax,QWORD PTR [r12+0x18]
  40efe6:	mov    rsi,QWORD PTR [r12+0x38]
  40efeb:	lea    rdi,[r12+0x30]
  40eff0:	mov    rcx,QWORD PTR [rax+0x10]
  40eff4:	lea    rdx,[rax+0x18]
  40eff8:	call   40b780 <__sprintf_chk@plt+0xa490>
  40effd:	jmp    40efbe <__sprintf_chk@plt+0xdcce>
  40efff:	nop
  40f000:	cmp    edx,0xffffffff
  40f003:	mov    r10,rdi
  40f006:	je     40f060 <__sprintf_chk@plt+0xdd70>
  40f008:	mov    r8d,DWORD PTR [rsi]
  40f00b:	cmp    r8d,0xffffffff
  40f00f:	je     40f068 <__sprintf_chk@plt+0xdd78>
  40f011:	mov    rdi,QWORD PTR [rdi]
  40f014:	mov    r9,QWORD PTR [rdi+0x18]
  40f018:	nop    DWORD PTR [rax+rax*1+0x0]
  40f020:	movsxd rax,r8d
  40f023:	mov    eax,DWORD PTR [r9+rax*4]
  40f027:	shr    eax,0xe
  40f02a:	sub    eax,0x1ffff
  40f02f:	cmp    eax,0xffffffff
  40f032:	je     40f048 <__sprintf_chk@plt+0xdd58>
  40f034:	lea    eax,[r8+rax*1+0x1]
  40f039:	cmp    eax,0xffffffff
  40f03c:	je     40f048 <__sprintf_chk@plt+0xdd58>
  40f03e:	mov    r8d,eax
  40f041:	jmp    40f020 <__sprintf_chk@plt+0xdd30>
  40f043:	nop    DWORD PTR [rax+rax*1+0x0]
  40f048:	lea    rsi,[r10+0x18]
  40f04c:	mov    ecx,edx
  40f04e:	mov    edx,r8d
  40f051:	jmp    40e840 <__sprintf_chk@plt+0xd550>
  40f056:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f060:	repz ret 
  40f062:	nop    WORD PTR [rax+rax*1+0x0]
  40f068:	mov    DWORD PTR [rsi],edx
  40f06a:	ret    
  40f06b:	nop    DWORD PTR [rax+rax*1+0x0]
  40f070:	push   rbp
  40f071:	push   rbx
  40f072:	mov    esi,0x7fff8016
  40f077:	mov    rbx,rdi
  40f07a:	sub    rsp,0x18
  40f07e:	mov    ebp,DWORD PTR [rdi+0x38]
  40f081:	mov    DWORD PTR [rdi+0x38],0xffffffff
  40f088:	mov    rax,QWORD PTR fs:0x28
  40f091:	mov    QWORD PTR [rsp+0x8],rax
  40f096:	xor    eax,eax
  40f098:	mov    rax,QWORD PTR [rdi+0x18]
  40f09c:	mov    edx,DWORD PTR [rax+0x8]
  40f09f:	call   40e980 <__sprintf_chk@plt+0xd690>
  40f0a4:	lea    rsi,[rsp+0x4]
  40f0a9:	mov    edx,ebp
  40f0ab:	mov    rdi,rbx
  40f0ae:	mov    DWORD PTR [rsp+0x4],eax
  40f0b2:	call   40f000 <__sprintf_chk@plt+0xdd10>
  40f0b7:	mov    rcx,QWORD PTR [rsp+0x8]
  40f0bc:	xor    rcx,QWORD PTR fs:0x28
  40f0c5:	mov    eax,DWORD PTR [rsp+0x4]
  40f0c9:	jne    40f0d2 <__sprintf_chk@plt+0xdde2>
  40f0cb:	add    rsp,0x18
  40f0cf:	pop    rbx
  40f0d0:	pop    rbp
  40f0d1:	ret    
  40f0d2:	call   401100 <__stack_chk_fail@plt>
  40f0d7:	nop    WORD PTR [rax+rax*1+0x0]
  40f0e0:	push   rbx
  40f0e1:	mov    eax,edx
  40f0e3:	mov    rdx,QWORD PTR [rdi+0x18]
  40f0e7:	shl    ecx,0x17
  40f0ea:	shl    r8d,0xe
  40f0ee:	shl    eax,0x6
  40f0f1:	or     esi,ecx
  40f0f3:	mov    rbx,rdi
  40f0f6:	mov    edx,DWORD PTR [rdx+0x8]
  40f0f9:	or     esi,r8d
  40f0fc:	or     esi,eax
  40f0fe:	call   40e980 <__sprintf_chk@plt+0xd690>
  40f103:	mov    rdi,rbx
  40f106:	pop    rbx
  40f107:	jmp    40f070 <__sprintf_chk@plt+0xdd80>
  40f10c:	nop    DWORD PTR [rax+0x0]
  40f110:	push   r15
  40f112:	push   r14
  40f114:	push   r13
  40f116:	push   r12
  40f118:	mov    r12d,edx
  40f11b:	push   rbp
  40f11c:	push   rbx
  40f11d:	mov    rbp,rsi
  40f120:	mov    rbx,rdi
  40f123:	sub    rsp,0x18
  40f127:	call   40ec10 <__sprintf_chk@plt+0xd920>
  40f12c:	cmp    DWORD PTR [rbp+0x0],0xa
  40f130:	je     40f250 <__sprintf_chk@plt+0xdf60>
  40f136:	mov    esi,DWORD PTR [rbp+0x10]
  40f139:	mov    r9d,DWORD PTR [rbp+0x14]
  40f13d:	cmp    esi,r9d
  40f140:	je     40f1fe <__sprintf_chk@plt+0xdf0e>
  40f146:	mov    rdi,rbx
  40f149:	call   401cc0 <__sprintf_chk@plt+0x9d0>
  40f14e:	test   eax,eax
  40f150:	je     40f230 <__sprintf_chk@plt+0xdf40>
  40f156:	cmp    DWORD PTR [rbp+0x0],0xa
  40f15a:	mov    r15d,0xffffffff
  40f160:	je     40f16d <__sprintf_chk@plt+0xde7d>
  40f162:	mov    rdi,rbx
  40f165:	call   40f070 <__sprintf_chk@plt+0xdd80>
  40f16a:	mov    r15d,eax
  40f16d:	mov    eax,DWORD PTR [rbx+0x30]
  40f170:	mov    r13d,r12d
  40f173:	mov    rdi,rbx
  40f176:	shl    r13d,0x6
  40f17a:	mov    esi,r13d
  40f17d:	mov    DWORD PTR [rbx+0x34],eax
  40f180:	mov    rax,QWORD PTR [rbx+0x18]
  40f184:	or     esi,0x4002
  40f18a:	mov    edx,DWORD PTR [rax+0x8]
  40f18d:	call   40e980 <__sprintf_chk@plt+0xd690>
  40f192:	mov    DWORD PTR [rsp+0xc],eax
  40f196:	mov    eax,DWORD PTR [rbx+0x30]
  40f199:	mov    esi,r13d
  40f19c:	or     esi,0x800002
  40f1a2:	mov    rdi,rbx
  40f1a5:	mov    DWORD PTR [rbx+0x34],eax
  40f1a8:	mov    rax,QWORD PTR [rbx+0x18]
  40f1ac:	mov    edx,DWORD PTR [rax+0x8]
  40f1af:	call   40e980 <__sprintf_chk@plt+0xd690>
  40f1b4:	mov    r14d,eax
  40f1b7:	mov    eax,DWORD PTR [rbx+0x30]
  40f1ba:	lea    rsi,[rbx+0x38]
  40f1be:	mov    edx,r15d
  40f1c1:	mov    rdi,rbx
  40f1c4:	mov    DWORD PTR [rbx+0x34],eax
  40f1c7:	call   40f000 <__sprintf_chk@plt+0xdd10>
  40f1cc:	mov    r8d,DWORD PTR [rsp+0xc]
  40f1d1:	mov    r13d,DWORD PTR [rbx+0x30]
  40f1d5:	mov    ecx,r12d
  40f1d8:	mov    rdi,rbx
  40f1db:	mov    DWORD PTR [rbx+0x34],r13d
  40f1df:	mov    esi,DWORD PTR [rbp+0x14]
  40f1e2:	mov    edx,r13d
  40f1e5:	call   40e8a0 <__sprintf_chk@plt+0xd5b0>
  40f1ea:	mov    esi,DWORD PTR [rbp+0x10]
  40f1ed:	mov    r8d,r14d
  40f1f0:	mov    ecx,r12d
  40f1f3:	mov    edx,r13d
  40f1f6:	mov    rdi,rbx
  40f1f9:	call   40e8a0 <__sprintf_chk@plt+0xd5b0>
  40f1fe:	mov    DWORD PTR [rbp+0x10],0xffffffff
  40f205:	mov    DWORD PTR [rbp+0x14],0xffffffff
  40f20c:	mov    DWORD PTR [rbp+0x8],r12d
  40f210:	mov    DWORD PTR [rbp+0x0],0xc
  40f217:	add    rsp,0x18
  40f21b:	pop    rbx
  40f21c:	pop    rbp
  40f21d:	pop    r12
  40f21f:	pop    r13
  40f221:	pop    r14
  40f223:	pop    r15
  40f225:	ret    
  40f226:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f230:	mov    esi,r9d
  40f233:	mov    rdi,rbx
  40f236:	mov    r14d,0xffffffff
  40f23c:	call   401cc0 <__sprintf_chk@plt+0x9d0>
  40f241:	test   eax,eax
  40f243:	mov    r8d,r14d
  40f246:	je     40f1d1 <__sprintf_chk@plt+0xdee1>
  40f248:	jmp    40f156 <__sprintf_chk@plt+0xde66>
  40f24d:	nop    DWORD PTR [rax]
  40f250:	mov    edx,DWORD PTR [rbp+0x8]
  40f253:	lea    rsi,[rbp+0x10]
  40f257:	mov    rdi,rbx
  40f25a:	call   40f000 <__sprintf_chk@plt+0xdd10>
  40f25f:	jmp    40f136 <__sprintf_chk@plt+0xde46>
  40f264:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40f26f:	nop
  40f270:	mov    eax,DWORD PTR [rdi+0x30]
  40f273:	cmp    eax,edx
  40f275:	je     40f288 <__sprintf_chk@plt+0xdf98>
  40f277:	mov    r8d,edx
  40f27a:	mov    ecx,0xff
  40f27f:	jmp    40e8a0 <__sprintf_chk@plt+0xd5b0>
  40f284:	nop    DWORD PTR [rax+0x0]
  40f288:	mov    DWORD PTR [rdi+0x34],eax
  40f28b:	lea    rax,[rdi+0x38]
  40f28f:	mov    edx,esi
  40f291:	mov    rsi,rax
  40f294:	jmp    40f000 <__sprintf_chk@plt+0xdd10>
  40f299:	nop    DWORD PTR [rax+0x0]
  40f2a0:	push   rbp
  40f2a1:	push   rbx
  40f2a2:	mov    rbx,rdi
  40f2a5:	sub    rsp,0x8
  40f2a9:	mov    rbp,QWORD PTR [rdi+0x28]
  40f2ad:	mov    r10,QWORD PTR [rdi+0x18]
  40f2b1:	mov    rax,QWORD PTR [rbp+0x0]
  40f2b5:	mov    rsi,QWORD PTR [r10+0x30]
  40f2b9:	mov    QWORD PTR [rdi+0x28],rax
  40f2bd:	movzx  edx,BYTE PTR [rsi+0x4a]
  40f2c1:	cmp    dl,BYTE PTR [rbp+0xc]
  40f2c4:	movzx  edi,BYTE PTR [rbp+0xc]
  40f2c8:	jbe    40f303 <__sprintf_chk@plt+0xe013>
  40f2ca:	mov    rax,QWORD PTR [rsi]
  40f2cd:	mov    r8d,DWORD PTR [rsi+0x30]
  40f2d1:	sub    edx,0x1
  40f2d4:	mov    r9,QWORD PTR [rax+0x30]
  40f2d8:	jmp    40f2e2 <__sprintf_chk@plt+0xdff2>
  40f2da:	nop    WORD PTR [rax+rax*1+0x0]
  40f2e0:	mov    edx,eax
  40f2e2:	movzx  eax,dl
  40f2e5:	mov    rcx,rax
  40f2e8:	movzx  eax,WORD PTR [rsi+rax*2+0xc4]
  40f2f0:	shl    rax,0x4
  40f2f4:	cmp    edi,ecx
  40f2f6:	mov    DWORD PTR [r9+rax*1+0xc],r8d
  40f2fb:	lea    eax,[rdx-0x1]
  40f2fe:	jl     40f2e0 <__sprintf_chk@plt+0xdff0>
  40f300:	mov    BYTE PTR [rsi+0x4a],dl
  40f303:	cmp    BYTE PTR [rbp+0xd],0x0
  40f307:	je     40f31d <__sprintf_chk@plt+0xe02d>
  40f309:	shl    edi,0x6
  40f30c:	mov    edx,DWORD PTR [r10+0x8]
  40f310:	mov    esi,edi
  40f312:	mov    rdi,rbx
  40f315:	or     esi,0x23
  40f318:	call   40e980 <__sprintf_chk@plt+0xd690>
  40f31d:	movzx  eax,BYTE PTR [rbx+0x4a]
  40f321:	mov    edx,DWORD PTR [rbp+0x8]
  40f324:	lea    rsi,[rbx+0x38]
  40f328:	mov    rdi,rbx
  40f32b:	mov    DWORD PTR [rbx+0x3c],eax
  40f32e:	mov    eax,DWORD PTR [rbx+0x30]
  40f331:	mov    DWORD PTR [rbx+0x34],eax
  40f334:	add    rsp,0x8
  40f338:	pop    rbx
  40f339:	pop    rbp
  40f33a:	jmp    40f000 <__sprintf_chk@plt+0xdd10>
  40f33f:	nop
  40f340:	mov    rax,QWORD PTR [rdi]
  40f343:	add    esi,DWORD PTR [rdi+0x3c]
  40f346:	movzx  edx,BYTE PTR [rax+0x73]
  40f34a:	cmp    esi,edx
  40f34c:	jle    40f35a <__sprintf_chk@plt+0xe06a>
  40f34e:	cmp    esi,0xf9
  40f354:	jg     40f360 <__sprintf_chk@plt+0xe070>
  40f356:	mov    BYTE PTR [rax+0x73],sil
  40f35a:	repz ret 
  40f35c:	nop    DWORD PTR [rax+0x0]
  40f360:	sub    rsp,0x8
  40f364:	mov    rdi,QWORD PTR [rdi+0x18]
  40f368:	lea    rsi,[rip+0x7f49]        # 4172b8 <__sprintf_chk@plt+0x15fc8>
  40f36f:	mov    edx,DWORD PTR [rdi+0x10]
  40f372:	call   40e6e0 <__sprintf_chk@plt+0xd3f0>
  40f377:	nop    WORD PTR [rax+rax*1+0x0]
  40f380:	push   rbp
  40f381:	push   rbx
  40f382:	mov    rbp,rsi
  40f385:	mov    rbx,rdi
  40f388:	sub    rsp,0x8
  40f38c:	call   40ea50 <__sprintf_chk@plt+0xd760>
  40f391:	cmp    DWORD PTR [rbp+0x0],0xc
  40f395:	je     40f3c0 <__sprintf_chk@plt+0xe0d0>
  40f397:	mov    rdi,rbx
  40f39a:	mov    esi,0x1
  40f39f:	call   40f340 <__sprintf_chk@plt+0xe050>
  40f3a4:	mov    edx,DWORD PTR [rbx+0x3c]
  40f3a7:	mov    rsi,rbp
  40f3aa:	mov    rdi,rbx
  40f3ad:	lea    eax,[rdx+0x1]
  40f3b0:	mov    DWORD PTR [rbx+0x3c],eax
  40f3b3:	add    rsp,0x8
  40f3b7:	pop    rbx
  40f3b8:	pop    rbp
  40f3b9:	jmp    40f110 <__sprintf_chk@plt+0xde20>
  40f3be:	xchg   ax,ax
  40f3c0:	lea    rsi,[rbp+0x8]
  40f3c4:	mov    rdi,rbx
  40f3c7:	call   403360 <__sprintf_chk@plt+0x2070>
  40f3cc:	jmp    40f397 <__sprintf_chk@plt+0xe0a7>
  40f3ce:	xchg   ax,ax
  40f3d0:	push   rbp
  40f3d1:	push   rbx
  40f3d2:	mov    rbx,rsi
  40f3d5:	mov    rbp,rdi
  40f3d8:	sub    rsp,0x8
  40f3dc:	call   40ea50 <__sprintf_chk@plt+0xd760>
  40f3e1:	cmp    DWORD PTR [rbx],0xc
  40f3e4:	je     40f400 <__sprintf_chk@plt+0xe110>
  40f3e6:	mov    rsi,rbx
  40f3e9:	mov    rdi,rbp
  40f3ec:	call   40f380 <__sprintf_chk@plt+0xe090>
  40f3f1:	mov    eax,DWORD PTR [rbx+0x8]
  40f3f4:	add    rsp,0x8
  40f3f8:	pop    rbx
  40f3f9:	pop    rbp
  40f3fa:	ret    
  40f3fb:	nop    DWORD PTR [rax+rax*1+0x0]
  40f400:	mov    eax,DWORD PTR [rbx+0x14]
  40f403:	cmp    DWORD PTR [rbx+0x10],eax
  40f406:	je     40f3f1 <__sprintf_chk@plt+0xe101>
  40f408:	movzx  eax,BYTE PTR [rbp+0x4a]
  40f40c:	mov    edx,DWORD PTR [rbx+0x8]
  40f40f:	cmp    edx,eax
  40f411:	jl     40f3e6 <__sprintf_chk@plt+0xe0f6>
  40f413:	mov    rsi,rbx
  40f416:	mov    rdi,rbp
  40f419:	call   40f110 <__sprintf_chk@plt+0xde20>
  40f41e:	mov    eax,DWORD PTR [rbx+0x8]
  40f421:	jmp    40f3f4 <__sprintf_chk@plt+0xe104>
  40f423:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40f42e:	xchg   ax,ax
  40f430:	mov    eax,DWORD PTR [rsi+0x14]
  40f433:	cmp    DWORD PTR [rsi+0x10],eax
  40f436:	je     40f440 <__sprintf_chk@plt+0xe150>
  40f438:	jmp    40f3d0 <__sprintf_chk@plt+0xe0e0>
  40f43a:	nop    WORD PTR [rax+rax*1+0x0]
  40f440:	jmp    40ea50 <__sprintf_chk@plt+0xd760>
  40f445:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40f450:	push   rbp
  40f451:	push   rbx
  40f452:	mov    rbx,rsi
  40f455:	mov    rbp,rdi
  40f458:	sub    rsp,0x38
  40f45c:	mov    rax,QWORD PTR fs:0x28
  40f465:	mov    QWORD PTR [rsp+0x28],rax
  40f46a:	xor    eax,eax
  40f46c:	call   40f430 <__sprintf_chk@plt+0xe140>
  40f471:	mov    eax,DWORD PTR [rbx]
  40f473:	cmp    eax,0x4
  40f476:	je     40f500 <__sprintf_chk@plt+0xe210>
  40f47c:	ja     40f4b0 <__sprintf_chk@plt+0xe1c0>
  40f47e:	cmp    eax,0x1
  40f481:	jae    40f4b5 <__sprintf_chk@plt+0xe1c5>
  40f483:	mov    rsi,rbx
  40f486:	mov    rdi,rbp
  40f489:	call   40f3d0 <__sprintf_chk@plt+0xe0e0>
  40f48e:	mov    rcx,QWORD PTR [rsp+0x28]
  40f493:	xor    rcx,QWORD PTR fs:0x28
  40f49c:	jne    40f575 <__sprintf_chk@plt+0xe285>
  40f4a2:	add    rsp,0x38
  40f4a6:	pop    rbx
  40f4a7:	pop    rbp
  40f4a8:	ret    
  40f4a9:	nop    DWORD PTR [rax+0x0]
  40f4b0:	cmp    eax,0x5
  40f4b3:	jne    40f483 <__sprintf_chk@plt+0xe193>
  40f4b5:	cmp    DWORD PTR [rbp+0x40],0xff
  40f4bc:	jg     40f483 <__sprintf_chk@plt+0xe193>
  40f4be:	cmp    eax,0x1
  40f4c1:	je     40f548 <__sprintf_chk@plt+0xe258>
  40f4c7:	cmp    eax,0x5
  40f4ca:	je     40f520 <__sprintf_chk@plt+0xe230>
  40f4cc:	cmp    eax,0x2
  40f4cf:	lea    rsi,[rsp+0x10]
  40f4d4:	mov    rdi,rbp
  40f4d7:	sete   al
  40f4da:	mov    DWORD PTR [rsp+0x18],0x1
  40f4e2:	movzx  eax,al
  40f4e5:	mov    rdx,rsi
  40f4e8:	mov    DWORD PTR [rsp+0x10],eax
  40f4ec:	call   4086c0 <__sprintf_chk@plt+0x73d0>
  40f4f1:	mov    DWORD PTR [rbx+0x8],eax
  40f4f4:	mov    DWORD PTR [rbx],0x4
  40f4fa:	or     ah,0x1
  40f4fd:	jmp    40f48e <__sprintf_chk@plt+0xe19e>
  40f4ff:	nop
  40f500:	mov    eax,DWORD PTR [rbx+0x8]
  40f503:	cmp    eax,0xff
  40f508:	jg     40f483 <__sprintf_chk@plt+0xe193>
  40f50e:	or     ah,0x1
  40f511:	jmp    40f48e <__sprintf_chk@plt+0xe19e>
  40f516:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f520:	lea    rsi,[rsp+0x10]
  40f525:	vmovsd xmm0,QWORD PTR [rbx+0x8]
  40f52a:	mov    rdi,rbp
  40f52d:	mov    DWORD PTR [rsp+0x18],0x3
  40f535:	mov    rdx,rsi
  40f538:	vmovsd QWORD PTR [rsp+0x10],xmm0
  40f53e:	call   4086c0 <__sprintf_chk@plt+0x73d0>
  40f543:	jmp    40f4f1 <__sprintf_chk@plt+0xe201>
  40f545:	nop    DWORD PTR [rax]
  40f548:	mov    rax,QWORD PTR [rbp+0x8]
  40f54c:	lea    rdx,[rsp+0x10]
  40f551:	mov    rsi,rsp
  40f554:	mov    rdi,rbp
  40f557:	mov    DWORD PTR [rsp+0x18],0x0
  40f55f:	mov    DWORD PTR [rsp+0x8],0x5
  40f567:	mov    QWORD PTR [rsp],rax
  40f56b:	call   4086c0 <__sprintf_chk@plt+0x73d0>
  40f570:	jmp    40f4f1 <__sprintf_chk@plt+0xe201>
  40f575:	call   401100 <__stack_chk_fail@plt>
  40f57a:	nop    WORD PTR [rax+rax*1+0x0]
  40f580:	push   r15
  40f582:	push   r14
  40f584:	mov    r15d,esi
  40f587:	push   r13
  40f589:	push   r12
  40f58b:	mov    r12,rdi
  40f58e:	push   rbp
  40f58f:	push   rbx
  40f590:	mov    rbp,rcx
  40f593:	mov    rbx,rdx
  40f596:	sub    rsp,0x18
  40f59a:	cmp    DWORD PTR [rdx],0x5
  40f59d:	je     40f638 <__sprintf_chk@plt+0xe348>
  40f5a3:	lea    eax,[r15-0x12]
  40f5a7:	and    eax,0xfffffffd
  40f5aa:	jne    40f6a0 <__sprintf_chk@plt+0xe3b0>
  40f5b0:	xor    r13d,r13d
  40f5b3:	xor    r14d,r14d
  40f5b6:	mov    rsi,rbx
  40f5b9:	mov    rdi,r12
  40f5bc:	call   40f450 <__sprintf_chk@plt+0xe160>
  40f5c1:	cmp    eax,r14d
  40f5c4:	jle    40f610 <__sprintf_chk@plt+0xe320>
  40f5c6:	cmp    DWORD PTR [rbx],0xc
  40f5c9:	je     40f788 <__sprintf_chk@plt+0xe498>
  40f5cf:	cmp    DWORD PTR [rbp+0x0],0xc
  40f5d3:	je     40f7a0 <__sprintf_chk@plt+0xe4b0>
  40f5d9:	mov    rdx,QWORD PTR [r12+0x18]
  40f5de:	mov    esi,r15d
  40f5e1:	shl    eax,0x17
  40f5e4:	or     esi,r13d
  40f5e7:	mov    rdi,r12
  40f5ea:	or     esi,eax
  40f5ec:	mov    edx,DWORD PTR [rdx+0x8]
  40f5ef:	call   40e980 <__sprintf_chk@plt+0xd690>
  40f5f4:	mov    DWORD PTR [rbx],0xb
  40f5fa:	mov    DWORD PTR [rbx+0x8],eax
  40f5fd:	add    rsp,0x18
  40f601:	pop    rbx
  40f602:	pop    rbp
  40f603:	pop    r12
  40f605:	pop    r13
  40f607:	pop    r14
  40f609:	pop    r15
  40f60b:	ret    
  40f60c:	nop    DWORD PTR [rax+0x0]
  40f610:	cmp    DWORD PTR [rbp+0x0],0xc
  40f614:	je     40f7c0 <__sprintf_chk@plt+0xe4d0>
  40f61a:	cmp    DWORD PTR [rbx],0xc
  40f61d:	jne    40f5d9 <__sprintf_chk@plt+0xe2e9>
  40f61f:	lea    rsi,[rbx+0x8]
  40f623:	mov    rdi,r12
  40f626:	mov    DWORD PTR [rsp],eax
  40f629:	call   403360 <__sprintf_chk@plt+0x2070>
  40f62e:	mov    eax,DWORD PTR [rsp]
  40f631:	jmp    40f5d9 <__sprintf_chk@plt+0xe2e9>
  40f633:	nop    DWORD PTR [rax+rax*1+0x0]
  40f638:	cmp    QWORD PTR [rdx+0x10],0xffffffffffffffff
  40f63d:	jne    40f5a3 <__sprintf_chk@plt+0xe2b3>
  40f643:	cmp    DWORD PTR [rcx],0x5
  40f646:	jne    40f5a3 <__sprintf_chk@plt+0xe2b3>
  40f64c:	cmp    QWORD PTR [rbp+0x10],0xffffffffffffffff
  40f651:	jne    40f5a3 <__sprintf_chk@plt+0xe2b3>
  40f657:	lea    eax,[r15-0xc]
  40f65b:	vmovsd xmm2,QWORD PTR [rbx+0x8]
  40f660:	vmovsd xmm1,QWORD PTR [rbp+0x8]
  40f665:	cmp    eax,0x8
  40f668:	ja     40f778 <__sprintf_chk@plt+0xe488>
  40f66e:	lea    rdx,[rip+0x6cff]        # 416374 <__sprintf_chk@plt+0x15084>
  40f675:	movsxd rax,DWORD PTR [rdx+rax*4]
  40f679:	add    rax,rdx
  40f67c:	jmp    rax
  40f67e:	xchg   ax,ax
  40f680:	vmovapd xmm0,xmm2
  40f684:	call   4010d0 <pow@plt>
  40f689:	nop    DWORD PTR [rax+0x0]
  40f690:	vucomisd xmm0,xmm0
  40f694:	jnp    40f6d6 <__sprintf_chk@plt+0xe3e6>
  40f696:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f6a0:	mov    rsi,rbp
  40f6a3:	mov    rdi,r12
  40f6a6:	call   40f450 <__sprintf_chk@plt+0xe160>
  40f6ab:	mov    r13d,eax
  40f6ae:	mov    r14d,eax
  40f6b1:	shl    r13d,0xe
  40f6b5:	jmp    40f5b6 <__sprintf_chk@plt+0xe2c6>
  40f6ba:	nop    WORD PTR [rax+rax*1+0x0]
  40f6c0:	vucomisd xmm2,xmm2
  40f6c4:	jp     40f5b0 <__sprintf_chk@plt+0xe2c0>
  40f6ca:	vxorpd xmm2,xmm2,XMMWORD PTR [rip+0x7dae]        # 417480 <__sprintf_chk@plt+0x16190>
  40f6d2:	vmovapd xmm0,xmm2
  40f6d6:	vmovsd QWORD PTR [rbx+0x8],xmm0
  40f6db:	add    rsp,0x18
  40f6df:	pop    rbx
  40f6e0:	pop    rbp
  40f6e1:	pop    r12
  40f6e3:	pop    r13
  40f6e5:	pop    r14
  40f6e7:	pop    r15
  40f6e9:	ret    
  40f6ea:	nop    WORD PTR [rax+rax*1+0x0]
  40f6f0:	vucomisd xmm1,QWORD PTR [rip+0x7d68]        # 417460 <__sprintf_chk@plt+0x16170>
  40f6f8:	jp     40f6fc <__sprintf_chk@plt+0xe40c>
  40f6fa:	je     40f6a0 <__sprintf_chk@plt+0xe3b0>
  40f6fc:	vdivsd xmm0,xmm2,xmm1
  40f700:	vmovsd QWORD PTR [rsp+0x8],xmm1
  40f706:	vmovsd QWORD PTR [rsp],xmm2
  40f70b:	call   401260 <floor@plt>
  40f710:	vmovsd xmm2,QWORD PTR [rsp]
  40f715:	vmovsd xmm1,QWORD PTR [rsp+0x8]
  40f71b:	vfnmadd132sd xmm0,xmm2,xmm1
  40f720:	jmp    40f690 <__sprintf_chk@plt+0xe3a0>
  40f725:	nop    DWORD PTR [rax]
  40f728:	vucomisd xmm1,QWORD PTR [rip+0x7d30]        # 417460 <__sprintf_chk@plt+0x16170>
  40f730:	jp     40f738 <__sprintf_chk@plt+0xe448>
  40f732:	je     40f6a0 <__sprintf_chk@plt+0xe3b0>
  40f738:	vdivsd xmm0,xmm2,xmm1
  40f73c:	jmp    40f690 <__sprintf_chk@plt+0xe3a0>
  40f741:	nop    DWORD PTR [rax+0x0]
  40f748:	vmulsd xmm0,xmm2,xmm1
  40f74c:	jmp    40f690 <__sprintf_chk@plt+0xe3a0>
  40f751:	nop    DWORD PTR [rax+0x0]
  40f758:	vsubsd xmm0,xmm2,xmm1
  40f75c:	jmp    40f690 <__sprintf_chk@plt+0xe3a0>
  40f761:	nop    DWORD PTR [rax+0x0]
  40f768:	vaddsd xmm0,xmm2,xmm1
  40f76c:	jmp    40f690 <__sprintf_chk@plt+0xe3a0>
  40f771:	nop    DWORD PTR [rax+0x0]
  40f778:	vxorpd xmm0,xmm0,xmm0
  40f77c:	jmp    40f6d6 <__sprintf_chk@plt+0xe3e6>
  40f781:	nop    DWORD PTR [rax+0x0]
  40f788:	lea    rsi,[rbx+0x8]
  40f78c:	mov    rdi,r12
  40f78f:	mov    DWORD PTR [rsp],eax
  40f792:	call   403360 <__sprintf_chk@plt+0x2070>
  40f797:	mov    eax,DWORD PTR [rsp]
  40f79a:	jmp    40f5cf <__sprintf_chk@plt+0xe2df>
  40f79f:	nop
  40f7a0:	lea    rsi,[rbp+0x8]
  40f7a4:	mov    rdi,r12
  40f7a7:	mov    DWORD PTR [rsp],eax
  40f7aa:	call   403360 <__sprintf_chk@plt+0x2070>
  40f7af:	mov    eax,DWORD PTR [rsp]
  40f7b2:	jmp    40f5d9 <__sprintf_chk@plt+0xe2e9>
  40f7b7:	nop    WORD PTR [rax+rax*1+0x0]
  40f7c0:	lea    rsi,[rbp+0x8]
  40f7c4:	mov    rdi,r12
  40f7c7:	mov    DWORD PTR [rsp],eax
  40f7ca:	call   403360 <__sprintf_chk@plt+0x2070>
  40f7cf:	mov    eax,DWORD PTR [rsp]
  40f7d2:	jmp    40f61a <__sprintf_chk@plt+0xe32a>
  40f7d7:	nop    WORD PTR [rax+rax*1+0x0]
  40f7e0:	push   r15
  40f7e2:	push   r14
  40f7e4:	mov    r14d,esi
  40f7e7:	push   r13
  40f7e9:	push   r12
  40f7eb:	mov    r13,r8
  40f7ee:	push   rbp
  40f7ef:	push   rbx
  40f7f0:	mov    rsi,rcx
  40f7f3:	mov    rbp,rdi
  40f7f6:	mov    rbx,rcx
  40f7f9:	mov    r12d,edx
  40f7fc:	sub    rsp,0x8
  40f800:	call   40f450 <__sprintf_chk@plt+0xe160>
  40f805:	mov    rsi,r13
  40f808:	mov    rdi,rbp
  40f80b:	mov    r15d,eax
  40f80e:	call   40f450 <__sprintf_chk@plt+0xe160>
  40f813:	cmp    DWORD PTR [r13+0x0],0xc
  40f818:	mov    ecx,eax
  40f81a:	je     40f880 <__sprintf_chk@plt+0xe590>
  40f81c:	cmp    DWORD PTR [rbx],0xc
  40f81f:	je     40f870 <__sprintf_chk@plt+0xe580>
  40f821:	test   r12d,r12d
  40f824:	jne    40f860 <__sprintf_chk@plt+0xe570>
  40f826:	cmp    r14d,0x17
  40f82a:	je     40f860 <__sprintf_chk@plt+0xe570>
  40f82c:	mov    r12d,0x1
  40f832:	mov    r8d,r15d
  40f835:	mov    edx,r12d
  40f838:	mov    esi,r14d
  40f83b:	mov    rdi,rbp
  40f83e:	call   40f0e0 <__sprintf_chk@plt+0xddf0>
  40f843:	mov    DWORD PTR [rbx],0xa
  40f849:	mov    DWORD PTR [rbx+0x8],eax
  40f84c:	add    rsp,0x8
  40f850:	pop    rbx
  40f851:	pop    rbp
  40f852:	pop    r12
  40f854:	pop    r13
  40f856:	pop    r14
  40f858:	pop    r15
  40f85a:	ret    
  40f85b:	nop    DWORD PTR [rax+rax*1+0x0]
  40f860:	mov    eax,ecx
  40f862:	mov    ecx,r15d
  40f865:	mov    r15d,eax
  40f868:	jmp    40f832 <__sprintf_chk@plt+0xe542>
  40f86a:	nop    WORD PTR [rax+rax*1+0x0]
  40f870:	lea    rsi,[rbx+0x8]
  40f874:	mov    rdi,rbp
  40f877:	call   403360 <__sprintf_chk@plt+0x2070>
  40f87c:	jmp    40f821 <__sprintf_chk@plt+0xe531>
  40f87e:	xchg   ax,ax
  40f880:	lea    rsi,[r13+0x8]
  40f884:	mov    rdi,rbp
  40f887:	call   403360 <__sprintf_chk@plt+0x2070>
  40f88c:	jmp    40f81c <__sprintf_chk@plt+0xe52c>
  40f88e:	xchg   ax,ax
  40f890:	push   r12
  40f892:	push   rbp
  40f893:	mov    r12,rsi
  40f896:	push   rbx
  40f897:	mov    eax,DWORD PTR [rsi]
  40f899:	mov    rbp,rdi
  40f89c:	mov    rbx,rdx
  40f89f:	cmp    eax,0x7
  40f8a2:	je     40f960 <__sprintf_chk@plt+0xe670>
  40f8a8:	jbe    40f940 <__sprintf_chk@plt+0xe650>
  40f8ae:	cmp    eax,0x8
  40f8b1:	je     40f900 <__sprintf_chk@plt+0xe610>
  40f8b3:	cmp    eax,0x9
  40f8b6:	jne    40f8ed <__sprintf_chk@plt+0xe5fd>
  40f8b8:	mov    rsi,rdx
  40f8bb:	call   40f450 <__sprintf_chk@plt+0xe160>
  40f8c0:	mov    ecx,0x6
  40f8c5:	shlx   esi,DWORD PTR [r12+0x8],ecx
  40f8cc:	mov    ecx,DWORD PTR [r12+0xc]
  40f8d1:	mov    rdx,QWORD PTR [rbp+0x18]
  40f8d5:	shl    eax,0xe
  40f8d8:	mov    rdi,rbp
  40f8db:	shl    ecx,0x17
  40f8de:	or     esi,ecx
  40f8e0:	mov    edx,DWORD PTR [rdx+0x8]
  40f8e3:	or     esi,0x9
  40f8e6:	or     esi,eax
  40f8e8:	call   40e980 <__sprintf_chk@plt+0xd690>
  40f8ed:	cmp    DWORD PTR [rbx],0xc
  40f8f0:	je     40f92c <__sprintf_chk@plt+0xe63c>
  40f8f2:	pop    rbx
  40f8f3:	pop    rbp
  40f8f4:	pop    r12
  40f8f6:	ret    
  40f8f7:	nop    WORD PTR [rax+rax*1+0x0]
  40f900:	mov    rsi,rdx
  40f903:	call   40f3d0 <__sprintf_chk@plt+0xe0e0>
  40f908:	mov    rdx,QWORD PTR [rbp+0x18]
  40f90c:	mov    esi,DWORD PTR [r12+0x8]
  40f911:	shl    eax,0x6
  40f914:	mov    rdi,rbp
  40f917:	shl    esi,0xe
  40f91a:	mov    edx,DWORD PTR [rdx+0x8]
  40f91d:	or     esi,0x7
  40f920:	or     esi,eax
  40f922:	call   40e980 <__sprintf_chk@plt+0xd690>
  40f927:	cmp    DWORD PTR [rbx],0xc
  40f92a:	jne    40f8f2 <__sprintf_chk@plt+0xe602>
  40f92c:	lea    rsi,[rbx+0x8]
  40f930:	mov    rdi,rbp
  40f933:	pop    rbx
  40f934:	pop    rbp
  40f935:	pop    r12
  40f937:	jmp    403360 <__sprintf_chk@plt+0x2070>
  40f93c:	nop    DWORD PTR [rax+0x0]
  40f940:	cmp    eax,0x6
  40f943:	jne    40f8ed <__sprintf_chk@plt+0xe5fd>
  40f945:	cmp    DWORD PTR [rdx],0xc
  40f948:	je     40f990 <__sprintf_chk@plt+0xe6a0>
  40f94a:	mov    edx,DWORD PTR [r12+0x8]
  40f94f:	mov    rsi,rbx
  40f952:	mov    rdi,rbp
  40f955:	pop    rbx
  40f956:	pop    rbp
  40f957:	pop    r12
  40f959:	jmp    40f110 <__sprintf_chk@plt+0xde20>
  40f95e:	xchg   ax,ax
  40f960:	mov    rsi,rdx
  40f963:	call   40f3d0 <__sprintf_chk@plt+0xe0e0>
  40f968:	mov    rdx,QWORD PTR [rbp+0x18]
  40f96c:	mov    esi,DWORD PTR [r12+0x8]
  40f971:	shl    eax,0x6
  40f974:	mov    rdi,rbp
  40f977:	shl    esi,0x17
  40f97a:	mov    edx,DWORD PTR [rdx+0x8]
  40f97d:	or     esi,0x8
  40f980:	or     esi,eax
  40f982:	call   40e980 <__sprintf_chk@plt+0xd690>
  40f987:	jmp    40f8ed <__sprintf_chk@plt+0xe5fd>
  40f98c:	nop    DWORD PTR [rax+0x0]
  40f990:	lea    rsi,[rdx+0x8]
  40f994:	call   403360 <__sprintf_chk@plt+0x2070>
  40f999:	jmp    40f94a <__sprintf_chk@plt+0xe65a>
  40f99b:	nop    DWORD PTR [rax+rax*1+0x0]
  40f9a0:	cmp    esi,0xd
  40f9a3:	je     40fa10 <__sprintf_chk@plt+0xe720>
  40f9a5:	cmp    esi,0xe
  40f9a8:	je     40f9b0 <__sprintf_chk@plt+0xe6c0>
  40f9aa:	repz ret 
  40f9ac:	nop    DWORD PTR [rax+0x0]
  40f9b0:	push   rbx
  40f9b1:	mov    rax,QWORD PTR [rdi]
  40f9b4:	mov    rbx,rdi
  40f9b7:	mov    rdi,QWORD PTR [rax+0x18]
  40f9bb:	movsxd rax,DWORD PTR [rdx]
  40f9be:	lea    r8,[rdi+rax*4]
  40f9c2:	lea    eax,[rcx+0x1]
  40f9c5:	mov    esi,DWORD PTR [r8]
  40f9c8:	shl    eax,0x17
  40f9cb:	mov    ecx,eax
  40f9cd:	and    esi,0x7fffff
  40f9d3:	or     ecx,esi
  40f9d5:	mov    esi,0x1
  40f9da:	mov    DWORD PTR [r8],ecx
  40f9dd:	movsxd rax,DWORD PTR [rdx]
  40f9e0:	lea    rcx,[rdi+rax*4]
  40f9e4:	mov    eax,0x6
  40f9e9:	shlx   eax,DWORD PTR [rbx+0x3c],eax
  40f9ef:	mov    rdi,rbx
  40f9f2:	mov    edx,DWORD PTR [rcx]
  40f9f4:	and    eax,0x3fc0
  40f9f9:	and    edx,0xffffc03f
  40f9ff:	or     eax,edx
  40fa01:	mov    DWORD PTR [rcx],eax
  40fa03:	call   40f340 <__sprintf_chk@plt+0xe050>
  40fa08:	add    DWORD PTR [rbx+0x3c],0x1
  40fa0c:	pop    rbx
  40fa0d:	ret    
  40fa0e:	xchg   ax,ax
  40fa10:	mov    rax,QWORD PTR [rdi]
  40fa13:	movsxd rdx,DWORD PTR [rdx]
  40fa16:	add    ecx,0x1
  40fa19:	shl    ecx,0xe
  40fa1c:	and    ecx,0x7fc000
  40fa22:	mov    rax,QWORD PTR [rax+0x18]
  40fa26:	lea    rdx,[rax+rdx*4]
  40fa2a:	mov    eax,DWORD PTR [rdx]
  40fa2c:	and    eax,0xff803fff
  40fa31:	or     ecx,eax
  40fa33:	mov    DWORD PTR [rdx],ecx
  40fa35:	ret    
  40fa36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fa40:	push   r12
  40fa42:	push   rbp
  40fa43:	mov    rbp,rdi
  40fa46:	push   rbx
  40fa47:	mov    ebx,esi
  40fa49:	mov    esi,DWORD PTR [rcx]
  40fa4b:	sub    ebx,edx
  40fa4d:	lea    eax,[rsi-0xd]
  40fa50:	cmp    eax,0x1
  40fa53:	jbe    40fa80 <__sprintf_chk@plt+0xe790>
  40fa55:	test   esi,esi
  40fa57:	jne    40fab0 <__sprintf_chk@plt+0xe7c0>
  40fa59:	test   ebx,ebx
  40fa5b:	jle    40faa8 <__sprintf_chk@plt+0xe7b8>
  40fa5d:	mov    r12d,DWORD PTR [rbp+0x3c]
  40fa61:	mov    esi,ebx
  40fa63:	mov    rdi,rbp
  40fa66:	call   40f340 <__sprintf_chk@plt+0xe050>
  40fa6b:	add    DWORD PTR [rbp+0x3c],ebx
  40fa6e:	mov    edx,ebx
  40fa70:	mov    rdi,rbp
  40fa73:	pop    rbx
  40fa74:	mov    esi,r12d
  40fa77:	pop    rbp
  40fa78:	pop    r12
  40fa7a:	jmp    40eb70 <__sprintf_chk@plt+0xd880>
  40fa7f:	nop
  40fa80:	mov    r12d,ebx
  40fa83:	lea    rdx,[rcx+0x8]
  40fa87:	add    r12d,0x1
  40fa8b:	js     40fac0 <__sprintf_chk@plt+0xe7d0>
  40fa8d:	mov    ecx,r12d
  40fa90:	call   40f9a0 <__sprintf_chk@plt+0xe6b0>
  40fa95:	cmp    r12d,0x1
  40fa99:	jle    40faa8 <__sprintf_chk@plt+0xe7b8>
  40fa9b:	mov    esi,ebx
  40fa9d:	mov    rdi,rbp
  40faa0:	call   40f340 <__sprintf_chk@plt+0xe050>
  40faa5:	add    DWORD PTR [rbp+0x3c],ebx
  40faa8:	pop    rbx
  40faa9:	pop    rbp
  40faaa:	pop    r12
  40faac:	ret    
  40faad:	nop    DWORD PTR [rax]
  40fab0:	mov    rsi,rcx
  40fab3:	call   40f380 <__sprintf_chk@plt+0xe090>
  40fab8:	jmp    40fa59 <__sprintf_chk@plt+0xe769>
  40faba:	nop    WORD PTR [rax+rax*1+0x0]
  40fac0:	pop    rbx
  40fac1:	pop    rbp
  40fac2:	pop    r12
  40fac4:	xor    ecx,ecx
  40fac6:	jmp    40f9a0 <__sprintf_chk@plt+0xe6b0>
  40facb:	nop    DWORD PTR [rax+rax*1+0x0]
  40fad0:	push   r12
  40fad2:	push   rbp
  40fad3:	mov    r12d,edx
  40fad6:	push   rbx
  40fad7:	mov    eax,DWORD PTR [rsi]
  40fad9:	mov    rbx,rdi
  40fadc:	mov    rbp,rsi
  40fadf:	cmp    eax,0xb
  40fae2:	je     40fb00 <__sprintf_chk@plt+0xe810>
  40fae4:	cmp    eax,0xc
  40fae7:	jne    40fb18 <__sprintf_chk@plt+0xe828>
  40fae9:	lea    rsi,[rbp+0x8]
  40faed:	mov    rdi,rbx
  40faf0:	call   403360 <__sprintf_chk@plt+0x2070>
  40faf5:	jmp    40fb3f <__sprintf_chk@plt+0xe84f>
  40faf7:	nop    WORD PTR [rax+rax*1+0x0]
  40fb00:	mov    rax,QWORD PTR [rdi]
  40fb03:	movsxd rdx,DWORD PTR [rsi+0x8]
  40fb07:	mov    rax,QWORD PTR [rax+0x18]
  40fb0b:	mov    edx,DWORD PTR [rax+rdx*4]
  40fb0e:	mov    eax,edx
  40fb10:	and    eax,0x3f
  40fb13:	cmp    eax,0x13
  40fb16:	je     40fb60 <__sprintf_chk@plt+0xe870>
  40fb18:	mov    esi,0x1
  40fb1d:	mov    rdi,rbx
  40fb20:	call   40f340 <__sprintf_chk@plt+0xe050>
  40fb25:	mov    edx,DWORD PTR [rbx+0x3c]
  40fb28:	mov    rsi,rbp
  40fb2b:	mov    rdi,rbx
  40fb2e:	lea    eax,[rdx+0x1]
  40fb31:	mov    DWORD PTR [rbx+0x3c],eax
  40fb34:	call   40ec10 <__sprintf_chk@plt+0xd920>
  40fb39:	cmp    DWORD PTR [rbp+0x0],0xc
  40fb3d:	je     40fae9 <__sprintf_chk@plt+0xe7f9>
  40fb3f:	mov    ecx,DWORD PTR [rbp+0x8]
  40fb42:	mov    r8d,r12d
  40fb45:	mov    edx,0xff
  40fb4a:	mov    esi,0x1b
  40fb4f:	mov    rdi,rbx
  40fb52:	pop    rbx
  40fb53:	pop    rbp
  40fb54:	pop    r12
  40fb56:	jmp    40f0e0 <__sprintf_chk@plt+0xddf0>
  40fb5b:	nop    DWORD PTR [rax+rax*1+0x0]
  40fb60:	xor    r8d,r8d
  40fb63:	sub    DWORD PTR [rdi+0x30],0x1
  40fb67:	test   r12d,r12d
  40fb6a:	sete   r8b
  40fb6e:	mov    esi,0x1a
  40fb73:	shr    edx,0x17
  40fb76:	xor    ecx,ecx
  40fb78:	jmp    40fb4f <__sprintf_chk@plt+0xe85f>
  40fb7a:	nop    WORD PTR [rax+rax*1+0x0]
  40fb80:	push   rbp
  40fb81:	push   rbx
  40fb82:	mov    rbp,rsi
  40fb85:	mov    rbx,rdi
  40fb88:	sub    rsp,0x8
  40fb8c:	call   40ea50 <__sprintf_chk@plt+0xd760>
  40fb91:	mov    eax,DWORD PTR [rbp+0x0]
  40fb94:	cmp    eax,0x5
  40fb97:	ja     40fbe0 <__sprintf_chk@plt+0xe8f0>
  40fb99:	cmp    eax,0x4
  40fb9c:	jae    40fba3 <__sprintf_chk@plt+0xe8b3>
  40fb9e:	cmp    eax,0x2
  40fba1:	jne    40fbf8 <__sprintf_chk@plt+0xe908>
  40fba3:	mov    edx,0xffffffff
  40fba8:	lea    rsi,[rbp+0x14]
  40fbac:	mov    rdi,rbx
  40fbaf:	call   40f000 <__sprintf_chk@plt+0xdd10>
  40fbb4:	mov    eax,DWORD PTR [rbx+0x30]
  40fbb7:	mov    edx,DWORD PTR [rbp+0x10]
  40fbba:	lea    rsi,[rbx+0x38]
  40fbbe:	mov    rdi,rbx
  40fbc1:	mov    DWORD PTR [rbx+0x34],eax
  40fbc4:	call   40f000 <__sprintf_chk@plt+0xdd10>
  40fbc9:	mov    DWORD PTR [rbp+0x10],0xffffffff
  40fbd0:	add    rsp,0x8
  40fbd4:	pop    rbx
  40fbd5:	pop    rbp
  40fbd6:	ret    
  40fbd7:	nop    WORD PTR [rax+rax*1+0x0]
  40fbe0:	cmp    eax,0xa
  40fbe3:	jne    40fbf8 <__sprintf_chk@plt+0xe908>
  40fbe5:	mov    esi,DWORD PTR [rbp+0x8]
  40fbe8:	mov    rdi,rbx
  40fbeb:	call   402ad0 <__sprintf_chk@plt+0x17e0>
  40fbf0:	mov    edx,DWORD PTR [rbp+0x8]
  40fbf3:	jmp    40fba8 <__sprintf_chk@plt+0xe8b8>
  40fbf5:	nop    DWORD PTR [rax]
  40fbf8:	xor    edx,edx
  40fbfa:	mov    rsi,rbp
  40fbfd:	mov    rdi,rbx
  40fc00:	call   40fad0 <__sprintf_chk@plt+0xe7e0>
  40fc05:	mov    edx,eax
  40fc07:	jmp    40fba8 <__sprintf_chk@plt+0xe8b8>
  40fc09:	nop    DWORD PTR [rax+0x0]
  40fc10:	push   rbp
  40fc11:	push   rbx
  40fc12:	sub    rsp,0x8
  40fc16:	mov    rbp,QWORD PTR [rdi+0x30]
  40fc1a:	mov    rbx,QWORD PTR [rbp+0x28]
  40fc1e:	test   rbx,rbx
  40fc21:	je     40fc44 <__sprintf_chk@plt+0xe954>
  40fc23:	cmp    BYTE PTR [rbx+0xe],0x0
  40fc27:	jne    40fc75 <__sprintf_chk@plt+0xe985>
  40fc29:	xor    eax,eax
  40fc2b:	jmp    40fc36 <__sprintf_chk@plt+0xe946>
  40fc2d:	nop    DWORD PTR [rax]
  40fc30:	cmp    BYTE PTR [rbx+0xe],0x0
  40fc34:	jne    40fc58 <__sprintf_chk@plt+0xe968>
  40fc36:	movzx  edx,BYTE PTR [rbx+0xd]
  40fc3a:	mov    rbx,QWORD PTR [rbx]
  40fc3d:	or     eax,edx
  40fc3f:	test   rbx,rbx
  40fc42:	jne    40fc30 <__sprintf_chk@plt+0xe940>
  40fc44:	mov    edx,DWORD PTR [rdi+0x10]
  40fc47:	lea    rsi,[rip+0x6fd4]        # 416c22 <__sprintf_chk@plt+0x15932>
  40fc4e:	call   40e6e0 <__sprintf_chk@plt+0xd3f0>
  40fc53:	nop    DWORD PTR [rax+rax*1+0x0]
  40fc58:	test   eax,eax
  40fc5a:	je     40fc75 <__sprintf_chk@plt+0xe985>
  40fc5c:	mov    rax,QWORD PTR [rbp+0x18]
  40fc60:	movzx  esi,BYTE PTR [rbx+0xc]
  40fc64:	mov    rdi,rbp
  40fc67:	mov    edx,DWORD PTR [rax+0x8]
  40fc6a:	shl    esi,0x6
  40fc6d:	or     esi,0x23
  40fc70:	call   40e980 <__sprintf_chk@plt+0xd690>
  40fc75:	mov    rdi,rbp
  40fc78:	call   40f070 <__sprintf_chk@plt+0xdd80>
  40fc7d:	add    rsp,0x8
  40fc81:	lea    rsi,[rbx+0x8]
  40fc85:	mov    rdi,rbp
  40fc88:	pop    rbx
  40fc89:	pop    rbp
  40fc8a:	mov    edx,eax
  40fc8c:	jmp    40f000 <__sprintf_chk@plt+0xdd10>
  40fc91:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40fc9c:	nop    DWORD PTR [rax+0x0]
  40fca0:	push   r12
  40fca2:	push   rbp
  40fca3:	mov    ebp,esi
  40fca5:	push   rbx
  40fca6:	mov    rbx,QWORD PTR [rdi+0x48]
  40fcaa:	mov    rcx,QWORD PTR [rbx+0x8]
  40fcae:	mov    rdx,QWORD PTR [rbx+0x10]
  40fcb2:	lea    rsi,[rcx+0x1]
  40fcb6:	cmp    rsi,rdx
  40fcb9:	jbe    40fd00 <__sprintf_chk@plt+0xea10>
  40fcbb:	movabs rax,0x7ffffffffffffffd
  40fcc5:	cmp    rdx,rax
  40fcc8:	ja     40fd10 <__sprintf_chk@plt+0xea20>
  40fcca:	lea    r12,[rdx+rdx*1]
  40fcce:	mov    rsi,QWORD PTR [rbx]
  40fcd1:	mov    rdi,QWORD PTR [rdi+0x38]
  40fcd5:	mov    rcx,r12
  40fcd8:	call   403450 <__sprintf_chk@plt+0x2160>
  40fcdd:	mov    rcx,QWORD PTR [rbx+0x8]
  40fce1:	mov    QWORD PTR [rbx],rax
  40fce4:	mov    QWORD PTR [rbx+0x10],r12
  40fce8:	lea    rsi,[rcx+0x1]
  40fcec:	mov    QWORD PTR [rbx+0x8],rsi
  40fcf0:	mov    BYTE PTR [rax+rcx*1],bpl
  40fcf4:	pop    rbx
  40fcf5:	pop    rbp
  40fcf6:	pop    r12
  40fcf8:	ret    
  40fcf9:	nop    DWORD PTR [rax+0x0]
  40fd00:	mov    rax,QWORD PTR [rbx]
  40fd03:	mov    QWORD PTR [rbx+0x8],rsi
  40fd07:	mov    BYTE PTR [rax+rcx*1],bpl
  40fd0b:	pop    rbx
  40fd0c:	pop    rbp
  40fd0d:	pop    r12
  40fd0f:	ret    
  40fd10:	lea    rsi,[rip+0x6f1c]        # 416c33 <__sprintf_chk@plt+0x15943>
  40fd17:	xor    edx,edx
  40fd19:	call   40e6e0 <__sprintf_chk@plt+0xd3f0>
  40fd1e:	xchg   ax,ax
  40fd20:	push   r12
  40fd22:	push   rbp
  40fd23:	push   rbx
  40fd24:	mov    r12d,DWORD PTR [rdi]
  40fd27:	mov    rbx,rdi
  40fd2a:	mov    esi,r12d
  40fd2d:	call   40fca0 <__sprintf_chk@plt+0xe9b0>
  40fd32:	mov    rdi,QWORD PTR [rbx+0x40]
  40fd36:	mov    rax,QWORD PTR [rdi]
  40fd39:	lea    rdx,[rax-0x1]
  40fd3d:	test   rax,rax
  40fd40:	mov    QWORD PTR [rdi],rdx
  40fd43:	je     40fdc0 <__sprintf_chk@plt+0xead0>
  40fd45:	mov    rax,QWORD PTR [rdi+0x8]
  40fd49:	lea    rdx,[rax+0x1]
  40fd4d:	mov    QWORD PTR [rdi+0x8],rdx
  40fd51:	movzx  eax,BYTE PTR [rax]
  40fd54:	xor    ebp,ebp
  40fd56:	cmp    eax,0x3d
  40fd59:	mov    DWORD PTR [rbx],eax
  40fd5b:	je     40fd79 <__sprintf_chk@plt+0xea89>
  40fd5d:	jmp    40fda8 <__sprintf_chk@plt+0xeab8>
  40fd5f:	nop
  40fd60:	mov    rax,QWORD PTR [rdi+0x8]
  40fd64:	add    ebp,0x1
  40fd67:	lea    rdx,[rax+0x1]
  40fd6b:	mov    QWORD PTR [rdi+0x8],rdx
  40fd6f:	movzx  eax,BYTE PTR [rax]
  40fd72:	cmp    eax,0x3d
  40fd75:	mov    DWORD PTR [rbx],eax
  40fd77:	jne    40fda8 <__sprintf_chk@plt+0xeab8>
  40fd79:	mov    rdi,rbx
  40fd7c:	mov    esi,0x3d
  40fd81:	call   40fca0 <__sprintf_chk@plt+0xe9b0>
  40fd86:	mov    rdi,QWORD PTR [rbx+0x40]
  40fd8a:	mov    rax,QWORD PTR [rdi]
  40fd8d:	lea    rdx,[rax-0x1]
  40fd91:	test   rax,rax
  40fd94:	mov    QWORD PTR [rdi],rdx
  40fd97:	jne    40fd60 <__sprintf_chk@plt+0xea70>
  40fd99:	call   401c50 <__sprintf_chk@plt+0x960>
  40fd9e:	add    ebp,0x1
  40fda1:	cmp    eax,0x3d
  40fda4:	mov    DWORD PTR [rbx],eax
  40fda6:	je     40fd79 <__sprintf_chk@plt+0xea89>
  40fda8:	mov    edx,ebp
  40fdaa:	cmp    r12d,eax
  40fdad:	not    edx
  40fdaf:	cmovne ebp,edx
  40fdb2:	mov    eax,ebp
  40fdb4:	pop    rbx
  40fdb5:	pop    rbp
  40fdb6:	pop    r12
  40fdb8:	ret    
  40fdb9:	nop    DWORD PTR [rax+0x0]
  40fdc0:	call   401c50 <__sprintf_chk@plt+0x960>
  40fdc5:	jmp    40fd54 <__sprintf_chk@plt+0xea64>
  40fdc7:	nop    WORD PTR [rax+rax*1+0x0]
  40fdd0:	push   rbp
  40fdd1:	push   rbx
  40fdd2:	mov    rbx,rdi
  40fdd5:	mov    rdi,rsi
  40fdd8:	sub    rsp,0x8
  40fddc:	mov    ebp,DWORD PTR [rbx]
  40fdde:	mov    esi,ebp
  40fde0:	call   401110 <strchr@plt>
  40fde5:	xor    edx,edx
  40fde7:	test   rax,rax
  40fdea:	je     40fe1f <__sprintf_chk@plt+0xeb2f>
  40fdec:	mov    rdi,rbx
  40fdef:	mov    esi,ebp
  40fdf1:	call   40fca0 <__sprintf_chk@plt+0xe9b0>
  40fdf6:	mov    rdi,QWORD PTR [rbx+0x40]
  40fdfa:	mov    rax,QWORD PTR [rdi]
  40fdfd:	lea    rdx,[rax-0x1]
  40fe01:	test   rax,rax
  40fe04:	mov    QWORD PTR [rdi],rdx
  40fe07:	je     40fe30 <__sprintf_chk@plt+0xeb40>
  40fe09:	mov    rax,QWORD PTR [rdi+0x8]
  40fe0d:	lea    rdx,[rax+0x1]
  40fe11:	mov    QWORD PTR [rdi+0x8],rdx
  40fe15:	movzx  eax,BYTE PTR [rax]
  40fe18:	mov    DWORD PTR [rbx],eax
  40fe1a:	mov    edx,0x1
  40fe1f:	add    rsp,0x8
  40fe23:	mov    eax,edx
  40fe25:	pop    rbx
  40fe26:	pop    rbp
  40fe27:	ret    
  40fe28:	nop    DWORD PTR [rax+rax*1+0x0]
  40fe30:	call   401c50 <__sprintf_chk@plt+0x960>
  40fe35:	jmp    40fe18 <__sprintf_chk@plt+0xeb28>
  40fe37:	nop    WORD PTR [rax+rax*1+0x0]
  40fe40:	push   r12
  40fe42:	push   rbp
  40fe43:	mov    r12,rsi
  40fe46:	push   rbx
  40fe47:	mov    rbx,rdi
  40fe4a:	sub    rsp,0x10
  40fe4e:	mov    esi,DWORD PTR [rdi]
  40fe50:	mov    DWORD PTR [rsp+0xc],esi
  40fe54:	call   4012e0 <__ctype_b_loc@plt>
  40fe59:	mov    esi,DWORD PTR [rsp+0xc]
  40fe5d:	mov    rbp,rax
  40fe60:	mov    rdi,rbx
  40fe63:	call   40fca0 <__sprintf_chk@plt+0xe9b0>
  40fe68:	mov    rdi,QWORD PTR [rbx+0x40]
  40fe6c:	mov    rax,QWORD PTR [rdi]
  40fe6f:	lea    rdx,[rax-0x1]
  40fe73:	test   rax,rax
  40fe76:	mov    QWORD PTR [rdi],rdx
  40fe79:	je     40ff20 <__sprintf_chk@plt+0xec30>
  40fe7f:	mov    rax,QWORD PTR [rdi+0x8]
  40fe83:	lea    rdx,[rax+0x1]
  40fe87:	mov    QWORD PTR [rdi+0x8],rdx
  40fe8b:	movzx  esi,BYTE PTR [rax]
  40fe8e:	mov    rdx,QWORD PTR [rbp+0x0]
  40fe92:	movsxd rax,esi
  40fe95:	mov    DWORD PTR [rbx],esi
  40fe97:	test   BYTE PTR [rdx+rax*2+0x1],0x8
  40fe9c:	jne    40fe60 <__sprintf_chk@plt+0xeb70>
  40fe9e:	cmp    esi,0x2e
  40fea1:	je     40fe60 <__sprintf_chk@plt+0xeb70>
  40fea3:	lea    rsi,[rip+0x6da2]        # 416c4c <__sprintf_chk@plt+0x1595c>
  40feaa:	mov    rdi,rbx
  40fead:	call   40fdd0 <__sprintf_chk@plt+0xeae0>
  40feb2:	test   eax,eax
  40feb4:	jne    40ffa8 <__sprintf_chk@plt+0xecb8>
  40feba:	movsxd rdx,DWORD PTR [rbx]
  40febd:	mov    rax,QWORD PTR [rbp+0x0]
  40fec1:	test   BYTE PTR [rax+rdx*2],0x8
  40fec5:	mov    rsi,rdx
  40fec8:	je     40feee <__sprintf_chk@plt+0xebfe>
  40feca:	jmp    40fef3 <__sprintf_chk@plt+0xec03>
  40fecc:	nop    DWORD PTR [rax+0x0]
  40fed0:	mov    rax,QWORD PTR [rdi+0x8]
  40fed4:	lea    rdx,[rax+0x1]
  40fed8:	mov    QWORD PTR [rdi+0x8],rdx
  40fedc:	movzx  esi,BYTE PTR [rax]
  40fedf:	mov    rdx,QWORD PTR [rbp+0x0]
  40fee3:	movsxd rax,esi
  40fee6:	mov    DWORD PTR [rbx],esi
  40fee8:	test   BYTE PTR [rdx+rax*2],0x8
  40feec:	jne    40fef3 <__sprintf_chk@plt+0xec03>
  40feee:	cmp    esi,0x5f
  40fef1:	jne    40ff30 <__sprintf_chk@plt+0xec40>
  40fef3:	mov    rdi,rbx
  40fef6:	call   40fca0 <__sprintf_chk@plt+0xe9b0>
  40fefb:	mov    rdi,QWORD PTR [rbx+0x40]
  40feff:	mov    rax,QWORD PTR [rdi]
  40ff02:	lea    rdx,[rax-0x1]
  40ff06:	test   rax,rax
  40ff09:	mov    QWORD PTR [rdi],rdx
  40ff0c:	jne    40fed0 <__sprintf_chk@plt+0xebe0>
  40ff0e:	call   401c50 <__sprintf_chk@plt+0x960>
  40ff13:	mov    esi,eax
  40ff15:	jmp    40fedf <__sprintf_chk@plt+0xebef>
  40ff17:	nop    WORD PTR [rax+rax*1+0x0]
  40ff20:	call   401c50 <__sprintf_chk@plt+0x960>
  40ff25:	mov    esi,eax
  40ff27:	jmp    40fe8e <__sprintf_chk@plt+0xeb9e>
  40ff2c:	nop    DWORD PTR [rax+0x0]
  40ff30:	xor    esi,esi
  40ff32:	mov    rdi,rbx
  40ff35:	call   40fca0 <__sprintf_chk@plt+0xe9b0>
  40ff3a:	mov    rdx,QWORD PTR [rbx+0x48]
  40ff3e:	movzx  ecx,BYTE PTR [rbx+0x58]
  40ff42:	mov    rax,QWORD PTR [rdx+0x8]
  40ff46:	mov    rdx,QWORD PTR [rdx]
  40ff49:	nop    DWORD PTR [rax+0x0]
  40ff50:	sub    rax,0x1
  40ff54:	cmp    rax,0xffffffffffffffff
  40ff58:	je     40ff6d <__sprintf_chk@plt+0xec7d>
  40ff5a:	cmp    BYTE PTR [rdx+rax*1],0x2e
  40ff5e:	jne    40ff50 <__sprintf_chk@plt+0xec60>
  40ff60:	mov    BYTE PTR [rdx+rax*1],cl
  40ff63:	sub    rax,0x1
  40ff67:	cmp    rax,0xffffffffffffffff
  40ff6b:	jne    40ff5a <__sprintf_chk@plt+0xec6a>
  40ff6d:	mov    rax,QWORD PTR [rbx+0x48]
  40ff71:	mov    rsi,r12
  40ff74:	mov    rdi,QWORD PTR [rax]
  40ff77:	call   401e40 <__sprintf_chk@plt+0xb50>
  40ff7c:	test   eax,eax
  40ff7e:	je     40ff90 <__sprintf_chk@plt+0xeca0>
  40ff80:	add    rsp,0x10
  40ff84:	pop    rbx
  40ff85:	pop    rbp
  40ff86:	pop    r12
  40ff88:	ret    
  40ff89:	nop    DWORD PTR [rax+0x0]
  40ff90:	lea    rsi,[rip+0x6cbb]        # 416c52 <__sprintf_chk@plt+0x15962>
  40ff97:	mov    edx,0x11c
  40ff9c:	mov    rdi,rbx
  40ff9f:	call   40e6e0 <__sprintf_chk@plt+0xd3f0>
  40ffa4:	nop    DWORD PTR [rax+0x0]
  40ffa8:	lea    rsi,[rip+0x6ca0]        # 416c4f <__sprintf_chk@plt+0x1595f>
  40ffaf:	mov    rdi,rbx
  40ffb2:	call   40fdd0 <__sprintf_chk@plt+0xeae0>
  40ffb7:	jmp    40feba <__sprintf_chk@plt+0xebca>
  40ffbc:	nop    DWORD PTR [rax+0x0]
  40ffc0:	push   rbx
  40ffc1:	mov    rax,QWORD PTR [rdi]
  40ffc4:	mov    rbx,rdi
  40ffc7:	mov    rdi,QWORD PTR [rdi+0x20]
  40ffcb:	mov    eax,DWORD PTR [rax+0x60]
  40ffce:	test   eax,eax
  40ffd0:	je     40fff5 <__sprintf_chk@plt+0xed05>
  40ffd2:	mov    ecx,esi
  40ffd4:	lea    rsi,[rip+0x732d]        # 417308 <__sprintf_chk@plt+0x16018>
  40ffdb:	mov    r8,rdx
  40ffde:	mov    edx,eax
  40ffe0:	xor    eax,eax
  40ffe2:	call   407220 <__sprintf_chk@plt+0x5f30>
  40ffe7:	mov    rdi,QWORD PTR [rbx+0x18]
  40ffeb:	xor    edx,edx
  40ffed:	mov    rsi,rax
  40fff0:	call   40e6e0 <__sprintf_chk@plt+0xd3f0>
  40fff5:	mov    rcx,rdx
  40fff8:	mov    edx,esi
  40fffa:	lea    rsi,[rip+0x72df]        # 4172e0 <__sprintf_chk@plt+0x15ff0>
  410001:	call   407220 <__sprintf_chk@plt+0x5f30>
  410006:	jmp    40ffe7 <__sprintf_chk@plt+0xecf7>
  410008:	nop    DWORD PTR [rax+rax*1+0x0]
  410010:	push   r15
  410012:	push   r14
  410014:	push   r13
  410016:	push   r12
  410018:	push   rbp
  410019:	push   rbx
  41001a:	sub    rsp,0x8
  41001e:	mov    rbp,QWORD PTR [rdi+0x30]
  410022:	movzx  ebx,BYTE PTR [rbp+0x4a]
  410026:	add    ebx,edx
  410028:	cmp    ebx,0xc7
  41002e:	jg     4100c0 <__sprintf_chk@plt+0xedd0>
  410034:	mov    r12,QWORD PTR [rbp+0x0]
  410038:	movsx  eax,WORD PTR [rbp+0x48]
  41003c:	mov    r13,rdi
  41003f:	mov    r14,rsi
  410042:	mov    r15d,DWORD PTR [r12+0x5c]
  410047:	mov    ecx,eax
  410049:	cmp    r15d,eax
  41004c:	jle    4100d8 <__sprintf_chk@plt+0xede8>
  410052:	mov    rax,QWORD PTR [r12+0x30]
  410057:	movsx  rdx,cx
  41005b:	shl    rdx,0x4
  41005f:	mov    QWORD PTR [rax+rdx*1],r14
  410063:	test   BYTE PTR [r14+0x9],0x3
  410068:	je     41009b <__sprintf_chk@plt+0xedab>
  41006a:	movzx  eax,BYTE PTR [r12+0x9]
  410070:	test   al,0x4
  410072:	je     41009b <__sprintf_chk@plt+0xedab>
  410074:	mov    rdx,QWORD PTR [r13+0x38]
  410078:	mov    rdi,QWORD PTR [rdx+0x20]
  41007c:	cmp    BYTE PTR [rdi+0x21],0x1
  410080:	je     410149 <__sprintf_chk@plt+0xee59>
  410086:	movzx  edx,BYTE PTR [rdi+0x20]
  41008a:	and    eax,0xfffffff8
  41008d:	and    edx,0x3
  410090:	or     eax,edx
  410092:	mov    BYTE PTR [r12+0x9],al
  410097:	movzx  ecx,WORD PTR [rbp+0x48]
  41009b:	lea    eax,[rcx+0x1]
  41009e:	movsxd rbx,ebx
  4100a1:	mov    WORD PTR [rbp+0x48],ax
  4100a5:	mov    WORD PTR [rbp+rbx*2+0xc4],cx
  4100ad:	add    rsp,0x8
  4100b1:	pop    rbx
  4100b2:	pop    rbp
  4100b3:	pop    r12
  4100b5:	pop    r13
  4100b7:	pop    r14
  4100b9:	pop    r15
  4100bb:	ret    
  4100bc:	nop    DWORD PTR [rax+0x0]
  4100c0:	lea    rdx,[rip+0x6ba5]        # 416c6c <__sprintf_chk@plt+0x1597c>
  4100c7:	mov    esi,0xc8
  4100cc:	mov    rdi,rbp
  4100cf:	call   40ffc0 <__sprintf_chk@plt+0xecd0>
  4100d4:	nop    DWORD PTR [rax+0x0]
  4100d8:	mov    rsi,QWORD PTR [r12+0x30]
  4100dd:	mov    rdi,QWORD PTR [rdi+0x38]
  4100e1:	lea    rdx,[r12+0x5c]
  4100e6:	lea    r9,[rip+0x6b76]        # 416c63 <__sprintf_chk@plt+0x15973>
  4100ed:	mov    r8d,0x7fff
  4100f3:	mov    ecx,0x10
  4100f8:	call   408620 <__sprintf_chk@plt+0x7330>
  4100fd:	mov    edx,DWORD PTR [r12+0x5c]
  410102:	mov    QWORD PTR [r12+0x30],rax
  410107:	cmp    edx,r15d
  41010a:	jle    410140 <__sprintf_chk@plt+0xee50>
  41010c:	sub    edx,0x1
  41010f:	movsxd rsi,r15d
  410112:	sub    edx,r15d
  410115:	mov    rcx,rsi
  410118:	lea    rsi,[rsi+rdx*1+0x1]
  41011d:	shl    rcx,0x4
  410121:	add    rcx,rax
  410124:	shl    rsi,0x4
  410128:	add    rsi,rax
  41012b:	nop    DWORD PTR [rax+rax*1+0x0]
  410130:	mov    QWORD PTR [rcx],0x0
  410137:	add    rcx,0x10
  41013b:	cmp    rsi,rcx
  41013e:	jne    410130 <__sprintf_chk@plt+0xee40>
  410140:	movzx  ecx,WORD PTR [rbp+0x48]
  410144:	jmp    410057 <__sprintf_chk@plt+0xed67>
  410149:	mov    rsi,r14
  41014c:	call   401a50 <__sprintf_chk@plt+0x760>
  410151:	movzx  ecx,WORD PTR [rbp+0x48]
  410155:	jmp    41009b <__sprintf_chk@plt+0xedab>
  41015a:	nop    WORD PTR [rax+rax*1+0x0]
  410160:	test   rdi,rdi
  410163:	je     4102b0 <__sprintf_chk@plt+0xefc0>
  410169:	movzx  eax,BYTE PTR [rdi+0x4a]
  41016d:	lea    r9d,[rax-0x1]
  410171:	cmp    r9d,0xffffffff
  410175:	je     4101d3 <__sprintf_chk@plt+0xeee3>
  410177:	mov    r8,QWORD PTR [rdi]
  41017a:	mov    r10,QWORD PTR [r8+0x30]
  41017e:	movsxd r8,r9d
  410181:	movzx  r8d,WORD PTR [rdi+r8*2+0xc4]
  41018a:	shl    r8,0x4
  41018e:	cmp    rsi,QWORD PTR [r10+r8*1]
  410192:	je     410260 <__sprintf_chk@plt+0xef70>
  410198:	sub    eax,0x2
  41019b:	mov    r9d,r9d
  41019e:	cdqe   
  4101a0:	mov    r11,rax
  4101a3:	sub    r11,r9
  4101a6:	jmp    4101cb <__sprintf_chk@plt+0xeedb>
  4101a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4101b0:	movzx  r8d,WORD PTR [rdi+rax*2+0xc4]
  4101b9:	sub    rax,0x1
  4101bd:	shl    r8,0x4
  4101c1:	cmp    rsi,QWORD PTR [r10+r8*1]
  4101c5:	je     410260 <__sprintf_chk@plt+0xef70>
  4101cb:	cmp    rax,r11
  4101ce:	mov    r9d,eax
  4101d1:	jne    4101b0 <__sprintf_chk@plt+0xeec0>
  4101d3:	push   r14
  4101d5:	push   r13
  4101d7:	xor    ecx,ecx
  4101d9:	push   r12
  4101db:	push   rbp
  4101dc:	mov    rbp,rdi
  4101df:	push   rbx
  4101e0:	mov    rdi,QWORD PTR [rdi+0x10]
  4101e4:	mov    rbx,rdx
  4101e7:	mov    r12,rsi
  4101ea:	call   410160 <__sprintf_chk@plt+0xee70>
  4101ef:	cmp    eax,0x8
  4101f2:	je     410250 <__sprintf_chk@plt+0xef60>
  4101f4:	mov    r14,QWORD PTR [rbp+0x0]
  4101f8:	movzx  r9d,BYTE PTR [r14+0x70]
  4101fd:	test   r9d,r9d
  410200:	mov    r8,r9
  410203:	je     4102d7 <__sprintf_chk@plt+0xefe7>
  410209:	lea    ecx,[r9-0x1]
  41020d:	mov    edi,DWORD PTR [rbx]
  41020f:	xor    eax,eax
  410211:	add    rcx,0x1
  410215:	jmp    41022d <__sprintf_chk@plt+0xef3d>
  410217:	nop    WORD PTR [rax+rax*1+0x0]
  410220:	add    rax,0x1
  410224:	cmp    rcx,rax
  410227:	je     4102d1 <__sprintf_chk@plt+0xefe1>
  41022d:	movzx  edx,BYTE PTR [rbp+rax*2+0x4b]
  410232:	mov    esi,eax
  410234:	cmp    edx,edi
  410236:	jne    410220 <__sprintf_chk@plt+0xef30>
  410238:	movzx  edx,BYTE PTR [rbp+rax*2+0x4c]
  41023d:	cmp    edx,DWORD PTR [rbx+0x8]
  410240:	jne    410220 <__sprintf_chk@plt+0xef30>
  410242:	mov    DWORD PTR [rbx+0x8],esi
  410245:	mov    DWORD PTR [rbx],0x7
  41024b:	mov    eax,0x7
  410250:	pop    rbx
  410251:	pop    rbp
  410252:	pop    r12
  410254:	pop    r13
  410256:	pop    r14
  410258:	ret    
  410259:	nop    DWORD PTR [rax+0x0]
  410260:	test   ecx,ecx
  410262:	mov    DWORD PTR [rdx+0x10],0xffffffff
  410269:	mov    DWORD PTR [rdx+0x14],0xffffffff
  410270:	mov    DWORD PTR [rdx],0x6
  410276:	mov    DWORD PTR [rdx+0x8],r9d
  41027a:	jne    4102a5 <__sprintf_chk@plt+0xefb5>
  41027c:	mov    rax,QWORD PTR [rdi+0x28]
  410280:	test   rax,rax
  410283:	jne    410298 <__sprintf_chk@plt+0xefa8>
  410285:	jmp    4102a5 <__sprintf_chk@plt+0xefb5>
  410287:	nop    WORD PTR [rax+rax*1+0x0]
  410290:	mov    rax,QWORD PTR [rax]
  410293:	test   rax,rax
  410296:	je     4102a5 <__sprintf_chk@plt+0xefb5>
  410298:	movzx  edx,BYTE PTR [rax+0xc]
  41029c:	cmp    edx,r9d
  41029f:	jg     410290 <__sprintf_chk@plt+0xefa0>
  4102a1:	mov    BYTE PTR [rax+0xd],0x1
  4102a5:	mov    eax,0x6
  4102aa:	ret    
  4102ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4102b0:	mov    DWORD PTR [rdx+0x10],0xffffffff
  4102b7:	mov    DWORD PTR [rdx+0x14],0xffffffff
  4102be:	mov    eax,0x8
  4102c3:	mov    DWORD PTR [rdx],0x8
  4102c9:	mov    DWORD PTR [rdx+0x8],0xff
  4102d0:	ret    
  4102d1:	cmp    r9d,0x3c
  4102d5:	je     410342 <__sprintf_chk@plt+0xf052>
  4102d7:	mov    r13d,DWORD PTR [r14+0x48]
  4102db:	cmp    r13d,r9d
  4102de:	jle    410356 <__sprintf_chk@plt+0xf066>
  4102e0:	mov    rax,QWORD PTR [r14+0x38]
  4102e4:	mov    QWORD PTR [rax+r8*8],r12
  4102e8:	test   BYTE PTR [r12+0x9],0x3
  4102ee:	je     41031b <__sprintf_chk@plt+0xf02b>
  4102f0:	movzx  eax,BYTE PTR [r14+0x9]
  4102f5:	test   al,0x4
  4102f7:	je     41031b <__sprintf_chk@plt+0xf02b>
  4102f9:	mov    rdx,QWORD PTR [rbp+0x20]
  4102fd:	mov    rdi,QWORD PTR [rdx+0x20]
  410301:	cmp    BYTE PTR [rdi+0x21],0x1
  410305:	je     4103aa <__sprintf_chk@plt+0xf0ba>
  41030b:	movzx  edx,BYTE PTR [rdi+0x20]
  41030f:	and    eax,0xfffffff8
  410312:	and    edx,0x3
  410315:	or     eax,edx
  410317:	mov    BYTE PTR [r14+0x9],al
  41031b:	movzx  esi,BYTE PTR [r14+0x70]
  410320:	mov    ecx,DWORD PTR [rbx]
  410322:	movzx  edx,sil
  410326:	mov    eax,esi
  410328:	lea    rdx,[rbp+rdx*2+0x0]
  41032d:	add    eax,0x1
  410330:	mov    BYTE PTR [rdx+0x4b],cl
  410333:	mov    ecx,DWORD PTR [rbx+0x8]
  410336:	mov    BYTE PTR [rdx+0x4c],cl
  410339:	mov    BYTE PTR [r14+0x70],al
  41033d:	jmp    410242 <__sprintf_chk@plt+0xef52>
  410342:	lea    rdx,[rip+0x6933]        # 416c7c <__sprintf_chk@plt+0x1598c>
  410349:	mov    esi,0x3c
  41034e:	mov    rdi,rbp
  410351:	call   40ffc0 <__sprintf_chk@plt+0xecd0>
  410356:	mov    rsi,QWORD PTR [r14+0x38]
  41035a:	mov    rdi,QWORD PTR [rbp+0x20]
  41035e:	lea    rdx,[r14+0x48]
  410362:	lea    r9,[rip+0x6ad1]        # 416e3a <__sprintf_chk@plt+0x15b4a>
  410369:	mov    ecx,0x8
  41036e:	mov    r8d,0x7ffffffd
  410374:	call   408620 <__sprintf_chk@plt+0x7330>
  410379:	mov    ecx,DWORD PTR [r14+0x48]
  41037d:	mov    QWORD PTR [r14+0x38],rax
  410381:	cmp    r13d,ecx
  410384:	jge    4103a0 <__sprintf_chk@plt+0xf0b0>
  410386:	movsxd rdx,r13d
  410389:	nop    DWORD PTR [rax+0x0]
  410390:	mov    QWORD PTR [rax+rdx*8],0x0
  410398:	add    rdx,0x1
  41039c:	cmp    ecx,edx
  41039e:	jg     410390 <__sprintf_chk@plt+0xf0a0>
  4103a0:	movzx  r8d,BYTE PTR [r14+0x70]
  4103a5:	jmp    4102e4 <__sprintf_chk@plt+0xeff4>
  4103aa:	mov    rsi,r12
  4103ad:	call   401a50 <__sprintf_chk@plt+0x760>
  4103b2:	jmp    41031b <__sprintf_chk@plt+0xf02b>
  4103b7:	nop    WORD PTR [rax+rax*1+0x0]
  4103c0:	push   rbx
  4103c1:	mov    rbx,rdi
  4103c4:	lea    rdi,[rdi+0x38]
  4103c8:	call   4072e0 <__sprintf_chk@plt+0x5ff0>
  4103cd:	mov    rdi,QWORD PTR [rbx+0x38]
  4103d1:	lea    rsi,[rip+0x68ad]        # 416c85 <__sprintf_chk@plt+0x15995>
  4103d8:	mov    rdx,rax
  4103db:	xor    eax,eax
  4103dd:	call   407220 <__sprintf_chk@plt+0x5f30>
  4103e2:	mov    edx,DWORD PTR [rbx+0x10]
  4103e5:	mov    rsi,rax
  4103e8:	mov    rdi,rbx
  4103eb:	call   40e6e0 <__sprintf_chk@plt+0xd3f0>
  4103f0:	push   r13
  4103f2:	push   r12
  4103f4:	mov    r13d,edx
  4103f7:	push   rbp
  4103f8:	push   rbx
  4103f9:	mov    rbp,rsi
  4103fc:	mov    rbx,rdi
  4103ff:	sub    rsp,0x8
  410403:	mov    esi,DWORD PTR [rdi]
  410405:	call   40fca0 <__sprintf_chk@plt+0xe9b0>
  41040a:	mov    rdi,QWORD PTR [rbx+0x40]
  41040e:	mov    rax,QWORD PTR [rdi]
  410411:	lea    rdx,[rax-0x1]
  410415:	test   rax,rax
  410418:	mov    QWORD PTR [rdi],rdx
  41041b:	je     41059e <__sprintf_chk@plt+0xf2ae>
  410421:	mov    rax,QWORD PTR [rdi+0x8]
  410425:	lea    rdx,[rax+0x1]
  410429:	mov    QWORD PTR [rdi+0x8],rdx
  41042d:	movzx  esi,BYTE PTR [rax]
  410430:	cmp    esi,0xa
  410433:	mov    DWORD PTR [rbx],esi
  410435:	je     4105b0 <__sprintf_chk@plt+0xf2c0>
  41043b:	cmp    esi,0xd
  41043e:	je     4105b0 <__sprintf_chk@plt+0xf2c0>
  410444:	nop    DWORD PTR [rax+0x0]
  410448:	cmp    esi,0xa
  41044b:	je     410478 <__sprintf_chk@plt+0xf188>
  41044d:	jle    410520 <__sprintf_chk@plt+0xf230>
  410453:	cmp    esi,0xd
  410456:	je     410478 <__sprintf_chk@plt+0xf188>
  410458:	cmp    esi,0x5d
  41045b:	jne    410550 <__sprintf_chk@plt+0xf260>
  410461:	mov    rdi,rbx
  410464:	call   40fd20 <__sprintf_chk@plt+0xea30>
  410469:	cmp    eax,r13d
  41046c:	mov    r12d,eax
  41046f:	je     4104a8 <__sprintf_chk@plt+0xf1b8>
  410471:	mov    esi,DWORD PTR [rbx]
  410473:	cmp    esi,0xa
  410476:	jne    41044d <__sprintf_chk@plt+0xf15d>
  410478:	mov    esi,0xa
  41047d:	mov    rdi,rbx
  410480:	call   40fca0 <__sprintf_chk@plt+0xe9b0>
  410485:	mov    rdi,rbx
  410488:	call   40e790 <__sprintf_chk@plt+0xd4a0>
  41048d:	test   rbp,rbp
  410490:	jne    410471 <__sprintf_chk@plt+0xf181>
  410492:	mov    rax,QWORD PTR [rbx+0x48]
  410496:	mov    esi,DWORD PTR [rbx]
  410498:	mov    QWORD PTR [rax+0x8],0x0
  4104a0:	jmp    410448 <__sprintf_chk@plt+0xf158>
  4104a2:	nop    WORD PTR [rax+rax*1+0x0]
  4104a8:	mov    esi,DWORD PTR [rbx]
  4104aa:	mov    rdi,rbx
  4104ad:	call   40fca0 <__sprintf_chk@plt+0xe9b0>
  4104b2:	mov    rdi,QWORD PTR [rbx+0x40]
  4104b6:	mov    rax,QWORD PTR [rdi]
  4104b9:	lea    rdx,[rax-0x1]
  4104bd:	test   rax,rax
  4104c0:	mov    QWORD PTR [rdi],rdx
  4104c3:	je     4105bf <__sprintf_chk@plt+0xf2cf>
  4104c9:	mov    rax,QWORD PTR [rdi+0x8]
  4104cd:	lea    rdx,[rax+0x1]
  4104d1:	mov    QWORD PTR [rdi+0x8],rdx
  4104d5:	movzx  eax,BYTE PTR [rax]
  4104d8:	test   rbp,rbp
  4104db:	mov    DWORD PTR [rbx],eax
  4104dd:	je     41050e <__sprintf_chk@plt+0xf21e>
  4104df:	mov    rdx,QWORD PTR [rbx+0x48]
  4104e3:	add    r12d,0x2
  4104e7:	mov    rsi,QWORD PTR [rbx+0x38]
  4104eb:	lea    eax,[r12+r12*1]
  4104ef:	movsxd r12,r12d
  4104f2:	lea    rdi,[rbx+0x30]
  4104f6:	add    r12,QWORD PTR [rdx]
  4104f9:	mov    rcx,QWORD PTR [rdx+0x8]
  4104fd:	cdqe   
  4104ff:	sub    rcx,rax
  410502:	mov    rdx,r12
  410505:	call   40b780 <__sprintf_chk@plt+0xa490>
  41050a:	mov    QWORD PTR [rbp+0x0],rax
  41050e:	add    rsp,0x8
  410512:	pop    rbx
  410513:	pop    rbp
  410514:	pop    r12
  410516:	pop    r13
  410518:	ret    
  410519:	nop    DWORD PTR [rax+0x0]
  410520:	cmp    esi,0xffffffff
  410523:	jne    410550 <__sprintf_chk@plt+0xf260>
  410525:	lea    rax,[rip+0x6767]        # 416c93 <__sprintf_chk@plt+0x159a3>
  41052c:	lea    rsi,[rip+0x6777]        # 416caa <__sprintf_chk@plt+0x159ba>
  410533:	test   rbp,rbp
  410536:	mov    edx,0x11f
  41053b:	mov    rdi,rbx
  41053e:	cmovne rsi,rax
  410542:	call   40e6e0 <__sprintf_chk@plt+0xd3f0>
  410547:	nop    WORD PTR [rax+rax*1+0x0]
  410550:	test   rbp,rbp
  410553:	je     41055d <__sprintf_chk@plt+0xf26d>
  410555:	mov    rdi,rbx
  410558:	call   40fca0 <__sprintf_chk@plt+0xe9b0>
  41055d:	mov    rdi,QWORD PTR [rbx+0x40]
  410561:	mov    rax,QWORD PTR [rdi]
  410564:	lea    rdx,[rax-0x1]
  410568:	test   rax,rax
  41056b:	mov    QWORD PTR [rdi],rdx
  41056e:	je     410590 <__sprintf_chk@plt+0xf2a0>
  410570:	mov    rax,QWORD PTR [rdi+0x8]
  410574:	lea    rdx,[rax+0x1]
  410578:	mov    QWORD PTR [rdi+0x8],rdx
  41057c:	movzx  esi,BYTE PTR [rax]
  41057f:	mov    DWORD PTR [rbx],esi
  410581:	jmp    410448 <__sprintf_chk@plt+0xf158>
  410586:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410590:	call   401c50 <__sprintf_chk@plt+0x960>
  410595:	mov    esi,eax
  410597:	mov    DWORD PTR [rbx],esi
  410599:	jmp    410448 <__sprintf_chk@plt+0xf158>
  41059e:	call   401c50 <__sprintf_chk@plt+0x960>
  4105a3:	mov    esi,eax
  4105a5:	cmp    esi,0xa
  4105a8:	mov    DWORD PTR [rbx],esi
  4105aa:	jne    41043b <__sprintf_chk@plt+0xf14b>
  4105b0:	mov    rdi,rbx
  4105b3:	call   40e790 <__sprintf_chk@plt+0xd4a0>
  4105b8:	mov    esi,DWORD PTR [rbx]
  4105ba:	jmp    410448 <__sprintf_chk@plt+0xf158>
  4105bf:	call   401c50 <__sprintf_chk@plt+0x960>
  4105c4:	jmp    4104d8 <__sprintf_chk@plt+0xf1e8>
  4105c9:	nop    DWORD PTR [rax+0x0]
  4105d0:	push   r15
  4105d2:	push   r14
  4105d4:	push   r13
  4105d6:	push   r12
  4105d8:	mov    r13d,0x4801
  4105de:	push   rbp
  4105df:	push   rbx
  4105e0:	mov    rbp,rdi
  4105e3:	mov    r12,rsi
  4105e6:	sub    rsp,0x18
  4105ea:	mov    rax,QWORD PTR [rdi+0x48]
  4105ee:	mov    ebx,DWORD PTR [rdi]
  4105f0:	mov    QWORD PTR [rax+0x8],0x0
  4105f8:	cmp    ebx,0x2d
  4105fb:	je     4107f8 <__sprintf_chk@plt+0xf508>
  410601:	jle    4106c8 <__sprintf_chk@plt+0xf3d8>
  410607:	cmp    ebx,0x3d
  41060a:	je     410a30 <__sprintf_chk@plt+0xf740>
  410610:	jle    410678 <__sprintf_chk@plt+0xf388>
  410612:	cmp    ebx,0x5b
  410615:	je     410a00 <__sprintf_chk@plt+0xf710>
  41061b:	cmp    ebx,0x7e
  41061e:	je     410770 <__sprintf_chk@plt+0xf480>
  410624:	cmp    ebx,0x3e
  410627:	je     410aa8 <__sprintf_chk@plt+0xf7b8>
  41062d:	call   4012e0 <__ctype_b_loc@plt>
  410632:	mov    r14,rax
  410635:	movsxd rax,ebx
  410638:	mov    rdx,QWORD PTR [r14]
  41063b:	movzx  eax,WORD PTR [rdx+rax*2]
  41063f:	test   ah,0x20
  410642:	je     410b30 <__sprintf_chk@plt+0xf840>
  410648:	mov    rdi,QWORD PTR [rbp+0x40]
  41064c:	mov    rax,QWORD PTR [rdi]
  41064f:	lea    rdx,[rax-0x1]
  410653:	test   rax,rax
  410656:	mov    QWORD PTR [rdi],rdx
  410659:	je     410c00 <__sprintf_chk@plt+0xf910>
  41065f:	mov    rax,QWORD PTR [rdi+0x8]
  410663:	lea    rdx,[rax+0x1]
  410667:	mov    QWORD PTR [rdi+0x8],rdx
  41066b:	movzx  ebx,BYTE PTR [rax]
  41066e:	mov    DWORD PTR [rbp+0x0],ebx
  410671:	jmp    4105f8 <__sprintf_chk@plt+0xf308>
  410673:	nop    DWORD PTR [rax+rax*1+0x0]
  410678:	cmp    ebx,0x2e
  41067b:	je     4106f0 <__sprintf_chk@plt+0xf400>
  41067d:	cmp    ebx,0x3c
  410680:	jne    41062d <__sprintf_chk@plt+0xf33d>
  410682:	mov    rdi,QWORD PTR [rbp+0x40]
  410686:	mov    rax,QWORD PTR [rdi]
  410689:	lea    rdx,[rax-0x1]
  41068d:	test   rax,rax
  410690:	mov    QWORD PTR [rdi],rdx
  410693:	je     410cd0 <__sprintf_chk@plt+0xf9e0>
  410699:	mov    rax,QWORD PTR [rdi+0x8]
  41069d:	lea    rdx,[rax+0x1]
  4106a1:	mov    QWORD PTR [rdi+0x8],rdx
  4106a5:	movzx  eax,BYTE PTR [rax]
  4106a8:	cmp    eax,0x3d
  4106ab:	mov    DWORD PTR [rbp+0x0],eax
  4106ae:	je     410cf0 <__sprintf_chk@plt+0xfa00>
  4106b4:	add    rsp,0x18
  4106b8:	mov    eax,ebx
  4106ba:	pop    rbx
  4106bb:	pop    rbp
  4106bc:	pop    r12
  4106be:	pop    r13
  4106c0:	pop    r14
  4106c2:	pop    r15
  4106c4:	ret    
  4106c5:	nop    DWORD PTR [rax]
  4106c8:	cmp    ebx,0xd
  4106cb:	je     4107e1 <__sprintf_chk@plt+0xf4f1>
  4106d1:	jg     4108a8 <__sprintf_chk@plt+0xf5b8>
  4106d7:	cmp    ebx,0xffffffff
  4106da:	jne    4107d8 <__sprintf_chk@plt+0xf4e8>
  4106e0:	mov    ebx,0x11f
  4106e5:	jmp    4106b4 <__sprintf_chk@plt+0xf3c4>
  4106e7:	nop    WORD PTR [rax+rax*1+0x0]
  4106f0:	mov    rdi,rbp
  4106f3:	mov    esi,0x2e
  4106f8:	call   40fca0 <__sprintf_chk@plt+0xe9b0>
  4106fd:	mov    rdi,QWORD PTR [rbp+0x40]
  410701:	mov    rax,QWORD PTR [rdi]
  410704:	lea    rdx,[rax-0x1]
  410708:	test   rax,rax
  41070b:	mov    QWORD PTR [rdi],rdx
  41070e:	je     410cc0 <__sprintf_chk@plt+0xf9d0>
  410714:	mov    rax,QWORD PTR [rdi+0x8]
  410718:	lea    rdx,[rax+0x1]
  41071c:	mov    QWORD PTR [rdi+0x8],rdx
  410720:	movzx  eax,BYTE PTR [rax]
  410723:	lea    rsi,[rip+0x68a6]        # 416fd0 <__sprintf_chk@plt+0x15ce0>
  41072a:	mov    DWORD PTR [rbp+0x0],eax
  41072d:	mov    rdi,rbp
  410730:	call   40fdd0 <__sprintf_chk@plt+0xeae0>
  410735:	test   eax,eax
  410737:	jne    410c98 <__sprintf_chk@plt+0xf9a8>
  41073d:	call   4012e0 <__ctype_b_loc@plt>
  410742:	movsxd rdx,DWORD PTR [rbp+0x0]
  410746:	mov    rax,QWORD PTR [rax]
  410749:	test   BYTE PTR [rax+rdx*2+0x1],0x8
  41074e:	je     4106b4 <__sprintf_chk@plt+0xf3c4>
  410754:	mov    rsi,r12
  410757:	mov    rdi,rbp
  41075a:	mov    ebx,0x11c
  41075f:	call   40fe40 <__sprintf_chk@plt+0xeb50>
  410764:	jmp    4106b4 <__sprintf_chk@plt+0xf3c4>
  410769:	nop    DWORD PTR [rax+0x0]
  410770:	mov    rdi,QWORD PTR [rbp+0x40]
  410774:	mov    rax,QWORD PTR [rdi]
  410777:	lea    rdx,[rax-0x1]
  41077b:	test   rax,rax
  41077e:	mov    QWORD PTR [rdi],rdx
  410781:	je     410c88 <__sprintf_chk@plt+0xf998>
  410787:	mov    rax,QWORD PTR [rdi+0x8]
  41078b:	lea    rdx,[rax+0x1]
  41078f:	mov    QWORD PTR [rdi+0x8],rdx
  410793:	movzx  eax,BYTE PTR [rax]
  410796:	cmp    eax,0x3d
  410799:	mov    DWORD PTR [rbp+0x0],eax
  41079c:	jne    4106b4 <__sprintf_chk@plt+0xf3c4>
  4107a2:	mov    rdi,QWORD PTR [rbp+0x40]
  4107a6:	mov    rax,QWORD PTR [rdi]
  4107a9:	lea    rdx,[rax-0x1]
  4107ad:	test   rax,rax
  4107b0:	mov    QWORD PTR [rdi],rdx
  4107b3:	je     410e0b <__sprintf_chk@plt+0xfb1b>
  4107b9:	mov    rax,QWORD PTR [rdi+0x8]
  4107bd:	lea    rdx,[rax+0x1]
  4107c1:	mov    QWORD PTR [rdi+0x8],rdx
  4107c5:	movzx  eax,BYTE PTR [rax]
  4107c8:	mov    DWORD PTR [rbp+0x0],eax
  4107cb:	mov    ebx,0x11b
  4107d0:	jmp    4106b4 <__sprintf_chk@plt+0xf3c4>
  4107d5:	nop    DWORD PTR [rax]
  4107d8:	cmp    ebx,0xa
  4107db:	jne    41062d <__sprintf_chk@plt+0xf33d>
  4107e1:	mov    rdi,rbp
  4107e4:	call   40e790 <__sprintf_chk@plt+0xd4a0>
  4107e9:	mov    ebx,DWORD PTR [rbp+0x0]
  4107ec:	cmp    ebx,0x2d
  4107ef:	jne    410601 <__sprintf_chk@plt+0xf311>
  4107f5:	nop    DWORD PTR [rax]
  4107f8:	mov    rdi,QWORD PTR [rbp+0x40]
  4107fc:	mov    rax,QWORD PTR [rdi]
  4107ff:	lea    rdx,[rax-0x1]
  410803:	test   rax,rax
  410806:	mov    QWORD PTR [rdi],rdx
  410809:	je     410c68 <__sprintf_chk@plt+0xf978>
  41080f:	mov    rax,QWORD PTR [rdi+0x8]
  410813:	lea    rdx,[rax+0x1]
  410817:	mov    QWORD PTR [rdi+0x8],rdx
  41081b:	movzx  eax,BYTE PTR [rax]
  41081e:	cmp    eax,0x2d
  410821:	mov    DWORD PTR [rbp+0x0],eax
  410824:	jne    4106b4 <__sprintf_chk@plt+0xf3c4>
  41082a:	mov    rdi,QWORD PTR [rbp+0x40]
  41082e:	mov    rax,QWORD PTR [rdi]
  410831:	lea    rdx,[rax-0x1]
  410835:	test   rax,rax
  410838:	mov    QWORD PTR [rdi],rdx
  41083b:	je     410ce0 <__sprintf_chk@plt+0xf9f0>
  410841:	mov    rax,QWORD PTR [rdi+0x8]
  410845:	lea    rdx,[rax+0x1]
  410849:	mov    QWORD PTR [rdi+0x8],rdx
  41084d:	movzx  ebx,BYTE PTR [rax]
  410850:	cmp    ebx,0x5b
  410853:	mov    DWORD PTR [rbp+0x0],ebx
  410856:	je     410dc0 <__sprintf_chk@plt+0xfad0>
  41085c:	nop    DWORD PTR [rax+0x0]
  410860:	lea    eax,[rbx+0x1]
  410863:	cmp    eax,0xe
  410866:	ja     410878 <__sprintf_chk@plt+0xf588>
  410868:	bt     r13,rax
  41086c:	jb     4105f8 <__sprintf_chk@plt+0xf308>
  410872:	nop    WORD PTR [rax+rax*1+0x0]
  410878:	mov    rdi,QWORD PTR [rbp+0x40]
  41087c:	mov    rax,QWORD PTR [rdi]
  41087f:	lea    rdx,[rax-0x1]
  410883:	test   rax,rax
  410886:	mov    QWORD PTR [rdi],rdx
  410889:	je     410a98 <__sprintf_chk@plt+0xf7a8>
  41088f:	mov    rax,QWORD PTR [rdi+0x8]
  410893:	lea    rdx,[rax+0x1]
  410897:	mov    QWORD PTR [rdi+0x8],rdx
  41089b:	movzx  ebx,BYTE PTR [rax]
  41089e:	mov    DWORD PTR [rbp+0x0],ebx
  4108a1:	jmp    410860 <__sprintf_chk@plt+0xf570>
  4108a3:	nop    DWORD PTR [rax+rax*1+0x0]
  4108a8:	cmp    ebx,0x22
  4108ab:	je     4108b6 <__sprintf_chk@plt+0xf5c6>
  4108ad:	cmp    ebx,0x27
  4108b0:	jne    41062d <__sprintf_chk@plt+0xf33d>
  4108b6:	mov    esi,ebx
  4108b8:	mov    rdi,rbp
  4108bb:	call   40fca0 <__sprintf_chk@plt+0xe9b0>
  4108c0:	mov    rdi,QWORD PTR [rbp+0x40]
  4108c4:	mov    rax,QWORD PTR [rdi]
  4108c7:	lea    rdx,[rax-0x1]
  4108cb:	test   rax,rax
  4108ce:	mov    QWORD PTR [rdi],rdx
  4108d1:	je     410b78 <__sprintf_chk@plt+0xf888>
  4108d7:	mov    rax,QWORD PTR [rdi+0x8]
  4108db:	lea    rdx,[rax+0x1]
  4108df:	mov    QWORD PTR [rdi+0x8],rdx
  4108e3:	movzx  esi,BYTE PTR [rax]
  4108e6:	mov    DWORD PTR [rbp+0x0],esi
  4108e9:	cmp    esi,ebx
  4108eb:	je     410d28 <__sprintf_chk@plt+0xfa38>
  4108f1:	cmp    esi,0xa
  4108f4:	je     410c20 <__sprintf_chk@plt+0xf930>
  4108fa:	jle    410b10 <__sprintf_chk@plt+0xf820>
  410900:	cmp    esi,0xd
  410903:	je     410c20 <__sprintf_chk@plt+0xf930>
  410909:	cmp    esi,0x5c
  41090c:	jne    4108b8 <__sprintf_chk@plt+0xf5c8>
  41090e:	mov    rdi,QWORD PTR [rbp+0x40]
  410912:	mov    rax,QWORD PTR [rdi]
  410915:	lea    rdx,[rax-0x1]
  410919:	test   rax,rax
  41091c:	mov    QWORD PTR [rdi],rdx
  41091f:	je     410de0 <__sprintf_chk@plt+0xfaf0>
  410925:	mov    rax,QWORD PTR [rdi+0x8]
  410929:	lea    rdx,[rax+0x1]
  41092d:	mov    QWORD PTR [rdi+0x8],rdx
  410931:	movzx  r13d,BYTE PTR [rax]
  410935:	cmp    r13d,0x62
  410939:	mov    DWORD PTR [rbp+0x0],r13d
  41093d:	je     410e89 <__sprintf_chk@plt+0xfb99>
  410943:	jle    410d90 <__sprintf_chk@plt+0xfaa0>
  410949:	cmp    r13d,0x72
  41094d:	je     410e93 <__sprintf_chk@plt+0xfba3>
  410953:	jg     410ded <__sprintf_chk@plt+0xfafd>
  410959:	cmp    r13d,0x66
  41095d:	je     410e9d <__sprintf_chk@plt+0xfbad>
  410963:	cmp    r13d,0x6e
  410967:	mov    esi,0xa
  41096c:	je     4108b8 <__sprintf_chk@plt+0xf5c8>
  410972:	call   4012e0 <__ctype_b_loc@plt>
  410977:	mov    rcx,rax
  41097a:	movsxd rax,r13d
  41097d:	xor    r14d,r14d
  410980:	mov    rdx,QWORD PTR [rcx]
  410983:	mov    r15d,0x3
  410989:	test   BYTE PTR [rdx+rax*2+0x1],0x8
  41098e:	je     410ed2 <__sprintf_chk@plt+0xfbe2>
  410994:	mov    rdi,QWORD PTR [rbp+0x40]
  410998:	lea    eax,[r14+r14*4]
  41099c:	lea    r14d,[r13+rax*2-0x30]
  4109a1:	mov    rax,QWORD PTR [rdi]
  4109a4:	lea    rdx,[rax-0x1]
  4109a8:	test   rax,rax
  4109ab:	mov    QWORD PTR [rdi],rdx
  4109ae:	je     410ebb <__sprintf_chk@plt+0xfbcb>
  4109b4:	mov    rax,QWORD PTR [rdi+0x8]
  4109b8:	lea    rdx,[rax+0x1]
  4109bc:	mov    QWORD PTR [rdi+0x8],rdx
  4109c0:	movzx  r13d,BYTE PTR [rax]
  4109c4:	sub    r15d,0x1
  4109c8:	mov    DWORD PTR [rbp+0x0],r13d
  4109cc:	je     4109db <__sprintf_chk@plt+0xf6eb>
  4109ce:	mov    rdx,QWORD PTR [rcx]
  4109d1:	movsxd rax,r13d
  4109d4:	test   BYTE PTR [rdx+rax*2+0x1],0x8
  4109d9:	jne    410994 <__sprintf_chk@plt+0xf6a4>
  4109db:	cmp    r14d,0xff
  4109e2:	jg     410eda <__sprintf_chk@plt+0xfbea>
  4109e8:	mov    esi,r14d
  4109eb:	mov    rdi,rbp
  4109ee:	call   40fca0 <__sprintf_chk@plt+0xe9b0>
  4109f3:	mov    esi,DWORD PTR [rbp+0x0]
  4109f6:	jmp    4108e9 <__sprintf_chk@plt+0xf5f9>
  4109fb:	nop    DWORD PTR [rax+rax*1+0x0]
  410a00:	mov    rdi,rbp
  410a03:	call   40fd20 <__sprintf_chk@plt+0xea30>
  410a08:	test   eax,eax
  410a0a:	js     410c38 <__sprintf_chk@plt+0xf948>
  410a10:	mov    edx,eax
  410a12:	mov    rsi,r12
  410a15:	mov    rdi,rbp
  410a18:	call   4103f0 <__sprintf_chk@plt+0xf100>
  410a1d:	mov    ebx,0x11e
  410a22:	jmp    4106b4 <__sprintf_chk@plt+0xf3c4>
  410a27:	nop    WORD PTR [rax+rax*1+0x0]
  410a30:	mov    rdi,QWORD PTR [rbp+0x40]
  410a34:	mov    rax,QWORD PTR [rdi]
  410a37:	lea    rdx,[rax-0x1]
  410a3b:	test   rax,rax
  410a3e:	mov    QWORD PTR [rdi],rdx
  410a41:	je     410c58 <__sprintf_chk@plt+0xf968>
  410a47:	mov    rax,QWORD PTR [rdi+0x8]
  410a4b:	lea    rdx,[rax+0x1]
  410a4f:	mov    QWORD PTR [rdi+0x8],rdx
  410a53:	movzx  eax,BYTE PTR [rax]
  410a56:	cmp    eax,0x3d
  410a59:	mov    DWORD PTR [rbp+0x0],eax
  410a5c:	jne    4106b4 <__sprintf_chk@plt+0xf3c4>
  410a62:	mov    rdi,QWORD PTR [rbp+0x40]
  410a66:	mov    rax,QWORD PTR [rdi]
  410a69:	lea    rdx,[rax-0x1]
  410a6d:	test   rax,rax
  410a70:	mov    QWORD PTR [rdi],rdx
  410a73:	je     410e29 <__sprintf_chk@plt+0xfb39>
  410a79:	mov    rax,QWORD PTR [rdi+0x8]
  410a7d:	lea    rdx,[rax+0x1]
  410a81:	mov    QWORD PTR [rdi+0x8],rdx
  410a85:	movzx  eax,BYTE PTR [rax]
  410a88:	mov    DWORD PTR [rbp+0x0],eax
  410a8b:	mov    ebx,0x118
  410a90:	jmp    4106b4 <__sprintf_chk@plt+0xf3c4>
  410a95:	nop    DWORD PTR [rax]
  410a98:	call   401c50 <__sprintf_chk@plt+0x960>
  410a9d:	mov    ebx,eax
  410a9f:	jmp    41089e <__sprintf_chk@plt+0xf5ae>
  410aa4:	nop    DWORD PTR [rax+0x0]
  410aa8:	mov    rdi,QWORD PTR [rbp+0x40]
  410aac:	mov    rax,QWORD PTR [rdi]
  410aaf:	lea    rdx,[rax-0x1]
  410ab3:	test   rax,rax
  410ab6:	mov    QWORD PTR [rdi],rdx
  410ab9:	je     410c78 <__sprintf_chk@plt+0xf988>
  410abf:	mov    rax,QWORD PTR [rdi+0x8]
  410ac3:	lea    rdx,[rax+0x1]
  410ac7:	mov    QWORD PTR [rdi+0x8],rdx
  410acb:	movzx  eax,BYTE PTR [rax]
  410ace:	cmp    eax,0x3d
  410ad1:	mov    DWORD PTR [rbp+0x0],eax
  410ad4:	jne    4106b4 <__sprintf_chk@plt+0xf3c4>
  410ada:	mov    rdi,QWORD PTR [rbp+0x40]
  410ade:	mov    rax,QWORD PTR [rdi]
  410ae1:	lea    rdx,[rax-0x1]
  410ae5:	test   rax,rax
  410ae8:	mov    QWORD PTR [rdi],rdx
  410aeb:	je     410e15 <__sprintf_chk@plt+0xfb25>
  410af1:	mov    rax,QWORD PTR [rdi+0x8]
  410af5:	lea    rdx,[rax+0x1]
  410af9:	mov    QWORD PTR [rdi+0x8],rdx
  410afd:	movzx  eax,BYTE PTR [rax]
  410b00:	mov    DWORD PTR [rbp+0x0],eax
  410b03:	mov    ebx,0x119
  410b08:	jmp    4106b4 <__sprintf_chk@plt+0xf3c4>
  410b0d:	nop    DWORD PTR [rax]
  410b10:	cmp    esi,0xffffffff
  410b13:	jne    4108b8 <__sprintf_chk@plt+0xf5c8>
  410b19:	lea    rsi,[rip+0x61c0]        # 416ce0 <__sprintf_chk@plt+0x159f0>
  410b20:	mov    edx,0x11f
  410b25:	mov    rdi,rbp
  410b28:	call   40e6e0 <__sprintf_chk@plt+0xd3f0>
  410b2d:	nop    DWORD PTR [rax]
  410b30:	test   ah,0x8
  410b33:	jne    410754 <__sprintf_chk@plt+0xf464>
  410b39:	test   ah,0x4
  410b3c:	jne    410b88 <__sprintf_chk@plt+0xf898>
  410b3e:	cmp    ebx,0x5f
  410b41:	je     410b88 <__sprintf_chk@plt+0xf898>
  410b43:	mov    rdi,QWORD PTR [rbp+0x40]
  410b47:	mov    rax,QWORD PTR [rdi]
  410b4a:	lea    rdx,[rax-0x1]
  410b4e:	test   rax,rax
  410b51:	mov    QWORD PTR [rdi],rdx
  410b54:	je     410eb1 <__sprintf_chk@plt+0xfbc1>
  410b5a:	mov    rax,QWORD PTR [rdi+0x8]
  410b5e:	lea    rdx,[rax+0x1]
  410b62:	mov    QWORD PTR [rdi+0x8],rdx
  410b66:	movzx  eax,BYTE PTR [rax]
  410b69:	mov    DWORD PTR [rbp+0x0],eax
  410b6c:	jmp    4106b4 <__sprintf_chk@plt+0xf3c4>
  410b71:	nop    DWORD PTR [rax+0x0]
  410b78:	call   401c50 <__sprintf_chk@plt+0x960>
  410b7d:	mov    esi,eax
  410b7f:	jmp    4108e6 <__sprintf_chk@plt+0xf5f6>
  410b84:	nop    DWORD PTR [rax+0x0]
  410b88:	mov    rdi,rbp
  410b8b:	mov    esi,ebx
  410b8d:	call   40fca0 <__sprintf_chk@plt+0xe9b0>
  410b92:	mov    rdi,QWORD PTR [rbp+0x40]
  410b96:	mov    rax,QWORD PTR [rdi]
  410b99:	lea    rdx,[rax-0x1]
  410b9d:	test   rax,rax
  410ba0:	mov    QWORD PTR [rdi],rdx
  410ba3:	je     410c10 <__sprintf_chk@plt+0xf920>
  410ba5:	mov    rax,QWORD PTR [rdi+0x8]
  410ba9:	lea    rdx,[rax+0x1]
  410bad:	mov    QWORD PTR [rdi+0x8],rdx
  410bb1:	movzx  ebx,BYTE PTR [rax]
  410bb4:	mov    rdx,QWORD PTR [r14]
  410bb7:	movsxd rax,ebx
  410bba:	mov    DWORD PTR [rbp+0x0],ebx
  410bbd:	test   BYTE PTR [rdx+rax*2],0x8
  410bc1:	jne    410b88 <__sprintf_chk@plt+0xf898>
  410bc3:	cmp    ebx,0x5f
  410bc6:	je     410b88 <__sprintf_chk@plt+0xf898>
  410bc8:	mov    rax,QWORD PTR [rbp+0x48]
  410bcc:	mov    rsi,QWORD PTR [rbp+0x38]
  410bd0:	lea    rdi,[rbp+0x30]
  410bd4:	mov    rdx,QWORD PTR [rax]
  410bd7:	mov    rcx,QWORD PTR [rax+0x8]
  410bdb:	call   40b780 <__sprintf_chk@plt+0xa490>
  410be0:	movzx  edx,BYTE PTR [rax+0xa]
  410be4:	test   dl,dl
  410be6:	lea    ebx,[rdx+0x100]
  410bec:	jne    4106b4 <__sprintf_chk@plt+0xf3c4>
  410bf2:	mov    QWORD PTR [r12],rax
  410bf6:	mov    ebx,0x11d
  410bfb:	jmp    4106b4 <__sprintf_chk@plt+0xf3c4>
  410c00:	call   401c50 <__sprintf_chk@plt+0x960>
  410c05:	mov    ebx,eax
  410c07:	jmp    41066e <__sprintf_chk@plt+0xf37e>
  410c0c:	nop    DWORD PTR [rax+0x0]
  410c10:	call   401c50 <__sprintf_chk@plt+0x960>
  410c15:	mov    ebx,eax
  410c17:	jmp    410bb4 <__sprintf_chk@plt+0xf8c4>
  410c19:	nop    DWORD PTR [rax+0x0]
  410c20:	lea    rsi,[rip+0x60b9]        # 416ce0 <__sprintf_chk@plt+0x159f0>
  410c27:	mov    edx,0x11e
  410c2c:	mov    rdi,rbp
  410c2f:	call   40e6e0 <__sprintf_chk@plt+0xd3f0>
  410c34:	nop    DWORD PTR [rax+0x0]
  410c38:	cmp    eax,0xffffffff
  410c3b:	je     4106b4 <__sprintf_chk@plt+0xf3c4>
  410c41:	lea    rsi,[rip+0x607a]        # 416cc2 <__sprintf_chk@plt+0x159d2>
  410c48:	mov    edx,0x11e
  410c4d:	mov    rdi,rbp
  410c50:	call   40e6e0 <__sprintf_chk@plt+0xd3f0>
  410c55:	nop    DWORD PTR [rax]
  410c58:	call   401c50 <__sprintf_chk@plt+0x960>
  410c5d:	jmp    410a56 <__sprintf_chk@plt+0xf766>
  410c62:	nop    WORD PTR [rax+rax*1+0x0]
  410c68:	call   401c50 <__sprintf_chk@plt+0x960>
  410c6d:	jmp    41081e <__sprintf_chk@plt+0xf52e>
  410c72:	nop    WORD PTR [rax+rax*1+0x0]
  410c78:	call   401c50 <__sprintf_chk@plt+0x960>
  410c7d:	jmp    410ace <__sprintf_chk@plt+0xf7de>
  410c82:	nop    WORD PTR [rax+rax*1+0x0]
  410c88:	call   401c50 <__sprintf_chk@plt+0x960>
  410c8d:	jmp    410796 <__sprintf_chk@plt+0xf4a6>
  410c92:	nop    WORD PTR [rax+rax*1+0x0]
  410c98:	lea    rsi,[rip+0x6331]        # 416fd0 <__sprintf_chk@plt+0x15ce0>
  410c9f:	mov    rdi,rbp
  410ca2:	xor    ebx,ebx
  410ca4:	call   40fdd0 <__sprintf_chk@plt+0xeae0>
  410ca9:	test   eax,eax
  410cab:	setne  bl
  410cae:	add    ebx,0x116
  410cb4:	jmp    4106b4 <__sprintf_chk@plt+0xf3c4>
  410cb9:	nop    DWORD PTR [rax+0x0]
  410cc0:	call   401c50 <__sprintf_chk@plt+0x960>
  410cc5:	jmp    410723 <__sprintf_chk@plt+0xf433>
  410cca:	nop    WORD PTR [rax+rax*1+0x0]
  410cd0:	call   401c50 <__sprintf_chk@plt+0x960>
  410cd5:	jmp    4106a8 <__sprintf_chk@plt+0xf3b8>
  410cda:	nop    WORD PTR [rax+rax*1+0x0]
  410ce0:	call   401c50 <__sprintf_chk@plt+0x960>
  410ce5:	mov    ebx,eax
  410ce7:	jmp    410850 <__sprintf_chk@plt+0xf560>
  410cec:	nop    DWORD PTR [rax+0x0]
  410cf0:	mov    rdi,QWORD PTR [rbp+0x40]
  410cf4:	mov    rax,QWORD PTR [rdi]
  410cf7:	lea    rdx,[rax-0x1]
  410cfb:	test   rax,rax
  410cfe:	mov    QWORD PTR [rdi],rdx
  410d01:	je     410e1f <__sprintf_chk@plt+0xfb2f>
  410d07:	mov    rax,QWORD PTR [rdi+0x8]
  410d0b:	lea    rdx,[rax+0x1]
  410d0f:	mov    QWORD PTR [rdi+0x8],rdx
  410d13:	movzx  eax,BYTE PTR [rax]
  410d16:	mov    DWORD PTR [rbp+0x0],eax
  410d19:	mov    ebx,0x11a
  410d1e:	jmp    4106b4 <__sprintf_chk@plt+0xf3c4>
  410d23:	nop    DWORD PTR [rax+rax*1+0x0]
  410d28:	mov    rdi,rbp
  410d2b:	call   40fca0 <__sprintf_chk@plt+0xe9b0>
  410d30:	mov    rdi,QWORD PTR [rbp+0x40]
  410d34:	mov    rax,QWORD PTR [rdi]
  410d37:	lea    rdx,[rax-0x1]
  410d3b:	test   rax,rax
  410d3e:	mov    QWORD PTR [rdi],rdx
  410d41:	je     410e53 <__sprintf_chk@plt+0xfb63>
  410d47:	mov    rax,QWORD PTR [rdi+0x8]
  410d4b:	lea    rdx,[rax+0x1]
  410d4f:	mov    QWORD PTR [rdi+0x8],rdx
  410d53:	movzx  eax,BYTE PTR [rax]
  410d56:	mov    DWORD PTR [rbp+0x0],eax
  410d59:	mov    rax,QWORD PTR [rbp+0x48]
  410d5d:	lea    rdi,[rbp+0x30]
  410d61:	mov    rsi,QWORD PTR [rbp+0x38]
  410d65:	mov    ebx,0x11e
  410d6a:	mov    rcx,QWORD PTR [rax+0x8]
  410d6e:	mov    rdx,QWORD PTR [rax]
  410d71:	sub    rcx,0x2
  410d75:	add    rdx,0x1
  410d79:	call   40b780 <__sprintf_chk@plt+0xa490>
  410d7e:	mov    QWORD PTR [r12],rax
  410d82:	jmp    4106b4 <__sprintf_chk@plt+0xf3c4>
  410d87:	nop    WORD PTR [rax+rax*1+0x0]
  410d90:	cmp    r13d,0xa
  410d94:	je     410e6c <__sprintf_chk@plt+0xfb7c>
  410d9a:	jle    410e5d <__sprintf_chk@plt+0xfb6d>
  410da0:	cmp    r13d,0xd
  410da4:	je     410e6c <__sprintf_chk@plt+0xfb7c>
  410daa:	cmp    r13d,0x61
  410dae:	mov    esi,0x7
  410db3:	je     4108b8 <__sprintf_chk@plt+0xf5c8>
  410db9:	jmp    410972 <__sprintf_chk@plt+0xf682>
  410dbe:	xchg   ax,ax
  410dc0:	mov    rdi,rbp
  410dc3:	call   40fd20 <__sprintf_chk@plt+0xea30>
  410dc8:	mov    rdx,QWORD PTR [rbp+0x48]
  410dcc:	test   eax,eax
  410dce:	mov    QWORD PTR [rdx+0x8],0x0
  410dd6:	jns    410e33 <__sprintf_chk@plt+0xfb43>
  410dd8:	mov    ebx,DWORD PTR [rbp+0x0]
  410ddb:	jmp    410860 <__sprintf_chk@plt+0xf570>
  410de0:	call   401c50 <__sprintf_chk@plt+0x960>
  410de5:	mov    r13d,eax
  410de8:	jmp    410935 <__sprintf_chk@plt+0xf645>
  410ded:	cmp    r13d,0x74
  410df1:	je     410ea7 <__sprintf_chk@plt+0xfbb7>
  410df7:	cmp    r13d,0x76
  410dfb:	mov    esi,0xb
  410e00:	je     4108b8 <__sprintf_chk@plt+0xf5c8>
  410e06:	jmp    410972 <__sprintf_chk@plt+0xf682>
  410e0b:	call   401c50 <__sprintf_chk@plt+0x960>
  410e10:	jmp    4107c8 <__sprintf_chk@plt+0xf4d8>
  410e15:	call   401c50 <__sprintf_chk@plt+0x960>
  410e1a:	jmp    410b00 <__sprintf_chk@plt+0xf810>
  410e1f:	call   401c50 <__sprintf_chk@plt+0x960>
  410e24:	jmp    410d16 <__sprintf_chk@plt+0xfa26>
  410e29:	call   401c50 <__sprintf_chk@plt+0x960>
  410e2e:	jmp    410a88 <__sprintf_chk@plt+0xf798>
  410e33:	mov    edx,eax
  410e35:	xor    esi,esi
  410e37:	mov    rdi,rbp
  410e3a:	call   4103f0 <__sprintf_chk@plt+0xf100>
  410e3f:	mov    rax,QWORD PTR [rbp+0x48]
  410e43:	mov    ebx,DWORD PTR [rbp+0x0]
  410e46:	mov    QWORD PTR [rax+0x8],0x0
  410e4e:	jmp    4105f8 <__sprintf_chk@plt+0xf308>
  410e53:	call   401c50 <__sprintf_chk@plt+0x960>
  410e58:	jmp    410d56 <__sprintf_chk@plt+0xfa66>
  410e5d:	cmp    r13d,0xffffffff
  410e61:	je     410b19 <__sprintf_chk@plt+0xf829>
  410e67:	jmp    410972 <__sprintf_chk@plt+0xf682>
  410e6c:	mov    esi,0xa
  410e71:	mov    rdi,rbp
  410e74:	call   40fca0 <__sprintf_chk@plt+0xe9b0>
  410e79:	mov    rdi,rbp
  410e7c:	call   40e790 <__sprintf_chk@plt+0xd4a0>
  410e81:	mov    esi,DWORD PTR [rbp+0x0]
  410e84:	jmp    4108e9 <__sprintf_chk@plt+0xf5f9>
  410e89:	mov    esi,0x8
  410e8e:	jmp    4108b8 <__sprintf_chk@plt+0xf5c8>
  410e93:	mov    esi,0xd
  410e98:	jmp    4108b8 <__sprintf_chk@plt+0xf5c8>
  410e9d:	mov    esi,0xc
  410ea2:	jmp    4108b8 <__sprintf_chk@plt+0xf5c8>
  410ea7:	mov    esi,0x9
  410eac:	jmp    4108b8 <__sprintf_chk@plt+0xf5c8>
  410eb1:	call   401c50 <__sprintf_chk@plt+0x960>
  410eb6:	jmp    410b69 <__sprintf_chk@plt+0xf879>
  410ebb:	mov    QWORD PTR [rsp+0x8],rcx
  410ec0:	call   401c50 <__sprintf_chk@plt+0x960>
  410ec5:	mov    rcx,QWORD PTR [rsp+0x8]
  410eca:	mov    r13d,eax
  410ecd:	jmp    4109c4 <__sprintf_chk@plt+0xf6d4>
  410ed2:	mov    esi,r13d
  410ed5:	jmp    4108b8 <__sprintf_chk@plt+0xf5c8>
  410eda:	lea    rsi,[rip+0x5e11]        # 416cf2 <__sprintf_chk@plt+0x15a02>
  410ee1:	mov    edx,0x11e
  410ee6:	mov    rdi,rbp
  410ee9:	call   40e6e0 <__sprintf_chk@plt+0xd3f0>
  410eee:	xchg   ax,ax
  410ef0:	push   rbx
  410ef1:	lea    rsi,[rdi+0x18]
  410ef5:	mov    rbx,rdi
  410ef8:	call   4105d0 <__sprintf_chk@plt+0xf2e0>
  410efd:	mov    DWORD PTR [rbx+0x10],eax
  410f00:	pop    rbx
  410f01:	ret    
  410f02:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  410f0d:	nop    DWORD PTR [rax]
  410f10:	sub    rsp,0x18
  410f14:	cmp    DWORD PTR [rdi+0x10],0x11d
  410f1b:	je     410f30 <__sprintf_chk@plt+0xfc40>
  410f1d:	mov    esi,0x11d
  410f22:	call   4103c0 <__sprintf_chk@plt+0xf0d0>
  410f27:	nop    WORD PTR [rax+rax*1+0x0]
  410f30:	cmp    DWORD PTR [rdi+0x20],0x11f
  410f37:	mov    edx,DWORD PTR [rdi+0x4]
  410f3a:	mov    rax,QWORD PTR [rdi+0x18]
  410f3e:	mov    DWORD PTR [rdi+0x8],edx
  410f41:	je     410f60 <__sprintf_chk@plt+0xfc70>
  410f43:	mov    r9,QWORD PTR [rdi+0x20]
  410f47:	mov    r10,QWORD PTR [rdi+0x28]
  410f4b:	mov    DWORD PTR [rdi+0x20],0x11f
  410f52:	mov    QWORD PTR [rdi+0x10],r9
  410f56:	mov    QWORD PTR [rdi+0x18],r10
  410f5a:	add    rsp,0x18
  410f5e:	ret    
  410f5f:	nop
  410f60:	mov    QWORD PTR [rsp+0x8],rax
  410f65:	call   410ef0 <__sprintf_chk@plt+0xfc00>
  410f6a:	mov    rax,QWORD PTR [rsp+0x8]
  410f6f:	add    rsp,0x18
  410f73:	ret    
  410f74:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  410f7f:	nop
  410f80:	push   rbp
  410f81:	push   rbx
  410f82:	mov    rbp,rdi
  410f85:	mov    rbx,rsi
  410f88:	sub    rsp,0x28
  410f8c:	mov    rax,QWORD PTR fs:0x28
  410f95:	mov    QWORD PTR [rsp+0x18],rax
  410f9a:	xor    eax,eax
  410f9c:	call   410f10 <__sprintf_chk@plt+0xfc20>
  410fa1:	mov    rdi,QWORD PTR [rbp+0x30]
  410fa5:	mov    rsi,rsp
  410fa8:	mov    rdx,rsp
  410fab:	mov    QWORD PTR [rsp],rax
  410faf:	mov    DWORD PTR [rsp+0x8],0x4
  410fb7:	call   4086c0 <__sprintf_chk@plt+0x73d0>
  410fbc:	mov    DWORD PTR [rbx+0x8],eax
  410fbf:	mov    DWORD PTR [rbx+0x10],0xffffffff
  410fc6:	mov    rax,QWORD PTR [rsp+0x18]
  410fcb:	xor    rax,QWORD PTR fs:0x28
  410fd4:	mov    DWORD PTR [rbx+0x14],0xffffffff
  410fdb:	mov    DWORD PTR [rbx],0x4
  410fe1:	jne    410fea <__sprintf_chk@plt+0xfcfa>
  410fe3:	add    rsp,0x28
  410fe7:	pop    rbx
  410fe8:	pop    rbp
  410fe9:	ret    
  410fea:	call   401100 <__stack_chk_fail@plt>
  410fef:	nop
  410ff0:	push   r12
  410ff2:	push   rbp
  410ff3:	mov    rbp,rsi
  410ff6:	push   rbx
  410ff7:	mov    rbx,rdi
  410ffa:	sub    rsp,0x20
  410ffe:	mov    rax,QWORD PTR fs:0x28
  411007:	mov    QWORD PTR [rsp+0x18],rax
  41100c:	xor    eax,eax
  41100e:	call   410f10 <__sprintf_chk@plt+0xfc20>
  411013:	mov    rbx,QWORD PTR [rbx+0x30]
  411017:	mov    ecx,0x1
  41101c:	mov    rdx,rbp
  41101f:	mov    rsi,rax
  411022:	mov    r12,rax
  411025:	mov    rdi,rbx
  411028:	call   410160 <__sprintf_chk@plt+0xee70>
  41102d:	cmp    eax,0x8
  411030:	je     411050 <__sprintf_chk@plt+0xfd60>
  411032:	mov    rax,QWORD PTR [rsp+0x18]
  411037:	xor    rax,QWORD PTR fs:0x28
  411040:	jne    41106f <__sprintf_chk@plt+0xfd7f>
  411042:	add    rsp,0x20
  411046:	pop    rbx
  411047:	pop    rbp
  411048:	pop    r12
  41104a:	ret    
  41104b:	nop    DWORD PTR [rax+rax*1+0x0]
  411050:	mov    rsi,rsp
  411053:	mov    rdx,rsp
  411056:	mov    rdi,rbx
  411059:	mov    QWORD PTR [rsp],r12
  41105d:	mov    DWORD PTR [rsp+0x8],0x4
  411065:	call   4086c0 <__sprintf_chk@plt+0x73d0>
  41106a:	mov    DWORD PTR [rbp+0x8],eax
  41106d:	jmp    411032 <__sprintf_chk@plt+0xfd42>
  41106f:	call   401100 <__stack_chk_fail@plt>
  411074:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41107f:	nop
  411080:	push   r13
  411082:	push   r12
  411084:	push   rbp
  411085:	push   rbx
  411086:	mov    rbx,rdi
  411089:	mov    rbp,rsi
  41108c:	sub    rsp,0x28
  411090:	mov    r12,QWORD PTR [rdi+0x30]
  411094:	mov    rax,QWORD PTR fs:0x28
  41109d:	mov    QWORD PTR [rsp+0x18],rax
  4110a2:	xor    eax,eax
  4110a4:	mov    rdi,r12
  4110a7:	call   40f3d0 <__sprintf_chk@plt+0xe0e0>
  4110ac:	cmp    DWORD PTR [rbx+0x20],0x11f
  4110b3:	mov    eax,DWORD PTR [rbx+0x4]
  4110b6:	mov    DWORD PTR [rbx+0x8],eax
  4110b9:	je     411110 <__sprintf_chk@plt+0xfe20>
  4110bb:	mov    rax,QWORD PTR [rbx+0x20]
  4110bf:	mov    rdx,QWORD PTR [rbx+0x28]
  4110c3:	mov    DWORD PTR [rbx+0x20],0x11f
  4110ca:	mov    QWORD PTR [rbx+0x10],rax
  4110ce:	mov    QWORD PTR [rbx+0x18],rdx
  4110d2:	mov    rsi,rsp
  4110d5:	mov    rdi,rbx
  4110d8:	call   410f80 <__sprintf_chk@plt+0xfc90>
  4110dd:	mov    rsi,rsp
  4110e0:	mov    rdi,r12
  4110e3:	call   40f450 <__sprintf_chk@plt+0xe160>
  4110e8:	mov    DWORD PTR [rbp+0xc],eax
  4110eb:	mov    DWORD PTR [rbp+0x0],0x9
  4110f2:	mov    rax,QWORD PTR [rsp+0x18]
  4110f7:	xor    rax,QWORD PTR fs:0x28
  411100:	jne    41111a <__sprintf_chk@plt+0xfe2a>
  411102:	add    rsp,0x28
  411106:	pop    rbx
  411107:	pop    rbp
  411108:	pop    r12
  41110a:	pop    r13
  41110c:	ret    
  41110d:	nop    DWORD PTR [rax]
  411110:	mov    rdi,rbx
  411113:	call   410ef0 <__sprintf_chk@plt+0xfc00>
  411118:	jmp    4110d2 <__sprintf_chk@plt+0xfde2>
  41111a:	call   401100 <__stack_chk_fail@plt>
  41111f:	nop
  411120:	cmp    esi,DWORD PTR [rdi+0x10]
  411123:	je     411130 <__sprintf_chk@plt+0xfe40>
  411125:	sub    rsp,0x8
  411129:	call   4103c0 <__sprintf_chk@plt+0xf0d0>
  41112e:	xchg   ax,ax
  411130:	cmp    DWORD PTR [rdi+0x20],0x11f
  411137:	mov    eax,DWORD PTR [rdi+0x4]
  41113a:	mov    DWORD PTR [rdi+0x8],eax
  41113d:	je     411160 <__sprintf_chk@plt+0xfe70>
  41113f:	mov    rax,QWORD PTR [rdi+0x20]
  411143:	mov    rdx,QWORD PTR [rdi+0x28]
  411147:	mov    DWORD PTR [rdi+0x20],0x11f
  41114e:	mov    QWORD PTR [rdi+0x10],rax
  411152:	mov    QWORD PTR [rdi+0x18],rdx
  411156:	ret    
  411157:	nop    WORD PTR [rax+rax*1+0x0]
  411160:	jmp    410ef0 <__sprintf_chk@plt+0xfc00>
  411165:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  411170:	xor    eax,eax
  411172:	cmp    DWORD PTR [rdi+0x10],esi
  411175:	je     411180 <__sprintf_chk@plt+0xfe90>
  411177:	repz ret 
  411179:	nop    DWORD PTR [rax+0x0]
  411180:	cmp    DWORD PTR [rdi+0x20],0x11f
  411187:	mov    eax,DWORD PTR [rdi+0x4]
  41118a:	mov    DWORD PTR [rdi+0x8],eax
  41118d:	je     4111b0 <__sprintf_chk@plt+0xfec0>
  41118f:	mov    rax,QWORD PTR [rdi+0x20]
  411193:	mov    rdx,QWORD PTR [rdi+0x28]
  411197:	mov    DWORD PTR [rdi+0x20],0x11f
  41119e:	mov    QWORD PTR [rdi+0x10],rax
  4111a2:	mov    QWORD PTR [rdi+0x18],rdx
  4111a6:	mov    eax,0x1
  4111ab:	ret    
  4111ac:	nop    DWORD PTR [rax+0x0]
  4111b0:	sub    rsp,0x8
  4111b4:	call   410ef0 <__sprintf_chk@plt+0xfc00>
  4111b9:	mov    eax,0x1
  4111be:	add    rsp,0x8
  4111c2:	ret    
  4111c3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4111ce:	xchg   ax,ax
  4111d0:	push   r14
  4111d2:	push   r13
  4111d4:	mov    r13d,edx
  4111d7:	push   r12
  4111d9:	push   rbp
  4111da:	mov    r12d,ecx
  4111dd:	push   rbx
  4111de:	mov    ebp,esi
  4111e0:	mov    rbx,rdi
  4111e3:	call   411170 <__sprintf_chk@plt+0xfe80>
  4111e8:	test   eax,eax
  4111ea:	jne    411240 <__sprintf_chk@plt+0xff50>
  4111ec:	cmp    DWORD PTR [rbx+0x4],r12d
  4111f0:	je     411250 <__sprintf_chk@plt+0xff60>
  4111f2:	lea    r14,[rbx+0x38]
  4111f6:	mov    esi,r13d
  4111f9:	mov    rdi,r14
  4111fc:	call   4072e0 <__sprintf_chk@plt+0x5ff0>
  411201:	mov    esi,ebp
  411203:	mov    rdi,r14
  411206:	mov    r13,rax
  411209:	call   4072e0 <__sprintf_chk@plt+0x5ff0>
  41120e:	mov    rdi,QWORD PTR [rbx+0x38]
  411212:	lea    rsi,[rip+0x6117]        # 417330 <__sprintf_chk@plt+0x16040>
  411219:	mov    rdx,rax
  41121c:	mov    r8d,r12d
  41121f:	mov    rcx,r13
  411222:	xor    eax,eax
  411224:	call   407220 <__sprintf_chk@plt+0x5f30>
  411229:	mov    edx,DWORD PTR [rbx+0x10]
  41122c:	mov    rsi,rax
  41122f:	mov    rdi,rbx
  411232:	call   40e6e0 <__sprintf_chk@plt+0xd3f0>
  411237:	nop    WORD PTR [rax+rax*1+0x0]
  411240:	pop    rbx
  411241:	pop    rbp
  411242:	pop    r12
  411244:	pop    r13
  411246:	pop    r14
  411248:	ret    
  411249:	nop    DWORD PTR [rax+0x0]
  411250:	mov    esi,ebp
  411252:	mov    rdi,rbx
  411255:	call   4103c0 <__sprintf_chk@plt+0xf0d0>
  41125a:	nop    WORD PTR [rax+rax*1+0x0]
  411260:	push   r15
  411262:	push   r14
  411264:	push   r13
  411266:	push   r12
  411268:	push   rbp
  411269:	push   rbx
  41126a:	mov    rbx,rdi
  41126d:	sub    rsp,0x78
  411271:	mov    rdx,QWORD PTR [rdi+0x38]
  411275:	mov    rax,QWORD PTR fs:0x28
  41127e:	mov    QWORD PTR [rsp+0x68],rax
  411283:	xor    eax,eax
  411285:	movzx  eax,WORD PTR [rdx+0x60]
  411289:	add    eax,0x1
  41128c:	cmp    ax,0xc8
  411290:	mov    WORD PTR [rdx+0x60],ax
  411294:	ja     411a60 <__sprintf_chk@plt+0x10770>
  41129a:	lea    r14,[rsp+0x40]
  41129f:	lea    r15,[rsp+0x20]
  4112a4:	lea    rax,[r14+0x8]
  4112a8:	mov    QWORD PTR [rsp+0x8],rax
  4112ad:	nop    DWORD PTR [rax]
  4112b0:	mov    eax,DWORD PTR [rbx+0x10]
  4112b3:	lea    edx,[rax-0x104]
  4112b9:	cmp    edx,0x1b
  4112bc:	ja     4112d4 <__sprintf_chk@plt+0xffe4>
  4112be:	mov    ecx,0x1
  4112c3:	shlx   rdx,rcx,rdx
  4112c8:	test   edx,0x8010007
  4112ce:	jne    411920 <__sprintf_chk@plt+0x10630>
  4112d4:	sub    eax,0x102
  4112d9:	mov    r12d,DWORD PTR [rbx+0x4]
  4112dd:	cmp    eax,0x13
  4112e0:	ja     411950 <__sprintf_chk@plt+0x10660>
  4112e6:	lea    rdx,[rip+0x50ab]        # 416398 <__sprintf_chk@plt+0x150a8>
  4112ed:	movsxd rax,DWORD PTR [rdx+rax*4]
  4112f1:	add    rax,rdx
  4112f4:	jmp    rax
  4112f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411300:	cmp    DWORD PTR [rbx+0x20],0x11f
  411307:	mov    r13,QWORD PTR [rbx+0x30]
  41130b:	mov    DWORD PTR [rbx+0x8],r12d
  41130f:	je     411b0e <__sprintf_chk@plt+0x1081e>
  411315:	mov    rax,QWORD PTR [rbx+0x20]
  411319:	mov    rdx,QWORD PTR [rbx+0x28]
  41131d:	mov    DWORD PTR [rbx+0x20],0x11f
  411324:	mov    QWORD PTR [rbx+0x10],rax
  411328:	mov    QWORD PTR [rbx+0x18],rdx
  41132c:	mov    edx,DWORD PTR [r13+0x30]
  411330:	mov    rdi,rbx
  411333:	mov    DWORD PTR [r13+0x34],edx
  411337:	mov    DWORD PTR [rsp],edx
  41133a:	call   412e00 <__sprintf_chk@plt+0x11b10>
  41133f:	mov    BYTE PTR [rsp+0x4e],0x1
  411344:	mov    DWORD PTR [rsp+0x48],0xffffffff
  41134c:	mov    ebp,eax
  41134e:	movzx  eax,BYTE PTR [r13+0x4a]
  411353:	mov    BYTE PTR [rsp+0x4d],0x0
  411358:	mov    esi,0x103
  41135d:	mov    rdi,rbx
  411360:	mov    BYTE PTR [rsp+0x4c],al
  411364:	mov    rax,QWORD PTR [r13+0x28]
  411368:	mov    QWORD PTR [rsp+0x40],rax
  41136d:	mov    QWORD PTR [r13+0x28],r14
  411371:	call   411120 <__sprintf_chk@plt+0xfe30>
  411376:	mov    rdi,rbx
  411379:	call   413d70 <__sprintf_chk@plt+0x12a80>
  41137e:	mov    rdi,r13
  411381:	call   40f070 <__sprintf_chk@plt+0xdd80>
  411386:	mov    edx,DWORD PTR [rsp]
  411389:	mov    esi,eax
  41138b:	mov    rdi,r13
  41138e:	call   40f270 <__sprintf_chk@plt+0xdf80>
  411393:	mov    ecx,r12d
  411396:	mov    edx,0x115
  41139b:	mov    esi,0x106
  4113a0:	mov    rdi,rbx
  4113a3:	call   4111d0 <__sprintf_chk@plt+0xfee0>
  4113a8:	mov    rdi,r13
  4113ab:	call   40f2a0 <__sprintf_chk@plt+0xdfb0>
  4113b0:	mov    eax,DWORD PTR [r13+0x30]
  4113b4:	lea    rsi,[r13+0x38]
  4113b8:	mov    edx,ebp
  4113ba:	mov    rdi,r13
  4113bd:	mov    DWORD PTR [r13+0x34],eax
  4113c1:	call   40f000 <__sprintf_chk@plt+0xdd10>
  4113c6:	jmp    4118b8 <__sprintf_chk@plt+0x105c8>
  4113cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4113d0:	cmp    DWORD PTR [rbx+0x20],0x11f
  4113d7:	mov    rbp,QWORD PTR [rbx+0x30]
  4113db:	mov    DWORD PTR [rbx+0x8],r12d
  4113df:	je     411b38 <__sprintf_chk@plt+0x10848>
  4113e5:	mov    rax,QWORD PTR [rbx+0x20]
  4113e9:	mov    rdx,QWORD PTR [rbx+0x28]
  4113ed:	mov    DWORD PTR [rbx+0x20],0x11f
  4113f4:	mov    QWORD PTR [rbx+0x10],rax
  4113f8:	mov    QWORD PTR [rbx+0x18],rdx
  4113fc:	mov    eax,DWORD PTR [rbx+0x10]
  4113ff:	lea    edx,[rax-0x104]
  411405:	cmp    edx,0x1b
  411408:	ja     411a70 <__sprintf_chk@plt+0x10780>
  41140e:	mov    eax,0x1
  411413:	mov    esi,0x80001e
  411418:	shlx   rdx,rax,rdx
  41141d:	test   edx,0x8010007
  411423:	jne    411471 <__sprintf_chk@plt+0x10181>
  411425:	lea    r13,[rsp+0x40]
  41142a:	mov    rdi,rbx
  41142d:	mov    rsi,r13
  411430:	call   413300 <__sprintf_chk@plt+0x12010>
  411435:	mov    esi,DWORD PTR [rsp+0x40]
  411439:	mov    r12d,eax
  41143c:	lea    eax,[rsi-0xd]
  41143f:	cmp    eax,0x1
  411442:	jbe    411e4e <__sprintf_chk@plt+0x10b5e>
  411448:	cmp    r12d,0x1
  41144c:	mov    rsi,r13
  41144f:	mov    rdi,rbp
  411452:	je     411e96 <__sprintf_chk@plt+0x10ba6>
  411458:	call   40f380 <__sprintf_chk@plt+0xe090>
  41145d:	movzx  esi,BYTE PTR [rbp+0x4a]
  411461:	lea    eax,[r12+0x1]
  411466:	shl    eax,0x17
  411469:	shl    esi,0x6
  41146c:	or     esi,0x1e
  41146f:	or     esi,eax
  411471:	mov    rax,QWORD PTR [rbp+0x18]
  411475:	mov    rdi,rbp
  411478:	mov    edx,DWORD PTR [rax+0x8]
  41147b:	call   40e980 <__sprintf_chk@plt+0xd690>
  411480:	jmp    411908 <__sprintf_chk@plt+0x10618>
  411485:	nop    DWORD PTR [rax]
  411488:	mov    r13,QWORD PTR [rbx+0x30]
  41148c:	mov    ebp,DWORD PTR [r13+0x30]
  411490:	mov    DWORD PTR [r13+0x34],ebp
  411494:	mov    BYTE PTR [rsp+0x2e],0x1
  411499:	mov    DWORD PTR [rsp+0x28],0xffffffff
  4114a1:	movzx  eax,BYTE PTR [r13+0x4a]
  4114a6:	cmp    DWORD PTR [rbx+0x20],0x11f
  4114ad:	mov    BYTE PTR [rsp+0x2d],0x0
  4114b2:	mov    BYTE PTR [rsp+0x2c],al
  4114b6:	mov    rdx,QWORD PTR [r13+0x28]
  4114ba:	mov    BYTE PTR [rsp+0x4c],al
  4114be:	mov    eax,DWORD PTR [rbx+0x4]
  4114c1:	mov    DWORD PTR [rsp+0x48],0xffffffff
  4114c9:	mov    BYTE PTR [rsp+0x4e],0x0
  4114ce:	mov    QWORD PTR [rsp+0x20],rdx
  4114d3:	mov    BYTE PTR [rsp+0x4d],0x0
  4114d8:	mov    QWORD PTR [rsp+0x40],r15
  4114dd:	mov    QWORD PTR [r13+0x28],r14
  4114e1:	mov    DWORD PTR [rbx+0x8],eax
  4114e4:	je     411b52 <__sprintf_chk@plt+0x10862>
  4114ea:	mov    rax,QWORD PTR [rbx+0x20]
  4114ee:	mov    rdx,QWORD PTR [rbx+0x28]
  4114f2:	mov    DWORD PTR [rbx+0x20],0x11f
  4114f9:	mov    QWORD PTR [rbx+0x10],rax
  4114fd:	mov    QWORD PTR [rbx+0x18],rdx
  411501:	mov    rdi,rbx
  411504:	call   411260 <__sprintf_chk@plt+0xff70>
  411509:	mov    ecx,r12d
  41150c:	mov    edx,0x110
  411511:	mov    esi,0x114
  411516:	mov    rdi,rbx
  411519:	call   4111d0 <__sprintf_chk@plt+0xfee0>
  41151e:	mov    rdi,rbx
  411521:	call   412e00 <__sprintf_chk@plt+0x11b10>
  411526:	cmp    BYTE PTR [rsp+0x4d],0x0
  41152b:	mov    r12d,eax
  41152e:	je     411a92 <__sprintf_chk@plt+0x107a2>
  411534:	mov    rdi,rbx
  411537:	call   40fc10 <__sprintf_chk@plt+0xe920>
  41153c:	mov    rdi,QWORD PTR [rbx+0x30]
  411540:	mov    edx,r12d
  411543:	mov    eax,DWORD PTR [rdi+0x30]
  411546:	lea    rsi,[rdi+0x38]
  41154a:	mov    DWORD PTR [rdi+0x34],eax
  41154d:	call   40f000 <__sprintf_chk@plt+0xdd10>
  411552:	mov    rdi,r13
  411555:	call   40f2a0 <__sprintf_chk@plt+0xdfb0>
  41155a:	mov    rdi,r13
  41155d:	call   40f070 <__sprintf_chk@plt+0xdd80>
  411562:	mov    rdi,QWORD PTR [rbx+0x30]
  411566:	mov    edx,ebp
  411568:	mov    esi,eax
  41156a:	call   40f270 <__sprintf_chk@plt+0xdf80>
  41156f:	mov    rdi,r13
  411572:	call   40f2a0 <__sprintf_chk@plt+0xdfb0>
  411577:	jmp    4118b8 <__sprintf_chk@plt+0x105c8>
  41157c:	nop    DWORD PTR [rax+0x0]
  411580:	cmp    DWORD PTR [rbx+0x20],0x11f
  411587:	mov    DWORD PTR [rbx+0x8],r12d
  41158b:	je     411b6c <__sprintf_chk@plt+0x1087c>
  411591:	mov    rax,QWORD PTR [rbx+0x20]
  411595:	mov    rdx,QWORD PTR [rbx+0x28]
  411599:	mov    DWORD PTR [rbx+0x20],0x11f
  4115a0:	mov    QWORD PTR [rbx+0x10],rax
  4115a4:	mov    QWORD PTR [rbx+0x18],rdx
  4115a8:	mov    esi,0x109
  4115ad:	mov    rdi,rbx
  4115b0:	call   411170 <__sprintf_chk@plt+0xfe80>
  4115b5:	test   eax,eax
  4115b7:	mov    r12d,eax
  4115ba:	je     411990 <__sprintf_chk@plt+0x106a0>
  4115c0:	mov    rbp,QWORD PTR [rbx+0x30]
  4115c4:	mov    rdi,rbx
  4115c7:	call   410f10 <__sprintf_chk@plt+0xfc20>
  4115cc:	xor    edx,edx
  4115ce:	mov    rsi,rax
  4115d1:	mov    rdi,rbx
  4115d4:	call   410010 <__sprintf_chk@plt+0xed20>
  4115d9:	mov    eax,DWORD PTR [rbp+0x3c]
  4115dc:	mov    esi,0x1
  4115e1:	mov    rdi,rbp
  4115e4:	mov    DWORD PTR [rsp+0x30],0xffffffff
  4115ec:	mov    DWORD PTR [rsp+0x34],0xffffffff
  4115f4:	mov    DWORD PTR [rsp+0x20],0x6
  4115fc:	mov    DWORD PTR [rsp+0x28],eax
  411600:	call   40f340 <__sprintf_chk@plt+0xe050>
  411605:	mov    rdx,QWORD PTR [rbx+0x30]
  411609:	add    DWORD PTR [rbp+0x3c],0x1
  41160d:	mov    rsi,r14
  411610:	mov    rdi,rbx
  411613:	movzx  eax,BYTE PTR [rdx+0x4a]
  411617:	mov    rcx,QWORD PTR [rdx]
  41161a:	add    eax,0x1
  41161d:	mov    BYTE PTR [rdx+0x4a],al
  411620:	movzx  eax,al
  411623:	sub    eax,0x1
  411626:	cdqe   
  411628:	movzx  eax,WORD PTR [rdx+rax*2+0xc4]
  411630:	mov    edx,DWORD PTR [rdx+0x30]
  411633:	shl    rax,0x4
  411637:	add    rax,QWORD PTR [rcx+0x30]
  41163b:	mov    ecx,DWORD PTR [rbx+0x4]
  41163e:	mov    DWORD PTR [rax+0x8],edx
  411641:	xor    edx,edx
  411643:	call   411ec0 <__sprintf_chk@plt+0x10bd0>
  411648:	mov    rdx,r14
  41164b:	mov    rsi,r15
  41164e:	mov    rdi,rbp
  411651:	call   40f890 <__sprintf_chk@plt+0xe5a0>
  411656:	movzx  eax,BYTE PTR [rbp+0x4a]
  41165a:	mov    rdx,QWORD PTR [rbp+0x0]
  41165e:	sub    eax,0x1
  411661:	cdqe   
  411663:	movzx  eax,WORD PTR [rbp+rax*2+0xc4]
  41166b:	shl    rax,0x4
  41166f:	add    rax,QWORD PTR [rdx+0x30]
  411673:	mov    edx,DWORD PTR [rbp+0x30]
  411676:	mov    DWORD PTR [rax+0x8],edx
  411679:	jmp    4118b8 <__sprintf_chk@plt+0x105c8>
  41167e:	xchg   ax,ax
  411680:	mov    rbp,QWORD PTR [rbx+0x30]
  411684:	mov    rdi,rbx
  411687:	mov    DWORD PTR [rsp+0x40],0xffffffff
  41168f:	call   413de0 <__sprintf_chk@plt+0x12af0>
  411694:	mov    r13d,eax
  411697:	mov    eax,DWORD PTR [rbx+0x10]
  41169a:	lea    rcx,[rbp+0x38]
  41169e:	cmp    eax,0x105
  4116a3:	mov    QWORD PTR [rsp],rcx
  4116a7:	jne    4116ef <__sprintf_chk@plt+0x103ff>
  4116a9:	nop    DWORD PTR [rax+0x0]
  4116b0:	mov    rdi,rbp
  4116b3:	call   40f070 <__sprintf_chk@plt+0xdd80>
  4116b8:	mov    rsi,r14
  4116bb:	mov    edx,eax
  4116bd:	mov    rdi,rbp
  4116c0:	call   40f000 <__sprintf_chk@plt+0xdd10>
  4116c5:	mov    eax,DWORD PTR [rbp+0x30]
  4116c8:	mov    rsi,QWORD PTR [rsp]
  4116cc:	mov    edx,r13d
  4116cf:	mov    rdi,rbp
  4116d2:	mov    DWORD PTR [rbp+0x34],eax
  4116d5:	call   40f000 <__sprintf_chk@plt+0xdd10>
  4116da:	mov    rdi,rbx
  4116dd:	call   413de0 <__sprintf_chk@plt+0x12af0>
  4116e2:	mov    r13d,eax
  4116e5:	mov    eax,DWORD PTR [rbx+0x10]
  4116e8:	cmp    eax,0x105
  4116ed:	je     4116b0 <__sprintf_chk@plt+0x103c0>
  4116ef:	cmp    eax,0x104
  4116f4:	je     411aad <__sprintf_chk@plt+0x107bd>
  4116fa:	mov    edx,r13d
  4116fd:	mov    rsi,r14
  411700:	mov    rdi,rbp
  411703:	call   40f000 <__sprintf_chk@plt+0xdd10>
  411708:	mov    eax,DWORD PTR [rbp+0x30]
  41170b:	mov    edx,DWORD PTR [rsp+0x40]
  41170f:	mov    rdi,rbp
  411712:	mov    rsi,QWORD PTR [rsp]
  411716:	mov    DWORD PTR [rbp+0x34],eax
  411719:	call   40f000 <__sprintf_chk@plt+0xdd10>
  41171e:	mov    ecx,r12d
  411721:	mov    edx,0x10a
  411726:	mov    esi,0x106
  41172b:	mov    rdi,rbx
  41172e:	call   4111d0 <__sprintf_chk@plt+0xfee0>
  411733:	jmp    4118b8 <__sprintf_chk@plt+0x105c8>
  411738:	nop    DWORD PTR [rax+rax*1+0x0]
  411740:	cmp    DWORD PTR [rbx+0x20],0x11f
  411747:	mov    DWORD PTR [rbx+0x8],r12d
  41174b:	je     411b1b <__sprintf_chk@plt+0x1082b>
  411751:	mov    rax,QWORD PTR [rbx+0x20]
  411755:	mov    rdx,QWORD PTR [rbx+0x28]
  411759:	mov    DWORD PTR [rbx+0x20],0x11f
  411760:	mov    QWORD PTR [rbx+0x10],rax
  411764:	mov    QWORD PTR [rbx+0x18],rdx
  411768:	mov    rsi,r15
  41176b:	mov    rdi,rbx
  41176e:	call   410ff0 <__sprintf_chk@plt+0xfd00>
  411773:	mov    eax,DWORD PTR [rbx+0x10]
  411776:	cmp    eax,0x2e
  411779:	jne    411793 <__sprintf_chk@plt+0x104a3>
  41177b:	nop    DWORD PTR [rax+rax*1+0x0]
  411780:	mov    rsi,r15
  411783:	mov    rdi,rbx
  411786:	call   411080 <__sprintf_chk@plt+0xfd90>
  41178b:	mov    eax,DWORD PTR [rbx+0x10]
  41178e:	cmp    eax,0x2e
  411791:	je     411780 <__sprintf_chk@plt+0x10490>
  411793:	xor    edx,edx
  411795:	cmp    eax,0x3a
  411798:	je     411e2f <__sprintf_chk@plt+0x10b3f>
  41179e:	mov    ecx,r12d
  4117a1:	mov    rsi,r14
  4117a4:	mov    rdi,rbx
  4117a7:	call   411ec0 <__sprintf_chk@plt+0x10bd0>
  4117ac:	mov    rdi,QWORD PTR [rbx+0x30]
  4117b0:	mov    rdx,r14
  4117b3:	mov    rsi,r15
  4117b6:	call   40f890 <__sprintf_chk@plt+0xe5a0>
  4117bb:	mov    rax,QWORD PTR [rbx+0x30]
  4117bf:	mov    rcx,QWORD PTR [rax]
  4117c2:	movsxd rdx,DWORD PTR [rax+0x30]
  4117c6:	mov    rax,QWORD PTR [rcx+0x28]
  4117ca:	mov    DWORD PTR [rax+rdx*4-0x4],r12d
  4117cf:	jmp    4118b8 <__sprintf_chk@plt+0x105c8>
  4117d4:	nop    DWORD PTR [rax+0x0]
  4117d8:	mov    r13,QWORD PTR [rbx+0x30]
  4117dc:	mov    BYTE PTR [rsp+0x2e],0x1
  4117e1:	mov    DWORD PTR [rsp+0x28],0xffffffff
  4117e9:	cmp    DWORD PTR [rbx+0x20],0x11f
  4117f0:	movzx  eax,BYTE PTR [r13+0x4a]
  4117f5:	mov    BYTE PTR [rsp+0x2d],0x0
  4117fa:	mov    BYTE PTR [rsp+0x2c],al
  4117fe:	mov    rax,QWORD PTR [r13+0x28]
  411802:	mov    QWORD PTR [rsp+0x20],rax
  411807:	mov    QWORD PTR [r13+0x28],r15
  41180b:	mov    DWORD PTR [rbx+0x8],r12d
  41180f:	je     411b79 <__sprintf_chk@plt+0x10889>
  411815:	mov    rax,QWORD PTR [rbx+0x20]
  411819:	mov    rdx,QWORD PTR [rbx+0x28]
  41181d:	mov    DWORD PTR [rbx+0x20],0x11f
  411824:	mov    QWORD PTR [rbx+0x10],rax
  411828:	mov    QWORD PTR [rbx+0x18],rdx
  41182c:	mov    rdi,rbx
  41182f:	call   410f10 <__sprintf_chk@plt+0xfc20>
  411834:	mov    edx,DWORD PTR [rbx+0x10]
  411837:	mov    r9,rax
  41183a:	cmp    edx,0x3d
  41183d:	je     411cd6 <__sprintf_chk@plt+0x109e6>
  411843:	cmp    edx,0x10b
  411849:	je     411b86 <__sprintf_chk@plt+0x10896>
  41184f:	cmp    edx,0x2c
  411852:	je     411b86 <__sprintf_chk@plt+0x10896>
  411858:	lea    rsi,[rip+0x54fa]        # 416d59 <__sprintf_chk@plt+0x15a69>
  41185f:	mov    rdi,rbx
  411862:	call   40e6e0 <__sprintf_chk@plt+0xd3f0>
  411867:	nop    WORD PTR [rax+rax*1+0x0]
  411870:	cmp    DWORD PTR [rbx+0x20],0x11f
  411877:	mov    DWORD PTR [rbx+0x8],r12d
  41187b:	je     411b45 <__sprintf_chk@plt+0x10855>
  411881:	mov    rax,QWORD PTR [rbx+0x20]
  411885:	mov    rdx,QWORD PTR [rbx+0x28]
  411889:	mov    DWORD PTR [rbx+0x20],0x11f
  411890:	mov    QWORD PTR [rbx+0x10],rax
  411894:	mov    QWORD PTR [rbx+0x18],rdx
  411898:	mov    rdi,rbx
  41189b:	call   413d70 <__sprintf_chk@plt+0x12a80>
  4118a0:	mov    ecx,r12d
  4118a3:	mov    edx,0x103
  4118a8:	mov    esi,0x106
  4118ad:	mov    rdi,rbx
  4118b0:	call   4111d0 <__sprintf_chk@plt+0xfee0>
  4118b5:	nop    DWORD PTR [rax]
  4118b8:	mov    esi,0x3b
  4118bd:	mov    rdi,rbx
  4118c0:	call   411170 <__sprintf_chk@plt+0xfe80>
  4118c5:	mov    rax,QWORD PTR [rbx+0x30]
  4118c9:	movzx  edx,BYTE PTR [rax+0x4a]
  4118cd:	mov    DWORD PTR [rax+0x3c],edx
  4118d0:	jmp    4112b0 <__sprintf_chk@plt+0xffc0>
  4118d5:	nop    DWORD PTR [rax]
  4118d8:	cmp    DWORD PTR [rbx+0x20],0x11f
  4118df:	mov    DWORD PTR [rbx+0x8],r12d
  4118e3:	je     411b5f <__sprintf_chk@plt+0x1086f>
  4118e9:	mov    rax,QWORD PTR [rbx+0x20]
  4118ed:	mov    rdx,QWORD PTR [rbx+0x28]
  4118f1:	mov    DWORD PTR [rbx+0x20],0x11f
  4118f8:	mov    QWORD PTR [rbx+0x10],rax
  4118fc:	mov    QWORD PTR [rbx+0x18],rdx
  411900:	mov    rdi,rbx
  411903:	call   40fc10 <__sprintf_chk@plt+0xe920>
  411908:	mov    esi,0x3b
  41190d:	mov    rdi,rbx
  411910:	call   411170 <__sprintf_chk@plt+0xfe80>
  411915:	mov    rax,QWORD PTR [rbx+0x30]
  411919:	movzx  edx,BYTE PTR [rax+0x4a]
  41191d:	mov    DWORD PTR [rax+0x3c],edx
  411920:	mov    rax,QWORD PTR [rbx+0x38]
  411924:	sub    WORD PTR [rax+0x60],0x1
  411929:	mov    rax,QWORD PTR [rsp+0x68]
  41192e:	xor    rax,QWORD PTR fs:0x28
  411937:	jne    411eb8 <__sprintf_chk@plt+0x10bc8>
  41193d:	add    rsp,0x78
  411941:	pop    rbx
  411942:	pop    rbp
  411943:	pop    r12
  411945:	pop    r13
  411947:	pop    r14
  411949:	pop    r15
  41194b:	ret    
  41194c:	nop    DWORD PTR [rax+0x0]
  411950:	mov    rsi,QWORD PTR [rsp+0x8]
  411955:	mov    rdi,rbx
  411958:	mov    rbp,QWORD PTR [rbx+0x30]
  41195c:	call   4135b0 <__sprintf_chk@plt+0x122c0>
  411961:	cmp    DWORD PTR [rsp+0x48],0xd
  411966:	je     411a39 <__sprintf_chk@plt+0x10749>
  41196c:	mov    edx,0x1
  411971:	mov    rsi,r14
  411974:	mov    rdi,rbx
  411977:	mov    QWORD PTR [rsp+0x40],0x0
  411980:	call   413850 <__sprintf_chk@plt+0x12560>
  411985:	jmp    4118b8 <__sprintf_chk@plt+0x105c8>
  41198a:	nop    WORD PTR [rax+rax*1+0x0]
  411990:	mov    rdi,rbx
  411993:	lea    ebp,[r12+0x1]
  411998:	call   410f10 <__sprintf_chk@plt+0xfc20>
  41199d:	mov    edx,r12d
  4119a0:	mov    rsi,rax
  4119a3:	mov    rdi,rbx
  4119a6:	call   410010 <__sprintf_chk@plt+0xed20>
  4119ab:	mov    esi,0x2c
  4119b0:	mov    rdi,rbx
  4119b3:	mov    r12d,ebp
  4119b6:	call   411170 <__sprintf_chk@plt+0xfe80>
  4119bb:	test   eax,eax
  4119bd:	jne    411990 <__sprintf_chk@plt+0x106a0>
  4119bf:	mov    esi,0x3d
  4119c4:	mov    rdi,rbx
  4119c7:	call   411170 <__sprintf_chk@plt+0xfe80>
  4119cc:	test   eax,eax
  4119ce:	jne    411b28 <__sprintf_chk@plt+0x10838>
  4119d4:	mov    DWORD PTR [rsp+0x40],0x0
  4119dc:	mov    rdi,QWORD PTR [rbx+0x30]
  4119e0:	mov    edx,eax
  4119e2:	mov    rcx,r14
  4119e5:	mov    esi,ebp
  4119e7:	call   40fa40 <__sprintf_chk@plt+0xe750>
  4119ec:	mov    rcx,QWORD PTR [rbx+0x30]
  4119f0:	mov    eax,ebp
  4119f2:	lea    r8d,[rbp-0x1]
  4119f6:	add    al,BYTE PTR [rcx+0x4a]
  4119f9:	mov    rdx,QWORD PTR [rcx]
  4119fc:	mov    esi,DWORD PTR [rcx+0x30]
  4119ff:	mov    BYTE PTR [rcx+0x4a],al
  411a02:	movzx  eax,al
  411a05:	mov    rdi,QWORD PTR [rdx+0x30]
  411a09:	sub    eax,ebp
  411a0b:	movsxd rdx,eax
  411a0e:	lea    rax,[rcx+rdx*2+0xc4]
  411a16:	lea    rdx,[rdx+r8*1+0x63]
  411a1b:	lea    rcx,[rcx+rdx*2]
  411a1f:	nop
  411a20:	movzx  edx,WORD PTR [rax]
  411a23:	add    rax,0x2
  411a27:	shl    rdx,0x4
  411a2b:	cmp    rax,rcx
  411a2e:	mov    DWORD PTR [rdi+rdx*1+0x8],esi
  411a32:	jne    411a20 <__sprintf_chk@plt+0x10730>
  411a34:	jmp    4118b8 <__sprintf_chk@plt+0x105c8>
  411a39:	mov    rax,QWORD PTR [rbp+0x0]
  411a3d:	movsxd rdx,DWORD PTR [rsp+0x50]
  411a42:	mov    rax,QWORD PTR [rax+0x18]
  411a46:	lea    rdx,[rax+rdx*4]
  411a4a:	mov    eax,DWORD PTR [rdx]
  411a4c:	and    eax,0xff803fff
  411a51:	or     ah,0x40
  411a54:	mov    DWORD PTR [rdx],eax
  411a56:	jmp    4118b8 <__sprintf_chk@plt+0x105c8>
  411a5b:	nop    DWORD PTR [rax+rax*1+0x0]
  411a60:	lea    rsi,[rip+0x58f9]        # 417360 <__sprintf_chk@plt+0x16070>
  411a67:	xor    edx,edx
  411a69:	call   40e6e0 <__sprintf_chk@plt+0xd3f0>
  411a6e:	xchg   ax,ax
  411a70:	cmp    eax,0x3b
  411a73:	mov    esi,0x80001e
  411a78:	jne    411425 <__sprintf_chk@plt+0x10135>
  411a7e:	mov    rax,QWORD PTR [rbp+0x18]
  411a82:	mov    rdi,rbp
  411a85:	mov    edx,DWORD PTR [rax+0x8]
  411a88:	call   40e980 <__sprintf_chk@plt+0xd690>
  411a8d:	jmp    411908 <__sprintf_chk@plt+0x10618>
  411a92:	mov    rdi,r13
  411a95:	call   40f2a0 <__sprintf_chk@plt+0xdfb0>
  411a9a:	mov    rdi,QWORD PTR [rbx+0x30]
  411a9e:	mov    edx,ebp
  411aa0:	mov    esi,r12d
  411aa3:	call   40f270 <__sprintf_chk@plt+0xdf80>
  411aa8:	jmp    41156f <__sprintf_chk@plt+0x1027f>
  411aad:	mov    rdi,rbp
  411ab0:	call   40f070 <__sprintf_chk@plt+0xdd80>
  411ab5:	mov    rsi,r14
  411ab8:	mov    edx,eax
  411aba:	mov    rdi,rbp
  411abd:	call   40f000 <__sprintf_chk@plt+0xdd10>
  411ac2:	mov    eax,DWORD PTR [rbp+0x30]
  411ac5:	mov    rsi,QWORD PTR [rsp]
  411ac9:	mov    edx,r13d
  411acc:	mov    rdi,rbp
  411acf:	mov    DWORD PTR [rbp+0x34],eax
  411ad2:	call   40f000 <__sprintf_chk@plt+0xdd10>
  411ad7:	cmp    DWORD PTR [rbx+0x20],0x11f
  411ade:	mov    eax,DWORD PTR [rbx+0x4]
  411ae1:	mov    DWORD PTR [rbx+0x8],eax
  411ae4:	je     411eab <__sprintf_chk@plt+0x10bbb>
  411aea:	mov    rax,QWORD PTR [rbx+0x20]
  411aee:	mov    rdx,QWORD PTR [rbx+0x28]
  411af2:	mov    DWORD PTR [rbx+0x20],0x11f
  411af9:	mov    QWORD PTR [rbx+0x10],rax
  411afd:	mov    QWORD PTR [rbx+0x18],rdx
  411b01:	mov    rdi,rbx
  411b04:	call   413d70 <__sprintf_chk@plt+0x12a80>
  411b09:	jmp    411708 <__sprintf_chk@plt+0x10418>
  411b0e:	mov    rdi,rbx
  411b11:	call   410ef0 <__sprintf_chk@plt+0xfc00>
  411b16:	jmp    41132c <__sprintf_chk@plt+0x1003c>
  411b1b:	mov    rdi,rbx
  411b1e:	call   410ef0 <__sprintf_chk@plt+0xfc00>
  411b23:	jmp    411768 <__sprintf_chk@plt+0x10478>
  411b28:	mov    rsi,r14
  411b2b:	mov    rdi,rbx
  411b2e:	call   413300 <__sprintf_chk@plt+0x12010>
  411b33:	jmp    4119dc <__sprintf_chk@plt+0x106ec>
  411b38:	mov    rdi,rbx
  411b3b:	call   410ef0 <__sprintf_chk@plt+0xfc00>
  411b40:	jmp    4113fc <__sprintf_chk@plt+0x1010c>
  411b45:	mov    rdi,rbx
  411b48:	call   410ef0 <__sprintf_chk@plt+0xfc00>
  411b4d:	jmp    411898 <__sprintf_chk@plt+0x105a8>
  411b52:	mov    rdi,rbx
  411b55:	call   410ef0 <__sprintf_chk@plt+0xfc00>
  411b5a:	jmp    411501 <__sprintf_chk@plt+0x10211>
  411b5f:	mov    rdi,rbx
  411b62:	call   410ef0 <__sprintf_chk@plt+0xfc00>
  411b67:	jmp    411900 <__sprintf_chk@plt+0x10610>
  411b6c:	mov    rdi,rbx
  411b6f:	call   410ef0 <__sprintf_chk@plt+0xfc00>
  411b74:	jmp    4115a8 <__sprintf_chk@plt+0x102b8>
  411b79:	mov    rdi,rbx
  411b7c:	call   410ef0 <__sprintf_chk@plt+0xfc00>
  411b81:	jmp    41182c <__sprintf_chk@plt+0x1053c>
  411b86:	mov    rax,QWORD PTR [rbx+0x30]
  411b8a:	lea    rbp,[rbx+0x30]
  411b8e:	mov    rsi,QWORD PTR [rbx+0x38]
  411b92:	lea    rdx,[rip+0x5196]        # 416d2f <__sprintf_chk@plt+0x15a3f>
  411b99:	mov    ecx,0xf
  411b9e:	mov    QWORD PTR [rsp],r9
  411ba2:	mov    rdi,rbp
  411ba5:	mov    QWORD PTR [rsp+0x10],rax
  411baa:	mov    eax,DWORD PTR [rax+0x3c]
  411bad:	mov    DWORD PTR [rsp+0x18],eax
  411bb1:	call   40b780 <__sprintf_chk@plt+0xa490>
  411bb6:	xor    edx,edx
  411bb8:	mov    rsi,rax
  411bbb:	mov    rdi,rbx
  411bbe:	call   410010 <__sprintf_chk@plt+0xed20>
  411bc3:	mov    rsi,QWORD PTR [rbx+0x38]
  411bc7:	lea    rdx,[rip+0x5171]        # 416d3f <__sprintf_chk@plt+0x15a4f>
  411bce:	mov    ecx,0xb
  411bd3:	mov    rdi,rbp
  411bd6:	call   40b780 <__sprintf_chk@plt+0xa490>
  411bdb:	mov    edx,0x1
  411be0:	mov    rsi,rax
  411be3:	mov    rdi,rbx
  411be6:	call   410010 <__sprintf_chk@plt+0xed20>
  411beb:	mov    rsi,QWORD PTR [rbx+0x38]
  411bef:	lea    rdx,[rip+0x5155]        # 416d4b <__sprintf_chk@plt+0x15a5b>
  411bf6:	mov    ecx,0xd
  411bfb:	mov    rdi,rbp
  411bfe:	mov    ebp,0x4
  411c03:	call   40b780 <__sprintf_chk@plt+0xa490>
  411c08:	mov    edx,0x2
  411c0d:	mov    rsi,rax
  411c10:	mov    rdi,rbx
  411c13:	call   410010 <__sprintf_chk@plt+0xed20>
  411c18:	mov    r9,QWORD PTR [rsp]
  411c1c:	mov    edx,0x3
  411c21:	mov    rdi,rbx
  411c24:	mov    rsi,r9
  411c27:	call   410010 <__sprintf_chk@plt+0xed20>
  411c2c:	jmp    411c4e <__sprintf_chk@plt+0x1095e>
  411c2e:	xchg   ax,ax
  411c30:	lea    eax,[rbp+0x1]
  411c33:	mov    rdi,rbx
  411c36:	mov    DWORD PTR [rsp],eax
  411c39:	call   410f10 <__sprintf_chk@plt+0xfc20>
  411c3e:	mov    edx,ebp
  411c40:	mov    rsi,rax
  411c43:	mov    rdi,rbx
  411c46:	call   410010 <__sprintf_chk@plt+0xed20>
  411c4b:	mov    ebp,DWORD PTR [rsp]
  411c4e:	mov    esi,0x2c
  411c53:	mov    rdi,rbx
  411c56:	call   411170 <__sprintf_chk@plt+0xfe80>
  411c5b:	test   eax,eax
  411c5d:	jne    411c30 <__sprintf_chk@plt+0x10940>
  411c5f:	mov    esi,0x10b
  411c64:	mov    rdi,rbx
  411c67:	call   411120 <__sprintf_chk@plt+0xfe30>
  411c6c:	mov    eax,DWORD PTR [rbx+0x4]
  411c6f:	mov    rsi,r14
  411c72:	mov    rdi,rbx
  411c75:	mov    DWORD PTR [rsp],eax
  411c78:	call   413300 <__sprintf_chk@plt+0x12010>
  411c7d:	mov    rdi,QWORD PTR [rbx+0x30]
  411c81:	mov    rcx,r14
  411c84:	mov    edx,eax
  411c86:	mov    esi,0x3
  411c8b:	call   40fa40 <__sprintf_chk@plt+0xe750>
  411c90:	mov    rdi,QWORD PTR [rsp+0x10]
  411c95:	mov    esi,0x3
  411c9a:	call   40f340 <__sprintf_chk@plt+0xe050>
  411c9f:	mov    edx,DWORD PTR [rsp]
  411ca2:	mov    esi,DWORD PTR [rsp+0x18]
  411ca6:	lea    ecx,[rbp-0x3]
  411ca9:	xor    r8d,r8d
  411cac:	mov    rdi,rbx
  411caf:	call   413e50 <__sprintf_chk@plt+0x12b60>
  411cb4:	mov    rdi,rbx
  411cb7:	mov    ecx,r12d
  411cba:	mov    edx,0x108
  411cbf:	mov    esi,0x106
  411cc4:	call   4111d0 <__sprintf_chk@plt+0xfee0>
  411cc9:	mov    rdi,r13
  411ccc:	call   40f2a0 <__sprintf_chk@plt+0xdfb0>
  411cd1:	jmp    4118b8 <__sprintf_chk@plt+0x105c8>
  411cd6:	mov    rbp,QWORD PTR [rbx+0x30]
  411cda:	mov    QWORD PTR [rsp+0x18],rax
  411cdf:	lea    rdx,[rip+0x5026]        # 416d0c <__sprintf_chk@plt+0x15a1c>
  411ce6:	mov    rsi,QWORD PTR [rbx+0x38]
  411cea:	mov    ecx,0xb
  411cef:	mov    eax,DWORD PTR [rbp+0x3c]
  411cf2:	mov    DWORD PTR [rsp+0x10],eax
  411cf6:	lea    rax,[rbx+0x30]
  411cfa:	mov    rdi,rax
  411cfd:	mov    QWORD PTR [rsp],rax
  411d01:	call   40b780 <__sprintf_chk@plt+0xa490>
  411d06:	xor    edx,edx
  411d08:	mov    rsi,rax
  411d0b:	mov    rdi,rbx
  411d0e:	call   410010 <__sprintf_chk@plt+0xed20>
  411d13:	mov    rsi,QWORD PTR [rbx+0x38]
  411d17:	mov    rdi,QWORD PTR [rsp]
  411d1b:	lea    rdx,[rip+0x4ff6]        # 416d18 <__sprintf_chk@plt+0x15a28>
  411d22:	mov    ecx,0xb
  411d27:	call   40b780 <__sprintf_chk@plt+0xa490>
  411d2c:	mov    edx,0x1
  411d31:	mov    rsi,rax
  411d34:	mov    rdi,rbx
  411d37:	call   410010 <__sprintf_chk@plt+0xed20>
  411d3c:	mov    rsi,QWORD PTR [rbx+0x38]
  411d40:	mov    rdi,QWORD PTR [rsp]
  411d44:	lea    rdx,[rip+0x4fd9]        # 416d24 <__sprintf_chk@plt+0x15a34>
  411d4b:	mov    ecx,0xa
  411d50:	call   40b780 <__sprintf_chk@plt+0xa490>
  411d55:	mov    edx,0x2
  411d5a:	mov    rsi,rax
  411d5d:	mov    rdi,rbx
  411d60:	call   410010 <__sprintf_chk@plt+0xed20>
  411d65:	mov    r9,QWORD PTR [rsp+0x18]
  411d6a:	mov    edx,0x3
  411d6f:	mov    rdi,rbx
  411d72:	mov    rsi,r9
  411d75:	call   410010 <__sprintf_chk@plt+0xed20>
  411d7a:	mov    esi,0x3d
  411d7f:	mov    rdi,rbx
  411d82:	call   411120 <__sprintf_chk@plt+0xfe30>
  411d87:	mov    rdi,rbx
  411d8a:	call   413a80 <__sprintf_chk@plt+0x12790>
  411d8f:	mov    esi,0x2c
  411d94:	mov    rdi,rbx
  411d97:	call   411120 <__sprintf_chk@plt+0xfe30>
  411d9c:	mov    rdi,rbx
  411d9f:	call   413a80 <__sprintf_chk@plt+0x12790>
  411da4:	mov    esi,0x2c
  411da9:	mov    rdi,rbx
  411dac:	call   411170 <__sprintf_chk@plt+0xfe80>
  411db1:	test   eax,eax
  411db3:	jne    411e44 <__sprintf_chk@plt+0x10b54>
  411db9:	vmovsd xmm0,QWORD PTR [rip+0x56b7]        # 417478 <__sprintf_chk@plt+0x16188>
  411dc1:	mov    rdx,r14
  411dc4:	mov    rsi,r14
  411dc7:	mov    rdi,rbp
  411dca:	mov    DWORD PTR [rsp+0x48],0x3
  411dd2:	vmovsd QWORD PTR [rsp+0x40],xmm0
  411dd8:	call   4086c0 <__sprintf_chk@plt+0x73d0>
  411ddd:	mov    ecx,0x6
  411de2:	mov    rdx,QWORD PTR [rbp+0x18]
  411de6:	shl    eax,0xe
  411de9:	shlx   esi,DWORD PTR [rbp+0x3c],ecx
  411def:	mov    rdi,rbp
  411df2:	mov    edx,DWORD PTR [rdx+0x8]
  411df5:	or     esi,0x1
  411df8:	or     esi,eax
  411dfa:	call   40e980 <__sprintf_chk@plt+0xd690>
  411dff:	mov    esi,0x1
  411e04:	mov    rdi,rbp
  411e07:	call   40f340 <__sprintf_chk@plt+0xe050>
  411e0c:	add    DWORD PTR [rbp+0x3c],0x1
  411e10:	mov    esi,DWORD PTR [rsp+0x10]
  411e14:	mov    r8d,0x1
  411e1a:	mov    ecx,0x1
  411e1f:	mov    edx,r12d
  411e22:	mov    rdi,rbx
  411e25:	call   413e50 <__sprintf_chk@plt+0x12b60>
  411e2a:	jmp    411cb4 <__sprintf_chk@plt+0x109c4>
  411e2f:	mov    rsi,r15
  411e32:	mov    rdi,rbx
  411e35:	call   411080 <__sprintf_chk@plt+0xfd90>
  411e3a:	mov    edx,0x1
  411e3f:	jmp    41179e <__sprintf_chk@plt+0x104ae>
  411e44:	mov    rdi,rbx
  411e47:	call   413a80 <__sprintf_chk@plt+0x12790>
  411e4c:	jmp    411e10 <__sprintf_chk@plt+0x10b20>
  411e4e:	lea    rdx,[r13+0x8]
  411e52:	mov    ecx,0xffffffff
  411e57:	mov    rdi,rbp
  411e5a:	call   40f9a0 <__sprintf_chk@plt+0xe6b0>
  411e5f:	cmp    DWORD PTR [rsp+0x40],0xd
  411e64:	jne    411e87 <__sprintf_chk@plt+0x10b97>
  411e66:	cmp    r12d,0x1
  411e6a:	jne    411e87 <__sprintf_chk@plt+0x10b97>
  411e6c:	mov    rax,QWORD PTR [rbp+0x0]
  411e70:	movsxd rdx,DWORD PTR [rsp+0x48]
  411e75:	mov    rax,QWORD PTR [rax+0x18]
  411e79:	lea    rdx,[rax+rdx*4]
  411e7d:	mov    eax,DWORD PTR [rdx]
  411e7f:	and    eax,0xffffffc0
  411e82:	or     eax,0x1d
  411e85:	mov    DWORD PTR [rdx],eax
  411e87:	movzx  esi,BYTE PTR [rbp+0x4a]
  411e8b:	shl    esi,0x6
  411e8e:	or     esi,0x1e
  411e91:	jmp    411471 <__sprintf_chk@plt+0x10181>
  411e96:	call   40f3d0 <__sprintf_chk@plt+0xe0e0>
  411e9b:	shl    eax,0x6
  411e9e:	mov    esi,eax
  411ea0:	or     esi,0x100001e
  411ea6:	jmp    411471 <__sprintf_chk@plt+0x10181>
  411eab:	mov    rdi,rbx
  411eae:	call   410ef0 <__sprintf_chk@plt+0xfc00>
  411eb3:	jmp    411b01 <__sprintf_chk@plt+0x10811>
  411eb8:	call   401100 <__stack_chk_fail@plt>
  411ebd:	nop    DWORD PTR [rax]
  411ec0:	push   r15
  411ec2:	push   r14
  411ec4:	mov    r14d,edx
  411ec7:	push   r13
  411ec9:	push   r12
  411ecb:	mov    r13,rdi
  411ece:	push   rbp
  411ecf:	push   rbx
  411ed0:	mov    rbp,rsi
  411ed3:	mov    r12d,ecx
  411ed6:	sub    rsp,0x278
  411edd:	lea    rbx,[rsp+0x10]
  411ee2:	mov    rax,QWORD PTR fs:0x28
  411eeb:	mov    QWORD PTR [rsp+0x268],rax
  411ef3:	xor    eax,eax
  411ef5:	mov    rsi,rbx
  411ef8:	call   407680 <__sprintf_chk@plt+0x6390>
  411efd:	mov    rax,QWORD PTR [rsp+0x10]
  411f02:	mov    esi,0x28
  411f07:	mov    rdi,r13
  411f0a:	mov    DWORD PTR [rax+0x60],r12d
  411f0e:	call   411120 <__sprintf_chk@plt+0xfe30>
  411f13:	test   r14d,r14d
  411f16:	jne    4121c0 <__sprintf_chk@plt+0x10ed0>
  411f1c:	mov    r14,QWORD PTR [r13+0x30]
  411f20:	mov    r15,QWORD PTR [r14]
  411f23:	mov    BYTE PTR [r15+0x72],0x0
  411f28:	mov    eax,DWORD PTR [r13+0x10]
  411f2c:	cmp    eax,0x29
  411f2f:	je     41222b <__sprintf_chk@plt+0x10f3b>
  411f35:	xor    edx,edx
  411f37:	cmp    eax,0x117
  411f3c:	je     411f9d <__sprintf_chk@plt+0x10cad>
  411f3e:	cmp    eax,0x11d
  411f43:	jne    4121a8 <__sprintf_chk@plt+0x10eb8>
  411f49:	lea    eax,[rdx+0x1]
  411f4c:	mov    rdi,r13
  411f4f:	mov    DWORD PTR [rsp+0xc],edx
  411f53:	mov    DWORD PTR [rsp+0x8],eax
  411f57:	call   410f10 <__sprintf_chk@plt+0xfc20>
  411f5c:	mov    edx,DWORD PTR [rsp+0xc]
  411f60:	mov    rsi,rax
  411f63:	mov    rdi,r13
  411f66:	call   410010 <__sprintf_chk@plt+0xed20>
  411f6b:	movzx  r9d,BYTE PTR [r15+0x72]
  411f70:	test   r9b,r9b
  411f73:	jne    4122a4 <__sprintf_chk@plt+0x10fb4>
  411f79:	mov    esi,0x2c
  411f7e:	mov    rdi,r13
  411f81:	call   411170 <__sprintf_chk@plt+0xfe80>
  411f86:	test   eax,eax
  411f88:	je     41229f <__sprintf_chk@plt+0x10faf>
  411f8e:	mov    eax,DWORD PTR [r13+0x10]
  411f92:	mov    edx,DWORD PTR [rsp+0x8]
  411f96:	cmp    eax,0x117
  411f9b:	jne    411f3e <__sprintf_chk@plt+0x10c4e>
  411f9d:	cmp    DWORD PTR [r13+0x20],0x11f
  411fa5:	mov    eax,DWORD PTR [r13+0x4]
  411fa9:	mov    DWORD PTR [r13+0x8],eax
  411fad:	je     41228a <__sprintf_chk@plt+0x10f9a>
  411fb3:	mov    rsi,QWORD PTR [r13+0x20]
  411fb7:	mov    rdi,QWORD PTR [r13+0x28]
  411fbb:	mov    DWORD PTR [r13+0x20],0x11f
  411fc3:	mov    QWORD PTR [r13+0x10],rsi
  411fc7:	mov    QWORD PTR [r13+0x18],rdi
  411fcb:	movzx  r9d,BYTE PTR [r15+0x72]
  411fd0:	or     r9d,0x2
  411fd4:	mov    BYTE PTR [r15+0x72],r9b
  411fd8:	mov    r10,QWORD PTR [r13+0x30]
  411fdc:	mov    eax,edx
  411fde:	add    al,BYTE PTR [r10+0x4a]
  411fe2:	test   edx,edx
  411fe4:	mov    BYTE PTR [r10+0x4a],al
  411fe8:	je     41202c <__sprintf_chk@plt+0x10d3c>
  411fea:	mov    rcx,QWORD PTR [r10]
  411fed:	mov    esi,DWORD PTR [r10+0x30]
  411ff1:	mov    rdi,QWORD PTR [rcx+0x30]
  411ff5:	movzx  ecx,al
  411ff8:	sub    ecx,edx
  411ffa:	sub    edx,0x1
  411ffd:	movsxd rcx,ecx
  412000:	lea    rdx,[rcx+rdx*1+0x63]
  412005:	lea    rax,[r10+rcx*2+0xc4]
  41200d:	lea    rcx,[r10+rdx*2]
  412011:	nop    DWORD PTR [rax+0x0]
  412018:	movzx  edx,WORD PTR [rax]
  41201b:	add    rax,0x2
  41201f:	shl    rdx,0x4
  412023:	cmp    rcx,rax
  412026:	mov    DWORD PTR [rdi+rdx*1+0x8],esi
  41202a:	jne    412018 <__sprintf_chk@plt+0x10d28>
  41202c:	movzx  eax,BYTE PTR [r14+0x4a]
  412031:	and    r9d,0x1
  412035:	mov    edx,eax
  412037:	mov    rdi,r14
  41203a:	sub    edx,r9d
  41203d:	mov    BYTE PTR [r15+0x71],dl
  412041:	movzx  r15d,al
  412045:	mov    esi,r15d
  412048:	call   40f340 <__sprintf_chk@plt+0xe050>
  41204d:	add    DWORD PTR [r14+0x3c],r15d
  412051:	mov    esi,0x29
  412056:	mov    rdi,r13
  412059:	call   411120 <__sprintf_chk@plt+0xfe30>
  41205e:	mov    rdi,r13
  412061:	call   411260 <__sprintf_chk@plt+0xff70>
  412066:	mov    edx,DWORD PTR [r13+0x4]
  41206a:	mov    rax,QWORD PTR [rsp+0x10]
  41206f:	mov    ecx,r12d
  412072:	mov    esi,0x106
  412077:	mov    rdi,r13
  41207a:	mov    DWORD PTR [rax+0x64],edx
  41207d:	mov    edx,0x109
  412082:	call   4111d0 <__sprintf_chk@plt+0xfee0>
  412087:	mov    rdi,r13
  41208a:	call   40ee20 <__sprintf_chk@plt+0xdb30>
  41208f:	mov    r12,QWORD PTR [r13+0x30]
  412093:	mov    r15,QWORD PTR [r12]
  412097:	movsxd rdx,DWORD PTR [r12+0x44]
  41209c:	mov    r14d,DWORD PTR [r15+0x58]
  4120a0:	cmp    r14d,edx
  4120a3:	jle    412238 <__sprintf_chk@plt+0x10f48>
  4120a9:	mov    rax,QWORD PTR [r15+0x20]
  4120ad:	mov    rsi,QWORD PTR [rsp+0x10]
  4120b2:	lea    ecx,[rdx+0x1]
  4120b5:	mov    DWORD PTR [r12+0x44],ecx
  4120ba:	mov    QWORD PTR [rax+rdx*8],rsi
  4120be:	mov    rsi,QWORD PTR [rsp+0x10]
  4120c3:	test   BYTE PTR [rsi+0x9],0x3
  4120c7:	je     4120f9 <__sprintf_chk@plt+0x10e09>
  4120c9:	movzx  eax,BYTE PTR [r15+0x9]
  4120ce:	test   al,0x4
  4120d0:	je     4120f9 <__sprintf_chk@plt+0x10e09>
  4120d2:	mov    rdx,QWORD PTR [r13+0x38]
  4120d6:	mov    rdi,QWORD PTR [rdx+0x20]
  4120da:	cmp    BYTE PTR [rdi+0x21],0x1
  4120de:	je     4122ad <__sprintf_chk@plt+0x10fbd>
  4120e4:	movzx  edx,BYTE PTR [rdi+0x20]
  4120e8:	and    eax,0xfffffff8
  4120eb:	and    edx,0x3
  4120ee:	or     eax,edx
  4120f0:	mov    BYTE PTR [r15+0x9],al
  4120f4:	mov    ecx,DWORD PTR [r12+0x44]
  4120f9:	mov    rax,QWORD PTR [r12+0x18]
  4120fe:	lea    esi,[rcx-0x1]
  412101:	mov    rdi,r12
  412104:	shl    esi,0xe
  412107:	mov    edx,DWORD PTR [rax+0x8]
  41210a:	or     esi,0x24
  41210d:	call   40e980 <__sprintf_chk@plt+0xd690>
  412112:	mov    DWORD PTR [rbp+0x8],eax
  412115:	mov    rax,QWORD PTR [rsp+0x10]
  41211a:	mov    DWORD PTR [rbp+0x10],0xffffffff
  412121:	mov    DWORD PTR [rbp+0x14],0xffffffff
  412128:	mov    DWORD PTR [rbp+0x0],0xb
  41212f:	cmp    BYTE PTR [rax+0x70],0x0
  412133:	je     41217a <__sprintf_chk@plt+0x10e8a>
  412135:	mov    ebp,0x1
  41213a:	nop    WORD PTR [rax+rax*1+0x0]
  412140:	xor    eax,eax
  412142:	cmp    BYTE PTR [rbx+rbp*2+0x49],0x6
  412147:	movzx  esi,BYTE PTR [rbx+rbp*2+0x4a]
  41214c:	mov    rdx,QWORD PTR [r12+0x18]
  412151:	mov    rdi,r12
  412154:	setne  al
  412157:	mov    edx,DWORD PTR [rdx+0x8]
  41215a:	shl    esi,0x17
  41215d:	shl    eax,0x2
  412160:	or     esi,eax
  412162:	call   40e980 <__sprintf_chk@plt+0xd690>
  412167:	mov    rax,QWORD PTR [rsp+0x10]
  41216c:	mov    edx,ebp
  41216e:	add    rbp,0x1
  412172:	movzx  eax,BYTE PTR [rax+0x70]
  412176:	cmp    edx,eax
  412178:	jl     412140 <__sprintf_chk@plt+0x10e50>
  41217a:	mov    rax,QWORD PTR [rsp+0x268]
  412182:	xor    rax,QWORD PTR fs:0x28
  41218b:	jne    4122bc <__sprintf_chk@plt+0x10fcc>
  412191:	add    rsp,0x278
  412198:	pop    rbx
  412199:	pop    rbp
  41219a:	pop    r12
  41219c:	pop    r13
  41219e:	pop    r14
  4121a0:	pop    r15
  4121a2:	ret    
  4121a3:	nop    DWORD PTR [rax+rax*1+0x0]
  4121a8:	lea    rsi,[rip+0x4bc4]        # 416d73 <__sprintf_chk@plt+0x15a83>
  4121af:	mov    edx,eax
  4121b1:	mov    rdi,r13
  4121b4:	call   40e6e0 <__sprintf_chk@plt+0xd3f0>
  4121b9:	nop    DWORD PTR [rax+0x0]
  4121c0:	mov    rsi,QWORD PTR [r13+0x38]
  4121c4:	lea    rdi,[r13+0x30]
  4121c8:	lea    rdx,[rip+0x4b9f]        # 416d6e <__sprintf_chk@plt+0x15a7e>
  4121cf:	mov    ecx,0x4
  4121d4:	call   40b780 <__sprintf_chk@plt+0xa490>
  4121d9:	xor    edx,edx
  4121db:	mov    rsi,rax
  4121de:	mov    rdi,r13
  4121e1:	call   410010 <__sprintf_chk@plt+0xed20>
  4121e6:	mov    r14,QWORD PTR [r13+0x30]
  4121ea:	movzx  eax,BYTE PTR [r14+0x4a]
  4121ef:	mov    r15,QWORD PTR [r14]
  4121f2:	mov    edx,DWORD PTR [r14+0x30]
  4121f6:	add    eax,0x1
  4121f9:	mov    BYTE PTR [r14+0x4a],al
  4121fd:	movzx  eax,al
  412200:	sub    eax,0x1
  412203:	cdqe   
  412205:	movzx  eax,WORD PTR [r14+rax*2+0xc4]
  41220e:	shl    rax,0x4
  412212:	add    rax,QWORD PTR [r15+0x30]
  412216:	mov    DWORD PTR [rax+0x8],edx
  412219:	mov    BYTE PTR [r15+0x72],0x0
  41221e:	mov    eax,DWORD PTR [r13+0x10]
  412222:	cmp    eax,0x29
  412225:	jne    411f35 <__sprintf_chk@plt+0x10c45>
  41222b:	movzx  eax,BYTE PTR [r14+0x4a]
  412230:	xor    r9d,r9d
  412233:	jmp    412035 <__sprintf_chk@plt+0x10d45>
  412238:	mov    rsi,QWORD PTR [r15+0x20]
  41223c:	mov    rdi,QWORD PTR [r13+0x38]
  412240:	lea    rdx,[r15+0x58]
  412244:	lea    r9,[rip+0x461b]        # 416866 <__sprintf_chk@plt+0x15576>
  41224b:	mov    ecx,0x8
  412250:	mov    r8d,0x3ffff
  412256:	call   408620 <__sprintf_chk@plt+0x7330>
  41225b:	mov    ecx,DWORD PTR [r15+0x58]
  41225f:	mov    QWORD PTR [r15+0x20],rax
  412263:	cmp    ecx,r14d
  412266:	jle    412280 <__sprintf_chk@plt+0x10f90>
  412268:	movsxd rdx,r14d
  41226b:	nop    DWORD PTR [rax+rax*1+0x0]
  412270:	mov    QWORD PTR [rax+rdx*8],0x0
  412278:	add    rdx,0x1
  41227c:	cmp    ecx,edx
  41227e:	jg     412270 <__sprintf_chk@plt+0x10f80>
  412280:	movsxd rdx,DWORD PTR [r12+0x44]
  412285:	jmp    4120ad <__sprintf_chk@plt+0x10dbd>
  41228a:	mov    rdi,r13
  41228d:	mov    DWORD PTR [rsp+0x8],edx
  412291:	call   410ef0 <__sprintf_chk@plt+0xfc00>
  412296:	mov    edx,DWORD PTR [rsp+0x8]
  41229a:	jmp    411fcb <__sprintf_chk@plt+0x10cdb>
  41229f:	movzx  r9d,BYTE PTR [r15+0x72]
  4122a4:	mov    edx,DWORD PTR [rsp+0x8]
  4122a8:	jmp    411fd8 <__sprintf_chk@plt+0x10ce8>
  4122ad:	call   401a50 <__sprintf_chk@plt+0x760>
  4122b2:	mov    ecx,DWORD PTR [r12+0x44]
  4122b7:	jmp    4120f9 <__sprintf_chk@plt+0x10e09>
  4122bc:	call   401100 <__stack_chk_fail@plt>
  4122c1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4122cc:	nop    DWORD PTR [rax+0x0]
  4122d0:	push   r15
  4122d2:	push   r14
  4122d4:	mov    r14,rdi
  4122d7:	push   r13
  4122d9:	push   r12
  4122db:	push   rbp
  4122dc:	push   rbx
  4122dd:	sub    rsp,0x58
  4122e1:	mov    DWORD PTR [rsp+0x4],edx
  4122e5:	mov    rdx,QWORD PTR [rdi+0x38]
  4122e9:	mov    rax,QWORD PTR fs:0x28
  4122f2:	mov    QWORD PTR [rsp+0x48],rax
  4122f7:	xor    eax,eax
  4122f9:	movzx  eax,WORD PTR [rdx+0x60]
  4122fd:	add    eax,0x1
  412300:	cmp    ax,0xc8
  412304:	mov    WORD PTR [rdx+0x60],ax
  412308:	ja     4125b0 <__sprintf_chk@plt+0x112c0>
  41230e:	mov    eax,DWORD PTR [rdi+0x10]
  412311:	mov    rbx,rsi
  412314:	cmp    eax,0x2d
  412317:	je     412a30 <__sprintf_chk@plt+0x11740>
  41231d:	cmp    eax,0x10e
  412322:	je     4123e0 <__sprintf_chk@plt+0x110f0>
  412328:	cmp    eax,0x23
  41232b:	mov    ebp,0x2
  412330:	je     4123e5 <__sprintf_chk@plt+0x110f5>
  412336:	cmp    eax,0x10d
  41233b:	je     412bc9 <__sprintf_chk@plt+0x118d9>
  412341:	jle    412b0d <__sprintf_chk@plt+0x1181d>
  412347:	cmp    eax,0x117
  41234c:	je     412d71 <__sprintf_chk@plt+0x11a81>
  412352:	jle    412b82 <__sprintf_chk@plt+0x11892>
  412358:	cmp    eax,0x11c
  41235d:	je     412cfd <__sprintf_chk@plt+0x11a0d>
  412363:	cmp    eax,0x11e
  412368:	jne    412b2c <__sprintf_chk@plt+0x1183c>
  41236e:	mov    rax,QWORD PTR [r14+0x18]
  412372:	lea    rbp,[rsp+0x30]
  412377:	mov    rdi,QWORD PTR [r14+0x30]
  41237b:	mov    DWORD PTR [rsp+0x38],0x4
  412383:	mov    rdx,rbp
  412386:	mov    rsi,rbp
  412389:	mov    QWORD PTR [rsp+0x30],rax
  41238e:	call   4086c0 <__sprintf_chk@plt+0x73d0>
  412393:	mov    DWORD PTR [rbx+0x10],0xffffffff
  41239a:	mov    DWORD PTR [rbx+0x14],0xffffffff
  4123a1:	mov    DWORD PTR [rbx],0x4
  4123a7:	mov    DWORD PTR [rbx+0x8],eax
  4123aa:	cmp    DWORD PTR [r14+0x20],0x11f
  4123b2:	mov    eax,DWORD PTR [r14+0x4]
  4123b6:	mov    DWORD PTR [r14+0x8],eax
  4123ba:	je     412cf0 <__sprintf_chk@plt+0x11a00>
  4123c0:	mov    rax,QWORD PTR [r14+0x20]
  4123c4:	mov    rdx,QWORD PTR [r14+0x28]
  4123c8:	mov    DWORD PTR [r14+0x20],0x11f
  4123d0:	mov    QWORD PTR [r14+0x10],rax
  4123d4:	mov    QWORD PTR [r14+0x18],rdx
  4123d8:	jmp    41247d <__sprintf_chk@plt+0x1118d>
  4123dd:	nop    DWORD PTR [rax]
  4123e0:	mov    ebp,0x1
  4123e5:	cmp    DWORD PTR [r14+0x20],0x11f
  4123ed:	mov    eax,DWORD PTR [r14+0x4]
  4123f1:	mov    DWORD PTR [r14+0x8],eax
  4123f5:	je     412b00 <__sprintf_chk@plt+0x11810>
  4123fb:	mov    rax,QWORD PTR [r14+0x20]
  4123ff:	mov    rdx,QWORD PTR [r14+0x28]
  412403:	mov    DWORD PTR [r14+0x20],0x11f
  41240b:	mov    QWORD PTR [r14+0x10],rax
  41240f:	mov    QWORD PTR [r14+0x18],rdx
  412413:	mov    edx,0x8
  412418:	mov    rsi,rbx
  41241b:	mov    rdi,r14
  41241e:	call   4122d0 <__sprintf_chk@plt+0x10fe0>
  412423:	cmp    ebp,0x1
  412426:	mov    r13,QWORD PTR [r14+0x30]
  41242a:	mov    DWORD PTR [rsp+0x44],0xffffffff
  412432:	mov    DWORD PTR [rsp+0x40],0xffffffff
  41243a:	mov    DWORD PTR [rsp+0x30],0x5
  412442:	mov    QWORD PTR [rsp+0x38],0x0
  41244b:	je     412a40 <__sprintf_chk@plt+0x11750>
  412451:	cmp    ebp,0x2
  412454:	jne    4125c0 <__sprintf_chk@plt+0x112d0>
  41245a:	lea    rbp,[rsp+0x30]
  41245f:	mov    rsi,rbx
  412462:	mov    rdi,r13
  412465:	call   40f3d0 <__sprintf_chk@plt+0xe0e0>
  41246a:	mov    rcx,rbp
  41246d:	mov    rdx,rbx
  412470:	mov    esi,0x14
  412475:	mov    rdi,r13
  412478:	call   40f580 <__sprintf_chk@plt+0xe290>
  41247d:	mov    eax,DWORD PTR [r14+0x10]
  412481:	cmp    eax,0x5e
  412484:	je     412c41 <__sprintf_chk@plt+0x11951>
  41248a:	jg     4124f0 <__sprintf_chk@plt+0x11200>
  41248c:	cmp    eax,0x2d
  41248f:	je     412c51 <__sprintf_chk@plt+0x11961>
  412495:	jle    412630 <__sprintf_chk@plt+0x11340>
  41249b:	cmp    eax,0x3c
  41249e:	je     412c71 <__sprintf_chk@plt+0x11981>
  4124a4:	cmp    eax,0x3e
  4124a7:	je     412c61 <__sprintf_chk@plt+0x11971>
  4124ad:	cmp    eax,0x2f
  4124b0:	je     412b72 <__sprintf_chk@plt+0x11882>
  4124b6:	mov    r15d,0xf
  4124bc:	nop    DWORD PTR [rax+0x0]
  4124c0:	mov    rax,QWORD PTR [r14+0x38]
  4124c4:	sub    WORD PTR [rax+0x60],0x1
  4124c9:	mov    eax,r15d
  4124cc:	mov    rcx,QWORD PTR [rsp+0x48]
  4124d1:	xor    rcx,QWORD PTR fs:0x28
  4124da:	jne    412dd5 <__sprintf_chk@plt+0x11ae5>
  4124e0:	add    rsp,0x58
  4124e4:	pop    rbx
  4124e5:	pop    rbp
  4124e6:	pop    r12
  4124e8:	pop    r13
  4124ea:	pop    r14
  4124ec:	pop    r15
  4124ee:	ret    
  4124ef:	nop
  4124f0:	cmp    eax,0x118
  4124f5:	je     412c31 <__sprintf_chk@plt+0x11941>
  4124fb:	jle    4125f8 <__sprintf_chk@plt+0x11308>
  412501:	cmp    eax,0x11a
  412506:	mov    edx,0x3
  41250b:	je     412c81 <__sprintf_chk@plt+0x11991>
  412511:	jl     412c09 <__sprintf_chk@plt+0x11919>
  412517:	cmp    eax,0x11b
  41251c:	mov    r15d,0x7
  412522:	jne    4124b6 <__sprintf_chk@plt+0x111c6>
  412524:	nop    DWORD PTR [rax+0x0]
  412528:	cmp    DWORD PTR [rsp+0x4],edx
  41252c:	jae    4124c0 <__sprintf_chk@plt+0x111d0>
  41252e:	lea    rbp,[rsp+0x30]
  412533:	lea    rax,[rbx+0x8]
  412537:	mov    r12d,r15d
  41253a:	mov    QWORD PTR [rsp+0x28],rax
  41253f:	lea    rax,[rbp+0x10]
  412543:	mov    QWORD PTR [rsp+0x10],rax
  412548:	lea    rax,[rbp+0x14]
  41254c:	mov    QWORD PTR [rsp+0x18],rax
  412551:	lea    rax,[rbx+0x10]
  412555:	mov    QWORD PTR [rsp+0x8],rax
  41255a:	nop    WORD PTR [rax+rax*1+0x0]
  412560:	cmp    DWORD PTR [r14+0x20],0x11f
  412568:	mov    eax,DWORD PTR [r14+0x4]
  41256c:	mov    DWORD PTR [r14+0x8],eax
  412570:	je     4129f0 <__sprintf_chk@plt+0x11700>
  412576:	mov    rax,QWORD PTR [r14+0x20]
  41257a:	mov    rdx,QWORD PTR [r14+0x28]
  41257e:	mov    DWORD PTR [r14+0x20],0x11f
  412586:	mov    QWORD PTR [r14+0x10],rax
  41258a:	mov    QWORD PTR [r14+0x18],rdx
  41258e:	cmp    r15d,0xe
  412592:	mov    r13,QWORD PTR [r14+0x30]
  412596:	ja     412829 <__sprintf_chk@plt+0x11539>
  41259c:	lea    rdx,[rip+0x3e45]        # 4163e8 <__sprintf_chk@plt+0x150f8>
  4125a3:	movsxd rax,DWORD PTR [rdx+r12*4]
  4125a7:	add    rax,rdx
  4125aa:	jmp    rax
  4125ac:	nop    DWORD PTR [rax+0x0]
  4125b0:	lea    rsi,[rip+0x4da9]        # 417360 <__sprintf_chk@plt+0x16070>
  4125b7:	xor    edx,edx
  4125b9:	call   40e6e0 <__sprintf_chk@plt+0xd3f0>
  4125be:	xchg   ax,ax
  4125c0:	cmp    DWORD PTR [rbx],0x5
  4125c3:	je     412b3c <__sprintf_chk@plt+0x1184c>
  4125c9:	mov    rsi,rbx
  4125cc:	mov    rdi,r13
  4125cf:	call   40f3d0 <__sprintf_chk@plt+0xe0e0>
  4125d4:	lea    rbp,[rsp+0x30]
  4125d9:	mov    rdx,rbx
  4125dc:	mov    esi,0x12
  4125e1:	mov    rdi,r13
  4125e4:	mov    rcx,rbp
  4125e7:	call   40f580 <__sprintf_chk@plt+0xe290>
  4125ec:	jmp    41247d <__sprintf_chk@plt+0x1118d>
  4125f1:	nop    DWORD PTR [rax+0x0]
  4125f8:	cmp    eax,0x10f
  4125fd:	je     412be9 <__sprintf_chk@plt+0x118f9>
  412603:	cmp    eax,0x116
  412608:	je     412c21 <__sprintf_chk@plt+0x11931>
  41260e:	cmp    eax,0x101
  412613:	jne    4124b6 <__sprintf_chk@plt+0x111c6>
  412619:	mov    edx,0x2
  41261e:	mov    r15d,0xd
  412624:	jmp    412528 <__sprintf_chk@plt+0x11238>
  412629:	nop    DWORD PTR [rax+0x0]
  412630:	cmp    eax,0x2a
  412633:	je     412bf9 <__sprintf_chk@plt+0x11909>
  412639:	cmp    eax,0x2b
  41263c:	je     412c14 <__sprintf_chk@plt+0x11924>
  412642:	cmp    eax,0x25
  412645:	jne    4124b6 <__sprintf_chk@plt+0x111c6>
  41264b:	mov    edx,0x7
  412650:	mov    r15d,0x4
  412656:	jmp    412528 <__sprintf_chk@plt+0x11238>
  41265b:	nop    DWORD PTR [rax+rax*1+0x0]
  412660:	mov    rsi,rbx
  412663:	mov    rdi,r13
  412666:	call   40ea50 <__sprintf_chk@plt+0xd760>
  41266b:	mov    eax,DWORD PTR [rbx]
  41266d:	cmp    eax,0x3
  412670:	je     412a10 <__sprintf_chk@plt+0x11720>
  412676:	cmp    eax,0xa
  412679:	je     412a00 <__sprintf_chk@plt+0x11710>
  41267f:	cmp    eax,0x1
  412682:	je     412a10 <__sprintf_chk@plt+0x11720>
  412688:	mov    edx,0x1
  41268d:	mov    rsi,rbx
  412690:	mov    rdi,r13
  412693:	call   40fad0 <__sprintf_chk@plt+0xe7e0>
  412698:	mov    edx,eax
  41269a:	mov    rsi,QWORD PTR [rsp+0x8]
  41269f:	mov    rdi,r13
  4126a2:	call   40f000 <__sprintf_chk@plt+0xdd10>
  4126a7:	mov    eax,DWORD PTR [r13+0x30]
  4126ab:	mov    edx,DWORD PTR [rbx+0x14]
  4126ae:	lea    rsi,[r13+0x38]
  4126b2:	mov    rdi,r13
  4126b5:	mov    DWORD PTR [r13+0x34],eax
  4126b9:	call   40f000 <__sprintf_chk@plt+0xdd10>
  4126be:	mov    DWORD PTR [rbx+0x14],0xffffffff
  4126c5:	mov    edx,0x1
  4126ca:	mov    rsi,rbp
  4126cd:	mov    rdi,r14
  4126d0:	call   4122d0 <__sprintf_chk@plt+0x10fe0>
  4126d5:	mov    r15d,eax
  4126d8:	mov    rax,QWORD PTR [r14+0x30]
  4126dc:	mov    rsi,rbp
  4126df:	mov    rdi,rax
  4126e2:	mov    QWORD PTR [rsp+0x20],rax
  4126e7:	call   40ea50 <__sprintf_chk@plt+0xd760>
  4126ec:	mov    edx,DWORD PTR [rbx+0x10]
  4126ef:	mov    rsi,QWORD PTR [rsp+0x10]
  4126f4:	mov    rax,QWORD PTR [rsp+0x20]
  4126f9:	mov    rdi,rax
  4126fc:	call   40f000 <__sprintf_chk@plt+0xdd10>
  412701:	mov    rax,QWORD PTR [rsp+0x30]
  412706:	mov    QWORD PTR [rbx],rax
  412709:	mov    rax,QWORD PTR [rsp+0x38]
  41270e:	mov    QWORD PTR [rbx+0x8],rax
  412712:	mov    rax,QWORD PTR [rsp+0x40]
  412717:	mov    QWORD PTR [rbx+0x10],rax
  41271b:	nop    DWORD PTR [rax+rax*1+0x0]
  412720:	cmp    r15d,0xf
  412724:	je     4124c0 <__sprintf_chk@plt+0x111d0>
  41272a:	lea    rax,[rip+0x3f0f]        # 416640 <__sprintf_chk@plt+0x15350>
  412731:	mov    r12d,r15d
  412734:	movzx  eax,BYTE PTR [rax+r12*2]
  412739:	cmp    eax,DWORD PTR [rsp+0x4]
  41273d:	ja     412560 <__sprintf_chk@plt+0x11270>
  412743:	jmp    4124c0 <__sprintf_chk@plt+0x111d0>
  412748:	nop    DWORD PTR [rax+rax*1+0x0]
  412750:	mov    rsi,rbx
  412753:	mov    rdi,r13
  412756:	call   40fb80 <__sprintf_chk@plt+0xe890>
  41275b:	mov    edx,0x2
  412760:	mov    rsi,rbp
  412763:	mov    rdi,r14
  412766:	call   4122d0 <__sprintf_chk@plt+0x10fe0>
  41276b:	mov    r15d,eax
  41276e:	mov    rax,QWORD PTR [r14+0x30]
  412772:	mov    rsi,rbp
  412775:	mov    rdi,rax
  412778:	mov    QWORD PTR [rsp+0x20],rax
  41277d:	call   40ea50 <__sprintf_chk@plt+0xd760>
  412782:	mov    edx,DWORD PTR [rbx+0x14]
  412785:	mov    rsi,QWORD PTR [rsp+0x18]
  41278a:	jmp    4126f4 <__sprintf_chk@plt+0x11404>
  41278f:	nop
  412790:	mov    rsi,rbx
  412793:	mov    rdi,r13
  412796:	call   40f380 <__sprintf_chk@plt+0xe090>
  41279b:	mov    edx,0x4
  4127a0:	mov    rsi,rbp
  4127a3:	mov    rdi,r14
  4127a6:	call   4122d0 <__sprintf_chk@plt+0x10fe0>
  4127ab:	mov    r15d,eax
  4127ae:	mov    rax,QWORD PTR [r14+0x30]
  4127b2:	mov    rdi,rax
  4127b5:	mov    rsi,rbp
  4127b8:	mov    QWORD PTR [rsp+0x20],rax
  4127bd:	call   40f430 <__sprintf_chk@plt+0xe140>
  4127c2:	cmp    DWORD PTR [rsp+0x30],0xb
  4127c7:	mov    rax,QWORD PTR [rsp+0x20]
  4127cc:	jne    4127ee <__sprintf_chk@plt+0x114fe>
  4127ce:	mov    rdx,QWORD PTR [rax]
  4127d1:	movsxd rcx,DWORD PTR [rsp+0x38]
  4127d6:	mov    rdx,QWORD PTR [rdx+0x18]
  4127da:	lea    rcx,[rdx+rcx*4]
  4127de:	mov    edx,DWORD PTR [rcx]
  4127e0:	mov    esi,edx
  4127e2:	and    esi,0x3f
  4127e5:	cmp    esi,0x15
  4127e8:	je     412ac8 <__sprintf_chk@plt+0x117d8>
  4127ee:	mov    rsi,rbp
  4127f1:	mov    rdi,rax
  4127f4:	mov    QWORD PTR [rsp+0x20],rax
  4127f9:	call   40f380 <__sprintf_chk@plt+0xe090>
  4127fe:	mov    rax,QWORD PTR [rsp+0x20]
  412803:	mov    rcx,rbp
  412806:	mov    rdx,rbx
  412809:	mov    esi,0x15
  41280e:	mov    rdi,rax
  412811:	call   40f580 <__sprintf_chk@plt+0xe290>
  412816:	jmp    412720 <__sprintf_chk@plt+0x11430>
  41281b:	nop    DWORD PTR [rax+rax*1+0x0]
  412820:	cmp    DWORD PTR [rbx],0x5
  412823:	je     412a20 <__sprintf_chk@plt+0x11730>
  412829:	mov    rsi,rbx
  41282c:	mov    rdi,r13
  41282f:	call   40f450 <__sprintf_chk@plt+0xe160>
  412834:	lea    rax,[rip+0x3e05]        # 416640 <__sprintf_chk@plt+0x15350>
  41283b:	mov    rsi,rbp
  41283e:	mov    rdi,r14
  412841:	movzx  edx,BYTE PTR [rax+r12*2+0x1]
  412847:	call   4122d0 <__sprintf_chk@plt+0x10fe0>
  41284c:	cmp    r15d,0xe
  412850:	mov    r13d,eax
  412853:	mov    rax,QWORD PTR [r14+0x30]
  412857:	ja     412df2 <__sprintf_chk@plt+0x11b02>
  41285d:	lea    rsi,[rip+0x3bc0]        # 416424 <__sprintf_chk@plt+0x15134>
  412864:	movsxd rdx,DWORD PTR [rsi+r12*4]
  412868:	add    rdx,rsi
  41286b:	jmp    rdx
  41286d:	nop    DWORD PTR [rax]
  412870:	mov    r8,rbp
  412873:	mov    rcx,rbx
  412876:	xor    edx,edx
  412878:	mov    esi,0x19
  41287d:	mov    rdi,rax
  412880:	mov    r15d,r13d
  412883:	call   40f7e0 <__sprintf_chk@plt+0xe4f0>
  412888:	jmp    412720 <__sprintf_chk@plt+0x11430>
  41288d:	nop    DWORD PTR [rax]
  412890:	mov    r8,rbp
  412893:	mov    rcx,rbx
  412896:	xor    edx,edx
  412898:	mov    esi,0x18
  41289d:	mov    rdi,rax
  4128a0:	mov    r15d,r13d
  4128a3:	call   40f7e0 <__sprintf_chk@plt+0xe4f0>
  4128a8:	jmp    412720 <__sprintf_chk@plt+0x11430>
  4128ad:	nop    DWORD PTR [rax]
  4128b0:	mov    r8,rbp
  4128b3:	mov    rcx,rbx
  4128b6:	mov    edx,0x1
  4128bb:	mov    esi,0x19
  4128c0:	mov    rdi,rax
  4128c3:	mov    r15d,r13d
  4128c6:	call   40f7e0 <__sprintf_chk@plt+0xe4f0>
  4128cb:	jmp    412720 <__sprintf_chk@plt+0x11430>
  4128d0:	mov    r8,rbp
  4128d3:	mov    rcx,rbx
  4128d6:	mov    edx,0x1
  4128db:	mov    esi,0x18
  4128e0:	mov    rdi,rax
  4128e3:	mov    r15d,r13d
  4128e6:	call   40f7e0 <__sprintf_chk@plt+0xe4f0>
  4128eb:	jmp    412720 <__sprintf_chk@plt+0x11430>
  4128f0:	mov    r8,rbp
  4128f3:	mov    rcx,rbx
  4128f6:	mov    edx,0x1
  4128fb:	mov    esi,0x17
  412900:	mov    rdi,rax
  412903:	mov    r15d,r13d
  412906:	call   40f7e0 <__sprintf_chk@plt+0xe4f0>
  41290b:	jmp    412720 <__sprintf_chk@plt+0x11430>
  412910:	mov    r8,rbp
  412913:	mov    rcx,rbx
  412916:	xor    edx,edx
  412918:	mov    esi,0x17
  41291d:	mov    rdi,rax
  412920:	mov    r15d,r13d
  412923:	call   40f7e0 <__sprintf_chk@plt+0xe4f0>
  412928:	jmp    412720 <__sprintf_chk@plt+0x11430>
  41292d:	nop    DWORD PTR [rax]
  412930:	mov    rcx,rbp
  412933:	mov    rdx,rbx
  412936:	mov    esi,0x11
  41293b:	mov    rdi,rax
  41293e:	mov    r15d,r13d
  412941:	call   40f580 <__sprintf_chk@plt+0xe290>
  412946:	jmp    412720 <__sprintf_chk@plt+0x11430>
  41294b:	nop    DWORD PTR [rax+rax*1+0x0]
  412950:	mov    rcx,rbp
  412953:	mov    rdx,rbx
  412956:	mov    esi,0x10
  41295b:	mov    rdi,rax
  41295e:	mov    r15d,r13d
  412961:	call   40f580 <__sprintf_chk@plt+0xe290>
  412966:	jmp    412720 <__sprintf_chk@plt+0x11430>
  41296b:	nop    DWORD PTR [rax+rax*1+0x0]
  412970:	mov    rcx,rbp
  412973:	mov    rdx,rbx
  412976:	mov    esi,0xf
  41297b:	mov    rdi,rax
  41297e:	mov    r15d,r13d
  412981:	call   40f580 <__sprintf_chk@plt+0xe290>
  412986:	jmp    412720 <__sprintf_chk@plt+0x11430>
  41298b:	nop    DWORD PTR [rax+rax*1+0x0]
  412990:	mov    rcx,rbp
  412993:	mov    rdx,rbx
  412996:	mov    esi,0xe
  41299b:	mov    rdi,rax
  41299e:	mov    r15d,r13d
  4129a1:	call   40f580 <__sprintf_chk@plt+0xe290>
  4129a6:	jmp    412720 <__sprintf_chk@plt+0x11430>
  4129ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4129b0:	mov    rcx,rbp
  4129b3:	mov    rdx,rbx
  4129b6:	mov    esi,0xd
  4129bb:	mov    rdi,rax
  4129be:	mov    r15d,r13d
  4129c1:	call   40f580 <__sprintf_chk@plt+0xe290>
  4129c6:	jmp    412720 <__sprintf_chk@plt+0x11430>
  4129cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4129d0:	mov    rcx,rbp
  4129d3:	mov    rdx,rbx
  4129d6:	mov    esi,0xc
  4129db:	mov    rdi,rax
  4129de:	mov    r15d,r13d
  4129e1:	call   40f580 <__sprintf_chk@plt+0xe290>
  4129e6:	jmp    412720 <__sprintf_chk@plt+0x11430>
  4129eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4129f0:	mov    rdi,r14
  4129f3:	call   410ef0 <__sprintf_chk@plt+0xfc00>
  4129f8:	jmp    41258e <__sprintf_chk@plt+0x1129e>
  4129fd:	nop    DWORD PTR [rax]
  412a00:	mov    edx,DWORD PTR [rbx+0x8]
  412a03:	jmp    41269a <__sprintf_chk@plt+0x113aa>
  412a08:	nop    DWORD PTR [rax+rax*1+0x0]
  412a10:	mov    edx,0xffffffff
  412a15:	jmp    41269a <__sprintf_chk@plt+0x113aa>
  412a1a:	nop    WORD PTR [rax+rax*1+0x0]
  412a20:	cmp    QWORD PTR [rbx+0x10],0xffffffffffffffff
  412a25:	jne    412829 <__sprintf_chk@plt+0x11539>
  412a2b:	jmp    412834 <__sprintf_chk@plt+0x11544>
  412a30:	xor    ebp,ebp
  412a32:	jmp    4123e5 <__sprintf_chk@plt+0x110f5>
  412a37:	nop    WORD PTR [rax+rax*1+0x0]
  412a40:	mov    rsi,rbx
  412a43:	mov    rdi,r13
  412a46:	call   40ea50 <__sprintf_chk@plt+0xd760>
  412a4b:	mov    ecx,DWORD PTR [rbx]
  412a4d:	cmp    ecx,0xc
  412a50:	ja     412a9f <__sprintf_chk@plt+0x117af>
  412a52:	lea    rsi,[rip+0x3a07]        # 416460 <__sprintf_chk@plt+0x15170>
  412a59:	mov    edx,ecx
  412a5b:	movsxd rax,DWORD PTR [rsi+rdx*4]
  412a5f:	add    rax,rsi
  412a62:	jmp    rax
  412a64:	cmp    ecx,0xc
  412a67:	jne    412cb5 <__sprintf_chk@plt+0x119c5>
  412a6d:	lea    rsi,[rbx+0x8]
  412a71:	mov    rdi,r13
  412a74:	call   403360 <__sprintf_chk@plt+0x2070>
  412a79:	mov    rax,QWORD PTR [r13+0x18]
  412a7d:	mov    rdi,r13
  412a80:	mov    edx,DWORD PTR [rax+0x8]
  412a83:	mov    eax,0x17
  412a88:	shlx   esi,DWORD PTR [rbx+0x8],eax
  412a8e:	or     esi,0x13
  412a91:	call   40e980 <__sprintf_chk@plt+0xd690>
  412a96:	mov    DWORD PTR [rbx],0xb
  412a9c:	mov    DWORD PTR [rbx+0x8],eax
  412a9f:	mov    esi,DWORD PTR [rbx+0x10]
  412aa2:	mov    eax,DWORD PTR [rbx+0x14]
  412aa5:	mov    rdi,r13
  412aa8:	mov    DWORD PTR [rbx+0x14],esi
  412aab:	mov    DWORD PTR [rbx+0x10],eax
  412aae:	call   401dc0 <__sprintf_chk@plt+0xad0>
  412ab3:	mov    esi,DWORD PTR [rbx+0x10]
  412ab6:	mov    rdi,r13
  412ab9:	call   401dc0 <__sprintf_chk@plt+0xad0>
  412abe:	jmp    41247d <__sprintf_chk@plt+0x1118d>
  412ac3:	nop    DWORD PTR [rax+rax*1+0x0]
  412ac8:	cmp    DWORD PTR [rbx],0xc
  412acb:	je     412c8c <__sprintf_chk@plt+0x1199c>
  412ad1:	mov    eax,0x17
  412ad6:	shlx   eax,DWORD PTR [rbx+0x8],eax
  412adc:	and    edx,0x7fffff
  412ae2:	or     edx,eax
  412ae4:	mov    DWORD PTR [rcx],edx
  412ae6:	mov    eax,DWORD PTR [rsp+0x38]
  412aea:	mov    DWORD PTR [rbx],0xb
  412af0:	mov    DWORD PTR [rbx+0x8],eax
  412af3:	jmp    412720 <__sprintf_chk@plt+0x11430>
  412af8:	nop    DWORD PTR [rax+rax*1+0x0]
  412b00:	mov    rdi,r14
  412b03:	call   410ef0 <__sprintf_chk@plt+0xfc00>
  412b08:	jmp    412413 <__sprintf_chk@plt+0x11123>
  412b0d:	cmp    eax,0x107
  412b12:	je     412ba9 <__sprintf_chk@plt+0x118b9>
  412b18:	cmp    eax,0x109
  412b1d:	je     412d31 <__sprintf_chk@plt+0x11a41>
  412b23:	cmp    eax,0x7b
  412b26:	je     412d21 <__sprintf_chk@plt+0x11a31>
  412b2c:	mov    rsi,rbx
  412b2f:	mov    rdi,r14
  412b32:	call   4135b0 <__sprintf_chk@plt+0x122c0>
  412b37:	jmp    41247d <__sprintf_chk@plt+0x1118d>
  412b3c:	cmp    QWORD PTR [rbx+0x10],0xffffffffffffffff
  412b41:	jne    4125c9 <__sprintf_chk@plt+0x112d9>
  412b47:	jmp    4125d4 <__sprintf_chk@plt+0x112e4>
  412b4c:	mov    esi,DWORD PTR [rbx+0x8]
  412b4f:	mov    rdi,r13
  412b52:	call   402ad0 <__sprintf_chk@plt+0x17e0>
  412b57:	jmp    412a9f <__sprintf_chk@plt+0x117af>
  412b5c:	mov    DWORD PTR [rbx],0x3
  412b62:	jmp    412a9f <__sprintf_chk@plt+0x117af>
  412b67:	mov    DWORD PTR [rbx],0x2
  412b6d:	jmp    412a9f <__sprintf_chk@plt+0x117af>
  412b72:	mov    edx,0x7
  412b77:	mov    r15d,0x3
  412b7d:	jmp    412528 <__sprintf_chk@plt+0x11238>
  412b82:	cmp    eax,0x113
  412b87:	jne    412b2c <__sprintf_chk@plt+0x1183c>
  412b89:	mov    DWORD PTR [rbx+0x10],0xffffffff
  412b90:	mov    DWORD PTR [rbx+0x14],0xffffffff
  412b97:	mov    DWORD PTR [rbx],0x2
  412b9d:	mov    DWORD PTR [rbx+0x8],0x0
  412ba4:	jmp    4123aa <__sprintf_chk@plt+0x110ba>
  412ba9:	mov    DWORD PTR [rbx+0x10],0xffffffff
  412bb0:	mov    DWORD PTR [rbx+0x14],0xffffffff
  412bb7:	mov    DWORD PTR [rbx],0x3
  412bbd:	mov    DWORD PTR [rbx+0x8],0x0
  412bc4:	jmp    4123aa <__sprintf_chk@plt+0x110ba>
  412bc9:	mov    DWORD PTR [rbx+0x10],0xffffffff
  412bd0:	mov    DWORD PTR [rbx+0x14],0xffffffff
  412bd7:	mov    DWORD PTR [rbx],0x1
  412bdd:	mov    DWORD PTR [rbx+0x8],0x0
  412be4:	jmp    4123aa <__sprintf_chk@plt+0x110ba>
  412be9:	mov    edx,0x1
  412bee:	mov    r15d,0xe
  412bf4:	jmp    412528 <__sprintf_chk@plt+0x11238>
  412bf9:	mov    edx,0x7
  412bfe:	mov    r15d,0x2
  412c04:	jmp    412528 <__sprintf_chk@plt+0x11238>
  412c09:	mov    r15d,0xc
  412c0f:	jmp    412528 <__sprintf_chk@plt+0x11238>
  412c14:	mov    edx,0x6
  412c19:	xor    r15d,r15d
  412c1c:	jmp    412528 <__sprintf_chk@plt+0x11238>
  412c21:	mov    edx,0x5
  412c26:	mov    r15d,0x6
  412c2c:	jmp    412528 <__sprintf_chk@plt+0x11238>
  412c31:	mov    edx,0x3
  412c36:	mov    r15d,0x8
  412c3c:	jmp    412528 <__sprintf_chk@plt+0x11238>
  412c41:	mov    edx,0xa
  412c46:	mov    r15d,0x5
  412c4c:	jmp    412528 <__sprintf_chk@plt+0x11238>
  412c51:	mov    edx,0x6
  412c56:	mov    r15d,0x1
  412c5c:	jmp    412528 <__sprintf_chk@plt+0x11238>
  412c61:	mov    edx,0x3
  412c66:	mov    r15d,0xb
  412c6c:	jmp    412528 <__sprintf_chk@plt+0x11238>
  412c71:	mov    edx,0x3
  412c76:	mov    r15d,0x9
  412c7c:	jmp    412528 <__sprintf_chk@plt+0x11238>
  412c81:	mov    r15d,0xa
  412c87:	jmp    412528 <__sprintf_chk@plt+0x11238>
  412c8c:	mov    rsi,QWORD PTR [rsp+0x28]
  412c91:	mov    rdi,rax
  412c94:	call   403360 <__sprintf_chk@plt+0x2070>
  412c99:	mov    rax,QWORD PTR [rsp+0x20]
  412c9e:	movsxd rdx,DWORD PTR [rsp+0x38]
  412ca3:	mov    rax,QWORD PTR [rax]
  412ca6:	mov    rax,QWORD PTR [rax+0x18]
  412caa:	lea    rcx,[rax+rdx*4]
  412cae:	mov    edx,DWORD PTR [rcx]
  412cb0:	jmp    412ad1 <__sprintf_chk@plt+0x117e1>
  412cb5:	mov    esi,0x1
  412cba:	mov    rdi,r13
  412cbd:	call   40f340 <__sprintf_chk@plt+0xe050>
  412cc2:	mov    edx,DWORD PTR [r13+0x3c]
  412cc6:	mov    rsi,rbx
  412cc9:	mov    rdi,r13
  412ccc:	lea    eax,[rdx+0x1]
  412ccf:	mov    DWORD PTR [r13+0x3c],eax
  412cd3:	call   40ec10 <__sprintf_chk@plt+0xd920>
  412cd8:	cmp    DWORD PTR [rbx],0xc
  412cdb:	jne    412a79 <__sprintf_chk@plt+0x11789>
  412ce1:	jmp    412a6d <__sprintf_chk@plt+0x1177d>
  412ce6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412cf0:	mov    rdi,r14
  412cf3:	call   410ef0 <__sprintf_chk@plt+0xfc00>
  412cf8:	jmp    41247d <__sprintf_chk@plt+0x1118d>
  412cfd:	mov    DWORD PTR [rbx+0x10],0xffffffff
  412d04:	mov    DWORD PTR [rbx+0x14],0xffffffff
  412d0b:	mov    DWORD PTR [rbx],0x5
  412d11:	vmovsd xmm0,QWORD PTR [r14+0x18]
  412d17:	vmovsd QWORD PTR [rbx+0x8],xmm0
  412d1c:	jmp    4123aa <__sprintf_chk@plt+0x110ba>
  412d21:	mov    rsi,rbx
  412d24:	mov    rdi,r14
  412d27:	call   413030 <__sprintf_chk@plt+0x11d40>
  412d2c:	jmp    41247d <__sprintf_chk@plt+0x1118d>
  412d31:	cmp    DWORD PTR [r14+0x20],0x11f
  412d39:	mov    ecx,DWORD PTR [r14+0x4]
  412d3d:	mov    DWORD PTR [r14+0x8],ecx
  412d41:	je     412dc7 <__sprintf_chk@plt+0x11ad7>
  412d47:	mov    rax,QWORD PTR [r14+0x20]
  412d4b:	mov    rdx,QWORD PTR [r14+0x28]
  412d4f:	mov    DWORD PTR [r14+0x20],0x11f
  412d57:	mov    QWORD PTR [r14+0x10],rax
  412d5b:	mov    QWORD PTR [r14+0x18],rdx
  412d5f:	xor    edx,edx
  412d61:	mov    rsi,rbx
  412d64:	mov    rdi,r14
  412d67:	call   411ec0 <__sprintf_chk@plt+0x10bd0>
  412d6c:	jmp    41247d <__sprintf_chk@plt+0x1118d>
  412d71:	mov    rdi,QWORD PTR [r14+0x30]
  412d75:	mov    rdx,QWORD PTR [rdi]
  412d78:	movzx  eax,BYTE PTR [rdx+0x72]
  412d7c:	test   al,al
  412d7e:	je     412db3 <__sprintf_chk@plt+0x11ac3>
  412d80:	and    eax,0xfffffffb
  412d83:	mov    esi,0x800025
  412d88:	mov    BYTE PTR [rdx+0x72],al
  412d8b:	mov    rax,QWORD PTR [rdi+0x18]
  412d8f:	mov    edx,DWORD PTR [rax+0x8]
  412d92:	call   40e980 <__sprintf_chk@plt+0xd690>
  412d97:	mov    DWORD PTR [rbx+0x10],0xffffffff
  412d9e:	mov    DWORD PTR [rbx+0x14],0xffffffff
  412da5:	mov    DWORD PTR [rbx],0xe
  412dab:	mov    DWORD PTR [rbx+0x8],eax
  412dae:	jmp    4123aa <__sprintf_chk@plt+0x110ba>
  412db3:	lea    rsi,[rip+0x45ce]        # 417388 <__sprintf_chk@plt+0x16098>
  412dba:	mov    edx,0x117
  412dbf:	mov    rdi,r14
  412dc2:	call   40e6e0 <__sprintf_chk@plt+0xd3f0>
  412dc7:	mov    rdi,r14
  412dca:	call   410ef0 <__sprintf_chk@plt+0xfc00>
  412dcf:	mov    ecx,DWORD PTR [r14+0x4]
  412dd3:	jmp    412d5f <__sprintf_chk@plt+0x11a6f>
  412dd5:	call   401100 <__stack_chk_fail@plt>
  412dda:	mov    r15d,r13d
  412ddd:	jmp    412772 <__sprintf_chk@plt+0x11482>
  412de2:	mov    r15d,r13d
  412de5:	jmp    4127b2 <__sprintf_chk@plt+0x114c2>
  412dea:	mov    r15d,r13d
  412ded:	jmp    4126dc <__sprintf_chk@plt+0x113ec>
  412df2:	mov    r15d,r13d
  412df5:	jmp    412720 <__sprintf_chk@plt+0x11430>
  412dfa:	nop    WORD PTR [rax+rax*1+0x0]
  412e00:	push   rbp
  412e01:	push   rbx
  412e02:	xor    edx,edx
  412e04:	mov    rbp,rdi
  412e07:	sub    rsp,0x28
  412e0b:	mov    rsi,rsp
  412e0e:	mov    rbx,rsp
  412e11:	mov    rax,QWORD PTR fs:0x28
  412e1a:	mov    QWORD PTR [rsp+0x18],rax
  412e1f:	xor    eax,eax
  412e21:	call   4122d0 <__sprintf_chk@plt+0x10fe0>
  412e26:	cmp    DWORD PTR [rsp],0x1
  412e2a:	jne    412e33 <__sprintf_chk@plt+0x11b43>
  412e2c:	mov    DWORD PTR [rsp],0x3
  412e33:	mov    rdi,QWORD PTR [rbp+0x30]
  412e37:	mov    rsi,rbx
  412e3a:	call   40fb80 <__sprintf_chk@plt+0xe890>
  412e3f:	mov    rcx,QWORD PTR [rsp+0x18]
  412e44:	xor    rcx,QWORD PTR fs:0x28
  412e4d:	mov    eax,DWORD PTR [rsp+0x14]
  412e51:	jne    412e5a <__sprintf_chk@plt+0x11b6a>
  412e53:	add    rsp,0x28
  412e57:	pop    rbx
  412e58:	pop    rbp
  412e59:	ret    
  412e5a:	call   401100 <__stack_chk_fail@plt>
  412e5f:	nop
  412e60:	push   rbp
  412e61:	push   rbx
  412e62:	mov    rbp,rsi
  412e65:	mov    rbx,rdi
  412e68:	sub    rsp,0x8
  412e6c:	cmp    DWORD PTR [rdi+0x20],0x11f
  412e73:	mov    eax,DWORD PTR [rdi+0x4]
  412e76:	mov    DWORD PTR [rdi+0x8],eax
  412e79:	je     412ec0 <__sprintf_chk@plt+0x11bd0>
  412e7b:	mov    rax,QWORD PTR [rdi+0x20]
  412e7f:	mov    rdx,QWORD PTR [rdi+0x28]
  412e83:	mov    DWORD PTR [rdi+0x20],0x11f
  412e8a:	mov    QWORD PTR [rdi+0x10],rax
  412e8e:	mov    QWORD PTR [rdi+0x18],rdx
  412e92:	mov    rsi,rbp
  412e95:	mov    rdi,rbx
  412e98:	xor    edx,edx
  412e9a:	call   4122d0 <__sprintf_chk@plt+0x10fe0>
  412e9f:	mov    rdi,QWORD PTR [rbx+0x30]
  412ea3:	mov    rsi,rbp
  412ea6:	call   40f430 <__sprintf_chk@plt+0xe140>
  412eab:	add    rsp,0x8
  412eaf:	mov    rdi,rbx
  412eb2:	mov    esi,0x5d
  412eb7:	pop    rbx
  412eb8:	pop    rbp
  412eb9:	jmp    411120 <__sprintf_chk@plt+0xfe30>
  412ebe:	xchg   ax,ax
  412ec0:	call   410ef0 <__sprintf_chk@plt+0xfc00>
  412ec5:	jmp    412e92 <__sprintf_chk@plt+0x11ba2>
  412ec7:	nop    WORD PTR [rax+rax*1+0x0]
  412ed0:	push   r15
  412ed2:	push   r14
  412ed4:	mov    r14,rsi
  412ed7:	push   r13
  412ed9:	push   r12
  412edb:	mov    r13,rdi
  412ede:	push   rbp
  412edf:	push   rbx
  412ee0:	mov    r12,rdx
  412ee3:	sub    rsp,0x48
  412ee7:	mov    rbx,QWORD PTR [rdi+0x30]
  412eeb:	mov    rax,QWORD PTR fs:0x28
  412ef4:	mov    QWORD PTR [rsp+0x38],rax
  412ef9:	xor    eax,eax
  412efb:	cmp    DWORD PTR [rdi+0x10],0x11d
  412f02:	mov    ebp,DWORD PTR [rbx+0x3c]
  412f05:	je     412fa0 <__sprintf_chk@plt+0x11cb0>
  412f0b:	mov    rsi,rsp
  412f0e:	mov    r15,rsp
  412f11:	call   412e60 <__sprintf_chk@plt+0x11b70>
  412f16:	add    DWORD PTR [r12],0x1
  412f1b:	mov    esi,0x3d
  412f20:	mov    rdi,r13
  412f23:	call   411120 <__sprintf_chk@plt+0xfe30>
  412f28:	mov    rsi,r15
  412f2b:	lea    r15,[rsp+0x20]
  412f30:	mov    rdi,rbx
  412f33:	call   40f450 <__sprintf_chk@plt+0xe160>
  412f38:	xor    edx,edx
  412f3a:	mov    rsi,r15
  412f3d:	mov    rdi,r13
  412f40:	mov    r12d,eax
  412f43:	call   4122d0 <__sprintf_chk@plt+0x10fe0>
  412f48:	mov    rsi,r15
  412f4b:	mov    rdi,rbx
  412f4e:	shl    r12d,0x17
  412f52:	call   40f450 <__sprintf_chk@plt+0xe160>
  412f57:	mov    rcx,QWORD PTR [r14]
  412f5a:	mov    rdx,QWORD PTR [rbx+0x18]
  412f5e:	shl    eax,0xe
  412f61:	mov    rdi,rbx
  412f64:	mov    esi,DWORD PTR [rcx+0x8]
  412f67:	mov    edx,DWORD PTR [rdx+0x8]
  412f6a:	shl    esi,0x6
  412f6d:	or     esi,0x9
  412f70:	or     esi,r12d
  412f73:	or     esi,eax
  412f75:	call   40e980 <__sprintf_chk@plt+0xd690>
  412f7a:	mov    rax,QWORD PTR [rsp+0x38]
  412f7f:	xor    rax,QWORD PTR fs:0x28
  412f88:	mov    DWORD PTR [rbx+0x3c],ebp
  412f8b:	jne    412fd4 <__sprintf_chk@plt+0x11ce4>
  412f8d:	add    rsp,0x48
  412f91:	pop    rbx
  412f92:	pop    rbp
  412f93:	pop    r12
  412f95:	pop    r13
  412f97:	pop    r14
  412f99:	pop    r15
  412f9b:	ret    
  412f9c:	nop    DWORD PTR [rax+0x0]
  412fa0:	cmp    DWORD PTR [rdx],0x7ffffffd
  412fa6:	jg     412fc0 <__sprintf_chk@plt+0x11cd0>
  412fa8:	mov    rsi,rsp
  412fab:	mov    r15,rsp
  412fae:	call   410f80 <__sprintf_chk@plt+0xfc90>
  412fb3:	jmp    412f16 <__sprintf_chk@plt+0x11c26>
  412fb8:	nop    DWORD PTR [rax+rax*1+0x0]
  412fc0:	lea    rdx,[rip+0x3dc5]        # 416d8c <__sprintf_chk@plt+0x15a9c>
  412fc7:	mov    esi,0x7ffffffd
  412fcc:	mov    rdi,rbx
  412fcf:	call   40ffc0 <__sprintf_chk@plt+0xecd0>
  412fd4:	call   401100 <__stack_chk_fail@plt>
  412fd9:	nop    DWORD PTR [rax+0x0]
  412fe0:	push   rbp
  412fe1:	push   rbx
  412fe2:	xor    edx,edx
  412fe4:	mov    rbx,rsi
  412fe7:	mov    rbp,rdi
  412fea:	sub    rsp,0x8
  412fee:	call   4122d0 <__sprintf_chk@plt+0x10fe0>
  412ff3:	mov    eax,DWORD PTR [rbx+0x24]
  412ff6:	cmp    eax,0x7ffffffd
  412ffb:	jg     413010 <__sprintf_chk@plt+0x11d20>
  412ffd:	add    eax,0x1
  413000:	add    DWORD PTR [rbx+0x28],0x1
  413004:	mov    DWORD PTR [rbx+0x24],eax
  413007:	add    rsp,0x8
  41300b:	pop    rbx
  41300c:	pop    rbp
  41300d:	ret    
  41300e:	xchg   ax,ax
  413010:	mov    rdi,QWORD PTR [rbp+0x30]
  413014:	lea    rdx,[rip+0x3d71]        # 416d8c <__sprintf_chk@plt+0x15a9c>
  41301b:	mov    esi,0x7ffffffd
  413020:	call   40ffc0 <__sprintf_chk@plt+0xecd0>
  413025:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  413030:	push   r15
  413032:	push   r14
  413034:	push   r13
  413036:	push   r12
  413038:	push   rbp
  413039:	push   rbx
  41303a:	mov    rbp,rsi
  41303d:	mov    rbx,rdi
  413040:	mov    esi,0xa
  413045:	sub    rsp,0x48
  413049:	mov    r12,QWORD PTR [rdi+0x30]
  41304d:	mov    r15d,DWORD PTR [rdi+0x4]
  413051:	mov    rax,QWORD PTR fs:0x28
  41305a:	mov    QWORD PTR [rsp+0x38],rax
  41305f:	xor    eax,eax
  413061:	lea    r13,[rbx+0x28]
  413065:	mov    rax,QWORD PTR [r12+0x18]
  41306a:	mov    rdi,r12
  41306d:	mov    edx,DWORD PTR [rax+0x8]
  413070:	call   40e980 <__sprintf_chk@plt+0xd690>
  413075:	movsxd r14,eax
  413078:	mov    rsi,rbp
  41307b:	mov    DWORD PTR [rbp+0x10],0xffffffff
  413082:	mov    DWORD PTR [rbp+0x8],r14d
  413086:	mov    rdi,QWORD PTR [rbx+0x30]
  41308a:	mov    DWORD PTR [rbp+0x14],0xffffffff
  413091:	mov    DWORD PTR [rbp+0x0],0xb
  413098:	mov    QWORD PTR [rsp+0x18],rbp
  41309d:	mov    DWORD PTR [rsp+0x28],0x0
  4130a5:	mov    rbp,rsp
  4130a8:	mov    DWORD PTR [rsp+0x20],0x0
  4130b0:	mov    DWORD PTR [rsp+0x24],0x0
  4130b8:	mov    DWORD PTR [rsp+0x10],0xffffffff
  4130c0:	mov    DWORD PTR [rsp+0x14],0xffffffff
  4130c8:	mov    DWORD PTR [rsp],0x0
  4130cf:	mov    DWORD PTR [rsp+0x8],0x0
  4130d7:	call   40f380 <__sprintf_chk@plt+0xe090>
  4130dc:	mov    esi,0x7b
  4130e1:	mov    rdi,rbx
  4130e4:	call   411120 <__sprintf_chk@plt+0xfe30>
  4130e9:	jmp    41312b <__sprintf_chk@plt+0x11e3b>
  4130eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4130f0:	cmp    eax,0x5b
  4130f3:	je     41315b <__sprintf_chk@plt+0x11e6b>
  4130f5:	cmp    eax,0x11d
  4130fa:	jne    41310f <__sprintf_chk@plt+0x11e1f>
  4130fc:	mov    rsi,r13
  4130ff:	mov    rdi,rbx
  413102:	call   4105d0 <__sprintf_chk@plt+0xf2e0>
  413107:	cmp    eax,0x3d
  41310a:	mov    DWORD PTR [rbx+0x20],eax
  41310d:	je     41315b <__sprintf_chk@plt+0x11e6b>
  41310f:	mov    rsi,rbp
  413112:	mov    rdi,rbx
  413115:	call   412fe0 <__sprintf_chk@plt+0x11cf0>
  41311a:	mov    esi,0x2c
  41311f:	mov    rdi,rbx
  413122:	call   411170 <__sprintf_chk@plt+0xfe80>
  413127:	test   eax,eax
  413129:	je     413198 <__sprintf_chk@plt+0x11ea8>
  41312b:	mov    eax,DWORD PTR [rbx+0x10]
  41312e:	cmp    eax,0x7d
  413131:	je     4131b0 <__sprintf_chk@plt+0x11ec0>
  413133:	mov    edx,DWORD PTR [rsp]
  413136:	test   edx,edx
  413138:	je     4130f0 <__sprintf_chk@plt+0x11e00>
  41313a:	mov    rsi,rbp
  41313d:	mov    rdi,r12
  413140:	call   40f380 <__sprintf_chk@plt+0xe090>
  413145:	cmp    DWORD PTR [rsp+0x28],0x32
  41314a:	mov    DWORD PTR [rsp],0x0
  413151:	je     413170 <__sprintf_chk@plt+0x11e80>
  413153:	mov    eax,DWORD PTR [rbx+0x10]
  413156:	cmp    eax,0x5b
  413159:	jne    4130f5 <__sprintf_chk@plt+0x11e05>
  41315b:	lea    rdx,[rbp+0x20]
  41315f:	lea    rsi,[rbp+0x18]
  413163:	mov    rdi,rbx
  413166:	call   412ed0 <__sprintf_chk@plt+0x11be0>
  41316b:	jmp    41311a <__sprintf_chk@plt+0x11e2a>
  41316d:	nop    DWORD PTR [rax]
  413170:	mov    rax,QWORD PTR [rsp+0x18]
  413175:	mov    edx,DWORD PTR [rsp+0x24]
  413179:	mov    ecx,0x32
  41317e:	mov    rdi,r12
  413181:	mov    esi,DWORD PTR [rax+0x8]
  413184:	call   40ed90 <__sprintf_chk@plt+0xdaa0>
  413189:	mov    DWORD PTR [rsp+0x28],0x0
  413191:	jmp    413153 <__sprintf_chk@plt+0x11e63>
  413193:	nop    DWORD PTR [rax+rax*1+0x0]
  413198:	mov    esi,0x3b
  41319d:	mov    rdi,rbx
  4131a0:	call   411170 <__sprintf_chk@plt+0xfe80>
  4131a5:	test   eax,eax
  4131a7:	jne    41312b <__sprintf_chk@plt+0x11e3b>
  4131a9:	nop    DWORD PTR [rax+0x0]
  4131b0:	mov    ecx,r15d
  4131b3:	mov    edx,0x7b
  4131b8:	mov    esi,0x7d
  4131bd:	mov    rdi,rbx
  4131c0:	call   4111d0 <__sprintf_chk@plt+0xfee0>
  4131c5:	mov    ecx,DWORD PTR [rsp+0x28]
  4131c9:	test   ecx,ecx
  4131cb:	je     4131f8 <__sprintf_chk@plt+0x11f08>
  4131cd:	mov    esi,DWORD PTR [rsp]
  4131d0:	lea    eax,[rsi-0xd]
  4131d3:	cmp    eax,0x1
  4131d6:	jbe    4132b6 <__sprintf_chk@plt+0x11fc6>
  4131dc:	test   esi,esi
  4131de:	jne    4132a2 <__sprintf_chk@plt+0x11fb2>
  4131e4:	mov    rax,QWORD PTR [rsp+0x18]
  4131e9:	mov    edx,DWORD PTR [rsp+0x24]
  4131ed:	mov    rdi,r12
  4131f0:	mov    esi,DWORD PTR [rax+0x8]
  4131f3:	call   40ed90 <__sprintf_chk@plt+0xdaa0>
  4131f8:	mov    eax,DWORD PTR [rsp+0x24]
  4131fc:	mov    rdx,QWORD PTR [r12]
  413200:	mov    rdx,QWORD PTR [rdx+0x18]
  413204:	lea    rsi,[rdx+r14*4]
  413208:	xor    edx,edx
  41320a:	mov    ecx,DWORD PTR [rsi]
  41320c:	and    ecx,0x7fffff
  413212:	cmp    eax,0xf
  413215:	jbe    41322d <__sprintf_chk@plt+0x11f3d>
  413217:	nop    WORD PTR [rax+rax*1+0x0]
  413220:	add    eax,0x1
  413223:	add    edx,0x1
  413226:	shr    eax,1
  413228:	cmp    eax,0xf
  41322b:	ja     413220 <__sprintf_chk@plt+0x11f30>
  41322d:	cmp    eax,0x7
  413230:	jbe    41323e <__sprintf_chk@plt+0x11f4e>
  413232:	lea    edx,[rdx*8+0x8]
  413239:	sub    eax,0x8
  41323c:	or     eax,edx
  41323e:	shl    eax,0x17
  413241:	or     eax,ecx
  413243:	xor    ecx,ecx
  413245:	mov    DWORD PTR [rsi],eax
  413247:	mov    edx,DWORD PTR [rsp+0x20]
  41324b:	and    eax,0xff803fff
  413250:	cmp    edx,0xf
  413253:	jbe    413265 <__sprintf_chk@plt+0x11f75>
  413255:	nop    DWORD PTR [rax]
  413258:	add    edx,0x1
  41325b:	add    ecx,0x1
  41325e:	shr    edx,1
  413260:	cmp    edx,0xf
  413263:	ja     413258 <__sprintf_chk@plt+0x11f68>
  413265:	cmp    edx,0x7
  413268:	jbe    413276 <__sprintf_chk@plt+0x11f86>
  41326a:	lea    ecx,[rcx*8+0x8]
  413271:	sub    edx,0x8
  413274:	or     edx,ecx
  413276:	shl    edx,0xe
  413279:	and    edx,0x7fc000
  41327f:	or     eax,edx
  413281:	mov    DWORD PTR [rsi],eax
  413283:	mov    rax,QWORD PTR [rsp+0x38]
  413288:	xor    rax,QWORD PTR fs:0x28
  413291:	jne    4132f1 <__sprintf_chk@plt+0x12001>
  413293:	add    rsp,0x48
  413297:	pop    rbx
  413298:	pop    rbp
  413299:	pop    r12
  41329b:	pop    r13
  41329d:	pop    r14
  41329f:	pop    r15
  4132a1:	ret    
  4132a2:	mov    rsi,rsp
  4132a5:	mov    rdi,r12
  4132a8:	call   40f380 <__sprintf_chk@plt+0xe090>
  4132ad:	mov    ecx,DWORD PTR [rsp+0x28]
  4132b1:	jmp    4131e4 <__sprintf_chk@plt+0x11ef4>
  4132b6:	lea    rdx,[rsp+0x8]
  4132bb:	mov    ecx,0xffffffff
  4132c0:	mov    rdi,r12
  4132c3:	call   40f9a0 <__sprintf_chk@plt+0xe6b0>
  4132c8:	mov    rax,QWORD PTR [rsp+0x18]
  4132cd:	mov    edx,DWORD PTR [rsp+0x24]
  4132d1:	mov    ecx,0xffffffff
  4132d6:	mov    rdi,r12
  4132d9:	mov    esi,DWORD PTR [rax+0x8]
  4132dc:	call   40ed90 <__sprintf_chk@plt+0xdaa0>
  4132e1:	mov    eax,DWORD PTR [rsp+0x24]
  4132e5:	sub    eax,0x1
  4132e8:	mov    DWORD PTR [rsp+0x24],eax
  4132ec:	jmp    4131fc <__sprintf_chk@plt+0x11f0c>
  4132f1:	call   401100 <__stack_chk_fail@plt>
  4132f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413300:	push   r12
  413302:	push   rbp
  413303:	xor    edx,edx
  413305:	push   rbx
  413306:	mov    r12,rsi
  413309:	mov    rbx,rdi
  41330c:	mov    ebp,0x1
  413311:	call   4122d0 <__sprintf_chk@plt+0x10fe0>
  413316:	jmp    41333c <__sprintf_chk@plt+0x1204c>
  413318:	nop    DWORD PTR [rax+rax*1+0x0]
  413320:	mov    rdi,QWORD PTR [rbx+0x30]
  413324:	mov    rsi,r12
  413327:	add    ebp,0x1
  41332a:	call   40f380 <__sprintf_chk@plt+0xe090>
  41332f:	xor    edx,edx
  413331:	mov    rsi,r12
  413334:	mov    rdi,rbx
  413337:	call   4122d0 <__sprintf_chk@plt+0x10fe0>
  41333c:	mov    esi,0x2c
  413341:	mov    rdi,rbx
  413344:	call   411170 <__sprintf_chk@plt+0xfe80>
  413349:	test   eax,eax
  41334b:	jne    413320 <__sprintf_chk@plt+0x12030>
  41334d:	mov    eax,ebp
  41334f:	pop    rbx
  413350:	pop    rbp
  413351:	pop    r12
  413353:	ret    
  413354:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41335f:	nop
  413360:	push   r14
  413362:	push   r13
  413364:	mov    r14,rsi
  413367:	push   r12
  413369:	push   rbp
  41336a:	push   rbx
  41336b:	mov    rbx,rdi
  41336e:	sub    rsp,0x20
  413372:	mov    edx,DWORD PTR [rdi+0x10]
  413375:	mov    rbp,QWORD PTR [rdi+0x30]
  413379:	mov    rax,QWORD PTR fs:0x28
  413382:	mov    QWORD PTR [rsp+0x18],rax
  413387:	xor    eax,eax
  413389:	mov    r12d,DWORD PTR [rdi+0x4]
  41338d:	cmp    edx,0x7b
  413390:	je     413548 <__sprintf_chk@plt+0x12258>
  413396:	cmp    edx,0x11e
  41339c:	je     413458 <__sprintf_chk@plt+0x12168>
  4133a2:	cmp    edx,0x28
  4133a5:	je     4133b8 <__sprintf_chk@plt+0x120c8>
  4133a7:	lea    rsi,[rip+0x39f5]        # 416da3 <__sprintf_chk@plt+0x15ab3>
  4133ae:	call   40e6e0 <__sprintf_chk@plt+0xd3f0>
  4133b3:	nop    DWORD PTR [rax+rax*1+0x0]
  4133b8:	cmp    r12d,DWORD PTR [rdi+0x8]
  4133bc:	je     4133d0 <__sprintf_chk@plt+0x120e0>
  4133be:	lea    rsi,[rip+0x3ff3]        # 4173b8 <__sprintf_chk@plt+0x160c8>
  4133c5:	call   40e6e0 <__sprintf_chk@plt+0xd3f0>
  4133ca:	nop    WORD PTR [rax+rax*1+0x0]
  4133d0:	cmp    DWORD PTR [rdi+0x20],0x11f
  4133d7:	je     413588 <__sprintf_chk@plt+0x12298>
  4133dd:	mov    rax,QWORD PTR [rdi+0x20]
  4133e1:	mov    rdx,QWORD PTR [rdi+0x28]
  4133e5:	mov    DWORD PTR [rdi+0x20],0x11f
  4133ec:	mov    QWORD PTR [rdi+0x10],rax
  4133f0:	mov    QWORD PTR [rdi+0x18],rdx
  4133f4:	cmp    DWORD PTR [rbx+0x10],0x29
  4133f8:	je     413578 <__sprintf_chk@plt+0x12288>
  4133fe:	mov    rsi,rsp
  413401:	mov    rdi,rbx
  413404:	call   413300 <__sprintf_chk@plt+0x12010>
  413409:	mov    esi,DWORD PTR [rsp]
  41340c:	lea    rdx,[rsp+0x8]
  413411:	mov    ecx,0xffffffff
  413416:	mov    rdi,rbp
  413419:	call   40f9a0 <__sprintf_chk@plt+0xe6b0>
  41341e:	mov    edx,0x28
  413423:	mov    rdi,rbx
  413426:	mov    ecx,r12d
  413429:	mov    esi,0x29
  41342e:	call   4111d0 <__sprintf_chk@plt+0xfee0>
  413433:	mov    eax,DWORD PTR [rsp]
  413436:	mov    ebx,DWORD PTR [r14+0x8]
  41343a:	lea    edx,[rax-0xd]
  41343d:	cmp    edx,0x1
  413440:	ja     413563 <__sprintf_chk@plt+0x12273>
  413446:	lea    r13d,[rbx+0x1]
  41344a:	xor    eax,eax
  41344c:	jmp    4134d9 <__sprintf_chk@plt+0x121e9>
  413451:	nop    DWORD PTR [rax+0x0]
  413458:	mov    rax,QWORD PTR [rdi+0x18]
  41345c:	mov    rdx,rsp
  41345f:	mov    rsi,rsp
  413462:	mov    rdi,rbp
  413465:	mov    DWORD PTR [rsp+0x8],0x4
  41346d:	mov    r13,rsp
  413470:	mov    QWORD PTR [rsp],rax
  413474:	call   4086c0 <__sprintf_chk@plt+0x73d0>
  413479:	cmp    DWORD PTR [rbx+0x20],0x11f
  413480:	mov    DWORD PTR [rsp+0x8],eax
  413484:	mov    eax,DWORD PTR [rbx+0x4]
  413487:	mov    DWORD PTR [rsp+0x10],0xffffffff
  41348f:	mov    DWORD PTR [rsp+0x14],0xffffffff
  413497:	mov    DWORD PTR [rsp],0x4
  41349e:	mov    DWORD PTR [rbx+0x8],eax
  4134a1:	je     413598 <__sprintf_chk@plt+0x122a8>
  4134a7:	mov    rax,QWORD PTR [rbx+0x20]
  4134ab:	mov    rdx,QWORD PTR [rbx+0x28]
  4134af:	mov    DWORD PTR [rbx+0x20],0x11f
  4134b6:	mov    QWORD PTR [rbx+0x10],rax
  4134ba:	mov    QWORD PTR [rbx+0x18],rdx
  4134be:	mov    ebx,DWORD PTR [r14+0x8]
  4134c2:	mov    rsi,r13
  4134c5:	mov    rdi,rbp
  4134c8:	call   40f380 <__sprintf_chk@plt+0xe090>
  4134cd:	mov    eax,DWORD PTR [rbp+0x3c]
  4134d0:	lea    r13d,[rbx+0x1]
  4134d4:	sub    eax,ebx
  4134d6:	shl    eax,0x17
  4134d9:	mov    rdx,QWORD PTR [rbp+0x18]
  4134dd:	mov    esi,ebx
  4134df:	or     eax,0x801c
  4134e4:	shl    esi,0x6
  4134e7:	mov    rdi,rbp
  4134ea:	or     esi,eax
  4134ec:	mov    edx,DWORD PTR [rdx+0x8]
  4134ef:	call   40e980 <__sprintf_chk@plt+0xd690>
  4134f4:	mov    DWORD PTR [r14+0x8],eax
  4134f8:	mov    rax,QWORD PTR [rbp+0x0]
  4134fc:	mov    DWORD PTR [r14+0x10],0xffffffff
  413504:	mov    DWORD PTR [r14+0x14],0xffffffff
  41350c:	movsxd rdx,DWORD PTR [rbp+0x30]
  413510:	mov    DWORD PTR [r14],0xd
  413517:	mov    rax,QWORD PTR [rax+0x28]
  41351b:	mov    DWORD PTR [rax+rdx*4-0x4],r12d
  413520:	mov    DWORD PTR [rbp+0x3c],r13d
  413524:	mov    rax,QWORD PTR [rsp+0x18]
  413529:	xor    rax,QWORD PTR fs:0x28
  413532:	jne    4135a2 <__sprintf_chk@plt+0x122b2>
  413534:	add    rsp,0x20
  413538:	pop    rbx
  413539:	pop    rbp
  41353a:	pop    r12
  41353c:	pop    r13
  41353e:	pop    r14
  413540:	ret    
  413541:	nop    DWORD PTR [rax+0x0]
  413548:	mov    rsi,rsp
  41354b:	call   413030 <__sprintf_chk@plt+0x11d40>
  413550:	mov    eax,DWORD PTR [rsp]
  413553:	mov    ebx,DWORD PTR [r14+0x8]
  413557:	lea    edx,[rax-0xd]
  41355a:	cmp    edx,0x1
  41355d:	jbe    413446 <__sprintf_chk@plt+0x12156>
  413563:	test   eax,eax
  413565:	je     4134cd <__sprintf_chk@plt+0x121dd>
  41356b:	mov    r13,rsp
  41356e:	jmp    4134c2 <__sprintf_chk@plt+0x121d2>
  413573:	nop    DWORD PTR [rax+rax*1+0x0]
  413578:	mov    DWORD PTR [rsp],0x0
  41357f:	jmp    41341e <__sprintf_chk@plt+0x1212e>
  413584:	nop    DWORD PTR [rax+0x0]
  413588:	call   410ef0 <__sprintf_chk@plt+0xfc00>
  41358d:	jmp    4133f4 <__sprintf_chk@plt+0x12104>
  413592:	nop    WORD PTR [rax+rax*1+0x0]
  413598:	mov    rdi,rbx
  41359b:	call   410ef0 <__sprintf_chk@plt+0xfc00>
  4135a0:	jmp    413550 <__sprintf_chk@plt+0x12260>
  4135a2:	call   401100 <__stack_chk_fail@plt>
  4135a7:	nop    WORD PTR [rax+rax*1+0x0]
  4135b0:	push   r15
  4135b2:	push   r14
  4135b4:	mov    r15,rdi
  4135b7:	push   r13
  4135b9:	push   r12
  4135bb:	push   rbp
  4135bc:	push   rbx
  4135bd:	mov    rbx,rsi
  4135c0:	sub    rsp,0x38
  4135c4:	mov    edx,DWORD PTR [rdi+0x10]
  4135c7:	mov    rbp,QWORD PTR [rdi+0x30]
  4135cb:	mov    rax,QWORD PTR fs:0x28
  4135d4:	mov    QWORD PTR [rsp+0x28],rax
  4135d9:	xor    eax,eax
  4135db:	cmp    edx,0x28
  4135de:	je     4137a0 <__sprintf_chk@plt+0x124b0>
  4135e4:	cmp    edx,0x11d
  4135ea:	jne    413728 <__sprintf_chk@plt+0x12438>
  4135f0:	call   410ff0 <__sprintf_chk@plt+0xfd00>
  4135f5:	lea    r12,[rsp+0x10]
  4135fa:	lea    rax,[rbx+0x8]
  4135fe:	lea    r14,[r12+0x8]
  413603:	mov    QWORD PTR [rsp+0x8],rax
  413608:	mov    eax,DWORD PTR [r15+0x10]
  41360c:	cmp    eax,0x3a
  41360f:	je     413667 <__sprintf_chk@plt+0x12377>
  413611:	jle    413738 <__sprintf_chk@plt+0x12448>
  413617:	cmp    eax,0x7b
  41361a:	je     413780 <__sprintf_chk@plt+0x12490>
  413620:	cmp    eax,0x11e
  413625:	je     413780 <__sprintf_chk@plt+0x12490>
  41362b:	cmp    eax,0x5b
  41362e:	jne    413758 <__sprintf_chk@plt+0x12468>
  413634:	mov    rsi,rbx
  413637:	mov    rdi,rbp
  41363a:	call   40f3d0 <__sprintf_chk@plt+0xe0e0>
  41363f:	mov    rsi,r12
  413642:	mov    rdi,r15
  413645:	call   412e60 <__sprintf_chk@plt+0x11b70>
  41364a:	mov    rsi,r12
  41364d:	mov    rdi,rbp
  413650:	call   40f450 <__sprintf_chk@plt+0xe160>
  413655:	mov    DWORD PTR [rbx+0xc],eax
  413658:	mov    eax,DWORD PTR [r15+0x10]
  41365c:	mov    DWORD PTR [rbx],0x9
  413662:	cmp    eax,0x3a
  413665:	jne    413611 <__sprintf_chk@plt+0x12321>
  413667:	cmp    DWORD PTR [r15+0x20],0x11f
  41366f:	mov    eax,DWORD PTR [r15+0x4]
  413673:	mov    DWORD PTR [r15+0x8],eax
  413677:	je     413828 <__sprintf_chk@plt+0x12538>
  41367d:	mov    rax,QWORD PTR [r15+0x20]
  413681:	mov    rdx,QWORD PTR [r15+0x28]
  413685:	mov    DWORD PTR [r15+0x20],0x11f
  41368d:	mov    QWORD PTR [r15+0x10],rax
  413691:	mov    QWORD PTR [r15+0x18],rdx
  413695:	mov    rsi,r12
  413698:	mov    rdi,r15
  41369b:	call   410f80 <__sprintf_chk@plt+0xfc90>
  4136a0:	mov    rsi,rbx
  4136a3:	mov    rdi,rbp
  4136a6:	call   40f3d0 <__sprintf_chk@plt+0xe0e0>
  4136ab:	cmp    DWORD PTR [rbx],0xc
  4136ae:	je     413810 <__sprintf_chk@plt+0x12520>
  4136b4:	mov    esi,0x2
  4136b9:	mov    rdi,rbp
  4136bc:	mov    r13d,DWORD PTR [rbp+0x3c]
  4136c0:	call   40f340 <__sprintf_chk@plt+0xe050>
  4136c5:	add    DWORD PTR [rbp+0x3c],0x2
  4136c9:	mov    rsi,r12
  4136cc:	mov    rdi,rbp
  4136cf:	call   40f450 <__sprintf_chk@plt+0xe160>
  4136d4:	mov    ecx,0x17
  4136d9:	shlx   esi,DWORD PTR [rbx+0x8],ecx
  4136df:	mov    rdx,QWORD PTR [rbp+0x18]
  4136e3:	mov    ecx,r13d
  4136e6:	shl    eax,0xe
  4136e9:	mov    rdi,rbp
  4136ec:	shl    ecx,0x6
  4136ef:	mov    edx,DWORD PTR [rdx+0x8]
  4136f2:	or     esi,0xb
  4136f5:	or     esi,ecx
  4136f7:	or     esi,eax
  4136f9:	call   40e980 <__sprintf_chk@plt+0xd690>
  4136fe:	cmp    DWORD PTR [rsp+0x10],0xc
  413703:	je     413800 <__sprintf_chk@plt+0x12510>
  413709:	mov    DWORD PTR [rbx+0x8],r13d
  41370d:	mov    DWORD PTR [rbx],0xc
  413713:	mov    rsi,rbx
  413716:	mov    rdi,r15
  413719:	call   413360 <__sprintf_chk@plt+0x12070>
  41371e:	jmp    413608 <__sprintf_chk@plt+0x12318>
  413723:	nop    DWORD PTR [rax+rax*1+0x0]
  413728:	lea    rsi,[rip+0x3690]        # 416dbf <__sprintf_chk@plt+0x15acf>
  41372f:	call   40e6e0 <__sprintf_chk@plt+0xd3f0>
  413734:	nop    DWORD PTR [rax+0x0]
  413738:	cmp    eax,0x28
  41373b:	je     413780 <__sprintf_chk@plt+0x12490>
  41373d:	cmp    eax,0x2e
  413740:	jne    413758 <__sprintf_chk@plt+0x12468>
  413742:	mov    rsi,rbx
  413745:	mov    rdi,r15
  413748:	call   411080 <__sprintf_chk@plt+0xfd90>
  41374d:	jmp    413608 <__sprintf_chk@plt+0x12318>
  413752:	nop    WORD PTR [rax+rax*1+0x0]
  413758:	mov    rax,QWORD PTR [rsp+0x28]
  41375d:	xor    rax,QWORD PTR fs:0x28
  413766:	jne    41383f <__sprintf_chk@plt+0x1254f>
  41376c:	add    rsp,0x38
  413770:	pop    rbx
  413771:	pop    rbp
  413772:	pop    r12
  413774:	pop    r13
  413776:	pop    r14
  413778:	pop    r15
  41377a:	ret    
  41377b:	nop    DWORD PTR [rax+rax*1+0x0]
  413780:	mov    rsi,rbx
  413783:	mov    rdi,rbp
  413786:	call   40f380 <__sprintf_chk@plt+0xe090>
  41378b:	mov    rsi,rbx
  41378e:	mov    rdi,r15
  413791:	call   413360 <__sprintf_chk@plt+0x12070>
  413796:	jmp    413608 <__sprintf_chk@plt+0x12318>
  41379b:	nop    DWORD PTR [rax+rax*1+0x0]
  4137a0:	cmp    DWORD PTR [rdi+0x20],0x11f
  4137a7:	mov    r12d,DWORD PTR [rdi+0x4]
  4137ab:	mov    DWORD PTR [rdi+0x8],r12d
  4137af:	je     413838 <__sprintf_chk@plt+0x12548>
  4137b5:	mov    rax,QWORD PTR [rdi+0x20]
  4137b9:	mov    rdx,QWORD PTR [rdi+0x28]
  4137bd:	mov    DWORD PTR [rdi+0x20],0x11f
  4137c4:	mov    QWORD PTR [rdi+0x10],rax
  4137c8:	mov    QWORD PTR [rdi+0x18],rdx
  4137cc:	xor    edx,edx
  4137ce:	mov    rsi,rbx
  4137d1:	mov    rdi,r15
  4137d4:	call   4122d0 <__sprintf_chk@plt+0x10fe0>
  4137d9:	mov    rdi,r15
  4137dc:	mov    ecx,r12d
  4137df:	mov    edx,0x28
  4137e4:	mov    esi,0x29
  4137e9:	call   4111d0 <__sprintf_chk@plt+0xfee0>
  4137ee:	mov    rdi,QWORD PTR [r15+0x30]
  4137f2:	mov    rsi,rbx
  4137f5:	call   40ea50 <__sprintf_chk@plt+0xd760>
  4137fa:	jmp    4135f5 <__sprintf_chk@plt+0x12305>
  4137ff:	nop
  413800:	mov    rsi,r14
  413803:	mov    rdi,rbp
  413806:	call   403360 <__sprintf_chk@plt+0x2070>
  41380b:	jmp    413709 <__sprintf_chk@plt+0x12419>
  413810:	mov    rsi,QWORD PTR [rsp+0x8]
  413815:	mov    rdi,rbp
  413818:	call   403360 <__sprintf_chk@plt+0x2070>
  41381d:	jmp    4136b4 <__sprintf_chk@plt+0x123c4>
  413822:	nop    WORD PTR [rax+rax*1+0x0]
  413828:	mov    rdi,r15
  41382b:	call   410ef0 <__sprintf_chk@plt+0xfc00>
  413830:	jmp    413695 <__sprintf_chk@plt+0x123a5>
  413835:	nop    DWORD PTR [rax]
  413838:	call   410ef0 <__sprintf_chk@plt+0xfc00>
  41383d:	jmp    4137cc <__sprintf_chk@plt+0x124dc>
  41383f:	call   401100 <__stack_chk_fail@plt>
  413844:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41384f:	nop
  413850:	push   r14
  413852:	push   r13
  413854:	push   r12
  413856:	push   rbp
  413857:	push   rbx
  413858:	mov    rbx,rdi
  41385b:	sub    rsp,0x30
  41385f:	mov    rax,QWORD PTR fs:0x28
  413868:	mov    QWORD PTR [rsp+0x28],rax
  41386d:	xor    eax,eax
  41386f:	mov    eax,DWORD PTR [rsi+0x8]
  413872:	sub    eax,0x6
  413875:	cmp    eax,0x3
  413878:	ja     413980 <__sprintf_chk@plt+0x12690>
  41387e:	mov    rbp,rsi
  413881:	mov    esi,0x2c
  413886:	mov    r12d,edx
  413889:	call   411170 <__sprintf_chk@plt+0xfe80>
  41388e:	test   eax,eax
  413890:	je     413930 <__sprintf_chk@plt+0x12640>
  413896:	lea    rsi,[rsp+0x8]
  41389b:	mov    rdi,rbx
  41389e:	mov    QWORD PTR [rsp],rbp
  4138a2:	mov    r13,rsp
  4138a5:	call   4135b0 <__sprintf_chk@plt+0x122c0>
  4138aa:	cmp    DWORD PTR [rsp+0x8],0x6
  4138af:	je     4139e0 <__sprintf_chk@plt+0x126f0>
  4138b5:	mov    rax,QWORD PTR [rbx+0x38]
  4138b9:	mov    esi,0xc8
  4138be:	movzx  eax,WORD PTR [rax+0x60]
  4138c2:	sub    esi,eax
  4138c4:	cmp    esi,r12d
  4138c7:	jl     4139a0 <__sprintf_chk@plt+0x126b0>
  4138cd:	lea    edx,[r12+0x1]
  4138d2:	mov    rdi,rbx
  4138d5:	mov    rsi,r13
  4138d8:	call   413850 <__sprintf_chk@plt+0x12560>
  4138dd:	mov    rdi,QWORD PTR [rbx+0x30]
  4138e1:	mov    eax,DWORD PTR [rdi+0x3c]
  4138e4:	lea    rsi,[rbp+0x8]
  4138e8:	sub    eax,0x1
  4138eb:	mov    rdx,r13
  4138ee:	mov    DWORD PTR [rsp+0x10],0xffffffff
  4138f6:	mov    DWORD PTR [rsp+0x14],0xffffffff
  4138fe:	mov    DWORD PTR [rsp],0xc
  413905:	mov    DWORD PTR [rsp+0x8],eax
  413909:	call   40f890 <__sprintf_chk@plt+0xe5a0>
  41390e:	mov    rax,QWORD PTR [rsp+0x28]
  413913:	xor    rax,QWORD PTR fs:0x28
  41391c:	jne    413a76 <__sprintf_chk@plt+0x12786>
  413922:	add    rsp,0x30
  413926:	pop    rbx
  413927:	pop    rbp
  413928:	pop    r12
  41392a:	pop    r13
  41392c:	pop    r14
  41392e:	ret    
  41392f:	nop
  413930:	mov    esi,0x3d
  413935:	mov    rdi,rbx
  413938:	mov    r13,rsp
  41393b:	call   411120 <__sprintf_chk@plt+0xfe30>
  413940:	mov    rsi,rsp
  413943:	mov    rdi,rbx
  413946:	call   413300 <__sprintf_chk@plt+0x12010>
  41394b:	cmp    r12d,eax
  41394e:	mov    r14d,eax
  413951:	je     4139b0 <__sprintf_chk@plt+0x126c0>
  413953:	mov    rdi,QWORD PTR [rbx+0x30]
  413957:	mov    rcx,rsp
  41395a:	mov    edx,eax
  41395c:	mov    esi,r12d
  41395f:	call   40fa40 <__sprintf_chk@plt+0xe750>
  413964:	cmp    r12d,r14d
  413967:	mov    rdi,QWORD PTR [rbx+0x30]
  41396b:	jge    413990 <__sprintf_chk@plt+0x126a0>
  41396d:	mov    eax,DWORD PTR [rdi+0x3c]
  413970:	sub    r14d,r12d
  413973:	sub    eax,r14d
  413976:	mov    DWORD PTR [rdi+0x3c],eax
  413979:	jmp    4138e4 <__sprintf_chk@plt+0x125f4>
  41397e:	xchg   ax,ax
  413980:	mov    edx,DWORD PTR [rdi+0x10]
  413983:	lea    rsi,[rip+0x3447]        # 416dd1 <__sprintf_chk@plt+0x15ae1>
  41398a:	call   40e6e0 <__sprintf_chk@plt+0xd3f0>
  41398f:	nop
  413990:	mov    eax,DWORD PTR [rdi+0x3c]
  413993:	jmp    4138e4 <__sprintf_chk@plt+0x125f4>
  413998:	nop    DWORD PTR [rax+rax*1+0x0]
  4139a0:	mov    rdi,QWORD PTR [rbx+0x30]
  4139a4:	lea    rdx,[rip+0x3433]        # 416dde <__sprintf_chk@plt+0x15aee>
  4139ab:	call   40ffc0 <__sprintf_chk@plt+0xecd0>
  4139b0:	mov    rdi,QWORD PTR [rbx+0x30]
  4139b4:	lea    rdx,[rsp+0x8]
  4139b9:	mov    rsi,rsp
  4139bc:	call   402a70 <__sprintf_chk@plt+0x1780>
  4139c1:	mov    rdi,QWORD PTR [rbx+0x30]
  4139c5:	lea    rsi,[rbp+0x8]
  4139c9:	mov    rdx,rsp
  4139cc:	call   40f890 <__sprintf_chk@plt+0xe5a0>
  4139d1:	jmp    41390e <__sprintf_chk@plt+0x1261e>
  4139d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4139e0:	mov    r14,QWORD PTR [rbx+0x30]
  4139e4:	mov    rax,rbp
  4139e7:	xor    esi,esi
  4139e9:	mov    ecx,DWORD PTR [r14+0x3c]
  4139ed:	jmp    4139f8 <__sprintf_chk@plt+0x12708>
  4139ef:	nop
  4139f0:	mov    rax,QWORD PTR [rax]
  4139f3:	test   rax,rax
  4139f6:	je     413a20 <__sprintf_chk@plt+0x12730>
  4139f8:	cmp    DWORD PTR [rax+0x8],0x9
  4139fc:	jne    4139f0 <__sprintf_chk@plt+0x12700>
  4139fe:	mov    edx,DWORD PTR [rsp+0x10]
  413a02:	cmp    DWORD PTR [rax+0x10],edx
  413a05:	je     413a68 <__sprintf_chk@plt+0x12778>
  413a07:	cmp    DWORD PTR [rax+0x14],edx
  413a0a:	jne    4139f0 <__sprintf_chk@plt+0x12700>
  413a0c:	mov    DWORD PTR [rax+0x14],ecx
  413a0f:	mov    esi,0x1
  413a14:	jmp    4139f0 <__sprintf_chk@plt+0x12700>
  413a16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413a20:	test   esi,esi
  413a22:	je     4138b5 <__sprintf_chk@plt+0x125c5>
  413a28:	mov    rax,QWORD PTR [r14+0x18]
  413a2c:	shl    ecx,0x6
  413a2f:	mov    rdi,r14
  413a32:	mov    esi,ecx
  413a34:	mov    edx,DWORD PTR [rax+0x8]
  413a37:	mov    eax,0x17
  413a3c:	shlx   eax,DWORD PTR [rsp+0x10],eax
  413a43:	or     esi,eax
  413a45:	call   40e980 <__sprintf_chk@plt+0xd690>
  413a4a:	mov    esi,0x1
  413a4f:	mov    rdi,r14
  413a52:	call   40f340 <__sprintf_chk@plt+0xe050>
  413a57:	add    DWORD PTR [r14+0x3c],0x1
  413a5c:	jmp    4138b5 <__sprintf_chk@plt+0x125c5>
  413a61:	nop    DWORD PTR [rax+0x0]
  413a68:	mov    DWORD PTR [rax+0x10],ecx
  413a6b:	mov    esi,0x1
  413a70:	mov    edx,DWORD PTR [rsp+0x10]
  413a74:	jmp    413a07 <__sprintf_chk@plt+0x12717>
  413a76:	call   401100 <__stack_chk_fail@plt>
  413a7b:	nop    DWORD PTR [rax+rax*1+0x0]
  413a80:	push   r12
  413a82:	push   rbp
  413a83:	xor    edx,edx
  413a85:	push   rbx
  413a86:	mov    rbp,rdi
  413a89:	sub    rsp,0x20
  413a8d:	mov    rsi,rsp
  413a90:	mov    rax,QWORD PTR fs:0x28
  413a99:	mov    QWORD PTR [rsp+0x18],rax
  413a9e:	xor    eax,eax
  413aa0:	call   4122d0 <__sprintf_chk@plt+0x10fe0>
  413aa5:	mov    rdi,QWORD PTR [rbp+0x30]
  413aa9:	mov    rsi,rsp
  413aac:	mov    r12d,DWORD PTR [rsp]
  413ab0:	call   40f380 <__sprintf_chk@plt+0xe090>
  413ab5:	mov    rcx,QWORD PTR [rsp+0x18]
  413aba:	xor    rcx,QWORD PTR fs:0x28
  413ac3:	jne    413ad1 <__sprintf_chk@plt+0x127e1>
  413ac5:	add    rsp,0x20
  413ac9:	mov    eax,r12d
  413acc:	pop    rbx
  413acd:	pop    rbp
  413ace:	pop    r12
  413ad0:	ret    
  413ad1:	call   401100 <__stack_chk_fail@plt>
  413ad6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413ae0:	push   r12
  413ae2:	push   rbp
  413ae3:	mov    rbp,rdi
  413ae6:	push   rbx
  413ae7:	mov    rdi,rcx
  413aea:	mov    rbx,rcx
  413aed:	mov    r12,rsi
  413af0:	sub    rsp,0x2c0
  413af7:	mov    rax,QWORD PTR fs:0x28
  413b00:	mov    QWORD PTR [rsp+0x2b8],rax
  413b08:	xor    eax,eax
  413b0a:	mov    QWORD PTR [rsp+0x48],rdx
  413b0f:	call   4010f0 <strlen@plt>
  413b14:	mov    rsi,rbx
  413b17:	mov    rdx,rax
  413b1a:	mov    rdi,rbp
  413b1d:	call   405980 <__sprintf_chk@plt+0x4690>
  413b22:	mov    rbx,QWORD PTR [rsp+0x48]
  413b27:	mov    BYTE PTR [rsp+0x58],0x2e
  413b2c:	mov    rdi,rbp
  413b2f:	mov    ecx,0x20
  413b34:	mov    QWORD PTR [rsp+0x38],rbp
  413b39:	mov    DWORD PTR [rsp+0x20],0x11f
  413b41:	mov    QWORD PTR [rsp+0x40],r12
  413b46:	mov    QWORD PTR [rsp+0x30],0x0
  413b4f:	mov    rdx,QWORD PTR [rbx+0x10]
  413b53:	mov    rsi,QWORD PTR [rbx]
  413b56:	mov    DWORD PTR [rsp+0x4],0x1
  413b5e:	mov    DWORD PTR [rsp+0x8],0x1
  413b66:	mov    QWORD PTR [rsp+0x50],rax
  413b6b:	call   403450 <__sprintf_chk@plt+0x2160>
  413b70:	mov    rdi,QWORD PTR [rsp+0x40]
  413b75:	mov    QWORD PTR [rbx],rax
  413b78:	mov    rax,QWORD PTR [rsp+0x48]
  413b7d:	mov    QWORD PTR [rax+0x10],0x20
  413b85:	mov    rax,QWORD PTR [rdi]
  413b88:	lea    rdx,[rax-0x1]
  413b8c:	test   rax,rax
  413b8f:	mov    QWORD PTR [rdi],rdx
  413b92:	je     413c10 <__sprintf_chk@plt+0x12920>
  413b94:	mov    rax,QWORD PTR [rdi+0x8]
  413b98:	lea    rdx,[rax+0x1]
  413b9c:	mov    QWORD PTR [rdi+0x8],rdx
  413ba0:	movzx  eax,BYTE PTR [rax]
  413ba3:	lea    rsi,[rsp+0x60]
  413ba8:	mov    rdi,rsp
  413bab:	mov    DWORD PTR [rsp],eax
  413bae:	mov    rbx,rsp
  413bb1:	call   407680 <__sprintf_chk@plt+0x6390>
  413bb6:	mov    rax,QWORD PTR [rsp+0x60]
  413bbb:	cmp    DWORD PTR [rsp+0x20],0x11f
  413bc3:	mov    BYTE PTR [rax+0x72],0x2
  413bc7:	mov    eax,DWORD PTR [rsp+0x4]
  413bcb:	mov    DWORD PTR [rsp+0x8],eax
  413bcf:	je     413c50 <__sprintf_chk@plt+0x12960>
  413bd1:	mov    rax,QWORD PTR [rsp+0x20]
  413bd6:	mov    rdx,QWORD PTR [rsp+0x28]
  413bdb:	mov    DWORD PTR [rsp+0x20],0x11f
  413be3:	mov    QWORD PTR [rsp+0x10],rax
  413be8:	mov    QWORD PTR [rsp+0x18],rdx
  413bed:	mov    rdi,rbx
  413bf0:	call   411260 <__sprintf_chk@plt+0xff70>
  413bf5:	cmp    DWORD PTR [rsp+0x10],0x11f
  413bfd:	je     413c20 <__sprintf_chk@plt+0x12930>
  413bff:	mov    esi,0x11f
  413c04:	mov    rdi,rbx
  413c07:	call   4103c0 <__sprintf_chk@plt+0xf0d0>
  413c0c:	nop    DWORD PTR [rax+0x0]
  413c10:	call   401c50 <__sprintf_chk@plt+0x960>
  413c15:	jmp    413ba3 <__sprintf_chk@plt+0x128b3>
  413c17:	nop    WORD PTR [rax+rax*1+0x0]
  413c20:	mov    rdi,rbx
  413c23:	call   40ee20 <__sprintf_chk@plt+0xdb30>
  413c28:	mov    rcx,QWORD PTR [rsp+0x2b8]
  413c30:	xor    rcx,QWORD PTR fs:0x28
  413c39:	mov    rax,QWORD PTR [rsp+0x60]
  413c3e:	jne    413c5a <__sprintf_chk@plt+0x1296a>
  413c40:	add    rsp,0x2c0
  413c47:	pop    rbx
  413c48:	pop    rbp
  413c49:	pop    r12
  413c4b:	ret    
  413c4c:	nop    DWORD PTR [rax+0x0]
  413c50:	mov    rdi,rsp
  413c53:	call   410ef0 <__sprintf_chk@plt+0xfc00>
  413c58:	jmp    413bed <__sprintf_chk@plt+0x128fd>
  413c5a:	call   401100 <__stack_chk_fail@plt>
  413c5f:	nop
  413c60:	push   r13
  413c62:	push   r12
  413c64:	mov    r13,rdi
  413c67:	push   rbp
  413c68:	push   rbx
  413c69:	sub    rsp,0x18
  413c6d:	mov    rax,QWORD PTR [rdi+0x20]
  413c71:	mov    rdi,QWORD PTR [rax+0x70]
  413c75:	cmp    QWORD PTR [rax+0x78],rdi
  413c79:	jae    413d58 <__sprintf_chk@plt+0x12a68>
  413c7f:	mov    rcx,QWORD PTR [rsi+0x20]
  413c83:	lea    rdx,[rsi+0x8]
  413c87:	mov    rsi,QWORD PTR [rsi]
  413c8a:	mov    rdi,r13
  413c8d:	mov    ebx,0x1
  413c92:	call   413ae0 <__sprintf_chk@plt+0x127f0>
  413c97:	movzx  esi,BYTE PTR [rax+0x70]
  413c9b:	mov    rdx,QWORD PTR [r13+0x78]
  413c9f:	mov    rbp,rax
  413ca2:	mov    rdi,r13
  413ca5:	call   4034a0 <__sprintf_chk@plt+0x21b0>
  413caa:	mov    QWORD PTR [rax+0x20],rbp
  413cae:	cmp    BYTE PTR [rbp+0x70],0x0
  413cb2:	mov    r12,rax
  413cb5:	je     413d10 <__sprintf_chk@plt+0x12a20>
  413cb7:	nop    WORD PTR [rax+rax*1+0x0]
  413cc0:	xor    edx,edx
  413cc2:	mov    ecx,0x28
  413cc7:	xor    esi,esi
  413cc9:	mov    rdi,r13
  413ccc:	call   403450 <__sprintf_chk@plt+0x2160>
  413cd1:	mov    rdx,QWORD PTR [r13+0x20]
  413cd5:	mov    rcx,QWORD PTR [rdx+0x28]
  413cd9:	mov    QWORD PTR [rax],rcx
  413cdc:	mov    QWORD PTR [rdx+0x28],rax
  413ce0:	movzx  edx,BYTE PTR [rdx+0x20]
  413ce4:	mov    BYTE PTR [rax+0x8],0xa
  413ce8:	mov    DWORD PTR [rax+0x20],0x0
  413cef:	and    edx,0x3
  413cf2:	mov    BYTE PTR [rax+0x9],dl
  413cf5:	lea    rdx,[rax+0x18]
  413cf9:	mov    QWORD PTR [rax+0x10],rdx
  413cfd:	mov    QWORD PTR [r12+rbx*8+0x20],rax
  413d02:	mov    eax,ebx
  413d04:	movzx  edx,BYTE PTR [rbp+0x70]
  413d08:	add    rbx,0x1
  413d0c:	cmp    edx,eax
  413d0e:	jg     413cc0 <__sprintf_chk@plt+0x129d0>
  413d10:	mov    rax,QWORD PTR [r13+0x10]
  413d14:	mov    QWORD PTR [rax],r12
  413d17:	mov    DWORD PTR [rax+0x8],0x6
  413d1e:	mov    rdx,QWORD PTR [r13+0x38]
  413d22:	mov    rax,QWORD PTR [r13+0x10]
  413d26:	sub    rdx,rax
  413d29:	cmp    rdx,0x10
  413d2d:	jg     413d40 <__sprintf_chk@plt+0x12a50>
  413d2f:	mov    esi,0x1
  413d34:	mov    rdi,r13
  413d37:	call   406720 <__sprintf_chk@plt+0x5430>
  413d3c:	mov    rax,QWORD PTR [r13+0x10]
  413d40:	add    rax,0x10
  413d44:	mov    QWORD PTR [r13+0x10],rax
  413d48:	add    rsp,0x18
  413d4c:	pop    rbx
  413d4d:	pop    rbp
  413d4e:	pop    r12
  413d50:	pop    r13
  413d52:	ret    
  413d53:	nop    DWORD PTR [rax+rax*1+0x0]
  413d58:	mov    rdi,r13
  413d5b:	mov    QWORD PTR [rsp+0x8],rsi
  413d60:	call   408be0 <__sprintf_chk@plt+0x78f0>
  413d65:	mov    rsi,QWORD PTR [rsp+0x8]
  413d6a:	jmp    413c7f <__sprintf_chk@plt+0x1298f>
  413d6f:	nop
  413d70:	push   rbx
  413d71:	sub    rsp,0x20
  413d75:	mov    rbx,QWORD PTR [rdi+0x30]
  413d79:	mov    rax,QWORD PTR fs:0x28
  413d82:	mov    QWORD PTR [rsp+0x18],rax
  413d87:	xor    eax,eax
  413d89:	mov    DWORD PTR [rsp+0x8],0xffffffff
  413d91:	mov    BYTE PTR [rsp+0xe],0x0
  413d96:	movzx  eax,BYTE PTR [rbx+0x4a]
  413d9a:	mov    BYTE PTR [rsp+0xd],0x0
  413d9f:	mov    BYTE PTR [rsp+0xc],al
  413da3:	mov    rax,QWORD PTR [rbx+0x28]
  413da7:	mov    QWORD PTR [rbx+0x28],rsp
  413dab:	mov    QWORD PTR [rsp],rax
  413daf:	call   411260 <__sprintf_chk@plt+0xff70>
  413db4:	mov    rdi,rbx
  413db7:	call   40f2a0 <__sprintf_chk@plt+0xdfb0>
  413dbc:	mov    rax,QWORD PTR [rsp+0x18]
  413dc1:	xor    rax,QWORD PTR fs:0x28
  413dca:	jne    413dd2 <__sprintf_chk@plt+0x12ae2>
  413dcc:	add    rsp,0x20
  413dd0:	pop    rbx
  413dd1:	ret    
  413dd2:	call   401100 <__stack_chk_fail@plt>
  413dd7:	nop    WORD PTR [rax+rax*1+0x0]
  413de0:	push   rbp
  413de1:	push   rbx
  413de2:	mov    rbx,rdi
  413de5:	sub    rsp,0x8
  413de9:	cmp    DWORD PTR [rdi+0x20],0x11f
  413df0:	mov    eax,DWORD PTR [rdi+0x4]
  413df3:	mov    DWORD PTR [rdi+0x8],eax
  413df6:	je     413e40 <__sprintf_chk@plt+0x12b50>
  413df8:	mov    rax,QWORD PTR [rdi+0x20]
  413dfc:	mov    rdx,QWORD PTR [rdi+0x28]
  413e00:	mov    DWORD PTR [rdi+0x20],0x11f
  413e07:	mov    QWORD PTR [rdi+0x10],rax
  413e0b:	mov    QWORD PTR [rdi+0x18],rdx
  413e0f:	mov    rdi,rbx
  413e12:	call   412e00 <__sprintf_chk@plt+0x11b10>
  413e17:	mov    rdi,rbx
  413e1a:	mov    esi,0x112
  413e1f:	mov    ebp,eax
  413e21:	call   411120 <__sprintf_chk@plt+0xfe30>
  413e26:	mov    rdi,rbx
  413e29:	call   413d70 <__sprintf_chk@plt+0x12a80>
  413e2e:	add    rsp,0x8
  413e32:	mov    eax,ebp
  413e34:	pop    rbx
  413e35:	pop    rbp
  413e36:	ret    
  413e37:	nop    WORD PTR [rax+rax*1+0x0]
  413e40:	call   410ef0 <__sprintf_chk@plt+0xfc00>
  413e45:	jmp    413e0f <__sprintf_chk@plt+0x12b1f>
  413e47:	nop    WORD PTR [rax+rax*1+0x0]
  413e50:	push   r15
  413e52:	push   r14
  413e54:	mov    r14d,r8d
  413e57:	push   r13
  413e59:	push   r12
  413e5b:	mov    r13,rdi
  413e5e:	push   rbp
  413e5f:	push   rbx
  413e60:	mov    ebp,esi
  413e62:	mov    ebx,ecx
  413e64:	sub    rsp,0x38
  413e68:	mov    r15,QWORD PTR [rdi+0x30]
  413e6c:	mov    rax,QWORD PTR fs:0x28
  413e75:	mov    QWORD PTR [rsp+0x28],rax
  413e7a:	xor    eax,eax
  413e7c:	mov    DWORD PTR [rsp+0xc],edx
  413e80:	movzx  eax,BYTE PTR [r15+0x4a]
  413e85:	mov    rdx,QWORD PTR [r15]
  413e88:	mov    ecx,DWORD PTR [r15+0x30]
  413e8c:	add    eax,0x3
  413e8f:	mov    BYTE PTR [r15+0x4a],al
  413e93:	movzx  eax,al
  413e96:	mov    rsi,QWORD PTR [rdx+0x30]
  413e9a:	sub    eax,0x3
  413e9d:	cdqe   
  413e9f:	lea    rdi,[r15+rax*2]
  413ea3:	xor    eax,eax
  413ea5:	movzx  edx,WORD PTR [rdi+rax*2+0xc4]
  413ead:	add    rax,0x1
  413eb1:	shl    rdx,0x4
  413eb5:	cmp    rax,0x3
  413eb9:	mov    DWORD PTR [rsi+rdx*1+0x8],ecx
  413ebd:	jne    413ea5 <__sprintf_chk@plt+0x12bb5>
  413ebf:	mov    esi,0x103
  413ec4:	mov    rdi,r13
  413ec7:	call   411120 <__sprintf_chk@plt+0xfe30>
  413ecc:	test   r14d,r14d
  413ecf:	je     414008 <__sprintf_chk@plt+0x12d18>
  413ed5:	mov    rax,QWORD PTR [r15+0x18]
  413ed9:	shl    ebp,0x6
  413edc:	mov    rdi,r15
  413edf:	mov    esi,ebp
  413ee1:	or     esi,0x7fff8020
  413ee7:	mov    edx,DWORD PTR [rax+0x8]
  413eea:	call   40e980 <__sprintf_chk@plt+0xd690>
  413eef:	mov    r12d,eax
  413ef2:	movzx  eax,BYTE PTR [r15+0x4a]
  413ef7:	mov    rcx,QWORD PTR [r13+0x30]
  413efb:	mov    DWORD PTR [rsp+0x18],0xffffffff
  413f03:	mov    BYTE PTR [rsp+0x1e],0x0
  413f08:	mov    BYTE PTR [rsp+0x1d],0x0
  413f0d:	mov    BYTE PTR [rsp+0x1c],al
  413f11:	mov    rax,QWORD PTR [r15+0x28]
  413f15:	mov    QWORD PTR [rsp+0x10],rax
  413f1a:	lea    rax,[rsp+0x10]
  413f1f:	mov    QWORD PTR [r15+0x28],rax
  413f23:	mov    eax,ebx
  413f25:	add    al,BYTE PTR [rcx+0x4a]
  413f28:	test   ebx,ebx
  413f2a:	mov    BYTE PTR [rcx+0x4a],al
  413f2d:	je     413f74 <__sprintf_chk@plt+0x12c84>
  413f2f:	mov    rdx,QWORD PTR [rcx]
  413f32:	movzx  eax,al
  413f35:	lea    r9d,[rbx-0x1]
  413f39:	sub    eax,ebx
  413f3b:	mov    esi,DWORD PTR [rcx+0x30]
  413f3e:	mov    rdi,QWORD PTR [rdx+0x30]
  413f42:	movsxd rdx,eax
  413f45:	lea    rax,[rcx+rdx*2+0xc4]
  413f4d:	lea    rdx,[rdx+r9*1+0x63]
  413f52:	lea    rcx,[rcx+rdx*2]
  413f56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413f60:	movzx  edx,WORD PTR [rax]
  413f63:	add    rax,0x2
  413f67:	shl    rdx,0x4
  413f6b:	cmp    rcx,rax
  413f6e:	mov    DWORD PTR [rdi+rdx*1+0x8],esi
  413f72:	jne    413f60 <__sprintf_chk@plt+0x12c70>
  413f74:	mov    esi,ebx
  413f76:	mov    rdi,r15
  413f79:	call   40f340 <__sprintf_chk@plt+0xe050>
  413f7e:	add    DWORD PTR [r15+0x3c],ebx
  413f82:	mov    rdi,r13
  413f85:	call   413d70 <__sprintf_chk@plt+0x12a80>
  413f8a:	mov    rdi,r15
  413f8d:	call   40f2a0 <__sprintf_chk@plt+0xdfb0>
  413f92:	mov    eax,DWORD PTR [r15+0x30]
  413f96:	lea    rsi,[r15+0x38]
  413f9a:	mov    edx,r12d
  413f9d:	mov    rdi,r15
  413fa0:	mov    DWORD PTR [r15+0x34],eax
  413fa4:	call   40f000 <__sprintf_chk@plt+0xdd10>
  413fa9:	test   r14d,r14d
  413fac:	je     41401b <__sprintf_chk@plt+0x12d2b>
  413fae:	mov    rax,QWORD PTR [r15+0x18]
  413fb2:	mov    esi,ebp
  413fb4:	mov    rdi,r15
  413fb7:	or     esi,0x7fff801f
  413fbd:	add    r12d,0x1
  413fc1:	mov    edx,DWORD PTR [rax+0x8]
  413fc4:	call   40e980 <__sprintf_chk@plt+0xd690>
  413fc9:	mov    rdx,QWORD PTR [r15]
  413fcc:	movsxd rcx,DWORD PTR [r15+0x30]
  413fd0:	mov    ebx,DWORD PTR [rsp+0xc]
  413fd4:	mov    rdx,QWORD PTR [rdx+0x28]
  413fd8:	mov    DWORD PTR [rdx+rcx*4-0x4],ebx
  413fdc:	mov    esi,eax
  413fde:	mov    edx,r12d
  413fe1:	mov    rdi,r15
  413fe4:	call   40f270 <__sprintf_chk@plt+0xdf80>
  413fe9:	mov    rax,QWORD PTR [rsp+0x28]
  413fee:	xor    rax,QWORD PTR fs:0x28
  413ff7:	jne    414055 <__sprintf_chk@plt+0x12d65>
  413ff9:	add    rsp,0x38
  413ffd:	pop    rbx
  413ffe:	pop    rbp
  413fff:	pop    r12
  414001:	pop    r13
  414003:	pop    r14
  414005:	pop    r15
  414007:	ret    
  414008:	mov    rdi,r15
  41400b:	shl    ebp,0x6
  41400e:	call   40f070 <__sprintf_chk@plt+0xdd80>
  414013:	mov    r12d,eax
  414016:	jmp    413ef2 <__sprintf_chk@plt+0x12c02>
  41401b:	mov    rax,QWORD PTR [r15+0x18]
  41401f:	shl    ebx,0xe
  414022:	mov    rdi,r15
  414025:	mov    esi,ebx
  414027:	add    r12d,0x1
  41402b:	or     esi,0x21
  41402e:	mov    edx,DWORD PTR [rax+0x8]
  414031:	or     esi,ebp
  414033:	call   40e980 <__sprintf_chk@plt+0xd690>
  414038:	mov    rax,QWORD PTR [r15]
  41403b:	movsxd rdx,DWORD PTR [r15+0x30]
  41403f:	mov    rdi,r15
  414042:	mov    ebx,DWORD PTR [rsp+0xc]
  414046:	mov    rax,QWORD PTR [rax+0x28]
  41404a:	mov    DWORD PTR [rax+rdx*4-0x4],ebx
  41404e:	call   40f070 <__sprintf_chk@plt+0xdd80>
  414053:	jmp    413fdc <__sprintf_chk@plt+0x12cec>
  414055:	call   401100 <__stack_chk_fail@plt>
  41405a:	nop    WORD PTR [rax+rax*1+0x0]
  414060:	push   r15
  414062:	push   r14
  414064:	lea    r15,[rip+0x2429]        # 416494 <__sprintf_chk@plt+0x151a4>
  41406b:	push   r13
  41406d:	push   r12
  41406f:	lea    r14,[rdi+0x10]
  414073:	push   rbp
  414074:	push   rbx
  414075:	mov    rbp,rdi
  414078:	mov    rbx,rsi
  41407b:	mov    r12,rdx
  41407e:	sub    rsp,0x18
  414082:	movzx  eax,BYTE PTR [rdx]
  414085:	cmp    al,0x29
  414087:	ja     4141cc <__sprintf_chk@plt+0x12edc>
  41408d:	movsxd rax,DWORD PTR [r15+rax*4]
  414091:	add    rax,r15
  414094:	jmp    rax
  414096:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4140a0:	mov    rax,rbx
  4140a3:	add    rsp,0x18
  4140a7:	pop    rbx
  4140a8:	pop    rbp
  4140a9:	pop    r12
  4140ab:	pop    r13
  4140ad:	pop    r14
  4140af:	pop    r15
  4140b1:	ret    
  4140b2:	nop    WORD PTR [rax+rax*1+0x0]
  4140b8:	mov    edx,DWORD PTR [rbp+0x18]
  4140bb:	mov    eax,edx
  4140bd:	sub    eax,0x1
  4140c0:	js     414107 <__sprintf_chk@plt+0x12e17>
  4140c2:	movsxd rcx,eax
  4140c5:	lea    rsi,[rcx+0x2]
  4140c9:	shl    rsi,0x4
  4140cd:	cmp    QWORD PTR [rbp+rsi*1+0x8],0xffffffffffffffff
  4140d3:	je     41438b <__sprintf_chk@plt+0x1309b>
  4140d9:	sub    edx,0x2
  4140dc:	movsxd rdx,edx
  4140df:	shl    rdx,0x4
  4140e3:	lea    rcx,[rbp+rdx*1+0x28]
  4140e8:	jmp    4140ff <__sprintf_chk@plt+0x12e0f>
  4140ea:	nop    WORD PTR [rax+rax*1+0x0]
  4140f0:	sub    rcx,0x10
  4140f4:	cmp    QWORD PTR [rcx+0x10],0xffffffffffffffff
  4140f9:	je     414388 <__sprintf_chk@plt+0x13098>
  4140ff:	sub    eax,0x1
  414102:	cmp    eax,0xffffffff
  414105:	jne    4140f0 <__sprintf_chk@plt+0x12e00>
  414107:	mov    rdi,QWORD PTR [rbp+0x10]
  41410b:	lea    rsi,[rip+0x2ce4]        # 416df6 <__sprintf_chk@plt+0x15b06>
  414112:	xor    eax,eax
  414114:	call   409640 <__sprintf_chk@plt+0x8350>
  414119:	nop    DWORD PTR [rax+0x0]
  414120:	cmp    BYTE PTR [r12+0x1],0x29
  414126:	mov    edx,DWORD PTR [rbp+0x18]
  414129:	je     4142c0 <__sprintf_chk@plt+0x12fd0>
  41412f:	cmp    edx,0x1f
  414132:	jg     4142f0 <__sprintf_chk@plt+0x13000>
  414138:	movsxd rax,edx
  41413b:	add    edx,0x1
  41413e:	shl    rax,0x4
  414142:	add    rax,rbp
  414145:	mov    QWORD PTR [rax+0x20],rbx
  414149:	mov    QWORD PTR [rax+0x28],0xffffffffffffffff
  414151:	mov    DWORD PTR [rbp+0x18],edx
  414154:	lea    rdx,[r12+0x1]
  414159:	mov    rsi,rbx
  41415c:	mov    rdi,rbp
  41415f:	call   414060 <__sprintf_chk@plt+0x12d70>
  414164:	test   rax,rax
  414167:	jne    4140a3 <__sprintf_chk@plt+0x12db3>
  41416d:	sub    DWORD PTR [rbp+0x18],0x1
  414171:	jmp    4140a3 <__sprintf_chk@plt+0x12db3>
  414176:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414180:	movzx  r13d,BYTE PTR [r12+0x1]
  414186:	cmp    r13b,0x62
  41418a:	je     414240 <__sprintf_chk@plt+0x12f50>
  414190:	cmp    r13b,0x66
  414194:	jne    414420 <__sprintf_chk@plt+0x13130>
  41419a:	cmp    BYTE PTR [r12+0x2],0x5b
  4141a0:	je     4144b0 <__sprintf_chk@plt+0x131c0>
  4141a6:	mov    rdi,QWORD PTR [rbp+0x10]
  4141aa:	lea    rsi,[rip+0x323f]        # 4173f0 <__sprintf_chk@plt+0x16100>
  4141b1:	xor    eax,eax
  4141b3:	call   409640 <__sprintf_chk@plt+0x8350>
  4141b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4141c0:	cmp    BYTE PTR [r12+0x1],0x0
  4141c6:	je     414362 <__sprintf_chk@plt+0x13072>
  4141cc:	mov    rsi,r12
  4141cf:	mov    rdi,r14
  4141d2:	call   409730 <__sprintf_chk@plt+0x8440>
  4141d7:	cmp    rbx,QWORD PTR [rbp+0x8]
  4141db:	mov    r13,rax
  4141de:	jb     414308 <__sprintf_chk@plt+0x13018>
  4141e4:	movzx  eax,BYTE PTR [r13+0x0]
  4141e9:	cmp    al,0x2b
  4141eb:	je     414370 <__sprintf_chk@plt+0x13080>
  4141f1:	jle    414218 <__sprintf_chk@plt+0x12f28>
  4141f3:	cmp    al,0x2d
  4141f5:	je     4143c8 <__sprintf_chk@plt+0x130d8>
  4141fb:	cmp    al,0x3f
  4141fd:	jne    414370 <__sprintf_chk@plt+0x13080>
  414203:	lea    r12,[r13+0x1]
  414207:	movzx  eax,BYTE PTR [r13+0x1]
  41420c:	jmp    414085 <__sprintf_chk@plt+0x12d95>
  414211:	nop    DWORD PTR [rax+0x0]
  414218:	cmp    al,0x2a
  41421a:	jne    414370 <__sprintf_chk@plt+0x13080>
  414220:	mov    rcx,r13
  414223:	mov    rdx,r12
  414226:	mov    rsi,rbx
  414229:	add    rsp,0x18
  41422d:	mov    rdi,rbp
  414230:	pop    rbx
  414231:	pop    rbp
  414232:	pop    r12
  414234:	pop    r13
  414236:	pop    r14
  414238:	pop    r15
  41423a:	jmp    414890 <__sprintf_chk@plt+0x135a0>
  41423f:	nop
  414240:	movzx  edi,BYTE PTR [r12+0x2]
  414246:	test   dil,dil
  414249:	je     414530 <__sprintf_chk@plt+0x13240>
  41424f:	movzx  esi,BYTE PTR [r12+0x3]
  414255:	test   sil,sil
  414258:	je     414530 <__sprintf_chk@plt+0x13240>
  41425e:	cmp    dil,BYTE PTR [rbx]
  414261:	jne    414370 <__sprintf_chk@plt+0x13080>
  414267:	mov    r8,QWORD PTR [rbp+0x8]
  41426b:	mov    ecx,0x1
  414270:	jmp    414286 <__sprintf_chk@plt+0x12f96>
  414272:	nop    WORD PTR [rax+rax*1+0x0]
  414278:	cmp    dil,dl
  41427b:	sete   dl
  41427e:	movzx  edx,dl
  414281:	add    ecx,edx
  414283:	mov    rbx,rax
  414286:	lea    rax,[rbx+0x1]
  41428a:	cmp    r8,rax
  41428d:	jbe    414370 <__sprintf_chk@plt+0x13080>
  414293:	movzx  edx,BYTE PTR [rbx+0x1]
  414297:	cmp    sil,dl
  41429a:	jne    414278 <__sprintf_chk@plt+0x12f88>
  41429c:	sub    ecx,0x1
  41429f:	jne    414283 <__sprintf_chk@plt+0x12f93>
  4142a1:	add    rbx,0x2
  4142a5:	je     414370 <__sprintf_chk@plt+0x13080>
  4142ab:	movzx  eax,BYTE PTR [r12+0x4]
  4142b1:	add    r12,0x4
  4142b5:	jmp    414085 <__sprintf_chk@plt+0x12d95>
  4142ba:	nop    WORD PTR [rax+rax*1+0x0]
  4142c0:	cmp    edx,0x1f
  4142c3:	jg     4142f0 <__sprintf_chk@plt+0x13000>
  4142c5:	movsxd rax,edx
  4142c8:	add    edx,0x1
  4142cb:	shl    rax,0x4
  4142cf:	add    rax,rbp
  4142d2:	mov    QWORD PTR [rax+0x20],rbx
  4142d6:	mov    QWORD PTR [rax+0x28],0xfffffffffffffffe
  4142de:	mov    DWORD PTR [rbp+0x18],edx
  4142e1:	lea    rdx,[r12+0x2]
  4142e6:	jmp    414159 <__sprintf_chk@plt+0x12e69>
  4142eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4142f0:	mov    rdi,QWORD PTR [rbp+0x10]
  4142f4:	lea    rsi,[rip+0x2720]        # 416a1b <__sprintf_chk@plt+0x1572b>
  4142fb:	xor    eax,eax
  4142fd:	call   409640 <__sprintf_chk@plt+0x8350>
  414302:	nop    WORD PTR [rax+rax*1+0x0]
  414308:	movzx  edi,BYTE PTR [rbx]
  41430b:	mov    rdx,rax
  41430e:	mov    rsi,r12
  414311:	call   4030c0 <__sprintf_chk@plt+0x1dd0>
  414316:	test   eax,eax
  414318:	je     4141e4 <__sprintf_chk@plt+0x12ef4>
  41431e:	movzx  eax,BYTE PTR [r13+0x0]
  414323:	cmp    al,0x2b
  414325:	je     41440a <__sprintf_chk@plt+0x1311a>
  41432b:	jle    414518 <__sprintf_chk@plt+0x13228>
  414331:	cmp    al,0x2d
  414333:	je     4143c8 <__sprintf_chk@plt+0x130d8>
  414339:	cmp    al,0x3f
  41433b:	jne    414520 <__sprintf_chk@plt+0x13230>
  414341:	lea    r12,[r13+0x1]
  414345:	lea    rsi,[rbx+0x1]
  414349:	mov    rdi,rbp
  41434c:	mov    rdx,r12
  41434f:	call   414060 <__sprintf_chk@plt+0x12d70>
  414354:	test   rax,rax
  414357:	je     414207 <__sprintf_chk@plt+0x12f17>
  41435d:	jmp    4140a3 <__sprintf_chk@plt+0x12db3>
  414362:	cmp    rbx,QWORD PTR [rbp+0x8]
  414366:	mov    rax,rbx
  414369:	je     4140a3 <__sprintf_chk@plt+0x12db3>
  41436f:	nop
  414370:	xor    eax,eax
  414372:	add    rsp,0x18
  414376:	pop    rbx
  414377:	pop    rbp
  414378:	pop    r12
  41437a:	pop    r13
  41437c:	pop    r14
  41437e:	pop    r15
  414380:	ret    
  414381:	nop    DWORD PTR [rax+0x0]
  414388:	movsxd rcx,eax
  41438b:	shl    rcx,0x4
  41438f:	mov    rax,rbx
  414392:	lea    rdx,[r12+0x1]
  414397:	lea    r13,[rbp+rcx*1+0x0]
  41439c:	mov    rsi,rbx
  41439f:	mov    rdi,rbp
  4143a2:	sub    rax,QWORD PTR [r13+0x20]
  4143a6:	mov    QWORD PTR [r13+0x28],rax
  4143aa:	call   414060 <__sprintf_chk@plt+0x12d70>
  4143af:	test   rax,rax
  4143b2:	jne    4140a3 <__sprintf_chk@plt+0x12db3>
  4143b8:	mov    QWORD PTR [r13+0x28],0xffffffffffffffff
  4143c0:	jmp    4140a3 <__sprintf_chk@plt+0x12db3>
  4143c5:	nop    DWORD PTR [rax]
  4143c8:	lea    r14,[r13+0x1]
  4143cc:	jmp    4143e6 <__sprintf_chk@plt+0x130f6>
  4143ce:	xchg   ax,ax
  4143d0:	movzx  edi,BYTE PTR [rbx]
  4143d3:	mov    rdx,r13
  4143d6:	mov    rsi,r12
  4143d9:	call   4030c0 <__sprintf_chk@plt+0x1dd0>
  4143de:	test   eax,eax
  4143e0:	je     414370 <__sprintf_chk@plt+0x13080>
  4143e2:	add    rbx,0x1
  4143e6:	mov    rdx,r14
  4143e9:	mov    rsi,rbx
  4143ec:	mov    rdi,rbp
  4143ef:	call   414060 <__sprintf_chk@plt+0x12d70>
  4143f4:	test   rax,rax
  4143f7:	jne    4140a3 <__sprintf_chk@plt+0x12db3>
  4143fd:	cmp    rbx,QWORD PTR [rbp+0x8]
  414401:	jb     4143d0 <__sprintf_chk@plt+0x130e0>
  414403:	xor    eax,eax
  414405:	jmp    414372 <__sprintf_chk@plt+0x13082>
  41440a:	lea    rsi,[rbx+0x1]
  41440e:	mov    rcx,r13
  414411:	mov    rdx,r12
  414414:	jmp    414229 <__sprintf_chk@plt+0x12f39>
  414419:	nop    DWORD PTR [rax+0x0]
  414420:	call   4012e0 <__ctype_b_loc@plt>
  414425:	mov    rax,QWORD PTR [rax]
  414428:	movzx  edx,r13b
  41442c:	test   BYTE PTR [rax+rdx*2+0x1],0x8
  414431:	je     4141cc <__sprintf_chk@plt+0x12edc>
  414437:	sub    r13d,0x31
  41443b:	js     414542 <__sprintf_chk@plt+0x13252>
  414441:	cmp    r13d,DWORD PTR [rbp+0x18]
  414445:	jge    414542 <__sprintf_chk@plt+0x13252>
  41444b:	mov    rax,rdx
  41444e:	shl    rax,0x4
  414452:	add    rax,rbp
  414455:	mov    r13,QWORD PTR [rax-0x2e8]
  41445c:	cmp    r13,0xffffffffffffffff
  414460:	je     414542 <__sprintf_chk@plt+0x13252>
  414466:	mov    rdx,QWORD PTR [rbp+0x8]
  41446a:	sub    rdx,rbx
  41446d:	cmp    r13,rdx
  414470:	ja     414370 <__sprintf_chk@plt+0x13080>
  414476:	mov    rdi,QWORD PTR [rax-0x2f0]
  41447d:	mov    rdx,r13
  414480:	mov    rsi,rbx
  414483:	call   401160 <memcmp@plt>
  414488:	test   eax,eax
  41448a:	jne    414370 <__sprintf_chk@plt+0x13080>
  414490:	add    rbx,r13
  414493:	je     414370 <__sprintf_chk@plt+0x13080>
  414499:	movzx  eax,BYTE PTR [r12+0x2]
  41449f:	add    r12,0x2
  4144a3:	jmp    414085 <__sprintf_chk@plt+0x12d95>
  4144a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4144b0:	lea    r13,[r12+0x2]
  4144b5:	mov    rdi,r14
  4144b8:	mov    rsi,r13
  4144bb:	call   409730 <__sprintf_chk@plt+0x8440>
  4144c0:	cmp    rbx,QWORD PTR [rbp+0x0]
  4144c4:	mov    r12,rax
  4144c7:	je     414554 <__sprintf_chk@plt+0x13264>
  4144cd:	movzx  edi,BYTE PTR [rbx-0x1]
  4144d1:	lea    rcx,[r12-0x1]
  4144d6:	mov    rsi,r13
  4144d9:	mov    rdx,rcx
  4144dc:	mov    QWORD PTR [rsp+0x8],rcx
  4144e1:	call   4023a0 <__sprintf_chk@plt+0x10b0>
  4144e6:	test   eax,eax
  4144e8:	jne    414370 <__sprintf_chk@plt+0x13080>
  4144ee:	mov    rcx,QWORD PTR [rsp+0x8]
  4144f3:	movzx  edi,BYTE PTR [rbx]
  4144f6:	mov    rsi,r13
  4144f9:	mov    rdx,rcx
  4144fc:	call   4023a0 <__sprintf_chk@plt+0x10b0>
  414501:	test   eax,eax
  414503:	je     414370 <__sprintf_chk@plt+0x13080>
  414509:	movzx  eax,BYTE PTR [r12]
  41450e:	jmp    414085 <__sprintf_chk@plt+0x12d95>
  414513:	nop    DWORD PTR [rax+rax*1+0x0]
  414518:	cmp    al,0x2a
  41451a:	je     414220 <__sprintf_chk@plt+0x12f30>
  414520:	add    rbx,0x1
  414524:	mov    r12,r13
  414527:	jmp    414085 <__sprintf_chk@plt+0x12d95>
  41452c:	nop    DWORD PTR [rax+0x0]
  414530:	mov    rdi,QWORD PTR [rbp+0x10]
  414534:	lea    rsi,[rip+0x28d3]        # 416e0e <__sprintf_chk@plt+0x15b1e>
  41453b:	xor    eax,eax
  41453d:	call   409640 <__sprintf_chk@plt+0x8350>
  414542:	mov    rdi,QWORD PTR [rbp+0x10]
  414546:	lea    rsi,[rip+0x24a5]        # 4169f2 <__sprintf_chk@plt+0x15702>
  41454d:	xor    eax,eax
  41454f:	call   409640 <__sprintf_chk@plt+0x8350>
  414554:	xor    edi,edi
  414556:	jmp    4144d1 <__sprintf_chk@plt+0x131e1>
  41455b:	nop    DWORD PTR [rax+rax*1+0x0]
  414560:	push   r15
  414562:	push   r14
  414564:	push   r13
  414566:	push   r12
  414568:	mov    r13,rdi
  41456b:	push   rbp
  41456c:	push   rbx
  41456d:	mov    ebp,esi
  41456f:	mov    esi,0x1
  414574:	sub    rsp,0x268
  41457b:	lea    rdx,[rsp+0x20]
  414580:	mov    rax,QWORD PTR fs:0x28
  414589:	mov    QWORD PTR [rsp+0x258],rax
  414591:	xor    eax,eax
  414593:	call   40bc30 <__sprintf_chk@plt+0xa940>
  414598:	lea    rdx,[rsp+0x28]
  41459d:	mov    esi,0x2
  4145a2:	mov    rdi,r13
  4145a5:	mov    QWORD PTR [rsp+0x10],rax
  4145aa:	call   40bc30 <__sprintf_chk@plt+0xa940>
  4145af:	mov    rbx,QWORD PTR [rsp+0x20]
  4145b4:	mov    edx,0x1
  4145b9:	mov    esi,0x3
  4145be:	mov    rdi,r13
  4145c1:	mov    r12,rax
  4145c4:	call   409e30 <__sprintf_chk@plt+0x8b40>
  4145c9:	lea    rdx,[rbx+rax*1+0x1]
  4145ce:	test   rax,rax
  4145d1:	cmovs  rax,rdx
  4145d5:	mov    edx,0x0
  4145da:	test   rax,rax
  4145dd:	cmovs  rax,rdx
  4145e1:	xor    ebx,ebx
  4145e3:	sub    rax,0x1
  4145e7:	cmp    rax,0xffffffffffffffff
  4145eb:	je     4145f9 <__sprintf_chk@plt+0x13309>
  4145ed:	mov    rbx,QWORD PTR [rsp+0x20]
  4145f2:	cmp    rax,rbx
  4145f5:	cmovbe rbx,rax
  4145f9:	test   ebp,ebp
  4145fb:	je     414770 <__sprintf_chk@plt+0x13480>
  414601:	mov    esi,0x4
  414606:	mov    rdi,r13
  414609:	call   402cd0 <__sprintf_chk@plt+0x19e0>
  41460e:	test   eax,eax
  414610:	jne    41462a <__sprintf_chk@plt+0x1333a>
  414612:	lea    rsi,[rip+0x2808]        # 416e21 <__sprintf_chk@plt+0x15b31>
  414619:	mov    rdi,r12
  41461c:	call   401200 <strpbrk@plt>
  414621:	test   rax,rax
  414624:	jne    414770 <__sprintf_chk@plt+0x13480>
  41462a:	mov    rax,QWORD PTR [rsp+0x28]
  41462f:	mov    rcx,QWORD PTR [rsp+0x10]
  414634:	test   rax,rax
  414637:	mov    QWORD PTR [rsp+0x18],rax
  41463c:	lea    rbp,[rcx+rbx*1]
  414640:	je     4146d8 <__sprintf_chk@plt+0x133e8>
  414646:	mov    rcx,QWORD PTR [rsp+0x20]
  41464b:	sub    rcx,rbx
  41464e:	cmp    rax,rcx
  414651:	mov    rbx,rcx
  414654:	ja     4146ba <__sprintf_chk@plt+0x133ca>
  414656:	lea    r14,[rax-0x1]
  41465a:	sub    rbx,r14
  41465d:	je     4146ba <__sprintf_chk@plt+0x133ca>
  41465f:	movsx  eax,BYTE PTR [r12]
  414664:	mov    DWORD PTR [rsp+0x4],eax
  414668:	lea    rax,[r12+0x1]
  41466d:	mov    QWORD PTR [rsp+0x8],rax
  414672:	jmp    4146a3 <__sprintf_chk@plt+0x133b3>
  414674:	nop    DWORD PTR [rax+0x0]
  414678:	lea    r15,[r12+0x1]
  41467d:	mov    rsi,QWORD PTR [rsp+0x8]
  414682:	mov    rdx,r14
  414685:	mov    rdi,r15
  414688:	call   401160 <memcmp@plt>
  41468d:	test   eax,eax
  41468f:	je     414760 <__sprintf_chk@plt+0x13470>
  414695:	mov    rax,r15
  414698:	sub    rax,rbp
  41469b:	mov    rbp,r15
  41469e:	sub    rbx,rax
  4146a1:	je     4146ba <__sprintf_chk@plt+0x133ca>
  4146a3:	mov    esi,DWORD PTR [rsp+0x4]
  4146a7:	mov    rdx,rbx
  4146aa:	mov    rdi,rbp
  4146ad:	call   401150 <memchr@plt>
  4146b2:	test   rax,rax
  4146b5:	mov    r12,rax
  4146b8:	jne    414678 <__sprintf_chk@plt+0x13388>
  4146ba:	mov    rax,QWORD PTR [r13+0x10]
  4146be:	mov    DWORD PTR [rax+0x8],0x0
  4146c5:	add    rax,0x10
  4146c9:	mov    QWORD PTR [r13+0x10],rax
  4146cd:	mov    eax,0x1
  4146d2:	jmp    41472e <__sprintf_chk@plt+0x1343e>
  4146d4:	nop    DWORD PTR [rax+0x0]
  4146d8:	test   rbp,rbp
  4146db:	je     4146ba <__sprintf_chk@plt+0x133ca>
  4146dd:	sub    rbp,QWORD PTR [rsp+0x10]
  4146e2:	mov    rdx,QWORD PTR [r13+0x10]
  4146e6:	vxorpd xmm0,xmm0,xmm0
  4146ea:	mov    DWORD PTR [rdx+0x8],0x3
  4146f1:	lea    rax,[rbp+0x1]
  4146f5:	add    rbp,QWORD PTR [rsp+0x18]
  4146fa:	vcvtsi2sd xmm0,xmm0,rax
  4146ff:	vmovsd QWORD PTR [rdx],xmm0
  414703:	mov    rax,QWORD PTR [r13+0x10]
  414707:	vxorpd xmm0,xmm0,xmm0
  41470b:	lea    rdx,[rax+0x10]
  41470f:	vcvtsi2sd xmm0,xmm0,rbp
  414714:	mov    QWORD PTR [r13+0x10],rdx
  414718:	vmovsd QWORD PTR [rax+0x10],xmm0
  41471d:	mov    DWORD PTR [rax+0x18],0x3
  414724:	add    QWORD PTR [r13+0x10],0x10
  414729:	mov    eax,0x2
  41472e:	mov    rcx,QWORD PTR [rsp+0x258]
  414736:	xor    rcx,QWORD PTR fs:0x28
  41473f:	jne    414865 <__sprintf_chk@plt+0x13575>
  414745:	add    rsp,0x268
  41474c:	pop    rbx
  41474d:	pop    rbp
  41474e:	pop    r12
  414750:	pop    r13
  414752:	pop    r14
  414754:	pop    r15
  414756:	ret    
  414757:	nop    WORD PTR [rax+rax*1+0x0]
  414760:	mov    rbp,r12
  414763:	jmp    4146dd <__sprintf_chk@plt+0x133ed>
  414768:	nop    DWORD PTR [rax+rax*1+0x0]
  414770:	xor    r14d,r14d
  414773:	cmp    BYTE PTR [r12],0x5e
  414778:	je     414856 <__sprintf_chk@plt+0x13566>
  41477e:	mov    rax,QWORD PTR [rsp+0x10]
  414783:	mov    QWORD PTR [rsp+0x40],r13
  414788:	lea    r15,[rsp+0x30]
  41478d:	xor    r14d,0x1
  414791:	add    rbx,rax
  414794:	mov    QWORD PTR [rsp+0x30],rax
  414799:	add    rax,QWORD PTR [rsp+0x20]
  41479e:	mov    QWORD PTR [rsp+0x38],rax
  4147a3:	jmp    4147c3 <__sprintf_chk@plt+0x134d3>
  4147a5:	nop    DWORD PTR [rax]
  4147a8:	cmp    rbx,QWORD PTR [rsp+0x38]
  4147ad:	lea    rax,[rbx+0x1]
  4147b1:	jae    4146ba <__sprintf_chk@plt+0x133ca>
  4147b7:	test   r14b,r14b
  4147ba:	je     4146ba <__sprintf_chk@plt+0x133ca>
  4147c0:	mov    rbx,rax
  4147c3:	mov    rdx,r12
  4147c6:	mov    rsi,rbx
  4147c9:	mov    rdi,r15
  4147cc:	mov    DWORD PTR [rsp+0x48],0x0
  4147d4:	call   414060 <__sprintf_chk@plt+0x12d70>
  4147d9:	test   rax,rax
  4147dc:	je     4147a8 <__sprintf_chk@plt+0x134b8>
  4147de:	test   ebp,ebp
  4147e0:	je     414843 <__sprintf_chk@plt+0x13553>
  4147e2:	mov    rsi,QWORD PTR [rsp+0x10]
  4147e7:	mov    rcx,QWORD PTR [r13+0x10]
  4147eb:	mov    rdi,r15
  4147ee:	vxorpd xmm0,xmm0,xmm0
  4147f2:	sub    rbx,rsi
  4147f5:	mov    DWORD PTR [rcx+0x8],0x3
  4147fc:	sub    rax,rsi
  4147ff:	lea    rdx,[rbx+0x1]
  414803:	xor    esi,esi
  414805:	vcvtsi2sd xmm0,xmm0,rdx
  41480a:	vmovsd QWORD PTR [rcx],xmm0
  41480e:	mov    rdx,QWORD PTR [r13+0x10]
  414812:	vxorpd xmm0,xmm0,xmm0
  414816:	lea    rcx,[rdx+0x10]
  41481a:	vcvtsi2sd xmm0,xmm0,rax
  41481f:	mov    QWORD PTR [r13+0x10],rcx
  414823:	vmovsd QWORD PTR [rdx+0x10],xmm0
  414828:	mov    DWORD PTR [rdx+0x18],0x3
  41482f:	add    QWORD PTR [r13+0x10],0x10
  414834:	xor    edx,edx
  414836:	call   40b150 <__sprintf_chk@plt+0x9e60>
  41483b:	add    eax,0x2
  41483e:	jmp    41472e <__sprintf_chk@plt+0x1343e>
  414843:	mov    rdx,rax
  414846:	mov    rsi,rbx
  414849:	mov    rdi,r15
  41484c:	call   40b150 <__sprintf_chk@plt+0x9e60>
  414851:	jmp    41472e <__sprintf_chk@plt+0x1343e>
  414856:	add    r12,0x1
  41485a:	mov    r14d,0x1
  414860:	jmp    41477e <__sprintf_chk@plt+0x1348e>
  414865:	call   401100 <__stack_chk_fail@plt>
  41486a:	nop    WORD PTR [rax+rax*1+0x0]
  414870:	xor    esi,esi
  414872:	jmp    414560 <__sprintf_chk@plt+0x13270>
  414877:	nop    WORD PTR [rax+rax*1+0x0]
  414880:	mov    esi,0x1
  414885:	jmp    414560 <__sprintf_chk@plt+0x13270>
  41488a:	nop    WORD PTR [rax+rax*1+0x0]
  414890:	push   r15
  414892:	push   r14
  414894:	mov    r14,rdx
  414897:	push   r13
  414899:	push   r12
  41489b:	mov    r13,rdi
  41489e:	push   rbp
  41489f:	push   rbx
  4148a0:	xor    ebx,ebx
  4148a2:	mov    r12,rsi
  4148a5:	mov    rbp,rcx
  4148a8:	sub    rsp,0x8
  4148ac:	mov    rax,QWORD PTR [rdi+0x8]
  4148b0:	mov    r15,rax
  4148b3:	sub    r15,rsi
  4148b6:	cmp    rsi,rax
  4148b9:	jb     4148c9 <__sprintf_chk@plt+0x135d9>
  4148bb:	jmp    4148dd <__sprintf_chk@plt+0x135ed>
  4148bd:	nop    DWORD PTR [rax]
  4148c0:	add    rbx,0x1
  4148c4:	cmp    rbx,r15
  4148c7:	je     4148dd <__sprintf_chk@plt+0x135ed>
  4148c9:	movzx  edi,BYTE PTR [r12+rbx*1]
  4148ce:	mov    rdx,rbp
  4148d1:	mov    rsi,r14
  4148d4:	call   4030c0 <__sprintf_chk@plt+0x1dd0>
  4148d9:	test   eax,eax
  4148db:	jne    4148c0 <__sprintf_chk@plt+0x135d0>
  4148dd:	add    rbp,0x1
  4148e1:	nop    DWORD PTR [rax+0x0]
  4148e8:	lea    rsi,[r12+rbx*1]
  4148ec:	mov    rdx,rbp
  4148ef:	mov    rdi,r13
  4148f2:	call   414060 <__sprintf_chk@plt+0x12d70>
  4148f7:	test   rax,rax
  4148fa:	jne    414906 <__sprintf_chk@plt+0x13616>
  4148fc:	sub    rbx,0x1
  414900:	cmp    rbx,0xffffffffffffffff
  414904:	jne    4148e8 <__sprintf_chk@plt+0x135f8>
  414906:	add    rsp,0x8
  41490a:	pop    rbx
  41490b:	pop    rbp
  41490c:	pop    r12
  41490e:	pop    r13
  414910:	pop    r14
  414912:	pop    r15
  414914:	ret    
  414915:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  414920:	push   r15
  414922:	push   r14
  414924:	mov    esi,0x1
  414929:	push   r13
  41492b:	push   r12
  41492d:	mov    r13,rdi
  414930:	push   rbp
  414931:	push   rbx
  414932:	sub    rsp,0x22a8
  414939:	lea    rdx,[rsp+0x50]
  41493e:	mov    rax,QWORD PTR fs:0x28
  414947:	mov    QWORD PTR [rsp+0x2298],rax
  41494f:	xor    eax,eax
  414951:	call   40bc30 <__sprintf_chk@plt+0xa940>
  414956:	xor    edx,edx
  414958:	mov    esi,0x2
  41495d:	mov    rdi,r13
  414960:	mov    rbx,rax
  414963:	call   40bc30 <__sprintf_chk@plt+0xa940>
  414968:	mov    r14,rax
  41496b:	mov    QWORD PTR [rsp+0x18],rax
  414970:	mov    rax,QWORD PTR [r13+0x18]
  414974:	lea    rdx,[rax+0x20]
  414978:	cmp    rdx,QWORD PTR [r13+0x10]
  41497c:	jae    414de7 <__sprintf_chk@plt+0x13af7>
  414982:	lea    rcx,[rip+0x1d47]        # 4166d0 <__sprintf_chk@plt+0x153e0>
  414989:	cmp    rdx,rcx
  41498c:	je     414de7 <__sprintf_chk@plt+0x13af7>
  414992:	mov    ebp,DWORD PTR [rax+0x28]
  414995:	mov    rax,QWORD PTR [rsp+0x50]
  41499a:	mov    esi,0x4
  41499f:	mov    rdi,r13
  4149a2:	lea    rdx,[rax+0x1]
  4149a6:	call   409e30 <__sprintf_chk@plt+0x8b40>
  4149ab:	cmp    BYTE PTR [r14],0x5e
  4149af:	mov    DWORD PTR [rsp+0x24],0x0
  4149b7:	je     414e10 <__sprintf_chk@plt+0x13b20>
  4149bd:	sub    ebp,0x3
  4149c0:	cmp    ebp,0x3
  4149c3:	jbe    4149e0 <__sprintf_chk@plt+0x136f0>
  4149c5:	lea    rdx,[rip+0x2a4c]        # 417418 <__sprintf_chk@plt+0x16128>
  4149cc:	mov    esi,0x3
  4149d1:	mov    rdi,r13
  4149d4:	call   4098a0 <__sprintf_chk@plt+0x85b0>
  4149d9:	nop    DWORD PTR [rax+0x0]
  4149e0:	lea    rdx,[rsp+0x298]
  4149e8:	lea    rdi,[rsp+0x280]
  4149f0:	xor    r12d,r12d
  4149f3:	mov    DWORD PTR [rsp+0x30],eax
  4149f7:	mov    QWORD PTR [rsp+0x290],r13
  4149ff:	mov    QWORD PTR [rsp+0x280],rdx
  414a07:	mov    rdx,rbx
  414a0a:	add    rdx,QWORD PTR [rsp+0x50]
  414a0f:	test   eax,eax
  414a11:	mov    QWORD PTR [rsp+0x10],rdi
  414a16:	mov    DWORD PTR [rsp+0x288],0x0
  414a21:	mov    QWORD PTR [rsp+0x70],r13
  414a26:	mov    QWORD PTR [rsp+0x60],rbx
  414a2b:	mov    QWORD PTR [rsp+0x68],rdx
  414a30:	jle    414bb6 <__sprintf_chk@plt+0x138c6>
  414a36:	lea    rax,[rsp+0x60]
  414a3b:	lea    rsi,[rsp+0x58]
  414a40:	mov    QWORD PTR [rsp+0x38],r13
  414a45:	mov    QWORD PTR [rsp+0x8],rax
  414a4a:	lea    rax,[rsp+0x2298]
  414a52:	mov    QWORD PTR [rsp+0x28],rsi
  414a57:	mov    r14,rax
  414a5a:	mov    rdx,QWORD PTR [rsp+0x18]
  414a5f:	mov    rdi,QWORD PTR [rsp+0x8]
  414a64:	mov    rsi,rbx
  414a67:	mov    DWORD PTR [rsp+0x78],0x0
  414a6f:	call   414060 <__sprintf_chk@plt+0x12d70>
  414a74:	test   rax,rax
  414a77:	mov    rbp,rax
  414a7a:	je     414c99 <__sprintf_chk@plt+0x139a9>
  414a80:	mov    r13,QWORD PTR [rsp+0x70]
  414a85:	add    r12d,0x1
  414a89:	mov    rcx,QWORD PTR [r13+0x18]
  414a8d:	mov    rdx,QWORD PTR [r13+0x10]
  414a91:	lea    rax,[rcx+0x20]
  414a95:	cmp    rax,rdx
  414a98:	jae    414c5b <__sprintf_chk@plt+0x1396b>
  414a9e:	lea    rdi,[rip+0x1c2b]        # 4166d0 <__sprintf_chk@plt+0x153e0>
  414aa5:	cmp    rax,rdi
  414aa8:	je     414c5b <__sprintf_chk@plt+0x1396b>
  414aae:	mov    ecx,DWORD PTR [rcx+0x28]
  414ab1:	cmp    ecx,0x5
  414ab4:	je     414c20 <__sprintf_chk@plt+0x13930>
  414aba:	jg     414d70 <__sprintf_chk@plt+0x13a80>
  414ac0:	cmp    ecx,0x3
  414ac3:	jl     414c5b <__sprintf_chk@plt+0x1396b>
  414ac9:	mov    rdx,QWORD PTR [rsp+0x28]
  414ace:	mov    rdi,r13
  414ad1:	mov    esi,0x3
  414ad6:	xor    r13d,r13d
  414ad9:	call   40ba10 <__sprintf_chk@plt+0xa720>
  414ade:	mov    r15,rax
  414ae1:	mov    rax,rbp
  414ae4:	sub    rax,rbx
  414ae7:	cmp    QWORD PTR [rsp+0x58],0x0
  414aed:	mov    QWORD PTR [rsp+0x40],rax
  414af2:	je     414b8d <__sprintf_chk@plt+0x1389d>
  414af8:	mov    DWORD PTR [rsp+0x34],r12d
  414afd:	jmp    414b2f <__sprintf_chk@plt+0x1383f>
  414aff:	nop
  414b00:	mov    rax,QWORD PTR [rsp+0x280]
  414b08:	cmp    rax,r14
  414b0b:	jae    414cd8 <__sprintf_chk@plt+0x139e8>
  414b11:	lea    rcx,[rax+0x1]
  414b15:	mov    QWORD PTR [rsp+0x280],rcx
  414b1d:	movzx  edx,BYTE PTR [r12]
  414b22:	mov    BYTE PTR [rax],dl
  414b24:	add    r13,0x1
  414b28:	cmp    r13,QWORD PTR [rsp+0x58]
  414b2d:	jae    414b88 <__sprintf_chk@plt+0x13898>
  414b2f:	lea    r12,[r15+r13*1]
  414b33:	cmp    BYTE PTR [r12],0x25
  414b38:	jne    414b00 <__sprintf_chk@plt+0x13810>
  414b3a:	add    r13,0x1
  414b3e:	call   4012e0 <__ctype_b_loc@plt>
  414b43:	lea    rdx,[r15+r13*1]
  414b47:	mov    rax,QWORD PTR [rax]
  414b4a:	movzx  ecx,BYTE PTR [rdx]
  414b4d:	test   BYTE PTR [rax+rcx*2+0x1],0x8
  414b52:	jne    414d40 <__sprintf_chk@plt+0x13a50>
  414b58:	mov    rax,QWORD PTR [rsp+0x280]
  414b60:	cmp    rax,r14
  414b63:	jae    414e28 <__sprintf_chk@plt+0x13b38>
  414b69:	lea    rcx,[rax+0x1]
  414b6d:	add    r13,0x1
  414b71:	mov    QWORD PTR [rsp+0x280],rcx
  414b79:	movzx  edx,BYTE PTR [rdx]
  414b7c:	mov    BYTE PTR [rax],dl
  414b7e:	cmp    r13,QWORD PTR [rsp+0x58]
  414b83:	jb     414b2f <__sprintf_chk@plt+0x1383f>
  414b85:	nop    DWORD PTR [rax]
  414b88:	mov    r12d,DWORD PTR [rsp+0x34]
  414b8d:	cmp    rbp,rbx
  414b90:	jbe    414c99 <__sprintf_chk@plt+0x139a9>
  414b96:	mov    rbx,rbp
  414b99:	mov    eax,DWORD PTR [rsp+0x24]
  414b9d:	test   eax,eax
  414b9f:	jne    414bac <__sprintf_chk@plt+0x138bc>
  414ba1:	cmp    DWORD PTR [rsp+0x30],r12d
  414ba6:	jg     414a5a <__sprintf_chk@plt+0x1376a>
  414bac:	mov    r13,QWORD PTR [rsp+0x38]
  414bb1:	mov    rdx,QWORD PTR [rsp+0x68]
  414bb6:	sub    rdx,rbx
  414bb9:	mov    rsi,rbx
  414bbc:	mov    rbx,QWORD PTR [rsp+0x10]
  414bc1:	mov    rdi,rbx
  414bc4:	call   40ac40 <__sprintf_chk@plt+0x9950>
  414bc9:	mov    rdi,rbx
  414bcc:	call   40acb0 <__sprintf_chk@plt+0x99c0>
  414bd1:	mov    rax,QWORD PTR [r13+0x10]
  414bd5:	vxorpd xmm0,xmm0,xmm0
  414bd9:	mov    DWORD PTR [rax+0x8],0x3
  414be0:	vcvtsi2sd xmm0,xmm0,r12d
  414be5:	vmovsd QWORD PTR [rax],xmm0
  414be9:	add    QWORD PTR [r13+0x10],0x10
  414bee:	mov    eax,0x2
  414bf3:	mov    rbx,QWORD PTR [rsp+0x2298]
  414bfb:	xor    rbx,QWORD PTR fs:0x28
  414c04:	jne    414e89 <__sprintf_chk@plt+0x13b99>
  414c0a:	add    rsp,0x22a8
  414c11:	pop    rbx
  414c12:	pop    rbp
  414c13:	pop    r12
  414c15:	pop    r13
  414c17:	pop    r14
  414c19:	pop    r15
  414c1b:	ret    
  414c1c:	nop    DWORD PTR [rax+0x0]
  414c20:	mov    rdi,QWORD PTR [rsp+0x8]
  414c25:	xor    esi,esi
  414c27:	mov    rcx,rbp
  414c2a:	mov    rdx,rbx
  414c2d:	call   40b080 <__sprintf_chk@plt+0x9d90>
  414c32:	mov    rax,QWORD PTR [r13+0x18]
  414c36:	mov    rdx,QWORD PTR [r13+0x10]
  414c3a:	mov    rdi,r13
  414c3d:	lea    rsi,[rax+0x20]
  414c41:	lea    rax,[rip+0x1a88]        # 4166d0 <__sprintf_chk@plt+0x153e0>
  414c48:	cmp    rsi,rdx
  414c4b:	cmovae rsi,rax
  414c4f:	sub    rdx,0x10
  414c53:	mov    rcx,rdx
  414c56:	call   4082f0 <__sprintf_chk@plt+0x7000>
  414c5b:	mov    esi,0xffffffff
  414c60:	mov    rdi,r13
  414c63:	call   402cd0 <__sprintf_chk@plt+0x19e0>
  414c68:	test   eax,eax
  414c6a:	jne    414cf0 <__sprintf_chk@plt+0x13a00>
  414c70:	sub    QWORD PTR [r13+0x10],0x10
  414c75:	mov    rdx,rbp
  414c78:	mov    rsi,rbx
  414c7b:	sub    rdx,rbx
  414c7e:	mov    rdi,r13
  414c81:	call   409540 <__sprintf_chk@plt+0x8250>
  414c86:	mov    rdi,QWORD PTR [rsp+0x10]
  414c8b:	call   40bae0 <__sprintf_chk@plt+0xa7f0>
  414c90:	cmp    rbp,rbx
  414c93:	ja     414b96 <__sprintf_chk@plt+0x138a6>
  414c99:	mov    rdx,QWORD PTR [rsp+0x68]
  414c9e:	cmp    rdx,rbx
  414ca1:	jbe    414e7f <__sprintf_chk@plt+0x13b8f>
  414ca7:	mov    rax,QWORD PTR [rsp+0x280]
  414caf:	cmp    rax,r14
  414cb2:	jae    414dd0 <__sprintf_chk@plt+0x13ae0>
  414cb8:	lea    rdx,[rax+0x1]
  414cbc:	add    rbx,0x1
  414cc0:	mov    QWORD PTR [rsp+0x280],rdx
  414cc8:	movzx  edx,BYTE PTR [rbx-0x1]
  414ccc:	mov    BYTE PTR [rax],dl
  414cce:	jmp    414b99 <__sprintf_chk@plt+0x138a9>
  414cd3:	nop    DWORD PTR [rax+rax*1+0x0]
  414cd8:	mov    rdi,QWORD PTR [rsp+0x10]
  414cdd:	call   40ac10 <__sprintf_chk@plt+0x9920>
  414ce2:	mov    rax,QWORD PTR [rsp+0x280]
  414cea:	jmp    414b11 <__sprintf_chk@plt+0x13821>
  414cef:	nop
  414cf0:	mov    rax,QWORD PTR [r13+0x10]
  414cf4:	lea    rsi,[rip+0x19d5]        # 4166d0 <__sprintf_chk@plt+0x153e0>
  414cfb:	lea    rdx,[rax-0x10]
  414cff:	cmp    rdx,rsi
  414d02:	je     414e70 <__sprintf_chk@plt+0x13b80>
  414d08:	movsxd rax,DWORD PTR [rax-0x8]
  414d0c:	lea    edx,[rax-0x3]
  414d0f:	cmp    edx,0x1
  414d12:	jbe    414c86 <__sprintf_chk@plt+0x13996>
  414d18:	cmp    eax,0xffffffff
  414d1b:	mov    r15,r13
  414d1e:	je     414e8e <__sprintf_chk@plt+0x13b9e>
  414d24:	lea    rdx,[rip+0x8075]        # 41cda0 <__sprintf_chk@plt+0x1bab0>
  414d2b:	mov    rdx,QWORD PTR [rdx+rax*8]
  414d2f:	lea    rsi,[rip+0x2702]        # 417438 <__sprintf_chk@plt+0x16148>
  414d36:	mov    rdi,r15
  414d39:	xor    eax,eax
  414d3b:	call   409640 <__sprintf_chk@plt+0x8350>
  414d40:	cmp    cl,0x30
  414d43:	je     414e50 <__sprintf_chk@plt+0x13b60>
  414d49:	mov    rdi,QWORD PTR [rsp+0x8]
  414d4e:	movsx  esi,cl
  414d51:	mov    rdx,rbx
  414d54:	sub    esi,0x31
  414d57:	mov    rcx,rbp
  414d5a:	call   40b080 <__sprintf_chk@plt+0x9d90>
  414d5f:	mov    rdi,QWORD PTR [rsp+0x10]
  414d64:	call   40bae0 <__sprintf_chk@plt+0xa7f0>
  414d69:	jmp    414b24 <__sprintf_chk@plt+0x13834>
  414d6e:	xchg   ax,ax
  414d70:	cmp    ecx,0x6
  414d73:	jne    414c5b <__sprintf_chk@plt+0x1396b>
  414d79:	cmp    rax,rdx
  414d7c:	jb     414d87 <__sprintf_chk@plt+0x13a97>
  414d7e:	lea    rax,[rip+0x194b]        # 4166d0 <__sprintf_chk@plt+0x153e0>
  414d85:	xor    ecx,ecx
  414d87:	mov    rax,QWORD PTR [rax]
  414d8a:	mov    rdi,QWORD PTR [rsp+0x8]
  414d8f:	add    rdx,0x10
  414d93:	mov    DWORD PTR [rdx-0x8],ecx
  414d96:	mov    rsi,rbx
  414d99:	mov    QWORD PTR [rdx-0x10],rax
  414d9d:	mov    QWORD PTR [r13+0x10],rdx
  414da1:	mov    rdx,rbp
  414da4:	call   40b150 <__sprintf_chk@plt+0x9e60>
  414da9:	cdqe   
  414dab:	mov    rsi,0xfffffffffffffff0
  414db2:	mov    edx,0x1
  414db7:	shl    rax,0x4
  414dbb:	mov    rdi,r13
  414dbe:	sub    rsi,rax
  414dc1:	add    rsi,QWORD PTR [r13+0x10]
  414dc5:	call   403e50 <__sprintf_chk@plt+0x2b60>
  414dca:	jmp    414c5b <__sprintf_chk@plt+0x1396b>
  414dcf:	nop
  414dd0:	mov    rdi,QWORD PTR [rsp+0x10]
  414dd5:	call   40ac10 <__sprintf_chk@plt+0x9920>
  414dda:	mov    rax,QWORD PTR [rsp+0x280]
  414de2:	jmp    414cb8 <__sprintf_chk@plt+0x139c8>
  414de7:	mov    rax,QWORD PTR [rsp+0x50]
  414dec:	mov    esi,0x4
  414df1:	mov    rdi,r13
  414df4:	lea    rdx,[rax+0x1]
  414df8:	call   409e30 <__sprintf_chk@plt+0x8b40>
  414dfd:	mov    rcx,QWORD PTR [rsp+0x18]
  414e02:	cmp    BYTE PTR [rcx],0x5e
  414e05:	jne    4149c5 <__sprintf_chk@plt+0x136d5>
  414e0b:	or     ebp,0xffffffff
  414e0e:	xchg   ax,ax
  414e10:	add    QWORD PTR [rsp+0x18],0x1
  414e16:	mov    DWORD PTR [rsp+0x24],0x1
  414e1e:	jmp    4149bd <__sprintf_chk@plt+0x136cd>
  414e23:	nop    DWORD PTR [rax+rax*1+0x0]
  414e28:	mov    rdi,QWORD PTR [rsp+0x10]
  414e2d:	mov    QWORD PTR [rsp+0x48],rdx
  414e32:	call   40ac10 <__sprintf_chk@plt+0x9920>
  414e37:	mov    rax,QWORD PTR [rsp+0x280]
  414e3f:	mov    rdx,QWORD PTR [rsp+0x48]
  414e44:	jmp    414b69 <__sprintf_chk@plt+0x13879>
  414e49:	nop    DWORD PTR [rax+0x0]
  414e50:	mov    rdx,QWORD PTR [rsp+0x40]
  414e55:	mov    rdi,QWORD PTR [rsp+0x10]
  414e5a:	mov    rsi,rbx
  414e5d:	call   40ac40 <__sprintf_chk@plt+0x9950>
  414e62:	jmp    414b24 <__sprintf_chk@plt+0x13834>
  414e67:	nop    WORD PTR [rax+rax*1+0x0]
  414e70:	mov    r15,r13
  414e73:	lea    rdx,[rip+0x1aaa]        # 416924 <__sprintf_chk@plt+0x15634>
  414e7a:	jmp    414d2f <__sprintf_chk@plt+0x13a3f>
  414e7f:	mov    r13,QWORD PTR [rsp+0x38]
  414e84:	jmp    414bb6 <__sprintf_chk@plt+0x138c6>
  414e89:	call   401100 <__stack_chk_fail@plt>
  414e8e:	lea    rdx,[rip+0x1a8f]        # 416924 <__sprintf_chk@plt+0x15634>
  414e95:	jmp    414d2f <__sprintf_chk@plt+0x13a3f>
  414e9a:	nop    WORD PTR [rax+rax*1+0x0]
  414ea0:	push   r14
  414ea2:	push   r13
  414ea4:	mov    esi,0xffffd8ed
  414ea9:	push   r12
  414eab:	push   rbp
  414eac:	mov    r13,rdi
  414eaf:	push   rbx
  414eb0:	sub    rsp,0x240
  414eb7:	lea    rdx,[rsp+0x8]
  414ebc:	lea    rbp,[rsp+0x10]
  414ec1:	mov    rax,QWORD PTR fs:0x28
  414eca:	mov    QWORD PTR [rsp+0x238],rax
  414ed2:	xor    eax,eax
  414ed4:	call   40ba10 <__sprintf_chk@plt+0xa720>
  414ed9:	xor    edx,edx
  414edb:	mov    r14,rax
  414ede:	mov    esi,0xffffd8ec
  414ee3:	mov    rdi,r13
  414ee6:	call   40ba10 <__sprintf_chk@plt+0xa720>
  414eeb:	mov    r12,rax
  414eee:	mov    rax,r14
  414ef1:	add    rax,QWORD PTR [rsp+0x8]
  414ef6:	mov    esi,0xffffd8eb
  414efb:	mov    rdi,r13
  414efe:	mov    QWORD PTR [rsp+0x20],r13
  414f03:	mov    QWORD PTR [rsp+0x10],r14
  414f08:	mov    QWORD PTR [rsp+0x18],rax
  414f0d:	call   403060 <__sprintf_chk@plt+0x1d70>
  414f12:	lea    rbx,[r14+rax*1]
  414f16:	cmp    rbx,QWORD PTR [rsp+0x18]
  414f1b:	jbe    414f37 <__sprintf_chk@plt+0x13c47>
  414f1d:	jmp    414ff8 <__sprintf_chk@plt+0x13d08>
  414f22:	nop    WORD PTR [rax+rax*1+0x0]
  414f28:	add    rbx,0x1
  414f2c:	cmp    QWORD PTR [rsp+0x18],rbx
  414f31:	jb     414ff8 <__sprintf_chk@plt+0x13d08>
  414f37:	mov    rdx,r12
  414f3a:	mov    rsi,rbx
  414f3d:	mov    rdi,rbp
  414f40:	mov    DWORD PTR [rsp+0x28],0x0
  414f48:	call   414060 <__sprintf_chk@plt+0x12d70>
  414f4d:	test   rax,rax
  414f50:	mov    r8,rax
  414f53:	je     414f28 <__sprintf_chk@plt+0x13c38>
  414f55:	sub    rax,r14
  414f58:	xor    edx,edx
  414f5a:	cmp    r8,rbx
  414f5d:	sete   dl
  414f60:	vxorpd xmm0,xmm0,xmm0
  414f64:	add    rax,rdx
  414f67:	mov    rdx,QWORD PTR [r13+0x10]
  414f6b:	mov    esi,0xffffd8eb
  414f70:	mov    rdi,r13
  414f73:	vcvtsi2sd xmm0,xmm0,rax
  414f78:	vmovsd QWORD PTR [rdx],xmm0
  414f7c:	mov    r9,QWORD PTR [r13+0x10]
  414f80:	mov    DWORD PTR [rdx+0x8],0x3
  414f87:	lea    rax,[r9+0x10]
  414f8b:	mov    QWORD PTR [r13+0x10],rax
  414f8f:	call   402b20 <__sprintf_chk@plt+0x1830>
  414f94:	mov    rdx,QWORD PTR [r9]
  414f97:	mov    QWORD PTR [rax],rdx
  414f9a:	mov    edx,DWORD PTR [r9+0x8]
  414f9e:	mov    DWORD PTR [rax+0x8],edx
  414fa1:	cmp    DWORD PTR [r9+0x8],0x3
  414fa6:	jle    414fdd <__sprintf_chk@plt+0x13ced>
  414fa8:	mov    rsi,QWORD PTR [r9]
  414fab:	test   BYTE PTR [rsi+0x9],0x3
  414faf:	je     414fdd <__sprintf_chk@plt+0x13ced>
  414fb1:	mov    rax,QWORD PTR [r13+0x28]
  414fb5:	mov    rax,QWORD PTR [rax+0x8]
  414fb9:	mov    rcx,QWORD PTR [rax]
  414fbc:	movzx  eax,BYTE PTR [rcx+0x9]
  414fc0:	test   al,0x4
  414fc2:	je     414fdd <__sprintf_chk@plt+0x13ced>
  414fc4:	mov    rdi,QWORD PTR [r13+0x20]
  414fc8:	cmp    BYTE PTR [rdi+0x21],0x1
  414fcc:	je     41501d <__sprintf_chk@plt+0x13d2d>
  414fce:	movzx  edx,BYTE PTR [rdi+0x20]
  414fd2:	and    eax,0xfffffff8
  414fd5:	and    edx,0x3
  414fd8:	or     eax,edx
  414fda:	mov    BYTE PTR [rcx+0x9],al
  414fdd:	sub    QWORD PTR [r13+0x10],0x10
  414fe2:	mov    rdx,r8
  414fe5:	mov    rsi,rbx
  414fe8:	mov    rdi,rbp
  414feb:	call   40b150 <__sprintf_chk@plt+0x9e60>
  414ff0:	jmp    414ffa <__sprintf_chk@plt+0x13d0a>
  414ff2:	nop    WORD PTR [rax+rax*1+0x0]
  414ff8:	xor    eax,eax
  414ffa:	mov    rcx,QWORD PTR [rsp+0x238]
  415002:	xor    rcx,QWORD PTR fs:0x28
  41500b:	jne    415024 <__sprintf_chk@plt+0x13d34>
  41500d:	add    rsp,0x240
  415014:	pop    rbx
  415015:	pop    rbp
  415016:	pop    r12
  415018:	pop    r13
  41501a:	pop    r14
  41501c:	ret    
  41501d:	call   401a50 <__sprintf_chk@plt+0x760>
  415022:	jmp    414fdd <__sprintf_chk@plt+0x13ced>
  415024:	call   401100 <__stack_chk_fail@plt>
  415029:	nop    DWORD PTR [rax+0x0]
  415030:	endbr64 
  415034:	push   r15
  415036:	lea    r15,[rip+0x76eb]        # 41c728 <__sprintf_chk@plt+0x1b438>
  41503d:	push   r14
  41503f:	mov    r14,rdx
  415042:	push   r13
  415044:	mov    r13,rsi
  415047:	push   r12
  415049:	mov    r12d,edi
  41504c:	push   rbp
  41504d:	lea    rbp,[rip+0x76dc]        # 41c730 <__sprintf_chk@plt+0x1b440>
  415054:	push   rbx
  415055:	sub    rbp,r15
  415058:	sub    rsp,0x8
  41505c:	call   401000 <__ctype_toupper_loc@plt-0x30>
  415061:	sar    rbp,0x3
  415065:	je     415086 <__sprintf_chk@plt+0x13d96>
  415067:	xor    ebx,ebx
  415069:	nop    DWORD PTR [rax+0x0]
  415070:	mov    rdx,r14
  415073:	mov    rsi,r13
  415076:	mov    edi,r12d
  415079:	call   QWORD PTR [r15+rbx*8]
  41507d:	add    rbx,0x1
  415081:	cmp    rbp,rbx
  415084:	jne    415070 <__sprintf_chk@plt+0x13d80>
  415086:	add    rsp,0x8
  41508a:	pop    rbx
  41508b:	pop    rbp
  41508c:	pop    r12
  41508e:	pop    r13
  415090:	pop    r14
  415092:	pop    r15
  415094:	ret    
  415095:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4150a0:	endbr64 
  4150a4:	ret    

Disassembly of section .fini:

00000000004150a8 <.fini>:
  4150a8:	endbr64 
  4150ac:	sub    rsp,0x8
  4150b0:	add    rsp,0x8
  4150b4:	ret    
