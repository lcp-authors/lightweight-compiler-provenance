
../repos/eddieantonio-ocreval-3ab279a/editopcost/editopcost:     file format elf64-x86-64


Disassembly of section .init:

0000000000401000 <.init>:
  401000:	endbr64 
  401004:	sub    rsp,0x8
  401008:	mov    rax,QWORD PTR [rip+0x3fe1]        # 404ff0 <__gmon_start__>
  40100f:	test   rax,rax
  401012:	je     401016 <free@plt-0x15a>
  401014:	call   rax
  401016:	add    rsp,0x8
  40101a:	ret    

Disassembly of section .plt:

0000000000401020 <.plt>:
  401020:	push   QWORD PTR [rip+0x3fe2]        # 405008 <error@@Base+0x2c3d>
  401026:	bnd jmp QWORD PTR [rip+0x3fe3]        # 405010 <error@@Base+0x2c45>
  40102d:	nop    DWORD PTR [rax]
  401030:	endbr64 
  401034:	push   0x0
  401039:	bnd jmp 401020 <free@plt-0x150>
  40103f:	nop
  401040:	endbr64 
  401044:	push   0x1
  401049:	bnd jmp 401020 <free@plt-0x150>
  40104f:	nop
  401050:	endbr64 
  401054:	push   0x2
  401059:	bnd jmp 401020 <free@plt-0x150>
  40105f:	nop
  401060:	endbr64 
  401064:	push   0x3
  401069:	bnd jmp 401020 <free@plt-0x150>
  40106f:	nop
  401070:	endbr64 
  401074:	push   0x4
  401079:	bnd jmp 401020 <free@plt-0x150>
  40107f:	nop
  401080:	endbr64 
  401084:	push   0x5
  401089:	bnd jmp 401020 <free@plt-0x150>
  40108f:	nop
  401090:	endbr64 
  401094:	push   0x6
  401099:	bnd jmp 401020 <free@plt-0x150>
  40109f:	nop
  4010a0:	endbr64 
  4010a4:	push   0x7
  4010a9:	bnd jmp 401020 <free@plt-0x150>
  4010af:	nop
  4010b0:	endbr64 
  4010b4:	push   0x8
  4010b9:	bnd jmp 401020 <free@plt-0x150>
  4010bf:	nop
  4010c0:	endbr64 
  4010c4:	push   0x9
  4010c9:	bnd jmp 401020 <free@plt-0x150>
  4010cf:	nop
  4010d0:	endbr64 
  4010d4:	push   0xa
  4010d9:	bnd jmp 401020 <free@plt-0x150>
  4010df:	nop
  4010e0:	endbr64 
  4010e4:	push   0xb
  4010e9:	bnd jmp 401020 <free@plt-0x150>
  4010ef:	nop
  4010f0:	endbr64 
  4010f4:	push   0xc
  4010f9:	bnd jmp 401020 <free@plt-0x150>
  4010ff:	nop
  401100:	endbr64 
  401104:	push   0xd
  401109:	bnd jmp 401020 <free@plt-0x150>
  40110f:	nop
  401110:	endbr64 
  401114:	push   0xe
  401119:	bnd jmp 401020 <free@plt-0x150>
  40111f:	nop
  401120:	endbr64 
  401124:	push   0xf
  401129:	bnd jmp 401020 <free@plt-0x150>
  40112f:	nop
  401130:	endbr64 
  401134:	push   0x10
  401139:	bnd jmp 401020 <free@plt-0x150>
  40113f:	nop
  401140:	endbr64 
  401144:	push   0x11
  401149:	bnd jmp 401020 <free@plt-0x150>
  40114f:	nop
  401150:	endbr64 
  401154:	push   0x12
  401159:	bnd jmp 401020 <free@plt-0x150>
  40115f:	nop
  401160:	endbr64 
  401164:	push   0x13
  401169:	bnd jmp 401020 <free@plt-0x150>
  40116f:	nop

Disassembly of section .plt.sec:

0000000000401170 <free@plt>:
  401170:	endbr64 
  401174:	bnd jmp QWORD PTR [rip+0x3e9d]        # 405018 <free@GLIBC_2.2.5>
  40117b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401180 <unlink@plt>:
  401180:	endbr64 
  401184:	bnd jmp QWORD PTR [rip+0x3e95]        # 405020 <unlink@GLIBC_2.2.5>
  40118b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401190 <strncmp@plt>:
  401190:	endbr64 
  401194:	bnd jmp QWORD PTR [rip+0x3e8d]        # 405028 <strncmp@GLIBC_2.2.5>
  40119b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004011a0 <getpid@plt>:
  4011a0:	endbr64 
  4011a4:	bnd jmp QWORD PTR [rip+0x3e85]        # 405030 <getpid@GLIBC_2.2.5>
  4011ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004011b0 <fclose@plt>:
  4011b0:	endbr64 
  4011b4:	bnd jmp QWORD PTR [rip+0x3e7d]        # 405038 <fclose@GLIBC_2.2.5>
  4011bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004011c0 <strlen@plt>:
  4011c0:	endbr64 
  4011c4:	bnd jmp QWORD PTR [rip+0x3e75]        # 405040 <strlen@GLIBC_2.2.5>
  4011cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004011d0 <__stack_chk_fail@plt>:
  4011d0:	endbr64 
  4011d4:	bnd jmp QWORD PTR [rip+0x3e6d]        # 405048 <__stack_chk_fail@GLIBC_2.4>
  4011db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004011e0 <printf@plt>:
  4011e0:	endbr64 
  4011e4:	bnd jmp QWORD PTR [rip+0x3e65]        # 405050 <printf@GLIBC_2.2.5>
  4011eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004011f0 <fgets@plt>:
  4011f0:	endbr64 
  4011f4:	bnd jmp QWORD PTR [rip+0x3e5d]        # 405058 <fgets@GLIBC_2.2.5>
  4011fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401200 <calloc@plt>:
  401200:	endbr64 
  401204:	bnd jmp QWORD PTR [rip+0x3e55]        # 405060 <calloc@GLIBC_2.2.5>
  40120b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401210 <strcmp@plt>:
  401210:	endbr64 
  401214:	bnd jmp QWORD PTR [rip+0x3e4d]        # 405068 <strcmp@GLIBC_2.2.5>
  40121b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401220 <fprintf@plt>:
  401220:	endbr64 
  401224:	bnd jmp QWORD PTR [rip+0x3e45]        # 405070 <fprintf@GLIBC_2.2.5>
  40122b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401230 <__sysv_signal@plt>:
  401230:	endbr64 
  401234:	bnd jmp QWORD PTR [rip+0x3e3d]        # 405078 <__sysv_signal@GLIBC_2.2.5>
  40123b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401240 <__xstat@plt>:
  401240:	endbr64 
  401244:	bnd jmp QWORD PTR [rip+0x3e35]        # 405080 <__xstat@GLIBC_2.2.5>
  40124b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401250 <__isoc99_sscanf@plt>:
  401250:	endbr64 
  401254:	bnd jmp QWORD PTR [rip+0x3e2d]        # 405088 <__isoc99_sscanf@GLIBC_2.7>
  40125b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401260 <fopen@plt>:
  401260:	endbr64 
  401264:	bnd jmp QWORD PTR [rip+0x3e25]        # 405090 <fopen@GLIBC_2.2.5>
  40126b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401270 <sprintf@plt>:
  401270:	endbr64 
  401274:	bnd jmp QWORD PTR [rip+0x3e1d]        # 405098 <sprintf@GLIBC_2.2.5>
  40127b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401280 <exit@plt>:
  401280:	endbr64 
  401284:	bnd jmp QWORD PTR [rip+0x3e15]        # 4050a0 <exit@GLIBC_2.2.5>
  40128b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401290 <fwrite@plt>:
  401290:	endbr64 
  401294:	bnd jmp QWORD PTR [rip+0x3e0d]        # 4050a8 <fwrite@GLIBC_2.2.5>
  40129b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004012a0 <strdup@plt>:
  4012a0:	endbr64 
  4012a4:	bnd jmp QWORD PTR [rip+0x3e05]        # 4050b0 <strdup@GLIBC_2.2.5>
  4012ab:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

00000000004012b0 <error@@Base-0x111b>:
  4012b0:	endbr64 
  4012b4:	xor    ebp,ebp
  4012b6:	mov    r9,rdx
  4012b9:	pop    rsi
  4012ba:	mov    rdx,rsp
  4012bd:	and    rsp,0xfffffffffffffff0
  4012c1:	push   rax
  4012c2:	push   rsp
  4012c3:	mov    r8,0x402540
  4012ca:	mov    rcx,0x4024d0
  4012d1:	mov    rdi,0x4014f8
  4012d8:	call   QWORD PTR [rip+0x3d0a]        # 404fe8 <error@@Base+0x2c1d>
  4012de:	hlt    
  4012df:	nop
  4012e0:	endbr64 
  4012e4:	ret    
  4012e5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4012ef:	nop
  4012f0:	mov    eax,0x4050d0
  4012f5:	cmp    rax,0x4050d0
  4012fb:	je     401310 <strdup@plt+0x70>
  4012fd:	mov    eax,0x0
  401302:	test   rax,rax
  401305:	je     401310 <strdup@plt+0x70>
  401307:	mov    edi,0x4050d0
  40130c:	jmp    rax
  40130e:	xchg   ax,ax
  401310:	ret    
  401311:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40131c:	nop    DWORD PTR [rax+0x0]
  401320:	mov    esi,0x4050d0
  401325:	sub    rsi,0x4050d0
  40132c:	sar    rsi,0x3
  401330:	mov    rax,rsi
  401333:	shr    rax,0x3f
  401337:	add    rsi,rax
  40133a:	sar    rsi,1
  40133d:	je     401350 <strdup@plt+0xb0>
  40133f:	mov    eax,0x0
  401344:	test   rax,rax
  401347:	je     401350 <strdup@plt+0xb0>
  401349:	mov    edi,0x4050d0
  40134e:	jmp    rax
  401350:	ret    
  401351:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40135c:	nop    DWORD PTR [rax+0x0]
  401360:	endbr64 
  401364:	cmp    BYTE PTR [rip+0x3d75],0x0        # 4050e0 <error@@Base+0x2d15>
  40136b:	jne    401380 <strdup@plt+0xe0>
  40136d:	push   rbp
  40136e:	mov    rbp,rsp
  401371:	call   4012f0 <strdup@plt+0x50>
  401376:	mov    BYTE PTR [rip+0x3d63],0x1        # 4050e0 <error@@Base+0x2d15>
  40137d:	pop    rbp
  40137e:	ret    
  40137f:	nop
  401380:	ret    
  401381:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40138c:	nop    DWORD PTR [rax+0x0]
  401390:	endbr64 
  401394:	jmp    401320 <strdup@plt+0x80>
  401396:	endbr64 
  40139a:	push   rbp
  40139b:	mov    rbp,rsp
  40139e:	mov    rax,0x4054c0
  4013a5:	mov    rdx,QWORD PTR [rax]
  4013a8:	mov    rax,0x405180
  4013af:	mov    rax,QWORD PTR [rax]
  4013b2:	sub    rdx,rax
  4013b5:	mov    rax,0x4054c0
  4013bc:	mov    QWORD PTR [rax],rdx
  4013bf:	mov    rax,0x4054c0
  4013c6:	mov    rdx,QWORD PTR [rax+0x8]
  4013ca:	mov    rax,0x405180
  4013d1:	mov    rax,QWORD PTR [rax+0x8]
  4013d5:	sub    rdx,rax
  4013d8:	mov    rax,0x4054c0
  4013df:	mov    QWORD PTR [rax+0x8],rdx
  4013e3:	mov    rax,0x4054c0
  4013ea:	mov    rdx,QWORD PTR [rax+0x10]
  4013ee:	mov    rax,0x405180
  4013f5:	mov    rax,QWORD PTR [rax+0x10]
  4013f9:	sub    rdx,rax
  4013fc:	mov    rax,0x4054c0
  401403:	mov    QWORD PTR [rax+0x10],rdx
  401407:	mov    WORD PTR [rbp-0x2],0x1
  40140d:	jmp    401455 <strdup@plt+0x1b5>
  40140f:	movsx  edx,WORD PTR [rbp-0x2]
  401413:	mov    rax,0x4054c0
  40141a:	movsxd rdx,edx
  40141d:	mov    rcx,QWORD PTR [rax+rdx*8+0x18]
  401422:	movsx  edx,WORD PTR [rbp-0x2]
  401426:	mov    rax,0x405180
  40142d:	movsxd rdx,edx
  401430:	mov    rax,QWORD PTR [rax+rdx*8+0x18]
  401435:	movsx  edx,WORD PTR [rbp-0x2]
  401439:	sub    rcx,rax
  40143c:	mov    rax,0x4054c0
  401443:	movsxd rdx,edx
  401446:	mov    QWORD PTR [rax+rdx*8+0x18],rcx
  40144b:	movzx  eax,WORD PTR [rbp-0x2]
  40144f:	inc    eax
  401451:	mov    WORD PTR [rbp-0x2],ax
  401455:	cmp    WORD PTR [rbp-0x2],0x64
  40145a:	jle    40140f <strdup@plt+0x16f>
  40145c:	nop
  40145d:	pop    rbp
  40145e:	ret    
  40145f:	endbr64 
  401463:	push   rbp
  401464:	mov    rbp,rsp
  401467:	sub    rsp,0x20
  40146b:	mov    rax,0x4054c0
  401472:	mov    rax,QWORD PTR [rax]
  401475:	mov    QWORD PTR [rbp-0x18],rax
  401479:	mov    rax,0x4054c0
  401480:	mov    rax,QWORD PTR [rax+0x10]
  401484:	mov    QWORD PTR [rbp-0x10],rax
  401488:	mov    QWORD PTR [rbp-0x8],0x0
  401490:	jmp    4014ee <strdup@plt+0x24e>
  401492:	mov    rax,QWORD PTR [rbp-0x8]
  401496:	imul   rax,QWORD PTR [rbp-0x10]
  40149b:	mov    rdx,rax
  40149e:	mov    rax,QWORD PTR [rbp-0x18]
  4014a2:	add    rdx,rax
  4014a5:	mov    rax,QWORD PTR [rbp-0x8]
  4014a9:	mov    rsi,rax
  4014ac:	lea    rdi,[rip+0x1b55]        # 403008 <error@@Base+0xc3d>
  4014b3:	mov    eax,0x0
  4014b8:	call   4011e0 <printf@plt>
  4014bd:	mov    rax,0x4054c0
  4014c4:	mov    rdx,QWORD PTR [rbp-0x8]
  4014c8:	mov    rax,QWORD PTR [rax+rdx*8+0x18]
  4014cd:	imul   rax,QWORD PTR [rbp-0x8]
  4014d2:	add    QWORD PTR [rbp-0x18],rax
  4014d6:	mov    rax,0x4054c0
  4014dd:	mov    rdx,QWORD PTR [rbp-0x8]
  4014e1:	mov    rax,QWORD PTR [rax+rdx*8+0x18]
  4014e6:	sub    QWORD PTR [rbp-0x10],rax
  4014ea:	inc    QWORD PTR [rbp-0x8]
  4014ee:	cmp    QWORD PTR [rbp-0x8],0x64
  4014f3:	jle    401492 <strdup@plt+0x1f2>
  4014f5:	nop
  4014f6:	leave  
  4014f7:	ret    
  4014f8:	endbr64 
  4014fc:	push   rbp
  4014fd:	mov    rbp,rsp
  401500:	sub    rsp,0x10
  401504:	mov    DWORD PTR [rbp-0x4],edi
  401507:	mov    QWORD PTR [rbp-0x10],rsi
  40150b:	mov    rsi,QWORD PTR [rbp-0x10]
  40150f:	lea    rax,[rbp-0x4]
  401513:	mov    ecx,0x0
  401518:	lea    rdx,[rip+0x1af9]        # 403018 <error@@Base+0xc4d>
  40151f:	mov    rdi,rax
  401522:	mov    eax,0x0
  401527:	call   40230a <strdup@plt+0x106a>
  40152c:	mov    eax,DWORD PTR [rbp-0x4]
  40152f:	test   eax,eax
  401531:	jle    40153b <strdup@plt+0x29b>
  401533:	mov    eax,DWORD PTR [rbp-0x4]
  401536:	cmp    eax,0x2
  401539:	jle    40154c <strdup@plt+0x2ac>
  40153b:	lea    rdi,[rip+0x1afd]        # 40303f <error@@Base+0xc74>
  401542:	mov    eax,0x0
  401547:	call   4023cb <error@@Base>
  40154c:	mov    rax,QWORD PTR [rbp-0x10]
  401550:	mov    rax,QWORD PTR [rax]
  401553:	mov    rsi,rax
  401556:	mov    rax,0x4054c0
  40155d:	mov    rdi,rax
  401560:	mov    eax,0x0
  401565:	call   4016bf <strdup@plt+0x41f>
  40156a:	mov    eax,DWORD PTR [rbp-0x4]
  40156d:	cmp    eax,0x2
  401570:	jne    40159e <strdup@plt+0x2fe>
  401572:	mov    rax,QWORD PTR [rbp-0x10]
  401576:	add    rax,0x8
  40157a:	mov    rax,QWORD PTR [rax]
  40157d:	mov    rsi,rax
  401580:	mov    rax,0x405180
  401587:	mov    rdi,rax
  40158a:	mov    eax,0x0
  40158f:	call   4016bf <strdup@plt+0x41f>
  401594:	mov    eax,0x0
  401599:	call   401396 <strdup@plt+0xf6>
  40159e:	mov    eax,0x0
  4015a3:	call   40145f <strdup@plt+0x1bf>
  4015a8:	mov    eax,0x0
  4015ad:	call   4023b4 <strdup@plt+0x1114>
  4015b2:	endbr64 
  4015b6:	push   rbp
  4015b7:	mov    rbp,rsp
  4015ba:	sub    rsp,0x10
  4015be:	mov    QWORD PTR [rbp-0x8],rdi
  4015c2:	mov    rax,QWORD PTR [rbp-0x8]
  4015c6:	mov    rdx,rax
  4015c9:	mov    esi,0x63
  4015ce:	lea    rdi,[rip+0x3b2b]        # 405100 <error@@Base+0x2d35>
  4015d5:	call   4011f0 <fgets@plt>
  4015da:	test   rax,rax
  4015dd:	setne  al
  4015e0:	leave  
  4015e1:	ret    
  4015e2:	endbr64 
  4015e6:	push   rbp
  4015e7:	mov    rbp,rsp
  4015ea:	sub    rsp,0x20
  4015ee:	mov    QWORD PTR [rbp-0x8],rdi
  4015f2:	mov    QWORD PTR [rbp-0x10],rsi
  4015f6:	mov    QWORD PTR [rbp-0x18],rdx
  4015fa:	mov    rax,QWORD PTR [rbp-0x8]
  4015fe:	mov    rdi,rax
  401601:	mov    eax,0x0
  401606:	call   4015b2 <strdup@plt+0x312>
  40160b:	test   al,al
  40160d:	je     401652 <strdup@plt+0x3b2>
  40160f:	mov    rax,QWORD PTR [rbp-0x10]
  401613:	mov    rdx,rax
  401616:	lea    rsi,[rip+0x1a3b]        # 403058 <error@@Base+0xc8d>
  40161d:	lea    rdi,[rip+0x3adc]        # 405100 <error@@Base+0x2d35>
  401624:	mov    eax,0x0
  401629:	call   401250 <__isoc99_sscanf@plt>
  40162e:	cmp    eax,0x1
  401631:	jne    401652 <strdup@plt+0x3b2>
  401633:	mov    rax,QWORD PTR [rbp-0x18]
  401637:	mov    rdx,QWORD PTR [rax]
  40163a:	mov    rax,QWORD PTR [rbp-0x10]
  40163e:	mov    rax,QWORD PTR [rax]
  401641:	add    rdx,rax
  401644:	mov    rax,QWORD PTR [rbp-0x18]
  401648:	mov    QWORD PTR [rax],rdx
  40164b:	mov    eax,0x1
  401650:	jmp    401657 <strdup@plt+0x3b7>
  401652:	mov    eax,0x0
  401657:	leave  
  401658:	ret    
  401659:	endbr64 
  40165d:	push   rbp
  40165e:	mov    rbp,rsp
  401661:	sub    rsp,0x20
  401665:	mov    QWORD PTR [rbp-0x8],rdi
  401669:	mov    QWORD PTR [rbp-0x10],rsi
  40166d:	mov    QWORD PTR [rbp-0x18],rdx
  401671:	mov    rax,QWORD PTR [rbp-0x8]
  401675:	mov    rdi,rax
  401678:	mov    eax,0x0
  40167d:	call   4015b2 <strdup@plt+0x312>
  401682:	test   al,al
  401684:	je     4016b8 <strdup@plt+0x418>
  401686:	mov    rdx,QWORD PTR [rbp-0x18]
  40168a:	mov    rax,QWORD PTR [rbp-0x10]
  40168e:	mov    rcx,rdx
  401691:	mov    rdx,rax
  401694:	lea    rsi,[rip+0x19c1]        # 40305c <error@@Base+0xc91>
  40169b:	lea    rdi,[rip+0x3a5e]        # 405100 <error@@Base+0x2d35>
  4016a2:	mov    eax,0x0
  4016a7:	call   401250 <__isoc99_sscanf@plt>
  4016ac:	cmp    eax,0x2
  4016af:	jne    4016b8 <strdup@plt+0x418>
  4016b1:	mov    eax,0x1
  4016b6:	jmp    4016bd <strdup@plt+0x41d>
  4016b8:	mov    eax,0x0
  4016bd:	leave  
  4016be:	ret    
  4016bf:	endbr64 
  4016c3:	push   rbp
  4016c4:	mov    rbp,rsp
  4016c7:	sub    rsp,0x40
  4016cb:	mov    QWORD PTR [rbp-0x38],rdi
  4016cf:	mov    QWORD PTR [rbp-0x40],rsi
  4016d3:	mov    rax,QWORD PTR fs:0x28
  4016dc:	mov    QWORD PTR [rbp-0x8],rax
  4016e0:	xor    eax,eax
  4016e2:	mov    rax,QWORD PTR [rbp-0x40]
  4016e6:	lea    rsi,[rip+0x1977]        # 403064 <error@@Base+0xc99>
  4016ed:	mov    rdi,rax
  4016f0:	mov    eax,0x0
  4016f5:	call   401b79 <strdup@plt+0x8d9>
  4016fa:	mov    QWORD PTR [rbp-0x10],rax
  4016fe:	mov    rax,QWORD PTR [rbp-0x10]
  401702:	mov    rdi,rax
  401705:	mov    eax,0x0
  40170a:	call   4015b2 <strdup@plt+0x312>
  40170f:	test   al,al
  401711:	je     401878 <strdup@plt+0x5d8>
  401717:	mov    edx,0x2a
  40171c:	lea    rsi,[rip+0x1945]        # 403068 <error@@Base+0xc9d>
  401723:	lea    rdi,[rip+0x39d6]        # 405100 <error@@Base+0x2d35>
  40172a:	call   401190 <strncmp@plt>
  40172f:	test   eax,eax
  401731:	jne    401878 <strdup@plt+0x5d8>
  401737:	mov    rax,QWORD PTR [rbp-0x10]
  40173b:	mov    rdi,rax
  40173e:	mov    eax,0x0
  401743:	call   4015b2 <strdup@plt+0x312>
  401748:	test   al,al
  40174a:	je     401878 <strdup@plt+0x5d8>
  401750:	lea    rsi,[rip+0x1941]        # 403098 <error@@Base+0xccd>
  401757:	lea    rdi,[rip+0x39a2]        # 405100 <error@@Base+0x2d35>
  40175e:	call   401210 <strcmp@plt>
  401763:	test   eax,eax
  401765:	jne    401878 <strdup@plt+0x5d8>
  40176b:	mov    rdx,QWORD PTR [rbp-0x38]
  40176f:	lea    rcx,[rbp-0x20]
  401773:	mov    rax,QWORD PTR [rbp-0x10]
  401777:	mov    rsi,rcx
  40177a:	mov    rdi,rax
  40177d:	mov    eax,0x0
  401782:	call   4015e2 <strdup@plt+0x342>
  401787:	test   al,al
  401789:	je     401878 <strdup@plt+0x5d8>
  40178f:	mov    rax,QWORD PTR [rbp-0x38]
  401793:	lea    rdx,[rax+0x8]
  401797:	lea    rcx,[rbp-0x20]
  40179b:	mov    rax,QWORD PTR [rbp-0x10]
  40179f:	mov    rsi,rcx
  4017a2:	mov    rdi,rax
  4017a5:	mov    eax,0x0
  4017aa:	call   4015e2 <strdup@plt+0x342>
  4017af:	test   al,al
  4017b1:	je     401878 <strdup@plt+0x5d8>
  4017b7:	mov    rax,QWORD PTR [rbp-0x38]
  4017bb:	lea    rdx,[rax+0x10]
  4017bf:	lea    rcx,[rbp-0x28]
  4017c3:	mov    rax,QWORD PTR [rbp-0x10]
  4017c7:	mov    rsi,rcx
  4017ca:	mov    rdi,rax
  4017cd:	mov    eax,0x0
  4017d2:	call   4015e2 <strdup@plt+0x342>
  4017d7:	test   al,al
  4017d9:	je     401878 <strdup@plt+0x5d8>
  4017df:	mov    rax,QWORD PTR [rbp-0x28]
  4017e3:	test   rax,rax
  4017e6:	jle    4018a0 <strdup@plt+0x600>
  4017ec:	mov    rax,QWORD PTR [rbp-0x10]
  4017f0:	mov    rdi,rax
  4017f3:	mov    eax,0x0
  4017f8:	call   4015b2 <strdup@plt+0x312>
  4017fd:	test   al,al
  4017ff:	je     4018a0 <strdup@plt+0x600>
  401805:	mov    rax,QWORD PTR [rbp-0x10]
  401809:	mov    rdi,rax
  40180c:	mov    eax,0x0
  401811:	call   4015b2 <strdup@plt+0x312>
  401816:	test   al,al
  401818:	je     4018a0 <strdup@plt+0x600>
  40181e:	mov    rax,QWORD PTR [rbp-0x10]
  401822:	mov    rdi,rax
  401825:	mov    eax,0x0
  40182a:	call   4015b2 <strdup@plt+0x312>
  40182f:	test   al,al
  401831:	je     4018a0 <strdup@plt+0x600>
  401833:	jmp    401856 <strdup@plt+0x5b6>
  401835:	mov    rdx,QWORD PTR [rbp-0x18]
  401839:	mov    rax,QWORD PTR [rbp-0x38]
  40183d:	mov    rcx,QWORD PTR [rax+rdx*8+0x18]
  401842:	mov    rax,QWORD PTR [rbp-0x20]
  401846:	mov    rdx,QWORD PTR [rbp-0x18]
  40184a:	add    rcx,rax
  40184d:	mov    rax,QWORD PTR [rbp-0x38]
  401851:	mov    QWORD PTR [rax+rdx*8+0x18],rcx
  401856:	lea    rdx,[rbp-0x18]
  40185a:	lea    rcx,[rbp-0x20]
  40185e:	mov    rax,QWORD PTR [rbp-0x10]
  401862:	mov    rsi,rcx
  401865:	mov    rdi,rax
  401868:	mov    eax,0x0
  40186d:	call   401659 <strdup@plt+0x3b9>
  401872:	test   al,al
  401874:	jne    401835 <strdup@plt+0x595>
  401876:	jmp    4018a0 <strdup@plt+0x600>
  401878:	cmp    QWORD PTR [rbp-0x40],0x0
  40187d:	je     401885 <strdup@plt+0x5e5>
  40187f:	mov    rax,QWORD PTR [rbp-0x40]
  401883:	jmp    40188c <strdup@plt+0x5ec>
  401885:	lea    rax,[rip+0x1839]        # 4030c5 <error@@Base+0xcfa>
  40188c:	mov    rsi,rax
  40188f:	lea    rdi,[rip+0x1835]        # 4030cb <error@@Base+0xd00>
  401896:	mov    eax,0x0
  40189b:	call   40241c <error@@Base+0x51>
  4018a0:	nop
  4018a1:	mov    rax,QWORD PTR [rbp-0x10]
  4018a5:	mov    rdi,rax
  4018a8:	mov    eax,0x0
  4018ad:	call   401c18 <strdup@plt+0x978>
  4018b2:	nop
  4018b3:	mov    rax,QWORD PTR [rbp-0x8]
  4018b7:	xor    rax,QWORD PTR fs:0x28
  4018c0:	je     4018c7 <strdup@plt+0x627>
  4018c2:	call   4011d0 <__stack_chk_fail@plt>
  4018c7:	leave  
  4018c8:	ret    
  4018c9:	endbr64 
  4018cd:	push   rbp
  4018ce:	mov    rbp,rsp
  4018d1:	sub    rsp,0x20
  4018d5:	mov    QWORD PTR [rbp-0x8],rdi
  4018d9:	mov    QWORD PTR [rbp-0x10],rsi
  4018dd:	mov    QWORD PTR [rbp-0x18],rdx
  4018e1:	mov    rcx,QWORD PTR [rbp-0x18]
  4018e5:	mov    rdx,QWORD PTR [rbp-0x10]
  4018e9:	mov    rax,QWORD PTR [rbp-0x8]
  4018ed:	lea    rsi,[rip+0x17e9]        # 4030dd <error@@Base+0xd12>
  4018f4:	mov    rdi,rax
  4018f7:	mov    eax,0x0
  4018fc:	call   401220 <fprintf@plt>
  401901:	nop
  401902:	leave  
  401903:	ret    
  401904:	endbr64 
  401908:	push   rbp
  401909:	mov    rbp,rsp
  40190c:	sub    rsp,0x20
  401910:	mov    QWORD PTR [rbp-0x8],rdi
  401914:	mov    QWORD PTR [rbp-0x10],rsi
  401918:	mov    QWORD PTR [rbp-0x18],rdx
  40191c:	mov    rcx,QWORD PTR [rbp-0x18]
  401920:	mov    rdx,QWORD PTR [rbp-0x10]
  401924:	mov    rax,QWORD PTR [rbp-0x8]
  401928:	lea    rsi,[rip+0x17b9]        # 4030e8 <error@@Base+0xd1d>
  40192f:	mov    rdi,rax
  401932:	mov    eax,0x0
  401937:	call   401220 <fprintf@plt>
  40193c:	nop
  40193d:	leave  
  40193e:	ret    
  40193f:	endbr64 
  401943:	push   rbp
  401944:	mov    rbp,rsp
  401947:	sub    rsp,0x20
  40194b:	mov    QWORD PTR [rbp-0x18],rdi
  40194f:	mov    QWORD PTR [rbp-0x20],rsi
  401953:	mov    rax,QWORD PTR [rbp-0x20]
  401957:	lea    rsi,[rip+0x1795]        # 4030f3 <error@@Base+0xd28>
  40195e:	mov    rdi,rax
  401961:	mov    eax,0x0
  401966:	call   401b79 <strdup@plt+0x8d9>
  40196b:	mov    QWORD PTR [rbp-0x8],rax
  40196f:	mov    rax,QWORD PTR [rbp-0x8]
  401973:	lea    rcx,[rip+0x171e]        # 403098 <error@@Base+0xccd>
  40197a:	lea    rdx,[rip+0x16e7]        # 403068 <error@@Base+0xc9d>
  401981:	lea    rsi,[rip+0x176d]        # 4030f5 <error@@Base+0xd2a>
  401988:	mov    rdi,rax
  40198b:	mov    eax,0x0
  401990:	call   401220 <fprintf@plt>
  401995:	mov    rax,QWORD PTR [rbp-0x18]
  401999:	mov    rcx,QWORD PTR [rax]
  40199c:	mov    rax,QWORD PTR [rbp-0x8]
  4019a0:	lea    rdx,[rip+0x1753]        # 4030fa <error@@Base+0xd2f>
  4019a7:	mov    rsi,rcx
  4019aa:	mov    rdi,rax
  4019ad:	mov    eax,0x0
  4019b2:	call   4018c9 <strdup@plt+0x629>
  4019b7:	mov    rax,QWORD PTR [rbp-0x18]
  4019bb:	mov    rcx,QWORD PTR [rax+0x8]
  4019bf:	mov    rax,QWORD PTR [rbp-0x8]
  4019c3:	lea    rdx,[rip+0x173b]        # 403105 <error@@Base+0xd3a>
  4019ca:	mov    rsi,rcx
  4019cd:	mov    rdi,rax
  4019d0:	mov    eax,0x0
  4019d5:	call   4018c9 <strdup@plt+0x629>
  4019da:	mov    rax,QWORD PTR [rbp-0x18]
  4019de:	mov    rcx,QWORD PTR [rax+0x10]
  4019e2:	mov    rax,QWORD PTR [rbp-0x8]
  4019e6:	lea    rdx,[rip+0x1722]        # 40310f <error@@Base+0xd44>
  4019ed:	mov    rsi,rcx
  4019f0:	mov    rdi,rax
  4019f3:	mov    eax,0x0
  4019f8:	call   4018c9 <strdup@plt+0x629>
  4019fd:	mov    rax,QWORD PTR [rbp-0x18]
  401a01:	mov    rax,QWORD PTR [rax+0x10]
  401a05:	test   rax,rax
  401a08:	jle    401a73 <strdup@plt+0x7d3>
  401a0a:	mov    rax,QWORD PTR [rbp-0x8]
  401a0e:	mov    rcx,rax
  401a11:	mov    edx,0x19
  401a16:	mov    esi,0x1
  401a1b:	lea    rdi,[rip+0x16f3]        # 403115 <error@@Base+0xd4a>
  401a22:	call   401290 <fwrite@plt>
  401a27:	mov    QWORD PTR [rbp-0x10],0x1
  401a2f:	jmp    401a6c <strdup@plt+0x7cc>
  401a31:	mov    rax,QWORD PTR [rbp-0x18]
  401a35:	mov    rdx,QWORD PTR [rbp-0x10]
  401a39:	mov    rax,QWORD PTR [rax+rdx*8+0x18]
  401a3e:	test   rax,rax
  401a41:	jle    401a68 <strdup@plt+0x7c8>
  401a43:	mov    rax,QWORD PTR [rbp-0x18]
  401a47:	mov    rdx,QWORD PTR [rbp-0x10]
  401a4b:	mov    rcx,QWORD PTR [rax+rdx*8+0x18]
  401a50:	mov    rdx,QWORD PTR [rbp-0x10]
  401a54:	mov    rax,QWORD PTR [rbp-0x8]
  401a58:	mov    rsi,rcx
  401a5b:	mov    rdi,rax
  401a5e:	mov    eax,0x0
  401a63:	call   401904 <strdup@plt+0x664>
  401a68:	inc    QWORD PTR [rbp-0x10]
  401a6c:	cmp    QWORD PTR [rbp-0x10],0x64
  401a71:	jle    401a31 <strdup@plt+0x791>
  401a73:	mov    rax,QWORD PTR [rbp-0x8]
  401a77:	mov    rdi,rax
  401a7a:	mov    eax,0x0
  401a7f:	call   401c18 <strdup@plt+0x978>
  401a84:	nop
  401a85:	leave  
  401a86:	ret    
  401a87:	endbr64 
  401a8b:	push   rbp
  401a8c:	mov    rbp,rsp
  401a8f:	sub    rsp,0x20
  401a93:	mov    QWORD PTR [rbp-0x18],rdi
  401a97:	mov    QWORD PTR [rbp-0x20],rsi
  401a9b:	mov    rdx,QWORD PTR [rbp-0x20]
  401a9f:	mov    rax,QWORD PTR [rbp-0x18]
  401aa3:	mov    rsi,rdx
  401aa6:	mov    rdi,rax
  401aa9:	call   401200 <calloc@plt>
  401aae:	mov    QWORD PTR [rbp-0x8],rax
  401ab2:	cmp    QWORD PTR [rbp-0x8],0x0
  401ab7:	jne    401aca <strdup@plt+0x82a>
  401ab9:	lea    rdi,[rip+0x166f]        # 40312f <error@@Base+0xd64>
  401ac0:	mov    eax,0x0
  401ac5:	call   4023cb <error@@Base>
  401aca:	mov    rax,QWORD PTR [rbp-0x8]
  401ace:	leave  
  401acf:	ret    
  401ad0:	endbr64 
  401ad4:	push   rbp
  401ad5:	mov    rbp,rsp
  401ad8:	mov    QWORD PTR [rbp-0x18],rdi
  401adc:	mov    QWORD PTR [rbp-0x20],rsi
  401ae0:	mov    QWORD PTR [rbp-0x8],0x0
  401ae8:	jmp    401aee <strdup@plt+0x84e>
  401aea:	inc    QWORD PTR [rbp-0x8]
  401aee:	mov    rdx,QWORD PTR [rbp-0x8]
  401af2:	mov    rax,QWORD PTR [rbp-0x18]
  401af6:	add    rax,rdx
  401af9:	movzx  eax,BYTE PTR [rax]
  401afc:	test   al,al
  401afe:	je     401b20 <strdup@plt+0x880>
  401b00:	mov    rdx,QWORD PTR [rbp-0x8]
  401b04:	mov    rax,QWORD PTR [rbp-0x18]
  401b08:	add    rax,rdx
  401b0b:	movzx  edx,BYTE PTR [rax]
  401b0e:	mov    rcx,QWORD PTR [rbp-0x8]
  401b12:	mov    rax,QWORD PTR [rbp-0x20]
  401b16:	add    rax,rcx
  401b19:	movzx  eax,BYTE PTR [rax]
  401b1c:	cmp    dl,al
  401b1e:	je     401aea <strdup@plt+0x84a>
  401b20:	mov    rdx,QWORD PTR [rbp-0x8]
  401b24:	mov    rax,QWORD PTR [rbp-0x18]
  401b28:	add    rax,rdx
  401b2b:	movzx  eax,BYTE PTR [rax]
  401b2e:	test   al,al
  401b30:	jne    401b44 <strdup@plt+0x8a4>
  401b32:	mov    rdx,QWORD PTR [rbp-0x8]
  401b36:	mov    rax,QWORD PTR [rbp-0x20]
  401b3a:	add    rax,rdx
  401b3d:	movzx  eax,BYTE PTR [rax]
  401b40:	test   al,al
  401b42:	je     401b72 <strdup@plt+0x8d2>
  401b44:	mov    rdx,QWORD PTR [rbp-0x8]
  401b48:	mov    rax,QWORD PTR [rbp-0x18]
  401b4c:	add    rax,rdx
  401b4f:	movzx  edx,BYTE PTR [rax]
  401b52:	mov    rcx,QWORD PTR [rbp-0x8]
  401b56:	mov    rax,QWORD PTR [rbp-0x20]
  401b5a:	add    rax,rcx
  401b5d:	movzx  eax,BYTE PTR [rax]
  401b60:	cmp    dl,al
  401b62:	jae    401b6b <strdup@plt+0x8cb>
  401b64:	mov    eax,0xffffffff
  401b69:	jmp    401b77 <strdup@plt+0x8d7>
  401b6b:	mov    eax,0x1
  401b70:	jmp    401b77 <strdup@plt+0x8d7>
  401b72:	mov    eax,0x0
  401b77:	pop    rbp
  401b78:	ret    
  401b79:	endbr64 
  401b7d:	push   rbp
  401b7e:	mov    rbp,rsp
  401b81:	sub    rsp,0x20
  401b85:	mov    QWORD PTR [rbp-0x18],rdi
  401b89:	mov    QWORD PTR [rbp-0x20],rsi
  401b8d:	cmp    QWORD PTR [rbp-0x18],0x0
  401b92:	jne    401bb7 <strdup@plt+0x917>
  401b94:	mov    rax,QWORD PTR [rbp-0x20]
  401b98:	movzx  eax,BYTE PTR [rax]
  401b9b:	cmp    al,0x72
  401b9d:	jne    401bab <strdup@plt+0x90b>
  401b9f:	mov    rax,QWORD PTR [rip+0x343a]        # 404fe0 <error@@Base+0x2c15>
  401ba6:	mov    rax,QWORD PTR [rax]
  401ba9:	jmp    401c16 <strdup@plt+0x976>
  401bab:	mov    rax,QWORD PTR [rip+0x3426]        # 404fd8 <error@@Base+0x2c0d>
  401bb2:	mov    rax,QWORD PTR [rax]
  401bb5:	jmp    401c16 <strdup@plt+0x976>
  401bb7:	mov    rdx,QWORD PTR [rbp-0x20]
  401bbb:	mov    rax,QWORD PTR [rbp-0x18]
  401bbf:	mov    rsi,rdx
  401bc2:	mov    rdi,rax
  401bc5:	call   401260 <fopen@plt>
  401bca:	mov    QWORD PTR [rbp-0x8],rax
  401bce:	cmp    QWORD PTR [rbp-0x8],0x0
  401bd3:	je     401bdb <strdup@plt+0x93b>
  401bd5:	mov    rax,QWORD PTR [rbp-0x8]
  401bd9:	jmp    401c16 <strdup@plt+0x976>
  401bdb:	mov    rax,QWORD PTR [rbp-0x20]
  401bdf:	movzx  eax,BYTE PTR [rax]
  401be2:	cmp    al,0x77
  401be4:	jne    401bfe <strdup@plt+0x95e>
  401be6:	mov    rax,QWORD PTR [rbp-0x18]
  401bea:	mov    rsi,rax
  401bed:	lea    rdi,[rip+0x1555]        # 403149 <error@@Base+0xd7e>
  401bf4:	mov    eax,0x0
  401bf9:	call   40241c <error@@Base+0x51>
  401bfe:	mov    rax,QWORD PTR [rbp-0x18]
  401c02:	mov    rsi,rax
  401c05:	lea    rdi,[rip+0x1553]        # 40315f <error@@Base+0xd94>
  401c0c:	mov    eax,0x0
  401c11:	call   40241c <error@@Base+0x51>
  401c16:	leave  
  401c17:	ret    
  401c18:	endbr64 
  401c1c:	push   rbp
  401c1d:	mov    rbp,rsp
  401c20:	sub    rsp,0x10
  401c24:	mov    QWORD PTR [rbp-0x8],rdi
  401c28:	mov    rax,QWORD PTR [rip+0x33b1]        # 404fe0 <error@@Base+0x2c15>
  401c2f:	mov    rax,QWORD PTR [rax]
  401c32:	cmp    QWORD PTR [rbp-0x8],rax
  401c36:	je     401c54 <strdup@plt+0x9b4>
  401c38:	mov    rax,QWORD PTR [rip+0x3399]        # 404fd8 <error@@Base+0x2c0d>
  401c3f:	mov    rax,QWORD PTR [rax]
  401c42:	cmp    QWORD PTR [rbp-0x8],rax
  401c46:	je     401c54 <strdup@plt+0x9b4>
  401c48:	mov    rax,QWORD PTR [rbp-0x8]
  401c4c:	mov    rdi,rax
  401c4f:	call   4011b0 <fclose@plt>
  401c54:	nop
  401c55:	leave  
  401c56:	ret    
  401c57:	endbr64 
  401c5b:	push   rbp
  401c5c:	mov    rbp,rsp
  401c5f:	sub    rsp,0xb0
  401c66:	mov    QWORD PTR [rbp-0xa8],rdi
  401c6d:	mov    rax,QWORD PTR fs:0x28
  401c76:	mov    QWORD PTR [rbp-0x8],rax
  401c7a:	xor    eax,eax
  401c7c:	lea    rdx,[rbp-0xa0]
  401c83:	mov    rax,QWORD PTR [rbp-0xa8]
  401c8a:	mov    rsi,rdx
  401c8d:	mov    rdi,rax
  401c90:	call   402550 <error@@Base+0x185>
  401c95:	test   eax,eax
  401c97:	sete   al
  401c9a:	mov    rcx,QWORD PTR [rbp-0x8]
  401c9e:	xor    rcx,QWORD PTR fs:0x28
  401ca7:	je     401cae <strdup@plt+0xa0e>
  401ca9:	call   4011d0 <__stack_chk_fail@plt>
  401cae:	leave  
  401caf:	ret    
  401cb0:	endbr64 
  401cb4:	push   rbp
  401cb5:	mov    rbp,rsp
  401cb8:	push   rbx
  401cb9:	sub    rsp,0x88
  401cc0:	mov    eax,edi
  401cc2:	mov    WORD PTR [rbp-0x84],ax
  401cc9:	mov    rax,QWORD PTR fs:0x28
  401cd2:	mov    QWORD PTR [rbp-0x18],rax
  401cd6:	xor    eax,eax
  401cd8:	movsx  ebx,WORD PTR [rbp-0x84]
  401cdf:	mov    eax,0x0
  401ce4:	call   4011a0 <getpid@plt>
  401ce9:	mov    ecx,eax
  401ceb:	mov    rax,0x405808
  401cf2:	mov    rdx,QWORD PTR [rax]
  401cf5:	lea    rax,[rbp-0x80]
  401cf9:	mov    r8d,ebx
  401cfc:	lea    rsi,[rip+0x1470]        # 403173 <error@@Base+0xda8>
  401d03:	mov    rdi,rax
  401d06:	mov    eax,0x0
  401d0b:	call   401270 <sprintf@plt>
  401d10:	lea    rax,[rbp-0x80]
  401d14:	mov    rdi,rax
  401d17:	call   4012a0 <strdup@plt>
  401d1c:	mov    rsi,QWORD PTR [rbp-0x18]
  401d20:	xor    rsi,QWORD PTR fs:0x28
  401d29:	je     401d30 <strdup@plt+0xa90>
  401d2b:	call   4011d0 <__stack_chk_fail@plt>
  401d30:	add    rsp,0x88
  401d37:	pop    rbx
  401d38:	pop    rbp
  401d39:	ret    
  401d3a:	endbr64 
  401d3e:	push   rbp
  401d3f:	mov    rbp,rsp
  401d42:	sub    rsp,0x10
  401d46:	movzx  eax,WORD PTR [rip+0x3417]        # 405164 <error@@Base+0x2d99>
  401d4d:	inc    eax
  401d4f:	mov    WORD PTR [rip+0x340e],ax        # 405164 <error@@Base+0x2d99>
  401d56:	movzx  eax,WORD PTR [rip+0x3407]        # 405164 <error@@Base+0x2d99>
  401d5d:	cwde   
  401d5e:	mov    edi,eax
  401d60:	mov    eax,0x0
  401d65:	call   401cb0 <strdup@plt+0xa10>
  401d6a:	mov    QWORD PTR [rbp-0x8],rax
  401d6e:	mov    rax,QWORD PTR [rbp-0x8]
  401d72:	mov    rdi,rax
  401d75:	mov    eax,0x0
  401d7a:	call   401180 <unlink@plt>
  401d7f:	mov    rax,QWORD PTR [rbp-0x8]
  401d83:	leave  
  401d84:	ret    
  401d85:	endbr64 
  401d89:	push   rbp
  401d8a:	mov    rbp,rsp
  401d8d:	sub    rsp,0x10
  401d91:	mov    WORD PTR [rbp-0xa],0x1
  401d97:	jmp    401dd4 <strdup@plt+0xb34>
  401d99:	movsx  eax,WORD PTR [rbp-0xa]
  401d9d:	mov    edi,eax
  401d9f:	mov    eax,0x0
  401da4:	call   401cb0 <strdup@plt+0xa10>
  401da9:	mov    QWORD PTR [rbp-0x8],rax
  401dad:	mov    rax,QWORD PTR [rbp-0x8]
  401db1:	mov    rdi,rax
  401db4:	mov    eax,0x0
  401db9:	call   401180 <unlink@plt>
  401dbe:	mov    rax,QWORD PTR [rbp-0x8]
  401dc2:	mov    rdi,rax
  401dc5:	call   401170 <free@plt>
  401dca:	movzx  eax,WORD PTR [rbp-0xa]
  401dce:	inc    eax
  401dd0:	mov    WORD PTR [rbp-0xa],ax
  401dd4:	movzx  eax,WORD PTR [rip+0x3389]        # 405164 <error@@Base+0x2d99>
  401ddb:	cmp    WORD PTR [rbp-0xa],ax
  401ddf:	jle    401d99 <strdup@plt+0xaf9>
  401de1:	nop
  401de2:	leave  
  401de3:	ret    
  401de4:	endbr64 
  401de8:	push   rbp
  401de9:	mov    rbp,rsp
  401dec:	sub    rsp,0x20
  401df0:	mov    QWORD PTR [rbp-0x18],rdi
  401df4:	mov    BYTE PTR [rbp-0x3],0x2f
  401df8:	mov    rax,QWORD PTR [rbp-0x18]
  401dfc:	mov    rdi,rax
  401dff:	call   4011c0 <strlen@plt>
  401e04:	dec    eax
  401e06:	mov    WORD PTR [rbp-0x2],ax
  401e0a:	jmp    401e16 <strdup@plt+0xb76>
  401e0c:	movzx  eax,WORD PTR [rbp-0x2]
  401e10:	dec    eax
  401e12:	mov    WORD PTR [rbp-0x2],ax
  401e16:	cmp    WORD PTR [rbp-0x2],0x0
  401e1b:	js     401e31 <strdup@plt+0xb91>
  401e1d:	movsx  rdx,WORD PTR [rbp-0x2]
  401e22:	mov    rax,QWORD PTR [rbp-0x18]
  401e26:	add    rax,rdx
  401e29:	movzx  eax,BYTE PTR [rax]
  401e2c:	cmp    BYTE PTR [rbp-0x3],al
  401e2f:	jne    401e0c <strdup@plt+0xb6c>
  401e31:	movsx  rax,WORD PTR [rbp-0x2]
  401e36:	lea    rdx,[rax+0x1]
  401e3a:	mov    rax,QWORD PTR [rbp-0x18]
  401e3e:	add    rax,rdx
  401e41:	leave  
  401e42:	ret    
  401e43:	endbr64 
  401e47:	push   rbp
  401e48:	mov    rbp,rsp
  401e4b:	sub    rsp,0x10
  401e4f:	mov    DWORD PTR [rbp-0x4],edi
  401e52:	movzx  eax,BYTE PTR [rip+0x330d]        # 405166 <error@@Base+0x2d9b>
  401e59:	test   al,al
  401e5b:	jne    401e75 <strdup@plt+0xbd5>
  401e5d:	mov    BYTE PTR [rip+0x3302],0x1        # 405166 <error@@Base+0x2d9b>
  401e64:	lea    rdi,[rip+0x1316]        # 403181 <error@@Base+0xdb6>
  401e6b:	mov    eax,0x0
  401e70:	call   4023cb <error@@Base>
  401e75:	nop
  401e76:	leave  
  401e77:	ret    
  401e78:	endbr64 
  401e7c:	push   rbp
  401e7d:	mov    rbp,rsp
  401e80:	lea    rsi,[rip+0xffffffffffffffbc]        # 401e43 <strdup@plt+0xba3>
  401e87:	mov    edi,0x2
  401e8c:	call   401230 <__sysv_signal@plt>
  401e91:	lea    rsi,[rip+0xffffffffffffffab]        # 401e43 <strdup@plt+0xba3>
  401e98:	mov    edi,0xf
  401e9d:	call   401230 <__sysv_signal@plt>
  401ea2:	nop
  401ea3:	pop    rbp
  401ea4:	ret    
  401ea5:	endbr64 
  401ea9:	push   rbp
  401eaa:	mov    rbp,rsp
  401ead:	sub    rsp,0x10
  401eb1:	mov    QWORD PTR [rbp-0x8],rdi
  401eb5:	mov    rax,0x405800
  401ebc:	mov    rax,QWORD PTR [rax]
  401ebf:	test   rax,rax
  401ec2:	je     401ed7 <strdup@plt+0xc37>
  401ec4:	mov    rax,0x405800
  401ecb:	mov    rdx,QWORD PTR [rax]
  401ece:	mov    eax,0x0
  401ed3:	call   rdx
  401ed5:	jmp    401f03 <strdup@plt+0xc63>
  401ed7:	mov    rax,0x405808
  401ede:	mov    rdx,QWORD PTR [rax]
  401ee1:	mov    rax,QWORD PTR [rip+0x3110]        # 404ff8 <error@@Base+0x2c2d>
  401ee8:	mov    rax,QWORD PTR [rax]
  401eeb:	mov    rcx,QWORD PTR [rbp-0x8]
  401eef:	lea    rsi,[rip+0x129a]        # 403190 <error@@Base+0xdc5>
  401ef6:	mov    rdi,rax
  401ef9:	mov    eax,0x0
  401efe:	call   401220 <fprintf@plt>
  401f03:	mov    eax,0x0
  401f08:	call   4023b4 <strdup@plt+0x1114>
  401f0d:	endbr64 
  401f11:	push   rbp
  401f12:	mov    rbp,rsp
  401f15:	sub    rsp,0x30
  401f19:	mov    QWORD PTR [rbp-0x18],rdi
  401f1d:	mov    QWORD PTR [rbp-0x20],rsi
  401f21:	mov    QWORD PTR [rbp-0x28],rdx
  401f25:	cmp    QWORD PTR [rbp-0x28],0x0
  401f2a:	je     402102 <strdup@plt+0xe62>
  401f30:	mov    WORD PTR [rbp-0x2],0x0
  401f36:	jmp    401f42 <strdup@plt+0xca2>
  401f38:	movzx  eax,WORD PTR [rbp-0x2]
  401f3c:	inc    eax
  401f3e:	mov    WORD PTR [rbp-0x2],ax
  401f42:	movsx  rdx,WORD PTR [rbp-0x2]
  401f47:	mov    rax,rdx
  401f4a:	add    rax,rax
  401f4d:	add    rax,rdx
  401f50:	shl    rax,0x3
  401f54:	mov    rdx,rax
  401f57:	mov    rax,QWORD PTR [rbp-0x28]
  401f5b:	add    rax,rdx
  401f5e:	movzx  eax,BYTE PTR [rax]
  401f61:	test   al,al
  401f63:	je     401f92 <strdup@plt+0xcf2>
  401f65:	mov    rax,QWORD PTR [rbp-0x18]
  401f69:	inc    rax
  401f6c:	movzx  edx,BYTE PTR [rax]
  401f6f:	movsx  rcx,WORD PTR [rbp-0x2]
  401f74:	mov    rax,rcx
  401f77:	add    rax,rax
  401f7a:	add    rax,rcx
  401f7d:	shl    rax,0x3
  401f81:	mov    rcx,rax
  401f84:	mov    rax,QWORD PTR [rbp-0x28]
  401f88:	add    rax,rcx
  401f8b:	movzx  eax,BYTE PTR [rax]
  401f8e:	cmp    dl,al
  401f90:	jne    401f38 <strdup@plt+0xc98>
  401f92:	movsx  rdx,WORD PTR [rbp-0x2]
  401f97:	mov    rax,rdx
  401f9a:	add    rax,rax
  401f9d:	add    rax,rdx
  401fa0:	shl    rax,0x3
  401fa4:	mov    rdx,rax
  401fa7:	mov    rax,QWORD PTR [rbp-0x28]
  401fab:	add    rax,rdx
  401fae:	movzx  eax,BYTE PTR [rax]
  401fb1:	test   al,al
  401fb3:	je     402105 <strdup@plt+0xe65>
  401fb9:	movsx  rdx,WORD PTR [rbp-0x2]
  401fbe:	mov    rax,rdx
  401fc1:	add    rax,rax
  401fc4:	add    rax,rdx
  401fc7:	shl    rax,0x3
  401fcb:	mov    rdx,rax
  401fce:	mov    rax,QWORD PTR [rbp-0x28]
  401fd2:	add    rax,rdx
  401fd5:	mov    rax,QWORD PTR [rax+0x8]
  401fd9:	test   rax,rax
  401fdc:	je     40207d <strdup@plt+0xddd>
  401fe2:	mov    rax,QWORD PTR [rbp-0x18]
  401fe6:	add    rax,0x2
  401fea:	movzx  eax,BYTE PTR [rax]
  401fed:	test   al,al
  401fef:	jne    401ffc <strdup@plt+0xd5c>
  401ff1:	cmp    QWORD PTR [rbp-0x20],0x0
  401ff6:	je     40207d <strdup@plt+0xddd>
  401ffc:	movsx  rdx,WORD PTR [rbp-0x2]
  402001:	mov    rax,rdx
  402004:	add    rax,rax
  402007:	add    rax,rdx
  40200a:	shl    rax,0x3
  40200e:	mov    rdx,rax
  402011:	mov    rax,QWORD PTR [rbp-0x28]
  402015:	add    rax,rdx
  402018:	mov    rax,QWORD PTR [rax+0x8]
  40201c:	mov    rax,QWORD PTR [rax]
  40201f:	test   rax,rax
  402022:	jne    402121 <strdup@plt+0xe81>
  402028:	mov    rax,QWORD PTR [rbp-0x18]
  40202c:	add    rax,0x2
  402030:	movzx  eax,BYTE PTR [rax]
  402033:	test   al,al
  402035:	je     402041 <strdup@plt+0xda1>
  402037:	mov    rax,QWORD PTR [rbp-0x18]
  40203b:	lea    rdx,[rax+0x2]
  40203f:	jmp    402045 <strdup@plt+0xda5>
  402041:	mov    rdx,QWORD PTR [rbp-0x20]
  402045:	movsx  rcx,WORD PTR [rbp-0x2]
  40204a:	mov    rax,rcx
  40204d:	add    rax,rax
  402050:	add    rax,rcx
  402053:	shl    rax,0x3
  402057:	mov    rcx,rax
  40205a:	mov    rax,QWORD PTR [rbp-0x28]
  40205e:	add    rax,rcx
  402061:	mov    rax,QWORD PTR [rax+0x8]
  402065:	mov    QWORD PTR [rax],rdx
  402068:	mov    rax,QWORD PTR [rbp-0x18]
  40206c:	add    rax,0x2
  402070:	movzx  eax,BYTE PTR [rax]
  402073:	test   al,al
  402075:	sete   al
  402078:	jmp    40213d <strdup@plt+0xe9d>
  40207d:	movsx  rdx,WORD PTR [rbp-0x2]
  402082:	mov    rax,rdx
  402085:	add    rax,rax
  402088:	add    rax,rdx
  40208b:	shl    rax,0x3
  40208f:	mov    rdx,rax
  402092:	mov    rax,QWORD PTR [rbp-0x28]
  402096:	add    rax,rdx
  402099:	mov    rax,QWORD PTR [rax+0x10]
  40209d:	test   rax,rax
  4020a0:	je     402108 <strdup@plt+0xe68>
  4020a2:	mov    rax,QWORD PTR [rbp-0x18]
  4020a6:	add    rax,0x2
  4020aa:	movzx  eax,BYTE PTR [rax]
  4020ad:	test   al,al
  4020af:	jne    402108 <strdup@plt+0xe68>
  4020b1:	movsx  rdx,WORD PTR [rbp-0x2]
  4020b6:	mov    rax,rdx
  4020b9:	add    rax,rax
  4020bc:	add    rax,rdx
  4020bf:	shl    rax,0x3
  4020c3:	mov    rdx,rax
  4020c6:	mov    rax,QWORD PTR [rbp-0x28]
  4020ca:	add    rax,rdx
  4020cd:	mov    rax,QWORD PTR [rax+0x10]
  4020d1:	movzx  eax,BYTE PTR [rax]
  4020d4:	test   al,al
  4020d6:	jne    402124 <strdup@plt+0xe84>
  4020d8:	movsx  rdx,WORD PTR [rbp-0x2]
  4020dd:	mov    rax,rdx
  4020e0:	add    rax,rax
  4020e3:	add    rax,rdx
  4020e6:	shl    rax,0x3
  4020ea:	mov    rdx,rax
  4020ed:	mov    rax,QWORD PTR [rbp-0x28]
  4020f1:	add    rax,rdx
  4020f4:	mov    rax,QWORD PTR [rax+0x10]
  4020f8:	mov    BYTE PTR [rax],0x1
  4020fb:	mov    eax,0x0
  402100:	jmp    40213d <strdup@plt+0xe9d>
  402102:	nop
  402103:	jmp    402109 <strdup@plt+0xe69>
  402105:	nop
  402106:	jmp    402109 <strdup@plt+0xe69>
  402108:	nop
  402109:	mov    rax,QWORD PTR [rbp-0x18]
  40210d:	mov    rsi,rax
  402110:	lea    rdi,[rip+0x1088]        # 40319f <error@@Base+0xdd4>
  402117:	mov    eax,0x0
  40211c:	call   40241c <error@@Base+0x51>
  402121:	nop
  402122:	jmp    402125 <strdup@plt+0xe85>
  402124:	nop
  402125:	mov    rax,QWORD PTR [rbp-0x18]
  402129:	mov    rsi,rax
  40212c:	lea    rdi,[rip+0x107b]        # 4031ae <error@@Base+0xde3>
  402133:	mov    eax,0x0
  402138:	call   40241c <error@@Base+0x51>
  40213d:	leave  
  40213e:	ret    
  40213f:	endbr64 
  402143:	push   rbp
  402144:	mov    rbp,rsp
  402147:	sub    rsp,0x30
  40214b:	mov    QWORD PTR [rbp-0x18],rdi
  40214f:	mov    QWORD PTR [rbp-0x20],rsi
  402153:	mov    QWORD PTR [rbp-0x28],rdx
  402157:	mov    QWORD PTR [rbp-0x30],rcx
  40215b:	mov    WORD PTR [rbp-0x2],0x0
  402161:	mov    rax,QWORD PTR [rbp-0x18]
  402165:	mov    eax,DWORD PTR [rax]
  402167:	cmp    eax,0x1
  40216a:	jne    40218b <strdup@plt+0xeeb>
  40216c:	mov    rax,0x4050c8
  402173:	movzx  eax,BYTE PTR [rax]
  402176:	test   al,al
  402178:	je     40218b <strdup@plt+0xeeb>
  40217a:	mov    rax,QWORD PTR [rbp-0x28]
  40217e:	mov    rdi,rax
  402181:	mov    eax,0x0
  402186:	call   401ea5 <strdup@plt+0xc05>
  40218b:	mov    WORD PTR [rbp-0x4],0x1
  402191:	jmp    4022eb <strdup@plt+0x104b>
  402196:	movsx  rax,WORD PTR [rbp-0x4]
  40219b:	lea    rdx,[rax*8+0x0]
  4021a3:	mov    rax,QWORD PTR [rbp-0x20]
  4021a7:	add    rax,rdx
  4021aa:	mov    rax,QWORD PTR [rax]
  4021ad:	movzx  eax,BYTE PTR [rax]
  4021b0:	cmp    al,0x2d
  4021b2:	jne    4022a7 <strdup@plt+0x1007>
  4021b8:	movsx  rax,WORD PTR [rbp-0x4]
  4021bd:	lea    rdx,[rax*8+0x0]
  4021c5:	mov    rax,QWORD PTR [rbp-0x20]
  4021c9:	add    rax,rdx
  4021cc:	mov    rax,QWORD PTR [rax]
  4021cf:	inc    rax
  4021d2:	movzx  eax,BYTE PTR [rax]
  4021d5:	test   al,al
  4021d7:	je     4022a7 <strdup@plt+0x1007>
  4021dd:	movsx  rax,WORD PTR [rbp-0x4]
  4021e2:	lea    rdx,[rax*8+0x0]
  4021ea:	mov    rax,QWORD PTR [rbp-0x20]
  4021ee:	add    rax,rdx
  4021f1:	mov    rax,QWORD PTR [rax]
  4021f4:	mov    rdi,rax
  4021f7:	call   4011c0 <strlen@plt>
  4021fc:	mov    rdx,rax
  4021ff:	movsx  rax,WORD PTR [rbp-0x4]
  402204:	lea    rcx,[rax*8+0x0]
  40220c:	mov    rax,QWORD PTR [rbp-0x20]
  402210:	add    rax,rcx
  402213:	mov    rax,QWORD PTR [rax]
  402216:	mov    rsi,rax
  402219:	lea    rdi,[rip+0xf9f]        # 4031bf <error@@Base+0xdf4>
  402220:	call   401190 <strncmp@plt>
  402225:	test   eax,eax
  402227:	jne    40223a <strdup@plt+0xf9a>
  402229:	mov    rax,QWORD PTR [rbp-0x28]
  40222d:	mov    rdi,rax
  402230:	mov    eax,0x0
  402235:	call   401ea5 <strdup@plt+0xc05>
  40223a:	movsx  eax,WORD PTR [rbp-0x4]
  40223e:	lea    edx,[rax+0x1]
  402241:	mov    rax,QWORD PTR [rbp-0x18]
  402245:	mov    eax,DWORD PTR [rax]
  402247:	cmp    edx,eax
  402249:	jge    402267 <strdup@plt+0xfc7>
  40224b:	movsx  rax,WORD PTR [rbp-0x4]
  402250:	inc    rax
  402253:	lea    rdx,[rax*8+0x0]
  40225b:	mov    rax,QWORD PTR [rbp-0x20]
  40225f:	add    rax,rdx
  402262:	mov    rax,QWORD PTR [rax]
  402265:	jmp    40226c <strdup@plt+0xfcc>
  402267:	mov    eax,0x0
  40226c:	movsx  rdx,WORD PTR [rbp-0x4]
  402271:	lea    rcx,[rdx*8+0x0]
  402279:	mov    rdx,QWORD PTR [rbp-0x20]
  40227d:	add    rdx,rcx
  402280:	mov    rcx,QWORD PTR [rdx]
  402283:	mov    rdx,QWORD PTR [rbp-0x30]
  402287:	mov    rsi,rax
  40228a:	mov    rdi,rcx
  40228d:	mov    eax,0x0
  402292:	call   401f0d <strdup@plt+0xc6d>
  402297:	test   al,al
  402299:	je     4022e1 <strdup@plt+0x1041>
  40229b:	movzx  eax,WORD PTR [rbp-0x4]
  40229f:	inc    eax
  4022a1:	mov    WORD PTR [rbp-0x4],ax
  4022a5:	jmp    4022e1 <strdup@plt+0x1041>
  4022a7:	movsx  rax,WORD PTR [rbp-0x4]
  4022ac:	lea    rdx,[rax*8+0x0]
  4022b4:	mov    rax,QWORD PTR [rbp-0x20]
  4022b8:	lea    rcx,[rdx+rax*1]
  4022bc:	movzx  eax,WORD PTR [rbp-0x2]
  4022c0:	mov    edx,eax
  4022c2:	inc    edx
  4022c4:	mov    WORD PTR [rbp-0x2],dx
  4022c8:	movsx  rax,ax
  4022cc:	lea    rdx,[rax*8+0x0]
  4022d4:	mov    rax,QWORD PTR [rbp-0x20]
  4022d8:	add    rdx,rax
  4022db:	mov    rax,QWORD PTR [rcx]
  4022de:	mov    QWORD PTR [rdx],rax
  4022e1:	movzx  eax,WORD PTR [rbp-0x4]
  4022e5:	inc    eax
  4022e7:	mov    WORD PTR [rbp-0x4],ax
  4022eb:	movsx  edx,WORD PTR [rbp-0x4]
  4022ef:	mov    rax,QWORD PTR [rbp-0x18]
  4022f3:	mov    eax,DWORD PTR [rax]
  4022f5:	cmp    edx,eax
  4022f7:	jl     402196 <strdup@plt+0xef6>
  4022fd:	movsx  edx,WORD PTR [rbp-0x2]
  402301:	mov    rax,QWORD PTR [rbp-0x18]
  402305:	mov    DWORD PTR [rax],edx
  402307:	nop
  402308:	leave  
  402309:	ret    
  40230a:	endbr64 
  40230e:	push   rbp
  40230f:	mov    rbp,rsp
  402312:	sub    rsp,0x20
  402316:	mov    QWORD PTR [rbp-0x8],rdi
  40231a:	mov    QWORD PTR [rbp-0x10],rsi
  40231e:	mov    QWORD PTR [rbp-0x18],rdx
  402322:	mov    QWORD PTR [rbp-0x20],rcx
  402326:	mov    rax,QWORD PTR [rbp-0x10]
  40232a:	mov    rax,QWORD PTR [rax]
  40232d:	mov    rdi,rax
  402330:	mov    eax,0x0
  402335:	call   401de4 <strdup@plt+0xb44>
  40233a:	mov    rdx,rax
  40233d:	mov    rax,0x405808
  402344:	mov    QWORD PTR [rax],rdx
  402347:	mov    eax,0x0
  40234c:	call   401e78 <strdup@plt+0xbd8>
  402351:	mov    rcx,QWORD PTR [rbp-0x20]
  402355:	mov    rdx,QWORD PTR [rbp-0x18]
  402359:	mov    rsi,QWORD PTR [rbp-0x10]
  40235d:	mov    rax,QWORD PTR [rbp-0x8]
  402361:	mov    rdi,rax
  402364:	mov    eax,0x0
  402369:	call   40213f <strdup@plt+0xe9f>
  40236e:	nop
  40236f:	leave  
  402370:	ret    
  402371:	endbr64 
  402375:	push   rbp
  402376:	mov    rbp,rsp
  402379:	sub    rsp,0x10
  40237d:	mov    DWORD PTR [rbp-0x4],edi
  402380:	mov    rax,0x405810
  402387:	mov    rax,QWORD PTR [rax]
  40238a:	test   rax,rax
  40238d:	je     4023a0 <strdup@plt+0x1100>
  40238f:	mov    rax,0x405810
  402396:	mov    rdx,QWORD PTR [rax]
  402399:	mov    eax,0x0
  40239e:	call   rdx
  4023a0:	mov    eax,0x0
  4023a5:	call   401d85 <strdup@plt+0xae5>
  4023aa:	mov    eax,DWORD PTR [rbp-0x4]
  4023ad:	mov    edi,eax
  4023af:	call   401280 <exit@plt>
  4023b4:	endbr64 
  4023b8:	push   rbp
  4023b9:	mov    rbp,rsp
  4023bc:	mov    edi,0x0
  4023c1:	mov    eax,0x0
  4023c6:	call   402371 <strdup@plt+0x10d1>

00000000004023cb <error@@Base>:
  4023cb:	endbr64 
  4023cf:	push   rbp
  4023d0:	mov    rbp,rsp
  4023d3:	sub    rsp,0x10
  4023d7:	mov    QWORD PTR [rbp-0x8],rdi
  4023db:	mov    rax,0x405808
  4023e2:	mov    rdx,QWORD PTR [rax]
  4023e5:	mov    rax,QWORD PTR [rip+0x2c0c]        # 404ff8 <error@@Base+0x2c2d>
  4023ec:	mov    rax,QWORD PTR [rax]
  4023ef:	mov    rcx,QWORD PTR [rbp-0x8]
  4023f3:	lea    rsi,[rip+0xdcb]        # 4031c5 <error@@Base+0xdfa>
  4023fa:	mov    rdi,rax
  4023fd:	mov    eax,0x0
  402402:	call   401220 <fprintf@plt>
  402407:	mov    rax,0x4050cc
  40240e:	mov    eax,DWORD PTR [rax]
  402410:	mov    edi,eax
  402412:	mov    eax,0x0
  402417:	call   402371 <strdup@plt+0x10d1>
  40241c:	endbr64 
  402420:	push   rbp
  402421:	mov    rbp,rsp
  402424:	sub    rsp,0x10
  402428:	mov    QWORD PTR [rbp-0x8],rdi
  40242c:	mov    QWORD PTR [rbp-0x10],rsi
  402430:	mov    rax,0x405808
  402437:	mov    rdx,QWORD PTR [rax]
  40243a:	mov    rax,QWORD PTR [rip+0x2bb7]        # 404ff8 <error@@Base+0x2c2d>
  402441:	mov    rax,QWORD PTR [rax]
  402444:	mov    rsi,QWORD PTR [rbp-0x10]
  402448:	mov    rcx,QWORD PTR [rbp-0x8]
  40244c:	mov    r8,rsi
  40244f:	lea    rsi,[rip+0xd77]        # 4031cd <error@@Base+0xe02>
  402456:	mov    rdi,rax
  402459:	mov    eax,0x0
  40245e:	call   401220 <fprintf@plt>
  402463:	mov    rax,0x4050cc
  40246a:	mov    eax,DWORD PTR [rax]
  40246c:	mov    edi,eax
  40246e:	mov    eax,0x0
  402473:	call   402371 <strdup@plt+0x10d1>
  402478:	endbr64 
  40247c:	push   rbp
  40247d:	mov    rbp,rsp
  402480:	sub    rsp,0x10
  402484:	mov    QWORD PTR [rbp-0x8],rdi
  402488:	mov    QWORD PTR [rbp-0x10],rsi
  40248c:	mov    rax,0x405808
  402493:	mov    rdx,QWORD PTR [rax]
  402496:	mov    rax,QWORD PTR [rip+0x2b5b]        # 404ff8 <error@@Base+0x2c2d>
  40249d:	mov    rax,QWORD PTR [rax]
  4024a0:	mov    rsi,QWORD PTR [rbp-0x10]
  4024a4:	mov    rcx,QWORD PTR [rbp-0x8]
  4024a8:	mov    r8,rsi
  4024ab:	lea    rsi,[rip+0xd1b]        # 4031cd <error@@Base+0xe02>
  4024b2:	mov    rdi,rax
  4024b5:	mov    eax,0x0
  4024ba:	call   401220 <fprintf@plt>
  4024bf:	nop
  4024c0:	leave  
  4024c1:	ret    
  4024c2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4024cc:	nop    DWORD PTR [rax+0x0]
  4024d0:	endbr64 
  4024d4:	push   r15
  4024d6:	lea    r15,[rip+0x291b]        # 404df8 <error@@Base+0x2a2d>
  4024dd:	push   r14
  4024df:	mov    r14,rdx
  4024e2:	push   r13
  4024e4:	mov    r13,rsi
  4024e7:	push   r12
  4024e9:	mov    r12d,edi
  4024ec:	push   rbp
  4024ed:	lea    rbp,[rip+0x290c]        # 404e00 <error@@Base+0x2a35>
  4024f4:	push   rbx
  4024f5:	sub    rbp,r15
  4024f8:	sub    rsp,0x8
  4024fc:	call   401000 <free@plt-0x170>
  402501:	sar    rbp,0x3
  402505:	je     402526 <error@@Base+0x15b>
  402507:	xor    ebx,ebx
  402509:	nop    DWORD PTR [rax+0x0]
  402510:	mov    rdx,r14
  402513:	mov    rsi,r13
  402516:	mov    edi,r12d
  402519:	call   QWORD PTR [r15+rbx*8]
  40251d:	add    rbx,0x1
  402521:	cmp    rbp,rbx
  402524:	jne    402510 <error@@Base+0x145>
  402526:	add    rsp,0x8
  40252a:	pop    rbx
  40252b:	pop    rbp
  40252c:	pop    r12
  40252e:	pop    r13
  402530:	pop    r14
  402532:	pop    r15
  402534:	ret    
  402535:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402540:	endbr64 
  402544:	ret    
  402545:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40254f:	nop
  402550:	endbr64 
  402554:	mov    rdx,rsi
  402557:	mov    rsi,rdi
  40255a:	mov    edi,0x1
  40255f:	jmp    401240 <__xstat@plt>

Disassembly of section .fini:

0000000000402564 <.fini>:
  402564:	endbr64 
  402568:	sub    rsp,0x8
  40256c:	add    rsp,0x8
  402570:	ret    
