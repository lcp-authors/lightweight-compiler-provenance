
../repos/prog2/0.8:     file format elf64-x86-64


Disassembly of section .init:

0000000000401000 <.init>:
  401000:	endbr64 
  401004:	sub    rsp,0x8
  401008:	mov    rax,QWORD PTR [rip+0x2fe9]        # 403ff8 <__gmon_start__>
  40100f:	test   rax,rax
  401012:	je     401016 <strcpy@plt-0x6a>
  401014:	call   rax
  401016:	add    rsp,0x8
  40101a:	ret    

Disassembly of section .plt:

0000000000401020 <.plt>:
  401020:	push   QWORD PTR [rip+0x2fe2]        # 404008 <_IO_stdin_used@@Base+0x2008>
  401026:	bnd jmp QWORD PTR [rip+0x2fe3]        # 404010 <_IO_stdin_used@@Base+0x2010>
  40102d:	nop    DWORD PTR [rax]
  401030:	endbr64 
  401034:	push   0x0
  401039:	bnd jmp 401020 <strcpy@plt-0x60>
  40103f:	nop
  401040:	endbr64 
  401044:	push   0x1
  401049:	bnd jmp 401020 <strcpy@plt-0x60>
  40104f:	nop
  401050:	endbr64 
  401054:	push   0x2
  401059:	bnd jmp 401020 <strcpy@plt-0x60>
  40105f:	nop
  401060:	endbr64 
  401064:	push   0x3
  401069:	bnd jmp 401020 <strcpy@plt-0x60>
  40106f:	nop
  401070:	endbr64 
  401074:	push   0x4
  401079:	bnd jmp 401020 <strcpy@plt-0x60>
  40107f:	nop

Disassembly of section .plt.sec:

0000000000401080 <strcpy@plt>:
  401080:	endbr64 
  401084:	bnd jmp QWORD PTR [rip+0x2f8d]        # 404018 <strcpy@GLIBC_2.2.5>
  40108b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401090 <__stack_chk_fail@plt>:
  401090:	endbr64 
  401094:	bnd jmp QWORD PTR [rip+0x2f85]        # 404020 <__stack_chk_fail@GLIBC_2.4>
  40109b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004010a0 <memset@plt>:
  4010a0:	endbr64 
  4010a4:	bnd jmp QWORD PTR [rip+0x2f7d]        # 404028 <memset@GLIBC_2.2.5>
  4010ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004010b0 <__printf_chk@plt>:
  4010b0:	endbr64 
  4010b4:	bnd jmp QWORD PTR [rip+0x2f75]        # 404030 <__printf_chk@GLIBC_2.3.4>
  4010bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004010c0 <__isoc99_scanf@plt>:
  4010c0:	endbr64 
  4010c4:	bnd jmp QWORD PTR [rip+0x2f6d]        # 404038 <__isoc99_scanf@GLIBC_2.7>
  4010cb:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

00000000004010d0 <main@@Base>:
  4010d0:	endbr64 
  4010d4:	push   r14
  4010d6:	vpxor  xmm0,xmm0,xmm0
  4010da:	xor    esi,esi
  4010dc:	push   r13
  4010de:	mov    edx,0x3e8
  4010e3:	push   r12
  4010e5:	push   rbp
  4010e6:	push   rbx
  4010e7:	sub    rsp,0x4c0
  4010ee:	lea    rbx,[rsp+0x50]
  4010f3:	mov    rdi,rbx
  4010f6:	mov    r14,rsp
  4010f9:	mov    rax,QWORD PTR fs:0x28
  401102:	mov    QWORD PTR [rsp+0x4b8],rax
  40110a:	xor    eax,eax
  40110c:	vmovaps XMMWORD PTR [rsp],xmm0
  401111:	vmovaps XMMWORD PTR [rsp+0x10],xmm0
  401117:	vmovaps XMMWORD PTR [rsp+0x20],xmm0
  40111d:	vmovaps XMMWORD PTR [rsp+0x30],xmm0
  401123:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  401129:	call   4010a0 <memset@plt>
  40112e:	vpxor  xmm0,xmm0,xmm0
  401132:	xor    edx,edx
  401134:	xor    eax,eax
  401136:	mov    rsi,r14
  401139:	mov    rdi,rbx
  40113c:	vmovaps XMMWORD PTR [rsp+0x440],xmm0
  401145:	vmovaps XMMWORD PTR [rsp+0x450],xmm0
  40114e:	vmovaps XMMWORD PTR [rsp+0x460],xmm0
  401157:	vmovaps XMMWORD PTR [rsp+0x480],xmm0
  401160:	vmovaps XMMWORD PTR [rsp+0x490],xmm0
  401169:	vmovaps XMMWORD PTR [rsp+0x4a0],xmm0
  401172:	mov    WORD PTR [rsp+0x4b0],dx
  40117a:	lea    rbp,[rsp+0x480]
  401182:	lea    r12,[rsp+0x440]
  40118a:	mov    WORD PTR [rsp+0x470],ax
  401192:	call   401310 <lerpontuacoes@@Base>
  401197:	mov    r13d,eax
  40119a:	mov    rcx,r12
  40119d:	mov    r8,rbp
  4011a0:	mov    edx,eax
  4011a2:	mov    rsi,r14
  4011a5:	mov    rdi,rbx
  4011a8:	call   4013b0 <primeiroUltimo@@Base>
  4011ad:	mov    edx,r13d
  4011b0:	lea    rsi,[rip+0xe53]        # 40200a <_IO_stdin_used@@Base+0xa>
  4011b7:	mov    edi,0x1
  4011bc:	xor    eax,eax
  4011be:	call   4010b0 <__printf_chk@plt>
  4011c3:	mov    rdx,r12
  4011c6:	lea    rsi,[rip+0xe59]        # 402026 <_IO_stdin_used@@Base+0x26>
  4011cd:	mov    edi,0x1
  4011d2:	xor    eax,eax
  4011d4:	call   4010b0 <__printf_chk@plt>
  4011d9:	xor    eax,eax
  4011db:	mov    rdx,rbp
  4011de:	lea    rsi,[rip+0xe4e]        # 402033 <_IO_stdin_used@@Base+0x33>
  4011e5:	mov    edi,0x1
  4011ea:	call   4010b0 <__printf_chk@plt>
  4011ef:	mov    rcx,QWORD PTR [rsp+0x4b8]
  4011f7:	xor    rcx,QWORD PTR fs:0x28
  401200:	jne    401214 <main@@Base+0x144>
  401202:	add    rsp,0x4c0
  401209:	pop    rbx
  40120a:	pop    rbp
  40120b:	pop    r12
  40120d:	pop    r13
  40120f:	xor    eax,eax
  401211:	pop    r14
  401213:	ret    
  401214:	call   401090 <__stack_chk_fail@plt>
  401219:	nop    DWORD PTR [rax+0x0]

0000000000401220 <_start@@Base>:
  401220:	endbr64 
  401224:	xor    ebp,ebp
  401226:	mov    r9,rdx
  401229:	pop    rsi
  40122a:	mov    rdx,rsp
  40122d:	and    rsp,0xfffffffffffffff0
  401231:	push   rax
  401232:	push   rsp
  401233:	mov    r8,0x4014c0
  40123a:	mov    rcx,0x401450
  401241:	mov    rdi,0x4010d0
  401248:	call   QWORD PTR [rip+0x2da2]        # 403ff0 <__libc_start_main@GLIBC_2.2.5>
  40124e:	hlt    
  40124f:	nop
  401250:	endbr64 
  401254:	ret    
  401255:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40125f:	nop
  401260:	mov    eax,0x404050
  401265:	cmp    rax,0x404050
  40126b:	je     401280 <_start@@Base+0x60>
  40126d:	mov    eax,0x0
  401272:	test   rax,rax
  401275:	je     401280 <_start@@Base+0x60>
  401277:	mov    edi,0x404050
  40127c:	jmp    rax
  40127e:	xchg   ax,ax
  401280:	ret    
  401281:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40128c:	nop    DWORD PTR [rax+0x0]
  401290:	mov    esi,0x404050
  401295:	sub    rsi,0x404050
  40129c:	sar    rsi,0x3
  4012a0:	mov    rax,rsi
  4012a3:	shr    rax,0x3f
  4012a7:	add    rsi,rax
  4012aa:	sar    rsi,1
  4012ad:	je     4012c0 <_start@@Base+0xa0>
  4012af:	mov    eax,0x0
  4012b4:	test   rax,rax
  4012b7:	je     4012c0 <_start@@Base+0xa0>
  4012b9:	mov    edi,0x404050
  4012be:	jmp    rax
  4012c0:	ret    
  4012c1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4012cc:	nop    DWORD PTR [rax+0x0]
  4012d0:	endbr64 
  4012d4:	cmp    BYTE PTR [rip+0x2d75],0x0        # 404050 <__bss_start@@Base>
  4012db:	jne    4012f0 <_start@@Base+0xd0>
  4012dd:	push   rbp
  4012de:	mov    rbp,rsp
  4012e1:	call   401260 <_start@@Base+0x40>
  4012e6:	mov    BYTE PTR [rip+0x2d63],0x1        # 404050 <__bss_start@@Base>
  4012ed:	pop    rbp
  4012ee:	ret    
  4012ef:	nop
  4012f0:	ret    
  4012f1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4012fc:	nop    DWORD PTR [rax+0x0]
  401300:	endbr64 
  401304:	jmp    401290 <_start@@Base+0x70>
  401306:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000401310 <lerpontuacoes@@Base>:
  401310:	endbr64 
  401314:	push   r13
  401316:	push   r12
  401318:	push   rbp
  401319:	mov    rbp,rdi
  40131c:	lea    rdi,[rip+0xce4]        # 402007 <_IO_stdin_used@@Base+0x7>
  401323:	push   rbx
  401324:	mov    rbx,rsi
  401327:	sub    rsp,0x18
  40132b:	mov    rax,QWORD PTR fs:0x28
  401334:	mov    QWORD PTR [rsp+0x8],rax
  401339:	xor    eax,eax
  40133b:	lea    rsi,[rsp+0x4]
  401340:	call   4010c0 <__isoc99_scanf@plt>
  401345:	mov    eax,DWORD PTR [rsp+0x4]
  401349:	test   eax,eax
  40134b:	jle    401384 <lerpontuacoes@@Base+0x74>
  40134d:	xor    r12d,r12d
  401350:	lea    r13,[rip+0xcad]        # 402004 <_IO_stdin_used@@Base+0x4>
  401357:	nop    WORD PTR [rax+rax*1+0x0]
  401360:	mov    rdx,rbx
  401363:	mov    rsi,rbp
  401366:	mov    rdi,r13
  401369:	xor    eax,eax
  40136b:	call   4010c0 <__isoc99_scanf@plt>
  401370:	mov    eax,DWORD PTR [rsp+0x4]
  401374:	inc    r12d
  401377:	add    rbp,0x32
  40137b:	add    rbx,0x4
  40137f:	cmp    eax,r12d
  401382:	jg     401360 <lerpontuacoes@@Base+0x50>
  401384:	mov    rcx,QWORD PTR [rsp+0x8]
  401389:	xor    rcx,QWORD PTR fs:0x28
  401392:	jne    40139f <lerpontuacoes@@Base+0x8f>
  401394:	add    rsp,0x18
  401398:	pop    rbx
  401399:	pop    rbp
  40139a:	pop    r12
  40139c:	pop    r13
  40139e:	ret    
  40139f:	call   401090 <__stack_chk_fail@plt>
  4013a4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4013af:	nop

00000000004013b0 <primeiroUltimo@@Base>:
  4013b0:	endbr64 
  4013b4:	push   r15
  4013b6:	push   r14
  4013b8:	push   r13
  4013ba:	push   r12
  4013bc:	push   rbp
  4013bd:	push   rbx
  4013be:	sub    rsp,0x18
  4013c2:	mov    r14d,DWORD PTR [rsi]
  4013c5:	cmp    edx,0x1
  4013c8:	jle    40143c <primeiroUltimo@@Base+0x8c>
  4013ca:	lea    eax,[rdx-0x2]
  4013cd:	mov    QWORD PTR [rsp+0x8],r8
  4013d2:	mov    QWORD PTR [rsp],rcx
  4013d6:	lea    rbx,[rsi+0x4]
  4013da:	lea    r12,[rdi+0x32]
  4013de:	lea    r15,[rsi+rax*4+0x8]
  4013e3:	mov    r13d,r14d
  4013e6:	jmp    401402 <primeiroUltimo@@Base+0x52>
  4013e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4013f0:	cmp    ebp,r13d
  4013f3:	jl     40141f <primeiroUltimo@@Base+0x6f>
  4013f5:	add    rbx,0x4
  4013f9:	add    r12,0x32
  4013fd:	cmp    rbx,r15
  401400:	je     40143c <primeiroUltimo@@Base+0x8c>
  401402:	mov    ebp,DWORD PTR [rbx]
  401404:	cmp    ebp,r14d
  401407:	jle    4013f0 <primeiroUltimo@@Base+0x40>
  401409:	mov    rdi,QWORD PTR [rsp]
  40140d:	mov    rsi,r12
  401410:	call   401080 <strcpy@plt>
  401415:	mov    r14d,ebp
  401418:	mov    ebp,DWORD PTR [rbx]
  40141a:	cmp    ebp,r13d
  40141d:	jge    4013f5 <primeiroUltimo@@Base+0x45>
  40141f:	mov    rdi,QWORD PTR [rsp+0x8]
  401424:	mov    rsi,r12
  401427:	add    rbx,0x4
  40142b:	call   401080 <strcpy@plt>
  401430:	mov    r13d,ebp
  401433:	add    r12,0x32
  401437:	cmp    rbx,r15
  40143a:	jne    401402 <primeiroUltimo@@Base+0x52>
  40143c:	add    rsp,0x18
  401440:	pop    rbx
  401441:	pop    rbp
  401442:	pop    r12
  401444:	pop    r13
  401446:	pop    r14
  401448:	pop    r15
  40144a:	ret    
  40144b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401450 <__libc_csu_init@@Base>:
  401450:	endbr64 
  401454:	push   r15
  401456:	lea    r15,[rip+0x29b3]        # 403e10 <_IO_stdin_used@@Base+0x1e10>
  40145d:	push   r14
  40145f:	mov    r14,rdx
  401462:	push   r13
  401464:	mov    r13,rsi
  401467:	push   r12
  401469:	mov    r12d,edi
  40146c:	push   rbp
  40146d:	lea    rbp,[rip+0x29a4]        # 403e18 <_IO_stdin_used@@Base+0x1e18>
  401474:	push   rbx
  401475:	sub    rbp,r15
  401478:	sub    rsp,0x8
  40147c:	call   401000 <strcpy@plt-0x80>
  401481:	sar    rbp,0x3
  401485:	je     4014a6 <__libc_csu_init@@Base+0x56>
  401487:	xor    ebx,ebx
  401489:	nop    DWORD PTR [rax+0x0]
  401490:	mov    rdx,r14
  401493:	mov    rsi,r13
  401496:	mov    edi,r12d
  401499:	call   QWORD PTR [r15+rbx*8]
  40149d:	add    rbx,0x1
  4014a1:	cmp    rbp,rbx
  4014a4:	jne    401490 <__libc_csu_init@@Base+0x40>
  4014a6:	add    rsp,0x8
  4014aa:	pop    rbx
  4014ab:	pop    rbp
  4014ac:	pop    r12
  4014ae:	pop    r13
  4014b0:	pop    r14
  4014b2:	pop    r15
  4014b4:	ret    
  4014b5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

00000000004014c0 <__libc_csu_fini@@Base>:
  4014c0:	endbr64 
  4014c4:	ret    

Disassembly of section .fini:

00000000004014c8 <.fini>:
  4014c8:	endbr64 
  4014cc:	sub    rsp,0x8
  4014d0:	add    rsp,0x8
  4014d4:	ret    
