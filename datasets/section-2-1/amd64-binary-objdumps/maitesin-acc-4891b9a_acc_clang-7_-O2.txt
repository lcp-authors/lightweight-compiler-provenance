
../repos/maitesin-acc-4891b9a/bin/acc:     file format elf64-x86-64


Disassembly of section .init:

0000000000403000 <.init>:
  403000:	endbr64 
  403004:	sub    rsp,0x8
  403008:	mov    rax,QWORD PTR [rip+0xafd9]        # 40dfe8 <__gmon_start__>
  40300f:	test   rax,rax
  403012:	je     403016 <getenv@plt-0x1a>
  403014:	call   rax
  403016:	add    rsp,0x8
  40301a:	ret    

Disassembly of section .plt:

0000000000403020 <getenv@plt-0x10>:
  403020:	push   QWORD PTR [rip+0xafe2]        # 40e008 <_IO_stdin_used@@Base+0x5008>
  403026:	jmp    QWORD PTR [rip+0xafe4]        # 40e010 <_IO_stdin_used@@Base+0x5010>
  40302c:	nop    DWORD PTR [rax+0x0]

0000000000403030 <getenv@plt>:
  403030:	jmp    QWORD PTR [rip+0xafe2]        # 40e018 <getenv@GLIBC_2.2.5>
  403036:	push   0x0
  40303b:	jmp    403020 <getenv@plt-0x10>

0000000000403040 <free@plt>:
  403040:	jmp    QWORD PTR [rip+0xafda]        # 40e020 <free@GLIBC_2.2.5>
  403046:	push   0x1
  40304b:	jmp    403020 <getenv@plt-0x10>

0000000000403050 <__errno_location@plt>:
  403050:	jmp    QWORD PTR [rip+0xafd2]        # 40e028 <__errno_location@GLIBC_2.2.5>
  403056:	push   0x2
  40305b:	jmp    403020 <getenv@plt-0x10>

0000000000403060 <strncpy@plt>:
  403060:	jmp    QWORD PTR [rip+0xafca]        # 40e030 <strncpy@GLIBC_2.2.5>
  403066:	push   0x3
  40306b:	jmp    403020 <getenv@plt-0x10>

0000000000403070 <strncmp@plt>:
  403070:	jmp    QWORD PTR [rip+0xafc2]        # 40e038 <strncmp@GLIBC_2.2.5>
  403076:	push   0x4
  40307b:	jmp    403020 <getenv@plt-0x10>

0000000000403080 <mkdir@plt>:
  403080:	jmp    QWORD PTR [rip+0xafba]        # 40e040 <mkdir@GLIBC_2.2.5>
  403086:	push   0x5
  40308b:	jmp    403020 <getenv@plt-0x10>

0000000000403090 <fcntl@plt>:
  403090:	jmp    QWORD PTR [rip+0xafb2]        # 40e048 <fcntl@GLIBC_2.2.5>
  403096:	push   0x6
  40309b:	jmp    403020 <getenv@plt-0x10>

00000000004030a0 <getpid@plt>:
  4030a0:	jmp    QWORD PTR [rip+0xafaa]        # 40e050 <getpid@GLIBC_2.2.5>
  4030a6:	push   0x7
  4030ab:	jmp    403020 <getenv@plt-0x10>

00000000004030b0 <fread_unlocked@plt>:
  4030b0:	jmp    QWORD PTR [rip+0xafa2]        # 40e058 <fread_unlocked@GLIBC_2.2.5>
  4030b6:	push   0x8
  4030bb:	jmp    403020 <getenv@plt-0x10>

00000000004030c0 <fclose@plt>:
  4030c0:	jmp    QWORD PTR [rip+0xaf9a]        # 40e060 <fclose@GLIBC_2.2.5>
  4030c6:	push   0x9
  4030cb:	jmp    403020 <getenv@plt-0x10>

00000000004030d0 <msync@plt>:
  4030d0:	jmp    QWORD PTR [rip+0xaf92]        # 40e068 <msync@GLIBC_2.2.5>
  4030d6:	push   0xa
  4030db:	jmp    403020 <getenv@plt-0x10>

00000000004030e0 <strlen@plt>:
  4030e0:	jmp    QWORD PTR [rip+0xaf8a]        # 40e070 <strlen@GLIBC_2.2.5>
  4030e6:	push   0xb
  4030eb:	jmp    403020 <getenv@plt-0x10>

00000000004030f0 <mmap@plt>:
  4030f0:	jmp    QWORD PTR [rip+0xaf82]        # 40e078 <mmap@GLIBC_2.2.5>
  4030f6:	push   0xc
  4030fb:	jmp    403020 <getenv@plt-0x10>

0000000000403100 <strchr@plt>:
  403100:	jmp    QWORD PTR [rip+0xaf7a]        # 40e080 <strchr@GLIBC_2.2.5>
  403106:	push   0xd
  40310b:	jmp    403020 <getenv@plt-0x10>

0000000000403110 <strrchr@plt>:
  403110:	jmp    QWORD PTR [rip+0xaf72]        # 40e088 <strrchr@GLIBC_2.2.5>
  403116:	push   0xe
  40311b:	jmp    403020 <getenv@plt-0x10>

0000000000403120 <uname@plt>:
  403120:	jmp    QWORD PTR [rip+0xaf6a]        # 40e090 <uname@GLIBC_2.2.5>
  403126:	push   0xf
  40312b:	jmp    403020 <getenv@plt-0x10>

0000000000403130 <memset@plt>:
  403130:	jmp    QWORD PTR [rip+0xaf62]        # 40e098 <memset@GLIBC_2.2.5>
  403136:	push   0x10
  40313b:	jmp    403020 <getenv@plt-0x10>

0000000000403140 <strnlen@plt>:
  403140:	jmp    QWORD PTR [rip+0xaf5a]        # 40e0a0 <strnlen@GLIBC_2.2.5>
  403146:	push   0x11
  40314b:	jmp    403020 <getenv@plt-0x10>

0000000000403150 <fputc@plt>:
  403150:	jmp    QWORD PTR [rip+0xaf52]        # 40e0a8 <fputc@GLIBC_2.2.5>
  403156:	push   0x12
  40315b:	jmp    403020 <getenv@plt-0x10>

0000000000403160 <fprintf@plt>:
  403160:	jmp    QWORD PTR [rip+0xaf4a]        # 40e0b0 <fprintf@GLIBC_2.2.5>
  403166:	push   0x13
  40316b:	jmp    403020 <getenv@plt-0x10>

0000000000403170 <ftell@plt>:
  403170:	jmp    QWORD PTR [rip+0xaf42]        # 40e0b8 <ftell@GLIBC_2.2.5>
  403176:	push   0x14
  40317b:	jmp    403020 <getenv@plt-0x10>

0000000000403180 <strtol@plt>:
  403180:	jmp    QWORD PTR [rip+0xaf3a]        # 40e0c0 <strtol@GLIBC_2.2.5>
  403186:	push   0x15
  40318b:	jmp    403020 <getenv@plt-0x10>

0000000000403190 <memcpy@plt>:
  403190:	jmp    QWORD PTR [rip+0xaf32]        # 40e0c8 <memcpy@GLIBC_2.14>
  403196:	push   0x16
  40319b:	jmp    403020 <getenv@plt-0x10>

00000000004031a0 <prctl@plt>:
  4031a0:	jmp    QWORD PTR [rip+0xaf2a]        # 40e0d0 <prctl@GLIBC_2.2.5>
  4031a6:	push   0x17
  4031ab:	jmp    403020 <getenv@plt-0x10>

00000000004031b0 <malloc@plt>:
  4031b0:	jmp    QWORD PTR [rip+0xaf22]        # 40e0d8 <malloc@GLIBC_2.2.5>
  4031b6:	push   0x18
  4031bb:	jmp    403020 <getenv@plt-0x10>

00000000004031c0 <fflush@plt>:
  4031c0:	jmp    QWORD PTR [rip+0xaf1a]        # 40e0e0 <fflush@GLIBC_2.2.5>
  4031c6:	push   0x19
  4031cb:	jmp    403020 <getenv@plt-0x10>

00000000004031d0 <fseek@plt>:
  4031d0:	jmp    QWORD PTR [rip+0xaf12]        # 40e0e8 <fseek@GLIBC_2.2.5>
  4031d6:	push   0x1a
  4031db:	jmp    403020 <getenv@plt-0x10>

00000000004031e0 <realloc@plt>:
  4031e0:	jmp    QWORD PTR [rip+0xaf0a]        # 40e0f0 <realloc@GLIBC_2.2.5>
  4031e6:	push   0x1b
  4031eb:	jmp    403020 <getenv@plt-0x10>

00000000004031f0 <fdopen@plt>:
  4031f0:	jmp    QWORD PTR [rip+0xaf02]        # 40e0f8 <fdopen@GLIBC_2.2.5>
  4031f6:	push   0x1c
  4031fb:	jmp    403020 <getenv@plt-0x10>

0000000000403200 <munmap@plt>:
  403200:	jmp    QWORD PTR [rip+0xaefa]        # 40e100 <munmap@GLIBC_2.2.5>
  403206:	push   0x1d
  40320b:	jmp    403020 <getenv@plt-0x10>

0000000000403210 <open@plt>:
  403210:	jmp    QWORD PTR [rip+0xaef2]        # 40e108 <open@GLIBC_2.2.5>
  403216:	push   0x1e
  40321b:	jmp    403020 <getenv@plt-0x10>

0000000000403220 <fopen@plt>:
  403220:	jmp    QWORD PTR [rip+0xaeea]        # 40e110 <fopen@GLIBC_2.2.5>
  403226:	push   0x1f
  40322b:	jmp    403020 <getenv@plt-0x10>

0000000000403230 <getopt@plt>:
  403230:	jmp    QWORD PTR [rip+0xaee2]        # 40e118 <getopt@GLIBC_2.2.5>
  403236:	push   0x20
  40323b:	jmp    403020 <getenv@plt-0x10>

0000000000403240 <__cxa_atexit@plt>:
  403240:	jmp    QWORD PTR [rip+0xaeda]        # 40e120 <__cxa_atexit@GLIBC_2.2.5>
  403246:	push   0x21
  40324b:	jmp    403020 <getenv@plt-0x10>

0000000000403250 <exit@plt>:
  403250:	jmp    QWORD PTR [rip+0xaed2]        # 40e128 <exit@GLIBC_2.2.5>
  403256:	push   0x22
  40325b:	jmp    403020 <getenv@plt-0x10>

0000000000403260 <fwrite@plt>:
  403260:	jmp    QWORD PTR [rip+0xaeca]        # 40e130 <fwrite@GLIBC_2.2.5>
  403266:	push   0x23
  40326b:	jmp    403020 <getenv@plt-0x10>

0000000000403270 <strdup@plt>:
  403270:	jmp    QWORD PTR [rip+0xaec2]        # 40e138 <strdup@GLIBC_2.2.5>
  403276:	push   0x24
  40327b:	jmp    403020 <getenv@plt-0x10>

0000000000403280 <strerror@plt>:
  403280:	jmp    QWORD PTR [rip+0xaeba]        # 40e140 <strerror@GLIBC_2.2.5>
  403286:	push   0x25
  40328b:	jmp    403020 <getenv@plt-0x10>

Disassembly of section .text:

0000000000403290 <_start@@Base>:
  403290:	endbr64 
  403294:	xor    ebp,ebp
  403296:	mov    r9,rdx
  403299:	pop    rsi
  40329a:	mov    rdx,rsp
  40329d:	and    rsp,0xfffffffffffffff0
  4032a1:	push   rax
  4032a2:	push   rsp
  4032a3:	mov    r8,0x408f60
  4032aa:	mov    rcx,0x408ef0
  4032b1:	mov    rdi,0x4035a0
  4032b8:	call   QWORD PTR [rip+0xad1a]        # 40dfd8 <__libc_start_main@GLIBC_2.2.5>
  4032be:	hlt    
  4032bf:	nop
  4032c0:	endbr64 
  4032c4:	ret    
  4032c5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4032cf:	nop
  4032d0:	mov    eax,0x40e180
  4032d5:	cmp    rax,0x40e180
  4032db:	je     4032f0 <_start@@Base+0x60>
  4032dd:	mov    eax,0x0
  4032e2:	test   rax,rax
  4032e5:	je     4032f0 <_start@@Base+0x60>
  4032e7:	mov    edi,0x40e180
  4032ec:	jmp    rax
  4032ee:	xchg   ax,ax
  4032f0:	ret    
  4032f1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4032fc:	nop    DWORD PTR [rax+0x0]
  403300:	mov    esi,0x40e180
  403305:	sub    rsi,0x40e180
  40330c:	mov    rax,rsi
  40330f:	shr    rsi,0x3f
  403313:	sar    rax,0x3
  403317:	add    rsi,rax
  40331a:	sar    rsi,1
  40331d:	je     403330 <_start@@Base+0xa0>
  40331f:	mov    eax,0x0
  403324:	test   rax,rax
  403327:	je     403330 <_start@@Base+0xa0>
  403329:	mov    edi,0x40e180
  40332e:	jmp    rax
  403330:	ret    
  403331:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40333c:	nop    DWORD PTR [rax+0x0]
  403340:	endbr64 
  403344:	cmp    BYTE PTR [rip+0xae35],0x0        # 40e180 <__bss_start@@Base+0x4>
  40334b:	jne    403360 <_start@@Base+0xd0>
  40334d:	push   rbp
  40334e:	mov    rbp,rsp
  403351:	call   4032d0 <_start@@Base+0x40>
  403356:	mov    BYTE PTR [rip+0xae23],0x1        # 40e180 <__bss_start@@Base+0x4>
  40335d:	pop    rbp
  40335e:	ret    
  40335f:	nop
  403360:	ret    
  403361:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40336c:	nop    DWORD PTR [rax+0x0]
  403370:	endbr64 
  403374:	jmp    403300 <_start@@Base+0x70>
  403376:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000403380 <load_file@@Base>:
  403380:	push   r15
  403382:	push   r14
  403384:	push   r13
  403386:	push   r12
  403388:	push   rbx
  403389:	mov    r14,rdi
  40338c:	lea    r13,[rip+0xadfd]        # 40e190 <__bss_start@@Base+0x14>
  403393:	add    QWORD PTR [rip+0xadf5],0x1        # 40e190 <__bss_start@@Base+0x14>
  40339b:	lea    rsi,[rip+0x6149]        # 4094eb <_IO_stdin_used@@Base+0x4eb>
  4033a2:	call   403220 <fopen@plt>
  4033a7:	mov    rbx,rax
  4033aa:	xor    eax,eax
  4033ac:	test   rbx,rbx
  4033af:	sete   al
  4033b2:	add    QWORD PTR [r13+rax*8+0x8],0x1
  4033b8:	xor    r15d,r15d
  4033bb:	test   rbx,rbx
  4033be:	je     403479 <load_file@@Base+0xf9>
  4033c4:	xor    esi,esi
  4033c6:	mov    edx,0x2
  4033cb:	mov    rdi,rbx
  4033ce:	call   4031d0 <fseek@plt>
  4033d3:	xor    ecx,ecx
  4033d5:	test   eax,eax
  4033d7:	setne  cl
  4033da:	add    QWORD PTR [r13+rcx*8+0x18],0x1
  4033e0:	test   eax,eax
  4033e2:	jne    403469 <load_file@@Base+0xe9>
  4033e8:	mov    rdi,rbx
  4033eb:	call   403170 <ftell@plt>
  4033f0:	mov    r12,rax
  4033f3:	xor    eax,eax
  4033f5:	cmp    r12,0xffffffffffffffff
  4033f9:	setne  al
  4033fc:	add    QWORD PTR [r13+rax*8+0x28],0x1
  403402:	cmp    r12,0xffffffffffffffff
  403406:	je     40348e <load_file@@Base+0x10e>
  40340c:	lea    rdi,[r12+0x1]
  403411:	call   4031b0 <malloc@plt>
  403416:	mov    r15,rax
  403419:	xor    esi,esi
  40341b:	xor    edx,edx
  40341d:	mov    rdi,rbx
  403420:	call   4031d0 <fseek@plt>
  403425:	xor    ecx,ecx
  403427:	test   eax,eax
  403429:	sete   cl
  40342c:	add    QWORD PTR [r13+rcx*8+0x38],0x1
  403432:	test   eax,eax
  403434:	jne    4034a6 <load_file@@Base+0x126>
  403436:	mov    esi,0x1
  40343b:	mov    rdi,r15
  40343e:	mov    rdx,r12
  403441:	mov    rcx,rbx
  403444:	call   4030b0 <fread_unlocked@plt>
  403449:	xor    ecx,ecx
  40344b:	test   rax,rax
  40344e:	setne  cl
  403451:	add    QWORD PTR [r13+rcx*8+0x48],0x1
  403457:	test   rax,rax
  40345a:	je     4034d0 <load_file@@Base+0x150>
  40345c:	add    QWORD PTR [rip+0xad84],0x1        # 40e1e8 <__bss_start@@Base+0x6c>
  403464:	mov    BYTE PTR [r15+rax*1],0x0
  403469:	add    QWORD PTR [rip+0xad7f],0x1        # 40e1f0 <__bss_start@@Base+0x74>
  403471:	mov    rdi,rbx
  403474:	call   4030c0 <fclose@plt>
  403479:	add    QWORD PTR [rip+0xad77],0x1        # 40e1f8 <__bss_start@@Base+0x7c>
  403481:	mov    rax,r15
  403484:	pop    rbx
  403485:	pop    r12
  403487:	pop    r13
  403489:	pop    r14
  40348b:	pop    r15
  40348d:	ret    
  40348e:	mov    rax,QWORD PTR [rip+0xab5b]        # 40dff0 <stderr@GLIBC_2.2.5>
  403495:	mov    rcx,QWORD PTR [rax]
  403498:	lea    rdi,[rip+0x5b65]        # 409004 <_IO_stdin_used@@Base+0x4>
  40349f:	mov    esi,0x33
  4034a4:	jmp    4034bc <load_file@@Base+0x13c>
  4034a6:	mov    rax,QWORD PTR [rip+0xab43]        # 40dff0 <stderr@GLIBC_2.2.5>
  4034ad:	mov    rcx,QWORD PTR [rax]
  4034b0:	lea    rdi,[rip+0x5b81]        # 409038 <_IO_stdin_used@@Base+0x38>
  4034b7:	mov    esi,0x31
  4034bc:	mov    edx,0x1
  4034c1:	call   403260 <fwrite@plt>
  4034c6:	mov    edi,0x1
  4034cb:	call   403250 <exit@plt>
  4034d0:	mov    rax,QWORD PTR [rip+0xab19]        # 40dff0 <stderr@GLIBC_2.2.5>
  4034d7:	mov    rdi,QWORD PTR [rax]
  4034da:	lea    rsi,[rip+0x5b89]        # 40906a <_IO_stdin_used@@Base+0x6a>
  4034e1:	xor    eax,eax
  4034e3:	mov    rdx,r14
  4034e6:	call   403160 <fprintf@plt>
  4034eb:	mov    edi,0x1
  4034f0:	call   403250 <exit@plt>
  4034f5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4034ff:	nop

0000000000403500 <my_main@@Base>:
  403500:	push   r15
  403502:	push   r14
  403504:	push   r13
  403506:	push   r12
  403508:	push   rbx
  403509:	sub    rsp,0x40
  40350d:	mov    r14,rsi
  403510:	vmovdqa xmm0,XMMWORD PTR [rip+0xace8]        # 40e200 <__bss_start@@Base+0x84>
  403518:	vpcmpeqd xmm1,xmm1,xmm1
  40351c:	vpsubq xmm0,xmm0,xmm1
  403520:	vmovdqa XMMWORD PTR [rip+0xacd8],xmm0        # 40e200 <__bss_start@@Base+0x84>
  403528:	call   403380 <load_file@@Base>
  40352d:	mov    r13,rax
  403530:	lea    r15,[rsp+0x28]
  403535:	mov    rdi,r15
  403538:	mov    rsi,rax
  40353b:	call   403d20 <init_lexer@@Base>
  403540:	lea    r12,[rsp+0x8]
  403545:	mov    rdi,r12
  403548:	mov    rsi,r15
  40354b:	call   405b80 <init_grammar@@Base>
  403550:	lea    rbx,[rsp+0x10]
  403555:	mov    rdi,rbx
  403558:	mov    rsi,r12
  40355b:	mov    rdx,r14
  40355e:	call   406760 <init_generator@@Base>
  403563:	mov    rdi,rbx
  403566:	call   4067d0 <generate_code@@Base>
  40356b:	mov    rdi,rbx
  40356e:	call   4067a0 <destroy_generator@@Base>
  403573:	mov    rdi,r12
  403576:	call   405ba0 <destroy_grammar@@Base>
  40357b:	mov    rdi,r15
  40357e:	call   403d50 <destroy_lexer@@Base>
  403583:	mov    rdi,r13
  403586:	call   403040 <free@plt>
  40358b:	xor    eax,eax
  40358d:	add    rsp,0x40
  403591:	pop    rbx
  403592:	pop    r12
  403594:	pop    r13
  403596:	pop    r14
  403598:	pop    r15
  40359a:	ret    
  40359b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004035a0 <main@@Base>:
  4035a0:	push   rbp
  4035a1:	push   r15
  4035a3:	push   r14
  4035a5:	push   r13
  4035a7:	push   r12
  4035a9:	push   rbx
  4035aa:	push   rax
  4035ab:	mov    rbx,rsi
  4035ae:	mov    ebp,edi
  4035b0:	lea    r15,[rip+0xac59]        # 40e210 <__bss_start@@Base+0x94>
  4035b7:	vmovdqa xmm0,XMMWORD PTR [rip+0xac51]        # 40e210 <__bss_start@@Base+0x94>
  4035bf:	vpcmpeqd xmm1,xmm1,xmm1
  4035c3:	vpsubq xmm0,xmm0,xmm1
  4035c7:	vmovdqa XMMWORD PTR [rip+0xac41],xmm0        # 40e210 <__bss_start@@Base+0x94>
  4035cf:	lea    rdx,[rip+0x5aac]        # 409082 <_IO_stdin_used@@Base+0x82>
  4035d6:	call   403230 <getopt@plt>
  4035db:	xor    ecx,ecx
  4035dd:	cmp    eax,0xffffffff
  4035e0:	sete   cl
  4035e3:	add    QWORD PTR [r15+rcx*8+0x10],0x1
  4035e9:	xor    r12d,r12d
  4035ec:	cmp    eax,0xffffffff
  4035ef:	je     403647 <main@@Base+0xa7>
  4035f1:	mov    r13,QWORD PTR [rip+0xa9e8]        # 40dfe0 <optarg@GLIBC_2.2.5>
  4035f8:	lea    r14,[rip+0x5a83]        # 409082 <_IO_stdin_used@@Base+0x82>
  4035ff:	nop
  403600:	xor    ecx,ecx
  403602:	cmp    eax,0x6f
  403605:	setne  cl
  403608:	add    QWORD PTR [r15+rcx*8+0x20],0x1
  40360e:	cmp    eax,0x6f
  403611:	jne    40361f <main@@Base+0x7f>
  403613:	add    QWORD PTR [rip+0xac25],0x1        # 40e240 <__bss_start@@Base+0xc4>
  40361b:	mov    r12,QWORD PTR [r13+0x0]
  40361f:	add    QWORD PTR [rip+0xac21],0x1        # 40e248 <__bss_start@@Base+0xcc>
  403627:	mov    edi,ebp
  403629:	mov    rsi,rbx
  40362c:	mov    rdx,r14
  40362f:	call   403230 <getopt@plt>
  403634:	xor    ecx,ecx
  403636:	cmp    eax,0xffffffff
  403639:	sete   cl
  40363c:	add    QWORD PTR [r15+rcx*8+0x10],0x1
  403642:	cmp    eax,0xffffffff
  403645:	jne    403600 <main@@Base+0x60>
  403647:	mov    rax,QWORD PTR [rip+0xa982]        # 40dfd0 <optind@GLIBC_2.2.5>
  40364e:	movsxd rax,DWORD PTR [rax]
  403651:	xor    ecx,ecx
  403653:	cmp    eax,ebp
  403655:	setge  cl
  403658:	add    QWORD PTR [r15+rcx*8+0x40],0x1
  40365e:	cmp    eax,ebp
  403660:	jge    403692 <main@@Base+0xf2>
  403662:	add    QWORD PTR [rip+0xabf6],0x1        # 40e260 <__bss_start@@Base+0xe4>
  40366a:	mov    rdi,QWORD PTR [rbx+rax*8]
  40366e:	test   r12,r12
  403671:	lea    rsi,[rip+0x5a0d]        # 409085 <_IO_stdin_used@@Base+0x85>
  403678:	cmovne rsi,r12
  40367c:	call   403500 <my_main@@Base>
  403681:	xor    eax,eax
  403683:	add    rsp,0x8
  403687:	pop    rbx
  403688:	pop    r12
  40368a:	pop    r13
  40368c:	pop    r14
  40368e:	pop    r15
  403690:	pop    rbp
  403691:	ret    
  403692:	mov    rax,QWORD PTR [rip+0xa957]        # 40dff0 <stderr@GLIBC_2.2.5>
  403699:	mov    rcx,QWORD PTR [rax]
  40369c:	lea    rdi,[rip+0x59e6]        # 409089 <_IO_stdin_used@@Base+0x89>
  4036a3:	mov    esi,0x2d
  4036a8:	mov    edx,0x1
  4036ad:	call   403260 <fwrite@plt>
  4036b2:	mov    edi,0x1
  4036b7:	call   403250 <exit@plt>
  4036bc:	nop    DWORD PTR [rax+0x0]
  4036c0:	push   rax
  4036c1:	lea    rdi,[rip+0x5a08]        # 4090d0 <_IO_stdin_used@@Base+0xd0>
  4036c8:	lea    rsi,[rip+0x59e8]        # 4090b7 <_IO_stdin_used@@Base+0xb7>
  4036cf:	mov    edx,0x7eaaf060
  4036d4:	call   407200 <__generate_code_for_binary_boolean_expression@@Base+0x400>
  4036d9:	lea    rsi,[rip+0x59dc]        # 4090bc <_IO_stdin_used@@Base+0xbc>
  4036e0:	xor    edi,edi
  4036e2:	mov    edx,0xdc2fd3d4
  4036e7:	xor    ecx,ecx
  4036e9:	mov    r8d,0x7eaaf060
  4036ef:	call   407650 <__generate_code_for_binary_boolean_expression@@Base+0x850>
  4036f4:	lea    rsi,[rip+0xaa95]        # 40e190 <__bss_start@@Base+0x14>
  4036fb:	mov    edi,0xe
  403700:	call   407a80 <__generate_code_for_binary_boolean_expression@@Base+0xc80>
  403705:	lea    rsi,[rip+0x59ba]        # 4090c6 <_IO_stdin_used@@Base+0xc6>
  40370c:	mov    edi,0x1
  403711:	mov    edx,0x884edc95
  403716:	xor    ecx,ecx
  403718:	mov    r8d,0x7eaaf060
  40371e:	call   407650 <__generate_code_for_binary_boolean_expression@@Base+0x850>
  403723:	lea    rsi,[rip+0xaad6]        # 40e200 <__bss_start@@Base+0x84>
  40372a:	mov    edi,0x2
  40372f:	call   407a80 <__generate_code_for_binary_boolean_expression@@Base+0xc80>
  403734:	lea    rsi,[rip+0x598e]        # 4090c9 <_IO_stdin_used@@Base+0xc9>
  40373b:	mov    edi,0x2
  403740:	mov    edx,0xe13b85bc
  403745:	xor    ecx,ecx
  403747:	mov    r8d,0x7eaaf060
  40374d:	call   407650 <__generate_code_for_binary_boolean_expression@@Base+0x850>
  403752:	lea    rsi,[rip+0xaab7]        # 40e210 <__bss_start@@Base+0x94>
  403759:	mov    edi,0xb
  40375e:	call   407a80 <__generate_code_for_binary_boolean_expression@@Base+0xc80>
  403763:	call   407ea0 <__generate_code_for_binary_boolean_expression@@Base+0x10a0>
  403768:	pop    rax
  403769:	jmp    408640 <__generate_code_for_binary_boolean_expression@@Base+0x1840>
  40376e:	xchg   ax,ax
  403770:	push   rax
  403771:	call   4036c0 <main@@Base+0x120>
  403776:	vxorps xmm0,xmm0,xmm0
  40377a:	vmovups YMMWORD PTR [rip+0xaa5e],ymm0        # 40e1e0 <__bss_start@@Base+0x64>
  403782:	vmovups YMMWORD PTR [rip+0xaa46],ymm0        # 40e1d0 <__bss_start@@Base+0x54>
  40378a:	vmovups YMMWORD PTR [rip+0xaa1e],ymm0        # 40e1b0 <__bss_start@@Base+0x34>
  403792:	vmovups YMMWORD PTR [rip+0xa9f6],ymm0        # 40e190 <__bss_start@@Base+0x14>
  40379a:	vxorps xmm1,xmm1,xmm1
  40379e:	vmovaps XMMWORD PTR [rip+0xaa5a],xmm1        # 40e200 <__bss_start@@Base+0x84>
  4037a6:	vmovups YMMWORD PTR [rip+0xaa9a],ymm0        # 40e248 <__bss_start@@Base+0xcc>
  4037ae:	vmovups YMMWORD PTR [rip+0xaa7a],ymm0        # 40e230 <__bss_start@@Base+0xb4>
  4037b6:	vmovups YMMWORD PTR [rip+0xaa52],ymm0        # 40e210 <__bss_start@@Base+0x94>
  4037be:	pop    rax
  4037bf:	vzeroupper 
  4037c2:	ret    
  4037c3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4037cd:	nop    DWORD PTR [rax]
  4037d0:	lea    rdi,[rip+0xfffffffffffffee9]        # 4036c0 <main@@Base+0x120>
  4037d7:	lea    rsi,[rip+0xffffffffffffff92]        # 403770 <main@@Base+0x1d0>
  4037de:	jmp    408a00 <__gcov_flush@@Base+0xa0>
  4037e3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4037ed:	nop    DWORD PTR [rax]

00000000004037f0 <init_token_int_type@@Base>:
  4037f0:	vmovdqa xmm0,XMMWORD PTR [rip+0xaa78]        # 40e270 <__bss_start@@Base+0xf4>
  4037f8:	vpcmpeqd xmm1,xmm1,xmm1
  4037fc:	vpsubq xmm0,xmm0,xmm1
  403800:	vmovdqa XMMWORD PTR [rip+0xaa68],xmm0        # 40e270 <__bss_start@@Base+0xf4>
  403808:	mov    DWORD PTR [rdi],0x0
  40380e:	ret    
  40380f:	nop

0000000000403810 <init_token_int_value@@Base>:
  403810:	vmovdqa xmm0,XMMWORD PTR [rip+0xaa68]        # 40e280 <__bss_start@@Base+0x104>
  403818:	vpcmpeqd xmm1,xmm1,xmm1
  40381c:	vpsubq xmm0,xmm0,xmm1
  403820:	vmovdqa XMMWORD PTR [rip+0xaa58],xmm0        # 40e280 <__bss_start@@Base+0x104>
  403828:	mov    DWORD PTR [rdi],0x1
  40382e:	mov    DWORD PTR [rdi+0x4],esi
  403831:	ret    
  403832:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40383c:	nop    DWORD PTR [rax+0x0]

0000000000403840 <init_token_function@@Base>:
  403840:	vmovdqa xmm0,XMMWORD PTR [rip+0xaa48]        # 40e290 <__bss_start@@Base+0x114>
  403848:	vpcmpeqd xmm1,xmm1,xmm1
  40384c:	vpsubq xmm0,xmm0,xmm1
  403850:	vmovdqa XMMWORD PTR [rip+0xaa38],xmm0        # 40e290 <__bss_start@@Base+0x114>
  403858:	mov    DWORD PTR [rdi],0x2
  40385e:	mov    QWORD PTR [rdi+0x8],rsi
  403862:	ret    
  403863:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40386d:	nop    DWORD PTR [rax]

0000000000403870 <init_token_opar@@Base>:
  403870:	vmovdqa xmm0,XMMWORD PTR [rip+0xaa28]        # 40e2a0 <__bss_start@@Base+0x124>
  403878:	vpcmpeqd xmm1,xmm1,xmm1
  40387c:	vpsubq xmm0,xmm0,xmm1
  403880:	vmovdqa XMMWORD PTR [rip+0xaa18],xmm0        # 40e2a0 <__bss_start@@Base+0x124>
  403888:	mov    DWORD PTR [rdi],0x3
  40388e:	ret    
  40388f:	nop

0000000000403890 <init_token_cpar@@Base>:
  403890:	vmovdqa xmm0,XMMWORD PTR [rip+0xaa18]        # 40e2b0 <__bss_start@@Base+0x134>
  403898:	vpcmpeqd xmm1,xmm1,xmm1
  40389c:	vpsubq xmm0,xmm0,xmm1
  4038a0:	vmovdqa XMMWORD PTR [rip+0xaa08],xmm0        # 40e2b0 <__bss_start@@Base+0x134>
  4038a8:	mov    DWORD PTR [rdi],0x4
  4038ae:	ret    
  4038af:	nop

00000000004038b0 <init_token_obra@@Base>:
  4038b0:	vmovdqa xmm0,XMMWORD PTR [rip+0xaa08]        # 40e2c0 <__bss_start@@Base+0x144>
  4038b8:	vpcmpeqd xmm1,xmm1,xmm1
  4038bc:	vpsubq xmm0,xmm0,xmm1
  4038c0:	vmovdqa XMMWORD PTR [rip+0xa9f8],xmm0        # 40e2c0 <__bss_start@@Base+0x144>
  4038c8:	mov    DWORD PTR [rdi],0x5
  4038ce:	ret    
  4038cf:	nop

00000000004038d0 <init_token_cbra@@Base>:
  4038d0:	vmovdqa xmm0,XMMWORD PTR [rip+0xa9f8]        # 40e2d0 <__bss_start@@Base+0x154>
  4038d8:	vpcmpeqd xmm1,xmm1,xmm1
  4038dc:	vpsubq xmm0,xmm0,xmm1
  4038e0:	vmovdqa XMMWORD PTR [rip+0xa9e8],xmm0        # 40e2d0 <__bss_start@@Base+0x154>
  4038e8:	mov    DWORD PTR [rdi],0x6
  4038ee:	ret    
  4038ef:	nop

00000000004038f0 <init_token_return@@Base>:
  4038f0:	vmovdqa xmm0,XMMWORD PTR [rip+0xa9e8]        # 40e2e0 <__bss_start@@Base+0x164>
  4038f8:	vpcmpeqd xmm1,xmm1,xmm1
  4038fc:	vpsubq xmm0,xmm0,xmm1
  403900:	vmovdqa XMMWORD PTR [rip+0xa9d8],xmm0        # 40e2e0 <__bss_start@@Base+0x164>
  403908:	mov    DWORD PTR [rdi],0x7
  40390e:	ret    
  40390f:	nop

0000000000403910 <init_token_semicolon@@Base>:
  403910:	vmovdqa xmm0,XMMWORD PTR [rip+0xa9d8]        # 40e2f0 <__bss_start@@Base+0x174>
  403918:	vpcmpeqd xmm1,xmm1,xmm1
  40391c:	vpsubq xmm0,xmm0,xmm1
  403920:	vmovdqa XMMWORD PTR [rip+0xa9c8],xmm0        # 40e2f0 <__bss_start@@Base+0x174>
  403928:	mov    DWORD PTR [rdi],0x8
  40392e:	ret    
  40392f:	nop

0000000000403930 <init_token_eof@@Base>:
  403930:	vmovdqa xmm0,XMMWORD PTR [rip+0xa9c8]        # 40e300 <__bss_start@@Base+0x184>
  403938:	vpcmpeqd xmm1,xmm1,xmm1
  40393c:	vpsubq xmm0,xmm0,xmm1
  403940:	vmovdqa XMMWORD PTR [rip+0xa9b8],xmm0        # 40e300 <__bss_start@@Base+0x184>
  403948:	mov    DWORD PTR [rdi],0x9
  40394e:	ret    
  40394f:	nop

0000000000403950 <init_token_if@@Base>:
  403950:	vmovdqa xmm0,XMMWORD PTR [rip+0xa9b8]        # 40e310 <__bss_start@@Base+0x194>
  403958:	vpcmpeqd xmm1,xmm1,xmm1
  40395c:	vpsubq xmm0,xmm0,xmm1
  403960:	vmovdqa XMMWORD PTR [rip+0xa9a8],xmm0        # 40e310 <__bss_start@@Base+0x194>
  403968:	mov    DWORD PTR [rdi],0xa
  40396e:	ret    
  40396f:	nop

0000000000403970 <init_token_else@@Base>:
  403970:	vmovdqa xmm0,XMMWORD PTR [rip+0xa9a8]        # 40e320 <__bss_start@@Base+0x1a4>
  403978:	vpcmpeqd xmm1,xmm1,xmm1
  40397c:	vpsubq xmm0,xmm0,xmm1
  403980:	vmovdqa XMMWORD PTR [rip+0xa998],xmm0        # 40e320 <__bss_start@@Base+0x1a4>
  403988:	mov    DWORD PTR [rdi],0xb
  40398e:	ret    
  40398f:	nop

0000000000403990 <init_token_boolean_op@@Base>:
  403990:	vmovdqa xmm0,XMMWORD PTR [rip+0xa998]        # 40e330 <__bss_start@@Base+0x1b4>
  403998:	vpcmpeqd xmm1,xmm1,xmm1
  40399c:	vpsubq xmm0,xmm0,xmm1
  4039a0:	vmovdqa XMMWORD PTR [rip+0xa988],xmm0        # 40e330 <__bss_start@@Base+0x1b4>
  4039a8:	mov    DWORD PTR [rdi],0xc
  4039ae:	mov    QWORD PTR [rdi+0x8],rsi
  4039b2:	ret    
  4039b3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4039bd:	nop    DWORD PTR [rax]

00000000004039c0 <free_token_int_type@@Base>:
  4039c0:	vmovdqa xmm0,XMMWORD PTR [rip+0xa978]        # 40e340 <__bss_start@@Base+0x1c4>
  4039c8:	vpcmpeqd xmm1,xmm1,xmm1
  4039cc:	vpsubq xmm0,xmm0,xmm1
  4039d0:	vmovdqa XMMWORD PTR [rip+0xa968],xmm0        # 40e340 <__bss_start@@Base+0x1c4>
  4039d8:	jmp    403040 <free@plt>
  4039dd:	nop    DWORD PTR [rax]

00000000004039e0 <free_token_int_value@@Base>:
  4039e0:	vmovdqa xmm0,XMMWORD PTR [rip+0xa968]        # 40e350 <__bss_start@@Base+0x1d4>
  4039e8:	vpcmpeqd xmm1,xmm1,xmm1
  4039ec:	vpsubq xmm0,xmm0,xmm1
  4039f0:	vmovdqa XMMWORD PTR [rip+0xa958],xmm0        # 40e350 <__bss_start@@Base+0x1d4>
  4039f8:	jmp    403040 <free@plt>
  4039fd:	nop    DWORD PTR [rax]

0000000000403a00 <free_token_function@@Base>:
  403a00:	vmovdqa xmm0,XMMWORD PTR [rip+0xa958]        # 40e360 <__bss_start@@Base+0x1e4>
  403a08:	vpcmpeqd xmm1,xmm1,xmm1
  403a0c:	vpsubq xmm0,xmm0,xmm1
  403a10:	vmovdqa XMMWORD PTR [rip+0xa948],xmm0        # 40e360 <__bss_start@@Base+0x1e4>
  403a18:	jmp    403040 <free@plt>
  403a1d:	nop    DWORD PTR [rax]

0000000000403a20 <free_token_opar@@Base>:
  403a20:	vmovdqa xmm0,XMMWORD PTR [rip+0xa948]        # 40e370 <__bss_start@@Base+0x1f4>
  403a28:	vpcmpeqd xmm1,xmm1,xmm1
  403a2c:	vpsubq xmm0,xmm0,xmm1
  403a30:	vmovdqa XMMWORD PTR [rip+0xa938],xmm0        # 40e370 <__bss_start@@Base+0x1f4>
  403a38:	jmp    403040 <free@plt>
  403a3d:	nop    DWORD PTR [rax]

0000000000403a40 <free_token_cpar@@Base>:
  403a40:	vmovdqa xmm0,XMMWORD PTR [rip+0xa938]        # 40e380 <__bss_start@@Base+0x204>
  403a48:	vpcmpeqd xmm1,xmm1,xmm1
  403a4c:	vpsubq xmm0,xmm0,xmm1
  403a50:	vmovdqa XMMWORD PTR [rip+0xa928],xmm0        # 40e380 <__bss_start@@Base+0x204>
  403a58:	jmp    403040 <free@plt>
  403a5d:	nop    DWORD PTR [rax]

0000000000403a60 <free_token_obra@@Base>:
  403a60:	vmovdqa xmm0,XMMWORD PTR [rip+0xa928]        # 40e390 <__bss_start@@Base+0x214>
  403a68:	vpcmpeqd xmm1,xmm1,xmm1
  403a6c:	vpsubq xmm0,xmm0,xmm1
  403a70:	vmovdqa XMMWORD PTR [rip+0xa918],xmm0        # 40e390 <__bss_start@@Base+0x214>
  403a78:	jmp    403040 <free@plt>
  403a7d:	nop    DWORD PTR [rax]

0000000000403a80 <free_token_cbra@@Base>:
  403a80:	vmovdqa xmm0,XMMWORD PTR [rip+0xa918]        # 40e3a0 <__bss_start@@Base+0x224>
  403a88:	vpcmpeqd xmm1,xmm1,xmm1
  403a8c:	vpsubq xmm0,xmm0,xmm1
  403a90:	vmovdqa XMMWORD PTR [rip+0xa908],xmm0        # 40e3a0 <__bss_start@@Base+0x224>
  403a98:	jmp    403040 <free@plt>
  403a9d:	nop    DWORD PTR [rax]

0000000000403aa0 <free_token_return@@Base>:
  403aa0:	vmovdqa xmm0,XMMWORD PTR [rip+0xa908]        # 40e3b0 <__bss_start@@Base+0x234>
  403aa8:	vpcmpeqd xmm1,xmm1,xmm1
  403aac:	vpsubq xmm0,xmm0,xmm1
  403ab0:	vmovdqa XMMWORD PTR [rip+0xa8f8],xmm0        # 40e3b0 <__bss_start@@Base+0x234>
  403ab8:	jmp    403040 <free@plt>
  403abd:	nop    DWORD PTR [rax]

0000000000403ac0 <free_token_semicolon@@Base>:
  403ac0:	vmovdqa xmm0,XMMWORD PTR [rip+0xa8f8]        # 40e3c0 <__bss_start@@Base+0x244>
  403ac8:	vpcmpeqd xmm1,xmm1,xmm1
  403acc:	vpsubq xmm0,xmm0,xmm1
  403ad0:	vmovdqa XMMWORD PTR [rip+0xa8e8],xmm0        # 40e3c0 <__bss_start@@Base+0x244>
  403ad8:	jmp    403040 <free@plt>
  403add:	nop    DWORD PTR [rax]

0000000000403ae0 <free_token_eof@@Base>:
  403ae0:	vmovdqa xmm0,XMMWORD PTR [rip+0xa8e8]        # 40e3d0 <__bss_start@@Base+0x254>
  403ae8:	vpcmpeqd xmm1,xmm1,xmm1
  403aec:	vpsubq xmm0,xmm0,xmm1
  403af0:	vmovdqa XMMWORD PTR [rip+0xa8d8],xmm0        # 40e3d0 <__bss_start@@Base+0x254>
  403af8:	jmp    403040 <free@plt>
  403afd:	nop    DWORD PTR [rax]

0000000000403b00 <free_token_if@@Base>:
  403b00:	vmovdqa xmm0,XMMWORD PTR [rip+0xa8d8]        # 40e3e0 <__bss_start@@Base+0x264>
  403b08:	vpcmpeqd xmm1,xmm1,xmm1
  403b0c:	vpsubq xmm0,xmm0,xmm1
  403b10:	vmovdqa XMMWORD PTR [rip+0xa8c8],xmm0        # 40e3e0 <__bss_start@@Base+0x264>
  403b18:	jmp    403040 <free@plt>
  403b1d:	nop    DWORD PTR [rax]

0000000000403b20 <free_token_else@@Base>:
  403b20:	vmovdqa xmm0,XMMWORD PTR [rip+0xa8c8]        # 40e3f0 <__bss_start@@Base+0x274>
  403b28:	vpcmpeqd xmm1,xmm1,xmm1
  403b2c:	vpsubq xmm0,xmm0,xmm1
  403b30:	vmovdqa XMMWORD PTR [rip+0xa8b8],xmm0        # 40e3f0 <__bss_start@@Base+0x274>
  403b38:	jmp    403040 <free@plt>
  403b3d:	nop    DWORD PTR [rax]

0000000000403b40 <free_token_boolean_op@@Base>:
  403b40:	push   rbx
  403b41:	mov    rbx,rdi
  403b44:	lea    rax,[rip+0xa8b5]        # 40e400 <__bss_start@@Base+0x284>
  403b4b:	add    QWORD PTR [rip+0xa8ad],0x1        # 40e400 <__bss_start@@Base+0x284>
  403b53:	mov    rdi,QWORD PTR [rdi+0x8]
  403b57:	xor    ecx,ecx
  403b59:	test   rdi,rdi
  403b5c:	sete   cl
  403b5f:	add    QWORD PTR [rax+rcx*8+0x8],0x1
  403b65:	test   rdi,rdi
  403b68:	je     403b77 <free_token_boolean_op@@Base+0x37>
  403b6a:	add    QWORD PTR [rip+0xa8a6],0x1        # 40e418 <__bss_start@@Base+0x29c>
  403b72:	call   403040 <free@plt>
  403b77:	add    QWORD PTR [rip+0xa8a1],0x1        # 40e420 <__bss_start@@Base+0x2a4>
  403b7f:	mov    rdi,rbx
  403b82:	pop    rbx
  403b83:	jmp    403040 <free@plt>
  403b88:	nop    DWORD PTR [rax+rax*1+0x0]
  403b90:	push   r15
  403b92:	push   r14
  403b94:	push   rbx
  403b95:	lea    rdi,[rip+0x55a4]        # 409140 <_IO_stdin_used@@Base+0x140>
  403b9c:	lea    rsi,[rip+0x5514]        # 4090b7 <_IO_stdin_used@@Base+0xb7>
  403ba3:	mov    edx,0xb7b65b46
  403ba8:	call   407200 <__generate_code_for_binary_boolean_expression@@Base+0x400>
  403bad:	xor    ebx,ebx
  403baf:	lea    r14,[rip+0x928a]        # 40ce40 <_IO_stdin_used@@Base+0x3e40>
  403bb6:	lea    r15,[rip+0x95c3]        # 40d180 <_IO_stdin_used@@Base+0x4180>
  403bbd:	nop    DWORD PTR [rax]
  403bc0:	mov    edi,DWORD PTR [r14+rbx*2]
  403bc4:	mov    rsi,QWORD PTR [r14+rbx*2+0x8]
  403bc9:	mov    edx,DWORD PTR [r14+rbx*2+0x10]
  403bce:	mov    r8d,DWORD PTR [r14+rbx*2+0x18]
  403bd3:	mov    ecx,DWORD PTR [r14+rbx*2+0x14]
  403bd8:	call   407650 <__generate_code_for_binary_boolean_expression@@Base+0x850>
  403bdd:	mov    edi,DWORD PTR [rbx+r15*1]
  403be1:	mov    rsi,QWORD PTR [rbx+r15*1+0x8]
  403be6:	call   407a80 <__generate_code_for_binary_boolean_expression@@Base+0xc80>
  403beb:	add    rbx,0x10
  403bef:	cmp    rbx,0x1a0
  403bf6:	jne    403bc0 <free_token_boolean_op@@Base+0x80>
  403bf8:	call   407ea0 <__generate_code_for_binary_boolean_expression@@Base+0x10a0>
  403bfd:	pop    rbx
  403bfe:	pop    r14
  403c00:	pop    r15
  403c02:	jmp    408640 <__generate_code_for_binary_boolean_expression@@Base+0x1840>
  403c07:	nop    WORD PTR [rax+rax*1+0x0]
  403c10:	push   rax
  403c11:	call   403b90 <free_token_boolean_op@@Base+0x50>
  403c16:	vxorps xmm0,xmm0,xmm0
  403c1a:	vmovaps XMMWORD PTR [rip+0xa64e],xmm0        # 40e270 <__bss_start@@Base+0xf4>
  403c22:	vmovaps XMMWORD PTR [rip+0xa656],xmm0        # 40e280 <__bss_start@@Base+0x104>
  403c2a:	vmovaps XMMWORD PTR [rip+0xa65e],xmm0        # 40e290 <__bss_start@@Base+0x114>
  403c32:	vmovaps XMMWORD PTR [rip+0xa666],xmm0        # 40e2a0 <__bss_start@@Base+0x124>
  403c3a:	vmovaps XMMWORD PTR [rip+0xa66e],xmm0        # 40e2b0 <__bss_start@@Base+0x134>
  403c42:	vmovaps XMMWORD PTR [rip+0xa676],xmm0        # 40e2c0 <__bss_start@@Base+0x144>
  403c4a:	vmovaps XMMWORD PTR [rip+0xa67e],xmm0        # 40e2d0 <__bss_start@@Base+0x154>
  403c52:	vmovaps XMMWORD PTR [rip+0xa686],xmm0        # 40e2e0 <__bss_start@@Base+0x164>
  403c5a:	vmovaps XMMWORD PTR [rip+0xa68e],xmm0        # 40e2f0 <__bss_start@@Base+0x174>
  403c62:	vmovaps XMMWORD PTR [rip+0xa696],xmm0        # 40e300 <__bss_start@@Base+0x184>
  403c6a:	vmovaps XMMWORD PTR [rip+0xa69e],xmm0        # 40e310 <__bss_start@@Base+0x194>
  403c72:	vmovaps XMMWORD PTR [rip+0xa6a6],xmm0        # 40e320 <__bss_start@@Base+0x1a4>
  403c7a:	vmovaps XMMWORD PTR [rip+0xa6ae],xmm0        # 40e330 <__bss_start@@Base+0x1b4>
  403c82:	vmovaps XMMWORD PTR [rip+0xa6b6],xmm0        # 40e340 <__bss_start@@Base+0x1c4>
  403c8a:	vmovaps XMMWORD PTR [rip+0xa6be],xmm0        # 40e350 <__bss_start@@Base+0x1d4>
  403c92:	vmovaps XMMWORD PTR [rip+0xa6c6],xmm0        # 40e360 <__bss_start@@Base+0x1e4>
  403c9a:	vmovaps XMMWORD PTR [rip+0xa6ce],xmm0        # 40e370 <__bss_start@@Base+0x1f4>
  403ca2:	vmovaps XMMWORD PTR [rip+0xa6d6],xmm0        # 40e380 <__bss_start@@Base+0x204>
  403caa:	vmovaps XMMWORD PTR [rip+0xa6de],xmm0        # 40e390 <__bss_start@@Base+0x214>
  403cb2:	vmovaps XMMWORD PTR [rip+0xa6e6],xmm0        # 40e3a0 <__bss_start@@Base+0x224>
  403cba:	vmovaps XMMWORD PTR [rip+0xa6ee],xmm0        # 40e3b0 <__bss_start@@Base+0x234>
  403cc2:	vmovaps XMMWORD PTR [rip+0xa6f6],xmm0        # 40e3c0 <__bss_start@@Base+0x244>
  403cca:	vmovaps XMMWORD PTR [rip+0xa6fe],xmm0        # 40e3d0 <__bss_start@@Base+0x254>
  403cd2:	vmovaps XMMWORD PTR [rip+0xa706],xmm0        # 40e3e0 <__bss_start@@Base+0x264>
  403cda:	vmovaps XMMWORD PTR [rip+0xa70e],xmm0        # 40e3f0 <__bss_start@@Base+0x274>
  403ce2:	vxorps xmm0,xmm0,xmm0
  403ce6:	vmovups YMMWORD PTR [rip+0xa712],ymm0        # 40e400 <__bss_start@@Base+0x284>
  403cee:	mov    QWORD PTR [rip+0xa727],0x0        # 40e420 <__bss_start@@Base+0x2a4>
  403cf9:	pop    rax
  403cfa:	vzeroupper 
  403cfd:	ret    
  403cfe:	xchg   ax,ax
  403d00:	lea    rdi,[rip+0xfffffffffffffe89]        # 403b90 <free_token_boolean_op@@Base+0x50>
  403d07:	lea    rsi,[rip+0xffffffffffffff02]        # 403c10 <free_token_boolean_op@@Base+0xd0>
  403d0e:	jmp    408a00 <__gcov_flush@@Base+0xa0>
  403d13:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403d1d:	nop    DWORD PTR [rax]

0000000000403d20 <init_lexer@@Base>:
  403d20:	vmovdqa xmm0,XMMWORD PTR [rip+0xa708]        # 40e430 <__bss_start@@Base+0x2b4>
  403d28:	vpcmpeqd xmm1,xmm1,xmm1
  403d2c:	vpsubq xmm0,xmm0,xmm1
  403d30:	vmovdqa XMMWORD PTR [rip+0xa6f8],xmm0        # 40e430 <__bss_start@@Base+0x2b4>
  403d38:	mov    QWORD PTR [rdi],rsi
  403d3b:	vpxor  xmm0,xmm0,xmm0
  403d3f:	vmovdqu XMMWORD PTR [rdi+0x8],xmm0
  403d44:	ret    
  403d45:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403d4f:	nop

0000000000403d50 <destroy_lexer@@Base>:
  403d50:	lea    rax,[rip+0xa6e9]        # 40e440 <__bss_start@@Base+0x2c4>
  403d57:	add    QWORD PTR [rip+0xa6e1],0x1        # 40e440 <__bss_start@@Base+0x2c4>
  403d5f:	mov    rdi,QWORD PTR [rdi+0x8]
  403d63:	xor    ecx,ecx
  403d65:	test   rdi,rdi
  403d68:	sete   cl
  403d6b:	add    QWORD PTR [rax+rcx*8+0x8],0x1
  403d71:	test   rdi,rdi
  403d74:	je     403da0 <destroy_lexer@@Base+0x50>
  403d76:	push   rax
  403d77:	add    QWORD PTR [rip+0xa6d9],0x1        # 40e458 <__bss_start@@Base+0x2dc>
  403d7f:	vmovdqa xmm0,XMMWORD PTR [rip+0xa6e9]        # 40e470 <__bss_start@@Base+0x2f4>
  403d87:	vpcmpeqd xmm1,xmm1,xmm1
  403d8b:	vpsubq xmm0,xmm0,xmm1
  403d8f:	vmovdqa XMMWORD PTR [rip+0xa6d9],xmm0        # 40e470 <__bss_start@@Base+0x2f4>
  403d97:	call   403040 <free@plt>
  403d9c:	add    rsp,0x8
  403da0:	add    QWORD PTR [rip+0xa6b8],0x1        # 40e460 <__bss_start@@Base+0x2e4>
  403da8:	ret    
  403da9:	nop    DWORD PTR [rax+0x0]

0000000000403db0 <free_stack_base@@Base>:
  403db0:	vmovdqa xmm0,XMMWORD PTR [rip+0xa6b8]        # 40e470 <__bss_start@@Base+0x2f4>
  403db8:	vpcmpeqd xmm1,xmm1,xmm1
  403dbc:	vpsubq xmm0,xmm0,xmm1
  403dc0:	vmovdqa XMMWORD PTR [rip+0xa6a8],xmm0        # 40e470 <__bss_start@@Base+0x2f4>
  403dc8:	jmp    403040 <free@plt>
  403dcd:	nop    DWORD PTR [rax]

0000000000403dd0 <push_back@@Base>:
  403dd0:	push   r14
  403dd2:	push   rbx
  403dd3:	push   rax
  403dd4:	mov    r14,rsi
  403dd7:	mov    rbx,rdi
  403dda:	vmovdqa xmm0,XMMWORD PTR [rip+0xa69e]        # 40e480 <__bss_start@@Base+0x304>
  403de2:	vpcmpeqd xmm1,xmm1,xmm1
  403de6:	vpsubq xmm0,xmm0,xmm1
  403dea:	vmovdqa XMMWORD PTR [rip+0xa68e],xmm0        # 40e480 <__bss_start@@Base+0x304>
  403df2:	mov    edi,0x10
  403df7:	call   4031b0 <malloc@plt>
  403dfc:	mov    QWORD PTR [rax+0x8],r14
  403e00:	mov    rcx,QWORD PTR [rbx+0x8]
  403e04:	mov    QWORD PTR [rax],rcx
  403e07:	mov    QWORD PTR [rbx+0x8],rax
  403e0b:	add    rsp,0x8
  403e0f:	pop    rbx
  403e10:	pop    r14
  403e12:	ret    
  403e13:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403e1d:	nop    DWORD PTR [rax]

0000000000403e20 <get_char@@Base>:
  403e20:	vmovdqa xmm0,XMMWORD PTR [rip+0xa668]        # 40e490 <__bss_start@@Base+0x314>
  403e28:	vpcmpeqd xmm1,xmm1,xmm1
  403e2c:	vpsubq xmm0,xmm0,xmm1
  403e30:	vmovdqa XMMWORD PTR [rip+0xa658],xmm0        # 40e490 <__bss_start@@Base+0x314>
  403e38:	mov    rax,QWORD PTR [rdi]
  403e3b:	mov    rcx,QWORD PTR [rdi+0x10]
  403e3f:	lea    rdx,[rcx+0x1]
  403e43:	mov    QWORD PTR [rdi+0x10],rdx
  403e47:	mov    al,BYTE PTR [rax+rcx*1]
  403e4a:	ret    
  403e4b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403e50 <push_back_chars@@Base>:
  403e50:	lea    rcx,[rip+0xa649]        # 40e4a0 <__bss_start@@Base+0x324>
  403e57:	add    QWORD PTR [rip+0xa641],0x1        # 40e4a0 <__bss_start@@Base+0x324>
  403e5f:	mov    rax,QWORD PTR [rdi+0x10]
  403e63:	xor    edx,edx
  403e65:	cmp    rax,rsi
  403e68:	setb   dl
  403e6b:	add    QWORD PTR [rcx+rdx*8+0x8],0x1
  403e71:	sub    rax,rsi
  403e74:	jb     403e83 <push_back_chars@@Base+0x33>
  403e76:	add    QWORD PTR [rip+0xa63a],0x1        # 40e4b8 <__bss_start@@Base+0x33c>
  403e7e:	mov    QWORD PTR [rdi+0x10],rax
  403e82:	ret    
  403e83:	push   rax
  403e84:	mov    rax,QWORD PTR [rip+0xa165]        # 40dff0 <stderr@GLIBC_2.2.5>
  403e8b:	mov    rcx,QWORD PTR [rax]
  403e8e:	lea    rdi,[rip+0x55d3]        # 409468 <_IO_stdin_used@@Base+0x468>
  403e95:	mov    esi,0x20
  403e9a:	mov    edx,0x1
  403e9f:	call   403260 <fwrite@plt>
  403ea4:	mov    edi,0x1
  403ea9:	call   403250 <exit@plt>
  403eae:	xchg   ax,ax

0000000000403eb0 <push_back_one_char@@Base>:
  403eb0:	vmovdqa xmm0,XMMWORD PTR [rip+0xa608]        # 40e4c0 <__bss_start@@Base+0x344>
  403eb8:	vpcmpeqd xmm1,xmm1,xmm1
  403ebc:	vpsubq xmm0,xmm0,xmm1
  403ec0:	vmovdqa XMMWORD PTR [rip+0xa5f8],xmm0        # 40e4c0 <__bss_start@@Base+0x344>
  403ec8:	lea    rcx,[rip+0xa5d1]        # 40e4a0 <__bss_start@@Base+0x324>
  403ecf:	add    QWORD PTR [rip+0xa5c9],0x1        # 40e4a0 <__bss_start@@Base+0x324>
  403ed7:	mov    rax,QWORD PTR [rdi+0x10]
  403edb:	xor    edx,edx
  403edd:	test   rax,rax
  403ee0:	sete   dl
  403ee3:	add    QWORD PTR [rcx+rdx*8+0x8],0x1
  403ee9:	test   rax,rax
  403eec:	je     403eff <push_back_one_char@@Base+0x4f>
  403eee:	add    QWORD PTR [rip+0xa5c2],0x1        # 40e4b8 <__bss_start@@Base+0x33c>
  403ef6:	add    rax,0xffffffffffffffff
  403efa:	mov    QWORD PTR [rdi+0x10],rax
  403efe:	ret    
  403eff:	push   rax
  403f00:	mov    rax,QWORD PTR [rip+0xa0e9]        # 40dff0 <stderr@GLIBC_2.2.5>
  403f07:	mov    rcx,QWORD PTR [rax]
  403f0a:	lea    rdi,[rip+0x5557]        # 409468 <_IO_stdin_used@@Base+0x468>
  403f11:	mov    esi,0x20
  403f16:	mov    edx,0x1
  403f1b:	call   403260 <fwrite@plt>
  403f20:	mov    edi,0x1
  403f25:	call   403250 <exit@plt>
  403f2a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000403f30 <next@@Base>:
  403f30:	push   rbp
  403f31:	push   r15
  403f33:	push   r14
  403f35:	push   r13
  403f37:	push   r12
  403f39:	push   rbx
  403f3a:	sub    rsp,0x218
  403f41:	mov    r15,rdi
  403f44:	lea    r12,[rip+0xa585]        # 40e4d0 <__bss_start@@Base+0x354>
  403f4b:	add    QWORD PTR [rip+0xa57d],0x1        # 40e4d0 <__bss_start@@Base+0x354>
  403f53:	mov    rdi,QWORD PTR [rdi+0x8]
  403f57:	xor    eax,eax
  403f59:	test   rdi,rdi
  403f5c:	sete   al
  403f5f:	add    QWORD PTR [r12+rax*8+0x8],0x1
  403f65:	test   rdi,rdi
  403f68:	je     403fa7 <next@@Base+0x77>
  403f6a:	add    QWORD PTR [rip+0xa576],0x1        # 40e4e8 <__bss_start@@Base+0x36c>
  403f72:	mov    rax,QWORD PTR [rdi]
  403f75:	mov    QWORD PTR [r15+0x8],rax
  403f79:	mov    r14,QWORD PTR [rdi+0x8]
  403f7d:	mov    QWORD PTR [rdi+0x8],0x0
  403f85:	vmovdqa xmm0,XMMWORD PTR [rip+0xa4e3]        # 40e470 <__bss_start@@Base+0x2f4>
  403f8d:	vpcmpeqd xmm1,xmm1,xmm1
  403f91:	vpsubq xmm0,xmm0,xmm1
  403f95:	vmovdqa XMMWORD PTR [rip+0xa4d3],xmm0        # 40e470 <__bss_start@@Base+0x2f4>
  403f9d:	call   403040 <free@plt>
  403fa2:	jmp    404367 <next@@Base+0x437>
  403fa7:	add    QWORD PTR [rip+0xa541],0x1        # 40e4f0 <__bss_start@@Base+0x374>
  403faf:	vmovdqa xmm0,XMMWORD PTR [rip+0xa4d9]        # 40e490 <__bss_start@@Base+0x314>
  403fb7:	vpcmpeqd xmm1,xmm1,xmm1
  403fbb:	vpsubq xmm0,xmm0,xmm1
  403fbf:	vmovdqa XMMWORD PTR [rip+0xa4c9],xmm0        # 40e490 <__bss_start@@Base+0x314>
  403fc7:	mov    rax,QWORD PTR [r15]
  403fca:	mov    rcx,QWORD PTR [r15+0x10]
  403fce:	lea    rdx,[rcx+0x1]
  403fd2:	mov    QWORD PTR [r15+0x10],rdx
  403fd6:	mov    bl,BYTE PTR [rax+rcx*1]
  403fd9:	xor    eax,eax
  403fdb:	test   bl,bl
  403fdd:	sete   al
  403fe0:	add    QWORD PTR [r12+rax*8+0x28],0x1
  403fe6:	test   bl,bl
  403fe8:	je     40434a <next@@Base+0x41a>
  403fee:	xor    r13d,r13d
  403ff1:	lea    r14,[rip+0x9328]        # 40d320 <_IO_stdin_used@@Base+0x4320>
  403ff8:	lea    rbp,[rip+0x5451]        # 409450 <_IO_stdin_used@@Base+0x450>
  403fff:	mov    DWORD PTR [rsp+0xc],0x0
  404007:	jmp    404280 <next@@Base+0x350>
  40400c:	xor    eax,eax
  40400e:	cmp    bl,0x30
  404011:	setne  al
  404014:	add    QWORD PTR [r12+rax*8+0xa8],0x1
  40401d:	cmp    bl,0x30
  404020:	mov    ecx,DWORD PTR [rsp+0xc]
  404024:	je     4048d8 <next@@Base+0x9a8>
  40402a:	xor    eax,eax
  40402c:	cmp    bl,0x31
  40402f:	setl   al
  404032:	add    QWORD PTR [r12+rax*8+0xc0],0x1
  40403b:	xor    eax,eax
  40403d:	cmp    bl,0x31
  404040:	jl     4048fc <next@@Base+0x9cc>
  404046:	cmp    bl,0x39
  404049:	setg   al
  40404c:	add    QWORD PTR [r12+rax*8+0xd0],0x1
  404055:	cmp    bl,0x39
  404058:	jg     4040a2 <next@@Base+0x172>
  40405a:	add    QWORD PTR [rip+0xa54e],0x1        # 40e5b0 <__bss_start@@Base+0x434>
  404062:	movsxd rax,ecx
  404065:	add    ecx,0x1
  404068:	mov    DWORD PTR [rsp+0xc],ecx
  40406c:	mov    BYTE PTR [rsp+rax*1+0x10],bl
  404070:	vmovdqa xmm0,XMMWORD PTR [rip+0xa418]        # 40e490 <__bss_start@@Base+0x314>
  404078:	vpsubq xmm0,xmm0,XMMWORD PTR [rip+0x53b0]        # 409430 <_IO_stdin_used@@Base+0x430>
  404080:	vmovdqa XMMWORD PTR [rip+0xa408],xmm0        # 40e490 <__bss_start@@Base+0x314>
  404088:	mov    rax,QWORD PTR [r15+0x10]
  40408c:	lea    rcx,[rax+0x1]
  404090:	mov    QWORD PTR [r15+0x10],rcx
  404094:	add    rax,QWORD PTR [r15]
  404097:	mov    r13d,0x1
  40409d:	jmp    404322 <next@@Base+0x3f2>
  4040a2:	add    QWORD PTR [rip+0xa516],0x1        # 40e5c0 <__bss_start@@Base+0x444>
  4040aa:	add    QWORD PTR [rip+0xa526],0x1        # 40e5d8 <__bss_start@@Base+0x45c>
  4040b2:	xor    eax,eax
  4040b4:	cmp    bl,0x7b
  4040b7:	setne  al
  4040ba:	add    QWORD PTR [r12+rax*8+0x118],0x1
  4040c3:	cmp    bl,0x7b
  4040c6:	je     40496e <next@@Base+0xa3e>
  4040cc:	xor    eax,eax
  4040ce:	cmp    bl,0x7d
  4040d1:	setne  al
  4040d4:	add    QWORD PTR [r12+rax*8+0x130],0x1
  4040dd:	cmp    bl,0x7d
  4040e0:	je     404990 <next@@Base+0xa60>
  4040e6:	xor    eax,eax
  4040e8:	cmp    bl,0x3b
  4040eb:	setne  al
  4040ee:	add    QWORD PTR [r12+rax*8+0x148],0x1
  4040f7:	cmp    bl,0x3b
  4040fa:	je     4049b2 <next@@Base+0xa82>
  404100:	xor    eax,eax
  404102:	cmp    bl,0x65
  404105:	setne  al
  404108:	add    QWORD PTR [r12+rax*8+0x160],0x1
  404111:	cmp    bl,0x65
  404114:	jne    40415f <next@@Base+0x22f>
  404116:	add    QWORD PTR [rip+0xa522],0x1        # 40e640 <__bss_start@@Base+0x4c4>
  40411e:	movsxd rax,ecx
  404121:	add    ecx,0x1
  404124:	mov    DWORD PTR [rsp+0xc],ecx
  404128:	mov    BYTE PTR [rsp+rax*1+0x10],0x65
  40412d:	vmovdqa xmm0,XMMWORD PTR [rip+0xa35b]        # 40e490 <__bss_start@@Base+0x314>
  404135:	vpsubq xmm0,xmm0,XMMWORD PTR [rip+0x52f3]        # 409430 <_IO_stdin_used@@Base+0x430>
  40413d:	vmovdqa XMMWORD PTR [rip+0xa34b],xmm0        # 40e490 <__bss_start@@Base+0x314>
  404145:	mov    rax,QWORD PTR [r15+0x10]
  404149:	lea    rcx,[rax+0x1]
  40414d:	mov    QWORD PTR [r15+0x10],rcx
  404151:	add    rax,QWORD PTR [r15]
  404154:	mov    r13d,0x5
  40415a:	jmp    404322 <next@@Base+0x3f2>
  40415f:	xor    eax,eax
  404161:	cmp    bl,0x69
  404164:	setne  al
  404167:	add    QWORD PTR [r12+rax*8+0x178],0x1
  404170:	cmp    bl,0x69
  404173:	jne    4041be <next@@Base+0x28e>
  404175:	add    QWORD PTR [rip+0xa4db],0x1        # 40e658 <__bss_start@@Base+0x4dc>
  40417d:	movsxd rax,ecx
  404180:	add    ecx,0x1
  404183:	mov    DWORD PTR [rsp+0xc],ecx
  404187:	mov    BYTE PTR [rsp+rax*1+0x10],0x69
  40418c:	vmovdqa xmm0,XMMWORD PTR [rip+0xa2fc]        # 40e490 <__bss_start@@Base+0x314>
  404194:	vpsubq xmm0,xmm0,XMMWORD PTR [rip+0x5294]        # 409430 <_IO_stdin_used@@Base+0x430>
  40419c:	vmovdqa XMMWORD PTR [rip+0xa2ec],xmm0        # 40e490 <__bss_start@@Base+0x314>
  4041a4:	mov    rax,QWORD PTR [r15+0x10]
  4041a8:	lea    rcx,[rax+0x1]
  4041ac:	mov    QWORD PTR [r15+0x10],rcx
  4041b0:	add    rax,QWORD PTR [r15]
  4041b3:	mov    r13d,0x2
  4041b9:	jmp    404322 <next@@Base+0x3f2>
  4041be:	xor    eax,eax
  4041c0:	cmp    bl,0x6d
  4041c3:	setne  al
  4041c6:	add    QWORD PTR [r12+rax*8+0x190],0x1
  4041cf:	cmp    bl,0x6d
  4041d2:	jne    40421d <next@@Base+0x2ed>
  4041d4:	add    QWORD PTR [rip+0xa494],0x1        # 40e670 <__bss_start@@Base+0x4f4>
  4041dc:	movsxd rax,ecx
  4041df:	add    ecx,0x1
  4041e2:	mov    DWORD PTR [rsp+0xc],ecx
  4041e6:	mov    BYTE PTR [rsp+rax*1+0x10],0x6d
  4041eb:	vmovdqa xmm0,XMMWORD PTR [rip+0xa29d]        # 40e490 <__bss_start@@Base+0x314>
  4041f3:	vpsubq xmm0,xmm0,XMMWORD PTR [rip+0x5235]        # 409430 <_IO_stdin_used@@Base+0x430>
  4041fb:	vmovdqa XMMWORD PTR [rip+0xa28d],xmm0        # 40e490 <__bss_start@@Base+0x314>
  404203:	mov    rax,QWORD PTR [r15+0x10]
  404207:	lea    rcx,[rax+0x1]
  40420b:	mov    QWORD PTR [r15+0x10],rcx
  40420f:	add    rax,QWORD PTR [r15]
  404212:	mov    r13d,0x3
  404218:	jmp    404322 <next@@Base+0x3f2>
  40421d:	xor    eax,eax
  40421f:	cmp    bl,0x72
  404222:	setne  al
  404225:	add    QWORD PTR [r12+rax*8+0x1a8],0x1
  40422e:	cmp    bl,0x72
  404231:	jne    404bde <next@@Base+0xcae>
  404237:	add    QWORD PTR [rip+0xa449],0x1        # 40e688 <__bss_start@@Base+0x50c>
  40423f:	movsxd rax,ecx
  404242:	add    ecx,0x1
  404245:	mov    DWORD PTR [rsp+0xc],ecx
  404249:	mov    BYTE PTR [rsp+rax*1+0x10],0x72
  40424e:	vmovdqa xmm0,XMMWORD PTR [rip+0xa23a]        # 40e490 <__bss_start@@Base+0x314>
  404256:	vpsubq xmm0,xmm0,XMMWORD PTR [rip+0x51d2]        # 409430 <_IO_stdin_used@@Base+0x430>
  40425e:	vmovdqa XMMWORD PTR [rip+0xa22a],xmm0        # 40e490 <__bss_start@@Base+0x314>
  404266:	mov    rax,QWORD PTR [r15+0x10]
  40426a:	lea    rcx,[rax+0x1]
  40426e:	mov    QWORD PTR [r15+0x10],rcx
  404272:	add    rax,QWORD PTR [r15]
  404275:	mov    r13d,0x4
  40427b:	jmp    404322 <next@@Base+0x3f2>
  404280:	mov    DWORD PTR [rip+0x9ece],0x0        # 40e158 <__data_start@@Base+0x10>
  40428a:	cmp    r13,0x5
  40428e:	ja     404325 <next@@Base+0x3f5>
  404294:	movsxd rax,DWORD PTR [rbp+r13*4+0x0]
  404299:	add    rax,rbp
  40429c:	jmp    rax
  40429e:	lea    rdi,[rip+0x908b]        # 40d330 <_IO_stdin_used@@Base+0x4330>
  4042a5:	call   404eb0 <next@@Base+0xf80>
  4042aa:	xor    eax,eax
  4042ac:	cmp    bl,0x9
  4042af:	setne  al
  4042b2:	add    QWORD PTR [r12+rax*8+0x70],0x1
  4042b8:	cmp    bl,0x9
  4042bb:	je     4042f0 <next@@Base+0x3c0>
  4042bd:	xor    eax,eax
  4042bf:	cmp    bl,0x20
  4042c2:	setne  al
  4042c5:	add    QWORD PTR [r12+rax*8+0x80],0x1
  4042ce:	cmp    bl,0x20
  4042d1:	je     4042f0 <next@@Base+0x3c0>
  4042d3:	xor    eax,eax
  4042d5:	cmp    bl,0xa
  4042d8:	setne  al
  4042db:	add    QWORD PTR [r12+rax*8+0x90],0x1
  4042e4:	cmp    bl,0xa
  4042e7:	jne    40400c <next@@Base+0xdc>
  4042ed:	nop    DWORD PTR [rax]
  4042f0:	add    QWORD PTR [rip+0xa278],0x1        # 40e570 <__bss_start@@Base+0x3f4>
  4042f8:	vmovdqa xmm0,XMMWORD PTR [rip+0xa190]        # 40e490 <__bss_start@@Base+0x314>
  404300:	vpsubq xmm0,xmm0,XMMWORD PTR [rip+0x5128]        # 409430 <_IO_stdin_used@@Base+0x430>
  404308:	vmovdqa XMMWORD PTR [rip+0xa180],xmm0        # 40e490 <__bss_start@@Base+0x314>
  404310:	mov    rax,QWORD PTR [r15+0x10]
  404314:	lea    rcx,[rax+0x1]
  404318:	mov    QWORD PTR [r15+0x10],rcx
  40431c:	add    rax,QWORD PTR [r15]
  40431f:	xor    r13d,r13d
  404322:	movzx  ebx,BYTE PTR [rax]
  404325:	mov    rdi,r14
  404328:	call   404eb0 <next@@Base+0xf80>
  40432d:	add    QWORD PTR [rip+0xa573],0x1        # 40e8a8 <__bss_start@@Base+0x72c>
  404335:	xor    eax,eax
  404337:	test   bl,bl
  404339:	sete   al
  40433c:	add    QWORD PTR [r12+rax*8+0x28],0x1
  404342:	test   bl,bl
  404344:	jne    404280 <next@@Base+0x350>
  40434a:	add    QWORD PTR [rip+0xa55e],0x1        # 40e8b0 <__bss_start@@Base+0x734>
  404352:	mov    edi,0x4
  404357:	call   4031b0 <malloc@plt>
  40435c:	mov    r14,rax
  40435f:	mov    rdi,rax
  404362:	call   403930 <init_token_eof@@Base>
  404367:	add    QWORD PTR [rip+0xa549],0x1        # 40e8b8 <__bss_start@@Base+0x73c>
  40436f:	mov    rax,r14
  404372:	add    rsp,0x218
  404379:	pop    rbx
  40437a:	pop    r12
  40437c:	pop    r13
  40437e:	pop    r14
  404380:	pop    r15
  404382:	pop    rbp
  404383:	ret    
  404384:	lea    rdi,[rip+0x8fb5]        # 40d340 <_IO_stdin_used@@Base+0x4340>
  40438b:	call   404eb0 <next@@Base+0xf80>
  404390:	mov    eax,ebx
  404392:	add    al,0xd0
  404394:	xor    ecx,ecx
  404396:	cmp    al,0x9
  404398:	seta   cl
  40439b:	add    QWORD PTR [r12+rcx*8+0x2b8],0x1
  4043a4:	cmp    al,0x9
  4043a6:	mov    r13d,DWORD PTR [rsp+0xc]
  4043ab:	ja     40441e <next@@Base+0x4ee>
  4043ad:	movsxd rax,r13d
  4043b0:	lea    rbp,[rsp+rax*1]
  4043b4:	add    rbp,0x10
  4043b8:	lea    r14,[rip+0x8f81]        # 40d340 <_IO_stdin_used@@Base+0x4340>
  4043bf:	nop
  4043c0:	add    QWORD PTR [rip+0xa3d0],0x1        # 40e798 <__bss_start@@Base+0x61c>
  4043c8:	vmovdqa xmm0,XMMWORD PTR [rip+0xa0c0]        # 40e490 <__bss_start@@Base+0x314>
  4043d0:	vpsubq xmm0,xmm0,XMMWORD PTR [rip+0x5058]        # 409430 <_IO_stdin_used@@Base+0x430>
  4043d8:	vmovdqa XMMWORD PTR [rip+0xa0b0],xmm0        # 40e490 <__bss_start@@Base+0x314>
  4043e0:	mov    BYTE PTR [rbp+0x0],bl
  4043e3:	mov    rax,QWORD PTR [r15]
  4043e6:	mov    rcx,QWORD PTR [r15+0x10]
  4043ea:	lea    rdx,[rcx+0x1]
  4043ee:	mov    QWORD PTR [r15+0x10],rdx
  4043f2:	movzx  ebx,BYTE PTR [rax+rcx*1]
  4043f6:	mov    rdi,r14
  4043f9:	call   404eb0 <next@@Base+0xf80>
  4043fe:	mov    eax,ebx
  404400:	add    al,0xd0
  404402:	xor    ecx,ecx
  404404:	cmp    al,0x9
  404406:	seta   cl
  404409:	add    QWORD PTR [r12+rcx*8+0x2b8],0x1
  404412:	add    rbp,0x1
  404416:	add    r13d,0x1
  40441a:	cmp    al,0xa
  40441c:	jb     4043c0 <next@@Base+0x490>
  40441e:	add    QWORD PTR [rip+0xa37a],0x1        # 40e7a0 <__bss_start@@Base+0x624>
  404426:	vmovdqa xmm0,XMMWORD PTR [rip+0xa092]        # 40e4c0 <__bss_start@@Base+0x344>
  40442e:	vpcmpeqd xmm1,xmm1,xmm1
  404432:	vpsubq xmm0,xmm0,xmm1
  404436:	vmovdqa XMMWORD PTR [rip+0xa082],xmm0        # 40e4c0 <__bss_start@@Base+0x344>
  40443e:	lea    rcx,[rip+0xa05b]        # 40e4a0 <__bss_start@@Base+0x324>
  404445:	add    QWORD PTR [rip+0xa053],0x1        # 40e4a0 <__bss_start@@Base+0x324>
  40444d:	mov    rax,QWORD PTR [r15+0x10]
  404451:	xor    edx,edx
  404453:	test   rax,rax
  404456:	sete   dl
  404459:	add    QWORD PTR [rcx+rdx*8+0x8],0x1
  40445f:	test   rax,rax
  404462:	je     404e41 <next@@Base+0xf11>
  404468:	add    QWORD PTR [rip+0xa048],0x1        # 40e4b8 <__bss_start@@Base+0x33c>
  404470:	add    rax,0xffffffffffffffff
  404474:	mov    QWORD PTR [r15+0x10],rax
  404478:	movsxd rax,r13d
  40447b:	mov    BYTE PTR [rsp+rax*1+0x10],0x0
  404480:	mov    edi,0x8
  404485:	call   4031b0 <malloc@plt>
  40448a:	mov    r14,rax
  40448d:	vmovdqa xmm0,XMMWORD PTR [rip+0xa42b]        # 40e8c0 <__bss_start@@Base+0x744>
  404495:	vpsubq xmm0,xmm0,XMMWORD PTR [rip+0x4f93]        # 409430 <_IO_stdin_used@@Base+0x430>
  40449d:	vmovdqa XMMWORD PTR [rip+0xa41b],xmm0        # 40e8c0 <__bss_start@@Base+0x744>
  4044a5:	lea    rdi,[rsp+0x10]
  4044aa:	xor    esi,esi
  4044ac:	mov    edx,0xa
  4044b1:	call   403180 <strtol@plt>
  4044b6:	mov    rdi,r14
  4044b9:	mov    esi,eax
  4044bb:	call   403810 <init_token_int_value@@Base>
  4044c0:	jmp    404367 <next@@Base+0x437>
  4044c5:	lea    rdi,[rip+0x8e94]        # 40d360 <_IO_stdin_used@@Base+0x4360>
  4044cc:	call   404eb0 <next@@Base+0xf80>
  4044d1:	xor    eax,eax
  4044d3:	cmp    bl,0x61
  4044d6:	sete   al
  4044d9:	add    QWORD PTR [r12+rax*8+0x310],0x1
  4044e2:	cmp    bl,0x61
  4044e5:	mov    eax,DWORD PTR [rsp+0xc]
  4044e9:	jne    404e61 <next@@Base+0xf31>
  4044ef:	movsxd rbp,eax
  4044f2:	mov    BYTE PTR [rsp+rbp*1+0x10],0x61
  4044f7:	vmovdqa xmm0,XMMWORD PTR [rip+0x9f91]        # 40e490 <__bss_start@@Base+0x314>
  4044ff:	vpcmpeqd xmm1,xmm1,xmm1
  404503:	vpsubq xmm1,xmm0,xmm1
  404507:	vmovdqa XMMWORD PTR [rip+0x9f81],xmm1        # 40e490 <__bss_start@@Base+0x314>
  40450f:	mov    rax,QWORD PTR [r15]
  404512:	mov    rcx,QWORD PTR [r15+0x10]
  404516:	lea    rdx,[rcx+0x1]
  40451a:	mov    QWORD PTR [r15+0x10],rdx
  40451e:	mov    al,BYTE PTR [rax+rcx*1]
  404521:	xor    ecx,ecx
  404523:	cmp    al,0x69
  404525:	sete   cl
  404528:	add    QWORD PTR [r12+rcx*8+0x320],0x1
  404531:	cmp    al,0x69
  404533:	jne    404e61 <next@@Base+0xf31>
  404539:	mov    BYTE PTR [rsp+rbp*1+0x11],0x69
  40453e:	vpaddq xmm0,xmm0,XMMWORD PTR [rip+0x4eba]        # 409400 <_IO_stdin_used@@Base+0x400>
  404546:	vmovdqa XMMWORD PTR [rip+0x9f42],xmm0        # 40e490 <__bss_start@@Base+0x314>
  40454e:	mov    rax,QWORD PTR [r15]
  404551:	mov    rcx,QWORD PTR [r15+0x10]
  404555:	lea    rdx,[rcx+0x1]
  404559:	mov    QWORD PTR [r15+0x10],rdx
  40455d:	mov    al,BYTE PTR [rax+rcx*1]
  404560:	xor    ecx,ecx
  404562:	cmp    al,0x6e
  404564:	sete   cl
  404567:	add    QWORD PTR [r12+rcx*8+0x330],0x1
  404570:	cmp    al,0x6e
  404572:	jne    404e61 <next@@Base+0xf31>
  404578:	add    QWORD PTR [rip+0xa290],0x1        # 40e810 <__bss_start@@Base+0x694>
  404580:	lea    r14,[rbp+0x3]
  404584:	mov    WORD PTR [rsp+rbp*1+0x12],0x6e
  40458b:	lea    rdi,[rbp+0x4]
  40458f:	call   4031b0 <malloc@plt>
  404594:	mov    rbx,rax
  404597:	lea    rsi,[rsp+0x10]
  40459c:	mov    rdi,rax
  40459f:	mov    rdx,r14
  4045a2:	call   403060 <strncpy@plt>
  4045a7:	mov    BYTE PTR [rbx+rbp*1+0x3],0x0
  4045ac:	mov    edi,0x10
  4045b1:	call   4031b0 <malloc@plt>
  4045b6:	mov    r14,rax
  4045b9:	mov    rdi,rax
  4045bc:	mov    rsi,rbx
  4045bf:	call   403840 <init_token_function@@Base>
  4045c4:	jmp    404367 <next@@Base+0x437>
  4045c9:	lea    rdi,[rip+0x8da0]        # 40d370 <_IO_stdin_used@@Base+0x4370>
  4045d0:	call   404eb0 <next@@Base+0xf80>
  4045d5:	xor    eax,eax
  4045d7:	cmp    bl,0x65
  4045da:	sete   al
  4045dd:	add    QWORD PTR [r12+rax*8+0x348],0x1
  4045e6:	cmp    bl,0x65
  4045e9:	mov    eax,DWORD PTR [rsp+0xc]
  4045ed:	jne    404e61 <next@@Base+0xf31>
  4045f3:	cdqe   
  4045f5:	mov    BYTE PTR [rsp+rax*1+0x10],0x65
  4045fa:	vmovdqa xmm0,XMMWORD PTR [rip+0x9e8e]        # 40e490 <__bss_start@@Base+0x314>
  404602:	vpcmpeqd xmm1,xmm1,xmm1
  404606:	vpsubq xmm1,xmm0,xmm1
  40460a:	vmovdqa XMMWORD PTR [rip+0x9e7e],xmm1        # 40e490 <__bss_start@@Base+0x314>
  404612:	mov    rcx,QWORD PTR [r15]
  404615:	mov    rdx,QWORD PTR [r15+0x10]
  404619:	lea    rsi,[rdx+0x1]
  40461d:	mov    QWORD PTR [r15+0x10],rsi
  404621:	mov    cl,BYTE PTR [rcx+rdx*1]
  404624:	xor    edx,edx
  404626:	cmp    cl,0x74
  404629:	sete   dl
  40462c:	add    QWORD PTR [r12+rdx*8+0x358],0x1
  404635:	cmp    cl,0x74
  404638:	jne    404e61 <next@@Base+0xf31>
  40463e:	mov    BYTE PTR [rsp+rax*1+0x11],0x74
  404643:	vpaddq xmm1,xmm0,XMMWORD PTR [rip+0x4db5]        # 409400 <_IO_stdin_used@@Base+0x400>
  40464b:	vmovdqa XMMWORD PTR [rip+0x9e3d],xmm1        # 40e490 <__bss_start@@Base+0x314>
  404653:	mov    rcx,QWORD PTR [r15]
  404656:	mov    rdx,QWORD PTR [r15+0x10]
  40465a:	lea    rsi,[rdx+0x1]
  40465e:	mov    QWORD PTR [r15+0x10],rsi
  404662:	mov    cl,BYTE PTR [rcx+rdx*1]
  404665:	xor    edx,edx
  404667:	cmp    cl,0x75
  40466a:	sete   dl
  40466d:	add    QWORD PTR [r12+rdx*8+0x368],0x1
  404676:	cmp    cl,0x75
  404679:	jne    404e61 <next@@Base+0xf31>
  40467f:	mov    BYTE PTR [rsp+rax*1+0x12],0x75
  404684:	vpaddq xmm1,xmm0,XMMWORD PTR [rip+0x4d84]        # 409410 <_IO_stdin_used@@Base+0x410>
  40468c:	vmovdqa XMMWORD PTR [rip+0x9dfc],xmm1        # 40e490 <__bss_start@@Base+0x314>
  404694:	mov    rcx,QWORD PTR [r15]
  404697:	mov    rdx,QWORD PTR [r15+0x10]
  40469b:	lea    rsi,[rdx+0x1]
  40469f:	mov    QWORD PTR [r15+0x10],rsi
  4046a3:	mov    cl,BYTE PTR [rcx+rdx*1]
  4046a6:	xor    edx,edx
  4046a8:	cmp    cl,0x72
  4046ab:	sete   dl
  4046ae:	add    QWORD PTR [r12+rdx*8+0x378],0x1
  4046b7:	cmp    cl,0x72
  4046ba:	jne    404e61 <next@@Base+0xf31>
  4046c0:	mov    BYTE PTR [rsp+rax*1+0x13],0x72
  4046c5:	vpaddq xmm0,xmm0,XMMWORD PTR [rip+0x4d53]        # 409420 <_IO_stdin_used@@Base+0x420>
  4046cd:	vmovdqa XMMWORD PTR [rip+0x9dbb],xmm0        # 40e490 <__bss_start@@Base+0x314>
  4046d5:	mov    rax,QWORD PTR [r15]
  4046d8:	mov    rcx,QWORD PTR [r15+0x10]
  4046dc:	lea    rdx,[rcx+0x1]
  4046e0:	mov    QWORD PTR [r15+0x10],rdx
  4046e4:	mov    al,BYTE PTR [rax+rcx*1]
  4046e7:	xor    ecx,ecx
  4046e9:	cmp    al,0x6e
  4046eb:	sete   cl
  4046ee:	add    QWORD PTR [r12+rcx*8+0x388],0x1
  4046f7:	cmp    al,0x6e
  4046f9:	jne    404e61 <next@@Base+0xf31>
  4046ff:	add    QWORD PTR [rip+0xa161],0x1        # 40e868 <__bss_start@@Base+0x6ec>
  404707:	mov    edi,0x4
  40470c:	call   4031b0 <malloc@plt>
  404711:	mov    r14,rax
  404714:	mov    rdi,rax
  404717:	call   4038f0 <init_token_return@@Base>
  40471c:	jmp    404367 <next@@Base+0x437>
  404721:	movsx  ebp,bl
  404724:	lea    rdi,[rip+0x8c25]        # 40d350 <_IO_stdin_used@@Base+0x4350>
  40472b:	call   404eb0 <next@@Base+0xf80>
  404730:	mov    DWORD PTR [rip+0x9a1e],0x1        # 40e158 <__data_start@@Base+0x10>
  40473a:	cmp    ebp,0x66
  40473d:	mov    r14d,DWORD PTR [rsp+0xc]
  404742:	je     40489e <next@@Base+0x96e>
  404748:	cmp    ebp,0x6e
  40474b:	jne    404e6b <next@@Base+0xf3b>
  404751:	lea    rdi,[rip+0x8c48]        # 40d3a0 <_IO_stdin_used@@Base+0x43a0>
  404758:	call   404eb0 <next@@Base+0xf80>
  40475d:	movsxd rax,r14d
  404760:	mov    BYTE PTR [rsp+rax*1+0x10],bl
  404764:	vmovdqa xmm0,XMMWORD PTR [rip+0x9d24]        # 40e490 <__bss_start@@Base+0x314>
  40476c:	vpcmpeqd xmm1,xmm1,xmm1
  404770:	vpsubq xmm0,xmm0,xmm1
  404774:	vmovdqa XMMWORD PTR [rip+0x9d14],xmm0        # 40e490 <__bss_start@@Base+0x314>
  40477c:	mov    rax,QWORD PTR [r15]
  40477f:	mov    rcx,QWORD PTR [r15+0x10]
  404783:	lea    rdx,[rcx+0x1]
  404787:	mov    QWORD PTR [r15+0x10],rdx
  40478b:	mov    al,BYTE PTR [rax+rcx*1]
  40478e:	xor    ecx,ecx
  404790:	cmp    al,0x74
  404792:	sete   cl
  404795:	add    QWORD PTR [r12+rcx*8+0x2f0],0x1
  40479e:	cmp    al,0x74
  4047a0:	jne    404e61 <next@@Base+0xf31>
  4047a6:	add    QWORD PTR [rip+0xa022],0x1        # 40e7d0 <__bss_start@@Base+0x654>
  4047ae:	mov    edi,0x4
  4047b3:	call   4031b0 <malloc@plt>
  4047b8:	mov    r14,rax
  4047bb:	mov    rdi,rax
  4047be:	call   4037f0 <init_token_int_type@@Base>
  4047c3:	jmp    404367 <next@@Base+0x437>
  4047c8:	lea    rdi,[rip+0x8bb1]        # 40d380 <_IO_stdin_used@@Base+0x4380>
  4047cf:	call   404eb0 <next@@Base+0xf80>
  4047d4:	xor    eax,eax
  4047d6:	cmp    bl,0x6c
  4047d9:	sete   al
  4047dc:	add    QWORD PTR [r12+rax*8+0x3a0],0x1
  4047e5:	cmp    bl,0x6c
  4047e8:	mov    eax,DWORD PTR [rsp+0xc]
  4047ec:	jne    404e61 <next@@Base+0xf31>
  4047f2:	cdqe   
  4047f4:	mov    BYTE PTR [rsp+rax*1+0x10],0x6c
  4047f9:	vmovdqa xmm0,XMMWORD PTR [rip+0x9c8f]        # 40e490 <__bss_start@@Base+0x314>
  404801:	vpcmpeqd xmm1,xmm1,xmm1
  404805:	vpsubq xmm1,xmm0,xmm1
  404809:	vmovdqa XMMWORD PTR [rip+0x9c7f],xmm1        # 40e490 <__bss_start@@Base+0x314>
  404811:	mov    rcx,QWORD PTR [r15]
  404814:	mov    rdx,QWORD PTR [r15+0x10]
  404818:	lea    rsi,[rdx+0x1]
  40481c:	mov    QWORD PTR [r15+0x10],rsi
  404820:	mov    cl,BYTE PTR [rcx+rdx*1]
  404823:	xor    edx,edx
  404825:	cmp    cl,0x73
  404828:	sete   dl
  40482b:	add    QWORD PTR [r12+rdx*8+0x3b0],0x1
  404834:	cmp    cl,0x73
  404837:	jne    404e61 <next@@Base+0xf31>
  40483d:	mov    BYTE PTR [rsp+rax*1+0x11],0x73
  404842:	vpaddq xmm0,xmm0,XMMWORD PTR [rip+0x4bb6]        # 409400 <_IO_stdin_used@@Base+0x400>
  40484a:	vmovdqa XMMWORD PTR [rip+0x9c3e],xmm0        # 40e490 <__bss_start@@Base+0x314>
  404852:	mov    rax,QWORD PTR [r15]
  404855:	mov    rcx,QWORD PTR [r15+0x10]
  404859:	lea    rdx,[rcx+0x1]
  40485d:	mov    QWORD PTR [r15+0x10],rdx
  404861:	mov    al,BYTE PTR [rax+rcx*1]
  404864:	xor    ecx,ecx
  404866:	cmp    al,0x65
  404868:	sete   cl
  40486b:	add    QWORD PTR [r12+rcx*8+0x3c0],0x1
  404874:	cmp    al,0x65
  404876:	jne    404e61 <next@@Base+0xf31>
  40487c:	add    QWORD PTR [rip+0xa01c],0x1        # 40e8a0 <__bss_start@@Base+0x724>
  404884:	mov    edi,0x4
  404889:	call   4031b0 <malloc@plt>
  40488e:	mov    r14,rax
  404891:	mov    rdi,rax
  404894:	call   403970 <init_token_else@@Base>
  404899:	jmp    404367 <next@@Base+0x437>
  40489e:	lea    rdi,[rip+0x8b0b]        # 40d3b0 <_IO_stdin_used@@Base+0x43b0>
  4048a5:	call   404eb0 <next@@Base+0xf80>
  4048aa:	add    QWORD PTR [rip+0x9f26],0x1        # 40e7d8 <__bss_start@@Base+0x65c>
  4048b2:	movsxd rax,r14d
  4048b5:	mov    BYTE PTR [rsp+rax*1+0x10],bl
  4048b9:	mov    BYTE PTR [rsp+rax*1+0x11],0x0
  4048be:	mov    edi,0x4
  4048c3:	call   4031b0 <malloc@plt>
  4048c8:	mov    r14,rax
  4048cb:	mov    rdi,rax
  4048ce:	call   403950 <init_token_if@@Base>
  4048d3:	jmp    404367 <next@@Base+0x437>
  4048d8:	add    QWORD PTR [rip+0x9ca8],0x1        # 40e588 <__bss_start@@Base+0x40c>
  4048e0:	mov    edi,0x8
  4048e5:	call   4031b0 <malloc@plt>
  4048ea:	mov    r14,rax
  4048ed:	xor    esi,esi
  4048ef:	mov    rdi,rax
  4048f2:	call   403810 <init_token_int_value@@Base>
  4048f7:	jmp    404367 <next@@Base+0x437>
  4048fc:	cmp    bl,0x28
  4048ff:	setne  al
  404902:	add    QWORD PTR [r12+rax*8+0xe8],0x1
  40490b:	cmp    bl,0x28
  40490e:	jne    404932 <next@@Base+0xa02>
  404910:	add    QWORD PTR [rip+0x9cb0],0x1        # 40e5c8 <__bss_start@@Base+0x44c>
  404918:	mov    edi,0x4
  40491d:	call   4031b0 <malloc@plt>
  404922:	mov    r14,rax
  404925:	mov    rdi,rax
  404928:	call   403870 <init_token_opar@@Base>
  40492d:	jmp    404367 <next@@Base+0x437>
  404932:	xor    eax,eax
  404934:	cmp    bl,0x29
  404937:	setne  al
  40493a:	add    QWORD PTR [r12+rax*8+0x100],0x1
  404943:	cmp    bl,0x29
  404946:	jne    4049d4 <next@@Base+0xaa4>
  40494c:	add    QWORD PTR [rip+0x9c8c],0x1        # 40e5e0 <__bss_start@@Base+0x464>
  404954:	mov    edi,0x4
  404959:	call   4031b0 <malloc@plt>
  40495e:	mov    r14,rax
  404961:	mov    rdi,rax
  404964:	call   403890 <init_token_cpar@@Base>
  404969:	jmp    404367 <next@@Base+0x437>
  40496e:	add    QWORD PTR [rip+0x9c82],0x1        # 40e5f8 <__bss_start@@Base+0x47c>
  404976:	mov    edi,0x4
  40497b:	call   4031b0 <malloc@plt>
  404980:	mov    r14,rax
  404983:	mov    rdi,rax
  404986:	call   4038b0 <init_token_obra@@Base>
  40498b:	jmp    404367 <next@@Base+0x437>
  404990:	add    QWORD PTR [rip+0x9c78],0x1        # 40e610 <__bss_start@@Base+0x494>
  404998:	mov    edi,0x4
  40499d:	call   4031b0 <malloc@plt>
  4049a2:	mov    r14,rax
  4049a5:	mov    rdi,rax
  4049a8:	call   4038d0 <init_token_cbra@@Base>
  4049ad:	jmp    404367 <next@@Base+0x437>
  4049b2:	add    QWORD PTR [rip+0x9c6e],0x1        # 40e628 <__bss_start@@Base+0x4ac>
  4049ba:	mov    edi,0x4
  4049bf:	call   4031b0 <malloc@plt>
  4049c4:	mov    r14,rax
  4049c7:	mov    rdi,rax
  4049ca:	call   403910 <init_token_semicolon@@Base>
  4049cf:	jmp    404367 <next@@Base+0x437>
  4049d4:	add    QWORD PTR [rip+0x9c14],0x1        # 40e5f0 <__bss_start@@Base+0x474>
  4049dc:	add    QWORD PTR [rip+0x9c24],0x1        # 40e608 <__bss_start@@Base+0x48c>
  4049e4:	add    QWORD PTR [rip+0x9c34],0x1        # 40e620 <__bss_start@@Base+0x4a4>
  4049ec:	add    QWORD PTR [rip+0x9c44],0x1        # 40e638 <__bss_start@@Base+0x4bc>
  4049f4:	add    QWORD PTR [rip+0x9c54],0x1        # 40e650 <__bss_start@@Base+0x4d4>
  4049fc:	add    QWORD PTR [rip+0x9c64],0x1        # 40e668 <__bss_start@@Base+0x4ec>
  404a04:	add    QWORD PTR [rip+0x9c74],0x1        # 40e680 <__bss_start@@Base+0x504>
  404a0c:	xor    eax,eax
  404a0e:	cmp    bl,0x21
  404a11:	setne  al
  404a14:	add    QWORD PTR [r12+rax*8+0x1c0],0x1
  404a1d:	cmp    bl,0x21
  404a20:	jne    404af5 <next@@Base+0xbc5>
  404a26:	movsxd rax,ecx
  404a29:	vmovdqa xmm0,XMMWORD PTR [rip+0x9a5f]        # 40e490 <__bss_start@@Base+0x314>
  404a31:	vpcmpeqd xmm1,xmm1,xmm1
  404a35:	vpsubq xmm0,xmm0,xmm1
  404a39:	vmovdqa XMMWORD PTR [rip+0x9a4f],xmm0        # 40e490 <__bss_start@@Base+0x314>
  404a41:	mov    BYTE PTR [rsp+rax*1+0x10],0x21
  404a46:	mov    rax,QWORD PTR [r15]
  404a49:	mov    rcx,QWORD PTR [r15+0x10]
  404a4d:	lea    rdx,[rcx+0x1]
  404a51:	mov    QWORD PTR [r15+0x10],rdx
  404a55:	mov    bl,BYTE PTR [rax+rcx*1]
  404a58:	mov    edi,0x10
  404a5d:	call   4031b0 <malloc@plt>
  404a62:	mov    r14,rax
  404a65:	xor    eax,eax
  404a67:	cmp    bl,0x3d
  404a6a:	sete   al
  404a6d:	add    QWORD PTR [r12+rax*8+0x1d0],0x1
  404a76:	cmp    bl,0x3d
  404a79:	je     404bab <next@@Base+0xc7b>
  404a7f:	add    QWORD PTR [rip+0x9c29],0x1        # 40e6b0 <__bss_start@@Base+0x534>
  404a87:	vmovdqa xmm0,XMMWORD PTR [rip+0x9a31]        # 40e4c0 <__bss_start@@Base+0x344>
  404a8f:	vpsubq xmm0,xmm0,XMMWORD PTR [rip+0x4999]        # 409430 <_IO_stdin_used@@Base+0x430>
  404a97:	vmovdqa XMMWORD PTR [rip+0x9a21],xmm0        # 40e4c0 <__bss_start@@Base+0x344>
  404a9f:	lea    rcx,[rip+0x99fa]        # 40e4a0 <__bss_start@@Base+0x324>
  404aa6:	add    QWORD PTR [rip+0x99f2],0x1        # 40e4a0 <__bss_start@@Base+0x324>
  404aae:	mov    rax,QWORD PTR [r15+0x10]
  404ab2:	xor    edx,edx
  404ab4:	test   rax,rax
  404ab7:	sete   dl
  404aba:	add    QWORD PTR [rcx+rdx*8+0x8],0x1
  404ac0:	test   rax,rax
  404ac3:	je     404e41 <next@@Base+0xf11>
  404ac9:	add    QWORD PTR [rip+0x99e7],0x1        # 40e4b8 <__bss_start@@Base+0x33c>
  404ad1:	add    rax,0xffffffffffffffff
  404ad5:	mov    QWORD PTR [r15+0x10],rax
  404ad9:	mov    edi,0x2
  404ade:	call   4031b0 <malloc@plt>
  404ae3:	mov    cl,BYTE PTR [rsp+0x10]
  404ae7:	mov    BYTE PTR [rax],cl
  404ae9:	mov    rcx,rax
  404aec:	add    rcx,0x1
  404af0:	jmp    404bce <next@@Base+0xc9e>
  404af5:	add    QWORD PTR [rip+0x9bd3],0x1        # 40e6d0 <__bss_start@@Base+0x554>
  404afd:	add    QWORD PTR [rip+0x9bdb],0x1        # 40e6e0 <__bss_start@@Base+0x564>
  404b05:	add    QWORD PTR [rip+0x9c0b],0x1        # 40e718 <__bss_start@@Base+0x59c>
  404b0d:	add    QWORD PTR [rip+0x9c2b],0x1        # 40e740 <__bss_start@@Base+0x5c4>
  404b15:	xor    eax,eax
  404b17:	cmp    bl,0x26
  404b1a:	setne  al
  404b1d:	add    QWORD PTR [r12+rax*8+0x290],0x1
  404b26:	cmp    bl,0x26
  404b29:	jne    404e89 <next@@Base+0xf59>
  404b2f:	movsxd rax,ecx
  404b32:	vmovdqa xmm0,XMMWORD PTR [rip+0x9956]        # 40e490 <__bss_start@@Base+0x314>
  404b3a:	vpcmpeqd xmm1,xmm1,xmm1
  404b3e:	vpsubq xmm0,xmm0,xmm1
  404b42:	vmovdqa XMMWORD PTR [rip+0x9946],xmm0        # 40e490 <__bss_start@@Base+0x314>
  404b4a:	mov    BYTE PTR [rsp+rax*1+0x10],0x26
  404b4f:	mov    rax,QWORD PTR [r15]
  404b52:	mov    rcx,QWORD PTR [r15+0x10]
  404b56:	lea    rdx,[rcx+0x1]
  404b5a:	mov    QWORD PTR [r15+0x10],rdx
  404b5e:	mov    bl,BYTE PTR [rax+rcx*1]
  404b61:	mov    edi,0x10
  404b66:	call   4031b0 <malloc@plt>
  404b6b:	mov    r14,rax
  404b6e:	xor    eax,eax
  404b70:	cmp    bl,0x26
  404b73:	sete   al
  404b76:	add    QWORD PTR [r12+rax*8+0x2a0],0x1
  404b7f:	cmp    bl,0x26
  404b82:	jne    404e61 <next@@Base+0xf31>
  404b88:	add    QWORD PTR [rip+0x9bf0],0x1        # 40e780 <__bss_start@@Base+0x604>
  404b90:	mov    edi,0x3
  404b95:	call   4031b0 <malloc@plt>
  404b9a:	mov    cl,BYTE PTR [rsp+0x10]
  404b9e:	mov    BYTE PTR [rax],cl
  404ba0:	mov    WORD PTR [rax+0x1],0x26
  404ba6:	jmp    404d0b <next@@Base+0xddb>
  404bab:	add    QWORD PTR [rip+0x9b05],0x1        # 40e6b8 <__bss_start@@Base+0x53c>
  404bb3:	mov    edi,0x3
  404bb8:	call   4031b0 <malloc@plt>
  404bbd:	mov    cl,BYTE PTR [rsp+0x10]
  404bc1:	mov    BYTE PTR [rax],cl
  404bc3:	mov    BYTE PTR [rax+0x1],0x3d
  404bc7:	mov    rcx,rax
  404bca:	add    rcx,0x2
  404bce:	mov    BYTE PTR [rcx],0x0
  404bd1:	add    QWORD PTR [rip+0x9ae7],0x1        # 40e6c0 <__bss_start@@Base+0x544>
  404bd9:	jmp    404d0b <next@@Base+0xddb>
  404bde:	add    QWORD PTR [rip+0x9ab2],0x1        # 40e698 <__bss_start@@Base+0x51c>
  404be6:	xor    eax,eax
  404be8:	cmp    bl,0x3c
  404beb:	setne  al
  404bee:	add    QWORD PTR [r12+rax*8+0x1f8],0x1
  404bf7:	cmp    bl,0x3c
  404bfa:	je     404c16 <next@@Base+0xce6>
  404bfc:	xor    eax,eax
  404bfe:	cmp    bl,0x3e
  404c01:	setne  al
  404c04:	add    QWORD PTR [r12+rax*8+0x208],0x1
  404c0d:	cmp    bl,0x3e
  404c10:	jne    404d1b <next@@Base+0xdeb>
  404c16:	movsxd rax,ecx
  404c19:	vmovdqa xmm0,XMMWORD PTR [rip+0x986f]        # 40e490 <__bss_start@@Base+0x314>
  404c21:	vpcmpeqd xmm1,xmm1,xmm1
  404c25:	vpsubq xmm0,xmm0,xmm1
  404c29:	vmovdqa XMMWORD PTR [rip+0x985f],xmm0        # 40e490 <__bss_start@@Base+0x314>
  404c31:	mov    BYTE PTR [rsp+rax*1+0x10],bl
  404c35:	mov    rax,QWORD PTR [r15]
  404c38:	mov    rcx,QWORD PTR [r15+0x10]
  404c3c:	lea    rdx,[rcx+0x1]
  404c40:	mov    QWORD PTR [r15+0x10],rdx
  404c44:	mov    bl,BYTE PTR [rax+rcx*1]
  404c47:	mov    edi,0x10
  404c4c:	call   4031b0 <malloc@plt>
  404c51:	mov    r14,rax
  404c54:	xor    eax,eax
  404c56:	cmp    bl,0x3d
  404c59:	sete   al
  404c5c:	add    QWORD PTR [r12+rax*8+0x218],0x1
  404c65:	cmp    bl,0x3d
  404c68:	je     404cdd <next@@Base+0xdad>
  404c6a:	add    QWORD PTR [rip+0x9a86],0x1        # 40e6f8 <__bss_start@@Base+0x57c>
  404c72:	vmovdqa xmm0,XMMWORD PTR [rip+0x9846]        # 40e4c0 <__bss_start@@Base+0x344>
  404c7a:	vpsubq xmm0,xmm0,XMMWORD PTR [rip+0x47ae]        # 409430 <_IO_stdin_used@@Base+0x430>
  404c82:	vmovdqa XMMWORD PTR [rip+0x9836],xmm0        # 40e4c0 <__bss_start@@Base+0x344>
  404c8a:	lea    rcx,[rip+0x980f]        # 40e4a0 <__bss_start@@Base+0x324>
  404c91:	add    QWORD PTR [rip+0x9807],0x1        # 40e4a0 <__bss_start@@Base+0x324>
  404c99:	mov    rax,QWORD PTR [r15+0x10]
  404c9d:	xor    edx,edx
  404c9f:	test   rax,rax
  404ca2:	sete   dl
  404ca5:	add    QWORD PTR [rcx+rdx*8+0x8],0x1
  404cab:	test   rax,rax
  404cae:	je     404e41 <next@@Base+0xf11>
  404cb4:	add    QWORD PTR [rip+0x97fc],0x1        # 40e4b8 <__bss_start@@Base+0x33c>
  404cbc:	add    rax,0xffffffffffffffff
  404cc0:	mov    QWORD PTR [r15+0x10],rax
  404cc4:	mov    edi,0x2
  404cc9:	call   4031b0 <malloc@plt>
  404cce:	mov    cl,BYTE PTR [rsp+0x10]
  404cd2:	mov    BYTE PTR [rax],cl
  404cd4:	mov    rcx,rax
  404cd7:	add    rcx,0x1
  404cdb:	jmp    404d00 <next@@Base+0xdd0>
  404cdd:	add    QWORD PTR [rip+0x9a1b],0x1        # 40e700 <__bss_start@@Base+0x584>
  404ce5:	mov    edi,0x3
  404cea:	call   4031b0 <malloc@plt>
  404cef:	mov    cl,BYTE PTR [rsp+0x10]
  404cf3:	mov    BYTE PTR [rax],cl
  404cf5:	mov    BYTE PTR [rax+0x1],0x3d
  404cf9:	mov    rcx,rax
  404cfc:	add    rcx,0x2
  404d00:	mov    BYTE PTR [rcx],0x0
  404d03:	add    QWORD PTR [rip+0x99fd],0x1        # 40e708 <__bss_start@@Base+0x58c>
  404d0b:	mov    rdi,r14
  404d0e:	mov    rsi,rax
  404d11:	call   403990 <init_token_boolean_op@@Base>
  404d16:	jmp    404367 <next@@Base+0x437>
  404d1b:	xor    eax,eax
  404d1d:	cmp    bl,0x3d
  404d20:	setne  al
  404d23:	add    QWORD PTR [r12+rax*8+0x240],0x1
  404d2c:	cmp    bl,0x3d
  404d2f:	jne    404dad <next@@Base+0xe7d>
  404d31:	movsxd rax,ecx
  404d34:	vmovdqa xmm0,XMMWORD PTR [rip+0x9754]        # 40e490 <__bss_start@@Base+0x314>
  404d3c:	vpcmpeqd xmm1,xmm1,xmm1
  404d40:	vpsubq xmm0,xmm0,xmm1
  404d44:	vmovdqa XMMWORD PTR [rip+0x9744],xmm0        # 40e490 <__bss_start@@Base+0x314>
  404d4c:	mov    BYTE PTR [rsp+rax*1+0x10],0x3d
  404d51:	mov    rax,QWORD PTR [r15]
  404d54:	mov    rcx,QWORD PTR [r15+0x10]
  404d58:	lea    rdx,[rcx+0x1]
  404d5c:	mov    QWORD PTR [r15+0x10],rdx
  404d60:	mov    bl,BYTE PTR [rax+rcx*1]
  404d63:	mov    edi,0x10
  404d68:	call   4031b0 <malloc@plt>
  404d6d:	mov    r14,rax
  404d70:	xor    eax,eax
  404d72:	cmp    bl,0x3d
  404d75:	sete   al
  404d78:	add    QWORD PTR [r12+rax*8+0x250],0x1
  404d81:	cmp    bl,0x3d
  404d84:	jne    404e61 <next@@Base+0xf31>
  404d8a:	add    QWORD PTR [rip+0x999e],0x1        # 40e730 <__bss_start@@Base+0x5b4>
  404d92:	mov    edi,0x3
  404d97:	call   4031b0 <malloc@plt>
  404d9c:	mov    cl,BYTE PTR [rsp+0x10]
  404da0:	mov    BYTE PTR [rax],cl
  404da2:	mov    WORD PTR [rax+0x1],0x3d
  404da8:	jmp    404d0b <next@@Base+0xddb>
  404dad:	xor    eax,eax
  404daf:	cmp    bl,0x7c
  404db2:	setne  al
  404db5:	add    QWORD PTR [r12+rax*8+0x268],0x1
  404dbe:	cmp    bl,0x7c
  404dc1:	jne    404e81 <next@@Base+0xf51>
  404dc7:	movsxd rax,DWORD PTR [rsp+0xc]
  404dcc:	vmovdqa xmm0,XMMWORD PTR [rip+0x96bc]        # 40e490 <__bss_start@@Base+0x314>
  404dd4:	vpcmpeqd xmm1,xmm1,xmm1
  404dd8:	vpsubq xmm0,xmm0,xmm1
  404ddc:	vmovdqa XMMWORD PTR [rip+0x96ac],xmm0        # 40e490 <__bss_start@@Base+0x314>
  404de4:	mov    BYTE PTR [rsp+rax*1+0x10],0x7c
  404de9:	mov    rax,QWORD PTR [r15]
  404dec:	mov    rcx,QWORD PTR [r15+0x10]
  404df0:	lea    rdx,[rcx+0x1]
  404df4:	mov    QWORD PTR [r15+0x10],rdx
  404df8:	mov    bl,BYTE PTR [rax+rcx*1]
  404dfb:	mov    edi,0x10
  404e00:	call   4031b0 <malloc@plt>
  404e05:	mov    r14,rax
  404e08:	xor    eax,eax
  404e0a:	cmp    bl,0x7c
  404e0d:	sete   al
  404e10:	add    QWORD PTR [r12+rax*8+0x278],0x1
  404e19:	cmp    bl,0x7c
  404e1c:	jne    404e61 <next@@Base+0xf31>
  404e1e:	add    QWORD PTR [rip+0x9932],0x1        # 40e758 <__bss_start@@Base+0x5dc>
  404e26:	mov    edi,0x3
  404e2b:	call   4031b0 <malloc@plt>
  404e30:	mov    cl,BYTE PTR [rsp+0x10]
  404e34:	mov    BYTE PTR [rax],cl
  404e36:	mov    WORD PTR [rax+0x1],0x7c
  404e3c:	jmp    404d0b <next@@Base+0xddb>
  404e41:	mov    rax,QWORD PTR [rip+0x91a8]        # 40dff0 <stderr@GLIBC_2.2.5>
  404e48:	mov    rcx,QWORD PTR [rax]
  404e4b:	lea    rdi,[rip+0x4616]        # 409468 <_IO_stdin_used@@Base+0x468>
  404e52:	mov    esi,0x20
  404e57:	mov    edx,0x1
  404e5c:	call   403260 <fwrite@plt>
  404e61:	mov    edi,0x1
  404e66:	call   403250 <exit@plt>
  404e6b:	lea    rdi,[rip+0x851e]        # 40d390 <_IO_stdin_used@@Base+0x4390>
  404e72:	call   404eb0 <next@@Base+0xf80>
  404e77:	mov    edi,0x1
  404e7c:	call   403250 <exit@plt>
  404e81:	add    QWORD PTR [rip+0x98df],0x1        # 40e768 <__bss_start@@Base+0x5ec>
  404e89:	movsx  edx,bl
  404e8c:	mov    rax,QWORD PTR [rip+0x915d]        # 40dff0 <stderr@GLIBC_2.2.5>
  404e93:	mov    rdi,QWORD PTR [rax]
  404e96:	lea    rsi,[rip+0x45ec]        # 409489 <_IO_stdin_used@@Base+0x489>
  404e9d:	xor    eax,eax
  404e9f:	call   403160 <fprintf@plt>
  404ea4:	mov    edi,0x1
  404ea9:	call   403250 <exit@plt>
  404eae:	xchg   ax,ax
  404eb0:	mov    eax,DWORD PTR [rip+0x92a2]        # 40e158 <__data_start@@Base+0x10>
  404eb6:	mov    ecx,0xffffffff
  404ebb:	cmp    rax,rcx
  404ebe:	je     404ecd <next@@Base+0xf9d>
  404ec0:	mov    rax,QWORD PTR [rdi+rax*8]
  404ec4:	test   rax,rax
  404ec7:	je     404ecd <next@@Base+0xf9d>
  404ec9:	add    QWORD PTR [rax],0x1
  404ecd:	ret    
  404ece:	xchg   ax,ax
  404ed0:	push   r15
  404ed2:	push   r14
  404ed4:	push   rbx
  404ed5:	lea    rdi,[rip+0x4634]        # 409510 <_IO_stdin_used@@Base+0x510>
  404edc:	lea    rsi,[rip+0x41d4]        # 4090b7 <_IO_stdin_used@@Base+0xb7>
  404ee3:	mov    edx,0xbd3d1f9d
  404ee8:	call   407200 <__generate_code_for_binary_boolean_expression@@Base+0x400>
  404eed:	xor    ebx,ebx
  404eef:	lea    r14,[rip+0x84ca]        # 40d3c0 <_IO_stdin_used@@Base+0x43c0>
  404ef6:	lea    r15,[rip+0x85e3]        # 40d4e0 <_IO_stdin_used@@Base+0x44e0>
  404efd:	nop    DWORD PTR [rax]
  404f00:	mov    edi,DWORD PTR [r14+rbx*2]
  404f04:	mov    rsi,QWORD PTR [r14+rbx*2+0x8]
  404f09:	mov    edx,DWORD PTR [r14+rbx*2+0x10]
  404f0e:	mov    r8d,DWORD PTR [r14+rbx*2+0x18]
  404f13:	mov    ecx,DWORD PTR [r14+rbx*2+0x14]
  404f18:	call   407650 <__generate_code_for_binary_boolean_expression@@Base+0x850>
  404f1d:	mov    edi,DWORD PTR [rbx+r15*1]
  404f21:	mov    rsi,QWORD PTR [rbx+r15*1+0x8]
  404f26:	call   407a80 <__generate_code_for_binary_boolean_expression@@Base+0xc80>
  404f2b:	add    rbx,0x10
  404f2f:	cmp    rbx,0x90
  404f36:	jne    404f00 <next@@Base+0xfd0>
  404f38:	call   407ea0 <__generate_code_for_binary_boolean_expression@@Base+0x10a0>
  404f3d:	pop    rbx
  404f3e:	pop    r14
  404f40:	pop    r15
  404f42:	jmp    408640 <__generate_code_for_binary_boolean_expression@@Base+0x1840>
  404f47:	nop    WORD PTR [rax+rax*1+0x0]
  404f50:	push   rax
  404f51:	call   404ed0 <next@@Base+0xfa0>
  404f56:	vxorps xmm1,xmm1,xmm1
  404f5a:	vmovaps XMMWORD PTR [rip+0x94ce],xmm1        # 40e430 <__bss_start@@Base+0x2b4>
  404f62:	vxorps xmm0,xmm0,xmm0
  404f66:	vmovups YMMWORD PTR [rip+0x94d2],ymm0        # 40e440 <__bss_start@@Base+0x2c4>
  404f6e:	mov    QWORD PTR [rip+0x94e7],0x0        # 40e460 <__bss_start@@Base+0x2e4>
  404f79:	vmovaps XMMWORD PTR [rip+0x94ef],xmm1        # 40e470 <__bss_start@@Base+0x2f4>
  404f81:	vmovaps XMMWORD PTR [rip+0x94f7],xmm1        # 40e480 <__bss_start@@Base+0x304>
  404f89:	vmovaps XMMWORD PTR [rip+0x94ff],xmm1        # 40e490 <__bss_start@@Base+0x314>
  404f91:	vmovups YMMWORD PTR [rip+0x9507],ymm0        # 40e4a0 <__bss_start@@Base+0x324>
  404f99:	vmovaps XMMWORD PTR [rip+0x951f],xmm1        # 40e4c0 <__bss_start@@Base+0x344>
  404fa1:	lea    rdi,[rip+0x9528]        # 40e4d0 <__bss_start@@Base+0x354>
  404fa8:	xor    esi,esi
  404faa:	mov    edx,0x3f0
  404faf:	vzeroupper 
  404fb2:	call   403130 <memset@plt>
  404fb7:	vxorps xmm0,xmm0,xmm0
  404fbb:	vmovaps XMMWORD PTR [rip+0x98fd],xmm0        # 40e8c0 <__bss_start@@Base+0x744>
  404fc3:	pop    rax
  404fc4:	ret    
  404fc5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404fcf:	nop
  404fd0:	lea    rdi,[rip+0xfffffffffffffef9]        # 404ed0 <next@@Base+0xfa0>
  404fd7:	lea    rsi,[rip+0xffffffffffffff72]        # 404f50 <next@@Base+0x1020>
  404fde:	jmp    408a00 <__gcov_flush@@Base+0xa0>
  404fe3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404fed:	nop    DWORD PTR [rax]

0000000000404ff0 <init_ast_base@@Base>:
  404ff0:	vmovdqa xmm0,XMMWORD PTR [rip+0x98d8]        # 40e8d0 <__bss_start@@Base+0x754>
  404ff8:	vpcmpeqd xmm1,xmm1,xmm1
  404ffc:	vpsubq xmm0,xmm0,xmm1
  405000:	vmovdqa XMMWORD PTR [rip+0x98c8],xmm0        # 40e8d0 <__bss_start@@Base+0x754>
  405008:	mov    DWORD PTR [rdi],esi
  40500a:	mov    QWORD PTR [rdi+0x8],rdx
  40500e:	ret    
  40500f:	nop

0000000000405010 <init_ast_base_single@@Base>:
  405010:	vmovdqa xmm0,XMMWORD PTR [rip+0x98c8]        # 40e8e0 <__bss_start@@Base+0x764>
  405018:	vpcmpeqd xmm1,xmm1,xmm1
  40501c:	vpsubq xmm0,xmm0,xmm1
  405020:	vmovdqa XMMWORD PTR [rip+0x98b8],xmm0        # 40e8e0 <__bss_start@@Base+0x764>
  405028:	vmovdqa xmm0,XMMWORD PTR [rip+0x98a0]        # 40e8d0 <__bss_start@@Base+0x754>
  405030:	vpsubq xmm0,xmm0,xmm1
  405034:	vmovdqa XMMWORD PTR [rip+0x9894],xmm0        # 40e8d0 <__bss_start@@Base+0x754>
  40503c:	mov    DWORD PTR [rdi],esi
  40503e:	mov    QWORD PTR [rdi+0x8],0x0
  405046:	ret    
  405047:	nop    WORD PTR [rax+rax*1+0x0]

0000000000405050 <init_node_id@@Base>:
  405050:	vmovdqa xmm0,XMMWORD PTR [rip+0x9898]        # 40e8f0 <__bss_start@@Base+0x774>
  405058:	vpcmpeqd xmm1,xmm1,xmm1
  40505c:	vpsubq xmm0,xmm0,xmm1
  405060:	vmovdqa XMMWORD PTR [rip+0x9888],xmm0        # 40e8f0 <__bss_start@@Base+0x774>
  405068:	vmovdqa xmm0,XMMWORD PTR [rip+0x9870]        # 40e8e0 <__bss_start@@Base+0x764>
  405070:	vpsubq xmm0,xmm0,xmm1
  405074:	vmovdqa XMMWORD PTR [rip+0x9864],xmm0        # 40e8e0 <__bss_start@@Base+0x764>
  40507c:	vmovdqa xmm0,XMMWORD PTR [rip+0x984c]        # 40e8d0 <__bss_start@@Base+0x754>
  405084:	vpsubq xmm0,xmm0,xmm1
  405088:	vmovdqa XMMWORD PTR [rip+0x9840],xmm0        # 40e8d0 <__bss_start@@Base+0x754>
  405090:	mov    DWORD PTR [rdi],0x0
  405096:	mov    QWORD PTR [rdi+0x8],0x0
  40509e:	mov    QWORD PTR [rdi+0x10],rsi
  4050a2:	ret    
  4050a3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4050ad:	nop    DWORD PTR [rax]

00000000004050b0 <init_node_int@@Base>:
  4050b0:	vmovdqa xmm0,XMMWORD PTR [rip+0x9848]        # 40e900 <__bss_start@@Base+0x784>
  4050b8:	vpcmpeqd xmm1,xmm1,xmm1
  4050bc:	vpsubq xmm0,xmm0,xmm1
  4050c0:	vmovdqa XMMWORD PTR [rip+0x9838],xmm0        # 40e900 <__bss_start@@Base+0x784>
  4050c8:	vmovdqa xmm0,XMMWORD PTR [rip+0x9810]        # 40e8e0 <__bss_start@@Base+0x764>
  4050d0:	vpsubq xmm0,xmm0,xmm1
  4050d4:	vmovdqa XMMWORD PTR [rip+0x9804],xmm0        # 40e8e0 <__bss_start@@Base+0x764>
  4050dc:	vmovdqa xmm0,XMMWORD PTR [rip+0x97ec]        # 40e8d0 <__bss_start@@Base+0x754>
  4050e4:	vpsubq xmm0,xmm0,xmm1
  4050e8:	vmovdqa XMMWORD PTR [rip+0x97e0],xmm0        # 40e8d0 <__bss_start@@Base+0x754>
  4050f0:	mov    DWORD PTR [rdi],0x1
  4050f6:	mov    QWORD PTR [rdi+0x8],0x0
  4050fe:	mov    DWORD PTR [rdi+0x10],esi
  405101:	ret    
  405102:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40510c:	nop    DWORD PTR [rax+0x0]

0000000000405110 <init_node_function@@Base>:
  405110:	vmovdqa xmm0,XMMWORD PTR [rip+0x97f8]        # 40e910 <__bss_start@@Base+0x794>
  405118:	vpcmpeqd xmm1,xmm1,xmm1
  40511c:	vpsubq xmm0,xmm0,xmm1
  405120:	vmovdqa XMMWORD PTR [rip+0x97e8],xmm0        # 40e910 <__bss_start@@Base+0x794>
  405128:	vmovdqa xmm0,XMMWORD PTR [rip+0x97b0]        # 40e8e0 <__bss_start@@Base+0x764>
  405130:	vpsubq xmm0,xmm0,xmm1
  405134:	vmovdqa XMMWORD PTR [rip+0x97a4],xmm0        # 40e8e0 <__bss_start@@Base+0x764>
  40513c:	vmovdqa xmm0,XMMWORD PTR [rip+0x978c]        # 40e8d0 <__bss_start@@Base+0x754>
  405144:	vpsubq xmm0,xmm0,xmm1
  405148:	vmovdqa XMMWORD PTR [rip+0x9780],xmm0        # 40e8d0 <__bss_start@@Base+0x754>
  405150:	mov    DWORD PTR [rdi],0x2
  405156:	mov    QWORD PTR [rdi+0x8],0x0
  40515e:	mov    QWORD PTR [rdi+0x10],rsi
  405162:	mov    QWORD PTR [rdi+0x18],rdx
  405166:	ret    
  405167:	nop    WORD PTR [rax+rax*1+0x0]

0000000000405170 <init_node_return@@Base>:
  405170:	vmovdqa xmm0,XMMWORD PTR [rip+0x97a8]        # 40e920 <__bss_start@@Base+0x7a4>
  405178:	vpcmpeqd xmm1,xmm1,xmm1
  40517c:	vpsubq xmm0,xmm0,xmm1
  405180:	vmovdqa XMMWORD PTR [rip+0x9798],xmm0        # 40e920 <__bss_start@@Base+0x7a4>
  405188:	vmovdqa xmm0,XMMWORD PTR [rip+0x9750]        # 40e8e0 <__bss_start@@Base+0x764>
  405190:	vpsubq xmm0,xmm0,xmm1
  405194:	vmovdqa XMMWORD PTR [rip+0x9744],xmm0        # 40e8e0 <__bss_start@@Base+0x764>
  40519c:	vmovdqa xmm0,XMMWORD PTR [rip+0x972c]        # 40e8d0 <__bss_start@@Base+0x754>
  4051a4:	vpsubq xmm0,xmm0,xmm1
  4051a8:	vmovdqa XMMWORD PTR [rip+0x9720],xmm0        # 40e8d0 <__bss_start@@Base+0x754>
  4051b0:	mov    DWORD PTR [rdi],0x3
  4051b6:	mov    QWORD PTR [rdi+0x8],0x0
  4051be:	mov    QWORD PTR [rdi+0x10],rsi
  4051c2:	ret    
  4051c3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4051cd:	nop    DWORD PTR [rax]

00000000004051d0 <init_node_if@@Base>:
  4051d0:	vmovdqa xmm0,XMMWORD PTR [rip+0x9758]        # 40e930 <__bss_start@@Base+0x7b4>
  4051d8:	vpcmpeqd xmm1,xmm1,xmm1
  4051dc:	vpsubq xmm0,xmm0,xmm1
  4051e0:	vmovdqa XMMWORD PTR [rip+0x9748],xmm0        # 40e930 <__bss_start@@Base+0x7b4>
  4051e8:	vmovdqa xmm0,XMMWORD PTR [rip+0x96f0]        # 40e8e0 <__bss_start@@Base+0x764>
  4051f0:	vpsubq xmm0,xmm0,xmm1
  4051f4:	vmovdqa XMMWORD PTR [rip+0x96e4],xmm0        # 40e8e0 <__bss_start@@Base+0x764>
  4051fc:	vmovdqa xmm0,XMMWORD PTR [rip+0x96cc]        # 40e8d0 <__bss_start@@Base+0x754>
  405204:	vpsubq xmm0,xmm0,xmm1
  405208:	vmovdqa XMMWORD PTR [rip+0x96c0],xmm0        # 40e8d0 <__bss_start@@Base+0x754>
  405210:	mov    DWORD PTR [rdi],0x4
  405216:	mov    QWORD PTR [rdi+0x8],0x0
  40521e:	mov    QWORD PTR [rdi+0x10],rsi
  405222:	mov    QWORD PTR [rdi+0x18],rdx
  405226:	mov    QWORD PTR [rdi+0x20],rcx
  40522a:	ret    
  40522b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405230 <init_node_boolean_operator@@Base>:
  405230:	vmovdqa xmm0,XMMWORD PTR [rip+0x9708]        # 40e940 <__bss_start@@Base+0x7c4>
  405238:	vpcmpeqd xmm1,xmm1,xmm1
  40523c:	vpsubq xmm0,xmm0,xmm1
  405240:	vmovdqa XMMWORD PTR [rip+0x96f8],xmm0        # 40e940 <__bss_start@@Base+0x7c4>
  405248:	vmovdqa xmm0,XMMWORD PTR [rip+0x9690]        # 40e8e0 <__bss_start@@Base+0x764>
  405250:	vpsubq xmm0,xmm0,xmm1
  405254:	vmovdqa XMMWORD PTR [rip+0x9684],xmm0        # 40e8e0 <__bss_start@@Base+0x764>
  40525c:	vmovdqa xmm0,XMMWORD PTR [rip+0x966c]        # 40e8d0 <__bss_start@@Base+0x754>
  405264:	vpsubq xmm0,xmm0,xmm1
  405268:	vmovdqa XMMWORD PTR [rip+0x9660],xmm0        # 40e8d0 <__bss_start@@Base+0x754>
  405270:	mov    QWORD PTR [rdi+0x8],0x0
  405278:	mov    DWORD PTR [rdi],0x5
  40527e:	mov    DWORD PTR [rdi+0x20],esi
  405281:	mov    QWORD PTR [rdi+0x10],rdx
  405285:	mov    QWORD PTR [rdi+0x18],rcx
  405289:	ret    
  40528a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000405290 <free_node@@Base>:
  405290:	push   rbx
  405291:	add    QWORD PTR [rip+0x96b7],0x1        # 40e950 <__bss_start@@Base+0x7d4>
  405299:	mov    DWORD PTR [rip+0x8eb9],0x0        # 40e15c <__data_start@@Base+0x14>
  4052a3:	mov    eax,DWORD PTR [rdi]
  4052a5:	cmp    rax,0x5
  4052a9:	ja     4054d6 <free_node@@Base+0x246>
  4052af:	mov    rbx,rdi
  4052b2:	lea    rcx,[rip+0x42db]        # 409594 <_IO_stdin_used@@Base+0x594>
  4052b9:	movsxd rax,DWORD PTR [rcx+rax*4]
  4052bd:	add    rax,rcx
  4052c0:	jmp    rax
  4052c2:	lea    rdi,[rip+0x8e93]        # 40e15c <__data_start@@Base+0x14>
  4052c9:	lea    rsi,[rip+0x82a8]        # 40d578 <_IO_stdin_used@@Base+0x4578>
  4052d0:	call   405990 <get_boolean_op_value@@Base+0x250>
  4052d5:	add    QWORD PTR [rip+0x96b3],0x1        # 40e990 <__bss_start@@Base+0x814>
  4052dd:	lea    rax,[rip+0x96ec]        # 40e9d0 <__bss_start@@Base+0x854>
  4052e4:	add    QWORD PTR [rip+0x96e4],0x1        # 40e9d0 <__bss_start@@Base+0x854>
  4052ec:	mov    rdi,QWORD PTR [rbx+0x8]
  4052f0:	xor    ecx,ecx
  4052f2:	test   rdi,rdi
  4052f5:	sete   cl
  4052f8:	add    QWORD PTR [rax+rcx*8+0x8],0x1
  4052fe:	test   rdi,rdi
  405301:	je     405310 <free_node@@Base+0x80>
  405303:	add    QWORD PTR [rip+0x96dd],0x1        # 40e9e8 <__bss_start@@Base+0x86c>
  40530b:	call   405290 <free_node@@Base>
  405310:	add    QWORD PTR [rip+0x96d8],0x1        # 40e9f0 <__bss_start@@Base+0x874>
  405318:	jmp    4054c4 <free_node@@Base+0x234>
  40531d:	lea    rdi,[rip+0x8e38]        # 40e15c <__data_start@@Base+0x14>
  405324:	lea    rsi,[rip+0x826d]        # 40d598 <_IO_stdin_used@@Base+0x4598>
  40532b:	call   405990 <get_boolean_op_value@@Base+0x250>
  405330:	add    QWORD PTR [rip+0x9678],0x1        # 40e9b0 <__bss_start@@Base+0x834>
  405338:	mov    rdi,rbx
  40533b:	call   405670 <free_node_if@@Base>
  405340:	jmp    4054cc <free_node@@Base+0x23c>
  405345:	lea    rdi,[rip+0x8e10]        # 40e15c <__data_start@@Base+0x14>
  40534c:	lea    rsi,[rip+0x8235]        # 40d588 <_IO_stdin_used@@Base+0x4588>
  405353:	call   405990 <get_boolean_op_value@@Base+0x250>
  405358:	add    QWORD PTR [rip+0x9640],0x1        # 40e9a0 <__bss_start@@Base+0x824>
  405360:	lea    rax,[rip+0x96c9]        # 40ea30 <__bss_start@@Base+0x8b4>
  405367:	add    QWORD PTR [rip+0x96c1],0x1        # 40ea30 <__bss_start@@Base+0x8b4>
  40536f:	mov    rdi,QWORD PTR [rbx+0x8]
  405373:	xor    ecx,ecx
  405375:	test   rdi,rdi
  405378:	sete   cl
  40537b:	add    QWORD PTR [rax+rcx*8+0x8],0x1
  405381:	test   rdi,rdi
  405384:	je     405393 <free_node@@Base+0x103>
  405386:	add    QWORD PTR [rip+0x96ba],0x1        # 40ea48 <__bss_start@@Base+0x8cc>
  40538e:	call   405290 <free_node@@Base>
  405393:	add    QWORD PTR [rip+0x96b5],0x1        # 40ea50 <__bss_start@@Base+0x8d4>
  40539b:	mov    rdi,QWORD PTR [rbx+0x10]
  40539f:	call   403040 <free@plt>
  4053a4:	jmp    4054c4 <free_node@@Base+0x234>
  4053a9:	lea    rdi,[rip+0x8dac]        # 40e15c <__data_start@@Base+0x14>
  4053b0:	lea    rsi,[rip+0x81c9]        # 40d580 <_IO_stdin_used@@Base+0x4580>
  4053b7:	call   405990 <get_boolean_op_value@@Base+0x250>
  4053bc:	add    QWORD PTR [rip+0x95d4],0x1        # 40e998 <__bss_start@@Base+0x81c>
  4053c4:	lea    rax,[rip+0x9635]        # 40ea00 <__bss_start@@Base+0x884>
  4053cb:	add    QWORD PTR [rip+0x962d],0x1        # 40ea00 <__bss_start@@Base+0x884>
  4053d3:	mov    rdi,QWORD PTR [rbx+0x8]
  4053d7:	xor    ecx,ecx
  4053d9:	test   rdi,rdi
  4053dc:	sete   cl
  4053df:	add    QWORD PTR [rax+rcx*8+0x8],0x1
  4053e5:	test   rdi,rdi
  4053e8:	je     4053f7 <free_node@@Base+0x167>
  4053ea:	add    QWORD PTR [rip+0x9626],0x1        # 40ea18 <__bss_start@@Base+0x89c>
  4053f2:	call   405290 <free_node@@Base>
  4053f7:	add    QWORD PTR [rip+0x9621],0x1        # 40ea20 <__bss_start@@Base+0x8a4>
  4053ff:	jmp    4054c4 <free_node@@Base+0x234>
  405404:	lea    rdi,[rip+0x8d51]        # 40e15c <__data_start@@Base+0x14>
  40540b:	lea    rsi,[rip+0x817e]        # 40d590 <_IO_stdin_used@@Base+0x4590>
  405412:	call   405990 <get_boolean_op_value@@Base+0x250>
  405417:	add    QWORD PTR [rip+0x9589],0x1        # 40e9a8 <__bss_start@@Base+0x82c>
  40541f:	lea    rax,[rip+0x963a]        # 40ea60 <__bss_start@@Base+0x8e4>
  405426:	add    QWORD PTR [rip+0x9632],0x1        # 40ea60 <__bss_start@@Base+0x8e4>
  40542e:	mov    rdi,QWORD PTR [rbx+0x8]
  405432:	xor    ecx,ecx
  405434:	test   rdi,rdi
  405437:	sete   cl
  40543a:	add    QWORD PTR [rax+rcx*8+0x8],0x1
  405440:	test   rdi,rdi
  405443:	je     405452 <free_node@@Base+0x1c2>
  405445:	add    QWORD PTR [rip+0x962b],0x1        # 40ea78 <__bss_start@@Base+0x8fc>
  40544d:	call   405290 <free_node@@Base>
  405452:	add    QWORD PTR [rip+0x9626],0x1        # 40ea80 <__bss_start@@Base+0x904>
  40545a:	jmp    4054c4 <free_node@@Base+0x234>
  40545c:	lea    rdi,[rip+0x8cf9]        # 40e15c <__data_start@@Base+0x14>
  405463:	lea    rsi,[rip+0x8136]        # 40d5a0 <_IO_stdin_used@@Base+0x45a0>
  40546a:	call   405990 <get_boolean_op_value@@Base+0x250>
  40546f:	add    QWORD PTR [rip+0x9541],0x1        # 40e9b8 <__bss_start@@Base+0x83c>
  405477:	lea    rax,[rip+0x9642]        # 40eac0 <__bss_start@@Base+0x944>
  40547e:	add    QWORD PTR [rip+0x963a],0x1        # 40eac0 <__bss_start@@Base+0x944>
  405486:	mov    rdi,QWORD PTR [rbx+0x8]
  40548a:	xor    ecx,ecx
  40548c:	test   rdi,rdi
  40548f:	sete   cl
  405492:	add    QWORD PTR [rax+rcx*8+0x8],0x1
  405498:	test   rdi,rdi
  40549b:	je     4054aa <free_node@@Base+0x21a>
  40549d:	add    QWORD PTR [rip+0x9633],0x1        # 40ead8 <__bss_start@@Base+0x95c>
  4054a5:	call   405290 <free_node@@Base>
  4054aa:	add    QWORD PTR [rip+0x962e],0x1        # 40eae0 <__bss_start@@Base+0x964>
  4054b2:	mov    rdi,QWORD PTR [rbx+0x10]
  4054b6:	call   405290 <free_node@@Base>
  4054bb:	mov    rdi,QWORD PTR [rbx+0x18]
  4054bf:	call   405290 <free_node@@Base>
  4054c4:	mov    rdi,rbx
  4054c7:	call   403040 <free@plt>
  4054cc:	add    QWORD PTR [rip+0x94ec],0x1        # 40e9c0 <__bss_start@@Base+0x844>
  4054d4:	pop    rbx
  4054d5:	ret    
  4054d6:	lea    rdi,[rip+0x8c7f]        # 40e15c <__data_start@@Base+0x14>
  4054dd:	lea    rsi,[rip+0x808c]        # 40d570 <_IO_stdin_used@@Base+0x4570>
  4054e4:	call   405990 <get_boolean_op_value@@Base+0x250>
  4054e9:	mov    rax,QWORD PTR [rip+0x8b00]        # 40dff0 <stderr@GLIBC_2.2.5>
  4054f0:	mov    rcx,QWORD PTR [rax]
  4054f3:	lea    rdi,[rip+0x40b2]        # 4095ac <_IO_stdin_used@@Base+0x5ac>
  4054fa:	mov    esi,0x1f
  4054ff:	mov    edx,0x1
  405504:	call   403260 <fwrite@plt>
  405509:	mov    edi,0x1
  40550e:	call   403250 <exit@plt>
  405513:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40551d:	nop    DWORD PTR [rax]

0000000000405520 <free_node_id@@Base>:
  405520:	push   rbx
  405521:	mov    rbx,rdi
  405524:	lea    rax,[rip+0x94a5]        # 40e9d0 <__bss_start@@Base+0x854>
  40552b:	add    QWORD PTR [rip+0x949d],0x1        # 40e9d0 <__bss_start@@Base+0x854>
  405533:	mov    rdi,QWORD PTR [rdi+0x8]
  405537:	xor    ecx,ecx
  405539:	test   rdi,rdi
  40553c:	sete   cl
  40553f:	add    QWORD PTR [rax+rcx*8+0x8],0x1
  405545:	test   rdi,rdi
  405548:	je     405557 <free_node_id@@Base+0x37>
  40554a:	add    QWORD PTR [rip+0x9496],0x1        # 40e9e8 <__bss_start@@Base+0x86c>
  405552:	call   405290 <free_node@@Base>
  405557:	add    QWORD PTR [rip+0x9491],0x1        # 40e9f0 <__bss_start@@Base+0x874>
  40555f:	mov    rdi,rbx
  405562:	pop    rbx
  405563:	jmp    403040 <free@plt>
  405568:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405570 <free_node_int@@Base>:
  405570:	push   rbx
  405571:	mov    rbx,rdi
  405574:	lea    rax,[rip+0x9485]        # 40ea00 <__bss_start@@Base+0x884>
  40557b:	add    QWORD PTR [rip+0x947d],0x1        # 40ea00 <__bss_start@@Base+0x884>
  405583:	mov    rdi,QWORD PTR [rdi+0x8]
  405587:	xor    ecx,ecx
  405589:	test   rdi,rdi
  40558c:	sete   cl
  40558f:	add    QWORD PTR [rax+rcx*8+0x8],0x1
  405595:	test   rdi,rdi
  405598:	je     4055a7 <free_node_int@@Base+0x37>
  40559a:	add    QWORD PTR [rip+0x9476],0x1        # 40ea18 <__bss_start@@Base+0x89c>
  4055a2:	call   405290 <free_node@@Base>
  4055a7:	add    QWORD PTR [rip+0x9471],0x1        # 40ea20 <__bss_start@@Base+0x8a4>
  4055af:	mov    rdi,rbx
  4055b2:	pop    rbx
  4055b3:	jmp    403040 <free@plt>
  4055b8:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004055c0 <free_node_function@@Base>:
  4055c0:	push   rbx
  4055c1:	mov    rbx,rdi
  4055c4:	lea    rax,[rip+0x9465]        # 40ea30 <__bss_start@@Base+0x8b4>
  4055cb:	add    QWORD PTR [rip+0x945d],0x1        # 40ea30 <__bss_start@@Base+0x8b4>
  4055d3:	mov    rdi,QWORD PTR [rdi+0x8]
  4055d7:	xor    ecx,ecx
  4055d9:	test   rdi,rdi
  4055dc:	sete   cl
  4055df:	add    QWORD PTR [rax+rcx*8+0x8],0x1
  4055e5:	test   rdi,rdi
  4055e8:	je     4055f7 <free_node_function@@Base+0x37>
  4055ea:	add    QWORD PTR [rip+0x9456],0x1        # 40ea48 <__bss_start@@Base+0x8cc>
  4055f2:	call   405290 <free_node@@Base>
  4055f7:	add    QWORD PTR [rip+0x9451],0x1        # 40ea50 <__bss_start@@Base+0x8d4>
  4055ff:	mov    rdi,QWORD PTR [rbx+0x10]
  405603:	call   403040 <free@plt>
  405608:	mov    rdi,rbx
  40560b:	pop    rbx
  40560c:	jmp    403040 <free@plt>
  405611:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40561b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405620 <free_node_return@@Base>:
  405620:	push   rbx
  405621:	mov    rbx,rdi
  405624:	lea    rax,[rip+0x9435]        # 40ea60 <__bss_start@@Base+0x8e4>
  40562b:	add    QWORD PTR [rip+0x942d],0x1        # 40ea60 <__bss_start@@Base+0x8e4>
  405633:	mov    rdi,QWORD PTR [rdi+0x8]
  405637:	xor    ecx,ecx
  405639:	test   rdi,rdi
  40563c:	sete   cl
  40563f:	add    QWORD PTR [rax+rcx*8+0x8],0x1
  405645:	test   rdi,rdi
  405648:	je     405657 <free_node_return@@Base+0x37>
  40564a:	add    QWORD PTR [rip+0x9426],0x1        # 40ea78 <__bss_start@@Base+0x8fc>
  405652:	call   405290 <free_node@@Base>
  405657:	add    QWORD PTR [rip+0x9421],0x1        # 40ea80 <__bss_start@@Base+0x904>
  40565f:	mov    rdi,rbx
  405662:	pop    rbx
  405663:	jmp    403040 <free@plt>
  405668:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405670 <free_node_if@@Base>:
  405670:	push   rbx
  405671:	mov    rbx,rdi
  405674:	lea    rax,[rip+0x9415]        # 40ea90 <__bss_start@@Base+0x914>
  40567b:	add    QWORD PTR [rip+0x940d],0x1        # 40ea90 <__bss_start@@Base+0x914>
  405683:	mov    rdi,QWORD PTR [rdi+0x8]
  405687:	xor    ecx,ecx
  405689:	test   rdi,rdi
  40568c:	sete   cl
  40568f:	add    QWORD PTR [rax+rcx*8+0x8],0x1
  405695:	test   rdi,rdi
  405698:	je     4056a7 <free_node_if@@Base+0x37>
  40569a:	add    QWORD PTR [rip+0x9406],0x1        # 40eaa8 <__bss_start@@Base+0x92c>
  4056a2:	call   405290 <free_node@@Base>
  4056a7:	add    QWORD PTR [rip+0x9401],0x1        # 40eab0 <__bss_start@@Base+0x934>
  4056af:	mov    rdi,QWORD PTR [rbx+0x10]
  4056b3:	call   405290 <free_node@@Base>
  4056b8:	mov    rdi,QWORD PTR [rbx+0x18]
  4056bc:	call   405290 <free_node@@Base>
  4056c1:	mov    rdi,QWORD PTR [rbx+0x20]
  4056c5:	call   405290 <free_node@@Base>
  4056ca:	mov    rdi,rbx
  4056cd:	pop    rbx
  4056ce:	jmp    403040 <free@plt>
  4056d3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4056dd:	nop    DWORD PTR [rax]

00000000004056e0 <free_node_boolean_operator@@Base>:
  4056e0:	push   rbx
  4056e1:	mov    rbx,rdi
  4056e4:	lea    rax,[rip+0x93d5]        # 40eac0 <__bss_start@@Base+0x944>
  4056eb:	add    QWORD PTR [rip+0x93cd],0x1        # 40eac0 <__bss_start@@Base+0x944>
  4056f3:	mov    rdi,QWORD PTR [rdi+0x8]
  4056f7:	xor    ecx,ecx
  4056f9:	test   rdi,rdi
  4056fc:	sete   cl
  4056ff:	add    QWORD PTR [rax+rcx*8+0x8],0x1
  405705:	test   rdi,rdi
  405708:	je     405717 <free_node_boolean_operator@@Base+0x37>
  40570a:	add    QWORD PTR [rip+0x93c6],0x1        # 40ead8 <__bss_start@@Base+0x95c>
  405712:	call   405290 <free_node@@Base>
  405717:	add    QWORD PTR [rip+0x93c1],0x1        # 40eae0 <__bss_start@@Base+0x964>
  40571f:	mov    rdi,QWORD PTR [rbx+0x10]
  405723:	call   405290 <free_node@@Base>
  405728:	mov    rdi,QWORD PTR [rbx+0x18]
  40572c:	call   405290 <free_node@@Base>
  405731:	mov    rdi,rbx
  405734:	pop    rbx
  405735:	jmp    403040 <free@plt>
  40573a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000405740 <get_boolean_op_value@@Base>:
  405740:	push   r14
  405742:	push   rbx
  405743:	push   rax
  405744:	lea    r14,[rip+0x93a5]        # 40eaf0 <__bss_start@@Base+0x974>
  40574b:	add    QWORD PTR [rip+0x939d],0x1        # 40eaf0 <__bss_start@@Base+0x974>
  405753:	mov    rbx,QWORD PTR [rdi+0x8]
  405757:	mov    esi,0x2
  40575c:	mov    rdi,rbx
  40575f:	call   403140 <strnlen@plt>
  405764:	xor    ecx,ecx
  405766:	cmp    rax,0x2
  40576a:	setne  cl
  40576d:	add    QWORD PTR [r14+rcx*8+0x8],0x1
  405773:	cmp    rax,0x2
  405777:	jne    405888 <get_boolean_op_value@@Base+0x148>
  40577d:	lea    rsi,[rip+0x3e48]        # 4095cc <_IO_stdin_used@@Base+0x5cc>
  405784:	mov    edx,0x2
  405789:	mov    rdi,rbx
  40578c:	call   403070 <strncmp@plt>
  405791:	xor    ecx,ecx
  405793:	test   eax,eax
  405795:	setne  cl
  405798:	add    QWORD PTR [r14+rcx*8+0x18],0x1
  40579e:	test   eax,eax
  4057a0:	je     4058ca <get_boolean_op_value@@Base+0x18a>
  4057a6:	lea    rsi,[rip+0x3e22]        # 4095cf <_IO_stdin_used@@Base+0x5cf>
  4057ad:	mov    edx,0x2
  4057b2:	mov    rdi,rbx
  4057b5:	call   403070 <strncmp@plt>
  4057ba:	xor    ecx,ecx
  4057bc:	test   eax,eax
  4057be:	setne  cl
  4057c1:	add    QWORD PTR [r14+rcx*8+0x30],0x1
  4057c7:	test   eax,eax
  4057c9:	je     40590c <get_boolean_op_value@@Base+0x1cc>
  4057cf:	lea    rsi,[rip+0x3dfc]        # 4095d2 <_IO_stdin_used@@Base+0x5d2>
  4057d6:	mov    edx,0x2
  4057db:	mov    rdi,rbx
  4057de:	call   403070 <strncmp@plt>
  4057e3:	xor    ecx,ecx
  4057e5:	test   eax,eax
  4057e7:	setne  cl
  4057ea:	add    QWORD PTR [r14+rcx*8+0x48],0x1
  4057f0:	test   eax,eax
  4057f2:	je     40591b <get_boolean_op_value@@Base+0x1db>
  4057f8:	lea    rsi,[rip+0x3dd6]        # 4095d5 <_IO_stdin_used@@Base+0x5d5>
  4057ff:	mov    edx,0x2
  405804:	mov    rdi,rbx
  405807:	call   403070 <strncmp@plt>
  40580c:	xor    ecx,ecx
  40580e:	test   eax,eax
  405810:	setne  cl
  405813:	add    QWORD PTR [r14+rcx*8+0x60],0x1
  405819:	test   eax,eax
  40581b:	je     40592a <get_boolean_op_value@@Base+0x1ea>
  405821:	lea    rsi,[rip+0x3db0]        # 4095d8 <_IO_stdin_used@@Base+0x5d8>
  405828:	mov    edx,0x2
  40582d:	mov    rdi,rbx
  405830:	call   403070 <strncmp@plt>
  405835:	xor    ecx,ecx
  405837:	test   eax,eax
  405839:	setne  cl
  40583c:	add    QWORD PTR [r14+rcx*8+0x78],0x1
  405842:	test   eax,eax
  405844:	je     405939 <get_boolean_op_value@@Base+0x1f9>
  40584a:	lea    rsi,[rip+0x3d8a]        # 4095db <_IO_stdin_used@@Base+0x5db>
  405851:	mov    edx,0x2
  405856:	mov    rdi,rbx
  405859:	call   403070 <strncmp@plt>
  40585e:	xor    ecx,ecx
  405860:	test   eax,eax
  405862:	setne  cl
  405865:	add    QWORD PTR [r14+rcx*8+0x90],0x1
  40586e:	test   eax,eax
  405870:	jne    405962 <get_boolean_op_value@@Base+0x222>
  405876:	add    QWORD PTR [rip+0x9312],0x1        # 40eb90 <__bss_start@@Base+0xa14>
  40587e:	mov    eax,0x5
  405883:	jmp    405946 <get_boolean_op_value@@Base+0x206>
  405888:	mov    DWORD PTR [rip+0x88ce],0x0        # 40e160 <__data_start@@Base+0x18>
  405892:	movsx  eax,BYTE PTR [rbx]
  405895:	lea    rdi,[rip+0x88c4]        # 40e160 <__data_start@@Base+0x18>
  40589c:	cmp    eax,0x3e
  40589f:	je     4058f1 <get_boolean_op_value@@Base+0x1b1>
  4058a1:	cmp    eax,0x3c
  4058a4:	je     4058d6 <get_boolean_op_value@@Base+0x196>
  4058a6:	cmp    eax,0x21
  4058a9:	jne    405956 <get_boolean_op_value@@Base+0x216>
  4058af:	lea    rsi,[rip+0x7d02]        # 40d5b8 <_IO_stdin_used@@Base+0x45b8>
  4058b6:	call   405990 <get_boolean_op_value@@Base+0x250>
  4058bb:	add    QWORD PTR [rip+0x92f5],0x1        # 40ebb8 <__bss_start@@Base+0xa3c>
  4058c3:	mov    eax,0x8
  4058c8:	jmp    405946 <get_boolean_op_value@@Base+0x206>
  4058ca:	add    QWORD PTR [rip+0x9246],0x1        # 40eb18 <__bss_start@@Base+0x99c>
  4058d2:	xor    eax,eax
  4058d4:	jmp    405946 <get_boolean_op_value@@Base+0x206>
  4058d6:	lea    rsi,[rip+0x7ce3]        # 40d5c0 <_IO_stdin_used@@Base+0x45c0>
  4058dd:	call   405990 <get_boolean_op_value@@Base+0x250>
  4058e2:	add    QWORD PTR [rip+0x92d6],0x1        # 40ebc0 <__bss_start@@Base+0xa44>
  4058ea:	mov    eax,0x6
  4058ef:	jmp    405946 <get_boolean_op_value@@Base+0x206>
  4058f1:	lea    rsi,[rip+0x7cd0]        # 40d5c8 <_IO_stdin_used@@Base+0x45c8>
  4058f8:	call   405990 <get_boolean_op_value@@Base+0x250>
  4058fd:	add    QWORD PTR [rip+0x92c3],0x1        # 40ebc8 <__bss_start@@Base+0xa4c>
  405905:	mov    eax,0x7
  40590a:	jmp    405946 <get_boolean_op_value@@Base+0x206>
  40590c:	add    QWORD PTR [rip+0x921c],0x1        # 40eb30 <__bss_start@@Base+0x9b4>
  405914:	mov    eax,0x1
  405919:	jmp    405946 <get_boolean_op_value@@Base+0x206>
  40591b:	add    QWORD PTR [rip+0x9225],0x1        # 40eb48 <__bss_start@@Base+0x9cc>
  405923:	mov    eax,0x2
  405928:	jmp    405946 <get_boolean_op_value@@Base+0x206>
  40592a:	add    QWORD PTR [rip+0x922e],0x1        # 40eb60 <__bss_start@@Base+0x9e4>
  405932:	mov    eax,0x3
  405937:	jmp    405946 <get_boolean_op_value@@Base+0x206>
  405939:	add    QWORD PTR [rip+0x9237],0x1        # 40eb78 <__bss_start@@Base+0x9fc>
  405941:	mov    eax,0x4
  405946:	add    QWORD PTR [rip+0x9282],0x1        # 40ebd0 <__bss_start@@Base+0xa54>
  40594e:	add    rsp,0x8
  405952:	pop    rbx
  405953:	pop    r14
  405955:	ret    
  405956:	lea    rsi,[rip+0x7c53]        # 40d5b0 <_IO_stdin_used@@Base+0x45b0>
  40595d:	call   405990 <get_boolean_op_value@@Base+0x250>
  405962:	mov    rax,QWORD PTR [rip+0x8687]        # 40dff0 <stderr@GLIBC_2.2.5>
  405969:	mov    rdi,QWORD PTR [rax]
  40596c:	lea    rsi,[rip+0x3c6b]        # 4095de <_IO_stdin_used@@Base+0x5de>
  405973:	xor    eax,eax
  405975:	mov    rdx,rbx
  405978:	call   403160 <fprintf@plt>
  40597d:	mov    edi,0x1
  405982:	call   403250 <exit@plt>
  405987:	nop    WORD PTR [rax+rax*1+0x0]
  405990:	mov    eax,DWORD PTR [rdi]
  405992:	mov    ecx,0xffffffff
  405997:	cmp    rax,rcx
  40599a:	je     4059a9 <get_boolean_op_value@@Base+0x269>
  40599c:	mov    rax,QWORD PTR [rsi+rax*8]
  4059a0:	test   rax,rax
  4059a3:	je     4059a9 <get_boolean_op_value@@Base+0x269>
  4059a5:	add    QWORD PTR [rax],0x1
  4059a9:	ret    
  4059aa:	nop    WORD PTR [rax+rax*1+0x0]
  4059b0:	push   r15
  4059b2:	push   r14
  4059b4:	push   rbx
  4059b5:	lea    rdi,[rip+0x3cc4]        # 409680 <_IO_stdin_used@@Base+0x680>
  4059bc:	lea    rsi,[rip+0x36f4]        # 4090b7 <_IO_stdin_used@@Base+0xb7>
  4059c3:	mov    edx,0x3bea7c70
  4059c8:	call   407200 <__generate_code_for_binary_boolean_expression@@Base+0x400>
  4059cd:	xor    ebx,ebx
  4059cf:	lea    r14,[rip+0x7bfa]        # 40d5d0 <_IO_stdin_used@@Base+0x45d0>
  4059d6:	lea    r15,[rip+0x7df3]        # 40d7d0 <_IO_stdin_used@@Base+0x47d0>
  4059dd:	nop    DWORD PTR [rax]
  4059e0:	mov    edi,DWORD PTR [r14+rbx*2]
  4059e4:	mov    rsi,QWORD PTR [r14+rbx*2+0x8]
  4059e9:	mov    edx,DWORD PTR [r14+rbx*2+0x10]
  4059ee:	mov    r8d,DWORD PTR [r14+rbx*2+0x18]
  4059f3:	mov    ecx,DWORD PTR [r14+rbx*2+0x14]
  4059f8:	call   407650 <__generate_code_for_binary_boolean_expression@@Base+0x850>
  4059fd:	mov    edi,DWORD PTR [rbx+r15*1]
  405a01:	mov    rsi,QWORD PTR [rbx+r15*1+0x8]
  405a06:	call   407a80 <__generate_code_for_binary_boolean_expression@@Base+0xc80>
  405a0b:	add    rbx,0x10
  405a0f:	cmp    rbx,0x100
  405a16:	jne    4059e0 <get_boolean_op_value@@Base+0x2a0>
  405a18:	call   407ea0 <__generate_code_for_binary_boolean_expression@@Base+0x10a0>
  405a1d:	pop    rbx
  405a1e:	pop    r14
  405a20:	pop    r15
  405a22:	jmp    408640 <__generate_code_for_binary_boolean_expression@@Base+0x1840>
  405a27:	nop    WORD PTR [rax+rax*1+0x0]
  405a30:	push   rax
  405a31:	call   4059b0 <get_boolean_op_value@@Base+0x270>
  405a36:	vxorps xmm0,xmm0,xmm0
  405a3a:	vmovaps XMMWORD PTR [rip+0x8e8e],xmm0        # 40e8d0 <__bss_start@@Base+0x754>
  405a42:	vmovaps XMMWORD PTR [rip+0x8e96],xmm0        # 40e8e0 <__bss_start@@Base+0x764>
  405a4a:	vmovaps XMMWORD PTR [rip+0x8e9e],xmm0        # 40e8f0 <__bss_start@@Base+0x774>
  405a52:	vmovaps XMMWORD PTR [rip+0x8ea6],xmm0        # 40e900 <__bss_start@@Base+0x784>
  405a5a:	vmovaps XMMWORD PTR [rip+0x8eae],xmm0        # 40e910 <__bss_start@@Base+0x794>
  405a62:	vmovaps XMMWORD PTR [rip+0x8eb6],xmm0        # 40e920 <__bss_start@@Base+0x7a4>
  405a6a:	vmovaps XMMWORD PTR [rip+0x8ebe],xmm0        # 40e930 <__bss_start@@Base+0x7b4>
  405a72:	vmovaps XMMWORD PTR [rip+0x8ec6],xmm0        # 40e940 <__bss_start@@Base+0x7c4>
  405a7a:	vxorps xmm0,xmm0,xmm0
  405a7e:	vmovups YMMWORD PTR [rip+0x8f22],ymm0        # 40e9a8 <__bss_start@@Base+0x82c>
  405a86:	vmovups YMMWORD PTR [rip+0x8f02],ymm0        # 40e990 <__bss_start@@Base+0x814>
  405a8e:	vmovups YMMWORD PTR [rip+0x8eda],ymm0        # 40e970 <__bss_start@@Base+0x7f4>
  405a96:	vmovups YMMWORD PTR [rip+0x8eb2],ymm0        # 40e950 <__bss_start@@Base+0x7d4>
  405a9e:	vmovups YMMWORD PTR [rip+0x8f2a],ymm0        # 40e9d0 <__bss_start@@Base+0x854>
  405aa6:	mov    QWORD PTR [rip+0x8f3f],0x0        # 40e9f0 <__bss_start@@Base+0x874>
  405ab1:	vmovups YMMWORD PTR [rip+0x8f47],ymm0        # 40ea00 <__bss_start@@Base+0x884>
  405ab9:	mov    QWORD PTR [rip+0x8f5c],0x0        # 40ea20 <__bss_start@@Base+0x8a4>
  405ac4:	vmovups YMMWORD PTR [rip+0x8f64],ymm0        # 40ea30 <__bss_start@@Base+0x8b4>
  405acc:	mov    QWORD PTR [rip+0x8f79],0x0        # 40ea50 <__bss_start@@Base+0x8d4>
  405ad7:	vmovups YMMWORD PTR [rip+0x8f81],ymm0        # 40ea60 <__bss_start@@Base+0x8e4>
  405adf:	mov    QWORD PTR [rip+0x8f96],0x0        # 40ea80 <__bss_start@@Base+0x904>
  405aea:	vmovups YMMWORD PTR [rip+0x8f9e],ymm0        # 40ea90 <__bss_start@@Base+0x914>
  405af2:	mov    QWORD PTR [rip+0x8fb3],0x0        # 40eab0 <__bss_start@@Base+0x934>
  405afd:	vmovups YMMWORD PTR [rip+0x8fbb],ymm0        # 40eac0 <__bss_start@@Base+0x944>
  405b05:	vmovups YMMWORD PTR [rip+0x90a3],ymm0        # 40ebb0 <__bss_start@@Base+0xa34>
  405b0d:	vmovups YMMWORD PTR [rip+0x907b],ymm0        # 40eb90 <__bss_start@@Base+0xa14>
  405b15:	vmovups YMMWORD PTR [rip+0x9053],ymm0        # 40eb70 <__bss_start@@Base+0x9f4>
  405b1d:	vmovups YMMWORD PTR [rip+0x902b],ymm0        # 40eb50 <__bss_start@@Base+0x9d4>
  405b25:	vmovups YMMWORD PTR [rip+0x9003],ymm0        # 40eb30 <__bss_start@@Base+0x9b4>
  405b2d:	mov    QWORD PTR [rip+0x8fa8],0x0        # 40eae0 <__bss_start@@Base+0x964>
  405b38:	vmovups YMMWORD PTR [rip+0x8fd0],ymm0        # 40eb10 <__bss_start@@Base+0x994>
  405b40:	vmovups YMMWORD PTR [rip+0x8fa8],ymm0        # 40eaf0 <__bss_start@@Base+0x974>
  405b48:	mov    QWORD PTR [rip+0x907d],0x0        # 40ebd0 <__bss_start@@Base+0xa54>
  405b53:	pop    rax
  405b54:	vzeroupper 
  405b57:	ret    
  405b58:	nop    DWORD PTR [rax+rax*1+0x0]
  405b60:	lea    rdi,[rip+0xfffffffffffffe49]        # 4059b0 <get_boolean_op_value@@Base+0x270>
  405b67:	lea    rsi,[rip+0xfffffffffffffec2]        # 405a30 <get_boolean_op_value@@Base+0x2f0>
  405b6e:	jmp    408a00 <__gcov_flush@@Base+0xa0>
  405b73:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405b7d:	nop    DWORD PTR [rax]

0000000000405b80 <init_grammar@@Base>:
  405b80:	vmovdqa xmm0,XMMWORD PTR [rip+0x9058]        # 40ebe0 <__bss_start@@Base+0xa64>
  405b88:	vpcmpeqd xmm1,xmm1,xmm1
  405b8c:	vpsubq xmm0,xmm0,xmm1
  405b90:	vmovdqa XMMWORD PTR [rip+0x9048],xmm0        # 40ebe0 <__bss_start@@Base+0xa64>
  405b98:	mov    QWORD PTR [rdi],rsi
  405b9b:	ret    
  405b9c:	nop    DWORD PTR [rax+0x0]

0000000000405ba0 <destroy_grammar@@Base>:
  405ba0:	vmovdqa xmm0,XMMWORD PTR [rip+0x9048]        # 40ebf0 <__bss_start@@Base+0xa74>
  405ba8:	vpcmpeqd xmm1,xmm1,xmm1
  405bac:	vpsubq xmm0,xmm0,xmm1
  405bb0:	vmovdqa XMMWORD PTR [rip+0x9038],xmm0        # 40ebf0 <__bss_start@@Base+0xa74>
  405bb8:	ret    
  405bb9:	nop    DWORD PTR [rax+0x0]

0000000000405bc0 <build_ast@@Base>:
  405bc0:	vmovdqa xmm0,XMMWORD PTR [rip+0x9038]        # 40ec00 <__bss_start@@Base+0xa84>
  405bc8:	vpcmpeqd xmm1,xmm1,xmm1
  405bcc:	vpsubq xmm0,xmm0,xmm1
  405bd0:	vmovdqa XMMWORD PTR [rip+0x9028],xmm0        # 40ec00 <__bss_start@@Base+0xa84>
  405bd8:	jmp    405be0 <read_function_ast_node@@Base>
  405bdd:	nop    DWORD PTR [rax]

0000000000405be0 <read_function_ast_node@@Base>:
  405be0:	push   r15
  405be2:	push   r14
  405be4:	push   rbx
  405be5:	mov    rbx,rdi
  405be8:	lea    r15,[rip+0x9021]        # 40ec10 <__bss_start@@Base+0xa94>
  405bef:	add    QWORD PTR [rip+0x9019],0x1        # 40ec10 <__bss_start@@Base+0xa94>
  405bf7:	mov    rdi,QWORD PTR [rdi]
  405bfa:	call   403f30 <next@@Base>
  405bff:	mov    ecx,DWORD PTR [rax]
  405c01:	xor    edx,edx
  405c03:	test   ecx,ecx
  405c05:	sete   dl
  405c08:	add    QWORD PTR [r15+rdx*8+0x8],0x1
  405c0e:	test   ecx,ecx
  405c10:	je     405c21 <read_function_ast_node@@Base+0x41>
  405c12:	add    QWORD PTR [rip+0x900e],0x1        # 40ec28 <__bss_start@@Base+0xaac>
  405c1a:	xor    ebx,ebx
  405c1c:	jmp    405cf1 <read_function_ast_node@@Base+0x111>
  405c21:	mov    rdi,rax
  405c24:	call   4039c0 <free_token_int_type@@Base>
  405c29:	mov    rdi,QWORD PTR [rbx]
  405c2c:	call   403f30 <next@@Base>
  405c31:	mov    r14,rax
  405c34:	mov    eax,DWORD PTR [rax]
  405c36:	xor    ecx,ecx
  405c38:	cmp    eax,0x2
  405c3b:	sete   cl
  405c3e:	add    QWORD PTR [r15+rcx*8+0x20],0x1
  405c44:	cmp    eax,0x2
  405c47:	je     405c58 <read_function_ast_node@@Base+0x78>
  405c49:	add    QWORD PTR [rip+0x8fef],0x1        # 40ec40 <__bss_start@@Base+0xac4>
  405c51:	xor    ebx,ebx
  405c53:	jmp    405cf1 <read_function_ast_node@@Base+0x111>
  405c58:	mov    rdi,QWORD PTR [rbx]
  405c5b:	call   403f30 <next@@Base>
  405c60:	mov    ecx,DWORD PTR [rax]
  405c62:	xor    edx,edx
  405c64:	cmp    ecx,0x3
  405c67:	sete   dl
  405c6a:	add    QWORD PTR [r15+rdx*8+0x38],0x1
  405c70:	cmp    ecx,0x3
  405c73:	je     405c81 <read_function_ast_node@@Base+0xa1>
  405c75:	add    QWORD PTR [rip+0x8fdb],0x1        # 40ec58 <__bss_start@@Base+0xadc>
  405c7d:	xor    ebx,ebx
  405c7f:	jmp    405cf1 <read_function_ast_node@@Base+0x111>
  405c81:	mov    rdi,rax
  405c84:	call   403a20 <free_token_opar@@Base>
  405c89:	mov    rdi,QWORD PTR [rbx]
  405c8c:	call   403f30 <next@@Base>
  405c91:	mov    ecx,DWORD PTR [rax]
  405c93:	xor    edx,edx
  405c95:	cmp    ecx,0x4
  405c98:	sete   dl
  405c9b:	add    QWORD PTR [r15+rdx*8+0x50],0x1
  405ca1:	cmp    ecx,0x4
  405ca4:	je     405cb2 <read_function_ast_node@@Base+0xd2>
  405ca6:	add    QWORD PTR [rip+0x8fc2],0x1        # 40ec70 <__bss_start@@Base+0xaf4>
  405cae:	xor    ebx,ebx
  405cb0:	jmp    405cf1 <read_function_ast_node@@Base+0x111>
  405cb2:	add    QWORD PTR [rip+0x8fbe],0x1        # 40ec78 <__bss_start@@Base+0xafc>
  405cba:	mov    rdi,rax
  405cbd:	call   403a40 <free_token_cpar@@Base>
  405cc2:	mov    rdi,rbx
  405cc5:	call   405d10 <read_body@@Base>
  405cca:	mov    r15,rax
  405ccd:	mov    edi,0x20
  405cd2:	call   4031b0 <malloc@plt>
  405cd7:	mov    rbx,rax
  405cda:	mov    rsi,QWORD PTR [r14+0x8]
  405cde:	mov    rdi,rax
  405ce1:	mov    rdx,r15
  405ce4:	call   405110 <init_node_function@@Base>
  405ce9:	mov    rdi,r14
  405cec:	call   403a00 <free_token_function@@Base>
  405cf1:	add    QWORD PTR [rip+0x8f87],0x1        # 40ec80 <__bss_start@@Base+0xb04>
  405cf9:	mov    rax,rbx
  405cfc:	pop    rbx
  405cfd:	pop    r14
  405cff:	pop    r15
  405d01:	ret    
  405d02:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405d0c:	nop    DWORD PTR [rax+0x0]

0000000000405d10 <read_body@@Base>:
  405d10:	push   rbp
  405d11:	push   r15
  405d13:	push   r14
  405d15:	push   r13
  405d17:	push   r12
  405d19:	push   rbx
  405d1a:	push   rax
  405d1b:	mov    r14,rdi
  405d1e:	lea    r13,[rip+0x8f6b]        # 40ec90 <__bss_start@@Base+0xb14>
  405d25:	add    QWORD PTR [rip+0x8f63],0x1        # 40ec90 <__bss_start@@Base+0xb14>
  405d2d:	mov    rdi,QWORD PTR [rdi]
  405d30:	call   403f30 <next@@Base>
  405d35:	mov    ecx,DWORD PTR [rax]
  405d37:	xor    edx,edx
  405d39:	cmp    ecx,0x5
  405d3c:	sete   dl
  405d3f:	add    QWORD PTR [r13+rdx*8+0x8],0x1
  405d45:	cmp    ecx,0x5
  405d48:	je     405d59 <read_body@@Base+0x49>
  405d4a:	add    QWORD PTR [rip+0x8f56],0x1        # 40eca8 <__bss_start@@Base+0xb2c>
  405d52:	xor    ebx,ebx
  405d54:	jmp    405eaf <read_body@@Base+0x19f>
  405d59:	add    QWORD PTR [rip+0x8f4f],0x1        # 40ecb0 <__bss_start@@Base+0xb34>
  405d61:	mov    rdi,rax
  405d64:	call   403a60 <free_token_obra@@Base>
  405d69:	mov    rdi,QWORD PTR [r14]
  405d6c:	call   403f30 <next@@Base>
  405d71:	mov    rbp,rax
  405d74:	mov    eax,DWORD PTR [rax]
  405d76:	xor    ecx,ecx
  405d78:	cmp    eax,0x6
  405d7b:	sete   cl
  405d7e:	add    QWORD PTR [r13+rcx*8+0x28],0x1
  405d84:	cmp    eax,0x6
  405d87:	je     405e7c <read_body@@Base+0x16c>
  405d8d:	xor    r15d,r15d
  405d90:	xor    ebx,ebx
  405d92:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405d9c:	nop    DWORD PTR [rax+0x0]
  405da0:	mov    DWORD PTR [rip+0x83ba],0x0        # 40e164 <__data_start@@Base+0x1c>
  405daa:	lea    rdi,[rip+0x83b3]        # 40e164 <__data_start@@Base+0x1c>
  405db1:	cmp    eax,0xa
  405db4:	je     405df0 <read_body@@Base+0xe0>
  405db6:	cmp    eax,0x7
  405db9:	jne    405e90 <read_body@@Base+0x180>
  405dbf:	lea    rsi,[rip+0x7b12]        # 40d8d8 <_IO_stdin_used@@Base+0x48d8>
  405dc6:	call   406580 <read_boolean_unary_expression@@Base+0xf0>
  405dcb:	add    QWORD PTR [rip+0x8f0d],0x1        # 40ece0 <__bss_start@@Base+0xb64>
  405dd3:	mov    rdi,rbp
  405dd6:	call   403aa0 <free_token_return@@Base>
  405ddb:	mov    rdi,r14
  405dde:	call   405ed0 <read_return_expression@@Base>
  405de3:	jmp    405e14 <read_body@@Base+0x104>
  405de5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405def:	nop
  405df0:	lea    rsi,[rip+0x7ae9]        # 40d8e0 <_IO_stdin_used@@Base+0x48e0>
  405df7:	call   406580 <read_boolean_unary_expression@@Base+0xf0>
  405dfc:	add    QWORD PTR [rip+0x8ee4],0x1        # 40ece8 <__bss_start@@Base+0xb6c>
  405e04:	mov    rdi,rbp
  405e07:	call   403b00 <free_token_if@@Base>
  405e0c:	mov    rdi,r14
  405e0f:	call   405fa0 <read_if_statement@@Base>
  405e14:	mov    r12,rax
  405e17:	xor    eax,eax
  405e19:	test   rbx,rbx
  405e1c:	sete   al
  405e1f:	add    QWORD PTR [r13+rax*8+0x68],0x1
  405e25:	test   rbx,rbx
  405e28:	je     405e40 <read_body@@Base+0x130>
  405e2a:	add    QWORD PTR [rip+0x8ed6],0x1        # 40ed08 <__bss_start@@Base+0xb8c>
  405e32:	mov    QWORD PTR [r15+0x8],r12
  405e36:	jmp    405e4b <read_body@@Base+0x13b>
  405e38:	nop    DWORD PTR [rax+rax*1+0x0]
  405e40:	add    QWORD PTR [rip+0x8ec8],0x1        # 40ed10 <__bss_start@@Base+0xb94>
  405e48:	mov    rbx,r12
  405e4b:	add    QWORD PTR [rip+0x8ec5],0x1        # 40ed18 <__bss_start@@Base+0xb9c>
  405e53:	mov    rdi,QWORD PTR [r14]
  405e56:	call   403f30 <next@@Base>
  405e5b:	mov    rbp,rax
  405e5e:	mov    eax,DWORD PTR [rax]
  405e60:	xor    ecx,ecx
  405e62:	cmp    eax,0x6
  405e65:	sete   cl
  405e68:	add    QWORD PTR [r13+rcx*8+0x28],0x1
  405e6e:	mov    r15,r12
  405e71:	cmp    eax,0x6
  405e74:	jne    405da0 <read_body@@Base+0x90>
  405e7a:	jmp    405e7e <read_body@@Base+0x16e>
  405e7c:	xor    ebx,ebx
  405e7e:	add    QWORD PTR [rip+0x8e9a],0x1        # 40ed20 <__bss_start@@Base+0xba4>
  405e86:	mov    rdi,rbp
  405e89:	call   403a80 <free_token_cbra@@Base>
  405e8e:	jmp    405eaf <read_body@@Base+0x19f>
  405e90:	lea    rsi,[rip+0x7a39]        # 40d8d0 <_IO_stdin_used@@Base+0x48d0>
  405e97:	call   406580 <read_boolean_unary_expression@@Base+0xf0>
  405e9c:	add    QWORD PTR [rip+0x8e4c],0x1        # 40ecf0 <__bss_start@@Base+0xb74>
  405ea4:	mov    rdi,QWORD PTR [r14]
  405ea7:	mov    rsi,rbp
  405eaa:	call   403dd0 <push_back@@Base>
  405eaf:	add    QWORD PTR [rip+0x8e71],0x1        # 40ed28 <__bss_start@@Base+0xbac>
  405eb7:	mov    rax,rbx
  405eba:	add    rsp,0x8
  405ebe:	pop    rbx
  405ebf:	pop    r12
  405ec1:	pop    r13
  405ec3:	pop    r14
  405ec5:	pop    r15
  405ec7:	pop    rbp
  405ec8:	ret    
  405ec9:	nop    DWORD PTR [rax+0x0]

0000000000405ed0 <read_return_expression@@Base>:
  405ed0:	push   r15
  405ed2:	push   r14
  405ed4:	push   r12
  405ed6:	push   rbx
  405ed7:	push   rax
  405ed8:	mov    r14,rdi
  405edb:	lea    r12,[rip+0x8e4e]        # 40ed30 <__bss_start@@Base+0xbb4>
  405ee2:	add    QWORD PTR [rip+0x8e46],0x1        # 40ed30 <__bss_start@@Base+0xbb4>
  405eea:	mov    rdi,QWORD PTR [rdi]
  405eed:	call   403f30 <next@@Base>
  405ef2:	mov    rbx,rax
  405ef5:	mov    eax,DWORD PTR [rax]
  405ef7:	xor    ecx,ecx
  405ef9:	cmp    eax,0x1
  405efc:	sete   cl
  405eff:	add    QWORD PTR [r12+rcx*8+0x8],0x1
  405f05:	cmp    eax,0x1
  405f08:	je     405f16 <read_return_expression@@Base+0x46>
  405f0a:	add    QWORD PTR [rip+0x8e36],0x1        # 40ed48 <__bss_start@@Base+0xbcc>
  405f12:	xor    ebx,ebx
  405f14:	jmp    405f87 <read_return_expression@@Base+0xb7>
  405f16:	mov    edi,0x18
  405f1b:	call   4031b0 <malloc@plt>
  405f20:	mov    r15,rax
  405f23:	mov    esi,DWORD PTR [rbx+0x4]
  405f26:	mov    rdi,rax
  405f29:	call   4050b0 <init_node_int@@Base>
  405f2e:	mov    rdi,rbx
  405f31:	call   4039e0 <free_token_int_value@@Base>
  405f36:	mov    edi,0x18
  405f3b:	call   4031b0 <malloc@plt>
  405f40:	mov    rbx,rax
  405f43:	mov    rdi,rax
  405f46:	mov    rsi,r15
  405f49:	call   405170 <init_node_return@@Base>
  405f4e:	mov    rdi,QWORD PTR [r14]
  405f51:	call   403f30 <next@@Base>
  405f56:	mov    ecx,DWORD PTR [rax]
  405f58:	xor    edx,edx
  405f5a:	cmp    ecx,0x8
  405f5d:	sete   dl
  405f60:	add    QWORD PTR [r12+rdx*8+0x20],0x1
  405f66:	cmp    ecx,0x8
  405f69:	je     405f77 <read_return_expression@@Base+0xa7>
  405f6b:	add    QWORD PTR [rip+0x8ded],0x1        # 40ed60 <__bss_start@@Base+0xbe4>
  405f73:	xor    ebx,ebx
  405f75:	jmp    405f87 <read_return_expression@@Base+0xb7>
  405f77:	add    QWORD PTR [rip+0x8de9],0x1        # 40ed68 <__bss_start@@Base+0xbec>
  405f7f:	mov    rdi,rax
  405f82:	call   403ac0 <free_token_semicolon@@Base>
  405f87:	add    QWORD PTR [rip+0x8de1],0x1        # 40ed70 <__bss_start@@Base+0xbf4>
  405f8f:	mov    rax,rbx
  405f92:	add    rsp,0x8
  405f96:	pop    rbx
  405f97:	pop    r12
  405f99:	pop    r14
  405f9b:	pop    r15
  405f9d:	ret    
  405f9e:	xchg   ax,ax

0000000000405fa0 <read_if_statement@@Base>:
  405fa0:	push   r15
  405fa2:	push   r14
  405fa4:	push   r12
  405fa6:	push   rbx
  405fa7:	push   rax
  405fa8:	mov    rbx,rdi
  405fab:	lea    r12,[rip+0x8dce]        # 40ed80 <__bss_start@@Base+0xc04>
  405fb2:	add    QWORD PTR [rip+0x8dc6],0x1        # 40ed80 <__bss_start@@Base+0xc04>
  405fba:	mov    rdi,QWORD PTR [rdi]
  405fbd:	call   403f30 <next@@Base>
  405fc2:	mov    ecx,DWORD PTR [rax]
  405fc4:	xor    edx,edx
  405fc6:	cmp    ecx,0x3
  405fc9:	sete   dl
  405fcc:	add    QWORD PTR [r12+rdx*8+0x8],0x1
  405fd2:	cmp    ecx,0x3
  405fd5:	je     405fe6 <read_if_statement@@Base+0x46>
  405fd7:	add    QWORD PTR [rip+0x8db9],0x1        # 40ed98 <__bss_start@@Base+0xc1c>
  405fdf:	xor    ebx,ebx
  405fe1:	jmp    40607a <read_if_statement@@Base+0xda>
  405fe6:	mov    rdi,rax
  405fe9:	call   403a20 <free_token_opar@@Base>
  405fee:	mov    rdi,rbx
  405ff1:	call   4060a0 <read_boolean_expression@@Base>
  405ff6:	mov    r14,rax
  405ff9:	mov    rdi,rbx
  405ffc:	call   405d10 <read_body@@Base>
  406001:	mov    r15,rax
  406004:	mov    rdi,QWORD PTR [rbx]
  406007:	call   403f30 <next@@Base>
  40600c:	mov    ecx,DWORD PTR [rax]
  40600e:	xor    edx,edx
  406010:	cmp    ecx,0xb
  406013:	setne  dl
  406016:	add    QWORD PTR [r12+rdx*8+0x20],0x1
  40601c:	cmp    ecx,0xb
  40601f:	jne    40603e <read_if_statement@@Base+0x9e>
  406021:	add    QWORD PTR [rip+0x8d87],0x1        # 40edb0 <__bss_start@@Base+0xc34>
  406029:	mov    rdi,rax
  40602c:	call   403b20 <free_token_else@@Base>
  406031:	mov    rdi,rbx
  406034:	call   405d10 <read_body@@Base>
  406039:	mov    r12,rax
  40603c:	jmp    406054 <read_if_statement@@Base+0xb4>
  40603e:	add    QWORD PTR [rip+0x8d72],0x1        # 40edb8 <__bss_start@@Base+0xc3c>
  406046:	mov    rdi,QWORD PTR [rbx]
  406049:	mov    rsi,rax
  40604c:	call   403dd0 <push_back@@Base>
  406051:	xor    r12d,r12d
  406054:	add    QWORD PTR [rip+0x8d64],0x1        # 40edc0 <__bss_start@@Base+0xc44>
  40605c:	mov    edi,0x28
  406061:	call   4031b0 <malloc@plt>
  406066:	mov    rbx,rax
  406069:	mov    rdi,rax
  40606c:	mov    rsi,r14
  40606f:	mov    rdx,r15
  406072:	mov    rcx,r12
  406075:	call   4051d0 <init_node_if@@Base>
  40607a:	add    QWORD PTR [rip+0x8d46],0x1        # 40edc8 <__bss_start@@Base+0xc4c>
  406082:	mov    rax,rbx
  406085:	add    rsp,0x8
  406089:	pop    rbx
  40608a:	pop    r12
  40608c:	pop    r14
  40608e:	pop    r15
  406090:	ret    
  406091:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40609b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004060a0 <read_boolean_expression@@Base>:
  4060a0:	push   rbp
  4060a1:	push   r15
  4060a3:	push   r14
  4060a5:	push   r13
  4060a7:	push   r12
  4060a9:	push   rbx
  4060aa:	push   rax
  4060ab:	mov    rbx,rdi
  4060ae:	lea    rbp,[rip+0x8d1b]        # 40edd0 <__bss_start@@Base+0xc54>
  4060b5:	vmovdqa xmm0,XMMWORD PTR [rip+0x8d13]        # 40edd0 <__bss_start@@Base+0xc54>
  4060bd:	vpcmpeqd xmm1,xmm1,xmm1
  4060c1:	vpsubq xmm0,xmm0,xmm1
  4060c5:	vmovdqa XMMWORD PTR [rip+0x8d03],xmm0        # 40edd0 <__bss_start@@Base+0xc54>
  4060cd:	mov    DWORD PTR [rsp+0x4],0x0
  4060d5:	mov    rdi,QWORD PTR [rdi]
  4060d8:	call   403f30 <next@@Base>
  4060dd:	mov    r12,rax
  4060e0:	mov    eax,DWORD PTR [rax]
  4060e2:	xor    ecx,ecx
  4060e4:	cmp    eax,0x4
  4060e7:	sete   cl
  4060ea:	add    QWORD PTR [rbp+rcx*8+0x10],0x1
  4060f0:	xor    r14d,r14d
  4060f3:	cmp    eax,0x4
  4060f6:	je     4061e6 <read_boolean_expression@@Base+0x146>
  4060fc:	lea    r15,[rip+0x8065]        # 40e168 <__data_start@@Base+0x20>
  406103:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40610d:	nop    DWORD PTR [rax]
  406110:	mov    DWORD PTR [rip+0x804e],0x0        # 40e168 <__data_start@@Base+0x20>
  40611a:	cmp    eax,0xc
  40611d:	je     406190 <read_boolean_expression@@Base+0xf0>
  40611f:	cmp    eax,0x3
  406122:	je     406160 <read_boolean_expression@@Base+0xc0>
  406124:	cmp    eax,0x1
  406127:	jne    406208 <read_boolean_expression@@Base+0x168>
  40612d:	mov    rdi,r15
  406130:	lea    rsi,[rip+0x77c1]        # 40d8f8 <_IO_stdin_used@@Base+0x48f8>
  406137:	call   406580 <read_boolean_unary_expression@@Base+0xf0>
  40613c:	add    QWORD PTR [rip+0x8ccc],0x1        # 40ee10 <__bss_start@@Base+0xc94>
  406144:	mov    rdi,QWORD PTR [rbx]
  406147:	mov    rsi,r12
  40614a:	call   403dd0 <push_back@@Base>
  40614f:	jmp    406177 <read_boolean_expression@@Base+0xd7>
  406151:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40615b:	nop    DWORD PTR [rax+rax*1+0x0]
  406160:	mov    rdi,r15
  406163:	lea    rsi,[rip+0x779e]        # 40d908 <_IO_stdin_used@@Base+0x4908>
  40616a:	call   406580 <read_boolean_unary_expression@@Base+0xf0>
  40616f:	add    QWORD PTR [rip+0x8ca9],0x1        # 40ee20 <__bss_start@@Base+0xca4>
  406177:	mov    rdi,rbx
  40617a:	mov    rsi,r14
  40617d:	lea    rdx,[rsp+0x4]
  406182:	mov    ecx,r13d
  406185:	call   406250 <read_single_boolean_expression@@Base>
  40618a:	mov    r14,rax
  40618d:	jmp    4061ba <read_boolean_expression@@Base+0x11a>
  40618f:	nop
  406190:	mov    rdi,r15
  406193:	lea    rsi,[rip+0x7766]        # 40d900 <_IO_stdin_used@@Base+0x4900>
  40619a:	call   406580 <read_boolean_unary_expression@@Base+0xf0>
  40619f:	add    QWORD PTR [rip+0x8c71],0x1        # 40ee18 <__bss_start@@Base+0xc9c>
  4061a7:	mov    rdi,r12
  4061aa:	call   405740 <get_boolean_op_value@@Base>
  4061af:	mov    r13d,eax
  4061b2:	mov    DWORD PTR [rsp+0x4],0x1
  4061ba:	add    QWORD PTR [rip+0x8c66],0x1        # 40ee28 <__bss_start@@Base+0xcac>
  4061c2:	mov    rdi,QWORD PTR [rbx]
  4061c5:	call   403f30 <next@@Base>
  4061ca:	mov    r12,rax
  4061cd:	mov    eax,DWORD PTR [rax]
  4061cf:	xor    ecx,ecx
  4061d1:	cmp    eax,0x4
  4061d4:	sete   cl
  4061d7:	add    QWORD PTR [rbp+rcx*8+0x10],0x1
  4061dd:	cmp    eax,0x4
  4061e0:	jne    406110 <read_boolean_expression@@Base+0x70>
  4061e6:	add    QWORD PTR [rip+0x8c42],0x1        # 40ee30 <__bss_start@@Base+0xcb4>
  4061ee:	mov    rdi,r12
  4061f1:	call   403a40 <free_token_cpar@@Base>
  4061f6:	mov    rax,r14
  4061f9:	add    rsp,0x8
  4061fd:	pop    rbx
  4061fe:	pop    r12
  406200:	pop    r13
  406202:	pop    r14
  406204:	pop    r15
  406206:	pop    rbp
  406207:	ret    
  406208:	lea    rdi,[rip+0x7f59]        # 40e168 <__data_start@@Base+0x20>
  40620f:	lea    rsi,[rip+0x76da]        # 40d8f0 <_IO_stdin_used@@Base+0x48f0>
  406216:	call   406580 <read_boolean_unary_expression@@Base+0xf0>
  40621b:	mov    rax,QWORD PTR [rip+0x7dce]        # 40dff0 <stderr@GLIBC_2.2.5>
  406222:	mov    rcx,QWORD PTR [rax]
  406225:	lea    rdi,[rip+0x35b9]        # 4097e5 <_IO_stdin_used@@Base+0x7e5>
  40622c:	mov    esi,0x21
  406231:	mov    edx,0x1
  406236:	call   403260 <fwrite@plt>
  40623b:	mov    edi,0x1
  406240:	call   403250 <exit@plt>
  406245:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40624f:	nop

0000000000406250 <read_single_boolean_expression@@Base>:
  406250:	push   rbp
  406251:	push   r15
  406253:	push   r14
  406255:	push   rbx
  406256:	push   rax
  406257:	mov    r14d,ecx
  40625a:	lea    rax,[rip+0x8bdf]        # 40ee40 <__bss_start@@Base+0xcc4>
  406261:	add    QWORD PTR [rip+0x8bd7],0x1        # 40ee40 <__bss_start@@Base+0xcc4>
  406269:	xor    ecx,ecx
  40626b:	test   rsi,rsi
  40626e:	setne  cl
  406271:	add    QWORD PTR [rax+rcx*8+0x8],0x1
  406277:	test   rsi,rsi
  40627a:	je     4062c8 <read_single_boolean_expression@@Base+0x78>
  40627c:	mov    r15,rdx
  40627f:	mov    ecx,DWORD PTR [rdx]
  406281:	xor    edx,edx
  406283:	test   ecx,ecx
  406285:	sete   dl
  406288:	add    QWORD PTR [rax+rdx*8+0x20],0x1
  40628e:	test   ecx,ecx
  406290:	je     4062ee <read_single_boolean_expression@@Base+0x9e>
  406292:	add    QWORD PTR [rip+0x8bd6],0x1        # 40ee70 <__bss_start@@Base+0xcf4>
  40629a:	call   406320 <read_boolean_binary_expression@@Base>
  40629f:	mov    rbx,rax
  4062a2:	mov    edi,0x28
  4062a7:	call   4031b0 <malloc@plt>
  4062ac:	mov    rbp,rax
  4062af:	xor    edx,edx
  4062b1:	mov    rdi,rax
  4062b4:	mov    esi,r14d
  4062b7:	mov    rcx,rbx
  4062ba:	call   405230 <init_node_boolean_operator@@Base>
  4062bf:	mov    DWORD PTR [r15],0x0
  4062c6:	jmp    4062d8 <read_single_boolean_expression@@Base+0x88>
  4062c8:	add    QWORD PTR [rip+0x8b88],0x1        # 40ee58 <__bss_start@@Base+0xcdc>
  4062d0:	call   406320 <read_boolean_binary_expression@@Base>
  4062d5:	mov    rbp,rax
  4062d8:	add    QWORD PTR [rip+0x8b98],0x1        # 40ee78 <__bss_start@@Base+0xcfc>
  4062e0:	mov    rax,rbp
  4062e3:	add    rsp,0x8
  4062e7:	pop    rbx
  4062e8:	pop    r14
  4062ea:	pop    r15
  4062ec:	pop    rbp
  4062ed:	ret    
  4062ee:	mov    rax,QWORD PTR [rip+0x7cfb]        # 40dff0 <stderr@GLIBC_2.2.5>
  4062f5:	mov    rdi,QWORD PTR [rax]
  4062f8:	mov    edx,DWORD PTR ds:0x4
  4062ff:	lea    rsi,[rip+0x3501]        # 409807 <_IO_stdin_used@@Base+0x807>
  406306:	xor    eax,eax
  406308:	call   403160 <fprintf@plt>
  40630d:	mov    edi,0x1
  406312:	call   403250 <exit@plt>
  406317:	nop    WORD PTR [rax+rax*1+0x0]

0000000000406320 <read_boolean_binary_expression@@Base>:
  406320:	push   rbp
  406321:	push   r15
  406323:	push   r14
  406325:	push   r12
  406327:	push   rbx
  406328:	mov    rbx,rdi
  40632b:	lea    r12,[rip+0x8b4e]        # 40ee80 <__bss_start@@Base+0xd04>
  406332:	add    QWORD PTR [rip+0x8b46],0x1        # 40ee80 <__bss_start@@Base+0xd04>
  40633a:	mov    rdi,QWORD PTR [rdi]
  40633d:	call   403f30 <next@@Base>
  406342:	mov    rbp,rax
  406345:	mov    eax,DWORD PTR [rax]
  406347:	xor    ecx,ecx
  406349:	cmp    eax,0x1
  40634c:	sete   cl
  40634f:	add    QWORD PTR [r12+rcx*8+0x8],0x1
  406355:	cmp    eax,0x1
  406358:	je     406390 <read_boolean_binary_expression@@Base+0x70>
  40635a:	xor    ecx,ecx
  40635c:	cmp    eax,0xc
  40635f:	setne  cl
  406362:	add    QWORD PTR [r12+rcx*8+0x18],0x1
  406368:	cmp    eax,0xc
  40636b:	jne    4063da <read_boolean_binary_expression@@Base+0xba>
  40636d:	add    QWORD PTR [rip+0x8b33],0x1        # 40eea8 <__bss_start@@Base+0xd2c>
  406375:	mov    rdi,QWORD PTR [rbx]
  406378:	mov    rsi,rbp
  40637b:	call   403dd0 <push_back@@Base>
  406380:	mov    rdi,rbx
  406383:	call   406490 <read_boolean_unary_expression@@Base>
  406388:	mov    rbx,rax
  40638b:	jmp    406476 <read_boolean_binary_expression@@Base+0x156>
  406390:	mov    edi,0x18
  406395:	call   4031b0 <malloc@plt>
  40639a:	mov    r14,rax
  40639d:	mov    esi,DWORD PTR [rbp+0x4]
  4063a0:	mov    rdi,rax
  4063a3:	call   4050b0 <init_node_int@@Base>
  4063a8:	mov    rdi,rbp
  4063ab:	call   4039e0 <free_token_int_value@@Base>
  4063b0:	mov    rdi,QWORD PTR [rbx]
  4063b3:	call   403f30 <next@@Base>
  4063b8:	mov    rbp,rax
  4063bb:	mov    eax,DWORD PTR [rax]
  4063bd:	xor    ecx,ecx
  4063bf:	cmp    eax,0xc
  4063c2:	sete   cl
  4063c5:	add    QWORD PTR [r12+rcx*8+0x38],0x1
  4063cb:	cmp    eax,0xc
  4063ce:	je     4063e9 <read_boolean_binary_expression@@Base+0xc9>
  4063d0:	add    QWORD PTR [rip+0x8af0],0x1        # 40eec8 <__bss_start@@Base+0xd4c>
  4063d8:	jmp    406424 <read_boolean_binary_expression@@Base+0x104>
  4063da:	add    QWORD PTR [rip+0x8ace],0x1        # 40eeb0 <__bss_start@@Base+0xd34>
  4063e2:	xor    ebx,ebx
  4063e4:	jmp    406476 <read_boolean_binary_expression@@Base+0x156>
  4063e9:	mov    rdi,rbp
  4063ec:	call   405740 <get_boolean_op_value@@Base>
  4063f1:	mov    r15d,eax
  4063f4:	mov    rdi,rbp
  4063f7:	call   403b40 <free_token_boolean_op@@Base>
  4063fc:	mov    rdi,QWORD PTR [rbx]
  4063ff:	call   403f30 <next@@Base>
  406404:	mov    rbx,rax
  406407:	mov    eax,DWORD PTR [rax]
  406409:	xor    ecx,ecx
  40640b:	cmp    eax,0x1
  40640e:	sete   cl
  406411:	add    QWORD PTR [r12+rcx*8+0x50],0x1
  406417:	cmp    eax,0x1
  40641a:	je     406430 <read_boolean_binary_expression@@Base+0x110>
  40641c:	add    QWORD PTR [rip+0x8abc],0x1        # 40eee0 <__bss_start@@Base+0xd64>
  406424:	mov    rdi,r14
  406427:	call   405290 <free_node@@Base>
  40642c:	xor    ebx,ebx
  40642e:	jmp    406476 <read_boolean_binary_expression@@Base+0x156>
  406430:	add    QWORD PTR [rip+0x8ab0],0x1        # 40eee8 <__bss_start@@Base+0xd6c>
  406438:	mov    edi,0x18
  40643d:	call   4031b0 <malloc@plt>
  406442:	mov    rbp,rax
  406445:	mov    esi,DWORD PTR [rbx+0x4]
  406448:	mov    rdi,rax
  40644b:	call   4050b0 <init_node_int@@Base>
  406450:	mov    rdi,rbx
  406453:	call   4039e0 <free_token_int_value@@Base>
  406458:	mov    edi,0x28
  40645d:	call   4031b0 <malloc@plt>
  406462:	mov    rbx,rax
  406465:	mov    rdi,rax
  406468:	mov    esi,r15d
  40646b:	mov    rdx,r14
  40646e:	mov    rcx,rbp
  406471:	call   405230 <init_node_boolean_operator@@Base>
  406476:	add    QWORD PTR [rip+0x8a72],0x1        # 40eef0 <__bss_start@@Base+0xd74>
  40647e:	mov    rax,rbx
  406481:	pop    rbx
  406482:	pop    r12
  406484:	pop    r14
  406486:	pop    r15
  406488:	pop    rbp
  406489:	ret    
  40648a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000406490 <read_boolean_unary_expression@@Base>:
  406490:	push   rbp
  406491:	push   r15
  406493:	push   r14
  406495:	push   r12
  406497:	push   rbx
  406498:	mov    rbp,rdi
  40649b:	lea    r12,[rip+0x8a5e]        # 40ef00 <__bss_start@@Base+0xd84>
  4064a2:	add    QWORD PTR [rip+0x8a56],0x1        # 40ef00 <__bss_start@@Base+0xd84>
  4064aa:	mov    edi,0x28
  4064af:	call   4031b0 <malloc@plt>
  4064b4:	mov    r15,rax
  4064b7:	mov    rdi,QWORD PTR [rbp+0x0]
  4064bb:	call   403f30 <next@@Base>
  4064c0:	mov    rbx,rax
  4064c3:	mov    eax,DWORD PTR [rax]
  4064c5:	xor    ecx,ecx
  4064c7:	cmp    eax,0xc
  4064ca:	sete   cl
  4064cd:	add    QWORD PTR [r12+rcx*8+0x8],0x1
  4064d3:	cmp    eax,0xc
  4064d6:	je     4064e2 <read_boolean_unary_expression@@Base+0x52>
  4064d8:	add    QWORD PTR [rip+0x8a38],0x1        # 40ef18 <__bss_start@@Base+0xd9c>
  4064e0:	jmp    40651e <read_boolean_unary_expression@@Base+0x8e>
  4064e2:	mov    rdi,rbx
  4064e5:	call   405740 <get_boolean_op_value@@Base>
  4064ea:	mov    r14d,eax
  4064ed:	mov    rdi,rbx
  4064f0:	call   403b40 <free_token_boolean_op@@Base>
  4064f5:	mov    rdi,QWORD PTR [rbp+0x0]
  4064f9:	call   403f30 <next@@Base>
  4064fe:	mov    rbp,rax
  406501:	mov    eax,DWORD PTR [rax]
  406503:	xor    ecx,ecx
  406505:	cmp    eax,0x1
  406508:	sete   cl
  40650b:	add    QWORD PTR [r12+rcx*8+0x20],0x1
  406511:	cmp    eax,0x1
  406514:	je     40652b <read_boolean_unary_expression@@Base+0x9b>
  406516:	add    QWORD PTR [rip+0x8a12],0x1        # 40ef30 <__bss_start@@Base+0xdb4>
  40651e:	mov    rdi,r15
  406521:	call   4056e0 <free_node_boolean_operator@@Base>
  406526:	xor    r15d,r15d
  406529:	jmp    406563 <read_boolean_unary_expression@@Base+0xd3>
  40652b:	add    QWORD PTR [rip+0x8a05],0x1        # 40ef38 <__bss_start@@Base+0xdbc>
  406533:	mov    edi,0x18
  406538:	call   4031b0 <malloc@plt>
  40653d:	mov    rbx,rax
  406540:	mov    esi,DWORD PTR [rbp+0x4]
  406543:	mov    rdi,rax
  406546:	call   4050b0 <init_node_int@@Base>
  40654b:	mov    rdi,rbp
  40654e:	call   4039e0 <free_token_int_value@@Base>
  406553:	xor    ecx,ecx
  406555:	mov    rdi,r15
  406558:	mov    esi,r14d
  40655b:	mov    rdx,rbx
  40655e:	call   405230 <init_node_boolean_operator@@Base>
  406563:	add    QWORD PTR [rip+0x89d5],0x1        # 40ef40 <__bss_start@@Base+0xdc4>
  40656b:	mov    rax,r15
  40656e:	pop    rbx
  40656f:	pop    r12
  406571:	pop    r14
  406573:	pop    r15
  406575:	pop    rbp
  406576:	ret    
  406577:	nop    WORD PTR [rax+rax*1+0x0]
  406580:	mov    eax,DWORD PTR [rdi]
  406582:	mov    ecx,0xffffffff
  406587:	cmp    rax,rcx
  40658a:	je     406599 <read_boolean_unary_expression@@Base+0x109>
  40658c:	mov    rax,QWORD PTR [rsi+rax*8]
  406590:	test   rax,rax
  406593:	je     406599 <read_boolean_unary_expression@@Base+0x109>
  406595:	add    QWORD PTR [rax],0x1
  406599:	ret    
  40659a:	nop    WORD PTR [rax+rax*1+0x0]
  4065a0:	push   r15
  4065a2:	push   r14
  4065a4:	push   rbx
  4065a5:	lea    rdi,[rip+0x32c4]        # 409870 <_IO_stdin_used@@Base+0x870>
  4065ac:	lea    rsi,[rip+0x2b04]        # 4090b7 <_IO_stdin_used@@Base+0xb7>
  4065b3:	mov    edx,0xa66cc747
  4065b8:	call   407200 <__generate_code_for_binary_boolean_expression@@Base+0x400>
  4065bd:	xor    ebx,ebx
  4065bf:	lea    r14,[rip+0x734a]        # 40d910 <_IO_stdin_used@@Base+0x4910>
  4065c6:	lea    r15,[rip+0x74a3]        # 40da70 <_IO_stdin_used@@Base+0x4a70>
  4065cd:	nop    DWORD PTR [rax]
  4065d0:	mov    edi,DWORD PTR [r14+rbx*2]
  4065d4:	mov    rsi,QWORD PTR [r14+rbx*2+0x8]
  4065d9:	mov    edx,DWORD PTR [r14+rbx*2+0x10]
  4065de:	mov    r8d,DWORD PTR [r14+rbx*2+0x18]
  4065e3:	mov    ecx,DWORD PTR [r14+rbx*2+0x14]
  4065e8:	call   407650 <__generate_code_for_binary_boolean_expression@@Base+0x850>
  4065ed:	mov    edi,DWORD PTR [rbx+r15*1]
  4065f1:	mov    rsi,QWORD PTR [rbx+r15*1+0x8]
  4065f6:	call   407a80 <__generate_code_for_binary_boolean_expression@@Base+0xc80>
  4065fb:	add    rbx,0x10
  4065ff:	cmp    rbx,0xb0
  406606:	jne    4065d0 <read_boolean_unary_expression@@Base+0x140>
  406608:	call   407ea0 <__generate_code_for_binary_boolean_expression@@Base+0x10a0>
  40660d:	pop    rbx
  40660e:	pop    r14
  406610:	pop    r15
  406612:	jmp    408640 <__generate_code_for_binary_boolean_expression@@Base+0x1840>
  406617:	nop    WORD PTR [rax+rax*1+0x0]
  406620:	push   rax
  406621:	call   4065a0 <read_boolean_unary_expression@@Base+0x110>
  406626:	vxorps xmm0,xmm0,xmm0
  40662a:	vmovaps XMMWORD PTR [rip+0x85ae],xmm0        # 40ebe0 <__bss_start@@Base+0xa64>
  406632:	vmovaps XMMWORD PTR [rip+0x85b6],xmm0        # 40ebf0 <__bss_start@@Base+0xa74>
  40663a:	vmovaps XMMWORD PTR [rip+0x85be],xmm0        # 40ec00 <__bss_start@@Base+0xa84>
  406642:	vxorps xmm0,xmm0,xmm0
  406646:	vmovups YMMWORD PTR [rip+0x861a],ymm0        # 40ec68 <__bss_start@@Base+0xaec>
  40664e:	vmovups YMMWORD PTR [rip+0x85fa],ymm0        # 40ec50 <__bss_start@@Base+0xad4>
  406656:	vmovups YMMWORD PTR [rip+0x85d2],ymm0        # 40ec30 <__bss_start@@Base+0xab4>
  40665e:	vmovups YMMWORD PTR [rip+0x85aa],ymm0        # 40ec10 <__bss_start@@Base+0xa94>
  406666:	vmovups YMMWORD PTR [rip+0x86a2],ymm0        # 40ed10 <__bss_start@@Base+0xb94>
  40666e:	vmovups YMMWORD PTR [rip+0x867a],ymm0        # 40ecf0 <__bss_start@@Base+0xb74>
  406676:	vmovups YMMWORD PTR [rip+0x8652],ymm0        # 40ecd0 <__bss_start@@Base+0xb54>
  40667e:	vmovups YMMWORD PTR [rip+0x862a],ymm0        # 40ecb0 <__bss_start@@Base+0xb34>
  406686:	vmovups YMMWORD PTR [rip+0x8602],ymm0        # 40ec90 <__bss_start@@Base+0xb14>
  40668e:	vmovups YMMWORD PTR [rip+0x86ba],ymm0        # 40ed50 <__bss_start@@Base+0xbd4>
  406696:	vmovups YMMWORD PTR [rip+0x8692],ymm0        # 40ed30 <__bss_start@@Base+0xbb4>
  40669e:	mov    QWORD PTR [rip+0x86c7],0x0        # 40ed70 <__bss_start@@Base+0xbf4>
  4066a9:	vmovups YMMWORD PTR [rip+0x86ff],ymm0        # 40edb0 <__bss_start@@Base+0xc34>
  4066b1:	vmovups YMMWORD PTR [rip+0x86e7],ymm0        # 40eda0 <__bss_start@@Base+0xc24>
  4066b9:	vmovups YMMWORD PTR [rip+0x86bf],ymm0        # 40ed80 <__bss_start@@Base+0xc04>
  4066c1:	vmovups YMMWORD PTR [rip+0x8747],ymm0        # 40ee10 <__bss_start@@Base+0xc94>
  4066c9:	vmovups YMMWORD PTR [rip+0x871f],ymm0        # 40edf0 <__bss_start@@Base+0xc74>
  4066d1:	vmovups YMMWORD PTR [rip+0x86f7],ymm0        # 40edd0 <__bss_start@@Base+0xc54>
  4066d9:	vmovups YMMWORD PTR [rip+0x877f],ymm0        # 40ee60 <__bss_start@@Base+0xce4>
  4066e1:	vmovups YMMWORD PTR [rip+0x8757],ymm0        # 40ee40 <__bss_start@@Base+0xcc4>
  4066e9:	vmovups YMMWORD PTR [rip+0x87e7],ymm0        # 40eed8 <__bss_start@@Base+0xd5c>
  4066f1:	vmovups YMMWORD PTR [rip+0x87c7],ymm0        # 40eec0 <__bss_start@@Base+0xd44>
  4066f9:	vmovups YMMWORD PTR [rip+0x879f],ymm0        # 40eea0 <__bss_start@@Base+0xd24>
  406701:	vmovups YMMWORD PTR [rip+0x8777],ymm0        # 40ee80 <__bss_start@@Base+0xd04>
  406709:	mov    QWORD PTR [rip+0x871c],0x0        # 40ee30 <__bss_start@@Base+0xcb4>
  406714:	vmovups YMMWORD PTR [rip+0x8804],ymm0        # 40ef20 <__bss_start@@Base+0xda4>
  40671c:	vmovups YMMWORD PTR [rip+0x87dc],ymm0        # 40ef00 <__bss_start@@Base+0xd84>
  406724:	mov    QWORD PTR [rip+0x8811],0x0        # 40ef40 <__bss_start@@Base+0xdc4>
  40672f:	pop    rax
  406730:	vzeroupper 
  406733:	ret    
  406734:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40673e:	xchg   ax,ax
  406740:	lea    rdi,[rip+0xfffffffffffffe59]        # 4065a0 <read_boolean_unary_expression@@Base+0x110>
  406747:	lea    rsi,[rip+0xfffffffffffffed2]        # 406620 <read_boolean_unary_expression@@Base+0x190>
  40674e:	jmp    408a00 <__gcov_flush@@Base+0xa0>
  406753:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40675d:	nop    DWORD PTR [rax]

0000000000406760 <init_generator@@Base>:
  406760:	push   rbx
  406761:	mov    rbx,rdi
  406764:	vmovdqa xmm0,XMMWORD PTR [rip+0x87e4]        # 40ef50 <__bss_start@@Base+0xdd4>
  40676c:	vpcmpeqd xmm1,xmm1,xmm1
  406770:	vpsubq xmm0,xmm0,xmm1
  406774:	vmovdqa XMMWORD PTR [rip+0x87d4],xmm0        # 40ef50 <__bss_start@@Base+0xdd4>
  40677c:	mov    QWORD PTR [rdi],rsi
  40677f:	lea    rsi,[rip+0x325a]        # 4099e0 <_IO_stdin_used@@Base+0x9e0>
  406786:	mov    rdi,rdx
  406789:	call   403220 <fopen@plt>
  40678e:	mov    QWORD PTR [rbx+0x8],rax
  406792:	mov    QWORD PTR [rbx+0x10],0x0
  40679a:	pop    rbx
  40679b:	ret    
  40679c:	nop    DWORD PTR [rax+0x0]

00000000004067a0 <destroy_generator@@Base>:
  4067a0:	vmovdqa xmm0,XMMWORD PTR [rip+0x87b8]        # 40ef60 <__bss_start@@Base+0xde4>
  4067a8:	vpcmpeqd xmm1,xmm1,xmm1
  4067ac:	vpsubq xmm0,xmm0,xmm1
  4067b0:	vmovdqa XMMWORD PTR [rip+0x87a8],xmm0        # 40ef60 <__bss_start@@Base+0xde4>
  4067b8:	mov    rdi,QWORD PTR [rdi+0x8]
  4067bc:	jmp    4030c0 <fclose@plt>
  4067c1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4067cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004067d0 <generate_code@@Base>:
  4067d0:	push   r14
  4067d2:	push   rbx
  4067d3:	push   rax
  4067d4:	mov    rbx,rdi
  4067d7:	vmovdqa xmm0,XMMWORD PTR [rip+0x8791]        # 40ef70 <__bss_start@@Base+0xdf4>
  4067df:	vpcmpeqd xmm1,xmm1,xmm1
  4067e3:	vpsubq xmm0,xmm0,xmm1
  4067e7:	vmovdqa XMMWORD PTR [rip+0x8781],xmm0        # 40ef70 <__bss_start@@Base+0xdf4>
  4067ef:	mov    rdi,QWORD PTR [rdi]
  4067f2:	call   405bc0 <build_ast@@Base>
  4067f7:	mov    r14,rax
  4067fa:	vmovdqa xmm0,XMMWORD PTR [rip+0x877e]        # 40ef80 <__bss_start@@Base+0xe04>
  406802:	vpsubq xmm0,xmm0,XMMWORD PTR [rip+0x2c26]        # 409430 <_IO_stdin_used@@Base+0x430>
  40680a:	vmovdqa XMMWORD PTR [rip+0x876e],xmm0        # 40ef80 <__bss_start@@Base+0xe04>
  406812:	mov    rcx,QWORD PTR [rbx+0x8]
  406816:	lea    rdi,[rip+0x31c5]        # 4099e2 <_IO_stdin_used@@Base+0x9e2>
  40681d:	mov    esi,0x15
  406822:	mov    edx,0x1
  406827:	call   403260 <fwrite@plt>
  40682c:	mov    rdi,rbx
  40682f:	mov    rsi,r14
  406832:	call   4068a0 <__generate_code_for_main@@Base>
  406837:	mov    rdi,r14
  40683a:	add    rsp,0x8
  40683e:	pop    rbx
  40683f:	pop    r14
  406841:	jmp    405290 <free_node@@Base>
  406846:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000406850 <__generate_code@@Base>:
  406850:	push   r14
  406852:	push   rbx
  406853:	push   rax
  406854:	mov    r14,rsi
  406857:	mov    rbx,rdi
  40685a:	vmovdqa xmm0,XMMWORD PTR [rip+0x871e]        # 40ef80 <__bss_start@@Base+0xe04>
  406862:	vpcmpeqd xmm1,xmm1,xmm1
  406866:	vpsubq xmm0,xmm0,xmm1
  40686a:	vmovdqa XMMWORD PTR [rip+0x870e],xmm0        # 40ef80 <__bss_start@@Base+0xe04>
  406872:	mov    rcx,QWORD PTR [rdi+0x8]
  406876:	lea    rdi,[rip+0x3165]        # 4099e2 <_IO_stdin_used@@Base+0x9e2>
  40687d:	mov    esi,0x15
  406882:	mov    edx,0x1
  406887:	call   403260 <fwrite@plt>
  40688c:	mov    rdi,rbx
  40688f:	mov    rsi,r14
  406892:	add    rsp,0x8
  406896:	pop    rbx
  406897:	pop    r14
  406899:	jmp    4068a0 <__generate_code_for_main@@Base>
  40689e:	xchg   ax,ax

00000000004068a0 <__generate_code_for_main@@Base>:
  4068a0:	push   r14
  4068a2:	push   rbx
  4068a3:	push   rax
  4068a4:	lea    rax,[rip+0x86e5]        # 40ef90 <__bss_start@@Base+0xe14>
  4068ab:	add    QWORD PTR [rip+0x86dd],0x1        # 40ef90 <__bss_start@@Base+0xe14>
  4068b3:	mov    ecx,DWORD PTR [rsi]
  4068b5:	xor    edx,edx
  4068b7:	cmp    ecx,0x2
  4068ba:	setne  dl
  4068bd:	add    QWORD PTR [rax+rdx*8+0x8],0x1
  4068c3:	cmp    ecx,0x2
  4068c6:	jne    406917 <__generate_code_for_main@@Base+0x77>
  4068c8:	mov    rbx,rsi
  4068cb:	mov    r14,rdi
  4068ce:	add    QWORD PTR [rip+0x86d2],0x1        # 40efa8 <__bss_start@@Base+0xe2c>
  4068d6:	vmovdqa xmm0,XMMWORD PTR [rip+0x86d2]        # 40efb0 <__bss_start@@Base+0xe34>
  4068de:	vpcmpeqd xmm1,xmm1,xmm1
  4068e2:	vpsubq xmm0,xmm0,xmm1
  4068e6:	vmovdqa XMMWORD PTR [rip+0x86c2],xmm0        # 40efb0 <__bss_start@@Base+0xe34>
  4068ee:	mov    rdi,QWORD PTR [rdi+0x8]
  4068f2:	mov    rdx,QWORD PTR [rsi+0x10]
  4068f6:	lea    rsi,[rip+0x312a]        # 409a27 <_IO_stdin_used@@Base+0xa27>
  4068fd:	xor    eax,eax
  4068ff:	call   403160 <fprintf@plt>
  406904:	mov    rsi,QWORD PTR [rbx+0x18]
  406908:	mov    rdi,r14
  40690b:	add    rsp,0x8
  40690f:	pop    rbx
  406910:	pop    r14
  406912:	jmp    4069a0 <__generate_code_for_body@@Base>
  406917:	mov    rax,QWORD PTR [rip+0x76d2]        # 40dff0 <stderr@GLIBC_2.2.5>
  40691e:	mov    rcx,QWORD PTR [rax]
  406921:	lea    rdi,[rip+0x30d0]        # 4099f8 <_IO_stdin_used@@Base+0x9f8>
  406928:	mov    esi,0x2e
  40692d:	mov    edx,0x1
  406932:	call   403260 <fwrite@plt>
  406937:	mov    edi,0x1
  40693c:	call   403250 <exit@plt>
  406941:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40694b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406950 <__generate_code_for_function@@Base>:
  406950:	push   r14
  406952:	push   rbx
  406953:	push   rax
  406954:	mov    rbx,rsi
  406957:	mov    r14,rdi
  40695a:	vmovdqa xmm0,XMMWORD PTR [rip+0x864e]        # 40efb0 <__bss_start@@Base+0xe34>
  406962:	vpcmpeqd xmm1,xmm1,xmm1
  406966:	vpsubq xmm0,xmm0,xmm1
  40696a:	vmovdqa XMMWORD PTR [rip+0x863e],xmm0        # 40efb0 <__bss_start@@Base+0xe34>
  406972:	mov    rdi,QWORD PTR [rdi+0x8]
  406976:	mov    rdx,QWORD PTR [rsi+0x10]
  40697a:	lea    rsi,[rip+0x30a6]        # 409a27 <_IO_stdin_used@@Base+0xa27>
  406981:	xor    eax,eax
  406983:	call   403160 <fprintf@plt>
  406988:	mov    rsi,QWORD PTR [rbx+0x18]
  40698c:	mov    rdi,r14
  40698f:	add    rsp,0x8
  406993:	pop    rbx
  406994:	pop    r14
  406996:	jmp    4069a0 <__generate_code_for_body@@Base>
  40699b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004069a0 <__generate_code_for_body@@Base>:
  4069a0:	push   rbp
  4069a1:	push   r15
  4069a3:	push   r14
  4069a5:	push   r13
  4069a7:	push   r12
  4069a9:	push   rbx
  4069aa:	push   rax
  4069ab:	lea    rbp,[rip+0x860e]        # 40efc0 <__bss_start@@Base+0xe44>
  4069b2:	vmovdqa xmm0,XMMWORD PTR [rip+0x8606]        # 40efc0 <__bss_start@@Base+0xe44>
  4069ba:	vpcmpeqd xmm1,xmm1,xmm1
  4069be:	vpsubq xmm0,xmm0,xmm1
  4069c2:	vmovdqa XMMWORD PTR [rip+0x85f6],xmm0        # 40efc0 <__bss_start@@Base+0xe44>
  4069ca:	xor    eax,eax
  4069cc:	test   rsi,rsi
  4069cf:	sete   al
  4069d2:	add    QWORD PTR [rbp+rax*8+0x10],0x1
  4069d8:	test   rsi,rsi
  4069db:	je     406a80 <__generate_code_for_body@@Base+0xe0>
  4069e1:	mov    rbx,rsi
  4069e4:	mov    r14,rdi
  4069e7:	lea    r15,[rip+0x777e]        # 40e16c <__data_start@@Base+0x24>
  4069ee:	lea    r13,[rip+0x7133]        # 40db28 <_IO_stdin_used@@Base+0x4b28>
  4069f5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4069ff:	nop
  406a00:	mov    DWORD PTR [rip+0x7762],0x0        # 40e16c <__data_start@@Base+0x24>
  406a0a:	mov    r12,QWORD PTR [rbx+0x8]
  406a0e:	mov    eax,DWORD PTR [rbx]
  406a10:	cmp    eax,0x4
  406a13:	je     406a40 <__generate_code_for_body@@Base+0xa0>
  406a15:	cmp    eax,0x3
  406a18:	jne    406a97 <__generate_code_for_body@@Base+0xf7>
  406a1a:	mov    rdi,r15
  406a1d:	mov    rsi,r13
  406a20:	call   407070 <__generate_code_for_binary_boolean_expression@@Base+0x270>
  406a25:	add    QWORD PTR [rip+0x85cb],0x1        # 40eff8 <__bss_start@@Base+0xe7c>
  406a2d:	mov    rdi,r14
  406a30:	mov    rsi,rbx
  406a33:	call   406c10 <__generate_code_for_return@@Base>
  406a38:	jmp    406a62 <__generate_code_for_body@@Base+0xc2>
  406a3a:	nop    WORD PTR [rax+rax*1+0x0]
  406a40:	mov    rdi,r15
  406a43:	lea    rsi,[rip+0x70e6]        # 40db30 <_IO_stdin_used@@Base+0x4b30>
  406a4a:	call   407070 <__generate_code_for_binary_boolean_expression@@Base+0x270>
  406a4f:	add    QWORD PTR [rip+0x85a9],0x1        # 40f000 <__bss_start@@Base+0xe84>
  406a57:	mov    rdi,r14
  406a5a:	mov    rsi,rbx
  406a5d:	call   406ae0 <__generate_code_for_if@@Base>
  406a62:	add    QWORD PTR [rip+0x859e],0x1        # 40f008 <__bss_start@@Base+0xe8c>
  406a6a:	xor    eax,eax
  406a6c:	test   r12,r12
  406a6f:	sete   al
  406a72:	add    QWORD PTR [rbp+rax*8+0x10],0x1
  406a78:	mov    rbx,r12
  406a7b:	test   r12,r12
  406a7e:	jne    406a00 <__generate_code_for_body@@Base+0x60>
  406a80:	add    QWORD PTR [rip+0x8588],0x1        # 40f010 <__bss_start@@Base+0xe94>
  406a88:	add    rsp,0x8
  406a8c:	pop    rbx
  406a8d:	pop    r12
  406a8f:	pop    r13
  406a91:	pop    r14
  406a93:	pop    r15
  406a95:	pop    rbp
  406a96:	ret    
  406a97:	lea    rdi,[rip+0x76ce]        # 40e16c <__data_start@@Base+0x24>
  406a9e:	lea    rsi,[rip+0x707b]        # 40db20 <_IO_stdin_used@@Base+0x4b20>
  406aa5:	call   407070 <__generate_code_for_binary_boolean_expression@@Base+0x270>
  406aaa:	mov    rax,QWORD PTR [rip+0x753f]        # 40dff0 <stderr@GLIBC_2.2.5>
  406ab1:	mov    rcx,QWORD PTR [rax]
  406ab4:	lea    rdi,[rip+0x3072]        # 409b2d <_IO_stdin_used@@Base+0xb2d>
  406abb:	mov    esi,0x34
  406ac0:	mov    edx,0x1
  406ac5:	call   403260 <fwrite@plt>
  406aca:	mov    edi,0x1
  406acf:	call   403250 <exit@plt>
  406ad4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406ade:	xchg   ax,ax

0000000000406ae0 <__generate_code_for_if@@Base>:
  406ae0:	push   r15
  406ae2:	push   r14
  406ae4:	push   rbx
  406ae5:	add    QWORD PTR [rip+0x8533],0x1        # 40f020 <__bss_start@@Base+0xea4>
  406aed:	mov    r14,rsi
  406af0:	mov    rbx,rdi
  406af3:	mov    r15,QWORD PTR [rdi+0x10]
  406af7:	lea    rax,[r15+0x1]
  406afb:	mov    QWORD PTR [rdi+0x10],rax
  406aff:	mov    rsi,QWORD PTR [rsi+0x10]
  406b03:	lea    rax,[rip+0x8546]        # 40f050 <__bss_start@@Base+0xed4>
  406b0a:	add    QWORD PTR [rip+0x853e],0x1        # 40f050 <__bss_start@@Base+0xed4>
  406b12:	mov    ecx,DWORD PTR [rsi+0x20]
  406b15:	xor    edx,edx
  406b17:	cmp    ecx,0x8
  406b1a:	setne  dl
  406b1d:	add    QWORD PTR [rax+rdx*8+0x8],0x1
  406b23:	cmp    ecx,0x8
  406b26:	jne    406b3d <__generate_code_for_if@@Base+0x5d>
  406b28:	add    QWORD PTR [rip+0x8538],0x1        # 40f068 <__bss_start@@Base+0xeec>
  406b30:	mov    rdi,rbx
  406b33:	mov    rdx,r15
  406b36:	call   406d10 <__generate_code_for_unary_boolean_expression@@Base>
  406b3b:	jmp    406b50 <__generate_code_for_if@@Base+0x70>
  406b3d:	add    QWORD PTR [rip+0x852b],0x1        # 40f070 <__bss_start@@Base+0xef4>
  406b45:	mov    rdi,rbx
  406b48:	mov    rdx,r15
  406b4b:	call   406e00 <__generate_code_for_binary_boolean_expression@@Base>
  406b50:	add    QWORD PTR [rip+0x8520],0x1        # 40f078 <__bss_start@@Base+0xefc>
  406b58:	mov    rsi,QWORD PTR [r14+0x18]
  406b5c:	mov    rdi,rbx
  406b5f:	call   4069a0 <__generate_code_for_body@@Base>
  406b64:	mov    rdi,QWORD PTR [rbx+0x8]
  406b68:	lea    rsi,[rip+0x2ebd]        # 409a2c <_IO_stdin_used@@Base+0xa2c>
  406b6f:	xor    eax,eax
  406b71:	mov    rdx,r15
  406b74:	call   403160 <fprintf@plt>
  406b79:	mov    rsi,QWORD PTR [r14+0x20]
  406b7d:	xor    eax,eax
  406b7f:	test   rsi,rsi
  406b82:	sete   al
  406b85:	lea    rcx,[rip+0x8494]        # 40f020 <__bss_start@@Base+0xea4>
  406b8c:	add    QWORD PTR [rcx+rax*8+0x8],0x1
  406b92:	test   rsi,rsi
  406b95:	je     406ba7 <__generate_code_for_if@@Base+0xc7>
  406b97:	add    QWORD PTR [rip+0x8499],0x1        # 40f038 <__bss_start@@Base+0xebc>
  406b9f:	mov    rdi,rbx
  406ba2:	call   4069a0 <__generate_code_for_body@@Base>
  406ba7:	add    QWORD PTR [rip+0x8491],0x1        # 40f040 <__bss_start@@Base+0xec4>
  406baf:	pop    rbx
  406bb0:	pop    r14
  406bb2:	pop    r15
  406bb4:	ret    
  406bb5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406bbf:	nop

0000000000406bc0 <__generate_code_for_if_expression@@Base>:
  406bc0:	push   rax
  406bc1:	lea    r8,[rip+0x8488]        # 40f050 <__bss_start@@Base+0xed4>
  406bc8:	add    QWORD PTR [rip+0x8480],0x1        # 40f050 <__bss_start@@Base+0xed4>
  406bd0:	mov    ecx,DWORD PTR [rsi+0x20]
  406bd3:	xor    eax,eax
  406bd5:	cmp    ecx,0x8
  406bd8:	setne  al
  406bdb:	add    QWORD PTR [r8+rax*8+0x8],0x1
  406be1:	cmp    ecx,0x8
  406be4:	jne    406bf5 <__generate_code_for_if_expression@@Base+0x35>
  406be6:	add    QWORD PTR [rip+0x847a],0x1        # 40f068 <__bss_start@@Base+0xeec>
  406bee:	call   406d10 <__generate_code_for_unary_boolean_expression@@Base>
  406bf3:	jmp    406c02 <__generate_code_for_if_expression@@Base+0x42>
  406bf5:	add    QWORD PTR [rip+0x8473],0x1        # 40f070 <__bss_start@@Base+0xef4>
  406bfd:	call   406e00 <__generate_code_for_binary_boolean_expression@@Base>
  406c02:	add    QWORD PTR [rip+0x846e],0x1        # 40f078 <__bss_start@@Base+0xefc>
  406c0a:	pop    rax
  406c0b:	ret    
  406c0c:	nop    DWORD PTR [rax+0x0]

0000000000406c10 <__generate_code_for_return@@Base>:
  406c10:	push   r15
  406c12:	push   r14
  406c14:	push   rbx
  406c15:	mov    rbx,rdi
  406c18:	lea    r15,[rip+0x8461]        # 40f080 <__bss_start@@Base+0xf04>
  406c1f:	add    QWORD PTR [rip+0x8459],0x1        # 40f080 <__bss_start@@Base+0xf04>
  406c27:	mov    r14,QWORD PTR [rsi+0x10]
  406c2b:	mov    rcx,QWORD PTR [rdi+0x8]
  406c2f:	lea    rdi,[rip+0x2e05]        # 409a3b <_IO_stdin_used@@Base+0xa3b>
  406c36:	mov    esi,0x9
  406c3b:	mov    edx,0x1
  406c40:	call   403260 <fwrite@plt>
  406c45:	mov    eax,DWORD PTR [r14]
  406c48:	xor    ecx,ecx
  406c4a:	cmp    eax,0x1
  406c4d:	setne  cl
  406c50:	add    QWORD PTR [r15+rcx*8+0x8],0x1
  406c56:	cmp    eax,0x1
  406c59:	jne    406cb0 <__generate_code_for_return@@Base+0xa0>
  406c5b:	add    QWORD PTR [rip+0x8435],0x1        # 40f098 <__bss_start@@Base+0xf1c>
  406c63:	vmovdqa xmm0,XMMWORD PTR [rip+0x8435]        # 40f0a0 <__bss_start@@Base+0xf24>
  406c6b:	vpcmpeqd xmm1,xmm1,xmm1
  406c6f:	vpsubq xmm0,xmm0,xmm1
  406c73:	vmovdqa XMMWORD PTR [rip+0x8425],xmm0        # 40f0a0 <__bss_start@@Base+0xf24>
  406c7b:	mov    rdi,QWORD PTR [rbx+0x8]
  406c7f:	mov    edx,DWORD PTR [r14+0x10]
  406c83:	lea    rsi,[rip+0x2dea]        # 409a74 <_IO_stdin_used@@Base+0xa74>
  406c8a:	xor    eax,eax
  406c8c:	call   403160 <fprintf@plt>
  406c91:	mov    rcx,QWORD PTR [rbx+0x8]
  406c95:	lea    rdi,[rip+0x2dcf]        # 409a6b <_IO_stdin_used@@Base+0xa6b>
  406c9c:	mov    esi,0x8
  406ca1:	mov    edx,0x1
  406ca6:	pop    rbx
  406ca7:	pop    r14
  406ca9:	pop    r15
  406cab:	jmp    403260 <fwrite@plt>
  406cb0:	mov    rax,QWORD PTR [rip+0x7339]        # 40dff0 <stderr@GLIBC_2.2.5>
  406cb7:	mov    rcx,QWORD PTR [rax]
  406cba:	lea    rdi,[rip+0x2d84]        # 409a45 <_IO_stdin_used@@Base+0xa45>
  406cc1:	mov    esi,0x25
  406cc6:	mov    edx,0x1
  406ccb:	call   403260 <fwrite@plt>
  406cd0:	mov    edi,0x1
  406cd5:	call   403250 <exit@plt>
  406cda:	nop    WORD PTR [rax+rax*1+0x0]

0000000000406ce0 <__generate_code_for_int@@Base>:
  406ce0:	vmovdqa xmm0,XMMWORD PTR [rip+0x83b8]        # 40f0a0 <__bss_start@@Base+0xf24>
  406ce8:	vpcmpeqd xmm1,xmm1,xmm1
  406cec:	vpsubq xmm0,xmm0,xmm1
  406cf0:	vmovdqa XMMWORD PTR [rip+0x83a8],xmm0        # 40f0a0 <__bss_start@@Base+0xf24>
  406cf8:	mov    rdi,QWORD PTR [rdi+0x8]
  406cfc:	mov    edx,DWORD PTR [rsi+0x10]
  406cff:	lea    rsi,[rip+0x2d6e]        # 409a74 <_IO_stdin_used@@Base+0xa74>
  406d06:	xor    eax,eax
  406d08:	jmp    403160 <fprintf@plt>
  406d0d:	nop    DWORD PTR [rax]

0000000000406d10 <__generate_code_for_unary_boolean_expression@@Base>:
  406d10:	push   r15
  406d12:	push   r14
  406d14:	push   r13
  406d16:	push   r12
  406d18:	push   rbx
  406d19:	mov    r14,rdx
  406d1c:	mov    r15,rsi
  406d1f:	mov    rbx,rdi
  406d22:	lea    r12,[rip+0x8387]        # 40f0b0 <__bss_start@@Base+0xf34>
  406d29:	add    QWORD PTR [rip+0x837f],0x1        # 40f0b0 <__bss_start@@Base+0xf34>
  406d31:	mov    r13,QWORD PTR [rsi+0x10]
  406d35:	mov    rcx,QWORD PTR [rdi+0x8]
  406d39:	lea    rdi,[rip+0x2de1]        # 409b21 <_IO_stdin_used@@Base+0xb21>
  406d40:	mov    esi,0xb
  406d45:	mov    edx,0x1
  406d4a:	call   403260 <fwrite@plt>
  406d4f:	mov    rcx,QWORD PTR [rbx+0x8]
  406d53:	lea    rdi,[rip+0x2d1e]        # 409a78 <_IO_stdin_used@@Base+0xa78>
  406d5a:	mov    esi,0x9
  406d5f:	mov    edx,0x1
  406d64:	call   403260 <fwrite@plt>
  406d69:	vmovdqa xmm0,XMMWORD PTR [rip+0x832f]        # 40f0a0 <__bss_start@@Base+0xf24>
  406d71:	vpcmpeqd xmm1,xmm1,xmm1
  406d75:	vpsubq xmm0,xmm0,xmm1
  406d79:	vmovdqa XMMWORD PTR [rip+0x831f],xmm0        # 40f0a0 <__bss_start@@Base+0xf24>
  406d81:	mov    rdi,QWORD PTR [rbx+0x8]
  406d85:	mov    edx,DWORD PTR [r13+0x10]
  406d89:	lea    rsi,[rip+0x2ce4]        # 409a74 <_IO_stdin_used@@Base+0xa74>
  406d90:	xor    eax,eax
  406d92:	call   403160 <fprintf@plt>
  406d97:	mov    eax,DWORD PTR [r15+0x20]
  406d9b:	xor    ecx,ecx
  406d9d:	cmp    eax,0x8
  406da0:	setne  cl
  406da3:	add    QWORD PTR [r12+rcx*8+0x8],0x1
  406da9:	cmp    eax,0x8
  406dac:	jne    406dd4 <__generate_code_for_unary_boolean_expression@@Base+0xc4>
  406dae:	add    QWORD PTR [rip+0x8312],0x1        # 40f0c8 <__bss_start@@Base+0xf4c>
  406db6:	mov    rdi,QWORD PTR [rbx+0x8]
  406dba:	lea    rsi,[rip+0x2ce1]        # 409aa2 <_IO_stdin_used@@Base+0xaa2>
  406dc1:	xor    eax,eax
  406dc3:	mov    rdx,r14
  406dc6:	pop    rbx
  406dc7:	pop    r12
  406dc9:	pop    r13
  406dcb:	pop    r14
  406dcd:	pop    r15
  406dcf:	jmp    403160 <fprintf@plt>
  406dd4:	mov    rax,QWORD PTR [rip+0x7215]        # 40dff0 <stderr@GLIBC_2.2.5>
  406ddb:	mov    rcx,QWORD PTR [rax]
  406dde:	lea    rdi,[rip+0x2d1c]        # 409b01 <_IO_stdin_used@@Base+0xb01>
  406de5:	mov    esi,0x1f
  406dea:	mov    edx,0x1
  406def:	call   403260 <fwrite@plt>
  406df4:	mov    edi,0x1
  406df9:	call   403250 <exit@plt>
  406dfe:	xchg   ax,ax

0000000000406e00 <__generate_code_for_binary_boolean_expression@@Base>:
  406e00:	push   r15
  406e02:	push   r14
  406e04:	push   r13
  406e06:	push   r12
  406e08:	push   rbx
  406e09:	add    QWORD PTR [rip+0x82bf],0x1        # 40f0d0 <__bss_start@@Base+0xf54>
  406e11:	mov    r14,rdx
  406e14:	mov    r15,rsi
  406e17:	mov    rbx,rdi
  406e1a:	mov    DWORD PTR [rip+0x734c],0x0        # 40e170 <__data_start@@Base+0x28>
  406e24:	mov    r12,QWORD PTR [rsi+0x10]
  406e28:	mov    r13,QWORD PTR [rsi+0x18]
  406e2c:	mov    rcx,QWORD PTR [rdi+0x8]
  406e30:	lea    rdi,[rip+0x2c04]        # 409a3b <_IO_stdin_used@@Base+0xa3b>
  406e37:	mov    esi,0x9
  406e3c:	mov    edx,0x1
  406e41:	call   403260 <fwrite@plt>
  406e46:	vmovdqa xmm0,XMMWORD PTR [rip+0x8252]        # 40f0a0 <__bss_start@@Base+0xf24>
  406e4e:	vpcmpeqd xmm1,xmm1,xmm1
  406e52:	vpsubq xmm0,xmm0,xmm1
  406e56:	vmovdqa XMMWORD PTR [rip+0x8242],xmm0        # 40f0a0 <__bss_start@@Base+0xf24>
  406e5e:	mov    rdi,QWORD PTR [rbx+0x8]
  406e62:	mov    edx,DWORD PTR [r12+0x10]
  406e67:	lea    r12,[rip+0x2c06]        # 409a74 <_IO_stdin_used@@Base+0xa74>
  406e6e:	xor    eax,eax
  406e70:	mov    rsi,r12
  406e73:	call   403160 <fprintf@plt>
  406e78:	mov    rsi,QWORD PTR [rbx+0x8]
  406e7c:	mov    edi,0xa
  406e81:	call   403150 <fputc@plt>
  406e86:	mov    rcx,QWORD PTR [rbx+0x8]
  406e8a:	lea    rdi,[rip+0x2be7]        # 409a78 <_IO_stdin_used@@Base+0xa78>
  406e91:	mov    esi,0x9
  406e96:	mov    edx,0x1
  406e9b:	call   403260 <fwrite@plt>
  406ea0:	vmovdqa xmm0,XMMWORD PTR [rip+0x81f8]        # 40f0a0 <__bss_start@@Base+0xf24>
  406ea8:	vpsubq xmm0,xmm0,XMMWORD PTR [rip+0x2580]        # 409430 <_IO_stdin_used@@Base+0x430>
  406eb0:	vmovdqa XMMWORD PTR [rip+0x81e8],xmm0        # 40f0a0 <__bss_start@@Base+0xf24>
  406eb8:	mov    rdi,QWORD PTR [rbx+0x8]
  406ebc:	mov    edx,DWORD PTR [r13+0x10]
  406ec0:	xor    eax,eax
  406ec2:	mov    rsi,r12
  406ec5:	call   403160 <fprintf@plt>
  406eca:	mov    rsi,QWORD PTR [rbx+0x8]
  406ece:	mov    edi,0xa
  406ed3:	call   403150 <fputc@plt>
  406ed8:	mov    rcx,QWORD PTR [rbx+0x8]
  406edc:	lea    rdi,[rip+0x2b9f]        # 409a82 <_IO_stdin_used@@Base+0xa82>
  406ee3:	mov    esi,0xc
  406ee8:	mov    edx,0x1
  406eed:	call   403260 <fwrite@plt>
  406ef2:	mov    eax,DWORD PTR [r15+0x20]
  406ef6:	cmp    rax,0x7
  406efa:	ja     407033 <__generate_code_for_binary_boolean_expression@@Base+0x233>
  406f00:	lea    rcx,[rip+0x2ab9]        # 4099c0 <_IO_stdin_used@@Base+0x9c0>
  406f07:	movsxd rax,DWORD PTR [rcx+rax*4]
  406f0b:	add    rax,rcx
  406f0e:	jmp    rax
  406f10:	lea    rdi,[rip+0x7259]        # 40e170 <__data_start@@Base+0x28>
  406f17:	lea    rsi,[rip+0x6c2a]        # 40db48 <_IO_stdin_used@@Base+0x4b48>
  406f1e:	call   407070 <__generate_code_for_binary_boolean_expression@@Base+0x270>
  406f23:	add    QWORD PTR [rip+0x81f5],0x1        # 40f120 <__bss_start@@Base+0xfa4>
  406f2b:	mov    rdi,QWORD PTR [rbx+0x8]
  406f2f:	lea    rsi,[rip+0x2b59]        # 409a8f <_IO_stdin_used@@Base+0xa8f>
  406f36:	jmp    407004 <__generate_code_for_binary_boolean_expression@@Base+0x204>
  406f3b:	lea    rdi,[rip+0x722e]        # 40e170 <__data_start@@Base+0x28>
  406f42:	lea    rsi,[rip+0x6c0f]        # 40db58 <_IO_stdin_used@@Base+0x4b58>
  406f49:	call   407070 <__generate_code_for_binary_boolean_expression@@Base+0x270>
  406f4e:	add    QWORD PTR [rip+0x81da],0x1        # 40f130 <__bss_start@@Base+0xfb4>
  406f56:	mov    rdi,QWORD PTR [rbx+0x8]
  406f5a:	lea    rsi,[rip+0x2b54]        # 409ab5 <_IO_stdin_used@@Base+0xab5>
  406f61:	jmp    407004 <__generate_code_for_binary_boolean_expression@@Base+0x204>
  406f66:	lea    rdi,[rip+0x7203]        # 40e170 <__data_start@@Base+0x28>
  406f6d:	lea    rsi,[rip+0x6bdc]        # 40db50 <_IO_stdin_used@@Base+0x4b50>
  406f74:	call   407070 <__generate_code_for_binary_boolean_expression@@Base+0x270>
  406f79:	add    QWORD PTR [rip+0x81a7],0x1        # 40f128 <__bss_start@@Base+0xfac>
  406f81:	mov    rdi,QWORD PTR [rbx+0x8]
  406f85:	lea    rsi,[rip+0x2b16]        # 409aa2 <_IO_stdin_used@@Base+0xaa2>
  406f8c:	jmp    407004 <__generate_code_for_binary_boolean_expression@@Base+0x204>
  406f8e:	lea    rdi,[rip+0x71db]        # 40e170 <__data_start@@Base+0x28>
  406f95:	lea    rsi,[rip+0x6bdc]        # 40db78 <_IO_stdin_used@@Base+0x4b78>
  406f9c:	call   407070 <__generate_code_for_binary_boolean_expression@@Base+0x270>
  406fa1:	add    QWORD PTR [rip+0x819f],0x1        # 40f148 <__bss_start@@Base+0xfcc>
  406fa9:	mov    rdi,QWORD PTR [rbx+0x8]
  406fad:	lea    rsi,[rip+0x2b3a]        # 409aee <_IO_stdin_used@@Base+0xaee>
  406fb4:	jmp    407004 <__generate_code_for_binary_boolean_expression@@Base+0x204>
  406fb6:	lea    rdi,[rip+0x71b3]        # 40e170 <__data_start@@Base+0x28>
  406fbd:	lea    rsi,[rip+0x6b9c]        # 40db60 <_IO_stdin_used@@Base+0x4b60>
  406fc4:	call   407070 <__generate_code_for_binary_boolean_expression@@Base+0x270>
  406fc9:	add    QWORD PTR [rip+0x8167],0x1        # 40f138 <__bss_start@@Base+0xfbc>
  406fd1:	mov    rdi,QWORD PTR [rbx+0x8]
  406fd5:	lea    rsi,[rip+0x2aec]        # 409ac8 <_IO_stdin_used@@Base+0xac8>
  406fdc:	jmp    407004 <__generate_code_for_binary_boolean_expression@@Base+0x204>
  406fde:	lea    rdi,[rip+0x718b]        # 40e170 <__data_start@@Base+0x28>
  406fe5:	lea    rsi,[rip+0x6b84]        # 40db70 <_IO_stdin_used@@Base+0x4b70>
  406fec:	call   407070 <__generate_code_for_binary_boolean_expression@@Base+0x270>
  406ff1:	add    QWORD PTR [rip+0x8147],0x1        # 40f140 <__bss_start@@Base+0xfc4>
  406ff9:	mov    rdi,QWORD PTR [rbx+0x8]
  406ffd:	lea    rsi,[rip+0x2ad7]        # 409adb <_IO_stdin_used@@Base+0xadb>
  407004:	xor    eax,eax
  407006:	mov    rdx,r14
  407009:	call   403160 <fprintf@plt>
  40700e:	lea    rdi,[rip+0x715b]        # 40e170 <__data_start@@Base+0x28>
  407015:	lea    rsi,[rip+0x6b4c]        # 40db68 <_IO_stdin_used@@Base+0x4b68>
  40701c:	call   407070 <__generate_code_for_binary_boolean_expression@@Base+0x270>
  407021:	add    QWORD PTR [rip+0x8127],0x1        # 40f150 <__bss_start@@Base+0xfd4>
  407029:	pop    rbx
  40702a:	pop    r12
  40702c:	pop    r13
  40702e:	pop    r14
  407030:	pop    r15
  407032:	ret    
  407033:	lea    rdi,[rip+0x7136]        # 40e170 <__data_start@@Base+0x28>
  40703a:	lea    rsi,[rip+0x6aff]        # 40db40 <_IO_stdin_used@@Base+0x4b40>
  407041:	call   407070 <__generate_code_for_binary_boolean_expression@@Base+0x270>
  407046:	mov    rax,QWORD PTR [rip+0x6fa3]        # 40dff0 <stderr@GLIBC_2.2.5>
  40704d:	mov    rcx,QWORD PTR [rax]
  407050:	lea    rdi,[rip+0x2aaa]        # 409b01 <_IO_stdin_used@@Base+0xb01>
  407057:	mov    esi,0x1f
  40705c:	mov    edx,0x1
  407061:	call   403260 <fwrite@plt>
  407066:	mov    edi,0x1
  40706b:	call   403250 <exit@plt>
  407070:	mov    eax,DWORD PTR [rdi]
  407072:	mov    ecx,0xffffffff
  407077:	cmp    rax,rcx
  40707a:	je     407089 <__generate_code_for_binary_boolean_expression@@Base+0x289>
  40707c:	mov    rax,QWORD PTR [rsi+rax*8]
  407080:	test   rax,rax
  407083:	je     407089 <__generate_code_for_binary_boolean_expression@@Base+0x289>
  407085:	add    QWORD PTR [rax],0x1
  407089:	ret    
  40708a:	nop    WORD PTR [rax+rax*1+0x0]
  407090:	push   r15
  407092:	push   r14
  407094:	push   rbx
  407095:	lea    rdi,[rip+0x2af4]        # 409b90 <_IO_stdin_used@@Base+0xb90>
  40709c:	lea    rsi,[rip+0x2014]        # 4090b7 <_IO_stdin_used@@Base+0xb7>
  4070a3:	mov    edx,0x8448ad5
  4070a8:	call   407200 <__generate_code_for_binary_boolean_expression@@Base+0x400>
  4070ad:	xor    ebx,ebx
  4070af:	lea    r14,[rip+0x6aca]        # 40db80 <_IO_stdin_used@@Base+0x4b80>
  4070b6:	lea    r15,[rip+0x6c63]        # 40dd20 <_IO_stdin_used@@Base+0x4d20>
  4070bd:	nop    DWORD PTR [rax]
  4070c0:	mov    edi,DWORD PTR [r14+rbx*2]
  4070c4:	mov    rsi,QWORD PTR [r14+rbx*2+0x8]
  4070c9:	mov    edx,DWORD PTR [r14+rbx*2+0x10]
  4070ce:	mov    r8d,DWORD PTR [r14+rbx*2+0x18]
  4070d3:	mov    ecx,DWORD PTR [r14+rbx*2+0x14]
  4070d8:	call   407650 <__generate_code_for_binary_boolean_expression@@Base+0x850>
  4070dd:	mov    edi,DWORD PTR [rbx+r15*1]
  4070e1:	mov    rsi,QWORD PTR [rbx+r15*1+0x8]
  4070e6:	call   407a80 <__generate_code_for_binary_boolean_expression@@Base+0xc80>
  4070eb:	add    rbx,0x10
  4070ef:	cmp    rbx,0xd0
  4070f6:	jne    4070c0 <__generate_code_for_binary_boolean_expression@@Base+0x2c0>
  4070f8:	call   407ea0 <__generate_code_for_binary_boolean_expression@@Base+0x10a0>
  4070fd:	pop    rbx
  4070fe:	pop    r14
  407100:	pop    r15
  407102:	jmp    408640 <__generate_code_for_binary_boolean_expression@@Base+0x1840>
  407107:	nop    WORD PTR [rax+rax*1+0x0]
  407110:	push   rax
  407111:	call   407090 <__generate_code_for_binary_boolean_expression@@Base+0x290>
  407116:	vxorps xmm0,xmm0,xmm0
  40711a:	vmovaps XMMWORD PTR [rip+0x7e2e],xmm0        # 40ef50 <__bss_start@@Base+0xdd4>
  407122:	vmovaps XMMWORD PTR [rip+0x7e36],xmm0        # 40ef60 <__bss_start@@Base+0xde4>
  40712a:	vmovaps XMMWORD PTR [rip+0x7e3e],xmm0        # 40ef70 <__bss_start@@Base+0xdf4>
  407132:	vmovaps XMMWORD PTR [rip+0x7e46],xmm0        # 40ef80 <__bss_start@@Base+0xe04>
  40713a:	vxorps xmm1,xmm1,xmm1
  40713e:	vmovups YMMWORD PTR [rip+0x7e4a],ymm1        # 40ef90 <__bss_start@@Base+0xe14>
  407146:	vmovaps XMMWORD PTR [rip+0x7e62],xmm0        # 40efb0 <__bss_start@@Base+0xe34>
  40714e:	vmovups YMMWORD PTR [rip+0x7ea2],ymm1        # 40eff8 <__bss_start@@Base+0xe7c>
  407156:	vmovups YMMWORD PTR [rip+0x7e82],ymm1        # 40efe0 <__bss_start@@Base+0xe64>
  40715e:	vmovups YMMWORD PTR [rip+0x7e5a],ymm1        # 40efc0 <__bss_start@@Base+0xe44>
  407166:	vmovups YMMWORD PTR [rip+0x7eb2],ymm1        # 40f020 <__bss_start@@Base+0xea4>
  40716e:	vmovups YMMWORD PTR [rip+0x7eea],ymm1        # 40f060 <__bss_start@@Base+0xee4>
  407176:	vmovups YMMWORD PTR [rip+0x7ed2],ymm1        # 40f050 <__bss_start@@Base+0xed4>
  40717e:	vmovups YMMWORD PTR [rip+0x7efa],ymm1        # 40f080 <__bss_start@@Base+0xf04>
  407186:	vmovaps XMMWORD PTR [rip+0x7f12],xmm0        # 40f0a0 <__bss_start@@Base+0xf24>
  40718e:	vmovups YMMWORD PTR [rip+0x7f1a],ymm1        # 40f0b0 <__bss_start@@Base+0xf34>
  407196:	vmovups YMMWORD PTR [rip+0x7f92],ymm1        # 40f130 <__bss_start@@Base+0xfb4>
  40719e:	vmovups YMMWORD PTR [rip+0x7f2a],ymm1        # 40f0d0 <__bss_start@@Base+0xf54>
  4071a6:	mov    QWORD PTR [rip+0x7e8f],0x0        # 40f040 <__bss_start@@Base+0xec4>
  4071b1:	vmovups YMMWORD PTR [rip+0x7f57],ymm1        # 40f110 <__bss_start@@Base+0xf94>
  4071b9:	vmovups YMMWORD PTR [rip+0x7f2f],ymm1        # 40f0f0 <__bss_start@@Base+0xf74>
  4071c1:	mov    QWORD PTR [rip+0x7f84],0x0        # 40f150 <__bss_start@@Base+0xfd4>
  4071cc:	pop    rax
  4071cd:	vzeroupper 
  4071d0:	ret    
  4071d1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4071db:	nop    DWORD PTR [rax+rax*1+0x0]
  4071e0:	lea    rdi,[rip+0xfffffffffffffea9]        # 407090 <__generate_code_for_binary_boolean_expression@@Base+0x290>
  4071e7:	lea    rsi,[rip+0xffffffffffffff22]        # 407110 <__generate_code_for_binary_boolean_expression@@Base+0x310>
  4071ee:	jmp    408a00 <__gcov_flush@@Base+0xa0>
  4071f3:	nop
  4071f4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4071fe:	xchg   ax,ax
  407200:	push   rbp
  407201:	push   r15
  407203:	push   r14
  407205:	push   r13
  407207:	push   r12
  407209:	push   rbx
  40720a:	sub    rsp,0x18
  40720e:	mov    r14d,edx
  407211:	mov    r15,rsi
  407214:	mov    r12,rdi
  407217:	lea    rdi,[rsp+0xc]
  40721c:	lea    rsi,[rsp+0x10]
  407221:	call   408d40 <__gcov_flush@@Base+0x3e0>
  407226:	test   rax,rax
  407229:	je     407263 <__generate_code_for_binary_boolean_expression@@Base+0x463>
  40722b:	mov    rbx,rax
  40722e:	mov    r13,QWORD PTR [rsp+0x10]
  407233:	mov    rdi,r12
  407236:	call   4030e0 <strlen@plt>
  40723b:	lea    rdi,[rax+r13*1]
  40723f:	add    rdi,0x2
  407243:	call   4031b0 <malloc@plt>
  407248:	mov    rbp,rax
  40724b:	mov    r8d,DWORD PTR [rsp+0xc]
  407250:	mov    rdi,rax
  407253:	mov    rsi,r12
  407256:	mov    rdx,rbx
  407259:	mov    rcx,r13
  40725c:	call   408dd0 <__gcov_flush@@Base+0x470>
  407261:	jmp    40726e <__generate_code_for_binary_boolean_expression@@Base+0x46e>
  407263:	mov    rdi,r12
  407266:	call   403270 <strdup@plt>
  40726b:	mov    rbp,rax
  40726e:	mov    QWORD PTR [rip+0x7ee3],rbp        # 40f158 <__bss_start@@Base+0xfdc>
  407275:	mov    BYTE PTR [rip+0x7ee4],0x0        # 40f160 <__bss_start@@Base+0xfe4>
  40727c:	mov    esi,0x2
  407281:	xor    eax,eax
  407283:	mov    rdi,rbp
  407286:	call   403210 <open@plt>
  40728b:	mov    DWORD PTR [rip+0x6ee3],eax        # 40e174 <__data_start@@Base+0x2c>
  407291:	cmp    eax,0xffffffff
  407294:	je     40729f <__generate_code_for_binary_boolean_expression@@Base+0x49f>
  407296:	lea    rbx,[rip+0x2ad1]        # 409d6e <_IO_stdin_used@@Base+0xd6e>
  40729d:	jmp    407303 <__generate_code_for_binary_boolean_expression@@Base+0x503>
  40729f:	mov    BYTE PTR [rip+0x7eba],0x1        # 40f160 <__bss_start@@Base+0xfe4>
  4072a6:	mov    rdi,QWORD PTR [rip+0x7eab]        # 40f158 <__bss_start@@Base+0xfdc>
  4072ad:	mov    esi,0x42
  4072b2:	mov    edx,0x1a4
  4072b7:	xor    eax,eax
  4072b9:	call   403210 <open@plt>
  4072be:	mov    DWORD PTR [rip+0x6eb0],eax        # 40e174 <__data_start@@Base+0x2c>
  4072c4:	lea    rbx,[rip+0x2aa7]        # 409d72 <_IO_stdin_used@@Base+0xd72>
  4072cb:	cmp    eax,0xffffffff
  4072ce:	jne    407303 <__generate_code_for_binary_boolean_expression@@Base+0x503>
  4072d0:	mov    rdi,QWORD PTR [rip+0x7e81]        # 40f158 <__bss_start@@Base+0xfdc>
  4072d7:	call   408af0 <__gcov_flush@@Base+0x190>
  4072dc:	mov    rdi,QWORD PTR [rip+0x7e75]        # 40f158 <__bss_start@@Base+0xfdc>
  4072e3:	mov    esi,0x42
  4072e8:	mov    edx,0x1a4
  4072ed:	xor    eax,eax
  4072ef:	call   403210 <open@plt>
  4072f4:	mov    DWORD PTR [rip+0x6e7a],eax        # 40e174 <__data_start@@Base+0x2c>
  4072fa:	cmp    eax,0xffffffff
  4072fd:	je     4075f9 <__generate_code_for_binary_boolean_expression@@Base+0x7f9>
  407303:	mov    edi,eax
  407305:	call   408bb0 <__gcov_flush@@Base+0x250>
  40730a:	mov    edi,DWORD PTR [rip+0x6e64]        # 40e174 <__data_start@@Base+0x2c>
  407310:	mov    rsi,rbx
  407313:	call   4031f0 <fdopen@plt>
  407318:	mov    QWORD PTR [rip+0x7e49],rax        # 40f168 <__bss_start@@Base+0xfec>
  40731f:	mov    QWORD PTR [rip+0x7e46],0x0        # 40f170 <__bss_start@@Base+0xff4>
  40732a:	mov    QWORD PTR [rip+0x7e43],0x0        # 40f178 <__bss_start@@Base+0xffc>
  407335:	mov    QWORD PTR [rip+0x7e40],0x0        # 40f180 <__bss_start@@Base+0x1004>
  407340:	cmp    BYTE PTR [rip+0x7e19],0x1        # 40f160 <__bss_start@@Base+0xfe4>
  407347:	jne    407377 <__generate_code_for_binary_boolean_expression@@Base+0x577>
  407349:	mov    edi,0x20000
  40734e:	call   4031b0 <malloc@plt>
  407353:	mov    r12,rax
  407356:	mov    QWORD PTR [rip+0x7e13],rax        # 40f170 <__bss_start@@Base+0xff4>
  40735d:	mov    QWORD PTR [rip+0x7e10],0x20000        # 40f178 <__bss_start@@Base+0xffc>
  407368:	xor    esi,esi
  40736a:	mov    edx,0x20000
  40736f:	mov    rdi,rax
  407372:	jmp    407493 <__generate_code_for_binary_boolean_expression@@Base+0x693>
  407377:	xor    esi,esi
  407379:	mov    edx,0x2
  40737e:	mov    rdi,rax
  407381:	call   4031d0 <fseek@plt>
  407386:	mov    rdi,QWORD PTR [rip+0x7ddb]        # 40f168 <__bss_start@@Base+0xfec>
  40738d:	call   403170 <ftell@plt>
  407392:	mov    QWORD PTR [rip+0x7e07],rax        # 40f1a0 <__bss_start@@Base+0x1024>
  407399:	test   rax,rax
  40739c:	je     407430 <__generate_code_for_binary_boolean_expression@@Base+0x630>
  4073a2:	mov    r8d,DWORD PTR [rip+0x6dcb]        # 40e174 <__data_start@@Base+0x2c>
  4073a9:	xor    edi,edi
  4073ab:	mov    edx,0x3
  4073b0:	mov    ecx,0x1
  4073b5:	xor    r9d,r9d
  4073b8:	mov    rsi,rax
  4073bb:	call   4030f0 <mmap@plt>
  4073c0:	mov    QWORD PTR [rip+0x7da9],rax        # 40f170 <__bss_start@@Base+0xff4>
  4073c7:	cmp    rax,0xffffffffffffffff
  4073cb:	je     4073fc <__generate_code_for_binary_boolean_expression@@Base+0x5fc>
  4073cd:	mov    r12,rax
  4073d0:	cmp    BYTE PTR [rip+0x7d89],0x0        # 40f160 <__bss_start@@Base+0xfe4>
  4073d7:	jne    407498 <__generate_code_for_binary_boolean_expression@@Base+0x698>
  4073dd:	mov    rbx,QWORD PTR [rip+0x7d9c]        # 40f180 <__bss_start@@Base+0x1004>
  4073e4:	mov    DWORD PTR [r12+rbx*1],0x67636461
  4073ec:	add    rbx,0x4
  4073f0:	mov    QWORD PTR [rip+0x7d89],rbx        # 40f180 <__bss_start@@Base+0x1004>
  4073f7:	jmp    4074fa <__generate_code_for_binary_boolean_expression@@Base+0x6fa>
  4073fc:	call   403050 <__errno_location@plt>
  407401:	mov    edi,DWORD PTR [rax]
  407403:	mov    rax,QWORD PTR [rip+0x6be6]        # 40dff0 <stderr@GLIBC_2.2.5>
  40740a:	mov    rbx,QWORD PTR [rax]
  40740d:	mov    rbp,QWORD PTR [rip+0x7d44]        # 40f158 <__bss_start@@Base+0xfdc>
  407414:	call   403280 <strerror@plt>
  407419:	mov    rcx,rax
  40741c:	lea    rsi,[rip+0x2aad]        # 409ed0 <_IO_stdin_used@@Base+0xed0>
  407423:	xor    eax,eax
  407425:	mov    rdi,rbx
  407428:	mov    rdx,rbp
  40742b:	call   403160 <fprintf@plt>
  407430:	mov    BYTE PTR [rip+0x7d29],0x1        # 40f160 <__bss_start@@Base+0xfe4>
  407437:	mov    QWORD PTR [rip+0x7d2e],0x0        # 40f170 <__bss_start@@Base+0xff4>
  407442:	mov    QWORD PTR [rip+0x7d2b],0x0        # 40f178 <__bss_start@@Base+0xffc>
  40744d:	mov    rbx,QWORD PTR [rip+0x7d2c]        # 40f180 <__bss_start@@Base+0x1004>
  407454:	cmp    rbx,0xfffffffffffe0000
  40745b:	jne    407462 <__generate_code_for_binary_boolean_expression@@Base+0x662>
  40745d:	xor    r12d,r12d
  407460:	jmp    407489 <__generate_code_for_binary_boolean_expression@@Base+0x689>
  407462:	add    rbx,0x3ffff
  407469:	and    rbx,0xfffffffffffe0000
  407470:	mov    rdi,rbx
  407473:	call   4031b0 <malloc@plt>
  407478:	mov    r12,rax
  40747b:	mov    QWORD PTR [rip+0x7cee],rax        # 40f170 <__bss_start@@Base+0xff4>
  407482:	mov    QWORD PTR [rip+0x7cef],rbx        # 40f178 <__bss_start@@Base+0xffc>
  407489:	xor    esi,esi
  40748b:	mov    edx,0x20000
  407490:	mov    rdi,r12
  407493:	call   403130 <memset@plt>
  407498:	mov    rbx,QWORD PTR [rip+0x7ce1]        # 40f180 <__bss_start@@Base+0x1004>
  40749f:	lea    rax,[rbx+0x4]
  4074a3:	cmp    rax,QWORD PTR [rip+0x7cce]        # 40f178 <__bss_start@@Base+0xffc>
  4074aa:	jbe    407514 <__generate_code_for_binary_boolean_expression@@Base+0x714>
  4074ac:	add    rbx,0x20003
  4074b3:	and    rbx,0xfffffffffffe0000
  4074ba:	mov    rdi,r12
  4074bd:	mov    rsi,rbx
  4074c0:	call   4031e0 <realloc@plt>
  4074c5:	mov    r12,rax
  4074c8:	mov    QWORD PTR [rip+0x7ca1],rax        # 40f170 <__bss_start@@Base+0xff4>
  4074cf:	mov    QWORD PTR [rip+0x7ca2],rbx        # 40f178 <__bss_start@@Base+0xffc>
  4074d6:	mov    al,BYTE PTR [rip+0x7c84]        # 40f160 <__bss_start@@Base+0xfe4>
  4074dc:	mov    rbp,QWORD PTR [rip+0x7c9d]        # 40f180 <__bss_start@@Base+0x1004>
  4074e3:	mov    DWORD PTR [r12+rbp*1],0x67636461
  4074eb:	lea    rbx,[rbp+0x4]
  4074ef:	mov    QWORD PTR [rip+0x7c8a],rbx        # 40f180 <__bss_start@@Base+0x1004>
  4074f6:	cmp    al,0x1
  4074f8:	je     40752e <__generate_code_for_binary_boolean_expression@@Base+0x72e>
  4074fa:	mov    eax,DWORD PTR [r15]
  4074fd:	mov    DWORD PTR [r12+rbx*1],eax
  407501:	add    rbx,0x4
  407505:	mov    QWORD PTR [rip+0x7c74],rbx        # 40f180 <__bss_start@@Base+0x1004>
  40750c:	mov    rax,rbx
  40750f:	jmp    4075db <__generate_code_for_binary_boolean_expression@@Base+0x7db>
  407514:	mov    rbp,QWORD PTR [rip+0x7c65]        # 40f180 <__bss_start@@Base+0x1004>
  40751b:	mov    DWORD PTR [r12+rbp*1],0x67636461
  407523:	lea    rbx,[rbp+0x4]
  407527:	mov    QWORD PTR [rip+0x7c52],rbx        # 40f180 <__bss_start@@Base+0x1004>
  40752e:	lea    rax,[rbp+0x8]
  407532:	cmp    rax,QWORD PTR [rip+0x7c3f]        # 40f178 <__bss_start@@Base+0xffc>
  407539:	jbe    40758b <__generate_code_for_binary_boolean_expression@@Base+0x78b>
  40753b:	add    rbp,0x20007
  407542:	and    rbp,0xfffffffffffe0000
  407549:	mov    rdi,r12
  40754c:	mov    rsi,rbp
  40754f:	call   4031e0 <realloc@plt>
  407554:	mov    r12,rax
  407557:	mov    QWORD PTR [rip+0x7c12],rax        # 40f170 <__bss_start@@Base+0xff4>
  40755e:	mov    QWORD PTR [rip+0x7c13],rbp        # 40f178 <__bss_start@@Base+0xffc>
  407565:	mov    rbx,QWORD PTR [rip+0x7c14]        # 40f180 <__bss_start@@Base+0x1004>
  40756c:	mov    cl,BYTE PTR [rip+0x7bee]        # 40f160 <__bss_start@@Base+0xfe4>
  407572:	mov    eax,DWORD PTR [r15]
  407575:	mov    DWORD PTR [r12+rbx*1],eax
  407579:	lea    rax,[rbx+0x4]
  40757d:	mov    QWORD PTR [rip+0x7bfc],rax        # 40f180 <__bss_start@@Base+0x1004>
  407584:	cmp    cl,0x1
  407587:	je     40759d <__generate_code_for_binary_boolean_expression@@Base+0x79d>
  407589:	jmp    4075db <__generate_code_for_binary_boolean_expression@@Base+0x7db>
  40758b:	mov    eax,DWORD PTR [r15]
  40758e:	mov    DWORD PTR [r12+rbx*1],eax
  407592:	lea    rax,[rbx+0x4]
  407596:	mov    QWORD PTR [rip+0x7be3],rax        # 40f180 <__bss_start@@Base+0x1004>
  40759d:	lea    rcx,[rbx+0x8]
  4075a1:	cmp    rcx,QWORD PTR [rip+0x7bd0]        # 40f178 <__bss_start@@Base+0xffc>
  4075a8:	jbe    4075db <__generate_code_for_binary_boolean_expression@@Base+0x7db>
  4075aa:	add    rbx,0x20007
  4075b1:	and    rbx,0xfffffffffffe0000
  4075b8:	mov    rdi,r12
  4075bb:	mov    rsi,rbx
  4075be:	call   4031e0 <realloc@plt>
  4075c3:	mov    r12,rax
  4075c6:	mov    QWORD PTR [rip+0x7ba3],rax        # 40f170 <__bss_start@@Base+0xff4>
  4075cd:	mov    QWORD PTR [rip+0x7ba4],rbx        # 40f178 <__bss_start@@Base+0xffc>
  4075d4:	mov    rax,QWORD PTR [rip+0x7ba5]        # 40f180 <__bss_start@@Base+0x1004>
  4075db:	mov    DWORD PTR [r12+rax*1],r14d
  4075df:	add    rax,0x4
  4075e3:	mov    QWORD PTR [rip+0x7b96],rax        # 40f180 <__bss_start@@Base+0x1004>
  4075ea:	add    rsp,0x18
  4075ee:	pop    rbx
  4075ef:	pop    r12
  4075f1:	pop    r13
  4075f3:	pop    r14
  4075f5:	pop    r15
  4075f7:	pop    rbp
  4075f8:	ret    
  4075f9:	call   403050 <__errno_location@plt>
  4075fe:	mov    edi,DWORD PTR [rax]
  407600:	mov    rax,QWORD PTR [rip+0x69e9]        # 40dff0 <stderr@GLIBC_2.2.5>
  407607:	mov    rbx,QWORD PTR [rax]
  40760a:	mov    rbp,QWORD PTR [rip+0x7b47]        # 40f158 <__bss_start@@Base+0xfdc>
  407611:	call   403280 <strerror@plt>
  407616:	mov    rcx,rax
  407619:	lea    rsi,[rip+0x2756]        # 409d76 <_IO_stdin_used@@Base+0xd76>
  407620:	xor    eax,eax
  407622:	mov    rdi,rbx
  407625:	mov    rdx,rbp
  407628:	call   403160 <fprintf@plt>
  40762d:	jmp    4075ea <__generate_code_for_binary_boolean_expression@@Base+0x7ea>
  40762f:	nop
  407630:	mov    eax,DWORD PTR [rdi]
  407632:	mov    ecx,0xffffffff
  407637:	cmp    rax,rcx
  40763a:	je     407649 <__generate_code_for_binary_boolean_expression@@Base+0x849>
  40763c:	mov    rax,QWORD PTR [rsi+rax*8]
  407640:	test   rax,rax
  407643:	je     407649 <__generate_code_for_binary_boolean_expression@@Base+0x849>
  407645:	add    QWORD PTR [rax],0x1
  407649:	ret    
  40764a:	nop    WORD PTR [rax+rax*1+0x0]
  407650:	push   rbp
  407651:	push   r15
  407653:	push   r14
  407655:	push   r13
  407657:	push   r12
  407659:	push   rbx
  40765a:	sub    rsp,0x18
  40765e:	xor    r14d,r14d
  407661:	test   cl,cl
  407663:	setne  al
  407666:	cmp    QWORD PTR [rip+0x7afa],0x0        # 40f168 <__bss_start@@Base+0xfec>
  40766e:	je     407986 <__generate_code_for_binary_boolean_expression@@Base+0xb86>
  407674:	mov    DWORD PTR [rsp+0xc],edi
  407678:	mov    DWORD PTR [rsp+0x10],edx
  40767c:	mov    DWORD PTR [rsp+0x14],ecx
  407680:	mov    DWORD PTR [rsp+0x8],r8d
  407685:	mov    r15,rsi
  407688:	mov    r14b,al
  40768b:	cmp    BYTE PTR [rip+0x7ace],0x1        # 40f160 <__bss_start@@Base+0xfe4>
  407692:	jne    4076d3 <__generate_code_for_binary_boolean_expression@@Base+0x8d3>
  407694:	mov    rbx,QWORD PTR [rip+0x7ae5]        # 40f180 <__bss_start@@Base+0x1004>
  40769b:	lea    rax,[rbx+0x4]
  40769f:	cmp    rax,QWORD PTR [rip+0x7ad2]        # 40f178 <__bss_start@@Base+0xffc>
  4076a6:	jbe    4076d3 <__generate_code_for_binary_boolean_expression@@Base+0x8d3>
  4076a8:	add    rbx,0x20003
  4076af:	and    rbx,0xfffffffffffe0000
  4076b6:	mov    rdi,QWORD PTR [rip+0x7ab3]        # 40f170 <__bss_start@@Base+0xff4>
  4076bd:	mov    rsi,rbx
  4076c0:	call   4031e0 <realloc@plt>
  4076c5:	mov    QWORD PTR [rip+0x7aa4],rax        # 40f170 <__bss_start@@Base+0xff4>
  4076cc:	mov    QWORD PTR [rip+0x7aa5],rbx        # 40f178 <__bss_start@@Base+0xffc>
  4076d3:	or     r14d,0x2
  4076d7:	mov    r12,QWORD PTR [rip+0x7a92]        # 40f170 <__bss_start@@Base+0xff4>
  4076de:	mov    r13,QWORD PTR [rip+0x7a9b]        # 40f180 <__bss_start@@Base+0x1004>
  4076e5:	mov    DWORD PTR [r12+r13*1],0x1000000
  4076ed:	lea    rbx,[r13+0x4]
  4076f1:	mov    QWORD PTR [rip+0x7a88],rbx        # 40f180 <__bss_start@@Base+0x1004>
  4076f8:	test   r15,r15
  4076fb:	je     407711 <__generate_code_for_binary_boolean_expression@@Base+0x911>
  4076fd:	mov    rdi,r15
  407700:	call   4030e0 <strlen@plt>
  407705:	shr    rax,0x2
  407709:	lea    r14d,[r14+rax*1]
  40770d:	add    r14d,0x2
  407711:	cmp    BYTE PTR [rip+0x7a48],0x0        # 40f160 <__bss_start@@Base+0xfe4>
  407718:	je     40777a <__generate_code_for_binary_boolean_expression@@Base+0x97a>
  40771a:	lea    rbp,[r13+0x8]
  40771e:	cmp    rbp,QWORD PTR [rip+0x7a53]        # 40f178 <__bss_start@@Base+0xffc>
  407725:	jbe    407995 <__generate_code_for_binary_boolean_expression@@Base+0xb95>
  40772b:	add    r13,0x20007
  407732:	and    r13,0xfffffffffffe0000
  407739:	mov    rdi,r12
  40773c:	mov    rsi,r13
  40773f:	call   4031e0 <realloc@plt>
  407744:	mov    r12,rax
  407747:	mov    QWORD PTR [rip+0x7a22],rax        # 40f170 <__bss_start@@Base+0xff4>
  40774e:	mov    QWORD PTR [rip+0x7a23],r13        # 40f178 <__bss_start@@Base+0xffc>
  407755:	mov    rbx,QWORD PTR [rip+0x7a24]        # 40f180 <__bss_start@@Base+0x1004>
  40775c:	mov    al,BYTE PTR [rip+0x79fe]        # 40f160 <__bss_start@@Base+0xfe4>
  407762:	mov    DWORD PTR [r12+rbx*1],r14d
  407766:	lea    rbp,[rbx+0x4]
  40776a:	mov    QWORD PTR [rip+0x7a0f],rbp        # 40f180 <__bss_start@@Base+0x1004>
  407771:	cmp    al,0x1
  407773:	jne    40778d <__generate_code_for_binary_boolean_expression@@Base+0x98d>
  407775:	jmp    4079a1 <__generate_code_for_binary_boolean_expression@@Base+0xba1>
  40777a:	mov    DWORD PTR [r12+r13*1+0x4],r14d
  40777f:	add    r13,0x8
  407783:	mov    QWORD PTR [rip+0x79f6],r13        # 40f180 <__bss_start@@Base+0x1004>
  40778a:	mov    rbp,r13
  40778d:	mov    eax,DWORD PTR [rsp+0xc]
  407791:	mov    DWORD PTR [r12+rbp*1],eax
  407795:	add    rbp,0x4
  407799:	mov    QWORD PTR [rip+0x79e0],rbp        # 40f180 <__bss_start@@Base+0x1004>
  4077a0:	mov    rbx,rbp
  4077a3:	mov    r13,r15
  4077a6:	mov    r14d,DWORD PTR [rsp+0x14]
  4077ab:	mov    r15d,DWORD PTR [rsp+0x10]
  4077b0:	lea    rbp,[rbx+0x4]
  4077b4:	mov    DWORD PTR [r12+rbx*1],r15d
  4077b8:	mov    QWORD PTR [rip+0x79c1],rbp        # 40f180 <__bss_start@@Base+0x1004>
  4077bf:	test   r14b,r14b
  4077c2:	je     40781e <__generate_code_for_binary_boolean_expression@@Base+0xa1e>
  4077c4:	cmp    BYTE PTR [rip+0x7995],0x1        # 40f160 <__bss_start@@Base+0xfe4>
  4077cb:	jne    40780b <__generate_code_for_binary_boolean_expression@@Base+0xa0b>
  4077cd:	lea    rax,[rbx+0x8]
  4077d1:	cmp    rax,QWORD PTR [rip+0x79a0]        # 40f178 <__bss_start@@Base+0xffc>
  4077d8:	jbe    40780b <__generate_code_for_binary_boolean_expression@@Base+0xa0b>
  4077da:	add    rbx,0x20007
  4077e1:	and    rbx,0xfffffffffffe0000
  4077e8:	mov    rdi,r12
  4077eb:	mov    rsi,rbx
  4077ee:	call   4031e0 <realloc@plt>
  4077f3:	mov    r12,rax
  4077f6:	mov    QWORD PTR [rip+0x7973],rax        # 40f170 <__bss_start@@Base+0xff4>
  4077fd:	mov    QWORD PTR [rip+0x7974],rbx        # 40f178 <__bss_start@@Base+0xffc>
  407804:	mov    rbp,QWORD PTR [rip+0x7975]        # 40f180 <__bss_start@@Base+0x1004>
  40780b:	mov    eax,DWORD PTR [rsp+0x8]
  40780f:	mov    DWORD PTR [r12+rbp*1],eax
  407813:	add    rbp,0x4
  407817:	mov    QWORD PTR [rip+0x7962],rbp        # 40f180 <__bss_start@@Base+0x1004>
  40781e:	test   r13,r13
  407821:	je     407986 <__generate_code_for_binary_boolean_expression@@Base+0xb86>
  407827:	mov    rdi,r13
  40782a:	call   4030e0 <strlen@plt>
  40782f:	mov    rbx,rax
  407832:	shr    rbx,0x2
  407836:	add    ebx,0x1
  407839:	cmp    BYTE PTR [rip+0x7920],0x1        # 40f160 <__bss_start@@Base+0xfe4>
  407840:	jne    40788c <__generate_code_for_binary_boolean_expression@@Base+0xa8c>
  407842:	lea    rax,[rbp+0x4]
  407846:	mov    r14b,0x1
  407849:	cmp    rax,QWORD PTR [rip+0x7928]        # 40f178 <__bss_start@@Base+0xffc>
  407850:	jbe    40788f <__generate_code_for_binary_boolean_expression@@Base+0xa8f>
  407852:	add    rbp,0x20003
  407859:	and    rbp,0xfffffffffffe0000
  407860:	mov    rdi,r12
  407863:	mov    rsi,rbp
  407866:	call   4031e0 <realloc@plt>
  40786b:	mov    r12,rax
  40786e:	mov    QWORD PTR [rip+0x78fb],rax        # 40f170 <__bss_start@@Base+0xff4>
  407875:	mov    QWORD PTR [rip+0x78fc],rbp        # 40f178 <__bss_start@@Base+0xffc>
  40787c:	mov    r14b,BYTE PTR [rip+0x78dd]        # 40f160 <__bss_start@@Base+0xfe4>
  407883:	mov    rbp,QWORD PTR [rip+0x78f6]        # 40f180 <__bss_start@@Base+0x1004>
  40788a:	jmp    40788f <__generate_code_for_binary_boolean_expression@@Base+0xa8f>
  40788c:	xor    r14d,r14d
  40788f:	mov    DWORD PTR [r12+rbp*1],ebx
  407893:	add    rbp,0x4
  407897:	mov    QWORD PTR [rip+0x78e2],rbp        # 40f180 <__bss_start@@Base+0x1004>
  40789e:	mov    rdi,r13
  4078a1:	call   4030e0 <strlen@plt>
  4078a6:	mov    rbx,rax
  4078a9:	test   r14b,0x1
  4078ad:	je     4078f9 <__generate_code_for_binary_boolean_expression@@Base+0xaf9>
  4078af:	lea    r15,[rbx+rbp*1]
  4078b3:	mov    r14b,0x1
  4078b6:	cmp    r15,QWORD PTR [rip+0x78bb]        # 40f178 <__bss_start@@Base+0xffc>
  4078bd:	jbe    4078fc <__generate_code_for_binary_boolean_expression@@Base+0xafc>
  4078bf:	add    r15,0x1ffff
  4078c6:	and    r15,0xfffffffffffe0000
  4078cd:	mov    rdi,r12
  4078d0:	mov    rsi,r15
  4078d3:	call   4031e0 <realloc@plt>
  4078d8:	mov    r12,rax
  4078db:	mov    QWORD PTR [rip+0x788e],rax        # 40f170 <__bss_start@@Base+0xff4>
  4078e2:	mov    QWORD PTR [rip+0x788f],r15        # 40f178 <__bss_start@@Base+0xffc>
  4078e9:	mov    rbp,QWORD PTR [rip+0x7890]        # 40f180 <__bss_start@@Base+0x1004>
  4078f0:	mov    r14b,BYTE PTR [rip+0x7869]        # 40f160 <__bss_start@@Base+0xfe4>
  4078f7:	jmp    4078fc <__generate_code_for_binary_boolean_expression@@Base+0xafc>
  4078f9:	xor    r14d,r14d
  4078fc:	lea    rdi,[r12+rbp*1]
  407900:	mov    rsi,r13
  407903:	mov    rdx,rbx
  407906:	call   403190 <memcpy@plt>
  40790b:	add    rbx,rbp
  40790e:	mov    QWORD PTR [rip+0x786b],rbx        # 40f180 <__bss_start@@Base+0x1004>
  407915:	mov    rdi,r13
  407918:	call   4030e0 <strlen@plt>
  40791d:	and    eax,0x3
  407920:	mov    ebp,0x4
  407925:	sub    rbp,rax
  407928:	test   r14b,0x1
  40792c:	je     40796c <__generate_code_for_binary_boolean_expression@@Base+0xb6c>
  40792e:	lea    r14,[rbx+rbp*1]
  407932:	cmp    r14,QWORD PTR [rip+0x783f]        # 40f178 <__bss_start@@Base+0xffc>
  407939:	jbe    40796c <__generate_code_for_binary_boolean_expression@@Base+0xb6c>
  40793b:	add    r14,0x1ffff
  407942:	and    r14,0xfffffffffffe0000
  407949:	mov    rdi,r12
  40794c:	mov    rsi,r14
  40794f:	call   4031e0 <realloc@plt>
  407954:	mov    r12,rax
  407957:	mov    QWORD PTR [rip+0x7812],rax        # 40f170 <__bss_start@@Base+0xff4>
  40795e:	mov    QWORD PTR [rip+0x7813],r14        # 40f178 <__bss_start@@Base+0xffc>
  407965:	mov    rbx,QWORD PTR [rip+0x7814]        # 40f180 <__bss_start@@Base+0x1004>
  40796c:	add    r12,rbx
  40796f:	xor    esi,esi
  407971:	mov    rdi,r12
  407974:	mov    rdx,rbp
  407977:	call   403130 <memset@plt>
  40797c:	add    rbx,rbp
  40797f:	mov    QWORD PTR [rip+0x77fa],rbx        # 40f180 <__bss_start@@Base+0x1004>
  407986:	add    rsp,0x18
  40798a:	pop    rbx
  40798b:	pop    r12
  40798d:	pop    r13
  40798f:	pop    r14
  407991:	pop    r15
  407993:	pop    rbp
  407994:	ret    
  407995:	mov    DWORD PTR [r12+r13*1+0x4],r14d
  40799a:	mov    QWORD PTR [rip+0x77df],rbp        # 40f180 <__bss_start@@Base+0x1004>
  4079a1:	lea    rax,[rbx+0x8]
  4079a5:	cmp    rax,QWORD PTR [rip+0x77cc]        # 40f178 <__bss_start@@Base+0xffc>
  4079ac:	mov    r13,r15
  4079af:	jbe    407a0f <__generate_code_for_binary_boolean_expression@@Base+0xc0f>
  4079b1:	add    rbx,0x20007
  4079b8:	and    rbx,0xfffffffffffe0000
  4079bf:	mov    rdi,r12
  4079c2:	mov    rsi,rbx
  4079c5:	call   4031e0 <realloc@plt>
  4079ca:	mov    r12,rax
  4079cd:	mov    QWORD PTR [rip+0x779c],rax        # 40f170 <__bss_start@@Base+0xff4>
  4079d4:	mov    QWORD PTR [rip+0x779d],rbx        # 40f178 <__bss_start@@Base+0xffc>
  4079db:	mov    rbp,QWORD PTR [rip+0x779e]        # 40f180 <__bss_start@@Base+0x1004>
  4079e2:	mov    al,BYTE PTR [rip+0x7778]        # 40f160 <__bss_start@@Base+0xfe4>
  4079e8:	mov    ecx,DWORD PTR [rsp+0xc]
  4079ec:	mov    DWORD PTR [r12+rbp*1],ecx
  4079f0:	lea    rbx,[rbp+0x4]
  4079f4:	mov    QWORD PTR [rip+0x7785],rbx        # 40f180 <__bss_start@@Base+0x1004>
  4079fb:	cmp    al,0x1
  4079fd:	mov    r14d,DWORD PTR [rsp+0x14]
  407a02:	mov    r15d,DWORD PTR [rsp+0x10]
  407a07:	jne    4077b0 <__generate_code_for_binary_boolean_expression@@Base+0x9b0>
  407a0d:	jmp    407a2c <__generate_code_for_binary_boolean_expression@@Base+0xc2c>
  407a0f:	mov    eax,DWORD PTR [rsp+0xc]
  407a13:	mov    DWORD PTR [r12+rbp*1],eax
  407a17:	lea    rbx,[rbp+0x4]
  407a1b:	mov    QWORD PTR [rip+0x775e],rbx        # 40f180 <__bss_start@@Base+0x1004>
  407a22:	mov    r14d,DWORD PTR [rsp+0x14]
  407a27:	mov    r15d,DWORD PTR [rsp+0x10]
  407a2c:	lea    rax,[rbp+0x8]
  407a30:	cmp    rax,QWORD PTR [rip+0x7741]        # 40f178 <__bss_start@@Base+0xffc>
  407a37:	jbe    4077b0 <__generate_code_for_binary_boolean_expression@@Base+0x9b0>
  407a3d:	add    rbp,0x20007
  407a44:	and    rbp,0xfffffffffffe0000
  407a4b:	mov    rdi,r12
  407a4e:	mov    rsi,rbp
  407a51:	call   4031e0 <realloc@plt>
  407a56:	mov    r12,rax
  407a59:	mov    QWORD PTR [rip+0x7710],rax        # 40f170 <__bss_start@@Base+0xff4>
  407a60:	mov    QWORD PTR [rip+0x7711],rbp        # 40f178 <__bss_start@@Base+0xffc>
  407a67:	mov    rbx,QWORD PTR [rip+0x7712]        # 40f180 <__bss_start@@Base+0x1004>
  407a6e:	jmp    4077b0 <__generate_code_for_binary_boolean_expression@@Base+0x9b0>
  407a73:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407a7d:	nop    DWORD PTR [rax]
  407a80:	push   rbp
  407a81:	push   r15
  407a83:	push   r14
  407a85:	push   r13
  407a87:	push   r12
  407a89:	push   rbx
  407a8a:	sub    rsp,0x18
  407a8e:	cmp    QWORD PTR [rip+0x76d2],0x0        # 40f168 <__bss_start@@Base+0xfec>
  407a96:	je     407b3a <__generate_code_for_binary_boolean_expression@@Base+0xd3a>
  407a9c:	mov    r13d,edi
  407a9f:	mov    r14,QWORD PTR [rip+0x76da]        # 40f180 <__bss_start@@Base+0x1004>
  407aa6:	cmp    BYTE PTR [rip+0x76b3],0x0        # 40f160 <__bss_start@@Base+0xfe4>
  407aad:	mov    QWORD PTR [rsp+0x8],rsi
  407ab2:	je     407b49 <__generate_code_for_binary_boolean_expression@@Base+0xd49>
  407ab8:	lea    rbx,[r14+0x4]
  407abc:	cmp    rbx,QWORD PTR [rip+0x76b5]        # 40f178 <__bss_start@@Base+0xffc>
  407ac3:	jbe    407bd1 <__generate_code_for_binary_boolean_expression@@Base+0xdd1>
  407ac9:	add    r14,0x20003
  407ad0:	and    r14,0xfffffffffffe0000
  407ad7:	mov    rdi,QWORD PTR [rip+0x7692]        # 40f170 <__bss_start@@Base+0xff4>
  407ade:	mov    rsi,r14
  407ae1:	call   4031e0 <realloc@plt>
  407ae6:	mov    rsi,QWORD PTR [rsp+0x8]
  407aeb:	mov    r15,rax
  407aee:	mov    QWORD PTR [rip+0x767b],rax        # 40f170 <__bss_start@@Base+0xff4>
  407af5:	mov    QWORD PTR [rip+0x767c],r14        # 40f178 <__bss_start@@Base+0xffc>
  407afc:	mov    r14,QWORD PTR [rip+0x767d]        # 40f180 <__bss_start@@Base+0x1004>
  407b03:	mov    al,BYTE PTR [rip+0x7657]        # 40f160 <__bss_start@@Base+0xfe4>
  407b09:	lea    rbx,[r14+0x4]
  407b0d:	mov    DWORD PTR [r15+r14*1],0x1a10000
  407b15:	mov    QWORD PTR [rip+0x7664],rbx        # 40f180 <__bss_start@@Base+0x1004>
  407b1c:	lea    ebp,[r13+r13*1+0x0]
  407b21:	xor    ecx,ecx
  407b23:	mov    QWORD PTR [rsp],rcx
  407b27:	mov    r12d,0x0
  407b2d:	cmp    al,0x1
  407b2f:	je     407bec <__generate_code_for_binary_boolean_expression@@Base+0xdec>
  407b35:	jmp    407d1f <__generate_code_for_binary_boolean_expression@@Base+0xf1f>
  407b3a:	add    rsp,0x18
  407b3e:	pop    rbx
  407b3f:	pop    r12
  407b41:	pop    r13
  407b43:	pop    r14
  407b45:	pop    r15
  407b47:	pop    rbp
  407b48:	ret    
  407b49:	mov    r15,QWORD PTR [rip+0x7620]        # 40f170 <__bss_start@@Base+0xff4>
  407b50:	mov    ecx,DWORD PTR [r15+r14*1]
  407b54:	lea    rbx,[r14+0x4]
  407b58:	mov    QWORD PTR [rip+0x7621],rbx        # 40f180 <__bss_start@@Base+0x1004>
  407b5f:	cmp    ecx,0xffffffff
  407b62:	je     407c45 <__generate_code_for_binary_boolean_expression@@Base+0xe45>
  407b68:	cmp    ecx,0x1a10000
  407b6e:	jne    407c53 <__generate_code_for_binary_boolean_expression@@Base+0xe53>
  407b74:	mov    ecx,DWORD PTR [r15+r14*1+0x4]
  407b79:	lea    rbp,[r14+0x8]
  407b7d:	mov    QWORD PTR [rip+0x75fc],rbp        # 40f180 <__bss_start@@Base+0x1004>
  407b84:	cmp    ecx,0xffffffff
  407b87:	je     407c6d <__generate_code_for_binary_boolean_expression@@Base+0xe6d>
  407b8d:	mov    eax,ecx
  407b8f:	shr    eax,1
  407b91:	cmp    eax,r13d
  407b94:	jne    407c6d <__generate_code_for_binary_boolean_expression@@Base+0xe6d>
  407b9a:	mov    r12d,r13d
  407b9d:	lea    rdi,[r12*8+0x0]
  407ba5:	call   4031b0 <malloc@plt>
  407baa:	test   r13d,r13d
  407bad:	mov    rcx,rax
  407bb0:	mov    QWORD PTR [rsp],rax
  407bb4:	je     407c9a <__generate_code_for_binary_boolean_expression@@Base+0xe9a>
  407bba:	mov    eax,r12d
  407bbd:	and    eax,0x1
  407bc0:	cmp    r13d,0x1
  407bc4:	jne    407ca4 <__generate_code_for_binary_boolean_expression@@Base+0xea4>
  407bca:	xor    ecx,ecx
  407bcc:	jmp    407ce3 <__generate_code_for_binary_boolean_expression@@Base+0xee3>
  407bd1:	mov    r15,QWORD PTR [rip+0x7598]        # 40f170 <__bss_start@@Base+0xff4>
  407bd8:	mov    DWORD PTR [r15+r14*1],0x1a10000
  407be0:	mov    QWORD PTR [rip+0x7599],rbx        # 40f180 <__bss_start@@Base+0x1004>
  407be7:	lea    ebp,[r13+r13*1+0x0]
  407bec:	lea    rax,[r14+0x8]
  407bf0:	cmp    rax,QWORD PTR [rip+0x7581]        # 40f178 <__bss_start@@Base+0xffc>
  407bf7:	jbe    407c37 <__generate_code_for_binary_boolean_expression@@Base+0xe37>
  407bf9:	add    r14,0x20007
  407c00:	and    r14,0xfffffffffffe0000
  407c07:	mov    rdi,r15
  407c0a:	mov    rsi,r14
  407c0d:	call   4031e0 <realloc@plt>
  407c12:	mov    rsi,QWORD PTR [rsp+0x8]
  407c17:	mov    r15,rax
  407c1a:	mov    QWORD PTR [rip+0x754f],rax        # 40f170 <__bss_start@@Base+0xff4>
  407c21:	mov    QWORD PTR [rip+0x7550],r14        # 40f178 <__bss_start@@Base+0xffc>
  407c28:	xor    eax,eax
  407c2a:	mov    QWORD PTR [rsp],rax
  407c2e:	mov    rbx,QWORD PTR [rip+0x754b]        # 40f180 <__bss_start@@Base+0x1004>
  407c35:	jmp    407c3d <__generate_code_for_binary_boolean_expression@@Base+0xe3d>
  407c37:	xor    eax,eax
  407c39:	mov    QWORD PTR [rsp],rax
  407c3d:	xor    r12d,r12d
  407c40:	jmp    407d1f <__generate_code_for_binary_boolean_expression@@Base+0xf1f>
  407c45:	xor    r12d,r12d
  407c48:	xor    eax,eax
  407c4a:	mov    QWORD PTR [rsp],rax
  407c4e:	jmp    407d04 <__generate_code_for_binary_boolean_expression@@Base+0xf04>
  407c53:	mov    rax,QWORD PTR [rip+0x6396]        # 40dff0 <stderr@GLIBC_2.2.5>
  407c5a:	mov    rdi,QWORD PTR [rax]
  407c5d:	mov    rdx,QWORD PTR [rip+0x74f4]        # 40f158 <__bss_start@@Base+0xfdc>
  407c64:	lea    rsi,[rip+0x212b]        # 409d96 <_IO_stdin_used@@Base+0xd96>
  407c6b:	jmp    407c85 <__generate_code_for_binary_boolean_expression@@Base+0xe85>
  407c6d:	mov    rax,QWORD PTR [rip+0x637c]        # 40dff0 <stderr@GLIBC_2.2.5>
  407c74:	mov    rdi,QWORD PTR [rax]
  407c77:	mov    rdx,QWORD PTR [rip+0x74da]        # 40f158 <__bss_start@@Base+0xfdc>
  407c7e:	lea    rsi,[rip+0x215b]        # 409de0 <_IO_stdin_used@@Base+0xde0>
  407c85:	xor    eax,eax
  407c87:	add    rsp,0x18
  407c8b:	pop    rbx
  407c8c:	pop    r12
  407c8e:	pop    r13
  407c90:	pop    r14
  407c92:	pop    r15
  407c94:	pop    rbp
  407c95:	jmp    403160 <fprintf@plt>
  407c9a:	mov    r12,rax
  407c9d:	mov    rsi,QWORD PTR [rsp+0x8]
  407ca2:	jmp    407d04 <__generate_code_for_binary_boolean_expression@@Base+0xf04>
  407ca4:	mov    rbp,0xfffffffffffffff8
  407cab:	sub    rbp,r14
  407cae:	lea    rdx,[r15+r14*1]
  407cb2:	add    rdx,0x14
  407cb6:	sub    r12,rax
  407cb9:	xor    ecx,ecx
  407cbb:	mov    rdi,QWORD PTR [rsp]
  407cbf:	nop
  407cc0:	mov    rsi,QWORD PTR [rdx+rcx*8-0xc]
  407cc5:	mov    QWORD PTR [rdi+rcx*8],rsi
  407cc9:	mov    rsi,QWORD PTR [rdx+rcx*8-0x4]
  407cce:	mov    QWORD PTR [rdi+rcx*8+0x8],rsi
  407cd3:	add    rcx,0x2
  407cd7:	add    rbp,0xfffffffffffffff0
  407cdb:	cmp    r12,rcx
  407cde:	jne    407cc0 <__generate_code_for_binary_boolean_expression@@Base+0xec0>
  407ce0:	neg    rbp
  407ce3:	mov    rsi,QWORD PTR [rsp+0x8]
  407ce8:	test   rax,rax
  407ceb:	mov    r12,QWORD PTR [rsp]
  407cef:	je     407cfd <__generate_code_for_binary_boolean_expression@@Base+0xefd>
  407cf1:	mov    rax,QWORD PTR [r15+rbp*1]
  407cf5:	mov    QWORD PTR [r12+rcx*8],rax
  407cf9:	add    rbp,0x8
  407cfd:	mov    QWORD PTR [rip+0x747c],rbp        # 40f180 <__bss_start@@Base+0x1004>
  407d04:	mov    QWORD PTR [rip+0x7475],r14        # 40f180 <__bss_start@@Base+0x1004>
  407d0b:	mov    DWORD PTR [r15+r14*1],0x1a10000
  407d13:	mov    QWORD PTR [rip+0x7466],rbx        # 40f180 <__bss_start@@Base+0x1004>
  407d1a:	lea    ebp,[r13+r13*1+0x0]
  407d1f:	mov    DWORD PTR [r15+rbx*1],ebp
  407d23:	add    rbx,0x4
  407d27:	mov    QWORD PTR [rip+0x7452],rbx        # 40f180 <__bss_start@@Base+0x1004>
  407d2e:	test   r13d,r13d
  407d31:	je     407e7f <__generate_code_for_binary_boolean_expression@@Base+0x107f>
  407d37:	mov    edi,r13d
  407d3a:	shl    rdi,0x3
  407d3e:	xor    ebp,ebp
  407d40:	mov    QWORD PTR [rsp+0x10],rdi
  407d45:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407d4f:	nop
  407d50:	test   r12,r12
  407d53:	je     407d60 <__generate_code_for_binary_boolean_expression@@Base+0xf60>
  407d55:	mov    r14,QWORD PTR [r12+rbp*1]
  407d59:	jmp    407d63 <__generate_code_for_binary_boolean_expression@@Base+0xf63>
  407d5b:	nop    DWORD PTR [rax+rax*1+0x0]
  407d60:	xor    r14d,r14d
  407d63:	add    r14,QWORD PTR [rsi+rbp*1]
  407d67:	mov    QWORD PTR [rsi+rbp*1],r14
  407d6b:	mov    r13,r14
  407d6e:	shr    r13,0x20
  407d72:	cmp    BYTE PTR [rip+0x73e7],0x0        # 40f160 <__bss_start@@Base+0xfe4>
  407d79:	je     407df0 <__generate_code_for_binary_boolean_expression@@Base+0xff0>
  407d7b:	lea    rax,[rbx+0x4]
  407d7f:	mov    rcx,QWORD PTR [rip+0x73f2]        # 40f178 <__bss_start@@Base+0xffc>
  407d86:	cmp    rax,rcx
  407d89:	jbe    407e10 <__generate_code_for_binary_boolean_expression@@Base+0x1010>
  407d8f:	add    rbx,0x20003
  407d96:	and    rbx,0xfffffffffffe0000
  407d9d:	mov    rdi,r15
  407da0:	mov    rsi,rbx
  407da3:	call   4031e0 <realloc@plt>
  407da8:	mov    rdi,QWORD PTR [rsp+0x10]
  407dad:	mov    rsi,QWORD PTR [rsp+0x8]
  407db2:	mov    r15,rax
  407db5:	mov    QWORD PTR [rip+0x73b4],rax        # 40f170 <__bss_start@@Base+0xff4>
  407dbc:	mov    QWORD PTR [rip+0x73b5],rbx        # 40f178 <__bss_start@@Base+0xffc>
  407dc3:	movzx  edx,BYTE PTR [rip+0x7396]        # 40f160 <__bss_start@@Base+0xfe4>
  407dca:	mov    rcx,rbx
  407dcd:	mov    rbx,QWORD PTR [rip+0x73ac]        # 40f180 <__bss_start@@Base+0x1004>
  407dd4:	mov    DWORD PTR [rax+rbx*1],r14d
  407dd8:	lea    rax,[rbx+0x4]
  407ddc:	mov    QWORD PTR [rip+0x739d],rax        # 40f180 <__bss_start@@Base+0x1004>
  407de3:	cmp    dl,0x1
  407de6:	je     407e1b <__generate_code_for_binary_boolean_expression@@Base+0x101b>
  407de8:	jmp    407e60 <__generate_code_for_binary_boolean_expression@@Base+0x1060>
  407dea:	nop    WORD PTR [rax+rax*1+0x0]
  407df0:	mov    DWORD PTR [r15+rbx*1],r14d
  407df4:	add    rbx,0x4
  407df8:	mov    QWORD PTR [rip+0x7381],rbx        # 40f180 <__bss_start@@Base+0x1004>
  407dff:	mov    rax,rbx
  407e02:	jmp    407e60 <__generate_code_for_binary_boolean_expression@@Base+0x1060>
  407e04:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407e0e:	xchg   ax,ax
  407e10:	mov    DWORD PTR [r15+rbx*1],r14d
  407e14:	mov    QWORD PTR [rip+0x7365],rax        # 40f180 <__bss_start@@Base+0x1004>
  407e1b:	lea    rdx,[rbx+0x8]
  407e1f:	cmp    rdx,rcx
  407e22:	jbe    407e60 <__generate_code_for_binary_boolean_expression@@Base+0x1060>
  407e24:	add    rbx,0x20007
  407e2b:	and    rbx,0xfffffffffffe0000
  407e32:	mov    rdi,r15
  407e35:	mov    rsi,rbx
  407e38:	call   4031e0 <realloc@plt>
  407e3d:	mov    rdi,QWORD PTR [rsp+0x10]
  407e42:	mov    rsi,QWORD PTR [rsp+0x8]
  407e47:	mov    r15,rax
  407e4a:	mov    QWORD PTR [rip+0x731f],rax        # 40f170 <__bss_start@@Base+0xff4>
  407e51:	mov    QWORD PTR [rip+0x7320],rbx        # 40f178 <__bss_start@@Base+0xffc>
  407e58:	mov    rax,QWORD PTR [rip+0x7321]        # 40f180 <__bss_start@@Base+0x1004>
  407e5f:	nop
  407e60:	mov    DWORD PTR [r15+rax*1],r13d
  407e64:	add    rax,0x4
  407e68:	mov    QWORD PTR [rip+0x7311],rax        # 40f180 <__bss_start@@Base+0x1004>
  407e6f:	add    rbp,0x8
  407e73:	mov    rbx,rax
  407e76:	cmp    rdi,rbp
  407e79:	jne    407d50 <__generate_code_for_binary_boolean_expression@@Base+0xf50>
  407e7f:	mov    rdi,QWORD PTR [rsp]
  407e83:	add    rsp,0x18
  407e87:	pop    rbx
  407e88:	pop    r12
  407e8a:	pop    r13
  407e8c:	pop    r14
  407e8e:	pop    r15
  407e90:	pop    rbp
  407e91:	jmp    403040 <free@plt>
  407e96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407ea0:	push   rbp
  407ea1:	push   r15
  407ea3:	push   r14
  407ea5:	push   rbx
  407ea6:	push   rax
  407ea7:	cmp    QWORD PTR [rip+0x72b9],0x0        # 40f168 <__bss_start@@Base+0xfec>
  407eaf:	je     408226 <__generate_code_for_binary_boolean_expression@@Base+0x1426>
  407eb5:	mov    rbx,QWORD PTR [rip+0x72c4]        # 40f180 <__bss_start@@Base+0x1004>
  407ebc:	cmp    BYTE PTR [rip+0x729d],0x0        # 40f160 <__bss_start@@Base+0xfe4>
  407ec3:	je     407f2f <__generate_code_for_binary_boolean_expression@@Base+0x112f>
  407ec5:	lea    r14,[rbx+0x4]
  407ec9:	cmp    r14,QWORD PTR [rip+0x72a8]        # 40f178 <__bss_start@@Base+0xffc>
  407ed0:	jbe    407f7b <__generate_code_for_binary_boolean_expression@@Base+0x117b>
  407ed6:	add    rbx,0x20003
  407edd:	and    rbx,0xfffffffffffe0000
  407ee4:	mov    rdi,QWORD PTR [rip+0x7285]        # 40f170 <__bss_start@@Base+0xff4>
  407eeb:	mov    rsi,rbx
  407eee:	call   4031e0 <realloc@plt>
  407ef3:	mov    QWORD PTR [rip+0x7276],rax        # 40f170 <__bss_start@@Base+0xff4>
  407efa:	mov    QWORD PTR [rip+0x7277],rbx        # 40f178 <__bss_start@@Base+0xffc>
  407f01:	mov    rbx,QWORD PTR [rip+0x7278]        # 40f180 <__bss_start@@Base+0x1004>
  407f08:	mov    cl,BYTE PTR [rip+0x7252]        # 40f160 <__bss_start@@Base+0xfe4>
  407f0e:	lea    r14,[rbx+0x4]
  407f12:	mov    DWORD PTR [rax+rbx*1],0xa1000000
  407f19:	mov    QWORD PTR [rip+0x7260],r14        # 40f180 <__bss_start@@Base+0x1004>
  407f20:	mov    ebp,0x1
  407f25:	cmp    cl,0x1
  407f28:	je     407f90 <__generate_code_for_binary_boolean_expression@@Base+0x1190>
  407f2a:	jmp    4080ab <__generate_code_for_binary_boolean_expression@@Base+0x12ab>
  407f2f:	mov    rax,QWORD PTR [rip+0x723a]        # 40f170 <__bss_start@@Base+0xff4>
  407f36:	mov    ecx,DWORD PTR [rax+rbx*1]
  407f39:	lea    r14,[rbx+0x4]
  407f3d:	mov    QWORD PTR [rip+0x723c],r14        # 40f180 <__bss_start@@Base+0x1004>
  407f44:	cmp    ecx,0xa1000000
  407f4a:	je     40806c <__generate_code_for_binary_boolean_expression@@Base+0x126c>
  407f50:	mov    ebp,0x1
  407f55:	cmp    ecx,0xffffffff
  407f58:	je     40809d <__generate_code_for_binary_boolean_expression@@Base+0x129d>
  407f5e:	mov    rax,QWORD PTR [rip+0x608b]        # 40dff0 <stderr@GLIBC_2.2.5>
  407f65:	mov    rdi,QWORD PTR [rax]
  407f68:	mov    rdx,QWORD PTR [rip+0x71e9]        # 40f158 <__bss_start@@Base+0xfdc>
  407f6f:	lea    rsi,[rip+0x1ebe]        # 409e34 <_IO_stdin_used@@Base+0xe34>
  407f76:	jmp    408485 <__generate_code_for_binary_boolean_expression@@Base+0x1685>
  407f7b:	mov    rax,QWORD PTR [rip+0x71ee]        # 40f170 <__bss_start@@Base+0xff4>
  407f82:	mov    DWORD PTR [rax+rbx*1],0xa1000000
  407f89:	mov    QWORD PTR [rip+0x71f0],r14        # 40f180 <__bss_start@@Base+0x1004>
  407f90:	lea    rcx,[rbx+0x8]
  407f94:	cmp    rcx,QWORD PTR [rip+0x71dd]        # 40f178 <__bss_start@@Base+0xffc>
  407f9b:	jbe    407ff3 <__generate_code_for_binary_boolean_expression@@Base+0x11f3>
  407f9d:	add    rbx,0x20007
  407fa4:	and    rbx,0xfffffffffffe0000
  407fab:	mov    rdi,rax
  407fae:	mov    rsi,rbx
  407fb1:	call   4031e0 <realloc@plt>
  407fb6:	mov    QWORD PTR [rip+0x71b3],rax        # 40f170 <__bss_start@@Base+0xff4>
  407fbd:	mov    QWORD PTR [rip+0x71b4],rbx        # 40f178 <__bss_start@@Base+0xffc>
  407fc4:	mov    r14,QWORD PTR [rip+0x71b5]        # 40f180 <__bss_start@@Base+0x1004>
  407fcb:	mov    cl,BYTE PTR [rip+0x718f]        # 40f160 <__bss_start@@Base+0xfe4>
  407fd1:	mov    DWORD PTR [rax+r14*1],0x9
  407fd9:	lea    rbx,[r14+0x4]
  407fdd:	mov    QWORD PTR [rip+0x719c],rbx        # 40f180 <__bss_start@@Base+0x1004>
  407fe4:	mov    ebp,0x1
  407fe9:	cmp    cl,0x1
  407fec:	je     408006 <__generate_code_for_binary_boolean_expression@@Base+0x1206>
  407fee:	jmp    4080c1 <__generate_code_for_binary_boolean_expression@@Base+0x12c1>
  407ff3:	mov    DWORD PTR [rax+r14*1],0x9
  407ffb:	lea    rbx,[r14+0x4]
  407fff:	mov    QWORD PTR [rip+0x717a],rbx        # 40f180 <__bss_start@@Base+0x1004>
  408006:	lea    rcx,[r14+0x8]
  40800a:	cmp    rcx,QWORD PTR [rip+0x7167]        # 40f178 <__bss_start@@Base+0xffc>
  408011:	jbe    4082ad <__generate_code_for_binary_boolean_expression@@Base+0x14ad>
  408017:	add    r14,0x20007
  40801e:	and    r14,0xfffffffffffe0000
  408025:	mov    rdi,rax
  408028:	mov    rsi,r14
  40802b:	call   4031e0 <realloc@plt>
  408030:	mov    QWORD PTR [rip+0x7139],rax        # 40f170 <__bss_start@@Base+0xff4>
  408037:	mov    QWORD PTR [rip+0x713a],r14        # 40f178 <__bss_start@@Base+0xffc>
  40803e:	mov    rbx,QWORD PTR [rip+0x713b]        # 40f180 <__bss_start@@Base+0x1004>
  408045:	mov    cl,BYTE PTR [rip+0x7115]        # 40f160 <__bss_start@@Base+0xfe4>
  40804b:	mov    DWORD PTR [rax+rbx*1],0x0
  408052:	lea    r14,[rbx+0x4]
  408056:	mov    QWORD PTR [rip+0x7123],r14        # 40f180 <__bss_start@@Base+0x1004>
  40805d:	mov    ebp,0x1
  408062:	cmp    cl,0x1
  408065:	jne    4080d6 <__generate_code_for_binary_boolean_expression@@Base+0x12d6>
  408067:	jmp    4082bf <__generate_code_for_binary_boolean_expression@@Base+0x14bf>
  40806c:	mov    ecx,DWORD PTR [rax+rbx*1+0x4]
  408070:	lea    rdx,[rbx+0x8]
  408074:	mov    QWORD PTR [rip+0x7105],rdx        # 40f180 <__bss_start@@Base+0x1004>
  40807b:	cmp    ecx,0x9
  40807e:	jne    40846d <__generate_code_for_binary_boolean_expression@@Base+0x166d>
  408084:	lea    rcx,[rbx+0x14]
  408088:	movzx  ebp,BYTE PTR [rip+0x70f9]        # 40f188 <__bss_start@@Base+0x100c>
  40808f:	xor    ebp,0x1
  408092:	add    ebp,DWORD PTR [rax+rbx*1+0x10]
  408096:	mov    QWORD PTR [rip+0x70e3],rcx        # 40f180 <__bss_start@@Base+0x1004>
  40809d:	mov    DWORD PTR [rax+rbx*1],0xa1000000
  4080a4:	mov    QWORD PTR [rip+0x70d5],r14        # 40f180 <__bss_start@@Base+0x1004>
  4080ab:	mov    DWORD PTR [rax+r14*1],0x9
  4080b3:	add    r14,0x4
  4080b7:	mov    QWORD PTR [rip+0x70c2],r14        # 40f180 <__bss_start@@Base+0x1004>
  4080be:	mov    rbx,r14
  4080c1:	mov    DWORD PTR [rax+rbx*1],0x0
  4080c8:	add    rbx,0x4
  4080cc:	mov    QWORD PTR [rip+0x70ad],rbx        # 40f180 <__bss_start@@Base+0x1004>
  4080d3:	mov    r14,rbx
  4080d6:	mov    DWORD PTR [rax+r14*1],0x0
  4080de:	add    r14,0x4
  4080e2:	mov    QWORD PTR [rip+0x7097],r14        # 40f180 <__bss_start@@Base+0x1004>
  4080e9:	mov    rbx,r14
  4080ec:	mov    DWORD PTR [rax+rbx*1],ebp
  4080ef:	lea    r14,[rbx+0x4]
  4080f3:	mov    QWORD PTR [rip+0x7086],r14        # 40f180 <__bss_start@@Base+0x1004>
  4080fa:	cmp    BYTE PTR [rip+0x705f],0x0        # 40f160 <__bss_start@@Base+0xfe4>
  408101:	je     408167 <__generate_code_for_binary_boolean_expression@@Base+0x1367>
  408103:	lea    r15,[rbx+0x8]
  408107:	cmp    r15,QWORD PTR [rip+0x706a]        # 40f178 <__bss_start@@Base+0xffc>
  40810e:	jbe    408231 <__generate_code_for_binary_boolean_expression@@Base+0x1431>
  408114:	add    rbx,0x20007
  40811b:	and    rbx,0xfffffffffffe0000
  408122:	mov    rdi,QWORD PTR [rip+0x7047]        # 40f170 <__bss_start@@Base+0xff4>
  408129:	mov    rsi,rbx
  40812c:	call   4031e0 <realloc@plt>
  408131:	mov    QWORD PTR [rip+0x7038],rax        # 40f170 <__bss_start@@Base+0xff4>
  408138:	mov    QWORD PTR [rip+0x7039],rbx        # 40f178 <__bss_start@@Base+0xffc>
  40813f:	mov    r14,QWORD PTR [rip+0x703a]        # 40f180 <__bss_start@@Base+0x1004>
  408146:	lea    r15,[r14+0x4]
  40814a:	cmp    BYTE PTR [rip+0x700f],0x0        # 40f160 <__bss_start@@Base+0xfe4>
  408151:	mov    DWORD PTR [rax+r14*1],0x0
  408159:	mov    QWORD PTR [rip+0x7020],r15        # 40f180 <__bss_start@@Base+0x1004>
  408160:	je     408184 <__generate_code_for_binary_boolean_expression@@Base+0x1384>
  408162:	jmp    408247 <__generate_code_for_binary_boolean_expression@@Base+0x1447>
  408167:	mov    rax,QWORD PTR [rip+0x7002]        # 40f170 <__bss_start@@Base+0xff4>
  40816e:	mov    DWORD PTR [rax+rbx*1+0x4],0x0
  408176:	add    rbx,0x8
  40817a:	mov    QWORD PTR [rip+0x6fff],rbx        # 40f180 <__bss_start@@Base+0x1004>
  408181:	mov    r15,rbx
  408184:	mov    DWORD PTR [rax+r15*1],0x0
  40818c:	add    r15,0x4
  408190:	mov    QWORD PTR [rip+0x6fe9],r15        # 40f180 <__bss_start@@Base+0x1004>
  408197:	mov    r14,r15
  40819a:	mov    DWORD PTR [rax+r14*1],0x0
  4081a2:	add    r14,0x4
  4081a6:	mov    QWORD PTR [rip+0x6fd3],r14        # 40f180 <__bss_start@@Base+0x1004>
  4081ad:	mov    rbx,r14
  4081b0:	mov    DWORD PTR [rax+rbx*1],0x0
  4081b7:	add    rbx,0x4
  4081bb:	mov    QWORD PTR [rip+0x6fbe],rbx        # 40f180 <__bss_start@@Base+0x1004>
  4081c2:	mov    r14,rbx
  4081c5:	mov    DWORD PTR [rax+r14*1],0x0
  4081cd:	add    r14,0x4
  4081d1:	mov    QWORD PTR [rip+0x6fa8],r14        # 40f180 <__bss_start@@Base+0x1004>
  4081d8:	mov    rbx,r14
  4081db:	mov    DWORD PTR [rax+rbx*1],0x0
  4081e2:	add    rbx,0x4
  4081e6:	mov    QWORD PTR [rip+0x6f93],rbx        # 40f180 <__bss_start@@Base+0x1004>
  4081ed:	mov    r14,rbx
  4081f0:	mov    DWORD PTR [rax+r14*1],0xa3000000
  4081f8:	add    r14,0x4
  4081fc:	mov    QWORD PTR [rip+0x6f7d],r14        # 40f180 <__bss_start@@Base+0x1004>
  408203:	mov    rcx,r14
  408206:	mov    rax,QWORD PTR [rip+0x6f63]        # 40f170 <__bss_start@@Base+0xff4>
  40820d:	mov    DWORD PTR [rax+rcx*1],0x0
  408214:	add    rcx,0x4
  408218:	mov    QWORD PTR [rip+0x6f61],rcx        # 40f180 <__bss_start@@Base+0x1004>
  40821f:	mov    BYTE PTR [rip+0x6f62],0x1        # 40f188 <__bss_start@@Base+0x100c>
  408226:	add    rsp,0x8
  40822a:	pop    rbx
  40822b:	pop    r14
  40822d:	pop    r15
  40822f:	pop    rbp
  408230:	ret    
  408231:	mov    rax,QWORD PTR [rip+0x6f38]        # 40f170 <__bss_start@@Base+0xff4>
  408238:	mov    DWORD PTR [rax+rbx*1+0x4],0x0
  408240:	mov    QWORD PTR [rip+0x6f39],r15        # 40f180 <__bss_start@@Base+0x1004>
  408247:	lea    rcx,[r14+0x8]
  40824b:	cmp    rcx,QWORD PTR [rip+0x6f26]        # 40f178 <__bss_start@@Base+0xffc>
  408252:	jbe    40832a <__generate_code_for_binary_boolean_expression@@Base+0x152a>
  408258:	add    r14,0x20007
  40825f:	and    r14,0xfffffffffffe0000
  408266:	mov    rdi,rax
  408269:	mov    rsi,r14
  40826c:	call   4031e0 <realloc@plt>
  408271:	mov    QWORD PTR [rip+0x6ef8],rax        # 40f170 <__bss_start@@Base+0xff4>
  408278:	mov    QWORD PTR [rip+0x6ef9],r14        # 40f178 <__bss_start@@Base+0xffc>
  40827f:	mov    r15,QWORD PTR [rip+0x6efa]        # 40f180 <__bss_start@@Base+0x1004>
  408286:	mov    cl,BYTE PTR [rip+0x6ed4]        # 40f160 <__bss_start@@Base+0xfe4>
  40828c:	mov    DWORD PTR [rax+r15*1],0x0
  408294:	lea    r14,[r15+0x4]
  408298:	mov    QWORD PTR [rip+0x6ee1],r14        # 40f180 <__bss_start@@Base+0x1004>
  40829f:	cmp    cl,0x1
  4082a2:	jne    40819a <__generate_code_for_binary_boolean_expression@@Base+0x139a>
  4082a8:	jmp    40833d <__generate_code_for_binary_boolean_expression@@Base+0x153d>
  4082ad:	mov    DWORD PTR [rax+rbx*1],0x0
  4082b4:	lea    r14,[rbx+0x4]
  4082b8:	mov    QWORD PTR [rip+0x6ec1],r14        # 40f180 <__bss_start@@Base+0x1004>
  4082bf:	lea    rcx,[rbx+0x8]
  4082c3:	cmp    rcx,QWORD PTR [rip+0x6eae]        # 40f178 <__bss_start@@Base+0xffc>
  4082ca:	jbe    4083a0 <__generate_code_for_binary_boolean_expression@@Base+0x15a0>
  4082d0:	add    rbx,0x20007
  4082d7:	and    rbx,0xfffffffffffe0000
  4082de:	mov    rdi,rax
  4082e1:	mov    rsi,rbx
  4082e4:	call   4031e0 <realloc@plt>
  4082e9:	mov    QWORD PTR [rip+0x6e80],rax        # 40f170 <__bss_start@@Base+0xff4>
  4082f0:	mov    QWORD PTR [rip+0x6e81],rbx        # 40f178 <__bss_start@@Base+0xffc>
  4082f7:	mov    r14,QWORD PTR [rip+0x6e82]        # 40f180 <__bss_start@@Base+0x1004>
  4082fe:	mov    cl,BYTE PTR [rip+0x6e5c]        # 40f160 <__bss_start@@Base+0xfe4>
  408304:	mov    DWORD PTR [rax+r14*1],0x0
  40830c:	lea    rbx,[r14+0x4]
  408310:	mov    QWORD PTR [rip+0x6e69],rbx        # 40f180 <__bss_start@@Base+0x1004>
  408317:	mov    ebp,0x1
  40831c:	cmp    cl,0x1
  40831f:	jne    4080ec <__generate_code_for_binary_boolean_expression@@Base+0x12ec>
  408325:	jmp    4083b3 <__generate_code_for_binary_boolean_expression@@Base+0x15b3>
  40832a:	mov    DWORD PTR [rax+r15*1],0x0
  408332:	lea    r14,[r15+0x4]
  408336:	mov    QWORD PTR [rip+0x6e43],r14        # 40f180 <__bss_start@@Base+0x1004>
  40833d:	lea    rcx,[r15+0x8]
  408341:	cmp    rcx,QWORD PTR [rip+0x6e30]        # 40f178 <__bss_start@@Base+0xffc>
  408348:	jbe    4083fc <__generate_code_for_binary_boolean_expression@@Base+0x15fc>
  40834e:	add    r15,0x20007
  408355:	and    r15,0xfffffffffffe0000
  40835c:	mov    rdi,rax
  40835f:	mov    rsi,r15
  408362:	call   4031e0 <realloc@plt>
  408367:	mov    QWORD PTR [rip+0x6e02],rax        # 40f170 <__bss_start@@Base+0xff4>
  40836e:	mov    QWORD PTR [rip+0x6e03],r15        # 40f178 <__bss_start@@Base+0xffc>
  408375:	mov    r14,QWORD PTR [rip+0x6e04]        # 40f180 <__bss_start@@Base+0x1004>
  40837c:	mov    cl,BYTE PTR [rip+0x6dde]        # 40f160 <__bss_start@@Base+0xfe4>
  408382:	mov    DWORD PTR [rax+r14*1],0x0
  40838a:	lea    rbx,[r14+0x4]
  40838e:	mov    QWORD PTR [rip+0x6deb],rbx        # 40f180 <__bss_start@@Base+0x1004>
  408395:	cmp    cl,0x1
  408398:	jne    4081b0 <__generate_code_for_binary_boolean_expression@@Base+0x13b0>
  40839e:	jmp    40840f <__generate_code_for_binary_boolean_expression@@Base+0x160f>
  4083a0:	mov    DWORD PTR [rax+r14*1],0x0
  4083a8:	lea    rbx,[r14+0x4]
  4083ac:	mov    QWORD PTR [rip+0x6dcd],rbx        # 40f180 <__bss_start@@Base+0x1004>
  4083b3:	lea    rcx,[r14+0x8]
  4083b7:	mov    ebp,0x1
  4083bc:	cmp    rcx,QWORD PTR [rip+0x6db5]        # 40f178 <__bss_start@@Base+0xffc>
  4083c3:	jbe    4080ec <__generate_code_for_binary_boolean_expression@@Base+0x12ec>
  4083c9:	add    r14,0x20007
  4083d0:	and    r14,0xfffffffffffe0000
  4083d7:	mov    rdi,rax
  4083da:	mov    rsi,r14
  4083dd:	call   4031e0 <realloc@plt>
  4083e2:	mov    QWORD PTR [rip+0x6d87],rax        # 40f170 <__bss_start@@Base+0xff4>
  4083e9:	mov    QWORD PTR [rip+0x6d88],r14        # 40f178 <__bss_start@@Base+0xffc>
  4083f0:	mov    rbx,QWORD PTR [rip+0x6d89]        # 40f180 <__bss_start@@Base+0x1004>
  4083f7:	jmp    4080ec <__generate_code_for_binary_boolean_expression@@Base+0x12ec>
  4083fc:	mov    DWORD PTR [rax+r14*1],0x0
  408404:	lea    rbx,[r14+0x4]
  408408:	mov    QWORD PTR [rip+0x6d71],rbx        # 40f180 <__bss_start@@Base+0x1004>
  40840f:	lea    rcx,[r14+0x8]
  408413:	cmp    rcx,QWORD PTR [rip+0x6d5e]        # 40f178 <__bss_start@@Base+0xffc>
  40841a:	jbe    408496 <__generate_code_for_binary_boolean_expression@@Base+0x1696>
  40841c:	add    r14,0x20007
  408423:	and    r14,0xfffffffffffe0000
  40842a:	mov    rdi,rax
  40842d:	mov    rsi,r14
  408430:	call   4031e0 <realloc@plt>
  408435:	mov    QWORD PTR [rip+0x6d34],rax        # 40f170 <__bss_start@@Base+0xff4>
  40843c:	mov    QWORD PTR [rip+0x6d35],r14        # 40f178 <__bss_start@@Base+0xffc>
  408443:	mov    rbx,QWORD PTR [rip+0x6d36]        # 40f180 <__bss_start@@Base+0x1004>
  40844a:	mov    cl,BYTE PTR [rip+0x6d10]        # 40f160 <__bss_start@@Base+0xfe4>
  408450:	mov    DWORD PTR [rax+rbx*1],0x0
  408457:	lea    r14,[rbx+0x4]
  40845b:	mov    QWORD PTR [rip+0x6d1e],r14        # 40f180 <__bss_start@@Base+0x1004>
  408462:	cmp    cl,0x1
  408465:	jne    4081c5 <__generate_code_for_binary_boolean_expression@@Base+0x13c5>
  40846b:	jmp    4084a8 <__generate_code_for_binary_boolean_expression@@Base+0x16a8>
  40846d:	mov    rax,QWORD PTR [rip+0x5b7c]        # 40dff0 <stderr@GLIBC_2.2.5>
  408474:	mov    rdi,QWORD PTR [rax]
  408477:	mov    rdx,QWORD PTR [rip+0x6cda]        # 40f158 <__bss_start@@Base+0xfdc>
  40847e:	lea    rsi,[rip+0x19fc]        # 409e81 <_IO_stdin_used@@Base+0xe81>
  408485:	xor    eax,eax
  408487:	add    rsp,0x8
  40848b:	pop    rbx
  40848c:	pop    r14
  40848e:	pop    r15
  408490:	pop    rbp
  408491:	jmp    403160 <fprintf@plt>
  408496:	mov    DWORD PTR [rax+rbx*1],0x0
  40849d:	lea    r14,[rbx+0x4]
  4084a1:	mov    QWORD PTR [rip+0x6cd8],r14        # 40f180 <__bss_start@@Base+0x1004>
  4084a8:	lea    rcx,[rbx+0x8]
  4084ac:	cmp    rcx,QWORD PTR [rip+0x6cc5]        # 40f178 <__bss_start@@Base+0xffc>
  4084b3:	jbe    408507 <__generate_code_for_binary_boolean_expression@@Base+0x1707>
  4084b5:	add    rbx,0x20007
  4084bc:	and    rbx,0xfffffffffffe0000
  4084c3:	mov    rdi,rax
  4084c6:	mov    rsi,rbx
  4084c9:	call   4031e0 <realloc@plt>
  4084ce:	mov    QWORD PTR [rip+0x6c9b],rax        # 40f170 <__bss_start@@Base+0xff4>
  4084d5:	mov    QWORD PTR [rip+0x6c9c],rbx        # 40f178 <__bss_start@@Base+0xffc>
  4084dc:	mov    r14,QWORD PTR [rip+0x6c9d]        # 40f180 <__bss_start@@Base+0x1004>
  4084e3:	mov    cl,BYTE PTR [rip+0x6c77]        # 40f160 <__bss_start@@Base+0xfe4>
  4084e9:	mov    DWORD PTR [rax+r14*1],0x0
  4084f1:	lea    rbx,[r14+0x4]
  4084f5:	mov    QWORD PTR [rip+0x6c84],rbx        # 40f180 <__bss_start@@Base+0x1004>
  4084fc:	cmp    cl,0x1
  4084ff:	jne    4081db <__generate_code_for_binary_boolean_expression@@Base+0x13db>
  408505:	jmp    40851a <__generate_code_for_binary_boolean_expression@@Base+0x171a>
  408507:	mov    DWORD PTR [rax+r14*1],0x0
  40850f:	lea    rbx,[r14+0x4]
  408513:	mov    QWORD PTR [rip+0x6c66],rbx        # 40f180 <__bss_start@@Base+0x1004>
  40851a:	lea    rcx,[r14+0x8]
  40851e:	cmp    rcx,QWORD PTR [rip+0x6c53]        # 40f178 <__bss_start@@Base+0xffc>
  408525:	jbe    408576 <__generate_code_for_binary_boolean_expression@@Base+0x1776>
  408527:	add    r14,0x20007
  40852e:	and    r14,0xfffffffffffe0000
  408535:	mov    rdi,rax
  408538:	mov    rsi,r14
  40853b:	call   4031e0 <realloc@plt>
  408540:	mov    QWORD PTR [rip+0x6c29],rax        # 40f170 <__bss_start@@Base+0xff4>
  408547:	mov    QWORD PTR [rip+0x6c2a],r14        # 40f178 <__bss_start@@Base+0xffc>
  40854e:	mov    rbx,QWORD PTR [rip+0x6c2b]        # 40f180 <__bss_start@@Base+0x1004>
  408555:	lea    r14,[rbx+0x4]
  408559:	cmp    BYTE PTR [rip+0x6c00],0x0        # 40f160 <__bss_start@@Base+0xfe4>
  408560:	mov    DWORD PTR [rax+rbx*1],0x0
  408567:	mov    QWORD PTR [rip+0x6c12],r14        # 40f180 <__bss_start@@Base+0x1004>
  40856e:	je     4081f0 <__generate_code_for_binary_boolean_expression@@Base+0x13f0>
  408574:	jmp    408588 <__generate_code_for_binary_boolean_expression@@Base+0x1788>
  408576:	mov    DWORD PTR [rax+rbx*1],0x0
  40857d:	lea    r14,[rbx+0x4]
  408581:	mov    QWORD PTR [rip+0x6bf8],r14        # 40f180 <__bss_start@@Base+0x1004>
  408588:	lea    rcx,[rbx+0x8]
  40858c:	cmp    rcx,QWORD PTR [rip+0x6be5]        # 40f178 <__bss_start@@Base+0xffc>
  408593:	jbe    4085e7 <__generate_code_for_binary_boolean_expression@@Base+0x17e7>
  408595:	add    rbx,0x20007
  40859c:	and    rbx,0xfffffffffffe0000
  4085a3:	mov    rdi,rax
  4085a6:	mov    rsi,rbx
  4085a9:	call   4031e0 <realloc@plt>
  4085ae:	mov    QWORD PTR [rip+0x6bbb],rax        # 40f170 <__bss_start@@Base+0xff4>
  4085b5:	mov    QWORD PTR [rip+0x6bbc],rbx        # 40f178 <__bss_start@@Base+0xffc>
  4085bc:	mov    dl,BYTE PTR [rip+0x6b9e]        # 40f160 <__bss_start@@Base+0xfe4>
  4085c2:	mov    r14,QWORD PTR [rip+0x6bb7]        # 40f180 <__bss_start@@Base+0x1004>
  4085c9:	mov    DWORD PTR [rax+r14*1],0xa3000000
  4085d1:	lea    rcx,[r14+0x4]
  4085d5:	mov    QWORD PTR [rip+0x6ba4],rcx        # 40f180 <__bss_start@@Base+0x1004>
  4085dc:	cmp    dl,0x1
  4085df:	jne    408206 <__generate_code_for_binary_boolean_expression@@Base+0x1406>
  4085e5:	jmp    4085fa <__generate_code_for_binary_boolean_expression@@Base+0x17fa>
  4085e7:	mov    DWORD PTR [rax+r14*1],0xa3000000
  4085ef:	lea    rcx,[r14+0x4]
  4085f3:	mov    QWORD PTR [rip+0x6b86],rcx        # 40f180 <__bss_start@@Base+0x1004>
  4085fa:	lea    rdx,[r14+0x8]
  4085fe:	cmp    rdx,QWORD PTR [rip+0x6b73]        # 40f178 <__bss_start@@Base+0xffc>
  408605:	jbe    408206 <__generate_code_for_binary_boolean_expression@@Base+0x1406>
  40860b:	add    r14,0x20007
  408612:	and    r14,0xfffffffffffe0000
  408619:	mov    rdi,rax
  40861c:	mov    rsi,r14
  40861f:	call   4031e0 <realloc@plt>
  408624:	mov    QWORD PTR [rip+0x6b45],rax        # 40f170 <__bss_start@@Base+0xff4>
  40862b:	mov    QWORD PTR [rip+0x6b46],r14        # 40f178 <__bss_start@@Base+0xffc>
  408632:	mov    rcx,QWORD PTR [rip+0x6b47]        # 40f180 <__bss_start@@Base+0x1004>
  408639:	jmp    408206 <__generate_code_for_binary_boolean_expression@@Base+0x1406>
  40863e:	xchg   ax,ax
  408640:	cmp    QWORD PTR [rip+0x6b20],0x0        # 40f168 <__bss_start@@Base+0xfec>
  408648:	je     4087ae <__generate_code_for_binary_boolean_expression@@Base+0x19ae>
  40864e:	push   r14
  408650:	push   rbx
  408651:	push   rax
  408652:	cmp    BYTE PTR [rip+0x6b07],0x0        # 40f160 <__bss_start@@Base+0xfe4>
  408659:	je     4086ca <__generate_code_for_binary_boolean_expression@@Base+0x18ca>
  40865b:	mov    rbx,QWORD PTR [rip+0x6b1e]        # 40f180 <__bss_start@@Base+0x1004>
  408662:	lea    rax,[rbx+0x8]
  408666:	cmp    rax,QWORD PTR [rip+0x6b0b]        # 40f178 <__bss_start@@Base+0xffc>
  40866d:	jbe    408730 <__generate_code_for_binary_boolean_expression@@Base+0x1930>
  408673:	add    rbx,0x20007
  40867a:	and    rbx,0xfffffffffffe0000
  408681:	mov    rdi,QWORD PTR [rip+0x6ae8]        # 40f170 <__bss_start@@Base+0xff4>
  408688:	mov    rsi,rbx
  40868b:	call   4031e0 <realloc@plt>
  408690:	mov    rdi,rax
  408693:	mov    QWORD PTR [rip+0x6ad6],rax        # 40f170 <__bss_start@@Base+0xff4>
  40869a:	mov    QWORD PTR [rip+0x6ad7],rbx        # 40f178 <__bss_start@@Base+0xffc>
  4086a1:	mov    al,BYTE PTR [rip+0x6ab9]        # 40f160 <__bss_start@@Base+0xfe4>
  4086a7:	mov    rsi,QWORD PTR [rip+0x6ad2]        # 40f180 <__bss_start@@Base+0x1004>
  4086ae:	mov    QWORD PTR [rdi+rsi*1],0x0
  4086b6:	add    rsi,0x8
  4086ba:	mov    QWORD PTR [rip+0x6abf],rsi        # 40f180 <__bss_start@@Base+0x1004>
  4086c1:	cmp    al,0x1
  4086c3:	jne    4086eb <__generate_code_for_binary_boolean_expression@@Base+0x18eb>
  4086c5:	jmp    408751 <__generate_code_for_binary_boolean_expression@@Base+0x1951>
  4086ca:	mov    rdi,QWORD PTR [rip+0x6a9f]        # 40f170 <__bss_start@@Base+0xff4>
  4086d1:	mov    rax,QWORD PTR [rip+0x6aa8]        # 40f180 <__bss_start@@Base+0x1004>
  4086d8:	mov    QWORD PTR [rdi+rax*1],0x0
  4086e0:	add    rax,0x8
  4086e4:	mov    QWORD PTR [rip+0x6a95],rax        # 40f180 <__bss_start@@Base+0x1004>
  4086eb:	mov    rsi,QWORD PTR [rip+0x6aae]        # 40f1a0 <__bss_start@@Base+0x1024>
  4086f2:	mov    edx,0x4
  4086f7:	call   4030d0 <msync@plt>
  4086fc:	cmp    eax,0xffffffff
  4086ff:	je     4087ba <__generate_code_for_binary_boolean_expression@@Base+0x19ba>
  408705:	mov    rdi,QWORD PTR [rip+0x6a64]        # 40f170 <__bss_start@@Base+0xff4>
  40870c:	mov    rsi,QWORD PTR [rip+0x6a8d]        # 40f1a0 <__bss_start@@Base+0x1024>
  408713:	call   403200 <munmap@plt>
  408718:	mov    QWORD PTR [rip+0x6a4d],0x0        # 40f170 <__bss_start@@Base+0xff4>
  408723:	mov    QWORD PTR [rip+0x6a72],0x0        # 40f1a0 <__bss_start@@Base+0x1024>
  40872e:	jmp    40876e <__generate_code_for_binary_boolean_expression@@Base+0x196e>
  408730:	mov    rdi,QWORD PTR [rip+0x6a39]        # 40f170 <__bss_start@@Base+0xff4>
  408737:	mov    rsi,QWORD PTR [rip+0x6a42]        # 40f180 <__bss_start@@Base+0x1004>
  40873e:	mov    QWORD PTR [rdi+rsi*1],0x0
  408746:	add    rsi,0x8
  40874a:	mov    QWORD PTR [rip+0x6a2f],rsi        # 40f180 <__bss_start@@Base+0x1004>
  408751:	mov    rcx,QWORD PTR [rip+0x6a10]        # 40f168 <__bss_start@@Base+0xfec>
  408758:	mov    edx,0x1
  40875d:	call   403260 <fwrite@plt>
  408762:	mov    rdi,QWORD PTR [rip+0x6a07]        # 40f170 <__bss_start@@Base+0xff4>
  408769:	call   403040 <free@plt>
  40876e:	mov    rdi,QWORD PTR [rip+0x69f3]        # 40f168 <__bss_start@@Base+0xfec>
  408775:	call   4031c0 <fflush@plt>
  40877a:	mov    edi,DWORD PTR [rip+0x59f4]        # 40e174 <__data_start@@Base+0x2c>
  408780:	call   408c20 <__gcov_flush@@Base+0x2c0>
  408785:	mov    rdi,QWORD PTR [rip+0x69dc]        # 40f168 <__bss_start@@Base+0xfec>
  40878c:	call   4030c0 <fclose@plt>
  408791:	mov    QWORD PTR [rip+0x69cc],0x0        # 40f168 <__bss_start@@Base+0xfec>
  40879c:	mov    QWORD PTR [rip+0x69c9],0x0        # 40f170 <__bss_start@@Base+0xff4>
  4087a7:	add    rsp,0x8
  4087ab:	pop    rbx
  4087ac:	pop    r14
  4087ae:	mov    rdi,QWORD PTR [rip+0x69a3]        # 40f158 <__bss_start@@Base+0xfdc>
  4087b5:	jmp    403040 <free@plt>
  4087ba:	call   403050 <__errno_location@plt>
  4087bf:	mov    edi,DWORD PTR [rax]
  4087c1:	mov    rax,QWORD PTR [rip+0x5828]        # 40dff0 <stderr@GLIBC_2.2.5>
  4087c8:	mov    r14,QWORD PTR [rax]
  4087cb:	mov    rbx,QWORD PTR [rip+0x6986]        # 40f158 <__bss_start@@Base+0xfdc>
  4087d2:	call   403280 <strerror@plt>
  4087d7:	mov    rcx,rax
  4087da:	lea    rsi,[rip+0x170e]        # 409eef <_IO_stdin_used@@Base+0xeef>
  4087e1:	xor    eax,eax
  4087e3:	mov    rdi,r14
  4087e6:	mov    rdx,rbx
  4087e9:	call   403160 <fprintf@plt>
  4087ee:	jmp    408705 <__generate_code_for_binary_boolean_expression@@Base+0x1905>
  4087f3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4087fd:	nop    DWORD PTR [rax]
  408800:	push   rbx
  408801:	mov    rbx,rdi
  408804:	mov    edi,0x18
  408809:	call   4031b0 <malloc@plt>
  40880e:	mov    QWORD PTR [rax+0x8],rbx
  408812:	mov    QWORD PTR [rax+0x10],0x0
  40881a:	lea    rcx,[rip+0x696f]        # 40f190 <__bss_start@@Base+0x1014>
  408821:	mov    QWORD PTR [rax],rcx
  408824:	lea    rcx,[rip+0x698d]        # 40f1b8 <writeout_fn_list@@Base>
  40882b:	lea    rdx,[rcx+0x8]
  40882f:	mov    rsi,QWORD PTR [rcx+0x8]
  408833:	add    rsi,0x10
  408837:	xor    edi,edi
  408839:	cmp    QWORD PTR [rcx],0x0
  40883d:	setne  dil
  408841:	cmove  rsi,rdx
  408845:	mov    QWORD PTR [rsi],rax
  408848:	mov    QWORD PTR [rcx+rdi*8],rax
  40884c:	pop    rbx
  40884d:	ret    
  40884e:	xchg   ax,ax
  408850:	push   r14
  408852:	push   rbx
  408853:	push   rax
  408854:	lea    rax,[rip+0x695d]        # 40f1b8 <writeout_fn_list@@Base>
  40885b:	mov    rbx,QWORD PTR [rax]
  40885e:	test   rbx,rbx
  408861:	je     408883 <__generate_code_for_binary_boolean_expression@@Base+0x1a83>
  408863:	lea    r14,[rip+0x6926]        # 40f190 <__bss_start@@Base+0x1014>
  40886a:	nop    WORD PTR [rax+rax*1+0x0]
  408870:	cmp    QWORD PTR [rbx],r14
  408873:	jne    40887a <__generate_code_for_binary_boolean_expression@@Base+0x1a7a>
  408875:	xor    eax,eax
  408877:	call   QWORD PTR [rbx+0x8]
  40887a:	mov    rbx,QWORD PTR [rbx+0x10]
  40887e:	test   rbx,rbx
  408881:	jne    408870 <__generate_code_for_binary_boolean_expression@@Base+0x1a70>
  408883:	add    rsp,0x8
  408887:	pop    rbx
  408888:	pop    r14
  40888a:	ret    
  40888b:	nop    DWORD PTR [rax+rax*1+0x0]
  408890:	push   r15
  408892:	push   r14
  408894:	push   r12
  408896:	push   rbx
  408897:	push   rax
  408898:	lea    r14,[rip+0x6919]        # 40f1b8 <writeout_fn_list@@Base>
  40889f:	mov    rdi,QWORD PTR [r14]
  4088a2:	test   rdi,rdi
  4088a5:	je     408902 <__generate_code_for_binary_boolean_expression@@Base+0x1b02>
  4088a7:	xor    r12d,r12d
  4088aa:	lea    r15,[rip+0x68df]        # 40f190 <__bss_start@@Base+0x1014>
  4088b1:	jmp    4088d0 <__generate_code_for_binary_boolean_expression@@Base+0x1ad0>
  4088b3:	mov    QWORD PTR [r14],rbx
  4088b6:	cmp    rdi,QWORD PTR [r14+0x8]
  4088ba:	jne    4088eb <__generate_code_for_binary_boolean_expression@@Base+0x1aeb>
  4088bc:	mov    QWORD PTR [r14+0x8],r12
  4088c0:	test   r12,r12
  4088c3:	jne    4088f0 <__generate_code_for_binary_boolean_expression@@Base+0x1af0>
  4088c5:	jmp    4088f5 <__generate_code_for_binary_boolean_expression@@Base+0x1af5>
  4088c7:	nop    WORD PTR [rax+rax*1+0x0]
  4088d0:	mov    rbx,QWORD PTR [rdi+0x10]
  4088d4:	cmp    QWORD PTR [rdi],r15
  4088d7:	je     4088e0 <__generate_code_for_binary_boolean_expression@@Base+0x1ae0>
  4088d9:	mov    r12,rdi
  4088dc:	jmp    4088fa <__generate_code_for_binary_boolean_expression@@Base+0x1afa>
  4088de:	xchg   ax,ax
  4088e0:	cmp    rdi,QWORD PTR [r14]
  4088e3:	je     4088b3 <__generate_code_for_binary_boolean_expression@@Base+0x1ab3>
  4088e5:	cmp    rdi,QWORD PTR [r14+0x8]
  4088e9:	je     4088bc <__generate_code_for_binary_boolean_expression@@Base+0x1abc>
  4088eb:	test   r12,r12
  4088ee:	je     4088f5 <__generate_code_for_binary_boolean_expression@@Base+0x1af5>
  4088f0:	mov    QWORD PTR [r12+0x10],rbx
  4088f5:	call   403040 <free@plt>
  4088fa:	mov    rdi,rbx
  4088fd:	test   rbx,rbx
  408900:	jne    4088d0 <__generate_code_for_binary_boolean_expression@@Base+0x1ad0>
  408902:	add    rsp,0x8
  408906:	pop    rbx
  408907:	pop    r12
  408909:	pop    r14
  40890b:	pop    r15
  40890d:	ret    
  40890e:	xchg   ax,ax
  408910:	push   rbx
  408911:	mov    rbx,rdi
  408914:	mov    edi,0x18
  408919:	call   4031b0 <malloc@plt>
  40891e:	mov    QWORD PTR [rax+0x8],rbx
  408922:	mov    QWORD PTR [rax+0x10],0x0
  40892a:	lea    rcx,[rip+0x685f]        # 40f190 <__bss_start@@Base+0x1014>
  408931:	mov    QWORD PTR [rax],rcx
  408934:	lea    rcx,[rip+0x686d]        # 40f1a8 <flush_fn_list@@Base>
  40893b:	lea    rdx,[rcx+0x8]
  40893f:	mov    rsi,QWORD PTR [rcx+0x8]
  408943:	add    rsi,0x10
  408947:	xor    edi,edi
  408949:	cmp    QWORD PTR [rcx],0x0
  40894d:	setne  dil
  408951:	cmove  rsi,rdx
  408955:	mov    QWORD PTR [rsi],rax
  408958:	mov    QWORD PTR [rcx+rdi*8],rax
  40895c:	pop    rbx
  40895d:	ret    
  40895e:	xchg   ax,ax

0000000000408960 <__gcov_flush@@Base>:
  408960:	push   rbx
  408961:	lea    rax,[rip+0x6840]        # 40f1a8 <flush_fn_list@@Base>
  408968:	mov    rbx,QWORD PTR [rax]
  40896b:	test   rbx,rbx
  40896e:	je     40897e <__gcov_flush@@Base+0x1e>
  408970:	xor    eax,eax
  408972:	call   QWORD PTR [rbx+0x8]
  408975:	mov    rbx,QWORD PTR [rbx+0x10]
  408979:	test   rbx,rbx
  40897c:	jne    408970 <__gcov_flush@@Base+0x10>
  40897e:	pop    rbx
  40897f:	ret    
  408980:	push   r15
  408982:	push   r14
  408984:	push   r12
  408986:	push   rbx
  408987:	push   rax
  408988:	lea    r14,[rip+0x6819]        # 40f1a8 <flush_fn_list@@Base>
  40898f:	mov    rdi,QWORD PTR [r14]
  408992:	test   rdi,rdi
  408995:	je     4089f2 <__gcov_flush@@Base+0x92>
  408997:	xor    r12d,r12d
  40899a:	lea    r15,[rip+0x67ef]        # 40f190 <__bss_start@@Base+0x1014>
  4089a1:	jmp    4089c0 <__gcov_flush@@Base+0x60>
  4089a3:	mov    QWORD PTR [r14],rbx
  4089a6:	cmp    rdi,QWORD PTR [r14+0x8]
  4089aa:	jne    4089db <__gcov_flush@@Base+0x7b>
  4089ac:	mov    QWORD PTR [r14+0x8],r12
  4089b0:	test   r12,r12
  4089b3:	jne    4089e0 <__gcov_flush@@Base+0x80>
  4089b5:	jmp    4089e5 <__gcov_flush@@Base+0x85>
  4089b7:	nop    WORD PTR [rax+rax*1+0x0]
  4089c0:	mov    rbx,QWORD PTR [rdi+0x10]
  4089c4:	cmp    QWORD PTR [rdi],r15
  4089c7:	je     4089d0 <__gcov_flush@@Base+0x70>
  4089c9:	mov    r12,rdi
  4089cc:	jmp    4089ea <__gcov_flush@@Base+0x8a>
  4089ce:	xchg   ax,ax
  4089d0:	cmp    rdi,QWORD PTR [r14]
  4089d3:	je     4089a3 <__gcov_flush@@Base+0x43>
  4089d5:	cmp    rdi,QWORD PTR [r14+0x8]
  4089d9:	je     4089ac <__gcov_flush@@Base+0x4c>
  4089db:	test   r12,r12
  4089de:	je     4089e5 <__gcov_flush@@Base+0x85>
  4089e0:	mov    QWORD PTR [r12+0x10],rbx
  4089e5:	call   403040 <free@plt>
  4089ea:	mov    rdi,rbx
  4089ed:	test   rbx,rbx
  4089f0:	jne    4089c0 <__gcov_flush@@Base+0x60>
  4089f2:	add    rsp,0x8
  4089f6:	pop    rbx
  4089f7:	pop    r12
  4089f9:	pop    r14
  4089fb:	pop    r15
  4089fd:	ret    
  4089fe:	xchg   ax,ax
  408a00:	push   r14
  408a02:	push   rbx
  408a03:	push   rax
  408a04:	mov    r14,rsi
  408a07:	test   rdi,rdi
  408a0a:	je     408a57 <__gcov_flush@@Base+0xf7>
  408a0c:	mov    rbx,rdi
  408a0f:	mov    edi,0x18
  408a14:	call   4031b0 <malloc@plt>
  408a19:	mov    QWORD PTR [rax+0x8],rbx
  408a1d:	mov    QWORD PTR [rax+0x10],0x0
  408a25:	lea    rcx,[rip+0x6764]        # 40f190 <__bss_start@@Base+0x1014>
  408a2c:	mov    QWORD PTR [rax],rcx
  408a2f:	lea    rcx,[rip+0x6782]        # 40f1b8 <writeout_fn_list@@Base>
  408a36:	lea    rdx,[rcx+0x8]
  408a3a:	mov    rsi,QWORD PTR [rcx+0x8]
  408a3e:	add    rsi,0x10
  408a42:	xor    edi,edi
  408a44:	cmp    QWORD PTR [rcx],0x0
  408a48:	setne  dil
  408a4c:	cmove  rsi,rdx
  408a50:	mov    QWORD PTR [rsi],rax
  408a53:	mov    QWORD PTR [rcx+rdi*8],rax
  408a57:	test   r14,r14
  408a5a:	je     408aa4 <__gcov_flush@@Base+0x144>
  408a5c:	mov    edi,0x18
  408a61:	call   4031b0 <malloc@plt>
  408a66:	mov    QWORD PTR [rax+0x8],r14
  408a6a:	mov    QWORD PTR [rax+0x10],0x0
  408a72:	lea    rcx,[rip+0x6717]        # 40f190 <__bss_start@@Base+0x1014>
  408a79:	mov    QWORD PTR [rax],rcx
  408a7c:	lea    rcx,[rip+0x6725]        # 40f1a8 <flush_fn_list@@Base>
  408a83:	lea    rdx,[rcx+0x8]
  408a87:	mov    rsi,QWORD PTR [rcx+0x8]
  408a8b:	add    rsi,0x10
  408a8f:	xor    edi,edi
  408a91:	cmp    QWORD PTR [rcx],0x0
  408a95:	setne  dil
  408a99:	cmove  rsi,rdx
  408a9d:	mov    QWORD PTR [rsi],rax
  408aa0:	mov    QWORD PTR [rcx+rdi*8],rax
  408aa4:	cmp    BYTE PTR [rip+0x66ed],0x0        # 40f198 <__bss_start@@Base+0x101c>
  408aab:	je     408ab5 <__gcov_flush@@Base+0x155>
  408aad:	add    rsp,0x8
  408ab1:	pop    rbx
  408ab2:	pop    r14
  408ab4:	ret    
  408ab5:	mov    BYTE PTR [rip+0x66dc],0x1        # 40f198 <__bss_start@@Base+0x101c>
  408abc:	lea    rdi,[rip+0xfffffffffffffebd]        # 408980 <__gcov_flush@@Base+0x20>
  408ac3:	call   408f70 <__libc_csu_fini@@Base+0x10>
  408ac8:	lea    rdi,[rip+0xfffffffffffffdc1]        # 408890 <__generate_code_for_binary_boolean_expression@@Base+0x1a90>
  408acf:	call   408f70 <__libc_csu_fini@@Base+0x10>
  408ad4:	lea    rdi,[rip+0xfffffffffffffd75]        # 408850 <__generate_code_for_binary_boolean_expression@@Base+0x1a50>
  408adb:	add    rsp,0x8
  408adf:	pop    rbx
  408ae0:	pop    r14
  408ae2:	jmp    408f70 <__libc_csu_fini@@Base+0x10>
  408ae7:	nop
  408ae8:	nop    DWORD PTR [rax+rax*1+0x0]
  408af0:	push   r15
  408af2:	push   r14
  408af4:	push   rbx
  408af5:	mov    r14,rdi
  408af8:	lea    rbx,[rdi+0x1]
  408afc:	lea    r15,[rip+0x5675]        # 40e178 <lprofDirMode@@Base>
  408b03:	jmp    408b14 <__gcov_flush@@Base+0x1b4>
  408b05:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408b0f:	nop
  408b10:	add    rbx,0x1
  408b14:	movzx  eax,BYTE PTR [rbx]
  408b17:	cmp    al,0x2f
  408b19:	je     408b30 <__gcov_flush@@Base+0x1d0>
  408b1b:	test   al,al
  408b1d:	jne    408b10 <__gcov_flush@@Base+0x1b0>
  408b1f:	jmp    408b43 <__gcov_flush@@Base+0x1e3>
  408b21:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408b2b:	nop    DWORD PTR [rax+rax*1+0x0]
  408b30:	mov    BYTE PTR [rbx],0x0
  408b33:	mov    esi,DWORD PTR [r15]
  408b36:	mov    rdi,r14
  408b39:	call   403080 <mkdir@plt>
  408b3e:	mov    BYTE PTR [rbx],0x2f
  408b41:	jmp    408b10 <__gcov_flush@@Base+0x1b0>
  408b43:	pop    rbx
  408b44:	pop    r14
  408b46:	pop    r15
  408b48:	ret    
  408b49:	nop    DWORD PTR [rax+0x0]
  408b50:	lea    rax,[rip+0x5621]        # 40e178 <lprofDirMode@@Base>
  408b57:	mov    eax,DWORD PTR [rax]
  408b59:	ret    
  408b5a:	nop    WORD PTR [rax+rax*1+0x0]
  408b60:	lea    rax,[rip+0x5611]        # 40e178 <lprofDirMode@@Base>
  408b67:	mov    DWORD PTR [rax],edi
  408b69:	ret    
  408b6a:	nop    WORD PTR [rax+rax*1+0x0]
  408b70:	push   rbp
  408b71:	push   rbx
  408b72:	sub    rsp,0x188
  408b79:	mov    ebp,esi
  408b7b:	mov    rbx,rdi
  408b7e:	mov    rdi,rsp
  408b81:	call   403120 <uname@plt>
  408b86:	test   eax,eax
  408b88:	js     408b9c <__gcov_flush@@Base+0x23c>
  408b8a:	lea    rsi,[rsp+0x41]
  408b8f:	movsxd rdx,ebp
  408b92:	mov    rdi,rbx
  408b95:	call   403060 <strncpy@plt>
  408b9a:	xor    eax,eax
  408b9c:	add    rsp,0x188
  408ba3:	pop    rbx
  408ba4:	pop    rbp
  408ba5:	ret    
  408ba6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408bb0:	push   rbp
  408bb1:	push   r14
  408bb3:	push   rbx
  408bb4:	sub    rsp,0x20
  408bb8:	mov    ebx,edi
  408bba:	mov    WORD PTR [rsp+0x2],0x0
  408bc1:	xorps  xmm0,xmm0
  408bc4:	movups XMMWORD PTR [rsp+0x8],xmm0
  408bc9:	call   4030a0 <getpid@plt>
  408bce:	mov    DWORD PTR [rsp+0x18],eax
  408bd2:	mov    WORD PTR [rsp],0x1
  408bd8:	mov    r14,rsp
  408bdb:	nop    DWORD PTR [rax+rax*1+0x0]
  408be0:	xor    ebp,ebp
  408be2:	mov    esi,0x7
  408be7:	xor    eax,eax
  408be9:	mov    edi,ebx
  408beb:	mov    rdx,r14
  408bee:	call   403090 <fcntl@plt>
  408bf3:	cmp    eax,0xffffffff
  408bf6:	jne    408c0e <__gcov_flush@@Base+0x2ae>
  408bf8:	call   403050 <__errno_location@plt>
  408bfd:	mov    eax,DWORD PTR [rax]
  408bff:	cmp    eax,0x4
  408c02:	je     408be0 <__gcov_flush@@Base+0x280>
  408c04:	cmp    eax,0x25
  408c07:	jne    408c0e <__gcov_flush@@Base+0x2ae>
  408c09:	mov    ebp,0xffffffff
  408c0e:	mov    eax,ebp
  408c10:	add    rsp,0x20
  408c14:	pop    rbx
  408c15:	pop    r14
  408c17:	pop    rbp
  408c18:	ret    
  408c19:	nop    DWORD PTR [rax+0x0]
  408c20:	push   rbp
  408c21:	push   r14
  408c23:	push   rbx
  408c24:	sub    rsp,0x20
  408c28:	mov    ebx,edi
  408c2a:	mov    WORD PTR [rsp+0x2],0x0
  408c31:	xorps  xmm0,xmm0
  408c34:	movups XMMWORD PTR [rsp+0x8],xmm0
  408c39:	call   4030a0 <getpid@plt>
  408c3e:	mov    DWORD PTR [rsp+0x18],eax
  408c42:	mov    WORD PTR [rsp],0x2
  408c48:	mov    r14,rsp
  408c4b:	nop    DWORD PTR [rax+rax*1+0x0]
  408c50:	xor    ebp,ebp
  408c52:	mov    esi,0x7
  408c57:	xor    eax,eax
  408c59:	mov    edi,ebx
  408c5b:	mov    rdx,r14
  408c5e:	call   403090 <fcntl@plt>
  408c63:	cmp    eax,0xffffffff
  408c66:	jne    408c7e <__gcov_flush@@Base+0x31e>
  408c68:	call   403050 <__errno_location@plt>
  408c6d:	mov    eax,DWORD PTR [rax]
  408c6f:	cmp    eax,0x4
  408c72:	je     408c50 <__gcov_flush@@Base+0x2f0>
  408c74:	cmp    eax,0x25
  408c77:	jne    408c7e <__gcov_flush@@Base+0x31e>
  408c79:	mov    ebp,0xffffffff
  408c7e:	mov    eax,ebp
  408c80:	add    rsp,0x20
  408c84:	pop    rbx
  408c85:	pop    r14
  408c87:	pop    rbp
  408c88:	ret    
  408c89:	nop    DWORD PTR [rax+0x0]
  408c90:	push   rbp
  408c91:	push   r14
  408c93:	push   rbx
  408c94:	sub    rsp,0x20
  408c98:	xor    ebx,ebx
  408c9a:	mov    esi,0x42
  408c9f:	mov    edx,0x1b6
  408ca4:	xor    eax,eax
  408ca6:	call   403210 <open@plt>
  408cab:	test   eax,eax
  408cad:	js     408d0a <__gcov_flush@@Base+0x3aa>
  408caf:	mov    ebp,eax
  408cb1:	mov    WORD PTR [rsp+0x2],0x0
  408cb8:	xorps  xmm0,xmm0
  408cbb:	movups XMMWORD PTR [rsp+0x8],xmm0
  408cc0:	call   4030a0 <getpid@plt>
  408cc5:	mov    DWORD PTR [rsp+0x18],eax
  408cc9:	mov    WORD PTR [rsp],0x1
  408ccf:	mov    r14,rsp
  408cd2:	mov    esi,0x7
  408cd7:	xor    eax,eax
  408cd9:	mov    edi,ebp
  408cdb:	mov    rdx,r14
  408cde:	call   403090 <fcntl@plt>
  408ce3:	cmp    eax,0xffffffff
  408ce6:	jne    408cf9 <__gcov_flush@@Base+0x399>
  408ce8:	call   403050 <__errno_location@plt>
  408ced:	mov    eax,DWORD PTR [rax]
  408cef:	cmp    eax,0x4
  408cf2:	je     408cd2 <__gcov_flush@@Base+0x372>
  408cf4:	cmp    eax,0x25
  408cf7:	je     408d16 <__gcov_flush@@Base+0x3b6>
  408cf9:	lea    rsi,[rip+0x106e]        # 409d6e <_IO_stdin_used@@Base+0xd6e>
  408d00:	mov    edi,ebp
  408d02:	call   4031f0 <fdopen@plt>
  408d07:	mov    rbx,rax
  408d0a:	mov    rax,rbx
  408d0d:	add    rsp,0x20
  408d11:	pop    rbx
  408d12:	pop    r14
  408d14:	pop    rbp
  408d15:	ret    
  408d16:	mov    rax,QWORD PTR [rip+0x52d3]        # 40dff0 <stderr@GLIBC_2.2.5>
  408d1d:	mov    rdi,QWORD PTR [rax]
  408d20:	lea    rsi,[rip+0x11e9]        # 409f10 <_IO_stdin_used@@Base+0xf10>
  408d27:	lea    rdx,[rip+0x122b]        # 409f59 <_IO_stdin_used@@Base+0xf59>
  408d2e:	xor    eax,eax
  408d30:	call   403160 <fprintf@plt>
  408d35:	jmp    408cf9 <__gcov_flush@@Base+0x399>
  408d37:	nop    WORD PTR [rax+rax*1+0x0]
  408d40:	push   r15
  408d42:	push   r14
  408d44:	push   r12
  408d46:	push   rbx
  408d47:	push   rax
  408d48:	mov    r14,rsi
  408d4b:	mov    r15,rdi
  408d4e:	lea    rdi,[rip+0x1232]        # 409f87 <_IO_stdin_used@@Base+0xf87>
  408d55:	call   403030 <getenv@plt>
  408d5a:	mov    rbx,rax
  408d5d:	lea    rdi,[rip+0x122f]        # 409f93 <_IO_stdin_used@@Base+0xf93>
  408d64:	call   403030 <getenv@plt>
  408d69:	mov    QWORD PTR [r14],0x0
  408d70:	mov    DWORD PTR [r15],0x0
  408d77:	test   rbx,rbx
  408d7a:	je     408db1 <__gcov_flush@@Base+0x451>
  408d7c:	xor    r12d,r12d
  408d7f:	cmp    BYTE PTR [rbx],0x0
  408d82:	je     408db1 <__gcov_flush@@Base+0x451>
  408d84:	test   rax,rax
  408d87:	je     408da1 <__gcov_flush@@Base+0x441>
  408d89:	xor    r12d,r12d
  408d8c:	xor    esi,esi
  408d8e:	mov    edx,0xa
  408d93:	mov    rdi,rax
  408d96:	call   403180 <strtol@plt>
  408d9b:	test   eax,eax
  408d9d:	cmovns r12d,eax
  408da1:	mov    DWORD PTR [r15],r12d
  408da4:	mov    rdi,rbx
  408da7:	call   4030e0 <strlen@plt>
  408dac:	mov    QWORD PTR [r14],rax
  408daf:	jmp    408db3 <__gcov_flush@@Base+0x453>
  408db1:	xor    ebx,ebx
  408db3:	mov    rax,rbx
  408db6:	add    rsp,0x8
  408dba:	pop    rbx
  408dbb:	pop    r12
  408dbd:	pop    r14
  408dbf:	pop    r15
  408dc1:	ret    
  408dc2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408dcc:	nop    DWORD PTR [rax+0x0]
  408dd0:	push   r15
  408dd2:	push   r14
  408dd4:	push   r12
  408dd6:	push   rbx
  408dd7:	push   rax
  408dd8:	mov    r15,rcx
  408ddb:	mov    r12,rdx
  408dde:	mov    rbx,rsi
  408de1:	mov    r14,rdi
  408de4:	test   r8d,r8d
  408de7:	jle    408e0f <__gcov_flush@@Base+0x4af>
  408de9:	lea    rax,[rbx+0x1]
  408ded:	xor    ecx,ecx
  408def:	nop
  408df0:	movzx  edx,BYTE PTR [rax]
  408df3:	cmp    dl,0x2f
  408df6:	je     408e00 <__gcov_flush@@Base+0x4a0>
  408df8:	test   dl,dl
  408dfa:	jne    408e06 <__gcov_flush@@Base+0x4a6>
  408dfc:	jmp    408e0f <__gcov_flush@@Base+0x4af>
  408dfe:	xchg   ax,ax
  408e00:	add    ecx,0x1
  408e03:	mov    rbx,rax
  408e06:	add    rax,0x1
  408e0a:	cmp    ecx,r8d
  408e0d:	jl     408df0 <__gcov_flush@@Base+0x490>
  408e0f:	mov    rdi,r14
  408e12:	mov    rsi,r12
  408e15:	mov    rdx,r15
  408e18:	call   403190 <memcpy@plt>
  408e1d:	cmp    BYTE PTR [r12+r15*1-0x1],0x2f
  408e23:	je     408e2e <__gcov_flush@@Base+0x4ce>
  408e25:	mov    BYTE PTR [r14+r15*1],0x2f
  408e2a:	add    r15,0x1
  408e2e:	add    r14,r15
  408e31:	mov    rdi,rbx
  408e34:	call   4030e0 <strlen@plt>
  408e39:	lea    rdx,[rax+0x1]
  408e3d:	mov    rdi,r14
  408e40:	mov    rsi,rbx
  408e43:	add    rsp,0x8
  408e47:	pop    rbx
  408e48:	pop    r12
  408e4a:	pop    r14
  408e4c:	pop    r15
  408e4e:	jmp    403190 <memcpy@plt>
  408e53:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408e5d:	nop    DWORD PTR [rax]
  408e60:	mov    esi,0x2f
  408e65:	jmp    403100 <strchr@plt>
  408e6a:	nop    WORD PTR [rax+rax*1+0x0]
  408e70:	mov    esi,0x2f
  408e75:	jmp    403110 <strrchr@plt>
  408e7a:	nop    WORD PTR [rax+rax*1+0x0]
  408e80:	push   rax
  408e81:	mov    DWORD PTR [rsp+0x4],0x0
  408e89:	lea    rsi,[rsp+0x4]
  408e8e:	mov    edi,0x2
  408e93:	xor    eax,eax
  408e95:	call   4031a0 <prctl@plt>
  408e9a:	mov    ecx,DWORD PTR [rsp+0x4]
  408e9e:	test   eax,eax
  408ea0:	jne    408eb9 <__gcov_flush@@Base+0x559>
  408ea2:	cmp    ecx,0x9
  408ea5:	jne    408eb9 <__gcov_flush@@Base+0x559>
  408ea7:	mov    edi,0x1
  408eac:	xor    esi,esi
  408eae:	xor    eax,eax
  408eb0:	call   4031a0 <prctl@plt>
  408eb5:	mov    ecx,DWORD PTR [rsp+0x4]
  408eb9:	xor    eax,eax
  408ebb:	cmp    ecx,0x9
  408ebe:	sete   al
  408ec1:	pop    rcx
  408ec2:	ret    
  408ec3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408ecd:	nop    DWORD PTR [rax]
  408ed0:	mov    edi,0x1
  408ed5:	mov    esi,0x9
  408eda:	xor    eax,eax
  408edc:	jmp    4031a0 <prctl@plt>
  408ee1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408eeb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000408ef0 <__libc_csu_init@@Base>:
  408ef0:	endbr64 
  408ef4:	push   r15
  408ef6:	lea    r15,[rip+0x3f03]        # 40ce00 <_IO_stdin_used@@Base+0x3e00>
  408efd:	push   r14
  408eff:	mov    r14,rdx
  408f02:	push   r13
  408f04:	mov    r13,rsi
  408f07:	push   r12
  408f09:	mov    r12d,edi
  408f0c:	push   rbp
  408f0d:	lea    rbp,[rip+0x3f24]        # 40ce38 <_IO_stdin_used@@Base+0x3e38>
  408f14:	push   rbx
  408f15:	sub    rbp,r15
  408f18:	sub    rsp,0x8
  408f1c:	call   403000 <getenv@plt-0x30>
  408f21:	sar    rbp,0x3
  408f25:	je     408f46 <__libc_csu_init@@Base+0x56>
  408f27:	xor    ebx,ebx
  408f29:	nop    DWORD PTR [rax+0x0]
  408f30:	mov    rdx,r14
  408f33:	mov    rsi,r13
  408f36:	mov    edi,r12d
  408f39:	call   QWORD PTR [r15+rbx*8]
  408f3d:	add    rbx,0x1
  408f41:	cmp    rbp,rbx
  408f44:	jne    408f30 <__libc_csu_init@@Base+0x40>
  408f46:	add    rsp,0x8
  408f4a:	pop    rbx
  408f4b:	pop    rbp
  408f4c:	pop    r12
  408f4e:	pop    r13
  408f50:	pop    r14
  408f52:	pop    r15
  408f54:	ret    
  408f55:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000408f60 <__libc_csu_fini@@Base>:
  408f60:	endbr64 
  408f64:	ret    
  408f65:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408f6f:	nop
  408f70:	endbr64 
  408f74:	mov    rdx,QWORD PTR [rip+0x51d5]        # 40e150 <__data_start@@Base+0x8>
  408f7b:	xor    esi,esi
  408f7d:	jmp    403240 <__cxa_atexit@plt>

Disassembly of section .fini:

0000000000408f84 <.fini>:
  408f84:	endbr64 
  408f88:	sub    rsp,0x8
  408f8c:	add    rsp,0x8
  408f90:	ret    
