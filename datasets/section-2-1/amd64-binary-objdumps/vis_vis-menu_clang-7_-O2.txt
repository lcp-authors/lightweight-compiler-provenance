
../repos/vis/vis-menu:     file format elf64-x86-64


Disassembly of section .init:

0000000000401000 <.init>:
  401000:	endbr64 
  401004:	sub    rsp,0x8
  401008:	mov    rax,QWORD PTR [rip+0x4fd9]        # 405fe8 <__ctype_b_loc@plt+0x4de8>
  40100f:	test   rax,rax
  401012:	je     401016 <free@plt-0x1a>
  401014:	call   rax
  401016:	add    rsp,0x8
  40101a:	ret    

Disassembly of section .plt:

0000000000401020 <free@plt-0x10>:
  401020:	push   QWORD PTR [rip+0x4eb2]        # 405ed8 <__ctype_b_loc@plt+0x4cd8>
  401026:	jmp    QWORD PTR [rip+0x4eb4]        # 405ee0 <__ctype_b_loc@plt+0x4ce0>
  40102c:	nop    DWORD PTR [rax+0x0]

0000000000401030 <free@plt>:
  401030:	jmp    QWORD PTR [rip+0x4eb2]        # 405ee8 <__ctype_b_loc@plt+0x4ce8>
  401036:	push   0x0
  40103b:	jmp    401020 <free@plt-0x10>

0000000000401040 <__errno_location@plt>:
  401040:	jmp    QWORD PTR [rip+0x4eaa]        # 405ef0 <__ctype_b_loc@plt+0x4cf0>
  401046:	push   0x1
  40104b:	jmp    401020 <free@plt-0x10>

0000000000401050 <strncpy@plt>:
  401050:	jmp    QWORD PTR [rip+0x4ea2]        # 405ef8 <__ctype_b_loc@plt+0x4cf8>
  401056:	push   0x2
  40105b:	jmp    401020 <free@plt-0x10>

0000000000401060 <puts@plt>:
  401060:	jmp    QWORD PTR [rip+0x4e9a]        # 405f00 <__ctype_b_loc@plt+0x4d00>
  401066:	push   0x3
  40106b:	jmp    401020 <free@plt-0x10>

0000000000401070 <strlen@plt>:
  401070:	jmp    QWORD PTR [rip+0x4e92]        # 405f08 <__ctype_b_loc@plt+0x4d08>
  401076:	push   0x4
  40107b:	jmp    401020 <free@plt-0x10>

0000000000401080 <__stack_chk_fail@plt>:
  401080:	jmp    QWORD PTR [rip+0x4e8a]        # 405f10 <__ctype_b_loc@plt+0x4d10>
  401086:	push   0x5
  40108b:	jmp    401020 <free@plt-0x10>

0000000000401090 <strchr@plt>:
  401090:	jmp    QWORD PTR [rip+0x4e82]        # 405f18 <__ctype_b_loc@plt+0x4d18>
  401096:	push   0x6
  40109b:	jmp    401020 <free@plt-0x10>

00000000004010a0 <memset@plt>:
  4010a0:	jmp    QWORD PTR [rip+0x4e7a]        # 405f20 <__ctype_b_loc@plt+0x4d20>
  4010a6:	push   0x7
  4010ab:	jmp    401020 <free@plt-0x10>

00000000004010b0 <freopen@plt>:
  4010b0:	jmp    QWORD PTR [rip+0x4e72]        # 405f28 <__ctype_b_loc@plt+0x4d28>
  4010b6:	push   0x8
  4010bb:	jmp    401020 <free@plt-0x10>

00000000004010c0 <ioctl@plt>:
  4010c0:	jmp    QWORD PTR [rip+0x4e6a]        # 405f30 <__ctype_b_loc@plt+0x4d30>
  4010c6:	push   0x9
  4010cb:	jmp    401020 <free@plt-0x10>

00000000004010d0 <close@plt>:
  4010d0:	jmp    QWORD PTR [rip+0x4e62]        # 405f38 <__ctype_b_loc@plt+0x4d38>
  4010d6:	push   0xa
  4010db:	jmp    401020 <free@plt-0x10>

00000000004010e0 <read@plt>:
  4010e0:	jmp    QWORD PTR [rip+0x4e5a]        # 405f40 <__ctype_b_loc@plt+0x4d40>
  4010e6:	push   0xb
  4010eb:	jmp    401020 <free@plt-0x10>

00000000004010f0 <fgets@plt>:
  4010f0:	jmp    QWORD PTR [rip+0x4e52]        # 405f48 <__ctype_b_loc@plt+0x4d48>
  4010f6:	push   0xc
  4010fb:	jmp    401020 <free@plt-0x10>

0000000000401100 <calloc@plt>:
  401100:	jmp    QWORD PTR [rip+0x4e4a]        # 405f50 <__ctype_b_loc@plt+0x4d50>
  401106:	push   0xd
  40110b:	jmp    401020 <free@plt-0x10>

0000000000401110 <strcmp@plt>:
  401110:	jmp    QWORD PTR [rip+0x4e42]        # 405f58 <__ctype_b_loc@plt+0x4d58>
  401116:	push   0xe
  40111b:	jmp    401020 <free@plt-0x10>

0000000000401120 <memcpy@plt>:
  401120:	jmp    QWORD PTR [rip+0x4e3a]        # 405f60 <__ctype_b_loc@plt+0x4d60>
  401126:	push   0xf
  40112b:	jmp    401020 <free@plt-0x10>

0000000000401130 <fflush@plt>:
  401130:	jmp    QWORD PTR [rip+0x4e32]        # 405f68 <__ctype_b_loc@plt+0x4d68>
  401136:	push   0x10
  40113b:	jmp    401020 <free@plt-0x10>

0000000000401140 <realloc@plt>:
  401140:	jmp    QWORD PTR [rip+0x4e2a]        # 405f70 <__ctype_b_loc@plt+0x4d70>
  401146:	push   0x11
  40114b:	jmp    401020 <free@plt-0x10>

0000000000401150 <__strcpy_chk@plt>:
  401150:	jmp    QWORD PTR [rip+0x4e22]        # 405f78 <__ctype_b_loc@plt+0x4d78>
  401156:	push   0x12
  40115b:	jmp    401020 <free@plt-0x10>

0000000000401160 <memmove@plt>:
  401160:	jmp    QWORD PTR [rip+0x4e1a]        # 405f80 <__ctype_b_loc@plt+0x4d80>
  401166:	push   0x13
  40116b:	jmp    401020 <free@plt-0x10>

0000000000401170 <tcgetattr@plt>:
  401170:	jmp    QWORD PTR [rip+0x4e12]        # 405f88 <__ctype_b_loc@plt+0x4d88>
  401176:	push   0x14
  40117b:	jmp    401020 <free@plt-0x10>

0000000000401180 <tcsetattr@plt>:
  401180:	jmp    QWORD PTR [rip+0x4e0a]        # 405f90 <__ctype_b_loc@plt+0x4d90>
  401186:	push   0x15
  40118b:	jmp    401020 <free@plt-0x10>

0000000000401190 <open@plt>:
  401190:	jmp    QWORD PTR [rip+0x4e02]        # 405f98 <__ctype_b_loc@plt+0x4d98>
  401196:	push   0x16
  40119b:	jmp    401020 <free@plt-0x10>

00000000004011a0 <strtok@plt>:
  4011a0:	jmp    QWORD PTR [rip+0x4dfa]        # 405fa0 <__ctype_b_loc@plt+0x4da0>
  4011a6:	push   0x17
  4011ab:	jmp    401020 <free@plt-0x10>

00000000004011b0 <strtoul@plt>:
  4011b0:	jmp    QWORD PTR [rip+0x4df2]        # 405fa8 <__ctype_b_loc@plt+0x4da8>
  4011b6:	push   0x18
  4011bb:	jmp    401020 <free@plt-0x10>

00000000004011c0 <exit@plt>:
  4011c0:	jmp    QWORD PTR [rip+0x4dea]        # 405fb0 <__ctype_b_loc@plt+0x4db0>
  4011c6:	push   0x19
  4011cb:	jmp    401020 <free@plt-0x10>

00000000004011d0 <fwrite@plt>:
  4011d0:	jmp    QWORD PTR [rip+0x4de2]        # 405fb8 <__ctype_b_loc@plt+0x4db8>
  4011d6:	push   0x1a
  4011db:	jmp    401020 <free@plt-0x10>

00000000004011e0 <__fprintf_chk@plt>:
  4011e0:	jmp    QWORD PTR [rip+0x4dda]        # 405fc0 <__ctype_b_loc@plt+0x4dc0>
  4011e6:	push   0x1b
  4011eb:	jmp    401020 <free@plt-0x10>

00000000004011f0 <strdup@plt>:
  4011f0:	jmp    QWORD PTR [rip+0x4dd2]        # 405fc8 <__ctype_b_loc@plt+0x4dc8>
  4011f6:	push   0x1c
  4011fb:	jmp    401020 <free@plt-0x10>

0000000000401200 <__ctype_b_loc@plt>:
  401200:	jmp    QWORD PTR [rip+0x4dca]        # 405fd0 <__ctype_b_loc@plt+0x4dd0>
  401206:	push   0x1d
  40120b:	jmp    401020 <free@plt-0x10>

Disassembly of section .text:

0000000000401210 <.text>:
  401210:	endbr64 
  401214:	xor    ebp,ebp
  401216:	mov    r9,rdx
  401219:	pop    rsi
  40121a:	mov    rdx,rsp
  40121d:	and    rsp,0xfffffffffffffff0
  401221:	push   rax
  401222:	push   rsp
  401223:	mov    r8,0x403470
  40122a:	mov    rcx,0x403400
  401231:	mov    rdi,0x401300
  401238:	call   QWORD PTR [rip+0x4da2]        # 405fe0 <__ctype_b_loc@plt+0x4de0>
  40123e:	hlt    
  40123f:	nop
  401240:	endbr64 
  401244:	ret    
  401245:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40124f:	nop
  401250:	mov    eax,0x406008
  401255:	cmp    rax,0x406008
  40125b:	je     401270 <__ctype_b_loc@plt+0x70>
  40125d:	mov    eax,0x0
  401262:	test   rax,rax
  401265:	je     401270 <__ctype_b_loc@plt+0x70>
  401267:	mov    edi,0x406008
  40126c:	jmp    rax
  40126e:	xchg   ax,ax
  401270:	ret    
  401271:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40127c:	nop    DWORD PTR [rax+0x0]
  401280:	mov    esi,0x406008
  401285:	sub    rsi,0x406008
  40128c:	mov    rax,rsi
  40128f:	shr    rsi,0x3f
  401293:	sar    rax,0x3
  401297:	add    rsi,rax
  40129a:	sar    rsi,1
  40129d:	je     4012b0 <__ctype_b_loc@plt+0xb0>
  40129f:	mov    eax,0x0
  4012a4:	test   rax,rax
  4012a7:	je     4012b0 <__ctype_b_loc@plt+0xb0>
  4012a9:	mov    edi,0x406008
  4012ae:	jmp    rax
  4012b0:	ret    
  4012b1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4012bc:	nop    DWORD PTR [rax+0x0]
  4012c0:	endbr64 
  4012c4:	cmp    BYTE PTR [rip+0x4d45],0x0        # 406010 <__ctype_b_loc@plt+0x4e10>
  4012cb:	jne    4012e0 <__ctype_b_loc@plt+0xe0>
  4012cd:	push   rbp
  4012ce:	mov    rbp,rsp
  4012d1:	call   401250 <__ctype_b_loc@plt+0x50>
  4012d6:	mov    BYTE PTR [rip+0x4d33],0x1        # 406010 <__ctype_b_loc@plt+0x4e10>
  4012dd:	pop    rbp
  4012de:	ret    
  4012df:	nop
  4012e0:	ret    
  4012e1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4012ec:	nop    DWORD PTR [rax+0x0]
  4012f0:	endbr64 
  4012f4:	jmp    401280 <__ctype_b_loc@plt+0x80>
  4012f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401300:	push   rbp
  401301:	mov    rbp,rsp
  401304:	push   r15
  401306:	push   r14
  401308:	push   r13
  40130a:	push   r12
  40130c:	push   rbx
  40130d:	and    rsp,0xffffffffffffffe0
  401311:	sub    rsp,0x2040
  401318:	mov    rax,QWORD PTR fs:0x28
  401321:	mov    QWORD PTR [rsp+0x2020],rax
  401329:	cmp    edi,0x2
  40132c:	jl     4014cd <__ctype_b_loc@plt+0x2cd>
  401332:	mov    r12,rsi
  401335:	mov    r14d,edi
  401338:	mov    r15d,0x1
  40133e:	lea    rbx,[rip+0x2f8f]        # 4042d4 <__ctype_b_loc@plt+0x30d4>
  401345:	mov    DWORD PTR [rsp+0x8],edi
  401349:	jmp    401380 <__ctype_b_loc@plt+0x180>
  40134b:	movsxd rax,r15d
  40134e:	mov    rax,QWORD PTR [r12+rax*8]
  401352:	mov    QWORD PTR [rip+0x6ccf],rax        # 408028 <__ctype_b_loc@plt+0x6e28>
  401359:	test   rax,rax
  40135c:	je     4014c0 <__ctype_b_loc@plt+0x2c0>
  401362:	cmp    BYTE PTR [rax],0x0
  401365:	jne    4014c0 <__ctype_b_loc@plt+0x2c0>
  40136b:	mov    QWORD PTR [rip+0x6cb2],0x0        # 408028 <__ctype_b_loc@plt+0x6e28>
  401376:	jmp    4014c0 <__ctype_b_loc@plt+0x2c0>
  40137b:	nop    DWORD PTR [rax+rax*1+0x0]
  401380:	movsxd rax,r15d
  401383:	mov    r13,QWORD PTR [r12+rax*8]
  401387:	mov    rdi,r13
  40138a:	lea    rsi,[rip+0x2f1f]        # 4042b0 <__ctype_b_loc@plt+0x30b0>
  401391:	call   401110 <strcmp@plt>
  401396:	test   eax,eax
  401398:	je     4026c3 <__ctype_b_loc@plt+0x14c3>
  40139e:	mov    rdi,r13
  4013a1:	mov    rsi,rbx
  4013a4:	call   401110 <strcmp@plt>
  4013a9:	test   eax,eax
  4013ab:	je     401460 <__ctype_b_loc@plt+0x260>
  4013b1:	mov    rdi,r13
  4013b4:	lea    rsi,[rip+0x2f1c]        # 4042d7 <__ctype_b_loc@plt+0x30d7>
  4013bb:	call   401110 <strcmp@plt>
  4013c0:	test   eax,eax
  4013c2:	je     401470 <__ctype_b_loc@plt+0x270>
  4013c8:	mov    rdi,r13
  4013cb:	lea    rsi,[rip+0x2f08]        # 4042da <__ctype_b_loc@plt+0x30da>
  4013d2:	call   401110 <strcmp@plt>
  4013d7:	test   eax,eax
  4013d9:	je     40147c <__ctype_b_loc@plt+0x27c>
  4013df:	cmp    BYTE PTR [r13+0x0],0x2d
  4013e4:	jne    401488 <__ctype_b_loc@plt+0x288>
  4013ea:	add    r15d,0x1
  4013ee:	cmp    r15d,r14d
  4013f1:	je     4026e2 <__ctype_b_loc@plt+0x14e2>
  4013f7:	mov    rdi,r13
  4013fa:	lea    rsi,[rip+0x2edc]        # 4042dd <__ctype_b_loc@plt+0x30dd>
  401401:	call   401110 <strcmp@plt>
  401406:	test   eax,eax
  401408:	je     40134b <__ctype_b_loc@plt+0x14b>
  40140e:	mov    rdi,r13
  401411:	lea    rsi,[rip+0x2ec8]        # 4042e0 <__ctype_b_loc@plt+0x30e0>
  401418:	call   401110 <strcmp@plt>
  40141d:	test   eax,eax
  40141f:	jne    4026e2 <__ctype_b_loc@plt+0x14e2>
  401425:	call   401040 <__errno_location@plt>
  40142a:	mov    r13,rax
  40142d:	mov    DWORD PTR [rax],0x0
  401433:	movsxd rax,r15d
  401436:	mov    rdi,QWORD PTR [r12+rax*8]
  40143a:	xor    esi,esi
  40143c:	mov    edx,0xa
  401441:	call   4011b0 <strtoul@plt>
  401446:	mov    QWORD PTR [rip+0x6be3],rax        # 408030 <__ctype_b_loc@plt+0x6e30>
  40144d:	cmp    DWORD PTR [r13+0x0],0x0
  401452:	je     4014c0 <__ctype_b_loc@plt+0x2c0>
  401454:	jmp    4026e2 <__ctype_b_loc@plt+0x14e2>
  401459:	nop    DWORD PTR [rax+0x0]
  401460:	mov    rax,QWORD PTR [rip+0x4b89]        # 405ff0 <__ctype_b_loc@plt+0x4df0>
  401467:	mov    QWORD PTR [rip+0x4b92],rax        # 406000 <__ctype_b_loc@plt+0x4e00>
  40146e:	jmp    4014c0 <__ctype_b_loc@plt+0x2c0>
  401470:	mov    DWORD PTR [rip+0x4b9a],0x1        # 406014 <__ctype_b_loc@plt+0x4e14>
  40147a:	jmp    4014c0 <__ctype_b_loc@plt+0x2c0>
  40147c:	mov    DWORD PTR [rip+0x4b8e],0xffffffff        # 406014 <__ctype_b_loc@plt+0x4e14>
  401486:	jmp    4014c0 <__ctype_b_loc@plt+0x2c0>
  401488:	mov    edx,0x1fff
  40148d:	mov    r14,r12
  401490:	lea    r12,[rip+0x4b89]        # 406020 <__ctype_b_loc@plt+0x4e20>
  401497:	mov    rdi,r12
  40149a:	mov    rsi,r13
  40149d:	call   401050 <strncpy@plt>
  4014a2:	mov    rdi,r12
  4014a5:	mov    r12,r14
  4014a8:	mov    r14d,DWORD PTR [rsp+0x8]
  4014ad:	call   401070 <strlen@plt>
  4014b2:	mov    QWORD PTR [rip+0x6b67],rax        # 408020 <__ctype_b_loc@plt+0x6e20>
  4014b9:	nop    DWORD PTR [rax+0x0]
  4014c0:	add    r15d,0x1
  4014c4:	cmp    r15d,r14d
  4014c7:	jl     401380 <__ctype_b_loc@plt+0x180>
  4014cd:	mov    rax,QWORD PTR [rip+0x4b04]        # 405fd8 <__ctype_b_loc@plt+0x4dd8>
  4014d4:	mov    rdx,QWORD PTR [rax]
  4014d7:	lea    rdi,[rsp+0x20]
  4014dc:	mov    esi,0x2000
  4014e1:	call   4010f0 <fgets@plt>
  4014e6:	test   rax,rax
  4014e9:	je     40162f <__ctype_b_loc@plt+0x42f>
  4014ef:	xor    ebx,ebx
  4014f1:	lea    r13,[rsp+0x20]
  4014f6:	xor    r14d,r14d
  4014f9:	xor    r12d,r12d
  4014fc:	xor    eax,eax
  4014fe:	mov    QWORD PTR [rsp],rax
  401502:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40150c:	nop    DWORD PTR [rax+0x0]
  401510:	lea    r15,[r12+0x1]
  401515:	mov    rdx,rbx
  401518:	movabs rax,0xaaaaaaaaaaaaaaab
  401522:	mulx   rcx,rax,rax
  401527:	shr    rcx,0x4
  40152b:	cmp    r15,rcx
  40152e:	jb     401556 <__ctype_b_loc@plt+0x356>
  401530:	mov    rdi,QWORD PTR [rip+0x6b01]        # 408038 <__ctype_b_loc@plt+0x6e38>
  401537:	add    rbx,0x2000
  40153e:	mov    rsi,rbx
  401541:	call   401140 <realloc@plt>
  401546:	mov    QWORD PTR [rip+0x6aeb],rax        # 408038 <__ctype_b_loc@plt+0x6e38>
  40154d:	test   rax,rax
  401550:	je     4026d6 <__ctype_b_loc@plt+0x14d6>
  401556:	mov    QWORD PTR [rsp+0x10],r15
  40155b:	mov    QWORD PTR [rsp+0x8],rbx
  401560:	mov    esi,0xa
  401565:	mov    rdi,r13
  401568:	call   401090 <strchr@plt>
  40156d:	test   rax,rax
  401570:	je     401575 <__ctype_b_loc@plt+0x375>
  401572:	mov    BYTE PTR [rax],0x0
  401575:	mov    r15,r13
  401578:	mov    rdi,r13
  40157b:	call   4011f0 <strdup@plt>
  401580:	mov    rbx,rax
  401583:	mov    rax,QWORD PTR [rip+0x6aae]        # 408038 <__ctype_b_loc@plt+0x6e38>
  40158a:	lea    rcx,[r12+r12*2]
  40158e:	mov    QWORD PTR [rax+rcx*8],rbx
  401592:	test   rbx,rbx
  401595:	je     4026b7 <__ctype_b_loc@plt+0x14b7>
  40159b:	mov    rdi,rbx
  40159e:	call   401070 <strlen@plt>
  4015a3:	cmp    rax,r14
  4015a6:	jbe    401600 <__ctype_b_loc@plt+0x400>
  4015a8:	mov    cl,BYTE PTR [rbx]
  4015aa:	test   cl,cl
  4015ac:	mov    esi,0xfffffffe
  4015b1:	je     4015ee <__ctype_b_loc@plt+0x3ee>
  4015b3:	xor    r14d,r14d
  4015b6:	mov    eax,0x1
  4015bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4015c0:	mov    edx,r14d
  4015c3:	and    cl,0xc0
  4015c6:	xor    r14d,r14d
  4015c9:	cmp    cl,0x80
  4015cc:	setne  r14b
  4015d0:	add    r14d,edx
  4015d3:	cmp    rax,rsi
  4015d6:	ja     4015e4 <__ctype_b_loc@plt+0x3e4>
  4015d8:	movzx  ecx,BYTE PTR [rbx+rax*1]
  4015dc:	add    rax,0x1
  4015e0:	test   cl,cl
  4015e2:	jne    4015c0 <__ctype_b_loc@plt+0x3c0>
  4015e4:	add    r14d,0x4
  4015e8:	mov    QWORD PTR [rsp],rbx
  4015ec:	jmp    401600 <__ctype_b_loc@plt+0x400>
  4015ee:	mov    QWORD PTR [rsp],rbx
  4015f2:	mov    r14d,0x4
  4015f8:	nop    DWORD PTR [rax+rax*1+0x0]
  401600:	mov    rax,QWORD PTR [rip+0x49d1]        # 405fd8 <__ctype_b_loc@plt+0x4dd8>
  401607:	mov    rdx,QWORD PTR [rax]
  40160a:	mov    esi,0x2000
  40160f:	mov    r13,r15
  401612:	mov    rdi,r15
  401615:	call   4010f0 <fgets@plt>
  40161a:	test   rax,rax
  40161d:	mov    rbx,QWORD PTR [rsp+0x8]
  401622:	mov    r12,QWORD PTR [rsp+0x10]
  401627:	jne    401510 <__ctype_b_loc@plt+0x310>
  40162d:	jmp    401638 <__ctype_b_loc@plt+0x438>
  40162f:	xor    eax,eax
  401631:	mov    QWORD PTR [rsp],rax
  401635:	xor    r12d,r12d
  401638:	mov    rax,QWORD PTR [rip+0x69f9]        # 408038 <__ctype_b_loc@plt+0x6e38>
  40163f:	test   rax,rax
  401642:	je     401650 <__ctype_b_loc@plt+0x450>
  401644:	lea    rcx,[r12+r12*2]
  401648:	mov    QWORD PTR [rax+rcx*8],0x0
  401650:	mov    rdi,QWORD PTR [rsp]
  401654:	test   rdi,rdi
  401657:	je     401695 <__ctype_b_loc@plt+0x495>
  401659:	mov    bl,BYTE PTR [rdi]
  40165b:	test   bl,bl
  40165d:	je     401695 <__ctype_b_loc@plt+0x495>
  40165f:	xor    eax,eax
  401661:	mov    ecx,0x1
  401666:	mov    edx,0xfffffffe
  40166b:	nop    DWORD PTR [rax+rax*1+0x0]
  401670:	mov    esi,eax
  401672:	and    bl,0xc0
  401675:	xor    eax,eax
  401677:	cmp    bl,0x80
  40167a:	setne  al
  40167d:	add    eax,esi
  40167f:	cmp    rcx,rdx
  401682:	ja     401690 <__ctype_b_loc@plt+0x490>
  401684:	movzx  ebx,BYTE PTR [rdi+rcx*1]
  401688:	add    rcx,0x1
  40168c:	test   bl,bl
  40168e:	jne    401670 <__ctype_b_loc@plt+0x470>
  401690:	add    eax,0x4
  401693:	jmp    40169a <__ctype_b_loc@plt+0x49a>
  401695:	mov    eax,0x4
  40169a:	mov    QWORD PTR [rip+0x699f],rax        # 408040 <__ctype_b_loc@plt+0x6e40>
  4016a1:	mov    rax,QWORD PTR [rip+0x4930]        # 405fd8 <__ctype_b_loc@plt+0x4dd8>
  4016a8:	mov    rdx,QWORD PTR [rax]
  4016ab:	lea    rdi,[rip+0x2c9b]        # 40434d <__ctype_b_loc@plt+0x314d>
  4016b2:	lea    rsi,[rip+0x2c9d]        # 404356 <__ctype_b_loc@plt+0x3156>
  4016b9:	call   4010b0 <freopen@plt>
  4016be:	test   rax,rax
  4016c1:	je     4026e7 <__ctype_b_loc@plt+0x14e7>
  4016c7:	mov    rax,QWORD PTR [rip+0x492a]        # 405ff8 <__ctype_b_loc@plt+0x4df8>
  4016ce:	mov    rdx,QWORD PTR [rax]
  4016d1:	lea    rdi,[rip+0x2c75]        # 40434d <__ctype_b_loc@plt+0x314d>
  4016d8:	lea    rsi,[rip+0x2c94]        # 404373 <__ctype_b_loc@plt+0x3173>
  4016df:	call   4010b0 <freopen@plt>
  4016e4:	test   rax,rax
  4016e7:	je     4026f3 <__ctype_b_loc@plt+0x14f3>
  4016ed:	lea    rdi,[rip+0x2c59]        # 40434d <__ctype_b_loc@plt+0x314d>
  4016f4:	mov    esi,0x2
  4016f9:	xor    eax,eax
  4016fb:	call   401190 <open@plt>
  401700:	cmp    eax,0xffffffff
  401703:	je     401743 <__ctype_b_loc@plt+0x543>
  401705:	mov    ebx,eax
  401707:	lea    rdx,[rsp+0x20]
  40170c:	mov    esi,0x5413
  401711:	xor    eax,eax
  401713:	mov    edi,ebx
  401715:	call   4010c0 <ioctl@plt>
  40171a:	mov    r14d,eax
  40171d:	mov    edi,ebx
  40171f:	call   4010d0 <close@plt>
  401724:	test   r14d,r14d
  401727:	js     40175b <__ctype_b_loc@plt+0x55b>
  401729:	movzx  eax,WORD PTR [rsp+0x22]
  40172e:	mov    QWORD PTR [rip+0x695b],rax        # 408090 <__ctype_b_loc@plt+0x6e90>
  401735:	movzx  eax,WORD PTR [rsp+0x20]
  40173a:	mov    QWORD PTR [rip+0x6947],rax        # 408088 <__ctype_b_loc@plt+0x6e88>
  401741:	jmp    401771 <__ctype_b_loc@plt+0x571>
  401743:	mov    QWORD PTR [rip+0x693a],0x18        # 408088 <__ctype_b_loc@plt+0x6e88>
  40174e:	mov    QWORD PTR [rip+0x6937],0x50        # 408090 <__ctype_b_loc@plt+0x6e90>
  401759:	jmp    401771 <__ctype_b_loc@plt+0x571>
  40175b:	mov    QWORD PTR [rip+0x692a],0x50        # 408090 <__ctype_b_loc@plt+0x6e90>
  401766:	mov    QWORD PTR [rip+0x6917],0x18        # 408088 <__ctype_b_loc@plt+0x6e88>
  401771:	lea    rsi,[rip+0x68d0]        # 408048 <__ctype_b_loc@plt+0x6e48>
  401778:	xor    ebx,ebx
  40177a:	xor    edi,edi
  40177c:	call   401170 <tcgetattr@plt>
  401781:	vmovups ymm0,YMMWORD PTR [rip+0x68bf]        # 408048 <__ctype_b_loc@plt+0x6e48>
  401789:	vmovups YMMWORD PTR [rip+0x6907],ymm0        # 408098 <__ctype_b_loc@plt+0x6e98>
  401791:	vmovups ymm0,YMMWORD PTR [rip+0x68cb]        # 408064 <__ctype_b_loc@plt+0x6e64>
  401799:	vmovups YMMWORD PTR [rip+0x6913],ymm0        # 4080b4 <__ctype_b_loc@plt+0x6eb4>
  4017a1:	lea    rdx,[rip+0x68f0]        # 408098 <__ctype_b_loc@plt+0x6e98>
  4017a8:	and    DWORD PTR [rip+0x68e6],0xfffffa15        # 408098 <__ctype_b_loc@plt+0x6e98>
  4017b2:	and    DWORD PTR [rip+0x68e8],0xffff7fb4        # 4080a4 <__ctype_b_loc@plt+0x6ea4>
  4017bc:	mov    eax,0xfffffecf
  4017c1:	and    eax,DWORD PTR [rip+0x68d9]        # 4080a0 <__ctype_b_loc@plt+0x6ea0>
  4017c7:	or     eax,0x30
  4017ca:	mov    DWORD PTR [rip+0x68d0],eax        # 4080a0 <__ctype_b_loc@plt+0x6ea0>
  4017d0:	mov    BYTE PTR [rip+0x68d8],0x1        # 4080af <__ctype_b_loc@plt+0x6eaf>
  4017d7:	xor    edi,edi
  4017d9:	xor    esi,esi
  4017db:	vzeroupper 
  4017de:	call   401180 <tcsetattr@plt>
  4017e3:	mov    rax,QWORD PTR [rip+0x6846]        # 408030 <__ctype_b_loc@plt+0x6e30>
  4017ea:	mov    rcx,QWORD PTR [rip+0x6897]        # 408088 <__ctype_b_loc@plt+0x6e88>
  4017f1:	cmp    rax,rcx
  4017f4:	cmovb  rcx,rax
  4017f8:	mov    QWORD PTR [rip+0x6831],rcx        # 408030 <__ctype_b_loc@plt+0x6e30>
  4017ff:	mov    rax,QWORD PTR [rip+0x6822]        # 408028 <__ctype_b_loc@plt+0x6e28>
  401806:	test   rax,rax
  401809:	je     40184a <__ctype_b_loc@plt+0x64a>
  40180b:	mov    dl,BYTE PTR [rax]
  40180d:	test   dl,dl
  40180f:	je     401845 <__ctype_b_loc@plt+0x645>
  401811:	xor    ebx,ebx
  401813:	mov    ecx,0x1
  401818:	mov    esi,0xfffffffe
  40181d:	nop    DWORD PTR [rax]
  401820:	mov    edi,ebx
  401822:	and    dl,0xc0
  401825:	xor    ebx,ebx
  401827:	cmp    dl,0x80
  40182a:	setne  bl
  40182d:	add    ebx,edi
  40182f:	cmp    rcx,rsi
  401832:	ja     401840 <__ctype_b_loc@plt+0x640>
  401834:	movzx  edx,BYTE PTR [rax+rcx*1]
  401838:	add    rcx,0x1
  40183c:	test   dl,dl
  40183e:	jne    401820 <__ctype_b_loc@plt+0x620>
  401840:	add    ebx,0x4
  401843:	jmp    40184a <__ctype_b_loc@plt+0x64a>
  401845:	mov    ebx,0x4
  40184a:	movabs rdx,0xaaaaaaaaaaaaaaab
  401854:	mulx   rcx,rax,QWORD PTR [rip+0x6833]        # 408090 <__ctype_b_loc@plt+0x6e90>
  40185d:	mov    QWORD PTR [rip+0x6874],rbx        # 4080d8 <__ctype_b_loc@plt+0x6ed8>
  401864:	mov    rax,QWORD PTR [rip+0x67d5]        # 408040 <__ctype_b_loc@plt+0x6e40>
  40186b:	shr    rcx,1
  40186e:	cmp    rax,rcx
  401871:	cmovb  rcx,rax
  401875:	mov    QWORD PTR [rip+0x67c4],rcx        # 408040 <__ctype_b_loc@plt+0x6e40>
  40187c:	call   402780 <__ctype_b_loc@plt+0x1580>
  401881:	mov    eax,DWORD PTR [rip+0x478d]        # 406014 <__ctype_b_loc@plt+0x4e14>
  401887:	test   eax,eax
  401889:	je     4018be <__ctype_b_loc@plt+0x6be>
  40188b:	mov    rcx,QWORD PTR [rip+0x4766]        # 405ff8 <__ctype_b_loc@plt+0x4df8>
  401892:	mov    rdi,QWORD PTR [rcx]
  401895:	test   eax,eax
  401897:	jle    40189d <__ctype_b_loc@plt+0x69d>
  401899:	xor    ecx,ecx
  40189b:	jmp    4018ab <__ctype_b_loc@plt+0x6ab>
  40189d:	mov    rcx,QWORD PTR [rip+0x67e4]        # 408088 <__ctype_b_loc@plt+0x6e88>
  4018a4:	sub    rcx,QWORD PTR [rip+0x6785]        # 408030 <__ctype_b_loc@plt+0x6e30>
  4018ab:	lea    rdx,[rip+0x2ae5]        # 404397 <__ctype_b_loc@plt+0x3197>
  4018b2:	mov    esi,0x1
  4018b7:	xor    eax,eax
  4018b9:	call   4011e0 <__fprintf_chk@plt>
  4018be:	call   402b90 <__ctype_b_loc@plt+0x1990>
  4018c3:	lea    rsi,[rsp+0x1f]
  4018c8:	xor    edi,edi
  4018ca:	mov    edx,0x1
  4018cf:	call   4010e0 <read@plt>
  4018d4:	cmp    rax,0x1
  4018d8:	jne    4026ab <__ctype_b_loc@plt+0x14ab>
  4018de:	lea    rbx,[rsp+0x1f]
  4018e3:	lea    rdi,[rip+0x4736]        # 406020 <__ctype_b_loc@plt+0x4e20>
  4018ea:	nop    WORD PTR [rax+rax*1+0x0]
  4018f0:	vxorps xmm0,xmm0,xmm0
  4018f4:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  4018fa:	mov    al,BYTE PTR [rsp+0x1f]
  4018fe:	movsx  r14,al
  401902:	mov    BYTE PTR [rsp+0x20],r14b
  401907:	jmp    401910 <__ctype_b_loc@plt+0x710>
  401909:	mov    BYTE PTR [rsp+0x1f],0x5
  40190e:	mov    al,0x5
  401910:	movsx  eax,al
  401913:	cmp    eax,0x1b
  401916:	jne    401f82 <__ctype_b_loc@plt+0xd82>
  40191c:	xor    edi,edi
  40191e:	mov    edx,0x1
  401923:	mov    rsi,rbx
  401926:	vzeroupper 
  401929:	call   4010e0 <read@plt>
  40192e:	cmp    rax,0x1
  401932:	jne    4026ab <__ctype_b_loc@plt+0x14ab>
  401938:	mov    al,BYTE PTR [rsp+0x1f]
  40193c:	jmp    401947 <__ctype_b_loc@plt+0x747>
  40193e:	xchg   ax,ax
  401940:	mov    BYTE PTR [rsp+0x1f],0x76
  401945:	mov    al,0x76
  401947:	lea    rdi,[rip+0x46d2]        # 406020 <__ctype_b_loc@plt+0x4e20>
  40194e:	movsx  eax,al
  401951:	cmp    eax,0x5b
  401954:	jne    4019a0 <__ctype_b_loc@plt+0x7a0>
  401956:	xor    edi,edi
  401958:	mov    edx,0x1
  40195d:	mov    rsi,rbx
  401960:	call   4010e0 <read@plt>
  401965:	cmp    rax,0x1
  401969:	jne    4026ab <__ctype_b_loc@plt+0x14ab>
  40196f:	movzx  eax,BYTE PTR [rsp+0x1f]
  401974:	movsx  ecx,al
  401977:	cmp    ecx,0x36
  40197a:	jne    4019d0 <__ctype_b_loc@plt+0x7d0>
  40197c:	xor    edi,edi
  40197e:	mov    edx,0x1
  401983:	mov    rsi,rbx
  401986:	call   4010e0 <read@plt>
  40198b:	cmp    rax,0x1
  40198f:	je     401940 <__ctype_b_loc@plt+0x740>
  401991:	jmp    4026ab <__ctype_b_loc@plt+0x14ab>
  401996:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4019a0:	lea    ecx,[rax-0x62]
  4019a3:	cmp    ecx,0x14
  4019a6:	jbe    401b40 <__ctype_b_loc@plt+0x940>
  4019ac:	cmp    eax,0x1b
  4019af:	jne    401f50 <__ctype_b_loc@plt+0xd50>
  4019b5:	mov    BYTE PTR [rsp+0x1f],0x3
  4019ba:	mov    al,0x3
  4019bc:	lea    rbx,[rsp+0x1f]
  4019c1:	jmp    401910 <__ctype_b_loc@plt+0x710>
  4019c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4019d0:	add    ecx,0xffffffcf
  4019d3:	cmp    ecx,0x17
  4019d6:	lea    rdi,[rip+0x4643]        # 406020 <__ctype_b_loc@plt+0x4e20>
  4019dd:	ja     401f50 <__ctype_b_loc@plt+0xd50>
  4019e3:	lea    rdx,[rip+0x2866]        # 404250 <__ctype_b_loc@plt+0x3050>
  4019ea:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  4019ee:	add    rcx,rdx
  4019f1:	jmp    rcx
  4019f3:	cmp    al,0x48
  4019f5:	lea    rbx,[rsp+0x1f]
  4019fa:	je     401a1c <__ctype_b_loc@plt+0x81c>
  4019fc:	xor    edi,edi
  4019fe:	mov    edx,0x1
  401a03:	mov    rsi,rbx
  401a06:	call   4010e0 <read@plt>
  401a0b:	lea    rdi,[rip+0x460e]        # 406020 <__ctype_b_loc@plt+0x4e20>
  401a12:	cmp    rax,0x1
  401a16:	jne    4026ab <__ctype_b_loc@plt+0x14ab>
  401a1c:	mov    BYTE PTR [rsp+0x1f],0x1
  401a21:	mov    al,0x1
  401a23:	jmp    401910 <__ctype_b_loc@plt+0x710>
  401a28:	cmp    al,0x46
  401a2a:	lea    rbx,[rsp+0x1f]
  401a2f:	je     401909 <__ctype_b_loc@plt+0x709>
  401a35:	xor    edi,edi
  401a37:	mov    edx,0x1
  401a3c:	mov    rsi,rbx
  401a3f:	call   4010e0 <read@plt>
  401a44:	lea    rdi,[rip+0x45d5]        # 406020 <__ctype_b_loc@plt+0x4e20>
  401a4b:	cmp    rax,0x1
  401a4f:	je     401909 <__ctype_b_loc@plt+0x709>
  401a55:	jmp    4026ab <__ctype_b_loc@plt+0x14ab>
  401a5a:	xor    edi,edi
  401a5c:	mov    edx,0x1
  401a61:	lea    rbx,[rsp+0x1f]
  401a66:	mov    rsi,rbx
  401a69:	call   4010e0 <read@plt>
  401a6e:	cmp    rax,0x1
  401a72:	jne    4026ab <__ctype_b_loc@plt+0x14ab>
  401a78:	mov    BYTE PTR [rsp+0x1f],0x4
  401a7d:	mov    al,0x4
  401a7f:	lea    rdi,[rip+0x459a]        # 406020 <__ctype_b_loc@plt+0x4e20>
  401a86:	jmp    401910 <__ctype_b_loc@plt+0x710>
  401a8b:	mov    BYTE PTR [rsp+0x1f],0xe
  401a90:	mov    al,0xe
  401a92:	lea    rbx,[rsp+0x1f]
  401a97:	jmp    401910 <__ctype_b_loc@plt+0x710>
  401a9c:	mov    BYTE PTR [rsp+0x1f],0x6
  401aa1:	mov    al,0x6
  401aa3:	lea    rbx,[rsp+0x1f]
  401aa8:	jmp    401910 <__ctype_b_loc@plt+0x710>
  401aad:	xor    edi,edi
  401aaf:	mov    edx,0x1
  401ab4:	lea    rbx,[rsp+0x1f]
  401ab9:	mov    rsi,rbx
  401abc:	call   4010e0 <read@plt>
  401ac1:	cmp    rax,0x1
  401ac5:	jne    4026ab <__ctype_b_loc@plt+0x14ab>
  401acb:	mov    BYTE PTR [rsp+0x1f],0x19
  401ad0:	mov    al,0x19
  401ad2:	lea    rdi,[rip+0x4547]        # 406020 <__ctype_b_loc@plt+0x4e20>
  401ad9:	jmp    401910 <__ctype_b_loc@plt+0x710>
  401ade:	mov    BYTE PTR [rsp+0x1f],0x10
  401ae3:	mov    al,0x10
  401ae5:	lea    rbx,[rsp+0x1f]
  401aea:	jmp    401910 <__ctype_b_loc@plt+0x710>
  401aef:	mov    BYTE PTR [rsp+0x1f],0x2
  401af4:	mov    al,0x2
  401af6:	lea    rbx,[rsp+0x1f]
  401afb:	jmp    401910 <__ctype_b_loc@plt+0x710>
  401b00:	xor    edi,edi
  401b02:	mov    edx,0x1
  401b07:	lea    rbx,[rsp+0x1f]
  401b0c:	mov    rsi,rbx
  401b0f:	call   4010e0 <read@plt>
  401b14:	cmp    rax,0x1
  401b18:	jne    4026ab <__ctype_b_loc@plt+0x14ab>
  401b1e:	mov    BYTE PTR [rsp+0x1f],0x16
  401b23:	mov    al,0x16
  401b25:	lea    rdi,[rip+0x44f4]        # 406020 <__ctype_b_loc@plt+0x4e20>
  401b2c:	jmp    401910 <__ctype_b_loc@plt+0x710>
  401b31:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401b3b:	nop    DWORD PTR [rax+rax*1+0x0]
  401b40:	lea    rax,[rip+0x26b5]        # 4041fc <__ctype_b_loc@plt+0x2ffc>
  401b47:	mov    rdx,rax
  401b4a:	movsxd rax,DWORD PTR [rax+rcx*4]
  401b4e:	add    rax,rdx
  401b51:	jmp    rax
  401b53:	mov    rax,QWORD PTR [rip+0x64c6]        # 408020 <__ctype_b_loc@plt+0x6e20>
  401b5a:	test   rax,rax
  401b5d:	je     401f50 <__ctype_b_loc@plt+0xd50>
  401b63:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401b6d:	nop    DWORD PTR [rax]
  401b70:	lea    rsi,[rax-0x1]
  401b74:	mov    rdx,rsi
  401b77:	nop    WORD PTR [rax+rax*1+0x0]
  401b80:	test   rdx,rdx
  401b83:	jle    401ba0 <__ctype_b_loc@plt+0x9a0>
  401b85:	movzx  ecx,BYTE PTR [rdx+rdi*1]
  401b89:	add    rdx,0xffffffffffffffff
  401b8d:	mov    ebx,ecx
  401b8f:	and    bl,0xc0
  401b92:	cmp    bl,0x80
  401b95:	je     401b80 <__ctype_b_loc@plt+0x980>
  401b97:	cmp    cl,0x20
  401b9a:	je     401bb0 <__ctype_b_loc@plt+0x9b0>
  401b9c:	jmp    401be7 <__ctype_b_loc@plt+0x9e7>
  401b9e:	xchg   ax,ax
  401ba0:	mov    cl,BYTE PTR [rdx+rdi*1]
  401ba3:	cmp    cl,0x20
  401ba6:	jne    401be7 <__ctype_b_loc@plt+0x9e7>
  401ba8:	nop    DWORD PTR [rax+rax*1+0x0]
  401bb0:	mov    rax,rsi
  401bb3:	test   rsi,rsi
  401bb6:	jle    401bc8 <__ctype_b_loc@plt+0x9c8>
  401bb8:	lea    rsi,[rax-0x1]
  401bbc:	movzx  ecx,BYTE PTR [rax+rdi*1]
  401bc0:	and    cl,0xc0
  401bc3:	cmp    cl,0x80
  401bc6:	je     401bb0 <__ctype_b_loc@plt+0x9b0>
  401bc8:	mov    QWORD PTR [rip+0x6451],rax        # 408020 <__ctype_b_loc@plt+0x6e20>
  401bcf:	test   rax,rax
  401bd2:	jne    401b70 <__ctype_b_loc@plt+0x970>
  401bd4:	jmp    401f50 <__ctype_b_loc@plt+0xd50>
  401bd9:	nop    DWORD PTR [rax+0x0]
  401be0:	mov    QWORD PTR [rip+0x6439],rax        # 408020 <__ctype_b_loc@plt+0x6e20>
  401be7:	test   rax,rax
  401bea:	je     401f50 <__ctype_b_loc@plt+0xd50>
  401bf0:	mov    rcx,rax
  401bf3:	add    rcx,0xffffffffffffffff
  401bf7:	mov    rax,rcx
  401bfa:	nop    WORD PTR [rax+rax*1+0x0]
  401c00:	test   rax,rax
  401c03:	jle    401c30 <__ctype_b_loc@plt+0xa30>
  401c05:	movzx  ebx,BYTE PTR [rax+rdi*1]
  401c09:	add    rax,0xffffffffffffffff
  401c0d:	mov    edx,ebx
  401c0f:	and    dl,0xc0
  401c12:	cmp    dl,0x80
  401c15:	je     401c00 <__ctype_b_loc@plt+0xa00>
  401c17:	cmp    bl,0x20
  401c1a:	jne    401c40 <__ctype_b_loc@plt+0xa40>
  401c1c:	jmp    401f50 <__ctype_b_loc@plt+0xd50>
  401c21:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401c2b:	nop    DWORD PTR [rax+rax*1+0x0]
  401c30:	mov    bl,BYTE PTR [rax+rdi*1]
  401c33:	cmp    bl,0x20
  401c36:	je     401f50 <__ctype_b_loc@plt+0xd50>
  401c3c:	nop    DWORD PTR [rax+0x0]
  401c40:	mov    rax,rcx
  401c43:	test   rcx,rcx
  401c46:	jle    401be0 <__ctype_b_loc@plt+0x9e0>
  401c48:	lea    rcx,[rax-0x1]
  401c4c:	movzx  edx,BYTE PTR [rax+rdi*1]
  401c50:	and    dl,0xc0
  401c53:	cmp    dl,0x80
  401c56:	je     401c40 <__ctype_b_loc@plt+0xa40>
  401c58:	jmp    401be0 <__ctype_b_loc@plt+0x9e0>
  401c5a:	mov    rax,QWORD PTR [rip+0x63bf]        # 408020 <__ctype_b_loc@plt+0x6e20>
  401c61:	cmp    BYTE PTR [rax+rdi*1],0x0
  401c65:	je     401f50 <__ctype_b_loc@plt+0xd50>
  401c6b:	nop    DWORD PTR [rax+rax*1+0x0]
  401c70:	lea    rsi,[rax+0x1]
  401c74:	lea    rdx,[rax+rdi*1]
  401c78:	add    rdx,0x1
  401c7c:	nop    DWORD PTR [rax+0x0]
  401c80:	cmp    rsi,0xfffffffffffffffe
  401c84:	jle    401ca0 <__ctype_b_loc@plt+0xaa0>
  401c86:	movzx  ecx,BYTE PTR [rdx]
  401c89:	mov    ebx,ecx
  401c8b:	and    bl,0xc0
  401c8e:	add    rdx,0x1
  401c92:	cmp    bl,0x80
  401c95:	je     401c80 <__ctype_b_loc@plt+0xa80>
  401c97:	cmp    cl,0x20
  401c9a:	je     401cb0 <__ctype_b_loc@plt+0xab0>
  401c9c:	jmp    401cf0 <__ctype_b_loc@plt+0xaf0>
  401c9e:	xchg   ax,ax
  401ca0:	mov    cl,BYTE PTR [rsi+rdi*1]
  401ca3:	cmp    cl,0x20
  401ca6:	jne    401cf0 <__ctype_b_loc@plt+0xaf0>
  401ca8:	nop    DWORD PTR [rax+rax*1+0x0]
  401cb0:	cmp    rsi,0xfffffffffffffffe
  401cb4:	jle    401cd0 <__ctype_b_loc@plt+0xad0>
  401cb6:	movzx  edx,BYTE PTR [rax+rdi*1+0x1]
  401cbb:	mov    ecx,edx
  401cbd:	and    cl,0xc0
  401cc0:	add    rax,0x1
  401cc4:	cmp    cl,0x80
  401cc7:	je     401cb0 <__ctype_b_loc@plt+0xab0>
  401cc9:	jmp    401cd6 <__ctype_b_loc@plt+0xad6>
  401ccb:	nop    DWORD PTR [rax+rax*1+0x0]
  401cd0:	mov    dl,BYTE PTR [rsi+rdi*1]
  401cd3:	mov    rax,rsi
  401cd6:	mov    QWORD PTR [rip+0x6343],rax        # 408020 <__ctype_b_loc@plt+0x6e20>
  401cdd:	test   dl,dl
  401cdf:	jne    401c70 <__ctype_b_loc@plt+0xa70>
  401ce1:	jmp    401f50 <__ctype_b_loc@plt+0xd50>
  401ce6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401cf0:	add    rax,0x1
  401cf4:	movzx  ecx,BYTE PTR [rax+rdi*1]
  401cf8:	cmp    rax,0xffffffffffffffff
  401cfc:	jl     401d08 <__ctype_b_loc@plt+0xb08>
  401cfe:	mov    edx,ecx
  401d00:	and    dl,0xc0
  401d03:	cmp    dl,0x80
  401d06:	je     401cf0 <__ctype_b_loc@plt+0xaf0>
  401d08:	or     cl,0x20
  401d0b:	cmp    cl,0x20
  401d0e:	jne    401cf0 <__ctype_b_loc@plt+0xaf0>
  401d10:	mov    QWORD PTR [rip+0x6309],rax        # 408020 <__ctype_b_loc@plt+0x6e20>
  401d17:	jmp    401f50 <__ctype_b_loc@plt+0xd50>
  401d1c:	mov    r14,QWORD PTR [rip+0x62fd]        # 408020 <__ctype_b_loc@plt+0x6e20>
  401d23:	cmp    BYTE PTR [r14+rdi*1],0x0
  401d28:	je     401f50 <__ctype_b_loc@plt+0xd50>
  401d2e:	xchg   ax,ax
  401d30:	lea    rax,[r14+0x1]
  401d34:	lea    rcx,[r14+rdi*1]
  401d38:	add    rcx,0x1
  401d3c:	nop    DWORD PTR [rax+0x0]
  401d40:	cmp    rax,0xfffffffffffffffe
  401d44:	jle    401d70 <__ctype_b_loc@plt+0xb70>
  401d46:	movzx  ebx,BYTE PTR [rcx]
  401d49:	mov    edx,ebx
  401d4b:	and    dl,0xc0
  401d4e:	add    rcx,0x1
  401d52:	cmp    dl,0x80
  401d55:	je     401d40 <__ctype_b_loc@plt+0xb40>
  401d57:	cmp    bl,0x20
  401d5a:	je     401d80 <__ctype_b_loc@plt+0xb80>
  401d5c:	jmp    401e60 <__ctype_b_loc@plt+0xc60>
  401d61:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401d6b:	nop    DWORD PTR [rax+rax*1+0x0]
  401d70:	mov    bl,BYTE PTR [rax+rdi*1]
  401d73:	cmp    bl,0x20
  401d76:	jne    401e60 <__ctype_b_loc@plt+0xc60>
  401d7c:	nop    DWORD PTR [rax+0x0]
  401d80:	cmp    rax,0xffffffffffffffff
  401d84:	jl     401da0 <__ctype_b_loc@plt+0xba0>
  401d86:	movzx  ecx,BYTE PTR [r14+rdi*1+0x1]
  401d8c:	and    cl,0xc0
  401d8f:	add    r14,0x1
  401d93:	cmp    cl,0x80
  401d96:	je     401d80 <__ctype_b_loc@plt+0xb80>
  401d98:	jmp    401da3 <__ctype_b_loc@plt+0xba3>
  401d9a:	nop    WORD PTR [rax+rax*1+0x0]
  401da0:	mov    r14,rax
  401da3:	mov    QWORD PTR [rip+0x6276],r14        # 408020 <__ctype_b_loc@plt+0x6e20>
  401daa:	lea    rax,[r14-0x1]
  401dae:	mov    ecx,0x2001
  401db3:	mov    edx,0x1
  401db8:	nop    DWORD PTR [rax+rax*1+0x0]
  401dc0:	mov    r15,rax
  401dc3:	mov    r12,rdx
  401dc6:	mov    r13,rcx
  401dc9:	test   rax,rax
  401dcc:	jle    401de8 <__ctype_b_loc@plt+0xbe8>
  401dce:	movzx  ebx,BYTE PTR [r15+rdi*1]
  401dd3:	and    bl,0xc0
  401dd6:	lea    rax,[r15-0x1]
  401dda:	lea    rdx,[r12+0x1]
  401ddf:	lea    rcx,[r13+0x1]
  401de3:	cmp    bl,0x80
  401de6:	je     401dc0 <__ctype_b_loc@plt+0xbc0>
  401de8:	mov    rbx,rdi
  401deb:	call   401070 <strlen@plt>
  401df0:	sub    rax,r12
  401df3:	cmp    rax,0x1fff
  401df9:	ja     401e45 <__ctype_b_loc@plt+0xc45>
  401dfb:	neg    r12
  401dfe:	lea    rdi,[rbx+r15*1]
  401e02:	lea    rbx,[rbx+r14*1]
  401e06:	test   r12,r12
  401e09:	mov    eax,0x2000
  401e0e:	cmovle r13,rax
  401e12:	sub    r13,r14
  401e15:	mov    rsi,rbx
  401e18:	mov    rdx,r13
  401e1b:	call   401160 <memmove@plt>
  401e20:	test   r12,r12
  401e23:	jle    401e32 <__ctype_b_loc@plt+0xc32>
  401e25:	xor    esi,esi
  401e27:	mov    rdi,rbx
  401e2a:	mov    rdx,r12
  401e2d:	call   401120 <memcpy@plt>
  401e32:	mov    QWORD PTR [rip+0x61e7],r15        # 408020 <__ctype_b_loc@plt+0x6e20>
  401e39:	call   402780 <__ctype_b_loc@plt+0x1580>
  401e3e:	mov    r14,QWORD PTR [rip+0x61db]        # 408020 <__ctype_b_loc@plt+0x6e20>
  401e45:	lea    rdi,[rip+0x41d4]        # 406020 <__ctype_b_loc@plt+0x4e20>
  401e4c:	cmp    BYTE PTR [r14+rdi*1],0x0
  401e51:	jne    401d30 <__ctype_b_loc@plt+0xb30>
  401e57:	jmp    401f50 <__ctype_b_loc@plt+0xd50>
  401e5c:	nop    DWORD PTR [rax+0x0]
  401e60:	mov    rax,r14
  401e63:	lea    r14,[r14+0x1]
  401e67:	cmp    r14,0xffffffffffffffff
  401e6b:	jl     401e79 <__ctype_b_loc@plt+0xc79>
  401e6d:	mov    cl,BYTE PTR [r14+rdi*1]
  401e71:	and    cl,0xc0
  401e74:	cmp    cl,0x80
  401e77:	je     401e60 <__ctype_b_loc@plt+0xc60>
  401e79:	mov    QWORD PTR [rip+0x61a0],r14        # 408020 <__ctype_b_loc@plt+0x6e20>
  401e80:	mov    ecx,0x2001
  401e85:	mov    edx,0x1
  401e8a:	nop    WORD PTR [rax+rax*1+0x0]
  401e90:	mov    r15,rax
  401e93:	mov    r12,rdx
  401e96:	mov    r13,rcx
  401e99:	test   rax,rax
  401e9c:	jle    401eb8 <__ctype_b_loc@plt+0xcb8>
  401e9e:	lea    rax,[r15-0x1]
  401ea2:	movzx  ebx,BYTE PTR [r15+rdi*1]
  401ea7:	and    bl,0xc0
  401eaa:	lea    rdx,[r12+0x1]
  401eaf:	lea    rcx,[r13+0x1]
  401eb3:	cmp    bl,0x80
  401eb6:	je     401e90 <__ctype_b_loc@plt+0xc90>
  401eb8:	mov    rbx,rdi
  401ebb:	call   401070 <strlen@plt>
  401ec0:	sub    rax,r12
  401ec3:	cmp    rax,0x1fff
  401ec9:	ja     401f15 <__ctype_b_loc@plt+0xd15>
  401ecb:	neg    r12
  401ece:	lea    rdi,[rbx+r15*1]
  401ed2:	lea    rbx,[rbx+r14*1]
  401ed6:	test   r12,r12
  401ed9:	mov    eax,0x2000
  401ede:	cmovle r13,rax
  401ee2:	sub    r13,r14
  401ee5:	mov    rsi,rbx
  401ee8:	mov    rdx,r13
  401eeb:	call   401160 <memmove@plt>
  401ef0:	test   r12,r12
  401ef3:	jle    401f02 <__ctype_b_loc@plt+0xd02>
  401ef5:	xor    esi,esi
  401ef7:	mov    rdi,rbx
  401efa:	mov    rdx,r12
  401efd:	call   401120 <memcpy@plt>
  401f02:	mov    QWORD PTR [rip+0x6117],r15        # 408020 <__ctype_b_loc@plt+0x6e20>
  401f09:	call   402780 <__ctype_b_loc@plt+0x1580>
  401f0e:	mov    r14,QWORD PTR [rip+0x610b]        # 408020 <__ctype_b_loc@plt+0x6e20>
  401f15:	lea    rdi,[rip+0x4104]        # 406020 <__ctype_b_loc@plt+0x4e20>
  401f1c:	mov    al,BYTE PTR [r14+rdi*1]
  401f20:	or     al,0x20
  401f22:	cmp    al,0x20
  401f24:	jne    401e60 <__ctype_b_loc@plt+0xc60>
  401f2a:	jmp    401f50 <__ctype_b_loc@plt+0xd50>
  401f2c:	mov    rax,QWORD PTR [rip+0x61dd]        # 408110 <__ctype_b_loc@plt+0x6f10>
  401f33:	test   rax,rax
  401f36:	je     401f50 <__ctype_b_loc@plt+0xd50>
  401f38:	mov    QWORD PTR [rip+0x61c9],rax        # 408108 <__ctype_b_loc@plt+0x6f08>
  401f3f:	mov    QWORD PTR [rip+0x61ba],rax        # 408100 <__ctype_b_loc@plt+0x6f00>
  401f46:	vzeroupper 
  401f49:	call   403020 <__ctype_b_loc@plt+0x1e20>
  401f4e:	xchg   ax,ax
  401f50:	vzeroupper 
  401f53:	call   402b90 <__ctype_b_loc@plt+0x1990>
  401f58:	xor    edi,edi
  401f5a:	mov    edx,0x1
  401f5f:	lea    rbx,[rsp+0x1f]
  401f64:	mov    rsi,rbx
  401f67:	call   4010e0 <read@plt>
  401f6c:	lea    rdi,[rip+0x40ad]        # 406020 <__ctype_b_loc@plt+0x4e20>
  401f73:	cmp    rax,0x1
  401f77:	je     4018f0 <__ctype_b_loc@plt+0x6f0>
  401f7d:	jmp    4026ab <__ctype_b_loc@plt+0x14ab>
  401f82:	add    eax,0xffffffff
  401f85:	cmp    eax,0x7e
  401f88:	ja     4023ab <__ctype_b_loc@plt+0x11ab>
  401f8e:	lea    rcx,[rip+0x206b]        # 404000 <__ctype_b_loc@plt+0x2e00>
  401f95:	movsxd rax,DWORD PTR [rcx+rax*4]
  401f99:	add    rax,rcx
  401f9c:	jmp    rax
  401f9e:	mov    r14,QWORD PTR [rip+0x607b]        # 408020 <__ctype_b_loc@plt+0x6e20>
  401fa5:	test   r14,r14
  401fa8:	jne    4021ea <__ctype_b_loc@plt+0xfea>
  401fae:	jmp    401f50 <__ctype_b_loc@plt+0xd50>
  401fb0:	mov    rcx,QWORD PTR [rip+0x6069]        # 408020 <__ctype_b_loc@plt+0x6e20>
  401fb7:	cmp    BYTE PTR [rcx+rdi*1],0x0
  401fbb:	je     401ff2 <__ctype_b_loc@plt+0xdf2>
  401fbd:	add    rcx,0x1
  401fc1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401fcb:	nop    DWORD PTR [rax+rax*1+0x0]
  401fd0:	mov    rax,rcx
  401fd3:	cmp    rcx,0xffffffffffffffff
  401fd7:	jl     401d10 <__ctype_b_loc@plt+0xb10>
  401fdd:	movzx  edx,BYTE PTR [rax+rdi*1]
  401fe1:	and    dl,0xc0
  401fe4:	lea    rcx,[rax+0x1]
  401fe8:	cmp    dl,0x80
  401feb:	je     401fd0 <__ctype_b_loc@plt+0xdd0>
  401fed:	jmp    401d10 <__ctype_b_loc@plt+0xb10>
  401ff2:	mov    rax,QWORD PTR [rip+0x6107]        # 408100 <__ctype_b_loc@plt+0x6f00>
  401ff9:	test   rax,rax
  401ffc:	je     401f50 <__ctype_b_loc@plt+0xd50>
  402002:	mov    rax,QWORD PTR [rax+0x10]
  402006:	test   rax,rax
  402009:	je     401f50 <__ctype_b_loc@plt+0xd50>
  40200f:	mov    QWORD PTR [rip+0x60ea],rax        # 408100 <__ctype_b_loc@plt+0x6f00>
  402016:	cmp    rax,QWORD PTR [rip+0x60f3]        # 408110 <__ctype_b_loc@plt+0x6f10>
  40201d:	jne    401f50 <__ctype_b_loc@plt+0xd50>
  402023:	jmp    402153 <__ctype_b_loc@plt+0xf53>
  402028:	mov    rax,QWORD PTR [rip+0x5ff1]        # 408020 <__ctype_b_loc@plt+0x6e20>
  40202f:	cmp    BYTE PTR [rax+rdi*1],0x0
  402033:	je     402474 <__ctype_b_loc@plt+0x1274>
  402039:	vzeroupper 
  40203c:	call   401070 <strlen@plt>
  402041:	mov    QWORD PTR [rip+0x5fd8],rax        # 408020 <__ctype_b_loc@plt+0x6e20>
  402048:	jmp    401f50 <__ctype_b_loc@plt+0xd50>
  40204d:	mov    rbx,QWORD PTR [rip+0x5fcc]        # 408020 <__ctype_b_loc@plt+0x6e20>
  402054:	vzeroupper 
  402057:	call   401070 <strlen@plt>
  40205c:	lea    rdi,[rip+0x3fbd]        # 406020 <__ctype_b_loc@plt+0x4e20>
  402063:	sub    rax,rbx
  402066:	cmp    rax,0x1fff
  40206c:	ja     401f50 <__ctype_b_loc@plt+0xd50>
  402072:	mov    r14,rbx
  402075:	neg    r14
  402078:	lea    r12,[rdi+rbx*1]
  40207c:	lea    rdx,[rbx+0x2000]
  402083:	test   r14,r14
  402086:	mov    eax,0x2000
  40208b:	cmovle rdx,rax
  40208f:	sub    rdx,rbx
  402092:	mov    rsi,r12
  402095:	call   401160 <memmove@plt>
  40209a:	test   r14,r14
  40209d:	jle    4020ac <__ctype_b_loc@plt+0xeac>
  40209f:	xor    esi,esi
  4020a1:	mov    rdi,r12
  4020a4:	mov    rdx,r14
  4020a7:	call   401120 <memcpy@plt>
  4020ac:	mov    QWORD PTR [rip+0x5f69],0x0        # 408020 <__ctype_b_loc@plt+0x6e20>
  4020b7:	jmp    40243e <__ctype_b_loc@plt+0x123e>
  4020bc:	mov    rax,QWORD PTR [rip+0x6035]        # 4080f8 <__ctype_b_loc@plt+0x6ef8>
  4020c3:	cmp    QWORD PTR [rip+0x6036],rax        # 408100 <__ctype_b_loc@plt+0x6f00>
  4020ca:	jne    401f38 <__ctype_b_loc@plt+0xd38>
  4020d0:	mov    QWORD PTR [rip+0x5f45],0x0        # 408020 <__ctype_b_loc@plt+0x6e20>
  4020db:	jmp    401f50 <__ctype_b_loc@plt+0xd50>
  4020e0:	mov    rax,QWORD PTR [rip+0x5f39]        # 408020 <__ctype_b_loc@plt+0x6e20>
  4020e7:	test   rax,rax
  4020ea:	je     402117 <__ctype_b_loc@plt+0xf17>
  4020ec:	mov    rcx,QWORD PTR [rip+0x600d]        # 408100 <__ctype_b_loc@plt+0x6f00>
  4020f3:	test   rcx,rcx
  4020f6:	je     40244b <__ctype_b_loc@plt+0x124b>
  4020fc:	cmp    QWORD PTR [rcx+0x8],0x0
  402101:	je     40244b <__ctype_b_loc@plt+0x124b>
  402107:	mov    rcx,QWORD PTR [rip+0x5f22]        # 408030 <__ctype_b_loc@plt+0x6e30>
  40210e:	test   rcx,rcx
  402111:	jne    40244b <__ctype_b_loc@plt+0x124b>
  402117:	mov    rax,QWORD PTR [rip+0x5fe2]        # 408100 <__ctype_b_loc@plt+0x6f00>
  40211e:	test   rax,rax
  402121:	je     401f50 <__ctype_b_loc@plt+0xd50>
  402127:	mov    rax,QWORD PTR [rax+0x8]
  40212b:	test   rax,rax
  40212e:	je     401f50 <__ctype_b_loc@plt+0xd50>
  402134:	mov    QWORD PTR [rip+0x5fc5],rax        # 408100 <__ctype_b_loc@plt+0x6f00>
  40213b:	mov    rax,QWORD PTR [rax+0x10]
  40213f:	cmp    rax,QWORD PTR [rip+0x5fc2]        # 408108 <__ctype_b_loc@plt+0x6f08>
  402146:	jne    401f50 <__ctype_b_loc@plt+0xd50>
  40214c:	mov    rax,QWORD PTR [rip+0x5fc5]        # 408118 <__ctype_b_loc@plt+0x6f18>
  402153:	mov    QWORD PTR [rip+0x5fae],rax        # 408108 <__ctype_b_loc@plt+0x6f08>
  40215a:	jmp    401f46 <__ctype_b_loc@plt+0xd46>
  40215f:	mov    rax,QWORD PTR [rip+0x5eba]        # 408020 <__ctype_b_loc@plt+0x6e20>
  402166:	mov    BYTE PTR [rax+rdi*1],0x0
  40216a:	jmp    40243e <__ctype_b_loc@plt+0x123e>
  40216f:	mov    rax,QWORD PTR [rip+0x5f8a]        # 408100 <__ctype_b_loc@plt+0x6f00>
  402176:	test   rax,rax
  402179:	je     401f50 <__ctype_b_loc@plt+0xd50>
  40217f:	mov    rsi,QWORD PTR [rax]
  402182:	mov    edx,0x2000
  402187:	vzeroupper 
  40218a:	call   401050 <strncpy@plt>
  40218f:	lea    rdi,[rip+0x3e8a]        # 406020 <__ctype_b_loc@plt+0x4e20>
  402196:	call   401070 <strlen@plt>
  40219b:	mov    QWORD PTR [rip+0x5e7e],rax        # 408020 <__ctype_b_loc@plt+0x6e20>
  4021a2:	jmp    40243e <__ctype_b_loc@plt+0x123e>
  4021a7:	mov    rax,QWORD PTR [rip+0x5e72]        # 408020 <__ctype_b_loc@plt+0x6e20>
  4021ae:	cmp    BYTE PTR [rax+rdi*1],0x0
  4021b2:	je     401f50 <__ctype_b_loc@plt+0xd50>
  4021b8:	add    rax,0x1
  4021bc:	nop    DWORD PTR [rax+0x0]
  4021c0:	mov    r14,rax
  4021c3:	cmp    rax,0xffffffffffffffff
  4021c7:	jl     4021da <__ctype_b_loc@plt+0xfda>
  4021c9:	movzx  ecx,BYTE PTR [r14+rdi*1]
  4021ce:	and    cl,0xc0
  4021d1:	lea    rax,[r14+0x1]
  4021d5:	cmp    cl,0x80
  4021d8:	je     4021c0 <__ctype_b_loc@plt+0xfc0>
  4021da:	mov    QWORD PTR [rip+0x5e3f],r14        # 408020 <__ctype_b_loc@plt+0x6e20>
  4021e1:	test   r14,r14
  4021e4:	je     401f50 <__ctype_b_loc@plt+0xd50>
  4021ea:	lea    rax,[r14-0x1]
  4021ee:	mov    ecx,0x2001
  4021f3:	mov    edx,0x1
  4021f8:	nop    DWORD PTR [rax+rax*1+0x0]
  402200:	mov    r15,rax
  402203:	mov    r12,rdx
  402206:	mov    r13,rcx
  402209:	test   rax,rax
  40220c:	jle    402228 <__ctype_b_loc@plt+0x1028>
  40220e:	movzx  ebx,BYTE PTR [r15+rdi*1]
  402213:	and    bl,0xc0
  402216:	lea    rax,[r15-0x1]
  40221a:	lea    rdx,[r12+0x1]
  40221f:	lea    rcx,[r13+0x1]
  402223:	cmp    bl,0x80
  402226:	je     402200 <__ctype_b_loc@plt+0x1000>
  402228:	vzeroupper 
  40222b:	call   401070 <strlen@plt>
  402230:	lea    rcx,[rip+0x3de9]        # 406020 <__ctype_b_loc@plt+0x4e20>
  402237:	sub    rax,r12
  40223a:	cmp    rax,0x1fff
  402240:	ja     401f50 <__ctype_b_loc@plt+0xd50>
  402246:	neg    r12
  402249:	lea    rdi,[rcx+r15*1]
  40224d:	lea    rbx,[rcx+r14*1]
  402251:	test   r12,r12
  402254:	mov    eax,0x2000
  402259:	cmovle r13,rax
  40225d:	sub    r13,r14
  402260:	mov    rsi,rbx
  402263:	mov    rdx,r13
  402266:	call   401160 <memmove@plt>
  40226b:	test   r12,r12
  40226e:	jle    40227d <__ctype_b_loc@plt+0x107d>
  402270:	xor    esi,esi
  402272:	mov    rdi,rbx
  402275:	mov    rdx,r12
  402278:	call   401120 <memcpy@plt>
  40227d:	mov    QWORD PTR [rip+0x5d9c],r15        # 408020 <__ctype_b_loc@plt+0x6e20>
  402284:	jmp    40243e <__ctype_b_loc@plt+0x123e>
  402289:	mov    rax,QWORD PTR [rip+0x5e88]        # 408118 <__ctype_b_loc@plt+0x6f18>
  402290:	test   rax,rax
  402293:	jne    401f38 <__ctype_b_loc@plt+0xd38>
  402299:	jmp    401f50 <__ctype_b_loc@plt+0xd50>
  40229e:	mov    r13,QWORD PTR [rip+0x5d7b]        # 408020 <__ctype_b_loc@plt+0x6e20>
  4022a5:	test   r13,r13
  4022a8:	je     401f50 <__ctype_b_loc@plt+0xd50>
  4022ae:	xchg   ax,ax
  4022b0:	lea    rsi,[r13-0x1]
  4022b4:	mov    rcx,rsi
  4022b7:	nop    WORD PTR [rax+rax*1+0x0]
  4022c0:	test   rcx,rcx
  4022c3:	jle    4022f0 <__ctype_b_loc@plt+0x10f0>
  4022c5:	movzx  ebx,BYTE PTR [rcx+rdi*1]
  4022c9:	add    rcx,0xffffffffffffffff
  4022cd:	mov    edx,ebx
  4022cf:	and    dl,0xc0
  4022d2:	cmp    dl,0x80
  4022d5:	je     4022c0 <__ctype_b_loc@plt+0x10c0>
  4022d7:	cmp    bl,0x20
  4022da:	je     4022fc <__ctype_b_loc@plt+0x10fc>
  4022dc:	jmp    4024e9 <__ctype_b_loc@plt+0x12e9>
  4022e1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4022eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4022f0:	mov    bl,BYTE PTR [rcx+rdi*1]
  4022f3:	cmp    bl,0x20
  4022f6:	jne    4024e9 <__ctype_b_loc@plt+0x12e9>
  4022fc:	mov    ecx,0x2001
  402301:	mov    edx,0x1
  402306:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402310:	mov    r14,rsi
  402313:	mov    r12,rdx
  402316:	mov    rbx,rcx
  402319:	test   rsi,rsi
  40231c:	jle    402336 <__ctype_b_loc@plt+0x1136>
  40231e:	lea    rsi,[r14-0x1]
  402322:	movzx  eax,BYTE PTR [r14+rdi*1]
  402327:	and    al,0xc0
  402329:	lea    rdx,[r12+0x1]
  40232e:	lea    rcx,[rbx+0x1]
  402332:	cmp    al,0x80
  402334:	je     402310 <__ctype_b_loc@plt+0x1110>
  402336:	mov    r15,rdi
  402339:	vzeroupper 
  40233c:	call   401070 <strlen@plt>
  402341:	sub    rax,r12
  402344:	cmp    rax,0x1fff
  40234a:	ja     402396 <__ctype_b_loc@plt+0x1196>
  40234c:	neg    r12
  40234f:	lea    rdi,[r15+r14*1]
  402353:	lea    r15,[r15+r13*1]
  402357:	test   r12,r12
  40235a:	mov    eax,0x2000
  40235f:	cmovle rbx,rax
  402363:	sub    rbx,r13
  402366:	mov    rsi,r15
  402369:	mov    rdx,rbx
  40236c:	call   401160 <memmove@plt>
  402371:	test   r12,r12
  402374:	jle    402383 <__ctype_b_loc@plt+0x1183>
  402376:	xor    esi,esi
  402378:	mov    rdi,r15
  40237b:	mov    rdx,r12
  40237e:	call   401120 <memcpy@plt>
  402383:	mov    QWORD PTR [rip+0x5c96],r14        # 408020 <__ctype_b_loc@plt+0x6e20>
  40238a:	call   402780 <__ctype_b_loc@plt+0x1580>
  40238f:	mov    r13,QWORD PTR [rip+0x5c8a]        # 408020 <__ctype_b_loc@plt+0x6e20>
  402396:	test   r13,r13
  402399:	lea    rdi,[rip+0x3c80]        # 406020 <__ctype_b_loc@plt+0x4e20>
  4023a0:	jne    4022b0 <__ctype_b_loc@plt+0x10b0>
  4023a6:	jmp    401f50 <__ctype_b_loc@plt+0xd50>
  4023ab:	vzeroupper 
  4023ae:	call   401200 <__ctype_b_loc@plt>
  4023b3:	mov    rax,QWORD PTR [rax]
  4023b6:	test   BYTE PTR [rax+r14*2],0x2
  4023bb:	jne    401f50 <__ctype_b_loc@plt+0xd50>
  4023c1:	lea    rdi,[rsp+0x20]
  4023c6:	call   401070 <strlen@plt>
  4023cb:	mov    rbx,rax
  4023ce:	lea    rdi,[rip+0x3c4b]        # 406020 <__ctype_b_loc@plt+0x4e20>
  4023d5:	call   401070 <strlen@plt>
  4023da:	lea    rcx,[rip+0x3c3f]        # 406020 <__ctype_b_loc@plt+0x4e20>
  4023e1:	add    rax,rbx
  4023e4:	cmp    rax,0x1fff
  4023ea:	ja     401f50 <__ctype_b_loc@plt+0xd50>
  4023f0:	mov    rax,QWORD PTR [rip+0x5c29]        # 408020 <__ctype_b_loc@plt+0x6e20>
  4023f7:	lea    r14,[rax+rbx*1]
  4023fb:	lea    rdi,[rcx+r14*1]
  4023ff:	lea    r12,[rcx+rax*1]
  402403:	mov    edx,0x2000
  402408:	sub    rdx,rbx
  40240b:	test   rbx,rbx
  40240e:	mov    ecx,0x2000
  402413:	cmovle rdx,rcx
  402417:	sub    rdx,rax
  40241a:	mov    rsi,r12
  40241d:	call   401160 <memmove@plt>
  402422:	test   rbx,rbx
  402425:	jle    402437 <__ctype_b_loc@plt+0x1237>
  402427:	mov    rdi,r12
  40242a:	lea    rsi,[rsp+0x20]
  40242f:	mov    rdx,rbx
  402432:	call   401120 <memcpy@plt>
  402437:	mov    QWORD PTR [rip+0x5be2],r14        # 408020 <__ctype_b_loc@plt+0x6e20>
  40243e:	vzeroupper 
  402441:	call   402780 <__ctype_b_loc@plt+0x1580>
  402446:	jmp    401f50 <__ctype_b_loc@plt+0xd50>
  40244b:	add    rax,0xffffffffffffffff
  40244f:	nop
  402450:	mov    rcx,rax
  402453:	test   rax,rax
  402456:	jle    402468 <__ctype_b_loc@plt+0x1268>
  402458:	movzx  edx,BYTE PTR [rcx+rdi*1]
  40245c:	and    dl,0xc0
  40245f:	lea    rax,[rcx-0x1]
  402463:	cmp    dl,0x80
  402466:	je     402450 <__ctype_b_loc@plt+0x1250>
  402468:	mov    QWORD PTR [rip+0x5bb1],rcx        # 408020 <__ctype_b_loc@plt+0x6e20>
  40246f:	jmp    401f50 <__ctype_b_loc@plt+0xd50>
  402474:	cmp    QWORD PTR [rip+0x5c94],0x0        # 408110 <__ctype_b_loc@plt+0x6f10>
  40247c:	je     4024d6 <__ctype_b_loc@plt+0x12d6>
  40247e:	mov    rax,QWORD PTR [rip+0x5c6b]        # 4080f0 <__ctype_b_loc@plt+0x6ef0>
  402485:	mov    QWORD PTR [rip+0x5c7c],rax        # 408108 <__ctype_b_loc@plt+0x6f08>
  40248c:	vzeroupper 
  40248f:	call   403020 <__ctype_b_loc@plt+0x1e20>
  402494:	mov    rax,QWORD PTR [rip+0x5c7d]        # 408118 <__ctype_b_loc@plt+0x6f18>
  40249b:	mov    QWORD PTR [rip+0x5c66],rax        # 408108 <__ctype_b_loc@plt+0x6f08>
  4024a2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4024ac:	nop    DWORD PTR [rax+0x0]
  4024b0:	call   403020 <__ctype_b_loc@plt+0x1e20>
  4024b5:	cmp    QWORD PTR [rip+0x5c53],0x0        # 408110 <__ctype_b_loc@plt+0x6f10>
  4024bd:	je     4024d6 <__ctype_b_loc@plt+0x12d6>
  4024bf:	mov    rax,QWORD PTR [rip+0x5c42]        # 408108 <__ctype_b_loc@plt+0x6f08>
  4024c6:	mov    rax,QWORD PTR [rax+0x10]
  4024ca:	mov    QWORD PTR [rip+0x5c37],rax        # 408108 <__ctype_b_loc@plt+0x6f08>
  4024d1:	test   rax,rax
  4024d4:	jne    4024b0 <__ctype_b_loc@plt+0x12b0>
  4024d6:	mov    rax,QWORD PTR [rip+0x5c13]        # 4080f0 <__ctype_b_loc@plt+0x6ef0>
  4024dd:	mov    QWORD PTR [rip+0x5c1c],rax        # 408100 <__ctype_b_loc@plt+0x6f00>
  4024e4:	jmp    401f50 <__ctype_b_loc@plt+0xd50>
  4024e9:	test   r13,r13
  4024ec:	je     401f50 <__ctype_b_loc@plt+0xd50>
  4024f2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4024fc:	nop    DWORD PTR [rax+0x0]
  402500:	lea    rsi,[r13-0x1]
  402504:	mov    rcx,rsi
  402507:	nop    WORD PTR [rax+rax*1+0x0]
  402510:	test   rcx,rcx
  402513:	jle    402530 <__ctype_b_loc@plt+0x1330>
  402515:	movzx  ebx,BYTE PTR [rcx+rdi*1]
  402519:	add    rcx,0xffffffffffffffff
  40251d:	mov    edx,ebx
  40251f:	and    dl,0xc0
  402522:	cmp    dl,0x80
  402525:	je     402510 <__ctype_b_loc@plt+0x1310>
  402527:	jmp    402533 <__ctype_b_loc@plt+0x1333>
  402529:	nop    DWORD PTR [rax+0x0]
  402530:	mov    bl,BYTE PTR [rcx+rdi*1]
  402533:	cmp    bl,0x20
  402536:	je     401f50 <__ctype_b_loc@plt+0xd50>
  40253c:	mov    ecx,0x2001
  402541:	mov    edx,0x1
  402546:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402550:	mov    rbx,rsi
  402553:	mov    r12,rdx
  402556:	mov    r14,rcx
  402559:	test   rsi,rsi
  40255c:	jle    402575 <__ctype_b_loc@plt+0x1375>
  40255e:	lea    rsi,[rbx-0x1]
  402562:	movzx  eax,BYTE PTR [rbx+rdi*1]
  402566:	and    al,0xc0
  402568:	lea    rdx,[r12+0x1]
  40256d:	lea    rcx,[r14+0x1]
  402571:	cmp    al,0x80
  402573:	je     402550 <__ctype_b_loc@plt+0x1350>
  402575:	mov    r15,rdi
  402578:	vzeroupper 
  40257b:	call   401070 <strlen@plt>
  402580:	sub    rax,r12
  402583:	cmp    rax,0x1fff
  402589:	ja     4025d5 <__ctype_b_loc@plt+0x13d5>
  40258b:	neg    r12
  40258e:	lea    rdi,[r15+rbx*1]
  402592:	lea    r15,[r15+r13*1]
  402596:	test   r12,r12
  402599:	mov    eax,0x2000
  40259e:	cmovle r14,rax
  4025a2:	sub    r14,r13
  4025a5:	mov    rsi,r15
  4025a8:	mov    rdx,r14
  4025ab:	call   401160 <memmove@plt>
  4025b0:	test   r12,r12
  4025b3:	jle    4025c2 <__ctype_b_loc@plt+0x13c2>
  4025b5:	xor    esi,esi
  4025b7:	mov    rdi,r15
  4025ba:	mov    rdx,r12
  4025bd:	call   401120 <memcpy@plt>
  4025c2:	mov    QWORD PTR [rip+0x5a57],rbx        # 408020 <__ctype_b_loc@plt+0x6e20>
  4025c9:	call   402780 <__ctype_b_loc@plt+0x1580>
  4025ce:	mov    r13,QWORD PTR [rip+0x5a4b]        # 408020 <__ctype_b_loc@plt+0x6e20>
  4025d5:	test   r13,r13
  4025d8:	lea    rdi,[rip+0x3a41]        # 406020 <__ctype_b_loc@plt+0x4e20>
  4025df:	jne    402500 <__ctype_b_loc@plt+0x1300>
  4025e5:	jmp    401f50 <__ctype_b_loc@plt+0xd50>
  4025ea:	mov    rax,QWORD PTR [rip+0x5b0f]        # 408100 <__ctype_b_loc@plt+0x6f00>
  4025f1:	test   rax,rax
  4025f4:	je     40260d <__ctype_b_loc@plt+0x140d>
  4025f6:	mov    rsi,QWORD PTR [rax]
  4025f9:	lea    rdi,[rip+0x3a20]        # 406020 <__ctype_b_loc@plt+0x4e20>
  402600:	mov    edx,0x1fff
  402605:	vzeroupper 
  402608:	call   401050 <strncpy@plt>
  40260d:	lea    rdi,[rip+0x3a0c]        # 406020 <__ctype_b_loc@plt+0x4e20>
  402614:	vzeroupper 
  402617:	call   401070 <strlen@plt>
  40261c:	mov    QWORD PTR [rip+0x59fd],rax        # 408020 <__ctype_b_loc@plt+0x6e20>
  402623:	call   402780 <__ctype_b_loc@plt+0x1580>
  402628:	call   402b90 <__ctype_b_loc@plt+0x1990>
  40262d:	lea    rdi,[rip+0x39ec]        # 406020 <__ctype_b_loc@plt+0x4e20>
  402634:	vzeroupper 
  402637:	call   401060 <puts@plt>
  40263c:	xor    ebx,ebx
  40263e:	cmp    DWORD PTR [rip+0x39cf],0x0        # 406014 <__ctype_b_loc@plt+0x4e14>
  402645:	mov    rax,QWORD PTR [rip+0x39ac]        # 405ff8 <__ctype_b_loc@plt+0x4df8>
  40264c:	mov    rdi,QWORD PTR [rax]
  40264f:	je     40265a <__ctype_b_loc@plt+0x145a>
  402651:	lea    rdx,[rip+0x1d96]        # 4043ee <__ctype_b_loc@plt+0x31ee>
  402658:	jmp    402661 <__ctype_b_loc@plt+0x1461>
  40265a:	lea    rdx,[rip+0x1cc9]        # 40432a <__ctype_b_loc@plt+0x312a>
  402661:	mov    esi,0x1
  402666:	xor    eax,eax
  402668:	vzeroupper 
  40266b:	call   4011e0 <__fprintf_chk@plt>
  402670:	lea    rdx,[rip+0x59d1]        # 408048 <__ctype_b_loc@plt+0x6e48>
  402677:	xor    edi,edi
  402679:	xor    esi,esi
  40267b:	call   401180 <tcsetattr@plt>
  402680:	mov    rax,QWORD PTR fs:0x28
  402689:	cmp    rax,QWORD PTR [rsp+0x2020]
  402691:	jne    4026ff <__ctype_b_loc@plt+0x14ff>
  402693:	mov    eax,ebx
  402695:	lea    rsp,[rbp-0x28]
  402699:	pop    rbx
  40269a:	pop    r12
  40269c:	pop    r13
  40269e:	pop    r14
  4026a0:	pop    r15
  4026a2:	pop    rbp
  4026a3:	ret    
  4026a4:	mov    ebx,0x1
  4026a9:	jmp    40263e <__ctype_b_loc@plt+0x143e>
  4026ab:	lea    rdi,[rip+0x1d2e]        # 4043e0 <__ctype_b_loc@plt+0x31e0>
  4026b2:	call   402740 <__ctype_b_loc@plt+0x1540>
  4026b7:	lea    rdi,[rip+0x1c7d]        # 40433b <__ctype_b_loc@plt+0x313b>
  4026be:	call   402740 <__ctype_b_loc@plt+0x1540>
  4026c3:	lea    rdi,[rip+0x1be9]        # 4042b3 <__ctype_b_loc@plt+0x30b3>
  4026ca:	call   401060 <puts@plt>
  4026cf:	xor    edi,edi
  4026d1:	call   4011c0 <exit@plt>
  4026d6:	lea    rdi,[rip+0x1c4f]        # 40432c <__ctype_b_loc@plt+0x312c>
  4026dd:	call   402740 <__ctype_b_loc@plt+0x1540>
  4026e2:	call   402710 <__ctype_b_loc@plt+0x1510>
  4026e7:	lea    rdi,[rip+0x1c6a]        # 404358 <__ctype_b_loc@plt+0x3158>
  4026ee:	call   402740 <__ctype_b_loc@plt+0x1540>
  4026f3:	lea    rdi,[rip+0x1c7b]        # 404375 <__ctype_b_loc@plt+0x3175>
  4026fa:	call   402740 <__ctype_b_loc@plt+0x1540>
  4026ff:	call   401080 <__stack_chk_fail@plt>
  402704:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40270e:	xchg   ax,ax
  402710:	push   rax
  402711:	mov    rax,QWORD PTR [rip+0x38e0]        # 405ff8 <__ctype_b_loc@plt+0x4df8>
  402718:	mov    rcx,QWORD PTR [rax]
  40271b:	lea    rdi,[rip+0x1bc1]        # 4042e3 <__ctype_b_loc@plt+0x30e3>
  402722:	mov    esi,0x48
  402727:	mov    edx,0x1
  40272c:	call   4011d0 <fwrite@plt>
  402731:	mov    edi,0x2
  402736:	call   4011c0 <exit@plt>
  40273b:	nop    DWORD PTR [rax+rax*1+0x0]
  402740:	push   rbx
  402741:	mov    rbx,rdi
  402744:	lea    rdx,[rip+0x58fd]        # 408048 <__ctype_b_loc@plt+0x6e48>
  40274b:	xor    edi,edi
  40274d:	xor    esi,esi
  40274f:	call   401180 <tcsetattr@plt>
  402754:	mov    rax,QWORD PTR [rip+0x389d]        # 405ff8 <__ctype_b_loc@plt+0x4df8>
  40275b:	mov    rdi,QWORD PTR [rax]
  40275e:	lea    rdx,[rip+0x1be4]        # 404349 <__ctype_b_loc@plt+0x3149>
  402765:	mov    esi,0x1
  40276a:	xor    eax,eax
  40276c:	mov    rcx,rbx
  40276f:	call   4011e0 <__fprintf_chk@plt>
  402774:	mov    edi,0x2
  402779:	call   4011c0 <exit@plt>
  40277e:	xchg   ax,ax
  402780:	push   rbp
  402781:	push   r15
  402783:	push   r14
  402785:	push   r13
  402787:	push   r12
  402789:	push   rbx
  40278a:	sub    rsp,0x2048
  402791:	mov    rax,QWORD PTR fs:0x28
  40279a:	mov    QWORD PTR [rsp+0x2040],rax
  4027a2:	lea    rsi,[rip+0x3877]        # 406020 <__ctype_b_loc@plt+0x4e20>
  4027a9:	lea    rbx,[rsp+0x40]
  4027ae:	mov    edx,0x2000
  4027b3:	mov    rdi,rbx
  4027b6:	call   401150 <__strcpy_chk@plt>
  4027bb:	lea    rsi,[rip+0x1bcf]        # 404391 <__ctype_b_loc@plt+0x3191>
  4027c2:	mov    rdi,rbx
  4027c5:	call   4011a0 <strtok@plt>
  4027ca:	test   rax,rax
  4027cd:	je     40286a <__ctype_b_loc@plt+0x166a>
  4027d3:	mov    rbx,rax
  4027d6:	xor    r15d,r15d
  4027d9:	lea    r14,[rip+0x1bb1]        # 404391 <__ctype_b_loc@plt+0x3191>
  4027e0:	movsxd rax,DWORD PTR [rip+0x5901]        # 4080e8 <__ctype_b_loc@plt+0x6ee8>
  4027e7:	cmp    r15,rax
  4027ea:	jge    402800 <__ctype_b_loc@plt+0x1600>
  4027ec:	mov    rax,QWORD PTR [rip+0x58ed]        # 4080e0 <__ctype_b_loc@plt+0x6ee0>
  4027f3:	jmp    40282e <__ctype_b_loc@plt+0x162e>
  4027f5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4027ff:	nop
  402800:	mov    rdi,QWORD PTR [rip+0x58d9]        # 4080e0 <__ctype_b_loc@plt+0x6ee0>
  402807:	lea    rcx,[rax+0x1]
  40280b:	mov    DWORD PTR [rip+0x58d7],ecx        # 4080e8 <__ctype_b_loc@plt+0x6ee8>
  402811:	lea    rsi,[rax*8+0x8]
  402819:	call   401140 <realloc@plt>
  40281e:	mov    QWORD PTR [rip+0x58bb],rax        # 4080e0 <__ctype_b_loc@plt+0x6ee0>
  402825:	test   rax,rax
  402828:	je     402b74 <__ctype_b_loc@plt+0x1974>
  40282e:	mov    QWORD PTR [rax+r15*8],rbx
  402832:	add    r15,0x1
  402836:	xor    edi,edi
  402838:	mov    rsi,r14
  40283b:	call   4011a0 <strtok@plt>
  402840:	mov    rbx,rax
  402843:	test   rax,rax
  402846:	jne    4027e0 <__ctype_b_loc@plt+0x15e0>
  402848:	test   r15d,r15d
  40284b:	je     40286a <__ctype_b_loc@plt+0x166a>
  40284d:	mov    rax,QWORD PTR [rip+0x588c]        # 4080e0 <__ctype_b_loc@plt+0x6ee0>
  402854:	mov    rdi,QWORD PTR [rax]
  402857:	call   401070 <strlen@plt>
  40285c:	mov    QWORD PTR [rsp+0x20],rax
  402861:	mov    al,0x1
  402863:	mov    QWORD PTR [rsp+0x28],rax
  402868:	jmp    40287b <__ctype_b_loc@plt+0x167b>
  40286a:	xor    eax,eax
  40286c:	mov    QWORD PTR [rsp+0x28],rax
  402871:	xor    r15d,r15d
  402874:	xor    eax,eax
  402876:	mov    QWORD PTR [rsp+0x20],rax
  40287b:	mov    QWORD PTR [rip+0x586a],0x0        # 4080f0 <__ctype_b_loc@plt+0x6ef0>
  402886:	mov    QWORD PTR [rip+0x5867],0x0        # 4080f8 <__ctype_b_loc@plt+0x6ef8>
  402891:	lea    rdi,[rip+0x3788]        # 406020 <__ctype_b_loc@plt+0x4e20>
  402898:	call   401070 <strlen@plt>
  40289d:	mov    QWORD PTR [rsp+0x30],rax
  4028a2:	mov    r12,QWORD PTR [rip+0x578f]        # 408038 <__ctype_b_loc@plt+0x6e38>
  4028a9:	test   r12,r12
  4028ac:	je     402b22 <__ctype_b_loc@plt+0x1922>
  4028b2:	mov    rbx,QWORD PTR [r12]
  4028b6:	test   rbx,rbx
  4028b9:	je     402aa4 <__ctype_b_loc@plt+0x18a4>
  4028bf:	add    QWORD PTR [rsp+0x30],0x1
  4028c5:	mov    eax,r15d
  4028c8:	mov    QWORD PTR [rsp+0x38],rax
  4028cd:	xor    eax,eax
  4028cf:	mov    QWORD PTR [rsp+0x10],rax
  4028d4:	xor    eax,eax
  4028d6:	mov    QWORD PTR [rsp+0x18],rax
  4028db:	xor    eax,eax
  4028dd:	mov    QWORD PTR [rsp],rax
  4028e1:	xor    eax,eax
  4028e3:	mov    QWORD PTR [rsp+0x8],rax
  4028e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4028f0:	mov    r14d,0x0
  4028f6:	test   r15d,r15d
  4028f9:	je     402990 <__ctype_b_loc@plt+0x1790>
  4028ff:	cmp    BYTE PTR [rbx],0x0
  402902:	je     402a30 <__ctype_b_loc@plt+0x1830>
  402908:	mov    rax,QWORD PTR [rip+0x57d1]        # 4080e0 <__ctype_b_loc@plt+0x6ee0>
  40290f:	mov    r13,QWORD PTR [rax]
  402912:	mov    rdi,r13
  402915:	call   401070 <strlen@plt>
  40291a:	mov    rbp,rax
  40291d:	xor    eax,eax
  40291f:	mov    r14,rax
  402922:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40292c:	nop    DWORD PTR [rax+0x0]
  402930:	mov    rdi,rbx
  402933:	mov    rsi,r13
  402936:	mov    rdx,rbp
  402939:	call   QWORD PTR [rip+0x36c1]        # 406000 <__ctype_b_loc@plt+0x4e00>
  40293f:	test   eax,eax
  402941:	je     402950 <__ctype_b_loc@plt+0x1750>
  402943:	cmp    BYTE PTR [rbx+0x1],0x0
  402947:	lea    rbx,[rbx+0x1]
  40294b:	jne    402930 <__ctype_b_loc@plt+0x1730>
  40294d:	jmp    402990 <__ctype_b_loc@plt+0x1790>
  40294f:	nop
  402950:	test   rbx,rbx
  402953:	je     402990 <__ctype_b_loc@plt+0x1790>
  402955:	mov    rcx,r14
  402958:	lea    r14,[r14+0x1]
  40295c:	cmp    r14,QWORD PTR [rsp+0x38]
  402961:	jae    402990 <__ctype_b_loc@plt+0x1790>
  402963:	mov    rbx,QWORD PTR [r12]
  402967:	mov    rax,QWORD PTR [rip+0x5772]        # 4080e0 <__ctype_b_loc@plt+0x6ee0>
  40296e:	mov    r13,QWORD PTR [rax+rcx*8+0x8]
  402973:	mov    rdi,r13
  402976:	call   401070 <strlen@plt>
  40297b:	mov    rbp,rax
  40297e:	cmp    BYTE PTR [rbx],0x0
  402981:	mov    rax,r14
  402984:	jne    40291f <__ctype_b_loc@plt+0x171f>
  402986:	jmp    402990 <__ctype_b_loc@plt+0x1790>
  402988:	nop    DWORD PTR [rax+rax*1+0x0]
  402990:	cmp    r14d,r15d
  402993:	jne    402a90 <__ctype_b_loc@plt+0x1890>
  402999:	cmp    BYTE PTR [rsp+0x28],0x0
  40299e:	je     4029f0 <__ctype_b_loc@plt+0x17f0>
  4029a0:	mov    rsi,QWORD PTR [r12]
  4029a4:	lea    rdi,[rip+0x3675]        # 406020 <__ctype_b_loc@plt+0x4e20>
  4029ab:	mov    rdx,QWORD PTR [rsp+0x30]
  4029b0:	call   QWORD PTR [rip+0x364a]        # 406000 <__ctype_b_loc@plt+0x4e00>
  4029b6:	test   eax,eax
  4029b8:	je     4029f0 <__ctype_b_loc@plt+0x17f0>
  4029ba:	mov    rax,QWORD PTR [rip+0x571f]        # 4080e0 <__ctype_b_loc@plt+0x6ee0>
  4029c1:	mov    rdi,QWORD PTR [rax]
  4029c4:	mov    rsi,QWORD PTR [r12]
  4029c8:	mov    rdx,QWORD PTR [rsp+0x20]
  4029cd:	call   QWORD PTR [rip+0x362d]        # 406000 <__ctype_b_loc@plt+0x4e00>
  4029d3:	test   eax,eax
  4029d5:	je     402a3e <__ctype_b_loc@plt+0x183e>
  4029d7:	mov    rax,QWORD PTR [rsp+0x8]
  4029dc:	test   rax,rax
  4029df:	je     402a4d <__ctype_b_loc@plt+0x184d>
  4029e1:	mov    QWORD PTR [rax+0x10],r12
  4029e5:	jmp    402a55 <__ctype_b_loc@plt+0x1855>
  4029e7:	nop    WORD PTR [rax+rax*1+0x0]
  4029f0:	mov    rax,QWORD PTR [rip+0x56f9]        # 4080f0 <__ctype_b_loc@plt+0x6ef0>
  4029f7:	lea    rcx,[rax+0x10]
  4029fb:	test   rax,rax
  4029fe:	lea    rdx,[rip+0x56f3]        # 4080f8 <__ctype_b_loc@plt+0x6ef8>
  402a05:	cmove  rcx,rdx
  402a09:	mov    QWORD PTR [rcx],r12
  402a0c:	mov    QWORD PTR [r12+0x8],rax
  402a11:	mov    QWORD PTR [r12+0x10],0x0
  402a1a:	mov    QWORD PTR [rip+0x56cf],r12        # 4080f0 <__ctype_b_loc@plt+0x6ef0>
  402a21:	jmp    402a90 <__ctype_b_loc@plt+0x1890>
  402a23:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402a2d:	nop    DWORD PTR [rax]
  402a30:	xor    r14d,r14d
  402a33:	cmp    r14d,r15d
  402a36:	je     402999 <__ctype_b_loc@plt+0x1799>
  402a3c:	jmp    402a90 <__ctype_b_loc@plt+0x1890>
  402a3e:	mov    rcx,QWORD PTR [rsp]
  402a42:	test   rcx,rcx
  402a45:	je     402a6d <__ctype_b_loc@plt+0x186d>
  402a47:	mov    QWORD PTR [rcx+0x10],r12
  402a4b:	jmp    402a75 <__ctype_b_loc@plt+0x1875>
  402a4d:	mov    rcx,r12
  402a50:	mov    QWORD PTR [rsp+0x18],r12
  402a55:	mov    QWORD PTR [r12+0x8],rax
  402a5a:	mov    QWORD PTR [r12+0x10],0x0
  402a63:	mov    rax,r12
  402a66:	mov    QWORD PTR [rsp+0x8],r12
  402a6b:	jmp    402a90 <__ctype_b_loc@plt+0x1890>
  402a6d:	mov    rax,r12
  402a70:	mov    QWORD PTR [rsp+0x10],r12
  402a75:	mov    QWORD PTR [r12+0x8],rcx
  402a7a:	mov    QWORD PTR [r12+0x10],0x0
  402a83:	mov    rax,r12
  402a86:	mov    QWORD PTR [rsp],r12
  402a8a:	nop    WORD PTR [rax+rax*1+0x0]
  402a90:	mov    rbx,QWORD PTR [r12+0x18]
  402a95:	add    r12,0x18
  402a99:	test   rbx,rbx
  402a9c:	jne    4028f0 <__ctype_b_loc@plt+0x16f0>
  402aa2:	jmp    402abf <__ctype_b_loc@plt+0x18bf>
  402aa4:	xor    eax,eax
  402aa6:	mov    QWORD PTR [rsp+0x8],rax
  402aab:	xor    eax,eax
  402aad:	mov    QWORD PTR [rsp],rax
  402ab1:	xor    eax,eax
  402ab3:	mov    QWORD PTR [rsp+0x18],rax
  402ab8:	xor    eax,eax
  402aba:	mov    QWORD PTR [rsp+0x10],rax
  402abf:	mov    rcx,QWORD PTR [rsp+0x10]
  402ac4:	test   rcx,rcx
  402ac7:	mov    rdx,QWORD PTR [rsp+0x8]
  402acc:	mov    rsi,QWORD PTR [rsp+0x18]
  402ad1:	je     402b00 <__ctype_b_loc@plt+0x1900>
  402ad3:	cmp    QWORD PTR [rip+0x561d],0x0        # 4080f8 <__ctype_b_loc@plt+0x6ef8>
  402adb:	je     402aee <__ctype_b_loc@plt+0x18ee>
  402add:	mov    rax,QWORD PTR [rip+0x560c]        # 4080f0 <__ctype_b_loc@plt+0x6ef0>
  402ae4:	mov    QWORD PTR [rax+0x10],rcx
  402ae8:	mov    QWORD PTR [rcx+0x8],rax
  402aec:	jmp    402af5 <__ctype_b_loc@plt+0x18f5>
  402aee:	mov    QWORD PTR [rip+0x5603],rcx        # 4080f8 <__ctype_b_loc@plt+0x6ef8>
  402af5:	mov    rax,QWORD PTR [rsp]
  402af9:	mov    QWORD PTR [rip+0x55f0],rax        # 4080f0 <__ctype_b_loc@plt+0x6ef0>
  402b00:	test   rsi,rsi
  402b03:	je     402b22 <__ctype_b_loc@plt+0x1922>
  402b05:	mov    rax,QWORD PTR [rip+0x55ec]        # 4080f8 <__ctype_b_loc@plt+0x6ef8>
  402b0c:	test   rax,rax
  402b0f:	je     402b2b <__ctype_b_loc@plt+0x192b>
  402b11:	mov    rcx,QWORD PTR [rip+0x55d8]        # 4080f0 <__ctype_b_loc@plt+0x6ef0>
  402b18:	mov    QWORD PTR [rcx+0x10],rsi
  402b1c:	mov    QWORD PTR [rsi+0x8],rcx
  402b20:	jmp    402b35 <__ctype_b_loc@plt+0x1935>
  402b22:	mov    rax,QWORD PTR [rip+0x55cf]        # 4080f8 <__ctype_b_loc@plt+0x6ef8>
  402b29:	jmp    402b3c <__ctype_b_loc@plt+0x193c>
  402b2b:	mov    QWORD PTR [rip+0x55c6],rsi        # 4080f8 <__ctype_b_loc@plt+0x6ef8>
  402b32:	mov    rax,rsi
  402b35:	mov    QWORD PTR [rip+0x55b4],rdx        # 4080f0 <__ctype_b_loc@plt+0x6ef0>
  402b3c:	mov    QWORD PTR [rip+0x55bd],rax        # 408100 <__ctype_b_loc@plt+0x6f00>
  402b43:	mov    QWORD PTR [rip+0x55be],rax        # 408108 <__ctype_b_loc@plt+0x6f08>
  402b4a:	call   403020 <__ctype_b_loc@plt+0x1e20>
  402b4f:	mov    rax,QWORD PTR fs:0x28
  402b58:	cmp    rax,QWORD PTR [rsp+0x2040]
  402b60:	jne    402b80 <__ctype_b_loc@plt+0x1980>
  402b62:	add    rsp,0x2048
  402b69:	pop    rbx
  402b6a:	pop    r12
  402b6c:	pop    r13
  402b6e:	pop    r14
  402b70:	pop    r15
  402b72:	pop    rbp
  402b73:	ret    
  402b74:	lea    rdi,[rip+0x17b1]        # 40432c <__ctype_b_loc@plt+0x312c>
  402b7b:	call   402740 <__ctype_b_loc@plt+0x1540>
  402b80:	call   401080 <__stack_chk_fail@plt>
  402b85:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402b8f:	nop
  402b90:	push   rbp
  402b91:	push   r15
  402b93:	push   r14
  402b95:	push   r13
  402b97:	push   r12
  402b99:	push   rbx
  402b9a:	push   rax
  402b9b:	mov    rax,QWORD PTR fs:0x28
  402ba4:	mov    QWORD PTR [rsp],rax
  402ba8:	mov    r15,QWORD PTR [rip+0x3449]        # 405ff8 <__ctype_b_loc@plt+0x4df8>
  402baf:	mov    rdi,QWORD PTR [r15]
  402bb2:	lea    rdx,[rip+0x17ec]        # 4043a5 <__ctype_b_loc@plt+0x31a5>
  402bb9:	mov    esi,0x1
  402bbe:	xor    eax,eax
  402bc0:	call   4011e0 <__fprintf_chk@plt>
  402bc5:	mov    rdi,QWORD PTR [r15]
  402bc8:	lea    rdx,[rip+0x17db]        # 4043aa <__ctype_b_loc@plt+0x31aa>
  402bcf:	mov    esi,0x1
  402bd4:	xor    eax,eax
  402bd6:	call   4011e0 <__fprintf_chk@plt>
  402bdb:	mov    rdi,QWORD PTR [r15]
  402bde:	lea    rdx,[rip+0x17cb]        # 4043b0 <__ctype_b_loc@plt+0x31b0>
  402be5:	mov    esi,0x1
  402bea:	xor    eax,eax
  402bec:	call   4011e0 <__fprintf_chk@plt>
  402bf1:	mov    rdi,QWORD PTR [rip+0x5430]        # 408028 <__ctype_b_loc@plt+0x6e28>
  402bf8:	test   rdi,rdi
  402bfb:	je     402c0e <__ctype_b_loc@plt+0x1a0e>
  402bfd:	mov    rsi,QWORD PTR [rip+0x54d4]        # 4080d8 <__ctype_b_loc@plt+0x6ed8>
  402c04:	mov    edx,0x1
  402c09:	call   403290 <__ctype_b_loc@plt+0x2090>
  402c0e:	cmp    QWORD PTR [rip+0x541a],0x0        # 408030 <__ctype_b_loc@plt+0x6e30>
  402c16:	jne    402c2d <__ctype_b_loc@plt+0x1a2d>
  402c18:	mov    rax,QWORD PTR [rip+0x54d9]        # 4080f8 <__ctype_b_loc@plt+0x6ef8>
  402c1f:	test   rax,rax
  402c22:	je     402c2d <__ctype_b_loc@plt+0x1a2d>
  402c24:	mov    rsi,QWORD PTR [rip+0x5415]        # 408040 <__ctype_b_loc@plt+0x6e40>
  402c2b:	jmp    402c3b <__ctype_b_loc@plt+0x1a3b>
  402c2d:	mov    rsi,QWORD PTR [rip+0x545c]        # 408090 <__ctype_b_loc@plt+0x6e90>
  402c34:	sub    rsi,QWORD PTR [rip+0x549d]        # 4080d8 <__ctype_b_loc@plt+0x6ed8>
  402c3b:	lea    r14,[rip+0x33de]        # 406020 <__ctype_b_loc@plt+0x4e20>
  402c42:	xor    edx,edx
  402c44:	mov    rdi,r14
  402c47:	call   403290 <__ctype_b_loc@plt+0x2090>
  402c4c:	mov    rax,QWORD PTR [rip+0x53dd]        # 408030 <__ctype_b_loc@plt+0x6e30>
  402c53:	test   rax,rax
  402c56:	je     402cf3 <__ctype_b_loc@plt+0x1af3>
  402c5c:	mov    ecx,DWORD PTR [rip+0x33b2]        # 406014 <__ctype_b_loc@plt+0x4e14>
  402c62:	test   ecx,ecx
  402c64:	je     402c91 <__ctype_b_loc@plt+0x1a91>
  402c66:	mov    rdi,QWORD PTR [r15]
  402c69:	mov    rdx,QWORD PTR [rip+0x5418]        # 408088 <__ctype_b_loc@plt+0x6e88>
  402c70:	sub    rdx,rax
  402c73:	test   ecx,ecx
  402c75:	mov    ecx,0x0
  402c7a:	cmovle rcx,rdx
  402c7e:	lea    rdx,[rip+0x1712]        # 404397 <__ctype_b_loc@plt+0x3197>
  402c85:	mov    esi,0x1
  402c8a:	xor    eax,eax
  402c8c:	call   4011e0 <__fprintf_chk@plt>
  402c91:	mov    rbx,QWORD PTR [rip+0x5470]        # 408108 <__ctype_b_loc@plt+0x6f08>
  402c98:	cmp    rbx,QWORD PTR [rip+0x5471]        # 408110 <__ctype_b_loc@plt+0x6f10>
  402c9f:	je     402ead <__ctype_b_loc@plt+0x1cad>
  402ca5:	lea    r12,[rip+0x167e]        # 40432a <__ctype_b_loc@plt+0x312a>
  402cac:	xor    r13d,r13d
  402caf:	nop
  402cb0:	mov    rdi,QWORD PTR [r15]
  402cb3:	mov    esi,0x1
  402cb8:	xor    eax,eax
  402cba:	mov    rdx,r12
  402cbd:	call   4011e0 <__fprintf_chk@plt>
  402cc2:	mov    rdi,QWORD PTR [rbx]
  402cc5:	mov    rsi,QWORD PTR [rip+0x53c4]        # 408090 <__ctype_b_loc@plt+0x6e90>
  402ccc:	xor    edx,edx
  402cce:	cmp    rbx,QWORD PTR [rip+0x542b]        # 408100 <__ctype_b_loc@plt+0x6f00>
  402cd5:	sete   dl
  402cd8:	call   403290 <__ctype_b_loc@plt+0x2090>
  402cdd:	add    r13,0x1
  402ce1:	mov    rbx,QWORD PTR [rbx+0x10]
  402ce5:	cmp    rbx,QWORD PTR [rip+0x5424]        # 408110 <__ctype_b_loc@plt+0x6f10>
  402cec:	jne    402cb0 <__ctype_b_loc@plt+0x1ab0>
  402cee:	jmp    402eb0 <__ctype_b_loc@plt+0x1cb0>
  402cf3:	cmp    QWORD PTR [rip+0x53fd],0x0        # 4080f8 <__ctype_b_loc@plt+0x6ef8>
  402cfb:	je     402f30 <__ctype_b_loc@plt+0x1d30>
  402d01:	mov    r12,QWORD PTR [rip+0x5388]        # 408090 <__ctype_b_loc@plt+0x6e90>
  402d08:	add    r12,0xfffffffffffffffc
  402d0c:	sub    r12,QWORD PTR [rip+0x53c5]        # 4080d8 <__ctype_b_loc@plt+0x6ed8>
  402d13:	mov    r13,QWORD PTR [rip+0x53ee]        # 408108 <__ctype_b_loc@plt+0x6f08>
  402d1a:	sub    r12,QWORD PTR [rip+0x531f]        # 408040 <__ctype_b_loc@plt+0x6e40>
  402d21:	cmp    QWORD PTR [r13+0x8],0x0
  402d26:	je     402d42 <__ctype_b_loc@plt+0x1b42>
  402d28:	lea    rdi,[rip+0x1664]        # 404393 <__ctype_b_loc@plt+0x3193>
  402d2f:	mov    esi,0x5
  402d34:	xor    edx,edx
  402d36:	call   403290 <__ctype_b_loc@plt+0x2090>
  402d3b:	mov    r13,QWORD PTR [rip+0x53c6]        # 408108 <__ctype_b_loc@plt+0x6f08>
  402d42:	cmp    r13,QWORD PTR [rip+0x53c7]        # 408110 <__ctype_b_loc@plt+0x6f10>
  402d49:	je     402e9f <__ctype_b_loc@plt+0x1c9f>
  402d4f:	mov    ebp,0xfffffffe
  402d54:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402d5e:	xchg   ax,ax
  402d60:	mov    rdi,QWORD PTR [r13+0x0]
  402d64:	test   rdi,rdi
  402d67:	je     402db0 <__ctype_b_loc@plt+0x1bb0>
  402d69:	mov    dl,BYTE PTR [rdi]
  402d6b:	test   dl,dl
  402d6d:	je     402dc0 <__ctype_b_loc@plt+0x1bc0>
  402d6f:	xor    eax,eax
  402d71:	mov    ecx,0x1
  402d76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402d80:	mov    esi,eax
  402d82:	and    dl,0xc0
  402d85:	xor    eax,eax
  402d87:	cmp    dl,0x80
  402d8a:	setne  al
  402d8d:	add    eax,esi
  402d8f:	cmp    rcx,rbp
  402d92:	ja     402da0 <__ctype_b_loc@plt+0x1ba0>
  402d94:	movzx  edx,BYTE PTR [rdi+rcx*1]
  402d98:	add    rcx,0x1
  402d9c:	test   dl,dl
  402d9e:	jne    402d80 <__ctype_b_loc@plt+0x1b80>
  402da0:	add    eax,0x4
  402da3:	jmp    402dc5 <__ctype_b_loc@plt+0x1bc5>
  402da5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402daf:	nop
  402db0:	cmp    r12,0x4
  402db4:	mov    esi,0x4
  402db9:	cmovb  rsi,r12
  402dbd:	jmp    402e20 <__ctype_b_loc@plt+0x1c20>
  402dbf:	nop
  402dc0:	mov    eax,0x4
  402dc5:	cmp    rax,r12
  402dc8:	mov    esi,0x4
  402dcd:	cmovae rsi,r12
  402dd1:	test   rdi,rdi
  402dd4:	je     402e20 <__ctype_b_loc@plt+0x1c20>
  402dd6:	cmp    rax,r12
  402dd9:	jae    402e20 <__ctype_b_loc@plt+0x1c20>
  402ddb:	mov    cl,BYTE PTR [rdi]
  402ddd:	test   cl,cl
  402ddf:	je     402e16 <__ctype_b_loc@plt+0x1c16>
  402de1:	xor    esi,esi
  402de3:	mov    eax,0x1
  402de8:	nop    DWORD PTR [rax+rax*1+0x0]
  402df0:	mov    edx,esi
  402df2:	and    cl,0xc0
  402df5:	xor    esi,esi
  402df7:	cmp    cl,0x80
  402dfa:	setne  sil
  402dfe:	add    esi,edx
  402e00:	cmp    rax,rbp
  402e03:	ja     402e11 <__ctype_b_loc@plt+0x1c11>
  402e05:	movzx  ecx,BYTE PTR [rdi+rax*1]
  402e09:	add    rax,0x1
  402e0d:	test   cl,cl
  402e0f:	jne    402df0 <__ctype_b_loc@plt+0x1bf0>
  402e11:	add    esi,0x4
  402e14:	jmp    402e20 <__ctype_b_loc@plt+0x1c20>
  402e16:	mov    esi,0x4
  402e1b:	nop    DWORD PTR [rax+rax*1+0x0]
  402e20:	xor    edx,edx
  402e22:	cmp    r13,QWORD PTR [rip+0x52d7]        # 408100 <__ctype_b_loc@plt+0x6f00>
  402e29:	sete   dl
  402e2c:	call   403290 <__ctype_b_loc@plt+0x2090>
  402e31:	mov    rax,QWORD PTR [r13+0x0]
  402e35:	test   rax,rax
  402e38:	je     402e80 <__ctype_b_loc@plt+0x1c80>
  402e3a:	mov    bl,BYTE PTR [rax]
  402e3c:	test   bl,bl
  402e3e:	je     402e80 <__ctype_b_loc@plt+0x1c80>
  402e40:	xor    ecx,ecx
  402e42:	mov    edx,0x1
  402e47:	nop    WORD PTR [rax+rax*1+0x0]
  402e50:	mov    esi,ecx
  402e52:	and    bl,0xc0
  402e55:	xor    ecx,ecx
  402e57:	cmp    bl,0x80
  402e5a:	setne  cl
  402e5d:	add    ecx,esi
  402e5f:	cmp    rdx,rbp
  402e62:	ja     402e70 <__ctype_b_loc@plt+0x1c70>
  402e64:	movzx  ebx,BYTE PTR [rax+rdx*1]
  402e68:	add    rdx,0x1
  402e6c:	test   bl,bl
  402e6e:	jne    402e50 <__ctype_b_loc@plt+0x1c50>
  402e70:	add    ecx,0x4
  402e73:	sub    r12,rcx
  402e76:	jne    402e8e <__ctype_b_loc@plt+0x1c8e>
  402e78:	jmp    402fc4 <__ctype_b_loc@plt+0x1dc4>
  402e7d:	nop    DWORD PTR [rax]
  402e80:	mov    ecx,0x4
  402e85:	sub    r12,rcx
  402e88:	je     402fc4 <__ctype_b_loc@plt+0x1dc4>
  402e8e:	mov    r13,QWORD PTR [r13+0x10]
  402e92:	cmp    r13,QWORD PTR [rip+0x5277]        # 408110 <__ctype_b_loc@plt+0x6f10>
  402e99:	jne    402d60 <__ctype_b_loc@plt+0x1b60>
  402e9f:	test   r13,r13
  402ea2:	jne    402fd4 <__ctype_b_loc@plt+0x1dd4>
  402ea8:	jmp    402f30 <__ctype_b_loc@plt+0x1d30>
  402ead:	xor    r13d,r13d
  402eb0:	mov    rcx,QWORD PTR [rip+0x5179]        # 408030 <__ctype_b_loc@plt+0x6e30>
  402eb7:	cmp    r13,rcx
  402eba:	jae    402ef2 <__ctype_b_loc@plt+0x1cf2>
  402ebc:	lea    r12,[rip+0x14ec]        # 4043af <__ctype_b_loc@plt+0x31af>
  402ec3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402ecd:	nop    DWORD PTR [rax]
  402ed0:	mov    rdi,QWORD PTR [r15]
  402ed3:	mov    esi,0x1
  402ed8:	xor    eax,eax
  402eda:	mov    rdx,r12
  402edd:	call   4011e0 <__fprintf_chk@plt>
  402ee2:	add    r13,0x1
  402ee6:	mov    rcx,QWORD PTR [rip+0x5143]        # 408030 <__ctype_b_loc@plt+0x6e30>
  402eed:	cmp    r13,rcx
  402ef0:	jb     402ed0 <__ctype_b_loc@plt+0x1cd0>
  402ef2:	mov    eax,DWORD PTR [rip+0x311c]        # 406014 <__ctype_b_loc@plt+0x4e14>
  402ef8:	mov    rdi,QWORD PTR [r15]
  402efb:	test   eax,eax
  402efd:	je     402f1d <__ctype_b_loc@plt+0x1d1d>
  402eff:	mov    rdx,QWORD PTR [rip+0x5182]        # 408088 <__ctype_b_loc@plt+0x6e88>
  402f06:	sub    rdx,rcx
  402f09:	test   eax,eax
  402f0b:	mov    ecx,0x0
  402f10:	cmovle rcx,rdx
  402f14:	lea    rdx,[rip+0x147c]        # 404397 <__ctype_b_loc@plt+0x3197>
  402f1b:	jmp    402f24 <__ctype_b_loc@plt+0x1d24>
  402f1d:	lea    rdx,[rip+0x147a]        # 40439e <__ctype_b_loc@plt+0x319e>
  402f24:	mov    esi,0x1
  402f29:	xor    eax,eax
  402f2b:	call   4011e0 <__fprintf_chk@plt>
  402f30:	mov    rdi,QWORD PTR [r15]
  402f33:	mov    rax,QWORD PTR [rip+0x519e]        # 4080d8 <__ctype_b_loc@plt+0x6ed8>
  402f3a:	mov    edx,DWORD PTR [rip+0x50e0]        # 408020 <__ctype_b_loc@plt+0x6e20>
  402f40:	mov    ecx,0x4
  402f45:	test   rdx,rdx
  402f48:	je     402f84 <__ctype_b_loc@plt+0x1d84>
  402f4a:	mov    bl,BYTE PTR [rip+0x30d0]        # 406020 <__ctype_b_loc@plt+0x4e20>
  402f50:	test   bl,bl
  402f52:	je     402f84 <__ctype_b_loc@plt+0x1d84>
  402f54:	xor    ecx,ecx
  402f56:	mov    esi,0x1
  402f5b:	nop    DWORD PTR [rax+rax*1+0x0]
  402f60:	mov    ebp,ecx
  402f62:	and    bl,0xc0
  402f65:	xor    ecx,ecx
  402f67:	cmp    bl,0x80
  402f6a:	setne  cl
  402f6d:	add    ecx,ebp
  402f6f:	cmp    rsi,rdx
  402f72:	jae    402f81 <__ctype_b_loc@plt+0x1d81>
  402f74:	movzx  ebx,BYTE PTR [rsi+r14*1]
  402f79:	add    rsi,0x1
  402f7d:	test   bl,bl
  402f7f:	jne    402f60 <__ctype_b_loc@plt+0x1d60>
  402f81:	add    ecx,0x4
  402f84:	add    rcx,rax
  402f87:	add    rcx,0xffffffffffffffff
  402f8b:	lea    rdx,[rip+0x1429]        # 4043bb <__ctype_b_loc@plt+0x31bb>
  402f92:	mov    esi,0x1
  402f97:	xor    eax,eax
  402f99:	call   4011e0 <__fprintf_chk@plt>
  402f9e:	mov    rdi,QWORD PTR [r15]
  402fa1:	call   401130 <fflush@plt>
  402fa6:	mov    rax,QWORD PTR fs:0x28
  402faf:	cmp    rax,QWORD PTR [rsp]
  402fb3:	jne    40300d <__ctype_b_loc@plt+0x1e0d>
  402fb5:	add    rsp,0x8
  402fb9:	pop    rbx
  402fba:	pop    r12
  402fbc:	pop    r13
  402fbe:	pop    r14
  402fc0:	pop    r15
  402fc2:	pop    rbp
  402fc3:	ret    
  402fc4:	mov    r13,QWORD PTR [rip+0x5145]        # 408110 <__ctype_b_loc@plt+0x6f10>
  402fcb:	test   r13,r13
  402fce:	je     402f30 <__ctype_b_loc@plt+0x1d30>
  402fd4:	mov    rdi,QWORD PTR [r15]
  402fd7:	mov    rcx,QWORD PTR [rip+0x50b2]        # 408090 <__ctype_b_loc@plt+0x6e90>
  402fde:	add    rcx,0xfffffffffffffffb
  402fe2:	lea    rdx,[rip+0x13cb]        # 4043b4 <__ctype_b_loc@plt+0x31b4>
  402fe9:	mov    esi,0x1
  402fee:	xor    eax,eax
  402ff0:	call   4011e0 <__fprintf_chk@plt>
  402ff5:	lea    rdi,[rip+0x1399]        # 404395 <__ctype_b_loc@plt+0x3195>
  402ffc:	mov    esi,0x5
  403001:	xor    edx,edx
  403003:	call   403290 <__ctype_b_loc@plt+0x2090>
  403008:	jmp    402f30 <__ctype_b_loc@plt+0x1d30>
  40300d:	call   401080 <__stack_chk_fail@plt>
  403012:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40301c:	nop    DWORD PTR [rax+0x0]
  403020:	push   rbp
  403021:	push   rbx
  403022:	push   rax
  403023:	mov    rax,QWORD PTR fs:0x28
  40302c:	mov    QWORD PTR [rsp],rax
  403030:	mov    r8,QWORD PTR [rip+0x4ff9]        # 408030 <__ctype_b_loc@plt+0x6e30>
  403037:	mov    r9,r8
  40303a:	test   r8,r8
  40303d:	jne    403058 <__ctype_b_loc@plt+0x1e58>
  40303f:	mov    r9,QWORD PTR [rip+0x504a]        # 408090 <__ctype_b_loc@plt+0x6e90>
  403046:	add    r9,0xfffffffffffffff6
  40304a:	sub    r9,QWORD PTR [rip+0x5087]        # 4080d8 <__ctype_b_loc@plt+0x6ed8>
  403051:	sub    r9,QWORD PTR [rip+0x4fe8]        # 408040 <__ctype_b_loc@plt+0x6e40>
  403058:	mov    r10,QWORD PTR [rip+0x50a9]        # 408108 <__ctype_b_loc@plt+0x6f08>
  40305f:	mov    QWORD PTR [rip+0x50aa],r10        # 408110 <__ctype_b_loc@plt+0x6f10>
  403066:	test   r10,r10
  403069:	je     40326e <__ctype_b_loc@plt+0x206e>
  40306f:	xor    esi,esi
  403071:	mov    r11d,0xfffffffe
  403077:	mov    rdx,r10
  40307a:	nop    WORD PTR [rax+rax*1+0x0]
  403080:	test   r8,r8
  403083:	je     403090 <__ctype_b_loc@plt+0x1e90>
  403085:	mov    ecx,0x1
  40308a:	jmp    403140 <__ctype_b_loc@plt+0x1f40>
  40308f:	nop
  403090:	mov    rcx,QWORD PTR [rdx]
  403093:	test   rcx,rcx
  403096:	je     4030e0 <__ctype_b_loc@plt+0x1ee0>
  403098:	mov    bl,BYTE PTR [rcx]
  40309a:	test   bl,bl
  40309c:	je     4030e0 <__ctype_b_loc@plt+0x1ee0>
  40309e:	xor    eax,eax
  4030a0:	mov    edi,0x1
  4030a5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4030af:	nop
  4030b0:	mov    ebp,eax
  4030b2:	and    bl,0xc0
  4030b5:	xor    eax,eax
  4030b7:	cmp    bl,0x80
  4030ba:	setne  al
  4030bd:	add    eax,ebp
  4030bf:	cmp    rdi,r11
  4030c2:	ja     4030d0 <__ctype_b_loc@plt+0x1ed0>
  4030c4:	movzx  ebx,BYTE PTR [rcx+rdi*1]
  4030c8:	add    rdi,0x1
  4030cc:	test   bl,bl
  4030ce:	jne    4030b0 <__ctype_b_loc@plt+0x1eb0>
  4030d0:	add    eax,0x4
  4030d3:	jmp    4030e5 <__ctype_b_loc@plt+0x1ee5>
  4030d5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4030df:	nop
  4030e0:	mov    eax,0x4
  4030e5:	mov    rcx,r9
  4030e8:	cmp    rax,r9
  4030eb:	jae    403140 <__ctype_b_loc@plt+0x1f40>
  4030ed:	mov    rax,QWORD PTR [rdx]
  4030f0:	test   rax,rax
  4030f3:	je     403135 <__ctype_b_loc@plt+0x1f35>
  4030f5:	mov    bl,BYTE PTR [rax]
  4030f7:	test   bl,bl
  4030f9:	je     403135 <__ctype_b_loc@plt+0x1f35>
  4030fb:	xor    ecx,ecx
  4030fd:	mov    edi,0x1
  403102:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40310c:	nop    DWORD PTR [rax+0x0]
  403110:	mov    ebp,ecx
  403112:	and    bl,0xc0
  403115:	xor    ecx,ecx
  403117:	cmp    bl,0x80
  40311a:	setne  cl
  40311d:	add    ecx,ebp
  40311f:	cmp    rdi,r11
  403122:	ja     403130 <__ctype_b_loc@plt+0x1f30>
  403124:	movzx  ebx,BYTE PTR [rax+rdi*1]
  403128:	add    rdi,0x1
  40312c:	test   bl,bl
  40312e:	jne    403110 <__ctype_b_loc@plt+0x1f10>
  403130:	add    ecx,0x4
  403133:	jmp    403140 <__ctype_b_loc@plt+0x1f40>
  403135:	mov    ecx,0x4
  40313a:	nop    WORD PTR [rax+rax*1+0x0]
  403140:	add    rsi,rcx
  403143:	cmp    rsi,r9
  403146:	ja     40315c <__ctype_b_loc@plt+0x1f5c>
  403148:	mov    rdx,QWORD PTR [rdx+0x10]
  40314c:	mov    QWORD PTR [rip+0x4fbd],rdx        # 408110 <__ctype_b_loc@plt+0x6f10>
  403153:	test   rdx,rdx
  403156:	jne    403080 <__ctype_b_loc@plt+0x1e80>
  40315c:	mov    QWORD PTR [rip+0x4fb5],r10        # 408118 <__ctype_b_loc@plt+0x6f18>
  403163:	test   r10,r10
  403166:	je     403275 <__ctype_b_loc@plt+0x2075>
  40316c:	xor    esi,esi
  40316e:	mov    edi,0xfffffffe
  403173:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40317d:	nop    DWORD PTR [rax]
  403180:	mov    rax,QWORD PTR [r10+0x8]
  403184:	test   rax,rax
  403187:	je     403275 <__ctype_b_loc@plt+0x2075>
  40318d:	test   r8,r8
  403190:	je     4031a0 <__ctype_b_loc@plt+0x1fa0>
  403192:	mov    ecx,0x1
  403197:	jmp    403250 <__ctype_b_loc@plt+0x2050>
  40319c:	nop    DWORD PTR [rax+0x0]
  4031a0:	mov    rcx,QWORD PTR [rax]
  4031a3:	test   rcx,rcx
  4031a6:	je     4031f0 <__ctype_b_loc@plt+0x1ff0>
  4031a8:	mov    bl,BYTE PTR [rcx]
  4031aa:	test   bl,bl
  4031ac:	je     4031f0 <__ctype_b_loc@plt+0x1ff0>
  4031ae:	xor    eax,eax
  4031b0:	mov    edx,0x1
  4031b5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4031bf:	nop
  4031c0:	mov    ebp,eax
  4031c2:	and    bl,0xc0
  4031c5:	xor    eax,eax
  4031c7:	cmp    bl,0x80
  4031ca:	setne  al
  4031cd:	add    eax,ebp
  4031cf:	cmp    rdx,rdi
  4031d2:	ja     4031e0 <__ctype_b_loc@plt+0x1fe0>
  4031d4:	movzx  ebx,BYTE PTR [rcx+rdx*1]
  4031d8:	add    rdx,0x1
  4031dc:	test   bl,bl
  4031de:	jne    4031c0 <__ctype_b_loc@plt+0x1fc0>
  4031e0:	add    eax,0x4
  4031e3:	jmp    4031f5 <__ctype_b_loc@plt+0x1ff5>
  4031e5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4031ef:	nop
  4031f0:	mov    eax,0x4
  4031f5:	mov    rcx,r9
  4031f8:	cmp    rax,r9
  4031fb:	jae    403250 <__ctype_b_loc@plt+0x2050>
  4031fd:	mov    rax,QWORD PTR [r10+0x8]
  403201:	mov    rax,QWORD PTR [rax]
  403204:	test   rax,rax
  403207:	je     403245 <__ctype_b_loc@plt+0x2045>
  403209:	mov    bl,BYTE PTR [rax]
  40320b:	test   bl,bl
  40320d:	je     403245 <__ctype_b_loc@plt+0x2045>
  40320f:	xor    ecx,ecx
  403211:	mov    edx,0x1
  403216:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403220:	mov    ebp,ecx
  403222:	and    bl,0xc0
  403225:	xor    ecx,ecx
  403227:	cmp    bl,0x80
  40322a:	setne  cl
  40322d:	add    ecx,ebp
  40322f:	cmp    rdx,rdi
  403232:	ja     403240 <__ctype_b_loc@plt+0x2040>
  403234:	movzx  ebx,BYTE PTR [rax+rdx*1]
  403238:	add    rdx,0x1
  40323c:	test   bl,bl
  40323e:	jne    403220 <__ctype_b_loc@plt+0x2020>
  403240:	add    ecx,0x4
  403243:	jmp    403250 <__ctype_b_loc@plt+0x2050>
  403245:	mov    ecx,0x4
  40324a:	nop    WORD PTR [rax+rax*1+0x0]
  403250:	add    rsi,rcx
  403253:	cmp    rsi,r9
  403256:	ja     403275 <__ctype_b_loc@plt+0x2075>
  403258:	mov    r10,QWORD PTR [r10+0x8]
  40325c:	mov    QWORD PTR [rip+0x4eb5],r10        # 408118 <__ctype_b_loc@plt+0x6f18>
  403263:	test   r10,r10
  403266:	jne    403180 <__ctype_b_loc@plt+0x1f80>
  40326c:	jmp    403275 <__ctype_b_loc@plt+0x2075>
  40326e:	mov    QWORD PTR [rip+0x4ea3],r10        # 408118 <__ctype_b_loc@plt+0x6f18>
  403275:	mov    rax,QWORD PTR fs:0x28
  40327e:	cmp    rax,QWORD PTR [rsp]
  403282:	jne    40328b <__ctype_b_loc@plt+0x208b>
  403284:	add    rsp,0x8
  403288:	pop    rbx
  403289:	pop    rbp
  40328a:	ret    
  40328b:	call   401080 <__stack_chk_fail@plt>
  403290:	push   rbp
  403291:	push   r15
  403293:	push   r14
  403295:	push   r13
  403297:	push   r12
  403299:	push   rbx
  40329a:	push   rax
  40329b:	mov    rax,QWORD PTR fs:0x28
  4032a4:	mov    QWORD PTR [rsp],rax
  4032a8:	cmp    rsi,0x5
  4032ac:	jb     4033ce <__ctype_b_loc@plt+0x21ce>
  4032b2:	mov    ebx,edx
  4032b4:	mov    r15,rsi
  4032b7:	mov    rbp,rdi
  4032ba:	lea    rsi,[rsi-0x3]
  4032be:	mov    edi,0x1
  4032c3:	call   401100 <calloc@plt>
  4032c8:	test   rax,rax
  4032cb:	je     4033f1 <__ctype_b_loc@plt+0x21f1>
  4032d1:	mov    r14,rax
  4032d4:	lea    r13,[r15-0x4]
  4032d8:	cmp    ebx,0x1
  4032db:	lea    rbx,[rip+0x10c3]        # 4043a5 <__ctype_b_loc@plt+0x31a5>
  4032e2:	lea    rax,[rip+0x1042]        # 40432b <__ctype_b_loc@plt+0x312b>
  4032e9:	cmovne rbx,rax
  4032ed:	lea    r12,[rip+0x10dc]        # 4043d0 <__ctype_b_loc@plt+0x31d0>
  4032f4:	cmovne r12,rax
  4032f8:	mov    esi,0x20
  4032fd:	mov    rdi,r14
  403300:	mov    rdx,r13
  403303:	call   4010a0 <memset@plt>
  403308:	mov    BYTE PTR [r14+r13*1],0x0
  40330d:	mov    rdi,rbp
  403310:	call   401070 <strlen@plt>
  403315:	cmp    rax,r13
  403318:	cmovae rax,r13
  40331c:	mov    rdi,r14
  40331f:	mov    rsi,rbp
  403322:	mov    rdx,rax
  403325:	call   401120 <memcpy@plt>
  40332a:	test   rbp,rbp
  40332d:	je     403376 <__ctype_b_loc@plt+0x2176>
  40332f:	mov    rdi,rbx
  403332:	mov    bl,BYTE PTR [rbp+0x0]
  403335:	test   bl,bl
  403337:	je     403382 <__ctype_b_loc@plt+0x2182>
  403339:	xor    eax,eax
  40333b:	mov    ecx,0x1
  403340:	mov    edx,0xfffffffe
  403345:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40334f:	nop
  403350:	mov    esi,eax
  403352:	and    bl,0xc0
  403355:	xor    eax,eax
  403357:	cmp    bl,0x80
  40335a:	setne  al
  40335d:	add    eax,esi
  40335f:	cmp    rcx,rdx
  403362:	ja     403371 <__ctype_b_loc@plt+0x2171>
  403364:	movzx  ebx,BYTE PTR [rbp+rcx*1+0x0]
  403369:	add    rcx,0x1
  40336d:	test   bl,bl
  40336f:	jne    403350 <__ctype_b_loc@plt+0x2150>
  403371:	add    eax,0x4
  403374:	jmp    403387 <__ctype_b_loc@plt+0x2187>
  403376:	mov    eax,0x4
  40337b:	cmp    rax,r15
  40337e:	ja     40338f <__ctype_b_loc@plt+0x218f>
  403380:	jmp    4033a0 <__ctype_b_loc@plt+0x21a0>
  403382:	mov    eax,0x4
  403387:	mov    rbx,rdi
  40338a:	cmp    rax,r15
  40338d:	jbe    4033a0 <__ctype_b_loc@plt+0x21a0>
  40338f:	add    r15,0xfffffffffffffff8
  403393:	cmp    r15,r13
  403396:	jae    4033a0 <__ctype_b_loc@plt+0x21a0>
  403398:	mov    DWORD PTR [r14+r15*1],0x2e2e2e2e
  4033a0:	mov    rax,QWORD PTR [rip+0x2c51]        # 405ff8 <__ctype_b_loc@plt+0x4df8>
  4033a7:	mov    rdi,QWORD PTR [rax]
  4033aa:	lea    rdx,[rip+0x1024]        # 4043d5 <__ctype_b_loc@plt+0x31d5>
  4033b1:	mov    esi,0x1
  4033b6:	xor    eax,eax
  4033b8:	mov    rcx,r12
  4033bb:	mov    r8,r14
  4033be:	mov    r9,rbx
  4033c1:	call   4011e0 <__fprintf_chk@plt>
  4033c6:	mov    rdi,r14
  4033c9:	call   401030 <free@plt>
  4033ce:	mov    rax,QWORD PTR fs:0x28
  4033d7:	cmp    rax,QWORD PTR [rsp]
  4033db:	jne    4033ec <__ctype_b_loc@plt+0x21ec>
  4033dd:	add    rsp,0x8
  4033e1:	pop    rbx
  4033e2:	pop    r12
  4033e4:	pop    r13
  4033e6:	pop    r14
  4033e8:	pop    r15
  4033ea:	pop    rbp
  4033eb:	ret    
  4033ec:	call   401080 <__stack_chk_fail@plt>
  4033f1:	lea    rdi,[rip+0xfca]        # 4043c2 <__ctype_b_loc@plt+0x31c2>
  4033f8:	call   402740 <__ctype_b_loc@plt+0x1540>
  4033fd:	nop    DWORD PTR [rax]
  403400:	endbr64 
  403404:	push   r15
  403406:	lea    r15,[rip+0x28b3]        # 405cc0 <__ctype_b_loc@plt+0x4ac0>
  40340d:	push   r14
  40340f:	mov    r14,rdx
  403412:	push   r13
  403414:	mov    r13,rsi
  403417:	push   r12
  403419:	mov    r12d,edi
  40341c:	push   rbp
  40341d:	lea    rbp,[rip+0x28a4]        # 405cc8 <__ctype_b_loc@plt+0x4ac8>
  403424:	push   rbx
  403425:	sub    rbp,r15
  403428:	sub    rsp,0x8
  40342c:	call   401000 <free@plt-0x30>
  403431:	sar    rbp,0x3
  403435:	je     403456 <__ctype_b_loc@plt+0x2256>
  403437:	xor    ebx,ebx
  403439:	nop    DWORD PTR [rax+0x0]
  403440:	mov    rdx,r14
  403443:	mov    rsi,r13
  403446:	mov    edi,r12d
  403449:	call   QWORD PTR [r15+rbx*8]
  40344d:	add    rbx,0x1
  403451:	cmp    rbp,rbx
  403454:	jne    403440 <__ctype_b_loc@plt+0x2240>
  403456:	add    rsp,0x8
  40345a:	pop    rbx
  40345b:	pop    rbp
  40345c:	pop    r12
  40345e:	pop    r13
  403460:	pop    r14
  403462:	pop    r15
  403464:	ret    
  403465:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  403470:	endbr64 
  403474:	ret    

Disassembly of section .fini:

0000000000403478 <.fini>:
  403478:	endbr64 
  40347c:	sub    rsp,0x8
  403480:	add    rsp,0x8
  403484:	ret    
