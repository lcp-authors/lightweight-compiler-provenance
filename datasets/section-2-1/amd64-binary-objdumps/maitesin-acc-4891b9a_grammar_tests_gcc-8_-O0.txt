
../repos/maitesin-acc-4891b9a/bin/grammar_tests:     file format elf64-x86-64


Disassembly of section .init:

0000000000402000 <.init>:
  402000:	endbr64 
  402004:	sub    rsp,0x8
  402008:	mov    rax,QWORD PTR [rip+0xcfe1]        # 40eff0 <__gmon_start__>
  40200f:	test   rax,rax
  402012:	je     402016 <getenv@plt-0x24a>
  402014:	call   rax
  402016:	add    rsp,0x8
  40201a:	ret    

Disassembly of section .plt:

0000000000402020 <.plt>:
  402020:	push   QWORD PTR [rip+0xcfe2]        # 40f008 <_IO_stdin_used@@Base+0x4008>
  402026:	bnd jmp QWORD PTR [rip+0xcfe3]        # 40f010 <_IO_stdin_used@@Base+0x4010>
  40202d:	nop    DWORD PTR [rax]
  402030:	endbr64 
  402034:	push   0x0
  402039:	bnd jmp 402020 <getenv@plt-0x240>
  40203f:	nop
  402040:	endbr64 
  402044:	push   0x1
  402049:	bnd jmp 402020 <getenv@plt-0x240>
  40204f:	nop
  402050:	endbr64 
  402054:	push   0x2
  402059:	bnd jmp 402020 <getenv@plt-0x240>
  40205f:	nop
  402060:	endbr64 
  402064:	push   0x3
  402069:	bnd jmp 402020 <getenv@plt-0x240>
  40206f:	nop
  402070:	endbr64 
  402074:	push   0x4
  402079:	bnd jmp 402020 <getenv@plt-0x240>
  40207f:	nop
  402080:	endbr64 
  402084:	push   0x5
  402089:	bnd jmp 402020 <getenv@plt-0x240>
  40208f:	nop
  402090:	endbr64 
  402094:	push   0x6
  402099:	bnd jmp 402020 <getenv@plt-0x240>
  40209f:	nop
  4020a0:	endbr64 
  4020a4:	push   0x7
  4020a9:	bnd jmp 402020 <getenv@plt-0x240>
  4020af:	nop
  4020b0:	endbr64 
  4020b4:	push   0x8
  4020b9:	bnd jmp 402020 <getenv@plt-0x240>
  4020bf:	nop
  4020c0:	endbr64 
  4020c4:	push   0x9
  4020c9:	bnd jmp 402020 <getenv@plt-0x240>
  4020cf:	nop
  4020d0:	endbr64 
  4020d4:	push   0xa
  4020d9:	bnd jmp 402020 <getenv@plt-0x240>
  4020df:	nop
  4020e0:	endbr64 
  4020e4:	push   0xb
  4020e9:	bnd jmp 402020 <getenv@plt-0x240>
  4020ef:	nop
  4020f0:	endbr64 
  4020f4:	push   0xc
  4020f9:	bnd jmp 402020 <getenv@plt-0x240>
  4020ff:	nop
  402100:	endbr64 
  402104:	push   0xd
  402109:	bnd jmp 402020 <getenv@plt-0x240>
  40210f:	nop
  402110:	endbr64 
  402114:	push   0xe
  402119:	bnd jmp 402020 <getenv@plt-0x240>
  40211f:	nop
  402120:	endbr64 
  402124:	push   0xf
  402129:	bnd jmp 402020 <getenv@plt-0x240>
  40212f:	nop
  402130:	endbr64 
  402134:	push   0x10
  402139:	bnd jmp 402020 <getenv@plt-0x240>
  40213f:	nop
  402140:	endbr64 
  402144:	push   0x11
  402149:	bnd jmp 402020 <getenv@plt-0x240>
  40214f:	nop
  402150:	endbr64 
  402154:	push   0x12
  402159:	bnd jmp 402020 <getenv@plt-0x240>
  40215f:	nop
  402160:	endbr64 
  402164:	push   0x13
  402169:	bnd jmp 402020 <getenv@plt-0x240>
  40216f:	nop
  402170:	endbr64 
  402174:	push   0x14
  402179:	bnd jmp 402020 <getenv@plt-0x240>
  40217f:	nop
  402180:	endbr64 
  402184:	push   0x15
  402189:	bnd jmp 402020 <getenv@plt-0x240>
  40218f:	nop
  402190:	endbr64 
  402194:	push   0x16
  402199:	bnd jmp 402020 <getenv@plt-0x240>
  40219f:	nop
  4021a0:	endbr64 
  4021a4:	push   0x17
  4021a9:	bnd jmp 402020 <getenv@plt-0x240>
  4021af:	nop
  4021b0:	endbr64 
  4021b4:	push   0x18
  4021b9:	bnd jmp 402020 <getenv@plt-0x240>
  4021bf:	nop
  4021c0:	endbr64 
  4021c4:	push   0x19
  4021c9:	bnd jmp 402020 <getenv@plt-0x240>
  4021cf:	nop
  4021d0:	endbr64 
  4021d4:	push   0x1a
  4021d9:	bnd jmp 402020 <getenv@plt-0x240>
  4021df:	nop
  4021e0:	endbr64 
  4021e4:	push   0x1b
  4021e9:	bnd jmp 402020 <getenv@plt-0x240>
  4021ef:	nop
  4021f0:	endbr64 
  4021f4:	push   0x1c
  4021f9:	bnd jmp 402020 <getenv@plt-0x240>
  4021ff:	nop
  402200:	endbr64 
  402204:	push   0x1d
  402209:	bnd jmp 402020 <getenv@plt-0x240>
  40220f:	nop
  402210:	endbr64 
  402214:	push   0x1e
  402219:	bnd jmp 402020 <getenv@plt-0x240>
  40221f:	nop
  402220:	endbr64 
  402224:	push   0x1f
  402229:	bnd jmp 402020 <getenv@plt-0x240>
  40222f:	nop
  402230:	endbr64 
  402234:	push   0x20
  402239:	bnd jmp 402020 <getenv@plt-0x240>
  40223f:	nop
  402240:	endbr64 
  402244:	push   0x21
  402249:	bnd jmp 402020 <getenv@plt-0x240>
  40224f:	nop
  402250:	endbr64 
  402254:	push   0x22
  402259:	bnd jmp 402020 <getenv@plt-0x240>
  40225f:	nop

Disassembly of section .plt.sec:

0000000000402260 <getenv@plt>:
  402260:	endbr64 
  402264:	bnd jmp QWORD PTR [rip+0xcdad]        # 40f018 <getenv@GLIBC_2.2.5>
  40226b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402270 <free@plt>:
  402270:	endbr64 
  402274:	bnd jmp QWORD PTR [rip+0xcda5]        # 40f020 <free@GLIBC_2.2.5>
  40227b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402280 <__vfprintf_chk@plt>:
  402280:	endbr64 
  402284:	bnd jmp QWORD PTR [rip+0xcd9d]        # 40f028 <__vfprintf_chk@GLIBC_2.3.4>
  40228b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402290 <abort@plt>:
  402290:	endbr64 
  402294:	bnd jmp QWORD PTR [rip+0xcd95]        # 40f030 <abort@GLIBC_2.2.5>
  40229b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004022a0 <__errno_location@plt>:
  4022a0:	endbr64 
  4022a4:	bnd jmp QWORD PTR [rip+0xcd8d]        # 40f038 <__errno_location@GLIBC_2.2.5>
  4022ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004022b0 <strncmp@plt>:
  4022b0:	endbr64 
  4022b4:	bnd jmp QWORD PTR [rip+0xcd85]        # 40f040 <strncmp@GLIBC_2.2.5>
  4022bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004022c0 <strcpy@plt>:
  4022c0:	endbr64 
  4022c4:	bnd jmp QWORD PTR [rip+0xcd7d]        # 40f048 <strcpy@GLIBC_2.2.5>
  4022cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004022d0 <mkdir@plt>:
  4022d0:	endbr64 
  4022d4:	bnd jmp QWORD PTR [rip+0xcd75]        # 40f050 <mkdir@GLIBC_2.2.5>
  4022db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004022e0 <puts@plt>:
  4022e0:	endbr64 
  4022e4:	bnd jmp QWORD PTR [rip+0xcd6d]        # 40f058 <puts@GLIBC_2.2.5>
  4022eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004022f0 <fread@plt>:
  4022f0:	endbr64 
  4022f4:	bnd jmp QWORD PTR [rip+0xcd65]        # 40f060 <fread@GLIBC_2.2.5>
  4022fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402300 <fcntl@plt>:
  402300:	endbr64 
  402304:	bnd jmp QWORD PTR [rip+0xcd5d]        # 40f068 <fcntl@GLIBC_2.2.5>
  40230b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402310 <getpid@plt>:
  402310:	endbr64 
  402314:	bnd jmp QWORD PTR [rip+0xcd55]        # 40f070 <getpid@GLIBC_2.2.5>
  40231b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402320 <fclose@plt>:
  402320:	endbr64 
  402324:	bnd jmp QWORD PTR [rip+0xcd4d]        # 40f078 <fclose@GLIBC_2.2.5>
  40232b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402330 <strlen@plt>:
  402330:	endbr64 
  402334:	bnd jmp QWORD PTR [rip+0xcd45]        # 40f080 <strlen@GLIBC_2.2.5>
  40233b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402340 <__stack_chk_fail@plt>:
  402340:	endbr64 
  402344:	bnd jmp QWORD PTR [rip+0xcd3d]        # 40f088 <__stack_chk_fail@GLIBC_2.4>
  40234b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402350 <setbuf@plt>:
  402350:	endbr64 
  402354:	bnd jmp QWORD PTR [rip+0xcd35]        # 40f090 <setbuf@GLIBC_2.2.5>
  40235b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402360 <printf@plt>:
  402360:	endbr64 
  402364:	bnd jmp QWORD PTR [rip+0xcd2d]        # 40f098 <printf@GLIBC_2.2.5>
  40236b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402370 <__assert_fail@plt>:
  402370:	endbr64 
  402374:	bnd jmp QWORD PTR [rip+0xcd25]        # 40f0a0 <__assert_fail@GLIBC_2.2.5>
  40237b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402380 <memset@plt>:
  402380:	endbr64 
  402384:	bnd jmp QWORD PTR [rip+0xcd1d]        # 40f0a8 <memset@GLIBC_2.2.5>
  40238b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402390 <strnlen@plt>:
  402390:	endbr64 
  402394:	bnd jmp QWORD PTR [rip+0xcd15]        # 40f0b0 <strnlen@GLIBC_2.2.5>
  40239b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004023a0 <close@plt>:
  4023a0:	endbr64 
  4023a4:	bnd jmp QWORD PTR [rip+0xcd0d]        # 40f0b8 <close@GLIBC_2.2.5>
  4023ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004023b0 <fprintf@plt>:
  4023b0:	endbr64 
  4023b4:	bnd jmp QWORD PTR [rip+0xcd05]        # 40f0c0 <fprintf@GLIBC_2.2.5>
  4023bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004023c0 <ftell@plt>:
  4023c0:	endbr64 
  4023c4:	bnd jmp QWORD PTR [rip+0xccfd]        # 40f0c8 <ftell@GLIBC_2.2.5>
  4023cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004023d0 <strtol@plt>:
  4023d0:	endbr64 
  4023d4:	bnd jmp QWORD PTR [rip+0xccf5]        # 40f0d0 <strtol@GLIBC_2.2.5>
  4023db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004023e0 <memcpy@plt>:
  4023e0:	endbr64 
  4023e4:	bnd jmp QWORD PTR [rip+0xcced]        # 40f0d8 <memcpy@GLIBC_2.14>
  4023eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004023f0 <malloc@plt>:
  4023f0:	endbr64 
  4023f4:	bnd jmp QWORD PTR [rip+0xcce5]        # 40f0e0 <malloc@GLIBC_2.2.5>
  4023fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402400 <fflush@plt>:
  402400:	endbr64 
  402404:	bnd jmp QWORD PTR [rip+0xccdd]        # 40f0e8 <fflush@GLIBC_2.2.5>
  40240b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402410 <fseek@plt>:
  402410:	endbr64 
  402414:	bnd jmp QWORD PTR [rip+0xccd5]        # 40f0f0 <fseek@GLIBC_2.2.5>
  40241b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402420 <fdopen@plt>:
  402420:	endbr64 
  402424:	bnd jmp QWORD PTR [rip+0xcccd]        # 40f0f8 <fdopen@GLIBC_2.2.5>
  40242b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402430 <open@plt>:
  402430:	endbr64 
  402434:	bnd jmp QWORD PTR [rip+0xccc5]        # 40f100 <open@GLIBC_2.2.5>
  40243b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402440 <access@plt>:
  402440:	endbr64 
  402444:	bnd jmp QWORD PTR [rip+0xccbd]        # 40f108 <access@GLIBC_2.2.5>
  40244b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402450 <fopen@plt>:
  402450:	endbr64 
  402454:	bnd jmp QWORD PTR [rip+0xccb5]        # 40f110 <fopen@GLIBC_2.2.5>
  40245b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402460 <exit@plt>:
  402460:	endbr64 
  402464:	bnd jmp QWORD PTR [rip+0xccad]        # 40f118 <exit@GLIBC_2.2.5>
  40246b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402470 <fwrite@plt>:
  402470:	endbr64 
  402474:	bnd jmp QWORD PTR [rip+0xcca5]        # 40f120 <fwrite@GLIBC_2.2.5>
  40247b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402480 <__fprintf_chk@plt>:
  402480:	endbr64 
  402484:	bnd jmp QWORD PTR [rip+0xcc9d]        # 40f128 <__fprintf_chk@GLIBC_2.3.4>
  40248b:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

0000000000402490 <_start@@Base-0x10>:
  402490:	call   402290 <abort@plt>
  402495:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40249f:	nop

00000000004024a0 <_start@@Base>:
  4024a0:	endbr64 
  4024a4:	xor    ebp,ebp
  4024a6:	mov    r9,rdx
  4024a9:	pop    rsi
  4024aa:	mov    rdx,rsp
  4024ad:	and    rsp,0xfffffffffffffff0
  4024b1:	push   rax
  4024b2:	push   rsp
  4024b3:	mov    r8,0x40a0b0
  4024ba:	mov    rcx,0x40a040
  4024c1:	mov    rdi,0x405547
  4024c8:	call   QWORD PTR [rip+0xcb1a]        # 40efe8 <__libc_start_main@GLIBC_2.2.5>
  4024ce:	hlt    
  4024cf:	nop
  4024d0:	endbr64 
  4024d4:	ret    
  4024d5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4024df:	nop
  4024e0:	mov    eax,0x410790
  4024e5:	cmp    rax,0x410790
  4024eb:	je     402500 <_start@@Base+0x60>
  4024ed:	mov    eax,0x0
  4024f2:	test   rax,rax
  4024f5:	je     402500 <_start@@Base+0x60>
  4024f7:	mov    edi,0x410790
  4024fc:	jmp    rax
  4024fe:	xchg   ax,ax
  402500:	ret    
  402501:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40250c:	nop    DWORD PTR [rax+0x0]
  402510:	mov    esi,0x410790
  402515:	sub    rsi,0x410790
  40251c:	sar    rsi,0x3
  402520:	mov    rax,rsi
  402523:	shr    rax,0x3f
  402527:	add    rsi,rax
  40252a:	sar    rsi,1
  40252d:	je     402540 <_start@@Base+0xa0>
  40252f:	mov    eax,0x0
  402534:	test   rax,rax
  402537:	je     402540 <_start@@Base+0xa0>
  402539:	mov    edi,0x410790
  40253e:	jmp    rax
  402540:	ret    
  402541:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40254c:	nop    DWORD PTR [rax+0x0]
  402550:	endbr64 
  402554:	cmp    BYTE PTR [rip+0xe245],0x0        # 4107a0 <__bss_start@@Base+0x10>
  40255b:	jne    402570 <_start@@Base+0xd0>
  40255d:	push   rbp
  40255e:	mov    rbp,rsp
  402561:	call   4024e0 <_start@@Base+0x40>
  402566:	mov    BYTE PTR [rip+0xe233],0x1        # 4107a0 <__bss_start@@Base+0x10>
  40256d:	pop    rbp
  40256e:	ret    
  40256f:	nop
  402570:	ret    
  402571:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40257c:	nop    DWORD PTR [rax+0x0]
  402580:	endbr64 
  402584:	jmp    402510 <_start@@Base+0x70>

0000000000402586 <next@@Base>:
  402586:	endbr64 
  40258a:	push   rbp
  40258b:	mov    rbp,rsp
  40258e:	sub    rsp,0x10
  402592:	mov    QWORD PTR [rbp-0x8],rdi
  402596:	mov    rax,QWORD PTR [rip+0xea43]        # 410fe0 <__bss_start@@Base+0x850>
  40259d:	inc    rax
  4025a0:	mov    QWORD PTR [rip+0xea39],rax        # 410fe0 <__bss_start@@Base+0x850>
  4025a7:	mov    rdx,QWORD PTR [rbp-0x8]
  4025ab:	mov    rax,0x411aa0
  4025b2:	mov    QWORD PTR [rax],rdx
  4025b5:	mov    rax,0x411aa0
  4025bc:	mov    eax,DWORD PTR [rax+0x198]
  4025c2:	cmp    eax,0x31
  4025c5:	ja     402606 <next@@Base+0x80>
  4025c7:	mov    rax,QWORD PTR [rip+0xea1a]        # 410fe8 <__bss_start@@Base+0x858>
  4025ce:	inc    rax
  4025d1:	mov    QWORD PTR [rip+0xea10],rax        # 410fe8 <__bss_start@@Base+0x858>
  4025d8:	mov    rax,0x411aa0
  4025df:	mov    eax,DWORD PTR [rax+0x198]
  4025e5:	mov    eax,eax
  4025e7:	lea    rdx,[rax*8+0x0]
  4025ef:	mov    rax,0x411aa0
  4025f6:	add    rax,rdx
  4025f9:	lea    rdx,[rax+0x8]
  4025fd:	mov    rax,QWORD PTR [rbp-0x8]
  402601:	mov    QWORD PTR [rdx],rax
  402604:	jmp    402623 <next@@Base+0x9d>
  402606:	mov    rax,0x411aa0
  40260d:	mov    eax,DWORD PTR [rax+0x1a0]
  402613:	lea    edx,[rax+0x1]
  402616:	mov    rax,0x411aa0
  40261d:	mov    DWORD PTR [rax+0x1a0],edx
  402623:	mov    rax,0x411aa0
  40262a:	mov    eax,DWORD PTR [rax+0x198]
  402630:	lea    edx,[rax+0x1]
  402633:	mov    rax,0x411aa0
  40263a:	mov    DWORD PTR [rax+0x198],edx
  402640:	mov    rax,0x411c80
  402647:	mov    eax,DWORD PTR [rax+0x190]
  40264d:	cmp    eax,0x31
  402650:	ja     402694 <next@@Base+0x10e>
  402652:	mov    rax,QWORD PTR [rip+0xe997]        # 410ff0 <__bss_start@@Base+0x860>
  402659:	inc    rax
  40265c:	mov    QWORD PTR [rip+0xe98d],rax        # 410ff0 <__bss_start@@Base+0x860>
  402663:	mov    rax,0x411c80
  40266a:	mov    eax,DWORD PTR [rax+0x190]
  402670:	lea    ecx,[rax+0x1]
  402673:	mov    rdx,0x411c80
  40267a:	mov    DWORD PTR [rdx+0x190],ecx
  402680:	mov    rdx,0x411c80
  402687:	mov    ecx,eax
  402689:	mov    rax,0x402586
  402690:	mov    QWORD PTR [rdx+rcx*8],rax
  402694:	mov    rax,0x411aa0
  40269b:	mov    rax,QWORD PTR [rax+0x1c0]
  4026a2:	test   rax,rax
  4026a5:	je     4026e5 <next@@Base+0x15f>
  4026a7:	mov    rax,QWORD PTR [rip+0xe94a]        # 410ff8 <__bss_start@@Base+0x868>
  4026ae:	inc    rax
  4026b1:	mov    QWORD PTR [rip+0xe940],rax        # 410ff8 <__bss_start@@Base+0x868>
  4026b8:	mov    rax,0x411aa0
  4026bf:	mov    rax,QWORD PTR [rax+0x1c0]
  4026c6:	mov    rdx,QWORD PTR [rbp-0x8]
  4026ca:	mov    rdi,rdx
  4026cd:	call   rax
  4026cf:	mov    rdx,QWORD PTR [rip+0xe92a]        # 411000 <__bss_start@@Base+0x870>
  4026d6:	inc    rdx
  4026d9:	mov    QWORD PTR [rip+0xe920],rdx        # 411000 <__bss_start@@Base+0x870>
  4026e0:	jmp    4027ae <next@@Base+0x228>
  4026e5:	mov    rax,0x411aa0
  4026ec:	mov    eax,DWORD PTR [rax+0x1b0]
  4026f2:	test   eax,eax
  4026f4:	je     4027a0 <next@@Base+0x21a>
  4026fa:	mov    rax,QWORD PTR [rip+0xe907]        # 411008 <__bss_start@@Base+0x878>
  402701:	inc    rax
  402704:	mov    QWORD PTR [rip+0xe8fd],rax        # 411008 <__bss_start@@Base+0x878>
  40270b:	mov    rax,0x411aa0
  402712:	mov    edx,DWORD PTR [rax+0x1b4]
  402718:	mov    rax,0x411aa0
  40271f:	mov    eax,DWORD PTR [rax+0x1b0]
  402725:	cmp    edx,eax
  402727:	jge    402773 <next@@Base+0x1ed>
  402729:	mov    rax,QWORD PTR [rip+0xe8e0]        # 411010 <__bss_start@@Base+0x880>
  402730:	inc    rax
  402733:	mov    QWORD PTR [rip+0xe8d6],rax        # 411010 <__bss_start@@Base+0x880>
  40273a:	mov    rax,0x411aa0
  402741:	mov    rsi,QWORD PTR [rax+0x1b8]
  402748:	mov    rax,0x411aa0
  40274f:	mov    eax,DWORD PTR [rax+0x1b4]
  402755:	lea    ecx,[rax+0x1]
  402758:	mov    rdx,0x411aa0
  40275f:	mov    DWORD PTR [rdx+0x1b4],ecx
  402765:	cdqe   
  402767:	shl    rax,0x3
  40276b:	add    rax,rsi
  40276e:	mov    rax,QWORD PTR [rax]
  402771:	jmp    4027ae <next@@Base+0x228>
  402773:	mov    rax,0x411aa0
  40277a:	mov    rdx,QWORD PTR [rax+0x1b8]
  402781:	mov    rax,0x411aa0
  402788:	mov    eax,DWORD PTR [rax+0x1b0]
  40278e:	cdqe   
  402790:	shl    rax,0x3
  402794:	sub    rax,0x8
  402798:	add    rax,rdx
  40279b:	mov    rax,QWORD PTR [rax]
  40279e:	jmp    4027ae <next@@Base+0x228>
  4027a0:	mov    rax,0x411aa0
  4027a7:	mov    rax,QWORD PTR [rax+0x1a8]
  4027ae:	leave  
  4027af:	ret    

00000000004027b0 <next_reset@@Base>:
  4027b0:	endbr64 
  4027b4:	push   rbp
  4027b5:	mov    rbp,rsp
  4027b8:	mov    rax,QWORD PTR [rip+0xe809]        # 410fc8 <__bss_start@@Base+0x838>
  4027bf:	inc    rax
  4027c2:	mov    QWORD PTR [rip+0xe7ff],rax        # 410fc8 <__bss_start@@Base+0x838>
  4027c9:	mov    edx,0x1c8
  4027ce:	mov    esi,0x0
  4027d3:	mov    rax,0x411aa0
  4027da:	mov    rdi,rax
  4027dd:	call   402380 <memset@plt>
  4027e2:	mov    rax,0x411aa0
  4027e9:	mov    DWORD PTR [rax+0x19c],0x32
  4027f3:	nop
  4027f4:	pop    rbp
  4027f5:	ret    

00000000004027f6 <push_back@@Base>:
  4027f6:	endbr64 
  4027fa:	push   rbp
  4027fb:	mov    rbp,rsp
  4027fe:	sub    rsp,0x10
  402802:	mov    QWORD PTR [rbp-0x8],rdi
  402806:	mov    QWORD PTR [rbp-0x10],rsi
  40280a:	mov    rax,QWORD PTR [rip+0xe78f]        # 410fa0 <__bss_start@@Base+0x810>
  402811:	inc    rax
  402814:	mov    QWORD PTR [rip+0xe785],rax        # 410fa0 <__bss_start@@Base+0x810>
  40281b:	mov    rdx,QWORD PTR [rbp-0x8]
  40281f:	mov    rax,0x411740
  402826:	mov    QWORD PTR [rax],rdx
  402829:	mov    rdx,QWORD PTR [rbp-0x10]
  40282d:	mov    rax,0x411740
  402834:	mov    QWORD PTR [rax+0x198],rdx
  40283b:	mov    rax,0x411740
  402842:	mov    eax,DWORD PTR [rax+0x330]
  402848:	cmp    eax,0x31
  40284b:	ja     4028b8 <push_back@@Base+0xc2>
  40284d:	mov    rax,QWORD PTR [rip+0xe754]        # 410fa8 <__bss_start@@Base+0x818>
  402854:	inc    rax
  402857:	mov    QWORD PTR [rip+0xe74a],rax        # 410fa8 <__bss_start@@Base+0x818>
  40285e:	mov    rax,0x411740
  402865:	mov    eax,DWORD PTR [rax+0x330]
  40286b:	mov    eax,eax
  40286d:	lea    rdx,[rax*8+0x0]
  402875:	mov    rax,0x411740
  40287c:	add    rax,rdx
  40287f:	lea    rdx,[rax+0x8]
  402883:	mov    rax,QWORD PTR [rbp-0x8]
  402887:	mov    QWORD PTR [rdx],rax
  40288a:	mov    rax,0x411740
  402891:	mov    eax,DWORD PTR [rax+0x330]
  402897:	mov    eax,eax
  402899:	add    rax,0x34
  40289d:	lea    rdx,[rax*8+0x0]
  4028a5:	mov    rax,0x411740
  4028ac:	add    rdx,rax
  4028af:	mov    rax,QWORD PTR [rbp-0x10]
  4028b3:	mov    QWORD PTR [rdx],rax
  4028b6:	jmp    4028d5 <push_back@@Base+0xdf>
  4028b8:	mov    rax,0x411740
  4028bf:	mov    eax,DWORD PTR [rax+0x338]
  4028c5:	lea    edx,[rax+0x1]
  4028c8:	mov    rax,0x411740
  4028cf:	mov    DWORD PTR [rax+0x338],edx
  4028d5:	mov    rax,0x411740
  4028dc:	mov    eax,DWORD PTR [rax+0x330]
  4028e2:	lea    edx,[rax+0x1]
  4028e5:	mov    rax,0x411740
  4028ec:	mov    DWORD PTR [rax+0x330],edx
  4028f2:	mov    rax,0x411c80
  4028f9:	mov    eax,DWORD PTR [rax+0x190]
  4028ff:	cmp    eax,0x31
  402902:	ja     402946 <push_back@@Base+0x150>
  402904:	mov    rax,QWORD PTR [rip+0xe6a5]        # 410fb0 <__bss_start@@Base+0x820>
  40290b:	inc    rax
  40290e:	mov    QWORD PTR [rip+0xe69b],rax        # 410fb0 <__bss_start@@Base+0x820>
  402915:	mov    rax,0x411c80
  40291c:	mov    eax,DWORD PTR [rax+0x190]
  402922:	lea    ecx,[rax+0x1]
  402925:	mov    rdx,0x411c80
  40292c:	mov    DWORD PTR [rdx+0x190],ecx
  402932:	mov    rdx,0x411c80
  402939:	mov    ecx,eax
  40293b:	mov    rax,0x4027f6
  402942:	mov    QWORD PTR [rdx+rcx*8],rax
  402946:	mov    rax,0x411740
  40294d:	mov    rax,QWORD PTR [rax+0x340]
  402954:	test   rax,rax
  402957:	je     402999 <push_back@@Base+0x1a3>
  402959:	mov    rax,QWORD PTR [rip+0xe658]        # 410fb8 <__bss_start@@Base+0x828>
  402960:	inc    rax
  402963:	mov    QWORD PTR [rip+0xe64e],rax        # 410fb8 <__bss_start@@Base+0x828>
  40296a:	mov    rax,0x411740
  402971:	mov    rax,QWORD PTR [rax+0x340]
  402978:	mov    rcx,QWORD PTR [rbp-0x10]
  40297c:	mov    rdx,QWORD PTR [rbp-0x8]
  402980:	mov    rsi,rcx
  402983:	mov    rdi,rdx
  402986:	call   rax
  402988:	mov    rax,QWORD PTR [rip+0xe631]        # 410fc0 <__bss_start@@Base+0x830>
  40298f:	inc    rax
  402992:	mov    QWORD PTR [rip+0xe627],rax        # 410fc0 <__bss_start@@Base+0x830>
  402999:	nop
  40299a:	leave  
  40299b:	ret    

000000000040299c <push_back_reset@@Base>:
  40299c:	endbr64 
  4029a0:	push   rbp
  4029a1:	mov    rbp,rsp
  4029a4:	mov    rax,QWORD PTR [rip+0xe5dd]        # 410f88 <__bss_start@@Base+0x7f8>
  4029ab:	inc    rax
  4029ae:	mov    QWORD PTR [rip+0xe5d3],rax        # 410f88 <__bss_start@@Base+0x7f8>
  4029b5:	mov    edx,0x348
  4029ba:	mov    esi,0x0
  4029bf:	mov    rax,0x411740
  4029c6:	mov    rdi,rax
  4029c9:	call   402380 <memset@plt>
  4029ce:	mov    rax,0x411740
  4029d5:	mov    DWORD PTR [rax+0x334],0x32
  4029df:	nop
  4029e0:	pop    rbp
  4029e1:	ret    

00000000004029e2 <setup@@Base>:
  4029e2:	endbr64 
  4029e6:	push   rbp
  4029e7:	mov    rbp,rsp
  4029ea:	mov    rax,QWORD PTR [rip+0xe57f]        # 410f70 <__bss_start@@Base+0x7e0>
  4029f1:	inc    rax
  4029f4:	mov    QWORD PTR [rip+0xe575],rax        # 410f70 <__bss_start@@Base+0x7e0>
  4029fb:	mov    eax,0x0
  402a00:	call   4027b0 <next_reset@@Base>
  402a05:	mov    rax,QWORD PTR [rip+0xe56c]        # 410f78 <__bss_start@@Base+0x7e8>
  402a0c:	inc    rax
  402a0f:	mov    QWORD PTR [rip+0xe562],rax        # 410f78 <__bss_start@@Base+0x7e8>
  402a16:	mov    eax,0x0
  402a1b:	call   40299c <push_back_reset@@Base>
  402a20:	mov    rax,QWORD PTR [rip+0xe559]        # 410f80 <__bss_start@@Base+0x7f0>
  402a27:	inc    rax
  402a2a:	mov    QWORD PTR [rip+0xe54f],rax        # 410f80 <__bss_start@@Base+0x7f0>
  402a31:	nop
  402a32:	pop    rbp
  402a33:	ret    

0000000000402a34 <no_int_as_first_stuff@@Base>:
  402a34:	endbr64 
  402a38:	push   rbp
  402a39:	mov    rbp,rsp
  402a3c:	sub    rsp,0x40
  402a40:	mov    rax,QWORD PTR fs:0x28
  402a49:	mov    QWORD PTR [rbp-0x8],rax
  402a4d:	xor    eax,eax
  402a4f:	mov    rax,QWORD PTR [rip+0xe4ea]        # 410f40 <__bss_start@@Base+0x7b0>
  402a56:	inc    rax
  402a59:	mov    QWORD PTR [rip+0xe4e0],rax        # 410f40 <__bss_start@@Base+0x7b0>
  402a60:	lea    rdx,[rbp-0x20]
  402a64:	lea    rax,[rbp-0x38]
  402a68:	mov    rsi,rdx
  402a6b:	mov    rdi,rax
  402a6e:	call   406cb8 <init_grammar@@Base>
  402a73:	mov    rax,QWORD PTR [rip+0xe4ce]        # 410f48 <__bss_start@@Base+0x7b8>
  402a7a:	inc    rax
  402a7d:	mov    QWORD PTR [rip+0xe4c4],rax        # 410f48 <__bss_start@@Base+0x7b8>
  402a84:	mov    QWORD PTR [rbp-0x30],0x0
  402a8c:	mov    edi,0x4
  402a91:	call   4023f0 <malloc@plt>
  402a96:	mov    QWORD PTR [rbp-0x28],rax
  402a9a:	mov    rax,QWORD PTR [rbp-0x28]
  402a9e:	mov    rdi,rax
  402aa1:	call   405d83 <init_token_opar@@Base>
  402aa6:	mov    rax,QWORD PTR [rip+0xe4a3]        # 410f50 <__bss_start@@Base+0x7c0>
  402aad:	inc    rax
  402ab0:	mov    QWORD PTR [rip+0xe499],rax        # 410f50 <__bss_start@@Base+0x7c0>
  402ab7:	mov    rax,0x411aa0
  402abe:	mov    rdx,QWORD PTR [rbp-0x28]
  402ac2:	mov    QWORD PTR [rax+0x1a8],rdx
  402ac9:	lea    rax,[rbp-0x38]
  402acd:	mov    rdi,rax
  402ad0:	call   406d4d <read_function_ast_node@@Base>
  402ad5:	mov    QWORD PTR [rbp-0x30],rax
  402ad9:	mov    rax,0x411aa0
  402ae0:	mov    eax,DWORD PTR [rax+0x198]
  402ae6:	cmp    eax,0x1
  402ae9:	je     402b1b <no_int_as_first_stuff@@Base+0xe7>
  402aeb:	mov    rax,QWORD PTR [rip+0xe466]        # 410f58 <__bss_start@@Base+0x7c8>
  402af2:	inc    rax
  402af5:	mov    QWORD PTR [rip+0xe45c],rax        # 410f58 <__bss_start@@Base+0x7c8>
  402afc:	lea    rcx,[rip+0x89ad]        # 40b4b0 <_IO_stdin_used@@Base+0x4b0>
  402b03:	mov    edx,0x29
  402b08:	lea    rsi,[rip+0x8511]        # 40b020 <_IO_stdin_used@@Base+0x20>
  402b0f:	lea    rdi,[rip+0x8568]        # 40b07e <_IO_stdin_used@@Base+0x7e>
  402b16:	call   402370 <__assert_fail@plt>
  402b1b:	cmp    QWORD PTR [rbp-0x30],0x0
  402b20:	je     402b52 <no_int_as_first_stuff@@Base+0x11e>
  402b22:	mov    rax,QWORD PTR [rip+0xe43f]        # 410f68 <__bss_start@@Base+0x7d8>
  402b29:	inc    rax
  402b2c:	mov    QWORD PTR [rip+0xe435],rax        # 410f68 <__bss_start@@Base+0x7d8>
  402b33:	lea    rcx,[rip+0x8976]        # 40b4b0 <_IO_stdin_used@@Base+0x4b0>
  402b3a:	mov    edx,0x2a
  402b3f:	lea    rsi,[rip+0x84da]        # 40b020 <_IO_stdin_used@@Base+0x20>
  402b46:	lea    rdi,[rip+0x854b]        # 40b098 <_IO_stdin_used@@Base+0x98>
  402b4d:	call   402370 <__assert_fail@plt>
  402b52:	mov    rax,QWORD PTR [rip+0xe407]        # 410f60 <__bss_start@@Base+0x7d0>
  402b59:	inc    rax
  402b5c:	mov    QWORD PTR [rip+0xe3fd],rax        # 410f60 <__bss_start@@Base+0x7d0>
  402b63:	nop
  402b64:	mov    rax,QWORD PTR [rbp-0x8]
  402b68:	xor    rax,QWORD PTR fs:0x28
  402b71:	je     402b78 <no_int_as_first_stuff@@Base+0x144>
  402b73:	call   402340 <__stack_chk_fail@plt>
  402b78:	leave  
  402b79:	ret    

0000000000402b7a <int_but_not_followed_by_function@@Base>:
  402b7a:	endbr64 
  402b7e:	push   rbp
  402b7f:	mov    rbp,rsp
  402b82:	push   rbx
  402b83:	sub    rsp,0x48
  402b87:	mov    rax,QWORD PTR fs:0x28
  402b90:	mov    QWORD PTR [rbp-0x18],rax
  402b94:	xor    eax,eax
  402b96:	mov    rax,QWORD PTR [rip+0xe363]        # 410f00 <__bss_start@@Base+0x770>
  402b9d:	inc    rax
  402ba0:	mov    QWORD PTR [rip+0xe359],rax        # 410f00 <__bss_start@@Base+0x770>
  402ba7:	mov    QWORD PTR [rbp-0x40],0x0
  402baf:	lea    rdx,[rbp-0x30]
  402bb3:	lea    rax,[rbp-0x48]
  402bb7:	mov    rsi,rdx
  402bba:	mov    rdi,rax
  402bbd:	call   406cb8 <init_grammar@@Base>
  402bc2:	mov    rax,QWORD PTR [rip+0xe33f]        # 410f08 <__bss_start@@Base+0x778>
  402bc9:	inc    rax
  402bcc:	mov    QWORD PTR [rip+0xe335],rax        # 410f08 <__bss_start@@Base+0x778>
  402bd3:	mov    edi,0x10
  402bd8:	call   4023f0 <malloc@plt>
  402bdd:	mov    QWORD PTR [rbp-0x38],rax
  402be1:	mov    edi,0x4
  402be6:	call   4023f0 <malloc@plt>
  402beb:	mov    rdx,rax
  402bee:	mov    rax,QWORD PTR [rbp-0x38]
  402bf2:	mov    QWORD PTR [rax],rdx
  402bf5:	mov    rax,QWORD PTR [rbp-0x38]
  402bf9:	mov    rax,QWORD PTR [rax]
  402bfc:	mov    rdi,rax
  402bff:	call   405ce8 <init_token_int_type@@Base>
  402c04:	mov    rax,QWORD PTR [rip+0xe305]        # 410f10 <__bss_start@@Base+0x780>
  402c0b:	inc    rax
  402c0e:	mov    QWORD PTR [rip+0xe2fb],rax        # 410f10 <__bss_start@@Base+0x780>
  402c15:	mov    rax,QWORD PTR [rbp-0x38]
  402c19:	lea    rbx,[rax+0x8]
  402c1d:	mov    edi,0x4
  402c22:	call   4023f0 <malloc@plt>
  402c27:	mov    QWORD PTR [rbx],rax
  402c2a:	mov    rax,QWORD PTR [rbp-0x38]
  402c2e:	add    rax,0x8
  402c32:	mov    rax,QWORD PTR [rax]
  402c35:	mov    rdi,rax
  402c38:	call   405d83 <init_token_opar@@Base>
  402c3d:	mov    rax,QWORD PTR [rip+0xe2d4]        # 410f18 <__bss_start@@Base+0x788>
  402c44:	inc    rax
  402c47:	mov    QWORD PTR [rip+0xe2ca],rax        # 410f18 <__bss_start@@Base+0x788>
  402c4e:	mov    rax,0x411aa0
  402c55:	mov    rdx,QWORD PTR [rbp-0x38]
  402c59:	mov    QWORD PTR [rax+0x1b8],rdx
  402c60:	mov    rax,0x411aa0
  402c67:	mov    DWORD PTR [rax+0x1b0],0x2
  402c71:	lea    rax,[rbp-0x48]
  402c75:	mov    rdi,rax
  402c78:	call   406d4d <read_function_ast_node@@Base>
  402c7d:	mov    QWORD PTR [rbp-0x40],rax
  402c81:	mov    rax,0x411aa0
  402c88:	mov    eax,DWORD PTR [rax+0x198]
  402c8e:	cmp    eax,0x2
  402c91:	je     402cc3 <int_but_not_followed_by_function@@Base+0x149>
  402c93:	mov    rax,QWORD PTR [rip+0xe286]        # 410f20 <__bss_start@@Base+0x790>
  402c9a:	inc    rax
  402c9d:	mov    QWORD PTR [rip+0xe27c],rax        # 410f20 <__bss_start@@Base+0x790>
  402ca4:	lea    rcx,[rip+0x8835]        # 40b4e0 <_IO_stdin_used@@Base+0x4e0>
  402cab:	mov    edx,0x43
  402cb0:	lea    rsi,[rip+0x8369]        # 40b020 <_IO_stdin_used@@Base+0x20>
  402cb7:	lea    rdi,[rip+0x83e6]        # 40b0a4 <_IO_stdin_used@@Base+0xa4>
  402cbe:	call   402370 <__assert_fail@plt>
  402cc3:	cmp    QWORD PTR [rbp-0x40],0x0
  402cc8:	je     402cfa <int_but_not_followed_by_function@@Base+0x180>
  402cca:	mov    rax,QWORD PTR [rip+0xe25f]        # 410f30 <__bss_start@@Base+0x7a0>
  402cd1:	inc    rax
  402cd4:	mov    QWORD PTR [rip+0xe255],rax        # 410f30 <__bss_start@@Base+0x7a0>
  402cdb:	lea    rcx,[rip+0x87fe]        # 40b4e0 <_IO_stdin_used@@Base+0x4e0>
  402ce2:	mov    edx,0x44
  402ce7:	lea    rsi,[rip+0x8332]        # 40b020 <_IO_stdin_used@@Base+0x20>
  402cee:	lea    rdi,[rip+0x83a3]        # 40b098 <_IO_stdin_used@@Base+0x98>
  402cf5:	call   402370 <__assert_fail@plt>
  402cfa:	mov    rax,QWORD PTR [rip+0xe227]        # 410f28 <__bss_start@@Base+0x798>
  402d01:	inc    rax
  402d04:	mov    QWORD PTR [rip+0xe21d],rax        # 410f28 <__bss_start@@Base+0x798>
  402d0b:	nop
  402d0c:	mov    rax,QWORD PTR [rbp-0x18]
  402d10:	xor    rax,QWORD PTR fs:0x28
  402d19:	je     402d20 <int_but_not_followed_by_function@@Base+0x1a6>
  402d1b:	call   402340 <__stack_chk_fail@plt>
  402d20:	add    rsp,0x48
  402d24:	pop    rbx
  402d25:	pop    rbp
  402d26:	ret    

0000000000402d27 <boolean_expression_is_read_properly@@Base>:
  402d27:	endbr64 
  402d2b:	push   rbp
  402d2c:	mov    rbp,rsp
  402d2f:	push   rbx
  402d30:	sub    rsp,0x58
  402d34:	mov    rax,QWORD PTR fs:0x28
  402d3d:	mov    QWORD PTR [rbp-0x18],rax
  402d41:	xor    eax,eax
  402d43:	mov    rax,QWORD PTR [rip+0xe156]        # 410ea0 <__bss_start@@Base+0x710>
  402d4a:	inc    rax
  402d4d:	mov    QWORD PTR [rip+0xe14c],rax        # 410ea0 <__bss_start@@Base+0x710>
  402d54:	mov    QWORD PTR [rbp-0x50],0x0
  402d5c:	mov    QWORD PTR [rbp-0x48],0x0
  402d64:	mov    edi,0x3
  402d69:	call   4023f0 <malloc@plt>
  402d6e:	mov    QWORD PTR [rbp-0x40],rax
  402d72:	mov    rax,QWORD PTR [rbp-0x40]
  402d76:	mov    BYTE PTR [rax],0x21
  402d79:	mov    rax,QWORD PTR [rbp-0x40]
  402d7d:	inc    rax
  402d80:	mov    BYTE PTR [rax],0x3d
  402d83:	mov    rax,QWORD PTR [rbp-0x40]
  402d87:	add    rax,0x2
  402d8b:	mov    BYTE PTR [rax],0x0
  402d8e:	lea    rdx,[rbp-0x30]
  402d92:	lea    rax,[rbp-0x58]
  402d96:	mov    rsi,rdx
  402d99:	mov    rdi,rax
  402d9c:	call   406cb8 <init_grammar@@Base>
  402da1:	mov    rax,QWORD PTR [rip+0xe100]        # 410ea8 <__bss_start@@Base+0x718>
  402da8:	inc    rax
  402dab:	mov    QWORD PTR [rip+0xe0f6],rax        # 410ea8 <__bss_start@@Base+0x718>
  402db2:	mov    edi,0x28
  402db7:	call   4023f0 <malloc@plt>
  402dbc:	mov    QWORD PTR [rbp-0x38],rax
  402dc0:	mov    edi,0x8
  402dc5:	call   4023f0 <malloc@plt>
  402dca:	mov    rdx,rax
  402dcd:	mov    rax,QWORD PTR [rbp-0x38]
  402dd1:	mov    QWORD PTR [rax],rdx
  402dd4:	mov    rax,QWORD PTR [rbp-0x38]
  402dd8:	mov    rax,QWORD PTR [rax]
  402ddb:	mov    esi,0x2
  402de0:	mov    rdi,rax
  402de3:	call   405d12 <init_token_int_value@@Base>
  402de8:	mov    rax,QWORD PTR [rip+0xe0c1]        # 410eb0 <__bss_start@@Base+0x720>
  402def:	inc    rax
  402df2:	mov    QWORD PTR [rip+0xe0b7],rax        # 410eb0 <__bss_start@@Base+0x720>
  402df9:	mov    rax,QWORD PTR [rbp-0x38]
  402dfd:	lea    rbx,[rax+0x8]
  402e01:	mov    edi,0x8
  402e06:	call   4023f0 <malloc@plt>
  402e0b:	mov    QWORD PTR [rbx],rax
  402e0e:	mov    rax,QWORD PTR [rbp-0x38]
  402e12:	add    rax,0x8
  402e16:	mov    rax,QWORD PTR [rax]
  402e19:	mov    esi,0x2
  402e1e:	mov    rdi,rax
  402e21:	call   405d12 <init_token_int_value@@Base>
  402e26:	mov    rax,QWORD PTR [rip+0xe08b]        # 410eb8 <__bss_start@@Base+0x728>
  402e2d:	inc    rax
  402e30:	mov    QWORD PTR [rip+0xe081],rax        # 410eb8 <__bss_start@@Base+0x728>
  402e37:	mov    rax,QWORD PTR [rbp-0x38]
  402e3b:	lea    rbx,[rax+0x10]
  402e3f:	mov    edi,0x10
  402e44:	call   4023f0 <malloc@plt>
  402e49:	mov    QWORD PTR [rbx],rax
  402e4c:	mov    rax,QWORD PTR [rbp-0x38]
  402e50:	add    rax,0x10
  402e54:	mov    rax,QWORD PTR [rax]
  402e57:	mov    rdx,QWORD PTR [rbp-0x40]
  402e5b:	mov    rsi,rdx
  402e5e:	mov    rdi,rax
  402e61:	call   405efd <init_token_boolean_op@@Base>
  402e66:	mov    rax,QWORD PTR [rip+0xe053]        # 410ec0 <__bss_start@@Base+0x730>
  402e6d:	inc    rax
  402e70:	mov    QWORD PTR [rip+0xe049],rax        # 410ec0 <__bss_start@@Base+0x730>
  402e77:	mov    rax,QWORD PTR [rbp-0x38]
  402e7b:	lea    rbx,[rax+0x18]
  402e7f:	mov    edi,0x8
  402e84:	call   4023f0 <malloc@plt>
  402e89:	mov    QWORD PTR [rbx],rax
  402e8c:	mov    rax,QWORD PTR [rbp-0x38]
  402e90:	add    rax,0x18
  402e94:	mov    rax,QWORD PTR [rax]
  402e97:	mov    esi,0x1
  402e9c:	mov    rdi,rax
  402e9f:	call   405d12 <init_token_int_value@@Base>
  402ea4:	mov    rax,QWORD PTR [rip+0xe01d]        # 410ec8 <__bss_start@@Base+0x738>
  402eab:	inc    rax
  402eae:	mov    QWORD PTR [rip+0xe013],rax        # 410ec8 <__bss_start@@Base+0x738>
  402eb5:	mov    rax,QWORD PTR [rbp-0x38]
  402eb9:	lea    rbx,[rax+0x20]
  402ebd:	mov    edi,0x4
  402ec2:	call   4023f0 <malloc@plt>
  402ec7:	mov    QWORD PTR [rbx],rax
  402eca:	mov    rax,QWORD PTR [rbp-0x38]
  402ece:	add    rax,0x20
  402ed2:	mov    rax,QWORD PTR [rax]
  402ed5:	mov    rdi,rax
  402ed8:	call   405dad <init_token_cpar@@Base>
  402edd:	mov    rax,QWORD PTR [rip+0xdfec]        # 410ed0 <__bss_start@@Base+0x740>
  402ee4:	inc    rax
  402ee7:	mov    QWORD PTR [rip+0xdfe2],rax        # 410ed0 <__bss_start@@Base+0x740>
  402eee:	mov    rax,0x411aa0
  402ef5:	mov    rdx,QWORD PTR [rbp-0x38]
  402ef9:	mov    QWORD PTR [rax+0x1b8],rdx
  402f00:	mov    rax,0x411aa0
  402f07:	mov    DWORD PTR [rax+0x1b0],0x5
  402f11:	lea    rax,[rbp-0x58]
  402f15:	mov    rdi,rax
  402f18:	call   40754a <read_boolean_expression@@Base>
  402f1d:	mov    QWORD PTR [rbp-0x50],rax
  402f21:	mov    rax,0x411aa0
  402f28:	mov    eax,DWORD PTR [rax+0x198]
  402f2e:	cmp    eax,0x5
  402f31:	je     402f63 <boolean_expression_is_read_properly@@Base+0x23c>
  402f33:	mov    rax,QWORD PTR [rip+0xdf9e]        # 410ed8 <__bss_start@@Base+0x748>
  402f3a:	inc    rax
  402f3d:	mov    QWORD PTR [rip+0xdf94],rax        # 410ed8 <__bss_start@@Base+0x748>
  402f44:	lea    rcx,[rip+0x85d5]        # 40b520 <_IO_stdin_used@@Base+0x520>
  402f4b:	mov    edx,0x69
  402f50:	lea    rsi,[rip+0x80c9]        # 40b020 <_IO_stdin_used@@Base+0x20>
  402f57:	lea    rdi,[rip+0x8160]        # 40b0be <_IO_stdin_used@@Base+0xbe>
  402f5e:	call   402370 <__assert_fail@plt>
  402f63:	mov    rax,0x411740
  402f6a:	mov    eax,DWORD PTR [rax+0x330]
  402f70:	cmp    eax,0x1
  402f73:	je     402fa5 <boolean_expression_is_read_properly@@Base+0x27e>
  402f75:	mov    rax,QWORD PTR [rip+0xdf6c]        # 410ee8 <__bss_start@@Base+0x758>
  402f7c:	inc    rax
  402f7f:	mov    QWORD PTR [rip+0xdf62],rax        # 410ee8 <__bss_start@@Base+0x758>
  402f86:	lea    rcx,[rip+0x8593]        # 40b520 <_IO_stdin_used@@Base+0x520>
  402f8d:	mov    edx,0x6a
  402f92:	lea    rsi,[rip+0x8087]        # 40b020 <_IO_stdin_used@@Base+0x20>
  402f99:	lea    rdi,[rip+0x8138]        # 40b0d8 <_IO_stdin_used@@Base+0xd8>
  402fa0:	call   402370 <__assert_fail@plt>
  402fa5:	mov    rax,QWORD PTR [rip+0xdf34]        # 410ee0 <__bss_start@@Base+0x750>
  402fac:	inc    rax
  402faf:	mov    QWORD PTR [rip+0xdf2a],rax        # 410ee0 <__bss_start@@Base+0x750>
  402fb6:	mov    rax,QWORD PTR [rbp-0x50]
  402fba:	mov    eax,DWORD PTR [rax]
  402fbc:	cmp    eax,0x5
  402fbf:	je     402ff1 <boolean_expression_is_read_properly@@Base+0x2ca>
  402fc1:	mov    rax,QWORD PTR [rip+0xdf28]        # 410ef0 <__bss_start@@Base+0x760>
  402fc8:	inc    rax
  402fcb:	mov    QWORD PTR [rip+0xdf1e],rax        # 410ef0 <__bss_start@@Base+0x760>
  402fd2:	lea    rcx,[rip+0x8547]        # 40b520 <_IO_stdin_used@@Base+0x520>
  402fd9:	mov    edx,0x6b
  402fde:	lea    rsi,[rip+0x803b]        # 40b020 <_IO_stdin_used@@Base+0x20>
  402fe5:	lea    rdi,[rip+0x810c]        # 40b0f8 <_IO_stdin_used@@Base+0xf8>
  402fec:	call   402370 <__assert_fail@plt>
  402ff1:	nop
  402ff2:	mov    rax,QWORD PTR [rbp-0x18]
  402ff6:	xor    rax,QWORD PTR fs:0x28
  402fff:	je     403006 <boolean_expression_is_read_properly@@Base+0x2df>
  403001:	call   402340 <__stack_chk_fail@plt>
  403006:	add    rsp,0x58
  40300a:	pop    rbx
  40300b:	pop    rbp
  40300c:	ret    

000000000040300d <boolean_expression_complex@@Base>:
  40300d:	endbr64 
  403011:	push   rbp
  403012:	mov    rbp,rsp
  403015:	push   rbx
  403016:	sub    rsp,0x68
  40301a:	mov    rax,QWORD PTR fs:0x28
  403023:	mov    QWORD PTR [rbp-0x18],rax
  403027:	xor    eax,eax
  403029:	mov    rax,QWORD PTR [rip+0xddf0]        # 410e20 <__bss_start@@Base+0x690>
  403030:	inc    rax
  403033:	mov    QWORD PTR [rip+0xdde6],rax        # 410e20 <__bss_start@@Base+0x690>
  40303a:	mov    QWORD PTR [rbp-0x60],0x0
  403042:	mov    QWORD PTR [rbp-0x58],0x0
  40304a:	mov    edi,0x3
  40304f:	call   4023f0 <malloc@plt>
  403054:	mov    QWORD PTR [rbp-0x50],rax
  403058:	mov    edi,0x3
  40305d:	call   4023f0 <malloc@plt>
  403062:	mov    QWORD PTR [rbp-0x48],rax
  403066:	mov    edi,0x3
  40306b:	call   4023f0 <malloc@plt>
  403070:	mov    QWORD PTR [rbp-0x40],rax
  403074:	mov    rax,QWORD PTR [rbp-0x50]
  403078:	mov    BYTE PTR [rax],0x3c
  40307b:	mov    rax,QWORD PTR [rbp-0x50]
  40307f:	inc    rax
  403082:	mov    BYTE PTR [rax],0x3d
  403085:	mov    rax,QWORD PTR [rbp-0x50]
  403089:	add    rax,0x2
  40308d:	mov    BYTE PTR [rax],0x0
  403090:	mov    rax,QWORD PTR [rbp-0x48]
  403094:	mov    BYTE PTR [rax],0x26
  403097:	mov    rax,QWORD PTR [rbp-0x48]
  40309b:	inc    rax
  40309e:	mov    BYTE PTR [rax],0x26
  4030a1:	mov    rax,QWORD PTR [rbp-0x48]
  4030a5:	add    rax,0x2
  4030a9:	mov    BYTE PTR [rax],0x0
  4030ac:	mov    rax,QWORD PTR [rbp-0x40]
  4030b0:	mov    BYTE PTR [rax],0x3d
  4030b3:	mov    rax,QWORD PTR [rbp-0x40]
  4030b7:	inc    rax
  4030ba:	mov    BYTE PTR [rax],0x3d
  4030bd:	mov    rax,QWORD PTR [rbp-0x40]
  4030c1:	add    rax,0x2
  4030c5:	mov    BYTE PTR [rax],0x0
  4030c8:	lea    rdx,[rbp-0x30]
  4030cc:	lea    rax,[rbp-0x68]
  4030d0:	mov    rsi,rdx
  4030d3:	mov    rdi,rax
  4030d6:	call   406cb8 <init_grammar@@Base>
  4030db:	mov    rax,QWORD PTR [rip+0xdd46]        # 410e28 <__bss_start@@Base+0x698>
  4030e2:	inc    rax
  4030e5:	mov    QWORD PTR [rip+0xdd3c],rax        # 410e28 <__bss_start@@Base+0x698>
  4030ec:	mov    edi,0x50
  4030f1:	call   4023f0 <malloc@plt>
  4030f6:	mov    QWORD PTR [rbp-0x38],rax
  4030fa:	mov    edi,0x8
  4030ff:	call   4023f0 <malloc@plt>
  403104:	mov    rdx,rax
  403107:	mov    rax,QWORD PTR [rbp-0x38]
  40310b:	mov    QWORD PTR [rax],rdx
  40310e:	mov    rax,QWORD PTR [rbp-0x38]
  403112:	mov    rax,QWORD PTR [rax]
  403115:	mov    esi,0x2
  40311a:	mov    rdi,rax
  40311d:	call   405d12 <init_token_int_value@@Base>
  403122:	mov    rax,QWORD PTR [rip+0xdd07]        # 410e30 <__bss_start@@Base+0x6a0>
  403129:	inc    rax
  40312c:	mov    QWORD PTR [rip+0xdcfd],rax        # 410e30 <__bss_start@@Base+0x6a0>
  403133:	mov    rax,QWORD PTR [rbp-0x38]
  403137:	lea    rbx,[rax+0x8]
  40313b:	mov    edi,0x8
  403140:	call   4023f0 <malloc@plt>
  403145:	mov    QWORD PTR [rbx],rax
  403148:	mov    rax,QWORD PTR [rbp-0x38]
  40314c:	add    rax,0x8
  403150:	mov    rax,QWORD PTR [rax]
  403153:	mov    esi,0x2
  403158:	mov    rdi,rax
  40315b:	call   405d12 <init_token_int_value@@Base>
  403160:	mov    rax,QWORD PTR [rip+0xdcd1]        # 410e38 <__bss_start@@Base+0x6a8>
  403167:	inc    rax
  40316a:	mov    QWORD PTR [rip+0xdcc7],rax        # 410e38 <__bss_start@@Base+0x6a8>
  403171:	mov    rax,QWORD PTR [rbp-0x38]
  403175:	lea    rbx,[rax+0x10]
  403179:	mov    edi,0x10
  40317e:	call   4023f0 <malloc@plt>
  403183:	mov    QWORD PTR [rbx],rax
  403186:	mov    rax,QWORD PTR [rbp-0x38]
  40318a:	add    rax,0x10
  40318e:	mov    rax,QWORD PTR [rax]
  403191:	mov    rdx,QWORD PTR [rbp-0x50]
  403195:	mov    rsi,rdx
  403198:	mov    rdi,rax
  40319b:	call   405efd <init_token_boolean_op@@Base>
  4031a0:	mov    rax,QWORD PTR [rip+0xdc99]        # 410e40 <__bss_start@@Base+0x6b0>
  4031a7:	inc    rax
  4031aa:	mov    QWORD PTR [rip+0xdc8f],rax        # 410e40 <__bss_start@@Base+0x6b0>
  4031b1:	mov    rax,QWORD PTR [rbp-0x38]
  4031b5:	lea    rbx,[rax+0x18]
  4031b9:	mov    edi,0x8
  4031be:	call   4023f0 <malloc@plt>
  4031c3:	mov    QWORD PTR [rbx],rax
  4031c6:	mov    rax,QWORD PTR [rbp-0x38]
  4031ca:	add    rax,0x18
  4031ce:	mov    rax,QWORD PTR [rax]
  4031d1:	mov    esi,0x1
  4031d6:	mov    rdi,rax
  4031d9:	call   405d12 <init_token_int_value@@Base>
  4031de:	mov    rax,QWORD PTR [rip+0xdc63]        # 410e48 <__bss_start@@Base+0x6b8>
  4031e5:	inc    rax
  4031e8:	mov    QWORD PTR [rip+0xdc59],rax        # 410e48 <__bss_start@@Base+0x6b8>
  4031ef:	mov    rax,QWORD PTR [rbp-0x38]
  4031f3:	lea    rbx,[rax+0x20]
  4031f7:	mov    edi,0x10
  4031fc:	call   4023f0 <malloc@plt>
  403201:	mov    QWORD PTR [rbx],rax
  403204:	mov    rax,QWORD PTR [rbp-0x38]
  403208:	add    rax,0x20
  40320c:	mov    rax,QWORD PTR [rax]
  40320f:	mov    rdx,QWORD PTR [rbp-0x48]
  403213:	mov    rsi,rdx
  403216:	mov    rdi,rax
  403219:	call   405efd <init_token_boolean_op@@Base>
  40321e:	mov    rax,QWORD PTR [rip+0xdc2b]        # 410e50 <__bss_start@@Base+0x6c0>
  403225:	inc    rax
  403228:	mov    QWORD PTR [rip+0xdc21],rax        # 410e50 <__bss_start@@Base+0x6c0>
  40322f:	mov    rax,QWORD PTR [rbp-0x38]
  403233:	lea    rbx,[rax+0x28]
  403237:	mov    edi,0x8
  40323c:	call   4023f0 <malloc@plt>
  403241:	mov    QWORD PTR [rbx],rax
  403244:	mov    rax,QWORD PTR [rbp-0x38]
  403248:	add    rax,0x28
  40324c:	mov    rax,QWORD PTR [rax]
  40324f:	mov    esi,0x4
  403254:	mov    rdi,rax
  403257:	call   405d12 <init_token_int_value@@Base>
  40325c:	mov    rax,QWORD PTR [rip+0xdbf5]        # 410e58 <__bss_start@@Base+0x6c8>
  403263:	inc    rax
  403266:	mov    QWORD PTR [rip+0xdbeb],rax        # 410e58 <__bss_start@@Base+0x6c8>
  40326d:	mov    rax,QWORD PTR [rbp-0x38]
  403271:	lea    rbx,[rax+0x30]
  403275:	mov    edi,0x8
  40327a:	call   4023f0 <malloc@plt>
  40327f:	mov    QWORD PTR [rbx],rax
  403282:	mov    rax,QWORD PTR [rbp-0x38]
  403286:	add    rax,0x30
  40328a:	mov    rax,QWORD PTR [rax]
  40328d:	mov    esi,0x4
  403292:	mov    rdi,rax
  403295:	call   405d12 <init_token_int_value@@Base>
  40329a:	mov    rax,QWORD PTR [rip+0xdbbf]        # 410e60 <__bss_start@@Base+0x6d0>
  4032a1:	inc    rax
  4032a4:	mov    QWORD PTR [rip+0xdbb5],rax        # 410e60 <__bss_start@@Base+0x6d0>
  4032ab:	mov    rax,QWORD PTR [rbp-0x38]
  4032af:	lea    rbx,[rax+0x38]
  4032b3:	mov    edi,0x10
  4032b8:	call   4023f0 <malloc@plt>
  4032bd:	mov    QWORD PTR [rbx],rax
  4032c0:	mov    rax,QWORD PTR [rbp-0x38]
  4032c4:	add    rax,0x38
  4032c8:	mov    rax,QWORD PTR [rax]
  4032cb:	mov    rdx,QWORD PTR [rbp-0x40]
  4032cf:	mov    rsi,rdx
  4032d2:	mov    rdi,rax
  4032d5:	call   405efd <init_token_boolean_op@@Base>
  4032da:	mov    rax,QWORD PTR [rip+0xdb87]        # 410e68 <__bss_start@@Base+0x6d8>
  4032e1:	inc    rax
  4032e4:	mov    QWORD PTR [rip+0xdb7d],rax        # 410e68 <__bss_start@@Base+0x6d8>
  4032eb:	mov    rax,QWORD PTR [rbp-0x38]
  4032ef:	lea    rbx,[rax+0x40]
  4032f3:	mov    edi,0x8
  4032f8:	call   4023f0 <malloc@plt>
  4032fd:	mov    QWORD PTR [rbx],rax
  403300:	mov    rax,QWORD PTR [rbp-0x38]
  403304:	add    rax,0x40
  403308:	mov    rax,QWORD PTR [rax]
  40330b:	mov    esi,0x4
  403310:	mov    rdi,rax
  403313:	call   405d12 <init_token_int_value@@Base>
  403318:	mov    rax,QWORD PTR [rip+0xdb51]        # 410e70 <__bss_start@@Base+0x6e0>
  40331f:	inc    rax
  403322:	mov    QWORD PTR [rip+0xdb47],rax        # 410e70 <__bss_start@@Base+0x6e0>
  403329:	mov    rax,QWORD PTR [rbp-0x38]
  40332d:	lea    rbx,[rax+0x48]
  403331:	mov    edi,0x4
  403336:	call   4023f0 <malloc@plt>
  40333b:	mov    QWORD PTR [rbx],rax
  40333e:	mov    rax,QWORD PTR [rbp-0x38]
  403342:	add    rax,0x48
  403346:	mov    rax,QWORD PTR [rax]
  403349:	mov    rdi,rax
  40334c:	call   405dad <init_token_cpar@@Base>
  403351:	mov    rax,QWORD PTR [rip+0xdb20]        # 410e78 <__bss_start@@Base+0x6e8>
  403358:	inc    rax
  40335b:	mov    QWORD PTR [rip+0xdb16],rax        # 410e78 <__bss_start@@Base+0x6e8>
  403362:	mov    rax,0x411aa0
  403369:	mov    rdx,QWORD PTR [rbp-0x38]
  40336d:	mov    QWORD PTR [rax+0x1b8],rdx
  403374:	mov    rax,0x411aa0
  40337b:	mov    DWORD PTR [rax+0x1b0],0xa
  403385:	lea    rax,[rbp-0x68]
  403389:	mov    rdi,rax
  40338c:	call   40754a <read_boolean_expression@@Base>
  403391:	mov    QWORD PTR [rbp-0x60],rax
  403395:	mov    rax,0x411aa0
  40339c:	mov    eax,DWORD PTR [rax+0x198]
  4033a2:	cmp    eax,0xa
  4033a5:	je     4033d7 <boolean_expression_complex@@Base+0x3ca>
  4033a7:	mov    rax,QWORD PTR [rip+0xdad2]        # 410e80 <__bss_start@@Base+0x6f0>
  4033ae:	inc    rax
  4033b1:	mov    QWORD PTR [rip+0xdac8],rax        # 410e80 <__bss_start@@Base+0x6f0>
  4033b8:	lea    rcx,[rip+0x8191]        # 40b550 <_IO_stdin_used@@Base+0x550>
  4033bf:	mov    edx,0xa6
  4033c4:	lea    rsi,[rip+0x7c55]        # 40b020 <_IO_stdin_used@@Base+0x20>
  4033cb:	lea    rdi,[rip+0x7d46]        # 40b118 <_IO_stdin_used@@Base+0x118>
  4033d2:	call   402370 <__assert_fail@plt>
  4033d7:	mov    rax,QWORD PTR [rbp-0x60]
  4033db:	mov    eax,DWORD PTR [rax]
  4033dd:	cmp    eax,0x5
  4033e0:	je     403412 <boolean_expression_complex@@Base+0x405>
  4033e2:	mov    rax,QWORD PTR [rip+0xdaa7]        # 410e90 <__bss_start@@Base+0x700>
  4033e9:	inc    rax
  4033ec:	mov    QWORD PTR [rip+0xda9d],rax        # 410e90 <__bss_start@@Base+0x700>
  4033f3:	lea    rcx,[rip+0x8156]        # 40b550 <_IO_stdin_used@@Base+0x550>
  4033fa:	mov    edx,0xa7
  4033ff:	lea    rsi,[rip+0x7c1a]        # 40b020 <_IO_stdin_used@@Base+0x20>
  403406:	lea    rdi,[rip+0x7ceb]        # 40b0f8 <_IO_stdin_used@@Base+0xf8>
  40340d:	call   402370 <__assert_fail@plt>
  403412:	mov    rax,QWORD PTR [rip+0xda6f]        # 410e88 <__bss_start@@Base+0x6f8>
  403419:	inc    rax
  40341c:	mov    QWORD PTR [rip+0xda65],rax        # 410e88 <__bss_start@@Base+0x6f8>
  403423:	nop
  403424:	mov    rax,QWORD PTR [rbp-0x18]
  403428:	xor    rax,QWORD PTR fs:0x28
  403431:	je     403438 <boolean_expression_complex@@Base+0x42b>
  403433:	call   402340 <__stack_chk_fail@plt>
  403438:	add    rsp,0x68
  40343c:	pop    rbx
  40343d:	pop    rbp
  40343e:	ret    

000000000040343f <boolean_binary_operator_is_read_properly@@Base>:
  40343f:	endbr64 
  403443:	push   rbp
  403444:	mov    rbp,rsp
  403447:	push   rbx
  403448:	sub    rsp,0x58
  40344c:	mov    rax,QWORD PTR fs:0x28
  403455:	mov    QWORD PTR [rbp-0x18],rax
  403459:	xor    eax,eax
  40345b:	mov    rax,QWORD PTR [rip+0xd95e]        # 410dc0 <__bss_start@@Base+0x630>
  403462:	inc    rax
  403465:	mov    QWORD PTR [rip+0xd954],rax        # 410dc0 <__bss_start@@Base+0x630>
  40346c:	mov    QWORD PTR [rbp-0x50],0x0
  403474:	mov    QWORD PTR [rbp-0x48],0x0
  40347c:	mov    edi,0x3
  403481:	call   4023f0 <malloc@plt>
  403486:	mov    QWORD PTR [rbp-0x40],rax
  40348a:	mov    rax,QWORD PTR [rbp-0x40]
  40348e:	mov    BYTE PTR [rax],0x21
  403491:	mov    rax,QWORD PTR [rbp-0x40]
  403495:	inc    rax
  403498:	mov    BYTE PTR [rax],0x3d
  40349b:	mov    rax,QWORD PTR [rbp-0x40]
  40349f:	add    rax,0x2
  4034a3:	mov    BYTE PTR [rax],0x0
  4034a6:	lea    rdx,[rbp-0x30]
  4034aa:	lea    rax,[rbp-0x58]
  4034ae:	mov    rsi,rdx
  4034b1:	mov    rdi,rax
  4034b4:	call   406cb8 <init_grammar@@Base>
  4034b9:	mov    rax,QWORD PTR [rip+0xd908]        # 410dc8 <__bss_start@@Base+0x638>
  4034c0:	inc    rax
  4034c3:	mov    QWORD PTR [rip+0xd8fe],rax        # 410dc8 <__bss_start@@Base+0x638>
  4034ca:	mov    edi,0x18
  4034cf:	call   4023f0 <malloc@plt>
  4034d4:	mov    QWORD PTR [rbp-0x38],rax
  4034d8:	mov    edi,0x8
  4034dd:	call   4023f0 <malloc@plt>
  4034e2:	mov    rdx,rax
  4034e5:	mov    rax,QWORD PTR [rbp-0x38]
  4034e9:	mov    QWORD PTR [rax],rdx
  4034ec:	mov    rax,QWORD PTR [rbp-0x38]
  4034f0:	mov    rax,QWORD PTR [rax]
  4034f3:	mov    esi,0x2
  4034f8:	mov    rdi,rax
  4034fb:	call   405d12 <init_token_int_value@@Base>
  403500:	mov    rax,QWORD PTR [rip+0xd8c9]        # 410dd0 <__bss_start@@Base+0x640>
  403507:	inc    rax
  40350a:	mov    QWORD PTR [rip+0xd8bf],rax        # 410dd0 <__bss_start@@Base+0x640>
  403511:	mov    rax,QWORD PTR [rbp-0x38]
  403515:	lea    rbx,[rax+0x8]
  403519:	mov    edi,0x10
  40351e:	call   4023f0 <malloc@plt>
  403523:	mov    QWORD PTR [rbx],rax
  403526:	mov    rax,QWORD PTR [rbp-0x38]
  40352a:	add    rax,0x8
  40352e:	mov    rax,QWORD PTR [rax]
  403531:	mov    rdx,QWORD PTR [rbp-0x40]
  403535:	mov    rsi,rdx
  403538:	mov    rdi,rax
  40353b:	call   405efd <init_token_boolean_op@@Base>
  403540:	mov    rax,QWORD PTR [rip+0xd891]        # 410dd8 <__bss_start@@Base+0x648>
  403547:	inc    rax
  40354a:	mov    QWORD PTR [rip+0xd887],rax        # 410dd8 <__bss_start@@Base+0x648>
  403551:	mov    rax,QWORD PTR [rbp-0x38]
  403555:	lea    rbx,[rax+0x10]
  403559:	mov    edi,0x8
  40355e:	call   4023f0 <malloc@plt>
  403563:	mov    QWORD PTR [rbx],rax
  403566:	mov    rax,QWORD PTR [rbp-0x38]
  40356a:	add    rax,0x10
  40356e:	mov    rax,QWORD PTR [rax]
  403571:	mov    esi,0x1
  403576:	mov    rdi,rax
  403579:	call   405d12 <init_token_int_value@@Base>
  40357e:	mov    rax,QWORD PTR [rip+0xd85b]        # 410de0 <__bss_start@@Base+0x650>
  403585:	inc    rax
  403588:	mov    QWORD PTR [rip+0xd851],rax        # 410de0 <__bss_start@@Base+0x650>
  40358f:	mov    rax,0x411aa0
  403596:	mov    rdx,QWORD PTR [rbp-0x38]
  40359a:	mov    QWORD PTR [rax+0x1b8],rdx
  4035a1:	mov    rax,0x411aa0
  4035a8:	mov    DWORD PTR [rax+0x1b0],0x3
  4035b2:	lea    rax,[rbp-0x58]
  4035b6:	mov    rdi,rax
  4035b9:	call   4078e2 <read_boolean_binary_expression@@Base>
  4035be:	mov    QWORD PTR [rbp-0x50],rax
  4035c2:	mov    rax,0x411aa0
  4035c9:	mov    eax,DWORD PTR [rax+0x198]
  4035cf:	cmp    eax,0x3
  4035d2:	je     403604 <boolean_binary_operator_is_read_properly@@Base+0x1c5>
  4035d4:	mov    rax,QWORD PTR [rip+0xd80d]        # 410de8 <__bss_start@@Base+0x658>
  4035db:	inc    rax
  4035de:	mov    QWORD PTR [rip+0xd803],rax        # 410de8 <__bss_start@@Base+0x658>
  4035e5:	lea    rcx,[rip+0x7f94]        # 40b580 <_IO_stdin_used@@Base+0x580>
  4035ec:	mov    edx,0xc8
  4035f1:	lea    rsi,[rip+0x7a28]        # 40b020 <_IO_stdin_used@@Base+0x20>
  4035f8:	lea    rdi,[rip+0x7b34]        # 40b133 <_IO_stdin_used@@Base+0x133>
  4035ff:	call   402370 <__assert_fail@plt>
  403604:	mov    rax,QWORD PTR [rbp-0x50]
  403608:	mov    eax,DWORD PTR [rax]
  40360a:	cmp    eax,0x5
  40360d:	je     40363f <boolean_binary_operator_is_read_properly@@Base+0x200>
  40360f:	mov    rax,QWORD PTR [rip+0xd7e2]        # 410df8 <__bss_start@@Base+0x668>
  403616:	inc    rax
  403619:	mov    QWORD PTR [rip+0xd7d8],rax        # 410df8 <__bss_start@@Base+0x668>
  403620:	lea    rcx,[rip+0x7f59]        # 40b580 <_IO_stdin_used@@Base+0x580>
  403627:	mov    edx,0xc9
  40362c:	lea    rsi,[rip+0x79ed]        # 40b020 <_IO_stdin_used@@Base+0x20>
  403633:	lea    rdi,[rip+0x7abe]        # 40b0f8 <_IO_stdin_used@@Base+0xf8>
  40363a:	call   402370 <__assert_fail@plt>
  40363f:	mov    rax,QWORD PTR [rip+0xd7aa]        # 410df0 <__bss_start@@Base+0x660>
  403646:	inc    rax
  403649:	mov    QWORD PTR [rip+0xd7a0],rax        # 410df0 <__bss_start@@Base+0x660>
  403650:	mov    rax,QWORD PTR [rbp-0x50]
  403654:	mov    QWORD PTR [rbp-0x48],rax
  403658:	mov    rax,QWORD PTR [rbp-0x48]
  40365c:	mov    rax,QWORD PTR [rax+0x10]
  403660:	mov    eax,DWORD PTR [rax]
  403662:	cmp    eax,0x1
  403665:	je     403697 <boolean_binary_operator_is_read_properly@@Base+0x258>
  403667:	mov    rax,QWORD PTR [rip+0xd792]        # 410e00 <__bss_start@@Base+0x670>
  40366e:	inc    rax
  403671:	mov    QWORD PTR [rip+0xd788],rax        # 410e00 <__bss_start@@Base+0x670>
  403678:	lea    rcx,[rip+0x7f01]        # 40b580 <_IO_stdin_used@@Base+0x580>
  40367f:	mov    edx,0xcb
  403684:	lea    rsi,[rip+0x7995]        # 40b020 <_IO_stdin_used@@Base+0x20>
  40368b:	lea    rdi,[rip+0x7abb]        # 40b14d <_IO_stdin_used@@Base+0x14d>
  403692:	call   402370 <__assert_fail@plt>
  403697:	mov    rax,QWORD PTR [rbp-0x48]
  40369b:	mov    eax,DWORD PTR [rax+0x20]
  40369e:	cmp    eax,0x1
  4036a1:	je     4036d3 <boolean_binary_operator_is_read_properly@@Base+0x294>
  4036a3:	mov    rax,QWORD PTR [rip+0xd75e]        # 410e08 <__bss_start@@Base+0x678>
  4036aa:	inc    rax
  4036ad:	mov    QWORD PTR [rip+0xd754],rax        # 410e08 <__bss_start@@Base+0x678>
  4036b4:	lea    rcx,[rip+0x7ec5]        # 40b580 <_IO_stdin_used@@Base+0x580>
  4036bb:	mov    edx,0xcc
  4036c0:	lea    rsi,[rip+0x7959]        # 40b020 <_IO_stdin_used@@Base+0x20>
  4036c7:	lea    rdi,[rip+0x7a9a]        # 40b168 <_IO_stdin_used@@Base+0x168>
  4036ce:	call   402370 <__assert_fail@plt>
  4036d3:	mov    rax,QWORD PTR [rbp-0x48]
  4036d7:	mov    rax,QWORD PTR [rax+0x18]
  4036db:	mov    eax,DWORD PTR [rax]
  4036dd:	cmp    eax,0x1
  4036e0:	je     403712 <boolean_binary_operator_is_read_properly@@Base+0x2d3>
  4036e2:	mov    rax,QWORD PTR [rip+0xd727]        # 410e10 <__bss_start@@Base+0x680>
  4036e9:	inc    rax
  4036ec:	mov    QWORD PTR [rip+0xd71d],rax        # 410e10 <__bss_start@@Base+0x680>
  4036f3:	lea    rcx,[rip+0x7e86]        # 40b580 <_IO_stdin_used@@Base+0x580>
  4036fa:	mov    edx,0xcd
  4036ff:	lea    rsi,[rip+0x791a]        # 40b020 <_IO_stdin_used@@Base+0x20>
  403706:	lea    rdi,[rip+0x7a74]        # 40b181 <_IO_stdin_used@@Base+0x181>
  40370d:	call   402370 <__assert_fail@plt>
  403712:	nop
  403713:	mov    rax,QWORD PTR [rbp-0x18]
  403717:	xor    rax,QWORD PTR fs:0x28
  403720:	je     403727 <boolean_binary_operator_is_read_properly@@Base+0x2e8>
  403722:	call   402340 <__stack_chk_fail@plt>
  403727:	add    rsp,0x58
  40372b:	pop    rbx
  40372c:	pop    rbp
  40372d:	ret    

000000000040372e <boolean_unary_operator_is_read_properly@@Base>:
  40372e:	endbr64 
  403732:	push   rbp
  403733:	mov    rbp,rsp
  403736:	push   rbx
  403737:	sub    rsp,0x58
  40373b:	mov    rax,QWORD PTR fs:0x28
  403744:	mov    QWORD PTR [rbp-0x18],rax
  403748:	xor    eax,eax
  40374a:	mov    rax,QWORD PTR [rip+0xd60f]        # 410d60 <__bss_start@@Base+0x5d0>
  403751:	inc    rax
  403754:	mov    QWORD PTR [rip+0xd605],rax        # 410d60 <__bss_start@@Base+0x5d0>
  40375b:	mov    QWORD PTR [rbp-0x50],0x0
  403763:	mov    QWORD PTR [rbp-0x48],0x0
  40376b:	mov    edi,0x2
  403770:	call   4023f0 <malloc@plt>
  403775:	mov    QWORD PTR [rbp-0x40],rax
  403779:	mov    rax,QWORD PTR [rbp-0x40]
  40377d:	mov    BYTE PTR [rax],0x21
  403780:	mov    rax,QWORD PTR [rbp-0x40]
  403784:	inc    rax
  403787:	mov    BYTE PTR [rax],0x0
  40378a:	lea    rdx,[rbp-0x30]
  40378e:	lea    rax,[rbp-0x58]
  403792:	mov    rsi,rdx
  403795:	mov    rdi,rax
  403798:	call   406cb8 <init_grammar@@Base>
  40379d:	mov    rax,QWORD PTR [rip+0xd5c4]        # 410d68 <__bss_start@@Base+0x5d8>
  4037a4:	inc    rax
  4037a7:	mov    QWORD PTR [rip+0xd5ba],rax        # 410d68 <__bss_start@@Base+0x5d8>
  4037ae:	mov    edi,0x10
  4037b3:	call   4023f0 <malloc@plt>
  4037b8:	mov    QWORD PTR [rbp-0x38],rax
  4037bc:	mov    edi,0x10
  4037c1:	call   4023f0 <malloc@plt>
  4037c6:	mov    rdx,rax
  4037c9:	mov    rax,QWORD PTR [rbp-0x38]
  4037cd:	mov    QWORD PTR [rax],rdx
  4037d0:	mov    rax,QWORD PTR [rbp-0x38]
  4037d4:	mov    rax,QWORD PTR [rax]
  4037d7:	mov    rdx,QWORD PTR [rbp-0x40]
  4037db:	mov    rsi,rdx
  4037de:	mov    rdi,rax
  4037e1:	call   405efd <init_token_boolean_op@@Base>
  4037e6:	mov    rax,QWORD PTR [rip+0xd583]        # 410d70 <__bss_start@@Base+0x5e0>
  4037ed:	inc    rax
  4037f0:	mov    QWORD PTR [rip+0xd579],rax        # 410d70 <__bss_start@@Base+0x5e0>
  4037f7:	mov    rax,QWORD PTR [rbp-0x38]
  4037fb:	lea    rbx,[rax+0x8]
  4037ff:	mov    edi,0x8
  403804:	call   4023f0 <malloc@plt>
  403809:	mov    QWORD PTR [rbx],rax
  40380c:	mov    rax,QWORD PTR [rbp-0x38]
  403810:	add    rax,0x8
  403814:	mov    rax,QWORD PTR [rax]
  403817:	mov    esi,0x1
  40381c:	mov    rdi,rax
  40381f:	call   405d12 <init_token_int_value@@Base>
  403824:	mov    rax,QWORD PTR [rip+0xd54d]        # 410d78 <__bss_start@@Base+0x5e8>
  40382b:	inc    rax
  40382e:	mov    QWORD PTR [rip+0xd543],rax        # 410d78 <__bss_start@@Base+0x5e8>
  403835:	mov    rax,0x411aa0
  40383c:	mov    rdx,QWORD PTR [rbp-0x38]
  403840:	mov    QWORD PTR [rax+0x1b8],rdx
  403847:	mov    rax,0x411aa0
  40384e:	mov    DWORD PTR [rax+0x1b0],0x2
  403858:	lea    rax,[rbp-0x58]
  40385c:	mov    rdi,rax
  40385f:	call   407bff <read_boolean_unary_expression@@Base>
  403864:	mov    QWORD PTR [rbp-0x50],rax
  403868:	mov    rax,0x411aa0
  40386f:	mov    eax,DWORD PTR [rax+0x198]
  403875:	cmp    eax,0x2
  403878:	je     4038aa <boolean_unary_operator_is_read_properly@@Base+0x17c>
  40387a:	mov    rax,QWORD PTR [rip+0xd4ff]        # 410d80 <__bss_start@@Base+0x5f0>
  403881:	inc    rax
  403884:	mov    QWORD PTR [rip+0xd4f5],rax        # 410d80 <__bss_start@@Base+0x5f0>
  40388b:	lea    rcx,[rip+0x7d2e]        # 40b5c0 <_IO_stdin_used@@Base+0x5c0>
  403892:	mov    edx,0xeb
  403897:	lea    rsi,[rip+0x7782]        # 40b020 <_IO_stdin_used@@Base+0x20>
  40389e:	lea    rdi,[rip+0x77ff]        # 40b0a4 <_IO_stdin_used@@Base+0xa4>
  4038a5:	call   402370 <__assert_fail@plt>
  4038aa:	mov    rax,QWORD PTR [rbp-0x50]
  4038ae:	mov    eax,DWORD PTR [rax]
  4038b0:	cmp    eax,0x5
  4038b3:	je     4038e5 <boolean_unary_operator_is_read_properly@@Base+0x1b7>
  4038b5:	mov    rax,QWORD PTR [rip+0xd4d4]        # 410d90 <__bss_start@@Base+0x600>
  4038bc:	inc    rax
  4038bf:	mov    QWORD PTR [rip+0xd4ca],rax        # 410d90 <__bss_start@@Base+0x600>
  4038c6:	lea    rcx,[rip+0x7cf3]        # 40b5c0 <_IO_stdin_used@@Base+0x5c0>
  4038cd:	mov    edx,0xec
  4038d2:	lea    rsi,[rip+0x7747]        # 40b020 <_IO_stdin_used@@Base+0x20>
  4038d9:	lea    rdi,[rip+0x7818]        # 40b0f8 <_IO_stdin_used@@Base+0xf8>
  4038e0:	call   402370 <__assert_fail@plt>
  4038e5:	mov    rax,QWORD PTR [rip+0xd49c]        # 410d88 <__bss_start@@Base+0x5f8>
  4038ec:	inc    rax
  4038ef:	mov    QWORD PTR [rip+0xd492],rax        # 410d88 <__bss_start@@Base+0x5f8>
  4038f6:	mov    rax,QWORD PTR [rbp-0x50]
  4038fa:	mov    QWORD PTR [rbp-0x48],rax
  4038fe:	mov    rax,QWORD PTR [rbp-0x48]
  403902:	mov    rax,QWORD PTR [rax+0x10]
  403906:	mov    eax,DWORD PTR [rax]
  403908:	cmp    eax,0x1
  40390b:	je     40393d <boolean_unary_operator_is_read_properly@@Base+0x20f>
  40390d:	mov    rax,QWORD PTR [rip+0xd484]        # 410d98 <__bss_start@@Base+0x608>
  403914:	inc    rax
  403917:	mov    QWORD PTR [rip+0xd47a],rax        # 410d98 <__bss_start@@Base+0x608>
  40391e:	lea    rcx,[rip+0x7c9b]        # 40b5c0 <_IO_stdin_used@@Base+0x5c0>
  403925:	mov    edx,0xee
  40392a:	lea    rsi,[rip+0x76ef]        # 40b020 <_IO_stdin_used@@Base+0x20>
  403931:	lea    rdi,[rip+0x7815]        # 40b14d <_IO_stdin_used@@Base+0x14d>
  403938:	call   402370 <__assert_fail@plt>
  40393d:	mov    rax,QWORD PTR [rbp-0x48]
  403941:	mov    eax,DWORD PTR [rax+0x20]
  403944:	cmp    eax,0x8
  403947:	je     403979 <boolean_unary_operator_is_read_properly@@Base+0x24b>
  403949:	mov    rax,QWORD PTR [rip+0xd450]        # 410da0 <__bss_start@@Base+0x610>
  403950:	inc    rax
  403953:	mov    QWORD PTR [rip+0xd446],rax        # 410da0 <__bss_start@@Base+0x610>
  40395a:	lea    rcx,[rip+0x7c5f]        # 40b5c0 <_IO_stdin_used@@Base+0x5c0>
  403961:	mov    edx,0xef
  403966:	lea    rsi,[rip+0x76b3]        # 40b020 <_IO_stdin_used@@Base+0x20>
  40396d:	lea    rdi,[rip+0x7829]        # 40b19d <_IO_stdin_used@@Base+0x19d>
  403974:	call   402370 <__assert_fail@plt>
  403979:	mov    rax,QWORD PTR [rbp-0x48]
  40397d:	mov    rax,QWORD PTR [rax+0x18]
  403981:	test   rax,rax
  403984:	je     4039b6 <boolean_unary_operator_is_read_properly@@Base+0x288>
  403986:	mov    rax,QWORD PTR [rip+0xd41b]        # 410da8 <__bss_start@@Base+0x618>
  40398d:	inc    rax
  403990:	mov    QWORD PTR [rip+0xd411],rax        # 410da8 <__bss_start@@Base+0x618>
  403997:	lea    rcx,[rip+0x7c22]        # 40b5c0 <_IO_stdin_used@@Base+0x5c0>
  40399e:	mov    edx,0xf0
  4039a3:	lea    rsi,[rip+0x7676]        # 40b020 <_IO_stdin_used@@Base+0x20>
  4039aa:	lea    rdi,[rip+0x7800]        # 40b1b1 <_IO_stdin_used@@Base+0x1b1>
  4039b1:	call   402370 <__assert_fail@plt>
  4039b6:	nop
  4039b7:	mov    rax,QWORD PTR [rbp-0x18]
  4039bb:	xor    rax,QWORD PTR fs:0x28
  4039c4:	je     4039cb <boolean_unary_operator_is_read_properly@@Base+0x29d>
  4039c6:	call   402340 <__stack_chk_fail@plt>
  4039cb:	add    rsp,0x58
  4039cf:	pop    rbx
  4039d0:	pop    rbp
  4039d1:	ret    

00000000004039d2 <if_statement_only@@Base>:
  4039d2:	endbr64 
  4039d6:	push   rbp
  4039d7:	mov    rbp,rsp
  4039da:	push   rbx
  4039db:	sub    rsp,0x48
  4039df:	mov    rax,QWORD PTR fs:0x28
  4039e8:	mov    QWORD PTR [rbp-0x18],rax
  4039ec:	xor    eax,eax
  4039ee:	mov    rax,QWORD PTR [rip+0xd2eb]        # 410ce0 <__bss_start@@Base+0x550>
  4039f5:	inc    rax
  4039f8:	mov    QWORD PTR [rip+0xd2e1],rax        # 410ce0 <__bss_start@@Base+0x550>
  4039ff:	mov    QWORD PTR [rbp-0x48],0x0
  403a07:	lea    rdx,[rbp-0x30]
  403a0b:	lea    rax,[rbp-0x50]
  403a0f:	mov    rsi,rdx
  403a12:	mov    rdi,rax
  403a15:	call   406cb8 <init_grammar@@Base>
  403a1a:	mov    rax,QWORD PTR [rip+0xd2c7]        # 410ce8 <__bss_start@@Base+0x558>
  403a21:	inc    rax
  403a24:	mov    QWORD PTR [rip+0xd2bd],rax        # 410ce8 <__bss_start@@Base+0x558>
  403a2b:	mov    edi,0x3
  403a30:	call   4023f0 <malloc@plt>
  403a35:	mov    QWORD PTR [rbp-0x40],rax
  403a39:	mov    rax,QWORD PTR [rbp-0x40]
  403a3d:	mov    BYTE PTR [rax],0x21
  403a40:	mov    rax,QWORD PTR [rbp-0x40]
  403a44:	inc    rax
  403a47:	mov    BYTE PTR [rax],0x3d
  403a4a:	mov    rax,QWORD PTR [rbp-0x40]
  403a4e:	add    rax,0x2
  403a52:	mov    BYTE PTR [rax],0x0
  403a55:	mov    edi,0x48
  403a5a:	call   4023f0 <malloc@plt>
  403a5f:	mov    QWORD PTR [rbp-0x38],rax
  403a63:	mov    edi,0x4
  403a68:	call   4023f0 <malloc@plt>
  403a6d:	mov    rdx,rax
  403a70:	mov    rax,QWORD PTR [rbp-0x38]
  403a74:	mov    QWORD PTR [rax],rdx
  403a77:	mov    rax,QWORD PTR [rbp-0x38]
  403a7b:	mov    rax,QWORD PTR [rax]
  403a7e:	mov    rdi,rax
  403a81:	call   405d83 <init_token_opar@@Base>
  403a86:	mov    rax,QWORD PTR [rip+0xd263]        # 410cf0 <__bss_start@@Base+0x560>
  403a8d:	inc    rax
  403a90:	mov    QWORD PTR [rip+0xd259],rax        # 410cf0 <__bss_start@@Base+0x560>
  403a97:	mov    rax,QWORD PTR [rbp-0x38]
  403a9b:	lea    rbx,[rax+0x8]
  403a9f:	mov    edi,0x8
  403aa4:	call   4023f0 <malloc@plt>
  403aa9:	mov    QWORD PTR [rbx],rax
  403aac:	mov    rax,QWORD PTR [rbp-0x38]
  403ab0:	add    rax,0x8
  403ab4:	mov    rax,QWORD PTR [rax]
  403ab7:	mov    esi,0x1
  403abc:	mov    rdi,rax
  403abf:	call   405d12 <init_token_int_value@@Base>
  403ac4:	mov    rax,QWORD PTR [rip+0xd22d]        # 410cf8 <__bss_start@@Base+0x568>
  403acb:	inc    rax
  403ace:	mov    QWORD PTR [rip+0xd223],rax        # 410cf8 <__bss_start@@Base+0x568>
  403ad5:	mov    rax,QWORD PTR [rbp-0x38]
  403ad9:	lea    rbx,[rax+0x10]
  403add:	mov    edi,0x8
  403ae2:	call   4023f0 <malloc@plt>
  403ae7:	mov    QWORD PTR [rbx],rax
  403aea:	mov    rax,QWORD PTR [rbp-0x38]
  403aee:	add    rax,0x10
  403af2:	mov    rax,QWORD PTR [rax]
  403af5:	mov    esi,0x1
  403afa:	mov    rdi,rax
  403afd:	call   405d12 <init_token_int_value@@Base>
  403b02:	mov    rax,QWORD PTR [rip+0xd1f7]        # 410d00 <__bss_start@@Base+0x570>
  403b09:	inc    rax
  403b0c:	mov    QWORD PTR [rip+0xd1ed],rax        # 410d00 <__bss_start@@Base+0x570>
  403b13:	mov    rax,QWORD PTR [rbp-0x38]
  403b17:	lea    rbx,[rax+0x18]
  403b1b:	mov    edi,0x10
  403b20:	call   4023f0 <malloc@plt>
  403b25:	mov    QWORD PTR [rbx],rax
  403b28:	mov    rax,QWORD PTR [rbp-0x38]
  403b2c:	add    rax,0x18
  403b30:	mov    rax,QWORD PTR [rax]
  403b33:	mov    rdx,QWORD PTR [rbp-0x40]
  403b37:	mov    rsi,rdx
  403b3a:	mov    rdi,rax
  403b3d:	call   405efd <init_token_boolean_op@@Base>
  403b42:	mov    rax,QWORD PTR [rip+0xd1bf]        # 410d08 <__bss_start@@Base+0x578>
  403b49:	inc    rax
  403b4c:	mov    QWORD PTR [rip+0xd1b5],rax        # 410d08 <__bss_start@@Base+0x578>
  403b53:	mov    rax,QWORD PTR [rbp-0x38]
  403b57:	lea    rbx,[rax+0x20]
  403b5b:	mov    edi,0x8
  403b60:	call   4023f0 <malloc@plt>
  403b65:	mov    QWORD PTR [rbx],rax
  403b68:	mov    rax,QWORD PTR [rbp-0x38]
  403b6c:	add    rax,0x20
  403b70:	mov    rax,QWORD PTR [rax]
  403b73:	mov    esi,0x1
  403b78:	mov    rdi,rax
  403b7b:	call   405d12 <init_token_int_value@@Base>
  403b80:	mov    rax,QWORD PTR [rip+0xd189]        # 410d10 <__bss_start@@Base+0x580>
  403b87:	inc    rax
  403b8a:	mov    QWORD PTR [rip+0xd17f],rax        # 410d10 <__bss_start@@Base+0x580>
  403b91:	mov    rax,QWORD PTR [rbp-0x38]
  403b95:	lea    rbx,[rax+0x28]
  403b99:	mov    edi,0x4
  403b9e:	call   4023f0 <malloc@plt>
  403ba3:	mov    QWORD PTR [rbx],rax
  403ba6:	mov    rax,QWORD PTR [rbp-0x38]
  403baa:	add    rax,0x28
  403bae:	mov    rax,QWORD PTR [rax]
  403bb1:	mov    rdi,rax
  403bb4:	call   405dad <init_token_cpar@@Base>
  403bb9:	mov    rax,QWORD PTR [rip+0xd158]        # 410d18 <__bss_start@@Base+0x588>
  403bc0:	inc    rax
  403bc3:	mov    QWORD PTR [rip+0xd14e],rax        # 410d18 <__bss_start@@Base+0x588>
  403bca:	mov    rax,QWORD PTR [rbp-0x38]
  403bce:	lea    rbx,[rax+0x30]
  403bd2:	mov    edi,0x4
  403bd7:	call   4023f0 <malloc@plt>
  403bdc:	mov    QWORD PTR [rbx],rax
  403bdf:	mov    rax,QWORD PTR [rbp-0x38]
  403be3:	add    rax,0x30
  403be7:	mov    rax,QWORD PTR [rax]
  403bea:	mov    rdi,rax
  403bed:	call   405dd7 <init_token_obra@@Base>
  403bf2:	mov    rax,QWORD PTR [rip+0xd127]        # 410d20 <__bss_start@@Base+0x590>
  403bf9:	inc    rax
  403bfc:	mov    QWORD PTR [rip+0xd11d],rax        # 410d20 <__bss_start@@Base+0x590>
  403c03:	mov    rax,QWORD PTR [rbp-0x38]
  403c07:	lea    rbx,[rax+0x38]
  403c0b:	mov    edi,0x4
  403c10:	call   4023f0 <malloc@plt>
  403c15:	mov    QWORD PTR [rbx],rax
  403c18:	mov    rax,QWORD PTR [rbp-0x38]
  403c1c:	add    rax,0x38
  403c20:	mov    rax,QWORD PTR [rax]
  403c23:	mov    rdi,rax
  403c26:	call   405e01 <init_token_cbra@@Base>
  403c2b:	mov    rax,QWORD PTR [rip+0xd0f6]        # 410d28 <__bss_start@@Base+0x598>
  403c32:	inc    rax
  403c35:	mov    QWORD PTR [rip+0xd0ec],rax        # 410d28 <__bss_start@@Base+0x598>
  403c3c:	mov    rax,QWORD PTR [rbp-0x38]
  403c40:	lea    rbx,[rax+0x40]
  403c44:	mov    edi,0x4
  403c49:	call   4023f0 <malloc@plt>
  403c4e:	mov    QWORD PTR [rbx],rax
  403c51:	mov    rax,QWORD PTR [rbp-0x38]
  403c55:	add    rax,0x40
  403c59:	mov    rax,QWORD PTR [rax]
  403c5c:	mov    rdi,rax
  403c5f:	call   405e7f <init_token_eof@@Base>
  403c64:	mov    rax,QWORD PTR [rip+0xd0c5]        # 410d30 <__bss_start@@Base+0x5a0>
  403c6b:	inc    rax
  403c6e:	mov    QWORD PTR [rip+0xd0bb],rax        # 410d30 <__bss_start@@Base+0x5a0>
  403c75:	mov    rax,0x411aa0
  403c7c:	mov    rdx,QWORD PTR [rbp-0x38]
  403c80:	mov    QWORD PTR [rax+0x1b8],rdx
  403c87:	mov    rax,0x411aa0
  403c8e:	mov    DWORD PTR [rax+0x1b0],0x9
  403c98:	lea    rax,[rbp-0x50]
  403c9c:	mov    rdi,rax
  403c9f:	call   407374 <read_if_statement@@Base>
  403ca4:	mov    QWORD PTR [rbp-0x48],rax
  403ca8:	mov    rax,0x411aa0
  403caf:	mov    eax,DWORD PTR [rax+0x198]
  403cb5:	cmp    eax,0x9
  403cb8:	je     403cea <if_statement_only@@Base+0x318>
  403cba:	mov    rax,QWORD PTR [rip+0xd077]        # 410d38 <__bss_start@@Base+0x5a8>
  403cc1:	inc    rax
  403cc4:	mov    QWORD PTR [rip+0xd06d],rax        # 410d38 <__bss_start@@Base+0x5a8>
  403ccb:	lea    rcx,[rip+0x791e]        # 40b5f0 <_IO_stdin_used@@Base+0x5f0>
  403cd2:	mov    edx,0x11b
  403cd7:	lea    rsi,[rip+0x7342]        # 40b020 <_IO_stdin_used@@Base+0x20>
  403cde:	lea    rdi,[rip+0x74e1]        # 40b1c6 <_IO_stdin_used@@Base+0x1c6>
  403ce5:	call   402370 <__assert_fail@plt>
  403cea:	cmp    QWORD PTR [rbp-0x48],0x0
  403cef:	jne    403d21 <if_statement_only@@Base+0x34f>
  403cf1:	mov    rax,QWORD PTR [rip+0xd050]        # 410d48 <__bss_start@@Base+0x5b8>
  403cf8:	inc    rax
  403cfb:	mov    QWORD PTR [rip+0xd046],rax        # 410d48 <__bss_start@@Base+0x5b8>
  403d02:	lea    rcx,[rip+0x78e7]        # 40b5f0 <_IO_stdin_used@@Base+0x5f0>
  403d09:	mov    edx,0x11c
  403d0e:	lea    rsi,[rip+0x730b]        # 40b020 <_IO_stdin_used@@Base+0x20>
  403d15:	lea    rdi,[rip+0x74c4]        # 40b1e0 <_IO_stdin_used@@Base+0x1e0>
  403d1c:	call   402370 <__assert_fail@plt>
  403d21:	mov    rax,QWORD PTR [rip+0xd018]        # 410d40 <__bss_start@@Base+0x5b0>
  403d28:	inc    rax
  403d2b:	mov    QWORD PTR [rip+0xd00e],rax        # 410d40 <__bss_start@@Base+0x5b0>
  403d32:	mov    rax,QWORD PTR [rbp-0x48]
  403d36:	mov    eax,DWORD PTR [rax]
  403d38:	cmp    eax,0x4
  403d3b:	je     403d6d <if_statement_only@@Base+0x39b>
  403d3d:	mov    rax,QWORD PTR [rip+0xd00c]        # 410d50 <__bss_start@@Base+0x5c0>
  403d44:	inc    rax
  403d47:	mov    QWORD PTR [rip+0xd002],rax        # 410d50 <__bss_start@@Base+0x5c0>
  403d4e:	lea    rcx,[rip+0x789b]        # 40b5f0 <_IO_stdin_used@@Base+0x5f0>
  403d55:	mov    edx,0x11d
  403d5a:	lea    rsi,[rip+0x72bf]        # 40b020 <_IO_stdin_used@@Base+0x20>
  403d61:	lea    rdi,[rip+0x7484]        # 40b1ec <_IO_stdin_used@@Base+0x1ec>
  403d68:	call   402370 <__assert_fail@plt>
  403d6d:	nop
  403d6e:	mov    rax,QWORD PTR [rbp-0x18]
  403d72:	xor    rax,QWORD PTR fs:0x28
  403d7b:	je     403d82 <if_statement_only@@Base+0x3b0>
  403d7d:	call   402340 <__stack_chk_fail@plt>
  403d82:	add    rsp,0x48
  403d86:	pop    rbx
  403d87:	pop    rbp
  403d88:	ret    

0000000000403d89 <if_else_statements@@Base>:
  403d89:	endbr64 
  403d8d:	push   rbp
  403d8e:	mov    rbp,rsp
  403d91:	push   rbx
  403d92:	sub    rsp,0x48
  403d96:	mov    rax,QWORD PTR fs:0x28
  403d9f:	mov    QWORD PTR [rbp-0x18],rax
  403da3:	xor    eax,eax
  403da5:	mov    rax,QWORD PTR [rip+0xce94]        # 410c40 <__bss_start@@Base+0x4b0>
  403dac:	inc    rax
  403daf:	mov    QWORD PTR [rip+0xce8a],rax        # 410c40 <__bss_start@@Base+0x4b0>
  403db6:	mov    QWORD PTR [rbp-0x48],0x0
  403dbe:	lea    rdx,[rbp-0x30]
  403dc2:	lea    rax,[rbp-0x50]
  403dc6:	mov    rsi,rdx
  403dc9:	mov    rdi,rax
  403dcc:	call   406cb8 <init_grammar@@Base>
  403dd1:	mov    rax,QWORD PTR [rip+0xce70]        # 410c48 <__bss_start@@Base+0x4b8>
  403dd8:	inc    rax
  403ddb:	mov    QWORD PTR [rip+0xce66],rax        # 410c48 <__bss_start@@Base+0x4b8>
  403de2:	mov    edi,0x3
  403de7:	call   4023f0 <malloc@plt>
  403dec:	mov    QWORD PTR [rbp-0x40],rax
  403df0:	mov    rax,QWORD PTR [rbp-0x40]
  403df4:	mov    BYTE PTR [rax],0x21
  403df7:	mov    rax,QWORD PTR [rbp-0x40]
  403dfb:	inc    rax
  403dfe:	mov    BYTE PTR [rax],0x3d
  403e01:	mov    rax,QWORD PTR [rbp-0x40]
  403e05:	add    rax,0x2
  403e09:	mov    BYTE PTR [rax],0x0
  403e0c:	mov    edi,0x58
  403e11:	call   4023f0 <malloc@plt>
  403e16:	mov    QWORD PTR [rbp-0x38],rax
  403e1a:	mov    edi,0x4
  403e1f:	call   4023f0 <malloc@plt>
  403e24:	mov    rdx,rax
  403e27:	mov    rax,QWORD PTR [rbp-0x38]
  403e2b:	mov    QWORD PTR [rax],rdx
  403e2e:	mov    rax,QWORD PTR [rbp-0x38]
  403e32:	mov    rax,QWORD PTR [rax]
  403e35:	mov    rdi,rax
  403e38:	call   405d83 <init_token_opar@@Base>
  403e3d:	mov    rax,QWORD PTR [rip+0xce0c]        # 410c50 <__bss_start@@Base+0x4c0>
  403e44:	inc    rax
  403e47:	mov    QWORD PTR [rip+0xce02],rax        # 410c50 <__bss_start@@Base+0x4c0>
  403e4e:	mov    rax,QWORD PTR [rbp-0x38]
  403e52:	lea    rbx,[rax+0x8]
  403e56:	mov    edi,0x8
  403e5b:	call   4023f0 <malloc@plt>
  403e60:	mov    QWORD PTR [rbx],rax
  403e63:	mov    rax,QWORD PTR [rbp-0x38]
  403e67:	add    rax,0x8
  403e6b:	mov    rax,QWORD PTR [rax]
  403e6e:	mov    esi,0x1
  403e73:	mov    rdi,rax
  403e76:	call   405d12 <init_token_int_value@@Base>
  403e7b:	mov    rax,QWORD PTR [rip+0xcdd6]        # 410c58 <__bss_start@@Base+0x4c8>
  403e82:	inc    rax
  403e85:	mov    QWORD PTR [rip+0xcdcc],rax        # 410c58 <__bss_start@@Base+0x4c8>
  403e8c:	mov    rax,QWORD PTR [rbp-0x38]
  403e90:	lea    rbx,[rax+0x10]
  403e94:	mov    edi,0x8
  403e99:	call   4023f0 <malloc@plt>
  403e9e:	mov    QWORD PTR [rbx],rax
  403ea1:	mov    rax,QWORD PTR [rbp-0x38]
  403ea5:	add    rax,0x10
  403ea9:	mov    rax,QWORD PTR [rax]
  403eac:	mov    esi,0x1
  403eb1:	mov    rdi,rax
  403eb4:	call   405d12 <init_token_int_value@@Base>
  403eb9:	mov    rax,QWORD PTR [rip+0xcda0]        # 410c60 <__bss_start@@Base+0x4d0>
  403ec0:	inc    rax
  403ec3:	mov    QWORD PTR [rip+0xcd96],rax        # 410c60 <__bss_start@@Base+0x4d0>
  403eca:	mov    rax,QWORD PTR [rbp-0x38]
  403ece:	lea    rbx,[rax+0x18]
  403ed2:	mov    edi,0x10
  403ed7:	call   4023f0 <malloc@plt>
  403edc:	mov    QWORD PTR [rbx],rax
  403edf:	mov    rax,QWORD PTR [rbp-0x38]
  403ee3:	add    rax,0x18
  403ee7:	mov    rax,QWORD PTR [rax]
  403eea:	mov    rdx,QWORD PTR [rbp-0x40]
  403eee:	mov    rsi,rdx
  403ef1:	mov    rdi,rax
  403ef4:	call   405efd <init_token_boolean_op@@Base>
  403ef9:	mov    rax,QWORD PTR [rip+0xcd68]        # 410c68 <__bss_start@@Base+0x4d8>
  403f00:	inc    rax
  403f03:	mov    QWORD PTR [rip+0xcd5e],rax        # 410c68 <__bss_start@@Base+0x4d8>
  403f0a:	mov    rax,QWORD PTR [rbp-0x38]
  403f0e:	lea    rbx,[rax+0x20]
  403f12:	mov    edi,0x8
  403f17:	call   4023f0 <malloc@plt>
  403f1c:	mov    QWORD PTR [rbx],rax
  403f1f:	mov    rax,QWORD PTR [rbp-0x38]
  403f23:	add    rax,0x20
  403f27:	mov    rax,QWORD PTR [rax]
  403f2a:	mov    esi,0x1
  403f2f:	mov    rdi,rax
  403f32:	call   405d12 <init_token_int_value@@Base>
  403f37:	mov    rax,QWORD PTR [rip+0xcd32]        # 410c70 <__bss_start@@Base+0x4e0>
  403f3e:	inc    rax
  403f41:	mov    QWORD PTR [rip+0xcd28],rax        # 410c70 <__bss_start@@Base+0x4e0>
  403f48:	mov    rax,QWORD PTR [rbp-0x38]
  403f4c:	lea    rbx,[rax+0x28]
  403f50:	mov    edi,0x4
  403f55:	call   4023f0 <malloc@plt>
  403f5a:	mov    QWORD PTR [rbx],rax
  403f5d:	mov    rax,QWORD PTR [rbp-0x38]
  403f61:	add    rax,0x28
  403f65:	mov    rax,QWORD PTR [rax]
  403f68:	mov    rdi,rax
  403f6b:	call   405dad <init_token_cpar@@Base>
  403f70:	mov    rax,QWORD PTR [rip+0xcd01]        # 410c78 <__bss_start@@Base+0x4e8>
  403f77:	inc    rax
  403f7a:	mov    QWORD PTR [rip+0xccf7],rax        # 410c78 <__bss_start@@Base+0x4e8>
  403f81:	mov    rax,QWORD PTR [rbp-0x38]
  403f85:	lea    rbx,[rax+0x30]
  403f89:	mov    edi,0x4
  403f8e:	call   4023f0 <malloc@plt>
  403f93:	mov    QWORD PTR [rbx],rax
  403f96:	mov    rax,QWORD PTR [rbp-0x38]
  403f9a:	add    rax,0x30
  403f9e:	mov    rax,QWORD PTR [rax]
  403fa1:	mov    rdi,rax
  403fa4:	call   405dd7 <init_token_obra@@Base>
  403fa9:	mov    rax,QWORD PTR [rip+0xccd0]        # 410c80 <__bss_start@@Base+0x4f0>
  403fb0:	inc    rax
  403fb3:	mov    QWORD PTR [rip+0xccc6],rax        # 410c80 <__bss_start@@Base+0x4f0>
  403fba:	mov    rax,QWORD PTR [rbp-0x38]
  403fbe:	lea    rbx,[rax+0x38]
  403fc2:	mov    edi,0x4
  403fc7:	call   4023f0 <malloc@plt>
  403fcc:	mov    QWORD PTR [rbx],rax
  403fcf:	mov    rax,QWORD PTR [rbp-0x38]
  403fd3:	add    rax,0x38
  403fd7:	mov    rax,QWORD PTR [rax]
  403fda:	mov    rdi,rax
  403fdd:	call   405e01 <init_token_cbra@@Base>
  403fe2:	mov    rax,QWORD PTR [rip+0xcc9f]        # 410c88 <__bss_start@@Base+0x4f8>
  403fe9:	inc    rax
  403fec:	mov    QWORD PTR [rip+0xcc95],rax        # 410c88 <__bss_start@@Base+0x4f8>
  403ff3:	mov    rax,QWORD PTR [rbp-0x38]
  403ff7:	lea    rbx,[rax+0x40]
  403ffb:	mov    edi,0x4
  404000:	call   4023f0 <malloc@plt>
  404005:	mov    QWORD PTR [rbx],rax
  404008:	mov    rax,QWORD PTR [rbp-0x38]
  40400c:	add    rax,0x40
  404010:	mov    rax,QWORD PTR [rax]
  404013:	mov    rdi,rax
  404016:	call   405ed3 <init_token_else@@Base>
  40401b:	mov    rax,QWORD PTR [rip+0xcc6e]        # 410c90 <__bss_start@@Base+0x500>
  404022:	inc    rax
  404025:	mov    QWORD PTR [rip+0xcc64],rax        # 410c90 <__bss_start@@Base+0x500>
  40402c:	mov    rax,QWORD PTR [rbp-0x38]
  404030:	lea    rbx,[rax+0x48]
  404034:	mov    edi,0x4
  404039:	call   4023f0 <malloc@plt>
  40403e:	mov    QWORD PTR [rbx],rax
  404041:	mov    rax,QWORD PTR [rbp-0x38]
  404045:	add    rax,0x48
  404049:	mov    rax,QWORD PTR [rax]
  40404c:	mov    rdi,rax
  40404f:	call   405dd7 <init_token_obra@@Base>
  404054:	mov    rax,QWORD PTR [rip+0xcc3d]        # 410c98 <__bss_start@@Base+0x508>
  40405b:	inc    rax
  40405e:	mov    QWORD PTR [rip+0xcc33],rax        # 410c98 <__bss_start@@Base+0x508>
  404065:	mov    rax,QWORD PTR [rbp-0x38]
  404069:	lea    rbx,[rax+0x50]
  40406d:	mov    edi,0x4
  404072:	call   4023f0 <malloc@plt>
  404077:	mov    QWORD PTR [rbx],rax
  40407a:	mov    rax,QWORD PTR [rbp-0x38]
  40407e:	add    rax,0x50
  404082:	mov    rax,QWORD PTR [rax]
  404085:	mov    rdi,rax
  404088:	call   405e01 <init_token_cbra@@Base>
  40408d:	mov    rax,QWORD PTR [rip+0xcc0c]        # 410ca0 <__bss_start@@Base+0x510>
  404094:	inc    rax
  404097:	mov    QWORD PTR [rip+0xcc02],rax        # 410ca0 <__bss_start@@Base+0x510>
  40409e:	mov    rax,0x411aa0
  4040a5:	mov    rdx,QWORD PTR [rbp-0x38]
  4040a9:	mov    QWORD PTR [rax+0x1b8],rdx
  4040b0:	mov    rax,0x411aa0
  4040b7:	mov    DWORD PTR [rax+0x1b0],0xb
  4040c1:	lea    rax,[rbp-0x50]
  4040c5:	mov    rdi,rax
  4040c8:	call   407374 <read_if_statement@@Base>
  4040cd:	mov    QWORD PTR [rbp-0x48],rax
  4040d1:	mov    rax,0x411aa0
  4040d8:	mov    eax,DWORD PTR [rax+0x198]
  4040de:	cmp    eax,0xb
  4040e1:	je     404113 <if_else_statements@@Base+0x38a>
  4040e3:	mov    rax,QWORD PTR [rip+0xcbbe]        # 410ca8 <__bss_start@@Base+0x518>
  4040ea:	inc    rax
  4040ed:	mov    QWORD PTR [rip+0xcbb4],rax        # 410ca8 <__bss_start@@Base+0x518>
  4040f4:	lea    rcx,[rip+0x7515]        # 40b610 <_IO_stdin_used@@Base+0x610>
  4040fb:	mov    edx,0x14c
  404100:	lea    rsi,[rip+0x6f19]        # 40b020 <_IO_stdin_used@@Base+0x20>
  404107:	lea    rdi,[rip+0x70f0]        # 40b1fe <_IO_stdin_used@@Base+0x1fe>
  40410e:	call   402370 <__assert_fail@plt>
  404113:	cmp    QWORD PTR [rbp-0x48],0x0
  404118:	jne    40414a <if_else_statements@@Base+0x3c1>
  40411a:	mov    rax,QWORD PTR [rip+0xcb97]        # 410cb8 <__bss_start@@Base+0x528>
  404121:	inc    rax
  404124:	mov    QWORD PTR [rip+0xcb8d],rax        # 410cb8 <__bss_start@@Base+0x528>
  40412b:	lea    rcx,[rip+0x74de]        # 40b610 <_IO_stdin_used@@Base+0x610>
  404132:	mov    edx,0x14d
  404137:	lea    rsi,[rip+0x6ee2]        # 40b020 <_IO_stdin_used@@Base+0x20>
  40413e:	lea    rdi,[rip+0x709b]        # 40b1e0 <_IO_stdin_used@@Base+0x1e0>
  404145:	call   402370 <__assert_fail@plt>
  40414a:	mov    rax,QWORD PTR [rip+0xcb5f]        # 410cb0 <__bss_start@@Base+0x520>
  404151:	inc    rax
  404154:	mov    QWORD PTR [rip+0xcb55],rax        # 410cb0 <__bss_start@@Base+0x520>
  40415b:	mov    rax,QWORD PTR [rbp-0x48]
  40415f:	mov    eax,DWORD PTR [rax]
  404161:	cmp    eax,0x4
  404164:	je     404196 <if_else_statements@@Base+0x40d>
  404166:	mov    rax,QWORD PTR [rip+0xcb53]        # 410cc0 <__bss_start@@Base+0x530>
  40416d:	inc    rax
  404170:	mov    QWORD PTR [rip+0xcb49],rax        # 410cc0 <__bss_start@@Base+0x530>
  404177:	lea    rcx,[rip+0x7492]        # 40b610 <_IO_stdin_used@@Base+0x610>
  40417e:	mov    edx,0x14e
  404183:	lea    rsi,[rip+0x6e96]        # 40b020 <_IO_stdin_used@@Base+0x20>
  40418a:	lea    rdi,[rip+0x705b]        # 40b1ec <_IO_stdin_used@@Base+0x1ec>
  404191:	call   402370 <__assert_fail@plt>
  404196:	nop
  404197:	mov    rax,QWORD PTR [rbp-0x18]
  40419b:	xor    rax,QWORD PTR fs:0x28
  4041a4:	je     4041ab <if_else_statements@@Base+0x422>
  4041a6:	call   402340 <__stack_chk_fail@plt>
  4041ab:	add    rsp,0x48
  4041af:	pop    rbx
  4041b0:	pop    rbp
  4041b1:	ret    

00000000004041b2 <body_with_two_returns@@Base>:
  4041b2:	endbr64 
  4041b6:	push   rbp
  4041b7:	mov    rbp,rsp
  4041ba:	push   rbx
  4041bb:	sub    rsp,0x48
  4041bf:	mov    rax,QWORD PTR fs:0x28
  4041c8:	mov    QWORD PTR [rbp-0x18],rax
  4041cc:	xor    eax,eax
  4041ce:	mov    rax,QWORD PTR [rip+0xc9eb]        # 410bc0 <__bss_start@@Base+0x430>
  4041d5:	inc    rax
  4041d8:	mov    QWORD PTR [rip+0xc9e1],rax        # 410bc0 <__bss_start@@Base+0x430>
  4041df:	mov    QWORD PTR [rbp-0x40],0x0
  4041e7:	lea    rdx,[rbp-0x30]
  4041eb:	lea    rax,[rbp-0x48]
  4041ef:	mov    rsi,rdx
  4041f2:	mov    rdi,rax
  4041f5:	call   406cb8 <init_grammar@@Base>
  4041fa:	mov    rax,QWORD PTR [rip+0xc9c7]        # 410bc8 <__bss_start@@Base+0x438>
  404201:	inc    rax
  404204:	mov    QWORD PTR [rip+0xc9bd],rax        # 410bc8 <__bss_start@@Base+0x438>
  40420b:	mov    edi,0x40
  404210:	call   4023f0 <malloc@plt>
  404215:	mov    QWORD PTR [rbp-0x38],rax
  404219:	mov    edi,0x4
  40421e:	call   4023f0 <malloc@plt>
  404223:	mov    rdx,rax
  404226:	mov    rax,QWORD PTR [rbp-0x38]
  40422a:	mov    QWORD PTR [rax],rdx
  40422d:	mov    rax,QWORD PTR [rbp-0x38]
  404231:	mov    rax,QWORD PTR [rax]
  404234:	mov    rdi,rax
  404237:	call   405dd7 <init_token_obra@@Base>
  40423c:	mov    rax,QWORD PTR [rip+0xc98d]        # 410bd0 <__bss_start@@Base+0x440>
  404243:	inc    rax
  404246:	mov    QWORD PTR [rip+0xc983],rax        # 410bd0 <__bss_start@@Base+0x440>
  40424d:	mov    rax,QWORD PTR [rbp-0x38]
  404251:	lea    rbx,[rax+0x8]
  404255:	mov    edi,0x4
  40425a:	call   4023f0 <malloc@plt>
  40425f:	mov    QWORD PTR [rbx],rax
  404262:	mov    rax,QWORD PTR [rbp-0x38]
  404266:	add    rax,0x8
  40426a:	mov    rax,QWORD PTR [rax]
  40426d:	mov    rdi,rax
  404270:	call   405e2b <init_token_return@@Base>
  404275:	mov    rax,QWORD PTR [rip+0xc95c]        # 410bd8 <__bss_start@@Base+0x448>
  40427c:	inc    rax
  40427f:	mov    QWORD PTR [rip+0xc952],rax        # 410bd8 <__bss_start@@Base+0x448>
  404286:	mov    rax,QWORD PTR [rbp-0x38]
  40428a:	lea    rbx,[rax+0x10]
  40428e:	mov    edi,0x8
  404293:	call   4023f0 <malloc@plt>
  404298:	mov    QWORD PTR [rbx],rax
  40429b:	mov    rax,QWORD PTR [rbp-0x38]
  40429f:	add    rax,0x10
  4042a3:	mov    rax,QWORD PTR [rax]
  4042a6:	mov    esi,0x1
  4042ab:	mov    rdi,rax
  4042ae:	call   405d12 <init_token_int_value@@Base>
  4042b3:	mov    rax,QWORD PTR [rip+0xc926]        # 410be0 <__bss_start@@Base+0x450>
  4042ba:	inc    rax
  4042bd:	mov    QWORD PTR [rip+0xc91c],rax        # 410be0 <__bss_start@@Base+0x450>
  4042c4:	mov    rax,QWORD PTR [rbp-0x38]
  4042c8:	lea    rbx,[rax+0x18]
  4042cc:	mov    edi,0x4
  4042d1:	call   4023f0 <malloc@plt>
  4042d6:	mov    QWORD PTR [rbx],rax
  4042d9:	mov    rax,QWORD PTR [rbp-0x38]
  4042dd:	add    rax,0x18
  4042e1:	mov    rax,QWORD PTR [rax]
  4042e4:	mov    rdi,rax
  4042e7:	call   405e55 <init_token_semicolon@@Base>
  4042ec:	mov    rax,QWORD PTR [rip+0xc8f5]        # 410be8 <__bss_start@@Base+0x458>
  4042f3:	inc    rax
  4042f6:	mov    QWORD PTR [rip+0xc8eb],rax        # 410be8 <__bss_start@@Base+0x458>
  4042fd:	mov    rax,QWORD PTR [rbp-0x38]
  404301:	lea    rbx,[rax+0x20]
  404305:	mov    edi,0x4
  40430a:	call   4023f0 <malloc@plt>
  40430f:	mov    QWORD PTR [rbx],rax
  404312:	mov    rax,QWORD PTR [rbp-0x38]
  404316:	add    rax,0x20
  40431a:	mov    rax,QWORD PTR [rax]
  40431d:	mov    rdi,rax
  404320:	call   405e2b <init_token_return@@Base>
  404325:	mov    rax,QWORD PTR [rip+0xc8c4]        # 410bf0 <__bss_start@@Base+0x460>
  40432c:	inc    rax
  40432f:	mov    QWORD PTR [rip+0xc8ba],rax        # 410bf0 <__bss_start@@Base+0x460>
  404336:	mov    rax,QWORD PTR [rbp-0x38]
  40433a:	lea    rbx,[rax+0x28]
  40433e:	mov    edi,0x8
  404343:	call   4023f0 <malloc@plt>
  404348:	mov    QWORD PTR [rbx],rax
  40434b:	mov    rax,QWORD PTR [rbp-0x38]
  40434f:	add    rax,0x28
  404353:	mov    rax,QWORD PTR [rax]
  404356:	mov    esi,0x1
  40435b:	mov    rdi,rax
  40435e:	call   405d12 <init_token_int_value@@Base>
  404363:	mov    rax,QWORD PTR [rip+0xc88e]        # 410bf8 <__bss_start@@Base+0x468>
  40436a:	inc    rax
  40436d:	mov    QWORD PTR [rip+0xc884],rax        # 410bf8 <__bss_start@@Base+0x468>
  404374:	mov    rax,QWORD PTR [rbp-0x38]
  404378:	lea    rbx,[rax+0x30]
  40437c:	mov    edi,0x4
  404381:	call   4023f0 <malloc@plt>
  404386:	mov    QWORD PTR [rbx],rax
  404389:	mov    rax,QWORD PTR [rbp-0x38]
  40438d:	add    rax,0x30
  404391:	mov    rax,QWORD PTR [rax]
  404394:	mov    rdi,rax
  404397:	call   405e55 <init_token_semicolon@@Base>
  40439c:	mov    rax,QWORD PTR [rip+0xc85d]        # 410c00 <__bss_start@@Base+0x470>
  4043a3:	inc    rax
  4043a6:	mov    QWORD PTR [rip+0xc853],rax        # 410c00 <__bss_start@@Base+0x470>
  4043ad:	mov    rax,QWORD PTR [rbp-0x38]
  4043b1:	lea    rbx,[rax+0x38]
  4043b5:	mov    edi,0x4
  4043ba:	call   4023f0 <malloc@plt>
  4043bf:	mov    QWORD PTR [rbx],rax
  4043c2:	mov    rax,QWORD PTR [rbp-0x38]
  4043c6:	add    rax,0x38
  4043ca:	mov    rax,QWORD PTR [rax]
  4043cd:	mov    rdi,rax
  4043d0:	call   405e01 <init_token_cbra@@Base>
  4043d5:	mov    rax,QWORD PTR [rip+0xc82c]        # 410c08 <__bss_start@@Base+0x478>
  4043dc:	inc    rax
  4043df:	mov    QWORD PTR [rip+0xc822],rax        # 410c08 <__bss_start@@Base+0x478>
  4043e6:	mov    rax,0x411aa0
  4043ed:	mov    rdx,QWORD PTR [rbp-0x38]
  4043f1:	mov    QWORD PTR [rax+0x1b8],rdx
  4043f8:	mov    rax,0x411aa0
  4043ff:	mov    DWORD PTR [rax+0x1b0],0x8
  404409:	lea    rax,[rbp-0x48]
  40440d:	mov    rdi,rax
  404410:	call   406f92 <read_body@@Base>
  404415:	mov    QWORD PTR [rbp-0x40],rax
  404419:	mov    rax,0x411aa0
  404420:	mov    eax,DWORD PTR [rax+0x198]
  404426:	cmp    eax,0x8
  404429:	je     40445b <body_with_two_returns@@Base+0x2a9>
  40442b:	mov    rax,QWORD PTR [rip+0xc7de]        # 410c10 <__bss_start@@Base+0x480>
  404432:	inc    rax
  404435:	mov    QWORD PTR [rip+0xc7d4],rax        # 410c10 <__bss_start@@Base+0x480>
  40443c:	lea    rcx,[rip+0x71ed]        # 40b630 <_IO_stdin_used@@Base+0x630>
  404443:	mov    edx,0x173
  404448:	lea    rsi,[rip+0x6bd1]        # 40b020 <_IO_stdin_used@@Base+0x20>
  40444f:	lea    rdi,[rip+0x6dc3]        # 40b219 <_IO_stdin_used@@Base+0x219>
  404456:	call   402370 <__assert_fail@plt>
  40445b:	cmp    QWORD PTR [rbp-0x40],0x0
  404460:	jne    404492 <body_with_two_returns@@Base+0x2e0>
  404462:	mov    rax,QWORD PTR [rip+0xc7b7]        # 410c20 <__bss_start@@Base+0x490>
  404469:	inc    rax
  40446c:	mov    QWORD PTR [rip+0xc7ad],rax        # 410c20 <__bss_start@@Base+0x490>
  404473:	lea    rcx,[rip+0x71b6]        # 40b630 <_IO_stdin_used@@Base+0x630>
  40447a:	mov    edx,0x174
  40447f:	lea    rsi,[rip+0x6b9a]        # 40b020 <_IO_stdin_used@@Base+0x20>
  404486:	lea    rdi,[rip+0x6d53]        # 40b1e0 <_IO_stdin_used@@Base+0x1e0>
  40448d:	call   402370 <__assert_fail@plt>
  404492:	mov    rax,QWORD PTR [rip+0xc77f]        # 410c18 <__bss_start@@Base+0x488>
  404499:	inc    rax
  40449c:	mov    QWORD PTR [rip+0xc775],rax        # 410c18 <__bss_start@@Base+0x488>
  4044a3:	mov    rax,QWORD PTR [rbp-0x40]
  4044a7:	mov    eax,DWORD PTR [rax]
  4044a9:	cmp    eax,0x3
  4044ac:	je     4044de <body_with_two_returns@@Base+0x32c>
  4044ae:	mov    rax,QWORD PTR [rip+0xc773]        # 410c28 <__bss_start@@Base+0x498>
  4044b5:	inc    rax
  4044b8:	mov    QWORD PTR [rip+0xc769],rax        # 410c28 <__bss_start@@Base+0x498>
  4044bf:	lea    rcx,[rip+0x716a]        # 40b630 <_IO_stdin_used@@Base+0x630>
  4044c6:	mov    edx,0x175
  4044cb:	lea    rsi,[rip+0x6b4e]        # 40b020 <_IO_stdin_used@@Base+0x20>
  4044d2:	lea    rdi,[rip+0x6d5a]        # 40b233 <_IO_stdin_used@@Base+0x233>
  4044d9:	call   402370 <__assert_fail@plt>
  4044de:	mov    rax,QWORD PTR [rbp-0x40]
  4044e2:	mov    rax,QWORD PTR [rax+0x8]
  4044e6:	mov    eax,DWORD PTR [rax]
  4044e8:	cmp    eax,0x3
  4044eb:	je     40451d <body_with_two_returns@@Base+0x36b>
  4044ed:	mov    rax,QWORD PTR [rip+0xc73c]        # 410c30 <__bss_start@@Base+0x4a0>
  4044f4:	inc    rax
  4044f7:	mov    QWORD PTR [rip+0xc732],rax        # 410c30 <__bss_start@@Base+0x4a0>
  4044fe:	lea    rcx,[rip+0x712b]        # 40b630 <_IO_stdin_used@@Base+0x630>
  404505:	mov    edx,0x176
  40450a:	lea    rsi,[rip+0x6b0f]        # 40b020 <_IO_stdin_used@@Base+0x20>
  404511:	lea    rdi,[rip+0x6d31]        # 40b249 <_IO_stdin_used@@Base+0x249>
  404518:	call   402370 <__assert_fail@plt>
  40451d:	mov    rax,QWORD PTR [rbp-0x40]
  404521:	mov    rax,QWORD PTR [rax+0x8]
  404525:	mov    rax,QWORD PTR [rax+0x8]
  404529:	test   rax,rax
  40452c:	je     40455e <body_with_two_returns@@Base+0x3ac>
  40452e:	mov    rax,QWORD PTR [rip+0xc703]        # 410c38 <__bss_start@@Base+0x4a8>
  404535:	inc    rax
  404538:	mov    QWORD PTR [rip+0xc6f9],rax        # 410c38 <__bss_start@@Base+0x4a8>
  40453f:	lea    rcx,[rip+0x70ea]        # 40b630 <_IO_stdin_used@@Base+0x630>
  404546:	mov    edx,0x177
  40454b:	lea    rsi,[rip+0x6ace]        # 40b020 <_IO_stdin_used@@Base+0x20>
  404552:	lea    rdi,[rip+0x6d0c]        # 40b265 <_IO_stdin_used@@Base+0x265>
  404559:	call   402370 <__assert_fail@plt>
  40455e:	nop
  40455f:	mov    rax,QWORD PTR [rbp-0x18]
  404563:	xor    rax,QWORD PTR fs:0x28
  40456c:	je     404573 <body_with_two_returns@@Base+0x3c1>
  40456e:	call   402340 <__stack_chk_fail@plt>
  404573:	add    rsp,0x48
  404577:	pop    rbx
  404578:	pop    rbp
  404579:	ret    

000000000040457a <body_with_one_return@@Base>:
  40457a:	endbr64 
  40457e:	push   rbp
  40457f:	mov    rbp,rsp
  404582:	push   rbx
  404583:	sub    rsp,0x48
  404587:	mov    rax,QWORD PTR fs:0x28
  404590:	mov    QWORD PTR [rbp-0x18],rax
  404594:	xor    eax,eax
  404596:	mov    rax,QWORD PTR [rip+0xc5c3]        # 410b60 <__bss_start@@Base+0x3d0>
  40459d:	inc    rax
  4045a0:	mov    QWORD PTR [rip+0xc5b9],rax        # 410b60 <__bss_start@@Base+0x3d0>
  4045a7:	mov    QWORD PTR [rbp-0x40],0x0
  4045af:	lea    rdx,[rbp-0x30]
  4045b3:	lea    rax,[rbp-0x48]
  4045b7:	mov    rsi,rdx
  4045ba:	mov    rdi,rax
  4045bd:	call   406cb8 <init_grammar@@Base>
  4045c2:	mov    rax,QWORD PTR [rip+0xc59f]        # 410b68 <__bss_start@@Base+0x3d8>
  4045c9:	inc    rax
  4045cc:	mov    QWORD PTR [rip+0xc595],rax        # 410b68 <__bss_start@@Base+0x3d8>
  4045d3:	mov    edi,0x28
  4045d8:	call   4023f0 <malloc@plt>
  4045dd:	mov    QWORD PTR [rbp-0x38],rax
  4045e1:	mov    edi,0x4
  4045e6:	call   4023f0 <malloc@plt>
  4045eb:	mov    rdx,rax
  4045ee:	mov    rax,QWORD PTR [rbp-0x38]
  4045f2:	mov    QWORD PTR [rax],rdx
  4045f5:	mov    rax,QWORD PTR [rbp-0x38]
  4045f9:	mov    rax,QWORD PTR [rax]
  4045fc:	mov    rdi,rax
  4045ff:	call   405dd7 <init_token_obra@@Base>
  404604:	mov    rax,QWORD PTR [rip+0xc565]        # 410b70 <__bss_start@@Base+0x3e0>
  40460b:	inc    rax
  40460e:	mov    QWORD PTR [rip+0xc55b],rax        # 410b70 <__bss_start@@Base+0x3e0>
  404615:	mov    rax,QWORD PTR [rbp-0x38]
  404619:	lea    rbx,[rax+0x8]
  40461d:	mov    edi,0x4
  404622:	call   4023f0 <malloc@plt>
  404627:	mov    QWORD PTR [rbx],rax
  40462a:	mov    rax,QWORD PTR [rbp-0x38]
  40462e:	add    rax,0x8
  404632:	mov    rax,QWORD PTR [rax]
  404635:	mov    rdi,rax
  404638:	call   405e2b <init_token_return@@Base>
  40463d:	mov    rax,QWORD PTR [rip+0xc534]        # 410b78 <__bss_start@@Base+0x3e8>
  404644:	inc    rax
  404647:	mov    QWORD PTR [rip+0xc52a],rax        # 410b78 <__bss_start@@Base+0x3e8>
  40464e:	mov    rax,QWORD PTR [rbp-0x38]
  404652:	lea    rbx,[rax+0x10]
  404656:	mov    edi,0x8
  40465b:	call   4023f0 <malloc@plt>
  404660:	mov    QWORD PTR [rbx],rax
  404663:	mov    rax,QWORD PTR [rbp-0x38]
  404667:	add    rax,0x10
  40466b:	mov    rax,QWORD PTR [rax]
  40466e:	mov    esi,0x1
  404673:	mov    rdi,rax
  404676:	call   405d12 <init_token_int_value@@Base>
  40467b:	mov    rax,QWORD PTR [rip+0xc4fe]        # 410b80 <__bss_start@@Base+0x3f0>
  404682:	inc    rax
  404685:	mov    QWORD PTR [rip+0xc4f4],rax        # 410b80 <__bss_start@@Base+0x3f0>
  40468c:	mov    rax,QWORD PTR [rbp-0x38]
  404690:	lea    rbx,[rax+0x18]
  404694:	mov    edi,0x4
  404699:	call   4023f0 <malloc@plt>
  40469e:	mov    QWORD PTR [rbx],rax
  4046a1:	mov    rax,QWORD PTR [rbp-0x38]
  4046a5:	add    rax,0x18
  4046a9:	mov    rax,QWORD PTR [rax]
  4046ac:	mov    rdi,rax
  4046af:	call   405e55 <init_token_semicolon@@Base>
  4046b4:	mov    rax,QWORD PTR [rip+0xc4cd]        # 410b88 <__bss_start@@Base+0x3f8>
  4046bb:	inc    rax
  4046be:	mov    QWORD PTR [rip+0xc4c3],rax        # 410b88 <__bss_start@@Base+0x3f8>
  4046c5:	mov    rax,QWORD PTR [rbp-0x38]
  4046c9:	lea    rbx,[rax+0x20]
  4046cd:	mov    edi,0x4
  4046d2:	call   4023f0 <malloc@plt>
  4046d7:	mov    QWORD PTR [rbx],rax
  4046da:	mov    rax,QWORD PTR [rbp-0x38]
  4046de:	add    rax,0x20
  4046e2:	mov    rax,QWORD PTR [rax]
  4046e5:	mov    rdi,rax
  4046e8:	call   405e01 <init_token_cbra@@Base>
  4046ed:	mov    rax,QWORD PTR [rip+0xc49c]        # 410b90 <__bss_start@@Base+0x400>
  4046f4:	inc    rax
  4046f7:	mov    QWORD PTR [rip+0xc492],rax        # 410b90 <__bss_start@@Base+0x400>
  4046fe:	mov    rax,0x411aa0
  404705:	mov    rdx,QWORD PTR [rbp-0x38]
  404709:	mov    QWORD PTR [rax+0x1b8],rdx
  404710:	mov    rax,0x411aa0
  404717:	mov    DWORD PTR [rax+0x1b0],0x5
  404721:	lea    rax,[rbp-0x48]
  404725:	mov    rdi,rax
  404728:	call   406f92 <read_body@@Base>
  40472d:	mov    QWORD PTR [rbp-0x40],rax
  404731:	mov    rax,0x411aa0
  404738:	mov    eax,DWORD PTR [rax+0x198]
  40473e:	cmp    eax,0x5
  404741:	je     404773 <body_with_one_return@@Base+0x1f9>
  404743:	mov    rax,QWORD PTR [rip+0xc44e]        # 410b98 <__bss_start@@Base+0x408>
  40474a:	inc    rax
  40474d:	mov    QWORD PTR [rip+0xc444],rax        # 410b98 <__bss_start@@Base+0x408>
  404754:	lea    rcx,[rip+0x6ef5]        # 40b650 <_IO_stdin_used@@Base+0x650>
  40475b:	mov    edx,0x196
  404760:	lea    rsi,[rip+0x68b9]        # 40b020 <_IO_stdin_used@@Base+0x20>
  404767:	lea    rdi,[rip+0x6950]        # 40b0be <_IO_stdin_used@@Base+0xbe>
  40476e:	call   402370 <__assert_fail@plt>
  404773:	cmp    QWORD PTR [rbp-0x40],0x0
  404778:	jne    4047aa <body_with_one_return@@Base+0x230>
  40477a:	mov    rax,QWORD PTR [rip+0xc427]        # 410ba8 <__bss_start@@Base+0x418>
  404781:	inc    rax
  404784:	mov    QWORD PTR [rip+0xc41d],rax        # 410ba8 <__bss_start@@Base+0x418>
  40478b:	lea    rcx,[rip+0x6ebe]        # 40b650 <_IO_stdin_used@@Base+0x650>
  404792:	mov    edx,0x197
  404797:	lea    rsi,[rip+0x6882]        # 40b020 <_IO_stdin_used@@Base+0x20>
  40479e:	lea    rdi,[rip+0x6a3b]        # 40b1e0 <_IO_stdin_used@@Base+0x1e0>
  4047a5:	call   402370 <__assert_fail@plt>
  4047aa:	mov    rax,QWORD PTR [rip+0xc3ef]        # 410ba0 <__bss_start@@Base+0x410>
  4047b1:	inc    rax
  4047b4:	mov    QWORD PTR [rip+0xc3e5],rax        # 410ba0 <__bss_start@@Base+0x410>
  4047bb:	mov    rax,QWORD PTR [rbp-0x40]
  4047bf:	mov    eax,DWORD PTR [rax]
  4047c1:	cmp    eax,0x3
  4047c4:	je     4047f6 <body_with_one_return@@Base+0x27c>
  4047c6:	mov    rax,QWORD PTR [rip+0xc3e3]        # 410bb0 <__bss_start@@Base+0x420>
  4047cd:	inc    rax
  4047d0:	mov    QWORD PTR [rip+0xc3d9],rax        # 410bb0 <__bss_start@@Base+0x420>
  4047d7:	lea    rcx,[rip+0x6e72]        # 40b650 <_IO_stdin_used@@Base+0x650>
  4047de:	mov    edx,0x198
  4047e3:	lea    rsi,[rip+0x6836]        # 40b020 <_IO_stdin_used@@Base+0x20>
  4047ea:	lea    rdi,[rip+0x6a42]        # 40b233 <_IO_stdin_used@@Base+0x233>
  4047f1:	call   402370 <__assert_fail@plt>
  4047f6:	mov    rax,QWORD PTR [rbp-0x40]
  4047fa:	mov    rax,QWORD PTR [rax+0x8]
  4047fe:	test   rax,rax
  404801:	je     404833 <body_with_one_return@@Base+0x2b9>
  404803:	mov    rax,QWORD PTR [rip+0xc3ae]        # 410bb8 <__bss_start@@Base+0x428>
  40480a:	inc    rax
  40480d:	mov    QWORD PTR [rip+0xc3a4],rax        # 410bb8 <__bss_start@@Base+0x428>
  404814:	lea    rcx,[rip+0x6e35]        # 40b650 <_IO_stdin_used@@Base+0x650>
  40481b:	mov    edx,0x199
  404820:	lea    rsi,[rip+0x67f9]        # 40b020 <_IO_stdin_used@@Base+0x20>
  404827:	lea    rdi,[rip+0x6a4f]        # 40b27d <_IO_stdin_used@@Base+0x27d>
  40482e:	call   402370 <__assert_fail@plt>
  404833:	nop
  404834:	mov    rax,QWORD PTR [rbp-0x18]
  404838:	xor    rax,QWORD PTR fs:0x28
  404841:	je     404848 <body_with_one_return@@Base+0x2ce>
  404843:	call   402340 <__stack_chk_fail@plt>
  404848:	add    rsp,0x48
  40484c:	pop    rbx
  40484d:	pop    rbp
  40484e:	ret    

000000000040484f <if_statement_inside_if_statement@@Base>:
  40484f:	endbr64 
  404853:	push   rbp
  404854:	mov    rbp,rsp
  404857:	push   rbx
  404858:	sub    rsp,0x58
  40485c:	mov    rax,QWORD PTR fs:0x28
  404865:	mov    QWORD PTR [rbp-0x18],rax
  404869:	xor    eax,eax
  40486b:	mov    rax,QWORD PTR [rip+0xc20e]        # 410a80 <__bss_start@@Base+0x2f0>
  404872:	inc    rax
  404875:	mov    QWORD PTR [rip+0xc204],rax        # 410a80 <__bss_start@@Base+0x2f0>
  40487c:	mov    QWORD PTR [rbp-0x50],0x0
  404884:	lea    rdx,[rbp-0x30]
  404888:	lea    rax,[rbp-0x58]
  40488c:	mov    rsi,rdx
  40488f:	mov    rdi,rax
  404892:	call   406cb8 <init_grammar@@Base>
  404897:	mov    rax,QWORD PTR [rip+0xc1ea]        # 410a88 <__bss_start@@Base+0x2f8>
  40489e:	inc    rax
  4048a1:	mov    QWORD PTR [rip+0xc1e0],rax        # 410a88 <__bss_start@@Base+0x2f8>
  4048a8:	mov    edi,0x3
  4048ad:	call   4023f0 <malloc@plt>
  4048b2:	mov    QWORD PTR [rbp-0x48],rax
  4048b6:	mov    edi,0x3
  4048bb:	call   4023f0 <malloc@plt>
  4048c0:	mov    QWORD PTR [rbp-0x40],rax
  4048c4:	mov    rax,QWORD PTR [rbp-0x48]
  4048c8:	mov    BYTE PTR [rax],0x21
  4048cb:	mov    rax,QWORD PTR [rbp-0x48]
  4048cf:	inc    rax
  4048d2:	mov    BYTE PTR [rax],0x3d
  4048d5:	mov    rax,QWORD PTR [rbp-0x48]
  4048d9:	add    rax,0x2
  4048dd:	mov    BYTE PTR [rax],0x0
  4048e0:	mov    rax,QWORD PTR [rbp-0x40]
  4048e4:	mov    BYTE PTR [rax],0x21
  4048e7:	mov    rax,QWORD PTR [rbp-0x40]
  4048eb:	inc    rax
  4048ee:	mov    BYTE PTR [rax],0x3d
  4048f1:	mov    rax,QWORD PTR [rbp-0x40]
  4048f5:	add    rax,0x2
  4048f9:	mov    BYTE PTR [rax],0x0
  4048fc:	mov    edi,0x98
  404901:	call   4023f0 <malloc@plt>
  404906:	mov    QWORD PTR [rbp-0x38],rax
  40490a:	mov    edi,0x4
  40490f:	call   4023f0 <malloc@plt>
  404914:	mov    rdx,rax
  404917:	mov    rax,QWORD PTR [rbp-0x38]
  40491b:	mov    QWORD PTR [rax],rdx
  40491e:	mov    rax,QWORD PTR [rbp-0x38]
  404922:	mov    rax,QWORD PTR [rax]
  404925:	mov    rdi,rax
  404928:	call   405d83 <init_token_opar@@Base>
  40492d:	mov    rax,QWORD PTR [rip+0xc15c]        # 410a90 <__bss_start@@Base+0x300>
  404934:	inc    rax
  404937:	mov    QWORD PTR [rip+0xc152],rax        # 410a90 <__bss_start@@Base+0x300>
  40493e:	mov    rax,QWORD PTR [rbp-0x38]
  404942:	lea    rbx,[rax+0x8]
  404946:	mov    edi,0x8
  40494b:	call   4023f0 <malloc@plt>
  404950:	mov    QWORD PTR [rbx],rax
  404953:	mov    rax,QWORD PTR [rbp-0x38]
  404957:	add    rax,0x8
  40495b:	mov    rax,QWORD PTR [rax]
  40495e:	mov    esi,0x1
  404963:	mov    rdi,rax
  404966:	call   405d12 <init_token_int_value@@Base>
  40496b:	mov    rax,QWORD PTR [rip+0xc126]        # 410a98 <__bss_start@@Base+0x308>
  404972:	inc    rax
  404975:	mov    QWORD PTR [rip+0xc11c],rax        # 410a98 <__bss_start@@Base+0x308>
  40497c:	mov    rax,QWORD PTR [rbp-0x38]
  404980:	lea    rbx,[rax+0x10]
  404984:	mov    edi,0x8
  404989:	call   4023f0 <malloc@plt>
  40498e:	mov    QWORD PTR [rbx],rax
  404991:	mov    rax,QWORD PTR [rbp-0x38]
  404995:	add    rax,0x10
  404999:	mov    rax,QWORD PTR [rax]
  40499c:	mov    esi,0x1
  4049a1:	mov    rdi,rax
  4049a4:	call   405d12 <init_token_int_value@@Base>
  4049a9:	mov    rax,QWORD PTR [rip+0xc0f0]        # 410aa0 <__bss_start@@Base+0x310>
  4049b0:	inc    rax
  4049b3:	mov    QWORD PTR [rip+0xc0e6],rax        # 410aa0 <__bss_start@@Base+0x310>
  4049ba:	mov    rax,QWORD PTR [rbp-0x38]
  4049be:	lea    rbx,[rax+0x18]
  4049c2:	mov    edi,0x10
  4049c7:	call   4023f0 <malloc@plt>
  4049cc:	mov    QWORD PTR [rbx],rax
  4049cf:	mov    rax,QWORD PTR [rbp-0x38]
  4049d3:	add    rax,0x18
  4049d7:	mov    rax,QWORD PTR [rax]
  4049da:	mov    rdx,QWORD PTR [rbp-0x48]
  4049de:	mov    rsi,rdx
  4049e1:	mov    rdi,rax
  4049e4:	call   405efd <init_token_boolean_op@@Base>
  4049e9:	mov    rax,QWORD PTR [rip+0xc0b8]        # 410aa8 <__bss_start@@Base+0x318>
  4049f0:	inc    rax
  4049f3:	mov    QWORD PTR [rip+0xc0ae],rax        # 410aa8 <__bss_start@@Base+0x318>
  4049fa:	mov    rax,QWORD PTR [rbp-0x38]
  4049fe:	lea    rbx,[rax+0x20]
  404a02:	mov    edi,0x8
  404a07:	call   4023f0 <malloc@plt>
  404a0c:	mov    QWORD PTR [rbx],rax
  404a0f:	mov    rax,QWORD PTR [rbp-0x38]
  404a13:	add    rax,0x20
  404a17:	mov    rax,QWORD PTR [rax]
  404a1a:	mov    esi,0x1
  404a1f:	mov    rdi,rax
  404a22:	call   405d12 <init_token_int_value@@Base>
  404a27:	mov    rax,QWORD PTR [rip+0xc082]        # 410ab0 <__bss_start@@Base+0x320>
  404a2e:	inc    rax
  404a31:	mov    QWORD PTR [rip+0xc078],rax        # 410ab0 <__bss_start@@Base+0x320>
  404a38:	mov    rax,QWORD PTR [rbp-0x38]
  404a3c:	lea    rbx,[rax+0x28]
  404a40:	mov    edi,0x4
  404a45:	call   4023f0 <malloc@plt>
  404a4a:	mov    QWORD PTR [rbx],rax
  404a4d:	mov    rax,QWORD PTR [rbp-0x38]
  404a51:	add    rax,0x28
  404a55:	mov    rax,QWORD PTR [rax]
  404a58:	mov    rdi,rax
  404a5b:	call   405dad <init_token_cpar@@Base>
  404a60:	mov    rax,QWORD PTR [rip+0xc051]        # 410ab8 <__bss_start@@Base+0x328>
  404a67:	inc    rax
  404a6a:	mov    QWORD PTR [rip+0xc047],rax        # 410ab8 <__bss_start@@Base+0x328>
  404a71:	mov    rax,QWORD PTR [rbp-0x38]
  404a75:	lea    rbx,[rax+0x30]
  404a79:	mov    edi,0x4
  404a7e:	call   4023f0 <malloc@plt>
  404a83:	mov    QWORD PTR [rbx],rax
  404a86:	mov    rax,QWORD PTR [rbp-0x38]
  404a8a:	add    rax,0x30
  404a8e:	mov    rax,QWORD PTR [rax]
  404a91:	mov    rdi,rax
  404a94:	call   405dd7 <init_token_obra@@Base>
  404a99:	mov    rax,QWORD PTR [rip+0xc020]        # 410ac0 <__bss_start@@Base+0x330>
  404aa0:	inc    rax
  404aa3:	mov    QWORD PTR [rip+0xc016],rax        # 410ac0 <__bss_start@@Base+0x330>
  404aaa:	mov    rax,QWORD PTR [rbp-0x38]
  404aae:	lea    rbx,[rax+0x38]
  404ab2:	mov    edi,0x4
  404ab7:	call   4023f0 <malloc@plt>
  404abc:	mov    QWORD PTR [rbx],rax
  404abf:	mov    rax,QWORD PTR [rbp-0x38]
  404ac3:	add    rax,0x38
  404ac7:	mov    rax,QWORD PTR [rax]
  404aca:	mov    rdi,rax
  404acd:	call   405ea9 <init_token_if@@Base>
  404ad2:	mov    rax,QWORD PTR [rip+0xbfef]        # 410ac8 <__bss_start@@Base+0x338>
  404ad9:	inc    rax
  404adc:	mov    QWORD PTR [rip+0xbfe5],rax        # 410ac8 <__bss_start@@Base+0x338>
  404ae3:	mov    rax,QWORD PTR [rbp-0x38]
  404ae7:	lea    rbx,[rax+0x40]
  404aeb:	mov    edi,0x4
  404af0:	call   4023f0 <malloc@plt>
  404af5:	mov    QWORD PTR [rbx],rax
  404af8:	mov    rax,QWORD PTR [rbp-0x38]
  404afc:	add    rax,0x40
  404b00:	mov    rax,QWORD PTR [rax]
  404b03:	mov    rdi,rax
  404b06:	call   405d83 <init_token_opar@@Base>
  404b0b:	mov    rax,QWORD PTR [rip+0xbfbe]        # 410ad0 <__bss_start@@Base+0x340>
  404b12:	inc    rax
  404b15:	mov    QWORD PTR [rip+0xbfb4],rax        # 410ad0 <__bss_start@@Base+0x340>
  404b1c:	mov    rax,QWORD PTR [rbp-0x38]
  404b20:	lea    rbx,[rax+0x48]
  404b24:	mov    edi,0x8
  404b29:	call   4023f0 <malloc@plt>
  404b2e:	mov    QWORD PTR [rbx],rax
  404b31:	mov    rax,QWORD PTR [rbp-0x38]
  404b35:	add    rax,0x48
  404b39:	mov    rax,QWORD PTR [rax]
  404b3c:	mov    esi,0x1
  404b41:	mov    rdi,rax
  404b44:	call   405d12 <init_token_int_value@@Base>
  404b49:	mov    rax,QWORD PTR [rip+0xbf88]        # 410ad8 <__bss_start@@Base+0x348>
  404b50:	inc    rax
  404b53:	mov    QWORD PTR [rip+0xbf7e],rax        # 410ad8 <__bss_start@@Base+0x348>
  404b5a:	mov    rax,QWORD PTR [rbp-0x38]
  404b5e:	lea    rbx,[rax+0x50]
  404b62:	mov    edi,0x8
  404b67:	call   4023f0 <malloc@plt>
  404b6c:	mov    QWORD PTR [rbx],rax
  404b6f:	mov    rax,QWORD PTR [rbp-0x38]
  404b73:	add    rax,0x50
  404b77:	mov    rax,QWORD PTR [rax]
  404b7a:	mov    esi,0x1
  404b7f:	mov    rdi,rax
  404b82:	call   405d12 <init_token_int_value@@Base>
  404b87:	mov    rax,QWORD PTR [rip+0xbf52]        # 410ae0 <__bss_start@@Base+0x350>
  404b8e:	inc    rax
  404b91:	mov    QWORD PTR [rip+0xbf48],rax        # 410ae0 <__bss_start@@Base+0x350>
  404b98:	mov    rax,QWORD PTR [rbp-0x38]
  404b9c:	lea    rbx,[rax+0x58]
  404ba0:	mov    edi,0x10
  404ba5:	call   4023f0 <malloc@plt>
  404baa:	mov    QWORD PTR [rbx],rax
  404bad:	mov    rax,QWORD PTR [rbp-0x38]
  404bb1:	add    rax,0x58
  404bb5:	mov    rax,QWORD PTR [rax]
  404bb8:	mov    rdx,QWORD PTR [rbp-0x40]
  404bbc:	mov    rsi,rdx
  404bbf:	mov    rdi,rax
  404bc2:	call   405efd <init_token_boolean_op@@Base>
  404bc7:	mov    rax,QWORD PTR [rip+0xbf1a]        # 410ae8 <__bss_start@@Base+0x358>
  404bce:	inc    rax
  404bd1:	mov    QWORD PTR [rip+0xbf10],rax        # 410ae8 <__bss_start@@Base+0x358>
  404bd8:	mov    rax,QWORD PTR [rbp-0x38]
  404bdc:	lea    rbx,[rax+0x60]
  404be0:	mov    edi,0x8
  404be5:	call   4023f0 <malloc@plt>
  404bea:	mov    QWORD PTR [rbx],rax
  404bed:	mov    rax,QWORD PTR [rbp-0x38]
  404bf1:	add    rax,0x60
  404bf5:	mov    rax,QWORD PTR [rax]
  404bf8:	mov    esi,0x1
  404bfd:	mov    rdi,rax
  404c00:	call   405d12 <init_token_int_value@@Base>
  404c05:	mov    rax,QWORD PTR [rip+0xbee4]        # 410af0 <__bss_start@@Base+0x360>
  404c0c:	inc    rax
  404c0f:	mov    QWORD PTR [rip+0xbeda],rax        # 410af0 <__bss_start@@Base+0x360>
  404c16:	mov    rax,QWORD PTR [rbp-0x38]
  404c1a:	lea    rbx,[rax+0x68]
  404c1e:	mov    edi,0x4
  404c23:	call   4023f0 <malloc@plt>
  404c28:	mov    QWORD PTR [rbx],rax
  404c2b:	mov    rax,QWORD PTR [rbp-0x38]
  404c2f:	add    rax,0x68
  404c33:	mov    rax,QWORD PTR [rax]
  404c36:	mov    rdi,rax
  404c39:	call   405dad <init_token_cpar@@Base>
  404c3e:	mov    rax,QWORD PTR [rip+0xbeb3]        # 410af8 <__bss_start@@Base+0x368>
  404c45:	inc    rax
  404c48:	mov    QWORD PTR [rip+0xbea9],rax        # 410af8 <__bss_start@@Base+0x368>
  404c4f:	mov    rax,QWORD PTR [rbp-0x38]
  404c53:	lea    rbx,[rax+0x70]
  404c57:	mov    edi,0x4
  404c5c:	call   4023f0 <malloc@plt>
  404c61:	mov    QWORD PTR [rbx],rax
  404c64:	mov    rax,QWORD PTR [rbp-0x38]
  404c68:	add    rax,0x70
  404c6c:	mov    rax,QWORD PTR [rax]
  404c6f:	mov    rdi,rax
  404c72:	call   405dd7 <init_token_obra@@Base>
  404c77:	mov    rax,QWORD PTR [rip+0xbe82]        # 410b00 <__bss_start@@Base+0x370>
  404c7e:	inc    rax
  404c81:	mov    QWORD PTR [rip+0xbe78],rax        # 410b00 <__bss_start@@Base+0x370>
  404c88:	mov    rax,QWORD PTR [rbp-0x38]
  404c8c:	lea    rbx,[rax+0x78]
  404c90:	mov    edi,0x4
  404c95:	call   4023f0 <malloc@plt>
  404c9a:	mov    QWORD PTR [rbx],rax
  404c9d:	mov    rax,QWORD PTR [rbp-0x38]
  404ca1:	add    rax,0x78
  404ca5:	mov    rax,QWORD PTR [rax]
  404ca8:	mov    rdi,rax
  404cab:	call   405e01 <init_token_cbra@@Base>
  404cb0:	mov    rax,QWORD PTR [rip+0xbe51]        # 410b08 <__bss_start@@Base+0x378>
  404cb7:	inc    rax
  404cba:	mov    QWORD PTR [rip+0xbe47],rax        # 410b08 <__bss_start@@Base+0x378>
  404cc1:	mov    rax,QWORD PTR [rbp-0x38]
  404cc5:	lea    rbx,[rax+0x80]
  404ccc:	mov    edi,0x4
  404cd1:	call   4023f0 <malloc@plt>
  404cd6:	mov    QWORD PTR [rbx],rax
  404cd9:	mov    rax,QWORD PTR [rbp-0x38]
  404cdd:	sub    rax,0xffffffffffffff80
  404ce1:	mov    rax,QWORD PTR [rax]
  404ce4:	mov    rdi,rax
  404ce7:	call   405e01 <init_token_cbra@@Base>
  404cec:	mov    rax,QWORD PTR [rip+0xbe1d]        # 410b10 <__bss_start@@Base+0x380>
  404cf3:	inc    rax
  404cf6:	mov    QWORD PTR [rip+0xbe13],rax        # 410b10 <__bss_start@@Base+0x380>
  404cfd:	mov    rax,QWORD PTR [rbp-0x38]
  404d01:	lea    rbx,[rax+0x88]
  404d08:	mov    edi,0x4
  404d0d:	call   4023f0 <malloc@plt>
  404d12:	mov    QWORD PTR [rbx],rax
  404d15:	mov    rax,QWORD PTR [rbp-0x38]
  404d19:	add    rax,0x88
  404d1f:	mov    rax,QWORD PTR [rax]
  404d22:	mov    rdi,rax
  404d25:	call   405e01 <init_token_cbra@@Base>
  404d2a:	mov    rax,QWORD PTR [rip+0xbde7]        # 410b18 <__bss_start@@Base+0x388>
  404d31:	inc    rax
  404d34:	mov    QWORD PTR [rip+0xbddd],rax        # 410b18 <__bss_start@@Base+0x388>
  404d3b:	mov    rax,QWORD PTR [rbp-0x38]
  404d3f:	lea    rbx,[rax+0x90]
  404d46:	mov    edi,0x4
  404d4b:	call   4023f0 <malloc@plt>
  404d50:	mov    QWORD PTR [rbx],rax
  404d53:	mov    rax,QWORD PTR [rbp-0x38]
  404d57:	add    rax,0x90
  404d5d:	mov    rax,QWORD PTR [rax]
  404d60:	mov    rdi,rax
  404d63:	call   405e7f <init_token_eof@@Base>
  404d68:	mov    rax,QWORD PTR [rip+0xbdb1]        # 410b20 <__bss_start@@Base+0x390>
  404d6f:	inc    rax
  404d72:	mov    QWORD PTR [rip+0xbda7],rax        # 410b20 <__bss_start@@Base+0x390>
  404d79:	mov    rax,0x411aa0
  404d80:	mov    rdx,QWORD PTR [rbp-0x38]
  404d84:	mov    QWORD PTR [rax+0x1b8],rdx
  404d8b:	mov    rax,0x411aa0
  404d92:	mov    DWORD PTR [rax+0x1b0],0x13
  404d9c:	lea    rax,[rbp-0x58]
  404da0:	mov    rdi,rax
  404da3:	call   407374 <read_if_statement@@Base>
  404da8:	mov    QWORD PTR [rbp-0x50],rax
  404dac:	mov    rax,0x411aa0
  404db3:	mov    eax,DWORD PTR [rax+0x198]
  404db9:	cmp    eax,0x13
  404dbc:	je     404dee <if_statement_inside_if_statement@@Base+0x59f>
  404dbe:	mov    rax,QWORD PTR [rip+0xbd63]        # 410b28 <__bss_start@@Base+0x398>
  404dc5:	inc    rax
  404dc8:	mov    QWORD PTR [rip+0xbd59],rax        # 410b28 <__bss_start@@Base+0x398>
  404dcf:	lea    rcx,[rip+0x68aa]        # 40b680 <_IO_stdin_used@@Base+0x680>
  404dd6:	mov    edx,0x1e0
  404ddb:	lea    rsi,[rip+0x623e]        # 40b020 <_IO_stdin_used@@Base+0x20>
  404de2:	lea    rdi,[rip+0x64a6]        # 40b28f <_IO_stdin_used@@Base+0x28f>
  404de9:	call   402370 <__assert_fail@plt>
  404dee:	cmp    QWORD PTR [rbp-0x50],0x0
  404df3:	jne    404e25 <if_statement_inside_if_statement@@Base+0x5d6>
  404df5:	mov    rax,QWORD PTR [rip+0xbd3c]        # 410b38 <__bss_start@@Base+0x3a8>
  404dfc:	inc    rax
  404dff:	mov    QWORD PTR [rip+0xbd32],rax        # 410b38 <__bss_start@@Base+0x3a8>
  404e06:	lea    rcx,[rip+0x6873]        # 40b680 <_IO_stdin_used@@Base+0x680>
  404e0d:	mov    edx,0x1e1
  404e12:	lea    rsi,[rip+0x6207]        # 40b020 <_IO_stdin_used@@Base+0x20>
  404e19:	lea    rdi,[rip+0x63c0]        # 40b1e0 <_IO_stdin_used@@Base+0x1e0>
  404e20:	call   402370 <__assert_fail@plt>
  404e25:	mov    rax,QWORD PTR [rip+0xbd04]        # 410b30 <__bss_start@@Base+0x3a0>
  404e2c:	inc    rax
  404e2f:	mov    QWORD PTR [rip+0xbcfa],rax        # 410b30 <__bss_start@@Base+0x3a0>
  404e36:	mov    rax,QWORD PTR [rbp-0x50]
  404e3a:	mov    eax,DWORD PTR [rax]
  404e3c:	cmp    eax,0x4
  404e3f:	je     404e71 <if_statement_inside_if_statement@@Base+0x622>
  404e41:	mov    rax,QWORD PTR [rip+0xbcf8]        # 410b40 <__bss_start@@Base+0x3b0>
  404e48:	inc    rax
  404e4b:	mov    QWORD PTR [rip+0xbcee],rax        # 410b40 <__bss_start@@Base+0x3b0>
  404e52:	lea    rcx,[rip+0x6827]        # 40b680 <_IO_stdin_used@@Base+0x680>
  404e59:	mov    edx,0x1e2
  404e5e:	lea    rsi,[rip+0x61bb]        # 40b020 <_IO_stdin_used@@Base+0x20>
  404e65:	lea    rdi,[rip+0x6380]        # 40b1ec <_IO_stdin_used@@Base+0x1ec>
  404e6c:	call   402370 <__assert_fail@plt>
  404e71:	nop
  404e72:	mov    rax,QWORD PTR [rbp-0x18]
  404e76:	xor    rax,QWORD PTR fs:0x28
  404e7f:	je     404e86 <if_statement_inside_if_statement@@Base+0x637>
  404e81:	call   402340 <__stack_chk_fail@plt>
  404e86:	add    rsp,0x58
  404e8a:	pop    rbx
  404e8b:	pop    rbp
  404e8c:	ret    

0000000000404e8d <if_statement_inside_else_statement@@Base>:
  404e8d:	endbr64 
  404e91:	push   rbp
  404e92:	mov    rbp,rsp
  404e95:	push   rbx
  404e96:	sub    rsp,0x58
  404e9a:	mov    rax,QWORD PTR fs:0x28
  404ea3:	mov    QWORD PTR [rbp-0x18],rax
  404ea7:	xor    eax,eax
  404ea9:	mov    rax,QWORD PTR [rip+0xbaf0]        # 4109a0 <__bss_start@@Base+0x210>
  404eb0:	inc    rax
  404eb3:	mov    QWORD PTR [rip+0xbae6],rax        # 4109a0 <__bss_start@@Base+0x210>
  404eba:	mov    QWORD PTR [rbp-0x50],0x0
  404ec2:	lea    rdx,[rbp-0x30]
  404ec6:	lea    rax,[rbp-0x58]
  404eca:	mov    rsi,rdx
  404ecd:	mov    rdi,rax
  404ed0:	call   406cb8 <init_grammar@@Base>
  404ed5:	mov    rax,QWORD PTR [rip+0xbacc]        # 4109a8 <__bss_start@@Base+0x218>
  404edc:	inc    rax
  404edf:	mov    QWORD PTR [rip+0xbac2],rax        # 4109a8 <__bss_start@@Base+0x218>
  404ee6:	mov    edi,0x3
  404eeb:	call   4023f0 <malloc@plt>
  404ef0:	mov    QWORD PTR [rbp-0x48],rax
  404ef4:	mov    edi,0x3
  404ef9:	call   4023f0 <malloc@plt>
  404efe:	mov    QWORD PTR [rbp-0x40],rax
  404f02:	mov    rax,QWORD PTR [rbp-0x48]
  404f06:	mov    BYTE PTR [rax],0x21
  404f09:	mov    rax,QWORD PTR [rbp-0x48]
  404f0d:	inc    rax
  404f10:	mov    BYTE PTR [rax],0x3d
  404f13:	mov    rax,QWORD PTR [rbp-0x48]
  404f17:	add    rax,0x2
  404f1b:	mov    BYTE PTR [rax],0x0
  404f1e:	mov    rax,QWORD PTR [rbp-0x40]
  404f22:	mov    BYTE PTR [rax],0x21
  404f25:	mov    rax,QWORD PTR [rbp-0x40]
  404f29:	inc    rax
  404f2c:	mov    BYTE PTR [rax],0x3d
  404f2f:	mov    rax,QWORD PTR [rbp-0x40]
  404f33:	add    rax,0x2
  404f37:	mov    BYTE PTR [rax],0x0
  404f3a:	mov    edi,0xa8
  404f3f:	call   4023f0 <malloc@plt>
  404f44:	mov    QWORD PTR [rbp-0x38],rax
  404f48:	mov    edi,0x4
  404f4d:	call   4023f0 <malloc@plt>
  404f52:	mov    rdx,rax
  404f55:	mov    rax,QWORD PTR [rbp-0x38]
  404f59:	mov    QWORD PTR [rax],rdx
  404f5c:	mov    rax,QWORD PTR [rbp-0x38]
  404f60:	mov    rax,QWORD PTR [rax]
  404f63:	mov    rdi,rax
  404f66:	call   405d83 <init_token_opar@@Base>
  404f6b:	mov    rax,QWORD PTR [rip+0xba3e]        # 4109b0 <__bss_start@@Base+0x220>
  404f72:	inc    rax
  404f75:	mov    QWORD PTR [rip+0xba34],rax        # 4109b0 <__bss_start@@Base+0x220>
  404f7c:	mov    rax,QWORD PTR [rbp-0x38]
  404f80:	lea    rbx,[rax+0x8]
  404f84:	mov    edi,0x8
  404f89:	call   4023f0 <malloc@plt>
  404f8e:	mov    QWORD PTR [rbx],rax
  404f91:	mov    rax,QWORD PTR [rbp-0x38]
  404f95:	add    rax,0x8
  404f99:	mov    rax,QWORD PTR [rax]
  404f9c:	mov    esi,0x1
  404fa1:	mov    rdi,rax
  404fa4:	call   405d12 <init_token_int_value@@Base>
  404fa9:	mov    rax,QWORD PTR [rip+0xba08]        # 4109b8 <__bss_start@@Base+0x228>
  404fb0:	inc    rax
  404fb3:	mov    QWORD PTR [rip+0xb9fe],rax        # 4109b8 <__bss_start@@Base+0x228>
  404fba:	mov    rax,QWORD PTR [rbp-0x38]
  404fbe:	lea    rbx,[rax+0x10]
  404fc2:	mov    edi,0x8
  404fc7:	call   4023f0 <malloc@plt>
  404fcc:	mov    QWORD PTR [rbx],rax
  404fcf:	mov    rax,QWORD PTR [rbp-0x38]
  404fd3:	add    rax,0x10
  404fd7:	mov    rax,QWORD PTR [rax]
  404fda:	mov    esi,0x1
  404fdf:	mov    rdi,rax
  404fe2:	call   405d12 <init_token_int_value@@Base>
  404fe7:	mov    rax,QWORD PTR [rip+0xb9d2]        # 4109c0 <__bss_start@@Base+0x230>
  404fee:	inc    rax
  404ff1:	mov    QWORD PTR [rip+0xb9c8],rax        # 4109c0 <__bss_start@@Base+0x230>
  404ff8:	mov    rax,QWORD PTR [rbp-0x38]
  404ffc:	lea    rbx,[rax+0x18]
  405000:	mov    edi,0x10
  405005:	call   4023f0 <malloc@plt>
  40500a:	mov    QWORD PTR [rbx],rax
  40500d:	mov    rax,QWORD PTR [rbp-0x38]
  405011:	add    rax,0x18
  405015:	mov    rax,QWORD PTR [rax]
  405018:	mov    rdx,QWORD PTR [rbp-0x48]
  40501c:	mov    rsi,rdx
  40501f:	mov    rdi,rax
  405022:	call   405efd <init_token_boolean_op@@Base>
  405027:	mov    rax,QWORD PTR [rip+0xb99a]        # 4109c8 <__bss_start@@Base+0x238>
  40502e:	inc    rax
  405031:	mov    QWORD PTR [rip+0xb990],rax        # 4109c8 <__bss_start@@Base+0x238>
  405038:	mov    rax,QWORD PTR [rbp-0x38]
  40503c:	lea    rbx,[rax+0x20]
  405040:	mov    edi,0x8
  405045:	call   4023f0 <malloc@plt>
  40504a:	mov    QWORD PTR [rbx],rax
  40504d:	mov    rax,QWORD PTR [rbp-0x38]
  405051:	add    rax,0x20
  405055:	mov    rax,QWORD PTR [rax]
  405058:	mov    esi,0x1
  40505d:	mov    rdi,rax
  405060:	call   405d12 <init_token_int_value@@Base>
  405065:	mov    rax,QWORD PTR [rip+0xb964]        # 4109d0 <__bss_start@@Base+0x240>
  40506c:	inc    rax
  40506f:	mov    QWORD PTR [rip+0xb95a],rax        # 4109d0 <__bss_start@@Base+0x240>
  405076:	mov    rax,QWORD PTR [rbp-0x38]
  40507a:	lea    rbx,[rax+0x28]
  40507e:	mov    edi,0x4
  405083:	call   4023f0 <malloc@plt>
  405088:	mov    QWORD PTR [rbx],rax
  40508b:	mov    rax,QWORD PTR [rbp-0x38]
  40508f:	add    rax,0x28
  405093:	mov    rax,QWORD PTR [rax]
  405096:	mov    rdi,rax
  405099:	call   405dad <init_token_cpar@@Base>
  40509e:	mov    rax,QWORD PTR [rip+0xb933]        # 4109d8 <__bss_start@@Base+0x248>
  4050a5:	inc    rax
  4050a8:	mov    QWORD PTR [rip+0xb929],rax        # 4109d8 <__bss_start@@Base+0x248>
  4050af:	mov    rax,QWORD PTR [rbp-0x38]
  4050b3:	lea    rbx,[rax+0x30]
  4050b7:	mov    edi,0x4
  4050bc:	call   4023f0 <malloc@plt>
  4050c1:	mov    QWORD PTR [rbx],rax
  4050c4:	mov    rax,QWORD PTR [rbp-0x38]
  4050c8:	add    rax,0x30
  4050cc:	mov    rax,QWORD PTR [rax]
  4050cf:	mov    rdi,rax
  4050d2:	call   405dd7 <init_token_obra@@Base>
  4050d7:	mov    rax,QWORD PTR [rip+0xb902]        # 4109e0 <__bss_start@@Base+0x250>
  4050de:	inc    rax
  4050e1:	mov    QWORD PTR [rip+0xb8f8],rax        # 4109e0 <__bss_start@@Base+0x250>
  4050e8:	mov    rax,QWORD PTR [rbp-0x38]
  4050ec:	lea    rbx,[rax+0x38]
  4050f0:	mov    edi,0x4
  4050f5:	call   4023f0 <malloc@plt>
  4050fa:	mov    QWORD PTR [rbx],rax
  4050fd:	mov    rax,QWORD PTR [rbp-0x38]
  405101:	add    rax,0x38
  405105:	mov    rax,QWORD PTR [rax]
  405108:	mov    rdi,rax
  40510b:	call   405e01 <init_token_cbra@@Base>
  405110:	mov    rax,QWORD PTR [rip+0xb8d1]        # 4109e8 <__bss_start@@Base+0x258>
  405117:	inc    rax
  40511a:	mov    QWORD PTR [rip+0xb8c7],rax        # 4109e8 <__bss_start@@Base+0x258>
  405121:	mov    rax,QWORD PTR [rbp-0x38]
  405125:	lea    rbx,[rax+0x40]
  405129:	mov    edi,0x4
  40512e:	call   4023f0 <malloc@plt>
  405133:	mov    QWORD PTR [rbx],rax
  405136:	mov    rax,QWORD PTR [rbp-0x38]
  40513a:	add    rax,0x40
  40513e:	mov    rax,QWORD PTR [rax]
  405141:	mov    rdi,rax
  405144:	call   405ed3 <init_token_else@@Base>
  405149:	mov    rax,QWORD PTR [rip+0xb8a0]        # 4109f0 <__bss_start@@Base+0x260>
  405150:	inc    rax
  405153:	mov    QWORD PTR [rip+0xb896],rax        # 4109f0 <__bss_start@@Base+0x260>
  40515a:	mov    rax,QWORD PTR [rbp-0x38]
  40515e:	lea    rbx,[rax+0x48]
  405162:	mov    edi,0x4
  405167:	call   4023f0 <malloc@plt>
  40516c:	mov    QWORD PTR [rbx],rax
  40516f:	mov    rax,QWORD PTR [rbp-0x38]
  405173:	add    rax,0x48
  405177:	mov    rax,QWORD PTR [rax]
  40517a:	mov    rdi,rax
  40517d:	call   405dd7 <init_token_obra@@Base>
  405182:	mov    rax,QWORD PTR [rip+0xb86f]        # 4109f8 <__bss_start@@Base+0x268>
  405189:	inc    rax
  40518c:	mov    QWORD PTR [rip+0xb865],rax        # 4109f8 <__bss_start@@Base+0x268>
  405193:	mov    rax,QWORD PTR [rbp-0x38]
  405197:	lea    rbx,[rax+0x50]
  40519b:	mov    edi,0x4
  4051a0:	call   4023f0 <malloc@plt>
  4051a5:	mov    QWORD PTR [rbx],rax
  4051a8:	mov    rax,QWORD PTR [rbp-0x38]
  4051ac:	add    rax,0x50
  4051b0:	mov    rax,QWORD PTR [rax]
  4051b3:	mov    rdi,rax
  4051b6:	call   405ea9 <init_token_if@@Base>
  4051bb:	mov    rax,QWORD PTR [rip+0xb83e]        # 410a00 <__bss_start@@Base+0x270>
  4051c2:	inc    rax
  4051c5:	mov    QWORD PTR [rip+0xb834],rax        # 410a00 <__bss_start@@Base+0x270>
  4051cc:	mov    rax,QWORD PTR [rbp-0x38]
  4051d0:	lea    rbx,[rax+0x58]
  4051d4:	mov    edi,0x4
  4051d9:	call   4023f0 <malloc@plt>
  4051de:	mov    QWORD PTR [rbx],rax
  4051e1:	mov    rax,QWORD PTR [rbp-0x38]
  4051e5:	add    rax,0x58
  4051e9:	mov    rax,QWORD PTR [rax]
  4051ec:	mov    rdi,rax
  4051ef:	call   405d83 <init_token_opar@@Base>
  4051f4:	mov    rax,QWORD PTR [rip+0xb80d]        # 410a08 <__bss_start@@Base+0x278>
  4051fb:	inc    rax
  4051fe:	mov    QWORD PTR [rip+0xb803],rax        # 410a08 <__bss_start@@Base+0x278>
  405205:	mov    rax,QWORD PTR [rbp-0x38]
  405209:	lea    rbx,[rax+0x60]
  40520d:	mov    edi,0x8
  405212:	call   4023f0 <malloc@plt>
  405217:	mov    QWORD PTR [rbx],rax
  40521a:	mov    rax,QWORD PTR [rbp-0x38]
  40521e:	add    rax,0x60
  405222:	mov    rax,QWORD PTR [rax]
  405225:	mov    esi,0x1
  40522a:	mov    rdi,rax
  40522d:	call   405d12 <init_token_int_value@@Base>
  405232:	mov    rax,QWORD PTR [rip+0xb7d7]        # 410a10 <__bss_start@@Base+0x280>
  405239:	inc    rax
  40523c:	mov    QWORD PTR [rip+0xb7cd],rax        # 410a10 <__bss_start@@Base+0x280>
  405243:	mov    rax,QWORD PTR [rbp-0x38]
  405247:	lea    rbx,[rax+0x68]
  40524b:	mov    edi,0x8
  405250:	call   4023f0 <malloc@plt>
  405255:	mov    QWORD PTR [rbx],rax
  405258:	mov    rax,QWORD PTR [rbp-0x38]
  40525c:	add    rax,0x68
  405260:	mov    rax,QWORD PTR [rax]
  405263:	mov    esi,0x1
  405268:	mov    rdi,rax
  40526b:	call   405d12 <init_token_int_value@@Base>
  405270:	mov    rax,QWORD PTR [rip+0xb7a1]        # 410a18 <__bss_start@@Base+0x288>
  405277:	inc    rax
  40527a:	mov    QWORD PTR [rip+0xb797],rax        # 410a18 <__bss_start@@Base+0x288>
  405281:	mov    rax,QWORD PTR [rbp-0x38]
  405285:	lea    rbx,[rax+0x70]
  405289:	mov    edi,0x10
  40528e:	call   4023f0 <malloc@plt>
  405293:	mov    QWORD PTR [rbx],rax
  405296:	mov    rax,QWORD PTR [rbp-0x38]
  40529a:	add    rax,0x70
  40529e:	mov    rax,QWORD PTR [rax]
  4052a1:	mov    rdx,QWORD PTR [rbp-0x40]
  4052a5:	mov    rsi,rdx
  4052a8:	mov    rdi,rax
  4052ab:	call   405efd <init_token_boolean_op@@Base>
  4052b0:	mov    rax,QWORD PTR [rip+0xb769]        # 410a20 <__bss_start@@Base+0x290>
  4052b7:	inc    rax
  4052ba:	mov    QWORD PTR [rip+0xb75f],rax        # 410a20 <__bss_start@@Base+0x290>
  4052c1:	mov    rax,QWORD PTR [rbp-0x38]
  4052c5:	lea    rbx,[rax+0x78]
  4052c9:	mov    edi,0x8
  4052ce:	call   4023f0 <malloc@plt>
  4052d3:	mov    QWORD PTR [rbx],rax
  4052d6:	mov    rax,QWORD PTR [rbp-0x38]
  4052da:	add    rax,0x78
  4052de:	mov    rax,QWORD PTR [rax]
  4052e1:	mov    esi,0x1
  4052e6:	mov    rdi,rax
  4052e9:	call   405d12 <init_token_int_value@@Base>
  4052ee:	mov    rax,QWORD PTR [rip+0xb733]        # 410a28 <__bss_start@@Base+0x298>
  4052f5:	inc    rax
  4052f8:	mov    QWORD PTR [rip+0xb729],rax        # 410a28 <__bss_start@@Base+0x298>
  4052ff:	mov    rax,QWORD PTR [rbp-0x38]
  405303:	lea    rbx,[rax+0x80]
  40530a:	mov    edi,0x4
  40530f:	call   4023f0 <malloc@plt>
  405314:	mov    QWORD PTR [rbx],rax
  405317:	mov    rax,QWORD PTR [rbp-0x38]
  40531b:	sub    rax,0xffffffffffffff80
  40531f:	mov    rax,QWORD PTR [rax]
  405322:	mov    rdi,rax
  405325:	call   405dad <init_token_cpar@@Base>
  40532a:	mov    rax,QWORD PTR [rip+0xb6ff]        # 410a30 <__bss_start@@Base+0x2a0>
  405331:	inc    rax
  405334:	mov    QWORD PTR [rip+0xb6f5],rax        # 410a30 <__bss_start@@Base+0x2a0>
  40533b:	mov    rax,QWORD PTR [rbp-0x38]
  40533f:	lea    rbx,[rax+0x88]
  405346:	mov    edi,0x4
  40534b:	call   4023f0 <malloc@plt>
  405350:	mov    QWORD PTR [rbx],rax
  405353:	mov    rax,QWORD PTR [rbp-0x38]
  405357:	add    rax,0x88
  40535d:	mov    rax,QWORD PTR [rax]
  405360:	mov    rdi,rax
  405363:	call   405dd7 <init_token_obra@@Base>
  405368:	mov    rax,QWORD PTR [rip+0xb6c9]        # 410a38 <__bss_start@@Base+0x2a8>
  40536f:	inc    rax
  405372:	mov    QWORD PTR [rip+0xb6bf],rax        # 410a38 <__bss_start@@Base+0x2a8>
  405379:	mov    rax,QWORD PTR [rbp-0x38]
  40537d:	lea    rbx,[rax+0x90]
  405384:	mov    edi,0x4
  405389:	call   4023f0 <malloc@plt>
  40538e:	mov    QWORD PTR [rbx],rax
  405391:	mov    rax,QWORD PTR [rbp-0x38]
  405395:	add    rax,0x90
  40539b:	mov    rax,QWORD PTR [rax]
  40539e:	mov    rdi,rax
  4053a1:	call   405e01 <init_token_cbra@@Base>
  4053a6:	mov    rax,QWORD PTR [rip+0xb693]        # 410a40 <__bss_start@@Base+0x2b0>
  4053ad:	inc    rax
  4053b0:	mov    QWORD PTR [rip+0xb689],rax        # 410a40 <__bss_start@@Base+0x2b0>
  4053b7:	mov    rax,QWORD PTR [rbp-0x38]
  4053bb:	lea    rbx,[rax+0x98]
  4053c2:	mov    edi,0x4
  4053c7:	call   4023f0 <malloc@plt>
  4053cc:	mov    QWORD PTR [rbx],rax
  4053cf:	mov    rax,QWORD PTR [rbp-0x38]
  4053d3:	add    rax,0x98
  4053d9:	mov    rax,QWORD PTR [rax]
  4053dc:	mov    rdi,rax
  4053df:	call   405e01 <init_token_cbra@@Base>
  4053e4:	mov    rax,QWORD PTR [rip+0xb65d]        # 410a48 <__bss_start@@Base+0x2b8>
  4053eb:	inc    rax
  4053ee:	mov    QWORD PTR [rip+0xb653],rax        # 410a48 <__bss_start@@Base+0x2b8>
  4053f5:	mov    rax,QWORD PTR [rbp-0x38]
  4053f9:	lea    rbx,[rax+0xa0]
  405400:	mov    edi,0x4
  405405:	call   4023f0 <malloc@plt>
  40540a:	mov    QWORD PTR [rbx],rax
  40540d:	mov    rax,QWORD PTR [rbp-0x38]
  405411:	add    rax,0xa0
  405417:	mov    rax,QWORD PTR [rax]
  40541a:	mov    rdi,rax
  40541d:	call   405e01 <init_token_cbra@@Base>
  405422:	mov    rax,QWORD PTR [rip+0xb627]        # 410a50 <__bss_start@@Base+0x2c0>
  405429:	inc    rax
  40542c:	mov    QWORD PTR [rip+0xb61d],rax        # 410a50 <__bss_start@@Base+0x2c0>
  405433:	mov    rax,0x411aa0
  40543a:	mov    rdx,QWORD PTR [rbp-0x38]
  40543e:	mov    QWORD PTR [rax+0x1b8],rdx
  405445:	mov    rax,0x411aa0
  40544c:	mov    DWORD PTR [rax+0x1b0],0x15
  405456:	lea    rax,[rbp-0x58]
  40545a:	mov    rdi,rax
  40545d:	call   407374 <read_if_statement@@Base>
  405462:	mov    QWORD PTR [rbp-0x50],rax
  405466:	mov    rax,0x411aa0
  40546d:	mov    eax,DWORD PTR [rax+0x198]
  405473:	cmp    eax,0x15
  405476:	je     4054a8 <if_statement_inside_else_statement@@Base+0x61b>
  405478:	mov    rax,QWORD PTR [rip+0xb5d9]        # 410a58 <__bss_start@@Base+0x2c8>
  40547f:	inc    rax
  405482:	mov    QWORD PTR [rip+0xb5cf],rax        # 410a58 <__bss_start@@Base+0x2c8>
  405489:	lea    rcx,[rip+0x6230]        # 40b6c0 <_IO_stdin_used@@Base+0x6c0>
  405490:	mov    edx,0x22e
  405495:	lea    rsi,[rip+0x5b84]        # 40b020 <_IO_stdin_used@@Base+0x20>
  40549c:	lea    rdi,[rip+0x5e07]        # 40b2aa <_IO_stdin_used@@Base+0x2aa>
  4054a3:	call   402370 <__assert_fail@plt>
  4054a8:	cmp    QWORD PTR [rbp-0x50],0x0
  4054ad:	jne    4054df <if_statement_inside_else_statement@@Base+0x652>
  4054af:	mov    rax,QWORD PTR [rip+0xb5b2]        # 410a68 <__bss_start@@Base+0x2d8>
  4054b6:	inc    rax
  4054b9:	mov    QWORD PTR [rip+0xb5a8],rax        # 410a68 <__bss_start@@Base+0x2d8>
  4054c0:	lea    rcx,[rip+0x61f9]        # 40b6c0 <_IO_stdin_used@@Base+0x6c0>
  4054c7:	mov    edx,0x22f
  4054cc:	lea    rsi,[rip+0x5b4d]        # 40b020 <_IO_stdin_used@@Base+0x20>
  4054d3:	lea    rdi,[rip+0x5d06]        # 40b1e0 <_IO_stdin_used@@Base+0x1e0>
  4054da:	call   402370 <__assert_fail@plt>
  4054df:	mov    rax,QWORD PTR [rip+0xb57a]        # 410a60 <__bss_start@@Base+0x2d0>
  4054e6:	inc    rax
  4054e9:	mov    QWORD PTR [rip+0xb570],rax        # 410a60 <__bss_start@@Base+0x2d0>
  4054f0:	mov    rax,QWORD PTR [rbp-0x50]
  4054f4:	mov    eax,DWORD PTR [rax]
  4054f6:	cmp    eax,0x4
  4054f9:	je     40552b <if_statement_inside_else_statement@@Base+0x69e>
  4054fb:	mov    rax,QWORD PTR [rip+0xb56e]        # 410a70 <__bss_start@@Base+0x2e0>
  405502:	inc    rax
  405505:	mov    QWORD PTR [rip+0xb564],rax        # 410a70 <__bss_start@@Base+0x2e0>
  40550c:	lea    rcx,[rip+0x61ad]        # 40b6c0 <_IO_stdin_used@@Base+0x6c0>
  405513:	mov    edx,0x230
  405518:	lea    rsi,[rip+0x5b01]        # 40b020 <_IO_stdin_used@@Base+0x20>
  40551f:	lea    rdi,[rip+0x5cc6]        # 40b1ec <_IO_stdin_used@@Base+0x1ec>
  405526:	call   402370 <__assert_fail@plt>
  40552b:	nop
  40552c:	mov    rax,QWORD PTR [rbp-0x18]
  405530:	xor    rax,QWORD PTR fs:0x28
  405539:	je     405540 <if_statement_inside_else_statement@@Base+0x6b3>
  40553b:	call   402340 <__stack_chk_fail@plt>
  405540:	add    rsp,0x58
  405544:	pop    rbx
  405545:	pop    rbp
  405546:	ret    

0000000000405547 <main@@Base>:
  405547:	endbr64 
  40554b:	push   rbp
  40554c:	mov    rbp,rsp
  40554f:	mov    rax,QWORD PTR [rip+0xb26a]        # 4107c0 <__bss_start@@Base+0x30>
  405556:	inc    rax
  405559:	mov    QWORD PTR [rip+0xb260],rax        # 4107c0 <__bss_start@@Base+0x30>
  405560:	mov    rax,QWORD PTR [rip+0x9a79]        # 40efe0 <stdout@GLIBC_2.2.5>
  405567:	mov    rax,QWORD PTR [rax]
  40556a:	mov    esi,0x0
  40556f:	mov    rdi,rax
  405572:	call   402350 <setbuf@plt>
  405577:	mov    rax,QWORD PTR [rip+0xb24a]        # 4107c8 <__bss_start@@Base+0x38>
  40557e:	inc    rax
  405581:	mov    QWORD PTR [rip+0xb240],rax        # 4107c8 <__bss_start@@Base+0x38>
  405588:	mov    rax,QWORD PTR [rip+0x9a51]        # 40efe0 <stdout@GLIBC_2.2.5>
  40558f:	mov    rax,QWORD PTR [rax]
  405592:	mov    rcx,rax
  405595:	mov    edx,0xe
  40559a:	mov    esi,0x1
  40559f:	lea    rdi,[rip+0x5d1f]        # 40b2c5 <_IO_stdin_used@@Base+0x2c5>
  4055a6:	call   402470 <fwrite@plt>
  4055ab:	mov    rax,QWORD PTR [rip+0xb21e]        # 4107d0 <__bss_start@@Base+0x40>
  4055b2:	inc    rax
  4055b5:	mov    QWORD PTR [rip+0xb214],rax        # 4107d0 <__bss_start@@Base+0x40>
  4055bc:	mov    rax,QWORD PTR [rip+0x9a1d]        # 40efe0 <stdout@GLIBC_2.2.5>
  4055c3:	mov    rax,QWORD PTR [rax]
  4055c6:	mov    rcx,rax
  4055c9:	mov    edx,0xe
  4055ce:	mov    esi,0x1
  4055d3:	lea    rdi,[rip+0x5cfa]        # 40b2d4 <_IO_stdin_used@@Base+0x2d4>
  4055da:	call   402470 <fwrite@plt>
  4055df:	mov    rax,QWORD PTR [rip+0xb1f2]        # 4107d8 <__bss_start@@Base+0x48>
  4055e6:	inc    rax
  4055e9:	mov    QWORD PTR [rip+0xb1e8],rax        # 4107d8 <__bss_start@@Base+0x48>
  4055f0:	mov    rax,QWORD PTR [rip+0x99e9]        # 40efe0 <stdout@GLIBC_2.2.5>
  4055f7:	mov    rax,QWORD PTR [rax]
  4055fa:	mov    rcx,rax
  4055fd:	mov    edx,0xf
  405602:	mov    esi,0x1
  405607:	lea    rdi,[rip+0x5cd5]        # 40b2e3 <_IO_stdin_used@@Base+0x2e3>
  40560e:	call   402470 <fwrite@plt>
  405613:	mov    rax,QWORD PTR [rip+0xb1c6]        # 4107e0 <__bss_start@@Base+0x50>
  40561a:	inc    rax
  40561d:	mov    QWORD PTR [rip+0xb1bc],rax        # 4107e0 <__bss_start@@Base+0x50>
  405624:	mov    edi,0x0
  405629:	call   402400 <fflush@plt>
  40562e:	mov    rax,QWORD PTR [rip+0xb1b3]        # 4107e8 <__bss_start@@Base+0x58>
  405635:	inc    rax
  405638:	mov    QWORD PTR [rip+0xb1a9],rax        # 4107e8 <__bss_start@@Base+0x58>
  40563f:	lea    rdx,[rip+0x5cad]        # 40b2f3 <_IO_stdin_used@@Base+0x2f3>
  405646:	lea    rsi,[rip+0x5cbc]        # 40b309 <_IO_stdin_used@@Base+0x309>
  40564d:	lea    rdi,[rip+0x5cc1]        # 40b315 <_IO_stdin_used@@Base+0x315>
  405654:	mov    eax,0x0
  405659:	call   402360 <printf@plt>
  40565e:	mov    rax,QWORD PTR [rip+0xb18b]        # 4107f0 <__bss_start@@Base+0x60>
  405665:	inc    rax
  405668:	mov    QWORD PTR [rip+0xb181],rax        # 4107f0 <__bss_start@@Base+0x60>
  40566f:	mov    eax,0x0
  405674:	call   4029e2 <setup@@Base>
  405679:	mov    rax,QWORD PTR [rip+0xb178]        # 4107f8 <__bss_start@@Base+0x68>
  405680:	inc    rax
  405683:	mov    QWORD PTR [rip+0xb16e],rax        # 4107f8 <__bss_start@@Base+0x68>
  40568a:	mov    eax,0x0
  40568f:	call   402a34 <no_int_as_first_stuff@@Base>
  405694:	mov    rax,QWORD PTR [rip+0xb165]        # 410800 <__bss_start@@Base+0x70>
  40569b:	inc    rax
  40569e:	mov    QWORD PTR [rip+0xb15b],rax        # 410800 <__bss_start@@Base+0x70>
  4056a5:	lea    rdi,[rip+0x5c7b]        # 40b327 <_IO_stdin_used@@Base+0x327>
  4056ac:	call   4022e0 <puts@plt>
  4056b1:	mov    rax,QWORD PTR [rip+0xb150]        # 410808 <__bss_start@@Base+0x78>
  4056b8:	inc    rax
  4056bb:	mov    QWORD PTR [rip+0xb146],rax        # 410808 <__bss_start@@Base+0x78>
  4056c2:	lea    rdx,[rip+0x5c67]        # 40b330 <_IO_stdin_used@@Base+0x330>
  4056c9:	lea    rsi,[rip+0x5c39]        # 40b309 <_IO_stdin_used@@Base+0x309>
  4056d0:	lea    rdi,[rip+0x5c3e]        # 40b315 <_IO_stdin_used@@Base+0x315>
  4056d7:	mov    eax,0x0
  4056dc:	call   402360 <printf@plt>
  4056e1:	mov    rax,QWORD PTR [rip+0xb128]        # 410810 <__bss_start@@Base+0x80>
  4056e8:	inc    rax
  4056eb:	mov    QWORD PTR [rip+0xb11e],rax        # 410810 <__bss_start@@Base+0x80>
  4056f2:	mov    eax,0x0
  4056f7:	call   4029e2 <setup@@Base>
  4056fc:	mov    rax,QWORD PTR [rip+0xb115]        # 410818 <__bss_start@@Base+0x88>
  405703:	inc    rax
  405706:	mov    QWORD PTR [rip+0xb10b],rax        # 410818 <__bss_start@@Base+0x88>
  40570d:	mov    eax,0x0
  405712:	call   402b7a <int_but_not_followed_by_function@@Base>
  405717:	mov    rax,QWORD PTR [rip+0xb102]        # 410820 <__bss_start@@Base+0x90>
  40571e:	inc    rax
  405721:	mov    QWORD PTR [rip+0xb0f8],rax        # 410820 <__bss_start@@Base+0x90>
  405728:	lea    rdi,[rip+0x5bf8]        # 40b327 <_IO_stdin_used@@Base+0x327>
  40572f:	call   4022e0 <puts@plt>
  405734:	mov    rax,QWORD PTR [rip+0xb0ed]        # 410828 <__bss_start@@Base+0x98>
  40573b:	inc    rax
  40573e:	mov    QWORD PTR [rip+0xb0e3],rax        # 410828 <__bss_start@@Base+0x98>
  405745:	lea    rdx,[rip+0x5c0c]        # 40b358 <_IO_stdin_used@@Base+0x358>
  40574c:	lea    rsi,[rip+0x5bb6]        # 40b309 <_IO_stdin_used@@Base+0x309>
  405753:	lea    rdi,[rip+0x5bbb]        # 40b315 <_IO_stdin_used@@Base+0x315>
  40575a:	mov    eax,0x0
  40575f:	call   402360 <printf@plt>
  405764:	mov    rax,QWORD PTR [rip+0xb0c5]        # 410830 <__bss_start@@Base+0xa0>
  40576b:	inc    rax
  40576e:	mov    QWORD PTR [rip+0xb0bb],rax        # 410830 <__bss_start@@Base+0xa0>
  405775:	mov    eax,0x0
  40577a:	call   4029e2 <setup@@Base>
  40577f:	mov    rax,QWORD PTR [rip+0xb0b2]        # 410838 <__bss_start@@Base+0xa8>
  405786:	inc    rax
  405789:	mov    QWORD PTR [rip+0xb0a8],rax        # 410838 <__bss_start@@Base+0xa8>
  405790:	mov    eax,0x0
  405795:	call   40372e <boolean_unary_operator_is_read_properly@@Base>
  40579a:	mov    rax,QWORD PTR [rip+0xb09f]        # 410840 <__bss_start@@Base+0xb0>
  4057a1:	inc    rax
  4057a4:	mov    QWORD PTR [rip+0xb095],rax        # 410840 <__bss_start@@Base+0xb0>
  4057ab:	lea    rdi,[rip+0x5b75]        # 40b327 <_IO_stdin_used@@Base+0x327>
  4057b2:	call   4022e0 <puts@plt>
  4057b7:	mov    rax,QWORD PTR [rip+0xb08a]        # 410848 <__bss_start@@Base+0xb8>
  4057be:	inc    rax
  4057c1:	mov    QWORD PTR [rip+0xb080],rax        # 410848 <__bss_start@@Base+0xb8>
  4057c8:	lea    rdx,[rip+0x5bb1]        # 40b380 <_IO_stdin_used@@Base+0x380>
  4057cf:	lea    rsi,[rip+0x5b33]        # 40b309 <_IO_stdin_used@@Base+0x309>
  4057d6:	lea    rdi,[rip+0x5b38]        # 40b315 <_IO_stdin_used@@Base+0x315>
  4057dd:	mov    eax,0x0
  4057e2:	call   402360 <printf@plt>
  4057e7:	mov    rax,QWORD PTR [rip+0xb062]        # 410850 <__bss_start@@Base+0xc0>
  4057ee:	inc    rax
  4057f1:	mov    QWORD PTR [rip+0xb058],rax        # 410850 <__bss_start@@Base+0xc0>
  4057f8:	mov    eax,0x0
  4057fd:	call   4029e2 <setup@@Base>
  405802:	mov    rax,QWORD PTR [rip+0xb04f]        # 410858 <__bss_start@@Base+0xc8>
  405809:	inc    rax
  40580c:	mov    QWORD PTR [rip+0xb045],rax        # 410858 <__bss_start@@Base+0xc8>
  405813:	mov    eax,0x0
  405818:	call   40343f <boolean_binary_operator_is_read_properly@@Base>
  40581d:	mov    rax,QWORD PTR [rip+0xb03c]        # 410860 <__bss_start@@Base+0xd0>
  405824:	inc    rax
  405827:	mov    QWORD PTR [rip+0xb032],rax        # 410860 <__bss_start@@Base+0xd0>
  40582e:	lea    rdi,[rip+0x5af2]        # 40b327 <_IO_stdin_used@@Base+0x327>
  405835:	call   4022e0 <puts@plt>
  40583a:	mov    rax,QWORD PTR [rip+0xb027]        # 410868 <__bss_start@@Base+0xd8>
  405841:	inc    rax
  405844:	mov    QWORD PTR [rip+0xb01d],rax        # 410868 <__bss_start@@Base+0xd8>
  40584b:	lea    rdx,[rip+0x5b5e]        # 40b3b0 <_IO_stdin_used@@Base+0x3b0>
  405852:	lea    rsi,[rip+0x5ab0]        # 40b309 <_IO_stdin_used@@Base+0x309>
  405859:	lea    rdi,[rip+0x5ab5]        # 40b315 <_IO_stdin_used@@Base+0x315>
  405860:	mov    eax,0x0
  405865:	call   402360 <printf@plt>
  40586a:	mov    rax,QWORD PTR [rip+0xafff]        # 410870 <__bss_start@@Base+0xe0>
  405871:	inc    rax
  405874:	mov    QWORD PTR [rip+0xaff5],rax        # 410870 <__bss_start@@Base+0xe0>
  40587b:	mov    eax,0x0
  405880:	call   4029e2 <setup@@Base>
  405885:	mov    rax,QWORD PTR [rip+0xafec]        # 410878 <__bss_start@@Base+0xe8>
  40588c:	inc    rax
  40588f:	mov    QWORD PTR [rip+0xafe2],rax        # 410878 <__bss_start@@Base+0xe8>
  405896:	mov    eax,0x0
  40589b:	call   402d27 <boolean_expression_is_read_properly@@Base>
  4058a0:	mov    rax,QWORD PTR [rip+0xafd9]        # 410880 <__bss_start@@Base+0xf0>
  4058a7:	inc    rax
  4058aa:	mov    QWORD PTR [rip+0xafcf],rax        # 410880 <__bss_start@@Base+0xf0>
  4058b1:	lea    rdi,[rip+0x5a6f]        # 40b327 <_IO_stdin_used@@Base+0x327>
  4058b8:	call   4022e0 <puts@plt>
  4058bd:	mov    rax,QWORD PTR [rip+0xafc4]        # 410888 <__bss_start@@Base+0xf8>
  4058c4:	inc    rax
  4058c7:	mov    QWORD PTR [rip+0xafba],rax        # 410888 <__bss_start@@Base+0xf8>
  4058ce:	lea    rdx,[rip+0x5aff]        # 40b3d4 <_IO_stdin_used@@Base+0x3d4>
  4058d5:	lea    rsi,[rip+0x5a2d]        # 40b309 <_IO_stdin_used@@Base+0x309>
  4058dc:	lea    rdi,[rip+0x5a32]        # 40b315 <_IO_stdin_used@@Base+0x315>
  4058e3:	mov    eax,0x0
  4058e8:	call   402360 <printf@plt>
  4058ed:	mov    rax,QWORD PTR [rip+0xaf9c]        # 410890 <__bss_start@@Base+0x100>
  4058f4:	inc    rax
  4058f7:	mov    QWORD PTR [rip+0xaf92],rax        # 410890 <__bss_start@@Base+0x100>
  4058fe:	mov    eax,0x0
  405903:	call   4029e2 <setup@@Base>
  405908:	mov    rax,QWORD PTR [rip+0xaf89]        # 410898 <__bss_start@@Base+0x108>
  40590f:	inc    rax
  405912:	mov    QWORD PTR [rip+0xaf7f],rax        # 410898 <__bss_start@@Base+0x108>
  405919:	mov    eax,0x0
  40591e:	call   40300d <boolean_expression_complex@@Base>
  405923:	mov    rax,QWORD PTR [rip+0xaf76]        # 4108a0 <__bss_start@@Base+0x110>
  40592a:	inc    rax
  40592d:	mov    QWORD PTR [rip+0xaf6c],rax        # 4108a0 <__bss_start@@Base+0x110>
  405934:	lea    rdi,[rip+0x59ec]        # 40b327 <_IO_stdin_used@@Base+0x327>
  40593b:	call   4022e0 <puts@plt>
  405940:	mov    rax,QWORD PTR [rip+0xaf61]        # 4108a8 <__bss_start@@Base+0x118>
  405947:	inc    rax
  40594a:	mov    QWORD PTR [rip+0xaf57],rax        # 4108a8 <__bss_start@@Base+0x118>
  405951:	lea    rdx,[rip+0x5a97]        # 40b3ef <_IO_stdin_used@@Base+0x3ef>
  405958:	lea    rsi,[rip+0x59aa]        # 40b309 <_IO_stdin_used@@Base+0x309>
  40595f:	lea    rdi,[rip+0x59af]        # 40b315 <_IO_stdin_used@@Base+0x315>
  405966:	mov    eax,0x0
  40596b:	call   402360 <printf@plt>
  405970:	mov    rax,QWORD PTR [rip+0xaf39]        # 4108b0 <__bss_start@@Base+0x120>
  405977:	inc    rax
  40597a:	mov    QWORD PTR [rip+0xaf2f],rax        # 4108b0 <__bss_start@@Base+0x120>
  405981:	mov    eax,0x0
  405986:	call   4029e2 <setup@@Base>
  40598b:	mov    rax,QWORD PTR [rip+0xaf26]        # 4108b8 <__bss_start@@Base+0x128>
  405992:	inc    rax
  405995:	mov    QWORD PTR [rip+0xaf1c],rax        # 4108b8 <__bss_start@@Base+0x128>
  40599c:	mov    eax,0x0
  4059a1:	call   4039d2 <if_statement_only@@Base>
  4059a6:	mov    rax,QWORD PTR [rip+0xaf13]        # 4108c0 <__bss_start@@Base+0x130>
  4059ad:	inc    rax
  4059b0:	mov    QWORD PTR [rip+0xaf09],rax        # 4108c0 <__bss_start@@Base+0x130>
  4059b7:	lea    rdi,[rip+0x5969]        # 40b327 <_IO_stdin_used@@Base+0x327>
  4059be:	call   4022e0 <puts@plt>
  4059c3:	mov    rax,QWORD PTR [rip+0xaefe]        # 4108c8 <__bss_start@@Base+0x138>
  4059ca:	inc    rax
  4059cd:	mov    QWORD PTR [rip+0xaef4],rax        # 4108c8 <__bss_start@@Base+0x138>
  4059d4:	lea    rdx,[rip+0x5a26]        # 40b401 <_IO_stdin_used@@Base+0x401>
  4059db:	lea    rsi,[rip+0x5927]        # 40b309 <_IO_stdin_used@@Base+0x309>
  4059e2:	lea    rdi,[rip+0x592c]        # 40b315 <_IO_stdin_used@@Base+0x315>
  4059e9:	mov    eax,0x0
  4059ee:	call   402360 <printf@plt>
  4059f3:	mov    rax,QWORD PTR [rip+0xaed6]        # 4108d0 <__bss_start@@Base+0x140>
  4059fa:	inc    rax
  4059fd:	mov    QWORD PTR [rip+0xaecc],rax        # 4108d0 <__bss_start@@Base+0x140>
  405a04:	mov    eax,0x0
  405a09:	call   4029e2 <setup@@Base>
  405a0e:	mov    rax,QWORD PTR [rip+0xaec3]        # 4108d8 <__bss_start@@Base+0x148>
  405a15:	inc    rax
  405a18:	mov    QWORD PTR [rip+0xaeb9],rax        # 4108d8 <__bss_start@@Base+0x148>
  405a1f:	mov    eax,0x0
  405a24:	call   403d89 <if_else_statements@@Base>
  405a29:	mov    rax,QWORD PTR [rip+0xaeb0]        # 4108e0 <__bss_start@@Base+0x150>
  405a30:	inc    rax
  405a33:	mov    QWORD PTR [rip+0xaea6],rax        # 4108e0 <__bss_start@@Base+0x150>
  405a3a:	lea    rdi,[rip+0x58e6]        # 40b327 <_IO_stdin_used@@Base+0x327>
  405a41:	call   4022e0 <puts@plt>
  405a46:	mov    rax,QWORD PTR [rip+0xae9b]        # 4108e8 <__bss_start@@Base+0x158>
  405a4d:	inc    rax
  405a50:	mov    QWORD PTR [rip+0xae91],rax        # 4108e8 <__bss_start@@Base+0x158>
  405a57:	lea    rdx,[rip+0x59ba]        # 40b418 <_IO_stdin_used@@Base+0x418>
  405a5e:	lea    rsi,[rip+0x58a4]        # 40b309 <_IO_stdin_used@@Base+0x309>
  405a65:	lea    rdi,[rip+0x58a9]        # 40b315 <_IO_stdin_used@@Base+0x315>
  405a6c:	mov    eax,0x0
  405a71:	call   402360 <printf@plt>
  405a76:	mov    rax,QWORD PTR [rip+0xae73]        # 4108f0 <__bss_start@@Base+0x160>
  405a7d:	inc    rax
  405a80:	mov    QWORD PTR [rip+0xae69],rax        # 4108f0 <__bss_start@@Base+0x160>
  405a87:	mov    eax,0x0
  405a8c:	call   4029e2 <setup@@Base>
  405a91:	mov    rax,QWORD PTR [rip+0xae60]        # 4108f8 <__bss_start@@Base+0x168>
  405a98:	inc    rax
  405a9b:	mov    QWORD PTR [rip+0xae56],rax        # 4108f8 <__bss_start@@Base+0x168>
  405aa2:	mov    eax,0x0
  405aa7:	call   40484f <if_statement_inside_if_statement@@Base>
  405aac:	mov    rax,QWORD PTR [rip+0xae4d]        # 410900 <__bss_start@@Base+0x170>
  405ab3:	inc    rax
  405ab6:	mov    QWORD PTR [rip+0xae43],rax        # 410900 <__bss_start@@Base+0x170>
  405abd:	lea    rdi,[rip+0x5863]        # 40b327 <_IO_stdin_used@@Base+0x327>
  405ac4:	call   4022e0 <puts@plt>
  405ac9:	mov    rax,QWORD PTR [rip+0xae38]        # 410908 <__bss_start@@Base+0x178>
  405ad0:	inc    rax
  405ad3:	mov    QWORD PTR [rip+0xae2e],rax        # 410908 <__bss_start@@Base+0x178>
  405ada:	lea    rdx,[rip+0x595f]        # 40b440 <_IO_stdin_used@@Base+0x440>
  405ae1:	lea    rsi,[rip+0x5821]        # 40b309 <_IO_stdin_used@@Base+0x309>
  405ae8:	lea    rdi,[rip+0x5826]        # 40b315 <_IO_stdin_used@@Base+0x315>
  405aef:	mov    eax,0x0
  405af4:	call   402360 <printf@plt>
  405af9:	mov    rax,QWORD PTR [rip+0xae10]        # 410910 <__bss_start@@Base+0x180>
  405b00:	inc    rax
  405b03:	mov    QWORD PTR [rip+0xae06],rax        # 410910 <__bss_start@@Base+0x180>
  405b0a:	mov    eax,0x0
  405b0f:	call   4029e2 <setup@@Base>
  405b14:	mov    rax,QWORD PTR [rip+0xadfd]        # 410918 <__bss_start@@Base+0x188>
  405b1b:	inc    rax
  405b1e:	mov    QWORD PTR [rip+0xadf3],rax        # 410918 <__bss_start@@Base+0x188>
  405b25:	mov    eax,0x0
  405b2a:	call   404e8d <if_statement_inside_else_statement@@Base>
  405b2f:	mov    rax,QWORD PTR [rip+0xadea]        # 410920 <__bss_start@@Base+0x190>
  405b36:	inc    rax
  405b39:	mov    QWORD PTR [rip+0xade0],rax        # 410920 <__bss_start@@Base+0x190>
  405b40:	lea    rdi,[rip+0x57e0]        # 40b327 <_IO_stdin_used@@Base+0x327>
  405b47:	call   4022e0 <puts@plt>
  405b4c:	mov    rax,QWORD PTR [rip+0xadd5]        # 410928 <__bss_start@@Base+0x198>
  405b53:	inc    rax
  405b56:	mov    QWORD PTR [rip+0xadcb],rax        # 410928 <__bss_start@@Base+0x198>
  405b5d:	lea    rdx,[rip+0x58ff]        # 40b463 <_IO_stdin_used@@Base+0x463>
  405b64:	lea    rsi,[rip+0x579e]        # 40b309 <_IO_stdin_used@@Base+0x309>
  405b6b:	lea    rdi,[rip+0x57a3]        # 40b315 <_IO_stdin_used@@Base+0x315>
  405b72:	mov    eax,0x0
  405b77:	call   402360 <printf@plt>
  405b7c:	mov    rax,QWORD PTR [rip+0xadad]        # 410930 <__bss_start@@Base+0x1a0>
  405b83:	inc    rax
  405b86:	mov    QWORD PTR [rip+0xada3],rax        # 410930 <__bss_start@@Base+0x1a0>
  405b8d:	mov    eax,0x0
  405b92:	call   4029e2 <setup@@Base>
  405b97:	mov    rax,QWORD PTR [rip+0xad9a]        # 410938 <__bss_start@@Base+0x1a8>
  405b9e:	inc    rax
  405ba1:	mov    QWORD PTR [rip+0xad90],rax        # 410938 <__bss_start@@Base+0x1a8>
  405ba8:	mov    eax,0x0
  405bad:	call   40457a <body_with_one_return@@Base>
  405bb2:	mov    rax,QWORD PTR [rip+0xad87]        # 410940 <__bss_start@@Base+0x1b0>
  405bb9:	inc    rax
  405bbc:	mov    QWORD PTR [rip+0xad7d],rax        # 410940 <__bss_start@@Base+0x1b0>
  405bc3:	lea    rdi,[rip+0x575d]        # 40b327 <_IO_stdin_used@@Base+0x327>
  405bca:	call   4022e0 <puts@plt>
  405bcf:	mov    rax,QWORD PTR [rip+0xad72]        # 410948 <__bss_start@@Base+0x1b8>
  405bd6:	inc    rax
  405bd9:	mov    QWORD PTR [rip+0xad68],rax        # 410948 <__bss_start@@Base+0x1b8>
  405be0:	lea    rdx,[rip+0x5891]        # 40b478 <_IO_stdin_used@@Base+0x478>
  405be7:	lea    rsi,[rip+0x571b]        # 40b309 <_IO_stdin_used@@Base+0x309>
  405bee:	lea    rdi,[rip+0x5720]        # 40b315 <_IO_stdin_used@@Base+0x315>
  405bf5:	mov    eax,0x0
  405bfa:	call   402360 <printf@plt>
  405bff:	mov    rax,QWORD PTR [rip+0xad4a]        # 410950 <__bss_start@@Base+0x1c0>
  405c06:	inc    rax
  405c09:	mov    QWORD PTR [rip+0xad40],rax        # 410950 <__bss_start@@Base+0x1c0>
  405c10:	mov    eax,0x0
  405c15:	call   4029e2 <setup@@Base>
  405c1a:	mov    rax,QWORD PTR [rip+0xad37]        # 410958 <__bss_start@@Base+0x1c8>
  405c21:	inc    rax
  405c24:	mov    QWORD PTR [rip+0xad2d],rax        # 410958 <__bss_start@@Base+0x1c8>
  405c2b:	mov    eax,0x0
  405c30:	call   4041b2 <body_with_two_returns@@Base>
  405c35:	mov    rax,QWORD PTR [rip+0xad24]        # 410960 <__bss_start@@Base+0x1d0>
  405c3c:	inc    rax
  405c3f:	mov    QWORD PTR [rip+0xad1a],rax        # 410960 <__bss_start@@Base+0x1d0>
  405c46:	lea    rdi,[rip+0x56da]        # 40b327 <_IO_stdin_used@@Base+0x327>
  405c4d:	call   4022e0 <puts@plt>
  405c52:	mov    rax,QWORD PTR [rip+0xad0f]        # 410968 <__bss_start@@Base+0x1d8>
  405c59:	inc    rax
  405c5c:	mov    QWORD PTR [rip+0xad05],rax        # 410968 <__bss_start@@Base+0x1d8>
  405c63:	lea    rdi,[rip+0x5824]        # 40b48e <_IO_stdin_used@@Base+0x48e>
  405c6a:	call   4022e0 <puts@plt>
  405c6f:	mov    rax,QWORD PTR [rip+0xacfa]        # 410970 <__bss_start@@Base+0x1e0>
  405c76:	inc    rax
  405c79:	mov    QWORD PTR [rip+0xacf0],rax        # 410970 <__bss_start@@Base+0x1e0>
  405c80:	lea    rdi,[rip+0x5816]        # 40b49d <_IO_stdin_used@@Base+0x49d>
  405c87:	call   4022e0 <puts@plt>
  405c8c:	mov    rax,QWORD PTR [rip+0xace5]        # 410978 <__bss_start@@Base+0x1e8>
  405c93:	inc    rax
  405c96:	mov    QWORD PTR [rip+0xacdb],rax        # 410978 <__bss_start@@Base+0x1e8>
  405c9d:	lea    rdi,[rip+0x5621]        # 40b2c5 <_IO_stdin_used@@Base+0x2c5>
  405ca4:	call   4022e0 <puts@plt>
  405ca9:	mov    edx,0x0
  405cae:	mov    rax,QWORD PTR [rip+0xaccb]        # 410980 <__bss_start@@Base+0x1f0>
  405cb5:	inc    rax
  405cb8:	mov    QWORD PTR [rip+0xacc1],rax        # 410980 <__bss_start@@Base+0x1f0>
  405cbf:	mov    eax,edx
  405cc1:	pop    rbp
  405cc2:	ret    
  405cc3:	endbr64 
  405cc7:	push   rbp
  405cc8:	mov    rbp,rsp
  405ccb:	lea    rdi,[rip+0x99ae]        # 40f680 <__data_start@@Base+0x540>
  405cd2:	call   409f30 <__gcov_sort_n_vals@@Base+0x1700>
  405cd7:	pop    rbp
  405cd8:	ret    
  405cd9:	endbr64 
  405cdd:	push   rbp
  405cde:	mov    rbp,rsp
  405ce1:	call   409ea0 <__gcov_sort_n_vals@@Base+0x1670>
  405ce6:	pop    rbp
  405ce7:	ret    

0000000000405ce8 <init_token_int_type@@Base>:
  405ce8:	endbr64 
  405cec:	push   rbp
  405ced:	mov    rbp,rsp
  405cf0:	mov    QWORD PTR [rbp-0x8],rdi
  405cf4:	mov    rax,QWORD PTR [rip+0xb3f5]        # 4110f0 <__bss_start@@Base+0x960>
  405cfb:	inc    rax
  405cfe:	mov    QWORD PTR [rip+0xb3eb],rax        # 4110f0 <__bss_start@@Base+0x960>
  405d05:	mov    rax,QWORD PTR [rbp-0x8]
  405d09:	mov    DWORD PTR [rax],0x0
  405d0f:	nop
  405d10:	pop    rbp
  405d11:	ret    

0000000000405d12 <init_token_int_value@@Base>:
  405d12:	endbr64 
  405d16:	push   rbp
  405d17:	mov    rbp,rsp
  405d1a:	mov    QWORD PTR [rbp-0x8],rdi
  405d1e:	mov    DWORD PTR [rbp-0xc],esi
  405d21:	mov    rax,QWORD PTR [rip+0xb3c0]        # 4110e8 <__bss_start@@Base+0x958>
  405d28:	inc    rax
  405d2b:	mov    QWORD PTR [rip+0xb3b6],rax        # 4110e8 <__bss_start@@Base+0x958>
  405d32:	mov    rax,QWORD PTR [rbp-0x8]
  405d36:	mov    DWORD PTR [rax],0x1
  405d3c:	mov    rax,QWORD PTR [rbp-0x8]
  405d40:	mov    edx,DWORD PTR [rbp-0xc]
  405d43:	mov    DWORD PTR [rax+0x4],edx
  405d46:	nop
  405d47:	pop    rbp
  405d48:	ret    

0000000000405d49 <init_token_function@@Base>:
  405d49:	endbr64 
  405d4d:	push   rbp
  405d4e:	mov    rbp,rsp
  405d51:	mov    QWORD PTR [rbp-0x8],rdi
  405d55:	mov    QWORD PTR [rbp-0x10],rsi
  405d59:	mov    rax,QWORD PTR [rip+0xb380]        # 4110e0 <__bss_start@@Base+0x950>
  405d60:	inc    rax
  405d63:	mov    QWORD PTR [rip+0xb376],rax        # 4110e0 <__bss_start@@Base+0x950>
  405d6a:	mov    rax,QWORD PTR [rbp-0x8]
  405d6e:	mov    DWORD PTR [rax],0x2
  405d74:	mov    rax,QWORD PTR [rbp-0x8]
  405d78:	mov    rdx,QWORD PTR [rbp-0x10]
  405d7c:	mov    QWORD PTR [rax+0x8],rdx
  405d80:	nop
  405d81:	pop    rbp
  405d82:	ret    

0000000000405d83 <init_token_opar@@Base>:
  405d83:	endbr64 
  405d87:	push   rbp
  405d88:	mov    rbp,rsp
  405d8b:	mov    QWORD PTR [rbp-0x8],rdi
  405d8f:	mov    rax,QWORD PTR [rip+0xb342]        # 4110d8 <__bss_start@@Base+0x948>
  405d96:	inc    rax
  405d99:	mov    QWORD PTR [rip+0xb338],rax        # 4110d8 <__bss_start@@Base+0x948>
  405da0:	mov    rax,QWORD PTR [rbp-0x8]
  405da4:	mov    DWORD PTR [rax],0x3
  405daa:	nop
  405dab:	pop    rbp
  405dac:	ret    

0000000000405dad <init_token_cpar@@Base>:
  405dad:	endbr64 
  405db1:	push   rbp
  405db2:	mov    rbp,rsp
  405db5:	mov    QWORD PTR [rbp-0x8],rdi
  405db9:	mov    rax,QWORD PTR [rip+0xb310]        # 4110d0 <__bss_start@@Base+0x940>
  405dc0:	inc    rax
  405dc3:	mov    QWORD PTR [rip+0xb306],rax        # 4110d0 <__bss_start@@Base+0x940>
  405dca:	mov    rax,QWORD PTR [rbp-0x8]
  405dce:	mov    DWORD PTR [rax],0x4
  405dd4:	nop
  405dd5:	pop    rbp
  405dd6:	ret    

0000000000405dd7 <init_token_obra@@Base>:
  405dd7:	endbr64 
  405ddb:	push   rbp
  405ddc:	mov    rbp,rsp
  405ddf:	mov    QWORD PTR [rbp-0x8],rdi
  405de3:	mov    rax,QWORD PTR [rip+0xb2de]        # 4110c8 <__bss_start@@Base+0x938>
  405dea:	inc    rax
  405ded:	mov    QWORD PTR [rip+0xb2d4],rax        # 4110c8 <__bss_start@@Base+0x938>
  405df4:	mov    rax,QWORD PTR [rbp-0x8]
  405df8:	mov    DWORD PTR [rax],0x5
  405dfe:	nop
  405dff:	pop    rbp
  405e00:	ret    

0000000000405e01 <init_token_cbra@@Base>:
  405e01:	endbr64 
  405e05:	push   rbp
  405e06:	mov    rbp,rsp
  405e09:	mov    QWORD PTR [rbp-0x8],rdi
  405e0d:	mov    rax,QWORD PTR [rip+0xb2ac]        # 4110c0 <__bss_start@@Base+0x930>
  405e14:	inc    rax
  405e17:	mov    QWORD PTR [rip+0xb2a2],rax        # 4110c0 <__bss_start@@Base+0x930>
  405e1e:	mov    rax,QWORD PTR [rbp-0x8]
  405e22:	mov    DWORD PTR [rax],0x6
  405e28:	nop
  405e29:	pop    rbp
  405e2a:	ret    

0000000000405e2b <init_token_return@@Base>:
  405e2b:	endbr64 
  405e2f:	push   rbp
  405e30:	mov    rbp,rsp
  405e33:	mov    QWORD PTR [rbp-0x8],rdi
  405e37:	mov    rax,QWORD PTR [rip+0xb27a]        # 4110b8 <__bss_start@@Base+0x928>
  405e3e:	inc    rax
  405e41:	mov    QWORD PTR [rip+0xb270],rax        # 4110b8 <__bss_start@@Base+0x928>
  405e48:	mov    rax,QWORD PTR [rbp-0x8]
  405e4c:	mov    DWORD PTR [rax],0x7
  405e52:	nop
  405e53:	pop    rbp
  405e54:	ret    

0000000000405e55 <init_token_semicolon@@Base>:
  405e55:	endbr64 
  405e59:	push   rbp
  405e5a:	mov    rbp,rsp
  405e5d:	mov    QWORD PTR [rbp-0x8],rdi
  405e61:	mov    rax,QWORD PTR [rip+0xb248]        # 4110b0 <__bss_start@@Base+0x920>
  405e68:	inc    rax
  405e6b:	mov    QWORD PTR [rip+0xb23e],rax        # 4110b0 <__bss_start@@Base+0x920>
  405e72:	mov    rax,QWORD PTR [rbp-0x8]
  405e76:	mov    DWORD PTR [rax],0x8
  405e7c:	nop
  405e7d:	pop    rbp
  405e7e:	ret    

0000000000405e7f <init_token_eof@@Base>:
  405e7f:	endbr64 
  405e83:	push   rbp
  405e84:	mov    rbp,rsp
  405e87:	mov    QWORD PTR [rbp-0x8],rdi
  405e8b:	mov    rax,QWORD PTR [rip+0xb216]        # 4110a8 <__bss_start@@Base+0x918>
  405e92:	inc    rax
  405e95:	mov    QWORD PTR [rip+0xb20c],rax        # 4110a8 <__bss_start@@Base+0x918>
  405e9c:	mov    rax,QWORD PTR [rbp-0x8]
  405ea0:	mov    DWORD PTR [rax],0x9
  405ea6:	nop
  405ea7:	pop    rbp
  405ea8:	ret    

0000000000405ea9 <init_token_if@@Base>:
  405ea9:	endbr64 
  405ead:	push   rbp
  405eae:	mov    rbp,rsp
  405eb1:	mov    QWORD PTR [rbp-0x8],rdi
  405eb5:	mov    rax,QWORD PTR [rip+0xb1e4]        # 4110a0 <__bss_start@@Base+0x910>
  405ebc:	inc    rax
  405ebf:	mov    QWORD PTR [rip+0xb1da],rax        # 4110a0 <__bss_start@@Base+0x910>
  405ec6:	mov    rax,QWORD PTR [rbp-0x8]
  405eca:	mov    DWORD PTR [rax],0xa
  405ed0:	nop
  405ed1:	pop    rbp
  405ed2:	ret    

0000000000405ed3 <init_token_else@@Base>:
  405ed3:	endbr64 
  405ed7:	push   rbp
  405ed8:	mov    rbp,rsp
  405edb:	mov    QWORD PTR [rbp-0x8],rdi
  405edf:	mov    rax,QWORD PTR [rip+0xb1b2]        # 411098 <__bss_start@@Base+0x908>
  405ee6:	inc    rax
  405ee9:	mov    QWORD PTR [rip+0xb1a8],rax        # 411098 <__bss_start@@Base+0x908>
  405ef0:	mov    rax,QWORD PTR [rbp-0x8]
  405ef4:	mov    DWORD PTR [rax],0xb
  405efa:	nop
  405efb:	pop    rbp
  405efc:	ret    

0000000000405efd <init_token_boolean_op@@Base>:
  405efd:	endbr64 
  405f01:	push   rbp
  405f02:	mov    rbp,rsp
  405f05:	mov    QWORD PTR [rbp-0x8],rdi
  405f09:	mov    QWORD PTR [rbp-0x10],rsi
  405f0d:	mov    rax,QWORD PTR [rip+0xb17c]        # 411090 <__bss_start@@Base+0x900>
  405f14:	inc    rax
  405f17:	mov    QWORD PTR [rip+0xb172],rax        # 411090 <__bss_start@@Base+0x900>
  405f1e:	mov    rax,QWORD PTR [rbp-0x8]
  405f22:	mov    DWORD PTR [rax],0xc
  405f28:	mov    rax,QWORD PTR [rbp-0x8]
  405f2c:	mov    rdx,QWORD PTR [rbp-0x10]
  405f30:	mov    QWORD PTR [rax+0x8],rdx
  405f34:	nop
  405f35:	pop    rbp
  405f36:	ret    

0000000000405f37 <free_token_int_type@@Base>:
  405f37:	endbr64 
  405f3b:	push   rbp
  405f3c:	mov    rbp,rsp
  405f3f:	sub    rsp,0x10
  405f43:	mov    QWORD PTR [rbp-0x8],rdi
  405f47:	mov    rax,QWORD PTR [rip+0xb13a]        # 411088 <__bss_start@@Base+0x8f8>
  405f4e:	inc    rax
  405f51:	mov    QWORD PTR [rip+0xb130],rax        # 411088 <__bss_start@@Base+0x8f8>
  405f58:	mov    rax,QWORD PTR [rbp-0x8]
  405f5c:	mov    rdi,rax
  405f5f:	call   402270 <free@plt>
  405f64:	nop
  405f65:	leave  
  405f66:	ret    

0000000000405f67 <free_token_int_value@@Base>:
  405f67:	endbr64 
  405f6b:	push   rbp
  405f6c:	mov    rbp,rsp
  405f6f:	sub    rsp,0x10
  405f73:	mov    QWORD PTR [rbp-0x8],rdi
  405f77:	mov    rax,QWORD PTR [rip+0xb102]        # 411080 <__bss_start@@Base+0x8f0>
  405f7e:	inc    rax
  405f81:	mov    QWORD PTR [rip+0xb0f8],rax        # 411080 <__bss_start@@Base+0x8f0>
  405f88:	mov    rax,QWORD PTR [rbp-0x8]
  405f8c:	mov    rdi,rax
  405f8f:	call   402270 <free@plt>
  405f94:	nop
  405f95:	leave  
  405f96:	ret    

0000000000405f97 <free_token_function@@Base>:
  405f97:	endbr64 
  405f9b:	push   rbp
  405f9c:	mov    rbp,rsp
  405f9f:	sub    rsp,0x10
  405fa3:	mov    QWORD PTR [rbp-0x8],rdi
  405fa7:	mov    rax,QWORD PTR [rip+0xb0ca]        # 411078 <__bss_start@@Base+0x8e8>
  405fae:	inc    rax
  405fb1:	mov    QWORD PTR [rip+0xb0c0],rax        # 411078 <__bss_start@@Base+0x8e8>
  405fb8:	mov    rax,QWORD PTR [rbp-0x8]
  405fbc:	mov    rdi,rax
  405fbf:	call   402270 <free@plt>
  405fc4:	nop
  405fc5:	leave  
  405fc6:	ret    

0000000000405fc7 <free_token_opar@@Base>:
  405fc7:	endbr64 
  405fcb:	push   rbp
  405fcc:	mov    rbp,rsp
  405fcf:	sub    rsp,0x10
  405fd3:	mov    QWORD PTR [rbp-0x8],rdi
  405fd7:	mov    rax,QWORD PTR [rip+0xb092]        # 411070 <__bss_start@@Base+0x8e0>
  405fde:	inc    rax
  405fe1:	mov    QWORD PTR [rip+0xb088],rax        # 411070 <__bss_start@@Base+0x8e0>
  405fe8:	mov    rax,QWORD PTR [rbp-0x8]
  405fec:	mov    rdi,rax
  405fef:	call   402270 <free@plt>
  405ff4:	nop
  405ff5:	leave  
  405ff6:	ret    

0000000000405ff7 <free_token_cpar@@Base>:
  405ff7:	endbr64 
  405ffb:	push   rbp
  405ffc:	mov    rbp,rsp
  405fff:	sub    rsp,0x10
  406003:	mov    QWORD PTR [rbp-0x8],rdi
  406007:	mov    rax,QWORD PTR [rip+0xb05a]        # 411068 <__bss_start@@Base+0x8d8>
  40600e:	inc    rax
  406011:	mov    QWORD PTR [rip+0xb050],rax        # 411068 <__bss_start@@Base+0x8d8>
  406018:	mov    rax,QWORD PTR [rbp-0x8]
  40601c:	mov    rdi,rax
  40601f:	call   402270 <free@plt>
  406024:	nop
  406025:	leave  
  406026:	ret    

0000000000406027 <free_token_obra@@Base>:
  406027:	endbr64 
  40602b:	push   rbp
  40602c:	mov    rbp,rsp
  40602f:	sub    rsp,0x10
  406033:	mov    QWORD PTR [rbp-0x8],rdi
  406037:	mov    rax,QWORD PTR [rip+0xb022]        # 411060 <__bss_start@@Base+0x8d0>
  40603e:	inc    rax
  406041:	mov    QWORD PTR [rip+0xb018],rax        # 411060 <__bss_start@@Base+0x8d0>
  406048:	mov    rax,QWORD PTR [rbp-0x8]
  40604c:	mov    rdi,rax
  40604f:	call   402270 <free@plt>
  406054:	nop
  406055:	leave  
  406056:	ret    

0000000000406057 <free_token_cbra@@Base>:
  406057:	endbr64 
  40605b:	push   rbp
  40605c:	mov    rbp,rsp
  40605f:	sub    rsp,0x10
  406063:	mov    QWORD PTR [rbp-0x8],rdi
  406067:	mov    rax,QWORD PTR [rip+0xafea]        # 411058 <__bss_start@@Base+0x8c8>
  40606e:	inc    rax
  406071:	mov    QWORD PTR [rip+0xafe0],rax        # 411058 <__bss_start@@Base+0x8c8>
  406078:	mov    rax,QWORD PTR [rbp-0x8]
  40607c:	mov    rdi,rax
  40607f:	call   402270 <free@plt>
  406084:	nop
  406085:	leave  
  406086:	ret    

0000000000406087 <free_token_return@@Base>:
  406087:	endbr64 
  40608b:	push   rbp
  40608c:	mov    rbp,rsp
  40608f:	sub    rsp,0x10
  406093:	mov    QWORD PTR [rbp-0x8],rdi
  406097:	mov    rax,QWORD PTR [rip+0xafb2]        # 411050 <__bss_start@@Base+0x8c0>
  40609e:	inc    rax
  4060a1:	mov    QWORD PTR [rip+0xafa8],rax        # 411050 <__bss_start@@Base+0x8c0>
  4060a8:	mov    rax,QWORD PTR [rbp-0x8]
  4060ac:	mov    rdi,rax
  4060af:	call   402270 <free@plt>
  4060b4:	nop
  4060b5:	leave  
  4060b6:	ret    

00000000004060b7 <free_token_semicolon@@Base>:
  4060b7:	endbr64 
  4060bb:	push   rbp
  4060bc:	mov    rbp,rsp
  4060bf:	sub    rsp,0x10
  4060c3:	mov    QWORD PTR [rbp-0x8],rdi
  4060c7:	mov    rax,QWORD PTR [rip+0xaf7a]        # 411048 <__bss_start@@Base+0x8b8>
  4060ce:	inc    rax
  4060d1:	mov    QWORD PTR [rip+0xaf70],rax        # 411048 <__bss_start@@Base+0x8b8>
  4060d8:	mov    rax,QWORD PTR [rbp-0x8]
  4060dc:	mov    rdi,rax
  4060df:	call   402270 <free@plt>
  4060e4:	nop
  4060e5:	leave  
  4060e6:	ret    

00000000004060e7 <free_token_eof@@Base>:
  4060e7:	endbr64 
  4060eb:	push   rbp
  4060ec:	mov    rbp,rsp
  4060ef:	sub    rsp,0x10
  4060f3:	mov    QWORD PTR [rbp-0x8],rdi
  4060f7:	mov    rax,QWORD PTR [rip+0xaf42]        # 411040 <__bss_start@@Base+0x8b0>
  4060fe:	inc    rax
  406101:	mov    QWORD PTR [rip+0xaf38],rax        # 411040 <__bss_start@@Base+0x8b0>
  406108:	mov    rax,QWORD PTR [rbp-0x8]
  40610c:	mov    rdi,rax
  40610f:	call   402270 <free@plt>
  406114:	nop
  406115:	leave  
  406116:	ret    

0000000000406117 <free_token_if@@Base>:
  406117:	endbr64 
  40611b:	push   rbp
  40611c:	mov    rbp,rsp
  40611f:	sub    rsp,0x10
  406123:	mov    QWORD PTR [rbp-0x8],rdi
  406127:	mov    rax,QWORD PTR [rip+0xaf0a]        # 411038 <__bss_start@@Base+0x8a8>
  40612e:	inc    rax
  406131:	mov    QWORD PTR [rip+0xaf00],rax        # 411038 <__bss_start@@Base+0x8a8>
  406138:	mov    rax,QWORD PTR [rbp-0x8]
  40613c:	mov    rdi,rax
  40613f:	call   402270 <free@plt>
  406144:	nop
  406145:	leave  
  406146:	ret    

0000000000406147 <free_token_else@@Base>:
  406147:	endbr64 
  40614b:	push   rbp
  40614c:	mov    rbp,rsp
  40614f:	sub    rsp,0x10
  406153:	mov    QWORD PTR [rbp-0x8],rdi
  406157:	mov    rax,QWORD PTR [rip+0xaed2]        # 411030 <__bss_start@@Base+0x8a0>
  40615e:	inc    rax
  406161:	mov    QWORD PTR [rip+0xaec8],rax        # 411030 <__bss_start@@Base+0x8a0>
  406168:	mov    rax,QWORD PTR [rbp-0x8]
  40616c:	mov    rdi,rax
  40616f:	call   402270 <free@plt>
  406174:	nop
  406175:	leave  
  406176:	ret    

0000000000406177 <free_token_boolean_op@@Base>:
  406177:	endbr64 
  40617b:	push   rbp
  40617c:	mov    rbp,rsp
  40617f:	sub    rsp,0x10
  406183:	mov    QWORD PTR [rbp-0x8],rdi
  406187:	mov    rax,QWORD PTR [rip+0xae92]        # 411020 <__bss_start@@Base+0x890>
  40618e:	inc    rax
  406191:	mov    QWORD PTR [rip+0xae88],rax        # 411020 <__bss_start@@Base+0x890>
  406198:	mov    rax,QWORD PTR [rbp-0x8]
  40619c:	mov    rax,QWORD PTR [rax+0x8]
  4061a0:	test   rax,rax
  4061a3:	je     4061c6 <free_token_boolean_op@@Base+0x4f>
  4061a5:	mov    rax,QWORD PTR [rip+0xae7c]        # 411028 <__bss_start@@Base+0x898>
  4061ac:	inc    rax
  4061af:	mov    QWORD PTR [rip+0xae72],rax        # 411028 <__bss_start@@Base+0x898>
  4061b6:	mov    rax,QWORD PTR [rbp-0x8]
  4061ba:	mov    rax,QWORD PTR [rax+0x8]
  4061be:	mov    rdi,rax
  4061c1:	call   402270 <free@plt>
  4061c6:	mov    rax,QWORD PTR [rbp-0x8]
  4061ca:	mov    rdi,rax
  4061cd:	call   402270 <free@plt>
  4061d2:	nop
  4061d3:	leave  
  4061d4:	ret    
  4061d5:	endbr64 
  4061d9:	push   rbp
  4061da:	mov    rbp,rsp
  4061dd:	lea    rdi,[rip+0x9c7c]        # 40fe60 <__data_start@@Base+0xd20>
  4061e4:	call   409f30 <__gcov_sort_n_vals@@Base+0x1700>
  4061e9:	pop    rbp
  4061ea:	ret    
  4061eb:	endbr64 
  4061ef:	push   rbp
  4061f0:	mov    rbp,rsp
  4061f3:	call   409ea0 <__gcov_sort_n_vals@@Base+0x1670>
  4061f8:	pop    rbp
  4061f9:	ret    

00000000004061fa <init_ast_base@@Base>:
  4061fa:	endbr64 
  4061fe:	push   rbp
  4061ff:	mov    rbp,rsp
  406202:	mov    QWORD PTR [rbp-0x8],rdi
  406206:	mov    DWORD PTR [rbp-0xc],esi
  406209:	mov    QWORD PTR [rbp-0x18],rdx
  40620d:	mov    rax,QWORD PTR [rip+0xb14c]        # 411360 <__bss_start@@Base+0xbd0>
  406214:	inc    rax
  406217:	mov    QWORD PTR [rip+0xb142],rax        # 411360 <__bss_start@@Base+0xbd0>
  40621e:	mov    rax,QWORD PTR [rbp-0x8]
  406222:	mov    edx,DWORD PTR [rbp-0xc]
  406225:	mov    DWORD PTR [rax],edx
  406227:	mov    rax,QWORD PTR [rbp-0x8]
  40622b:	mov    rdx,QWORD PTR [rbp-0x18]
  40622f:	mov    QWORD PTR [rax+0x8],rdx
  406233:	nop
  406234:	pop    rbp
  406235:	ret    

0000000000406236 <init_ast_base_single@@Base>:
  406236:	endbr64 
  40623a:	push   rbp
  40623b:	mov    rbp,rsp
  40623e:	sub    rsp,0x10
  406242:	mov    QWORD PTR [rbp-0x8],rdi
  406246:	mov    DWORD PTR [rbp-0xc],esi
  406249:	mov    rax,QWORD PTR [rip+0xb100]        # 411350 <__bss_start@@Base+0xbc0>
  406250:	inc    rax
  406253:	mov    QWORD PTR [rip+0xb0f6],rax        # 411350 <__bss_start@@Base+0xbc0>
  40625a:	mov    ecx,DWORD PTR [rbp-0xc]
  40625d:	mov    rax,QWORD PTR [rbp-0x8]
  406261:	mov    edx,0x0
  406266:	mov    esi,ecx
  406268:	mov    rdi,rax
  40626b:	call   4061fa <init_ast_base@@Base>
  406270:	mov    rax,QWORD PTR [rip+0xb0e1]        # 411358 <__bss_start@@Base+0xbc8>
  406277:	inc    rax
  40627a:	mov    QWORD PTR [rip+0xb0d7],rax        # 411358 <__bss_start@@Base+0xbc8>
  406281:	nop
  406282:	leave  
  406283:	ret    

0000000000406284 <init_node_id@@Base>:
  406284:	endbr64 
  406288:	push   rbp
  406289:	mov    rbp,rsp
  40628c:	sub    rsp,0x10
  406290:	mov    QWORD PTR [rbp-0x8],rdi
  406294:	mov    QWORD PTR [rbp-0x10],rsi
  406298:	mov    rax,QWORD PTR [rip+0xb0a1]        # 411340 <__bss_start@@Base+0xbb0>
  40629f:	inc    rax
  4062a2:	mov    QWORD PTR [rip+0xb097],rax        # 411340 <__bss_start@@Base+0xbb0>
  4062a9:	mov    rax,QWORD PTR [rbp-0x8]
  4062ad:	mov    esi,0x0
  4062b2:	mov    rdi,rax
  4062b5:	call   406236 <init_ast_base_single@@Base>
  4062ba:	mov    rax,QWORD PTR [rip+0xb087]        # 411348 <__bss_start@@Base+0xbb8>
  4062c1:	inc    rax
  4062c4:	mov    QWORD PTR [rip+0xb07d],rax        # 411348 <__bss_start@@Base+0xbb8>
  4062cb:	mov    rax,QWORD PTR [rbp-0x8]
  4062cf:	mov    rdx,QWORD PTR [rbp-0x10]
  4062d3:	mov    QWORD PTR [rax+0x10],rdx
  4062d7:	nop
  4062d8:	leave  
  4062d9:	ret    

00000000004062da <init_node_int@@Base>:
  4062da:	endbr64 
  4062de:	push   rbp
  4062df:	mov    rbp,rsp
  4062e2:	sub    rsp,0x10
  4062e6:	mov    QWORD PTR [rbp-0x8],rdi
  4062ea:	mov    DWORD PTR [rbp-0xc],esi
  4062ed:	mov    rax,QWORD PTR [rip+0xb03c]        # 411330 <__bss_start@@Base+0xba0>
  4062f4:	inc    rax
  4062f7:	mov    QWORD PTR [rip+0xb032],rax        # 411330 <__bss_start@@Base+0xba0>
  4062fe:	mov    rax,QWORD PTR [rbp-0x8]
  406302:	mov    esi,0x1
  406307:	mov    rdi,rax
  40630a:	call   406236 <init_ast_base_single@@Base>
  40630f:	mov    rax,QWORD PTR [rip+0xb022]        # 411338 <__bss_start@@Base+0xba8>
  406316:	inc    rax
  406319:	mov    QWORD PTR [rip+0xb018],rax        # 411338 <__bss_start@@Base+0xba8>
  406320:	mov    rax,QWORD PTR [rbp-0x8]
  406324:	mov    edx,DWORD PTR [rbp-0xc]
  406327:	mov    DWORD PTR [rax+0x10],edx
  40632a:	nop
  40632b:	leave  
  40632c:	ret    

000000000040632d <init_node_function@@Base>:
  40632d:	endbr64 
  406331:	push   rbp
  406332:	mov    rbp,rsp
  406335:	sub    rsp,0x20
  406339:	mov    QWORD PTR [rbp-0x8],rdi
  40633d:	mov    QWORD PTR [rbp-0x10],rsi
  406341:	mov    QWORD PTR [rbp-0x18],rdx
  406345:	mov    rax,QWORD PTR [rip+0xafd4]        # 411320 <__bss_start@@Base+0xb90>
  40634c:	inc    rax
  40634f:	mov    QWORD PTR [rip+0xafca],rax        # 411320 <__bss_start@@Base+0xb90>
  406356:	mov    rax,QWORD PTR [rbp-0x8]
  40635a:	mov    esi,0x2
  40635f:	mov    rdi,rax
  406362:	call   406236 <init_ast_base_single@@Base>
  406367:	mov    rax,QWORD PTR [rip+0xafba]        # 411328 <__bss_start@@Base+0xb98>
  40636e:	inc    rax
  406371:	mov    QWORD PTR [rip+0xafb0],rax        # 411328 <__bss_start@@Base+0xb98>
  406378:	mov    rax,QWORD PTR [rbp-0x8]
  40637c:	mov    rdx,QWORD PTR [rbp-0x10]
  406380:	mov    QWORD PTR [rax+0x10],rdx
  406384:	mov    rax,QWORD PTR [rbp-0x8]
  406388:	mov    rdx,QWORD PTR [rbp-0x18]
  40638c:	mov    QWORD PTR [rax+0x18],rdx
  406390:	nop
  406391:	leave  
  406392:	ret    

0000000000406393 <init_node_return@@Base>:
  406393:	endbr64 
  406397:	push   rbp
  406398:	mov    rbp,rsp
  40639b:	sub    rsp,0x10
  40639f:	mov    QWORD PTR [rbp-0x8],rdi
  4063a3:	mov    QWORD PTR [rbp-0x10],rsi
  4063a7:	mov    rax,QWORD PTR [rip+0xaf62]        # 411310 <__bss_start@@Base+0xb80>
  4063ae:	inc    rax
  4063b1:	mov    QWORD PTR [rip+0xaf58],rax        # 411310 <__bss_start@@Base+0xb80>
  4063b8:	mov    rax,QWORD PTR [rbp-0x8]
  4063bc:	mov    esi,0x3
  4063c1:	mov    rdi,rax
  4063c4:	call   406236 <init_ast_base_single@@Base>
  4063c9:	mov    rax,QWORD PTR [rip+0xaf48]        # 411318 <__bss_start@@Base+0xb88>
  4063d0:	inc    rax
  4063d3:	mov    QWORD PTR [rip+0xaf3e],rax        # 411318 <__bss_start@@Base+0xb88>
  4063da:	mov    rax,QWORD PTR [rbp-0x8]
  4063de:	mov    rdx,QWORD PTR [rbp-0x10]
  4063e2:	mov    QWORD PTR [rax+0x10],rdx
  4063e6:	nop
  4063e7:	leave  
  4063e8:	ret    

00000000004063e9 <init_node_if@@Base>:
  4063e9:	endbr64 
  4063ed:	push   rbp
  4063ee:	mov    rbp,rsp
  4063f1:	sub    rsp,0x20
  4063f5:	mov    QWORD PTR [rbp-0x8],rdi
  4063f9:	mov    QWORD PTR [rbp-0x10],rsi
  4063fd:	mov    QWORD PTR [rbp-0x18],rdx
  406401:	mov    QWORD PTR [rbp-0x20],rcx
  406405:	mov    rax,QWORD PTR [rip+0xaef4]        # 411300 <__bss_start@@Base+0xb70>
  40640c:	inc    rax
  40640f:	mov    QWORD PTR [rip+0xaeea],rax        # 411300 <__bss_start@@Base+0xb70>
  406416:	mov    rax,QWORD PTR [rbp-0x8]
  40641a:	mov    esi,0x4
  40641f:	mov    rdi,rax
  406422:	call   406236 <init_ast_base_single@@Base>
  406427:	mov    rax,QWORD PTR [rip+0xaeda]        # 411308 <__bss_start@@Base+0xb78>
  40642e:	inc    rax
  406431:	mov    QWORD PTR [rip+0xaed0],rax        # 411308 <__bss_start@@Base+0xb78>
  406438:	mov    rax,QWORD PTR [rbp-0x8]
  40643c:	mov    rdx,QWORD PTR [rbp-0x10]
  406440:	mov    QWORD PTR [rax+0x10],rdx
  406444:	mov    rax,QWORD PTR [rbp-0x8]
  406448:	mov    rdx,QWORD PTR [rbp-0x18]
  40644c:	mov    QWORD PTR [rax+0x18],rdx
  406450:	mov    rax,QWORD PTR [rbp-0x8]
  406454:	mov    rdx,QWORD PTR [rbp-0x20]
  406458:	mov    QWORD PTR [rax+0x20],rdx
  40645c:	nop
  40645d:	leave  
  40645e:	ret    

000000000040645f <init_node_boolean_operator@@Base>:
  40645f:	endbr64 
  406463:	push   rbp
  406464:	mov    rbp,rsp
  406467:	sub    rsp,0x20
  40646b:	mov    QWORD PTR [rbp-0x8],rdi
  40646f:	mov    DWORD PTR [rbp-0xc],esi
  406472:	mov    QWORD PTR [rbp-0x18],rdx
  406476:	mov    QWORD PTR [rbp-0x20],rcx
  40647a:	mov    rax,QWORD PTR [rip+0xae6f]        # 4112f0 <__bss_start@@Base+0xb60>
  406481:	inc    rax
  406484:	mov    QWORD PTR [rip+0xae65],rax        # 4112f0 <__bss_start@@Base+0xb60>
  40648b:	mov    rax,QWORD PTR [rbp-0x8]
  40648f:	mov    esi,0x0
  406494:	mov    rdi,rax
  406497:	call   406236 <init_ast_base_single@@Base>
  40649c:	mov    rax,QWORD PTR [rip+0xae55]        # 4112f8 <__bss_start@@Base+0xb68>
  4064a3:	inc    rax
  4064a6:	mov    QWORD PTR [rip+0xae4b],rax        # 4112f8 <__bss_start@@Base+0xb68>
  4064ad:	mov    rax,QWORD PTR [rbp-0x8]
  4064b1:	mov    DWORD PTR [rax],0x5
  4064b7:	mov    rax,QWORD PTR [rbp-0x8]
  4064bb:	mov    edx,DWORD PTR [rbp-0xc]
  4064be:	mov    DWORD PTR [rax+0x20],edx
  4064c1:	mov    rax,QWORD PTR [rbp-0x8]
  4064c5:	mov    rdx,QWORD PTR [rbp-0x18]
  4064c9:	mov    QWORD PTR [rax+0x10],rdx
  4064cd:	mov    rax,QWORD PTR [rbp-0x8]
  4064d1:	mov    rdx,QWORD PTR [rbp-0x20]
  4064d5:	mov    QWORD PTR [rax+0x18],rdx
  4064d9:	nop
  4064da:	leave  
  4064db:	ret    

00000000004064dc <free_node@@Base>:
  4064dc:	endbr64 
  4064e0:	push   rbp
  4064e1:	mov    rbp,rsp
  4064e4:	sub    rsp,0x10
  4064e8:	mov    QWORD PTR [rbp-0x8],rdi
  4064ec:	mov    rax,QWORD PTR [rip+0xad8d]        # 411280 <__bss_start@@Base+0xaf0>
  4064f3:	inc    rax
  4064f6:	mov    QWORD PTR [rip+0xad83],rax        # 411280 <__bss_start@@Base+0xaf0>
  4064fd:	mov    rax,QWORD PTR [rbp-0x8]
  406501:	mov    eax,DWORD PTR [rax]
  406503:	cmp    eax,0x5
  406506:	ja     406662 <free_node@@Base+0x186>
  40650c:	mov    eax,eax
  40650e:	lea    rdx,[rax*4+0x0]
  406516:	lea    rax,[rip+0x52e3]        # 40b800 <_IO_stdin_used@@Base+0x800>
  40651d:	mov    eax,DWORD PTR [rdx+rax*1]
  406520:	movsxd rdx,eax
  406523:	lea    rax,[rip+0x52d6]        # 40b800 <_IO_stdin_used@@Base+0x800>
  40652a:	add    rax,rdx
  40652d:	notrack jmp rax
  406530:	mov    rax,QWORD PTR [rip+0xad51]        # 411288 <__bss_start@@Base+0xaf8>
  406537:	inc    rax
  40653a:	mov    QWORD PTR [rip+0xad47],rax        # 411288 <__bss_start@@Base+0xaf8>
  406541:	mov    rax,QWORD PTR [rbp-0x8]
  406545:	mov    rdi,rax
  406548:	call   4066a3 <free_node_id@@Base>
  40654d:	nop
  40654e:	mov    rax,QWORD PTR [rip+0xad63]        # 4112b8 <__bss_start@@Base+0xb28>
  406555:	inc    rax
  406558:	mov    QWORD PTR [rip+0xad59],rax        # 4112b8 <__bss_start@@Base+0xb28>
  40655f:	jmp    4066a0 <free_node@@Base+0x1c4>
  406564:	mov    rax,QWORD PTR [rip+0xad25]        # 411290 <__bss_start@@Base+0xb00>
  40656b:	inc    rax
  40656e:	mov    QWORD PTR [rip+0xad1b],rax        # 411290 <__bss_start@@Base+0xb00>
  406575:	mov    rax,QWORD PTR [rbp-0x8]
  406579:	mov    rdi,rax
  40657c:	call   406712 <free_node_int@@Base>
  406581:	nop
  406582:	mov    rax,QWORD PTR [rip+0xad37]        # 4112c0 <__bss_start@@Base+0xb30>
  406589:	inc    rax
  40658c:	mov    QWORD PTR [rip+0xad2d],rax        # 4112c0 <__bss_start@@Base+0xb30>
  406593:	jmp    4066a0 <free_node@@Base+0x1c4>
  406598:	mov    rax,QWORD PTR [rip+0xacf9]        # 411298 <__bss_start@@Base+0xb08>
  40659f:	inc    rax
  4065a2:	mov    QWORD PTR [rip+0xacef],rax        # 411298 <__bss_start@@Base+0xb08>
  4065a9:	mov    rax,QWORD PTR [rbp-0x8]
  4065ad:	mov    rdi,rax
  4065b0:	call   406781 <free_node_function@@Base>
  4065b5:	nop
  4065b6:	mov    rax,QWORD PTR [rip+0xad0b]        # 4112c8 <__bss_start@@Base+0xb38>
  4065bd:	inc    rax
  4065c0:	mov    QWORD PTR [rip+0xad01],rax        # 4112c8 <__bss_start@@Base+0xb38>
  4065c7:	jmp    4066a0 <free_node@@Base+0x1c4>
  4065cc:	mov    rax,QWORD PTR [rip+0xaccd]        # 4112a0 <__bss_start@@Base+0xb10>
  4065d3:	inc    rax
  4065d6:	mov    QWORD PTR [rip+0xacc3],rax        # 4112a0 <__bss_start@@Base+0xb10>
  4065dd:	mov    rax,QWORD PTR [rbp-0x8]
  4065e1:	mov    rdi,rax
  4065e4:	call   406800 <free_node_return@@Base>
  4065e9:	nop
  4065ea:	mov    rax,QWORD PTR [rip+0xacdf]        # 4112d0 <__bss_start@@Base+0xb40>
  4065f1:	inc    rax
  4065f4:	mov    QWORD PTR [rip+0xacd5],rax        # 4112d0 <__bss_start@@Base+0xb40>
  4065fb:	jmp    4066a0 <free_node@@Base+0x1c4>
  406600:	mov    rax,QWORD PTR [rip+0xaca1]        # 4112a8 <__bss_start@@Base+0xb18>
  406607:	inc    rax
  40660a:	mov    QWORD PTR [rip+0xac97],rax        # 4112a8 <__bss_start@@Base+0xb18>
  406611:	mov    rax,QWORD PTR [rbp-0x8]
  406615:	mov    rdi,rax
  406618:	call   40686f <free_node_if@@Base>
  40661d:	nop
  40661e:	mov    rax,QWORD PTR [rip+0xacb3]        # 4112d8 <__bss_start@@Base+0xb48>
  406625:	inc    rax
  406628:	mov    QWORD PTR [rip+0xaca9],rax        # 4112d8 <__bss_start@@Base+0xb48>
  40662f:	jmp    4066a0 <free_node@@Base+0x1c4>
  406631:	mov    rax,QWORD PTR [rip+0xac78]        # 4112b0 <__bss_start@@Base+0xb20>
  406638:	inc    rax
  40663b:	mov    QWORD PTR [rip+0xac6e],rax        # 4112b0 <__bss_start@@Base+0xb20>
  406642:	mov    rax,QWORD PTR [rbp-0x8]
  406646:	mov    rdi,rax
  406649:	call   406941 <free_node_boolean_operator@@Base>
  40664e:	nop
  40664f:	mov    rax,QWORD PTR [rip+0xac8a]        # 4112e0 <__bss_start@@Base+0xb50>
  406656:	inc    rax
  406659:	mov    QWORD PTR [rip+0xac80],rax        # 4112e0 <__bss_start@@Base+0xb50>
  406660:	jmp    4066a0 <free_node@@Base+0x1c4>
  406662:	mov    rax,QWORD PTR [rip+0x898f]        # 40eff8 <stderr@GLIBC_2.2.5>
  406669:	mov    rax,QWORD PTR [rax]
  40666c:	mov    rcx,rax
  40666f:	mov    edx,0x1f
  406674:	mov    esi,0x1
  406679:	lea    rdi,[rip+0x5160]        # 40b7e0 <_IO_stdin_used@@Base+0x7e0>
  406680:	call   402470 <fwrite@plt>
  406685:	mov    rax,QWORD PTR [rip+0xac5c]        # 4112e8 <__bss_start@@Base+0xb58>
  40668c:	inc    rax
  40668f:	mov    QWORD PTR [rip+0xac52],rax        # 4112e8 <__bss_start@@Base+0xb58>
  406696:	mov    edi,0x1
  40669b:	call   402460 <exit@plt>
  4066a0:	nop
  4066a1:	leave  
  4066a2:	ret    

00000000004066a3 <free_node_id@@Base>:
  4066a3:	endbr64 
  4066a7:	push   rbp
  4066a8:	mov    rbp,rsp
  4066ab:	sub    rsp,0x10
  4066af:	mov    QWORD PTR [rbp-0x8],rdi
  4066b3:	mov    rax,QWORD PTR [rip+0xab96]        # 411250 <__bss_start@@Base+0xac0>
  4066ba:	inc    rax
  4066bd:	mov    QWORD PTR [rip+0xab8c],rax        # 411250 <__bss_start@@Base+0xac0>
  4066c4:	mov    rax,QWORD PTR [rbp-0x8]
  4066c8:	mov    rax,QWORD PTR [rax+0x8]
  4066cc:	test   rax,rax
  4066cf:	je     406703 <free_node_id@@Base+0x60>
  4066d1:	mov    rax,QWORD PTR [rip+0xab80]        # 411258 <__bss_start@@Base+0xac8>
  4066d8:	inc    rax
  4066db:	mov    QWORD PTR [rip+0xab76],rax        # 411258 <__bss_start@@Base+0xac8>
  4066e2:	mov    rax,QWORD PTR [rbp-0x8]
  4066e6:	mov    rax,QWORD PTR [rax+0x8]
  4066ea:	mov    rdi,rax
  4066ed:	call   4064dc <free_node@@Base>
  4066f2:	mov    rax,QWORD PTR [rip+0xab67]        # 411260 <__bss_start@@Base+0xad0>
  4066f9:	inc    rax
  4066fc:	mov    QWORD PTR [rip+0xab5d],rax        # 411260 <__bss_start@@Base+0xad0>
  406703:	mov    rax,QWORD PTR [rbp-0x8]
  406707:	mov    rdi,rax
  40670a:	call   402270 <free@plt>
  40670f:	nop
  406710:	leave  
  406711:	ret    

0000000000406712 <free_node_int@@Base>:
  406712:	endbr64 
  406716:	push   rbp
  406717:	mov    rbp,rsp
  40671a:	sub    rsp,0x10
  40671e:	mov    QWORD PTR [rbp-0x8],rdi
  406722:	mov    rax,QWORD PTR [rip+0xab07]        # 411230 <__bss_start@@Base+0xaa0>
  406729:	inc    rax
  40672c:	mov    QWORD PTR [rip+0xaafd],rax        # 411230 <__bss_start@@Base+0xaa0>
  406733:	mov    rax,QWORD PTR [rbp-0x8]
  406737:	mov    rax,QWORD PTR [rax+0x8]
  40673b:	test   rax,rax
  40673e:	je     406772 <free_node_int@@Base+0x60>
  406740:	mov    rax,QWORD PTR [rip+0xaaf1]        # 411238 <__bss_start@@Base+0xaa8>
  406747:	inc    rax
  40674a:	mov    QWORD PTR [rip+0xaae7],rax        # 411238 <__bss_start@@Base+0xaa8>
  406751:	mov    rax,QWORD PTR [rbp-0x8]
  406755:	mov    rax,QWORD PTR [rax+0x8]
  406759:	mov    rdi,rax
  40675c:	call   4064dc <free_node@@Base>
  406761:	mov    rax,QWORD PTR [rip+0xaad8]        # 411240 <__bss_start@@Base+0xab0>
  406768:	inc    rax
  40676b:	mov    QWORD PTR [rip+0xaace],rax        # 411240 <__bss_start@@Base+0xab0>
  406772:	mov    rax,QWORD PTR [rbp-0x8]
  406776:	mov    rdi,rax
  406779:	call   402270 <free@plt>
  40677e:	nop
  40677f:	leave  
  406780:	ret    

0000000000406781 <free_node_function@@Base>:
  406781:	endbr64 
  406785:	push   rbp
  406786:	mov    rbp,rsp
  406789:	sub    rsp,0x10
  40678d:	mov    QWORD PTR [rbp-0x8],rdi
  406791:	mov    rax,QWORD PTR [rip+0xaa78]        # 411210 <__bss_start@@Base+0xa80>
  406798:	inc    rax
  40679b:	mov    QWORD PTR [rip+0xaa6e],rax        # 411210 <__bss_start@@Base+0xa80>
  4067a2:	mov    rax,QWORD PTR [rbp-0x8]
  4067a6:	mov    rax,QWORD PTR [rax+0x8]
  4067aa:	test   rax,rax
  4067ad:	je     4067e1 <free_node_function@@Base+0x60>
  4067af:	mov    rax,QWORD PTR [rip+0xaa62]        # 411218 <__bss_start@@Base+0xa88>
  4067b6:	inc    rax
  4067b9:	mov    QWORD PTR [rip+0xaa58],rax        # 411218 <__bss_start@@Base+0xa88>
  4067c0:	mov    rax,QWORD PTR [rbp-0x8]
  4067c4:	mov    rax,QWORD PTR [rax+0x8]
  4067c8:	mov    rdi,rax
  4067cb:	call   4064dc <free_node@@Base>
  4067d0:	mov    rax,QWORD PTR [rip+0xaa49]        # 411220 <__bss_start@@Base+0xa90>
  4067d7:	inc    rax
  4067da:	mov    QWORD PTR [rip+0xaa3f],rax        # 411220 <__bss_start@@Base+0xa90>
  4067e1:	mov    rax,QWORD PTR [rbp-0x8]
  4067e5:	mov    rax,QWORD PTR [rax+0x10]
  4067e9:	mov    rdi,rax
  4067ec:	call   402270 <free@plt>
  4067f1:	mov    rax,QWORD PTR [rbp-0x8]
  4067f5:	mov    rdi,rax
  4067f8:	call   402270 <free@plt>
  4067fd:	nop
  4067fe:	leave  
  4067ff:	ret    

0000000000406800 <free_node_return@@Base>:
  406800:	endbr64 
  406804:	push   rbp
  406805:	mov    rbp,rsp
  406808:	sub    rsp,0x10
  40680c:	mov    QWORD PTR [rbp-0x8],rdi
  406810:	mov    rax,QWORD PTR [rip+0xa9d9]        # 4111f0 <__bss_start@@Base+0xa60>
  406817:	inc    rax
  40681a:	mov    QWORD PTR [rip+0xa9cf],rax        # 4111f0 <__bss_start@@Base+0xa60>
  406821:	mov    rax,QWORD PTR [rbp-0x8]
  406825:	mov    rax,QWORD PTR [rax+0x8]
  406829:	test   rax,rax
  40682c:	je     406860 <free_node_return@@Base+0x60>
  40682e:	mov    rax,QWORD PTR [rip+0xa9c3]        # 4111f8 <__bss_start@@Base+0xa68>
  406835:	inc    rax
  406838:	mov    QWORD PTR [rip+0xa9b9],rax        # 4111f8 <__bss_start@@Base+0xa68>
  40683f:	mov    rax,QWORD PTR [rbp-0x8]
  406843:	mov    rax,QWORD PTR [rax+0x8]
  406847:	mov    rdi,rax
  40684a:	call   4064dc <free_node@@Base>
  40684f:	mov    rax,QWORD PTR [rip+0xa9aa]        # 411200 <__bss_start@@Base+0xa70>
  406856:	inc    rax
  406859:	mov    QWORD PTR [rip+0xa9a0],rax        # 411200 <__bss_start@@Base+0xa70>
  406860:	mov    rax,QWORD PTR [rbp-0x8]
  406864:	mov    rdi,rax
  406867:	call   402270 <free@plt>
  40686c:	nop
  40686d:	leave  
  40686e:	ret    

000000000040686f <free_node_if@@Base>:
  40686f:	endbr64 
  406873:	push   rbp
  406874:	mov    rbp,rsp
  406877:	sub    rsp,0x10
  40687b:	mov    QWORD PTR [rbp-0x8],rdi
  40687f:	mov    rax,QWORD PTR [rip+0xa93a]        # 4111c0 <__bss_start@@Base+0xa30>
  406886:	inc    rax
  406889:	mov    QWORD PTR [rip+0xa930],rax        # 4111c0 <__bss_start@@Base+0xa30>
  406890:	mov    rax,QWORD PTR [rbp-0x8]
  406894:	mov    rax,QWORD PTR [rax+0x8]
  406898:	test   rax,rax
  40689b:	je     4068cf <free_node_if@@Base+0x60>
  40689d:	mov    rax,QWORD PTR [rip+0xa924]        # 4111c8 <__bss_start@@Base+0xa38>
  4068a4:	inc    rax
  4068a7:	mov    QWORD PTR [rip+0xa91a],rax        # 4111c8 <__bss_start@@Base+0xa38>
  4068ae:	mov    rax,QWORD PTR [rbp-0x8]
  4068b2:	mov    rax,QWORD PTR [rax+0x8]
  4068b6:	mov    rdi,rax
  4068b9:	call   4064dc <free_node@@Base>
  4068be:	mov    rax,QWORD PTR [rip+0xa90b]        # 4111d0 <__bss_start@@Base+0xa40>
  4068c5:	inc    rax
  4068c8:	mov    QWORD PTR [rip+0xa901],rax        # 4111d0 <__bss_start@@Base+0xa40>
  4068cf:	mov    rax,QWORD PTR [rbp-0x8]
  4068d3:	mov    rax,QWORD PTR [rax+0x10]
  4068d7:	mov    rdi,rax
  4068da:	call   4064dc <free_node@@Base>
  4068df:	mov    rax,QWORD PTR [rip+0xa8f2]        # 4111d8 <__bss_start@@Base+0xa48>
  4068e6:	inc    rax
  4068e9:	mov    QWORD PTR [rip+0xa8e8],rax        # 4111d8 <__bss_start@@Base+0xa48>
  4068f0:	mov    rax,QWORD PTR [rbp-0x8]
  4068f4:	mov    rax,QWORD PTR [rax+0x18]
  4068f8:	mov    rdi,rax
  4068fb:	call   4064dc <free_node@@Base>
  406900:	mov    rax,QWORD PTR [rip+0xa8d9]        # 4111e0 <__bss_start@@Base+0xa50>
  406907:	inc    rax
  40690a:	mov    QWORD PTR [rip+0xa8cf],rax        # 4111e0 <__bss_start@@Base+0xa50>
  406911:	mov    rax,QWORD PTR [rbp-0x8]
  406915:	mov    rax,QWORD PTR [rax+0x20]
  406919:	mov    rdi,rax
  40691c:	call   4064dc <free_node@@Base>
  406921:	mov    rax,QWORD PTR [rip+0xa8c0]        # 4111e8 <__bss_start@@Base+0xa58>
  406928:	inc    rax
  40692b:	mov    QWORD PTR [rip+0xa8b6],rax        # 4111e8 <__bss_start@@Base+0xa58>
  406932:	mov    rax,QWORD PTR [rbp-0x8]
  406936:	mov    rdi,rax
  406939:	call   402270 <free@plt>
  40693e:	nop
  40693f:	leave  
  406940:	ret    

0000000000406941 <free_node_boolean_operator@@Base>:
  406941:	endbr64 
  406945:	push   rbp
  406946:	mov    rbp,rsp
  406949:	sub    rsp,0x10
  40694d:	mov    QWORD PTR [rbp-0x8],rdi
  406951:	mov    rax,QWORD PTR [rip+0xa828]        # 411180 <__bss_start@@Base+0x9f0>
  406958:	inc    rax
  40695b:	mov    QWORD PTR [rip+0xa81e],rax        # 411180 <__bss_start@@Base+0x9f0>
  406962:	mov    rax,QWORD PTR [rbp-0x8]
  406966:	mov    rax,QWORD PTR [rax+0x8]
  40696a:	test   rax,rax
  40696d:	je     4069a1 <free_node_boolean_operator@@Base+0x60>
  40696f:	mov    rax,QWORD PTR [rip+0xa812]        # 411188 <__bss_start@@Base+0x9f8>
  406976:	inc    rax
  406979:	mov    QWORD PTR [rip+0xa808],rax        # 411188 <__bss_start@@Base+0x9f8>
  406980:	mov    rax,QWORD PTR [rbp-0x8]
  406984:	mov    rax,QWORD PTR [rax+0x8]
  406988:	mov    rdi,rax
  40698b:	call   4064dc <free_node@@Base>
  406990:	mov    rax,QWORD PTR [rip+0xa7f9]        # 411190 <__bss_start@@Base+0xa00>
  406997:	inc    rax
  40699a:	mov    QWORD PTR [rip+0xa7ef],rax        # 411190 <__bss_start@@Base+0xa00>
  4069a1:	mov    rax,QWORD PTR [rbp-0x8]
  4069a5:	mov    rax,QWORD PTR [rax+0x10]
  4069a9:	mov    rdi,rax
  4069ac:	call   4064dc <free_node@@Base>
  4069b1:	mov    rax,QWORD PTR [rip+0xa7e0]        # 411198 <__bss_start@@Base+0xa08>
  4069b8:	inc    rax
  4069bb:	mov    QWORD PTR [rip+0xa7d6],rax        # 411198 <__bss_start@@Base+0xa08>
  4069c2:	mov    rax,QWORD PTR [rbp-0x8]
  4069c6:	mov    rax,QWORD PTR [rax+0x18]
  4069ca:	mov    rdi,rax
  4069cd:	call   4064dc <free_node@@Base>
  4069d2:	mov    rax,QWORD PTR [rip+0xa7c7]        # 4111a0 <__bss_start@@Base+0xa10>
  4069d9:	inc    rax
  4069dc:	mov    QWORD PTR [rip+0xa7bd],rax        # 4111a0 <__bss_start@@Base+0xa10>
  4069e3:	mov    rax,QWORD PTR [rbp-0x8]
  4069e7:	mov    rdi,rax
  4069ea:	call   402270 <free@plt>
  4069ef:	nop
  4069f0:	leave  
  4069f1:	ret    

00000000004069f2 <get_boolean_op_value@@Base>:
  4069f2:	endbr64 
  4069f6:	push   rbp
  4069f7:	mov    rbp,rsp
  4069fa:	sub    rsp,0x20
  4069fe:	mov    QWORD PTR [rbp-0x18],rdi
  406a02:	mov    rax,QWORD PTR [rip+0xa6f7]        # 411100 <__bss_start@@Base+0x970>
  406a09:	inc    rax
  406a0c:	mov    QWORD PTR [rip+0xa6ed],rax        # 411100 <__bss_start@@Base+0x970>
  406a13:	mov    rax,QWORD PTR [rbp-0x18]
  406a17:	mov    rax,QWORD PTR [rax+0x8]
  406a1b:	mov    esi,0x2
  406a20:	mov    rdi,rax
  406a23:	call   402390 <strnlen@plt>
  406a28:	mov    QWORD PTR [rbp-0x8],rax
  406a2c:	cmp    QWORD PTR [rbp-0x8],0x2
  406a31:	jne    406beb <get_boolean_op_value@@Base+0x1f9>
  406a37:	mov    rax,QWORD PTR [rip+0xa6ca]        # 411108 <__bss_start@@Base+0x978>
  406a3e:	inc    rax
  406a41:	mov    QWORD PTR [rip+0xa6c0],rax        # 411108 <__bss_start@@Base+0x978>
  406a48:	mov    rax,QWORD PTR [rbp-0x18]
  406a4c:	mov    rax,QWORD PTR [rax+0x8]
  406a50:	mov    edx,0x2
  406a55:	lea    rsi,[rip+0x4dbc]        # 40b818 <_IO_stdin_used@@Base+0x818>
  406a5c:	mov    rdi,rax
  406a5f:	call   4022b0 <strncmp@plt>
  406a64:	test   eax,eax
  406a66:	jne    406a83 <get_boolean_op_value@@Base+0x91>
  406a68:	mov    rax,QWORD PTR [rip+0xa6a1]        # 411110 <__bss_start@@Base+0x980>
  406a6f:	inc    rax
  406a72:	mov    QWORD PTR [rip+0xa697],rax        # 411110 <__bss_start@@Base+0x980>
  406a79:	mov    eax,0x0
  406a7e:	jmp    406c91 <get_boolean_op_value@@Base+0x29f>
  406a83:	mov    rax,QWORD PTR [rbp-0x18]
  406a87:	mov    rax,QWORD PTR [rax+0x8]
  406a8b:	mov    edx,0x2
  406a90:	lea    rsi,[rip+0x4d84]        # 40b81b <_IO_stdin_used@@Base+0x81b>
  406a97:	mov    rdi,rax
  406a9a:	call   4022b0 <strncmp@plt>
  406a9f:	test   eax,eax
  406aa1:	jne    406abe <get_boolean_op_value@@Base+0xcc>
  406aa3:	mov    rax,QWORD PTR [rip+0xa66e]        # 411118 <__bss_start@@Base+0x988>
  406aaa:	inc    rax
  406aad:	mov    QWORD PTR [rip+0xa664],rax        # 411118 <__bss_start@@Base+0x988>
  406ab4:	mov    eax,0x1
  406ab9:	jmp    406c91 <get_boolean_op_value@@Base+0x29f>
  406abe:	mov    rax,QWORD PTR [rbp-0x18]
  406ac2:	mov    rax,QWORD PTR [rax+0x8]
  406ac6:	mov    edx,0x2
  406acb:	lea    rsi,[rip+0x4d4c]        # 40b81e <_IO_stdin_used@@Base+0x81e>
  406ad2:	mov    rdi,rax
  406ad5:	call   4022b0 <strncmp@plt>
  406ada:	test   eax,eax
  406adc:	jne    406af9 <get_boolean_op_value@@Base+0x107>
  406ade:	mov    rax,QWORD PTR [rip+0xa63b]        # 411120 <__bss_start@@Base+0x990>
  406ae5:	inc    rax
  406ae8:	mov    QWORD PTR [rip+0xa631],rax        # 411120 <__bss_start@@Base+0x990>
  406aef:	mov    eax,0x2
  406af4:	jmp    406c91 <get_boolean_op_value@@Base+0x29f>
  406af9:	mov    rax,QWORD PTR [rbp-0x18]
  406afd:	mov    rax,QWORD PTR [rax+0x8]
  406b01:	mov    edx,0x2
  406b06:	lea    rsi,[rip+0x4d14]        # 40b821 <_IO_stdin_used@@Base+0x821>
  406b0d:	mov    rdi,rax
  406b10:	call   4022b0 <strncmp@plt>
  406b15:	test   eax,eax
  406b17:	jne    406b34 <get_boolean_op_value@@Base+0x142>
  406b19:	mov    rax,QWORD PTR [rip+0xa608]        # 411128 <__bss_start@@Base+0x998>
  406b20:	inc    rax
  406b23:	mov    QWORD PTR [rip+0xa5fe],rax        # 411128 <__bss_start@@Base+0x998>
  406b2a:	mov    eax,0x3
  406b2f:	jmp    406c91 <get_boolean_op_value@@Base+0x29f>
  406b34:	mov    rax,QWORD PTR [rbp-0x18]
  406b38:	mov    rax,QWORD PTR [rax+0x8]
  406b3c:	mov    edx,0x2
  406b41:	lea    rsi,[rip+0x4cdc]        # 40b824 <_IO_stdin_used@@Base+0x824>
  406b48:	mov    rdi,rax
  406b4b:	call   4022b0 <strncmp@plt>
  406b50:	test   eax,eax
  406b52:	jne    406b6f <get_boolean_op_value@@Base+0x17d>
  406b54:	mov    rax,QWORD PTR [rip+0xa5d5]        # 411130 <__bss_start@@Base+0x9a0>
  406b5b:	inc    rax
  406b5e:	mov    QWORD PTR [rip+0xa5cb],rax        # 411130 <__bss_start@@Base+0x9a0>
  406b65:	mov    eax,0x4
  406b6a:	jmp    406c91 <get_boolean_op_value@@Base+0x29f>
  406b6f:	mov    rax,QWORD PTR [rbp-0x18]
  406b73:	mov    rax,QWORD PTR [rax+0x8]
  406b77:	mov    edx,0x2
  406b7c:	lea    rsi,[rip+0x4ca4]        # 40b827 <_IO_stdin_used@@Base+0x827>
  406b83:	mov    rdi,rax
  406b86:	call   4022b0 <strncmp@plt>
  406b8b:	test   eax,eax
  406b8d:	jne    406baa <get_boolean_op_value@@Base+0x1b8>
  406b8f:	mov    rax,QWORD PTR [rip+0xa5a2]        # 411138 <__bss_start@@Base+0x9a8>
  406b96:	inc    rax
  406b99:	mov    QWORD PTR [rip+0xa598],rax        # 411138 <__bss_start@@Base+0x9a8>
  406ba0:	mov    eax,0x5
  406ba5:	jmp    406c91 <get_boolean_op_value@@Base+0x29f>
  406baa:	mov    rax,QWORD PTR [rbp-0x18]
  406bae:	mov    rdx,QWORD PTR [rax+0x8]
  406bb2:	mov    rax,QWORD PTR [rip+0x843f]        # 40eff8 <stderr@GLIBC_2.2.5>
  406bb9:	mov    rax,QWORD PTR [rax]
  406bbc:	lea    rsi,[rip+0x4c6d]        # 40b830 <_IO_stdin_used@@Base+0x830>
  406bc3:	mov    rdi,rax
  406bc6:	mov    eax,0x0
  406bcb:	call   4023b0 <fprintf@plt>
  406bd0:	mov    rax,QWORD PTR [rip+0xa569]        # 411140 <__bss_start@@Base+0x9b0>
  406bd7:	inc    rax
  406bda:	mov    QWORD PTR [rip+0xa55f],rax        # 411140 <__bss_start@@Base+0x9b0>
  406be1:	mov    edi,0x1
  406be6:	call   402460 <exit@plt>
  406beb:	mov    rax,QWORD PTR [rbp-0x18]
  406bef:	mov    rax,QWORD PTR [rax+0x8]
  406bf3:	movzx  eax,BYTE PTR [rax]
  406bf6:	movsx  eax,al
  406bf9:	cmp    eax,0x3c
  406bfc:	je     406c20 <get_boolean_op_value@@Base+0x22e>
  406bfe:	cmp    eax,0x3e
  406c01:	je     406c38 <get_boolean_op_value@@Base+0x246>
  406c03:	cmp    eax,0x21
  406c06:	jne    406c50 <get_boolean_op_value@@Base+0x25e>
  406c08:	mov    rax,QWORD PTR [rip+0xa539]        # 411148 <__bss_start@@Base+0x9b8>
  406c0f:	inc    rax
  406c12:	mov    QWORD PTR [rip+0xa52f],rax        # 411148 <__bss_start@@Base+0x9b8>
  406c19:	mov    eax,0x8
  406c1e:	jmp    406c91 <get_boolean_op_value@@Base+0x29f>
  406c20:	mov    rax,QWORD PTR [rip+0xa529]        # 411150 <__bss_start@@Base+0x9c0>
  406c27:	inc    rax
  406c2a:	mov    QWORD PTR [rip+0xa51f],rax        # 411150 <__bss_start@@Base+0x9c0>
  406c31:	mov    eax,0x6
  406c36:	jmp    406c91 <get_boolean_op_value@@Base+0x29f>
  406c38:	mov    rax,QWORD PTR [rip+0xa519]        # 411158 <__bss_start@@Base+0x9c8>
  406c3f:	inc    rax
  406c42:	mov    QWORD PTR [rip+0xa50f],rax        # 411158 <__bss_start@@Base+0x9c8>
  406c49:	mov    eax,0x7
  406c4e:	jmp    406c91 <get_boolean_op_value@@Base+0x29f>
  406c50:	mov    rax,QWORD PTR [rbp-0x18]
  406c54:	mov    rdx,QWORD PTR [rax+0x8]
  406c58:	mov    rax,QWORD PTR [rip+0x8399]        # 40eff8 <stderr@GLIBC_2.2.5>
  406c5f:	mov    rax,QWORD PTR [rax]
  406c62:	lea    rsi,[rip+0x4bc7]        # 40b830 <_IO_stdin_used@@Base+0x830>
  406c69:	mov    rdi,rax
  406c6c:	mov    eax,0x0
  406c71:	call   4023b0 <fprintf@plt>
  406c76:	mov    rax,QWORD PTR [rip+0xa4e3]        # 411160 <__bss_start@@Base+0x9d0>
  406c7d:	inc    rax
  406c80:	mov    QWORD PTR [rip+0xa4d9],rax        # 411160 <__bss_start@@Base+0x9d0>
  406c87:	mov    edi,0x1
  406c8c:	call   402460 <exit@plt>
  406c91:	leave  
  406c92:	ret    
  406c93:	endbr64 
  406c97:	push   rbp
  406c98:	mov    rbp,rsp
  406c9b:	lea    rdi,[rip+0x96be]        # 410360 <__data_start@@Base+0x1220>
  406ca2:	call   409f30 <__gcov_sort_n_vals@@Base+0x1700>
  406ca7:	pop    rbp
  406ca8:	ret    
  406ca9:	endbr64 
  406cad:	push   rbp
  406cae:	mov    rbp,rsp
  406cb1:	call   409ea0 <__gcov_sort_n_vals@@Base+0x1670>
  406cb6:	pop    rbp
  406cb7:	ret    

0000000000406cb8 <init_grammar@@Base>:
  406cb8:	endbr64 
  406cbc:	push   rbp
  406cbd:	mov    rbp,rsp
  406cc0:	mov    QWORD PTR [rbp-0x8],rdi
  406cc4:	mov    QWORD PTR [rbp-0x10],rsi
  406cc8:	mov    rax,QWORD PTR [rip+0xaa49]        # 411718 <__bss_start@@Base+0xf88>
  406ccf:	inc    rax
  406cd2:	mov    QWORD PTR [rip+0xaa3f],rax        # 411718 <__bss_start@@Base+0xf88>
  406cd9:	mov    rax,QWORD PTR [rbp-0x8]
  406cdd:	mov    rdx,QWORD PTR [rbp-0x10]
  406ce1:	mov    QWORD PTR [rax],rdx
  406ce4:	nop
  406ce5:	pop    rbp
  406ce6:	ret    

0000000000406ce7 <destroy_grammar@@Base>:
  406ce7:	endbr64 
  406ceb:	push   rbp
  406cec:	mov    rbp,rsp
  406cef:	mov    QWORD PTR [rbp-0x8],rdi
  406cf3:	mov    rax,QWORD PTR [rip+0xaa16]        # 411710 <__bss_start@@Base+0xf80>
  406cfa:	inc    rax
  406cfd:	mov    QWORD PTR [rip+0xaa0c],rax        # 411710 <__bss_start@@Base+0xf80>
  406d04:	nop
  406d05:	pop    rbp
  406d06:	ret    

0000000000406d07 <build_ast@@Base>:
  406d07:	endbr64 
  406d0b:	push   rbp
  406d0c:	mov    rbp,rsp
  406d0f:	sub    rsp,0x10
  406d13:	mov    QWORD PTR [rbp-0x8],rdi
  406d17:	mov    rax,QWORD PTR [rip+0xa9e2]        # 411700 <__bss_start@@Base+0xf70>
  406d1e:	inc    rax
  406d21:	mov    QWORD PTR [rip+0xa9d8],rax        # 411700 <__bss_start@@Base+0xf70>
  406d28:	mov    rax,QWORD PTR [rbp-0x8]
  406d2c:	mov    rdi,rax
  406d2f:	call   406d4d <read_function_ast_node@@Base>
  406d34:	mov    rdx,rax
  406d37:	mov    rax,QWORD PTR [rip+0xa9ca]        # 411708 <__bss_start@@Base+0xf78>
  406d3e:	inc    rax
  406d41:	mov    QWORD PTR [rip+0xa9c0],rax        # 411708 <__bss_start@@Base+0xf78>
  406d48:	mov    rax,rdx
  406d4b:	leave  
  406d4c:	ret    

0000000000406d4d <read_function_ast_node@@Base>:
  406d4d:	endbr64 
  406d51:	push   rbp
  406d52:	mov    rbp,rsp
  406d55:	sub    rsp,0x30
  406d59:	mov    QWORD PTR [rbp-0x28],rdi
  406d5d:	mov    rax,QWORD PTR [rip+0xa91c]        # 411680 <__bss_start@@Base+0xef0>
  406d64:	inc    rax
  406d67:	mov    QWORD PTR [rip+0xa912],rax        # 411680 <__bss_start@@Base+0xef0>
  406d6e:	mov    QWORD PTR [rbp-0x20],0x0
  406d76:	mov    QWORD PTR [rbp-0x18],0x0
  406d7e:	mov    QWORD PTR [rbp-0x10],0x0
  406d86:	mov    QWORD PTR [rbp-0x8],0x0
  406d8e:	mov    rax,QWORD PTR [rbp-0x28]
  406d92:	mov    rax,QWORD PTR [rax]
  406d95:	mov    rdi,rax
  406d98:	call   402586 <next@@Base>
  406d9d:	mov    QWORD PTR [rbp-0x10],rax
  406da1:	mov    rax,QWORD PTR [rip+0xa8e0]        # 411688 <__bss_start@@Base+0xef8>
  406da8:	inc    rax
  406dab:	mov    QWORD PTR [rip+0xa8d6],rax        # 411688 <__bss_start@@Base+0xef8>
  406db2:	mov    rax,QWORD PTR [rbp-0x10]
  406db6:	mov    eax,DWORD PTR [rax]
  406db8:	test   eax,eax
  406dba:	je     406dd7 <read_function_ast_node@@Base+0x8a>
  406dbc:	mov    eax,0x0
  406dc1:	mov    rdx,QWORD PTR [rip+0xa8c8]        # 411690 <__bss_start@@Base+0xf00>
  406dc8:	inc    rdx
  406dcb:	mov    QWORD PTR [rip+0xa8be],rdx        # 411690 <__bss_start@@Base+0xf00>
  406dd2:	jmp    406f90 <read_function_ast_node@@Base+0x243>
  406dd7:	mov    rax,QWORD PTR [rbp-0x10]
  406ddb:	mov    rdi,rax
  406dde:	call   405f37 <free_token_int_type@@Base>
  406de3:	mov    rax,QWORD PTR [rip+0xa8ae]        # 411698 <__bss_start@@Base+0xf08>
  406dea:	inc    rax
  406ded:	mov    QWORD PTR [rip+0xa8a4],rax        # 411698 <__bss_start@@Base+0xf08>
  406df4:	mov    rax,QWORD PTR [rbp-0x28]
  406df8:	mov    rax,QWORD PTR [rax]
  406dfb:	mov    rdi,rax
  406dfe:	call   402586 <next@@Base>
  406e03:	mov    QWORD PTR [rbp-0x10],rax
  406e07:	mov    rax,QWORD PTR [rbp-0x10]
  406e0b:	mov    eax,DWORD PTR [rax]
  406e0d:	cmp    eax,0x2
  406e10:	je     406e2d <read_function_ast_node@@Base+0xe0>
  406e12:	mov    eax,0x0
  406e17:	mov    rdx,QWORD PTR [rip+0xa88a]        # 4116a8 <__bss_start@@Base+0xf18>
  406e1e:	inc    rdx
  406e21:	mov    QWORD PTR [rip+0xa880],rdx        # 4116a8 <__bss_start@@Base+0xf18>
  406e28:	jmp    406f90 <read_function_ast_node@@Base+0x243>
  406e2d:	mov    rax,QWORD PTR [rip+0xa86c]        # 4116a0 <__bss_start@@Base+0xf10>
  406e34:	inc    rax
  406e37:	mov    QWORD PTR [rip+0xa862],rax        # 4116a0 <__bss_start@@Base+0xf10>
  406e3e:	mov    rax,QWORD PTR [rbp-0x10]
  406e42:	mov    QWORD PTR [rbp-0x8],rax
  406e46:	mov    rax,QWORD PTR [rbp-0x28]
  406e4a:	mov    rax,QWORD PTR [rax]
  406e4d:	mov    rdi,rax
  406e50:	call   402586 <next@@Base>
  406e55:	mov    QWORD PTR [rbp-0x10],rax
  406e59:	mov    rax,QWORD PTR [rip+0xa850]        # 4116b0 <__bss_start@@Base+0xf20>
  406e60:	inc    rax
  406e63:	mov    QWORD PTR [rip+0xa846],rax        # 4116b0 <__bss_start@@Base+0xf20>
  406e6a:	mov    rax,QWORD PTR [rbp-0x10]
  406e6e:	mov    eax,DWORD PTR [rax]
  406e70:	cmp    eax,0x3
  406e73:	je     406e90 <read_function_ast_node@@Base+0x143>
  406e75:	mov    eax,0x0
  406e7a:	mov    rdx,QWORD PTR [rip+0xa837]        # 4116b8 <__bss_start@@Base+0xf28>
  406e81:	inc    rdx
  406e84:	mov    QWORD PTR [rip+0xa82d],rdx        # 4116b8 <__bss_start@@Base+0xf28>
  406e8b:	jmp    406f90 <read_function_ast_node@@Base+0x243>
  406e90:	mov    rax,QWORD PTR [rbp-0x10]
  406e94:	mov    rdi,rax
  406e97:	call   405fc7 <free_token_opar@@Base>
  406e9c:	mov    rax,QWORD PTR [rip+0xa81d]        # 4116c0 <__bss_start@@Base+0xf30>
  406ea3:	inc    rax
  406ea6:	mov    QWORD PTR [rip+0xa813],rax        # 4116c0 <__bss_start@@Base+0xf30>
  406ead:	mov    rax,QWORD PTR [rbp-0x28]
  406eb1:	mov    rax,QWORD PTR [rax]
  406eb4:	mov    rdi,rax
  406eb7:	call   402586 <next@@Base>
  406ebc:	mov    QWORD PTR [rbp-0x10],rax
  406ec0:	mov    rax,QWORD PTR [rbp-0x10]
  406ec4:	mov    eax,DWORD PTR [rax]
  406ec6:	cmp    eax,0x4
  406ec9:	je     406ee6 <read_function_ast_node@@Base+0x199>
  406ecb:	mov    eax,0x0
  406ed0:	mov    rdx,QWORD PTR [rip+0xa7f9]        # 4116d0 <__bss_start@@Base+0xf40>
  406ed7:	inc    rdx
  406eda:	mov    QWORD PTR [rip+0xa7ef],rdx        # 4116d0 <__bss_start@@Base+0xf40>
  406ee1:	jmp    406f90 <read_function_ast_node@@Base+0x243>
  406ee6:	mov    rax,QWORD PTR [rip+0xa7db]        # 4116c8 <__bss_start@@Base+0xf38>
  406eed:	inc    rax
  406ef0:	mov    QWORD PTR [rip+0xa7d1],rax        # 4116c8 <__bss_start@@Base+0xf38>
  406ef7:	mov    rax,QWORD PTR [rbp-0x10]
  406efb:	mov    rdi,rax
  406efe:	call   405ff7 <free_token_cpar@@Base>
  406f03:	mov    rax,QWORD PTR [rip+0xa7ce]        # 4116d8 <__bss_start@@Base+0xf48>
  406f0a:	inc    rax
  406f0d:	mov    QWORD PTR [rip+0xa7c4],rax        # 4116d8 <__bss_start@@Base+0xf48>
  406f14:	mov    rax,QWORD PTR [rbp-0x28]
  406f18:	mov    rdi,rax
  406f1b:	call   406f92 <read_body@@Base>
  406f20:	mov    QWORD PTR [rbp-0x18],rax
  406f24:	mov    rax,QWORD PTR [rip+0xa7b5]        # 4116e0 <__bss_start@@Base+0xf50>
  406f2b:	inc    rax
  406f2e:	mov    QWORD PTR [rip+0xa7ab],rax        # 4116e0 <__bss_start@@Base+0xf50>
  406f35:	mov    edi,0x20
  406f3a:	call   4023f0 <malloc@plt>
  406f3f:	mov    QWORD PTR [rbp-0x20],rax
  406f43:	mov    rax,QWORD PTR [rbp-0x8]
  406f47:	mov    rcx,QWORD PTR [rax+0x8]
  406f4b:	mov    rdx,QWORD PTR [rbp-0x18]
  406f4f:	mov    rax,QWORD PTR [rbp-0x20]
  406f53:	mov    rsi,rcx
  406f56:	mov    rdi,rax
  406f59:	call   40632d <init_node_function@@Base>
  406f5e:	mov    rax,QWORD PTR [rip+0xa783]        # 4116e8 <__bss_start@@Base+0xf58>
  406f65:	inc    rax
  406f68:	mov    QWORD PTR [rip+0xa779],rax        # 4116e8 <__bss_start@@Base+0xf58>
  406f6f:	mov    rax,QWORD PTR [rbp-0x8]
  406f73:	mov    rdi,rax
  406f76:	call   405f97 <free_token_function@@Base>
  406f7b:	mov    rax,QWORD PTR [rbp-0x20]
  406f7f:	mov    rdx,QWORD PTR [rip+0xa76a]        # 4116f0 <__bss_start@@Base+0xf60>
  406f86:	inc    rdx
  406f89:	mov    QWORD PTR [rip+0xa760],rdx        # 4116f0 <__bss_start@@Base+0xf60>
  406f90:	leave  
  406f91:	ret    

0000000000406f92 <read_body@@Base>:
  406f92:	endbr64 
  406f96:	push   rbp
  406f97:	mov    rbp,rsp
  406f9a:	sub    rsp,0x30
  406f9e:	mov    QWORD PTR [rbp-0x28],rdi
  406fa2:	mov    rax,QWORD PTR [rip+0xa657]        # 411600 <__bss_start@@Base+0xe70>
  406fa9:	inc    rax
  406fac:	mov    QWORD PTR [rip+0xa64d],rax        # 411600 <__bss_start@@Base+0xe70>
  406fb3:	mov    QWORD PTR [rbp-0x20],0x0
  406fbb:	mov    QWORD PTR [rbp-0x18],0x0
  406fc3:	mov    QWORD PTR [rbp-0x10],0x0
  406fcb:	mov    QWORD PTR [rbp-0x8],0x0
  406fd3:	mov    rax,QWORD PTR [rbp-0x28]
  406fd7:	mov    rax,QWORD PTR [rax]
  406fda:	mov    rdi,rax
  406fdd:	call   402586 <next@@Base>
  406fe2:	mov    QWORD PTR [rbp-0x8],rax
  406fe6:	mov    rax,QWORD PTR [rip+0xa61b]        # 411608 <__bss_start@@Base+0xe78>
  406fed:	inc    rax
  406ff0:	mov    QWORD PTR [rip+0xa611],rax        # 411608 <__bss_start@@Base+0xe78>
  406ff7:	mov    rax,QWORD PTR [rbp-0x8]
  406ffb:	mov    eax,DWORD PTR [rax]
  406ffd:	cmp    eax,0x5
  407000:	je     40701d <read_body@@Base+0x8b>
  407002:	mov    eax,0x0
  407007:	mov    rdx,QWORD PTR [rip+0xa602]        # 411610 <__bss_start@@Base+0xe80>
  40700e:	inc    rdx
  407011:	mov    QWORD PTR [rip+0xa5f8],rdx        # 411610 <__bss_start@@Base+0xe80>
  407018:	jmp    4071f2 <read_body@@Base+0x260>
  40701d:	mov    rax,QWORD PTR [rbp-0x8]
  407021:	mov    rdi,rax
  407024:	call   406027 <free_token_obra@@Base>
  407029:	mov    rax,QWORD PTR [rip+0xa5e8]        # 411618 <__bss_start@@Base+0xe88>
  407030:	inc    rax
  407033:	mov    QWORD PTR [rip+0xa5de],rax        # 411618 <__bss_start@@Base+0xe88>
  40703a:	mov    rax,QWORD PTR [rbp-0x28]
  40703e:	mov    rax,QWORD PTR [rax]
  407041:	mov    rdi,rax
  407044:	call   402586 <next@@Base>
  407049:	mov    QWORD PTR [rbp-0x8],rax
  40704d:	nop
  40704e:	mov    rax,QWORD PTR [rip+0xa5cb]        # 411620 <__bss_start@@Base+0xe90>
  407055:	inc    rax
  407058:	mov    QWORD PTR [rip+0xa5c1],rax        # 411620 <__bss_start@@Base+0xe90>
  40705f:	jmp    4071b1 <read_body@@Base+0x21f>
  407064:	mov    rax,QWORD PTR [rbp-0x8]
  407068:	mov    eax,DWORD PTR [rax]
  40706a:	cmp    eax,0x7
  40706d:	je     407079 <read_body@@Base+0xe7>
  40706f:	cmp    eax,0xa
  407072:	je     4070ce <read_body@@Base+0x13c>
  407074:	jmp    40710e <read_body@@Base+0x17c>
  407079:	mov    rax,QWORD PTR [rip+0xa5b0]        # 411630 <__bss_start@@Base+0xea0>
  407080:	inc    rax
  407083:	mov    QWORD PTR [rip+0xa5a6],rax        # 411630 <__bss_start@@Base+0xea0>
  40708a:	mov    rax,QWORD PTR [rbp-0x8]
  40708e:	mov    rdi,rax
  407091:	call   406087 <free_token_return@@Base>
  407096:	mov    rax,QWORD PTR [rip+0xa5a3]        # 411640 <__bss_start@@Base+0xeb0>
  40709d:	inc    rax
  4070a0:	mov    QWORD PTR [rip+0xa599],rax        # 411640 <__bss_start@@Base+0xeb0>
  4070a7:	mov    rax,QWORD PTR [rbp-0x28]
  4070ab:	mov    rdi,rax
  4070ae:	call   4071f4 <read_return_expression@@Base>
  4070b3:	mov    QWORD PTR [rbp-0x18],rax
  4070b7:	nop
  4070b8:	mov    rax,QWORD PTR [rip+0xa589]        # 411648 <__bss_start@@Base+0xeb8>
  4070bf:	inc    rax
  4070c2:	mov    QWORD PTR [rip+0xa57f],rax        # 411648 <__bss_start@@Base+0xeb8>
  4070c9:	jmp    40714f <read_body@@Base+0x1bd>
  4070ce:	mov    rax,QWORD PTR [rip+0xa563]        # 411638 <__bss_start@@Base+0xea8>
  4070d5:	inc    rax
  4070d8:	mov    QWORD PTR [rip+0xa559],rax        # 411638 <__bss_start@@Base+0xea8>
  4070df:	mov    rax,QWORD PTR [rbp-0x8]
  4070e3:	mov    rdi,rax
  4070e6:	call   406117 <free_token_if@@Base>
  4070eb:	mov    rax,QWORD PTR [rip+0xa55e]        # 411650 <__bss_start@@Base+0xec0>
  4070f2:	inc    rax
  4070f5:	mov    QWORD PTR [rip+0xa554],rax        # 411650 <__bss_start@@Base+0xec0>
  4070fc:	mov    rax,QWORD PTR [rbp-0x28]
  407100:	mov    rdi,rax
  407103:	call   407374 <read_if_statement@@Base>
  407108:	mov    QWORD PTR [rbp-0x18],rax
  40710c:	jmp    40714f <read_body@@Base+0x1bd>
  40710e:	mov    rax,QWORD PTR [rip+0xa513]        # 411628 <__bss_start@@Base+0xe98>
  407115:	inc    rax
  407118:	mov    QWORD PTR [rip+0xa509],rax        # 411628 <__bss_start@@Base+0xe98>
  40711f:	mov    rax,QWORD PTR [rbp-0x28]
  407123:	mov    rax,QWORD PTR [rax]
  407126:	mov    rdx,QWORD PTR [rbp-0x8]
  40712a:	mov    rsi,rdx
  40712d:	mov    rdi,rax
  407130:	call   4027f6 <push_back@@Base>
  407135:	mov    rax,QWORD PTR [rip+0xa51c]        # 411658 <__bss_start@@Base+0xec8>
  40713c:	inc    rax
  40713f:	mov    QWORD PTR [rip+0xa512],rax        # 411658 <__bss_start@@Base+0xec8>
  407146:	mov    rax,QWORD PTR [rbp-0x20]
  40714a:	jmp    4071f2 <read_body@@Base+0x260>
  40714f:	cmp    QWORD PTR [rbp-0x20],0x0
  407154:	je     40717d <read_body@@Base+0x1eb>
  407156:	mov    rax,QWORD PTR [rip+0xa503]        # 411660 <__bss_start@@Base+0xed0>
  40715d:	inc    rax
  407160:	mov    QWORD PTR [rip+0xa4f9],rax        # 411660 <__bss_start@@Base+0xed0>
  407167:	mov    rax,QWORD PTR [rbp-0x10]
  40716b:	mov    rdx,QWORD PTR [rbp-0x18]
  40716f:	mov    QWORD PTR [rax+0x8],rdx
  407173:	mov    rax,QWORD PTR [rbp-0x18]
  407177:	mov    QWORD PTR [rbp-0x10],rax
  40717b:	jmp    40719e <read_body@@Base+0x20c>
  40717d:	mov    rax,QWORD PTR [rip+0xa4e4]        # 411668 <__bss_start@@Base+0xed8>
  407184:	inc    rax
  407187:	mov    QWORD PTR [rip+0xa4da],rax        # 411668 <__bss_start@@Base+0xed8>
  40718e:	mov    rax,QWORD PTR [rbp-0x18]
  407192:	mov    QWORD PTR [rbp-0x20],rax
  407196:	mov    rax,QWORD PTR [rbp-0x18]
  40719a:	mov    QWORD PTR [rbp-0x10],rax
  40719e:	mov    rax,QWORD PTR [rbp-0x28]
  4071a2:	mov    rax,QWORD PTR [rax]
  4071a5:	mov    rdi,rax
  4071a8:	call   402586 <next@@Base>
  4071ad:	mov    QWORD PTR [rbp-0x8],rax
  4071b1:	mov    rax,QWORD PTR [rbp-0x8]
  4071b5:	mov    eax,DWORD PTR [rax]
  4071b7:	cmp    eax,0x6
  4071ba:	jne    407064 <read_body@@Base+0xd2>
  4071c0:	mov    rax,QWORD PTR [rip+0xa4a9]        # 411670 <__bss_start@@Base+0xee0>
  4071c7:	inc    rax
  4071ca:	mov    QWORD PTR [rip+0xa49f],rax        # 411670 <__bss_start@@Base+0xee0>
  4071d1:	mov    rax,QWORD PTR [rbp-0x8]
  4071d5:	mov    rdi,rax
  4071d8:	call   406057 <free_token_cbra@@Base>
  4071dd:	mov    rax,QWORD PTR [rip+0xa494]        # 411678 <__bss_start@@Base+0xee8>
  4071e4:	inc    rax
  4071e7:	mov    QWORD PTR [rip+0xa48a],rax        # 411678 <__bss_start@@Base+0xee8>
  4071ee:	mov    rax,QWORD PTR [rbp-0x20]
  4071f2:	leave  
  4071f3:	ret    

00000000004071f4 <read_return_expression@@Base>:
  4071f4:	endbr64 
  4071f8:	push   rbp
  4071f9:	mov    rbp,rsp
  4071fc:	sub    rsp,0x30
  407200:	mov    QWORD PTR [rbp-0x28],rdi
  407204:	mov    rax,QWORD PTR [rip+0xa395]        # 4115a0 <__bss_start@@Base+0xe10>
  40720b:	inc    rax
  40720e:	mov    QWORD PTR [rip+0xa38b],rax        # 4115a0 <__bss_start@@Base+0xe10>
  407215:	mov    QWORD PTR [rbp-0x20],0x0
  40721d:	mov    QWORD PTR [rbp-0x18],0x0
  407225:	mov    QWORD PTR [rbp-0x10],0x0
  40722d:	mov    QWORD PTR [rbp-0x8],0x0
  407235:	mov    rax,QWORD PTR [rbp-0x28]
  407239:	mov    rax,QWORD PTR [rax]
  40723c:	mov    rdi,rax
  40723f:	call   402586 <next@@Base>
  407244:	mov    QWORD PTR [rbp-0x10],rax
  407248:	mov    rax,QWORD PTR [rip+0xa359]        # 4115a8 <__bss_start@@Base+0xe18>
  40724f:	inc    rax
  407252:	mov    QWORD PTR [rip+0xa34f],rax        # 4115a8 <__bss_start@@Base+0xe18>
  407259:	mov    rax,QWORD PTR [rbp-0x10]
  40725d:	mov    eax,DWORD PTR [rax]
  40725f:	cmp    eax,0x1
  407262:	je     40727f <read_return_expression@@Base+0x8b>
  407264:	mov    eax,0x0
  407269:	mov    rdx,QWORD PTR [rip+0xa340]        # 4115b0 <__bss_start@@Base+0xe20>
  407270:	inc    rdx
  407273:	mov    QWORD PTR [rip+0xa336],rdx        # 4115b0 <__bss_start@@Base+0xe20>
  40727a:	jmp    407372 <read_return_expression@@Base+0x17e>
  40727f:	mov    rax,QWORD PTR [rbp-0x10]
  407283:	mov    QWORD PTR [rbp-0x8],rax
  407287:	mov    edi,0x18
  40728c:	call   4023f0 <malloc@plt>
  407291:	mov    QWORD PTR [rbp-0x18],rax
  407295:	mov    rax,QWORD PTR [rbp-0x8]
  407299:	mov    edx,DWORD PTR [rax+0x4]
  40729c:	mov    rax,QWORD PTR [rbp-0x18]
  4072a0:	mov    esi,edx
  4072a2:	mov    rdi,rax
  4072a5:	call   4062da <init_node_int@@Base>
  4072aa:	mov    rax,QWORD PTR [rip+0xa307]        # 4115b8 <__bss_start@@Base+0xe28>
  4072b1:	inc    rax
  4072b4:	mov    QWORD PTR [rip+0xa2fd],rax        # 4115b8 <__bss_start@@Base+0xe28>
  4072bb:	mov    rax,QWORD PTR [rbp-0x8]
  4072bf:	mov    rdi,rax
  4072c2:	call   405f67 <free_token_int_value@@Base>
  4072c7:	mov    rax,QWORD PTR [rip+0xa2f2]        # 4115c0 <__bss_start@@Base+0xe30>
  4072ce:	inc    rax
  4072d1:	mov    QWORD PTR [rip+0xa2e8],rax        # 4115c0 <__bss_start@@Base+0xe30>
  4072d8:	mov    edi,0x18
  4072dd:	call   4023f0 <malloc@plt>
  4072e2:	mov    QWORD PTR [rbp-0x20],rax
  4072e6:	mov    rdx,QWORD PTR [rbp-0x18]
  4072ea:	mov    rax,QWORD PTR [rbp-0x20]
  4072ee:	mov    rsi,rdx
  4072f1:	mov    rdi,rax
  4072f4:	call   406393 <init_node_return@@Base>
  4072f9:	mov    rax,QWORD PTR [rip+0xa2c8]        # 4115c8 <__bss_start@@Base+0xe38>
  407300:	inc    rax
  407303:	mov    QWORD PTR [rip+0xa2be],rax        # 4115c8 <__bss_start@@Base+0xe38>
  40730a:	mov    rax,QWORD PTR [rbp-0x28]
  40730e:	mov    rax,QWORD PTR [rax]
  407311:	mov    rdi,rax
  407314:	call   402586 <next@@Base>
  407319:	mov    QWORD PTR [rbp-0x10],rax
  40731d:	mov    rax,QWORD PTR [rbp-0x10]
  407321:	mov    eax,DWORD PTR [rax]
  407323:	cmp    eax,0x8
  407326:	je     407340 <read_return_expression@@Base+0x14c>
  407328:	mov    eax,0x0
  40732d:	mov    rdx,QWORD PTR [rip+0xa2a4]        # 4115d8 <__bss_start@@Base+0xe48>
  407334:	inc    rdx
  407337:	mov    QWORD PTR [rip+0xa29a],rdx        # 4115d8 <__bss_start@@Base+0xe48>
  40733e:	jmp    407372 <read_return_expression@@Base+0x17e>
  407340:	mov    rax,QWORD PTR [rip+0xa289]        # 4115d0 <__bss_start@@Base+0xe40>
  407347:	inc    rax
  40734a:	mov    QWORD PTR [rip+0xa27f],rax        # 4115d0 <__bss_start@@Base+0xe40>
  407351:	mov    rax,QWORD PTR [rbp-0x10]
  407355:	mov    rdi,rax
  407358:	call   4060b7 <free_token_semicolon@@Base>
  40735d:	mov    rax,QWORD PTR [rip+0xa27c]        # 4115e0 <__bss_start@@Base+0xe50>
  407364:	inc    rax
  407367:	mov    QWORD PTR [rip+0xa272],rax        # 4115e0 <__bss_start@@Base+0xe50>
  40736e:	mov    rax,QWORD PTR [rbp-0x20]
  407372:	leave  
  407373:	ret    

0000000000407374 <read_if_statement@@Base>:
  407374:	endbr64 
  407378:	push   rbp
  407379:	mov    rbp,rsp
  40737c:	sub    rsp,0x40
  407380:	mov    QWORD PTR [rbp-0x38],rdi
  407384:	mov    rax,QWORD PTR [rip+0xa1b5]        # 411540 <__bss_start@@Base+0xdb0>
  40738b:	inc    rax
  40738e:	mov    QWORD PTR [rip+0xa1ab],rax        # 411540 <__bss_start@@Base+0xdb0>
  407395:	mov    QWORD PTR [rbp-0x20],0x0
  40739d:	mov    QWORD PTR [rbp-0x18],0x0
  4073a5:	mov    QWORD PTR [rbp-0x10],0x0
  4073ad:	mov    QWORD PTR [rbp-0x28],0x0
  4073b5:	mov    QWORD PTR [rbp-0x8],0x0
  4073bd:	mov    rax,QWORD PTR [rbp-0x38]
  4073c1:	mov    rax,QWORD PTR [rax]
  4073c4:	mov    rdi,rax
  4073c7:	call   402586 <next@@Base>
  4073cc:	mov    QWORD PTR [rbp-0x8],rax
  4073d0:	mov    rax,QWORD PTR [rip+0xa171]        # 411548 <__bss_start@@Base+0xdb8>
  4073d7:	inc    rax
  4073da:	mov    QWORD PTR [rip+0xa167],rax        # 411548 <__bss_start@@Base+0xdb8>
  4073e1:	mov    rax,QWORD PTR [rbp-0x8]
  4073e5:	mov    eax,DWORD PTR [rax]
  4073e7:	cmp    eax,0x3
  4073ea:	je     407407 <read_if_statement@@Base+0x93>
  4073ec:	mov    eax,0x0
  4073f1:	mov    rdx,QWORD PTR [rip+0xa158]        # 411550 <__bss_start@@Base+0xdc0>
  4073f8:	inc    rdx
  4073fb:	mov    QWORD PTR [rip+0xa14e],rdx        # 411550 <__bss_start@@Base+0xdc0>
  407402:	jmp    407548 <read_if_statement@@Base+0x1d4>
  407407:	mov    rax,QWORD PTR [rbp-0x8]
  40740b:	mov    rdi,rax
  40740e:	call   405fc7 <free_token_opar@@Base>
  407413:	mov    rax,QWORD PTR [rip+0xa13e]        # 411558 <__bss_start@@Base+0xdc8>
  40741a:	inc    rax
  40741d:	mov    QWORD PTR [rip+0xa134],rax        # 411558 <__bss_start@@Base+0xdc8>
  407424:	mov    rax,QWORD PTR [rbp-0x38]
  407428:	mov    rdi,rax
  40742b:	call   40754a <read_boolean_expression@@Base>
  407430:	mov    QWORD PTR [rbp-0x18],rax
  407434:	mov    rax,QWORD PTR [rip+0xa125]        # 411560 <__bss_start@@Base+0xdd0>
  40743b:	inc    rax
  40743e:	mov    QWORD PTR [rip+0xa11b],rax        # 411560 <__bss_start@@Base+0xdd0>
  407445:	mov    rax,QWORD PTR [rbp-0x38]
  407449:	mov    rdi,rax
  40744c:	call   406f92 <read_body@@Base>
  407451:	mov    QWORD PTR [rbp-0x10],rax
  407455:	mov    rax,QWORD PTR [rip+0xa10c]        # 411568 <__bss_start@@Base+0xdd8>
  40745c:	inc    rax
  40745f:	mov    QWORD PTR [rip+0xa102],rax        # 411568 <__bss_start@@Base+0xdd8>
  407466:	mov    rax,QWORD PTR [rbp-0x38]
  40746a:	mov    rax,QWORD PTR [rax]
  40746d:	mov    rdi,rax
  407470:	call   402586 <next@@Base>
  407475:	mov    QWORD PTR [rbp-0x8],rax
  407479:	mov    rax,QWORD PTR [rbp-0x8]
  40747d:	mov    eax,DWORD PTR [rax]
  40747f:	cmp    eax,0xb
  407482:	jne    4074d5 <read_if_statement@@Base+0x161>
  407484:	mov    rax,QWORD PTR [rip+0xa0e5]        # 411570 <__bss_start@@Base+0xde0>
  40748b:	inc    rax
  40748e:	mov    QWORD PTR [rip+0xa0db],rax        # 411570 <__bss_start@@Base+0xde0>
  407495:	mov    rax,QWORD PTR [rbp-0x8]
  407499:	mov    rdi,rax
  40749c:	call   406147 <free_token_else@@Base>
  4074a1:	mov    rax,QWORD PTR [rip+0xa0d8]        # 411580 <__bss_start@@Base+0xdf0>
  4074a8:	inc    rax
  4074ab:	mov    QWORD PTR [rip+0xa0ce],rax        # 411580 <__bss_start@@Base+0xdf0>
  4074b2:	mov    rax,QWORD PTR [rbp-0x38]
  4074b6:	mov    rdi,rax
  4074b9:	call   406f92 <read_body@@Base>
  4074be:	mov    QWORD PTR [rbp-0x28],rax
  4074c2:	mov    rax,QWORD PTR [rip+0xa0bf]        # 411588 <__bss_start@@Base+0xdf8>
  4074c9:	inc    rax
  4074cc:	mov    QWORD PTR [rip+0xa0b5],rax        # 411588 <__bss_start@@Base+0xdf8>
  4074d3:	jmp    40750d <read_if_statement@@Base+0x199>
  4074d5:	mov    rax,QWORD PTR [rip+0xa09c]        # 411578 <__bss_start@@Base+0xde8>
  4074dc:	inc    rax
  4074df:	mov    QWORD PTR [rip+0xa092],rax        # 411578 <__bss_start@@Base+0xde8>
  4074e6:	mov    rax,QWORD PTR [rbp-0x38]
  4074ea:	mov    rax,QWORD PTR [rax]
  4074ed:	mov    rdx,QWORD PTR [rbp-0x8]
  4074f1:	mov    rsi,rdx
  4074f4:	mov    rdi,rax
  4074f7:	call   4027f6 <push_back@@Base>
  4074fc:	mov    rax,QWORD PTR [rip+0xa08d]        # 411590 <__bss_start@@Base+0xe00>
  407503:	inc    rax
  407506:	mov    QWORD PTR [rip+0xa083],rax        # 411590 <__bss_start@@Base+0xe00>
  40750d:	mov    edi,0x28
  407512:	call   4023f0 <malloc@plt>
  407517:	mov    QWORD PTR [rbp-0x20],rax
  40751b:	mov    rcx,QWORD PTR [rbp-0x28]
  40751f:	mov    rdx,QWORD PTR [rbp-0x10]
  407523:	mov    rsi,QWORD PTR [rbp-0x18]
  407527:	mov    rax,QWORD PTR [rbp-0x20]
  40752b:	mov    rdi,rax
  40752e:	call   4063e9 <init_node_if@@Base>
  407533:	mov    rax,QWORD PTR [rip+0xa05e]        # 411598 <__bss_start@@Base+0xe08>
  40753a:	inc    rax
  40753d:	mov    QWORD PTR [rip+0xa054],rax        # 411598 <__bss_start@@Base+0xe08>
  407544:	mov    rax,QWORD PTR [rbp-0x20]
  407548:	leave  
  407549:	ret    

000000000040754a <read_boolean_expression@@Base>:
  40754a:	endbr64 
  40754e:	push   rbp
  40754f:	mov    rbp,rsp
  407552:	sub    rsp,0x30
  407556:	mov    QWORD PTR [rbp-0x28],rdi
  40755a:	mov    rax,QWORD PTR fs:0x28
  407563:	mov    QWORD PTR [rbp-0x8],rax
  407567:	xor    eax,eax
  407569:	mov    rax,QWORD PTR [rip+0x9f50]        # 4114c0 <__bss_start@@Base+0xd30>
  407570:	inc    rax
  407573:	mov    QWORD PTR [rip+0x9f46],rax        # 4114c0 <__bss_start@@Base+0xd30>
  40757a:	mov    QWORD PTR [rbp-0x18],0x0
  407582:	mov    QWORD PTR [rbp-0x10],0x0
  40758a:	mov    DWORD PTR [rbp-0x20],0x0
  407591:	mov    rax,QWORD PTR [rbp-0x28]
  407595:	mov    rax,QWORD PTR [rax]
  407598:	mov    rdi,rax
  40759b:	call   402586 <next@@Base>
  4075a0:	mov    QWORD PTR [rbp-0x10],rax
  4075a4:	nop
  4075a5:	mov    rax,QWORD PTR [rip+0x9f1c]        # 4114c8 <__bss_start@@Base+0xd38>
  4075ac:	inc    rax
  4075af:	mov    QWORD PTR [rip+0x9f12],rax        # 4114c8 <__bss_start@@Base+0xd38>
  4075b6:	jmp    407721 <read_boolean_expression@@Base+0x1d7>
  4075bb:	mov    rax,QWORD PTR [rbp-0x10]
  4075bf:	mov    eax,DWORD PTR [rax]
  4075c1:	cmp    eax,0x3
  4075c4:	je     40767f <read_boolean_expression@@Base+0x135>
  4075ca:	cmp    eax,0xc
  4075cd:	je     407642 <read_boolean_expression@@Base+0xf8>
  4075cf:	cmp    eax,0x1
  4075d2:	jne    4076bf <read_boolean_expression@@Base+0x175>
  4075d8:	mov    rax,QWORD PTR [rip+0x9ef9]        # 4114d8 <__bss_start@@Base+0xd48>
  4075df:	inc    rax
  4075e2:	mov    QWORD PTR [rip+0x9eef],rax        # 4114d8 <__bss_start@@Base+0xd48>
  4075e9:	mov    rax,QWORD PTR [rbp-0x28]
  4075ed:	mov    rax,QWORD PTR [rax]
  4075f0:	mov    rdx,QWORD PTR [rbp-0x10]
  4075f4:	mov    rsi,rdx
  4075f7:	mov    rdi,rax
  4075fa:	call   4027f6 <push_back@@Base>
  4075ff:	mov    rax,QWORD PTR [rip+0x9eea]        # 4114f0 <__bss_start@@Base+0xd60>
  407606:	inc    rax
  407609:	mov    QWORD PTR [rip+0x9ee0],rax        # 4114f0 <__bss_start@@Base+0xd60>
  407610:	mov    ecx,DWORD PTR [rbp-0x1c]
  407613:	lea    rdx,[rbp-0x20]
  407617:	mov    rsi,QWORD PTR [rbp-0x18]
  40761b:	mov    rax,QWORD PTR [rbp-0x28]
  40761f:	mov    rdi,rax
  407622:	call   407778 <read_single_boolean_expression@@Base>
  407627:	mov    QWORD PTR [rbp-0x18],rax
  40762b:	nop
  40762c:	mov    rax,QWORD PTR [rip+0x9ec5]        # 4114f8 <__bss_start@@Base+0xd68>
  407633:	inc    rax
  407636:	mov    QWORD PTR [rip+0x9ebb],rax        # 4114f8 <__bss_start@@Base+0xd68>
  40763d:	jmp    40770e <read_boolean_expression@@Base+0x1c4>
  407642:	mov    rax,QWORD PTR [rip+0x9e9f]        # 4114e8 <__bss_start@@Base+0xd58>
  407649:	inc    rax
  40764c:	mov    QWORD PTR [rip+0x9e95],rax        # 4114e8 <__bss_start@@Base+0xd58>
  407653:	mov    rax,QWORD PTR [rbp-0x10]
  407657:	mov    rdi,rax
  40765a:	call   4069f2 <get_boolean_op_value@@Base>
  40765f:	mov    DWORD PTR [rbp-0x1c],eax
  407662:	mov    rax,QWORD PTR [rip+0x9e97]        # 411500 <__bss_start@@Base+0xd70>
  407669:	inc    rax
  40766c:	mov    QWORD PTR [rip+0x9e8d],rax        # 411500 <__bss_start@@Base+0xd70>
  407673:	mov    DWORD PTR [rbp-0x20],0x1
  40767a:	jmp    40770e <read_boolean_expression@@Base+0x1c4>
  40767f:	mov    rax,QWORD PTR [rip+0x9e5a]        # 4114e0 <__bss_start@@Base+0xd50>
  407686:	inc    rax
  407689:	mov    QWORD PTR [rip+0x9e50],rax        # 4114e0 <__bss_start@@Base+0xd50>
  407690:	mov    ecx,DWORD PTR [rbp-0x1c]
  407693:	lea    rdx,[rbp-0x20]
  407697:	mov    rsi,QWORD PTR [rbp-0x18]
  40769b:	mov    rax,QWORD PTR [rbp-0x28]
  40769f:	mov    rdi,rax
  4076a2:	call   407778 <read_single_boolean_expression@@Base>
  4076a7:	mov    QWORD PTR [rbp-0x18],rax
  4076ab:	nop
  4076ac:	mov    rax,QWORD PTR [rip+0x9e55]        # 411508 <__bss_start@@Base+0xd78>
  4076b3:	inc    rax
  4076b6:	mov    QWORD PTR [rip+0x9e4b],rax        # 411508 <__bss_start@@Base+0xd78>
  4076bd:	jmp    40770e <read_boolean_expression@@Base+0x1c4>
  4076bf:	mov    rax,QWORD PTR [rip+0x9e0a]        # 4114d0 <__bss_start@@Base+0xd40>
  4076c6:	inc    rax
  4076c9:	mov    QWORD PTR [rip+0x9e00],rax        # 4114d0 <__bss_start@@Base+0xd40>
  4076d0:	mov    rax,QWORD PTR [rip+0x7921]        # 40eff8 <stderr@GLIBC_2.2.5>
  4076d7:	mov    rax,QWORD PTR [rax]
  4076da:	mov    rcx,rax
  4076dd:	mov    edx,0x21
  4076e2:	mov    esi,0x1
  4076e7:	lea    rdi,[rip+0x41f2]        # 40b8e0 <_IO_stdin_used@@Base+0x8e0>
  4076ee:	call   402470 <fwrite@plt>
  4076f3:	mov    rax,QWORD PTR [rip+0x9e16]        # 411510 <__bss_start@@Base+0xd80>
  4076fa:	inc    rax
  4076fd:	mov    QWORD PTR [rip+0x9e0c],rax        # 411510 <__bss_start@@Base+0xd80>
  407704:	mov    edi,0x1
  407709:	call   402460 <exit@plt>
  40770e:	mov    rax,QWORD PTR [rbp-0x28]
  407712:	mov    rax,QWORD PTR [rax]
  407715:	mov    rdi,rax
  407718:	call   402586 <next@@Base>
  40771d:	mov    QWORD PTR [rbp-0x10],rax
  407721:	mov    rax,QWORD PTR [rbp-0x10]
  407725:	mov    eax,DWORD PTR [rax]
  407727:	cmp    eax,0x4
  40772a:	jne    4075bb <read_boolean_expression@@Base+0x71>
  407730:	mov    rax,QWORD PTR [rip+0x9de1]        # 411518 <__bss_start@@Base+0xd88>
  407737:	inc    rax
  40773a:	mov    QWORD PTR [rip+0x9dd7],rax        # 411518 <__bss_start@@Base+0xd88>
  407741:	mov    rax,QWORD PTR [rbp-0x10]
  407745:	mov    rdi,rax
  407748:	call   405ff7 <free_token_cpar@@Base>
  40774d:	mov    rax,QWORD PTR [rip+0x9dcc]        # 411520 <__bss_start@@Base+0xd90>
  407754:	inc    rax
  407757:	mov    QWORD PTR [rip+0x9dc2],rax        # 411520 <__bss_start@@Base+0xd90>
  40775e:	mov    rax,QWORD PTR [rbp-0x18]
  407762:	mov    rcx,QWORD PTR [rbp-0x8]
  407766:	xor    rcx,QWORD PTR fs:0x28
  40776f:	je     407776 <read_boolean_expression@@Base+0x22c>
  407771:	call   402340 <__stack_chk_fail@plt>
  407776:	leave  
  407777:	ret    

0000000000407778 <read_single_boolean_expression@@Base>:
  407778:	endbr64 
  40777c:	push   rbp
  40777d:	mov    rbp,rsp
  407780:	sub    rsp,0x50
  407784:	mov    QWORD PTR [rbp-0x38],rdi
  407788:	mov    QWORD PTR [rbp-0x40],rsi
  40778c:	mov    QWORD PTR [rbp-0x48],rdx
  407790:	mov    DWORD PTR [rbp-0x4c],ecx
  407793:	mov    rax,QWORD PTR [rip+0x9ce6]        # 411480 <__bss_start@@Base+0xcf0>
  40779a:	inc    rax
  40779d:	mov    QWORD PTR [rip+0x9cdc],rax        # 411480 <__bss_start@@Base+0xcf0>
  4077a4:	mov    QWORD PTR [rbp-0x20],0x0
  4077ac:	mov    QWORD PTR [rbp-0x28],0x0
  4077b4:	mov    QWORD PTR [rbp-0x18],0x0
  4077bc:	mov    QWORD PTR [rbp-0x10],0x0
  4077c4:	mov    QWORD PTR [rbp-0x8],0x0
  4077cc:	cmp    QWORD PTR [rbp-0x40],0x0
  4077d1:	jne    4077f9 <read_single_boolean_expression@@Base+0x81>
  4077d3:	mov    rax,QWORD PTR [rip+0x9cae]        # 411488 <__bss_start@@Base+0xcf8>
  4077da:	inc    rax
  4077dd:	mov    QWORD PTR [rip+0x9ca4],rax        # 411488 <__bss_start@@Base+0xcf8>
  4077e4:	mov    rax,QWORD PTR [rbp-0x38]
  4077e8:	mov    rdi,rax
  4077eb:	call   4078e2 <read_boolean_binary_expression@@Base>
  4077f0:	mov    QWORD PTR [rbp-0x28],rax
  4077f4:	jmp    4078cb <read_single_boolean_expression@@Base+0x153>
  4077f9:	mov    rax,QWORD PTR [rbp-0x48]
  4077fd:	mov    eax,DWORD PTR [rax]
  4077ff:	test   eax,eax
  407801:	je     40788b <read_single_boolean_expression@@Base+0x113>
  407807:	mov    rax,QWORD PTR [rip+0x9c82]        # 411490 <__bss_start@@Base+0xd00>
  40780e:	inc    rax
  407811:	mov    QWORD PTR [rip+0x9c78],rax        # 411490 <__bss_start@@Base+0xd00>
  407818:	mov    rax,QWORD PTR [rbp-0x38]
  40781c:	mov    rdi,rax
  40781f:	call   4078e2 <read_boolean_binary_expression@@Base>
  407824:	mov    QWORD PTR [rbp-0x18],rax
  407828:	mov    rax,QWORD PTR [rip+0x9c69]        # 411498 <__bss_start@@Base+0xd08>
  40782f:	inc    rax
  407832:	mov    QWORD PTR [rip+0x9c5f],rax        # 411498 <__bss_start@@Base+0xd08>
  407839:	mov    rax,QWORD PTR [rbp-0x28]
  40783d:	mov    QWORD PTR [rbp-0x10],rax
  407841:	mov    rax,QWORD PTR [rbp-0x18]
  407845:	mov    QWORD PTR [rbp-0x8],rax
  407849:	mov    edi,0x28
  40784e:	call   4023f0 <malloc@plt>
  407853:	mov    QWORD PTR [rbp-0x28],rax
  407857:	mov    rcx,QWORD PTR [rbp-0x8]
  40785b:	mov    rdx,QWORD PTR [rbp-0x10]
  40785f:	mov    esi,DWORD PTR [rbp-0x4c]
  407862:	mov    rax,QWORD PTR [rbp-0x28]
  407866:	mov    rdi,rax
  407869:	call   40645f <init_node_boolean_operator@@Base>
  40786e:	mov    rax,QWORD PTR [rbp-0x48]
  407872:	mov    DWORD PTR [rax],0x0
  407878:	mov    rax,QWORD PTR [rip+0x9c21]        # 4114a0 <__bss_start@@Base+0xd10>
  40787f:	inc    rax
  407882:	mov    QWORD PTR [rip+0x9c17],rax        # 4114a0 <__bss_start@@Base+0xd10>
  407889:	jmp    4078cb <read_single_boolean_expression@@Base+0x153>
  40788b:	mov    rax,QWORD PTR [rbp-0x20]
  40788f:	mov    edx,DWORD PTR [rax+0x4]
  407892:	mov    rax,QWORD PTR [rip+0x775f]        # 40eff8 <stderr@GLIBC_2.2.5>
  407899:	mov    rax,QWORD PTR [rax]
  40789c:	lea    rsi,[rip+0x4065]        # 40b908 <_IO_stdin_used@@Base+0x908>
  4078a3:	mov    rdi,rax
  4078a6:	mov    eax,0x0
  4078ab:	call   4023b0 <fprintf@plt>
  4078b0:	mov    rax,QWORD PTR [rip+0x9bf1]        # 4114a8 <__bss_start@@Base+0xd18>
  4078b7:	inc    rax
  4078ba:	mov    QWORD PTR [rip+0x9be7],rax        # 4114a8 <__bss_start@@Base+0xd18>
  4078c1:	mov    edi,0x1
  4078c6:	call   402460 <exit@plt>
  4078cb:	mov    rax,QWORD PTR [rbp-0x28]
  4078cf:	mov    rdx,QWORD PTR [rip+0x9bda]        # 4114b0 <__bss_start@@Base+0xd20>
  4078d6:	inc    rdx
  4078d9:	mov    QWORD PTR [rip+0x9bd0],rdx        # 4114b0 <__bss_start@@Base+0xd20>
  4078e0:	leave  
  4078e1:	ret    

00000000004078e2 <read_boolean_binary_expression@@Base>:
  4078e2:	endbr64 
  4078e6:	push   rbp
  4078e7:	mov    rbp,rsp
  4078ea:	sub    rsp,0x50
  4078ee:	mov    QWORD PTR [rbp-0x48],rdi
  4078f2:	mov    rax,QWORD PTR [rip+0x9ae7]        # 4113e0 <__bss_start@@Base+0xc50>
  4078f9:	inc    rax
  4078fc:	mov    QWORD PTR [rip+0x9add],rax        # 4113e0 <__bss_start@@Base+0xc50>
  407903:	mov    QWORD PTR [rbp-0x38],0x0
  40790b:	mov    QWORD PTR [rbp-0x30],0x0
  407913:	mov    QWORD PTR [rbp-0x28],0x0
  40791b:	mov    QWORD PTR [rbp-0x20],0x0
  407923:	mov    QWORD PTR [rbp-0x18],0x0
  40792b:	mov    QWORD PTR [rbp-0x10],0x0
  407933:	mov    QWORD PTR [rbp-0x8],0x0
  40793b:	mov    rax,QWORD PTR [rbp-0x48]
  40793f:	mov    rax,QWORD PTR [rax]
  407942:	mov    rdi,rax
  407945:	call   402586 <next@@Base>
  40794a:	mov    QWORD PTR [rbp-0x18],rax
  40794e:	mov    rax,QWORD PTR [rip+0x9a93]        # 4113e8 <__bss_start@@Base+0xc58>
  407955:	inc    rax
  407958:	mov    QWORD PTR [rip+0x9a89],rax        # 4113e8 <__bss_start@@Base+0xc58>
  40795f:	mov    rax,QWORD PTR [rbp-0x18]
  407963:	mov    eax,DWORD PTR [rax]
  407965:	cmp    eax,0x1
  407968:	je     4079ee <read_boolean_binary_expression@@Base+0x10c>
  40796e:	mov    rax,QWORD PTR [rbp-0x18]
  407972:	mov    eax,DWORD PTR [rax]
  407974:	cmp    eax,0xc
  407977:	jne    4079d3 <read_boolean_binary_expression@@Base+0xf1>
  407979:	mov    rax,QWORD PTR [rip+0x9a70]        # 4113f0 <__bss_start@@Base+0xc60>
  407980:	inc    rax
  407983:	mov    QWORD PTR [rip+0x9a66],rax        # 4113f0 <__bss_start@@Base+0xc60>
  40798a:	mov    rax,QWORD PTR [rbp-0x48]
  40798e:	mov    rax,QWORD PTR [rax]
  407991:	mov    rdx,QWORD PTR [rbp-0x18]
  407995:	mov    rsi,rdx
  407998:	mov    rdi,rax
  40799b:	call   4027f6 <push_back@@Base>
  4079a0:	mov    rax,QWORD PTR [rip+0x9a59]        # 411400 <__bss_start@@Base+0xc70>
  4079a7:	inc    rax
  4079aa:	mov    QWORD PTR [rip+0x9a4f],rax        # 411400 <__bss_start@@Base+0xc70>
  4079b1:	mov    rax,QWORD PTR [rbp-0x48]
  4079b5:	mov    rdi,rax
  4079b8:	call   407bff <read_boolean_unary_expression@@Base>
  4079bd:	mov    rdx,QWORD PTR [rip+0x9a44]        # 411408 <__bss_start@@Base+0xc78>
  4079c4:	inc    rdx
  4079c7:	mov    QWORD PTR [rip+0x9a3a],rdx        # 411408 <__bss_start@@Base+0xc78>
  4079ce:	jmp    407bfd <read_boolean_binary_expression@@Base+0x31b>
  4079d3:	mov    rax,QWORD PTR [rip+0x9a1e]        # 4113f8 <__bss_start@@Base+0xc68>
  4079da:	inc    rax
  4079dd:	mov    QWORD PTR [rip+0x9a14],rax        # 4113f8 <__bss_start@@Base+0xc68>
  4079e4:	mov    eax,0x0
  4079e9:	jmp    407bfd <read_boolean_binary_expression@@Base+0x31b>
  4079ee:	mov    rax,QWORD PTR [rbp-0x18]
  4079f2:	mov    QWORD PTR [rbp-0x10],rax
  4079f6:	mov    edi,0x18
  4079fb:	call   4023f0 <malloc@plt>
  407a00:	mov    QWORD PTR [rbp-0x30],rax
  407a04:	mov    rax,QWORD PTR [rbp-0x10]
  407a08:	mov    edx,DWORD PTR [rax+0x4]
  407a0b:	mov    rax,QWORD PTR [rbp-0x30]
  407a0f:	mov    esi,edx
  407a11:	mov    rdi,rax
  407a14:	call   4062da <init_node_int@@Base>
  407a19:	mov    rax,QWORD PTR [rip+0x99f0]        # 411410 <__bss_start@@Base+0xc80>
  407a20:	inc    rax
  407a23:	mov    QWORD PTR [rip+0x99e6],rax        # 411410 <__bss_start@@Base+0xc80>
  407a2a:	mov    rax,QWORD PTR [rbp-0x10]
  407a2e:	mov    rdi,rax
  407a31:	call   405f67 <free_token_int_value@@Base>
  407a36:	mov    rax,QWORD PTR [rip+0x99db]        # 411418 <__bss_start@@Base+0xc88>
  407a3d:	inc    rax
  407a40:	mov    QWORD PTR [rip+0x99d1],rax        # 411418 <__bss_start@@Base+0xc88>
  407a47:	mov    rax,QWORD PTR [rbp-0x30]
  407a4b:	mov    QWORD PTR [rbp-0x28],rax
  407a4f:	mov    rax,QWORD PTR [rbp-0x48]
  407a53:	mov    rax,QWORD PTR [rax]
  407a56:	mov    rdi,rax
  407a59:	call   402586 <next@@Base>
  407a5e:	mov    QWORD PTR [rbp-0x18],rax
  407a62:	mov    rax,QWORD PTR [rbp-0x18]
  407a66:	mov    eax,DWORD PTR [rax]
  407a68:	cmp    eax,0xc
  407a6b:	je     407aa5 <read_boolean_binary_expression@@Base+0x1c3>
  407a6d:	mov    rax,QWORD PTR [rip+0x99ac]        # 411420 <__bss_start@@Base+0xc90>
  407a74:	inc    rax
  407a77:	mov    QWORD PTR [rip+0x99a2],rax        # 411420 <__bss_start@@Base+0xc90>
  407a7e:	mov    rax,QWORD PTR [rbp-0x28]
  407a82:	mov    rdi,rax
  407a85:	call   4064dc <free_node@@Base>
  407a8a:	mov    rax,QWORD PTR [rip+0x999f]        # 411430 <__bss_start@@Base+0xca0>
  407a91:	inc    rax
  407a94:	mov    QWORD PTR [rip+0x9995],rax        # 411430 <__bss_start@@Base+0xca0>
  407a9b:	mov    eax,0x0
  407aa0:	jmp    407bfd <read_boolean_binary_expression@@Base+0x31b>
  407aa5:	mov    rax,QWORD PTR [rip+0x997c]        # 411428 <__bss_start@@Base+0xc98>
  407aac:	inc    rax
  407aaf:	mov    QWORD PTR [rip+0x9972],rax        # 411428 <__bss_start@@Base+0xc98>
  407ab6:	mov    rax,QWORD PTR [rbp-0x18]
  407aba:	mov    QWORD PTR [rbp-0x8],rax
  407abe:	mov    rax,QWORD PTR [rbp-0x8]
  407ac2:	mov    rdi,rax
  407ac5:	call   4069f2 <get_boolean_op_value@@Base>
  407aca:	mov    DWORD PTR [rbp-0x3c],eax
  407acd:	mov    rax,QWORD PTR [rip+0x9964]        # 411438 <__bss_start@@Base+0xca8>
  407ad4:	inc    rax
  407ad7:	mov    QWORD PTR [rip+0x995a],rax        # 411438 <__bss_start@@Base+0xca8>
  407ade:	mov    rax,QWORD PTR [rbp-0x8]
  407ae2:	mov    rdi,rax
  407ae5:	call   406177 <free_token_boolean_op@@Base>
  407aea:	mov    rax,QWORD PTR [rip+0x994f]        # 411440 <__bss_start@@Base+0xcb0>
  407af1:	inc    rax
  407af4:	mov    QWORD PTR [rip+0x9945],rax        # 411440 <__bss_start@@Base+0xcb0>
  407afb:	mov    rax,QWORD PTR [rbp-0x48]
  407aff:	mov    rax,QWORD PTR [rax]
  407b02:	mov    rdi,rax
  407b05:	call   402586 <next@@Base>
  407b0a:	mov    QWORD PTR [rbp-0x18],rax
  407b0e:	mov    rax,QWORD PTR [rbp-0x18]
  407b12:	mov    eax,DWORD PTR [rax]
  407b14:	cmp    eax,0x1
  407b17:	je     407b51 <read_boolean_binary_expression@@Base+0x26f>
  407b19:	mov    rax,QWORD PTR [rip+0x9928]        # 411448 <__bss_start@@Base+0xcb8>
  407b20:	inc    rax
  407b23:	mov    QWORD PTR [rip+0x991e],rax        # 411448 <__bss_start@@Base+0xcb8>
  407b2a:	mov    rax,QWORD PTR [rbp-0x28]
  407b2e:	mov    rdi,rax
  407b31:	call   4064dc <free_node@@Base>
  407b36:	mov    rax,QWORD PTR [rip+0x991b]        # 411458 <__bss_start@@Base+0xcc8>
  407b3d:	inc    rax
  407b40:	mov    QWORD PTR [rip+0x9911],rax        # 411458 <__bss_start@@Base+0xcc8>
  407b47:	mov    eax,0x0
  407b4c:	jmp    407bfd <read_boolean_binary_expression@@Base+0x31b>
  407b51:	mov    rax,QWORD PTR [rip+0x98f8]        # 411450 <__bss_start@@Base+0xcc0>
  407b58:	inc    rax
  407b5b:	mov    QWORD PTR [rip+0x98ee],rax        # 411450 <__bss_start@@Base+0xcc0>
  407b62:	mov    rax,QWORD PTR [rbp-0x18]
  407b66:	mov    QWORD PTR [rbp-0x10],rax
  407b6a:	mov    edi,0x18
  407b6f:	call   4023f0 <malloc@plt>
  407b74:	mov    QWORD PTR [rbp-0x30],rax
  407b78:	mov    rax,QWORD PTR [rbp-0x10]
  407b7c:	mov    edx,DWORD PTR [rax+0x4]
  407b7f:	mov    rax,QWORD PTR [rbp-0x30]
  407b83:	mov    esi,edx
  407b85:	mov    rdi,rax
  407b88:	call   4062da <init_node_int@@Base>
  407b8d:	mov    rax,QWORD PTR [rip+0x98cc]        # 411460 <__bss_start@@Base+0xcd0>
  407b94:	inc    rax
  407b97:	mov    QWORD PTR [rip+0x98c2],rax        # 411460 <__bss_start@@Base+0xcd0>
  407b9e:	mov    rax,QWORD PTR [rbp-0x10]
  407ba2:	mov    rdi,rax
  407ba5:	call   405f67 <free_token_int_value@@Base>
  407baa:	mov    rax,QWORD PTR [rip+0x98b7]        # 411468 <__bss_start@@Base+0xcd8>
  407bb1:	inc    rax
  407bb4:	mov    QWORD PTR [rip+0x98ad],rax        # 411468 <__bss_start@@Base+0xcd8>
  407bbb:	mov    rax,QWORD PTR [rbp-0x30]
  407bbf:	mov    QWORD PTR [rbp-0x20],rax
  407bc3:	mov    edi,0x28
  407bc8:	call   4023f0 <malloc@plt>
  407bcd:	mov    QWORD PTR [rbp-0x38],rax
  407bd1:	mov    rcx,QWORD PTR [rbp-0x20]
  407bd5:	mov    rdx,QWORD PTR [rbp-0x28]
  407bd9:	mov    esi,DWORD PTR [rbp-0x3c]
  407bdc:	mov    rax,QWORD PTR [rbp-0x38]
  407be0:	mov    rdi,rax
  407be3:	call   40645f <init_node_boolean_operator@@Base>
  407be8:	mov    rax,QWORD PTR [rbp-0x38]
  407bec:	mov    rdx,QWORD PTR [rip+0x987d]        # 411470 <__bss_start@@Base+0xce0>
  407bf3:	inc    rdx
  407bf6:	mov    QWORD PTR [rip+0x9873],rdx        # 411470 <__bss_start@@Base+0xce0>
  407bfd:	leave  
  407bfe:	ret    

0000000000407bff <read_boolean_unary_expression@@Base>:
  407bff:	endbr64 
  407c03:	push   rbp
  407c04:	mov    rbp,rsp
  407c07:	sub    rsp,0x40
  407c0b:	mov    QWORD PTR [rbp-0x38],rdi
  407c0f:	mov    rax,QWORD PTR [rip+0x976a]        # 411380 <__bss_start@@Base+0xbf0>
  407c16:	inc    rax
  407c19:	mov    QWORD PTR [rip+0x9760],rax        # 411380 <__bss_start@@Base+0xbf0>
  407c20:	mov    QWORD PTR [rbp-0x28],0x0
  407c28:	mov    QWORD PTR [rbp-0x20],0x0
  407c30:	mov    QWORD PTR [rbp-0x18],0x0
  407c38:	mov    QWORD PTR [rbp-0x10],0x0
  407c40:	mov    QWORD PTR [rbp-0x8],0x0
  407c48:	mov    edi,0x28
  407c4d:	call   4023f0 <malloc@plt>
  407c52:	mov    QWORD PTR [rbp-0x28],rax
  407c56:	mov    rax,QWORD PTR [rbp-0x38]
  407c5a:	mov    rax,QWORD PTR [rax]
  407c5d:	mov    rdi,rax
  407c60:	call   402586 <next@@Base>
  407c65:	mov    QWORD PTR [rbp-0x10],rax
  407c69:	mov    rax,QWORD PTR [rip+0x9718]        # 411388 <__bss_start@@Base+0xbf8>
  407c70:	inc    rax
  407c73:	mov    QWORD PTR [rip+0x970e],rax        # 411388 <__bss_start@@Base+0xbf8>
  407c7a:	mov    rax,QWORD PTR [rbp-0x10]
  407c7e:	mov    eax,DWORD PTR [rax]
  407c80:	cmp    eax,0xc
  407c83:	je     407cbd <read_boolean_unary_expression@@Base+0xbe>
  407c85:	mov    rax,QWORD PTR [rip+0x9704]        # 411390 <__bss_start@@Base+0xc00>
  407c8c:	inc    rax
  407c8f:	mov    QWORD PTR [rip+0x96fa],rax        # 411390 <__bss_start@@Base+0xc00>
  407c96:	mov    rax,QWORD PTR [rbp-0x28]
  407c9a:	mov    rdi,rax
  407c9d:	call   406941 <free_node_boolean_operator@@Base>
  407ca2:	mov    rax,QWORD PTR [rip+0x96ef]        # 411398 <__bss_start@@Base+0xc08>
  407ca9:	inc    rax
  407cac:	mov    QWORD PTR [rip+0x96e5],rax        # 411398 <__bss_start@@Base+0xc08>
  407cb3:	mov    eax,0x0
  407cb8:	jmp    407def <read_boolean_unary_expression@@Base+0x1f0>
  407cbd:	mov    rax,QWORD PTR [rbp-0x10]
  407cc1:	mov    rdi,rax
  407cc4:	call   4069f2 <get_boolean_op_value@@Base>
  407cc9:	mov    DWORD PTR [rbp-0x2c],eax
  407ccc:	mov    rax,QWORD PTR [rip+0x96cd]        # 4113a0 <__bss_start@@Base+0xc10>
  407cd3:	inc    rax
  407cd6:	mov    QWORD PTR [rip+0x96c3],rax        # 4113a0 <__bss_start@@Base+0xc10>
  407cdd:	mov    rax,QWORD PTR [rbp-0x10]
  407ce1:	mov    rdi,rax
  407ce4:	call   406177 <free_token_boolean_op@@Base>
  407ce9:	mov    rax,QWORD PTR [rip+0x96b8]        # 4113a8 <__bss_start@@Base+0xc18>
  407cf0:	inc    rax
  407cf3:	mov    QWORD PTR [rip+0x96ae],rax        # 4113a8 <__bss_start@@Base+0xc18>
  407cfa:	mov    rax,QWORD PTR [rbp-0x38]
  407cfe:	mov    rax,QWORD PTR [rax]
  407d01:	mov    rdi,rax
  407d04:	call   402586 <next@@Base>
  407d09:	mov    QWORD PTR [rbp-0x10],rax
  407d0d:	mov    rax,QWORD PTR [rbp-0x10]
  407d11:	mov    eax,DWORD PTR [rax]
  407d13:	cmp    eax,0x1
  407d16:	je     407d50 <read_boolean_unary_expression@@Base+0x151>
  407d18:	mov    rax,QWORD PTR [rip+0x9691]        # 4113b0 <__bss_start@@Base+0xc20>
  407d1f:	inc    rax
  407d22:	mov    QWORD PTR [rip+0x9687],rax        # 4113b0 <__bss_start@@Base+0xc20>
  407d29:	mov    rax,QWORD PTR [rbp-0x28]
  407d2d:	mov    rdi,rax
  407d30:	call   406941 <free_node_boolean_operator@@Base>
  407d35:	mov    rax,QWORD PTR [rip+0x9684]        # 4113c0 <__bss_start@@Base+0xc30>
  407d3c:	inc    rax
  407d3f:	mov    QWORD PTR [rip+0x967a],rax        # 4113c0 <__bss_start@@Base+0xc30>
  407d46:	mov    eax,0x0
  407d4b:	jmp    407def <read_boolean_unary_expression@@Base+0x1f0>
  407d50:	mov    rax,QWORD PTR [rip+0x9661]        # 4113b8 <__bss_start@@Base+0xc28>
  407d57:	inc    rax
  407d5a:	mov    QWORD PTR [rip+0x9657],rax        # 4113b8 <__bss_start@@Base+0xc28>
  407d61:	mov    rax,QWORD PTR [rbp-0x10]
  407d65:	mov    QWORD PTR [rbp-0x8],rax
  407d69:	mov    edi,0x18
  407d6e:	call   4023f0 <malloc@plt>
  407d73:	mov    QWORD PTR [rbp-0x20],rax
  407d77:	mov    rax,QWORD PTR [rbp-0x8]
  407d7b:	mov    edx,DWORD PTR [rax+0x4]
  407d7e:	mov    rax,QWORD PTR [rbp-0x20]
  407d82:	mov    esi,edx
  407d84:	mov    rdi,rax
  407d87:	call   4062da <init_node_int@@Base>
  407d8c:	mov    rax,QWORD PTR [rip+0x9635]        # 4113c8 <__bss_start@@Base+0xc38>
  407d93:	inc    rax
  407d96:	mov    QWORD PTR [rip+0x962b],rax        # 4113c8 <__bss_start@@Base+0xc38>
  407d9d:	mov    rax,QWORD PTR [rbp-0x8]
  407da1:	mov    rdi,rax
  407da4:	call   405f67 <free_token_int_value@@Base>
  407da9:	mov    rax,QWORD PTR [rip+0x9620]        # 4113d0 <__bss_start@@Base+0xc40>
  407db0:	inc    rax
  407db3:	mov    QWORD PTR [rip+0x9616],rax        # 4113d0 <__bss_start@@Base+0xc40>
  407dba:	mov    rax,QWORD PTR [rbp-0x20]
  407dbe:	mov    QWORD PTR [rbp-0x18],rax
  407dc2:	mov    rdx,QWORD PTR [rbp-0x18]
  407dc6:	mov    esi,DWORD PTR [rbp-0x2c]
  407dc9:	mov    rax,QWORD PTR [rbp-0x28]
  407dcd:	mov    ecx,0x0
  407dd2:	mov    rdi,rax
  407dd5:	call   40645f <init_node_boolean_operator@@Base>
  407dda:	mov    rax,QWORD PTR [rbp-0x28]
  407dde:	mov    rdx,QWORD PTR [rip+0x95f3]        # 4113d8 <__bss_start@@Base+0xc48>
  407de5:	inc    rdx
  407de8:	mov    QWORD PTR [rip+0x95e9],rdx        # 4113d8 <__bss_start@@Base+0xc48>
  407def:	leave  
  407df0:	ret    
  407df1:	endbr64 
  407df5:	push   rbp
  407df6:	mov    rbp,rsp
  407df9:	lea    rdi,[rip+0x8900]        # 410700 <__data_start@@Base+0x15c0>
  407e00:	call   409f30 <__gcov_sort_n_vals@@Base+0x1700>
  407e05:	pop    rbp
  407e06:	ret    
  407e07:	endbr64 
  407e0b:	push   rbp
  407e0c:	mov    rbp,rsp
  407e0f:	call   409ea0 <__gcov_sort_n_vals@@Base+0x1670>
  407e14:	pop    rbp
  407e15:	ret    
  407e16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407e20:	endbr64 
  407e24:	test   esi,esi
  407e26:	je     407e60 <read_boolean_unary_expression@@Base+0x261>
  407e28:	push   rbp
  407e29:	lea    eax,[rsi-0x1]
  407e2c:	push   rbx
  407e2d:	lea    rbp,[rdi+rax*8+0x8]
  407e32:	mov    rbx,rdi
  407e35:	sub    rsp,0x8
  407e39:	nop    DWORD PTR [rax+0x0]
  407e40:	call   408510 <read_boolean_unary_expression@@Base+0x911>
  407e45:	add    QWORD PTR [rbx],rax
  407e48:	add    rbx,0x8
  407e4c:	cmp    rbx,rbp
  407e4f:	jne    407e40 <read_boolean_unary_expression@@Base+0x241>
  407e51:	add    rsp,0x8
  407e55:	pop    rbx
  407e56:	pop    rbp
  407e57:	ret    
  407e58:	nop    DWORD PTR [rax+rax*1+0x0]
  407e60:	ret    
  407e61:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407e6b:	nop    DWORD PTR [rax+rax*1+0x0]
  407e70:	push   rbp
  407e71:	lea    esi,[rdi*4+0x0]
  407e78:	mov    ebp,edi
  407e7a:	mov    edx,0x1
  407e7f:	push   rbx
  407e80:	sub    rsp,0x8
  407e84:	mov    rbx,0x411e40
  407e8b:	mov    rcx,QWORD PTR [rbx]
  407e8e:	lea    rdi,[rbx+0x20]
  407e92:	call   402470 <fwrite@plt>
  407e97:	cmp    rax,0x1
  407e9b:	je     407ea4 <read_boolean_unary_expression@@Base+0x2a5>
  407e9d:	mov    DWORD PTR [rbx+0x18],0x1
  407ea4:	add    DWORD PTR [rbx+0x8],ebp
  407ea7:	sub    DWORD PTR [rbx+0xc],ebp
  407eaa:	add    rsp,0x8
  407eae:	pop    rbx
  407eaf:	pop    rbp
  407eb0:	ret    
  407eb1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  407ebc:	nop    DWORD PTR [rax+0x0]
  407ec0:	push   rbp
  407ec1:	mov    ebp,edi
  407ec3:	push   rbx
  407ec4:	sub    rsp,0x8
  407ec8:	mov    rbx,0x411e40
  407ecf:	mov    eax,DWORD PTR [rbx+0xc]
  407ed2:	cmp    eax,0x3ff
  407ed7:	ja     407ef0 <read_boolean_unary_expression@@Base+0x2f1>
  407ed9:	add    ebp,eax
  407edb:	lea    rax,[rbx+rax*4+0x20]
  407ee0:	mov    DWORD PTR [rbx+0xc],ebp
  407ee3:	add    rsp,0x8
  407ee7:	pop    rbx
  407ee8:	pop    rbp
  407ee9:	ret    
  407eea:	nop    WORD PTR [rax+rax*1+0x0]
  407ef0:	mov    edi,0x400
  407ef5:	call   407e70 <read_boolean_unary_expression@@Base+0x271>
  407efa:	mov    eax,DWORD PTR [rbx+0xc]
  407efd:	test   eax,eax
  407eff:	je     407ed9 <read_boolean_unary_expression@@Base+0x2da>
  407f01:	mov    edx,DWORD PTR [rbx+0x1020]
  407f07:	mov    DWORD PTR [rbx+0x20],edx
  407f0a:	jmp    407ed9 <read_boolean_unary_expression@@Base+0x2da>
  407f0c:	nop    DWORD PTR [rax+0x0]
  407f10:	push   rbp
  407f11:	push   rbx
  407f12:	sub    rsp,0x8
  407f16:	mov    rbx,0x411e40
  407f1d:	mov    edx,DWORD PTR [rbx+0xc]
  407f20:	mov    eax,DWORD PTR [rbx+0x10]
  407f23:	mov    ecx,DWORD PTR [rbx+0x1c]
  407f26:	sub    eax,edx
  407f28:	test   ecx,ecx
  407f2a:	jle    407f88 <read_boolean_unary_expression@@Base+0x389>
  407f2c:	mov    ebp,edi
  407f2e:	cmp    eax,edi
  407f30:	jae    407f72 <read_boolean_unary_expression@@Base+0x373>
  407f32:	add    DWORD PTR [rbx+0x8],edx
  407f35:	test   eax,eax
  407f37:	je     407f40 <read_boolean_unary_expression@@Base+0x341>
  407f39:	mov    edx,DWORD PTR [rbx+rdx*4+0x20]
  407f3d:	mov    DWORD PTR [rbx+0x20],edx
  407f40:	mov    rcx,QWORD PTR [rbx]
  407f43:	lea    rdi,[rbx+rax*4+0x20]
  407f48:	mov    edx,0x1000
  407f4d:	mov    DWORD PTR [rbx+0x10],eax
  407f50:	mov    esi,0x1
  407f55:	mov    DWORD PTR [rbx+0xc],0x0
  407f5c:	call   4022f0 <fread@plt>
  407f61:	shr    rax,0x2
  407f65:	add    eax,DWORD PTR [rbx+0x10]
  407f68:	mov    DWORD PTR [rbx+0x10],eax
  407f6b:	cmp    eax,ebp
  407f6d:	jb     407f98 <read_boolean_unary_expression@@Base+0x399>
  407f6f:	mov    edx,DWORD PTR [rbx+0xc]
  407f72:	add    ebp,edx
  407f74:	mov    eax,edx
  407f76:	mov    DWORD PTR [rbx+0xc],ebp
  407f79:	lea    rax,[rbx+rax*4+0x20]
  407f7e:	add    rsp,0x8
  407f82:	pop    rbx
  407f83:	pop    rbp
  407f84:	ret    
  407f85:	nop    DWORD PTR [rax]
  407f88:	add    rsp,0x8
  407f8c:	xor    eax,eax
  407f8e:	pop    rbx
  407f8f:	pop    rbp
  407f90:	ret    
  407f91:	nop    DWORD PTR [rax+0x0]
  407f98:	sub    ebp,eax
  407f9a:	mov    DWORD PTR [rbx+0x10],0x0
  407fa1:	xor    eax,eax
  407fa3:	add    DWORD PTR [rbx+0x14],ebp
  407fa6:	jmp    407f7e <read_boolean_unary_expression@@Base+0x37f>
  407fa8:	nop    DWORD PTR [rax+rax*1+0x0]
  407fb0:	push   rbp
  407fb1:	mov    rbp,rdi
  407fb4:	push   rbx
  407fb5:	sub    rsp,0xd8
  407fbc:	mov    QWORD PTR [rsp+0x28],rsi
  407fc1:	mov    QWORD PTR [rsp+0x30],rdx
  407fc6:	mov    QWORD PTR [rsp+0x38],rcx
  407fcb:	mov    QWORD PTR [rsp+0x40],r8
  407fd0:	mov    QWORD PTR [rsp+0x48],r9
  407fd5:	test   al,al
  407fd7:	je     408010 <read_boolean_unary_expression@@Base+0x411>
  407fd9:	movaps XMMWORD PTR [rsp+0x50],xmm0
  407fde:	movaps XMMWORD PTR [rsp+0x60],xmm1
  407fe3:	movaps XMMWORD PTR [rsp+0x70],xmm2
  407fe8:	movaps XMMWORD PTR [rsp+0x80],xmm3
  407ff0:	movaps XMMWORD PTR [rsp+0x90],xmm4
  407ff8:	movaps XMMWORD PTR [rsp+0xa0],xmm5
  408000:	movaps XMMWORD PTR [rsp+0xb0],xmm6
  408008:	movaps XMMWORD PTR [rsp+0xc0],xmm7
  408010:	mov    rbx,0x411720
  408017:	lea    rax,[rsp+0xf0]
  40801f:	mov    DWORD PTR [rsp+0x8],0x8
  408027:	mov    QWORD PTR [rsp+0x10],rax
  40802c:	lea    rax,[rsp+0x20]
  408031:	mov    rdi,QWORD PTR [rbx]
  408034:	mov    DWORD PTR [rsp+0xc],0x30
  40803c:	mov    QWORD PTR [rsp+0x18],rax
  408041:	test   rdi,rdi
  408044:	je     408068 <read_boolean_unary_expression@@Base+0x469>
  408046:	lea    rcx,[rsp+0x8]
  40804b:	mov    rdx,rbp
  40804e:	mov    esi,0x1
  408053:	call   402280 <__vfprintf_chk@plt>
  408058:	add    rsp,0xd8
  40805f:	pop    rbx
  408060:	pop    rbp
  408061:	ret    
  408062:	nop    WORD PTR [rax+rax*1+0x0]
  408068:	lea    rdi,[rip+0x3947]        # 40b9b6 <_IO_stdin_used@@Base+0x9b6>
  40806f:	call   402260 <getenv@plt>
  408074:	test   rax,rax
  408077:	je     4080a8 <read_boolean_unary_expression@@Base+0x4a9>
  408079:	mov    rdi,rax
  40807c:	lea    rsi,[rip+0x3943]        # 40b9c6 <_IO_stdin_used@@Base+0x9c6>
  408083:	call   402450 <fopen@plt>
  408088:	mov    QWORD PTR [rbx],rax
  40808b:	mov    rdi,rax
  40808e:	test   rdi,rdi
  408091:	jne    408046 <read_boolean_unary_expression@@Base+0x447>
  408093:	mov    rax,QWORD PTR [rip+0x6f5e]        # 40eff8 <stderr@GLIBC_2.2.5>
  40809a:	mov    rdi,QWORD PTR [rax]
  40809d:	mov    QWORD PTR [rbx],rdi
  4080a0:	jmp    408046 <read_boolean_unary_expression@@Base+0x447>
  4080a2:	nop    WORD PTR [rax+rax*1+0x0]
  4080a8:	mov    rdi,QWORD PTR [rbx]
  4080ab:	jmp    40808e <read_boolean_unary_expression@@Base+0x48f>
  4080ad:	nop    DWORD PTR [rax]
  4080b0:	push   r14
  4080b2:	push   r13
  4080b4:	push   r12
  4080b6:	push   rbp
  4080b7:	push   rbx
  4080b8:	test   rsi,rsi
  4080bb:	je     408114 <read_boolean_unary_expression@@Base+0x515>
  4080bd:	mov    rbx,rsi
  4080c0:	mov    r13,QWORD PTR [rsi]
  4080c3:	test   edx,edx
  4080c5:	je     408100 <read_boolean_unary_expression@@Base+0x501>
  4080c7:	lea    eax,[rdx-0x1]
  4080ca:	lea    r14,[rdi+0x20]
  4080ce:	lea    rbp,[rdi+rax*8+0x28]
  4080d3:	xor    eax,eax
  4080d5:	nop    DWORD PTR [rax]
  4080d8:	cmp    QWORD PTR [r14],0x0
  4080dc:	je     4080f7 <read_boolean_unary_expression@@Base+0x4f8>
  4080de:	lea    r12d,[rax+0x1]
  4080e2:	add    rax,0x2
  4080e6:	shl    rax,0x4
  4080ea:	mov    rdi,QWORD PTR [rbx+rax*1+0x10]
  4080ef:	call   402270 <free@plt>
  4080f4:	mov    eax,r12d
  4080f7:	add    r14,0x8
  4080fb:	cmp    r14,rbp
  4080fe:	jne    4080d8 <read_boolean_unary_expression@@Base+0x4d9>
  408100:	mov    rdi,rbx
  408103:	call   402270 <free@plt>
  408108:	pop    rbx
  408109:	mov    rax,r13
  40810c:	pop    rbp
  40810d:	pop    r12
  40810f:	pop    r13
  408111:	pop    r14
  408113:	ret    
  408114:	xor    r13d,r13d
  408117:	jmp    408108 <read_boolean_unary_expression@@Base+0x509>
  408119:	nop    DWORD PTR [rax+0x0]
  408120:	sub    rsp,0x18
  408124:	bswap  esi
  408126:	mov    rax,rdx
  408129:	mov    DWORD PTR [rsp+0x8],esi
  40812d:	mov    DWORD PTR [rsp+0xc],0x2a343841
  408135:	test   rdx,rdx
  408138:	je     408160 <read_boolean_unary_expression@@Base+0x561>
  40813a:	lea    rcx,[rsp+0x8]
  40813f:	lea    rdx,[rsp+0xc]
  408144:	mov    rsi,rax
  408147:	xor    eax,eax
  408149:	lea    rdi,[rip+0x3940]        # 40ba90 <_IO_stdin_used@@Base+0xa90>
  408150:	call   407fb0 <read_boolean_unary_expression@@Base+0x3b1>
  408155:	xor    eax,eax
  408157:	add    rsp,0x18
  40815b:	ret    
  40815c:	nop    DWORD PTR [rax+0x0]
  408160:	mov    rax,QWORD PTR [rdi]
  408163:	jmp    40813a <read_boolean_unary_expression@@Base+0x53b>
  408165:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  408170:	endbr64 
  408174:	mov    rax,0x411e40
  40817b:	xor    edx,edx
  40817d:	xor    esi,esi
  40817f:	mov    QWORD PTR [rax+0x8],0x0
  408187:	mov    rdi,QWORD PTR [rax]
  40818a:	mov    DWORD PTR [rax+0x1c],0xffffffff
  408191:	jmp    402410 <fseek@plt>
  408196:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4081a0:	endbr64 
  4081a4:	push   r12
  4081a6:	xor    eax,eax
  4081a8:	push   rbp
  4081a9:	mov    rbp,rdi
  4081ac:	push   rbx
  4081ad:	sub    rsp,0x20
  4081b1:	mov    WORD PTR [rsp+0x2],ax
  4081b6:	mov    QWORD PTR [rsp+0x8],0x0
  4081bf:	mov    QWORD PTR [rsp+0x10],0x0
  4081c8:	call   402310 <getpid@plt>
  4081cd:	mov    rbx,0x411e40
  4081d4:	mov    edx,0x1
  4081d9:	mov    rdi,rbp
  4081dc:	mov    DWORD PTR [rsp+0x18],eax
  4081e0:	mov    esi,0x42
  4081e5:	movabs rax,0xffffffff00000000
  4081ef:	mov    QWORD PTR [rbx+0x10],rax
  4081f3:	xor    eax,eax
  4081f5:	mov    QWORD PTR [rbx+0x8],0x0
  4081fd:	mov    WORD PTR [rsp],dx
  408201:	mov    edx,0x1b6
  408206:	mov    DWORD PTR [rbx+0x18],0x0
  40820d:	call   402430 <open@plt>
  408212:	mov    ebp,eax
  408214:	xor    eax,eax
  408216:	test   ebp,ebp
  408218:	js     408268 <read_boolean_unary_expression@@Base+0x669>
  40821a:	mov    r12,rsp
  40821d:	xor    eax,eax
  40821f:	mov    rdx,r12
  408222:	mov    esi,0x7
  408227:	mov    edi,ebp
  408229:	call   402300 <fcntl@plt>
  40822e:	test   eax,eax
  408230:	je     40823c <read_boolean_unary_expression@@Base+0x63d>
  408232:	call   4022a0 <__errno_location@plt>
  408237:	cmp    DWORD PTR [rax],0x4
  40823a:	je     40821d <read_boolean_unary_expression@@Base+0x61e>
  40823c:	lea    rsi,[rip+0x3785]        # 40b9c8 <_IO_stdin_used@@Base+0x9c8>
  408243:	mov    edi,ebp
  408245:	call   402420 <fdopen@plt>
  40824a:	mov    QWORD PTR [rbx],rax
  40824d:	test   rax,rax
  408250:	je     408278 <read_boolean_unary_expression@@Base+0x679>
  408252:	mov    rdi,rax
  408255:	xor    esi,esi
  408257:	mov    DWORD PTR [rbx+0x1c],0x1
  40825e:	call   402350 <setbuf@plt>
  408263:	mov    eax,0x1
  408268:	add    rsp,0x20
  40826c:	pop    rbx
  40826d:	pop    rbp
  40826e:	pop    r12
  408270:	ret    
  408271:	nop    DWORD PTR [rax+0x0]
  408278:	mov    edi,ebp
  40827a:	call   4023a0 <close@plt>
  40827f:	add    rsp,0x20
  408283:	xor    eax,eax
  408285:	pop    rbx
  408286:	pop    rbp
  408287:	pop    r12
  408289:	ret    
  40828a:	nop    WORD PTR [rax+rax*1+0x0]
  408290:	endbr64 
  408294:	push   rbx
  408295:	mov    rbx,0x411e40
  40829c:	mov    rdi,QWORD PTR [rbx]
  40829f:	test   rdi,rdi
  4082a2:	je     4082be <read_boolean_unary_expression@@Base+0x6bf>
  4082a4:	mov    eax,DWORD PTR [rbx+0xc]
  4082a7:	test   eax,eax
  4082a9:	jne    4082d0 <read_boolean_unary_expression@@Base+0x6d1>
  4082ab:	call   402320 <fclose@plt>
  4082b0:	mov    QWORD PTR [rbx],0x0
  4082b7:	mov    DWORD PTR [rbx+0x10],0x0
  4082be:	mov    eax,DWORD PTR [rbx+0x18]
  4082c1:	mov    DWORD PTR [rbx+0x1c],0x0
  4082c8:	pop    rbx
  4082c9:	ret    
  4082ca:	nop    WORD PTR [rax+rax*1+0x0]
  4082d0:	mov    edx,DWORD PTR [rbx+0x1c]
  4082d3:	test   edx,edx
  4082d5:	jns    4082ab <read_boolean_unary_expression@@Base+0x6ac>
  4082d7:	mov    edi,eax
  4082d9:	call   407e70 <read_boolean_unary_expression@@Base+0x271>
  4082de:	mov    rdi,QWORD PTR [rbx]
  4082e1:	jmp    4082ab <read_boolean_unary_expression@@Base+0x6ac>
  4082e3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4082ee:	xchg   ax,ax
  4082f0:	endbr64 
  4082f4:	push   rbx
  4082f5:	mov    ebx,edi
  4082f7:	mov    edi,0x1
  4082fc:	call   407ec0 <read_boolean_unary_expression@@Base+0x2c1>
  408301:	mov    DWORD PTR [rax],ebx
  408303:	pop    rbx
  408304:	ret    
  408305:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  408310:	endbr64 
  408314:	push   rbx
  408315:	mov    rbx,rdi
  408318:	mov    edi,0x2
  40831d:	call   407ec0 <read_boolean_unary_expression@@Base+0x2c1>
  408322:	mov    QWORD PTR [rax],rbx
  408325:	pop    rbx
  408326:	ret    
  408327:	nop    WORD PTR [rax+rax*1+0x0]
  408330:	endbr64 
  408334:	push   rbp
  408335:	mov    ebp,edi
  408337:	mov    edi,0x2
  40833c:	push   rbx
  40833d:	mov    ebx,esi
  40833f:	sub    rsp,0x8
  408343:	call   407ec0 <read_boolean_unary_expression@@Base+0x2c1>
  408348:	mov    DWORD PTR [rax],ebp
  40834a:	mov    DWORD PTR [rax+0x4],ebx
  40834d:	add    rsp,0x8
  408351:	pop    rbx
  408352:	pop    rbp
  408353:	ret    
  408354:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40835f:	nop
  408360:	endbr64 
  408364:	push   r14
  408366:	xor    ecx,ecx
  408368:	push   r13
  40836a:	mov    r13d,edi
  40836d:	mov    edi,0x1
  408372:	push   r12
  408374:	xor    r12d,r12d
  408377:	push   rbp
  408378:	mov    rbp,rsi
  40837b:	push   rbx
  40837c:	lea    rbx,[rsi+0x28]
  408380:	mov    rax,rbx
  408383:	sub    rsp,0x20
  408387:	mov    QWORD PTR [rsp],0x0
  40838f:	mov    QWORD PTR [rsp+0x8],0x0
  408398:	mov    QWORD PTR [rsp+0x10],0x0
  4083a1:	mov    QWORD PTR [rsp+0x18],0x0
  4083aa:	nop    WORD PTR [rax+rax*1+0x0]
  4083b0:	mov    edx,DWORD PTR [rax]
  4083b2:	test   edx,edx
  4083b4:	je     4083c6 <read_boolean_unary_expression@@Base+0x7c7>
  4083b6:	mov    edx,ecx
  4083b8:	mov    esi,edi
  4083ba:	add    r12d,0x1
  4083be:	shr    edx,0x5
  4083c1:	shl    esi,cl
  4083c3:	or     DWORD PTR [rsp+rdx*4],esi
  4083c6:	add    ecx,0x1
  4083c9:	add    rax,0x18
  4083cd:	cmp    ecx,0xfc
  4083d3:	jne    4083b0 <read_boolean_unary_expression@@Base+0x7b1>
  4083d5:	mov    edi,0x2
  4083da:	lea    r14,[rsp+0x20]
  4083df:	call   407ec0 <read_boolean_unary_expression@@Base+0x2c1>
  4083e4:	lea    edx,[r12+r12*4+0x11]
  4083e9:	mov    edi,0x1
  4083ee:	mov    DWORD PTR [rax+0x4],edx
  4083f1:	mov    DWORD PTR [rax],r13d
  4083f4:	mov    r12d,DWORD PTR [rbp+0x0]
  4083f8:	call   407ec0 <read_boolean_unary_expression@@Base+0x2c1>
  4083fd:	mov    edi,0x1
  408402:	mov    DWORD PTR [rax],r12d
  408405:	mov    r12d,DWORD PTR [rbp+0x8]
  408409:	call   407ec0 <read_boolean_unary_expression@@Base+0x2c1>
  40840e:	mov    edi,0x1
  408413:	mov    DWORD PTR [rax],r12d
  408416:	mov    r12d,DWORD PTR [rbp+0xc]
  40841a:	call   407ec0 <read_boolean_unary_expression@@Base+0x2c1>
  40841f:	mov    edi,0x2
  408424:	mov    DWORD PTR [rax],r12d
  408427:	mov    r12,QWORD PTR [rbp+0x10]
  40842b:	call   407ec0 <read_boolean_unary_expression@@Base+0x2c1>
  408430:	mov    edi,0x2
  408435:	mov    QWORD PTR [rax],r12
  408438:	mov    r12,QWORD PTR [rbp+0x18]
  40843c:	call   407ec0 <read_boolean_unary_expression@@Base+0x2c1>
  408441:	mov    edi,0x2
  408446:	mov    QWORD PTR [rax],r12
  408449:	mov    r12,QWORD PTR [rbp+0x20]
  40844d:	call   407ec0 <read_boolean_unary_expression@@Base+0x2c1>
  408452:	mov    QWORD PTR [rax],r12
  408455:	mov    r12,rsp
  408458:	nop    DWORD PTR [rax+rax*1+0x0]
  408460:	mov    r13d,DWORD PTR [r12]
  408464:	mov    edi,0x1
  408469:	add    r12,0x4
  40846d:	call   407ec0 <read_boolean_unary_expression@@Base+0x2c1>
  408472:	mov    DWORD PTR [rax],r13d
  408475:	cmp    r14,r12
  408478:	jne    408460 <read_boolean_unary_expression@@Base+0x861>
  40847a:	lea    r12,[rbp+0x17c8]
  408481:	nop    DWORD PTR [rax+0x0]
  408488:	mov    ebp,DWORD PTR [rbx]
  40848a:	test   ebp,ebp
  40848c:	je     4084bc <read_boolean_unary_expression@@Base+0x8bd>
  40848e:	mov    edi,0x1
  408493:	call   407ec0 <read_boolean_unary_expression@@Base+0x2c1>
  408498:	mov    edi,0x2
  40849d:	mov    DWORD PTR [rax],ebp
  40849f:	mov    rbp,QWORD PTR [rbx+0x8]
  4084a3:	call   407ec0 <read_boolean_unary_expression@@Base+0x2c1>
  4084a8:	mov    edi,0x2
  4084ad:	mov    QWORD PTR [rax],rbp
  4084b0:	mov    rbp,QWORD PTR [rbx+0x10]
  4084b4:	call   407ec0 <read_boolean_unary_expression@@Base+0x2c1>
  4084b9:	mov    QWORD PTR [rax],rbp
  4084bc:	add    rbx,0x18
  4084c0:	cmp    rbx,r12
  4084c3:	jne    408488 <read_boolean_unary_expression@@Base+0x889>
  4084c5:	add    rsp,0x20
  4084c9:	pop    rbx
  4084ca:	pop    rbp
  4084cb:	pop    r12
  4084cd:	pop    r13
  4084cf:	pop    r14
  4084d1:	ret    
  4084d2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4084dd:	nop    DWORD PTR [rax]
  4084e0:	endbr64 
  4084e4:	sub    rsp,0x8
  4084e8:	mov    edi,0x1
  4084ed:	call   407f10 <read_boolean_unary_expression@@Base+0x311>
  4084f2:	test   rax,rax
  4084f5:	je     408500 <read_boolean_unary_expression@@Base+0x901>
  4084f7:	mov    eax,DWORD PTR [rax]
  4084f9:	add    rsp,0x8
  4084fd:	ret    
  4084fe:	xchg   ax,ax
  408500:	xor    eax,eax
  408502:	add    rsp,0x8
  408506:	ret    
  408507:	nop    WORD PTR [rax+rax*1+0x0]
  408510:	endbr64 
  408514:	sub    rsp,0x8
  408518:	mov    edi,0x2
  40851d:	call   407f10 <read_boolean_unary_expression@@Base+0x311>
  408522:	test   rax,rax
  408525:	je     408530 <read_boolean_unary_expression@@Base+0x931>
  408527:	mov    rax,QWORD PTR [rax]
  40852a:	add    rsp,0x8
  40852e:	ret    
  40852f:	nop
  408530:	xor    eax,eax
  408532:	add    rsp,0x8
  408536:	ret    
  408537:	nop    WORD PTR [rax+rax*1+0x0]
  408540:	endbr64 
  408544:	push   r15
  408546:	push   r14
  408548:	push   r13
  40854a:	push   r12
  40854c:	mov    r12,rdi
  40854f:	mov    edi,0x1
  408554:	push   rbp
  408555:	push   rbx
  408556:	sub    rsp,0x28
  40855a:	call   407f10 <read_boolean_unary_expression@@Base+0x311>
  40855f:	test   rax,rax
  408562:	je     4087af <read_boolean_unary_expression@@Base+0xbb0>
  408568:	mov    eax,DWORD PTR [rax]
  40856a:	mov    DWORD PTR [r12],eax
  40856e:	mov    edi,0x1
  408573:	call   407f10 <read_boolean_unary_expression@@Base+0x311>
  408578:	test   rax,rax
  40857b:	je     4087b6 <read_boolean_unary_expression@@Base+0xbb7>
  408581:	mov    eax,DWORD PTR [rax]
  408583:	mov    DWORD PTR [r12+0x8],eax
  408588:	mov    edi,0x1
  40858d:	call   407f10 <read_boolean_unary_expression@@Base+0x311>
  408592:	test   rax,rax
  408595:	je     4087bd <read_boolean_unary_expression@@Base+0xbbe>
  40859b:	mov    eax,DWORD PTR [rax]
  40859d:	mov    DWORD PTR [r12+0xc],eax
  4085a2:	mov    edi,0x2
  4085a7:	call   407f10 <read_boolean_unary_expression@@Base+0x311>
  4085ac:	test   rax,rax
  4085af:	je     4087c4 <read_boolean_unary_expression@@Base+0xbc5>
  4085b5:	mov    rax,QWORD PTR [rax]
  4085b8:	mov    QWORD PTR [r12+0x10],rax
  4085bd:	mov    edi,0x2
  4085c2:	call   407f10 <read_boolean_unary_expression@@Base+0x311>
  4085c7:	test   rax,rax
  4085ca:	je     4087cb <read_boolean_unary_expression@@Base+0xbcc>
  4085d0:	mov    rax,QWORD PTR [rax]
  4085d3:	mov    QWORD PTR [r12+0x18],rax
  4085d8:	mov    edi,0x2
  4085dd:	call   407f10 <read_boolean_unary_expression@@Base+0x311>
  4085e2:	test   rax,rax
  4085e5:	je     4087d2 <read_boolean_unary_expression@@Base+0xbd3>
  4085eb:	mov    rax,QWORD PTR [rax]
  4085ee:	lea    rdi,[r12+0x30]
  4085f3:	mov    QWORD PTR [r12+0x20],rax
  4085f8:	mov    eax,r12d
  4085fb:	mov    rbx,rsp
  4085fe:	and    rdi,0xfffffffffffffff8
  408602:	lea    r13,[rsp+0x20]
  408607:	xor    r15d,r15d
  40860a:	mov    QWORD PTR [r12+0x28],0x0
  408613:	mov    QWORD PTR [r12+0x17c0],0x0
  40861f:	sub    eax,edi
  408621:	lea    ecx,[rax+0x17c8]
  408627:	xor    eax,eax
  408629:	shr    ecx,0x3
  40862c:	rep stos QWORD PTR es:[rdi],rax
  40862f:	jmp    408651 <read_boolean_unary_expression@@Base+0xa52>
  408631:	nop    DWORD PTR [rax+0x0]
  408638:	mov    edi,DWORD PTR [rax]
  40863a:	add    rbx,0x4
  40863e:	mov    rbp,rdi
  408641:	call   409fe0 <__gcov_sort_n_vals@@Base+0x17b0>
  408646:	mov    DWORD PTR [rbx-0x4],ebp
  408649:	add    r15d,eax
  40864c:	cmp    r13,rbx
  40864f:	je     408670 <read_boolean_unary_expression@@Base+0xa71>
  408651:	mov    edi,0x1
  408656:	call   407f10 <read_boolean_unary_expression@@Base+0x311>
  40865b:	test   rax,rax
  40865e:	jne    408638 <read_boolean_unary_expression@@Base+0xa39>
  408660:	xor    ebp,ebp
  408662:	add    rbx,0x4
  408666:	mov    DWORD PTR [rbx-0x4],ebp
  408669:	cmp    r13,rbx
  40866c:	jne    408651 <read_boolean_unary_expression@@Base+0xa52>
  40866e:	xchg   ax,ax
  408670:	lea    r13d,[r15-0x1]
  408674:	xor    ebx,ebx
  408676:	xor    ebp,ebp
  408678:	xor    r14d,r14d
  40867b:	test   r15d,r15d
  40867e:	je     408757 <read_boolean_unary_expression@@Base+0xb58>
  408684:	nop    DWORD PTR [rax+0x0]
  408688:	test   ebx,ebx
  40868a:	je     40869e <read_boolean_unary_expression@@Base+0xa9f>
  40868c:	jmp    4086d6 <read_boolean_unary_expression@@Base+0xad7>
  40868e:	xchg   ax,ax
  408690:	mov    eax,ebp
  408692:	lea    ecx,[rbp+0x1]
  408695:	mov    ebx,DWORD PTR [rsp+rax*4]
  408698:	test   ebx,ebx
  40869a:	jne    4086bd <read_boolean_unary_expression@@Base+0xabe>
  40869c:	mov    ebp,ecx
  40869e:	cmp    ebp,0x7
  4086a1:	jbe    408690 <read_boolean_unary_expression@@Base+0xa91>
  4086a3:	lea    rdi,[rip+0x341e]        # 40bac8 <_IO_stdin_used@@Base+0xac8>
  4086aa:	xor    eax,eax
  4086ac:	call   407fb0 <read_boolean_unary_expression@@Base+0x3b1>
  4086b1:	mov    eax,ebp
  4086b3:	lea    ecx,[rbp+0x1]
  4086b6:	mov    ebx,DWORD PTR [rsp+rax*4]
  4086b9:	test   ebx,ebx
  4086bb:	je     40869c <read_boolean_unary_expression@@Base+0xa9d>
  4086bd:	mov    r14d,ebp
  4086c0:	mov    ebp,ecx
  4086c2:	shl    r14d,0x5
  4086c6:	test   bl,0x1
  4086c9:	jne    4086db <read_boolean_unary_expression@@Base+0xadc>
  4086cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4086d0:	add    r14d,0x1
  4086d4:	shr    ebx,1
  4086d6:	test   bl,0x1
  4086d9:	je     4086d0 <read_boolean_unary_expression@@Base+0xad1>
  4086db:	cmp    r14d,0xfb
  4086e2:	ja     408770 <read_boolean_unary_expression@@Base+0xb71>
  4086e8:	mov    edi,0x1
  4086ed:	call   407f10 <read_boolean_unary_expression@@Base+0x311>
  4086f2:	test   rax,rax
  4086f5:	je     408791 <read_boolean_unary_expression@@Base+0xb92>
  4086fb:	mov    ecx,DWORD PTR [rax]
  4086fd:	mov    r15d,r14d
  408700:	mov    edi,0x2
  408705:	lea    rax,[r15+r15*2]
  408709:	mov    DWORD PTR [r12+rax*8+0x28],ecx
  40870e:	call   407f10 <read_boolean_unary_expression@@Base+0x311>
  408713:	test   rax,rax
  408716:	je     4087a8 <read_boolean_unary_expression@@Base+0xba9>
  40871c:	mov    rcx,QWORD PTR [rax]
  40871f:	lea    rax,[r15+r15*2]
  408723:	mov    edi,0x2
  408728:	mov    QWORD PTR [r12+rax*8+0x30],rcx
  40872d:	call   407f10 <read_boolean_unary_expression@@Base+0x311>
  408732:	test   rax,rax
  408735:	je     4087a0 <read_boolean_unary_expression@@Base+0xba1>
  408737:	mov    rcx,QWORD PTR [rax]
  40873a:	lea    rax,[r15+r15*2]
  40873e:	sub    r13d,0x1
  408742:	shr    ebx,1
  408744:	add    r14d,0x1
  408748:	mov    QWORD PTR [r12+rax*8+0x38],rcx
  40874d:	cmp    r13d,0xffffffff
  408751:	jne    408688 <read_boolean_unary_expression@@Base+0xa89>
  408757:	add    rsp,0x28
  40875b:	pop    rbx
  40875c:	pop    rbp
  40875d:	pop    r12
  40875f:	pop    r13
  408761:	pop    r14
  408763:	pop    r15
  408765:	ret    
  408766:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408770:	lea    rdi,[rip+0x3391]        # 40bb08 <_IO_stdin_used@@Base+0xb08>
  408777:	xor    eax,eax
  408779:	call   407fb0 <read_boolean_unary_expression@@Base+0x3b1>
  40877e:	mov    edi,0x1
  408783:	call   407f10 <read_boolean_unary_expression@@Base+0x311>
  408788:	test   rax,rax
  40878b:	jne    4086fb <read_boolean_unary_expression@@Base+0xafc>
  408791:	xor    ecx,ecx
  408793:	jmp    4086fd <read_boolean_unary_expression@@Base+0xafe>
  408798:	nop    DWORD PTR [rax+rax*1+0x0]
  4087a0:	xor    ecx,ecx
  4087a2:	jmp    40873a <read_boolean_unary_expression@@Base+0xb3b>
  4087a4:	nop    DWORD PTR [rax+0x0]
  4087a8:	xor    ecx,ecx
  4087aa:	jmp    40871f <read_boolean_unary_expression@@Base+0xb20>
  4087af:	xor    eax,eax
  4087b1:	jmp    40856a <read_boolean_unary_expression@@Base+0x96b>
  4087b6:	xor    eax,eax
  4087b8:	jmp    408583 <read_boolean_unary_expression@@Base+0x984>
  4087bd:	xor    eax,eax
  4087bf:	jmp    40859d <read_boolean_unary_expression@@Base+0x99e>
  4087c4:	xor    eax,eax
  4087c6:	jmp    4085b8 <read_boolean_unary_expression@@Base+0x9b9>
  4087cb:	xor    eax,eax
  4087cd:	jmp    4085d3 <read_boolean_unary_expression@@Base+0x9d4>
  4087d2:	xor    eax,eax
  4087d4:	jmp    4085ee <read_boolean_unary_expression@@Base+0x9ef>
  4087d9:	nop    DWORD PTR [rax+0x0]
  4087e0:	endbr64 
  4087e4:	push   rbp
  4087e5:	push   rbx
  4087e6:	mov    ebx,edi
  4087e8:	sub    rsp,0x8
  4087ec:	mov    rbp,0x411e40
  4087f3:	mov    edi,DWORD PTR [rbp+0xc]
  4087f6:	test   edi,edi
  4087f8:	jne    408828 <read_boolean_unary_expression@@Base+0xc29>
  4087fa:	mov    rdi,QWORD PTR [rbp+0x0]
  4087fe:	lea    esi,[rbx*4+0x0]
  408805:	xor    edx,edx
  408807:	call   402410 <fseek@plt>
  40880c:	mov    rdi,QWORD PTR [rbp+0x0]
  408810:	call   4023c0 <ftell@plt>
  408815:	sar    rax,0x2
  408819:	mov    DWORD PTR [rbp+0x8],eax
  40881c:	add    rsp,0x8
  408820:	pop    rbx
  408821:	pop    rbp
  408822:	ret    
  408823:	nop    DWORD PTR [rax+rax*1+0x0]
  408828:	call   407e70 <read_boolean_unary_expression@@Base+0x271>
  40882d:	jmp    4087fa <read_boolean_unary_expression@@Base+0xbfb>
  40882f:	nop

0000000000408830 <__gcov_sort_n_vals@@Base>:
  408830:	endbr64 
  408834:	cmp    esi,0x2
  408837:	jle    4088d1 <__gcov_sort_n_vals@@Base+0xa1>
  40883d:	sub    esi,0x3
  408840:	push   rbp
  408841:	lea    r9,[rdi+0x8]
  408845:	mov    r11,0xfffffffffffffff0
  40884c:	shr    esi,1
  40884e:	push   rbx
  40884f:	xor    r10d,r10d
  408852:	mov    eax,esi
  408854:	lea    rbp,[rax+rax*1+0x2]
  408859:	nop    DWORD PTR [rax+0x0]
  408860:	mov    rbx,QWORD PTR [r9+0x8]
  408864:	mov    rsi,QWORD PTR [r9+0x10]
  408868:	cmp    rsi,QWORD PTR [r9]
  40886b:	jle    4088cc <__gcov_sort_n_vals@@Base+0x9c>
  40886d:	mov    eax,r10d
  408870:	lea    rcx,[r10-0x2]
  408874:	lea    r8,[r9+r11*1]
  408878:	shr    eax,1
  40887a:	add    rax,rax
  40887d:	sub    rcx,rax
  408880:	mov    rax,r10
  408883:	jmp    40888f <__gcov_sort_n_vals@@Base+0x5f>
  408885:	nop    DWORD PTR [rax]
  408888:	cmp    rsi,QWORD PTR [rdi+rax*8+0x8]
  40888d:	jle    4088ab <__gcov_sort_n_vals@@Base+0x7b>
  40888f:	mov    rdx,QWORD PTR [rdi+rax*8]
  408893:	mov    QWORD PTR [rdi+rax*8+0x10],rdx
  408898:	mov    rdx,QWORD PTR [r8+rax*8+0x10]
  40889d:	mov    QWORD PTR [rdi+rax*8+0x18],rdx
  4088a2:	sub    rax,0x2
  4088a6:	cmp    rax,rcx
  4088a9:	jne    408888 <__gcov_sort_n_vals@@Base+0x58>
  4088ab:	add    rax,0x2
  4088af:	add    r10,0x2
  4088b3:	add    r9,0x10
  4088b7:	sub    r11,0x10
  4088bb:	mov    QWORD PTR [rdi+rax*8],rbx
  4088bf:	mov    QWORD PTR [rdi+rax*8+0x8],rsi
  4088c4:	cmp    rbp,r10
  4088c7:	jne    408860 <__gcov_sort_n_vals@@Base+0x30>
  4088c9:	pop    rbx
  4088ca:	pop    rbp
  4088cb:	ret    
  4088cc:	mov    rax,r10
  4088cf:	jmp    4088ab <__gcov_sort_n_vals@@Base+0x7b>
  4088d1:	ret    
  4088d2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4088dd:	nop    DWORD PTR [rax]
  4088e0:	push   r15
  4088e2:	push   r14
  4088e4:	push   r13
  4088e6:	push   r12
  4088e8:	push   rbp
  4088e9:	push   rbx
  4088ea:	lea    r11,[rsp-0x4000]
  4088f2:	sub    rsp,0x1000
  4088f9:	or     QWORD PTR [rsp],0x0
  4088fe:	cmp    rsp,r11
  408901:	jne    4088f2 <__gcov_sort_n_vals@@Base+0xc2>
  408903:	sub    rsp,0x7e8
  40890a:	mov    ecx,0x2f9
  40890f:	xor    eax,eax
  408911:	mov    r13,rdi
  408914:	lea    rdi,[rsp+0x70]
  408919:	mov    DWORD PTR [rsp+0x3c],esi
  40891d:	mov    QWORD PTR [rsp+0x8],rdi
  408922:	rep stos QWORD PTR es:[rdi],rax
  408925:	test   r13,r13
  408928:	je     409d30 <__gcov_sort_n_vals@@Base+0x1500>
  40892e:	mov    DWORD PTR [rsp+0x10],0x0
  408936:	mov    rbx,r13
  408939:	xor    ebp,ebp
  40893b:	xor    r12d,r12d
  40893e:	mov    QWORD PTR [rsp+0x18],r13
  408943:	nop    DWORD PTR [rax+rax*1+0x0]
  408948:	mov    rdi,QWORD PTR [rbx+0x18]
  40894c:	call   402330 <strlen@plt>
  408951:	mov    ecx,DWORD PTR [rbx+0x10]
  408954:	mov    edx,0x20
  408959:	cmp    rbp,rax
  40895c:	cmovb  rbp,rax
  408960:	mov    eax,ecx
  408962:	add    ecx,ecx
  408964:	xor    eax,r12d
  408967:	add    r12d,r12d
  40896a:	sar    eax,0x1f
  40896d:	and    eax,0x4c11db7
  408972:	xor    r12d,eax
  408975:	sub    edx,0x1
  408978:	jne    408960 <__gcov_sort_n_vals@@Base+0x130>
  40897a:	mov    esi,DWORD PTR [rbx+0x68]
  40897d:	mov    edx,0x20
  408982:	mov    ecx,esi
  408984:	nop    DWORD PTR [rax+0x0]
  408988:	mov    eax,r12d
  40898b:	add    r12d,r12d
  40898e:	xor    eax,ecx
  408990:	add    ecx,ecx
  408992:	sar    eax,0x1f
  408995:	and    eax,0x4c11db7
  40899a:	xor    r12d,eax
  40899d:	sub    edx,0x1
  4089a0:	jne    408988 <__gcov_sort_n_vals@@Base+0x158>
  4089a2:	test   esi,esi
  4089a4:	je     408b27 <__gcov_sort_n_vals@@Base+0x2f7>
  4089aa:	mov    rax,QWORD PTR [rbx+0x70]
  4089ae:	lea    edx,[rsi-0x1]
  4089b1:	mov    edi,DWORD PTR [rsp+0x10]
  4089b5:	xor    r11d,r11d
  4089b8:	mov    r8,QWORD PTR [rsp+0x80]
  4089c0:	mov    r9,QWORD PTR [rsp+0x88]
  4089c8:	xor    r10d,r10d
  4089cb:	xor    r14d,r14d
  4089ce:	lea    rcx,[rax+0x8]
  4089d2:	lea    r13,[rcx+rdx*8]
  4089d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4089e0:	mov    rax,QWORD PTR [rax]
  4089e3:	xor    esi,esi
  4089e5:	test   rax,rax
  4089e8:	je     4089f5 <__gcov_sort_n_vals@@Base+0x1c5>
  4089ea:	cmp    QWORD PTR [rax],rbx
  4089ed:	je     408af0 <__gcov_sort_n_vals@@Base+0x2c0>
  4089f3:	xor    eax,eax
  4089f5:	mov    r15d,0x20
  4089fb:	nop    DWORD PTR [rax+rax*1+0x0]
  408a00:	mov    edx,r12d
  408a03:	add    r12d,r12d
  408a06:	xor    edx,esi
  408a08:	add    esi,esi
  408a0a:	sar    edx,0x1f
  408a0d:	and    edx,0x4c11db7
  408a13:	xor    r12d,edx
  408a16:	sub    r15d,0x1
  408a1a:	jne    408a00 <__gcov_sort_n_vals@@Base+0x1d0>
  408a1c:	xor    esi,esi
  408a1e:	test   rax,rax
  408a21:	je     408a26 <__gcov_sort_n_vals@@Base+0x1f6>
  408a23:	mov    esi,DWORD PTR [rax+0xc]
  408a26:	mov    r15d,0x20
  408a2c:	nop    DWORD PTR [rax+0x0]
  408a30:	mov    edx,esi
  408a32:	add    esi,esi
  408a34:	xor    edx,r12d
  408a37:	add    r12d,r12d
  408a3a:	sar    edx,0x1f
  408a3d:	and    edx,0x4c11db7
  408a43:	xor    r12d,edx
  408a46:	sub    r15d,0x1
  408a4a:	jne    408a30 <__gcov_sort_n_vals@@Base+0x200>
  408a4c:	test   rax,rax
  408a4f:	je     408adc <__gcov_sort_n_vals@@Base+0x2ac>
  408a55:	cmp    QWORD PTR [rbx+0x20],0x0
  408a5a:	je     408adc <__gcov_sort_n_vals@@Base+0x2ac>
  408a60:	mov    esi,DWORD PTR [rax+0x18]
  408a63:	mov    r14d,0x20
  408a69:	add    edi,esi
  408a6b:	mov    r15d,esi
  408a6e:	xchg   ax,ax
  408a70:	mov    edx,r15d
  408a73:	add    r15d,r15d
  408a76:	xor    edx,r12d
  408a79:	add    r12d,r12d
  408a7c:	sar    edx,0x1f
  408a7f:	and    edx,0x4c11db7
  408a85:	xor    r12d,edx
  408a88:	sub    r14d,0x1
  408a8c:	jne    408a70 <__gcov_sort_n_vals@@Base+0x240>
  408a8e:	test   esi,esi
  408a90:	je     408ed0 <__gcov_sort_n_vals@@Base+0x6a0>
  408a96:	mov    rdx,QWORD PTR [rax+0x20]
  408a9a:	sub    esi,0x1
  408a9d:	lea    rax,[rdx+0x8]
  408aa1:	lea    rsi,[rax+rsi*8]
  408aa5:	jmp    408ab4 <__gcov_sort_n_vals@@Base+0x284>
  408aa7:	nop    WORD PTR [rax+rax*1+0x0]
  408ab0:	add    rax,0x8
  408ab4:	mov    rdx,QWORD PTR [rdx]
  408ab7:	add    r8,rdx
  408aba:	cmp    rdx,r9
  408abd:	jle    408ac8 <__gcov_sort_n_vals@@Base+0x298>
  408abf:	mov    r9,rdx
  408ac2:	mov    r11d,0x1
  408ac8:	mov    rdx,rax
  408acb:	cmp    rax,rsi
  408ace:	jne    408ab0 <__gcov_sort_n_vals@@Base+0x280>
  408ad0:	mov    r10d,0x1
  408ad6:	mov    r14d,0x1
  408adc:	mov    rax,rcx
  408adf:	cmp    rcx,r13
  408ae2:	je     408b00 <__gcov_sort_n_vals@@Base+0x2d0>
  408ae4:	add    rcx,0x8
  408ae8:	jmp    4089e0 <__gcov_sort_n_vals@@Base+0x1b0>
  408aed:	nop    DWORD PTR [rax]
  408af0:	mov    esi,DWORD PTR [rax+0x10]
  408af3:	jmp    4089f5 <__gcov_sort_n_vals@@Base+0x1c5>
  408af8:	nop    DWORD PTR [rax+rax*1+0x0]
  408b00:	test   r14b,r14b
  408b03:	je     408b0d <__gcov_sort_n_vals@@Base+0x2dd>
  408b05:	mov    DWORD PTR [rsp+0x78],edi
  408b09:	mov    DWORD PTR [rsp+0x10],edi
  408b0d:	test   r10b,r10b
  408b10:	je     408b1a <__gcov_sort_n_vals@@Base+0x2ea>
  408b12:	mov    QWORD PTR [rsp+0x80],r8
  408b1a:	test   r11b,r11b
  408b1d:	je     408b27 <__gcov_sort_n_vals@@Base+0x2f7>
  408b1f:	mov    QWORD PTR [rsp+0x88],r9
  408b27:	mov    rbx,QWORD PTR [rbx+0x8]
  408b2b:	test   rbx,rbx
  408b2e:	jne    408948 <__gcov_sort_n_vals@@Base+0x118>
  408b34:	mov    r14d,DWORD PTR [rsp+0x10]
  408b39:	mov    DWORD PTR [rsp+0x48],r12d
  408b3e:	add    rbp,0x2
  408b42:	mov    r13,QWORD PTR [rsp+0x18]
  408b47:	test   r14d,r14d
  408b4a:	je     408c8d <__gcov_sort_n_vals@@Base+0x45d>
  408b50:	mov    rbx,QWORD PTR [rsp+0x8]
  408b55:	mov    rcx,QWORD PTR [rsp+0x88]
  408b5d:	lea    rax,[rbx+0x28]
  408b61:	lea    rdx,[rbx+0x17c8]
  408b68:	nop    DWORD PTR [rax+rax*1+0x0]
  408b70:	mov    DWORD PTR [rax],0x0
  408b76:	add    rax,0x18
  408b7a:	mov    QWORD PTR [rax-0x10],rcx
  408b7e:	mov    QWORD PTR [rax-0x8],0x0
  408b86:	cmp    rdx,rax
  408b89:	jne    408b70 <__gcov_sort_n_vals@@Base+0x340>
  408b8b:	mov    rax,QWORD PTR [rsp+0x8]
  408b90:	mov    r8,r13
  408b93:	mov    ebx,0x4000003e
  408b98:	mov    r14d,0x3f
  408b9e:	mov    r12d,0x3d
  408ba4:	lea    r11,[rax+0x28]
  408ba8:	nop    DWORD PTR [rax+rax*1+0x0]
  408bb0:	cmp    QWORD PTR [r8+0x20],0x0
  408bb5:	je     408c80 <__gcov_sort_n_vals@@Base+0x450>
  408bbb:	mov    edx,DWORD PTR [r8+0x68]
  408bbf:	test   edx,edx
  408bc1:	je     408c80 <__gcov_sort_n_vals@@Base+0x450>
  408bc7:	mov    rax,QWORD PTR [r8+0x70]
  408bcb:	sub    edx,0x1
  408bce:	lea    rdi,[rax+0x8]
  408bd2:	lea    r10,[rdi+rdx*8]
  408bd6:	jmp    408bf0 <__gcov_sort_n_vals@@Base+0x3c0>
  408bd8:	nop    DWORD PTR [rax+rax*1+0x0]
  408be0:	mov    rax,rdi
  408be3:	cmp    r10,rdi
  408be6:	je     408c80 <__gcov_sort_n_vals@@Base+0x450>
  408bec:	add    rdi,0x8
  408bf0:	mov    rax,QWORD PTR [rax]
  408bf3:	test   rax,rax
  408bf6:	je     408be0 <__gcov_sort_n_vals@@Base+0x3b0>
  408bf8:	cmp    r8,QWORD PTR [rax]
  408bfb:	jne    408be0 <__gcov_sort_n_vals@@Base+0x3b0>
  408bfd:	mov    edx,DWORD PTR [rax+0x18]
  408c00:	test   edx,edx
  408c02:	je     408be0 <__gcov_sort_n_vals@@Base+0x3b0>
  408c04:	mov    rax,QWORD PTR [rax+0x20]
  408c08:	sub    edx,0x1
  408c0b:	lea    rsi,[rax+0x8]
  408c0f:	lea    r9,[rsi+rdx*8]
  408c13:	jmp    408c6e <__gcov_sort_n_vals@@Base+0x43e>
  408c15:	nop    DWORD PTR [rax]
  408c18:	bsr    rdx,rax
  408c1c:	mov    ecx,r14d
  408c1f:	xor    rdx,0x3f
  408c23:	sub    ecx,edx
  408c25:	cmp    ecx,0x1
  408c28:	jbe    408c76 <__gcov_sort_n_vals@@Base+0x446>
  408c2a:	mov    ecx,r12d
  408c2d:	mov    r15,rax
  408c30:	sub    ecx,edx
  408c32:	shr    r15,cl
  408c35:	mov    rcx,r15
  408c38:	mov    r15d,ebx
  408c3b:	and    ecx,0x3
  408c3e:	sub    r15d,edx
  408c41:	lea    edx,[rcx+r15*4]
  408c45:	lea    rdx,[rdx+rdx*2]
  408c49:	lea    rdx,[r11+rdx*8]
  408c4d:	add    DWORD PTR [rdx],0x1
  408c50:	add    QWORD PTR [rdx+0x10],rax
  408c54:	cmp    rax,QWORD PTR [rdx+0x8]
  408c58:	jge    408c5e <__gcov_sort_n_vals@@Base+0x42e>
  408c5a:	mov    QWORD PTR [rdx+0x8],rax
  408c5e:	mov    rax,rsi
  408c61:	cmp    r9,rsi
  408c64:	je     408be0 <__gcov_sort_n_vals@@Base+0x3b0>
  408c6a:	add    rsi,0x8
  408c6e:	mov    rax,QWORD PTR [rax]
  408c71:	test   rax,rax
  408c74:	jne    408c18 <__gcov_sort_n_vals@@Base+0x3e8>
  408c76:	mov    edx,eax
  408c78:	jmp    408c45 <__gcov_sort_n_vals@@Base+0x415>
  408c7a:	nop    WORD PTR [rax+rax*1+0x0]
  408c80:	mov    r8,QWORD PTR [r8+0x8]
  408c84:	test   r8,r8
  408c87:	jne    408bb0 <__gcov_sort_n_vals@@Base+0x380>
  408c8d:	lea    rdi,[rip+0x2d86]        # 40ba1a <_IO_stdin_used@@Base+0xa1a>
  408c94:	call   402260 <getenv@plt>
  408c99:	test   rax,rax
  408c9c:	je     409848 <__gcov_sort_n_vals@@Base+0x1018>
  408ca2:	xor    esi,esi
  408ca4:	mov    edx,0xa
  408ca9:	mov    rdi,rax
  408cac:	call   4023d0 <strtol@plt>
  408cb1:	mov    edx,0x0
  408cb6:	lea    rdi,[rip+0x2d6f]        # 40ba2c <_IO_stdin_used@@Base+0xa2c>
  408cbd:	test   eax,eax
  408cbf:	cmovns edx,eax
  408cc2:	mov    DWORD PTR [rsp+0x38],edx
  408cc6:	call   402260 <getenv@plt>
  408ccb:	mov    rbx,rax
  408cce:	test   rax,rax
  408cd1:	je     409890 <__gcov_sort_n_vals@@Base+0x1060>
  408cd7:	mov    rdi,rax
  408cda:	call   402330 <strlen@plt>
  408cdf:	test   rax,rax
  408ce2:	je     409890 <__gcov_sort_n_vals@@Base+0x1060>
  408ce8:	lea    rsi,[rax-0x1]
  408cec:	cmp    BYTE PTR [rbx+rax*1-0x1],0x2f
  408cf1:	mov    QWORD PTR [rsp+0x30],rsi
  408cf6:	je     409885 <__gcov_sort_n_vals@@Base+0x1055>
  408cfc:	mov    QWORD PTR [rsp+0x30],rax
  408d01:	mov    r14,QWORD PTR [rsp+0x30]
  408d06:	lea    rdi,[rbp+r14*1+0x0]
  408d0b:	call   4023f0 <malloc@plt>
  408d10:	mov    rdx,r14
  408d13:	mov    rsi,rbx
  408d16:	mov    rdi,rax
  408d19:	mov    QWORD PTR [rsp+0x10],rax
  408d1e:	call   4023e0 <memcpy@plt>
  408d23:	test   r13,r13
  408d26:	je     408eb0 <__gcov_sort_n_vals@@Base+0x680>
  408d2c:	nop    DWORD PTR [rax+0x0]
  408d30:	mov    QWORD PTR [rip+0x89f5],0x0        # 411730 <__gcov_error_file@@Base+0x10>
  408d3b:	cmp    QWORD PTR [r13+0x60],0x0
  408d40:	mov    QWORD PTR [rip+0x89dd],0x0        # 411728 <__gcov_error_file@@Base+0x8>
  408d4b:	je     408d98 <__gcov_sort_n_vals@@Base+0x568>
  408d4d:	mov    r11d,DWORD PTR [r13+0x68]
  408d51:	test   r11d,r11d
  408d54:	je     408d98 <__gcov_sort_n_vals@@Base+0x568>
  408d56:	xor    r15d,r15d
  408d59:	mov    ebx,0x38e38e39
  408d5e:	xchg   ax,ax
  408d60:	mov    rax,QWORD PTR [r13+0x70]
  408d64:	mov    rcx,QWORD PTR [rax+r15*8]
  408d68:	xor    eax,eax
  408d6a:	add    rcx,0x18
  408d6e:	cmp    QWORD PTR [r13+rax*8+0x20],0x0
  408d74:	je     408d84 <__gcov_sort_n_vals@@Base+0x554>
  408d76:	cmp    rax,0x8
  408d7a:	je     408ee0 <__gcov_sort_n_vals@@Base+0x6b0>
  408d80:	add    rcx,0x10
  408d84:	add    rax,0x1
  408d88:	cmp    rax,0x9
  408d8c:	jne    408d6e <__gcov_sort_n_vals@@Base+0x53e>
  408d8e:	add    r15,0x1
  408d92:	cmp    DWORD PTR [r13+0x68],r15d
  408d96:	jne    408d60 <__gcov_sort_n_vals@@Base+0x530>
  408d98:	mov    ebx,DWORD PTR [rsp+0x38]
  408d9c:	mov    rdi,QWORD PTR [rsp+0x10]
  408da1:	mov    rsi,QWORD PTR [r13+0x18]
  408da5:	add    rdi,QWORD PTR [rsp+0x30]
  408daa:	test   ebx,ebx
  408dac:	je     408de9 <__gcov_sort_n_vals@@Base+0x5b9>
  408dae:	movzx  eax,BYTE PTR [rsi]
  408db1:	mov    rdx,rsi
  408db4:	cmp    al,0x2f
  408db6:	jne    408dc0 <__gcov_sort_n_vals@@Base+0x590>
  408db8:	movzx  eax,BYTE PTR [rsi+0x1]
  408dbc:	lea    rdx,[rsi+0x1]
  408dc0:	mov    ecx,DWORD PTR [rsp+0x38]
  408dc4:	jmp    408de5 <__gcov_sort_n_vals@@Base+0x5b5>
  408dc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408dd0:	cmp    al,0x2f
  408dd2:	jne    408dda <__gcov_sort_n_vals@@Base+0x5aa>
  408dd4:	sub    ecx,0x1
  408dd7:	mov    rsi,rdx
  408dda:	add    rdx,0x1
  408dde:	movzx  eax,BYTE PTR [rdx]
  408de1:	test   ecx,ecx
  408de3:	je     408de9 <__gcov_sort_n_vals@@Base+0x5b9>
  408de5:	test   al,al
  408de7:	jne    408dd0 <__gcov_sort_n_vals@@Base+0x5a0>
  408de9:	cmp    QWORD PTR [rsp+0x30],0x0
  408def:	je     408dfd <__gcov_sort_n_vals@@Base+0x5cd>
  408df1:	cmp    BYTE PTR [rsi],0x2f
  408df4:	je     408dfd <__gcov_sort_n_vals@@Base+0x5cd>
  408df6:	mov    BYTE PTR [rdi],0x2f
  408df9:	add    rdi,0x1
  408dfd:	call   4022c0 <strcpy@plt>
  408e02:	mov    rdi,QWORD PTR [rsp+0x10]
  408e07:	call   4081a0 <read_boolean_unary_expression@@Base+0x5a1>
  408e0c:	test   eax,eax
  408e0e:	je     409560 <__gcov_sort_n_vals@@Base+0xd30>
  408e14:	mov    edi,0x1
  408e19:	call   407f10 <read_boolean_unary_expression@@Base+0x311>
  408e1e:	test   rax,rax
  408e21:	je     408f48 <__gcov_sort_n_vals@@Base+0x718>
  408e27:	mov    eax,DWORD PTR [rax]
  408e29:	test   eax,eax
  408e2b:	je     408f48 <__gcov_sort_n_vals@@Base+0x718>
  408e31:	cmp    eax,0x67636461
  408e36:	je     4096c0 <__gcov_sort_n_vals@@Base+0xe90>
  408e3c:	mov    rsi,QWORD PTR [rsp+0x10]
  408e41:	lea    rdi,[rip+0x2d48]        # 40bb90 <_IO_stdin_used@@Base+0xb90>
  408e48:	xor    eax,eax
  408e4a:	call   407fb0 <read_boolean_unary_expression@@Base+0x3b1>
  408e4f:	mov    rax,QWORD PTR [rip+0x88da]        # 411730 <__gcov_error_file@@Base+0x10>
  408e56:	test   rax,rax
  408e59:	je     408e7c <__gcov_sort_n_vals@@Base+0x64c>
  408e5b:	nop    DWORD PTR [rax+rax*1+0x0]
  408e60:	mov    edx,0x9
  408e65:	mov    rsi,rax
  408e68:	mov    rdi,r13
  408e6b:	call   4080b0 <read_boolean_unary_expression@@Base+0x4b1>
  408e70:	mov    QWORD PTR [rip+0x88b9],rax        # 411730 <__gcov_error_file@@Base+0x10>
  408e77:	test   rax,rax
  408e7a:	jne    408e60 <__gcov_sort_n_vals@@Base+0x630>
  408e7c:	call   408290 <read_boolean_unary_expression@@Base+0x691>
  408e81:	test   eax,eax
  408e83:	je     408ea3 <__gcov_sort_n_vals@@Base+0x673>
  408e85:	lea    rax,[rip+0x2cbc]        # 40bb48 <_IO_stdin_used@@Base+0xb48>
  408e8c:	lea    rdi,[rip+0x2b69]        # 40b9fc <_IO_stdin_used@@Base+0x9fc>
  408e93:	mov    rsi,QWORD PTR [rsp+0x10]
  408e98:	cmovs  rdi,rax
  408e9c:	xor    eax,eax
  408e9e:	call   407fb0 <read_boolean_unary_expression@@Base+0x3b1>
  408ea3:	mov    r13,QWORD PTR [r13+0x8]
  408ea7:	test   r13,r13
  408eaa:	jne    408d30 <__gcov_sort_n_vals@@Base+0x500>
  408eb0:	mov    rdi,QWORD PTR [rsp+0x10]
  408eb5:	add    rsp,0x47e8
  408ebc:	pop    rbx
  408ebd:	pop    rbp
  408ebe:	pop    r12
  408ec0:	pop    r13
  408ec2:	pop    r14
  408ec4:	pop    r15
  408ec6:	jmp    402270 <free@plt>
  408ecb:	nop    DWORD PTR [rax+rax*1+0x0]
  408ed0:	mov    r14d,0x1
  408ed6:	jmp    408adc <__gcov_sort_n_vals@@Base+0x2ac>
  408edb:	nop    DWORD PTR [rax+rax*1+0x0]
  408ee0:	mov    r12d,DWORD PTR [rcx]
  408ee3:	mov    eax,r12d
  408ee6:	mov    ebp,r12d
  408ee9:	imul   ebx
  408eeb:	mov    eax,r12d
  408eee:	sar    eax,0x1f
  408ef1:	sar    edx,1
  408ef3:	sub    edx,eax
  408ef5:	lea    eax,[rdx+rdx*8]
  408ef8:	sub    ebp,eax
  408efa:	jne    402490 <__fprintf_chk@plt+0x10>
  408f00:	mov    r14,QWORD PTR [rcx+0x8]
  408f04:	add    r14,0x8
  408f08:	test   r12d,r12d
  408f0b:	jle    408d8e <__gcov_sort_n_vals@@Base+0x55e>
  408f11:	nop    DWORD PTR [rax+0x0]
  408f18:	mov    rdi,r14
  408f1b:	mov    esi,0x8
  408f20:	add    ebp,0x9
  408f23:	add    r14,0x48
  408f27:	call   408830 <__gcov_sort_n_vals@@Base>
  408f2c:	cmp    r12d,ebp
  408f2f:	jg     408f18 <__gcov_sort_n_vals@@Base+0x6e8>
  408f31:	add    r15,0x1
  408f35:	cmp    DWORD PTR [r13+0x68],r15d
  408f39:	jne    408d60 <__gcov_sort_n_vals@@Base+0x530>
  408f3f:	jmp    408d98 <__gcov_sort_n_vals@@Base+0x568>
  408f44:	nop    DWORD PTR [rax+0x0]
  408f48:	mov    r15,0x411e40
  408f4f:	xor    edx,edx
  408f51:	xor    esi,esi
  408f53:	mov    QWORD PTR [r15+0x8],0x0
  408f5b:	mov    rdi,QWORD PTR [r15]
  408f5e:	mov    DWORD PTR [r15+0x1c],0xffffffff
  408f66:	lea    r15,[rsp+0x1840]
  408f6e:	call   402410 <fseek@plt>
  408f73:	xor    eax,eax
  408f75:	mov    ecx,0x2f9
  408f7a:	mov    rdi,r15
  408f7d:	rep stos QWORD PTR es:[rdi],rax
  408f80:	cmp    QWORD PTR [r13+0x20],0x0
  408f85:	je     409801 <__gcov_sort_n_vals@@Base+0xfd1>
  408f8b:	mov    DWORD PTR [rsp+0x44],0x0
  408f93:	mov    DWORD PTR [rsp+0x40],0x0
  408f9b:	mov    eax,DWORD PTR [rsp+0x3c]
  408f9f:	xor    esi,esi
  408fa1:	test   eax,eax
  408fa3:	je     40921b <__gcov_sort_n_vals@@Base+0x9eb>
  408fa9:	mov    rax,QWORD PTR [rsp+0x88]
  408fb1:	mov    rcx,QWORD PTR [rsp+0x1860]
  408fb9:	mov    rdi,QWORD PTR [rsp+0x1858]
  408fc1:	mov    rdx,QWORD PTR [rsp+0x80]
  408fc9:	add    rcx,rax
  408fcc:	add    rdx,QWORD PTR [rsp+0x1850]
  408fd4:	nop    DWORD PTR [rax+0x0]
  408fd8:	mov    esi,DWORD PTR [rsp+0x78]
  408fdc:	mov    QWORD PTR [rsp+0x1850],rdx
  408fe4:	mov    DWORD PTR [rsp+0x1848],esi
  408feb:	cmp    rax,rdi
  408fee:	jle    408ff8 <__gcov_sort_n_vals@@Base+0x7c8>
  408ff0:	mov    QWORD PTR [rsp+0x1858],rax
  408ff8:	mov    rbx,QWORD PTR [rsp+0x8]
  408ffd:	lea    rax,[r15+0x28]
  409001:	mov    QWORD PTR [rsp+0x1860],rcx
  409009:	mov    ecx,0x2f4
  40900e:	mov    rdi,rax
  409011:	lea    rsi,[rbx+0x28]
  409015:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  409018:	mov    eax,DWORD PTR [rsp+0x48]
  40901c:	cmp    DWORD PTR [rsp+0x44],0x0
  409021:	mov    DWORD PTR [rsp+0x1840],eax
  409028:	je     409818 <__gcov_sort_n_vals@@Base+0xfe8>
  40902e:	xchg   ax,ax
  409030:	mov    edi,DWORD PTR [rsp+0x40]
  409034:	test   edi,edi
  409036:	jne    4097f3 <__gcov_sort_n_vals@@Base+0xfc3>
  40903c:	mov    rsi,r15
  40903f:	mov    edi,0xa3000000
  409044:	mov    ebx,0xa3000000
  409049:	call   408360 <read_boolean_unary_expression@@Base+0x761>
  40904e:	mov    rbp,QWORD PTR [rip+0x86d3]        # 411728 <__gcov_error_file@@Base+0x8>
  409055:	test   rbp,rbp
  409058:	je     409086 <__gcov_sort_n_vals@@Base+0x856>
  40905a:	nop    WORD PTR [rax+rax*1+0x0]
  409060:	lea    rsi,[rbp+0x8]
  409064:	mov    edi,ebx
  409066:	call   408360 <read_boolean_unary_expression@@Base+0x761>
  40906b:	mov    rdi,QWORD PTR [rip+0x86b6]        # 411728 <__gcov_error_file@@Base+0x8>
  409072:	mov    rbp,QWORD PTR [rdi]
  409075:	call   402270 <free@plt>
  40907a:	mov    QWORD PTR [rip+0x86a7],rbp        # 411728 <__gcov_error_file@@Base+0x8>
  409081:	test   rbp,rbp
  409084:	jne    409060 <__gcov_sort_n_vals@@Base+0x830>
  409086:	mov    esi,DWORD PTR [r13+0x68]
  40908a:	xor    ebx,ebx
  40908c:	test   esi,esi
  40908e:	jne    4090cf <__gcov_sort_n_vals@@Base+0x89f>
  409090:	jmp    409680 <__gcov_sort_n_vals@@Base+0xe50>
  409095:	nop    DWORD PTR [rax]
  409098:	mov    rdx,QWORD PTR [r13+0x70]
  40909c:	mov    eax,ebx
  40909e:	mov    edi,0x2
  4090a3:	mov    rbp,QWORD PTR [rdx+rax*8]
  4090a7:	test   rbp,rbp
  4090aa:	je     4090b6 <__gcov_sort_n_vals@@Base+0x886>
  4090ac:	cmp    QWORD PTR [rbp+0x0],r13
  4090b0:	je     409698 <__gcov_sort_n_vals@@Base+0xe68>
  4090b6:	call   407ec0 <read_boolean_unary_expression@@Base+0x2c1>
  4090bb:	mov    QWORD PTR [rax],0x1000000
  4090c2:	add    ebx,0x1
  4090c5:	cmp    ebx,DWORD PTR [r13+0x68]
  4090c9:	je     409680 <__gcov_sort_n_vals@@Base+0xe50>
  4090cf:	mov    rbp,QWORD PTR [rip+0x865a]        # 411730 <__gcov_error_file@@Base+0x10>
  4090d6:	test   rbp,rbp
  4090d9:	je     409098 <__gcov_sort_n_vals@@Base+0x868>
  4090db:	cmp    DWORD PTR [rbp+0x8],ebx
  4090de:	jne    409098 <__gcov_sort_n_vals@@Base+0x868>
  4090e0:	mov    edi,0x2
  4090e5:	add    rbp,0x10
  4090e9:	call   407ec0 <read_boolean_unary_expression@@Base+0x2c1>
  4090ee:	mov    DWORD PTR [rsp+0x18],0x1
  4090f6:	movabs rsi,0x301000000
  409100:	mov    QWORD PTR [rax],rsi
  409103:	mov    r12d,DWORD PTR [rbp+0x8]
  409107:	mov    edi,0x1
  40910c:	mov    r14d,0x1a10000
  409112:	add    rbp,0x18
  409116:	call   407ec0 <read_boolean_unary_expression@@Base+0x2c1>
  40911b:	mov    edi,0x1
  409120:	mov    DWORD PTR [rax],r12d
  409123:	mov    r12d,DWORD PTR [rbp-0xc]
  409127:	call   407ec0 <read_boolean_unary_expression@@Base+0x2c1>
  40912c:	mov    edi,0x1
  409131:	mov    DWORD PTR [rax],r12d
  409134:	mov    r12d,DWORD PTR [rbp-0x8]
  409138:	call   407ec0 <read_boolean_unary_expression@@Base+0x2c1>
  40913d:	mov    DWORD PTR [rsp+0x20],ebx
  409141:	mov    ebx,r14d
  409144:	mov    DWORD PTR [rax],r12d
  409147:	lea    r12,[r13+0x20]
  40914b:	mov    QWORD PTR [rsp+0x28],r13
  409150:	jmp    40916e <__gcov_sort_n_vals@@Base+0x93e>
  409152:	nop    WORD PTR [rax+rax*1+0x0]
  409158:	add    ebx,0x20000
  40915e:	add    r12,0x8
  409162:	cmp    ebx,0x1b30000
  409168:	je     409640 <__gcov_sort_n_vals@@Base+0xe10>
  40916e:	cmp    QWORD PTR [r12],0x0
  409173:	je     409158 <__gcov_sort_n_vals@@Base+0x928>
  409175:	mov    r13d,DWORD PTR [rbp+0x0]
  409179:	mov    edi,0x2
  40917e:	call   407ec0 <read_boolean_unary_expression@@Base+0x2c1>
  409183:	mov    r15,QWORD PTR [rbp+0x8]
  409187:	lea    esi,[r13+r13*1+0x0]
  40918c:	mov    DWORD PTR [rax],ebx
  40918e:	mov    DWORD PTR [rax+0x4],esi
  409191:	lea    eax,[r13-0x1]
  409195:	lea    r14,[r15+rax*8+0x8]
  40919a:	test   r13d,r13d
  40919d:	je     4091ba <__gcov_sort_n_vals@@Base+0x98a>
  40919f:	nop
  4091a0:	add    r15,0x8
  4091a4:	mov    r13,QWORD PTR [r15-0x8]
  4091a8:	mov    edi,0x2
  4091ad:	call   407ec0 <read_boolean_unary_expression@@Base+0x2c1>
  4091b2:	mov    QWORD PTR [rax],r13
  4091b5:	cmp    r15,r14
  4091b8:	jne    4091a0 <__gcov_sort_n_vals@@Base+0x970>
  4091ba:	add    rbp,0x10
  4091be:	jmp    409158 <__gcov_sort_n_vals@@Base+0x928>
  4091c0:	mov    r15,QWORD PTR [rsp+0x68]
  4091c5:	test   eax,eax
  4091c7:	jne    409c18 <__gcov_sort_n_vals@@Base+0x13e8>
  4091cd:	mov    QWORD PTR [r15+0x8],0x0
  4091d5:	mov    rdi,QWORD PTR [r15]
  4091d8:	xor    edx,edx
  4091da:	xor    esi,esi
  4091dc:	mov    DWORD PTR [r15+0x1c],0xffffffff
  4091e4:	call   402410 <fseek@plt>
  4091e9:	mov    r9d,DWORD PTR [rsp+0x40]
  4091ee:	test   r9d,r9d
  4091f1:	je     409e37 <__gcov_sort_n_vals@@Base+0x1607>
  4091f7:	cmp    QWORD PTR [r13+0x20],0x0
  4091fc:	mov    esi,DWORD PTR [rsp+0x184c]
  409203:	je     4097d0 <__gcov_sort_n_vals@@Base+0xfa0>
  409209:	mov    r8d,DWORD PTR [rsp+0x3c]
  40920e:	lea    r15,[rsp+0x1840]
  409216:	test   r8d,r8d
  409219:	jne    409225 <__gcov_sort_n_vals@@Base+0x9f5>
  40921b:	lea    eax,[rsi+0x1]
  40921e:	mov    DWORD PTR [rsp+0x184c],eax
  409225:	mov    rax,QWORD PTR [rsp+0x88]
  40922d:	mov    rcx,QWORD PTR [rsp+0x1860]
  409235:	mov    rdx,QWORD PTR [rsp+0x80]
  40923d:	mov    rdi,QWORD PTR [rsp+0x1858]
  409245:	add    rdx,QWORD PTR [rsp+0x1850]
  40924d:	add    rcx,rax
  409250:	test   esi,esi
  409252:	je     408fd8 <__gcov_sort_n_vals@@Base+0x7a8>
  409258:	mov    QWORD PTR [rsp+0x1850],rdx
  409260:	cmp    rax,rdi
  409263:	jle    40926d <__gcov_sort_n_vals@@Base+0xa3d>
  409265:	mov    QWORD PTR [rsp+0x1858],rax
  40926d:	lea    rdi,[rsp+0x3010]
  409275:	xor    eax,eax
  409277:	xor    r10d,r10d
  40927a:	xor    esi,esi
  40927c:	mov    QWORD PTR [rsp+0x1860],rcx
  409284:	mov    ecx,0x2f4
  409289:	lea    rbx,[r15+0x17b0]
  409290:	xor    edx,edx
  409292:	mov    QWORD PTR [rsp+0x18],rdi
  409297:	mov    r8d,0xfb
  40929d:	rep stos QWORD PTR es:[rdi],rax
  4092a0:	mov    rax,QWORD PTR [rsp+0x8]
  4092a5:	mov    edi,0xfb
  4092aa:	add    rax,0x28
  4092ae:	mov    QWORD PTR [rsp+0x20],rax
  4092b3:	nop    DWORD PTR [rax+rax*1+0x0]
  4092b8:	mov    r9d,DWORD PTR [rbx]
  4092bb:	mov    rcx,QWORD PTR [rbx+0x10]
  4092bf:	test   r9d,r9d
  4092c2:	je     4093fd <__gcov_sort_n_vals@@Base+0xbcd>
  4092c8:	mov    rbp,QWORD PTR [rbx+0x8]
  4092cc:	mov    QWORD PTR [rsp+0x28],rbx
  4092d1:	jmp    409393 <__gcov_sort_n_vals@@Base+0xb63>
  4092d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4092e0:	jbe    409e2f <__gcov_sort_n_vals@@Base+0x15ff>
  4092e6:	mov    eax,r9d
  4092e9:	mov    r12d,esi
  4092ec:	imul   rax,r10
  4092f0:	cqo    
  4092f2:	idiv   r12
  4092f5:	mov    r11,rax
  4092f8:	sub    esi,r9d
  4092fb:	mov    r14d,r9d
  4092fe:	sub    r10,r11
  409301:	xor    r9d,r9d
  409304:	xor    r12d,r12d
  409307:	lea    rax,[r11+rcx*1]
  40930b:	test   rbx,rbx
  40930e:	je     4093ed <__gcov_sort_n_vals@@Base+0xbbd>
  409314:	bsr    rdx,rbx
  409318:	mov    ecx,0x3f
  40931d:	xor    rdx,0x3f
  409321:	sub    ecx,edx
  409323:	cmp    ecx,0x1
  409326:	jbe    4093ed <__gcov_sort_n_vals@@Base+0xbbd>
  40932c:	mov    ecx,0x3d
  409331:	mov    r11,rbx
  409334:	sub    ecx,edx
  409336:	shr    r11,cl
  409339:	mov    rcx,r11
  40933c:	mov    r11d,0x4000003e
  409342:	and    ecx,0x3
  409345:	sub    r11d,edx
  409348:	lea    edx,[rcx+r11*4]
  40934c:	movsxd rcx,edx
  40934f:	lea    r11,[rcx+rcx*2]
  409353:	shl    r11,0x3
  409357:	add    QWORD PTR [rsp+r11*1+0x3020],rax
  40935f:	mov    rax,QWORD PTR [rsp+r11*1+0x3018]
  409367:	add    DWORD PTR [rsp+r11*1+0x3010],r14d
  40936f:	cmp    rax,rbx
  409372:	jg     409379 <__gcov_sort_n_vals@@Base+0xb49>
  409374:	test   rax,rax
  409377:	jne    409385 <__gcov_sort_n_vals@@Base+0xb55>
  409379:	lea    rax,[rcx+rcx*2]
  40937d:	mov    QWORD PTR [rsp+rax*8+0x3018],rbx
  409385:	cmp    esi,0x1
  409388:	mov    rcx,r12
  40938b:	sbb    edi,0x0
  40938e:	test   r9d,r9d
  409391:	je     4093f8 <__gcov_sort_n_vals@@Base+0xbc8>
  409393:	test   esi,esi
  409395:	je     409470 <__gcov_sort_n_vals@@Base+0xc40>
  40939b:	movsxd rax,edi
  40939e:	mov    rbx,QWORD PTR [rsp+0x20]
  4093a3:	lea    rax,[rax+rax*2]
  4093a7:	lea    rax,[rbx+rax*8]
  4093ab:	mov    rbx,QWORD PTR [rax+0x8]
  4093af:	add    rbx,rbp
  4093b2:	cmp    esi,r9d
  4093b5:	jae    4092e0 <__gcov_sort_n_vals@@Base+0xab0>
  4093bb:	mov    eax,esi
  4093bd:	mov    r11d,r9d
  4093c0:	mov    r14d,esi
  4093c3:	sub    r9d,esi
  4093c6:	imul   rax,rcx
  4093ca:	xor    esi,esi
  4093cc:	cqo    
  4093ce:	idiv   r11
  4093d1:	mov    r11,r10
  4093d4:	xor    r10d,r10d
  4093d7:	sub    rcx,rax
  4093da:	mov    r12,rcx
  4093dd:	mov    rcx,rax
  4093e0:	lea    rax,[r11+rcx*1]
  4093e4:	test   rbx,rbx
  4093e7:	jne    409314 <__gcov_sort_n_vals@@Base+0xae4>
  4093ed:	mov    edx,ebx
  4093ef:	jmp    40934c <__gcov_sort_n_vals@@Base+0xb1c>
  4093f4:	nop    DWORD PTR [rax+0x0]
  4093f8:	mov    rbx,QWORD PTR [rsp+0x28]
  4093fd:	sub    r8d,0x1
  409401:	sub    rbx,0x18
  409405:	cmp    r8d,0xffffffff
  409409:	jne    4092b8 <__gcov_sort_n_vals@@Base+0xa88>
  40940f:	cmp    esi,0x1
  409412:	adc    edi,0xffffffff
  409415:	test   edi,edi
  409417:	js     40943d <__gcov_sort_n_vals@@Base+0xc0d>
  409419:	movsxd rdi,edi
  40941c:	mov    rbx,QWORD PTR [rsp+0x8]
  409421:	lea    rcx,[rsp+0x58]
  409426:	lea    rax,[rdi+rdi*2]
  40942a:	lea    rax,[rbx+rax*8]
  40942e:	xchg   ax,ax
  409430:	add    r10,QWORD PTR [rax+0x38]
  409434:	sub    rax,0x18
  409438:	cmp    rcx,rax
  40943b:	jne    409430 <__gcov_sort_n_vals@@Base+0xc00>
  40943d:	movsxd rdx,edx
  409440:	mov    ecx,0x2f4
  409445:	mov    rsi,QWORD PTR [rsp+0x18]
  40944a:	lea    rdi,[rsp+0x1868]
  409452:	lea    rax,[rdx+rdx*2]
  409456:	add    QWORD PTR [rsp+rax*8+0x3020],r10
  40945e:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  409461:	jmp    409018 <__gcov_sort_n_vals@@Base+0x7e8>
  409466:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409470:	test   edi,edi
  409472:	js     4094bb <__gcov_sort_n_vals@@Base+0xc8b>
  409474:	movsxd rax,edi
  409477:	lea    r11,[rax+rax*2]
  40947b:	mov    rax,QWORD PTR [rsp+0x20]
  409480:	shl    r11,0x3
  409484:	add    rax,r11
  409487:	mov    esi,DWORD PTR [rax]
  409489:	test   esi,esi
  40948b:	jne    409550 <__gcov_sort_n_vals@@Base+0xd20>
  409491:	mov    rax,QWORD PTR [rsp+0x8]
  409496:	lea    r11,[rax+r11*1+0x10]
  40949b:	jmp    4094b3 <__gcov_sort_n_vals@@Base+0xc83>
  40949d:	nop    DWORD PTR [rax]
  4094a0:	mov    rax,r11
  4094a3:	sub    r11,0x18
  4094a7:	mov    esi,DWORD PTR [r11+0x18]
  4094ab:	test   esi,esi
  4094ad:	jne    409550 <__gcov_sort_n_vals@@Base+0xd20>
  4094b3:	sub    edi,0x1
  4094b6:	cmp    edi,0xffffffff
  4094b9:	jne    4094a0 <__gcov_sort_n_vals@@Base+0xc70>
  4094bb:	movsxd r8,r8d
  4094be:	lea    rax,[r8+r8*2]
  4094c2:	shl    rax,0x3
  4094c6:	add    DWORD PTR [rsp+rax*1+0x3010],r9d
  4094ce:	add    QWORD PTR [rsp+rax*1+0x3020],rcx
  4094d6:	mov    rax,QWORD PTR [rsp+rax*1+0x3018]
  4094de:	test   rax,rax
  4094e1:	je     4094e8 <__gcov_sort_n_vals@@Base+0xcb8>
  4094e3:	cmp    rbp,rax
  4094e6:	jge    4094f4 <__gcov_sort_n_vals@@Base+0xcc4>
  4094e8:	lea    rax,[r8+r8*2]
  4094ec:	mov    QWORD PTR [rsp+rax*8+0x3018],rbp
  4094f4:	lea    rax,[r8+r8*2]
  4094f8:	mov    rbx,QWORD PTR [rsp+0x18]
  4094fd:	shl    rax,0x3
  409501:	lea    rcx,[rbx+rax*1]
  409505:	lea    rsi,[r15+rax*1]
  409509:	mov    r8,rcx
  40950c:	sub    r8,rax
  40950f:	jmp    409544 <__gcov_sort_n_vals@@Base+0xd14>
  409511:	nop    DWORD PTR [rax+0x0]
  409518:	mov    rdi,QWORD PTR [rcx-0x10]
  40951c:	mov    eax,DWORD PTR [rsi+0x10]
  40951f:	add    DWORD PTR [rcx-0x18],eax
  409522:	mov    rax,QWORD PTR [rsi+0x20]
  409526:	add    QWORD PTR [rcx-0x8],rax
  40952a:	mov    rax,QWORD PTR [rsi+0x18]
  40952e:	test   rdi,rdi
  409531:	je     409538 <__gcov_sort_n_vals@@Base+0xd08>
  409533:	cmp    rdi,rax
  409536:	jle    40953c <__gcov_sort_n_vals@@Base+0xd0c>
  409538:	mov    QWORD PTR [rcx-0x10],rax
  40953c:	sub    rcx,0x18
  409540:	sub    rsi,0x18
  409544:	cmp    r8,rcx
  409547:	jne    409518 <__gcov_sort_n_vals@@Base+0xce8>
  409549:	jmp    40943d <__gcov_sort_n_vals@@Base+0xc0d>
  40954e:	xchg   ax,ax
  409550:	mov    r10,QWORD PTR [rax+0x10]
  409554:	jmp    4093ab <__gcov_sort_n_vals@@Base+0xb7b>
  409559:	nop    DWORD PTR [rax+0x0]
  409560:	mov    rbx,QWORD PTR [rsp+0x10]
  409565:	movzx  eax,BYTE PTR [rbx]
  409568:	cmp    al,0x2f
  40956a:	jne    409577 <__gcov_sort_n_vals@@Base+0xd47>
  40956c:	mov    rax,rbx
  40956f:	lea    rbx,[rbx+0x1]
  409573:	movzx  eax,BYTE PTR [rax+0x1]
  409577:	mov    rbp,QWORD PTR [rsp+0x10]
  40957c:	test   al,al
  40957e:	jne    409593 <__gcov_sort_n_vals@@Base+0xd63>
  409580:	jmp    4095c0 <__gcov_sort_n_vals@@Base+0xd90>
  409582:	nop    WORD PTR [rax+rax*1+0x0]
  409588:	add    rbx,0x1
  40958c:	movzx  eax,BYTE PTR [rbx]
  40958f:	test   al,al
  409591:	je     4095c0 <__gcov_sort_n_vals@@Base+0xd90>
  409593:	cmp    al,0x2f
  409595:	jne    409588 <__gcov_sort_n_vals@@Base+0xd58>
  409597:	mov    BYTE PTR [rbx],0x0
  40959a:	xor    esi,esi
  40959c:	mov    rdi,rbp
  40959f:	call   402440 <access@plt>
  4095a4:	cmp    eax,0xffffffff
  4095a7:	je     4095e0 <__gcov_sort_n_vals@@Base+0xdb0>
  4095a9:	mov    BYTE PTR [rbx],0x2f
  4095ac:	add    rbx,0x1
  4095b0:	movzx  eax,BYTE PTR [rbx]
  4095b3:	test   al,al
  4095b5:	jne    409593 <__gcov_sort_n_vals@@Base+0xd63>
  4095b7:	nop    WORD PTR [rax+rax*1+0x0]
  4095c0:	mov    rdi,QWORD PTR [rsp+0x10]
  4095c5:	call   4081a0 <read_boolean_unary_expression@@Base+0x5a1>
  4095ca:	test   eax,eax
  4095cc:	jne    408e14 <__gcov_sort_n_vals@@Base+0x5e4>
  4095d2:	mov    rcx,QWORD PTR [rsp+0x10]
  4095d7:	lea    rdx,[rip+0x246d]        # 40ba4b <_IO_stdin_used@@Base+0xa4b>
  4095de:	jmp    40961f <__gcov_sort_n_vals@@Base+0xdef>
  4095e0:	mov    esi,0x1ed
  4095e5:	mov    rdi,rbp
  4095e8:	call   4022d0 <mkdir@plt>
  4095ed:	cmp    eax,0xffffffff
  4095f0:	jne    4095a9 <__gcov_sort_n_vals@@Base+0xd79>
  4095f2:	call   4022a0 <__errno_location@plt>
  4095f7:	cmp    DWORD PTR [rax],0x11
  4095fa:	je     4095a9 <__gcov_sort_n_vals@@Base+0xd79>
  4095fc:	mov    r14,QWORD PTR [rsp+0x10]
  409601:	lea    rdi,[rip+0x2560]        # 40bb68 <_IO_stdin_used@@Base+0xb68>
  409608:	xor    eax,eax
  40960a:	mov    rsi,r14
  40960d:	call   407fb0 <read_boolean_unary_expression@@Base+0x3b1>
  409612:	mov    BYTE PTR [rbx],0x2f
  409615:	mov    rcx,r14
  409618:	lea    rdx,[rip+0x2419]        # 40ba38 <_IO_stdin_used@@Base+0xa38>
  40961f:	mov    rax,QWORD PTR [rip+0x59d2]        # 40eff8 <stderr@GLIBC_2.2.5>
  409626:	mov    esi,0x1
  40962b:	mov    rdi,QWORD PTR [rax]
  40962e:	xor    eax,eax
  409630:	call   402480 <__fprintf_chk@plt>
  409635:	jmp    408ea3 <__gcov_sort_n_vals@@Base+0x673>
  40963a:	nop    WORD PTR [rax+rax*1+0x0]
  409640:	mov    ecx,DWORD PTR [rsp+0x18]
  409644:	mov    ebx,DWORD PTR [rsp+0x20]
  409648:	mov    r13,QWORD PTR [rsp+0x28]
  40964d:	test   ecx,ecx
  40964f:	je     4090c2 <__gcov_sort_n_vals@@Base+0x892>
  409655:	mov    rsi,QWORD PTR [rip+0x80d4]        # 411730 <__gcov_error_file@@Base+0x10>
  40965c:	mov    edx,0x9
  409661:	mov    rdi,r13
  409664:	add    ebx,0x1
  409667:	call   4080b0 <read_boolean_unary_expression@@Base+0x4b1>
  40966c:	mov    QWORD PTR [rip+0x80bd],rax        # 411730 <__gcov_error_file@@Base+0x10>
  409673:	cmp    ebx,DWORD PTR [r13+0x68]
  409677:	jne    4090cf <__gcov_sort_n_vals@@Base+0x89f>
  40967d:	nop    DWORD PTR [rax]
  409680:	mov    edi,0x1
  409685:	call   407ec0 <read_boolean_unary_expression@@Base+0x2c1>
  40968a:	mov    DWORD PTR [rax],0x0
  409690:	jmp    408e4f <__gcov_sort_n_vals@@Base+0x61f>
  409695:	nop    DWORD PTR [rax]
  409698:	call   407ec0 <read_boolean_unary_expression@@Base+0x2c1>
  40969d:	mov    DWORD PTR [rsp+0x18],0x0
  4096a5:	movabs rsi,0x301000000
  4096af:	mov    QWORD PTR [rax],rsi
  4096b2:	jmp    409103 <__gcov_sort_n_vals@@Base+0x8d3>
  4096b7:	nop    WORD PTR [rax+rax*1+0x0]
  4096c0:	mov    edi,0x1
  4096c5:	call   407f10 <read_boolean_unary_expression@@Base+0x311>
  4096ca:	test   rax,rax
  4096cd:	je     409ce0 <__gcov_sort_n_vals@@Base+0x14b0>
  4096d3:	mov    esi,DWORD PTR [rax]
  4096d5:	cmp    esi,0x4138342a
  4096db:	je     4096f3 <__gcov_sort_n_vals@@Base+0xec3>
  4096dd:	mov    rdx,QWORD PTR [rsp+0x10]
  4096e2:	lea    rdi,[r13+0x18]
  4096e6:	call   408120 <read_boolean_unary_expression@@Base+0x521>
  4096eb:	test   eax,eax
  4096ed:	je     408e4f <__gcov_sort_n_vals@@Base+0x61f>
  4096f3:	mov    edi,0x1
  4096f8:	call   407f10 <read_boolean_unary_expression@@Base+0x311>
  4096fd:	test   rax,rax
  409700:	je     409cf0 <__gcov_sort_n_vals@@Base+0x14c0>
  409706:	mov    eax,DWORD PTR [rax]
  409708:	cmp    DWORD PTR [r13+0x10],eax
  40970c:	jne    408f48 <__gcov_sort_n_vals@@Base+0x718>
  409712:	mov    DWORD PTR [rsp+0x40],0x0
  40971a:	mov    r15,0x411e40
  409721:	lea    rbp,[rip+0x8000]        # 411728 <__gcov_error_file@@Base+0x8>
  409728:	lea    rbx,[rsp+0x3010]
  409730:	lea    r12,[rsp+0x1840]
  409738:	mov    edi,0x1
  40973d:	mov    r14d,DWORD PTR [r15+0xc]
  409741:	add    r14d,DWORD PTR [r15+0x8]
  409745:	call   407f10 <read_boolean_unary_expression@@Base+0x311>
  40974a:	test   rax,rax
  40974d:	je     409970 <__gcov_sort_n_vals@@Base+0x1140>
  409753:	mov    eax,DWORD PTR [rax]
  409755:	cmp    eax,0xa3000000
  40975a:	jne    409e10 <__gcov_sort_n_vals@@Base+0x15e0>
  409760:	mov    edi,0x1
  409765:	call   407f10 <read_boolean_unary_expression@@Base+0x311>
  40976a:	mov    rdi,rbx
  40976d:	call   408540 <read_boolean_unary_expression@@Base+0x941>
  409772:	cmp    QWORD PTR [r15],0x0
  409776:	je     409951 <__gcov_sort_n_vals@@Base+0x1121>
  40977c:	mov    eax,DWORD PTR [r15+0x18]
  409780:	test   eax,eax
  409782:	jne    409949 <__gcov_sort_n_vals@@Base+0x1119>
  409788:	mov    r10d,DWORD PTR [rsp+0x40]
  40978d:	test   r10d,r10d
  409790:	jne    409d00 <__gcov_sort_n_vals@@Base+0x14d0>
  409796:	mov    eax,DWORD PTR [rsp+0x48]
  40979a:	cmp    eax,DWORD PTR [rsp+0x3010]
  4097a1:	jne    409738 <__gcov_sort_n_vals@@Base+0xf08>
  4097a3:	mov    eax,DWORD PTR [rsp+0x3018]
  4097aa:	cmp    DWORD PTR [rsp+0x78],eax
  4097ae:	jne    409738 <__gcov_sort_n_vals@@Base+0xf08>
  4097b0:	endbr64 
  4097b4:	mov    ecx,0x2f9
  4097b9:	mov    rdi,r12
  4097bc:	mov    rsi,rbx
  4097bf:	mov    DWORD PTR [rsp+0x40],r14d
  4097c4:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  4097c7:	jmp    409738 <__gcov_sort_n_vals@@Base+0xf08>
  4097cc:	nop    DWORD PTR [rax+0x0]
  4097d0:	test   esi,esi
  4097d2:	jne    409df8 <__gcov_sort_n_vals@@Base+0x15c8>
  4097d8:	mov    eax,DWORD PTR [rsp+0x48]
  4097dc:	mov    edx,DWORD PTR [rsp+0x44]
  4097e0:	lea    r15,[rsp+0x1840]
  4097e8:	mov    DWORD PTR [rsp+0x1840],eax
  4097ef:	test   edx,edx
  4097f1:	je     409818 <__gcov_sort_n_vals@@Base+0xfe8>
  4097f3:	mov    edi,DWORD PTR [rsp+0x40]
  4097f7:	call   4087e0 <read_boolean_unary_expression@@Base+0xbe1>
  4097fc:	jmp    40903c <__gcov_sort_n_vals@@Base+0x80c>
  409801:	mov    eax,DWORD PTR [rsp+0x48]
  409805:	mov    DWORD PTR [rsp+0x40],0x0
  40980d:	mov    DWORD PTR [rsp+0x1840],eax
  409814:	nop    DWORD PTR [rax+0x0]
  409818:	movabs rbx,0x4138342a67636461
  409822:	mov    edi,0x2
  409827:	call   407ec0 <read_boolean_unary_expression@@Base+0x2c1>
  40982c:	mov    edi,0x1
  409831:	mov    QWORD PTR [rax],rbx
  409834:	mov    ebx,DWORD PTR [r13+0x10]
  409838:	call   407ec0 <read_boolean_unary_expression@@Base+0x2c1>
  40983d:	mov    DWORD PTR [rax],ebx
  40983f:	jmp    409030 <__gcov_sort_n_vals@@Base+0x800>
  409844:	nop    DWORD PTR [rax+0x0]
  409848:	lea    rdi,[rip+0x21dd]        # 40ba2c <_IO_stdin_used@@Base+0xa2c>
  40984f:	call   402260 <getenv@plt>
  409854:	mov    rbx,rax
  409857:	test   rax,rax
  40985a:	je     4098b0 <__gcov_sort_n_vals@@Base+0x1080>
  40985c:	mov    rdi,rax
  40985f:	call   402330 <strlen@plt>
  409864:	test   rax,rax
  409867:	je     4098b0 <__gcov_sort_n_vals@@Base+0x1080>
  409869:	lea    rsi,[rax-0x1]
  40986d:	cmp    BYTE PTR [rbx+rax*1-0x1],0x2f
  409872:	mov    DWORD PTR [rsp+0x38],0x0
  40987a:	mov    QWORD PTR [rsp+0x30],rsi
  40987f:	jne    408cfc <__gcov_sort_n_vals@@Base+0x4cc>
  409885:	test   rsi,rsi
  409888:	jne    408d01 <__gcov_sort_n_vals@@Base+0x4d1>
  40988e:	xchg   ax,ax
  409890:	mov    r12d,DWORD PTR [rsp+0x38]
  409895:	lea    rbx,[rip+0x217c]        # 40ba18 <_IO_stdin_used@@Base+0xa18>
  40989c:	mov    QWORD PTR [rsp+0x30],0x1
  4098a5:	test   r12d,r12d
  4098a8:	jne    408d01 <__gcov_sort_n_vals@@Base+0x4d1>
  4098ae:	xchg   ax,ax
  4098b0:	mov    rdi,rbp
  4098b3:	call   4023f0 <malloc@plt>
  4098b8:	mov    DWORD PTR [rsp+0x38],0x0
  4098c0:	mov    QWORD PTR [rsp+0x10],rax
  4098c5:	mov    QWORD PTR [rsp+0x30],0x0
  4098ce:	jmp    408d23 <__gcov_sort_n_vals@@Base+0x4f3>
  4098d3:	mov    edi,0x1
  4098d8:	call   407f10 <read_boolean_unary_expression@@Base+0x311>
  4098dd:	test   rax,rax
  4098e0:	je     409c18 <__gcov_sort_n_vals@@Base+0x13e8>
  4098e6:	xor    r15d,r15d
  4098e9:	nop    DWORD PTR [rax+0x0]
  4098f0:	mov    ecx,DWORD PTR [rax]
  4098f2:	cmp    ebp,r15d
  4098f5:	jne    409c18 <__gcov_sort_n_vals@@Base+0x13e8>
  4098fb:	mov    esi,DWORD PTR [rbx]
  4098fd:	lea    eax,[rsi+rsi*1]
  409900:	cmp    eax,ecx
  409902:	jne    409c18 <__gcov_sort_n_vals@@Base+0x13e8>
  409908:	mov    rdi,QWORD PTR [rbx+0x8]
  40990c:	add    rbx,0x10
  409910:	call   r14
  409913:	add    ebp,0x20000
  409919:	add    r12,0x8
  40991d:	cmp    ebp,0x1b30000
  409923:	jne    409db8 <__gcov_sort_n_vals@@Base+0x1588>
  409929:	mov    rax,QWORD PTR [rsp+0x68]
  40992e:	mov    r15,QWORD PTR [rsp+0x18]
  409933:	cmp    QWORD PTR [rax],0x0
  409937:	je     409951 <__gcov_sort_n_vals@@Base+0x1121>
  409939:	mov    rax,QWORD PTR [rsp+0x68]
  40993e:	mov    eax,DWORD PTR [rax+0x18]
  409941:	test   eax,eax
  409943:	je     409ba9 <__gcov_sort_n_vals@@Base+0x1379>
  409949:	test   eax,eax
  40994b:	js     409cd0 <__gcov_sort_n_vals@@Base+0x14a0>
  409951:	lea    rdx,[rip+0x2095]        # 40b9ed <_IO_stdin_used@@Base+0x9ed>
  409958:	mov    rsi,QWORD PTR [rsp+0x10]
  40995d:	lea    rdi,[rip+0x210a]        # 40ba6e <_IO_stdin_used@@Base+0xa6e>
  409964:	xor    eax,eax
  409966:	call   407fb0 <read_boolean_unary_expression@@Base+0x3b1>
  40996b:	jmp    408e4f <__gcov_sort_n_vals@@Base+0x61f>
  409970:	mov    DWORD PTR [rsp+0x44],r14d
  409975:	xor    eax,eax
  409977:	lea    rbx,[rip+0x7db2]        # 411730 <__gcov_error_file@@Base+0x10>
  40997e:	xor    r14d,r14d
  409981:	mov    QWORD PTR [rsp+0x68],r15
  409986:	mov    QWORD PTR [rsp+0x58],rbx
  40998b:	lea    rbx,[r13+0x18]
  40998f:	mov    r15,r14
  409992:	mov    QWORD PTR [rsp+0x60],rbx
  409997:	nop    WORD PTR [rax+rax*1+0x0]
  4099a0:	mov    DWORD PTR [rsp+0x20],r15d
  4099a5:	mov    DWORD PTR [rsp+0x4c],r15d
  4099aa:	cmp    DWORD PTR [r13+0x68],r15d
  4099ae:	je     4091c0 <__gcov_sort_n_vals@@Base+0x990>
  4099b4:	mov    rdx,QWORD PTR [r13+0x70]
  4099b8:	mov    rbx,QWORD PTR [rdx+r15*8]
  4099bc:	cmp    eax,0x1000000
  4099c1:	jne    409c18 <__gcov_sort_n_vals@@Base+0x13e8>
  4099c7:	mov    edi,0x1
  4099cc:	call   407f10 <read_boolean_unary_expression@@Base+0x311>
  4099d1:	test   rax,rax
  4099d4:	je     409ba9 <__gcov_sort_n_vals@@Base+0x1379>
  4099da:	mov    eax,DWORD PTR [rax]
  4099dc:	test   eax,eax
  4099de:	je     409ba9 <__gcov_sort_n_vals@@Base+0x1379>
  4099e4:	cmp    eax,0x3
  4099e7:	jne    409c18 <__gcov_sort_n_vals@@Base+0x13e8>
  4099ed:	test   rbx,rbx
  4099f0:	je     4099fb <__gcov_sort_n_vals@@Base+0x11cb>
  4099f2:	cmp    QWORD PTR [rbx],r13
  4099f5:	je     409d48 <__gcov_sort_n_vals@@Base+0x1518>
  4099fb:	mov    rdx,QWORD PTR [rsp+0x60]
  409a00:	lea    rax,[r13+0x60]
  409a04:	xor    ebp,ebp
  409a06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409a10:	cmp    QWORD PTR [rax],0x1
  409a14:	sbb    ebp,0xffffffff
  409a17:	sub    rax,0x8
  409a1b:	cmp    rdx,rax
  409a1e:	jne    409a10 <__gcov_sort_n_vals@@Base+0x11e0>
  409a20:	shl    ebp,0x4
  409a23:	lea    edi,[rbp+0x38]
  409a26:	mov    rbp,rdi
  409a29:	call   4023f0 <malloc@plt>
  409a2e:	mov    r12,rax
  409a31:	test   rax,rax
  409a34:	je     409c80 <__gcov_sort_n_vals@@Base+0x1450>
  409a3a:	mov    QWORD PTR [rax],0x0
  409a41:	mov    eax,DWORD PTR [rsp+0x20]
  409a45:	mov    edi,0x1
  409a4a:	mov    DWORD PTR [r12+0x8],eax
  409a4f:	call   407f10 <read_boolean_unary_expression@@Base+0x311>
  409a54:	test   rax,rax
  409a57:	je     409cb0 <__gcov_sort_n_vals@@Base+0x1480>
  409a5d:	mov    eax,DWORD PTR [rax]
  409a5f:	mov    DWORD PTR [r12+0x18],eax
  409a64:	mov    edi,0x1
  409a69:	call   407f10 <read_boolean_unary_expression@@Base+0x311>
  409a6e:	test   rax,rax
  409a71:	je     409ca8 <__gcov_sort_n_vals@@Base+0x1478>
  409a77:	mov    eax,DWORD PTR [rax]
  409a79:	mov    DWORD PTR [r12+0x1c],eax
  409a7e:	mov    edi,0x1
  409a83:	call   407f10 <read_boolean_unary_expression@@Base+0x311>
  409a88:	test   rax,rax
  409a8b:	je     409cc0 <__gcov_sort_n_vals@@Base+0x1490>
  409a91:	mov    eax,DWORD PTR [rax]
  409a93:	mov    DWORD PTR [r12+0x20],eax
  409a98:	xor    ebx,ebx
  409a9a:	xor    r14d,r14d
  409a9d:	mov    QWORD PTR [rsp+0x18],r12
  409aa2:	mov    QWORD PTR [rsp+0x50],r15
  409aa7:	jmp    409abe <__gcov_sort_n_vals@@Base+0x128e>
  409aa9:	nop    DWORD PTR [rax+0x0]
  409ab0:	add    rbx,0x1
  409ab4:	cmp    rbx,0x9
  409ab8:	je     409b92 <__gcov_sort_n_vals@@Base+0x1362>
  409abe:	cmp    QWORD PTR [r13+rbx*8+0x20],0x0
  409ac4:	mov    ebp,ebx
  409ac6:	je     409ab0 <__gcov_sort_n_vals@@Base+0x1280>
  409ac8:	mov    edi,0x1
  409acd:	call   407f10 <read_boolean_unary_expression@@Base+0x311>
  409ad2:	test   rax,rax
  409ad5:	je     409bd0 <__gcov_sort_n_vals@@Base+0x13a0>
  409adb:	mov    edx,ebx
  409add:	shl    edx,0x11
  409ae0:	add    edx,0x1a10000
  409ae6:	cmp    edx,DWORD PTR [rax]
  409ae8:	jne    409bd0 <__gcov_sort_n_vals@@Base+0x13a0>
  409aee:	mov    edi,0x1
  409af3:	call   407f10 <read_boolean_unary_expression@@Base+0x311>
  409af8:	test   rax,rax
  409afb:	je     409c40 <__gcov_sort_n_vals@@Base+0x1410>
  409b01:	mov    ecx,DWORD PTR [rax]
  409b03:	shr    ecx,1
  409b05:	lea    edi,[rcx*8+0x0]
  409b0c:	mov    r12d,ecx
  409b0f:	mov    DWORD PTR [rsp+0x28],edi
  409b13:	call   4023f0 <malloc@plt>
  409b18:	mov    r15,rax
  409b1b:	test   rax,rax
  409b1e:	je     409c60 <__gcov_sort_n_vals@@Base+0x1430>
  409b24:	mov    eax,r14d
  409b27:	shl    rax,0x4
  409b2b:	add    rax,QWORD PTR [rsp+0x18]
  409b30:	mov    DWORD PTR [rax+0x28],r12d
  409b34:	mov    QWORD PTR [rax+0x30],r15
  409b38:	lea    eax,[r12-0x1]
  409b3d:	lea    rbp,[r15+rax*8+0x8]
  409b42:	test   r12d,r12d
  409b45:	jne    409b5c <__gcov_sort_n_vals@@Base+0x132c>
  409b47:	jmp    409b80 <__gcov_sort_n_vals@@Base+0x1350>
  409b49:	nop    DWORD PTR [rax+0x0]
  409b50:	mov    rax,QWORD PTR [rax]
  409b53:	mov    QWORD PTR [r15-0x8],rax
  409b57:	cmp    rbp,r15
  409b5a:	je     409b80 <__gcov_sort_n_vals@@Base+0x1350>
  409b5c:	mov    edi,0x2
  409b61:	add    r15,0x8
  409b65:	call   407f10 <read_boolean_unary_expression@@Base+0x311>
  409b6a:	test   rax,rax
  409b6d:	jne    409b50 <__gcov_sort_n_vals@@Base+0x1320>
  409b6f:	xor    eax,eax
  409b71:	mov    QWORD PTR [r15-0x8],rax
  409b75:	cmp    rbp,r15
  409b78:	jne    409b5c <__gcov_sort_n_vals@@Base+0x132c>
  409b7a:	nop    WORD PTR [rax+rax*1+0x0]
  409b80:	add    rbx,0x1
  409b84:	add    r14d,0x1
  409b88:	cmp    rbx,0x9
  409b8c:	jne    409abe <__gcov_sort_n_vals@@Base+0x128e>
  409b92:	mov    r12,QWORD PTR [rsp+0x18]
  409b97:	mov    rax,QWORD PTR [rsp+0x58]
  409b9c:	mov    r15,QWORD PTR [rsp+0x50]
  409ba1:	mov    QWORD PTR [rax],r12
  409ba4:	mov    QWORD PTR [rsp+0x58],r12
  409ba9:	mov    edi,0x1
  409bae:	call   407f10 <read_boolean_unary_expression@@Base+0x311>
  409bb3:	test   rax,rax
  409bb6:	je     409c78 <__gcov_sort_n_vals@@Base+0x1448>
  409bbc:	mov    eax,DWORD PTR [rax]
  409bbe:	add    r15,0x1
  409bc2:	jmp    4099a0 <__gcov_sort_n_vals@@Base+0x1170>
  409bc7:	nop    WORD PTR [rax+rax*1+0x0]
  409bd0:	mov    r12,QWORD PTR [rsp+0x18]
  409bd5:	mov    r15,QWORD PTR [rsp+0x50]
  409bda:	lea    rcx,[rip+0x1deb]        # 40b9cc <_IO_stdin_used@@Base+0x9cc>
  409be1:	mov    edx,DWORD PTR [rsp+0x20]
  409be5:	mov    rsi,QWORD PTR [rsp+0x10]
  409bea:	mov    r8d,ebp
  409bed:	xor    eax,eax
  409bef:	lea    rdi,[rip+0x1fea]        # 40bbe0 <_IO_stdin_used@@Base+0xbe0>
  409bf6:	call   407fb0 <read_boolean_unary_expression@@Base+0x3b1>
  409bfb:	mov    edx,ebx
  409bfd:	mov    rsi,r12
  409c00:	mov    rdi,r13
  409c03:	call   4080b0 <read_boolean_unary_expression@@Base+0x4b1>
  409c08:	mov    QWORD PTR [rsp+0x58],rax
  409c0d:	test   rax,rax
  409c10:	jne    409ba9 <__gcov_sort_n_vals@@Base+0x1379>
  409c12:	nop    WORD PTR [rax+rax*1+0x0]
  409c18:	mov    ecx,DWORD PTR [rsp+0x4c]
  409c1c:	mov    rsi,QWORD PTR [rsp+0x10]
  409c21:	lea    rdx,[rip+0x1e3d]        # 40ba65 <_IO_stdin_used@@Base+0xa65>
  409c28:	xor    eax,eax
  409c2a:	lea    rdi,[rip+0x1f87]        # 40bbb8 <_IO_stdin_used@@Base+0xbb8>
  409c31:	call   407fb0 <read_boolean_unary_expression@@Base+0x3b1>
  409c36:	jmp    408e4f <__gcov_sort_n_vals@@Base+0x61f>
  409c3b:	nop    DWORD PTR [rax+rax*1+0x0]
  409c40:	xor    edi,edi
  409c42:	mov    DWORD PTR [rsp+0x28],0x0
  409c4a:	xor    r12d,r12d
  409c4d:	call   4023f0 <malloc@plt>
  409c52:	mov    r15,rax
  409c55:	test   rax,rax
  409c58:	jne    409b24 <__gcov_sort_n_vals@@Base+0x12f4>
  409c5e:	xchg   ax,ax
  409c60:	mov    ebx,ebp
  409c62:	mov    r12,QWORD PTR [rsp+0x18]
  409c67:	mov    r15,QWORD PTR [rsp+0x50]
  409c6c:	mov    ebp,DWORD PTR [rsp+0x28]
  409c70:	jmp    409c85 <__gcov_sort_n_vals@@Base+0x1455>
  409c72:	nop    WORD PTR [rax+rax*1+0x0]
  409c78:	xor    eax,eax
  409c7a:	jmp    409bbe <__gcov_sort_n_vals@@Base+0x138e>
  409c7f:	nop
  409c80:	mov    ebx,0xffffffff
  409c85:	lea    rcx,[rip+0x1d51]        # 40b9dd <_IO_stdin_used@@Base+0x9dd>
  409c8c:	test   ebp,ebp
  409c8e:	jne    409be1 <__gcov_sort_n_vals@@Base+0x13b1>
  409c94:	mov    ebp,ebx
  409c96:	lea    rcx,[rip+0x1d2f]        # 40b9cc <_IO_stdin_used@@Base+0x9cc>
  409c9d:	jmp    409be1 <__gcov_sort_n_vals@@Base+0x13b1>
  409ca2:	nop    WORD PTR [rax+rax*1+0x0]
  409ca8:	xor    eax,eax
  409caa:	jmp    409a79 <__gcov_sort_n_vals@@Base+0x1249>
  409caf:	nop
  409cb0:	xor    eax,eax
  409cb2:	jmp    409a5f <__gcov_sort_n_vals@@Base+0x122f>
  409cb7:	nop    WORD PTR [rax+rax*1+0x0]
  409cc0:	xor    eax,eax
  409cc2:	jmp    409a93 <__gcov_sort_n_vals@@Base+0x1263>
  409cc7:	nop    WORD PTR [rax+rax*1+0x0]
  409cd0:	lea    rdx,[rip+0x1d1c]        # 40b9f3 <_IO_stdin_used@@Base+0x9f3>
  409cd7:	jmp    409958 <__gcov_sort_n_vals@@Base+0x1128>
  409cdc:	nop    DWORD PTR [rax+0x0]
  409ce0:	xor    esi,esi
  409ce2:	jmp    4096dd <__gcov_sort_n_vals@@Base+0xead>
  409ce7:	nop    WORD PTR [rax+rax*1+0x0]
  409cf0:	xor    eax,eax
  409cf2:	jmp    409708 <__gcov_sort_n_vals@@Base+0xed8>
  409cf7:	nop    WORD PTR [rax+rax*1+0x0]
  409d00:	mov    edi,0x17d0
  409d05:	call   4023f0 <malloc@plt>
  409d0a:	mov    ecx,0x2f9
  409d0f:	mov    rsi,rbx
  409d12:	mov    QWORD PTR [rbp+0x0],rax
  409d16:	lea    rdi,[rax+0x8]
  409d1a:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  409d1d:	mov    QWORD PTR [rax],0x0
  409d24:	mov    rbp,QWORD PTR [rbp+0x0]
  409d28:	jmp    409738 <__gcov_sort_n_vals@@Base+0xf08>
  409d2d:	nop    DWORD PTR [rax]
  409d30:	mov    ebp,0x2
  409d35:	mov    DWORD PTR [rsp+0x48],0x0
  409d3d:	jmp    408c8d <__gcov_sort_n_vals@@Base+0x45d>
  409d42:	nop    WORD PTR [rax+rax*1+0x0]
  409d48:	mov    edi,0x1
  409d4d:	call   407f10 <read_boolean_unary_expression@@Base+0x311>
  409d52:	test   rax,rax
  409d55:	je     409e1a <__gcov_sort_n_vals@@Base+0x15ea>
  409d5b:	mov    eax,DWORD PTR [rax]
  409d5d:	cmp    DWORD PTR [rbx+0x8],eax
  409d60:	jne    409c18 <__gcov_sort_n_vals@@Base+0x13e8>
  409d66:	mov    edi,0x1
  409d6b:	call   407f10 <read_boolean_unary_expression@@Base+0x311>
  409d70:	test   rax,rax
  409d73:	je     409e28 <__gcov_sort_n_vals@@Base+0x15f8>
  409d79:	mov    eax,DWORD PTR [rax]
  409d7b:	cmp    DWORD PTR [rbx+0xc],eax
  409d7e:	jne    409c18 <__gcov_sort_n_vals@@Base+0x13e8>
  409d84:	mov    edi,0x1
  409d89:	call   407f10 <read_boolean_unary_expression@@Base+0x311>
  409d8e:	test   rax,rax
  409d91:	je     409e21 <__gcov_sort_n_vals@@Base+0x15f1>
  409d97:	mov    eax,DWORD PTR [rax]
  409d99:	cmp    DWORD PTR [rbx+0x10],eax
  409d9c:	jne    409c18 <__gcov_sort_n_vals@@Base+0x13e8>
  409da2:	mov    QWORD PTR [rsp+0x18],r15
  409da7:	add    rbx,0x18
  409dab:	lea    r12,[r13+0x20]
  409daf:	mov    ebp,0x1a10000
  409db4:	nop    DWORD PTR [rax+0x0]
  409db8:	mov    r14,QWORD PTR [r12]
  409dbc:	test   r14,r14
  409dbf:	je     409913 <__gcov_sort_n_vals@@Base+0x10e3>
  409dc5:	mov    edi,0x1
  409dca:	call   407f10 <read_boolean_unary_expression@@Base+0x311>
  409dcf:	test   rax,rax
  409dd2:	je     4098d3 <__gcov_sort_n_vals@@Base+0x10a3>
  409dd8:	mov    edi,0x1
  409ddd:	mov    r15d,DWORD PTR [rax]
  409de0:	call   407f10 <read_boolean_unary_expression@@Base+0x311>
  409de5:	test   rax,rax
  409de8:	jne    4098f0 <__gcov_sort_n_vals@@Base+0x10c0>
  409dee:	xor    ecx,ecx
  409df0:	jmp    4098f2 <__gcov_sort_n_vals@@Base+0x10c2>
  409df5:	nop    DWORD PTR [rax]
  409df8:	mov    rsi,QWORD PTR [rsp+0x10]
  409dfd:	lea    rdi,[rip+0x1e04]        # 40bc08 <_IO_stdin_used@@Base+0xc08>
  409e04:	xor    eax,eax
  409e06:	call   407fb0 <read_boolean_unary_expression@@Base+0x3b1>
  409e0b:	jmp    408e4f <__gcov_sort_n_vals@@Base+0x61f>
  409e10:	mov    DWORD PTR [rsp+0x44],r14d
  409e15:	jmp    409977 <__gcov_sort_n_vals@@Base+0x1147>
  409e1a:	xor    eax,eax
  409e1c:	jmp    409d5d <__gcov_sort_n_vals@@Base+0x152d>
  409e21:	xor    eax,eax
  409e23:	jmp    409d99 <__gcov_sort_n_vals@@Base+0x1569>
  409e28:	xor    eax,eax
  409e2a:	jmp    409d7b <__gcov_sort_n_vals@@Base+0x154b>
  409e2f:	mov    r11,r10
  409e32:	jmp    4092f8 <__gcov_sort_n_vals@@Base+0xac8>
  409e37:	lea    r15,[rsp+0x1840]
  409e3f:	xor    eax,eax
  409e41:	mov    ecx,0x2f9
  409e46:	mov    rdi,r15
  409e49:	rep stos QWORD PTR es:[rdi],rax
  409e4c:	mov    eax,DWORD PTR [rsp+0x44]
  409e50:	cmp    QWORD PTR [r13+0x20],0x0
  409e55:	mov    DWORD PTR [rsp+0x40],eax
  409e59:	jne    408f9b <__gcov_sort_n_vals@@Base+0x76b>
  409e5f:	jmp    409018 <__gcov_sort_n_vals@@Base+0x7e8>
  409e64:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  409e6f:	nop
  409e70:	endbr64 
  409e74:	movzx  esi,BYTE PTR [rdi+0x8]
  409e78:	test   sil,0x1
  409e7c:	je     409e80 <__gcov_sort_n_vals@@Base+0x1650>
  409e7e:	ret    
  409e7f:	nop
  409e80:	push   rbx
  409e81:	shr    sil,1
  409e84:	mov    rbx,rdi
  409e87:	mov    rdi,QWORD PTR [rdi]
  409e8a:	and    esi,0x1
  409e8d:	call   4088e0 <__gcov_sort_n_vals@@Base+0xb0>
  409e92:	or     BYTE PTR [rbx+0x8],0x3
  409e96:	pop    rbx
  409e97:	ret    
  409e98:	nop    DWORD PTR [rax+rax*1+0x0]
  409ea0:	endbr64 
  409ea4:	movzx  esi,BYTE PTR [rip+0x7f7d]        # 411e28 <fff@@Base+0x1a8>
  409eab:	push   rbx
  409eac:	test   sil,0x1
  409eb0:	jne    409ecb <__gcov_sort_n_vals@@Base+0x169b>
  409eb2:	shr    sil,1
  409eb5:	mov    rdi,QWORD PTR [rip+0x7f64]        # 411e20 <fff@@Base+0x1a0>
  409ebc:	and    esi,0x1
  409ebf:	call   4088e0 <__gcov_sort_n_vals@@Base+0xb0>
  409ec4:	or     BYTE PTR [rip+0x7f5d],0x3        # 411e28 <fff@@Base+0x1a8>
  409ecb:	mov    rdx,QWORD PTR [rip+0x7f5e]        # 411e30 <fff@@Base+0x1b0>
  409ed2:	mov    rax,QWORD PTR [rip+0x7f5f]        # 411e38 <fff@@Base+0x1b8>
  409ed9:	test   rdx,rdx
  409edc:	je     409ee9 <__gcov_sort_n_vals@@Base+0x16b9>
  409ede:	mov    QWORD PTR [rdx+0x18],rax
  409ee2:	mov    rax,QWORD PTR [rip+0x7f4f]        # 411e38 <fff@@Base+0x1b8>
  409ee9:	test   rax,rax
  409eec:	je     409f20 <__gcov_sort_n_vals@@Base+0x16f0>
  409eee:	mov    QWORD PTR [rax+0x10],rdx
  409ef2:	mov    rbx,0x411720
  409ef9:	mov    rdi,QWORD PTR [rbx]
  409efc:	test   rdi,rdi
  409eff:	je     409f19 <__gcov_sort_n_vals@@Base+0x16e9>
  409f01:	mov    rax,QWORD PTR [rip+0x50f0]        # 40eff8 <stderr@GLIBC_2.2.5>
  409f08:	cmp    rdi,QWORD PTR [rax]
  409f0b:	je     409f19 <__gcov_sort_n_vals@@Base+0x16e9>
  409f0d:	call   402320 <fclose@plt>
  409f12:	mov    QWORD PTR [rbx],0x0
  409f19:	pop    rbx
  409f1a:	ret    
  409f1b:	nop    DWORD PTR [rax+rax*1+0x0]
  409f20:	mov    rax,0x410780
  409f27:	mov    QWORD PTR [rax+0x8],rdx
  409f2b:	jmp    409ef2 <__gcov_sort_n_vals@@Base+0x16c2>
  409f2d:	nop    DWORD PTR [rax]
  409f30:	endbr64 
  409f34:	mov    esi,DWORD PTR [rdi]
  409f36:	test   esi,esi
  409f38:	je     409f80 <__gcov_sort_n_vals@@Base+0x1750>
  409f3a:	mov    eax,DWORD PTR [rdi+0x68]
  409f3d:	test   eax,eax
  409f3f:	je     409f80 <__gcov_sort_n_vals@@Base+0x1750>
  409f41:	push   rbp
  409f42:	push   rbx
  409f43:	mov    rbx,rdi
  409f46:	sub    rsp,0x8
  409f4a:	cmp    esi,0x4138342a
  409f50:	je     409f61 <__gcov_sort_n_vals@@Base+0x1731>
  409f52:	xor    edx,edx
  409f54:	lea    rdi,[rdi+0x18]
  409f58:	call   408120 <read_boolean_unary_expression@@Base+0x521>
  409f5d:	test   eax,eax
  409f5f:	je     409f78 <__gcov_sort_n_vals@@Base+0x1748>
  409f61:	mov    rax,QWORD PTR [rip+0x7eb8]        # 411e20 <fff@@Base+0x1a0>
  409f68:	test   rax,rax
  409f6b:	je     409f88 <__gcov_sort_n_vals@@Base+0x1758>
  409f6d:	mov    QWORD PTR [rbx+0x8],rax
  409f71:	mov    QWORD PTR [rip+0x7ea8],rbx        # 411e20 <fff@@Base+0x1a0>
  409f78:	add    rsp,0x8
  409f7c:	pop    rbx
  409f7d:	pop    rbp
  409f7e:	ret    
  409f7f:	nop
  409f80:	ret    
  409f81:	nop    DWORD PTR [rax+0x0]
  409f88:	mov    rbp,0x410780
  409f8f:	mov    esi,DWORD PTR [rbp+0x0]
  409f92:	cmp    esi,0x4138342a
  409f98:	jne    409fc0 <__gcov_sort_n_vals@@Base+0x1790>
  409f9a:	mov    rdx,QWORD PTR [rbp+0x8]
  409f9e:	lea    rcx,[rip+0x7e7b]        # 411e20 <fff@@Base+0x1a0>
  409fa5:	mov    QWORD PTR [rip+0x7e84],rdx        # 411e30 <fff@@Base+0x1b0>
  409fac:	test   rdx,rdx
  409faf:	je     409fb5 <__gcov_sort_n_vals@@Base+0x1785>
  409fb1:	mov    QWORD PTR [rdx+0x18],rcx
  409fb5:	mov    QWORD PTR [rbp+0x8],rcx
  409fb9:	jmp    409f6d <__gcov_sort_n_vals@@Base+0x173d>
  409fbb:	nop    DWORD PTR [rax+rax*1+0x0]
  409fc0:	lea    rdx,[rip+0x1ac0]        # 40ba87 <_IO_stdin_used@@Base+0xa87>
  409fc7:	mov    edi,0x18
  409fcc:	call   408120 <read_boolean_unary_expression@@Base+0x521>
  409fd1:	test   eax,eax
  409fd3:	mov    rax,QWORD PTR [rip+0x7e46]        # 411e20 <fff@@Base+0x1a0>
  409fda:	jne    409f9a <__gcov_sort_n_vals@@Base+0x176a>
  409fdc:	jmp    409f6d <__gcov_sort_n_vals@@Base+0x173d>
  409fde:	xchg   ax,ax
  409fe0:	endbr64 
  409fe4:	movabs rdx,0x5555555555555555
  409fee:	mov    rax,rdi
  409ff1:	shr    rax,1
  409ff4:	and    rax,rdx
  409ff7:	movabs rdx,0x3333333333333333
  40a001:	sub    rdi,rax
  40a004:	mov    rax,rdi
  40a007:	shr    rdi,0x2
  40a00b:	and    rax,rdx
  40a00e:	and    rdi,rdx
  40a011:	movabs rdx,0xf0f0f0f0f0f0f0f
  40a01b:	add    rdi,rax
  40a01e:	mov    rax,rdi
  40a021:	shr    rax,0x4
  40a025:	add    rax,rdi
  40a028:	and    rax,rdx
  40a02b:	movabs rdx,0x101010101010101
  40a035:	imul   rax,rdx
  40a039:	shr    rax,0x38
  40a03d:	ret    
  40a03e:	xchg   ax,ax

000000000040a040 <__libc_csu_init@@Base>:
  40a040:	endbr64 
  40a044:	push   r15
  40a046:	lea    r15,[rip+0x4d73]        # 40edc0 <_IO_stdin_used@@Base+0x3dc0>
  40a04d:	push   r14
  40a04f:	mov    r14,rdx
  40a052:	push   r13
  40a054:	mov    r13,rsi
  40a057:	push   r12
  40a059:	mov    r12d,edi
  40a05c:	push   rbp
  40a05d:	lea    rbp,[rip+0x4d84]        # 40ede8 <_IO_stdin_used@@Base+0x3de8>
  40a064:	push   rbx
  40a065:	sub    rbp,r15
  40a068:	sub    rsp,0x8
  40a06c:	call   402000 <getenv@plt-0x260>
  40a071:	sar    rbp,0x3
  40a075:	je     40a096 <__libc_csu_init@@Base+0x56>
  40a077:	xor    ebx,ebx
  40a079:	nop    DWORD PTR [rax+0x0]
  40a080:	mov    rdx,r14
  40a083:	mov    rsi,r13
  40a086:	mov    edi,r12d
  40a089:	call   QWORD PTR [r15+rbx*8]
  40a08d:	add    rbx,0x1
  40a091:	cmp    rbp,rbx
  40a094:	jne    40a080 <__libc_csu_init@@Base+0x40>
  40a096:	add    rsp,0x8
  40a09a:	pop    rbx
  40a09b:	pop    rbp
  40a09c:	pop    r12
  40a09e:	pop    r13
  40a0a0:	pop    r14
  40a0a2:	pop    r15
  40a0a4:	ret    
  40a0a5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000040a0b0 <__libc_csu_fini@@Base>:
  40a0b0:	endbr64 
  40a0b4:	ret    

Disassembly of section .fini:

000000000040a0b8 <.fini>:
  40a0b8:	endbr64 
  40a0bc:	sub    rsp,0x8
  40a0c0:	add    rsp,0x8
  40a0c4:	ret    
