
../repos/dvidelabs-flatcc-3b39ef7/samples/monster/monster:     file format elf64-x86-64


Disassembly of section .init:

0000000000403000 <.init>:
  403000:	endbr64 
  403004:	sub    rsp,0x8
  403008:	mov    rax,QWORD PTR [rip+0xffe9]        # 412ff8 <__gmon_start__>
  40300f:	test   rax,rax
  403012:	je     403016 <free@plt-0x1a>
  403014:	call   rax
  403016:	add    rsp,0x8
  40301a:	ret    

Disassembly of section .plt:

0000000000403020 <free@plt-0x10>:
  403020:	push   QWORD PTR [rip+0xffe2]        # 413008 <flatcc_builder_padding_base@@Base+0x56a8>
  403026:	jmp    QWORD PTR [rip+0xffe4]        # 413010 <flatcc_builder_padding_base@@Base+0x56b0>
  40302c:	nop    DWORD PTR [rax+0x0]

0000000000403030 <free@plt>:
  403030:	jmp    QWORD PTR [rip+0xffe2]        # 413018 <free@GLIBC_2.2.5>
  403036:	push   0x0
  40303b:	jmp    403020 <free@plt-0x10>

0000000000403040 <strncpy@plt>:
  403040:	jmp    QWORD PTR [rip+0xffda]        # 413020 <strncpy@GLIBC_2.2.5>
  403046:	push   0x1
  40304b:	jmp    403020 <free@plt-0x10>

0000000000403050 <strlen@plt>:
  403050:	jmp    QWORD PTR [rip+0xffd2]        # 413028 <strlen@GLIBC_2.2.5>
  403056:	push   0x2
  40305b:	jmp    403020 <free@plt-0x10>

0000000000403060 <printf@plt>:
  403060:	jmp    QWORD PTR [rip+0xffca]        # 413030 <printf@GLIBC_2.2.5>
  403066:	push   0x3
  40306b:	jmp    403020 <free@plt-0x10>

0000000000403070 <__assert_fail@plt>:
  403070:	jmp    QWORD PTR [rip+0xffc2]        # 413038 <__assert_fail@GLIBC_2.2.5>
  403076:	push   0x4
  40307b:	jmp    403020 <free@plt-0x10>

0000000000403080 <memset@plt>:
  403080:	jmp    QWORD PTR [rip+0xffba]        # 413040 <memset@GLIBC_2.2.5>
  403086:	push   0x5
  40308b:	jmp    403020 <free@plt-0x10>

0000000000403090 <memchr@plt>:
  403090:	jmp    QWORD PTR [rip+0xffb2]        # 413048 <memchr@GLIBC_2.2.5>
  403096:	push   0x6
  40309b:	jmp    403020 <free@plt-0x10>

00000000004030a0 <memcmp@plt>:
  4030a0:	jmp    QWORD PTR [rip+0xffaa]        # 413050 <memcmp@GLIBC_2.2.5>
  4030a6:	push   0x7
  4030ab:	jmp    403020 <free@plt-0x10>

00000000004030b0 <strcmp@plt>:
  4030b0:	jmp    QWORD PTR [rip+0xffa2]        # 413058 <strcmp@GLIBC_2.2.5>
  4030b6:	push   0x8
  4030bb:	jmp    403020 <free@plt-0x10>

00000000004030c0 <memcpy@plt>:
  4030c0:	jmp    QWORD PTR [rip+0xff9a]        # 413060 <memcpy@GLIBC_2.14>
  4030c6:	push   0x9
  4030cb:	jmp    403020 <free@plt-0x10>

00000000004030d0 <malloc@plt>:
  4030d0:	jmp    QWORD PTR [rip+0xff92]        # 413068 <malloc@GLIBC_2.2.5>
  4030d6:	push   0xa
  4030db:	jmp    403020 <free@plt-0x10>

00000000004030e0 <realloc@plt>:
  4030e0:	jmp    QWORD PTR [rip+0xff8a]        # 413070 <realloc@GLIBC_2.2.5>
  4030e6:	push   0xb
  4030eb:	jmp    403020 <free@plt-0x10>

00000000004030f0 <posix_memalign@plt>:
  4030f0:	jmp    QWORD PTR [rip+0xff82]        # 413078 <posix_memalign@GLIBC_2.2.5>
  4030f6:	push   0xc
  4030fb:	jmp    403020 <free@plt-0x10>

Disassembly of section .text:

0000000000403100 <_start@@Base>:
  403100:	endbr64 
  403104:	xor    ebp,ebp
  403106:	mov    r9,rdx
  403109:	pop    rsi
  40310a:	mov    rdx,rsp
  40310d:	and    rsp,0xfffffffffffffff0
  403111:	push   rax
  403112:	push   rsp
  403113:	mov    r8,0x40cc90
  40311a:	mov    rcx,0x40cc20
  403121:	mov    rdi,0x4054c0
  403128:	call   QWORD PTR [rip+0xfec2]        # 412ff0 <__libc_start_main@GLIBC_2.2.5>
  40312e:	hlt    
  40312f:	nop
  403130:	endbr64 
  403134:	ret    
  403135:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40313f:	nop
  403140:	mov    eax,0x413090
  403145:	cmp    rax,0x413090
  40314b:	je     403160 <_start@@Base+0x60>
  40314d:	mov    eax,0x0
  403152:	test   rax,rax
  403155:	je     403160 <_start@@Base+0x60>
  403157:	mov    edi,0x413090
  40315c:	jmp    rax
  40315e:	xchg   ax,ax
  403160:	ret    
  403161:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40316c:	nop    DWORD PTR [rax+0x0]
  403170:	mov    esi,0x413090
  403175:	sub    rsi,0x413090
  40317c:	mov    rax,rsi
  40317f:	shr    rsi,0x3f
  403183:	sar    rax,0x3
  403187:	add    rsi,rax
  40318a:	sar    rsi,1
  40318d:	je     4031a0 <_start@@Base+0xa0>
  40318f:	mov    eax,0x0
  403194:	test   rax,rax
  403197:	je     4031a0 <_start@@Base+0xa0>
  403199:	mov    edi,0x413090
  40319e:	jmp    rax
  4031a0:	ret    
  4031a1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4031ac:	nop    DWORD PTR [rax+0x0]
  4031b0:	endbr64 
  4031b4:	cmp    BYTE PTR [rip+0xfed5],0x0        # 413090 <__bss_start@@Base>
  4031bb:	jne    4031d0 <_start@@Base+0xd0>
  4031bd:	push   rbp
  4031be:	mov    rbp,rsp
  4031c1:	call   403140 <_start@@Base+0x40>
  4031c6:	mov    BYTE PTR [rip+0xfec3],0x1        # 413090 <__bss_start@@Base>
  4031cd:	pop    rbp
  4031ce:	ret    
  4031cf:	nop
  4031d0:	ret    
  4031d1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4031dc:	nop    DWORD PTR [rax+0x0]
  4031e0:	endbr64 
  4031e4:	jmp    403170 <_start@@Base+0x70>
  4031e6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004031f0 <create_monster_bottom_up@@Base>:
  4031f0:	push   rbp
  4031f1:	mov    rbp,rsp
  4031f4:	push   rbx
  4031f5:	sub    rsp,0xc8
  4031fc:	mov    QWORD PTR [rbp-0x10],rdi
  403200:	mov    DWORD PTR [rbp-0x14],esi
  403203:	mov    rdi,QWORD PTR [rbp-0x10]
  403207:	lea    rsi,[rip+0x9e02]        # 40d010 <_IO_stdin_used@@Base+0x10>
  40320e:	call   403430 <create_monster_bottom_up@@Base+0x240>
  403213:	mov    DWORD PTR [rbp-0x18],eax
  403216:	mov    WORD PTR [rbp-0x1a],0x3
  40321c:	mov    rdi,QWORD PTR [rbp-0x10]
  403220:	lea    rsi,[rip+0x9def]        # 40d016 <_IO_stdin_used@@Base+0x16>
  403227:	call   403430 <create_monster_bottom_up@@Base+0x240>
  40322c:	mov    DWORD PTR [rbp-0x20],eax
  40322f:	mov    WORD PTR [rbp-0x22],0x5
  403235:	mov    rdi,QWORD PTR [rbp-0x10]
  403239:	mov    esi,DWORD PTR [rbp-0x18]
  40323c:	movsx  edx,WORD PTR [rbp-0x1a]
  403240:	call   403460 <create_monster_bottom_up@@Base+0x270>
  403245:	mov    DWORD PTR [rbp-0x28],eax
  403248:	mov    rdi,QWORD PTR [rbp-0x10]
  40324c:	mov    esi,DWORD PTR [rbp-0x20]
  40324f:	movsx  edx,WORD PTR [rbp-0x22]
  403253:	call   403460 <create_monster_bottom_up@@Base+0x270>
  403258:	mov    DWORD PTR [rbp-0x2c],eax
  40325b:	mov    rdi,QWORD PTR [rbp-0x10]
  40325f:	lea    rsi,[rip+0x9db4]        # 40d01a <_IO_stdin_used@@Base+0x1a>
  403266:	call   403430 <create_monster_bottom_up@@Base+0x240>
  40326b:	mov    edx,0xa
  403270:	lea    rsi,[rbp-0x3a]
  403274:	mov    DWORD PTR [rbp-0x30],eax
  403277:	mov    rdi,QWORD PTR [rip+0xa69a]        # 40d918 <_IO_stdin_used@@Base+0x918>
  40327e:	mov    QWORD PTR [rbp-0x3a],rdi
  403282:	mov    cx,WORD PTR [rip+0xa697]        # 40d920 <_IO_stdin_used@@Base+0x920>
  403289:	mov    WORD PTR [rbp-0x32],cx
  40328d:	mov    rdi,QWORD PTR [rbp-0x10]
  403291:	call   4034e0 <create_monster_bottom_up@@Base+0x2f0>
  403296:	mov    DWORD PTR [rbp-0x40],eax
  403299:	mov    rdi,QWORD PTR [rbp-0x10]
  40329d:	call   403520 <create_monster_bottom_up@@Base+0x330>
  4032a2:	mov    rdi,QWORD PTR [rbp-0x10]
  4032a6:	mov    esi,DWORD PTR [rbp-0x28]
  4032a9:	mov    DWORD PTR [rbp-0x64],eax
  4032ac:	call   403540 <create_monster_bottom_up@@Base+0x350>
  4032b1:	mov    rdi,QWORD PTR [rbp-0x10]
  4032b5:	mov    esi,DWORD PTR [rbp-0x2c]
  4032b8:	mov    QWORD PTR [rbp-0x70],rax
  4032bc:	call   403540 <create_monster_bottom_up@@Base+0x350>
  4032c1:	mov    rdi,QWORD PTR [rbp-0x10]
  4032c5:	mov    QWORD PTR [rbp-0x78],rax
  4032c9:	call   403590 <create_monster_bottom_up@@Base+0x3a0>
  4032ce:	mov    DWORD PTR [rbp-0x44],eax
  4032d1:	mov    rdx,QWORD PTR [rip+0xa64c]        # 40d924 <_IO_stdin_used@@Base+0x924>
  4032d8:	mov    QWORD PTR [rbp-0x50],rdx
  4032dc:	mov    eax,DWORD PTR [rip+0xa64a]        # 40d92c <_IO_stdin_used@@Base+0x92c>
  4032e2:	mov    DWORD PTR [rbp-0x48],eax
  4032e5:	mov    WORD PTR [rbp-0x52],0x12c
  4032eb:	mov    WORD PTR [rbp-0x54],0x96
  4032f1:	mov    edi,DWORD PTR [rbp-0x2c]
  4032f4:	call   4035b0 <create_monster_bottom_up@@Base+0x3c0>
  4032f9:	mov    QWORD PTR [rbp-0x60],rax
  4032fd:	cmp    DWORD PTR [rbp-0x14],0x0
  403301:	jne    403367 <create_monster_bottom_up@@Base+0x177>
  403307:	xor    eax,eax
  403309:	mov    rdi,QWORD PTR [rbp-0x10]
  40330d:	mov    cx,WORD PTR [rbp-0x54]
  403311:	mov    dx,WORD PTR [rbp-0x52]
  403315:	mov    r8d,DWORD PTR [rbp-0x30]
  403319:	mov    r9d,DWORD PTR [rbp-0x40]
  40331d:	mov    esi,DWORD PTR [rbp-0x44]
  403320:	mov    r10,QWORD PTR [rbp-0x60]
  403324:	lea    r11,[rbp-0x50]
  403328:	mov    DWORD PTR [rbp-0x7c],esi
  40332b:	mov    rsi,r11
  40332e:	movsx  ebx,cx
  403331:	mov    WORD PTR [rbp-0x7e],dx
  403335:	mov    edx,ebx
  403337:	mov    cx,WORD PTR [rbp-0x7e]
  40333b:	movsx  ecx,cx
  40333e:	mov    DWORD PTR [rsp],0x0
  403345:	mov    ebx,DWORD PTR [rbp-0x7c]
  403348:	mov    DWORD PTR [rsp+0x8],ebx
  40334c:	mov    QWORD PTR [rsp+0x10],r10
  403351:	mov    DWORD PTR [rbp-0x84],eax
  403357:	call   4035d0 <create_monster_bottom_up@@Base+0x3e0>
  40335c:	mov    DWORD PTR [rbp-0x88],eax
  403362:	jmp    403419 <create_monster_bottom_up@@Base+0x229>
  403367:	mov    rdi,QWORD PTR [rbp-0x10]
  40336b:	call   4036b0 <create_monster_bottom_up@@Base+0x4c0>
  403370:	vmovss xmm0,DWORD PTR [rip+0x9c8c]        # 40d004 <_IO_stdin_used@@Base+0x4>
  403378:	vmovss xmm1,DWORD PTR [rip+0x9c88]        # 40d008 <_IO_stdin_used@@Base+0x8>
  403380:	vmovss xmm2,DWORD PTR [rip+0x9c84]        # 40d00c <_IO_stdin_used@@Base+0xc>
  403388:	mov    rdi,QWORD PTR [rbp-0x10]
  40338c:	mov    DWORD PTR [rbp-0x8c],eax
  403392:	call   403700 <create_monster_bottom_up@@Base+0x510>
  403397:	mov    rdi,QWORD PTR [rbp-0x10]
  40339b:	movsx  esi,WORD PTR [rbp-0x52]
  40339f:	mov    DWORD PTR [rbp-0x90],eax
  4033a5:	call   403770 <create_monster_bottom_up@@Base+0x580>
  4033aa:	mov    rdi,QWORD PTR [rbp-0x10]
  4033ae:	mov    esi,DWORD PTR [rbp-0x30]
  4033b1:	mov    DWORD PTR [rbp-0x94],eax
  4033b7:	call   4037f0 <create_monster_bottom_up@@Base+0x600>
  4033bc:	mov    rdi,QWORD PTR [rbp-0x10]
  4033c0:	mov    esi,DWORD PTR [rbp-0x40]
  4033c3:	mov    DWORD PTR [rbp-0x98],eax
  4033c9:	call   403850 <create_monster_bottom_up@@Base+0x660>
  4033ce:	xor    esi,esi
  4033d0:	mov    rdi,QWORD PTR [rbp-0x10]
  4033d4:	mov    DWORD PTR [rbp-0x9c],eax
  4033da:	call   4038b0 <create_monster_bottom_up@@Base+0x6c0>
  4033df:	mov    rdi,QWORD PTR [rbp-0x10]
  4033e3:	mov    esi,DWORD PTR [rbp-0x44]
  4033e6:	mov    DWORD PTR [rbp-0xa0],eax
  4033ec:	call   403930 <create_monster_bottom_up@@Base+0x740>
  4033f1:	mov    rdi,QWORD PTR [rbp-0x10]
  4033f5:	mov    rsi,QWORD PTR [rbp-0x60]
  4033f9:	mov    DWORD PTR [rbp-0xa4],eax
  4033ff:	call   403990 <create_monster_bottom_up@@Base+0x7a0>
  403404:	mov    rdi,QWORD PTR [rbp-0x10]
  403408:	mov    DWORD PTR [rbp-0xa8],eax
  40340e:	call   403a50 <create_monster_bottom_up@@Base+0x860>
  403413:	mov    DWORD PTR [rbp-0xac],eax
  403419:	xor    eax,eax
  40341b:	add    rsp,0xc8
  403422:	pop    rbx
  403423:	pop    rbp
  403424:	ret    
  403425:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40342f:	nop
  403430:	push   rbp
  403431:	mov    rbp,rsp
  403434:	sub    rsp,0x10
  403438:	mov    QWORD PTR [rbp-0x8],rdi
  40343c:	mov    QWORD PTR [rbp-0x10],rsi
  403440:	mov    rdi,QWORD PTR [rbp-0x8]
  403444:	mov    rsi,QWORD PTR [rbp-0x10]
  403448:	call   40b1e0 <flatcc_builder_create_string_str@@Base>
  40344d:	add    rsp,0x10
  403451:	pop    rbp
  403452:	ret    
  403453:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40345d:	nop    DWORD PTR [rax]
  403460:	push   rbp
  403461:	mov    rbp,rsp
  403464:	sub    rsp,0x20
  403468:	mov    ax,dx
  40346b:	mov    QWORD PTR [rbp-0x10],rdi
  40346f:	mov    DWORD PTR [rbp-0x14],esi
  403472:	mov    WORD PTR [rbp-0x16],ax
  403476:	mov    rdi,QWORD PTR [rbp-0x10]
  40347a:	call   405690 <main@@Base+0x1d0>
  40347f:	cmp    eax,0x0
  403482:	jne    4034b3 <create_monster_bottom_up@@Base+0x2c3>
  403488:	mov    rdi,QWORD PTR [rbp-0x10]
  40348c:	mov    esi,DWORD PTR [rbp-0x14]
  40348f:	call   4056b0 <main@@Base+0x1f0>
  403494:	cmp    eax,0x0
  403497:	jne    4034b3 <create_monster_bottom_up@@Base+0x2c3>
  40349d:	mov    rdi,QWORD PTR [rbp-0x10]
  4034a1:	movsx  esi,WORD PTR [rbp-0x16]
  4034a5:	call   405710 <main@@Base+0x250>
  4034aa:	cmp    eax,0x0
  4034ad:	je     4034bf <create_monster_bottom_up@@Base+0x2cf>
  4034b3:	mov    DWORD PTR [rbp-0x4],0x0
  4034ba:	jmp    4034cb <create_monster_bottom_up@@Base+0x2db>
  4034bf:	mov    rdi,QWORD PTR [rbp-0x10]
  4034c3:	call   4057a0 <main@@Base+0x2e0>
  4034c8:	mov    DWORD PTR [rbp-0x4],eax
  4034cb:	mov    eax,DWORD PTR [rbp-0x4]
  4034ce:	add    rsp,0x20
  4034d2:	pop    rbp
  4034d3:	ret    
  4034d4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4034de:	xchg   ax,ax
  4034e0:	push   rbp
  4034e1:	mov    rbp,rsp
  4034e4:	sub    rsp,0x20
  4034e8:	mov    eax,0x1
  4034ed:	mov    ecx,eax
  4034ef:	mov    eax,0xffffffff
  4034f4:	mov    r9d,eax
  4034f7:	mov    QWORD PTR [rbp-0x8],rdi
  4034fb:	mov    QWORD PTR [rbp-0x10],rsi
  4034ff:	mov    QWORD PTR [rbp-0x18],rdx
  403503:	mov    rdi,QWORD PTR [rbp-0x8]
  403507:	mov    rsi,QWORD PTR [rbp-0x10]
  40350b:	mov    rdx,QWORD PTR [rbp-0x18]
  40350f:	mov    r8d,0x1
  403515:	call   409c30 <flatcc_builder_create_vector@@Base>
  40351a:	add    rsp,0x20
  40351e:	pop    rbp
  40351f:	ret    
  403520:	push   rbp
  403521:	mov    rbp,rsp
  403524:	sub    rsp,0x10
  403528:	mov    QWORD PTR [rbp-0x8],rdi
  40352c:	mov    rdi,QWORD PTR [rbp-0x8]
  403530:	call   408a00 <flatcc_builder_start_offset_vector@@Base>
  403535:	add    rsp,0x10
  403539:	pop    rbp
  40353a:	ret    
  40353b:	nop    DWORD PTR [rax+rax*1+0x0]
  403540:	push   rbp
  403541:	mov    rbp,rsp
  403544:	sub    rsp,0x20
  403548:	mov    QWORD PTR [rbp-0x8],rdi
  40354c:	mov    DWORD PTR [rbp-0xc],esi
  40354f:	cmp    DWORD PTR [rbp-0xc],0x0
  403553:	je     40356e <create_monster_bottom_up@@Base+0x37e>
  403559:	mov    rdi,QWORD PTR [rbp-0x8]
  40355d:	mov    esi,DWORD PTR [rbp-0xc]
  403560:	call   408250 <flatcc_builder_offset_vector_push@@Base>
  403565:	mov    QWORD PTR [rbp-0x18],rax
  403569:	jmp    40357b <create_monster_bottom_up@@Base+0x38b>
  40356e:	xor    eax,eax
  403570:	mov    ecx,eax
  403572:	mov    QWORD PTR [rbp-0x18],rcx
  403576:	jmp    40357b <create_monster_bottom_up@@Base+0x38b>
  40357b:	mov    rax,QWORD PTR [rbp-0x18]
  40357f:	add    rsp,0x20
  403583:	pop    rbp
  403584:	ret    
  403585:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40358f:	nop
  403590:	push   rbp
  403591:	mov    rbp,rsp
  403594:	sub    rsp,0x10
  403598:	mov    QWORD PTR [rbp-0x8],rdi
  40359c:	mov    rdi,QWORD PTR [rbp-0x8]
  4035a0:	call   408b10 <flatcc_builder_end_offset_vector@@Base>
  4035a5:	add    rsp,0x10
  4035a9:	pop    rbp
  4035aa:	ret    
  4035ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4035b0:	push   rbp
  4035b1:	mov    rbp,rsp
  4035b4:	mov    DWORD PTR [rbp-0xc],edi
  4035b7:	mov    BYTE PTR [rbp-0x8],0x1
  4035bb:	mov    edi,DWORD PTR [rbp-0xc]
  4035be:	mov    DWORD PTR [rbp-0x4],edi
  4035c1:	mov    rax,QWORD PTR [rbp-0x8]
  4035c5:	pop    rbp
  4035c6:	ret    
  4035c7:	nop    WORD PTR [rax+rax*1+0x0]
  4035d0:	push   rbp
  4035d1:	mov    rbp,rsp
  4035d4:	push   r14
  4035d6:	push   rbx
  4035d7:	sub    rsp,0x60
  4035db:	mov    ax,cx
  4035de:	mov    r10w,dx
  4035e2:	mov    r11,QWORD PTR [rbp+0x20]
  4035e6:	mov    ecx,DWORD PTR [rbp+0x18]
  4035e9:	mov    bl,BYTE PTR [rbp+0x10]
  4035ec:	xor    edx,edx
  4035ee:	mov    r14d,edx
  4035f1:	mov    QWORD PTR [rbp-0x20],rdi
  4035f5:	mov    QWORD PTR [rbp-0x28],rsi
  4035f9:	mov    WORD PTR [rbp-0x2a],r10w
  4035fe:	mov    WORD PTR [rbp-0x2c],ax
  403602:	mov    DWORD PTR [rbp-0x30],r8d
  403606:	mov    DWORD PTR [rbp-0x34],r9d
  40360a:	mov    rdi,QWORD PTR [rbp-0x20]
  40360e:	mov    rsi,r14
  403611:	mov    BYTE PTR [rbp-0x35],bl
  403614:	mov    DWORD PTR [rbp-0x3c],ecx
  403617:	mov    QWORD PTR [rbp-0x48],r11
  40361b:	call   405850 <main@@Base+0x390>
  403620:	cmp    eax,0x0
  403623:	je     403635 <create_monster_bottom_up@@Base+0x445>
  403629:	mov    DWORD PTR [rbp-0x14],0x0
  403630:	jmp    40369b <create_monster_bottom_up@@Base+0x4ab>
  403635:	mov    rdi,QWORD PTR [rbp-0x20]
  403639:	mov    rax,QWORD PTR [rbp-0x20]
  40363d:	mov    rsi,QWORD PTR [rbp-0x28]
  403641:	mov    cx,WORD PTR [rbp-0x2a]
  403645:	mov    dx,WORD PTR [rbp-0x2c]
  403649:	mov    r8d,DWORD PTR [rbp-0x30]
  40364d:	mov    r9d,DWORD PTR [rbp-0x34]
  403651:	mov    r10b,BYTE PTR [rbp+0x10]
  403655:	mov    r11d,DWORD PTR [rbp+0x18]
  403659:	mov    rbx,QWORD PTR [rbp+0x20]
  40365d:	mov    QWORD PTR [rbp-0x50],rdi
  403661:	mov    rdi,rax
  403664:	movsx  r14d,cx
  403668:	mov    WORD PTR [rbp-0x52],dx
  40366c:	mov    edx,r14d
  40366f:	mov    cx,WORD PTR [rbp-0x52]
  403673:	movsx  ecx,cx
  403676:	movsx  r14d,r10b
  40367a:	mov    DWORD PTR [rsp],r14d
  40367e:	mov    DWORD PTR [rsp+0x8],r11d
  403683:	mov    QWORD PTR [rsp+0x10],rbx
  403688:	call   4058b0 <main@@Base+0x3f0>
  40368d:	mov    rdi,QWORD PTR [rbp-0x50]
  403691:	mov    esi,eax
  403693:	call   405880 <main@@Base+0x3c0>
  403698:	mov    DWORD PTR [rbp-0x14],eax
  40369b:	mov    eax,DWORD PTR [rbp-0x14]
  40369e:	add    rsp,0x60
  4036a2:	pop    rbx
  4036a3:	pop    r14
  4036a5:	pop    rbp
  4036a6:	ret    
  4036a7:	nop    WORD PTR [rax+rax*1+0x0]
  4036b0:	push   rbp
  4036b1:	mov    rbp,rsp
  4036b4:	sub    rsp,0x10
  4036b8:	xor    eax,eax
  4036ba:	mov    esi,eax
  4036bc:	mov    QWORD PTR [rbp-0x8],rdi
  4036c0:	mov    rdi,QWORD PTR [rbp-0x8]
  4036c4:	call   405850 <main@@Base+0x390>
  4036c9:	cmp    eax,0x0
  4036cc:	je     4036df <create_monster_bottom_up@@Base+0x4ef>
  4036d2:	mov    eax,0xffffffff
  4036d7:	mov    DWORD PTR [rbp-0xc],eax
  4036da:	jmp    4036eb <create_monster_bottom_up@@Base+0x4fb>
  4036df:	mov    rdi,QWORD PTR [rbp-0x8]
  4036e3:	call   4059f0 <main@@Base+0x530>
  4036e8:	mov    DWORD PTR [rbp-0xc],eax
  4036eb:	mov    eax,DWORD PTR [rbp-0xc]
  4036ee:	add    rsp,0x10
  4036f2:	pop    rbp
  4036f3:	ret    
  4036f4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4036fe:	xchg   ax,ax
  403700:	push   rbp
  403701:	mov    rbp,rsp
  403704:	sub    rsp,0x30
  403708:	mov    QWORD PTR [rbp-0x10],rdi
  40370c:	vmovss DWORD PTR [rbp-0x14],xmm0
  403711:	vmovss DWORD PTR [rbp-0x18],xmm1
  403716:	vmovss DWORD PTR [rbp-0x1c],xmm2
  40371b:	mov    rdi,QWORD PTR [rbp-0x10]
  40371f:	call   405c70 <main@@Base+0x7b0>
  403724:	mov    QWORD PTR [rbp-0x28],rax
  403728:	cmp    QWORD PTR [rbp-0x28],0x0
  40372d:	jne    40373f <create_monster_bottom_up@@Base+0x54f>
  403733:	mov    DWORD PTR [rbp-0x4],0x0
  40373a:	jmp    403762 <create_monster_bottom_up@@Base+0x572>
  40373f:	mov    rdi,QWORD PTR [rbp-0x28]
  403743:	vmovss xmm0,DWORD PTR [rbp-0x14]
  403748:	vmovss xmm1,DWORD PTR [rbp-0x18]
  40374d:	vmovss xmm2,DWORD PTR [rbp-0x1c]
  403752:	call   405d70 <main@@Base+0x8b0>
  403757:	mov    DWORD PTR [rbp-0x4],0x0
  40375e:	mov    QWORD PTR [rbp-0x30],rax
  403762:	mov    eax,DWORD PTR [rbp-0x4]
  403765:	add    rsp,0x30
  403769:	pop    rbp
  40376a:	ret    
  40376b:	nop    DWORD PTR [rax+rax*1+0x0]
  403770:	push   rbp
  403771:	mov    rbp,rsp
  403774:	sub    rsp,0x30
  403778:	mov    ax,si
  40377b:	mov    QWORD PTR [rbp-0x10],rdi
  40377f:	mov    WORD PTR [rbp-0x12],ax
  403783:	movsx  esi,WORD PTR [rbp-0x12]
  403787:	cmp    esi,0x64
  40378a:	jne    40379c <create_monster_bottom_up@@Base+0x5ac>
  403790:	mov    DWORD PTR [rbp-0x4],0x0
  403797:	jmp    4037e7 <create_monster_bottom_up@@Base+0x5f7>
  40379c:	mov    eax,0x2
  4037a1:	mov    edx,eax
  4037a3:	mov    rdi,QWORD PTR [rbp-0x10]
  4037a7:	mov    eax,0x2
  4037ac:	mov    esi,eax
  4037ae:	mov    ecx,eax
  4037b0:	call   40a650 <flatcc_builder_table_add@@Base>
  4037b5:	mov    QWORD PTR [rbp-0x20],rax
  4037b9:	cmp    rax,0x0
  4037bd:	jne    4037cf <create_monster_bottom_up@@Base+0x5df>
  4037c3:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4037ca:	jmp    4037e7 <create_monster_bottom_up@@Base+0x5f7>
  4037cf:	mov    rdi,QWORD PTR [rbp-0x20]
  4037d3:	movsx  esi,WORD PTR [rbp-0x12]
  4037d7:	call   405800 <main@@Base+0x340>
  4037dc:	mov    DWORD PTR [rbp-0x4],0x0
  4037e3:	mov    QWORD PTR [rbp-0x28],rax
  4037e7:	mov    eax,DWORD PTR [rbp-0x4]
  4037ea:	add    rsp,0x30
  4037ee:	pop    rbp
  4037ef:	ret    
  4037f0:	push   rbp
  4037f1:	mov    rbp,rsp
  4037f4:	sub    rsp,0x20
  4037f8:	mov    QWORD PTR [rbp-0x8],rdi
  4037fc:	mov    DWORD PTR [rbp-0xc],esi
  4037ff:	cmp    DWORD PTR [rbp-0xc],0x0
  403803:	je     403838 <create_monster_bottom_up@@Base+0x648>
  403809:	mov    rdi,QWORD PTR [rbp-0x8]
  40380d:	mov    esi,0x3
  403812:	call   40a550 <flatcc_builder_table_add_offset@@Base>
  403817:	mov    QWORD PTR [rbp-0x18],rax
  40381b:	cmp    rax,0x0
  40381f:	je     403838 <create_monster_bottom_up@@Base+0x648>
  403825:	xor    eax,eax
  403827:	mov    ecx,DWORD PTR [rbp-0xc]
  40382a:	mov    rdx,QWORD PTR [rbp-0x18]
  40382e:	mov    DWORD PTR [rdx],ecx
  403830:	mov    DWORD PTR [rbp-0x1c],eax
  403833:	jmp    403845 <create_monster_bottom_up@@Base+0x655>
  403838:	mov    eax,0xffffffff
  40383d:	mov    DWORD PTR [rbp-0x1c],eax
  403840:	jmp    403845 <create_monster_bottom_up@@Base+0x655>
  403845:	mov    eax,DWORD PTR [rbp-0x1c]
  403848:	add    rsp,0x20
  40384c:	pop    rbp
  40384d:	ret    
  40384e:	xchg   ax,ax
  403850:	push   rbp
  403851:	mov    rbp,rsp
  403854:	sub    rsp,0x20
  403858:	mov    QWORD PTR [rbp-0x8],rdi
  40385c:	mov    DWORD PTR [rbp-0xc],esi
  40385f:	cmp    DWORD PTR [rbp-0xc],0x0
  403863:	je     403898 <create_monster_bottom_up@@Base+0x6a8>
  403869:	mov    rdi,QWORD PTR [rbp-0x8]
  40386d:	mov    esi,0x5
  403872:	call   40a550 <flatcc_builder_table_add_offset@@Base>
  403877:	mov    QWORD PTR [rbp-0x18],rax
  40387b:	cmp    rax,0x0
  40387f:	je     403898 <create_monster_bottom_up@@Base+0x6a8>
  403885:	xor    eax,eax
  403887:	mov    ecx,DWORD PTR [rbp-0xc]
  40388a:	mov    rdx,QWORD PTR [rbp-0x18]
  40388e:	mov    DWORD PTR [rdx],ecx
  403890:	mov    DWORD PTR [rbp-0x1c],eax
  403893:	jmp    4038a5 <create_monster_bottom_up@@Base+0x6b5>
  403898:	mov    eax,0xffffffff
  40389d:	mov    DWORD PTR [rbp-0x1c],eax
  4038a0:	jmp    4038a5 <create_monster_bottom_up@@Base+0x6b5>
  4038a5:	mov    eax,DWORD PTR [rbp-0x1c]
  4038a8:	add    rsp,0x20
  4038ac:	pop    rbp
  4038ad:	ret    
  4038ae:	xchg   ax,ax
  4038b0:	push   rbp
  4038b1:	mov    rbp,rsp
  4038b4:	sub    rsp,0x30
  4038b8:	mov    al,sil
  4038bb:	mov    QWORD PTR [rbp-0x10],rdi
  4038bf:	mov    BYTE PTR [rbp-0x11],al
  4038c2:	movsx  esi,BYTE PTR [rbp-0x11]
  4038c6:	cmp    esi,0x2
  4038c9:	jne    4038db <create_monster_bottom_up@@Base+0x6eb>
  4038cf:	mov    DWORD PTR [rbp-0x4],0x0
  4038d6:	jmp    403927 <create_monster_bottom_up@@Base+0x737>
  4038db:	mov    eax,0x1
  4038e0:	mov    edx,eax
  4038e2:	mov    rdi,QWORD PTR [rbp-0x10]
  4038e6:	mov    esi,0x6
  4038eb:	mov    ecx,0x1
  4038f0:	call   40a650 <flatcc_builder_table_add@@Base>
  4038f5:	mov    QWORD PTR [rbp-0x20],rax
  4038f9:	cmp    rax,0x0
  4038fd:	jne    40390f <create_monster_bottom_up@@Base+0x71f>
  403903:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40390a:	jmp    403927 <create_monster_bottom_up@@Base+0x737>
  40390f:	mov    rdi,QWORD PTR [rbp-0x20]
  403913:	movsx  esi,BYTE PTR [rbp-0x11]
  403917:	call   405e10 <main@@Base+0x950>
  40391c:	mov    DWORD PTR [rbp-0x4],0x0
  403923:	mov    QWORD PTR [rbp-0x28],rax
  403927:	mov    eax,DWORD PTR [rbp-0x4]
  40392a:	add    rsp,0x30
  40392e:	pop    rbp
  40392f:	ret    
  403930:	push   rbp
  403931:	mov    rbp,rsp
  403934:	sub    rsp,0x20
  403938:	mov    QWORD PTR [rbp-0x8],rdi
  40393c:	mov    DWORD PTR [rbp-0xc],esi
  40393f:	cmp    DWORD PTR [rbp-0xc],0x0
  403943:	je     403978 <create_monster_bottom_up@@Base+0x788>
  403949:	mov    rdi,QWORD PTR [rbp-0x8]
  40394d:	mov    esi,0x7
  403952:	call   40a550 <flatcc_builder_table_add_offset@@Base>
  403957:	mov    QWORD PTR [rbp-0x18],rax
  40395b:	cmp    rax,0x0
  40395f:	je     403978 <create_monster_bottom_up@@Base+0x788>
  403965:	xor    eax,eax
  403967:	mov    ecx,DWORD PTR [rbp-0xc]
  40396a:	mov    rdx,QWORD PTR [rbp-0x18]
  40396e:	mov    DWORD PTR [rdx],ecx
  403970:	mov    DWORD PTR [rbp-0x1c],eax
  403973:	jmp    403985 <create_monster_bottom_up@@Base+0x795>
  403978:	mov    eax,0xffffffff
  40397d:	mov    DWORD PTR [rbp-0x1c],eax
  403980:	jmp    403985 <create_monster_bottom_up@@Base+0x795>
  403985:	mov    eax,DWORD PTR [rbp-0x1c]
  403988:	add    rsp,0x20
  40398c:	pop    rbp
  40398d:	ret    
  40398e:	xchg   ax,ax
  403990:	push   rbp
  403991:	mov    rbp,rsp
  403994:	sub    rsp,0x30
  403998:	mov    QWORD PTR [rbp-0x10],rsi
  40399c:	mov    QWORD PTR [rbp-0x18],rdi
  4039a0:	movzx  eax,BYTE PTR [rbp-0x10]
  4039a4:	cmp    eax,0x0
  4039a7:	jne    4039b9 <create_monster_bottom_up@@Base+0x7c9>
  4039ad:	mov    DWORD PTR [rbp-0x4],0x0
  4039b4:	jmp    403a38 <create_monster_bottom_up@@Base+0x848>
  4039b9:	cmp    DWORD PTR [rbp-0xc],0x0
  4039bd:	jne    4039cf <create_monster_bottom_up@@Base+0x7df>
  4039c3:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4039ca:	jmp    403a38 <create_monster_bottom_up@@Base+0x848>
  4039cf:	mov    eax,0x1
  4039d4:	mov    edx,eax
  4039d6:	mov    rdi,QWORD PTR [rbp-0x18]
  4039da:	mov    esi,0x8
  4039df:	mov    ecx,0x1
  4039e4:	call   40a650 <flatcc_builder_table_add@@Base>
  4039e9:	mov    QWORD PTR [rbp-0x28],rax
  4039ed:	cmp    rax,0x0
  4039f1:	je     403a13 <create_monster_bottom_up@@Base+0x823>
  4039f7:	mov    rdi,QWORD PTR [rbp-0x18]
  4039fb:	mov    esi,0x9
  403a00:	call   40a550 <flatcc_builder_table_add_offset@@Base>
  403a05:	mov    QWORD PTR [rbp-0x20],rax
  403a09:	cmp    rax,0x0
  403a0d:	jne    403a1f <create_monster_bottom_up@@Base+0x82f>
  403a13:	mov    DWORD PTR [rbp-0x4],0xffffffff
  403a1a:	jmp    403a38 <create_monster_bottom_up@@Base+0x848>
  403a1f:	mov    al,BYTE PTR [rbp-0x10]
  403a22:	mov    rcx,QWORD PTR [rbp-0x28]
  403a26:	mov    BYTE PTR [rcx],al
  403a28:	mov    edx,DWORD PTR [rbp-0xc]
  403a2b:	mov    rcx,QWORD PTR [rbp-0x20]
  403a2f:	mov    DWORD PTR [rcx],edx
  403a31:	mov    DWORD PTR [rbp-0x4],0x0
  403a38:	mov    eax,DWORD PTR [rbp-0x4]
  403a3b:	add    rsp,0x30
  403a3f:	pop    rbp
  403a40:	ret    
  403a41:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403a4b:	nop    DWORD PTR [rax+rax*1+0x0]
  403a50:	push   rbp
  403a51:	mov    rbp,rsp
  403a54:	sub    rsp,0x10
  403a58:	mov    QWORD PTR [rbp-0x8],rdi
  403a5c:	mov    rdi,QWORD PTR [rbp-0x8]
  403a60:	mov    rax,QWORD PTR [rbp-0x8]
  403a64:	mov    QWORD PTR [rbp-0x10],rdi
  403a68:	mov    rdi,rax
  403a6b:	call   405c10 <main@@Base+0x750>
  403a70:	mov    rdi,QWORD PTR [rbp-0x10]
  403a74:	mov    esi,eax
  403a76:	call   405880 <main@@Base+0x3c0>
  403a7b:	add    rsp,0x10
  403a7f:	pop    rbp
  403a80:	ret    
  403a81:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403a8b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403a90 <create_monster_top_down@@Base>:
  403a90:	push   rbp
  403a91:	mov    rbp,rsp
  403a94:	sub    rsp,0x70
  403a98:	mov    QWORD PTR [rbp-0x8],rdi
  403a9c:	mov    rdi,QWORD PTR [rip+0x9e8d]        # 40d930 <_IO_stdin_used@@Base+0x930>
  403aa3:	mov    QWORD PTR [rbp-0x12],rdi
  403aa7:	mov    ax,WORD PTR [rip+0x9e8a]        # 40d938 <_IO_stdin_used@@Base+0x938>
  403aae:	mov    WORD PTR [rbp-0xa],ax
  403ab2:	mov    QWORD PTR [rbp-0x20],0xa
  403aba:	mov    rdi,QWORD PTR [rbp-0x8]
  403abe:	call   4036b0 <create_monster_bottom_up@@Base+0x4c0>
  403ac3:	vmovss xmm0,DWORD PTR [rip+0x9539]        # 40d004 <_IO_stdin_used@@Base+0x4>
  403acb:	vmovss xmm1,DWORD PTR [rip+0x9535]        # 40d008 <_IO_stdin_used@@Base+0x8>
  403ad3:	vmovss xmm2,DWORD PTR [rip+0x9531]        # 40d00c <_IO_stdin_used@@Base+0xc>
  403adb:	mov    rdi,QWORD PTR [rbp-0x8]
  403adf:	mov    DWORD PTR [rbp-0x28],eax
  403ae2:	call   403700 <create_monster_bottom_up@@Base+0x510>
  403ae7:	mov    rdi,QWORD PTR [rbp-0x8]
  403aeb:	mov    esi,0x12c
  403af0:	mov    DWORD PTR [rbp-0x2c],eax
  403af3:	call   403770 <create_monster_bottom_up@@Base+0x580>
  403af8:	mov    rdi,QWORD PTR [rbp-0x8]
  403afc:	lea    rsi,[rip+0x9517]        # 40d01a <_IO_stdin_used@@Base+0x1a>
  403b03:	mov    DWORD PTR [rbp-0x30],eax
  403b06:	call   403bd0 <create_monster_top_down@@Base+0x140>
  403b0b:	lea    rsi,[rbp-0x12]
  403b0f:	mov    rdi,QWORD PTR [rbp-0x8]
  403b13:	mov    rdx,QWORD PTR [rbp-0x20]
  403b17:	mov    DWORD PTR [rbp-0x34],eax
  403b1a:	call   403c10 <create_monster_top_down@@Base+0x180>
  403b1f:	xor    esi,esi
  403b21:	mov    rdi,QWORD PTR [rbp-0x8]
  403b25:	mov    DWORD PTR [rbp-0x38],eax
  403b28:	call   4038b0 <create_monster_bottom_up@@Base+0x6c0>
  403b2d:	mov    rdi,QWORD PTR [rbp-0x8]
  403b31:	mov    DWORD PTR [rbp-0x3c],eax
  403b34:	call   403c60 <create_monster_top_down@@Base+0x1d0>
  403b39:	mov    rdi,QWORD PTR [rbp-0x8]
  403b3d:	mov    rdx,QWORD PTR [rbp-0x8]
  403b41:	mov    QWORD PTR [rbp-0x48],rdi
  403b45:	mov    rdi,rdx
  403b48:	lea    rsi,[rip+0x94c1]        # 40d010 <_IO_stdin_used@@Base+0x10>
  403b4f:	mov    DWORD PTR [rbp-0x4c],eax
  403b52:	call   403430 <create_monster_bottom_up@@Base+0x240>
  403b57:	mov    rdi,QWORD PTR [rbp-0x48]
  403b5b:	mov    esi,eax
  403b5d:	mov    edx,0x3
  403b62:	call   403c80 <create_monster_top_down@@Base+0x1f0>
  403b67:	mov    rdi,QWORD PTR [rbp-0x8]
  403b6b:	mov    rcx,QWORD PTR [rbp-0x8]
  403b6f:	mov    QWORD PTR [rbp-0x58],rdi
  403b73:	mov    rdi,rcx
  403b76:	lea    rsi,[rip+0x9499]        # 40d016 <_IO_stdin_used@@Base+0x16>
  403b7d:	mov    QWORD PTR [rbp-0x60],rax
  403b81:	call   403430 <create_monster_bottom_up@@Base+0x240>
  403b86:	mov    rdi,QWORD PTR [rbp-0x58]
  403b8a:	mov    esi,eax
  403b8c:	mov    edx,0x5
  403b91:	call   403c80 <create_monster_top_down@@Base+0x1f0>
  403b96:	mov    edx,DWORD PTR [rax]
  403b98:	mov    DWORD PTR [rbp-0x24],edx
  403b9b:	mov    rdi,QWORD PTR [rbp-0x8]
  403b9f:	call   403cd0 <create_monster_top_down@@Base+0x240>
  403ba4:	mov    rdi,QWORD PTR [rbp-0x8]
  403ba8:	mov    esi,DWORD PTR [rbp-0x24]
  403bab:	mov    DWORD PTR [rbp-0x64],eax
  403bae:	call   403d10 <create_monster_top_down@@Base+0x280>
  403bb3:	mov    rdi,QWORD PTR [rbp-0x8]
  403bb7:	mov    DWORD PTR [rbp-0x68],eax
  403bba:	call   403a50 <create_monster_bottom_up@@Base+0x860>
  403bbf:	xor    edx,edx
  403bc1:	mov    DWORD PTR [rbp-0x6c],eax
  403bc4:	mov    eax,edx
  403bc6:	add    rsp,0x70
  403bca:	pop    rbp
  403bcb:	ret    
  403bcc:	nop    DWORD PTR [rax+0x0]
  403bd0:	push   rbp
  403bd1:	mov    rbp,rsp
  403bd4:	sub    rsp,0x20
  403bd8:	mov    QWORD PTR [rbp-0x8],rdi
  403bdc:	mov    QWORD PTR [rbp-0x10],rsi
  403be0:	mov    rdi,QWORD PTR [rbp-0x8]
  403be4:	mov    rsi,QWORD PTR [rbp-0x8]
  403be8:	mov    rax,QWORD PTR [rbp-0x10]
  403bec:	mov    QWORD PTR [rbp-0x18],rdi
  403bf0:	mov    rdi,rsi
  403bf3:	mov    rsi,rax
  403bf6:	call   40b1e0 <flatcc_builder_create_string_str@@Base>
  403bfb:	mov    rdi,QWORD PTR [rbp-0x18]
  403bff:	mov    esi,eax
  403c01:	call   4037f0 <create_monster_bottom_up@@Base+0x600>
  403c06:	add    rsp,0x20
  403c0a:	pop    rbp
  403c0b:	ret    
  403c0c:	nop    DWORD PTR [rax+0x0]
  403c10:	push   rbp
  403c11:	mov    rbp,rsp
  403c14:	sub    rsp,0x20
  403c18:	mov    QWORD PTR [rbp-0x8],rdi
  403c1c:	mov    QWORD PTR [rbp-0x10],rsi
  403c20:	mov    QWORD PTR [rbp-0x18],rdx
  403c24:	mov    rdi,QWORD PTR [rbp-0x8]
  403c28:	mov    rdx,QWORD PTR [rbp-0x8]
  403c2c:	mov    rsi,QWORD PTR [rbp-0x10]
  403c30:	mov    rax,QWORD PTR [rbp-0x18]
  403c34:	mov    QWORD PTR [rbp-0x20],rdi
  403c38:	mov    rdi,rdx
  403c3b:	mov    rdx,rax
  403c3e:	call   4034e0 <create_monster_bottom_up@@Base+0x2f0>
  403c43:	mov    rdi,QWORD PTR [rbp-0x20]
  403c47:	mov    esi,eax
  403c49:	call   403850 <create_monster_bottom_up@@Base+0x660>
  403c4e:	add    rsp,0x20
  403c52:	pop    rbp
  403c53:	ret    
  403c54:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403c5e:	xchg   ax,ax
  403c60:	push   rbp
  403c61:	mov    rbp,rsp
  403c64:	sub    rsp,0x10
  403c68:	mov    QWORD PTR [rbp-0x8],rdi
  403c6c:	mov    rdi,QWORD PTR [rbp-0x8]
  403c70:	call   408a00 <flatcc_builder_start_offset_vector@@Base>
  403c75:	add    rsp,0x10
  403c79:	pop    rbp
  403c7a:	ret    
  403c7b:	nop    DWORD PTR [rax+rax*1+0x0]
  403c80:	push   rbp
  403c81:	mov    rbp,rsp
  403c84:	sub    rsp,0x20
  403c88:	mov    ax,dx
  403c8b:	mov    QWORD PTR [rbp-0x8],rdi
  403c8f:	mov    DWORD PTR [rbp-0xc],esi
  403c92:	mov    WORD PTR [rbp-0xe],ax
  403c96:	mov    rdi,QWORD PTR [rbp-0x8]
  403c9a:	mov    rcx,QWORD PTR [rbp-0x8]
  403c9e:	mov    esi,DWORD PTR [rbp-0xc]
  403ca1:	mov    QWORD PTR [rbp-0x18],rdi
  403ca5:	mov    rdi,rcx
  403ca8:	movsx  edx,WORD PTR [rbp-0xe]
  403cac:	call   403460 <create_monster_bottom_up@@Base+0x270>
  403cb1:	mov    rdi,QWORD PTR [rbp-0x18]
  403cb5:	mov    esi,eax
  403cb7:	call   405e50 <main@@Base+0x990>
  403cbc:	add    rsp,0x20
  403cc0:	pop    rbp
  403cc1:	ret    
  403cc2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403ccc:	nop    DWORD PTR [rax+0x0]
  403cd0:	push   rbp
  403cd1:	mov    rbp,rsp
  403cd4:	sub    rsp,0x10
  403cd8:	mov    QWORD PTR [rbp-0x8],rdi
  403cdc:	mov    rdi,QWORD PTR [rbp-0x8]
  403ce0:	mov    rax,QWORD PTR [rbp-0x8]
  403ce4:	mov    QWORD PTR [rbp-0x10],rdi
  403ce8:	mov    rdi,rax
  403ceb:	call   408b10 <flatcc_builder_end_offset_vector@@Base>
  403cf0:	mov    rdi,QWORD PTR [rbp-0x10]
  403cf4:	mov    esi,eax
  403cf6:	call   403930 <create_monster_bottom_up@@Base+0x740>
  403cfb:	add    rsp,0x10
  403cff:	pop    rbp
  403d00:	ret    
  403d01:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403d0b:	nop    DWORD PTR [rax+rax*1+0x0]
  403d10:	push   rbp
  403d11:	mov    rbp,rsp
  403d14:	sub    rsp,0x20
  403d18:	mov    QWORD PTR [rbp-0x8],rdi
  403d1c:	mov    DWORD PTR [rbp-0xc],esi
  403d1f:	mov    rdi,QWORD PTR [rbp-0x8]
  403d23:	mov    esi,DWORD PTR [rbp-0xc]
  403d26:	mov    QWORD PTR [rbp-0x20],rdi
  403d2a:	mov    edi,esi
  403d2c:	call   4035b0 <create_monster_bottom_up@@Base+0x3c0>
  403d31:	mov    QWORD PTR [rbp-0x18],rax
  403d35:	mov    rsi,QWORD PTR [rbp-0x18]
  403d39:	mov    rdi,QWORD PTR [rbp-0x20]
  403d3d:	call   403990 <create_monster_bottom_up@@Base+0x7a0>
  403d42:	add    rsp,0x20
  403d46:	pop    rbp
  403d47:	ret    
  403d48:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403d50 <access_monster_buffer@@Base>:
  403d50:	push   rbp
  403d51:	mov    rbp,rsp
  403d54:	sub    rsp,0xb0
  403d5b:	mov    QWORD PTR [rbp-0x8],rdi
  403d5f:	mov    rdi,QWORD PTR [rbp-0x8]
  403d63:	call   404410 <access_monster_buffer@@Base+0x6c0>
  403d68:	mov    QWORD PTR [rbp-0x10],rax
  403d6c:	cmp    QWORD PTR [rbp-0x10],0x0
  403d71:	jne    403d96 <access_monster_buffer@@Base+0x46>
  403d77:	lea    rdi,[rip+0xafb4]        # 40ed32 <flatcc_builder_padding_base@@Base+0x13d2>
  403d7e:	lea    rsi,[rip+0x9299]        # 40d01e <_IO_stdin_used@@Base+0x1e>
  403d85:	mov    edx,0xd3
  403d8a:	lea    rcx,[rip+0x92f1]        # 40d082 <_IO_stdin_used@@Base+0x82>
  403d91:	call   403070 <__assert_fail@plt>
  403d96:	jmp    403d9b <access_monster_buffer@@Base+0x4b>
  403d9b:	mov    rdi,QWORD PTR [rbp-0x10]
  403d9f:	call   404480 <access_monster_buffer@@Base+0x730>
  403da4:	mov    WORD PTR [rbp-0x12],ax
  403da8:	mov    rdi,QWORD PTR [rbp-0x10]
  403dac:	call   4045a0 <access_monster_buffer@@Base+0x850>
  403db1:	mov    WORD PTR [rbp-0x14],ax
  403db5:	mov    rdi,QWORD PTR [rbp-0x10]
  403db9:	call   4046c0 <access_monster_buffer@@Base+0x970>
  403dbe:	mov    QWORD PTR [rbp-0x20],rax
  403dc2:	mov    rdi,QWORD PTR [rbp-0x20]
  403dc6:	call   4047f0 <access_monster_buffer@@Base+0xaa0>
  403dcb:	mov    QWORD PTR [rbp-0x28],rax
  403dcf:	movzx  eax,WORD PTR [rbp-0x12]
  403dd3:	cmp    eax,0x12c
  403dd8:	je     403dfd <access_monster_buffer@@Base+0xad>
  403dde:	lea    rdi,[rip+0xaf4d]        # 40ed32 <flatcc_builder_padding_base@@Base+0x13d2>
  403de5:	lea    rsi,[rip+0x9232]        # 40d01e <_IO_stdin_used@@Base+0x1e>
  403dec:	mov    edx,0xdb
  403df1:	lea    rcx,[rip+0x928a]        # 40d082 <_IO_stdin_used@@Base+0x82>
  403df8:	call   403070 <__assert_fail@plt>
  403dfd:	jmp    403e02 <access_monster_buffer@@Base+0xb2>
  403e02:	jmp    403e07 <access_monster_buffer@@Base+0xb7>
  403e07:	movzx  eax,WORD PTR [rbp-0x14]
  403e0b:	cmp    eax,0x96
  403e10:	je     403e35 <access_monster_buffer@@Base+0xe5>
  403e16:	lea    rdi,[rip+0xaf15]        # 40ed32 <flatcc_builder_padding_base@@Base+0x13d2>
  403e1d:	lea    rsi,[rip+0x91fa]        # 40d01e <_IO_stdin_used@@Base+0x1e>
  403e24:	mov    edx,0xdd
  403e29:	lea    rcx,[rip+0x9252]        # 40d082 <_IO_stdin_used@@Base+0x82>
  403e30:	call   403070 <__assert_fail@plt>
  403e35:	jmp    403e3a <access_monster_buffer@@Base+0xea>
  403e3a:	jmp    403e3f <access_monster_buffer@@Base+0xef>
  403e3f:	xor    eax,eax
  403e41:	mov    rdi,QWORD PTR [rbp-0x20]
  403e45:	lea    rsi,[rip+0x91ce]        # 40d01a <_IO_stdin_used@@Base+0x1a>
  403e4c:	mov    DWORD PTR [rbp-0xa0],eax
  403e52:	call   4030b0 <strcmp@plt>
  403e57:	mov    ecx,DWORD PTR [rbp-0xa0]
  403e5d:	cmp    ecx,eax
  403e5f:	je     403e84 <access_monster_buffer@@Base+0x134>
  403e65:	lea    rdi,[rip+0xaec6]        # 40ed32 <flatcc_builder_padding_base@@Base+0x13d2>
  403e6c:	lea    rsi,[rip+0x91ab]        # 40d01e <_IO_stdin_used@@Base+0x1e>
  403e73:	mov    edx,0xde
  403e78:	lea    rcx,[rip+0x9203]        # 40d082 <_IO_stdin_used@@Base+0x82>
  403e7f:	call   403070 <__assert_fail@plt>
  403e84:	jmp    403e89 <access_monster_buffer@@Base+0x139>
  403e89:	jmp    403e8e <access_monster_buffer@@Base+0x13e>
  403e8e:	cmp    QWORD PTR [rbp-0x28],0x3
  403e93:	je     403eb8 <access_monster_buffer@@Base+0x168>
  403e99:	lea    rdi,[rip+0xae92]        # 40ed32 <flatcc_builder_padding_base@@Base+0x13d2>
  403ea0:	lea    rsi,[rip+0x9177]        # 40d01e <_IO_stdin_used@@Base+0x1e>
  403ea7:	mov    edx,0xdf
  403eac:	lea    rcx,[rip+0x91cf]        # 40d082 <_IO_stdin_used@@Base+0x82>
  403eb3:	call   403070 <__assert_fail@plt>
  403eb8:	jmp    403ebd <access_monster_buffer@@Base+0x16d>
  403ebd:	mov    rdi,QWORD PTR [rbp-0x10]
  403ec1:	call   404840 <access_monster_buffer@@Base+0xaf0>
  403ec6:	mov    DWORD PTR [rbp-0x2c],eax
  403ec9:	mov    rdi,QWORD PTR [rbp-0x10]
  403ecd:	call   404920 <access_monster_buffer@@Base+0xbd0>
  403ed2:	mov    DWORD PTR [rbp-0x30],eax
  403ed5:	cmp    DWORD PTR [rbp-0x2c],0x0
  403ed9:	jne    403efe <access_monster_buffer@@Base+0x1ae>
  403edf:	lea    rdi,[rip+0xae4c]        # 40ed32 <flatcc_builder_padding_base@@Base+0x13d2>
  403ee6:	lea    rsi,[rip+0x9131]        # 40d01e <_IO_stdin_used@@Base+0x1e>
  403eed:	mov    edx,0xe3
  403ef2:	lea    rcx,[rip+0x9189]        # 40d082 <_IO_stdin_used@@Base+0x82>
  403ef9:	call   403070 <__assert_fail@plt>
  403efe:	jmp    403f03 <access_monster_buffer@@Base+0x1b3>
  403f03:	jmp    403f08 <access_monster_buffer@@Base+0x1b8>
  403f08:	cmp    DWORD PTR [rbp-0x30],0x0
  403f0c:	je     403f31 <access_monster_buffer@@Base+0x1e1>
  403f12:	lea    rdi,[rip+0xae19]        # 40ed32 <flatcc_builder_padding_base@@Base+0x13d2>
  403f19:	lea    rsi,[rip+0x90fe]        # 40d01e <_IO_stdin_used@@Base+0x1e>
  403f20:	mov    edx,0xe4
  403f25:	lea    rcx,[rip+0x9156]        # 40d082 <_IO_stdin_used@@Base+0x82>
  403f2c:	call   403070 <__assert_fail@plt>
  403f31:	jmp    403f36 <access_monster_buffer@@Base+0x1e6>
  403f36:	mov    rdi,QWORD PTR [rbp-0x10]
  403f3a:	call   404a00 <access_monster_buffer@@Base+0xcb0>
  403f3f:	mov    QWORD PTR [rbp-0x38],rax
  403f43:	cmp    QWORD PTR [rbp-0x38],0x0
  403f48:	jne    403f6d <access_monster_buffer@@Base+0x21d>
  403f4e:	lea    rdi,[rip+0xaddd]        # 40ed32 <flatcc_builder_padding_base@@Base+0x13d2>
  403f55:	lea    rsi,[rip+0x90c2]        # 40d01e <_IO_stdin_used@@Base+0x1e>
  403f5c:	mov    edx,0xe8
  403f61:	lea    rcx,[rip+0x911a]        # 40d082 <_IO_stdin_used@@Base+0x82>
  403f68:	call   403070 <__assert_fail@plt>
  403f6d:	jmp    403f72 <access_monster_buffer@@Base+0x222>
  403f72:	mov    rdi,QWORD PTR [rbp-0x38]
  403f76:	call   404b00 <access_monster_buffer@@Base+0xdb0>
  403f7b:	vmovss DWORD PTR [rbp-0x3c],xmm0
  403f80:	mov    rdi,QWORD PTR [rbp-0x38]
  403f84:	call   404b50 <access_monster_buffer@@Base+0xe00>
  403f89:	vmovss DWORD PTR [rbp-0x40],xmm0
  403f8e:	mov    rdi,QWORD PTR [rbp-0x38]
  403f92:	call   404ba0 <access_monster_buffer@@Base+0xe50>
  403f97:	vmovss DWORD PTR [rbp-0x44],xmm0
  403f9c:	vmovss xmm0,DWORD PTR [rip+0x9060]        # 40d004 <_IO_stdin_used@@Base+0x4>
  403fa4:	vmovss xmm1,DWORD PTR [rbp-0x3c]
  403fa9:	vucomiss xmm1,xmm0
  403fad:	jne    403fbe <access_monster_buffer@@Base+0x26e>
  403fb3:	jp     403fbe <access_monster_buffer@@Base+0x26e>
  403fb9:	jmp    403fdd <access_monster_buffer@@Base+0x28d>
  403fbe:	lea    rdi,[rip+0xad6d]        # 40ed32 <flatcc_builder_padding_base@@Base+0x13d2>
  403fc5:	lea    rsi,[rip+0x9052]        # 40d01e <_IO_stdin_used@@Base+0x1e>
  403fcc:	mov    edx,0xf0
  403fd1:	lea    rcx,[rip+0x90aa]        # 40d082 <_IO_stdin_used@@Base+0x82>
  403fd8:	call   403070 <__assert_fail@plt>
  403fdd:	jmp    403fe2 <access_monster_buffer@@Base+0x292>
  403fe2:	jmp    403fe7 <access_monster_buffer@@Base+0x297>
  403fe7:	vmovss xmm0,DWORD PTR [rip+0x9019]        # 40d008 <_IO_stdin_used@@Base+0x8>
  403fef:	vmovss xmm1,DWORD PTR [rbp-0x40]
  403ff4:	vucomiss xmm1,xmm0
  403ff8:	jne    404009 <access_monster_buffer@@Base+0x2b9>
  403ffe:	jp     404009 <access_monster_buffer@@Base+0x2b9>
  404004:	jmp    404028 <access_monster_buffer@@Base+0x2d8>
  404009:	lea    rdi,[rip+0xad22]        # 40ed32 <flatcc_builder_padding_base@@Base+0x13d2>
  404010:	lea    rsi,[rip+0x9007]        # 40d01e <_IO_stdin_used@@Base+0x1e>
  404017:	mov    edx,0xf1
  40401c:	lea    rcx,[rip+0x905f]        # 40d082 <_IO_stdin_used@@Base+0x82>
  404023:	call   403070 <__assert_fail@plt>
  404028:	jmp    40402d <access_monster_buffer@@Base+0x2dd>
  40402d:	jmp    404032 <access_monster_buffer@@Base+0x2e2>
  404032:	vmovss xmm0,DWORD PTR [rip+0x8fd2]        # 40d00c <_IO_stdin_used@@Base+0xc>
  40403a:	vmovss xmm1,DWORD PTR [rbp-0x44]
  40403f:	vucomiss xmm1,xmm0
  404043:	jne    404054 <access_monster_buffer@@Base+0x304>
  404049:	jp     404054 <access_monster_buffer@@Base+0x304>
  40404f:	jmp    404073 <access_monster_buffer@@Base+0x323>
  404054:	lea    rdi,[rip+0xacd7]        # 40ed32 <flatcc_builder_padding_base@@Base+0x13d2>
  40405b:	lea    rsi,[rip+0x8fbc]        # 40d01e <_IO_stdin_used@@Base+0x1e>
  404062:	mov    edx,0xf2
  404067:	lea    rcx,[rip+0x9014]        # 40d082 <_IO_stdin_used@@Base+0x82>
  40406e:	call   403070 <__assert_fail@plt>
  404073:	jmp    404078 <access_monster_buffer@@Base+0x328>
  404078:	mov    rsi,QWORD PTR [rbp-0x38]
  40407c:	lea    rdi,[rbp-0x50]
  404080:	call   404bf0 <access_monster_buffer@@Base+0xea0>
  404085:	mov    QWORD PTR [rbp-0xa8],rax
  40408c:	vmovss xmm0,DWORD PTR [rip+0x8f70]        # 40d004 <_IO_stdin_used@@Base+0x4>
  404094:	vmovss xmm1,DWORD PTR [rbp-0x50]
  404099:	vucomiss xmm1,xmm0
  40409d:	jne    4040ae <access_monster_buffer@@Base+0x35e>
  4040a3:	jp     4040ae <access_monster_buffer@@Base+0x35e>
  4040a9:	jmp    4040cd <access_monster_buffer@@Base+0x37d>
  4040ae:	lea    rdi,[rip+0xac7d]        # 40ed32 <flatcc_builder_padding_base@@Base+0x13d2>
  4040b5:	lea    rsi,[rip+0x8f62]        # 40d01e <_IO_stdin_used@@Base+0x1e>
  4040bc:	mov    edx,0xfa
  4040c1:	lea    rcx,[rip+0x8fba]        # 40d082 <_IO_stdin_used@@Base+0x82>
  4040c8:	call   403070 <__assert_fail@plt>
  4040cd:	jmp    4040d2 <access_monster_buffer@@Base+0x382>
  4040d2:	jmp    4040d7 <access_monster_buffer@@Base+0x387>
  4040d7:	vmovss xmm0,DWORD PTR [rip+0x8f29]        # 40d008 <_IO_stdin_used@@Base+0x8>
  4040df:	vmovss xmm1,DWORD PTR [rbp-0x4c]
  4040e4:	vucomiss xmm1,xmm0
  4040e8:	jne    4040f9 <access_monster_buffer@@Base+0x3a9>
  4040ee:	jp     4040f9 <access_monster_buffer@@Base+0x3a9>
  4040f4:	jmp    404118 <access_monster_buffer@@Base+0x3c8>
  4040f9:	lea    rdi,[rip+0xac32]        # 40ed32 <flatcc_builder_padding_base@@Base+0x13d2>
  404100:	lea    rsi,[rip+0x8f17]        # 40d01e <_IO_stdin_used@@Base+0x1e>
  404107:	mov    edx,0xfb
  40410c:	lea    rcx,[rip+0x8f6f]        # 40d082 <_IO_stdin_used@@Base+0x82>
  404113:	call   403070 <__assert_fail@plt>
  404118:	jmp    40411d <access_monster_buffer@@Base+0x3cd>
  40411d:	jmp    404122 <access_monster_buffer@@Base+0x3d2>
  404122:	vmovss xmm0,DWORD PTR [rip+0x8ee2]        # 40d00c <_IO_stdin_used@@Base+0xc>
  40412a:	vmovss xmm1,DWORD PTR [rbp-0x48]
  40412f:	vucomiss xmm1,xmm0
  404133:	jne    404144 <access_monster_buffer@@Base+0x3f4>
  404139:	jp     404144 <access_monster_buffer@@Base+0x3f4>
  40413f:	jmp    404163 <access_monster_buffer@@Base+0x413>
  404144:	lea    rdi,[rip+0xabe7]        # 40ed32 <flatcc_builder_padding_base@@Base+0x13d2>
  40414b:	lea    rsi,[rip+0x8ecc]        # 40d01e <_IO_stdin_used@@Base+0x1e>
  404152:	mov    edx,0xfc
  404157:	lea    rcx,[rip+0x8f24]        # 40d082 <_IO_stdin_used@@Base+0x82>
  40415e:	call   403070 <__assert_fail@plt>
  404163:	jmp    404168 <access_monster_buffer@@Base+0x418>
  404168:	mov    rdi,QWORD PTR [rbp-0x10]
  40416c:	call   404c70 <access_monster_buffer@@Base+0xf20>
  404171:	mov    QWORD PTR [rbp-0x58],rax
  404175:	mov    rdi,QWORD PTR [rbp-0x58]
  404179:	call   404da0 <access_monster_buffer@@Base+0x1050>
  40417e:	mov    QWORD PTR [rbp-0x60],rax
  404182:	cmp    QWORD PTR [rbp-0x58],0x0
  404187:	jne    4041ac <access_monster_buffer@@Base+0x45c>
  40418d:	lea    rdi,[rip+0xab9e]        # 40ed32 <flatcc_builder_padding_base@@Base+0x13d2>
  404194:	lea    rsi,[rip+0x8e83]        # 40d01e <_IO_stdin_used@@Base+0x1e>
  40419b:	mov    edx,0x105
  4041a0:	lea    rcx,[rip+0x8edb]        # 40d082 <_IO_stdin_used@@Base+0x82>
  4041a7:	call   403070 <__assert_fail@plt>
  4041ac:	jmp    4041b1 <access_monster_buffer@@Base+0x461>
  4041b1:	jmp    4041b6 <access_monster_buffer@@Base+0x466>
  4041b6:	cmp    QWORD PTR [rbp-0x60],0xa
  4041bb:	je     4041e0 <access_monster_buffer@@Base+0x490>
  4041c1:	lea    rdi,[rip+0xab6a]        # 40ed32 <flatcc_builder_padding_base@@Base+0x13d2>
  4041c8:	lea    rsi,[rip+0x8e4f]        # 40d01e <_IO_stdin_used@@Base+0x1e>
  4041cf:	mov    edx,0x107
  4041d4:	lea    rcx,[rip+0x8ea7]        # 40d082 <_IO_stdin_used@@Base+0x82>
  4041db:	call   403070 <__assert_fail@plt>
  4041e0:	jmp    4041e5 <access_monster_buffer@@Base+0x495>
  4041e5:	mov    eax,0x2
  4041ea:	mov    esi,eax
  4041ec:	mov    rdi,QWORD PTR [rbp-0x58]
  4041f0:	call   404dc0 <access_monster_buffer@@Base+0x1070>
  4041f5:	mov    BYTE PTR [rbp-0x61],al
  4041f8:	movzx  eax,BYTE PTR [rbp-0x61]
  4041fc:	cmp    eax,0x2
  4041ff:	je     404224 <access_monster_buffer@@Base+0x4d4>
  404205:	lea    rdi,[rip+0xab26]        # 40ed32 <flatcc_builder_padding_base@@Base+0x13d2>
  40420c:	lea    rsi,[rip+0x8e0b]        # 40d01e <_IO_stdin_used@@Base+0x1e>
  404213:	mov    edx,0x10b
  404218:	lea    rcx,[rip+0x8e63]        # 40d082 <_IO_stdin_used@@Base+0x82>
  40421f:	call   403070 <__assert_fail@plt>
  404224:	jmp    404229 <access_monster_buffer@@Base+0x4d9>
  404229:	mov    rdi,QWORD PTR [rbp-0x10]
  40422d:	call   404e30 <access_monster_buffer@@Base+0x10e0>
  404232:	mov    QWORD PTR [rbp-0x70],rax
  404236:	mov    rdi,QWORD PTR [rbp-0x70]
  40423a:	call   404f60 <access_monster_buffer@@Base+0x1210>
  40423f:	mov    QWORD PTR [rbp-0x78],rax
  404243:	cmp    QWORD PTR [rbp-0x78],0x2
  404248:	je     40426d <access_monster_buffer@@Base+0x51d>
  40424e:	lea    rdi,[rip+0xaadd]        # 40ed32 <flatcc_builder_padding_base@@Base+0x13d2>
  404255:	lea    rsi,[rip+0x8dc2]        # 40d01e <_IO_stdin_used@@Base+0x1e>
  40425c:	mov    edx,0x10f
  404261:	lea    rcx,[rip+0x8e1a]        # 40d082 <_IO_stdin_used@@Base+0x82>
  404268:	call   403070 <__assert_fail@plt>
  40426d:	jmp    404272 <access_monster_buffer@@Base+0x522>
  404272:	mov    eax,0x1
  404277:	mov    esi,eax
  404279:	mov    rdi,QWORD PTR [rbp-0x70]
  40427d:	call   4050e0 <access_monster_buffer@@Base+0x1390>
  404282:	mov    rdi,rax
  404285:	call   404fb0 <access_monster_buffer@@Base+0x1260>
  40428a:	mov    ecx,0x1
  40428f:	mov    esi,ecx
  404291:	mov    QWORD PTR [rbp-0x80],rax
  404295:	mov    rdi,QWORD PTR [rbp-0x70]
  404299:	call   4050e0 <access_monster_buffer@@Base+0x1390>
  40429e:	mov    rdi,rax
  4042a1:	call   405180 <access_monster_buffer@@Base+0x1430>
  4042a6:	mov    WORD PTR [rbp-0x82],ax
  4042ad:	cmp    QWORD PTR [rbp-0x80],0x0
  4042b2:	je     4042d1 <access_monster_buffer@@Base+0x581>
  4042b8:	mov    rdi,QWORD PTR [rbp-0x80]
  4042bc:	lea    rsi,[rip+0x8d53]        # 40d016 <_IO_stdin_used@@Base+0x16>
  4042c3:	call   4030b0 <strcmp@plt>
  4042c8:	cmp    eax,0x0
  4042cb:	je     4042f0 <access_monster_buffer@@Base+0x5a0>
  4042d1:	lea    rdi,[rip+0xaa5a]        # 40ed32 <flatcc_builder_padding_base@@Base+0x13d2>
  4042d8:	lea    rsi,[rip+0x8d3f]        # 40d01e <_IO_stdin_used@@Base+0x1e>
  4042df:	mov    edx,0x113
  4042e4:	lea    rcx,[rip+0x8d97]        # 40d082 <_IO_stdin_used@@Base+0x82>
  4042eb:	call   403070 <__assert_fail@plt>
  4042f0:	jmp    4042f5 <access_monster_buffer@@Base+0x5a5>
  4042f5:	jmp    4042fa <access_monster_buffer@@Base+0x5aa>
  4042fa:	movzx  eax,WORD PTR [rbp-0x82]
  404301:	cmp    eax,0x5
  404304:	je     404329 <access_monster_buffer@@Base+0x5d9>
  40430a:	lea    rdi,[rip+0xaa21]        # 40ed32 <flatcc_builder_padding_base@@Base+0x13d2>
  404311:	lea    rsi,[rip+0x8d06]        # 40d01e <_IO_stdin_used@@Base+0x1e>
  404318:	mov    edx,0x114
  40431d:	lea    rcx,[rip+0x8d5e]        # 40d082 <_IO_stdin_used@@Base+0x82>
  404324:	call   403070 <__assert_fail@plt>
  404329:	jmp    40432e <access_monster_buffer@@Base+0x5de>
  40432e:	mov    rdi,QWORD PTR [rbp-0x10]
  404332:	call   405290 <access_monster_buffer@@Base+0x1540>
  404337:	movzx  ecx,al
  40433a:	cmp    ecx,0x1
  40433d:	jne    404404 <access_monster_buffer@@Base+0x6b4>
  404343:	mov    rdi,QWORD PTR [rbp-0x10]
  404347:	call   4053a0 <access_monster_buffer@@Base+0x1650>
  40434c:	mov    QWORD PTR [rbp-0x90],rax
  404353:	mov    rdi,QWORD PTR [rbp-0x90]
  40435a:	call   404fb0 <access_monster_buffer@@Base+0x1260>
  40435f:	mov    QWORD PTR [rbp-0x98],rax
  404366:	mov    rdi,QWORD PTR [rbp-0x90]
  40436d:	call   405180 <access_monster_buffer@@Base+0x1430>
  404372:	mov    WORD PTR [rbp-0x9a],ax
  404379:	xor    eax,eax
  40437b:	mov    rdi,QWORD PTR [rbp-0x98]
  404382:	lea    rsi,[rip+0x8c8d]        # 40d016 <_IO_stdin_used@@Base+0x16>
  404389:	mov    DWORD PTR [rbp-0xac],eax
  40438f:	call   4030b0 <strcmp@plt>
  404394:	mov    ecx,DWORD PTR [rbp-0xac]
  40439a:	cmp    ecx,eax
  40439c:	je     4043c1 <access_monster_buffer@@Base+0x671>
  4043a2:	lea    rdi,[rip+0xa989]        # 40ed32 <flatcc_builder_padding_base@@Base+0x13d2>
  4043a9:	lea    rsi,[rip+0x8c6e]        # 40d01e <_IO_stdin_used@@Base+0x1e>
  4043b0:	mov    edx,0x11e
  4043b5:	lea    rcx,[rip+0x8cc6]        # 40d082 <_IO_stdin_used@@Base+0x82>
  4043bc:	call   403070 <__assert_fail@plt>
  4043c1:	jmp    4043c6 <access_monster_buffer@@Base+0x676>
  4043c6:	jmp    4043cb <access_monster_buffer@@Base+0x67b>
  4043cb:	movzx  eax,WORD PTR [rbp-0x9a]
  4043d2:	cmp    eax,0x5
  4043d5:	je     4043fa <access_monster_buffer@@Base+0x6aa>
  4043db:	lea    rdi,[rip+0xa950]        # 40ed32 <flatcc_builder_padding_base@@Base+0x13d2>
  4043e2:	lea    rsi,[rip+0x8c35]        # 40d01e <_IO_stdin_used@@Base+0x1e>
  4043e9:	mov    edx,0x11f
  4043ee:	lea    rcx,[rip+0x8c8d]        # 40d082 <_IO_stdin_used@@Base+0x82>
  4043f5:	call   403070 <__assert_fail@plt>
  4043fa:	jmp    4043ff <access_monster_buffer@@Base+0x6af>
  4043ff:	jmp    404404 <access_monster_buffer@@Base+0x6b4>
  404404:	xor    eax,eax
  404406:	add    rsp,0xb0
  40440d:	pop    rbp
  40440e:	ret    
  40440f:	nop
  404410:	push   rbp
  404411:	mov    rbp,rsp
  404414:	sub    rsp,0x20
  404418:	mov    QWORD PTR [rbp-0x8],rdi
  40441c:	mov    QWORD PTR [rbp-0x10],0x0
  404424:	cmp    QWORD PTR [rbp-0x8],0x0
  404429:	je     404445 <access_monster_buffer@@Base+0x6f5>
  40442f:	mov    rdi,QWORD PTR [rbp-0x8]
  404433:	mov    rsi,QWORD PTR [rbp-0x10]
  404437:	call   405ea0 <main@@Base+0x9e0>
  40443c:	cmp    eax,0x0
  40443f:	jne    404452 <access_monster_buffer@@Base+0x702>
  404445:	xor    eax,eax
  404447:	mov    ecx,eax
  404449:	mov    QWORD PTR [rbp-0x18],rcx
  40444d:	jmp    404472 <access_monster_buffer@@Base+0x722>
  404452:	mov    rax,QWORD PTR [rbp-0x8]
  404456:	mov    rdi,QWORD PTR [rbp-0x8]
  40445a:	mov    QWORD PTR [rbp-0x20],rax
  40445e:	call   405f40 <main@@Base+0xa80>
  404463:	mov    eax,eax
  404465:	mov    edi,eax
  404467:	mov    rcx,QWORD PTR [rbp-0x20]
  40446b:	add    rcx,rdi
  40446e:	mov    QWORD PTR [rbp-0x18],rcx
  404472:	mov    rax,QWORD PTR [rbp-0x18]
  404476:	add    rsp,0x20
  40447a:	pop    rbp
  40447b:	ret    
  40447c:	nop    DWORD PTR [rax+0x0]
  404480:	push   rbp
  404481:	mov    rbp,rsp
  404484:	sub    rsp,0x30
  404488:	mov    QWORD PTR [rbp-0x8],rdi
  40448c:	mov    WORD PTR [rbp-0xa],0x0
  404492:	cmp    QWORD PTR [rbp-0x8],0x0
  404497:	je     4044b1 <access_monster_buffer@@Base+0x761>
  40449d:	mov    al,0x1
  40449f:	test   al,0x1
  4044a1:	jne    4044ac <access_monster_buffer@@Base+0x75c>
  4044a7:	jmp    4044b1 <access_monster_buffer@@Base+0x761>
  4044ac:	jmp    4044d0 <access_monster_buffer@@Base+0x780>
  4044b1:	lea    rdi,[rip+0x8eaa]        # 40d362 <_IO_stdin_used@@Base+0x362>
  4044b8:	lea    rsi,[rip+0x8ec9]        # 40d388 <_IO_stdin_used@@Base+0x388>
  4044bf:	mov    edx,0x83
  4044c4:	lea    rcx,[rip+0x8f32]        # 40d3fd <_IO_stdin_used@@Base+0x3fd>
  4044cb:	call   403070 <__assert_fail@plt>
  4044d0:	mov    WORD PTR [rbp-0xc],0x2
  4044d6:	mov    rax,QWORD PTR [rbp-0x8]
  4044da:	mov    rcx,QWORD PTR [rbp-0x8]
  4044de:	mov    rdi,rcx
  4044e1:	mov    QWORD PTR [rbp-0x20],rax
  4044e5:	call   405fb0 <main@@Base+0xaf0>
  4044ea:	xor    edx,edx
  4044ec:	mov    ecx,edx
  4044ee:	movsxd rdi,eax
  4044f1:	sub    rcx,rdi
  4044f4:	mov    rdi,QWORD PTR [rbp-0x20]
  4044f8:	add    rdi,rcx
  4044fb:	mov    QWORD PTR [rbp-0x18],rdi
  4044ff:	mov    rcx,QWORD PTR [rbp-0x18]
  404503:	mov    rdi,rcx
  404506:	call   405fd0 <main@@Base+0xb10>
  40450b:	movzx  edx,ax
  40450e:	mov    ecx,edx
  404510:	movzx  edx,WORD PTR [rbp-0xc]
  404514:	add    edx,0x3
  404517:	movsxd rdi,edx
  40451a:	shl    rdi,0x1
  40451e:	cmp    rcx,rdi
  404521:	jb     404549 <access_monster_buffer@@Base+0x7f9>
  404527:	mov    rax,QWORD PTR [rbp-0x18]
  40452b:	movzx  ecx,WORD PTR [rbp-0xc]
  40452f:	movsxd rdx,ecx
  404532:	shl    rdx,0x1
  404536:	add    rax,rdx
  404539:	add    rax,0x4
  40453d:	mov    rdi,rax
  404540:	call   405fd0 <main@@Base+0xb10>
  404545:	mov    WORD PTR [rbp-0xa],ax
  404549:	movzx  eax,WORD PTR [rbp-0xa]
  40454d:	cmp    eax,0x0
  404550:	je     404577 <access_monster_buffer@@Base+0x827>
  404556:	mov    rax,QWORD PTR [rbp-0x8]
  40455a:	movzx  ecx,WORD PTR [rbp-0xa]
  40455e:	movsxd rdx,ecx
  404561:	add    rax,rdx
  404564:	mov    rdi,rax
  404567:	call   406000 <main@@Base+0xb40>
  40456c:	movsx  ecx,ax
  40456f:	mov    DWORD PTR [rbp-0x24],ecx
  404572:	jmp    404584 <access_monster_buffer@@Base+0x834>
  404577:	mov    eax,0x64
  40457c:	mov    DWORD PTR [rbp-0x24],eax
  40457f:	jmp    404584 <access_monster_buffer@@Base+0x834>
  404584:	mov    eax,DWORD PTR [rbp-0x24]
  404587:	mov    cx,ax
  40458a:	movsx  eax,cx
  40458d:	add    rsp,0x30
  404591:	pop    rbp
  404592:	ret    
  404593:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40459d:	nop    DWORD PTR [rax]
  4045a0:	push   rbp
  4045a1:	mov    rbp,rsp
  4045a4:	sub    rsp,0x30
  4045a8:	mov    QWORD PTR [rbp-0x8],rdi
  4045ac:	mov    WORD PTR [rbp-0xa],0x0
  4045b2:	cmp    QWORD PTR [rbp-0x8],0x0
  4045b7:	je     4045d1 <access_monster_buffer@@Base+0x881>
  4045bd:	mov    al,0x1
  4045bf:	test   al,0x1
  4045c1:	jne    4045cc <access_monster_buffer@@Base+0x87c>
  4045c7:	jmp    4045d1 <access_monster_buffer@@Base+0x881>
  4045cc:	jmp    4045f0 <access_monster_buffer@@Base+0x8a0>
  4045d1:	lea    rdi,[rip+0x8d8a]        # 40d362 <_IO_stdin_used@@Base+0x362>
  4045d8:	lea    rsi,[rip+0x8da9]        # 40d388 <_IO_stdin_used@@Base+0x388>
  4045df:	mov    edx,0x82
  4045e4:	lea    rcx,[rip+0x8e52]        # 40d43d <_IO_stdin_used@@Base+0x43d>
  4045eb:	call   403070 <__assert_fail@plt>
  4045f0:	mov    WORD PTR [rbp-0xc],0x1
  4045f6:	mov    rax,QWORD PTR [rbp-0x8]
  4045fa:	mov    rcx,QWORD PTR [rbp-0x8]
  4045fe:	mov    rdi,rcx
  404601:	mov    QWORD PTR [rbp-0x20],rax
  404605:	call   405fb0 <main@@Base+0xaf0>
  40460a:	xor    edx,edx
  40460c:	mov    ecx,edx
  40460e:	movsxd rdi,eax
  404611:	sub    rcx,rdi
  404614:	mov    rdi,QWORD PTR [rbp-0x20]
  404618:	add    rdi,rcx
  40461b:	mov    QWORD PTR [rbp-0x18],rdi
  40461f:	mov    rcx,QWORD PTR [rbp-0x18]
  404623:	mov    rdi,rcx
  404626:	call   405fd0 <main@@Base+0xb10>
  40462b:	movzx  edx,ax
  40462e:	mov    ecx,edx
  404630:	movzx  edx,WORD PTR [rbp-0xc]
  404634:	add    edx,0x3
  404637:	movsxd rdi,edx
  40463a:	shl    rdi,0x1
  40463e:	cmp    rcx,rdi
  404641:	jb     404669 <access_monster_buffer@@Base+0x919>
  404647:	mov    rax,QWORD PTR [rbp-0x18]
  40464b:	movzx  ecx,WORD PTR [rbp-0xc]
  40464f:	movsxd rdx,ecx
  404652:	shl    rdx,0x1
  404656:	add    rax,rdx
  404659:	add    rax,0x4
  40465d:	mov    rdi,rax
  404660:	call   405fd0 <main@@Base+0xb10>
  404665:	mov    WORD PTR [rbp-0xa],ax
  404669:	movzx  eax,WORD PTR [rbp-0xa]
  40466d:	cmp    eax,0x0
  404670:	je     404697 <access_monster_buffer@@Base+0x947>
  404676:	mov    rax,QWORD PTR [rbp-0x8]
  40467a:	movzx  ecx,WORD PTR [rbp-0xa]
  40467e:	movsxd rdx,ecx
  404681:	add    rax,rdx
  404684:	mov    rdi,rax
  404687:	call   406000 <main@@Base+0xb40>
  40468c:	movsx  ecx,ax
  40468f:	mov    DWORD PTR [rbp-0x24],ecx
  404692:	jmp    4046a4 <access_monster_buffer@@Base+0x954>
  404697:	mov    eax,0x96
  40469c:	mov    DWORD PTR [rbp-0x24],eax
  40469f:	jmp    4046a4 <access_monster_buffer@@Base+0x954>
  4046a4:	mov    eax,DWORD PTR [rbp-0x24]
  4046a7:	mov    cx,ax
  4046aa:	movsx  eax,cx
  4046ad:	add    rsp,0x30
  4046b1:	pop    rbp
  4046b2:	ret    
  4046b3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4046bd:	nop    DWORD PTR [rax]
  4046c0:	push   rbp
  4046c1:	mov    rbp,rsp
  4046c4:	sub    rsp,0x40
  4046c8:	mov    QWORD PTR [rbp-0x10],rdi
  4046cc:	mov    WORD PTR [rbp-0x1a],0x0
  4046d2:	cmp    QWORD PTR [rbp-0x10],0x0
  4046d7:	je     4046f1 <access_monster_buffer@@Base+0x9a1>
  4046dd:	mov    al,0x1
  4046df:	test   al,0x1
  4046e1:	jne    4046ec <access_monster_buffer@@Base+0x99c>
  4046e7:	jmp    4046f1 <access_monster_buffer@@Base+0x9a1>
  4046ec:	jmp    404710 <access_monster_buffer@@Base+0x9c0>
  4046f1:	lea    rdi,[rip+0x8c6a]        # 40d362 <_IO_stdin_used@@Base+0x362>
  4046f8:	lea    rsi,[rip+0x8c89]        # 40d388 <_IO_stdin_used@@Base+0x388>
  4046ff:	mov    edx,0x84
  404704:	lea    rcx,[rip+0x8d74]        # 40d47f <_IO_stdin_used@@Base+0x47f>
  40470b:	call   403070 <__assert_fail@plt>
  404710:	mov    WORD PTR [rbp-0x1c],0x3
  404716:	mov    rax,QWORD PTR [rbp-0x10]
  40471a:	mov    rcx,QWORD PTR [rbp-0x10]
  40471e:	mov    rdi,rcx
  404721:	mov    QWORD PTR [rbp-0x30],rax
  404725:	call   405fb0 <main@@Base+0xaf0>
  40472a:	xor    edx,edx
  40472c:	mov    ecx,edx
  40472e:	movsxd rdi,eax
  404731:	sub    rcx,rdi
  404734:	mov    rdi,QWORD PTR [rbp-0x30]
  404738:	add    rdi,rcx
  40473b:	mov    QWORD PTR [rbp-0x28],rdi
  40473f:	mov    rcx,QWORD PTR [rbp-0x28]
  404743:	mov    rdi,rcx
  404746:	call   405fd0 <main@@Base+0xb10>
  40474b:	movzx  edx,ax
  40474e:	mov    ecx,edx
  404750:	movzx  edx,WORD PTR [rbp-0x1c]
  404754:	add    edx,0x3
  404757:	movsxd rdi,edx
  40475a:	shl    rdi,0x1
  40475e:	cmp    rcx,rdi
  404761:	jb     404789 <access_monster_buffer@@Base+0xa39>
  404767:	mov    rax,QWORD PTR [rbp-0x28]
  40476b:	movzx  ecx,WORD PTR [rbp-0x1c]
  40476f:	movsxd rdx,ecx
  404772:	shl    rdx,0x1
  404776:	add    rax,rdx
  404779:	add    rax,0x4
  40477d:	mov    rdi,rax
  404780:	call   405fd0 <main@@Base+0xb10>
  404785:	mov    WORD PTR [rbp-0x1a],ax
  404789:	cmp    WORD PTR [rbp-0x1a],0x0
  40478e:	je     4047d2 <access_monster_buffer@@Base+0xa82>
  404794:	mov    rax,QWORD PTR [rbp-0x10]
  404798:	movzx  ecx,WORD PTR [rbp-0x1a]
  40479c:	movsxd rdx,ecx
  40479f:	add    rax,rdx
  4047a2:	mov    QWORD PTR [rbp-0x18],rax
  4047a6:	mov    rax,QWORD PTR [rbp-0x18]
  4047aa:	add    rax,0x4
  4047ae:	mov    rdx,QWORD PTR [rbp-0x18]
  4047b2:	mov    rdi,rdx
  4047b5:	mov    QWORD PTR [rbp-0x38],rax
  4047b9:	call   405f40 <main@@Base+0xa80>
  4047be:	mov    eax,eax
  4047c0:	mov    edx,eax
  4047c2:	mov    rdi,QWORD PTR [rbp-0x38]
  4047c6:	add    rdi,rdx
  4047c9:	mov    QWORD PTR [rbp-0x8],rdi
  4047cd:	jmp    4047da <access_monster_buffer@@Base+0xa8a>
  4047d2:	mov    QWORD PTR [rbp-0x8],0x0
  4047da:	mov    rax,QWORD PTR [rbp-0x8]
  4047de:	add    rsp,0x40
  4047e2:	pop    rbp
  4047e3:	ret    
  4047e4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4047ee:	xchg   ax,ax
  4047f0:	push   rbp
  4047f1:	mov    rbp,rsp
  4047f4:	sub    rsp,0x10
  4047f8:	mov    QWORD PTR [rbp-0x8],rdi
  4047fc:	cmp    QWORD PTR [rbp-0x8],0x0
  404801:	je     404824 <access_monster_buffer@@Base+0xad4>
  404807:	mov    rax,QWORD PTR [rbp-0x8]
  40480b:	add    rax,0xfffffffffffffffc
  40480f:	mov    rdi,rax
  404812:	call   405f40 <main@@Base+0xa80>
  404817:	mov    eax,eax
  404819:	mov    edi,eax
  40481b:	mov    QWORD PTR [rbp-0x10],rdi
  40481f:	jmp    404831 <access_monster_buffer@@Base+0xae1>
  404824:	xor    eax,eax
  404826:	mov    ecx,eax
  404828:	mov    QWORD PTR [rbp-0x10],rcx
  40482c:	jmp    404831 <access_monster_buffer@@Base+0xae1>
  404831:	mov    rax,QWORD PTR [rbp-0x10]
  404835:	add    rsp,0x10
  404839:	pop    rbp
  40483a:	ret    
  40483b:	nop    DWORD PTR [rax+rax*1+0x0]
  404840:	push   rbp
  404841:	mov    rbp,rsp
  404844:	sub    rsp,0x20
  404848:	mov    QWORD PTR [rbp-0x8],rdi
  40484c:	mov    WORD PTR [rbp-0xa],0x0
  404852:	cmp    QWORD PTR [rbp-0x8],0x0
  404857:	je     404871 <access_monster_buffer@@Base+0xb21>
  40485d:	mov    al,0x1
  40485f:	test   al,0x1
  404861:	jne    40486c <access_monster_buffer@@Base+0xb1c>
  404867:	jmp    404871 <access_monster_buffer@@Base+0xb21>
  40486c:	jmp    404890 <access_monster_buffer@@Base+0xb40>
  404871:	lea    rdi,[rip+0x8aea]        # 40d362 <_IO_stdin_used@@Base+0x362>
  404878:	lea    rsi,[rip+0x8b09]        # 40d388 <_IO_stdin_used@@Base+0x388>
  40487f:	mov    edx,0x83
  404884:	lea    rcx,[rip+0x8c43]        # 40d4ce <_IO_stdin_used@@Base+0x4ce>
  40488b:	call   403070 <__assert_fail@plt>
  404890:	mov    WORD PTR [rbp-0xc],0x2
  404896:	mov    rax,QWORD PTR [rbp-0x8]
  40489a:	mov    rcx,QWORD PTR [rbp-0x8]
  40489e:	mov    rdi,rcx
  4048a1:	mov    QWORD PTR [rbp-0x20],rax
  4048a5:	call   405fb0 <main@@Base+0xaf0>
  4048aa:	xor    edx,edx
  4048ac:	mov    ecx,edx
  4048ae:	movsxd rdi,eax
  4048b1:	sub    rcx,rdi
  4048b4:	mov    rdi,QWORD PTR [rbp-0x20]
  4048b8:	add    rdi,rcx
  4048bb:	mov    QWORD PTR [rbp-0x18],rdi
  4048bf:	mov    rcx,QWORD PTR [rbp-0x18]
  4048c3:	mov    rdi,rcx
  4048c6:	call   405fd0 <main@@Base+0xb10>
  4048cb:	movzx  edx,ax
  4048ce:	mov    ecx,edx
  4048d0:	movzx  edx,WORD PTR [rbp-0xc]
  4048d4:	add    edx,0x3
  4048d7:	movsxd rdi,edx
  4048da:	shl    rdi,0x1
  4048de:	cmp    rcx,rdi
  4048e1:	jb     404909 <access_monster_buffer@@Base+0xbb9>
  4048e7:	mov    rax,QWORD PTR [rbp-0x18]
  4048eb:	movzx  ecx,WORD PTR [rbp-0xc]
  4048ef:	movsxd rdx,ecx
  4048f2:	shl    rdx,0x1
  4048f6:	add    rax,rdx
  4048f9:	add    rax,0x4
  4048fd:	mov    rdi,rax
  404900:	call   405fd0 <main@@Base+0xb10>
  404905:	mov    WORD PTR [rbp-0xa],ax
  404909:	movzx  eax,WORD PTR [rbp-0xa]
  40490d:	cmp    eax,0x0
  404910:	setne  cl
  404913:	and    cl,0x1
  404916:	movzx  eax,cl
  404919:	add    rsp,0x20
  40491d:	pop    rbp
  40491e:	ret    
  40491f:	nop
  404920:	push   rbp
  404921:	mov    rbp,rsp
  404924:	sub    rsp,0x20
  404928:	mov    QWORD PTR [rbp-0x8],rdi
  40492c:	mov    WORD PTR [rbp-0xa],0x0
  404932:	cmp    QWORD PTR [rbp-0x8],0x0
  404937:	je     404951 <access_monster_buffer@@Base+0xc01>
  40493d:	mov    al,0x1
  40493f:	test   al,0x1
  404941:	jne    40494c <access_monster_buffer@@Base+0xbfc>
  404947:	jmp    404951 <access_monster_buffer@@Base+0xc01>
  40494c:	jmp    404970 <access_monster_buffer@@Base+0xc20>
  404951:	lea    rdi,[rip+0x8a0a]        # 40d362 <_IO_stdin_used@@Base+0x362>
  404958:	lea    rsi,[rip+0x8a29]        # 40d388 <_IO_stdin_used@@Base+0x388>
  40495f:	mov    edx,0x82
  404964:	lea    rcx,[rip+0x8baa]        # 40d515 <_IO_stdin_used@@Base+0x515>
  40496b:	call   403070 <__assert_fail@plt>
  404970:	mov    WORD PTR [rbp-0xc],0x1
  404976:	mov    rax,QWORD PTR [rbp-0x8]
  40497a:	mov    rcx,QWORD PTR [rbp-0x8]
  40497e:	mov    rdi,rcx
  404981:	mov    QWORD PTR [rbp-0x20],rax
  404985:	call   405fb0 <main@@Base+0xaf0>
  40498a:	xor    edx,edx
  40498c:	mov    ecx,edx
  40498e:	movsxd rdi,eax
  404991:	sub    rcx,rdi
  404994:	mov    rdi,QWORD PTR [rbp-0x20]
  404998:	add    rdi,rcx
  40499b:	mov    QWORD PTR [rbp-0x18],rdi
  40499f:	mov    rcx,QWORD PTR [rbp-0x18]
  4049a3:	mov    rdi,rcx
  4049a6:	call   405fd0 <main@@Base+0xb10>
  4049ab:	movzx  edx,ax
  4049ae:	mov    ecx,edx
  4049b0:	movzx  edx,WORD PTR [rbp-0xc]
  4049b4:	add    edx,0x3
  4049b7:	movsxd rdi,edx
  4049ba:	shl    rdi,0x1
  4049be:	cmp    rcx,rdi
  4049c1:	jb     4049e9 <access_monster_buffer@@Base+0xc99>
  4049c7:	mov    rax,QWORD PTR [rbp-0x18]
  4049cb:	movzx  ecx,WORD PTR [rbp-0xc]
  4049cf:	movsxd rdx,ecx
  4049d2:	shl    rdx,0x1
  4049d6:	add    rax,rdx
  4049d9:	add    rax,0x4
  4049dd:	mov    rdi,rax
  4049e0:	call   405fd0 <main@@Base+0xb10>
  4049e5:	mov    WORD PTR [rbp-0xa],ax
  4049e9:	movzx  eax,WORD PTR [rbp-0xa]
  4049ed:	cmp    eax,0x0
  4049f0:	setne  cl
  4049f3:	and    cl,0x1
  4049f6:	movzx  eax,cl
  4049f9:	add    rsp,0x20
  4049fd:	pop    rbp
  4049fe:	ret    
  4049ff:	nop
  404a00:	push   rbp
  404a01:	mov    rbp,rsp
  404a04:	sub    rsp,0x30
  404a08:	mov    QWORD PTR [rbp-0x10],rdi
  404a0c:	mov    WORD PTR [rbp-0x12],0x0
  404a12:	cmp    QWORD PTR [rbp-0x10],0x0
  404a17:	je     404a31 <access_monster_buffer@@Base+0xce1>
  404a1d:	mov    al,0x1
  404a1f:	test   al,0x1
  404a21:	jne    404a2c <access_monster_buffer@@Base+0xcdc>
  404a27:	jmp    404a31 <access_monster_buffer@@Base+0xce1>
  404a2c:	jmp    404a50 <access_monster_buffer@@Base+0xd00>
  404a31:	lea    rdi,[rip+0x892a]        # 40d362 <_IO_stdin_used@@Base+0x362>
  404a38:	lea    rsi,[rip+0x8949]        # 40d388 <_IO_stdin_used@@Base+0x388>
  404a3f:	mov    edx,0x81
  404a44:	lea    rcx,[rip+0x8b13]        # 40d55e <_IO_stdin_used@@Base+0x55e>
  404a4b:	call   403070 <__assert_fail@plt>
  404a50:	mov    WORD PTR [rbp-0x14],0x0
  404a56:	mov    rax,QWORD PTR [rbp-0x10]
  404a5a:	mov    rcx,QWORD PTR [rbp-0x10]
  404a5e:	mov    rdi,rcx
  404a61:	mov    QWORD PTR [rbp-0x28],rax
  404a65:	call   405fb0 <main@@Base+0xaf0>
  404a6a:	xor    edx,edx
  404a6c:	mov    ecx,edx
  404a6e:	movsxd rdi,eax
  404a71:	sub    rcx,rdi
  404a74:	mov    rdi,QWORD PTR [rbp-0x28]
  404a78:	add    rdi,rcx
  404a7b:	mov    QWORD PTR [rbp-0x20],rdi
  404a7f:	mov    rcx,QWORD PTR [rbp-0x20]
  404a83:	mov    rdi,rcx
  404a86:	call   405fd0 <main@@Base+0xb10>
  404a8b:	movzx  edx,ax
  404a8e:	mov    ecx,edx
  404a90:	movzx  edx,WORD PTR [rbp-0x14]
  404a94:	add    edx,0x3
  404a97:	movsxd rdi,edx
  404a9a:	shl    rdi,0x1
  404a9e:	cmp    rcx,rdi
  404aa1:	jb     404ac9 <access_monster_buffer@@Base+0xd79>
  404aa7:	mov    rax,QWORD PTR [rbp-0x20]
  404aab:	movzx  ecx,WORD PTR [rbp-0x14]
  404aaf:	movsxd rdx,ecx
  404ab2:	shl    rdx,0x1
  404ab6:	add    rax,rdx
  404ab9:	add    rax,0x4
  404abd:	mov    rdi,rax
  404ac0:	call   405fd0 <main@@Base+0xb10>
  404ac5:	mov    WORD PTR [rbp-0x12],ax
  404ac9:	cmp    WORD PTR [rbp-0x12],0x0
  404ace:	je     404aeb <access_monster_buffer@@Base+0xd9b>
  404ad4:	mov    rax,QWORD PTR [rbp-0x10]
  404ad8:	movzx  ecx,WORD PTR [rbp-0x12]
  404adc:	movsxd rdx,ecx
  404adf:	add    rax,rdx
  404ae2:	mov    QWORD PTR [rbp-0x8],rax
  404ae6:	jmp    404af3 <access_monster_buffer@@Base+0xda3>
  404aeb:	mov    QWORD PTR [rbp-0x8],0x0
  404af3:	mov    rax,QWORD PTR [rbp-0x8]
  404af7:	add    rsp,0x30
  404afb:	pop    rbp
  404afc:	ret    
  404afd:	nop    DWORD PTR [rax]
  404b00:	push   rbp
  404b01:	mov    rbp,rsp
  404b04:	sub    rsp,0x10
  404b08:	mov    QWORD PTR [rbp-0x8],rdi
  404b0c:	cmp    QWORD PTR [rbp-0x8],0x0
  404b11:	je     404b2d <access_monster_buffer@@Base+0xddd>
  404b17:	mov    rax,QWORD PTR [rbp-0x8]
  404b1b:	mov    rdi,rax
  404b1e:	call   406070 <main@@Base+0xbb0>
  404b23:	vmovss DWORD PTR [rbp-0xc],xmm0
  404b28:	jmp    404b3b <access_monster_buffer@@Base+0xdeb>
  404b2d:	vxorps xmm0,xmm0,xmm0
  404b31:	vmovss DWORD PTR [rbp-0xc],xmm0
  404b36:	jmp    404b3b <access_monster_buffer@@Base+0xdeb>
  404b3b:	vmovss xmm0,DWORD PTR [rbp-0xc]
  404b40:	add    rsp,0x10
  404b44:	pop    rbp
  404b45:	ret    
  404b46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404b50:	push   rbp
  404b51:	mov    rbp,rsp
  404b54:	sub    rsp,0x10
  404b58:	mov    QWORD PTR [rbp-0x8],rdi
  404b5c:	cmp    QWORD PTR [rbp-0x8],0x0
  404b61:	je     404b81 <access_monster_buffer@@Base+0xe31>
  404b67:	mov    rax,QWORD PTR [rbp-0x8]
  404b6b:	add    rax,0x4
  404b6f:	mov    rdi,rax
  404b72:	call   406070 <main@@Base+0xbb0>
  404b77:	vmovss DWORD PTR [rbp-0xc],xmm0
  404b7c:	jmp    404b8f <access_monster_buffer@@Base+0xe3f>
  404b81:	vxorps xmm0,xmm0,xmm0
  404b85:	vmovss DWORD PTR [rbp-0xc],xmm0
  404b8a:	jmp    404b8f <access_monster_buffer@@Base+0xe3f>
  404b8f:	vmovss xmm0,DWORD PTR [rbp-0xc]
  404b94:	add    rsp,0x10
  404b98:	pop    rbp
  404b99:	ret    
  404b9a:	nop    WORD PTR [rax+rax*1+0x0]
  404ba0:	push   rbp
  404ba1:	mov    rbp,rsp
  404ba4:	sub    rsp,0x10
  404ba8:	mov    QWORD PTR [rbp-0x8],rdi
  404bac:	cmp    QWORD PTR [rbp-0x8],0x0
  404bb1:	je     404bd1 <access_monster_buffer@@Base+0xe81>
  404bb7:	mov    rax,QWORD PTR [rbp-0x8]
  404bbb:	add    rax,0x8
  404bbf:	mov    rdi,rax
  404bc2:	call   406070 <main@@Base+0xbb0>
  404bc7:	vmovss DWORD PTR [rbp-0xc],xmm0
  404bcc:	jmp    404bdf <access_monster_buffer@@Base+0xe8f>
  404bd1:	vxorps xmm0,xmm0,xmm0
  404bd5:	vmovss DWORD PTR [rbp-0xc],xmm0
  404bda:	jmp    404bdf <access_monster_buffer@@Base+0xe8f>
  404bdf:	vmovss xmm0,DWORD PTR [rbp-0xc]
  404be4:	add    rsp,0x10
  404be8:	pop    rbp
  404be9:	ret    
  404bea:	nop    WORD PTR [rax+rax*1+0x0]
  404bf0:	push   rbp
  404bf1:	mov    rbp,rsp
  404bf4:	sub    rsp,0x40
  404bf8:	mov    QWORD PTR [rbp-0x8],rdi
  404bfc:	mov    QWORD PTR [rbp-0x10],rsi
  404c00:	mov    rdi,QWORD PTR [rbp-0x8]
  404c04:	mov    rsi,QWORD PTR [rbp-0x10]
  404c08:	call   4060b0 <main@@Base+0xbf0>
  404c0d:	mov    rsi,QWORD PTR [rbp-0x8]
  404c11:	add    rsi,0x4
  404c15:	mov    rdi,QWORD PTR [rbp-0x10]
  404c19:	add    rdi,0x4
  404c1d:	mov    QWORD PTR [rbp-0x18],rdi
  404c21:	mov    rdi,rsi
  404c24:	mov    rsi,QWORD PTR [rbp-0x18]
  404c28:	mov    QWORD PTR [rbp-0x20],rax
  404c2c:	call   4060b0 <main@@Base+0xbf0>
  404c31:	mov    rsi,QWORD PTR [rbp-0x8]
  404c35:	add    rsi,0x8
  404c39:	mov    rdi,QWORD PTR [rbp-0x10]
  404c3d:	add    rdi,0x8
  404c41:	mov    QWORD PTR [rbp-0x28],rdi
  404c45:	mov    rdi,rsi
  404c48:	mov    rsi,QWORD PTR [rbp-0x28]
  404c4c:	mov    QWORD PTR [rbp-0x30],rax
  404c50:	call   4060b0 <main@@Base+0xbf0>
  404c55:	mov    rsi,QWORD PTR [rbp-0x8]
  404c59:	mov    QWORD PTR [rbp-0x38],rax
  404c5d:	mov    rax,rsi
  404c60:	add    rsp,0x40
  404c64:	pop    rbp
  404c65:	ret    
  404c66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404c70:	push   rbp
  404c71:	mov    rbp,rsp
  404c74:	sub    rsp,0x40
  404c78:	mov    QWORD PTR [rbp-0x10],rdi
  404c7c:	mov    WORD PTR [rbp-0x1a],0x0
  404c82:	cmp    QWORD PTR [rbp-0x10],0x0
  404c87:	je     404ca1 <access_monster_buffer@@Base+0xf51>
  404c8d:	mov    al,0x1
  404c8f:	test   al,0x1
  404c91:	jne    404c9c <access_monster_buffer@@Base+0xf4c>
  404c97:	jmp    404ca1 <access_monster_buffer@@Base+0xf51>
  404c9c:	jmp    404cc0 <access_monster_buffer@@Base+0xf70>
  404ca1:	lea    rdi,[rip+0x86ba]        # 40d362 <_IO_stdin_used@@Base+0x362>
  404ca8:	lea    rsi,[rip+0x86d9]        # 40d388 <_IO_stdin_used@@Base+0x388>
  404caf:	mov    edx,0x87
  404cb4:	lea    rcx,[rip+0x88f8]        # 40d5b3 <_IO_stdin_used@@Base+0x5b3>
  404cbb:	call   403070 <__assert_fail@plt>
  404cc0:	mov    WORD PTR [rbp-0x1c],0x5
  404cc6:	mov    rax,QWORD PTR [rbp-0x10]
  404cca:	mov    rcx,QWORD PTR [rbp-0x10]
  404cce:	mov    rdi,rcx
  404cd1:	mov    QWORD PTR [rbp-0x30],rax
  404cd5:	call   405fb0 <main@@Base+0xaf0>
  404cda:	xor    edx,edx
  404cdc:	mov    ecx,edx
  404cde:	movsxd rdi,eax
  404ce1:	sub    rcx,rdi
  404ce4:	mov    rdi,QWORD PTR [rbp-0x30]
  404ce8:	add    rdi,rcx
  404ceb:	mov    QWORD PTR [rbp-0x28],rdi
  404cef:	mov    rcx,QWORD PTR [rbp-0x28]
  404cf3:	mov    rdi,rcx
  404cf6:	call   405fd0 <main@@Base+0xb10>
  404cfb:	movzx  edx,ax
  404cfe:	mov    ecx,edx
  404d00:	movzx  edx,WORD PTR [rbp-0x1c]
  404d04:	add    edx,0x3
  404d07:	movsxd rdi,edx
  404d0a:	shl    rdi,0x1
  404d0e:	cmp    rcx,rdi
  404d11:	jb     404d39 <access_monster_buffer@@Base+0xfe9>
  404d17:	mov    rax,QWORD PTR [rbp-0x28]
  404d1b:	movzx  ecx,WORD PTR [rbp-0x1c]
  404d1f:	movsxd rdx,ecx
  404d22:	shl    rdx,0x1
  404d26:	add    rax,rdx
  404d29:	add    rax,0x4
  404d2d:	mov    rdi,rax
  404d30:	call   405fd0 <main@@Base+0xb10>
  404d35:	mov    WORD PTR [rbp-0x1a],ax
  404d39:	cmp    WORD PTR [rbp-0x1a],0x0
  404d3e:	je     404d82 <access_monster_buffer@@Base+0x1032>
  404d44:	mov    rax,QWORD PTR [rbp-0x10]
  404d48:	movzx  ecx,WORD PTR [rbp-0x1a]
  404d4c:	movsxd rdx,ecx
  404d4f:	add    rax,rdx
  404d52:	mov    QWORD PTR [rbp-0x18],rax
  404d56:	mov    rax,QWORD PTR [rbp-0x18]
  404d5a:	add    rax,0x4
  404d5e:	mov    rdx,QWORD PTR [rbp-0x18]
  404d62:	mov    rdi,rdx
  404d65:	mov    QWORD PTR [rbp-0x38],rax
  404d69:	call   405f40 <main@@Base+0xa80>
  404d6e:	mov    eax,eax
  404d70:	mov    edx,eax
  404d72:	mov    rdi,QWORD PTR [rbp-0x38]
  404d76:	add    rdi,rdx
  404d79:	mov    QWORD PTR [rbp-0x8],rdi
  404d7d:	jmp    404d8a <access_monster_buffer@@Base+0x103a>
  404d82:	mov    QWORD PTR [rbp-0x8],0x0
  404d8a:	mov    rax,QWORD PTR [rbp-0x8]
  404d8e:	add    rsp,0x40
  404d92:	pop    rbp
  404d93:	ret    
  404d94:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404d9e:	xchg   ax,ax
  404da0:	push   rbp
  404da1:	mov    rbp,rsp
  404da4:	sub    rsp,0x10
  404da8:	mov    QWORD PTR [rbp-0x8],rdi
  404dac:	mov    rdi,QWORD PTR [rbp-0x8]
  404db0:	call   4060e0 <main@@Base+0xc20>
  404db5:	add    rsp,0x10
  404db9:	pop    rbp
  404dba:	ret    
  404dbb:	nop    DWORD PTR [rax+rax*1+0x0]
  404dc0:	push   rbp
  404dc1:	mov    rbp,rsp
  404dc4:	sub    rsp,0x10
  404dc8:	mov    QWORD PTR [rbp-0x8],rdi
  404dcc:	mov    QWORD PTR [rbp-0x10],rsi
  404dd0:	mov    rdi,QWORD PTR [rbp-0x8]
  404dd4:	call   4060e0 <main@@Base+0xc20>
  404dd9:	cmp    rax,QWORD PTR [rbp-0x10]
  404ddd:	jbe    404df7 <access_monster_buffer@@Base+0x10a7>
  404de3:	mov    al,0x1
  404de5:	test   al,0x1
  404de7:	jne    404df2 <access_monster_buffer@@Base+0x10a2>
  404ded:	jmp    404df7 <access_monster_buffer@@Base+0x10a7>
  404df2:	jmp    404e16 <access_monster_buffer@@Base+0x10c6>
  404df7:	lea    rdi,[rip+0x881f]        # 40d61d <_IO_stdin_used@@Base+0x61d>
  404dfe:	lea    rsi,[rip+0x884f]        # 40d654 <_IO_stdin_used@@Base+0x654>
  404e05:	mov    edx,0x18b
  404e0a:	lea    rcx,[rip+0x88c3]        # 40d6d4 <_IO_stdin_used@@Base+0x6d4>
  404e11:	call   403070 <__assert_fail@plt>
  404e16:	mov    rax,QWORD PTR [rbp-0x8]
  404e1a:	add    rax,QWORD PTR [rbp-0x10]
  404e1e:	mov    rdi,rax
  404e21:	call   406130 <main@@Base+0xc70>
  404e26:	movzx  eax,al
  404e29:	add    rsp,0x10
  404e2d:	pop    rbp
  404e2e:	ret    
  404e2f:	nop
  404e30:	push   rbp
  404e31:	mov    rbp,rsp
  404e34:	sub    rsp,0x40
  404e38:	mov    QWORD PTR [rbp-0x10],rdi
  404e3c:	mov    WORD PTR [rbp-0x1a],0x0
  404e42:	cmp    QWORD PTR [rbp-0x10],0x0
  404e47:	je     404e61 <access_monster_buffer@@Base+0x1111>
  404e4d:	mov    al,0x1
  404e4f:	test   al,0x1
  404e51:	jne    404e5c <access_monster_buffer@@Base+0x110c>
  404e57:	jmp    404e61 <access_monster_buffer@@Base+0x1111>
  404e5c:	jmp    404e80 <access_monster_buffer@@Base+0x1130>
  404e61:	lea    rdi,[rip+0x84fa]        # 40d362 <_IO_stdin_used@@Base+0x362>
  404e68:	lea    rsi,[rip+0x8519]        # 40d388 <_IO_stdin_used@@Base+0x388>
  404e6f:	mov    edx,0x89
  404e74:	lea    rcx,[rip+0x889b]        # 40d716 <_IO_stdin_used@@Base+0x716>
  404e7b:	call   403070 <__assert_fail@plt>
  404e80:	mov    WORD PTR [rbp-0x1c],0x7
  404e86:	mov    rax,QWORD PTR [rbp-0x10]
  404e8a:	mov    rcx,QWORD PTR [rbp-0x10]
  404e8e:	mov    rdi,rcx
  404e91:	mov    QWORD PTR [rbp-0x30],rax
  404e95:	call   405fb0 <main@@Base+0xaf0>
  404e9a:	xor    edx,edx
  404e9c:	mov    ecx,edx
  404e9e:	movsxd rdi,eax
  404ea1:	sub    rcx,rdi
  404ea4:	mov    rdi,QWORD PTR [rbp-0x30]
  404ea8:	add    rdi,rcx
  404eab:	mov    QWORD PTR [rbp-0x28],rdi
  404eaf:	mov    rcx,QWORD PTR [rbp-0x28]
  404eb3:	mov    rdi,rcx
  404eb6:	call   405fd0 <main@@Base+0xb10>
  404ebb:	movzx  edx,ax
  404ebe:	mov    ecx,edx
  404ec0:	movzx  edx,WORD PTR [rbp-0x1c]
  404ec4:	add    edx,0x3
  404ec7:	movsxd rdi,edx
  404eca:	shl    rdi,0x1
  404ece:	cmp    rcx,rdi
  404ed1:	jb     404ef9 <access_monster_buffer@@Base+0x11a9>
  404ed7:	mov    rax,QWORD PTR [rbp-0x28]
  404edb:	movzx  ecx,WORD PTR [rbp-0x1c]
  404edf:	movsxd rdx,ecx
  404ee2:	shl    rdx,0x1
  404ee6:	add    rax,rdx
  404ee9:	add    rax,0x4
  404eed:	mov    rdi,rax
  404ef0:	call   405fd0 <main@@Base+0xb10>
  404ef5:	mov    WORD PTR [rbp-0x1a],ax
  404ef9:	cmp    WORD PTR [rbp-0x1a],0x0
  404efe:	je     404f42 <access_monster_buffer@@Base+0x11f2>
  404f04:	mov    rax,QWORD PTR [rbp-0x10]
  404f08:	movzx  ecx,WORD PTR [rbp-0x1a]
  404f0c:	movsxd rdx,ecx
  404f0f:	add    rax,rdx
  404f12:	mov    QWORD PTR [rbp-0x18],rax
  404f16:	mov    rax,QWORD PTR [rbp-0x18]
  404f1a:	add    rax,0x4
  404f1e:	mov    rdx,QWORD PTR [rbp-0x18]
  404f22:	mov    rdi,rdx
  404f25:	mov    QWORD PTR [rbp-0x38],rax
  404f29:	call   405f40 <main@@Base+0xa80>
  404f2e:	mov    eax,eax
  404f30:	mov    edx,eax
  404f32:	mov    rdi,QWORD PTR [rbp-0x38]
  404f36:	add    rdi,rdx
  404f39:	mov    QWORD PTR [rbp-0x8],rdi
  404f3d:	jmp    404f4a <access_monster_buffer@@Base+0x11fa>
  404f42:	mov    QWORD PTR [rbp-0x8],0x0
  404f4a:	mov    rax,QWORD PTR [rbp-0x8]
  404f4e:	add    rsp,0x40
  404f52:	pop    rbp
  404f53:	ret    
  404f54:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404f5e:	xchg   ax,ax
  404f60:	push   rbp
  404f61:	mov    rbp,rsp
  404f64:	sub    rsp,0x10
  404f68:	mov    QWORD PTR [rbp-0x8],rdi
  404f6c:	cmp    QWORD PTR [rbp-0x8],0x0
  404f71:	je     404f94 <access_monster_buffer@@Base+0x1244>
  404f77:	mov    rax,QWORD PTR [rbp-0x8]
  404f7b:	add    rax,0xfffffffffffffffc
  404f7f:	mov    rdi,rax
  404f82:	call   405f40 <main@@Base+0xa80>
  404f87:	mov    eax,eax
  404f89:	mov    edi,eax
  404f8b:	mov    QWORD PTR [rbp-0x10],rdi
  404f8f:	jmp    404fa1 <access_monster_buffer@@Base+0x1251>
  404f94:	xor    eax,eax
  404f96:	mov    ecx,eax
  404f98:	mov    QWORD PTR [rbp-0x10],rcx
  404f9c:	jmp    404fa1 <access_monster_buffer@@Base+0x1251>
  404fa1:	mov    rax,QWORD PTR [rbp-0x10]
  404fa5:	add    rsp,0x10
  404fa9:	pop    rbp
  404faa:	ret    
  404fab:	nop    DWORD PTR [rax+rax*1+0x0]
  404fb0:	push   rbp
  404fb1:	mov    rbp,rsp
  404fb4:	sub    rsp,0x40
  404fb8:	mov    QWORD PTR [rbp-0x10],rdi
  404fbc:	mov    WORD PTR [rbp-0x1a],0x0
  404fc2:	cmp    QWORD PTR [rbp-0x10],0x0
  404fc7:	je     404fe1 <access_monster_buffer@@Base+0x1291>
  404fcd:	mov    al,0x1
  404fcf:	test   al,0x1
  404fd1:	jne    404fdc <access_monster_buffer@@Base+0x128c>
  404fd7:	jmp    404fe1 <access_monster_buffer@@Base+0x1291>
  404fdc:	jmp    405000 <access_monster_buffer@@Base+0x12b0>
  404fe1:	lea    rdi,[rip+0x837a]        # 40d362 <_IO_stdin_used@@Base+0x362>
  404fe8:	lea    rsi,[rip+0x8399]        # 40d388 <_IO_stdin_used@@Base+0x388>
  404fef:	mov    edx,0x94
  404ff4:	lea    rcx,[rip+0x8773]        # 40d76e <_IO_stdin_used@@Base+0x76e>
  404ffb:	call   403070 <__assert_fail@plt>
  405000:	mov    WORD PTR [rbp-0x1c],0x0
  405006:	mov    rax,QWORD PTR [rbp-0x10]
  40500a:	mov    rcx,QWORD PTR [rbp-0x10]
  40500e:	mov    rdi,rcx
  405011:	mov    QWORD PTR [rbp-0x30],rax
  405015:	call   405fb0 <main@@Base+0xaf0>
  40501a:	xor    edx,edx
  40501c:	mov    ecx,edx
  40501e:	movsxd rdi,eax
  405021:	sub    rcx,rdi
  405024:	mov    rdi,QWORD PTR [rbp-0x30]
  405028:	add    rdi,rcx
  40502b:	mov    QWORD PTR [rbp-0x28],rdi
  40502f:	mov    rcx,QWORD PTR [rbp-0x28]
  405033:	mov    rdi,rcx
  405036:	call   405fd0 <main@@Base+0xb10>
  40503b:	movzx  edx,ax
  40503e:	mov    ecx,edx
  405040:	movzx  edx,WORD PTR [rbp-0x1c]
  405044:	add    edx,0x3
  405047:	movsxd rdi,edx
  40504a:	shl    rdi,0x1
  40504e:	cmp    rcx,rdi
  405051:	jb     405079 <access_monster_buffer@@Base+0x1329>
  405057:	mov    rax,QWORD PTR [rbp-0x28]
  40505b:	movzx  ecx,WORD PTR [rbp-0x1c]
  40505f:	movsxd rdx,ecx
  405062:	shl    rdx,0x1
  405066:	add    rax,rdx
  405069:	add    rax,0x4
  40506d:	mov    rdi,rax
  405070:	call   405fd0 <main@@Base+0xb10>
  405075:	mov    WORD PTR [rbp-0x1a],ax
  405079:	cmp    WORD PTR [rbp-0x1a],0x0
  40507e:	je     4050c2 <access_monster_buffer@@Base+0x1372>
  405084:	mov    rax,QWORD PTR [rbp-0x10]
  405088:	movzx  ecx,WORD PTR [rbp-0x1a]
  40508c:	movsxd rdx,ecx
  40508f:	add    rax,rdx
  405092:	mov    QWORD PTR [rbp-0x18],rax
  405096:	mov    rax,QWORD PTR [rbp-0x18]
  40509a:	add    rax,0x4
  40509e:	mov    rdx,QWORD PTR [rbp-0x18]
  4050a2:	mov    rdi,rdx
  4050a5:	mov    QWORD PTR [rbp-0x38],rax
  4050a9:	call   405f40 <main@@Base+0xa80>
  4050ae:	mov    eax,eax
  4050b0:	mov    edx,eax
  4050b2:	mov    rdi,QWORD PTR [rbp-0x38]
  4050b6:	add    rdi,rdx
  4050b9:	mov    QWORD PTR [rbp-0x8],rdi
  4050bd:	jmp    4050ca <access_monster_buffer@@Base+0x137a>
  4050c2:	mov    QWORD PTR [rbp-0x8],0x0
  4050ca:	mov    rax,QWORD PTR [rbp-0x8]
  4050ce:	add    rsp,0x40
  4050d2:	pop    rbp
  4050d3:	ret    
  4050d4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4050de:	xchg   ax,ax
  4050e0:	push   rbp
  4050e1:	mov    rbp,rsp
  4050e4:	sub    rsp,0x20
  4050e8:	mov    QWORD PTR [rbp-0x8],rdi
  4050ec:	mov    QWORD PTR [rbp-0x10],rsi
  4050f0:	mov    rsi,QWORD PTR [rbp-0x8]
  4050f4:	mov    rdi,QWORD PTR [rbp-0x10]
  4050f8:	shl    rdi,0x2
  4050fc:	add    rsi,rdi
  4050ff:	mov    QWORD PTR [rbp-0x18],rsi
  405103:	mov    rsi,QWORD PTR [rbp-0x8]
  405107:	mov    rdi,rsi
  40510a:	call   4060e0 <main@@Base+0xc20>
  40510f:	cmp    rax,QWORD PTR [rbp-0x10]
  405113:	jbe    40512d <access_monster_buffer@@Base+0x13dd>
  405119:	mov    al,0x1
  40511b:	test   al,0x1
  40511d:	jne    405128 <access_monster_buffer@@Base+0x13d8>
  405123:	jmp    40512d <access_monster_buffer@@Base+0x13dd>
  405128:	jmp    40514c <access_monster_buffer@@Base+0x13fc>
  40512d:	lea    rdi,[rip+0x84e9]        # 40d61d <_IO_stdin_used@@Base+0x61d>
  405134:	lea    rsi,[rip+0x824d]        # 40d388 <_IO_stdin_used@@Base+0x388>
  40513b:	mov    edx,0x91
  405140:	lea    rcx,[rip+0x8674]        # 40d7bb <_IO_stdin_used@@Base+0x7bb>
  405147:	call   403070 <__assert_fail@plt>
  40514c:	mov    rax,QWORD PTR [rbp-0x18]
  405150:	mov    rcx,QWORD PTR [rbp-0x18]
  405154:	mov    rdi,rcx
  405157:	mov    QWORD PTR [rbp-0x20],rax
  40515b:	call   405f40 <main@@Base+0xa80>
  405160:	mov    eax,eax
  405162:	mov    ecx,eax
  405164:	mov    rdi,QWORD PTR [rbp-0x20]
  405168:	add    rdi,rcx
  40516b:	mov    rax,rdi
  40516e:	add    rsp,0x20
  405172:	pop    rbp
  405173:	ret    
  405174:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40517e:	xchg   ax,ax
  405180:	push   rbp
  405181:	mov    rbp,rsp
  405184:	sub    rsp,0x30
  405188:	mov    QWORD PTR [rbp-0x8],rdi
  40518c:	mov    WORD PTR [rbp-0xa],0x0
  405192:	cmp    QWORD PTR [rbp-0x8],0x0
  405197:	je     4051b1 <access_monster_buffer@@Base+0x1461>
  40519d:	mov    al,0x1
  40519f:	test   al,0x1
  4051a1:	jne    4051ac <access_monster_buffer@@Base+0x145c>
  4051a7:	jmp    4051b1 <access_monster_buffer@@Base+0x1461>
  4051ac:	jmp    4051d0 <access_monster_buffer@@Base+0x1480>
  4051b1:	lea    rdi,[rip+0x81aa]        # 40d362 <_IO_stdin_used@@Base+0x362>
  4051b8:	lea    rsi,[rip+0x81c9]        # 40d388 <_IO_stdin_used@@Base+0x388>
  4051bf:	mov    edx,0x95
  4051c4:	lea    rcx,[rip+0x864d]        # 40d818 <_IO_stdin_used@@Base+0x818>
  4051cb:	call   403070 <__assert_fail@plt>
  4051d0:	mov    WORD PTR [rbp-0xc],0x1
  4051d6:	mov    rax,QWORD PTR [rbp-0x8]
  4051da:	mov    rcx,QWORD PTR [rbp-0x8]
  4051de:	mov    rdi,rcx
  4051e1:	mov    QWORD PTR [rbp-0x20],rax
  4051e5:	call   405fb0 <main@@Base+0xaf0>
  4051ea:	xor    edx,edx
  4051ec:	mov    ecx,edx
  4051ee:	movsxd rdi,eax
  4051f1:	sub    rcx,rdi
  4051f4:	mov    rdi,QWORD PTR [rbp-0x20]
  4051f8:	add    rdi,rcx
  4051fb:	mov    QWORD PTR [rbp-0x18],rdi
  4051ff:	mov    rcx,QWORD PTR [rbp-0x18]
  405203:	mov    rdi,rcx
  405206:	call   405fd0 <main@@Base+0xb10>
  40520b:	movzx  edx,ax
  40520e:	mov    ecx,edx
  405210:	movzx  edx,WORD PTR [rbp-0xc]
  405214:	add    edx,0x3
  405217:	movsxd rdi,edx
  40521a:	shl    rdi,0x1
  40521e:	cmp    rcx,rdi
  405221:	jb     405249 <access_monster_buffer@@Base+0x14f9>
  405227:	mov    rax,QWORD PTR [rbp-0x18]
  40522b:	movzx  ecx,WORD PTR [rbp-0xc]
  40522f:	movsxd rdx,ecx
  405232:	shl    rdx,0x1
  405236:	add    rax,rdx
  405239:	add    rax,0x4
  40523d:	mov    rdi,rax
  405240:	call   405fd0 <main@@Base+0xb10>
  405245:	mov    WORD PTR [rbp-0xa],ax
  405249:	movzx  eax,WORD PTR [rbp-0xa]
  40524d:	cmp    eax,0x0
  405250:	je     405277 <access_monster_buffer@@Base+0x1527>
  405256:	mov    rax,QWORD PTR [rbp-0x8]
  40525a:	movzx  ecx,WORD PTR [rbp-0xa]
  40525e:	movsxd rdx,ecx
  405261:	add    rax,rdx
  405264:	mov    rdi,rax
  405267:	call   406000 <main@@Base+0xb40>
  40526c:	movsx  ecx,ax
  40526f:	mov    DWORD PTR [rbp-0x24],ecx
  405272:	jmp    405281 <access_monster_buffer@@Base+0x1531>
  405277:	xor    eax,eax
  405279:	mov    DWORD PTR [rbp-0x24],eax
  40527c:	jmp    405281 <access_monster_buffer@@Base+0x1531>
  405281:	mov    eax,DWORD PTR [rbp-0x24]
  405284:	mov    cx,ax
  405287:	movsx  eax,cx
  40528a:	add    rsp,0x30
  40528e:	pop    rbp
  40528f:	ret    
  405290:	push   rbp
  405291:	mov    rbp,rsp
  405294:	sub    rsp,0x30
  405298:	mov    QWORD PTR [rbp-0x8],rdi
  40529c:	mov    WORD PTR [rbp-0xa],0x0
  4052a2:	cmp    QWORD PTR [rbp-0x8],0x0
  4052a7:	je     4052c1 <access_monster_buffer@@Base+0x1571>
  4052ad:	mov    al,0x1
  4052af:	test   al,0x1
  4052b1:	jne    4052bc <access_monster_buffer@@Base+0x156c>
  4052b7:	jmp    4052c1 <access_monster_buffer@@Base+0x1571>
  4052bc:	jmp    4052e0 <access_monster_buffer@@Base+0x1590>
  4052c1:	lea    rdi,[rip+0x809a]        # 40d362 <_IO_stdin_used@@Base+0x362>
  4052c8:	lea    rsi,[rip+0x80b9]        # 40d388 <_IO_stdin_used@@Base+0x388>
  4052cf:	mov    edx,0x8a
  4052d4:	lea    rcx,[rip+0x857f]        # 40d85a <_IO_stdin_used@@Base+0x85a>
  4052db:	call   403070 <__assert_fail@plt>
  4052e0:	mov    WORD PTR [rbp-0xc],0x8
  4052e6:	mov    rax,QWORD PTR [rbp-0x8]
  4052ea:	mov    rcx,QWORD PTR [rbp-0x8]
  4052ee:	mov    rdi,rcx
  4052f1:	mov    QWORD PTR [rbp-0x20],rax
  4052f5:	call   405fb0 <main@@Base+0xaf0>
  4052fa:	xor    edx,edx
  4052fc:	mov    ecx,edx
  4052fe:	movsxd rdi,eax
  405301:	sub    rcx,rdi
  405304:	mov    rdi,QWORD PTR [rbp-0x20]
  405308:	add    rdi,rcx
  40530b:	mov    QWORD PTR [rbp-0x18],rdi
  40530f:	mov    rcx,QWORD PTR [rbp-0x18]
  405313:	mov    rdi,rcx
  405316:	call   405fd0 <main@@Base+0xb10>
  40531b:	movzx  edx,ax
  40531e:	mov    ecx,edx
  405320:	movzx  edx,WORD PTR [rbp-0xc]
  405324:	add    edx,0x3
  405327:	movsxd rdi,edx
  40532a:	shl    rdi,0x1
  40532e:	cmp    rcx,rdi
  405331:	jb     405359 <access_monster_buffer@@Base+0x1609>
  405337:	mov    rax,QWORD PTR [rbp-0x18]
  40533b:	movzx  ecx,WORD PTR [rbp-0xc]
  40533f:	movsxd rdx,ecx
  405342:	shl    rdx,0x1
  405346:	add    rax,rdx
  405349:	add    rax,0x4
  40534d:	mov    rdi,rax
  405350:	call   405fd0 <main@@Base+0xb10>
  405355:	mov    WORD PTR [rbp-0xa],ax
  405359:	movzx  eax,WORD PTR [rbp-0xa]
  40535d:	cmp    eax,0x0
  405360:	je     405387 <access_monster_buffer@@Base+0x1637>
  405366:	mov    rax,QWORD PTR [rbp-0x8]
  40536a:	movzx  ecx,WORD PTR [rbp-0xa]
  40536e:	movsxd rdx,ecx
  405371:	add    rax,rdx
  405374:	mov    rdi,rax
  405377:	call   406170 <main@@Base+0xcb0>
  40537c:	movzx  ecx,al
  40537f:	mov    DWORD PTR [rbp-0x24],ecx
  405382:	jmp    405391 <access_monster_buffer@@Base+0x1641>
  405387:	xor    eax,eax
  405389:	mov    DWORD PTR [rbp-0x24],eax
  40538c:	jmp    405391 <access_monster_buffer@@Base+0x1641>
  405391:	mov    eax,DWORD PTR [rbp-0x24]
  405394:	mov    cl,al
  405396:	movzx  eax,cl
  405399:	add    rsp,0x30
  40539d:	pop    rbp
  40539e:	ret    
  40539f:	nop
  4053a0:	push   rbp
  4053a1:	mov    rbp,rsp
  4053a4:	sub    rsp,0x40
  4053a8:	mov    QWORD PTR [rbp-0x10],rdi
  4053ac:	mov    WORD PTR [rbp-0x1a],0x0
  4053b2:	cmp    QWORD PTR [rbp-0x10],0x0
  4053b7:	je     4053d1 <access_monster_buffer@@Base+0x1681>
  4053bd:	mov    al,0x1
  4053bf:	test   al,0x1
  4053c1:	jne    4053cc <access_monster_buffer@@Base+0x167c>
  4053c7:	jmp    4053d1 <access_monster_buffer@@Base+0x1681>
  4053cc:	jmp    4053f0 <access_monster_buffer@@Base+0x16a0>
  4053d1:	lea    rdi,[rip+0x7f8a]        # 40d362 <_IO_stdin_used@@Base+0x362>
  4053d8:	lea    rsi,[rip+0x7fa9]        # 40d388 <_IO_stdin_used@@Base+0x388>
  4053df:	mov    edx,0x8a
  4053e4:	lea    rcx,[rip+0x84d7]        # 40d8c2 <_IO_stdin_used@@Base+0x8c2>
  4053eb:	call   403070 <__assert_fail@plt>
  4053f0:	mov    WORD PTR [rbp-0x1c],0x9
  4053f6:	mov    rax,QWORD PTR [rbp-0x10]
  4053fa:	mov    rcx,QWORD PTR [rbp-0x10]
  4053fe:	mov    rdi,rcx
  405401:	mov    QWORD PTR [rbp-0x30],rax
  405405:	call   405fb0 <main@@Base+0xaf0>
  40540a:	xor    edx,edx
  40540c:	mov    ecx,edx
  40540e:	movsxd rdi,eax
  405411:	sub    rcx,rdi
  405414:	mov    rdi,QWORD PTR [rbp-0x30]
  405418:	add    rdi,rcx
  40541b:	mov    QWORD PTR [rbp-0x28],rdi
  40541f:	mov    rcx,QWORD PTR [rbp-0x28]
  405423:	mov    rdi,rcx
  405426:	call   405fd0 <main@@Base+0xb10>
  40542b:	movzx  edx,ax
  40542e:	mov    ecx,edx
  405430:	movzx  edx,WORD PTR [rbp-0x1c]
  405434:	add    edx,0x3
  405437:	movsxd rdi,edx
  40543a:	shl    rdi,0x1
  40543e:	cmp    rcx,rdi
  405441:	jb     405469 <access_monster_buffer@@Base+0x1719>
  405447:	mov    rax,QWORD PTR [rbp-0x28]
  40544b:	movzx  ecx,WORD PTR [rbp-0x1c]
  40544f:	movsxd rdx,ecx
  405452:	shl    rdx,0x1
  405456:	add    rax,rdx
  405459:	add    rax,0x4
  40545d:	mov    rdi,rax
  405460:	call   405fd0 <main@@Base+0xb10>
  405465:	mov    WORD PTR [rbp-0x1a],ax
  405469:	cmp    WORD PTR [rbp-0x1a],0x0
  40546e:	je     4054ae <access_monster_buffer@@Base+0x175e>
  405474:	mov    rax,QWORD PTR [rbp-0x10]
  405478:	movzx  ecx,WORD PTR [rbp-0x1a]
  40547c:	movsxd rdx,ecx
  40547f:	add    rax,rdx
  405482:	mov    QWORD PTR [rbp-0x18],rax
  405486:	mov    rax,QWORD PTR [rbp-0x18]
  40548a:	mov    rdx,QWORD PTR [rbp-0x18]
  40548e:	mov    rdi,rdx
  405491:	mov    QWORD PTR [rbp-0x38],rax
  405495:	call   405f40 <main@@Base+0xa80>
  40549a:	mov    eax,eax
  40549c:	mov    edx,eax
  40549e:	mov    rdi,QWORD PTR [rbp-0x38]
  4054a2:	add    rdi,rdx
  4054a5:	mov    QWORD PTR [rbp-0x8],rdi
  4054a9:	jmp    4054b6 <access_monster_buffer@@Base+0x1766>
  4054ae:	mov    QWORD PTR [rbp-0x8],0x0
  4054b6:	mov    rax,QWORD PTR [rbp-0x8]
  4054ba:	add    rsp,0x40
  4054be:	pop    rbp
  4054bf:	ret    

00000000004054c0 <main@@Base>:
  4054c0:	push   rbp
  4054c1:	mov    rbp,rsp
  4054c4:	sub    rsp,0x1c0
  4054cb:	mov    DWORD PTR [rbp-0x4],0x0
  4054d2:	mov    DWORD PTR [rbp-0x8],edi
  4054d5:	mov    QWORD PTR [rbp-0x10],rsi
  4054d9:	lea    rdi,[rbp-0x198]
  4054e0:	call   4064a0 <flatcc_builder_init@@Base>
  4054e5:	mov    DWORD PTR [rbp-0x1ac],eax
  4054eb:	xor    esi,esi
  4054ed:	lea    rdi,[rbp-0x198]
  4054f4:	call   4031f0 <create_monster_bottom_up@@Base>
  4054f9:	xor    esi,esi
  4054fb:	cmp    esi,eax
  4054fd:	je     405522 <main@@Base+0x62>
  405503:	lea    rdi,[rip+0x9828]        # 40ed32 <flatcc_builder_padding_base@@Base+0x13d2>
  40550a:	lea    rsi,[rip+0x7b0d]        # 40d01e <_IO_stdin_used@@Base+0x1e>
  405511:	mov    edx,0x134
  405516:	lea    rcx,[rip+0x7b90]        # 40d0ad <_IO_stdin_used@@Base+0xad>
  40551d:	call   403070 <__assert_fail@plt>
  405522:	jmp    405527 <main@@Base+0x67>
  405527:	lea    rdi,[rbp-0x198]
  40552e:	lea    rsi,[rbp-0x1a8]
  405535:	call   40bb90 <flatcc_builder_finalize_aligned_buffer@@Base>
  40553a:	mov    QWORD PTR [rbp-0x1a0],rax
  405541:	mov    rdi,QWORD PTR [rbp-0x1a0]
  405548:	call   40bd20 <flatcc_builder_aligned_free@@Base>
  40554d:	lea    rdi,[rbp-0x198]
  405554:	call   406730 <flatcc_builder_reset@@Base>
  405559:	mov    DWORD PTR [rbp-0x1b0],eax
  40555f:	lea    rdi,[rbp-0x198]
  405566:	mov    esi,0x1
  40556b:	call   4031f0 <create_monster_bottom_up@@Base>
  405570:	xor    esi,esi
  405572:	cmp    esi,eax
  405574:	je     405599 <main@@Base+0xd9>
  40557a:	lea    rdi,[rip+0x97b1]        # 40ed32 <flatcc_builder_padding_base@@Base+0x13d2>
  405581:	lea    rsi,[rip+0x7a96]        # 40d01e <_IO_stdin_used@@Base+0x1e>
  405588:	mov    edx,0x14f
  40558d:	lea    rcx,[rip+0x7b19]        # 40d0ad <_IO_stdin_used@@Base+0xad>
  405594:	call   403070 <__assert_fail@plt>
  405599:	jmp    40559e <main@@Base+0xde>
  40559e:	lea    rdi,[rbp-0x198]
  4055a5:	lea    rsi,[rbp-0x1a8]
  4055ac:	call   40bb90 <flatcc_builder_finalize_aligned_buffer@@Base>
  4055b1:	mov    QWORD PTR [rbp-0x1a0],rax
  4055b8:	mov    rdi,QWORD PTR [rbp-0x1a0]
  4055bf:	call   403d50 <access_monster_buffer@@Base>
  4055c4:	mov    rdi,QWORD PTR [rbp-0x1a0]
  4055cb:	mov    DWORD PTR [rbp-0x1b4],eax
  4055d1:	call   40bd20 <flatcc_builder_aligned_free@@Base>
  4055d6:	lea    rdi,[rbp-0x198]
  4055dd:	call   406730 <flatcc_builder_reset@@Base>
  4055e2:	lea    rdi,[rbp-0x198]
  4055e9:	mov    DWORD PTR [rbp-0x1b8],eax
  4055ef:	call   403a90 <create_monster_top_down@@Base>
  4055f4:	lea    rdi,[rbp-0x198]
  4055fb:	lea    rsi,[rbp-0x1a8]
  405602:	mov    DWORD PTR [rbp-0x1bc],eax
  405608:	call   40bab0 <flatcc_builder_finalize_buffer@@Base>
  40560d:	mov    QWORD PTR [rbp-0x1a0],rax
  405614:	mov    rdi,QWORD PTR [rbp-0x1a0]
  40561b:	call   403d50 <access_monster_buffer@@Base>
  405620:	xor    ecx,ecx
  405622:	cmp    ecx,eax
  405624:	je     405649 <main@@Base+0x189>
  40562a:	lea    rdi,[rip+0x9701]        # 40ed32 <flatcc_builder_padding_base@@Base+0x13d2>
  405631:	lea    rsi,[rip+0x79e6]        # 40d01e <_IO_stdin_used@@Base+0x1e>
  405638:	mov    edx,0x156
  40563d:	lea    rcx,[rip+0x7a69]        # 40d0ad <_IO_stdin_used@@Base+0xad>
  405644:	call   403070 <__assert_fail@plt>
  405649:	jmp    40564e <main@@Base+0x18e>
  40564e:	mov    rdi,QWORD PTR [rbp-0x1a0]
  405655:	call   403030 <free@plt>
  40565a:	lea    rdi,[rbp-0x198]
  405661:	call   406760 <flatcc_builder_clear@@Base>
  405666:	lea    rdi,[rip+0x7a57]        # 40d0c4 <_IO_stdin_used@@Base+0xc4>
  40566d:	mov    al,0x0
  40566f:	call   403060 <printf@plt>
  405674:	xor    ecx,ecx
  405676:	mov    DWORD PTR [rbp-0x1c0],eax
  40567c:	mov    eax,ecx
  40567e:	add    rsp,0x1c0
  405685:	pop    rbp
  405686:	ret    
  405687:	nop    WORD PTR [rax+rax*1+0x0]
  405690:	push   rbp
  405691:	mov    rbp,rsp
  405694:	sub    rsp,0x10
  405698:	mov    QWORD PTR [rbp-0x8],rdi
  40569c:	mov    rdi,QWORD PTR [rbp-0x8]
  4056a0:	mov    esi,0x2
  4056a5:	call   408d80 <flatcc_builder_start_table@@Base>
  4056aa:	add    rsp,0x10
  4056ae:	pop    rbp
  4056af:	ret    
  4056b0:	push   rbp
  4056b1:	mov    rbp,rsp
  4056b4:	sub    rsp,0x20
  4056b8:	mov    QWORD PTR [rbp-0x8],rdi
  4056bc:	mov    DWORD PTR [rbp-0xc],esi
  4056bf:	cmp    DWORD PTR [rbp-0xc],0x0
  4056c3:	je     4056f5 <main@@Base+0x235>
  4056c9:	xor    esi,esi
  4056cb:	mov    rdi,QWORD PTR [rbp-0x8]
  4056cf:	call   40a550 <flatcc_builder_table_add_offset@@Base>
  4056d4:	mov    QWORD PTR [rbp-0x18],rax
  4056d8:	cmp    rax,0x0
  4056dc:	je     4056f5 <main@@Base+0x235>
  4056e2:	xor    eax,eax
  4056e4:	mov    ecx,DWORD PTR [rbp-0xc]
  4056e7:	mov    rdx,QWORD PTR [rbp-0x18]
  4056eb:	mov    DWORD PTR [rdx],ecx
  4056ed:	mov    DWORD PTR [rbp-0x1c],eax
  4056f0:	jmp    405702 <main@@Base+0x242>
  4056f5:	mov    eax,0xffffffff
  4056fa:	mov    DWORD PTR [rbp-0x1c],eax
  4056fd:	jmp    405702 <main@@Base+0x242>
  405702:	mov    eax,DWORD PTR [rbp-0x1c]
  405705:	add    rsp,0x20
  405709:	pop    rbp
  40570a:	ret    
  40570b:	nop    DWORD PTR [rax+rax*1+0x0]
  405710:	push   rbp
  405711:	mov    rbp,rsp
  405714:	sub    rsp,0x30
  405718:	mov    ax,si
  40571b:	mov    QWORD PTR [rbp-0x10],rdi
  40571f:	mov    WORD PTR [rbp-0x12],ax
  405723:	movsx  esi,WORD PTR [rbp-0x12]
  405727:	cmp    esi,0x0
  40572a:	jne    40573c <main@@Base+0x27c>
  405730:	mov    DWORD PTR [rbp-0x4],0x0
  405737:	jmp    405788 <main@@Base+0x2c8>
  40573c:	mov    eax,0x2
  405741:	mov    edx,eax
  405743:	mov    rdi,QWORD PTR [rbp-0x10]
  405747:	mov    esi,0x1
  40574c:	mov    ecx,0x2
  405751:	call   40a650 <flatcc_builder_table_add@@Base>
  405756:	mov    QWORD PTR [rbp-0x20],rax
  40575a:	cmp    rax,0x0
  40575e:	jne    405770 <main@@Base+0x2b0>
  405764:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40576b:	jmp    405788 <main@@Base+0x2c8>
  405770:	mov    rdi,QWORD PTR [rbp-0x20]
  405774:	movsx  esi,WORD PTR [rbp-0x12]
  405778:	call   405800 <main@@Base+0x340>
  40577d:	mov    DWORD PTR [rbp-0x4],0x0
  405784:	mov    QWORD PTR [rbp-0x28],rax
  405788:	mov    eax,DWORD PTR [rbp-0x4]
  40578b:	add    rsp,0x30
  40578f:	pop    rbp
  405790:	ret    
  405791:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40579b:	nop    DWORD PTR [rax+rax*1+0x0]
  4057a0:	push   rbp
  4057a1:	mov    rbp,rsp
  4057a4:	sub    rsp,0x10
  4057a8:	xor    edx,edx
  4057aa:	mov    QWORD PTR [rbp-0x8],rdi
  4057ae:	mov    rdi,QWORD PTR [rbp-0x8]
  4057b2:	lea    rsi,[rip+0x8181]        # 40d93a <_IO_stdin_used@@Base+0x93a>
  4057b9:	call   409940 <flatcc_builder_check_required@@Base>
  4057be:	cmp    eax,0x0
  4057c1:	je     4057cc <main@@Base+0x30c>
  4057c7:	jmp    4057eb <main@@Base+0x32b>
  4057cc:	lea    rdi,[rip+0x7928]        # 40d0fb <_IO_stdin_used@@Base+0xfb>
  4057d3:	lea    rsi,[rip+0x79bd]        # 40d197 <_IO_stdin_used@@Base+0x197>
  4057da:	mov    edx,0x34
  4057df:	lea    rcx,[rip+0x7a27]        # 40d20d <_IO_stdin_used@@Base+0x20d>
  4057e6:	call   403070 <__assert_fail@plt>
  4057eb:	mov    rdi,QWORD PTR [rbp-0x8]
  4057ef:	call   409a10 <flatcc_builder_end_table@@Base>
  4057f4:	add    rsp,0x10
  4057f8:	pop    rbp
  4057f9:	ret    
  4057fa:	nop    WORD PTR [rax+rax*1+0x0]
  405800:	push   rbp
  405801:	mov    rbp,rsp
  405804:	sub    rsp,0x10
  405808:	mov    ax,si
  40580b:	mov    QWORD PTR [rbp-0x8],rdi
  40580f:	mov    WORD PTR [rbp-0xa],ax
  405813:	movsx  edi,WORD PTR [rbp-0xa]
  405817:	call   405830 <main@@Base+0x370>
  40581c:	mov    rcx,QWORD PTR [rbp-0x8]
  405820:	mov    WORD PTR [rcx],ax
  405823:	mov    rax,QWORD PTR [rbp-0x8]
  405827:	add    rsp,0x10
  40582b:	pop    rbp
  40582c:	ret    
  40582d:	nop    DWORD PTR [rax]
  405830:	push   rbp
  405831:	mov    rbp,rsp
  405834:	mov    ax,di
  405837:	mov    WORD PTR [rbp-0x2],ax
  40583b:	movsx  eax,WORD PTR [rbp-0x2]
  40583f:	pop    rbp
  405840:	ret    
  405841:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40584b:	nop    DWORD PTR [rax+rax*1+0x0]
  405850:	push   rbp
  405851:	mov    rbp,rsp
  405854:	sub    rsp,0x10
  405858:	xor    eax,eax
  40585a:	mov    QWORD PTR [rbp-0x8],rdi
  40585e:	mov    QWORD PTR [rbp-0x10],rsi
  405862:	mov    rdi,QWORD PTR [rbp-0x8]
  405866:	mov    rsi,QWORD PTR [rbp-0x10]
  40586a:	mov    edx,eax
  40586c:	mov    ecx,eax
  40586e:	call   407710 <flatcc_builder_start_buffer@@Base>
  405873:	add    rsp,0x10
  405877:	pop    rbp
  405878:	ret    
  405879:	nop    DWORD PTR [rax+0x0]
  405880:	push   rbp
  405881:	mov    rbp,rsp
  405884:	sub    rsp,0x10
  405888:	mov    QWORD PTR [rbp-0x8],rdi
  40588c:	mov    DWORD PTR [rbp-0xc],esi
  40588f:	mov    rdi,QWORD PTR [rbp-0x8]
  405893:	mov    esi,DWORD PTR [rbp-0xc]
  405896:	call   407a50 <flatcc_builder_end_buffer@@Base>
  40589b:	add    rsp,0x10
  40589f:	pop    rbp
  4058a0:	ret    
  4058a1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4058ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4058b0:	push   rbp
  4058b1:	mov    rbp,rsp
  4058b4:	push   rbx
  4058b5:	sub    rsp,0x38
  4058b9:	mov    ax,cx
  4058bc:	mov    r10w,dx
  4058c0:	mov    r11,QWORD PTR [rbp+0x20]
  4058c4:	mov    ecx,DWORD PTR [rbp+0x18]
  4058c7:	mov    bl,BYTE PTR [rbp+0x10]
  4058ca:	mov    QWORD PTR [rbp-0x18],rdi
  4058ce:	mov    QWORD PTR [rbp-0x20],rsi
  4058d2:	mov    WORD PTR [rbp-0x22],r10w
  4058d7:	mov    WORD PTR [rbp-0x24],ax
  4058db:	mov    DWORD PTR [rbp-0x28],r8d
  4058df:	mov    DWORD PTR [rbp-0x2c],r9d
  4058e3:	mov    rdi,QWORD PTR [rbp-0x18]
  4058e7:	mov    BYTE PTR [rbp-0x2d],bl
  4058ea:	mov    QWORD PTR [rbp-0x38],r11
  4058ee:	mov    DWORD PTR [rbp-0x3c],ecx
  4058f1:	call   4059f0 <main@@Base+0x530>
  4058f6:	cmp    eax,0x0
  4058f9:	jne    4059c2 <main@@Base+0x502>
  4058ff:	mov    rdi,QWORD PTR [rbp-0x18]
  405903:	mov    rsi,QWORD PTR [rbp-0x20]
  405907:	call   405a10 <main@@Base+0x550>
  40590c:	cmp    eax,0x0
  40590f:	jne    4059c2 <main@@Base+0x502>
  405915:	mov    rdi,QWORD PTR [rbp-0x18]
  405919:	mov    esi,DWORD PTR [rbp-0x28]
  40591c:	call   4037f0 <create_monster_bottom_up@@Base+0x600>
  405921:	cmp    eax,0x0
  405924:	jne    4059c2 <main@@Base+0x502>
  40592a:	mov    rdi,QWORD PTR [rbp-0x18]
  40592e:	mov    esi,DWORD PTR [rbp-0x2c]
  405931:	call   403850 <create_monster_bottom_up@@Base+0x660>
  405936:	cmp    eax,0x0
  405939:	jne    4059c2 <main@@Base+0x502>
  40593f:	mov    rdi,QWORD PTR [rbp-0x18]
  405943:	mov    esi,DWORD PTR [rbp+0x18]
  405946:	call   403930 <create_monster_bottom_up@@Base+0x740>
  40594b:	cmp    eax,0x0
  40594e:	jne    4059c2 <main@@Base+0x502>
  405954:	mov    rdi,QWORD PTR [rbp-0x18]
  405958:	mov    rsi,QWORD PTR [rbp+0x20]
  40595c:	call   405a70 <main@@Base+0x5b0>
  405961:	cmp    eax,0x0
  405964:	jne    4059c2 <main@@Base+0x502>
  40596a:	mov    rdi,QWORD PTR [rbp-0x18]
  40596e:	movsx  esi,WORD PTR [rbp-0x22]
  405972:	call   405af0 <main@@Base+0x630>
  405977:	cmp    eax,0x0
  40597a:	jne    4059c2 <main@@Base+0x502>
  405980:	mov    rdi,QWORD PTR [rbp-0x18]
  405984:	movsx  esi,WORD PTR [rbp-0x24]
  405988:	call   403770 <create_monster_bottom_up@@Base+0x580>
  40598d:	cmp    eax,0x0
  405990:	jne    4059c2 <main@@Base+0x502>
  405996:	mov    rdi,QWORD PTR [rbp-0x18]
  40599a:	movsx  esi,BYTE PTR [rbp+0x10]
  40599e:	call   4038b0 <create_monster_bottom_up@@Base+0x6c0>
  4059a3:	cmp    eax,0x0
  4059a6:	jne    4059c2 <main@@Base+0x502>
  4059ac:	mov    rdi,QWORD PTR [rbp-0x18]
  4059b0:	movzx  esi,BYTE PTR [rbp+0x20]
  4059b4:	call   405b80 <main@@Base+0x6c0>
  4059b9:	cmp    eax,0x0
  4059bc:	je     4059ce <main@@Base+0x50e>
  4059c2:	mov    DWORD PTR [rbp-0xc],0x0
  4059c9:	jmp    4059da <main@@Base+0x51a>
  4059ce:	mov    rdi,QWORD PTR [rbp-0x18]
  4059d2:	call   405c10 <main@@Base+0x750>
  4059d7:	mov    DWORD PTR [rbp-0xc],eax
  4059da:	mov    eax,DWORD PTR [rbp-0xc]
  4059dd:	add    rsp,0x38
  4059e1:	pop    rbx
  4059e2:	pop    rbp
  4059e3:	ret    
  4059e4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4059ee:	xchg   ax,ax
  4059f0:	push   rbp
  4059f1:	mov    rbp,rsp
  4059f4:	sub    rsp,0x10
  4059f8:	mov    QWORD PTR [rbp-0x8],rdi
  4059fc:	mov    rdi,QWORD PTR [rbp-0x8]
  405a00:	mov    esi,0xa
  405a05:	call   408d80 <flatcc_builder_start_table@@Base>
  405a0a:	add    rsp,0x10
  405a0e:	pop    rbp
  405a0f:	ret    
  405a10:	push   rbp
  405a11:	mov    rbp,rsp
  405a14:	sub    rsp,0x30
  405a18:	mov    QWORD PTR [rbp-0x10],rdi
  405a1c:	mov    QWORD PTR [rbp-0x18],rsi
  405a20:	mov    rdi,QWORD PTR [rbp-0x10]
  405a24:	call   405c70 <main@@Base+0x7b0>
  405a29:	mov    QWORD PTR [rbp-0x20],rax
  405a2d:	cmp    QWORD PTR [rbp-0x20],0x0
  405a32:	jne    405a44 <main@@Base+0x584>
  405a38:	mov    DWORD PTR [rbp-0x4],0xffffffff
  405a3f:	jmp    405a5c <main@@Base+0x59c>
  405a44:	mov    rdi,QWORD PTR [rbp-0x20]
  405a48:	mov    rsi,QWORD PTR [rbp-0x18]
  405a4c:	call   405ca0 <main@@Base+0x7e0>
  405a51:	mov    DWORD PTR [rbp-0x4],0x0
  405a58:	mov    QWORD PTR [rbp-0x28],rax
  405a5c:	mov    eax,DWORD PTR [rbp-0x4]
  405a5f:	add    rsp,0x30
  405a63:	pop    rbp
  405a64:	ret    
  405a65:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405a6f:	nop
  405a70:	push   rbp
  405a71:	mov    rbp,rsp
  405a74:	sub    rsp,0x30
  405a78:	mov    QWORD PTR [rbp-0x10],rsi
  405a7c:	mov    QWORD PTR [rbp-0x18],rdi
  405a80:	movzx  eax,BYTE PTR [rbp-0x10]
  405a84:	cmp    eax,0x0
  405a87:	jne    405a99 <main@@Base+0x5d9>
  405a8d:	mov    DWORD PTR [rbp-0x4],0x0
  405a94:	jmp    405adb <main@@Base+0x61b>
  405a99:	mov    rdi,QWORD PTR [rbp-0x18]
  405a9d:	mov    esi,0x9
  405aa2:	call   40a550 <flatcc_builder_table_add_offset@@Base>
  405aa7:	mov    QWORD PTR [rbp-0x20],rax
  405aab:	cmp    rax,0x0
  405aaf:	je     405ac8 <main@@Base+0x608>
  405ab5:	xor    eax,eax
  405ab7:	mov    ecx,DWORD PTR [rbp-0xc]
  405aba:	mov    rdx,QWORD PTR [rbp-0x20]
  405abe:	mov    DWORD PTR [rdx],ecx
  405ac0:	mov    DWORD PTR [rbp-0x24],eax
  405ac3:	jmp    405ad5 <main@@Base+0x615>
  405ac8:	mov    eax,0xffffffff
  405acd:	mov    DWORD PTR [rbp-0x24],eax
  405ad0:	jmp    405ad5 <main@@Base+0x615>
  405ad5:	mov    eax,DWORD PTR [rbp-0x24]
  405ad8:	mov    DWORD PTR [rbp-0x4],eax
  405adb:	mov    eax,DWORD PTR [rbp-0x4]
  405ade:	add    rsp,0x30
  405ae2:	pop    rbp
  405ae3:	ret    
  405ae4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405aee:	xchg   ax,ax
  405af0:	push   rbp
  405af1:	mov    rbp,rsp
  405af4:	sub    rsp,0x30
  405af8:	mov    ax,si
  405afb:	mov    QWORD PTR [rbp-0x10],rdi
  405aff:	mov    WORD PTR [rbp-0x12],ax
  405b03:	movsx  esi,WORD PTR [rbp-0x12]
  405b07:	cmp    esi,0x96
  405b0d:	jne    405b1f <main@@Base+0x65f>
  405b13:	mov    DWORD PTR [rbp-0x4],0x0
  405b1a:	jmp    405b6b <main@@Base+0x6ab>
  405b1f:	mov    eax,0x2
  405b24:	mov    edx,eax
  405b26:	mov    rdi,QWORD PTR [rbp-0x10]
  405b2a:	mov    esi,0x1
  405b2f:	mov    ecx,0x2
  405b34:	call   40a650 <flatcc_builder_table_add@@Base>
  405b39:	mov    QWORD PTR [rbp-0x20],rax
  405b3d:	cmp    rax,0x0
  405b41:	jne    405b53 <main@@Base+0x693>
  405b47:	mov    DWORD PTR [rbp-0x4],0xffffffff
  405b4e:	jmp    405b6b <main@@Base+0x6ab>
  405b53:	mov    rdi,QWORD PTR [rbp-0x20]
  405b57:	movsx  esi,WORD PTR [rbp-0x12]
  405b5b:	call   405800 <main@@Base+0x340>
  405b60:	mov    DWORD PTR [rbp-0x4],0x0
  405b67:	mov    QWORD PTR [rbp-0x28],rax
  405b6b:	mov    eax,DWORD PTR [rbp-0x4]
  405b6e:	add    rsp,0x30
  405b72:	pop    rbp
  405b73:	ret    
  405b74:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405b7e:	xchg   ax,ax
  405b80:	push   rbp
  405b81:	mov    rbp,rsp
  405b84:	sub    rsp,0x30
  405b88:	mov    al,sil
  405b8b:	mov    QWORD PTR [rbp-0x10],rdi
  405b8f:	mov    BYTE PTR [rbp-0x11],al
  405b92:	movzx  esi,BYTE PTR [rbp-0x11]
  405b96:	cmp    esi,0x0
  405b99:	jne    405bab <main@@Base+0x6eb>
  405b9f:	mov    DWORD PTR [rbp-0x4],0x0
  405ba6:	jmp    405bf9 <main@@Base+0x739>
  405bab:	mov    eax,0x1
  405bb0:	mov    edx,eax
  405bb2:	mov    rdi,QWORD PTR [rbp-0x10]
  405bb6:	mov    esi,0x8
  405bbb:	mov    ecx,0x1
  405bc0:	call   40a650 <flatcc_builder_table_add@@Base>
  405bc5:	mov    QWORD PTR [rbp-0x20],rax
  405bc9:	cmp    rax,0x0
  405bcd:	je     405be6 <main@@Base+0x726>
  405bd3:	xor    eax,eax
  405bd5:	mov    cl,BYTE PTR [rbp-0x11]
  405bd8:	mov    rdx,QWORD PTR [rbp-0x20]
  405bdc:	mov    BYTE PTR [rdx],cl
  405bde:	mov    DWORD PTR [rbp-0x24],eax
  405be1:	jmp    405bf3 <main@@Base+0x733>
  405be6:	mov    eax,0xffffffff
  405beb:	mov    DWORD PTR [rbp-0x24],eax
  405bee:	jmp    405bf3 <main@@Base+0x733>
  405bf3:	mov    eax,DWORD PTR [rbp-0x24]
  405bf6:	mov    DWORD PTR [rbp-0x4],eax
  405bf9:	mov    eax,DWORD PTR [rbp-0x4]
  405bfc:	add    rsp,0x30
  405c00:	pop    rbp
  405c01:	ret    
  405c02:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405c0c:	nop    DWORD PTR [rax+0x0]
  405c10:	push   rbp
  405c11:	mov    rbp,rsp
  405c14:	sub    rsp,0x10
  405c18:	xor    edx,edx
  405c1a:	mov    QWORD PTR [rbp-0x8],rdi
  405c1e:	mov    rdi,QWORD PTR [rbp-0x8]
  405c22:	lea    rsi,[rip+0x7d13]        # 40d93c <_IO_stdin_used@@Base+0x93c>
  405c29:	call   409940 <flatcc_builder_check_required@@Base>
  405c2e:	cmp    eax,0x0
  405c31:	je     405c3c <main@@Base+0x77c>
  405c37:	jmp    405c5b <main@@Base+0x79b>
  405c3c:	lea    rdi,[rip+0x7617]        # 40d25a <_IO_stdin_used@@Base+0x25a>
  405c43:	lea    rsi,[rip+0x754d]        # 40d197 <_IO_stdin_used@@Base+0x197>
  405c4a:	mov    edx,0x32
  405c4f:	lea    rcx,[rip+0x76a3]        # 40d2f9 <_IO_stdin_used@@Base+0x2f9>
  405c56:	call   403070 <__assert_fail@plt>
  405c5b:	mov    rdi,QWORD PTR [rbp-0x8]
  405c5f:	call   409a10 <flatcc_builder_end_table@@Base>
  405c64:	add    rsp,0x10
  405c68:	pop    rbp
  405c69:	ret    
  405c6a:	nop    WORD PTR [rax+rax*1+0x0]
  405c70:	push   rbp
  405c71:	mov    rbp,rsp
  405c74:	sub    rsp,0x10
  405c78:	xor    esi,esi
  405c7a:	mov    eax,0xc
  405c7f:	mov    edx,eax
  405c81:	mov    QWORD PTR [rbp-0x8],rdi
  405c85:	mov    rdi,QWORD PTR [rbp-0x8]
  405c89:	mov    ecx,0x4
  405c8e:	call   40a650 <flatcc_builder_table_add@@Base>
  405c93:	add    rsp,0x10
  405c97:	pop    rbp
  405c98:	ret    
  405c99:	nop    DWORD PTR [rax+0x0]
  405ca0:	push   rbp
  405ca1:	mov    rbp,rsp
  405ca4:	sub    rsp,0x40
  405ca8:	mov    QWORD PTR [rbp-0x8],rdi
  405cac:	mov    QWORD PTR [rbp-0x10],rsi
  405cb0:	mov    rdi,QWORD PTR [rbp-0x8]
  405cb4:	mov    rsi,QWORD PTR [rbp-0x10]
  405cb8:	call   405d20 <main@@Base+0x860>
  405cbd:	mov    rsi,QWORD PTR [rbp-0x8]
  405cc1:	add    rsi,0x4
  405cc5:	mov    rdi,QWORD PTR [rbp-0x10]
  405cc9:	add    rdi,0x4
  405ccd:	mov    QWORD PTR [rbp-0x18],rdi
  405cd1:	mov    rdi,rsi
  405cd4:	mov    rsi,QWORD PTR [rbp-0x18]
  405cd8:	mov    QWORD PTR [rbp-0x20],rax
  405cdc:	call   405d20 <main@@Base+0x860>
  405ce1:	mov    rsi,QWORD PTR [rbp-0x8]
  405ce5:	add    rsi,0x8
  405ce9:	mov    rdi,QWORD PTR [rbp-0x10]
  405ced:	add    rdi,0x8
  405cf1:	mov    QWORD PTR [rbp-0x28],rdi
  405cf5:	mov    rdi,rsi
  405cf8:	mov    rsi,QWORD PTR [rbp-0x28]
  405cfc:	mov    QWORD PTR [rbp-0x30],rax
  405d00:	call   405d20 <main@@Base+0x860>
  405d05:	mov    rsi,QWORD PTR [rbp-0x8]
  405d09:	mov    QWORD PTR [rbp-0x38],rax
  405d0d:	mov    rax,rsi
  405d10:	add    rsp,0x40
  405d14:	pop    rbp
  405d15:	ret    
  405d16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405d20:	push   rbp
  405d21:	mov    rbp,rsp
  405d24:	sub    rsp,0x10
  405d28:	mov    QWORD PTR [rbp-0x8],rdi
  405d2c:	mov    QWORD PTR [rbp-0x10],rsi
  405d30:	mov    rsi,QWORD PTR [rbp-0x10]
  405d34:	vmovss xmm0,DWORD PTR [rsi]
  405d38:	call   405d50 <main@@Base+0x890>
  405d3d:	mov    rsi,QWORD PTR [rbp-0x8]
  405d41:	vmovss DWORD PTR [rsi],xmm0
  405d45:	mov    rax,QWORD PTR [rbp-0x8]
  405d49:	add    rsp,0x10
  405d4d:	pop    rbp
  405d4e:	ret    
  405d4f:	nop
  405d50:	push   rbp
  405d51:	mov    rbp,rsp
  405d54:	vmovss DWORD PTR [rbp-0x4],xmm0
  405d59:	vmovss xmm0,DWORD PTR [rbp-0x4]
  405d5e:	vmovss DWORD PTR [rbp-0x8],xmm0
  405d63:	mov    eax,DWORD PTR [rbp-0x8]
  405d66:	mov    DWORD PTR [rbp-0x8],eax
  405d69:	vmovss xmm0,DWORD PTR [rbp-0x8]
  405d6e:	pop    rbp
  405d6f:	ret    
  405d70:	push   rbp
  405d71:	mov    rbp,rsp
  405d74:	sub    rsp,0x30
  405d78:	mov    QWORD PTR [rbp-0x8],rdi
  405d7c:	vmovss DWORD PTR [rbp-0xc],xmm0
  405d81:	vmovss DWORD PTR [rbp-0x10],xmm1
  405d86:	vmovss DWORD PTR [rbp-0x14],xmm2
  405d8b:	mov    rdi,QWORD PTR [rbp-0x8]
  405d8f:	vmovss xmm0,DWORD PTR [rbp-0xc]
  405d94:	call   405de0 <main@@Base+0x920>
  405d99:	mov    rdi,QWORD PTR [rbp-0x8]
  405d9d:	add    rdi,0x4
  405da1:	vmovss xmm0,DWORD PTR [rbp-0x10]
  405da6:	mov    QWORD PTR [rbp-0x20],rax
  405daa:	call   405de0 <main@@Base+0x920>
  405daf:	mov    rdi,QWORD PTR [rbp-0x8]
  405db3:	add    rdi,0x8
  405db7:	vmovss xmm0,DWORD PTR [rbp-0x14]
  405dbc:	mov    QWORD PTR [rbp-0x28],rax
  405dc0:	call   405de0 <main@@Base+0x920>
  405dc5:	mov    rdi,QWORD PTR [rbp-0x8]
  405dc9:	mov    QWORD PTR [rbp-0x30],rax
  405dcd:	mov    rax,rdi
  405dd0:	add    rsp,0x30
  405dd4:	pop    rbp
  405dd5:	ret    
  405dd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405de0:	push   rbp
  405de1:	mov    rbp,rsp
  405de4:	sub    rsp,0x10
  405de8:	mov    QWORD PTR [rbp-0x8],rdi
  405dec:	vmovss DWORD PTR [rbp-0xc],xmm0
  405df1:	vmovss xmm0,DWORD PTR [rbp-0xc]
  405df6:	call   405d50 <main@@Base+0x890>
  405dfb:	mov    rdi,QWORD PTR [rbp-0x8]
  405dff:	vmovss DWORD PTR [rdi],xmm0
  405e03:	mov    rax,QWORD PTR [rbp-0x8]
  405e07:	add    rsp,0x10
  405e0b:	pop    rbp
  405e0c:	ret    
  405e0d:	nop    DWORD PTR [rax]
  405e10:	push   rbp
  405e11:	mov    rbp,rsp
  405e14:	sub    rsp,0x10
  405e18:	mov    al,sil
  405e1b:	mov    QWORD PTR [rbp-0x8],rdi
  405e1f:	mov    BYTE PTR [rbp-0x9],al
  405e22:	movsx  edi,BYTE PTR [rbp-0x9]
  405e26:	call   405e40 <main@@Base+0x980>
  405e2b:	mov    rcx,QWORD PTR [rbp-0x8]
  405e2f:	mov    BYTE PTR [rcx],al
  405e31:	mov    rax,QWORD PTR [rbp-0x8]
  405e35:	add    rsp,0x10
  405e39:	pop    rbp
  405e3a:	ret    
  405e3b:	nop    DWORD PTR [rax+rax*1+0x0]
  405e40:	push   rbp
  405e41:	mov    rbp,rsp
  405e44:	mov    al,dil
  405e47:	mov    BYTE PTR [rbp-0x1],al
  405e4a:	movsx  eax,BYTE PTR [rbp-0x1]
  405e4e:	pop    rbp
  405e4f:	ret    
  405e50:	push   rbp
  405e51:	mov    rbp,rsp
  405e54:	sub    rsp,0x20
  405e58:	mov    QWORD PTR [rbp-0x8],rdi
  405e5c:	mov    DWORD PTR [rbp-0xc],esi
  405e5f:	cmp    DWORD PTR [rbp-0xc],0x0
  405e63:	je     405e7e <main@@Base+0x9be>
  405e69:	mov    rdi,QWORD PTR [rbp-0x8]
  405e6d:	mov    esi,DWORD PTR [rbp-0xc]
  405e70:	call   408250 <flatcc_builder_offset_vector_push@@Base>
  405e75:	mov    QWORD PTR [rbp-0x18],rax
  405e79:	jmp    405e8b <main@@Base+0x9cb>
  405e7e:	xor    eax,eax
  405e80:	mov    ecx,eax
  405e82:	mov    QWORD PTR [rbp-0x18],rcx
  405e86:	jmp    405e8b <main@@Base+0x9cb>
  405e8b:	mov    rax,QWORD PTR [rbp-0x18]
  405e8f:	add    rsp,0x20
  405e93:	pop    rbp
  405e94:	ret    
  405e95:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405e9f:	nop
  405ea0:	push   rbp
  405ea1:	mov    rbp,rsp
  405ea4:	sub    rsp,0x30
  405ea8:	mov    QWORD PTR [rbp-0x10],rdi
  405eac:	mov    QWORD PTR [rbp-0x18],rsi
  405eb0:	mov    DWORD PTR [rbp-0x20],0x0
  405eb7:	cmp    QWORD PTR [rbp-0x18],0x0
  405ebc:	jne    405ece <main@@Base+0xa0e>
  405ec2:	mov    DWORD PTR [rbp-0x4],0x1
  405ec9:	jmp    405f2f <main@@Base+0xa6f>
  405ece:	mov    eax,0x4
  405ed3:	mov    edx,eax
  405ed5:	lea    rcx,[rbp-0x20]
  405ed9:	mov    rsi,QWORD PTR [rbp-0x18]
  405edd:	mov    rdi,rcx
  405ee0:	call   403040 <strncpy@plt>
  405ee5:	mov    edi,DWORD PTR [rbp-0x20]
  405ee8:	mov    QWORD PTR [rbp-0x28],rax
  405eec:	call   405f60 <main@@Base+0xaa0>
  405ef1:	mov    DWORD PTR [rbp-0x20],eax
  405ef4:	mov    rcx,QWORD PTR [rbp-0x10]
  405ef8:	add    rcx,0x4
  405efc:	mov    rdi,rcx
  405eff:	call   405f70 <main@@Base+0xab0>
  405f04:	mov    DWORD PTR [rbp-0x1c],eax
  405f07:	cmp    DWORD PTR [rbp-0x20],0x0
  405f0b:	mov    r8b,0x1
  405f0e:	mov    BYTE PTR [rbp-0x29],r8b
  405f12:	je     405f24 <main@@Base+0xa64>
  405f18:	mov    eax,DWORD PTR [rbp-0x1c]
  405f1b:	cmp    eax,DWORD PTR [rbp-0x20]
  405f1e:	sete   cl
  405f21:	mov    BYTE PTR [rbp-0x29],cl
  405f24:	mov    al,BYTE PTR [rbp-0x29]
  405f27:	and    al,0x1
  405f29:	movzx  ecx,al
  405f2c:	mov    DWORD PTR [rbp-0x4],ecx
  405f2f:	mov    eax,DWORD PTR [rbp-0x4]
  405f32:	add    rsp,0x30
  405f36:	pop    rbp
  405f37:	ret    
  405f38:	nop    DWORD PTR [rax+rax*1+0x0]
  405f40:	push   rbp
  405f41:	mov    rbp,rsp
  405f44:	sub    rsp,0x10
  405f48:	mov    QWORD PTR [rbp-0x8],rdi
  405f4c:	mov    rdi,QWORD PTR [rbp-0x8]
  405f50:	mov    edi,DWORD PTR [rdi]
  405f52:	call   405fa0 <main@@Base+0xae0>
  405f57:	add    rsp,0x10
  405f5b:	pop    rbp
  405f5c:	ret    
  405f5d:	nop    DWORD PTR [rax]
  405f60:	push   rbp
  405f61:	mov    rbp,rsp
  405f64:	mov    DWORD PTR [rbp-0x4],edi
  405f67:	mov    eax,DWORD PTR [rbp-0x4]
  405f6a:	pop    rbp
  405f6b:	ret    
  405f6c:	nop    DWORD PTR [rax+0x0]
  405f70:	push   rbp
  405f71:	mov    rbp,rsp
  405f74:	sub    rsp,0x10
  405f78:	mov    QWORD PTR [rbp-0x8],rdi
  405f7c:	mov    rdi,QWORD PTR [rbp-0x8]
  405f80:	mov    edi,DWORD PTR [rdi]
  405f82:	call   405f90 <main@@Base+0xad0>
  405f87:	add    rsp,0x10
  405f8b:	pop    rbp
  405f8c:	ret    
  405f8d:	nop    DWORD PTR [rax]
  405f90:	push   rbp
  405f91:	mov    rbp,rsp
  405f94:	mov    DWORD PTR [rbp-0x4],edi
  405f97:	mov    eax,DWORD PTR [rbp-0x4]
  405f9a:	pop    rbp
  405f9b:	ret    
  405f9c:	nop    DWORD PTR [rax+0x0]
  405fa0:	push   rbp
  405fa1:	mov    rbp,rsp
  405fa4:	mov    DWORD PTR [rbp-0x4],edi
  405fa7:	mov    eax,DWORD PTR [rbp-0x4]
  405faa:	pop    rbp
  405fab:	ret    
  405fac:	nop    DWORD PTR [rax+0x0]
  405fb0:	push   rbp
  405fb1:	mov    rbp,rsp
  405fb4:	sub    rsp,0x10
  405fb8:	mov    QWORD PTR [rbp-0x8],rdi
  405fbc:	mov    rdi,QWORD PTR [rbp-0x8]
  405fc0:	mov    edi,DWORD PTR [rdi]
  405fc2:	call   406020 <main@@Base+0xb60>
  405fc7:	add    rsp,0x10
  405fcb:	pop    rbp
  405fcc:	ret    
  405fcd:	nop    DWORD PTR [rax]
  405fd0:	push   rbp
  405fd1:	mov    rbp,rsp
  405fd4:	sub    rsp,0x10
  405fd8:	mov    QWORD PTR [rbp-0x8],rdi
  405fdc:	mov    rdi,QWORD PTR [rbp-0x8]
  405fe0:	movzx  edi,WORD PTR [rdi]
  405fe3:	call   406030 <main@@Base+0xb70>
  405fe8:	movzx  eax,ax
  405feb:	add    rsp,0x10
  405fef:	pop    rbp
  405ff0:	ret    
  405ff1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405ffb:	nop    DWORD PTR [rax+rax*1+0x0]
  406000:	push   rbp
  406001:	mov    rbp,rsp
  406004:	sub    rsp,0x10
  406008:	mov    QWORD PTR [rbp-0x8],rdi
  40600c:	mov    rdi,QWORD PTR [rbp-0x8]
  406010:	movsx  edi,WORD PTR [rdi]
  406013:	call   406050 <main@@Base+0xb90>
  406018:	cwde   
  406019:	add    rsp,0x10
  40601d:	pop    rbp
  40601e:	ret    
  40601f:	nop
  406020:	push   rbp
  406021:	mov    rbp,rsp
  406024:	mov    DWORD PTR [rbp-0x4],edi
  406027:	mov    eax,DWORD PTR [rbp-0x4]
  40602a:	pop    rbp
  40602b:	ret    
  40602c:	nop    DWORD PTR [rax+0x0]
  406030:	push   rbp
  406031:	mov    rbp,rsp
  406034:	mov    ax,di
  406037:	mov    WORD PTR [rbp-0x2],ax
  40603b:	movzx  eax,WORD PTR [rbp-0x2]
  40603f:	pop    rbp
  406040:	ret    
  406041:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40604b:	nop    DWORD PTR [rax+rax*1+0x0]
  406050:	push   rbp
  406051:	mov    rbp,rsp
  406054:	mov    ax,di
  406057:	mov    WORD PTR [rbp-0x2],ax
  40605b:	movsx  eax,WORD PTR [rbp-0x2]
  40605f:	pop    rbp
  406060:	ret    
  406061:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40606b:	nop    DWORD PTR [rax+rax*1+0x0]
  406070:	push   rbp
  406071:	mov    rbp,rsp
  406074:	sub    rsp,0x10
  406078:	mov    QWORD PTR [rbp-0x8],rdi
  40607c:	mov    rdi,QWORD PTR [rbp-0x8]
  406080:	vmovss xmm0,DWORD PTR [rdi]
  406084:	call   406090 <main@@Base+0xbd0>
  406089:	add    rsp,0x10
  40608d:	pop    rbp
  40608e:	ret    
  40608f:	nop
  406090:	push   rbp
  406091:	mov    rbp,rsp
  406094:	vmovss DWORD PTR [rbp-0x4],xmm0
  406099:	vmovss xmm0,DWORD PTR [rbp-0x4]
  40609e:	vmovss DWORD PTR [rbp-0x8],xmm0
  4060a3:	mov    eax,DWORD PTR [rbp-0x8]
  4060a6:	mov    DWORD PTR [rbp-0x8],eax
  4060a9:	vmovss xmm0,DWORD PTR [rbp-0x8]
  4060ae:	pop    rbp
  4060af:	ret    
  4060b0:	push   rbp
  4060b1:	mov    rbp,rsp
  4060b4:	sub    rsp,0x10
  4060b8:	mov    QWORD PTR [rbp-0x8],rdi
  4060bc:	mov    QWORD PTR [rbp-0x10],rsi
  4060c0:	mov    rsi,QWORD PTR [rbp-0x10]
  4060c4:	vmovss xmm0,DWORD PTR [rsi]
  4060c8:	call   406090 <main@@Base+0xbd0>
  4060cd:	mov    rsi,QWORD PTR [rbp-0x8]
  4060d1:	vmovss DWORD PTR [rsi],xmm0
  4060d5:	mov    rax,QWORD PTR [rbp-0x8]
  4060d9:	add    rsp,0x10
  4060dd:	pop    rbp
  4060de:	ret    
  4060df:	nop
  4060e0:	push   rbp
  4060e1:	mov    rbp,rsp
  4060e4:	sub    rsp,0x10
  4060e8:	mov    QWORD PTR [rbp-0x8],rdi
  4060ec:	cmp    QWORD PTR [rbp-0x8],0x0
  4060f1:	je     406114 <main@@Base+0xc54>
  4060f7:	mov    rax,QWORD PTR [rbp-0x8]
  4060fb:	add    rax,0xfffffffffffffffc
  4060ff:	mov    rdi,rax
  406102:	call   405f40 <main@@Base+0xa80>
  406107:	mov    eax,eax
  406109:	mov    edi,eax
  40610b:	mov    QWORD PTR [rbp-0x10],rdi
  40610f:	jmp    406121 <main@@Base+0xc61>
  406114:	xor    eax,eax
  406116:	mov    ecx,eax
  406118:	mov    QWORD PTR [rbp-0x10],rcx
  40611c:	jmp    406121 <main@@Base+0xc61>
  406121:	mov    rax,QWORD PTR [rbp-0x10]
  406125:	add    rsp,0x10
  406129:	pop    rbp
  40612a:	ret    
  40612b:	nop    DWORD PTR [rax+rax*1+0x0]
  406130:	push   rbp
  406131:	mov    rbp,rsp
  406134:	sub    rsp,0x10
  406138:	mov    QWORD PTR [rbp-0x8],rdi
  40613c:	mov    rdi,QWORD PTR [rbp-0x8]
  406140:	movzx  edi,BYTE PTR [rdi]
  406143:	call   406160 <main@@Base+0xca0>
  406148:	movzx  eax,al
  40614b:	add    rsp,0x10
  40614f:	pop    rbp
  406150:	ret    
  406151:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40615b:	nop    DWORD PTR [rax+rax*1+0x0]
  406160:	push   rbp
  406161:	mov    rbp,rsp
  406164:	mov    al,dil
  406167:	mov    BYTE PTR [rbp-0x1],al
  40616a:	movzx  eax,BYTE PTR [rbp-0x1]
  40616e:	pop    rbp
  40616f:	ret    
  406170:	push   rbp
  406171:	mov    rbp,rsp
  406174:	sub    rsp,0x10
  406178:	mov    QWORD PTR [rbp-0x8],rdi
  40617c:	mov    rdi,QWORD PTR [rbp-0x8]
  406180:	movzx  edi,BYTE PTR [rdi]
  406183:	call   4061a0 <main@@Base+0xce0>
  406188:	movzx  eax,al
  40618b:	add    rsp,0x10
  40618f:	pop    rbp
  406190:	ret    
  406191:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40619b:	nop    DWORD PTR [rax+rax*1+0x0]
  4061a0:	push   rbp
  4061a1:	mov    rbp,rsp
  4061a4:	mov    al,dil
  4061a7:	mov    BYTE PTR [rbp-0x1],al
  4061aa:	movzx  eax,BYTE PTR [rbp-0x1]
  4061ae:	pop    rbp
  4061af:	ret    

00000000004061b0 <flatcc_builder_default_alloc@@Base>:
  4061b0:	push   rbp
  4061b1:	mov    rbp,rsp
  4061b4:	sub    rsp,0x50
  4061b8:	mov    QWORD PTR [rbp-0x10],rdi
  4061bc:	mov    QWORD PTR [rbp-0x18],rsi
  4061c0:	mov    QWORD PTR [rbp-0x20],rdx
  4061c4:	mov    DWORD PTR [rbp-0x24],ecx
  4061c7:	mov    DWORD PTR [rbp-0x28],r8d
  4061cb:	cmp    QWORD PTR [rbp-0x20],0x0
  4061d0:	jne    406213 <flatcc_builder_default_alloc@@Base+0x63>
  4061d6:	mov    rax,QWORD PTR [rbp-0x18]
  4061da:	cmp    QWORD PTR [rax],0x0
  4061de:	je     406207 <flatcc_builder_default_alloc@@Base+0x57>
  4061e4:	mov    rax,QWORD PTR [rbp-0x18]
  4061e8:	mov    rdi,QWORD PTR [rax]
  4061eb:	call   403030 <free@plt>
  4061f0:	mov    rax,QWORD PTR [rbp-0x18]
  4061f4:	mov    QWORD PTR [rax],0x0
  4061fb:	mov    rax,QWORD PTR [rbp-0x18]
  4061ff:	mov    QWORD PTR [rax+0x8],0x0
  406207:	mov    DWORD PTR [rbp-0x4],0x0
  40620e:	jmp    40635c <flatcc_builder_default_alloc@@Base+0x1ac>
  406213:	mov    eax,DWORD PTR [rbp-0x28]
  406216:	add    eax,0xffffffff
  406219:	mov    ecx,eax
  40621b:	sub    eax,0x6
  40621e:	mov    QWORD PTR [rbp-0x40],rcx
  406222:	mov    DWORD PTR [rbp-0x44],eax
  406225:	ja     406273 <flatcc_builder_default_alloc@@Base+0xc3>
  40622b:	lea    rax,[rip+0x770e]        # 40d940 <_IO_stdin_used@@Base+0x940>
  406232:	mov    rcx,QWORD PTR [rbp-0x40]
  406236:	movsxd rdx,DWORD PTR [rax+rcx*4]
  40623a:	add    rdx,rax
  40623d:	jmp    rdx
  40623f:	mov    QWORD PTR [rbp-0x38],0x100
  406247:	jmp    40627b <flatcc_builder_default_alloc@@Base+0xcb>
  40624c:	mov    rax,QWORD PTR [rbp-0x20]
  406250:	mov    QWORD PTR [rbp-0x38],rax
  406254:	jmp    40627b <flatcc_builder_default_alloc@@Base+0xcb>
  406259:	mov    QWORD PTR [rbp-0x38],0x120
  406261:	jmp    40627b <flatcc_builder_default_alloc@@Base+0xcb>
  406266:	mov    QWORD PTR [rbp-0x38],0x40
  40626e:	jmp    40627b <flatcc_builder_default_alloc@@Base+0xcb>
  406273:	mov    QWORD PTR [rbp-0x38],0x20
  40627b:	jmp    406280 <flatcc_builder_default_alloc@@Base+0xd0>
  406280:	mov    rax,QWORD PTR [rbp-0x38]
  406284:	cmp    rax,QWORD PTR [rbp-0x20]
  406288:	jae    40629f <flatcc_builder_default_alloc@@Base+0xef>
  40628e:	mov    rax,QWORD PTR [rbp-0x38]
  406292:	shl    rax,0x1
  406296:	mov    QWORD PTR [rbp-0x38],rax
  40629a:	jmp    406280 <flatcc_builder_default_alloc@@Base+0xd0>
  40629f:	mov    rax,QWORD PTR [rbp-0x20]
  4062a3:	mov    rcx,QWORD PTR [rbp-0x18]
  4062a7:	cmp    rax,QWORD PTR [rcx+0x8]
  4062ab:	ja     4062d3 <flatcc_builder_default_alloc@@Base+0x123>
  4062b1:	mov    rax,QWORD PTR [rbp-0x18]
  4062b5:	mov    rax,QWORD PTR [rax+0x8]
  4062b9:	shr    rax,0x1
  4062bd:	cmp    rax,QWORD PTR [rbp-0x38]
  4062c1:	jb     4062d3 <flatcc_builder_default_alloc@@Base+0x123>
  4062c7:	mov    DWORD PTR [rbp-0x4],0x0
  4062ce:	jmp    40635c <flatcc_builder_default_alloc@@Base+0x1ac>
  4062d3:	mov    rax,QWORD PTR [rbp-0x18]
  4062d7:	mov    rdi,QWORD PTR [rax]
  4062da:	mov    rsi,QWORD PTR [rbp-0x38]
  4062de:	call   4030e0 <realloc@plt>
  4062e3:	mov    QWORD PTR [rbp-0x30],rax
  4062e7:	cmp    rax,0x0
  4062eb:	jne    4062fd <flatcc_builder_default_alloc@@Base+0x14d>
  4062f1:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4062f8:	jmp    40635c <flatcc_builder_default_alloc@@Base+0x1ac>
  4062fd:	cmp    DWORD PTR [rbp-0x24],0x0
  406301:	je     40633e <flatcc_builder_default_alloc@@Base+0x18e>
  406307:	mov    rax,QWORD PTR [rbp-0x18]
  40630b:	mov    rax,QWORD PTR [rax+0x8]
  40630f:	cmp    rax,QWORD PTR [rbp-0x38]
  406313:	jae    40633e <flatcc_builder_default_alloc@@Base+0x18e>
  406319:	xor    esi,esi
  40631b:	mov    rax,QWORD PTR [rbp-0x30]
  40631f:	mov    rcx,QWORD PTR [rbp-0x18]
  406323:	add    rax,QWORD PTR [rcx+0x8]
  406327:	mov    rcx,QWORD PTR [rbp-0x38]
  40632b:	mov    rdx,QWORD PTR [rbp-0x18]
  40632f:	sub    rcx,QWORD PTR [rdx+0x8]
  406333:	mov    rdi,rax
  406336:	mov    rdx,rcx
  406339:	call   403080 <memset@plt>
  40633e:	mov    rax,QWORD PTR [rbp-0x30]
  406342:	mov    rcx,QWORD PTR [rbp-0x18]
  406346:	mov    QWORD PTR [rcx],rax
  406349:	mov    rax,QWORD PTR [rbp-0x38]
  40634d:	mov    rcx,QWORD PTR [rbp-0x18]
  406351:	mov    QWORD PTR [rcx+0x8],rax
  406355:	mov    DWORD PTR [rbp-0x4],0x0
  40635c:	mov    eax,DWORD PTR [rbp-0x4]
  40635f:	add    rsp,0x50
  406363:	pop    rbp
  406364:	ret    
  406365:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40636f:	nop

0000000000406370 <flatcc_builder_flush_vtable_cache@@Base>:
  406370:	push   rbp
  406371:	mov    rbp,rsp
  406374:	sub    rsp,0x10
  406378:	mov    QWORD PTR [rbp-0x8],rdi
  40637c:	mov    rdi,QWORD PTR [rbp-0x8]
  406380:	add    rdi,0x58
  406384:	add    rdi,0x50
  406388:	mov    QWORD PTR [rbp-0x10],rdi
  40638c:	mov    rdi,QWORD PTR [rbp-0x8]
  406390:	cmp    QWORD PTR [rdi+0xd8],0x0
  406398:	jne    4063a3 <flatcc_builder_flush_vtable_cache@@Base+0x33>
  40639e:	jmp    4063d5 <flatcc_builder_flush_vtable_cache@@Base+0x65>
  4063a3:	xor    esi,esi
  4063a5:	mov    rax,QWORD PTR [rbp-0x10]
  4063a9:	mov    rdi,QWORD PTR [rax]
  4063ac:	mov    rax,QWORD PTR [rbp-0x10]
  4063b0:	mov    rdx,QWORD PTR [rax+0x8]
  4063b4:	call   403080 <memset@plt>
  4063b9:	mov    rax,QWORD PTR [rbp-0x8]
  4063bd:	mov    DWORD PTR [rax+0xe4],0x10
  4063c7:	mov    rax,QWORD PTR [rbp-0x8]
  4063cb:	mov    DWORD PTR [rax+0xe0],0x0
  4063d5:	add    rsp,0x10
  4063d9:	pop    rbp
  4063da:	ret    
  4063db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004063e0 <flatcc_builder_custom_init@@Base>:
  4063e0:	push   rbp
  4063e1:	mov    rbp,rsp
  4063e4:	sub    rsp,0x30
  4063e8:	xor    eax,eax
  4063ea:	mov    r9d,0x188
  4063f0:	mov    r10d,r9d
  4063f3:	mov    QWORD PTR [rbp-0x8],rdi
  4063f7:	mov    QWORD PTR [rbp-0x10],rsi
  4063fb:	mov    QWORD PTR [rbp-0x18],rdx
  4063ff:	mov    QWORD PTR [rbp-0x20],rcx
  406403:	mov    QWORD PTR [rbp-0x28],r8
  406407:	mov    rcx,QWORD PTR [rbp-0x8]
  40640b:	mov    rdi,rcx
  40640e:	mov    esi,eax
  406410:	mov    rdx,r10
  406413:	call   403080 <memset@plt>
  406418:	cmp    QWORD PTR [rbp-0x10],0x0
  40641d:	jne    40644a <flatcc_builder_custom_init@@Base+0x6a>
  406423:	lea    rax,[rip+0x5e96]        # 40c2c0 <flatcc_emitter@@Base>
  40642a:	mov    rcx,QWORD PTR [rbp-0x8]
  40642e:	mov    DWORD PTR [rcx+0x128],0x1
  406438:	mov    QWORD PTR [rbp-0x10],rax
  40643c:	mov    rax,QWORD PTR [rbp-0x8]
  406440:	add    rax,0x130
  406446:	mov    QWORD PTR [rbp-0x18],rax
  40644a:	cmp    QWORD PTR [rbp-0x20],0x0
  40644f:	jne    406460 <flatcc_builder_custom_init@@Base+0x80>
  406455:	lea    rax,[rip+0xfffffffffffffd54]        # 4061b0 <flatcc_builder_default_alloc@@Base>
  40645c:	mov    QWORD PTR [rbp-0x20],rax
  406460:	xor    eax,eax
  406462:	mov    rcx,QWORD PTR [rbp-0x28]
  406466:	mov    rdx,QWORD PTR [rbp-0x8]
  40646a:	mov    QWORD PTR [rdx+0x40],rcx
  40646e:	mov    rcx,QWORD PTR [rbp-0x20]
  406472:	mov    rdx,QWORD PTR [rbp-0x8]
  406476:	mov    QWORD PTR [rdx+0x50],rcx
  40647a:	mov    rcx,QWORD PTR [rbp-0x18]
  40647e:	mov    rdx,QWORD PTR [rbp-0x8]
  406482:	mov    QWORD PTR [rdx+0x38],rcx
  406486:	mov    rcx,QWORD PTR [rbp-0x10]
  40648a:	mov    rdx,QWORD PTR [rbp-0x8]
  40648e:	mov    QWORD PTR [rdx+0x48],rcx
  406492:	add    rsp,0x30
  406496:	pop    rbp
  406497:	ret    
  406498:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004064a0 <flatcc_builder_init@@Base>:
  4064a0:	push   rbp
  4064a1:	mov    rbp,rsp
  4064a4:	sub    rsp,0x10
  4064a8:	xor    eax,eax
  4064aa:	mov    ecx,eax
  4064ac:	mov    QWORD PTR [rbp-0x8],rdi
  4064b0:	mov    rdi,QWORD PTR [rbp-0x8]
  4064b4:	mov    rsi,rcx
  4064b7:	mov    rdx,rcx
  4064ba:	mov    QWORD PTR [rbp-0x10],rcx
  4064be:	mov    r8,QWORD PTR [rbp-0x10]
  4064c2:	call   4063e0 <flatcc_builder_custom_init@@Base>
  4064c7:	add    rsp,0x10
  4064cb:	pop    rbp
  4064cc:	ret    
  4064cd:	nop    DWORD PTR [rax]

00000000004064d0 <flatcc_builder_custom_reset@@Base>:
  4064d0:	push   rbp
  4064d1:	mov    rbp,rsp
  4064d4:	sub    rsp,0x30
  4064d8:	mov    QWORD PTR [rbp-0x10],rdi
  4064dc:	mov    DWORD PTR [rbp-0x14],esi
  4064df:	mov    DWORD PTR [rbp-0x18],edx
  4064e2:	mov    DWORD PTR [rbp-0x24],0x0
  4064e9:	cmp    DWORD PTR [rbp-0x24],0x8
  4064ed:	jge    4065d8 <flatcc_builder_custom_reset@@Base+0x108>
  4064f3:	mov    rax,QWORD PTR [rbp-0x10]
  4064f7:	add    rax,0x58
  4064fb:	movsxd rcx,DWORD PTR [rbp-0x24]
  4064ff:	shl    rcx,0x4
  406503:	add    rax,rcx
  406506:	mov    QWORD PTR [rbp-0x20],rax
  40650a:	mov    rax,QWORD PTR [rbp-0x20]
  40650e:	cmp    QWORD PTR [rax],0x0
  406512:	je     40658d <flatcc_builder_custom_reset@@Base+0xbd>
  406518:	cmp    DWORD PTR [rbp-0x24],0x5
  40651c:	je     406572 <flatcc_builder_custom_reset@@Base+0xa2>
  406522:	cmp    DWORD PTR [rbp-0x18],0x0
  406526:	je     406572 <flatcc_builder_custom_reset@@Base+0xa2>
  40652c:	mov    eax,0x1
  406531:	mov    edx,eax
  406533:	mov    rcx,QWORD PTR [rbp-0x10]
  406537:	mov    rcx,QWORD PTR [rcx+0x50]
  40653b:	mov    rsi,QWORD PTR [rbp-0x10]
  40653f:	mov    rdi,QWORD PTR [rsi+0x40]
  406543:	mov    rsi,QWORD PTR [rbp-0x20]
  406547:	mov    r8d,DWORD PTR [rbp-0x24]
  40654b:	mov    eax,0x1
  406550:	mov    QWORD PTR [rbp-0x30],rcx
  406554:	mov    ecx,eax
  406556:	mov    r9,QWORD PTR [rbp-0x30]
  40655a:	call   r9
  40655d:	cmp    eax,0x0
  406560:	je     406572 <flatcc_builder_custom_reset@@Base+0xa2>
  406566:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40656d:	jmp    406719 <flatcc_builder_custom_reset@@Base+0x249>
  406572:	xor    esi,esi
  406574:	mov    rax,QWORD PTR [rbp-0x20]
  406578:	mov    rdi,QWORD PTR [rax]
  40657b:	mov    rax,QWORD PTR [rbp-0x20]
  40657f:	mov    rdx,QWORD PTR [rax+0x8]
  406583:	call   403080 <memset@plt>
  406588:	jmp    4065c5 <flatcc_builder_custom_reset@@Base+0xf5>
  40658d:	mov    rax,QWORD PTR [rbp-0x20]
  406591:	cmp    QWORD PTR [rax+0x8],0x0
  406596:	jne    4065a1 <flatcc_builder_custom_reset@@Base+0xd1>
  40659c:	jmp    4065c0 <flatcc_builder_custom_reset@@Base+0xf0>
  4065a1:	lea    rdi,[rip+0x75b8]        # 40db60 <flatcc_builder_padding_base@@Base+0x200>
  4065a8:	lea    rsi,[rip+0x75c3]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  4065af:	mov    edx,0x1b2
  4065b4:	lea    rcx,[rip+0x7617]        # 40dbd2 <flatcc_builder_padding_base@@Base+0x272>
  4065bb:	call   403070 <__assert_fail@plt>
  4065c0:	jmp    4065c5 <flatcc_builder_custom_reset@@Base+0xf5>
  4065c5:	jmp    4065ca <flatcc_builder_custom_reset@@Base+0xfa>
  4065ca:	mov    eax,DWORD PTR [rbp-0x24]
  4065cd:	add    eax,0x1
  4065d0:	mov    DWORD PTR [rbp-0x24],eax
  4065d3:	jmp    4064e9 <flatcc_builder_custom_reset@@Base+0x19>
  4065d8:	mov    rax,QWORD PTR [rbp-0x10]
  4065dc:	mov    DWORD PTR [rax+0xe0],0x0
  4065e6:	mov    rax,QWORD PTR [rbp-0x10]
  4065ea:	cmp    DWORD PTR [rax+0xe4],0x0
  4065f1:	jbe    406605 <flatcc_builder_custom_reset@@Base+0x135>
  4065f7:	mov    rax,QWORD PTR [rbp-0x10]
  4065fb:	mov    DWORD PTR [rax+0xe4],0x10
  406605:	mov    rax,QWORD PTR [rbp-0x10]
  406609:	mov    WORD PTR [rax+0xe8],0x0
  406612:	mov    rax,QWORD PTR [rbp-0x10]
  406616:	mov    DWORD PTR [rax+0xf0],0x0
  406620:	mov    rax,QWORD PTR [rbp-0x10]
  406624:	mov    DWORD PTR [rax+0xf4],0x0
  40662e:	mov    rax,QWORD PTR [rbp-0x10]
  406632:	mov    DWORD PTR [rax+0x104],0x0
  40663c:	mov    rax,QWORD PTR [rbp-0x10]
  406640:	mov    DWORD PTR [rax+0x108],0x0
  40664a:	mov    rax,QWORD PTR [rbp-0x10]
  40664e:	mov    DWORD PTR [rax+0x20],0x0
  406655:	mov    rax,QWORD PTR [rbp-0x10]
  406659:	mov    DWORD PTR [rax+0x24],0x0
  406660:	mov    rax,QWORD PTR [rbp-0x10]
  406664:	mov    DWORD PTR [rax+0xfc],0x0
  40666e:	mov    rax,QWORD PTR [rbp-0x10]
  406672:	mov    DWORD PTR [rax+0x100],0x0
  40667c:	mov    rax,QWORD PTR [rbp-0x10]
  406680:	mov    rax,QWORD PTR [rax+0x68]
  406684:	mov    rcx,QWORD PTR [rbp-0x10]
  406688:	mov    QWORD PTR [rcx+0x18],rax
  40668c:	mov    rax,QWORD PTR [rbp-0x10]
  406690:	mov    rax,QWORD PTR [rax+0x88]
  406697:	mov    rcx,QWORD PTR [rbp-0x10]
  40669b:	mov    QWORD PTR [rcx],rax
  40669e:	mov    rax,QWORD PTR [rbp-0x10]
  4066a2:	mov    rax,QWORD PTR [rax+0x58]
  4066a6:	mov    rcx,QWORD PTR [rbp-0x10]
  4066aa:	mov    QWORD PTR [rcx+0x8],rax
  4066ae:	mov    rax,QWORD PTR [rbp-0x10]
  4066b2:	mov    QWORD PTR [rax+0x30],0x0
  4066ba:	cmp    DWORD PTR [rbp-0x14],0x0
  4066be:	je     4066ef <flatcc_builder_custom_reset@@Base+0x21f>
  4066c4:	mov    rax,QWORD PTR [rbp-0x10]
  4066c8:	mov    QWORD PTR [rax+0x118],0x0
  4066d3:	mov    rax,QWORD PTR [rbp-0x10]
  4066d7:	mov    DWORD PTR [rax+0x120],0x0
  4066e1:	mov    rax,QWORD PTR [rbp-0x10]
  4066e5:	mov    DWORD PTR [rax+0x124],0x0
  4066ef:	mov    rax,QWORD PTR [rbp-0x10]
  4066f3:	cmp    DWORD PTR [rax+0x128],0x0
  4066fa:	je     406712 <flatcc_builder_custom_reset@@Base+0x242>
  406700:	mov    rax,QWORD PTR [rbp-0x10]
  406704:	add    rax,0x130
  40670a:	mov    rdi,rax
  40670d:	call   40c080 <flatcc_emitter_reset@@Base>
  406712:	mov    DWORD PTR [rbp-0x4],0x0
  406719:	mov    eax,DWORD PTR [rbp-0x4]
  40671c:	add    rsp,0x30
  406720:	pop    rbp
  406721:	ret    
  406722:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40672c:	nop    DWORD PTR [rax+0x0]

0000000000406730 <flatcc_builder_reset@@Base>:
  406730:	push   rbp
  406731:	mov    rbp,rsp
  406734:	sub    rsp,0x10
  406738:	xor    eax,eax
  40673a:	mov    QWORD PTR [rbp-0x8],rdi
  40673e:	mov    rdi,QWORD PTR [rbp-0x8]
  406742:	mov    esi,eax
  406744:	mov    edx,eax
  406746:	call   4064d0 <flatcc_builder_custom_reset@@Base>
  40674b:	add    rsp,0x10
  40674f:	pop    rbp
  406750:	ret    
  406751:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40675b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406760 <flatcc_builder_clear@@Base>:
  406760:	push   rbp
  406761:	mov    rbp,rsp
  406764:	sub    rsp,0x30
  406768:	mov    QWORD PTR [rbp-0x8],rdi
  40676c:	mov    DWORD PTR [rbp-0x14],0x0
  406773:	cmp    DWORD PTR [rbp-0x14],0x8
  406777:	jge    4067d3 <flatcc_builder_clear@@Base+0x73>
  40677d:	xor    eax,eax
  40677f:	mov    edx,eax
  406781:	xor    ecx,ecx
  406783:	mov    rsi,QWORD PTR [rbp-0x8]
  406787:	add    rsi,0x58
  40678b:	movsxd rdi,DWORD PTR [rbp-0x14]
  40678f:	shl    rdi,0x4
  406793:	add    rsi,rdi
  406796:	mov    QWORD PTR [rbp-0x10],rsi
  40679a:	mov    rsi,QWORD PTR [rbp-0x8]
  40679e:	mov    rsi,QWORD PTR [rsi+0x50]
  4067a2:	mov    rdi,QWORD PTR [rbp-0x8]
  4067a6:	mov    rdi,QWORD PTR [rdi+0x40]
  4067aa:	mov    r8,QWORD PTR [rbp-0x10]
  4067ae:	mov    eax,DWORD PTR [rbp-0x14]
  4067b1:	mov    QWORD PTR [rbp-0x20],rsi
  4067b5:	mov    rsi,r8
  4067b8:	mov    r8d,eax
  4067bb:	mov    r9,QWORD PTR [rbp-0x20]
  4067bf:	call   r9
  4067c2:	mov    DWORD PTR [rbp-0x24],eax
  4067c5:	mov    eax,DWORD PTR [rbp-0x14]
  4067c8:	add    eax,0x1
  4067cb:	mov    DWORD PTR [rbp-0x14],eax
  4067ce:	jmp    406773 <flatcc_builder_clear@@Base+0x13>
  4067d3:	mov    rax,QWORD PTR [rbp-0x8]
  4067d7:	cmp    DWORD PTR [rax+0x128],0x0
  4067de:	je     4067f6 <flatcc_builder_clear@@Base+0x96>
  4067e4:	mov    rax,QWORD PTR [rbp-0x8]
  4067e8:	add    rax,0x130
  4067ee:	mov    rdi,rax
  4067f1:	call   40c220 <flatcc_emitter_clear@@Base>
  4067f6:	xor    esi,esi
  4067f8:	mov    eax,0x188
  4067fd:	mov    edx,eax
  4067ff:	mov    rcx,QWORD PTR [rbp-0x8]
  406803:	mov    rdi,rcx
  406806:	call   403080 <memset@plt>
  40680b:	add    rsp,0x30
  40680f:	pop    rbp
  406810:	ret    
  406811:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40681b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406820 <flatcc_builder_enter_user_frame_ptr@@Base>:
  406820:	push   rbp
  406821:	mov    rbp,rsp
  406824:	sub    rsp,0x20
  406828:	xor    r8d,r8d
  40682b:	mov    QWORD PTR [rbp-0x10],rdi
  40682f:	mov    QWORD PTR [rbp-0x18],rsi
  406833:	mov    rsi,QWORD PTR [rbp-0x18]
  406837:	add    rsi,0x8
  40683b:	sub    rsi,0x1
  40683f:	and    rsi,0xfffffffffffffff8
  406843:	add    rsi,0x8
  406847:	mov    QWORD PTR [rbp-0x18],rsi
  40684b:	mov    rdi,QWORD PTR [rbp-0x10]
  40684f:	mov    rsi,QWORD PTR [rbp-0x10]
  406853:	mov    rdx,QWORD PTR [rsi+0x180]
  40685a:	mov    rcx,QWORD PTR [rbp-0x18]
  40685e:	mov    esi,0x7
  406863:	call   406900 <flatcc_builder_enter_user_frame_ptr@@Base+0xe0>
  406868:	mov    QWORD PTR [rbp-0x20],rax
  40686c:	cmp    rax,0x0
  406870:	jne    406883 <flatcc_builder_enter_user_frame_ptr@@Base+0x63>
  406876:	mov    QWORD PTR [rbp-0x8],0x0
  40687e:	jmp    4068ea <flatcc_builder_enter_user_frame_ptr@@Base+0xca>
  406883:	xor    esi,esi
  406885:	mov    rax,QWORD PTR [rbp-0x20]
  406889:	mov    rdx,QWORD PTR [rbp-0x18]
  40688d:	mov    rdi,rax
  406890:	call   403080 <memset@plt>
  406895:	mov    rax,QWORD PTR [rbp-0x10]
  406899:	mov    rax,QWORD PTR [rax+0x178]
  4068a0:	mov    rdx,QWORD PTR [rbp-0x20]
  4068a4:	mov    rdi,rdx
  4068a7:	add    rdi,0x8
  4068ab:	mov    QWORD PTR [rbp-0x20],rdi
  4068af:	mov    QWORD PTR [rdx],rax
  4068b2:	mov    rax,QWORD PTR [rbp-0x10]
  4068b6:	mov    rax,QWORD PTR [rax+0x180]
  4068bd:	add    rax,0x8
  4068c1:	mov    rdx,QWORD PTR [rbp-0x10]
  4068c5:	mov    QWORD PTR [rdx+0x178],rax
  4068cc:	mov    rax,QWORD PTR [rbp-0x18]
  4068d0:	mov    rdx,QWORD PTR [rbp-0x10]
  4068d4:	add    rax,QWORD PTR [rdx+0x180]
  4068db:	mov    QWORD PTR [rdx+0x180],rax
  4068e2:	mov    rax,QWORD PTR [rbp-0x20]
  4068e6:	mov    QWORD PTR [rbp-0x8],rax
  4068ea:	mov    rax,QWORD PTR [rbp-0x8]
  4068ee:	add    rsp,0x20
  4068f2:	pop    rbp
  4068f3:	ret    
  4068f4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4068fe:	xchg   ax,ax
  406900:	push   rbp
  406901:	mov    rbp,rsp
  406904:	sub    rsp,0x40
  406908:	mov    QWORD PTR [rbp-0x8],rdi
  40690c:	mov    DWORD PTR [rbp-0xc],esi
  40690f:	mov    QWORD PTR [rbp-0x18],rdx
  406913:	mov    QWORD PTR [rbp-0x20],rcx
  406917:	mov    DWORD PTR [rbp-0x24],r8d
  40691b:	mov    rcx,QWORD PTR [rbp-0x8]
  40691f:	add    rcx,0x58
  406923:	movsxd rdx,DWORD PTR [rbp-0xc]
  406927:	shl    rdx,0x4
  40692b:	add    rcx,rdx
  40692e:	mov    QWORD PTR [rbp-0x30],rcx
  406932:	mov    rcx,QWORD PTR [rbp-0x18]
  406936:	add    rcx,QWORD PTR [rbp-0x20]
  40693a:	mov    rdx,QWORD PTR [rbp-0x30]
  40693e:	cmp    rcx,QWORD PTR [rdx+0x8]
  406942:	jbe    4069a3 <flatcc_builder_enter_user_frame_ptr@@Base+0x183>
  406948:	mov    rax,QWORD PTR [rbp-0x8]
  40694c:	mov    rax,QWORD PTR [rax+0x50]
  406950:	mov    rcx,QWORD PTR [rbp-0x8]
  406954:	mov    rdi,QWORD PTR [rcx+0x40]
  406958:	mov    rsi,QWORD PTR [rbp-0x30]
  40695c:	mov    rcx,QWORD PTR [rbp-0x18]
  406960:	add    rcx,QWORD PTR [rbp-0x20]
  406964:	mov    edx,DWORD PTR [rbp-0x24]
  406967:	mov    r8d,DWORD PTR [rbp-0xc]
  40696b:	mov    DWORD PTR [rbp-0x34],edx
  40696e:	mov    rdx,rcx
  406971:	mov    ecx,DWORD PTR [rbp-0x34]
  406974:	call   rax
  406976:	cmp    eax,0x0
  406979:	je     40699e <flatcc_builder_enter_user_frame_ptr@@Base+0x17e>
  40697f:	lea    rdi,[rip+0x83ac]        # 40ed32 <flatcc_builder_padding_base@@Base+0x13d2>
  406986:	lea    rsi,[rip+0x71e5]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  40698d:	mov    edx,0x134
  406992:	lea    rcx,[rip+0x81d3]        # 40eb6c <flatcc_builder_padding_base@@Base+0x120c>
  406999:	call   403070 <__assert_fail@plt>
  40699e:	jmp    4069a3 <flatcc_builder_enter_user_frame_ptr@@Base+0x183>
  4069a3:	mov    rax,QWORD PTR [rbp-0x30]
  4069a7:	mov    rax,QWORD PTR [rax]
  4069aa:	add    rax,QWORD PTR [rbp-0x18]
  4069ae:	add    rsp,0x40
  4069b2:	pop    rbp
  4069b3:	ret    
  4069b4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4069be:	xchg   ax,ax

00000000004069c0 <flatcc_builder_enter_user_frame@@Base>:
  4069c0:	push   rbp
  4069c1:	mov    rbp,rsp
  4069c4:	sub    rsp,0x20
  4069c8:	xor    r8d,r8d
  4069cb:	mov    QWORD PTR [rbp-0x10],rdi
  4069cf:	mov    QWORD PTR [rbp-0x18],rsi
  4069d3:	mov    rsi,QWORD PTR [rbp-0x18]
  4069d7:	add    rsi,0x8
  4069db:	sub    rsi,0x1
  4069df:	and    rsi,0xfffffffffffffff8
  4069e3:	add    rsi,0x8
  4069e7:	mov    QWORD PTR [rbp-0x18],rsi
  4069eb:	mov    rdi,QWORD PTR [rbp-0x10]
  4069ef:	mov    rsi,QWORD PTR [rbp-0x10]
  4069f3:	mov    rdx,QWORD PTR [rsi+0x180]
  4069fa:	mov    rcx,QWORD PTR [rbp-0x18]
  4069fe:	mov    esi,0x7
  406a03:	call   406900 <flatcc_builder_enter_user_frame_ptr@@Base+0xe0>
  406a08:	mov    QWORD PTR [rbp-0x20],rax
  406a0c:	cmp    rax,0x0
  406a10:	jne    406a23 <flatcc_builder_enter_user_frame@@Base+0x63>
  406a16:	mov    QWORD PTR [rbp-0x8],0x0
  406a1e:	jmp    406a91 <flatcc_builder_enter_user_frame@@Base+0xd1>
  406a23:	xor    esi,esi
  406a25:	mov    rax,QWORD PTR [rbp-0x20]
  406a29:	mov    rdx,QWORD PTR [rbp-0x18]
  406a2d:	mov    rdi,rax
  406a30:	call   403080 <memset@plt>
  406a35:	mov    rax,QWORD PTR [rbp-0x10]
  406a39:	mov    rax,QWORD PTR [rax+0x178]
  406a40:	mov    rdx,QWORD PTR [rbp-0x20]
  406a44:	mov    rdi,rdx
  406a47:	add    rdi,0x8
  406a4b:	mov    QWORD PTR [rbp-0x20],rdi
  406a4f:	mov    QWORD PTR [rdx],rax
  406a52:	mov    rax,QWORD PTR [rbp-0x10]
  406a56:	mov    rax,QWORD PTR [rax+0x180]
  406a5d:	add    rax,0x8
  406a61:	mov    rdx,QWORD PTR [rbp-0x10]
  406a65:	mov    QWORD PTR [rdx+0x178],rax
  406a6c:	mov    rax,QWORD PTR [rbp-0x18]
  406a70:	mov    rdx,QWORD PTR [rbp-0x10]
  406a74:	add    rax,QWORD PTR [rdx+0x180]
  406a7b:	mov    QWORD PTR [rdx+0x180],rax
  406a82:	mov    rax,QWORD PTR [rbp-0x10]
  406a86:	mov    rax,QWORD PTR [rax+0x178]
  406a8d:	mov    QWORD PTR [rbp-0x8],rax
  406a91:	mov    rax,QWORD PTR [rbp-0x8]
  406a95:	add    rsp,0x20
  406a99:	pop    rbp
  406a9a:	ret    
  406a9b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406aa0 <flatcc_builder_exit_user_frame@@Base>:
  406aa0:	push   rbp
  406aa1:	mov    rbp,rsp
  406aa4:	sub    rsp,0x10
  406aa8:	mov    QWORD PTR [rbp-0x8],rdi
  406aac:	mov    rdi,QWORD PTR [rbp-0x8]
  406ab0:	cmp    QWORD PTR [rdi+0x178],0x0
  406ab8:	jbe    406ac3 <flatcc_builder_exit_user_frame@@Base+0x23>
  406abe:	jmp    406ae2 <flatcc_builder_exit_user_frame@@Base+0x42>
  406ac3:	lea    rdi,[rip+0x7146]        # 40dc10 <flatcc_builder_padding_base@@Base+0x2b0>
  406aca:	lea    rsi,[rip+0x70a1]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  406ad1:	mov    edx,0x21e
  406ad6:	lea    rcx,[rip+0x714c]        # 40dc29 <flatcc_builder_padding_base@@Base+0x2c9>
  406add:	call   403070 <__assert_fail@plt>
  406ae2:	mov    rax,QWORD PTR [rbp-0x8]
  406ae6:	mov    rax,QWORD PTR [rax+0xc8]
  406aed:	mov    rcx,QWORD PTR [rbp-0x8]
  406af1:	mov    rcx,QWORD PTR [rcx+0x178]
  406af8:	mov    edx,ecx
  406afa:	mov    edx,edx
  406afc:	mov    ecx,edx
  406afe:	add    rax,rcx
  406b01:	mov    QWORD PTR [rbp-0x10],rax
  406b05:	mov    rax,QWORD PTR [rbp-0x8]
  406b09:	mov    rax,QWORD PTR [rax+0x178]
  406b10:	sub    rax,0x8
  406b14:	mov    rcx,QWORD PTR [rbp-0x8]
  406b18:	mov    QWORD PTR [rcx+0x180],rax
  406b1f:	mov    rax,QWORD PTR [rbp-0x10]
  406b23:	mov    rax,QWORD PTR [rax-0x8]
  406b27:	mov    rcx,QWORD PTR [rbp-0x8]
  406b2b:	mov    QWORD PTR [rcx+0x178],rax
  406b32:	add    rsp,0x10
  406b36:	pop    rbp
  406b37:	ret    
  406b38:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406b40 <flatcc_builder_exit_user_frame_at@@Base>:
  406b40:	push   rbp
  406b41:	mov    rbp,rsp
  406b44:	sub    rsp,0x10
  406b48:	mov    QWORD PTR [rbp-0x8],rdi
  406b4c:	mov    QWORD PTR [rbp-0x10],rsi
  406b50:	mov    rsi,QWORD PTR [rbp-0x8]
  406b54:	mov    rsi,QWORD PTR [rsi+0x178]
  406b5b:	cmp    rsi,QWORD PTR [rbp-0x10]
  406b5f:	jb     406b6a <flatcc_builder_exit_user_frame_at@@Base+0x2a>
  406b65:	jmp    406b89 <flatcc_builder_exit_user_frame_at@@Base+0x49>
  406b6a:	lea    rdi,[rip+0x70f2]        # 40dc63 <flatcc_builder_padding_base@@Base+0x303>
  406b71:	lea    rsi,[rip+0x6ffa]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  406b78:	mov    edx,0x227
  406b7d:	lea    rcx,[rip+0x70fe]        # 40dc82 <flatcc_builder_padding_base@@Base+0x322>
  406b84:	call   403070 <__assert_fail@plt>
  406b89:	mov    rax,QWORD PTR [rbp-0x10]
  406b8d:	mov    rcx,QWORD PTR [rbp-0x8]
  406b91:	mov    QWORD PTR [rcx+0x178],rax
  406b98:	mov    rdi,QWORD PTR [rbp-0x8]
  406b9c:	call   406aa0 <flatcc_builder_exit_user_frame@@Base>
  406ba1:	add    rsp,0x10
  406ba5:	pop    rbp
  406ba6:	ret    
  406ba7:	nop    WORD PTR [rax+rax*1+0x0]

0000000000406bb0 <flatcc_builder_get_current_user_frame@@Base>:
  406bb0:	push   rbp
  406bb1:	mov    rbp,rsp
  406bb4:	mov    QWORD PTR [rbp-0x8],rdi
  406bb8:	mov    rdi,QWORD PTR [rbp-0x8]
  406bbc:	mov    rax,QWORD PTR [rdi+0x178]
  406bc3:	pop    rbp
  406bc4:	ret    
  406bc5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406bcf:	nop

0000000000406bd0 <flatcc_builder_get_user_frame_ptr@@Base>:
  406bd0:	push   rbp
  406bd1:	mov    rbp,rsp
  406bd4:	mov    QWORD PTR [rbp-0x8],rdi
  406bd8:	mov    QWORD PTR [rbp-0x10],rsi
  406bdc:	mov    rsi,QWORD PTR [rbp-0x8]
  406be0:	mov    rsi,QWORD PTR [rsi+0xc8]
  406be7:	mov    rdi,QWORD PTR [rbp-0x10]
  406beb:	mov    eax,edi
  406bed:	mov    eax,eax
  406bef:	mov    edi,eax
  406bf1:	add    rsi,rdi
  406bf4:	mov    rax,rsi
  406bf7:	pop    rbp
  406bf8:	ret    
  406bf9:	nop    DWORD PTR [rax+0x0]

0000000000406c00 <flatcc_builder_embed_buffer@@Base>:
  406c00:	push   rbp
  406c01:	mov    rbp,rsp
  406c04:	sub    rsp,0xd0
  406c0b:	mov    ax,r8w
  406c0f:	mov    r10w,si
  406c13:	mov    QWORD PTR [rbp-0x10],rdi
  406c17:	mov    WORD PTR [rbp-0x12],r10w
  406c1c:	mov    QWORD PTR [rbp-0x20],rdx
  406c20:	mov    QWORD PTR [rbp-0x28],rcx
  406c24:	mov    WORD PTR [rbp-0x2a],ax
  406c28:	mov    DWORD PTR [rbp-0x30],r9d
  406c2c:	mov    esi,DWORD PTR [rbp-0x30]
  406c2f:	and    esi,0x2
  406c32:	mov    DWORD PTR [rbp-0xcc],esi
  406c38:	mov    rdi,QWORD PTR [rbp-0x10]
  406c3c:	mov    ax,WORD PTR [rbp-0x12]
  406c40:	mov    rcx,QWORD PTR [rbp-0x10]
  406c44:	cmp    DWORD PTR [rcx+0x100],0x0
  406c4b:	sete   r11b
  406c4f:	xor    r11b,0xff
  406c53:	and    r11b,0x1
  406c57:	movzx  ecx,r11b
  406c5b:	lea    rsi,[rbp-0x2a]
  406c5f:	movzx  edx,ax
  406c62:	call   406e50 <flatcc_builder_embed_buffer@@Base+0x250>
  406c67:	cmp    eax,0x0
  406c6a:	je     406c7c <flatcc_builder_embed_buffer@@Base+0x7c>
  406c70:	mov    DWORD PTR [rbp-0x4],0x0
  406c77:	jmp    406e35 <flatcc_builder_embed_buffer@@Base+0x235>
  406c7c:	xor    eax,eax
  406c7e:	mov    ecx,eax
  406c80:	mov    eax,0x4
  406c85:	mov    edx,eax
  406c87:	mov    rdi,QWORD PTR [rbp-0x10]
  406c8b:	mov    rsi,QWORD PTR [rbp-0x28]
  406c8f:	mov    eax,esi
  406c91:	mov    eax,eax
  406c93:	mov    esi,eax
  406c95:	mov    eax,DWORD PTR [rbp-0xcc]
  406c9b:	cmp    eax,0x0
  406c9e:	cmovne rcx,rdx
  406ca2:	add    rsi,rcx
  406ca5:	mov    eax,esi
  406ca7:	mov    esi,eax
  406ca9:	movzx  edx,WORD PTR [rbp-0x2a]
  406cad:	call   406ff0 <flatcc_builder_embed_buffer@@Base+0x3f0>
  406cb2:	mov    DWORD PTR [rbp-0x38],eax
  406cb5:	mov    rcx,QWORD PTR [rbp-0x28]
  406cb9:	mov    eax,ecx
  406cbb:	add    eax,DWORD PTR [rbp-0x38]
  406cbe:	mov    edi,eax
  406cc0:	call   407020 <flatcc_builder_embed_buffer@@Base+0x420>
  406cc5:	mov    DWORD PTR [rbp-0x34],eax
  406cc8:	mov    QWORD PTR [rbp-0xc8],0x0
  406cd3:	mov    DWORD PTR [rbp-0xc0],0x0
  406cdd:	mov    rcx,QWORD PTR [rbp-0x10]
  406ce1:	cmp    DWORD PTR [rcx+0x100],0x0
  406ce8:	je     406d4c <flatcc_builder_embed_buffer@@Base+0x14c>
  406cee:	mov    rax,QWORD PTR [rbp-0xc8]
  406cf5:	add    rax,0x4
  406cf9:	mov    QWORD PTR [rbp-0xc8],rax
  406d00:	lea    rax,[rbp-0x34]
  406d04:	lea    rcx,[rbp-0xc8]
  406d0b:	mov    rdx,rcx
  406d0e:	add    rdx,0x10
  406d12:	movsxd rsi,DWORD PTR [rbp-0xc0]
  406d19:	shl    rsi,0x4
  406d1d:	add    rdx,rsi
  406d20:	mov    QWORD PTR [rdx],rax
  406d23:	add    rcx,0x10
  406d27:	movsxd rax,DWORD PTR [rbp-0xc0]
  406d2e:	shl    rax,0x4
  406d32:	add    rcx,rax
  406d35:	mov    QWORD PTR [rcx+0x8],0x4
  406d3d:	mov    edi,DWORD PTR [rbp-0xc0]
  406d43:	add    edi,0x1
  406d46:	mov    DWORD PTR [rbp-0xc0],edi
  406d4c:	cmp    QWORD PTR [rbp-0x28],0x0
  406d51:	jbe    406db5 <flatcc_builder_embed_buffer@@Base+0x1b5>
  406d57:	mov    rax,QWORD PTR [rbp-0x28]
  406d5b:	add    rax,QWORD PTR [rbp-0xc8]
  406d62:	mov    QWORD PTR [rbp-0xc8],rax
  406d69:	mov    rax,QWORD PTR [rbp-0x20]
  406d6d:	lea    rcx,[rbp-0xc8]
  406d74:	mov    rdx,rcx
  406d77:	add    rdx,0x10
  406d7b:	movsxd rsi,DWORD PTR [rbp-0xc0]
  406d82:	shl    rsi,0x4
  406d86:	add    rdx,rsi
  406d89:	mov    QWORD PTR [rdx],rax
  406d8c:	mov    rax,QWORD PTR [rbp-0x28]
  406d90:	add    rcx,0x10
  406d94:	movsxd rdx,DWORD PTR [rbp-0xc0]
  406d9b:	shl    rdx,0x4
  406d9f:	add    rcx,rdx
  406da2:	mov    QWORD PTR [rcx+0x8],rax
  406da6:	mov    edi,DWORD PTR [rbp-0xc0]
  406dac:	add    edi,0x1
  406daf:	mov    DWORD PTR [rbp-0xc0],edi
  406db5:	cmp    DWORD PTR [rbp-0x38],0x0
  406db9:	jbe    406e22 <flatcc_builder_embed_buffer@@Base+0x222>
  406dbf:	lea    rax,[rip+0x6b9a]        # 40d960 <flatcc_builder_padding_base@@Base>
  406dc6:	mov    ecx,DWORD PTR [rbp-0x38]
  406dc9:	mov    edx,ecx
  406dcb:	add    rdx,QWORD PTR [rbp-0xc8]
  406dd2:	mov    QWORD PTR [rbp-0xc8],rdx
  406dd9:	lea    rdx,[rbp-0xc8]
  406de0:	mov    rsi,rdx
  406de3:	add    rsi,0x10
  406de7:	movsxd rdi,DWORD PTR [rbp-0xc0]
  406dee:	shl    rdi,0x4
  406df2:	add    rsi,rdi
  406df5:	mov    QWORD PTR [rsi],rax
  406df8:	mov    ecx,DWORD PTR [rbp-0x38]
  406dfb:	mov    eax,ecx
  406dfd:	add    rdx,0x10
  406e01:	movsxd rsi,DWORD PTR [rbp-0xc0]
  406e08:	shl    rsi,0x4
  406e0c:	add    rdx,rsi
  406e0f:	mov    QWORD PTR [rdx+0x8],rax
  406e13:	mov    ecx,DWORD PTR [rbp-0xc0]
  406e19:	add    ecx,0x1
  406e1c:	mov    DWORD PTR [rbp-0xc0],ecx
  406e22:	mov    rdi,QWORD PTR [rbp-0x10]
  406e26:	lea    rsi,[rbp-0xc8]
  406e2d:	call   407030 <flatcc_builder_embed_buffer@@Base+0x430>
  406e32:	mov    DWORD PTR [rbp-0x4],eax
  406e35:	mov    eax,DWORD PTR [rbp-0x4]
  406e38:	add    rsp,0xd0
  406e3f:	pop    rbp
  406e40:	ret    
  406e41:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406e4b:	nop    DWORD PTR [rax+rax*1+0x0]
  406e50:	push   rbp
  406e51:	mov    rbp,rsp
  406e54:	sub    rsp,0xc0
  406e5b:	mov    ax,dx
  406e5e:	mov    QWORD PTR [rbp-0x8],rdi
  406e62:	mov    QWORD PTR [rbp-0x10],rsi
  406e66:	mov    WORD PTR [rbp-0x12],ax
  406e6a:	mov    DWORD PTR [rbp-0x18],ecx
  406e6d:	movzx  ecx,WORD PTR [rbp-0x12]
  406e71:	cmp    ecx,0x0
  406e74:	je     406e89 <flatcc_builder_embed_buffer@@Base+0x289>
  406e7a:	movzx  eax,WORD PTR [rbp-0x12]
  406e7e:	mov    DWORD PTR [rbp-0xb4],eax
  406e84:	jmp    406ecf <flatcc_builder_embed_buffer@@Base+0x2cf>
  406e89:	mov    rax,QWORD PTR [rbp-0x8]
  406e8d:	movzx  ecx,WORD PTR [rax+0xec]
  406e94:	cmp    ecx,0x0
  406e97:	je     406eb3 <flatcc_builder_embed_buffer@@Base+0x2b3>
  406e9d:	mov    rax,QWORD PTR [rbp-0x8]
  406ea1:	movzx  ecx,WORD PTR [rax+0xec]
  406ea8:	mov    DWORD PTR [rbp-0xb8],ecx
  406eae:	jmp    406ec3 <flatcc_builder_embed_buffer@@Base+0x2c3>
  406eb3:	mov    eax,0x1
  406eb8:	mov    DWORD PTR [rbp-0xb8],eax
  406ebe:	jmp    406ec3 <flatcc_builder_embed_buffer@@Base+0x2c3>
  406ec3:	mov    eax,DWORD PTR [rbp-0xb8]
  406ec9:	mov    DWORD PTR [rbp-0xb4],eax
  406ecf:	mov    eax,DWORD PTR [rbp-0xb4]
  406ed5:	mov    cx,ax
  406ed8:	mov    WORD PTR [rbp-0x12],cx
  406edc:	mov    rdi,QWORD PTR [rbp-0x10]
  406ee0:	mov    esi,0x4
  406ee5:	call   4089d0 <flatcc_builder_start_vector@@Base+0xb0>
  406eea:	mov    rdi,QWORD PTR [rbp-0x10]
  406eee:	movzx  esi,WORD PTR [rbp-0x12]
  406ef2:	call   4089d0 <flatcc_builder_start_vector@@Base+0xb0>
  406ef7:	cmp    DWORD PTR [rbp-0x18],0x0
  406efb:	jne    406fe5 <flatcc_builder_embed_buffer@@Base+0x3e5>
  406f01:	mov    rdi,QWORD PTR [rbp-0x8]
  406f05:	movzx  esi,WORD PTR [rbp-0x12]
  406f09:	call   40bd60 <flatcc_builder_get_emit_context@@Base+0x20>
  406f0e:	mov    eax,eax
  406f10:	mov    edi,eax
  406f12:	mov    QWORD PTR [rbp-0x20],rdi
  406f16:	cmp    QWORD PTR [rbp-0x20],0x0
  406f1b:	je     406fe0 <flatcc_builder_embed_buffer@@Base+0x3e0>
  406f21:	mov    QWORD PTR [rbp-0xb0],0x0
  406f2c:	mov    DWORD PTR [rbp-0xa8],0x0
  406f36:	cmp    QWORD PTR [rbp-0x20],0x0
  406f3b:	jbe    406fa2 <flatcc_builder_embed_buffer@@Base+0x3a2>
  406f41:	lea    rax,[rip+0x6a18]        # 40d960 <flatcc_builder_padding_base@@Base>
  406f48:	mov    rcx,QWORD PTR [rbp-0x20]
  406f4c:	add    rcx,QWORD PTR [rbp-0xb0]
  406f53:	mov    QWORD PTR [rbp-0xb0],rcx
  406f5a:	lea    rcx,[rbp-0xb0]
  406f61:	mov    rdx,rcx
  406f64:	add    rdx,0x10
  406f68:	movsxd rsi,DWORD PTR [rbp-0xa8]
  406f6f:	shl    rsi,0x4
  406f73:	add    rdx,rsi
  406f76:	mov    QWORD PTR [rdx],rax
  406f79:	mov    rax,QWORD PTR [rbp-0x20]
  406f7d:	add    rcx,0x10
  406f81:	movsxd rdx,DWORD PTR [rbp-0xa8]
  406f88:	shl    rdx,0x4
  406f8c:	add    rcx,rdx
  406f8f:	mov    QWORD PTR [rcx+0x8],rax
  406f93:	mov    edi,DWORD PTR [rbp-0xa8]
  406f99:	add    edi,0x1
  406f9c:	mov    DWORD PTR [rbp-0xa8],edi
  406fa2:	mov    rdi,QWORD PTR [rbp-0x8]
  406fa6:	lea    rsi,[rbp-0xb0]
  406fad:	call   408fd0 <flatcc_builder_create_vtable@@Base+0x140>
  406fb2:	xor    ecx,ecx
  406fb4:	cmp    ecx,eax
  406fb6:	jne    406fdb <flatcc_builder_embed_buffer@@Base+0x3db>
  406fbc:	lea    rdi,[rip+0x7d6f]        # 40ed32 <flatcc_builder_padding_base@@Base+0x13d2>
  406fc3:	lea    rsi,[rip+0x6ba8]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  406fca:	mov    edx,0x2be
  406fcf:	lea    rcx,[rip+0x7bd9]        # 40ebaf <flatcc_builder_padding_base@@Base+0x124f>
  406fd6:	call   403070 <__assert_fail@plt>
  406fdb:	jmp    406fe0 <flatcc_builder_embed_buffer@@Base+0x3e0>
  406fe0:	jmp    406fe5 <flatcc_builder_embed_buffer@@Base+0x3e5>
  406fe5:	xor    eax,eax
  406fe7:	add    rsp,0xc0
  406fee:	pop    rbp
  406fef:	ret    
  406ff0:	push   rbp
  406ff1:	mov    rbp,rsp
  406ff4:	mov    ax,dx
  406ff7:	mov    QWORD PTR [rbp-0x8],rdi
  406ffb:	mov    DWORD PTR [rbp-0xc],esi
  406ffe:	mov    WORD PTR [rbp-0xe],ax
  407002:	mov    rdi,QWORD PTR [rbp-0x8]
  407006:	mov    edx,DWORD PTR [rdi+0xf0]
  40700c:	sub    edx,DWORD PTR [rbp-0xc]
  40700f:	movzx  esi,WORD PTR [rbp-0xe]
  407013:	sub    esi,0x1
  407016:	and    edx,esi
  407018:	mov    eax,edx
  40701a:	pop    rbp
  40701b:	ret    
  40701c:	nop    DWORD PTR [rax+0x0]
  407020:	push   rbp
  407021:	mov    rbp,rsp
  407024:	mov    DWORD PTR [rbp-0x4],edi
  407027:	mov    eax,DWORD PTR [rbp-0x4]
  40702a:	pop    rbp
  40702b:	ret    
  40702c:	nop    DWORD PTR [rax+0x0]
  407030:	push   rbp
  407031:	mov    rbp,rsp
  407034:	sub    rsp,0x20
  407038:	mov    QWORD PTR [rbp-0x8],rdi
  40703c:	mov    QWORD PTR [rbp-0x10],rsi
  407040:	mov    rsi,QWORD PTR [rbp-0x8]
  407044:	mov    eax,DWORD PTR [rsi+0xf0]
  40704a:	mov    rsi,QWORD PTR [rbp-0x10]
  40704e:	mov    rsi,QWORD PTR [rsi]
  407051:	mov    ecx,esi
  407053:	sub    eax,ecx
  407055:	mov    DWORD PTR [rbp-0x14],eax
  407058:	mov    rsi,QWORD PTR [rbp-0x10]
  40705c:	cmp    QWORD PTR [rsi],0x10
  407060:	jbe    407081 <flatcc_builder_embed_buffer@@Base+0x481>
  407066:	mov    eax,0xffffffff
  40706b:	mov    ecx,eax
  40706d:	mov    rdx,QWORD PTR [rbp-0x10]
  407071:	mov    rdx,QWORD PTR [rdx]
  407074:	sub    rdx,0x10
  407078:	cmp    rdx,rcx
  40707b:	ja     407094 <flatcc_builder_embed_buffer@@Base+0x494>
  407081:	mov    eax,DWORD PTR [rbp-0x14]
  407084:	mov    rcx,QWORD PTR [rbp-0x8]
  407088:	cmp    eax,DWORD PTR [rcx+0xf0]
  40708e:	jl     4070b3 <flatcc_builder_embed_buffer@@Base+0x4b3>
  407094:	lea    rdi,[rip+0x7c97]        # 40ed32 <flatcc_builder_padding_base@@Base+0x13d2>
  40709b:	lea    rsi,[rip+0x6ad0]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  4070a2:	mov    edx,0x287
  4070a7:	lea    rcx,[rip+0x7b43]        # 40ebf1 <flatcc_builder_padding_base@@Base+0x1291>
  4070ae:	call   403070 <__assert_fail@plt>
  4070b3:	mov    rax,QWORD PTR [rbp-0x8]
  4070b7:	mov    rax,QWORD PTR [rax+0x48]
  4070bb:	mov    rcx,QWORD PTR [rbp-0x8]
  4070bf:	mov    rdi,QWORD PTR [rcx+0x38]
  4070c3:	mov    rcx,QWORD PTR [rbp-0x10]
  4070c7:	add    rcx,0x10
  4070cb:	mov    rdx,QWORD PTR [rbp-0x10]
  4070cf:	mov    edx,DWORD PTR [rdx+0x8]
  4070d2:	mov    esi,DWORD PTR [rbp-0x14]
  4070d5:	mov    r8,QWORD PTR [rbp-0x10]
  4070d9:	mov    r8,QWORD PTR [r8]
  4070dc:	mov    DWORD PTR [rbp-0x18],esi
  4070df:	mov    rsi,rcx
  4070e2:	mov    ecx,DWORD PTR [rbp-0x18]
  4070e5:	call   rax
  4070e7:	cmp    eax,0x0
  4070ea:	je     40710f <flatcc_builder_embed_buffer@@Base+0x50f>
  4070f0:	lea    rdi,[rip+0x7c3b]        # 40ed32 <flatcc_builder_padding_base@@Base+0x13d2>
  4070f7:	lea    rsi,[rip+0x6a74]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  4070fe:	mov    edx,0x28b
  407103:	lea    rcx,[rip+0x7ae7]        # 40ebf1 <flatcc_builder_padding_base@@Base+0x1291>
  40710a:	call   403070 <__assert_fail@plt>
  40710f:	mov    eax,DWORD PTR [rbp-0x14]
  407112:	mov    rcx,QWORD PTR [rbp-0x8]
  407116:	mov    DWORD PTR [rcx+0xf0],eax
  40711c:	add    rsp,0x20
  407120:	pop    rbp
  407121:	ret    
  407122:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40712c:	nop    DWORD PTR [rax+0x0]

0000000000407130 <flatcc_builder_create_buffer@@Base>:
  407130:	push   rbp
  407131:	mov    rbp,rsp
  407134:	sub    rsp,0xf0
  40713b:	mov    ax,r8w
  40713f:	mov    r10w,dx
  407143:	mov    QWORD PTR [rbp-0x10],rdi
  407147:	mov    QWORD PTR [rbp-0x18],rsi
  40714b:	mov    WORD PTR [rbp-0x1a],r10w
  407150:	mov    DWORD PTR [rbp-0x20],ecx
  407153:	mov    WORD PTR [rbp-0x22],ax
  407157:	mov    DWORD PTR [rbp-0x28],r9d
  40715b:	mov    DWORD PTR [rbp-0x34],0x0
  407162:	mov    DWORD PTR [rbp-0xd4],0x0
  40716c:	mov    ecx,DWORD PTR [rbp-0x28]
  40716f:	and    ecx,0x1
  407172:	cmp    ecx,0x0
  407175:	setne  r11b
  407179:	and    r11b,0x1
  40717d:	movzx  ecx,r11b
  407181:	mov    DWORD PTR [rbp-0xd8],ecx
  407187:	mov    ecx,DWORD PTR [rbp-0x28]
  40718a:	and    ecx,0x2
  40718d:	cmp    ecx,0x0
  407190:	setne  r11b
  407194:	and    r11b,0x1
  407198:	movzx  ecx,r11b
  40719c:	mov    DWORD PTR [rbp-0xdc],ecx
  4071a2:	mov    rdi,QWORD PTR [rbp-0x10]
  4071a6:	mov    ax,WORD PTR [rbp-0x1a]
  4071aa:	mov    ecx,DWORD PTR [rbp-0xd8]
  4071b0:	lea    rsi,[rbp-0x22]
  4071b4:	movzx  edx,ax
  4071b7:	call   406e50 <flatcc_builder_embed_buffer@@Base+0x250>
  4071bc:	cmp    eax,0x0
  4071bf:	je     4071d1 <flatcc_builder_create_buffer@@Base+0xa1>
  4071c5:	mov    DWORD PTR [rbp-0x4],0x0
  4071cc:	jmp    40752b <flatcc_builder_create_buffer@@Base+0x3fb>
  4071d1:	mov    rdi,QWORD PTR [rbp-0x10]
  4071d5:	movzx  esi,WORD PTR [rbp-0x22]
  4071d9:	call   407540 <flatcc_builder_create_buffer@@Base+0x410>
  4071de:	cmp    QWORD PTR [rbp-0x18],0x0
  4071e3:	je     407217 <flatcc_builder_create_buffer@@Base+0xe7>
  4071e9:	mov    rax,QWORD PTR [rbp-0x18]
  4071ed:	mov    ecx,DWORD PTR [rax]
  4071ef:	mov    DWORD PTR [rbp-0xd4],ecx
  4071f5:	mov    edi,DWORD PTR [rbp-0xd4]
  4071fb:	call   407580 <flatcc_builder_create_buffer@@Base+0x450>
  407200:	mov    DWORD PTR [rbp-0xd4],eax
  407206:	mov    edi,DWORD PTR [rbp-0xd4]
  40720c:	call   407020 <flatcc_builder_embed_buffer@@Base+0x420>
  407211:	mov    DWORD PTR [rbp-0xd4],eax
  407217:	xor    eax,eax
  407219:	mov    ecx,eax
  40721b:	mov    eax,0x4
  407220:	mov    edx,eax
  407222:	xor    eax,eax
  407224:	mov    esi,DWORD PTR [rbp-0xd4]
  40722a:	cmp    esi,0x0
  40722d:	mov    esi,0x4
  407232:	cmovne eax,esi
  407235:	mov    DWORD PTR [rbp-0x34],eax
  407238:	mov    rdi,QWORD PTR [rbp-0x10]
  40723c:	mov    eax,DWORD PTR [rbp-0x34]
  40723f:	mov    r8d,eax
  407242:	add    r8,0x4
  407246:	mov    eax,DWORD PTR [rbp-0xdc]
  40724c:	cmp    eax,0x0
  40724f:	cmovne rcx,rdx
  407253:	add    r8,rcx
  407256:	mov    eax,r8d
  407259:	mov    esi,eax
  40725b:	movzx  edx,WORD PTR [rbp-0x22]
  40725f:	call   406ff0 <flatcc_builder_embed_buffer@@Base+0x3f0>
  407264:	mov    DWORD PTR [rbp-0x30],eax
  407267:	mov    QWORD PTR [rbp-0xd0],0x0
  407272:	mov    DWORD PTR [rbp-0xc8],0x0
  40727c:	cmp    DWORD PTR [rbp-0xd8],0x0
  407283:	jne    407296 <flatcc_builder_create_buffer@@Base+0x166>
  407289:	cmp    DWORD PTR [rbp-0xdc],0x0
  407290:	je     4072f4 <flatcc_builder_create_buffer@@Base+0x1c4>
  407296:	mov    rax,QWORD PTR [rbp-0xd0]
  40729d:	add    rax,0x4
  4072a1:	mov    QWORD PTR [rbp-0xd0],rax
  4072a8:	lea    rax,[rbp-0x3c]
  4072ac:	lea    rcx,[rbp-0xd0]
  4072b3:	mov    rdx,rcx
  4072b6:	add    rdx,0x10
  4072ba:	movsxd rsi,DWORD PTR [rbp-0xc8]
  4072c1:	shl    rsi,0x4
  4072c5:	add    rdx,rsi
  4072c8:	mov    QWORD PTR [rdx],rax
  4072cb:	add    rcx,0x10
  4072cf:	movsxd rax,DWORD PTR [rbp-0xc8]
  4072d6:	shl    rax,0x4
  4072da:	add    rcx,rax
  4072dd:	mov    QWORD PTR [rcx+0x8],0x4
  4072e5:	mov    edi,DWORD PTR [rbp-0xc8]
  4072eb:	add    edi,0x1
  4072ee:	mov    DWORD PTR [rbp-0xc8],edi
  4072f4:	mov    rax,QWORD PTR [rbp-0xd0]
  4072fb:	add    rax,0x4
  4072ff:	mov    QWORD PTR [rbp-0xd0],rax
  407306:	lea    rax,[rbp-0x38]
  40730a:	lea    rcx,[rbp-0xd0]
  407311:	mov    rdx,rcx
  407314:	add    rdx,0x10
  407318:	movsxd rsi,DWORD PTR [rbp-0xc8]
  40731f:	shl    rsi,0x4
  407323:	add    rdx,rsi
  407326:	mov    QWORD PTR [rdx],rax
  407329:	add    rcx,0x10
  40732d:	movsxd rax,DWORD PTR [rbp-0xc8]
  407334:	shl    rax,0x4
  407338:	add    rcx,rax
  40733b:	mov    QWORD PTR [rcx+0x8],0x4
  407343:	mov    edi,DWORD PTR [rbp-0xc8]
  407349:	add    edi,0x1
  40734c:	mov    DWORD PTR [rbp-0xc8],edi
  407352:	cmp    DWORD PTR [rbp-0x34],0x0
  407356:	jbe    4073bf <flatcc_builder_create_buffer@@Base+0x28f>
  40735c:	mov    eax,DWORD PTR [rbp-0x34]
  40735f:	mov    ecx,eax
  407361:	add    rcx,QWORD PTR [rbp-0xd0]
  407368:	mov    QWORD PTR [rbp-0xd0],rcx
  40736f:	lea    rcx,[rbp-0xd4]
  407376:	lea    rdx,[rbp-0xd0]
  40737d:	mov    rsi,rdx
  407380:	add    rsi,0x10
  407384:	movsxd rdi,DWORD PTR [rbp-0xc8]
  40738b:	shl    rdi,0x4
  40738f:	add    rsi,rdi
  407392:	mov    QWORD PTR [rsi],rcx
  407395:	mov    eax,DWORD PTR [rbp-0x34]
  407398:	mov    ecx,eax
  40739a:	add    rdx,0x10
  40739e:	movsxd rsi,DWORD PTR [rbp-0xc8]
  4073a5:	shl    rsi,0x4
  4073a9:	add    rdx,rsi
  4073ac:	mov    QWORD PTR [rdx+0x8],rcx
  4073b0:	mov    eax,DWORD PTR [rbp-0xc8]
  4073b6:	add    eax,0x1
  4073b9:	mov    DWORD PTR [rbp-0xc8],eax
  4073bf:	cmp    DWORD PTR [rbp-0x30],0x0
  4073c3:	jbe    40742c <flatcc_builder_create_buffer@@Base+0x2fc>
  4073c9:	lea    rax,[rip+0x6590]        # 40d960 <flatcc_builder_padding_base@@Base>
  4073d0:	mov    ecx,DWORD PTR [rbp-0x30]
  4073d3:	mov    edx,ecx
  4073d5:	add    rdx,QWORD PTR [rbp-0xd0]
  4073dc:	mov    QWORD PTR [rbp-0xd0],rdx
  4073e3:	lea    rdx,[rbp-0xd0]
  4073ea:	mov    rsi,rdx
  4073ed:	add    rsi,0x10
  4073f1:	movsxd rdi,DWORD PTR [rbp-0xc8]
  4073f8:	shl    rdi,0x4
  4073fc:	add    rsi,rdi
  4073ff:	mov    QWORD PTR [rsi],rax
  407402:	mov    ecx,DWORD PTR [rbp-0x30]
  407405:	mov    eax,ecx
  407407:	add    rdx,0x10
  40740b:	movsxd rsi,DWORD PTR [rbp-0xc8]
  407412:	shl    rsi,0x4
  407416:	add    rdx,rsi
  407419:	mov    QWORD PTR [rdx+0x8],rax
  40741d:	mov    ecx,DWORD PTR [rbp-0xc8]
  407423:	add    ecx,0x1
  407426:	mov    DWORD PTR [rbp-0xc8],ecx
  40742c:	mov    rax,QWORD PTR [rbp-0x10]
  407430:	mov    ecx,DWORD PTR [rax+0xf0]
  407436:	mov    rax,QWORD PTR [rbp-0xd0]
  40743d:	mov    edx,eax
  40743f:	sub    ecx,edx
  407441:	mov    ecx,ecx
  407443:	mov    eax,ecx
  407445:	cmp    DWORD PTR [rbp-0xd8],0x0
  40744c:	mov    sil,0x1
  40744f:	mov    QWORD PTR [rbp-0xe8],rax
  407456:	mov    BYTE PTR [rbp-0xe9],sil
  40745d:	jne    407473 <flatcc_builder_create_buffer@@Base+0x343>
  407463:	cmp    DWORD PTR [rbp-0xdc],0x0
  40746a:	setne  al
  40746d:	mov    BYTE PTR [rbp-0xe9],al
  407473:	mov    al,BYTE PTR [rbp-0xe9]
  407479:	xor    ecx,ecx
  40747b:	mov    edx,ecx
  40747d:	mov    ecx,0x4
  407482:	mov    esi,ecx
  407484:	test   al,0x1
  407486:	cmovne rdx,rsi
  40748a:	mov    rsi,QWORD PTR [rbp-0xe8]
  407491:	add    rsi,rdx
  407494:	mov    ecx,esi
  407496:	mov    DWORD PTR [rbp-0x40],ecx
  407499:	cmp    DWORD PTR [rbp-0xd8],0x0
  4074a0:	je     4074c2 <flatcc_builder_create_buffer@@Base+0x392>
  4074a6:	mov    rax,QWORD PTR [rbp-0x10]
  4074aa:	mov    ecx,DWORD PTR [rax+0xf8]
  4074b0:	sub    ecx,DWORD PTR [rbp-0x40]
  4074b3:	mov    edi,ecx
  4074b5:	call   407020 <flatcc_builder_embed_buffer@@Base+0x420>
  4074ba:	mov    DWORD PTR [rbp-0x3c],eax
  4074bd:	jmp    4074d9 <flatcc_builder_create_buffer@@Base+0x3a9>
  4074c2:	mov    rax,QWORD PTR [rbp-0x10]
  4074c6:	mov    ecx,DWORD PTR [rax+0xf4]
  4074cc:	sub    ecx,DWORD PTR [rbp-0x40]
  4074cf:	mov    edi,ecx
  4074d1:	call   407020 <flatcc_builder_embed_buffer@@Base+0x420>
  4074d6:	mov    DWORD PTR [rbp-0x3c],eax
  4074d9:	mov    eax,DWORD PTR [rbp-0x20]
  4074dc:	sub    eax,DWORD PTR [rbp-0x40]
  4074df:	mov    edi,eax
  4074e1:	call   407020 <flatcc_builder_embed_buffer@@Base+0x420>
  4074e6:	mov    DWORD PTR [rbp-0x38],eax
  4074e9:	mov    rdi,QWORD PTR [rbp-0x10]
  4074ed:	lea    rsi,[rbp-0xd0]
  4074f4:	call   407030 <flatcc_builder_embed_buffer@@Base+0x430>
  4074f9:	xor    ecx,ecx
  4074fb:	mov    DWORD PTR [rbp-0x2c],eax
  4074fe:	cmp    ecx,eax
  407500:	jne    407525 <flatcc_builder_create_buffer@@Base+0x3f5>
  407506:	lea    rdi,[rip+0x7825]        # 40ed32 <flatcc_builder_padding_base@@Base+0x13d2>
  40750d:	lea    rsi,[rip+0x665e]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  407514:	mov    edx,0x304
  407519:	lea    rcx,[rip+0x67a7]        # 40dcc7 <flatcc_builder_padding_base@@Base+0x367>
  407520:	call   403070 <__assert_fail@plt>
  407525:	mov    eax,DWORD PTR [rbp-0x2c]
  407528:	mov    DWORD PTR [rbp-0x4],eax
  40752b:	mov    eax,DWORD PTR [rbp-0x4]
  40752e:	add    rsp,0xf0
  407535:	pop    rbp
  407536:	ret    
  407537:	nop    WORD PTR [rax+rax*1+0x0]
  407540:	push   rbp
  407541:	mov    rbp,rsp
  407544:	mov    ax,si
  407547:	mov    QWORD PTR [rbp-0x8],rdi
  40754b:	mov    WORD PTR [rbp-0xa],ax
  40754f:	mov    rdi,QWORD PTR [rbp-0x8]
  407553:	movzx  esi,WORD PTR [rdi+0xe8]
  40755a:	movzx  ecx,WORD PTR [rbp-0xa]
  40755e:	cmp    esi,ecx
  407560:	jge    407575 <flatcc_builder_create_buffer@@Base+0x445>
  407566:	mov    ax,WORD PTR [rbp-0xa]
  40756a:	mov    rcx,QWORD PTR [rbp-0x8]
  40756e:	mov    WORD PTR [rcx+0xe8],ax
  407575:	pop    rbp
  407576:	ret    
  407577:	nop    WORD PTR [rax+rax*1+0x0]
  407580:	push   rbp
  407581:	mov    rbp,rsp
  407584:	mov    DWORD PTR [rbp-0x4],edi
  407587:	mov    eax,DWORD PTR [rbp-0x4]
  40758a:	pop    rbp
  40758b:	ret    
  40758c:	nop    DWORD PTR [rax+0x0]

0000000000407590 <flatcc_builder_create_struct@@Base>:
  407590:	push   rbp
  407591:	mov    rbp,rsp
  407594:	sub    rsp,0xc0
  40759b:	mov    ax,cx
  40759e:	mov    QWORD PTR [rbp-0x8],rdi
  4075a2:	mov    QWORD PTR [rbp-0x10],rsi
  4075a6:	mov    QWORD PTR [rbp-0x18],rdx
  4075aa:	mov    WORD PTR [rbp-0x1a],ax
  4075ae:	movzx  ecx,WORD PTR [rbp-0x1a]
  4075b2:	cmp    ecx,0x1
  4075b5:	jl     4075c0 <flatcc_builder_create_struct@@Base+0x30>
  4075bb:	jmp    4075df <flatcc_builder_create_struct@@Base+0x4f>
  4075c0:	lea    rdi,[rip+0x6783]        # 40dd4a <flatcc_builder_padding_base@@Base+0x3ea>
  4075c7:	lea    rsi,[rip+0x65a4]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  4075ce:	mov    edx,0x30f
  4075d3:	lea    rcx,[rip+0x677b]        # 40dd55 <flatcc_builder_padding_base@@Base+0x3f5>
  4075da:	call   403070 <__assert_fail@plt>
  4075df:	mov    rdi,QWORD PTR [rbp-0x8]
  4075e3:	movzx  esi,WORD PTR [rbp-0x1a]
  4075e7:	call   407540 <flatcc_builder_create_buffer@@Base+0x410>
  4075ec:	mov    rdi,QWORD PTR [rbp-0x8]
  4075f0:	mov    rax,QWORD PTR [rbp-0x18]
  4075f4:	mov    esi,eax
  4075f6:	movzx  edx,WORD PTR [rbp-0x1a]
  4075fa:	call   406ff0 <flatcc_builder_embed_buffer@@Base+0x3f0>
  4075ff:	mov    eax,eax
  407601:	mov    edi,eax
  407603:	mov    QWORD PTR [rbp-0x28],rdi
  407607:	mov    QWORD PTR [rbp-0xb8],0x0
  407612:	mov    DWORD PTR [rbp-0xb0],0x0
  40761c:	cmp    QWORD PTR [rbp-0x18],0x0
  407621:	jbe    407685 <flatcc_builder_create_struct@@Base+0xf5>
  407627:	mov    rax,QWORD PTR [rbp-0x18]
  40762b:	add    rax,QWORD PTR [rbp-0xb8]
  407632:	mov    QWORD PTR [rbp-0xb8],rax
  407639:	mov    rax,QWORD PTR [rbp-0x10]
  40763d:	lea    rcx,[rbp-0xb8]
  407644:	mov    rdx,rcx
  407647:	add    rdx,0x10
  40764b:	movsxd rsi,DWORD PTR [rbp-0xb0]
  407652:	shl    rsi,0x4
  407656:	add    rdx,rsi
  407659:	mov    QWORD PTR [rdx],rax
  40765c:	mov    rax,QWORD PTR [rbp-0x18]
  407660:	add    rcx,0x10
  407664:	movsxd rdx,DWORD PTR [rbp-0xb0]
  40766b:	shl    rdx,0x4
  40766f:	add    rcx,rdx
  407672:	mov    QWORD PTR [rcx+0x8],rax
  407676:	mov    edi,DWORD PTR [rbp-0xb0]
  40767c:	add    edi,0x1
  40767f:	mov    DWORD PTR [rbp-0xb0],edi
  407685:	cmp    QWORD PTR [rbp-0x28],0x0
  40768a:	jbe    4076f1 <flatcc_builder_create_struct@@Base+0x161>
  407690:	lea    rax,[rip+0x62c9]        # 40d960 <flatcc_builder_padding_base@@Base>
  407697:	mov    rcx,QWORD PTR [rbp-0x28]
  40769b:	add    rcx,QWORD PTR [rbp-0xb8]
  4076a2:	mov    QWORD PTR [rbp-0xb8],rcx
  4076a9:	lea    rcx,[rbp-0xb8]
  4076b0:	mov    rdx,rcx
  4076b3:	add    rdx,0x10
  4076b7:	movsxd rsi,DWORD PTR [rbp-0xb0]
  4076be:	shl    rsi,0x4
  4076c2:	add    rdx,rsi
  4076c5:	mov    QWORD PTR [rdx],rax
  4076c8:	mov    rax,QWORD PTR [rbp-0x28]
  4076cc:	add    rcx,0x10
  4076d0:	movsxd rdx,DWORD PTR [rbp-0xb0]
  4076d7:	shl    rdx,0x4
  4076db:	add    rcx,rdx
  4076de:	mov    QWORD PTR [rcx+0x8],rax
  4076e2:	mov    edi,DWORD PTR [rbp-0xb0]
  4076e8:	add    edi,0x1
  4076eb:	mov    DWORD PTR [rbp-0xb0],edi
  4076f1:	mov    rdi,QWORD PTR [rbp-0x8]
  4076f5:	lea    rsi,[rbp-0xb8]
  4076fc:	call   407030 <flatcc_builder_embed_buffer@@Base+0x430>
  407701:	add    rsp,0xc0
  407708:	pop    rbp
  407709:	ret    
  40770a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000407710 <flatcc_builder_start_buffer@@Base>:
  407710:	push   rbp
  407711:	mov    rbp,rsp
  407714:	sub    rsp,0x30
  407718:	mov    ax,dx
  40771b:	mov    QWORD PTR [rbp-0x10],rdi
  40771f:	mov    QWORD PTR [rbp-0x18],rsi
  407723:	mov    WORD PTR [rbp-0x1a],ax
  407727:	mov    DWORD PTR [rbp-0x20],ecx
  40772a:	mov    rdi,QWORD PTR [rbp-0x10]
  40772e:	mov    rsi,QWORD PTR [rbp-0x10]
  407732:	movzx  esi,WORD PTR [rsi+0xe8]
  407739:	call   407880 <flatcc_builder_start_buffer@@Base+0x170>
  40773e:	cmp    eax,0x0
  407741:	je     407753 <flatcc_builder_start_buffer@@Base+0x43>
  407747:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40774e:	jmp    407877 <flatcc_builder_start_buffer@@Base+0x167>
  407753:	mov    rax,QWORD PTR [rbp-0x10]
  407757:	mov    WORD PTR [rax+0xe8],0x1
  407760:	mov    rax,QWORD PTR [rbp-0x10]
  407764:	mov    cx,WORD PTR [rax+0xec]
  40776b:	mov    rax,QWORD PTR [rbp-0x10]
  40776f:	mov    rax,QWORD PTR [rax+0x30]
  407773:	mov    WORD PTR [rax+0x22],cx
  407777:	mov    cx,WORD PTR [rbp-0x1a]
  40777b:	mov    rax,QWORD PTR [rbp-0x10]
  40777f:	mov    WORD PTR [rax+0xec],cx
  407786:	mov    rax,QWORD PTR [rbp-0x10]
  40778a:	mov    cx,WORD PTR [rax+0x10c]
  407791:	mov    rax,QWORD PTR [rbp-0x10]
  407795:	mov    rax,QWORD PTR [rax+0x30]
  407799:	mov    WORD PTR [rax+0x20],cx
  40779d:	mov    edx,DWORD PTR [rbp-0x20]
  4077a0:	mov    cx,dx
  4077a3:	mov    rax,QWORD PTR [rbp-0x10]
  4077a7:	mov    WORD PTR [rax+0x10c],cx
  4077ae:	mov    rax,QWORD PTR [rbp-0x10]
  4077b2:	mov    edx,DWORD PTR [rax+0xf8]
  4077b8:	mov    rax,QWORD PTR [rbp-0x10]
  4077bc:	mov    rax,QWORD PTR [rax+0x30]
  4077c0:	mov    DWORD PTR [rax+0x14],edx
  4077c3:	mov    rax,QWORD PTR [rbp-0x10]
  4077c7:	mov    edx,DWORD PTR [rax+0x100]
  4077cd:	mov    rax,QWORD PTR [rbp-0x10]
  4077d1:	mov    rax,QWORD PTR [rax+0x30]
  4077d5:	mov    DWORD PTR [rax+0x1c],edx
  4077d8:	mov    rax,QWORD PTR [rbp-0x10]
  4077dc:	mov    edx,DWORD PTR [rax+0xf0]
  4077e2:	mov    rax,QWORD PTR [rbp-0x10]
  4077e6:	mov    DWORD PTR [rax+0xf8],edx
  4077ec:	mov    rax,QWORD PTR [rbp-0x10]
  4077f0:	mov    edx,DWORD PTR [rax+0xfc]
  4077f6:	mov    esi,edx
  4077f8:	add    esi,0x1
  4077fb:	mov    DWORD PTR [rax+0xfc],esi
  407801:	mov    rax,QWORD PTR [rbp-0x10]
  407805:	mov    DWORD PTR [rax+0x100],edx
  40780b:	mov    rax,QWORD PTR [rbp-0x10]
  40780f:	mov    edx,DWORD PTR [rax+0x110]
  407815:	mov    rax,QWORD PTR [rbp-0x10]
  407819:	mov    rax,QWORD PTR [rax+0x30]
  40781d:	mov    DWORD PTR [rax+0x10],edx
  407820:	mov    rax,QWORD PTR [rbp-0x10]
  407824:	add    rax,0x110
  40782a:	cmp    QWORD PTR [rbp-0x18],0x0
  40782f:	mov    QWORD PTR [rbp-0x28],rax
  407833:	je     407846 <flatcc_builder_start_buffer@@Base+0x136>
  407839:	mov    rax,QWORD PTR [rbp-0x18]
  40783d:	mov    QWORD PTR [rbp-0x30],rax
  407841:	jmp    407856 <flatcc_builder_start_buffer@@Base+0x146>
  407846:	lea    rax,[rip+0x6113]        # 40d960 <flatcc_builder_padding_base@@Base>
  40784d:	mov    QWORD PTR [rbp-0x30],rax
  407851:	jmp    407856 <flatcc_builder_start_buffer@@Base+0x146>
  407856:	mov    rax,QWORD PTR [rbp-0x30]
  40785a:	mov    ecx,DWORD PTR [rax]
  40785c:	mov    rax,QWORD PTR [rbp-0x28]
  407860:	mov    DWORD PTR [rax],ecx
  407862:	mov    rdx,QWORD PTR [rbp-0x10]
  407866:	mov    rdx,QWORD PTR [rdx+0x30]
  40786a:	mov    WORD PTR [rdx+0xe],0x1
  407870:	mov    DWORD PTR [rbp-0x4],0x0
  407877:	mov    eax,DWORD PTR [rbp-0x4]
  40787a:	add    rsp,0x30
  40787e:	pop    rbp
  40787f:	ret    
  407880:	push   rbp
  407881:	mov    rbp,rsp
  407884:	sub    rsp,0x20
  407888:	mov    ax,si
  40788b:	mov    QWORD PTR [rbp-0x10],rdi
  40788f:	mov    WORD PTR [rbp-0x12],ax
  407893:	mov    rdi,QWORD PTR [rbp-0x10]
  407897:	mov    esi,DWORD PTR [rdi+0x104]
  40789d:	add    esi,0x1
  4078a0:	mov    DWORD PTR [rdi+0x104],esi
  4078a6:	mov    rdi,QWORD PTR [rbp-0x10]
  4078aa:	cmp    esi,DWORD PTR [rdi+0x108]
  4078b0:	jle    4079a0 <flatcc_builder_start_buffer@@Base+0x290>
  4078b6:	mov    rax,QWORD PTR [rbp-0x10]
  4078ba:	cmp    DWORD PTR [rax+0x120],0x0
  4078c1:	jle    4078ed <flatcc_builder_start_buffer@@Base+0x1dd>
  4078c7:	mov    rax,QWORD PTR [rbp-0x10]
  4078cb:	mov    ecx,DWORD PTR [rax+0x104]
  4078d1:	mov    rax,QWORD PTR [rbp-0x10]
  4078d5:	cmp    ecx,DWORD PTR [rax+0x120]
  4078db:	jle    4078ed <flatcc_builder_start_buffer@@Base+0x1dd>
  4078e1:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4078e8:	jmp    407a38 <flatcc_builder_start_buffer@@Base+0x328>
  4078ed:	mov    eax,0x24
  4078f2:	mov    ecx,eax
  4078f4:	xor    r8d,r8d
  4078f7:	mov    rdi,QWORD PTR [rbp-0x10]
  4078fb:	mov    rdx,QWORD PTR [rbp-0x10]
  4078ff:	mov    eax,DWORD PTR [rdx+0x104]
  407905:	sub    eax,0x1
  407908:	movsxd rdx,eax
  40790b:	imul   rdx,rdx,0x24
  40790f:	mov    esi,0x4
  407914:	call   406900 <flatcc_builder_enter_user_frame_ptr@@Base+0xe0>
  407919:	mov    rcx,QWORD PTR [rbp-0x10]
  40791d:	mov    QWORD PTR [rcx+0x30],rax
  407921:	cmp    rax,0x0
  407925:	jne    407937 <flatcc_builder_start_buffer@@Base+0x227>
  40792b:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407932:	jmp    407a38 <flatcc_builder_start_buffer@@Base+0x328>
  407937:	mov    eax,0x24
  40793c:	mov    ecx,eax
  40793e:	mov    rdx,QWORD PTR [rbp-0x10]
  407942:	mov    rax,QWORD PTR [rdx+0xa0]
  407949:	xor    esi,esi
  40794b:	mov    edx,esi
  40794d:	div    rcx
  407950:	mov    esi,eax
  407952:	mov    rax,QWORD PTR [rbp-0x10]
  407956:	mov    DWORD PTR [rax+0x108],esi
  40795c:	mov    rax,QWORD PTR [rbp-0x10]
  407960:	cmp    DWORD PTR [rax+0x120],0x0
  407967:	jle    40799b <flatcc_builder_start_buffer@@Base+0x28b>
  40796d:	mov    rax,QWORD PTR [rbp-0x10]
  407971:	mov    ecx,DWORD PTR [rax+0x120]
  407977:	mov    rax,QWORD PTR [rbp-0x10]
  40797b:	cmp    ecx,DWORD PTR [rax+0x108]
  407981:	jge    40799b <flatcc_builder_start_buffer@@Base+0x28b>
  407987:	mov    rax,QWORD PTR [rbp-0x10]
  40798b:	mov    ecx,DWORD PTR [rax+0x120]
  407991:	mov    rax,QWORD PTR [rbp-0x10]
  407995:	mov    DWORD PTR [rax+0x108],ecx
  40799b:	jmp    4079b0 <flatcc_builder_start_buffer@@Base+0x2a0>
  4079a0:	mov    rax,QWORD PTR [rbp-0x10]
  4079a4:	mov    rcx,QWORD PTR [rax+0x30]
  4079a8:	add    rcx,0x24
  4079ac:	mov    QWORD PTR [rax+0x30],rcx
  4079b0:	mov    rax,QWORD PTR [rbp-0x10]
  4079b4:	mov    ecx,DWORD PTR [rax+0x20]
  4079b7:	mov    rax,QWORD PTR [rbp-0x10]
  4079bb:	mov    rax,QWORD PTR [rax+0x30]
  4079bf:	mov    DWORD PTR [rax+0x8],ecx
  4079c2:	mov    rax,QWORD PTR [rbp-0x10]
  4079c6:	mov    dx,WORD PTR [rax+0xea]
  4079cd:	mov    rax,QWORD PTR [rbp-0x10]
  4079d1:	mov    rax,QWORD PTR [rax+0x30]
  4079d5:	mov    WORD PTR [rax+0xc],dx
  4079d9:	mov    dx,WORD PTR [rbp-0x12]
  4079dd:	mov    rax,QWORD PTR [rbp-0x10]
  4079e1:	mov    WORD PTR [rax+0xea],dx
  4079e8:	mov    rax,QWORD PTR [rbp-0x10]
  4079ec:	mov    ecx,DWORD PTR [rax+0x28]
  4079ef:	mov    rax,QWORD PTR [rbp-0x10]
  4079f3:	mov    rax,QWORD PTR [rax+0x30]
  4079f7:	mov    DWORD PTR [rax],ecx
  4079f9:	mov    rax,QWORD PTR [rbp-0x10]
  4079fd:	mov    rax,QWORD PTR [rax+0x30]
  407a01:	mov    DWORD PTR [rax+0x4],0xfffffffc
  407a08:	mov    rax,QWORD PTR [rbp-0x10]
  407a0c:	mov    ecx,DWORD PTR [rax+0x28]
  407a0f:	mov    rax,QWORD PTR [rbp-0x10]
  407a13:	add    ecx,DWORD PTR [rax+0x20]
  407a16:	add    ecx,0x8
  407a19:	sub    ecx,0x1
  407a1c:	and    ecx,0xfffffff8
  407a1f:	mov    rax,QWORD PTR [rbp-0x10]
  407a23:	mov    DWORD PTR [rax+0x28],ecx
  407a26:	mov    rax,QWORD PTR [rbp-0x10]
  407a2a:	mov    DWORD PTR [rax+0x20],0x0
  407a31:	mov    DWORD PTR [rbp-0x4],0x0
  407a38:	mov    eax,DWORD PTR [rbp-0x4]
  407a3b:	add    rsp,0x20
  407a3f:	pop    rbp
  407a40:	ret    
  407a41:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407a4b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000407a50 <flatcc_builder_end_buffer@@Base>:
  407a50:	push   rbp
  407a51:	mov    rbp,rsp
  407a54:	sub    rsp,0x20
  407a58:	xor    eax,eax
  407a5a:	mov    QWORD PTR [rbp-0x10],rdi
  407a5e:	mov    DWORD PTR [rbp-0x14],esi
  407a61:	mov    rdi,QWORD PTR [rbp-0x10]
  407a65:	movzx  esi,WORD PTR [rdi+0x10c]
  407a6c:	and    esi,0x2
  407a6f:	mov    DWORD PTR [rbp-0x1c],esi
  407a72:	mov    rdi,QWORD PTR [rbp-0x10]
  407a76:	mov    esi,DWORD PTR [rdi+0x100]
  407a7c:	cmp    esi,0x0
  407a7f:	mov    esi,0x1
  407a84:	cmove  esi,eax
  407a87:	or     esi,DWORD PTR [rbp-0x1c]
  407a8a:	mov    DWORD PTR [rbp-0x1c],esi
  407a8d:	mov    rdi,QWORD PTR [rbp-0x10]
  407a91:	mov    rdi,QWORD PTR [rdi+0x30]
  407a95:	movzx  eax,WORD PTR [rdi+0xe]
  407a99:	cmp    eax,0x1
  407a9c:	jne    407aa7 <flatcc_builder_end_buffer@@Base+0x57>
  407aa2:	jmp    407ac6 <flatcc_builder_end_buffer@@Base+0x76>
  407aa7:	lea    rdi,[rip+0x630d]        # 40ddbb <flatcc_builder_padding_base@@Base+0x45b>
  407aae:	lea    rsi,[rip+0x60bd]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  407ab5:	mov    edx,0x346
  407aba:	lea    rcx,[rip+0x6326]        # 40dde7 <flatcc_builder_padding_base@@Base+0x487>
  407ac1:	call   403070 <__assert_fail@plt>
  407ac6:	mov    rdi,QWORD PTR [rbp-0x10]
  407aca:	mov    rax,QWORD PTR [rbp-0x10]
  407ace:	movzx  esi,WORD PTR [rax+0xec]
  407ad5:	call   407540 <flatcc_builder_create_buffer@@Base+0x410>
  407ada:	mov    rdi,QWORD PTR [rbp-0x10]
  407ade:	mov    rax,QWORD PTR [rbp-0x10]
  407ae2:	add    rax,0x110
  407ae8:	mov    rcx,QWORD PTR [rbp-0x10]
  407aec:	mov    dx,WORD PTR [rcx+0xec]
  407af3:	mov    ecx,DWORD PTR [rbp-0x14]
  407af6:	mov    r8,QWORD PTR [rbp-0x10]
  407afa:	mov    r9w,WORD PTR [r8+0xe8]
  407b02:	mov    esi,DWORD PTR [rbp-0x1c]
  407b05:	mov    DWORD PTR [rbp-0x20],esi
  407b08:	mov    rsi,rax
  407b0b:	movzx  edx,dx
  407b0e:	movzx  r8d,r9w
  407b12:	mov    r9d,DWORD PTR [rbp-0x20]
  407b16:	call   407130 <flatcc_builder_create_buffer@@Base>
  407b1b:	xor    ecx,ecx
  407b1d:	mov    DWORD PTR [rbp-0x18],eax
  407b20:	cmp    ecx,eax
  407b22:	jne    407b34 <flatcc_builder_end_buffer@@Base+0xe4>
  407b28:	mov    DWORD PTR [rbp-0x4],0x0
  407b2f:	jmp    407b99 <flatcc_builder_end_buffer@@Base+0x149>
  407b34:	mov    rax,QWORD PTR [rbp-0x10]
  407b38:	mov    rax,QWORD PTR [rax+0x30]
  407b3c:	mov    ecx,DWORD PTR [rax+0x14]
  407b3f:	mov    rax,QWORD PTR [rbp-0x10]
  407b43:	mov    DWORD PTR [rax+0xf8],ecx
  407b49:	mov    rax,QWORD PTR [rbp-0x10]
  407b4d:	mov    rax,QWORD PTR [rax+0x30]
  407b51:	mov    ecx,DWORD PTR [rax+0x1c]
  407b54:	mov    rax,QWORD PTR [rbp-0x10]
  407b58:	mov    DWORD PTR [rax+0x100],ecx
  407b5e:	mov    rax,QWORD PTR [rbp-0x10]
  407b62:	mov    rax,QWORD PTR [rax+0x30]
  407b66:	mov    ecx,DWORD PTR [rax+0x10]
  407b69:	mov    rax,QWORD PTR [rbp-0x10]
  407b6d:	mov    DWORD PTR [rax+0x110],ecx
  407b73:	mov    rax,QWORD PTR [rbp-0x10]
  407b77:	mov    rax,QWORD PTR [rax+0x30]
  407b7b:	mov    dx,WORD PTR [rax+0x20]
  407b7f:	mov    rax,QWORD PTR [rbp-0x10]
  407b83:	mov    WORD PTR [rax+0x10c],dx
  407b8a:	mov    rdi,QWORD PTR [rbp-0x10]
  407b8e:	call   407bb0 <flatcc_builder_end_buffer@@Base+0x160>
  407b93:	mov    ecx,DWORD PTR [rbp-0x18]
  407b96:	mov    DWORD PTR [rbp-0x4],ecx
  407b99:	mov    eax,DWORD PTR [rbp-0x4]
  407b9c:	add    rsp,0x20
  407ba0:	pop    rbp
  407ba1:	ret    
  407ba2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407bac:	nop    DWORD PTR [rax+0x0]
  407bb0:	push   rbp
  407bb1:	mov    rbp,rsp
  407bb4:	sub    rsp,0x10
  407bb8:	xor    esi,esi
  407bba:	mov    QWORD PTR [rbp-0x8],rdi
  407bbe:	mov    rdi,QWORD PTR [rbp-0x8]
  407bc2:	mov    rdi,QWORD PTR [rdi+0x18]
  407bc6:	mov    rax,QWORD PTR [rbp-0x8]
  407bca:	mov    ecx,DWORD PTR [rax+0x20]
  407bcd:	mov    edx,ecx
  407bcf:	call   403080 <memset@plt>
  407bd4:	mov    rax,QWORD PTR [rbp-0x8]
  407bd8:	mov    rax,QWORD PTR [rax+0x30]
  407bdc:	mov    ecx,DWORD PTR [rax+0x8]
  407bdf:	mov    rax,QWORD PTR [rbp-0x8]
  407be3:	mov    DWORD PTR [rax+0x20],ecx
  407be6:	mov    rax,QWORD PTR [rbp-0x8]
  407bea:	mov    rax,QWORD PTR [rax+0x30]
  407bee:	mov    ecx,DWORD PTR [rax]
  407bf0:	mov    rax,QWORD PTR [rbp-0x8]
  407bf4:	mov    DWORD PTR [rax+0x28],ecx
  407bf7:	mov    rdi,QWORD PTR [rbp-0x8]
  407bfb:	mov    rax,QWORD PTR [rbp-0x8]
  407bff:	mov    rax,QWORD PTR [rax+0x30]
  407c03:	mov    esi,DWORD PTR [rax+0x4]
  407c06:	call   407cf0 <flatcc_builder_start_struct@@Base+0x80>
  407c0b:	mov    rdi,QWORD PTR [rbp-0x8]
  407c0f:	mov    rax,QWORD PTR [rbp-0x8]
  407c13:	movzx  esi,WORD PTR [rax+0xea]
  407c1a:	call   407540 <flatcc_builder_create_buffer@@Base+0x410>
  407c1f:	mov    rax,QWORD PTR [rbp-0x8]
  407c23:	mov    rax,QWORD PTR [rax+0x30]
  407c27:	mov    r8w,WORD PTR [rax+0xc]
  407c2c:	mov    rax,QWORD PTR [rbp-0x8]
  407c30:	mov    WORD PTR [rax+0xea],r8w
  407c38:	mov    rax,QWORD PTR [rbp-0x8]
  407c3c:	mov    rdx,QWORD PTR [rax+0x30]
  407c40:	add    rdx,0xffffffffffffffdc
  407c44:	mov    QWORD PTR [rax+0x30],rdx
  407c48:	mov    rax,QWORD PTR [rbp-0x8]
  407c4c:	mov    ecx,DWORD PTR [rax+0x104]
  407c52:	add    ecx,0xffffffff
  407c55:	mov    DWORD PTR [rax+0x104],ecx
  407c5b:	add    rsp,0x10
  407c5f:	pop    rbp
  407c60:	ret    
  407c61:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407c6b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000407c70 <flatcc_builder_start_struct@@Base>:
  407c70:	push   rbp
  407c71:	mov    rbp,rsp
  407c74:	sub    rsp,0x20
  407c78:	mov    ax,dx
  407c7b:	mov    QWORD PTR [rbp-0x10],rdi
  407c7f:	mov    QWORD PTR [rbp-0x18],rsi
  407c83:	mov    WORD PTR [rbp-0x1a],ax
  407c87:	mov    rdi,QWORD PTR [rbp-0x10]
  407c8b:	movzx  esi,WORD PTR [rbp-0x1a]
  407c8f:	call   407880 <flatcc_builder_start_buffer@@Base+0x170>
  407c94:	cmp    eax,0x0
  407c97:	je     407caa <flatcc_builder_start_struct@@Base+0x3a>
  407c9d:	mov    QWORD PTR [rbp-0x8],0x0
  407ca5:	jmp    407cd9 <flatcc_builder_start_struct@@Base+0x69>
  407caa:	mov    rax,QWORD PTR [rbp-0x10]
  407cae:	mov    rax,QWORD PTR [rax+0x30]
  407cb2:	mov    WORD PTR [rax+0xe],0x2
  407cb8:	mov    rdi,QWORD PTR [rbp-0x10]
  407cbc:	mov    esi,0xfffffffc
  407cc1:	call   407cf0 <flatcc_builder_start_struct@@Base+0x80>
  407cc6:	mov    rdi,QWORD PTR [rbp-0x10]
  407cca:	mov    rax,QWORD PTR [rbp-0x18]
  407cce:	mov    esi,eax
  407cd0:	call   407d70 <flatcc_builder_start_struct@@Base+0x100>
  407cd5:	mov    QWORD PTR [rbp-0x8],rax
  407cd9:	mov    rax,QWORD PTR [rbp-0x8]
  407cdd:	add    rsp,0x20
  407ce1:	pop    rbp
  407ce2:	ret    
  407ce3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407ced:	nop    DWORD PTR [rax]
  407cf0:	push   rbp
  407cf1:	mov    rbp,rsp
  407cf4:	mov    QWORD PTR [rbp-0x8],rdi
  407cf8:	mov    DWORD PTR [rbp-0xc],esi
  407cfb:	mov    rdi,QWORD PTR [rbp-0x8]
  407cff:	add    rdi,0x58
  407d03:	add    rdi,0x10
  407d07:	mov    QWORD PTR [rbp-0x18],rdi
  407d0b:	mov    rdi,QWORD PTR [rbp-0x8]
  407d0f:	mov    rdi,QWORD PTR [rdi+0x68]
  407d13:	mov    rax,QWORD PTR [rbp-0x8]
  407d17:	mov    esi,DWORD PTR [rax+0x28]
  407d1a:	mov    eax,esi
  407d1c:	add    rdi,rax
  407d1f:	mov    rax,QWORD PTR [rbp-0x8]
  407d23:	mov    QWORD PTR [rax+0x18],rdi
  407d27:	mov    rax,QWORD PTR [rbp-0x18]
  407d2b:	mov    rax,QWORD PTR [rax+0x8]
  407d2f:	mov    esi,eax
  407d31:	mov    rax,QWORD PTR [rbp-0x8]
  407d35:	sub    esi,DWORD PTR [rax+0x28]
  407d38:	mov    rax,QWORD PTR [rbp-0x8]
  407d3c:	mov    DWORD PTR [rax+0x24],esi
  407d3f:	mov    rax,QWORD PTR [rbp-0x8]
  407d43:	mov    esi,DWORD PTR [rax+0x24]
  407d46:	cmp    esi,DWORD PTR [rbp-0xc]
  407d49:	jbe    407d59 <flatcc_builder_start_struct@@Base+0xe9>
  407d4f:	mov    eax,DWORD PTR [rbp-0xc]
  407d52:	mov    rcx,QWORD PTR [rbp-0x8]
  407d56:	mov    DWORD PTR [rcx+0x24],eax
  407d59:	mov    eax,DWORD PTR [rbp-0xc]
  407d5c:	mov    rcx,QWORD PTR [rbp-0x8]
  407d60:	mov    rcx,QWORD PTR [rcx+0x30]
  407d64:	mov    DWORD PTR [rcx+0x4],eax
  407d67:	pop    rbp
  407d68:	ret    
  407d69:	nop    DWORD PTR [rax+0x0]
  407d70:	push   rbp
  407d71:	mov    rbp,rsp
  407d74:	sub    rsp,0x20
  407d78:	mov    QWORD PTR [rbp-0x10],rdi
  407d7c:	mov    DWORD PTR [rbp-0x14],esi
  407d7f:	mov    rdi,QWORD PTR [rbp-0x10]
  407d83:	mov    esi,DWORD PTR [rdi+0x20]
  407d86:	mov    edi,esi
  407d88:	mov    QWORD PTR [rbp-0x20],rdi
  407d8c:	mov    esi,DWORD PTR [rbp-0x14]
  407d8f:	mov    rdi,QWORD PTR [rbp-0x10]
  407d93:	add    esi,DWORD PTR [rdi+0x20]
  407d96:	mov    DWORD PTR [rdi+0x20],esi
  407d99:	mov    rdi,QWORD PTR [rbp-0x10]
  407d9d:	cmp    esi,DWORD PTR [rdi+0x24]
  407da0:	jb     407ddd <flatcc_builder_start_struct@@Base+0x16d>
  407da6:	mov    rdi,QWORD PTR [rbp-0x10]
  407daa:	mov    rax,QWORD PTR [rbp-0x10]
  407dae:	mov    ecx,DWORD PTR [rax+0x20]
  407db1:	add    ecx,0x1
  407db4:	mov    ecx,ecx
  407db6:	mov    esi,ecx
  407db8:	mov    edx,0xfffffffc
  407dbd:	call   40bd90 <flatcc_builder_get_emit_context@@Base+0x50>
  407dc2:	cmp    eax,0x0
  407dc5:	je     407dd8 <flatcc_builder_start_struct@@Base+0x168>
  407dcb:	mov    QWORD PTR [rbp-0x8],0x0
  407dd3:	jmp    407ded <flatcc_builder_start_struct@@Base+0x17d>
  407dd8:	jmp    407ddd <flatcc_builder_start_struct@@Base+0x16d>
  407ddd:	mov    rax,QWORD PTR [rbp-0x10]
  407de1:	mov    rax,QWORD PTR [rax+0x18]
  407de5:	add    rax,QWORD PTR [rbp-0x20]
  407de9:	mov    QWORD PTR [rbp-0x8],rax
  407ded:	mov    rax,QWORD PTR [rbp-0x8]
  407df1:	add    rsp,0x20
  407df5:	pop    rbp
  407df6:	ret    
  407df7:	nop    WORD PTR [rax+rax*1+0x0]

0000000000407e00 <flatcc_builder_struct_edit@@Base>:
  407e00:	push   rbp
  407e01:	mov    rbp,rsp
  407e04:	mov    QWORD PTR [rbp-0x8],rdi
  407e08:	mov    rdi,QWORD PTR [rbp-0x8]
  407e0c:	mov    rax,QWORD PTR [rdi+0x18]
  407e10:	pop    rbp
  407e11:	ret    
  407e12:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407e1c:	nop    DWORD PTR [rax+0x0]

0000000000407e20 <flatcc_builder_end_struct@@Base>:
  407e20:	push   rbp
  407e21:	mov    rbp,rsp
  407e24:	sub    rsp,0x20
  407e28:	mov    QWORD PTR [rbp-0x10],rdi
  407e2c:	mov    rdi,QWORD PTR [rbp-0x10]
  407e30:	mov    rdi,QWORD PTR [rdi+0x30]
  407e34:	movzx  eax,WORD PTR [rdi+0xe]
  407e38:	cmp    eax,0x2
  407e3b:	jne    407e46 <flatcc_builder_end_struct@@Base+0x26>
  407e41:	jmp    407e65 <flatcc_builder_end_struct@@Base+0x45>
  407e46:	lea    rdi,[rip+0x5ff3]        # 40de40 <flatcc_builder_padding_base@@Base+0x4e0>
  407e4d:	lea    rsi,[rip+0x5d1e]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  407e54:	mov    edx,0x368
  407e59:	lea    rcx,[rip+0x600c]        # 40de6c <flatcc_builder_padding_base@@Base+0x50c>
  407e60:	call   403070 <__assert_fail@plt>
  407e65:	mov    rdi,QWORD PTR [rbp-0x10]
  407e69:	mov    rax,QWORD PTR [rbp-0x10]
  407e6d:	mov    rsi,QWORD PTR [rax+0x18]
  407e71:	mov    rax,QWORD PTR [rbp-0x10]
  407e75:	mov    ecx,DWORD PTR [rax+0x20]
  407e78:	mov    edx,ecx
  407e7a:	mov    rax,QWORD PTR [rbp-0x10]
  407e7e:	movzx  ecx,WORD PTR [rax+0xea]
  407e85:	call   407590 <flatcc_builder_create_struct@@Base>
  407e8a:	xor    ecx,ecx
  407e8c:	mov    DWORD PTR [rbp-0x14],eax
  407e8f:	cmp    ecx,eax
  407e91:	jne    407ea3 <flatcc_builder_end_struct@@Base+0x83>
  407e97:	mov    DWORD PTR [rbp-0x4],0x0
  407e9e:	jmp    407eb2 <flatcc_builder_end_struct@@Base+0x92>
  407ea3:	mov    rdi,QWORD PTR [rbp-0x10]
  407ea7:	call   407bb0 <flatcc_builder_end_buffer@@Base+0x160>
  407eac:	mov    eax,DWORD PTR [rbp-0x14]
  407eaf:	mov    DWORD PTR [rbp-0x4],eax
  407eb2:	mov    eax,DWORD PTR [rbp-0x4]
  407eb5:	add    rsp,0x20
  407eb9:	pop    rbp
  407eba:	ret    
  407ebb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000407ec0 <flatcc_builder_extend_vector@@Base>:
  407ec0:	push   rbp
  407ec1:	mov    rbp,rsp
  407ec4:	sub    rsp,0x20
  407ec8:	mov    QWORD PTR [rbp-0x10],rdi
  407ecc:	mov    QWORD PTR [rbp-0x18],rsi
  407ed0:	mov    rdi,QWORD PTR [rbp-0x10]
  407ed4:	mov    rsi,QWORD PTR [rbp-0x18]
  407ed8:	mov    eax,esi
  407eda:	mov    rsi,QWORD PTR [rbp-0x10]
  407ede:	mov    rsi,QWORD PTR [rsi+0x30]
  407ee2:	mov    edx,DWORD PTR [rsi+0x18]
  407ee5:	mov    esi,eax
  407ee7:	call   407f30 <flatcc_builder_extend_vector@@Base+0x70>
  407eec:	cmp    eax,0x0
  407eef:	je     407f02 <flatcc_builder_extend_vector@@Base+0x42>
  407ef5:	mov    QWORD PTR [rbp-0x8],0x0
  407efd:	jmp    407f25 <flatcc_builder_extend_vector@@Base+0x65>
  407f02:	mov    rdi,QWORD PTR [rbp-0x10]
  407f06:	mov    rax,QWORD PTR [rbp-0x10]
  407f0a:	mov    rax,QWORD PTR [rax+0x30]
  407f0e:	mov    ecx,DWORD PTR [rax+0x10]
  407f11:	mov    rax,QWORD PTR [rbp-0x18]
  407f15:	mov    edx,eax
  407f17:	imul   ecx,edx
  407f1a:	mov    esi,ecx
  407f1c:	call   407d70 <flatcc_builder_start_struct@@Base+0x100>
  407f21:	mov    QWORD PTR [rbp-0x8],rax
  407f25:	mov    rax,QWORD PTR [rbp-0x8]
  407f29:	add    rsp,0x20
  407f2d:	pop    rbp
  407f2e:	ret    
  407f2f:	nop
  407f30:	push   rbp
  407f31:	mov    rbp,rsp
  407f34:	sub    rsp,0x20
  407f38:	mov    QWORD PTR [rbp-0x10],rdi
  407f3c:	mov    DWORD PTR [rbp-0x14],esi
  407f3f:	mov    DWORD PTR [rbp-0x18],edx
  407f42:	mov    rdi,QWORD PTR [rbp-0x10]
  407f46:	mov    rdi,QWORD PTR [rdi+0x30]
  407f4a:	mov    edx,DWORD PTR [rdi+0x14]
  407f4d:	mov    DWORD PTR [rbp-0x1c],edx
  407f50:	mov    edx,DWORD PTR [rbp-0x1c]
  407f53:	add    edx,DWORD PTR [rbp-0x14]
  407f56:	mov    DWORD PTR [rbp-0x20],edx
  407f59:	mov    edx,DWORD PTR [rbp-0x1c]
  407f5c:	cmp    edx,DWORD PTR [rbp-0x20]
  407f5f:	ja     407f71 <flatcc_builder_extend_vector@@Base+0xb1>
  407f65:	mov    eax,DWORD PTR [rbp-0x20]
  407f68:	cmp    eax,DWORD PTR [rbp-0x18]
  407f6b:	jbe    407fb9 <flatcc_builder_extend_vector@@Base+0xf9>
  407f71:	mov    eax,DWORD PTR [rbp-0x1c]
  407f74:	cmp    eax,DWORD PTR [rbp-0x20]
  407f77:	ja     407f8e <flatcc_builder_extend_vector@@Base+0xce>
  407f7d:	mov    eax,DWORD PTR [rbp-0x20]
  407f80:	cmp    eax,DWORD PTR [rbp-0x18]
  407f83:	ja     407f8e <flatcc_builder_extend_vector@@Base+0xce>
  407f89:	jmp    407fad <flatcc_builder_extend_vector@@Base+0xed>
  407f8e:	lea    rdi,[rip+0x6ca6]        # 40ec3b <flatcc_builder_padding_base@@Base+0x12db>
  407f95:	lea    rsi,[rip+0x5bd6]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  407f9c:	mov    edx,0x37c
  407fa1:	lea    rcx,[rip+0x6cae]        # 40ec56 <flatcc_builder_padding_base@@Base+0x12f6>
  407fa8:	call   403070 <__assert_fail@plt>
  407fad:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407fb4:	jmp    407fce <flatcc_builder_extend_vector@@Base+0x10e>
  407fb9:	mov    eax,DWORD PTR [rbp-0x20]
  407fbc:	mov    rcx,QWORD PTR [rbp-0x10]
  407fc0:	mov    rcx,QWORD PTR [rcx+0x30]
  407fc4:	mov    DWORD PTR [rcx+0x14],eax
  407fc7:	mov    DWORD PTR [rbp-0x4],0x0
  407fce:	mov    eax,DWORD PTR [rbp-0x4]
  407fd1:	add    rsp,0x20
  407fd5:	pop    rbp
  407fd6:	ret    
  407fd7:	nop    WORD PTR [rax+rax*1+0x0]

0000000000407fe0 <flatcc_builder_vector_push@@Base>:
  407fe0:	push   rbp
  407fe1:	mov    rbp,rsp
  407fe4:	sub    rsp,0x20
  407fe8:	mov    QWORD PTR [rbp-0x10],rdi
  407fec:	mov    QWORD PTR [rbp-0x18],rsi
  407ff0:	mov    rsi,QWORD PTR [rbp-0x10]
  407ff4:	mov    rsi,QWORD PTR [rsi+0x30]
  407ff8:	movzx  eax,WORD PTR [rsi+0xe]
  407ffc:	cmp    eax,0x4
  407fff:	jne    40800a <flatcc_builder_vector_push@@Base+0x2a>
  408005:	jmp    408029 <flatcc_builder_vector_push@@Base+0x49>
  40800a:	lea    rdi,[rip+0x5e9e]        # 40deaf <flatcc_builder_padding_base@@Base+0x54f>
  408011:	lea    rsi,[rip+0x5b5a]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  408018:	mov    edx,0x38b
  40801d:	lea    rcx,[rip+0x5eb7]        # 40dedb <flatcc_builder_padding_base@@Base+0x57b>
  408024:	call   403070 <__assert_fail@plt>
  408029:	mov    rax,QWORD PTR [rbp-0x10]
  40802d:	mov    rax,QWORD PTR [rax+0x30]
  408031:	mov    ecx,DWORD PTR [rax+0x14]
  408034:	mov    rax,QWORD PTR [rbp-0x10]
  408038:	mov    rax,QWORD PTR [rax+0x30]
  40803c:	cmp    ecx,DWORD PTR [rax+0x18]
  40803f:	jbe    408092 <flatcc_builder_vector_push@@Base+0xb2>
  408045:	mov    rax,QWORD PTR [rbp-0x10]
  408049:	mov    rax,QWORD PTR [rax+0x30]
  40804d:	mov    ecx,DWORD PTR [rax+0x14]
  408050:	mov    rax,QWORD PTR [rbp-0x10]
  408054:	mov    rax,QWORD PTR [rax+0x30]
  408058:	cmp    ecx,DWORD PTR [rax+0x18]
  40805b:	ja     408066 <flatcc_builder_vector_push@@Base+0x86>
  408061:	jmp    408085 <flatcc_builder_vector_push@@Base+0xa5>
  408066:	lea    rdi,[rip+0x5eb1]        # 40df1e <flatcc_builder_padding_base@@Base+0x5be>
  40806d:	lea    rsi,[rip+0x5afe]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  408074:	mov    edx,0x38c
  408079:	lea    rcx,[rip+0x5e5b]        # 40dedb <flatcc_builder_padding_base@@Base+0x57b>
  408080:	call   403070 <__assert_fail@plt>
  408085:	mov    QWORD PTR [rbp-0x8],0x0
  40808d:	jmp    4080bf <flatcc_builder_vector_push@@Base+0xdf>
  408092:	mov    rax,QWORD PTR [rbp-0x10]
  408096:	mov    rax,QWORD PTR [rax+0x30]
  40809a:	mov    ecx,DWORD PTR [rax+0x14]
  40809d:	add    ecx,0x1
  4080a0:	mov    DWORD PTR [rax+0x14],ecx
  4080a3:	mov    rdi,QWORD PTR [rbp-0x10]
  4080a7:	mov    rsi,QWORD PTR [rbp-0x18]
  4080ab:	mov    rax,QWORD PTR [rbp-0x10]
  4080af:	mov    rax,QWORD PTR [rax+0x30]
  4080b3:	mov    edx,DWORD PTR [rax+0x10]
  4080b6:	call   4080d0 <flatcc_builder_vector_push@@Base+0xf0>
  4080bb:	mov    QWORD PTR [rbp-0x8],rax
  4080bf:	mov    rax,QWORD PTR [rbp-0x8]
  4080c3:	add    rsp,0x20
  4080c7:	pop    rbp
  4080c8:	ret    
  4080c9:	nop    DWORD PTR [rax+0x0]
  4080d0:	push   rbp
  4080d1:	mov    rbp,rsp
  4080d4:	sub    rsp,0x30
  4080d8:	mov    QWORD PTR [rbp-0x10],rdi
  4080dc:	mov    QWORD PTR [rbp-0x18],rsi
  4080e0:	mov    DWORD PTR [rbp-0x1c],edx
  4080e3:	mov    rdi,QWORD PTR [rbp-0x10]
  4080e7:	mov    esi,DWORD PTR [rbp-0x1c]
  4080ea:	call   407d70 <flatcc_builder_start_struct@@Base+0x100>
  4080ef:	mov    QWORD PTR [rbp-0x28],rax
  4080f3:	cmp    rax,0x0
  4080f7:	jne    40810a <flatcc_builder_vector_push@@Base+0x12a>
  4080fd:	mov    QWORD PTR [rbp-0x8],0x0
  408105:	jmp    408124 <flatcc_builder_vector_push@@Base+0x144>
  40810a:	mov    rdi,QWORD PTR [rbp-0x28]
  40810e:	mov    rsi,QWORD PTR [rbp-0x18]
  408112:	mov    eax,DWORD PTR [rbp-0x1c]
  408115:	mov    edx,eax
  408117:	call   4030c0 <memcpy@plt>
  40811c:	mov    rdx,QWORD PTR [rbp-0x28]
  408120:	mov    QWORD PTR [rbp-0x8],rdx
  408124:	mov    rax,QWORD PTR [rbp-0x8]
  408128:	add    rsp,0x30
  40812c:	pop    rbp
  40812d:	ret    
  40812e:	xchg   ax,ax

0000000000408130 <flatcc_builder_append_vector@@Base>:
  408130:	push   rbp
  408131:	mov    rbp,rsp
  408134:	sub    rsp,0x20
  408138:	mov    QWORD PTR [rbp-0x10],rdi
  40813c:	mov    QWORD PTR [rbp-0x18],rsi
  408140:	mov    QWORD PTR [rbp-0x20],rdx
  408144:	mov    rdx,QWORD PTR [rbp-0x10]
  408148:	mov    rdx,QWORD PTR [rdx+0x30]
  40814c:	movzx  eax,WORD PTR [rdx+0xe]
  408150:	cmp    eax,0x4
  408153:	jne    40815e <flatcc_builder_append_vector@@Base+0x2e>
  408159:	jmp    40817d <flatcc_builder_append_vector@@Base+0x4d>
  40815e:	lea    rdi,[rip+0x5d4a]        # 40deaf <flatcc_builder_padding_base@@Base+0x54f>
  408165:	lea    rsi,[rip+0x5a06]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  40816c:	mov    edx,0x393
  408171:	lea    rcx,[rip+0x5de3]        # 40df5b <flatcc_builder_padding_base@@Base+0x5fb>
  408178:	call   403070 <__assert_fail@plt>
  40817d:	mov    rdi,QWORD PTR [rbp-0x10]
  408181:	mov    rax,QWORD PTR [rbp-0x20]
  408185:	mov    ecx,eax
  408187:	mov    rax,QWORD PTR [rbp-0x10]
  40818b:	mov    rax,QWORD PTR [rax+0x30]
  40818f:	mov    edx,DWORD PTR [rax+0x18]
  408192:	mov    esi,ecx
  408194:	call   407f30 <flatcc_builder_extend_vector@@Base+0x70>
  408199:	cmp    eax,0x0
  40819c:	je     4081af <flatcc_builder_append_vector@@Base+0x7f>
  4081a2:	mov    QWORD PTR [rbp-0x8],0x0
  4081aa:	jmp    4081d6 <flatcc_builder_append_vector@@Base+0xa6>
  4081af:	mov    rdi,QWORD PTR [rbp-0x10]
  4081b3:	mov    rsi,QWORD PTR [rbp-0x18]
  4081b7:	mov    rax,QWORD PTR [rbp-0x10]
  4081bb:	mov    rax,QWORD PTR [rax+0x30]
  4081bf:	mov    ecx,DWORD PTR [rax+0x10]
  4081c2:	mov    rax,QWORD PTR [rbp-0x20]
  4081c6:	mov    edx,eax
  4081c8:	imul   ecx,edx
  4081cb:	mov    edx,ecx
  4081cd:	call   4080d0 <flatcc_builder_vector_push@@Base+0xf0>
  4081d2:	mov    QWORD PTR [rbp-0x8],rax
  4081d6:	mov    rax,QWORD PTR [rbp-0x8]
  4081da:	add    rsp,0x20
  4081de:	pop    rbp
  4081df:	ret    

00000000004081e0 <flatcc_builder_extend_offset_vector@@Base>:
  4081e0:	push   rbp
  4081e1:	mov    rbp,rsp
  4081e4:	sub    rsp,0x20
  4081e8:	mov    QWORD PTR [rbp-0x10],rdi
  4081ec:	mov    QWORD PTR [rbp-0x18],rsi
  4081f0:	mov    rdi,QWORD PTR [rbp-0x10]
  4081f4:	mov    rsi,QWORD PTR [rbp-0x18]
  4081f8:	mov    eax,esi
  4081fa:	mov    esi,eax
  4081fc:	mov    edx,0x3fffffff
  408201:	call   407f30 <flatcc_builder_extend_vector@@Base+0x70>
  408206:	cmp    eax,0x0
  408209:	je     40821c <flatcc_builder_extend_offset_vector@@Base+0x3c>
  40820f:	mov    QWORD PTR [rbp-0x8],0x0
  408217:	jmp    40823b <flatcc_builder_extend_offset_vector@@Base+0x5b>
  40821c:	mov    rdi,QWORD PTR [rbp-0x10]
  408220:	mov    rax,QWORD PTR [rbp-0x18]
  408224:	mov    ecx,eax
  408226:	mov    ecx,ecx
  408228:	mov    eax,ecx
  40822a:	shl    rax,0x2
  40822e:	mov    ecx,eax
  408230:	mov    esi,ecx
  408232:	call   407d70 <flatcc_builder_start_struct@@Base+0x100>
  408237:	mov    QWORD PTR [rbp-0x8],rax
  40823b:	mov    rax,QWORD PTR [rbp-0x8]
  40823f:	add    rsp,0x20
  408243:	pop    rbp
  408244:	ret    
  408245:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40824f:	nop

0000000000408250 <flatcc_builder_offset_vector_push@@Base>:
  408250:	push   rbp
  408251:	mov    rbp,rsp
  408254:	sub    rsp,0x20
  408258:	mov    QWORD PTR [rbp-0x10],rdi
  40825c:	mov    DWORD PTR [rbp-0x14],esi
  40825f:	mov    rdi,QWORD PTR [rbp-0x10]
  408263:	mov    rdi,QWORD PTR [rdi+0x30]
  408267:	movzx  esi,WORD PTR [rdi+0xe]
  40826b:	cmp    esi,0x5
  40826e:	jne    408279 <flatcc_builder_offset_vector_push@@Base+0x29>
  408274:	jmp    408298 <flatcc_builder_offset_vector_push@@Base+0x48>
  408279:	lea    rdi,[rip+0x5d28]        # 40dfa8 <flatcc_builder_padding_base@@Base+0x648>
  408280:	lea    rsi,[rip+0x58eb]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  408287:	mov    edx,0x3a6
  40828c:	lea    rcx,[rip+0x5d48]        # 40dfdb <flatcc_builder_padding_base@@Base+0x67b>
  408293:	call   403070 <__assert_fail@plt>
  408298:	mov    rax,QWORD PTR [rbp-0x10]
  40829c:	mov    rax,QWORD PTR [rax+0x30]
  4082a0:	mov    ecx,DWORD PTR [rax+0x14]
  4082a3:	mov    eax,ecx
  4082a5:	cmp    rax,0x3fffffff
  4082ab:	jne    4082be <flatcc_builder_offset_vector_push@@Base+0x6e>
  4082b1:	mov    QWORD PTR [rbp-0x8],0x0
  4082b9:	jmp    40830c <flatcc_builder_offset_vector_push@@Base+0xbc>
  4082be:	mov    rax,QWORD PTR [rbp-0x10]
  4082c2:	mov    rax,QWORD PTR [rax+0x30]
  4082c6:	mov    ecx,DWORD PTR [rax+0x14]
  4082c9:	add    ecx,0x1
  4082cc:	mov    DWORD PTR [rax+0x14],ecx
  4082cf:	mov    rdi,QWORD PTR [rbp-0x10]
  4082d3:	mov    esi,0x4
  4082d8:	call   407d70 <flatcc_builder_start_struct@@Base+0x100>
  4082dd:	xor    ecx,ecx
  4082df:	mov    edi,ecx
  4082e1:	mov    QWORD PTR [rbp-0x20],rax
  4082e5:	cmp    rdi,rax
  4082e8:	jne    4082fb <flatcc_builder_offset_vector_push@@Base+0xab>
  4082ee:	mov    QWORD PTR [rbp-0x8],0x0
  4082f6:	jmp    40830c <flatcc_builder_offset_vector_push@@Base+0xbc>
  4082fb:	mov    eax,DWORD PTR [rbp-0x14]
  4082fe:	mov    rcx,QWORD PTR [rbp-0x20]
  408302:	mov    DWORD PTR [rcx],eax
  408304:	mov    rcx,QWORD PTR [rbp-0x20]
  408308:	mov    QWORD PTR [rbp-0x8],rcx
  40830c:	mov    rax,QWORD PTR [rbp-0x8]
  408310:	add    rsp,0x20
  408314:	pop    rbp
  408315:	ret    
  408316:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000408320 <flatcc_builder_append_offset_vector@@Base>:
  408320:	push   rbp
  408321:	mov    rbp,rsp
  408324:	sub    rsp,0x20
  408328:	mov    QWORD PTR [rbp-0x10],rdi
  40832c:	mov    QWORD PTR [rbp-0x18],rsi
  408330:	mov    QWORD PTR [rbp-0x20],rdx
  408334:	mov    rdx,QWORD PTR [rbp-0x10]
  408338:	mov    rdx,QWORD PTR [rdx+0x30]
  40833c:	movzx  eax,WORD PTR [rdx+0xe]
  408340:	cmp    eax,0x5
  408343:	jne    40834e <flatcc_builder_append_offset_vector@@Base+0x2e>
  408349:	jmp    40836d <flatcc_builder_append_offset_vector@@Base+0x4d>
  40834e:	lea    rdi,[rip+0x5c53]        # 40dfa8 <flatcc_builder_padding_base@@Base+0x648>
  408355:	lea    rsi,[rip+0x5816]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  40835c:	mov    edx,0x3b4
  408361:	lea    rcx,[rip+0x5cd5]        # 40e03d <flatcc_builder_padding_base@@Base+0x6dd>
  408368:	call   403070 <__assert_fail@plt>
  40836d:	mov    rdi,QWORD PTR [rbp-0x10]
  408371:	mov    rax,QWORD PTR [rbp-0x20]
  408375:	mov    ecx,eax
  408377:	mov    esi,ecx
  408379:	mov    edx,0x3fffffff
  40837e:	call   407f30 <flatcc_builder_extend_vector@@Base+0x70>
  408383:	cmp    eax,0x0
  408386:	je     408399 <flatcc_builder_append_offset_vector@@Base+0x79>
  40838c:	mov    QWORD PTR [rbp-0x8],0x0
  408394:	jmp    4083bd <flatcc_builder_append_offset_vector@@Base+0x9d>
  408399:	mov    rdi,QWORD PTR [rbp-0x10]
  40839d:	mov    rax,QWORD PTR [rbp-0x18]
  4083a1:	mov    rcx,QWORD PTR [rbp-0x20]
  4083a5:	mov    edx,ecx
  4083a7:	mov    edx,edx
  4083a9:	mov    ecx,edx
  4083ab:	shl    rcx,0x2
  4083af:	mov    edx,ecx
  4083b1:	mov    rsi,rax
  4083b4:	call   4080d0 <flatcc_builder_vector_push@@Base+0xf0>
  4083b9:	mov    QWORD PTR [rbp-0x8],rax
  4083bd:	mov    rax,QWORD PTR [rbp-0x8]
  4083c1:	add    rsp,0x20
  4083c5:	pop    rbp
  4083c6:	ret    
  4083c7:	nop    WORD PTR [rax+rax*1+0x0]

00000000004083d0 <flatcc_builder_extend_string@@Base>:
  4083d0:	push   rbp
  4083d1:	mov    rbp,rsp
  4083d4:	sub    rsp,0x20
  4083d8:	mov    QWORD PTR [rbp-0x10],rdi
  4083dc:	mov    QWORD PTR [rbp-0x18],rsi
  4083e0:	mov    rsi,QWORD PTR [rbp-0x10]
  4083e4:	mov    rsi,QWORD PTR [rsi+0x30]
  4083e8:	movzx  eax,WORD PTR [rsi+0xe]
  4083ec:	cmp    eax,0x6
  4083ef:	jne    4083fa <flatcc_builder_extend_string@@Base+0x2a>
  4083f5:	jmp    408419 <flatcc_builder_extend_string@@Base+0x49>
  4083fa:	lea    rdi,[rip+0x5cb0]        # 40e0b1 <flatcc_builder_padding_base@@Base+0x751>
  408401:	lea    rsi,[rip+0x576a]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  408408:	mov    edx,0x3bd
  40840d:	lea    rcx,[rip+0x5cc9]        # 40e0dd <flatcc_builder_padding_base@@Base+0x77d>
  408414:	call   403070 <__assert_fail@plt>
  408419:	mov    rdi,QWORD PTR [rbp-0x10]
  40841d:	mov    rax,QWORD PTR [rbp-0x18]
  408421:	mov    ecx,eax
  408423:	mov    esi,ecx
  408425:	mov    edx,0xffffffff
  40842a:	call   407f30 <flatcc_builder_extend_vector@@Base+0x70>
  40842f:	cmp    eax,0x0
  408432:	je     408445 <flatcc_builder_extend_string@@Base+0x75>
  408438:	mov    QWORD PTR [rbp-0x8],0x0
  408440:	jmp    40845a <flatcc_builder_extend_string@@Base+0x8a>
  408445:	mov    rdi,QWORD PTR [rbp-0x10]
  408449:	mov    rax,QWORD PTR [rbp-0x18]
  40844d:	mov    ecx,eax
  40844f:	mov    esi,ecx
  408451:	call   407d70 <flatcc_builder_start_struct@@Base+0x100>
  408456:	mov    QWORD PTR [rbp-0x8],rax
  40845a:	mov    rax,QWORD PTR [rbp-0x8]
  40845e:	add    rsp,0x20
  408462:	pop    rbp
  408463:	ret    
  408464:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40846e:	xchg   ax,ax

0000000000408470 <flatcc_builder_append_string@@Base>:
  408470:	push   rbp
  408471:	mov    rbp,rsp
  408474:	sub    rsp,0x20
  408478:	mov    QWORD PTR [rbp-0x10],rdi
  40847c:	mov    QWORD PTR [rbp-0x18],rsi
  408480:	mov    QWORD PTR [rbp-0x20],rdx
  408484:	mov    rdx,QWORD PTR [rbp-0x10]
  408488:	mov    rdx,QWORD PTR [rdx+0x30]
  40848c:	movzx  eax,WORD PTR [rdx+0xe]
  408490:	cmp    eax,0x6
  408493:	jne    40849e <flatcc_builder_append_string@@Base+0x2e>
  408499:	jmp    4084bd <flatcc_builder_append_string@@Base+0x4d>
  40849e:	lea    rdi,[rip+0x5c0c]        # 40e0b1 <flatcc_builder_padding_base@@Base+0x751>
  4084a5:	lea    rsi,[rip+0x56c6]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  4084ac:	mov    edx,0x3c6
  4084b1:	lea    rcx,[rip+0x5c64]        # 40e11c <flatcc_builder_padding_base@@Base+0x7bc>
  4084b8:	call   403070 <__assert_fail@plt>
  4084bd:	mov    rdi,QWORD PTR [rbp-0x10]
  4084c1:	mov    rax,QWORD PTR [rbp-0x20]
  4084c5:	mov    ecx,eax
  4084c7:	mov    esi,ecx
  4084c9:	mov    edx,0xffffffff
  4084ce:	call   407f30 <flatcc_builder_extend_vector@@Base+0x70>
  4084d3:	cmp    eax,0x0
  4084d6:	je     4084e9 <flatcc_builder_append_string@@Base+0x79>
  4084dc:	mov    QWORD PTR [rbp-0x8],0x0
  4084e4:	jmp    408502 <flatcc_builder_append_string@@Base+0x92>
  4084e9:	mov    rdi,QWORD PTR [rbp-0x10]
  4084ed:	mov    rsi,QWORD PTR [rbp-0x18]
  4084f1:	mov    rax,QWORD PTR [rbp-0x20]
  4084f5:	mov    ecx,eax
  4084f7:	mov    edx,ecx
  4084f9:	call   4080d0 <flatcc_builder_vector_push@@Base+0xf0>
  4084fe:	mov    QWORD PTR [rbp-0x8],rax
  408502:	mov    rax,QWORD PTR [rbp-0x8]
  408506:	add    rsp,0x20
  40850a:	pop    rbp
  40850b:	ret    
  40850c:	nop    DWORD PTR [rax+0x0]

0000000000408510 <flatcc_builder_append_string_str@@Base>:
  408510:	push   rbp
  408511:	mov    rbp,rsp
  408514:	sub    rsp,0x20
  408518:	mov    QWORD PTR [rbp-0x8],rdi
  40851c:	mov    QWORD PTR [rbp-0x10],rsi
  408520:	mov    rdi,QWORD PTR [rbp-0x8]
  408524:	mov    rsi,QWORD PTR [rbp-0x10]
  408528:	mov    rax,QWORD PTR [rbp-0x10]
  40852c:	mov    QWORD PTR [rbp-0x18],rdi
  408530:	mov    rdi,rax
  408533:	mov    QWORD PTR [rbp-0x20],rsi
  408537:	call   403050 <strlen@plt>
  40853c:	mov    rdi,QWORD PTR [rbp-0x18]
  408540:	mov    rsi,QWORD PTR [rbp-0x20]
  408544:	mov    rdx,rax
  408547:	call   408470 <flatcc_builder_append_string@@Base>
  40854c:	add    rsp,0x20
  408550:	pop    rbp
  408551:	ret    
  408552:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40855c:	nop    DWORD PTR [rax+0x0]

0000000000408560 <flatcc_builder_append_string_strn@@Base>:
  408560:	push   rbp
  408561:	mov    rbp,rsp
  408564:	sub    rsp,0x30
  408568:	mov    QWORD PTR [rbp-0x8],rdi
  40856c:	mov    QWORD PTR [rbp-0x10],rsi
  408570:	mov    QWORD PTR [rbp-0x18],rdx
  408574:	mov    rdi,QWORD PTR [rbp-0x8]
  408578:	mov    rsi,QWORD PTR [rbp-0x10]
  40857c:	mov    rdx,QWORD PTR [rbp-0x10]
  408580:	mov    rax,QWORD PTR [rbp-0x18]
  408584:	mov    QWORD PTR [rbp-0x20],rdi
  408588:	mov    rdi,rdx
  40858b:	mov    QWORD PTR [rbp-0x28],rsi
  40858f:	mov    rsi,rax
  408592:	call   4085b0 <flatcc_builder_append_string_strn@@Base+0x50>
  408597:	mov    rdi,QWORD PTR [rbp-0x20]
  40859b:	mov    rsi,QWORD PTR [rbp-0x28]
  40859f:	mov    rdx,rax
  4085a2:	call   408470 <flatcc_builder_append_string@@Base>
  4085a7:	add    rsp,0x30
  4085ab:	pop    rbp
  4085ac:	ret    
  4085ad:	nop    DWORD PTR [rax]
  4085b0:	push   rbp
  4085b1:	mov    rbp,rsp
  4085b4:	sub    rsp,0x20
  4085b8:	mov    QWORD PTR [rbp-0x8],rdi
  4085bc:	mov    QWORD PTR [rbp-0x10],rsi
  4085c0:	mov    rdi,QWORD PTR [rbp-0x8]
  4085c4:	mov    rdx,QWORD PTR [rbp-0x10]
  4085c8:	xor    esi,esi
  4085ca:	call   403090 <memchr@plt>
  4085cf:	mov    QWORD PTR [rbp-0x18],rax
  4085d3:	cmp    QWORD PTR [rbp-0x18],0x0
  4085d8:	je     4085f2 <flatcc_builder_append_string_strn@@Base+0x92>
  4085de:	mov    rax,QWORD PTR [rbp-0x18]
  4085e2:	mov    rcx,QWORD PTR [rbp-0x8]
  4085e6:	sub    rax,rcx
  4085e9:	mov    QWORD PTR [rbp-0x20],rax
  4085ed:	jmp    4085fa <flatcc_builder_append_string_strn@@Base+0x9a>
  4085f2:	mov    rax,QWORD PTR [rbp-0x10]
  4085f6:	mov    QWORD PTR [rbp-0x20],rax
  4085fa:	mov    rax,QWORD PTR [rbp-0x20]
  4085fe:	add    rsp,0x20
  408602:	pop    rbp
  408603:	ret    
  408604:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40860e:	xchg   ax,ax

0000000000408610 <flatcc_builder_truncate_vector@@Base>:
  408610:	push   rbp
  408611:	mov    rbp,rsp
  408614:	sub    rsp,0x20
  408618:	mov    QWORD PTR [rbp-0x10],rdi
  40861c:	mov    QWORD PTR [rbp-0x18],rsi
  408620:	mov    rsi,QWORD PTR [rbp-0x10]
  408624:	mov    rsi,QWORD PTR [rsi+0x30]
  408628:	movzx  eax,WORD PTR [rsi+0xe]
  40862c:	cmp    eax,0x4
  40862f:	jne    40863a <flatcc_builder_truncate_vector@@Base+0x2a>
  408635:	jmp    408659 <flatcc_builder_truncate_vector@@Base+0x49>
  40863a:	lea    rdi,[rip+0x586e]        # 40deaf <flatcc_builder_padding_base@@Base+0x54f>
  408641:	lea    rsi,[rip+0x552a]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  408648:	mov    edx,0x3d9
  40864d:	lea    rcx,[rip+0x5b15]        # 40e169 <flatcc_builder_padding_base@@Base+0x809>
  408654:	call   403070 <__assert_fail@plt>
  408659:	mov    rax,QWORD PTR [rbp-0x10]
  40865d:	mov    rax,QWORD PTR [rax+0x30]
  408661:	mov    ecx,DWORD PTR [rax+0x14]
  408664:	mov    eax,ecx
  408666:	cmp    rax,QWORD PTR [rbp-0x18]
  40866a:	jae    4086b7 <flatcc_builder_truncate_vector@@Base+0xa7>
  408670:	mov    rax,QWORD PTR [rbp-0x10]
  408674:	mov    rax,QWORD PTR [rax+0x30]
  408678:	mov    ecx,DWORD PTR [rax+0x14]
  40867b:	mov    eax,ecx
  40867d:	cmp    rax,QWORD PTR [rbp-0x18]
  408681:	jb     40868c <flatcc_builder_truncate_vector@@Base+0x7c>
  408687:	jmp    4086ab <flatcc_builder_truncate_vector@@Base+0x9b>
  40868c:	lea    rdi,[rip+0x5b15]        # 40e1a8 <flatcc_builder_padding_base@@Base+0x848>
  408693:	lea    rsi,[rip+0x54d8]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  40869a:	mov    edx,0x3da
  40869f:	lea    rcx,[rip+0x5ac3]        # 40e169 <flatcc_builder_padding_base@@Base+0x809>
  4086a6:	call   403070 <__assert_fail@plt>
  4086ab:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4086b2:	jmp    4086f3 <flatcc_builder_truncate_vector@@Base+0xe3>
  4086b7:	mov    rax,QWORD PTR [rbp-0x18]
  4086bb:	mov    ecx,eax
  4086bd:	mov    rax,QWORD PTR [rbp-0x10]
  4086c1:	mov    rax,QWORD PTR [rax+0x30]
  4086c5:	mov    edx,DWORD PTR [rax+0x14]
  4086c8:	sub    edx,ecx
  4086ca:	mov    DWORD PTR [rax+0x14],edx
  4086cd:	mov    rdi,QWORD PTR [rbp-0x10]
  4086d1:	mov    rax,QWORD PTR [rbp-0x10]
  4086d5:	mov    rax,QWORD PTR [rax+0x30]
  4086d9:	mov    ecx,DWORD PTR [rax+0x10]
  4086dc:	mov    rax,QWORD PTR [rbp-0x18]
  4086e0:	mov    edx,eax
  4086e2:	imul   ecx,edx
  4086e5:	mov    esi,ecx
  4086e7:	call   408700 <flatcc_builder_truncate_vector@@Base+0xf0>
  4086ec:	mov    DWORD PTR [rbp-0x4],0x0
  4086f3:	mov    eax,DWORD PTR [rbp-0x4]
  4086f6:	add    rsp,0x20
  4086fa:	pop    rbp
  4086fb:	ret    
  4086fc:	nop    DWORD PTR [rax+0x0]
  408700:	push   rbp
  408701:	mov    rbp,rsp
  408704:	sub    rsp,0x10
  408708:	xor    eax,eax
  40870a:	mov    QWORD PTR [rbp-0x8],rdi
  40870e:	mov    DWORD PTR [rbp-0xc],esi
  408711:	mov    esi,DWORD PTR [rbp-0xc]
  408714:	mov    rdi,QWORD PTR [rbp-0x8]
  408718:	mov    ecx,DWORD PTR [rdi+0x20]
  40871b:	sub    ecx,esi
  40871d:	mov    DWORD PTR [rdi+0x20],ecx
  408720:	mov    rdi,QWORD PTR [rbp-0x8]
  408724:	mov    rdi,QWORD PTR [rdi+0x18]
  408728:	mov    rdx,QWORD PTR [rbp-0x8]
  40872c:	mov    ecx,DWORD PTR [rdx+0x20]
  40872f:	mov    edx,ecx
  408731:	add    rdi,rdx
  408734:	mov    ecx,DWORD PTR [rbp-0xc]
  408737:	mov    edx,ecx
  408739:	mov    esi,eax
  40873b:	call   403080 <memset@plt>
  408740:	add    rsp,0x10
  408744:	pop    rbp
  408745:	ret    
  408746:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000408750 <flatcc_builder_truncate_offset_vector@@Base>:
  408750:	push   rbp
  408751:	mov    rbp,rsp
  408754:	sub    rsp,0x20
  408758:	mov    QWORD PTR [rbp-0x10],rdi
  40875c:	mov    QWORD PTR [rbp-0x18],rsi
  408760:	mov    rsi,QWORD PTR [rbp-0x10]
  408764:	mov    rsi,QWORD PTR [rsi+0x30]
  408768:	movzx  eax,WORD PTR [rsi+0xe]
  40876c:	cmp    eax,0x5
  40876f:	jne    40877a <flatcc_builder_truncate_offset_vector@@Base+0x2a>
  408775:	jmp    408799 <flatcc_builder_truncate_offset_vector@@Base+0x49>
  40877a:	lea    rdi,[rip+0x5827]        # 40dfa8 <flatcc_builder_padding_base@@Base+0x648>
  408781:	lea    rsi,[rip+0x53ea]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  408788:	mov    edx,0x3e2
  40878d:	lea    rcx,[rip+0x5a38]        # 40e1cc <flatcc_builder_padding_base@@Base+0x86c>
  408794:	call   403070 <__assert_fail@plt>
  408799:	mov    rax,QWORD PTR [rbp-0x10]
  40879d:	mov    rax,QWORD PTR [rax+0x30]
  4087a1:	mov    ecx,DWORD PTR [rax+0x14]
  4087a4:	mov    rax,QWORD PTR [rbp-0x18]
  4087a8:	mov    edx,eax
  4087aa:	cmp    ecx,edx
  4087ac:	jae    4087fb <flatcc_builder_truncate_offset_vector@@Base+0xab>
  4087b2:	mov    rax,QWORD PTR [rbp-0x10]
  4087b6:	mov    rax,QWORD PTR [rax+0x30]
  4087ba:	mov    ecx,DWORD PTR [rax+0x14]
  4087bd:	mov    rax,QWORD PTR [rbp-0x18]
  4087c1:	mov    edx,eax
  4087c3:	cmp    ecx,edx
  4087c5:	jb     4087d0 <flatcc_builder_truncate_offset_vector@@Base+0x80>
  4087cb:	jmp    4087ef <flatcc_builder_truncate_offset_vector@@Base+0x9f>
  4087d0:	lea    rdi,[rip+0x5a3b]        # 40e212 <flatcc_builder_padding_base@@Base+0x8b2>
  4087d7:	lea    rsi,[rip+0x5394]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  4087de:	mov    edx,0x3e3
  4087e3:	lea    rcx,[rip+0x59e2]        # 40e1cc <flatcc_builder_padding_base@@Base+0x86c>
  4087ea:	call   403070 <__assert_fail@plt>
  4087ef:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4087f6:	jmp    408837 <flatcc_builder_truncate_offset_vector@@Base+0xe7>
  4087fb:	mov    rax,QWORD PTR [rbp-0x18]
  4087ff:	mov    ecx,eax
  408801:	mov    rax,QWORD PTR [rbp-0x10]
  408805:	mov    rax,QWORD PTR [rax+0x30]
  408809:	mov    edx,DWORD PTR [rax+0x14]
  40880c:	sub    edx,ecx
  40880e:	mov    DWORD PTR [rax+0x14],edx
  408811:	mov    rdi,QWORD PTR [rbp-0x10]
  408815:	mov    rax,QWORD PTR [rbp-0x10]
  408819:	mov    rax,QWORD PTR [rax+0x30]
  40881d:	mov    ecx,DWORD PTR [rax+0x10]
  408820:	mov    rax,QWORD PTR [rbp-0x18]
  408824:	mov    edx,eax
  408826:	imul   ecx,edx
  408829:	mov    esi,ecx
  40882b:	call   408700 <flatcc_builder_truncate_vector@@Base+0xf0>
  408830:	mov    DWORD PTR [rbp-0x4],0x0
  408837:	mov    eax,DWORD PTR [rbp-0x4]
  40883a:	add    rsp,0x20
  40883e:	pop    rbp
  40883f:	ret    

0000000000408840 <flatcc_builder_truncate_string@@Base>:
  408840:	push   rbp
  408841:	mov    rbp,rsp
  408844:	sub    rsp,0x20
  408848:	mov    QWORD PTR [rbp-0x10],rdi
  40884c:	mov    QWORD PTR [rbp-0x18],rsi
  408850:	mov    rsi,QWORD PTR [rbp-0x10]
  408854:	mov    rsi,QWORD PTR [rsi+0x30]
  408858:	movzx  eax,WORD PTR [rsi+0xe]
  40885c:	cmp    eax,0x6
  40885f:	jne    40886a <flatcc_builder_truncate_string@@Base+0x2a>
  408865:	jmp    408889 <flatcc_builder_truncate_string@@Base+0x49>
  40886a:	lea    rdi,[rip+0x5840]        # 40e0b1 <flatcc_builder_padding_base@@Base+0x751>
  408871:	lea    rsi,[rip+0x52fa]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  408878:	mov    edx,0x3eb
  40887d:	lea    rcx,[rip+0x59c9]        # 40e24d <flatcc_builder_padding_base@@Base+0x8ed>
  408884:	call   403070 <__assert_fail@plt>
  408889:	mov    rax,QWORD PTR [rbp-0x10]
  40888d:	mov    rax,QWORD PTR [rax+0x30]
  408891:	mov    ecx,DWORD PTR [rax+0x14]
  408894:	mov    eax,ecx
  408896:	cmp    rax,QWORD PTR [rbp-0x18]
  40889a:	jae    4088e7 <flatcc_builder_truncate_string@@Base+0xa7>
  4088a0:	mov    rax,QWORD PTR [rbp-0x10]
  4088a4:	mov    rax,QWORD PTR [rax+0x30]
  4088a8:	mov    ecx,DWORD PTR [rax+0x14]
  4088ab:	mov    eax,ecx
  4088ad:	cmp    rax,QWORD PTR [rbp-0x18]
  4088b1:	jb     4088bc <flatcc_builder_truncate_string@@Base+0x7c>
  4088b7:	jmp    4088db <flatcc_builder_truncate_string@@Base+0x9b>
  4088bc:	lea    rdi,[rip+0x59c9]        # 40e28c <flatcc_builder_padding_base@@Base+0x92c>
  4088c3:	lea    rsi,[rip+0x52a8]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  4088ca:	mov    edx,0x3ec
  4088cf:	lea    rcx,[rip+0x5977]        # 40e24d <flatcc_builder_padding_base@@Base+0x8ed>
  4088d6:	call   403070 <__assert_fail@plt>
  4088db:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4088e2:	jmp    408915 <flatcc_builder_truncate_string@@Base+0xd5>
  4088e7:	mov    rax,QWORD PTR [rbp-0x18]
  4088eb:	mov    ecx,eax
  4088ed:	mov    rax,QWORD PTR [rbp-0x10]
  4088f1:	mov    rax,QWORD PTR [rax+0x30]
  4088f5:	mov    edx,DWORD PTR [rax+0x14]
  4088f8:	sub    edx,ecx
  4088fa:	mov    DWORD PTR [rax+0x14],edx
  4088fd:	mov    rdi,QWORD PTR [rbp-0x10]
  408901:	mov    rax,QWORD PTR [rbp-0x18]
  408905:	mov    ecx,eax
  408907:	mov    esi,ecx
  408909:	call   408700 <flatcc_builder_truncate_vector@@Base+0xf0>
  40890e:	mov    DWORD PTR [rbp-0x4],0x0
  408915:	mov    eax,DWORD PTR [rbp-0x4]
  408918:	add    rsp,0x20
  40891c:	pop    rbp
  40891d:	ret    
  40891e:	xchg   ax,ax

0000000000408920 <flatcc_builder_start_vector@@Base>:
  408920:	push   rbp
  408921:	mov    rbp,rsp
  408924:	sub    rsp,0x30
  408928:	mov    ax,dx
  40892b:	mov    QWORD PTR [rbp-0x10],rdi
  40892f:	mov    QWORD PTR [rbp-0x18],rsi
  408933:	mov    WORD PTR [rbp-0x1a],ax
  408937:	mov    QWORD PTR [rbp-0x28],rcx
  40893b:	lea    rdi,[rbp-0x1a]
  40893f:	mov    esi,0x4
  408944:	call   4089d0 <flatcc_builder_start_vector@@Base+0xb0>
  408949:	mov    rdi,QWORD PTR [rbp-0x10]
  40894d:	movzx  esi,WORD PTR [rbp-0x1a]
  408951:	call   407880 <flatcc_builder_start_buffer@@Base+0x170>
  408956:	cmp    eax,0x0
  408959:	je     40896b <flatcc_builder_start_vector@@Base+0x4b>
  40895f:	mov    DWORD PTR [rbp-0x4],0xffffffff
  408966:	jmp    4089bf <flatcc_builder_start_vector@@Base+0x9f>
  40896b:	mov    rax,QWORD PTR [rbp-0x18]
  40896f:	mov    ecx,eax
  408971:	mov    rax,QWORD PTR [rbp-0x10]
  408975:	mov    rax,QWORD PTR [rax+0x30]
  408979:	mov    DWORD PTR [rax+0x10],ecx
  40897c:	mov    rax,QWORD PTR [rbp-0x10]
  408980:	mov    rax,QWORD PTR [rax+0x30]
  408984:	mov    DWORD PTR [rax+0x14],0x0
  40898b:	mov    rax,QWORD PTR [rbp-0x28]
  40898f:	mov    ecx,eax
  408991:	mov    rax,QWORD PTR [rbp-0x10]
  408995:	mov    rax,QWORD PTR [rax+0x30]
  408999:	mov    DWORD PTR [rax+0x18],ecx
  40899c:	mov    rax,QWORD PTR [rbp-0x10]
  4089a0:	mov    rax,QWORD PTR [rax+0x30]
  4089a4:	mov    WORD PTR [rax+0xe],0x4
  4089aa:	mov    rdi,QWORD PTR [rbp-0x10]
  4089ae:	mov    esi,0xfffffffc
  4089b3:	call   407cf0 <flatcc_builder_start_struct@@Base+0x80>
  4089b8:	mov    DWORD PTR [rbp-0x4],0x0
  4089bf:	mov    eax,DWORD PTR [rbp-0x4]
  4089c2:	add    rsp,0x30
  4089c6:	pop    rbp
  4089c7:	ret    
  4089c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4089d0:	push   rbp
  4089d1:	mov    rbp,rsp
  4089d4:	mov    ax,si
  4089d7:	mov    QWORD PTR [rbp-0x8],rdi
  4089db:	mov    WORD PTR [rbp-0xa],ax
  4089df:	mov    rdi,QWORD PTR [rbp-0x8]
  4089e3:	movzx  esi,WORD PTR [rdi]
  4089e6:	movzx  ecx,WORD PTR [rbp-0xa]
  4089ea:	cmp    esi,ecx
  4089ec:	jge    4089fd <flatcc_builder_start_vector@@Base+0xdd>
  4089f2:	mov    ax,WORD PTR [rbp-0xa]
  4089f6:	mov    rcx,QWORD PTR [rbp-0x8]
  4089fa:	mov    WORD PTR [rcx],ax
  4089fd:	pop    rbp
  4089fe:	ret    
  4089ff:	nop

0000000000408a00 <flatcc_builder_start_offset_vector@@Base>:
  408a00:	push   rbp
  408a01:	mov    rbp,rsp
  408a04:	sub    rsp,0x10
  408a08:	mov    QWORD PTR [rbp-0x10],rdi
  408a0c:	mov    rdi,QWORD PTR [rbp-0x10]
  408a10:	mov    esi,0x4
  408a15:	call   407880 <flatcc_builder_start_buffer@@Base+0x170>
  408a1a:	cmp    eax,0x0
  408a1d:	je     408a2f <flatcc_builder_start_offset_vector@@Base+0x2f>
  408a23:	mov    DWORD PTR [rbp-0x4],0xffffffff
  408a2a:	jmp    408a70 <flatcc_builder_start_offset_vector@@Base+0x70>
  408a2f:	mov    rax,QWORD PTR [rbp-0x10]
  408a33:	mov    rax,QWORD PTR [rax+0x30]
  408a37:	mov    DWORD PTR [rax+0x10],0x4
  408a3e:	mov    rax,QWORD PTR [rbp-0x10]
  408a42:	mov    rax,QWORD PTR [rax+0x30]
  408a46:	mov    DWORD PTR [rax+0x14],0x0
  408a4d:	mov    rax,QWORD PTR [rbp-0x10]
  408a51:	mov    rax,QWORD PTR [rax+0x30]
  408a55:	mov    WORD PTR [rax+0xe],0x5
  408a5b:	mov    rdi,QWORD PTR [rbp-0x10]
  408a5f:	mov    esi,0xfffffffc
  408a64:	call   407cf0 <flatcc_builder_start_struct@@Base+0x80>
  408a69:	mov    DWORD PTR [rbp-0x4],0x0
  408a70:	mov    eax,DWORD PTR [rbp-0x4]
  408a73:	add    rsp,0x10
  408a77:	pop    rbp
  408a78:	ret    
  408a79:	nop    DWORD PTR [rax+0x0]

0000000000408a80 <flatcc_builder_create_offset_vector@@Base>:
  408a80:	push   rbp
  408a81:	mov    rbp,rsp
  408a84:	sub    rsp,0x30
  408a88:	mov    QWORD PTR [rbp-0x10],rdi
  408a8c:	mov    QWORD PTR [rbp-0x18],rsi
  408a90:	mov    QWORD PTR [rbp-0x20],rdx
  408a94:	mov    rdi,QWORD PTR [rbp-0x10]
  408a98:	call   408a00 <flatcc_builder_start_offset_vector@@Base>
  408a9d:	cmp    eax,0x0
  408aa0:	je     408ab2 <flatcc_builder_create_offset_vector@@Base+0x32>
  408aa6:	mov    DWORD PTR [rbp-0x4],0x0
  408aad:	jmp    408b00 <flatcc_builder_create_offset_vector@@Base+0x80>
  408ab2:	mov    rdi,QWORD PTR [rbp-0x10]
  408ab6:	mov    rsi,QWORD PTR [rbp-0x20]
  408aba:	call   4081e0 <flatcc_builder_extend_offset_vector@@Base>
  408abf:	mov    QWORD PTR [rbp-0x28],rax
  408ac3:	cmp    rax,0x0
  408ac7:	jne    408ad9 <flatcc_builder_create_offset_vector@@Base+0x59>
  408acd:	mov    DWORD PTR [rbp-0x4],0x0
  408ad4:	jmp    408b00 <flatcc_builder_create_offset_vector@@Base+0x80>
  408ad9:	mov    rax,QWORD PTR [rbp-0x28]
  408add:	mov    rcx,QWORD PTR [rbp-0x18]
  408ae1:	mov    rdx,QWORD PTR [rbp-0x20]
  408ae5:	shl    rdx,0x2
  408ae9:	mov    rdi,rax
  408aec:	mov    rsi,rcx
  408aef:	call   4030c0 <memcpy@plt>
  408af4:	mov    rdi,QWORD PTR [rbp-0x10]
  408af8:	call   408b10 <flatcc_builder_end_offset_vector@@Base>
  408afd:	mov    DWORD PTR [rbp-0x4],eax
  408b00:	mov    eax,DWORD PTR [rbp-0x4]
  408b03:	add    rsp,0x30
  408b07:	pop    rbp
  408b08:	ret    
  408b09:	nop    DWORD PTR [rax+0x0]

0000000000408b10 <flatcc_builder_end_offset_vector@@Base>:
  408b10:	push   rbp
  408b11:	mov    rbp,rsp
  408b14:	sub    rsp,0x20
  408b18:	mov    QWORD PTR [rbp-0x10],rdi
  408b1c:	mov    rdi,QWORD PTR [rbp-0x10]
  408b20:	mov    rdi,QWORD PTR [rdi+0x30]
  408b24:	movzx  eax,WORD PTR [rdi+0xe]
  408b28:	cmp    eax,0x5
  408b2b:	jne    408b36 <flatcc_builder_end_offset_vector@@Base+0x26>
  408b31:	jmp    408b55 <flatcc_builder_end_offset_vector@@Base+0x45>
  408b36:	lea    rdi,[rip+0x546b]        # 40dfa8 <flatcc_builder_padding_base@@Base+0x648>
  408b3d:	lea    rsi,[rip+0x502e]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  408b44:	mov    edx,0x5c8
  408b49:	lea    rcx,[rip+0x5a87]        # 40e5d7 <flatcc_builder_padding_base@@Base+0xc77>
  408b50:	call   403070 <__assert_fail@plt>
  408b55:	mov    rdi,QWORD PTR [rbp-0x10]
  408b59:	mov    rax,QWORD PTR [rbp-0x10]
  408b5d:	mov    rax,QWORD PTR [rax+0x18]
  408b61:	mov    rcx,QWORD PTR [rbp-0x10]
  408b65:	mov    rcx,QWORD PTR [rcx+0x30]
  408b69:	mov    edx,DWORD PTR [rcx+0x14]
  408b6c:	mov    rsi,rax
  408b6f:	call   409f60 <flatcc_builder_create_offset_vector_direct@@Base>
  408b74:	xor    r8d,r8d
  408b77:	mov    DWORD PTR [rbp-0x14],eax
  408b7a:	cmp    r8d,eax
  408b7d:	jne    408b8f <flatcc_builder_end_offset_vector@@Base+0x7f>
  408b83:	mov    DWORD PTR [rbp-0x4],0x0
  408b8a:	jmp    408b9e <flatcc_builder_end_offset_vector@@Base+0x8e>
  408b8f:	mov    rdi,QWORD PTR [rbp-0x10]
  408b93:	call   407bb0 <flatcc_builder_end_buffer@@Base+0x160>
  408b98:	mov    eax,DWORD PTR [rbp-0x14]
  408b9b:	mov    DWORD PTR [rbp-0x4],eax
  408b9e:	mov    eax,DWORD PTR [rbp-0x4]
  408ba1:	add    rsp,0x20
  408ba5:	pop    rbp
  408ba6:	ret    
  408ba7:	nop    WORD PTR [rax+rax*1+0x0]

0000000000408bb0 <flatcc_builder_start_string@@Base>:
  408bb0:	push   rbp
  408bb1:	mov    rbp,rsp
  408bb4:	sub    rsp,0x10
  408bb8:	mov    QWORD PTR [rbp-0x10],rdi
  408bbc:	mov    rdi,QWORD PTR [rbp-0x10]
  408bc0:	mov    esi,0x1
  408bc5:	call   407880 <flatcc_builder_start_buffer@@Base+0x170>
  408bca:	cmp    eax,0x0
  408bcd:	je     408bdf <flatcc_builder_start_string@@Base+0x2f>
  408bd3:	mov    DWORD PTR [rbp-0x4],0xffffffff
  408bda:	jmp    408c20 <flatcc_builder_start_string@@Base+0x70>
  408bdf:	mov    rax,QWORD PTR [rbp-0x10]
  408be3:	mov    rax,QWORD PTR [rax+0x30]
  408be7:	mov    DWORD PTR [rax+0x10],0x1
  408bee:	mov    rax,QWORD PTR [rbp-0x10]
  408bf2:	mov    rax,QWORD PTR [rax+0x30]
  408bf6:	mov    DWORD PTR [rax+0x14],0x0
  408bfd:	mov    rax,QWORD PTR [rbp-0x10]
  408c01:	mov    rax,QWORD PTR [rax+0x30]
  408c05:	mov    WORD PTR [rax+0xe],0x6
  408c0b:	mov    rdi,QWORD PTR [rbp-0x10]
  408c0f:	mov    esi,0xfffffffc
  408c14:	call   407cf0 <flatcc_builder_start_struct@@Base+0x80>
  408c19:	mov    DWORD PTR [rbp-0x4],0x0
  408c20:	mov    eax,DWORD PTR [rbp-0x4]
  408c23:	add    rsp,0x10
  408c27:	pop    rbp
  408c28:	ret    
  408c29:	nop    DWORD PTR [rax+0x0]

0000000000408c30 <flatcc_builder_reserve_table@@Base>:
  408c30:	push   rbp
  408c31:	mov    rbp,rsp
  408c34:	sub    rsp,0x10
  408c38:	mov    QWORD PTR [rbp-0x8],rdi
  408c3c:	mov    DWORD PTR [rbp-0xc],esi
  408c3f:	cmp    DWORD PTR [rbp-0xc],0x0
  408c43:	jl     408c4e <flatcc_builder_reserve_table@@Base+0x1e>
  408c49:	jmp    408c6d <flatcc_builder_reserve_table@@Base+0x3d>
  408c4e:	lea    rdi,[rip+0x569a]        # 40e2ef <flatcc_builder_padding_base@@Base+0x98f>
  408c55:	lea    rsi,[rip+0x4f16]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  408c5c:	mov    edx,0x429
  408c61:	lea    rcx,[rip+0x5646]        # 40e2ae <flatcc_builder_padding_base@@Base+0x94e>
  408c68:	call   403070 <__assert_fail@plt>
  408c6d:	mov    rdi,QWORD PTR [rbp-0x8]
  408c71:	mov    esi,DWORD PTR [rbp-0xc]
  408c74:	call   408c80 <flatcc_builder_reserve_table@@Base+0x50>
  408c79:	add    rsp,0x10
  408c7d:	pop    rbp
  408c7e:	ret    
  408c7f:	nop
  408c80:	push   rbp
  408c81:	mov    rbp,rsp
  408c84:	sub    rsp,0x20
  408c88:	xor    eax,eax
  408c8a:	mov    QWORD PTR [rbp-0x10],rdi
  408c8e:	mov    DWORD PTR [rbp-0x14],esi
  408c91:	mov    rdi,QWORD PTR [rbp-0x10]
  408c95:	mov    rdi,QWORD PTR [rdi+0x30]
  408c99:	mov    esi,DWORD PTR [rdi+0x10]
  408c9c:	mov    edi,esi
  408c9e:	mov    rcx,QWORD PTR [rbp-0x10]
  408ca2:	mov    rcx,QWORD PTR [rcx+0x30]
  408ca6:	movzx  esi,WORD PTR [rcx+0x1c]
  408caa:	mov    ecx,esi
  408cac:	shl    rcx,0x1
  408cb0:	add    rdi,rcx
  408cb3:	mov    esi,edi
  408cb5:	mov    DWORD PTR [rbp-0x18],esi
  408cb8:	mov    esi,DWORD PTR [rbp-0x14]
  408cbb:	add    esi,0x2
  408cbe:	movsxd rcx,esi
  408cc1:	shl    rcx,0x1
  408cc5:	mov    esi,ecx
  408cc7:	mov    DWORD PTR [rbp-0x1c],esi
  408cca:	mov    rdi,QWORD PTR [rbp-0x10]
  408cce:	mov    esi,DWORD PTR [rbp-0x18]
  408cd1:	mov    edx,esi
  408cd3:	mov    esi,DWORD PTR [rbp-0x1c]
  408cd6:	mov    ecx,esi
  408cd8:	mov    esi,eax
  408cda:	mov    r8d,0x1
  408ce0:	call   406900 <flatcc_builder_enter_user_frame_ptr@@Base+0xe0>
  408ce5:	mov    rcx,QWORD PTR [rbp-0x10]
  408ce9:	mov    QWORD PTR [rcx+0x8],rax
  408ced:	cmp    rax,0x0
  408cf1:	jne    408d03 <flatcc_builder_reserve_table@@Base+0xd3>
  408cf7:	mov    DWORD PTR [rbp-0x4],0xffffffff
  408cfe:	jmp    408d6f <flatcc_builder_reserve_table@@Base+0x13f>
  408d03:	xor    r8d,r8d
  408d06:	mov    rax,QWORD PTR [rbp-0x10]
  408d0a:	mov    rcx,QWORD PTR [rax+0x8]
  408d0e:	add    rcx,0x4
  408d12:	mov    QWORD PTR [rax+0x8],rcx
  408d16:	mov    rax,QWORD PTR [rbp-0x10]
  408d1a:	mov    rax,QWORD PTR [rax+0x30]
  408d1e:	mov    edx,DWORD PTR [rax+0x14]
  408d21:	mov    DWORD PTR [rbp-0x18],edx
  408d24:	movsxd rax,DWORD PTR [rbp-0x14]
  408d28:	shl    rax,0x1
  408d2c:	add    rax,0x1
  408d30:	mov    edx,eax
  408d32:	mov    DWORD PTR [rbp-0x1c],edx
  408d35:	mov    rdi,QWORD PTR [rbp-0x10]
  408d39:	mov    edx,DWORD PTR [rbp-0x18]
  408d3c:	mov    esi,DWORD PTR [rbp-0x1c]
  408d3f:	mov    ecx,esi
  408d41:	mov    esi,0x3
  408d46:	call   406900 <flatcc_builder_enter_user_frame_ptr@@Base+0xe0>
  408d4b:	mov    rcx,QWORD PTR [rbp-0x10]
  408d4f:	mov    QWORD PTR [rcx],rax
  408d52:	cmp    rax,0x0
  408d56:	jne    408d68 <flatcc_builder_reserve_table@@Base+0x138>
  408d5c:	mov    DWORD PTR [rbp-0x4],0xffffffff
  408d63:	jmp    408d6f <flatcc_builder_reserve_table@@Base+0x13f>
  408d68:	mov    DWORD PTR [rbp-0x4],0x0
  408d6f:	mov    eax,DWORD PTR [rbp-0x4]
  408d72:	add    rsp,0x20
  408d76:	pop    rbp
  408d77:	ret    
  408d78:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000408d80 <flatcc_builder_start_table@@Base>:
  408d80:	push   rbp
  408d81:	mov    rbp,rsp
  408d84:	sub    rsp,0x20
  408d88:	mov    QWORD PTR [rbp-0x10],rdi
  408d8c:	mov    DWORD PTR [rbp-0x14],esi
  408d8f:	mov    rdi,QWORD PTR [rbp-0x10]
  408d93:	mov    esi,0x4
  408d98:	call   407880 <flatcc_builder_start_buffer@@Base+0x170>
  408d9d:	cmp    eax,0x0
  408da0:	je     408db2 <flatcc_builder_start_table@@Base+0x32>
  408da6:	mov    DWORD PTR [rbp-0x4],0xffffffff
  408dad:	jmp    408e7e <flatcc_builder_start_table@@Base+0xfe>
  408db2:	mov    rax,QWORD PTR [rbp-0x10]
  408db6:	mov    rax,QWORD PTR [rax+0x8]
  408dba:	mov    rcx,QWORD PTR [rbp-0x10]
  408dbe:	mov    rcx,QWORD PTR [rcx+0x58]
  408dc2:	sub    rax,rcx
  408dc5:	mov    edx,eax
  408dc7:	mov    rax,QWORD PTR [rbp-0x10]
  408dcb:	mov    rax,QWORD PTR [rax+0x30]
  408dcf:	mov    DWORD PTR [rax+0x10],edx
  408dd2:	mov    rax,QWORD PTR [rbp-0x10]
  408dd6:	mov    rax,QWORD PTR [rax]
  408dd9:	mov    rcx,QWORD PTR [rbp-0x10]
  408ddd:	mov    rcx,QWORD PTR [rcx+0x88]
  408de4:	sub    rax,rcx
  408de7:	mov    edx,eax
  408de9:	mov    rax,QWORD PTR [rbp-0x10]
  408ded:	mov    rax,QWORD PTR [rax+0x30]
  408df1:	mov    DWORD PTR [rax+0x14],edx
  408df4:	mov    rax,QWORD PTR [rbp-0x10]
  408df8:	mov    edx,DWORD PTR [rax+0x14]
  408dfb:	mov    rax,QWORD PTR [rbp-0x10]
  408dff:	mov    rax,QWORD PTR [rax+0x30]
  408e03:	mov    DWORD PTR [rax+0x18],edx
  408e06:	mov    rax,QWORD PTR [rbp-0x10]
  408e0a:	mov    si,WORD PTR [rax+0x10]
  408e0e:	mov    rax,QWORD PTR [rbp-0x10]
  408e12:	mov    rax,QWORD PTR [rax+0x30]
  408e16:	mov    WORD PTR [rax+0x1c],si
  408e1a:	mov    rax,QWORD PTR [rbp-0x10]
  408e1e:	mov    DWORD PTR [rax+0x14],0x0
  408e25:	mov    rax,QWORD PTR [rbp-0x10]
  408e29:	mov    DWORD PTR [rax+0x14],0x2f693b52
  408e30:	mov    rax,QWORD PTR [rbp-0x10]
  408e34:	mov    WORD PTR [rax+0x10],0x0
  408e3a:	mov    rax,QWORD PTR [rbp-0x10]
  408e3e:	mov    rax,QWORD PTR [rax+0x30]
  408e42:	mov    WORD PTR [rax+0xe],0x3
  408e48:	mov    rdi,QWORD PTR [rbp-0x10]
  408e4c:	mov    esi,DWORD PTR [rbp-0x14]
  408e4f:	call   408c80 <flatcc_builder_reserve_table@@Base+0x50>
  408e54:	cmp    eax,0x0
  408e57:	je     408e69 <flatcc_builder_start_table@@Base+0xe9>
  408e5d:	mov    DWORD PTR [rbp-0x4],0xffffffff
  408e64:	jmp    408e7e <flatcc_builder_start_table@@Base+0xfe>
  408e69:	mov    rdi,QWORD PTR [rbp-0x10]
  408e6d:	mov    esi,0xfffc
  408e72:	call   407cf0 <flatcc_builder_start_struct@@Base+0x80>
  408e77:	mov    DWORD PTR [rbp-0x4],0x0
  408e7e:	mov    eax,DWORD PTR [rbp-0x4]
  408e81:	add    rsp,0x20
  408e85:	pop    rbp
  408e86:	ret    
  408e87:	nop    WORD PTR [rax+rax*1+0x0]

0000000000408e90 <flatcc_builder_create_vtable@@Base>:
  408e90:	push   rbp
  408e91:	mov    rbp,rsp
  408e94:	sub    rsp,0xc0
  408e9b:	mov    ax,dx
  408e9e:	mov    QWORD PTR [rbp-0x10],rdi
  408ea2:	mov    QWORD PTR [rbp-0x18],rsi
  408ea6:	mov    WORD PTR [rbp-0x1a],ax
  408eaa:	mov    QWORD PTR [rbp-0xb0],0x0
  408eb5:	mov    DWORD PTR [rbp-0xa8],0x0
  408ebf:	movzx  edx,WORD PTR [rbp-0x1a]
  408ec3:	cmp    edx,0x0
  408ec6:	jle    408f2e <flatcc_builder_create_vtable@@Base+0x9e>
  408ecc:	movzx  eax,WORD PTR [rbp-0x1a]
  408ed0:	mov    ecx,eax
  408ed2:	add    rcx,QWORD PTR [rbp-0xb0]
  408ed9:	mov    QWORD PTR [rbp-0xb0],rcx
  408ee0:	mov    rcx,QWORD PTR [rbp-0x18]
  408ee4:	lea    rdx,[rbp-0xb0]
  408eeb:	mov    rsi,rdx
  408eee:	add    rsi,0x10
  408ef2:	movsxd rdi,DWORD PTR [rbp-0xa8]
  408ef9:	shl    rdi,0x4
  408efd:	add    rsi,rdi
  408f00:	mov    QWORD PTR [rsi],rcx
  408f03:	movzx  eax,WORD PTR [rbp-0x1a]
  408f07:	mov    ecx,eax
  408f09:	add    rdx,0x10
  408f0d:	movsxd rsi,DWORD PTR [rbp-0xa8]
  408f14:	shl    rsi,0x4
  408f18:	add    rdx,rsi
  408f1b:	mov    QWORD PTR [rdx+0x8],rcx
  408f1f:	mov    eax,DWORD PTR [rbp-0xa8]
  408f25:	add    eax,0x1
  408f28:	mov    DWORD PTR [rbp-0xa8],eax
  408f2e:	mov    rax,QWORD PTR [rbp-0x10]
  408f32:	cmp    DWORD PTR [rax+0x100],0x0
  408f39:	jne    408f7e <flatcc_builder_create_vtable@@Base+0xee>
  408f3f:	mov    rax,QWORD PTR [rbp-0x10]
  408f43:	cmp    DWORD PTR [rax+0x124],0x0
  408f4a:	jne    408f7e <flatcc_builder_create_vtable@@Base+0xee>
  408f50:	mov    rdi,QWORD PTR [rbp-0x10]
  408f54:	lea    rsi,[rbp-0xb0]
  408f5b:	call   408fd0 <flatcc_builder_create_vtable@@Base+0x140>
  408f60:	xor    ecx,ecx
  408f62:	mov    DWORD PTR [rbp-0x20],eax
  408f65:	cmp    ecx,eax
  408f67:	jne    408f79 <flatcc_builder_create_vtable@@Base+0xe9>
  408f6d:	mov    DWORD PTR [rbp-0x4],0x0
  408f74:	jmp    408fb6 <flatcc_builder_create_vtable@@Base+0x126>
  408f79:	jmp    408fb0 <flatcc_builder_create_vtable@@Base+0x120>
  408f7e:	mov    rdi,QWORD PTR [rbp-0x10]
  408f82:	lea    rsi,[rbp-0xb0]
  408f89:	call   407030 <flatcc_builder_embed_buffer@@Base+0x430>
  408f8e:	xor    ecx,ecx
  408f90:	mov    DWORD PTR [rbp-0x20],eax
  408f93:	cmp    ecx,eax
  408f95:	jne    408fa7 <flatcc_builder_create_vtable@@Base+0x117>
  408f9b:	mov    DWORD PTR [rbp-0x4],0x0
  408fa2:	jmp    408fb6 <flatcc_builder_create_vtable@@Base+0x126>
  408fa7:	mov    eax,DWORD PTR [rbp-0x20]
  408faa:	add    eax,0x1
  408fad:	mov    DWORD PTR [rbp-0x20],eax
  408fb0:	mov    eax,DWORD PTR [rbp-0x20]
  408fb3:	mov    DWORD PTR [rbp-0x4],eax
  408fb6:	mov    eax,DWORD PTR [rbp-0x4]
  408fb9:	add    rsp,0xc0
  408fc0:	pop    rbp
  408fc1:	ret    
  408fc2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408fcc:	nop    DWORD PTR [rax+0x0]
  408fd0:	push   rbp
  408fd1:	mov    rbp,rsp
  408fd4:	sub    rsp,0x20
  408fd8:	mov    QWORD PTR [rbp-0x8],rdi
  408fdc:	mov    QWORD PTR [rbp-0x10],rsi
  408fe0:	mov    rsi,QWORD PTR [rbp-0x8]
  408fe4:	mov    eax,DWORD PTR [rsi+0xf4]
  408fea:	mov    DWORD PTR [rbp-0x14],eax
  408fed:	mov    eax,DWORD PTR [rbp-0x14]
  408ff0:	mov    rsi,QWORD PTR [rbp-0x10]
  408ff4:	mov    rsi,QWORD PTR [rsi]
  408ff7:	mov    ecx,esi
  408ff9:	add    eax,ecx
  408ffb:	mov    rsi,QWORD PTR [rbp-0x8]
  408fff:	mov    DWORD PTR [rsi+0xf4],eax
  409005:	mov    rsi,QWORD PTR [rbp-0x8]
  409009:	mov    eax,DWORD PTR [rsi+0xf4]
  40900f:	cmp    eax,DWORD PTR [rbp-0x14]
  409012:	jge    409037 <flatcc_builder_create_vtable@@Base+0x1a7>
  409018:	lea    rdi,[rip+0x5d13]        # 40ed32 <flatcc_builder_padding_base@@Base+0x13d2>
  40901f:	lea    rsi,[rip+0x4b4c]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  409026:	mov    edx,0x2a1
  40902b:	lea    rcx,[rip+0x5c7b]        # 40ecad <flatcc_builder_padding_base@@Base+0x134d>
  409032:	call   403070 <__assert_fail@plt>
  409037:	mov    rax,QWORD PTR [rbp-0x8]
  40903b:	mov    rax,QWORD PTR [rax+0x48]
  40903f:	mov    rcx,QWORD PTR [rbp-0x8]
  409043:	mov    rdi,QWORD PTR [rcx+0x38]
  409047:	mov    rcx,QWORD PTR [rbp-0x10]
  40904b:	add    rcx,0x10
  40904f:	mov    rdx,QWORD PTR [rbp-0x10]
  409053:	mov    edx,DWORD PTR [rdx+0x8]
  409056:	mov    esi,DWORD PTR [rbp-0x14]
  409059:	mov    r8,QWORD PTR [rbp-0x10]
  40905d:	mov    r8,QWORD PTR [r8]
  409060:	mov    DWORD PTR [rbp-0x18],esi
  409063:	mov    rsi,rcx
  409066:	mov    ecx,DWORD PTR [rbp-0x18]
  409069:	call   rax
  40906b:	cmp    eax,0x0
  40906e:	je     409093 <flatcc_builder_create_vtable@@Base+0x203>
  409074:	lea    rdi,[rip+0x5cb7]        # 40ed32 <flatcc_builder_padding_base@@Base+0x13d2>
  40907b:	lea    rsi,[rip+0x4af0]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  409082:	mov    edx,0x2a5
  409087:	lea    rcx,[rip+0x5c1f]        # 40ecad <flatcc_builder_padding_base@@Base+0x134d>
  40908e:	call   403070 <__assert_fail@plt>
  409093:	mov    eax,DWORD PTR [rbp-0x14]
  409096:	add    eax,0x1
  409099:	add    rsp,0x20
  40909d:	pop    rbp
  40909e:	ret    
  40909f:	nop

00000000004090a0 <flatcc_builder_create_cached_vtable@@Base>:
  4090a0:	push   rbp
  4090a1:	mov    rbp,rsp
  4090a4:	sub    rsp,0x70
  4090a8:	mov    ax,dx
  4090ab:	mov    QWORD PTR [rbp-0x10],rdi
  4090af:	mov    QWORD PTR [rbp-0x18],rsi
  4090b3:	mov    WORD PTR [rbp-0x1a],ax
  4090b7:	mov    DWORD PTR [rbp-0x20],ecx
  4090ba:	mov    rdi,QWORD PTR [rbp-0x10]
  4090be:	mov    esi,DWORD PTR [rbp-0x20]
  4090c1:	call   4093d0 <flatcc_builder_create_cached_vtable@@Base+0x330>
  4090c6:	mov    QWORD PTR [rbp-0x40],rax
  4090ca:	cmp    rax,0x0
  4090ce:	jne    4090e0 <flatcc_builder_create_cached_vtable@@Base+0x40>
  4090d4:	mov    DWORD PTR [rbp-0x4],0x0
  4090db:	jmp    4093b8 <flatcc_builder_create_cached_vtable@@Base+0x318>
  4090e0:	mov    rax,QWORD PTR [rbp-0x40]
  4090e4:	mov    QWORD PTR [rbp-0x38],rax
  4090e8:	mov    rax,QWORD PTR [rbp-0x38]
  4090ec:	mov    ecx,DWORD PTR [rax]
  4090ee:	mov    DWORD PTR [rbp-0x44],ecx
  4090f1:	mov    QWORD PTR [rbp-0x30],0x0
  4090f9:	cmp    DWORD PTR [rbp-0x44],0x0
  4090fd:	je     40920c <flatcc_builder_create_cached_vtable@@Base+0x16c>
  409103:	mov    rax,QWORD PTR [rbp-0x10]
  409107:	mov    rax,QWORD PTR [rax+0xb8]
  40910e:	mov    ecx,DWORD PTR [rbp-0x44]
  409111:	mov    edx,ecx
  409113:	add    rax,rdx
  409116:	mov    QWORD PTR [rbp-0x28],rax
  40911a:	mov    rax,QWORD PTR [rbp-0x10]
  40911e:	mov    rax,QWORD PTR [rax+0x78]
  409122:	mov    rdx,QWORD PTR [rbp-0x28]
  409126:	mov    ecx,DWORD PTR [rdx+0x8]
  409129:	mov    edx,ecx
  40912b:	add    rax,rdx
  40912e:	mov    QWORD PTR [rbp-0x50],rax
  409132:	mov    rax,QWORD PTR [rbp-0x50]
  409136:	movzx  ecx,WORD PTR [rax]
  409139:	movzx  esi,WORD PTR [rbp-0x1a]
  40913d:	cmp    ecx,esi
  40913f:	jne    409178 <flatcc_builder_create_cached_vtable@@Base+0xd8>
  409145:	xor    eax,eax
  409147:	mov    rcx,QWORD PTR [rbp-0x18]
  40914b:	mov    rdx,QWORD PTR [rbp-0x50]
  40914f:	movzx  esi,WORD PTR [rbp-0x1a]
  409153:	mov    edi,esi
  409155:	mov    QWORD PTR [rbp-0x58],rdi
  409159:	mov    rdi,rcx
  40915c:	mov    rsi,rdx
  40915f:	mov    rdx,QWORD PTR [rbp-0x58]
  409163:	mov    DWORD PTR [rbp-0x5c],eax
  409166:	call   4030a0 <memcmp@plt>
  40916b:	mov    r8d,DWORD PTR [rbp-0x5c]
  40916f:	cmp    r8d,eax
  409172:	je     409193 <flatcc_builder_create_cached_vtable@@Base+0xf3>
  409178:	mov    rax,QWORD PTR [rbp-0x28]
  40917c:	add    rax,0xc
  409180:	mov    QWORD PTR [rbp-0x38],rax
  409184:	mov    rax,QWORD PTR [rbp-0x28]
  409188:	mov    ecx,DWORD PTR [rax+0xc]
  40918b:	mov    DWORD PTR [rbp-0x44],ecx
  40918e:	jmp    4090f9 <flatcc_builder_create_cached_vtable@@Base+0x59>
  409193:	mov    rax,QWORD PTR [rbp-0x28]
  409197:	mov    ecx,DWORD PTR [rax+0x4]
  40919a:	mov    rax,QWORD PTR [rbp-0x10]
  40919e:	cmp    ecx,DWORD PTR [rax+0x100]
  4091a4:	je     4091cd <flatcc_builder_create_cached_vtable@@Base+0x12d>
  4091aa:	mov    rax,QWORD PTR [rbp-0x28]
  4091ae:	mov    QWORD PTR [rbp-0x30],rax
  4091b2:	mov    rax,QWORD PTR [rbp-0x28]
  4091b6:	add    rax,0xc
  4091ba:	mov    QWORD PTR [rbp-0x38],rax
  4091be:	mov    rax,QWORD PTR [rbp-0x28]
  4091c2:	mov    ecx,DWORD PTR [rax+0xc]
  4091c5:	mov    DWORD PTR [rbp-0x44],ecx
  4091c8:	jmp    4090f9 <flatcc_builder_create_cached_vtable@@Base+0x59>
  4091cd:	mov    rax,QWORD PTR [rbp-0x38]
  4091d1:	cmp    rax,QWORD PTR [rbp-0x40]
  4091d5:	je     4091fe <flatcc_builder_create_cached_vtable@@Base+0x15e>
  4091db:	mov    rax,QWORD PTR [rbp-0x28]
  4091df:	mov    ecx,DWORD PTR [rax+0xc]
  4091e2:	mov    rax,QWORD PTR [rbp-0x38]
  4091e6:	mov    DWORD PTR [rax],ecx
  4091e8:	mov    rax,QWORD PTR [rbp-0x40]
  4091ec:	mov    ecx,DWORD PTR [rax]
  4091ee:	mov    rax,QWORD PTR [rbp-0x28]
  4091f2:	mov    DWORD PTR [rax+0xc],ecx
  4091f5:	mov    ecx,DWORD PTR [rbp-0x44]
  4091f8:	mov    rax,QWORD PTR [rbp-0x40]
  4091fc:	mov    DWORD PTR [rax],ecx
  4091fe:	mov    rax,QWORD PTR [rbp-0x28]
  409202:	mov    ecx,DWORD PTR [rax]
  409204:	mov    DWORD PTR [rbp-0x4],ecx
  409207:	jmp    4093b8 <flatcc_builder_create_cached_vtable@@Base+0x318>
  40920c:	mov    eax,0x10
  409211:	mov    ecx,eax
  409213:	xor    r8d,r8d
  409216:	mov    rdi,QWORD PTR [rbp-0x10]
  40921a:	mov    rdx,QWORD PTR [rbp-0x10]
  40921e:	mov    eax,DWORD PTR [rdx+0xe4]
  409224:	mov    edx,eax
  409226:	mov    esi,0x6
  40922b:	call   406900 <flatcc_builder_enter_user_frame_ptr@@Base+0xe0>
  409230:	mov    QWORD PTR [rbp-0x28],rax
  409234:	cmp    rax,0x0
  409238:	jne    40924a <flatcc_builder_create_cached_vtable@@Base+0x1aa>
  40923e:	mov    DWORD PTR [rbp-0x4],0x0
  409245:	jmp    4093b8 <flatcc_builder_create_cached_vtable@@Base+0x318>
  40924a:	mov    rax,QWORD PTR [rbp-0x10]
  40924e:	mov    ecx,DWORD PTR [rax+0xe4]
  409254:	mov    DWORD PTR [rbp-0x44],ecx
  409257:	mov    rax,QWORD PTR [rbp-0x10]
  40925b:	mov    ecx,DWORD PTR [rax+0xe4]
  409261:	mov    edx,ecx
  409263:	add    rdx,0x10
  409267:	mov    ecx,edx
  409269:	mov    DWORD PTR [rax+0xe4],ecx
  40926f:	mov    rax,QWORD PTR [rbp-0x10]
  409273:	mov    ecx,DWORD PTR [rax+0x100]
  409279:	mov    rax,QWORD PTR [rbp-0x28]
  40927d:	mov    DWORD PTR [rax+0x4],ecx
  409280:	mov    rax,QWORD PTR [rbp-0x40]
  409284:	mov    ecx,DWORD PTR [rax]
  409286:	mov    rax,QWORD PTR [rbp-0x28]
  40928a:	mov    DWORD PTR [rax+0xc],ecx
  40928d:	mov    ecx,DWORD PTR [rbp-0x44]
  409290:	mov    rax,QWORD PTR [rbp-0x40]
  409294:	mov    DWORD PTR [rax],ecx
  409296:	mov    rdi,QWORD PTR [rbp-0x10]
  40929a:	mov    rsi,QWORD PTR [rbp-0x18]
  40929e:	movzx  edx,WORD PTR [rbp-0x1a]
  4092a2:	call   408e90 <flatcc_builder_create_vtable@@Base>
  4092a7:	xor    ecx,ecx
  4092a9:	mov    rsi,QWORD PTR [rbp-0x28]
  4092ad:	mov    DWORD PTR [rsi],eax
  4092af:	cmp    ecx,eax
  4092b1:	jne    4092c3 <flatcc_builder_create_cached_vtable@@Base+0x223>
  4092b7:	mov    DWORD PTR [rbp-0x4],0x0
  4092be:	jmp    4093b8 <flatcc_builder_create_cached_vtable@@Base+0x318>
  4092c3:	cmp    QWORD PTR [rbp-0x30],0x0
  4092c8:	je     4092e1 <flatcc_builder_create_cached_vtable@@Base+0x241>
  4092ce:	mov    rax,QWORD PTR [rbp-0x30]
  4092d2:	mov    ecx,DWORD PTR [rax+0x8]
  4092d5:	mov    rax,QWORD PTR [rbp-0x28]
  4092d9:	mov    DWORD PTR [rax+0x8],ecx
  4092dc:	jmp    4093af <flatcc_builder_create_cached_vtable@@Base+0x30f>
  4092e1:	mov    rax,QWORD PTR [rbp-0x10]
  4092e5:	cmp    QWORD PTR [rax+0x118],0x0
  4092ed:	je     409329 <flatcc_builder_create_cached_vtable@@Base+0x289>
  4092f3:	mov    rax,QWORD PTR [rbp-0x10]
  4092f7:	mov    rax,QWORD PTR [rax+0x118]
  4092fe:	mov    rcx,QWORD PTR [rbp-0x10]
  409302:	mov    edx,DWORD PTR [rcx+0xe0]
  409308:	movzx  esi,WORD PTR [rbp-0x1a]
  40930c:	add    edx,esi
  40930e:	mov    edx,edx
  409310:	mov    ecx,edx
  409312:	cmp    rax,rcx
  409315:	jae    409329 <flatcc_builder_create_cached_vtable@@Base+0x289>
  40931b:	mov    rdi,QWORD PTR [rbp-0x10]
  40931f:	call   406370 <flatcc_builder_flush_vtable_cache@@Base>
  409324:	jmp    4093aa <flatcc_builder_create_cached_vtable@@Base+0x30a>
  409329:	xor    r8d,r8d
  40932c:	mov    rdi,QWORD PTR [rbp-0x10]
  409330:	mov    rax,QWORD PTR [rbp-0x10]
  409334:	mov    ecx,DWORD PTR [rax+0xe0]
  40933a:	mov    edx,ecx
  40933c:	movzx  ecx,WORD PTR [rbp-0x1a]
  409340:	mov    esi,0x2
  409345:	call   406900 <flatcc_builder_enter_user_frame_ptr@@Base+0xe0>
  40934a:	mov    QWORD PTR [rbp-0x50],rax
  40934e:	cmp    rax,0x0
  409352:	jne    409364 <flatcc_builder_create_cached_vtable@@Base+0x2c4>
  409358:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40935f:	jmp    4093b8 <flatcc_builder_create_cached_vtable@@Base+0x318>
  409364:	mov    rax,QWORD PTR [rbp-0x10]
  409368:	mov    ecx,DWORD PTR [rax+0xe0]
  40936e:	mov    rax,QWORD PTR [rbp-0x28]
  409372:	mov    DWORD PTR [rax+0x8],ecx
  409375:	movzx  ecx,WORD PTR [rbp-0x1a]
  409379:	mov    rax,QWORD PTR [rbp-0x10]
  40937d:	add    ecx,DWORD PTR [rax+0xe0]
  409383:	mov    DWORD PTR [rax+0xe0],ecx
  409389:	mov    rax,QWORD PTR [rbp-0x50]
  40938d:	mov    rdx,QWORD PTR [rbp-0x18]
  409391:	movzx  ecx,WORD PTR [rbp-0x1a]
  409395:	mov    esi,ecx
  409397:	mov    rdi,rax
  40939a:	mov    QWORD PTR [rbp-0x68],rsi
  40939e:	mov    rsi,rdx
  4093a1:	mov    rdx,QWORD PTR [rbp-0x68]
  4093a5:	call   4030c0 <memcpy@plt>
  4093aa:	jmp    4093af <flatcc_builder_create_cached_vtable@@Base+0x30f>
  4093af:	mov    rax,QWORD PTR [rbp-0x28]
  4093b3:	mov    ecx,DWORD PTR [rax]
  4093b5:	mov    DWORD PTR [rbp-0x4],ecx
  4093b8:	mov    eax,DWORD PTR [rbp-0x4]
  4093bb:	add    rsp,0x70
  4093bf:	pop    rbp
  4093c0:	ret    
  4093c1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4093cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4093d0:	push   rbp
  4093d1:	mov    rbp,rsp
  4093d4:	sub    rsp,0x20
  4093d8:	mov    QWORD PTR [rbp-0x10],rdi
  4093dc:	mov    DWORD PTR [rbp-0x14],esi
  4093df:	mov    rdi,QWORD PTR [rbp-0x10]
  4093e3:	cmp    QWORD PTR [rdi+0xd8],0x0
  4093eb:	jne    409415 <flatcc_builder_create_cached_vtable@@Base+0x375>
  4093f1:	mov    rdi,QWORD PTR [rbp-0x10]
  4093f5:	call   40be20 <flatcc_builder_get_emit_context@@Base+0xe0>
  4093fa:	cmp    eax,0x0
  4093fd:	je     409410 <flatcc_builder_create_cached_vtable@@Base+0x370>
  409403:	mov    QWORD PTR [rbp-0x8],0x0
  40940b:	jmp    409452 <flatcc_builder_create_cached_vtable@@Base+0x3b2>
  409410:	jmp    409415 <flatcc_builder_create_cached_vtable@@Base+0x375>
  409415:	mov    eax,0x20
  40941a:	mov    ecx,eax
  40941c:	mov    rdx,QWORD PTR [rbp-0x10]
  409420:	mov    rdx,QWORD PTR [rdx+0xa8]
  409427:	mov    QWORD PTR [rbp-0x20],rdx
  40942b:	mov    rdx,QWORD PTR [rbp-0x20]
  40942f:	mov    eax,DWORD PTR [rbp-0x14]
  409432:	mov    rsi,QWORD PTR [rbp-0x10]
  409436:	sub    rcx,QWORD PTR [rsi+0xd8]
  40943d:	mov    edi,ecx
  40943f:	mov    ecx,edi
  409441:	shr    eax,cl
  409443:	mov    eax,eax
  409445:	mov    esi,eax
  409447:	shl    rsi,0x2
  40944b:	add    rdx,rsi
  40944e:	mov    QWORD PTR [rbp-0x8],rdx
  409452:	mov    rax,QWORD PTR [rbp-0x8]
  409456:	add    rsp,0x20
  40945a:	pop    rbp
  40945b:	ret    
  40945c:	nop    DWORD PTR [rax+0x0]

0000000000409460 <flatcc_builder_create_table@@Base>:
  409460:	push   rbp
  409461:	mov    rbp,rsp
  409464:	sub    rsp,0xf0
  40946b:	mov    ax,cx
  40946e:	mov    ecx,DWORD PTR [rbp+0x10]
  409471:	mov    QWORD PTR [rbp-0x10],rdi
  409475:	mov    QWORD PTR [rbp-0x18],rsi
  409479:	mov    QWORD PTR [rbp-0x20],rdx
  40947d:	mov    WORD PTR [rbp-0x22],ax
  409481:	mov    QWORD PTR [rbp-0x30],r8
  409485:	mov    DWORD PTR [rbp-0x34],r9d
  409489:	cmp    DWORD PTR [rbp-0x34],0x0
  40948d:	mov    DWORD PTR [rbp-0xec],ecx
  409493:	jl     40949e <flatcc_builder_create_table@@Base+0x3e>
  409499:	jmp    4094bd <flatcc_builder_create_table@@Base+0x5d>
  40949e:	lea    rdi,[rip+0x4e43]        # 40e2e8 <flatcc_builder_padding_base@@Base+0x988>
  4094a5:	lea    rsi,[rip+0x46c6]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  4094ac:	mov    edx,0x4d5
  4094b1:	lea    rcx,[rip+0x4e42]        # 40e2fa <flatcc_builder_padding_base@@Base+0x99a>
  4094b8:	call   403070 <__assert_fail@plt>
  4094bd:	mov    eax,DWORD PTR [rbp+0x10]
  4094c0:	and    eax,0x1
  4094c3:	cmp    eax,0x0
  4094c6:	je     4094d1 <flatcc_builder_create_table@@Base+0x71>
  4094cc:	jmp    4094f0 <flatcc_builder_create_table@@Base+0x90>
  4094d1:	lea    rdi,[rip+0x4ebe]        # 40e396 <flatcc_builder_padding_base@@Base+0xa36>
  4094d8:	lea    rsi,[rip+0x4693]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  4094df:	mov    edx,0x4db
  4094e4:	lea    rcx,[rip+0x4e0f]        # 40e2fa <flatcc_builder_padding_base@@Base+0x99a>
  4094eb:	call   403070 <__assert_fail@plt>
  4094f0:	lea    rdi,[rbp-0x22]
  4094f4:	mov    esi,0x4
  4094f9:	call   4089d0 <flatcc_builder_start_vector@@Base+0xb0>
  4094fe:	mov    rdi,QWORD PTR [rbp-0x10]
  409502:	movzx  esi,WORD PTR [rbp-0x22]
  409506:	call   407540 <flatcc_builder_create_buffer@@Base+0x410>
  40950b:	mov    rdi,QWORD PTR [rbp-0x10]
  40950f:	mov    rax,QWORD PTR [rbp-0x20]
  409513:	mov    esi,eax
  409515:	movzx  edx,WORD PTR [rbp-0x22]
  409519:	call   406ff0 <flatcc_builder_embed_buffer@@Base+0x3f0>
  40951e:	mov    DWORD PTR [rbp-0x3c],eax
  409521:	mov    rdi,QWORD PTR [rbp-0x10]
  409525:	mov    eax,DWORD PTR [rdi+0xf0]
  40952b:	mov    edx,DWORD PTR [rbp-0x3c]
  40952e:	mov    edi,edx
  409530:	add    rdi,QWORD PTR [rbp-0x20]
  409534:	add    rdi,0x4
  409538:	mov    edx,edi
  40953a:	sub    eax,edx
  40953c:	mov    DWORD PTR [rbp-0x4c],eax
  40953f:	mov    eax,DWORD PTR [rbp+0x10]
  409542:	sub    eax,0x1
  409545:	mov    DWORD PTR [rbp-0x48],eax
  409548:	mov    eax,DWORD PTR [rbp-0x4c]
  40954b:	sub    eax,DWORD PTR [rbp-0x48]
  40954e:	mov    DWORD PTR [rbp-0x40],eax
  409551:	mov    eax,DWORD PTR [rbp-0x4c]
  409554:	sub    eax,DWORD PTR [rbp-0x40]
  409557:	cmp    eax,DWORD PTR [rbp-0x48]
  40955a:	je     40956c <flatcc_builder_create_table@@Base+0x10c>
  409560:	mov    DWORD PTR [rbp-0x4],0xffffffff
  409567:	jmp    40973f <flatcc_builder_create_table@@Base+0x2df>
  40956c:	mov    edi,DWORD PTR [rbp-0x40]
  40956f:	call   407020 <flatcc_builder_embed_buffer@@Base+0x420>
  409574:	mov    DWORD PTR [rbp-0x44],eax
  409577:	mov    DWORD PTR [rbp-0x38],0x0
  40957e:	mov    eax,DWORD PTR [rbp-0x38]
  409581:	cmp    eax,DWORD PTR [rbp-0x34]
  409584:	jge    4095e3 <flatcc_builder_create_table@@Base+0x183>
  40958a:	mov    rax,QWORD PTR [rbp-0x18]
  40958e:	mov    rcx,QWORD PTR [rbp-0x30]
  409592:	movsxd rdx,DWORD PTR [rbp-0x38]
  409596:	movzx  esi,WORD PTR [rcx+rdx*2]
  40959a:	mov    ecx,esi
  40959c:	add    rax,rcx
  40959f:	mov    QWORD PTR [rbp-0x58],rax
  4095a3:	mov    rax,QWORD PTR [rbp-0x58]
  4095a7:	mov    esi,DWORD PTR [rax]
  4095a9:	sub    esi,DWORD PTR [rbp-0x4c]
  4095ac:	mov    rax,QWORD PTR [rbp-0x30]
  4095b0:	movsxd rcx,DWORD PTR [rbp-0x38]
  4095b4:	movzx  edi,WORD PTR [rax+rcx*2]
  4095b8:	sub    esi,edi
  4095ba:	mov    esi,esi
  4095bc:	mov    eax,esi
  4095be:	sub    rax,0x4
  4095c2:	mov    esi,eax
  4095c4:	mov    DWORD PTR [rbp-0x50],esi
  4095c7:	mov    edi,DWORD PTR [rbp-0x50]
  4095ca:	call   407020 <flatcc_builder_embed_buffer@@Base+0x420>
  4095cf:	mov    rcx,QWORD PTR [rbp-0x58]
  4095d3:	mov    DWORD PTR [rcx],eax
  4095d5:	mov    eax,DWORD PTR [rbp-0x38]
  4095d8:	add    eax,0x1
  4095db:	mov    DWORD PTR [rbp-0x38],eax
  4095de:	jmp    40957e <flatcc_builder_create_table@@Base+0x11e>
  4095e3:	mov    QWORD PTR [rbp-0xe8],0x0
  4095ee:	mov    DWORD PTR [rbp-0xe0],0x0
  4095f8:	mov    rax,QWORD PTR [rbp-0xe8]
  4095ff:	add    rax,0x4
  409603:	mov    QWORD PTR [rbp-0xe8],rax
  40960a:	lea    rax,[rbp-0x44]
  40960e:	lea    rcx,[rbp-0xe8]
  409615:	mov    rdx,rcx
  409618:	add    rdx,0x10
  40961c:	movsxd rsi,DWORD PTR [rbp-0xe0]
  409623:	shl    rsi,0x4
  409627:	add    rdx,rsi
  40962a:	mov    QWORD PTR [rdx],rax
  40962d:	add    rcx,0x10
  409631:	movsxd rax,DWORD PTR [rbp-0xe0]
  409638:	shl    rax,0x4
  40963c:	add    rcx,rax
  40963f:	mov    QWORD PTR [rcx+0x8],0x4
  409647:	mov    edi,DWORD PTR [rbp-0xe0]
  40964d:	add    edi,0x1
  409650:	mov    DWORD PTR [rbp-0xe0],edi
  409656:	cmp    QWORD PTR [rbp-0x20],0x0
  40965b:	jbe    4096bf <flatcc_builder_create_table@@Base+0x25f>
  409661:	mov    rax,QWORD PTR [rbp-0x20]
  409665:	add    rax,QWORD PTR [rbp-0xe8]
  40966c:	mov    QWORD PTR [rbp-0xe8],rax
  409673:	mov    rax,QWORD PTR [rbp-0x18]
  409677:	lea    rcx,[rbp-0xe8]
  40967e:	mov    rdx,rcx
  409681:	add    rdx,0x10
  409685:	movsxd rsi,DWORD PTR [rbp-0xe0]
  40968c:	shl    rsi,0x4
  409690:	add    rdx,rsi
  409693:	mov    QWORD PTR [rdx],rax
  409696:	mov    rax,QWORD PTR [rbp-0x20]
  40969a:	add    rcx,0x10
  40969e:	movsxd rdx,DWORD PTR [rbp-0xe0]
  4096a5:	shl    rdx,0x4
  4096a9:	add    rcx,rdx
  4096ac:	mov    QWORD PTR [rcx+0x8],rax
  4096b0:	mov    edi,DWORD PTR [rbp-0xe0]
  4096b6:	add    edi,0x1
  4096b9:	mov    DWORD PTR [rbp-0xe0],edi
  4096bf:	cmp    DWORD PTR [rbp-0x3c],0x0
  4096c3:	jbe    40972c <flatcc_builder_create_table@@Base+0x2cc>
  4096c9:	lea    rax,[rip+0x4290]        # 40d960 <flatcc_builder_padding_base@@Base>
  4096d0:	mov    ecx,DWORD PTR [rbp-0x3c]
  4096d3:	mov    edx,ecx
  4096d5:	add    rdx,QWORD PTR [rbp-0xe8]
  4096dc:	mov    QWORD PTR [rbp-0xe8],rdx
  4096e3:	lea    rdx,[rbp-0xe8]
  4096ea:	mov    rsi,rdx
  4096ed:	add    rsi,0x10
  4096f1:	movsxd rdi,DWORD PTR [rbp-0xe0]
  4096f8:	shl    rdi,0x4
  4096fc:	add    rsi,rdi
  4096ff:	mov    QWORD PTR [rsi],rax
  409702:	mov    ecx,DWORD PTR [rbp-0x3c]
  409705:	mov    eax,ecx
  409707:	add    rdx,0x10
  40970b:	movsxd rsi,DWORD PTR [rbp-0xe0]
  409712:	shl    rsi,0x4
  409716:	add    rdx,rsi
  409719:	mov    QWORD PTR [rdx+0x8],rax
  40971d:	mov    ecx,DWORD PTR [rbp-0xe0]
  409723:	add    ecx,0x1
  409726:	mov    DWORD PTR [rbp-0xe0],ecx
  40972c:	mov    rdi,QWORD PTR [rbp-0x10]
  409730:	lea    rsi,[rbp-0xe8]
  409737:	call   407030 <flatcc_builder_embed_buffer@@Base+0x430>
  40973c:	mov    DWORD PTR [rbp-0x4],eax
  40973f:	mov    eax,DWORD PTR [rbp-0x4]
  409742:	add    rsp,0xf0
  409749:	pop    rbp
  40974a:	ret    
  40974b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000409750 <flatcc_builder_check_required_field@@Base>:
  409750:	push   rbp
  409751:	mov    rbp,rsp
  409754:	sub    rsp,0x10
  409758:	mov    ax,si
  40975b:	mov    QWORD PTR [rbp-0x8],rdi
  40975f:	mov    WORD PTR [rbp-0xa],ax
  409763:	mov    rdi,QWORD PTR [rbp-0x8]
  409767:	mov    rdi,QWORD PTR [rdi+0x30]
  40976b:	movzx  esi,WORD PTR [rdi+0xe]
  40976f:	cmp    esi,0x3
  409772:	jne    40977d <flatcc_builder_check_required_field@@Base+0x2d>
  409778:	jmp    40979c <flatcc_builder_check_required_field@@Base+0x4c>
  40977d:	lea    rdi,[rip+0x4c1d]        # 40e3a1 <flatcc_builder_padding_base@@Base+0xa41>
  409784:	lea    rsi,[rip+0x43e7]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  40978b:	mov    edx,0x4f8
  409790:	lea    rcx,[rip+0x4c35]        # 40e3cc <flatcc_builder_padding_base@@Base+0xa6c>
  409797:	call   403070 <__assert_fail@plt>
  40979c:	xor    eax,eax
  40979e:	mov    cl,al
  4097a0:	movzx  eax,WORD PTR [rbp-0xa]
  4097a4:	mov    rdx,QWORD PTR [rbp-0x8]
  4097a8:	movzx  esi,WORD PTR [rdx+0x10]
  4097ac:	cmp    eax,esi
  4097ae:	mov    BYTE PTR [rbp-0xb],cl
  4097b1:	jge    4097d4 <flatcc_builder_check_required_field@@Base+0x84>
  4097b7:	mov    rax,QWORD PTR [rbp-0x8]
  4097bb:	mov    rax,QWORD PTR [rax+0x8]
  4097bf:	movzx  ecx,WORD PTR [rbp-0xa]
  4097c3:	mov    edx,ecx
  4097c5:	movzx  ecx,WORD PTR [rax+rdx*2]
  4097c9:	cmp    ecx,0x0
  4097cc:	setne  sil
  4097d0:	mov    BYTE PTR [rbp-0xb],sil
  4097d4:	mov    al,BYTE PTR [rbp-0xb]
  4097d7:	and    al,0x1
  4097d9:	movzx  eax,al
  4097dc:	add    rsp,0x10
  4097e0:	pop    rbp
  4097e1:	ret    
  4097e2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4097ec:	nop    DWORD PTR [rax+0x0]

00000000004097f0 <flatcc_builder_check_union_field@@Base>:
  4097f0:	push   rbp
  4097f1:	mov    rbp,rsp
  4097f4:	sub    rsp,0x20
  4097f8:	mov    ax,si
  4097fb:	mov    QWORD PTR [rbp-0x10],rdi
  4097ff:	mov    WORD PTR [rbp-0x12],ax
  409803:	mov    rdi,QWORD PTR [rbp-0x10]
  409807:	mov    rdi,QWORD PTR [rdi+0x30]
  40980b:	movzx  esi,WORD PTR [rdi+0xe]
  40980f:	cmp    esi,0x3
  409812:	jne    40981d <flatcc_builder_check_union_field@@Base+0x2d>
  409818:	jmp    40983c <flatcc_builder_check_union_field@@Base+0x4c>
  40981d:	lea    rdi,[rip+0x4b7d]        # 40e3a1 <flatcc_builder_padding_base@@Base+0xa41>
  409824:	lea    rsi,[rip+0x4347]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  40982b:	mov    edx,0x4ff
  409830:	lea    rcx,[rip+0x4be8]        # 40e41f <flatcc_builder_padding_base@@Base+0xabf>
  409837:	call   403070 <__assert_fail@plt>
  40983c:	movzx  eax,WORD PTR [rbp-0x12]
  409840:	cmp    eax,0x0
  409843:	je     40985d <flatcc_builder_check_union_field@@Base+0x6d>
  409849:	movzx  eax,WORD PTR [rbp-0x12]
  40984d:	mov    rcx,QWORD PTR [rbp-0x10]
  409851:	movzx  edx,WORD PTR [rcx+0x10]
  409855:	cmp    eax,edx
  409857:	jl     409869 <flatcc_builder_check_union_field@@Base+0x79>
  40985d:	mov    DWORD PTR [rbp-0x4],0x0
  409864:	jmp    409929 <flatcc_builder_check_union_field@@Base+0x139>
  409869:	mov    rax,QWORD PTR [rbp-0x10]
  40986d:	mov    rax,QWORD PTR [rax+0x8]
  409871:	movzx  ecx,WORD PTR [rbp-0x12]
  409875:	sub    ecx,0x1
  409878:	movsxd rdx,ecx
  40987b:	movzx  ecx,WORD PTR [rax+rdx*2]
  40987f:	cmp    ecx,0x0
  409882:	jne    4098b1 <flatcc_builder_check_union_field@@Base+0xc1>
  409888:	mov    rax,QWORD PTR [rbp-0x10]
  40988c:	mov    rax,QWORD PTR [rax+0x8]
  409890:	movzx  ecx,WORD PTR [rbp-0x12]
  409894:	mov    edx,ecx
  409896:	movzx  ecx,WORD PTR [rax+rdx*2]
  40989a:	cmp    ecx,0x0
  40989d:	sete   sil
  4098a1:	and    sil,0x1
  4098a5:	movzx  ecx,sil
  4098a9:	mov    DWORD PTR [rbp-0x4],ecx
  4098ac:	jmp    409929 <flatcc_builder_check_union_field@@Base+0x139>
  4098b1:	mov    rax,QWORD PTR [rbp-0x10]
  4098b5:	mov    rax,QWORD PTR [rax+0x18]
  4098b9:	mov    rcx,QWORD PTR [rbp-0x10]
  4098bd:	mov    rcx,QWORD PTR [rcx+0x8]
  4098c1:	movzx  edx,WORD PTR [rbp-0x12]
  4098c5:	sub    edx,0x1
  4098c8:	movsxd rsi,edx
  4098cb:	movzx  edx,WORD PTR [rcx+rsi*2]
  4098cf:	movsxd rcx,edx
  4098d2:	cmp    BYTE PTR [rax+rcx*1],0x0
  4098d6:	je     409905 <flatcc_builder_check_union_field@@Base+0x115>
  4098dc:	mov    rax,QWORD PTR [rbp-0x10]
  4098e0:	mov    rax,QWORD PTR [rax+0x8]
  4098e4:	movzx  ecx,WORD PTR [rbp-0x12]
  4098e8:	mov    edx,ecx
  4098ea:	movzx  ecx,WORD PTR [rax+rdx*2]
  4098ee:	cmp    ecx,0x0
  4098f1:	setne  sil
  4098f5:	and    sil,0x1
  4098f9:	movzx  ecx,sil
  4098fd:	mov    DWORD PTR [rbp-0x4],ecx
  409900:	jmp    409929 <flatcc_builder_check_union_field@@Base+0x139>
  409905:	mov    rax,QWORD PTR [rbp-0x10]
  409909:	mov    rax,QWORD PTR [rax+0x8]
  40990d:	movzx  ecx,WORD PTR [rbp-0x12]
  409911:	mov    edx,ecx
  409913:	movzx  ecx,WORD PTR [rax+rdx*2]
  409917:	cmp    ecx,0x0
  40991a:	sete   sil
  40991e:	and    sil,0x1
  409922:	movzx  ecx,sil
  409926:	mov    DWORD PTR [rbp-0x4],ecx
  409929:	mov    eax,DWORD PTR [rbp-0x4]
  40992c:	add    rsp,0x20
  409930:	pop    rbp
  409931:	ret    
  409932:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40993c:	nop    DWORD PTR [rax+0x0]

0000000000409940 <flatcc_builder_check_required@@Base>:
  409940:	push   rbp
  409941:	mov    rbp,rsp
  409944:	sub    rsp,0x20
  409948:	mov    QWORD PTR [rbp-0x10],rdi
  40994c:	mov    QWORD PTR [rbp-0x18],rsi
  409950:	mov    DWORD PTR [rbp-0x1c],edx
  409953:	mov    rsi,QWORD PTR [rbp-0x10]
  409957:	mov    rsi,QWORD PTR [rsi+0x30]
  40995b:	movzx  edx,WORD PTR [rsi+0xe]
  40995f:	cmp    edx,0x3
  409962:	jne    40996d <flatcc_builder_check_required@@Base+0x2d>
  409968:	jmp    40998c <flatcc_builder_check_required@@Base+0x4c>
  40996d:	lea    rdi,[rip+0x4a2d]        # 40e3a1 <flatcc_builder_padding_base@@Base+0xa41>
  409974:	lea    rsi,[rip+0x41f7]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  40997b:	mov    edx,0x511
  409980:	lea    rcx,[rip+0x4ae8]        # 40e46f <flatcc_builder_padding_base@@Base+0xb0f>
  409987:	call   403070 <__assert_fail@plt>
  40998c:	mov    rax,QWORD PTR [rbp-0x10]
  409990:	movzx  ecx,WORD PTR [rax+0x10]
  409994:	cmp    ecx,DWORD PTR [rbp-0x1c]
  409997:	jge    4099a9 <flatcc_builder_check_required@@Base+0x69>
  40999d:	mov    DWORD PTR [rbp-0x4],0x0
  4099a4:	jmp    409a05 <flatcc_builder_check_required@@Base+0xc5>
  4099a9:	mov    DWORD PTR [rbp-0x20],0x0
  4099b0:	mov    eax,DWORD PTR [rbp-0x20]
  4099b3:	cmp    eax,DWORD PTR [rbp-0x1c]
  4099b6:	jge    4099fe <flatcc_builder_check_required@@Base+0xbe>
  4099bc:	mov    rax,QWORD PTR [rbp-0x10]
  4099c0:	mov    rax,QWORD PTR [rax+0x8]
  4099c4:	mov    rcx,QWORD PTR [rbp-0x18]
  4099c8:	movsxd rdx,DWORD PTR [rbp-0x20]
  4099cc:	movzx  esi,WORD PTR [rcx+rdx*2]
  4099d0:	mov    ecx,esi
  4099d2:	movzx  esi,WORD PTR [rax+rcx*2]
  4099d6:	cmp    esi,0x0
  4099d9:	jne    4099eb <flatcc_builder_check_required@@Base+0xab>
  4099df:	mov    DWORD PTR [rbp-0x4],0x0
  4099e6:	jmp    409a05 <flatcc_builder_check_required@@Base+0xc5>
  4099eb:	jmp    4099f0 <flatcc_builder_check_required@@Base+0xb0>
  4099f0:	mov    eax,DWORD PTR [rbp-0x20]
  4099f3:	add    eax,0x1
  4099f6:	mov    DWORD PTR [rbp-0x20],eax
  4099f9:	jmp    4099b0 <flatcc_builder_check_required@@Base+0x70>
  4099fe:	mov    DWORD PTR [rbp-0x4],0x1
  409a05:	mov    eax,DWORD PTR [rbp-0x4]
  409a08:	add    rsp,0x20
  409a0c:	pop    rbp
  409a0d:	ret    
  409a0e:	xchg   ax,ax

0000000000409a10 <flatcc_builder_end_table@@Base>:
  409a10:	push   rbp
  409a11:	mov    rbp,rsp
  409a14:	sub    rsp,0x40
  409a18:	mov    QWORD PTR [rbp-0x10],rdi
  409a1c:	mov    rdi,QWORD PTR [rbp-0x10]
  409a20:	mov    rdi,QWORD PTR [rdi+0x30]
  409a24:	movzx  eax,WORD PTR [rdi+0xe]
  409a28:	cmp    eax,0x3
  409a2b:	jne    409a36 <flatcc_builder_end_table@@Base+0x26>
  409a31:	jmp    409a55 <flatcc_builder_end_table@@Base+0x45>
  409a36:	lea    rdi,[rip+0x4964]        # 40e3a1 <flatcc_builder_padding_base@@Base+0xa41>
  409a3d:	lea    rsi,[rip+0x412e]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  409a44:	mov    edx,0x525
  409a49:	lea    rcx,[rip+0x4a79]        # 40e4c9 <flatcc_builder_padding_base@@Base+0xb69>
  409a50:	call   403070 <__assert_fail@plt>
  409a55:	mov    rax,QWORD PTR [rbp-0x10]
  409a59:	mov    rax,QWORD PTR [rax+0x8]
  409a5d:	add    rax,0xfffffffffffffffc
  409a61:	mov    QWORD PTR [rbp-0x18],rax
  409a65:	mov    rax,QWORD PTR [rbp-0x10]
  409a69:	movzx  ecx,WORD PTR [rax+0x10]
  409a6d:	add    ecx,0x2
  409a70:	movsxd rax,ecx
  409a73:	shl    rax,0x1
  409a77:	mov    dx,ax
  409a7a:	mov    WORD PTR [rbp-0x1a],dx
  409a7e:	mov    dx,WORD PTR [rbp-0x1a]
  409a82:	mov    rax,QWORD PTR [rbp-0x18]
  409a86:	mov    WORD PTR [rax],dx
  409a89:	mov    rax,QWORD PTR [rbp-0x10]
  409a8d:	mov    ecx,DWORD PTR [rax+0x20]
  409a90:	mov    dx,cx
  409a93:	movzx  ecx,dx
  409a96:	mov    eax,ecx
  409a98:	add    rax,0x4
  409a9c:	mov    dx,ax
  409a9f:	mov    rax,QWORD PTR [rbp-0x18]
  409aa3:	mov    WORD PTR [rax+0x2],dx
  409aa7:	mov    rax,QWORD PTR [rbp-0x18]
  409aab:	movzx  ecx,WORD PTR [rax]
  409aae:	mov    rax,QWORD PTR [rbp-0x10]
  409ab2:	xor    ecx,DWORD PTR [rax+0x14]
  409ab5:	imul   ecx,ecx,0x9e3779b1
  409abb:	mov    rax,QWORD PTR [rbp-0x18]
  409abf:	movzx  esi,WORD PTR [rax+0x2]
  409ac3:	xor    ecx,esi
  409ac5:	imul   ecx,ecx,0x9e3779b1
  409acb:	mov    rax,QWORD PTR [rbp-0x10]
  409acf:	mov    DWORD PTR [rax+0x14],ecx
  409ad2:	mov    rdi,QWORD PTR [rbp-0x10]
  409ad6:	mov    rsi,QWORD PTR [rbp-0x18]
  409ada:	mov    dx,WORD PTR [rbp-0x1a]
  409ade:	mov    rax,QWORD PTR [rbp-0x10]
  409ae2:	mov    ecx,DWORD PTR [rax+0x14]
  409ae5:	movzx  edx,dx
  409ae8:	call   4090a0 <flatcc_builder_create_cached_vtable@@Base>
  409aed:	mov    DWORD PTR [rbp-0x24],eax
  409af0:	cmp    eax,0x0
  409af3:	jne    409b05 <flatcc_builder_end_table@@Base+0xf5>
  409af9:	mov    DWORD PTR [rbp-0x4],0x0
  409b00:	jmp    409c25 <flatcc_builder_end_table@@Base+0x215>
  409b05:	xor    esi,esi
  409b07:	mov    rax,QWORD PTR [rbp-0x18]
  409b0b:	movzx  ecx,WORD PTR [rbp-0x1a]
  409b0f:	mov    edx,ecx
  409b11:	mov    rdi,rax
  409b14:	call   403080 <memset@plt>
  409b19:	mov    rax,QWORD PTR [rbp-0x10]
  409b1d:	mov    rax,QWORD PTR [rax+0x88]
  409b24:	mov    rdx,QWORD PTR [rbp-0x10]
  409b28:	mov    rdx,QWORD PTR [rdx+0x30]
  409b2c:	mov    ecx,DWORD PTR [rdx+0x14]
  409b2f:	mov    edx,ecx
  409b31:	add    rax,rdx
  409b34:	mov    QWORD PTR [rbp-0x30],rax
  409b38:	mov    rax,QWORD PTR [rbp-0x10]
  409b3c:	mov    rax,QWORD PTR [rax]
  409b3f:	mov    rdx,QWORD PTR [rbp-0x30]
  409b43:	sub    rax,rdx
  409b46:	sar    rax,0x1
  409b4a:	mov    ecx,eax
  409b4c:	mov    DWORD PTR [rbp-0x28],ecx
  409b4f:	mov    rdi,QWORD PTR [rbp-0x10]
  409b53:	mov    rax,QWORD PTR [rbp-0x10]
  409b57:	mov    rsi,QWORD PTR [rax+0x18]
  409b5b:	mov    rax,QWORD PTR [rbp-0x10]
  409b5f:	mov    ecx,DWORD PTR [rax+0x20]
  409b62:	mov    edx,ecx
  409b64:	mov    rax,QWORD PTR [rbp-0x10]
  409b68:	mov    r8w,WORD PTR [rax+0xea]
  409b70:	mov    rax,QWORD PTR [rbp-0x30]
  409b74:	mov    r9d,DWORD PTR [rbp-0x28]
  409b78:	mov    ecx,DWORD PTR [rbp-0x24]
  409b7b:	movzx  r10d,r8w
  409b7f:	mov    DWORD PTR [rbp-0x34],ecx
  409b82:	mov    ecx,r10d
  409b85:	mov    r8,rax
  409b88:	mov    r10d,DWORD PTR [rbp-0x34]
  409b8c:	mov    DWORD PTR [rsp],r10d
  409b90:	call   409460 <flatcc_builder_create_table@@Base>
  409b95:	xor    ecx,ecx
  409b97:	mov    DWORD PTR [rbp-0x20],eax
  409b9a:	cmp    ecx,eax
  409b9c:	jne    409bae <flatcc_builder_end_table@@Base+0x19e>
  409ba2:	mov    DWORD PTR [rbp-0x4],0x0
  409ba9:	jmp    409c25 <flatcc_builder_end_table@@Base+0x215>
  409bae:	mov    rax,QWORD PTR [rbp-0x10]
  409bb2:	mov    rax,QWORD PTR [rax+0x30]
  409bb6:	mov    ecx,DWORD PTR [rax+0x18]
  409bb9:	mov    rax,QWORD PTR [rbp-0x10]
  409bbd:	mov    DWORD PTR [rax+0x14],ecx
  409bc0:	mov    rax,QWORD PTR [rbp-0x10]
  409bc4:	mov    rax,QWORD PTR [rax+0x30]
  409bc8:	mov    dx,WORD PTR [rax+0x1c]
  409bcc:	mov    rax,QWORD PTR [rbp-0x10]
  409bd0:	mov    WORD PTR [rax+0x10],dx
  409bd4:	mov    rax,QWORD PTR [rbp-0x10]
  409bd8:	mov    rax,QWORD PTR [rax+0x58]
  409bdc:	mov    rsi,QWORD PTR [rbp-0x10]
  409be0:	mov    rsi,QWORD PTR [rsi+0x30]
  409be4:	mov    ecx,DWORD PTR [rsi+0x10]
  409be7:	mov    esi,ecx
  409be9:	add    rax,rsi
  409bec:	mov    rsi,QWORD PTR [rbp-0x10]
  409bf0:	mov    QWORD PTR [rsi+0x8],rax
  409bf4:	mov    rax,QWORD PTR [rbp-0x10]
  409bf8:	mov    rax,QWORD PTR [rax+0x88]
  409bff:	mov    rsi,QWORD PTR [rbp-0x10]
  409c03:	mov    rsi,QWORD PTR [rsi+0x30]
  409c07:	mov    ecx,DWORD PTR [rsi+0x14]
  409c0a:	mov    esi,ecx
  409c0c:	add    rax,rsi
  409c0f:	mov    rsi,QWORD PTR [rbp-0x10]
  409c13:	mov    QWORD PTR [rsi],rax
  409c16:	mov    rdi,QWORD PTR [rbp-0x10]
  409c1a:	call   407bb0 <flatcc_builder_end_buffer@@Base+0x160>
  409c1f:	mov    ecx,DWORD PTR [rbp-0x20]
  409c22:	mov    DWORD PTR [rbp-0x4],ecx
  409c25:	mov    eax,DWORD PTR [rbp-0x4]
  409c28:	add    rsp,0x40
  409c2c:	pop    rbp
  409c2d:	ret    
  409c2e:	xchg   ax,ax

0000000000409c30 <flatcc_builder_create_vector@@Base>:
  409c30:	push   rbp
  409c31:	mov    rbp,rsp
  409c34:	sub    rsp,0xe0
  409c3b:	mov    ax,r8w
  409c3f:	mov    QWORD PTR [rbp-0x10],rdi
  409c43:	mov    QWORD PTR [rbp-0x18],rsi
  409c47:	mov    QWORD PTR [rbp-0x20],rdx
  409c4b:	mov    QWORD PTR [rbp-0x28],rcx
  409c4f:	mov    WORD PTR [rbp-0x2a],ax
  409c53:	mov    QWORD PTR [rbp-0x38],r9
  409c57:	mov    rcx,QWORD PTR [rbp-0x20]
  409c5b:	cmp    rcx,QWORD PTR [rbp-0x38]
  409c5f:	jbe    409ca3 <flatcc_builder_create_vector@@Base+0x73>
  409c65:	mov    rax,QWORD PTR [rbp-0x20]
  409c69:	cmp    rax,QWORD PTR [rbp-0x38]
  409c6d:	ja     409c78 <flatcc_builder_create_vector@@Base+0x48>
  409c73:	jmp    409c97 <flatcc_builder_create_vector@@Base+0x67>
  409c78:	lea    rdi,[rip+0x488c]        # 40e50b <flatcc_builder_padding_base@@Base+0xbab>
  409c7f:	lea    rsi,[rip+0x3eec]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  409c86:	mov    edx,0x555
  409c8b:	lea    rcx,[rip+0x488c]        # 40e51e <flatcc_builder_padding_base@@Base+0xbbe>
  409c92:	call   403070 <__assert_fail@plt>
  409c97:	mov    DWORD PTR [rbp-0x4],0x0
  409c9e:	jmp    409e50 <flatcc_builder_create_vector@@Base+0x220>
  409ca3:	lea    rdi,[rbp-0x2a]
  409ca7:	mov    esi,0x4
  409cac:	call   4089d0 <flatcc_builder_start_vector@@Base+0xb0>
  409cb1:	mov    rdi,QWORD PTR [rbp-0x10]
  409cb5:	movzx  esi,WORD PTR [rbp-0x2a]
  409cb9:	call   407540 <flatcc_builder_create_buffer@@Base+0x410>
  409cbe:	mov    rdi,QWORD PTR [rbp-0x20]
  409cc2:	mov    esi,edi
  409cc4:	mov    rdi,QWORD PTR [rbp-0x28]
  409cc8:	mov    eax,edi
  409cca:	imul   esi,eax
  409ccd:	mov    DWORD PTR [rbp-0x3c],esi
  409cd0:	mov    rdi,QWORD PTR [rbp-0x20]
  409cd4:	mov    eax,edi
  409cd6:	mov    edi,eax
  409cd8:	call   407020 <flatcc_builder_embed_buffer@@Base+0x420>
  409cdd:	mov    DWORD PTR [rbp-0x44],eax
  409ce0:	mov    rdi,QWORD PTR [rbp-0x10]
  409ce4:	mov    esi,DWORD PTR [rbp-0x3c]
  409ce7:	movzx  edx,WORD PTR [rbp-0x2a]
  409ceb:	call   406ff0 <flatcc_builder_embed_buffer@@Base+0x3f0>
  409cf0:	mov    DWORD PTR [rbp-0x40],eax
  409cf3:	mov    QWORD PTR [rbp-0xd8],0x0
  409cfe:	mov    DWORD PTR [rbp-0xd0],0x0
  409d08:	mov    rdi,QWORD PTR [rbp-0xd8]
  409d0f:	add    rdi,0x4
  409d13:	mov    QWORD PTR [rbp-0xd8],rdi
  409d1a:	lea    rdi,[rbp-0x44]
  409d1e:	lea    rcx,[rbp-0xd8]
  409d25:	mov    r8,rcx
  409d28:	add    r8,0x10
  409d2c:	movsxd r9,DWORD PTR [rbp-0xd0]
  409d33:	shl    r9,0x4
  409d37:	add    r8,r9
  409d3a:	mov    QWORD PTR [r8],rdi
  409d3d:	add    rcx,0x10
  409d41:	movsxd rdi,DWORD PTR [rbp-0xd0]
  409d48:	shl    rdi,0x4
  409d4c:	add    rcx,rdi
  409d4f:	mov    QWORD PTR [rcx+0x8],0x4
  409d57:	mov    eax,DWORD PTR [rbp-0xd0]
  409d5d:	add    eax,0x1
  409d60:	mov    DWORD PTR [rbp-0xd0],eax
  409d66:	cmp    DWORD PTR [rbp-0x3c],0x0
  409d6a:	jbe    409dd0 <flatcc_builder_create_vector@@Base+0x1a0>
  409d70:	mov    eax,DWORD PTR [rbp-0x3c]
  409d73:	mov    ecx,eax
  409d75:	add    rcx,QWORD PTR [rbp-0xd8]
  409d7c:	mov    QWORD PTR [rbp-0xd8],rcx
  409d83:	mov    rcx,QWORD PTR [rbp-0x18]
  409d87:	lea    rdx,[rbp-0xd8]
  409d8e:	mov    rsi,rdx
  409d91:	add    rsi,0x10
  409d95:	movsxd rdi,DWORD PTR [rbp-0xd0]
  409d9c:	shl    rdi,0x4
  409da0:	add    rsi,rdi
  409da3:	mov    QWORD PTR [rsi],rcx
  409da6:	mov    eax,DWORD PTR [rbp-0x3c]
  409da9:	mov    ecx,eax
  409dab:	add    rdx,0x10
  409daf:	movsxd rsi,DWORD PTR [rbp-0xd0]
  409db6:	shl    rsi,0x4
  409dba:	add    rdx,rsi
  409dbd:	mov    QWORD PTR [rdx+0x8],rcx
  409dc1:	mov    eax,DWORD PTR [rbp-0xd0]
  409dc7:	add    eax,0x1
  409dca:	mov    DWORD PTR [rbp-0xd0],eax
  409dd0:	cmp    DWORD PTR [rbp-0x40],0x0
  409dd4:	jbe    409e3d <flatcc_builder_create_vector@@Base+0x20d>
  409dda:	lea    rax,[rip+0x3b7f]        # 40d960 <flatcc_builder_padding_base@@Base>
  409de1:	mov    ecx,DWORD PTR [rbp-0x40]
  409de4:	mov    edx,ecx
  409de6:	add    rdx,QWORD PTR [rbp-0xd8]
  409ded:	mov    QWORD PTR [rbp-0xd8],rdx
  409df4:	lea    rdx,[rbp-0xd8]
  409dfb:	mov    rsi,rdx
  409dfe:	add    rsi,0x10
  409e02:	movsxd rdi,DWORD PTR [rbp-0xd0]
  409e09:	shl    rdi,0x4
  409e0d:	add    rsi,rdi
  409e10:	mov    QWORD PTR [rsi],rax
  409e13:	mov    ecx,DWORD PTR [rbp-0x40]
  409e16:	mov    eax,ecx
  409e18:	add    rdx,0x10
  409e1c:	movsxd rsi,DWORD PTR [rbp-0xd0]
  409e23:	shl    rsi,0x4
  409e27:	add    rdx,rsi
  409e2a:	mov    QWORD PTR [rdx+0x8],rax
  409e2e:	mov    ecx,DWORD PTR [rbp-0xd0]
  409e34:	add    ecx,0x1
  409e37:	mov    DWORD PTR [rbp-0xd0],ecx
  409e3d:	mov    rdi,QWORD PTR [rbp-0x10]
  409e41:	lea    rsi,[rbp-0xd8]
  409e48:	call   407030 <flatcc_builder_embed_buffer@@Base+0x430>
  409e4d:	mov    DWORD PTR [rbp-0x4],eax
  409e50:	mov    eax,DWORD PTR [rbp-0x4]
  409e53:	add    rsp,0xe0
  409e5a:	pop    rbp
  409e5b:	ret    
  409e5c:	nop    DWORD PTR [rax+0x0]

0000000000409e60 <flatcc_builder_end_vector@@Base>:
  409e60:	push   rbp
  409e61:	mov    rbp,rsp
  409e64:	sub    rsp,0x20
  409e68:	mov    QWORD PTR [rbp-0x10],rdi
  409e6c:	mov    rdi,QWORD PTR [rbp-0x10]
  409e70:	mov    rdi,QWORD PTR [rdi+0x30]
  409e74:	movzx  eax,WORD PTR [rdi+0xe]
  409e78:	cmp    eax,0x4
  409e7b:	jne    409e86 <flatcc_builder_end_vector@@Base+0x26>
  409e81:	jmp    409ea5 <flatcc_builder_end_vector@@Base+0x45>
  409e86:	lea    rdi,[rip+0x4022]        # 40deaf <flatcc_builder_padding_base@@Base+0x54f>
  409e8d:	lea    rsi,[rip+0x3cde]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  409e94:	mov    edx,0x578
  409e99:	lea    rcx,[rip+0x46f4]        # 40e594 <flatcc_builder_padding_base@@Base+0xc34>
  409ea0:	call   403070 <__assert_fail@plt>
  409ea5:	mov    rdi,QWORD PTR [rbp-0x10]
  409ea9:	mov    rax,QWORD PTR [rbp-0x10]
  409ead:	mov    rsi,QWORD PTR [rax+0x18]
  409eb1:	mov    rax,QWORD PTR [rbp-0x10]
  409eb5:	mov    rax,QWORD PTR [rax+0x30]
  409eb9:	mov    ecx,DWORD PTR [rax+0x14]
  409ebc:	mov    edx,ecx
  409ebe:	mov    rax,QWORD PTR [rbp-0x10]
  409ec2:	mov    rax,QWORD PTR [rax+0x30]
  409ec6:	mov    ecx,DWORD PTR [rax+0x10]
  409ec9:	mov    rax,QWORD PTR [rbp-0x10]
  409ecd:	mov    r8w,WORD PTR [rax+0xea]
  409ed5:	mov    rax,QWORD PTR [rbp-0x10]
  409ed9:	mov    rax,QWORD PTR [rax+0x30]
  409edd:	mov    r9d,DWORD PTR [rax+0x18]
  409ee1:	movzx  r8d,r8w
  409ee5:	call   409c30 <flatcc_builder_create_vector@@Base>
  409eea:	xor    r8d,r8d
  409eed:	mov    DWORD PTR [rbp-0x14],eax
  409ef0:	cmp    r8d,eax
  409ef3:	jne    409f05 <flatcc_builder_end_vector@@Base+0xa5>
  409ef9:	mov    DWORD PTR [rbp-0x4],0x0
  409f00:	jmp    409f14 <flatcc_builder_end_vector@@Base+0xb4>
  409f05:	mov    rdi,QWORD PTR [rbp-0x10]
  409f09:	call   407bb0 <flatcc_builder_end_buffer@@Base+0x160>
  409f0e:	mov    eax,DWORD PTR [rbp-0x14]
  409f11:	mov    DWORD PTR [rbp-0x4],eax
  409f14:	mov    eax,DWORD PTR [rbp-0x4]
  409f17:	add    rsp,0x20
  409f1b:	pop    rbp
  409f1c:	ret    
  409f1d:	nop    DWORD PTR [rax]

0000000000409f20 <flatcc_builder_vector_count@@Base>:
  409f20:	push   rbp
  409f21:	mov    rbp,rsp
  409f24:	mov    QWORD PTR [rbp-0x8],rdi
  409f28:	mov    rdi,QWORD PTR [rbp-0x8]
  409f2c:	mov    rdi,QWORD PTR [rdi+0x30]
  409f30:	mov    eax,DWORD PTR [rdi+0x14]
  409f33:	pop    rbp
  409f34:	ret    
  409f35:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409f3f:	nop

0000000000409f40 <flatcc_builder_vector_edit@@Base>:
  409f40:	push   rbp
  409f41:	mov    rbp,rsp
  409f44:	mov    QWORD PTR [rbp-0x8],rdi
  409f48:	mov    rdi,QWORD PTR [rbp-0x8]
  409f4c:	mov    rax,QWORD PTR [rdi+0x18]
  409f50:	pop    rbp
  409f51:	ret    
  409f52:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409f5c:	nop    DWORD PTR [rax+0x0]

0000000000409f60 <flatcc_builder_create_offset_vector_direct@@Base>:
  409f60:	push   rbp
  409f61:	mov    rbp,rsp
  409f64:	sub    rsp,0x20
  409f68:	xor    eax,eax
  409f6a:	mov    ecx,eax
  409f6c:	mov    QWORD PTR [rbp-0x8],rdi
  409f70:	mov    QWORD PTR [rbp-0x10],rsi
  409f74:	mov    QWORD PTR [rbp-0x18],rdx
  409f78:	mov    rdi,QWORD PTR [rbp-0x8]
  409f7c:	mov    rsi,QWORD PTR [rbp-0x10]
  409f80:	mov    rdx,QWORD PTR [rbp-0x18]
  409f84:	call   409f90 <flatcc_builder_create_offset_vector_direct@@Base+0x30>
  409f89:	add    rsp,0x20
  409f8d:	pop    rbp
  409f8e:	ret    
  409f8f:	nop
  409f90:	push   rbp
  409f91:	mov    rbp,rsp
  409f94:	sub    rsp,0xd0
  409f9b:	mov    QWORD PTR [rbp-0x10],rdi
  409f9f:	mov    QWORD PTR [rbp-0x18],rsi
  409fa3:	mov    QWORD PTR [rbp-0x20],rdx
  409fa7:	mov    QWORD PTR [rbp-0x28],rcx
  409fab:	mov    rcx,QWORD PTR [rbp-0x20]
  409faf:	mov    eax,ecx
  409fb1:	mov    eax,eax
  409fb3:	mov    ecx,eax
  409fb5:	cmp    rcx,0x3fffffff
  409fbc:	jbe    409fce <flatcc_builder_create_offset_vector_direct@@Base+0x6e>
  409fc2:	mov    DWORD PTR [rbp-0x4],0x0
  409fc9:	jmp    40a2bf <flatcc_builder_create_offset_vector_direct@@Base+0x35f>
  409fce:	mov    rdi,QWORD PTR [rbp-0x10]
  409fd2:	mov    esi,0x4
  409fd7:	call   407540 <flatcc_builder_create_buffer@@Base+0x410>
  409fdc:	mov    rdi,QWORD PTR [rbp-0x20]
  409fe0:	mov    esi,edi
  409fe2:	mov    esi,esi
  409fe4:	mov    edi,esi
  409fe6:	shl    rdi,0x2
  409fea:	mov    esi,edi
  409fec:	mov    DWORD PTR [rbp-0x2c],esi
  409fef:	mov    rdi,QWORD PTR [rbp-0x20]
  409ff3:	mov    esi,edi
  409ff5:	mov    edi,esi
  409ff7:	call   407020 <flatcc_builder_embed_buffer@@Base+0x420>
  409ffc:	mov    DWORD PTR [rbp-0x34],eax
  409fff:	mov    rdi,QWORD PTR [rbp-0x10]
  40a003:	mov    esi,DWORD PTR [rbp-0x2c]
  40a006:	mov    edx,0x4
  40a00b:	call   406ff0 <flatcc_builder_embed_buffer@@Base+0x3f0>
  40a010:	mov    DWORD PTR [rbp-0x30],eax
  40a013:	mov    QWORD PTR [rbp-0xd0],0x0
  40a01e:	mov    DWORD PTR [rbp-0xc8],0x0
  40a028:	mov    rdi,QWORD PTR [rbp-0xd0]
  40a02f:	add    rdi,0x4
  40a033:	mov    QWORD PTR [rbp-0xd0],rdi
  40a03a:	lea    rdi,[rbp-0x34]
  40a03e:	lea    rcx,[rbp-0xd0]
  40a045:	mov    r8,rcx
  40a048:	add    r8,0x10
  40a04c:	movsxd r9,DWORD PTR [rbp-0xc8]
  40a053:	shl    r9,0x4
  40a057:	add    r8,r9
  40a05a:	mov    QWORD PTR [r8],rdi
  40a05d:	add    rcx,0x10
  40a061:	movsxd rdi,DWORD PTR [rbp-0xc8]
  40a068:	shl    rdi,0x4
  40a06c:	add    rcx,rdi
  40a06f:	mov    QWORD PTR [rcx+0x8],0x4
  40a077:	mov    eax,DWORD PTR [rbp-0xc8]
  40a07d:	add    eax,0x1
  40a080:	mov    DWORD PTR [rbp-0xc8],eax
  40a086:	cmp    DWORD PTR [rbp-0x2c],0x0
  40a08a:	jbe    40a0f0 <flatcc_builder_create_offset_vector_direct@@Base+0x190>
  40a090:	mov    eax,DWORD PTR [rbp-0x2c]
  40a093:	mov    ecx,eax
  40a095:	add    rcx,QWORD PTR [rbp-0xd0]
  40a09c:	mov    QWORD PTR [rbp-0xd0],rcx
  40a0a3:	mov    rcx,QWORD PTR [rbp-0x18]
  40a0a7:	lea    rdx,[rbp-0xd0]
  40a0ae:	mov    rsi,rdx
  40a0b1:	add    rsi,0x10
  40a0b5:	movsxd rdi,DWORD PTR [rbp-0xc8]
  40a0bc:	shl    rdi,0x4
  40a0c0:	add    rsi,rdi
  40a0c3:	mov    QWORD PTR [rsi],rcx
  40a0c6:	mov    eax,DWORD PTR [rbp-0x2c]
  40a0c9:	mov    ecx,eax
  40a0cb:	add    rdx,0x10
  40a0cf:	movsxd rsi,DWORD PTR [rbp-0xc8]
  40a0d6:	shl    rsi,0x4
  40a0da:	add    rdx,rsi
  40a0dd:	mov    QWORD PTR [rdx+0x8],rcx
  40a0e1:	mov    eax,DWORD PTR [rbp-0xc8]
  40a0e7:	add    eax,0x1
  40a0ea:	mov    DWORD PTR [rbp-0xc8],eax
  40a0f0:	cmp    DWORD PTR [rbp-0x30],0x0
  40a0f4:	jbe    40a15d <flatcc_builder_create_offset_vector_direct@@Base+0x1fd>
  40a0fa:	lea    rax,[rip+0x385f]        # 40d960 <flatcc_builder_padding_base@@Base>
  40a101:	mov    ecx,DWORD PTR [rbp-0x30]
  40a104:	mov    edx,ecx
  40a106:	add    rdx,QWORD PTR [rbp-0xd0]
  40a10d:	mov    QWORD PTR [rbp-0xd0],rdx
  40a114:	lea    rdx,[rbp-0xd0]
  40a11b:	mov    rsi,rdx
  40a11e:	add    rsi,0x10
  40a122:	movsxd rdi,DWORD PTR [rbp-0xc8]
  40a129:	shl    rdi,0x4
  40a12d:	add    rsi,rdi
  40a130:	mov    QWORD PTR [rsi],rax
  40a133:	mov    ecx,DWORD PTR [rbp-0x30]
  40a136:	mov    eax,ecx
  40a138:	add    rdx,0x10
  40a13c:	movsxd rsi,DWORD PTR [rbp-0xc8]
  40a143:	shl    rsi,0x4
  40a147:	add    rdx,rsi
  40a14a:	mov    QWORD PTR [rdx+0x8],rax
  40a14e:	mov    ecx,DWORD PTR [rbp-0xc8]
  40a154:	add    ecx,0x1
  40a157:	mov    DWORD PTR [rbp-0xc8],ecx
  40a15d:	mov    rax,QWORD PTR [rbp-0x10]
  40a161:	mov    ecx,DWORD PTR [rax+0xf0]
  40a167:	mov    rax,QWORD PTR [rbp-0xd0]
  40a16e:	mov    edx,eax
  40a170:	sub    ecx,edx
  40a172:	mov    DWORD PTR [rbp-0x38],ecx
  40a175:	mov    DWORD PTR [rbp-0x40],0x0
  40a17c:	mov    eax,DWORD PTR [rbp-0x40]
  40a17f:	mov    rcx,QWORD PTR [rbp-0x20]
  40a183:	mov    edx,ecx
  40a185:	cmp    eax,edx
  40a187:	jae    40a2ac <flatcc_builder_create_offset_vector_direct@@Base+0x34c>
  40a18d:	mov    rax,QWORD PTR [rbp-0x18]
  40a191:	mov    ecx,DWORD PTR [rbp-0x40]
  40a194:	mov    edx,ecx
  40a196:	cmp    DWORD PTR [rax+rdx*4],0x0
  40a19a:	je     40a22b <flatcc_builder_create_offset_vector_direct@@Base+0x2cb>
  40a1a0:	mov    rax,QWORD PTR [rbp-0x18]
  40a1a4:	mov    ecx,DWORD PTR [rbp-0x40]
  40a1a7:	mov    edx,ecx
  40a1a9:	mov    ecx,DWORD PTR [rax+rdx*4]
  40a1ac:	sub    ecx,DWORD PTR [rbp-0x38]
  40a1af:	mov    ecx,ecx
  40a1b1:	mov    eax,ecx
  40a1b3:	mov    ecx,DWORD PTR [rbp-0x40]
  40a1b6:	mov    edx,ecx
  40a1b8:	shl    rdx,0x2
  40a1bc:	sub    rax,rdx
  40a1bf:	sub    rax,0x4
  40a1c3:	mov    ecx,eax
  40a1c5:	mov    DWORD PTR [rbp-0x3c],ecx
  40a1c8:	mov    edi,DWORD PTR [rbp-0x3c]
  40a1cb:	call   407020 <flatcc_builder_embed_buffer@@Base+0x420>
  40a1d0:	mov    rdx,QWORD PTR [rbp-0x18]
  40a1d4:	mov    ecx,DWORD PTR [rbp-0x40]
  40a1d7:	mov    esi,ecx
  40a1d9:	mov    DWORD PTR [rdx+rsi*4],eax
  40a1dc:	cmp    QWORD PTR [rbp-0x28],0x0
  40a1e1:	je     40a226 <flatcc_builder_create_offset_vector_direct@@Base+0x2c6>
  40a1e7:	mov    rax,QWORD PTR [rbp-0x28]
  40a1eb:	mov    ecx,DWORD PTR [rbp-0x40]
  40a1ee:	mov    edx,ecx
  40a1f0:	movzx  ecx,BYTE PTR [rax+rdx*1]
  40a1f4:	cmp    ecx,0x0
  40a1f7:	je     40a202 <flatcc_builder_create_offset_vector_direct@@Base+0x2a2>
  40a1fd:	jmp    40a221 <flatcc_builder_create_offset_vector_direct@@Base+0x2c1>
  40a202:	lea    rdi,[rip+0x4b1d]        # 40ed26 <flatcc_builder_padding_base@@Base+0x13c6>
  40a209:	lea    rsi,[rip+0x3962]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  40a210:	mov    edx,0x5b1
  40a215:	lea    rcx,[rip+0x4b18]        # 40ed34 <flatcc_builder_padding_base@@Base+0x13d4>
  40a21c:	call   403070 <__assert_fail@plt>
  40a221:	jmp    40a226 <flatcc_builder_create_offset_vector_direct@@Base+0x2c6>
  40a226:	jmp    40a299 <flatcc_builder_create_offset_vector_direct@@Base+0x339>
  40a22b:	cmp    QWORD PTR [rbp-0x28],0x0
  40a230:	je     40a275 <flatcc_builder_create_offset_vector_direct@@Base+0x315>
  40a236:	mov    rax,QWORD PTR [rbp-0x28]
  40a23a:	mov    ecx,DWORD PTR [rbp-0x40]
  40a23d:	mov    edx,ecx
  40a23f:	movzx  ecx,BYTE PTR [rax+rdx*1]
  40a243:	cmp    ecx,0x0
  40a246:	jne    40a251 <flatcc_builder_create_offset_vector_direct@@Base+0x2f1>
  40a24c:	jmp    40a270 <flatcc_builder_create_offset_vector_direct@@Base+0x310>
  40a251:	lea    rdi,[rip+0x4b5f]        # 40edb7 <flatcc_builder_padding_base@@Base+0x1457>
  40a258:	lea    rsi,[rip+0x3913]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  40a25f:	mov    edx,0x5b5
  40a264:	lea    rcx,[rip+0x4ac9]        # 40ed34 <flatcc_builder_padding_base@@Base+0x13d4>
  40a26b:	call   403070 <__assert_fail@plt>
  40a270:	jmp    40a294 <flatcc_builder_create_offset_vector_direct@@Base+0x334>
  40a275:	lea    rdi,[rip+0x4ab6]        # 40ed32 <flatcc_builder_padding_base@@Base+0x13d2>
  40a27c:	lea    rsi,[rip+0x38ef]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  40a283:	mov    edx,0x5b7
  40a288:	lea    rcx,[rip+0x4aa5]        # 40ed34 <flatcc_builder_padding_base@@Base+0x13d4>
  40a28f:	call   403070 <__assert_fail@plt>
  40a294:	jmp    40a299 <flatcc_builder_create_offset_vector_direct@@Base+0x339>
  40a299:	jmp    40a29e <flatcc_builder_create_offset_vector_direct@@Base+0x33e>
  40a29e:	mov    eax,DWORD PTR [rbp-0x40]
  40a2a1:	add    eax,0x1
  40a2a4:	mov    DWORD PTR [rbp-0x40],eax
  40a2a7:	jmp    40a17c <flatcc_builder_create_offset_vector_direct@@Base+0x21c>
  40a2ac:	mov    rdi,QWORD PTR [rbp-0x10]
  40a2b0:	lea    rsi,[rbp-0xd0]
  40a2b7:	call   407030 <flatcc_builder_embed_buffer@@Base+0x430>
  40a2bc:	mov    DWORD PTR [rbp-0x4],eax
  40a2bf:	mov    eax,DWORD PTR [rbp-0x4]
  40a2c2:	add    rsp,0xd0
  40a2c9:	pop    rbp
  40a2ca:	ret    
  40a2cb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040a2d0 <flatcc_builder_end_offset_vector_for_unions@@Base>:
  40a2d0:	push   rbp
  40a2d1:	mov    rbp,rsp
  40a2d4:	sub    rsp,0x20
  40a2d8:	mov    QWORD PTR [rbp-0x10],rdi
  40a2dc:	mov    QWORD PTR [rbp-0x18],rsi
  40a2e0:	mov    rsi,QWORD PTR [rbp-0x10]
  40a2e4:	mov    rsi,QWORD PTR [rsi+0x30]
  40a2e8:	movzx  eax,WORD PTR [rsi+0xe]
  40a2ec:	cmp    eax,0x5
  40a2ef:	jne    40a2fa <flatcc_builder_end_offset_vector_for_unions@@Base+0x2a>
  40a2f5:	jmp    40a319 <flatcc_builder_end_offset_vector_for_unions@@Base+0x49>
  40a2fa:	lea    rdi,[rip+0x3ca7]        # 40dfa8 <flatcc_builder_padding_base@@Base+0x648>
  40a301:	lea    rsi,[rip+0x386a]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  40a308:	mov    edx,0x5d5
  40a30d:	lea    rcx,[rip+0x430d]        # 40e621 <flatcc_builder_padding_base@@Base+0xcc1>
  40a314:	call   403070 <__assert_fail@plt>
  40a319:	mov    rdi,QWORD PTR [rbp-0x10]
  40a31d:	mov    rax,QWORD PTR [rbp-0x10]
  40a321:	mov    rax,QWORD PTR [rax+0x18]
  40a325:	mov    rcx,QWORD PTR [rbp-0x10]
  40a329:	mov    rcx,QWORD PTR [rcx+0x30]
  40a32d:	mov    edx,DWORD PTR [rcx+0x14]
  40a330:	mov    rcx,QWORD PTR [rbp-0x18]
  40a334:	mov    rsi,rax
  40a337:	call   409f90 <flatcc_builder_create_offset_vector_direct@@Base+0x30>
  40a33c:	xor    r8d,r8d
  40a33f:	mov    DWORD PTR [rbp-0x1c],eax
  40a342:	cmp    r8d,eax
  40a345:	jne    40a357 <flatcc_builder_end_offset_vector_for_unions@@Base+0x87>
  40a34b:	mov    DWORD PTR [rbp-0x4],0x0
  40a352:	jmp    40a366 <flatcc_builder_end_offset_vector_for_unions@@Base+0x96>
  40a357:	mov    rdi,QWORD PTR [rbp-0x10]
  40a35b:	call   407bb0 <flatcc_builder_end_buffer@@Base+0x160>
  40a360:	mov    eax,DWORD PTR [rbp-0x1c]
  40a363:	mov    DWORD PTR [rbp-0x4],eax
  40a366:	mov    eax,DWORD PTR [rbp-0x4]
  40a369:	add    rsp,0x20
  40a36d:	pop    rbp
  40a36e:	ret    
  40a36f:	nop

000000000040a370 <flatcc_builder_offset_vector_edit@@Base>:
  40a370:	push   rbp
  40a371:	mov    rbp,rsp
  40a374:	mov    QWORD PTR [rbp-0x8],rdi
  40a378:	mov    rdi,QWORD PTR [rbp-0x8]
  40a37c:	mov    rax,QWORD PTR [rdi+0x18]
  40a380:	pop    rbp
  40a381:	ret    
  40a382:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a38c:	nop    DWORD PTR [rax+0x0]

000000000040a390 <flatcc_builder_offset_vector_count@@Base>:
  40a390:	push   rbp
  40a391:	mov    rbp,rsp
  40a394:	mov    QWORD PTR [rbp-0x8],rdi
  40a398:	mov    rdi,QWORD PTR [rbp-0x8]
  40a39c:	mov    rdi,QWORD PTR [rdi+0x30]
  40a3a0:	mov    eax,DWORD PTR [rdi+0x14]
  40a3a3:	pop    rbp
  40a3a4:	ret    
  40a3a5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a3af:	nop

000000000040a3b0 <flatcc_builder_table_add_union@@Base>:
  40a3b0:	push   rbp
  40a3b1:	mov    rbp,rsp
  40a3b4:	sub    rsp,0x30
  40a3b8:	mov    QWORD PTR [rbp-0x10],rdx
  40a3bc:	mov    QWORD PTR [rbp-0x18],rdi
  40a3c0:	mov    DWORD PTR [rbp-0x1c],esi
  40a3c3:	mov    rdx,QWORD PTR [rbp-0x18]
  40a3c7:	mov    rdx,QWORD PTR [rdx+0x30]
  40a3cb:	movzx  esi,WORD PTR [rdx+0xe]
  40a3cf:	cmp    esi,0x3
  40a3d2:	jne    40a3dd <flatcc_builder_table_add_union@@Base+0x2d>
  40a3d8:	jmp    40a3fc <flatcc_builder_table_add_union@@Base+0x4c>
  40a3dd:	lea    rdi,[rip+0x3fbd]        # 40e3a1 <flatcc_builder_padding_base@@Base+0xa41>
  40a3e4:	lea    rsi,[rip+0x3787]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  40a3eb:	mov    edx,0x5ee
  40a3f0:	lea    rcx,[rip+0x429c]        # 40e693 <flatcc_builder_padding_base@@Base+0xd33>
  40a3f7:	call   403070 <__assert_fail@plt>
  40a3fc:	movzx  eax,BYTE PTR [rbp-0x10]
  40a400:	cmp    eax,0x0
  40a403:	jne    40a45a <flatcc_builder_table_add_union@@Base+0xaa>
  40a409:	cmp    DWORD PTR [rbp-0xc],0x0
  40a40d:	je     40a45a <flatcc_builder_table_add_union@@Base+0xaa>
  40a413:	movzx  eax,BYTE PTR [rbp-0x10]
  40a417:	cmp    eax,0x0
  40a41a:	jne    40a42a <flatcc_builder_table_add_union@@Base+0x7a>
  40a420:	cmp    DWORD PTR [rbp-0xc],0x0
  40a424:	jne    40a42f <flatcc_builder_table_add_union@@Base+0x7f>
  40a42a:	jmp    40a44e <flatcc_builder_table_add_union@@Base+0x9e>
  40a42f:	lea    rdi,[rip+0x42b5]        # 40e6eb <flatcc_builder_padding_base@@Base+0xd8b>
  40a436:	lea    rsi,[rip+0x3735]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  40a43d:	mov    edx,0x5ef
  40a442:	lea    rcx,[rip+0x424a]        # 40e693 <flatcc_builder_padding_base@@Base+0xd33>
  40a449:	call   403070 <__assert_fail@plt>
  40a44e:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40a455:	jmp    40a540 <flatcc_builder_table_add_union@@Base+0x190>
  40a45a:	cmp    DWORD PTR [rbp-0xc],0x0
  40a45e:	je     40a4c3 <flatcc_builder_table_add_union@@Base+0x113>
  40a464:	mov    rdi,QWORD PTR [rbp-0x18]
  40a468:	mov    esi,DWORD PTR [rbp-0x1c]
  40a46b:	call   40a550 <flatcc_builder_table_add_offset@@Base>
  40a470:	mov    QWORD PTR [rbp-0x28],rax
  40a474:	cmp    QWORD PTR [rbp-0x28],0x0
  40a479:	jne    40a4ba <flatcc_builder_table_add_union@@Base+0x10a>
  40a47f:	cmp    QWORD PTR [rbp-0x28],0x0
  40a484:	je     40a48f <flatcc_builder_table_add_union@@Base+0xdf>
  40a48a:	jmp    40a4ae <flatcc_builder_table_add_union@@Base+0xfe>
  40a48f:	lea    rdi,[rip+0x4277]        # 40e70d <flatcc_builder_padding_base@@Base+0xdad>
  40a496:	lea    rsi,[rip+0x36d5]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  40a49d:	mov    edx,0x5f2
  40a4a2:	lea    rcx,[rip+0x41ea]        # 40e693 <flatcc_builder_padding_base@@Base+0xd33>
  40a4a9:	call   403070 <__assert_fail@plt>
  40a4ae:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40a4b5:	jmp    40a540 <flatcc_builder_table_add_union@@Base+0x190>
  40a4ba:	mov    eax,DWORD PTR [rbp-0xc]
  40a4bd:	mov    rcx,QWORD PTR [rbp-0x28]
  40a4c1:	mov    DWORD PTR [rcx],eax
  40a4c3:	mov    eax,0x1
  40a4c8:	mov    edx,eax
  40a4ca:	mov    rdi,QWORD PTR [rbp-0x18]
  40a4ce:	mov    eax,DWORD PTR [rbp-0x1c]
  40a4d1:	sub    eax,0x1
  40a4d4:	mov    esi,eax
  40a4d6:	mov    ecx,0x1
  40a4db:	call   40a650 <flatcc_builder_table_add@@Base>
  40a4e0:	mov    QWORD PTR [rbp-0x30],rax
  40a4e4:	cmp    QWORD PTR [rbp-0x30],0x0
  40a4e9:	jne    40a52a <flatcc_builder_table_add_union@@Base+0x17a>
  40a4ef:	cmp    QWORD PTR [rbp-0x30],0x0
  40a4f4:	je     40a4ff <flatcc_builder_table_add_union@@Base+0x14f>
  40a4fa:	jmp    40a51e <flatcc_builder_table_add_union@@Base+0x16e>
  40a4ff:	lea    rdi,[rip+0x4211]        # 40e717 <flatcc_builder_padding_base@@Base+0xdb7>
  40a506:	lea    rsi,[rip+0x3665]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  40a50d:	mov    edx,0x5f6
  40a512:	lea    rcx,[rip+0x417a]        # 40e693 <flatcc_builder_padding_base@@Base+0xd33>
  40a519:	call   403070 <__assert_fail@plt>
  40a51e:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40a525:	jmp    40a540 <flatcc_builder_table_add_union@@Base+0x190>
  40a52a:	movzx  edi,BYTE PTR [rbp-0x10]
  40a52e:	call   40a7a0 <flatcc_builder_table_add@@Base+0x150>
  40a533:	mov    rcx,QWORD PTR [rbp-0x30]
  40a537:	mov    BYTE PTR [rcx],al
  40a539:	mov    DWORD PTR [rbp-0x4],0x0
  40a540:	mov    eax,DWORD PTR [rbp-0x4]
  40a543:	add    rsp,0x30
  40a547:	pop    rbp
  40a548:	ret    
  40a549:	nop    DWORD PTR [rax+0x0]

000000000040a550 <flatcc_builder_table_add_offset@@Base>:
  40a550:	push   rbp
  40a551:	mov    rbp,rsp
  40a554:	sub    rsp,0x10
  40a558:	mov    QWORD PTR [rbp-0x8],rdi
  40a55c:	mov    DWORD PTR [rbp-0xc],esi
  40a55f:	mov    rdi,QWORD PTR [rbp-0x8]
  40a563:	mov    rdi,QWORD PTR [rdi+0x30]
  40a567:	movzx  esi,WORD PTR [rdi+0xe]
  40a56b:	cmp    esi,0x3
  40a56e:	jne    40a579 <flatcc_builder_table_add_offset@@Base+0x29>
  40a574:	jmp    40a598 <flatcc_builder_table_add_offset@@Base+0x48>
  40a579:	lea    rdi,[rip+0x3e21]        # 40e3a1 <flatcc_builder_padding_base@@Base+0xa41>
  40a580:	lea    rsi,[rip+0x35eb]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  40a587:	mov    edx,0x713
  40a58c:	lea    rcx,[rip+0x4502]        # 40ea95 <flatcc_builder_padding_base@@Base+0x1135>
  40a593:	call   403070 <__assert_fail@plt>
  40a598:	cmp    DWORD PTR [rbp-0xc],0x0
  40a59c:	jl     40a5b4 <flatcc_builder_table_add_offset@@Base+0x64>
  40a5a2:	cmp    DWORD PTR [rbp-0xc],0x7ffc
  40a5a9:	jg     40a5b4 <flatcc_builder_table_add_offset@@Base+0x64>
  40a5af:	jmp    40a5d3 <flatcc_builder_table_add_offset@@Base+0x83>
  40a5b4:	lea    rdi,[rip+0x445a]        # 40ea15 <flatcc_builder_padding_base@@Base+0x10b5>
  40a5bb:	lea    rsi,[rip+0x35b0]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  40a5c2:	mov    edx,0x714
  40a5c7:	lea    rcx,[rip+0x44c7]        # 40ea95 <flatcc_builder_padding_base@@Base+0x1135>
  40a5ce:	call   403070 <__assert_fail@plt>
  40a5d3:	mov    rax,QWORD PTR [rbp-0x8]
  40a5d7:	mov    rax,QWORD PTR [rax+0x8]
  40a5db:	movsxd rcx,DWORD PTR [rbp-0xc]
  40a5df:	movzx  edx,WORD PTR [rax+rcx*2]
  40a5e3:	cmp    edx,0x0
  40a5e6:	je     40a60b <flatcc_builder_table_add_offset@@Base+0xbb>
  40a5ec:	lea    rdi,[rip+0x473f]        # 40ed32 <flatcc_builder_padding_base@@Base+0x13d2>
  40a5f3:	lea    rsi,[rip+0x3578]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  40a5fa:	mov    edx,0x71b
  40a5ff:	lea    rcx,[rip+0x448f]        # 40ea95 <flatcc_builder_padding_base@@Base+0x1135>
  40a606:	call   403070 <__assert_fail@plt>
  40a60b:	mov    eax,DWORD PTR [rbp-0xc]
  40a60e:	mov    rcx,QWORD PTR [rbp-0x8]
  40a612:	xor    eax,DWORD PTR [rcx+0x14]
  40a615:	imul   eax,eax,0x9e3779b1
  40a61b:	xor    eax,0x4
  40a61e:	imul   eax,eax,0x9e3779b1
  40a624:	mov    rcx,QWORD PTR [rbp-0x8]
  40a628:	mov    DWORD PTR [rcx+0x14],eax
  40a62b:	mov    rdi,QWORD PTR [rbp-0x8]
  40a62f:	mov    eax,DWORD PTR [rbp-0xc]
  40a632:	mov    dx,ax
  40a635:	movzx  esi,dx
  40a638:	call   40b570 <flatcc_builder_table_add_copy@@Base+0x60>
  40a63d:	add    rsp,0x10
  40a641:	pop    rbp
  40a642:	ret    
  40a643:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a64d:	nop    DWORD PTR [rax]

000000000040a650 <flatcc_builder_table_add@@Base>:
  40a650:	push   rbp
  40a651:	mov    rbp,rsp
  40a654:	sub    rsp,0x20
  40a658:	mov    ax,cx
  40a65b:	mov    QWORD PTR [rbp-0x8],rdi
  40a65f:	mov    DWORD PTR [rbp-0xc],esi
  40a662:	mov    QWORD PTR [rbp-0x18],rdx
  40a666:	mov    WORD PTR [rbp-0x1a],ax
  40a66a:	mov    rdx,QWORD PTR [rbp-0x8]
  40a66e:	mov    rdx,QWORD PTR [rdx+0x30]
  40a672:	movzx  ecx,WORD PTR [rdx+0xe]
  40a676:	cmp    ecx,0x3
  40a679:	jne    40a684 <flatcc_builder_table_add@@Base+0x34>
  40a67f:	jmp    40a6a3 <flatcc_builder_table_add@@Base+0x53>
  40a684:	lea    rdi,[rip+0x3d16]        # 40e3a1 <flatcc_builder_padding_base@@Base+0xa41>
  40a68b:	lea    rsi,[rip+0x34e0]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  40a692:	mov    edx,0x6ed
  40a697:	lea    rcx,[rip+0x432d]        # 40e9cb <flatcc_builder_padding_base@@Base+0x106b>
  40a69e:	call   403070 <__assert_fail@plt>
  40a6a3:	cmp    DWORD PTR [rbp-0xc],0x0
  40a6a7:	jl     40a6bf <flatcc_builder_table_add@@Base+0x6f>
  40a6ad:	cmp    DWORD PTR [rbp-0xc],0x7ffc
  40a6b4:	jg     40a6bf <flatcc_builder_table_add@@Base+0x6f>
  40a6ba:	jmp    40a6de <flatcc_builder_table_add@@Base+0x8e>
  40a6bf:	lea    rdi,[rip+0x434f]        # 40ea15 <flatcc_builder_padding_base@@Base+0x10b5>
  40a6c6:	lea    rsi,[rip+0x34a5]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  40a6cd:	mov    edx,0x6ee
  40a6d2:	lea    rcx,[rip+0x42f2]        # 40e9cb <flatcc_builder_padding_base@@Base+0x106b>
  40a6d9:	call   403070 <__assert_fail@plt>
  40a6de:	movzx  eax,WORD PTR [rbp-0x1a]
  40a6e2:	mov    rcx,QWORD PTR [rbp-0x8]
  40a6e6:	movzx  edx,WORD PTR [rcx+0xea]
  40a6ed:	cmp    eax,edx
  40a6ef:	jle    40a704 <flatcc_builder_table_add@@Base+0xb4>
  40a6f5:	mov    ax,WORD PTR [rbp-0x1a]
  40a6f9:	mov    rcx,QWORD PTR [rbp-0x8]
  40a6fd:	mov    WORD PTR [rcx+0xea],ax
  40a704:	mov    rax,QWORD PTR [rbp-0x8]
  40a708:	mov    rax,QWORD PTR [rax+0x8]
  40a70c:	movsxd rcx,DWORD PTR [rbp-0xc]
  40a710:	movzx  edx,WORD PTR [rax+rcx*2]
  40a714:	cmp    edx,0x0
  40a717:	je     40a73c <flatcc_builder_table_add@@Base+0xec>
  40a71d:	lea    rdi,[rip+0x460e]        # 40ed32 <flatcc_builder_padding_base@@Base+0x13d2>
  40a724:	lea    rsi,[rip+0x3447]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  40a72b:	mov    edx,0x6f8
  40a730:	lea    rcx,[rip+0x4294]        # 40e9cb <flatcc_builder_padding_base@@Base+0x106b>
  40a737:	call   403070 <__assert_fail@plt>
  40a73c:	mov    eax,DWORD PTR [rbp-0xc]
  40a73f:	mov    rcx,QWORD PTR [rbp-0x8]
  40a743:	xor    eax,DWORD PTR [rcx+0x14]
  40a746:	imul   eax,eax,0x9e3779b1
  40a74c:	mov    rcx,QWORD PTR [rbp-0x18]
  40a750:	mov    edx,ecx
  40a752:	xor    eax,edx
  40a754:	imul   eax,eax,0x9e3779b1
  40a75a:	mov    rcx,QWORD PTR [rbp-0x8]
  40a75e:	mov    DWORD PTR [rcx+0x14],eax
  40a761:	mov    rdi,QWORD PTR [rbp-0x8]
  40a765:	mov    rcx,QWORD PTR [rbp-0x18]
  40a769:	mov    eax,ecx
  40a76b:	mov    si,WORD PTR [rbp-0x1a]
  40a76f:	mov    edx,DWORD PTR [rbp-0xc]
  40a772:	mov    r8w,dx
  40a776:	mov    WORD PTR [rbp-0x1c],si
  40a77a:	mov    esi,eax
  40a77c:	mov    r9w,WORD PTR [rbp-0x1c]
  40a781:	movzx  edx,r9w
  40a785:	movzx  ecx,r8w
  40a789:	call   40b390 <flatcc_builder_string_len@@Base+0x20>
  40a78e:	add    rsp,0x20
  40a792:	pop    rbp
  40a793:	ret    
  40a794:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a79e:	xchg   ax,ax
  40a7a0:	push   rbp
  40a7a1:	mov    rbp,rsp
  40a7a4:	mov    al,dil
  40a7a7:	mov    BYTE PTR [rbp-0x1],al
  40a7aa:	movzx  eax,BYTE PTR [rbp-0x1]
  40a7ae:	pop    rbp
  40a7af:	ret    

000000000040a7b0 <flatcc_builder_table_add_union_vector@@Base>:
  40a7b0:	push   rbp
  40a7b1:	mov    rbp,rsp
  40a7b4:	sub    rsp,0x30
  40a7b8:	mov    QWORD PTR [rbp-0x10],rdx
  40a7bc:	mov    QWORD PTR [rbp-0x18],rdi
  40a7c0:	mov    DWORD PTR [rbp-0x1c],esi
  40a7c3:	mov    rdx,QWORD PTR [rbp-0x18]
  40a7c7:	mov    rdx,QWORD PTR [rdx+0x30]
  40a7cb:	movzx  esi,WORD PTR [rdx+0xe]
  40a7cf:	cmp    esi,0x3
  40a7d2:	jne    40a7dd <flatcc_builder_table_add_union_vector@@Base+0x2d>
  40a7d8:	jmp    40a7fc <flatcc_builder_table_add_union_vector@@Base+0x4c>
  40a7dd:	lea    rdi,[rip+0x3bbd]        # 40e3a1 <flatcc_builder_padding_base@@Base+0xa41>
  40a7e4:	lea    rsi,[rip+0x3387]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  40a7eb:	mov    edx,0x600
  40a7f0:	lea    rcx,[rip+0x3f2c]        # 40e723 <flatcc_builder_padding_base@@Base+0xdc3>
  40a7f7:	call   403070 <__assert_fail@plt>
  40a7fc:	cmp    DWORD PTR [rbp-0x10],0x0
  40a800:	sete   al
  40a803:	and    al,0x1
  40a805:	movzx  ecx,al
  40a808:	cmp    DWORD PTR [rbp-0xc],0x0
  40a80c:	sete   al
  40a80f:	and    al,0x1
  40a811:	movzx  edx,al
  40a814:	cmp    ecx,edx
  40a816:	je     40a86c <flatcc_builder_table_add_union_vector@@Base+0xbc>
  40a81c:	cmp    DWORD PTR [rbp-0x10],0x0
  40a820:	sete   al
  40a823:	and    al,0x1
  40a825:	movzx  ecx,al
  40a828:	cmp    DWORD PTR [rbp-0xc],0x0
  40a82c:	sete   al
  40a82f:	and    al,0x1
  40a831:	movzx  edx,al
  40a834:	cmp    ecx,edx
  40a836:	jne    40a841 <flatcc_builder_table_add_union_vector@@Base+0x91>
  40a83c:	jmp    40a860 <flatcc_builder_table_add_union_vector@@Base+0xb0>
  40a841:	lea    rdi,[rip+0x3f3e]        # 40e786 <flatcc_builder_padding_base@@Base+0xe26>
  40a848:	lea    rsi,[rip+0x3323]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  40a84f:	mov    edx,0x601
  40a854:	lea    rcx,[rip+0x3ec8]        # 40e723 <flatcc_builder_padding_base@@Base+0xdc3>
  40a85b:	call   403070 <__assert_fail@plt>
  40a860:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40a867:	jmp    40a940 <flatcc_builder_table_add_union_vector@@Base+0x190>
  40a86c:	cmp    DWORD PTR [rbp-0x10],0x0
  40a870:	je     40a939 <flatcc_builder_table_add_union_vector@@Base+0x189>
  40a876:	mov    rdi,QWORD PTR [rbp-0x18]
  40a87a:	mov    eax,DWORD PTR [rbp-0x1c]
  40a87d:	sub    eax,0x1
  40a880:	mov    esi,eax
  40a882:	call   40a550 <flatcc_builder_table_add_offset@@Base>
  40a887:	mov    QWORD PTR [rbp-0x28],rax
  40a88b:	cmp    QWORD PTR [rbp-0x28],0x0
  40a890:	jne    40a8d1 <flatcc_builder_table_add_union_vector@@Base+0x121>
  40a896:	cmp    QWORD PTR [rbp-0x28],0x0
  40a89b:	je     40a8a6 <flatcc_builder_table_add_union_vector@@Base+0xf6>
  40a8a1:	jmp    40a8c5 <flatcc_builder_table_add_union_vector@@Base+0x115>
  40a8a6:	lea    rdi,[rip+0x3e60]        # 40e70d <flatcc_builder_padding_base@@Base+0xdad>
  40a8ad:	lea    rsi,[rip+0x32be]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  40a8b4:	mov    edx,0x604
  40a8b9:	lea    rcx,[rip+0x3e63]        # 40e723 <flatcc_builder_padding_base@@Base+0xdc3>
  40a8c0:	call   403070 <__assert_fail@plt>
  40a8c5:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40a8cc:	jmp    40a940 <flatcc_builder_table_add_union_vector@@Base+0x190>
  40a8d1:	mov    eax,DWORD PTR [rbp-0x10]
  40a8d4:	mov    rcx,QWORD PTR [rbp-0x28]
  40a8d8:	mov    DWORD PTR [rcx],eax
  40a8da:	mov    rdi,QWORD PTR [rbp-0x18]
  40a8de:	mov    esi,DWORD PTR [rbp-0x1c]
  40a8e1:	call   40a550 <flatcc_builder_table_add_offset@@Base>
  40a8e6:	mov    QWORD PTR [rbp-0x28],rax
  40a8ea:	cmp    QWORD PTR [rbp-0x28],0x0
  40a8ef:	jne    40a930 <flatcc_builder_table_add_union_vector@@Base+0x180>
  40a8f5:	cmp    QWORD PTR [rbp-0x28],0x0
  40a8fa:	je     40a905 <flatcc_builder_table_add_union_vector@@Base+0x155>
  40a900:	jmp    40a924 <flatcc_builder_table_add_union_vector@@Base+0x174>
  40a905:	lea    rdi,[rip+0x3e01]        # 40e70d <flatcc_builder_padding_base@@Base+0xdad>
  40a90c:	lea    rsi,[rip+0x325f]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  40a913:	mov    edx,0x608
  40a918:	lea    rcx,[rip+0x3e04]        # 40e723 <flatcc_builder_padding_base@@Base+0xdc3>
  40a91f:	call   403070 <__assert_fail@plt>
  40a924:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40a92b:	jmp    40a940 <flatcc_builder_table_add_union_vector@@Base+0x190>
  40a930:	mov    eax,DWORD PTR [rbp-0xc]
  40a933:	mov    rcx,QWORD PTR [rbp-0x28]
  40a937:	mov    DWORD PTR [rcx],eax
  40a939:	mov    DWORD PTR [rbp-0x4],0x0
  40a940:	mov    eax,DWORD PTR [rbp-0x4]
  40a943:	add    rsp,0x30
  40a947:	pop    rbp
  40a948:	ret    
  40a949:	nop    DWORD PTR [rax+0x0]

000000000040a950 <flatcc_builder_create_union_vector@@Base>:
  40a950:	push   rbp
  40a951:	mov    rbp,rsp
  40a954:	sub    rsp,0x40
  40a958:	xor    eax,eax
  40a95a:	mov    ecx,0x8
  40a95f:	mov    r8d,ecx
  40a962:	mov    QWORD PTR [rbp-0x10],rdi
  40a966:	mov    QWORD PTR [rbp-0x18],rsi
  40a96a:	mov    QWORD PTR [rbp-0x20],rdx
  40a96e:	lea    rdx,[rbp-0x8]
  40a972:	mov    rdi,rdx
  40a975:	mov    esi,eax
  40a977:	mov    rdx,r8
  40a97a:	call   403080 <memset@plt>
  40a97f:	mov    rdi,QWORD PTR [rbp-0x10]
  40a983:	call   408a00 <flatcc_builder_start_offset_vector@@Base>
  40a988:	cmp    eax,0x0
  40a98b:	je     40a996 <flatcc_builder_create_union_vector@@Base+0x46>
  40a991:	jmp    40aa6b <flatcc_builder_create_union_vector@@Base+0x11b>
  40a996:	mov    rdi,QWORD PTR [rbp-0x10]
  40a99a:	mov    rsi,QWORD PTR [rbp-0x20]
  40a99e:	call   4081e0 <flatcc_builder_extend_offset_vector@@Base>
  40a9a3:	xor    ecx,ecx
  40a9a5:	mov    esi,ecx
  40a9a7:	cmp    rsi,rax
  40a9aa:	jne    40a9b5 <flatcc_builder_create_union_vector@@Base+0x65>
  40a9b0:	jmp    40aa6b <flatcc_builder_create_union_vector@@Base+0x11b>
  40a9b5:	mov    rdi,QWORD PTR [rbp-0x10]
  40a9b9:	mov    rax,QWORD PTR [rbp-0x20]
  40a9bd:	shl    rax,0x0
  40a9c1:	mov    ecx,eax
  40a9c3:	mov    esi,ecx
  40a9c5:	call   407d70 <flatcc_builder_start_struct@@Base+0x100>
  40a9ca:	xor    ecx,ecx
  40a9cc:	mov    edi,ecx
  40a9ce:	mov    QWORD PTR [rbp-0x28],rax
  40a9d2:	cmp    rdi,rax
  40a9d5:	jne    40a9e0 <flatcc_builder_create_union_vector@@Base+0x90>
  40a9db:	jmp    40aa6b <flatcc_builder_create_union_vector@@Base+0x11b>
  40a9e0:	mov    rdi,QWORD PTR [rbp-0x10]
  40a9e4:	call   40a370 <flatcc_builder_offset_vector_edit@@Base>
  40a9e9:	mov    QWORD PTR [rbp-0x30],rax
  40a9ed:	mov    QWORD PTR [rbp-0x38],0x0
  40a9f5:	mov    rax,QWORD PTR [rbp-0x38]
  40a9f9:	cmp    rax,QWORD PTR [rbp-0x20]
  40a9fd:	jae    40aa41 <flatcc_builder_create_union_vector@@Base+0xf1>
  40aa03:	mov    rax,QWORD PTR [rbp-0x18]
  40aa07:	mov    rcx,QWORD PTR [rbp-0x38]
  40aa0b:	mov    dl,BYTE PTR [rax+rcx*8]
  40aa0e:	mov    rax,QWORD PTR [rbp-0x28]
  40aa12:	mov    rcx,QWORD PTR [rbp-0x38]
  40aa16:	mov    BYTE PTR [rax+rcx*1],dl
  40aa19:	mov    rax,QWORD PTR [rbp-0x18]
  40aa1d:	mov    rcx,QWORD PTR [rbp-0x38]
  40aa21:	mov    esi,DWORD PTR [rax+rcx*8+0x4]
  40aa25:	mov    rax,QWORD PTR [rbp-0x30]
  40aa29:	mov    rcx,QWORD PTR [rbp-0x38]
  40aa2d:	mov    DWORD PTR [rax+rcx*4],esi
  40aa30:	mov    rax,QWORD PTR [rbp-0x38]
  40aa34:	add    rax,0x1
  40aa38:	mov    QWORD PTR [rbp-0x38],rax
  40aa3c:	jmp    40a9f5 <flatcc_builder_create_union_vector@@Base+0xa5>
  40aa41:	mov    rdi,QWORD PTR [rbp-0x10]
  40aa45:	mov    rsi,QWORD PTR [rbp-0x28]
  40aa49:	mov    rdx,QWORD PTR [rbp-0x30]
  40aa4d:	mov    rcx,QWORD PTR [rbp-0x20]
  40aa51:	call   40aa80 <flatcc_builder_create_union_vector_direct@@Base>
  40aa56:	mov    QWORD PTR [rbp-0x40],rax
  40aa5a:	mov    rax,QWORD PTR [rbp-0x40]
  40aa5e:	mov    QWORD PTR [rbp-0x8],rax
  40aa62:	mov    rdi,QWORD PTR [rbp-0x10]
  40aa66:	call   407bb0 <flatcc_builder_end_buffer@@Base+0x160>
  40aa6b:	mov    rax,QWORD PTR [rbp-0x8]
  40aa6f:	add    rsp,0x40
  40aa73:	pop    rbp
  40aa74:	ret    
  40aa75:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40aa7f:	nop

000000000040aa80 <flatcc_builder_create_union_vector_direct@@Base>:
  40aa80:	push   rbp
  40aa81:	mov    rbp,rsp
  40aa84:	sub    rsp,0x30
  40aa88:	xor    eax,eax
  40aa8a:	mov    r8d,0x8
  40aa90:	mov    r9d,r8d
  40aa93:	mov    QWORD PTR [rbp-0x10],rdi
  40aa97:	mov    QWORD PTR [rbp-0x18],rsi
  40aa9b:	mov    QWORD PTR [rbp-0x20],rdx
  40aa9f:	mov    QWORD PTR [rbp-0x28],rcx
  40aaa3:	lea    rcx,[rbp-0x8]
  40aaa7:	mov    rdi,rcx
  40aaaa:	mov    esi,eax
  40aaac:	mov    rdx,r9
  40aaaf:	call   403080 <memset@plt>
  40aab4:	mov    rdi,QWORD PTR [rbp-0x10]
  40aab8:	mov    rsi,QWORD PTR [rbp-0x20]
  40aabc:	mov    rdx,QWORD PTR [rbp-0x28]
  40aac0:	mov    rcx,QWORD PTR [rbp-0x18]
  40aac4:	call   409f90 <flatcc_builder_create_offset_vector_direct@@Base+0x30>
  40aac9:	xor    r8d,r8d
  40aacc:	mov    DWORD PTR [rbp-0x4],eax
  40aacf:	cmp    r8d,eax
  40aad2:	jne    40aadd <flatcc_builder_create_union_vector_direct@@Base+0x5d>
  40aad8:	jmp    40ab1c <flatcc_builder_create_union_vector_direct@@Base+0x9c>
  40aadd:	mov    eax,0x1
  40aae2:	mov    ecx,eax
  40aae4:	mov    eax,0xffffffff
  40aae9:	mov    r9d,eax
  40aaec:	mov    rdi,QWORD PTR [rbp-0x10]
  40aaf0:	mov    rsi,QWORD PTR [rbp-0x18]
  40aaf4:	mov    rdx,QWORD PTR [rbp-0x28]
  40aaf8:	mov    r8d,0x1
  40aafe:	call   409c30 <flatcc_builder_create_vector@@Base>
  40ab03:	xor    r8d,r8d
  40ab06:	mov    DWORD PTR [rbp-0x8],eax
  40ab09:	cmp    r8d,eax
  40ab0c:	jne    40ab17 <flatcc_builder_create_union_vector_direct@@Base+0x97>
  40ab12:	jmp    40ab1c <flatcc_builder_create_union_vector_direct@@Base+0x9c>
  40ab17:	jmp    40ab1c <flatcc_builder_create_union_vector_direct@@Base+0x9c>
  40ab1c:	mov    rax,QWORD PTR [rbp-0x8]
  40ab20:	add    rsp,0x30
  40ab24:	pop    rbp
  40ab25:	ret    
  40ab26:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000040ab30 <flatcc_builder_start_union_vector@@Base>:
  40ab30:	push   rbp
  40ab31:	mov    rbp,rsp
  40ab34:	sub    rsp,0x10
  40ab38:	mov    QWORD PTR [rbp-0x10],rdi
  40ab3c:	mov    rdi,QWORD PTR [rbp-0x10]
  40ab40:	mov    esi,0x4
  40ab45:	call   407880 <flatcc_builder_start_buffer@@Base+0x170>
  40ab4a:	cmp    eax,0x0
  40ab4d:	je     40ab5f <flatcc_builder_start_union_vector@@Base+0x2f>
  40ab53:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40ab5a:	jmp    40aba0 <flatcc_builder_start_union_vector@@Base+0x70>
  40ab5f:	mov    rax,QWORD PTR [rbp-0x10]
  40ab63:	mov    rax,QWORD PTR [rax+0x30]
  40ab67:	mov    DWORD PTR [rax+0x10],0x8
  40ab6e:	mov    rax,QWORD PTR [rbp-0x10]
  40ab72:	mov    rax,QWORD PTR [rax+0x30]
  40ab76:	mov    DWORD PTR [rax+0x14],0x0
  40ab7d:	mov    rax,QWORD PTR [rbp-0x10]
  40ab81:	mov    rax,QWORD PTR [rax+0x30]
  40ab85:	mov    WORD PTR [rax+0xe],0x7
  40ab8b:	mov    rdi,QWORD PTR [rbp-0x10]
  40ab8f:	mov    esi,0xfffffffc
  40ab94:	call   407cf0 <flatcc_builder_start_struct@@Base+0x80>
  40ab99:	mov    DWORD PTR [rbp-0x4],0x0
  40aba0:	mov    eax,DWORD PTR [rbp-0x4]
  40aba3:	add    rsp,0x10
  40aba7:	pop    rbp
  40aba8:	ret    
  40aba9:	nop    DWORD PTR [rax+0x0]

000000000040abb0 <flatcc_builder_end_union_vector@@Base>:
  40abb0:	push   rbp
  40abb1:	mov    rbp,rsp
  40abb4:	sub    rsp,0x40
  40abb8:	xor    esi,esi
  40abba:	mov    eax,0x8
  40abbf:	mov    edx,eax
  40abc1:	mov    QWORD PTR [rbp-0x10],rdi
  40abc5:	lea    rdi,[rbp-0x8]
  40abc9:	call   403080 <memset@plt>
  40abce:	mov    rdx,QWORD PTR [rbp-0x10]
  40abd2:	mov    rdx,QWORD PTR [rdx+0x30]
  40abd6:	movzx  eax,WORD PTR [rdx+0xe]
  40abda:	cmp    eax,0x7
  40abdd:	jne    40abe8 <flatcc_builder_end_union_vector@@Base+0x38>
  40abe3:	jmp    40ac07 <flatcc_builder_end_union_vector@@Base+0x57>
  40abe8:	lea    rdi,[rip+0x3bbf]        # 40e7ae <flatcc_builder_padding_base@@Base+0xe4e>
  40abef:	lea    rsi,[rip+0x2f7c]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  40abf6:	mov    edx,0x651
  40abfb:	lea    rcx,[rip+0x3bde]        # 40e7e0 <flatcc_builder_padding_base@@Base+0xe80>
  40ac02:	call   403070 <__assert_fail@plt>
  40ac07:	mov    rdi,QWORD PTR [rbp-0x10]
  40ac0b:	call   40acf0 <flatcc_builder_union_vector_count@@Base>
  40ac10:	mov    QWORD PTR [rbp-0x38],rax
  40ac14:	mov    rdi,QWORD PTR [rbp-0x10]
  40ac18:	imul   rax,QWORD PTR [rbp-0x38],0x5
  40ac1d:	mov    ecx,eax
  40ac1f:	mov    esi,ecx
  40ac21:	call   407d70 <flatcc_builder_start_struct@@Base+0x100>
  40ac26:	xor    ecx,ecx
  40ac28:	mov    edi,ecx
  40ac2a:	mov    QWORD PTR [rbp-0x28],rax
  40ac2e:	cmp    rdi,rax
  40ac31:	jne    40ac3c <flatcc_builder_end_union_vector@@Base+0x8c>
  40ac37:	jmp    40acda <flatcc_builder_end_union_vector@@Base+0x12a>
  40ac3c:	mov    rax,QWORD PTR [rbp-0x28]
  40ac40:	mov    rcx,QWORD PTR [rbp-0x38]
  40ac44:	shl    rcx,0x2
  40ac48:	add    rax,rcx
  40ac4b:	mov    QWORD PTR [rbp-0x18],rax
  40ac4f:	mov    rdi,QWORD PTR [rbp-0x10]
  40ac53:	call   40ad10 <flatcc_builder_union_vector_edit@@Base>
  40ac58:	mov    QWORD PTR [rbp-0x20],rax
  40ac5c:	mov    QWORD PTR [rbp-0x30],0x0
  40ac64:	mov    rax,QWORD PTR [rbp-0x30]
  40ac68:	cmp    rax,QWORD PTR [rbp-0x38]
  40ac6c:	jae    40acb0 <flatcc_builder_end_union_vector@@Base+0x100>
  40ac72:	mov    rax,QWORD PTR [rbp-0x20]
  40ac76:	mov    rcx,QWORD PTR [rbp-0x30]
  40ac7a:	mov    dl,BYTE PTR [rax+rcx*8]
  40ac7d:	mov    rax,QWORD PTR [rbp-0x18]
  40ac81:	mov    rcx,QWORD PTR [rbp-0x30]
  40ac85:	mov    BYTE PTR [rax+rcx*1],dl
  40ac88:	mov    rax,QWORD PTR [rbp-0x20]
  40ac8c:	mov    rcx,QWORD PTR [rbp-0x30]
  40ac90:	mov    esi,DWORD PTR [rax+rcx*8+0x4]
  40ac94:	mov    rax,QWORD PTR [rbp-0x28]
  40ac98:	mov    rcx,QWORD PTR [rbp-0x30]
  40ac9c:	mov    DWORD PTR [rax+rcx*4],esi
  40ac9f:	mov    rax,QWORD PTR [rbp-0x30]
  40aca3:	add    rax,0x1
  40aca7:	mov    QWORD PTR [rbp-0x30],rax
  40acab:	jmp    40ac64 <flatcc_builder_end_union_vector@@Base+0xb4>
  40acb0:	mov    rdi,QWORD PTR [rbp-0x10]
  40acb4:	mov    rsi,QWORD PTR [rbp-0x18]
  40acb8:	mov    rdx,QWORD PTR [rbp-0x28]
  40acbc:	mov    rcx,QWORD PTR [rbp-0x38]
  40acc0:	call   40aa80 <flatcc_builder_create_union_vector_direct@@Base>
  40acc5:	mov    QWORD PTR [rbp-0x40],rax
  40acc9:	mov    rax,QWORD PTR [rbp-0x40]
  40accd:	mov    QWORD PTR [rbp-0x8],rax
  40acd1:	mov    rdi,QWORD PTR [rbp-0x10]
  40acd5:	call   407bb0 <flatcc_builder_end_buffer@@Base+0x160>
  40acda:	mov    rax,QWORD PTR [rbp-0x8]
  40acde:	add    rsp,0x40
  40ace2:	pop    rbp
  40ace3:	ret    
  40ace4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40acee:	xchg   ax,ax

000000000040acf0 <flatcc_builder_union_vector_count@@Base>:
  40acf0:	push   rbp
  40acf1:	mov    rbp,rsp
  40acf4:	mov    QWORD PTR [rbp-0x8],rdi
  40acf8:	mov    rdi,QWORD PTR [rbp-0x8]
  40acfc:	mov    rdi,QWORD PTR [rdi+0x30]
  40ad00:	mov    eax,DWORD PTR [rdi+0x14]
  40ad03:	pop    rbp
  40ad04:	ret    
  40ad05:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ad0f:	nop

000000000040ad10 <flatcc_builder_union_vector_edit@@Base>:
  40ad10:	push   rbp
  40ad11:	mov    rbp,rsp
  40ad14:	mov    QWORD PTR [rbp-0x8],rdi
  40ad18:	mov    rdi,QWORD PTR [rbp-0x8]
  40ad1c:	mov    rax,QWORD PTR [rdi+0x18]
  40ad20:	pop    rbp
  40ad21:	ret    
  40ad22:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ad2c:	nop    DWORD PTR [rax+0x0]

000000000040ad30 <flatcc_builder_extend_union_vector@@Base>:
  40ad30:	push   rbp
  40ad31:	mov    rbp,rsp
  40ad34:	sub    rsp,0x20
  40ad38:	mov    QWORD PTR [rbp-0x10],rdi
  40ad3c:	mov    QWORD PTR [rbp-0x18],rsi
  40ad40:	mov    rdi,QWORD PTR [rbp-0x10]
  40ad44:	mov    rsi,QWORD PTR [rbp-0x18]
  40ad48:	mov    eax,esi
  40ad4a:	mov    esi,eax
  40ad4c:	mov    edx,0x1fffffff
  40ad51:	call   407f30 <flatcc_builder_extend_vector@@Base+0x70>
  40ad56:	cmp    eax,0x0
  40ad59:	je     40ad6c <flatcc_builder_extend_union_vector@@Base+0x3c>
  40ad5f:	mov    QWORD PTR [rbp-0x8],0x0
  40ad67:	jmp    40ad8b <flatcc_builder_extend_union_vector@@Base+0x5b>
  40ad6c:	mov    rdi,QWORD PTR [rbp-0x10]
  40ad70:	mov    rax,QWORD PTR [rbp-0x18]
  40ad74:	mov    ecx,eax
  40ad76:	mov    ecx,ecx
  40ad78:	mov    eax,ecx
  40ad7a:	shl    rax,0x3
  40ad7e:	mov    ecx,eax
  40ad80:	mov    esi,ecx
  40ad82:	call   407d70 <flatcc_builder_start_struct@@Base+0x100>
  40ad87:	mov    QWORD PTR [rbp-0x8],rax
  40ad8b:	mov    rax,QWORD PTR [rbp-0x8]
  40ad8f:	add    rsp,0x20
  40ad93:	pop    rbp
  40ad94:	ret    
  40ad95:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ad9f:	nop

000000000040ada0 <flatcc_builder_truncate_union_vector@@Base>:
  40ada0:	push   rbp
  40ada1:	mov    rbp,rsp
  40ada4:	sub    rsp,0x20
  40ada8:	mov    QWORD PTR [rbp-0x10],rdi
  40adac:	mov    QWORD PTR [rbp-0x18],rsi
  40adb0:	mov    rsi,QWORD PTR [rbp-0x10]
  40adb4:	mov    rsi,QWORD PTR [rsi+0x30]
  40adb8:	movzx  eax,WORD PTR [rsi+0xe]
  40adbc:	cmp    eax,0x7
  40adbf:	jne    40adca <flatcc_builder_truncate_union_vector@@Base+0x2a>
  40adc5:	jmp    40ade9 <flatcc_builder_truncate_union_vector@@Base+0x49>
  40adca:	lea    rdi,[rip+0x39dd]        # 40e7ae <flatcc_builder_padding_base@@Base+0xe4e>
  40add1:	lea    rsi,[rip+0x2d9a]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  40add8:	mov    edx,0x681
  40addd:	lea    rcx,[rip+0x3a4f]        # 40e833 <flatcc_builder_padding_base@@Base+0xed3>
  40ade4:	call   403070 <__assert_fail@plt>
  40ade9:	mov    rax,QWORD PTR [rbp-0x10]
  40aded:	mov    rax,QWORD PTR [rax+0x30]
  40adf1:	mov    ecx,DWORD PTR [rax+0x14]
  40adf4:	mov    rax,QWORD PTR [rbp-0x18]
  40adf8:	mov    edx,eax
  40adfa:	cmp    ecx,edx
  40adfc:	jae    40ae4b <flatcc_builder_truncate_union_vector@@Base+0xab>
  40ae02:	mov    rax,QWORD PTR [rbp-0x10]
  40ae06:	mov    rax,QWORD PTR [rax+0x30]
  40ae0a:	mov    ecx,DWORD PTR [rax+0x14]
  40ae0d:	mov    rax,QWORD PTR [rbp-0x18]
  40ae11:	mov    edx,eax
  40ae13:	cmp    ecx,edx
  40ae15:	jb     40ae20 <flatcc_builder_truncate_union_vector@@Base+0x80>
  40ae1b:	jmp    40ae3f <flatcc_builder_truncate_union_vector@@Base+0x9f>
  40ae20:	lea    rdi,[rip+0x33eb]        # 40e212 <flatcc_builder_padding_base@@Base+0x8b2>
  40ae27:	lea    rsi,[rip+0x2d44]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  40ae2e:	mov    edx,0x682
  40ae33:	lea    rcx,[rip+0x39f9]        # 40e833 <flatcc_builder_padding_base@@Base+0xed3>
  40ae3a:	call   403070 <__assert_fail@plt>
  40ae3f:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40ae46:	jmp    40ae87 <flatcc_builder_truncate_union_vector@@Base+0xe7>
  40ae4b:	mov    rax,QWORD PTR [rbp-0x18]
  40ae4f:	mov    ecx,eax
  40ae51:	mov    rax,QWORD PTR [rbp-0x10]
  40ae55:	mov    rax,QWORD PTR [rax+0x30]
  40ae59:	mov    edx,DWORD PTR [rax+0x14]
  40ae5c:	sub    edx,ecx
  40ae5e:	mov    DWORD PTR [rax+0x14],edx
  40ae61:	mov    rdi,QWORD PTR [rbp-0x10]
  40ae65:	mov    rax,QWORD PTR [rbp-0x10]
  40ae69:	mov    rax,QWORD PTR [rax+0x30]
  40ae6d:	mov    ecx,DWORD PTR [rax+0x10]
  40ae70:	mov    rax,QWORD PTR [rbp-0x18]
  40ae74:	mov    edx,eax
  40ae76:	imul   ecx,edx
  40ae79:	mov    esi,ecx
  40ae7b:	call   408700 <flatcc_builder_truncate_vector@@Base+0xf0>
  40ae80:	mov    DWORD PTR [rbp-0x4],0x0
  40ae87:	mov    eax,DWORD PTR [rbp-0x4]
  40ae8a:	add    rsp,0x20
  40ae8e:	pop    rbp
  40ae8f:	ret    

000000000040ae90 <flatcc_builder_union_vector_push@@Base>:
  40ae90:	push   rbp
  40ae91:	mov    rbp,rsp
  40ae94:	sub    rsp,0x20
  40ae98:	mov    QWORD PTR [rbp-0x10],rsi
  40ae9c:	mov    QWORD PTR [rbp-0x18],rdi
  40aea0:	mov    rsi,QWORD PTR [rbp-0x18]
  40aea4:	mov    rsi,QWORD PTR [rsi+0x30]
  40aea8:	movzx  eax,WORD PTR [rsi+0xe]
  40aeac:	cmp    eax,0x7
  40aeaf:	jne    40aeba <flatcc_builder_union_vector_push@@Base+0x2a>
  40aeb5:	jmp    40aed9 <flatcc_builder_union_vector_push@@Base+0x49>
  40aeba:	lea    rdi,[rip+0x38ed]        # 40e7ae <flatcc_builder_padding_base@@Base+0xe4e>
  40aec1:	lea    rsi,[rip+0x2caa]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  40aec8:	mov    edx,0x68d
  40aecd:	lea    rcx,[rip+0x39a4]        # 40e878 <flatcc_builder_padding_base@@Base+0xf18>
  40aed4:	call   403070 <__assert_fail@plt>
  40aed9:	mov    rax,QWORD PTR [rbp-0x18]
  40aedd:	mov    rax,QWORD PTR [rax+0x30]
  40aee1:	mov    ecx,DWORD PTR [rax+0x14]
  40aee4:	mov    eax,ecx
  40aee6:	cmp    rax,0x1fffffff
  40aeec:	jne    40aeff <flatcc_builder_union_vector_push@@Base+0x6f>
  40aef2:	mov    QWORD PTR [rbp-0x8],0x0
  40aefa:	jmp    40af4f <flatcc_builder_union_vector_push@@Base+0xbf>
  40aeff:	mov    rax,QWORD PTR [rbp-0x18]
  40af03:	mov    rax,QWORD PTR [rax+0x30]
  40af07:	mov    ecx,DWORD PTR [rax+0x14]
  40af0a:	add    ecx,0x1
  40af0d:	mov    DWORD PTR [rax+0x14],ecx
  40af10:	mov    rdi,QWORD PTR [rbp-0x18]
  40af14:	mov    esi,0x8
  40af19:	call   407d70 <flatcc_builder_start_struct@@Base+0x100>
  40af1e:	xor    ecx,ecx
  40af20:	mov    edi,ecx
  40af22:	mov    QWORD PTR [rbp-0x20],rax
  40af26:	cmp    rdi,rax
  40af29:	jne    40af3c <flatcc_builder_union_vector_push@@Base+0xac>
  40af2f:	mov    QWORD PTR [rbp-0x8],0x0
  40af37:	jmp    40af4f <flatcc_builder_union_vector_push@@Base+0xbf>
  40af3c:	mov    rax,QWORD PTR [rbp-0x20]
  40af40:	mov    rcx,QWORD PTR [rbp-0x10]
  40af44:	mov    QWORD PTR [rax],rcx
  40af47:	mov    rax,QWORD PTR [rbp-0x20]
  40af4b:	mov    QWORD PTR [rbp-0x8],rax
  40af4f:	mov    rax,QWORD PTR [rbp-0x8]
  40af53:	add    rsp,0x20
  40af57:	pop    rbp
  40af58:	ret    
  40af59:	nop    DWORD PTR [rax+0x0]

000000000040af60 <flatcc_builder_append_union_vector@@Base>:
  40af60:	push   rbp
  40af61:	mov    rbp,rsp
  40af64:	sub    rsp,0x20
  40af68:	mov    QWORD PTR [rbp-0x10],rdi
  40af6c:	mov    QWORD PTR [rbp-0x18],rsi
  40af70:	mov    QWORD PTR [rbp-0x20],rdx
  40af74:	mov    rdx,QWORD PTR [rbp-0x10]
  40af78:	mov    rdx,QWORD PTR [rdx+0x30]
  40af7c:	movzx  eax,WORD PTR [rdx+0xe]
  40af80:	cmp    eax,0x7
  40af83:	jne    40af8e <flatcc_builder_append_union_vector@@Base+0x2e>
  40af89:	jmp    40afad <flatcc_builder_append_union_vector@@Base+0x4d>
  40af8e:	lea    rdi,[rip+0x3819]        # 40e7ae <flatcc_builder_padding_base@@Base+0xe4e>
  40af95:	lea    rsi,[rip+0x2bd6]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  40af9c:	mov    edx,0x69c
  40afa1:	lea    rcx,[rip+0x393d]        # 40e8e5 <flatcc_builder_padding_base@@Base+0xf85>
  40afa8:	call   403070 <__assert_fail@plt>
  40afad:	mov    rdi,QWORD PTR [rbp-0x10]
  40afb1:	mov    rax,QWORD PTR [rbp-0x20]
  40afb5:	mov    ecx,eax
  40afb7:	mov    esi,ecx
  40afb9:	mov    edx,0x1fffffff
  40afbe:	call   407f30 <flatcc_builder_extend_vector@@Base+0x70>
  40afc3:	cmp    eax,0x0
  40afc6:	je     40afd9 <flatcc_builder_append_union_vector@@Base+0x79>
  40afcc:	mov    QWORD PTR [rbp-0x8],0x0
  40afd4:	jmp    40affd <flatcc_builder_append_union_vector@@Base+0x9d>
  40afd9:	mov    rdi,QWORD PTR [rbp-0x10]
  40afdd:	mov    rax,QWORD PTR [rbp-0x18]
  40afe1:	mov    rcx,QWORD PTR [rbp-0x20]
  40afe5:	mov    edx,ecx
  40afe7:	mov    edx,edx
  40afe9:	mov    ecx,edx
  40afeb:	shl    rcx,0x3
  40afef:	mov    edx,ecx
  40aff1:	mov    rsi,rax
  40aff4:	call   4080d0 <flatcc_builder_vector_push@@Base+0xf0>
  40aff9:	mov    QWORD PTR [rbp-0x8],rax
  40affd:	mov    rax,QWORD PTR [rbp-0x8]
  40b001:	add    rsp,0x20
  40b005:	pop    rbp
  40b006:	ret    
  40b007:	nop    WORD PTR [rax+rax*1+0x0]

000000000040b010 <flatcc_builder_create_string@@Base>:
  40b010:	push   rbp
  40b011:	mov    rbp,rsp
  40b014:	sub    rsp,0xc0
  40b01b:	mov    eax,0xffffffff
  40b020:	mov    ecx,eax
  40b022:	mov    QWORD PTR [rbp-0x10],rdi
  40b026:	mov    QWORD PTR [rbp-0x18],rsi
  40b02a:	mov    QWORD PTR [rbp-0x20],rdx
  40b02e:	cmp    QWORD PTR [rbp-0x20],rcx
  40b032:	jbe    40b044 <flatcc_builder_create_string@@Base+0x34>
  40b038:	mov    DWORD PTR [rbp-0x4],0x0
  40b03f:	jmp    40b1cf <flatcc_builder_create_string@@Base+0x1bf>
  40b044:	mov    rax,QWORD PTR [rbp-0x20]
  40b048:	mov    ecx,eax
  40b04a:	mov    edi,ecx
  40b04c:	call   407020 <flatcc_builder_embed_buffer@@Base+0x420>
  40b051:	mov    DWORD PTR [rbp-0x28],eax
  40b054:	mov    rdi,QWORD PTR [rbp-0x10]
  40b058:	mov    rdx,QWORD PTR [rbp-0x20]
  40b05c:	mov    eax,edx
  40b05e:	add    eax,0x1
  40b061:	mov    esi,eax
  40b063:	mov    edx,0x4
  40b068:	call   406ff0 <flatcc_builder_embed_buffer@@Base+0x3f0>
  40b06d:	add    eax,0x1
  40b070:	mov    DWORD PTR [rbp-0x24],eax
  40b073:	mov    QWORD PTR [rbp-0xb8],0x0
  40b07e:	mov    DWORD PTR [rbp-0xb0],0x0
  40b088:	mov    rdi,QWORD PTR [rbp-0xb8]
  40b08f:	add    rdi,0x4
  40b093:	mov    QWORD PTR [rbp-0xb8],rdi
  40b09a:	lea    rdi,[rbp-0x28]
  40b09e:	lea    r8,[rbp-0xb8]
  40b0a5:	mov    r9,r8
  40b0a8:	add    r9,0x10
  40b0ac:	movsxd r10,DWORD PTR [rbp-0xb0]
  40b0b3:	shl    r10,0x4
  40b0b7:	add    r9,r10
  40b0ba:	mov    QWORD PTR [r9],rdi
  40b0bd:	add    r8,0x10
  40b0c1:	movsxd rdi,DWORD PTR [rbp-0xb0]
  40b0c8:	shl    rdi,0x4
  40b0cc:	add    r8,rdi
  40b0cf:	mov    QWORD PTR [r8+0x8],0x4
  40b0d7:	mov    eax,DWORD PTR [rbp-0xb0]
  40b0dd:	add    eax,0x1
  40b0e0:	mov    DWORD PTR [rbp-0xb0],eax
  40b0e6:	cmp    QWORD PTR [rbp-0x20],0x0
  40b0eb:	jbe    40b14f <flatcc_builder_create_string@@Base+0x13f>
  40b0f1:	mov    rax,QWORD PTR [rbp-0x20]
  40b0f5:	add    rax,QWORD PTR [rbp-0xb8]
  40b0fc:	mov    QWORD PTR [rbp-0xb8],rax
  40b103:	mov    rax,QWORD PTR [rbp-0x18]
  40b107:	lea    rcx,[rbp-0xb8]
  40b10e:	mov    rdx,rcx
  40b111:	add    rdx,0x10
  40b115:	movsxd rsi,DWORD PTR [rbp-0xb0]
  40b11c:	shl    rsi,0x4
  40b120:	add    rdx,rsi
  40b123:	mov    QWORD PTR [rdx],rax
  40b126:	mov    rax,QWORD PTR [rbp-0x20]
  40b12a:	add    rcx,0x10
  40b12e:	movsxd rdx,DWORD PTR [rbp-0xb0]
  40b135:	shl    rdx,0x4
  40b139:	add    rcx,rdx
  40b13c:	mov    QWORD PTR [rcx+0x8],rax
  40b140:	mov    edi,DWORD PTR [rbp-0xb0]
  40b146:	add    edi,0x1
  40b149:	mov    DWORD PTR [rbp-0xb0],edi
  40b14f:	cmp    DWORD PTR [rbp-0x24],0x0
  40b153:	jbe    40b1bc <flatcc_builder_create_string@@Base+0x1ac>
  40b159:	lea    rax,[rip+0x2800]        # 40d960 <flatcc_builder_padding_base@@Base>
  40b160:	mov    ecx,DWORD PTR [rbp-0x24]
  40b163:	mov    edx,ecx
  40b165:	add    rdx,QWORD PTR [rbp-0xb8]
  40b16c:	mov    QWORD PTR [rbp-0xb8],rdx
  40b173:	lea    rdx,[rbp-0xb8]
  40b17a:	mov    rsi,rdx
  40b17d:	add    rsi,0x10
  40b181:	movsxd rdi,DWORD PTR [rbp-0xb0]
  40b188:	shl    rdi,0x4
  40b18c:	add    rsi,rdi
  40b18f:	mov    QWORD PTR [rsi],rax
  40b192:	mov    ecx,DWORD PTR [rbp-0x24]
  40b195:	mov    eax,ecx
  40b197:	add    rdx,0x10
  40b19b:	movsxd rsi,DWORD PTR [rbp-0xb0]
  40b1a2:	shl    rsi,0x4
  40b1a6:	add    rdx,rsi
  40b1a9:	mov    QWORD PTR [rdx+0x8],rax
  40b1ad:	mov    ecx,DWORD PTR [rbp-0xb0]
  40b1b3:	add    ecx,0x1
  40b1b6:	mov    DWORD PTR [rbp-0xb0],ecx
  40b1bc:	mov    rdi,QWORD PTR [rbp-0x10]
  40b1c0:	lea    rsi,[rbp-0xb8]
  40b1c7:	call   407030 <flatcc_builder_embed_buffer@@Base+0x430>
  40b1cc:	mov    DWORD PTR [rbp-0x4],eax
  40b1cf:	mov    eax,DWORD PTR [rbp-0x4]
  40b1d2:	add    rsp,0xc0
  40b1d9:	pop    rbp
  40b1da:	ret    
  40b1db:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040b1e0 <flatcc_builder_create_string_str@@Base>:
  40b1e0:	push   rbp
  40b1e1:	mov    rbp,rsp
  40b1e4:	sub    rsp,0x20
  40b1e8:	mov    QWORD PTR [rbp-0x8],rdi
  40b1ec:	mov    QWORD PTR [rbp-0x10],rsi
  40b1f0:	mov    rdi,QWORD PTR [rbp-0x8]
  40b1f4:	mov    rsi,QWORD PTR [rbp-0x10]
  40b1f8:	mov    rax,QWORD PTR [rbp-0x10]
  40b1fc:	mov    QWORD PTR [rbp-0x18],rdi
  40b200:	mov    rdi,rax
  40b203:	mov    QWORD PTR [rbp-0x20],rsi
  40b207:	call   403050 <strlen@plt>
  40b20c:	mov    rdi,QWORD PTR [rbp-0x18]
  40b210:	mov    rsi,QWORD PTR [rbp-0x20]
  40b214:	mov    rdx,rax
  40b217:	call   40b010 <flatcc_builder_create_string@@Base>
  40b21c:	add    rsp,0x20
  40b220:	pop    rbp
  40b221:	ret    
  40b222:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b22c:	nop    DWORD PTR [rax+0x0]

000000000040b230 <flatcc_builder_create_string_strn@@Base>:
  40b230:	push   rbp
  40b231:	mov    rbp,rsp
  40b234:	sub    rsp,0x30
  40b238:	mov    QWORD PTR [rbp-0x8],rdi
  40b23c:	mov    QWORD PTR [rbp-0x10],rsi
  40b240:	mov    QWORD PTR [rbp-0x18],rdx
  40b244:	mov    rdi,QWORD PTR [rbp-0x8]
  40b248:	mov    rsi,QWORD PTR [rbp-0x10]
  40b24c:	mov    rdx,QWORD PTR [rbp-0x10]
  40b250:	mov    rax,QWORD PTR [rbp-0x18]
  40b254:	mov    QWORD PTR [rbp-0x20],rdi
  40b258:	mov    rdi,rdx
  40b25b:	mov    QWORD PTR [rbp-0x28],rsi
  40b25f:	mov    rsi,rax
  40b262:	call   4085b0 <flatcc_builder_append_string_strn@@Base+0x50>
  40b267:	mov    rdi,QWORD PTR [rbp-0x20]
  40b26b:	mov    rsi,QWORD PTR [rbp-0x28]
  40b26f:	mov    rdx,rax
  40b272:	call   40b010 <flatcc_builder_create_string@@Base>
  40b277:	add    rsp,0x30
  40b27b:	pop    rbp
  40b27c:	ret    
  40b27d:	nop    DWORD PTR [rax]

000000000040b280 <flatcc_builder_end_string@@Base>:
  40b280:	push   rbp
  40b281:	mov    rbp,rsp
  40b284:	sub    rsp,0x20
  40b288:	mov    QWORD PTR [rbp-0x10],rdi
  40b28c:	mov    rdi,QWORD PTR [rbp-0x10]
  40b290:	mov    rdi,QWORD PTR [rdi+0x30]
  40b294:	movzx  eax,WORD PTR [rdi+0xe]
  40b298:	cmp    eax,0x6
  40b29b:	jne    40b2a6 <flatcc_builder_end_string@@Base+0x26>
  40b2a1:	jmp    40b2c5 <flatcc_builder_end_string@@Base+0x45>
  40b2a6:	lea    rdi,[rip+0x2e04]        # 40e0b1 <flatcc_builder_padding_base@@Base+0x751>
  40b2ad:	lea    rsi,[rip+0x28be]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  40b2b4:	mov    edx,0x6c4
  40b2b9:	lea    rcx,[rip+0x36a4]        # 40e964 <flatcc_builder_padding_base@@Base+0x1004>
  40b2c0:	call   403070 <__assert_fail@plt>
  40b2c5:	mov    rax,QWORD PTR [rbp-0x10]
  40b2c9:	mov    rax,QWORD PTR [rax+0x30]
  40b2cd:	mov    ecx,DWORD PTR [rax+0x14]
  40b2d0:	mov    rax,QWORD PTR [rbp-0x10]
  40b2d4:	cmp    ecx,DWORD PTR [rax+0x20]
  40b2d7:	jne    40b2e2 <flatcc_builder_end_string@@Base+0x62>
  40b2dd:	jmp    40b301 <flatcc_builder_end_string@@Base+0x81>
  40b2e2:	lea    rdi,[rip+0x36be]        # 40e9a7 <flatcc_builder_padding_base@@Base+0x1047>
  40b2e9:	lea    rsi,[rip+0x2882]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  40b2f0:	mov    edx,0x6c5
  40b2f5:	lea    rcx,[rip+0x3668]        # 40e964 <flatcc_builder_padding_base@@Base+0x1004>
  40b2fc:	call   403070 <__assert_fail@plt>
  40b301:	mov    rdi,QWORD PTR [rbp-0x10]
  40b305:	mov    rax,QWORD PTR [rbp-0x10]
  40b309:	mov    rsi,QWORD PTR [rax+0x18]
  40b30d:	mov    rax,QWORD PTR [rbp-0x10]
  40b311:	mov    ecx,DWORD PTR [rax+0x20]
  40b314:	mov    edx,ecx
  40b316:	call   40b010 <flatcc_builder_create_string@@Base>
  40b31b:	xor    ecx,ecx
  40b31d:	mov    DWORD PTR [rbp-0x14],eax
  40b320:	cmp    ecx,eax
  40b322:	jne    40b334 <flatcc_builder_end_string@@Base+0xb4>
  40b328:	mov    DWORD PTR [rbp-0x4],0x0
  40b32f:	jmp    40b343 <flatcc_builder_end_string@@Base+0xc3>
  40b334:	mov    rdi,QWORD PTR [rbp-0x10]
  40b338:	call   407bb0 <flatcc_builder_end_buffer@@Base+0x160>
  40b33d:	mov    eax,DWORD PTR [rbp-0x14]
  40b340:	mov    DWORD PTR [rbp-0x4],eax
  40b343:	mov    eax,DWORD PTR [rbp-0x4]
  40b346:	add    rsp,0x20
  40b34a:	pop    rbp
  40b34b:	ret    
  40b34c:	nop    DWORD PTR [rax+0x0]

000000000040b350 <flatcc_builder_string_edit@@Base>:
  40b350:	push   rbp
  40b351:	mov    rbp,rsp
  40b354:	mov    QWORD PTR [rbp-0x8],rdi
  40b358:	mov    rdi,QWORD PTR [rbp-0x8]
  40b35c:	mov    rax,QWORD PTR [rdi+0x18]
  40b360:	pop    rbp
  40b361:	ret    
  40b362:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b36c:	nop    DWORD PTR [rax+0x0]

000000000040b370 <flatcc_builder_string_len@@Base>:
  40b370:	push   rbp
  40b371:	mov    rbp,rsp
  40b374:	mov    QWORD PTR [rbp-0x8],rdi
  40b378:	mov    rdi,QWORD PTR [rbp-0x8]
  40b37c:	mov    rdi,QWORD PTR [rdi+0x30]
  40b380:	mov    eax,DWORD PTR [rdi+0x14]
  40b383:	pop    rbp
  40b384:	ret    
  40b385:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b38f:	nop
  40b390:	push   rbp
  40b391:	mov    rbp,rsp
  40b394:	sub    rsp,0x20
  40b398:	mov    ax,cx
  40b39b:	mov    r8w,dx
  40b39f:	mov    QWORD PTR [rbp-0x10],rdi
  40b3a3:	mov    DWORD PTR [rbp-0x14],esi
  40b3a6:	mov    WORD PTR [rbp-0x16],r8w
  40b3ab:	mov    WORD PTR [rbp-0x18],ax
  40b3af:	mov    rdi,QWORD PTR [rbp-0x10]
  40b3b3:	mov    ecx,DWORD PTR [rdi+0x20]
  40b3b6:	movzx  edx,WORD PTR [rbp-0x16]
  40b3ba:	add    ecx,edx
  40b3bc:	sub    ecx,0x1
  40b3bf:	movzx  edx,WORD PTR [rbp-0x16]
  40b3c3:	sub    edx,0x1
  40b3c6:	xor    edx,0xffffffff
  40b3c9:	and    ecx,edx
  40b3cb:	mov    DWORD PTR [rbp-0x1c],ecx
  40b3ce:	mov    ecx,DWORD PTR [rbp-0x1c]
  40b3d1:	add    ecx,DWORD PTR [rbp-0x14]
  40b3d4:	mov    rdi,QWORD PTR [rbp-0x10]
  40b3d8:	mov    DWORD PTR [rdi+0x20],ecx
  40b3db:	mov    rdi,QWORD PTR [rbp-0x10]
  40b3df:	cmp    ecx,DWORD PTR [rdi+0x24]
  40b3e2:	jb     40b41f <flatcc_builder_string_len@@Base+0xaf>
  40b3e8:	mov    rdi,QWORD PTR [rbp-0x10]
  40b3ec:	mov    rax,QWORD PTR [rbp-0x10]
  40b3f0:	mov    ecx,DWORD PTR [rax+0x20]
  40b3f3:	add    ecx,0x1
  40b3f6:	mov    ecx,ecx
  40b3f8:	mov    esi,ecx
  40b3fa:	mov    edx,0xfffc
  40b3ff:	call   40bd90 <flatcc_builder_get_emit_context@@Base+0x50>
  40b404:	cmp    eax,0x0
  40b407:	je     40b41a <flatcc_builder_string_len@@Base+0xaa>
  40b40d:	mov    QWORD PTR [rbp-0x8],0x0
  40b415:	jmp    40b477 <flatcc_builder_string_len@@Base+0x107>
  40b41a:	jmp    40b41f <flatcc_builder_string_len@@Base+0xaf>
  40b41f:	mov    eax,DWORD PTR [rbp-0x1c]
  40b422:	mov    ecx,eax
  40b424:	add    rcx,0x4
  40b428:	mov    dx,cx
  40b42b:	mov    rcx,QWORD PTR [rbp-0x10]
  40b42f:	mov    rcx,QWORD PTR [rcx+0x8]
  40b433:	movzx  eax,WORD PTR [rbp-0x18]
  40b437:	mov    esi,eax
  40b439:	mov    WORD PTR [rcx+rsi*2],dx
  40b43d:	movzx  eax,WORD PTR [rbp-0x18]
  40b441:	mov    rcx,QWORD PTR [rbp-0x10]
  40b445:	movzx  edi,WORD PTR [rcx+0x10]
  40b449:	cmp    eax,edi
  40b44b:	jl     40b463 <flatcc_builder_string_len@@Base+0xf3>
  40b451:	movzx  eax,WORD PTR [rbp-0x18]
  40b455:	add    eax,0x1
  40b458:	mov    cx,ax
  40b45b:	mov    rdx,QWORD PTR [rbp-0x10]
  40b45f:	mov    WORD PTR [rdx+0x10],cx
  40b463:	mov    rax,QWORD PTR [rbp-0x10]
  40b467:	mov    rax,QWORD PTR [rax+0x18]
  40b46b:	mov    ecx,DWORD PTR [rbp-0x1c]
  40b46e:	mov    edx,ecx
  40b470:	add    rax,rdx
  40b473:	mov    QWORD PTR [rbp-0x8],rax
  40b477:	mov    rax,QWORD PTR [rbp-0x8]
  40b47b:	add    rsp,0x20
  40b47f:	pop    rbp
  40b480:	ret    
  40b481:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b48b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040b490 <flatcc_builder_table_edit@@Base>:
  40b490:	push   rbp
  40b491:	mov    rbp,rsp
  40b494:	sub    rsp,0x10
  40b498:	mov    QWORD PTR [rbp-0x8],rdi
  40b49c:	mov    QWORD PTR [rbp-0x10],rsi
  40b4a0:	mov    rsi,QWORD PTR [rbp-0x8]
  40b4a4:	mov    rsi,QWORD PTR [rsi+0x30]
  40b4a8:	movzx  eax,WORD PTR [rsi+0xe]
  40b4ac:	cmp    eax,0x3
  40b4af:	jne    40b4ba <flatcc_builder_table_edit@@Base+0x2a>
  40b4b5:	jmp    40b4d9 <flatcc_builder_table_edit@@Base+0x49>
  40b4ba:	lea    rdi,[rip+0x2ee0]        # 40e3a1 <flatcc_builder_padding_base@@Base+0xa41>
  40b4c1:	lea    rsi,[rip+0x26aa]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  40b4c8:	mov    edx,0x702
  40b4cd:	lea    rcx,[rip+0x3585]        # 40ea59 <flatcc_builder_padding_base@@Base+0x10f9>
  40b4d4:	call   403070 <__assert_fail@plt>
  40b4d9:	xor    eax,eax
  40b4db:	mov    ecx,eax
  40b4dd:	mov    rdx,QWORD PTR [rbp-0x8]
  40b4e1:	mov    rdx,QWORD PTR [rdx+0x18]
  40b4e5:	mov    rsi,QWORD PTR [rbp-0x8]
  40b4e9:	mov    eax,DWORD PTR [rsi+0x20]
  40b4ec:	mov    esi,eax
  40b4ee:	add    rdx,rsi
  40b4f1:	sub    rcx,QWORD PTR [rbp-0x10]
  40b4f5:	add    rdx,rcx
  40b4f8:	mov    rax,rdx
  40b4fb:	add    rsp,0x10
  40b4ff:	pop    rbp
  40b500:	ret    
  40b501:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b50b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040b510 <flatcc_builder_table_add_copy@@Base>:
  40b510:	push   rbp
  40b511:	mov    rbp,rsp
  40b514:	sub    rsp,0x30
  40b518:	mov    ax,r8w
  40b51c:	mov    QWORD PTR [rbp-0x8],rdi
  40b520:	mov    DWORD PTR [rbp-0xc],esi
  40b523:	mov    QWORD PTR [rbp-0x18],rdx
  40b527:	mov    QWORD PTR [rbp-0x20],rcx
  40b52b:	mov    WORD PTR [rbp-0x22],ax
  40b52f:	mov    rdi,QWORD PTR [rbp-0x8]
  40b533:	mov    esi,DWORD PTR [rbp-0xc]
  40b536:	mov    rdx,QWORD PTR [rbp-0x20]
  40b53a:	movzx  ecx,WORD PTR [rbp-0x22]
  40b53e:	call   40a650 <flatcc_builder_table_add@@Base>
  40b543:	mov    QWORD PTR [rbp-0x30],rax
  40b547:	cmp    rax,0x0
  40b54b:	je     40b562 <flatcc_builder_table_add_copy@@Base+0x52>
  40b551:	mov    rdi,QWORD PTR [rbp-0x30]
  40b555:	mov    rsi,QWORD PTR [rbp-0x18]
  40b559:	mov    rdx,QWORD PTR [rbp-0x20]
  40b55d:	call   4030c0 <memcpy@plt>
  40b562:	mov    rax,QWORD PTR [rbp-0x30]
  40b566:	add    rsp,0x30
  40b56a:	pop    rbp
  40b56b:	ret    
  40b56c:	nop    DWORD PTR [rax+0x0]
  40b570:	push   rbp
  40b571:	mov    rbp,rsp
  40b574:	sub    rsp,0x20
  40b578:	mov    ax,si
  40b57b:	mov    QWORD PTR [rbp-0x10],rdi
  40b57f:	mov    WORD PTR [rbp-0x12],ax
  40b583:	mov    rdi,QWORD PTR [rbp-0x10]
  40b587:	mov    esi,DWORD PTR [rdi+0x20]
  40b58a:	mov    edi,esi
  40b58c:	add    rdi,0x4
  40b590:	sub    rdi,0x1
  40b594:	and    rdi,0xfffffffffffffffc
  40b598:	mov    esi,edi
  40b59a:	mov    DWORD PTR [rbp-0x18],esi
  40b59d:	mov    esi,DWORD PTR [rbp-0x18]
  40b5a0:	mov    edi,esi
  40b5a2:	add    rdi,0x4
  40b5a6:	mov    esi,edi
  40b5a8:	mov    rdi,QWORD PTR [rbp-0x10]
  40b5ac:	mov    DWORD PTR [rdi+0x20],esi
  40b5af:	mov    rdi,QWORD PTR [rbp-0x10]
  40b5b3:	cmp    esi,DWORD PTR [rdi+0x24]
  40b5b6:	jbe    40b5ee <flatcc_builder_table_add_copy@@Base+0xde>
  40b5bc:	mov    rdi,QWORD PTR [rbp-0x10]
  40b5c0:	mov    rax,QWORD PTR [rbp-0x10]
  40b5c4:	mov    ecx,DWORD PTR [rax+0x20]
  40b5c7:	mov    esi,ecx
  40b5c9:	mov    edx,0xfffc
  40b5ce:	call   40bd90 <flatcc_builder_get_emit_context@@Base+0x50>
  40b5d3:	cmp    eax,0x0
  40b5d6:	je     40b5e9 <flatcc_builder_table_add_copy@@Base+0xd9>
  40b5dc:	mov    QWORD PTR [rbp-0x8],0x0
  40b5e4:	jmp    40b660 <flatcc_builder_table_add_copy@@Base+0x150>
  40b5e9:	jmp    40b5ee <flatcc_builder_table_add_copy@@Base+0xde>
  40b5ee:	mov    eax,DWORD PTR [rbp-0x18]
  40b5f1:	mov    ecx,eax
  40b5f3:	add    rcx,0x4
  40b5f7:	mov    dx,cx
  40b5fa:	mov    rcx,QWORD PTR [rbp-0x10]
  40b5fe:	mov    rcx,QWORD PTR [rcx+0x8]
  40b602:	movzx  eax,WORD PTR [rbp-0x12]
  40b606:	mov    esi,eax
  40b608:	mov    WORD PTR [rcx+rsi*2],dx
  40b60c:	movzx  eax,WORD PTR [rbp-0x12]
  40b610:	mov    rcx,QWORD PTR [rbp-0x10]
  40b614:	movzx  edi,WORD PTR [rcx+0x10]
  40b618:	cmp    eax,edi
  40b61a:	jl     40b632 <flatcc_builder_table_add_copy@@Base+0x122>
  40b620:	movzx  eax,WORD PTR [rbp-0x12]
  40b624:	add    eax,0x1
  40b627:	mov    cx,ax
  40b62a:	mov    rdx,QWORD PTR [rbp-0x10]
  40b62e:	mov    WORD PTR [rdx+0x10],cx
  40b632:	mov    eax,DWORD PTR [rbp-0x18]
  40b635:	mov    cx,ax
  40b638:	mov    rdx,QWORD PTR [rbp-0x10]
  40b63c:	mov    rsi,QWORD PTR [rdx]
  40b63f:	mov    rdi,rsi
  40b642:	add    rdi,0x2
  40b646:	mov    QWORD PTR [rdx],rdi
  40b649:	mov    WORD PTR [rsi],cx
  40b64c:	mov    rdx,QWORD PTR [rbp-0x10]
  40b650:	mov    rdx,QWORD PTR [rdx+0x18]
  40b654:	mov    eax,DWORD PTR [rbp-0x18]
  40b657:	mov    esi,eax
  40b659:	add    rdx,rsi
  40b65c:	mov    QWORD PTR [rbp-0x8],rdx
  40b660:	mov    rax,QWORD PTR [rbp-0x8]
  40b664:	add    rsp,0x20
  40b668:	pop    rbp
  40b669:	ret    
  40b66a:	nop    WORD PTR [rax+rax*1+0x0]

000000000040b670 <flatcc_builder_push_buffer_alignment@@Base>:
  40b670:	push   rbp
  40b671:	mov    rbp,rsp
  40b674:	mov    QWORD PTR [rbp-0x8],rdi
  40b678:	mov    rdi,QWORD PTR [rbp-0x8]
  40b67c:	mov    ax,WORD PTR [rdi+0xe8]
  40b683:	mov    WORD PTR [rbp-0xa],ax
  40b687:	mov    rdi,QWORD PTR [rbp-0x8]
  40b68b:	mov    WORD PTR [rdi+0xe8],0x4
  40b694:	movzx  eax,WORD PTR [rbp-0xa]
  40b698:	pop    rbp
  40b699:	ret    
  40b69a:	nop    WORD PTR [rax+rax*1+0x0]

000000000040b6a0 <flatcc_builder_pop_buffer_alignment@@Base>:
  40b6a0:	push   rbp
  40b6a1:	mov    rbp,rsp
  40b6a4:	sub    rsp,0x10
  40b6a8:	mov    ax,si
  40b6ab:	mov    QWORD PTR [rbp-0x8],rdi
  40b6af:	mov    WORD PTR [rbp-0xa],ax
  40b6b3:	mov    rdi,QWORD PTR [rbp-0x8]
  40b6b7:	movzx  esi,WORD PTR [rbp-0xa]
  40b6bb:	call   407540 <flatcc_builder_create_buffer@@Base+0x410>
  40b6c0:	add    rsp,0x10
  40b6c4:	pop    rbp
  40b6c5:	ret    
  40b6c6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000040b6d0 <flatcc_builder_get_buffer_alignment@@Base>:
  40b6d0:	push   rbp
  40b6d1:	mov    rbp,rsp
  40b6d4:	mov    QWORD PTR [rbp-0x8],rdi
  40b6d8:	mov    rdi,QWORD PTR [rbp-0x8]
  40b6dc:	movzx  eax,WORD PTR [rdi+0xe8]
  40b6e3:	pop    rbp
  40b6e4:	ret    
  40b6e5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b6ef:	nop

000000000040b6f0 <flatcc_builder_set_vtable_clustering@@Base>:
  40b6f0:	push   rbp
  40b6f1:	mov    rbp,rsp
  40b6f4:	mov    QWORD PTR [rbp-0x8],rdi
  40b6f8:	mov    DWORD PTR [rbp-0xc],esi
  40b6fb:	cmp    DWORD PTR [rbp-0xc],0x0
  40b6ff:	setne  al
  40b702:	xor    al,0xff
  40b704:	and    al,0x1
  40b706:	movzx  esi,al
  40b709:	mov    rdi,QWORD PTR [rbp-0x8]
  40b70d:	mov    DWORD PTR [rdi+0x124],esi
  40b713:	pop    rbp
  40b714:	ret    
  40b715:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b71f:	nop

000000000040b720 <flatcc_builder_set_block_align@@Base>:
  40b720:	push   rbp
  40b721:	mov    rbp,rsp
  40b724:	mov    ax,si
  40b727:	mov    QWORD PTR [rbp-0x8],rdi
  40b72b:	mov    WORD PTR [rbp-0xa],ax
  40b72f:	mov    ax,WORD PTR [rbp-0xa]
  40b733:	mov    rdi,QWORD PTR [rbp-0x8]
  40b737:	mov    WORD PTR [rdi+0xec],ax
  40b73e:	pop    rbp
  40b73f:	ret    

000000000040b740 <flatcc_builder_get_level@@Base>:
  40b740:	push   rbp
  40b741:	mov    rbp,rsp
  40b744:	mov    QWORD PTR [rbp-0x8],rdi
  40b748:	mov    rdi,QWORD PTR [rbp-0x8]
  40b74c:	mov    eax,DWORD PTR [rdi+0x104]
  40b752:	pop    rbp
  40b753:	ret    
  40b754:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b75e:	xchg   ax,ax

000000000040b760 <flatcc_builder_set_max_level@@Base>:
  40b760:	push   rbp
  40b761:	mov    rbp,rsp
  40b764:	mov    QWORD PTR [rbp-0x8],rdi
  40b768:	mov    DWORD PTR [rbp-0xc],esi
  40b76b:	mov    esi,DWORD PTR [rbp-0xc]
  40b76e:	mov    rdi,QWORD PTR [rbp-0x8]
  40b772:	mov    DWORD PTR [rdi+0x120],esi
  40b778:	mov    rdi,QWORD PTR [rbp-0x8]
  40b77c:	mov    esi,DWORD PTR [rdi+0x108]
  40b782:	mov    rdi,QWORD PTR [rbp-0x8]
  40b786:	cmp    esi,DWORD PTR [rdi+0x120]
  40b78c:	jge    40b7a6 <flatcc_builder_set_max_level@@Base+0x46>
  40b792:	mov    rax,QWORD PTR [rbp-0x8]
  40b796:	mov    ecx,DWORD PTR [rax+0x120]
  40b79c:	mov    rax,QWORD PTR [rbp-0x8]
  40b7a0:	mov    DWORD PTR [rax+0x108],ecx
  40b7a6:	pop    rbp
  40b7a7:	ret    
  40b7a8:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040b7b0 <flatcc_builder_get_buffer_size@@Base>:
  40b7b0:	push   rbp
  40b7b1:	mov    rbp,rsp
  40b7b4:	mov    QWORD PTR [rbp-0x8],rdi
  40b7b8:	mov    rdi,QWORD PTR [rbp-0x8]
  40b7bc:	mov    eax,DWORD PTR [rdi+0xf4]
  40b7c2:	mov    rdi,QWORD PTR [rbp-0x8]
  40b7c6:	sub    eax,DWORD PTR [rdi+0xf0]
  40b7cc:	cdqe   
  40b7ce:	pop    rbp
  40b7cf:	ret    

000000000040b7d0 <flatcc_builder_get_buffer_start@@Base>:
  40b7d0:	push   rbp
  40b7d1:	mov    rbp,rsp
  40b7d4:	mov    QWORD PTR [rbp-0x8],rdi
  40b7d8:	mov    rdi,QWORD PTR [rbp-0x8]
  40b7dc:	mov    eax,DWORD PTR [rdi+0xf0]
  40b7e2:	pop    rbp
  40b7e3:	ret    
  40b7e4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b7ee:	xchg   ax,ax

000000000040b7f0 <flatcc_builder_get_buffer_end@@Base>:
  40b7f0:	push   rbp
  40b7f1:	mov    rbp,rsp
  40b7f4:	mov    QWORD PTR [rbp-0x8],rdi
  40b7f8:	mov    rdi,QWORD PTR [rbp-0x8]
  40b7fc:	mov    eax,DWORD PTR [rdi+0xf4]
  40b802:	pop    rbp
  40b803:	ret    
  40b804:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b80e:	xchg   ax,ax

000000000040b810 <flatcc_builder_set_vtable_cache_limit@@Base>:
  40b810:	push   rbp
  40b811:	mov    rbp,rsp
  40b814:	mov    QWORD PTR [rbp-0x8],rdi
  40b818:	mov    QWORD PTR [rbp-0x10],rsi
  40b81c:	mov    rsi,QWORD PTR [rbp-0x10]
  40b820:	mov    rdi,QWORD PTR [rbp-0x8]
  40b824:	mov    QWORD PTR [rdi+0x118],rsi
  40b82b:	pop    rbp
  40b82c:	ret    
  40b82d:	nop    DWORD PTR [rax]

000000000040b830 <flatcc_builder_set_identifier@@Base>:
  40b830:	push   rbp
  40b831:	mov    rbp,rsp
  40b834:	mov    QWORD PTR [rbp-0x8],rdi
  40b838:	mov    QWORD PTR [rbp-0x10],rsi
  40b83c:	mov    rsi,QWORD PTR [rbp-0x8]
  40b840:	add    rsi,0x110
  40b847:	cmp    QWORD PTR [rbp-0x10],0x0
  40b84c:	mov    QWORD PTR [rbp-0x18],rsi
  40b850:	je     40b863 <flatcc_builder_set_identifier@@Base+0x33>
  40b856:	mov    rax,QWORD PTR [rbp-0x10]
  40b85a:	mov    QWORD PTR [rbp-0x20],rax
  40b85e:	jmp    40b873 <flatcc_builder_set_identifier@@Base+0x43>
  40b863:	lea    rax,[rip+0x20f6]        # 40d960 <flatcc_builder_padding_base@@Base>
  40b86a:	mov    QWORD PTR [rbp-0x20],rax
  40b86e:	jmp    40b873 <flatcc_builder_set_identifier@@Base+0x43>
  40b873:	mov    rax,QWORD PTR [rbp-0x20]
  40b877:	mov    ecx,DWORD PTR [rax]
  40b879:	mov    rax,QWORD PTR [rbp-0x18]
  40b87d:	mov    DWORD PTR [rax],ecx
  40b87f:	pop    rbp
  40b880:	ret    
  40b881:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b88b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040b890 <flatcc_builder_get_type@@Base>:
  40b890:	push   rbp
  40b891:	mov    rbp,rsp
  40b894:	mov    QWORD PTR [rbp-0x8],rdi
  40b898:	mov    rdi,QWORD PTR [rbp-0x8]
  40b89c:	cmp    QWORD PTR [rdi+0x30],0x0
  40b8a1:	je     40b8bb <flatcc_builder_get_type@@Base+0x2b>
  40b8a7:	mov    rax,QWORD PTR [rbp-0x8]
  40b8ab:	mov    rax,QWORD PTR [rax+0x30]
  40b8af:	movzx  ecx,WORD PTR [rax+0xe]
  40b8b3:	mov    DWORD PTR [rbp-0xc],ecx
  40b8b6:	jmp    40b8c5 <flatcc_builder_get_type@@Base+0x35>
  40b8bb:	xor    eax,eax
  40b8bd:	mov    DWORD PTR [rbp-0xc],eax
  40b8c0:	jmp    40b8c5 <flatcc_builder_get_type@@Base+0x35>
  40b8c5:	mov    eax,DWORD PTR [rbp-0xc]
  40b8c8:	pop    rbp
  40b8c9:	ret    
  40b8ca:	nop    WORD PTR [rax+rax*1+0x0]

000000000040b8d0 <flatcc_builder_get_type_at@@Base>:
  40b8d0:	push   rbp
  40b8d1:	mov    rbp,rsp
  40b8d4:	mov    QWORD PTR [rbp-0x10],rdi
  40b8d8:	mov    DWORD PTR [rbp-0x14],esi
  40b8db:	cmp    DWORD PTR [rbp-0x14],0x1
  40b8df:	jl     40b8f8 <flatcc_builder_get_type_at@@Base+0x28>
  40b8e5:	mov    eax,DWORD PTR [rbp-0x14]
  40b8e8:	mov    rcx,QWORD PTR [rbp-0x10]
  40b8ec:	cmp    eax,DWORD PTR [rcx+0x104]
  40b8f2:	jle    40b904 <flatcc_builder_get_type_at@@Base+0x34>
  40b8f8:	mov    DWORD PTR [rbp-0x4],0x0
  40b8ff:	jmp    40b92a <flatcc_builder_get_type_at@@Base+0x5a>
  40b904:	mov    rax,QWORD PTR [rbp-0x10]
  40b908:	mov    rax,QWORD PTR [rax+0x30]
  40b90c:	mov    ecx,DWORD PTR [rbp-0x14]
  40b90f:	mov    rdx,QWORD PTR [rbp-0x10]
  40b913:	sub    ecx,DWORD PTR [rdx+0x104]
  40b919:	movsxd rdx,ecx
  40b91c:	imul   rdx,rdx,0x24
  40b920:	add    rax,rdx
  40b923:	movzx  ecx,WORD PTR [rax+0xe]
  40b927:	mov    DWORD PTR [rbp-0x4],ecx
  40b92a:	mov    eax,DWORD PTR [rbp-0x4]
  40b92d:	pop    rbp
  40b92e:	ret    
  40b92f:	nop

000000000040b930 <flatcc_builder_get_direct_buffer@@Base>:
  40b930:	push   rbp
  40b931:	mov    rbp,rsp
  40b934:	sub    rsp,0x20
  40b938:	mov    QWORD PTR [rbp-0x10],rdi
  40b93c:	mov    QWORD PTR [rbp-0x18],rsi
  40b940:	mov    rsi,QWORD PTR [rbp-0x10]
  40b944:	cmp    DWORD PTR [rsi+0x128],0x0
  40b94b:	je     40b970 <flatcc_builder_get_direct_buffer@@Base+0x40>
  40b951:	mov    rax,QWORD PTR [rbp-0x10]
  40b955:	add    rax,0x130
  40b95b:	mov    rsi,QWORD PTR [rbp-0x18]
  40b95f:	mov    rdi,rax
  40b962:	call   40b9a0 <flatcc_builder_get_direct_buffer@@Base+0x70>
  40b967:	mov    QWORD PTR [rbp-0x8],rax
  40b96b:	jmp    40b993 <flatcc_builder_get_direct_buffer@@Base+0x63>
  40b970:	cmp    QWORD PTR [rbp-0x18],0x0
  40b975:	je     40b986 <flatcc_builder_get_direct_buffer@@Base+0x56>
  40b97b:	mov    rax,QWORD PTR [rbp-0x18]
  40b97f:	mov    QWORD PTR [rax],0x0
  40b986:	jmp    40b98b <flatcc_builder_get_direct_buffer@@Base+0x5b>
  40b98b:	mov    QWORD PTR [rbp-0x8],0x0
  40b993:	mov    rax,QWORD PTR [rbp-0x8]
  40b997:	add    rsp,0x20
  40b99b:	pop    rbp
  40b99c:	ret    
  40b99d:	nop    DWORD PTR [rax]
  40b9a0:	push   rbp
  40b9a1:	mov    rbp,rsp
  40b9a4:	mov    QWORD PTR [rbp-0x10],rdi
  40b9a8:	mov    QWORD PTR [rbp-0x18],rsi
  40b9ac:	mov    rsi,QWORD PTR [rbp-0x10]
  40b9b0:	mov    rsi,QWORD PTR [rsi]
  40b9b3:	mov    rdi,QWORD PTR [rbp-0x10]
  40b9b7:	cmp    rsi,QWORD PTR [rdi+0x8]
  40b9bb:	jne    40b9ec <flatcc_builder_get_direct_buffer@@Base+0xbc>
  40b9c1:	cmp    QWORD PTR [rbp-0x18],0x0
  40b9c6:	je     40b9db <flatcc_builder_get_direct_buffer@@Base+0xab>
  40b9cc:	mov    rax,QWORD PTR [rbp-0x10]
  40b9d0:	mov    rax,QWORD PTR [rax+0x30]
  40b9d4:	mov    rcx,QWORD PTR [rbp-0x18]
  40b9d8:	mov    QWORD PTR [rcx],rax
  40b9db:	mov    rax,QWORD PTR [rbp-0x10]
  40b9df:	mov    rax,QWORD PTR [rax+0x10]
  40b9e3:	mov    QWORD PTR [rbp-0x8],rax
  40b9e7:	jmp    40ba0a <flatcc_builder_get_direct_buffer@@Base+0xda>
  40b9ec:	cmp    QWORD PTR [rbp-0x18],0x0
  40b9f1:	je     40ba02 <flatcc_builder_get_direct_buffer@@Base+0xd2>
  40b9f7:	mov    rax,QWORD PTR [rbp-0x18]
  40b9fb:	mov    QWORD PTR [rax],0x0
  40ba02:	mov    QWORD PTR [rbp-0x8],0x0
  40ba0a:	mov    rax,QWORD PTR [rbp-0x8]
  40ba0e:	pop    rbp
  40ba0f:	ret    

000000000040ba10 <flatcc_builder_copy_buffer@@Base>:
  40ba10:	push   rbp
  40ba11:	mov    rbp,rsp
  40ba14:	sub    rsp,0x20
  40ba18:	mov    QWORD PTR [rbp-0x10],rdi
  40ba1c:	mov    QWORD PTR [rbp-0x18],rsi
  40ba20:	mov    QWORD PTR [rbp-0x20],rdx
  40ba24:	mov    rdx,QWORD PTR [rbp-0x10]
  40ba28:	cmp    DWORD PTR [rdx+0x128],0x0
  40ba2f:	jne    40ba42 <flatcc_builder_copy_buffer@@Base+0x32>
  40ba35:	mov    QWORD PTR [rbp-0x8],0x0
  40ba3d:	jmp    40ba97 <flatcc_builder_copy_buffer@@Base+0x87>
  40ba42:	mov    rax,QWORD PTR [rbp-0x10]
  40ba46:	add    rax,0x130
  40ba4c:	mov    rsi,QWORD PTR [rbp-0x18]
  40ba50:	mov    rdx,QWORD PTR [rbp-0x20]
  40ba54:	mov    rdi,rax
  40ba57:	call   40c6b0 <flatcc_emitter_copy_buffer@@Base>
  40ba5c:	mov    QWORD PTR [rbp-0x18],rax
  40ba60:	cmp    QWORD PTR [rbp-0x18],0x0
  40ba65:	je     40ba70 <flatcc_builder_copy_buffer@@Base+0x60>
  40ba6b:	jmp    40ba8f <flatcc_builder_copy_buffer@@Base+0x7f>
  40ba70:	lea    rdi,[rip+0x2369]        # 40dde0 <flatcc_builder_padding_base@@Base+0x480>
  40ba77:	lea    rsi,[rip+0x20f4]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  40ba7e:	mov    edx,0x786
  40ba83:	lea    rcx,[rip+0x305a]        # 40eae4 <flatcc_builder_padding_base@@Base+0x1184>
  40ba8a:	call   403070 <__assert_fail@plt>
  40ba8f:	mov    rax,QWORD PTR [rbp-0x18]
  40ba93:	mov    QWORD PTR [rbp-0x8],rax
  40ba97:	mov    rax,QWORD PTR [rbp-0x8]
  40ba9b:	add    rsp,0x20
  40ba9f:	pop    rbp
  40baa0:	ret    
  40baa1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40baab:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040bab0 <flatcc_builder_finalize_buffer@@Base>:
  40bab0:	push   rbp
  40bab1:	mov    rbp,rsp
  40bab4:	sub    rsp,0x20
  40bab8:	mov    QWORD PTR [rbp-0x8],rdi
  40babc:	mov    QWORD PTR [rbp-0x10],rsi
  40bac0:	mov    rdi,QWORD PTR [rbp-0x8]
  40bac4:	call   40b7b0 <flatcc_builder_get_buffer_size@@Base>
  40bac9:	mov    QWORD PTR [rbp-0x20],rax
  40bacd:	cmp    QWORD PTR [rbp-0x10],0x0
  40bad2:	je     40bae3 <flatcc_builder_finalize_buffer@@Base+0x33>
  40bad8:	mov    rax,QWORD PTR [rbp-0x20]
  40badc:	mov    rcx,QWORD PTR [rbp-0x10]
  40bae0:	mov    QWORD PTR [rcx],rax
  40bae3:	mov    rdi,QWORD PTR [rbp-0x20]
  40bae7:	call   4030d0 <malloc@plt>
  40baec:	mov    QWORD PTR [rbp-0x18],rax
  40baf0:	cmp    QWORD PTR [rbp-0x18],0x0
  40baf5:	jne    40bb1a <flatcc_builder_finalize_buffer@@Base+0x6a>
  40bafb:	lea    rdi,[rip+0x3230]        # 40ed32 <flatcc_builder_padding_base@@Base+0x13d2>
  40bb02:	lea    rsi,[rip+0x2069]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  40bb09:	mov    edx,0x798
  40bb0e:	lea    rcx,[rip+0x3014]        # 40eb29 <flatcc_builder_padding_base@@Base+0x11c9>
  40bb15:	call   403070 <__assert_fail@plt>
  40bb1a:	mov    rdi,QWORD PTR [rbp-0x8]
  40bb1e:	mov    rsi,QWORD PTR [rbp-0x18]
  40bb22:	mov    rdx,QWORD PTR [rbp-0x20]
  40bb26:	call   40ba10 <flatcc_builder_copy_buffer@@Base>
  40bb2b:	cmp    rax,0x0
  40bb2f:	jne    40bb54 <flatcc_builder_finalize_buffer@@Base+0xa4>
  40bb35:	lea    rdi,[rip+0x31f6]        # 40ed32 <flatcc_builder_padding_base@@Base+0x13d2>
  40bb3c:	lea    rsi,[rip+0x202f]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  40bb43:	mov    edx,0x79c
  40bb48:	lea    rcx,[rip+0x2fda]        # 40eb29 <flatcc_builder_padding_base@@Base+0x11c9>
  40bb4f:	call   403070 <__assert_fail@plt>
  40bb54:	jmp    40bb59 <flatcc_builder_finalize_buffer@@Base+0xa9>
  40bb59:	cmp    QWORD PTR [rbp-0x18],0x0
  40bb5e:	jne    40bb7a <flatcc_builder_finalize_buffer@@Base+0xca>
  40bb64:	cmp    QWORD PTR [rbp-0x10],0x0
  40bb69:	je     40bb7a <flatcc_builder_finalize_buffer@@Base+0xca>
  40bb6f:	mov    rax,QWORD PTR [rbp-0x10]
  40bb73:	mov    QWORD PTR [rax],0x0
  40bb7a:	mov    rax,QWORD PTR [rbp-0x18]
  40bb7e:	add    rsp,0x20
  40bb82:	pop    rbp
  40bb83:	ret    
  40bb84:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bb8e:	xchg   ax,ax

000000000040bb90 <flatcc_builder_finalize_aligned_buffer@@Base>:
  40bb90:	push   rbp
  40bb91:	mov    rbp,rsp
  40bb94:	sub    rsp,0x30
  40bb98:	mov    QWORD PTR [rbp-0x8],rdi
  40bb9c:	mov    QWORD PTR [rbp-0x10],rsi
  40bba0:	mov    rdi,QWORD PTR [rbp-0x8]
  40bba4:	call   40b7b0 <flatcc_builder_get_buffer_size@@Base>
  40bba9:	mov    QWORD PTR [rbp-0x28],rax
  40bbad:	cmp    QWORD PTR [rbp-0x10],0x0
  40bbb2:	je     40bbc3 <flatcc_builder_finalize_aligned_buffer@@Base+0x33>
  40bbb8:	mov    rax,QWORD PTR [rbp-0x28]
  40bbbc:	mov    rcx,QWORD PTR [rbp-0x10]
  40bbc0:	mov    QWORD PTR [rcx],rax
  40bbc3:	mov    rdi,QWORD PTR [rbp-0x8]
  40bbc7:	call   40b6d0 <flatcc_builder_get_buffer_alignment@@Base>
  40bbcc:	movzx  ecx,ax
  40bbcf:	mov    edi,ecx
  40bbd1:	mov    QWORD PTR [rbp-0x20],rdi
  40bbd5:	mov    rdi,QWORD PTR [rbp-0x28]
  40bbd9:	add    rdi,QWORD PTR [rbp-0x20]
  40bbdd:	sub    rdi,0x1
  40bbe1:	mov    rdx,QWORD PTR [rbp-0x20]
  40bbe5:	sub    rdx,0x1
  40bbe9:	xor    rdx,0xffffffffffffffff
  40bbed:	and    rdi,rdx
  40bbf0:	mov    QWORD PTR [rbp-0x28],rdi
  40bbf4:	mov    rdi,QWORD PTR [rbp-0x20]
  40bbf8:	mov    rsi,QWORD PTR [rbp-0x28]
  40bbfc:	call   40bc80 <flatcc_builder_finalize_aligned_buffer@@Base+0xf0>
  40bc01:	mov    QWORD PTR [rbp-0x18],rax
  40bc05:	cmp    QWORD PTR [rbp-0x18],0x0
  40bc0a:	jne    40bc15 <flatcc_builder_finalize_aligned_buffer@@Base+0x85>
  40bc10:	jmp    40bc4b <flatcc_builder_finalize_aligned_buffer@@Base+0xbb>
  40bc15:	mov    rdi,QWORD PTR [rbp-0x8]
  40bc19:	mov    rsi,QWORD PTR [rbp-0x18]
  40bc1d:	mov    rdx,QWORD PTR [rbp-0x28]
  40bc21:	call   40ba10 <flatcc_builder_copy_buffer@@Base>
  40bc26:	cmp    rax,0x0
  40bc2a:	jne    40bc46 <flatcc_builder_finalize_aligned_buffer@@Base+0xb6>
  40bc30:	mov    rdi,QWORD PTR [rbp-0x18]
  40bc34:	call   403030 <free@plt>
  40bc39:	mov    QWORD PTR [rbp-0x18],0x0
  40bc41:	jmp    40bc4b <flatcc_builder_finalize_aligned_buffer@@Base+0xbb>
  40bc46:	jmp    40bc4b <flatcc_builder_finalize_aligned_buffer@@Base+0xbb>
  40bc4b:	cmp    QWORD PTR [rbp-0x18],0x0
  40bc50:	jne    40bc6c <flatcc_builder_finalize_aligned_buffer@@Base+0xdc>
  40bc56:	cmp    QWORD PTR [rbp-0x10],0x0
  40bc5b:	je     40bc6c <flatcc_builder_finalize_aligned_buffer@@Base+0xdc>
  40bc61:	mov    rax,QWORD PTR [rbp-0x10]
  40bc65:	mov    QWORD PTR [rax],0x0
  40bc6c:	mov    rax,QWORD PTR [rbp-0x18]
  40bc70:	add    rsp,0x30
  40bc74:	pop    rbp
  40bc75:	ret    
  40bc76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bc80:	push   rbp
  40bc81:	mov    rbp,rsp
  40bc84:	sub    rsp,0x20
  40bc88:	mov    QWORD PTR [rbp-0x8],rdi
  40bc8c:	mov    QWORD PTR [rbp-0x10],rsi
  40bc90:	mov    QWORD PTR [rbp-0x20],0x0
  40bc98:	cmp    QWORD PTR [rbp-0x8],0x8
  40bc9d:	jae    40bcab <flatcc_builder_finalize_aligned_buffer@@Base+0x11b>
  40bca3:	mov    QWORD PTR [rbp-0x8],0x8
  40bcab:	mov    rsi,QWORD PTR [rbp-0x8]
  40bcaf:	mov    rdx,QWORD PTR [rbp-0x10]
  40bcb3:	lea    rdi,[rbp-0x20]
  40bcb7:	call   4030f0 <posix_memalign@plt>
  40bcbc:	mov    DWORD PTR [rbp-0x14],eax
  40bcbf:	cmp    DWORD PTR [rbp-0x14],0x0
  40bcc3:	je     40bce5 <flatcc_builder_finalize_aligned_buffer@@Base+0x155>
  40bcc9:	cmp    QWORD PTR [rbp-0x20],0x0
  40bcce:	je     40bce5 <flatcc_builder_finalize_aligned_buffer@@Base+0x155>
  40bcd4:	mov    rdi,QWORD PTR [rbp-0x20]
  40bcd8:	call   403030 <free@plt>
  40bcdd:	mov    QWORD PTR [rbp-0x20],0x0
  40bce5:	mov    rax,QWORD PTR [rbp-0x20]
  40bce9:	add    rsp,0x20
  40bced:	pop    rbp
  40bcee:	ret    
  40bcef:	nop

000000000040bcf0 <flatcc_builder_aligned_alloc@@Base>:
  40bcf0:	push   rbp
  40bcf1:	mov    rbp,rsp
  40bcf4:	sub    rsp,0x10
  40bcf8:	mov    QWORD PTR [rbp-0x8],rdi
  40bcfc:	mov    QWORD PTR [rbp-0x10],rsi
  40bd00:	mov    rdi,QWORD PTR [rbp-0x8]
  40bd04:	mov    rsi,QWORD PTR [rbp-0x10]
  40bd08:	call   40bc80 <flatcc_builder_finalize_aligned_buffer@@Base+0xf0>
  40bd0d:	add    rsp,0x10
  40bd11:	pop    rbp
  40bd12:	ret    
  40bd13:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bd1d:	nop    DWORD PTR [rax]

000000000040bd20 <flatcc_builder_aligned_free@@Base>:
  40bd20:	push   rbp
  40bd21:	mov    rbp,rsp
  40bd24:	sub    rsp,0x10
  40bd28:	mov    QWORD PTR [rbp-0x8],rdi
  40bd2c:	mov    rdi,QWORD PTR [rbp-0x8]
  40bd30:	call   403030 <free@plt>
  40bd35:	add    rsp,0x10
  40bd39:	pop    rbp
  40bd3a:	ret    
  40bd3b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040bd40 <flatcc_builder_get_emit_context@@Base>:
  40bd40:	push   rbp
  40bd41:	mov    rbp,rsp
  40bd44:	mov    QWORD PTR [rbp-0x8],rdi
  40bd48:	mov    rdi,QWORD PTR [rbp-0x8]
  40bd4c:	mov    rax,QWORD PTR [rdi+0x38]
  40bd50:	pop    rbp
  40bd51:	ret    
  40bd52:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bd5c:	nop    DWORD PTR [rax+0x0]
  40bd60:	push   rbp
  40bd61:	mov    rbp,rsp
  40bd64:	mov    ax,si
  40bd67:	mov    QWORD PTR [rbp-0x8],rdi
  40bd6b:	mov    WORD PTR [rbp-0xa],ax
  40bd6f:	mov    rdi,QWORD PTR [rbp-0x8]
  40bd73:	mov    esi,DWORD PTR [rdi+0xf4]
  40bd79:	movzx  ecx,WORD PTR [rbp-0xa]
  40bd7d:	sub    ecx,0x1
  40bd80:	and    esi,ecx
  40bd82:	mov    eax,esi
  40bd84:	pop    rbp
  40bd85:	ret    
  40bd86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bd90:	push   rbp
  40bd91:	mov    rbp,rsp
  40bd94:	sub    rsp,0x30
  40bd98:	mov    QWORD PTR [rbp-0x10],rdi
  40bd9c:	mov    QWORD PTR [rbp-0x18],rsi
  40bda0:	mov    DWORD PTR [rbp-0x1c],edx
  40bda3:	mov    rsi,QWORD PTR [rbp-0x10]
  40bda7:	add    rsi,0x58
  40bdab:	add    rsi,0x10
  40bdaf:	mov    QWORD PTR [rbp-0x28],rsi
  40bdb3:	mov    rsi,QWORD PTR [rbp-0x10]
  40bdb7:	mov    rsi,QWORD PTR [rsi+0x50]
  40bdbb:	mov    rdi,QWORD PTR [rbp-0x10]
  40bdbf:	mov    rdi,QWORD PTR [rdi+0x40]
  40bdc3:	mov    rax,QWORD PTR [rbp-0x28]
  40bdc7:	mov    rcx,QWORD PTR [rbp-0x10]
  40bdcb:	mov    edx,DWORD PTR [rcx+0x28]
  40bdce:	mov    ecx,edx
  40bdd0:	add    rcx,QWORD PTR [rbp-0x18]
  40bdd4:	mov    QWORD PTR [rbp-0x30],rsi
  40bdd8:	mov    rsi,rax
  40bddb:	mov    rdx,rcx
  40bdde:	mov    r8d,0x1
  40bde4:	mov    ecx,r8d
  40bde7:	mov    rax,QWORD PTR [rbp-0x30]
  40bdeb:	call   rax
  40bded:	cmp    eax,0x0
  40bdf0:	je     40be02 <flatcc_builder_get_emit_context@@Base+0xc2>
  40bdf6:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40bdfd:	jmp    40be15 <flatcc_builder_get_emit_context@@Base+0xd5>
  40be02:	mov    rdi,QWORD PTR [rbp-0x10]
  40be06:	mov    esi,DWORD PTR [rbp-0x1c]
  40be09:	call   407cf0 <flatcc_builder_start_struct@@Base+0x80>
  40be0e:	mov    DWORD PTR [rbp-0x4],0x0
  40be15:	mov    eax,DWORD PTR [rbp-0x4]
  40be18:	add    rsp,0x30
  40be1c:	pop    rbp
  40be1d:	ret    
  40be1e:	xchg   ax,ax
  40be20:	push   rbp
  40be21:	mov    rbp,rsp
  40be24:	sub    rsp,0x30
  40be28:	mov    QWORD PTR [rbp-0x10],rdi
  40be2c:	mov    rdi,QWORD PTR [rbp-0x10]
  40be30:	add    rdi,0x58
  40be34:	add    rdi,0x50
  40be38:	mov    QWORD PTR [rbp-0x18],rdi
  40be3c:	mov    rdi,QWORD PTR [rbp-0x10]
  40be40:	cmp    DWORD PTR [rdi+0xe4],0x0
  40be47:	jne    40be52 <flatcc_builder_get_emit_context@@Base+0x112>
  40be4d:	jmp    40be71 <flatcc_builder_get_emit_context@@Base+0x131>
  40be52:	lea    rdi,[rip+0x2e9d]        # 40ecf6 <flatcc_builder_padding_base@@Base+0x1396>
  40be59:	lea    rsi,[rip+0x1d12]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  40be60:	mov    edx,0x156
  40be65:	lea    rcx,[rip+0x2e99]        # 40ed05 <flatcc_builder_padding_base@@Base+0x13a5>
  40be6c:	call   403070 <__assert_fail@plt>
  40be71:	mov    eax,0x10
  40be76:	mov    ecx,eax
  40be78:	xor    r8d,r8d
  40be7b:	mov    rdi,QWORD PTR [rbp-0x10]
  40be7f:	mov    rdx,QWORD PTR [rbp-0x10]
  40be83:	mov    eax,DWORD PTR [rdx+0xe4]
  40be89:	mov    edx,eax
  40be8b:	mov    esi,0x6
  40be90:	call   406900 <flatcc_builder_enter_user_frame_ptr@@Base+0xe0>
  40be95:	cmp    rax,0x0
  40be99:	jne    40beab <flatcc_builder_get_emit_context@@Base+0x16b>
  40be9f:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40bea6:	jmp    40bf8a <flatcc_builder_get_emit_context@@Base+0x24a>
  40beab:	mov    rax,QWORD PTR [rbp-0x10]
  40beaf:	mov    DWORD PTR [rax+0xe4],0x10
  40beb9:	mov    QWORD PTR [rbp-0x20],0x100
  40bec1:	mov    rax,QWORD PTR [rbp-0x10]
  40bec5:	mov    rax,QWORD PTR [rax+0x50]
  40bec9:	mov    rcx,QWORD PTR [rbp-0x10]
  40becd:	mov    rdi,QWORD PTR [rcx+0x40]
  40bed1:	mov    rsi,QWORD PTR [rbp-0x18]
  40bed5:	mov    rdx,QWORD PTR [rbp-0x20]
  40bed9:	mov    ecx,0x1
  40bede:	mov    r8d,0x5
  40bee4:	call   rax
  40bee6:	cmp    eax,0x0
  40bee9:	je     40befb <flatcc_builder_get_emit_context@@Base+0x1bb>
  40beef:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40bef6:	jmp    40bf8a <flatcc_builder_get_emit_context@@Base+0x24a>
  40befb:	jmp    40bf00 <flatcc_builder_get_emit_context@@Base+0x1c0>
  40bf00:	mov    rax,QWORD PTR [rbp-0x20]
  40bf04:	shl    rax,0x1
  40bf08:	mov    rcx,QWORD PTR [rbp-0x18]
  40bf0c:	cmp    rax,QWORD PTR [rcx+0x8]
  40bf10:	ja     40bf27 <flatcc_builder_get_emit_context@@Base+0x1e7>
  40bf16:	mov    rax,QWORD PTR [rbp-0x20]
  40bf1a:	shl    rax,0x1
  40bf1e:	mov    QWORD PTR [rbp-0x20],rax
  40bf22:	jmp    40bf00 <flatcc_builder_get_emit_context@@Base+0x1c0>
  40bf27:	mov    rax,QWORD PTR [rbp-0x20]
  40bf2b:	shr    rax,0x2
  40bf2f:	mov    QWORD PTR [rbp-0x20],rax
  40bf33:	mov    QWORD PTR [rbp-0x28],0x0
  40bf3b:	mov    eax,0x1
  40bf40:	mov    ecx,eax
  40bf42:	mov    rdx,QWORD PTR [rbp-0x28]
  40bf46:	mov    QWORD PTR [rbp-0x30],rcx
  40bf4a:	mov    rcx,rdx
  40bf4d:	mov    rdx,QWORD PTR [rbp-0x30]
  40bf51:	shl    rdx,cl
  40bf54:	cmp    rdx,QWORD PTR [rbp-0x20]
  40bf58:	jae    40bf74 <flatcc_builder_get_emit_context@@Base+0x234>
  40bf5e:	jmp    40bf63 <flatcc_builder_get_emit_context@@Base+0x223>
  40bf63:	mov    rax,QWORD PTR [rbp-0x28]
  40bf67:	add    rax,0x1
  40bf6b:	mov    QWORD PTR [rbp-0x28],rax
  40bf6f:	jmp    40bf3b <flatcc_builder_get_emit_context@@Base+0x1fb>
  40bf74:	mov    rax,QWORD PTR [rbp-0x28]
  40bf78:	mov    rcx,QWORD PTR [rbp-0x10]
  40bf7c:	mov    QWORD PTR [rcx+0xd8],rax
  40bf83:	mov    DWORD PTR [rbp-0x4],0x0
  40bf8a:	mov    eax,DWORD PTR [rbp-0x4]
  40bf8d:	add    rsp,0x30
  40bf91:	pop    rbp
  40bf92:	ret    
  40bf93:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bf9d:	nop    DWORD PTR [rax]

000000000040bfa0 <flatcc_emitter_recycle_page@@Base>:
  40bfa0:	push   rbp
  40bfa1:	mov    rbp,rsp
  40bfa4:	mov    QWORD PTR [rbp-0x10],rdi
  40bfa8:	mov    QWORD PTR [rbp-0x18],rsi
  40bfac:	mov    rsi,QWORD PTR [rbp-0x18]
  40bfb0:	mov    rdi,QWORD PTR [rbp-0x10]
  40bfb4:	cmp    rsi,QWORD PTR [rdi]
  40bfb7:	je     40bfcf <flatcc_emitter_recycle_page@@Base+0x2f>
  40bfbd:	mov    rax,QWORD PTR [rbp-0x18]
  40bfc1:	mov    rcx,QWORD PTR [rbp-0x10]
  40bfc5:	cmp    rax,QWORD PTR [rcx+0x8]
  40bfc9:	jne    40bfdb <flatcc_emitter_recycle_page@@Base+0x3b>
  40bfcf:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40bfd6:	jmp    40c073 <flatcc_emitter_recycle_page@@Base+0xd3>
  40bfdb:	mov    rax,QWORD PTR [rbp-0x18]
  40bfdf:	mov    rax,QWORD PTR [rax+0xb88]
  40bfe6:	mov    rcx,QWORD PTR [rbp-0x18]
  40bfea:	mov    rcx,QWORD PTR [rcx+0xb80]
  40bff1:	mov    QWORD PTR [rcx+0xb88],rax
  40bff8:	mov    rax,QWORD PTR [rbp-0x18]
  40bffc:	mov    rax,QWORD PTR [rax+0xb80]
  40c003:	mov    rcx,QWORD PTR [rbp-0x18]
  40c007:	mov    rcx,QWORD PTR [rcx+0xb88]
  40c00e:	mov    QWORD PTR [rcx+0xb80],rax
  40c015:	mov    rax,QWORD PTR [rbp-0x10]
  40c019:	mov    rax,QWORD PTR [rax]
  40c01c:	mov    rax,QWORD PTR [rax+0xb88]
  40c023:	mov    rcx,QWORD PTR [rbp-0x18]
  40c027:	mov    QWORD PTR [rcx+0xb88],rax
  40c02e:	mov    rax,QWORD PTR [rbp-0x10]
  40c032:	mov    rax,QWORD PTR [rax]
  40c035:	mov    rcx,QWORD PTR [rbp-0x18]
  40c039:	mov    QWORD PTR [rcx+0xb80],rax
  40c040:	mov    rax,QWORD PTR [rbp-0x18]
  40c044:	mov    rcx,QWORD PTR [rbp-0x18]
  40c048:	mov    rcx,QWORD PTR [rcx+0xb88]
  40c04f:	mov    QWORD PTR [rcx+0xb80],rax
  40c056:	mov    rax,QWORD PTR [rbp-0x18]
  40c05a:	mov    rcx,QWORD PTR [rbp-0x18]
  40c05e:	mov    rcx,QWORD PTR [rcx+0xb80]
  40c065:	mov    QWORD PTR [rcx+0xb88],rax
  40c06c:	mov    DWORD PTR [rbp-0x4],0x0
  40c073:	mov    eax,DWORD PTR [rbp-0x4]
  40c076:	pop    rbp
  40c077:	ret    
  40c078:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040c080 <flatcc_emitter_reset@@Base>:
  40c080:	push   rbp
  40c081:	mov    rbp,rsp
  40c084:	sub    rsp,0x20
  40c088:	mov    QWORD PTR [rbp-0x8],rdi
  40c08c:	mov    rdi,QWORD PTR [rbp-0x8]
  40c090:	mov    rdi,QWORD PTR [rdi]
  40c093:	mov    QWORD PTR [rbp-0x10],rdi
  40c097:	mov    rdi,QWORD PTR [rbp-0x8]
  40c09b:	cmp    QWORD PTR [rdi],0x0
  40c09f:	jne    40c0aa <flatcc_emitter_reset@@Base+0x2a>
  40c0a5:	jmp    40c219 <flatcc_emitter_reset@@Base+0x199>
  40c0aa:	xor    eax,eax
  40c0ac:	mov    rcx,QWORD PTR [rbp-0x8]
  40c0b0:	mov    rcx,QWORD PTR [rcx]
  40c0b3:	mov    rdx,QWORD PTR [rbp-0x8]
  40c0b7:	mov    QWORD PTR [rdx+0x8],rcx
  40c0bb:	mov    rcx,QWORD PTR [rbp-0x8]
  40c0bf:	mov    rcx,QWORD PTR [rcx]
  40c0c2:	add    rcx,0x5c0
  40c0c9:	mov    rdx,QWORD PTR [rbp-0x8]
  40c0cd:	mov    QWORD PTR [rdx+0x10],rcx
  40c0d1:	mov    rcx,QWORD PTR [rbp-0x8]
  40c0d5:	mov    rcx,QWORD PTR [rcx+0x10]
  40c0d9:	mov    rdx,QWORD PTR [rbp-0x8]
  40c0dd:	mov    QWORD PTR [rdx+0x20],rcx
  40c0e1:	mov    rcx,QWORD PTR [rbp-0x8]
  40c0e5:	mov    QWORD PTR [rcx+0x18],0x5c0
  40c0ed:	mov    rcx,QWORD PTR [rbp-0x8]
  40c0f1:	mov    QWORD PTR [rcx+0x28],0x5c0
  40c0f9:	mov    rcx,QWORD PTR [rbp-0x8]
  40c0fd:	mov    rcx,QWORD PTR [rcx+0x18]
  40c101:	mov    esi,ecx
  40c103:	sub    eax,esi
  40c105:	mov    rcx,QWORD PTR [rbp-0x8]
  40c109:	mov    rcx,QWORD PTR [rcx]
  40c10c:	mov    DWORD PTR [rcx+0xb90],eax
  40c112:	mov    rcx,QWORD PTR [rbp-0x8]
  40c116:	cmp    QWORD PTR [rcx+0x40],0x0
  40c11b:	jne    40c131 <flatcc_emitter_reset@@Base+0xb1>
  40c121:	mov    rax,QWORD PTR [rbp-0x8]
  40c125:	mov    rax,QWORD PTR [rax+0x30]
  40c129:	mov    rcx,QWORD PTR [rbp-0x8]
  40c12d:	mov    QWORD PTR [rcx+0x40],rax
  40c131:	mov    rax,QWORD PTR [rbp-0x8]
  40c135:	imul   rax,QWORD PTR [rax+0x40],0x3
  40c13a:	shr    rax,0x2
  40c13e:	mov    rcx,QWORD PTR [rbp-0x8]
  40c142:	mov    rcx,QWORD PTR [rcx+0x30]
  40c146:	shr    rcx,0x2
  40c14a:	add    rax,rcx
  40c14d:	mov    rcx,QWORD PTR [rbp-0x8]
  40c151:	mov    QWORD PTR [rcx+0x40],rax
  40c155:	mov    rax,QWORD PTR [rbp-0x8]
  40c159:	mov    QWORD PTR [rax+0x30],0x0
  40c161:	xor    eax,eax
  40c163:	mov    cl,al
  40c165:	mov    rdx,QWORD PTR [rbp-0x8]
  40c169:	mov    rdx,QWORD PTR [rdx+0x40]
  40c16d:	shl    rdx,0x1
  40c171:	mov    rsi,QWORD PTR [rbp-0x8]
  40c175:	cmp    rdx,QWORD PTR [rsi+0x38]
  40c179:	mov    BYTE PTR [rbp-0x11],cl
  40c17c:	jae    40c19e <flatcc_emitter_reset@@Base+0x11e>
  40c182:	mov    rax,QWORD PTR [rbp-0x8]
  40c186:	mov    rax,QWORD PTR [rax+0x8]
  40c18a:	mov    rax,QWORD PTR [rax+0xb80]
  40c191:	mov    rcx,QWORD PTR [rbp-0x8]
  40c195:	cmp    rax,QWORD PTR [rcx]
  40c198:	setne  dl
  40c19b:	mov    BYTE PTR [rbp-0x11],dl
  40c19e:	mov    al,BYTE PTR [rbp-0x11]
  40c1a1:	test   al,0x1
  40c1a3:	jne    40c1ae <flatcc_emitter_reset@@Base+0x12e>
  40c1a9:	jmp    40c219 <flatcc_emitter_reset@@Base+0x199>
  40c1ae:	mov    rax,QWORD PTR [rbp-0x8]
  40c1b2:	mov    rax,QWORD PTR [rax+0x8]
  40c1b6:	mov    rax,QWORD PTR [rax+0xb80]
  40c1bd:	mov    QWORD PTR [rbp-0x10],rax
  40c1c1:	mov    rax,QWORD PTR [rbp-0x10]
  40c1c5:	mov    rax,QWORD PTR [rax+0xb80]
  40c1cc:	mov    rcx,QWORD PTR [rbp-0x8]
  40c1d0:	mov    rcx,QWORD PTR [rcx+0x8]
  40c1d4:	mov    QWORD PTR [rcx+0xb80],rax
  40c1db:	mov    rax,QWORD PTR [rbp-0x8]
  40c1df:	mov    rax,QWORD PTR [rax+0x8]
  40c1e3:	mov    rcx,QWORD PTR [rbp-0x10]
  40c1e7:	mov    rcx,QWORD PTR [rcx+0xb80]
  40c1ee:	mov    QWORD PTR [rcx+0xb88],rax
  40c1f5:	mov    rax,QWORD PTR [rbp-0x10]
  40c1f9:	mov    rdi,rax
  40c1fc:	call   403030 <free@plt>
  40c201:	mov    rax,QWORD PTR [rbp-0x8]
  40c205:	mov    rcx,QWORD PTR [rax+0x38]
  40c209:	sub    rcx,0xb80
  40c210:	mov    QWORD PTR [rax+0x38],rcx
  40c214:	jmp    40c161 <flatcc_emitter_reset@@Base+0xe1>
  40c219:	add    rsp,0x20
  40c21d:	pop    rbp
  40c21e:	ret    
  40c21f:	nop

000000000040c220 <flatcc_emitter_clear@@Base>:
  40c220:	push   rbp
  40c221:	mov    rbp,rsp
  40c224:	sub    rsp,0x10
  40c228:	mov    QWORD PTR [rbp-0x8],rdi
  40c22c:	mov    rdi,QWORD PTR [rbp-0x8]
  40c230:	mov    rdi,QWORD PTR [rdi]
  40c233:	mov    QWORD PTR [rbp-0x10],rdi
  40c237:	cmp    QWORD PTR [rbp-0x10],0x0
  40c23c:	jne    40c247 <flatcc_emitter_clear@@Base+0x27>
  40c242:	jmp    40c2b7 <flatcc_emitter_clear@@Base+0x97>
  40c247:	mov    rax,QWORD PTR [rbp-0x10]
  40c24b:	mov    rax,QWORD PTR [rax+0xb88]
  40c252:	mov    QWORD PTR [rax+0xb80],0x0
  40c25d:	mov    rax,QWORD PTR [rbp-0x10]
  40c261:	cmp    QWORD PTR [rax+0xb80],0x0
  40c269:	je     40c296 <flatcc_emitter_clear@@Base+0x76>
  40c26f:	mov    rax,QWORD PTR [rbp-0x10]
  40c273:	mov    rax,QWORD PTR [rax+0xb80]
  40c27a:	mov    QWORD PTR [rbp-0x10],rax
  40c27e:	mov    rax,QWORD PTR [rbp-0x10]
  40c282:	mov    rax,QWORD PTR [rax+0xb88]
  40c289:	mov    rdi,rax
  40c28c:	call   403030 <free@plt>
  40c291:	jmp    40c25d <flatcc_emitter_clear@@Base+0x3d>
  40c296:	mov    rax,QWORD PTR [rbp-0x10]
  40c29a:	mov    rdi,rax
  40c29d:	call   403030 <free@plt>
  40c2a2:	xor    esi,esi
  40c2a4:	mov    ecx,0x48
  40c2a9:	mov    edx,ecx
  40c2ab:	mov    rax,QWORD PTR [rbp-0x8]
  40c2af:	mov    rdi,rax
  40c2b2:	call   403080 <memset@plt>
  40c2b7:	add    rsp,0x10
  40c2bb:	pop    rbp
  40c2bc:	ret    
  40c2bd:	nop    DWORD PTR [rax]

000000000040c2c0 <flatcc_emitter@@Base>:
  40c2c0:	push   rbp
  40c2c1:	mov    rbp,rsp
  40c2c4:	sub    rsp,0x40
  40c2c8:	mov    QWORD PTR [rbp-0x10],rdi
  40c2cc:	mov    QWORD PTR [rbp-0x18],rsi
  40c2d0:	mov    DWORD PTR [rbp-0x1c],edx
  40c2d3:	mov    DWORD PTR [rbp-0x20],ecx
  40c2d6:	mov    QWORD PTR [rbp-0x28],r8
  40c2da:	mov    rsi,QWORD PTR [rbp-0x10]
  40c2de:	mov    QWORD PTR [rbp-0x30],rsi
  40c2e2:	mov    rsi,QWORD PTR [rbp-0x28]
  40c2e6:	mov    rdi,QWORD PTR [rbp-0x30]
  40c2ea:	add    rsi,QWORD PTR [rdi+0x30]
  40c2ee:	mov    QWORD PTR [rdi+0x30],rsi
  40c2f2:	cmp    DWORD PTR [rbp-0x20],0x0
  40c2f6:	jge    40c3b8 <flatcc_emitter@@Base+0xf8>
  40c2fc:	mov    rax,QWORD PTR [rbp-0x28]
  40c300:	mov    rcx,QWORD PTR [rbp-0x30]
  40c304:	cmp    rax,QWORD PTR [rcx+0x18]
  40c308:	ja     40c34c <flatcc_emitter@@Base+0x8c>
  40c30e:	xor    eax,eax
  40c310:	mov    ecx,eax
  40c312:	mov    rdx,QWORD PTR [rbp-0x28]
  40c316:	mov    rsi,QWORD PTR [rbp-0x30]
  40c31a:	mov    rdi,QWORD PTR [rsi+0x10]
  40c31e:	sub    rcx,rdx
  40c321:	add    rdi,rcx
  40c324:	mov    QWORD PTR [rsi+0x10],rdi
  40c328:	mov    rcx,QWORD PTR [rbp-0x28]
  40c32c:	mov    rdx,QWORD PTR [rbp-0x30]
  40c330:	mov    rsi,QWORD PTR [rdx+0x18]
  40c334:	sub    rsi,rcx
  40c337:	mov    QWORD PTR [rdx+0x18],rsi
  40c33b:	mov    rcx,QWORD PTR [rbp-0x30]
  40c33f:	mov    rcx,QWORD PTR [rcx+0x10]
  40c343:	mov    QWORD PTR [rbp-0x38],rcx
  40c347:	jmp    40c466 <flatcc_emitter@@Base+0x1a6>
  40c34c:	mov    eax,DWORD PTR [rbp-0x1c]
  40c34f:	mov    rcx,QWORD PTR [rbp-0x18]
  40c353:	movsxd rdx,eax
  40c356:	shl    rdx,0x4
  40c35a:	add    rcx,rdx
  40c35d:	mov    QWORD PTR [rbp-0x18],rcx
  40c361:	mov    eax,DWORD PTR [rbp-0x1c]
  40c364:	mov    ecx,eax
  40c366:	add    ecx,0xffffffff
  40c369:	mov    DWORD PTR [rbp-0x1c],ecx
  40c36c:	cmp    eax,0x0
  40c36f:	je     40c3b3 <flatcc_emitter@@Base+0xf3>
  40c375:	mov    rax,QWORD PTR [rbp-0x18]
  40c379:	add    rax,0xfffffffffffffff0
  40c37d:	mov    QWORD PTR [rbp-0x18],rax
  40c381:	mov    rdi,QWORD PTR [rbp-0x30]
  40c385:	mov    rax,QWORD PTR [rbp-0x18]
  40c389:	mov    rsi,QWORD PTR [rax]
  40c38c:	mov    rax,QWORD PTR [rbp-0x18]
  40c390:	mov    rdx,QWORD PTR [rax+0x8]
  40c394:	call   40c4d0 <flatcc_emitter@@Base+0x210>
  40c399:	cmp    eax,0x0
  40c39c:	je     40c3ae <flatcc_emitter@@Base+0xee>
  40c3a2:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40c3a9:	jmp    40c4bf <flatcc_emitter@@Base+0x1ff>
  40c3ae:	jmp    40c361 <flatcc_emitter@@Base+0xa1>
  40c3b3:	jmp    40c45a <flatcc_emitter@@Base+0x19a>
  40c3b8:	mov    rax,QWORD PTR [rbp-0x28]
  40c3bc:	mov    rcx,QWORD PTR [rbp-0x30]
  40c3c0:	cmp    rax,QWORD PTR [rcx+0x28]
  40c3c4:	ja     40c3fe <flatcc_emitter@@Base+0x13e>
  40c3ca:	mov    rax,QWORD PTR [rbp-0x30]
  40c3ce:	mov    rax,QWORD PTR [rax+0x20]
  40c3d2:	mov    QWORD PTR [rbp-0x38],rax
  40c3d6:	mov    rax,QWORD PTR [rbp-0x28]
  40c3da:	mov    rcx,QWORD PTR [rbp-0x30]
  40c3de:	add    rax,QWORD PTR [rcx+0x20]
  40c3e2:	mov    QWORD PTR [rcx+0x20],rax
  40c3e6:	mov    rax,QWORD PTR [rbp-0x28]
  40c3ea:	mov    rcx,QWORD PTR [rbp-0x30]
  40c3ee:	mov    rdx,QWORD PTR [rcx+0x28]
  40c3f2:	sub    rdx,rax
  40c3f5:	mov    QWORD PTR [rcx+0x28],rdx
  40c3f9:	jmp    40c466 <flatcc_emitter@@Base+0x1a6>
  40c3fe:	jmp    40c403 <flatcc_emitter@@Base+0x143>
  40c403:	mov    eax,DWORD PTR [rbp-0x1c]
  40c406:	mov    ecx,eax
  40c408:	add    ecx,0xffffffff
  40c40b:	mov    DWORD PTR [rbp-0x1c],ecx
  40c40e:	cmp    eax,0x0
  40c411:	je     40c455 <flatcc_emitter@@Base+0x195>
  40c417:	mov    rdi,QWORD PTR [rbp-0x30]
  40c41b:	mov    rax,QWORD PTR [rbp-0x18]
  40c41f:	mov    rsi,QWORD PTR [rax]
  40c422:	mov    rax,QWORD PTR [rbp-0x18]
  40c426:	mov    rdx,QWORD PTR [rax+0x8]
  40c42a:	call   40c5d0 <flatcc_emitter@@Base+0x310>
  40c42f:	cmp    eax,0x0
  40c432:	je     40c444 <flatcc_emitter@@Base+0x184>
  40c438:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40c43f:	jmp    40c4bf <flatcc_emitter@@Base+0x1ff>
  40c444:	mov    rax,QWORD PTR [rbp-0x18]
  40c448:	add    rax,0x10
  40c44c:	mov    QWORD PTR [rbp-0x18],rax
  40c450:	jmp    40c403 <flatcc_emitter@@Base+0x143>
  40c455:	jmp    40c45a <flatcc_emitter@@Base+0x19a>
  40c45a:	mov    DWORD PTR [rbp-0x4],0x0
  40c461:	jmp    40c4bf <flatcc_emitter@@Base+0x1ff>
  40c466:	jmp    40c46b <flatcc_emitter@@Base+0x1ab>
  40c46b:	mov    eax,DWORD PTR [rbp-0x1c]
  40c46e:	mov    ecx,eax
  40c470:	add    ecx,0xffffffff
  40c473:	mov    DWORD PTR [rbp-0x1c],ecx
  40c476:	cmp    eax,0x0
  40c479:	je     40c4b8 <flatcc_emitter@@Base+0x1f8>
  40c47f:	mov    rdi,QWORD PTR [rbp-0x38]
  40c483:	mov    rax,QWORD PTR [rbp-0x18]
  40c487:	mov    rsi,QWORD PTR [rax]
  40c48a:	mov    rax,QWORD PTR [rbp-0x18]
  40c48e:	mov    rdx,QWORD PTR [rax+0x8]
  40c492:	call   4030c0 <memcpy@plt>
  40c497:	mov    rax,QWORD PTR [rbp-0x18]
  40c49b:	mov    rax,QWORD PTR [rax+0x8]
  40c49f:	add    rax,QWORD PTR [rbp-0x38]
  40c4a3:	mov    QWORD PTR [rbp-0x38],rax
  40c4a7:	mov    rax,QWORD PTR [rbp-0x18]
  40c4ab:	add    rax,0x10
  40c4af:	mov    QWORD PTR [rbp-0x18],rax
  40c4b3:	jmp    40c46b <flatcc_emitter@@Base+0x1ab>
  40c4b8:	mov    DWORD PTR [rbp-0x4],0x0
  40c4bf:	mov    eax,DWORD PTR [rbp-0x4]
  40c4c2:	add    rsp,0x40
  40c4c6:	pop    rbp
  40c4c7:	ret    
  40c4c8:	nop    DWORD PTR [rax+rax*1+0x0]
  40c4d0:	push   rbp
  40c4d1:	mov    rbp,rsp
  40c4d4:	sub    rsp,0x30
  40c4d8:	mov    QWORD PTR [rbp-0x10],rdi
  40c4dc:	mov    QWORD PTR [rbp-0x18],rsi
  40c4e0:	mov    QWORD PTR [rbp-0x20],rdx
  40c4e4:	mov    rdx,QWORD PTR [rbp-0x20]
  40c4e8:	add    rdx,QWORD PTR [rbp-0x18]
  40c4ec:	mov    QWORD PTR [rbp-0x18],rdx
  40c4f0:	cmp    QWORD PTR [rbp-0x20],0x0
  40c4f5:	je     40c5bf <flatcc_emitter@@Base+0x2ff>
  40c4fb:	mov    rax,QWORD PTR [rbp-0x20]
  40c4ff:	mov    QWORD PTR [rbp-0x28],rax
  40c503:	mov    rax,QWORD PTR [rbp-0x28]
  40c507:	mov    rcx,QWORD PTR [rbp-0x10]
  40c50b:	cmp    rax,QWORD PTR [rcx+0x18]
  40c50f:	jbe    40c554 <flatcc_emitter@@Base+0x294>
  40c515:	mov    rax,QWORD PTR [rbp-0x10]
  40c519:	mov    rax,QWORD PTR [rax+0x18]
  40c51d:	mov    QWORD PTR [rbp-0x28],rax
  40c521:	cmp    QWORD PTR [rbp-0x28],0x0
  40c526:	jne    40c54f <flatcc_emitter@@Base+0x28f>
  40c52c:	mov    rdi,QWORD PTR [rbp-0x10]
  40c530:	call   40c800 <flatcc_emitter_copy_buffer@@Base+0x150>
  40c535:	cmp    eax,0x0
  40c538:	je     40c54a <flatcc_emitter@@Base+0x28a>
  40c53e:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40c545:	jmp    40c5c6 <flatcc_emitter@@Base+0x306>
  40c54a:	jmp    40c4f0 <flatcc_emitter@@Base+0x230>
  40c54f:	jmp    40c554 <flatcc_emitter@@Base+0x294>
  40c554:	xor    eax,eax
  40c556:	mov    ecx,eax
  40c558:	mov    rdx,QWORD PTR [rbp-0x28]
  40c55c:	mov    rsi,QWORD PTR [rbp-0x10]
  40c560:	mov    rdi,QWORD PTR [rsi+0x10]
  40c564:	mov    r8,rcx
  40c567:	sub    r8,rdx
  40c56a:	add    rdi,r8
  40c56d:	mov    QWORD PTR [rsi+0x10],rdi
  40c571:	mov    rdx,QWORD PTR [rbp-0x28]
  40c575:	mov    rsi,QWORD PTR [rbp-0x10]
  40c579:	mov    rdi,QWORD PTR [rsi+0x18]
  40c57d:	sub    rdi,rdx
  40c580:	mov    QWORD PTR [rsi+0x18],rdi
  40c584:	mov    rdx,QWORD PTR [rbp-0x28]
  40c588:	mov    rsi,QWORD PTR [rbp-0x18]
  40c58c:	sub    rcx,rdx
  40c58f:	add    rsi,rcx
  40c592:	mov    QWORD PTR [rbp-0x18],rsi
  40c596:	mov    rcx,QWORD PTR [rbp-0x28]
  40c59a:	mov    rdx,QWORD PTR [rbp-0x20]
  40c59e:	sub    rdx,rcx
  40c5a1:	mov    QWORD PTR [rbp-0x20],rdx
  40c5a5:	mov    rcx,QWORD PTR [rbp-0x10]
  40c5a9:	mov    rdi,QWORD PTR [rcx+0x10]
  40c5ad:	mov    rsi,QWORD PTR [rbp-0x18]
  40c5b1:	mov    rdx,QWORD PTR [rbp-0x28]
  40c5b5:	call   4030c0 <memcpy@plt>
  40c5ba:	jmp    40c4f0 <flatcc_emitter@@Base+0x230>
  40c5bf:	mov    DWORD PTR [rbp-0x4],0x0
  40c5c6:	mov    eax,DWORD PTR [rbp-0x4]
  40c5c9:	add    rsp,0x30
  40c5cd:	pop    rbp
  40c5ce:	ret    
  40c5cf:	nop
  40c5d0:	push   rbp
  40c5d1:	mov    rbp,rsp
  40c5d4:	sub    rsp,0x30
  40c5d8:	mov    QWORD PTR [rbp-0x10],rdi
  40c5dc:	mov    QWORD PTR [rbp-0x18],rsi
  40c5e0:	mov    QWORD PTR [rbp-0x20],rdx
  40c5e4:	cmp    QWORD PTR [rbp-0x20],0x0
  40c5e9:	je     40c6a0 <flatcc_emitter@@Base+0x3e0>
  40c5ef:	mov    rax,QWORD PTR [rbp-0x20]
  40c5f3:	mov    QWORD PTR [rbp-0x28],rax
  40c5f7:	mov    rax,QWORD PTR [rbp-0x28]
  40c5fb:	mov    rcx,QWORD PTR [rbp-0x10]
  40c5ff:	cmp    rax,QWORD PTR [rcx+0x28]
  40c603:	jbe    40c648 <flatcc_emitter@@Base+0x388>
  40c609:	mov    rax,QWORD PTR [rbp-0x10]
  40c60d:	mov    rax,QWORD PTR [rax+0x28]
  40c611:	mov    QWORD PTR [rbp-0x28],rax
  40c615:	cmp    QWORD PTR [rbp-0x28],0x0
  40c61a:	jne    40c643 <flatcc_emitter@@Base+0x383>
  40c620:	mov    rdi,QWORD PTR [rbp-0x10]
  40c624:	call   40ca20 <flatcc_emitter_copy_buffer@@Base+0x370>
  40c629:	cmp    eax,0x0
  40c62c:	je     40c63e <flatcc_emitter@@Base+0x37e>
  40c632:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40c639:	jmp    40c6a7 <flatcc_emitter@@Base+0x3e7>
  40c63e:	jmp    40c5e4 <flatcc_emitter@@Base+0x324>
  40c643:	jmp    40c648 <flatcc_emitter@@Base+0x388>
  40c648:	mov    rax,QWORD PTR [rbp-0x10]
  40c64c:	mov    rdi,QWORD PTR [rax+0x20]
  40c650:	mov    rsi,QWORD PTR [rbp-0x18]
  40c654:	mov    rdx,QWORD PTR [rbp-0x28]
  40c658:	call   4030c0 <memcpy@plt>
  40c65d:	mov    rax,QWORD PTR [rbp-0x28]
  40c661:	mov    rdx,QWORD PTR [rbp-0x20]
  40c665:	sub    rdx,rax
  40c668:	mov    QWORD PTR [rbp-0x20],rdx
  40c66c:	mov    rax,QWORD PTR [rbp-0x28]
  40c670:	add    rax,QWORD PTR [rbp-0x18]
  40c674:	mov    QWORD PTR [rbp-0x18],rax
  40c678:	mov    rax,QWORD PTR [rbp-0x28]
  40c67c:	mov    rdx,QWORD PTR [rbp-0x10]
  40c680:	add    rax,QWORD PTR [rdx+0x20]
  40c684:	mov    QWORD PTR [rdx+0x20],rax
  40c688:	mov    rax,QWORD PTR [rbp-0x28]
  40c68c:	mov    rdx,QWORD PTR [rbp-0x10]
  40c690:	mov    rsi,QWORD PTR [rdx+0x28]
  40c694:	sub    rsi,rax
  40c697:	mov    QWORD PTR [rdx+0x28],rsi
  40c69b:	jmp    40c5e4 <flatcc_emitter@@Base+0x324>
  40c6a0:	mov    DWORD PTR [rbp-0x4],0x0
  40c6a7:	mov    eax,DWORD PTR [rbp-0x4]
  40c6aa:	add    rsp,0x30
  40c6ae:	pop    rbp
  40c6af:	ret    

000000000040c6b0 <flatcc_emitter_copy_buffer@@Base>:
  40c6b0:	push   rbp
  40c6b1:	mov    rbp,rsp
  40c6b4:	sub    rsp,0x30
  40c6b8:	mov    QWORD PTR [rbp-0x10],rdi
  40c6bc:	mov    QWORD PTR [rbp-0x18],rsi
  40c6c0:	mov    QWORD PTR [rbp-0x20],rdx
  40c6c4:	mov    rdx,QWORD PTR [rbp-0x20]
  40c6c8:	mov    rsi,QWORD PTR [rbp-0x10]
  40c6cc:	cmp    rdx,QWORD PTR [rsi+0x30]
  40c6d0:	jae    40c6e3 <flatcc_emitter_copy_buffer@@Base+0x33>
  40c6d6:	mov    QWORD PTR [rbp-0x8],0x0
  40c6de:	jmp    40c7ef <flatcc_emitter_copy_buffer@@Base+0x13f>
  40c6e3:	mov    rax,QWORD PTR [rbp-0x10]
  40c6e7:	cmp    QWORD PTR [rax],0x0
  40c6eb:	jne    40c6fe <flatcc_emitter_copy_buffer@@Base+0x4e>
  40c6f1:	mov    QWORD PTR [rbp-0x8],0x0
  40c6f9:	jmp    40c7ef <flatcc_emitter_copy_buffer@@Base+0x13f>
  40c6fe:	mov    rax,QWORD PTR [rbp-0x10]
  40c702:	mov    rax,QWORD PTR [rax]
  40c705:	mov    rcx,QWORD PTR [rbp-0x10]
  40c709:	cmp    rax,QWORD PTR [rcx+0x8]
  40c70d:	jne    40c739 <flatcc_emitter_copy_buffer@@Base+0x89>
  40c713:	mov    rdi,QWORD PTR [rbp-0x18]
  40c717:	mov    rax,QWORD PTR [rbp-0x10]
  40c71b:	mov    rsi,QWORD PTR [rax+0x10]
  40c71f:	mov    rax,QWORD PTR [rbp-0x10]
  40c723:	mov    rdx,QWORD PTR [rax+0x30]
  40c727:	call   4030c0 <memcpy@plt>
  40c72c:	mov    rax,QWORD PTR [rbp-0x18]
  40c730:	mov    QWORD PTR [rbp-0x8],rax
  40c734:	jmp    40c7ef <flatcc_emitter_copy_buffer@@Base+0x13f>
  40c739:	mov    eax,0xb80
  40c73e:	mov    ecx,eax
  40c740:	mov    rdx,QWORD PTR [rbp-0x10]
  40c744:	sub    rcx,QWORD PTR [rdx+0x18]
  40c748:	mov    QWORD PTR [rbp-0x30],rcx
  40c74c:	mov    rdi,QWORD PTR [rbp-0x18]
  40c750:	mov    rcx,QWORD PTR [rbp-0x10]
  40c754:	mov    rsi,QWORD PTR [rcx+0x10]
  40c758:	mov    rdx,QWORD PTR [rbp-0x30]
  40c75c:	call   4030c0 <memcpy@plt>
  40c761:	mov    rcx,QWORD PTR [rbp-0x18]
  40c765:	add    rcx,QWORD PTR [rbp-0x30]
  40c769:	mov    QWORD PTR [rbp-0x18],rcx
  40c76d:	mov    rcx,QWORD PTR [rbp-0x10]
  40c771:	mov    rcx,QWORD PTR [rcx]
  40c774:	mov    rcx,QWORD PTR [rcx+0xb80]
  40c77b:	mov    QWORD PTR [rbp-0x28],rcx
  40c77f:	mov    rax,QWORD PTR [rbp-0x28]
  40c783:	mov    rcx,QWORD PTR [rbp-0x10]
  40c787:	cmp    rax,QWORD PTR [rcx+0x8]
  40c78b:	je     40c7c8 <flatcc_emitter_copy_buffer@@Base+0x118>
  40c791:	mov    eax,0xb80
  40c796:	mov    edx,eax
  40c798:	mov    rdi,QWORD PTR [rbp-0x18]
  40c79c:	mov    rsi,QWORD PTR [rbp-0x28]
  40c7a0:	call   4030c0 <memcpy@plt>
  40c7a5:	mov    rdx,QWORD PTR [rbp-0x18]
  40c7a9:	add    rdx,0xb80
  40c7b0:	mov    QWORD PTR [rbp-0x18],rdx
  40c7b4:	mov    rdx,QWORD PTR [rbp-0x28]
  40c7b8:	mov    rdx,QWORD PTR [rdx+0xb80]
  40c7bf:	mov    QWORD PTR [rbp-0x28],rdx
  40c7c3:	jmp    40c77f <flatcc_emitter_copy_buffer@@Base+0xcf>
  40c7c8:	mov    eax,0xb80
  40c7cd:	mov    ecx,eax
  40c7cf:	mov    rdi,QWORD PTR [rbp-0x18]
  40c7d3:	mov    rsi,QWORD PTR [rbp-0x28]
  40c7d7:	mov    rdx,QWORD PTR [rbp-0x10]
  40c7db:	sub    rcx,QWORD PTR [rdx+0x28]
  40c7df:	mov    rdx,rcx
  40c7e2:	call   4030c0 <memcpy@plt>
  40c7e7:	mov    rcx,QWORD PTR [rbp-0x18]
  40c7eb:	mov    QWORD PTR [rbp-0x8],rcx
  40c7ef:	mov    rax,QWORD PTR [rbp-0x8]
  40c7f3:	add    rsp,0x30
  40c7f7:	pop    rbp
  40c7f8:	ret    
  40c7f9:	nop    DWORD PTR [rax+0x0]
  40c800:	push   rbp
  40c801:	mov    rbp,rsp
  40c804:	sub    rsp,0x20
  40c808:	mov    QWORD PTR [rbp-0x10],rdi
  40c80c:	mov    QWORD PTR [rbp-0x18],0x0
  40c814:	mov    rdi,QWORD PTR [rbp-0x10]
  40c818:	cmp    QWORD PTR [rdi],0x0
  40c81c:	je     40c87f <flatcc_emitter_copy_buffer@@Base+0x1cf>
  40c822:	mov    rax,QWORD PTR [rbp-0x10]
  40c826:	mov    rax,QWORD PTR [rax]
  40c829:	mov    rax,QWORD PTR [rax+0xb88]
  40c830:	mov    rcx,QWORD PTR [rbp-0x10]
  40c834:	cmp    rax,QWORD PTR [rcx+0x8]
  40c838:	je     40c87f <flatcc_emitter_copy_buffer@@Base+0x1cf>
  40c83e:	mov    rax,QWORD PTR [rbp-0x10]
  40c842:	mov    rax,QWORD PTR [rax]
  40c845:	mov    ecx,DWORD PTR [rax+0xb90]
  40c84b:	sub    ecx,0xb80
  40c851:	mov    rax,QWORD PTR [rbp-0x10]
  40c855:	mov    rax,QWORD PTR [rax]
  40c858:	mov    rax,QWORD PTR [rax+0xb88]
  40c85f:	mov    DWORD PTR [rax+0xb90],ecx
  40c865:	mov    rax,QWORD PTR [rbp-0x10]
  40c869:	mov    rax,QWORD PTR [rax]
  40c86c:	mov    rax,QWORD PTR [rax+0xb88]
  40c873:	mov    rdx,QWORD PTR [rbp-0x10]
  40c877:	mov    QWORD PTR [rdx],rax
  40c87a:	jmp    40c9c2 <flatcc_emitter_copy_buffer@@Base+0x312>
  40c87f:	mov    eax,0xb98
  40c884:	mov    edi,eax
  40c886:	call   4030d0 <malloc@plt>
  40c88b:	mov    QWORD PTR [rbp-0x18],rax
  40c88f:	cmp    rax,0x0
  40c893:	jne    40c8a5 <flatcc_emitter_copy_buffer@@Base+0x1f5>
  40c899:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40c8a0:	jmp    40ca11 <flatcc_emitter_copy_buffer@@Base+0x361>
  40c8a5:	mov    rax,QWORD PTR [rbp-0x10]
  40c8a9:	mov    rcx,QWORD PTR [rax+0x38]
  40c8ad:	add    rcx,0xb80
  40c8b4:	mov    QWORD PTR [rax+0x38],rcx
  40c8b8:	mov    rax,QWORD PTR [rbp-0x10]
  40c8bc:	cmp    QWORD PTR [rax],0x0
  40c8c0:	je     40c920 <flatcc_emitter_copy_buffer@@Base+0x270>
  40c8c6:	mov    rax,QWORD PTR [rbp-0x10]
  40c8ca:	mov    rax,QWORD PTR [rax+0x8]
  40c8ce:	mov    rcx,QWORD PTR [rbp-0x18]
  40c8d2:	mov    QWORD PTR [rcx+0xb88],rax
  40c8d9:	mov    rax,QWORD PTR [rbp-0x10]
  40c8dd:	mov    rax,QWORD PTR [rax]
  40c8e0:	mov    rcx,QWORD PTR [rbp-0x18]
  40c8e4:	mov    QWORD PTR [rcx+0xb80],rax
  40c8eb:	mov    rax,QWORD PTR [rbp-0x18]
  40c8ef:	mov    rcx,QWORD PTR [rbp-0x10]
  40c8f3:	mov    rcx,QWORD PTR [rcx]
  40c8f6:	mov    QWORD PTR [rcx+0xb88],rax
  40c8fd:	mov    rax,QWORD PTR [rbp-0x18]
  40c901:	mov    rcx,QWORD PTR [rbp-0x10]
  40c905:	mov    rcx,QWORD PTR [rcx+0x8]
  40c909:	mov    QWORD PTR [rcx+0xb80],rax
  40c910:	mov    rax,QWORD PTR [rbp-0x18]
  40c914:	mov    rcx,QWORD PTR [rbp-0x10]
  40c918:	mov    QWORD PTR [rcx],rax
  40c91b:	jmp    40c9c2 <flatcc_emitter_copy_buffer@@Base+0x312>
  40c920:	xor    eax,eax
  40c922:	mov    ecx,0xb80
  40c927:	mov    edx,ecx
  40c929:	mov    rsi,QWORD PTR [rbp-0x18]
  40c92d:	mov    rdi,QWORD PTR [rbp-0x10]
  40c931:	mov    QWORD PTR [rdi],rsi
  40c934:	mov    rsi,QWORD PTR [rbp-0x18]
  40c938:	mov    rdi,QWORD PTR [rbp-0x10]
  40c93c:	mov    QWORD PTR [rdi+0x8],rsi
  40c940:	mov    rsi,QWORD PTR [rbp-0x18]
  40c944:	mov    rdi,QWORD PTR [rbp-0x18]
  40c948:	mov    QWORD PTR [rdi+0xb80],rsi
  40c94f:	mov    rsi,QWORD PTR [rbp-0x18]
  40c953:	mov    rdi,QWORD PTR [rbp-0x18]
  40c957:	mov    QWORD PTR [rdi+0xb88],rsi
  40c95e:	mov    rsi,QWORD PTR [rbp-0x10]
  40c962:	mov    rsi,QWORD PTR [rsi]
  40c965:	add    rsi,0x5c0
  40c96c:	mov    rdi,QWORD PTR [rbp-0x10]
  40c970:	mov    QWORD PTR [rdi+0x10],rsi
  40c974:	mov    rsi,QWORD PTR [rbp-0x10]
  40c978:	mov    rsi,QWORD PTR [rsi+0x10]
  40c97c:	mov    rdi,QWORD PTR [rbp-0x10]
  40c980:	mov    QWORD PTR [rdi+0x20],rsi
  40c984:	mov    rsi,QWORD PTR [rbp-0x10]
  40c988:	mov    QWORD PTR [rsi+0x18],0x5c0
  40c990:	mov    rsi,QWORD PTR [rbp-0x10]
  40c994:	sub    rdx,QWORD PTR [rsi+0x18]
  40c998:	mov    rsi,QWORD PTR [rbp-0x10]
  40c99c:	mov    QWORD PTR [rsi+0x28],rdx
  40c9a0:	mov    rdx,QWORD PTR [rbp-0x10]
  40c9a4:	mov    rdx,QWORD PTR [rdx+0x18]
  40c9a8:	mov    ecx,edx
  40c9aa:	sub    eax,ecx
  40c9ac:	mov    rdx,QWORD PTR [rbp-0x18]
  40c9b0:	mov    DWORD PTR [rdx+0xb90],eax
  40c9b6:	mov    DWORD PTR [rbp-0x4],0x0
  40c9bd:	jmp    40ca11 <flatcc_emitter_copy_buffer@@Base+0x361>
  40c9c2:	mov    rax,QWORD PTR [rbp-0x10]
  40c9c6:	mov    rax,QWORD PTR [rax]
  40c9c9:	add    rax,0xb80
  40c9cf:	mov    rcx,QWORD PTR [rbp-0x10]
  40c9d3:	mov    QWORD PTR [rcx+0x10],rax
  40c9d7:	mov    rax,QWORD PTR [rbp-0x10]
  40c9db:	mov    QWORD PTR [rax+0x18],0xb80
  40c9e3:	mov    rax,QWORD PTR [rbp-0x10]
  40c9e7:	mov    rax,QWORD PTR [rax]
  40c9ea:	mov    rax,QWORD PTR [rax+0xb80]
  40c9f1:	mov    edx,DWORD PTR [rax+0xb90]
  40c9f7:	sub    edx,0xb80
  40c9fd:	mov    rax,QWORD PTR [rbp-0x10]
  40ca01:	mov    rax,QWORD PTR [rax]
  40ca04:	mov    DWORD PTR [rax+0xb90],edx
  40ca0a:	mov    DWORD PTR [rbp-0x4],0x0
  40ca11:	mov    eax,DWORD PTR [rbp-0x4]
  40ca14:	add    rsp,0x20
  40ca18:	pop    rbp
  40ca19:	ret    
  40ca1a:	nop    WORD PTR [rax+rax*1+0x0]
  40ca20:	push   rbp
  40ca21:	mov    rbp,rsp
  40ca24:	sub    rsp,0x20
  40ca28:	mov    QWORD PTR [rbp-0x10],rdi
  40ca2c:	mov    QWORD PTR [rbp-0x18],0x0
  40ca34:	mov    rdi,QWORD PTR [rbp-0x10]
  40ca38:	cmp    QWORD PTR [rdi+0x8],0x0
  40ca3d:	je     40ca7b <flatcc_emitter_copy_buffer@@Base+0x3cb>
  40ca43:	mov    rax,QWORD PTR [rbp-0x10]
  40ca47:	mov    rax,QWORD PTR [rax+0x8]
  40ca4b:	mov    rax,QWORD PTR [rax+0xb80]
  40ca52:	mov    rcx,QWORD PTR [rbp-0x10]
  40ca56:	cmp    rax,QWORD PTR [rcx]
  40ca59:	je     40ca7b <flatcc_emitter_copy_buffer@@Base+0x3cb>
  40ca5f:	mov    rax,QWORD PTR [rbp-0x10]
  40ca63:	mov    rax,QWORD PTR [rax+0x8]
  40ca67:	mov    rax,QWORD PTR [rax+0xb80]
  40ca6e:	mov    rcx,QWORD PTR [rbp-0x10]
  40ca72:	mov    QWORD PTR [rcx+0x8],rax
  40ca76:	jmp    40cbc0 <flatcc_emitter_copy_buffer@@Base+0x510>
  40ca7b:	mov    eax,0xb98
  40ca80:	mov    edi,eax
  40ca82:	call   4030d0 <malloc@plt>
  40ca87:	mov    QWORD PTR [rbp-0x18],rax
  40ca8b:	cmp    rax,0x0
  40ca8f:	jne    40caa1 <flatcc_emitter_copy_buffer@@Base+0x3f1>
  40ca95:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40ca9c:	jmp    40cc0c <flatcc_emitter_copy_buffer@@Base+0x55c>
  40caa1:	mov    rax,QWORD PTR [rbp-0x10]
  40caa5:	mov    rcx,QWORD PTR [rax+0x38]
  40caa9:	add    rcx,0xb80
  40cab0:	mov    QWORD PTR [rax+0x38],rcx
  40cab4:	mov    rax,QWORD PTR [rbp-0x10]
  40cab8:	cmp    QWORD PTR [rax+0x8],0x0
  40cabd:	je     40cb1e <flatcc_emitter_copy_buffer@@Base+0x46e>
  40cac3:	mov    rax,QWORD PTR [rbp-0x10]
  40cac7:	mov    rax,QWORD PTR [rax+0x8]
  40cacb:	mov    rcx,QWORD PTR [rbp-0x18]
  40cacf:	mov    QWORD PTR [rcx+0xb88],rax
  40cad6:	mov    rax,QWORD PTR [rbp-0x10]
  40cada:	mov    rax,QWORD PTR [rax]
  40cadd:	mov    rcx,QWORD PTR [rbp-0x18]
  40cae1:	mov    QWORD PTR [rcx+0xb80],rax
  40cae8:	mov    rax,QWORD PTR [rbp-0x18]
  40caec:	mov    rcx,QWORD PTR [rbp-0x10]
  40caf0:	mov    rcx,QWORD PTR [rcx]
  40caf3:	mov    QWORD PTR [rcx+0xb88],rax
  40cafa:	mov    rax,QWORD PTR [rbp-0x18]
  40cafe:	mov    rcx,QWORD PTR [rbp-0x10]
  40cb02:	mov    rcx,QWORD PTR [rcx+0x8]
  40cb06:	mov    QWORD PTR [rcx+0xb80],rax
  40cb0d:	mov    rax,QWORD PTR [rbp-0x18]
  40cb11:	mov    rcx,QWORD PTR [rbp-0x10]
  40cb15:	mov    QWORD PTR [rcx+0x8],rax
  40cb19:	jmp    40cbc0 <flatcc_emitter_copy_buffer@@Base+0x510>
  40cb1e:	xor    eax,eax
  40cb20:	mov    ecx,0xb80
  40cb25:	mov    edx,ecx
  40cb27:	mov    rsi,QWORD PTR [rbp-0x18]
  40cb2b:	mov    rdi,QWORD PTR [rbp-0x10]
  40cb2f:	mov    QWORD PTR [rdi],rsi
  40cb32:	mov    rsi,QWORD PTR [rbp-0x18]
  40cb36:	mov    rdi,QWORD PTR [rbp-0x10]
  40cb3a:	mov    QWORD PTR [rdi+0x8],rsi
  40cb3e:	mov    rsi,QWORD PTR [rbp-0x18]
  40cb42:	mov    rdi,QWORD PTR [rbp-0x18]
  40cb46:	mov    QWORD PTR [rdi+0xb80],rsi
  40cb4d:	mov    rsi,QWORD PTR [rbp-0x18]
  40cb51:	mov    rdi,QWORD PTR [rbp-0x18]
  40cb55:	mov    QWORD PTR [rdi+0xb88],rsi
  40cb5c:	mov    rsi,QWORD PTR [rbp-0x10]
  40cb60:	mov    rsi,QWORD PTR [rsi]
  40cb63:	add    rsi,0x5c0
  40cb6a:	mov    rdi,QWORD PTR [rbp-0x10]
  40cb6e:	mov    QWORD PTR [rdi+0x10],rsi
  40cb72:	mov    rsi,QWORD PTR [rbp-0x10]
  40cb76:	mov    rsi,QWORD PTR [rsi+0x10]
  40cb7a:	mov    rdi,QWORD PTR [rbp-0x10]
  40cb7e:	mov    QWORD PTR [rdi+0x20],rsi
  40cb82:	mov    rsi,QWORD PTR [rbp-0x10]
  40cb86:	mov    QWORD PTR [rsi+0x18],0x5c0
  40cb8e:	mov    rsi,QWORD PTR [rbp-0x10]
  40cb92:	sub    rdx,QWORD PTR [rsi+0x18]
  40cb96:	mov    rsi,QWORD PTR [rbp-0x10]
  40cb9a:	mov    QWORD PTR [rsi+0x28],rdx
  40cb9e:	mov    rdx,QWORD PTR [rbp-0x10]
  40cba2:	mov    rdx,QWORD PTR [rdx+0x18]
  40cba6:	mov    ecx,edx
  40cba8:	sub    eax,ecx
  40cbaa:	mov    rdx,QWORD PTR [rbp-0x18]
  40cbae:	mov    DWORD PTR [rdx+0xb90],eax
  40cbb4:	mov    DWORD PTR [rbp-0x4],0x0
  40cbbb:	jmp    40cc0c <flatcc_emitter_copy_buffer@@Base+0x55c>
  40cbc0:	mov    rax,QWORD PTR [rbp-0x10]
  40cbc4:	mov    rax,QWORD PTR [rax+0x8]
  40cbc8:	mov    rcx,QWORD PTR [rbp-0x10]
  40cbcc:	mov    QWORD PTR [rcx+0x20],rax
  40cbd0:	mov    rax,QWORD PTR [rbp-0x10]
  40cbd4:	mov    QWORD PTR [rax+0x28],0xb80
  40cbdc:	mov    rax,QWORD PTR [rbp-0x10]
  40cbe0:	mov    rax,QWORD PTR [rax+0x8]
  40cbe4:	mov    rax,QWORD PTR [rax+0xb88]
  40cbeb:	mov    edx,DWORD PTR [rax+0xb90]
  40cbf1:	add    edx,0xb80
  40cbf7:	mov    rax,QWORD PTR [rbp-0x10]
  40cbfb:	mov    rax,QWORD PTR [rax+0x8]
  40cbff:	mov    DWORD PTR [rax+0xb90],edx
  40cc05:	mov    DWORD PTR [rbp-0x4],0x0
  40cc0c:	mov    eax,DWORD PTR [rbp-0x4]
  40cc0f:	add    rsp,0x20
  40cc13:	pop    rbp
  40cc14:	ret    
  40cc15:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cc1f:	nop

000000000040cc20 <__libc_csu_init@@Base>:
  40cc20:	endbr64 
  40cc24:	push   r15
  40cc26:	lea    r15,[rip+0x61d3]        # 412e00 <flatcc_builder_padding_base@@Base+0x54a0>
  40cc2d:	push   r14
  40cc2f:	mov    r14,rdx
  40cc32:	push   r13
  40cc34:	mov    r13,rsi
  40cc37:	push   r12
  40cc39:	mov    r12d,edi
  40cc3c:	push   rbp
  40cc3d:	lea    rbp,[rip+0x61c4]        # 412e08 <flatcc_builder_padding_base@@Base+0x54a8>
  40cc44:	push   rbx
  40cc45:	sub    rbp,r15
  40cc48:	sub    rsp,0x8
  40cc4c:	call   403000 <free@plt-0x30>
  40cc51:	sar    rbp,0x3
  40cc55:	je     40cc76 <__libc_csu_init@@Base+0x56>
  40cc57:	xor    ebx,ebx
  40cc59:	nop    DWORD PTR [rax+0x0]
  40cc60:	mov    rdx,r14
  40cc63:	mov    rsi,r13
  40cc66:	mov    edi,r12d
  40cc69:	call   QWORD PTR [r15+rbx*8]
  40cc6d:	add    rbx,0x1
  40cc71:	cmp    rbp,rbx
  40cc74:	jne    40cc60 <__libc_csu_init@@Base+0x40>
  40cc76:	add    rsp,0x8
  40cc7a:	pop    rbx
  40cc7b:	pop    rbp
  40cc7c:	pop    r12
  40cc7e:	pop    r13
  40cc80:	pop    r14
  40cc82:	pop    r15
  40cc84:	ret    
  40cc85:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000040cc90 <__libc_csu_fini@@Base>:
  40cc90:	endbr64 
  40cc94:	ret    

Disassembly of section .fini:

000000000040cc98 <.fini>:
  40cc98:	endbr64 
  40cc9c:	sub    rsp,0x8
  40cca0:	add    rsp,0x8
  40cca4:	ret    
