
../repos/dvidelabs-flatcc-3b39ef7/test/json_test/test_json_parser:     file format elf64-x86-64


Disassembly of section .init:

0000000000404000 <.init>:
  404000:	endbr64 
  404004:	sub    rsp,0x8
  404008:	mov    rax,QWORD PTR [rip+0x26fd9]        # 42afe8 <__gmon_start__>
  40400f:	test   rax,rax
  404012:	je     404016 <free@plt-0x1a>
  404014:	call   rax
  404016:	add    rsp,0x8
  40401a:	ret    

Disassembly of section .plt:

0000000000404020 <free@plt-0x10>:
  404020:	push   QWORD PTR [rip+0x26fe2]        # 42b008 <flatcc_builder_padding_base@@Base+0x6178>
  404026:	jmp    QWORD PTR [rip+0x26fe4]        # 42b010 <flatcc_builder_padding_base@@Base+0x6180>
  40402c:	nop    DWORD PTR [rax+0x0]

0000000000404030 <free@plt>:
  404030:	jmp    QWORD PTR [rip+0x26fe2]        # 42b018 <free@GLIBC_2.2.5>
  404036:	push   0x0
  40403b:	jmp    404020 <free@plt-0x10>

0000000000404040 <strtod@plt>:
  404040:	jmp    QWORD PTR [rip+0x26fda]        # 42b020 <strtod@GLIBC_2.2.5>
  404046:	push   0x1
  40404b:	jmp    404020 <free@plt-0x10>

0000000000404050 <fread_unlocked@plt>:
  404050:	jmp    QWORD PTR [rip+0x26fd2]        # 42b028 <fread_unlocked@GLIBC_2.2.5>
  404056:	push   0x2
  40405b:	jmp    404020 <free@plt-0x10>

0000000000404060 <fclose@plt>:
  404060:	jmp    QWORD PTR [rip+0x26fca]        # 42b030 <fclose@GLIBC_2.2.5>
  404066:	push   0x3
  40406b:	jmp    404020 <free@plt-0x10>

0000000000404070 <strlen@plt>:
  404070:	jmp    QWORD PTR [rip+0x26fc2]        # 42b038 <strlen@GLIBC_2.2.5>
  404076:	push   0x4
  40407b:	jmp    404020 <free@plt-0x10>

0000000000404080 <rewind@plt>:
  404080:	jmp    QWORD PTR [rip+0x26fba]        # 42b040 <rewind@GLIBC_2.2.5>
  404086:	push   0x5
  40408b:	jmp    404020 <free@plt-0x10>

0000000000404090 <__assert_fail@plt>:
  404090:	jmp    QWORD PTR [rip+0x26fb2]        # 42b048 <__assert_fail@GLIBC_2.2.5>
  404096:	push   0x6
  40409b:	jmp    404020 <free@plt-0x10>

00000000004040a0 <memset@plt>:
  4040a0:	jmp    QWORD PTR [rip+0x26faa]        # 42b050 <memset@GLIBC_2.2.5>
  4040a6:	push   0x7
  4040ab:	jmp    404020 <free@plt-0x10>

00000000004040b0 <fputc@plt>:
  4040b0:	jmp    QWORD PTR [rip+0x26fa2]        # 42b058 <fputc@GLIBC_2.2.5>
  4040b6:	push   0x8
  4040bb:	jmp    404020 <free@plt-0x10>

00000000004040c0 <memchr@plt>:
  4040c0:	jmp    QWORD PTR [rip+0x26f9a]        # 42b060 <memchr@GLIBC_2.2.5>
  4040c6:	push   0x9
  4040cb:	jmp    404020 <free@plt-0x10>

00000000004040d0 <memcmp@plt>:
  4040d0:	jmp    QWORD PTR [rip+0x26f92]        # 42b068 <memcmp@GLIBC_2.2.5>
  4040d6:	push   0xa
  4040db:	jmp    404020 <free@plt-0x10>

00000000004040e0 <fprintf@plt>:
  4040e0:	jmp    QWORD PTR [rip+0x26f8a]        # 42b070 <fprintf@GLIBC_2.2.5>
  4040e6:	push   0xb
  4040eb:	jmp    404020 <free@plt-0x10>

00000000004040f0 <ftell@plt>:
  4040f0:	jmp    QWORD PTR [rip+0x26f82]        # 42b078 <ftell@GLIBC_2.2.5>
  4040f6:	push   0xc
  4040fb:	jmp    404020 <free@plt-0x10>

0000000000404100 <memcpy@plt>:
  404100:	jmp    QWORD PTR [rip+0x26f7a]        # 42b080 <memcpy@GLIBC_2.14>
  404106:	push   0xd
  40410b:	jmp    404020 <free@plt-0x10>

0000000000404110 <malloc@plt>:
  404110:	jmp    QWORD PTR [rip+0x26f72]        # 42b088 <malloc@GLIBC_2.2.5>
  404116:	push   0xe
  40411b:	jmp    404020 <free@plt-0x10>

0000000000404120 <fseek@plt>:
  404120:	jmp    QWORD PTR [rip+0x26f6a]        # 42b090 <fseek@GLIBC_2.2.5>
  404126:	push   0xf
  40412b:	jmp    404020 <free@plt-0x10>

0000000000404130 <realloc@plt>:
  404130:	jmp    QWORD PTR [rip+0x26f62]        # 42b098 <realloc@GLIBC_2.2.5>
  404136:	push   0x10
  40413b:	jmp    404020 <free@plt-0x10>

0000000000404140 <fopen@plt>:
  404140:	jmp    QWORD PTR [rip+0x26f5a]        # 42b0a0 <fopen@GLIBC_2.2.5>
  404146:	push   0x11
  40414b:	jmp    404020 <free@plt-0x10>

0000000000404150 <exit@plt>:
  404150:	jmp    QWORD PTR [rip+0x26f52]        # 42b0a8 <exit@GLIBC_2.2.5>
  404156:	push   0x12
  40415b:	jmp    404020 <free@plt-0x10>

0000000000404160 <fwrite@plt>:
  404160:	jmp    QWORD PTR [rip+0x26f4a]        # 42b0b0 <fwrite@GLIBC_2.2.5>
  404166:	push   0x13
  40416b:	jmp    404020 <free@plt-0x10>

0000000000404170 <posix_memalign@plt>:
  404170:	jmp    QWORD PTR [rip+0x26f42]        # 42b0b8 <posix_memalign@GLIBC_2.2.5>
  404176:	push   0x14
  40417b:	jmp    404020 <free@plt-0x10>

Disassembly of section .text:

0000000000404180 <_start@@Base>:
  404180:	endbr64 
  404184:	xor    ebp,ebp
  404186:	mov    r9,rdx
  404189:	pop    rsi
  40418a:	mov    rdx,rsp
  40418d:	and    rsp,0xfffffffffffffff0
  404191:	push   rax
  404192:	push   rsp
  404193:	mov    r8,0x4231c0
  40419a:	mov    rcx,0x423150
  4041a1:	mov    rdi,0x404940
  4041a8:	call   QWORD PTR [rip+0x26e32]        # 42afe0 <__libc_start_main@GLIBC_2.2.5>
  4041ae:	hlt    
  4041af:	nop
  4041b0:	endbr64 
  4041b4:	ret    
  4041b5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4041bf:	nop
  4041c0:	mov    eax,0x42b7d8
  4041c5:	cmp    rax,0x42b7d8
  4041cb:	je     4041e0 <_start@@Base+0x60>
  4041cd:	mov    eax,0x0
  4041d2:	test   rax,rax
  4041d5:	je     4041e0 <_start@@Base+0x60>
  4041d7:	mov    edi,0x42b7d8
  4041dc:	jmp    rax
  4041de:	xchg   ax,ax
  4041e0:	ret    
  4041e1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4041ec:	nop    DWORD PTR [rax+0x0]
  4041f0:	mov    esi,0x42b7d8
  4041f5:	sub    rsi,0x42b7d8
  4041fc:	mov    rax,rsi
  4041ff:	shr    rsi,0x3f
  404203:	sar    rax,0x3
  404207:	add    rsi,rax
  40420a:	sar    rsi,1
  40420d:	je     404220 <_start@@Base+0xa0>
  40420f:	mov    eax,0x0
  404214:	test   rax,rax
  404217:	je     404220 <_start@@Base+0xa0>
  404219:	mov    edi,0x42b7d8
  40421e:	jmp    rax
  404220:	ret    
  404221:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40422c:	nop    DWORD PTR [rax+0x0]
  404230:	endbr64 
  404234:	cmp    BYTE PTR [rip+0x2759d],0x0        # 42b7d8 <__bss_start@@Base>
  40423b:	jne    404250 <_start@@Base+0xd0>
  40423d:	push   rbp
  40423e:	mov    rbp,rsp
  404241:	call   4041c0 <_start@@Base+0x40>
  404246:	mov    BYTE PTR [rip+0x2758b],0x1        # 42b7d8 <__bss_start@@Base>
  40424d:	pop    rbp
  40424e:	ret    
  40424f:	nop
  404250:	ret    
  404251:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40425c:	nop    DWORD PTR [rax+0x0]
  404260:	endbr64 
  404264:	jmp    4041f0 <_start@@Base+0x70>
  404266:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000404270 <verify_parse@@Base>:
  404270:	push   rax
  404271:	test   rdi,rdi
  404274:	je     404364 <verify_parse@@Base+0xf4>
  40427a:	cmp    DWORD PTR [rdi+0x4],0x534e4f4d
  404281:	jne    404364 <verify_parse@@Base+0xf4>
  404287:	mov    ecx,DWORD PTR [rdi]
  404289:	lea    rax,[rdi+rcx*1]
  40428d:	movsxd rcx,DWORD PTR [rdi+rcx*1]
  404291:	mov    rdx,rax
  404294:	sub    rdx,rcx
  404297:	movzx  edx,WORD PTR [rdx]
  40429a:	cmp    edx,0x5
  40429d:	jbe    404345 <verify_parse@@Base+0xd5>
  4042a3:	neg    rcx
  4042a6:	movzx  ecx,WORD PTR [rax+rcx*1+0x4]
  4042ab:	test   rcx,rcx
  4042ae:	je     404345 <verify_parse@@Base+0xd5>
  4042b4:	add    rax,rcx
  4042b7:	je     404345 <verify_parse@@Base+0xd5>
  4042bd:	vmovss xmm0,DWORD PTR [rax]
  4042c1:	vucomiss xmm0,DWORD PTR [rip+0x1fd3b]        # 424004 <_IO_stdin_used@@Base+0x4>
  4042c9:	jne    404383 <verify_parse@@Base+0x113>
  4042cf:	jp     404383 <verify_parse@@Base+0x113>
  4042d5:	vmovss xmm0,DWORD PTR [rax+0x4]
  4042da:	vucomiss xmm0,DWORD PTR [rip+0x1fd26]        # 424008 <_IO_stdin_used@@Base+0x8>
  4042e2:	jne    4043a2 <verify_parse@@Base+0x132>
  4042e8:	jp     4043a2 <verify_parse@@Base+0x132>
  4042ee:	vmovss xmm0,DWORD PTR [rax+0x8]
  4042f3:	vucomiss xmm0,DWORD PTR [rip+0x1fd11]        # 42400c <_IO_stdin_used@@Base+0xc>
  4042fb:	jne    4043c1 <verify_parse@@Base+0x151>
  404301:	jp     4043c1 <verify_parse@@Base+0x151>
  404307:	vmovsd xmm0,QWORD PTR [rax+0x10]
  40430c:	vucomisd xmm0,QWORD PTR [rip+0x1fd0c]        # 424020 <_IO_stdin_used@@Base+0x20>
  404314:	jne    4043e0 <verify_parse@@Base+0x170>
  40431a:	jp     4043e0 <verify_parse@@Base+0x170>
  404320:	cmp    BYTE PTR [rax+0x18],0x2
  404324:	jne    4043ff <verify_parse@@Base+0x18f>
  40432a:	movzx  ecx,WORD PTR [rax+0x1a]
  40432e:	cmp    ecx,0x5
  404331:	jne    40441e <verify_parse@@Base+0x1ae>
  404337:	cmp    BYTE PTR [rax+0x1c],0x6
  40433b:	jne    40443d <verify_parse@@Base+0x1cd>
  404341:	xor    eax,eax
  404343:	pop    rcx
  404344:	ret    
  404345:	lea    rdi,[rip+0x21f96]        # 4262e2 <flatcc_builder_padding_base@@Base+0x1452>
  40434c:	lea    rsi,[rip+0x20862]        # 424bb5 <_IO_stdin_used@@Base+0xbb5>
  404353:	lea    rcx,[rip+0x208c7]        # 424c21 <_IO_stdin_used@@Base+0xc21>
  40435a:	mov    edx,0x2d
  40435f:	call   404090 <__assert_fail@plt>
  404364:	lea    rdi,[rip+0x209b6]        # 424d21 <_IO_stdin_used@@Base+0xd21>
  40436b:	lea    rsi,[rip+0x209d5]        # 424d47 <_IO_stdin_used@@Base+0xd47>
  404372:	lea    rcx,[rip+0x20a47]        # 424dc0 <_IO_stdin_used@@Base+0xdc0>
  404379:	mov    edx,0x2b8
  40437e:	call   404090 <__assert_fail@plt>
  404383:	lea    rdi,[rip+0x21f58]        # 4262e2 <flatcc_builder_padding_base@@Base+0x1452>
  40438a:	lea    rsi,[rip+0x20824]        # 424bb5 <_IO_stdin_used@@Base+0xbb5>
  404391:	lea    rcx,[rip+0x20889]        # 424c21 <_IO_stdin_used@@Base+0xc21>
  404398:	mov    edx,0x2e
  40439d:	call   404090 <__assert_fail@plt>
  4043a2:	lea    rdi,[rip+0x21f39]        # 4262e2 <flatcc_builder_padding_base@@Base+0x1452>
  4043a9:	lea    rsi,[rip+0x20805]        # 424bb5 <_IO_stdin_used@@Base+0xbb5>
  4043b0:	lea    rcx,[rip+0x2086a]        # 424c21 <_IO_stdin_used@@Base+0xc21>
  4043b7:	mov    edx,0x2f
  4043bc:	call   404090 <__assert_fail@plt>
  4043c1:	lea    rdi,[rip+0x21f1a]        # 4262e2 <flatcc_builder_padding_base@@Base+0x1452>
  4043c8:	lea    rsi,[rip+0x207e6]        # 424bb5 <_IO_stdin_used@@Base+0xbb5>
  4043cf:	lea    rcx,[rip+0x2084b]        # 424c21 <_IO_stdin_used@@Base+0xc21>
  4043d6:	mov    edx,0x30
  4043db:	call   404090 <__assert_fail@plt>
  4043e0:	lea    rdi,[rip+0x21efb]        # 4262e2 <flatcc_builder_padding_base@@Base+0x1452>
  4043e7:	lea    rsi,[rip+0x207c7]        # 424bb5 <_IO_stdin_used@@Base+0xbb5>
  4043ee:	lea    rcx,[rip+0x2082c]        # 424c21 <_IO_stdin_used@@Base+0xc21>
  4043f5:	mov    edx,0x31
  4043fa:	call   404090 <__assert_fail@plt>
  4043ff:	lea    rdi,[rip+0x21edc]        # 4262e2 <flatcc_builder_padding_base@@Base+0x1452>
  404406:	lea    rsi,[rip+0x207a8]        # 424bb5 <_IO_stdin_used@@Base+0xbb5>
  40440d:	lea    rcx,[rip+0x2080d]        # 424c21 <_IO_stdin_used@@Base+0xc21>
  404414:	mov    edx,0x32
  404419:	call   404090 <__assert_fail@plt>
  40441e:	lea    rdi,[rip+0x21ebd]        # 4262e2 <flatcc_builder_padding_base@@Base+0x1452>
  404425:	lea    rsi,[rip+0x20789]        # 424bb5 <_IO_stdin_used@@Base+0xbb5>
  40442c:	lea    rcx,[rip+0x207ee]        # 424c21 <_IO_stdin_used@@Base+0xc21>
  404433:	mov    edx,0x35
  404438:	call   404090 <__assert_fail@plt>
  40443d:	lea    rdi,[rip+0x21e9e]        # 4262e2 <flatcc_builder_padding_base@@Base+0x1452>
  404444:	lea    rsi,[rip+0x2076a]        # 424bb5 <_IO_stdin_used@@Base+0xbb5>
  40444b:	lea    rcx,[rip+0x207cf]        # 424c21 <_IO_stdin_used@@Base+0xc21>
  404452:	mov    edx,0x36
  404457:	call   404090 <__assert_fail@plt>
  40445c:	nop    DWORD PTR [rax+0x0]

0000000000404460 <test_parse@@Base>:
  404460:	push   rbp
  404461:	mov    rbp,rsp
  404464:	push   r15
  404466:	push   r14
  404468:	push   r13
  40446a:	push   r12
  40446c:	push   rbx
  40446d:	and    rsp,0xffffffffffffffe0
  404471:	sub    rsp,0x240
  404478:	lea    r15,[rsp+0xa0]
  404480:	mov    rdi,r15
  404483:	call   41a490 <flatcc_builder_init@@Base>
  404488:	lea    rbx,[rip+0x26c41]        # 42b0d0 <filename@@Base>
  40448f:	mov    rdi,QWORD PTR [rbx]
  404492:	lea    rsi,[rip+0x2097f]        # 424e18 <_IO_stdin_used@@Base+0xe18>
  404499:	call   404140 <fopen@plt>
  40449e:	test   rax,rax
  4044a1:	je     404660 <test_parse@@Base+0x200>
  4044a7:	mov    r13,rax
  4044aa:	xor    esi,esi
  4044ac:	mov    edx,0x2
  4044b1:	mov    rdi,rax
  4044b4:	call   404120 <fseek@plt>
  4044b9:	mov    rdi,r13
  4044bc:	call   4040f0 <ftell@plt>
  4044c1:	cmp    rax,0x2800
  4044c7:	ja     404658 <test_parse@@Base+0x1f8>
  4044cd:	mov    r12,rax
  4044d0:	mov    rdi,r13
  4044d3:	call   404080 <rewind@plt>
  4044d8:	test   r12,r12
  4044db:	mov    edi,0x1
  4044e0:	cmovne rdi,r12
  4044e4:	call   404110 <malloc@plt>
  4044e9:	test   rax,rax
  4044ec:	je     404658 <test_parse@@Base+0x1f8>
  4044f2:	mov    r14,rax
  4044f5:	mov    QWORD PTR [rsp+0x8],rax
  4044fa:	xor    ecx,ecx
  4044fc:	nop    DWORD PTR [rax+0x0]
  404500:	mov    rbx,rcx
  404503:	lea    rdi,[r14+rcx*1]
  404507:	mov    rdx,r12
  40450a:	sub    rdx,rcx
  40450d:	mov    esi,0x1
  404512:	mov    rcx,r13
  404515:	call   404050 <fread_unlocked@plt>
  40451a:	lea    rcx,[rax+rbx*1]
  40451e:	test   rax,rax
  404521:	jne    404500 <test_parse@@Base+0xa0>
  404523:	mov    rdi,r13
  404526:	call   404060 <fclose@plt>
  40452b:	cmp    r12,rbx
  40452e:	jne    404645 <test_parse@@Base+0x1e5>
  404534:	add    r14,r12
  404537:	vxorps xmm0,xmm0,xmm0
  40453b:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  404541:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  404547:	mov    QWORD PTR [rsp+0x80],0x0
  404553:	mov    QWORD PTR [rsp+0x40],r15
  404558:	mov    rax,QWORD PTR [rsp+0x8]
  40455d:	mov    QWORD PTR [rsp+0x48],rax
  404562:	mov    DWORD PTR [rsp+0x58],0x1
  40456a:	mov    DWORD PTR [rsp+0x50],0x0
  404572:	mov    QWORD PTR [rsp+0x68],rax
  404577:	mov    QWORD PTR [rsp+0x70],r14
  40457c:	mov    QWORD PTR [rsp+0x78],rax
  404581:	lea    rsi,[rip+0x20628]        # 424bb0 <_IO_stdin_used@@Base+0xbb0>
  404588:	xor    r13d,r13d
  40458b:	xor    edx,edx
  40458d:	xor    ecx,ecx
  40458f:	mov    rdi,r15
  404592:	vzeroupper 
  404595:	call   41b230 <flatcc_builder_start_buffer@@Base>
  40459a:	test   eax,eax
  40459c:	lea    rbx,[rip+0x26b2d]        # 42b0d0 <filename@@Base>
  4045a3:	jne    4045e4 <test_parse@@Base+0x184>
  4045a5:	lea    rdi,[rsp+0x40]
  4045aa:	lea    rcx,[rsp+0x20]
  4045af:	mov    rsi,QWORD PTR [rsp+0x8]
  4045b4:	mov    rdx,r14
  4045b7:	call   4049c0 <main@@Base+0x80>
  4045bc:	mov    r13d,DWORD PTR [rsp+0x60]
  4045c1:	test   r13d,r13d
  4045c4:	jne    4045e4 <test_parse@@Base+0x184>
  4045c6:	mov    esi,DWORD PTR [rsp+0x20]
  4045ca:	lea    rdi,[rsp+0xa0]
  4045d2:	call   41b450 <flatcc_builder_end_buffer@@Base>
  4045d7:	test   eax,eax
  4045d9:	jne    404693 <test_parse@@Base+0x233>
  4045df:	mov    r13d,DWORD PTR [rsp+0x60]
  4045e4:	mov    rax,QWORD PTR [rip+0x26a05]        # 42aff0 <stderr@GLIBC_2.2.5>
  4045eb:	mov    r14,QWORD PTR [rax]
  4045ee:	mov    r15,QWORD PTR [rbx]
  4045f1:	mov    r12d,DWORD PTR [rsp+0x58]
  4045f6:	mov    ebx,DWORD PTR [rsp+0x78]
  4045fa:	sub    ebx,DWORD PTR [rsp+0x48]
  4045fe:	add    ebx,0x1
  404601:	mov    edi,r13d
  404604:	call   41f920 <flatcc_json_parser_error_string@@Base>
  404609:	mov    r9,rax
  40460c:	lea    rsi,[rip+0x206af]        # 424cc2 <_IO_stdin_used@@Base+0xcc2>
  404613:	xor    eax,eax
  404615:	mov    rdi,r14
  404618:	mov    rdx,r15
  40461b:	mov    ecx,r12d
  40461e:	mov    r8d,ebx
  404621:	call   4040e0 <fprintf@plt>
  404626:	mov    r14d,0xffffffff
  40462c:	mov    rdi,QWORD PTR [rsp+0x8]
  404631:	call   404030 <free@plt>
  404636:	lea    rdi,[rsp+0xa0]
  40463e:	call   41a850 <flatcc_builder_clear@@Base>
  404643:	jmp    404681 <test_parse@@Base+0x221>
  404645:	mov    rdi,QWORD PTR [rsp+0x8]
  40464a:	call   404030 <free@plt>
  40464f:	lea    rbx,[rip+0x26a7a]        # 42b0d0 <filename@@Base>
  404656:	jmp    404660 <test_parse@@Base+0x200>
  404658:	mov    rdi,r13
  40465b:	call   404060 <fclose@plt>
  404660:	mov    rax,QWORD PTR [rip+0x26989]        # 42aff0 <stderr@GLIBC_2.2.5>
  404667:	mov    rdi,QWORD PTR [rax]
  40466a:	mov    rdx,QWORD PTR [rbx]
  40466d:	lea    rsi,[rip+0x205c6]        # 424c3a <_IO_stdin_used@@Base+0xc3a>
  404674:	xor    eax,eax
  404676:	call   4040e0 <fprintf@plt>
  40467b:	mov    r14d,0xffffffff
  404681:	mov    eax,r14d
  404684:	lea    rsp,[rbp-0x28]
  404688:	pop    rbx
  404689:	pop    r12
  40468b:	pop    r13
  40468d:	pop    r14
  40468f:	pop    r15
  404691:	pop    rbp
  404692:	ret    
  404693:	mov    rax,QWORD PTR [rsp+0x8]
  404698:	mov    QWORD PTR [rsp+0x80],rax
  4046a0:	mov    rax,QWORD PTR [rip+0x26949]        # 42aff0 <stderr@GLIBC_2.2.5>
  4046a7:	mov    rdi,QWORD PTR [rax]
  4046aa:	mov    rdx,QWORD PTR [rbx]
  4046ad:	mov    ecx,DWORD PTR [rsp+0x58]
  4046b1:	lea    rsi,[rip+0x205a6]        # 424c5e <_IO_stdin_used@@Base+0xc5e>
  4046b8:	xor    eax,eax
  4046ba:	call   4040e0 <fprintf@plt>
  4046bf:	lea    rdi,[rsp+0xa0]
  4046c7:	lea    rsi,[rsp+0x18]
  4046cc:	call   41ec10 <flatcc_builder_finalize_aligned_buffer@@Base>
  4046d1:	mov    QWORD PTR [rsp+0x10],rax
  4046d6:	mov    rbx,QWORD PTR [rsp+0x18]
  4046db:	mov    rax,QWORD PTR [rip+0x268f6]        # 42afd8 <stdout@GLIBC_2.2.5>
  4046e2:	mov    r13,QWORD PTR [rax]
  4046e5:	lea    rsi,[rip+0x2073a]        # 424e26 <_IO_stdin_used@@Base+0xe26>
  4046ec:	lea    rdx,[rip+0x2058d]        # 424c80 <_IO_stdin_used@@Base+0xc80>
  4046f3:	xor    eax,eax
  4046f5:	mov    rdi,r13
  4046f8:	call   4040e0 <fprintf@plt>
  4046fd:	mov    rax,rbx
  404700:	test   eax,eax
  404702:	je     404821 <test_parse@@Base+0x3c1>
  404708:	mov    ecx,eax
  40470a:	mov    QWORD PTR [rsp+0x90],rcx
  404712:	xor    r14d,r14d
  404715:	mov    rbx,QWORD PTR [rsp+0x10]
  40471a:	mov    QWORD PTR [rsp+0x98],rax
  404722:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40472c:	nop    DWORD PTR [rax+0x0]
  404730:	mov    r15d,r14d
  404733:	and    r15d,0xf
  404737:	test   r15d,r15d
  40473a:	je     404760 <test_parse@@Base+0x300>
  40473c:	test   r14b,0x7
  404740:	jne    40478f <test_parse@@Base+0x32f>
  404742:	mov    edi,0x20
  404747:	mov    rsi,r13
  40474a:	call   4040b0 <fputc@plt>
  40474f:	jmp    40478f <test_parse@@Base+0x32f>
  404751:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40475b:	nop    DWORD PTR [rax+rax*1+0x0]
  404760:	test   r14,r14
  404763:	je     40477b <test_parse@@Base+0x31b>
  404765:	xor    eax,eax
  404767:	mov    rdi,r13
  40476a:	lea    rsi,[rip+0x206ba]        # 424e2b <_IO_stdin_used@@Base+0xe2b>
  404771:	lea    rdx,[rsp+0x20]
  404776:	call   4040e0 <fprintf@plt>
  40477b:	xor    eax,eax
  40477d:	mov    rdi,r13
  404780:	lea    rsi,[rip+0x206aa]        # 424e31 <_IO_stdin_used@@Base+0xe31>
  404787:	mov    edx,r14d
  40478a:	call   4040e0 <fprintf@plt>
  40478f:	movzx  edx,BYTE PTR [rbx+r14*1]
  404794:	xor    eax,eax
  404796:	mov    rdi,r13
  404799:	lea    rsi,[rip+0x20699]        # 424e39 <_IO_stdin_used@@Base+0xe39>
  4047a0:	call   4040e0 <fprintf@plt>
  4047a5:	movzx  eax,BYTE PTR [rbx+r14*1]
  4047aa:	mov    edx,eax
  4047ac:	add    dl,0xe0
  4047af:	mov    cl,0x2e
  4047b1:	cmp    dl,0x5e
  4047b4:	ja     4047b8 <test_parse@@Base+0x358>
  4047b6:	mov    ecx,eax
  4047b8:	mov    BYTE PTR [rsp+r15*1+0x20],cl
  4047bd:	mov    BYTE PTR [rsp+r15*1+0x21],0x0
  4047c3:	add    r14,0x1
  4047c7:	cmp    QWORD PTR [rsp+0x90],r14
  4047cf:	mov    r15,QWORD PTR [rsp+0x98]
  4047d7:	jne    404730 <test_parse@@Base+0x2d0>
  4047dd:	test   r15b,0xf
  4047e1:	je     404821 <test_parse@@Base+0x3c1>
  4047e3:	add    r15d,0x1
  4047e7:	lea    r14,[rip+0x2066f]        # 424e5d <_IO_stdin_used@@Base+0xe5d>
  4047ee:	mov    ebx,r15d
  4047f1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4047fb:	nop    DWORD PTR [rax+rax*1+0x0]
  404800:	mov    esi,0x3
  404805:	mov    edx,0x1
  40480a:	mov    rdi,r14
  40480d:	mov    rcx,r13
  404810:	call   404160 <fwrite@plt>
  404815:	add    ebx,0x1
  404818:	test   r15b,0xf
  40481c:	mov    r15d,ebx
  40481f:	jne    404800 <test_parse@@Base+0x3a0>
  404821:	lea    rsi,[rip+0x20603]        # 424e2b <_IO_stdin_used@@Base+0xe2b>
  404828:	xor    r14d,r14d
  40482b:	lea    rdx,[rsp+0x20]
  404830:	xor    eax,eax
  404832:	mov    rdi,r13
  404835:	call   4040e0 <fprintf@plt>
  40483a:	mov    rax,QWORD PTR [rip+0x267af]        # 42aff0 <stderr@GLIBC_2.2.5>
  404841:	mov    rdi,QWORD PTR [rax]
  404844:	mov    rcx,QWORD PTR [rsp+0x18]
  404849:	lea    rsi,[rip+0x2044f]        # 424c9f <_IO_stdin_used@@Base+0xc9f>
  404850:	xor    eax,eax
  404852:	mov    rdx,r12
  404855:	call   4040e0 <fprintf@plt>
  40485a:	mov    rdi,QWORD PTR [rsp+0x10]
  40485f:	call   404270 <verify_parse@@Base>
  404864:	mov    r15,QWORD PTR [rsp+0x18]
  404869:	mov    rax,QWORD PTR [rip+0x26768]        # 42afd8 <stdout@GLIBC_2.2.5>
  404870:	mov    rbx,QWORD PTR [rax]
  404873:	lea    rsi,[rip+0x205c5]        # 424e3f <_IO_stdin_used@@Base+0xe3f>
  40487a:	lea    rdx,[rip+0x20417]        # 424c98 <_IO_stdin_used@@Base+0xc98>
  404881:	xor    eax,eax
  404883:	mov    rdi,rbx
  404886:	call   4040e0 <fprintf@plt>
  40488b:	test   r15d,r15d
  40488e:	je     4048f9 <test_parse@@Base+0x499>
  404890:	mov    r15d,r15d
  404893:	lea    r13,[rip+0x205c7]        # 424e61 <_IO_stdin_used@@Base+0xe61>
  40489a:	xor    r12d,r12d
  40489d:	nop    DWORD PTR [rax]
  4048a0:	test   r12b,0xf
  4048a4:	je     4048c0 <test_parse@@Base+0x460>
  4048a6:	test   r12b,0x7
  4048aa:	jne    4048d9 <test_parse@@Base+0x479>
  4048ac:	mov    esi,0x3
  4048b1:	mov    edx,0x1
  4048b6:	lea    rdi,[rip+0x205a0]        # 424e5d <_IO_stdin_used@@Base+0xe5d>
  4048bd:	jmp    4048d1 <test_parse@@Base+0x471>
  4048bf:	nop
  4048c0:	mov    esi,0x4
  4048c5:	mov    edx,0x1
  4048ca:	lea    rdi,[rip+0x2058b]        # 424e5c <_IO_stdin_used@@Base+0xe5c>
  4048d1:	mov    rcx,rbx
  4048d4:	call   404160 <fwrite@plt>
  4048d9:	mov    rax,QWORD PTR [rsp+0x10]
  4048de:	movzx  edx,BYTE PTR [rax+r12*1]
  4048e3:	xor    eax,eax
  4048e5:	mov    rdi,rbx
  4048e8:	mov    rsi,r13
  4048eb:	call   4040e0 <fprintf@plt>
  4048f0:	add    r12,0x1
  4048f4:	cmp    r15,r12
  4048f7:	jne    4048a0 <test_parse@@Base+0x440>
  4048f9:	lea    rdi,[rip+0x2056a]        # 424e6a <_IO_stdin_used@@Base+0xe6a>
  404900:	mov    esi,0x4
  404905:	mov    edx,0x1
  40490a:	mov    rcx,rbx
  40490d:	call   404160 <fwrite@plt>
  404912:	lea    rdi,[rsp+0xa0]
  40491a:	call   41a690 <flatcc_builder_reset@@Base>
  40491f:	mov    rdi,QWORD PTR [rsp+0x10]
  404924:	test   rdi,rdi
  404927:	je     40462c <test_parse@@Base+0x1cc>
  40492d:	call   41ed40 <flatcc_builder_aligned_free@@Base>
  404932:	jmp    40462c <test_parse@@Base+0x1cc>
  404937:	nop    WORD PTR [rax+rax*1+0x0]

0000000000404940 <main@@Base>:
  404940:	push   r15
  404942:	push   r14
  404944:	push   rbx
  404945:	mov    r14,rsi
  404948:	mov    ebx,edi
  40494a:	mov    r15,QWORD PTR [rip+0x2669f]        # 42aff0 <stderr@GLIBC_2.2.5>
  404951:	mov    rcx,QWORD PTR [r15]
  404954:	lea    rdi,[rip+0x20375]        # 424cd0 <_IO_stdin_used@@Base+0xcd0>
  40495b:	mov    esi,0x10
  404960:	mov    edx,0x1
  404965:	call   404160 <fwrite@plt>
  40496a:	lea    eax,[rbx-0x1]
  40496d:	cmp    eax,0x2
  404970:	jae    40498f <main@@Base+0x4f>
  404972:	cmp    ebx,0x2
  404975:	jne    404985 <main@@Base+0x45>
  404977:	mov    rax,QWORD PTR [r14+0x8]
  40497b:	lea    rcx,[rip+0x2674e]        # 42b0d0 <filename@@Base>
  404982:	mov    QWORD PTR [rcx],rax
  404985:	pop    rbx
  404986:	pop    r14
  404988:	pop    r15
  40498a:	jmp    404460 <test_parse@@Base>
  40498f:	mov    rcx,QWORD PTR [r15]
  404992:	lea    rdi,[rip+0x20348]        # 424ce1 <_IO_stdin_used@@Base+0xce1>
  404999:	mov    esi,0x3f
  40499e:	mov    edx,0x1
  4049a3:	call   404160 <fwrite@plt>
  4049a8:	mov    edi,0x1
  4049ad:	call   404150 <exit@plt>
  4049b2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4049bc:	nop    DWORD PTR [rax+0x0]
  4049c0:	push   rbp
  4049c1:	push   r15
  4049c3:	push   r14
  4049c5:	push   r13
  4049c7:	push   r12
  4049c9:	push   rbx
  4049ca:	sub    rsp,0x68
  4049ce:	mov    rbp,rcx
  4049d1:	mov    r13,rdx
  4049d4:	mov    r12,rsi
  4049d7:	mov    r15,rdi
  4049da:	mov    DWORD PTR [rcx],0x0
  4049e0:	mov    rdi,QWORD PTR [rdi]
  4049e3:	mov    esi,0x24
  4049e8:	call   41c500 <flatcc_builder_start_table@@Base>
  4049ed:	test   eax,eax
  4049ef:	je     404a19 <main@@Base+0xd9>
  4049f1:	mov    ecx,0x21
  4049f6:	mov    rdi,r15
  4049f9:	mov    rsi,r12
  4049fc:	mov    rdx,r13
  4049ff:	call   41f940 <flatcc_json_parser_set_error@@Base>
  404a04:	mov    r12,rax
  404a07:	mov    rax,r12
  404a0a:	add    rsp,0x68
  404a0e:	pop    rbx
  404a0f:	pop    r12
  404a11:	pop    r13
  404a13:	pop    r14
  404a15:	pop    r15
  404a17:	pop    rbp
  404a18:	ret    
  404a19:	lea    r8,[rsp+0x58]
  404a1e:	mov    ecx,0x1
  404a23:	mov    rdi,r15
  404a26:	mov    rsi,r12
  404a29:	mov    rdx,r13
  404a2c:	call   421d60 <flatcc_json_parser_prepare_unions@@Base>
  404a31:	cmp    rax,r13
  404a34:	je     4049f1 <main@@Base+0xb1>
  404a36:	cmp    r12,r13
  404a39:	je     404a73 <main@@Base+0x133>
  404a3b:	cmp    BYTE PTR [r12],0x7b
  404a40:	jne    404a73 <main@@Base+0x133>
  404a42:	lea    rax,[r12+0x1]
  404a47:	mov    rcx,r13
  404a4a:	sub    rcx,rax
  404a4d:	cmp    rcx,0x2
  404a51:	jl     404ad9 <main@@Base+0x199>
  404a57:	cmp    BYTE PTR [rax],0x20
  404a5a:	jg     404ae7 <main@@Base+0x1a7>
  404a60:	jne    404ad9 <main@@Base+0x199>
  404a62:	cmp    BYTE PTR [r12+0x2],0x20
  404a68:	jle    404ad9 <main@@Base+0x199>
  404a6a:	add    r12,0x2
  404a6e:	mov    rax,r12
  404a71:	jmp    404ae7 <main@@Base+0x1a7>
  404a73:	mov    ecx,0x15
  404a78:	mov    rdi,r15
  404a7b:	mov    rsi,r12
  404a7e:	mov    rdx,r13
  404a81:	call   41f940 <flatcc_json_parser_set_error@@Base>
  404a86:	mov    r12,rax
  404a89:	lea    rbx,[r15+0x20]
  404a8d:	cmp    DWORD PTR [rbx],0x0
  404a90:	jne    4049f1 <main@@Base+0xb1>
  404a96:	mov    rdi,QWORD PTR [r15]
  404a99:	mov    esi,0x3
  404a9e:	call   41cdd0 <flatcc_builder_check_required_field@@Base>
  404aa3:	test   eax,eax
  404aa5:	je     404b2c <main@@Base+0x1ec>
  404aab:	mov    rcx,QWORD PTR [rsp+0x58]
  404ab0:	mov    rdi,r15
  404ab3:	mov    rsi,r12
  404ab6:	mov    rdx,r13
  404ab9:	call   421de0 <flatcc_json_parser_finalize_unions@@Base>
  404abe:	mov    r12,rax
  404ac1:	mov    rdi,QWORD PTR [r15]
  404ac4:	call   41cf10 <flatcc_builder_end_table@@Base>
  404ac9:	mov    DWORD PTR [rbp+0x0],eax
  404acc:	test   eax,eax
  404ace:	jne    404a07 <main@@Base+0xc7>
  404ad4:	jmp    4049f1 <main@@Base+0xb1>
  404ad9:	mov    rdi,r15
  404adc:	mov    rsi,rax
  404adf:	mov    rdx,r13
  404ae2:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  404ae7:	mov    rsi,r13
  404aea:	cmp    rax,r13
  404aed:	je     404b4a <main@@Base+0x20a>
  404aef:	cmp    BYTE PTR [rax],0x7d
  404af2:	jne    404b47 <main@@Base+0x207>
  404af4:	lea    r12,[rax+0x1]
  404af8:	mov    rcx,r13
  404afb:	sub    rcx,r12
  404afe:	cmp    rcx,0x2
  404b02:	jl     40e9a1 <main@@Base+0xa061>
  404b08:	cmp    BYTE PTR [r12],0x20
  404b0d:	jg     404a89 <main@@Base+0x149>
  404b13:	jne    40e9a1 <main@@Base+0xa061>
  404b19:	cmp    BYTE PTR [rax+0x2],0x20
  404b1d:	jle    40e9a1 <main@@Base+0xa061>
  404b23:	add    rax,0x2
  404b27:	jmp    404a86 <main@@Base+0x146>
  404b2c:	mov    ecx,0x1d
  404b31:	mov    rdi,r15
  404b34:	mov    rsi,r12
  404b37:	mov    rdx,r13
  404b3a:	call   41f940 <flatcc_json_parser_set_error@@Base>
  404b3f:	mov    r12,rax
  404b42:	jmp    4049f1 <main@@Base+0xb1>
  404b47:	mov    rsi,rax
  404b4a:	movabs r12,0x7465737400000000
  404b54:	lea    rax,[r15+0x14]
  404b58:	mov    QWORD PTR [rsp+0x28],rax
  404b5d:	lea    rax,[r15+0x20]
  404b61:	mov    QWORD PTR [rsp+0x48],rax
  404b66:	lea    rax,[r12+0x61727261]
  404b6e:	mov    QWORD PTR [rsp+0x60],rax
  404b73:	mov    QWORD PTR [rsp+0x8],r13
  404b78:	mov    QWORD PTR [rsp+0x10],r15
  404b7d:	mov    QWORD PTR [rsp+0x20],rbp
  404b82:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404b8c:	nop    DWORD PTR [rax+0x0]
  404b90:	mov    r14,r13
  404b93:	cmp    rsi,r13
  404b96:	je     404bd6 <main@@Base+0x296>
  404b98:	mov    al,BYTE PTR [rsi]
  404b9a:	cmp    al,0x2e
  404b9c:	je     404bb3 <main@@Base+0x273>
  404b9e:	cmp    al,0x22
  404ba0:	jne    404bc8 <main@@Base+0x288>
  404ba2:	add    rsi,0x1
  404ba6:	mov    rax,QWORD PTR [rsp+0x28]
  404bab:	mov    DWORD PTR [rax],0x0
  404bb1:	jmp    404bd3 <main@@Base+0x293>
  404bb3:	mov    ecx,0x5
  404bb8:	mov    rdi,r15
  404bbb:	mov    rdx,r13
  404bbe:	call   41f940 <flatcc_json_parser_set_error@@Base>
  404bc3:	mov    r14,rax
  404bc6:	jmp    404bd6 <main@@Base+0x296>
  404bc8:	mov    rax,QWORD PTR [rsp+0x28]
  404bcd:	mov    DWORD PTR [rax],0x1
  404bd3:	mov    r14,rsi
  404bd6:	mov    r15,r13
  404bd9:	sub    r15,r14
  404bdc:	cmp    r15,0x8
  404be0:	jb     404c97 <main@@Base+0x357>
  404be6:	movbe  rbx,QWORD PTR [r14]
  404beb:	cmp    rbx,QWORD PTR [rsp+0x60]
  404bf0:	jae    404d2b <main@@Base+0x3eb>
  404bf6:	movabs rax,0x6e616d6500000000
  404c00:	cmp    rbx,rax
  404c03:	jae    404d6a <main@@Base+0x42a>
  404c09:	movabs rax,0x666c657800000000
  404c13:	cmp    rbx,rax
  404c16:	jae    404e5c <main@@Base+0x51c>
  404c1c:	and    rbx,0xffffffffff000000
  404c23:	movabs rax,0x636f6c6f72000000
  404c2d:	cmp    rbx,rax
  404c30:	je     4052b2 <main@@Base+0x972>
  404c36:	movabs rax,0x656e656d79000000
  404c40:	cmp    rbx,rax
  404c43:	mov    r13,QWORD PTR [rsp+0x8]
  404c48:	jne    404fc0 <main@@Base+0x680>
  404c4e:	mov    rax,r14
  404c51:	cmp    r15,0x6
  404c55:	mov    r15,QWORD PTR [rsp+0x10]
  404c5a:	jl     406f30 <main@@Base+0x25f0>
  404c60:	mov    rax,QWORD PTR [rsp+0x28]
  404c65:	cmp    DWORD PTR [rax],0x0
  404c68:	mov    cl,BYTE PTR [r14+0x5]
  404c6c:	je     405c80 <main@@Base+0x1340>
  404c72:	cmp    cl,0x21
  404c75:	jl     404c83 <main@@Base+0x343>
  404c77:	mov    rax,r14
  404c7a:	cmp    cl,0x3a
  404c7d:	jne    406f30 <main@@Base+0x25f0>
  404c83:	lea    rsi,[r14+0x5]
  404c87:	mov    rax,QWORD PTR [rsp+0x28]
  404c8c:	mov    DWORD PTR [rax],0x0
  404c92:	jmp    405c90 <main@@Base+0x1350>
  404c97:	mov    eax,r15d
  404c9a:	and    al,0xf
  404c9c:	add    al,0xff
  404c9e:	cmp    al,0x7
  404ca0:	ja     404fc0 <main@@Base+0x680>
  404ca6:	movzx  eax,al
  404ca9:	lea    rcx,[rip+0x1f380]        # 424030 <_IO_stdin_used@@Base+0x30>
  404cb0:	movsxd rsi,DWORD PTR [rcx+rax*4]
  404cb4:	add    rsi,rcx
  404cb7:	xor    r8d,r8d
  404cba:	xor    eax,eax
  404cbc:	xor    ecx,ecx
  404cbe:	xor    edx,edx
  404cc0:	xor    edi,edi
  404cc2:	xor    ebx,ebx
  404cc4:	xor    ebp,ebp
  404cc6:	jmp    rsi
  404cc8:	movsx  r8,BYTE PTR [r14+0x7]
  404ccd:	movsx  rax,BYTE PTR [r14+0x6]
  404cd2:	shl    rax,0x8
  404cd6:	or     rax,r8
  404cd9:	movsx  rcx,BYTE PTR [r14+0x5]
  404cde:	shl    rcx,0x10
  404ce2:	or     rcx,rax
  404ce5:	movsx  rdx,BYTE PTR [r14+0x4]
  404cea:	shl    rdx,0x18
  404cee:	or     rdx,rcx
  404cf1:	movsx  rdi,BYTE PTR [r14+0x3]
  404cf6:	shl    rdi,0x20
  404cfa:	or     rdi,rdx
  404cfd:	movsx  rbx,BYTE PTR [r14+0x2]
  404d02:	shl    rbx,0x28
  404d06:	or     rbx,rdi
  404d09:	movsx  rbp,BYTE PTR [r14+0x1]
  404d0e:	shl    rbp,0x30
  404d12:	or     rbp,rbx
  404d15:	movzx  ebx,BYTE PTR [r14]
  404d19:	shl    rbx,0x38
  404d1d:	or     rbx,rbp
  404d20:	cmp    rbx,QWORD PTR [rsp+0x60]
  404d25:	jb     404bf6 <main@@Base+0x2b6>
  404d2b:	lea    rax,[r12+0x66330000]
  404d33:	cmp    rbx,rax
  404d36:	jae    404df4 <main@@Base+0x4b4>
  404d3c:	cmp    rbx,QWORD PTR [rsp+0x60]
  404d41:	jne    404edb <main@@Base+0x59b>
  404d47:	lea    r15,[r14+0x8]
  404d4b:	mov    r13,QWORD PTR [rsp+0x8]
  404d50:	mov    rax,r13
  404d53:	sub    rax,r15
  404d56:	cmp    rax,0x8
  404d5a:	jb     404fd0 <main@@Base+0x690>
  404d60:	movbe  rcx,QWORD PTR [r15]
  404d65:	jmp    40506b <main@@Base+0x72b>
  404d6a:	cmp    rbx,r12
  404d6d:	jae    404f35 <main@@Base+0x5f5>
  404d73:	movabs rax,0x706172656e745f6e
  404d7d:	cmp    rbx,rax
  404d80:	jae    4050e0 <main@@Base+0x7a0>
  404d86:	movabs rax,0xffffffff00000000
  404d90:	and    rbx,rax
  404d93:	movabs rax,0x6e616d6500000000
  404d9d:	cmp    rbx,rax
  404da0:	jne    407fba <main@@Base+0x367a>
  404da6:	mov    rax,r14
  404da9:	cmp    r15,0x5
  404dad:	mov    r15,QWORD PTR [rsp+0x10]
  404db2:	mov    r13,QWORD PTR [rsp+0x8]
  404db7:	jl     4073f5 <main@@Base+0x2ab5>
  404dbd:	mov    rax,QWORD PTR [rsp+0x28]
  404dc2:	cmp    DWORD PTR [rax],0x0
  404dc5:	mov    cl,BYTE PTR [r14+0x4]
  404dc9:	je     406278 <main@@Base+0x1938>
  404dcf:	cmp    cl,0x21
  404dd2:	jl     404de0 <main@@Base+0x4a0>
  404dd4:	mov    rax,r14
  404dd7:	cmp    cl,0x3a
  404dda:	jne    4073f5 <main@@Base+0x2ab5>
  404de0:	lea    rsi,[r14+0x4]
  404de4:	mov    rax,QWORD PTR [rsp+0x28]
  404de9:	mov    DWORD PTR [rax],0x0
  404def:	jmp    406288 <main@@Base+0x1948>
  404df4:	lea    rcx,[r12+0x68617368]
  404dfc:	cmp    rbx,rcx
  404dff:	jae    404f97 <main@@Base+0x657>
  404e05:	and    rbx,0xffffffffffff0000
  404e0c:	cmp    rbx,rax
  404e0f:	jne    407fba <main@@Base+0x367a>
  404e15:	mov    rbx,r14
  404e18:	cmp    r15,0x7
  404e1c:	mov    r15,QWORD PTR [rsp+0x10]
  404e21:	jl     406856 <main@@Base+0x1f16>
  404e27:	mov    rax,QWORD PTR [rsp+0x28]
  404e2c:	cmp    DWORD PTR [rax],0x0
  404e2f:	mov    al,BYTE PTR [r14+0x6]
  404e33:	je     4057c9 <main@@Base+0xe89>
  404e39:	cmp    al,0x21
  404e3b:	jl     404e48 <main@@Base+0x508>
  404e3d:	mov    rbx,r14
  404e40:	cmp    al,0x3a
  404e42:	jne    406856 <main@@Base+0x1f16>
  404e48:	lea    rsi,[r14+0x6]
  404e4c:	mov    rax,QWORD PTR [rsp+0x28]
  404e51:	mov    DWORD PTR [rax],0x0
  404e57:	jmp    4057d8 <main@@Base+0xe98>
  404e5c:	mov    rax,rbx
  404e5f:	shr    rax,0x34
  404e63:	cmp    rax,0x686
  404e69:	ja     40510e <main@@Base+0x7ce>
  404e6f:	movabs rax,0xffffffff00000000
  404e79:	and    rbx,rax
  404e7c:	movabs rax,0x666c657800000000
  404e86:	cmp    rbx,rax
  404e89:	jne    407fba <main@@Base+0x367a>
  404e8f:	mov    r12,r14
  404e92:	cmp    r15,0x5
  404e96:	mov    r15,QWORD PTR [rsp+0x10]
  404e9b:	mov    r13,QWORD PTR [rsp+0x8]
  404ea0:	jl     407451 <main@@Base+0x2b11>
  404ea6:	mov    rax,QWORD PTR [rsp+0x28]
  404eab:	cmp    DWORD PTR [rax],0x0
  404eae:	mov    al,BYTE PTR [r14+0x4]
  404eb2:	je     4062c3 <main@@Base+0x1983>
  404eb8:	cmp    al,0x21
  404eba:	jl     404ec7 <main@@Base+0x587>
  404ebc:	mov    r12,r14
  404ebf:	cmp    al,0x3a
  404ec1:	jne    407451 <main@@Base+0x2b11>
  404ec7:	lea    rsi,[r14+0x4]
  404ecb:	mov    rax,QWORD PTR [rsp+0x28]
  404ed0:	mov    DWORD PTR [rax],0x0
  404ed6:	jmp    4062d2 <main@@Base+0x1992>
  404edb:	lea    rcx,[r12+0x656d7074]
  404ee3:	cmp    rbx,rcx
  404ee6:	jae    405188 <main@@Base+0x848>
  404eec:	movabs rax,0x74657374626f6f6c
  404ef6:	cmp    rbx,rax
  404ef9:	je     40555f <main@@Base+0xc1f>
  404eff:	movabs rax,0x7465737462617365
  404f09:	cmp    rbx,rax
  404f0c:	jne    407fba <main@@Base+0x367a>
  404f12:	lea    r15,[r14+0x8]
  404f16:	mov    r13,QWORD PTR [rsp+0x8]
  404f1b:	mov    rax,r13
  404f1e:	sub    rax,r15
  404f21:	cmp    rax,0x8
  404f25:	jb     4058b8 <main@@Base+0xf78>
  404f2b:	movbe  rcx,QWORD PTR [r15]
  404f30:	jmp    405949 <main@@Base+0x1009>
  404f35:	mov    rdx,r12
  404f38:	mov    r12,rbx
  404f3b:	and    r12,0xffffffffff000000
  404f42:	lea    rax,[rdx+0x34000000]
  404f49:	cmp    r12,rax
  404f4c:	jne    4051c5 <main@@Base+0x885>
  404f52:	mov    r12,r14
  404f55:	cmp    r15,0x6
  404f59:	jl     40690c <main@@Base+0x1fcc>
  404f5f:	mov    rax,QWORD PTR [rsp+0x28]
  404f64:	cmp    DWORD PTR [rax],0x0
  404f67:	mov    al,BYTE PTR [r14+0x5]
  404f6b:	je     405804 <main@@Base+0xec4>
  404f71:	cmp    al,0x21
  404f73:	jl     404f80 <main@@Base+0x640>
  404f75:	mov    r12,r14
  404f78:	cmp    al,0x3a
  404f7a:	jne    40690c <main@@Base+0x1fcc>
  404f80:	mov    r15,r14
  404f83:	lea    rsi,[r14+0x5]
  404f87:	mov    rax,QWORD PTR [rsp+0x28]
  404f8c:	mov    DWORD PTR [rax],0x0
  404f92:	jmp    405816 <main@@Base+0xed6>
  404f97:	jne    405222 <main@@Base+0x8e2>
  404f9d:	lea    r15,[r14+0x8]
  404fa1:	mov    r13,QWORD PTR [rsp+0x8]
  404fa6:	mov    rax,r13
  404fa9:	sub    rax,r15
  404fac:	cmp    rax,0x8
  404fb0:	jb     4052f9 <main@@Base+0x9b9>
  404fb6:	movbe  rcx,QWORD PTR [r15]
  404fbb:	jmp    40538a <main@@Base+0xa4a>
  404fc0:	mov    r15,QWORD PTR [rsp+0x10]
  404fc5:	mov    rdi,r15
  404fc8:	mov    rsi,r14
  404fcb:	jmp    409b8e <main@@Base+0x524e>
  404fd0:	mov    ecx,eax
  404fd2:	and    cl,0xf
  404fd5:	add    cl,0xff
  404fd8:	cmp    cl,0x7
  404fdb:	ja     40c5d3 <main@@Base+0x7c93>
  404fe1:	movzx  ecx,cl
  404fe4:	lea    rdx,[rip+0x1f205]        # 4241f0 <_IO_stdin_used@@Base+0x1f0>
  404feb:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  404fef:	add    rcx,rdx
  404ff2:	xor    r8d,r8d
  404ff5:	xor    r9d,r9d
  404ff8:	xor    edx,edx
  404ffa:	xor    esi,esi
  404ffc:	xor    ebx,ebx
  404ffe:	xor    ebp,ebp
  405000:	xor    edi,edi
  405002:	jmp    rcx
  405004:	movsx  r8,BYTE PTR [r14+0xf]
  405009:	movsx  r9,BYTE PTR [r14+0xe]
  40500e:	shl    r9,0x8
  405012:	or     r9,r8
  405015:	movsx  rdx,BYTE PTR [r14+0xd]
  40501a:	shl    rdx,0x10
  40501e:	or     rdx,r9
  405021:	movsx  rsi,BYTE PTR [r14+0xc]
  405026:	shl    rsi,0x18
  40502a:	or     rsi,rdx
  40502d:	movsx  rbx,BYTE PTR [r14+0xb]
  405032:	shl    rbx,0x20
  405036:	or     rbx,rsi
  405039:	movsx  rbp,BYTE PTR [r14+0xa]
  40503e:	shl    rbp,0x28
  405042:	or     rbp,rbx
  405045:	movsx  rdi,BYTE PTR [r14+0x9]
  40504a:	shl    rdi,0x30
  40504e:	or     rdi,rbp
  405051:	movzx  ecx,BYTE PTR [r15]
  405055:	shl    rcx,0x38
  405059:	or     rcx,rdi
  40505c:	mov    r13,QWORD PTR [rsp+0x8]
  405061:	movabs r12,0x7465737400000000
  40506b:	movabs rdx,0x796f66737472696d
  405075:	cmp    rcx,rdx
  405078:	ja     40526e <main@@Base+0x92e>
  40507e:	movabs rdx,0x796f66736f727465
  405088:	cmp    rcx,rdx
  40508b:	je     4055ab <main@@Base+0xc6b>
  405091:	movabs rdx,0x796f66626f6f6c73
  40509b:	cmp    rcx,rdx
  40509e:	jne    40c5d3 <main@@Base+0x7c93>
  4050a4:	cmp    rax,0x9
  4050a8:	jl     40c5d3 <main@@Base+0x7c93>
  4050ae:	mov    rax,QWORD PTR [rsp+0x28]
  4050b3:	cmp    DWORD PTR [rax],0x0
  4050b6:	mov    al,BYTE PTR [r14+0x10]
  4050ba:	je     406544 <main@@Base+0x1c04>
  4050c0:	cmp    al,0x21
  4050c2:	jl     4050cc <main@@Base+0x78c>
  4050c4:	cmp    al,0x3a
  4050c6:	jne    40c5d3 <main@@Base+0x7c93>
  4050cc:	add    r14,0x10
  4050d0:	mov    rax,QWORD PTR [rsp+0x28]
  4050d5:	mov    DWORD PTR [rax],0x0
  4050db:	jmp    406550 <main@@Base+0x1c10>
  4050e0:	jne    4053ec <main@@Base+0xaac>
  4050e6:	lea    rsi,[r14+0x8]
  4050ea:	mov    r13,QWORD PTR [rsp+0x8]
  4050ef:	mov    rax,r13
  4050f2:	sub    rax,rsi
  4050f5:	cmp    rax,0x8
  4050f9:	jb     4055e7 <main@@Base+0xca7>
  4050ff:	movbe  rax,QWORD PTR [rsi]
  405104:	mov    r15,QWORD PTR [rsp+0x10]
  405109:	jmp    405677 <main@@Base+0xd37>
  40510e:	movabs rax,0x696e76656e746f72
  405118:	cmp    rbx,rax
  40511b:	jae    405449 <main@@Base+0xb09>
  405121:	movabs rax,0xffff000000000000
  40512b:	and    rbx,rax
  40512e:	movabs rax,0x6870000000000000
  405138:	cmp    rbx,rax
  40513b:	jne    407fba <main@@Base+0x367a>
  405141:	mov    r12,r14
  405144:	cmp    r15,0x3
  405148:	mov    r15,QWORD PTR [rsp+0x10]
  40514d:	jl     4089a7 <main@@Base+0x4067>
  405153:	mov    rax,QWORD PTR [rsp+0x28]
  405158:	cmp    DWORD PTR [rax],0x0
  40515b:	mov    al,BYTE PTR [r14+0x2]
  40515f:	je     406b20 <main@@Base+0x21e0>
  405165:	cmp    al,0x21
  405167:	jl     405174 <main@@Base+0x834>
  405169:	mov    r12,r14
  40516c:	cmp    al,0x3a
  40516e:	jne    4089a7 <main@@Base+0x4067>
  405174:	lea    rsi,[r14+0x2]
  405178:	mov    rax,QWORD PTR [rsp+0x28]
  40517d:	mov    DWORD PTR [rax],0x0
  405183:	jmp    406b2f <main@@Base+0x21ef>
  405188:	lea    rax,[r12+0x66000000]
  405190:	cmp    rbx,rax
  405193:	jae    405472 <main@@Base+0xb32>
  405199:	cmp    rbx,rcx
  40519c:	jne    407fba <main@@Base+0x367a>
  4051a2:	lea    r15,[r14+0x8]
  4051a6:	mov    r13,QWORD PTR [rsp+0x8]
  4051ab:	mov    rax,r13
  4051ae:	sub    rax,r15
  4051b1:	cmp    rax,0x8
  4051b5:	jb     405ccb <main@@Base+0x138b>
  4051bb:	movbe  rcx,QWORD PTR [r15]
  4051c0:	jmp    405d5c <main@@Base+0x141c>
  4051c5:	mov    rax,rbx
  4051c8:	movabs rcx,0xffffffff00000000
  4051d2:	and    rax,rcx
  4051d5:	cmp    rax,rdx
  4051d8:	jne    40713b <main@@Base+0x27fb>
  4051de:	mov    rax,r14
  4051e1:	cmp    r15,0x5
  4051e5:	jl     407723 <main@@Base+0x2de3>
  4051eb:	mov    rax,QWORD PTR [rsp+0x28]
  4051f0:	cmp    DWORD PTR [rax],0x0
  4051f3:	mov    cl,BYTE PTR [r14+0x4]
  4051f7:	je     40630d <main@@Base+0x19cd>
  4051fd:	cmp    cl,0x21
  405200:	jl     40520e <main@@Base+0x8ce>
  405202:	mov    rax,r14
  405205:	cmp    cl,0x3a
  405208:	jne    407723 <main@@Base+0x2de3>
  40520e:	lea    rsi,[r14+0x4]
  405212:	mov    rax,QWORD PTR [rsp+0x28]
  405217:	mov    DWORD PTR [rax],0x0
  40521d:	jmp    40631d <main@@Base+0x19dd>
  405222:	movabs rax,0x766563746f725f6f
  40522c:	cmp    rbx,rax
  40522f:	jae    4054d4 <main@@Base+0xb94>
  405235:	lea    rax,[r12+0x6e657374]
  40523d:	cmp    rbx,rax
  405240:	mov    r15,QWORD PTR [rsp+0x10]
  405245:	jne    407fbf <main@@Base+0x367f>
  40524b:	lea    rsi,[r14+0x8]
  40524f:	mov    r13,QWORD PTR [rsp+0x8]
  405254:	mov    rax,r13
  405257:	sub    rax,rsi
  40525a:	cmp    rax,0x8
  40525e:	jb     405da6 <main@@Base+0x1466>
  405264:	movbe  rax,QWORD PTR [rsi]
  405269:	jmp    405e31 <main@@Base+0x14f1>
  40526e:	movabs rax,0x796f667461626c65
  405278:	cmp    rcx,rax
  40527b:	je     4055c9 <main@@Base+0xc89>
  405281:	movabs rax,0x796f66737472696e
  40528b:	cmp    rcx,rax
  40528e:	jne    409b83 <main@@Base+0x5243>
  405294:	lea    r15,[r14+0x10]
  405298:	mov    rax,r13
  40529b:	sub    rax,r15
  40529e:	cmp    rax,0x8
  4052a2:	jb     405996 <main@@Base+0x1056>
  4052a8:	movbe  rcx,QWORD PTR [r15]
  4052ad:	jmp    405a27 <main@@Base+0x10e7>
  4052b2:	mov    r12,r14
  4052b5:	cmp    r15,0x6
  4052b9:	mov    r15,QWORD PTR [rsp+0x10]
  4052be:	jl     406f7a <main@@Base+0x263a>
  4052c4:	mov    rax,QWORD PTR [rsp+0x28]
  4052c9:	cmp    DWORD PTR [rax],0x0
  4052cc:	mov    al,BYTE PTR [r14+0x5]
  4052d0:	je     405e66 <main@@Base+0x1526>
  4052d6:	cmp    al,0x21
  4052d8:	jl     4052e5 <main@@Base+0x9a5>
  4052da:	mov    r12,r14
  4052dd:	cmp    al,0x3a
  4052df:	jne    406f7a <main@@Base+0x263a>
  4052e5:	lea    rsi,[r14+0x5]
  4052e9:	mov    rax,QWORD PTR [rsp+0x28]
  4052ee:	mov    DWORD PTR [rax],0x0
  4052f4:	jmp    405e75 <main@@Base+0x1535>
  4052f9:	mov    ecx,eax
  4052fb:	and    cl,0xf
  4052fe:	add    cl,0xff
  405301:	cmp    cl,0x7
  405304:	ja     409b83 <main@@Base+0x5243>
  40530a:	movzx  ecx,cl
  40530d:	lea    rdx,[rip+0x1edbc]        # 4240d0 <_IO_stdin_used@@Base+0xd0>
  405314:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  405318:	add    rcx,rdx
  40531b:	xor    r8d,r8d
  40531e:	xor    r9d,r9d
  405321:	xor    edx,edx
  405323:	xor    esi,esi
  405325:	xor    ebx,ebx
  405327:	xor    ebp,ebp
  405329:	xor    edi,edi
  40532b:	jmp    rcx
  40532d:	movsx  r8,BYTE PTR [r14+0xf]
  405332:	movsx  r9,BYTE PTR [r14+0xe]
  405337:	shl    r9,0x8
  40533b:	or     r9,r8
  40533e:	movsx  rdx,BYTE PTR [r14+0xd]
  405343:	shl    rdx,0x10
  405347:	or     rdx,r9
  40534a:	movsx  rsi,BYTE PTR [r14+0xc]
  40534f:	shl    rsi,0x18
  405353:	or     rsi,rdx
  405356:	movsx  rbx,BYTE PTR [r14+0xb]
  40535b:	shl    rbx,0x20
  40535f:	or     rbx,rsi
  405362:	movsx  rbp,BYTE PTR [r14+0xa]
  405367:	shl    rbp,0x28
  40536b:	or     rbp,rbx
  40536e:	movsx  rdi,BYTE PTR [r14+0x9]
  405373:	shl    rdi,0x30
  405377:	or     rdi,rbp
  40537a:	movzx  ecx,BYTE PTR [r15]
  40537e:	shl    rcx,0x38
  405382:	or     rcx,rdi
  405385:	mov    r13,QWORD PTR [rsp+0x8]
  40538a:	movabs rdx,0x7336345f666e7631
  405394:	cmp    rcx,rdx
  405397:	jae    4054fd <main@@Base+0xbbd>
  40539d:	movabs rdx,0x7333325f666e7631
  4053a7:	cmp    rcx,rdx
  4053aa:	jne    409b83 <main@@Base+0x5243>
  4053b0:	cmp    rax,0x9
  4053b4:	jl     406e11 <main@@Base+0x24d1>
  4053ba:	mov    rax,QWORD PTR [rsp+0x28]
  4053bf:	cmp    DWORD PTR [rax],0x0
  4053c2:	mov    al,BYTE PTR [r14+0x10]
  4053c6:	je     406c08 <main@@Base+0x22c8>
  4053cc:	cmp    al,0x21
  4053ce:	jl     4053d8 <main@@Base+0xa98>
  4053d0:	cmp    al,0x3a
  4053d2:	jne    406e11 <main@@Base+0x24d1>
  4053d8:	lea    rsi,[r14+0x10]
  4053dc:	mov    rax,QWORD PTR [rsp+0x28]
  4053e1:	mov    DWORD PTR [rax],0x0
  4053e7:	jmp    406c14 <main@@Base+0x22d4>
  4053ec:	shr    rbx,0x28
  4053f0:	cmp    rbx,0x706f73
  4053f7:	jne    407fba <main@@Base+0x367a>
  4053fd:	mov    r12,r14
  405400:	cmp    r15,0x4
  405404:	mov    r15,QWORD PTR [rsp+0x10]
  405409:	mov    r13,QWORD PTR [rsp+0x8]
  40540e:	jl     408af3 <main@@Base+0x41b3>
  405414:	mov    rax,QWORD PTR [rsp+0x28]
  405419:	cmp    DWORD PTR [rax],0x0
  40541c:	mov    al,BYTE PTR [r14+0x3]
  405420:	je     406b6f <main@@Base+0x222f>
  405426:	cmp    al,0x21
  405428:	jl     405435 <main@@Base+0xaf5>
  40542a:	mov    r12,r14
  40542d:	cmp    al,0x3a
  40542f:	jne    408af3 <main@@Base+0x41b3>
  405435:	lea    rsi,[r14+0x3]
  405439:	mov    rax,QWORD PTR [rsp+0x28]
  40543e:	mov    DWORD PTR [rax],0x0
  405444:	jmp    406b7e <main@@Base+0x223e>
  405449:	jne    4056a9 <main@@Base+0xd69>
  40544f:	lea    r15,[r14+0x8]
  405453:	mov    r13,QWORD PTR [rsp+0x8]
  405458:	mov    rax,r13
  40545b:	sub    rax,r15
  40545e:	cmp    rax,0x8
  405462:	jb     405eb5 <main@@Base+0x1575>
  405468:	movbe  rcx,QWORD PTR [r15]
  40546d:	jmp    405f46 <main@@Base+0x1606>
  405472:	mov    rcx,rbx
  405475:	and    rcx,0xffffffffffff0000
  40547c:	lea    rdx,[r12+0x66320000]
  405484:	cmp    rcx,rdx
  405487:	jne    405710 <main@@Base+0xdd0>
  40548d:	mov    rbx,r14
  405490:	cmp    r15,0x7
  405494:	mov    r15,QWORD PTR [rsp+0x10]
  405499:	jl     4097c2 <main@@Base+0x4e82>
  40549f:	mov    rax,QWORD PTR [rsp+0x28]
  4054a4:	cmp    DWORD PTR [rax],0x0
  4054a7:	mov    al,BYTE PTR [r14+0x6]
  4054ab:	je     406bb9 <main@@Base+0x2279>
  4054b1:	cmp    al,0x21
  4054b3:	jl     4054c0 <main@@Base+0xb80>
  4054b5:	mov    rbx,r14
  4054b8:	cmp    al,0x3a
  4054ba:	jne    4097c2 <main@@Base+0x4e82>
  4054c0:	lea    rsi,[r14+0x6]
  4054c4:	mov    rax,QWORD PTR [rsp+0x28]
  4054c9:	mov    DWORD PTR [rax],0x0
  4054cf:	jmp    406bc8 <main@@Base+0x2288>
  4054d4:	jne    407fba <main@@Base+0x367a>
  4054da:	lea    r15,[r14+0x8]
  4054de:	mov    r13,QWORD PTR [rsp+0x8]
  4054e3:	mov    rax,r13
  4054e6:	sub    rax,r15
  4054e9:	cmp    rax,0x8
  4054ed:	jb     405f90 <main@@Base+0x1650>
  4054f3:	movbe  rcx,QWORD PTR [r15]
  4054f8:	jmp    406021 <main@@Base+0x16e1>
  4054fd:	movabs rdx,0x7533325f666e7630
  405507:	cmp    rcx,rdx
  40550a:	ja     405767 <main@@Base+0xe27>
  405510:	movabs rdx,0x7336345f666e7631
  40551a:	cmp    rcx,rdx
  40551d:	jne    409b83 <main@@Base+0x5243>
  405523:	cmp    rax,0x9
  405527:	jl     407c58 <main@@Base+0x3318>
  40552d:	mov    rax,QWORD PTR [rsp+0x28]
  405532:	cmp    DWORD PTR [rax],0x0
  405535:	mov    al,BYTE PTR [r14+0x10]
  405539:	je     4079ed <main@@Base+0x30ad>
  40553f:	cmp    al,0x21
  405541:	jl     40554b <main@@Base+0xc0b>
  405543:	cmp    al,0x3a
  405545:	jne    407c58 <main@@Base+0x3318>
  40554b:	lea    rsi,[r14+0x10]
  40554f:	mov    rax,QWORD PTR [rsp+0x28]
  405554:	mov    DWORD PTR [rax],0x0
  40555a:	jmp    4079f9 <main@@Base+0x30b9>
  40555f:	mov    r12,r14
  405562:	cmp    r15,0x9
  405566:	mov    r15,QWORD PTR [rsp+0x10]
  40556b:	mov    r13,QWORD PTR [rsp+0x8]
  405570:	jl     408338 <main@@Base+0x39f8>
  405576:	mov    rax,QWORD PTR [rsp+0x28]
  40557b:	cmp    DWORD PTR [rax],0x0
  40557e:	mov    al,BYTE PTR [r14+0x8]
  405582:	je     406478 <main@@Base+0x1b38>
  405588:	cmp    al,0x21
  40558a:	jl     405597 <main@@Base+0xc57>
  40558c:	mov    r12,r14
  40558f:	cmp    al,0x3a
  405591:	jne    408338 <main@@Base+0x39f8>
  405597:	lea    rsi,[r14+0x8]
  40559b:	mov    rax,QWORD PTR [rsp+0x28]
  4055a0:	mov    DWORD PTR [rax],0x0
  4055a6:	jmp    406487 <main@@Base+0x1b47>
  4055ab:	lea    r15,[r14+0x10]
  4055af:	mov    rax,r13
  4055b2:	sub    rax,r15
  4055b5:	cmp    rax,0x8
  4055b9:	jb     405a77 <main@@Base+0x1137>
  4055bf:	movbe  rcx,QWORD PTR [r15]
  4055c4:	jmp    405b08 <main@@Base+0x11c8>
  4055c9:	lea    r15,[r14+0x10]
  4055cd:	mov    rax,r13
  4055d0:	sub    rax,r15
  4055d3:	cmp    rax,0x8
  4055d7:	jb     405b5b <main@@Base+0x121b>
  4055dd:	movbe  rcx,QWORD PTR [r15]
  4055e2:	jmp    405bec <main@@Base+0x12ac>
  4055e7:	and    al,0xf
  4055e9:	add    al,0xff
  4055eb:	cmp    al,0x7
  4055ed:	mov    r15,QWORD PTR [rsp+0x10]
  4055f2:	ja     405e5e <main@@Base+0x151e>
  4055f8:	movzx  eax,al
  4055fb:	lea    rcx,[rip+0x1ecce]        # 4242d0 <_IO_stdin_used@@Base+0x2d0>
  405602:	movsxd rax,DWORD PTR [rcx+rax*4]
  405606:	add    rax,rcx
  405609:	xor    r8d,r8d
  40560c:	xor    r9d,r9d
  40560f:	xor    ecx,ecx
  405611:	xor    edx,edx
  405613:	xor    ebp,ebp
  405615:	xor    ebx,ebx
  405617:	xor    edi,edi
  405619:	jmp    rax
  40561b:	movsx  r8,BYTE PTR [r14+0xf]
  405620:	movsx  r9,BYTE PTR [r14+0xe]
  405625:	shl    r9,0x8
  405629:	or     r9,r8
  40562c:	movsx  rcx,BYTE PTR [r14+0xd]
  405631:	shl    rcx,0x10
  405635:	or     rcx,r9
  405638:	movsx  rdx,BYTE PTR [r14+0xc]
  40563d:	shl    rdx,0x18
  405641:	or     rdx,rcx
  405644:	movsx  rbp,BYTE PTR [r14+0xb]
  405649:	shl    rbp,0x20
  40564d:	or     rbp,rdx
  405650:	movsx  rbx,BYTE PTR [r14+0xa]
  405655:	shl    rbx,0x28
  405659:	or     rbx,rbp
  40565c:	movsx  rdi,BYTE PTR [r14+0x9]
  405661:	shl    rdi,0x30
  405665:	or     rdi,rbx
  405668:	movzx  eax,BYTE PTR [rsi]
  40566b:	shl    rax,0x38
  40566f:	or     rax,rdi
  405672:	mov    r13,QWORD PTR [rsp+0x8]
  405677:	movabs rcx,0x616d657370616365
  405681:	cmp    rax,rcx
  405684:	jne    405e5e <main@@Base+0x151e>
  40568a:	lea    r12,[r14+0x10]
  40568e:	mov    rax,r13
  405691:	sub    rax,r12
  405694:	cmp    rax,0x8
  405698:	jb     406052 <main@@Base+0x1712>
  40569e:	movbe  rcx,QWORD PTR [r12]
  4056a4:	jmp    4060e4 <main@@Base+0x17a4>
  4056a9:	movabs rax,0xffffffff00000000
  4056b3:	and    rbx,rax
  4056b6:	movabs rax,0x6d616e6100000000
  4056c0:	cmp    rbx,rax
  4056c3:	jne    407fba <main@@Base+0x367a>
  4056c9:	mov    r12,r14
  4056cc:	cmp    r15,0x5
  4056d0:	mov    r15,QWORD PTR [rsp+0x10]
  4056d5:	jl     40a25e <main@@Base+0x591e>
  4056db:	mov    rax,QWORD PTR [rsp+0x28]
  4056e0:	cmp    DWORD PTR [rax],0x0
  4056e3:	mov    al,BYTE PTR [r14+0x4]
  4056e7:	je     40794f <main@@Base+0x300f>
  4056ed:	cmp    al,0x21
  4056ef:	jl     4056fc <main@@Base+0xdbc>
  4056f1:	mov    r12,r14
  4056f4:	cmp    al,0x3a
  4056f6:	jne    40a25e <main@@Base+0x591e>
  4056fc:	lea    rsi,[r14+0x4]
  405700:	mov    rax,QWORD PTR [rsp+0x28]
  405705:	mov    DWORD PTR [rax],0x0
  40570b:	jmp    40795e <main@@Base+0x301e>
  405710:	and    rbx,0xffffffffff000000
  405717:	cmp    rbx,rax
  40571a:	jne    407fba <main@@Base+0x367a>
  405720:	mov    rbx,r14
  405723:	cmp    r15,0x6
  405727:	mov    r15,QWORD PTR [rsp+0x10]
  40572c:	jl     40a3bf <main@@Base+0x5a7f>
  405732:	mov    rax,QWORD PTR [rsp+0x28]
  405737:	cmp    DWORD PTR [rax],0x0
  40573a:	mov    al,BYTE PTR [r14+0x5]
  40573e:	je     40799e <main@@Base+0x305e>
  405744:	cmp    al,0x21
  405746:	jl     405753 <main@@Base+0xe13>
  405748:	mov    rbx,r14
  40574b:	cmp    al,0x3a
  40574d:	jne    40a3bf <main@@Base+0x5a7f>
  405753:	lea    rsi,[r14+0x5]
  405757:	mov    rax,QWORD PTR [rsp+0x28]
  40575c:	mov    DWORD PTR [rax],0x0
  405762:	jmp    4079ad <main@@Base+0x306d>
  405767:	movabs rdx,0x7536345f666e7631
  405771:	cmp    rcx,rdx
  405774:	je     40643c <main@@Base+0x1afc>
  40577a:	movabs rdx,0x7533325f666e7631
  405784:	cmp    rcx,rdx
  405787:	jne    409b83 <main@@Base+0x5243>
  40578d:	cmp    rax,0x9
  405791:	jl     408713 <main@@Base+0x3dd3>
  405797:	mov    rax,QWORD PTR [rsp+0x28]
  40579c:	cmp    DWORD PTR [rax],0x0
  40579f:	mov    al,BYTE PTR [r14+0x10]
  4057a3:	je     4085d3 <main@@Base+0x3c93>
  4057a9:	cmp    al,0x21
  4057ab:	jl     4057b5 <main@@Base+0xe75>
  4057ad:	cmp    al,0x3a
  4057af:	jne    408713 <main@@Base+0x3dd3>
  4057b5:	lea    rsi,[r14+0x10]
  4057b9:	mov    rax,QWORD PTR [rsp+0x28]
  4057be:	mov    DWORD PTR [rax],0x0
  4057c4:	jmp    4085df <main@@Base+0x3c9f>
  4057c9:	mov    rbx,r14
  4057cc:	cmp    al,0x22
  4057ce:	jne    406856 <main@@Base+0x1f16>
  4057d4:	lea    rsi,[r14+0x7]
  4057d8:	mov    rbx,QWORD PTR [rsp+0x8]
  4057dd:	mov    rax,rbx
  4057e0:	sub    rax,rsi
  4057e3:	cmp    rax,0x2
  4057e7:	jl     405849 <main@@Base+0xf09>
  4057e9:	cmp    BYTE PTR [rsi],0x20
  4057ec:	jg     405857 <main@@Base+0xf17>
  4057ee:	jne    405849 <main@@Base+0xf09>
  4057f0:	cmp    BYTE PTR [rsi+0x1],0x20
  4057f4:	jle    405849 <main@@Base+0xf09>
  4057f6:	add    rsi,0x1
  4057fa:	cmp    rsi,rbx
  4057fd:	jne    40585c <main@@Base+0xf1c>
  4057ff:	jmp    4058a3 <main@@Base+0xf63>
  405804:	mov    r12,r14
  405807:	cmp    al,0x22
  405809:	jne    40690c <main@@Base+0x1fcc>
  40580f:	mov    r15,r14
  405812:	lea    rsi,[r14+0x6]
  405816:	mov    rax,QWORD PTR [rsp+0x8]
  40581b:	sub    rax,rsi
  40581e:	cmp    rax,0x2
  405822:	mov    r14,QWORD PTR [rsp+0x10]
  405827:	jl     4064d3 <main@@Base+0x1b93>
  40582d:	cmp    BYTE PTR [rsi],0x20
  405830:	jle    4064c2 <main@@Base+0x1b82>
  405836:	mov    rbp,QWORD PTR [rsp+0x8]
  40583b:	cmp    rsi,rbp
  40583e:	jne    4064eb <main@@Base+0x1bab>
  405844:	jmp    40652d <main@@Base+0x1bed>
  405849:	mov    rdi,r15
  40584c:	mov    rdx,rbx
  40584f:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  405854:	mov    rsi,rax
  405857:	cmp    rsi,rbx
  40585a:	je     4058a3 <main@@Base+0xf63>
  40585c:	cmp    BYTE PTR [rsi],0x3a
  40585f:	jne    4058a3 <main@@Base+0xf63>
  405861:	mov    rax,rbx
  405864:	lea    rbx,[rsi+0x1]
  405868:	sub    rax,rbx
  40586b:	cmp    rax,0x2
  40586f:	jl     406843 <main@@Base+0x1f03>
  405875:	cmp    BYTE PTR [rbx],0x20
  405878:	jg     406856 <main@@Base+0x1f16>
  40587e:	jne    406843 <main@@Base+0x1f03>
  405884:	cmp    BYTE PTR [rsi+0x2],0x20
  405888:	jle    406843 <main@@Base+0x1f03>
  40588e:	add    rsi,0x2
  405892:	mov    rbx,rsi
  405895:	cmp    r14,rbx
  405898:	jne    40685f <main@@Base+0x1f1f>
  40589e:	jmp    407fbf <main@@Base+0x367f>
  4058a3:	mov    ecx,0x4
  4058a8:	mov    rdi,r15
  4058ab:	mov    rdx,rbx
  4058ae:	call   41f940 <flatcc_json_parser_set_error@@Base>
  4058b3:	jmp    406853 <main@@Base+0x1f13>
  4058b8:	mov    ecx,eax
  4058ba:	and    cl,0xf
  4058bd:	add    cl,0xff
  4058c0:	cmp    cl,0x7
  4058c3:	ja     409b83 <main@@Base+0x5243>
  4058c9:	movzx  ecx,cl
  4058cc:	lea    rdx,[rip+0x1e8dd]        # 4241b0 <_IO_stdin_used@@Base+0x1b0>
  4058d3:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  4058d7:	add    rcx,rdx
  4058da:	xor    r8d,r8d
  4058dd:	xor    r9d,r9d
  4058e0:	xor    edx,edx
  4058e2:	xor    esi,esi
  4058e4:	xor    ebx,ebx
  4058e6:	xor    edi,edi
  4058e8:	xor    ebp,ebp
  4058ea:	jmp    rcx
  4058ec:	movsx  r8,BYTE PTR [r14+0xf]
  4058f1:	movsx  r9,BYTE PTR [r14+0xe]
  4058f6:	shl    r9,0x8
  4058fa:	or     r9,r8
  4058fd:	movsx  rdx,BYTE PTR [r14+0xd]
  405902:	shl    rdx,0x10
  405906:	or     rdx,r9
  405909:	movsx  rsi,BYTE PTR [r14+0xc]
  40590e:	shl    rsi,0x18
  405912:	or     rsi,rdx
  405915:	movsx  rbx,BYTE PTR [r14+0xb]
  40591a:	shl    rbx,0x20
  40591e:	or     rbx,rsi
  405921:	movsx  rdi,BYTE PTR [r14+0xa]
  405926:	shl    rdi,0x28
  40592a:	or     rdi,rbx
  40592d:	movsx  rbp,BYTE PTR [r14+0x9]
  405932:	shl    rbp,0x30
  405936:	or     rbp,rdi
  405939:	movzx  ecx,BYTE PTR [r15]
  40593d:	shl    rcx,0x38
  405941:	or     rcx,rbp
  405944:	mov    r13,QWORD PTR [rsp+0x8]
  405949:	shr    rcx,0x30
  40594d:	cmp    rcx,0x3634
  405954:	jne    409b83 <main@@Base+0x5243>
  40595a:	cmp    rax,0x3
  40595e:	jl     40c5d3 <main@@Base+0x7c93>
  405964:	mov    rax,QWORD PTR [rsp+0x28]
  405969:	cmp    DWORD PTR [rax],0x0
  40596c:	mov    al,BYTE PTR [r14+0xa]
  405970:	je     407246 <main@@Base+0x2906>
  405976:	cmp    al,0x21
  405978:	jl     405982 <main@@Base+0x1042>
  40597a:	cmp    al,0x3a
  40597c:	jne    40c5d3 <main@@Base+0x7c93>
  405982:	add    r14,0xa
  405986:	mov    rax,QWORD PTR [rsp+0x28]
  40598b:	mov    DWORD PTR [rax],0x0
  405991:	jmp    407252 <main@@Base+0x2912>
  405996:	mov    ecx,eax
  405998:	and    cl,0xf
  40599b:	add    cl,0xff
  40599e:	cmp    cl,0x7
  4059a1:	ja     409b83 <main@@Base+0x5243>
  4059a7:	movzx  ecx,cl
  4059aa:	lea    rdx,[rip+0x1e87f]        # 424230 <_IO_stdin_used@@Base+0x230>
  4059b1:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  4059b5:	add    rcx,rdx
  4059b8:	xor    r8d,r8d
  4059bb:	xor    r9d,r9d
  4059be:	xor    edx,edx
  4059c0:	xor    esi,esi
  4059c2:	xor    ebx,ebx
  4059c4:	xor    ebp,ebp
  4059c6:	xor    edi,edi
  4059c8:	jmp    rcx
  4059ca:	movsx  r8,BYTE PTR [r14+0x17]
  4059cf:	movsx  r9,BYTE PTR [r14+0x16]
  4059d4:	shl    r9,0x8
  4059d8:	or     r9,r8
  4059db:	movsx  rdx,BYTE PTR [r14+0x15]
  4059e0:	shl    rdx,0x10
  4059e4:	or     rdx,r9
  4059e7:	movsx  rsi,BYTE PTR [r14+0x14]
  4059ec:	shl    rsi,0x18
  4059f0:	or     rsi,rdx
  4059f3:	movsx  rbx,BYTE PTR [r14+0x13]
  4059f8:	shl    rbx,0x20
  4059fc:	or     rbx,rsi
  4059ff:	movsx  rbp,BYTE PTR [r14+0x12]
  405a04:	shl    rbp,0x28
  405a08:	or     rbp,rbx
  405a0b:	movsx  rdi,BYTE PTR [r14+0x11]
  405a10:	shl    rdi,0x30
  405a14:	or     rdi,rbp
  405a17:	movzx  ecx,BYTE PTR [r15]
  405a1b:	shl    rcx,0x38
  405a1f:	or     rcx,rdi
  405a22:	mov    r13,QWORD PTR [rsp+0x8]
  405a27:	mov    rdx,rcx
  405a2a:	shr    rdx,0x30
  405a2e:	cmp    rdx,0x6732
  405a35:	jne    405c36 <main@@Base+0x12f6>
  405a3b:	cmp    rax,0x3
  405a3f:	jl     40c5d3 <main@@Base+0x7c93>
  405a45:	mov    rax,QWORD PTR [rsp+0x28]
  405a4a:	cmp    DWORD PTR [rax],0x0
  405a4d:	mov    al,BYTE PTR [r14+0x12]
  405a51:	je     40728f <main@@Base+0x294f>
  405a57:	cmp    al,0x21
  405a59:	jl     405a63 <main@@Base+0x1123>
  405a5b:	cmp    al,0x3a
  405a5d:	jne    40c5d3 <main@@Base+0x7c93>
  405a63:	add    r14,0x12
  405a67:	mov    rax,QWORD PTR [rsp+0x28]
  405a6c:	mov    DWORD PTR [rax],0x0
  405a72:	jmp    40729b <main@@Base+0x295b>
  405a77:	mov    ecx,eax
  405a79:	and    cl,0xf
  405a7c:	add    cl,0xff
  405a7f:	cmp    cl,0x7
  405a82:	ja     409b83 <main@@Base+0x5243>
  405a88:	movzx  ecx,cl
  405a8b:	lea    rdx,[rip+0x1e7be]        # 424250 <_IO_stdin_used@@Base+0x250>
  405a92:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  405a96:	add    rcx,rdx
  405a99:	xor    r8d,r8d
  405a9c:	xor    r9d,r9d
  405a9f:	xor    edx,edx
  405aa1:	xor    esi,esi
  405aa3:	xor    ebx,ebx
  405aa5:	xor    edi,edi
  405aa7:	xor    ebp,ebp
  405aa9:	jmp    rcx
  405aab:	movsx  r8,BYTE PTR [r14+0x17]
  405ab0:	movsx  r9,BYTE PTR [r14+0x16]
  405ab5:	shl    r9,0x8
  405ab9:	or     r9,r8
  405abc:	movsx  rdx,BYTE PTR [r14+0x15]
  405ac1:	shl    rdx,0x10
  405ac5:	or     rdx,r9
  405ac8:	movsx  rsi,BYTE PTR [r14+0x14]
  405acd:	shl    rsi,0x18
  405ad1:	or     rsi,rdx
  405ad4:	movsx  rbx,BYTE PTR [r14+0x13]
  405ad9:	shl    rbx,0x20
  405add:	or     rbx,rsi
  405ae0:	movsx  rdi,BYTE PTR [r14+0x12]
  405ae5:	shl    rdi,0x28
  405ae9:	or     rdi,rbx
  405aec:	movsx  rbp,BYTE PTR [r14+0x11]
  405af1:	shl    rbp,0x30
  405af5:	or     rbp,rdi
  405af8:	movzx  ecx,BYTE PTR [r15]
  405afc:	shl    rcx,0x38
  405b00:	or     rcx,rbp
  405b03:	mov    r13,QWORD PTR [rsp+0x8]
  405b08:	shr    rcx,0x8
  405b0c:	movabs rdx,0x64737472756374
  405b16:	cmp    rcx,rdx
  405b19:	jne    409b83 <main@@Base+0x5243>
  405b1f:	cmp    rax,0x8
  405b23:	jl     40c5d3 <main@@Base+0x7c93>
  405b29:	mov    rax,QWORD PTR [rsp+0x28]
  405b2e:	cmp    DWORD PTR [rax],0x0
  405b31:	mov    al,BYTE PTR [r14+0x17]
  405b35:	je     4072d8 <main@@Base+0x2998>
  405b3b:	cmp    al,0x21
  405b3d:	jl     405b47 <main@@Base+0x1207>
  405b3f:	cmp    al,0x3a
  405b41:	jne    40c5d3 <main@@Base+0x7c93>
  405b47:	add    r14,0x17
  405b4b:	mov    rax,QWORD PTR [rsp+0x28]
  405b50:	mov    DWORD PTR [rax],0x0
  405b56:	jmp    4072e4 <main@@Base+0x29a4>
  405b5b:	mov    ecx,eax
  405b5d:	and    cl,0xf
  405b60:	add    cl,0xff
  405b63:	cmp    cl,0x7
  405b66:	ja     409b83 <main@@Base+0x5243>
  405b6c:	movzx  ecx,cl
  405b6f:	lea    rdx,[rip+0x1e69a]        # 424210 <_IO_stdin_used@@Base+0x210>
  405b76:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  405b7a:	add    rcx,rdx
  405b7d:	xor    r8d,r8d
  405b80:	xor    r9d,r9d
  405b83:	xor    edx,edx
  405b85:	xor    esi,esi
  405b87:	xor    ebx,ebx
  405b89:	xor    edi,edi
  405b8b:	xor    ebp,ebp
  405b8d:	jmp    rcx
  405b8f:	movsx  r8,BYTE PTR [r14+0x17]
  405b94:	movsx  r9,BYTE PTR [r14+0x16]
  405b99:	shl    r9,0x8
  405b9d:	or     r9,r8
  405ba0:	movsx  rdx,BYTE PTR [r14+0x15]
  405ba5:	shl    rdx,0x10
  405ba9:	or     rdx,r9
  405bac:	movsx  rsi,BYTE PTR [r14+0x14]
  405bb1:	shl    rsi,0x18
  405bb5:	or     rsi,rdx
  405bb8:	movsx  rbx,BYTE PTR [r14+0x13]
  405bbd:	shl    rbx,0x20
  405bc1:	or     rbx,rsi
  405bc4:	movsx  rdi,BYTE PTR [r14+0x12]
  405bc9:	shl    rdi,0x28
  405bcd:	or     rdi,rbx
  405bd0:	movsx  rbp,BYTE PTR [r14+0x11]
  405bd5:	shl    rbp,0x30
  405bd9:	or     rbp,rdi
  405bdc:	movzx  ecx,BYTE PTR [r15]
  405be0:	shl    rcx,0x38
  405be4:	or     rcx,rbp
  405be7:	mov    r13,QWORD PTR [rsp+0x8]
  405bec:	shr    rcx,0x38
  405bf0:	cmp    rcx,0x73
  405bf4:	jne    409b83 <main@@Base+0x5243>
  405bfa:	cmp    rax,0x2
  405bfe:	jl     40c5d3 <main@@Base+0x7c93>
  405c04:	mov    rax,QWORD PTR [rsp+0x28]
  405c09:	cmp    DWORD PTR [rax],0x0
  405c0c:	mov    al,BYTE PTR [r14+0x11]
  405c10:	je     407321 <main@@Base+0x29e1>
  405c16:	cmp    al,0x21
  405c18:	jl     405c22 <main@@Base+0x12e2>
  405c1a:	cmp    al,0x3a
  405c1c:	jne    40c5d3 <main@@Base+0x7c93>
  405c22:	add    r14,0x11
  405c26:	mov    rax,QWORD PTR [rsp+0x28]
  405c2b:	mov    DWORD PTR [rax],0x0
  405c31:	jmp    40732d <main@@Base+0x29ed>
  405c36:	shr    rcx,0x38
  405c3a:	cmp    rcx,0x67
  405c3e:	jne    409b83 <main@@Base+0x5243>
  405c44:	cmp    rax,0x2
  405c48:	jl     40c5d3 <main@@Base+0x7c93>
  405c4e:	mov    rax,QWORD PTR [rsp+0x28]
  405c53:	cmp    DWORD PTR [rax],0x0
  405c56:	mov    al,BYTE PTR [r14+0x11]
  405c5a:	je     40866b <main@@Base+0x3d2b>
  405c60:	cmp    al,0x21
  405c62:	jl     405c6c <main@@Base+0x132c>
  405c64:	cmp    al,0x3a
  405c66:	jne    40c5d3 <main@@Base+0x7c93>
  405c6c:	add    r14,0x11
  405c70:	mov    rax,QWORD PTR [rsp+0x28]
  405c75:	mov    DWORD PTR [rax],0x0
  405c7b:	jmp    408677 <main@@Base+0x3d37>
  405c80:	mov    rax,r14
  405c83:	cmp    cl,0x22
  405c86:	jne    406f30 <main@@Base+0x25f0>
  405c8c:	lea    rsi,[r14+0x6]
  405c90:	mov    rax,r13
  405c93:	sub    rax,rsi
  405c96:	cmp    rax,0x2
  405c9a:	jl     40618a <main@@Base+0x184a>
  405ca0:	cmp    BYTE PTR [rsi],0x20
  405ca3:	jg     406198 <main@@Base+0x1858>
  405ca9:	jne    40618a <main@@Base+0x184a>
  405caf:	cmp    BYTE PTR [rsi+0x1],0x20
  405cb3:	jle    40618a <main@@Base+0x184a>
  405cb9:	add    rsi,0x1
  405cbd:	cmp    rsi,r13
  405cc0:	jne    4061a1 <main@@Base+0x1861>
  405cc6:	jmp    406245 <main@@Base+0x1905>
  405ccb:	mov    ecx,eax
  405ccd:	and    cl,0xf
  405cd0:	add    cl,0xff
  405cd3:	cmp    cl,0x7
  405cd6:	ja     409b83 <main@@Base+0x5243>
  405cdc:	movzx  ecx,cl
  405cdf:	lea    rdx,[rip+0x1e48a]        # 424170 <_IO_stdin_used@@Base+0x170>
  405ce6:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  405cea:	add    rcx,rdx
  405ced:	xor    r8d,r8d
  405cf0:	xor    r9d,r9d
  405cf3:	xor    edx,edx
  405cf5:	xor    esi,esi
  405cf7:	xor    ebx,ebx
  405cf9:	xor    edi,edi
  405cfb:	xor    ebp,ebp
  405cfd:	jmp    rcx
  405cff:	movsx  r8,BYTE PTR [r14+0xf]
  405d04:	movsx  r9,BYTE PTR [r14+0xe]
  405d09:	shl    r9,0x8
  405d0d:	or     r9,r8
  405d10:	movsx  rdx,BYTE PTR [r14+0xd]
  405d15:	shl    rdx,0x10
  405d19:	or     rdx,r9
  405d1c:	movsx  rsi,BYTE PTR [r14+0xc]
  405d21:	shl    rsi,0x18
  405d25:	or     rsi,rdx
  405d28:	movsx  rbx,BYTE PTR [r14+0xb]
  405d2d:	shl    rbx,0x20
  405d31:	or     rbx,rsi
  405d34:	movsx  rdi,BYTE PTR [r14+0xa]
  405d39:	shl    rdi,0x28
  405d3d:	or     rdi,rbx
  405d40:	movsx  rbp,BYTE PTR [r14+0x9]
  405d45:	shl    rbp,0x30
  405d49:	or     rbp,rdi
  405d4c:	movzx  ecx,BYTE PTR [r15]
  405d50:	shl    rcx,0x38
  405d54:	or     rcx,rbp
  405d57:	mov    r13,QWORD PTR [rsp+0x8]
  405d5c:	shr    rcx,0x38
  405d60:	cmp    rcx,0x79
  405d64:	jne    409b83 <main@@Base+0x5243>
  405d6a:	cmp    rax,0x2
  405d6e:	jl     40c5d3 <main@@Base+0x7c93>
  405d74:	mov    rax,QWORD PTR [rsp+0x28]
  405d79:	cmp    DWORD PTR [rax],0x0
  405d7c:	mov    al,BYTE PTR [r14+0x9]
  405d80:	je     407a39 <main@@Base+0x30f9>
  405d86:	cmp    al,0x21
  405d88:	jl     405d92 <main@@Base+0x1452>
  405d8a:	cmp    al,0x3a
  405d8c:	jne    40c5d3 <main@@Base+0x7c93>
  405d92:	add    r14,0x9
  405d96:	mov    rax,QWORD PTR [rsp+0x28]
  405d9b:	mov    DWORD PTR [rax],0x0
  405da1:	jmp    407a45 <main@@Base+0x3105>
  405da6:	and    al,0xf
  405da8:	add    al,0xff
  405daa:	cmp    al,0x7
  405dac:	ja     405e5e <main@@Base+0x151e>
  405db2:	movzx  eax,al
  405db5:	lea    rcx,[rip+0x1e2d4]        # 424090 <_IO_stdin_used@@Base+0x90>
  405dbc:	movsxd rax,DWORD PTR [rcx+rax*4]
  405dc0:	add    rax,rcx
  405dc3:	xor    r8d,r8d
  405dc6:	xor    r9d,r9d
  405dc9:	xor    ecx,ecx
  405dcb:	xor    edx,edx
  405dcd:	xor    ebp,ebp
  405dcf:	xor    ebx,ebx
  405dd1:	xor    edi,edi
  405dd3:	jmp    rax
  405dd5:	movsx  r8,BYTE PTR [r14+0xf]
  405dda:	movsx  r9,BYTE PTR [r14+0xe]
  405ddf:	shl    r9,0x8
  405de3:	or     r9,r8
  405de6:	movsx  rcx,BYTE PTR [r14+0xd]
  405deb:	shl    rcx,0x10
  405def:	or     rcx,r9
  405df2:	movsx  rdx,BYTE PTR [r14+0xc]
  405df7:	shl    rdx,0x18
  405dfb:	or     rdx,rcx
  405dfe:	movsx  rbp,BYTE PTR [r14+0xb]
  405e03:	shl    rbp,0x20
  405e07:	or     rbp,rdx
  405e0a:	movsx  rbx,BYTE PTR [r14+0xa]
  405e0f:	shl    rbx,0x28
  405e13:	or     rbx,rbp
  405e16:	movsx  rdi,BYTE PTR [r14+0x9]
  405e1b:	shl    rdi,0x30
  405e1f:	or     rdi,rbx
  405e22:	movzx  eax,BYTE PTR [rsi]
  405e25:	shl    rax,0x38
  405e29:	or     rax,rdi
  405e2c:	mov    r13,QWORD PTR [rsp+0x8]
  405e31:	movabs rcx,0x6564666c61746275
  405e3b:	cmp    rax,rcx
  405e3e:	jne    405e5e <main@@Base+0x151e>
  405e40:	lea    r15,[r14+0x10]
  405e44:	mov    rax,r13
  405e47:	sub    rax,r15
  405e4a:	cmp    rax,0x8
  405e4e:	jb     40658d <main@@Base+0x1c4d>
  405e54:	movbe  rcx,QWORD PTR [r15]
  405e59:	jmp    40661e <main@@Base+0x1cde>
  405e5e:	mov    rdi,r15
  405e61:	jmp    409b8e <main@@Base+0x524e>
  405e66:	mov    r12,r14
  405e69:	cmp    al,0x22
  405e6b:	jne    406f7a <main@@Base+0x263a>
  405e71:	lea    rsi,[r14+0x6]
  405e75:	mov    rbx,QWORD PTR [rsp+0x8]
  405e7a:	mov    rax,rbx
  405e7d:	sub    rax,rsi
  405e80:	cmp    rax,0x2
  405e84:	jl     4061ec <main@@Base+0x18ac>
  405e8a:	cmp    BYTE PTR [rsi],0x20
  405e8d:	jg     4061fa <main@@Base+0x18ba>
  405e93:	jne    4061ec <main@@Base+0x18ac>
  405e99:	cmp    BYTE PTR [rsi+0x1],0x20
  405e9d:	jle    4061ec <main@@Base+0x18ac>
  405ea3:	add    rsi,0x1
  405ea7:	cmp    rsi,rbx
  405eaa:	jne    4061ff <main@@Base+0x18bf>
  405eb0:	jmp    406263 <main@@Base+0x1923>
  405eb5:	mov    ecx,eax
  405eb7:	and    cl,0xf
  405eba:	add    cl,0xff
  405ebd:	cmp    cl,0x7
  405ec0:	ja     409b83 <main@@Base+0x5243>
  405ec6:	movzx  ecx,cl
  405ec9:	lea    rdx,[rip+0x1e440]        # 424310 <_IO_stdin_used@@Base+0x310>
  405ed0:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  405ed4:	add    rcx,rdx
  405ed7:	xor    r8d,r8d
  405eda:	xor    r9d,r9d
  405edd:	xor    edx,edx
  405edf:	xor    esi,esi
  405ee1:	xor    ebx,ebx
  405ee3:	xor    edi,edi
  405ee5:	xor    ebp,ebp
  405ee7:	jmp    rcx
  405ee9:	movsx  r8,BYTE PTR [r14+0xf]
  405eee:	movsx  r9,BYTE PTR [r14+0xe]
  405ef3:	shl    r9,0x8
  405ef7:	or     r9,r8
  405efa:	movsx  rdx,BYTE PTR [r14+0xd]
  405eff:	shl    rdx,0x10
  405f03:	or     rdx,r9
  405f06:	movsx  rsi,BYTE PTR [r14+0xc]
  405f0b:	shl    rsi,0x18
  405f0f:	or     rsi,rdx
  405f12:	movsx  rbx,BYTE PTR [r14+0xb]
  405f17:	shl    rbx,0x20
  405f1b:	or     rbx,rsi
  405f1e:	movsx  rdi,BYTE PTR [r14+0xa]
  405f23:	shl    rdi,0x28
  405f27:	or     rdi,rbx
  405f2a:	movsx  rbp,BYTE PTR [r14+0x9]
  405f2f:	shl    rbp,0x30
  405f33:	or     rbp,rdi
  405f36:	movzx  ecx,BYTE PTR [r15]
  405f3a:	shl    rcx,0x38
  405f3e:	or     rcx,rbp
  405f41:	mov    r13,QWORD PTR [rsp+0x8]
  405f46:	shr    rcx,0x38
  405f4a:	cmp    rcx,0x79
  405f4e:	jne    409b83 <main@@Base+0x5243>
  405f54:	cmp    rax,0x2
  405f58:	jl     40c5d3 <main@@Base+0x7c93>
  405f5e:	mov    rax,QWORD PTR [rsp+0x28]
  405f63:	cmp    DWORD PTR [rax],0x0
  405f66:	mov    al,BYTE PTR [r14+0x9]
  405f6a:	je     407a82 <main@@Base+0x3142>
  405f70:	cmp    al,0x21
  405f72:	jl     405f7c <main@@Base+0x163c>
  405f74:	cmp    al,0x3a
  405f76:	jne    40c5d3 <main@@Base+0x7c93>
  405f7c:	add    r14,0x9
  405f80:	mov    rax,QWORD PTR [rsp+0x28]
  405f85:	mov    DWORD PTR [rax],0x0
  405f8b:	jmp    407a8e <main@@Base+0x314e>
  405f90:	mov    ecx,eax
  405f92:	and    cl,0xf
  405f95:	add    cl,0xff
  405f98:	cmp    cl,0x7
  405f9b:	ja     409b83 <main@@Base+0x5243>
  405fa1:	movzx  ecx,cl
  405fa4:	lea    rdx,[rip+0x1e0a5]        # 424050 <_IO_stdin_used@@Base+0x50>
  405fab:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  405faf:	add    rcx,rdx
  405fb2:	xor    r8d,r8d
  405fb5:	xor    r9d,r9d
  405fb8:	xor    edx,edx
  405fba:	xor    esi,esi
  405fbc:	xor    ebx,ebx
  405fbe:	xor    ebp,ebp
  405fc0:	xor    edi,edi
  405fc2:	jmp    rcx
  405fc4:	movsx  r8,BYTE PTR [r14+0xf]
  405fc9:	movsx  r9,BYTE PTR [r14+0xe]
  405fce:	shl    r9,0x8
  405fd2:	or     r9,r8
  405fd5:	movsx  rdx,BYTE PTR [r14+0xd]
  405fda:	shl    rdx,0x10
  405fde:	or     rdx,r9
  405fe1:	movsx  rsi,BYTE PTR [r14+0xc]
  405fe6:	shl    rsi,0x18
  405fea:	or     rsi,rdx
  405fed:	movsx  rbx,BYTE PTR [r14+0xb]
  405ff2:	shl    rbx,0x20
  405ff6:	or     rbx,rsi
  405ff9:	movsx  rbp,BYTE PTR [r14+0xa]
  405ffe:	shl    rbp,0x28
  406002:	or     rbp,rbx
  406005:	movsx  rdi,BYTE PTR [r14+0x9]
  40600a:	shl    rdi,0x30
  40600e:	or     rdi,rbp
  406011:	movzx  ecx,BYTE PTR [r15]
  406015:	shl    rcx,0x38
  406019:	or     rcx,rdi
  40601c:	mov    r13,QWORD PTR [rsp+0x8]
  406021:	movabs rdx,0x665f646f75626c65
  40602b:	cmp    rcx,rdx
  40602e:	jne    406137 <main@@Base+0x17f7>
  406034:	lea    r15,[r14+0x10]
  406038:	mov    rax,r13
  40603b:	sub    rax,r15
  40603e:	cmp    rax,0x8
  406042:	jb     40667a <main@@Base+0x1d3a>
  406048:	movbe  rcx,QWORD PTR [r15]
  40604d:	jmp    40670b <main@@Base+0x1dcb>
  406052:	mov    ecx,eax
  406054:	and    cl,0xf
  406057:	add    cl,0xff
  40605a:	cmp    cl,0x7
  40605d:	ja     407ec8 <main@@Base+0x3588>
  406063:	movzx  ecx,cl
  406066:	lea    rdx,[rip+0x1e283]        # 4242f0 <_IO_stdin_used@@Base+0x2f0>
  40606d:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  406071:	add    rcx,rdx
  406074:	xor    r8d,r8d
  406077:	xor    r9d,r9d
  40607a:	xor    edx,edx
  40607c:	xor    esi,esi
  40607e:	xor    ebp,ebp
  406080:	xor    ebx,ebx
  406082:	xor    edi,edi
  406084:	jmp    rcx
  406086:	movsx  r8,BYTE PTR [r14+0x17]
  40608b:	movsx  r9,BYTE PTR [r14+0x16]
  406090:	shl    r9,0x8
  406094:	or     r9,r8
  406097:	movsx  rdx,BYTE PTR [r14+0x15]
  40609c:	shl    rdx,0x10
  4060a0:	or     rdx,r9
  4060a3:	movsx  rsi,BYTE PTR [r14+0x14]
  4060a8:	shl    rsi,0x18
  4060ac:	or     rsi,rdx
  4060af:	movsx  rbp,BYTE PTR [r14+0x13]
  4060b4:	shl    rbp,0x20
  4060b8:	or     rbp,rsi
  4060bb:	movsx  rbx,BYTE PTR [r14+0x12]
  4060c0:	shl    rbx,0x28
  4060c4:	or     rbx,rbp
  4060c7:	movsx  rdi,BYTE PTR [r14+0x11]
  4060cc:	shl    rdi,0x30
  4060d0:	or     rdi,rbx
  4060d3:	movzx  ecx,BYTE PTR [r12]
  4060d8:	shl    rcx,0x38
  4060dc:	or     rcx,rdi
  4060df:	mov    r13,QWORD PTR [rsp+0x8]
  4060e4:	shr    rcx,0x18
  4060e8:	movabs rdx,0x5f74657374
  4060f2:	cmp    rcx,rdx
  4060f5:	jne    407ec8 <main@@Base+0x3588>
  4060fb:	cmp    rax,0x6
  4060ff:	jl     407ec8 <main@@Base+0x3588>
  406105:	mov    rax,QWORD PTR [rsp+0x28]
  40610a:	cmp    DWORD PTR [rax],0x0
  40610d:	mov    al,BYTE PTR [r14+0x15]
  406111:	je     407bb0 <main@@Base+0x3270>
  406117:	cmp    al,0x21
  406119:	jl     406123 <main@@Base+0x17e3>
  40611b:	cmp    al,0x3a
  40611d:	jne    407ec8 <main@@Base+0x3588>
  406123:	add    r14,0x15
  406127:	mov    rax,QWORD PTR [rsp+0x28]
  40612c:	mov    DWORD PTR [rax],0x0
  406132:	jmp    407bbc <main@@Base+0x327c>
  406137:	shr    rcx,0x8
  40613b:	movabs rdx,0x665f6c6f6e6773
  406145:	cmp    rcx,rdx
  406148:	jne    409b83 <main@@Base+0x5243>
  40614e:	cmp    rax,0x8
  406152:	jl     40c5d3 <main@@Base+0x7c93>
  406158:	mov    rax,QWORD PTR [rsp+0x28]
  40615d:	cmp    DWORD PTR [rax],0x0
  406160:	mov    al,BYTE PTR [r14+0xf]
  406164:	je     409aec <main@@Base+0x51ac>
  40616a:	cmp    al,0x21
  40616c:	jl     406176 <main@@Base+0x1836>
  40616e:	cmp    al,0x3a
  406170:	jne    40c5d3 <main@@Base+0x7c93>
  406176:	add    r14,0xf
  40617a:	mov    rax,QWORD PTR [rsp+0x28]
  40617f:	mov    DWORD PTR [rax],0x0
  406185:	jmp    409af8 <main@@Base+0x51b8>
  40618a:	mov    rdi,r15
  40618d:	mov    rdx,r13
  406190:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  406195:	mov    rsi,rax
  406198:	cmp    rsi,r13
  40619b:	je     406245 <main@@Base+0x1905>
  4061a1:	cmp    BYTE PTR [rsi],0x3a
  4061a4:	jne    406245 <main@@Base+0x1905>
  4061aa:	lea    rax,[rsi+0x1]
  4061ae:	mov    rcx,r13
  4061b1:	sub    rcx,rax
  4061b4:	cmp    rcx,0x2
  4061b8:	jl     406f22 <main@@Base+0x25e2>
  4061be:	cmp    BYTE PTR [rax],0x20
  4061c1:	jg     406f30 <main@@Base+0x25f0>
  4061c7:	jne    406f22 <main@@Base+0x25e2>
  4061cd:	cmp    BYTE PTR [rsi+0x2],0x20
  4061d1:	jle    406f22 <main@@Base+0x25e2>
  4061d7:	add    rsi,0x2
  4061db:	mov    rax,rsi
  4061de:	cmp    r14,rax
  4061e1:	jne    406f39 <main@@Base+0x25f9>
  4061e7:	jmp    404fc5 <main@@Base+0x685>
  4061ec:	mov    rdi,r15
  4061ef:	mov    rdx,rbx
  4061f2:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  4061f7:	mov    rsi,rax
  4061fa:	cmp    rsi,rbx
  4061fd:	je     406263 <main@@Base+0x1923>
  4061ff:	cmp    BYTE PTR [rsi],0x3a
  406202:	jne    406263 <main@@Base+0x1923>
  406204:	lea    r12,[rsi+0x1]
  406208:	sub    rbx,r12
  40620b:	cmp    rbx,0x2
  40620f:	jl     406f67 <main@@Base+0x2627>
  406215:	cmp    BYTE PTR [r12],0x20
  40621a:	jg     406f7a <main@@Base+0x263a>
  406220:	jne    406f67 <main@@Base+0x2627>
  406226:	cmp    BYTE PTR [rsi+0x2],0x20
  40622a:	jle    406f67 <main@@Base+0x2627>
  406230:	add    rsi,0x2
  406234:	mov    r12,rsi
  406237:	cmp    r14,r12
  40623a:	jne    406f83 <main@@Base+0x2643>
  406240:	jmp    40a2c3 <main@@Base+0x5983>
  406245:	mov    ecx,0x4
  40624a:	mov    rdi,r15
  40624d:	mov    rdx,r13
  406250:	call   41f940 <flatcc_json_parser_set_error@@Base>
  406255:	cmp    r14,rax
  406258:	jne    406f39 <main@@Base+0x25f9>
  40625e:	jmp    404fc5 <main@@Base+0x685>
  406263:	mov    ecx,0x4
  406268:	mov    rdi,r15
  40626b:	mov    rdx,rbx
  40626e:	call   41f940 <flatcc_json_parser_set_error@@Base>
  406273:	jmp    406f77 <main@@Base+0x2637>
  406278:	mov    rax,r14
  40627b:	cmp    cl,0x22
  40627e:	jne    4073f5 <main@@Base+0x2ab5>
  406284:	lea    rsi,[r14+0x5]
  406288:	mov    rax,r13
  40628b:	sub    rax,rsi
  40628e:	cmp    rax,0x2
  406292:	jl     40634b <main@@Base+0x1a0b>
  406298:	cmp    BYTE PTR [rsi],0x20
  40629b:	jg     406359 <main@@Base+0x1a19>
  4062a1:	jne    40634b <main@@Base+0x1a0b>
  4062a7:	cmp    BYTE PTR [rsi+0x1],0x20
  4062ab:	jle    40634b <main@@Base+0x1a0b>
  4062b1:	add    rsi,0x1
  4062b5:	cmp    rsi,r13
  4062b8:	jne    406362 <main@@Base+0x1a22>
  4062be:	jmp    406409 <main@@Base+0x1ac9>
  4062c3:	mov    r12,r14
  4062c6:	cmp    al,0x22
  4062c8:	jne    407451 <main@@Base+0x2b11>
  4062ce:	lea    rsi,[r14+0x5]
  4062d2:	mov    rax,r13
  4062d5:	sub    rax,rsi
  4062d8:	cmp    rax,0x2
  4062dc:	jl     4063ad <main@@Base+0x1a6d>
  4062e2:	cmp    BYTE PTR [rsi],0x20
  4062e5:	jg     4063bb <main@@Base+0x1a7b>
  4062eb:	jne    4063ad <main@@Base+0x1a6d>
  4062f1:	cmp    BYTE PTR [rsi+0x1],0x20
  4062f5:	jle    4063ad <main@@Base+0x1a6d>
  4062fb:	add    rsi,0x1
  4062ff:	cmp    rsi,r13
  406302:	jne    4063c0 <main@@Base+0x1a80>
  406308:	jmp    406427 <main@@Base+0x1ae7>
  40630d:	mov    rax,r14
  406310:	cmp    cl,0x22
  406313:	jne    407723 <main@@Base+0x2de3>
  406319:	lea    rsi,[r14+0x5]
  40631d:	mov    rax,QWORD PTR [rsp+0x8]
  406322:	sub    rax,rsi
  406325:	cmp    rax,0x2
  406329:	jl     4070be <main@@Base+0x277e>
  40632f:	cmp    BYTE PTR [rsi],0x20
  406332:	jle    4070ad <main@@Base+0x276d>
  406338:	mov    rbp,QWORD PTR [rsp+0x8]
  40633d:	cmp    rsi,rbp
  406340:	jne    4070d8 <main@@Base+0x2798>
  406346:	jmp    40711e <main@@Base+0x27de>
  40634b:	mov    rdi,r15
  40634e:	mov    rdx,r13
  406351:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  406356:	mov    rsi,rax
  406359:	cmp    rsi,r13
  40635c:	je     406409 <main@@Base+0x1ac9>
  406362:	cmp    BYTE PTR [rsi],0x3a
  406365:	jne    406409 <main@@Base+0x1ac9>
  40636b:	lea    rax,[rsi+0x1]
  40636f:	mov    rcx,r13
  406372:	sub    rcx,rax
  406375:	cmp    rcx,0x2
  406379:	jl     4073e7 <main@@Base+0x2aa7>
  40637f:	cmp    BYTE PTR [rax],0x20
  406382:	jg     4073f5 <main@@Base+0x2ab5>
  406388:	jne    4073e7 <main@@Base+0x2aa7>
  40638e:	cmp    BYTE PTR [rsi+0x2],0x20
  406392:	jle    4073e7 <main@@Base+0x2aa7>
  406398:	add    rsi,0x2
  40639c:	mov    rax,rsi
  40639f:	cmp    r14,rax
  4063a2:	jne    4073fe <main@@Base+0x2abe>
  4063a8:	jmp    404fc5 <main@@Base+0x685>
  4063ad:	mov    rdi,r15
  4063b0:	mov    rdx,r13
  4063b3:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  4063b8:	mov    rsi,rax
  4063bb:	cmp    rsi,r13
  4063be:	je     406427 <main@@Base+0x1ae7>
  4063c0:	cmp    BYTE PTR [rsi],0x3a
  4063c3:	jne    406427 <main@@Base+0x1ae7>
  4063c5:	lea    r12,[rsi+0x1]
  4063c9:	mov    rax,r13
  4063cc:	sub    rax,r12
  4063cf:	cmp    rax,0x2
  4063d3:	jl     407440 <main@@Base+0x2b00>
  4063d9:	cmp    BYTE PTR [r12],0x20
  4063de:	jg     407451 <main@@Base+0x2b11>
  4063e4:	jne    407440 <main@@Base+0x2b00>
  4063ea:	cmp    BYTE PTR [rsi+0x2],0x20
  4063ee:	jle    407440 <main@@Base+0x2b00>
  4063f4:	add    rsi,0x2
  4063f8:	mov    r12,rsi
  4063fb:	cmp    r14,r12
  4063fe:	jne    40745a <main@@Base+0x2b1a>
  406404:	jmp    408b4d <main@@Base+0x420d>
  406409:	mov    ecx,0x4
  40640e:	mov    rdi,r15
  406411:	mov    rdx,r13
  406414:	call   41f940 <flatcc_json_parser_set_error@@Base>
  406419:	cmp    r14,rax
  40641c:	jne    4073fe <main@@Base+0x2abe>
  406422:	jmp    404fc5 <main@@Base+0x685>
  406427:	mov    ecx,0x4
  40642c:	mov    rdi,r15
  40642f:	mov    rdx,r13
  406432:	call   41f940 <flatcc_json_parser_set_error@@Base>
  406437:	jmp    40744e <main@@Base+0x2b0e>
  40643c:	cmp    rax,0x9
  406440:	jl     40886c <main@@Base+0x3f2c>
  406446:	mov    rax,QWORD PTR [rsp+0x28]
  40644b:	cmp    DWORD PTR [rax],0x0
  40644e:	mov    al,BYTE PTR [r14+0x10]
  406452:	je     40861f <main@@Base+0x3cdf>
  406458:	cmp    al,0x21
  40645a:	jl     406464 <main@@Base+0x1b24>
  40645c:	cmp    al,0x3a
  40645e:	jne    40886c <main@@Base+0x3f2c>
  406464:	lea    rsi,[r14+0x10]
  406468:	mov    rax,QWORD PTR [rsp+0x28]
  40646d:	mov    DWORD PTR [rax],0x0
  406473:	jmp    40862b <main@@Base+0x3ceb>
  406478:	mov    r12,r14
  40647b:	cmp    al,0x22
  40647d:	jne    408338 <main@@Base+0x39f8>
  406483:	lea    rsi,[r14+0x9]
  406487:	mov    rax,r13
  40648a:	sub    rax,rsi
  40648d:	cmp    rax,0x2
  406491:	jl     406755 <main@@Base+0x1e15>
  406497:	cmp    BYTE PTR [rsi],0x20
  40649a:	jg     406763 <main@@Base+0x1e23>
  4064a0:	jne    406755 <main@@Base+0x1e15>
  4064a6:	cmp    BYTE PTR [rsi+0x1],0x20
  4064aa:	jle    406755 <main@@Base+0x1e15>
  4064b0:	add    rsi,0x1
  4064b4:	cmp    rsi,r13
  4064b7:	jne    406768 <main@@Base+0x1e28>
  4064bd:	jmp    4067b1 <main@@Base+0x1e71>
  4064c2:	jne    4064d3 <main@@Base+0x1b93>
  4064c4:	cmp    BYTE PTR [rsi+0x1],0x20
  4064c8:	jle    4064d3 <main@@Base+0x1b93>
  4064ca:	add    rsi,0x1
  4064ce:	jmp    405836 <main@@Base+0xef6>
  4064d3:	mov    rdi,r14
  4064d6:	mov    rbp,QWORD PTR [rsp+0x8]
  4064db:	mov    rdx,rbp
  4064de:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  4064e3:	mov    rsi,rax
  4064e6:	cmp    rsi,rbp
  4064e9:	je     40652d <main@@Base+0x1bed>
  4064eb:	cmp    BYTE PTR [rsi],0x3a
  4064ee:	jne    40652d <main@@Base+0x1bed>
  4064f0:	lea    r12,[rsi+0x1]
  4064f4:	mov    rax,QWORD PTR [rsp+0x8]
  4064f9:	sub    rax,r12
  4064fc:	cmp    rax,0x2
  406500:	jl     4068f6 <main@@Base+0x1fb6>
  406506:	cmp    BYTE PTR [r12],0x20
  40650b:	jg     406909 <main@@Base+0x1fc9>
  406511:	jne    4068f6 <main@@Base+0x1fb6>
  406517:	cmp    BYTE PTR [rsi+0x2],0x20
  40651b:	jle    4068f6 <main@@Base+0x1fb6>
  406521:	add    rsi,0x2
  406525:	mov    r12,rsi
  406528:	jmp    406909 <main@@Base+0x1fc9>
  40652d:	mov    ecx,0x4
  406532:	mov    rdi,r14
  406535:	mov    rdx,QWORD PTR [rsp+0x8]
  40653a:	call   41f940 <flatcc_json_parser_set_error@@Base>
  40653f:	jmp    406906 <main@@Base+0x1fc6>
  406544:	cmp    al,0x22
  406546:	jne    40c5d3 <main@@Base+0x7c93>
  40654c:	add    r14,0x11
  406550:	mov    rax,r13
  406553:	sub    rax,r14
  406556:	cmp    rax,0x2
  40655a:	jl     4067c6 <main@@Base+0x1e86>
  406560:	cmp    BYTE PTR [r14],0x20
  406564:	jg     4067d9 <main@@Base+0x1e99>
  40656a:	jne    4067c6 <main@@Base+0x1e86>
  406570:	cmp    BYTE PTR [r14+0x1],0x20
  406575:	jle    4067c6 <main@@Base+0x1e86>
  40657b:	add    r14,0x1
  40657f:	cmp    r14,r13
  406582:	jne    4067de <main@@Base+0x1e9e>
  406588:	jmp    406829 <main@@Base+0x1ee9>
  40658d:	mov    ecx,eax
  40658f:	and    cl,0xf
  406592:	add    cl,0xff
  406595:	cmp    cl,0x7
  406598:	ja     409b83 <main@@Base+0x5243>
  40659e:	movzx  ecx,cl
  4065a1:	lea    rdx,[rip+0x1db08]        # 4240b0 <_IO_stdin_used@@Base+0xb0>
  4065a8:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  4065ac:	add    rcx,rdx
  4065af:	xor    r8d,r8d
  4065b2:	xor    r9d,r9d
  4065b5:	xor    edx,edx
  4065b7:	xor    esi,esi
  4065b9:	xor    ebx,ebx
  4065bb:	xor    edi,edi
  4065bd:	xor    ebp,ebp
  4065bf:	jmp    rcx
  4065c1:	movsx  r8,BYTE PTR [r14+0x17]
  4065c6:	movsx  r9,BYTE PTR [r14+0x16]
  4065cb:	shl    r9,0x8
  4065cf:	or     r9,r8
  4065d2:	movsx  rdx,BYTE PTR [r14+0x15]
  4065d7:	shl    rdx,0x10
  4065db:	or     rdx,r9
  4065de:	movsx  rsi,BYTE PTR [r14+0x14]
  4065e3:	shl    rsi,0x18
  4065e7:	or     rsi,rdx
  4065ea:	movsx  rbx,BYTE PTR [r14+0x13]
  4065ef:	shl    rbx,0x20
  4065f3:	or     rbx,rsi
  4065f6:	movsx  rdi,BYTE PTR [r14+0x12]
  4065fb:	shl    rdi,0x28
  4065ff:	or     rdi,rbx
  406602:	movsx  rbp,BYTE PTR [r14+0x11]
  406607:	shl    rbp,0x30
  40660b:	or     rbp,rdi
  40660e:	movzx  ecx,BYTE PTR [r15]
  406612:	shl    rcx,0x38
  406616:	or     rcx,rbp
  406619:	mov    r13,QWORD PTR [rsp+0x8]
  40661e:	movabs rdx,0xffffffff00000000
  406628:	and    rcx,rdx
  40662b:	movabs rdx,0x6666657200000000
  406635:	cmp    rcx,rdx
  406638:	jne    409b83 <main@@Base+0x5243>
  40663e:	cmp    rax,0x5
  406642:	jl     40c5d3 <main@@Base+0x7c93>
  406648:	mov    rax,QWORD PTR [rsp+0x28]
  40664d:	cmp    DWORD PTR [rax],0x0
  406650:	mov    al,BYTE PTR [r14+0x14]
  406654:	je     409ba3 <main@@Base+0x5263>
  40665a:	cmp    al,0x21
  40665c:	jl     406666 <main@@Base+0x1d26>
  40665e:	cmp    al,0x3a
  406660:	jne    40c5d3 <main@@Base+0x7c93>
  406666:	add    r14,0x14
  40666a:	mov    rax,QWORD PTR [rsp+0x28]
  40666f:	mov    DWORD PTR [rax],0x0
  406675:	jmp    409baf <main@@Base+0x526f>
  40667a:	mov    ecx,eax
  40667c:	and    cl,0xf
  40667f:	add    cl,0xff
  406682:	cmp    cl,0x7
  406685:	ja     409b83 <main@@Base+0x5243>
  40668b:	movzx  ecx,cl
  40668e:	lea    rdx,[rip+0x1d9db]        # 424070 <_IO_stdin_used@@Base+0x70>
  406695:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  406699:	add    rcx,rdx
  40669c:	xor    r8d,r8d
  40669f:	xor    r9d,r9d
  4066a2:	xor    edx,edx
  4066a4:	xor    esi,esi
  4066a6:	xor    ebx,ebx
  4066a8:	xor    edi,edi
  4066aa:	xor    ebp,ebp
  4066ac:	jmp    rcx
  4066ae:	movsx  r8,BYTE PTR [r14+0x17]
  4066b3:	movsx  r9,BYTE PTR [r14+0x16]
  4066b8:	shl    r9,0x8
  4066bc:	or     r9,r8
  4066bf:	movsx  rdx,BYTE PTR [r14+0x15]
  4066c4:	shl    rdx,0x10
  4066c8:	or     rdx,r9
  4066cb:	movsx  rsi,BYTE PTR [r14+0x14]
  4066d0:	shl    rsi,0x18
  4066d4:	or     rsi,rdx
  4066d7:	movsx  rbx,BYTE PTR [r14+0x13]
  4066dc:	shl    rbx,0x20
  4066e0:	or     rbx,rsi
  4066e3:	movsx  rdi,BYTE PTR [r14+0x12]
  4066e8:	shl    rdi,0x28
  4066ec:	or     rdi,rbx
  4066ef:	movsx  rbp,BYTE PTR [r14+0x11]
  4066f4:	shl    rbp,0x30
  4066f8:	or     rbp,rdi
  4066fb:	movzx  ecx,BYTE PTR [r15]
  4066ff:	shl    rcx,0x38
  406703:	or     rcx,rbp
  406706:	mov    r13,QWORD PTR [rsp+0x8]
  40670b:	shr    rcx,0x38
  40670f:	cmp    rcx,0x73
  406713:	jne    409b83 <main@@Base+0x5243>
  406719:	cmp    rax,0x2
  40671d:	jl     40c5d3 <main@@Base+0x7c93>
  406723:	mov    rax,QWORD PTR [rsp+0x28]
  406728:	cmp    DWORD PTR [rax],0x0
  40672b:	mov    al,BYTE PTR [r14+0x11]
  40672f:	je     409bec <main@@Base+0x52ac>
  406735:	cmp    al,0x21
  406737:	jl     406741 <main@@Base+0x1e01>
  406739:	cmp    al,0x3a
  40673b:	jne    40c5d3 <main@@Base+0x7c93>
  406741:	add    r14,0x11
  406745:	mov    rax,QWORD PTR [rsp+0x28]
  40674a:	mov    DWORD PTR [rax],0x0
  406750:	jmp    409bf8 <main@@Base+0x52b8>
  406755:	mov    rdi,r15
  406758:	mov    rdx,r13
  40675b:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  406760:	mov    rsi,rax
  406763:	cmp    rsi,r13
  406766:	je     4067b1 <main@@Base+0x1e71>
  406768:	cmp    BYTE PTR [rsi],0x3a
  40676b:	jne    4067b1 <main@@Base+0x1e71>
  40676d:	lea    r12,[rsi+0x1]
  406771:	mov    rax,r13
  406774:	sub    rax,r12
  406777:	cmp    rax,0x2
  40677b:	jl     408327 <main@@Base+0x39e7>
  406781:	cmp    BYTE PTR [r12],0x20
  406786:	jg     408338 <main@@Base+0x39f8>
  40678c:	jne    408327 <main@@Base+0x39e7>
  406792:	cmp    BYTE PTR [rsi+0x2],0x20
  406796:	jle    408327 <main@@Base+0x39e7>
  40679c:	add    rsi,0x2
  4067a0:	mov    r12,rsi
  4067a3:	cmp    r14,r12
  4067a6:	jne    408341 <main@@Base+0x3a01>
  4067ac:	jmp    408b4d <main@@Base+0x420d>
  4067b1:	mov    ecx,0x4
  4067b6:	mov    rdi,r15
  4067b9:	mov    rdx,r13
  4067bc:	call   41f940 <flatcc_json_parser_set_error@@Base>
  4067c1:	jmp    408335 <main@@Base+0x39f5>
  4067c6:	mov    rdi,QWORD PTR [rsp+0x10]
  4067cb:	mov    rsi,r14
  4067ce:	mov    rdx,r13
  4067d1:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  4067d6:	mov    r14,rax
  4067d9:	cmp    r14,r13
  4067dc:	je     406829 <main@@Base+0x1ee9>
  4067de:	cmp    BYTE PTR [r14],0x3a
  4067e2:	jne    406829 <main@@Base+0x1ee9>
  4067e4:	lea    r12,[r14+0x1]
  4067e8:	mov    rax,r13
  4067eb:	sub    rax,r12
  4067ee:	cmp    rax,0x2
  4067f2:	jl     408474 <main@@Base+0x3b34>
  4067f8:	cmp    BYTE PTR [r12],0x20
  4067fd:	jg     408487 <main@@Base+0x3b47>
  406803:	jne    408474 <main@@Base+0x3b34>
  406809:	cmp    BYTE PTR [r14+0x2],0x20
  40680e:	jle    408474 <main@@Base+0x3b34>
  406814:	add    r14,0x2
  406818:	mov    r12,r14
  40681b:	cmp    r15,r12
  40681e:	jne    408490 <main@@Base+0x3b50>
  406824:	jmp    40c5d3 <main@@Base+0x7c93>
  406829:	mov    ecx,0x4
  40682e:	mov    rdi,QWORD PTR [rsp+0x10]
  406833:	mov    rsi,r14
  406836:	mov    rdx,r13
  406839:	call   41f940 <flatcc_json_parser_set_error@@Base>
  40683e:	jmp    408484 <main@@Base+0x3b44>
  406843:	mov    rdi,r15
  406846:	mov    rsi,rbx
  406849:	mov    rdx,QWORD PTR [rsp+0x8]
  40684e:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  406853:	mov    rbx,rax
  406856:	cmp    r14,rbx
  406859:	je     407fbf <main@@Base+0x367f>
  40685f:	mov    DWORD PTR [rsp+0x30],0x0
  406867:	mov    rdi,r15
  40686a:	mov    rsi,rbx
  40686d:	mov    rdx,QWORD PTR [rsp+0x8]
  406872:	lea    rcx,[rsp+0x30]
  406877:	call   4214c0 <flatcc_json_parser_float@@Base>
  40687c:	mov    r14,rax
  40687f:	cmp    rbx,rax
  406882:	mov    rbp,QWORD PTR [rsp+0x20]
  406887:	jne    4068c7 <main@@Base+0x1f87>
  406889:	mov    rdi,r15
  40688c:	mov    rsi,rbx
  40688f:	mov    r12,QWORD PTR [rsp+0x8]
  406894:	mov    rdx,r12
  406897:	lea    rcx,[rip+0x24982]        # 42b220 <filename@@Base+0x150>
  40689e:	lea    r8,[rsp+0x30]
  4068a3:	call   414220 <main@@Base+0xf8e0>
  4068a8:	mov    r14,rax
  4068ab:	cmp    rax,rbx
  4068ae:	je     40eaa5 <main@@Base+0xa165>
  4068b4:	cmp    r14,r12
  4068b7:	movabs r12,0x7465737400000000
  4068c1:	je     40eaa5 <main@@Base+0xa165>
  4068c7:	vmovss xmm0,DWORD PTR [rsp+0x30]
  4068cd:	vucomiss xmm0,DWORD PTR [rip+0x1d73f]        # 424014 <_IO_stdin_used@@Base+0x14>
  4068d5:	mov    r13,QWORD PTR [rsp+0x8]
  4068da:	jne    4068e9 <main@@Base+0x1fa9>
  4068dc:	jp     4068e9 <main@@Base+0x1fa9>
  4068de:	test   BYTE PTR [r15+0x10],0x2
  4068e3:	je     40c600 <main@@Base+0x7cc0>
  4068e9:	mov    rdi,QWORD PTR [r15]
  4068ec:	mov    esi,0x1b
  4068f1:	jmp    40a45a <main@@Base+0x5b1a>
  4068f6:	mov    rdi,r14
  4068f9:	mov    rsi,r12
  4068fc:	mov    rdx,QWORD PTR [rsp+0x8]
  406901:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  406906:	mov    r12,rax
  406909:	mov    r14,r15
  40690c:	cmp    r14,r12
  40690f:	je     407f84 <main@@Base+0x3644>
  406915:	mov    r15,QWORD PTR [rsp+0x10]
  40691a:	mov    rdi,QWORD PTR [r15]
  40691d:	mov    esi,0x4
  406922:	mov    edx,0x2
  406927:	mov    ecx,0x3fffffff
  40692c:	call   41c090 <flatcc_builder_start_vector@@Base>
  406931:	test   eax,eax
  406933:	jne    40eab2 <main@@Base+0xa172>
  406939:	mov    r13,QWORD PTR [rsp+0x8]
  40693e:	cmp    r12,r13
  406941:	je     406978 <main@@Base+0x2038>
  406943:	cmp    BYTE PTR [r12],0x5b
  406948:	jne    406978 <main@@Base+0x2038>
  40694a:	lea    rax,[r12+0x1]
  40694f:	mov    rcx,r13
  406952:	sub    rcx,rax
  406955:	cmp    rcx,0x2
  406959:	mov    rbp,QWORD PTR [rsp+0x20]
  40695e:	jl     4069be <main@@Base+0x207e>
  406960:	cmp    BYTE PTR [rax],0x20
  406963:	jg     4069cc <main@@Base+0x208c>
  406965:	jne    4069be <main@@Base+0x207e>
  406967:	cmp    BYTE PTR [r12+0x2],0x20
  40696d:	jle    4069be <main@@Base+0x207e>
  40696f:	add    r12,0x2
  406973:	mov    rax,r12
  406976:	jmp    4069cc <main@@Base+0x208c>
  406978:	mov    ecx,0x16
  40697d:	mov    rdi,r15
  406980:	mov    rsi,r12
  406983:	mov    rdx,r13
  406986:	call   41f940 <flatcc_json_parser_set_error@@Base>
  40698b:	mov    r14,rax
  40698e:	mov    rbp,QWORD PTR [rsp+0x20]
  406993:	movabs r12,0x7465737400000000
  40699d:	mov    rdi,QWORD PTR [r15]
  4069a0:	call   41d220 <flatcc_builder_end_vector@@Base>
  4069a5:	mov    DWORD PTR [rsp+0x3c],eax
  4069a9:	test   eax,eax
  4069ab:	je     40ead3 <main@@Base+0xa193>
  4069b1:	mov    rdi,QWORD PTR [r15]
  4069b4:	mov    esi,0x9
  4069b9:	jmp    4080eb <main@@Base+0x37ab>
  4069be:	mov    rdi,r15
  4069c1:	mov    rsi,rax
  4069c4:	mov    rdx,r13
  4069c7:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  4069cc:	mov    r12,r13
  4069cf:	cmp    rax,r13
  4069d2:	je     406a19 <main@@Base+0x20d9>
  4069d4:	cmp    BYTE PTR [rax],0x5d
  4069d7:	jne    406a16 <main@@Base+0x20d6>
  4069d9:	lea    r14,[rax+0x1]
  4069dd:	mov    rcx,r13
  4069e0:	sub    rcx,r14
  4069e3:	cmp    rcx,0x2
  4069e7:	movabs r12,0x7465737400000000
  4069f1:	jl     40779a <main@@Base+0x2e5a>
  4069f7:	cmp    BYTE PTR [r14],0x20
  4069fb:	jg     40699d <main@@Base+0x205d>
  4069fd:	jne    40779a <main@@Base+0x2e5a>
  406a03:	cmp    BYTE PTR [rax+0x2],0x20
  406a07:	jle    40779a <main@@Base+0x2e5a>
  406a0d:	add    rax,0x2
  406a11:	mov    r14,rax
  406a14:	jmp    40699d <main@@Base+0x205d>
  406a16:	mov    r12,rax
  406a19:	mov    rdi,QWORD PTR [r15]
  406a1c:	mov    esi,0x1
  406a21:	call   41b720 <flatcc_builder_extend_vector@@Base>
  406a26:	test   rax,rax
  406a29:	je     4049f1 <main@@Base+0xb1>
  406a2f:	mov    rdi,r15
  406a32:	mov    rsi,r12
  406a35:	mov    rdx,r13
  406a38:	mov    rcx,rax
  406a3b:	call   410640 <main@@Base+0xbd00>
  406a40:	mov    rcx,r13
  406a43:	sub    rcx,rax
  406a46:	cmp    rcx,0x2
  406a4a:	mov    rbp,QWORD PTR [rsp+0x20]
  406a4f:	movabs r12,0x7465737400000000
  406a59:	jl     406a76 <main@@Base+0x2136>
  406a5b:	cmp    BYTE PTR [rax],0x20
  406a5e:	jg     406a84 <main@@Base+0x2144>
  406a60:	jne    406a76 <main@@Base+0x2136>
  406a62:	cmp    BYTE PTR [rax+0x1],0x20
  406a66:	jle    406a76 <main@@Base+0x2136>
  406a68:	add    rax,0x1
  406a6c:	cmp    rax,r13
  406a6f:	jne    406a8d <main@@Base+0x214d>
  406a71:	jmp    407769 <main@@Base+0x2e29>
  406a76:	mov    rdi,r15
  406a79:	mov    rsi,rax
  406a7c:	mov    rdx,r13
  406a7f:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  406a84:	cmp    rax,r13
  406a87:	je     407769 <main@@Base+0x2e29>
  406a8d:	movzx  ecx,BYTE PTR [rax]
  406a90:	cmp    cl,0x2c
  406a93:	jne    407771 <main@@Base+0x2e31>
  406a99:	lea    r12,[rax+0x1]
  406a9d:	mov    rcx,r13
  406aa0:	sub    rcx,r12
  406aa3:	cmp    rcx,0x2
  406aa7:	jl     406abe <main@@Base+0x217e>
  406aa9:	cmp    BYTE PTR [r12],0x20
  406aae:	jg     406acf <main@@Base+0x218f>
  406ab0:	jne    406abe <main@@Base+0x217e>
  406ab2:	cmp    BYTE PTR [rax+0x2],0x20
  406ab6:	jle    406abe <main@@Base+0x217e>
  406ab8:	add    rax,0x2
  406abc:	jmp    406acc <main@@Base+0x218c>
  406abe:	mov    rdi,r15
  406ac1:	mov    rsi,r12
  406ac4:	mov    rdx,r13
  406ac7:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  406acc:	mov    r12,rax
  406acf:	cmp    r12,r13
  406ad2:	je     407937 <main@@Base+0x2ff7>
  406ad8:	cmp    BYTE PTR [r12],0x5d
  406add:	jne    406a19 <main@@Base+0x20d9>
  406ae3:	lea    r14,[r12+0x1]
  406ae8:	mov    rax,r13
  406aeb:	sub    rax,r14
  406aee:	cmp    rax,0x2
  406af2:	jl     408542 <main@@Base+0x3c02>
  406af8:	cmp    BYTE PTR [r14],0x20
  406afc:	jg     406993 <main@@Base+0x2053>
  406b02:	jne    408542 <main@@Base+0x3c02>
  406b08:	cmp    BYTE PTR [r12+0x2],0x20
  406b0e:	jle    408542 <main@@Base+0x3c02>
  406b14:	add    r12,0x2
  406b18:	mov    r14,r12
  406b1b:	jmp    406993 <main@@Base+0x2053>
  406b20:	mov    r12,r14
  406b23:	cmp    al,0x22
  406b25:	jne    4089a7 <main@@Base+0x4067>
  406b2b:	lea    rsi,[r14+0x3]
  406b2f:	mov    rbx,QWORD PTR [rsp+0x8]
  406b34:	mov    rax,rbx
  406b37:	sub    rax,rsi
  406b3a:	cmp    rax,0x2
  406b3e:	jl     406c54 <main@@Base+0x2314>
  406b44:	cmp    BYTE PTR [rsi],0x20
  406b47:	jg     406c62 <main@@Base+0x2322>
  406b4d:	jne    406c54 <main@@Base+0x2314>
  406b53:	cmp    BYTE PTR [rsi+0x1],0x20
  406b57:	jle    406c54 <main@@Base+0x2314>
  406b5d:	add    rsi,0x1
  406b61:	cmp    rsi,rbx
  406b64:	jne    406c6b <main@@Base+0x232b>
  406b6a:	jmp    406d73 <main@@Base+0x2433>
  406b6f:	mov    r12,r14
  406b72:	cmp    al,0x22
  406b74:	jne    408af3 <main@@Base+0x41b3>
  406b7a:	lea    rsi,[r14+0x4]
  406b7e:	mov    rax,r13
  406b81:	sub    rax,rsi
  406b84:	cmp    rax,0x2
  406b88:	jl     406cb5 <main@@Base+0x2375>
  406b8e:	cmp    BYTE PTR [rsi],0x20
  406b91:	jg     406cc3 <main@@Base+0x2383>
  406b97:	jne    406cb5 <main@@Base+0x2375>
  406b9d:	cmp    BYTE PTR [rsi+0x1],0x20
  406ba1:	jle    406cb5 <main@@Base+0x2375>
  406ba7:	add    rsi,0x1
  406bab:	cmp    rsi,r13
  406bae:	jne    406ccc <main@@Base+0x238c>
  406bb4:	jmp    406d88 <main@@Base+0x2448>
  406bb9:	mov    rbx,r14
  406bbc:	cmp    al,0x22
  406bbe:	jne    4097c2 <main@@Base+0x4e82>
  406bc4:	lea    rsi,[r14+0x7]
  406bc8:	mov    rbx,QWORD PTR [rsp+0x8]
  406bcd:	mov    rax,rbx
  406bd0:	sub    rax,rsi
  406bd3:	cmp    rax,0x2
  406bd7:	jl     406d19 <main@@Base+0x23d9>
  406bdd:	cmp    BYTE PTR [rsi],0x20
  406be0:	jg     406d27 <main@@Base+0x23e7>
  406be6:	jne    406d19 <main@@Base+0x23d9>
  406bec:	cmp    BYTE PTR [rsi+0x1],0x20
  406bf0:	jle    406d19 <main@@Base+0x23d9>
  406bf6:	add    rsi,0x1
  406bfa:	cmp    rsi,rbx
  406bfd:	jne    406d2c <main@@Base+0x23ec>
  406c03:	jmp    406d9d <main@@Base+0x245d>
  406c08:	cmp    al,0x22
  406c0a:	jne    406e11 <main@@Base+0x24d1>
  406c10:	lea    rsi,[r14+0x11]
  406c14:	mov    rbx,QWORD PTR [rsp+0x8]
  406c19:	mov    rax,rbx
  406c1c:	sub    rax,rsi
  406c1f:	cmp    rax,0x2
  406c23:	jl     406db2 <main@@Base+0x2472>
  406c29:	cmp    BYTE PTR [rsi],0x20
  406c2c:	jg     406dc2 <main@@Base+0x2482>
  406c32:	jne    406db2 <main@@Base+0x2472>
  406c38:	cmp    BYTE PTR [rsi+0x1],0x20
  406c3c:	jle    406db2 <main@@Base+0x2472>
  406c42:	add    rsi,0x1
  406c46:	cmp    rsi,rbx
  406c49:	jne    406dcb <main@@Base+0x248b>
  406c4f:	jmp    406f0b <main@@Base+0x25cb>
  406c54:	mov    rdi,r15
  406c57:	mov    rdx,rbx
  406c5a:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  406c5f:	mov    rsi,rax
  406c62:	cmp    rsi,rbx
  406c65:	je     406d73 <main@@Base+0x2433>
  406c6b:	cmp    BYTE PTR [rsi],0x3a
  406c6e:	jne    406d73 <main@@Base+0x2433>
  406c74:	lea    r12,[rsi+0x1]
  406c78:	sub    rbx,r12
  406c7b:	cmp    rbx,0x2
  406c7f:	jl     408994 <main@@Base+0x4054>
  406c85:	cmp    BYTE PTR [r12],0x20
  406c8a:	jg     4089a7 <main@@Base+0x4067>
  406c90:	jne    408994 <main@@Base+0x4054>
  406c96:	cmp    BYTE PTR [rsi+0x2],0x20
  406c9a:	jle    408994 <main@@Base+0x4054>
  406ca0:	add    rsi,0x2
  406ca4:	mov    r12,rsi
  406ca7:	cmp    r14,r12
  406caa:	jne    4089b0 <main@@Base+0x4070>
  406cb0:	jmp    40a2c3 <main@@Base+0x5983>
  406cb5:	mov    rdi,r15
  406cb8:	mov    rdx,r13
  406cbb:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  406cc0:	mov    rsi,rax
  406cc3:	cmp    rsi,r13
  406cc6:	je     406d88 <main@@Base+0x2448>
  406ccc:	cmp    BYTE PTR [rsi],0x3a
  406ccf:	jne    406d88 <main@@Base+0x2448>
  406cd5:	lea    r12,[rsi+0x1]
  406cd9:	mov    rax,r13
  406cdc:	sub    rax,r12
  406cdf:	cmp    rax,0x2
  406ce3:	jl     408ae2 <main@@Base+0x41a2>
  406ce9:	cmp    BYTE PTR [r12],0x20
  406cee:	jg     408af3 <main@@Base+0x41b3>
  406cf4:	jne    408ae2 <main@@Base+0x41a2>
  406cfa:	cmp    BYTE PTR [rsi+0x2],0x20
  406cfe:	jle    408ae2 <main@@Base+0x41a2>
  406d04:	add    rsi,0x2
  406d08:	mov    r12,rsi
  406d0b:	cmp    r14,r12
  406d0e:	jne    408af8 <main@@Base+0x41b8>
  406d14:	jmp    408b4d <main@@Base+0x420d>
  406d19:	mov    rdi,r15
  406d1c:	mov    rdx,rbx
  406d1f:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  406d24:	mov    rsi,rax
  406d27:	cmp    rsi,rbx
  406d2a:	je     406d9d <main@@Base+0x245d>
  406d2c:	cmp    BYTE PTR [rsi],0x3a
  406d2f:	jne    406d9d <main@@Base+0x245d>
  406d31:	mov    rax,rbx
  406d34:	lea    rbx,[rsi+0x1]
  406d38:	sub    rax,rbx
  406d3b:	cmp    rax,0x2
  406d3f:	jl     4097af <main@@Base+0x4e6f>
  406d45:	cmp    BYTE PTR [rbx],0x20
  406d48:	jg     4097c2 <main@@Base+0x4e82>
  406d4e:	jne    4097af <main@@Base+0x4e6f>
  406d54:	cmp    BYTE PTR [rsi+0x2],0x20
  406d58:	jle    4097af <main@@Base+0x4e6f>
  406d5e:	add    rsi,0x2
  406d62:	mov    rbx,rsi
  406d65:	cmp    r14,rbx
  406d68:	jne    4097cb <main@@Base+0x4e8b>
  406d6e:	jmp    407fbf <main@@Base+0x367f>
  406d73:	mov    ecx,0x4
  406d78:	mov    rdi,r15
  406d7b:	mov    rdx,rbx
  406d7e:	call   41f940 <flatcc_json_parser_set_error@@Base>
  406d83:	jmp    4089a4 <main@@Base+0x4064>
  406d88:	mov    ecx,0x4
  406d8d:	mov    rdi,r15
  406d90:	mov    rdx,r13
  406d93:	call   41f940 <flatcc_json_parser_set_error@@Base>
  406d98:	jmp    408af0 <main@@Base+0x41b0>
  406d9d:	mov    ecx,0x4
  406da2:	mov    rdi,r15
  406da5:	mov    rdx,rbx
  406da8:	call   41f940 <flatcc_json_parser_set_error@@Base>
  406dad:	jmp    4097bf <main@@Base+0x4e7f>
  406db2:	mov    rdi,QWORD PTR [rsp+0x10]
  406db7:	mov    rdx,rbx
  406dba:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  406dbf:	mov    rsi,rax
  406dc2:	cmp    rsi,rbx
  406dc5:	je     406f0b <main@@Base+0x25cb>
  406dcb:	cmp    BYTE PTR [rsi],0x3a
  406dce:	jne    406f0b <main@@Base+0x25cb>
  406dd4:	mov    rax,rbx
  406dd7:	lea    rbx,[rsi+0x1]
  406ddb:	sub    rax,rbx
  406dde:	cmp    rax,0x2
  406de2:	jl     4098fa <main@@Base+0x4fba>
  406de8:	cmp    BYTE PTR [rbx],0x20
  406deb:	jg     40990f <main@@Base+0x4fcf>
  406df1:	jne    4098fa <main@@Base+0x4fba>
  406df7:	cmp    BYTE PTR [rsi+0x2],0x20
  406dfb:	jle    4098fa <main@@Base+0x4fba>
  406e01:	add    rsi,0x2
  406e05:	mov    rbx,rsi
  406e08:	cmp    r15,rbx
  406e0b:	jne    409918 <main@@Base+0x4fd8>
  406e11:	lea    r15,[r14+0x10]
  406e15:	mov    r13,QWORD PTR [rsp+0x8]
  406e1a:	mov    rax,r13
  406e1d:	sub    rax,r15
  406e20:	cmp    rax,0x8
  406e24:	jb     406e30 <main@@Base+0x24f0>
  406e26:	movbe  rcx,QWORD PTR [r15]
  406e2b:	jmp    406ec1 <main@@Base+0x2581>
  406e30:	mov    ecx,eax
  406e32:	and    cl,0xf
  406e35:	add    cl,0xff
  406e38:	cmp    cl,0x7
  406e3b:	ja     409b83 <main@@Base+0x5243>
  406e41:	movzx  ecx,cl
  406e44:	lea    rdx,[rip+0x1d305]        # 424150 <_IO_stdin_used@@Base+0x150>
  406e4b:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  406e4f:	add    rcx,rdx
  406e52:	xor    r8d,r8d
  406e55:	xor    r9d,r9d
  406e58:	xor    edx,edx
  406e5a:	xor    esi,esi
  406e5c:	xor    ebx,ebx
  406e5e:	xor    edi,edi
  406e60:	xor    ebp,ebp
  406e62:	jmp    rcx
  406e64:	movsx  r8,BYTE PTR [r14+0x17]
  406e69:	movsx  r9,BYTE PTR [r14+0x16]
  406e6e:	shl    r9,0x8
  406e72:	or     r9,r8
  406e75:	movsx  rdx,BYTE PTR [r14+0x15]
  406e7a:	shl    rdx,0x10
  406e7e:	or     rdx,r9
  406e81:	movsx  rsi,BYTE PTR [r14+0x14]
  406e86:	shl    rsi,0x18
  406e8a:	or     rsi,rdx
  406e8d:	movsx  rbx,BYTE PTR [r14+0x13]
  406e92:	shl    rbx,0x20
  406e96:	or     rbx,rsi
  406e99:	movsx  rdi,BYTE PTR [r14+0x12]
  406e9e:	shl    rdi,0x28
  406ea2:	or     rdi,rbx
  406ea5:	movsx  rbp,BYTE PTR [r14+0x11]
  406eaa:	shl    rbp,0x30
  406eae:	or     rbp,rdi
  406eb1:	movzx  ecx,BYTE PTR [r15]
  406eb5:	shl    rcx,0x38
  406eb9:	or     rcx,rbp
  406ebc:	mov    r13,QWORD PTR [rsp+0x8]
  406ec1:	shr    rcx,0x38
  406ec5:	cmp    rcx,0x61
  406ec9:	jne    409b83 <main@@Base+0x5243>
  406ecf:	cmp    rax,0x2
  406ed3:	jl     40c8bd <main@@Base+0x7f7d>
  406ed9:	mov    rax,QWORD PTR [rsp+0x28]
  406ede:	cmp    DWORD PTR [rax],0x0
  406ee1:	mov    al,BYTE PTR [r14+0x11]
  406ee5:	je     408426 <main@@Base+0x3ae6>
  406eeb:	cmp    al,0x21
  406eed:	jl     406ef7 <main@@Base+0x25b7>
  406eef:	cmp    al,0x3a
  406ef1:	jne    40c8bd <main@@Base+0x7f7d>
  406ef7:	add    r14,0x11
  406efb:	mov    rax,QWORD PTR [rsp+0x28]
  406f00:	mov    DWORD PTR [rax],0x0
  406f06:	jmp    408432 <main@@Base+0x3af2>
  406f0b:	mov    ecx,0x4
  406f10:	mov    rdi,QWORD PTR [rsp+0x10]
  406f15:	mov    rdx,rbx
  406f18:	call   41f940 <flatcc_json_parser_set_error@@Base>
  406f1d:	jmp    40990c <main@@Base+0x4fcc>
  406f22:	mov    rdi,r15
  406f25:	mov    rsi,rax
  406f28:	mov    rdx,r13
  406f2b:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  406f30:	cmp    r14,rax
  406f33:	je     404fc5 <main@@Base+0x685>
  406f39:	mov    rdi,r15
  406f3c:	mov    rsi,rax
  406f3f:	mov    rdx,r13
  406f42:	lea    rcx,[rsp+0x3c]
  406f47:	call   4049c0 <main@@Base+0x80>
  406f4c:	mov    r14,rax
  406f4f:	cmp    DWORD PTR [rsp+0x3c],0x0
  406f54:	je     40ead3 <main@@Base+0xa193>
  406f5a:	mov    rdi,QWORD PTR [r15]
  406f5d:	mov    esi,0xc
  406f62:	jmp    407427 <main@@Base+0x2ae7>
  406f67:	mov    rdi,r15
  406f6a:	mov    rsi,r12
  406f6d:	mov    rdx,QWORD PTR [rsp+0x8]
  406f72:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  406f77:	mov    r12,rax
  406f7a:	cmp    r14,r12
  406f7d:	je     40a2c3 <main@@Base+0x5983>
  406f83:	mov    QWORD PTR [rsp+0x30],0x0
  406f8c:	mov    DWORD PTR [rsp+0x40],0x0
  406f94:	mov    BYTE PTR [rsp+0x1c],0x0
  406f99:	mov    rdx,QWORD PTR [rsp+0x8]
  406f9e:	cmp    r12,rdx
  406fa1:	je     406fe1 <main@@Base+0x26a1>
  406fa3:	mov    rdi,r15
  406fa6:	mov    rsi,r12
  406fa9:	lea    rcx,[rsp+0x40]
  406fae:	lea    r8,[rsp+0x30]
  406fb3:	call   4215e0 <flatcc_json_parser_integer@@Base>
  406fb8:	cmp    rax,r12
  406fbb:	mov    rbp,QWORD PTR [rsp+0x20]
  406fc0:	je     406ff2 <main@@Base+0x26b2>
  406fc2:	mov    r14,rax
  406fc5:	mov    rbx,QWORD PTR [rsp+0x30]
  406fca:	cmp    DWORD PTR [rsp+0x40],0x0
  406fcf:	je     406ffe <main@@Base+0x26be>
  406fd1:	cmp    rbx,0x81
  406fd8:	jb     407028 <main@@Base+0x26e8>
  406fda:	mov    ecx,0x8
  406fdf:	jmp    40700c <main@@Base+0x26cc>
  406fe1:	xor    ebx,ebx
  406fe3:	mov    r14,rdx
  406fe6:	mov    rbp,QWORD PTR [rsp+0x20]
  406feb:	cmp    r12,r14
  406fee:	jne    40706c <main@@Base+0x272c>
  406ff0:	jmp    407034 <main@@Base+0x26f4>
  406ff2:	xor    ebx,ebx
  406ff4:	mov    r14,r12
  406ff7:	cmp    r12,r14
  406ffa:	jne    40706c <main@@Base+0x272c>
  406ffc:	jmp    407034 <main@@Base+0x26f4>
  406ffe:	cmp    rbx,0x80
  407005:	jb     40702b <main@@Base+0x26eb>
  407007:	mov    ecx,0x7
  40700c:	mov    rdi,r15
  40700f:	mov    rsi,r14
  407012:	mov    rdx,QWORD PTR [rsp+0x8]
  407017:	call   41f940 <flatcc_json_parser_set_error@@Base>
  40701c:	mov    r14,rax
  40701f:	xor    ebx,ebx
  407021:	cmp    r12,r14
  407024:	jne    40706c <main@@Base+0x272c>
  407026:	jmp    407034 <main@@Base+0x26f4>
  407028:	neg    rbx
  40702b:	mov    BYTE PTR [rsp+0x1c],bl
  40702f:	cmp    r12,r14
  407032:	jne    40706c <main@@Base+0x272c>
  407034:	mov    rdi,r15
  407037:	mov    rsi,r12
  40703a:	mov    rbx,QWORD PTR [rsp+0x8]
  40703f:	mov    rdx,rbx
  407042:	lea    rcx,[rip+0x24097]        # 42b0e0 <filename@@Base+0x10>
  407049:	lea    r8,[rsp+0x1c]
  40704e:	call   410010 <main@@Base+0xb6d0>
  407053:	mov    r14,rax
  407056:	cmp    rax,r12
  407059:	je     40eaa5 <main@@Base+0xa165>
  40705f:	cmp    r14,rbx
  407062:	je     40eaa5 <main@@Base+0xa165>
  407068:	mov    bl,BYTE PTR [rsp+0x1c]
  40706c:	cmp    bl,0x8
  40706f:	movabs r12,0x7465737400000000
  407079:	jne    407086 <main@@Base+0x2746>
  40707b:	test   BYTE PTR [r15+0x10],0x2
  407080:	je     409a41 <main@@Base+0x5101>
  407086:	mov    rdi,QWORD PTR [r15]
  407089:	mov    esi,0x6
  40708e:	mov    edx,0x1
  407093:	mov    ecx,0x1
  407098:	call   41d880 <flatcc_builder_table_add@@Base>
  40709d:	test   rax,rax
  4070a0:	je     40eaa5 <main@@Base+0xa165>
  4070a6:	mov    BYTE PTR [rax],bl
  4070a8:	jmp    409a41 <main@@Base+0x5101>
  4070ad:	jne    4070be <main@@Base+0x277e>
  4070af:	cmp    BYTE PTR [rsi+0x1],0x20
  4070b3:	jle    4070be <main@@Base+0x277e>
  4070b5:	add    rsi,0x1
  4070b9:	jmp    406338 <main@@Base+0x19f8>
  4070be:	mov    rdi,QWORD PTR [rsp+0x10]
  4070c3:	mov    rbp,QWORD PTR [rsp+0x8]
  4070c8:	mov    rdx,rbp
  4070cb:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  4070d0:	mov    rsi,rax
  4070d3:	cmp    rsi,rbp
  4070d6:	je     40711e <main@@Base+0x27de>
  4070d8:	cmp    BYTE PTR [rsi],0x3a
  4070db:	jne    40711e <main@@Base+0x27de>
  4070dd:	lea    rax,[rsi+0x1]
  4070e1:	mov    rcx,QWORD PTR [rsp+0x8]
  4070e6:	sub    rcx,rax
  4070e9:	cmp    rcx,0x2
  4070ed:	jl     407711 <main@@Base+0x2dd1>
  4070f3:	cmp    BYTE PTR [rax],0x20
  4070f6:	jg     407723 <main@@Base+0x2de3>
  4070fc:	jne    407711 <main@@Base+0x2dd1>
  407102:	cmp    BYTE PTR [rsi+0x2],0x20
  407106:	jle    407711 <main@@Base+0x2dd1>
  40710c:	add    rsi,0x2
  407110:	mov    rax,rsi
  407113:	cmp    r14,rax
  407116:	jne    40772c <main@@Base+0x2dec>
  40711c:	jmp    40713b <main@@Base+0x27fb>
  40711e:	mov    ecx,0x4
  407123:	mov    rdi,QWORD PTR [rsp+0x10]
  407128:	mov    rdx,QWORD PTR [rsp+0x8]
  40712d:	call   41f940 <flatcc_json_parser_set_error@@Base>
  407132:	cmp    r14,rax
  407135:	jne    40772c <main@@Base+0x2dec>
  40713b:	movabs rax,0x7465737400000000
  407145:	lea    rax,[rax+0x35000000]
  40714c:	cmp    r12,rax
  40714f:	jne    407f84 <main@@Base+0x3644>
  407155:	mov    r12,r14
  407158:	cmp    r15,0x6
  40715c:	jl     407f01 <main@@Base+0x35c1>
  407162:	mov    rax,QWORD PTR [rsp+0x28]
  407167:	cmp    DWORD PTR [rax],0x0
  40716a:	mov    al,BYTE PTR [r14+0x5]
  40716e:	je     407193 <main@@Base+0x2853>
  407170:	cmp    al,0x21
  407172:	jl     40717f <main@@Base+0x283f>
  407174:	mov    r12,r14
  407177:	cmp    al,0x3a
  407179:	jne    407f01 <main@@Base+0x35c1>
  40717f:	mov    r15,r14
  407182:	lea    rsi,[r14+0x5]
  407186:	mov    rax,QWORD PTR [rsp+0x28]
  40718b:	mov    DWORD PTR [rax],0x0
  407191:	jmp    4071a5 <main@@Base+0x2865>
  407193:	mov    r12,r14
  407196:	cmp    al,0x22
  407198:	jne    407f01 <main@@Base+0x35c1>
  40719e:	mov    r15,r14
  4071a1:	lea    rsi,[r14+0x6]
  4071a5:	mov    rax,QWORD PTR [rsp+0x8]
  4071aa:	sub    rax,rsi
  4071ad:	cmp    rax,0x2
  4071b1:	mov    r14,QWORD PTR [rsp+0x10]
  4071b6:	jl     4071d5 <main@@Base+0x2895>
  4071b8:	cmp    BYTE PTR [rsi],0x20
  4071bb:	jg     4071c9 <main@@Base+0x2889>
  4071bd:	jne    4071d5 <main@@Base+0x2895>
  4071bf:	cmp    BYTE PTR [rsi+0x1],0x20
  4071c3:	jle    4071d5 <main@@Base+0x2895>
  4071c5:	add    rsi,0x1
  4071c9:	mov    rbp,QWORD PTR [rsp+0x8]
  4071ce:	cmp    rsi,rbp
  4071d1:	jne    4071ed <main@@Base+0x28ad>
  4071d3:	jmp    40722f <main@@Base+0x28ef>
  4071d5:	mov    rdi,r14
  4071d8:	mov    rbp,QWORD PTR [rsp+0x8]
  4071dd:	mov    rdx,rbp
  4071e0:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  4071e5:	mov    rsi,rax
  4071e8:	cmp    rsi,rbp
  4071eb:	je     40722f <main@@Base+0x28ef>
  4071ed:	cmp    BYTE PTR [rsi],0x3a
  4071f0:	jne    40722f <main@@Base+0x28ef>
  4071f2:	lea    r12,[rsi+0x1]
  4071f6:	mov    rax,QWORD PTR [rsp+0x8]
  4071fb:	sub    rax,r12
  4071fe:	cmp    rax,0x2
  407202:	jl     407eeb <main@@Base+0x35ab>
  407208:	cmp    BYTE PTR [r12],0x20
  40720d:	jg     407efe <main@@Base+0x35be>
  407213:	jne    407eeb <main@@Base+0x35ab>
  407219:	cmp    BYTE PTR [rsi+0x2],0x20
  40721d:	jle    407eeb <main@@Base+0x35ab>
  407223:	add    rsi,0x2
  407227:	mov    r12,rsi
  40722a:	jmp    407efe <main@@Base+0x35be>
  40722f:	mov    ecx,0x4
  407234:	mov    rdi,r14
  407237:	mov    rdx,QWORD PTR [rsp+0x8]
  40723c:	call   41f940 <flatcc_json_parser_set_error@@Base>
  407241:	jmp    407efb <main@@Base+0x35bb>
  407246:	cmp    al,0x22
  407248:	jne    40c5d3 <main@@Base+0x7c93>
  40724e:	add    r14,0xb
  407252:	mov    rax,r13
  407255:	sub    rax,r14
  407258:	cmp    rax,0x2
  40725c:	jl     40736a <main@@Base+0x2a2a>
  407262:	cmp    BYTE PTR [r14],0x20
  407266:	jg     40737d <main@@Base+0x2a3d>
  40726c:	jne    40736a <main@@Base+0x2a2a>
  407272:	cmp    BYTE PTR [r14+0x1],0x20
  407277:	jle    40736a <main@@Base+0x2a2a>
  40727d:	add    r14,0x1
  407281:	cmp    r14,r13
  407284:	jne    407382 <main@@Base+0x2a42>
  40728a:	jmp    4073cd <main@@Base+0x2a8d>
  40728f:	cmp    al,0x22
  407291:	jne    40c5d3 <main@@Base+0x7c93>
  407297:	add    r14,0x13
  40729b:	mov    rax,r13
  40729e:	sub    rax,r14
  4072a1:	cmp    rax,0x2
  4072a5:	jl     4077b0 <main@@Base+0x2e70>
  4072ab:	cmp    BYTE PTR [r14],0x20
  4072af:	jg     4077c3 <main@@Base+0x2e83>
  4072b5:	jne    4077b0 <main@@Base+0x2e70>
  4072bb:	cmp    BYTE PTR [r14+0x1],0x20
  4072c0:	jle    4077b0 <main@@Base+0x2e70>
  4072c6:	add    r14,0x1
  4072ca:	cmp    r14,r13
  4072cd:	jne    4077cc <main@@Base+0x2e8c>
  4072d3:	jmp    4078e9 <main@@Base+0x2fa9>
  4072d8:	cmp    al,0x22
  4072da:	jne    40c5d3 <main@@Base+0x7c93>
  4072e0:	add    r14,0x18
  4072e4:	mov    rax,r13
  4072e7:	sub    rax,r14
  4072ea:	cmp    rax,0x2
  4072ee:	jl     40781b <main@@Base+0x2edb>
  4072f4:	cmp    BYTE PTR [r14],0x20
  4072f8:	jg     40782e <main@@Base+0x2eee>
  4072fe:	jne    40781b <main@@Base+0x2edb>
  407304:	cmp    BYTE PTR [r14+0x1],0x20
  407309:	jle    40781b <main@@Base+0x2edb>
  40730f:	add    r14,0x1
  407313:	cmp    r14,r13
  407316:	jne    407837 <main@@Base+0x2ef7>
  40731c:	jmp    407903 <main@@Base+0x2fc3>
  407321:	cmp    al,0x22
  407323:	jne    40c5d3 <main@@Base+0x7c93>
  407329:	add    r14,0x12
  40732d:	mov    rax,r13
  407330:	sub    rax,r14
  407333:	cmp    rax,0x2
  407337:	jl     407886 <main@@Base+0x2f46>
  40733d:	cmp    BYTE PTR [r14],0x20
  407341:	jg     407899 <main@@Base+0x2f59>
  407347:	jne    407886 <main@@Base+0x2f46>
  40734d:	cmp    BYTE PTR [r14+0x1],0x20
  407352:	jle    407886 <main@@Base+0x2f46>
  407358:	add    r14,0x1
  40735c:	cmp    r14,r13
  40735f:	jne    40789e <main@@Base+0x2f5e>
  407365:	jmp    40791d <main@@Base+0x2fdd>
  40736a:	mov    rdi,QWORD PTR [rsp+0x10]
  40736f:	mov    rsi,r14
  407372:	mov    rdx,r13
  407375:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40737a:	mov    r14,rax
  40737d:	cmp    r14,r13
  407380:	je     4073cd <main@@Base+0x2a8d>
  407382:	cmp    BYTE PTR [r14],0x3a
  407386:	jne    4073cd <main@@Base+0x2a8d>
  407388:	lea    r12,[r14+0x1]
  40738c:	mov    rax,r13
  40738f:	sub    rax,r12
  407392:	cmp    rax,0x2
  407396:	jl     409e99 <main@@Base+0x5559>
  40739c:	cmp    BYTE PTR [r12],0x20
  4073a1:	jg     409eac <main@@Base+0x556c>
  4073a7:	jne    409e99 <main@@Base+0x5559>
  4073ad:	cmp    BYTE PTR [r14+0x2],0x20
  4073b2:	jle    409e99 <main@@Base+0x5559>
  4073b8:	add    r14,0x2
  4073bc:	mov    r12,r14
  4073bf:	cmp    r15,r12
  4073c2:	jne    409eb5 <main@@Base+0x5575>
  4073c8:	jmp    40c5d3 <main@@Base+0x7c93>
  4073cd:	mov    ecx,0x4
  4073d2:	mov    rdi,QWORD PTR [rsp+0x10]
  4073d7:	mov    rsi,r14
  4073da:	mov    rdx,r13
  4073dd:	call   41f940 <flatcc_json_parser_set_error@@Base>
  4073e2:	jmp    409ea9 <main@@Base+0x5569>
  4073e7:	mov    rdi,r15
  4073ea:	mov    rsi,rax
  4073ed:	mov    rdx,r13
  4073f0:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  4073f5:	cmp    r14,rax
  4073f8:	je     404fc5 <main@@Base+0x685>
  4073fe:	mov    rdi,r15
  407401:	mov    rsi,rax
  407404:	mov    rdx,r13
  407407:	lea    rcx,[rsp+0x3c]
  40740c:	call   421ab0 <flatcc_json_parser_build_string@@Base>
  407411:	mov    r14,rax
  407414:	cmp    DWORD PTR [rsp+0x3c],0x0
  407419:	je     40ead3 <main@@Base+0xa193>
  40741f:	mov    rdi,QWORD PTR [r15]
  407422:	mov    esi,0x3
  407427:	call   41d720 <flatcc_builder_table_add_offset@@Base>
  40742c:	test   rax,rax
  40742f:	je     40ead3 <main@@Base+0xa193>
  407435:	mov    ecx,DWORD PTR [rsp+0x3c]
  407439:	mov    DWORD PTR [rax],ecx
  40743b:	jmp    409b99 <main@@Base+0x5259>
  407440:	mov    rdi,r15
  407443:	mov    rsi,r12
  407446:	mov    rdx,r13
  407449:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40744e:	mov    r12,rax
  407451:	cmp    r14,r12
  407454:	je     408b4d <main@@Base+0x420d>
  40745a:	mov    rdi,QWORD PTR [r15]
  40745d:	mov    esi,0x1
  407462:	mov    edx,0x1
  407467:	mov    ecx,0xffffffff
  40746c:	call   41c090 <flatcc_builder_start_vector@@Base>
  407471:	test   eax,eax
  407473:	jne    4049f1 <main@@Base+0xb1>
  407479:	cmp    r12,r13
  40747c:	je     4074b3 <main@@Base+0x2b73>
  40747e:	cmp    BYTE PTR [r12],0x5b
  407483:	jne    4074b3 <main@@Base+0x2b73>
  407485:	lea    rax,[r12+0x1]
  40748a:	mov    rcx,r13
  40748d:	sub    rcx,rax
  407490:	cmp    rcx,0x2
  407494:	mov    rbp,QWORD PTR [rsp+0x20]
  407499:	jl     4074f9 <main@@Base+0x2bb9>
  40749b:	cmp    BYTE PTR [rax],0x20
  40749e:	jg     407507 <main@@Base+0x2bc7>
  4074a0:	jne    4074f9 <main@@Base+0x2bb9>
  4074a2:	cmp    BYTE PTR [r12+0x2],0x20
  4074a8:	jle    4074f9 <main@@Base+0x2bb9>
  4074aa:	add    r12,0x2
  4074ae:	mov    rax,r12
  4074b1:	jmp    407507 <main@@Base+0x2bc7>
  4074b3:	mov    ecx,0x16
  4074b8:	mov    rdi,r15
  4074bb:	mov    rsi,r12
  4074be:	mov    rdx,r13
  4074c1:	call   41f940 <flatcc_json_parser_set_error@@Base>
  4074c6:	mov    r14,rax
  4074c9:	mov    rbp,QWORD PTR [rsp+0x20]
  4074ce:	movabs r12,0x7465737400000000
  4074d8:	mov    rdi,QWORD PTR [r15]
  4074db:	call   41d220 <flatcc_builder_end_vector@@Base>
  4074e0:	mov    DWORD PTR [rsp+0x3c],eax
  4074e4:	test   eax,eax
  4074e6:	je     40ead3 <main@@Base+0xa193>
  4074ec:	mov    rdi,QWORD PTR [r15]
  4074ef:	mov    esi,0x1e
  4074f4:	jmp    4080eb <main@@Base+0x37ab>
  4074f9:	mov    rdi,r15
  4074fc:	mov    rsi,rax
  4074ff:	mov    rdx,r13
  407502:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  407507:	mov    r12,r13
  40750a:	cmp    rax,r13
  40750d:	je     407554 <main@@Base+0x2c14>
  40750f:	cmp    BYTE PTR [rax],0x5d
  407512:	jne    407551 <main@@Base+0x2c11>
  407514:	lea    r14,[rax+0x1]
  407518:	mov    rcx,r13
  40751b:	sub    rcx,r14
  40751e:	cmp    rcx,0x2
  407522:	movabs r12,0x7465737400000000
  40752c:	jl     409a74 <main@@Base+0x5134>
  407532:	cmp    BYTE PTR [r14],0x20
  407536:	jg     4074d8 <main@@Base+0x2b98>
  407538:	jne    409a74 <main@@Base+0x5134>
  40753e:	cmp    BYTE PTR [rax+0x2],0x20
  407542:	jle    409a74 <main@@Base+0x5134>
  407548:	add    rax,0x2
  40754c:	mov    r14,rax
  40754f:	jmp    4074d8 <main@@Base+0x2b98>
  407551:	mov    r12,rax
  407554:	mov    BYTE PTR [rsp+0x1c],0x0
  407559:	mov    rdi,QWORD PTR [r15]
  40755c:	mov    esi,0x1
  407561:	call   41b720 <flatcc_builder_extend_vector@@Base>
  407566:	test   rax,rax
  407569:	je     40eab2 <main@@Base+0xa172>
  40756f:	mov    r14,rax
  407572:	mov    QWORD PTR [rsp+0x30],0x0
  40757b:	mov    DWORD PTR [rsp+0x40],0x0
  407583:	mov    BYTE PTR [rsp+0x1c],0x0
  407588:	mov    rdx,QWORD PTR [rsp+0x8]
  40758d:	cmp    r12,rdx
  407590:	je     4075ba <main@@Base+0x2c7a>
  407592:	mov    rdi,r15
  407595:	mov    rsi,r12
  407598:	lea    rcx,[rsp+0x40]
  40759d:	lea    r8,[rsp+0x30]
  4075a2:	call   4215e0 <flatcc_json_parser_integer@@Base>
  4075a7:	cmp    rax,r12
  4075aa:	je     4075c6 <main@@Base+0x2c86>
  4075ac:	cmp    DWORD PTR [rsp+0x40],0x0
  4075b1:	je     4075d2 <main@@Base+0x2c92>
  4075b3:	mov    ecx,0x8
  4075b8:	jmp    4075e9 <main@@Base+0x2ca9>
  4075ba:	xor    ecx,ecx
  4075bc:	mov    rax,rdx
  4075bf:	cmp    r12,rax
  4075c2:	jne    407636 <main@@Base+0x2cf6>
  4075c4:	jmp    407600 <main@@Base+0x2cc0>
  4075c6:	xor    ecx,ecx
  4075c8:	mov    rax,r12
  4075cb:	cmp    r12,rax
  4075ce:	jne    407636 <main@@Base+0x2cf6>
  4075d0:	jmp    407600 <main@@Base+0x2cc0>
  4075d2:	mov    rcx,QWORD PTR [rsp+0x30]
  4075d7:	cmp    rcx,0x100
  4075de:	jb     4076ff <main@@Base+0x2dbf>
  4075e4:	mov    ecx,0x7
  4075e9:	mov    rdi,r15
  4075ec:	mov    rsi,rax
  4075ef:	mov    rdx,QWORD PTR [rsp+0x8]
  4075f4:	call   41f940 <flatcc_json_parser_set_error@@Base>
  4075f9:	xor    ecx,ecx
  4075fb:	cmp    r12,rax
  4075fe:	jne    407636 <main@@Base+0x2cf6>
  407600:	mov    rdi,r15
  407603:	mov    rsi,r12
  407606:	mov    rbx,QWORD PTR [rsp+0x8]
  40760b:	mov    rdx,rbx
  40760e:	lea    rcx,[rip+0x23aeb]        # 42b100 <filename@@Base+0x30>
  407615:	lea    r8,[rsp+0x1c]
  40761a:	call   410220 <main@@Base+0xb8e0>
  40761f:	cmp    rax,r12
  407622:	je     40eadb <main@@Base+0xa19b>
  407628:	cmp    rax,rbx
  40762b:	je     40eadb <main@@Base+0xa19b>
  407631:	movzx  ecx,BYTE PTR [rsp+0x1c]
  407636:	mov    BYTE PTR [r14],cl
  407639:	mov    r13,QWORD PTR [rsp+0x8]
  40763e:	mov    rcx,r13
  407641:	sub    rcx,rax
  407644:	cmp    rcx,0x2
  407648:	movabs r12,0x7465737400000000
  407652:	jl     40766f <main@@Base+0x2d2f>
  407654:	cmp    BYTE PTR [rax],0x20
  407657:	jg     40767d <main@@Base+0x2d3d>
  407659:	jne    40766f <main@@Base+0x2d2f>
  40765b:	cmp    BYTE PTR [rax+0x1],0x20
  40765f:	jle    40766f <main@@Base+0x2d2f>
  407661:	add    rax,0x1
  407665:	cmp    rax,r13
  407668:	jne    407686 <main@@Base+0x2d46>
  40766a:	jmp    4099b3 <main@@Base+0x5073>
  40766f:	mov    rdi,r15
  407672:	mov    rsi,rax
  407675:	mov    rdx,r13
  407678:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40767d:	cmp    rax,r13
  407680:	je     4099b3 <main@@Base+0x5073>
  407686:	movzx  ecx,BYTE PTR [rax]
  407689:	cmp    cl,0x2c
  40768c:	jne    409a4b <main@@Base+0x510b>
  407692:	lea    r12,[rax+0x1]
  407696:	mov    rcx,r13
  407699:	sub    rcx,r12
  40769c:	cmp    rcx,0x2
  4076a0:	jl     4076b7 <main@@Base+0x2d77>
  4076a2:	cmp    BYTE PTR [r12],0x20
  4076a7:	jg     4076c8 <main@@Base+0x2d88>
  4076a9:	jne    4076b7 <main@@Base+0x2d77>
  4076ab:	cmp    BYTE PTR [rax+0x2],0x20
  4076af:	jle    4076b7 <main@@Base+0x2d77>
  4076b1:	add    rax,0x2
  4076b5:	jmp    4076c5 <main@@Base+0x2d85>
  4076b7:	mov    rdi,r15
  4076ba:	mov    rsi,r12
  4076bd:	mov    rdx,r13
  4076c0:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  4076c5:	mov    r12,rax
  4076c8:	cmp    r12,r13
  4076cb:	je     409a8a <main@@Base+0x514a>
  4076d1:	cmp    BYTE PTR [r12],0x5d
  4076d6:	je     409aaf <main@@Base+0x516f>
  4076dc:	mov    BYTE PTR [rsp+0x1c],0x0
  4076e1:	mov    rdi,QWORD PTR [r15]
  4076e4:	mov    esi,0x1
  4076e9:	call   41b720 <flatcc_builder_extend_vector@@Base>
  4076ee:	mov    r14,rax
  4076f1:	test   rax,rax
  4076f4:	jne    407572 <main@@Base+0x2c32>
  4076fa:	jmp    40eab2 <main@@Base+0xa172>
  4076ff:	mov    BYTE PTR [rsp+0x1c],cl
  407703:	cmp    r12,rax
  407706:	jne    407636 <main@@Base+0x2cf6>
  40770c:	jmp    407600 <main@@Base+0x2cc0>
  407711:	mov    rdi,QWORD PTR [rsp+0x10]
  407716:	mov    rsi,rax
  407719:	mov    rdx,QWORD PTR [rsp+0x8]
  40771e:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  407723:	cmp    r14,rax
  407726:	je     40713b <main@@Base+0x27fb>
  40772c:	mov    r9,QWORD PTR [rsp+0x58]
  407731:	sub    rsp,0x8
  407735:	mov    ecx,0x0
  40773a:	mov    r8d,0x8
  407740:	mov    r15,QWORD PTR [rsp+0x18]
  407745:	mov    rdi,r15
  407748:	mov    rsi,rax
  40774b:	mov    r13,QWORD PTR [rsp+0x10]
  407750:	mov    rdx,r13
  407753:	lea    rax,[rip+0x95e6]        # 410d40 <main@@Base+0xc400>
  40775a:	push   rax
  40775b:	call   421e50 <flatcc_json_parser_union@@Base>
  407760:	add    rsp,0x10
  407764:	jmp    40c5e6 <main@@Base+0x7ca6>
  407769:	mov    r14,r13
  40776c:	jmp    40699d <main@@Base+0x205d>
  407771:	cmp    cl,0x5d
  407774:	jne    409862 <main@@Base+0x4f22>
  40777a:	lea    r14,[rax+0x1]
  40777e:	mov    rcx,r13
  407781:	sub    rcx,r14
  407784:	cmp    rcx,0x2
  407788:	jl     40779a <main@@Base+0x2e5a>
  40778a:	cmp    BYTE PTR [r14],0x20
  40778e:	jg     40699d <main@@Base+0x205d>
  407794:	je     406a03 <main@@Base+0x20c3>
  40779a:	mov    rdi,r15
  40779d:	mov    rsi,r14
  4077a0:	mov    rdx,r13
  4077a3:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  4077a8:	mov    r14,rax
  4077ab:	jmp    40699d <main@@Base+0x205d>
  4077b0:	mov    rdi,QWORD PTR [rsp+0x10]
  4077b5:	mov    rsi,r14
  4077b8:	mov    rdx,r13
  4077bb:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  4077c0:	mov    r14,rax
  4077c3:	cmp    r14,r13
  4077c6:	je     4078e9 <main@@Base+0x2fa9>
  4077cc:	cmp    BYTE PTR [r14],0x3a
  4077d0:	jne    4078e9 <main@@Base+0x2fa9>
  4077d6:	lea    r12,[r14+0x1]
  4077da:	mov    rax,r13
  4077dd:	sub    rax,r12
  4077e0:	cmp    rax,0x2
  4077e4:	jl     409fca <main@@Base+0x568a>
  4077ea:	cmp    BYTE PTR [r12],0x20
  4077ef:	jg     409fdd <main@@Base+0x569d>
  4077f5:	jne    409fca <main@@Base+0x568a>
  4077fb:	cmp    BYTE PTR [r14+0x2],0x20
  407800:	jle    409fca <main@@Base+0x568a>
  407806:	add    r14,0x2
  40780a:	mov    r12,r14
  40780d:	cmp    r15,r12
  407810:	jne    409fe6 <main@@Base+0x56a6>
  407816:	jmp    40c5d3 <main@@Base+0x7c93>
  40781b:	mov    rdi,QWORD PTR [rsp+0x10]
  407820:	mov    rsi,r14
  407823:	mov    rdx,r13
  407826:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40782b:	mov    r14,rax
  40782e:	cmp    r14,r13
  407831:	je     407903 <main@@Base+0x2fc3>
  407837:	cmp    BYTE PTR [r14],0x3a
  40783b:	jne    407903 <main@@Base+0x2fc3>
  407841:	lea    r12,[r14+0x1]
  407845:	mov    rax,r13
  407848:	sub    rax,r12
  40784b:	cmp    rax,0x2
  40784f:	jl     40a08e <main@@Base+0x574e>
  407855:	cmp    BYTE PTR [r12],0x20
  40785a:	jg     40a0a1 <main@@Base+0x5761>
  407860:	jne    40a08e <main@@Base+0x574e>
  407866:	cmp    BYTE PTR [r14+0x2],0x20
  40786b:	jle    40a08e <main@@Base+0x574e>
  407871:	add    r14,0x2
  407875:	mov    r12,r14
  407878:	cmp    r15,r12
  40787b:	jne    40a0aa <main@@Base+0x576a>
  407881:	jmp    40c5d3 <main@@Base+0x7c93>
  407886:	mov    rdi,QWORD PTR [rsp+0x10]
  40788b:	mov    rsi,r14
  40788e:	mov    rdx,r13
  407891:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  407896:	mov    r14,rax
  407899:	cmp    r14,r13
  40789c:	je     40791d <main@@Base+0x2fdd>
  40789e:	cmp    BYTE PTR [r14],0x3a
  4078a2:	jne    40791d <main@@Base+0x2fdd>
  4078a4:	lea    r12,[r14+0x1]
  4078a8:	mov    rax,r13
  4078ab:	sub    rax,r12
  4078ae:	cmp    rax,0x2
  4078b2:	jl     40a161 <main@@Base+0x5821>
  4078b8:	cmp    BYTE PTR [r12],0x20
  4078bd:	jg     40a174 <main@@Base+0x5834>
  4078c3:	jne    40a161 <main@@Base+0x5821>
  4078c9:	cmp    BYTE PTR [r14+0x2],0x20
  4078ce:	jle    40a161 <main@@Base+0x5821>
  4078d4:	add    r14,0x2
  4078d8:	mov    r12,r14
  4078db:	cmp    r15,r12
  4078de:	jne    40a17d <main@@Base+0x583d>
  4078e4:	jmp    40c5d3 <main@@Base+0x7c93>
  4078e9:	mov    ecx,0x4
  4078ee:	mov    rdi,QWORD PTR [rsp+0x10]
  4078f3:	mov    rsi,r14
  4078f6:	mov    rdx,r13
  4078f9:	call   41f940 <flatcc_json_parser_set_error@@Base>
  4078fe:	jmp    409fda <main@@Base+0x569a>
  407903:	mov    ecx,0x4
  407908:	mov    rdi,QWORD PTR [rsp+0x10]
  40790d:	mov    rsi,r14
  407910:	mov    rdx,r13
  407913:	call   41f940 <flatcc_json_parser_set_error@@Base>
  407918:	jmp    40a09e <main@@Base+0x575e>
  40791d:	mov    ecx,0x4
  407922:	mov    rdi,QWORD PTR [rsp+0x10]
  407927:	mov    rsi,r14
  40792a:	mov    rdx,r13
  40792d:	call   41f940 <flatcc_json_parser_set_error@@Base>
  407932:	jmp    40a171 <main@@Base+0x5831>
  407937:	mov    ecx,0x9
  40793c:	mov    rdi,r15
  40793f:	mov    rsi,r13
  407942:	mov    rdx,r13
  407945:	call   41f940 <flatcc_json_parser_set_error@@Base>
  40794a:	jmp    408550 <main@@Base+0x3c10>
  40794f:	mov    r12,r14
  407952:	cmp    al,0x22
  407954:	jne    40a25e <main@@Base+0x591e>
  40795a:	lea    rsi,[r14+0x5]
  40795e:	mov    rbx,QWORD PTR [rsp+0x8]
  407963:	mov    rax,rbx
  407966:	sub    rax,rsi
  407969:	cmp    rax,0x2
  40796d:	jl     407acb <main@@Base+0x318b>
  407973:	cmp    BYTE PTR [rsi],0x20
  407976:	jg     407ad9 <main@@Base+0x3199>
  40797c:	jne    407acb <main@@Base+0x318b>
  407982:	cmp    BYTE PTR [rsi+0x1],0x20
  407986:	jle    407acb <main@@Base+0x318b>
  40798c:	add    rsi,0x1
  407990:	cmp    rsi,rbx
  407993:	jne    407ae2 <main@@Base+0x31a2>
  407999:	jmp    407b86 <main@@Base+0x3246>
  40799e:	mov    rbx,r14
  4079a1:	cmp    al,0x22
  4079a3:	jne    40a3bf <main@@Base+0x5a7f>
  4079a9:	lea    rsi,[r14+0x6]
  4079ad:	mov    rbx,QWORD PTR [rsp+0x8]
  4079b2:	mov    rax,rbx
  4079b5:	sub    rax,rsi
  4079b8:	cmp    rax,0x2
  4079bc:	jl     407b2c <main@@Base+0x31ec>
  4079c2:	cmp    BYTE PTR [rsi],0x20
  4079c5:	jg     407b3a <main@@Base+0x31fa>
  4079cb:	jne    407b2c <main@@Base+0x31ec>
  4079d1:	cmp    BYTE PTR [rsi+0x1],0x20
  4079d5:	jle    407b2c <main@@Base+0x31ec>
  4079db:	add    rsi,0x1
  4079df:	cmp    rsi,rbx
  4079e2:	jne    407b3f <main@@Base+0x31ff>
  4079e8:	jmp    407b9b <main@@Base+0x325b>
  4079ed:	cmp    al,0x22
  4079ef:	jne    407c58 <main@@Base+0x3318>
  4079f5:	lea    rsi,[r14+0x11]
  4079f9:	mov    rbx,QWORD PTR [rsp+0x8]
  4079fe:	mov    rax,rbx
  407a01:	sub    rax,rsi
  407a04:	cmp    rax,0x2
  407a08:	jl     407bf9 <main@@Base+0x32b9>
  407a0e:	cmp    BYTE PTR [rsi],0x20
  407a11:	jg     407c09 <main@@Base+0x32c9>
  407a17:	jne    407bf9 <main@@Base+0x32b9>
  407a1d:	cmp    BYTE PTR [rsi+0x1],0x20
  407a21:	jle    407bf9 <main@@Base+0x32b9>
  407a27:	add    rsi,0x1
  407a2b:	cmp    rsi,rbx
  407a2e:	jne    407c12 <main@@Base+0x32d2>
  407a34:	jmp    407e20 <main@@Base+0x34e0>
  407a39:	cmp    al,0x22
  407a3b:	jne    40c5d3 <main@@Base+0x7c93>
  407a41:	add    r14,0xa
  407a45:	mov    rax,r13
  407a48:	sub    rax,r14
  407a4b:	cmp    rax,0x2
  407a4f:	jl     407d52 <main@@Base+0x3412>
  407a55:	cmp    BYTE PTR [r14],0x20
  407a59:	jg     407d65 <main@@Base+0x3425>
  407a5f:	jne    407d52 <main@@Base+0x3412>
  407a65:	cmp    BYTE PTR [r14+0x1],0x20
  407a6a:	jle    407d52 <main@@Base+0x3412>
  407a70:	add    r14,0x1
  407a74:	cmp    r14,r13
  407a77:	jne    407d6e <main@@Base+0x342e>
  407a7d:	jmp    407e37 <main@@Base+0x34f7>
  407a82:	cmp    al,0x22
  407a84:	jne    40c5d3 <main@@Base+0x7c93>
  407a8a:	add    r14,0xa
  407a8e:	mov    rax,r13
  407a91:	sub    rax,r14
  407a94:	cmp    rax,0x2
  407a98:	jl     407dbd <main@@Base+0x347d>
  407a9e:	cmp    BYTE PTR [r14],0x20
  407aa2:	jg     407dd0 <main@@Base+0x3490>
  407aa8:	jne    407dbd <main@@Base+0x347d>
  407aae:	cmp    BYTE PTR [r14+0x1],0x20
  407ab3:	jle    407dbd <main@@Base+0x347d>
  407ab9:	add    r14,0x1
  407abd:	cmp    r14,r13
  407ac0:	jne    407dd5 <main@@Base+0x3495>
  407ac6:	jmp    407e51 <main@@Base+0x3511>
  407acb:	mov    rdi,r15
  407ace:	mov    rdx,rbx
  407ad1:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  407ad6:	mov    rsi,rax
  407ad9:	cmp    rsi,rbx
  407adc:	je     407b86 <main@@Base+0x3246>
  407ae2:	cmp    BYTE PTR [rsi],0x3a
  407ae5:	jne    407b86 <main@@Base+0x3246>
  407aeb:	lea    r12,[rsi+0x1]
  407aef:	sub    rbx,r12
  407af2:	cmp    rbx,0x2
  407af6:	jl     40a24b <main@@Base+0x590b>
  407afc:	cmp    BYTE PTR [r12],0x20
  407b01:	jg     40a25e <main@@Base+0x591e>
  407b07:	jne    40a24b <main@@Base+0x590b>
  407b0d:	cmp    BYTE PTR [rsi+0x2],0x20
  407b11:	jle    40a24b <main@@Base+0x590b>
  407b17:	add    rsi,0x2
  407b1b:	mov    r12,rsi
  407b1e:	cmp    r14,r12
  407b21:	jne    40a263 <main@@Base+0x5923>
  407b27:	jmp    40a2c3 <main@@Base+0x5983>
  407b2c:	mov    rdi,r15
  407b2f:	mov    rdx,rbx
  407b32:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  407b37:	mov    rsi,rax
  407b3a:	cmp    rsi,rbx
  407b3d:	je     407b9b <main@@Base+0x325b>
  407b3f:	cmp    BYTE PTR [rsi],0x3a
  407b42:	jne    407b9b <main@@Base+0x325b>
  407b44:	mov    rax,rbx
  407b47:	lea    rbx,[rsi+0x1]
  407b4b:	sub    rax,rbx
  407b4e:	cmp    rax,0x2
  407b52:	jl     40a3ac <main@@Base+0x5a6c>
  407b58:	cmp    BYTE PTR [rbx],0x20
  407b5b:	jg     40a3bf <main@@Base+0x5a7f>
  407b61:	jne    40a3ac <main@@Base+0x5a6c>
  407b67:	cmp    BYTE PTR [rsi+0x2],0x20
  407b6b:	jle    40a3ac <main@@Base+0x5a6c>
  407b71:	add    rsi,0x2
  407b75:	mov    rbx,rsi
  407b78:	cmp    r14,rbx
  407b7b:	jne    40a3c8 <main@@Base+0x5a88>
  407b81:	jmp    407fbf <main@@Base+0x367f>
  407b86:	mov    ecx,0x4
  407b8b:	mov    rdi,r15
  407b8e:	mov    rdx,rbx
  407b91:	call   41f940 <flatcc_json_parser_set_error@@Base>
  407b96:	jmp    40a25b <main@@Base+0x591b>
  407b9b:	mov    ecx,0x4
  407ba0:	mov    rdi,r15
  407ba3:	mov    rdx,rbx
  407ba6:	call   41f940 <flatcc_json_parser_set_error@@Base>
  407bab:	jmp    40a3bc <main@@Base+0x5a7c>
  407bb0:	cmp    al,0x22
  407bb2:	jne    407ec8 <main@@Base+0x3588>
  407bb8:	add    r14,0x16
  407bbc:	mov    rax,r13
  407bbf:	sub    rax,r14
  407bc2:	cmp    rax,0x2
  407bc6:	jl     407e6b <main@@Base+0x352b>
  407bcc:	cmp    BYTE PTR [r14],0x20
  407bd0:	jg     407e7c <main@@Base+0x353c>
  407bd6:	jne    407e6b <main@@Base+0x352b>
  407bdc:	cmp    BYTE PTR [r14+0x1],0x20
  407be1:	jle    407e6b <main@@Base+0x352b>
  407be7:	add    r14,0x1
  407beb:	cmp    r14,r13
  407bee:	jne    407e81 <main@@Base+0x3541>
  407bf4:	jmp    407ed3 <main@@Base+0x3593>
  407bf9:	mov    rdi,QWORD PTR [rsp+0x10]
  407bfe:	mov    rdx,rbx
  407c01:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  407c06:	mov    rsi,rax
  407c09:	cmp    rsi,rbx
  407c0c:	je     407e20 <main@@Base+0x34e0>
  407c12:	cmp    BYTE PTR [rsi],0x3a
  407c15:	jne    407e20 <main@@Base+0x34e0>
  407c1b:	mov    rax,rbx
  407c1e:	lea    rbx,[rsi+0x1]
  407c22:	sub    rax,rbx
  407c25:	cmp    rax,0x2
  407c29:	jl     40a47d <main@@Base+0x5b3d>
  407c2f:	cmp    BYTE PTR [rbx],0x20
  407c32:	jg     40a492 <main@@Base+0x5b52>
  407c38:	jne    40a47d <main@@Base+0x5b3d>
  407c3e:	cmp    BYTE PTR [rsi+0x2],0x20
  407c42:	jle    40a47d <main@@Base+0x5b3d>
  407c48:	add    rsi,0x2
  407c4c:	mov    rbx,rsi
  407c4f:	cmp    r15,rbx
  407c52:	jne    40a49b <main@@Base+0x5b5b>
  407c58:	lea    r15,[r14+0x10]
  407c5c:	mov    r13,QWORD PTR [rsp+0x8]
  407c61:	mov    rax,r13
  407c64:	sub    rax,r15
  407c67:	cmp    rax,0x8
  407c6b:	jb     407c77 <main@@Base+0x3337>
  407c6d:	movbe  rcx,QWORD PTR [r15]
  407c72:	jmp    407d08 <main@@Base+0x33c8>
  407c77:	mov    ecx,eax
  407c79:	and    cl,0xf
  407c7c:	add    cl,0xff
  407c7f:	cmp    cl,0x7
  407c82:	ja     409b83 <main@@Base+0x5243>
  407c88:	movzx  ecx,cl
  407c8b:	lea    rdx,[rip+0x1c49e]        # 424130 <_IO_stdin_used@@Base+0x130>
  407c92:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  407c96:	add    rcx,rdx
  407c99:	xor    r8d,r8d
  407c9c:	xor    r9d,r9d
  407c9f:	xor    edx,edx
  407ca1:	xor    esi,esi
  407ca3:	xor    ebx,ebx
  407ca5:	xor    edi,edi
  407ca7:	xor    ebp,ebp
  407ca9:	jmp    rcx
  407cab:	movsx  r8,BYTE PTR [r14+0x17]
  407cb0:	movsx  r9,BYTE PTR [r14+0x16]
  407cb5:	shl    r9,0x8
  407cb9:	or     r9,r8
  407cbc:	movsx  rdx,BYTE PTR [r14+0x15]
  407cc1:	shl    rdx,0x10
  407cc5:	or     rdx,r9
  407cc8:	movsx  rsi,BYTE PTR [r14+0x14]
  407ccd:	shl    rsi,0x18
  407cd1:	or     rsi,rdx
  407cd4:	movsx  rbx,BYTE PTR [r14+0x13]
  407cd9:	shl    rbx,0x20
  407cdd:	or     rbx,rsi
  407ce0:	movsx  rdi,BYTE PTR [r14+0x12]
  407ce5:	shl    rdi,0x28
  407ce9:	or     rdi,rbx
  407cec:	movsx  rbp,BYTE PTR [r14+0x11]
  407cf1:	shl    rbp,0x30
  407cf5:	or     rbp,rdi
  407cf8:	movzx  ecx,BYTE PTR [r15]
  407cfc:	shl    rcx,0x38
  407d00:	or     rcx,rbp
  407d03:	mov    r13,QWORD PTR [rsp+0x8]
  407d08:	shr    rcx,0x38
  407d0c:	cmp    rcx,0x61
  407d10:	jne    409b83 <main@@Base+0x5243>
  407d16:	cmp    rax,0x2
  407d1a:	jl     40c8bd <main@@Base+0x7f7d>
  407d20:	mov    rax,QWORD PTR [rsp+0x28]
  407d25:	cmp    DWORD PTR [rax],0x0
  407d28:	mov    al,BYTE PTR [r14+0x11]
  407d2c:	je     409e22 <main@@Base+0x54e2>
  407d32:	cmp    al,0x21
  407d34:	jl     407d3e <main@@Base+0x33fe>
  407d36:	cmp    al,0x3a
  407d38:	jne    40c8bd <main@@Base+0x7f7d>
  407d3e:	add    r14,0x11
  407d42:	mov    rax,QWORD PTR [rsp+0x28]
  407d47:	mov    DWORD PTR [rax],0x0
  407d4d:	jmp    409e2e <main@@Base+0x54ee>
  407d52:	mov    rdi,QWORD PTR [rsp+0x10]
  407d57:	mov    rsi,r14
  407d5a:	mov    rdx,r13
  407d5d:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  407d62:	mov    r14,rax
  407d65:	cmp    r14,r13
  407d68:	je     407e37 <main@@Base+0x34f7>
  407d6e:	cmp    BYTE PTR [r14],0x3a
  407d72:	jne    407e37 <main@@Base+0x34f7>
  407d78:	lea    r12,[r14+0x1]
  407d7c:	mov    rax,r13
  407d7f:	sub    rax,r12
  407d82:	cmp    rax,0x2
  407d86:	jl     40a522 <main@@Base+0x5be2>
  407d8c:	cmp    BYTE PTR [r12],0x20
  407d91:	jg     40a535 <main@@Base+0x5bf5>
  407d97:	jne    40a522 <main@@Base+0x5be2>
  407d9d:	cmp    BYTE PTR [r14+0x2],0x20
  407da2:	jle    40a522 <main@@Base+0x5be2>
  407da8:	add    r14,0x2
  407dac:	mov    r12,r14
  407daf:	cmp    r15,r12
  407db2:	jne    40a53e <main@@Base+0x5bfe>
  407db8:	jmp    40c5d3 <main@@Base+0x7c93>
  407dbd:	mov    rdi,QWORD PTR [rsp+0x10]
  407dc2:	mov    rsi,r14
  407dc5:	mov    rdx,r13
  407dc8:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  407dcd:	mov    r14,rax
  407dd0:	cmp    r14,r13
  407dd3:	je     407e51 <main@@Base+0x3511>
  407dd5:	cmp    BYTE PTR [r14],0x3a
  407dd9:	jne    407e51 <main@@Base+0x3511>
  407ddb:	lea    r12,[r14+0x1]
  407ddf:	mov    rax,r13
  407de2:	sub    rax,r12
  407de5:	cmp    rax,0x2
  407de9:	jl     40a5ad <main@@Base+0x5c6d>
  407def:	cmp    BYTE PTR [r12],0x20
  407df4:	jg     40a5c0 <main@@Base+0x5c80>
  407dfa:	jne    40a5ad <main@@Base+0x5c6d>
  407e00:	cmp    BYTE PTR [r14+0x2],0x20
  407e05:	jle    40a5ad <main@@Base+0x5c6d>
  407e0b:	add    r14,0x2
  407e0f:	mov    r12,r14
  407e12:	cmp    r15,r12
  407e15:	jne    40a5c9 <main@@Base+0x5c89>
  407e1b:	jmp    40c5d3 <main@@Base+0x7c93>
  407e20:	mov    ecx,0x4
  407e25:	mov    rdi,QWORD PTR [rsp+0x10]
  407e2a:	mov    rdx,rbx
  407e2d:	call   41f940 <flatcc_json_parser_set_error@@Base>
  407e32:	jmp    40a48f <main@@Base+0x5b4f>
  407e37:	mov    ecx,0x4
  407e3c:	mov    rdi,QWORD PTR [rsp+0x10]
  407e41:	mov    rsi,r14
  407e44:	mov    rdx,r13
  407e47:	call   41f940 <flatcc_json_parser_set_error@@Base>
  407e4c:	jmp    40a532 <main@@Base+0x5bf2>
  407e51:	mov    ecx,0x4
  407e56:	mov    rdi,QWORD PTR [rsp+0x10]
  407e5b:	mov    rsi,r14
  407e5e:	mov    rdx,r13
  407e61:	call   41f940 <flatcc_json_parser_set_error@@Base>
  407e66:	jmp    40a5bd <main@@Base+0x5c7d>
  407e6b:	mov    rdi,r15
  407e6e:	mov    rsi,r14
  407e71:	mov    rdx,r13
  407e74:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  407e79:	mov    r14,rax
  407e7c:	cmp    r14,r13
  407e7f:	je     407ed3 <main@@Base+0x3593>
  407e81:	cmp    BYTE PTR [r14],0x3a
  407e85:	jne    407ed3 <main@@Base+0x3593>
  407e87:	mov    rcx,r14
  407e8a:	lea    r14,[r14+0x1]
  407e8e:	mov    rax,r13
  407e91:	sub    rax,r14
  407e94:	cmp    rax,0x2
  407e98:	jl     40a6f3 <main@@Base+0x5db3>
  407e9e:	cmp    BYTE PTR [r14],0x20
  407ea2:	jg     40a704 <main@@Base+0x5dc4>
  407ea8:	jne    40a6f3 <main@@Base+0x5db3>
  407eae:	cmp    BYTE PTR [rcx+0x2],0x20
  407eb2:	jle    40a6f3 <main@@Base+0x5db3>
  407eb8:	mov    r14,rcx
  407ebb:	add    r14,0x2
  407ebf:	cmp    r12,r14
  407ec2:	jne    40a70d <main@@Base+0x5dcd>
  407ec8:	mov    rdi,r15
  407ecb:	mov    rsi,r12
  407ece:	jmp    40c5de <main@@Base+0x7c9e>
  407ed3:	mov    ecx,0x4
  407ed8:	mov    rdi,r15
  407edb:	mov    rsi,r14
  407ede:	mov    rdx,r13
  407ee1:	call   41f940 <flatcc_json_parser_set_error@@Base>
  407ee6:	jmp    40a701 <main@@Base+0x5dc1>
  407eeb:	mov    rdi,r14
  407eee:	mov    rsi,r12
  407ef1:	mov    rdx,QWORD PTR [rsp+0x8]
  407ef6:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  407efb:	mov    r12,rax
  407efe:	mov    r14,r15
  407f01:	cmp    r14,r12
  407f04:	je     407f84 <main@@Base+0x3644>
  407f06:	mov    r15,QWORD PTR [rsp+0x10]
  407f0b:	mov    rdi,QWORD PTR [r15]
  407f0e:	mov    esi,0x4
  407f13:	mov    edx,0x2
  407f18:	mov    ecx,0x3fffffff
  407f1d:	call   41c090 <flatcc_builder_start_vector@@Base>
  407f22:	test   eax,eax
  407f24:	jne    40eab2 <main@@Base+0xa172>
  407f2a:	mov    r13,QWORD PTR [rsp+0x8]
  407f2f:	cmp    r12,r13
  407f32:	je     4080aa <main@@Base+0x376a>
  407f38:	cmp    BYTE PTR [r12],0x5b
  407f3d:	jne    4080aa <main@@Base+0x376a>
  407f43:	lea    rax,[r12+0x1]
  407f48:	mov    rcx,r13
  407f4b:	sub    rcx,rax
  407f4e:	cmp    rcx,0x2
  407f52:	mov    rbp,QWORD PTR [rsp+0x20]
  407f57:	jl     408104 <main@@Base+0x37c4>
  407f5d:	cmp    BYTE PTR [rax],0x20
  407f60:	jg     408112 <main@@Base+0x37d2>
  407f66:	jne    408104 <main@@Base+0x37c4>
  407f6c:	cmp    BYTE PTR [r12+0x2],0x20
  407f72:	jle    408104 <main@@Base+0x37c4>
  407f78:	add    r12,0x2
  407f7c:	mov    rax,r12
  407f7f:	jmp    408112 <main@@Base+0x37d2>
  407f84:	movabs r12,0x7465737400000000
  407f8e:	lea    rax,[r12+0x5f747970]
  407f96:	cmp    rbx,rax
  407f99:	jne    407fba <main@@Base+0x367a>
  407f9b:	lea    r15,[r14+0x8]
  407f9f:	mov    r13,QWORD PTR [rsp+0x8]
  407fa4:	mov    rax,r13
  407fa7:	sub    rax,r15
  407faa:	cmp    rax,0x8
  407fae:	jb     407fcf <main@@Base+0x368f>
  407fb0:	movbe  rcx,QWORD PTR [r15]
  407fb5:	jmp    408060 <main@@Base+0x3720>
  407fba:	mov    r15,QWORD PTR [rsp+0x10]
  407fbf:	mov    rdi,r15
  407fc2:	mov    rsi,r14
  407fc5:	mov    r13,QWORD PTR [rsp+0x8]
  407fca:	jmp    409b8e <main@@Base+0x524e>
  407fcf:	mov    ecx,eax
  407fd1:	and    cl,0xf
  407fd4:	add    cl,0xff
  407fd7:	cmp    cl,0x7
  407fda:	ja     409b83 <main@@Base+0x5243>
  407fe0:	movzx  ecx,cl
  407fe3:	lea    rdx,[rip+0x1c2a6]        # 424290 <_IO_stdin_used@@Base+0x290>
  407fea:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  407fee:	add    rcx,rdx
  407ff1:	xor    r8d,r8d
  407ff4:	xor    r9d,r9d
  407ff7:	xor    edx,edx
  407ff9:	xor    esi,esi
  407ffb:	xor    ebx,ebx
  407ffd:	xor    edi,edi
  407fff:	xor    ebp,ebp
  408001:	jmp    rcx
  408003:	movsx  r8,BYTE PTR [r14+0xf]
  408008:	movsx  r9,BYTE PTR [r14+0xe]
  40800d:	shl    r9,0x8
  408011:	or     r9,r8
  408014:	movsx  rdx,BYTE PTR [r14+0xd]
  408019:	shl    rdx,0x10
  40801d:	or     rdx,r9
  408020:	movsx  rsi,BYTE PTR [r14+0xc]
  408025:	shl    rsi,0x18
  408029:	or     rsi,rdx
  40802c:	movsx  rbx,BYTE PTR [r14+0xb]
  408031:	shl    rbx,0x20
  408035:	or     rbx,rsi
  408038:	movsx  rdi,BYTE PTR [r14+0xa]
  40803d:	shl    rdi,0x28
  408041:	or     rdi,rbx
  408044:	movsx  rbp,BYTE PTR [r14+0x9]
  408049:	shl    rbp,0x30
  40804d:	or     rbp,rdi
  408050:	movzx  ecx,BYTE PTR [r15]
  408054:	shl    rcx,0x38
  408058:	or     rcx,rbp
  40805b:	mov    r13,QWORD PTR [rsp+0x8]
  408060:	shr    rcx,0x38
  408064:	cmp    rcx,0x65
  408068:	jne    409b83 <main@@Base+0x5243>
  40806e:	cmp    rax,0x2
  408072:	jl     409b83 <main@@Base+0x5243>
  408078:	mov    rax,QWORD PTR [rsp+0x28]
  40807d:	cmp    DWORD PTR [rax],0x0
  408080:	mov    al,BYTE PTR [r14+0x9]
  408084:	je     408167 <main@@Base+0x3827>
  40808a:	cmp    al,0x21
  40808c:	jl     408096 <main@@Base+0x3756>
  40808e:	cmp    al,0x3a
  408090:	jne    409b83 <main@@Base+0x5243>
  408096:	add    r14,0x9
  40809a:	mov    rax,QWORD PTR [rsp+0x28]
  40809f:	mov    DWORD PTR [rax],0x0
  4080a5:	jmp    408173 <main@@Base+0x3833>
  4080aa:	mov    ecx,0x16
  4080af:	mov    rdi,r15
  4080b2:	mov    rsi,r12
  4080b5:	mov    rdx,r13
  4080b8:	call   41f940 <flatcc_json_parser_set_error@@Base>
  4080bd:	mov    r14,rax
  4080c0:	mov    rbp,QWORD PTR [rsp+0x20]
  4080c5:	movabs r12,0x7465737400000000
  4080cf:	mov    rdi,QWORD PTR [r15]
  4080d2:	call   41d220 <flatcc_builder_end_vector@@Base>
  4080d7:	mov    DWORD PTR [rsp+0x3c],eax
  4080db:	test   eax,eax
  4080dd:	je     40ead3 <main@@Base+0xa193>
  4080e3:	mov    rdi,QWORD PTR [r15]
  4080e6:	mov    esi,0x1f
  4080eb:	call   41d720 <flatcc_builder_table_add_offset@@Base>
  4080f0:	test   rax,rax
  4080f3:	je     40ead3 <main@@Base+0xa193>
  4080f9:	mov    ecx,DWORD PTR [rsp+0x3c]
  4080fd:	mov    DWORD PTR [rax],ecx
  4080ff:	jmp    40c600 <main@@Base+0x7cc0>
  408104:	mov    rdi,r15
  408107:	mov    rsi,rax
  40810a:	mov    rdx,r13
  40810d:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  408112:	mov    r12,r13
  408115:	cmp    rax,r13
  408118:	je     408220 <main@@Base+0x38e0>
  40811e:	cmp    BYTE PTR [rax],0x5d
  408121:	jne    40821d <main@@Base+0x38dd>
  408127:	lea    r14,[rax+0x1]
  40812b:	mov    rcx,r13
  40812e:	sub    rcx,r14
  408131:	cmp    rcx,0x2
  408135:	movabs r12,0x7465737400000000
  40813f:	jl     40c478 <main@@Base+0x7b38>
  408145:	cmp    BYTE PTR [r14],0x20
  408149:	jg     4080cf <main@@Base+0x378f>
  40814b:	jne    40c478 <main@@Base+0x7b38>
  408151:	cmp    BYTE PTR [rax+0x2],0x20
  408155:	jle    40c478 <main@@Base+0x7b38>
  40815b:	add    rax,0x2
  40815f:	mov    r14,rax
  408162:	jmp    4080cf <main@@Base+0x378f>
  408167:	cmp    al,0x22
  408169:	jne    409b83 <main@@Base+0x5243>
  40816f:	add    r14,0xa
  408173:	mov    rax,r13
  408176:	sub    rax,r14
  408179:	cmp    rax,0x2
  40817d:	jl     408199 <main@@Base+0x3859>
  40817f:	cmp    BYTE PTR [r14],0x20
  408183:	jg     4081ac <main@@Base+0x386c>
  408185:	jne    408199 <main@@Base+0x3859>
  408187:	cmp    BYTE PTR [r14+0x1],0x20
  40818c:	jle    408199 <main@@Base+0x3859>
  40818e:	add    r14,0x1
  408192:	cmp    r14,r13
  408195:	jne    4081b1 <main@@Base+0x3871>
  408197:	jmp    4081fa <main@@Base+0x38ba>
  408199:	mov    rdi,QWORD PTR [rsp+0x10]
  40819e:	mov    rsi,r14
  4081a1:	mov    rdx,r13
  4081a4:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  4081a9:	mov    r14,rax
  4081ac:	cmp    r14,r13
  4081af:	je     4081fa <main@@Base+0x38ba>
  4081b1:	cmp    BYTE PTR [r14],0x3a
  4081b5:	jne    4081fa <main@@Base+0x38ba>
  4081b7:	lea    rax,[r14+0x1]
  4081bb:	mov    rcx,r13
  4081be:	sub    rcx,rax
  4081c1:	cmp    rcx,0x2
  4081c5:	jl     409b35 <main@@Base+0x51f5>
  4081cb:	cmp    BYTE PTR [rax],0x20
  4081ce:	jg     409b45 <main@@Base+0x5205>
  4081d4:	jne    409b35 <main@@Base+0x51f5>
  4081da:	cmp    BYTE PTR [r14+0x2],0x20
  4081df:	jle    409b35 <main@@Base+0x51f5>
  4081e5:	add    r14,0x2
  4081e9:	mov    rax,r14
  4081ec:	cmp    r15,rax
  4081ef:	jne    409b4a <main@@Base+0x520a>
  4081f5:	jmp    409b83 <main@@Base+0x5243>
  4081fa:	mov    ecx,0x4
  4081ff:	mov    rdi,QWORD PTR [rsp+0x10]
  408204:	mov    rsi,r14
  408207:	mov    rdx,r13
  40820a:	call   41f940 <flatcc_json_parser_set_error@@Base>
  40820f:	cmp    r15,rax
  408212:	jne    409b4a <main@@Base+0x520a>
  408218:	jmp    409b83 <main@@Base+0x5243>
  40821d:	mov    r12,rax
  408220:	mov    rdi,QWORD PTR [r15]
  408223:	mov    esi,0x1
  408228:	call   41b720 <flatcc_builder_extend_vector@@Base>
  40822d:	test   rax,rax
  408230:	je     4049f1 <main@@Base+0xb1>
  408236:	mov    rdi,r15
  408239:	mov    rsi,r12
  40823c:	mov    rdx,r13
  40823f:	mov    rcx,rax
  408242:	call   410640 <main@@Base+0xbd00>
  408247:	mov    rcx,r13
  40824a:	sub    rcx,rax
  40824d:	cmp    rcx,0x2
  408251:	mov    rbp,QWORD PTR [rsp+0x20]
  408256:	movabs r12,0x7465737400000000
  408260:	jl     40827d <main@@Base+0x393d>
  408262:	cmp    BYTE PTR [rax],0x20
  408265:	jg     40828b <main@@Base+0x394b>
  408267:	jne    40827d <main@@Base+0x393d>
  408269:	cmp    BYTE PTR [rax+0x1],0x20
  40826d:	jle    40827d <main@@Base+0x393d>
  40826f:	add    rax,0x1
  408273:	cmp    rax,r13
  408276:	jne    408294 <main@@Base+0x3954>
  408278:	jmp    409ddf <main@@Base+0x549f>
  40827d:	mov    rdi,r15
  408280:	mov    rsi,rax
  408283:	mov    rdx,r13
  408286:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40828b:	cmp    rax,r13
  40828e:	je     409ddf <main@@Base+0x549f>
  408294:	movzx  ecx,BYTE PTR [rax]
  408297:	cmp    cl,0x2c
  40829a:	jne    409de7 <main@@Base+0x54a7>
  4082a0:	lea    r12,[rax+0x1]
  4082a4:	mov    rcx,r13
  4082a7:	sub    rcx,r12
  4082aa:	cmp    rcx,0x2
  4082ae:	jl     4082c5 <main@@Base+0x3985>
  4082b0:	cmp    BYTE PTR [r12],0x20
  4082b5:	jg     4082d6 <main@@Base+0x3996>
  4082b7:	jne    4082c5 <main@@Base+0x3985>
  4082b9:	cmp    BYTE PTR [rax+0x2],0x20
  4082bd:	jle    4082c5 <main@@Base+0x3985>
  4082bf:	add    rax,0x2
  4082c3:	jmp    4082d3 <main@@Base+0x3993>
  4082c5:	mov    rdi,r15
  4082c8:	mov    rsi,r12
  4082cb:	mov    rdx,r13
  4082ce:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  4082d3:	mov    r12,rax
  4082d6:	cmp    r12,r13
  4082d9:	je     409e70 <main@@Base+0x5530>
  4082df:	cmp    BYTE PTR [r12],0x5d
  4082e4:	jne    408220 <main@@Base+0x38e0>
  4082ea:	lea    r14,[r12+0x1]
  4082ef:	mov    rax,r13
  4082f2:	sub    rax,r14
  4082f5:	cmp    rax,0x2
  4082f9:	jl     40a80d <main@@Base+0x5ecd>
  4082ff:	cmp    BYTE PTR [r14],0x20
  408303:	jg     4080c5 <main@@Base+0x3785>
  408309:	jne    40a80d <main@@Base+0x5ecd>
  40830f:	cmp    BYTE PTR [r12+0x2],0x20
  408315:	jle    40a80d <main@@Base+0x5ecd>
  40831b:	add    r12,0x2
  40831f:	mov    r14,r12
  408322:	jmp    4080c5 <main@@Base+0x3785>
  408327:	mov    rdi,r15
  40832a:	mov    rsi,r12
  40832d:	mov    rdx,r13
  408330:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  408335:	mov    r12,rax
  408338:	cmp    r14,r12
  40833b:	je     408b4d <main@@Base+0x420d>
  408341:	mov    BYTE PTR [rsp+0x1c],0x0
  408346:	mov    rax,r13
  408349:	sub    rax,r12
  40834c:	cmp    rax,0x4
  408350:	jl     40837e <main@@Base+0x3a3e>
  408352:	cmp    DWORD PTR [r12],0x65757274
  40835a:	je     4083d3 <main@@Base+0x3a93>
  40835c:	cmp    rax,0x5
  408360:	jl     40837e <main@@Base+0x3a3e>
  408362:	mov    eax,DWORD PTR [r12]
  408366:	mov    ecx,0x736c6166
  40836b:	xor    eax,ecx
  40836d:	movzx  ecx,BYTE PTR [r12+0x4]
  408373:	xor    ecx,0x65
  408376:	or     ecx,eax
  408378:	je     4099bb <main@@Base+0x507b>
  40837e:	mov    QWORD PTR [rsp+0x30],0x0
  408387:	mov    DWORD PTR [rsp+0x40],0x0
  40838f:	cmp    r12,r13
  408392:	je     4083c7 <main@@Base+0x3a87>
  408394:	mov    rdi,r15
  408397:	mov    rsi,r12
  40839a:	mov    rdx,r13
  40839d:	lea    rcx,[rsp+0x40]
  4083a2:	lea    r8,[rsp+0x30]
  4083a7:	call   4215e0 <flatcc_json_parser_integer@@Base>
  4083ac:	cmp    rax,r12
  4083af:	mov    rbp,QWORD PTR [rsp+0x20]
  4083b4:	je     4083e4 <main@@Base+0x3aa4>
  4083b6:	mov    r14,rax
  4083b9:	cmp    DWORD PTR [rsp+0x40],0x0
  4083be:	je     4083eb <main@@Base+0x3aab>
  4083c0:	mov    ecx,0x8
  4083c5:	jmp    408401 <main@@Base+0x3ac1>
  4083c7:	mov    r14,r13
  4083ca:	xor    ebx,ebx
  4083cc:	mov    rbp,QWORD PTR [rsp+0x20]
  4083d1:	jmp    408414 <main@@Base+0x3ad4>
  4083d3:	mov    BYTE PTR [rsp+0x1c],0x1
  4083d8:	lea    r14,[r12+0x4]
  4083dd:	mov    bl,0x1
  4083df:	jmp    4099c7 <main@@Base+0x5087>
  4083e4:	xor    ebx,ebx
  4083e6:	mov    r14,r12
  4083e9:	jmp    408414 <main@@Base+0x3ad4>
  4083eb:	mov    rax,QWORD PTR [rsp+0x30]
  4083f0:	cmp    rax,0x100
  4083f6:	jb     409aa5 <main@@Base+0x5165>
  4083fc:	mov    ecx,0x7
  408401:	mov    rdi,r15
  408404:	mov    rsi,r14
  408407:	mov    rdx,r13
  40840a:	call   41f940 <flatcc_json_parser_set_error@@Base>
  40840f:	mov    r14,rax
  408412:	xor    ebx,ebx
  408414:	mov    BYTE PTR [rsp+0x1c],bl
  408418:	cmp    r12,r14
  40841b:	jne    409a09 <main@@Base+0x50c9>
  408421:	jmp    4099d1 <main@@Base+0x5091>
  408426:	cmp    al,0x22
  408428:	jne    40c8bd <main@@Base+0x7f7d>
  40842e:	add    r14,0x12
  408432:	mov    rbx,QWORD PTR [rsp+0x8]
  408437:	mov    rax,rbx
  40843a:	sub    rax,r14
  40843d:	cmp    rax,0x2
  408441:	jl     408558 <main@@Base+0x3c18>
  408447:	cmp    BYTE PTR [r14],0x20
  40844b:	jg     40856b <main@@Base+0x3c2b>
  408451:	jne    408558 <main@@Base+0x3c18>
  408457:	cmp    BYTE PTR [r14+0x1],0x20
  40845c:	jle    408558 <main@@Base+0x3c18>
  408462:	add    r14,0x1
  408466:	cmp    r14,rbx
  408469:	jne    408570 <main@@Base+0x3c30>
  40846f:	jmp    4085b9 <main@@Base+0x3c79>
  408474:	mov    rdi,QWORD PTR [rsp+0x10]
  408479:	mov    rsi,r12
  40847c:	mov    rdx,r13
  40847f:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  408484:	mov    r12,rax
  408487:	cmp    r15,r12
  40848a:	je     40c5d3 <main@@Base+0x7c93>
  408490:	mov    r15,QWORD PTR [rsp+0x10]
  408495:	mov    rdi,QWORD PTR [r15]
  408498:	mov    esi,0x1
  40849d:	mov    edx,0x1
  4084a2:	mov    ecx,0xffffffff
  4084a7:	call   41c090 <flatcc_builder_start_vector@@Base>
  4084ac:	test   eax,eax
  4084ae:	jne    4049f1 <main@@Base+0xb1>
  4084b4:	cmp    r12,r13
  4084b7:	je     4084fc <main@@Base+0x3bbc>
  4084b9:	cmp    BYTE PTR [r12],0x5b
  4084be:	jne    4084fc <main@@Base+0x3bbc>
  4084c0:	lea    rax,[r12+0x1]
  4084c5:	mov    rcx,r13
  4084c8:	sub    rcx,rax
  4084cb:	cmp    rcx,0x2
  4084cf:	jl     409c35 <main@@Base+0x52f5>
  4084d5:	cmp    BYTE PTR [rax],0x20
  4084d8:	jg     409c43 <main@@Base+0x5303>
  4084de:	jne    409c35 <main@@Base+0x52f5>
  4084e4:	cmp    BYTE PTR [r12+0x2],0x20
  4084ea:	jle    409c35 <main@@Base+0x52f5>
  4084f0:	add    r12,0x2
  4084f4:	mov    rax,r12
  4084f7:	jmp    409c43 <main@@Base+0x5303>
  4084fc:	mov    ecx,0x16
  408501:	mov    rdi,r15
  408504:	mov    rsi,r12
  408507:	mov    rdx,r13
  40850a:	call   41f940 <flatcc_json_parser_set_error@@Base>
  40850f:	mov    r14,rax
  408512:	mov    rbp,QWORD PTR [rsp+0x20]
  408517:	movabs r12,0x7465737400000000
  408521:	mov    rdi,QWORD PTR [r15]
  408524:	call   41d220 <flatcc_builder_end_vector@@Base>
  408529:	mov    DWORD PTR [rsp+0x3c],eax
  40852d:	test   eax,eax
  40852f:	je     40ead3 <main@@Base+0xa193>
  408535:	mov    rdi,QWORD PTR [r15]
  408538:	mov    esi,0x18
  40853d:	jmp    4080eb <main@@Base+0x37ab>
  408542:	mov    rdi,r15
  408545:	mov    rsi,r14
  408548:	mov    rdx,r13
  40854b:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  408550:	mov    r14,rax
  408553:	jmp    406993 <main@@Base+0x2053>
  408558:	mov    rdi,QWORD PTR [rsp+0x10]
  40855d:	mov    rsi,r14
  408560:	mov    rdx,rbx
  408563:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  408568:	mov    r14,rax
  40856b:	cmp    r14,rbx
  40856e:	je     4085b9 <main@@Base+0x3c79>
  408570:	cmp    BYTE PTR [r14],0x3a
  408574:	jne    4085b9 <main@@Base+0x3c79>
  408576:	mov    rax,rbx
  408579:	lea    rbx,[r14+0x1]
  40857d:	sub    rax,rbx
  408580:	cmp    rax,0x2
  408584:	jl     40a95f <main@@Base+0x601f>
  40858a:	cmp    BYTE PTR [rbx],0x20
  40858d:	jg     40a974 <main@@Base+0x6034>
  408593:	jne    40a95f <main@@Base+0x601f>
  408599:	cmp    BYTE PTR [r14+0x2],0x20
  40859e:	jle    40a95f <main@@Base+0x601f>
  4085a4:	add    r14,0x2
  4085a8:	mov    rbx,r14
  4085ab:	cmp    r15,rbx
  4085ae:	jne    40a97d <main@@Base+0x603d>
  4085b4:	jmp    40c8bd <main@@Base+0x7f7d>
  4085b9:	mov    ecx,0x4
  4085be:	mov    rdi,QWORD PTR [rsp+0x10]
  4085c3:	mov    rsi,r14
  4085c6:	mov    rdx,rbx
  4085c9:	call   41f940 <flatcc_json_parser_set_error@@Base>
  4085ce:	jmp    40a971 <main@@Base+0x6031>
  4085d3:	cmp    al,0x22
  4085d5:	jne    408713 <main@@Base+0x3dd3>
  4085db:	lea    rsi,[r14+0x11]
  4085df:	mov    rbx,QWORD PTR [rsp+0x8]
  4085e4:	mov    rax,rbx
  4085e7:	sub    rax,rsi
  4085ea:	cmp    rax,0x2
  4085ee:	jl     4086b4 <main@@Base+0x3d74>
  4085f4:	cmp    BYTE PTR [rsi],0x20
  4085f7:	jg     4086c4 <main@@Base+0x3d84>
  4085fd:	jne    4086b4 <main@@Base+0x3d74>
  408603:	cmp    BYTE PTR [rsi+0x1],0x20
  408607:	jle    4086b4 <main@@Base+0x3d74>
  40860d:	add    rsi,0x1
  408611:	cmp    rsi,rbx
  408614:	jne    4086cd <main@@Base+0x3d8d>
  40861a:	jmp    408966 <main@@Base+0x4026>
  40861f:	cmp    al,0x22
  408621:	jne    40886c <main@@Base+0x3f2c>
  408627:	lea    rsi,[r14+0x11]
  40862b:	mov    rbx,QWORD PTR [rsp+0x8]
  408630:	mov    rax,rbx
  408633:	sub    rax,rsi
  408636:	cmp    rax,0x2
  40863a:	jl     40880d <main@@Base+0x3ecd>
  408640:	cmp    BYTE PTR [rsi],0x20
  408643:	jg     40881d <main@@Base+0x3edd>
  408649:	jne    40880d <main@@Base+0x3ecd>
  40864f:	cmp    BYTE PTR [rsi+0x1],0x20
  408653:	jle    40880d <main@@Base+0x3ecd>
  408659:	add    rsi,0x1
  40865d:	cmp    rsi,rbx
  408660:	jne    408826 <main@@Base+0x3ee6>
  408666:	jmp    40897d <main@@Base+0x403d>
  40866b:	cmp    al,0x22
  40866d:	jne    40c5d3 <main@@Base+0x7c93>
  408673:	add    r14,0x12
  408677:	mov    rax,r13
  40867a:	sub    rax,r14
  40867d:	cmp    rax,0x2
  408681:	jl     40987d <main@@Base+0x4f3d>
  408687:	cmp    BYTE PTR [r14],0x20
  40868b:	jg     409890 <main@@Base+0x4f50>
  408691:	jne    40987d <main@@Base+0x4f3d>
  408697:	cmp    BYTE PTR [r14+0x1],0x20
  40869c:	jle    40987d <main@@Base+0x4f3d>
  4086a2:	add    r14,0x1
  4086a6:	cmp    r14,r13
  4086a9:	jne    409895 <main@@Base+0x4f55>
  4086af:	jmp    4098e0 <main@@Base+0x4fa0>
  4086b4:	mov    rdi,QWORD PTR [rsp+0x10]
  4086b9:	mov    rdx,rbx
  4086bc:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  4086c1:	mov    rsi,rax
  4086c4:	cmp    rsi,rbx
  4086c7:	je     408966 <main@@Base+0x4026>
  4086cd:	cmp    BYTE PTR [rsi],0x3a
  4086d0:	jne    408966 <main@@Base+0x4026>
  4086d6:	mov    rax,rbx
  4086d9:	lea    rbx,[rsi+0x1]
  4086dd:	sub    rax,rbx
  4086e0:	cmp    rax,0x2
  4086e4:	jl     40ae1e <main@@Base+0x64de>
  4086ea:	cmp    BYTE PTR [rbx],0x20
  4086ed:	jg     40ae33 <main@@Base+0x64f3>
  4086f3:	jne    40ae1e <main@@Base+0x64de>
  4086f9:	cmp    BYTE PTR [rsi+0x2],0x20
  4086fd:	jle    40ae1e <main@@Base+0x64de>
  408703:	add    rsi,0x2
  408707:	mov    rbx,rsi
  40870a:	cmp    r15,rbx
  40870d:	jne    40ae3c <main@@Base+0x64fc>
  408713:	lea    r15,[r14+0x10]
  408717:	mov    r13,QWORD PTR [rsp+0x8]
  40871c:	mov    rax,r13
  40871f:	sub    rax,r15
  408722:	cmp    rax,0x8
  408726:	jb     408732 <main@@Base+0x3df2>
  408728:	movbe  rcx,QWORD PTR [r15]
  40872d:	jmp    4087c3 <main@@Base+0x3e83>
  408732:	mov    ecx,eax
  408734:	and    cl,0xf
  408737:	add    cl,0xff
  40873a:	cmp    cl,0x7
  40873d:	ja     409b83 <main@@Base+0x5243>
  408743:	movzx  ecx,cl
  408746:	lea    rdx,[rip+0x1b9c3]        # 424110 <_IO_stdin_used@@Base+0x110>
  40874d:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  408751:	add    rcx,rdx
  408754:	xor    r8d,r8d
  408757:	xor    r9d,r9d
  40875a:	xor    edx,edx
  40875c:	xor    esi,esi
  40875e:	xor    ebx,ebx
  408760:	xor    edi,edi
  408762:	xor    ebp,ebp
  408764:	jmp    rcx
  408766:	movsx  r8,BYTE PTR [r14+0x17]
  40876b:	movsx  r9,BYTE PTR [r14+0x16]
  408770:	shl    r9,0x8
  408774:	or     r9,r8
  408777:	movsx  rdx,BYTE PTR [r14+0x15]
  40877c:	shl    rdx,0x10
  408780:	or     rdx,r9
  408783:	movsx  rsi,BYTE PTR [r14+0x14]
  408788:	shl    rsi,0x18
  40878c:	or     rsi,rdx
  40878f:	movsx  rbx,BYTE PTR [r14+0x13]
  408794:	shl    rbx,0x20
  408798:	or     rbx,rsi
  40879b:	movsx  rdi,BYTE PTR [r14+0x12]
  4087a0:	shl    rdi,0x28
  4087a4:	or     rdi,rbx
  4087a7:	movsx  rbp,BYTE PTR [r14+0x11]
  4087ac:	shl    rbp,0x30
  4087b0:	or     rbp,rdi
  4087b3:	movzx  ecx,BYTE PTR [r15]
  4087b7:	shl    rcx,0x38
  4087bb:	or     rcx,rbp
  4087be:	mov    r13,QWORD PTR [rsp+0x8]
  4087c3:	shr    rcx,0x38
  4087c7:	cmp    rcx,0x61
  4087cb:	jne    409b83 <main@@Base+0x5243>
  4087d1:	cmp    rax,0x2
  4087d5:	jl     40c8bd <main@@Base+0x7f7d>
  4087db:	mov    rax,QWORD PTR [rsp+0x28]
  4087e0:	cmp    DWORD PTR [rax],0x0
  4087e3:	mov    al,BYTE PTR [r14+0x11]
  4087e7:	je     40a771 <main@@Base+0x5e31>
  4087ed:	cmp    al,0x21
  4087ef:	jl     4087f9 <main@@Base+0x3eb9>
  4087f1:	cmp    al,0x3a
  4087f3:	jne    40c8bd <main@@Base+0x7f7d>
  4087f9:	add    r14,0x11
  4087fd:	mov    rax,QWORD PTR [rsp+0x28]
  408802:	mov    DWORD PTR [rax],0x0
  408808:	jmp    40a77d <main@@Base+0x5e3d>
  40880d:	mov    rdi,QWORD PTR [rsp+0x10]
  408812:	mov    rdx,rbx
  408815:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40881a:	mov    rsi,rax
  40881d:	cmp    rsi,rbx
  408820:	je     40897d <main@@Base+0x403d>
  408826:	cmp    BYTE PTR [rsi],0x3a
  408829:	jne    40897d <main@@Base+0x403d>
  40882f:	mov    rax,rbx
  408832:	lea    rbx,[rsi+0x1]
  408836:	sub    rax,rbx
  408839:	cmp    rax,0x2
  40883d:	jl     40aeaa <main@@Base+0x656a>
  408843:	cmp    BYTE PTR [rbx],0x20
  408846:	jg     40aebf <main@@Base+0x657f>
  40884c:	jne    40aeaa <main@@Base+0x656a>
  408852:	cmp    BYTE PTR [rsi+0x2],0x20
  408856:	jle    40aeaa <main@@Base+0x656a>
  40885c:	add    rsi,0x2
  408860:	mov    rbx,rsi
  408863:	cmp    r15,rbx
  408866:	jne    40aec8 <main@@Base+0x6588>
  40886c:	lea    r15,[r14+0x10]
  408870:	mov    r13,QWORD PTR [rsp+0x8]
  408875:	mov    rax,r13
  408878:	sub    rax,r15
  40887b:	cmp    rax,0x8
  40887f:	jb     40888b <main@@Base+0x3f4b>
  408881:	movbe  rcx,QWORD PTR [r15]
  408886:	jmp    40891c <main@@Base+0x3fdc>
  40888b:	mov    ecx,eax
  40888d:	and    cl,0xf
  408890:	add    cl,0xff
  408893:	cmp    cl,0x7
  408896:	ja     409b83 <main@@Base+0x5243>
  40889c:	movzx  ecx,cl
  40889f:	lea    rdx,[rip+0x1b84a]        # 4240f0 <_IO_stdin_used@@Base+0xf0>
  4088a6:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  4088aa:	add    rcx,rdx
  4088ad:	xor    r8d,r8d
  4088b0:	xor    r9d,r9d
  4088b3:	xor    edx,edx
  4088b5:	xor    esi,esi
  4088b7:	xor    ebx,ebx
  4088b9:	xor    edi,edi
  4088bb:	xor    ebp,ebp
  4088bd:	jmp    rcx
  4088bf:	movsx  r8,BYTE PTR [r14+0x17]
  4088c4:	movsx  r9,BYTE PTR [r14+0x16]
  4088c9:	shl    r9,0x8
  4088cd:	or     r9,r8
  4088d0:	movsx  rdx,BYTE PTR [r14+0x15]
  4088d5:	shl    rdx,0x10
  4088d9:	or     rdx,r9
  4088dc:	movsx  rsi,BYTE PTR [r14+0x14]
  4088e1:	shl    rsi,0x18
  4088e5:	or     rsi,rdx
  4088e8:	movsx  rbx,BYTE PTR [r14+0x13]
  4088ed:	shl    rbx,0x20
  4088f1:	or     rbx,rsi
  4088f4:	movsx  rdi,BYTE PTR [r14+0x12]
  4088f9:	shl    rdi,0x28
  4088fd:	or     rdi,rbx
  408900:	movsx  rbp,BYTE PTR [r14+0x11]
  408905:	shl    rbp,0x30
  408909:	or     rbp,rdi
  40890c:	movzx  ecx,BYTE PTR [r15]
  408910:	shl    rcx,0x38
  408914:	or     rcx,rbp
  408917:	mov    r13,QWORD PTR [rsp+0x8]
  40891c:	shr    rcx,0x38
  408920:	cmp    rcx,0x61
  408924:	jne    409b83 <main@@Base+0x5243>
  40892a:	cmp    rax,0x2
  40892e:	jl     40c8bd <main@@Base+0x7f7d>
  408934:	mov    rax,QWORD PTR [rsp+0x28]
  408939:	cmp    DWORD PTR [rax],0x0
  40893c:	mov    al,BYTE PTR [r14+0x11]
  408940:	je     40a7bf <main@@Base+0x5e7f>
  408946:	cmp    al,0x21
  408948:	jl     408952 <main@@Base+0x4012>
  40894a:	cmp    al,0x3a
  40894c:	jne    40c8bd <main@@Base+0x7f7d>
  408952:	add    r14,0x11
  408956:	mov    rax,QWORD PTR [rsp+0x28]
  40895b:	mov    DWORD PTR [rax],0x0
  408961:	jmp    40a7cb <main@@Base+0x5e8b>
  408966:	mov    ecx,0x4
  40896b:	mov    rdi,QWORD PTR [rsp+0x10]
  408970:	mov    rdx,rbx
  408973:	call   41f940 <flatcc_json_parser_set_error@@Base>
  408978:	jmp    40ae30 <main@@Base+0x64f0>
  40897d:	mov    ecx,0x4
  408982:	mov    rdi,QWORD PTR [rsp+0x10]
  408987:	mov    rdx,rbx
  40898a:	call   41f940 <flatcc_json_parser_set_error@@Base>
  40898f:	jmp    40aebc <main@@Base+0x657c>
  408994:	mov    rdi,r15
  408997:	mov    rsi,r12
  40899a:	mov    rdx,QWORD PTR [rsp+0x8]
  40899f:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  4089a4:	mov    r12,rax
  4089a7:	cmp    r14,r12
  4089aa:	je     40a2c3 <main@@Base+0x5983>
  4089b0:	mov    QWORD PTR [rsp+0x30],0x0
  4089b9:	mov    DWORD PTR [rsp+0x40],0x0
  4089c1:	mov    WORD PTR [rsp+0x1c],0x0
  4089c8:	mov    rdx,QWORD PTR [rsp+0x8]
  4089cd:	cmp    r12,rdx
  4089d0:	je     408a10 <main@@Base+0x40d0>
  4089d2:	mov    rdi,r15
  4089d5:	mov    rsi,r12
  4089d8:	lea    rcx,[rsp+0x40]
  4089dd:	lea    r8,[rsp+0x30]
  4089e2:	call   4215e0 <flatcc_json_parser_integer@@Base>
  4089e7:	cmp    rax,r12
  4089ea:	mov    rbp,QWORD PTR [rsp+0x20]
  4089ef:	je     408a21 <main@@Base+0x40e1>
  4089f1:	mov    r14,rax
  4089f4:	mov    rbx,QWORD PTR [rsp+0x30]
  4089f9:	cmp    DWORD PTR [rsp+0x40],0x0
  4089fe:	je     408a2d <main@@Base+0x40ed>
  408a00:	cmp    rbx,0x8001
  408a07:	jb     408a57 <main@@Base+0x4117>
  408a09:	mov    ecx,0x8
  408a0e:	jmp    408a3b <main@@Base+0x40fb>
  408a10:	xor    ebx,ebx
  408a12:	mov    r14,rdx
  408a15:	mov    rbp,QWORD PTR [rsp+0x20]
  408a1a:	cmp    r12,r14
  408a1d:	jne    408a9d <main@@Base+0x415d>
  408a1f:	jmp    408a64 <main@@Base+0x4124>
  408a21:	xor    ebx,ebx
  408a23:	mov    r14,r12
  408a26:	cmp    r12,r14
  408a29:	jne    408a9d <main@@Base+0x415d>
  408a2b:	jmp    408a64 <main@@Base+0x4124>
  408a2d:	cmp    rbx,0x8000
  408a34:	jb     408a5a <main@@Base+0x411a>
  408a36:	mov    ecx,0x7
  408a3b:	mov    rdi,r15
  408a3e:	mov    rsi,r14
  408a41:	mov    rdx,QWORD PTR [rsp+0x8]
  408a46:	call   41f940 <flatcc_json_parser_set_error@@Base>
  408a4b:	mov    r14,rax
  408a4e:	xor    ebx,ebx
  408a50:	cmp    r12,r14
  408a53:	jne    408a9d <main@@Base+0x415d>
  408a55:	jmp    408a64 <main@@Base+0x4124>
  408a57:	neg    rbx
  408a5a:	mov    WORD PTR [rsp+0x1c],bx
  408a5f:	cmp    r12,r14
  408a62:	jne    408a9d <main@@Base+0x415d>
  408a64:	mov    rdi,r15
  408a67:	mov    rsi,r12
  408a6a:	mov    rbx,QWORD PTR [rsp+0x8]
  408a6f:	mov    rdx,rbx
  408a72:	lea    rcx,[rip+0x226a7]        # 42b120 <filename@@Base+0x50>
  408a79:	lea    r8,[rsp+0x1c]
  408a7e:	call   410430 <main@@Base+0xbaf0>
  408a83:	mov    r14,rax
  408a86:	cmp    rax,r12
  408a89:	je     40eaa5 <main@@Base+0xa165>
  408a8f:	cmp    r14,rbx
  408a92:	je     40eaa5 <main@@Base+0xa165>
  408a98:	movzx  ebx,WORD PTR [rsp+0x1c]
  408a9d:	movzx  eax,bx
  408aa0:	cmp    eax,0x64
  408aa3:	movabs r12,0x7465737400000000
  408aad:	jne    408aba <main@@Base+0x417a>
  408aaf:	test   BYTE PTR [r15+0x10],0x2
  408ab4:	je     409a41 <main@@Base+0x5101>
  408aba:	mov    rdi,QWORD PTR [r15]
  408abd:	mov    esi,0x2
  408ac2:	mov    edx,0x2
  408ac7:	mov    ecx,0x2
  408acc:	call   41d880 <flatcc_builder_table_add@@Base>
  408ad1:	test   rax,rax
  408ad4:	je     40eaa5 <main@@Base+0xa165>
  408ada:	mov    WORD PTR [rax],bx
  408add:	jmp    409a41 <main@@Base+0x5101>
  408ae2:	mov    rdi,r15
  408ae5:	mov    rsi,r12
  408ae8:	mov    rdx,r13
  408aeb:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  408af0:	mov    r12,rax
  408af3:	cmp    r14,r12
  408af6:	je     408b4d <main@@Base+0x420d>
  408af8:	mov    rdi,QWORD PTR [r15]
  408afb:	xor    esi,esi
  408afd:	mov    edx,0x20
  408b02:	mov    ecx,0x10
  408b07:	call   41d880 <flatcc_builder_table_add@@Base>
  408b0c:	test   rax,rax
  408b0f:	je     4049f1 <main@@Base+0xb1>
  408b15:	cmp    r12,r13
  408b18:	je     408b58 <main@@Base+0x4218>
  408b1a:	cmp    BYTE PTR [r12],0x7b
  408b1f:	jne    408b58 <main@@Base+0x4218>
  408b21:	mov    r14,rax
  408b24:	lea    rax,[r12+0x1]
  408b29:	mov    rcx,r13
  408b2c:	sub    rcx,rax
  408b2f:	cmp    rcx,0x2
  408b33:	jl     408b70 <main@@Base+0x4230>
  408b35:	cmp    BYTE PTR [rax],0x20
  408b38:	jg     408b7e <main@@Base+0x423e>
  408b3a:	jne    408b70 <main@@Base+0x4230>
  408b3c:	cmp    BYTE PTR [r12+0x2],0x20
  408b42:	jle    408b70 <main@@Base+0x4230>
  408b44:	add    r12,0x2
  408b48:	mov    rax,r12
  408b4b:	jmp    408b7e <main@@Base+0x423e>
  408b4d:	mov    rdi,r15
  408b50:	mov    rsi,r14
  408b53:	jmp    40c5de <main@@Base+0x7c9e>
  408b58:	mov    ecx,0x15
  408b5d:	mov    rdi,r15
  408b60:	mov    rsi,r12
  408b63:	mov    rdx,r13
  408b66:	call   41f940 <flatcc_json_parser_set_error@@Base>
  408b6b:	jmp    40c5e6 <main@@Base+0x7ca6>
  408b70:	mov    rdi,r15
  408b73:	mov    rsi,rax
  408b76:	mov    rdx,r13
  408b79:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  408b7e:	mov    rsi,r13
  408b81:	cmp    rax,r13
  408b84:	movabs r12,0x7465737400000000
  408b8e:	je     408bd4 <main@@Base+0x4294>
  408b90:	cmp    BYTE PTR [rax],0x7d
  408b93:	jne    408bd1 <main@@Base+0x4291>
  408b95:	lea    r14,[rax+0x1]
  408b99:	mov    rcx,r13
  408b9c:	sub    rcx,r14
  408b9f:	cmp    rcx,0x2
  408ba3:	mov    rbp,QWORD PTR [rsp+0x20]
  408ba8:	jl     409799 <main@@Base+0x4e59>
  408bae:	cmp    BYTE PTR [r14],0x20
  408bb2:	jg     40c600 <main@@Base+0x7cc0>
  408bb8:	jne    409799 <main@@Base+0x4e59>
  408bbe:	cmp    BYTE PTR [rax+0x2],0x20
  408bc2:	jle    409799 <main@@Base+0x4e59>
  408bc8:	add    rax,0x2
  408bcc:	jmp    4097a7 <main@@Base+0x4e67>
  408bd1:	mov    rsi,rax
  408bd4:	mov    r12,r14
  408bd7:	add    r12,0x1a
  408bdb:	mov    r15,r13
  408bde:	cmp    rsi,r13
  408be1:	je     408c24 <main@@Base+0x42e4>
  408be3:	movzx  eax,BYTE PTR [rsi]
  408be6:	cmp    al,0x2e
  408be8:	je     408bff <main@@Base+0x42bf>
  408bea:	cmp    al,0x22
  408bec:	jne    408c16 <main@@Base+0x42d6>
  408bee:	add    rsi,0x1
  408bf2:	mov    rax,QWORD PTR [rsp+0x28]
  408bf7:	mov    DWORD PTR [rax],0x0
  408bfd:	jmp    408c21 <main@@Base+0x42e1>
  408bff:	mov    ecx,0x5
  408c04:	mov    rdi,QWORD PTR [rsp+0x10]
  408c09:	mov    rdx,r13
  408c0c:	call   41f940 <flatcc_json_parser_set_error@@Base>
  408c11:	mov    r15,rax
  408c14:	jmp    408c24 <main@@Base+0x42e4>
  408c16:	mov    rax,QWORD PTR [rsp+0x28]
  408c1b:	mov    DWORD PTR [rax],0x1
  408c21:	mov    r15,rsi
  408c24:	mov    rcx,r13
  408c27:	sub    rcx,r15
  408c2a:	cmp    rcx,0x8
  408c2e:	jb     408c3a <main@@Base+0x42fa>
  408c30:	movbe  rax,QWORD PTR [r15]
  408c35:	jmp    408cc8 <main@@Base+0x4388>
  408c3a:	mov    eax,ecx
  408c3c:	and    al,0xf
  408c3e:	add    al,0xff
  408c40:	cmp    al,0x7
  408c42:	ja     409109 <main@@Base+0x47c9>
  408c48:	movzx  eax,al
  408c4b:	lea    rdx,[rip+0x1b65e]        # 4242b0 <_IO_stdin_used@@Base+0x2b0>
  408c52:	movsxd rax,DWORD PTR [rdx+rax*4]
  408c56:	add    rax,rdx
  408c59:	xor    r8d,r8d
  408c5c:	xor    r9d,r9d
  408c5f:	xor    edx,edx
  408c61:	xor    esi,esi
  408c63:	xor    ebx,ebx
  408c65:	xor    ebp,ebp
  408c67:	xor    edi,edi
  408c69:	jmp    rax
  408c6b:	movsx  r8,BYTE PTR [r15+0x7]
  408c70:	movsx  r9,BYTE PTR [r15+0x6]
  408c75:	shl    r9,0x8
  408c79:	or     r9,r8
  408c7c:	movsx  rdx,BYTE PTR [r15+0x5]
  408c81:	shl    rdx,0x10
  408c85:	or     rdx,r9
  408c88:	movsx  rsi,BYTE PTR [r15+0x4]
  408c8d:	shl    rsi,0x18
  408c91:	or     rsi,rdx
  408c94:	movsx  rbx,BYTE PTR [r15+0x3]
  408c99:	shl    rbx,0x20
  408c9d:	or     rbx,rsi
  408ca0:	movsx  rbp,BYTE PTR [r15+0x2]
  408ca5:	shl    rbp,0x28
  408ca9:	or     rbp,rbx
  408cac:	movsx  rdi,BYTE PTR [r15+0x1]
  408cb1:	shl    rdi,0x30
  408cb5:	or     rdi,rbp
  408cb8:	movzx  eax,BYTE PTR [r15]
  408cbc:	shl    rax,0x38
  408cc0:	or     rax,rdi
  408cc3:	mov    r13,QWORD PTR [rsp+0x8]
  408cc8:	movabs rdx,0x7465737400000000
  408cd2:	lea    rdx,[rdx+0x33000000]
  408cd9:	cmp    rax,rdx
  408cdc:	jae    408d4d <main@@Base+0x440d>
  408cde:	and    rax,0xffffffffff000000
  408ce4:	movabs rdx,0x7465737431000000
  408cee:	cmp    rax,rdx
  408cf1:	je     408e29 <main@@Base+0x44e9>
  408cf7:	movabs rdx,0x7465737432000000
  408d01:	cmp    rax,rdx
  408d04:	jne    409109 <main@@Base+0x47c9>
  408d0a:	mov    rbx,r15
  408d0d:	cmp    rcx,0x6
  408d11:	jl     40916e <main@@Base+0x482e>
  408d17:	mov    rax,QWORD PTR [rsp+0x28]
  408d1c:	cmp    DWORD PTR [rax],0x0
  408d1f:	movzx  eax,BYTE PTR [r15+0x5]
  408d24:	je     408f0a <main@@Base+0x45ca>
  408d2a:	cmp    al,0x21
  408d2c:	jl     408d39 <main@@Base+0x43f9>
  408d2e:	mov    rbx,r15
  408d31:	cmp    al,0x3a
  408d33:	jne    40916e <main@@Base+0x482e>
  408d39:	lea    rsi,[r15+0x5]
  408d3d:	mov    rax,QWORD PTR [rsp+0x28]
  408d42:	mov    DWORD PTR [rax],0x0
  408d48:	jmp    408f19 <main@@Base+0x45d9>
  408d4d:	movabs rsi,0x7800000000000000
  408d57:	cmp    rax,rsi
  408d5a:	jae    408db0 <main@@Base+0x4470>
  408d5c:	and    rax,0xffffffffff000000
  408d62:	cmp    rax,rdx
  408d65:	jne    409109 <main@@Base+0x47c9>
  408d6b:	mov    rax,r15
  408d6e:	cmp    rcx,0x6
  408d72:	jl     40958a <main@@Base+0x4c4a>
  408d78:	mov    rax,QWORD PTR [rsp+0x28]
  408d7d:	cmp    DWORD PTR [rax],0x0
  408d80:	movzx  ecx,BYTE PTR [r15+0x5]
  408d85:	je     409076 <main@@Base+0x4736>
  408d8b:	cmp    cl,0x21
  408d8e:	jl     408d9c <main@@Base+0x445c>
  408d90:	mov    rax,r15
  408d93:	cmp    cl,0x3a
  408d96:	jne    40958a <main@@Base+0x4c4a>
  408d9c:	lea    rsi,[r15+0x5]
  408da0:	mov    rax,QWORD PTR [rsp+0x28]
  408da5:	mov    DWORD PTR [rax],0x0
  408dab:	jmp    409086 <main@@Base+0x4746>
  408db0:	mov    rdx,rax
  408db3:	movabs rsi,0xff00000000000000
  408dbd:	and    rdx,rsi
  408dc0:	movabs rsi,0x7900000000000000
  408dca:	cmp    rax,rsi
  408dcd:	jae    408e6c <main@@Base+0x452c>
  408dd3:	movabs rax,0x7800000000000000
  408ddd:	cmp    rdx,rax
  408de0:	jne    409109 <main@@Base+0x47c9>
  408de6:	mov    rbx,r15
  408de9:	cmp    rcx,0x2
  408ded:	jl     4094f5 <main@@Base+0x4bb5>
  408df3:	mov    rax,QWORD PTR [rsp+0x28]
  408df8:	cmp    DWORD PTR [rax],0x0
  408dfb:	movzx  eax,BYTE PTR [r15+0x1]
  408e00:	je     409119 <main@@Base+0x47d9>
  408e06:	cmp    al,0x21
  408e08:	jl     408e15 <main@@Base+0x44d5>
  408e0a:	mov    rbx,r15
  408e0d:	cmp    al,0x3a
  408e0f:	jne    4094f5 <main@@Base+0x4bb5>
  408e15:	lea    rsi,[r15+0x1]
  408e19:	mov    rax,QWORD PTR [rsp+0x28]
  408e1e:	mov    DWORD PTR [rax],0x0
  408e24:	jmp    409128 <main@@Base+0x47e8>
  408e29:	mov    rbx,r15
  408e2c:	cmp    rcx,0x6
  408e30:	jl     409276 <main@@Base+0x4936>
  408e36:	mov    rax,QWORD PTR [rsp+0x28]
  408e3b:	cmp    DWORD PTR [rax],0x0
  408e3e:	movzx  eax,BYTE PTR [r15+0x5]
  408e43:	je     408f45 <main@@Base+0x4605>
  408e49:	cmp    al,0x21
  408e4b:	jl     408e58 <main@@Base+0x4518>
  408e4d:	mov    rbx,r15
  408e50:	cmp    al,0x3a
  408e52:	jne    409276 <main@@Base+0x4936>
  408e58:	lea    rsi,[r15+0x5]
  408e5c:	mov    rax,QWORD PTR [rsp+0x28]
  408e61:	mov    DWORD PTR [rax],0x0
  408e67:	jmp    408f54 <main@@Base+0x4614>
  408e6c:	cmp    rdx,rsi
  408e6f:	je     408ec7 <main@@Base+0x4587>
  408e71:	movabs rax,0x7a00000000000000
  408e7b:	cmp    rdx,rax
  408e7e:	jne    409109 <main@@Base+0x47c9>
  408e84:	mov    rbx,r15
  408e87:	cmp    rcx,0x2
  408e8b:	jl     4095c3 <main@@Base+0x4c83>
  408e91:	mov    rax,QWORD PTR [rsp+0x28]
  408e96:	cmp    DWORD PTR [rax],0x0
  408e99:	movzx  eax,BYTE PTR [r15+0x1]
  408e9e:	je     4092e6 <main@@Base+0x49a6>
  408ea4:	cmp    al,0x21
  408ea6:	jl     408eb3 <main@@Base+0x4573>
  408ea8:	mov    rbx,r15
  408eab:	cmp    al,0x3a
  408ead:	jne    4095c3 <main@@Base+0x4c83>
  408eb3:	lea    rsi,[r15+0x1]
  408eb7:	mov    rax,QWORD PTR [rsp+0x28]
  408ebc:	mov    DWORD PTR [rax],0x0
  408ec2:	jmp    4092f5 <main@@Base+0x49b5>
  408ec7:	mov    rbx,r15
  408eca:	cmp    rcx,0x2
  408ece:	jl     409647 <main@@Base+0x4d07>
  408ed4:	mov    rax,QWORD PTR [rsp+0x28]
  408ed9:	cmp    DWORD PTR [rax],0x0
  408edc:	movzx  eax,BYTE PTR [r15+0x1]
  408ee1:	je     409320 <main@@Base+0x49e0>
  408ee7:	cmp    al,0x21
  408ee9:	jl     408ef6 <main@@Base+0x45b6>
  408eeb:	mov    rbx,r15
  408eee:	cmp    al,0x3a
  408ef0:	jne    409647 <main@@Base+0x4d07>
  408ef6:	lea    rsi,[r15+0x1]
  408efa:	mov    rax,QWORD PTR [rsp+0x28]
  408eff:	mov    DWORD PTR [rax],0x0
  408f05:	jmp    40932f <main@@Base+0x49ef>
  408f0a:	mov    rbx,r15
  408f0d:	cmp    al,0x22
  408f0f:	jne    40916e <main@@Base+0x482e>
  408f15:	lea    rsi,[r15+0x6]
  408f19:	mov    rbx,QWORD PTR [rsp+0x8]
  408f1e:	mov    rax,rbx
  408f21:	sub    rax,rsi
  408f24:	cmp    rax,0x2
  408f28:	jl     408f88 <main@@Base+0x4648>
  408f2a:	cmp    BYTE PTR [rsi],0x20
  408f2d:	jg     408f98 <main@@Base+0x4658>
  408f2f:	jne    408f88 <main@@Base+0x4648>
  408f31:	cmp    BYTE PTR [rsi+0x1],0x20
  408f35:	jle    408f88 <main@@Base+0x4648>
  408f37:	add    rsi,0x1
  408f3b:	cmp    rsi,rbx
  408f3e:	jne    408fa1 <main@@Base+0x4661>
  408f40:	jmp    409048 <main@@Base+0x4708>
  408f45:	mov    rbx,r15
  408f48:	cmp    al,0x22
  408f4a:	jne    409276 <main@@Base+0x4936>
  408f50:	lea    rsi,[r15+0x6]
  408f54:	mov    rbx,QWORD PTR [rsp+0x8]
  408f59:	mov    rax,rbx
  408f5c:	sub    rax,rsi
  408f5f:	cmp    rax,0x2
  408f63:	jl     408fec <main@@Base+0x46ac>
  408f69:	cmp    BYTE PTR [rsi],0x20
  408f6c:	jg     408ffc <main@@Base+0x46bc>
  408f72:	jne    408fec <main@@Base+0x46ac>
  408f74:	cmp    BYTE PTR [rsi+0x1],0x20
  408f78:	jle    408fec <main@@Base+0x46ac>
  408f7a:	add    rsi,0x1
  408f7e:	cmp    rsi,rbx
  408f81:	jne    409001 <main@@Base+0x46c1>
  408f83:	jmp    40905f <main@@Base+0x471f>
  408f88:	mov    rdi,QWORD PTR [rsp+0x10]
  408f8d:	mov    rdx,rbx
  408f90:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  408f95:	mov    rsi,rax
  408f98:	cmp    rsi,rbx
  408f9b:	je     409048 <main@@Base+0x4708>
  408fa1:	cmp    BYTE PTR [rsi],0x3a
  408fa4:	jne    409048 <main@@Base+0x4708>
  408faa:	mov    rax,rbx
  408fad:	lea    rbx,[rsi+0x1]
  408fb1:	sub    rax,rbx
  408fb4:	cmp    rax,0x2
  408fb8:	jl     409159 <main@@Base+0x4819>
  408fbe:	cmp    BYTE PTR [rbx],0x20
  408fc1:	jg     40916e <main@@Base+0x482e>
  408fc7:	jne    409159 <main@@Base+0x4819>
  408fcd:	cmp    BYTE PTR [rsi+0x2],0x20
  408fd1:	jle    409159 <main@@Base+0x4819>
  408fd7:	add    rsi,0x2
  408fdb:	mov    rbx,rsi
  408fde:	cmp    r15,rbx
  408fe1:	jne    409177 <main@@Base+0x4837>
  408fe7:	jmp    4096b7 <main@@Base+0x4d77>
  408fec:	mov    rdi,QWORD PTR [rsp+0x10]
  408ff1:	mov    rdx,rbx
  408ff4:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  408ff9:	mov    rsi,rax
  408ffc:	cmp    rsi,rbx
  408fff:	je     40905f <main@@Base+0x471f>
  409001:	cmp    BYTE PTR [rsi],0x3a
  409004:	jne    40905f <main@@Base+0x471f>
  409006:	mov    rax,rbx
  409009:	lea    rbx,[rsi+0x1]
  40900d:	sub    rax,rbx
  409010:	cmp    rax,0x2
  409014:	jl     409261 <main@@Base+0x4921>
  40901a:	cmp    BYTE PTR [rbx],0x20
  40901d:	jg     409276 <main@@Base+0x4936>
  409023:	jne    409261 <main@@Base+0x4921>
  409029:	cmp    BYTE PTR [rsi+0x2],0x20
  40902d:	jle    409261 <main@@Base+0x4921>
  409033:	add    rsi,0x2
  409037:	mov    rbx,rsi
  40903a:	cmp    r15,rbx
  40903d:	jne    40927f <main@@Base+0x493f>
  409043:	jmp    4096b7 <main@@Base+0x4d77>
  409048:	mov    ecx,0x4
  40904d:	mov    rdi,QWORD PTR [rsp+0x10]
  409052:	mov    rdx,rbx
  409055:	call   41f940 <flatcc_json_parser_set_error@@Base>
  40905a:	jmp    40916b <main@@Base+0x482b>
  40905f:	mov    ecx,0x4
  409064:	mov    rdi,QWORD PTR [rsp+0x10]
  409069:	mov    rdx,rbx
  40906c:	call   41f940 <flatcc_json_parser_set_error@@Base>
  409071:	jmp    409273 <main@@Base+0x4933>
  409076:	mov    rax,r15
  409079:	cmp    cl,0x22
  40907c:	jne    40958a <main@@Base+0x4c4a>
  409082:	lea    rsi,[r15+0x6]
  409086:	mov    rax,r13
  409089:	sub    rax,rsi
  40908c:	cmp    rax,0x2
  409090:	jl     4090aa <main@@Base+0x476a>
  409092:	cmp    BYTE PTR [rsi],0x20
  409095:	jg     4090ba <main@@Base+0x477a>
  409097:	jne    4090aa <main@@Base+0x476a>
  409099:	cmp    BYTE PTR [rsi+0x1],0x20
  40909d:	jle    4090aa <main@@Base+0x476a>
  40909f:	add    rsi,0x1
  4090a3:	cmp    rsi,r13
  4090a6:	jne    4090bf <main@@Base+0x477f>
  4090a8:	jmp    4090ee <main@@Base+0x47ae>
  4090aa:	mov    rdi,QWORD PTR [rsp+0x10]
  4090af:	mov    rdx,r13
  4090b2:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  4090b7:	mov    rsi,rax
  4090ba:	cmp    rsi,r13
  4090bd:	je     4090ee <main@@Base+0x47ae>
  4090bf:	cmp    BYTE PTR [rsi],0x3a
  4090c2:	jne    4090ee <main@@Base+0x47ae>
  4090c4:	lea    rax,[rsi+0x1]
  4090c8:	sub    r13,rax
  4090cb:	cmp    r13,0x2
  4090cf:	jl     409575 <main@@Base+0x4c35>
  4090d5:	cmp    BYTE PTR [rax],0x20
  4090d8:	jle    409561 <main@@Base+0x4c21>
  4090de:	mov    r13,QWORD PTR [rsp+0x8]
  4090e3:	cmp    r15,rax
  4090e6:	jne    409593 <main@@Base+0x4c53>
  4090ec:	jmp    409109 <main@@Base+0x47c9>
  4090ee:	mov    ecx,0x4
  4090f3:	mov    rdi,QWORD PTR [rsp+0x10]
  4090f8:	mov    rdx,r13
  4090fb:	call   41f940 <flatcc_json_parser_set_error@@Base>
  409100:	cmp    r15,rax
  409103:	jne    409593 <main@@Base+0x4c53>
  409109:	mov    rdi,QWORD PTR [rsp+0x10]
  40910e:	mov    rsi,r15
  409111:	mov    r15,rdi
  409114:	jmp    4096c7 <main@@Base+0x4d87>
  409119:	mov    rbx,r15
  40911c:	cmp    al,0x22
  40911e:	jne    4094f5 <main@@Base+0x4bb5>
  409124:	lea    rsi,[r15+0x2]
  409128:	mov    rbx,QWORD PTR [rsp+0x8]
  40912d:	mov    rax,rbx
  409130:	sub    rax,rsi
  409133:	cmp    rax,0x2
  409137:	jl     409480 <main@@Base+0x4b40>
  40913d:	cmp    BYTE PTR [rsi],0x20
  409140:	jle    409468 <main@@Base+0x4b28>
  409146:	mov    rbx,QWORD PTR [rsp+0x8]
  40914b:	cmp    rsi,rbx
  40914e:	jne    409495 <main@@Base+0x4b55>
  409154:	jmp    4094ca <main@@Base+0x4b8a>
  409159:	mov    rdi,QWORD PTR [rsp+0x10]
  40915e:	mov    rsi,rbx
  409161:	mov    rdx,QWORD PTR [rsp+0x8]
  409166:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40916b:	mov    rbx,rax
  40916e:	cmp    r15,rbx
  409171:	je     4096b7 <main@@Base+0x4d77>
  409177:	mov    QWORD PTR [rsp+0x30],0x0
  409180:	mov    DWORD PTR [rsp+0x40],0x0
  409188:	mov    BYTE PTR [rsp+0x1c],0x0
  40918d:	mov    rdx,QWORD PTR [rsp+0x8]
  409192:	cmp    rbx,rdx
  409195:	je     4091d2 <main@@Base+0x4892>
  409197:	mov    r15,QWORD PTR [rsp+0x10]
  40919c:	mov    rdi,r15
  40919f:	mov    rsi,rbx
  4091a2:	lea    rcx,[rsp+0x40]
  4091a7:	lea    r8,[rsp+0x30]
  4091ac:	call   4215e0 <flatcc_json_parser_integer@@Base>
  4091b1:	cmp    rax,rbx
  4091b4:	je     4091e3 <main@@Base+0x48a3>
  4091b6:	mov    rcx,QWORD PTR [rsp+0x30]
  4091bb:	cmp    DWORD PTR [rsp+0x40],0x0
  4091c0:	je     4091ef <main@@Base+0x48af>
  4091c2:	cmp    rcx,0x81
  4091c9:	jb     409216 <main@@Base+0x48d6>
  4091cb:	mov    ecx,0x8
  4091d0:	jmp    4091fd <main@@Base+0x48bd>
  4091d2:	xor    ecx,ecx
  4091d4:	mov    rax,rdx
  4091d7:	mov    r15,QWORD PTR [rsp+0x10]
  4091dc:	cmp    rbx,rax
  4091df:	jne    409258 <main@@Base+0x4918>
  4091e1:	jmp    409222 <main@@Base+0x48e2>
  4091e3:	xor    ecx,ecx
  4091e5:	mov    rax,rbx
  4091e8:	cmp    rbx,rax
  4091eb:	jne    409258 <main@@Base+0x4918>
  4091ed:	jmp    409222 <main@@Base+0x48e2>
  4091ef:	cmp    rcx,0x80
  4091f6:	jb     409219 <main@@Base+0x48d9>
  4091f8:	mov    ecx,0x7
  4091fd:	mov    rdi,r15
  409200:	mov    rsi,rax
  409203:	mov    rdx,QWORD PTR [rsp+0x8]
  409208:	call   41f940 <flatcc_json_parser_set_error@@Base>
  40920d:	xor    ecx,ecx
  40920f:	cmp    rbx,rax
  409212:	jne    409258 <main@@Base+0x4918>
  409214:	jmp    409222 <main@@Base+0x48e2>
  409216:	neg    rcx
  409219:	mov    BYTE PTR [rsp+0x1c],cl
  40921d:	cmp    rbx,rax
  409220:	jne    409258 <main@@Base+0x4918>
  409222:	mov    rdi,r15
  409225:	mov    rsi,rbx
  409228:	mov    rbp,QWORD PTR [rsp+0x8]
  40922d:	mov    rdx,rbp
  409230:	lea    rcx,[rip+0x22169]        # 42b3a0 <filename@@Base+0x2d0>
  409237:	lea    r8,[rsp+0x1c]
  40923c:	call   410010 <main@@Base+0xb6d0>
  409241:	cmp    rax,rbx
  409244:	je     40d154 <main@@Base+0x8814>
  40924a:	cmp    rax,rbp
  40924d:	je     40d154 <main@@Base+0x8814>
  409253:	movzx  ecx,BYTE PTR [rsp+0x1c]
  409258:	mov    BYTE PTR [r14+0x18],cl
  40925c:	jmp    4096b0 <main@@Base+0x4d70>
  409261:	mov    rdi,QWORD PTR [rsp+0x10]
  409266:	mov    rsi,rbx
  409269:	mov    rdx,QWORD PTR [rsp+0x8]
  40926e:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  409273:	mov    rbx,rax
  409276:	cmp    r15,rbx
  409279:	je     4096b7 <main@@Base+0x4d77>
  40927f:	mov    QWORD PTR [rsp+0x30],0x0
  409288:	mov    r15,QWORD PTR [rsp+0x10]
  40928d:	mov    rdi,r15
  409290:	mov    rsi,rbx
  409293:	mov    rdx,QWORD PTR [rsp+0x8]
  409298:	lea    rcx,[rsp+0x30]
  40929d:	call   420ce0 <flatcc_json_parser_double@@Base>
  4092a2:	cmp    rbx,rax
  4092a5:	jne    4092d8 <main@@Base+0x4998>
  4092a7:	mov    rdi,r15
  4092aa:	mov    rsi,rbx
  4092ad:	mov    rbp,QWORD PTR [rsp+0x8]
  4092b2:	mov    rdx,rbp
  4092b5:	lea    rcx,[rip+0x22104]        # 42b3c0 <filename@@Base+0x2f0>
  4092bc:	lea    r8,[rsp+0x30]
  4092c1:	call   414c40 <main@@Base+0x10300>
  4092c6:	cmp    rax,rbx
  4092c9:	je     40d154 <main@@Base+0x8814>
  4092cf:	cmp    rax,rbp
  4092d2:	je     40d154 <main@@Base+0x8814>
  4092d8:	mov    rcx,QWORD PTR [rsp+0x30]
  4092dd:	mov    QWORD PTR [r14+0x10],rcx
  4092e1:	jmp    4096b0 <main@@Base+0x4d70>
  4092e6:	mov    rbx,r15
  4092e9:	cmp    al,0x22
  4092eb:	jne    4095c3 <main@@Base+0x4c83>
  4092f1:	lea    rsi,[r15+0x2]
  4092f5:	mov    rax,QWORD PTR [rsp+0x8]
  4092fa:	sub    rax,rsi
  4092fd:	cmp    rax,0x2
  409301:	jl     40936a <main@@Base+0x4a2a>
  409303:	cmp    BYTE PTR [rsi],0x20
  409306:	jg     40937c <main@@Base+0x4a3c>
  409308:	jne    40936a <main@@Base+0x4a2a>
  40930a:	cmp    BYTE PTR [rsi+0x1],0x20
  40930e:	jle    40936a <main@@Base+0x4a2a>
  409310:	add    rsi,0x1
  409314:	cmp    rsi,QWORD PTR [rsp+0x8]
  409319:	jne    409387 <main@@Base+0x4a47>
  40931b:	jmp    409436 <main@@Base+0x4af6>
  409320:	mov    rbx,r15
  409323:	cmp    al,0x22
  409325:	jne    409647 <main@@Base+0x4d07>
  40932b:	lea    rsi,[r15+0x2]
  40932f:	mov    rax,QWORD PTR [rsp+0x8]
  409334:	sub    rax,rsi
  409337:	cmp    rax,0x2
  40933b:	jl     4093d4 <main@@Base+0x4a94>
  409341:	cmp    BYTE PTR [rsi],0x20
  409344:	jg     4093e6 <main@@Base+0x4aa6>
  40934a:	jne    4093d4 <main@@Base+0x4a94>
  409350:	cmp    BYTE PTR [rsi+0x1],0x20
  409354:	jle    4093d4 <main@@Base+0x4a94>
  409356:	add    rsi,0x1
  40935a:	cmp    rsi,QWORD PTR [rsp+0x8]
  40935f:	jne    4093ed <main@@Base+0x4aad>
  409365:	jmp    40944f <main@@Base+0x4b0f>
  40936a:	mov    rdi,QWORD PTR [rsp+0x10]
  40936f:	mov    rdx,QWORD PTR [rsp+0x8]
  409374:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  409379:	mov    rsi,rax
  40937c:	cmp    rsi,QWORD PTR [rsp+0x8]
  409381:	je     409436 <main@@Base+0x4af6>
  409387:	cmp    BYTE PTR [rsi],0x3a
  40938a:	jne    409436 <main@@Base+0x4af6>
  409390:	lea    rbx,[rsi+0x1]
  409394:	mov    rax,QWORD PTR [rsp+0x8]
  409399:	sub    rax,rbx
  40939c:	cmp    rax,0x2
  4093a0:	jl     4095ae <main@@Base+0x4c6e>
  4093a6:	cmp    BYTE PTR [rbx],0x20
  4093a9:	jg     4095c3 <main@@Base+0x4c83>
  4093af:	jne    4095ae <main@@Base+0x4c6e>
  4093b5:	cmp    BYTE PTR [rsi+0x2],0x20
  4093b9:	jle    4095ae <main@@Base+0x4c6e>
  4093bf:	add    rsi,0x2
  4093c3:	mov    rbx,rsi
  4093c6:	cmp    r15,rbx
  4093c9:	jne    4095cc <main@@Base+0x4c8c>
  4093cf:	jmp    4096b7 <main@@Base+0x4d77>
  4093d4:	mov    rdi,QWORD PTR [rsp+0x10]
  4093d9:	mov    rdx,QWORD PTR [rsp+0x8]
  4093de:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  4093e3:	mov    rsi,rax
  4093e6:	cmp    rsi,QWORD PTR [rsp+0x8]
  4093eb:	je     40944f <main@@Base+0x4b0f>
  4093ed:	cmp    BYTE PTR [rsi],0x3a
  4093f0:	jne    40944f <main@@Base+0x4b0f>
  4093f2:	lea    rbx,[rsi+0x1]
  4093f6:	mov    rax,QWORD PTR [rsp+0x8]
  4093fb:	sub    rax,rbx
  4093fe:	cmp    rax,0x2
  409402:	jl     409632 <main@@Base+0x4cf2>
  409408:	cmp    BYTE PTR [rbx],0x20
  40940b:	jg     409647 <main@@Base+0x4d07>
  409411:	jne    409632 <main@@Base+0x4cf2>
  409417:	cmp    BYTE PTR [rsi+0x2],0x20
  40941b:	jle    409632 <main@@Base+0x4cf2>
  409421:	add    rsi,0x2
  409425:	mov    rbx,rsi
  409428:	cmp    r15,rbx
  40942b:	jne    40964c <main@@Base+0x4d0c>
  409431:	jmp    4096b7 <main@@Base+0x4d77>
  409436:	mov    ecx,0x4
  40943b:	mov    rdi,QWORD PTR [rsp+0x10]
  409440:	mov    rdx,QWORD PTR [rsp+0x8]
  409445:	call   41f940 <flatcc_json_parser_set_error@@Base>
  40944a:	jmp    4095c0 <main@@Base+0x4c80>
  40944f:	mov    ecx,0x4
  409454:	mov    rdi,QWORD PTR [rsp+0x10]
  409459:	mov    rdx,QWORD PTR [rsp+0x8]
  40945e:	call   41f940 <flatcc_json_parser_set_error@@Base>
  409463:	jmp    409644 <main@@Base+0x4d04>
  409468:	mov    rbx,QWORD PTR [rsp+0x8]
  40946d:	jne    409480 <main@@Base+0x4b40>
  40946f:	cmp    BYTE PTR [rsi+0x1],0x20
  409473:	jle    409480 <main@@Base+0x4b40>
  409475:	add    rsi,0x1
  409479:	cmp    rsi,rbx
  40947c:	jne    409495 <main@@Base+0x4b55>
  40947e:	jmp    4094ca <main@@Base+0x4b8a>
  409480:	mov    rdi,QWORD PTR [rsp+0x10]
  409485:	mov    rdx,rbx
  409488:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40948d:	mov    rsi,rax
  409490:	cmp    rsi,rbx
  409493:	je     4094ca <main@@Base+0x4b8a>
  409495:	cmp    BYTE PTR [rsi],0x3a
  409498:	jne    4094ca <main@@Base+0x4b8a>
  40949a:	lea    rbx,[rsi+0x1]
  40949e:	mov    rax,QWORD PTR [rsp+0x8]
  4094a3:	sub    rax,rbx
  4094a6:	cmp    rax,0x2
  4094aa:	jl     4094e0 <main@@Base+0x4ba0>
  4094ac:	cmp    BYTE PTR [rbx],0x20
  4094af:	jg     4094f5 <main@@Base+0x4bb5>
  4094b1:	jne    4094e0 <main@@Base+0x4ba0>
  4094b3:	cmp    BYTE PTR [rsi+0x2],0x20
  4094b7:	jle    4094e0 <main@@Base+0x4ba0>
  4094b9:	add    rsi,0x2
  4094bd:	mov    rbx,rsi
  4094c0:	cmp    r15,rbx
  4094c3:	jne    4094fe <main@@Base+0x4bbe>
  4094c5:	jmp    4096b7 <main@@Base+0x4d77>
  4094ca:	mov    ecx,0x4
  4094cf:	mov    rdi,QWORD PTR [rsp+0x10]
  4094d4:	mov    rdx,QWORD PTR [rsp+0x8]
  4094d9:	call   41f940 <flatcc_json_parser_set_error@@Base>
  4094de:	jmp    4094f2 <main@@Base+0x4bb2>
  4094e0:	mov    rdi,QWORD PTR [rsp+0x10]
  4094e5:	mov    rsi,rbx
  4094e8:	mov    rdx,QWORD PTR [rsp+0x8]
  4094ed:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  4094f2:	mov    rbx,rax
  4094f5:	cmp    r15,rbx
  4094f8:	je     4096b7 <main@@Base+0x4d77>
  4094fe:	mov    DWORD PTR [rsp+0x30],0x0
  409506:	mov    r15,QWORD PTR [rsp+0x10]
  40950b:	mov    rdi,r15
  40950e:	mov    rsi,rbx
  409511:	mov    rdx,QWORD PTR [rsp+0x8]
  409516:	lea    rcx,[rsp+0x30]
  40951b:	call   4214c0 <flatcc_json_parser_float@@Base>
  409520:	cmp    rbx,rax
  409523:	jne    409555 <main@@Base+0x4c15>
  409525:	mov    rdi,r15
  409528:	mov    rsi,rbx
  40952b:	mov    rdx,QWORD PTR [rsp+0x8]
  409530:	lea    rcx,[rip+0x21ea9]        # 42b3e0 <filename@@Base+0x310>
  409537:	lea    r8,[rsp+0x30]
  40953c:	call   414220 <main@@Base+0xf8e0>
  409541:	cmp    rax,rbx
  409544:	je     40d154 <main@@Base+0x8814>
  40954a:	cmp    rax,QWORD PTR [rsp+0x8]
  40954f:	je     40d154 <main@@Base+0x8814>
  409555:	mov    ecx,DWORD PTR [rsp+0x30]
  409559:	mov    DWORD PTR [r14],ecx
  40955c:	jmp    4096b0 <main@@Base+0x4d70>
  409561:	jne    409575 <main@@Base+0x4c35>
  409563:	cmp    BYTE PTR [rsi+0x2],0x20
  409567:	jle    409575 <main@@Base+0x4c35>
  409569:	add    rsi,0x2
  40956d:	mov    rax,rsi
  409570:	jmp    4090de <main@@Base+0x479e>
  409575:	mov    rdi,QWORD PTR [rsp+0x10]
  40957a:	mov    rsi,rax
  40957d:	mov    r13,QWORD PTR [rsp+0x8]
  409582:	mov    rdx,r13
  409585:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40958a:	cmp    r15,rax
  40958d:	je     409109 <main@@Base+0x47c9>
  409593:	mov    r15,QWORD PTR [rsp+0x10]
  409598:	mov    rdi,r15
  40959b:	mov    rsi,rax
  40959e:	mov    rdx,r13
  4095a1:	mov    rcx,r12
  4095a4:	call   410640 <main@@Base+0xbd00>
  4095a9:	jmp    4096cf <main@@Base+0x4d8f>
  4095ae:	mov    rdi,QWORD PTR [rsp+0x10]
  4095b3:	mov    rsi,rbx
  4095b6:	mov    rdx,QWORD PTR [rsp+0x8]
  4095bb:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  4095c0:	mov    rbx,rax
  4095c3:	cmp    r15,rbx
  4095c6:	je     4096b7 <main@@Base+0x4d77>
  4095cc:	mov    DWORD PTR [rsp+0x30],0x0
  4095d4:	mov    r15,QWORD PTR [rsp+0x10]
  4095d9:	mov    rdi,r15
  4095dc:	mov    rsi,rbx
  4095df:	mov    rdx,QWORD PTR [rsp+0x8]
  4095e4:	lea    rcx,[rsp+0x30]
  4095e9:	call   4214c0 <flatcc_json_parser_float@@Base>
  4095ee:	cmp    rbx,rax
  4095f1:	jne    409628 <main@@Base+0x4ce8>
  4095f3:	mov    rdi,r15
  4095f6:	mov    rsi,rbx
  4095f9:	mov    rdx,QWORD PTR [rsp+0x8]
  4095fe:	lea    rcx,[rip+0x21dfb]        # 42b400 <filename@@Base+0x330>
  409605:	lea    r8,[rsp+0x30]
  40960a:	call   414220 <main@@Base+0xf8e0>
  40960f:	cmp    rax,rbx
  409612:	je     40d154 <main@@Base+0x8814>
  409618:	cmp    rax,QWORD PTR [rsp+0x8]
  40961d:	je     40d154 <main@@Base+0x8814>
  409623:	mov    r15,QWORD PTR [rsp+0x10]
  409628:	mov    ecx,DWORD PTR [rsp+0x30]
  40962c:	mov    DWORD PTR [r14+0x8],ecx
  409630:	jmp    4096b0 <main@@Base+0x4d70>
  409632:	mov    rdi,QWORD PTR [rsp+0x10]
  409637:	mov    rsi,rbx
  40963a:	mov    rdx,QWORD PTR [rsp+0x8]
  40963f:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  409644:	mov    rbx,rax
  409647:	cmp    r15,rbx
  40964a:	je     4096b7 <main@@Base+0x4d77>
  40964c:	mov    DWORD PTR [rsp+0x30],0x0
  409654:	mov    r15,QWORD PTR [rsp+0x10]
  409659:	mov    rdi,r15
  40965c:	mov    rsi,rbx
  40965f:	mov    rdx,QWORD PTR [rsp+0x8]
  409664:	lea    rcx,[rsp+0x30]
  409669:	call   4214c0 <flatcc_json_parser_float@@Base>
  40966e:	cmp    rbx,rax
  409671:	jne    4096a8 <main@@Base+0x4d68>
  409673:	mov    rdi,r15
  409676:	mov    rsi,rbx
  409679:	mov    rdx,QWORD PTR [rsp+0x8]
  40967e:	lea    rcx,[rip+0x21d9b]        # 42b420 <filename@@Base+0x350>
  409685:	lea    r8,[rsp+0x30]
  40968a:	call   414220 <main@@Base+0xf8e0>
  40968f:	cmp    rax,rbx
  409692:	je     40d154 <main@@Base+0x8814>
  409698:	cmp    rax,QWORD PTR [rsp+0x8]
  40969d:	je     40d154 <main@@Base+0x8814>
  4096a3:	mov    r15,QWORD PTR [rsp+0x10]
  4096a8:	mov    ecx,DWORD PTR [rsp+0x30]
  4096ac:	mov    DWORD PTR [r14+0x4],ecx
  4096b0:	mov    r13,QWORD PTR [rsp+0x8]
  4096b5:	jmp    4096cf <main@@Base+0x4d8f>
  4096b7:	mov    rdi,QWORD PTR [rsp+0x10]
  4096bc:	mov    rsi,r15
  4096bf:	mov    r15,rdi
  4096c2:	mov    r13,QWORD PTR [rsp+0x8]
  4096c7:	mov    rdx,r13
  4096ca:	call   41ff40 <flatcc_json_parser_unmatched_symbol@@Base>
  4096cf:	mov    rcx,r13
  4096d2:	sub    rcx,rax
  4096d5:	cmp    rcx,0x2
  4096d9:	jl     4096f6 <main@@Base+0x4db6>
  4096db:	cmp    BYTE PTR [rax],0x20
  4096de:	jg     409704 <main@@Base+0x4dc4>
  4096e0:	jne    4096f6 <main@@Base+0x4db6>
  4096e2:	cmp    BYTE PTR [rax+0x1],0x20
  4096e6:	jle    4096f6 <main@@Base+0x4db6>
  4096e8:	add    rax,0x1
  4096ec:	cmp    rax,r13
  4096ef:	jne    40970d <main@@Base+0x4dcd>
  4096f1:	jmp    409f24 <main@@Base+0x55e4>
  4096f6:	mov    rdi,r15
  4096f9:	mov    rsi,rax
  4096fc:	mov    rdx,r13
  4096ff:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  409704:	cmp    rax,r13
  409707:	je     409f24 <main@@Base+0x55e4>
  40970d:	movzx  ecx,BYTE PTR [rax]
  409710:	cmp    cl,0x2c
  409713:	jne    409f99 <main@@Base+0x5659>
  409719:	lea    rsi,[rax+0x1]
  40971d:	mov    rcx,r13
  409720:	sub    rcx,rsi
  409723:	cmp    rcx,0x2
  409727:	jl     40973c <main@@Base+0x4dfc>
  409729:	cmp    BYTE PTR [rsi],0x20
  40972c:	jg     40974a <main@@Base+0x4e0a>
  40972e:	jne    40973c <main@@Base+0x4dfc>
  409730:	cmp    BYTE PTR [rax+0x2],0x20
  409734:	jle    40973c <main@@Base+0x4dfc>
  409736:	add    rax,0x2
  40973a:	jmp    409747 <main@@Base+0x4e07>
  40973c:	mov    rdi,r15
  40973f:	mov    rdx,r13
  409742:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  409747:	mov    rsi,rax
  40974a:	cmp    rsi,r13
  40974d:	je     40a225 <main@@Base+0x58e5>
  409753:	cmp    BYTE PTR [rsi],0x7d
  409756:	jne    408bdb <main@@Base+0x429b>
  40975c:	lea    r14,[rsi+0x1]
  409760:	mov    rax,r13
  409763:	sub    rax,r14
  409766:	cmp    rax,0x2
  40976a:	mov    rbp,QWORD PTR [rsp+0x20]
  40976f:	movabs r12,0x7465737400000000
  409779:	jl     409799 <main@@Base+0x4e59>
  40977b:	cmp    BYTE PTR [r14],0x20
  40977f:	jg     40c600 <main@@Base+0x7cc0>
  409785:	jne    409799 <main@@Base+0x4e59>
  409787:	cmp    BYTE PTR [rsi+0x2],0x20
  40978b:	jle    409799 <main@@Base+0x4e59>
  40978d:	add    rsi,0x2
  409791:	mov    r14,rsi
  409794:	jmp    40c600 <main@@Base+0x7cc0>
  409799:	mov    rdi,r15
  40979c:	mov    rsi,r14
  40979f:	mov    rdx,r13
  4097a2:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  4097a7:	mov    r14,rax
  4097aa:	jmp    40c600 <main@@Base+0x7cc0>
  4097af:	mov    rdi,r15
  4097b2:	mov    rsi,rbx
  4097b5:	mov    rdx,QWORD PTR [rsp+0x8]
  4097ba:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  4097bf:	mov    rbx,rax
  4097c2:	cmp    r14,rbx
  4097c5:	je     407fbf <main@@Base+0x367f>
  4097cb:	mov    DWORD PTR [rsp+0x30],0x0
  4097d3:	mov    rdi,r15
  4097d6:	mov    rsi,rbx
  4097d9:	mov    rdx,QWORD PTR [rsp+0x8]
  4097de:	lea    rcx,[rsp+0x30]
  4097e3:	call   4214c0 <flatcc_json_parser_float@@Base>
  4097e8:	mov    r14,rax
  4097eb:	cmp    rbx,rax
  4097ee:	mov    rbp,QWORD PTR [rsp+0x20]
  4097f3:	jne    409833 <main@@Base+0x4ef3>
  4097f5:	mov    rdi,r15
  4097f8:	mov    rsi,rbx
  4097fb:	mov    r12,QWORD PTR [rsp+0x8]
  409800:	mov    rdx,r12
  409803:	lea    rcx,[rip+0x219d6]        # 42b1e0 <filename@@Base+0x110>
  40980a:	lea    r8,[rsp+0x30]
  40980f:	call   414220 <main@@Base+0xf8e0>
  409814:	mov    r14,rax
  409817:	cmp    rax,rbx
  40981a:	je     40eaa5 <main@@Base+0xa165>
  409820:	cmp    r14,r12
  409823:	movabs r12,0x7465737400000000
  40982d:	je     40eaa5 <main@@Base+0xa165>
  409833:	vmovss xmm0,DWORD PTR [rsp+0x30]
  409839:	vucomiss xmm0,DWORD PTR [rip+0x1a7cb]        # 42400c <_IO_stdin_used@@Base+0xc>
  409841:	mov    r13,QWORD PTR [rsp+0x8]
  409846:	jne    409855 <main@@Base+0x4f15>
  409848:	jp     409855 <main@@Base+0x4f15>
  40984a:	test   BYTE PTR [r15+0x10],0x2
  40984f:	je     40c600 <main@@Base+0x7cc0>
  409855:	mov    rdi,QWORD PTR [r15]
  409858:	mov    esi,0x1a
  40985d:	jmp    40a45a <main@@Base+0x5b1a>
  409862:	mov    ecx,0x9
  409867:	mov    rdi,r15
  40986a:	mov    rsi,rax
  40986d:	mov    rdx,r13
  409870:	call   41f940 <flatcc_json_parser_set_error@@Base>
  409875:	mov    r14,rax
  409878:	jmp    40699d <main@@Base+0x205d>
  40987d:	mov    rdi,QWORD PTR [rsp+0x10]
  409882:	mov    rsi,r14
  409885:	mov    rdx,r13
  409888:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40988d:	mov    r14,rax
  409890:	cmp    r14,r13
  409893:	je     4098e0 <main@@Base+0x4fa0>
  409895:	cmp    BYTE PTR [r14],0x3a
  409899:	jne    4098e0 <main@@Base+0x4fa0>
  40989b:	lea    r12,[r14+0x1]
  40989f:	mov    rax,r13
  4098a2:	sub    rax,r12
  4098a5:	cmp    rax,0x2
  4098a9:	jl     40af5d <main@@Base+0x661d>
  4098af:	cmp    BYTE PTR [r12],0x20
  4098b4:	jg     40af70 <main@@Base+0x6630>
  4098ba:	jne    40af5d <main@@Base+0x661d>
  4098c0:	cmp    BYTE PTR [r14+0x2],0x20
  4098c5:	jle    40af5d <main@@Base+0x661d>
  4098cb:	add    r14,0x2
  4098cf:	mov    r12,r14
  4098d2:	cmp    r15,r12
  4098d5:	jne    40af79 <main@@Base+0x6639>
  4098db:	jmp    40c5d3 <main@@Base+0x7c93>
  4098e0:	mov    ecx,0x4
  4098e5:	mov    rdi,QWORD PTR [rsp+0x10]
  4098ea:	mov    rsi,r14
  4098ed:	mov    rdx,r13
  4098f0:	call   41f940 <flatcc_json_parser_set_error@@Base>
  4098f5:	jmp    40af6d <main@@Base+0x662d>
  4098fa:	mov    rdi,QWORD PTR [rsp+0x10]
  4098ff:	mov    rsi,rbx
  409902:	mov    rdx,QWORD PTR [rsp+0x8]
  409907:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40990c:	mov    rbx,rax
  40990f:	cmp    r15,rbx
  409912:	je     406e11 <main@@Base+0x24d1>
  409918:	mov    QWORD PTR [rsp+0x30],0x0
  409921:	mov    DWORD PTR [rsp+0x40],0x0
  409929:	mov    DWORD PTR [rsp+0x1c],0x0
  409931:	xor    r12d,r12d
  409934:	mov    rdx,QWORD PTR [rsp+0x8]
  409939:	cmp    rbx,rdx
  40993c:	je     409998 <main@@Base+0x5058>
  40993e:	mov    r15,QWORD PTR [rsp+0x10]
  409943:	mov    rdi,r15
  409946:	mov    rsi,rbx
  409949:	lea    rcx,[rsp+0x40]
  40994e:	lea    r8,[rsp+0x30]
  409953:	call   4215e0 <flatcc_json_parser_integer@@Base>
  409958:	cmp    rax,rbx
  40995b:	mov    rbp,QWORD PTR [rsp+0x20]
  409960:	je     409e88 <main@@Base+0x5548>
  409966:	mov    r14,rax
  409969:	mov    rax,QWORD PTR [rsp+0x30]
  40996e:	cmp    DWORD PTR [rsp+0x40],0x0
  409973:	je     40a823 <main@@Base+0x5ee3>
  409979:	mov    ecx,0xffffffff
  40997e:	lea    rcx,[rcx-0x7fffffff]
  409985:	cmp    rax,rcx
  409988:	jbe    40ad39 <main@@Base+0x63f9>
  40998e:	mov    ecx,0x8
  409993:	jmp    40a834 <main@@Base+0x5ef4>
  409998:	mov    r14,rdx
  40999b:	mov    r15,QWORD PTR [rsp+0x10]
  4099a0:	mov    rbp,QWORD PTR [rsp+0x20]
  4099a5:	cmp    rbx,r14
  4099a8:	jne    40ad81 <main@@Base+0x6441>
  4099ae:	jmp    40ad48 <main@@Base+0x6408>
  4099b3:	mov    r14,r13
  4099b6:	jmp    4074d8 <main@@Base+0x2b98>
  4099bb:	mov    BYTE PTR [rsp+0x1c],0x0
  4099c0:	lea    r14,[r12+0x5]
  4099c5:	xor    ebx,ebx
  4099c7:	mov    rbp,QWORD PTR [rsp+0x20]
  4099cc:	cmp    r12,r14
  4099cf:	jne    409a09 <main@@Base+0x50c9>
  4099d1:	mov    rdi,r15
  4099d4:	mov    rsi,r12
  4099d7:	mov    r13,QWORD PTR [rsp+0x8]
  4099dc:	mov    rdx,r13
  4099df:	lea    rcx,[rip+0x217da]        # 42b1c0 <filename@@Base+0xf0>
  4099e6:	lea    r8,[rsp+0x1c]
  4099eb:	call   414030 <main@@Base+0xf6f0>
  4099f0:	mov    r14,rax
  4099f3:	cmp    rax,r12
  4099f6:	je     40ead3 <main@@Base+0xa193>
  4099fc:	cmp    r14,r13
  4099ff:	je     40eace <main@@Base+0xa18e>
  409a05:	mov    bl,BYTE PTR [rsp+0x1c]
  409a09:	cmp    bl,0x1
  409a0c:	movabs r12,0x7465737400000000
  409a16:	jne    409a1f <main@@Base+0x50df>
  409a18:	test   BYTE PTR [r15+0x10],0x2
  409a1d:	je     409a41 <main@@Base+0x5101>
  409a1f:	mov    rdi,QWORD PTR [r15]
  409a22:	mov    esi,0xf
  409a27:	mov    edx,0x1
  409a2c:	mov    ecx,0x1
  409a31:	call   41d880 <flatcc_builder_table_add@@Base>
  409a36:	test   rax,rax
  409a39:	je     40eace <main@@Base+0xa18e>
  409a3f:	mov    BYTE PTR [rax],bl
  409a41:	mov    r13,QWORD PTR [rsp+0x8]
  409a46:	jmp    40c600 <main@@Base+0x7cc0>
  409a4b:	cmp    cl,0x5d
  409a4e:	jne    40a6d8 <main@@Base+0x5d98>
  409a54:	lea    r14,[rax+0x1]
  409a58:	mov    rcx,r13
  409a5b:	sub    rcx,r14
  409a5e:	cmp    rcx,0x2
  409a62:	jl     409a74 <main@@Base+0x5134>
  409a64:	cmp    BYTE PTR [r14],0x20
  409a68:	jg     4074d8 <main@@Base+0x2b98>
  409a6e:	je     40753e <main@@Base+0x2bfe>
  409a74:	mov    rdi,r15
  409a77:	mov    rsi,r14
  409a7a:	mov    rdx,r13
  409a7d:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  409a82:	mov    r14,rax
  409a85:	jmp    4074d8 <main@@Base+0x2b98>
  409a8a:	mov    ecx,0x9
  409a8f:	mov    rdi,r15
  409a92:	mov    rsi,r13
  409a95:	mov    rdx,r13
  409a98:	call   41f940 <flatcc_json_parser_set_error@@Base>
  409a9d:	mov    r14,rax
  409aa0:	jmp    4074ce <main@@Base+0x2b8e>
  409aa5:	test   al,al
  409aa7:	setne  bl
  409aaa:	jmp    408414 <main@@Base+0x3ad4>
  409aaf:	lea    r14,[r12+0x1]
  409ab4:	mov    rax,r13
  409ab7:	sub    rax,r14
  409aba:	cmp    rax,0x2
  409abe:	jl     40a235 <main@@Base+0x58f5>
  409ac4:	cmp    BYTE PTR [r14],0x20
  409ac8:	jg     4074ce <main@@Base+0x2b8e>
  409ace:	jne    40a235 <main@@Base+0x58f5>
  409ad4:	cmp    BYTE PTR [r12+0x2],0x20
  409ada:	jle    40a235 <main@@Base+0x58f5>
  409ae0:	add    r12,0x2
  409ae4:	mov    r14,r12
  409ae7:	jmp    4074ce <main@@Base+0x2b8e>
  409aec:	cmp    al,0x22
  409aee:	jne    40c5d3 <main@@Base+0x7c93>
  409af4:	add    r14,0x10
  409af8:	mov    rax,r13
  409afb:	sub    rax,r14
  409afe:	cmp    rax,0x2
  409b02:	jl     409c99 <main@@Base+0x5359>
  409b08:	cmp    BYTE PTR [r14],0x20
  409b0c:	jg     409cac <main@@Base+0x536c>
  409b12:	jne    409c99 <main@@Base+0x5359>
  409b18:	cmp    BYTE PTR [r14+0x1],0x20
  409b1d:	jle    409c99 <main@@Base+0x5359>
  409b23:	add    r14,0x1
  409b27:	cmp    r14,r13
  409b2a:	jne    409cb1 <main@@Base+0x5371>
  409b30:	jmp    409ce9 <main@@Base+0x53a9>
  409b35:	mov    rdi,QWORD PTR [rsp+0x10]
  409b3a:	mov    rsi,rax
  409b3d:	mov    rdx,r13
  409b40:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  409b45:	cmp    r15,rax
  409b48:	je     409b83 <main@@Base+0x5243>
  409b4a:	mov    r9,QWORD PTR [rsp+0x58]
  409b4f:	mov    ecx,0x0
  409b54:	mov    r8d,0x8
  409b5a:	mov    r15,QWORD PTR [rsp+0x10]
  409b5f:	mov    rdi,r15
  409b62:	mov    rsi,rax
  409b65:	mov    rdx,r13
  409b68:	lea    rax,[rip+0x71d1]        # 410d40 <main@@Base+0xc400>
  409b6f:	push   rax
  409b70:	lea    rax,[rip+0x21609]        # 42b180 <filename@@Base+0xb0>
  409b77:	push   rax
  409b78:	call   421f60 <flatcc_json_parser_union_type@@Base>
  409b7d:	add    rsp,0x10
  409b81:	jmp    409b96 <main@@Base+0x5256>
  409b83:	mov    rdi,QWORD PTR [rsp+0x10]
  409b88:	mov    rsi,r15
  409b8b:	mov    r15,rdi
  409b8e:	mov    rdx,r13
  409b91:	call   41ff40 <flatcc_json_parser_unmatched_symbol@@Base>
  409b96:	mov    r14,rax
  409b99:	mov    rbp,QWORD PTR [rsp+0x20]
  409b9e:	jmp    40c600 <main@@Base+0x7cc0>
  409ba3:	cmp    al,0x22
  409ba5:	jne    40c5d3 <main@@Base+0x7c93>
  409bab:	add    r14,0x15
  409baf:	mov    rax,r13
  409bb2:	sub    rax,r14
  409bb5:	cmp    rax,0x2
  409bb9:	jl     409d03 <main@@Base+0x53c3>
  409bbf:	cmp    BYTE PTR [r14],0x20
  409bc3:	jg     409d16 <main@@Base+0x53d6>
  409bc9:	jne    409d03 <main@@Base+0x53c3>
  409bcf:	cmp    BYTE PTR [r14+0x1],0x20
  409bd4:	jle    409d03 <main@@Base+0x53c3>
  409bda:	add    r14,0x1
  409bde:	cmp    r14,r13
  409be1:	jne    409d1f <main@@Base+0x53df>
  409be7:	jmp    409dab <main@@Base+0x546b>
  409bec:	cmp    al,0x22
  409bee:	jne    40c5d3 <main@@Base+0x7c93>
  409bf4:	add    r14,0x12
  409bf8:	mov    rax,r13
  409bfb:	sub    rax,r14
  409bfe:	cmp    rax,0x2
  409c02:	jl     409d5b <main@@Base+0x541b>
  409c08:	cmp    BYTE PTR [r14],0x20
  409c0c:	jg     409d6e <main@@Base+0x542e>
  409c12:	jne    409d5b <main@@Base+0x541b>
  409c18:	cmp    BYTE PTR [r14+0x1],0x20
  409c1d:	jle    409d5b <main@@Base+0x541b>
  409c23:	add    r14,0x1
  409c27:	cmp    r14,r13
  409c2a:	jne    409d73 <main@@Base+0x5433>
  409c30:	jmp    409dc5 <main@@Base+0x5485>
  409c35:	mov    rdi,r15
  409c38:	mov    rsi,rax
  409c3b:	mov    rdx,r13
  409c3e:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  409c43:	mov    r12,r13
  409c46:	cmp    rax,r13
  409c49:	je     40ab42 <main@@Base+0x6202>
  409c4f:	cmp    BYTE PTR [rax],0x5d
  409c52:	jne    40ab3f <main@@Base+0x61ff>
  409c58:	lea    r14,[rax+0x1]
  409c5c:	mov    rcx,r13
  409c5f:	sub    rcx,r14
  409c62:	cmp    rcx,0x2
  409c66:	jl     40b080 <main@@Base+0x6740>
  409c6c:	cmp    BYTE PTR [r14],0x20
  409c70:	jg     40be28 <main@@Base+0x74e8>
  409c76:	mov    r15,QWORD PTR [rsp+0x10]
  409c7b:	mov    r13,QWORD PTR [rsp+0x8]
  409c80:	jne    40b080 <main@@Base+0x6740>
  409c86:	cmp    BYTE PTR [rax+0x2],0x20
  409c8a:	jle    40b080 <main@@Base+0x6740>
  409c90:	add    rax,0x2
  409c94:	jmp    40850f <main@@Base+0x3bcf>
  409c99:	mov    rdi,QWORD PTR [rsp+0x10]
  409c9e:	mov    rsi,r14
  409ca1:	mov    rdx,r13
  409ca4:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  409ca9:	mov    r14,rax
  409cac:	cmp    r14,r13
  409caf:	je     409ce9 <main@@Base+0x53a9>
  409cb1:	cmp    BYTE PTR [r14],0x3a
  409cb5:	jne    409ce9 <main@@Base+0x53a9>
  409cb7:	lea    r12,[r14+0x1]
  409cbb:	mov    rax,r13
  409cbe:	sub    rax,r12
  409cc1:	cmp    rax,0x2
  409cc5:	jl     40c329 <main@@Base+0x79e9>
  409ccb:	cmp    BYTE PTR [r12],0x20
  409cd0:	jle    40c30a <main@@Base+0x79ca>
  409cd6:	mov    r13,QWORD PTR [rsp+0x8]
  409cdb:	cmp    r15,r12
  409cde:	jne    40c345 <main@@Base+0x7a05>
  409ce4:	jmp    40c5d3 <main@@Base+0x7c93>
  409ce9:	mov    ecx,0x4
  409cee:	mov    rdi,QWORD PTR [rsp+0x10]
  409cf3:	mov    rsi,r14
  409cf6:	mov    rdx,r13
  409cf9:	call   41f940 <flatcc_json_parser_set_error@@Base>
  409cfe:	jmp    40c339 <main@@Base+0x79f9>
  409d03:	mov    rdi,QWORD PTR [rsp+0x10]
  409d08:	mov    rsi,r14
  409d0b:	mov    rdx,r13
  409d0e:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  409d13:	mov    r14,rax
  409d16:	cmp    r14,r13
  409d19:	je     409dab <main@@Base+0x546b>
  409d1f:	cmp    BYTE PTR [r14],0x3a
  409d23:	jne    409dab <main@@Base+0x546b>
  409d29:	lea    r12,[r14+0x1]
  409d2d:	mov    rax,r13
  409d30:	sub    rax,r12
  409d33:	cmp    rax,0x2
  409d37:	jl     40c4ad <main@@Base+0x7b6d>
  409d3d:	cmp    BYTE PTR [r12],0x20
  409d42:	jle    40c48e <main@@Base+0x7b4e>
  409d48:	mov    r13,QWORD PTR [rsp+0x8]
  409d4d:	cmp    r15,r12
  409d50:	jne    40c4c9 <main@@Base+0x7b89>
  409d56:	jmp    40c5d3 <main@@Base+0x7c93>
  409d5b:	mov    rdi,QWORD PTR [rsp+0x10]
  409d60:	mov    rsi,r14
  409d63:	mov    rdx,r13
  409d66:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  409d6b:	mov    r14,rax
  409d6e:	cmp    r14,r13
  409d71:	je     409dc5 <main@@Base+0x5485>
  409d73:	cmp    BYTE PTR [r14],0x3a
  409d77:	jne    409dc5 <main@@Base+0x5485>
  409d79:	lea    r12,[r14+0x1]
  409d7d:	mov    rax,r13
  409d80:	sub    rax,r12
  409d83:	cmp    rax,0x2
  409d87:	jl     40c6aa <main@@Base+0x7d6a>
  409d8d:	cmp    BYTE PTR [r12],0x20
  409d92:	jle    40c5ad <main@@Base+0x7c6d>
  409d98:	mov    r13,QWORD PTR [rsp+0x8]
  409d9d:	cmp    r15,r12
  409da0:	jne    40c6c6 <main@@Base+0x7d86>
  409da6:	jmp    40c5d3 <main@@Base+0x7c93>
  409dab:	mov    ecx,0x4
  409db0:	mov    rdi,QWORD PTR [rsp+0x10]
  409db5:	mov    rsi,r14
  409db8:	mov    rdx,r13
  409dbb:	call   41f940 <flatcc_json_parser_set_error@@Base>
  409dc0:	jmp    40c4bd <main@@Base+0x7b7d>
  409dc5:	mov    ecx,0x4
  409dca:	mov    rdi,QWORD PTR [rsp+0x10]
  409dcf:	mov    rsi,r14
  409dd2:	mov    rdx,r13
  409dd5:	call   41f940 <flatcc_json_parser_set_error@@Base>
  409dda:	jmp    40c6ba <main@@Base+0x7d7a>
  409ddf:	mov    r14,r13
  409de2:	jmp    4080cf <main@@Base+0x378f>
  409de7:	cmp    cl,0x5d
  409dea:	jne    40adf8 <main@@Base+0x64b8>
  409df0:	lea    r14,[rax+0x1]
  409df4:	mov    rcx,r13
  409df7:	sub    rcx,r14
  409dfa:	cmp    rcx,0x2
  409dfe:	jl     40c478 <main@@Base+0x7b38>
  409e04:	cmp    BYTE PTR [r14],0x20
  409e08:	jle    40c459 <main@@Base+0x7b19>
  409e0e:	mov    r15,QWORD PTR [rsp+0x10]
  409e13:	mov    rbp,QWORD PTR [rsp+0x20]
  409e18:	mov    r13,QWORD PTR [rsp+0x8]
  409e1d:	jmp    4080c5 <main@@Base+0x3785>
  409e22:	cmp    al,0x22
  409e24:	jne    40c8bd <main@@Base+0x7f7d>
  409e2a:	add    r14,0x12
  409e2e:	mov    rbx,QWORD PTR [rsp+0x8]
  409e33:	mov    rax,rbx
  409e36:	sub    rax,r14
  409e39:	cmp    rax,0x2
  409e3d:	jl     409f2c <main@@Base+0x55ec>
  409e43:	cmp    BYTE PTR [r14],0x20
  409e47:	jg     409f3f <main@@Base+0x55ff>
  409e4d:	jne    409f2c <main@@Base+0x55ec>
  409e53:	cmp    BYTE PTR [r14+0x1],0x20
  409e58:	jle    409f2c <main@@Base+0x55ec>
  409e5e:	add    r14,0x1
  409e62:	cmp    r14,rbx
  409e65:	jne    409f44 <main@@Base+0x5604>
  409e6b:	jmp    409f7f <main@@Base+0x563f>
  409e70:	mov    ecx,0x9
  409e75:	mov    rdi,r15
  409e78:	mov    rsi,r13
  409e7b:	mov    rdx,r13
  409e7e:	call   41f940 <flatcc_json_parser_set_error@@Base>
  409e83:	jmp    40a81b <main@@Base+0x5edb>
  409e88:	mov    r14,rbx
  409e8b:	cmp    rbx,r14
  409e8e:	jne    40ad81 <main@@Base+0x6441>
  409e94:	jmp    40ad48 <main@@Base+0x6408>
  409e99:	mov    rdi,QWORD PTR [rsp+0x10]
  409e9e:	mov    rsi,r12
  409ea1:	mov    rdx,r13
  409ea4:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  409ea9:	mov    r12,rax
  409eac:	cmp    r15,r12
  409eaf:	je     40c5d3 <main@@Base+0x7c93>
  409eb5:	mov    DWORD PTR [rsp+0x3c],0x0
  409ebd:	mov    r15,QWORD PTR [rsp+0x10]
  409ec2:	mov    rdi,QWORD PTR [r15]
  409ec5:	mov    esi,0x3
  409eca:	call   41c500 <flatcc_builder_start_table@@Base>
  409ecf:	test   eax,eax
  409ed1:	jne    40a6a7 <main@@Base+0x5d67>
  409ed7:	cmp    r12,r13
  409eda:	je     40a680 <main@@Base+0x5d40>
  409ee0:	cmp    BYTE PTR [r12],0x7b
  409ee5:	jne    40a680 <main@@Base+0x5d40>
  409eeb:	lea    rax,[r12+0x1]
  409ef0:	sub    r13,rax
  409ef3:	cmp    r13,0x2
  409ef7:	jl     40bb9c <main@@Base+0x725c>
  409efd:	cmp    BYTE PTR [rax],0x20
  409f00:	jg     40bbae <main@@Base+0x726e>
  409f06:	jne    40bb9c <main@@Base+0x725c>
  409f0c:	cmp    BYTE PTR [r12+0x2],0x20
  409f12:	jle    40bb9c <main@@Base+0x725c>
  409f18:	add    r12,0x2
  409f1c:	mov    rax,r12
  409f1f:	jmp    40bbae <main@@Base+0x726e>
  409f24:	mov    r14,r13
  409f27:	jmp    40c5e9 <main@@Base+0x7ca9>
  409f2c:	mov    rdi,QWORD PTR [rsp+0x10]
  409f31:	mov    rsi,r14
  409f34:	mov    rdx,rbx
  409f37:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  409f3c:	mov    r14,rax
  409f3f:	cmp    r14,rbx
  409f42:	je     409f7f <main@@Base+0x563f>
  409f44:	cmp    BYTE PTR [r14],0x3a
  409f48:	jne    409f7f <main@@Base+0x563f>
  409f4a:	mov    rax,rbx
  409f4d:	lea    rbx,[r14+0x1]
  409f51:	sub    rax,rbx
  409f54:	cmp    rax,0x2
  409f58:	jl     40c8cd <main@@Base+0x7f8d>
  409f5e:	cmp    BYTE PTR [rbx],0x20
  409f61:	jle    40c89b <main@@Base+0x7f5b>
  409f67:	movabs r12,0x7465737400000000
  409f71:	cmp    r15,rbx
  409f74:	jne    40c8e7 <main@@Base+0x7fa7>
  409f7a:	jmp    40c8bd <main@@Base+0x7f7d>
  409f7f:	mov    ecx,0x4
  409f84:	mov    rdi,QWORD PTR [rsp+0x10]
  409f89:	mov    rsi,r14
  409f8c:	mov    rdx,rbx
  409f8f:	call   41f940 <flatcc_json_parser_set_error@@Base>
  409f94:	jmp    40c8df <main@@Base+0x7f9f>
  409f99:	cmp    cl,0x7d
  409f9c:	jne    40af4d <main@@Base+0x660d>
  409fa2:	lea    r14,[rax+0x1]
  409fa6:	mov    rcx,r13
  409fa9:	sub    rcx,r14
  409fac:	cmp    rcx,0x2
  409fb0:	jl     40c7b7 <main@@Base+0x7e77>
  409fb6:	cmp    BYTE PTR [r14],0x20
  409fba:	jle    40c79c <main@@Base+0x7e5c>
  409fc0:	mov    r15,QWORD PTR [rsp+0x10]
  409fc5:	jmp    40e493 <main@@Base+0x9b53>
  409fca:	mov    rdi,QWORD PTR [rsp+0x10]
  409fcf:	mov    rsi,r12
  409fd2:	mov    rdx,r13
  409fd5:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  409fda:	mov    r12,rax
  409fdd:	cmp    r15,r12
  409fe0:	je     40c5d3 <main@@Base+0x7c93>
  409fe6:	mov    r15,QWORD PTR [rsp+0x10]
  409feb:	mov    rdi,QWORD PTR [r15]
  409fee:	call   41c110 <flatcc_builder_start_offset_vector@@Base>
  409ff3:	test   eax,eax
  409ff5:	jne    4049f1 <main@@Base+0xb1>
  409ffb:	cmp    r12,r13
  409ffe:	je     40a048 <main@@Base+0x5708>
  40a000:	cmp    BYTE PTR [r12],0x5b
  40a005:	jne    40a048 <main@@Base+0x5708>
  40a007:	lea    rax,[r12+0x1]
  40a00c:	mov    rcx,r13
  40a00f:	sub    rcx,rax
  40a012:	cmp    rcx,0x2
  40a016:	jl     40aa05 <main@@Base+0x60c5>
  40a01c:	cmp    BYTE PTR [rax],0x20
  40a01f:	jg     40aa13 <main@@Base+0x60d3>
  40a025:	mov    r15,QWORD PTR [rsp+0x10]
  40a02a:	jne    40aa05 <main@@Base+0x60c5>
  40a030:	cmp    BYTE PTR [r12+0x2],0x20
  40a036:	jle    40aa05 <main@@Base+0x60c5>
  40a03c:	add    r12,0x2
  40a040:	mov    rax,r12
  40a043:	jmp    40aa13 <main@@Base+0x60d3>
  40a048:	mov    ecx,0x16
  40a04d:	mov    rdi,r15
  40a050:	mov    rsi,r12
  40a053:	mov    rdx,r13
  40a056:	call   41f940 <flatcc_json_parser_set_error@@Base>
  40a05b:	mov    r14,rax
  40a05e:	mov    rdi,QWORD PTR [r15]
  40a061:	call   41c2d0 <flatcc_builder_end_offset_vector@@Base>
  40a066:	mov    DWORD PTR [rsp+0x3c],eax
  40a06a:	test   eax,eax
  40a06c:	mov    rbp,QWORD PTR [rsp+0x20]
  40a071:	movabs r12,0x7465737400000000
  40a07b:	je     40ead3 <main@@Base+0xa193>
  40a081:	mov    rdi,QWORD PTR [r15]
  40a084:	mov    esi,0x1c
  40a089:	jmp    4080eb <main@@Base+0x37ab>
  40a08e:	mov    rdi,QWORD PTR [rsp+0x10]
  40a093:	mov    rsi,r12
  40a096:	mov    rdx,r13
  40a099:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40a09e:	mov    r12,rax
  40a0a1:	cmp    r15,r12
  40a0a4:	je     40c5d3 <main@@Base+0x7c93>
  40a0aa:	mov    r15,QWORD PTR [rsp+0x10]
  40a0af:	mov    rdi,QWORD PTR [r15]
  40a0b2:	mov    esi,0x8
  40a0b7:	mov    edx,0x4
  40a0bc:	mov    ecx,0x1fffffff
  40a0c1:	call   41c090 <flatcc_builder_start_vector@@Base>
  40a0c6:	test   eax,eax
  40a0c8:	jne    4049f1 <main@@Base+0xb1>
  40a0ce:	cmp    r12,r13
  40a0d1:	je     40a11b <main@@Base+0x57db>
  40a0d3:	cmp    BYTE PTR [r12],0x5b
  40a0d8:	jne    40a11b <main@@Base+0x57db>
  40a0da:	lea    rax,[r12+0x1]
  40a0df:	mov    rcx,r13
  40a0e2:	sub    rcx,rax
  40a0e5:	cmp    rcx,0x2
  40a0e9:	jl     40aa5f <main@@Base+0x611f>
  40a0ef:	cmp    BYTE PTR [rax],0x20
  40a0f2:	jg     40aa6d <main@@Base+0x612d>
  40a0f8:	mov    r15,QWORD PTR [rsp+0x10]
  40a0fd:	jne    40aa5f <main@@Base+0x611f>
  40a103:	cmp    BYTE PTR [r12+0x2],0x20
  40a109:	jle    40aa5f <main@@Base+0x611f>
  40a10f:	add    r12,0x2
  40a113:	mov    rax,r12
  40a116:	jmp    40aa6d <main@@Base+0x612d>
  40a11b:	mov    ecx,0x16
  40a120:	mov    rdi,r15
  40a123:	mov    rsi,r12
  40a126:	mov    rdx,r13
  40a129:	call   41f940 <flatcc_json_parser_set_error@@Base>
  40a12e:	mov    r14,rax
  40a131:	mov    rbp,QWORD PTR [rsp+0x20]
  40a136:	mov    rdi,QWORD PTR [r15]
  40a139:	call   41d220 <flatcc_builder_end_vector@@Base>
  40a13e:	mov    DWORD PTR [rsp+0x3c],eax
  40a142:	test   eax,eax
  40a144:	movabs r12,0x7465737400000000
  40a14e:	je     40ead3 <main@@Base+0xa193>
  40a154:	mov    rdi,QWORD PTR [r15]
  40a157:	mov    esi,0x1d
  40a15c:	jmp    4080eb <main@@Base+0x37ab>
  40a161:	mov    rdi,QWORD PTR [rsp+0x10]
  40a166:	mov    rsi,r12
  40a169:	mov    rdx,r13
  40a16c:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40a171:	mov    r12,rax
  40a174:	cmp    r15,r12
  40a177:	je     40c5d3 <main@@Base+0x7c93>
  40a17d:	mov    r15,QWORD PTR [rsp+0x10]
  40a182:	mov    rdi,QWORD PTR [r15]
  40a185:	call   41c110 <flatcc_builder_start_offset_vector@@Base>
  40a18a:	test   eax,eax
  40a18c:	jne    4049f1 <main@@Base+0xb1>
  40a192:	cmp    r12,r13
  40a195:	je     40a1df <main@@Base+0x589f>
  40a197:	cmp    BYTE PTR [r12],0x5b
  40a19c:	jne    40a1df <main@@Base+0x589f>
  40a19e:	lea    rax,[r12+0x1]
  40a1a3:	mov    rcx,r13
  40a1a6:	sub    rcx,rax
  40a1a9:	cmp    rcx,0x2
  40a1ad:	jl     40aab9 <main@@Base+0x6179>
  40a1b3:	cmp    BYTE PTR [rax],0x20
  40a1b6:	jg     40aac7 <main@@Base+0x6187>
  40a1bc:	mov    r15,QWORD PTR [rsp+0x10]
  40a1c1:	jne    40aab9 <main@@Base+0x6179>
  40a1c7:	cmp    BYTE PTR [r12+0x2],0x20
  40a1cd:	jle    40aab9 <main@@Base+0x6179>
  40a1d3:	add    r12,0x2
  40a1d7:	mov    rax,r12
  40a1da:	jmp    40aac7 <main@@Base+0x6187>
  40a1df:	mov    ecx,0x16
  40a1e4:	mov    rdi,r15
  40a1e7:	mov    rsi,r12
  40a1ea:	mov    rdx,r13
  40a1ed:	call   41f940 <flatcc_json_parser_set_error@@Base>
  40a1f2:	mov    r14,rax
  40a1f5:	mov    rdi,QWORD PTR [r15]
  40a1f8:	call   41c2d0 <flatcc_builder_end_offset_vector@@Base>
  40a1fd:	mov    DWORD PTR [rsp+0x3c],eax
  40a201:	test   eax,eax
  40a203:	mov    rbp,QWORD PTR [rsp+0x20]
  40a208:	movabs r12,0x7465737400000000
  40a212:	je     40ead3 <main@@Base+0xa193>
  40a218:	mov    rdi,QWORD PTR [r15]
  40a21b:	mov    esi,0xb
  40a220:	jmp    4080eb <main@@Base+0x37ab>
  40a225:	mov    ecx,0xa
  40a22a:	mov    rdi,r15
  40a22d:	mov    rsi,r13
  40a230:	jmp    408b63 <main@@Base+0x4223>
  40a235:	mov    rdi,r15
  40a238:	mov    rsi,r14
  40a23b:	mov    rdx,r13
  40a23e:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40a243:	mov    r14,rax
  40a246:	jmp    4074ce <main@@Base+0x2b8e>
  40a24b:	mov    rdi,r15
  40a24e:	mov    rsi,r12
  40a251:	mov    rdx,QWORD PTR [rsp+0x8]
  40a256:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40a25b:	mov    r12,rax
  40a25e:	cmp    r14,r12
  40a261:	je     40a2c3 <main@@Base+0x5983>
  40a263:	mov    QWORD PTR [rsp+0x30],0x0
  40a26c:	mov    DWORD PTR [rsp+0x40],0x0
  40a274:	mov    WORD PTR [rsp+0x1c],0x0
  40a27b:	mov    rdx,QWORD PTR [rsp+0x8]
  40a280:	cmp    r12,rdx
  40a283:	je     40a2d3 <main@@Base+0x5993>
  40a285:	mov    rdi,r15
  40a288:	mov    rsi,r12
  40a28b:	lea    rcx,[rsp+0x40]
  40a290:	lea    r8,[rsp+0x30]
  40a295:	call   4215e0 <flatcc_json_parser_integer@@Base>
  40a29a:	cmp    rax,r12
  40a29d:	mov    rbp,QWORD PTR [rsp+0x20]
  40a2a2:	je     40a2e4 <main@@Base+0x59a4>
  40a2a4:	mov    r14,rax
  40a2a7:	mov    rbx,QWORD PTR [rsp+0x30]
  40a2ac:	cmp    DWORD PTR [rsp+0x40],0x0
  40a2b1:	je     40a2f0 <main@@Base+0x59b0>
  40a2b3:	cmp    rbx,0x8001
  40a2ba:	jb     40a31a <main@@Base+0x59da>
  40a2bc:	mov    ecx,0x8
  40a2c1:	jmp    40a2fe <main@@Base+0x59be>
  40a2c3:	mov    rdi,r15
  40a2c6:	mov    rsi,r14
  40a2c9:	mov    r13,QWORD PTR [rsp+0x8]
  40a2ce:	jmp    40c5de <main@@Base+0x7c9e>
  40a2d3:	xor    ebx,ebx
  40a2d5:	mov    r14,rdx
  40a2d8:	mov    rbp,QWORD PTR [rsp+0x20]
  40a2dd:	cmp    r12,r14
  40a2e0:	jne    40a360 <main@@Base+0x5a20>
  40a2e2:	jmp    40a327 <main@@Base+0x59e7>
  40a2e4:	xor    ebx,ebx
  40a2e6:	mov    r14,r12
  40a2e9:	cmp    r12,r14
  40a2ec:	jne    40a360 <main@@Base+0x5a20>
  40a2ee:	jmp    40a327 <main@@Base+0x59e7>
  40a2f0:	cmp    rbx,0x8000
  40a2f7:	jb     40a31d <main@@Base+0x59dd>
  40a2f9:	mov    ecx,0x7
  40a2fe:	mov    rdi,r15
  40a301:	mov    rsi,r14
  40a304:	mov    rdx,QWORD PTR [rsp+0x8]
  40a309:	call   41f940 <flatcc_json_parser_set_error@@Base>
  40a30e:	mov    r14,rax
  40a311:	xor    ebx,ebx
  40a313:	cmp    r12,r14
  40a316:	jne    40a360 <main@@Base+0x5a20>
  40a318:	jmp    40a327 <main@@Base+0x59e7>
  40a31a:	neg    rbx
  40a31d:	mov    WORD PTR [rsp+0x1c],bx
  40a322:	cmp    r12,r14
  40a325:	jne    40a360 <main@@Base+0x5a20>
  40a327:	mov    rdi,r15
  40a32a:	mov    rsi,r12
  40a32d:	mov    rbx,QWORD PTR [rsp+0x8]
  40a332:	mov    rdx,rbx
  40a335:	lea    rcx,[rip+0x20e24]        # 42b160 <filename@@Base+0x90>
  40a33c:	lea    r8,[rsp+0x1c]
  40a341:	call   410430 <main@@Base+0xbaf0>
  40a346:	mov    r14,rax
  40a349:	cmp    rax,r12
  40a34c:	je     40eabc <main@@Base+0xa17c>
  40a352:	cmp    r14,rbx
  40a355:	je     40eabc <main@@Base+0xa17c>
  40a35b:	movzx  ebx,WORD PTR [rsp+0x1c]
  40a360:	movzx  eax,bx
  40a363:	cmp    eax,0x96
  40a368:	mov    r13,QWORD PTR [rsp+0x8]
  40a36d:	movabs r12,0x7465737400000000
  40a377:	jne    40a384 <main@@Base+0x5a44>
  40a379:	test   BYTE PTR [r15+0x10],0x2
  40a37e:	je     40c600 <main@@Base+0x7cc0>
  40a384:	mov    rdi,QWORD PTR [r15]
  40a387:	mov    esi,0x1
  40a38c:	mov    edx,0x2
  40a391:	mov    ecx,0x2
  40a396:	call   41d880 <flatcc_builder_table_add@@Base>
  40a39b:	test   rax,rax
  40a39e:	je     40eabc <main@@Base+0xa17c>
  40a3a4:	mov    WORD PTR [rax],bx
  40a3a7:	jmp    40c600 <main@@Base+0x7cc0>
  40a3ac:	mov    rdi,r15
  40a3af:	mov    rsi,rbx
  40a3b2:	mov    rdx,QWORD PTR [rsp+0x8]
  40a3b7:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40a3bc:	mov    rbx,rax
  40a3bf:	cmp    r14,rbx
  40a3c2:	je     407fbf <main@@Base+0x367f>
  40a3c8:	mov    DWORD PTR [rsp+0x30],0x0
  40a3d0:	mov    rdi,r15
  40a3d3:	mov    rsi,rbx
  40a3d6:	mov    rdx,QWORD PTR [rsp+0x8]
  40a3db:	lea    rcx,[rsp+0x30]
  40a3e0:	call   4214c0 <flatcc_json_parser_float@@Base>
  40a3e5:	mov    r14,rax
  40a3e8:	cmp    rbx,rax
  40a3eb:	mov    rbp,QWORD PTR [rsp+0x20]
  40a3f0:	jne    40a430 <main@@Base+0x5af0>
  40a3f2:	mov    rdi,r15
  40a3f5:	mov    rsi,rbx
  40a3f8:	mov    r12,QWORD PTR [rsp+0x8]
  40a3fd:	mov    rdx,r12
  40a400:	lea    rcx,[rip+0x20df9]        # 42b200 <filename@@Base+0x130>
  40a407:	lea    r8,[rsp+0x30]
  40a40c:	call   414220 <main@@Base+0xf8e0>
  40a411:	mov    r14,rax
  40a414:	cmp    rax,rbx
  40a417:	je     40eaa5 <main@@Base+0xa165>
  40a41d:	cmp    r14,r12
  40a420:	movabs r12,0x7465737400000000
  40a42a:	je     40eaa5 <main@@Base+0xa165>
  40a430:	vmovss xmm0,DWORD PTR [rsp+0x30]
  40a436:	vucomiss xmm0,DWORD PTR [rip+0x19bd2]        # 424010 <_IO_stdin_used@@Base+0x10>
  40a43e:	mov    r13,QWORD PTR [rsp+0x8]
  40a443:	jne    40a452 <main@@Base+0x5b12>
  40a445:	jp     40a452 <main@@Base+0x5b12>
  40a447:	test   BYTE PTR [r15+0x10],0x2
  40a44c:	je     40c600 <main@@Base+0x7cc0>
  40a452:	mov    rdi,QWORD PTR [r15]
  40a455:	mov    esi,0x19
  40a45a:	mov    edx,0x4
  40a45f:	mov    ecx,0x4
  40a464:	call   41d880 <flatcc_builder_table_add@@Base>
  40a469:	test   rax,rax
  40a46c:	je     40eaa5 <main@@Base+0xa165>
  40a472:	mov    ecx,DWORD PTR [rsp+0x30]
  40a476:	mov    DWORD PTR [rax],ecx
  40a478:	jmp    40c600 <main@@Base+0x7cc0>
  40a47d:	mov    rdi,QWORD PTR [rsp+0x10]
  40a482:	mov    rsi,rbx
  40a485:	mov    rdx,QWORD PTR [rsp+0x8]
  40a48a:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40a48f:	mov    rbx,rax
  40a492:	cmp    r15,rbx
  40a495:	je     407c58 <main@@Base+0x3318>
  40a49b:	mov    QWORD PTR [rsp+0x30],0x0
  40a4a4:	mov    DWORD PTR [rsp+0x1c],0x0
  40a4ac:	mov    QWORD PTR [rsp+0x40],0x0
  40a4b5:	mov    rdx,QWORD PTR [rsp+0x8]
  40a4ba:	cmp    rbx,rdx
  40a4bd:	je     40a512 <main@@Base+0x5bd2>
  40a4bf:	mov    r15,QWORD PTR [rsp+0x10]
  40a4c4:	mov    rdi,r15
  40a4c7:	mov    rsi,rbx
  40a4ca:	lea    rcx,[rsp+0x1c]
  40a4cf:	lea    r8,[rsp+0x30]
  40a4d4:	call   4215e0 <flatcc_json_parser_integer@@Base>
  40a4d9:	cmp    rax,rbx
  40a4dc:	je     40ae13 <main@@Base+0x64d3>
  40a4e2:	mov    r14,rax
  40a4e5:	mov    r12,QWORD PTR [rsp+0x30]
  40a4ea:	cmp    DWORD PTR [rsp+0x1c],0x0
  40a4ef:	je     40b09e <main@@Base+0x675e>
  40a4f5:	movabs rax,0x8000000000000000
  40a4ff:	cmp    r12,rax
  40a502:	jbe    40b0fc <main@@Base+0x67bc>
  40a508:	mov    ecx,0x8
  40a50d:	jmp    40b0a8 <main@@Base+0x6768>
  40a512:	xor    r12d,r12d
  40a515:	mov    r14,rdx
  40a518:	mov    r15,QWORD PTR [rsp+0x10]
  40a51d:	jmp    40b104 <main@@Base+0x67c4>
  40a522:	mov    rdi,QWORD PTR [rsp+0x10]
  40a527:	mov    rsi,r12
  40a52a:	mov    rdx,r13
  40a52d:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40a532:	mov    r12,rax
  40a535:	cmp    r15,r12
  40a538:	je     40c5d3 <main@@Base+0x7c93>
  40a53e:	mov    DWORD PTR [rsp+0x3c],0x0
  40a546:	mov    r15,QWORD PTR [rsp+0x10]
  40a54b:	mov    rdi,QWORD PTR [r15]
  40a54e:	mov    esi,0x3
  40a553:	call   41c500 <flatcc_builder_start_table@@Base>
  40a558:	test   eax,eax
  40a55a:	jne    40c823 <main@@Base+0x7ee3>
  40a560:	cmp    r12,r13
  40a563:	je     40ab13 <main@@Base+0x61d3>
  40a569:	cmp    BYTE PTR [r12],0x7b
  40a56e:	jne    40ab13 <main@@Base+0x61d3>
  40a574:	lea    rax,[r12+0x1]
  40a579:	sub    r13,rax
  40a57c:	cmp    r13,0x2
  40a580:	jl     40c13a <main@@Base+0x77fa>
  40a586:	cmp    BYTE PTR [rax],0x20
  40a589:	jg     40c14c <main@@Base+0x780c>
  40a58f:	jne    40c13a <main@@Base+0x77fa>
  40a595:	cmp    BYTE PTR [r12+0x2],0x20
  40a59b:	jle    40c13a <main@@Base+0x77fa>
  40a5a1:	add    r12,0x2
  40a5a5:	mov    rax,r12
  40a5a8:	jmp    40c14c <main@@Base+0x780c>
  40a5ad:	mov    rdi,QWORD PTR [rsp+0x10]
  40a5b2:	mov    rsi,r12
  40a5b5:	mov    rdx,r13
  40a5b8:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40a5bd:	mov    r12,rax
  40a5c0:	cmp    r15,r12
  40a5c3:	je     40c5d3 <main@@Base+0x7c93>
  40a5c9:	mov    r15,QWORD PTR [rsp+0x10]
  40a5ce:	mov    rdi,QWORD PTR [r15]
  40a5d1:	mov    esi,0x1
  40a5d6:	mov    edx,0x1
  40a5db:	mov    ecx,0xffffffff
  40a5e0:	call   41c090 <flatcc_builder_start_vector@@Base>
  40a5e5:	test   eax,eax
  40a5e7:	jne    4049f1 <main@@Base+0xb1>
  40a5ed:	cmp    r12,r13
  40a5f0:	je     40a63a <main@@Base+0x5cfa>
  40a5f2:	cmp    BYTE PTR [r12],0x5b
  40a5f7:	jne    40a63a <main@@Base+0x5cfa>
  40a5f9:	lea    rax,[r12+0x1]
  40a5fe:	mov    rcx,r13
  40a601:	sub    rcx,rax
  40a604:	cmp    rcx,0x2
  40a608:	jl     40b008 <main@@Base+0x66c8>
  40a60e:	cmp    BYTE PTR [rax],0x20
  40a611:	jg     40b016 <main@@Base+0x66d6>
  40a617:	mov    r15,QWORD PTR [rsp+0x10]
  40a61c:	jne    40b008 <main@@Base+0x66c8>
  40a622:	cmp    BYTE PTR [r12+0x2],0x20
  40a628:	jle    40b008 <main@@Base+0x66c8>
  40a62e:	add    r12,0x2
  40a632:	mov    rax,r12
  40a635:	jmp    40b016 <main@@Base+0x66d6>
  40a63a:	mov    ecx,0x16
  40a63f:	mov    rdi,r15
  40a642:	mov    rsi,r12
  40a645:	mov    rdx,r13
  40a648:	call   41f940 <flatcc_json_parser_set_error@@Base>
  40a64d:	mov    r14,rax
  40a650:	mov    rdi,QWORD PTR [r15]
  40a653:	call   41d220 <flatcc_builder_end_vector@@Base>
  40a658:	mov    DWORD PTR [rsp+0x3c],eax
  40a65c:	test   eax,eax
  40a65e:	mov    rbp,QWORD PTR [rsp+0x20]
  40a663:	movabs r12,0x7465737400000000
  40a66d:	je     40ead3 <main@@Base+0xa193>
  40a673:	mov    rdi,QWORD PTR [r15]
  40a676:	mov    esi,0x5
  40a67b:	jmp    4080eb <main@@Base+0x37ab>
  40a680:	mov    ecx,0x15
  40a685:	mov    rdi,r15
  40a688:	mov    rsi,r12
  40a68b:	mov    rdx,r13
  40a68e:	call   41f940 <flatcc_json_parser_set_error@@Base>
  40a693:	mov    r14,rax
  40a696:	mov    rax,QWORD PTR [rsp+0x48]
  40a69b:	cmp    DWORD PTR [rax],0x0
  40a69e:	je     40b067 <main@@Base+0x6727>
  40a6a4:	mov    r12,r14
  40a6a7:	mov    ecx,0x21
  40a6ac:	mov    rdi,r15
  40a6af:	mov    rsi,r12
  40a6b2:	mov    rdx,r13
  40a6b5:	call   41f940 <flatcc_json_parser_set_error@@Base>
  40a6ba:	mov    r14,rax
  40a6bd:	cmp    DWORD PTR [rsp+0x3c],0x0
  40a6c2:	mov    r12,rax
  40a6c5:	je     4049f1 <main@@Base+0xb1>
  40a6cb:	mov    rdi,QWORD PTR [r15]
  40a6ce:	mov    esi,0x23
  40a6d3:	jmp    40c84f <main@@Base+0x7f0f>
  40a6d8:	mov    ecx,0x9
  40a6dd:	mov    rdi,r15
  40a6e0:	mov    rsi,rax
  40a6e3:	mov    rdx,r13
  40a6e6:	call   41f940 <flatcc_json_parser_set_error@@Base>
  40a6eb:	mov    r14,rax
  40a6ee:	jmp    4074d8 <main@@Base+0x2b98>
  40a6f3:	mov    rdi,r15
  40a6f6:	mov    rsi,r14
  40a6f9:	mov    rdx,r13
  40a6fc:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40a701:	mov    r14,rax
  40a704:	cmp    r12,r14
  40a707:	je     407ec8 <main@@Base+0x3588>
  40a70d:	mov    DWORD PTR [rsp+0x3c],0x0
  40a715:	mov    rdi,QWORD PTR [r15]
  40a718:	xor    esi,esi
  40a71a:	call   41c500 <flatcc_builder_start_table@@Base>
  40a71f:	test   eax,eax
  40a721:	jne    40adc7 <main@@Base+0x6487>
  40a727:	cmp    r14,r13
  40a72a:	je     40ada3 <main@@Base+0x6463>
  40a730:	cmp    BYTE PTR [r14],0x7b
  40a734:	jne    40ada3 <main@@Base+0x6463>
  40a73a:	lea    rax,[r14+0x1]
  40a73e:	sub    r13,rax
  40a741:	cmp    r13,0x2
  40a745:	jl     40c1a2 <main@@Base+0x7862>
  40a74b:	cmp    BYTE PTR [rax],0x20
  40a74e:	jg     40c1b4 <main@@Base+0x7874>
  40a754:	jne    40c1a2 <main@@Base+0x7862>
  40a75a:	cmp    BYTE PTR [r14+0x2],0x20
  40a75f:	jle    40c1a2 <main@@Base+0x7862>
  40a765:	add    r14,0x2
  40a769:	mov    rax,r14
  40a76c:	jmp    40c1b4 <main@@Base+0x7874>
  40a771:	cmp    al,0x22
  40a773:	jne    40c8bd <main@@Base+0x7f7d>
  40a779:	add    r14,0x12
  40a77d:	mov    rbx,QWORD PTR [rsp+0x8]
  40a782:	mov    rax,rbx
  40a785:	sub    rax,r14
  40a788:	cmp    rax,0x2
  40a78c:	jl     40a855 <main@@Base+0x5f15>
  40a792:	cmp    BYTE PTR [r14],0x20
  40a796:	jg     40a868 <main@@Base+0x5f28>
  40a79c:	jne    40a855 <main@@Base+0x5f15>
  40a7a2:	cmp    BYTE PTR [r14+0x1],0x20
  40a7a7:	jle    40a855 <main@@Base+0x5f15>
  40a7ad:	add    r14,0x1
  40a7b1:	cmp    r14,rbx
  40a7b4:	jne    40a871 <main@@Base+0x5f31>
  40a7ba:	jmp    40a913 <main@@Base+0x5fd3>
  40a7bf:	cmp    al,0x22
  40a7c1:	jne    40c8bd <main@@Base+0x7f7d>
  40a7c7:	add    r14,0x12
  40a7cb:	mov    rbx,QWORD PTR [rsp+0x8]
  40a7d0:	mov    rax,rbx
  40a7d3:	sub    rax,r14
  40a7d6:	cmp    rax,0x2
  40a7da:	jl     40a8b8 <main@@Base+0x5f78>
  40a7e0:	cmp    BYTE PTR [r14],0x20
  40a7e4:	jg     40a8cb <main@@Base+0x5f8b>
  40a7ea:	jne    40a8b8 <main@@Base+0x5f78>
  40a7f0:	cmp    BYTE PTR [r14+0x1],0x20
  40a7f5:	jle    40a8b8 <main@@Base+0x5f78>
  40a7fb:	add    r14,0x1
  40a7ff:	cmp    r14,rbx
  40a802:	jne    40a8d0 <main@@Base+0x5f90>
  40a808:	jmp    40a939 <main@@Base+0x5ff9>
  40a80d:	mov    rdi,r15
  40a810:	mov    rsi,r14
  40a813:	mov    rdx,r13
  40a816:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40a81b:	mov    r14,rax
  40a81e:	jmp    4080c5 <main@@Base+0x3785>
  40a823:	test   rax,0xffffffff80000000
  40a829:	je     40ad3c <main@@Base+0x63fc>
  40a82f:	mov    ecx,0x7
  40a834:	mov    rdi,r15
  40a837:	mov    rsi,r14
  40a83a:	mov    rdx,QWORD PTR [rsp+0x8]
  40a83f:	call   41f940 <flatcc_json_parser_set_error@@Base>
  40a844:	mov    r14,rax
  40a847:	cmp    rbx,r14
  40a84a:	jne    40ad81 <main@@Base+0x6441>
  40a850:	jmp    40ad48 <main@@Base+0x6408>
  40a855:	mov    rdi,QWORD PTR [rsp+0x10]
  40a85a:	mov    rsi,r14
  40a85d:	mov    rdx,rbx
  40a860:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40a865:	mov    r14,rax
  40a868:	cmp    r14,rbx
  40a86b:	je     40a913 <main@@Base+0x5fd3>
  40a871:	cmp    BYTE PTR [r14],0x3a
  40a875:	jne    40a913 <main@@Base+0x5fd3>
  40a87b:	mov    rax,rbx
  40a87e:	lea    rbx,[r14+0x1]
  40a882:	sub    rax,rbx
  40a885:	cmp    rax,0x2
  40a889:	jl     40bff9 <main@@Base+0x76b9>
  40a88f:	cmp    BYTE PTR [rbx],0x20
  40a892:	jg     40c00e <main@@Base+0x76ce>
  40a898:	jne    40bff9 <main@@Base+0x76b9>
  40a89e:	mov    rcx,r14
  40a8a1:	cmp    BYTE PTR [r14+0x2],0x20
  40a8a6:	jle    40bff9 <main@@Base+0x76b9>
  40a8ac:	mov    rbx,rcx
  40a8af:	add    rbx,0x2
  40a8b3:	jmp    40c00e <main@@Base+0x76ce>
  40a8b8:	mov    rdi,QWORD PTR [rsp+0x10]
  40a8bd:	mov    rsi,r14
  40a8c0:	mov    rdx,rbx
  40a8c3:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40a8c8:	mov    r14,rax
  40a8cb:	cmp    r14,rbx
  40a8ce:	je     40a939 <main@@Base+0x5ff9>
  40a8d0:	cmp    BYTE PTR [r14],0x3a
  40a8d4:	jne    40a939 <main@@Base+0x5ff9>
  40a8d6:	mov    rax,rbx
  40a8d9:	lea    rbx,[r14+0x1]
  40a8dd:	sub    rax,rbx
  40a8e0:	cmp    rax,0x2
  40a8e4:	jl     40c087 <main@@Base+0x7747>
  40a8ea:	cmp    BYTE PTR [rbx],0x20
  40a8ed:	jg     40c09c <main@@Base+0x775c>
  40a8f3:	jne    40c087 <main@@Base+0x7747>
  40a8f9:	mov    rcx,r14
  40a8fc:	cmp    BYTE PTR [r14+0x2],0x20
  40a901:	jle    40c087 <main@@Base+0x7747>
  40a907:	mov    rbx,rcx
  40a90a:	add    rbx,0x2
  40a90e:	jmp    40c09c <main@@Base+0x775c>
  40a913:	mov    ecx,0x4
  40a918:	mov    rdi,QWORD PTR [rsp+0x10]
  40a91d:	mov    rsi,r14
  40a920:	mov    rdx,rbx
  40a923:	call   41f940 <flatcc_json_parser_set_error@@Base>
  40a928:	mov    rbx,rax
  40a92b:	cmp    r15,rbx
  40a92e:	jne    40c021 <main@@Base+0x76e1>
  40a934:	jmp    40c8bd <main@@Base+0x7f7d>
  40a939:	mov    ecx,0x4
  40a93e:	mov    rdi,QWORD PTR [rsp+0x10]
  40a943:	mov    rsi,r14
  40a946:	mov    rdx,rbx
  40a949:	call   41f940 <flatcc_json_parser_set_error@@Base>
  40a94e:	mov    rbx,rax
  40a951:	cmp    r15,rbx
  40a954:	jne    40c0af <main@@Base+0x776f>
  40a95a:	jmp    40c8bd <main@@Base+0x7f7d>
  40a95f:	mov    rdi,QWORD PTR [rsp+0x10]
  40a964:	mov    rsi,rbx
  40a967:	mov    rdx,QWORD PTR [rsp+0x8]
  40a96c:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40a971:	mov    rbx,rax
  40a974:	cmp    r15,rbx
  40a977:	je     40c8bd <main@@Base+0x7f7d>
  40a97d:	mov    QWORD PTR [rsp+0x30],0x0
  40a986:	mov    DWORD PTR [rsp+0x40],0x0
  40a98e:	mov    DWORD PTR [rsp+0x1c],0x0
  40a996:	xor    r12d,r12d
  40a999:	mov    rdx,QWORD PTR [rsp+0x8]
  40a99e:	cmp    rbx,rdx
  40a9a1:	je     40a9f8 <main@@Base+0x60b8>
  40a9a3:	mov    r15,QWORD PTR [rsp+0x10]
  40a9a8:	mov    rdi,r15
  40a9ab:	mov    rsi,rbx
  40a9ae:	lea    rcx,[rsp+0x40]
  40a9b3:	lea    r8,[rsp+0x30]
  40a9b8:	call   4215e0 <flatcc_json_parser_integer@@Base>
  40a9bd:	cmp    rax,rbx
  40a9c0:	je     40b05f <main@@Base+0x671f>
  40a9c6:	mov    r14,rax
  40a9c9:	mov    rax,QWORD PTR [rsp+0x30]
  40a9ce:	cmp    DWORD PTR [rsp+0x40],0x0
  40a9d3:	je     40bb73 <main@@Base+0x7233>
  40a9d9:	mov    ecx,0xffffffff
  40a9de:	lea    rcx,[rcx-0x7fffffff]
  40a9e5:	cmp    rax,rcx
  40a9e8:	jbe    40bd78 <main@@Base+0x7438>
  40a9ee:	mov    ecx,0x8
  40a9f3:	jmp    40bb84 <main@@Base+0x7244>
  40a9f8:	mov    r14,rdx
  40a9fb:	mov    r15,QWORD PTR [rsp+0x10]
  40aa00:	jmp    40bd82 <main@@Base+0x7442>
  40aa05:	mov    rdi,r15
  40aa08:	mov    rsi,rax
  40aa0b:	mov    rdx,r13
  40aa0e:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40aa13:	mov    rsi,r13
  40aa16:	cmp    rax,r13
  40aa19:	je     40b16c <main@@Base+0x682c>
  40aa1f:	cmp    BYTE PTR [rax],0x5d
  40aa22:	jne    40b169 <main@@Base+0x6829>
  40aa28:	lea    r14,[rax+0x1]
  40aa2c:	sub    r13,r14
  40aa2f:	cmp    r13,0x2
  40aa33:	jl     40e8b8 <main@@Base+0x9f78>
  40aa39:	cmp    BYTE PTR [r14],0x20
  40aa3d:	jg     40d68d <main@@Base+0x8d4d>
  40aa43:	jne    40e8b8 <main@@Base+0x9f78>
  40aa49:	cmp    BYTE PTR [rax+0x2],0x20
  40aa4d:	jle    40e8b8 <main@@Base+0x9f78>
  40aa53:	add    rax,0x2
  40aa57:	mov    r14,rax
  40aa5a:	jmp    40d68d <main@@Base+0x8d4d>
  40aa5f:	mov    rdi,r15
  40aa62:	mov    rsi,rax
  40aa65:	mov    rdx,r13
  40aa68:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40aa6d:	mov    r12,r13
  40aa70:	cmp    rax,r13
  40aa73:	je     40b288 <main@@Base+0x6948>
  40aa79:	cmp    BYTE PTR [rax],0x5d
  40aa7c:	jne    40b285 <main@@Base+0x6945>
  40aa82:	lea    r14,[rax+0x1]
  40aa86:	sub    r13,r14
  40aa89:	cmp    r13,0x2
  40aa8d:	jl     40e6f3 <main@@Base+0x9db3>
  40aa93:	cmp    BYTE PTR [r14],0x20
  40aa97:	jg     40c9b3 <main@@Base+0x8073>
  40aa9d:	jne    40e6f3 <main@@Base+0x9db3>
  40aaa3:	cmp    BYTE PTR [rax+0x2],0x20
  40aaa7:	jle    40e6f3 <main@@Base+0x9db3>
  40aaad:	add    rax,0x2
  40aab1:	mov    r14,rax
  40aab4:	jmp    40c9b3 <main@@Base+0x8073>
  40aab9:	mov    rdi,r15
  40aabc:	mov    rsi,rax
  40aabf:	mov    rdx,r13
  40aac2:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40aac7:	mov    rsi,r13
  40aaca:	cmp    rax,r13
  40aacd:	je     40ba5a <main@@Base+0x711a>
  40aad3:	cmp    BYTE PTR [rax],0x5d
  40aad6:	jne    40ba57 <main@@Base+0x7117>
  40aadc:	lea    r14,[rax+0x1]
  40aae0:	sub    r13,r14
  40aae3:	cmp    r13,0x2
  40aae7:	jl     40e8eb <main@@Base+0x9fab>
  40aaed:	cmp    BYTE PTR [r14],0x20
  40aaf1:	jg     40d6c5 <main@@Base+0x8d85>
  40aaf7:	jne    40e8eb <main@@Base+0x9fab>
  40aafd:	cmp    BYTE PTR [rax+0x2],0x20
  40ab01:	jle    40e8eb <main@@Base+0x9fab>
  40ab07:	add    rax,0x2
  40ab0b:	mov    r14,rax
  40ab0e:	jmp    40d6c5 <main@@Base+0x8d85>
  40ab13:	mov    ecx,0x15
  40ab18:	mov    rdi,r15
  40ab1b:	mov    rsi,r12
  40ab1e:	mov    rdx,r13
  40ab21:	call   41f940 <flatcc_json_parser_set_error@@Base>
  40ab26:	mov    r14,rax
  40ab29:	mov    rax,QWORD PTR [rsp+0x48]
  40ab2e:	cmp    DWORD PTR [rax],0x0
  40ab31:	je     40b0c0 <main@@Base+0x6780>
  40ab37:	mov    r12,r14
  40ab3a:	jmp    40c823 <main@@Base+0x7ee3>
  40ab3f:	mov    r12,rax
  40ab42:	mov    BYTE PTR [rsp+0x1c],0x0
  40ab47:	mov    rdi,QWORD PTR [r15]
  40ab4a:	mov    esi,0x1
  40ab4f:	call   41b720 <flatcc_builder_extend_vector@@Base>
  40ab54:	test   rax,rax
  40ab57:	je     4049f1 <main@@Base+0xb1>
  40ab5d:	mov    rbp,rax
  40ab60:	mov    rax,r13
  40ab63:	sub    rax,r12
  40ab66:	cmp    rax,0x4
  40ab6a:	jl     40ab98 <main@@Base+0x6258>
  40ab6c:	cmp    DWORD PTR [r12],0x65757274
  40ab74:	je     40abe0 <main@@Base+0x62a0>
  40ab76:	cmp    rax,0x5
  40ab7a:	jl     40ab98 <main@@Base+0x6258>
  40ab7c:	mov    eax,DWORD PTR [r12]
  40ab80:	mov    ecx,0x736c6166
  40ab85:	xor    eax,ecx
  40ab87:	movzx  ecx,BYTE PTR [r12+0x4]
  40ab8d:	xor    ecx,0x65
  40ab90:	or     ecx,eax
  40ab92:	je     40ad15 <main@@Base+0x63d5>
  40ab98:	mov    QWORD PTR [rsp+0x30],0x0
  40aba1:	mov    DWORD PTR [rsp+0x40],0x0
  40aba9:	cmp    r12,r13
  40abac:	je     40abd9 <main@@Base+0x6299>
  40abae:	mov    rdi,r15
  40abb1:	mov    rsi,r12
  40abb4:	mov    rdx,r13
  40abb7:	lea    rcx,[rsp+0x40]
  40abbc:	lea    r8,[rsp+0x30]
  40abc1:	call   4215e0 <flatcc_json_parser_integer@@Base>
  40abc6:	cmp    rax,r12
  40abc9:	je     40abf3 <main@@Base+0x62b3>
  40abcb:	cmp    DWORD PTR [rsp+0x40],0x0
  40abd0:	je     40abfa <main@@Base+0x62ba>
  40abd2:	mov    ecx,0x8
  40abd7:	jmp    40ac11 <main@@Base+0x62d1>
  40abd9:	xor    ecx,ecx
  40abdb:	mov    rax,r13
  40abde:	jmp    40ac21 <main@@Base+0x62e1>
  40abe0:	mov    BYTE PTR [rsp+0x1c],0x1
  40abe5:	lea    rax,[r12+0x4]
  40abea:	mov    cl,0x1
  40abec:	cmp    r12,rax
  40abef:	jne    40ac5b <main@@Base+0x631b>
  40abf1:	jmp    40ac2a <main@@Base+0x62ea>
  40abf3:	xor    ecx,ecx
  40abf5:	mov    rax,r12
  40abf8:	jmp    40ac21 <main@@Base+0x62e1>
  40abfa:	mov    rcx,QWORD PTR [rsp+0x30]
  40abff:	cmp    rcx,0x100
  40ac06:	jb     40ad2f <main@@Base+0x63ef>
  40ac0c:	mov    ecx,0x7
  40ac11:	mov    rdi,r15
  40ac14:	mov    rsi,rax
  40ac17:	mov    rdx,r13
  40ac1a:	call   41f940 <flatcc_json_parser_set_error@@Base>
  40ac1f:	xor    ecx,ecx
  40ac21:	mov    BYTE PTR [rsp+0x1c],cl
  40ac25:	cmp    r12,rax
  40ac28:	jne    40ac5b <main@@Base+0x631b>
  40ac2a:	mov    rdi,r15
  40ac2d:	mov    rsi,r12
  40ac30:	mov    rdx,r13
  40ac33:	lea    rcx,[rip+0x20566]        # 42b1a0 <filename@@Base+0xd0>
  40ac3a:	lea    r8,[rsp+0x1c]
  40ac3f:	call   414030 <main@@Base+0xf6f0>
  40ac44:	cmp    rax,r12
  40ac47:	je     40eae8 <main@@Base+0xa1a8>
  40ac4d:	cmp    rax,r13
  40ac50:	je     40eae8 <main@@Base+0xa1a8>
  40ac56:	movzx  ecx,BYTE PTR [rsp+0x1c]
  40ac5b:	mov    BYTE PTR [rbp+0x0],cl
  40ac5e:	mov    rcx,r13
  40ac61:	sub    rcx,rax
  40ac64:	cmp    rcx,0x2
  40ac68:	jl     40ac85 <main@@Base+0x6345>
  40ac6a:	cmp    BYTE PTR [rax],0x20
  40ac6d:	jg     40ac93 <main@@Base+0x6353>
  40ac6f:	jne    40ac85 <main@@Base+0x6345>
  40ac71:	cmp    BYTE PTR [rax+0x1],0x20
  40ac75:	jle    40ac85 <main@@Base+0x6345>
  40ac77:	add    rax,0x1
  40ac7b:	cmp    rax,r13
  40ac7e:	jne    40ac9c <main@@Base+0x635c>
  40ac80:	jmp    40bc04 <main@@Base+0x72c4>
  40ac85:	mov    rdi,r15
  40ac88:	mov    rsi,rax
  40ac8b:	mov    rdx,r13
  40ac8e:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40ac93:	cmp    rax,r13
  40ac96:	je     40bc04 <main@@Base+0x72c4>
  40ac9c:	movzx  ecx,BYTE PTR [rax]
  40ac9f:	cmp    cl,0x2c
  40aca2:	jne    40bc0c <main@@Base+0x72cc>
  40aca8:	lea    r12,[rax+0x1]
  40acac:	mov    rcx,r13
  40acaf:	sub    rcx,r12
  40acb2:	cmp    rcx,0x2
  40acb6:	jl     40accd <main@@Base+0x638d>
  40acb8:	cmp    BYTE PTR [r12],0x20
  40acbd:	jg     40acde <main@@Base+0x639e>
  40acbf:	jne    40accd <main@@Base+0x638d>
  40acc1:	cmp    BYTE PTR [rax+0x2],0x20
  40acc5:	jle    40accd <main@@Base+0x638d>
  40acc7:	add    rax,0x2
  40accb:	jmp    40acdb <main@@Base+0x639b>
  40accd:	mov    rdi,r15
  40acd0:	mov    rsi,r12
  40acd3:	mov    rdx,r13
  40acd6:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40acdb:	mov    r12,rax
  40acde:	cmp    r12,r13
  40ace1:	je     40bc51 <main@@Base+0x7311>
  40ace7:	cmp    BYTE PTR [r12],0x5d
  40acec:	je     40be0c <main@@Base+0x74cc>
  40acf2:	mov    BYTE PTR [rsp+0x1c],0x0
  40acf7:	mov    rdi,QWORD PTR [r15]
  40acfa:	mov    esi,0x1
  40acff:	call   41b720 <flatcc_builder_extend_vector@@Base>
  40ad04:	mov    rbp,rax
  40ad07:	test   rax,rax
  40ad0a:	jne    40ab60 <main@@Base+0x6220>
  40ad10:	jmp    4049f1 <main@@Base+0xb1>
  40ad15:	mov    BYTE PTR [rsp+0x1c],0x0
  40ad1a:	lea    rax,[r12+0x5]
  40ad1f:	xor    ecx,ecx
  40ad21:	cmp    r12,rax
  40ad24:	jne    40ac5b <main@@Base+0x631b>
  40ad2a:	jmp    40ac2a <main@@Base+0x62ea>
  40ad2f:	test   cl,cl
  40ad31:	setne  cl
  40ad34:	jmp    40ac21 <main@@Base+0x62e1>
  40ad39:	neg    rax
  40ad3c:	mov    DWORD PTR [rsp+0x1c],eax
  40ad40:	mov    r12d,eax
  40ad43:	cmp    rbx,r14
  40ad46:	jne    40ad81 <main@@Base+0x6441>
  40ad48:	mov    rdi,r15
  40ad4b:	mov    rsi,rbx
  40ad4e:	mov    r12,QWORD PTR [rsp+0x8]
  40ad53:	mov    rdx,r12
  40ad56:	lea    rcx,[rip+0x204e3]        # 42b240 <filename@@Base+0x170>
  40ad5d:	lea    r8,[rsp+0x1c]
  40ad62:	call   414410 <main@@Base+0xfad0>
  40ad67:	mov    r14,rax
  40ad6a:	cmp    rax,rbx
  40ad6d:	je     40eabc <main@@Base+0xa17c>
  40ad73:	cmp    r14,r12
  40ad76:	je     40eabc <main@@Base+0xa17c>
  40ad7c:	mov    r12d,DWORD PTR [rsp+0x1c]
  40ad81:	test   r12d,r12d
  40ad84:	mov    r13,QWORD PTR [rsp+0x8]
  40ad89:	jne    40ad96 <main@@Base+0x6456>
  40ad8b:	test   BYTE PTR [r15+0x10],0x2
  40ad90:	je     40c5ee <main@@Base+0x7cae>
  40ad96:	mov    rdi,QWORD PTR [r15]
  40ad99:	mov    esi,0x10
  40ad9e:	jmp    40bdec <main@@Base+0x74ac>
  40ada3:	mov    ecx,0x15
  40ada8:	mov    rdi,r15
  40adab:	mov    rsi,r14
  40adae:	mov    rdx,r13
  40adb1:	call   41f940 <flatcc_json_parser_set_error@@Base>
  40adb6:	mov    r14,rax
  40adb9:	mov    rax,QWORD PTR [rsp+0x48]
  40adbe:	cmp    DWORD PTR [rax],0x0
  40adc1:	je     40b0e3 <main@@Base+0x67a3>
  40adc7:	mov    ecx,0x21
  40adcc:	mov    rdi,r15
  40adcf:	mov    rsi,r14
  40add2:	mov    rdx,r13
  40add5:	call   41f940 <flatcc_json_parser_set_error@@Base>
  40adda:	mov    r14,rax
  40addd:	cmp    DWORD PTR [rsp+0x3c],0x0
  40ade2:	mov    r12,rax
  40ade5:	je     4049f1 <main@@Base+0xb1>
  40adeb:	mov    rdi,QWORD PTR [r15]
  40adee:	mov    esi,0x22
  40adf3:	jmp    40c84f <main@@Base+0x7f0f>
  40adf8:	mov    ecx,0x9
  40adfd:	mov    rdi,r15
  40ae00:	mov    rsi,rax
  40ae03:	mov    rdx,r13
  40ae06:	call   41f940 <flatcc_json_parser_set_error@@Base>
  40ae0b:	mov    r14,rax
  40ae0e:	jmp    4080cf <main@@Base+0x378f>
  40ae13:	xor    r12d,r12d
  40ae16:	mov    r14,rbx
  40ae19:	jmp    40b104 <main@@Base+0x67c4>
  40ae1e:	mov    rdi,QWORD PTR [rsp+0x10]
  40ae23:	mov    rsi,rbx
  40ae26:	mov    rdx,QWORD PTR [rsp+0x8]
  40ae2b:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40ae30:	mov    rbx,rax
  40ae33:	cmp    r15,rbx
  40ae36:	je     408713 <main@@Base+0x3dd3>
  40ae3c:	mov    QWORD PTR [rsp+0x30],0x0
  40ae45:	mov    DWORD PTR [rsp+0x40],0x0
  40ae4d:	mov    DWORD PTR [rsp+0x1c],0x0
  40ae55:	xor    r12d,r12d
  40ae58:	mov    rdx,QWORD PTR [rsp+0x8]
  40ae5d:	cmp    rbx,rdx
  40ae60:	je     40ae9d <main@@Base+0x655d>
  40ae62:	mov    r15,QWORD PTR [rsp+0x10]
  40ae67:	mov    rdi,r15
  40ae6a:	mov    rsi,rbx
  40ae6d:	lea    rcx,[rsp+0x40]
  40ae72:	lea    r8,[rsp+0x30]
  40ae77:	call   4215e0 <flatcc_json_parser_integer@@Base>
  40ae7c:	cmp    rax,rbx
  40ae7f:	je     40b08b <main@@Base+0x674b>
  40ae85:	mov    r14,rax
  40ae88:	cmp    DWORD PTR [rsp+0x40],0x0
  40ae8d:	je     40bc61 <main@@Base+0x7321>
  40ae93:	mov    ecx,0x8
  40ae98:	jmp    40bc7d <main@@Base+0x733d>
  40ae9d:	mov    r14,rdx
  40aea0:	mov    r15,QWORD PTR [rsp+0x10]
  40aea5:	jmp    40bc90 <main@@Base+0x7350>
  40aeaa:	mov    rdi,QWORD PTR [rsp+0x10]
  40aeaf:	mov    rsi,rbx
  40aeb2:	mov    rdx,QWORD PTR [rsp+0x8]
  40aeb7:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40aebc:	mov    rbx,rax
  40aebf:	cmp    r15,rbx
  40aec2:	je     40886c <main@@Base+0x3f2c>
  40aec8:	mov    QWORD PTR [rsp+0x30],0x0
  40aed1:	mov    DWORD PTR [rsp+0x1c],0x0
  40aed9:	mov    QWORD PTR [rsp+0x40],0x0
  40aee2:	mov    rdx,QWORD PTR [rsp+0x8]
  40aee7:	cmp    rbx,rdx
  40aeea:	je     40af3d <main@@Base+0x65fd>
  40aeec:	mov    r15,QWORD PTR [rsp+0x10]
  40aef1:	mov    rdi,r15
  40aef4:	mov    rsi,rbx
  40aef7:	lea    rcx,[rsp+0x1c]
  40aefc:	lea    r8,[rsp+0x30]
  40af01:	call   4215e0 <flatcc_json_parser_integer@@Base>
  40af06:	cmp    rax,rbx
  40af09:	je     40b093 <main@@Base+0x6753>
  40af0f:	mov    r14,rax
  40af12:	cmp    DWORD PTR [rsp+0x1c],0x0
  40af17:	je     40bcff <main@@Base+0x73bf>
  40af1d:	mov    ecx,0x8
  40af22:	mov    rdi,r15
  40af25:	mov    rsi,r14
  40af28:	mov    rdx,QWORD PTR [rsp+0x8]
  40af2d:	call   41f940 <flatcc_json_parser_set_error@@Base>
  40af32:	mov    r14,rax
  40af35:	xor    r12d,r12d
  40af38:	jmp    40bd09 <main@@Base+0x73c9>
  40af3d:	xor    r12d,r12d
  40af40:	mov    r14,rdx
  40af43:	mov    r15,QWORD PTR [rsp+0x10]
  40af48:	jmp    40bd09 <main@@Base+0x73c9>
  40af4d:	mov    ecx,0xa
  40af52:	mov    rdi,r15
  40af55:	mov    rsi,rax
  40af58:	jmp    408b63 <main@@Base+0x4223>
  40af5d:	mov    rdi,QWORD PTR [rsp+0x10]
  40af62:	mov    rsi,r12
  40af65:	mov    rdx,r13
  40af68:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40af6d:	mov    r12,rax
  40af70:	cmp    r15,r12
  40af73:	je     40c5d3 <main@@Base+0x7c93>
  40af79:	mov    r15,QWORD PTR [rsp+0x10]
  40af7e:	mov    rdi,QWORD PTR [r15]
  40af81:	call   41c110 <flatcc_builder_start_offset_vector@@Base>
  40af86:	test   eax,eax
  40af88:	jne    4049f1 <main@@Base+0xb1>
  40af8e:	cmp    r12,r13
  40af91:	je     40afc2 <main@@Base+0x6682>
  40af93:	cmp    BYTE PTR [r12],0x5b
  40af98:	jne    40afc2 <main@@Base+0x6682>
  40af9a:	lea    rax,[r12+0x1]
  40af9f:	mov    rcx,r13
  40afa2:	sub    rcx,rax
  40afa5:	cmp    rcx,0x2
  40afa9:	jl     40d18b <main@@Base+0x884b>
  40afaf:	cmp    BYTE PTR [rax],0x20
  40afb2:	jle    40d16e <main@@Base+0x882e>
  40afb8:	mov    r13,QWORD PTR [rsp+0x8]
  40afbd:	jmp    40d199 <main@@Base+0x8859>
  40afc2:	mov    ecx,0x16
  40afc7:	mov    rdi,r15
  40afca:	mov    rsi,r12
  40afcd:	mov    rdx,r13
  40afd0:	call   41f940 <flatcc_json_parser_set_error@@Base>
  40afd5:	mov    r14,rax
  40afd8:	mov    rdi,QWORD PTR [r15]
  40afdb:	call   41c2d0 <flatcc_builder_end_offset_vector@@Base>
  40afe0:	mov    DWORD PTR [rsp+0x3c],eax
  40afe4:	test   eax,eax
  40afe6:	mov    rbp,QWORD PTR [rsp+0x20]
  40afeb:	movabs r12,0x7465737400000000
  40aff5:	je     40ead3 <main@@Base+0xa193>
  40affb:	mov    rdi,QWORD PTR [r15]
  40affe:	mov    esi,0xa
  40b003:	jmp    4080eb <main@@Base+0x37ab>
  40b008:	mov    rdi,r15
  40b00b:	mov    rsi,rax
  40b00e:	mov    rdx,r13
  40b011:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40b016:	mov    r12,r13
  40b019:	cmp    rax,r13
  40b01c:	je     40be3f <main@@Base+0x74ff>
  40b022:	cmp    BYTE PTR [rax],0x5d
  40b025:	jne    40be3c <main@@Base+0x74fc>
  40b02b:	lea    r14,[rax+0x1]
  40b02f:	sub    r13,r14
  40b032:	cmp    r13,0x2
  40b036:	jl     40c2ed <main@@Base+0x79ad>
  40b03c:	cmp    BYTE PTR [r14],0x20
  40b040:	jg     40e556 <main@@Base+0x9c16>
  40b046:	jne    40c2ed <main@@Base+0x79ad>
  40b04c:	cmp    BYTE PTR [rax+0x2],0x20
  40b050:	jle    40c2ed <main@@Base+0x79ad>
  40b056:	add    rax,0x2
  40b05a:	jmp    40e553 <main@@Base+0x9c13>
  40b05f:	mov    r14,rbx
  40b062:	jmp    40bd82 <main@@Base+0x7442>
  40b067:	mov    rdi,QWORD PTR [r15]
  40b06a:	call   41cf10 <flatcc_builder_end_table@@Base>
  40b06f:	mov    DWORD PTR [rsp+0x3c],eax
  40b073:	test   eax,eax
  40b075:	jne    40a6cb <main@@Base+0x5d8b>
  40b07b:	jmp    40a6a4 <main@@Base+0x5d64>
  40b080:	mov    rdi,r15
  40b083:	mov    rsi,r14
  40b086:	jmp    40e13d <main@@Base+0x97fd>
  40b08b:	mov    r14,rbx
  40b08e:	jmp    40bc90 <main@@Base+0x7350>
  40b093:	xor    r12d,r12d
  40b096:	mov    r14,rbx
  40b099:	jmp    40bd09 <main@@Base+0x73c9>
  40b09e:	test   r12,r12
  40b0a1:	jns    40b0ff <main@@Base+0x67bf>
  40b0a3:	mov    ecx,0x7
  40b0a8:	mov    rdi,r15
  40b0ab:	mov    rsi,r14
  40b0ae:	mov    rdx,QWORD PTR [rsp+0x8]
  40b0b3:	call   41f940 <flatcc_json_parser_set_error@@Base>
  40b0b8:	mov    r14,rax
  40b0bb:	xor    r12d,r12d
  40b0be:	jmp    40b104 <main@@Base+0x67c4>
  40b0c0:	mov    rdi,QWORD PTR [r15]
  40b0c3:	call   41cf10 <flatcc_builder_end_table@@Base>
  40b0c8:	mov    DWORD PTR [rsp+0x3c],eax
  40b0cc:	test   eax,eax
  40b0ce:	je     40c816 <main@@Base+0x7ed6>
  40b0d4:	mov    r15,QWORD PTR [rsp+0x10]
  40b0d9:	mov    r13,QWORD PTR [rsp+0x8]
  40b0de:	jmp    40c847 <main@@Base+0x7f07>
  40b0e3:	mov    rdi,QWORD PTR [r15]
  40b0e6:	call   41cf10 <flatcc_builder_end_table@@Base>
  40b0eb:	mov    DWORD PTR [rsp+0x3c],eax
  40b0ef:	test   eax,eax
  40b0f1:	jne    40adeb <main@@Base+0x64ab>
  40b0f7:	jmp    40adc7 <main@@Base+0x6487>
  40b0fc:	neg    r12
  40b0ff:	mov    QWORD PTR [rsp+0x40],r12
  40b104:	mov    rbp,QWORD PTR [rsp+0x20]
  40b109:	cmp    rbx,r14
  40b10c:	jne    40b147 <main@@Base+0x6807>
  40b10e:	mov    rdi,r15
  40b111:	mov    rsi,rbx
  40b114:	mov    r12,QWORD PTR [rsp+0x8]
  40b119:	mov    rdx,r12
  40b11c:	lea    rcx,[rip+0x2015d]        # 42b280 <filename@@Base+0x1b0>
  40b123:	lea    r8,[rsp+0x40]
  40b128:	call   414620 <main@@Base+0xfce0>
  40b12d:	mov    r14,rax
  40b130:	cmp    rax,rbx
  40b133:	je     40eabc <main@@Base+0xa17c>
  40b139:	cmp    r14,r12
  40b13c:	je     40eabc <main@@Base+0xa17c>
  40b142:	mov    r12,QWORD PTR [rsp+0x40]
  40b147:	test   r12,r12
  40b14a:	mov    r13,QWORD PTR [rsp+0x8]
  40b14f:	jne    40b15c <main@@Base+0x681c>
  40b151:	test   BYTE PTR [r15+0x10],0x2
  40b156:	je     40c5ee <main@@Base+0x7cae>
  40b15c:	mov    rdi,QWORD PTR [r15]
  40b15f:	mov    esi,0x12
  40b164:	jmp    40d134 <main@@Base+0x87f4>
  40b169:	mov    rsi,rax
  40b16c:	mov    r15,QWORD PTR [rsp+0x10]
  40b171:	mov    rdi,r15
  40b174:	mov    rdx,r13
  40b177:	lea    rcx,[rsp+0x3c]
  40b17c:	call   421ab0 <flatcc_json_parser_build_string@@Base>
  40b181:	mov    r12,rax
  40b184:	cmp    DWORD PTR [rsp+0x3c],0x0
  40b189:	je     4049f1 <main@@Base+0xb1>
  40b18f:	mov    rdi,QWORD PTR [r15]
  40b192:	mov    esi,0x1
  40b197:	call   41ba10 <flatcc_builder_extend_offset_vector@@Base>
  40b19c:	test   rax,rax
  40b19f:	je     4049f1 <main@@Base+0xb1>
  40b1a5:	mov    ecx,DWORD PTR [rsp+0x3c]
  40b1a9:	mov    DWORD PTR [rax],ecx
  40b1ab:	mov    rax,r13
  40b1ae:	sub    rax,r12
  40b1b1:	cmp    rax,0x2
  40b1b5:	jl     40b1d6 <main@@Base+0x6896>
  40b1b7:	cmp    BYTE PTR [r12],0x20
  40b1bc:	jg     40b1e7 <main@@Base+0x68a7>
  40b1be:	jne    40b1d6 <main@@Base+0x6896>
  40b1c0:	cmp    BYTE PTR [r12+0x1],0x20
  40b1c6:	jle    40b1d6 <main@@Base+0x6896>
  40b1c8:	add    r12,0x1
  40b1cc:	cmp    r12,r13
  40b1cf:	jne    40b1f0 <main@@Base+0x68b0>
  40b1d1:	jmp    40d654 <main@@Base+0x8d14>
  40b1d6:	mov    rdi,r15
  40b1d9:	mov    rsi,r12
  40b1dc:	mov    rdx,r13
  40b1df:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40b1e4:	mov    r12,rax
  40b1e7:	cmp    r12,r13
  40b1ea:	je     40d654 <main@@Base+0x8d14>
  40b1f0:	movzx  eax,BYTE PTR [r12]
  40b1f5:	cmp    al,0x2c
  40b1f7:	jne    40d664 <main@@Base+0x8d24>
  40b1fd:	lea    rsi,[r12+0x1]
  40b202:	mov    rax,r13
  40b205:	sub    rax,rsi
  40b208:	cmp    rax,0x2
  40b20c:	jl     40b22e <main@@Base+0x68ee>
  40b20e:	cmp    BYTE PTR [rsi],0x20
  40b211:	jg     40b23c <main@@Base+0x68fc>
  40b213:	jne    40b22e <main@@Base+0x68ee>
  40b215:	cmp    BYTE PTR [r12+0x2],0x20
  40b21b:	jle    40b22e <main@@Base+0x68ee>
  40b21d:	add    r12,0x2
  40b221:	mov    rsi,r12
  40b224:	cmp    rsi,r13
  40b227:	jne    40b245 <main@@Base+0x6905>
  40b229:	jmp    40d6d4 <main@@Base+0x8d94>
  40b22e:	mov    rdi,r15
  40b231:	mov    rdx,r13
  40b234:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40b239:	mov    rsi,rax
  40b23c:	cmp    rsi,r13
  40b23f:	je     40d6d4 <main@@Base+0x8d94>
  40b245:	cmp    BYTE PTR [rsi],0x5d
  40b248:	jne    40b171 <main@@Base+0x6831>
  40b24e:	lea    r14,[rsi+0x1]
  40b252:	sub    r13,r14
  40b255:	cmp    r13,0x2
  40b259:	jl     40e8b8 <main@@Base+0x9f78>
  40b25f:	cmp    BYTE PTR [r14],0x20
  40b263:	jg     40d68d <main@@Base+0x8d4d>
  40b269:	jne    40e8b8 <main@@Base+0x9f78>
  40b26f:	cmp    BYTE PTR [rsi+0x2],0x20
  40b273:	jle    40e8b8 <main@@Base+0x9f78>
  40b279:	add    rsi,0x2
  40b27d:	mov    r14,rsi
  40b280:	jmp    40d68d <main@@Base+0x8d4d>
  40b285:	mov    r12,rax
  40b288:	mov    r15,QWORD PTR [rsp+0x10]
  40b28d:	mov    rdi,QWORD PTR [r15]
  40b290:	mov    esi,0x1
  40b295:	call   41b720 <flatcc_builder_extend_vector@@Base>
  40b29a:	test   rax,rax
  40b29d:	je     4049f1 <main@@Base+0xb1>
  40b2a3:	mov    r14,rax
  40b2a6:	cmp    r12,r13
  40b2a9:	je     40b2ee <main@@Base+0x69ae>
  40b2ab:	cmp    BYTE PTR [r12],0x7b
  40b2b0:	jne    40b2ee <main@@Base+0x69ae>
  40b2b2:	lea    rax,[r12+0x1]
  40b2b7:	mov    rcx,r13
  40b2ba:	sub    rcx,rax
  40b2bd:	cmp    rcx,0x2
  40b2c1:	jl     40b3c2 <main@@Base+0x6a82>
  40b2c7:	cmp    BYTE PTR [rax],0x20
  40b2ca:	jg     40b3d0 <main@@Base+0x6a90>
  40b2d0:	jne    40b3c2 <main@@Base+0x6a82>
  40b2d6:	cmp    BYTE PTR [r12+0x2],0x20
  40b2dc:	jle    40b3c2 <main@@Base+0x6a82>
  40b2e2:	add    r12,0x2
  40b2e6:	mov    rax,r12
  40b2e9:	jmp    40b3d0 <main@@Base+0x6a90>
  40b2ee:	mov    ecx,0x15
  40b2f3:	mov    rdi,r15
  40b2f6:	mov    rsi,r12
  40b2f9:	mov    rdx,r13
  40b2fc:	call   41f940 <flatcc_json_parser_set_error@@Base>
  40b301:	mov    rdx,rax
  40b304:	mov    rax,r13
  40b307:	sub    rax,rdx
  40b30a:	cmp    rax,0x2
  40b30e:	jl     40b32b <main@@Base+0x69eb>
  40b310:	cmp    BYTE PTR [rdx],0x20
  40b313:	jg     40b33c <main@@Base+0x69fc>
  40b315:	jne    40b32b <main@@Base+0x69eb>
  40b317:	cmp    BYTE PTR [rdx+0x1],0x20
  40b31b:	jle    40b32b <main@@Base+0x69eb>
  40b31d:	add    rdx,0x1
  40b321:	cmp    rdx,r13
  40b324:	jne    40b345 <main@@Base+0x6a05>
  40b326:	jmp    40c7ca <main@@Base+0x7e8a>
  40b32b:	mov    rdi,r15
  40b32e:	mov    rsi,rdx
  40b331:	mov    rdx,r13
  40b334:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40b339:	mov    rdx,rax
  40b33c:	cmp    rdx,r13
  40b33f:	je     40c7ca <main@@Base+0x7e8a>
  40b345:	mov    al,BYTE PTR [rdx]
  40b347:	cmp    al,0x2c
  40b349:	jne    40c7d2 <main@@Base+0x7e92>
  40b34f:	lea    r12,[rdx+0x1]
  40b353:	mov    rax,r13
  40b356:	sub    rax,r12
  40b359:	cmp    rax,0x2
  40b35d:	jl     40b37f <main@@Base+0x6a3f>
  40b35f:	cmp    BYTE PTR [r12],0x20
  40b364:	jg     40b390 <main@@Base+0x6a50>
  40b366:	jne    40b37f <main@@Base+0x6a3f>
  40b368:	cmp    BYTE PTR [rdx+0x2],0x20
  40b36c:	jle    40b37f <main@@Base+0x6a3f>
  40b36e:	add    rdx,0x2
  40b372:	mov    r12,rdx
  40b375:	cmp    r12,r13
  40b378:	jne    40b399 <main@@Base+0x6a59>
  40b37a:	jmp    40c88b <main@@Base+0x7f4b>
  40b37f:	mov    rdi,r15
  40b382:	mov    rsi,r12
  40b385:	mov    rdx,r13
  40b388:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40b38d:	mov    r12,rax
  40b390:	cmp    r12,r13
  40b393:	je     40c88b <main@@Base+0x7f4b>
  40b399:	cmp    BYTE PTR [r12],0x5d
  40b39e:	je     40c997 <main@@Base+0x8057>
  40b3a4:	mov    rdi,QWORD PTR [r15]
  40b3a7:	mov    esi,0x1
  40b3ac:	call   41b720 <flatcc_builder_extend_vector@@Base>
  40b3b1:	mov    r14,rax
  40b3b4:	test   rax,rax
  40b3b7:	jne    40b2a6 <main@@Base+0x6966>
  40b3bd:	jmp    4049f1 <main@@Base+0xb1>
  40b3c2:	mov    rdi,r15
  40b3c5:	mov    rsi,rax
  40b3c8:	mov    rdx,r13
  40b3cb:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40b3d0:	mov    rsi,r13
  40b3d3:	cmp    rax,r13
  40b3d6:	je     40b403 <main@@Base+0x6ac3>
  40b3d8:	cmp    BYTE PTR [rax],0x7d
  40b3db:	jne    40b3f3 <main@@Base+0x6ab3>
  40b3dd:	lea    rdx,[rax+0x1]
  40b3e1:	sub    r13,rdx
  40b3e4:	cmp    r13,0x2
  40b3e8:	jge    40b9e6 <main@@Base+0x70a6>
  40b3ee:	jmp    40ba09 <main@@Base+0x70c9>
  40b3f3:	mov    rsi,rax
  40b3f6:	jmp    40b403 <main@@Base+0x6ac3>
  40b3f8:	mov    DWORD PTR [rsp+0x1c],ecx
  40b3fc:	mov    ebp,ecx
  40b3fe:	jmp    40b89b <main@@Base+0x6f5b>
  40b403:	mov    r15,r13
  40b406:	cmp    rsi,r13
  40b409:	je     40b44c <main@@Base+0x6b0c>
  40b40b:	movzx  eax,BYTE PTR [rsi]
  40b40e:	cmp    al,0x2e
  40b410:	je     40b427 <main@@Base+0x6ae7>
  40b412:	cmp    al,0x22
  40b414:	jne    40b43e <main@@Base+0x6afe>
  40b416:	add    rsi,0x1
  40b41a:	mov    rax,QWORD PTR [rsp+0x28]
  40b41f:	mov    DWORD PTR [rax],0x0
  40b425:	jmp    40b449 <main@@Base+0x6b09>
  40b427:	mov    ecx,0x5
  40b42c:	mov    rdi,QWORD PTR [rsp+0x10]
  40b431:	mov    rdx,r13
  40b434:	call   41f940 <flatcc_json_parser_set_error@@Base>
  40b439:	mov    r15,rax
  40b43c:	jmp    40b44c <main@@Base+0x6b0c>
  40b43e:	mov    rax,QWORD PTR [rsp+0x28]
  40b443:	mov    DWORD PTR [rax],0x1
  40b449:	mov    r15,rsi
  40b44c:	mov    rax,r13
  40b44f:	sub    rax,r15
  40b452:	cmp    rax,0x8
  40b456:	jb     40b462 <main@@Base+0x6b22>
  40b458:	movbe  rcx,QWORD PTR [r15]
  40b45d:	jmp    40b4f3 <main@@Base+0x6bb3>
  40b462:	mov    ecx,eax
  40b464:	and    cl,0xf
  40b467:	add    cl,0xff
  40b46a:	cmp    cl,0x7
  40b46d:	ja     40b5a4 <main@@Base+0x6c64>
  40b473:	movzx  ecx,cl
  40b476:	lea    rdx,[rip+0x18df3]        # 424270 <_IO_stdin_used@@Base+0x270>
  40b47d:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  40b481:	add    rcx,rdx
  40b484:	xor    r8d,r8d
  40b487:	xor    r9d,r9d
  40b48a:	xor    edx,edx
  40b48c:	xor    esi,esi
  40b48e:	xor    ebx,ebx
  40b490:	xor    edi,edi
  40b492:	xor    ebp,ebp
  40b494:	jmp    rcx
  40b496:	movsx  r8,BYTE PTR [r15+0x7]
  40b49b:	movsx  r9,BYTE PTR [r15+0x6]
  40b4a0:	shl    r9,0x8
  40b4a4:	or     r9,r8
  40b4a7:	movsx  rdx,BYTE PTR [r15+0x5]
  40b4ac:	shl    rdx,0x10
  40b4b0:	or     rdx,r9
  40b4b3:	movsx  rsi,BYTE PTR [r15+0x4]
  40b4b8:	shl    rsi,0x18
  40b4bc:	or     rsi,rdx
  40b4bf:	movsx  rbx,BYTE PTR [r15+0x3]
  40b4c4:	shl    rbx,0x20
  40b4c8:	or     rbx,rsi
  40b4cb:	movsx  rdi,BYTE PTR [r15+0x2]
  40b4d0:	shl    rdi,0x28
  40b4d4:	or     rdi,rbx
  40b4d7:	movsx  rbp,BYTE PTR [r15+0x1]
  40b4dc:	shl    rbp,0x30
  40b4e0:	or     rbp,rdi
  40b4e3:	movzx  ecx,BYTE PTR [r15]
  40b4e7:	shl    rcx,0x38
  40b4eb:	or     rcx,rbp
  40b4ee:	mov    r13,QWORD PTR [rsp+0x8]
  40b4f3:	mov    rdx,rcx
  40b4f6:	movabs rsi,0xffff000000000000
  40b500:	and    rdx,rsi
  40b503:	movabs rsi,0x6964000000000000
  40b50d:	cmp    rdx,rsi
  40b510:	jne    40b552 <main@@Base+0x6c12>
  40b512:	mov    rbx,r15
  40b515:	cmp    rax,0x3
  40b519:	jl     40b726 <main@@Base+0x6de6>
  40b51f:	mov    rax,QWORD PTR [rsp+0x28]
  40b524:	cmp    DWORD PTR [rax],0x0
  40b527:	movzx  eax,BYTE PTR [r15+0x2]
  40b52c:	je     40b5b4 <main@@Base+0x6c74>
  40b532:	cmp    al,0x21
  40b534:	jl     40b541 <main@@Base+0x6c01>
  40b536:	mov    rbx,r15
  40b539:	cmp    al,0x3a
  40b53b:	jne    40b726 <main@@Base+0x6de6>
  40b541:	lea    rsi,[r15+0x2]
  40b545:	mov    rax,QWORD PTR [rsp+0x28]
  40b54a:	mov    DWORD PTR [rax],0x0
  40b550:	jmp    40b5c3 <main@@Base+0x6c83>
  40b552:	movabs rdx,0x64697374616e6365
  40b55c:	cmp    rcx,rdx
  40b55f:	jne    40b5a4 <main@@Base+0x6c64>
  40b561:	mov    rbx,r15
  40b564:	cmp    rax,0x9
  40b568:	jl     40b824 <main@@Base+0x6ee4>
  40b56e:	mov    rax,QWORD PTR [rsp+0x28]
  40b573:	cmp    DWORD PTR [rax],0x0
  40b576:	movzx  eax,BYTE PTR [r15+0x8]
  40b57b:	je     40b65f <main@@Base+0x6d1f>
  40b581:	cmp    al,0x21
  40b583:	jl     40b590 <main@@Base+0x6c50>
  40b585:	mov    rbx,r15
  40b588:	cmp    al,0x3a
  40b58a:	jne    40b824 <main@@Base+0x6ee4>
  40b590:	lea    rsi,[r15+0x8]
  40b594:	mov    rax,QWORD PTR [rsp+0x28]
  40b599:	mov    DWORD PTR [rax],0x0
  40b59f:	jmp    40b66e <main@@Base+0x6d2e>
  40b5a4:	mov    rdi,QWORD PTR [rsp+0x10]
  40b5a9:	mov    rsi,r15
  40b5ac:	mov    r15,rdi
  40b5af:	jmp    40b88b <main@@Base+0x6f4b>
  40b5b4:	mov    rbx,r15
  40b5b7:	cmp    al,0x22
  40b5b9:	jne    40b726 <main@@Base+0x6de6>
  40b5bf:	lea    rsi,[r15+0x3]
  40b5c3:	mov    rbx,QWORD PTR [rsp+0x8]
  40b5c8:	mov    rax,rbx
  40b5cb:	sub    rax,rsi
  40b5ce:	cmp    rax,0x2
  40b5d2:	jl     40b5ec <main@@Base+0x6cac>
  40b5d4:	cmp    BYTE PTR [rsi],0x20
  40b5d7:	jg     40b5fc <main@@Base+0x6cbc>
  40b5d9:	jne    40b5ec <main@@Base+0x6cac>
  40b5db:	cmp    BYTE PTR [rsi+0x1],0x20
  40b5df:	jle    40b5ec <main@@Base+0x6cac>
  40b5e1:	add    rsi,0x1
  40b5e5:	cmp    rsi,rbx
  40b5e8:	jne    40b601 <main@@Base+0x6cc1>
  40b5ea:	jmp    40b648 <main@@Base+0x6d08>
  40b5ec:	mov    rdi,QWORD PTR [rsp+0x10]
  40b5f1:	mov    rdx,rbx
  40b5f4:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40b5f9:	mov    rsi,rax
  40b5fc:	cmp    rsi,rbx
  40b5ff:	je     40b648 <main@@Base+0x6d08>
  40b601:	cmp    BYTE PTR [rsi],0x3a
  40b604:	jne    40b648 <main@@Base+0x6d08>
  40b606:	mov    rax,rbx
  40b609:	lea    rbx,[rsi+0x1]
  40b60d:	sub    rax,rbx
  40b610:	cmp    rax,0x2
  40b614:	jl     40b711 <main@@Base+0x6dd1>
  40b61a:	cmp    BYTE PTR [rbx],0x20
  40b61d:	jg     40b726 <main@@Base+0x6de6>
  40b623:	jne    40b711 <main@@Base+0x6dd1>
  40b629:	cmp    BYTE PTR [rsi+0x2],0x20
  40b62d:	jle    40b711 <main@@Base+0x6dd1>
  40b633:	add    rsi,0x2
  40b637:	mov    rbx,rsi
  40b63a:	cmp    r15,rbx
  40b63d:	jne    40b72f <main@@Base+0x6def>
  40b643:	jmp    40b87b <main@@Base+0x6f3b>
  40b648:	mov    ecx,0x4
  40b64d:	mov    rdi,QWORD PTR [rsp+0x10]
  40b652:	mov    rdx,rbx
  40b655:	call   41f940 <flatcc_json_parser_set_error@@Base>
  40b65a:	jmp    40b723 <main@@Base+0x6de3>
  40b65f:	mov    rbx,r15
  40b662:	cmp    al,0x22
  40b664:	jne    40b824 <main@@Base+0x6ee4>
  40b66a:	lea    rsi,[r15+0x9]
  40b66e:	mov    rax,QWORD PTR [rsp+0x8]
  40b673:	sub    rax,rsi
  40b676:	cmp    rax,0x2
  40b67a:	jl     40b696 <main@@Base+0x6d56>
  40b67c:	cmp    BYTE PTR [rsi],0x20
  40b67f:	jg     40b6a8 <main@@Base+0x6d68>
  40b681:	jne    40b696 <main@@Base+0x6d56>
  40b683:	cmp    BYTE PTR [rsi+0x1],0x20
  40b687:	jle    40b696 <main@@Base+0x6d56>
  40b689:	add    rsi,0x1
  40b68d:	cmp    rsi,QWORD PTR [rsp+0x8]
  40b692:	jne    40b6af <main@@Base+0x6d6f>
  40b694:	jmp    40b6f8 <main@@Base+0x6db8>
  40b696:	mov    rdi,QWORD PTR [rsp+0x10]
  40b69b:	mov    rdx,QWORD PTR [rsp+0x8]
  40b6a0:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40b6a5:	mov    rsi,rax
  40b6a8:	cmp    rsi,QWORD PTR [rsp+0x8]
  40b6ad:	je     40b6f8 <main@@Base+0x6db8>
  40b6af:	cmp    BYTE PTR [rsi],0x3a
  40b6b2:	jne    40b6f8 <main@@Base+0x6db8>
  40b6b4:	lea    rbx,[rsi+0x1]
  40b6b8:	mov    rax,QWORD PTR [rsp+0x8]
  40b6bd:	sub    rax,rbx
  40b6c0:	cmp    rax,0x2
  40b6c4:	jl     40b80f <main@@Base+0x6ecf>
  40b6ca:	cmp    BYTE PTR [rbx],0x20
  40b6cd:	jg     40b824 <main@@Base+0x6ee4>
  40b6d3:	jne    40b80f <main@@Base+0x6ecf>
  40b6d9:	cmp    BYTE PTR [rsi+0x2],0x20
  40b6dd:	jle    40b80f <main@@Base+0x6ecf>
  40b6e3:	add    rsi,0x2
  40b6e7:	mov    rbx,rsi
  40b6ea:	cmp    r15,rbx
  40b6ed:	jne    40b829 <main@@Base+0x6ee9>
  40b6f3:	jmp    40b87b <main@@Base+0x6f3b>
  40b6f8:	mov    ecx,0x4
  40b6fd:	mov    rdi,QWORD PTR [rsp+0x10]
  40b702:	mov    rdx,QWORD PTR [rsp+0x8]
  40b707:	call   41f940 <flatcc_json_parser_set_error@@Base>
  40b70c:	jmp    40b821 <main@@Base+0x6ee1>
  40b711:	mov    rdi,QWORD PTR [rsp+0x10]
  40b716:	mov    rsi,rbx
  40b719:	mov    rdx,QWORD PTR [rsp+0x8]
  40b71e:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40b723:	mov    rbx,rax
  40b726:	cmp    r15,rbx
  40b729:	je     40b87b <main@@Base+0x6f3b>
  40b72f:	mov    QWORD PTR [rsp+0x30],0x0
  40b738:	mov    DWORD PTR [rsp+0x40],0x0
  40b740:	mov    DWORD PTR [rsp+0x1c],0x0
  40b748:	xor    ebp,ebp
  40b74a:	mov    rdx,QWORD PTR [rsp+0x8]
  40b74f:	cmp    rbx,rdx
  40b752:	je     40b781 <main@@Base+0x6e41>
  40b754:	mov    r15,QWORD PTR [rsp+0x10]
  40b759:	mov    rdi,r15
  40b75c:	mov    rsi,rbx
  40b75f:	lea    rcx,[rsp+0x40]
  40b764:	lea    r8,[rsp+0x30]
  40b769:	call   4215e0 <flatcc_json_parser_integer@@Base>
  40b76e:	cmp    rax,rbx
  40b771:	je     40b790 <main@@Base+0x6e50>
  40b773:	cmp    DWORD PTR [rsp+0x40],0x0
  40b778:	je     40b79a <main@@Base+0x6e5a>
  40b77a:	mov    ecx,0x8
  40b77f:	jmp    40b7b2 <main@@Base+0x6e72>
  40b781:	mov    rax,rdx
  40b784:	mov    r15,QWORD PTR [rsp+0x10]
  40b789:	cmp    rbx,rax
  40b78c:	jne    40b7fc <main@@Base+0x6ebc>
  40b78e:	jmp    40b7c7 <main@@Base+0x6e87>
  40b790:	mov    rax,rbx
  40b793:	cmp    rbx,rax
  40b796:	jne    40b7fc <main@@Base+0x6ebc>
  40b798:	jmp    40b7c7 <main@@Base+0x6e87>
  40b79a:	mov    rcx,QWORD PTR [rsp+0x30]
  40b79f:	mov    rdx,rcx
  40b7a2:	shr    rdx,0x20
  40b7a6:	je     40b804 <main@@Base+0x6ec4>
  40b7a8:	mov    ecx,0x7
  40b7ad:	mov    r15,QWORD PTR [rsp+0x10]
  40b7b2:	mov    rdi,r15
  40b7b5:	mov    rsi,rax
  40b7b8:	mov    rdx,QWORD PTR [rsp+0x8]
  40b7bd:	call   41f940 <flatcc_json_parser_set_error@@Base>
  40b7c2:	cmp    rbx,rax
  40b7c5:	jne    40b7fc <main@@Base+0x6ebc>
  40b7c7:	mov    rdi,r15
  40b7ca:	mov    rsi,rbx
  40b7cd:	mov    rbp,QWORD PTR [rsp+0x8]
  40b7d2:	mov    rdx,rbp
  40b7d5:	lea    rcx,[rip+0x1ff84]        # 42b760 <filename@@Base+0x690>
  40b7dc:	lea    r8,[rsp+0x1c]
  40b7e1:	call   414830 <main@@Base+0xfef0>
  40b7e6:	cmp    rax,rbx
  40b7e9:	je     40ba3d <main@@Base+0x70fd>
  40b7ef:	cmp    rax,rbp
  40b7f2:	je     40ba3d <main@@Base+0x70fd>
  40b7f8:	mov    ebp,DWORD PTR [rsp+0x1c]
  40b7fc:	mov    DWORD PTR [r14],ebp
  40b7ff:	jmp    40b91a <main@@Base+0x6fda>
  40b804:	mov    DWORD PTR [rsp+0x1c],ecx
  40b808:	mov    ebp,ecx
  40b80a:	jmp    40b784 <main@@Base+0x6e44>
  40b80f:	mov    rdi,QWORD PTR [rsp+0x10]
  40b814:	mov    rsi,rbx
  40b817:	mov    rdx,QWORD PTR [rsp+0x8]
  40b81c:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40b821:	mov    rbx,rax
  40b824:	cmp    r15,rbx
  40b827:	je     40b87b <main@@Base+0x6f3b>
  40b829:	mov    QWORD PTR [rsp+0x30],0x0
  40b832:	mov    DWORD PTR [rsp+0x40],0x0
  40b83a:	mov    DWORD PTR [rsp+0x1c],0x0
  40b842:	xor    ebp,ebp
  40b844:	mov    rdx,QWORD PTR [rsp+0x8]
  40b849:	cmp    rbx,rdx
  40b84c:	je     40b898 <main@@Base+0x6f58>
  40b84e:	mov    r15,QWORD PTR [rsp+0x10]
  40b853:	mov    rdi,r15
  40b856:	mov    rsi,rbx
  40b859:	lea    rcx,[rsp+0x40]
  40b85e:	lea    r8,[rsp+0x30]
  40b863:	call   4215e0 <flatcc_json_parser_integer@@Base>
  40b868:	cmp    rax,rbx
  40b86b:	je     40b8a7 <main@@Base+0x6f67>
  40b86d:	cmp    DWORD PTR [rsp+0x40],0x0
  40b872:	je     40b8b1 <main@@Base+0x6f71>
  40b874:	mov    ecx,0x8
  40b879:	jmp    40b8c8 <main@@Base+0x6f88>
  40b87b:	mov    rdi,QWORD PTR [rsp+0x10]
  40b880:	mov    rsi,r15
  40b883:	mov    r15,rdi
  40b886:	mov    r13,QWORD PTR [rsp+0x8]
  40b88b:	mov    rdx,r13
  40b88e:	call   41ff40 <flatcc_json_parser_unmatched_symbol@@Base>
  40b893:	jmp    40b91f <main@@Base+0x6fdf>
  40b898:	mov    rax,rdx
  40b89b:	mov    r15,QWORD PTR [rsp+0x10]
  40b8a0:	cmp    rbx,rax
  40b8a3:	jne    40b916 <main@@Base+0x6fd6>
  40b8a5:	jmp    40b8e2 <main@@Base+0x6fa2>
  40b8a7:	mov    rax,rbx
  40b8aa:	cmp    rbx,rax
  40b8ad:	jne    40b916 <main@@Base+0x6fd6>
  40b8af:	jmp    40b8e2 <main@@Base+0x6fa2>
  40b8b1:	mov    rcx,QWORD PTR [rsp+0x30]
  40b8b6:	mov    rdx,rcx
  40b8b9:	shr    rdx,0x20
  40b8bd:	je     40b3f8 <main@@Base+0x6ab8>
  40b8c3:	mov    ecx,0x7
  40b8c8:	mov    r15,QWORD PTR [rsp+0x10]
  40b8cd:	mov    rdi,r15
  40b8d0:	mov    rsi,rax
  40b8d3:	mov    rdx,QWORD PTR [rsp+0x8]
  40b8d8:	call   41f940 <flatcc_json_parser_set_error@@Base>
  40b8dd:	cmp    rbx,rax
  40b8e0:	jne    40b916 <main@@Base+0x6fd6>
  40b8e2:	mov    rdi,r15
  40b8e5:	mov    rsi,rbx
  40b8e8:	mov    rdx,QWORD PTR [rsp+0x8]
  40b8ed:	lea    rcx,[rip+0x1fe8c]        # 42b780 <filename@@Base+0x6b0>
  40b8f4:	lea    r8,[rsp+0x1c]
  40b8f9:	call   414830 <main@@Base+0xfef0>
  40b8fe:	cmp    rax,rbx
  40b901:	je     40ba3d <main@@Base+0x70fd>
  40b907:	cmp    rax,QWORD PTR [rsp+0x8]
  40b90c:	je     40ba3d <main@@Base+0x70fd>
  40b912:	mov    ebp,DWORD PTR [rsp+0x1c]
  40b916:	mov    DWORD PTR [r14+0x4],ebp
  40b91a:	mov    r13,QWORD PTR [rsp+0x8]
  40b91f:	mov    rcx,r13
  40b922:	sub    rcx,rax
  40b925:	cmp    rcx,0x2
  40b929:	jl     40b946 <main@@Base+0x7006>
  40b92b:	cmp    BYTE PTR [rax],0x20
  40b92e:	jg     40b954 <main@@Base+0x7014>
  40b930:	jne    40b946 <main@@Base+0x7006>
  40b932:	cmp    BYTE PTR [rax+0x1],0x20
  40b936:	jle    40b946 <main@@Base+0x7006>
  40b938:	add    rax,0x1
  40b93c:	cmp    rax,r13
  40b93f:	jne    40b959 <main@@Base+0x7019>
  40b941:	jmp    40b9c7 <main@@Base+0x7087>
  40b946:	mov    rdi,r15
  40b949:	mov    rsi,rax
  40b94c:	mov    rdx,r13
  40b94f:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40b954:	cmp    rax,r13
  40b957:	je     40b9c7 <main@@Base+0x7087>
  40b959:	movzx  ecx,BYTE PTR [rax]
  40b95c:	cmp    cl,0x2c
  40b95f:	jne    40b9cf <main@@Base+0x708f>
  40b961:	lea    rsi,[rax+0x1]
  40b965:	mov    rcx,r13
  40b968:	sub    rcx,rsi
  40b96b:	cmp    rcx,0x2
  40b96f:	jl     40b984 <main@@Base+0x7044>
  40b971:	cmp    BYTE PTR [rsi],0x20
  40b974:	jg     40b992 <main@@Base+0x7052>
  40b976:	jne    40b984 <main@@Base+0x7044>
  40b978:	cmp    BYTE PTR [rax+0x2],0x20
  40b97c:	jle    40b984 <main@@Base+0x7044>
  40b97e:	add    rax,0x2
  40b982:	jmp    40b98f <main@@Base+0x704f>
  40b984:	mov    rdi,r15
  40b987:	mov    rdx,r13
  40b98a:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40b98f:	mov    rsi,rax
  40b992:	cmp    rsi,r13
  40b995:	je     40ba26 <main@@Base+0x70e6>
  40b99b:	cmp    BYTE PTR [rsi],0x7d
  40b99e:	jne    40b403 <main@@Base+0x6ac3>
  40b9a4:	lea    rdx,[rsi+0x1]
  40b9a8:	sub    r13,rdx
  40b9ab:	cmp    r13,0x2
  40b9af:	jl     40ba09 <main@@Base+0x70c9>
  40b9b1:	cmp    BYTE PTR [rdx],0x20
  40b9b4:	jg     40b9fa <main@@Base+0x70ba>
  40b9b6:	jne    40ba09 <main@@Base+0x70c9>
  40b9b8:	cmp    BYTE PTR [rsi+0x2],0x20
  40b9bc:	jle    40ba09 <main@@Base+0x70c9>
  40b9be:	add    rsi,0x2
  40b9c2:	mov    rdx,rsi
  40b9c5:	jmp    40b9fa <main@@Base+0x70ba>
  40b9c7:	mov    rdx,r13
  40b9ca:	jmp    40b304 <main@@Base+0x69c4>
  40b9cf:	cmp    cl,0x7d
  40b9d2:	jne    40ba36 <main@@Base+0x70f6>
  40b9d4:	lea    rdx,[rax+0x1]
  40b9d8:	mov    rcx,QWORD PTR [rsp+0x8]
  40b9dd:	sub    rcx,rdx
  40b9e0:	cmp    rcx,0x2
  40b9e4:	jl     40ba09 <main@@Base+0x70c9>
  40b9e6:	cmp    BYTE PTR [rdx],0x20
  40b9e9:	jg     40b9fa <main@@Base+0x70ba>
  40b9eb:	jne    40ba09 <main@@Base+0x70c9>
  40b9ed:	cmp    BYTE PTR [rax+0x2],0x20
  40b9f1:	jle    40ba09 <main@@Base+0x70c9>
  40b9f3:	add    rax,0x2
  40b9f7:	mov    rdx,rax
  40b9fa:	mov    r15,QWORD PTR [rsp+0x10]
  40b9ff:	mov    r13,QWORD PTR [rsp+0x8]
  40ba04:	jmp    40b304 <main@@Base+0x69c4>
  40ba09:	mov    r15,QWORD PTR [rsp+0x10]
  40ba0e:	mov    rdi,r15
  40ba11:	mov    rsi,rdx
  40ba14:	mov    r13,QWORD PTR [rsp+0x8]
  40ba19:	mov    rdx,r13
  40ba1c:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40ba21:	jmp    40b301 <main@@Base+0x69c1>
  40ba26:	mov    ecx,0xa
  40ba2b:	mov    rdi,r15
  40ba2e:	mov    rsi,r13
  40ba31:	jmp    40b2f9 <main@@Base+0x69b9>
  40ba36:	mov    ecx,0xa
  40ba3b:	jmp    40ba42 <main@@Base+0x7102>
  40ba3d:	mov    ecx,0x21
  40ba42:	mov    r15,QWORD PTR [rsp+0x10]
  40ba47:	mov    rdi,r15
  40ba4a:	mov    rsi,rax
  40ba4d:	mov    r13,QWORD PTR [rsp+0x8]
  40ba52:	jmp    40b2f9 <main@@Base+0x69b9>
  40ba57:	mov    rsi,rax
  40ba5a:	mov    r15,QWORD PTR [rsp+0x10]
  40ba5f:	mov    rdi,r15
  40ba62:	mov    rdx,r13
  40ba65:	lea    rcx,[rsp+0x3c]
  40ba6a:	call   4049c0 <main@@Base+0x80>
  40ba6f:	mov    r12,rax
  40ba72:	cmp    DWORD PTR [rsp+0x3c],0x0
  40ba77:	je     4049f1 <main@@Base+0xb1>
  40ba7d:	mov    rdi,QWORD PTR [r15]
  40ba80:	mov    esi,0x1
  40ba85:	call   41ba10 <flatcc_builder_extend_offset_vector@@Base>
  40ba8a:	test   rax,rax
  40ba8d:	je     4049f1 <main@@Base+0xb1>
  40ba93:	mov    ecx,DWORD PTR [rsp+0x3c]
  40ba97:	mov    DWORD PTR [rax],ecx
  40ba99:	mov    rax,r13
  40ba9c:	sub    rax,r12
  40ba9f:	cmp    rax,0x2
  40baa3:	jl     40bac4 <main@@Base+0x7184>
  40baa5:	cmp    BYTE PTR [r12],0x20
  40baaa:	jg     40bad5 <main@@Base+0x7195>
  40baac:	jne    40bac4 <main@@Base+0x7184>
  40baae:	cmp    BYTE PTR [r12+0x1],0x20
  40bab4:	jle    40bac4 <main@@Base+0x7184>
  40bab6:	add    r12,0x1
  40baba:	cmp    r12,r13
  40babd:	jne    40bade <main@@Base+0x719e>
  40babf:	jmp    40d65c <main@@Base+0x8d1c>
  40bac4:	mov    rdi,r15
  40bac7:	mov    rsi,r12
  40baca:	mov    rdx,r13
  40bacd:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40bad2:	mov    r12,rax
  40bad5:	cmp    r12,r13
  40bad8:	je     40d65c <main@@Base+0x8d1c>
  40bade:	movzx  eax,BYTE PTR [r12]
  40bae3:	cmp    al,0x2c
  40bae5:	jne    40d69c <main@@Base+0x8d5c>
  40baeb:	lea    rsi,[r12+0x1]
  40baf0:	mov    rax,r13
  40baf3:	sub    rax,rsi
  40baf6:	cmp    rax,0x2
  40bafa:	jl     40bb1c <main@@Base+0x71dc>
  40bafc:	cmp    BYTE PTR [rsi],0x20
  40baff:	jg     40bb2a <main@@Base+0x71ea>
  40bb01:	jne    40bb1c <main@@Base+0x71dc>
  40bb03:	cmp    BYTE PTR [r12+0x2],0x20
  40bb09:	jle    40bb1c <main@@Base+0x71dc>
  40bb0b:	add    r12,0x2
  40bb0f:	mov    rsi,r12
  40bb12:	cmp    rsi,r13
  40bb15:	jne    40bb33 <main@@Base+0x71f3>
  40bb17:	jmp    40d6e4 <main@@Base+0x8da4>
  40bb1c:	mov    rdi,r15
  40bb1f:	mov    rdx,r13
  40bb22:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40bb27:	mov    rsi,rax
  40bb2a:	cmp    rsi,r13
  40bb2d:	je     40d6e4 <main@@Base+0x8da4>
  40bb33:	cmp    BYTE PTR [rsi],0x5d
  40bb36:	jne    40ba5f <main@@Base+0x711f>
  40bb3c:	lea    r14,[rsi+0x1]
  40bb40:	sub    r13,r14
  40bb43:	cmp    r13,0x2
  40bb47:	jl     40e8eb <main@@Base+0x9fab>
  40bb4d:	cmp    BYTE PTR [r14],0x20
  40bb51:	jg     40d6c5 <main@@Base+0x8d85>
  40bb57:	jne    40e8eb <main@@Base+0x9fab>
  40bb5d:	cmp    BYTE PTR [rsi+0x2],0x20
  40bb61:	jle    40e8eb <main@@Base+0x9fab>
  40bb67:	add    rsi,0x2
  40bb6b:	mov    r14,rsi
  40bb6e:	jmp    40d6c5 <main@@Base+0x8d85>
  40bb73:	test   rax,0xffffffff80000000
  40bb79:	je     40bd7b <main@@Base+0x743b>
  40bb7f:	mov    ecx,0x7
  40bb84:	mov    rdi,r15
  40bb87:	mov    rsi,r14
  40bb8a:	mov    rdx,QWORD PTR [rsp+0x8]
  40bb8f:	call   41f940 <flatcc_json_parser_set_error@@Base>
  40bb94:	mov    r14,rax
  40bb97:	jmp    40bd82 <main@@Base+0x7442>
  40bb9c:	mov    rdi,QWORD PTR [rsp+0x10]
  40bba1:	mov    rsi,rax
  40bba4:	mov    rdx,QWORD PTR [rsp+0x8]
  40bba9:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40bbae:	mov    rcx,QWORD PTR [rsp+0x8]
  40bbb3:	mov    rsi,rcx
  40bbb6:	cmp    rax,rcx
  40bbb9:	je     40ca2f <main@@Base+0x80ef>
  40bbbf:	cmp    BYTE PTR [rax],0x7d
  40bbc2:	jne    40ca2c <main@@Base+0x80ec>
  40bbc8:	lea    r14,[rax+0x1]
  40bbcc:	mov    rcx,QWORD PTR [rsp+0x8]
  40bbd1:	sub    rcx,r14
  40bbd4:	cmp    rcx,0x2
  40bbd8:	jl     40e91e <main@@Base+0x9fde>
  40bbde:	cmp    BYTE PTR [r14],0x20
  40bbe2:	jg     40e17b <main@@Base+0x983b>
  40bbe8:	jne    40e91e <main@@Base+0x9fde>
  40bbee:	cmp    BYTE PTR [rax+0x2],0x20
  40bbf2:	jle    40e91e <main@@Base+0x9fde>
  40bbf8:	add    rax,0x2
  40bbfc:	mov    r14,rax
  40bbff:	jmp    40e17b <main@@Base+0x983b>
  40bc04:	mov    r14,r13
  40bc07:	jmp    408512 <main@@Base+0x3bd2>
  40bc0c:	cmp    cl,0x5d
  40bc0f:	jne    40c871 <main@@Base+0x7f31>
  40bc15:	lea    r14,[rax+0x1]
  40bc19:	mov    rcx,QWORD PTR [rsp+0x8]
  40bc1e:	sub    rcx,r14
  40bc21:	cmp    rcx,0x2
  40bc25:	jl     40e12d <main@@Base+0x97ed>
  40bc2b:	cmp    BYTE PTR [r14],0x20
  40bc2f:	jg     40be28 <main@@Base+0x74e8>
  40bc35:	jne    40e12d <main@@Base+0x97ed>
  40bc3b:	cmp    BYTE PTR [rax+0x2],0x20
  40bc3f:	jle    40e12d <main@@Base+0x97ed>
  40bc45:	add    rax,0x2
  40bc49:	mov    r14,rax
  40bc4c:	jmp    40be28 <main@@Base+0x74e8>
  40bc51:	mov    ecx,0x9
  40bc56:	mov    rdi,r15
  40bc59:	mov    rsi,r13
  40bc5c:	jmp    408507 <main@@Base+0x3bc7>
  40bc61:	mov    rax,QWORD PTR [rsp+0x30]
  40bc66:	mov    rcx,rax
  40bc69:	shr    rcx,0x20
  40bc6d:	je     40d0b2 <main@@Base+0x8772>
  40bc73:	mov    ecx,0x7
  40bc78:	mov    r15,QWORD PTR [rsp+0x10]
  40bc7d:	mov    rdi,r15
  40bc80:	mov    rsi,r14
  40bc83:	mov    rdx,QWORD PTR [rsp+0x8]
  40bc88:	call   41f940 <flatcc_json_parser_set_error@@Base>
  40bc8d:	mov    r14,rax
  40bc90:	mov    rbp,QWORD PTR [rsp+0x20]
  40bc95:	cmp    rbx,r14
  40bc98:	jne    40bcdd <main@@Base+0x739d>
  40bc9a:	mov    rdi,r15
  40bc9d:	mov    rsi,rbx
  40bca0:	mov    rbp,QWORD PTR [rsp+0x8]
  40bca5:	mov    rdx,rbp
  40bca8:	lea    rcx,[rip+0x1f611]        # 42b2c0 <filename@@Base+0x1f0>
  40bcaf:	lea    r8,[rsp+0x1c]
  40bcb4:	call   414830 <main@@Base+0xfef0>
  40bcb9:	mov    r14,rax
  40bcbc:	cmp    rax,rbx
  40bcbf:	je     40eabc <main@@Base+0xa17c>
  40bcc5:	cmp    r14,rbp
  40bcc8:	je     40eabc <main@@Base+0xa17c>
  40bcce:	mov    r12d,DWORD PTR [rsp+0x1c]
  40bcd3:	mov    r15,QWORD PTR [rsp+0x10]
  40bcd8:	mov    rbp,QWORD PTR [rsp+0x20]
  40bcdd:	test   r12d,r12d
  40bce0:	mov    r13,QWORD PTR [rsp+0x8]
  40bce5:	jne    40bcf2 <main@@Base+0x73b2>
  40bce7:	test   BYTE PTR [r15+0x10],0x2
  40bcec:	je     40c5ee <main@@Base+0x7cae>
  40bcf2:	mov    rdi,QWORD PTR [r15]
  40bcf5:	mov    esi,0x11
  40bcfa:	jmp    40bdec <main@@Base+0x74ac>
  40bcff:	mov    r12,QWORD PTR [rsp+0x30]
  40bd04:	mov    QWORD PTR [rsp+0x40],r12
  40bd09:	mov    rbp,QWORD PTR [rsp+0x20]
  40bd0e:	cmp    rbx,r14
  40bd11:	jne    40bd56 <main@@Base+0x7416>
  40bd13:	mov    rdi,r15
  40bd16:	mov    rsi,rbx
  40bd19:	mov    rbp,QWORD PTR [rsp+0x8]
  40bd1e:	mov    rdx,rbp
  40bd21:	lea    rcx,[rip+0x1f5d8]        # 42b300 <filename@@Base+0x230>
  40bd28:	lea    r8,[rsp+0x40]
  40bd2d:	call   414a50 <main@@Base+0x10110>
  40bd32:	mov    r14,rax
  40bd35:	cmp    rax,rbx
  40bd38:	je     40eabc <main@@Base+0xa17c>
  40bd3e:	cmp    r14,rbp
  40bd41:	je     40eabc <main@@Base+0xa17c>
  40bd47:	mov    r12,QWORD PTR [rsp+0x40]
  40bd4c:	mov    r15,QWORD PTR [rsp+0x10]
  40bd51:	mov    rbp,QWORD PTR [rsp+0x20]
  40bd56:	test   r12,r12
  40bd59:	mov    r13,QWORD PTR [rsp+0x8]
  40bd5e:	jne    40bd6b <main@@Base+0x742b>
  40bd60:	test   BYTE PTR [r15+0x10],0x2
  40bd65:	je     40c5ee <main@@Base+0x7cae>
  40bd6b:	mov    rdi,QWORD PTR [r15]
  40bd6e:	mov    esi,0x13
  40bd73:	jmp    40d134 <main@@Base+0x87f4>
  40bd78:	neg    rax
  40bd7b:	mov    DWORD PTR [rsp+0x1c],eax
  40bd7f:	mov    r12d,eax
  40bd82:	mov    rbp,QWORD PTR [rsp+0x20]
  40bd87:	cmp    rbx,r14
  40bd8a:	jne    40bdcf <main@@Base+0x748f>
  40bd8c:	mov    rdi,r15
  40bd8f:	mov    rsi,rbx
  40bd92:	mov    rbp,QWORD PTR [rsp+0x8]
  40bd97:	mov    rdx,rbp
  40bd9a:	lea    rcx,[rip+0x1f4bf]        # 42b260 <filename@@Base+0x190>
  40bda1:	lea    r8,[rsp+0x1c]
  40bda6:	call   414410 <main@@Base+0xfad0>
  40bdab:	mov    r14,rax
  40bdae:	cmp    rax,rbx
  40bdb1:	je     40eabc <main@@Base+0xa17c>
  40bdb7:	cmp    r14,rbp
  40bdba:	je     40eabc <main@@Base+0xa17c>
  40bdc0:	mov    r12d,DWORD PTR [rsp+0x1c]
  40bdc5:	mov    r15,QWORD PTR [rsp+0x10]
  40bdca:	mov    rbp,QWORD PTR [rsp+0x20]
  40bdcf:	test   r12d,r12d
  40bdd2:	mov    r13,QWORD PTR [rsp+0x8]
  40bdd7:	jne    40bde4 <main@@Base+0x74a4>
  40bdd9:	test   BYTE PTR [r15+0x10],0x2
  40bdde:	je     40c5ee <main@@Base+0x7cae>
  40bde4:	mov    rdi,QWORD PTR [r15]
  40bde7:	mov    esi,0x14
  40bdec:	mov    edx,0x4
  40bdf1:	mov    ecx,0x4
  40bdf6:	call   41d880 <flatcc_builder_table_add@@Base>
  40bdfb:	test   rax,rax
  40bdfe:	je     40eabc <main@@Base+0xa17c>
  40be04:	mov    DWORD PTR [rax],r12d
  40be07:	jmp    40c5ee <main@@Base+0x7cae>
  40be0c:	lea    r14,[r12+0x1]
  40be11:	sub    r13,r14
  40be14:	cmp    r13,0x2
  40be18:	jl     40e12d <main@@Base+0x97ed>
  40be1e:	cmp    BYTE PTR [r14],0x20
  40be22:	jle    40e117 <main@@Base+0x97d7>
  40be28:	mov    r15,QWORD PTR [rsp+0x10]
  40be2d:	mov    rbp,QWORD PTR [rsp+0x20]
  40be32:	mov    r13,QWORD PTR [rsp+0x8]
  40be37:	jmp    408517 <main@@Base+0x3bd7>
  40be3c:	mov    r12,rax
  40be3f:	mov    BYTE PTR [rsp+0x1c],0x0
  40be44:	mov    r15,QWORD PTR [rsp+0x10]
  40be49:	mov    rdi,QWORD PTR [r15]
  40be4c:	mov    esi,0x1
  40be51:	call   41b720 <flatcc_builder_extend_vector@@Base>
  40be56:	test   rax,rax
  40be59:	je     40eab2 <main@@Base+0xa172>
  40be5f:	mov    rbx,rax
  40be62:	lea    r14,[rip+0x1f2d7]        # 42b140 <filename@@Base+0x70>
  40be69:	mov    QWORD PTR [rsp+0x30],0x0
  40be72:	mov    DWORD PTR [rsp+0x40],0x0
  40be7a:	mov    BYTE PTR [rsp+0x1c],0x0
  40be7f:	mov    rdx,QWORD PTR [rsp+0x8]
  40be84:	cmp    r12,rdx
  40be87:	je     40beb1 <main@@Base+0x7571>
  40be89:	mov    rdi,r15
  40be8c:	mov    rsi,r12
  40be8f:	lea    rcx,[rsp+0x40]
  40be94:	lea    r8,[rsp+0x30]
  40be99:	call   4215e0 <flatcc_json_parser_integer@@Base>
  40be9e:	cmp    rax,r12
  40bea1:	je     40bebd <main@@Base+0x757d>
  40bea3:	cmp    DWORD PTR [rsp+0x40],0x0
  40bea8:	je     40bec9 <main@@Base+0x7589>
  40beaa:	mov    ecx,0x8
  40beaf:	jmp    40bee0 <main@@Base+0x75a0>
  40beb1:	xor    ecx,ecx
  40beb3:	mov    rax,rdx
  40beb6:	cmp    r12,rax
  40beb9:	jne    40bf29 <main@@Base+0x75e9>
  40bebb:	jmp    40bef7 <main@@Base+0x75b7>
  40bebd:	xor    ecx,ecx
  40bebf:	mov    rax,r12
  40bec2:	cmp    r12,rax
  40bec5:	jne    40bf29 <main@@Base+0x75e9>
  40bec7:	jmp    40bef7 <main@@Base+0x75b7>
  40bec9:	mov    rcx,QWORD PTR [rsp+0x30]
  40bece:	cmp    rcx,0x100
  40bed5:	jb     40bfe7 <main@@Base+0x76a7>
  40bedb:	mov    ecx,0x7
  40bee0:	mov    rdi,r15
  40bee3:	mov    rsi,rax
  40bee6:	mov    rdx,QWORD PTR [rsp+0x8]
  40beeb:	call   41f940 <flatcc_json_parser_set_error@@Base>
  40bef0:	xor    ecx,ecx
  40bef2:	cmp    r12,rax
  40bef5:	jne    40bf29 <main@@Base+0x75e9>
  40bef7:	mov    rdi,r15
  40befa:	mov    rsi,r12
  40befd:	mov    rbp,QWORD PTR [rsp+0x8]
  40bf02:	mov    rdx,rbp
  40bf05:	mov    rcx,r14
  40bf08:	lea    r8,[rsp+0x1c]
  40bf0d:	call   410220 <main@@Base+0xb8e0>
  40bf12:	cmp    rax,r12
  40bf15:	je     40eadb <main@@Base+0xa19b>
  40bf1b:	cmp    rax,rbp
  40bf1e:	je     40eadb <main@@Base+0xa19b>
  40bf24:	movzx  ecx,BYTE PTR [rsp+0x1c]
  40bf29:	mov    BYTE PTR [rbx],cl
  40bf2b:	mov    rbx,QWORD PTR [rsp+0x8]
  40bf30:	mov    rcx,rbx
  40bf33:	sub    rcx,rax
  40bf36:	cmp    rcx,0x2
  40bf3a:	jl     40bf57 <main@@Base+0x7617>
  40bf3c:	cmp    BYTE PTR [rax],0x20
  40bf3f:	jg     40bf65 <main@@Base+0x7625>
  40bf41:	jne    40bf57 <main@@Base+0x7617>
  40bf43:	cmp    BYTE PTR [rax+0x1],0x20
  40bf47:	jle    40bf57 <main@@Base+0x7617>
  40bf49:	add    rax,0x1
  40bf4d:	cmp    rax,rbx
  40bf50:	jne    40bf6e <main@@Base+0x762e>
  40bf52:	jmp    40d6f4 <main@@Base+0x8db4>
  40bf57:	mov    rdi,r15
  40bf5a:	mov    rsi,rax
  40bf5d:	mov    rdx,rbx
  40bf60:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40bf65:	cmp    rax,rbx
  40bf68:	je     40d6f4 <main@@Base+0x8db4>
  40bf6e:	movzx  ecx,BYTE PTR [rax]
  40bf71:	cmp    cl,0x2c
  40bf74:	jne    40d7c2 <main@@Base+0x8e82>
  40bf7a:	lea    r12,[rax+0x1]
  40bf7e:	mov    rcx,rbx
  40bf81:	sub    rcx,r12
  40bf84:	cmp    rcx,0x2
  40bf88:	jl     40bf9f <main@@Base+0x765f>
  40bf8a:	cmp    BYTE PTR [r12],0x20
  40bf8f:	jg     40bfb0 <main@@Base+0x7670>
  40bf91:	jne    40bf9f <main@@Base+0x765f>
  40bf93:	cmp    BYTE PTR [rax+0x2],0x20
  40bf97:	jle    40bf9f <main@@Base+0x765f>
  40bf99:	add    rax,0x2
  40bf9d:	jmp    40bfad <main@@Base+0x766d>
  40bf9f:	mov    rdi,r15
  40bfa2:	mov    rsi,r12
  40bfa5:	mov    rdx,rbx
  40bfa8:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40bfad:	mov    r12,rax
  40bfb0:	cmp    r12,rbx
  40bfb3:	je     40d800 <main@@Base+0x8ec0>
  40bfb9:	cmp    BYTE PTR [r12],0x5d
  40bfbe:	je     40e076 <main@@Base+0x9736>
  40bfc4:	mov    BYTE PTR [rsp+0x1c],0x0
  40bfc9:	mov    rdi,QWORD PTR [r15]
  40bfcc:	mov    esi,0x1
  40bfd1:	call   41b720 <flatcc_builder_extend_vector@@Base>
  40bfd6:	mov    rbx,rax
  40bfd9:	test   rax,rax
  40bfdc:	jne    40be69 <main@@Base+0x7529>
  40bfe2:	jmp    40eab2 <main@@Base+0xa172>
  40bfe7:	mov    BYTE PTR [rsp+0x1c],cl
  40bfeb:	cmp    r12,rax
  40bfee:	jne    40bf29 <main@@Base+0x75e9>
  40bff4:	jmp    40bef7 <main@@Base+0x75b7>
  40bff9:	mov    rdi,QWORD PTR [rsp+0x10]
  40bffe:	mov    rsi,rbx
  40c001:	mov    rdx,QWORD PTR [rsp+0x8]
  40c006:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40c00b:	mov    rbx,rax
  40c00e:	movabs r12,0x7465737400000000
  40c018:	cmp    r15,rbx
  40c01b:	je     40c8bd <main@@Base+0x7f7d>
  40c021:	mov    QWORD PTR [rsp+0x30],0x0
  40c02a:	mov    DWORD PTR [rsp+0x40],0x0
  40c032:	mov    DWORD PTR [rsp+0x1c],0x0
  40c03a:	xor    r12d,r12d
  40c03d:	mov    rdx,QWORD PTR [rsp+0x8]
  40c042:	cmp    rbx,rdx
  40c045:	je     40c07f <main@@Base+0x773f>
  40c047:	mov    rdi,QWORD PTR [rsp+0x10]
  40c04c:	mov    rsi,rbx
  40c04f:	lea    rcx,[rsp+0x40]
  40c054:	lea    r8,[rsp+0x30]
  40c059:	call   4215e0 <flatcc_json_parser_integer@@Base>
  40c05e:	cmp    rax,rbx
  40c061:	je     40c446 <main@@Base+0x7b06>
  40c067:	mov    r14,rax
  40c06a:	cmp    DWORD PTR [rsp+0x40],0x0
  40c06f:	je     40d6fc <main@@Base+0x8dbc>
  40c075:	mov    ecx,0x8
  40c07a:	jmp    40d713 <main@@Base+0x8dd3>
  40c07f:	mov    r14,rdx
  40c082:	jmp    40e41d <main@@Base+0x9add>
  40c087:	mov    rdi,QWORD PTR [rsp+0x10]
  40c08c:	mov    rsi,rbx
  40c08f:	mov    rdx,QWORD PTR [rsp+0x8]
  40c094:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40c099:	mov    rbx,rax
  40c09c:	movabs r12,0x7465737400000000
  40c0a6:	cmp    r15,rbx
  40c0a9:	je     40c8bd <main@@Base+0x7f7d>
  40c0af:	mov    QWORD PTR [rsp+0x30],0x0
  40c0b8:	mov    DWORD PTR [rsp+0x1c],0x0
  40c0c0:	mov    QWORD PTR [rsp+0x40],0x0
  40c0c9:	mov    rdx,QWORD PTR [rsp+0x8]
  40c0ce:	cmp    rbx,rdx
  40c0d1:	je     40c12f <main@@Base+0x77ef>
  40c0d3:	mov    rdi,QWORD PTR [rsp+0x10]
  40c0d8:	mov    rsi,rbx
  40c0db:	lea    rcx,[rsp+0x1c]
  40c0e0:	lea    r8,[rsp+0x30]
  40c0e5:	call   4215e0 <flatcc_json_parser_integer@@Base>
  40c0ea:	cmp    rax,rbx
  40c0ed:	je     40c44e <main@@Base+0x7b0e>
  40c0f3:	mov    r14,rax
  40c0f6:	cmp    DWORD PTR [rsp+0x1c],0x0
  40c0fb:	je     40d739 <main@@Base+0x8df9>
  40c101:	mov    ecx,0x8
  40c106:	mov    r15,QWORD PTR [rsp+0x10]
  40c10b:	mov    rdi,r15
  40c10e:	mov    rsi,r14
  40c111:	mov    rdx,QWORD PTR [rsp+0x8]
  40c116:	call   41f940 <flatcc_json_parser_set_error@@Base>
  40c11b:	mov    r14,rax
  40c11e:	xor    r12d,r12d
  40c121:	cmp    rbx,r14
  40c124:	jne    40d78a <main@@Base+0x8e4a>
  40c12a:	jmp    40d74d <main@@Base+0x8e0d>
  40c12f:	xor    r12d,r12d
  40c132:	mov    r14,rdx
  40c135:	jmp    40d743 <main@@Base+0x8e03>
  40c13a:	mov    rdi,QWORD PTR [rsp+0x10]
  40c13f:	mov    rsi,rax
  40c142:	mov    rdx,QWORD PTR [rsp+0x8]
  40c147:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40c14c:	mov    rcx,QWORD PTR [rsp+0x8]
  40c151:	mov    rsi,rcx
  40c154:	cmp    rax,rcx
  40c157:	je     40d816 <main@@Base+0x8ed6>
  40c15d:	cmp    BYTE PTR [rax],0x7d
  40c160:	jne    40d813 <main@@Base+0x8ed3>
  40c166:	lea    r14,[rax+0x1]
  40c16a:	mov    rcx,QWORD PTR [rsp+0x8]
  40c16f:	sub    rcx,r14
  40c172:	cmp    rcx,0x2
  40c176:	jl     40e984 <main@@Base+0xa044>
  40c17c:	cmp    BYTE PTR [r14],0x20
  40c180:	jg     40e652 <main@@Base+0x9d12>
  40c186:	jne    40e984 <main@@Base+0xa044>
  40c18c:	cmp    BYTE PTR [rax+0x2],0x20
  40c190:	jle    40e984 <main@@Base+0xa044>
  40c196:	add    rax,0x2
  40c19a:	mov    r14,rax
  40c19d:	jmp    40e652 <main@@Base+0x9d12>
  40c1a2:	mov    rdi,QWORD PTR [rsp+0x10]
  40c1a7:	mov    rsi,rax
  40c1aa:	mov    rdx,QWORD PTR [rsp+0x8]
  40c1af:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40c1b4:	mov    rcx,QWORD PTR [rsp+0x8]
  40c1b9:	mov    rsi,rcx
  40c1bc:	cmp    rax,rcx
  40c1bf:	je     40c1cd <main@@Base+0x788d>
  40c1c1:	cmp    BYTE PTR [rax],0x7d
  40c1c4:	je     40e4ab <main@@Base+0x9b6b>
  40c1ca:	mov    rsi,rax
  40c1cd:	mov    r15,QWORD PTR [rsp+0x10]
  40c1d2:	mov    r13,QWORD PTR [rsp+0x8]
  40c1d7:	mov    rax,r13
  40c1da:	cmp    rsi,r13
  40c1dd:	je     40c21b <main@@Base+0x78db>
  40c1df:	movzx  eax,BYTE PTR [rsi]
  40c1e2:	cmp    al,0x2e
  40c1e4:	je     40c1fb <main@@Base+0x78bb>
  40c1e6:	cmp    al,0x22
  40c1e8:	jne    40c20d <main@@Base+0x78cd>
  40c1ea:	add    rsi,0x1
  40c1ee:	mov    rax,QWORD PTR [rsp+0x28]
  40c1f3:	mov    DWORD PTR [rax],0x0
  40c1f9:	jmp    40c218 <main@@Base+0x78d8>
  40c1fb:	mov    ecx,0x5
  40c200:	mov    rdi,r15
  40c203:	mov    rdx,r13
  40c206:	call   41f940 <flatcc_json_parser_set_error@@Base>
  40c20b:	jmp    40c21b <main@@Base+0x78db>
  40c20d:	mov    rax,QWORD PTR [rsp+0x28]
  40c212:	mov    DWORD PTR [rax],0x1
  40c218:	mov    rax,rsi
  40c21b:	mov    rdi,r15
  40c21e:	mov    rsi,rax
  40c221:	mov    rdx,r13
  40c224:	call   41ff40 <flatcc_json_parser_unmatched_symbol@@Base>
  40c229:	mov    rcx,r13
  40c22c:	sub    rcx,rax
  40c22f:	cmp    rcx,0x2
  40c233:	jl     40c250 <main@@Base+0x7910>
  40c235:	cmp    BYTE PTR [rax],0x20
  40c238:	jg     40c25e <main@@Base+0x791e>
  40c23a:	jne    40c250 <main@@Base+0x7910>
  40c23c:	cmp    BYTE PTR [rax+0x1],0x20
  40c240:	jle    40c250 <main@@Base+0x7910>
  40c242:	add    rax,0x1
  40c246:	cmp    rax,r13
  40c249:	jne    40c267 <main@@Base+0x7927>
  40c24b:	jmp    40e40e <main@@Base+0x9ace>
  40c250:	mov    rdi,r15
  40c253:	mov    rsi,rax
  40c256:	mov    rdx,r13
  40c259:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40c25e:	cmp    rax,r13
  40c261:	je     40e40e <main@@Base+0x9ace>
  40c267:	movzx  ecx,BYTE PTR [rax]
  40c26a:	cmp    cl,0x2c
  40c26d:	jne    40e4a2 <main@@Base+0x9b62>
  40c273:	lea    rsi,[rax+0x1]
  40c277:	mov    rcx,r13
  40c27a:	sub    rcx,rsi
  40c27d:	cmp    rcx,0x2
  40c281:	jl     40c296 <main@@Base+0x7956>
  40c283:	cmp    BYTE PTR [rsi],0x20
  40c286:	jg     40c2a4 <main@@Base+0x7964>
  40c288:	jne    40c296 <main@@Base+0x7956>
  40c28a:	cmp    BYTE PTR [rax+0x2],0x20
  40c28e:	jle    40c296 <main@@Base+0x7956>
  40c290:	add    rax,0x2
  40c294:	jmp    40c2a1 <main@@Base+0x7961>
  40c296:	mov    rdi,r15
  40c299:	mov    rdx,r13
  40c29c:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40c2a1:	mov    rsi,rax
  40c2a4:	cmp    rsi,r13
  40c2a7:	je     40e56d <main@@Base+0x9c2d>
  40c2ad:	cmp    BYTE PTR [rsi],0x7d
  40c2b0:	jne    40c1d7 <main@@Base+0x7897>
  40c2b6:	lea    r14,[rsi+0x1]
  40c2ba:	sub    r13,r14
  40c2bd:	cmp    r13,0x2
  40c2c1:	jl     40e4e1 <main@@Base+0x9ba1>
  40c2c7:	cmp    BYTE PTR [r14],0x20
  40c2cb:	jg     40e4d2 <main@@Base+0x9b92>
  40c2d1:	jne    40e4e1 <main@@Base+0x9ba1>
  40c2d7:	cmp    BYTE PTR [rsi+0x2],0x20
  40c2db:	jle    40e4e1 <main@@Base+0x9ba1>
  40c2e1:	add    rsi,0x2
  40c2e5:	mov    r14,rsi
  40c2e8:	jmp    40e4d2 <main@@Base+0x9b92>
  40c2ed:	mov    r15,QWORD PTR [rsp+0x10]
  40c2f2:	mov    rdi,r15
  40c2f5:	mov    rsi,r14
  40c2f8:	mov    r13,QWORD PTR [rsp+0x8]
  40c2fd:	mov    rdx,r13
  40c300:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40c305:	jmp    40a64d <main@@Base+0x5d0d>
  40c30a:	mov    r13,QWORD PTR [rsp+0x8]
  40c30f:	jne    40c329 <main@@Base+0x79e9>
  40c311:	cmp    BYTE PTR [r14+0x2],0x20
  40c316:	jle    40c329 <main@@Base+0x79e9>
  40c318:	add    r14,0x2
  40c31c:	mov    r12,r14
  40c31f:	cmp    r15,r12
  40c322:	jne    40c345 <main@@Base+0x7a05>
  40c324:	jmp    40c5d3 <main@@Base+0x7c93>
  40c329:	mov    rdi,QWORD PTR [rsp+0x10]
  40c32e:	mov    rsi,r12
  40c331:	mov    rdx,r13
  40c334:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40c339:	mov    r12,rax
  40c33c:	cmp    r15,r12
  40c33f:	je     40c5d3 <main@@Base+0x7c93>
  40c345:	mov    r15,QWORD PTR [rsp+0x10]
  40c34a:	mov    rdi,QWORD PTR [r15]
  40c34d:	mov    esi,0x8
  40c352:	mov    edx,0x8
  40c357:	mov    ecx,0x1fffffff
  40c35c:	call   41c090 <flatcc_builder_start_vector@@Base>
  40c361:	test   eax,eax
  40c363:	jne    4049f1 <main@@Base+0xb1>
  40c369:	cmp    r12,r13
  40c36c:	je     40c39b <main@@Base+0x7a5b>
  40c36e:	cmp    BYTE PTR [r12],0x5b
  40c373:	jne    40c39b <main@@Base+0x7a5b>
  40c375:	lea    rax,[r12+0x1]
  40c37a:	sub    r13,rax
  40c37d:	cmp    r13,0x2
  40c381:	jl     40c3e1 <main@@Base+0x7aa1>
  40c383:	cmp    BYTE PTR [rax],0x20
  40c386:	jg     40c3f3 <main@@Base+0x7ab3>
  40c388:	jne    40c3e1 <main@@Base+0x7aa1>
  40c38a:	cmp    BYTE PTR [r12+0x2],0x20
  40c390:	jle    40c3e1 <main@@Base+0x7aa1>
  40c392:	add    r12,0x2
  40c396:	mov    rax,r12
  40c399:	jmp    40c3f3 <main@@Base+0x7ab3>
  40c39b:	mov    ecx,0x16
  40c3a0:	mov    rdi,r15
  40c3a3:	mov    rsi,r12
  40c3a6:	mov    rdx,r13
  40c3a9:	call   41f940 <flatcc_json_parser_set_error@@Base>
  40c3ae:	mov    r14,rax
  40c3b1:	mov    rdi,QWORD PTR [r15]
  40c3b4:	call   41d220 <flatcc_builder_end_vector@@Base>
  40c3b9:	mov    DWORD PTR [rsp+0x3c],eax
  40c3bd:	test   eax,eax
  40c3bf:	mov    rbp,QWORD PTR [rsp+0x20]
  40c3c4:	movabs r12,0x7465737400000000
  40c3ce:	je     40ead3 <main@@Base+0xa193>
  40c3d4:	mov    rdi,QWORD PTR [r15]
  40c3d7:	mov    esi,0x20
  40c3dc:	jmp    4080eb <main@@Base+0x37ab>
  40c3e1:	mov    rdi,QWORD PTR [rsp+0x10]
  40c3e6:	mov    rsi,rax
  40c3e9:	mov    rdx,QWORD PTR [rsp+0x8]
  40c3ee:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40c3f3:	mov    rcx,QWORD PTR [rsp+0x8]
  40c3f8:	mov    r12,rcx
  40c3fb:	cmp    rax,rcx
  40c3fe:	je     40d306 <main@@Base+0x89c6>
  40c404:	cmp    BYTE PTR [rax],0x5d
  40c407:	jne    40d303 <main@@Base+0x89c3>
  40c40d:	lea    r14,[rax+0x1]
  40c411:	mov    rcx,QWORD PTR [rsp+0x8]
  40c416:	sub    rcx,r14
  40c419:	cmp    rcx,0x2
  40c41d:	jl     40e0c0 <main@@Base+0x9780>
  40c423:	cmp    BYTE PTR [r14],0x20
  40c427:	jg     40e778 <main@@Base+0x9e38>
  40c42d:	jne    40e0c0 <main@@Base+0x9780>
  40c433:	cmp    BYTE PTR [rax+0x2],0x20
  40c437:	jle    40e0c0 <main@@Base+0x9780>
  40c43d:	add    rax,0x2
  40c441:	jmp    40e775 <main@@Base+0x9e35>
  40c446:	mov    r14,rbx
  40c449:	jmp    40e41d <main@@Base+0x9add>
  40c44e:	xor    r12d,r12d
  40c451:	mov    r14,rbx
  40c454:	jmp    40d743 <main@@Base+0x8e03>
  40c459:	mov    r15,QWORD PTR [rsp+0x10]
  40c45e:	mov    rbp,QWORD PTR [rsp+0x20]
  40c463:	mov    r13,QWORD PTR [rsp+0x8]
  40c468:	movabs r12,0x7465737400000000
  40c472:	je     408151 <main@@Base+0x3811>
  40c478:	mov    rdi,r15
  40c47b:	mov    rsi,r14
  40c47e:	mov    rdx,r13
  40c481:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40c486:	mov    r14,rax
  40c489:	jmp    4080cf <main@@Base+0x378f>
  40c48e:	mov    r13,QWORD PTR [rsp+0x8]
  40c493:	jne    40c4ad <main@@Base+0x7b6d>
  40c495:	cmp    BYTE PTR [r14+0x2],0x20
  40c49a:	jle    40c4ad <main@@Base+0x7b6d>
  40c49c:	add    r14,0x2
  40c4a0:	mov    r12,r14
  40c4a3:	cmp    r15,r12
  40c4a6:	jne    40c4c9 <main@@Base+0x7b89>
  40c4a8:	jmp    40c5d3 <main@@Base+0x7c93>
  40c4ad:	mov    rdi,QWORD PTR [rsp+0x10]
  40c4b2:	mov    rsi,r12
  40c4b5:	mov    rdx,r13
  40c4b8:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40c4bd:	mov    r12,rax
  40c4c0:	cmp    r15,r12
  40c4c3:	je     40c5d3 <main@@Base+0x7c93>
  40c4c9:	cmp    r12,r13
  40c4cc:	je     40c542 <main@@Base+0x7c02>
  40c4ce:	cmp    BYTE PTR [r12],0x5b
  40c4d3:	jne    40c542 <main@@Base+0x7c02>
  40c4d5:	mov    rax,QWORD PTR [rsp+0x10]
  40c4da:	mov    rdi,QWORD PTR [rax]
  40c4dd:	mov    esi,0x1
  40c4e2:	mov    edx,0x1
  40c4e7:	mov    ecx,0xffffffff
  40c4ec:	call   41c090 <flatcc_builder_start_vector@@Base>
  40c4f1:	test   eax,eax
  40c4f3:	jne    40eabf <main@@Base+0xa17f>
  40c4f9:	cmp    BYTE PTR [r12],0x5b
  40c4fe:	jne    40c591 <main@@Base+0x7c51>
  40c504:	lea    rax,[r12+0x1]
  40c509:	mov    rcx,QWORD PTR [rsp+0x8]
  40c50e:	sub    rcx,rax
  40c511:	cmp    rcx,0x2
  40c515:	jl     40c9c7 <main@@Base+0x8087>
  40c51b:	cmp    BYTE PTR [rax],0x20
  40c51e:	jg     40c9d9 <main@@Base+0x8099>
  40c524:	jne    40c9c7 <main@@Base+0x8087>
  40c52a:	cmp    BYTE PTR [r12+0x2],0x20
  40c530:	jle    40c9c7 <main@@Base+0x8087>
  40c536:	add    r12,0x2
  40c53a:	mov    rax,r12
  40c53d:	jmp    40c9d9 <main@@Base+0x8099>
  40c542:	mov    r15,QWORD PTR [rsp+0x10]
  40c547:	mov    rdi,QWORD PTR [r15]
  40c54a:	xor    esi,esi
  40c54c:	xor    edx,edx
  40c54e:	xor    ecx,ecx
  40c550:	call   41b230 <flatcc_builder_start_buffer@@Base>
  40c555:	test   eax,eax
  40c557:	jne    4049f1 <main@@Base+0xb1>
  40c55d:	mov    rdi,r15
  40c560:	mov    rsi,r12
  40c563:	mov    rdx,r13
  40c566:	lea    rcx,[rsp+0x3c]
  40c56b:	call   4049c0 <main@@Base+0x80>
  40c570:	mov    r14,rax
  40c573:	mov    esi,DWORD PTR [rsp+0x3c]
  40c577:	test   esi,esi
  40c579:	je     40ead3 <main@@Base+0xa193>
  40c57f:	mov    rdi,QWORD PTR [r15]
  40c582:	call   41b450 <flatcc_builder_end_buffer@@Base>
  40c587:	mov    rbp,QWORD PTR [rsp+0x20]
  40c58c:	jmp    40e87f <main@@Base+0x9f3f>
  40c591:	mov    ecx,0x16
  40c596:	mov    rdi,QWORD PTR [rsp+0x10]
  40c59b:	mov    rsi,r12
  40c59e:	mov    rdx,QWORD PTR [rsp+0x8]
  40c5a3:	call   41f940 <flatcc_json_parser_set_error@@Base>
  40c5a8:	jmp    40e865 <main@@Base+0x9f25>
  40c5ad:	mov    r13,QWORD PTR [rsp+0x8]
  40c5b2:	jne    40c6aa <main@@Base+0x7d6a>
  40c5b8:	cmp    BYTE PTR [r14+0x2],0x20
  40c5bd:	jle    40c6aa <main@@Base+0x7d6a>
  40c5c3:	add    r14,0x2
  40c5c7:	mov    r12,r14
  40c5ca:	cmp    r15,r12
  40c5cd:	jne    40c6c6 <main@@Base+0x7d86>
  40c5d3:	mov    rdi,QWORD PTR [rsp+0x10]
  40c5d8:	mov    rsi,r15
  40c5db:	mov    r15,rdi
  40c5de:	mov    rdx,r13
  40c5e1:	call   41ff40 <flatcc_json_parser_unmatched_symbol@@Base>
  40c5e6:	mov    r14,rax
  40c5e9:	mov    rbp,QWORD PTR [rsp+0x20]
  40c5ee:	movabs r12,0x7465737400000000
  40c5f8:	nop    DWORD PTR [rax+rax*1+0x0]
  40c600:	mov    rax,r13
  40c603:	sub    rax,r14
  40c606:	cmp    rax,0x2
  40c60a:	jl     40c630 <main@@Base+0x7cf0>
  40c60c:	cmp    BYTE PTR [r14],0x20
  40c610:	jg     40c641 <main@@Base+0x7d01>
  40c612:	jne    40c630 <main@@Base+0x7cf0>
  40c614:	cmp    BYTE PTR [r14+0x1],0x20
  40c619:	jle    40c630 <main@@Base+0x7cf0>
  40c61b:	add    r14,0x1
  40c61f:	cmp    r14,r13
  40c622:	jne    40c64a <main@@Base+0x7d0a>
  40c624:	jmp    40e9b4 <main@@Base+0xa074>
  40c629:	nop    DWORD PTR [rax+0x0]
  40c630:	mov    rdi,r15
  40c633:	mov    rsi,r14
  40c636:	mov    rdx,r13
  40c639:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40c63e:	mov    r14,rax
  40c641:	cmp    r14,r13
  40c644:	je     40e9b4 <main@@Base+0xa074>
  40c64a:	mov    al,BYTE PTR [r14]
  40c64d:	cmp    al,0x2c
  40c64f:	jne    40e9bc <main@@Base+0xa07c>
  40c655:	lea    rsi,[r14+0x1]
  40c659:	mov    rax,r13
  40c65c:	sub    rax,rsi
  40c65f:	cmp    rax,0x2
  40c663:	jl     40c680 <main@@Base+0x7d40>
  40c665:	cmp    BYTE PTR [rsi],0x20
  40c668:	jg     40c68e <main@@Base+0x7d4e>
  40c66a:	jne    40c680 <main@@Base+0x7d40>
  40c66c:	cmp    BYTE PTR [r14+0x2],0x20
  40c671:	jle    40c680 <main@@Base+0x7d40>
  40c673:	add    r14,0x2
  40c677:	mov    rsi,r14
  40c67a:	jmp    40c68e <main@@Base+0x7d4e>
  40c67c:	nop    DWORD PTR [rax+0x0]
  40c680:	mov    rdi,r15
  40c683:	mov    rdx,r13
  40c686:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40c68b:	mov    rsi,rax
  40c68e:	cmp    rsi,r13
  40c691:	mov    rbx,QWORD PTR [rsp+0x48]
  40c696:	je     40ea00 <main@@Base+0xa0c0>
  40c69c:	cmp    BYTE PTR [rsi],0x7d
  40c69f:	jne    404b90 <main@@Base+0x250>
  40c6a5:	jmp    40ea15 <main@@Base+0xa0d5>
  40c6aa:	mov    rdi,QWORD PTR [rsp+0x10]
  40c6af:	mov    rsi,r12
  40c6b2:	mov    rdx,r13
  40c6b5:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40c6ba:	mov    r12,rax
  40c6bd:	cmp    r15,r12
  40c6c0:	je     40c5d3 <main@@Base+0x7c93>
  40c6c6:	mov    r15,QWORD PTR [rsp+0x10]
  40c6cb:	mov    rdi,QWORD PTR [r15]
  40c6ce:	mov    esi,0x8
  40c6d3:	mov    edx,0x8
  40c6d8:	mov    ecx,0x1fffffff
  40c6dd:	call   41c090 <flatcc_builder_start_vector@@Base>
  40c6e2:	test   eax,eax
  40c6e4:	jne    4049f1 <main@@Base+0xb1>
  40c6ea:	cmp    r12,r13
  40c6ed:	je     40c71c <main@@Base+0x7ddc>
  40c6ef:	cmp    BYTE PTR [r12],0x5b
  40c6f4:	jne    40c71c <main@@Base+0x7ddc>
  40c6f6:	lea    rax,[r12+0x1]
  40c6fb:	sub    r13,rax
  40c6fe:	cmp    r13,0x2
  40c702:	jl     40c737 <main@@Base+0x7df7>
  40c704:	cmp    BYTE PTR [rax],0x20
  40c707:	jg     40c749 <main@@Base+0x7e09>
  40c709:	jne    40c737 <main@@Base+0x7df7>
  40c70b:	cmp    BYTE PTR [r12+0x2],0x20
  40c711:	jle    40c737 <main@@Base+0x7df7>
  40c713:	add    r12,0x2
  40c717:	mov    rax,r12
  40c71a:	jmp    40c749 <main@@Base+0x7e09>
  40c71c:	mov    ecx,0x16
  40c721:	mov    rdi,r15
  40c724:	mov    rsi,r12
  40c727:	mov    rdx,r13
  40c72a:	call   41f940 <flatcc_json_parser_set_error@@Base>
  40c72f:	mov    r14,rax
  40c732:	jmp    40e7c6 <main@@Base+0x9e86>
  40c737:	mov    rdi,QWORD PTR [rsp+0x10]
  40c73c:	mov    rsi,rax
  40c73f:	mov    rdx,QWORD PTR [rsp+0x8]
  40c744:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40c749:	mov    rcx,QWORD PTR [rsp+0x8]
  40c74e:	mov    r13,rcx
  40c751:	cmp    rax,rcx
  40c754:	je     40d4e9 <main@@Base+0x8ba9>
  40c75a:	cmp    BYTE PTR [rax],0x5d
  40c75d:	jne    40d4e6 <main@@Base+0x8ba6>
  40c763:	lea    r14,[rax+0x1]
  40c767:	mov    rcx,QWORD PTR [rsp+0x8]
  40c76c:	sub    rcx,r14
  40c76f:	cmp    rcx,0x2
  40c773:	jl     40e0dd <main@@Base+0x979d>
  40c779:	cmp    BYTE PTR [r14],0x20
  40c77d:	jg     40e7bc <main@@Base+0x9e7c>
  40c783:	jne    40e0dd <main@@Base+0x979d>
  40c789:	cmp    BYTE PTR [rax+0x2],0x20
  40c78d:	jle    40e0dd <main@@Base+0x979d>
  40c793:	add    rax,0x2
  40c797:	jmp    40e7b9 <main@@Base+0x9e79>
  40c79c:	mov    r15,QWORD PTR [rsp+0x10]
  40c7a1:	mov    r13,QWORD PTR [rsp+0x8]
  40c7a6:	jne    40c7b7 <main@@Base+0x7e77>
  40c7a8:	cmp    BYTE PTR [rax+0x2],0x20
  40c7ac:	jle    40c7b7 <main@@Base+0x7e77>
  40c7ae:	add    rax,0x2
  40c7b2:	jmp    40c5e6 <main@@Base+0x7ca6>
  40c7b7:	mov    rdi,r15
  40c7ba:	mov    rsi,r14
  40c7bd:	mov    rdx,r13
  40c7c0:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40c7c5:	jmp    40c5e6 <main@@Base+0x7ca6>
  40c7ca:	mov    r14,r13
  40c7cd:	jmp    40a131 <main@@Base+0x57f1>
  40c7d2:	cmp    al,0x5d
  40c7d4:	jne    40e0fd <main@@Base+0x97bd>
  40c7da:	lea    r14,[rdx+0x1]
  40c7de:	mov    rax,QWORD PTR [rsp+0x8]
  40c7e3:	sub    rax,r14
  40c7e6:	cmp    rax,0x2
  40c7ea:	jl     40e6f3 <main@@Base+0x9db3>
  40c7f0:	cmp    BYTE PTR [r14],0x20
  40c7f4:	jg     40c9b3 <main@@Base+0x8073>
  40c7fa:	jne    40e6f3 <main@@Base+0x9db3>
  40c800:	cmp    BYTE PTR [rdx+0x2],0x20
  40c804:	jle    40e6f3 <main@@Base+0x9db3>
  40c80a:	add    rdx,0x2
  40c80e:	mov    r14,rdx
  40c811:	jmp    40c9b3 <main@@Base+0x8073>
  40c816:	mov    r12,r14
  40c819:	mov    r15,QWORD PTR [rsp+0x10]
  40c81e:	mov    r13,QWORD PTR [rsp+0x8]
  40c823:	mov    ecx,0x21
  40c828:	mov    rdi,r15
  40c82b:	mov    rsi,r12
  40c82e:	mov    rdx,r13
  40c831:	call   41f940 <flatcc_json_parser_set_error@@Base>
  40c836:	mov    r14,rax
  40c839:	cmp    DWORD PTR [rsp+0x3c],0x0
  40c83e:	mov    r12,rax
  40c841:	je     4049f1 <main@@Base+0xb1>
  40c847:	mov    rdi,QWORD PTR [r15]
  40c84a:	mov    esi,0xe
  40c84f:	call   41d720 <flatcc_builder_table_add_offset@@Base>
  40c854:	test   rax,rax
  40c857:	mov    rbp,QWORD PTR [rsp+0x20]
  40c85c:	movabs r12,0x7465737400000000
  40c866:	jne    4080f9 <main@@Base+0x37b9>
  40c86c:	jmp    40ead3 <main@@Base+0xa193>
  40c871:	mov    ecx,0x9
  40c876:	mov    r15,QWORD PTR [rsp+0x10]
  40c87b:	mov    rdi,r15
  40c87e:	mov    rsi,rax
  40c881:	mov    r13,QWORD PTR [rsp+0x8]
  40c886:	jmp    408507 <main@@Base+0x3bc7>
  40c88b:	mov    ecx,0x9
  40c890:	mov    rdi,r15
  40c893:	mov    rsi,r13
  40c896:	jmp    40a126 <main@@Base+0x57e6>
  40c89b:	movabs r12,0x7465737400000000
  40c8a5:	jne    40c8cd <main@@Base+0x7f8d>
  40c8a7:	mov    rcx,r14
  40c8aa:	cmp    BYTE PTR [r14+0x2],0x20
  40c8af:	jle    40c8cd <main@@Base+0x7f8d>
  40c8b1:	mov    rbx,rcx
  40c8b4:	add    rbx,0x2
  40c8b8:	cmp    r15,rbx
  40c8bb:	jne    40c8e7 <main@@Base+0x7fa7>
  40c8bd:	mov    rdi,QWORD PTR [rsp+0x10]
  40c8c2:	mov    rsi,r15
  40c8c5:	mov    r15,rdi
  40c8c8:	jmp    407fc5 <main@@Base+0x3685>
  40c8cd:	mov    rdi,QWORD PTR [rsp+0x10]
  40c8d2:	mov    rsi,rbx
  40c8d5:	mov    rdx,QWORD PTR [rsp+0x8]
  40c8da:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40c8df:	mov    rbx,rax
  40c8e2:	cmp    r15,rbx
  40c8e5:	je     40c8bd <main@@Base+0x7f7d>
  40c8e7:	mov    QWORD PTR [rsp+0x30],0x0
  40c8f0:	mov    DWORD PTR [rsp+0x1c],0x0
  40c8f8:	mov    QWORD PTR [rsp+0x40],0x0
  40c901:	mov    rdx,QWORD PTR [rsp+0x8]
  40c906:	cmp    rbx,rdx
  40c909:	je     40c953 <main@@Base+0x8013>
  40c90b:	mov    r15,QWORD PTR [rsp+0x10]
  40c910:	mov    rdi,r15
  40c913:	mov    rsi,rbx
  40c916:	lea    rcx,[rsp+0x1c]
  40c91b:	lea    r8,[rsp+0x30]
  40c920:	call   4215e0 <flatcc_json_parser_integer@@Base>
  40c925:	cmp    rax,rbx
  40c928:	je     40c95e <main@@Base+0x801e>
  40c92a:	mov    r14,rax
  40c92d:	mov    r12,QWORD PTR [rsp+0x30]
  40c932:	cmp    DWORD PTR [rsp+0x1c],0x0
  40c937:	je     40c969 <main@@Base+0x8029>
  40c939:	movabs rax,0x8000000000000000
  40c943:	cmp    r12,rax
  40c946:	jbe    40d0be <main@@Base+0x877e>
  40c94c:	mov    ecx,0x8
  40c951:	jmp    40c977 <main@@Base+0x8037>
  40c953:	xor    r12d,r12d
  40c956:	mov    r14,rdx
  40c959:	jmp    40d0c6 <main@@Base+0x8786>
  40c95e:	xor    r12d,r12d
  40c961:	mov    r14,rbx
  40c964:	jmp    40d0cb <main@@Base+0x878b>
  40c969:	test   r12,r12
  40c96c:	jns    40d0c1 <main@@Base+0x8781>
  40c972:	mov    ecx,0x7
  40c977:	mov    r15,QWORD PTR [rsp+0x10]
  40c97c:	mov    rdi,r15
  40c97f:	mov    rsi,r14
  40c982:	mov    rdx,QWORD PTR [rsp+0x8]
  40c987:	call   41f940 <flatcc_json_parser_set_error@@Base>
  40c98c:	mov    r14,rax
  40c98f:	xor    r12d,r12d
  40c992:	jmp    40d0cb <main@@Base+0x878b>
  40c997:	lea    r14,[r12+0x1]
  40c99c:	sub    r13,r14
  40c99f:	cmp    r13,0x2
  40c9a3:	jl     40e6f3 <main@@Base+0x9db3>
  40c9a9:	cmp    BYTE PTR [r14],0x20
  40c9ad:	jle    40e6dd <main@@Base+0x9d9d>
  40c9b3:	mov    r15,QWORD PTR [rsp+0x10]
  40c9b8:	mov    rbp,QWORD PTR [rsp+0x20]
  40c9bd:	mov    r13,QWORD PTR [rsp+0x8]
  40c9c2:	jmp    40a136 <main@@Base+0x57f6>
  40c9c7:	mov    rdi,QWORD PTR [rsp+0x10]
  40c9cc:	mov    rsi,rax
  40c9cf:	mov    rdx,QWORD PTR [rsp+0x8]
  40c9d4:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40c9d9:	mov    rcx,QWORD PTR [rsp+0x8]
  40c9de:	mov    r12,rcx
  40c9e1:	cmp    rax,rcx
  40c9e4:	je     40e18d <main@@Base+0x984d>
  40c9ea:	cmp    BYTE PTR [rax],0x5d
  40c9ed:	jne    40e18a <main@@Base+0x984a>
  40c9f3:	lea    r14,[rax+0x1]
  40c9f7:	mov    rcx,QWORD PTR [rsp+0x8]
  40c9fc:	sub    rcx,r14
  40c9ff:	cmp    rcx,0x2
  40ca03:	jl     40e853 <main@@Base+0x9f13>
  40ca09:	cmp    BYTE PTR [r14],0x20
  40ca0d:	jg     40e868 <main@@Base+0x9f28>
  40ca13:	jne    40e853 <main@@Base+0x9f13>
  40ca19:	cmp    BYTE PTR [rax+0x2],0x20
  40ca1d:	jle    40e853 <main@@Base+0x9f13>
  40ca23:	add    rax,0x2
  40ca27:	jmp    40e865 <main@@Base+0x9f25>
  40ca2c:	mov    rsi,rax
  40ca2f:	mov    r13,QWORD PTR [rsp+0x8]
  40ca34:	mov    r15,r13
  40ca37:	cmp    rsi,r13
  40ca3a:	je     40ca7d <main@@Base+0x813d>
  40ca3c:	movzx  eax,BYTE PTR [rsi]
  40ca3f:	cmp    al,0x2e
  40ca41:	je     40ca58 <main@@Base+0x8118>
  40ca43:	cmp    al,0x22
  40ca45:	jne    40ca6f <main@@Base+0x812f>
  40ca47:	add    rsi,0x1
  40ca4b:	mov    rax,QWORD PTR [rsp+0x28]
  40ca50:	mov    DWORD PTR [rax],0x0
  40ca56:	jmp    40ca7a <main@@Base+0x813a>
  40ca58:	mov    ecx,0x5
  40ca5d:	mov    rdi,QWORD PTR [rsp+0x10]
  40ca62:	mov    rdx,r13
  40ca65:	call   41f940 <flatcc_json_parser_set_error@@Base>
  40ca6a:	mov    r15,rax
  40ca6d:	jmp    40ca7d <main@@Base+0x813d>
  40ca6f:	mov    rax,QWORD PTR [rsp+0x28]
  40ca74:	mov    DWORD PTR [rax],0x1
  40ca7a:	mov    r15,rsi
  40ca7d:	mov    rcx,r13
  40ca80:	sub    rcx,r15
  40ca83:	cmp    rcx,0x8
  40ca87:	jb     40ca93 <main@@Base+0x8153>
  40ca89:	movbe  rax,QWORD PTR [r15]
  40ca8e:	jmp    40cb21 <main@@Base+0x81e1>
  40ca93:	mov    eax,ecx
  40ca95:	and    al,0xf
  40ca97:	add    al,0xff
  40ca99:	cmp    al,0x7
  40ca9b:	ja     40cbf0 <main@@Base+0x82b0>
  40caa1:	movzx  eax,al
  40caa4:	lea    rdx,[rip+0x17725]        # 4241d0 <_IO_stdin_used@@Base+0x1d0>
  40caab:	movsxd rax,DWORD PTR [rdx+rax*4]
  40caaf:	add    rax,rdx
  40cab2:	xor    r8d,r8d
  40cab5:	xor    r9d,r9d
  40cab8:	xor    edx,edx
  40caba:	xor    esi,esi
  40cabc:	xor    ebx,ebx
  40cabe:	xor    ebp,ebp
  40cac0:	xor    edi,edi
  40cac2:	jmp    rax
  40cac4:	movsx  r8,BYTE PTR [r15+0x7]
  40cac9:	movsx  r9,BYTE PTR [r15+0x6]
  40cace:	shl    r9,0x8
  40cad2:	or     r9,r8
  40cad5:	movsx  rdx,BYTE PTR [r15+0x5]
  40cada:	shl    rdx,0x10
  40cade:	or     rdx,r9
  40cae1:	movsx  rsi,BYTE PTR [r15+0x4]
  40cae6:	shl    rsi,0x18
  40caea:	or     rsi,rdx
  40caed:	movsx  rbx,BYTE PTR [r15+0x3]
  40caf2:	shl    rbx,0x20
  40caf6:	or     rbx,rsi
  40caf9:	movsx  rbp,BYTE PTR [r15+0x2]
  40cafe:	shl    rbp,0x28
  40cb02:	or     rbp,rbx
  40cb05:	movsx  rdi,BYTE PTR [r15+0x1]
  40cb0a:	shl    rdi,0x30
  40cb0e:	or     rdi,rbp
  40cb11:	movzx  eax,BYTE PTR [r15]
  40cb15:	shl    rax,0x38
  40cb19:	or     rax,rdi
  40cb1c:	mov    r13,QWORD PTR [rsp+0x8]
  40cb21:	movabs rdx,0x6e65737465640000
  40cb2b:	cmp    rax,rdx
  40cb2e:	jae    40cb95 <main@@Base+0x8255>
  40cb30:	movabs rdx,0xffffffff00000000
  40cb3a:	and    rax,rdx
  40cb3d:	movabs rdx,0x6461746100000000
  40cb47:	cmp    rax,rdx
  40cb4a:	jne    40cbf0 <main@@Base+0x82b0>
  40cb50:	mov    rax,r15
  40cb53:	cmp    rcx,0x5
  40cb57:	jl     40cebf <main@@Base+0x857f>
  40cb5d:	mov    rax,QWORD PTR [rsp+0x28]
  40cb62:	cmp    DWORD PTR [rax],0x0
  40cb65:	movzx  ecx,BYTE PTR [r15+0x4]
  40cb6a:	je     40cc5b <main@@Base+0x831b>
  40cb70:	cmp    cl,0x21
  40cb73:	jl     40cb81 <main@@Base+0x8241>
  40cb75:	mov    rax,r15
  40cb78:	cmp    cl,0x3a
  40cb7b:	jne    40cebf <main@@Base+0x857f>
  40cb81:	lea    rsi,[r15+0x4]
  40cb85:	mov    rax,QWORD PTR [rsp+0x28]
  40cb8a:	mov    DWORD PTR [rax],0x0
  40cb90:	jmp    40cc6b <main@@Base+0x832b>
  40cb95:	mov    rdx,rax
  40cb98:	shr    rdx,0x8
  40cb9c:	movabs rsi,0x75726c64617461
  40cba6:	cmp    rdx,rsi
  40cba9:	jne    40cbfd <main@@Base+0x82bd>
  40cbab:	mov    rax,r15
  40cbae:	cmp    rcx,0x8
  40cbb2:	jl     40cf11 <main@@Base+0x85d1>
  40cbb8:	mov    rax,QWORD PTR [rsp+0x28]
  40cbbd:	cmp    DWORD PTR [rax],0x0
  40cbc0:	movzx  ecx,BYTE PTR [r15+0x7]
  40cbc5:	je     40cc96 <main@@Base+0x8356>
  40cbcb:	cmp    cl,0x21
  40cbce:	jl     40cbdc <main@@Base+0x829c>
  40cbd0:	mov    rax,r15
  40cbd3:	cmp    cl,0x3a
  40cbd6:	jne    40cf11 <main@@Base+0x85d1>
  40cbdc:	lea    rsi,[r15+0x7]
  40cbe0:	mov    rax,QWORD PTR [rsp+0x28]
  40cbe5:	mov    DWORD PTR [rax],0x0
  40cbeb:	jmp    40cca6 <main@@Base+0x8366>
  40cbf0:	mov    rdi,QWORD PTR [rsp+0x10]
  40cbf5:	mov    rsi,r15
  40cbf8:	jmp    40cfc8 <main@@Base+0x8688>
  40cbfd:	and    rax,0xffffffffffff0000
  40cc03:	movabs rdx,0x6e65737465640000
  40cc0d:	cmp    rax,rdx
  40cc10:	jne    40cfbb <main@@Base+0x867b>
  40cc16:	mov    rax,r15
  40cc19:	cmp    rcx,0x7
  40cc1d:	jl     40cf66 <main@@Base+0x8626>
  40cc23:	mov    rax,QWORD PTR [rsp+0x28]
  40cc28:	cmp    DWORD PTR [rax],0x0
  40cc2b:	movzx  ecx,BYTE PTR [r15+0x6]
  40cc30:	je     40cdf1 <main@@Base+0x84b1>
  40cc36:	cmp    cl,0x21
  40cc39:	jl     40cc47 <main@@Base+0x8307>
  40cc3b:	mov    rax,r15
  40cc3e:	cmp    cl,0x3a
  40cc41:	jne    40cf66 <main@@Base+0x8626>
  40cc47:	lea    rsi,[r15+0x6]
  40cc4b:	mov    rax,QWORD PTR [rsp+0x28]
  40cc50:	mov    DWORD PTR [rax],0x0
  40cc56:	jmp    40ce01 <main@@Base+0x84c1>
  40cc5b:	mov    rax,r15
  40cc5e:	cmp    cl,0x22
  40cc61:	jne    40cebf <main@@Base+0x857f>
  40cc67:	lea    rsi,[r15+0x5]
  40cc6b:	mov    rax,QWORD PTR [rsp+0x8]
  40cc70:	sub    rax,rsi
  40cc73:	cmp    rax,0x2
  40cc77:	jl     40cce1 <main@@Base+0x83a1>
  40cc79:	cmp    BYTE PTR [rsi],0x20
  40cc7c:	jg     40ccf3 <main@@Base+0x83b3>
  40cc7e:	jne    40cce1 <main@@Base+0x83a1>
  40cc80:	cmp    BYTE PTR [rsi+0x1],0x20
  40cc84:	jle    40cce1 <main@@Base+0x83a1>
  40cc86:	add    rsi,0x1
  40cc8a:	cmp    rsi,QWORD PTR [rsp+0x8]
  40cc8f:	jne    40ccfe <main@@Base+0x83be>
  40cc91:	jmp    40cdad <main@@Base+0x846d>
  40cc96:	mov    rax,r15
  40cc99:	cmp    cl,0x22
  40cc9c:	jne    40cf11 <main@@Base+0x85d1>
  40cca2:	lea    rsi,[r15+0x8]
  40cca6:	mov    rax,QWORD PTR [rsp+0x8]
  40ccab:	sub    rax,rsi
  40ccae:	cmp    rax,0x2
  40ccb2:	jl     40cd4b <main@@Base+0x840b>
  40ccb8:	cmp    BYTE PTR [rsi],0x20
  40ccbb:	jg     40cd5d <main@@Base+0x841d>
  40ccc1:	jne    40cd4b <main@@Base+0x840b>
  40ccc7:	cmp    BYTE PTR [rsi+0x1],0x20
  40cccb:	jle    40cd4b <main@@Base+0x840b>
  40cccd:	add    rsi,0x1
  40ccd1:	cmp    rsi,QWORD PTR [rsp+0x8]
  40ccd6:	jne    40cd64 <main@@Base+0x8424>
  40ccdc:	jmp    40cdcf <main@@Base+0x848f>
  40cce1:	mov    rdi,QWORD PTR [rsp+0x10]
  40cce6:	mov    rdx,QWORD PTR [rsp+0x8]
  40cceb:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40ccf0:	mov    rsi,rax
  40ccf3:	cmp    rsi,QWORD PTR [rsp+0x8]
  40ccf8:	je     40cdad <main@@Base+0x846d>
  40ccfe:	cmp    BYTE PTR [rsi],0x3a
  40cd01:	jne    40cdad <main@@Base+0x846d>
  40cd07:	lea    rax,[rsi+0x1]
  40cd0b:	mov    rcx,QWORD PTR [rsp+0x8]
  40cd10:	sub    rcx,rax
  40cd13:	cmp    rcx,0x2
  40cd17:	jl     40cead <main@@Base+0x856d>
  40cd1d:	cmp    BYTE PTR [rax],0x20
  40cd20:	jg     40cebf <main@@Base+0x857f>
  40cd26:	jne    40cead <main@@Base+0x856d>
  40cd2c:	cmp    BYTE PTR [rsi+0x2],0x20
  40cd30:	jle    40cead <main@@Base+0x856d>
  40cd36:	add    rsi,0x2
  40cd3a:	mov    rax,rsi
  40cd3d:	cmp    r15,rax
  40cd40:	jne    40cec8 <main@@Base+0x8588>
  40cd46:	jmp    40cfbb <main@@Base+0x867b>
  40cd4b:	mov    rdi,QWORD PTR [rsp+0x10]
  40cd50:	mov    rdx,QWORD PTR [rsp+0x8]
  40cd55:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40cd5a:	mov    rsi,rax
  40cd5d:	cmp    rsi,QWORD PTR [rsp+0x8]
  40cd62:	je     40cdcf <main@@Base+0x848f>
  40cd64:	cmp    BYTE PTR [rsi],0x3a
  40cd67:	jne    40cdcf <main@@Base+0x848f>
  40cd69:	lea    rax,[rsi+0x1]
  40cd6d:	mov    rcx,QWORD PTR [rsp+0x8]
  40cd72:	sub    rcx,rax
  40cd75:	cmp    rcx,0x2
  40cd79:	jl     40ceff <main@@Base+0x85bf>
  40cd7f:	cmp    BYTE PTR [rax],0x20
  40cd82:	jg     40cf11 <main@@Base+0x85d1>
  40cd88:	jne    40ceff <main@@Base+0x85bf>
  40cd8e:	cmp    BYTE PTR [rsi+0x2],0x20
  40cd92:	jle    40ceff <main@@Base+0x85bf>
  40cd98:	add    rsi,0x2
  40cd9c:	mov    rax,rsi
  40cd9f:	cmp    r15,rax
  40cda2:	jne    40cf1a <main@@Base+0x85da>
  40cda8:	jmp    40cfbb <main@@Base+0x867b>
  40cdad:	mov    ecx,0x4
  40cdb2:	mov    rdi,QWORD PTR [rsp+0x10]
  40cdb7:	mov    rdx,QWORD PTR [rsp+0x8]
  40cdbc:	call   41f940 <flatcc_json_parser_set_error@@Base>
  40cdc1:	cmp    r15,rax
  40cdc4:	jne    40cec8 <main@@Base+0x8588>
  40cdca:	jmp    40cfbb <main@@Base+0x867b>
  40cdcf:	mov    ecx,0x4
  40cdd4:	mov    rdi,QWORD PTR [rsp+0x10]
  40cdd9:	mov    rdx,QWORD PTR [rsp+0x8]
  40cdde:	call   41f940 <flatcc_json_parser_set_error@@Base>
  40cde3:	cmp    r15,rax
  40cde6:	jne    40cf1a <main@@Base+0x85da>
  40cdec:	jmp    40cfbb <main@@Base+0x867b>
  40cdf1:	mov    rax,r15
  40cdf4:	cmp    cl,0x22
  40cdf7:	jne    40cf66 <main@@Base+0x8626>
  40cdfd:	lea    rsi,[r15+0x7]
  40ce01:	mov    rax,QWORD PTR [rsp+0x8]
  40ce06:	sub    rax,rsi
  40ce09:	cmp    rax,0x2
  40ce0d:	jl     40ce29 <main@@Base+0x84e9>
  40ce0f:	cmp    BYTE PTR [rsi],0x20
  40ce12:	jg     40ce3b <main@@Base+0x84fb>
  40ce14:	jne    40ce29 <main@@Base+0x84e9>
  40ce16:	cmp    BYTE PTR [rsi+0x1],0x20
  40ce1a:	jle    40ce29 <main@@Base+0x84e9>
  40ce1c:	add    rsi,0x1
  40ce20:	cmp    rsi,QWORD PTR [rsp+0x8]
  40ce25:	jne    40ce42 <main@@Base+0x8502>
  40ce27:	jmp    40ce8b <main@@Base+0x854b>
  40ce29:	mov    rdi,QWORD PTR [rsp+0x10]
  40ce2e:	mov    rdx,QWORD PTR [rsp+0x8]
  40ce33:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40ce38:	mov    rsi,rax
  40ce3b:	cmp    rsi,QWORD PTR [rsp+0x8]
  40ce40:	je     40ce8b <main@@Base+0x854b>
  40ce42:	cmp    BYTE PTR [rsi],0x3a
  40ce45:	jne    40ce8b <main@@Base+0x854b>
  40ce47:	lea    rax,[rsi+0x1]
  40ce4b:	mov    rcx,QWORD PTR [rsp+0x8]
  40ce50:	sub    rcx,rax
  40ce53:	cmp    rcx,0x2
  40ce57:	jl     40cf54 <main@@Base+0x8614>
  40ce5d:	cmp    BYTE PTR [rax],0x20
  40ce60:	jg     40cf66 <main@@Base+0x8626>
  40ce66:	jne    40cf54 <main@@Base+0x8614>
  40ce6c:	cmp    BYTE PTR [rsi+0x2],0x20
  40ce70:	jle    40cf54 <main@@Base+0x8614>
  40ce76:	add    rsi,0x2
  40ce7a:	mov    rax,rsi
  40ce7d:	cmp    r15,rax
  40ce80:	jne    40cf6b <main@@Base+0x862b>
  40ce86:	jmp    40cfbb <main@@Base+0x867b>
  40ce8b:	mov    ecx,0x4
  40ce90:	mov    rdi,QWORD PTR [rsp+0x10]
  40ce95:	mov    rdx,QWORD PTR [rsp+0x8]
  40ce9a:	call   41f940 <flatcc_json_parser_set_error@@Base>
  40ce9f:	cmp    r15,rax
  40cea2:	jne    40cf6b <main@@Base+0x862b>
  40cea8:	jmp    40cfbb <main@@Base+0x867b>
  40cead:	mov    rdi,QWORD PTR [rsp+0x10]
  40ceb2:	mov    rsi,rax
  40ceb5:	mov    rdx,QWORD PTR [rsp+0x8]
  40ceba:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40cebf:	cmp    r15,rax
  40cec2:	je     40cfbb <main@@Base+0x867b>
  40cec8:	xor    r8d,r8d
  40cecb:	mov    rdi,QWORD PTR [rsp+0x10]
  40ced0:	mov    rsi,rax
  40ced3:	mov    rdx,QWORD PTR [rsp+0x8]
  40ced8:	lea    rcx,[rsp+0x30]
  40cedd:	call   4216d0 <flatcc_json_parser_build_uint8_vector_base64@@Base>
  40cee2:	mov    r12,rax
  40cee5:	cmp    DWORD PTR [rsp+0x30],0x0
  40ceea:	je     40e676 <main@@Base+0x9d36>
  40cef0:	mov    rax,QWORD PTR [rsp+0x10]
  40cef5:	mov    rdi,QWORD PTR [rax]
  40cef8:	xor    esi,esi
  40cefa:	jmp    40cfa0 <main@@Base+0x8660>
  40ceff:	mov    rdi,QWORD PTR [rsp+0x10]
  40cf04:	mov    rsi,rax
  40cf07:	mov    rdx,QWORD PTR [rsp+0x8]
  40cf0c:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40cf11:	cmp    r15,rax
  40cf14:	je     40cfbb <main@@Base+0x867b>
  40cf1a:	mov    r8d,0x1
  40cf20:	mov    rdi,QWORD PTR [rsp+0x10]
  40cf25:	mov    rsi,rax
  40cf28:	mov    rdx,QWORD PTR [rsp+0x8]
  40cf2d:	lea    rcx,[rsp+0x30]
  40cf32:	call   4216d0 <flatcc_json_parser_build_uint8_vector_base64@@Base>
  40cf37:	mov    r12,rax
  40cf3a:	cmp    DWORD PTR [rsp+0x30],0x0
  40cf3f:	je     40e676 <main@@Base+0x9d36>
  40cf45:	mov    rax,QWORD PTR [rsp+0x10]
  40cf4a:	mov    rdi,QWORD PTR [rax]
  40cf4d:	mov    esi,0x1
  40cf52:	jmp    40cfa0 <main@@Base+0x8660>
  40cf54:	mov    rdi,QWORD PTR [rsp+0x10]
  40cf59:	mov    rsi,rax
  40cf5c:	mov    rdx,QWORD PTR [rsp+0x8]
  40cf61:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40cf66:	cmp    r15,rax
  40cf69:	je     40cfbb <main@@Base+0x867b>
  40cf6b:	xor    r8d,r8d
  40cf6e:	mov    rdi,QWORD PTR [rsp+0x10]
  40cf73:	mov    rsi,rax
  40cf76:	mov    rdx,QWORD PTR [rsp+0x8]
  40cf7b:	lea    rcx,[rsp+0x30]
  40cf80:	call   4216d0 <flatcc_json_parser_build_uint8_vector_base64@@Base>
  40cf85:	mov    r12,rax
  40cf88:	cmp    DWORD PTR [rsp+0x30],0x0
  40cf8d:	je     40e676 <main@@Base+0x9d36>
  40cf93:	mov    rax,QWORD PTR [rsp+0x10]
  40cf98:	mov    rdi,QWORD PTR [rax]
  40cf9b:	mov    esi,0x2
  40cfa0:	call   41d720 <flatcc_builder_table_add_offset@@Base>
  40cfa5:	test   rax,rax
  40cfa8:	je     40e676 <main@@Base+0x9d36>
  40cfae:	mov    ecx,DWORD PTR [rsp+0x30]
  40cfb2:	mov    DWORD PTR [rax],ecx
  40cfb4:	mov    r13,QWORD PTR [rsp+0x8]
  40cfb9:	jmp    40cfd3 <main@@Base+0x8693>
  40cfbb:	mov    rdi,QWORD PTR [rsp+0x10]
  40cfc0:	mov    rsi,r15
  40cfc3:	mov    r13,QWORD PTR [rsp+0x8]
  40cfc8:	mov    rdx,r13
  40cfcb:	call   41ff40 <flatcc_json_parser_unmatched_symbol@@Base>
  40cfd0:	mov    r12,rax
  40cfd3:	mov    rax,r13
  40cfd6:	sub    rax,r12
  40cfd9:	cmp    rax,0x2
  40cfdd:	mov    r15,QWORD PTR [rsp+0x10]
  40cfe2:	jl     40d003 <main@@Base+0x86c3>
  40cfe4:	cmp    BYTE PTR [r12],0x20
  40cfe9:	jg     40d014 <main@@Base+0x86d4>
  40cfeb:	jne    40d003 <main@@Base+0x86c3>
  40cfed:	cmp    BYTE PTR [r12+0x1],0x20
  40cff3:	jle    40d003 <main@@Base+0x86c3>
  40cff5:	add    r12,0x1
  40cff9:	cmp    r12,r13
  40cffc:	jne    40d01d <main@@Base+0x86dd>
  40cffe:	jmp    40e14a <main@@Base+0x980a>
  40d003:	mov    rdi,r15
  40d006:	mov    rsi,r12
  40d009:	mov    rdx,r13
  40d00c:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40d011:	mov    r12,rax
  40d014:	cmp    r12,r13
  40d017:	je     40e14a <main@@Base+0x980a>
  40d01d:	movzx  eax,BYTE PTR [r12]
  40d022:	cmp    al,0x2c
  40d024:	jne    40e152 <main@@Base+0x9812>
  40d02a:	lea    rsi,[r12+0x1]
  40d02f:	mov    rax,r13
  40d032:	sub    rax,rsi
  40d035:	cmp    rax,0x2
  40d039:	jl     40d05b <main@@Base+0x871b>
  40d03b:	cmp    BYTE PTR [rsi],0x20
  40d03e:	jg     40d069 <main@@Base+0x8729>
  40d040:	jne    40d05b <main@@Base+0x871b>
  40d042:	cmp    BYTE PTR [r12+0x2],0x20
  40d048:	jle    40d05b <main@@Base+0x871b>
  40d04a:	add    r12,0x2
  40d04e:	mov    rsi,r12
  40d051:	cmp    rsi,r13
  40d054:	jne    40d072 <main@@Base+0x8732>
  40d056:	jmp    40e37a <main@@Base+0x9a3a>
  40d05b:	mov    rdi,r15
  40d05e:	mov    rdx,r13
  40d061:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40d066:	mov    rsi,rax
  40d069:	cmp    rsi,r13
  40d06c:	je     40e37a <main@@Base+0x9a3a>
  40d072:	cmp    BYTE PTR [rsi],0x7d
  40d075:	jne    40ca34 <main@@Base+0x80f4>
  40d07b:	lea    r14,[rsi+0x1]
  40d07f:	sub    r13,r14
  40d082:	cmp    r13,0x2
  40d086:	jl     40e91e <main@@Base+0x9fde>
  40d08c:	cmp    BYTE PTR [r14],0x20
  40d090:	jg     40e17b <main@@Base+0x983b>
  40d096:	jne    40e91e <main@@Base+0x9fde>
  40d09c:	cmp    BYTE PTR [rsi+0x2],0x20
  40d0a0:	jle    40e91e <main@@Base+0x9fde>
  40d0a6:	add    rsi,0x2
  40d0aa:	mov    r14,rsi
  40d0ad:	jmp    40e17b <main@@Base+0x983b>
  40d0b2:	mov    DWORD PTR [rsp+0x1c],eax
  40d0b6:	mov    r12d,eax
  40d0b9:	jmp    40aea0 <main@@Base+0x6560>
  40d0be:	neg    r12
  40d0c1:	mov    QWORD PTR [rsp+0x40],r12
  40d0c6:	mov    r15,QWORD PTR [rsp+0x10]
  40d0cb:	cmp    rbx,r14
  40d0ce:	mov    rbp,QWORD PTR [rsp+0x20]
  40d0d3:	jne    40d117 <main@@Base+0x87d7>
  40d0d5:	mov    rdi,r15
  40d0d8:	mov    rsi,rbx
  40d0db:	mov    rdx,QWORD PTR [rsp+0x8]
  40d0e0:	lea    rcx,[rip+0x1e1b9]        # 42b2a0 <filename@@Base+0x1d0>
  40d0e7:	lea    r8,[rsp+0x40]
  40d0ec:	call   414620 <main@@Base+0xfce0>
  40d0f1:	mov    r14,rax
  40d0f4:	cmp    rax,rbx
  40d0f7:	je     40eabc <main@@Base+0xa17c>
  40d0fd:	cmp    r14,QWORD PTR [rsp+0x8]
  40d102:	je     40eabc <main@@Base+0xa17c>
  40d108:	mov    r12,QWORD PTR [rsp+0x40]
  40d10d:	mov    r15,QWORD PTR [rsp+0x10]
  40d112:	mov    rbp,QWORD PTR [rsp+0x20]
  40d117:	test   r12,r12
  40d11a:	mov    r13,QWORD PTR [rsp+0x8]
  40d11f:	jne    40d12c <main@@Base+0x87ec>
  40d121:	test   BYTE PTR [r15+0x10],0x2
  40d126:	je     40c5ee <main@@Base+0x7cae>
  40d12c:	mov    rdi,QWORD PTR [r15]
  40d12f:	mov    esi,0x16
  40d134:	mov    edx,0x8
  40d139:	mov    ecx,0x8
  40d13e:	call   41d880 <flatcc_builder_table_add@@Base>
  40d143:	test   rax,rax
  40d146:	je     40eabc <main@@Base+0xa17c>
  40d14c:	mov    QWORD PTR [rax],r12
  40d14f:	jmp    40c5ee <main@@Base+0x7cae>
  40d154:	mov    ecx,0x21
  40d159:	mov    r15,QWORD PTR [rsp+0x10]
  40d15e:	mov    rdi,r15
  40d161:	mov    rsi,rax
  40d164:	mov    r13,QWORD PTR [rsp+0x8]
  40d169:	jmp    408b63 <main@@Base+0x4223>
  40d16e:	mov    r15,QWORD PTR [rsp+0x10]
  40d173:	mov    r13,QWORD PTR [rsp+0x8]
  40d178:	jne    40d18b <main@@Base+0x884b>
  40d17a:	cmp    BYTE PTR [r12+0x2],0x20
  40d180:	jle    40d18b <main@@Base+0x884b>
  40d182:	add    r12,0x2
  40d186:	mov    rax,r12
  40d189:	jmp    40d199 <main@@Base+0x8859>
  40d18b:	mov    rdi,r15
  40d18e:	mov    rsi,rax
  40d191:	mov    rdx,r13
  40d194:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40d199:	mov    rsi,r13
  40d19c:	cmp    rax,r13
  40d19f:	je     40d1ea <main@@Base+0x88aa>
  40d1a1:	cmp    BYTE PTR [rax],0x5d
  40d1a4:	jne    40d1e2 <main@@Base+0x88a2>
  40d1a6:	lea    r14,[rax+0x1]
  40d1aa:	mov    rcx,QWORD PTR [rsp+0x8]
  40d1af:	sub    rcx,r14
  40d1b2:	cmp    rcx,0x2
  40d1b6:	jl     40e951 <main@@Base+0xa011>
  40d1bc:	cmp    BYTE PTR [r14],0x20
  40d1c0:	jg     40e3bb <main@@Base+0x9a7b>
  40d1c6:	jne    40e951 <main@@Base+0xa011>
  40d1cc:	cmp    BYTE PTR [rax+0x2],0x20
  40d1d0:	jle    40e951 <main@@Base+0xa011>
  40d1d6:	add    rax,0x2
  40d1da:	mov    r14,rax
  40d1dd:	jmp    40e3bb <main@@Base+0x9a7b>
  40d1e2:	mov    rsi,rax
  40d1e5:	mov    r13,QWORD PTR [rsp+0x8]
  40d1ea:	mov    r15,QWORD PTR [rsp+0x10]
  40d1ef:	mov    rdi,r15
  40d1f2:	mov    rdx,r13
  40d1f5:	lea    rcx,[rsp+0x3c]
  40d1fa:	call   421ab0 <flatcc_json_parser_build_string@@Base>
  40d1ff:	mov    r12,rax
  40d202:	cmp    DWORD PTR [rsp+0x3c],0x0
  40d207:	je     4049f1 <main@@Base+0xb1>
  40d20d:	mov    rdi,QWORD PTR [r15]
  40d210:	mov    esi,0x1
  40d215:	call   41ba10 <flatcc_builder_extend_offset_vector@@Base>
  40d21a:	test   rax,rax
  40d21d:	je     4049f1 <main@@Base+0xb1>
  40d223:	mov    ecx,DWORD PTR [rsp+0x3c]
  40d227:	mov    DWORD PTR [rax],ecx
  40d229:	mov    rax,r13
  40d22c:	sub    rax,r12
  40d22f:	cmp    rax,0x2
  40d233:	jl     40d254 <main@@Base+0x8914>
  40d235:	cmp    BYTE PTR [r12],0x20
  40d23a:	jg     40d265 <main@@Base+0x8925>
  40d23c:	jne    40d254 <main@@Base+0x8914>
  40d23e:	cmp    BYTE PTR [r12+0x1],0x20
  40d244:	jle    40d254 <main@@Base+0x8914>
  40d246:	add    r12,0x1
  40d24a:	cmp    r12,r13
  40d24d:	jne    40d26e <main@@Base+0x892e>
  40d24f:	jmp    40e38a <main@@Base+0x9a4a>
  40d254:	mov    rdi,r15
  40d257:	mov    rsi,r12
  40d25a:	mov    rdx,r13
  40d25d:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40d262:	mov    r12,rax
  40d265:	cmp    r12,r13
  40d268:	je     40e38a <main@@Base+0x9a4a>
  40d26e:	movzx  eax,BYTE PTR [r12]
  40d273:	cmp    al,0x2c
  40d275:	jne    40e392 <main@@Base+0x9a52>
  40d27b:	lea    rsi,[r12+0x1]
  40d280:	mov    rax,r13
  40d283:	sub    rax,rsi
  40d286:	cmp    rax,0x2
  40d28a:	jl     40d2ac <main@@Base+0x896c>
  40d28c:	cmp    BYTE PTR [rsi],0x20
  40d28f:	jg     40d2ba <main@@Base+0x897a>
  40d291:	jne    40d2ac <main@@Base+0x896c>
  40d293:	cmp    BYTE PTR [r12+0x2],0x20
  40d299:	jle    40d2ac <main@@Base+0x896c>
  40d29b:	add    r12,0x2
  40d29f:	mov    rsi,r12
  40d2a2:	cmp    rsi,r13
  40d2a5:	jne    40d2c3 <main@@Base+0x8983>
  40d2a7:	jmp    40e3fe <main@@Base+0x9abe>
  40d2ac:	mov    rdi,r15
  40d2af:	mov    rdx,r13
  40d2b2:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40d2b7:	mov    rsi,rax
  40d2ba:	cmp    rsi,r13
  40d2bd:	je     40e3fe <main@@Base+0x9abe>
  40d2c3:	cmp    BYTE PTR [rsi],0x5d
  40d2c6:	jne    40d1ef <main@@Base+0x88af>
  40d2cc:	lea    r14,[rsi+0x1]
  40d2d0:	sub    r13,r14
  40d2d3:	cmp    r13,0x2
  40d2d7:	jl     40e951 <main@@Base+0xa011>
  40d2dd:	cmp    BYTE PTR [r14],0x20
  40d2e1:	jg     40e3bb <main@@Base+0x9a7b>
  40d2e7:	jne    40e951 <main@@Base+0xa011>
  40d2ed:	cmp    BYTE PTR [rsi+0x2],0x20
  40d2f1:	jle    40e951 <main@@Base+0xa011>
  40d2f7:	add    rsi,0x2
  40d2fb:	mov    r14,rsi
  40d2fe:	jmp    40e3bb <main@@Base+0x9a7b>
  40d303:	mov    r12,rax
  40d306:	mov    QWORD PTR [rsp+0x40],0x0
  40d30f:	mov    rax,QWORD PTR [rsp+0x10]
  40d314:	mov    rdi,QWORD PTR [rax]
  40d317:	mov    esi,0x1
  40d31c:	call   41b720 <flatcc_builder_extend_vector@@Base>
  40d321:	test   rax,rax
  40d324:	je     40eabf <main@@Base+0xa17f>
  40d32a:	mov    rbx,rax
  40d32d:	mov    r15,QWORD PTR [rsp+0x10]
  40d332:	mov    QWORD PTR [rsp+0x30],0x0
  40d33b:	mov    DWORD PTR [rsp+0x1c],0x0
  40d343:	mov    QWORD PTR [rsp+0x40],0x0
  40d34c:	mov    rdx,QWORD PTR [rsp+0x8]
  40d351:	cmp    r12,rdx
  40d354:	je     40d392 <main@@Base+0x8a52>
  40d356:	mov    rdi,r15
  40d359:	mov    rsi,r12
  40d35c:	lea    rcx,[rsp+0x1c]
  40d361:	lea    r8,[rsp+0x30]
  40d366:	call   4215e0 <flatcc_json_parser_integer@@Base>
  40d36b:	cmp    rax,r12
  40d36e:	je     40d3a2 <main@@Base+0x8a62>
  40d370:	mov    rcx,QWORD PTR [rsp+0x30]
  40d375:	cmp    DWORD PTR [rsp+0x1c],0x0
  40d37a:	je     40d3ae <main@@Base+0x8a6e>
  40d37c:	movabs rdx,0x8000000000000000
  40d386:	cmp    rcx,rdx
  40d389:	jbe    40d3d6 <main@@Base+0x8a96>
  40d38b:	mov    ecx,0x8
  40d390:	jmp    40d3b8 <main@@Base+0x8a78>
  40d392:	xor    ecx,ecx
  40d394:	mov    rax,rdx
  40d397:	cmp    r12,rax
  40d39a:	jne    40d423 <main@@Base+0x8ae3>
  40d3a0:	jmp    40d3e8 <main@@Base+0x8aa8>
  40d3a2:	xor    ecx,ecx
  40d3a4:	mov    rax,r12
  40d3a7:	cmp    r12,rax
  40d3aa:	jne    40d423 <main@@Base+0x8ae3>
  40d3ac:	jmp    40d3e8 <main@@Base+0x8aa8>
  40d3ae:	test   rcx,rcx
  40d3b1:	jns    40d3d9 <main@@Base+0x8a99>
  40d3b3:	mov    ecx,0x7
  40d3b8:	mov    r15,QWORD PTR [rsp+0x10]
  40d3bd:	mov    rdi,r15
  40d3c0:	mov    rsi,rax
  40d3c3:	mov    rdx,QWORD PTR [rsp+0x8]
  40d3c8:	call   41f940 <flatcc_json_parser_set_error@@Base>
  40d3cd:	xor    ecx,ecx
  40d3cf:	cmp    r12,rax
  40d3d2:	jne    40d423 <main@@Base+0x8ae3>
  40d3d4:	jmp    40d3e8 <main@@Base+0x8aa8>
  40d3d6:	neg    rcx
  40d3d9:	mov    QWORD PTR [rsp+0x40],rcx
  40d3de:	mov    r15,QWORD PTR [rsp+0x10]
  40d3e3:	cmp    r12,rax
  40d3e6:	jne    40d423 <main@@Base+0x8ae3>
  40d3e8:	mov    rdi,r15
  40d3eb:	mov    rsi,r12
  40d3ee:	mov    rbp,QWORD PTR [rsp+0x8]
  40d3f3:	mov    rdx,rbp
  40d3f6:	lea    rcx,[rip+0x1df83]        # 42b380 <filename@@Base+0x2b0>
  40d3fd:	lea    r8,[rsp+0x40]
  40d402:	call   414620 <main@@Base+0xfce0>
  40d407:	cmp    rax,r12
  40d40a:	je     40eaf8 <main@@Base+0xa1b8>
  40d410:	cmp    rax,rbp
  40d413:	je     40eaf8 <main@@Base+0xa1b8>
  40d419:	mov    rcx,QWORD PTR [rsp+0x40]
  40d41e:	mov    r15,QWORD PTR [rsp+0x10]
  40d423:	mov    QWORD PTR [rbx],rcx
  40d426:	mov    r14,QWORD PTR [rsp+0x8]
  40d42b:	mov    rcx,r14
  40d42e:	sub    rcx,rax
  40d431:	cmp    rcx,0x2
  40d435:	jl     40d452 <main@@Base+0x8b12>
  40d437:	cmp    BYTE PTR [rax],0x20
  40d43a:	jg     40d460 <main@@Base+0x8b20>
  40d43c:	jne    40d452 <main@@Base+0x8b12>
  40d43e:	cmp    BYTE PTR [rax+0x1],0x20
  40d442:	jle    40d452 <main@@Base+0x8b12>
  40d444:	add    rax,0x1
  40d448:	cmp    rax,r14
  40d44b:	jne    40d469 <main@@Base+0x8b29>
  40d44d:	jmp    40e778 <main@@Base+0x9e38>
  40d452:	mov    rdi,r15
  40d455:	mov    rsi,rax
  40d458:	mov    rdx,r14
  40d45b:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40d460:	cmp    rax,r14
  40d463:	je     40e778 <main@@Base+0x9e38>
  40d469:	movzx  ecx,BYTE PTR [rax]
  40d46c:	cmp    cl,0x2c
  40d46f:	jne    40e4fe <main@@Base+0x9bbe>
  40d475:	lea    r12,[rax+0x1]
  40d479:	mov    rcx,r14
  40d47c:	sub    rcx,r12
  40d47f:	cmp    rcx,0x2
  40d483:	jl     40d49a <main@@Base+0x8b5a>
  40d485:	cmp    BYTE PTR [r12],0x20
  40d48a:	jg     40d4ab <main@@Base+0x8b6b>
  40d48c:	jne    40d49a <main@@Base+0x8b5a>
  40d48e:	cmp    BYTE PTR [rax+0x2],0x20
  40d492:	jle    40d49a <main@@Base+0x8b5a>
  40d494:	add    rax,0x2
  40d498:	jmp    40d4a8 <main@@Base+0x8b68>
  40d49a:	mov    rdi,r15
  40d49d:	mov    rsi,r12
  40d4a0:	mov    rdx,r14
  40d4a3:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40d4a8:	mov    r12,rax
  40d4ab:	cmp    r12,r14
  40d4ae:	je     40e585 <main@@Base+0x9c45>
  40d4b4:	cmp    BYTE PTR [r12],0x5d
  40d4b9:	je     40e5df <main@@Base+0x9c9f>
  40d4bf:	mov    QWORD PTR [rsp+0x40],0x0
  40d4c8:	mov    rdi,QWORD PTR [r15]
  40d4cb:	mov    esi,0x1
  40d4d0:	call   41b720 <flatcc_builder_extend_vector@@Base>
  40d4d5:	mov    rbx,rax
  40d4d8:	test   rax,rax
  40d4db:	jne    40d332 <main@@Base+0x89f2>
  40d4e1:	jmp    40eab2 <main@@Base+0xa172>
  40d4e6:	mov    r13,rax
  40d4e9:	mov    QWORD PTR [rsp+0x30],0x0
  40d4f2:	mov    rax,QWORD PTR [rsp+0x10]
  40d4f7:	mov    rdi,QWORD PTR [rax]
  40d4fa:	mov    esi,0x1
  40d4ff:	call   41b720 <flatcc_builder_extend_vector@@Base>
  40d504:	test   rax,rax
  40d507:	je     40eafd <main@@Base+0xa1bd>
  40d50d:	mov    rbp,rax
  40d510:	mov    r15,QWORD PTR [rsp+0x10]
  40d515:	mov    rbx,QWORD PTR [rsp+0x8]
  40d51a:	mov    rdi,r15
  40d51d:	mov    rsi,r13
  40d520:	mov    rdx,rbx
  40d523:	lea    rcx,[rsp+0x30]
  40d528:	call   420ce0 <flatcc_json_parser_double@@Base>
  40d52d:	mov    r12,rax
  40d530:	cmp    r13,rax
  40d533:	jne    40d564 <main@@Base+0x8c24>
  40d535:	mov    rdi,r15
  40d538:	mov    rsi,r13
  40d53b:	mov    rdx,rbx
  40d53e:	lea    rcx,[rip+0x1de1b]        # 42b360 <filename@@Base+0x290>
  40d545:	lea    r8,[rsp+0x30]
  40d54a:	call   414c40 <main@@Base+0x10300>
  40d54f:	mov    r12,rax
  40d552:	cmp    rax,r13
  40d555:	je     40eaf0 <main@@Base+0xa1b0>
  40d55b:	cmp    r12,rbx
  40d55e:	je     40eaf0 <main@@Base+0xa1b0>
  40d564:	mov    rax,QWORD PTR [rsp+0x30]
  40d569:	mov    QWORD PTR [rbp+0x0],rax
  40d56d:	mov    rax,rbx
  40d570:	sub    rax,r12
  40d573:	cmp    rax,0x2
  40d577:	jl     40d598 <main@@Base+0x8c58>
  40d579:	cmp    BYTE PTR [r12],0x20
  40d57e:	jg     40d5a9 <main@@Base+0x8c69>
  40d580:	jne    40d598 <main@@Base+0x8c58>
  40d582:	cmp    BYTE PTR [r12+0x1],0x20
  40d588:	jle    40d598 <main@@Base+0x8c58>
  40d58a:	add    r12,0x1
  40d58e:	cmp    r12,rbx
  40d591:	jne    40d5b2 <main@@Base+0x8c72>
  40d593:	jmp    40e565 <main@@Base+0x9c25>
  40d598:	mov    rdi,r15
  40d59b:	mov    rsi,r12
  40d59e:	mov    rdx,rbx
  40d5a1:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40d5a6:	mov    r12,rax
  40d5a9:	cmp    r12,rbx
  40d5ac:	je     40e565 <main@@Base+0x9c25>
  40d5b2:	movzx  eax,BYTE PTR [r12]
  40d5b7:	cmp    al,0x2c
  40d5b9:	jne    40e598 <main@@Base+0x9c58>
  40d5bf:	lea    r13,[r12+0x1]
  40d5c4:	mov    rax,QWORD PTR [rsp+0x8]
  40d5c9:	sub    rax,r13
  40d5cc:	cmp    rax,0x2
  40d5d0:	jl     40d5fb <main@@Base+0x8cbb>
  40d5d2:	cmp    BYTE PTR [r13+0x0],0x20
  40d5d7:	jle    40d5e8 <main@@Base+0x8ca8>
  40d5d9:	mov    rbx,QWORD PTR [rsp+0x8]
  40d5de:	cmp    r13,rbx
  40d5e1:	jne    40d61a <main@@Base+0x8cda>
  40d5e3:	jmp    40e661 <main@@Base+0x9d21>
  40d5e8:	jne    40d5fb <main@@Base+0x8cbb>
  40d5ea:	cmp    BYTE PTR [r12+0x2],0x20
  40d5f0:	jle    40d5fb <main@@Base+0x8cbb>
  40d5f2:	add    r12,0x2
  40d5f6:	mov    r13,r12
  40d5f9:	jmp    40d5d9 <main@@Base+0x8c99>
  40d5fb:	mov    rdi,r15
  40d5fe:	mov    rsi,r13
  40d601:	mov    rbx,QWORD PTR [rsp+0x8]
  40d606:	mov    rdx,rbx
  40d609:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40d60e:	mov    r13,rax
  40d611:	cmp    r13,rbx
  40d614:	je     40e661 <main@@Base+0x9d21>
  40d61a:	cmp    BYTE PTR [r13+0x0],0x5d
  40d61f:	je     40e695 <main@@Base+0x9d55>
  40d625:	mov    QWORD PTR [rsp+0x30],0x0
  40d62e:	mov    rdi,QWORD PTR [r15]
  40d631:	mov    esi,0x1
  40d636:	call   41b720 <flatcc_builder_extend_vector@@Base>
  40d63b:	mov    rbp,rax
  40d63e:	mov    r12,r13
  40d641:	test   rax,rax
  40d644:	mov    rbx,QWORD PTR [rsp+0x8]
  40d649:	jne    40d51a <main@@Base+0x8bda>
  40d64f:	jmp    40eaf0 <main@@Base+0xa1b0>
  40d654:	mov    r14,r13
  40d657:	jmp    40a05e <main@@Base+0x571e>
  40d65c:	mov    r14,r13
  40d65f:	jmp    40a1f5 <main@@Base+0x58b5>
  40d664:	cmp    al,0x5d
  40d666:	jne    40e3ca <main@@Base+0x9a8a>
  40d66c:	lea    r14,[r12+0x1]
  40d671:	mov    rax,QWORD PTR [rsp+0x8]
  40d676:	sub    rax,r14
  40d679:	cmp    rax,0x2
  40d67d:	jl     40e8b8 <main@@Base+0x9f78>
  40d683:	cmp    BYTE PTR [r14],0x20
  40d687:	jle    40e8a2 <main@@Base+0x9f62>
  40d68d:	mov    r15,QWORD PTR [rsp+0x10]
  40d692:	mov    r13,QWORD PTR [rsp+0x8]
  40d697:	jmp    40a05e <main@@Base+0x571e>
  40d69c:	cmp    al,0x5d
  40d69e:	jne    40e3e4 <main@@Base+0x9aa4>
  40d6a4:	lea    r14,[r12+0x1]
  40d6a9:	mov    rax,QWORD PTR [rsp+0x8]
  40d6ae:	sub    rax,r14
  40d6b1:	cmp    rax,0x2
  40d6b5:	jl     40e8eb <main@@Base+0x9fab>
  40d6bb:	cmp    BYTE PTR [r14],0x20
  40d6bf:	jle    40e8d5 <main@@Base+0x9f95>
  40d6c5:	mov    r15,QWORD PTR [rsp+0x10]
  40d6ca:	mov    r13,QWORD PTR [rsp+0x8]
  40d6cf:	jmp    40a1f5 <main@@Base+0x58b5>
  40d6d4:	mov    ecx,0x9
  40d6d9:	mov    rdi,r15
  40d6dc:	mov    rsi,r13
  40d6df:	jmp    40a053 <main@@Base+0x5713>
  40d6e4:	mov    ecx,0x9
  40d6e9:	mov    rdi,r15
  40d6ec:	mov    rsi,r13
  40d6ef:	jmp    40a1ea <main@@Base+0x58aa>
  40d6f4:	mov    r14,rbx
  40d6f7:	jmp    40e556 <main@@Base+0x9c16>
  40d6fc:	mov    rax,QWORD PTR [rsp+0x30]
  40d701:	mov    rcx,rax
  40d704:	shr    rcx,0x20
  40d708:	je     40e416 <main@@Base+0x9ad6>
  40d70e:	mov    ecx,0x7
  40d713:	mov    r15,QWORD PTR [rsp+0x10]
  40d718:	mov    rdi,r15
  40d71b:	mov    rsi,r14
  40d71e:	mov    rdx,QWORD PTR [rsp+0x8]
  40d723:	call   41f940 <flatcc_json_parser_set_error@@Base>
  40d728:	mov    r14,rax
  40d72b:	cmp    rbx,r14
  40d72e:	jne    40e464 <main@@Base+0x9b24>
  40d734:	jmp    40e427 <main@@Base+0x9ae7>
  40d739:	mov    r12,QWORD PTR [rsp+0x30]
  40d73e:	mov    QWORD PTR [rsp+0x40],r12
  40d743:	mov    r15,QWORD PTR [rsp+0x10]
  40d748:	cmp    rbx,r14
  40d74b:	jne    40d78a <main@@Base+0x8e4a>
  40d74d:	mov    rdi,r15
  40d750:	mov    rsi,rbx
  40d753:	mov    rdx,QWORD PTR [rsp+0x8]
  40d758:	lea    rcx,[rip+0x1dbc1]        # 42b320 <filename@@Base+0x250>
  40d75f:	lea    r8,[rsp+0x40]
  40d764:	call   414a50 <main@@Base+0x10110>
  40d769:	mov    r14,rax
  40d76c:	cmp    rax,rbx
  40d76f:	je     40eabc <main@@Base+0xa17c>
  40d775:	cmp    r14,QWORD PTR [rsp+0x8]
  40d77a:	je     40eabc <main@@Base+0xa17c>
  40d780:	mov    r12,QWORD PTR [rsp+0x40]
  40d785:	mov    r15,QWORD PTR [rsp+0x10]
  40d78a:	test   r12,r12
  40d78d:	jne    40d79a <main@@Base+0x8e5a>
  40d78f:	test   BYTE PTR [r15+0x10],0x2
  40d794:	je     40e493 <main@@Base+0x9b53>
  40d79a:	mov    rdi,QWORD PTR [r15]
  40d79d:	mov    esi,0x17
  40d7a2:	mov    edx,0x8
  40d7a7:	mov    ecx,0x8
  40d7ac:	call   41d880 <flatcc_builder_table_add@@Base>
  40d7b1:	test   rax,rax
  40d7b4:	je     40eabc <main@@Base+0xa17c>
  40d7ba:	mov    QWORD PTR [rax],r12
  40d7bd:	jmp    40e493 <main@@Base+0x9b53>
  40d7c2:	cmp    cl,0x5d
  40d7c5:	jne    40e53c <main@@Base+0x9bfc>
  40d7cb:	lea    r14,[rax+0x1]
  40d7cf:	mov    rcx,QWORD PTR [rsp+0x8]
  40d7d4:	sub    rcx,r14
  40d7d7:	cmp    rcx,0x2
  40d7db:	jl     40e0a9 <main@@Base+0x9769>
  40d7e1:	cmp    BYTE PTR [r14],0x20
  40d7e5:	jg     40e556 <main@@Base+0x9c16>
  40d7eb:	jne    40e0a9 <main@@Base+0x9769>
  40d7f1:	cmp    BYTE PTR [rax+0x2],0x20
  40d7f5:	jg     40b056 <main@@Base+0x6716>
  40d7fb:	jmp    40e0a9 <main@@Base+0x9769>
  40d800:	mov    ecx,0x9
  40d805:	mov    rdi,r15
  40d808:	mov    rsi,rbx
  40d80b:	mov    rdx,rbx
  40d80e:	jmp    40e54e <main@@Base+0x9c0e>
  40d813:	mov    rsi,rax
  40d816:	mov    r13,QWORD PTR [rsp+0x8]
  40d81b:	mov    r15,r13
  40d81e:	cmp    rsi,r13
  40d821:	je     40d864 <main@@Base+0x8f24>
  40d823:	movzx  eax,BYTE PTR [rsi]
  40d826:	cmp    al,0x2e
  40d828:	je     40d83f <main@@Base+0x8eff>
  40d82a:	cmp    al,0x22
  40d82c:	jne    40d856 <main@@Base+0x8f16>
  40d82e:	add    rsi,0x1
  40d832:	mov    rax,QWORD PTR [rsp+0x28]
  40d837:	mov    DWORD PTR [rax],0x0
  40d83d:	jmp    40d861 <main@@Base+0x8f21>
  40d83f:	mov    ecx,0x5
  40d844:	mov    rdi,QWORD PTR [rsp+0x10]
  40d849:	mov    rdx,r13
  40d84c:	call   41f940 <flatcc_json_parser_set_error@@Base>
  40d851:	mov    r15,rax
  40d854:	jmp    40d864 <main@@Base+0x8f24>
  40d856:	mov    rax,QWORD PTR [rsp+0x28]
  40d85b:	mov    DWORD PTR [rax],0x1
  40d861:	mov    r15,rsi
  40d864:	mov    rcx,r13
  40d867:	sub    rcx,r15
  40d86a:	cmp    rcx,0x8
  40d86e:	jb     40d87a <main@@Base+0x8f3a>
  40d870:	movbe  rax,QWORD PTR [r15]
  40d875:	jmp    40d908 <main@@Base+0x8fc8>
  40d87a:	mov    eax,ecx
  40d87c:	and    al,0xf
  40d87e:	add    al,0xff
  40d880:	cmp    al,0x7
  40d882:	ja     40d9d3 <main@@Base+0x9093>
  40d888:	movzx  eax,al
  40d88b:	lea    rdx,[rip+0x168fe]        # 424190 <_IO_stdin_used@@Base+0x190>
  40d892:	movsxd rax,DWORD PTR [rdx+rax*4]
  40d896:	add    rax,rdx
  40d899:	xor    r8d,r8d
  40d89c:	xor    r9d,r9d
  40d89f:	xor    edx,edx
  40d8a1:	xor    esi,esi
  40d8a3:	xor    ebx,ebx
  40d8a5:	xor    ebp,ebp
  40d8a7:	xor    edi,edi
  40d8a9:	jmp    rax
  40d8ab:	movsx  r8,BYTE PTR [r15+0x7]
  40d8b0:	movsx  r9,BYTE PTR [r15+0x6]
  40d8b5:	shl    r9,0x8
  40d8b9:	or     r9,r8
  40d8bc:	movsx  rdx,BYTE PTR [r15+0x5]
  40d8c1:	shl    rdx,0x10
  40d8c5:	or     rdx,r9
  40d8c8:	movsx  rsi,BYTE PTR [r15+0x4]
  40d8cd:	shl    rsi,0x18
  40d8d1:	or     rsi,rdx
  40d8d4:	movsx  rbx,BYTE PTR [r15+0x3]
  40d8d9:	shl    rbx,0x20
  40d8dd:	or     rbx,rsi
  40d8e0:	movsx  rbp,BYTE PTR [r15+0x2]
  40d8e5:	shl    rbp,0x28
  40d8e9:	or     rbp,rbx
  40d8ec:	movsx  rdi,BYTE PTR [r15+0x1]
  40d8f1:	shl    rdi,0x30
  40d8f5:	or     rdi,rbp
  40d8f8:	movzx  eax,BYTE PTR [r15]
  40d8fc:	shl    rax,0x38
  40d900:	or     rax,rdi
  40d903:	mov    r13,QWORD PTR [rsp+0x8]
  40d908:	movabs rdx,0x6964000000000000
  40d912:	cmp    rax,rdx
  40d915:	jae    40d971 <main@@Base+0x9031>
  40d917:	shr    rax,0x18
  40d91b:	movabs rdx,0x636f756e74
  40d925:	cmp    rax,rdx
  40d928:	jne    40d9d3 <main@@Base+0x9093>
  40d92e:	mov    rbx,r15
  40d931:	cmp    rcx,0x6
  40d935:	jl     40dc98 <main@@Base+0x9358>
  40d93b:	mov    rax,QWORD PTR [rsp+0x28]
  40d940:	cmp    DWORD PTR [rax],0x0
  40d943:	movzx  eax,BYTE PTR [r15+0x5]
  40d948:	je     40da45 <main@@Base+0x9105>
  40d94e:	cmp    al,0x21
  40d950:	jl     40d95d <main@@Base+0x901d>
  40d952:	mov    rbx,r15
  40d955:	cmp    al,0x3a
  40d957:	jne    40dc98 <main@@Base+0x9358>
  40d95d:	lea    rsi,[r15+0x5]
  40d961:	mov    rax,QWORD PTR [rsp+0x28]
  40d966:	mov    DWORD PTR [rax],0x0
  40d96c:	jmp    40da54 <main@@Base+0x9114>
  40d971:	mov    rdx,rax
  40d974:	movabs rsi,0xffffff0000000000
  40d97e:	and    rdx,rsi
  40d981:	movabs rsi,0x76616c0000000000
  40d98b:	cmp    rdx,rsi
  40d98e:	jne    40d9e0 <main@@Base+0x90a0>
  40d990:	mov    rbx,r15
  40d993:	cmp    rcx,0x4
  40d997:	jl     40ddcf <main@@Base+0x948f>
  40d99d:	mov    rax,QWORD PTR [rsp+0x28]
  40d9a2:	cmp    DWORD PTR [rax],0x0
  40d9a5:	movzx  eax,BYTE PTR [r15+0x3]
  40d9aa:	je     40da7f <main@@Base+0x913f>
  40d9b0:	cmp    al,0x21
  40d9b2:	jl     40d9bf <main@@Base+0x907f>
  40d9b4:	mov    rbx,r15
  40d9b7:	cmp    al,0x3a
  40d9b9:	jne    40ddcf <main@@Base+0x948f>
  40d9bf:	lea    rsi,[r15+0x3]
  40d9c3:	mov    rax,QWORD PTR [rsp+0x28]
  40d9c8:	mov    DWORD PTR [rax],0x0
  40d9ce:	jmp    40da8e <main@@Base+0x914e>
  40d9d3:	mov    rdi,QWORD PTR [rsp+0x10]
  40d9d8:	mov    rsi,r15
  40d9db:	jmp    40df87 <main@@Base+0x9647>
  40d9e0:	movabs rdx,0xffff000000000000
  40d9ea:	and    rax,rdx
  40d9ed:	movabs rdx,0x6964000000000000
  40d9f7:	cmp    rax,rdx
  40d9fa:	jne    40df7a <main@@Base+0x963a>
  40da00:	mov    rax,r15
  40da03:	cmp    rcx,0x3
  40da07:	jl     40df2b <main@@Base+0x95eb>
  40da0d:	mov    rax,QWORD PTR [rsp+0x28]
  40da12:	cmp    DWORD PTR [rax],0x0
  40da15:	movzx  ecx,BYTE PTR [r15+0x2]
  40da1a:	je     40dbc7 <main@@Base+0x9287>
  40da20:	cmp    cl,0x21
  40da23:	jl     40da31 <main@@Base+0x90f1>
  40da25:	mov    rax,r15
  40da28:	cmp    cl,0x3a
  40da2b:	jne    40df2b <main@@Base+0x95eb>
  40da31:	lea    rsi,[r15+0x2]
  40da35:	mov    rax,QWORD PTR [rsp+0x28]
  40da3a:	mov    DWORD PTR [rax],0x0
  40da40:	jmp    40dbd7 <main@@Base+0x9297>
  40da45:	mov    rbx,r15
  40da48:	cmp    al,0x22
  40da4a:	jne    40dc98 <main@@Base+0x9358>
  40da50:	lea    rsi,[r15+0x6]
  40da54:	mov    rax,QWORD PTR [rsp+0x8]
  40da59:	sub    rax,rsi
  40da5c:	cmp    rax,0x2
  40da60:	jl     40dac9 <main@@Base+0x9189>
  40da62:	cmp    BYTE PTR [rsi],0x20
  40da65:	jg     40dadb <main@@Base+0x919b>
  40da67:	jne    40dac9 <main@@Base+0x9189>
  40da69:	cmp    BYTE PTR [rsi+0x1],0x20
  40da6d:	jle    40dac9 <main@@Base+0x9189>
  40da6f:	add    rsi,0x1
  40da73:	cmp    rsi,QWORD PTR [rsp+0x8]
  40da78:	jne    40dae6 <main@@Base+0x91a6>
  40da7a:	jmp    40db95 <main@@Base+0x9255>
  40da7f:	mov    rbx,r15
  40da82:	cmp    al,0x22
  40da84:	jne    40ddcf <main@@Base+0x948f>
  40da8a:	lea    rsi,[r15+0x4]
  40da8e:	mov    rax,QWORD PTR [rsp+0x8]
  40da93:	sub    rax,rsi
  40da96:	cmp    rax,0x2
  40da9a:	jl     40db33 <main@@Base+0x91f3>
  40daa0:	cmp    BYTE PTR [rsi],0x20
  40daa3:	jg     40db45 <main@@Base+0x9205>
  40daa9:	jne    40db33 <main@@Base+0x91f3>
  40daaf:	cmp    BYTE PTR [rsi+0x1],0x20
  40dab3:	jle    40db33 <main@@Base+0x91f3>
  40dab5:	add    rsi,0x1
  40dab9:	cmp    rsi,QWORD PTR [rsp+0x8]
  40dabe:	jne    40db4c <main@@Base+0x920c>
  40dac4:	jmp    40dbae <main@@Base+0x926e>
  40dac9:	mov    rdi,QWORD PTR [rsp+0x10]
  40dace:	mov    rdx,QWORD PTR [rsp+0x8]
  40dad3:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40dad8:	mov    rsi,rax
  40dadb:	cmp    rsi,QWORD PTR [rsp+0x8]
  40dae0:	je     40db95 <main@@Base+0x9255>
  40dae6:	cmp    BYTE PTR [rsi],0x3a
  40dae9:	jne    40db95 <main@@Base+0x9255>
  40daef:	lea    rbx,[rsi+0x1]
  40daf3:	mov    rax,QWORD PTR [rsp+0x8]
  40daf8:	sub    rax,rbx
  40dafb:	cmp    rax,0x2
  40daff:	jl     40dc83 <main@@Base+0x9343>
  40db05:	cmp    BYTE PTR [rbx],0x20
  40db08:	jg     40dc98 <main@@Base+0x9358>
  40db0e:	jne    40dc83 <main@@Base+0x9343>
  40db14:	cmp    BYTE PTR [rsi+0x2],0x20
  40db18:	jle    40dc83 <main@@Base+0x9343>
  40db1e:	add    rsi,0x2
  40db22:	mov    rbx,rsi
  40db25:	cmp    r15,rbx
  40db28:	jne    40dca1 <main@@Base+0x9361>
  40db2e:	jmp    40df7a <main@@Base+0x963a>
  40db33:	mov    rdi,QWORD PTR [rsp+0x10]
  40db38:	mov    rdx,QWORD PTR [rsp+0x8]
  40db3d:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40db42:	mov    rsi,rax
  40db45:	cmp    rsi,QWORD PTR [rsp+0x8]
  40db4a:	je     40dbae <main@@Base+0x926e>
  40db4c:	cmp    BYTE PTR [rsi],0x3a
  40db4f:	jne    40dbae <main@@Base+0x926e>
  40db51:	lea    rbx,[rsi+0x1]
  40db55:	mov    rax,QWORD PTR [rsp+0x8]
  40db5a:	sub    rax,rbx
  40db5d:	cmp    rax,0x2
  40db61:	jl     40ddba <main@@Base+0x947a>
  40db67:	cmp    BYTE PTR [rbx],0x20
  40db6a:	jg     40ddcf <main@@Base+0x948f>
  40db70:	jne    40ddba <main@@Base+0x947a>
  40db76:	cmp    BYTE PTR [rsi+0x2],0x20
  40db7a:	jle    40ddba <main@@Base+0x947a>
  40db80:	add    rsi,0x2
  40db84:	mov    rbx,rsi
  40db87:	cmp    r15,rbx
  40db8a:	jne    40ddd8 <main@@Base+0x9498>
  40db90:	jmp    40df7a <main@@Base+0x963a>
  40db95:	mov    ecx,0x4
  40db9a:	mov    rdi,QWORD PTR [rsp+0x10]
  40db9f:	mov    rdx,QWORD PTR [rsp+0x8]
  40dba4:	call   41f940 <flatcc_json_parser_set_error@@Base>
  40dba9:	jmp    40dc95 <main@@Base+0x9355>
  40dbae:	mov    ecx,0x4
  40dbb3:	mov    rdi,QWORD PTR [rsp+0x10]
  40dbb8:	mov    rdx,QWORD PTR [rsp+0x8]
  40dbbd:	call   41f940 <flatcc_json_parser_set_error@@Base>
  40dbc2:	jmp    40ddcc <main@@Base+0x948c>
  40dbc7:	mov    rax,r15
  40dbca:	cmp    cl,0x22
  40dbcd:	jne    40df2b <main@@Base+0x95eb>
  40dbd3:	lea    rsi,[r15+0x3]
  40dbd7:	mov    rax,QWORD PTR [rsp+0x8]
  40dbdc:	sub    rax,rsi
  40dbdf:	cmp    rax,0x2
  40dbe3:	jl     40dbff <main@@Base+0x92bf>
  40dbe5:	cmp    BYTE PTR [rsi],0x20
  40dbe8:	jg     40dc11 <main@@Base+0x92d1>
  40dbea:	jne    40dbff <main@@Base+0x92bf>
  40dbec:	cmp    BYTE PTR [rsi+0x1],0x20
  40dbf0:	jle    40dbff <main@@Base+0x92bf>
  40dbf2:	add    rsi,0x1
  40dbf6:	cmp    rsi,QWORD PTR [rsp+0x8]
  40dbfb:	jne    40dc18 <main@@Base+0x92d8>
  40dbfd:	jmp    40dc61 <main@@Base+0x9321>
  40dbff:	mov    rdi,QWORD PTR [rsp+0x10]
  40dc04:	mov    rdx,QWORD PTR [rsp+0x8]
  40dc09:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40dc0e:	mov    rsi,rax
  40dc11:	cmp    rsi,QWORD PTR [rsp+0x8]
  40dc16:	je     40dc61 <main@@Base+0x9321>
  40dc18:	cmp    BYTE PTR [rsi],0x3a
  40dc1b:	jne    40dc61 <main@@Base+0x9321>
  40dc1d:	lea    rax,[rsi+0x1]
  40dc21:	mov    rcx,QWORD PTR [rsp+0x8]
  40dc26:	sub    rcx,rax
  40dc29:	cmp    rcx,0x2
  40dc2d:	jl     40df19 <main@@Base+0x95d9>
  40dc33:	cmp    BYTE PTR [rax],0x20
  40dc36:	jg     40df2b <main@@Base+0x95eb>
  40dc3c:	jne    40df19 <main@@Base+0x95d9>
  40dc42:	cmp    BYTE PTR [rsi+0x2],0x20
  40dc46:	jle    40df19 <main@@Base+0x95d9>
  40dc4c:	add    rsi,0x2
  40dc50:	mov    rax,rsi
  40dc53:	cmp    r15,rax
  40dc56:	jne    40df30 <main@@Base+0x95f0>
  40dc5c:	jmp    40df7a <main@@Base+0x963a>
  40dc61:	mov    ecx,0x4
  40dc66:	mov    rdi,QWORD PTR [rsp+0x10]
  40dc6b:	mov    rdx,QWORD PTR [rsp+0x8]
  40dc70:	call   41f940 <flatcc_json_parser_set_error@@Base>
  40dc75:	cmp    r15,rax
  40dc78:	jne    40df30 <main@@Base+0x95f0>
  40dc7e:	jmp    40df7a <main@@Base+0x963a>
  40dc83:	mov    rdi,QWORD PTR [rsp+0x10]
  40dc88:	mov    rsi,rbx
  40dc8b:	mov    rdx,QWORD PTR [rsp+0x8]
  40dc90:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40dc95:	mov    rbx,rax
  40dc98:	cmp    r15,rbx
  40dc9b:	je     40df7a <main@@Base+0x963a>
  40dca1:	mov    QWORD PTR [rsp+0x30],0x0
  40dcaa:	mov    DWORD PTR [rsp+0x40],0x0
  40dcb2:	mov    WORD PTR [rsp+0x1c],0x0
  40dcb9:	cmp    rbx,QWORD PTR [rsp+0x8]
  40dcbe:	je     40dcf2 <main@@Base+0x93b2>
  40dcc0:	mov    rdi,QWORD PTR [rsp+0x10]
  40dcc5:	mov    rsi,rbx
  40dcc8:	mov    rdx,QWORD PTR [rsp+0x8]
  40dccd:	lea    rcx,[rsp+0x40]
  40dcd2:	lea    r8,[rsp+0x30]
  40dcd7:	call   4215e0 <flatcc_json_parser_integer@@Base>
  40dcdc:	cmp    rax,rbx
  40dcdf:	je     40dd00 <main@@Base+0x93c0>
  40dce1:	mov    r12,rax
  40dce4:	cmp    DWORD PTR [rsp+0x40],0x0
  40dce9:	je     40dd0c <main@@Base+0x93cc>
  40dceb:	mov    ecx,0x8
  40dcf0:	jmp    40dd23 <main@@Base+0x93e3>
  40dcf2:	xor    ebp,ebp
  40dcf4:	mov    r12,QWORD PTR [rsp+0x8]
  40dcf9:	cmp    rbx,r12
  40dcfc:	jne    40dd79 <main@@Base+0x9439>
  40dcfe:	jmp    40dd3f <main@@Base+0x93ff>
  40dd00:	xor    ebp,ebp
  40dd02:	mov    r12,rbx
  40dd05:	cmp    rbx,r12
  40dd08:	jne    40dd79 <main@@Base+0x9439>
  40dd0a:	jmp    40dd3f <main@@Base+0x93ff>
  40dd0c:	mov    rbp,QWORD PTR [rsp+0x30]
  40dd11:	cmp    rbp,0x10000
  40dd18:	jb     40df06 <main@@Base+0x95c6>
  40dd1e:	mov    ecx,0x7
  40dd23:	mov    rdi,QWORD PTR [rsp+0x10]
  40dd28:	mov    rsi,r12
  40dd2b:	mov    rdx,QWORD PTR [rsp+0x8]
  40dd30:	call   41f940 <flatcc_json_parser_set_error@@Base>
  40dd35:	mov    r12,rax
  40dd38:	xor    ebp,ebp
  40dd3a:	cmp    rbx,r12
  40dd3d:	jne    40dd79 <main@@Base+0x9439>
  40dd3f:	mov    rdi,QWORD PTR [rsp+0x10]
  40dd44:	mov    rsi,rbx
  40dd47:	mov    rdx,QWORD PTR [rsp+0x8]
  40dd4c:	lea    rcx,[rip+0x1da4d]        # 42b7a0 <filename@@Base+0x6d0>
  40dd53:	lea    r8,[rsp+0x1c]
  40dd58:	call   41a0b0 <main@@Base+0x15770>
  40dd5d:	mov    r12,rax
  40dd60:	cmp    rax,rbx
  40dd63:	je     40c819 <main@@Base+0x7ed9>
  40dd69:	cmp    r12,QWORD PTR [rsp+0x8]
  40dd6e:	je     40c819 <main@@Base+0x7ed9>
  40dd74:	movzx  ebp,WORD PTR [rsp+0x1c]
  40dd79:	test   bp,bp
  40dd7c:	jne    40dd8d <main@@Base+0x944d>
  40dd7e:	mov    rax,QWORD PTR [rsp+0x10]
  40dd83:	test   BYTE PTR [rax+0x10],0x2
  40dd87:	je     40df73 <main@@Base+0x9633>
  40dd8d:	mov    rax,QWORD PTR [rsp+0x10]
  40dd92:	mov    rdi,QWORD PTR [rax]
  40dd95:	mov    esi,0x2
  40dd9a:	mov    edx,0x2
  40dd9f:	mov    ecx,0x2
  40dda4:	call   41d880 <flatcc_builder_table_add@@Base>
  40dda9:	test   rax,rax
  40ddac:	je     40c819 <main@@Base+0x7ed9>
  40ddb2:	mov    WORD PTR [rax],bp
  40ddb5:	jmp    40df73 <main@@Base+0x9633>
  40ddba:	mov    rdi,QWORD PTR [rsp+0x10]
  40ddbf:	mov    rsi,rbx
  40ddc2:	mov    rdx,QWORD PTR [rsp+0x8]
  40ddc7:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40ddcc:	mov    rbx,rax
  40ddcf:	cmp    r15,rbx
  40ddd2:	je     40df7a <main@@Base+0x963a>
  40ddd8:	mov    QWORD PTR [rsp+0x30],0x0
  40dde1:	mov    DWORD PTR [rsp+0x1c],0x0
  40dde9:	mov    QWORD PTR [rsp+0x40],0x0
  40ddf2:	cmp    rbx,QWORD PTR [rsp+0x8]
  40ddf7:	je     40de3f <main@@Base+0x94ff>
  40ddf9:	mov    rdi,QWORD PTR [rsp+0x10]
  40ddfe:	mov    rsi,rbx
  40de01:	mov    rdx,QWORD PTR [rsp+0x8]
  40de06:	lea    rcx,[rsp+0x1c]
  40de0b:	lea    r8,[rsp+0x30]
  40de10:	call   4215e0 <flatcc_json_parser_integer@@Base>
  40de15:	cmp    rax,rbx
  40de18:	je     40de4d <main@@Base+0x950d>
  40de1a:	mov    r12,rax
  40de1d:	mov    rbp,QWORD PTR [rsp+0x30]
  40de22:	cmp    DWORD PTR [rsp+0x1c],0x0
  40de27:	je     40de59 <main@@Base+0x9519>
  40de29:	movabs rax,0x8000000000000000
  40de33:	cmp    rbp,rax
  40de36:	jbe    40de81 <main@@Base+0x9541>
  40de38:	mov    ecx,0x8
  40de3d:	jmp    40de63 <main@@Base+0x9523>
  40de3f:	xor    ebp,ebp
  40de41:	mov    r12,QWORD PTR [rsp+0x8]
  40de46:	cmp    rbx,r12
  40de49:	jne    40dec8 <main@@Base+0x9588>
  40de4b:	jmp    40de8e <main@@Base+0x954e>
  40de4d:	xor    ebp,ebp
  40de4f:	mov    r12,rbx
  40de52:	cmp    rbx,r12
  40de55:	jne    40dec8 <main@@Base+0x9588>
  40de57:	jmp    40de8e <main@@Base+0x954e>
  40de59:	test   rbp,rbp
  40de5c:	jns    40de84 <main@@Base+0x9544>
  40de5e:	mov    ecx,0x7
  40de63:	mov    rdi,QWORD PTR [rsp+0x10]
  40de68:	mov    rsi,r12
  40de6b:	mov    rdx,QWORD PTR [rsp+0x8]
  40de70:	call   41f940 <flatcc_json_parser_set_error@@Base>
  40de75:	mov    r12,rax
  40de78:	xor    ebp,ebp
  40de7a:	cmp    rbx,r12
  40de7d:	jne    40dec8 <main@@Base+0x9588>
  40de7f:	jmp    40de8e <main@@Base+0x954e>
  40de81:	neg    rbp
  40de84:	mov    QWORD PTR [rsp+0x40],rbp
  40de89:	cmp    rbx,r12
  40de8c:	jne    40dec8 <main@@Base+0x9588>
  40de8e:	mov    rdi,QWORD PTR [rsp+0x10]
  40de93:	mov    rsi,rbx
  40de96:	mov    rdx,QWORD PTR [rsp+0x8]
  40de9b:	lea    rcx,[rip+0x1d91e]        # 42b7c0 <filename@@Base+0x6f0>
  40dea2:	lea    r8,[rsp+0x40]
  40dea7:	call   414620 <main@@Base+0xfce0>
  40deac:	mov    r12,rax
  40deaf:	cmp    rax,rbx
  40deb2:	je     40c819 <main@@Base+0x7ed9>
  40deb8:	cmp    r12,QWORD PTR [rsp+0x8]
  40debd:	je     40c819 <main@@Base+0x7ed9>
  40dec3:	mov    rbp,QWORD PTR [rsp+0x40]
  40dec8:	test   rbp,rbp
  40decb:	jne    40dedc <main@@Base+0x959c>
  40decd:	mov    rax,QWORD PTR [rsp+0x10]
  40ded2:	test   BYTE PTR [rax+0x10],0x2
  40ded6:	je     40df73 <main@@Base+0x9633>
  40dedc:	mov    rax,QWORD PTR [rsp+0x10]
  40dee1:	mov    rdi,QWORD PTR [rax]
  40dee4:	mov    esi,0x1
  40dee9:	mov    edx,0x8
  40deee:	mov    ecx,0x8
  40def3:	call   41d880 <flatcc_builder_table_add@@Base>
  40def8:	test   rax,rax
  40defb:	je     40c819 <main@@Base+0x7ed9>
  40df01:	mov    QWORD PTR [rax],rbp
  40df04:	jmp    40df73 <main@@Base+0x9633>
  40df06:	mov    WORD PTR [rsp+0x1c],bp
  40df0b:	cmp    rbx,r12
  40df0e:	jne    40dd79 <main@@Base+0x9439>
  40df14:	jmp    40dd3f <main@@Base+0x93ff>
  40df19:	mov    rdi,QWORD PTR [rsp+0x10]
  40df1e:	mov    rsi,rax
  40df21:	mov    rdx,QWORD PTR [rsp+0x8]
  40df26:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40df2b:	cmp    r15,rax
  40df2e:	je     40df7a <main@@Base+0x963a>
  40df30:	mov    rdi,QWORD PTR [rsp+0x10]
  40df35:	mov    rsi,rax
  40df38:	mov    rdx,QWORD PTR [rsp+0x8]
  40df3d:	lea    rcx,[rsp+0x54]
  40df42:	call   421ab0 <flatcc_json_parser_build_string@@Base>
  40df47:	mov    r12,rax
  40df4a:	cmp    DWORD PTR [rsp+0x54],0x0
  40df4f:	je     40c819 <main@@Base+0x7ed9>
  40df55:	mov    rax,QWORD PTR [rsp+0x10]
  40df5a:	mov    rdi,QWORD PTR [rax]
  40df5d:	xor    esi,esi
  40df5f:	call   41d720 <flatcc_builder_table_add_offset@@Base>
  40df64:	test   rax,rax
  40df67:	je     40c819 <main@@Base+0x7ed9>
  40df6d:	mov    ecx,DWORD PTR [rsp+0x54]
  40df71:	mov    DWORD PTR [rax],ecx
  40df73:	mov    r13,QWORD PTR [rsp+0x8]
  40df78:	jmp    40df92 <main@@Base+0x9652>
  40df7a:	mov    rdi,QWORD PTR [rsp+0x10]
  40df7f:	mov    rsi,r15
  40df82:	mov    r13,QWORD PTR [rsp+0x8]
  40df87:	mov    rdx,r13
  40df8a:	call   41ff40 <flatcc_json_parser_unmatched_symbol@@Base>
  40df8f:	mov    r12,rax
  40df92:	mov    rax,r13
  40df95:	sub    rax,r12
  40df98:	cmp    rax,0x2
  40df9c:	jl     40dfc2 <main@@Base+0x9682>
  40df9e:	cmp    BYTE PTR [r12],0x20
  40dfa3:	jg     40dfb3 <main@@Base+0x9673>
  40dfa5:	jne    40dfc2 <main@@Base+0x9682>
  40dfa7:	cmp    BYTE PTR [r12+0x1],0x20
  40dfad:	jle    40dfc2 <main@@Base+0x9682>
  40dfaf:	add    r12,0x1
  40dfb3:	mov    r15,QWORD PTR [rsp+0x10]
  40dfb8:	cmp    r12,r13
  40dfbb:	jne    40dfe1 <main@@Base+0x96a1>
  40dfbd:	jmp    40e57d <main@@Base+0x9c3d>
  40dfc2:	mov    r15,QWORD PTR [rsp+0x10]
  40dfc7:	mov    rdi,r15
  40dfca:	mov    rsi,r12
  40dfcd:	mov    rdx,r13
  40dfd0:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40dfd5:	mov    r12,rax
  40dfd8:	cmp    r12,r13
  40dfdb:	je     40e57d <main@@Base+0x9c3d>
  40dfe1:	movzx  eax,BYTE PTR [r12]
  40dfe6:	cmp    al,0x2c
  40dfe8:	jne    40e629 <main@@Base+0x9ce9>
  40dfee:	lea    rsi,[r12+0x1]
  40dff3:	mov    rax,r13
  40dff6:	sub    rax,rsi
  40dff9:	cmp    rax,0x2
  40dffd:	jl     40e01f <main@@Base+0x96df>
  40dfff:	cmp    BYTE PTR [rsi],0x20
  40e002:	jg     40e02d <main@@Base+0x96ed>
  40e004:	jne    40e01f <main@@Base+0x96df>
  40e006:	cmp    BYTE PTR [r12+0x2],0x20
  40e00c:	jle    40e01f <main@@Base+0x96df>
  40e00e:	add    r12,0x2
  40e012:	mov    rsi,r12
  40e015:	cmp    rsi,r13
  40e018:	jne    40e036 <main@@Base+0x96f6>
  40e01a:	jmp    40e685 <main@@Base+0x9d45>
  40e01f:	mov    rdi,r15
  40e022:	mov    rdx,r13
  40e025:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40e02a:	mov    rsi,rax
  40e02d:	cmp    rsi,r13
  40e030:	je     40e685 <main@@Base+0x9d45>
  40e036:	cmp    BYTE PTR [rsi],0x7d
  40e039:	jne    40d81b <main@@Base+0x8edb>
  40e03f:	lea    r14,[rsi+0x1]
  40e043:	sub    r13,r14
  40e046:	cmp    r13,0x2
  40e04a:	jl     40e984 <main@@Base+0xa044>
  40e050:	cmp    BYTE PTR [r14],0x20
  40e054:	jg     40e652 <main@@Base+0x9d12>
  40e05a:	jne    40e984 <main@@Base+0xa044>
  40e060:	cmp    BYTE PTR [rsi+0x2],0x20
  40e064:	jle    40e984 <main@@Base+0xa044>
  40e06a:	add    rsi,0x2
  40e06e:	mov    r14,rsi
  40e071:	jmp    40e652 <main@@Base+0x9d12>
  40e076:	lea    r14,[r12+0x1]
  40e07b:	mov    rax,QWORD PTR [rsp+0x8]
  40e080:	sub    rax,r14
  40e083:	cmp    rax,0x2
  40e087:	jl     40e0a9 <main@@Base+0x9769>
  40e089:	cmp    BYTE PTR [r14],0x20
  40e08d:	jg     40e556 <main@@Base+0x9c16>
  40e093:	jne    40e0a9 <main@@Base+0x9769>
  40e095:	cmp    BYTE PTR [r12+0x2],0x20
  40e09b:	jle    40e0a9 <main@@Base+0x9769>
  40e09d:	add    r12,0x2
  40e0a1:	mov    r14,r12
  40e0a4:	jmp    40e556 <main@@Base+0x9c16>
  40e0a9:	mov    rdi,QWORD PTR [rsp+0x10]
  40e0ae:	mov    rsi,r14
  40e0b1:	mov    rdx,QWORD PTR [rsp+0x8]
  40e0b6:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40e0bb:	jmp    40e553 <main@@Base+0x9c13>
  40e0c0:	mov    r15,QWORD PTR [rsp+0x10]
  40e0c5:	mov    rdi,r15
  40e0c8:	mov    rsi,r14
  40e0cb:	mov    r13,QWORD PTR [rsp+0x8]
  40e0d0:	mov    rdx,r13
  40e0d3:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40e0d8:	jmp    40c3ae <main@@Base+0x7a6e>
  40e0dd:	mov    r15,QWORD PTR [rsp+0x10]
  40e0e2:	mov    rdi,r15
  40e0e5:	mov    rsi,r14
  40e0e8:	mov    r13,QWORD PTR [rsp+0x8]
  40e0ed:	mov    rdx,r13
  40e0f0:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40e0f5:	mov    r14,rax
  40e0f8:	jmp    40e7c6 <main@@Base+0x9e86>
  40e0fd:	mov    ecx,0x9
  40e102:	mov    r15,QWORD PTR [rsp+0x10]
  40e107:	mov    rdi,r15
  40e10a:	mov    rsi,rdx
  40e10d:	mov    r13,QWORD PTR [rsp+0x8]
  40e112:	jmp    40a126 <main@@Base+0x57e6>
  40e117:	jne    40e12d <main@@Base+0x97ed>
  40e119:	cmp    BYTE PTR [r12+0x2],0x20
  40e11f:	jle    40e12d <main@@Base+0x97ed>
  40e121:	add    r12,0x2
  40e125:	mov    r14,r12
  40e128:	jmp    40be28 <main@@Base+0x74e8>
  40e12d:	mov    r15,QWORD PTR [rsp+0x10]
  40e132:	mov    rdi,r15
  40e135:	mov    rsi,r14
  40e138:	mov    r13,QWORD PTR [rsp+0x8]
  40e13d:	mov    rdx,r13
  40e140:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40e145:	jmp    40850f <main@@Base+0x3bcf>
  40e14a:	mov    r14,r13
  40e14d:	jmp    40a696 <main@@Base+0x5d56>
  40e152:	cmp    al,0x7d
  40e154:	jne    40e710 <main@@Base+0x9dd0>
  40e15a:	lea    r14,[r12+0x1]
  40e15f:	mov    rax,QWORD PTR [rsp+0x8]
  40e164:	sub    rax,r14
  40e167:	cmp    rax,0x2
  40e16b:	jl     40e91e <main@@Base+0x9fde>
  40e171:	cmp    BYTE PTR [r14],0x20
  40e175:	jle    40e908 <main@@Base+0x9fc8>
  40e17b:	mov    r15,QWORD PTR [rsp+0x10]
  40e180:	mov    r13,QWORD PTR [rsp+0x8]
  40e185:	jmp    40a696 <main@@Base+0x5d56>
  40e18a:	mov    r12,rax
  40e18d:	mov    BYTE PTR [rsp+0x1c],0x0
  40e192:	mov    rax,QWORD PTR [rsp+0x10]
  40e197:	mov    rdi,QWORD PTR [rax]
  40e19a:	mov    esi,0x1
  40e19f:	call   41b720 <flatcc_builder_extend_vector@@Base>
  40e1a4:	test   rax,rax
  40e1a7:	je     40eabf <main@@Base+0xa17f>
  40e1ad:	mov    rbx,rax
  40e1b0:	mov    QWORD PTR [rsp+0x30],0x0
  40e1b9:	mov    DWORD PTR [rsp+0x40],0x0
  40e1c1:	mov    BYTE PTR [rsp+0x1c],0x0
  40e1c6:	mov    rdx,QWORD PTR [rsp+0x8]
  40e1cb:	cmp    r12,rdx
  40e1ce:	je     40e1fa <main@@Base+0x98ba>
  40e1d0:	mov    rdi,QWORD PTR [rsp+0x10]
  40e1d5:	mov    rsi,r12
  40e1d8:	lea    rcx,[rsp+0x40]
  40e1dd:	lea    r8,[rsp+0x30]
  40e1e2:	call   4215e0 <flatcc_json_parser_integer@@Base>
  40e1e7:	cmp    rax,r12
  40e1ea:	je     40e206 <main@@Base+0x98c6>
  40e1ec:	cmp    DWORD PTR [rsp+0x40],0x0
  40e1f1:	je     40e212 <main@@Base+0x98d2>
  40e1f3:	mov    ecx,0x8
  40e1f8:	jmp    40e229 <main@@Base+0x98e9>
  40e1fa:	xor    ecx,ecx
  40e1fc:	mov    rax,rdx
  40e1ff:	cmp    r12,rax
  40e202:	jne    40e279 <main@@Base+0x9939>
  40e204:	jmp    40e242 <main@@Base+0x9902>
  40e206:	xor    ecx,ecx
  40e208:	mov    rax,r12
  40e20b:	cmp    r12,rax
  40e20e:	jne    40e279 <main@@Base+0x9939>
  40e210:	jmp    40e242 <main@@Base+0x9902>
  40e212:	mov    rcx,QWORD PTR [rsp+0x30]
  40e217:	cmp    rcx,0x100
  40e21e:	jb     40e368 <main@@Base+0x9a28>
  40e224:	mov    ecx,0x7
  40e229:	mov    rdi,QWORD PTR [rsp+0x10]
  40e22e:	mov    rsi,rax
  40e231:	mov    rdx,QWORD PTR [rsp+0x8]
  40e236:	call   41f940 <flatcc_json_parser_set_error@@Base>
  40e23b:	xor    ecx,ecx
  40e23d:	cmp    r12,rax
  40e240:	jne    40e279 <main@@Base+0x9939>
  40e242:	mov    rdi,QWORD PTR [rsp+0x10]
  40e247:	mov    rsi,r12
  40e24a:	mov    rdx,QWORD PTR [rsp+0x8]
  40e24f:	lea    rcx,[rip+0x1d0ea]        # 42b340 <filename@@Base+0x270>
  40e256:	lea    r8,[rsp+0x1c]
  40e25b:	call   410220 <main@@Base+0xb8e0>
  40e260:	cmp    rax,r12
  40e263:	je     40eaf8 <main@@Base+0xa1b8>
  40e269:	cmp    rax,QWORD PTR [rsp+0x8]
  40e26e:	je     40eaf8 <main@@Base+0xa1b8>
  40e274:	movzx  ecx,BYTE PTR [rsp+0x1c]
  40e279:	mov    BYTE PTR [rbx],cl
  40e27b:	mov    r14,QWORD PTR [rsp+0x8]
  40e280:	mov    rcx,r14
  40e283:	sub    rcx,rax
  40e286:	cmp    rcx,0x2
  40e28a:	jl     40e2bb <main@@Base+0x997b>
  40e28c:	cmp    BYTE PTR [rax],0x20
  40e28f:	jle    40e2a0 <main@@Base+0x9960>
  40e291:	mov    r14,QWORD PTR [rsp+0x8]
  40e296:	cmp    rax,r14
  40e299:	jne    40e2d4 <main@@Base+0x9994>
  40e29b:	jmp    40e868 <main@@Base+0x9f28>
  40e2a0:	mov    r14,QWORD PTR [rsp+0x8]
  40e2a5:	jne    40e2bb <main@@Base+0x997b>
  40e2a7:	cmp    BYTE PTR [rax+0x1],0x20
  40e2ab:	jle    40e2bb <main@@Base+0x997b>
  40e2ad:	add    rax,0x1
  40e2b1:	cmp    rax,r14
  40e2b4:	jne    40e2d4 <main@@Base+0x9994>
  40e2b6:	jmp    40e868 <main@@Base+0x9f28>
  40e2bb:	mov    rdi,QWORD PTR [rsp+0x10]
  40e2c0:	mov    rsi,rax
  40e2c3:	mov    rdx,r14
  40e2c6:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40e2cb:	cmp    rax,r14
  40e2ce:	je     40e868 <main@@Base+0x9f28>
  40e2d4:	movzx  ecx,BYTE PTR [rax]
  40e2d7:	cmp    cl,0x2c
  40e2da:	jne    40e787 <main@@Base+0x9e47>
  40e2e0:	lea    r12,[rax+0x1]
  40e2e4:	mov    rcx,r14
  40e2e7:	sub    rcx,r12
  40e2ea:	cmp    rcx,0x2
  40e2ee:	jl     40e319 <main@@Base+0x99d9>
  40e2f0:	cmp    BYTE PTR [r12],0x20
  40e2f5:	jle    40e306 <main@@Base+0x99c6>
  40e2f7:	mov    r14,QWORD PTR [rsp+0x8]
  40e2fc:	cmp    r12,r14
  40e2ff:	jne    40e335 <main@@Base+0x99f5>
  40e301:	jmp    40e810 <main@@Base+0x9ed0>
  40e306:	mov    r14,QWORD PTR [rsp+0x8]
  40e30b:	jne    40e319 <main@@Base+0x99d9>
  40e30d:	cmp    BYTE PTR [rax+0x2],0x20
  40e311:	jle    40e319 <main@@Base+0x99d9>
  40e313:	add    rax,0x2
  40e317:	jmp    40e329 <main@@Base+0x99e9>
  40e319:	mov    rdi,QWORD PTR [rsp+0x10]
  40e31e:	mov    rsi,r12
  40e321:	mov    rdx,r14
  40e324:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40e329:	mov    r12,rax
  40e32c:	cmp    r12,r14
  40e32f:	je     40e810 <main@@Base+0x9ed0>
  40e335:	cmp    BYTE PTR [r12],0x5d
  40e33a:	je     40e827 <main@@Base+0x9ee7>
  40e340:	mov    BYTE PTR [rsp+0x1c],0x0
  40e345:	mov    rax,QWORD PTR [rsp+0x10]
  40e34a:	mov    rdi,QWORD PTR [rax]
  40e34d:	mov    esi,0x1
  40e352:	call   41b720 <flatcc_builder_extend_vector@@Base>
  40e357:	mov    rbx,rax
  40e35a:	test   rax,rax
  40e35d:	jne    40e1b0 <main@@Base+0x9870>
  40e363:	jmp    40eabf <main@@Base+0xa17f>
  40e368:	mov    BYTE PTR [rsp+0x1c],cl
  40e36c:	cmp    r12,rax
  40e36f:	jne    40e279 <main@@Base+0x9939>
  40e375:	jmp    40e242 <main@@Base+0x9902>
  40e37a:	mov    ecx,0xa
  40e37f:	mov    rdi,r15
  40e382:	mov    rsi,r13
  40e385:	jmp    40a68b <main@@Base+0x5d4b>
  40e38a:	mov    r14,r13
  40e38d:	jmp    40afd8 <main@@Base+0x6698>
  40e392:	cmp    al,0x5d
  40e394:	jne    40e72a <main@@Base+0x9dea>
  40e39a:	lea    r14,[r12+0x1]
  40e39f:	mov    rax,QWORD PTR [rsp+0x8]
  40e3a4:	sub    rax,r14
  40e3a7:	cmp    rax,0x2
  40e3ab:	jl     40e951 <main@@Base+0xa011>
  40e3b1:	cmp    BYTE PTR [r14],0x20
  40e3b5:	jle    40e93b <main@@Base+0x9ffb>
  40e3bb:	mov    r15,QWORD PTR [rsp+0x10]
  40e3c0:	mov    r13,QWORD PTR [rsp+0x8]
  40e3c5:	jmp    40afd8 <main@@Base+0x6698>
  40e3ca:	mov    ecx,0x9
  40e3cf:	mov    r15,QWORD PTR [rsp+0x10]
  40e3d4:	mov    rdi,r15
  40e3d7:	mov    rsi,r12
  40e3da:	mov    r13,QWORD PTR [rsp+0x8]
  40e3df:	jmp    40a053 <main@@Base+0x5713>
  40e3e4:	mov    ecx,0x9
  40e3e9:	mov    r15,QWORD PTR [rsp+0x10]
  40e3ee:	mov    rdi,r15
  40e3f1:	mov    rsi,r12
  40e3f4:	mov    r13,QWORD PTR [rsp+0x8]
  40e3f9:	jmp    40a1ea <main@@Base+0x58aa>
  40e3fe:	mov    ecx,0x9
  40e403:	mov    rdi,r15
  40e406:	mov    rsi,r13
  40e409:	jmp    40afcd <main@@Base+0x668d>
  40e40e:	mov    r14,r13
  40e411:	jmp    40adb9 <main@@Base+0x6479>
  40e416:	mov    DWORD PTR [rsp+0x1c],eax
  40e41a:	mov    r12d,eax
  40e41d:	mov    r15,QWORD PTR [rsp+0x10]
  40e422:	cmp    rbx,r14
  40e425:	jne    40e464 <main@@Base+0x9b24>
  40e427:	mov    rdi,r15
  40e42a:	mov    rsi,rbx
  40e42d:	mov    rdx,QWORD PTR [rsp+0x8]
  40e432:	lea    rcx,[rip+0x1cea7]        # 42b2e0 <filename@@Base+0x210>
  40e439:	lea    r8,[rsp+0x1c]
  40e43e:	call   414830 <main@@Base+0xfef0>
  40e443:	mov    r14,rax
  40e446:	cmp    rax,rbx
  40e449:	je     40eabc <main@@Base+0xa17c>
  40e44f:	cmp    r14,QWORD PTR [rsp+0x8]
  40e454:	je     40eabc <main@@Base+0xa17c>
  40e45a:	mov    r12d,DWORD PTR [rsp+0x1c]
  40e45f:	mov    r15,QWORD PTR [rsp+0x10]
  40e464:	test   r12d,r12d
  40e467:	jne    40e470 <main@@Base+0x9b30>
  40e469:	test   BYTE PTR [r15+0x10],0x2
  40e46e:	je     40e493 <main@@Base+0x9b53>
  40e470:	mov    rdi,QWORD PTR [r15]
  40e473:	mov    esi,0x15
  40e478:	mov    edx,0x4
  40e47d:	mov    ecx,0x4
  40e482:	call   41d880 <flatcc_builder_table_add@@Base>
  40e487:	test   rax,rax
  40e48a:	je     40eabc <main@@Base+0xa17c>
  40e490:	mov    DWORD PTR [rax],r12d
  40e493:	mov    rbp,QWORD PTR [rsp+0x20]
  40e498:	mov    r13,QWORD PTR [rsp+0x8]
  40e49d:	jmp    40c5ee <main@@Base+0x7cae>
  40e4a2:	cmp    cl,0x7d
  40e4a5:	jne    40e744 <main@@Base+0x9e04>
  40e4ab:	lea    r14,[rax+0x1]
  40e4af:	mov    rcx,QWORD PTR [rsp+0x8]
  40e4b4:	sub    rcx,r14
  40e4b7:	cmp    rcx,0x2
  40e4bb:	jl     40e4e1 <main@@Base+0x9ba1>
  40e4bd:	cmp    BYTE PTR [r14],0x20
  40e4c1:	jg     40e4d2 <main@@Base+0x9b92>
  40e4c3:	jne    40e4e1 <main@@Base+0x9ba1>
  40e4c5:	cmp    BYTE PTR [rax+0x2],0x20
  40e4c9:	jle    40e4e1 <main@@Base+0x9ba1>
  40e4cb:	add    rax,0x2
  40e4cf:	mov    r14,rax
  40e4d2:	mov    r15,QWORD PTR [rsp+0x10]
  40e4d7:	mov    r13,QWORD PTR [rsp+0x8]
  40e4dc:	jmp    40adb9 <main@@Base+0x6479>
  40e4e1:	mov    r15,QWORD PTR [rsp+0x10]
  40e4e6:	mov    rdi,r15
  40e4e9:	mov    rsi,r14
  40e4ec:	mov    r13,QWORD PTR [rsp+0x8]
  40e4f1:	mov    rdx,r13
  40e4f4:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40e4f9:	jmp    40adb6 <main@@Base+0x6476>
  40e4fe:	cmp    cl,0x5d
  40e501:	jne    40e75e <main@@Base+0x9e1e>
  40e507:	lea    r14,[rax+0x1]
  40e50b:	mov    rcx,QWORD PTR [rsp+0x8]
  40e510:	sub    rcx,r14
  40e513:	cmp    rcx,0x2
  40e517:	jl     40e612 <main@@Base+0x9cd2>
  40e51d:	cmp    BYTE PTR [r14],0x20
  40e521:	jg     40e778 <main@@Base+0x9e38>
  40e527:	jne    40e612 <main@@Base+0x9cd2>
  40e52d:	cmp    BYTE PTR [rax+0x2],0x20
  40e531:	jg     40c43d <main@@Base+0x7afd>
  40e537:	jmp    40e612 <main@@Base+0x9cd2>
  40e53c:	mov    ecx,0x9
  40e541:	mov    rdi,QWORD PTR [rsp+0x10]
  40e546:	mov    rsi,rax
  40e549:	mov    rdx,QWORD PTR [rsp+0x8]
  40e54e:	call   41f940 <flatcc_json_parser_set_error@@Base>
  40e553:	mov    r14,rax
  40e556:	mov    r15,QWORD PTR [rsp+0x10]
  40e55b:	mov    r13,QWORD PTR [rsp+0x8]
  40e560:	jmp    40a650 <main@@Base+0x5d10>
  40e565:	mov    r14,rbx
  40e568:	jmp    40e7bc <main@@Base+0x9e7c>
  40e56d:	mov    ecx,0xa
  40e572:	mov    rdi,r15
  40e575:	mov    rsi,r13
  40e578:	jmp    40adae <main@@Base+0x646e>
  40e57d:	mov    r14,r13
  40e580:	jmp    40ab29 <main@@Base+0x61e9>
  40e585:	mov    ecx,0x9
  40e58a:	mov    rdi,r15
  40e58d:	mov    rsi,r14
  40e590:	mov    rdx,r14
  40e593:	jmp    40e770 <main@@Base+0x9e30>
  40e598:	cmp    al,0x5d
  40e59a:	jne    40e7a2 <main@@Base+0x9e62>
  40e5a0:	lea    r14,[r12+0x1]
  40e5a5:	mov    rax,QWORD PTR [rsp+0x8]
  40e5aa:	sub    rax,r14
  40e5ad:	cmp    rax,0x2
  40e5b1:	jl     40e6c6 <main@@Base+0x9d86>
  40e5b7:	cmp    BYTE PTR [r14],0x20
  40e5bb:	jg     40e7bc <main@@Base+0x9e7c>
  40e5c1:	jne    40e6c6 <main@@Base+0x9d86>
  40e5c7:	cmp    BYTE PTR [r12+0x2],0x20
  40e5cd:	jle    40e6c6 <main@@Base+0x9d86>
  40e5d3:	add    r12,0x2
  40e5d7:	mov    r14,r12
  40e5da:	jmp    40e7bc <main@@Base+0x9e7c>
  40e5df:	lea    r14,[r12+0x1]
  40e5e4:	mov    rax,QWORD PTR [rsp+0x8]
  40e5e9:	sub    rax,r14
  40e5ec:	cmp    rax,0x2
  40e5f0:	jl     40e612 <main@@Base+0x9cd2>
  40e5f2:	cmp    BYTE PTR [r14],0x20
  40e5f6:	jg     40e778 <main@@Base+0x9e38>
  40e5fc:	jne    40e612 <main@@Base+0x9cd2>
  40e5fe:	cmp    BYTE PTR [r12+0x2],0x20
  40e604:	jle    40e612 <main@@Base+0x9cd2>
  40e606:	add    r12,0x2
  40e60a:	mov    r14,r12
  40e60d:	jmp    40e778 <main@@Base+0x9e38>
  40e612:	mov    rdi,QWORD PTR [rsp+0x10]
  40e617:	mov    rsi,r14
  40e61a:	mov    rdx,QWORD PTR [rsp+0x8]
  40e61f:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40e624:	jmp    40e775 <main@@Base+0x9e35>
  40e629:	cmp    al,0x7d
  40e62b:	jne    40e7f6 <main@@Base+0x9eb6>
  40e631:	lea    r14,[r12+0x1]
  40e636:	mov    rax,QWORD PTR [rsp+0x8]
  40e63b:	sub    rax,r14
  40e63e:	cmp    rax,0x2
  40e642:	jl     40e984 <main@@Base+0xa044>
  40e648:	cmp    BYTE PTR [r14],0x20
  40e64c:	jle    40e96e <main@@Base+0xa02e>
  40e652:	mov    r15,QWORD PTR [rsp+0x10]
  40e657:	mov    r13,QWORD PTR [rsp+0x8]
  40e65c:	jmp    40ab29 <main@@Base+0x61e9>
  40e661:	mov    ecx,0x9
  40e666:	mov    rdi,r15
  40e669:	mov    rsi,QWORD PTR [rsp+0x8]
  40e66e:	mov    rdx,rsi
  40e671:	jmp    40e7b4 <main@@Base+0x9e74>
  40e676:	mov    r15,QWORD PTR [rsp+0x10]
  40e67b:	mov    r13,QWORD PTR [rsp+0x8]
  40e680:	jmp    40a6a7 <main@@Base+0x5d67>
  40e685:	mov    ecx,0xa
  40e68a:	mov    rdi,r15
  40e68d:	mov    rsi,r13
  40e690:	jmp    40ab1e <main@@Base+0x61de>
  40e695:	lea    r14,[r13+0x1]
  40e699:	mov    rax,QWORD PTR [rsp+0x8]
  40e69e:	sub    rax,r14
  40e6a1:	cmp    rax,0x2
  40e6a5:	jl     40e6c6 <main@@Base+0x9d86>
  40e6a7:	cmp    BYTE PTR [r14],0x20
  40e6ab:	jg     40e7bc <main@@Base+0x9e7c>
  40e6b1:	jne    40e6c6 <main@@Base+0x9d86>
  40e6b3:	cmp    BYTE PTR [r13+0x2],0x20
  40e6b8:	jle    40e6c6 <main@@Base+0x9d86>
  40e6ba:	add    r13,0x2
  40e6be:	mov    r14,r13
  40e6c1:	jmp    40e7bc <main@@Base+0x9e7c>
  40e6c6:	mov    rdi,QWORD PTR [rsp+0x10]
  40e6cb:	mov    rsi,r14
  40e6ce:	mov    rdx,QWORD PTR [rsp+0x8]
  40e6d3:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40e6d8:	jmp    40e7b9 <main@@Base+0x9e79>
  40e6dd:	jne    40e6f3 <main@@Base+0x9db3>
  40e6df:	cmp    BYTE PTR [r12+0x2],0x20
  40e6e5:	jle    40e6f3 <main@@Base+0x9db3>
  40e6e7:	add    r12,0x2
  40e6eb:	mov    r14,r12
  40e6ee:	jmp    40c9b3 <main@@Base+0x8073>
  40e6f3:	mov    r15,QWORD PTR [rsp+0x10]
  40e6f8:	mov    rdi,r15
  40e6fb:	mov    rsi,r14
  40e6fe:	mov    r13,QWORD PTR [rsp+0x8]
  40e703:	mov    rdx,r13
  40e706:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40e70b:	jmp    40a12e <main@@Base+0x57ee>
  40e710:	mov    ecx,0xa
  40e715:	mov    r15,QWORD PTR [rsp+0x10]
  40e71a:	mov    rdi,r15
  40e71d:	mov    rsi,r12
  40e720:	mov    r13,QWORD PTR [rsp+0x8]
  40e725:	jmp    40a68b <main@@Base+0x5d4b>
  40e72a:	mov    ecx,0x9
  40e72f:	mov    r15,QWORD PTR [rsp+0x10]
  40e734:	mov    rdi,r15
  40e737:	mov    rsi,r12
  40e73a:	mov    r13,QWORD PTR [rsp+0x8]
  40e73f:	jmp    40afcd <main@@Base+0x668d>
  40e744:	mov    ecx,0xa
  40e749:	mov    r15,QWORD PTR [rsp+0x10]
  40e74e:	mov    rdi,r15
  40e751:	mov    rsi,rax
  40e754:	mov    r13,QWORD PTR [rsp+0x8]
  40e759:	jmp    40adae <main@@Base+0x646e>
  40e75e:	mov    ecx,0x9
  40e763:	mov    rdi,QWORD PTR [rsp+0x10]
  40e768:	mov    rsi,rax
  40e76b:	mov    rdx,QWORD PTR [rsp+0x8]
  40e770:	call   41f940 <flatcc_json_parser_set_error@@Base>
  40e775:	mov    r14,rax
  40e778:	mov    r15,QWORD PTR [rsp+0x10]
  40e77d:	mov    r13,QWORD PTR [rsp+0x8]
  40e782:	jmp    40c3b1 <main@@Base+0x7a71>
  40e787:	cmp    cl,0x5d
  40e78a:	je     40c9f3 <main@@Base+0x80b3>
  40e790:	mov    ecx,0x9
  40e795:	mov    rdi,QWORD PTR [rsp+0x10]
  40e79a:	mov    rsi,rax
  40e79d:	jmp    40c59e <main@@Base+0x7c5e>
  40e7a2:	mov    ecx,0x9
  40e7a7:	mov    rdi,QWORD PTR [rsp+0x10]
  40e7ac:	mov    rsi,r12
  40e7af:	mov    rdx,QWORD PTR [rsp+0x8]
  40e7b4:	call   41f940 <flatcc_json_parser_set_error@@Base>
  40e7b9:	mov    r14,rax
  40e7bc:	mov    r15,QWORD PTR [rsp+0x10]
  40e7c1:	mov    r13,QWORD PTR [rsp+0x8]
  40e7c6:	mov    rdi,QWORD PTR [r15]
  40e7c9:	call   41d220 <flatcc_builder_end_vector@@Base>
  40e7ce:	mov    DWORD PTR [rsp+0x3c],eax
  40e7d2:	test   eax,eax
  40e7d4:	mov    rbp,QWORD PTR [rsp+0x20]
  40e7d9:	movabs r12,0x7465737400000000
  40e7e3:	je     40ead3 <main@@Base+0xa193>
  40e7e9:	mov    rdi,QWORD PTR [r15]
  40e7ec:	mov    esi,0x21
  40e7f1:	jmp    4080eb <main@@Base+0x37ab>
  40e7f6:	mov    ecx,0xa
  40e7fb:	mov    r15,QWORD PTR [rsp+0x10]
  40e800:	mov    rdi,r15
  40e803:	mov    rsi,r12
  40e806:	mov    r13,QWORD PTR [rsp+0x8]
  40e80b:	jmp    40ab1e <main@@Base+0x61de>
  40e810:	mov    ecx,0x9
  40e815:	mov    rdi,QWORD PTR [rsp+0x10]
  40e81a:	mov    rsi,QWORD PTR [rsp+0x8]
  40e81f:	mov    rdx,rsi
  40e822:	jmp    40c5a3 <main@@Base+0x7c63>
  40e827:	lea    r14,[r12+0x1]
  40e82c:	mov    rax,QWORD PTR [rsp+0x8]
  40e831:	sub    rax,r14
  40e834:	cmp    rax,0x2
  40e838:	jl     40e853 <main@@Base+0x9f13>
  40e83a:	cmp    BYTE PTR [r14],0x20
  40e83e:	jg     40e868 <main@@Base+0x9f28>
  40e840:	jne    40e853 <main@@Base+0x9f13>
  40e842:	cmp    BYTE PTR [r12+0x2],0x20
  40e848:	jle    40e853 <main@@Base+0x9f13>
  40e84a:	add    r12,0x2
  40e84e:	mov    r14,r12
  40e851:	jmp    40e868 <main@@Base+0x9f28>
  40e853:	mov    rdi,QWORD PTR [rsp+0x10]
  40e858:	mov    rsi,r14
  40e85b:	mov    rdx,QWORD PTR [rsp+0x8]
  40e860:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40e865:	mov    r14,rax
  40e868:	mov    r15,QWORD PTR [rsp+0x10]
  40e86d:	mov    rdi,QWORD PTR [r15]
  40e870:	call   41d220 <flatcc_builder_end_vector@@Base>
  40e875:	mov    rbp,QWORD PTR [rsp+0x20]
  40e87a:	mov    r13,QWORD PTR [rsp+0x8]
  40e87f:	movabs r12,0x7465737400000000
  40e889:	mov    DWORD PTR [rsp+0x3c],eax
  40e88d:	test   eax,eax
  40e88f:	je     40ead3 <main@@Base+0xa193>
  40e895:	mov    rdi,QWORD PTR [r15]
  40e898:	mov    esi,0xd
  40e89d:	jmp    4080eb <main@@Base+0x37ab>
  40e8a2:	jne    40e8b8 <main@@Base+0x9f78>
  40e8a4:	cmp    BYTE PTR [r12+0x2],0x20
  40e8aa:	jle    40e8b8 <main@@Base+0x9f78>
  40e8ac:	add    r12,0x2
  40e8b0:	mov    r14,r12
  40e8b3:	jmp    40d68d <main@@Base+0x8d4d>
  40e8b8:	mov    r15,QWORD PTR [rsp+0x10]
  40e8bd:	mov    rdi,r15
  40e8c0:	mov    rsi,r14
  40e8c3:	mov    r13,QWORD PTR [rsp+0x8]
  40e8c8:	mov    rdx,r13
  40e8cb:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40e8d0:	jmp    40a05b <main@@Base+0x571b>
  40e8d5:	jne    40e8eb <main@@Base+0x9fab>
  40e8d7:	cmp    BYTE PTR [r12+0x2],0x20
  40e8dd:	jle    40e8eb <main@@Base+0x9fab>
  40e8df:	add    r12,0x2
  40e8e3:	mov    r14,r12
  40e8e6:	jmp    40d6c5 <main@@Base+0x8d85>
  40e8eb:	mov    r15,QWORD PTR [rsp+0x10]
  40e8f0:	mov    rdi,r15
  40e8f3:	mov    rsi,r14
  40e8f6:	mov    r13,QWORD PTR [rsp+0x8]
  40e8fb:	mov    rdx,r13
  40e8fe:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40e903:	jmp    40a1f2 <main@@Base+0x58b2>
  40e908:	jne    40e91e <main@@Base+0x9fde>
  40e90a:	cmp    BYTE PTR [r12+0x2],0x20
  40e910:	jle    40e91e <main@@Base+0x9fde>
  40e912:	add    r12,0x2
  40e916:	mov    r14,r12
  40e919:	jmp    40e17b <main@@Base+0x983b>
  40e91e:	mov    r15,QWORD PTR [rsp+0x10]
  40e923:	mov    rdi,r15
  40e926:	mov    rsi,r14
  40e929:	mov    r13,QWORD PTR [rsp+0x8]
  40e92e:	mov    rdx,r13
  40e931:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40e936:	jmp    40a693 <main@@Base+0x5d53>
  40e93b:	jne    40e951 <main@@Base+0xa011>
  40e93d:	cmp    BYTE PTR [r12+0x2],0x20
  40e943:	jle    40e951 <main@@Base+0xa011>
  40e945:	add    r12,0x2
  40e949:	mov    r14,r12
  40e94c:	jmp    40e3bb <main@@Base+0x9a7b>
  40e951:	mov    r15,QWORD PTR [rsp+0x10]
  40e956:	mov    rdi,r15
  40e959:	mov    rsi,r14
  40e95c:	mov    r13,QWORD PTR [rsp+0x8]
  40e961:	mov    rdx,r13
  40e964:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40e969:	jmp    40afd5 <main@@Base+0x6695>
  40e96e:	jne    40e984 <main@@Base+0xa044>
  40e970:	cmp    BYTE PTR [r12+0x2],0x20
  40e976:	jle    40e984 <main@@Base+0xa044>
  40e978:	add    r12,0x2
  40e97c:	mov    r14,r12
  40e97f:	jmp    40e652 <main@@Base+0x9d12>
  40e984:	mov    r15,QWORD PTR [rsp+0x10]
  40e989:	mov    rdi,r15
  40e98c:	mov    rsi,r14
  40e98f:	mov    r13,QWORD PTR [rsp+0x8]
  40e994:	mov    rdx,r13
  40e997:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40e99c:	jmp    40ab26 <main@@Base+0x61e6>
  40e9a1:	mov    rdi,r15
  40e9a4:	mov    rsi,r12
  40e9a7:	mov    rdx,r13
  40e9aa:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40e9af:	jmp    404a86 <main@@Base+0x146>
  40e9b4:	mov    r12,r13
  40e9b7:	jmp    40ea92 <main@@Base+0xa152>
  40e9bc:	cmp    al,0x7d
  40e9be:	jne    40ea6c <main@@Base+0xa12c>
  40e9c4:	lea    r12,[r14+0x1]
  40e9c8:	mov    rax,r13
  40e9cb:	sub    rax,r12
  40e9ce:	cmp    rax,0x2
  40e9d2:	jl     40ea81 <main@@Base+0xa141>
  40e9d8:	cmp    BYTE PTR [r12],0x20
  40e9dd:	jg     40ea92 <main@@Base+0xa152>
  40e9e3:	jne    40ea81 <main@@Base+0xa141>
  40e9e9:	cmp    BYTE PTR [r14+0x2],0x20
  40e9ee:	jle    40ea81 <main@@Base+0xa141>
  40e9f4:	add    r14,0x2
  40e9f8:	mov    r12,r14
  40e9fb:	jmp    40ea92 <main@@Base+0xa152>
  40ea00:	mov    ecx,0xa
  40ea05:	mov    rdi,r15
  40ea08:	mov    rsi,r13
  40ea0b:	mov    rdx,r13
  40ea0e:	call   41f940 <flatcc_json_parser_set_error@@Base>
  40ea13:	jmp    40ea5b <main@@Base+0xa11b>
  40ea15:	lea    r12,[rsi+0x1]
  40ea19:	mov    rax,r13
  40ea1c:	sub    rax,r12
  40ea1f:	cmp    rax,0x2
  40ea23:	jl     40ea4d <main@@Base+0xa10d>
  40ea25:	cmp    BYTE PTR [r12],0x20
  40ea2a:	jg     404a8d <main@@Base+0x14d>
  40ea30:	jne    40ea4d <main@@Base+0xa10d>
  40ea32:	cmp    BYTE PTR [rsi+0x2],0x20
  40ea36:	jle    40ea4d <main@@Base+0xa10d>
  40ea38:	add    rsi,0x2
  40ea3c:	mov    r12,rsi
  40ea3f:	cmp    DWORD PTR [rbx],0x0
  40ea42:	jne    4049f1 <main@@Base+0xb1>
  40ea48:	jmp    404a96 <main@@Base+0x156>
  40ea4d:	mov    rdi,r15
  40ea50:	mov    rsi,r12
  40ea53:	mov    rdx,r13
  40ea56:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40ea5b:	mov    r12,rax
  40ea5e:	cmp    DWORD PTR [rbx],0x0
  40ea61:	jne    4049f1 <main@@Base+0xb1>
  40ea67:	jmp    404a96 <main@@Base+0x156>
  40ea6c:	mov    ecx,0xa
  40ea71:	mov    rdi,r15
  40ea74:	mov    rsi,r14
  40ea77:	mov    rdx,r13
  40ea7a:	call   41f940 <flatcc_json_parser_set_error@@Base>
  40ea7f:	jmp    40ea8f <main@@Base+0xa14f>
  40ea81:	mov    rdi,r15
  40ea84:	mov    rsi,r12
  40ea87:	mov    rdx,r13
  40ea8a:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  40ea8f:	mov    r12,rax
  40ea92:	mov    rbx,QWORD PTR [rsp+0x48]
  40ea97:	cmp    DWORD PTR [rbx],0x0
  40ea9a:	jne    4049f1 <main@@Base+0xb1>
  40eaa0:	jmp    404a96 <main@@Base+0x156>
  40eaa5:	mov    r12,r14
  40eaa8:	mov    r13,QWORD PTR [rsp+0x8]
  40eaad:	jmp    4049f1 <main@@Base+0xb1>
  40eab2:	mov    r13,QWORD PTR [rsp+0x8]
  40eab7:	jmp    4049f1 <main@@Base+0xb1>
  40eabc:	mov    r12,r14
  40eabf:	mov    r15,QWORD PTR [rsp+0x10]
  40eac4:	mov    r13,QWORD PTR [rsp+0x8]
  40eac9:	jmp    4049f1 <main@@Base+0xb1>
  40eace:	mov    r13,QWORD PTR [rsp+0x8]
  40ead3:	mov    r12,r14
  40ead6:	jmp    4049f1 <main@@Base+0xb1>
  40eadb:	mov    r12,rax
  40eade:	mov    r13,QWORD PTR [rsp+0x8]
  40eae3:	jmp    4049f1 <main@@Base+0xb1>
  40eae8:	mov    r12,rax
  40eaeb:	jmp    4049f1 <main@@Base+0xb1>
  40eaf0:	mov    r13,rbx
  40eaf3:	jmp    4049f1 <main@@Base+0xb1>
  40eaf8:	mov    r12,rax
  40eafb:	jmp    40eabf <main@@Base+0xa17f>
  40eafd:	mov    r12,r13
  40eb00:	mov    r15,QWORD PTR [rsp+0x10]
  40eb05:	mov    rbx,QWORD PTR [rsp+0x8]
  40eb0a:	mov    r13,rbx
  40eb0d:	jmp    4049f1 <main@@Base+0xb1>
  40eb12:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40eb1c:	nop    DWORD PTR [rax+0x0]
  40eb20:	push   r15
  40eb22:	push   r14
  40eb24:	push   rbx
  40eb25:	mov    r15,r8
  40eb28:	mov    r14,rcx
  40eb2b:	mov    rbx,rsi
  40eb2e:	mov    rcx,rdx
  40eb31:	sub    rcx,rsi
  40eb34:	cmp    rcx,0x8
  40eb38:	jb     40eb41 <main@@Base+0xa201>
  40eb3a:	movbe  rcx,QWORD PTR [rbx]
  40eb3f:	jmp    40ebbc <main@@Base+0xa27c>
  40eb41:	and    cl,0xf
  40eb44:	add    cl,0xff
  40eb47:	cmp    cl,0x7
  40eb4a:	ja     40ec56 <main@@Base+0xa316>
  40eb50:	xor    eax,eax
  40eb52:	movzx  ecx,cl
  40eb55:	lea    rsi,[rip+0x157d4]        # 424330 <_IO_stdin_used@@Base+0x330>
  40eb5c:	movsxd rcx,DWORD PTR [rsi+rcx*4]
  40eb60:	add    rcx,rsi
  40eb63:	jmp    rcx
  40eb65:	movsx  rax,BYTE PTR [rbx+0x7]
  40eb6a:	movsx  rcx,BYTE PTR [rbx+0x6]
  40eb6f:	shl    rcx,0x8
  40eb73:	or     rax,rcx
  40eb76:	movsx  rcx,BYTE PTR [rbx+0x5]
  40eb7b:	shl    rcx,0x10
  40eb7f:	or     rax,rcx
  40eb82:	movsx  rcx,BYTE PTR [rbx+0x4]
  40eb87:	shl    rcx,0x18
  40eb8b:	or     rax,rcx
  40eb8e:	movsx  rcx,BYTE PTR [rbx+0x3]
  40eb93:	shl    rcx,0x20
  40eb97:	or     rax,rcx
  40eb9a:	movsx  rcx,BYTE PTR [rbx+0x2]
  40eb9f:	shl    rcx,0x28
  40eba3:	or     rax,rcx
  40eba6:	movsx  rcx,BYTE PTR [rbx+0x1]
  40ebab:	shl    rcx,0x30
  40ebaf:	or     rax,rcx
  40ebb2:	movzx  ecx,BYTE PTR [rbx]
  40ebb5:	shl    rcx,0x38
  40ebb9:	or     rcx,rax
  40ebbc:	movabs rax,0x477265656e000000
  40ebc6:	cmp    rcx,rax
  40ebc9:	jae    40ebf6 <main@@Base+0xa2b6>
  40ebcb:	shr    rcx,0x20
  40ebcf:	cmp    rcx,0x426c7565
  40ebd6:	jne    40ec56 <main@@Base+0xa316>
  40ebd8:	mov    ecx,0x4
  40ebdd:	mov    rsi,rbx
  40ebe0:	mov    r8,r9
  40ebe3:	call   41fdc0 <flatcc_json_parser_match_constant@@Base>
  40ebe8:	cmp    rax,rbx
  40ebeb:	je     40ec56 <main@@Base+0xa316>
  40ebed:	mov    QWORD PTR [r15],0x8
  40ebf4:	jmp    40ec4c <main@@Base+0xa30c>
  40ebf6:	mov    rsi,rcx
  40ebf9:	shr    rsi,0x28
  40ebfd:	cmp    rsi,0x526564
  40ec04:	jne    40ec24 <main@@Base+0xa2e4>
  40ec06:	mov    ecx,0x3
  40ec0b:	mov    rsi,rbx
  40ec0e:	mov    r8,r9
  40ec11:	call   41fdc0 <flatcc_json_parser_match_constant@@Base>
  40ec16:	cmp    rax,rbx
  40ec19:	je     40ec56 <main@@Base+0xa316>
  40ec1b:	mov    QWORD PTR [r15],0x1
  40ec22:	jmp    40ec4c <main@@Base+0xa30c>
  40ec24:	and    rcx,0xffffffffff000000
  40ec2b:	cmp    rcx,rax
  40ec2e:	jne    40ec56 <main@@Base+0xa316>
  40ec30:	mov    ecx,0x5
  40ec35:	mov    rsi,rbx
  40ec38:	mov    r8,r9
  40ec3b:	call   41fdc0 <flatcc_json_parser_match_constant@@Base>
  40ec40:	cmp    rax,rbx
  40ec43:	je     40ec56 <main@@Base+0xa316>
  40ec45:	mov    QWORD PTR [r15],0x2
  40ec4c:	mov    DWORD PTR [r14],0x0
  40ec53:	mov    rbx,rax
  40ec56:	mov    rax,rbx
  40ec59:	pop    rbx
  40ec5a:	pop    r14
  40ec5c:	pop    r15
  40ec5e:	ret    
  40ec5f:	nop
  40ec60:	push   r15
  40ec62:	push   r14
  40ec64:	push   r12
  40ec66:	push   rbx
  40ec67:	push   rax
  40ec68:	mov    r14,r8
  40ec6b:	mov    r12,rcx
  40ec6e:	mov    r10,rdx
  40ec71:	sub    r10,rsi
  40ec74:	cmp    r10,0x8
  40ec78:	jb     40ec81 <main@@Base+0xa341>
  40ec7a:	movbe  rbx,QWORD PTR [rsi]
  40ec7f:	jmp    40ecff <main@@Base+0xa3bf>
  40ec81:	mov    ebx,r10d
  40ec84:	and    bl,0xf
  40ec87:	add    bl,0xff
  40ec8a:	cmp    bl,0x7
  40ec8d:	ja     40f0b7 <main@@Base+0xa777>
  40ec93:	xor    ecx,ecx
  40ec95:	movzx  ebx,bl
  40ec98:	lea    r8,[rip+0x156b1]        # 424350 <_IO_stdin_used@@Base+0x350>
  40ec9f:	movsxd rbx,DWORD PTR [r8+rbx*4]
  40eca3:	add    rbx,r8
  40eca6:	jmp    rbx
  40eca8:	movsx  rcx,BYTE PTR [rsi+0x7]
  40ecad:	movsx  rbx,BYTE PTR [rsi+0x6]
  40ecb2:	shl    rbx,0x8
  40ecb6:	or     rcx,rbx
  40ecb9:	movsx  rbx,BYTE PTR [rsi+0x5]
  40ecbe:	shl    rbx,0x10
  40ecc2:	or     rcx,rbx
  40ecc5:	movsx  rbx,BYTE PTR [rsi+0x4]
  40ecca:	shl    rbx,0x18
  40ecce:	or     rcx,rbx
  40ecd1:	movsx  rbx,BYTE PTR [rsi+0x3]
  40ecd6:	shl    rbx,0x20
  40ecda:	or     rcx,rbx
  40ecdd:	movsx  rbx,BYTE PTR [rsi+0x2]
  40ece2:	shl    rbx,0x28
  40ece6:	or     rcx,rbx
  40ece9:	movsx  rbx,BYTE PTR [rsi+0x1]
  40ecee:	shl    rbx,0x30
  40ecf2:	or     rcx,rbx
  40ecf5:	movzx  ebx,BYTE PTR [rsi]
  40ecf8:	shl    rbx,0x38
  40ecfc:	or     rbx,rcx
  40ecff:	movabs rcx,0x6865785f656e756d
  40ed09:	cmp    rbx,rcx
  40ed0c:	jae    40ed79 <main@@Base+0xa439>
  40ed0e:	movabs r8,0x436f6c6f72000000
  40ed18:	movabs rcx,0xffffff0000000000
  40ed22:	and    rcx,rbx
  40ed25:	cmp    rbx,r8
  40ed28:	jae    40edcd <main@@Base+0xa48d>
  40ed2e:	cmp    r10,0x4
  40ed32:	jl     40f0b7 <main@@Base+0xa777>
  40ed38:	movabs rax,0x416e790000000000
  40ed42:	cmp    rcx,rax
  40ed45:	jne    40f0b7 <main@@Base+0xa777>
  40ed4b:	lea    rax,[rsi+0x4]
  40ed4f:	cmp    BYTE PTR [rsi+0x3],0x2e
  40ed53:	cmovne rax,rsi
  40ed57:	cmp    rax,rsi
  40ed5a:	je     40f0b7 <main@@Base+0xa777>
  40ed60:	mov    rsi,rax
  40ed63:	mov    rcx,r12
  40ed66:	mov    r8,r14
  40ed69:	add    rsp,0x8
  40ed6d:	pop    rbx
  40ed6e:	pop    r12
  40ed70:	pop    r14
  40ed72:	pop    r15
  40ed74:	jmp    413ce0 <main@@Base+0xf3a0>
  40ed79:	movabs r8,0x696e745f656e756d
  40ed83:	cmp    rbx,r8
  40ed86:	jae    40ee18 <main@@Base+0xa4d8>
  40ed8c:	cmp    r10,0x9
  40ed90:	jl     40f0b7 <main@@Base+0xa777>
  40ed96:	cmp    rbx,rcx
  40ed99:	jne    40f0b7 <main@@Base+0xa777>
  40ed9f:	lea    rax,[rsi+0x9]
  40eda3:	cmp    BYTE PTR [rsi+0x8],0x2e
  40eda7:	cmovne rax,rsi
  40edab:	cmp    rax,rsi
  40edae:	je     40f0b7 <main@@Base+0xa777>
  40edb4:	mov    rsi,rax
  40edb7:	mov    rcx,r12
  40edba:	mov    r8,r14
  40edbd:	add    rsp,0x8
  40edc1:	pop    rbx
  40edc2:	pop    r12
  40edc4:	pop    r14
  40edc6:	pop    r15
  40edc8:	jmp    415070 <main@@Base+0x10730>
  40edcd:	movabs rax,0x466f6f0000000000
  40edd7:	cmp    rcx,rax
  40edda:	jne    40ee6c <main@@Base+0xa52c>
  40ede0:	cmp    r10,0x4
  40ede4:	jl     40f0b7 <main@@Base+0xa777>
  40edea:	lea    rax,[rsi+0x4]
  40edee:	cmp    BYTE PTR [rsi+0x3],0x2e
  40edf2:	cmovne rax,rsi
  40edf6:	cmp    rax,rsi
  40edf9:	je     40f0b7 <main@@Base+0xa777>
  40edff:	mov    rsi,rax
  40ee02:	mov    rcx,r12
  40ee05:	mov    r8,r14
  40ee08:	add    rsp,0x8
  40ee0c:	pop    rbx
  40ee0d:	pop    r12
  40ee0f:	pop    r14
  40ee11:	pop    r15
  40ee13:	jmp    414e10 <main@@Base+0x104d0>
  40ee18:	movabs rax,0x6e65675f656e756c
  40ee22:	cmp    rbx,rax
  40ee25:	ja     40eeb4 <main@@Base+0xa574>
  40ee2b:	cmp    r10,0x9
  40ee2f:	jl     40f0b7 <main@@Base+0xa777>
  40ee35:	cmp    rbx,r8
  40ee38:	jne    40f0b7 <main@@Base+0xa777>
  40ee3e:	lea    rax,[rsi+0x9]
  40ee42:	cmp    BYTE PTR [rsi+0x8],0x2e
  40ee46:	cmovne rax,rsi
  40ee4a:	cmp    rax,rsi
  40ee4d:	je     40f0b7 <main@@Base+0xa777>
  40ee53:	mov    rsi,rax
  40ee56:	mov    rcx,r12
  40ee59:	mov    r8,r14
  40ee5c:	add    rsp,0x8
  40ee60:	pop    rbx
  40ee61:	pop    r12
  40ee63:	pop    r14
  40ee65:	pop    r15
  40ee67:	jmp    4151e0 <main@@Base+0x108a0>
  40ee6c:	cmp    r10,0x6
  40ee70:	jl     40f0b7 <main@@Base+0xa777>
  40ee76:	and    rbx,0xffffffffff000000
  40ee7d:	cmp    rbx,r8
  40ee80:	jne    40f0b7 <main@@Base+0xa777>
  40ee86:	lea    rax,[rsi+0x6]
  40ee8a:	cmp    BYTE PTR [rsi+0x5],0x2e
  40ee8e:	cmovne rax,rsi
  40ee92:	cmp    rax,rsi
  40ee95:	je     40f0b7 <main@@Base+0xa777>
  40ee9b:	mov    rsi,rax
  40ee9e:	mov    rcx,r12
  40eea1:	mov    r8,r14
  40eea4:	add    rsp,0x8
  40eea8:	pop    rbx
  40eea9:	pop    r12
  40eeab:	pop    r14
  40eead:	pop    r15
  40eeaf:	jmp    40eb20 <main@@Base+0xa1e0>
  40eeb4:	movabs rax,0x6e6f74656d707479
  40eebe:	cmp    rbx,rax
  40eec1:	je     40ef0e <main@@Base+0xa5ce>
  40eec3:	movabs rax,0x6e65675f656e756d
  40eecd:	cmp    rbx,rax
  40eed0:	jne    40f0b7 <main@@Base+0xa777>
  40eed6:	cmp    r10,0x9
  40eeda:	jl     40f0b7 <main@@Base+0xa777>
  40eee0:	lea    rax,[rsi+0x9]
  40eee4:	cmp    BYTE PTR [rsi+0x8],0x2e
  40eee8:	cmovne rax,rsi
  40eeec:	cmp    rax,rsi
  40eeef:	je     40f0b7 <main@@Base+0xa777>
  40eef5:	mov    rsi,rax
  40eef8:	mov    rcx,r12
  40eefb:	mov    r8,r14
  40eefe:	add    rsp,0x8
  40ef02:	pop    rbx
  40ef03:	pop    r12
  40ef05:	pop    r14
  40ef07:	pop    r15
  40ef09:	jmp    415390 <main@@Base+0x10a50>
  40ef0e:	lea    r8,[rsi+0x8]
  40ef12:	mov    rcx,rdx
  40ef15:	sub    rcx,r8
  40ef18:	cmp    rcx,0x8
  40ef1c:	jb     40ef32 <main@@Base+0xa5f2>
  40ef1e:	movbe  rbx,QWORD PTR [r8]
  40ef23:	cmp    rcx,0x5
  40ef27:	jge    40efba <main@@Base+0xa67a>
  40ef2d:	jmp    40f0b7 <main@@Base+0xa777>
  40ef32:	mov    ebx,ecx
  40ef34:	and    bl,0xf
  40ef37:	add    bl,0xff
  40ef3a:	cmp    bl,0x7
  40ef3d:	ja     40f0b7 <main@@Base+0xa777>
  40ef43:	xor    eax,eax
  40ef45:	movzx  ebx,bl
  40ef48:	lea    r10,[rip+0x15421]        # 424370 <_IO_stdin_used@@Base+0x370>
  40ef4f:	movsxd rbx,DWORD PTR [r10+rbx*4]
  40ef53:	add    rbx,r10
  40ef56:	jmp    rbx
  40ef58:	movsx  rax,BYTE PTR [rsi+0xf]
  40ef5d:	movsx  rbx,BYTE PTR [rsi+0xe]
  40ef62:	shl    rbx,0x8
  40ef66:	or     rax,rbx
  40ef69:	movsx  rbx,BYTE PTR [rsi+0xd]
  40ef6e:	shl    rbx,0x10
  40ef72:	or     rax,rbx
  40ef75:	movsx  rbx,BYTE PTR [rsi+0xc]
  40ef7a:	shl    rbx,0x18
  40ef7e:	or     rax,rbx
  40ef81:	movsx  rbx,BYTE PTR [rsi+0xb]
  40ef86:	shl    rbx,0x20
  40ef8a:	or     rax,rbx
  40ef8d:	movsx  rbx,BYTE PTR [rsi+0xa]
  40ef92:	shl    rbx,0x28
  40ef96:	or     rax,rbx
  40ef99:	movsx  rbx,BYTE PTR [rsi+0x9]
  40ef9e:	shl    rbx,0x30
  40efa2:	or     rax,rbx
  40efa5:	movzx  ebx,BYTE PTR [r8]
  40efa9:	shl    rbx,0x38
  40efad:	or     rbx,rax
  40efb0:	cmp    rcx,0x5
  40efb4:	jl     40f0b7 <main@@Base+0xa777>
  40efba:	movabs rax,0xffffffff00000000
  40efc4:	and    rbx,rax
  40efc7:	movabs rax,0x656e756d00000000
  40efd1:	cmp    rbx,rax
  40efd4:	jne    40f0b7 <main@@Base+0xa777>
  40efda:	lea    r15,[rsi+0xd]
  40efde:	cmp    BYTE PTR [rsi+0xc],0x2e
  40efe2:	cmovne r15,r8
  40efe6:	cmp    r15,r8
  40efe9:	je     40f0b7 <main@@Base+0xa777>
  40efef:	mov    rcx,rdx
  40eff2:	sub    rcx,r15
  40eff5:	cmp    rcx,0x8
  40eff9:	jb     40f002 <main@@Base+0xa6c2>
  40effb:	movbe  rcx,QWORD PTR [r15]
  40f000:	jmp    40f07e <main@@Base+0xa73e>
  40f002:	and    cl,0xf
  40f005:	add    cl,0xff
  40f008:	cmp    cl,0x7
  40f00b:	ja     40f0b4 <main@@Base+0xa774>
  40f011:	xor    eax,eax
  40f013:	movzx  ecx,cl
  40f016:	lea    rsi,[rip+0x15373]        # 424390 <_IO_stdin_used@@Base+0x390>
  40f01d:	movsxd rcx,DWORD PTR [rsi+rcx*4]
  40f021:	add    rcx,rsi
  40f024:	jmp    rcx
  40f026:	movsx  rax,BYTE PTR [r15+0x7]
  40f02b:	movsx  rcx,BYTE PTR [r15+0x6]
  40f030:	shl    rcx,0x8
  40f034:	or     rax,rcx
  40f037:	movsx  rcx,BYTE PTR [r15+0x5]
  40f03c:	shl    rcx,0x10
  40f040:	or     rax,rcx
  40f043:	movsx  rcx,BYTE PTR [r15+0x4]
  40f048:	shl    rcx,0x18
  40f04c:	or     rax,rcx
  40f04f:	movsx  rcx,BYTE PTR [r15+0x3]
  40f054:	shl    rcx,0x20
  40f058:	or     rax,rcx
  40f05b:	movsx  rcx,BYTE PTR [r15+0x2]
  40f060:	shl    rcx,0x28
  40f064:	or     rax,rcx
  40f067:	movsx  rcx,BYTE PTR [r15+0x1]
  40f06c:	shl    rcx,0x30
  40f070:	or     rax,rcx
  40f073:	movzx  ecx,BYTE PTR [r15]
  40f077:	shl    rcx,0x38
  40f07b:	or     rcx,rax
  40f07e:	shr    rcx,0x38
  40f082:	cmp    rcx,0x78
  40f086:	jne    40f0b4 <main@@Base+0xa774>
  40f088:	mov    ecx,0x1
  40f08d:	mov    rsi,r15
  40f090:	mov    r8,r9
  40f093:	call   41fdc0 <flatcc_json_parser_match_constant@@Base>
  40f098:	mov    rsi,r15
  40f09b:	cmp    rax,r15
  40f09e:	je     40f0b7 <main@@Base+0xa777>
  40f0a0:	mov    QWORD PTR [r14],0x0
  40f0a7:	mov    DWORD PTR [r12],0x0
  40f0af:	mov    rsi,rax
  40f0b2:	jmp    40f0b7 <main@@Base+0xa777>
  40f0b4:	mov    rsi,r15
  40f0b7:	mov    rax,rsi
  40f0ba:	add    rsp,0x8
  40f0be:	pop    rbx
  40f0bf:	pop    r12
  40f0c1:	pop    r14
  40f0c3:	pop    r15
  40f0c5:	ret    
  40f0c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f0d0:	push   rbp
  40f0d1:	push   r15
  40f0d3:	push   r14
  40f0d5:	push   r13
  40f0d7:	push   r12
  40f0d9:	push   rbx
  40f0da:	push   rax
  40f0db:	mov    r12,r9
  40f0de:	mov    r14,r8
  40f0e1:	mov    r15,rcx
  40f0e4:	mov    rbp,rdx
  40f0e7:	mov    r13,rdi
  40f0ea:	mov    rcx,rdx
  40f0ed:	sub    rcx,rsi
  40f0f0:	cmp    rcx,0x8
  40f0f4:	jb     40f0fd <main@@Base+0xa7bd>
  40f0f6:	movbe  rcx,QWORD PTR [rsi]
  40f0fb:	jmp    40f178 <main@@Base+0xa838>
  40f0fd:	and    cl,0xf
  40f100:	add    cl,0xff
  40f103:	cmp    cl,0x7
  40f106:	ja     40fff2 <main@@Base+0xb6b2>
  40f10c:	xor    eax,eax
  40f10e:	movzx  ecx,cl
  40f111:	lea    rdx,[rip+0x15298]        # 4243b0 <_IO_stdin_used@@Base+0x3b0>
  40f118:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  40f11c:	add    rcx,rdx
  40f11f:	jmp    rcx
  40f121:	movsx  rax,BYTE PTR [rsi+0x7]
  40f126:	movsx  rcx,BYTE PTR [rsi+0x6]
  40f12b:	shl    rcx,0x8
  40f12f:	or     rax,rcx
  40f132:	movsx  rcx,BYTE PTR [rsi+0x5]
  40f137:	shl    rcx,0x10
  40f13b:	or     rax,rcx
  40f13e:	movsx  rcx,BYTE PTR [rsi+0x4]
  40f143:	shl    rcx,0x18
  40f147:	or     rax,rcx
  40f14a:	movsx  rcx,BYTE PTR [rsi+0x3]
  40f14f:	shl    rcx,0x20
  40f153:	or     rax,rcx
  40f156:	movsx  rcx,BYTE PTR [rsi+0x2]
  40f15b:	shl    rcx,0x28
  40f15f:	or     rax,rcx
  40f162:	movsx  rcx,BYTE PTR [rsi+0x1]
  40f167:	shl    rcx,0x30
  40f16b:	or     rax,rcx
  40f16e:	movzx  ecx,BYTE PTR [rsi]
  40f171:	shl    rcx,0x38
  40f175:	or     rcx,rax
  40f178:	movabs rax,0x4d7947616d652e44
  40f182:	cmp    rcx,rax
  40f185:	ja     40f1b4 <main@@Base+0xa874>
  40f187:	movabs rax,0x46616e746173792e
  40f191:	cmp    rcx,rax
  40f194:	jne    40fff2 <main@@Base+0xb6b2>
  40f19a:	lea    rax,[rsi+0x8]
  40f19e:	mov    rdx,rbp
  40f1a1:	sub    rdx,rax
  40f1a4:	cmp    rdx,0x8
  40f1a8:	jb     40f212 <main@@Base+0xa8d2>
  40f1aa:	movbe  rax,QWORD PTR [rax]
  40f1af:	jmp    40f28d <main@@Base+0xa94d>
  40f1b4:	movabs rax,0x4d7947616d652e4f
  40f1be:	cmp    rcx,rax
  40f1c1:	je     40f1f4 <main@@Base+0xa8b4>
  40f1c3:	movabs rax,0x4d7947616d652e45
  40f1cd:	cmp    rcx,rax
  40f1d0:	jne    40fff2 <main@@Base+0xb6b2>
  40f1d6:	lea    rax,[rsi+0x8]
  40f1da:	mov    rdx,rbp
  40f1dd:	sub    rdx,rax
  40f1e0:	cmp    rdx,0x8
  40f1e4:	jb     40f2c8 <main@@Base+0xa988>
  40f1ea:	movbe  rax,QWORD PTR [rax]
  40f1ef:	jmp    40f343 <main@@Base+0xaa03>
  40f1f4:	lea    rax,[rsi+0x8]
  40f1f8:	mov    rdx,rbp
  40f1fb:	sub    rdx,rax
  40f1fe:	cmp    rdx,0x8
  40f202:	jb     40f398 <main@@Base+0xaa58>
  40f208:	movbe  rax,QWORD PTR [rax]
  40f20d:	jmp    40f413 <main@@Base+0xaad3>
  40f212:	and    dl,0xf
  40f215:	add    dl,0xff
  40f218:	cmp    dl,0x7
  40f21b:	ja     40fff2 <main@@Base+0xb6b2>
  40f221:	xor    ecx,ecx
  40f223:	movzx  edx,dl
  40f226:	lea    rdi,[rip+0x15343]        # 424570 <_IO_stdin_used@@Base+0x570>
  40f22d:	movsxd rdx,DWORD PTR [rdi+rdx*4]
  40f231:	add    rdx,rdi
  40f234:	jmp    rdx
  40f236:	movsx  rcx,BYTE PTR [rsi+0xf]
  40f23b:	movsx  rdx,BYTE PTR [rsi+0xe]
  40f240:	shl    rdx,0x8
  40f244:	or     rcx,rdx
  40f247:	movsx  rdx,BYTE PTR [rsi+0xd]
  40f24c:	shl    rdx,0x10
  40f250:	or     rcx,rdx
  40f253:	movsx  rdx,BYTE PTR [rsi+0xc]
  40f258:	shl    rdx,0x18
  40f25c:	or     rcx,rdx
  40f25f:	movsx  rdx,BYTE PTR [rsi+0xb]
  40f264:	shl    rdx,0x20
  40f268:	or     rcx,rdx
  40f26b:	movsx  rdx,BYTE PTR [rsi+0xa]
  40f270:	shl    rdx,0x28
  40f274:	or     rcx,rdx
  40f277:	movsx  rdx,BYTE PTR [rsi+0x9]
  40f27c:	shl    rdx,0x30
  40f280:	or     rcx,rdx
  40f283:	movzx  eax,BYTE PTR [rax]
  40f286:	shl    rax,0x38
  40f28a:	or     rax,rcx
  40f28d:	movabs rcx,0x4368617261637465
  40f297:	cmp    rax,rcx
  40f29a:	jne    40fff2 <main@@Base+0xb6b2>
  40f2a0:	lea    rcx,[rsi+0x10]
  40f2a4:	mov    rax,rbp
  40f2a7:	sub    rax,rcx
  40f2aa:	cmp    rax,0x8
  40f2ae:	jb     40f4c3 <main@@Base+0xab83>
  40f2b4:	movbe  rdi,QWORD PTR [rcx]
  40f2b9:	cmp    rax,0x2
  40f2bd:	jge    40f54a <main@@Base+0xac0a>
  40f2c3:	jmp    40fff2 <main@@Base+0xb6b2>
  40f2c8:	and    dl,0xf
  40f2cb:	add    dl,0xff
  40f2ce:	cmp    dl,0x7
  40f2d1:	ja     40fff2 <main@@Base+0xb6b2>
  40f2d7:	xor    ecx,ecx
  40f2d9:	movzx  edx,dl
  40f2dc:	lea    rdi,[rip+0x151ad]        # 424490 <_IO_stdin_used@@Base+0x490>
  40f2e3:	movsxd rdx,DWORD PTR [rdi+rdx*4]
  40f2e7:	add    rdx,rdi
  40f2ea:	jmp    rdx
  40f2ec:	movsx  rcx,BYTE PTR [rsi+0xf]
  40f2f1:	movsx  rdx,BYTE PTR [rsi+0xe]
  40f2f6:	shl    rdx,0x8
  40f2fa:	or     rcx,rdx
  40f2fd:	movsx  rdx,BYTE PTR [rsi+0xd]
  40f302:	shl    rdx,0x10
  40f306:	or     rcx,rdx
  40f309:	movsx  rdx,BYTE PTR [rsi+0xc]
  40f30e:	shl    rdx,0x18
  40f312:	or     rcx,rdx
  40f315:	movsx  rdx,BYTE PTR [rsi+0xb]
  40f31a:	shl    rdx,0x20
  40f31e:	or     rcx,rdx
  40f321:	movsx  rdx,BYTE PTR [rsi+0xa]
  40f326:	shl    rdx,0x28
  40f32a:	or     rcx,rdx
  40f32d:	movsx  rdx,BYTE PTR [rsi+0x9]
  40f332:	shl    rdx,0x30
  40f336:	or     rcx,rdx
  40f339:	movzx  eax,BYTE PTR [rax]
  40f33c:	shl    rax,0x38
  40f340:	or     rax,rcx
  40f343:	movabs rcx,0x78616d706c652e68
  40f34d:	cmp    rax,rcx
  40f350:	jae    40f444 <main@@Base+0xab04>
  40f356:	lea    rdx,[rcx-0x25]
  40f35a:	cmp    rax,rdx
  40f35d:	jae    40f5a4 <main@@Base+0xac64>
  40f363:	add    rcx,0xffffffffffffffd9
  40f367:	cmp    rax,rcx
  40f36a:	jne    40fff2 <main@@Base+0xb6b2>
  40f370:	lea    rbx,[rsi+0x10]
  40f374:	mov    rax,rbp
  40f377:	sub    rax,rbx
  40f37a:	cmp    rax,0x8
  40f37e:	jb     40f883 <main@@Base+0xaf43>
  40f384:	movbe  rdi,QWORD PTR [rbx]
  40f389:	cmp    rax,0x3
  40f38d:	jge    40f90a <main@@Base+0xafca>
  40f393:	jmp    40fff2 <main@@Base+0xb6b2>
  40f398:	and    dl,0xf
  40f39b:	add    dl,0xff
  40f39e:	cmp    dl,0x7
  40f3a1:	ja     40fff2 <main@@Base+0xb6b2>
  40f3a7:	xor    ecx,ecx
  40f3a9:	movzx  edx,dl
  40f3ac:	lea    rdi,[rip+0x1501d]        # 4243d0 <_IO_stdin_used@@Base+0x3d0>
  40f3b3:	movsxd rdx,DWORD PTR [rdi+rdx*4]
  40f3b7:	add    rdx,rdi
  40f3ba:	jmp    rdx
  40f3bc:	movsx  rcx,BYTE PTR [rsi+0xf]
  40f3c1:	movsx  rdx,BYTE PTR [rsi+0xe]
  40f3c6:	shl    rdx,0x8
  40f3ca:	or     rcx,rdx
  40f3cd:	movsx  rdx,BYTE PTR [rsi+0xd]
  40f3d2:	shl    rdx,0x10
  40f3d6:	or     rcx,rdx
  40f3d9:	movsx  rdx,BYTE PTR [rsi+0xc]
  40f3de:	shl    rdx,0x18
  40f3e2:	or     rcx,rdx
  40f3e5:	movsx  rdx,BYTE PTR [rsi+0xb]
  40f3ea:	shl    rdx,0x20
  40f3ee:	or     rcx,rdx
  40f3f1:	movsx  rdx,BYTE PTR [rsi+0xa]
  40f3f6:	shl    rdx,0x28
  40f3fa:	or     rcx,rdx
  40f3fd:	movsx  rdx,BYTE PTR [rsi+0x9]
  40f402:	shl    rdx,0x30
  40f406:	or     rcx,rdx
  40f409:	movzx  eax,BYTE PTR [rax]
  40f40c:	shl    rax,0x38
  40f410:	or     rax,rcx
  40f413:	movabs rcx,0x746865724e616d65
  40f41d:	cmp    rax,rcx
  40f420:	jne    40fff2 <main@@Base+0xb6b2>
  40f426:	lea    rax,[rsi+0x10]
  40f42a:	mov    rdx,rbp
  40f42d:	sub    rdx,rax
  40f430:	cmp    rdx,0x8
  40f434:	jb     40f5f2 <main@@Base+0xacb2>
  40f43a:	movbe  rax,QWORD PTR [rax]
  40f43f:	jmp    40f66d <main@@Base+0xad2d>
  40f444:	jne    40f69e <main@@Base+0xad5e>
  40f44a:	lea    rcx,[rsi+0x10]
  40f44e:	mov    rax,rbp
  40f451:	sub    rax,rcx
  40f454:	cmp    rax,0x8
  40f458:	jb     40fff2 <main@@Base+0xb6b2>
  40f45e:	cmp    rax,0x8
  40f462:	jl     40fff2 <main@@Base+0xb6b2>
  40f468:	mov    al,0x38
  40f46a:	bzhi   rax,QWORD PTR [rcx],rax
  40f46f:	movabs rdx,0x6d756e655f746e
  40f479:	add    rdx,0x3f7
  40f480:	cmp    rax,rdx
  40f483:	jne    40fff2 <main@@Base+0xb6b2>
  40f489:	lea    rax,[rsi+0x18]
  40f48d:	cmp    BYTE PTR [rsi+0x17],0x2e
  40f491:	cmovne rax,rcx
  40f495:	cmp    rax,rcx
  40f498:	je     40fff2 <main@@Base+0xb6b2>
  40f49e:	mov    rdi,r13
  40f4a1:	mov    rsi,rax
  40f4a4:	mov    rdx,rbp
  40f4a7:	mov    rcx,r15
  40f4aa:	mov    r8,r14
  40f4ad:	mov    r9,r12
  40f4b0:	add    rsp,0x8
  40f4b4:	pop    rbx
  40f4b5:	pop    r12
  40f4b7:	pop    r13
  40f4b9:	pop    r14
  40f4bb:	pop    r15
  40f4bd:	pop    rbp
  40f4be:	jmp    415070 <main@@Base+0x10730>
  40f4c3:	mov    ebx,eax
  40f4c5:	and    bl,0xf
  40f4c8:	add    bl,0xff
  40f4cb:	cmp    bl,0x7
  40f4ce:	ja     40fff2 <main@@Base+0xb6b2>
  40f4d4:	xor    edx,edx
  40f4d6:	movzx  edi,bl
  40f4d9:	lea    rbx,[rip+0x150b0]        # 424590 <_IO_stdin_used@@Base+0x590>
  40f4e0:	movsxd rdi,DWORD PTR [rbx+rdi*4]
  40f4e4:	add    rdi,rbx
  40f4e7:	jmp    rdi
  40f4e9:	movsx  rdx,BYTE PTR [rsi+0x17]
  40f4ee:	movsx  rdi,BYTE PTR [rsi+0x16]
  40f4f3:	shl    rdi,0x8
  40f4f7:	or     rdx,rdi
  40f4fa:	movsx  rdi,BYTE PTR [rsi+0x15]
  40f4ff:	shl    rdi,0x10
  40f503:	or     rdx,rdi
  40f506:	movsx  rdi,BYTE PTR [rsi+0x14]
  40f50b:	shl    rdi,0x18
  40f50f:	or     rdx,rdi
  40f512:	movsx  rdi,BYTE PTR [rsi+0x13]
  40f517:	shl    rdi,0x20
  40f51b:	or     rdx,rdi
  40f51e:	movsx  rdi,BYTE PTR [rsi+0x12]
  40f523:	shl    rdi,0x28
  40f527:	or     rdx,rdi
  40f52a:	movsx  rdi,BYTE PTR [rsi+0x11]
  40f52f:	shl    rdi,0x30
  40f533:	or     rdx,rdi
  40f536:	movzx  edi,BYTE PTR [rcx]
  40f539:	shl    rdi,0x38
  40f53d:	or     rdi,rdx
  40f540:	cmp    rax,0x2
  40f544:	jl     40fff2 <main@@Base+0xb6b2>
  40f54a:	movabs rax,0xff00000000000000
  40f554:	and    rdi,rax
  40f557:	movabs rax,0x7200000000000000
  40f561:	cmp    rdi,rax
  40f564:	jne    40fff2 <main@@Base+0xb6b2>
  40f56a:	lea    rax,[rsi+0x12]
  40f56e:	cmp    BYTE PTR [rsi+0x11],0x2e
  40f572:	cmovne rax,rcx
  40f576:	cmp    rax,rcx
  40f579:	je     40fff2 <main@@Base+0xb6b2>
  40f57f:	mov    rdi,r13
  40f582:	mov    rsi,rax
  40f585:	mov    rdx,rbp
  40f588:	mov    rcx,r15
  40f58b:	mov    r8,r14
  40f58e:	mov    r9,r12
  40f591:	add    rsp,0x8
  40f595:	pop    rbx
  40f596:	pop    r12
  40f598:	pop    r13
  40f59a:	pop    r14
  40f59c:	pop    r15
  40f59e:	pop    rbp
  40f59f:	jmp    4154f0 <main@@Base+0x10bb0>
  40f5a4:	movabs rcx,0x78616d706c652e46
  40f5ae:	cmp    rax,rcx
  40f5b1:	je     40f85b <main@@Base+0xaf1b>
  40f5b7:	movabs rcx,0x78616d706c652e43
  40f5c1:	cmp    rax,rcx
  40f5c4:	jne    40fff2 <main@@Base+0xb6b2>
  40f5ca:	lea    rbx,[rsi+0x10]
  40f5ce:	mov    rax,rbp
  40f5d1:	sub    rax,rbx
  40f5d4:	cmp    rax,0x8
  40f5d8:	jb     40fa37 <main@@Base+0xb0f7>
  40f5de:	movbe  rdi,QWORD PTR [rbx]
  40f5e3:	cmp    rax,0x5
  40f5e7:	jge    40fabe <main@@Base+0xb17e>
  40f5ed:	jmp    40fff2 <main@@Base+0xb6b2>
  40f5f2:	and    dl,0xf
  40f5f5:	add    dl,0xff
  40f5f8:	cmp    dl,0x7
  40f5fb:	ja     40fff2 <main@@Base+0xb6b2>
  40f601:	xor    ecx,ecx
  40f603:	movzx  edx,dl
  40f606:	lea    rdi,[rip+0x14de3]        # 4243f0 <_IO_stdin_used@@Base+0x3f0>
  40f60d:	movsxd rdx,DWORD PTR [rdi+rdx*4]
  40f611:	add    rdx,rdi
  40f614:	jmp    rdx
  40f616:	movsx  rcx,BYTE PTR [rsi+0x17]
  40f61b:	movsx  rdx,BYTE PTR [rsi+0x16]
  40f620:	shl    rdx,0x8
  40f624:	or     rcx,rdx
  40f627:	movsx  rdx,BYTE PTR [rsi+0x15]
  40f62c:	shl    rdx,0x10
  40f630:	or     rcx,rdx
  40f633:	movsx  rdx,BYTE PTR [rsi+0x14]
  40f638:	shl    rdx,0x18
  40f63c:	or     rcx,rdx
  40f63f:	movsx  rdx,BYTE PTR [rsi+0x13]
  40f644:	shl    rdx,0x20
  40f648:	or     rcx,rdx
  40f64b:	movsx  rdx,BYTE PTR [rsi+0x12]
  40f650:	shl    rdx,0x28
  40f654:	or     rcx,rdx
  40f657:	movsx  rdx,BYTE PTR [rsi+0x11]
  40f65c:	shl    rdx,0x30
  40f660:	or     rcx,rdx
  40f663:	movzx  eax,BYTE PTR [rax]
  40f666:	shl    rax,0x38
  40f66a:	or     rax,rcx
  40f66d:	movabs rcx,0x53706163652e4672
  40f677:	cmp    rax,rcx
  40f67a:	jne    40fff2 <main@@Base+0xb6b2>
  40f680:	lea    rax,[rsi+0x18]
  40f684:	mov    rdx,rbp
  40f687:	sub    rdx,rax
  40f68a:	cmp    rdx,0x8
  40f68e:	jb     40f7a5 <main@@Base+0xae65>
  40f694:	movbe  rax,QWORD PTR [rax]
  40f699:	jmp    40f820 <main@@Base+0xaee0>
  40f69e:	lea    rdx,[rcx+0x6]
  40f6a2:	cmp    rax,rdx
  40f6a5:	jae    40f726 <main@@Base+0xade6>
  40f6a7:	add    rcx,0x1
  40f6ab:	cmp    rax,rcx
  40f6ae:	jne    40fff2 <main@@Base+0xb6b2>
  40f6b4:	lea    rcx,[rsi+0x10]
  40f6b8:	mov    rax,rbp
  40f6bb:	sub    rax,rcx
  40f6be:	cmp    rax,0x8
  40f6c2:	jb     40fff2 <main@@Base+0xb6b2>
  40f6c8:	cmp    rax,0x8
  40f6cc:	jl     40fff2 <main@@Base+0xb6b2>
  40f6d2:	mov    al,0x38
  40f6d4:	bzhi   rax,QWORD PTR [rcx],rax
  40f6d9:	movabs rdx,0x6d756e655f746e
  40f6e3:	cmp    rax,rdx
  40f6e6:	jne    40fff2 <main@@Base+0xb6b2>
  40f6ec:	lea    rax,[rsi+0x18]
  40f6f0:	cmp    BYTE PTR [rsi+0x17],0x2e
  40f6f4:	cmovne rax,rcx
  40f6f8:	cmp    rax,rcx
  40f6fb:	je     40fff2 <main@@Base+0xb6b2>
  40f701:	mov    rdi,r13
  40f704:	mov    rsi,rax
  40f707:	mov    rdx,rbp
  40f70a:	mov    rcx,r15
  40f70d:	mov    r8,r14
  40f710:	mov    r9,r12
  40f713:	add    rsp,0x8
  40f717:	pop    rbx
  40f718:	pop    r12
  40f71a:	pop    r13
  40f71c:	pop    r14
  40f71e:	pop    r15
  40f720:	pop    rbp
  40f721:	jmp    4151e0 <main@@Base+0x108a0>
  40f726:	jne    40fff2 <main@@Base+0xb6b2>
  40f72c:	lea    rcx,[rsi+0x10]
  40f730:	mov    rdi,rbp
  40f733:	sub    rdi,rcx
  40f736:	cmp    rdi,0x7
  40f73a:	jbe    40fbf9 <main@@Base+0xb2b9>
  40f740:	movbe  rdx,QWORD PTR [rcx]
  40f745:	cmp    rdi,0x8
  40f749:	jl     40fc78 <main@@Base+0xb338>
  40f74f:	mov    rax,rdx
  40f752:	and    rax,0xffffffffffffff00
  40f758:	movabs rdi,0x65675f656e756d00
  40f762:	cmp    rax,rdi
  40f765:	jne    40fc78 <main@@Base+0xb338>
  40f76b:	lea    rax,[rsi+0x18]
  40f76f:	cmp    BYTE PTR [rsi+0x17],0x2e
  40f773:	cmovne rax,rcx
  40f777:	cmp    rax,rcx
  40f77a:	je     40fc78 <main@@Base+0xb338>
  40f780:	mov    rdi,r13
  40f783:	mov    rsi,rax
  40f786:	mov    rdx,rbp
  40f789:	mov    rcx,r15
  40f78c:	mov    r8,r14
  40f78f:	mov    r9,r12
  40f792:	add    rsp,0x8
  40f796:	pop    rbx
  40f797:	pop    r12
  40f799:	pop    r13
  40f79b:	pop    r14
  40f79d:	pop    r15
  40f79f:	pop    rbp
  40f7a0:	jmp    415390 <main@@Base+0x10a50>
  40f7a5:	and    dl,0xf
  40f7a8:	add    dl,0xff
  40f7ab:	cmp    dl,0x7
  40f7ae:	ja     40fff2 <main@@Base+0xb6b2>
  40f7b4:	xor    ecx,ecx
  40f7b6:	movzx  edx,dl
  40f7b9:	lea    rdi,[rip+0x14c50]        # 424410 <_IO_stdin_used@@Base+0x410>
  40f7c0:	movsxd rdx,DWORD PTR [rdi+rdx*4]
  40f7c4:	add    rdx,rdi
  40f7c7:	jmp    rdx
  40f7c9:	movsx  rcx,BYTE PTR [rsi+0x1f]
  40f7ce:	movsx  rdx,BYTE PTR [rsi+0x1e]
  40f7d3:	shl    rdx,0x8
  40f7d7:	or     rcx,rdx
  40f7da:	movsx  rdx,BYTE PTR [rsi+0x1d]
  40f7df:	shl    rdx,0x10
  40f7e3:	or     rcx,rdx
  40f7e6:	movsx  rdx,BYTE PTR [rsi+0x1c]
  40f7eb:	shl    rdx,0x18
  40f7ef:	or     rcx,rdx
  40f7f2:	movsx  rdx,BYTE PTR [rsi+0x1b]
  40f7f7:	shl    rdx,0x20
  40f7fb:	or     rcx,rdx
  40f7fe:	movsx  rdx,BYTE PTR [rsi+0x1a]
  40f803:	shl    rdx,0x28
  40f807:	or     rcx,rdx
  40f80a:	movsx  rdx,BYTE PTR [rsi+0x19]
  40f80f:	shl    rdx,0x30
  40f813:	or     rcx,rdx
  40f816:	movzx  eax,BYTE PTR [rax]
  40f819:	shl    rax,0x38
  40f81d:	or     rax,rcx
  40f820:	movabs rcx,0x6f6d496e636c7564
  40f82a:	cmp    rax,rcx
  40f82d:	jne    40fff2 <main@@Base+0xb6b2>
  40f833:	lea    rbx,[rsi+0x20]
  40f837:	mov    rcx,rbp
  40f83a:	sub    rcx,rbx
  40f83d:	cmp    rcx,0x8
  40f841:	jb     40f964 <main@@Base+0xb024>
  40f847:	movbe  rdi,QWORD PTR [rbx]
  40f84c:	cmp    rcx,0x2
  40f850:	jge    40f9e8 <main@@Base+0xb0a8>
  40f856:	jmp    40fff2 <main@@Base+0xb6b2>
  40f85b:	lea    rbx,[rsi+0x10]
  40f85f:	mov    rax,rbp
  40f862:	sub    rax,rbx
  40f865:	cmp    rax,0x8
  40f869:	jb     40fb18 <main@@Base+0xb1d8>
  40f86f:	movbe  rdi,QWORD PTR [rbx]
  40f874:	cmp    rax,0x3
  40f878:	jge    40fb9f <main@@Base+0xb25f>
  40f87e:	jmp    40fff2 <main@@Base+0xb6b2>
  40f883:	mov    ecx,eax
  40f885:	and    cl,0xf
  40f888:	add    cl,0xff
  40f88b:	cmp    cl,0x7
  40f88e:	ja     40fff2 <main@@Base+0xb6b2>
  40f894:	xor    edx,edx
  40f896:	movzx  ecx,cl
  40f899:	lea    rdi,[rip+0x14cb0]        # 424550 <_IO_stdin_used@@Base+0x550>
  40f8a0:	movsxd rcx,DWORD PTR [rdi+rcx*4]
  40f8a4:	add    rcx,rdi
  40f8a7:	jmp    rcx
  40f8a9:	movsx  rdx,BYTE PTR [rsi+0x17]
  40f8ae:	movsx  rcx,BYTE PTR [rsi+0x16]
  40f8b3:	shl    rcx,0x8
  40f8b7:	or     rdx,rcx
  40f8ba:	movsx  rcx,BYTE PTR [rsi+0x15]
  40f8bf:	shl    rcx,0x10
  40f8c3:	or     rdx,rcx
  40f8c6:	movsx  rcx,BYTE PTR [rsi+0x14]
  40f8cb:	shl    rcx,0x18
  40f8cf:	or     rdx,rcx
  40f8d2:	movsx  rcx,BYTE PTR [rsi+0x13]
  40f8d7:	shl    rcx,0x20
  40f8db:	or     rdx,rcx
  40f8de:	movsx  rcx,BYTE PTR [rsi+0x12]
  40f8e3:	shl    rcx,0x28
  40f8e7:	or     rdx,rcx
  40f8ea:	movsx  rcx,BYTE PTR [rsi+0x11]
  40f8ef:	shl    rcx,0x30
  40f8f3:	or     rdx,rcx
  40f8f6:	movzx  edi,BYTE PTR [rbx]
  40f8f9:	shl    rdi,0x38
  40f8fd:	or     rdi,rdx
  40f900:	cmp    rax,0x3
  40f904:	jl     40fff2 <main@@Base+0xb6b2>
  40f90a:	movabs rax,0xffff000000000000
  40f914:	and    rdi,rax
  40f917:	movabs rax,0x6e79000000000000
  40f921:	cmp    rdi,rax
  40f924:	jne    40fff2 <main@@Base+0xb6b2>
  40f92a:	lea    rax,[rsi+0x13]
  40f92e:	cmp    BYTE PTR [rsi+0x12],0x2e
  40f932:	cmovne rax,rbx
  40f936:	cmp    rax,rbx
  40f939:	je     40fff2 <main@@Base+0xb6b2>
  40f93f:	mov    rdi,r13
  40f942:	mov    rsi,rax
  40f945:	mov    rdx,rbp
  40f948:	mov    rcx,r15
  40f94b:	mov    r8,r14
  40f94e:	mov    r9,r12
  40f951:	add    rsp,0x8
  40f955:	pop    rbx
  40f956:	pop    r12
  40f958:	pop    r13
  40f95a:	pop    r14
  40f95c:	pop    r15
  40f95e:	pop    rbp
  40f95f:	jmp    413ce0 <main@@Base+0xf3a0>
  40f964:	mov    eax,ecx
  40f966:	and    al,0xf
  40f968:	add    al,0xff
  40f96a:	cmp    al,0x7
  40f96c:	ja     40fff2 <main@@Base+0xb6b2>
  40f972:	xor    edx,edx
  40f974:	movzx  eax,al
  40f977:	lea    rdi,[rip+0x14ab2]        # 424430 <_IO_stdin_used@@Base+0x430>
  40f97e:	movsxd rax,DWORD PTR [rdi+rax*4]
  40f982:	add    rax,rdi
  40f985:	jmp    rax
  40f987:	movsx  rdx,BYTE PTR [rsi+0x27]
  40f98c:	movsx  rax,BYTE PTR [rsi+0x26]
  40f991:	shl    rax,0x8
  40f995:	or     rdx,rax
  40f998:	movsx  rax,BYTE PTR [rsi+0x25]
  40f99d:	shl    rax,0x10
  40f9a1:	or     rdx,rax
  40f9a4:	movsx  rax,BYTE PTR [rsi+0x24]
  40f9a9:	shl    rax,0x18
  40f9ad:	or     rdx,rax
  40f9b0:	movsx  rax,BYTE PTR [rsi+0x23]
  40f9b5:	shl    rax,0x20
  40f9b9:	or     rdx,rax
  40f9bc:	movsx  rax,BYTE PTR [rsi+0x22]
  40f9c1:	shl    rax,0x28
  40f9c5:	or     rdx,rax
  40f9c8:	movsx  rax,BYTE PTR [rsi+0x21]
  40f9cd:	shl    rax,0x30
  40f9d1:	or     rdx,rax
  40f9d4:	movzx  edi,BYTE PTR [rbx]
  40f9d7:	shl    rdi,0x38
  40f9db:	or     rdi,rdx
  40f9de:	cmp    rcx,0x2
  40f9e2:	jl     40fff2 <main@@Base+0xb6b2>
  40f9e8:	movabs rax,0xff00000000000000
  40f9f2:	and    rdi,rax
  40f9f5:	movabs rax,0x6500000000000000
  40f9ff:	cmp    rdi,rax
  40fa02:	jne    40fff2 <main@@Base+0xb6b2>
  40fa08:	lea    r8,[rsi+0x22]
  40fa0c:	cmp    BYTE PTR [rsi+0x21],0x2e
  40fa10:	cmovne r8,rbx
  40fa14:	cmp    r8,rbx
  40fa17:	je     40fff2 <main@@Base+0xb6b2>
  40fa1d:	mov    rcx,rbp
  40fa20:	sub    rcx,r8
  40fa23:	cmp    rcx,0x8
  40fa27:	jb     40fcb3 <main@@Base+0xb373>
  40fa2d:	movbe  rbx,QWORD PTR [r8]
  40fa32:	jmp    40fd2f <main@@Base+0xb3ef>
  40fa37:	mov    ecx,eax
  40fa39:	and    cl,0xf
  40fa3c:	add    cl,0xff
  40fa3f:	cmp    cl,0x7
  40fa42:	ja     40fff2 <main@@Base+0xb6b2>
  40fa48:	xor    edx,edx
  40fa4a:	movzx  ecx,cl
  40fa4d:	lea    rdi,[rip+0x14adc]        # 424530 <_IO_stdin_used@@Base+0x530>
  40fa54:	movsxd rcx,DWORD PTR [rdi+rcx*4]
  40fa58:	add    rcx,rdi
  40fa5b:	jmp    rcx
  40fa5d:	movsx  rdx,BYTE PTR [rsi+0x17]
  40fa62:	movsx  rcx,BYTE PTR [rsi+0x16]
  40fa67:	shl    rcx,0x8
  40fa6b:	or     rdx,rcx
  40fa6e:	movsx  rcx,BYTE PTR [rsi+0x15]
  40fa73:	shl    rcx,0x10
  40fa77:	or     rdx,rcx
  40fa7a:	movsx  rcx,BYTE PTR [rsi+0x14]
  40fa7f:	shl    rcx,0x18
  40fa83:	or     rdx,rcx
  40fa86:	movsx  rcx,BYTE PTR [rsi+0x13]
  40fa8b:	shl    rcx,0x20
  40fa8f:	or     rdx,rcx
  40fa92:	movsx  rcx,BYTE PTR [rsi+0x12]
  40fa97:	shl    rcx,0x28
  40fa9b:	or     rdx,rcx
  40fa9e:	movsx  rcx,BYTE PTR [rsi+0x11]
  40faa3:	shl    rcx,0x30
  40faa7:	or     rdx,rcx
  40faaa:	movzx  edi,BYTE PTR [rbx]
  40faad:	shl    rdi,0x38
  40fab1:	or     rdi,rdx
  40fab4:	cmp    rax,0x5
  40fab8:	jl     40fff2 <main@@Base+0xb6b2>
  40fabe:	movabs rax,0xffffffff00000000
  40fac8:	and    rdi,rax
  40facb:	movabs rax,0x6f6c6f7200000000
  40fad5:	cmp    rdi,rax
  40fad8:	jne    40fff2 <main@@Base+0xb6b2>
  40fade:	lea    rax,[rsi+0x15]
  40fae2:	cmp    BYTE PTR [rsi+0x14],0x2e
  40fae6:	cmovne rax,rbx
  40faea:	cmp    rax,rbx
  40faed:	je     40fff2 <main@@Base+0xb6b2>
  40faf3:	mov    rdi,r13
  40faf6:	mov    rsi,rax
  40faf9:	mov    rdx,rbp
  40fafc:	mov    rcx,r15
  40faff:	mov    r8,r14
  40fb02:	mov    r9,r12
  40fb05:	add    rsp,0x8
  40fb09:	pop    rbx
  40fb0a:	pop    r12
  40fb0c:	pop    r13
  40fb0e:	pop    r14
  40fb10:	pop    r15
  40fb12:	pop    rbp
  40fb13:	jmp    40eb20 <main@@Base+0xa1e0>
  40fb18:	mov    ecx,eax
  40fb1a:	and    cl,0xf
  40fb1d:	add    cl,0xff
  40fb20:	cmp    cl,0x7
  40fb23:	ja     40fff2 <main@@Base+0xb6b2>
  40fb29:	xor    edx,edx
  40fb2b:	movzx  ecx,cl
  40fb2e:	lea    rdi,[rip+0x149db]        # 424510 <_IO_stdin_used@@Base+0x510>
  40fb35:	movsxd rcx,DWORD PTR [rdi+rcx*4]
  40fb39:	add    rcx,rdi
  40fb3c:	jmp    rcx
  40fb3e:	movsx  rdx,BYTE PTR [rsi+0x17]
  40fb43:	movsx  rcx,BYTE PTR [rsi+0x16]
  40fb48:	shl    rcx,0x8
  40fb4c:	or     rdx,rcx
  40fb4f:	movsx  rcx,BYTE PTR [rsi+0x15]
  40fb54:	shl    rcx,0x10
  40fb58:	or     rdx,rcx
  40fb5b:	movsx  rcx,BYTE PTR [rsi+0x14]
  40fb60:	shl    rcx,0x18
  40fb64:	or     rdx,rcx
  40fb67:	movsx  rcx,BYTE PTR [rsi+0x13]
  40fb6c:	shl    rcx,0x20
  40fb70:	or     rdx,rcx
  40fb73:	movsx  rcx,BYTE PTR [rsi+0x12]
  40fb78:	shl    rcx,0x28
  40fb7c:	or     rdx,rcx
  40fb7f:	movsx  rcx,BYTE PTR [rsi+0x11]
  40fb84:	shl    rcx,0x30
  40fb88:	or     rdx,rcx
  40fb8b:	movzx  edi,BYTE PTR [rbx]
  40fb8e:	shl    rdi,0x38
  40fb92:	or     rdi,rdx
  40fb95:	cmp    rax,0x3
  40fb99:	jl     40fff2 <main@@Base+0xb6b2>
  40fb9f:	movabs rax,0xffff000000000000
  40fba9:	and    rdi,rax
  40fbac:	movabs rax,0x6f6f000000000000
  40fbb6:	cmp    rdi,rax
  40fbb9:	jne    40fff2 <main@@Base+0xb6b2>
  40fbbf:	lea    rax,[rsi+0x13]
  40fbc3:	cmp    BYTE PTR [rsi+0x12],0x2e
  40fbc7:	cmovne rax,rbx
  40fbcb:	cmp    rax,rbx
  40fbce:	je     40fff2 <main@@Base+0xb6b2>
  40fbd4:	mov    rdi,r13
  40fbd7:	mov    rsi,rax
  40fbda:	mov    rdx,rbp
  40fbdd:	mov    rcx,r15
  40fbe0:	mov    r8,r14
  40fbe3:	mov    r9,r12
  40fbe6:	add    rsp,0x8
  40fbea:	pop    rbx
  40fbeb:	pop    r12
  40fbed:	pop    r13
  40fbef:	pop    r14
  40fbf1:	pop    r15
  40fbf3:	pop    rbp
  40fbf4:	jmp    414e10 <main@@Base+0x104d0>
  40fbf9:	and    dil,0xf
  40fbfd:	add    dil,0xff
  40fc01:	cmp    dil,0x7
  40fc05:	ja     40fff2 <main@@Base+0xb6b2>
  40fc0b:	xor    eax,eax
  40fc0d:	movzx  edx,dil
  40fc11:	lea    rdi,[rip+0x14898]        # 4244b0 <_IO_stdin_used@@Base+0x4b0>
  40fc18:	movsxd rdx,DWORD PTR [rdi+rdx*4]
  40fc1c:	add    rdx,rdi
  40fc1f:	jmp    rdx
  40fc21:	movsx  rax,BYTE PTR [rsi+0x17]
  40fc26:	movsx  rdx,BYTE PTR [rsi+0x16]
  40fc2b:	shl    rdx,0x8
  40fc2f:	or     rax,rdx
  40fc32:	movsx  rdx,BYTE PTR [rsi+0x15]
  40fc37:	shl    rdx,0x10
  40fc3b:	or     rax,rdx
  40fc3e:	movsx  rdx,BYTE PTR [rsi+0x14]
  40fc43:	shl    rdx,0x18
  40fc47:	or     rax,rdx
  40fc4a:	movsx  rdx,BYTE PTR [rsi+0x13]
  40fc4f:	shl    rdx,0x20
  40fc53:	or     rax,rdx
  40fc56:	movsx  rdx,BYTE PTR [rsi+0x12]
  40fc5b:	shl    rdx,0x28
  40fc5f:	or     rax,rdx
  40fc62:	movsx  rdx,BYTE PTR [rsi+0x11]
  40fc67:	shl    rdx,0x30
  40fc6b:	or     rax,rdx
  40fc6e:	movzx  edx,BYTE PTR [rcx]
  40fc71:	shl    rdx,0x38
  40fc75:	or     rdx,rax
  40fc78:	movabs rax,0x6f74656d70747965
  40fc82:	cmp    rdx,rax
  40fc85:	jne    40fff2 <main@@Base+0xb6b2>
  40fc8b:	lea    rbx,[rsi+0x18]
  40fc8f:	mov    rcx,rbp
  40fc92:	sub    rcx,rbx
  40fc95:	cmp    rcx,0x8
  40fc99:	jb     40fd9f <main@@Base+0xb45f>
  40fc9f:	movbe  rdi,QWORD PTR [rbx]
  40fca4:	cmp    rcx,0x4
  40fca8:	jge    40fe23 <main@@Base+0xb4e3>
  40fcae:	jmp    40fff2 <main@@Base+0xb6b2>
  40fcb3:	and    cl,0xf
  40fcb6:	add    cl,0xff
  40fcb9:	cmp    cl,0x7
  40fcbc:	ja     40ff33 <main@@Base+0xb5f3>
  40fcc2:	xor    eax,eax
  40fcc4:	movzx  ecx,cl
  40fcc7:	lea    rdx,[rip+0x14782]        # 424450 <_IO_stdin_used@@Base+0x450>
  40fcce:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  40fcd2:	add    rcx,rdx
  40fcd5:	jmp    rcx
  40fcd7:	movsx  rax,BYTE PTR [r8+0x7]
  40fcdc:	movsx  rcx,BYTE PTR [r8+0x6]
  40fce1:	shl    rcx,0x8
  40fce5:	or     rax,rcx
  40fce8:	movsx  rcx,BYTE PTR [r8+0x5]
  40fced:	shl    rcx,0x10
  40fcf1:	or     rax,rcx
  40fcf4:	movsx  rcx,BYTE PTR [r8+0x4]
  40fcf9:	shl    rcx,0x18
  40fcfd:	or     rax,rcx
  40fd00:	movsx  rcx,BYTE PTR [r8+0x3]
  40fd05:	shl    rcx,0x20
  40fd09:	or     rax,rcx
  40fd0c:	movsx  rcx,BYTE PTR [r8+0x2]
  40fd11:	shl    rcx,0x28
  40fd15:	or     rax,rcx
  40fd18:	movsx  rcx,BYTE PTR [r8+0x1]
  40fd1d:	shl    rcx,0x30
  40fd21:	or     rax,rcx
  40fd24:	movzx  ebx,BYTE PTR [r8]
  40fd28:	shl    rbx,0x38
  40fd2c:	or     rbx,rax
  40fd2f:	mov    rax,rbx
  40fd32:	shr    rax,0x28
  40fd36:	cmp    rax,0x466f6f
  40fd3c:	jne    40fd6e <main@@Base+0xb42e>
  40fd3e:	mov    ecx,0x3
  40fd43:	mov    rdi,r13
  40fd46:	mov    rsi,r8
  40fd49:	mov    rdx,rbp
  40fd4c:	mov    QWORD PTR [rsp],r8
  40fd50:	mov    r8,r12
  40fd53:	call   41fdc0 <flatcc_json_parser_match_constant@@Base>
  40fd58:	mov    r8,QWORD PTR [rsp]
  40fd5c:	cmp    rax,r8
  40fd5f:	je     40fd6e <main@@Base+0xb42e>
  40fd61:	mov    rsi,rax
  40fd64:	mov    ecx,0x11
  40fd69:	jmp    40ff24 <main@@Base+0xb5e4>
  40fd6e:	movabs rax,0x496e636c75646556
  40fd78:	cmp    rbx,rax
  40fd7b:	jne    40ff33 <main@@Base+0xb5f3>
  40fd81:	lea    rbx,[r8+0x8]
  40fd85:	mov    rcx,rbp
  40fd88:	sub    rcx,rbx
  40fd8b:	cmp    rcx,0x8
  40fd8f:	jb     40fe72 <main@@Base+0xb532>
  40fd95:	movbe  rcx,QWORD PTR [rbx]
  40fd9a:	jmp    40feed <main@@Base+0xb5ad>
  40fd9f:	mov    eax,ecx
  40fda1:	and    al,0xf
  40fda3:	add    al,0xff
  40fda5:	cmp    al,0x7
  40fda7:	ja     40fff2 <main@@Base+0xb6b2>
  40fdad:	xor    edx,edx
  40fdaf:	movzx  eax,al
  40fdb2:	lea    rdi,[rip+0x14717]        # 4244d0 <_IO_stdin_used@@Base+0x4d0>
  40fdb9:	movsxd rax,DWORD PTR [rdi+rax*4]
  40fdbd:	add    rax,rdi
  40fdc0:	jmp    rax
  40fdc2:	movsx  rdx,BYTE PTR [rsi+0x1f]
  40fdc7:	movsx  rax,BYTE PTR [rsi+0x1e]
  40fdcc:	shl    rax,0x8
  40fdd0:	or     rdx,rax
  40fdd3:	movsx  rax,BYTE PTR [rsi+0x1d]
  40fdd8:	shl    rax,0x10
  40fddc:	or     rdx,rax
  40fddf:	movsx  rax,BYTE PTR [rsi+0x1c]
  40fde4:	shl    rax,0x18
  40fde8:	or     rdx,rax
  40fdeb:	movsx  rax,BYTE PTR [rsi+0x1b]
  40fdf0:	shl    rax,0x20
  40fdf4:	or     rdx,rax
  40fdf7:	movsx  rax,BYTE PTR [rsi+0x1a]
  40fdfc:	shl    rax,0x28
  40fe00:	or     rdx,rax
  40fe03:	movsx  rax,BYTE PTR [rsi+0x19]
  40fe08:	shl    rax,0x30
  40fe0c:	or     rdx,rax
  40fe0f:	movzx  edi,BYTE PTR [rbx]
  40fe12:	shl    rdi,0x38
  40fe16:	or     rdi,rdx
  40fe19:	cmp    rcx,0x4
  40fe1d:	jl     40fff2 <main@@Base+0xb6b2>
  40fe23:	movabs rax,0xffffff0000000000
  40fe2d:	and    rdi,rax
  40fe30:	movabs rax,0x6e756d0000000000
  40fe3a:	cmp    rdi,rax
  40fe3d:	jne    40fff2 <main@@Base+0xb6b2>
  40fe43:	lea    rax,[rsi+0x1c]
  40fe47:	cmp    BYTE PTR [rsi+0x1b],0x2e
  40fe4b:	cmovne rax,rbx
  40fe4f:	cmp    rax,rbx
  40fe52:	je     40fff2 <main@@Base+0xb6b2>
  40fe58:	mov    rcx,rbp
  40fe5b:	sub    rcx,rax
  40fe5e:	cmp    rcx,0x8
  40fe62:	jb     40ff3b <main@@Base+0xb5fb>
  40fe68:	movbe  rcx,QWORD PTR [rax]
  40fe6d:	jmp    40ffb6 <main@@Base+0xb676>
  40fe72:	and    cl,0xf
  40fe75:	add    cl,0xff
  40fe78:	cmp    cl,0x7
  40fe7b:	ja     40ff33 <main@@Base+0xb5f3>
  40fe81:	xor    eax,eax
  40fe83:	movzx  ecx,cl
  40fe86:	lea    rdx,[rip+0x145e3]        # 424470 <_IO_stdin_used@@Base+0x470>
  40fe8d:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  40fe91:	add    rcx,rdx
  40fe94:	jmp    rcx
  40fe96:	movsx  rax,BYTE PTR [r8+0xf]
  40fe9b:	movsx  rcx,BYTE PTR [r8+0xe]
  40fea0:	shl    rcx,0x8
  40fea4:	or     rax,rcx
  40fea7:	movsx  rcx,BYTE PTR [r8+0xd]
  40feac:	shl    rcx,0x10
  40feb0:	or     rax,rcx
  40feb3:	movsx  rcx,BYTE PTR [r8+0xc]
  40feb8:	shl    rcx,0x18
  40febc:	or     rax,rcx
  40febf:	movsx  rcx,BYTE PTR [r8+0xb]
  40fec4:	shl    rcx,0x20
  40fec8:	or     rax,rcx
  40fecb:	movsx  rcx,BYTE PTR [r8+0xa]
  40fed0:	shl    rcx,0x28
  40fed4:	or     rax,rcx
  40fed7:	movsx  rcx,BYTE PTR [r8+0x9]
  40fedc:	shl    rcx,0x30
  40fee0:	or     rax,rcx
  40fee3:	movzx  ecx,BYTE PTR [rbx]
  40fee6:	shl    rcx,0x38
  40feea:	or     rcx,rax
  40feed:	shr    rcx,0x30
  40fef1:	cmp    rcx,0x616c
  40fef8:	jne    40ff33 <main@@Base+0xb5f3>
  40fefa:	mov    ecx,0x2
  40feff:	mov    rdi,r13
  40ff02:	mov    rsi,rbx
  40ff05:	mov    rdx,rbp
  40ff08:	mov    rbp,r8
  40ff0b:	mov    r8,r12
  40ff0e:	call   41fdc0 <flatcc_json_parser_match_constant@@Base>
  40ff13:	mov    rsi,rbp
  40ff16:	cmp    rax,rbx
  40ff19:	je     40fff2 <main@@Base+0xb6b2>
  40ff1f:	xor    ecx,ecx
  40ff21:	mov    rsi,rax
  40ff24:	mov    QWORD PTR [r14],rcx
  40ff27:	mov    DWORD PTR [r15],0x0
  40ff2e:	jmp    40fff2 <main@@Base+0xb6b2>
  40ff33:	mov    rsi,r8
  40ff36:	jmp    40fff2 <main@@Base+0xb6b2>
  40ff3b:	and    cl,0xf
  40ff3e:	add    cl,0xff
  40ff41:	cmp    cl,0x7
  40ff44:	ja     40ffef <main@@Base+0xb6af>
  40ff4a:	xor    esi,esi
  40ff4c:	movzx  ecx,cl
  40ff4f:	lea    rdx,[rip+0x1459a]        # 4244f0 <_IO_stdin_used@@Base+0x4f0>
  40ff56:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  40ff5a:	add    rcx,rdx
  40ff5d:	jmp    rcx
  40ff5f:	movsx  rsi,BYTE PTR [rax+0x7]
  40ff64:	movsx  rcx,BYTE PTR [rax+0x6]
  40ff69:	shl    rcx,0x8
  40ff6d:	or     rsi,rcx
  40ff70:	movsx  rcx,BYTE PTR [rax+0x5]
  40ff75:	shl    rcx,0x10
  40ff79:	or     rsi,rcx
  40ff7c:	movsx  rcx,BYTE PTR [rax+0x4]
  40ff81:	shl    rcx,0x18
  40ff85:	or     rsi,rcx
  40ff88:	movsx  rcx,BYTE PTR [rax+0x3]
  40ff8d:	shl    rcx,0x20
  40ff91:	or     rsi,rcx
  40ff94:	movsx  rcx,BYTE PTR [rax+0x2]
  40ff99:	shl    rcx,0x28
  40ff9d:	or     rsi,rcx
  40ffa0:	movsx  rcx,BYTE PTR [rax+0x1]
  40ffa5:	shl    rcx,0x30
  40ffa9:	or     rsi,rcx
  40ffac:	movzx  ecx,BYTE PTR [rax]
  40ffaf:	shl    rcx,0x38
  40ffb3:	or     rcx,rsi
  40ffb6:	shr    rcx,0x38
  40ffba:	cmp    rcx,0x78
  40ffbe:	jne    40ffef <main@@Base+0xb6af>
  40ffc0:	mov    ecx,0x1
  40ffc5:	mov    rdi,r13
  40ffc8:	mov    rsi,rax
  40ffcb:	mov    rdx,rbp
  40ffce:	mov    rbx,rax
  40ffd1:	mov    r8,r12
  40ffd4:	call   41fdc0 <flatcc_json_parser_match_constant@@Base>
  40ffd9:	mov    rsi,rbx
  40ffdc:	cmp    rax,rbx
  40ffdf:	je     40fff2 <main@@Base+0xb6b2>
  40ffe1:	mov    QWORD PTR [r14],0x0
  40ffe8:	mov    DWORD PTR [r15],0x0
  40ffef:	mov    rsi,rax
  40fff2:	mov    rax,rsi
  40fff5:	add    rsp,0x8
  40fff9:	pop    rbx
  40fffa:	pop    r12
  40fffc:	pop    r13
  40fffe:	pop    r14
  410000:	pop    r15
  410002:	pop    rbp
  410003:	ret    
  410004:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41000e:	xchg   ax,ax
  410010:	push   rbp
  410011:	push   r15
  410013:	push   r14
  410015:	push   r13
  410017:	push   r12
  410019:	push   rbx
  41001a:	sub    rsp,0x38
  41001e:	mov    r15,r8
  410021:	mov    r13,rdx
  410024:	mov    rbx,rsi
  410027:	mov    r14,rdi
  41002a:	mov    BYTE PTR [r8],0x0
  41002e:	cmp    rsi,rdx
  410031:	je     41004d <main@@Base+0xb70d>
  410033:	mov    al,BYTE PTR [rbx]
  410035:	cmp    al,0x2e
  410037:	je     41005e <main@@Base+0xb71e>
  410039:	cmp    al,0x22
  41003b:	jne    4101f1 <main@@Base+0xb8b1>
  410041:	add    rbx,0x1
  410045:	mov    DWORD PTR [r14+0x14],0x0
  41004d:	cmp    DWORD PTR [r14+0x14],0x0
  410052:	je     410081 <main@@Base+0xb741>
  410054:	cmp    rbx,r13
  410057:	jne    4100c0 <main@@Base+0xb780>
  410059:	jmp    4101c4 <main@@Base+0xb884>
  41005e:	mov    rbp,rcx
  410061:	mov    ecx,0x5
  410066:	mov    rdi,r14
  410069:	mov    rsi,rbx
  41006c:	mov    rdx,r13
  41006f:	call   41f940 <flatcc_json_parser_set_error@@Base>
  410074:	mov    rcx,rbp
  410077:	mov    rbx,rax
  41007a:	cmp    DWORD PTR [r14+0x14],0x0
  41007f:	jne    410054 <main@@Base+0xb714>
  410081:	mov    rbp,rcx
  410084:	mov    rax,r13
  410087:	sub    rax,rbx
  41008a:	cmp    rax,0x2
  41008e:	jl     4100a3 <main@@Base+0xb763>
  410090:	cmp    BYTE PTR [rbx],0x20
  410093:	jg     4100b4 <main@@Base+0xb774>
  410095:	jne    4100a3 <main@@Base+0xb763>
  410097:	cmp    BYTE PTR [rbx+0x1],0x20
  41009b:	jle    4100a3 <main@@Base+0xb763>
  41009d:	add    rbx,0x1
  4100a1:	jmp    4100b4 <main@@Base+0xb774>
  4100a3:	mov    rdi,r14
  4100a6:	mov    rsi,rbx
  4100a9:	mov    rdx,r13
  4100ac:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  4100b1:	mov    rbx,rax
  4100b4:	mov    rcx,rbp
  4100b7:	cmp    rbx,r13
  4100ba:	je     4101c4 <main@@Base+0xb884>
  4100c0:	lea    rax,[rcx+0x8]
  4100c4:	xor    edx,edx
  4100c6:	lea    r12,[rsp+0x18]
  4100cb:	mov    DWORD PTR [rsp+0xc],0x0
  4100d3:	mov    QWORD PTR [rsp+0x20],r15
  4100d8:	mov    QWORD PTR [rsp+0x10],rcx
  4100dd:	mov    QWORD PTR [rsp+0x28],rax
  4100e2:	mov    DWORD PTR [rsp+0x8],edx
  4100e6:	mov    rbp,QWORD PTR [rcx]
  4100e9:	mov    r15,rax
  4100ec:	nop    DWORD PTR [rax+0x0]
  4100f0:	mov    rdi,r14
  4100f3:	mov    rsi,rbx
  4100f6:	mov    rdx,r13
  4100f9:	lea    rcx,[rsp+0x1c]
  4100fe:	lea    r8,[rsp+0x30]
  410103:	mov    r9,r12
  410106:	call   rbp
  410108:	cmp    rax,r13
  41010b:	je     4101c4 <main@@Base+0xb884>
  410111:	mov    rbp,rax
  410114:	cmp    rax,rbx
  410117:	jne    410130 <main@@Base+0xb7f0>
  410119:	mov    rbp,QWORD PTR [r15]
  41011c:	add    r15,0x8
  410120:	test   rbp,rbp
  410123:	jne    4100f0 <main@@Base+0xb7b0>
  410125:	jmp    4101c9 <main@@Base+0xb889>
  41012a:	nop    WORD PTR [rax+rax*1+0x0]
  410130:	mov    ebx,DWORD PTR [rsp+0xc]
  410134:	test   ebx,ebx
  410136:	je     410143 <main@@Base+0xb803>
  410138:	cmp    DWORD PTR [r14+0x14],0x0
  41013d:	jne    410209 <main@@Base+0xb8c9>
  410143:	mov    rax,QWORD PTR [rsp+0x30]
  410148:	cmp    DWORD PTR [rsp+0x1c],0x0
  41014d:	je     410163 <main@@Base+0xb823>
  41014f:	cmp    rax,0x81
  410155:	mov    r15,QWORD PTR [rsp+0x20]
  41015a:	jb     410193 <main@@Base+0xb853>
  41015c:	mov    ecx,0x8
  410161:	jmp    410175 <main@@Base+0xb835>
  410163:	cmp    rax,0x80
  410169:	mov    r15,QWORD PTR [rsp+0x20]
  41016e:	jb     410196 <main@@Base+0xb856>
  410170:	mov    ecx,0x7
  410175:	mov    rdi,r14
  410178:	mov    rsi,rbp
  41017b:	mov    rdx,r13
  41017e:	call   41f940 <flatcc_json_parser_set_error@@Base>
  410183:	mov    rcx,QWORD PTR [rsp+0x10]
  410188:	mov    edx,DWORD PTR [rsp+0x8]
  41018c:	cmp    rax,r13
  41018f:	jne    4101a5 <main@@Base+0xb865>
  410191:	jmp    4101c4 <main@@Base+0xb884>
  410193:	neg    rax
  410196:	mov    edx,eax
  410198:	mov    rax,rbp
  41019b:	mov    rcx,QWORD PTR [rsp+0x10]
  4101a0:	cmp    rax,r13
  4101a3:	je     4101c4 <main@@Base+0xb884>
  4101a5:	add    ebx,0x1
  4101a8:	mov    DWORD PTR [rsp+0xc],ebx
  4101ac:	mov    rbx,rbp
  4101af:	add    BYTE PTR [r15],dl
  4101b2:	cmp    DWORD PTR [rsp+0x18],0x0
  4101b7:	mov    rax,QWORD PTR [rsp+0x28]
  4101bc:	jne    4100e2 <main@@Base+0xb7a2>
  4101c2:	jmp    4101df <main@@Base+0xb89f>
  4101c4:	mov    rbp,r13
  4101c7:	jmp    4101df <main@@Base+0xb89f>
  4101c9:	mov    ecx,0x17
  4101ce:	mov    rdi,r14
  4101d1:	mov    rsi,rbx
  4101d4:	mov    rdx,r13
  4101d7:	call   41f940 <flatcc_json_parser_set_error@@Base>
  4101dc:	mov    rbp,rax
  4101df:	mov    rax,rbp
  4101e2:	add    rsp,0x38
  4101e6:	pop    rbx
  4101e7:	pop    r12
  4101e9:	pop    r13
  4101eb:	pop    r14
  4101ed:	pop    r15
  4101ef:	pop    rbp
  4101f0:	ret    
  4101f1:	mov    DWORD PTR [r14+0x14],0x1
  4101f9:	cmp    DWORD PTR [r14+0x14],0x0
  4101fe:	jne    410054 <main@@Base+0xb714>
  410204:	jmp    410081 <main@@Base+0xb741>
  410209:	mov    ecx,0xe
  41020e:	mov    rdi,r14
  410211:	mov    rsi,rbp
  410214:	jmp    4101d4 <main@@Base+0xb894>
  410216:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410220:	push   rbp
  410221:	push   r15
  410223:	push   r14
  410225:	push   r13
  410227:	push   r12
  410229:	push   rbx
  41022a:	sub    rsp,0x38
  41022e:	mov    r15,r8
  410231:	mov    r13,rdx
  410234:	mov    rbx,rsi
  410237:	mov    r14,rdi
  41023a:	mov    BYTE PTR [r8],0x0
  41023e:	cmp    rsi,rdx
  410241:	je     41025d <main@@Base+0xb91d>
  410243:	mov    al,BYTE PTR [rbx]
  410245:	cmp    al,0x2e
  410247:	je     41026e <main@@Base+0xb92e>
  410249:	cmp    al,0x22
  41024b:	jne    41040a <main@@Base+0xbaca>
  410251:	add    rbx,0x1
  410255:	mov    DWORD PTR [r14+0x14],0x0
  41025d:	cmp    DWORD PTR [r14+0x14],0x0
  410262:	je     410291 <main@@Base+0xb951>
  410264:	cmp    rbx,r13
  410267:	jne    4102d0 <main@@Base+0xb990>
  410269:	jmp    4103dd <main@@Base+0xba9d>
  41026e:	mov    rbp,rcx
  410271:	mov    ecx,0x5
  410276:	mov    rdi,r14
  410279:	mov    rsi,rbx
  41027c:	mov    rdx,r13
  41027f:	call   41f940 <flatcc_json_parser_set_error@@Base>
  410284:	mov    rcx,rbp
  410287:	mov    rbx,rax
  41028a:	cmp    DWORD PTR [r14+0x14],0x0
  41028f:	jne    410264 <main@@Base+0xb924>
  410291:	mov    rbp,rcx
  410294:	mov    rax,r13
  410297:	sub    rax,rbx
  41029a:	cmp    rax,0x2
  41029e:	jl     4102b3 <main@@Base+0xb973>
  4102a0:	cmp    BYTE PTR [rbx],0x20
  4102a3:	jg     4102c4 <main@@Base+0xb984>
  4102a5:	jne    4102b3 <main@@Base+0xb973>
  4102a7:	cmp    BYTE PTR [rbx+0x1],0x20
  4102ab:	jle    4102b3 <main@@Base+0xb973>
  4102ad:	add    rbx,0x1
  4102b1:	jmp    4102c4 <main@@Base+0xb984>
  4102b3:	mov    rdi,r14
  4102b6:	mov    rsi,rbx
  4102b9:	mov    rdx,r13
  4102bc:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  4102c1:	mov    rbx,rax
  4102c4:	mov    rcx,rbp
  4102c7:	cmp    rbx,r13
  4102ca:	je     4103dd <main@@Base+0xba9d>
  4102d0:	lea    rax,[rcx+0x8]
  4102d4:	mov    DWORD PTR [rsp+0x8],0x0
  4102dc:	lea    r12,[rsp+0x18]
  4102e1:	mov    DWORD PTR [rsp+0xc],0x0
  4102e9:	mov    QWORD PTR [rsp+0x20],r15
  4102ee:	mov    QWORD PTR [rsp+0x10],rcx
  4102f3:	mov    QWORD PTR [rsp+0x28],rax
  4102f8:	mov    rbp,QWORD PTR [rcx]
  4102fb:	mov    r15,rax
  4102fe:	xchg   ax,ax
  410300:	mov    rdi,r14
  410303:	mov    rsi,rbx
  410306:	mov    rdx,r13
  410309:	lea    rcx,[rsp+0x1c]
  41030e:	lea    r8,[rsp+0x30]
  410313:	mov    r9,r12
  410316:	call   rbp
  410318:	cmp    rax,r13
  41031b:	je     4103dd <main@@Base+0xba9d>
  410321:	mov    rbp,rax
  410324:	cmp    rax,rbx
  410327:	jne    410340 <main@@Base+0xba00>
  410329:	mov    rbp,QWORD PTR [r15]
  41032c:	add    r15,0x8
  410330:	test   rbp,rbp
  410333:	jne    410300 <main@@Base+0xb9c0>
  410335:	jmp    4103e2 <main@@Base+0xbaa2>
  41033a:	nop    WORD PTR [rax+rax*1+0x0]
  410340:	mov    ebx,DWORD PTR [rsp+0xc]
  410344:	test   ebx,ebx
  410346:	je     410353 <main@@Base+0xba13>
  410348:	cmp    DWORD PTR [r14+0x14],0x0
  41034d:	jne    410422 <main@@Base+0xbae2>
  410353:	cmp    DWORD PTR [rsp+0x1c],0x0
  410358:	je     410374 <main@@Base+0xba34>
  41035a:	mov    ecx,0x8
  41035f:	mov    rdi,r14
  410362:	mov    rsi,rbp
  410365:	mov    rdx,r13
  410368:	call   41f940 <flatcc_json_parser_set_error@@Base>
  41036d:	mov    r15,QWORD PTR [rsp+0x20]
  410372:	jmp    4103b0 <main@@Base+0xba70>
  410374:	mov    rax,QWORD PTR [rsp+0x30]
  410379:	cmp    rax,0x100
  41037f:	mov    r15,QWORD PTR [rsp+0x20]
  410384:	jb     41039b <main@@Base+0xba5b>
  410386:	mov    ecx,0x7
  41038b:	mov    rdi,r14
  41038e:	mov    rsi,rbp
  410391:	mov    rdx,r13
  410394:	call   41f940 <flatcc_json_parser_set_error@@Base>
  410399:	jmp    4103b0 <main@@Base+0xba70>
  41039b:	mov    DWORD PTR [rsp+0x8],eax
  41039f:	mov    rax,rbp
  4103a2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4103ac:	nop    DWORD PTR [rax+0x0]
  4103b0:	mov    rcx,QWORD PTR [rsp+0x10]
  4103b5:	cmp    rax,r13
  4103b8:	je     4103dd <main@@Base+0xba9d>
  4103ba:	add    ebx,0x1
  4103bd:	mov    DWORD PTR [rsp+0xc],ebx
  4103c1:	mov    rbx,rbp
  4103c4:	mov    eax,DWORD PTR [rsp+0x8]
  4103c8:	add    BYTE PTR [r15],al
  4103cb:	cmp    DWORD PTR [rsp+0x18],0x0
  4103d0:	mov    rax,QWORD PTR [rsp+0x28]
  4103d5:	jne    4102f8 <main@@Base+0xb9b8>
  4103db:	jmp    4103f8 <main@@Base+0xbab8>
  4103dd:	mov    rbp,r13
  4103e0:	jmp    4103f8 <main@@Base+0xbab8>
  4103e2:	mov    ecx,0x17
  4103e7:	mov    rdi,r14
  4103ea:	mov    rsi,rbx
  4103ed:	mov    rdx,r13
  4103f0:	call   41f940 <flatcc_json_parser_set_error@@Base>
  4103f5:	mov    rbp,rax
  4103f8:	mov    rax,rbp
  4103fb:	add    rsp,0x38
  4103ff:	pop    rbx
  410400:	pop    r12
  410402:	pop    r13
  410404:	pop    r14
  410406:	pop    r15
  410408:	pop    rbp
  410409:	ret    
  41040a:	mov    DWORD PTR [r14+0x14],0x1
  410412:	cmp    DWORD PTR [r14+0x14],0x0
  410417:	jne    410264 <main@@Base+0xb924>
  41041d:	jmp    410291 <main@@Base+0xb951>
  410422:	mov    ecx,0xe
  410427:	mov    rdi,r14
  41042a:	mov    rsi,rbp
  41042d:	jmp    4103ed <main@@Base+0xbaad>
  41042f:	nop
  410430:	push   rbp
  410431:	push   r15
  410433:	push   r14
  410435:	push   r13
  410437:	push   r12
  410439:	push   rbx
  41043a:	sub    rsp,0x38
  41043e:	mov    r15,r8
  410441:	mov    r13,rdx
  410444:	mov    rbx,rsi
  410447:	mov    r14,rdi
  41044a:	mov    WORD PTR [r8],0x0
  410450:	cmp    rsi,rdx
  410453:	je     41046f <main@@Base+0xbb2f>
  410455:	mov    al,BYTE PTR [rbx]
  410457:	cmp    al,0x2e
  410459:	je     410480 <main@@Base+0xbb40>
  41045b:	cmp    al,0x22
  41045d:	jne    410612 <main@@Base+0xbcd2>
  410463:	add    rbx,0x1
  410467:	mov    DWORD PTR [r14+0x14],0x0
  41046f:	cmp    DWORD PTR [r14+0x14],0x0
  410474:	je     4104a3 <main@@Base+0xbb63>
  410476:	cmp    rbx,r13
  410479:	jne    4104e2 <main@@Base+0xbba2>
  41047b:	jmp    4105e5 <main@@Base+0xbca5>
  410480:	mov    rbp,rcx
  410483:	mov    ecx,0x5
  410488:	mov    rdi,r14
  41048b:	mov    rsi,rbx
  41048e:	mov    rdx,r13
  410491:	call   41f940 <flatcc_json_parser_set_error@@Base>
  410496:	mov    rcx,rbp
  410499:	mov    rbx,rax
  41049c:	cmp    DWORD PTR [r14+0x14],0x0
  4104a1:	jne    410476 <main@@Base+0xbb36>
  4104a3:	mov    rbp,rcx
  4104a6:	mov    rax,r13
  4104a9:	sub    rax,rbx
  4104ac:	cmp    rax,0x2
  4104b0:	jl     4104c5 <main@@Base+0xbb85>
  4104b2:	cmp    BYTE PTR [rbx],0x20
  4104b5:	jg     4104d6 <main@@Base+0xbb96>
  4104b7:	jne    4104c5 <main@@Base+0xbb85>
  4104b9:	cmp    BYTE PTR [rbx+0x1],0x20
  4104bd:	jle    4104c5 <main@@Base+0xbb85>
  4104bf:	add    rbx,0x1
  4104c3:	jmp    4104d6 <main@@Base+0xbb96>
  4104c5:	mov    rdi,r14
  4104c8:	mov    rsi,rbx
  4104cb:	mov    rdx,r13
  4104ce:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  4104d3:	mov    rbx,rax
  4104d6:	mov    rcx,rbp
  4104d9:	cmp    rbx,r13
  4104dc:	je     4105e5 <main@@Base+0xbca5>
  4104e2:	lea    rax,[rcx+0x8]
  4104e6:	xor    edx,edx
  4104e8:	lea    r12,[rsp+0x18]
  4104ed:	mov    DWORD PTR [rsp+0xc],0x0
  4104f5:	mov    QWORD PTR [rsp+0x20],r15
  4104fa:	mov    QWORD PTR [rsp+0x10],rcx
  4104ff:	mov    QWORD PTR [rsp+0x28],rax
  410504:	mov    DWORD PTR [rsp+0x8],edx
  410508:	mov    rbp,QWORD PTR [rcx]
  41050b:	mov    r15,rax
  41050e:	xchg   ax,ax
  410510:	mov    rdi,r14
  410513:	mov    rsi,rbx
  410516:	mov    rdx,r13
  410519:	lea    rcx,[rsp+0x1c]
  41051e:	lea    r8,[rsp+0x30]
  410523:	mov    r9,r12
  410526:	call   rbp
  410528:	cmp    rax,r13
  41052b:	je     4105e5 <main@@Base+0xbca5>
  410531:	mov    rbp,rax
  410534:	cmp    rax,rbx
  410537:	jne    410550 <main@@Base+0xbc10>
  410539:	mov    rbp,QWORD PTR [r15]
  41053c:	add    r15,0x8
  410540:	test   rbp,rbp
  410543:	jne    410510 <main@@Base+0xbbd0>
  410545:	jmp    4105ea <main@@Base+0xbcaa>
  41054a:	nop    WORD PTR [rax+rax*1+0x0]
  410550:	mov    ebx,DWORD PTR [rsp+0xc]
  410554:	test   ebx,ebx
  410556:	je     410563 <main@@Base+0xbc23>
  410558:	cmp    DWORD PTR [r14+0x14],0x0
  41055d:	jne    41062a <main@@Base+0xbcea>
  410563:	mov    rax,QWORD PTR [rsp+0x30]
  410568:	cmp    DWORD PTR [rsp+0x1c],0x0
  41056d:	je     410583 <main@@Base+0xbc43>
  41056f:	cmp    rax,0x8001
  410575:	mov    r15,QWORD PTR [rsp+0x20]
  41057a:	jb     4105b3 <main@@Base+0xbc73>
  41057c:	mov    ecx,0x8
  410581:	jmp    410595 <main@@Base+0xbc55>
  410583:	cmp    rax,0x8000
  410589:	mov    r15,QWORD PTR [rsp+0x20]
  41058e:	jb     4105b6 <main@@Base+0xbc76>
  410590:	mov    ecx,0x7
  410595:	mov    rdi,r14
  410598:	mov    rsi,rbp
  41059b:	mov    rdx,r13
  41059e:	call   41f940 <flatcc_json_parser_set_error@@Base>
  4105a3:	mov    rcx,QWORD PTR [rsp+0x10]
  4105a8:	mov    edx,DWORD PTR [rsp+0x8]
  4105ac:	cmp    rax,r13
  4105af:	jne    4105c5 <main@@Base+0xbc85>
  4105b1:	jmp    4105e5 <main@@Base+0xbca5>
  4105b3:	neg    rax
  4105b6:	mov    edx,eax
  4105b8:	mov    rax,rbp
  4105bb:	mov    rcx,QWORD PTR [rsp+0x10]
  4105c0:	cmp    rax,r13
  4105c3:	je     4105e5 <main@@Base+0xbca5>
  4105c5:	add    ebx,0x1
  4105c8:	mov    DWORD PTR [rsp+0xc],ebx
  4105cc:	add    WORD PTR [r15],dx
  4105d0:	cmp    DWORD PTR [rsp+0x18],0x0
  4105d5:	mov    rbx,rbp
  4105d8:	mov    rax,QWORD PTR [rsp+0x28]
  4105dd:	jne    410504 <main@@Base+0xbbc4>
  4105e3:	jmp    410600 <main@@Base+0xbcc0>
  4105e5:	mov    rbp,r13
  4105e8:	jmp    410600 <main@@Base+0xbcc0>
  4105ea:	mov    ecx,0x17
  4105ef:	mov    rdi,r14
  4105f2:	mov    rsi,rbx
  4105f5:	mov    rdx,r13
  4105f8:	call   41f940 <flatcc_json_parser_set_error@@Base>
  4105fd:	mov    rbp,rax
  410600:	mov    rax,rbp
  410603:	add    rsp,0x38
  410607:	pop    rbx
  410608:	pop    r12
  41060a:	pop    r13
  41060c:	pop    r14
  41060e:	pop    r15
  410610:	pop    rbp
  410611:	ret    
  410612:	mov    DWORD PTR [r14+0x14],0x1
  41061a:	cmp    DWORD PTR [r14+0x14],0x0
  41061f:	jne    410476 <main@@Base+0xbb36>
  410625:	jmp    4104a3 <main@@Base+0xbb63>
  41062a:	mov    ecx,0xe
  41062f:	mov    rdi,r14
  410632:	mov    rsi,rbp
  410635:	jmp    4105f5 <main@@Base+0xbcb5>
  410637:	nop    WORD PTR [rax+rax*1+0x0]
  410640:	push   rbp
  410641:	push   r15
  410643:	push   r14
  410645:	push   r13
  410647:	push   r12
  410649:	push   rbx
  41064a:	sub    rsp,0x18
  41064e:	mov    r12,rdx
  410651:	mov    r14,rdi
  410654:	cmp    rsi,rdx
  410657:	je     410687 <main@@Base+0xbd47>
  410659:	cmp    BYTE PTR [rsi],0x7b
  41065c:	jne    410687 <main@@Base+0xbd47>
  41065e:	mov    r15,rcx
  410661:	lea    rax,[rsi+0x1]
  410665:	mov    rcx,r12
  410668:	sub    rcx,rax
  41066b:	cmp    rcx,0x2
  41066f:	jl     4106a5 <main@@Base+0xbd65>
  410671:	cmp    BYTE PTR [rax],0x20
  410674:	jg     4106b3 <main@@Base+0xbd73>
  410676:	jne    4106a5 <main@@Base+0xbd65>
  410678:	cmp    BYTE PTR [rsi+0x2],0x20
  41067c:	jle    4106a5 <main@@Base+0xbd65>
  41067e:	add    rsi,0x2
  410682:	mov    rax,rsi
  410685:	jmp    4106b3 <main@@Base+0xbd73>
  410687:	mov    ecx,0x15
  41068c:	mov    rdi,r14
  41068f:	mov    rdx,r12
  410692:	add    rsp,0x18
  410696:	pop    rbx
  410697:	pop    r12
  410699:	pop    r13
  41069b:	pop    r14
  41069d:	pop    r15
  41069f:	pop    rbp
  4106a0:	jmp    41f940 <flatcc_json_parser_set_error@@Base>
  4106a5:	mov    rdi,r14
  4106a8:	mov    rsi,rax
  4106ab:	mov    rdx,r12
  4106ae:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  4106b3:	mov    rsi,r12
  4106b6:	cmp    rax,r12
  4106b9:	je     410704 <main@@Base+0xbdc4>
  4106bb:	cmp    BYTE PTR [rax],0x7d
  4106be:	jne    410701 <main@@Base+0xbdc1>
  4106c0:	lea    rcx,[rax+0x1]
  4106c4:	mov    rdx,r12
  4106c7:	sub    rdx,rcx
  4106ca:	cmp    rdx,0x2
  4106ce:	jl     4106e5 <main@@Base+0xbda5>
  4106d0:	cmp    BYTE PTR [rcx],0x20
  4106d3:	jg     410d29 <main@@Base+0xc3e9>
  4106d9:	jne    4106e5 <main@@Base+0xbda5>
  4106db:	cmp    BYTE PTR [rax+0x2],0x20
  4106df:	jg     410ce9 <main@@Base+0xc3a9>
  4106e5:	mov    rdi,r14
  4106e8:	mov    rsi,rcx
  4106eb:	mov    rdx,r12
  4106ee:	add    rsp,0x18
  4106f2:	pop    rbx
  4106f3:	pop    r12
  4106f5:	pop    r13
  4106f7:	pop    r14
  4106f9:	pop    r15
  4106fb:	pop    rbp
  4106fc:	jmp    41f9d0 <flatcc_json_parser_space_ext@@Base>
  410701:	mov    rsi,rax
  410704:	movabs rbx,0xff00000000000000
  41070e:	xchg   ax,ax
  410710:	mov    r13,r12
  410713:	cmp    rsi,r12
  410716:	je     41076b <main@@Base+0xbe2b>
  410718:	movzx  eax,BYTE PTR [rsi]
  41071b:	cmp    al,0x2e
  41071d:	je     410740 <main@@Base+0xbe00>
  41071f:	cmp    al,0x22
  410721:	jne    410760 <main@@Base+0xbe20>
  410723:	add    rsi,0x1
  410727:	mov    DWORD PTR [r14+0x14],0x0
  41072f:	jmp    410768 <main@@Base+0xbe28>
  410731:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41073b:	nop    DWORD PTR [rax+rax*1+0x0]
  410740:	mov    ecx,0x5
  410745:	mov    rdi,r14
  410748:	mov    rdx,r12
  41074b:	call   41f940 <flatcc_json_parser_set_error@@Base>
  410750:	mov    r13,rax
  410753:	jmp    41076b <main@@Base+0xbe2b>
  410755:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41075f:	nop
  410760:	mov    DWORD PTR [r14+0x14],0x1
  410768:	mov    r13,rsi
  41076b:	mov    rax,r12
  41076e:	sub    rax,r13
  410771:	cmp    rax,0x8
  410775:	jb     410790 <main@@Base+0xbe50>
  410777:	movbe  rcx,QWORD PTR [r13+0x0]
  41077d:	jmp    410823 <main@@Base+0xbee3>
  410782:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41078c:	nop    DWORD PTR [rax+0x0]
  410790:	mov    ecx,eax
  410792:	and    cl,0xf
  410795:	add    cl,0xff
  410798:	cmp    cl,0x7
  41079b:	ja     410b70 <main@@Base+0xc230>
  4107a1:	mov    r10,rbx
  4107a4:	movzx  ecx,cl
  4107a7:	lea    rdx,[rip+0x13e02]        # 4245b0 <_IO_stdin_used@@Base+0x5b0>
  4107ae:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  4107b2:	add    rcx,rdx
  4107b5:	xor    r8d,r8d
  4107b8:	xor    r9d,r9d
  4107bb:	xor    edx,edx
  4107bd:	xor    esi,esi
  4107bf:	xor    ebp,ebp
  4107c1:	xor    ebx,ebx
  4107c3:	xor    edi,edi
  4107c5:	jmp    rcx
  4107c7:	movsx  r8,BYTE PTR [r13+0x7]
  4107cc:	movsx  r9,BYTE PTR [r13+0x6]
  4107d1:	shl    r9,0x8
  4107d5:	or     r9,r8
  4107d8:	movsx  rdx,BYTE PTR [r13+0x5]
  4107dd:	shl    rdx,0x10
  4107e1:	or     rdx,r9
  4107e4:	movsx  rsi,BYTE PTR [r13+0x4]
  4107e9:	shl    rsi,0x18
  4107ed:	or     rsi,rdx
  4107f0:	movsx  rbp,BYTE PTR [r13+0x3]
  4107f5:	shl    rbp,0x20
  4107f9:	or     rbp,rsi
  4107fc:	movsx  rbx,BYTE PTR [r13+0x2]
  410801:	shl    rbx,0x28
  410805:	or     rbx,rbp
  410808:	movsx  rdi,BYTE PTR [r13+0x1]
  41080d:	shl    rdi,0x30
  410811:	or     rdi,rbx
  410814:	movzx  ecx,BYTE PTR [r13+0x0]
  410819:	shl    rcx,0x38
  41081d:	or     rcx,rdi
  410820:	mov    rbx,r10
  410823:	and    rcx,rbx
  410826:	movabs rdx,0x6100000000000000
  410830:	cmp    rcx,rdx
  410833:	je     410880 <main@@Base+0xbf40>
  410835:	movabs rdx,0x6200000000000000
  41083f:	cmp    rcx,rdx
  410842:	jne    410b70 <main@@Base+0xc230>
  410848:	mov    rbp,r13
  41084b:	cmp    rax,0x2
  41084f:	jl     410a20 <main@@Base+0xc0e0>
  410855:	cmp    DWORD PTR [r14+0x14],0x0
  41085a:	movzx  eax,BYTE PTR [r13+0x1]
  41085f:	je     4108b6 <main@@Base+0xbf76>
  410861:	cmp    al,0x21
  410863:	jl     410870 <main@@Base+0xbf30>
  410865:	mov    rbp,r13
  410868:	cmp    al,0x3a
  41086a:	jne    410a20 <main@@Base+0xc0e0>
  410870:	lea    rsi,[r13+0x1]
  410874:	mov    DWORD PTR [r14+0x14],0x0
  41087c:	jmp    4108c5 <main@@Base+0xbf85>
  41087e:	xchg   ax,ax
  410880:	mov    rbp,r13
  410883:	cmp    rax,0x2
  410887:	jl     410b11 <main@@Base+0xc1d1>
  41088d:	cmp    DWORD PTR [r14+0x14],0x0
  410892:	movzx  eax,BYTE PTR [r13+0x1]
  410897:	je     4108ec <main@@Base+0xbfac>
  410899:	cmp    al,0x21
  41089b:	jl     4108a8 <main@@Base+0xbf68>
  41089d:	mov    rbp,r13
  4108a0:	cmp    al,0x3a
  4108a2:	jne    410b11 <main@@Base+0xc1d1>
  4108a8:	lea    rsi,[r13+0x1]
  4108ac:	mov    DWORD PTR [r14+0x14],0x0
  4108b4:	jmp    4108fb <main@@Base+0xbfbb>
  4108b6:	mov    rbp,r13
  4108b9:	cmp    al,0x22
  4108bb:	jne    410a20 <main@@Base+0xc0e0>
  4108c1:	lea    rsi,[r13+0x2]
  4108c5:	mov    rax,r12
  4108c8:	sub    rax,rsi
  4108cb:	cmp    rax,0x2
  4108cf:	jl     41092a <main@@Base+0xbfea>
  4108d1:	cmp    BYTE PTR [rsi],0x20
  4108d4:	jg     410938 <main@@Base+0xbff8>
  4108d6:	jne    41092a <main@@Base+0xbfea>
  4108d8:	cmp    BYTE PTR [rsi+0x1],0x20
  4108dc:	jle    41092a <main@@Base+0xbfea>
  4108de:	add    rsi,0x1
  4108e2:	cmp    rsi,r12
  4108e5:	jne    410941 <main@@Base+0xc001>
  4108e7:	jmp    4109e8 <main@@Base+0xc0a8>
  4108ec:	mov    rbp,r13
  4108ef:	cmp    al,0x22
  4108f1:	jne    410b11 <main@@Base+0xc1d1>
  4108f7:	lea    rsi,[r13+0x2]
  4108fb:	mov    rax,r12
  4108fe:	sub    rax,rsi
  410901:	cmp    rax,0x2
  410905:	jl     41098d <main@@Base+0xc04d>
  41090b:	cmp    BYTE PTR [rsi],0x20
  41090e:	jg     41099b <main@@Base+0xc05b>
  410914:	jne    41098d <main@@Base+0xc04d>
  410916:	cmp    BYTE PTR [rsi+0x1],0x20
  41091a:	jle    41098d <main@@Base+0xc04d>
  41091c:	add    rsi,0x1
  410920:	cmp    rsi,r12
  410923:	jne    4109a0 <main@@Base+0xc060>
  410925:	jmp    4109fa <main@@Base+0xc0ba>
  41092a:	mov    rdi,r14
  41092d:	mov    rdx,r12
  410930:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  410935:	mov    rsi,rax
  410938:	cmp    rsi,r12
  41093b:	je     4109e8 <main@@Base+0xc0a8>
  410941:	cmp    BYTE PTR [rsi],0x3a
  410944:	jne    4109e8 <main@@Base+0xc0a8>
  41094a:	lea    rbp,[rsi+0x1]
  41094e:	mov    rax,r12
  410951:	sub    rax,rbp
  410954:	cmp    rax,0x2
  410958:	jl     410a0f <main@@Base+0xc0cf>
  41095e:	cmp    BYTE PTR [rbp+0x0],0x20
  410962:	jg     410a20 <main@@Base+0xc0e0>
  410968:	jne    410a0f <main@@Base+0xc0cf>
  41096e:	cmp    BYTE PTR [rsi+0x2],0x20
  410972:	jle    410a0f <main@@Base+0xc0cf>
  410978:	add    rsi,0x2
  41097c:	mov    rbp,rsi
  41097f:	cmp    r13,rbp
  410982:	jne    410a29 <main@@Base+0xc0e9>
  410988:	jmp    410b70 <main@@Base+0xc230>
  41098d:	mov    rdi,r14
  410990:	mov    rdx,r12
  410993:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  410998:	mov    rsi,rax
  41099b:	cmp    rsi,r12
  41099e:	je     4109fa <main@@Base+0xc0ba>
  4109a0:	cmp    BYTE PTR [rsi],0x3a
  4109a3:	jne    4109fa <main@@Base+0xc0ba>
  4109a5:	lea    rbp,[rsi+0x1]
  4109a9:	mov    rax,r12
  4109ac:	sub    rax,rbp
  4109af:	cmp    rax,0x2
  4109b3:	jl     410b00 <main@@Base+0xc1c0>
  4109b9:	cmp    BYTE PTR [rbp+0x0],0x20
  4109bd:	jg     410b11 <main@@Base+0xc1d1>
  4109c3:	jne    410b00 <main@@Base+0xc1c0>
  4109c9:	cmp    BYTE PTR [rsi+0x2],0x20
  4109cd:	jle    410b00 <main@@Base+0xc1c0>
  4109d3:	add    rsi,0x2
  4109d7:	mov    rbp,rsi
  4109da:	cmp    r13,rbp
  4109dd:	jne    410b16 <main@@Base+0xc1d6>
  4109e3:	jmp    410b70 <main@@Base+0xc230>
  4109e8:	mov    ecx,0x4
  4109ed:	mov    rdi,r14
  4109f0:	mov    rdx,r12
  4109f3:	call   41f940 <flatcc_json_parser_set_error@@Base>
  4109f8:	jmp    410a1d <main@@Base+0xc0dd>
  4109fa:	mov    ecx,0x4
  4109ff:	mov    rdi,r14
  410a02:	mov    rdx,r12
  410a05:	call   41f940 <flatcc_json_parser_set_error@@Base>
  410a0a:	jmp    410b0e <main@@Base+0xc1ce>
  410a0f:	mov    rdi,r14
  410a12:	mov    rsi,rbp
  410a15:	mov    rdx,r12
  410a18:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  410a1d:	mov    rbp,rax
  410a20:	cmp    r13,rbp
  410a23:	je     410b70 <main@@Base+0xc230>
  410a29:	mov    QWORD PTR [rsp+0x10],0x0
  410a32:	mov    DWORD PTR [rsp+0xc],0x0
  410a3a:	mov    BYTE PTR [rsp+0xa],0x0
  410a3f:	cmp    rbp,r12
  410a42:	je     410a7d <main@@Base+0xc13d>
  410a44:	mov    rdi,r14
  410a47:	mov    rsi,rbp
  410a4a:	mov    rdx,r12
  410a4d:	lea    rcx,[rsp+0xc]
  410a52:	lea    r8,[rsp+0x10]
  410a57:	call   4215e0 <flatcc_json_parser_integer@@Base>
  410a5c:	cmp    rax,rbp
  410a5f:	je     410a89 <main@@Base+0xc149>
  410a61:	mov    rcx,QWORD PTR [rsp+0x10]
  410a66:	cmp    DWORD PTR [rsp+0xc],0x0
  410a6b:	je     410a95 <main@@Base+0xc155>
  410a6d:	cmp    rcx,0x81
  410a74:	jb     410aba <main@@Base+0xc17a>
  410a76:	mov    ecx,0x8
  410a7b:	jmp    410aa3 <main@@Base+0xc163>
  410a7d:	xor    ecx,ecx
  410a7f:	mov    rax,r12
  410a82:	cmp    rbp,rax
  410a85:	jne    410af7 <main@@Base+0xc1b7>
  410a87:	jmp    410ac6 <main@@Base+0xc186>
  410a89:	xor    ecx,ecx
  410a8b:	mov    rax,rbp
  410a8e:	cmp    rbp,rax
  410a91:	jne    410af7 <main@@Base+0xc1b7>
  410a93:	jmp    410ac6 <main@@Base+0xc186>
  410a95:	cmp    rcx,0x80
  410a9c:	jb     410abd <main@@Base+0xc17d>
  410a9e:	mov    ecx,0x7
  410aa3:	mov    rdi,r14
  410aa6:	mov    rsi,rax
  410aa9:	mov    rdx,r12
  410aac:	call   41f940 <flatcc_json_parser_set_error@@Base>
  410ab1:	xor    ecx,ecx
  410ab3:	cmp    rbp,rax
  410ab6:	jne    410af7 <main@@Base+0xc1b7>
  410ab8:	jmp    410ac6 <main@@Base+0xc186>
  410aba:	neg    rcx
  410abd:	mov    BYTE PTR [rsp+0xa],cl
  410ac1:	cmp    rbp,rax
  410ac4:	jne    410af7 <main@@Base+0xc1b7>
  410ac6:	mov    rdi,r14
  410ac9:	mov    rsi,rbp
  410acc:	mov    rdx,r12
  410acf:	lea    rcx,[rip+0x1a96a]        # 42b440 <filename@@Base+0x370>
  410ad6:	lea    r8,[rsp+0xa]
  410adb:	call   410010 <main@@Base+0xb6d0>
  410ae0:	cmp    rax,rbp
  410ae3:	je     410d13 <main@@Base+0xc3d3>
  410ae9:	cmp    rax,r12
  410aec:	je     410d13 <main@@Base+0xc3d3>
  410af2:	movzx  ecx,BYTE PTR [rsp+0xa]
  410af7:	mov    BYTE PTR [r15+0x2],cl
  410afb:	jmp    410c10 <main@@Base+0xc2d0>
  410b00:	mov    rdi,r14
  410b03:	mov    rsi,rbp
  410b06:	mov    rdx,r12
  410b09:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  410b0e:	mov    rbp,rax
  410b11:	cmp    r13,rbp
  410b14:	je     410b70 <main@@Base+0xc230>
  410b16:	mov    QWORD PTR [rsp+0x10],0x0
  410b1f:	mov    DWORD PTR [rsp+0xc],0x0
  410b27:	mov    WORD PTR [rsp+0xa],0x0
  410b2e:	cmp    rbp,r12
  410b31:	je     410b83 <main@@Base+0xc243>
  410b33:	mov    rdi,r14
  410b36:	mov    rsi,rbp
  410b39:	mov    rdx,r12
  410b3c:	lea    rcx,[rsp+0xc]
  410b41:	lea    r8,[rsp+0x10]
  410b46:	call   4215e0 <flatcc_json_parser_integer@@Base>
  410b4b:	cmp    rax,rbp
  410b4e:	je     410b8f <main@@Base+0xc24f>
  410b50:	mov    rcx,QWORD PTR [rsp+0x10]
  410b55:	cmp    DWORD PTR [rsp+0xc],0x0
  410b5a:	je     410b9b <main@@Base+0xc25b>
  410b5c:	cmp    rcx,0x8001
  410b63:	jb     410bc0 <main@@Base+0xc280>
  410b65:	mov    ecx,0x8
  410b6a:	jmp    410ba9 <main@@Base+0xc269>
  410b6c:	nop    DWORD PTR [rax+0x0]
  410b70:	mov    rdi,r14
  410b73:	mov    rsi,r13
  410b76:	mov    rdx,r12
  410b79:	call   41ff40 <flatcc_json_parser_unmatched_symbol@@Base>
  410b7e:	jmp    410c10 <main@@Base+0xc2d0>
  410b83:	xor    ecx,ecx
  410b85:	mov    rax,r12
  410b88:	cmp    rbp,rax
  410b8b:	jne    410bfe <main@@Base+0xc2be>
  410b8d:	jmp    410bcd <main@@Base+0xc28d>
  410b8f:	xor    ecx,ecx
  410b91:	mov    rax,rbp
  410b94:	cmp    rbp,rax
  410b97:	jne    410bfe <main@@Base+0xc2be>
  410b99:	jmp    410bcd <main@@Base+0xc28d>
  410b9b:	cmp    rcx,0x8000
  410ba2:	jb     410bc3 <main@@Base+0xc283>
  410ba4:	mov    ecx,0x7
  410ba9:	mov    rdi,r14
  410bac:	mov    rsi,rax
  410baf:	mov    rdx,r12
  410bb2:	call   41f940 <flatcc_json_parser_set_error@@Base>
  410bb7:	xor    ecx,ecx
  410bb9:	cmp    rbp,rax
  410bbc:	jne    410bfe <main@@Base+0xc2be>
  410bbe:	jmp    410bcd <main@@Base+0xc28d>
  410bc0:	neg    rcx
  410bc3:	mov    WORD PTR [rsp+0xa],cx
  410bc8:	cmp    rbp,rax
  410bcb:	jne    410bfe <main@@Base+0xc2be>
  410bcd:	mov    rdi,r14
  410bd0:	mov    rsi,rbp
  410bd3:	mov    rdx,r12
  410bd6:	lea    rcx,[rip+0x1a883]        # 42b460 <filename@@Base+0x390>
  410bdd:	lea    r8,[rsp+0xa]
  410be2:	call   410430 <main@@Base+0xbaf0>
  410be7:	cmp    rax,rbp
  410bea:	je     410d13 <main@@Base+0xc3d3>
  410bf0:	cmp    rax,r12
  410bf3:	je     410d13 <main@@Base+0xc3d3>
  410bf9:	movzx  ecx,WORD PTR [rsp+0xa]
  410bfe:	mov    WORD PTR [r15],cx
  410c02:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410c0c:	nop    DWORD PTR [rax+0x0]
  410c10:	mov    rcx,r12
  410c13:	sub    rcx,rax
  410c16:	cmp    rcx,0x2
  410c1a:	jl     410c40 <main@@Base+0xc300>
  410c1c:	cmp    BYTE PTR [rax],0x20
  410c1f:	jg     410c4e <main@@Base+0xc30e>
  410c21:	jne    410c40 <main@@Base+0xc300>
  410c23:	cmp    BYTE PTR [rax+0x1],0x20
  410c27:	jle    410c40 <main@@Base+0xc300>
  410c29:	add    rax,0x1
  410c2d:	cmp    rax,r12
  410c30:	jne    410c53 <main@@Base+0xc313>
  410c32:	jmp    410cc2 <main@@Base+0xc382>
  410c37:	nop    WORD PTR [rax+rax*1+0x0]
  410c40:	mov    rdi,r14
  410c43:	mov    rsi,rax
  410c46:	mov    rdx,r12
  410c49:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  410c4e:	cmp    rax,r12
  410c51:	je     410cc2 <main@@Base+0xc382>
  410c53:	movzx  ecx,BYTE PTR [rax]
  410c56:	cmp    cl,0x2c
  410c59:	jne    410cc7 <main@@Base+0xc387>
  410c5b:	lea    rsi,[rax+0x1]
  410c5f:	mov    rcx,r12
  410c62:	sub    rcx,rsi
  410c65:	cmp    rcx,0x2
  410c69:	jl     410c80 <main@@Base+0xc340>
  410c6b:	cmp    BYTE PTR [rsi],0x20
  410c6e:	jg     410c8e <main@@Base+0xc34e>
  410c70:	jne    410c80 <main@@Base+0xc340>
  410c72:	cmp    BYTE PTR [rax+0x2],0x20
  410c76:	jle    410c80 <main@@Base+0xc340>
  410c78:	add    rax,0x2
  410c7c:	jmp    410c8b <main@@Base+0xc34b>
  410c7e:	xchg   ax,ax
  410c80:	mov    rdi,r14
  410c83:	mov    rdx,r12
  410c86:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  410c8b:	mov    rsi,rax
  410c8e:	cmp    rsi,r12
  410c91:	je     410cff <main@@Base+0xc3bf>
  410c93:	cmp    BYTE PTR [rsi],0x7d
  410c96:	jne    410710 <main@@Base+0xbdd0>
  410c9c:	lea    rcx,[rsi+0x1]
  410ca0:	mov    rax,r12
  410ca3:	sub    rax,rcx
  410ca6:	cmp    rax,0x2
  410caa:	jl     410cef <main@@Base+0xc3af>
  410cac:	cmp    BYTE PTR [rcx],0x20
  410caf:	jg     410d29 <main@@Base+0xc3e9>
  410cb1:	jne    410cef <main@@Base+0xc3af>
  410cb3:	cmp    BYTE PTR [rsi+0x2],0x20
  410cb7:	jle    410cef <main@@Base+0xc3af>
  410cb9:	add    rsi,0x2
  410cbd:	mov    rcx,rsi
  410cc0:	jmp    410d29 <main@@Base+0xc3e9>
  410cc2:	mov    rcx,r12
  410cc5:	jmp    410d29 <main@@Base+0xc3e9>
  410cc7:	cmp    cl,0x7d
  410cca:	jne    410d0c <main@@Base+0xc3cc>
  410ccc:	lea    rcx,[rax+0x1]
  410cd0:	mov    rdx,r12
  410cd3:	sub    rdx,rcx
  410cd6:	cmp    rdx,0x2
  410cda:	jl     410cef <main@@Base+0xc3af>
  410cdc:	cmp    BYTE PTR [rcx],0x20
  410cdf:	jg     410d29 <main@@Base+0xc3e9>
  410ce1:	jne    410cef <main@@Base+0xc3af>
  410ce3:	cmp    BYTE PTR [rax+0x2],0x20
  410ce7:	jle    410cef <main@@Base+0xc3af>
  410ce9:	add    rax,0x2
  410ced:	jmp    410d26 <main@@Base+0xc3e6>
  410cef:	mov    rdi,r14
  410cf2:	mov    rsi,rcx
  410cf5:	mov    rdx,r12
  410cf8:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  410cfd:	jmp    410d26 <main@@Base+0xc3e6>
  410cff:	mov    ecx,0xa
  410d04:	mov    rdi,r14
  410d07:	mov    rsi,r12
  410d0a:	jmp    410d1e <main@@Base+0xc3de>
  410d0c:	mov    ecx,0xa
  410d11:	jmp    410d18 <main@@Base+0xc3d8>
  410d13:	mov    ecx,0x21
  410d18:	mov    rdi,r14
  410d1b:	mov    rsi,rax
  410d1e:	mov    rdx,r12
  410d21:	call   41f940 <flatcc_json_parser_set_error@@Base>
  410d26:	mov    rcx,rax
  410d29:	mov    rax,rcx
  410d2c:	add    rsp,0x18
  410d30:	pop    rbx
  410d31:	pop    r12
  410d33:	pop    r13
  410d35:	pop    r14
  410d37:	pop    r15
  410d39:	pop    rbp
  410d3a:	ret    
  410d3b:	nop    DWORD PTR [rax+rax*1+0x0]
  410d40:	push   rbp
  410d41:	push   r15
  410d43:	push   r14
  410d45:	push   r13
  410d47:	push   r12
  410d49:	push   rbx
  410d4a:	sub    rsp,0x48
  410d4e:	mov    r14,rdx
  410d51:	mov    rbp,rsi
  410d54:	mov    r12,rdi
  410d57:	mov    DWORD PTR [r8],0x0
  410d5e:	cmp    cl,0x4
  410d61:	ja     410d98 <main@@Base+0xc458>
  410d63:	mov    rbx,r8
  410d66:	mov    eax,ecx
  410d68:	lea    rcx,[rip+0x13861]        # 4245d0 <_IO_stdin_used@@Base+0x5d0>
  410d6f:	movsxd rax,DWORD PTR [rcx+rax*4]
  410d73:	add    rax,rcx
  410d76:	jmp    rax
  410d78:	mov    rax,r14
  410d7b:	sub    rax,rbp
  410d7e:	cmp    rax,0x4
  410d82:	jl     410d91 <main@@Base+0xc451>
  410d84:	cmp    DWORD PTR [rbp+0x0],0x6c6c756e
  410d8b:	je     410f79 <main@@Base+0xc639>
  410d91:	mov    ecx,0x1a
  410d96:	jmp    410da9 <main@@Base+0xc469>
  410d98:	test   BYTE PTR [r12+0x10],0x1
  410d9e:	jne    410f5d <main@@Base+0xc61d>
  410da4:	mov    ecx,0xf
  410da9:	mov    rdi,r12
  410dac:	mov    rsi,rbp
  410daf:	mov    rdx,r14
  410db2:	add    rsp,0x48
  410db6:	pop    rbx
  410db7:	pop    r12
  410db9:	pop    r13
  410dbb:	pop    r14
  410dbd:	pop    r15
  410dbf:	pop    rbp
  410dc0:	jmp    41f940 <flatcc_json_parser_set_error@@Base>
  410dc5:	mov    rdi,r12
  410dc8:	mov    rsi,rbp
  410dcb:	mov    rdx,r14
  410dce:	mov    rcx,rbx
  410dd1:	call   4049c0 <main@@Base+0x80>
  410dd6:	jmp    413c82 <main@@Base+0xf342>
  410ddb:	mov    DWORD PTR [rbx],0x0
  410de1:	mov    rdi,QWORD PTR [r12]
  410de5:	mov    esi,0x4
  410dea:	call   41c500 <flatcc_builder_start_table@@Base>
  410def:	test   eax,eax
  410df1:	jne    413c6f <main@@Base+0xf32f>
  410df7:	cmp    rbp,r14
  410dfa:	je     410f36 <main@@Base+0xc5f6>
  410e00:	cmp    BYTE PTR [rbp+0x0],0x7b
  410e04:	jne    410f36 <main@@Base+0xc5f6>
  410e0a:	lea    rax,[rbp+0x1]
  410e0e:	mov    rcx,r14
  410e11:	sub    rcx,rax
  410e14:	cmp    rcx,0x2
  410e18:	jl     410fac <main@@Base+0xc66c>
  410e1e:	cmp    BYTE PTR [rax],0x20
  410e21:	jg     410fba <main@@Base+0xc67a>
  410e27:	jne    410fac <main@@Base+0xc66c>
  410e2d:	cmp    BYTE PTR [rbp+0x2],0x20
  410e31:	jle    410fac <main@@Base+0xc66c>
  410e37:	add    rbp,0x2
  410e3b:	mov    rax,rbp
  410e3e:	jmp    410fba <main@@Base+0xc67a>
  410e43:	mov    DWORD PTR [rbx],0x0
  410e49:	mov    rdi,QWORD PTR [r12]
  410e4d:	xor    esi,esi
  410e4f:	call   41c500 <flatcc_builder_start_table@@Base>
  410e54:	test   eax,eax
  410e56:	jne    413c6f <main@@Base+0xf32f>
  410e5c:	cmp    rbp,r14
  410e5f:	je     410f36 <main@@Base+0xc5f6>
  410e65:	cmp    BYTE PTR [rbp+0x0],0x7b
  410e69:	jne    410f36 <main@@Base+0xc5f6>
  410e6f:	lea    rax,[rbp+0x1]
  410e73:	mov    rcx,r14
  410e76:	sub    rcx,rax
  410e79:	cmp    rcx,0x2
  410e7d:	jl     410ff8 <main@@Base+0xc6b8>
  410e83:	cmp    BYTE PTR [rax],0x20
  410e86:	jg     411006 <main@@Base+0xc6c6>
  410e8c:	jne    410ff8 <main@@Base+0xc6b8>
  410e92:	cmp    BYTE PTR [rbp+0x2],0x20
  410e96:	jle    410ff8 <main@@Base+0xc6b8>
  410e9c:	add    rbp,0x2
  410ea0:	mov    rax,rbp
  410ea3:	jmp    411006 <main@@Base+0xc6c6>
  410ea8:	mov    DWORD PTR [rbx],0x0
  410eae:	mov    rdi,QWORD PTR [r12]
  410eb2:	mov    esi,0x4
  410eb7:	call   41c500 <flatcc_builder_start_table@@Base>
  410ebc:	test   eax,eax
  410ebe:	jne    413c6f <main@@Base+0xf32f>
  410ec4:	lea    r8,[rsp+0x30]
  410ec9:	mov    ecx,0x1
  410ece:	mov    rdi,r12
  410ed1:	mov    rsi,rbp
  410ed4:	mov    rdx,r14
  410ed7:	call   421d60 <flatcc_json_parser_prepare_unions@@Base>
  410edc:	cmp    rax,r14
  410edf:	je     413c6f <main@@Base+0xf32f>
  410ee5:	cmp    rbp,r14
  410ee8:	je     410f82 <main@@Base+0xc642>
  410eee:	cmp    BYTE PTR [rbp+0x0],0x7b
  410ef2:	jne    410f82 <main@@Base+0xc642>
  410ef8:	lea    rcx,[rbp+0x1]
  410efc:	mov    rax,r14
  410eff:	sub    rax,rcx
  410f02:	cmp    rax,0x2
  410f06:	mov    QWORD PTR [rsp+0x18],rbx
  410f0b:	jl     4110fa <main@@Base+0xc7ba>
  410f11:	cmp    BYTE PTR [rcx],0x20
  410f14:	jg     41110b <main@@Base+0xc7cb>
  410f1a:	jne    4110fa <main@@Base+0xc7ba>
  410f20:	cmp    BYTE PTR [rbp+0x2],0x20
  410f24:	jle    4110fa <main@@Base+0xc7ba>
  410f2a:	add    rbp,0x2
  410f2e:	mov    rcx,rbp
  410f31:	jmp    41110b <main@@Base+0xc7cb>
  410f36:	mov    ecx,0x15
  410f3b:	mov    rdi,r12
  410f3e:	mov    rsi,rbp
  410f41:	mov    rdx,r14
  410f44:	call   41f940 <flatcc_json_parser_set_error@@Base>
  410f49:	mov    rbp,rax
  410f4c:	cmp    DWORD PTR [r12+0x20],0x0
  410f52:	jne    413c6f <main@@Base+0xf32f>
  410f58:	jmp    413c60 <main@@Base+0xf320>
  410f5d:	mov    rdi,r12
  410f60:	mov    rsi,rbp
  410f63:	mov    rdx,r14
  410f66:	add    rsp,0x48
  410f6a:	pop    rbx
  410f6b:	pop    r12
  410f6d:	pop    r13
  410f6f:	pop    r14
  410f71:	pop    r15
  410f73:	pop    rbp
  410f74:	jmp    420120 <flatcc_json_parser_generic_json@@Base>
  410f79:	add    rbp,0x4
  410f7d:	jmp    413ca8 <main@@Base+0xf368>
  410f82:	mov    ecx,0x15
  410f87:	mov    rdi,r12
  410f8a:	mov    rsi,rbp
  410f8d:	mov    rdx,r14
  410f90:	call   41f940 <flatcc_json_parser_set_error@@Base>
  410f95:	lea    rbp,[r12+0x20]
  410f9a:	cmp    DWORD PTR [rbp+0x0],0x0
  410f9e:	je     413c4a <main@@Base+0xf30a>
  410fa4:	mov    rbp,rax
  410fa7:	jmp    413c6f <main@@Base+0xf32f>
  410fac:	mov    rdi,r12
  410faf:	mov    rsi,rax
  410fb2:	mov    rdx,r14
  410fb5:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  410fba:	mov    rsi,r14
  410fbd:	cmp    rax,r14
  410fc0:	je     411161 <main@@Base+0xc821>
  410fc6:	cmp    BYTE PTR [rax],0x7d
  410fc9:	jne    41115e <main@@Base+0xc81e>
  410fcf:	lea    rbp,[rax+0x1]
  410fd3:	mov    rcx,r14
  410fd6:	sub    rcx,rbp
  410fd9:	cmp    rcx,0x2
  410fdd:	jl     413afd <main@@Base+0xf1bd>
  410fe3:	cmp    BYTE PTR [rbp+0x0],0x20
  410fe7:	jg     410f4c <main@@Base+0xc60c>
  410fed:	jne    413afd <main@@Base+0xf1bd>
  410ff3:	jmp    413aab <main@@Base+0xf16b>
  410ff8:	mov    rdi,r12
  410ffb:	mov    rsi,rax
  410ffe:	mov    rdx,r14
  411001:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  411006:	mov    rsi,r14
  411009:	cmp    rax,r14
  41100c:	je     41101a <main@@Base+0xc6da>
  41100e:	cmp    BYTE PTR [rax],0x7d
  411011:	je     413a8f <main@@Base+0xf14f>
  411017:	mov    rsi,rax
  41101a:	mov    rax,r14
  41101d:	cmp    rsi,r14
  411020:	je     41105a <main@@Base+0xc71a>
  411022:	movzx  eax,BYTE PTR [rsi]
  411025:	cmp    al,0x2e
  411027:	je     41103c <main@@Base+0xc6fc>
  411029:	cmp    al,0x22
  41102b:	jne    41104e <main@@Base+0xc70e>
  41102d:	add    rsi,0x1
  411031:	mov    DWORD PTR [r12+0x14],0x0
  41103a:	jmp    411057 <main@@Base+0xc717>
  41103c:	mov    ecx,0x5
  411041:	mov    rdi,r12
  411044:	mov    rdx,r14
  411047:	call   41f940 <flatcc_json_parser_set_error@@Base>
  41104c:	jmp    41105a <main@@Base+0xc71a>
  41104e:	mov    DWORD PTR [r12+0x14],0x1
  411057:	mov    rax,rsi
  41105a:	mov    rdi,r12
  41105d:	mov    rsi,rax
  411060:	mov    rdx,r14
  411063:	call   41ff40 <flatcc_json_parser_unmatched_symbol@@Base>
  411068:	mov    rcx,r14
  41106b:	sub    rcx,rax
  41106e:	cmp    rcx,0x2
  411072:	jl     41108f <main@@Base+0xc74f>
  411074:	cmp    BYTE PTR [rax],0x20
  411077:	jg     41109d <main@@Base+0xc75d>
  411079:	jne    41108f <main@@Base+0xc74f>
  41107b:	cmp    BYTE PTR [rax+0x1],0x20
  41107f:	jle    41108f <main@@Base+0xc74f>
  411081:	add    rax,0x1
  411085:	cmp    rax,r14
  411088:	jne    4110a6 <main@@Base+0xc766>
  41108a:	jmp    411be9 <main@@Base+0xd2a9>
  41108f:	mov    rdi,r12
  411092:	mov    rsi,rax
  411095:	mov    rdx,r14
  411098:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  41109d:	cmp    rax,r14
  4110a0:	je     411be9 <main@@Base+0xd2a9>
  4110a6:	movzx  ecx,BYTE PTR [rax]
  4110a9:	cmp    cl,0x2c
  4110ac:	jne    413a86 <main@@Base+0xf146>
  4110b2:	lea    rsi,[rax+0x1]
  4110b6:	mov    rcx,r14
  4110b9:	sub    rcx,rsi
  4110bc:	cmp    rcx,0x2
  4110c0:	jl     4110d5 <main@@Base+0xc795>
  4110c2:	cmp    BYTE PTR [rsi],0x20
  4110c5:	jg     4110e3 <main@@Base+0xc7a3>
  4110c7:	jne    4110d5 <main@@Base+0xc795>
  4110c9:	cmp    BYTE PTR [rax+0x2],0x20
  4110cd:	jle    4110d5 <main@@Base+0xc795>
  4110cf:	add    rax,0x2
  4110d3:	jmp    4110e0 <main@@Base+0xc7a0>
  4110d5:	mov    rdi,r12
  4110d8:	mov    rdx,r14
  4110db:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  4110e0:	mov    rsi,rax
  4110e3:	cmp    rsi,r14
  4110e6:	je     411bfd <main@@Base+0xd2bd>
  4110ec:	cmp    BYTE PTR [rsi],0x7d
  4110ef:	jne    41101a <main@@Base+0xc6da>
  4110f5:	jmp    411c0d <main@@Base+0xd2cd>
  4110fa:	mov    rdi,r12
  4110fd:	mov    rsi,rcx
  411100:	mov    rdx,r14
  411103:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  411108:	mov    rcx,rax
  41110b:	mov    rsi,r14
  41110e:	cmp    rcx,r14
  411111:	je     411c56 <main@@Base+0xd316>
  411117:	cmp    BYTE PTR [rcx],0x7d
  41111a:	jne    411c53 <main@@Base+0xd313>
  411120:	lea    rax,[rcx+0x1]
  411124:	mov    rdx,r14
  411127:	sub    rdx,rax
  41112a:	cmp    rdx,0x2
  41112e:	mov    rbx,QWORD PTR [rsp+0x18]
  411133:	jl     413b10 <main@@Base+0xf1d0>
  411139:	cmp    BYTE PTR [rax],0x20
  41113c:	jg     413b1e <main@@Base+0xf1de>
  411142:	jne    413b10 <main@@Base+0xf1d0>
  411148:	cmp    BYTE PTR [rcx+0x2],0x20
  41114c:	jle    413b10 <main@@Base+0xf1d0>
  411152:	add    rcx,0x2
  411156:	mov    rax,rcx
  411159:	jmp    413b1e <main@@Base+0xf1de>
  41115e:	mov    rsi,rax
  411161:	movabs rax,0x636f6c6f72000000
  41116b:	lea    rax,[rax+0x320000]
  411172:	mov    QWORD PTR [rsp+0x38],rax
  411177:	mov    QWORD PTR [rsp+0x28],r12
  41117c:	mov    QWORD PTR [rsp+0x18],rbx
  411181:	mov    r13,r14
  411184:	cmp    rsi,r14
  411187:	je     4111c4 <main@@Base+0xc884>
  411189:	movzx  eax,BYTE PTR [rsi]
  41118c:	cmp    al,0x2e
  41118e:	je     4111a3 <main@@Base+0xc863>
  411190:	cmp    al,0x22
  411192:	jne    4111b8 <main@@Base+0xc878>
  411194:	add    rsi,0x1
  411198:	mov    DWORD PTR [r12+0x14],0x0
  4111a1:	jmp    4111c1 <main@@Base+0xc881>
  4111a3:	mov    ecx,0x5
  4111a8:	mov    rdi,r12
  4111ab:	mov    rdx,r14
  4111ae:	call   41f940 <flatcc_json_parser_set_error@@Base>
  4111b3:	mov    r13,rax
  4111b6:	jmp    4111c4 <main@@Base+0xc884>
  4111b8:	mov    DWORD PTR [r12+0x14],0x1
  4111c1:	mov    r13,rsi
  4111c4:	mov    r12,r14
  4111c7:	sub    r12,r13
  4111ca:	cmp    r12,0x8
  4111ce:	jb     4111db <main@@Base+0xc89b>
  4111d0:	movbe  r15,QWORD PTR [r13+0x0]
  4111d6:	jmp    411265 <main@@Base+0xc925>
  4111db:	mov    eax,r12d
  4111de:	and    al,0xf
  4111e0:	add    al,0xff
  4111e2:	cmp    al,0x7
  4111e4:	ja     4116e1 <main@@Base+0xcda1>
  4111ea:	movzx  eax,al
  4111ed:	lea    rcx,[rip+0x13510]        # 424704 <_IO_stdin_used@@Base+0x704>
  4111f4:	movsxd rsi,DWORD PTR [rcx+rax*4]
  4111f8:	add    rsi,rcx
  4111fb:	xor    r8d,r8d
  4111fe:	xor    eax,eax
  411200:	xor    ecx,ecx
  411202:	xor    edx,edx
  411204:	xor    edi,edi
  411206:	xor    ebp,ebp
  411208:	xor    ebx,ebx
  41120a:	jmp    rsi
  41120c:	movsx  r8,BYTE PTR [r13+0x7]
  411211:	movsx  rax,BYTE PTR [r13+0x6]
  411216:	shl    rax,0x8
  41121a:	or     rax,r8
  41121d:	movsx  rcx,BYTE PTR [r13+0x5]
  411222:	shl    rcx,0x10
  411226:	or     rcx,rax
  411229:	movsx  rdx,BYTE PTR [r13+0x4]
  41122e:	shl    rdx,0x18
  411232:	or     rdx,rcx
  411235:	movsx  rdi,BYTE PTR [r13+0x3]
  41123a:	shl    rdi,0x20
  41123e:	or     rdi,rdx
  411241:	movsx  rbp,BYTE PTR [r13+0x2]
  411246:	shl    rbp,0x28
  41124a:	or     rbp,rdi
  41124d:	movsx  rbx,BYTE PTR [r13+0x1]
  411252:	shl    rbx,0x30
  411256:	or     rbx,rbp
  411259:	movzx  r15d,BYTE PTR [r13+0x0]
  41125e:	shl    r15,0x38
  411262:	or     r15,rbx
  411265:	mov    rax,r15
  411268:	and    rax,0xffffffffffff0000
  41126e:	cmp    rax,QWORD PTR [rsp+0x38]
  411273:	jne    4112b7 <main@@Base+0xc977>
  411275:	mov    rbp,r13
  411278:	cmp    r12,0x7
  41127c:	jl     411479 <main@@Base+0xcb39>
  411282:	mov    rax,QWORD PTR [rsp+0x28]
  411287:	cmp    DWORD PTR [rax+0x14],0x0
  41128b:	movzx  eax,BYTE PTR [r13+0x6]
  411290:	je     411318 <main@@Base+0xc9d8>
  411296:	cmp    al,0x21
  411298:	jl     4112a5 <main@@Base+0xc965>
  41129a:	mov    rbp,r13
  41129d:	cmp    al,0x3a
  41129f:	jne    411479 <main@@Base+0xcb39>
  4112a5:	lea    rsi,[r13+0x6]
  4112a9:	mov    rax,QWORD PTR [rsp+0x28]
  4112ae:	mov    DWORD PTR [rax+0x14],0x0
  4112b5:	jmp    411327 <main@@Base+0xc9e7>
  4112b7:	mov    rax,r15
  4112ba:	and    rax,0xffffffffff000000
  4112c0:	movabs rcx,0x636f6c6f72000000
  4112ca:	cmp    rax,rcx
  4112cd:	jne    41161e <main@@Base+0xccde>
  4112d3:	mov    rbp,r13
  4112d6:	cmp    r12,0x6
  4112da:	jl     4115a5 <main@@Base+0xcc65>
  4112e0:	mov    rax,QWORD PTR [rsp+0x28]
  4112e5:	cmp    DWORD PTR [rax+0x14],0x0
  4112e9:	movzx  eax,BYTE PTR [r13+0x5]
  4112ee:	je     4113bf <main@@Base+0xca7f>
  4112f4:	cmp    al,0x21
  4112f6:	jl     411303 <main@@Base+0xc9c3>
  4112f8:	mov    rbp,r13
  4112fb:	cmp    al,0x3a
  4112fd:	jne    4115a5 <main@@Base+0xcc65>
  411303:	lea    rsi,[r13+0x5]
  411307:	mov    rax,QWORD PTR [rsp+0x28]
  41130c:	mov    DWORD PTR [rax+0x14],0x0
  411313:	jmp    4113ce <main@@Base+0xca8e>
  411318:	mov    rbp,r13
  41131b:	cmp    al,0x22
  41131d:	jne    411479 <main@@Base+0xcb39>
  411323:	lea    rsi,[r13+0x7]
  411327:	mov    rax,r14
  41132a:	sub    rax,rsi
  41132d:	cmp    rax,0x2
  411331:	jl     41134b <main@@Base+0xca0b>
  411333:	cmp    BYTE PTR [rsi],0x20
  411336:	jg     41135b <main@@Base+0xca1b>
  411338:	jne    41134b <main@@Base+0xca0b>
  41133a:	cmp    BYTE PTR [rsi+0x1],0x20
  41133e:	jle    41134b <main@@Base+0xca0b>
  411340:	add    rsi,0x1
  411344:	cmp    rsi,r14
  411347:	jne    411360 <main@@Base+0xca20>
  411349:	jmp    4113a8 <main@@Base+0xca68>
  41134b:	mov    rdi,QWORD PTR [rsp+0x28]
  411350:	mov    rdx,r14
  411353:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  411358:	mov    rsi,rax
  41135b:	cmp    rsi,r14
  41135e:	je     4113a8 <main@@Base+0xca68>
  411360:	cmp    BYTE PTR [rsi],0x3a
  411363:	jne    4113a8 <main@@Base+0xca68>
  411365:	lea    rbp,[rsi+0x1]
  411369:	mov    rax,r14
  41136c:	sub    rax,rbp
  41136f:	cmp    rax,0x2
  411373:	jl     411466 <main@@Base+0xcb26>
  411379:	cmp    BYTE PTR [rbp+0x0],0x20
  41137d:	jg     411479 <main@@Base+0xcb39>
  411383:	jne    411466 <main@@Base+0xcb26>
  411389:	cmp    BYTE PTR [rsi+0x2],0x20
  41138d:	jle    411466 <main@@Base+0xcb26>
  411393:	add    rsi,0x2
  411397:	mov    rbp,rsi
  41139a:	cmp    r13,rbp
  41139d:	jne    411482 <main@@Base+0xcb42>
  4113a3:	jmp    41161e <main@@Base+0xccde>
  4113a8:	mov    ecx,0x4
  4113ad:	mov    rdi,QWORD PTR [rsp+0x28]
  4113b2:	mov    rdx,r14
  4113b5:	call   41f940 <flatcc_json_parser_set_error@@Base>
  4113ba:	jmp    411476 <main@@Base+0xcb36>
  4113bf:	mov    rbp,r13
  4113c2:	cmp    al,0x22
  4113c4:	jne    4115a5 <main@@Base+0xcc65>
  4113ca:	lea    rsi,[r13+0x6]
  4113ce:	mov    rax,r14
  4113d1:	sub    rax,rsi
  4113d4:	cmp    rax,0x2
  4113d8:	jl     4113f2 <main@@Base+0xcab2>
  4113da:	cmp    BYTE PTR [rsi],0x20
  4113dd:	jg     411402 <main@@Base+0xcac2>
  4113df:	jne    4113f2 <main@@Base+0xcab2>
  4113e1:	cmp    BYTE PTR [rsi+0x1],0x20
  4113e5:	jle    4113f2 <main@@Base+0xcab2>
  4113e7:	add    rsi,0x1
  4113eb:	cmp    rsi,r14
  4113ee:	jne    411407 <main@@Base+0xcac7>
  4113f0:	jmp    41144f <main@@Base+0xcb0f>
  4113f2:	mov    rdi,QWORD PTR [rsp+0x28]
  4113f7:	mov    rdx,r14
  4113fa:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  4113ff:	mov    rsi,rax
  411402:	cmp    rsi,r14
  411405:	je     41144f <main@@Base+0xcb0f>
  411407:	cmp    BYTE PTR [rsi],0x3a
  41140a:	jne    41144f <main@@Base+0xcb0f>
  41140c:	lea    rbp,[rsi+0x1]
  411410:	mov    rax,r14
  411413:	sub    rax,rbp
  411416:	cmp    rax,0x2
  41141a:	jl     411592 <main@@Base+0xcc52>
  411420:	cmp    BYTE PTR [rbp+0x0],0x20
  411424:	jg     4115a5 <main@@Base+0xcc65>
  41142a:	jne    411592 <main@@Base+0xcc52>
  411430:	cmp    BYTE PTR [rsi+0x2],0x20
  411434:	jle    411592 <main@@Base+0xcc52>
  41143a:	add    rsi,0x2
  41143e:	mov    rbp,rsi
  411441:	cmp    r13,rbp
  411444:	jne    4115aa <main@@Base+0xcc6a>
  41144a:	jmp    41161e <main@@Base+0xccde>
  41144f:	mov    ecx,0x4
  411454:	mov    rdi,QWORD PTR [rsp+0x28]
  411459:	mov    rdx,r14
  41145c:	call   41f940 <flatcc_json_parser_set_error@@Base>
  411461:	jmp    4115a2 <main@@Base+0xcc62>
  411466:	mov    rdi,QWORD PTR [rsp+0x28]
  41146b:	mov    rsi,rbp
  41146e:	mov    rdx,r14
  411471:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  411476:	mov    rbp,rax
  411479:	cmp    r13,rbp
  41147c:	je     41161e <main@@Base+0xccde>
  411482:	mov    QWORD PTR [rsp+0x20],0x0
  41148b:	mov    DWORD PTR [rsp+0x30],0x0
  411493:	mov    BYTE PTR [rsp+0xc],0x0
  411498:	cmp    rbp,r14
  41149b:	je     4114e3 <main@@Base+0xcba3>
  41149d:	mov    r12,QWORD PTR [rsp+0x28]
  4114a2:	mov    rdi,r12
  4114a5:	mov    rsi,rbp
  4114a8:	mov    rdx,r14
  4114ab:	lea    rcx,[rsp+0x30]
  4114b0:	lea    r8,[rsp+0x20]
  4114b5:	call   4215e0 <flatcc_json_parser_integer@@Base>
  4114ba:	cmp    rax,rbp
  4114bd:	mov    rbx,QWORD PTR [rsp+0x18]
  4114c2:	je     4114fa <main@@Base+0xcbba>
  4114c4:	mov    r13,rax
  4114c7:	mov    r15,QWORD PTR [rsp+0x20]
  4114cc:	cmp    DWORD PTR [rsp+0x30],0x0
  4114d1:	je     411507 <main@@Base+0xcbc7>
  4114d3:	cmp    r15,0x81
  4114da:	jb     411530 <main@@Base+0xcbf0>
  4114dc:	mov    ecx,0x8
  4114e1:	jmp    411515 <main@@Base+0xcbd5>
  4114e3:	xor    r15d,r15d
  4114e6:	mov    r13,r14
  4114e9:	mov    r12,QWORD PTR [rsp+0x28]
  4114ee:	mov    rbx,QWORD PTR [rsp+0x18]
  4114f3:	cmp    rbp,r13
  4114f6:	jne    411572 <main@@Base+0xcc32>
  4114f8:	jmp    41153d <main@@Base+0xcbfd>
  4114fa:	xor    r15d,r15d
  4114fd:	mov    r13,rbp
  411500:	cmp    rbp,r13
  411503:	jne    411572 <main@@Base+0xcc32>
  411505:	jmp    41153d <main@@Base+0xcbfd>
  411507:	cmp    r15,0x80
  41150e:	jb     411533 <main@@Base+0xcbf3>
  411510:	mov    ecx,0x7
  411515:	mov    rdi,r12
  411518:	mov    rsi,r13
  41151b:	mov    rdx,r14
  41151e:	call   41f940 <flatcc_json_parser_set_error@@Base>
  411523:	mov    r13,rax
  411526:	xor    r15d,r15d
  411529:	cmp    rbp,r13
  41152c:	jne    411572 <main@@Base+0xcc32>
  41152e:	jmp    41153d <main@@Base+0xcbfd>
  411530:	neg    r15
  411533:	mov    BYTE PTR [rsp+0xc],r15b
  411538:	cmp    rbp,r13
  41153b:	jne    411572 <main@@Base+0xcc32>
  41153d:	mov    rdi,r12
  411540:	mov    rsi,rbp
  411543:	mov    rdx,r14
  411546:	lea    rcx,[rip+0x19f33]        # 42b480 <filename@@Base+0x3b0>
  41154d:	lea    r8,[rsp+0xc]
  411552:	call   410010 <main@@Base+0xb6d0>
  411557:	mov    r13,rax
  41155a:	cmp    rax,rbp
  41155d:	je     413b32 <main@@Base+0xf1f2>
  411563:	cmp    r13,r14
  411566:	je     413b32 <main@@Base+0xf1f2>
  41156c:	movzx  r15d,BYTE PTR [rsp+0xc]
  411572:	cmp    r15b,0x2
  411576:	jne    411584 <main@@Base+0xcc44>
  411578:	test   BYTE PTR [r12+0x10],0x2
  41157e:	je     411b3f <main@@Base+0xd1ff>
  411584:	mov    rdi,QWORD PTR [r12]
  411588:	mov    esi,0x1
  41158d:	jmp    411b24 <main@@Base+0xd1e4>
  411592:	mov    rdi,QWORD PTR [rsp+0x28]
  411597:	mov    rsi,rbp
  41159a:	mov    rdx,r14
  41159d:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  4115a2:	mov    rbp,rax
  4115a5:	cmp    r13,rbp
  4115a8:	je     41161e <main@@Base+0xccde>
  4115aa:	mov    QWORD PTR [rsp+0x20],0x0
  4115b3:	mov    DWORD PTR [rsp+0x30],0x0
  4115bb:	mov    BYTE PTR [rsp+0xc],0x0
  4115c0:	cmp    rbp,r14
  4115c3:	je     4116eb <main@@Base+0xcdab>
  4115c9:	mov    r12,QWORD PTR [rsp+0x28]
  4115ce:	mov    rdi,r12
  4115d1:	mov    rsi,rbp
  4115d4:	mov    rdx,r14
  4115d7:	lea    rcx,[rsp+0x30]
  4115dc:	lea    r8,[rsp+0x20]
  4115e1:	call   4215e0 <flatcc_json_parser_integer@@Base>
  4115e6:	cmp    rax,rbp
  4115e9:	mov    rbx,QWORD PTR [rsp+0x18]
  4115ee:	je     4117ac <main@@Base+0xce6c>
  4115f4:	mov    r13,rax
  4115f7:	mov    r15,QWORD PTR [rsp+0x20]
  4115fc:	cmp    DWORD PTR [rsp+0x30],0x0
  411601:	je     4117f6 <main@@Base+0xceb6>
  411607:	cmp    r15,0x81
  41160e:	jb     411897 <main@@Base+0xcf57>
  411614:	mov    ecx,0x8
  411619:	jmp    411808 <main@@Base+0xcec8>
  41161e:	mov    rax,r15
  411621:	movabs rcx,0xffffff0000000000
  41162b:	and    rax,rcx
  41162e:	movabs rcx,0x7563320000000000
  411638:	cmp    rax,rcx
  41163b:	jne    411681 <main@@Base+0xcd41>
  41163d:	mov    rbp,r13
  411640:	cmp    r12,0x4
  411644:	mov    r12,QWORD PTR [rsp+0x28]
  411649:	jl     411907 <main@@Base+0xcfc7>
  41164f:	cmp    DWORD PTR [r12+0x14],0x0
  411655:	movzx  eax,BYTE PTR [r13+0x3]
  41165a:	je     411709 <main@@Base+0xcdc9>
  411660:	cmp    al,0x21
  411662:	jl     41166f <main@@Base+0xcd2f>
  411664:	mov    rbp,r13
  411667:	cmp    al,0x3a
  411669:	jne    411907 <main@@Base+0xcfc7>
  41166f:	lea    rsi,[r13+0x3]
  411673:	mov    DWORD PTR [r12+0x14],0x0
  41167c:	jmp    411718 <main@@Base+0xcdd8>
  411681:	movabs rax,0xffff000000000000
  41168b:	and    r15,rax
  41168e:	movabs rax,0x7563000000000000
  411698:	cmp    r15,rax
  41169b:	jne    4116e1 <main@@Base+0xcda1>
  41169d:	mov    rbp,r13
  4116a0:	cmp    r12,0x3
  4116a4:	mov    r12,QWORD PTR [rsp+0x28]
  4116a9:	jl     411a1b <main@@Base+0xd0db>
  4116af:	cmp    DWORD PTR [r12+0x14],0x0
  4116b5:	movzx  eax,BYTE PTR [r13+0x2]
  4116ba:	je     4117c0 <main@@Base+0xce80>
  4116c0:	cmp    al,0x21
  4116c2:	jl     4116cf <main@@Base+0xcd8f>
  4116c4:	mov    rbp,r13
  4116c7:	cmp    al,0x3a
  4116c9:	jne    411a1b <main@@Base+0xd0db>
  4116cf:	lea    rsi,[r13+0x2]
  4116d3:	mov    DWORD PTR [r12+0x14],0x0
  4116dc:	jmp    4117cf <main@@Base+0xce8f>
  4116e1:	mov    r12,QWORD PTR [rsp+0x28]
  4116e6:	jmp    411a6e <main@@Base+0xd12e>
  4116eb:	xor    r15d,r15d
  4116ee:	mov    r13,r14
  4116f1:	mov    r12,QWORD PTR [rsp+0x28]
  4116f6:	mov    rbx,QWORD PTR [rsp+0x18]
  4116fb:	cmp    rbp,r13
  4116fe:	jne    4118d9 <main@@Base+0xcf99>
  411704:	jmp    4118a4 <main@@Base+0xcf64>
  411709:	mov    rbp,r13
  41170c:	cmp    al,0x22
  41170e:	jne    411907 <main@@Base+0xcfc7>
  411714:	lea    rsi,[r13+0x4]
  411718:	mov    rax,r14
  41171b:	sub    rax,rsi
  41171e:	cmp    rax,0x2
  411722:	jl     41173c <main@@Base+0xcdfc>
  411724:	cmp    BYTE PTR [rsi],0x20
  411727:	jg     41174a <main@@Base+0xce0a>
  411729:	jne    41173c <main@@Base+0xcdfc>
  41172b:	cmp    BYTE PTR [rsi+0x1],0x20
  41172f:	jle    41173c <main@@Base+0xcdfc>
  411731:	add    rsi,0x1
  411735:	cmp    rsi,r14
  411738:	jne    41174f <main@@Base+0xce0f>
  41173a:	jmp    411797 <main@@Base+0xce57>
  41173c:	mov    rdi,r12
  41173f:	mov    rdx,r14
  411742:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  411747:	mov    rsi,rax
  41174a:	cmp    rsi,r14
  41174d:	je     411797 <main@@Base+0xce57>
  41174f:	cmp    BYTE PTR [rsi],0x3a
  411752:	jne    411797 <main@@Base+0xce57>
  411754:	lea    rbp,[rsi+0x1]
  411758:	mov    rax,r14
  41175b:	sub    rax,rbp
  41175e:	cmp    rax,0x2
  411762:	jl     4118f6 <main@@Base+0xcfb6>
  411768:	cmp    BYTE PTR [rbp+0x0],0x20
  41176c:	jg     411907 <main@@Base+0xcfc7>
  411772:	jne    4118f6 <main@@Base+0xcfb6>
  411778:	cmp    BYTE PTR [rsi+0x2],0x20
  41177c:	jle    4118f6 <main@@Base+0xcfb6>
  411782:	add    rsi,0x2
  411786:	mov    rbp,rsi
  411789:	cmp    r13,rbp
  41178c:	jne    411910 <main@@Base+0xcfd0>
  411792:	jmp    411a6e <main@@Base+0xd12e>
  411797:	mov    ecx,0x4
  41179c:	mov    rdi,r12
  41179f:	mov    rdx,r14
  4117a2:	call   41f940 <flatcc_json_parser_set_error@@Base>
  4117a7:	jmp    411904 <main@@Base+0xcfc4>
  4117ac:	xor    r15d,r15d
  4117af:	mov    r13,rbp
  4117b2:	cmp    rbp,r13
  4117b5:	jne    4118d9 <main@@Base+0xcf99>
  4117bb:	jmp    4118a4 <main@@Base+0xcf64>
  4117c0:	mov    rbp,r13
  4117c3:	cmp    al,0x22
  4117c5:	jne    411a1b <main@@Base+0xd0db>
  4117cb:	lea    rsi,[r13+0x3]
  4117cf:	mov    rax,r14
  4117d2:	sub    rax,rsi
  4117d5:	cmp    rax,0x2
  4117d9:	jl     411827 <main@@Base+0xcee7>
  4117db:	cmp    BYTE PTR [rsi],0x20
  4117de:	jg     411835 <main@@Base+0xcef5>
  4117e0:	jne    411827 <main@@Base+0xcee7>
  4117e2:	cmp    BYTE PTR [rsi+0x1],0x20
  4117e6:	jle    411827 <main@@Base+0xcee7>
  4117e8:	add    rsi,0x1
  4117ec:	cmp    rsi,r14
  4117ef:	jne    41183a <main@@Base+0xcefa>
  4117f1:	jmp    411882 <main@@Base+0xcf42>
  4117f6:	cmp    r15,0x80
  4117fd:	jb     41189a <main@@Base+0xcf5a>
  411803:	mov    ecx,0x7
  411808:	mov    rdi,r12
  41180b:	mov    rsi,r13
  41180e:	mov    rdx,r14
  411811:	call   41f940 <flatcc_json_parser_set_error@@Base>
  411816:	mov    r13,rax
  411819:	xor    r15d,r15d
  41181c:	cmp    rbp,r13
  41181f:	jne    4118d9 <main@@Base+0xcf99>
  411825:	jmp    4118a4 <main@@Base+0xcf64>
  411827:	mov    rdi,r12
  41182a:	mov    rdx,r14
  41182d:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  411832:	mov    rsi,rax
  411835:	cmp    rsi,r14
  411838:	je     411882 <main@@Base+0xcf42>
  41183a:	cmp    BYTE PTR [rsi],0x3a
  41183d:	jne    411882 <main@@Base+0xcf42>
  41183f:	lea    rbp,[rsi+0x1]
  411843:	mov    rax,r14
  411846:	sub    rax,rbp
  411849:	cmp    rax,0x2
  41184d:	jl     411a0a <main@@Base+0xd0ca>
  411853:	cmp    BYTE PTR [rbp+0x0],0x20
  411857:	jg     411a1b <main@@Base+0xd0db>
  41185d:	jne    411a0a <main@@Base+0xd0ca>
  411863:	cmp    BYTE PTR [rsi+0x2],0x20
  411867:	jle    411a0a <main@@Base+0xd0ca>
  41186d:	add    rsi,0x2
  411871:	mov    rbp,rsi
  411874:	cmp    r13,rbp
  411877:	jne    411a20 <main@@Base+0xd0e0>
  41187d:	jmp    411a6e <main@@Base+0xd12e>
  411882:	mov    ecx,0x4
  411887:	mov    rdi,r12
  41188a:	mov    rdx,r14
  41188d:	call   41f940 <flatcc_json_parser_set_error@@Base>
  411892:	jmp    411a18 <main@@Base+0xd0d8>
  411897:	neg    r15
  41189a:	mov    BYTE PTR [rsp+0xc],r15b
  41189f:	cmp    rbp,r13
  4118a2:	jne    4118d9 <main@@Base+0xcf99>
  4118a4:	mov    rdi,r12
  4118a7:	mov    rsi,rbp
  4118aa:	mov    rdx,r14
  4118ad:	lea    rcx,[rip+0x19bec]        # 42b4a0 <filename@@Base+0x3d0>
  4118b4:	lea    r8,[rsp+0xc]
  4118b9:	call   410010 <main@@Base+0xb6d0>
  4118be:	mov    r13,rax
  4118c1:	cmp    rax,rbp
  4118c4:	je     413b32 <main@@Base+0xf1f2>
  4118ca:	cmp    r13,r14
  4118cd:	je     413b32 <main@@Base+0xf1f2>
  4118d3:	movzx  r15d,BYTE PTR [rsp+0xc]
  4118d9:	cmp    r15b,0x2
  4118dd:	jne    4118eb <main@@Base+0xcfab>
  4118df:	test   BYTE PTR [r12+0x10],0x2
  4118e5:	je     411b3f <main@@Base+0xd1ff>
  4118eb:	mov    rdi,QWORD PTR [r12]
  4118ef:	xor    esi,esi
  4118f1:	jmp    411b24 <main@@Base+0xd1e4>
  4118f6:	mov    rdi,r12
  4118f9:	mov    rsi,rbp
  4118fc:	mov    rdx,r14
  4118ff:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  411904:	mov    rbp,rax
  411907:	cmp    r13,rbp
  41190a:	je     411a6e <main@@Base+0xd12e>
  411910:	mov    QWORD PTR [rsp+0x20],0x0
  411919:	mov    DWORD PTR [rsp+0x30],0x0
  411921:	mov    BYTE PTR [rsp+0xc],0x0
  411926:	cmp    rbp,r14
  411929:	je     41195e <main@@Base+0xd01e>
  41192b:	mov    rdi,r12
  41192e:	mov    rsi,rbp
  411931:	mov    rdx,r14
  411934:	lea    rcx,[rsp+0x30]
  411939:	lea    r8,[rsp+0x20]
  41193e:	call   4215e0 <flatcc_json_parser_integer@@Base>
  411943:	cmp    rax,rbp
  411946:	mov    rbx,QWORD PTR [rsp+0x18]
  41194b:	je     411970 <main@@Base+0xd030>
  41194d:	mov    r13,rax
  411950:	cmp    DWORD PTR [rsp+0x30],0x0
  411955:	je     41197d <main@@Base+0xd03d>
  411957:	mov    ecx,0x8
  41195c:	jmp    411990 <main@@Base+0xd050>
  41195e:	xor    r15d,r15d
  411961:	mov    r13,r14
  411964:	mov    rbx,QWORD PTR [rsp+0x18]
  411969:	cmp    rbp,r13
  41196c:	jne    4119de <main@@Base+0xd09e>
  41196e:	jmp    4119a9 <main@@Base+0xd069>
  411970:	xor    r15d,r15d
  411973:	mov    r13,rbp
  411976:	cmp    rbp,r13
  411979:	jne    4119de <main@@Base+0xd09e>
  41197b:	jmp    4119a9 <main@@Base+0xd069>
  41197d:	mov    r15,QWORD PTR [rsp+0x20]
  411982:	cmp    r15,0x100
  411989:	jb     4119fe <main@@Base+0xd0be>
  41198b:	mov    ecx,0x7
  411990:	mov    rdi,r12
  411993:	mov    rsi,r13
  411996:	mov    rdx,r14
  411999:	call   41f940 <flatcc_json_parser_set_error@@Base>
  41199e:	mov    r13,rax
  4119a1:	xor    r15d,r15d
  4119a4:	cmp    rbp,r13
  4119a7:	jne    4119de <main@@Base+0xd09e>
  4119a9:	mov    rdi,r12
  4119ac:	mov    rsi,rbp
  4119af:	mov    rdx,r14
  4119b2:	lea    rcx,[rip+0x19b07]        # 42b4c0 <filename@@Base+0x3f0>
  4119b9:	lea    r8,[rsp+0xc]
  4119be:	call   410220 <main@@Base+0xb8e0>
  4119c3:	mov    r13,rax
  4119c6:	cmp    rax,rbp
  4119c9:	je     413b32 <main@@Base+0xf1f2>
  4119cf:	cmp    r13,r14
  4119d2:	je     413b32 <main@@Base+0xf1f2>
  4119d8:	movzx  r15d,BYTE PTR [rsp+0xc]
  4119de:	cmp    r15b,0x2
  4119e2:	jne    4119f0 <main@@Base+0xd0b0>
  4119e4:	test   BYTE PTR [r12+0x10],0x2
  4119ea:	je     411b3f <main@@Base+0xd1ff>
  4119f0:	mov    rdi,QWORD PTR [r12]
  4119f4:	mov    esi,0x3
  4119f9:	jmp    411b24 <main@@Base+0xd1e4>
  4119fe:	mov    BYTE PTR [rsp+0xc],r15b
  411a03:	cmp    rbp,r13
  411a06:	jne    4119de <main@@Base+0xd09e>
  411a08:	jmp    4119a9 <main@@Base+0xd069>
  411a0a:	mov    rdi,r12
  411a0d:	mov    rsi,rbp
  411a10:	mov    rdx,r14
  411a13:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  411a18:	mov    rbp,rax
  411a1b:	cmp    r13,rbp
  411a1e:	je     411a6e <main@@Base+0xd12e>
  411a20:	mov    QWORD PTR [rsp+0x20],0x0
  411a29:	mov    DWORD PTR [rsp+0x30],0x0
  411a31:	mov    BYTE PTR [rsp+0xc],0x0
  411a36:	cmp    rbp,r14
  411a39:	je     411a89 <main@@Base+0xd149>
  411a3b:	mov    rdi,r12
  411a3e:	mov    rsi,rbp
  411a41:	mov    rdx,r14
  411a44:	lea    rcx,[rsp+0x30]
  411a49:	lea    r8,[rsp+0x20]
  411a4e:	call   4215e0 <flatcc_json_parser_integer@@Base>
  411a53:	cmp    rax,rbp
  411a56:	mov    rbx,QWORD PTR [rsp+0x18]
  411a5b:	je     411a9b <main@@Base+0xd15b>
  411a5d:	mov    r13,rax
  411a60:	cmp    DWORD PTR [rsp+0x30],0x0
  411a65:	je     411aa8 <main@@Base+0xd168>
  411a67:	mov    ecx,0x8
  411a6c:	jmp    411abf <main@@Base+0xd17f>
  411a6e:	mov    rdi,r12
  411a71:	mov    rsi,r13
  411a74:	mov    rdx,r14
  411a77:	call   41ff40 <flatcc_json_parser_unmatched_symbol@@Base>
  411a7c:	mov    r13,rax
  411a7f:	mov    rbx,QWORD PTR [rsp+0x18]
  411a84:	jmp    411b3f <main@@Base+0xd1ff>
  411a89:	xor    r15d,r15d
  411a8c:	mov    r13,r14
  411a8f:	mov    rbx,QWORD PTR [rsp+0x18]
  411a94:	cmp    rbp,r13
  411a97:	jne    411b0d <main@@Base+0xd1cd>
  411a99:	jmp    411ad8 <main@@Base+0xd198>
  411a9b:	xor    r15d,r15d
  411a9e:	mov    r13,rbp
  411aa1:	cmp    rbp,r13
  411aa4:	jne    411b0d <main@@Base+0xd1cd>
  411aa6:	jmp    411ad8 <main@@Base+0xd198>
  411aa8:	mov    r15,QWORD PTR [rsp+0x20]
  411aad:	cmp    r15,0x100
  411ab4:	jb     411bd6 <main@@Base+0xd296>
  411aba:	mov    ecx,0x7
  411abf:	mov    rdi,r12
  411ac2:	mov    rsi,r13
  411ac5:	mov    rdx,r14
  411ac8:	call   41f940 <flatcc_json_parser_set_error@@Base>
  411acd:	mov    r13,rax
  411ad0:	xor    r15d,r15d
  411ad3:	cmp    rbp,r13
  411ad6:	jne    411b0d <main@@Base+0xd1cd>
  411ad8:	mov    rdi,r12
  411adb:	mov    rsi,rbp
  411ade:	mov    rdx,r14
  411ae1:	lea    rcx,[rip+0x199f8]        # 42b4e0 <filename@@Base+0x410>
  411ae8:	lea    r8,[rsp+0xc]
  411aed:	call   410220 <main@@Base+0xb8e0>
  411af2:	mov    r13,rax
  411af5:	cmp    rax,rbp
  411af8:	je     413b32 <main@@Base+0xf1f2>
  411afe:	cmp    r13,r14
  411b01:	je     413b32 <main@@Base+0xf1f2>
  411b07:	movzx  r15d,BYTE PTR [rsp+0xc]
  411b0d:	cmp    r15b,0x2
  411b11:	jne    411b1b <main@@Base+0xd1db>
  411b13:	test   BYTE PTR [r12+0x10],0x2
  411b19:	je     411b3f <main@@Base+0xd1ff>
  411b1b:	mov    rdi,QWORD PTR [r12]
  411b1f:	mov    esi,0x2
  411b24:	mov    edx,0x1
  411b29:	mov    ecx,0x1
  411b2e:	call   41d880 <flatcc_builder_table_add@@Base>
  411b33:	test   rax,rax
  411b36:	je     413b32 <main@@Base+0xf1f2>
  411b3c:	mov    BYTE PTR [rax],r15b
  411b3f:	mov    rax,r14
  411b42:	sub    rax,r13
  411b45:	cmp    rax,0x2
  411b49:	jl     411b69 <main@@Base+0xd229>
  411b4b:	cmp    BYTE PTR [r13+0x0],0x20
  411b50:	jg     411b7a <main@@Base+0xd23a>
  411b52:	jne    411b69 <main@@Base+0xd229>
  411b54:	cmp    BYTE PTR [r13+0x1],0x20
  411b59:	jle    411b69 <main@@Base+0xd229>
  411b5b:	add    r13,0x1
  411b5f:	cmp    r13,r14
  411b62:	jne    411b7f <main@@Base+0xd23f>
  411b64:	jmp    411be9 <main@@Base+0xd2a9>
  411b69:	mov    rdi,r12
  411b6c:	mov    rsi,r13
  411b6f:	mov    rdx,r14
  411b72:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  411b77:	mov    r13,rax
  411b7a:	cmp    r13,r14
  411b7d:	je     411be9 <main@@Base+0xd2a9>
  411b7f:	movzx  eax,BYTE PTR [r13+0x0]
  411b84:	cmp    al,0x2c
  411b86:	jne    413aba <main@@Base+0xf17a>
  411b8c:	lea    rsi,[r13+0x1]
  411b90:	mov    rax,r14
  411b93:	sub    rax,rsi
  411b96:	cmp    rax,0x2
  411b9a:	jl     411bb8 <main@@Base+0xd278>
  411b9c:	cmp    BYTE PTR [rsi],0x20
  411b9f:	jg     411bc6 <main@@Base+0xd286>
  411ba1:	jne    411bb8 <main@@Base+0xd278>
  411ba3:	cmp    BYTE PTR [r13+0x2],0x20
  411ba8:	jle    411bb8 <main@@Base+0xd278>
  411baa:	add    r13,0x2
  411bae:	mov    rsi,r13
  411bb1:	cmp    rsi,r14
  411bb4:	jne    411bcb <main@@Base+0xd28b>
  411bb6:	jmp    411bfd <main@@Base+0xd2bd>
  411bb8:	mov    rdi,r12
  411bbb:	mov    rdx,r14
  411bbe:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  411bc3:	mov    rsi,rax
  411bc6:	cmp    rsi,r14
  411bc9:	je     411bfd <main@@Base+0xd2bd>
  411bcb:	cmp    BYTE PTR [rsi],0x7d
  411bce:	jne    411181 <main@@Base+0xc841>
  411bd4:	jmp    411c0d <main@@Base+0xd2cd>
  411bd6:	mov    BYTE PTR [rsp+0xc],r15b
  411bdb:	cmp    rbp,r13
  411bde:	jne    411b0d <main@@Base+0xd1cd>
  411be4:	jmp    411ad8 <main@@Base+0xd198>
  411be9:	mov    rbp,r14
  411bec:	cmp    DWORD PTR [r12+0x20],0x0
  411bf2:	jne    413c6f <main@@Base+0xf32f>
  411bf8:	jmp    413c60 <main@@Base+0xf320>
  411bfd:	mov    ecx,0xa
  411c02:	mov    rdi,r12
  411c05:	mov    rsi,r14
  411c08:	jmp    410f41 <main@@Base+0xc601>
  411c0d:	lea    rbp,[rsi+0x1]
  411c11:	mov    rax,r14
  411c14:	sub    rax,rbp
  411c17:	cmp    rax,0x2
  411c1b:	jl     413afd <main@@Base+0xf1bd>
  411c21:	cmp    BYTE PTR [rbp+0x0],0x20
  411c25:	jg     410f4c <main@@Base+0xc60c>
  411c2b:	jne    413afd <main@@Base+0xf1bd>
  411c31:	cmp    BYTE PTR [rsi+0x2],0x20
  411c35:	jle    413afd <main@@Base+0xf1bd>
  411c3b:	add    rsi,0x2
  411c3f:	mov    rbp,rsi
  411c42:	cmp    DWORD PTR [r12+0x20],0x0
  411c48:	jne    413c6f <main@@Base+0xf32f>
  411c4e:	jmp    413c60 <main@@Base+0xf320>
  411c53:	mov    rsi,rcx
  411c56:	movabs rax,0x6d616e79616e7900
  411c60:	lea    rcx,[r12+0x14]
  411c65:	mov    QWORD PTR [rsp+0x10],rcx
  411c6a:	lea    rbp,[r12+0x20]
  411c6f:	lea    rax,[rax+0x5f]
  411c73:	mov    QWORD PTR [rsp+0x40],rax
  411c78:	mov    QWORD PTR [rsp+0x38],rbp
  411c7d:	mov    r13,r14
  411c80:	cmp    rsi,r14
  411c83:	je     411cc3 <main@@Base+0xd383>
  411c85:	mov    al,BYTE PTR [rsi]
  411c87:	cmp    al,0x2e
  411c89:	je     411ca0 <main@@Base+0xd360>
  411c8b:	cmp    al,0x22
  411c8d:	jne    411cb5 <main@@Base+0xd375>
  411c8f:	add    rsi,0x1
  411c93:	mov    rax,QWORD PTR [rsp+0x10]
  411c98:	mov    DWORD PTR [rax],0x0
  411c9e:	jmp    411cc0 <main@@Base+0xd380>
  411ca0:	mov    ecx,0x5
  411ca5:	mov    rdi,r12
  411ca8:	mov    rdx,r14
  411cab:	call   41f940 <flatcc_json_parser_set_error@@Base>
  411cb0:	mov    r13,rax
  411cb3:	jmp    411cc3 <main@@Base+0xd383>
  411cb5:	mov    rax,QWORD PTR [rsp+0x10]
  411cba:	mov    DWORD PTR [rax],0x1
  411cc0:	mov    r13,rsi
  411cc3:	mov    r15,r14
  411cc6:	sub    r15,r13
  411cc9:	cmp    r15,0x8
  411ccd:	jb     411cfe <main@@Base+0xd3be>
  411ccf:	movbe  rbp,QWORD PTR [r13+0x0]
  411cd5:	cmp    rbp,QWORD PTR [rsp+0x40]
  411cda:	jne    411d93 <main@@Base+0xd453>
  411ce0:	lea    r15,[r13+0x8]
  411ce4:	mov    rax,r14
  411ce7:	sub    rax,r15
  411cea:	cmp    rax,0x8
  411cee:	jb     411df3 <main@@Base+0xd4b3>
  411cf4:	movbe  rcx,QWORD PTR [r15]
  411cf9:	jmp    411e7f <main@@Base+0xd53f>
  411cfe:	mov    eax,r15d
  411d01:	and    al,0xf
  411d03:	add    al,0xff
  411d05:	cmp    al,0x7
  411d07:	ja     4123e3 <main@@Base+0xdaa3>
  411d0d:	movzx  eax,al
  411d10:	lea    rcx,[rip+0x128cd]        # 4245e4 <_IO_stdin_used@@Base+0x5e4>
  411d17:	movsxd rbx,DWORD PTR [rcx+rax*4]
  411d1b:	add    rbx,rcx
  411d1e:	xor    r8d,r8d
  411d21:	xor    eax,eax
  411d23:	xor    ecx,ecx
  411d25:	xor    edx,edx
  411d27:	xor    edi,edi
  411d29:	xor    ebp,ebp
  411d2b:	xor    esi,esi
  411d2d:	jmp    rbx
  411d2f:	movsx  r8,BYTE PTR [r13+0x7]
  411d34:	movsx  rax,BYTE PTR [r13+0x6]
  411d39:	shl    rax,0x8
  411d3d:	or     rax,r8
  411d40:	movsx  rcx,BYTE PTR [r13+0x5]
  411d45:	shl    rcx,0x10
  411d49:	or     rcx,rax
  411d4c:	movsx  rdx,BYTE PTR [r13+0x4]
  411d51:	shl    rdx,0x18
  411d55:	or     rdx,rcx
  411d58:	movsx  rdi,BYTE PTR [r13+0x3]
  411d5d:	shl    rdi,0x20
  411d61:	or     rdi,rdx
  411d64:	movsx  rbp,BYTE PTR [r13+0x2]
  411d69:	shl    rbp,0x28
  411d6d:	or     rbp,rdi
  411d70:	movsx  rsi,BYTE PTR [r13+0x1]
  411d75:	shl    rsi,0x30
  411d79:	or     rsi,rbp
  411d7c:	movzx  ebp,BYTE PTR [r13+0x0]
  411d81:	shl    rbp,0x38
  411d85:	or     rbp,rsi
  411d88:	cmp    rbp,QWORD PTR [rsp+0x40]
  411d8d:	je     411ce0 <main@@Base+0xd3a0>
  411d93:	mov    rax,rbp
  411d96:	and    rax,0xffffffffffffff00
  411d9c:	movabs rcx,0x6d616e79616e7900
  411da6:	cmp    rax,rcx
  411da9:	jne    411fb6 <main@@Base+0xd676>
  411daf:	mov    rax,r13
  411db2:	cmp    r15,0x8
  411db6:	jl     41224a <main@@Base+0xd90a>
  411dbc:	mov    rax,QWORD PTR [rsp+0x10]
  411dc1:	cmp    DWORD PTR [rax],0x0
  411dc4:	mov    cl,BYTE PTR [r13+0x7]
  411dc8:	je     411ec5 <main@@Base+0xd585>
  411dce:	cmp    cl,0x21
  411dd1:	jl     411ddf <main@@Base+0xd49f>
  411dd3:	mov    rax,r13
  411dd6:	cmp    cl,0x3a
  411dd9:	jne    41224a <main@@Base+0xd90a>
  411ddf:	lea    rsi,[r13+0x7]
  411de3:	mov    rax,QWORD PTR [rsp+0x10]
  411de8:	mov    DWORD PTR [rax],0x0
  411dee:	jmp    411ed5 <main@@Base+0xd595>
  411df3:	mov    ecx,eax
  411df5:	and    cl,0xf
  411df8:	add    cl,0xff
  411dfb:	cmp    cl,0x7
  411dfe:	ja     4120e2 <main@@Base+0xd7a2>
  411e04:	movzx  ecx,cl
  411e07:	lea    rdx,[rip+0x128d6]        # 4246e4 <_IO_stdin_used@@Base+0x6e4>
  411e0e:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  411e12:	add    rcx,rdx
  411e15:	xor    r8d,r8d
  411e18:	xor    r9d,r9d
  411e1b:	xor    edx,edx
  411e1d:	xor    esi,esi
  411e1f:	xor    ebp,ebp
  411e21:	xor    edi,edi
  411e23:	xor    ebx,ebx
  411e25:	jmp    rcx
  411e27:	movsx  r8,BYTE PTR [r13+0xf]
  411e2c:	movsx  r9,BYTE PTR [r13+0xe]
  411e31:	shl    r9,0x8
  411e35:	or     r9,r8
  411e38:	movsx  rdx,BYTE PTR [r13+0xd]
  411e3d:	shl    rdx,0x10
  411e41:	or     rdx,r9
  411e44:	movsx  rsi,BYTE PTR [r13+0xc]
  411e49:	shl    rsi,0x18
  411e4d:	or     rsi,rdx
  411e50:	movsx  rbp,BYTE PTR [r13+0xb]
  411e55:	shl    rbp,0x20
  411e59:	or     rbp,rsi
  411e5c:	movsx  rdi,BYTE PTR [r13+0xa]
  411e61:	shl    rdi,0x28
  411e65:	or     rdi,rbp
  411e68:	movsx  rbx,BYTE PTR [r13+0x9]
  411e6d:	shl    rbx,0x30
  411e71:	or     rbx,rdi
  411e74:	movzx  ecx,BYTE PTR [r15]
  411e78:	shl    rcx,0x38
  411e7c:	or     rcx,rbx
  411e7f:	shr    rcx,0x20
  411e83:	cmp    rcx,0x74797065
  411e8a:	jne    4120e2 <main@@Base+0xd7a2>
  411e90:	cmp    rax,0x5
  411e94:	jl     4120e2 <main@@Base+0xd7a2>
  411e9a:	mov    rax,QWORD PTR [rsp+0x10]
  411e9f:	cmp    DWORD PTR [rax],0x0
  411ea2:	mov    al,BYTE PTR [r13+0xc]
  411ea6:	je     411efc <main@@Base+0xd5bc>
  411ea8:	cmp    al,0x21
  411eaa:	jl     411eb4 <main@@Base+0xd574>
  411eac:	cmp    al,0x3a
  411eae:	jne    4120e2 <main@@Base+0xd7a2>
  411eb4:	add    r13,0xc
  411eb8:	mov    rax,QWORD PTR [rsp+0x10]
  411ebd:	mov    DWORD PTR [rax],0x0
  411ec3:	jmp    411f08 <main@@Base+0xd5c8>
  411ec5:	mov    rax,r13
  411ec8:	cmp    cl,0x22
  411ecb:	jne    41224a <main@@Base+0xd90a>
  411ed1:	lea    rsi,[r13+0x8]
  411ed5:	mov    rax,r14
  411ed8:	sub    rax,rsi
  411edb:	cmp    rax,0x2
  411edf:	jl     411f46 <main@@Base+0xd606>
  411ee1:	cmp    BYTE PTR [rsi],0x20
  411ee4:	jg     411f54 <main@@Base+0xd614>
  411ee6:	jne    411f46 <main@@Base+0xd606>
  411ee8:	cmp    BYTE PTR [rsi+0x1],0x20
  411eec:	jle    411f46 <main@@Base+0xd606>
  411eee:	add    rsi,0x1
  411ef2:	cmp    rsi,r14
  411ef5:	jne    411f59 <main@@Base+0xd619>
  411ef7:	jmp    411f9d <main@@Base+0xd65d>
  411efc:	cmp    al,0x22
  411efe:	jne    4120e2 <main@@Base+0xd7a2>
  411f04:	add    r13,0xd
  411f08:	mov    rax,r14
  411f0b:	sub    rax,r13
  411f0e:	cmp    rax,0x2
  411f12:	jl     412069 <main@@Base+0xd729>
  411f18:	cmp    BYTE PTR [r13+0x0],0x20
  411f1d:	jg     41207a <main@@Base+0xd73a>
  411f23:	jne    412069 <main@@Base+0xd729>
  411f29:	cmp    BYTE PTR [r13+0x1],0x20
  411f2e:	jle    412069 <main@@Base+0xd729>
  411f34:	add    r13,0x1
  411f38:	cmp    r13,r14
  411f3b:	jne    41207f <main@@Base+0xd73f>
  411f41:	jmp    4120c6 <main@@Base+0xd786>
  411f46:	mov    rdi,r12
  411f49:	mov    rdx,r14
  411f4c:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  411f51:	mov    rsi,rax
  411f54:	cmp    rsi,r14
  411f57:	je     411f9d <main@@Base+0xd65d>
  411f59:	cmp    BYTE PTR [rsi],0x3a
  411f5c:	jne    411f9d <main@@Base+0xd65d>
  411f5e:	lea    rax,[rsi+0x1]
  411f62:	mov    rcx,r14
  411f65:	sub    rcx,rax
  411f68:	cmp    rcx,0x2
  411f6c:	jl     41223c <main@@Base+0xd8fc>
  411f72:	cmp    BYTE PTR [rax],0x20
  411f75:	jg     41224a <main@@Base+0xd90a>
  411f7b:	jne    41223c <main@@Base+0xd8fc>
  411f81:	cmp    BYTE PTR [rsi+0x2],0x20
  411f85:	jle    41223c <main@@Base+0xd8fc>
  411f8b:	add    rsi,0x2
  411f8f:	mov    rax,rsi
  411f92:	cmp    r13,rax
  411f95:	jne    412253 <main@@Base+0xd913>
  411f9b:	jmp    411fb6 <main@@Base+0xd676>
  411f9d:	mov    ecx,0x4
  411fa2:	mov    rdi,r12
  411fa5:	mov    rdx,r14
  411fa8:	call   41f940 <flatcc_json_parser_set_error@@Base>
  411fad:	cmp    r13,rax
  411fb0:	jne    412253 <main@@Base+0xd913>
  411fb6:	mov    rax,rbp
  411fb9:	shr    rax,0x10
  411fbd:	movabs rcx,0x707265666978
  411fc7:	cmp    rax,rcx
  411fca:	jne    412010 <main@@Base+0xd6d0>
  411fcc:	mov    rax,r13
  411fcf:	cmp    r15,0x7
  411fd3:	jl     4122ee <main@@Base+0xd9ae>
  411fd9:	mov    rax,QWORD PTR [rsp+0x10]
  411fde:	cmp    DWORD PTR [rax],0x0
  411fe1:	mov    cl,BYTE PTR [r13+0x6]
  411fe5:	je     4120ed <main@@Base+0xd7ad>
  411feb:	cmp    cl,0x21
  411fee:	jl     411ffc <main@@Base+0xd6bc>
  411ff0:	mov    rax,r13
  411ff3:	cmp    cl,0x3a
  411ff6:	jne    4122ee <main@@Base+0xd9ae>
  411ffc:	lea    rsi,[r13+0x6]
  412000:	mov    rax,QWORD PTR [rsp+0x10]
  412005:	mov    DWORD PTR [rax],0x0
  41200b:	jmp    4120fd <main@@Base+0xd7bd>
  412010:	shr    rbp,0x18
  412014:	movabs rax,0x6d6f766965
  41201e:	cmp    rbp,rax
  412021:	jne    4123e3 <main@@Base+0xdaa3>
  412027:	mov    rbp,r13
  41202a:	cmp    r15,0x6
  41202e:	jl     41234a <main@@Base+0xda0a>
  412034:	mov    rax,QWORD PTR [rsp+0x10]
  412039:	cmp    DWORD PTR [rax],0x0
  41203c:	mov    al,BYTE PTR [r13+0x5]
  412040:	je     412199 <main@@Base+0xd859>
  412046:	cmp    al,0x21
  412048:	jl     412055 <main@@Base+0xd715>
  41204a:	mov    rbp,r13
  41204d:	cmp    al,0x3a
  41204f:	jne    41234a <main@@Base+0xda0a>
  412055:	lea    rsi,[r13+0x5]
  412059:	mov    rax,QWORD PTR [rsp+0x10]
  41205e:	mov    DWORD PTR [rax],0x0
  412064:	jmp    4121a8 <main@@Base+0xd868>
  412069:	mov    rdi,r12
  41206c:	mov    rsi,r13
  41206f:	mov    rdx,r14
  412072:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  412077:	mov    r13,rax
  41207a:	cmp    r13,r14
  41207d:	je     4120c6 <main@@Base+0xd786>
  41207f:	cmp    BYTE PTR [r13+0x0],0x3a
  412084:	jne    4120c6 <main@@Base+0xd786>
  412086:	lea    rax,[r13+0x1]
  41208a:	mov    rcx,r14
  41208d:	sub    rcx,rax
  412090:	cmp    rcx,0x2
  412094:	jl     412286 <main@@Base+0xd946>
  41209a:	cmp    BYTE PTR [rax],0x20
  41209d:	jg     412294 <main@@Base+0xd954>
  4120a3:	jne    412286 <main@@Base+0xd946>
  4120a9:	cmp    BYTE PTR [r13+0x2],0x20
  4120ae:	jle    412286 <main@@Base+0xd946>
  4120b4:	add    r13,0x2
  4120b8:	mov    rax,r13
  4120bb:	cmp    r15,rax
  4120be:	jne    41229d <main@@Base+0xd95d>
  4120c4:	jmp    4120e2 <main@@Base+0xd7a2>
  4120c6:	mov    ecx,0x4
  4120cb:	mov    rdi,r12
  4120ce:	mov    rsi,r13
  4120d1:	mov    rdx,r14
  4120d4:	call   41f940 <flatcc_json_parser_set_error@@Base>
  4120d9:	cmp    r15,rax
  4120dc:	jne    41229d <main@@Base+0xd95d>
  4120e2:	mov    rdi,r12
  4120e5:	mov    rsi,r15
  4120e8:	jmp    4123e9 <main@@Base+0xdaa9>
  4120ed:	mov    rax,r13
  4120f0:	cmp    cl,0x22
  4120f3:	jne    4122ee <main@@Base+0xd9ae>
  4120f9:	lea    rsi,[r13+0x7]
  4120fd:	mov    rax,r14
  412100:	sub    rax,rsi
  412103:	cmp    rax,0x2
  412107:	jl     412121 <main@@Base+0xd7e1>
  412109:	cmp    BYTE PTR [rsi],0x20
  41210c:	jg     41212f <main@@Base+0xd7ef>
  41210e:	jne    412121 <main@@Base+0xd7e1>
  412110:	cmp    BYTE PTR [rsi+0x1],0x20
  412114:	jle    412121 <main@@Base+0xd7e1>
  412116:	add    rsi,0x1
  41211a:	cmp    rsi,r14
  41211d:	jne    412134 <main@@Base+0xd7f4>
  41211f:	jmp    41217b <main@@Base+0xd83b>
  412121:	mov    rdi,r12
  412124:	mov    rdx,r14
  412127:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  41212c:	mov    rsi,rax
  41212f:	cmp    rsi,r14
  412132:	je     41217b <main@@Base+0xd83b>
  412134:	cmp    BYTE PTR [rsi],0x3a
  412137:	jne    41217b <main@@Base+0xd83b>
  412139:	lea    rax,[rsi+0x1]
  41213d:	mov    rcx,r14
  412140:	sub    rcx,rax
  412143:	cmp    rcx,0x2
  412147:	jl     4122e0 <main@@Base+0xd9a0>
  41214d:	cmp    BYTE PTR [rax],0x20
  412150:	jg     4122ee <main@@Base+0xd9ae>
  412156:	jne    4122e0 <main@@Base+0xd9a0>
  41215c:	cmp    BYTE PTR [rsi+0x2],0x20
  412160:	jle    4122e0 <main@@Base+0xd9a0>
  412166:	add    rsi,0x2
  41216a:	mov    rax,rsi
  41216d:	cmp    r13,rax
  412170:	jne    4122f7 <main@@Base+0xd9b7>
  412176:	jmp    4123e3 <main@@Base+0xdaa3>
  41217b:	mov    ecx,0x4
  412180:	mov    rdi,r12
  412183:	mov    rdx,r14
  412186:	call   41f940 <flatcc_json_parser_set_error@@Base>
  41218b:	cmp    r13,rax
  41218e:	jne    4122f7 <main@@Base+0xd9b7>
  412194:	jmp    4123e3 <main@@Base+0xdaa3>
  412199:	mov    rbp,r13
  41219c:	cmp    al,0x22
  41219e:	jne    41234a <main@@Base+0xda0a>
  4121a4:	lea    rsi,[r13+0x6]
  4121a8:	mov    rax,r14
  4121ab:	sub    rax,rsi
  4121ae:	cmp    rax,0x2
  4121b2:	jl     4121cc <main@@Base+0xd88c>
  4121b4:	cmp    BYTE PTR [rsi],0x20
  4121b7:	jg     4121da <main@@Base+0xd89a>
  4121b9:	jne    4121cc <main@@Base+0xd88c>
  4121bb:	cmp    BYTE PTR [rsi+0x1],0x20
  4121bf:	jle    4121cc <main@@Base+0xd88c>
  4121c1:	add    rsi,0x1
  4121c5:	cmp    rsi,r14
  4121c8:	jne    4121df <main@@Base+0xd89f>
  4121ca:	jmp    412227 <main@@Base+0xd8e7>
  4121cc:	mov    rdi,r12
  4121cf:	mov    rdx,r14
  4121d2:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  4121d7:	mov    rsi,rax
  4121da:	cmp    rsi,r14
  4121dd:	je     412227 <main@@Base+0xd8e7>
  4121df:	cmp    BYTE PTR [rsi],0x3a
  4121e2:	jne    412227 <main@@Base+0xd8e7>
  4121e4:	lea    rbp,[rsi+0x1]
  4121e8:	mov    rax,r14
  4121eb:	sub    rax,rbp
  4121ee:	cmp    rax,0x2
  4121f2:	jl     412339 <main@@Base+0xd9f9>
  4121f8:	cmp    BYTE PTR [rbp+0x0],0x20
  4121fc:	jg     41234a <main@@Base+0xda0a>
  412202:	jne    412339 <main@@Base+0xd9f9>
  412208:	cmp    BYTE PTR [rsi+0x2],0x20
  41220c:	jle    412339 <main@@Base+0xd9f9>
  412212:	add    rsi,0x2
  412216:	mov    rbp,rsi
  412219:	cmp    r13,rbp
  41221c:	jne    412353 <main@@Base+0xda13>
  412222:	jmp    4123e3 <main@@Base+0xdaa3>
  412227:	mov    ecx,0x4
  41222c:	mov    rdi,r12
  41222f:	mov    rdx,r14
  412232:	call   41f940 <flatcc_json_parser_set_error@@Base>
  412237:	jmp    412347 <main@@Base+0xda07>
  41223c:	mov    rdi,r12
  41223f:	mov    rsi,rax
  412242:	mov    rdx,r14
  412245:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  41224a:	cmp    r13,rax
  41224d:	je     411fb6 <main@@Base+0xd676>
  412253:	mov    r9,QWORD PTR [rsp+0x30]
  412258:	sub    rsp,0x8
  41225c:	mov    ecx,0x0
  412261:	mov    r8d,0x3
  412267:	mov    rdi,r12
  41226a:	mov    rsi,rax
  41226d:	mov    rdx,r14
  412270:	lea    rax,[rip+0xffffffffffffeac9]        # 410d40 <main@@Base+0xc400>
  412277:	push   rax
  412278:	call   422430 <flatcc_json_parser_union_vector@@Base>
  41227d:	add    rsp,0x10
  412281:	jmp    4123f1 <main@@Base+0xdab1>
  412286:	mov    rdi,r12
  412289:	mov    rsi,rax
  41228c:	mov    rdx,r14
  41228f:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  412294:	cmp    r15,rax
  412297:	je     4120e2 <main@@Base+0xd7a2>
  41229d:	mov    r9,QWORD PTR [rsp+0x30]
  4122a2:	sub    rsp,0x8
  4122a6:	mov    ecx,0x0
  4122ab:	mov    r8d,0x3
  4122b1:	mov    rdi,r12
  4122b4:	mov    rsi,rax
  4122b7:	mov    rdx,r14
  4122ba:	lea    rax,[rip+0x348f]        # 415750 <main@@Base+0x10e10>
  4122c1:	push   rax
  4122c2:	lea    rax,[rip+0xffffffffffffea77]        # 410d40 <main@@Base+0xc400>
  4122c9:	push   rax
  4122ca:	lea    rax,[rip+0x1922f]        # 42b500 <filename@@Base+0x430>
  4122d1:	push   rax
  4122d2:	call   4228e0 <flatcc_json_parser_union_type_vector@@Base>
  4122d7:	add    rsp,0x20
  4122db:	jmp    4123f1 <main@@Base+0xdab1>
  4122e0:	mov    rdi,r12
  4122e3:	mov    rsi,rax
  4122e6:	mov    rdx,r14
  4122e9:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  4122ee:	cmp    r13,rax
  4122f1:	je     4123e3 <main@@Base+0xdaa3>
  4122f7:	mov    rdi,r12
  4122fa:	mov    rsi,rax
  4122fd:	mov    rdx,r14
  412300:	lea    rcx,[rsp+0xc]
  412305:	call   415760 <main@@Base+0x10e20>
  41230a:	mov    rbp,rax
  41230d:	mov    r15d,DWORD PTR [rsp+0xc]
  412312:	test   r15d,r15d
  412315:	je     413cba <main@@Base+0xf37a>
  41231b:	mov    rdi,QWORD PTR [r12]
  41231f:	xor    esi,esi
  412321:	call   41d720 <flatcc_builder_table_add_offset@@Base>
  412326:	test   rax,rax
  412329:	mov    rbx,QWORD PTR [rsp+0x18]
  41232e:	jne    4124ff <main@@Base+0xdbbf>
  412334:	jmp    413c6f <main@@Base+0xf32f>
  412339:	mov    rdi,r12
  41233c:	mov    rsi,rbp
  41233f:	mov    rdx,r14
  412342:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  412347:	mov    rbp,rax
  41234a:	cmp    r13,rbp
  41234d:	je     4123e3 <main@@Base+0xdaa3>
  412353:	mov    DWORD PTR [rsp+0xc],0x0
  41235b:	mov    rdi,QWORD PTR [r12]
  41235f:	mov    esi,0xa
  412364:	call   41c500 <flatcc_builder_start_table@@Base>
  412369:	test   eax,eax
  41236b:	jne    413cc1 <main@@Base+0xf381>
  412371:	mov    ecx,0x5
  412376:	mov    rdi,r12
  412379:	mov    rsi,rbp
  41237c:	mov    rdx,r14
  41237f:	lea    r8,[rsp+0x20]
  412384:	call   421d60 <flatcc_json_parser_prepare_unions@@Base>
  412389:	cmp    rax,r14
  41238c:	mov    rbx,QWORD PTR [rsp+0x18]
  412391:	je     413cc6 <main@@Base+0xf386>
  412397:	cmp    rbp,r14
  41239a:	je     412496 <main@@Base+0xdb56>
  4123a0:	cmp    BYTE PTR [rbp+0x0],0x7b
  4123a4:	jne    412496 <main@@Base+0xdb56>
  4123aa:	lea    rax,[rbp+0x1]
  4123ae:	mov    rcx,r14
  4123b1:	sub    rcx,rax
  4123b4:	cmp    rcx,0x2
  4123b8:	jl     412507 <main@@Base+0xdbc7>
  4123be:	cmp    BYTE PTR [rax],0x20
  4123c1:	jg     412515 <main@@Base+0xdbd5>
  4123c7:	jne    412507 <main@@Base+0xdbc7>
  4123cd:	cmp    BYTE PTR [rbp+0x2],0x20
  4123d1:	jle    412507 <main@@Base+0xdbc7>
  4123d7:	add    rbp,0x2
  4123db:	mov    rax,rbp
  4123de:	jmp    412515 <main@@Base+0xdbd5>
  4123e3:	mov    rdi,r12
  4123e6:	mov    rsi,r13
  4123e9:	mov    rdx,r14
  4123ec:	call   41ff40 <flatcc_json_parser_unmatched_symbol@@Base>
  4123f1:	mov    rbp,rax
  4123f4:	mov    rbx,QWORD PTR [rsp+0x18]
  4123f9:	mov    rax,r14
  4123fc:	sub    rax,rbp
  4123ff:	cmp    rax,0x2
  412403:	jl     412421 <main@@Base+0xdae1>
  412405:	cmp    BYTE PTR [rbp+0x0],0x20
  412409:	jg     412432 <main@@Base+0xdaf2>
  41240b:	jne    412421 <main@@Base+0xdae1>
  41240d:	cmp    BYTE PTR [rbp+0x1],0x20
  412411:	jle    412421 <main@@Base+0xdae1>
  412413:	add    rbp,0x1
  412417:	cmp    rbp,r14
  41241a:	jne    41243b <main@@Base+0xdafb>
  41241c:	jmp    413b3a <main@@Base+0xf1fa>
  412421:	mov    rdi,r12
  412424:	mov    rsi,rbp
  412427:	mov    rdx,r14
  41242a:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  41242f:	mov    rbp,rax
  412432:	cmp    rbp,r14
  412435:	je     413b3a <main@@Base+0xf1fa>
  41243b:	mov    al,BYTE PTR [rbp+0x0]
  41243e:	cmp    al,0x2c
  412440:	jne    413b42 <main@@Base+0xf202>
  412446:	lea    rsi,[rbp+0x1]
  41244a:	mov    rax,r14
  41244d:	sub    rax,rsi
  412450:	cmp    rax,0x2
  412454:	jl     41246c <main@@Base+0xdb2c>
  412456:	cmp    BYTE PTR [rsi],0x20
  412459:	jg     41247a <main@@Base+0xdb3a>
  41245b:	jne    41246c <main@@Base+0xdb2c>
  41245d:	cmp    BYTE PTR [rbp+0x2],0x20
  412461:	jle    41246c <main@@Base+0xdb2c>
  412463:	add    rbp,0x2
  412467:	mov    rsi,rbp
  41246a:	jmp    41247a <main@@Base+0xdb3a>
  41246c:	mov    rdi,r12
  41246f:	mov    rdx,r14
  412472:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  412477:	mov    rsi,rax
  41247a:	cmp    rsi,r14
  41247d:	mov    rbp,QWORD PTR [rsp+0x38]
  412482:	je     413b83 <main@@Base+0xf243>
  412488:	cmp    BYTE PTR [rsi],0x7d
  41248b:	jne    411c7d <main@@Base+0xd33d>
  412491:	jmp    413ba5 <main@@Base+0xf265>
  412496:	mov    ecx,0x15
  41249b:	mov    rdi,r12
  41249e:	mov    rsi,rbp
  4124a1:	mov    rdx,r14
  4124a4:	call   41f940 <flatcc_json_parser_set_error@@Base>
  4124a9:	mov    rbp,rax
  4124ac:	mov    rax,QWORD PTR [rsp+0x38]
  4124b1:	cmp    DWORD PTR [rax],0x0
  4124b4:	jne    413cc6 <main@@Base+0xf386>
  4124ba:	mov    rcx,QWORD PTR [rsp+0x20]
  4124bf:	mov    rdi,r12
  4124c2:	mov    rsi,rbp
  4124c5:	mov    rdx,r14
  4124c8:	call   421de0 <flatcc_json_parser_finalize_unions@@Base>
  4124cd:	mov    rbp,rax
  4124d0:	mov    rdi,QWORD PTR [r12]
  4124d4:	call   41cf10 <flatcc_builder_end_table@@Base>
  4124d9:	mov    DWORD PTR [rsp+0xc],eax
  4124dd:	test   eax,eax
  4124df:	je     413cc6 <main@@Base+0xf386>
  4124e5:	mov    r15d,eax
  4124e8:	mov    rdi,QWORD PTR [r12]
  4124ec:	mov    esi,0x1
  4124f1:	call   41d720 <flatcc_builder_table_add_offset@@Base>
  4124f6:	test   rax,rax
  4124f9:	je     413c6f <main@@Base+0xf32f>
  4124ff:	mov    DWORD PTR [rax],r15d
  412502:	jmp    4123f9 <main@@Base+0xdab9>
  412507:	mov    rdi,r12
  41250a:	mov    rsi,rax
  41250d:	mov    rdx,r14
  412510:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  412515:	mov    rsi,r14
  412518:	cmp    rax,r14
  41251b:	movabs rbp,0x7261637465720000
  412525:	je     412566 <main@@Base+0xdc26>
  412527:	cmp    BYTE PTR [rax],0x7d
  41252a:	jne    412563 <main@@Base+0xdc23>
  41252c:	lea    rbp,[rax+0x1]
  412530:	mov    rcx,r14
  412533:	sub    rcx,rbp
  412536:	cmp    rcx,0x2
  41253a:	jl     4139ed <main@@Base+0xf0ad>
  412540:	cmp    BYTE PTR [rbp+0x0],0x20
  412544:	jg     4124ac <main@@Base+0xdb6c>
  41254a:	jne    4139ed <main@@Base+0xf0ad>
  412550:	cmp    BYTE PTR [rax+0x2],0x20
  412554:	jle    4139ed <main@@Base+0xf0ad>
  41255a:	add    rax,0x2
  41255e:	jmp    4124a9 <main@@Base+0xdb69>
  412563:	mov    rsi,rax
  412566:	mov    r13,r12
  412569:	mov    r12,r14
  41256c:	cmp    rsi,r14
  41256f:	je     4125b0 <main@@Base+0xdc70>
  412571:	movzx  eax,BYTE PTR [rsi]
  412574:	cmp    al,0x2e
  412576:	je     41258d <main@@Base+0xdc4d>
  412578:	cmp    al,0x22
  41257a:	jne    4125a2 <main@@Base+0xdc62>
  41257c:	add    rsi,0x1
  412580:	mov    rax,QWORD PTR [rsp+0x10]
  412585:	mov    DWORD PTR [rax],0x0
  41258b:	jmp    4125ad <main@@Base+0xdc6d>
  41258d:	mov    ecx,0x5
  412592:	mov    rdi,r13
  412595:	mov    rdx,r14
  412598:	call   41f940 <flatcc_json_parser_set_error@@Base>
  41259d:	mov    r12,rax
  4125a0:	jmp    4125b0 <main@@Base+0xdc70>
  4125a2:	mov    rax,QWORD PTR [rsp+0x10]
  4125a7:	mov    DWORD PTR [rax],0x1
  4125ad:	mov    r12,rsi
  4125b0:	mov    rcx,r14
  4125b3:	sub    rcx,r12
  4125b6:	cmp    rcx,0x8
  4125ba:	jb     4125c7 <main@@Base+0xdc87>
  4125bc:	movbe  rax,QWORD PTR [r12]
  4125c2:	jmp    412662 <main@@Base+0xdd22>
  4125c7:	mov    eax,ecx
  4125c9:	and    al,0xf
  4125cb:	add    al,0xff
  4125cd:	cmp    al,0x7
  4125cf:	ja     413409 <main@@Base+0xeac9>
  4125d5:	movzx  eax,al
  4125d8:	lea    rdx,[rip+0x12025]        # 424604 <_IO_stdin_used@@Base+0x604>
  4125df:	movsxd rax,DWORD PTR [rdx+rax*4]
  4125e3:	add    rax,rdx
  4125e6:	xor    r8d,r8d
  4125e9:	xor    r9d,r9d
  4125ec:	xor    edx,edx
  4125ee:	xor    esi,esi
  4125f0:	xor    ebx,ebx
  4125f2:	xor    ebp,ebp
  4125f4:	xor    edi,edi
  4125f6:	jmp    rax
  4125f8:	movsx  r8,BYTE PTR [r12+0x7]
  4125fe:	movsx  r9,BYTE PTR [r12+0x6]
  412604:	shl    r9,0x8
  412608:	or     r9,r8
  41260b:	movsx  rdx,BYTE PTR [r12+0x5]
  412611:	shl    rdx,0x10
  412615:	or     rdx,r9
  412618:	movsx  rsi,BYTE PTR [r12+0x4]
  41261e:	shl    rsi,0x18
  412622:	or     rsi,rdx
  412625:	movsx  rbx,BYTE PTR [r12+0x3]
  41262b:	shl    rbx,0x20
  41262f:	or     rbx,rsi
  412632:	movsx  rbp,BYTE PTR [r12+0x2]
  412638:	shl    rbp,0x28
  41263c:	or     rbp,rbx
  41263f:	movsx  rdi,BYTE PTR [r12+0x1]
  412645:	shl    rdi,0x30
  412649:	or     rdi,rbp
  41264c:	movzx  eax,BYTE PTR [r12]
  412651:	shl    rax,0x38
  412655:	or     rax,rdi
  412658:	movabs rbp,0x7261637465720000
  412662:	movabs rdx,0x6368617261637465
  41266c:	cmp    rax,rdx
  41266f:	jae    4126b6 <main@@Base+0xdd76>
  412671:	movabs rdx,0x63616d656f5f7479
  41267b:	cmp    rax,rdx
  41267e:	je     41273c <main@@Base+0xddfc>
  412684:	movabs rdx,0x616e7461676f6e69
  41268e:	cmp    rax,rdx
  412691:	jne    41275b <main@@Base+0xde1b>
  412697:	lea    r15,[r12+0x8]
  41269c:	mov    rax,r14
  41269f:	sub    rax,r15
  4126a2:	cmp    rax,0x8
  4126a6:	jb     4127b9 <main@@Base+0xde79>
  4126ac:	movbe  rcx,QWORD PTR [r15]
  4126b1:	jmp    412856 <main@@Base+0xdf16>
  4126b6:	movabs rcx,0x6d61696e5f636860
  4126c0:	cmp    rax,rcx
  4126c3:	ja     4126f7 <main@@Base+0xddb7>
  4126c5:	movabs rcx,0x6368617261637465
  4126cf:	cmp    rax,rcx
  4126d2:	jne    413409 <main@@Base+0xeac9>
  4126d8:	lea    r15,[r12+0x8]
  4126dd:	mov    rax,r14
  4126e0:	sub    rax,r15
  4126e3:	cmp    rax,0x8
  4126e7:	jb     412a26 <main@@Base+0xe0e6>
  4126ed:	movbe  rcx,QWORD PTR [r15]
  4126f2:	jmp    412ac3 <main@@Base+0xe183>
  4126f7:	movabs rcx,0x736964655f6b6963
  412701:	cmp    rax,rcx
  412704:	je     4128ae <main@@Base+0xdf6e>
  41270a:	movabs rcx,0x6d61696e5f636861
  412714:	cmp    rax,rcx
  412717:	jne    413409 <main@@Base+0xeac9>
  41271d:	lea    r15,[r12+0x8]
  412722:	mov    rax,r14
  412725:	sub    rax,r15
  412728:	cmp    rax,0x8
  41272c:	jb     412b75 <main@@Base+0xe235>
  412732:	movbe  rcx,QWORD PTR [r15]
  412737:	jmp    412c12 <main@@Base+0xe2d2>
  41273c:	lea    r15,[r12+0x8]
  412741:	mov    rax,r14
  412744:	sub    rax,r15
  412747:	cmp    rax,0x8
  41274b:	jb     4128cd <main@@Base+0xdf8d>
  412751:	movbe  rcx,QWORD PTR [r15]
  412756:	jmp    41296a <main@@Base+0xe02a>
  41275b:	shr    rax,0x18
  41275f:	movabs rdx,0x63616d656f
  412769:	cmp    rax,rdx
  41276c:	jne    413409 <main@@Base+0xeac9>
  412772:	mov    rax,r12
  412775:	cmp    rcx,0x6
  412779:	jl     4133ce <main@@Base+0xea8e>
  41277f:	mov    rax,QWORD PTR [rsp+0x10]
  412784:	cmp    DWORD PTR [rax],0x0
  412787:	movzx  ecx,BYTE PTR [r12+0x5]
  41278d:	je     412eda <main@@Base+0xe59a>
  412793:	cmp    cl,0x21
  412796:	jl     4127a4 <main@@Base+0xde64>
  412798:	mov    rax,r12
  41279b:	cmp    cl,0x3a
  41279e:	jne    4133ce <main@@Base+0xea8e>
  4127a4:	lea    rsi,[r12+0x5]
  4127a9:	mov    rax,QWORD PTR [rsp+0x10]
  4127ae:	mov    DWORD PTR [rax],0x0
  4127b4:	jmp    412eeb <main@@Base+0xe5ab>
  4127b9:	mov    ecx,eax
  4127bb:	and    cl,0xf
  4127be:	add    cl,0xff
  4127c1:	cmp    cl,0x7
  4127c4:	ja     413920 <main@@Base+0xefe0>
  4127ca:	movzx  ecx,cl
  4127cd:	lea    rdx,[rip+0x11ef0]        # 4246c4 <_IO_stdin_used@@Base+0x6c4>
  4127d4:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  4127d8:	add    rcx,rdx
  4127db:	xor    r8d,r8d
  4127de:	xor    r9d,r9d
  4127e1:	xor    edx,edx
  4127e3:	xor    esi,esi
  4127e5:	xor    ebx,ebx
  4127e7:	xor    ebp,ebp
  4127e9:	xor    edi,edi
  4127eb:	jmp    rcx
  4127ed:	movsx  r8,BYTE PTR [r12+0xf]
  4127f3:	movsx  r9,BYTE PTR [r12+0xe]
  4127f9:	shl    r9,0x8
  4127fd:	or     r9,r8
  412800:	movsx  rdx,BYTE PTR [r12+0xd]
  412806:	shl    rdx,0x10
  41280a:	or     rdx,r9
  41280d:	movsx  rsi,BYTE PTR [r12+0xc]
  412813:	shl    rsi,0x18
  412817:	or     rsi,rdx
  41281a:	movsx  rbx,BYTE PTR [r12+0xb]
  412820:	shl    rbx,0x20
  412824:	or     rbx,rsi
  412827:	movsx  rbp,BYTE PTR [r12+0xa]
  41282d:	shl    rbp,0x28
  412831:	or     rbp,rbx
  412834:	movsx  rdi,BYTE PTR [r12+0x9]
  41283a:	shl    rdi,0x30
  41283e:	or     rdi,rbp
  412841:	movzx  ecx,BYTE PTR [r15]
  412845:	shl    rcx,0x38
  412849:	or     rcx,rdi
  41284c:	movabs rbp,0x7261637465720000
  412856:	mov    rdx,rcx
  412859:	shr    rdx,0x8
  41285d:	movabs rsi,0x73745f74797065
  412867:	cmp    rdx,rsi
  41286a:	jne    4129c8 <main@@Base+0xe088>
  412870:	cmp    rax,0x8
  412874:	jl     413920 <main@@Base+0xefe0>
  41287a:	mov    rax,QWORD PTR [rsp+0x10]
  41287f:	cmp    DWORD PTR [rax],0x0
  412882:	movzx  eax,BYTE PTR [r12+0xf]
  412888:	je     412f26 <main@@Base+0xe5e6>
  41288e:	cmp    al,0x21
  412890:	jl     41289a <main@@Base+0xdf5a>
  412892:	cmp    al,0x3a
  412894:	jne    413920 <main@@Base+0xefe0>
  41289a:	add    r12,0xf
  41289e:	mov    rax,QWORD PTR [rsp+0x10]
  4128a3:	mov    DWORD PTR [rax],0x0
  4128a9:	jmp    412f32 <main@@Base+0xe5f2>
  4128ae:	lea    r15,[r12+0x8]
  4128b3:	mov    rax,r14
  4128b6:	sub    rax,r15
  4128b9:	cmp    rax,0x8
  4128bd:	jb     412c41 <main@@Base+0xe301>
  4128c3:	movbe  rcx,QWORD PTR [r15]
  4128c8:	jmp    412cde <main@@Base+0xe39e>
  4128cd:	mov    ecx,eax
  4128cf:	and    cl,0xf
  4128d2:	add    cl,0xff
  4128d5:	cmp    cl,0x7
  4128d8:	ja     413920 <main@@Base+0xefe0>
  4128de:	movzx  ecx,cl
  4128e1:	lea    rdx,[rip+0x11dbc]        # 4246a4 <_IO_stdin_used@@Base+0x6a4>
  4128e8:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  4128ec:	add    rcx,rdx
  4128ef:	xor    r8d,r8d
  4128f2:	xor    r9d,r9d
  4128f5:	xor    edx,edx
  4128f7:	xor    esi,esi
  4128f9:	xor    edi,edi
  4128fb:	xor    ebp,ebp
  4128fd:	xor    ebx,ebx
  4128ff:	jmp    rcx
  412901:	movsx  r8,BYTE PTR [r12+0xf]
  412907:	movsx  r9,BYTE PTR [r12+0xe]
  41290d:	shl    r9,0x8
  412911:	or     r9,r8
  412914:	movsx  rdx,BYTE PTR [r12+0xd]
  41291a:	shl    rdx,0x10
  41291e:	or     rdx,r9
  412921:	movsx  rsi,BYTE PTR [r12+0xc]
  412927:	shl    rsi,0x18
  41292b:	or     rsi,rdx
  41292e:	movsx  rdi,BYTE PTR [r12+0xb]
  412934:	shl    rdi,0x20
  412938:	or     rdi,rsi
  41293b:	movsx  rbp,BYTE PTR [r12+0xa]
  412941:	shl    rbp,0x28
  412945:	or     rbp,rdi
  412948:	movsx  rbx,BYTE PTR [r12+0x9]
  41294e:	shl    rbx,0x30
  412952:	or     rbx,rbp
  412955:	movzx  ecx,BYTE PTR [r15]
  412959:	shl    rcx,0x38
  41295d:	or     rcx,rbx
  412960:	movabs rbp,0x7261637465720000
  41296a:	movabs rdx,0xffff000000000000
  412974:	and    rcx,rdx
  412977:	movabs rdx,0x7065000000000000
  412981:	cmp    rcx,rdx
  412984:	jne    413920 <main@@Base+0xefe0>
  41298a:	cmp    rax,0x3
  41298e:	jl     413920 <main@@Base+0xefe0>
  412994:	mov    rax,QWORD PTR [rsp+0x10]
  412999:	cmp    DWORD PTR [rax],0x0
  41299c:	movzx  eax,BYTE PTR [r12+0xa]
  4129a2:	je     412f71 <main@@Base+0xe631>
  4129a8:	cmp    al,0x21
  4129aa:	jl     4129b4 <main@@Base+0xe074>
  4129ac:	cmp    al,0x3a
  4129ae:	jne    413920 <main@@Base+0xefe0>
  4129b4:	add    r12,0xa
  4129b8:	mov    rax,QWORD PTR [rsp+0x10]
  4129bd:	mov    DWORD PTR [rax],0x0
  4129c3:	jmp    412f7d <main@@Base+0xe63d>
  4129c8:	movabs rdx,0xffff000000000000
  4129d2:	and    rcx,rdx
  4129d5:	movabs rdx,0x7374000000000000
  4129df:	cmp    rcx,rdx
  4129e2:	jne    413920 <main@@Base+0xefe0>
  4129e8:	cmp    rax,0x3
  4129ec:	jl     413920 <main@@Base+0xefe0>
  4129f2:	mov    rax,QWORD PTR [rsp+0x10]
  4129f7:	cmp    DWORD PTR [rax],0x0
  4129fa:	movzx  eax,BYTE PTR [r12+0xa]
  412a00:	je     4131b1 <main@@Base+0xe871>
  412a06:	cmp    al,0x21
  412a08:	jl     412a12 <main@@Base+0xe0d2>
  412a0a:	cmp    al,0x3a
  412a0c:	jne    413920 <main@@Base+0xefe0>
  412a12:	add    r12,0xa
  412a16:	mov    rax,QWORD PTR [rsp+0x10]
  412a1b:	mov    DWORD PTR [rax],0x0
  412a21:	jmp    4131bd <main@@Base+0xe87d>
  412a26:	mov    ecx,eax
  412a28:	and    cl,0xf
  412a2b:	add    cl,0xff
  412a2e:	cmp    cl,0x7
  412a31:	ja     413920 <main@@Base+0xefe0>
  412a37:	movzx  ecx,cl
  412a3a:	lea    rdx,[rip+0x11c43]        # 424684 <_IO_stdin_used@@Base+0x684>
  412a41:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  412a45:	add    rcx,rdx
  412a48:	xor    r8d,r8d
  412a4b:	xor    r9d,r9d
  412a4e:	xor    edx,edx
  412a50:	xor    esi,esi
  412a52:	xor    ebx,ebx
  412a54:	xor    ebp,ebp
  412a56:	xor    edi,edi
  412a58:	jmp    rcx
  412a5a:	movsx  r8,BYTE PTR [r12+0xf]
  412a60:	movsx  r9,BYTE PTR [r12+0xe]
  412a66:	shl    r9,0x8
  412a6a:	or     r9,r8
  412a6d:	movsx  rdx,BYTE PTR [r12+0xd]
  412a73:	shl    rdx,0x10
  412a77:	or     rdx,r9
  412a7a:	movsx  rsi,BYTE PTR [r12+0xc]
  412a80:	shl    rsi,0x18
  412a84:	or     rsi,rdx
  412a87:	movsx  rbx,BYTE PTR [r12+0xb]
  412a8d:	shl    rbx,0x20
  412a91:	or     rbx,rsi
  412a94:	movsx  rbp,BYTE PTR [r12+0xa]
  412a9a:	shl    rbp,0x28
  412a9e:	or     rbp,rbx
  412aa1:	movsx  rdi,BYTE PTR [r12+0x9]
  412aa7:	shl    rdi,0x30
  412aab:	or     rdi,rbp
  412aae:	movzx  ecx,BYTE PTR [r15]
  412ab2:	shl    rcx,0x38
  412ab6:	or     rcx,rdi
  412ab9:	movabs rbp,0x7261637465720000
  412ac3:	mov    rdx,rcx
  412ac6:	shr    rdx,0x8
  412aca:	movabs rsi,0x72735f74797065
  412ad4:	cmp    rdx,rsi
  412ad7:	jne    412b17 <main@@Base+0xe1d7>
  412ad9:	cmp    rax,0x8
  412add:	jl     413920 <main@@Base+0xefe0>
  412ae3:	mov    rax,QWORD PTR [rsp+0x10]
  412ae8:	cmp    DWORD PTR [rax],0x0
  412aeb:	movzx  eax,BYTE PTR [r12+0xf]
  412af1:	je     41310c <main@@Base+0xe7cc>
  412af7:	cmp    al,0x21
  412af9:	jl     412b03 <main@@Base+0xe1c3>
  412afb:	cmp    al,0x3a
  412afd:	jne    413920 <main@@Base+0xefe0>
  412b03:	add    r12,0xf
  412b07:	mov    rax,QWORD PTR [rsp+0x10]
  412b0c:	mov    DWORD PTR [rax],0x0
  412b12:	jmp    413118 <main@@Base+0xe7d8>
  412b17:	movabs rdx,0xffff000000000000
  412b21:	and    rcx,rdx
  412b24:	movabs rdx,0x7273000000000000
  412b2e:	cmp    rcx,rdx
  412b31:	jne    413920 <main@@Base+0xefe0>
  412b37:	cmp    rax,0x3
  412b3b:	jl     413920 <main@@Base+0xefe0>
  412b41:	mov    rax,QWORD PTR [rsp+0x10]
  412b46:	cmp    DWORD PTR [rax],0x0
  412b49:	movzx  eax,BYTE PTR [r12+0xa]
  412b4f:	je     413311 <main@@Base+0xe9d1>
  412b55:	cmp    al,0x21
  412b57:	jl     412b61 <main@@Base+0xe221>
  412b59:	cmp    al,0x3a
  412b5b:	jne    413920 <main@@Base+0xefe0>
  412b61:	add    r12,0xa
  412b65:	mov    rax,QWORD PTR [rsp+0x10]
  412b6a:	mov    DWORD PTR [rax],0x0
  412b70:	jmp    41331d <main@@Base+0xe9dd>
  412b75:	mov    ecx,eax
  412b77:	and    cl,0xf
  412b7a:	add    cl,0xff
  412b7d:	cmp    cl,0x7
  412b80:	ja     413920 <main@@Base+0xefe0>
  412b86:	movzx  ecx,cl
  412b89:	lea    rdx,[rip+0x11ab4]        # 424644 <_IO_stdin_used@@Base+0x644>
  412b90:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  412b94:	add    rcx,rdx
  412b97:	xor    r8d,r8d
  412b9a:	xor    r9d,r9d
  412b9d:	xor    edx,edx
  412b9f:	xor    esi,esi
  412ba1:	xor    ebx,ebx
  412ba3:	xor    ebp,ebp
  412ba5:	xor    edi,edi
  412ba7:	jmp    rcx
  412ba9:	movsx  r8,BYTE PTR [r12+0xf]
  412baf:	movsx  r9,BYTE PTR [r12+0xe]
  412bb5:	shl    r9,0x8
  412bb9:	or     r9,r8
  412bbc:	movsx  rdx,BYTE PTR [r12+0xd]
  412bc2:	shl    rdx,0x10
  412bc6:	or     rdx,r9
  412bc9:	movsx  rsi,BYTE PTR [r12+0xc]
  412bcf:	shl    rsi,0x18
  412bd3:	or     rsi,rdx
  412bd6:	movsx  rbx,BYTE PTR [r12+0xb]
  412bdc:	shl    rbx,0x20
  412be0:	or     rbx,rsi
  412be3:	movsx  rbp,BYTE PTR [r12+0xa]
  412be9:	shl    rbp,0x28
  412bed:	or     rbp,rbx
  412bf0:	movsx  rdi,BYTE PTR [r12+0x9]
  412bf6:	shl    rdi,0x30
  412bfa:	or     rdi,rbp
  412bfd:	movzx  ecx,BYTE PTR [r15]
  412c01:	shl    rcx,0x38
  412c05:	or     rcx,rdi
  412c08:	movabs rbp,0x7261637465720000
  412c12:	lea    rdx,[rbp+0x5f74]
  412c19:	cmp    rcx,rdx
  412c1c:	jne    412d36 <main@@Base+0xe3f6>
  412c22:	lea    r15,[r12+0x10]
  412c27:	mov    rax,r14
  412c2a:	sub    rax,r15
  412c2d:	cmp    rax,0x8
  412c31:	jb     412de4 <main@@Base+0xe4a4>
  412c37:	movbe  rcx,QWORD PTR [r15]
  412c3c:	jmp    412e81 <main@@Base+0xe541>
  412c41:	mov    ecx,eax
  412c43:	and    cl,0xf
  412c46:	add    cl,0xff
  412c49:	cmp    cl,0x7
  412c4c:	ja     413920 <main@@Base+0xefe0>
  412c52:	movzx  ecx,cl
  412c55:	lea    rdx,[rip+0x119c8]        # 424624 <_IO_stdin_used@@Base+0x624>
  412c5c:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  412c60:	add    rcx,rdx
  412c63:	xor    r8d,r8d
  412c66:	xor    r9d,r9d
  412c69:	xor    edx,edx
  412c6b:	xor    esi,esi
  412c6d:	xor    ebx,ebx
  412c6f:	xor    ebp,ebp
  412c71:	xor    edi,edi
  412c73:	jmp    rcx
  412c75:	movsx  r8,BYTE PTR [r12+0xf]
  412c7b:	movsx  r9,BYTE PTR [r12+0xe]
  412c81:	shl    r9,0x8
  412c85:	or     r9,r8
  412c88:	movsx  rdx,BYTE PTR [r12+0xd]
  412c8e:	shl    rdx,0x10
  412c92:	or     rdx,r9
  412c95:	movsx  rsi,BYTE PTR [r12+0xc]
  412c9b:	shl    rsi,0x18
  412c9f:	or     rsi,rdx
  412ca2:	movsx  rbx,BYTE PTR [r12+0xb]
  412ca8:	shl    rbx,0x20
  412cac:	or     rbx,rsi
  412caf:	movsx  rbp,BYTE PTR [r12+0xa]
  412cb5:	shl    rbp,0x28
  412cb9:	or     rbp,rbx
  412cbc:	movsx  rdi,BYTE PTR [r12+0x9]
  412cc2:	shl    rdi,0x30
  412cc6:	or     rdi,rbp
  412cc9:	movzx  ecx,BYTE PTR [r15]
  412ccd:	shl    rcx,0x38
  412cd1:	or     rcx,rdi
  412cd4:	movabs rbp,0x7261637465720000
  412cde:	mov    rdx,rcx
  412ce1:	shr    rdx,0x10
  412ce5:	movabs rsi,0x6b5f74797065
  412cef:	cmp    rdx,rsi
  412cf2:	jne    412d8e <main@@Base+0xe44e>
  412cf8:	cmp    rax,0x7
  412cfc:	jl     413920 <main@@Base+0xefe0>
  412d02:	mov    rax,QWORD PTR [rsp+0x10]
  412d07:	cmp    DWORD PTR [rax],0x0
  412d0a:	movzx  eax,BYTE PTR [r12+0xe]
  412d10:	je     4131e8 <main@@Base+0xe8a8>
  412d16:	cmp    al,0x21
  412d18:	jl     412d22 <main@@Base+0xe3e2>
  412d1a:	cmp    al,0x3a
  412d1c:	jne    413920 <main@@Base+0xefe0>
  412d22:	add    r12,0xe
  412d26:	mov    rax,QWORD PTR [rsp+0x10]
  412d2b:	mov    DWORD PTR [rax],0x0
  412d31:	jmp    4131f4 <main@@Base+0xe8b4>
  412d36:	and    rcx,0xffffffffffff0000
  412d3d:	cmp    rcx,rbp
  412d40:	jne    413920 <main@@Base+0xefe0>
  412d46:	cmp    rax,0x7
  412d4a:	jl     413920 <main@@Base+0xefe0>
  412d50:	mov    rax,QWORD PTR [rsp+0x10]
  412d55:	cmp    DWORD PTR [rax],0x0
  412d58:	movzx  eax,BYTE PTR [r12+0xe]
  412d5e:	je     4134b9 <main@@Base+0xeb79>
  412d64:	cmp    al,0x21
  412d66:	movabs rbp,0x7261637465720000
  412d70:	jl     412d7a <main@@Base+0xe43a>
  412d72:	cmp    al,0x3a
  412d74:	jne    413920 <main@@Base+0xefe0>
  412d7a:	add    r12,0xe
  412d7e:	mov    rax,QWORD PTR [rsp+0x10]
  412d83:	mov    DWORD PTR [rax],0x0
  412d89:	jmp    4134cf <main@@Base+0xeb8f>
  412d8e:	shr    rcx,0x38
  412d92:	cmp    rcx,0x6b
  412d96:	jne    413920 <main@@Base+0xefe0>
  412d9c:	cmp    rax,0x2
  412da0:	jl     413920 <main@@Base+0xefe0>
  412da6:	mov    rax,QWORD PTR [rsp+0x10]
  412dab:	cmp    DWORD PTR [rax],0x0
  412dae:	movzx  eax,BYTE PTR [r12+0x9]
  412db4:	je     41350e <main@@Base+0xebce>
  412dba:	cmp    al,0x21
  412dbc:	movabs rbp,0x7261637465720000
  412dc6:	jl     412dd0 <main@@Base+0xe490>
  412dc8:	cmp    al,0x3a
  412dca:	jne    413920 <main@@Base+0xefe0>
  412dd0:	add    r12,0x9
  412dd4:	mov    rax,QWORD PTR [rsp+0x10]
  412dd9:	mov    DWORD PTR [rax],0x0
  412ddf:	jmp    413524 <main@@Base+0xebe4>
  412de4:	mov    ecx,eax
  412de6:	and    cl,0xf
  412de9:	add    cl,0xff
  412dec:	cmp    cl,0x7
  412def:	ja     413920 <main@@Base+0xefe0>
  412df5:	movzx  ecx,cl
  412df8:	lea    rdx,[rip+0x11865]        # 424664 <_IO_stdin_used@@Base+0x664>
  412dff:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  412e03:	add    rcx,rdx
  412e06:	xor    r8d,r8d
  412e09:	xor    r9d,r9d
  412e0c:	xor    edx,edx
  412e0e:	xor    esi,esi
  412e10:	xor    edi,edi
  412e12:	xor    ebp,ebp
  412e14:	xor    ebx,ebx
  412e16:	jmp    rcx
  412e18:	movsx  r8,BYTE PTR [r12+0x17]
  412e1e:	movsx  r9,BYTE PTR [r12+0x16]
  412e24:	shl    r9,0x8
  412e28:	or     r9,r8
  412e2b:	movsx  rdx,BYTE PTR [r12+0x15]
  412e31:	shl    rdx,0x10
  412e35:	or     rdx,r9
  412e38:	movsx  rsi,BYTE PTR [r12+0x14]
  412e3e:	shl    rsi,0x18
  412e42:	or     rsi,rdx
  412e45:	movsx  rdi,BYTE PTR [r12+0x13]
  412e4b:	shl    rdi,0x20
  412e4f:	or     rdi,rsi
  412e52:	movsx  rbp,BYTE PTR [r12+0x12]
  412e58:	shl    rbp,0x28
  412e5c:	or     rbp,rdi
  412e5f:	movsx  rbx,BYTE PTR [r12+0x11]
  412e65:	shl    rbx,0x30
  412e69:	or     rbx,rbp
  412e6c:	movzx  ecx,BYTE PTR [r15]
  412e70:	shl    rcx,0x38
  412e74:	or     rcx,rbx
  412e77:	movabs rbp,0x7261637465720000
  412e81:	shr    rcx,0x28
  412e85:	cmp    rcx,0x797065
  412e8c:	jne    413920 <main@@Base+0xefe0>
  412e92:	cmp    rax,0x4
  412e96:	jl     413920 <main@@Base+0xefe0>
  412e9c:	mov    rax,QWORD PTR [rsp+0x10]
  412ea1:	cmp    DWORD PTR [rax],0x0
  412ea4:	movzx  eax,BYTE PTR [r12+0x13]
  412eaa:	je     413563 <main@@Base+0xec23>
  412eb0:	cmp    al,0x21
  412eb2:	movabs rbp,0x7261637465720000
  412ebc:	jl     412ec6 <main@@Base+0xe586>
  412ebe:	cmp    al,0x3a
  412ec0:	jne    413920 <main@@Base+0xefe0>
  412ec6:	add    r12,0x13
  412eca:	mov    rax,QWORD PTR [rsp+0x10]
  412ecf:	mov    DWORD PTR [rax],0x0
  412ed5:	jmp    413579 <main@@Base+0xec39>
  412eda:	mov    rax,r12
  412edd:	cmp    cl,0x22
  412ee0:	jne    4133ce <main@@Base+0xea8e>
  412ee6:	lea    rsi,[r12+0x6]
  412eeb:	mov    rax,r14
  412eee:	sub    rax,rsi
  412ef1:	cmp    rax,0x2
  412ef5:	jl     412fbc <main@@Base+0xe67c>
  412efb:	cmp    BYTE PTR [rsi],0x20
  412efe:	jg     412fca <main@@Base+0xe68a>
  412f04:	jne    412fbc <main@@Base+0xe67c>
  412f0a:	cmp    BYTE PTR [rsi+0x1],0x20
  412f0e:	jle    412fbc <main@@Base+0xe67c>
  412f14:	add    rsi,0x1
  412f18:	cmp    rsi,r14
  412f1b:	jne    412fcf <main@@Base+0xe68f>
  412f21:	jmp    41300d <main@@Base+0xe6cd>
  412f26:	cmp    al,0x22
  412f28:	jne    413920 <main@@Base+0xefe0>
  412f2e:	add    r12,0x10
  412f32:	mov    rax,r14
  412f35:	sub    rax,r12
  412f38:	cmp    rax,0x2
  412f3c:	jl     413022 <main@@Base+0xe6e2>
  412f42:	cmp    BYTE PTR [r12],0x20
  412f47:	jg     413033 <main@@Base+0xe6f3>
  412f4d:	jne    413022 <main@@Base+0xe6e2>
  412f53:	cmp    BYTE PTR [r12+0x1],0x20
  412f59:	jle    413022 <main@@Base+0xe6e2>
  412f5f:	add    r12,0x1
  412f63:	cmp    r12,r14
  412f66:	jne    41303c <main@@Base+0xe6fc>
  412f6c:	jmp    4130dc <main@@Base+0xe79c>
  412f71:	cmp    al,0x22
  412f73:	jne    413920 <main@@Base+0xefe0>
  412f79:	add    r12,0xb
  412f7d:	mov    rax,r14
  412f80:	sub    rax,r12
  412f83:	cmp    rax,0x2
  412f87:	jl     413083 <main@@Base+0xe743>
  412f8d:	cmp    BYTE PTR [r12],0x20
  412f92:	jg     413094 <main@@Base+0xe754>
  412f98:	jne    413083 <main@@Base+0xe743>
  412f9e:	cmp    BYTE PTR [r12+0x1],0x20
  412fa4:	jle    413083 <main@@Base+0xe743>
  412faa:	add    r12,0x1
  412fae:	cmp    r12,r14
  412fb1:	jne    413099 <main@@Base+0xe759>
  412fb7:	jmp    4130f4 <main@@Base+0xe7b4>
  412fbc:	mov    rdi,r13
  412fbf:	mov    rdx,r14
  412fc2:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  412fc7:	mov    rsi,rax
  412fca:	cmp    rsi,r14
  412fcd:	je     41300d <main@@Base+0xe6cd>
  412fcf:	cmp    BYTE PTR [rsi],0x3a
  412fd2:	jne    41300d <main@@Base+0xe6cd>
  412fd4:	lea    rax,[rsi+0x1]
  412fd8:	mov    rcx,r14
  412fdb:	sub    rcx,rax
  412fde:	cmp    rcx,0x2
  412fe2:	jl     4133b6 <main@@Base+0xea76>
  412fe8:	cmp    BYTE PTR [rax],0x20
  412feb:	jg     4133c4 <main@@Base+0xea84>
  412ff1:	jne    4133b6 <main@@Base+0xea76>
  412ff7:	cmp    BYTE PTR [rsi+0x2],0x20
  412ffb:	jle    4133b6 <main@@Base+0xea76>
  413001:	add    rsi,0x2
  413005:	mov    rax,rsi
  413008:	jmp    4133c4 <main@@Base+0xea84>
  41300d:	mov    ecx,0x4
  413012:	mov    rdi,r13
  413015:	mov    rdx,r14
  413018:	call   41f940 <flatcc_json_parser_set_error@@Base>
  41301d:	jmp    4133c4 <main@@Base+0xea84>
  413022:	mov    rdi,r13
  413025:	mov    rsi,r12
  413028:	mov    rdx,r14
  41302b:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  413030:	mov    r12,rax
  413033:	cmp    r12,r14
  413036:	je     4130dc <main@@Base+0xe79c>
  41303c:	cmp    BYTE PTR [r12],0x3a
  413041:	jne    4130dc <main@@Base+0xe79c>
  413047:	lea    rax,[r12+0x1]
  41304c:	mov    rcx,r14
  41304f:	sub    rcx,rax
  413052:	cmp    rcx,0x2
  413056:	jl     413417 <main@@Base+0xead7>
  41305c:	cmp    BYTE PTR [rax],0x20
  41305f:	jg     413425 <main@@Base+0xeae5>
  413065:	jne    413417 <main@@Base+0xead7>
  41306b:	cmp    BYTE PTR [r12+0x2],0x20
  413071:	jle    413417 <main@@Base+0xead7>
  413077:	add    r12,0x2
  41307b:	mov    rax,r12
  41307e:	jmp    413425 <main@@Base+0xeae5>
  413083:	mov    rdi,r13
  413086:	mov    rsi,r12
  413089:	mov    rdx,r14
  41308c:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  413091:	mov    r12,rax
  413094:	cmp    r12,r14
  413097:	je     4130f4 <main@@Base+0xe7b4>
  413099:	cmp    BYTE PTR [r12],0x3a
  41309e:	jne    4130f4 <main@@Base+0xe7b4>
  4130a0:	lea    rax,[r12+0x1]
  4130a5:	mov    rcx,r14
  4130a8:	sub    rcx,rax
  4130ab:	cmp    rcx,0x2
  4130af:	jl     413468 <main@@Base+0xeb28>
  4130b5:	cmp    BYTE PTR [rax],0x20
  4130b8:	jg     413476 <main@@Base+0xeb36>
  4130be:	jne    413468 <main@@Base+0xeb28>
  4130c4:	cmp    BYTE PTR [r12+0x2],0x20
  4130ca:	jle    413468 <main@@Base+0xeb28>
  4130d0:	add    r12,0x2
  4130d4:	mov    rax,r12
  4130d7:	jmp    413476 <main@@Base+0xeb36>
  4130dc:	mov    ecx,0x4
  4130e1:	mov    rdi,r13
  4130e4:	mov    rsi,r12
  4130e7:	mov    rdx,r14
  4130ea:	call   41f940 <flatcc_json_parser_set_error@@Base>
  4130ef:	jmp    413425 <main@@Base+0xeae5>
  4130f4:	mov    ecx,0x4
  4130f9:	mov    rdi,r13
  4130fc:	mov    rsi,r12
  4130ff:	mov    rdx,r14
  413102:	call   41f940 <flatcc_json_parser_set_error@@Base>
  413107:	jmp    413476 <main@@Base+0xeb36>
  41310c:	cmp    al,0x22
  41310e:	jne    413920 <main@@Base+0xefe0>
  413114:	add    r12,0x10
  413118:	mov    rax,r14
  41311b:	sub    rax,r12
  41311e:	cmp    rax,0x2
  413122:	jl     413140 <main@@Base+0xe800>
  413124:	cmp    BYTE PTR [r12],0x20
  413129:	jg     413151 <main@@Base+0xe811>
  41312b:	jne    413140 <main@@Base+0xe800>
  41312d:	cmp    BYTE PTR [r12+0x1],0x20
  413133:	jle    413140 <main@@Base+0xe800>
  413135:	add    r12,0x1
  413139:	cmp    r12,r14
  41313c:	jne    413156 <main@@Base+0xe816>
  41313e:	jmp    413199 <main@@Base+0xe859>
  413140:	mov    rdi,r13
  413143:	mov    rsi,r12
  413146:	mov    rdx,r14
  413149:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  41314e:	mov    r12,rax
  413151:	cmp    r12,r14
  413154:	je     413199 <main@@Base+0xe859>
  413156:	cmp    BYTE PTR [r12],0x3a
  41315b:	jne    413199 <main@@Base+0xe859>
  41315d:	lea    rax,[r12+0x1]
  413162:	mov    rcx,r14
  413165:	sub    rcx,rax
  413168:	cmp    rcx,0x2
  41316c:	jl     413713 <main@@Base+0xedd3>
  413172:	cmp    BYTE PTR [rax],0x20
  413175:	jg     413721 <main@@Base+0xede1>
  41317b:	jne    413713 <main@@Base+0xedd3>
  413181:	cmp    BYTE PTR [r12+0x2],0x20
  413187:	jle    413713 <main@@Base+0xedd3>
  41318d:	add    r12,0x2
  413191:	mov    rax,r12
  413194:	jmp    413721 <main@@Base+0xede1>
  413199:	mov    ecx,0x4
  41319e:	mov    rdi,r13
  4131a1:	mov    rsi,r12
  4131a4:	mov    rdx,r14
  4131a7:	call   41f940 <flatcc_json_parser_set_error@@Base>
  4131ac:	jmp    413721 <main@@Base+0xede1>
  4131b1:	cmp    al,0x22
  4131b3:	jne    413920 <main@@Base+0xefe0>
  4131b9:	add    r12,0xb
  4131bd:	mov    rax,r14
  4131c0:	sub    rax,r12
  4131c3:	cmp    rax,0x2
  4131c7:	jl     413227 <main@@Base+0xe8e7>
  4131c9:	cmp    BYTE PTR [r12],0x20
  4131ce:	jg     413238 <main@@Base+0xe8f8>
  4131d0:	jne    413227 <main@@Base+0xe8e7>
  4131d2:	cmp    BYTE PTR [r12+0x1],0x20
  4131d8:	jle    413227 <main@@Base+0xe8e7>
  4131da:	add    r12,0x1
  4131de:	cmp    r12,r14
  4131e1:	jne    413241 <main@@Base+0xe901>
  4131e3:	jmp    4132e1 <main@@Base+0xe9a1>
  4131e8:	cmp    al,0x22
  4131ea:	jne    413920 <main@@Base+0xefe0>
  4131f0:	add    r12,0xf
  4131f4:	mov    rax,r14
  4131f7:	sub    rax,r12
  4131fa:	cmp    rax,0x2
  4131fe:	jl     413288 <main@@Base+0xe948>
  413204:	cmp    BYTE PTR [r12],0x20
  413209:	jg     413299 <main@@Base+0xe959>
  41320f:	jne    413288 <main@@Base+0xe948>
  413211:	cmp    BYTE PTR [r12+0x1],0x20
  413217:	jle    413288 <main@@Base+0xe948>
  413219:	add    r12,0x1
  41321d:	cmp    r12,r14
  413220:	jne    41329e <main@@Base+0xe95e>
  413222:	jmp    4132f9 <main@@Base+0xe9b9>
  413227:	mov    rdi,r13
  41322a:	mov    rsi,r12
  41322d:	mov    rdx,r14
  413230:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  413235:	mov    r12,rax
  413238:	cmp    r12,r14
  41323b:	je     4132e1 <main@@Base+0xe9a1>
  413241:	cmp    BYTE PTR [r12],0x3a
  413246:	jne    4132e1 <main@@Base+0xe9a1>
  41324c:	lea    rax,[r12+0x1]
  413251:	mov    rcx,r14
  413254:	sub    rcx,rax
  413257:	cmp    rcx,0x2
  41325b:	jl     41377a <main@@Base+0xee3a>
  413261:	cmp    BYTE PTR [rax],0x20
  413264:	jg     413788 <main@@Base+0xee48>
  41326a:	jne    41377a <main@@Base+0xee3a>
  413270:	cmp    BYTE PTR [r12+0x2],0x20
  413276:	jle    41377a <main@@Base+0xee3a>
  41327c:	add    r12,0x2
  413280:	mov    rax,r12
  413283:	jmp    413788 <main@@Base+0xee48>
  413288:	mov    rdi,r13
  41328b:	mov    rsi,r12
  41328e:	mov    rdx,r14
  413291:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  413296:	mov    r12,rax
  413299:	cmp    r12,r14
  41329c:	je     4132f9 <main@@Base+0xe9b9>
  41329e:	cmp    BYTE PTR [r12],0x3a
  4132a3:	jne    4132f9 <main@@Base+0xe9b9>
  4132a5:	lea    rax,[r12+0x1]
  4132aa:	mov    rcx,r14
  4132ad:	sub    rcx,rax
  4132b0:	cmp    rcx,0x2
  4132b4:	jl     4137b4 <main@@Base+0xee74>
  4132ba:	cmp    BYTE PTR [rax],0x20
  4132bd:	jg     4137c2 <main@@Base+0xee82>
  4132c3:	jne    4137b4 <main@@Base+0xee74>
  4132c9:	cmp    BYTE PTR [r12+0x2],0x20
  4132cf:	jle    4137b4 <main@@Base+0xee74>
  4132d5:	add    r12,0x2
  4132d9:	mov    rax,r12
  4132dc:	jmp    4137c2 <main@@Base+0xee82>
  4132e1:	mov    ecx,0x4
  4132e6:	mov    rdi,r13
  4132e9:	mov    rsi,r12
  4132ec:	mov    rdx,r14
  4132ef:	call   41f940 <flatcc_json_parser_set_error@@Base>
  4132f4:	jmp    413788 <main@@Base+0xee48>
  4132f9:	mov    ecx,0x4
  4132fe:	mov    rdi,r13
  413301:	mov    rsi,r12
  413304:	mov    rdx,r14
  413307:	call   41f940 <flatcc_json_parser_set_error@@Base>
  41330c:	jmp    4137c2 <main@@Base+0xee82>
  413311:	cmp    al,0x22
  413313:	jne    413920 <main@@Base+0xefe0>
  413319:	add    r12,0xb
  41331d:	mov    rax,r14
  413320:	sub    rax,r12
  413323:	cmp    rax,0x2
  413327:	jl     413345 <main@@Base+0xea05>
  413329:	cmp    BYTE PTR [r12],0x20
  41332e:	jg     413356 <main@@Base+0xea16>
  413330:	jne    413345 <main@@Base+0xea05>
  413332:	cmp    BYTE PTR [r12+0x1],0x20
  413338:	jle    413345 <main@@Base+0xea05>
  41333a:	add    r12,0x1
  41333e:	cmp    r12,r14
  413341:	jne    41335b <main@@Base+0xea1b>
  413343:	jmp    41339e <main@@Base+0xea5e>
  413345:	mov    rdi,r13
  413348:	mov    rsi,r12
  41334b:	mov    rdx,r14
  41334e:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  413353:	mov    r12,rax
  413356:	cmp    r12,r14
  413359:	je     41339e <main@@Base+0xea5e>
  41335b:	cmp    BYTE PTR [r12],0x3a
  413360:	jne    41339e <main@@Base+0xea5e>
  413362:	lea    rax,[r12+0x1]
  413367:	mov    rcx,r14
  41336a:	sub    rcx,rax
  41336d:	cmp    rcx,0x2
  413371:	jl     413805 <main@@Base+0xeec5>
  413377:	cmp    BYTE PTR [rax],0x20
  41337a:	jg     413813 <main@@Base+0xeed3>
  413380:	jne    413805 <main@@Base+0xeec5>
  413386:	cmp    BYTE PTR [r12+0x2],0x20
  41338c:	jle    413805 <main@@Base+0xeec5>
  413392:	add    r12,0x2
  413396:	mov    rax,r12
  413399:	jmp    413813 <main@@Base+0xeed3>
  41339e:	mov    ecx,0x4
  4133a3:	mov    rdi,r13
  4133a6:	mov    rsi,r12
  4133a9:	mov    rdx,r14
  4133ac:	call   41f940 <flatcc_json_parser_set_error@@Base>
  4133b1:	jmp    413813 <main@@Base+0xeed3>
  4133b6:	mov    rdi,r13
  4133b9:	mov    rsi,rax
  4133bc:	mov    rdx,r14
  4133bf:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  4133c4:	movabs rbp,0x7261637465720000
  4133ce:	cmp    r12,rax
  4133d1:	je     413409 <main@@Base+0xeac9>
  4133d3:	mov    r9,QWORD PTR [rsp+0x20]
  4133d8:	sub    rsp,0x8
  4133dc:	mov    ecx,0x3
  4133e1:	mov    r8d,0x7
  4133e7:	mov    r12,r13
  4133ea:	mov    rdi,r13
  4133ed:	mov    rsi,rax
  4133f0:	mov    rdx,r14
  4133f3:	lea    rax,[rip+0x5856]        # 418c50 <main@@Base+0x14310>
  4133fa:	push   rax
  4133fb:	call   421e50 <flatcc_json_parser_union@@Base>
  413400:	add    rsp,0x10
  413404:	jmp    413931 <main@@Base+0xeff1>
  413409:	mov    rdi,r13
  41340c:	mov    rsi,r12
  41340f:	mov    r12,r13
  413412:	jmp    413929 <main@@Base+0xefe9>
  413417:	mov    rdi,r13
  41341a:	mov    rsi,rax
  41341d:	mov    rdx,r14
  413420:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  413425:	cmp    r15,rax
  413428:	movabs rbp,0x7261637465720000
  413432:	je     413920 <main@@Base+0xefe0>
  413438:	mov    r9,QWORD PTR [rsp+0x20]
  41343d:	mov    ecx,0x1
  413442:	mov    r8d,0x3
  413448:	mov    r12,r13
  41344b:	mov    rdi,r13
  41344e:	mov    rsi,rax
  413451:	mov    rdx,r14
  413454:	lea    rax,[rip+0x57f5]        # 418c50 <main@@Base+0x14310>
  41345b:	push   rax
  41345c:	lea    rax,[rip+0x181fd]        # 42b660 <filename@@Base+0x590>
  413463:	jmp    413914 <main@@Base+0xefd4>
  413468:	mov    rdi,r13
  41346b:	mov    rsi,rax
  41346e:	mov    rdx,r14
  413471:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  413476:	cmp    r15,rax
  413479:	movabs rbp,0x7261637465720000
  413483:	je     413920 <main@@Base+0xefe0>
  413489:	mov    r9,QWORD PTR [rsp+0x20]
  41348e:	mov    ecx,0x3
  413493:	mov    r8d,0x7
  413499:	mov    r12,r13
  41349c:	mov    rdi,r13
  41349f:	mov    rsi,rax
  4134a2:	mov    rdx,r14
  4134a5:	lea    rax,[rip+0x57a4]        # 418c50 <main@@Base+0x14310>
  4134ac:	push   rax
  4134ad:	lea    rax,[rip+0x181cc]        # 42b680 <filename@@Base+0x5b0>
  4134b4:	jmp    413914 <main@@Base+0xefd4>
  4134b9:	cmp    al,0x22
  4134bb:	movabs rbp,0x7261637465720000
  4134c5:	jne    413920 <main@@Base+0xefe0>
  4134cb:	add    r12,0xf
  4134cf:	mov    rax,r14
  4134d2:	sub    rax,r12
  4134d5:	cmp    rax,0x2
  4134d9:	jl     4135b8 <main@@Base+0xec78>
  4134df:	cmp    BYTE PTR [r12],0x20
  4134e4:	jg     4135c9 <main@@Base+0xec89>
  4134ea:	jne    4135b8 <main@@Base+0xec78>
  4134f0:	cmp    BYTE PTR [r12+0x1],0x20
  4134f6:	jle    4135b8 <main@@Base+0xec78>
  4134fc:	add    r12,0x1
  413500:	cmp    r12,r14
  413503:	jne    4135d2 <main@@Base+0xec92>
  413509:	jmp    413672 <main@@Base+0xed32>
  41350e:	cmp    al,0x22
  413510:	movabs rbp,0x7261637465720000
  41351a:	jne    413920 <main@@Base+0xefe0>
  413520:	add    r12,0xa
  413524:	mov    rax,r14
  413527:	sub    rax,r12
  41352a:	cmp    rax,0x2
  41352e:	jl     413619 <main@@Base+0xecd9>
  413534:	cmp    BYTE PTR [r12],0x20
  413539:	jg     41362a <main@@Base+0xecea>
  41353f:	jne    413619 <main@@Base+0xecd9>
  413545:	cmp    BYTE PTR [r12+0x1],0x20
  41354b:	jle    413619 <main@@Base+0xecd9>
  413551:	add    r12,0x1
  413555:	cmp    r12,r14
  413558:	jne    41362f <main@@Base+0xecef>
  41355e:	jmp    41368a <main@@Base+0xed4a>
  413563:	cmp    al,0x22
  413565:	movabs rbp,0x7261637465720000
  41356f:	jne    413920 <main@@Base+0xefe0>
  413575:	add    r12,0x14
  413579:	mov    rax,r14
  41357c:	sub    rax,r12
  41357f:	cmp    rax,0x2
  413583:	jl     4136a2 <main@@Base+0xed62>
  413589:	cmp    BYTE PTR [r12],0x20
  41358e:	jg     4136b3 <main@@Base+0xed73>
  413594:	jne    4136a2 <main@@Base+0xed62>
  41359a:	cmp    BYTE PTR [r12+0x1],0x20
  4135a0:	jle    4136a2 <main@@Base+0xed62>
  4135a6:	add    r12,0x1
  4135aa:	cmp    r12,r14
  4135ad:	jne    4136b8 <main@@Base+0xed78>
  4135b3:	jmp    4136fb <main@@Base+0xedbb>
  4135b8:	mov    rdi,r13
  4135bb:	mov    rsi,r12
  4135be:	mov    rdx,r14
  4135c1:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  4135c6:	mov    r12,rax
  4135c9:	cmp    r12,r14
  4135cc:	je     413672 <main@@Base+0xed32>
  4135d2:	cmp    BYTE PTR [r12],0x3a
  4135d7:	jne    413672 <main@@Base+0xed32>
  4135dd:	lea    rax,[r12+0x1]
  4135e2:	mov    rcx,r14
  4135e5:	sub    rcx,rax
  4135e8:	cmp    rcx,0x2
  4135ec:	jl     41385c <main@@Base+0xef1c>
  4135f2:	cmp    BYTE PTR [rax],0x20
  4135f5:	jg     41386a <main@@Base+0xef2a>
  4135fb:	jne    41385c <main@@Base+0xef1c>
  413601:	cmp    BYTE PTR [r12+0x2],0x20
  413607:	jle    41385c <main@@Base+0xef1c>
  41360d:	add    r12,0x2
  413611:	mov    rax,r12
  413614:	jmp    41386a <main@@Base+0xef2a>
  413619:	mov    rdi,r13
  41361c:	mov    rsi,r12
  41361f:	mov    rdx,r14
  413622:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  413627:	mov    r12,rax
  41362a:	cmp    r12,r14
  41362d:	je     41368a <main@@Base+0xed4a>
  41362f:	cmp    BYTE PTR [r12],0x3a
  413634:	jne    41368a <main@@Base+0xed4a>
  413636:	lea    rax,[r12+0x1]
  41363b:	mov    rcx,r14
  41363e:	sub    rcx,rax
  413641:	cmp    rcx,0x2
  413645:	jl     413896 <main@@Base+0xef56>
  41364b:	cmp    BYTE PTR [rax],0x20
  41364e:	jg     4138a4 <main@@Base+0xef64>
  413654:	jne    413896 <main@@Base+0xef56>
  41365a:	cmp    BYTE PTR [r12+0x2],0x20
  413660:	jle    413896 <main@@Base+0xef56>
  413666:	add    r12,0x2
  41366a:	mov    rax,r12
  41366d:	jmp    4138a4 <main@@Base+0xef64>
  413672:	mov    ecx,0x4
  413677:	mov    rdi,r13
  41367a:	mov    rsi,r12
  41367d:	mov    rdx,r14
  413680:	call   41f940 <flatcc_json_parser_set_error@@Base>
  413685:	jmp    41386a <main@@Base+0xef2a>
  41368a:	mov    ecx,0x4
  41368f:	mov    rdi,r13
  413692:	mov    rsi,r12
  413695:	mov    rdx,r14
  413698:	call   41f940 <flatcc_json_parser_set_error@@Base>
  41369d:	jmp    4138a4 <main@@Base+0xef64>
  4136a2:	mov    rdi,r13
  4136a5:	mov    rsi,r12
  4136a8:	mov    rdx,r14
  4136ab:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  4136b0:	mov    r12,rax
  4136b3:	cmp    r12,r14
  4136b6:	je     4136fb <main@@Base+0xedbb>
  4136b8:	cmp    BYTE PTR [r12],0x3a
  4136bd:	jne    4136fb <main@@Base+0xedbb>
  4136bf:	lea    rax,[r12+0x1]
  4136c4:	mov    rcx,r14
  4136c7:	sub    rcx,rax
  4136ca:	cmp    rcx,0x2
  4136ce:	jl     4138cc <main@@Base+0xef8c>
  4136d4:	cmp    BYTE PTR [rax],0x20
  4136d7:	jg     4138da <main@@Base+0xef9a>
  4136dd:	jne    4138cc <main@@Base+0xef8c>
  4136e3:	cmp    BYTE PTR [r12+0x2],0x20
  4136e9:	jle    4138cc <main@@Base+0xef8c>
  4136ef:	add    r12,0x2
  4136f3:	mov    rax,r12
  4136f6:	jmp    4138da <main@@Base+0xef9a>
  4136fb:	mov    ecx,0x4
  413700:	mov    rdi,r13
  413703:	mov    rsi,r12
  413706:	mov    rdx,r14
  413709:	call   41f940 <flatcc_json_parser_set_error@@Base>
  41370e:	jmp    4138da <main@@Base+0xef9a>
  413713:	mov    rdi,r13
  413716:	mov    rsi,rax
  413719:	mov    rdx,r14
  41371c:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  413721:	cmp    r15,rax
  413724:	movabs rbp,0x7261637465720000
  41372e:	je     413920 <main@@Base+0xefe0>
  413734:	mov    r9,QWORD PTR [rsp+0x20]
  413739:	sub    rsp,0x8
  41373d:	mov    ecx,0x4
  413742:	mov    r8d,0x9
  413748:	mov    r12,r13
  41374b:	mov    rdi,r13
  41374e:	mov    rsi,rax
  413751:	mov    rdx,r14
  413754:	lea    rax,[rip+0x62f5]        # 419a50 <main@@Base+0x15110>
  41375b:	push   rax
  41375c:	lea    rax,[rip+0x54ed]        # 418c50 <main@@Base+0x14310>
  413763:	push   rax
  413764:	lea    rax,[rip+0x17f35]        # 42b6a0 <filename@@Base+0x5d0>
  41376b:	push   rax
  41376c:	call   4228e0 <flatcc_json_parser_union_type_vector@@Base>
  413771:	add    rsp,0x20
  413775:	jmp    413931 <main@@Base+0xeff1>
  41377a:	mov    rdi,r13
  41377d:	mov    rsi,rax
  413780:	mov    rdx,r14
  413783:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  413788:	cmp    r15,rax
  41378b:	movabs rbp,0x7261637465720000
  413795:	je     413920 <main@@Base+0xefe0>
  41379b:	mov    r9,QWORD PTR [rsp+0x20]
  4137a0:	sub    rsp,0x8
  4137a4:	mov    ecx,0x1
  4137a9:	mov    r8d,0x3
  4137af:	jmp    4133e7 <main@@Base+0xeaa7>
  4137b4:	mov    rdi,r13
  4137b7:	mov    rsi,rax
  4137ba:	mov    rdx,r14
  4137bd:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  4137c2:	cmp    r15,rax
  4137c5:	movabs rbp,0x7261637465720000
  4137cf:	je     413920 <main@@Base+0xefe0>
  4137d5:	mov    r9,QWORD PTR [rsp+0x20]
  4137da:	mov    ecx,0x2
  4137df:	mov    r8d,0x5
  4137e5:	mov    r12,r13
  4137e8:	mov    rdi,r13
  4137eb:	mov    rsi,rax
  4137ee:	mov    rdx,r14
  4137f1:	lea    rax,[rip+0x5458]        # 418c50 <main@@Base+0x14310>
  4137f8:	push   rax
  4137f9:	lea    rax,[rip+0x17ee0]        # 42b6e0 <filename@@Base+0x610>
  413800:	jmp    413914 <main@@Base+0xefd4>
  413805:	mov    rdi,r13
  413808:	mov    rsi,rax
  41380b:	mov    rdx,r14
  41380e:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  413813:	cmp    r15,rax
  413816:	movabs rbp,0x7261637465720000
  413820:	je     413920 <main@@Base+0xefe0>
  413826:	mov    r9,QWORD PTR [rsp+0x20]
  41382b:	sub    rsp,0x8
  41382f:	mov    ecx,0x4
  413834:	mov    r8d,0x9
  41383a:	mov    r12,r13
  41383d:	mov    rdi,r13
  413840:	mov    rsi,rax
  413843:	mov    rdx,r14
  413846:	lea    rax,[rip+0x5403]        # 418c50 <main@@Base+0x14310>
  41384d:	push   rax
  41384e:	call   422430 <flatcc_json_parser_union_vector@@Base>
  413853:	add    rsp,0x10
  413857:	jmp    413931 <main@@Base+0xeff1>
  41385c:	mov    rdi,r13
  41385f:	mov    rsi,rax
  413862:	mov    rdx,r14
  413865:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  41386a:	cmp    r15,rax
  41386d:	movabs rbp,0x7261637465720000
  413877:	je     413920 <main@@Base+0xefe0>
  41387d:	mov    r9,QWORD PTR [rsp+0x20]
  413882:	sub    rsp,0x8
  413886:	mov    ecx,0x0
  41388b:	mov    r8d,0x1
  413891:	jmp    4133e7 <main@@Base+0xeaa7>
  413896:	mov    rdi,r13
  413899:	mov    rsi,rax
  41389c:	mov    rdx,r14
  41389f:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  4138a4:	cmp    r15,rax
  4138a7:	movabs rbp,0x7261637465720000
  4138b1:	je     413920 <main@@Base+0xefe0>
  4138b3:	mov    r9,QWORD PTR [rsp+0x20]
  4138b8:	sub    rsp,0x8
  4138bc:	mov    ecx,0x2
  4138c1:	mov    r8d,0x5
  4138c7:	jmp    4133e7 <main@@Base+0xeaa7>
  4138cc:	mov    rdi,r13
  4138cf:	mov    rsi,rax
  4138d2:	mov    rdx,r14
  4138d5:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  4138da:	cmp    r15,rax
  4138dd:	movabs rbp,0x7261637465720000
  4138e7:	je     413920 <main@@Base+0xefe0>
  4138e9:	mov    r9,QWORD PTR [rsp+0x20]
  4138ee:	mov    ecx,0x0
  4138f3:	mov    r8d,0x1
  4138f9:	mov    r12,r13
  4138fc:	mov    rdi,r13
  4138ff:	mov    rsi,rax
  413902:	mov    rdx,r14
  413905:	lea    rax,[rip+0x5344]        # 418c50 <main@@Base+0x14310>
  41390c:	push   rax
  41390d:	lea    rax,[rip+0x17dac]        # 42b6c0 <filename@@Base+0x5f0>
  413914:	push   rax
  413915:	call   421f60 <flatcc_json_parser_union_type@@Base>
  41391a:	add    rsp,0x10
  41391e:	jmp    413931 <main@@Base+0xeff1>
  413920:	mov    r12,r13
  413923:	mov    rdi,r13
  413926:	mov    rsi,r15
  413929:	mov    rdx,r14
  41392c:	call   41ff40 <flatcc_json_parser_unmatched_symbol@@Base>
  413931:	mov    rcx,r14
  413934:	sub    rcx,rax
  413937:	cmp    rcx,0x2
  41393b:	jl     413958 <main@@Base+0xf018>
  41393d:	cmp    BYTE PTR [rax],0x20
  413940:	jg     413966 <main@@Base+0xf026>
  413942:	jne    413958 <main@@Base+0xf018>
  413944:	cmp    BYTE PTR [rax+0x1],0x20
  413948:	jle    413958 <main@@Base+0xf018>
  41394a:	add    rax,0x1
  41394e:	cmp    rax,r14
  413951:	jne    41396f <main@@Base+0xf02f>
  413953:	jmp    413a00 <main@@Base+0xf0c0>
  413958:	mov    rdi,r12
  41395b:	mov    rsi,rax
  41395e:	mov    rdx,r14
  413961:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  413966:	cmp    rax,r14
  413969:	je     413a00 <main@@Base+0xf0c0>
  41396f:	movzx  ecx,BYTE PTR [rax]
  413972:	cmp    cl,0x2c
  413975:	jne    413a0d <main@@Base+0xf0cd>
  41397b:	lea    rsi,[rax+0x1]
  41397f:	mov    rcx,r14
  413982:	sub    rcx,rsi
  413985:	cmp    rcx,0x2
  413989:	mov    rbx,QWORD PTR [rsp+0x18]
  41398e:	jl     4139a3 <main@@Base+0xf063>
  413990:	cmp    BYTE PTR [rsi],0x20
  413993:	jg     4139b1 <main@@Base+0xf071>
  413995:	jne    4139a3 <main@@Base+0xf063>
  413997:	cmp    BYTE PTR [rax+0x2],0x20
  41399b:	jle    4139a3 <main@@Base+0xf063>
  41399d:	add    rax,0x2
  4139a1:	jmp    4139ae <main@@Base+0xf06e>
  4139a3:	mov    rdi,r12
  4139a6:	mov    rdx,r14
  4139a9:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  4139ae:	mov    rsi,rax
  4139b1:	cmp    rsi,r14
  4139b4:	je     413a35 <main@@Base+0xf0f5>
  4139b6:	cmp    BYTE PTR [rsi],0x7d
  4139b9:	jne    412566 <main@@Base+0xdc26>
  4139bf:	lea    rbp,[rsi+0x1]
  4139c3:	mov    rax,r14
  4139c6:	sub    rax,rbp
  4139c9:	cmp    rax,0x2
  4139cd:	jl     4139ed <main@@Base+0xf0ad>
  4139cf:	cmp    BYTE PTR [rbp+0x0],0x20
  4139d3:	jg     4124ac <main@@Base+0xdb6c>
  4139d9:	jne    4139ed <main@@Base+0xf0ad>
  4139db:	cmp    BYTE PTR [rsi+0x2],0x20
  4139df:	jle    4139ed <main@@Base+0xf0ad>
  4139e1:	add    rsi,0x2
  4139e5:	mov    rbp,rsi
  4139e8:	jmp    4124ac <main@@Base+0xdb6c>
  4139ed:	mov    rdi,r12
  4139f0:	mov    rsi,rbp
  4139f3:	mov    rdx,r14
  4139f6:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  4139fb:	jmp    4124a9 <main@@Base+0xdb69>
  413a00:	mov    rbp,r14
  413a03:	mov    rbx,QWORD PTR [rsp+0x18]
  413a08:	jmp    4124ac <main@@Base+0xdb6c>
  413a0d:	cmp    cl,0x7d
  413a10:	jne    413a45 <main@@Base+0xf105>
  413a12:	lea    rbp,[rax+0x1]
  413a16:	mov    rcx,r14
  413a19:	sub    rcx,rbp
  413a1c:	cmp    rcx,0x2
  413a20:	jl     413a6b <main@@Base+0xf12b>
  413a22:	cmp    BYTE PTR [rbp+0x0],0x20
  413a26:	jle    413a5a <main@@Base+0xf11a>
  413a28:	mov    r12,r13
  413a2b:	mov    rbx,QWORD PTR [rsp+0x18]
  413a30:	jmp    4124ac <main@@Base+0xdb6c>
  413a35:	mov    ecx,0xa
  413a3a:	mov    rdi,r12
  413a3d:	mov    rsi,r14
  413a40:	jmp    4124a1 <main@@Base+0xdb61>
  413a45:	mov    ecx,0xa
  413a4a:	mov    rdi,r12
  413a4d:	mov    rsi,rax
  413a50:	mov    rdx,r14
  413a53:	call   41f940 <flatcc_json_parser_set_error@@Base>
  413a58:	jmp    413a79 <main@@Base+0xf139>
  413a5a:	mov    r12,r13
  413a5d:	jne    413a6b <main@@Base+0xf12b>
  413a5f:	cmp    BYTE PTR [rax+0x2],0x20
  413a63:	jle    413a6b <main@@Base+0xf12b>
  413a65:	add    rax,0x2
  413a69:	jmp    413a79 <main@@Base+0xf139>
  413a6b:	mov    rdi,r12
  413a6e:	mov    rsi,rbp
  413a71:	mov    rdx,r14
  413a74:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  413a79:	mov    rbp,rax
  413a7c:	mov    rbx,QWORD PTR [rsp+0x18]
  413a81:	jmp    4124ac <main@@Base+0xdb6c>
  413a86:	cmp    cl,0x7d
  413a89:	jne    413bde <main@@Base+0xf29e>
  413a8f:	lea    rbp,[rax+0x1]
  413a93:	mov    rcx,r14
  413a96:	sub    rcx,rbp
  413a99:	cmp    rcx,0x2
  413a9d:	jl     413afd <main@@Base+0xf1bd>
  413a9f:	cmp    BYTE PTR [rbp+0x0],0x20
  413aa3:	jg     410f4c <main@@Base+0xc60c>
  413aa9:	jne    413afd <main@@Base+0xf1bd>
  413aab:	cmp    BYTE PTR [rax+0x2],0x20
  413aaf:	jle    413afd <main@@Base+0xf1bd>
  413ab1:	add    rax,0x2
  413ab5:	jmp    410f49 <main@@Base+0xc609>
  413aba:	cmp    al,0x7d
  413abc:	jne    413bee <main@@Base+0xf2ae>
  413ac2:	lea    rbp,[r13+0x1]
  413ac6:	mov    rax,r14
  413ac9:	sub    rax,rbp
  413acc:	cmp    rax,0x2
  413ad0:	jl     413afd <main@@Base+0xf1bd>
  413ad2:	cmp    BYTE PTR [rbp+0x0],0x20
  413ad6:	jg     410f4c <main@@Base+0xc60c>
  413adc:	jne    413afd <main@@Base+0xf1bd>
  413ade:	cmp    BYTE PTR [r13+0x2],0x20
  413ae3:	jle    413afd <main@@Base+0xf1bd>
  413ae5:	add    r13,0x2
  413ae9:	mov    rbp,r13
  413aec:	cmp    DWORD PTR [r12+0x20],0x0
  413af2:	jne    413c6f <main@@Base+0xf32f>
  413af8:	jmp    413c60 <main@@Base+0xf320>
  413afd:	mov    rdi,r12
  413b00:	mov    rsi,rbp
  413b03:	mov    rdx,r14
  413b06:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  413b0b:	jmp    410f49 <main@@Base+0xc609>
  413b10:	mov    rdi,r12
  413b13:	mov    rsi,rax
  413b16:	mov    rdx,r14
  413b19:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  413b1e:	lea    rbp,[r12+0x20]
  413b23:	cmp    DWORD PTR [rbp+0x0],0x0
  413b27:	jne    410fa4 <main@@Base+0xc664>
  413b2d:	jmp    413c4a <main@@Base+0xf30a>
  413b32:	mov    rbp,r13
  413b35:	jmp    413c6f <main@@Base+0xf32f>
  413b3a:	mov    rax,r14
  413b3d:	jmp    413c3b <main@@Base+0xf2fb>
  413b42:	cmp    al,0x7d
  413b44:	jne    413c18 <main@@Base+0xf2d8>
  413b4a:	lea    rax,[rbp+0x1]
  413b4e:	mov    rcx,r14
  413b51:	sub    rcx,rax
  413b54:	cmp    rcx,0x2
  413b58:	jl     413c2d <main@@Base+0xf2ed>
  413b5e:	cmp    BYTE PTR [rax],0x20
  413b61:	jg     413c3b <main@@Base+0xf2fb>
  413b67:	jne    413c2d <main@@Base+0xf2ed>
  413b6d:	cmp    BYTE PTR [rbp+0x2],0x20
  413b71:	jle    413c2d <main@@Base+0xf2ed>
  413b77:	add    rbp,0x2
  413b7b:	mov    rax,rbp
  413b7e:	jmp    413c3b <main@@Base+0xf2fb>
  413b83:	mov    ecx,0xa
  413b88:	mov    rdi,r12
  413b8b:	mov    rsi,r14
  413b8e:	mov    rdx,r14
  413b91:	call   41f940 <flatcc_json_parser_set_error@@Base>
  413b96:	cmp    DWORD PTR [rbp+0x0],0x0
  413b9a:	jne    410fa4 <main@@Base+0xc664>
  413ba0:	jmp    413c4a <main@@Base+0xf30a>
  413ba5:	lea    rax,[rsi+0x1]
  413ba9:	mov    rcx,r14
  413bac:	sub    rcx,rax
  413baf:	cmp    rcx,0x2
  413bb3:	mov    rbx,QWORD PTR [rsp+0x18]
  413bb8:	jl     413bfe <main@@Base+0xf2be>
  413bba:	cmp    BYTE PTR [rax],0x20
  413bbd:	jg     410f9a <main@@Base+0xc65a>
  413bc3:	jne    413bfe <main@@Base+0xf2be>
  413bc5:	cmp    BYTE PTR [rsi+0x2],0x20
  413bc9:	jle    413bfe <main@@Base+0xf2be>
  413bcb:	add    rsi,0x2
  413bcf:	mov    rax,rsi
  413bd2:	cmp    DWORD PTR [rbp+0x0],0x0
  413bd6:	jne    410fa4 <main@@Base+0xc664>
  413bdc:	jmp    413c4a <main@@Base+0xf30a>
  413bde:	mov    ecx,0xa
  413be3:	mov    rdi,r12
  413be6:	mov    rsi,rax
  413be9:	jmp    410f41 <main@@Base+0xc601>
  413bee:	mov    ecx,0xa
  413bf3:	mov    rdi,r12
  413bf6:	mov    rsi,r13
  413bf9:	jmp    410f41 <main@@Base+0xc601>
  413bfe:	mov    rdi,r12
  413c01:	mov    rsi,rax
  413c04:	mov    rdx,r14
  413c07:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  413c0c:	cmp    DWORD PTR [rbp+0x0],0x0
  413c10:	jne    410fa4 <main@@Base+0xc664>
  413c16:	jmp    413c4a <main@@Base+0xf30a>
  413c18:	mov    ecx,0xa
  413c1d:	mov    rdi,r12
  413c20:	mov    rsi,rbp
  413c23:	mov    rdx,r14
  413c26:	call   41f940 <flatcc_json_parser_set_error@@Base>
  413c2b:	jmp    413c3b <main@@Base+0xf2fb>
  413c2d:	mov    rdi,r12
  413c30:	mov    rsi,rax
  413c33:	mov    rdx,r14
  413c36:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  413c3b:	mov    rbp,QWORD PTR [rsp+0x38]
  413c40:	cmp    DWORD PTR [rbp+0x0],0x0
  413c44:	jne    410fa4 <main@@Base+0xc664>
  413c4a:	mov    rcx,QWORD PTR [rsp+0x30]
  413c4f:	mov    rdi,r12
  413c52:	mov    rsi,rax
  413c55:	mov    rdx,r14
  413c58:	call   421de0 <flatcc_json_parser_finalize_unions@@Base>
  413c5d:	mov    rbp,rax
  413c60:	mov    rdi,QWORD PTR [r12]
  413c64:	call   41cf10 <flatcc_builder_end_table@@Base>
  413c69:	mov    DWORD PTR [rbx],eax
  413c6b:	test   eax,eax
  413c6d:	jne    413c85 <main@@Base+0xf345>
  413c6f:	mov    ecx,0x21
  413c74:	mov    rdi,r12
  413c77:	mov    rsi,rbp
  413c7a:	mov    rdx,r14
  413c7d:	call   41f940 <flatcc_json_parser_set_error@@Base>
  413c82:	mov    rbp,rax
  413c85:	cmp    DWORD PTR [r12+0x20],0x0
  413c8b:	jne    413ca8 <main@@Base+0xf368>
  413c8d:	cmp    DWORD PTR [rbx],0x0
  413c90:	jne    413ca8 <main@@Base+0xf368>
  413c92:	mov    ecx,0x21
  413c97:	mov    rdi,r12
  413c9a:	mov    rsi,rbp
  413c9d:	mov    rdx,r14
  413ca0:	call   41f940 <flatcc_json_parser_set_error@@Base>
  413ca5:	mov    rbp,rax
  413ca8:	mov    rax,rbp
  413cab:	add    rsp,0x48
  413caf:	pop    rbx
  413cb0:	pop    r12
  413cb2:	pop    r13
  413cb4:	pop    r14
  413cb6:	pop    r15
  413cb8:	pop    rbp
  413cb9:	ret    
  413cba:	mov    rbx,QWORD PTR [rsp+0x18]
  413cbf:	jmp    413c6f <main@@Base+0xf32f>
  413cc1:	mov    rbx,QWORD PTR [rsp+0x18]
  413cc6:	mov    ecx,0x21
  413ccb:	mov    rdi,r12
  413cce:	mov    rsi,rbp
  413cd1:	mov    rdx,r14
  413cd4:	call   41f940 <flatcc_json_parser_set_error@@Base>
  413cd9:	mov    rbp,rax
  413cdc:	jmp    413c6f <main@@Base+0xf32f>
  413cde:	xchg   ax,ax
  413ce0:	push   rbp
  413ce1:	push   r15
  413ce3:	push   r14
  413ce5:	push   r13
  413ce7:	push   r12
  413ce9:	push   rbx
  413cea:	push   rax
  413ceb:	mov    rbp,rcx
  413cee:	mov    r12,rdx
  413cf1:	mov    rbx,rsi
  413cf4:	mov    rcx,rdx
  413cf7:	sub    rcx,rsi
  413cfa:	cmp    rcx,0x8
  413cfe:	jb     413d07 <main@@Base+0xf3c7>
  413d00:	movbe  r14,QWORD PTR [rbx]
  413d05:	jmp    413d83 <main@@Base+0xf443>
  413d07:	and    cl,0xf
  413d0a:	add    cl,0xff
  413d0d:	cmp    cl,0x7
  413d10:	ja     413e92 <main@@Base+0xf552>
  413d16:	xor    eax,eax
  413d18:	movzx  ecx,cl
  413d1b:	lea    rdx,[rip+0x10a02]        # 424724 <_IO_stdin_used@@Base+0x724>
  413d22:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  413d26:	add    rcx,rdx
  413d29:	jmp    rcx
  413d2b:	movsx  rax,BYTE PTR [rbx+0x7]
  413d30:	movsx  rcx,BYTE PTR [rbx+0x6]
  413d35:	shl    rcx,0x8
  413d39:	or     rax,rcx
  413d3c:	movsx  rcx,BYTE PTR [rbx+0x5]
  413d41:	shl    rcx,0x10
  413d45:	or     rax,rcx
  413d48:	movsx  rcx,BYTE PTR [rbx+0x4]
  413d4d:	shl    rcx,0x18
  413d51:	or     rax,rcx
  413d54:	movsx  rcx,BYTE PTR [rbx+0x3]
  413d59:	shl    rcx,0x20
  413d5d:	or     rax,rcx
  413d60:	movsx  rcx,BYTE PTR [rbx+0x2]
  413d65:	shl    rcx,0x28
  413d69:	or     rax,rcx
  413d6c:	movsx  rcx,BYTE PTR [rbx+0x1]
  413d71:	shl    rcx,0x30
  413d75:	or     rax,rcx
  413d78:	movzx  r14d,BYTE PTR [rbx]
  413d7c:	shl    r14,0x38
  413d80:	or     r14,rax
  413d83:	movabs rax,0x4d6f6e7374657200
  413d8d:	cmp    r14,rax
  413d90:	jae    413dce <main@@Base+0xf48e>
  413d92:	shr    r14,0x28
  413d96:	cmp    r14,0x416c74
  413d9d:	jne    413e92 <main@@Base+0xf552>
  413da3:	mov    r14,r8
  413da6:	mov    ecx,0x3
  413dab:	mov    rsi,rbx
  413dae:	mov    rdx,r12
  413db1:	mov    r8,r9
  413db4:	call   41fdc0 <flatcc_json_parser_match_constant@@Base>
  413db9:	cmp    rax,rbx
  413dbc:	je     413e92 <main@@Base+0xf552>
  413dc2:	mov    QWORD PTR [r14],0x4
  413dc9:	jmp    413e88 <main@@Base+0xf548>
  413dce:	lea    rcx,[rax+0x32]
  413dd2:	cmp    r14,rcx
  413dd5:	jne    413e02 <main@@Base+0xf4c2>
  413dd7:	mov    r14,r8
  413dda:	mov    ecx,0x8
  413ddf:	mov    rsi,rbx
  413de2:	mov    rdx,r12
  413de5:	mov    r8,r9
  413de8:	call   41fdc0 <flatcc_json_parser_match_constant@@Base>
  413ded:	cmp    rax,rbx
  413df0:	je     413e92 <main@@Base+0xf552>
  413df6:	mov    QWORD PTR [r14],0x3
  413dfd:	jmp    413e88 <main@@Base+0xf548>
  413e02:	mov    rcx,r14
  413e05:	and    rcx,0xffffffffffffff00
  413e0c:	cmp    rcx,rax
  413e0f:	jne    413e46 <main@@Base+0xf506>
  413e11:	mov    ecx,0x7
  413e16:	mov    r13,rdi
  413e19:	mov    rsi,rbx
  413e1c:	mov    rdx,r12
  413e1f:	mov    QWORD PTR [rsp],r8
  413e23:	mov    r8,r9
  413e26:	mov    r15,r9
  413e29:	call   41fdc0 <flatcc_json_parser_match_constant@@Base>
  413e2e:	mov    rdi,r13
  413e31:	mov    r9,r15
  413e34:	mov    r8,QWORD PTR [rsp]
  413e38:	cmp    rax,rbx
  413e3b:	je     413e46 <main@@Base+0xf506>
  413e3d:	mov    QWORD PTR [r8],0x1
  413e44:	jmp    413e88 <main@@Base+0xf548>
  413e46:	mov    rax,r14
  413e49:	shr    rax,0x20
  413e4d:	cmp    rax,0x4e4f4e45
  413e53:	jne    413ea4 <main@@Base+0xf564>
  413e55:	mov    ecx,0x4
  413e5a:	mov    r13,rdi
  413e5d:	mov    rsi,rbx
  413e60:	mov    rdx,r12
  413e63:	mov    QWORD PTR [rsp],r8
  413e67:	mov    r8,r9
  413e6a:	mov    r15,r9
  413e6d:	call   41fdc0 <flatcc_json_parser_match_constant@@Base>
  413e72:	mov    rdi,r13
  413e75:	mov    r9,r15
  413e78:	mov    r8,QWORD PTR [rsp]
  413e7c:	cmp    rax,rbx
  413e7f:	je     413ea4 <main@@Base+0xf564>
  413e81:	mov    QWORD PTR [r8],0x0
  413e88:	mov    DWORD PTR [rbp+0x0],0x0
  413e8f:	mov    rbx,rax
  413e92:	mov    rax,rbx
  413e95:	add    rsp,0x8
  413e99:	pop    rbx
  413e9a:	pop    r12
  413e9c:	pop    r13
  413e9e:	pop    r14
  413ea0:	pop    r15
  413ea2:	pop    rbp
  413ea3:	ret    
  413ea4:	movabs rax,0x5465737453696d70
  413eae:	cmp    r14,rax
  413eb1:	jne    413e92 <main@@Base+0xf552>
  413eb3:	lea    rax,[rbx+0x8]
  413eb7:	mov    rdx,r12
  413eba:	sub    rdx,rax
  413ebd:	cmp    rdx,0x8
  413ec1:	jb     413eca <main@@Base+0xf58a>
  413ec3:	movbe  rax,QWORD PTR [rax]
  413ec8:	jmp    413f41 <main@@Base+0xf601>
  413eca:	and    dl,0xf
  413ecd:	add    dl,0xff
  413ed0:	cmp    dl,0x7
  413ed3:	ja     413e92 <main@@Base+0xf552>
  413ed5:	xor    ecx,ecx
  413ed7:	movzx  edx,dl
  413eda:	lea    rsi,[rip+0x10863]        # 424744 <_IO_stdin_used@@Base+0x744>
  413ee1:	movsxd rdx,DWORD PTR [rsi+rdx*4]
  413ee5:	add    rdx,rsi
  413ee8:	jmp    rdx
  413eea:	movsx  rcx,BYTE PTR [rbx+0xf]
  413eef:	movsx  rdx,BYTE PTR [rbx+0xe]
  413ef4:	shl    rdx,0x8
  413ef8:	or     rcx,rdx
  413efb:	movsx  rdx,BYTE PTR [rbx+0xd]
  413f00:	shl    rdx,0x10
  413f04:	or     rcx,rdx
  413f07:	movsx  rdx,BYTE PTR [rbx+0xc]
  413f0c:	shl    rdx,0x18
  413f10:	or     rcx,rdx
  413f13:	movsx  rdx,BYTE PTR [rbx+0xb]
  413f18:	shl    rdx,0x20
  413f1c:	or     rcx,rdx
  413f1f:	movsx  rdx,BYTE PTR [rbx+0xa]
  413f24:	shl    rdx,0x28
  413f28:	or     rcx,rdx
  413f2b:	movsx  rdx,BYTE PTR [rbx+0x9]
  413f30:	shl    rdx,0x30
  413f34:	or     rcx,rdx
  413f37:	movzx  eax,BYTE PTR [rax]
  413f3a:	shl    rax,0x38
  413f3e:	or     rax,rcx
  413f41:	movabs rcx,0x6c655461626c6557
  413f4b:	cmp    rax,rcx
  413f4e:	jne    413e92 <main@@Base+0xf552>
  413f54:	lea    r15,[rbx+0x10]
  413f58:	mov    rcx,r12
  413f5b:	sub    rcx,r15
  413f5e:	cmp    rcx,0x8
  413f62:	jb     413f6b <main@@Base+0xf62b>
  413f64:	movbe  rcx,QWORD PTR [r15]
  413f69:	jmp    413fe7 <main@@Base+0xf6a7>
  413f6b:	and    cl,0xf
  413f6e:	add    cl,0xff
  413f71:	cmp    cl,0x7
  413f74:	ja     413e92 <main@@Base+0xf552>
  413f7a:	xor    eax,eax
  413f7c:	movzx  ecx,cl
  413f7f:	lea    rdx,[rip+0x107de]        # 424764 <_IO_stdin_used@@Base+0x764>
  413f86:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  413f8a:	add    rcx,rdx
  413f8d:	jmp    rcx
  413f8f:	movsx  rax,BYTE PTR [rbx+0x17]
  413f94:	movsx  rcx,BYTE PTR [rbx+0x16]
  413f99:	shl    rcx,0x8
  413f9d:	or     rax,rcx
  413fa0:	movsx  rcx,BYTE PTR [rbx+0x15]
  413fa5:	shl    rcx,0x10
  413fa9:	or     rax,rcx
  413fac:	movsx  rcx,BYTE PTR [rbx+0x14]
  413fb1:	shl    rcx,0x18
  413fb5:	or     rax,rcx
  413fb8:	movsx  rcx,BYTE PTR [rbx+0x13]
  413fbd:	shl    rcx,0x20
  413fc1:	or     rax,rcx
  413fc4:	movsx  rcx,BYTE PTR [rbx+0x12]
  413fc9:	shl    rcx,0x28
  413fcd:	or     rax,rcx
  413fd0:	movsx  rcx,BYTE PTR [rbx+0x11]
  413fd5:	shl    rcx,0x30
  413fd9:	or     rax,rcx
  413fdc:	movzx  ecx,BYTE PTR [r15]
  413fe0:	shl    rcx,0x38
  413fe4:	or     rcx,rax
  413fe7:	shr    rcx,0x8
  413feb:	movabs rax,0x697468456e756d
  413ff5:	cmp    rcx,rax
  413ff8:	jne    413e92 <main@@Base+0xf552>
  413ffe:	mov    r14,r8
  414001:	mov    ecx,0x7
  414006:	mov    rsi,r15
  414009:	mov    rdx,r12
  41400c:	mov    r8,r9
  41400f:	call   41fdc0 <flatcc_json_parser_match_constant@@Base>
  414014:	cmp    rax,r15
  414017:	je     413e92 <main@@Base+0xf552>
  41401d:	mov    QWORD PTR [r14],0x2
  414024:	jmp    413e88 <main@@Base+0xf548>
  414029:	nop    DWORD PTR [rax+0x0]
  414030:	push   rbp
  414031:	push   r15
  414033:	push   r14
  414035:	push   r13
  414037:	push   r12
  414039:	push   rbx
  41403a:	sub    rsp,0x38
  41403e:	mov    r15,r8
  414041:	mov    r13,rdx
  414044:	mov    rbx,rsi
  414047:	mov    r14,rdi
  41404a:	mov    BYTE PTR [r8],0x0
  41404e:	cmp    rsi,rdx
  414051:	je     41406d <main@@Base+0xf72d>
  414053:	mov    al,BYTE PTR [rbx]
  414055:	cmp    al,0x2e
  414057:	je     41407e <main@@Base+0xf73e>
  414059:	cmp    al,0x22
  41405b:	jne    4141ee <main@@Base+0xf8ae>
  414061:	add    rbx,0x1
  414065:	mov    DWORD PTR [r14+0x14],0x0
  41406d:	cmp    DWORD PTR [r14+0x14],0x0
  414072:	je     4140a1 <main@@Base+0xf761>
  414074:	cmp    rbx,r13
  414077:	jne    4140e0 <main@@Base+0xf7a0>
  414079:	jmp    4141c1 <main@@Base+0xf881>
  41407e:	mov    rbp,rcx
  414081:	mov    ecx,0x5
  414086:	mov    rdi,r14
  414089:	mov    rsi,rbx
  41408c:	mov    rdx,r13
  41408f:	call   41f940 <flatcc_json_parser_set_error@@Base>
  414094:	mov    rcx,rbp
  414097:	mov    rbx,rax
  41409a:	cmp    DWORD PTR [r14+0x14],0x0
  41409f:	jne    414074 <main@@Base+0xf734>
  4140a1:	mov    rbp,rcx
  4140a4:	mov    rax,r13
  4140a7:	sub    rax,rbx
  4140aa:	cmp    rax,0x2
  4140ae:	jl     4140c3 <main@@Base+0xf783>
  4140b0:	cmp    BYTE PTR [rbx],0x20
  4140b3:	jg     4140d4 <main@@Base+0xf794>
  4140b5:	jne    4140c3 <main@@Base+0xf783>
  4140b7:	cmp    BYTE PTR [rbx+0x1],0x20
  4140bb:	jle    4140c3 <main@@Base+0xf783>
  4140bd:	add    rbx,0x1
  4140c1:	jmp    4140d4 <main@@Base+0xf794>
  4140c3:	mov    rdi,r14
  4140c6:	mov    rsi,rbx
  4140c9:	mov    rdx,r13
  4140cc:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  4140d1:	mov    rbx,rax
  4140d4:	mov    rcx,rbp
  4140d7:	cmp    rbx,r13
  4140da:	je     4141c1 <main@@Base+0xf881>
  4140e0:	lea    rax,[rcx+0x8]
  4140e4:	mov    DWORD PTR [rsp+0x8],0x0
  4140ec:	lea    r12,[rsp+0x10]
  4140f1:	mov    DWORD PTR [rsp+0xc],0x0
  4140f9:	mov    QWORD PTR [rsp+0x20],r15
  4140fe:	mov    QWORD PTR [rsp+0x18],rcx
  414103:	mov    QWORD PTR [rsp+0x28],rax
  414108:	mov    rbp,QWORD PTR [rcx]
  41410b:	mov    r15,rax
  41410e:	xchg   ax,ax
  414110:	mov    rdi,r14
  414113:	mov    rsi,rbx
  414116:	mov    rdx,r13
  414119:	lea    rcx,[rsp+0x14]
  41411e:	lea    r8,[rsp+0x30]
  414123:	mov    r9,r12
  414126:	call   rbp
  414128:	cmp    rax,r13
  41412b:	je     4141c1 <main@@Base+0xf881>
  414131:	mov    rbp,rax
  414134:	cmp    rax,rbx
  414137:	jne    414150 <main@@Base+0xf810>
  414139:	mov    rbp,QWORD PTR [r15]
  41413c:	add    r15,0x8
  414140:	test   rbp,rbp
  414143:	jne    414110 <main@@Base+0xf7d0>
  414145:	jmp    4141c6 <main@@Base+0xf886>
  414147:	nop    WORD PTR [rax+rax*1+0x0]
  414150:	mov    ebx,DWORD PTR [rsp+0xc]
  414154:	test   ebx,ebx
  414156:	je     414163 <main@@Base+0xf823>
  414158:	cmp    DWORD PTR [r14+0x14],0x0
  41415d:	jne    414206 <main@@Base+0xf8c6>
  414163:	cmp    DWORD PTR [rsp+0x14],0x0
  414168:	je     41417f <main@@Base+0xf83f>
  41416a:	mov    ecx,0x8
  41416f:	mov    rdi,r14
  414172:	mov    rsi,rbp
  414175:	mov    rdx,r13
  414178:	call   41f940 <flatcc_json_parser_set_error@@Base>
  41417d:	jmp    41418f <main@@Base+0xf84f>
  41417f:	cmp    QWORD PTR [rsp+0x30],0x0
  414185:	setne  al
  414188:	mov    DWORD PTR [rsp+0x8],eax
  41418c:	mov    rax,rbp
  41418f:	mov    r15,QWORD PTR [rsp+0x20]
  414194:	mov    rcx,QWORD PTR [rsp+0x18]
  414199:	cmp    rax,r13
  41419c:	je     4141c1 <main@@Base+0xf881>
  41419e:	add    ebx,0x1
  4141a1:	mov    DWORD PTR [rsp+0xc],ebx
  4141a5:	mov    rbx,rbp
  4141a8:	mov    eax,DWORD PTR [rsp+0x8]
  4141ac:	add    BYTE PTR [r15],al
  4141af:	cmp    DWORD PTR [rsp+0x10],0x0
  4141b4:	mov    rax,QWORD PTR [rsp+0x28]
  4141b9:	jne    414108 <main@@Base+0xf7c8>
  4141bf:	jmp    4141dc <main@@Base+0xf89c>
  4141c1:	mov    rbp,r13
  4141c4:	jmp    4141dc <main@@Base+0xf89c>
  4141c6:	mov    ecx,0x17
  4141cb:	mov    rdi,r14
  4141ce:	mov    rsi,rbx
  4141d1:	mov    rdx,r13
  4141d4:	call   41f940 <flatcc_json_parser_set_error@@Base>
  4141d9:	mov    rbp,rax
  4141dc:	mov    rax,rbp
  4141df:	add    rsp,0x38
  4141e3:	pop    rbx
  4141e4:	pop    r12
  4141e6:	pop    r13
  4141e8:	pop    r14
  4141ea:	pop    r15
  4141ec:	pop    rbp
  4141ed:	ret    
  4141ee:	mov    DWORD PTR [r14+0x14],0x1
  4141f6:	cmp    DWORD PTR [r14+0x14],0x0
  4141fb:	jne    414074 <main@@Base+0xf734>
  414201:	jmp    4140a1 <main@@Base+0xf761>
  414206:	mov    ecx,0xe
  41420b:	mov    rdi,r14
  41420e:	mov    rsi,rbp
  414211:	jmp    4141d1 <main@@Base+0xf891>
  414213:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41421d:	nop    DWORD PTR [rax]
  414220:	push   rbp
  414221:	push   r15
  414223:	push   r14
  414225:	push   r13
  414227:	push   r12
  414229:	push   rbx
  41422a:	sub    rsp,0x48
  41422e:	mov    rbx,r8
  414231:	mov    rbp,rcx
  414234:	mov    r14,rdx
  414237:	mov    r13,rsi
  41423a:	mov    r15,rdi
  41423d:	mov    DWORD PTR [r8],0x0
  414244:	cmp    rsi,rdx
  414247:	je     414261 <main@@Base+0xf921>
  414249:	mov    al,BYTE PTR [r13+0x0]
  41424d:	cmp    al,0x2e
  41424f:	je     414272 <main@@Base+0xf932>
  414251:	cmp    al,0x22
  414253:	jne    414291 <main@@Base+0xf951>
  414255:	add    r13,0x1
  414259:	mov    DWORD PTR [r15+0x14],0x0
  414261:	cmp    DWORD PTR [r15+0x14],0x0
  414266:	je     4142a0 <main@@Base+0xf960>
  414268:	cmp    r13,r14
  41426b:	jne    4142e4 <main@@Base+0xf9a4>
  41426d:	jmp    4143d0 <main@@Base+0xfa90>
  414272:	mov    ecx,0x5
  414277:	mov    rdi,r15
  41427a:	mov    rsi,r13
  41427d:	mov    rdx,r14
  414280:	call   41f940 <flatcc_json_parser_set_error@@Base>
  414285:	mov    r13,rax
  414288:	cmp    DWORD PTR [r15+0x14],0x0
  41428d:	jne    414268 <main@@Base+0xf928>
  41428f:	jmp    4142a0 <main@@Base+0xf960>
  414291:	mov    DWORD PTR [r15+0x14],0x1
  414299:	cmp    DWORD PTR [r15+0x14],0x0
  41429e:	jne    414268 <main@@Base+0xf928>
  4142a0:	mov    rax,r14
  4142a3:	sub    rax,r13
  4142a6:	cmp    rax,0x2
  4142aa:	jl     4142ca <main@@Base+0xf98a>
  4142ac:	cmp    BYTE PTR [r13+0x0],0x20
  4142b1:	jg     414268 <main@@Base+0xf928>
  4142b3:	jne    4142ca <main@@Base+0xf98a>
  4142b5:	cmp    BYTE PTR [r13+0x1],0x20
  4142ba:	jle    4142ca <main@@Base+0xf98a>
  4142bc:	add    r13,0x1
  4142c0:	cmp    r13,r14
  4142c3:	jne    4142e4 <main@@Base+0xf9a4>
  4142c5:	jmp    4143d0 <main@@Base+0xfa90>
  4142ca:	mov    rdi,r15
  4142cd:	mov    rsi,r13
  4142d0:	mov    rdx,r14
  4142d3:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  4142d8:	mov    r13,rax
  4142db:	cmp    r13,r14
  4142de:	je     4143d0 <main@@Base+0xfa90>
  4142e4:	lea    rax,[rbp+0x8]
  4142e8:	xor    edx,edx
  4142ea:	lea    r12,[rsp+0x8]
  4142ef:	vbroadcastss xmm0,DWORD PTR [rip+0xfd20]        # 424018 <_IO_stdin_used@@Base+0x18>
  4142f8:	vmovaps XMMWORD PTR [rsp+0x30],xmm0
  4142fe:	mov    QWORD PTR [rsp+0x20],rbx
  414303:	mov    QWORD PTR [rsp+0x18],rbp
  414308:	mov    QWORD PTR [rsp+0x10],rax
  41430d:	mov    DWORD PTR [rsp+0x4],edx
  414311:	mov    rbx,QWORD PTR [rbp+0x0]
  414315:	mov    rbp,rax
  414318:	nop    DWORD PTR [rax+rax*1+0x0]
  414320:	mov    rdi,r15
  414323:	mov    rsi,r13
  414326:	mov    rdx,r14
  414329:	lea    rcx,[rsp+0xc]
  41432e:	lea    r8,[rsp+0x28]
  414333:	mov    r9,r12
  414336:	call   rbx
  414338:	cmp    rax,r14
  41433b:	je     4143d0 <main@@Base+0xfa90>
  414341:	cmp    rax,r13
  414344:	jne    414360 <main@@Base+0xfa20>
  414346:	mov    rbx,QWORD PTR [rbp+0x0]
  41434a:	add    rbp,0x8
  41434e:	test   rbx,rbx
  414351:	jne    414320 <main@@Base+0xf9e0>
  414353:	jmp    4143d5 <main@@Base+0xfa95>
  414358:	nop    DWORD PTR [rax+rax*1+0x0]
  414360:	mov    r13,rax
  414363:	mov    edx,DWORD PTR [rsp+0x4]
  414367:	test   edx,edx
  414369:	je     414376 <main@@Base+0xfa36>
  41436b:	cmp    DWORD PTR [r15+0x14],0x0
  414370:	jne    4143fd <main@@Base+0xfabd>
  414376:	mov    rax,QWORD PTR [rsp+0x28]
  41437b:	test   rax,rax
  41437e:	js     414387 <main@@Base+0xfa47>
  414380:	vcvtsi2ss xmm0,xmm1,rax
  414385:	jmp    41439c <main@@Base+0xfa5c>
  414387:	mov    rcx,rax
  41438a:	shr    rcx,1
  41438d:	and    eax,0x1
  414390:	or     rax,rcx
  414393:	vcvtsi2ss xmm0,xmm1,rax
  414398:	vaddss xmm0,xmm0,xmm0
  41439c:	mov    rbx,QWORD PTR [rsp+0x20]
  4143a1:	mov    rbp,QWORD PTR [rsp+0x18]
  4143a6:	mov    rax,QWORD PTR [rsp+0x10]
  4143ab:	cmp    DWORD PTR [rsp+0xc],0x0
  4143b0:	je     4143b8 <main@@Base+0xfa78>
  4143b2:	vxorps xmm0,xmm0,XMMWORD PTR [rsp+0x30]
  4143b8:	add    edx,0x1
  4143bb:	vaddss xmm0,xmm0,DWORD PTR [rbx]
  4143bf:	vmovss DWORD PTR [rbx],xmm0
  4143c3:	cmp    DWORD PTR [rsp+0x8],0x0
  4143c8:	jne    41430d <main@@Base+0xf9cd>
  4143ce:	jmp    4143eb <main@@Base+0xfaab>
  4143d0:	mov    r13,r14
  4143d3:	jmp    4143eb <main@@Base+0xfaab>
  4143d5:	mov    ecx,0x17
  4143da:	mov    rdi,r15
  4143dd:	mov    rsi,r13
  4143e0:	mov    rdx,r14
  4143e3:	call   41f940 <flatcc_json_parser_set_error@@Base>
  4143e8:	mov    r13,rax
  4143eb:	mov    rax,r13
  4143ee:	add    rsp,0x48
  4143f2:	pop    rbx
  4143f3:	pop    r12
  4143f5:	pop    r13
  4143f7:	pop    r14
  4143f9:	pop    r15
  4143fb:	pop    rbp
  4143fc:	ret    
  4143fd:	mov    ecx,0xe
  414402:	jmp    4143da <main@@Base+0xfa9a>
  414404:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41440e:	xchg   ax,ax
  414410:	push   rbp
  414411:	push   r15
  414413:	push   r14
  414415:	push   r13
  414417:	push   r12
  414419:	push   rbx
  41441a:	sub    rsp,0x38
  41441e:	mov    r15,r8
  414421:	mov    r13,rdx
  414424:	mov    rbx,rsi
  414427:	mov    r14,rdi
  41442a:	mov    DWORD PTR [r8],0x0
  414431:	cmp    rsi,rdx
  414434:	je     414450 <main@@Base+0xfb10>
  414436:	mov    al,BYTE PTR [rbx]
  414438:	cmp    al,0x2e
  41443a:	je     414461 <main@@Base+0xfb21>
  41443c:	cmp    al,0x22
  41443e:	jne    4145f3 <main@@Base+0xfcb3>
  414444:	add    rbx,0x1
  414448:	mov    DWORD PTR [r14+0x14],0x0
  414450:	cmp    DWORD PTR [r14+0x14],0x0
  414455:	je     414484 <main@@Base+0xfb44>
  414457:	cmp    rbx,r13
  41445a:	jne    4144c3 <main@@Base+0xfb83>
  41445c:	jmp    4145c6 <main@@Base+0xfc86>
  414461:	mov    rbp,rcx
  414464:	mov    ecx,0x5
  414469:	mov    rdi,r14
  41446c:	mov    rsi,rbx
  41446f:	mov    rdx,r13
  414472:	call   41f940 <flatcc_json_parser_set_error@@Base>
  414477:	mov    rcx,rbp
  41447a:	mov    rbx,rax
  41447d:	cmp    DWORD PTR [r14+0x14],0x0
  414482:	jne    414457 <main@@Base+0xfb17>
  414484:	mov    rbp,rcx
  414487:	mov    rax,r13
  41448a:	sub    rax,rbx
  41448d:	cmp    rax,0x2
  414491:	jl     4144a6 <main@@Base+0xfb66>
  414493:	cmp    BYTE PTR [rbx],0x20
  414496:	jg     4144b7 <main@@Base+0xfb77>
  414498:	jne    4144a6 <main@@Base+0xfb66>
  41449a:	cmp    BYTE PTR [rbx+0x1],0x20
  41449e:	jle    4144a6 <main@@Base+0xfb66>
  4144a0:	add    rbx,0x1
  4144a4:	jmp    4144b7 <main@@Base+0xfb77>
  4144a6:	mov    rdi,r14
  4144a9:	mov    rsi,rbx
  4144ac:	mov    rdx,r13
  4144af:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  4144b4:	mov    rbx,rax
  4144b7:	mov    rcx,rbp
  4144ba:	cmp    rbx,r13
  4144bd:	je     4145c6 <main@@Base+0xfc86>
  4144c3:	lea    rax,[rcx+0x8]
  4144c7:	xor    edx,edx
  4144c9:	lea    r12,[rsp+0x18]
  4144ce:	mov    DWORD PTR [rsp+0xc],0x0
  4144d6:	mov    QWORD PTR [rsp+0x20],r15
  4144db:	mov    QWORD PTR [rsp+0x10],rcx
  4144e0:	mov    QWORD PTR [rsp+0x28],rax
  4144e5:	mov    DWORD PTR [rsp+0x8],edx
  4144e9:	mov    rbp,QWORD PTR [rcx]
  4144ec:	mov    r15,rax
  4144ef:	nop
  4144f0:	mov    rdi,r14
  4144f3:	mov    rsi,rbx
  4144f6:	mov    rdx,r13
  4144f9:	lea    rcx,[rsp+0x1c]
  4144fe:	lea    r8,[rsp+0x30]
  414503:	mov    r9,r12
  414506:	call   rbp
  414508:	cmp    rax,r13
  41450b:	je     4145c6 <main@@Base+0xfc86>
  414511:	mov    rbp,rax
  414514:	cmp    rax,rbx
  414517:	jne    414530 <main@@Base+0xfbf0>
  414519:	mov    rbp,QWORD PTR [r15]
  41451c:	add    r15,0x8
  414520:	test   rbp,rbp
  414523:	jne    4144f0 <main@@Base+0xfbb0>
  414525:	jmp    4145cb <main@@Base+0xfc8b>
  41452a:	nop    WORD PTR [rax+rax*1+0x0]
  414530:	mov    ebx,DWORD PTR [rsp+0xc]
  414534:	test   ebx,ebx
  414536:	je     414543 <main@@Base+0xfc03>
  414538:	cmp    DWORD PTR [r14+0x14],0x0
  41453d:	jne    41460b <main@@Base+0xfccb>
  414543:	mov    rax,QWORD PTR [rsp+0x30]
  414548:	cmp    DWORD PTR [rsp+0x1c],0x0
  41454d:	je     414565 <main@@Base+0xfc25>
  41454f:	mov    ecx,0x80000001
  414554:	cmp    rax,rcx
  414557:	mov    r15,QWORD PTR [rsp+0x20]
  41455c:	jb     414595 <main@@Base+0xfc55>
  41455e:	mov    ecx,0x8
  414563:	jmp    414577 <main@@Base+0xfc37>
  414565:	test   rax,0xffffffff80000000
  41456b:	mov    r15,QWORD PTR [rsp+0x20]
  414570:	je     414598 <main@@Base+0xfc58>
  414572:	mov    ecx,0x7
  414577:	mov    rdi,r14
  41457a:	mov    rsi,rbp
  41457d:	mov    rdx,r13
  414580:	call   41f940 <flatcc_json_parser_set_error@@Base>
  414585:	mov    rcx,QWORD PTR [rsp+0x10]
  41458a:	mov    edx,DWORD PTR [rsp+0x8]
  41458e:	cmp    rax,r13
  414591:	jne    4145a7 <main@@Base+0xfc67>
  414593:	jmp    4145c6 <main@@Base+0xfc86>
  414595:	neg    rax
  414598:	mov    edx,eax
  41459a:	mov    rax,rbp
  41459d:	mov    rcx,QWORD PTR [rsp+0x10]
  4145a2:	cmp    rax,r13
  4145a5:	je     4145c6 <main@@Base+0xfc86>
  4145a7:	add    ebx,0x1
  4145aa:	mov    DWORD PTR [rsp+0xc],ebx
  4145ae:	add    DWORD PTR [r15],edx
  4145b1:	cmp    DWORD PTR [rsp+0x18],0x0
  4145b6:	mov    rbx,rbp
  4145b9:	mov    rax,QWORD PTR [rsp+0x28]
  4145be:	jne    4144e5 <main@@Base+0xfba5>
  4145c4:	jmp    4145e1 <main@@Base+0xfca1>
  4145c6:	mov    rbp,r13
  4145c9:	jmp    4145e1 <main@@Base+0xfca1>
  4145cb:	mov    ecx,0x17
  4145d0:	mov    rdi,r14
  4145d3:	mov    rsi,rbx
  4145d6:	mov    rdx,r13
  4145d9:	call   41f940 <flatcc_json_parser_set_error@@Base>
  4145de:	mov    rbp,rax
  4145e1:	mov    rax,rbp
  4145e4:	add    rsp,0x38
  4145e8:	pop    rbx
  4145e9:	pop    r12
  4145eb:	pop    r13
  4145ed:	pop    r14
  4145ef:	pop    r15
  4145f1:	pop    rbp
  4145f2:	ret    
  4145f3:	mov    DWORD PTR [r14+0x14],0x1
  4145fb:	cmp    DWORD PTR [r14+0x14],0x0
  414600:	jne    414457 <main@@Base+0xfb17>
  414606:	jmp    414484 <main@@Base+0xfb44>
  41460b:	mov    ecx,0xe
  414610:	mov    rdi,r14
  414613:	mov    rsi,rbp
  414616:	jmp    4145d6 <main@@Base+0xfc96>
  414618:	nop    DWORD PTR [rax+rax*1+0x0]
  414620:	push   rbp
  414621:	push   r15
  414623:	push   r14
  414625:	push   r13
  414627:	push   r12
  414629:	push   rbx
  41462a:	sub    rsp,0x38
  41462e:	mov    r15,r8
  414631:	mov    r13,rdx
  414634:	mov    rbx,rsi
  414637:	mov    r14,rdi
  41463a:	mov    QWORD PTR [r8],0x0
  414641:	cmp    rsi,rdx
  414644:	je     414660 <main@@Base+0xfd20>
  414646:	mov    al,BYTE PTR [rbx]
  414648:	cmp    al,0x2e
  41464a:	je     414671 <main@@Base+0xfd31>
  41464c:	cmp    al,0x22
  41464e:	jne    414805 <main@@Base+0xfec5>
  414654:	add    rbx,0x1
  414658:	mov    DWORD PTR [r14+0x14],0x0
  414660:	cmp    DWORD PTR [r14+0x14],0x0
  414665:	je     414694 <main@@Base+0xfd54>
  414667:	cmp    rbx,r13
  41466a:	jne    4146d3 <main@@Base+0xfd93>
  41466c:	jmp    4147d8 <main@@Base+0xfe98>
  414671:	mov    rbp,rcx
  414674:	mov    ecx,0x5
  414679:	mov    rdi,r14
  41467c:	mov    rsi,rbx
  41467f:	mov    rdx,r13
  414682:	call   41f940 <flatcc_json_parser_set_error@@Base>
  414687:	mov    rcx,rbp
  41468a:	mov    rbx,rax
  41468d:	cmp    DWORD PTR [r14+0x14],0x0
  414692:	jne    414667 <main@@Base+0xfd27>
  414694:	mov    rbp,rcx
  414697:	mov    rax,r13
  41469a:	sub    rax,rbx
  41469d:	cmp    rax,0x2
  4146a1:	jl     4146b6 <main@@Base+0xfd76>
  4146a3:	cmp    BYTE PTR [rbx],0x20
  4146a6:	jg     4146c7 <main@@Base+0xfd87>
  4146a8:	jne    4146b6 <main@@Base+0xfd76>
  4146aa:	cmp    BYTE PTR [rbx+0x1],0x20
  4146ae:	jle    4146b6 <main@@Base+0xfd76>
  4146b0:	add    rbx,0x1
  4146b4:	jmp    4146c7 <main@@Base+0xfd87>
  4146b6:	mov    rdi,r14
  4146b9:	mov    rsi,rbx
  4146bc:	mov    rdx,r13
  4146bf:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  4146c4:	mov    rbx,rax
  4146c7:	mov    rcx,rbp
  4146ca:	cmp    rbx,r13
  4146cd:	je     4147d8 <main@@Base+0xfe98>
  4146d3:	lea    rax,[rcx+0x8]
  4146d7:	xor    edx,edx
  4146d9:	lea    r12,[rsp+0x8]
  4146de:	mov    DWORD PTR [rsp+0x4],0x0
  4146e6:	mov    QWORD PTR [rsp+0x10],r15
  4146eb:	mov    QWORD PTR [rsp+0x28],rcx
  4146f0:	mov    QWORD PTR [rsp+0x20],rax
  4146f5:	mov    QWORD PTR [rsp+0x18],rdx
  4146fa:	mov    rbp,QWORD PTR [rcx]
  4146fd:	mov    r15,rax
  414700:	mov    rdi,r14
  414703:	mov    rsi,rbx
  414706:	mov    rdx,r13
  414709:	lea    rcx,[rsp+0xc]
  41470e:	lea    r8,[rsp+0x30]
  414713:	mov    r9,r12
  414716:	call   rbp
  414718:	cmp    rax,r13
  41471b:	je     4147d8 <main@@Base+0xfe98>
  414721:	mov    rbp,rax
  414724:	cmp    rax,rbx
  414727:	jne    414740 <main@@Base+0xfe00>
  414729:	mov    rbp,QWORD PTR [r15]
  41472c:	add    r15,0x8
  414730:	test   rbp,rbp
  414733:	jne    414700 <main@@Base+0xfdc0>
  414735:	jmp    4147dd <main@@Base+0xfe9d>
  41473a:	nop    WORD PTR [rax+rax*1+0x0]
  414740:	mov    ebx,DWORD PTR [rsp+0x4]
  414744:	test   ebx,ebx
  414746:	je     414753 <main@@Base+0xfe13>
  414748:	cmp    DWORD PTR [r14+0x14],0x0
  41474d:	jne    41481d <main@@Base+0xfedd>
  414753:	mov    rcx,QWORD PTR [rsp+0x30]
  414758:	cmp    DWORD PTR [rsp+0xc],0x0
  41475d:	je     41477a <main@@Base+0xfe3a>
  41475f:	movabs rax,0x8000000000000001
  414769:	cmp    rcx,rax
  41476c:	mov    r15,QWORD PTR [rsp+0x10]
  414771:	jb     4147a6 <main@@Base+0xfe66>
  414773:	mov    ecx,0x8
  414778:	jmp    41478c <main@@Base+0xfe4c>
  41477a:	mov    rax,rbp
  41477d:	test   rcx,rcx
  414780:	mov    r15,QWORD PTR [rsp+0x10]
  414785:	jns    41479f <main@@Base+0xfe5f>
  414787:	mov    ecx,0x7
  41478c:	mov    rdi,r14
  41478f:	mov    rsi,rbp
  414792:	mov    rdx,r13
  414795:	call   41f940 <flatcc_json_parser_set_error@@Base>
  41479a:	mov    rcx,QWORD PTR [rsp+0x18]
  41479f:	cmp    rax,r13
  4147a2:	jne    4147b1 <main@@Base+0xfe71>
  4147a4:	jmp    4147d8 <main@@Base+0xfe98>
  4147a6:	neg    rcx
  4147a9:	mov    rax,rbp
  4147ac:	cmp    rax,r13
  4147af:	je     4147d8 <main@@Base+0xfe98>
  4147b1:	add    ebx,0x1
  4147b4:	mov    DWORD PTR [rsp+0x4],ebx
  4147b8:	add    QWORD PTR [r15],rcx
  4147bb:	cmp    DWORD PTR [rsp+0x8],0x0
  4147c0:	mov    rdx,rcx
  4147c3:	mov    rbx,rbp
  4147c6:	mov    rcx,QWORD PTR [rsp+0x28]
  4147cb:	mov    rax,QWORD PTR [rsp+0x20]
  4147d0:	jne    4146f5 <main@@Base+0xfdb5>
  4147d6:	jmp    4147f3 <main@@Base+0xfeb3>
  4147d8:	mov    rbp,r13
  4147db:	jmp    4147f3 <main@@Base+0xfeb3>
  4147dd:	mov    ecx,0x17
  4147e2:	mov    rdi,r14
  4147e5:	mov    rsi,rbx
  4147e8:	mov    rdx,r13
  4147eb:	call   41f940 <flatcc_json_parser_set_error@@Base>
  4147f0:	mov    rbp,rax
  4147f3:	mov    rax,rbp
  4147f6:	add    rsp,0x38
  4147fa:	pop    rbx
  4147fb:	pop    r12
  4147fd:	pop    r13
  4147ff:	pop    r14
  414801:	pop    r15
  414803:	pop    rbp
  414804:	ret    
  414805:	mov    DWORD PTR [r14+0x14],0x1
  41480d:	cmp    DWORD PTR [r14+0x14],0x0
  414812:	jne    414667 <main@@Base+0xfd27>
  414818:	jmp    414694 <main@@Base+0xfd54>
  41481d:	mov    ecx,0xe
  414822:	mov    rdi,r14
  414825:	mov    rsi,rbp
  414828:	jmp    4147e8 <main@@Base+0xfea8>
  41482a:	nop    WORD PTR [rax+rax*1+0x0]
  414830:	push   rbp
  414831:	push   r15
  414833:	push   r14
  414835:	push   r13
  414837:	push   r12
  414839:	push   rbx
  41483a:	sub    rsp,0x38
  41483e:	mov    r15,r8
  414841:	mov    r13,rdx
  414844:	mov    rbx,rsi
  414847:	mov    r14,rdi
  41484a:	mov    DWORD PTR [r8],0x0
  414851:	cmp    rsi,rdx
  414854:	je     414870 <main@@Base+0xff30>
  414856:	mov    al,BYTE PTR [rbx]
  414858:	cmp    al,0x2e
  41485a:	je     414881 <main@@Base+0xff41>
  41485c:	cmp    al,0x22
  41485e:	jne    414a2a <main@@Base+0x100ea>
  414864:	add    rbx,0x1
  414868:	mov    DWORD PTR [r14+0x14],0x0
  414870:	cmp    DWORD PTR [r14+0x14],0x0
  414875:	je     4148a4 <main@@Base+0xff64>
  414877:	cmp    rbx,r13
  41487a:	jne    4148e3 <main@@Base+0xffa3>
  41487c:	jmp    4149fd <main@@Base+0x100bd>
  414881:	mov    rbp,rcx
  414884:	mov    ecx,0x5
  414889:	mov    rdi,r14
  41488c:	mov    rsi,rbx
  41488f:	mov    rdx,r13
  414892:	call   41f940 <flatcc_json_parser_set_error@@Base>
  414897:	mov    rcx,rbp
  41489a:	mov    rbx,rax
  41489d:	cmp    DWORD PTR [r14+0x14],0x0
  4148a2:	jne    414877 <main@@Base+0xff37>
  4148a4:	mov    rbp,rcx
  4148a7:	mov    rax,r13
  4148aa:	sub    rax,rbx
  4148ad:	cmp    rax,0x2
  4148b1:	jl     4148c6 <main@@Base+0xff86>
  4148b3:	cmp    BYTE PTR [rbx],0x20
  4148b6:	jg     4148d7 <main@@Base+0xff97>
  4148b8:	jne    4148c6 <main@@Base+0xff86>
  4148ba:	cmp    BYTE PTR [rbx+0x1],0x20
  4148be:	jle    4148c6 <main@@Base+0xff86>
  4148c0:	add    rbx,0x1
  4148c4:	jmp    4148d7 <main@@Base+0xff97>
  4148c6:	mov    rdi,r14
  4148c9:	mov    rsi,rbx
  4148cc:	mov    rdx,r13
  4148cf:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  4148d4:	mov    rbx,rax
  4148d7:	mov    rcx,rbp
  4148da:	cmp    rbx,r13
  4148dd:	je     4149fd <main@@Base+0x100bd>
  4148e3:	lea    rax,[rcx+0x8]
  4148e7:	mov    DWORD PTR [rsp+0x8],0x0
  4148ef:	lea    r12,[rsp+0x18]
  4148f4:	mov    DWORD PTR [rsp+0xc],0x0
  4148fc:	mov    QWORD PTR [rsp+0x20],r15
  414901:	mov    QWORD PTR [rsp+0x10],rcx
  414906:	mov    QWORD PTR [rsp+0x28],rax
  41490b:	mov    rbp,QWORD PTR [rcx]
  41490e:	mov    r15,rax
  414911:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41491b:	nop    DWORD PTR [rax+rax*1+0x0]
  414920:	mov    rdi,r14
  414923:	mov    rsi,rbx
  414926:	mov    rdx,r13
  414929:	lea    rcx,[rsp+0x1c]
  41492e:	lea    r8,[rsp+0x30]
  414933:	mov    r9,r12
  414936:	call   rbp
  414938:	cmp    rax,r13
  41493b:	je     4149fd <main@@Base+0x100bd>
  414941:	mov    rbp,rax
  414944:	cmp    rax,rbx
  414947:	jne    414960 <main@@Base+0x10020>
  414949:	mov    rbp,QWORD PTR [r15]
  41494c:	add    r15,0x8
  414950:	test   rbp,rbp
  414953:	jne    414920 <main@@Base+0xffe0>
  414955:	jmp    414a02 <main@@Base+0x100c2>
  41495a:	nop    WORD PTR [rax+rax*1+0x0]
  414960:	mov    ebx,DWORD PTR [rsp+0xc]
  414964:	test   ebx,ebx
  414966:	je     414973 <main@@Base+0x10033>
  414968:	cmp    DWORD PTR [r14+0x14],0x0
  41496d:	jne    414a42 <main@@Base+0x10102>
  414973:	cmp    DWORD PTR [rsp+0x1c],0x0
  414978:	je     414994 <main@@Base+0x10054>
  41497a:	mov    ecx,0x8
  41497f:	mov    rdi,r14
  414982:	mov    rsi,rbp
  414985:	mov    rdx,r13
  414988:	call   41f940 <flatcc_json_parser_set_error@@Base>
  41498d:	mov    r15,QWORD PTR [rsp+0x20]
  414992:	jmp    4149d0 <main@@Base+0x10090>
  414994:	mov    rax,QWORD PTR [rsp+0x30]
  414999:	mov    rcx,rax
  41499c:	shr    rcx,0x20
  4149a0:	mov    r15,QWORD PTR [rsp+0x20]
  4149a5:	je     4149bc <main@@Base+0x1007c>
  4149a7:	mov    ecx,0x7
  4149ac:	mov    rdi,r14
  4149af:	mov    rsi,rbp
  4149b2:	mov    rdx,r13
  4149b5:	call   41f940 <flatcc_json_parser_set_error@@Base>
  4149ba:	jmp    4149d0 <main@@Base+0x10090>
  4149bc:	mov    DWORD PTR [rsp+0x8],eax
  4149c0:	mov    rax,rbp
  4149c3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4149cd:	nop    DWORD PTR [rax]
  4149d0:	mov    rcx,QWORD PTR [rsp+0x10]
  4149d5:	cmp    rax,r13
  4149d8:	je     4149fd <main@@Base+0x100bd>
  4149da:	add    ebx,0x1
  4149dd:	mov    DWORD PTR [rsp+0xc],ebx
  4149e1:	mov    eax,DWORD PTR [rsp+0x8]
  4149e5:	add    DWORD PTR [r15],eax
  4149e8:	cmp    DWORD PTR [rsp+0x18],0x0
  4149ed:	mov    rbx,rbp
  4149f0:	mov    rax,QWORD PTR [rsp+0x28]
  4149f5:	jne    41490b <main@@Base+0xffcb>
  4149fb:	jmp    414a18 <main@@Base+0x100d8>
  4149fd:	mov    rbp,r13
  414a00:	jmp    414a18 <main@@Base+0x100d8>
  414a02:	mov    ecx,0x17
  414a07:	mov    rdi,r14
  414a0a:	mov    rsi,rbx
  414a0d:	mov    rdx,r13
  414a10:	call   41f940 <flatcc_json_parser_set_error@@Base>
  414a15:	mov    rbp,rax
  414a18:	mov    rax,rbp
  414a1b:	add    rsp,0x38
  414a1f:	pop    rbx
  414a20:	pop    r12
  414a22:	pop    r13
  414a24:	pop    r14
  414a26:	pop    r15
  414a28:	pop    rbp
  414a29:	ret    
  414a2a:	mov    DWORD PTR [r14+0x14],0x1
  414a32:	cmp    DWORD PTR [r14+0x14],0x0
  414a37:	jne    414877 <main@@Base+0xff37>
  414a3d:	jmp    4148a4 <main@@Base+0xff64>
  414a42:	mov    ecx,0xe
  414a47:	mov    rdi,r14
  414a4a:	mov    rsi,rbp
  414a4d:	jmp    414a0d <main@@Base+0x100cd>
  414a4f:	nop
  414a50:	push   rbp
  414a51:	push   r15
  414a53:	push   r14
  414a55:	push   r13
  414a57:	push   r12
  414a59:	push   rbx
  414a5a:	sub    rsp,0x38
  414a5e:	mov    r15,r8
  414a61:	mov    r13,rdx
  414a64:	mov    rbx,rsi
  414a67:	mov    r14,rdi
  414a6a:	mov    QWORD PTR [r8],0x0
  414a71:	cmp    rsi,rdx
  414a74:	je     414a90 <main@@Base+0x10150>
  414a76:	mov    al,BYTE PTR [rbx]
  414a78:	cmp    al,0x2e
  414a7a:	je     414aa1 <main@@Base+0x10161>
  414a7c:	cmp    al,0x22
  414a7e:	jne    414c0c <main@@Base+0x102cc>
  414a84:	add    rbx,0x1
  414a88:	mov    DWORD PTR [r14+0x14],0x0
  414a90:	cmp    DWORD PTR [r14+0x14],0x0
  414a95:	je     414ac4 <main@@Base+0x10184>
  414a97:	cmp    rbx,r13
  414a9a:	jne    414b03 <main@@Base+0x101c3>
  414a9c:	jmp    414bdf <main@@Base+0x1029f>
  414aa1:	mov    rbp,rcx
  414aa4:	mov    ecx,0x5
  414aa9:	mov    rdi,r14
  414aac:	mov    rsi,rbx
  414aaf:	mov    rdx,r13
  414ab2:	call   41f940 <flatcc_json_parser_set_error@@Base>
  414ab7:	mov    rcx,rbp
  414aba:	mov    rbx,rax
  414abd:	cmp    DWORD PTR [r14+0x14],0x0
  414ac2:	jne    414a97 <main@@Base+0x10157>
  414ac4:	mov    rbp,rcx
  414ac7:	mov    rax,r13
  414aca:	sub    rax,rbx
  414acd:	cmp    rax,0x2
  414ad1:	jl     414ae6 <main@@Base+0x101a6>
  414ad3:	cmp    BYTE PTR [rbx],0x20
  414ad6:	jg     414af7 <main@@Base+0x101b7>
  414ad8:	jne    414ae6 <main@@Base+0x101a6>
  414ada:	cmp    BYTE PTR [rbx+0x1],0x20
  414ade:	jle    414ae6 <main@@Base+0x101a6>
  414ae0:	add    rbx,0x1
  414ae4:	jmp    414af7 <main@@Base+0x101b7>
  414ae6:	mov    rdi,r14
  414ae9:	mov    rsi,rbx
  414aec:	mov    rdx,r13
  414aef:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  414af4:	mov    rbx,rax
  414af7:	mov    rcx,rbp
  414afa:	cmp    rbx,r13
  414afd:	je     414bdf <main@@Base+0x1029f>
  414b03:	lea    rax,[rcx+0x8]
  414b07:	xor    edx,edx
  414b09:	mov    QWORD PTR [rsp+0x20],rdx
  414b0e:	lea    r12,[rsp+0x8]
  414b13:	mov    DWORD PTR [rsp+0x4],0x0
  414b1b:	mov    QWORD PTR [rsp+0x18],r15
  414b20:	mov    QWORD PTR [rsp+0x10],rcx
  414b25:	mov    QWORD PTR [rsp+0x28],rax
  414b2a:	mov    rbp,QWORD PTR [rcx]
  414b2d:	mov    r15,rax
  414b30:	mov    rdi,r14
  414b33:	mov    rsi,rbx
  414b36:	mov    rdx,r13
  414b39:	lea    rcx,[rsp+0xc]
  414b3e:	lea    r8,[rsp+0x30]
  414b43:	mov    r9,r12
  414b46:	call   rbp
  414b48:	cmp    rax,r13
  414b4b:	je     414bdf <main@@Base+0x1029f>
  414b51:	mov    rbp,rax
  414b54:	cmp    rax,rbx
  414b57:	jne    414b70 <main@@Base+0x10230>
  414b59:	mov    rbp,QWORD PTR [r15]
  414b5c:	add    r15,0x8
  414b60:	test   rbp,rbp
  414b63:	jne    414b30 <main@@Base+0x101f0>
  414b65:	jmp    414be4 <main@@Base+0x102a4>
  414b67:	nop    WORD PTR [rax+rax*1+0x0]
  414b70:	mov    ebx,DWORD PTR [rsp+0x4]
  414b74:	test   ebx,ebx
  414b76:	je     414b83 <main@@Base+0x10243>
  414b78:	cmp    DWORD PTR [r14+0x14],0x0
  414b7d:	jne    414c24 <main@@Base+0x102e4>
  414b83:	cmp    DWORD PTR [rsp+0xc],0x0
  414b88:	je     414b9f <main@@Base+0x1025f>
  414b8a:	mov    ecx,0x8
  414b8f:	mov    rdi,r14
  414b92:	mov    rsi,rbp
  414b95:	mov    rdx,r13
  414b98:	call   41f940 <flatcc_json_parser_set_error@@Base>
  414b9d:	jmp    414bac <main@@Base+0x1026c>
  414b9f:	mov    rax,QWORD PTR [rsp+0x30]
  414ba4:	mov    QWORD PTR [rsp+0x20],rax
  414ba9:	mov    rax,rbp
  414bac:	mov    r15,QWORD PTR [rsp+0x18]
  414bb1:	mov    rcx,QWORD PTR [rsp+0x10]
  414bb6:	cmp    rax,r13
  414bb9:	je     414bdf <main@@Base+0x1029f>
  414bbb:	add    ebx,0x1
  414bbe:	mov    DWORD PTR [rsp+0x4],ebx
  414bc2:	mov    rax,QWORD PTR [rsp+0x20]
  414bc7:	add    QWORD PTR [r15],rax
  414bca:	cmp    DWORD PTR [rsp+0x8],0x0
  414bcf:	mov    rbx,rbp
  414bd2:	mov    rax,QWORD PTR [rsp+0x28]
  414bd7:	jne    414b2a <main@@Base+0x101ea>
  414bdd:	jmp    414bfa <main@@Base+0x102ba>
  414bdf:	mov    rbp,r13
  414be2:	jmp    414bfa <main@@Base+0x102ba>
  414be4:	mov    ecx,0x17
  414be9:	mov    rdi,r14
  414bec:	mov    rsi,rbx
  414bef:	mov    rdx,r13
  414bf2:	call   41f940 <flatcc_json_parser_set_error@@Base>
  414bf7:	mov    rbp,rax
  414bfa:	mov    rax,rbp
  414bfd:	add    rsp,0x38
  414c01:	pop    rbx
  414c02:	pop    r12
  414c04:	pop    r13
  414c06:	pop    r14
  414c08:	pop    r15
  414c0a:	pop    rbp
  414c0b:	ret    
  414c0c:	mov    DWORD PTR [r14+0x14],0x1
  414c14:	cmp    DWORD PTR [r14+0x14],0x0
  414c19:	jne    414a97 <main@@Base+0x10157>
  414c1f:	jmp    414ac4 <main@@Base+0x10184>
  414c24:	mov    ecx,0xe
  414c29:	mov    rdi,r14
  414c2c:	mov    rsi,rbp
  414c2f:	jmp    414bef <main@@Base+0x102af>
  414c31:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414c3b:	nop    DWORD PTR [rax+rax*1+0x0]
  414c40:	push   rbp
  414c41:	push   r15
  414c43:	push   r14
  414c45:	push   r13
  414c47:	push   r12
  414c49:	push   rbx
  414c4a:	sub    rsp,0x38
  414c4e:	mov    rbx,r8
  414c51:	mov    rbp,rcx
  414c54:	mov    r14,rdx
  414c57:	mov    r13,rsi
  414c5a:	mov    r15,rdi
  414c5d:	mov    QWORD PTR [r8],0x0
  414c64:	cmp    rsi,rdx
  414c67:	je     414c81 <main@@Base+0x10341>
  414c69:	mov    al,BYTE PTR [r13+0x0]
  414c6d:	cmp    al,0x2e
  414c6f:	je     414c92 <main@@Base+0x10352>
  414c71:	cmp    al,0x22
  414c73:	jne    414cb1 <main@@Base+0x10371>
  414c75:	add    r13,0x1
  414c79:	mov    DWORD PTR [r15+0x14],0x0
  414c81:	cmp    DWORD PTR [r15+0x14],0x0
  414c86:	je     414cc0 <main@@Base+0x10380>
  414c88:	cmp    r13,r14
  414c8b:	jne    414d04 <main@@Base+0x103c4>
  414c8d:	jmp    414dd2 <main@@Base+0x10492>
  414c92:	mov    ecx,0x5
  414c97:	mov    rdi,r15
  414c9a:	mov    rsi,r13
  414c9d:	mov    rdx,r14
  414ca0:	call   41f940 <flatcc_json_parser_set_error@@Base>
  414ca5:	mov    r13,rax
  414ca8:	cmp    DWORD PTR [r15+0x14],0x0
  414cad:	jne    414c88 <main@@Base+0x10348>
  414caf:	jmp    414cc0 <main@@Base+0x10380>
  414cb1:	mov    DWORD PTR [r15+0x14],0x1
  414cb9:	cmp    DWORD PTR [r15+0x14],0x0
  414cbe:	jne    414c88 <main@@Base+0x10348>
  414cc0:	mov    rax,r14
  414cc3:	sub    rax,r13
  414cc6:	cmp    rax,0x2
  414cca:	jl     414cea <main@@Base+0x103aa>
  414ccc:	cmp    BYTE PTR [r13+0x0],0x20
  414cd1:	jg     414c88 <main@@Base+0x10348>
  414cd3:	jne    414cea <main@@Base+0x103aa>
  414cd5:	cmp    BYTE PTR [r13+0x1],0x20
  414cda:	jle    414cea <main@@Base+0x103aa>
  414cdc:	add    r13,0x1
  414ce0:	cmp    r13,r14
  414ce3:	jne    414d04 <main@@Base+0x103c4>
  414ce5:	jmp    414dd2 <main@@Base+0x10492>
  414cea:	mov    rdi,r15
  414ced:	mov    rsi,r13
  414cf0:	mov    rdx,r14
  414cf3:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  414cf8:	mov    r13,rax
  414cfb:	cmp    r13,r14
  414cfe:	je     414dd2 <main@@Base+0x10492>
  414d04:	lea    rax,[rbp+0x8]
  414d08:	xor    ecx,ecx
  414d0a:	lea    r12,[rsp+0x10]
  414d0f:	mov    QWORD PTR [rsp+0x28],rbx
  414d14:	mov    QWORD PTR [rsp+0x20],rbp
  414d19:	mov    QWORD PTR [rsp+0x18],rax
  414d1e:	mov    DWORD PTR [rsp+0xc],ecx
  414d22:	mov    rbx,QWORD PTR [rbp+0x0]
  414d26:	mov    rbp,rax
  414d29:	nop    DWORD PTR [rax+0x0]
  414d30:	mov    rdi,r15
  414d33:	mov    rsi,r13
  414d36:	mov    rdx,r14
  414d39:	lea    rcx,[rsp+0x14]
  414d3e:	lea    r8,[rsp+0x30]
  414d43:	mov    r9,r12
  414d46:	call   rbx
  414d48:	cmp    rax,r14
  414d4b:	je     414dd2 <main@@Base+0x10492>
  414d51:	cmp    rax,r13
  414d54:	jne    414d70 <main@@Base+0x10430>
  414d56:	mov    rbx,QWORD PTR [rbp+0x0]
  414d5a:	add    rbp,0x8
  414d5e:	test   rbx,rbx
  414d61:	jne    414d30 <main@@Base+0x103f0>
  414d63:	jmp    414dd7 <main@@Base+0x10497>
  414d65:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414d6f:	nop
  414d70:	mov    r13,rax
  414d73:	mov    ecx,DWORD PTR [rsp+0xc]
  414d77:	test   ecx,ecx
  414d79:	je     414d82 <main@@Base+0x10442>
  414d7b:	cmp    DWORD PTR [r15+0x14],0x0
  414d80:	jne    414dff <main@@Base+0x104bf>
  414d82:	cmp    DWORD PTR [rsp+0x14],0x0
  414d87:	vmovsd xmm0,QWORD PTR [rsp+0x30]
  414d8d:	vunpcklps xmm0,xmm0,XMMWORD PTR [rip+0xfdeb]        # 424b80 <_IO_stdin_used@@Base+0xb80>
  414d95:	vsubpd xmm0,xmm0,XMMWORD PTR [rip+0xfdf3]        # 424b90 <_IO_stdin_used@@Base+0xb90>
  414d9d:	vhaddpd xmm0,xmm0,xmm0
  414da1:	mov    rax,QWORD PTR [rsp+0x18]
  414da6:	je     414db0 <main@@Base+0x10470>
  414da8:	vxorpd xmm0,xmm0,XMMWORD PTR [rip+0xfdf0]        # 424ba0 <_IO_stdin_used@@Base+0xba0>
  414db0:	add    ecx,0x1
  414db3:	mov    rbx,QWORD PTR [rsp+0x28]
  414db8:	vaddsd xmm0,xmm0,QWORD PTR [rbx]
  414dbc:	vmovsd QWORD PTR [rbx],xmm0
  414dc0:	cmp    DWORD PTR [rsp+0x10],0x0
  414dc5:	mov    rbp,QWORD PTR [rsp+0x20]
  414dca:	jne    414d1e <main@@Base+0x103de>
  414dd0:	jmp    414ded <main@@Base+0x104ad>
  414dd2:	mov    r13,r14
  414dd5:	jmp    414ded <main@@Base+0x104ad>
  414dd7:	mov    ecx,0x17
  414ddc:	mov    rdi,r15
  414ddf:	mov    rsi,r13
  414de2:	mov    rdx,r14
  414de5:	call   41f940 <flatcc_json_parser_set_error@@Base>
  414dea:	mov    r13,rax
  414ded:	mov    rax,r13
  414df0:	add    rsp,0x38
  414df4:	pop    rbx
  414df5:	pop    r12
  414df7:	pop    r13
  414df9:	pop    r14
  414dfb:	pop    r15
  414dfd:	pop    rbp
  414dfe:	ret    
  414dff:	mov    ecx,0xe
  414e04:	jmp    414ddc <main@@Base+0x1049c>
  414e06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414e10:	push   r15
  414e12:	push   r14
  414e14:	push   r12
  414e16:	push   rbx
  414e17:	push   rax
  414e18:	mov    r15,r8
  414e1b:	mov    r14,rcx
  414e1e:	mov    rbx,rsi
  414e21:	mov    rcx,rdx
  414e24:	sub    rcx,rsi
  414e27:	cmp    rcx,0x8
  414e2b:	jb     414e34 <main@@Base+0x104f4>
  414e2d:	movbe  rcx,QWORD PTR [rbx]
  414e32:	jmp    414eaf <main@@Base+0x1056f>
  414e34:	and    cl,0xf
  414e37:	add    cl,0xff
  414e3a:	cmp    cl,0x7
  414e3d:	ja     415061 <main@@Base+0x10721>
  414e43:	xor    eax,eax
  414e45:	movzx  ecx,cl
  414e48:	lea    rsi,[rip+0xf935]        # 424784 <_IO_stdin_used@@Base+0x784>
  414e4f:	movsxd rcx,DWORD PTR [rsi+rcx*4]
  414e53:	add    rcx,rsi
  414e56:	jmp    rcx
  414e58:	movsx  rax,BYTE PTR [rbx+0x7]
  414e5d:	movsx  rcx,BYTE PTR [rbx+0x6]
  414e62:	shl    rcx,0x8
  414e66:	or     rax,rcx
  414e69:	movsx  rcx,BYTE PTR [rbx+0x5]
  414e6e:	shl    rcx,0x10
  414e72:	or     rax,rcx
  414e75:	movsx  rcx,BYTE PTR [rbx+0x4]
  414e7a:	shl    rcx,0x18
  414e7e:	or     rax,rcx
  414e81:	movsx  rcx,BYTE PTR [rbx+0x3]
  414e86:	shl    rcx,0x20
  414e8a:	or     rax,rcx
  414e8d:	movsx  rcx,BYTE PTR [rbx+0x2]
  414e92:	shl    rcx,0x28
  414e96:	or     rax,rcx
  414e99:	movsx  rcx,BYTE PTR [rbx+0x1]
  414e9e:	shl    rcx,0x30
  414ea2:	or     rax,rcx
  414ea5:	movzx  ecx,BYTE PTR [rbx]
  414ea8:	shl    rcx,0x38
  414eac:	or     rcx,rax
  414eaf:	movabs rax,0x496e506172656e74
  414eb9:	cmp    rcx,rax
  414ebc:	jne    414ed8 <main@@Base+0x10598>
  414ebe:	lea    rax,[rbx+0x8]
  414ec2:	mov    rsi,rdx
  414ec5:	sub    rsi,rax
  414ec8:	cmp    rsi,0x8
  414ecc:	jb     414f09 <main@@Base+0x105c9>
  414ece:	movbe  rax,QWORD PTR [rax]
  414ed3:	jmp    414f88 <main@@Base+0x10648>
  414ed8:	shr    rcx,0x20
  414edc:	cmp    rcx,0x4e4f4e45
  414ee3:	jne    415061 <main@@Base+0x10721>
  414ee9:	mov    ecx,0x4
  414eee:	mov    rsi,rbx
  414ef1:	mov    r8,r9
  414ef4:	call   41fdc0 <flatcc_json_parser_match_constant@@Base>
  414ef9:	cmp    rax,rbx
  414efc:	je     415061 <main@@Base+0x10721>
  414f02:	xor    ecx,ecx
  414f04:	jmp    415054 <main@@Base+0x10714>
  414f09:	and    sil,0xf
  414f0d:	add    sil,0xff
  414f11:	cmp    sil,0x7
  414f15:	ja     415061 <main@@Base+0x10721>
  414f1b:	xor    ecx,ecx
  414f1d:	movzx  esi,sil
  414f21:	lea    r8,[rip+0xf87c]        # 4247a4 <_IO_stdin_used@@Base+0x7a4>
  414f28:	movsxd rsi,DWORD PTR [r8+rsi*4]
  414f2c:	add    rsi,r8
  414f2f:	jmp    rsi
  414f31:	movsx  rcx,BYTE PTR [rbx+0xf]
  414f36:	movsx  rsi,BYTE PTR [rbx+0xe]
  414f3b:	shl    rsi,0x8
  414f3f:	or     rcx,rsi
  414f42:	movsx  rsi,BYTE PTR [rbx+0xd]
  414f47:	shl    rsi,0x10
  414f4b:	or     rcx,rsi
  414f4e:	movsx  rsi,BYTE PTR [rbx+0xc]
  414f53:	shl    rsi,0x18
  414f57:	or     rcx,rsi
  414f5a:	movsx  rsi,BYTE PTR [rbx+0xb]
  414f5f:	shl    rsi,0x20
  414f63:	or     rcx,rsi
  414f66:	movsx  rsi,BYTE PTR [rbx+0xa]
  414f6b:	shl    rsi,0x28
  414f6f:	or     rcx,rsi
  414f72:	movsx  rsi,BYTE PTR [rbx+0x9]
  414f77:	shl    rsi,0x30
  414f7b:	or     rcx,rsi
  414f7e:	movzx  eax,BYTE PTR [rax]
  414f81:	shl    rax,0x38
  414f85:	or     rax,rcx
  414f88:	movabs rcx,0x4e616d6573706163
  414f92:	cmp    rax,rcx
  414f95:	jne    415061 <main@@Base+0x10721>
  414f9b:	lea    r12,[rbx+0x10]
  414f9f:	mov    rcx,rdx
  414fa2:	sub    rcx,r12
  414fa5:	cmp    rcx,0x8
  414fa9:	jb     414fb3 <main@@Base+0x10673>
  414fab:	movbe  rcx,QWORD PTR [r12]
  414fb1:	jmp    415030 <main@@Base+0x106f0>
  414fb3:	and    cl,0xf
  414fb6:	add    cl,0xff
  414fb9:	cmp    cl,0x7
  414fbc:	ja     415061 <main@@Base+0x10721>
  414fc2:	xor    eax,eax
  414fc4:	movzx  ecx,cl
  414fc7:	lea    rsi,[rip+0xf7f6]        # 4247c4 <_IO_stdin_used@@Base+0x7c4>
  414fce:	movsxd rcx,DWORD PTR [rsi+rcx*4]
  414fd2:	add    rcx,rsi
  414fd5:	jmp    rcx
  414fd7:	movsx  rax,BYTE PTR [rbx+0x17]
  414fdc:	movsx  rcx,BYTE PTR [rbx+0x16]
  414fe1:	shl    rcx,0x8
  414fe5:	or     rax,rcx
  414fe8:	movsx  rcx,BYTE PTR [rbx+0x15]
  414fed:	shl    rcx,0x10
  414ff1:	or     rax,rcx
  414ff4:	movsx  rcx,BYTE PTR [rbx+0x14]
  414ff9:	shl    rcx,0x18
  414ffd:	or     rax,rcx
  415000:	movsx  rcx,BYTE PTR [rbx+0x13]
  415005:	shl    rcx,0x20
  415009:	or     rax,rcx
  41500c:	movsx  rcx,BYTE PTR [rbx+0x12]
  415011:	shl    rcx,0x28
  415015:	or     rax,rcx
  415018:	movsx  rcx,BYTE PTR [rbx+0x11]
  41501d:	shl    rcx,0x30
  415021:	or     rax,rcx
  415024:	movzx  ecx,BYTE PTR [r12]
  415029:	shl    rcx,0x38
  41502d:	or     rcx,rax
  415030:	shr    rcx,0x38
  415034:	cmp    rcx,0x65
  415038:	jne    415061 <main@@Base+0x10721>
  41503a:	mov    ecx,0x1
  41503f:	mov    rsi,r12
  415042:	mov    r8,r9
  415045:	call   41fdc0 <flatcc_json_parser_match_constant@@Base>
  41504a:	cmp    rax,r12
  41504d:	je     415061 <main@@Base+0x10721>
  41504f:	mov    ecx,0x1
  415054:	mov    rbx,rax
  415057:	mov    QWORD PTR [r15],rcx
  41505a:	mov    DWORD PTR [r14],0x0
  415061:	mov    rax,rbx
  415064:	add    rsp,0x8
  415068:	pop    rbx
  415069:	pop    r12
  41506b:	pop    r14
  41506d:	pop    r15
  41506f:	ret    
  415070:	push   r15
  415072:	push   r14
  415074:	push   rbx
  415075:	mov    r15,r8
  415078:	mov    r14,rcx
  41507b:	mov    rbx,rsi
  41507e:	mov    rcx,rdx
  415081:	sub    rcx,rsi
  415084:	cmp    rcx,0x8
  415088:	jb     415091 <main@@Base+0x10751>
  41508a:	movbe  rcx,QWORD PTR [rbx]
  41508f:	jmp    41510c <main@@Base+0x107cc>
  415091:	and    cl,0xf
  415094:	add    cl,0xff
  415097:	cmp    cl,0x7
  41509a:	ja     4151cb <main@@Base+0x1088b>
  4150a0:	xor    eax,eax
  4150a2:	movzx  ecx,cl
  4150a5:	lea    rsi,[rip+0xf738]        # 4247e4 <_IO_stdin_used@@Base+0x7e4>
  4150ac:	movsxd rcx,DWORD PTR [rsi+rcx*4]
  4150b0:	add    rcx,rsi
  4150b3:	jmp    rcx
  4150b5:	movsx  rax,BYTE PTR [rbx+0x7]
  4150ba:	movsx  rcx,BYTE PTR [rbx+0x6]
  4150bf:	shl    rcx,0x8
  4150c3:	or     rax,rcx
  4150c6:	movsx  rcx,BYTE PTR [rbx+0x5]
  4150cb:	shl    rcx,0x10
  4150cf:	or     rax,rcx
  4150d2:	movsx  rcx,BYTE PTR [rbx+0x4]
  4150d7:	shl    rcx,0x18
  4150db:	or     rax,rcx
  4150de:	movsx  rcx,BYTE PTR [rbx+0x3]
  4150e3:	shl    rcx,0x20
  4150e7:	or     rax,rcx
  4150ea:	movsx  rcx,BYTE PTR [rbx+0x2]
  4150ef:	shl    rcx,0x28
  4150f3:	or     rax,rcx
  4150f6:	movsx  rcx,BYTE PTR [rbx+0x1]
  4150fb:	shl    rcx,0x30
  4150ff:	or     rax,rcx
  415102:	movzx  ecx,BYTE PTR [rbx]
  415105:	shl    rcx,0x38
  415109:	or     rcx,rax
  41510c:	mov    rax,rcx
  41510f:	shr    rax,0x21
  415113:	cmp    rax,0x3432bc18
  415119:	ja     41514e <main@@Base+0x1080e>
  41511b:	shr    rcx,0x20
  41511f:	cmp    rcx,0x68657831
  415126:	jne    4151cb <main@@Base+0x1088b>
  41512c:	mov    ecx,0x4
  415131:	mov    rsi,rbx
  415134:	mov    r8,r9
  415137:	call   41fdc0 <flatcc_json_parser_match_constant@@Base>
  41513c:	cmp    rax,rbx
  41513f:	je     4151cb <main@@Base+0x1088b>
  415145:	mov    QWORD PTR [r15],0x3
  41514c:	jmp    4151c1 <main@@Base+0x10881>
  41514e:	mov    rax,rcx
  415151:	shr    rax,0x10
  415155:	movabs rsi,0x6865786e6567
  41515f:	cmp    rax,rsi
  415162:	jne    415189 <main@@Base+0x10849>
  415164:	mov    ecx,0x6
  415169:	mov    rsi,rbx
  41516c:	mov    r8,r9
  41516f:	call   41fdc0 <flatcc_json_parser_match_constant@@Base>
  415174:	cmp    rax,rbx
  415177:	je     4151cb <main@@Base+0x1088b>
  415179:	mov    QWORD PTR [r15],0xfffffffffffffffe
  415180:	mov    DWORD PTR [r14],0x1
  415187:	jmp    4151c8 <main@@Base+0x10888>
  415189:	movabs rax,0x6865783200000000
  415193:	movabs rsi,0xffffffff00000000
  41519d:	and    rcx,rsi
  4151a0:	cmp    rcx,rax
  4151a3:	jne    4151cb <main@@Base+0x1088b>
  4151a5:	mov    ecx,0x4
  4151aa:	mov    rsi,rbx
  4151ad:	mov    r8,r9
  4151b0:	call   41fdc0 <flatcc_json_parser_match_constant@@Base>
  4151b5:	cmp    rax,rbx
  4151b8:	je     4151cb <main@@Base+0x1088b>
  4151ba:	mov    QWORD PTR [r15],0x7eafbeaf
  4151c1:	mov    DWORD PTR [r14],0x0
  4151c8:	mov    rbx,rax
  4151cb:	mov    rax,rbx
  4151ce:	pop    rbx
  4151cf:	pop    r14
  4151d1:	pop    r15
  4151d3:	ret    
  4151d4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4151de:	xchg   ax,ax
  4151e0:	push   r15
  4151e2:	push   r14
  4151e4:	push   rbx
  4151e5:	mov    r15,r8
  4151e8:	mov    r14,rcx
  4151eb:	mov    rbx,rsi
  4151ee:	mov    rcx,rdx
  4151f1:	sub    rcx,rsi
  4151f4:	cmp    rcx,0x8
  4151f8:	jb     415201 <main@@Base+0x108c1>
  4151fa:	movbe  rcx,QWORD PTR [rbx]
  4151ff:	jmp    41527c <main@@Base+0x1093c>
  415201:	and    cl,0xf
  415204:	add    cl,0xff
  415207:	cmp    cl,0x7
  41520a:	ja     415382 <main@@Base+0x10a42>
  415210:	xor    eax,eax
  415212:	movzx  ecx,cl
  415215:	lea    rsi,[rip+0xf5e8]        # 424804 <_IO_stdin_used@@Base+0x804>
  41521c:	movsxd rcx,DWORD PTR [rsi+rcx*4]
  415220:	add    rcx,rsi
  415223:	jmp    rcx
  415225:	movsx  rax,BYTE PTR [rbx+0x7]
  41522a:	movsx  rcx,BYTE PTR [rbx+0x6]
  41522f:	shl    rcx,0x8
  415233:	or     rax,rcx
  415236:	movsx  rcx,BYTE PTR [rbx+0x5]
  41523b:	shl    rcx,0x10
  41523f:	or     rax,rcx
  415242:	movsx  rcx,BYTE PTR [rbx+0x4]
  415247:	shl    rcx,0x18
  41524b:	or     rax,rcx
  41524e:	movsx  rcx,BYTE PTR [rbx+0x3]
  415253:	shl    rcx,0x20
  415257:	or     rax,rcx
  41525a:	movsx  rcx,BYTE PTR [rbx+0x2]
  41525f:	shl    rcx,0x28
  415263:	or     rax,rcx
  415266:	movsx  rcx,BYTE PTR [rbx+0x1]
  41526b:	shl    rcx,0x30
  41526f:	or     rax,rcx
  415272:	movzx  ecx,BYTE PTR [rbx]
  415275:	shl    rcx,0x38
  415279:	or     rcx,rax
  41527c:	mov    rax,rcx
  41527f:	shr    rax,0x21
  415283:	cmp    rax,0x34b73a18
  415289:	ja     4152c8 <main@@Base+0x10988>
  41528b:	shr    rcx,0x20
  41528f:	cmp    rcx,0x696e7431
  415296:	jne    415382 <main@@Base+0x10a42>
  41529c:	mov    ecx,0x4
  4152a1:	mov    rsi,rbx
  4152a4:	mov    r8,r9
  4152a7:	call   41fdc0 <flatcc_json_parser_match_constant@@Base>
  4152ac:	cmp    rax,rbx
  4152af:	je     415382 <main@@Base+0x10a42>
  4152b5:	mov    QWORD PTR [r15],0x2
  4152bc:	mov    DWORD PTR [r14],0x0
  4152c3:	jmp    41537f <main@@Base+0x10a3f>
  4152c8:	movabs r8,0x696e746e65670000
  4152d2:	cmp    rcx,r8
  4152d5:	jae    41531c <main@@Base+0x109dc>
  4152d7:	movabs rax,0x696e743200000000
  4152e1:	movabs rsi,0xffffffff00000000
  4152eb:	and    rcx,rsi
  4152ee:	cmp    rcx,rax
  4152f1:	jne    415382 <main@@Base+0x10a42>
  4152f7:	mov    ecx,0x4
  4152fc:	mov    rsi,rbx
  4152ff:	mov    r8,r9
  415302:	call   41fdc0 <flatcc_json_parser_match_constant@@Base>
  415307:	cmp    rax,rbx
  41530a:	je     415382 <main@@Base+0x10a42>
  41530c:	mov    QWORD PTR [r15],0x2a
  415313:	mov    DWORD PTR [r14],0x0
  41531a:	jmp    41537f <main@@Base+0x10a3f>
  41531c:	mov    rsi,rcx
  41531f:	and    rsi,0xffffffffffffff00
  415326:	lea    rax,[r8+0x3200]
  41532d:	cmp    rsi,rax
  415330:	jne    415350 <main@@Base+0x10a10>
  415332:	mov    ecx,0x7
  415337:	mov    rsi,rbx
  41533a:	mov    r8,r9
  41533d:	call   41fdc0 <flatcc_json_parser_match_constant@@Base>
  415342:	cmp    rax,rbx
  415345:	je     415382 <main@@Base+0x10a42>
  415347:	mov    QWORD PTR [r15],0xffffffffffffffff
  41534e:	jmp    415378 <main@@Base+0x10a38>
  415350:	and    rcx,0xffffffffffff0000
  415357:	cmp    rcx,r8
  41535a:	jne    415382 <main@@Base+0x10a42>
  41535c:	mov    ecx,0x6
  415361:	mov    rsi,rbx
  415364:	mov    r8,r9
  415367:	call   41fdc0 <flatcc_json_parser_match_constant@@Base>
  41536c:	cmp    rax,rbx
  41536f:	je     415382 <main@@Base+0x10a42>
  415371:	mov    QWORD PTR [r15],0xfffffffffffffffe
  415378:	mov    DWORD PTR [r14],0x1
  41537f:	mov    rbx,rax
  415382:	mov    rax,rbx
  415385:	pop    rbx
  415386:	pop    r14
  415388:	pop    r15
  41538a:	ret    
  41538b:	nop    DWORD PTR [rax+rax*1+0x0]
  415390:	push   r15
  415392:	push   r14
  415394:	push   rbx
  415395:	mov    r15,r8
  415398:	mov    r14,rcx
  41539b:	mov    rbx,rsi
  41539e:	mov    rcx,rdx
  4153a1:	sub    rcx,rsi
  4153a4:	cmp    rcx,0x8
  4153a8:	jb     4153b1 <main@@Base+0x10a71>
  4153aa:	movbe  rcx,QWORD PTR [rbx]
  4153af:	jmp    41542c <main@@Base+0x10aec>
  4153b1:	and    cl,0xf
  4153b4:	add    cl,0xff
  4153b7:	cmp    cl,0x7
  4153ba:	ja     4154dc <main@@Base+0x10b9c>
  4153c0:	xor    eax,eax
  4153c2:	movzx  ecx,cl
  4153c5:	lea    rsi,[rip+0xf458]        # 424824 <_IO_stdin_used@@Base+0x824>
  4153cc:	movsxd rcx,DWORD PTR [rsi+rcx*4]
  4153d0:	add    rcx,rsi
  4153d3:	jmp    rcx
  4153d5:	movsx  rax,BYTE PTR [rbx+0x7]
  4153da:	movsx  rcx,BYTE PTR [rbx+0x6]
  4153df:	shl    rcx,0x8
  4153e3:	or     rax,rcx
  4153e6:	movsx  rcx,BYTE PTR [rbx+0x5]
  4153eb:	shl    rcx,0x10
  4153ef:	or     rax,rcx
  4153f2:	movsx  rcx,BYTE PTR [rbx+0x4]
  4153f7:	shl    rcx,0x18
  4153fb:	or     rax,rcx
  4153fe:	movsx  rcx,BYTE PTR [rbx+0x3]
  415403:	shl    rcx,0x20
  415407:	or     rax,rcx
  41540a:	movsx  rcx,BYTE PTR [rbx+0x2]
  41540f:	shl    rcx,0x28
  415413:	or     rax,rcx
  415416:	movsx  rcx,BYTE PTR [rbx+0x1]
  41541b:	shl    rcx,0x30
  41541f:	or     rax,rcx
  415422:	movzx  ecx,BYTE PTR [rbx]
  415425:	shl    rcx,0x38
  415429:	or     rcx,rax
  41542c:	mov    rsi,rcx
  41542f:	shr    rsi,0x21
  415433:	movabs rax,0xffffffff00000000
  41543d:	and    rax,rcx
  415440:	cmp    rsi,0x3732b398
  415447:	ja     41547a <main@@Base+0x10b3a>
  415449:	movabs rcx,0x6e65673100000000
  415453:	cmp    rax,rcx
  415456:	jne    4154dc <main@@Base+0x10b9c>
  41545c:	mov    ecx,0x4
  415461:	mov    rsi,rbx
  415464:	mov    r8,r9
  415467:	call   41fdc0 <flatcc_json_parser_match_constant@@Base>
  41546c:	cmp    rax,rbx
  41546f:	je     4154dc <main@@Base+0x10b9c>
  415471:	mov    QWORD PTR [r15],0xfffffffffffffff4
  415478:	jmp    4154d2 <main@@Base+0x10b92>
  41547a:	movabs rcx,0x6e65673200000000
  415484:	cmp    rax,rcx
  415487:	je     4154b6 <main@@Base+0x10b76>
  415489:	movabs rcx,0x6e65673300000000
  415493:	cmp    rax,rcx
  415496:	jne    4154dc <main@@Base+0x10b9c>
  415498:	mov    ecx,0x4
  41549d:	mov    rsi,rbx
  4154a0:	mov    r8,r9
  4154a3:	call   41fdc0 <flatcc_json_parser_match_constant@@Base>
  4154a8:	cmp    rax,rbx
  4154ab:	je     4154dc <main@@Base+0x10b9c>
  4154ad:	mov    QWORD PTR [r15],0xfffffffffffffff6
  4154b4:	jmp    4154d2 <main@@Base+0x10b92>
  4154b6:	mov    ecx,0x4
  4154bb:	mov    rsi,rbx
  4154be:	mov    r8,r9
  4154c1:	call   41fdc0 <flatcc_json_parser_match_constant@@Base>
  4154c6:	cmp    rax,rbx
  4154c9:	je     4154dc <main@@Base+0x10b9c>
  4154cb:	mov    QWORD PTR [r15],0xfffffffffffffff5
  4154d2:	mov    DWORD PTR [r14],0x1
  4154d9:	mov    rbx,rax
  4154dc:	mov    rax,rbx
  4154df:	pop    rbx
  4154e0:	pop    r14
  4154e2:	pop    r15
  4154e4:	ret    
  4154e5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4154ef:	nop
  4154f0:	push   r15
  4154f2:	push   r14
  4154f4:	push   rbx
  4154f5:	mov    r15,r8
  4154f8:	mov    r14,rcx
  4154fb:	mov    rbx,rsi
  4154fe:	mov    rcx,rdx
  415501:	sub    rcx,rsi
  415504:	cmp    rcx,0x8
  415508:	jb     415511 <main@@Base+0x10bd1>
  41550a:	movbe  rcx,QWORD PTR [rbx]
  41550f:	jmp    41558c <main@@Base+0x10c4c>
  415511:	and    cl,0xf
  415514:	add    cl,0xff
  415517:	cmp    cl,0x7
  41551a:	ja     415742 <main@@Base+0x10e02>
  415520:	xor    eax,eax
  415522:	movzx  ecx,cl
  415525:	lea    rsi,[rip+0xf318]        # 424844 <_IO_stdin_used@@Base+0x844>
  41552c:	movsxd rcx,DWORD PTR [rsi+rcx*4]
  415530:	add    rcx,rsi
  415533:	jmp    rcx
  415535:	movsx  rax,BYTE PTR [rbx+0x7]
  41553a:	movsx  rcx,BYTE PTR [rbx+0x6]
  41553f:	shl    rcx,0x8
  415543:	or     rax,rcx
  415546:	movsx  rcx,BYTE PTR [rbx+0x5]
  41554b:	shl    rcx,0x10
  41554f:	or     rax,rcx
  415552:	movsx  rcx,BYTE PTR [rbx+0x4]
  415557:	shl    rcx,0x18
  41555b:	or     rax,rcx
  41555e:	movsx  rcx,BYTE PTR [rbx+0x3]
  415563:	shl    rcx,0x20
  415567:	or     rax,rcx
  41556a:	movsx  rcx,BYTE PTR [rbx+0x2]
  41556f:	shl    rcx,0x28
  415573:	or     rax,rcx
  415576:	movsx  rcx,BYTE PTR [rbx+0x1]
  41557b:	shl    rcx,0x30
  41557f:	or     rax,rcx
  415582:	movzx  ecx,BYTE PTR [rbx]
  415585:	shl    rcx,0x38
  415589:	or     rcx,rax
  41558c:	mov    rax,rcx
  41558f:	shr    rax,0x20
  415593:	cmp    rax,0x4e4f4e44
  415599:	ja     4155f0 <main@@Base+0x10cb0>
  41559b:	movabs r8,0x426f6f6b46616e00
  4155a5:	mov    rsi,rcx
  4155a8:	and    rsi,0xffffffffff000000
  4155af:	cmp    rcx,r8
  4155b2:	jae    415644 <main@@Base+0x10d04>
  4155b8:	movabs rax,0x42656c6c65000000
  4155c2:	cmp    rsi,rax
  4155c5:	jne    415742 <main@@Base+0x10e02>
  4155cb:	mov    ecx,0x5
  4155d0:	mov    rsi,rbx
  4155d3:	mov    r8,r9
  4155d6:	call   41fdc0 <flatcc_json_parser_match_constant@@Base>
  4155db:	cmp    rax,rbx
  4155de:	je     415742 <main@@Base+0x10e02>
  4155e4:	mov    QWORD PTR [r15],0x9
  4155eb:	jmp    415738 <main@@Base+0x10df8>
  4155f0:	movabs rax,0x4f74686572000000
  4155fa:	cmp    rcx,rax
  4155fd:	jae    415678 <main@@Base+0x10d38>
  4155ff:	movabs rax,0x4e4f4e4500000000
  415609:	movabs rsi,0xffffffff00000000
  415613:	and    rcx,rsi
  415616:	cmp    rcx,rax
  415619:	jne    415742 <main@@Base+0x10e02>
  41561f:	mov    ecx,0x4
  415624:	mov    rsi,rbx
  415627:	mov    r8,r9
  41562a:	call   41fdc0 <flatcc_json_parser_match_constant@@Base>
  41562f:	cmp    rax,rbx
  415632:	je     415742 <main@@Base+0x10e02>
  415638:	mov    QWORD PTR [r15],0x0
  41563f:	jmp    415738 <main@@Base+0x10df8>
  415644:	movabs rax,0x4d754c616e000000
  41564e:	cmp    rsi,rax
  415651:	jne    4156b9 <main@@Base+0x10d79>
  415653:	mov    ecx,0x5
  415658:	mov    rsi,rbx
  41565b:	mov    r8,r9
  41565e:	call   41fdc0 <flatcc_json_parser_match_constant@@Base>
  415663:	cmp    rax,rbx
  415666:	je     415742 <main@@Base+0x10e02>
  41566c:	mov    QWORD PTR [r15],0x2
  415673:	jmp    415738 <main@@Base+0x10df8>
  415678:	movabs r8,0x526170756e7a656c
  415682:	cmp    rcx,r8
  415685:	jae    4156e3 <main@@Base+0x10da3>
  415687:	and    rcx,0xffffffffff000000
  41568e:	cmp    rcx,rax
  415691:	jne    415742 <main@@Base+0x10e02>
  415697:	mov    ecx,0x5
  41569c:	mov    rsi,rbx
  41569f:	mov    r8,r9
  4156a2:	call   41fdc0 <flatcc_json_parser_match_constant@@Base>
  4156a7:	cmp    rax,rbx
  4156aa:	je     415742 <main@@Base+0x10e02>
  4156b0:	mov    QWORD PTR [r15],0xb
  4156b7:	jmp    415738 <main@@Base+0x10df8>
  4156b9:	and    rcx,0xffffffffffffff00
  4156c0:	cmp    rcx,r8
  4156c3:	jne    415742 <main@@Base+0x10e02>
  4156c5:	mov    ecx,0x7
  4156ca:	mov    rsi,rbx
  4156cd:	mov    r8,r9
  4156d0:	call   41fdc0 <flatcc_json_parser_match_constant@@Base>
  4156d5:	cmp    rax,rbx
  4156d8:	je     415742 <main@@Base+0x10e02>
  4156da:	mov    QWORD PTR [r15],0xa
  4156e1:	jmp    415738 <main@@Base+0x10df8>
  4156e3:	mov    rax,rcx
  4156e6:	shr    rax,0x10
  4156ea:	movabs rsi,0x556e75736564
  4156f4:	cmp    rax,rsi
  4156f7:	jne    415717 <main@@Base+0x10dd7>
  4156f9:	mov    ecx,0x6
  4156fe:	mov    rsi,rbx
  415701:	mov    r8,r9
  415704:	call   41fdc0 <flatcc_json_parser_match_constant@@Base>
  415709:	cmp    rax,rbx
  41570c:	je     415742 <main@@Base+0x10e02>
  41570e:	mov    QWORD PTR [r15],0xff
  415715:	jmp    415738 <main@@Base+0x10df8>
  415717:	cmp    rcx,r8
  41571a:	jne    415742 <main@@Base+0x10e02>
  41571c:	mov    ecx,0x8
  415721:	mov    rsi,rbx
  415724:	mov    r8,r9
  415727:	call   41fdc0 <flatcc_json_parser_match_constant@@Base>
  41572c:	cmp    rax,rbx
  41572f:	je     415742 <main@@Base+0x10e02>
  415731:	mov    QWORD PTR [r15],0x8
  415738:	mov    DWORD PTR [r14],0x0
  41573f:	mov    rbx,rax
  415742:	mov    rax,rbx
  415745:	pop    rbx
  415746:	pop    r14
  415748:	pop    r15
  41574a:	ret    
  41574b:	nop    DWORD PTR [rax+rax*1+0x0]
  415750:	xor    eax,eax
  415752:	cmp    dil,0x5
  415756:	setb   al
  415759:	ret    
  41575a:	nop    WORD PTR [rax+rax*1+0x0]
  415760:	push   rbp
  415761:	push   r15
  415763:	push   r14
  415765:	push   r13
  415767:	push   r12
  415769:	push   rbx
  41576a:	sub    rsp,0x48
  41576e:	mov    r13,rcx
  415771:	mov    r14,rdx
  415774:	mov    rbx,rsi
  415777:	mov    r15,rdi
  41577a:	mov    DWORD PTR [rcx],0x0
  415780:	mov    rdi,QWORD PTR [rdi]
  415783:	mov    esi,0x3
  415788:	call   41c500 <flatcc_builder_start_table@@Base>
  41578d:	test   eax,eax
  41578f:	jne    418a48 <main@@Base+0x14108>
  415795:	cmp    rbx,r14
  415798:	je     4157c5 <main@@Base+0x10e85>
  41579a:	cmp    BYTE PTR [rbx],0x7b
  41579d:	jne    4157c5 <main@@Base+0x10e85>
  41579f:	lea    rax,[rbx+0x1]
  4157a3:	mov    rcx,r14
  4157a6:	sub    rcx,rax
  4157a9:	cmp    rcx,0x2
  4157ad:	jl     4157ed <main@@Base+0x10ead>
  4157af:	cmp    BYTE PTR [rax],0x20
  4157b2:	jg     4157fb <main@@Base+0x10ebb>
  4157b4:	jne    4157ed <main@@Base+0x10ead>
  4157b6:	cmp    BYTE PTR [rbx+0x2],0x20
  4157ba:	jle    4157ed <main@@Base+0x10ead>
  4157bc:	add    rbx,0x2
  4157c0:	mov    rax,rbx
  4157c3:	jmp    4157fb <main@@Base+0x10ebb>
  4157c5:	mov    ecx,0x15
  4157ca:	mov    rdi,r15
  4157cd:	mov    rsi,rbx
  4157d0:	mov    rdx,r14
  4157d3:	call   41f940 <flatcc_json_parser_set_error@@Base>
  4157d8:	mov    rbx,rax
  4157db:	lea    rax,[r15+0x20]
  4157df:	cmp    DWORD PTR [rax],0x0
  4157e2:	jne    418a48 <main@@Base+0x14108>
  4157e8:	jmp    418a38 <main@@Base+0x140f8>
  4157ed:	mov    rdi,r15
  4157f0:	mov    rsi,rax
  4157f3:	mov    rdx,r14
  4157f6:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  4157fb:	mov    rsi,r14
  4157fe:	cmp    rax,r14
  415801:	je     41583a <main@@Base+0x10efa>
  415803:	cmp    BYTE PTR [rax],0x7d
  415806:	jne    415837 <main@@Base+0x10ef7>
  415808:	lea    rbx,[rax+0x1]
  41580c:	mov    rcx,r14
  41580f:	sub    rcx,rbx
  415812:	cmp    rcx,0x2
  415816:	jl     418990 <main@@Base+0x14050>
  41581c:	cmp    BYTE PTR [rbx],0x20
  41581f:	jg     4157db <main@@Base+0x10e9b>
  415821:	jne    418990 <main@@Base+0x14050>
  415827:	cmp    BYTE PTR [rax+0x2],0x20
  41582b:	jle    418990 <main@@Base+0x14050>
  415831:	add    rax,0x2
  415835:	jmp    4157d8 <main@@Base+0x10e98>
  415837:	mov    rsi,rax
  41583a:	lea    rax,[r15+0x14]
  41583e:	mov    QWORD PTR [rsp+0x20],rax
  415843:	lea    rax,[r15+0x20]
  415847:	mov    QWORD PTR [rsp+0x28],rax
  41584c:	movabs rbx,0x625f73746172745f
  415856:	mov    QWORD PTR [rsp+0x10],r15
  41585b:	mov    QWORD PTR [rsp+0x18],r13
  415860:	mov    r12,r14
  415863:	cmp    rsi,r14
  415866:	je     4158a6 <main@@Base+0x10f66>
  415868:	mov    al,BYTE PTR [rsi]
  41586a:	cmp    al,0x2e
  41586c:	je     415883 <main@@Base+0x10f43>
  41586e:	cmp    al,0x22
  415870:	jne    415898 <main@@Base+0x10f58>
  415872:	add    rsi,0x1
  415876:	mov    rax,QWORD PTR [rsp+0x20]
  41587b:	mov    DWORD PTR [rax],0x0
  415881:	jmp    4158a3 <main@@Base+0x10f63>
  415883:	mov    ecx,0x5
  415888:	mov    rdi,r15
  41588b:	mov    rdx,r14
  41588e:	call   41f940 <flatcc_json_parser_set_error@@Base>
  415893:	mov    r12,rax
  415896:	jmp    4158a6 <main@@Base+0x10f66>
  415898:	mov    rax,QWORD PTR [rsp+0x20]
  41589d:	mov    DWORD PTR [rax],0x1
  4158a3:	mov    r12,rsi
  4158a6:	mov    rax,r14
  4158a9:	sub    rax,r12
  4158ac:	cmp    rax,0x8
  4158b0:	jb     4158c0 <main@@Base+0x10f80>
  4158b2:	movbe  rax,QWORD PTR [r12]
  4158b8:	jmp    415958 <main@@Base+0x11018>
  4158bd:	nop    DWORD PTR [rax]
  4158c0:	and    al,0xf
  4158c2:	add    al,0xff
  4158c4:	cmp    al,0x7
  4158c6:	ja     415990 <main@@Base+0x11050>
  4158cc:	movzx  eax,al
  4158cf:	lea    rcx,[rip+0xef8e]        # 424864 <_IO_stdin_used@@Base+0x864>
  4158d6:	movsxd rsi,DWORD PTR [rcx+rax*4]
  4158da:	add    rsi,rcx
  4158dd:	xor    r8d,r8d
  4158e0:	xor    eax,eax
  4158e2:	xor    ecx,ecx
  4158e4:	xor    edx,edx
  4158e6:	xor    edi,edi
  4158e8:	xor    ebp,ebp
  4158ea:	xor    ebx,ebx
  4158ec:	jmp    rsi
  4158ee:	movsx  r8,BYTE PTR [r12+0x7]
  4158f4:	movsx  rax,BYTE PTR [r12+0x6]
  4158fa:	shl    rax,0x8
  4158fe:	or     rax,r8
  415901:	movsx  rcx,BYTE PTR [r12+0x5]
  415907:	shl    rcx,0x10
  41590b:	or     rcx,rax
  41590e:	movsx  rdx,BYTE PTR [r12+0x4]
  415914:	shl    rdx,0x18
  415918:	or     rdx,rcx
  41591b:	movsx  rdi,BYTE PTR [r12+0x3]
  415921:	shl    rdi,0x20
  415925:	or     rdi,rdx
  415928:	movsx  rbp,BYTE PTR [r12+0x2]
  41592e:	shl    rbp,0x28
  415932:	or     rbp,rdi
  415935:	movsx  rbx,BYTE PTR [r12+0x1]
  41593b:	shl    rbx,0x30
  41593f:	or     rbx,rbp
  415942:	movzx  eax,BYTE PTR [r12]
  415947:	shl    rax,0x38
  41594b:	or     rax,rbx
  41594e:	movabs rbx,0x625f73746172745f
  415958:	movabs rcx,0x746573746a736f6e
  415962:	cmp    rax,rcx
  415965:	jne    415990 <main@@Base+0x11050>
  415967:	lea    rsi,[r12+0x8]
  41596c:	mov    rax,r14
  41596f:	sub    rax,rsi
  415972:	cmp    rax,0x8
  415976:	jb     41599b <main@@Base+0x1105b>
  415978:	movbe  rax,QWORD PTR [rsi]
  41597d:	jmp    415a32 <main@@Base+0x110f2>
  415982:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41598c:	nop    DWORD PTR [rax+0x0]
  415990:	mov    rdi,r15
  415993:	mov    rsi,r12
  415996:	jmp    415a64 <main@@Base+0x11124>
  41599b:	and    al,0xf
  41599d:	add    al,0xff
  41599f:	cmp    al,0x7
  4159a1:	ja     415a61 <main@@Base+0x11121>
  4159a7:	movzx  eax,al
  4159aa:	lea    rcx,[rip+0xeed3]        # 424884 <_IO_stdin_used@@Base+0x884>
  4159b1:	movsxd rax,DWORD PTR [rcx+rax*4]
  4159b5:	add    rax,rcx
  4159b8:	xor    r8d,r8d
  4159bb:	xor    r9d,r9d
  4159be:	xor    ecx,ecx
  4159c0:	xor    edx,edx
  4159c2:	xor    ebp,ebp
  4159c4:	xor    ebx,ebx
  4159c6:	xor    edi,edi
  4159c8:	jmp    rax
  4159ca:	movsx  r8,BYTE PTR [r12+0xf]
  4159d0:	movsx  r9,BYTE PTR [r12+0xe]
  4159d6:	shl    r9,0x8
  4159da:	or     r9,r8
  4159dd:	movsx  rcx,BYTE PTR [r12+0xd]
  4159e3:	shl    rcx,0x10
  4159e7:	or     rcx,r9
  4159ea:	movsx  rdx,BYTE PTR [r12+0xc]
  4159f0:	shl    rdx,0x18
  4159f4:	or     rdx,rcx
  4159f7:	movsx  rbp,BYTE PTR [r12+0xb]
  4159fd:	shl    rbp,0x20
  415a01:	or     rbp,rdx
  415a04:	movsx  rbx,BYTE PTR [r12+0xa]
  415a0a:	shl    rbx,0x28
  415a0e:	or     rbx,rbp
  415a11:	movsx  rdi,BYTE PTR [r12+0x9]
  415a17:	shl    rdi,0x30
  415a1b:	or     rdi,rbx
  415a1e:	movzx  eax,BYTE PTR [rsi]
  415a21:	shl    rax,0x38
  415a25:	or     rax,rdi
  415a28:	movabs rbx,0x625f73746172745f
  415a32:	movabs rcx,0x7072656669787061
  415a3c:	cmp    rax,rcx
  415a3f:	jne    415a61 <main@@Base+0x11121>
  415a41:	lea    r13,[r12+0x10]
  415a46:	mov    r15,r14
  415a49:	sub    r15,r13
  415a4c:	cmp    r15,0x8
  415a50:	jb     415b28 <main@@Base+0x111e8>
  415a56:	movbe  rax,QWORD PTR [r13+0x0]
  415a5c:	jmp    415bc3 <main@@Base+0x11283>
  415a61:	mov    rdi,r15
  415a64:	mov    rdx,r14
  415a67:	call   41ff40 <flatcc_json_parser_unmatched_symbol@@Base>
  415a6c:	mov    rbp,rax
  415a6f:	mov    rax,r14
  415a72:	sub    rax,rbp
  415a75:	cmp    rax,0x2
  415a79:	jl     415aa0 <main@@Base+0x11160>
  415a7b:	cmp    BYTE PTR [rbp+0x0],0x20
  415a7f:	jg     415ab1 <main@@Base+0x11171>
  415a81:	jne    415aa0 <main@@Base+0x11160>
  415a83:	cmp    BYTE PTR [rbp+0x1],0x20
  415a87:	jle    415aa0 <main@@Base+0x11160>
  415a89:	add    rbp,0x1
  415a8d:	cmp    rbp,r14
  415a90:	jne    415aba <main@@Base+0x1117a>
  415a92:	jmp    4189a3 <main@@Base+0x14063>
  415a97:	nop    WORD PTR [rax+rax*1+0x0]
  415aa0:	mov    rdi,r15
  415aa3:	mov    rsi,rbp
  415aa6:	mov    rdx,r14
  415aa9:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  415aae:	mov    rbp,rax
  415ab1:	cmp    rbp,r14
  415ab4:	je     4189a3 <main@@Base+0x14063>
  415aba:	mov    al,BYTE PTR [rbp+0x0]
  415abd:	cmp    al,0x2c
  415abf:	jne    4189ab <main@@Base+0x1406b>
  415ac5:	lea    rsi,[rbp+0x1]
  415ac9:	mov    rax,r14
  415acc:	sub    rax,rsi
  415acf:	cmp    rax,0x2
  415ad3:	jl     415b10 <main@@Base+0x111d0>
  415ad5:	cmp    BYTE PTR [rsi],0x20
  415ad8:	jg     415b1e <main@@Base+0x111de>
  415ada:	jne    415b10 <main@@Base+0x111d0>
  415adc:	cmp    BYTE PTR [rbp+0x2],0x20
  415ae0:	jle    415b10 <main@@Base+0x111d0>
  415ae2:	add    rbp,0x2
  415ae6:	mov    rsi,rbp
  415ae9:	cmp    rsi,r14
  415aec:	je     4189d5 <main@@Base+0x14095>
  415af2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415afc:	nop    DWORD PTR [rax+0x0]
  415b00:	cmp    BYTE PTR [rsi],0x7d
  415b03:	jne    415860 <main@@Base+0x10f20>
  415b09:	jmp    4189e2 <main@@Base+0x140a2>
  415b0e:	xchg   ax,ax
  415b10:	mov    rdi,r15
  415b13:	mov    rdx,r14
  415b16:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  415b1b:	mov    rsi,rax
  415b1e:	cmp    rsi,r14
  415b21:	jne    415b00 <main@@Base+0x111c0>
  415b23:	jmp    4189d5 <main@@Base+0x14095>
  415b28:	mov    eax,r15d
  415b2b:	and    al,0xf
  415b2d:	add    al,0xff
  415b2f:	cmp    al,0x7
  415b31:	ja     415f56 <main@@Base+0x11616>
  415b37:	movzx  eax,al
  415b3a:	lea    rcx,[rip+0xed63]        # 4248a4 <_IO_stdin_used@@Base+0x8a4>
  415b41:	movsxd rbx,DWORD PTR [rcx+rax*4]
  415b45:	add    rbx,rcx
  415b48:	xor    r8d,r8d
  415b4b:	xor    eax,eax
  415b4d:	xor    ecx,ecx
  415b4f:	xor    edx,edx
  415b51:	xor    edi,edi
  415b53:	xor    ebp,ebp
  415b55:	xor    esi,esi
  415b57:	jmp    rbx
  415b59:	movsx  r8,BYTE PTR [r12+0x17]
  415b5f:	movsx  rax,BYTE PTR [r12+0x16]
  415b65:	shl    rax,0x8
  415b69:	or     rax,r8
  415b6c:	movsx  rcx,BYTE PTR [r12+0x15]
  415b72:	shl    rcx,0x10
  415b76:	or     rcx,rax
  415b79:	movsx  rdx,BYTE PTR [r12+0x14]
  415b7f:	shl    rdx,0x18
  415b83:	or     rdx,rcx
  415b86:	movsx  rdi,BYTE PTR [r12+0x13]
  415b8c:	shl    rdi,0x20
  415b90:	or     rdi,rdx
  415b93:	movsx  rbp,BYTE PTR [r12+0x12]
  415b99:	shl    rbp,0x28
  415b9d:	or     rbp,rdi
  415ba0:	movsx  rsi,BYTE PTR [r12+0x11]
  415ba6:	shl    rsi,0x30
  415baa:	or     rsi,rbp
  415bad:	movzx  eax,BYTE PTR [r13+0x0]
  415bb2:	shl    rax,0x38
  415bb6:	or     rax,rsi
  415bb9:	movabs rbx,0x625f73746172745f
  415bc3:	mov    rbp,rax
  415bc6:	and    rbp,0xffffffffffff0000
  415bcd:	movabs rcx,0x7273696e67000000
  415bd7:	lea    rcx,[rcx+0x320000]
  415bde:	cmp    rbp,rcx
  415be1:	jne    415c19 <main@@Base+0x112d9>
  415be3:	cmp    r15,0x7
  415be7:	jl     415f56 <main@@Base+0x11616>
  415bed:	mov    rax,QWORD PTR [rsp+0x20]
  415bf2:	cmp    DWORD PTR [rax],0x0
  415bf5:	mov    al,BYTE PTR [r12+0x16]
  415bfa:	je     415c69 <main@@Base+0x11329>
  415bfc:	cmp    al,0x21
  415bfe:	jl     415c08 <main@@Base+0x112c8>
  415c00:	cmp    al,0x3a
  415c02:	jne    415f56 <main@@Base+0x11616>
  415c08:	add    r12,0x16
  415c0c:	mov    rax,QWORD PTR [rsp+0x20]
  415c11:	mov    DWORD PTR [rax],0x0
  415c17:	jmp    415c75 <main@@Base+0x11335>
  415c19:	cmp    r15,0x6
  415c1d:	jl     415dcf <main@@Base+0x1148f>
  415c23:	and    rax,0xffffffffff000000
  415c29:	movabs rcx,0x7273696e67000000
  415c33:	cmp    rax,rcx
  415c36:	jne    415dcf <main@@Base+0x1148f>
  415c3c:	mov    rax,QWORD PTR [rsp+0x20]
  415c41:	cmp    DWORD PTR [rax],0x0
  415c44:	mov    al,BYTE PTR [r12+0x15]
  415c49:	je     415ca5 <main@@Base+0x11365>
  415c4b:	cmp    al,0x21
  415c4d:	jl     415c57 <main@@Base+0x11317>
  415c4f:	cmp    al,0x3a
  415c51:	jne    415dcf <main@@Base+0x1148f>
  415c57:	lea    rsi,[r12+0x15]
  415c5c:	mov    rax,QWORD PTR [rsp+0x20]
  415c61:	mov    DWORD PTR [rax],0x0
  415c67:	jmp    415cb2 <main@@Base+0x11372>
  415c69:	cmp    al,0x22
  415c6b:	jne    415f56 <main@@Base+0x11616>
  415c71:	add    r12,0x17
  415c75:	mov    rax,r14
  415c78:	sub    rax,r12
  415c7b:	cmp    rax,0x2
  415c7f:	mov    rbx,QWORD PTR [rsp+0x10]
  415c84:	jl     415ce1 <main@@Base+0x113a1>
  415c86:	cmp    BYTE PTR [r12],0x20
  415c8b:	jg     415cf2 <main@@Base+0x113b2>
  415c8d:	jne    415ce1 <main@@Base+0x113a1>
  415c8f:	cmp    BYTE PTR [r12+0x1],0x20
  415c95:	jle    415ce1 <main@@Base+0x113a1>
  415c97:	add    r12,0x1
  415c9b:	cmp    r12,r14
  415c9e:	jne    415cfb <main@@Base+0x113bb>
  415ca0:	jmp    415d9c <main@@Base+0x1145c>
  415ca5:	cmp    al,0x22
  415ca7:	jne    415dcf <main@@Base+0x1148f>
  415cad:	lea    rsi,[r12+0x16]
  415cb2:	mov    rax,r14
  415cb5:	sub    rax,rsi
  415cb8:	cmp    rax,0x2
  415cbc:	jl     415d43 <main@@Base+0x11403>
  415cc2:	cmp    BYTE PTR [rsi],0x20
  415cc5:	jg     415d53 <main@@Base+0x11413>
  415ccb:	jne    415d43 <main@@Base+0x11403>
  415ccd:	cmp    BYTE PTR [rsi+0x1],0x20
  415cd1:	jle    415d43 <main@@Base+0x11403>
  415cd3:	add    rsi,0x1
  415cd7:	cmp    rsi,r14
  415cda:	jne    415d58 <main@@Base+0x11418>
  415cdc:	jmp    415db4 <main@@Base+0x11474>
  415ce1:	mov    rdi,rbx
  415ce4:	mov    rsi,r12
  415ce7:	mov    rdx,r14
  415cea:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  415cef:	mov    r12,rax
  415cf2:	cmp    r12,r14
  415cf5:	je     415d9c <main@@Base+0x1145c>
  415cfb:	cmp    BYTE PTR [r12],0x3a
  415d00:	jne    415d9c <main@@Base+0x1145c>
  415d06:	lea    rbp,[r12+0x1]
  415d0b:	mov    rax,r14
  415d0e:	sub    rax,rbp
  415d11:	cmp    rax,0x2
  415d15:	jl     415ed3 <main@@Base+0x11593>
  415d1b:	cmp    BYTE PTR [rbp+0x0],0x20
  415d1f:	jg     415ee4 <main@@Base+0x115a4>
  415d25:	jne    415ed3 <main@@Base+0x11593>
  415d2b:	cmp    BYTE PTR [r12+0x2],0x20
  415d31:	jle    415ed3 <main@@Base+0x11593>
  415d37:	add    r12,0x2
  415d3b:	mov    rbp,r12
  415d3e:	jmp    415ee4 <main@@Base+0x115a4>
  415d43:	mov    rdi,QWORD PTR [rsp+0x10]
  415d48:	mov    rdx,r14
  415d4b:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  415d50:	mov    rsi,rax
  415d53:	cmp    rsi,r14
  415d56:	je     415db4 <main@@Base+0x11474>
  415d58:	cmp    BYTE PTR [rsi],0x3a
  415d5b:	jne    415db4 <main@@Base+0x11474>
  415d5d:	lea    rax,[rsi+0x1]
  415d61:	mov    rcx,r14
  415d64:	sub    rcx,rax
  415d67:	cmp    rcx,0x2
  415d6b:	jl     415f96 <main@@Base+0x11656>
  415d71:	cmp    BYTE PTR [rax],0x20
  415d74:	jg     415fa6 <main@@Base+0x11666>
  415d7a:	jne    415f96 <main@@Base+0x11656>
  415d80:	cmp    BYTE PTR [rsi+0x2],0x20
  415d84:	jle    415f96 <main@@Base+0x11656>
  415d8a:	add    rsi,0x2
  415d8e:	mov    rax,rsi
  415d91:	cmp    r13,rax
  415d94:	jne    415faf <main@@Base+0x1166f>
  415d9a:	jmp    415dcf <main@@Base+0x1148f>
  415d9c:	mov    ecx,0x4
  415da1:	mov    rdi,rbx
  415da4:	mov    rsi,r12
  415da7:	mov    rdx,r14
  415daa:	call   41f940 <flatcc_json_parser_set_error@@Base>
  415daf:	jmp    415ee1 <main@@Base+0x115a1>
  415db4:	mov    ecx,0x4
  415db9:	mov    rdi,QWORD PTR [rsp+0x10]
  415dbe:	mov    rdx,r14
  415dc1:	call   41f940 <flatcc_json_parser_set_error@@Base>
  415dc6:	cmp    r13,rax
  415dc9:	jne    415faf <main@@Base+0x1166f>
  415dcf:	movabs rax,0x7273696e67000000
  415dd9:	lea    rax,[rax+0x330000]
  415de0:	cmp    rbp,rax
  415de3:	jne    415f56 <main@@Base+0x11616>
  415de9:	cmp    r15,0x7
  415ded:	mov    r15,QWORD PTR [rsp+0x10]
  415df2:	jl     415f5b <main@@Base+0x1161b>
  415df8:	mov    rax,QWORD PTR [rsp+0x20]
  415dfd:	cmp    DWORD PTR [rax],0x0
  415e00:	mov    al,BYTE PTR [r12+0x16]
  415e05:	je     415e24 <main@@Base+0x114e4>
  415e07:	cmp    al,0x21
  415e09:	jl     415e13 <main@@Base+0x114d3>
  415e0b:	cmp    al,0x3a
  415e0d:	jne    415f5b <main@@Base+0x1161b>
  415e13:	add    r12,0x16
  415e17:	mov    rax,QWORD PTR [rsp+0x20]
  415e1c:	mov    DWORD PTR [rax],0x0
  415e22:	jmp    415e30 <main@@Base+0x114f0>
  415e24:	cmp    al,0x22
  415e26:	jne    415f5b <main@@Base+0x1161b>
  415e2c:	add    r12,0x17
  415e30:	mov    rax,r14
  415e33:	sub    rax,r12
  415e36:	cmp    rax,0x2
  415e3a:	jl     415e58 <main@@Base+0x11518>
  415e3c:	cmp    BYTE PTR [r12],0x20
  415e41:	jg     415e69 <main@@Base+0x11529>
  415e43:	jne    415e58 <main@@Base+0x11518>
  415e45:	cmp    BYTE PTR [r12+0x1],0x20
  415e4b:	jle    415e58 <main@@Base+0x11518>
  415e4d:	add    r12,0x1
  415e51:	cmp    r12,r14
  415e54:	jne    415e6e <main@@Base+0x1152e>
  415e56:	jmp    415ebb <main@@Base+0x1157b>
  415e58:	mov    rdi,r15
  415e5b:	mov    rsi,r12
  415e5e:	mov    rdx,r14
  415e61:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  415e66:	mov    r12,rax
  415e69:	cmp    r12,r14
  415e6c:	je     415ebb <main@@Base+0x1157b>
  415e6e:	cmp    BYTE PTR [r12],0x3a
  415e73:	jne    415ebb <main@@Base+0x1157b>
  415e75:	lea    rbp,[r12+0x1]
  415e7a:	mov    rax,r14
  415e7d:	sub    rax,rbp
  415e80:	cmp    rax,0x2
  415e84:	jl     4160e8 <main@@Base+0x117a8>
  415e8a:	cmp    BYTE PTR [rbp+0x0],0x20
  415e8e:	jg     4160f9 <main@@Base+0x117b9>
  415e94:	jne    4160e8 <main@@Base+0x117a8>
  415e9a:	cmp    BYTE PTR [r12+0x2],0x20
  415ea0:	jle    4160e8 <main@@Base+0x117a8>
  415ea6:	add    r12,0x2
  415eaa:	mov    rbp,r12
  415ead:	cmp    r13,rbp
  415eb0:	jne    416102 <main@@Base+0x117c2>
  415eb6:	jmp    415f5b <main@@Base+0x1161b>
  415ebb:	mov    ecx,0x4
  415ec0:	mov    rdi,r15
  415ec3:	mov    rsi,r12
  415ec6:	mov    rdx,r14
  415ec9:	call   41f940 <flatcc_json_parser_set_error@@Base>
  415ece:	jmp    4160f6 <main@@Base+0x117b6>
  415ed3:	mov    rdi,rbx
  415ed6:	mov    rsi,rbp
  415ed9:	mov    rdx,r14
  415edc:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  415ee1:	mov    rbp,rax
  415ee4:	cmp    r13,rbp
  415ee7:	movabs rbx,0x625f73746172745f
  415ef1:	je     415f56 <main@@Base+0x11616>
  415ef3:	mov    r15,QWORD PTR [rsp+0x10]
  415ef8:	mov    rdi,QWORD PTR [r15]
  415efb:	mov    esi,0x2
  415f00:	call   41c500 <flatcc_builder_start_table@@Base>
  415f05:	test   eax,eax
  415f07:	jne    418a7d <main@@Base+0x1413d>
  415f0d:	cmp    rbp,r14
  415f10:	je     415f76 <main@@Base+0x11636>
  415f12:	cmp    BYTE PTR [rbp+0x0],0x7b
  415f16:	jne    415f76 <main@@Base+0x11636>
  415f18:	lea    rax,[rbp+0x1]
  415f1c:	mov    rcx,r14
  415f1f:	sub    rcx,rax
  415f22:	cmp    rcx,0x2
  415f26:	mov    r13,QWORD PTR [rsp+0x18]
  415f2b:	jl     416034 <main@@Base+0x116f4>
  415f31:	cmp    BYTE PTR [rax],0x20
  415f34:	jg     416042 <main@@Base+0x11702>
  415f3a:	jne    416034 <main@@Base+0x116f4>
  415f40:	cmp    BYTE PTR [rbp+0x2],0x20
  415f44:	jle    416034 <main@@Base+0x116f4>
  415f4a:	add    rbp,0x2
  415f4e:	mov    rax,rbp
  415f51:	jmp    416042 <main@@Base+0x11702>
  415f56:	mov    r15,QWORD PTR [rsp+0x10]
  415f5b:	mov    rdi,r15
  415f5e:	mov    rsi,r13
  415f61:	mov    rdx,r14
  415f64:	call   41ff40 <flatcc_json_parser_unmatched_symbol@@Base>
  415f69:	mov    rbp,rax
  415f6c:	mov    r13,QWORD PTR [rsp+0x18]
  415f71:	jmp    415a6f <main@@Base+0x1112f>
  415f76:	mov    ecx,0x15
  415f7b:	mov    rdi,r15
  415f7e:	mov    rsi,rbp
  415f81:	mov    rdx,r14
  415f84:	call   41f940 <flatcc_json_parser_set_error@@Base>
  415f89:	mov    rbp,rax
  415f8c:	mov    r13,QWORD PTR [rsp+0x18]
  415f91:	jmp    417203 <main@@Base+0x128c3>
  415f96:	mov    rdi,QWORD PTR [rsp+0x10]
  415f9b:	mov    rsi,rax
  415f9e:	mov    rdx,r14
  415fa1:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  415fa6:	cmp    r13,rax
  415fa9:	je     415dcf <main@@Base+0x1148f>
  415faf:	mov    rbx,rax
  415fb2:	mov    r15,QWORD PTR [rsp+0x10]
  415fb7:	mov    rdi,QWORD PTR [r15]
  415fba:	mov    esi,0x9
  415fbf:	call   41c500 <flatcc_builder_start_table@@Base>
  415fc4:	test   eax,eax
  415fc6:	jne    418a8d <main@@Base+0x1414d>
  415fcc:	mov    rsi,rbx
  415fcf:	cmp    rbx,r14
  415fd2:	je     416017 <main@@Base+0x116d7>
  415fd4:	cmp    BYTE PTR [rsi],0x7b
  415fd7:	jne    416017 <main@@Base+0x116d7>
  415fd9:	lea    rax,[rsi+0x1]
  415fdd:	mov    rcx,r14
  415fe0:	sub    rcx,rax
  415fe3:	cmp    rcx,0x2
  415fe7:	mov    r13,QWORD PTR [rsp+0x18]
  415fec:	jl     41608e <main@@Base+0x1174e>
  415ff2:	cmp    BYTE PTR [rax],0x20
  415ff5:	jg     41609c <main@@Base+0x1175c>
  415ffb:	jne    41608e <main@@Base+0x1174e>
  416001:	cmp    BYTE PTR [rsi+0x2],0x20
  416005:	jle    41608e <main@@Base+0x1174e>
  41600b:	add    rsi,0x2
  41600f:	mov    rax,rsi
  416012:	jmp    41609c <main@@Base+0x1175c>
  416017:	mov    ecx,0x15
  41601c:	mov    rdi,r15
  41601f:	mov    rdx,r14
  416022:	call   41f940 <flatcc_json_parser_set_error@@Base>
  416027:	mov    rbp,rax
  41602a:	mov    r13,QWORD PTR [rsp+0x18]
  41602f:	jmp    41894c <main@@Base+0x1400c>
  416034:	mov    rdi,r15
  416037:	mov    rsi,rax
  41603a:	mov    rdx,r14
  41603d:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  416042:	mov    rdx,r14
  416045:	cmp    rax,r14
  416048:	je     416bea <main@@Base+0x122aa>
  41604e:	cmp    BYTE PTR [rax],0x7d
  416051:	jne    41616d <main@@Base+0x1182d>
  416057:	lea    rbp,[rax+0x1]
  41605b:	mov    rcx,r14
  41605e:	sub    rcx,rbp
  416061:	cmp    rcx,0x2
  416065:	jl     4171d0 <main@@Base+0x12890>
  41606b:	cmp    BYTE PTR [rbp+0x0],0x20
  41606f:	jg     417203 <main@@Base+0x128c3>
  416075:	jne    4171d0 <main@@Base+0x12890>
  41607b:	cmp    BYTE PTR [rax+0x2],0x20
  41607f:	jle    4171d0 <main@@Base+0x12890>
  416085:	add    rax,0x2
  416089:	jmp    417200 <main@@Base+0x128c0>
  41608e:	mov    rdi,r15
  416091:	mov    rsi,rax
  416094:	mov    rdx,r14
  416097:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  41609c:	mov    rsi,r14
  41609f:	cmp    rax,r14
  4160a2:	je     41738c <main@@Base+0x12a4c>
  4160a8:	cmp    BYTE PTR [rax],0x7d
  4160ab:	jne    416175 <main@@Base+0x11835>
  4160b1:	lea    rbp,[rax+0x1]
  4160b5:	mov    rcx,r14
  4160b8:	sub    rcx,rbp
  4160bb:	cmp    rcx,0x2
  4160bf:	jl     418919 <main@@Base+0x13fd9>
  4160c5:	cmp    BYTE PTR [rbp+0x0],0x20
  4160c9:	jg     41894c <main@@Base+0x1400c>
  4160cf:	jne    418919 <main@@Base+0x13fd9>
  4160d5:	cmp    BYTE PTR [rax+0x2],0x20
  4160d9:	jle    418919 <main@@Base+0x13fd9>
  4160df:	add    rax,0x2
  4160e3:	jmp    418949 <main@@Base+0x14009>
  4160e8:	mov    rdi,r15
  4160eb:	mov    rsi,rbp
  4160ee:	mov    rdx,r14
  4160f1:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  4160f6:	mov    rbp,rax
  4160f9:	cmp    r13,rbp
  4160fc:	je     415f5b <main@@Base+0x1161b>
  416102:	mov    rdi,QWORD PTR [r15]
  416105:	mov    esi,0x2
  41610a:	call   41c500 <flatcc_builder_start_table@@Base>
  41610f:	test   eax,eax
  416111:	jne    418a7d <main@@Base+0x1413d>
  416117:	cmp    rbp,r14
  41611a:	je     41614d <main@@Base+0x1180d>
  41611c:	cmp    BYTE PTR [rbp+0x0],0x7b
  416120:	jne    41614d <main@@Base+0x1180d>
  416122:	lea    rax,[rbp+0x1]
  416126:	mov    rcx,r14
  416129:	sub    rcx,rax
  41612c:	cmp    rcx,0x2
  416130:	mov    r13,QWORD PTR [rsp+0x18]
  416135:	jl     41617d <main@@Base+0x1183d>
  416137:	cmp    BYTE PTR [rax],0x20
  41613a:	jg     41618b <main@@Base+0x1184b>
  41613c:	jne    41617d <main@@Base+0x1183d>
  41613e:	cmp    BYTE PTR [rbp+0x2],0x20
  416142:	jle    41617d <main@@Base+0x1183d>
  416144:	add    rbp,0x2
  416148:	mov    rax,rbp
  41614b:	jmp    41618b <main@@Base+0x1184b>
  41614d:	mov    ecx,0x15
  416152:	mov    rdi,r15
  416155:	mov    rsi,rbp
  416158:	mov    rdx,r14
  41615b:	call   41f940 <flatcc_json_parser_set_error@@Base>
  416160:	mov    rbp,rax
  416163:	mov    r13,QWORD PTR [rsp+0x18]
  416168:	jmp    417273 <main@@Base+0x12933>
  41616d:	mov    rdx,rax
  416170:	jmp    416bea <main@@Base+0x122aa>
  416175:	mov    rsi,rax
  416178:	jmp    41738c <main@@Base+0x12a4c>
  41617d:	mov    rdi,r15
  416180:	mov    rsi,rax
  416183:	mov    rdx,r14
  416186:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  41618b:	mov    rdx,r14
  41618e:	cmp    rax,r14
  416191:	je     41660c <main@@Base+0x11ccc>
  416197:	cmp    BYTE PTR [rax],0x7d
  41619a:	jne    4161d3 <main@@Base+0x11893>
  41619c:	lea    rbp,[rax+0x1]
  4161a0:	mov    rcx,r14
  4161a3:	sub    rcx,rbp
  4161a6:	cmp    rcx,0x2
  4161aa:	jl     417262 <main@@Base+0x12922>
  4161b0:	cmp    BYTE PTR [rbp+0x0],0x20
  4161b4:	jg     417273 <main@@Base+0x12933>
  4161ba:	jne    417262 <main@@Base+0x12922>
  4161c0:	cmp    BYTE PTR [rax+0x2],0x20
  4161c4:	jle    417262 <main@@Base+0x12922>
  4161ca:	add    rax,0x2
  4161ce:	jmp    417270 <main@@Base+0x12930>
  4161d3:	mov    rdx,rax
  4161d6:	jmp    41660c <main@@Base+0x11ccc>
  4161db:	cmp    al,0x22
  4161dd:	jne    416450 <main@@Base+0x11b10>
  4161e3:	add    rsi,0x10
  4161e7:	mov    rax,r14
  4161ea:	sub    rax,rsi
  4161ed:	cmp    rax,0x2
  4161f1:	jl     416255 <main@@Base+0x11915>
  4161f3:	cmp    BYTE PTR [rsi],0x20
  4161f6:	jg     416263 <main@@Base+0x11923>
  4161f8:	jne    416255 <main@@Base+0x11915>
  4161fa:	cmp    BYTE PTR [rsi+0x1],0x20
  4161fe:	jle    416255 <main@@Base+0x11915>
  416200:	add    rsi,0x1
  416204:	cmp    rsi,r14
  416207:	jne    416268 <main@@Base+0x11928>
  416209:	jmp    4162a7 <main@@Base+0x11967>
  41620e:	cmp    al,0x22
  416210:	jne    416450 <main@@Base+0x11b10>
  416216:	add    rsi,0x16
  41621a:	mov    rax,r14
  41621d:	sub    rax,rsi
  416220:	cmp    rax,0x2
  416224:	jl     4162c8 <main@@Base+0x11988>
  41622a:	cmp    BYTE PTR [rsi],0x20
  41622d:	jg     4162d6 <main@@Base+0x11996>
  416233:	jne    4162c8 <main@@Base+0x11988>
  416239:	cmp    BYTE PTR [rsi+0x1],0x20
  41623d:	jle    4162c8 <main@@Base+0x11988>
  416243:	add    rsi,0x1
  416247:	cmp    rsi,r14
  41624a:	jne    4162db <main@@Base+0x1199b>
  416250:	jmp    41631a <main@@Base+0x119da>
  416255:	mov    rdi,r15
  416258:	mov    rdx,r14
  41625b:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  416260:	mov    rsi,rax
  416263:	cmp    rsi,r14
  416266:	je     4162a7 <main@@Base+0x11967>
  416268:	cmp    BYTE PTR [rsi],0x3a
  41626b:	jne    4162a7 <main@@Base+0x11967>
  41626d:	lea    rbx,[rsi+0x1]
  416271:	mov    rax,r14
  416274:	sub    rax,rbx
  416277:	cmp    rax,0x2
  41627b:	jl     41633b <main@@Base+0x119fb>
  416281:	cmp    BYTE PTR [rbx],0x20
  416284:	jg     41629d <main@@Base+0x1195d>
  416286:	jne    41633b <main@@Base+0x119fb>
  41628c:	cmp    BYTE PTR [rsi+0x2],0x20
  416290:	jle    41633b <main@@Base+0x119fb>
  416296:	add    rsi,0x2
  41629a:	mov    rbx,rsi
  41629d:	mov    r15,QWORD PTR [rsp+0x10]
  4162a2:	jmp    416351 <main@@Base+0x11a11>
  4162a7:	mov    ecx,0x4
  4162ac:	mov    rdi,r15
  4162af:	mov    rdx,r14
  4162b2:	call   41f940 <flatcc_json_parser_set_error@@Base>
  4162b7:	mov    rbx,rax
  4162ba:	cmp    r12,rbx
  4162bd:	jne    41635f <main@@Base+0x11a1f>
  4162c3:	jmp    416450 <main@@Base+0x11b10>
  4162c8:	mov    rdi,r15
  4162cb:	mov    rdx,r14
  4162ce:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  4162d3:	mov    rsi,rax
  4162d6:	cmp    rsi,r14
  4162d9:	je     41631a <main@@Base+0x119da>
  4162db:	cmp    BYTE PTR [rsi],0x3a
  4162de:	jne    41631a <main@@Base+0x119da>
  4162e0:	lea    rbx,[rsi+0x1]
  4162e4:	mov    rax,r14
  4162e7:	sub    rax,rbx
  4162ea:	cmp    rax,0x2
  4162ee:	jl     4163e2 <main@@Base+0x11aa2>
  4162f4:	cmp    BYTE PTR [rbx],0x20
  4162f7:	jg     416310 <main@@Base+0x119d0>
  4162f9:	jne    4163e2 <main@@Base+0x11aa2>
  4162ff:	cmp    BYTE PTR [rsi+0x2],0x20
  416303:	jle    4163e2 <main@@Base+0x11aa2>
  416309:	add    rsi,0x2
  41630d:	mov    rbx,rsi
  416310:	mov    r15,QWORD PTR [rsp+0x10]
  416315:	jmp    4163f8 <main@@Base+0x11ab8>
  41631a:	mov    ecx,0x4
  41631f:	mov    rdi,r15
  416322:	mov    rdx,r14
  416325:	call   41f940 <flatcc_json_parser_set_error@@Base>
  41632a:	mov    rbx,rax
  41632d:	cmp    r12,rbx
  416330:	jne    416402 <main@@Base+0x11ac2>
  416336:	jmp    416450 <main@@Base+0x11b10>
  41633b:	mov    r15,QWORD PTR [rsp+0x10]
  416340:	mov    rdi,r15
  416343:	mov    rsi,rbx
  416346:	mov    rdx,r14
  416349:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  41634e:	mov    rbx,rax
  416351:	mov    r13,QWORD PTR [rsp+0x18]
  416356:	cmp    r12,rbx
  416359:	je     416450 <main@@Base+0x11b10>
  41635f:	mov    QWORD PTR [rsp+0x38],0x0
  416368:	mov    DWORD PTR [rsp+0xc],0x0
  416370:	mov    QWORD PTR [rsp+0x30],0x0
  416379:	cmp    rbx,r14
  41637c:	je     4163cf <main@@Base+0x11a8f>
  41637e:	mov    rdi,r15
  416381:	mov    rsi,rbx
  416384:	mov    rdx,r14
  416387:	lea    rcx,[rsp+0xc]
  41638c:	lea    r8,[rsp+0x38]
  416391:	call   4215e0 <flatcc_json_parser_integer@@Base>
  416396:	cmp    rax,rbx
  416399:	je     416481 <main@@Base+0x11b41>
  41639f:	mov    r12,rax
  4163a2:	mov    rbp,QWORD PTR [rsp+0x38]
  4163a7:	cmp    DWORD PTR [rsp+0xc],0x0
  4163ac:	je     416490 <main@@Base+0x11b50>
  4163b2:	movabs rax,0x8000000000000000
  4163bc:	cmp    rbp,rax
  4163bf:	jbe    4164e6 <main@@Base+0x11ba6>
  4163c5:	mov    ecx,0x8
  4163ca:	jmp    41649a <main@@Base+0x11b5a>
  4163cf:	xor    ebp,ebp
  4163d1:	mov    r12,r14
  4163d4:	cmp    rbx,r12
  4163d7:	jne    41653b <main@@Base+0x11bfb>
  4163dd:	jmp    4164fd <main@@Base+0x11bbd>
  4163e2:	mov    r15,QWORD PTR [rsp+0x10]
  4163e7:	mov    rdi,r15
  4163ea:	mov    rsi,rbx
  4163ed:	mov    rdx,r14
  4163f0:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  4163f5:	mov    rbx,rax
  4163f8:	mov    r13,QWORD PTR [rsp+0x18]
  4163fd:	cmp    r12,rbx
  416400:	je     416450 <main@@Base+0x11b10>
  416402:	mov    QWORD PTR [rsp+0x38],0x0
  41640b:	mov    DWORD PTR [rsp+0x30],0x0
  416413:	mov    DWORD PTR [rsp+0xc],0x0
  41641b:	xor    ebp,ebp
  41641d:	cmp    rbx,r14
  416420:	je     416470 <main@@Base+0x11b30>
  416422:	mov    rdi,r15
  416425:	mov    rsi,rbx
  416428:	mov    rdx,r14
  41642b:	lea    rcx,[rsp+0x30]
  416430:	lea    r8,[rsp+0x38]
  416435:	call   4215e0 <flatcc_json_parser_integer@@Base>
  41643a:	cmp    rax,rbx
  41643d:	je     416488 <main@@Base+0x11b48>
  41643f:	mov    r12,rax
  416442:	cmp    DWORD PTR [rsp+0x30],0x0
  416447:	je     4164b4 <main@@Base+0x11b74>
  416449:	mov    ecx,0x8
  41644e:	jmp    4164cb <main@@Base+0x11b8b>
  416450:	mov    rdi,r15
  416453:	mov    rsi,r12
  416456:	mov    rdx,r14
  416459:	call   41ff40 <flatcc_json_parser_unmatched_symbol@@Base>
  41645e:	mov    r12,rax
  416461:	movabs rbx,0x625f73746172745f
  41646b:	jmp    416940 <main@@Base+0x12000>
  416470:	mov    r12,r14
  416473:	cmp    rbx,r12
  416476:	jne    4165cc <main@@Base+0x11c8c>
  41647c:	jmp    41658f <main@@Base+0x11c4f>
  416481:	xor    ebp,ebp
  416483:	mov    r12,rbx
  416486:	jmp    4164ee <main@@Base+0x11bae>
  416488:	mov    r12,rbx
  41648b:	jmp    416580 <main@@Base+0x11c40>
  416490:	test   rbp,rbp
  416493:	jns    4164e9 <main@@Base+0x11ba9>
  416495:	mov    ecx,0x7
  41649a:	mov    r15,QWORD PTR [rsp+0x10]
  41649f:	mov    rdi,r15
  4164a2:	mov    rsi,r12
  4164a5:	mov    rdx,r14
  4164a8:	call   41f940 <flatcc_json_parser_set_error@@Base>
  4164ad:	mov    r12,rax
  4164b0:	xor    ebp,ebp
  4164b2:	jmp    4164f3 <main@@Base+0x11bb3>
  4164b4:	mov    rax,QWORD PTR [rsp+0x38]
  4164b9:	mov    rcx,rax
  4164bc:	shr    rcx,0x20
  4164c0:	je     41657a <main@@Base+0x11c3a>
  4164c6:	mov    ecx,0x7
  4164cb:	mov    r15,QWORD PTR [rsp+0x10]
  4164d0:	mov    rdi,r15
  4164d3:	mov    rsi,r12
  4164d6:	mov    rdx,r14
  4164d9:	call   41f940 <flatcc_json_parser_set_error@@Base>
  4164de:	mov    r12,rax
  4164e1:	jmp    416585 <main@@Base+0x11c45>
  4164e6:	neg    rbp
  4164e9:	mov    QWORD PTR [rsp+0x30],rbp
  4164ee:	mov    r15,QWORD PTR [rsp+0x10]
  4164f3:	mov    r13,QWORD PTR [rsp+0x18]
  4164f8:	cmp    rbx,r12
  4164fb:	jne    41653b <main@@Base+0x11bfb>
  4164fd:	mov    rdi,r15
  416500:	mov    rsi,rbx
  416503:	mov    rdx,r14
  416506:	lea    rcx,[rip+0x15133]        # 42b640 <filename@@Base+0x570>
  41650d:	lea    r8,[rsp+0x30]
  416512:	call   414620 <main@@Base+0xfce0>
  416517:	mov    r12,rax
  41651a:	cmp    rax,rbx
  41651d:	je     418a75 <main@@Base+0x14135>
  416523:	cmp    r12,r14
  416526:	je     418a75 <main@@Base+0x14135>
  41652c:	mov    rbp,QWORD PTR [rsp+0x30]
  416531:	mov    r15,QWORD PTR [rsp+0x10]
  416536:	mov    r13,QWORD PTR [rsp+0x18]
  41653b:	test   rbp,rbp
  41653e:	movabs rbx,0x625f73746172745f
  416548:	jne    416555 <main@@Base+0x11c15>
  41654a:	test   BYTE PTR [r15+0x10],0x2
  41654f:	je     416940 <main@@Base+0x12000>
  416555:	mov    rdi,QWORD PTR [r15]
  416558:	xor    esi,esi
  41655a:	mov    edx,0x8
  41655f:	mov    ecx,0x8
  416564:	call   41d880 <flatcc_builder_table_add@@Base>
  416569:	test   rax,rax
  41656c:	je     418a75 <main@@Base+0x14135>
  416572:	mov    QWORD PTR [rax],rbp
  416575:	jmp    416940 <main@@Base+0x12000>
  41657a:	mov    DWORD PTR [rsp+0xc],eax
  41657e:	mov    ebp,eax
  416580:	mov    r15,QWORD PTR [rsp+0x10]
  416585:	mov    r13,QWORD PTR [rsp+0x18]
  41658a:	cmp    rbx,r12
  41658d:	jne    4165cc <main@@Base+0x11c8c>
  41658f:	mov    rdi,r15
  416592:	mov    rsi,rbx
  416595:	mov    rdx,r14
  416598:	lea    rcx,[rip+0x15081]        # 42b620 <filename@@Base+0x550>
  41659f:	lea    r8,[rsp+0xc]
  4165a4:	call   414830 <main@@Base+0xfef0>
  4165a9:	mov    r12,rax
  4165ac:	cmp    rax,rbx
  4165af:	je     418a75 <main@@Base+0x14135>
  4165b5:	cmp    r12,r14
  4165b8:	je     418a75 <main@@Base+0x14135>
  4165be:	mov    ebp,DWORD PTR [rsp+0xc]
  4165c2:	mov    r15,QWORD PTR [rsp+0x10]
  4165c7:	mov    r13,QWORD PTR [rsp+0x18]
  4165cc:	test   ebp,ebp
  4165ce:	movabs rbx,0x625f73746172745f
  4165d8:	jne    4165e5 <main@@Base+0x11ca5>
  4165da:	test   BYTE PTR [r15+0x10],0x2
  4165df:	je     416940 <main@@Base+0x12000>
  4165e5:	mov    rdi,QWORD PTR [r15]
  4165e8:	mov    esi,0x1
  4165ed:	mov    edx,0x4
  4165f2:	mov    ecx,0x4
  4165f7:	call   41d880 <flatcc_builder_table_add@@Base>
  4165fc:	test   rax,rax
  4165ff:	je     418a75 <main@@Base+0x14135>
  416605:	mov    DWORD PTR [rax],ebp
  416607:	jmp    416940 <main@@Base+0x12000>
  41660c:	mov    rsi,r14
  41660f:	cmp    rdx,r14
  416612:	je     416656 <main@@Base+0x11d16>
  416614:	movzx  eax,BYTE PTR [rdx]
  416617:	cmp    al,0x2e
  416619:	je     416630 <main@@Base+0x11cf0>
  41661b:	cmp    al,0x22
  41661d:	jne    416648 <main@@Base+0x11d08>
  41661f:	add    rdx,0x1
  416623:	mov    rax,QWORD PTR [rsp+0x20]
  416628:	mov    DWORD PTR [rax],0x0
  41662e:	jmp    416653 <main@@Base+0x11d13>
  416630:	mov    ecx,0x5
  416635:	mov    rdi,r15
  416638:	mov    rsi,rdx
  41663b:	mov    rdx,r14
  41663e:	call   41f940 <flatcc_json_parser_set_error@@Base>
  416643:	mov    rsi,rax
  416646:	jmp    416656 <main@@Base+0x11d16>
  416648:	mov    rax,QWORD PTR [rsp+0x20]
  41664d:	mov    DWORD PTR [rax],0x1
  416653:	mov    rsi,rdx
  416656:	mov    rax,r14
  416659:	sub    rax,rsi
  41665c:	cmp    rax,0x8
  416660:	jb     41666c <main@@Base+0x11d2c>
  416662:	movbe  rax,QWORD PTR [rsi]
  416667:	jmp    4166fc <main@@Base+0x11dbc>
  41666c:	and    al,0xf
  41666e:	add    al,0xff
  416670:	cmp    al,0x7
  416672:	ja     416749 <main@@Base+0x11e09>
  416678:	movzx  eax,al
  41667b:	lea    rcx,[rip+0xe2c2]        # 424944 <_IO_stdin_used@@Base+0x944>
  416682:	movsxd rax,DWORD PTR [rcx+rax*4]
  416686:	add    rax,rcx
  416689:	xor    r8d,r8d
  41668c:	xor    r9d,r9d
  41668f:	xor    ecx,ecx
  416691:	xor    edx,edx
  416693:	xor    ebp,ebp
  416695:	xor    ebx,ebx
  416697:	xor    edi,edi
  416699:	jmp    rax
  41669b:	movsx  r8,BYTE PTR [rsi+0x7]
  4166a0:	movsx  r9,BYTE PTR [rsi+0x6]
  4166a5:	shl    r9,0x8
  4166a9:	or     r9,r8
  4166ac:	movsx  rcx,BYTE PTR [rsi+0x5]
  4166b1:	shl    rcx,0x10
  4166b5:	or     rcx,r9
  4166b8:	movsx  rdx,BYTE PTR [rsi+0x4]
  4166bd:	shl    rdx,0x18
  4166c1:	or     rdx,rcx
  4166c4:	movsx  rbp,BYTE PTR [rsi+0x3]
  4166c9:	shl    rbp,0x20
  4166cd:	or     rbp,rdx
  4166d0:	movsx  rbx,BYTE PTR [rsi+0x2]
  4166d5:	shl    rbx,0x28
  4166d9:	or     rbx,rbp
  4166dc:	movsx  rdi,BYTE PTR [rsi+0x1]
  4166e1:	shl    rdi,0x30
  4166e5:	or     rdi,rbx
  4166e8:	movzx  eax,BYTE PTR [rsi]
  4166eb:	shl    rax,0x38
  4166ef:	or     rax,rdi
  4166f2:	movabs rbx,0x625f73746172745f
  4166fc:	movabs rcx,0x616161615f626262
  416706:	cmp    rax,rcx
  416709:	jne    416749 <main@@Base+0x11e09>
  41670b:	lea    r12,[rsi+0x8]
  41670f:	mov    rax,r14
  416712:	sub    rax,r12
  416715:	cmp    rax,0x8
  416719:	jb     416751 <main@@Base+0x11e11>
  41671b:	movbe  rcx,QWORD PTR [r12]
  416721:	cmp    rcx,rbx
  416724:	jne    4167f2 <main@@Base+0x11eb2>
  41672a:	lea    r12,[rsi+0x10]
  41672e:	mov    rax,r14
  416731:	sub    rax,r12
  416734:	cmp    rax,0x8
  416738:	jb     416845 <main@@Base+0x11f05>
  41673e:	movbe  rdx,QWORD PTR [r12]
  416744:	jmp    4168e0 <main@@Base+0x11fa0>
  416749:	mov    rdi,r15
  41674c:	jmp    416935 <main@@Base+0x11ff5>
  416751:	mov    ecx,eax
  416753:	and    cl,0xf
  416756:	add    cl,0xff
  416759:	cmp    cl,0x7
  41675c:	ja     41692f <main@@Base+0x11fef>
  416762:	movzx  ecx,cl
  416765:	lea    rdx,[rip+0xe1f8]        # 424964 <_IO_stdin_used@@Base+0x964>
  41676c:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  416770:	add    rcx,rdx
  416773:	xor    r8d,r8d
  416776:	xor    r9d,r9d
  416779:	xor    r10d,r10d
  41677c:	xor    edi,edi
  41677e:	xor    ebp,ebp
  416780:	xor    ebx,ebx
  416782:	xor    edx,edx
  416784:	jmp    rcx
  416786:	movsx  r8,BYTE PTR [rsi+0xf]
  41678b:	movsx  r9,BYTE PTR [rsi+0xe]
  416790:	shl    r9,0x8
  416794:	or     r9,r8
  416797:	movsx  r10,BYTE PTR [rsi+0xd]
  41679c:	shl    r10,0x10
  4167a0:	or     r10,r9
  4167a3:	movsx  rdi,BYTE PTR [rsi+0xc]
  4167a8:	shl    rdi,0x18
  4167ac:	or     rdi,r10
  4167af:	movsx  rbp,BYTE PTR [rsi+0xb]
  4167b4:	shl    rbp,0x20
  4167b8:	or     rbp,rdi
  4167bb:	movsx  rbx,BYTE PTR [rsi+0xa]
  4167c0:	shl    rbx,0x28
  4167c4:	or     rbx,rbp
  4167c7:	movsx  rdx,BYTE PTR [rsi+0x9]
  4167cc:	shl    rdx,0x30
  4167d0:	or     rdx,rbx
  4167d3:	movzx  ecx,BYTE PTR [r12]
  4167d8:	shl    rcx,0x38
  4167dc:	or     rcx,rdx
  4167df:	movabs rbx,0x625f73746172745f
  4167e9:	cmp    rcx,rbx
  4167ec:	je     41672a <main@@Base+0x11dea>
  4167f2:	and    rcx,0xffffffffffffff00
  4167f9:	lea    rdx,[rbx+0x3fdfea1]
  416800:	cmp    rcx,rdx
  416803:	jne    41692f <main@@Base+0x11fef>
  416809:	cmp    rax,0x8
  41680d:	jl     416450 <main@@Base+0x11b10>
  416813:	mov    rax,QWORD PTR [rsp+0x20]
  416818:	cmp    DWORD PTR [rax],0x0
  41681b:	movzx  eax,BYTE PTR [rsi+0xf]
  41681f:	je     4161db <main@@Base+0x1189b>
  416825:	cmp    al,0x21
  416827:	jl     416831 <main@@Base+0x11ef1>
  416829:	cmp    al,0x3a
  41682b:	jne    416450 <main@@Base+0x11b10>
  416831:	add    rsi,0xf
  416835:	mov    rax,QWORD PTR [rsp+0x20]
  41683a:	mov    DWORD PTR [rax],0x0
  416840:	jmp    4161e7 <main@@Base+0x118a7>
  416845:	mov    ecx,eax
  416847:	and    cl,0xf
  41684a:	add    cl,0xff
  41684d:	cmp    cl,0x7
  416850:	ja     41692f <main@@Base+0x11fef>
  416856:	movzx  ecx,cl
  416859:	lea    rdx,[rip+0xe124]        # 424984 <_IO_stdin_used@@Base+0x984>
  416860:	mov    rdi,rdx
  416863:	movsxd rdx,DWORD PTR [rdx+rcx*4]
  416867:	add    rdx,rdi
  41686a:	xor    r8d,r8d
  41686d:	xor    r9d,r9d
  416870:	xor    r10d,r10d
  416873:	xor    edi,edi
  416875:	xor    ebx,ebx
  416877:	xor    ebp,ebp
  416879:	xor    ecx,ecx
  41687b:	jmp    rdx
  41687d:	movsx  r8,BYTE PTR [rsi+0x17]
  416882:	movsx  r9,BYTE PTR [rsi+0x16]
  416887:	shl    r9,0x8
  41688b:	or     r9,r8
  41688e:	movsx  r10,BYTE PTR [rsi+0x15]
  416893:	shl    r10,0x10
  416897:	or     r10,r9
  41689a:	movsx  rdi,BYTE PTR [rsi+0x14]
  41689f:	shl    rdi,0x18
  4168a3:	or     rdi,r10
  4168a6:	movsx  rbx,BYTE PTR [rsi+0x13]
  4168ab:	shl    rbx,0x20
  4168af:	or     rbx,rdi
  4168b2:	movsx  rbp,BYTE PTR [rsi+0x12]
  4168b7:	shl    rbp,0x28
  4168bb:	or     rbp,rbx
  4168be:	movsx  rcx,BYTE PTR [rsi+0x11]
  4168c3:	shl    rcx,0x30
  4168c7:	or     rcx,rbp
  4168ca:	movzx  edx,BYTE PTR [r12]
  4168cf:	shl    rdx,0x38
  4168d3:	or     rdx,rcx
  4168d6:	movabs rbx,0x625f73746172745f
  4168e0:	shr    rdx,0x18
  4168e4:	movabs rcx,0x7374657073
  4168ee:	cmp    rdx,rcx
  4168f1:	jne    41692f <main@@Base+0x11fef>
  4168f3:	cmp    rax,0x6
  4168f7:	jl     416450 <main@@Base+0x11b10>
  4168fd:	mov    rax,QWORD PTR [rsp+0x20]
  416902:	cmp    DWORD PTR [rax],0x0
  416905:	movzx  eax,BYTE PTR [rsi+0x15]
  416909:	je     41620e <main@@Base+0x118ce>
  41690f:	cmp    al,0x21
  416911:	jl     41691b <main@@Base+0x11fdb>
  416913:	cmp    al,0x3a
  416915:	jne    416450 <main@@Base+0x11b10>
  41691b:	add    rsi,0x15
  41691f:	mov    rax,QWORD PTR [rsp+0x20]
  416924:	mov    DWORD PTR [rax],0x0
  41692a:	jmp    41621a <main@@Base+0x118da>
  41692f:	mov    rdi,r15
  416932:	mov    rsi,r12
  416935:	mov    rdx,r14
  416938:	call   41ff40 <flatcc_json_parser_unmatched_symbol@@Base>
  41693d:	mov    r12,rax
  416940:	mov    rax,r14
  416943:	sub    rax,r12
  416946:	cmp    rax,0x2
  41694a:	jl     41696b <main@@Base+0x1202b>
  41694c:	cmp    BYTE PTR [r12],0x20
  416951:	jg     41697c <main@@Base+0x1203c>
  416953:	jne    41696b <main@@Base+0x1202b>
  416955:	cmp    BYTE PTR [r12+0x1],0x20
  41695b:	jle    41696b <main@@Base+0x1202b>
  41695d:	add    r12,0x1
  416961:	cmp    r12,r14
  416964:	jne    416985 <main@@Base+0x12045>
  416966:	jmp    416a20 <main@@Base+0x120e0>
  41696b:	mov    rdi,r15
  41696e:	mov    rsi,r12
  416971:	mov    rdx,r14
  416974:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  416979:	mov    r12,rax
  41697c:	cmp    r12,r14
  41697f:	je     416a20 <main@@Base+0x120e0>
  416985:	movzx  eax,BYTE PTR [r12]
  41698a:	cmp    al,0x2c
  41698c:	jne    416a28 <main@@Base+0x120e8>
  416992:	lea    rdx,[r12+0x1]
  416997:	mov    rax,r14
  41699a:	sub    rax,rdx
  41699d:	cmp    rax,0x2
  4169a1:	jl     4169c3 <main@@Base+0x12083>
  4169a3:	cmp    BYTE PTR [rdx],0x20
  4169a6:	jg     4169d4 <main@@Base+0x12094>
  4169a8:	jne    4169c3 <main@@Base+0x12083>
  4169aa:	cmp    BYTE PTR [r12+0x2],0x20
  4169b0:	jle    4169c3 <main@@Base+0x12083>
  4169b2:	add    r12,0x2
  4169b6:	mov    rdx,r12
  4169b9:	cmp    rdx,r14
  4169bc:	jne    4169dd <main@@Base+0x1209d>
  4169be:	jmp    416a5e <main@@Base+0x1211e>
  4169c3:	mov    rdi,r15
  4169c6:	mov    rsi,rdx
  4169c9:	mov    rdx,r14
  4169cc:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  4169d1:	mov    rdx,rax
  4169d4:	cmp    rdx,r14
  4169d7:	je     416a5e <main@@Base+0x1211e>
  4169dd:	cmp    BYTE PTR [rdx],0x7d
  4169e0:	jne    41660c <main@@Base+0x11ccc>
  4169e6:	lea    rbp,[rdx+0x1]
  4169ea:	mov    rax,r14
  4169ed:	sub    rax,rbp
  4169f0:	cmp    rax,0x2
  4169f4:	jl     417262 <main@@Base+0x12922>
  4169fa:	cmp    BYTE PTR [rbp+0x0],0x20
  4169fe:	jg     417273 <main@@Base+0x12933>
  416a04:	jne    417262 <main@@Base+0x12922>
  416a0a:	cmp    BYTE PTR [rdx+0x2],0x20
  416a0e:	jle    417262 <main@@Base+0x12922>
  416a14:	add    rdx,0x2
  416a18:	mov    rbp,rdx
  416a1b:	jmp    417273 <main@@Base+0x12933>
  416a20:	mov    rbp,r14
  416a23:	jmp    417273 <main@@Base+0x12933>
  416a28:	cmp    al,0x7d
  416a2a:	jne    417230 <main@@Base+0x128f0>
  416a30:	lea    rbp,[r12+0x1]
  416a35:	mov    rax,r14
  416a38:	sub    rax,rbp
  416a3b:	cmp    rax,0x2
  416a3f:	jl     417262 <main@@Base+0x12922>
  416a45:	cmp    BYTE PTR [rbp+0x0],0x20
  416a49:	jle    417245 <main@@Base+0x12905>
  416a4f:	mov    r15,QWORD PTR [rsp+0x10]
  416a54:	mov    r13,QWORD PTR [rsp+0x18]
  416a59:	jmp    417273 <main@@Base+0x12933>
  416a5e:	mov    ecx,0xa
  416a63:	mov    rdi,r15
  416a66:	mov    rsi,r14
  416a69:	jmp    41723b <main@@Base+0x128fb>
  416a6e:	mov    r12,r14
  416a71:	cmp    rbx,r12
  416a74:	jne    416baa <main@@Base+0x1226a>
  416a7a:	jmp    416b6d <main@@Base+0x1222d>
  416a7f:	test   rbp,rbp
  416a82:	jns    416aa6 <main@@Base+0x12166>
  416a84:	mov    ecx,0x7
  416a89:	mov    rdi,r15
  416a8c:	mov    rsi,r12
  416a8f:	mov    rdx,r14
  416a92:	call   41f940 <flatcc_json_parser_set_error@@Base>
  416a97:	mov    r12,rax
  416a9a:	xor    ebp,ebp
  416a9c:	cmp    rbx,r12
  416a9f:	jne    416ae4 <main@@Base+0x121a4>
  416aa1:	jmp    416ab0 <main@@Base+0x12170>
  416aa3:	neg    rbp
  416aa6:	mov    QWORD PTR [rsp+0x30],rbp
  416aab:	cmp    rbx,r12
  416aae:	jne    416ae4 <main@@Base+0x121a4>
  416ab0:	mov    rdi,r15
  416ab3:	mov    rsi,rbx
  416ab6:	mov    rdx,r14
  416ab9:	lea    rcx,[rip+0x14a60]        # 42b520 <filename@@Base+0x450>
  416ac0:	lea    r8,[rsp+0x30]
  416ac5:	call   414620 <main@@Base+0xfce0>
  416aca:	mov    r12,rax
  416acd:	cmp    rax,rbx
  416ad0:	je     418a75 <main@@Base+0x14135>
  416ad6:	cmp    r12,r14
  416ad9:	je     418a75 <main@@Base+0x14135>
  416adf:	mov    rbp,QWORD PTR [rsp+0x30]
  416ae4:	test   rbp,rbp
  416ae7:	movabs rbx,0x625f73746172745f
  416af1:	jne    416afe <main@@Base+0x121be>
  416af3:	test   BYTE PTR [r15+0x10],0x2
  416af8:	je     4170d8 <main@@Base+0x12798>
  416afe:	mov    rdi,QWORD PTR [r15]
  416b01:	xor    esi,esi
  416b03:	mov    edx,0x8
  416b08:	mov    ecx,0x8
  416b0d:	call   41d880 <flatcc_builder_table_add@@Base>
  416b12:	test   rax,rax
  416b15:	je     418a75 <main@@Base+0x14135>
  416b1b:	mov    QWORD PTR [rax],rbp
  416b1e:	jmp    4170d8 <main@@Base+0x12798>
  416b23:	mov    r12,rbx
  416b26:	cmp    rbx,r12
  416b29:	jne    416baa <main@@Base+0x1226a>
  416b2b:	jmp    416b6d <main@@Base+0x1222d>
  416b2d:	mov    rax,QWORD PTR [rsp+0x38]
  416b32:	mov    rcx,rax
  416b35:	shr    rcx,0x20
  416b39:	je     416b58 <main@@Base+0x12218>
  416b3b:	mov    ecx,0x7
  416b40:	mov    r15,QWORD PTR [rsp+0x10]
  416b45:	mov    rdi,r15
  416b48:	mov    rsi,r12
  416b4b:	mov    rdx,r14
  416b4e:	call   41f940 <flatcc_json_parser_set_error@@Base>
  416b53:	mov    r12,rax
  416b56:	jmp    416b63 <main@@Base+0x12223>
  416b58:	mov    DWORD PTR [rsp+0xc],eax
  416b5c:	mov    ebp,eax
  416b5e:	mov    r15,QWORD PTR [rsp+0x10]
  416b63:	mov    r13,QWORD PTR [rsp+0x18]
  416b68:	cmp    rbx,r12
  416b6b:	jne    416baa <main@@Base+0x1226a>
  416b6d:	mov    rdi,r15
  416b70:	mov    rsi,rbx
  416b73:	mov    rdx,r14
  416b76:	lea    rcx,[rip+0x149c3]        # 42b540 <filename@@Base+0x470>
  416b7d:	lea    r8,[rsp+0xc]
  416b82:	call   414830 <main@@Base+0xfef0>
  416b87:	mov    r12,rax
  416b8a:	cmp    rax,rbx
  416b8d:	je     418a75 <main@@Base+0x14135>
  416b93:	cmp    r12,r14
  416b96:	je     418a75 <main@@Base+0x14135>
  416b9c:	mov    ebp,DWORD PTR [rsp+0xc]
  416ba0:	mov    r15,QWORD PTR [rsp+0x10]
  416ba5:	mov    r13,QWORD PTR [rsp+0x18]
  416baa:	test   ebp,ebp
  416bac:	movabs rbx,0x625f73746172745f
  416bb6:	jne    416bc3 <main@@Base+0x12283>
  416bb8:	test   BYTE PTR [r15+0x10],0x2
  416bbd:	je     4170d8 <main@@Base+0x12798>
  416bc3:	mov    rdi,QWORD PTR [r15]
  416bc6:	mov    esi,0x1
  416bcb:	mov    edx,0x4
  416bd0:	mov    ecx,0x4
  416bd5:	call   41d880 <flatcc_builder_table_add@@Base>
  416bda:	test   rax,rax
  416bdd:	je     418a75 <main@@Base+0x14135>
  416be3:	mov    DWORD PTR [rax],ebp
  416be5:	jmp    4170d8 <main@@Base+0x12798>
  416bea:	mov    rsi,r14
  416bed:	cmp    rdx,r14
  416bf0:	je     416c34 <main@@Base+0x122f4>
  416bf2:	movzx  eax,BYTE PTR [rdx]
  416bf5:	cmp    al,0x2e
  416bf7:	je     416c0e <main@@Base+0x122ce>
  416bf9:	cmp    al,0x22
  416bfb:	jne    416c26 <main@@Base+0x122e6>
  416bfd:	add    rdx,0x1
  416c01:	mov    rax,QWORD PTR [rsp+0x20]
  416c06:	mov    DWORD PTR [rax],0x0
  416c0c:	jmp    416c31 <main@@Base+0x122f1>
  416c0e:	mov    ecx,0x5
  416c13:	mov    rdi,r15
  416c16:	mov    rsi,rdx
  416c19:	mov    rdx,r14
  416c1c:	call   41f940 <flatcc_json_parser_set_error@@Base>
  416c21:	mov    rsi,rax
  416c24:	jmp    416c34 <main@@Base+0x122f4>
  416c26:	mov    rax,QWORD PTR [rsp+0x20]
  416c2b:	mov    DWORD PTR [rax],0x1
  416c31:	mov    rsi,rdx
  416c34:	mov    rax,r14
  416c37:	sub    rax,rsi
  416c3a:	cmp    rax,0x8
  416c3e:	jb     416c4a <main@@Base+0x1230a>
  416c40:	movbe  rax,QWORD PTR [rsi]
  416c45:	jmp    416cda <main@@Base+0x1239a>
  416c4a:	and    al,0xf
  416c4c:	add    al,0xff
  416c4e:	cmp    al,0x7
  416c50:	ja     416d04 <main@@Base+0x123c4>
  416c56:	movzx  eax,al
  416c59:	lea    rcx,[rip+0xdd44]        # 4249a4 <_IO_stdin_used@@Base+0x9a4>
  416c60:	movsxd rax,DWORD PTR [rcx+rax*4]
  416c64:	add    rax,rcx
  416c67:	xor    r8d,r8d
  416c6a:	xor    r9d,r9d
  416c6d:	xor    ecx,ecx
  416c6f:	xor    edx,edx
  416c71:	xor    ebp,ebp
  416c73:	xor    ebx,ebx
  416c75:	xor    edi,edi
  416c77:	jmp    rax
  416c79:	movsx  r8,BYTE PTR [rsi+0x7]
  416c7e:	movsx  r9,BYTE PTR [rsi+0x6]
  416c83:	shl    r9,0x8
  416c87:	or     r9,r8
  416c8a:	movsx  rcx,BYTE PTR [rsi+0x5]
  416c8f:	shl    rcx,0x10
  416c93:	or     rcx,r9
  416c96:	movsx  rdx,BYTE PTR [rsi+0x4]
  416c9b:	shl    rdx,0x18
  416c9f:	or     rdx,rcx
  416ca2:	movsx  rbp,BYTE PTR [rsi+0x3]
  416ca7:	shl    rbp,0x20
  416cab:	or     rbp,rdx
  416cae:	movsx  rbx,BYTE PTR [rsi+0x2]
  416cb3:	shl    rbx,0x28
  416cb7:	or     rbx,rbp
  416cba:	movsx  rdi,BYTE PTR [rsi+0x1]
  416cbf:	shl    rdi,0x30
  416cc3:	or     rdi,rbx
  416cc6:	movzx  eax,BYTE PTR [rsi]
  416cc9:	shl    rax,0x38
  416ccd:	or     rax,rdi
  416cd0:	movabs rbx,0x625f73746172745f
  416cda:	movabs rcx,0x616161615f626262
  416ce4:	cmp    rax,rcx
  416ce7:	jne    416d04 <main@@Base+0x123c4>
  416ce9:	lea    r12,[rsi+0x8]
  416ced:	mov    rax,r14
  416cf0:	sub    rax,r12
  416cf3:	cmp    rax,0x8
  416cf7:	jb     416d0c <main@@Base+0x123cc>
  416cf9:	movbe  rcx,QWORD PTR [r12]
  416cff:	jmp    416da4 <main@@Base+0x12464>
  416d04:	mov    rdi,r15
  416d07:	jmp    416e36 <main@@Base+0x124f6>
  416d0c:	mov    ecx,eax
  416d0e:	and    cl,0xf
  416d11:	add    cl,0xff
  416d14:	cmp    cl,0x7
  416d17:	ja     416e30 <main@@Base+0x124f0>
  416d1d:	movzx  ecx,cl
  416d20:	lea    rdx,[rip+0xdc9d]        # 4249c4 <_IO_stdin_used@@Base+0x9c4>
  416d27:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  416d2b:	add    rcx,rdx
  416d2e:	xor    r8d,r8d
  416d31:	xor    r9d,r9d
  416d34:	xor    r10d,r10d
  416d37:	xor    edi,edi
  416d39:	xor    ebp,ebp
  416d3b:	xor    ebx,ebx
  416d3d:	xor    edx,edx
  416d3f:	jmp    rcx
  416d41:	movsx  r8,BYTE PTR [rsi+0xf]
  416d46:	movsx  r9,BYTE PTR [rsi+0xe]
  416d4b:	shl    r9,0x8
  416d4f:	or     r9,r8
  416d52:	movsx  r10,BYTE PTR [rsi+0xd]
  416d57:	shl    r10,0x10
  416d5b:	or     r10,r9
  416d5e:	movsx  rdi,BYTE PTR [rsi+0xc]
  416d63:	shl    rdi,0x18
  416d67:	or     rdi,r10
  416d6a:	movsx  rbp,BYTE PTR [rsi+0xb]
  416d6f:	shl    rbp,0x20
  416d73:	or     rbp,rdi
  416d76:	movsx  rbx,BYTE PTR [rsi+0xa]
  416d7b:	shl    rbx,0x28
  416d7f:	or     rbx,rbp
  416d82:	movsx  rdx,BYTE PTR [rsi+0x9]
  416d87:	shl    rdx,0x30
  416d8b:	or     rdx,rbx
  416d8e:	movzx  ecx,BYTE PTR [r12]
  416d93:	shl    rcx,0x38
  416d97:	or     rcx,rdx
  416d9a:	movabs rbx,0x625f73746172745f
  416da4:	mov    rdx,rcx
  416da7:	and    rdx,0xffffffffffffff00
  416dae:	lea    rdi,[rbx+0x3fdfea1]
  416db5:	cmp    rdx,rdi
  416db8:	jne    416def <main@@Base+0x124af>
  416dba:	cmp    rax,0x8
  416dbe:	jl     4170bd <main@@Base+0x1277d>
  416dc4:	mov    rax,QWORD PTR [rsp+0x20]
  416dc9:	cmp    DWORD PTR [rax],0x0
  416dcc:	movzx  eax,BYTE PTR [rsi+0xf]
  416dd0:	je     416e46 <main@@Base+0x12506>
  416dd2:	cmp    al,0x21
  416dd4:	jl     416dde <main@@Base+0x1249e>
  416dd6:	cmp    al,0x3a
  416dd8:	jne    4170bd <main@@Base+0x1277d>
  416dde:	add    rsi,0xf
  416de2:	mov    rax,QWORD PTR [rsp+0x20]
  416de7:	mov    DWORD PTR [rax],0x0
  416ded:	jmp    416e52 <main@@Base+0x12512>
  416def:	cmp    rcx,rbx
  416df2:	jne    416e30 <main@@Base+0x124f0>
  416df4:	cmp    rax,0x9
  416df8:	jl     4170bd <main@@Base+0x1277d>
  416dfe:	mov    rax,QWORD PTR [rsp+0x20]
  416e03:	cmp    DWORD PTR [rax],0x0
  416e06:	movzx  eax,BYTE PTR [rsi+0x10]
  416e0a:	je     416ee5 <main@@Base+0x125a5>
  416e10:	cmp    al,0x21
  416e12:	jl     416e1c <main@@Base+0x124dc>
  416e14:	cmp    al,0x3a
  416e16:	jne    4170bd <main@@Base+0x1277d>
  416e1c:	add    rsi,0x10
  416e20:	mov    rax,QWORD PTR [rsp+0x20]
  416e25:	mov    DWORD PTR [rax],0x0
  416e2b:	jmp    416ef1 <main@@Base+0x125b1>
  416e30:	mov    rdi,r15
  416e33:	mov    rsi,r12
  416e36:	mov    rdx,r14
  416e39:	call   41ff40 <flatcc_json_parser_unmatched_symbol@@Base>
  416e3e:	mov    r12,rax
  416e41:	jmp    4170d8 <main@@Base+0x12798>
  416e46:	cmp    al,0x22
  416e48:	jne    4170bd <main@@Base+0x1277d>
  416e4e:	add    rsi,0x10
  416e52:	mov    rax,r14
  416e55:	sub    rax,rsi
  416e58:	cmp    rax,0x2
  416e5c:	jl     416e76 <main@@Base+0x12536>
  416e5e:	cmp    BYTE PTR [rsi],0x20
  416e61:	jg     416e84 <main@@Base+0x12544>
  416e63:	jne    416e76 <main@@Base+0x12536>
  416e65:	cmp    BYTE PTR [rsi+0x1],0x20
  416e69:	jle    416e76 <main@@Base+0x12536>
  416e6b:	add    rsi,0x1
  416e6f:	cmp    rsi,r14
  416e72:	jne    416e89 <main@@Base+0x12549>
  416e74:	jmp    416ed0 <main@@Base+0x12590>
  416e76:	mov    rdi,r15
  416e79:	mov    rdx,r14
  416e7c:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  416e81:	mov    rsi,rax
  416e84:	cmp    rsi,r14
  416e87:	je     416ed0 <main@@Base+0x12590>
  416e89:	cmp    BYTE PTR [rsi],0x3a
  416e8c:	jne    416ed0 <main@@Base+0x12590>
  416e8e:	lea    rbx,[rsi+0x1]
  416e92:	mov    rax,r14
  416e95:	sub    rax,rbx
  416e98:	cmp    rax,0x2
  416e9c:	jl     416f84 <main@@Base+0x12644>
  416ea2:	cmp    BYTE PTR [rbx],0x20
  416ea5:	jg     416f95 <main@@Base+0x12655>
  416eab:	jne    416f84 <main@@Base+0x12644>
  416eb1:	cmp    BYTE PTR [rsi+0x2],0x20
  416eb5:	jle    416f84 <main@@Base+0x12644>
  416ebb:	add    rsi,0x2
  416ebf:	mov    rbx,rsi
  416ec2:	cmp    r12,rbx
  416ec5:	jne    416f9e <main@@Base+0x1265e>
  416ecb:	jmp    4170bd <main@@Base+0x1277d>
  416ed0:	mov    ecx,0x4
  416ed5:	mov    rdi,r15
  416ed8:	mov    rdx,r14
  416edb:	call   41f940 <flatcc_json_parser_set_error@@Base>
  416ee0:	jmp    416f92 <main@@Base+0x12652>
  416ee5:	cmp    al,0x22
  416ee7:	jne    4170bd <main@@Base+0x1277d>
  416eed:	add    rsi,0x11
  416ef1:	mov    rax,r14
  416ef4:	sub    rax,rsi
  416ef7:	cmp    rax,0x2
  416efb:	jl     416f15 <main@@Base+0x125d5>
  416efd:	cmp    BYTE PTR [rsi],0x20
  416f00:	jg     416f23 <main@@Base+0x125e3>
  416f02:	jne    416f15 <main@@Base+0x125d5>
  416f04:	cmp    BYTE PTR [rsi+0x1],0x20
  416f08:	jle    416f15 <main@@Base+0x125d5>
  416f0a:	add    rsi,0x1
  416f0e:	cmp    rsi,r14
  416f11:	jne    416f28 <main@@Base+0x125e8>
  416f13:	jmp    416f6f <main@@Base+0x1262f>
  416f15:	mov    rdi,r15
  416f18:	mov    rdx,r14
  416f1b:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  416f20:	mov    rsi,rax
  416f23:	cmp    rsi,r14
  416f26:	je     416f6f <main@@Base+0x1262f>
  416f28:	cmp    BYTE PTR [rsi],0x3a
  416f2b:	jne    416f6f <main@@Base+0x1262f>
  416f2d:	lea    rbx,[rsi+0x1]
  416f31:	mov    rax,r14
  416f34:	sub    rax,rbx
  416f37:	cmp    rax,0x2
  416f3b:	jl     417030 <main@@Base+0x126f0>
  416f41:	cmp    BYTE PTR [rbx],0x20
  416f44:	jg     417041 <main@@Base+0x12701>
  416f4a:	jne    417030 <main@@Base+0x126f0>
  416f50:	cmp    BYTE PTR [rsi+0x2],0x20
  416f54:	jle    417030 <main@@Base+0x126f0>
  416f5a:	add    rsi,0x2
  416f5e:	mov    rbx,rsi
  416f61:	cmp    r12,rbx
  416f64:	jne    417046 <main@@Base+0x12706>
  416f6a:	jmp    4170bd <main@@Base+0x1277d>
  416f6f:	mov    ecx,0x4
  416f74:	mov    rdi,r15
  416f77:	mov    rdx,r14
  416f7a:	call   41f940 <flatcc_json_parser_set_error@@Base>
  416f7f:	jmp    41703e <main@@Base+0x126fe>
  416f84:	mov    rdi,r15
  416f87:	mov    rsi,rbx
  416f8a:	mov    rdx,r14
  416f8d:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  416f92:	mov    rbx,rax
  416f95:	cmp    r12,rbx
  416f98:	je     4170bd <main@@Base+0x1277d>
  416f9e:	mov    QWORD PTR [rsp+0x38],0x0
  416fa7:	mov    DWORD PTR [rsp+0xc],0x0
  416faf:	mov    QWORD PTR [rsp+0x30],0x0
  416fb8:	cmp    rbx,r14
  416fbb:	je     41700a <main@@Base+0x126ca>
  416fbd:	mov    rdi,r15
  416fc0:	mov    rsi,rbx
  416fc3:	mov    rdx,r14
  416fc6:	lea    rcx,[rsp+0xc]
  416fcb:	lea    r8,[rsp+0x38]
  416fd0:	call   4215e0 <flatcc_json_parser_integer@@Base>
  416fd5:	cmp    rax,rbx
  416fd8:	je     41701d <main@@Base+0x126dd>
  416fda:	mov    r12,rax
  416fdd:	mov    rbp,QWORD PTR [rsp+0x38]
  416fe2:	cmp    DWORD PTR [rsp+0xc],0x0
  416fe7:	je     416a7f <main@@Base+0x1213f>
  416fed:	movabs rax,0x8000000000000000
  416ff7:	cmp    rbp,rax
  416ffa:	jbe    416aa3 <main@@Base+0x12163>
  417000:	mov    ecx,0x8
  417005:	jmp    416a89 <main@@Base+0x12149>
  41700a:	xor    ebp,ebp
  41700c:	mov    r12,r14
  41700f:	cmp    rbx,r12
  417012:	jne    416ae4 <main@@Base+0x121a4>
  417018:	jmp    416ab0 <main@@Base+0x12170>
  41701d:	xor    ebp,ebp
  41701f:	mov    r12,rbx
  417022:	cmp    rbx,r12
  417025:	jne    416ae4 <main@@Base+0x121a4>
  41702b:	jmp    416ab0 <main@@Base+0x12170>
  417030:	mov    rdi,r15
  417033:	mov    rsi,rbx
  417036:	mov    rdx,r14
  417039:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  41703e:	mov    rbx,rax
  417041:	cmp    r12,rbx
  417044:	je     4170bd <main@@Base+0x1277d>
  417046:	mov    QWORD PTR [rsp+0x38],0x0
  41704f:	mov    DWORD PTR [rsp+0x30],0x0
  417057:	mov    DWORD PTR [rsp+0xc],0x0
  41705f:	xor    ebp,ebp
  417061:	cmp    rbx,r14
  417064:	je     416a6e <main@@Base+0x1212e>
  41706a:	mov    rdi,r15
  41706d:	mov    rsi,rbx
  417070:	mov    rdx,r14
  417073:	lea    rcx,[rsp+0x30]
  417078:	lea    r8,[rsp+0x38]
  41707d:	call   4215e0 <flatcc_json_parser_integer@@Base>
  417082:	cmp    rax,rbx
  417085:	je     416b23 <main@@Base+0x121e3>
  41708b:	mov    r12,rax
  41708e:	cmp    DWORD PTR [rsp+0x30],0x0
  417093:	je     416b2d <main@@Base+0x121ed>
  417099:	mov    ecx,0x8
  41709e:	mov    rdi,r15
  4170a1:	mov    rsi,r12
  4170a4:	mov    rdx,r14
  4170a7:	call   41f940 <flatcc_json_parser_set_error@@Base>
  4170ac:	mov    r12,rax
  4170af:	cmp    rbx,r12
  4170b2:	jne    416baa <main@@Base+0x1226a>
  4170b8:	jmp    416b6d <main@@Base+0x1222d>
  4170bd:	mov    rdi,r15
  4170c0:	mov    rsi,r12
  4170c3:	mov    rdx,r14
  4170c6:	call   41ff40 <flatcc_json_parser_unmatched_symbol@@Base>
  4170cb:	mov    r12,rax
  4170ce:	movabs rbx,0x625f73746172745f
  4170d8:	mov    rax,r14
  4170db:	sub    rax,r12
  4170de:	cmp    rax,0x2
  4170e2:	jl     417103 <main@@Base+0x127c3>
  4170e4:	cmp    BYTE PTR [r12],0x20
  4170e9:	jg     417114 <main@@Base+0x127d4>
  4170eb:	jne    417103 <main@@Base+0x127c3>
  4170ed:	cmp    BYTE PTR [r12+0x1],0x20
  4170f3:	jle    417103 <main@@Base+0x127c3>
  4170f5:	add    r12,0x1
  4170f9:	cmp    r12,r14
  4170fc:	jne    41711d <main@@Base+0x127dd>
  4170fe:	jmp    41719d <main@@Base+0x1285d>
  417103:	mov    rdi,r15
  417106:	mov    rsi,r12
  417109:	mov    rdx,r14
  41710c:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  417111:	mov    r12,rax
  417114:	cmp    r12,r14
  417117:	je     41719d <main@@Base+0x1285d>
  41711d:	movzx  eax,BYTE PTR [r12]
  417122:	cmp    al,0x2c
  417124:	jne    4171a2 <main@@Base+0x12862>
  417126:	lea    rdx,[r12+0x1]
  41712b:	mov    rax,r14
  41712e:	sub    rax,rdx
  417131:	cmp    rax,0x2
  417135:	jl     417157 <main@@Base+0x12817>
  417137:	cmp    BYTE PTR [rdx],0x20
  41713a:	jg     417168 <main@@Base+0x12828>
  41713c:	jne    417157 <main@@Base+0x12817>
  41713e:	cmp    BYTE PTR [r12+0x2],0x20
  417144:	jle    417157 <main@@Base+0x12817>
  417146:	add    r12,0x2
  41714a:	mov    rdx,r12
  41714d:	cmp    rdx,r14
  417150:	jne    41716d <main@@Base+0x1282d>
  417152:	jmp    4171e0 <main@@Base+0x128a0>
  417157:	mov    rdi,r15
  41715a:	mov    rsi,rdx
  41715d:	mov    rdx,r14
  417160:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  417165:	mov    rdx,rax
  417168:	cmp    rdx,r14
  41716b:	je     4171e0 <main@@Base+0x128a0>
  41716d:	cmp    BYTE PTR [rdx],0x7d
  417170:	jne    416bea <main@@Base+0x122aa>
  417176:	lea    rbp,[rdx+0x1]
  41717a:	mov    rax,r14
  41717d:	sub    rax,rbp
  417180:	cmp    rax,0x2
  417184:	jl     4171d0 <main@@Base+0x12890>
  417186:	cmp    BYTE PTR [rbp+0x0],0x20
  41718a:	jg     417203 <main@@Base+0x128c3>
  41718c:	jne    4171d0 <main@@Base+0x12890>
  41718e:	cmp    BYTE PTR [rdx+0x2],0x20
  417192:	jle    4171d0 <main@@Base+0x12890>
  417194:	add    rdx,0x2
  417198:	mov    rbp,rdx
  41719b:	jmp    417203 <main@@Base+0x128c3>
  41719d:	mov    rbp,r14
  4171a0:	jmp    417203 <main@@Base+0x128c3>
  4171a2:	cmp    al,0x7d
  4171a4:	jne    4171ed <main@@Base+0x128ad>
  4171a6:	lea    rbp,[r12+0x1]
  4171ab:	mov    rax,r14
  4171ae:	sub    rax,rbp
  4171b1:	cmp    rax,0x2
  4171b5:	jl     4171d0 <main@@Base+0x12890>
  4171b7:	cmp    BYTE PTR [rbp+0x0],0x20
  4171bb:	jg     417203 <main@@Base+0x128c3>
  4171bd:	jne    4171d0 <main@@Base+0x12890>
  4171bf:	cmp    BYTE PTR [r12+0x2],0x20
  4171c5:	jle    4171d0 <main@@Base+0x12890>
  4171c7:	add    r12,0x2
  4171cb:	mov    rbp,r12
  4171ce:	jmp    417203 <main@@Base+0x128c3>
  4171d0:	mov    rdi,r15
  4171d3:	mov    rsi,rbp
  4171d6:	mov    rdx,r14
  4171d9:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  4171de:	jmp    417200 <main@@Base+0x128c0>
  4171e0:	mov    ecx,0xa
  4171e5:	mov    rdi,r15
  4171e8:	mov    rsi,r14
  4171eb:	jmp    4171f8 <main@@Base+0x128b8>
  4171ed:	mov    ecx,0xa
  4171f2:	mov    rdi,r15
  4171f5:	mov    rsi,r12
  4171f8:	mov    rdx,r14
  4171fb:	call   41f940 <flatcc_json_parser_set_error@@Base>
  417200:	mov    rbp,rax
  417203:	mov    rax,QWORD PTR [rsp+0x28]
  417208:	cmp    DWORD PTR [rax],0x0
  41720b:	jne    418a7d <main@@Base+0x1413d>
  417211:	mov    rdi,QWORD PTR [r15]
  417214:	call   41cf10 <flatcc_builder_end_table@@Base>
  417219:	test   eax,eax
  41721b:	je     418a7d <main@@Base+0x1413d>
  417221:	mov    ebx,eax
  417223:	mov    rdi,QWORD PTR [r15]
  417226:	mov    esi,0x1
  41722b:	jmp    418971 <main@@Base+0x14031>
  417230:	mov    ecx,0xa
  417235:	mov    rdi,r15
  417238:	mov    rsi,r12
  41723b:	mov    rdx,r14
  41723e:	call   41f940 <flatcc_json_parser_set_error@@Base>
  417243:	jmp    417270 <main@@Base+0x12930>
  417245:	mov    r15,QWORD PTR [rsp+0x10]
  41724a:	mov    r13,QWORD PTR [rsp+0x18]
  41724f:	jne    417262 <main@@Base+0x12922>
  417251:	cmp    BYTE PTR [r12+0x2],0x20
  417257:	jle    417262 <main@@Base+0x12922>
  417259:	add    r12,0x2
  41725d:	mov    rbp,r12
  417260:	jmp    417273 <main@@Base+0x12933>
  417262:	mov    rdi,r15
  417265:	mov    rsi,rbp
  417268:	mov    rdx,r14
  41726b:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  417270:	mov    rbp,rax
  417273:	mov    rax,QWORD PTR [rsp+0x28]
  417278:	cmp    DWORD PTR [rax],0x0
  41727b:	jne    418a7d <main@@Base+0x1413d>
  417281:	mov    rdi,QWORD PTR [r15]
  417284:	call   41cf10 <flatcc_builder_end_table@@Base>
  417289:	test   eax,eax
  41728b:	je     418a7d <main@@Base+0x1413d>
  417291:	mov    ebx,eax
  417293:	mov    rdi,QWORD PTR [r15]
  417296:	mov    esi,0x2
  41729b:	jmp    418971 <main@@Base+0x14031>
  4172a0:	mov    rbp,r14
  4172a3:	cmp    rbx,rbp
  4172a6:	jne    417331 <main@@Base+0x129f1>
  4172ac:	jmp    4172fb <main@@Base+0x129bb>
  4172ae:	mov    rbp,rbx
  4172b1:	cmp    rbx,rbp
  4172b4:	jne    417331 <main@@Base+0x129f1>
  4172b6:	jmp    4172fb <main@@Base+0x129bb>
  4172b8:	mov    DWORD PTR [rsp+0xc],eax
  4172bc:	mov    r12d,eax
  4172bf:	mov    r15,QWORD PTR [rsp+0x10]
  4172c4:	mov    rax,rsi
  4172c7:	jmp    4186ab <main@@Base+0x13d6b>
  4172cc:	mov    rax,QWORD PTR [rsp+0x38]
  4172d1:	mov    rcx,rax
  4172d4:	shr    rcx,0x20
  4172d8:	je     41737b <main@@Base+0x12a3b>
  4172de:	mov    ecx,0x7
  4172e3:	mov    rdi,QWORD PTR [rsp+0x10]
  4172e8:	mov    rsi,rbp
  4172eb:	mov    rdx,r14
  4172ee:	call   41f940 <flatcc_json_parser_set_error@@Base>
  4172f3:	mov    rbp,rax
  4172f6:	cmp    rbx,rbp
  4172f9:	jne    417331 <main@@Base+0x129f1>
  4172fb:	mov    rdi,QWORD PTR [rsp+0x10]
  417300:	mov    rsi,rbx
  417303:	mov    rdx,r14
  417306:	lea    rcx,[rip+0x142f3]        # 42b600 <filename@@Base+0x530>
  41730d:	lea    r8,[rsp+0xc]
  417312:	call   414830 <main@@Base+0xfef0>
  417317:	mov    rbp,rax
  41731a:	cmp    rax,rbx
  41731d:	je     418a9f <main@@Base+0x1415f>
  417323:	cmp    rbp,r14
  417326:	je     418a9f <main@@Base+0x1415f>
  41732c:	mov    r15d,DWORD PTR [rsp+0xc]
  417331:	test   r15d,r15d
  417334:	jne    417341 <main@@Base+0x12a01>
  417336:	mov    rax,QWORD PTR [rsp+0x10]
  41733b:	test   BYTE PTR [rax+0x10],0x2
  41733f:	je     417369 <main@@Base+0x12a29>
  417341:	mov    rax,QWORD PTR [rsp+0x10]
  417346:	mov    rdi,QWORD PTR [rax]
  417349:	mov    esi,0x8
  41734e:	mov    edx,0x4
  417353:	mov    ecx,0x4
  417358:	call   41d880 <flatcc_builder_table_add@@Base>
  41735d:	test   rax,rax
  417360:	je     418a9f <main@@Base+0x1415f>
  417366:	mov    DWORD PTR [rax],r15d
  417369:	mov    r15,QWORD PTR [rsp+0x10]
  41736e:	mov    r13,QWORD PTR [rsp+0x18]
  417373:	mov    rdx,rbp
  417376:	jmp    418834 <main@@Base+0x13ef4>
  41737b:	mov    DWORD PTR [rsp+0xc],eax
  41737f:	mov    r15d,eax
  417382:	cmp    rbx,rbp
  417385:	jne    417331 <main@@Base+0x129f1>
  417387:	jmp    4172fb <main@@Base+0x129bb>
  41738c:	mov    r10,r14
  41738f:	cmp    rsi,r14
  417392:	je     4173d3 <main@@Base+0x12a93>
  417394:	movzx  eax,BYTE PTR [rsi]
  417397:	cmp    al,0x2e
  417399:	je     4173b0 <main@@Base+0x12a70>
  41739b:	cmp    al,0x22
  41739d:	jne    4173c5 <main@@Base+0x12a85>
  41739f:	add    rsi,0x1
  4173a3:	mov    rax,QWORD PTR [rsp+0x20]
  4173a8:	mov    DWORD PTR [rax],0x0
  4173ae:	jmp    4173d0 <main@@Base+0x12a90>
  4173b0:	mov    ecx,0x5
  4173b5:	mov    rdi,r15
  4173b8:	mov    rdx,r14
  4173bb:	call   41f940 <flatcc_json_parser_set_error@@Base>
  4173c0:	mov    r10,rax
  4173c3:	jmp    4173d3 <main@@Base+0x12a93>
  4173c5:	mov    rax,QWORD PTR [rsp+0x20]
  4173ca:	mov    DWORD PTR [rax],0x1
  4173d0:	mov    r10,rsi
  4173d3:	mov    r13,r14
  4173d6:	sub    r13,r10
  4173d9:	cmp    r13,0x8
  4173dd:	jb     4173e9 <main@@Base+0x12aa9>
  4173df:	movbe  rbx,QWORD PTR [r10]
  4173e4:	jmp    417472 <main@@Base+0x12b32>
  4173e9:	mov    eax,r13d
  4173ec:	and    al,0xf
  4173ee:	add    al,0xff
  4173f0:	cmp    al,0x7
  4173f2:	ja     417e9a <main@@Base+0x1355a>
  4173f8:	movzx  eax,al
  4173fb:	lea    rcx,[rip+0xd4c2]        # 4248c4 <_IO_stdin_used@@Base+0x8c4>
  417402:	movsxd rsi,DWORD PTR [rcx+rax*4]
  417406:	add    rsi,rcx
  417409:	xor    r8d,r8d
  41740c:	xor    eax,eax
  41740e:	xor    ecx,ecx
  417410:	xor    edx,edx
  417412:	xor    edi,edi
  417414:	xor    ebx,ebx
  417416:	xor    ebp,ebp
  417418:	jmp    rsi
  41741a:	movsx  r8,BYTE PTR [r10+0x7]
  41741f:	movsx  rax,BYTE PTR [r10+0x6]
  417424:	shl    rax,0x8
  417428:	or     rax,r8
  41742b:	movsx  rcx,BYTE PTR [r10+0x5]
  417430:	shl    rcx,0x10
  417434:	or     rcx,rax
  417437:	movsx  rdx,BYTE PTR [r10+0x4]
  41743c:	shl    rdx,0x18
  417440:	or     rdx,rcx
  417443:	movsx  rdi,BYTE PTR [r10+0x3]
  417448:	shl    rdi,0x20
  41744c:	or     rdi,rdx
  41744f:	movsx  rbx,BYTE PTR [r10+0x2]
  417454:	shl    rbx,0x28
  417458:	or     rbx,rdi
  41745b:	movsx  rbp,BYTE PTR [r10+0x1]
  417460:	shl    rbp,0x30
  417464:	or     rbp,rbx
  417467:	movzx  ebx,BYTE PTR [r10]
  41746b:	shl    rbx,0x38
  41746f:	or     rbx,rbp
  417472:	movabs rdx,0x6363636300000000
  41747c:	movabs rsi,0x6262626200000000
  417486:	cmp    rbx,rdx
  417489:	movabs rcx,0x616161615f626262
  417493:	jae    4174c5 <main@@Base+0x12b85>
  417495:	lea    rax,[rcx-0x2e302f2e]
  41749c:	cmp    rbx,rax
  41749f:	jne    41751d <main@@Base+0x12bdd>
  4174a1:	lea    r12,[r10+0x8]
  4174a5:	mov    rax,r14
  4174a8:	sub    rax,r12
  4174ab:	cmp    rax,0x8
  4174af:	jb     4175e0 <main@@Base+0x12ca0>
  4174b5:	movbe  rcx,QWORD PTR [r12]
  4174bb:	mov    r13,QWORD PTR [rsp+0x18]
  4174c0:	jmp    417672 <main@@Base+0x12d32>
  4174c5:	lea    rax,[rdx+0x31323334]
  4174cc:	cmp    rbx,rax
  4174cf:	jne    417582 <main@@Base+0x12c42>
  4174d5:	mov    rbx,r10
  4174d8:	cmp    r13,0x9
  4174dc:	mov    r13,QWORD PTR [rsp+0x18]
  4174e1:	jl     4178a2 <main@@Base+0x12f62>
  4174e7:	mov    rax,QWORD PTR [rsp+0x20]
  4174ec:	cmp    DWORD PTR [rax],0x0
  4174ef:	movzx  eax,BYTE PTR [r10+0x8]
  4174f4:	je     4176cf <main@@Base+0x12d8f>
  4174fa:	cmp    al,0x21
  4174fc:	jl     417509 <main@@Base+0x12bc9>
  4174fe:	mov    rbx,r10
  417501:	cmp    al,0x3a
  417503:	jne    4178a2 <main@@Base+0x12f62>
  417509:	lea    rsi,[r10+0x8]
  41750d:	mov    rax,QWORD PTR [rsp+0x20]
  417512:	mov    DWORD PTR [rax],0x0
  417518:	jmp    4176de <main@@Base+0x12d9e>
  41751d:	mov    r12,rbx
  417520:	movabs rax,0xffffffff00000000
  41752a:	and    r12,rax
  41752d:	lea    rax,[rcx-0x5f626262]
  417534:	cmp    r12,rax
  417537:	jne    417ce8 <main@@Base+0x133a8>
  41753d:	mov    rax,r10
  417540:	cmp    r13,0x5
  417544:	jl     417cb8 <main@@Base+0x13378>
  41754a:	mov    rax,QWORD PTR [rsp+0x20]
  41754f:	cmp    DWORD PTR [rax],0x0
  417552:	movzx  ecx,BYTE PTR [r10+0x4]
  417557:	je     417708 <main@@Base+0x12dc8>
  41755d:	cmp    cl,0x21
  417560:	jl     41756e <main@@Base+0x12c2e>
  417562:	mov    rax,r10
  417565:	cmp    cl,0x3a
  417568:	jne    417cb8 <main@@Base+0x13378>
  41756e:	lea    rsi,[r10+0x4]
  417572:	mov    rax,QWORD PTR [rsp+0x20]
  417577:	mov    DWORD PTR [rax],0x0
  41757d:	jmp    417718 <main@@Base+0x12dd8>
  417582:	mov    rax,rbx
  417585:	movabs rcx,0xffffffff00000000
  41758f:	and    rax,rcx
  417592:	cmp    rax,rdx
  417595:	jne    417e4f <main@@Base+0x1350f>
  41759b:	mov    rax,r10
  41759e:	cmp    r13,0x5
  4175a2:	jl     417e00 <main@@Base+0x134c0>
  4175a8:	mov    rax,QWORD PTR [rsp+0x20]
  4175ad:	cmp    DWORD PTR [rax],0x0
  4175b0:	movzx  ecx,BYTE PTR [r10+0x4]
  4175b5:	je     417742 <main@@Base+0x12e02>
  4175bb:	cmp    cl,0x21
  4175be:	jl     4175cc <main@@Base+0x12c8c>
  4175c0:	mov    rax,r10
  4175c3:	cmp    cl,0x3a
  4175c6:	jne    417e00 <main@@Base+0x134c0>
  4175cc:	lea    rsi,[r10+0x4]
  4175d0:	mov    rax,QWORD PTR [rsp+0x20]
  4175d5:	mov    DWORD PTR [rax],0x0
  4175db:	jmp    417752 <main@@Base+0x12e12>
  4175e0:	mov    ecx,eax
  4175e2:	and    cl,0xf
  4175e5:	add    cl,0xff
  4175e8:	cmp    cl,0x7
  4175eb:	mov    r13,QWORD PTR [rsp+0x18]
  4175f0:	ja     418823 <main@@Base+0x13ee3>
  4175f6:	movzx  ecx,cl
  4175f9:	lea    rdx,[rip+0xd324]        # 424924 <_IO_stdin_used@@Base+0x924>
  417600:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  417604:	add    rcx,rdx
  417607:	xor    r8d,r8d
  41760a:	xor    r9d,r9d
  41760d:	xor    edx,edx
  41760f:	xor    esi,esi
  417611:	xor    ebx,ebx
  417613:	xor    edi,edi
  417615:	xor    ebp,ebp
  417617:	jmp    rcx
  417619:	movsx  r8,BYTE PTR [r10+0xf]
  41761e:	movsx  r9,BYTE PTR [r10+0xe]
  417623:	shl    r9,0x8
  417627:	or     r9,r8
  41762a:	movsx  rdx,BYTE PTR [r10+0xd]
  41762f:	shl    rdx,0x10
  417633:	or     rdx,r9
  417636:	movsx  rsi,BYTE PTR [r10+0xc]
  41763b:	shl    rsi,0x18
  41763f:	or     rsi,rdx
  417642:	movsx  rbx,BYTE PTR [r10+0xb]
  417647:	shl    rbx,0x20
  41764b:	or     rbx,rsi
  41764e:	movsx  rdi,BYTE PTR [r10+0xa]
  417653:	shl    rdi,0x28
  417657:	or     rdi,rbx
  41765a:	movsx  rbp,BYTE PTR [r10+0x9]
  41765f:	shl    rbp,0x30
  417663:	or     rbp,rdi
  417666:	movzx  ecx,BYTE PTR [r12]
  41766b:	shl    rcx,0x38
  41766f:	or     rcx,rbp
  417672:	movabs rdx,0xff00000000000000
  41767c:	and    rcx,rdx
  41767f:	movabs rdx,0x3500000000000000
  417689:	cmp    rcx,rdx
  41768c:	jne    418823 <main@@Base+0x13ee3>
  417692:	cmp    rax,0x2
  417696:	jl     418823 <main@@Base+0x13ee3>
  41769c:	mov    rax,QWORD PTR [rsp+0x20]
  4176a1:	cmp    DWORD PTR [rax],0x0
  4176a4:	movzx  eax,BYTE PTR [r10+0x9]
  4176a9:	je     41777c <main@@Base+0x12e3c>
  4176af:	cmp    al,0x21
  4176b1:	jl     4176bb <main@@Base+0x12d7b>
  4176b3:	cmp    al,0x3a
  4176b5:	jne    418823 <main@@Base+0x13ee3>
  4176bb:	add    r10,0x9
  4176bf:	mov    rax,QWORD PTR [rsp+0x20]
  4176c4:	mov    DWORD PTR [rax],0x0
  4176ca:	jmp    417788 <main@@Base+0x12e48>
  4176cf:	mov    rbx,r10
  4176d2:	cmp    al,0x22
  4176d4:	jne    4178a2 <main@@Base+0x12f62>
  4176da:	lea    rsi,[r10+0x9]
  4176de:	mov    rax,r14
  4176e1:	sub    rax,rsi
  4176e4:	cmp    rax,0x2
  4176e8:	jl     41783b <main@@Base+0x12efb>
  4176ee:	cmp    BYTE PTR [rsi],0x20
  4176f1:	jle    417825 <main@@Base+0x12ee5>
  4176f7:	mov    rbp,r10
  4176fa:	cmp    rsi,r14
  4176fd:	jne    417851 <main@@Base+0x12f11>
  417703:	jmp    41787c <main@@Base+0x12f3c>
  417708:	mov    rax,r10
  41770b:	cmp    cl,0x22
  41770e:	jne    417cb8 <main@@Base+0x13378>
  417714:	lea    rsi,[r10+0x5]
  417718:	mov    rax,r14
  41771b:	sub    rax,rsi
  41771e:	cmp    rax,0x2
  417722:	jl     417b37 <main@@Base+0x131f7>
  417728:	cmp    BYTE PTR [rsi],0x20
  41772b:	jle    417b21 <main@@Base+0x131e1>
  417731:	mov    rbp,r10
  417734:	cmp    rsi,r14
  417737:	jne    417b4d <main@@Base+0x1320d>
  41773d:	jmp    417b8b <main@@Base+0x1324b>
  417742:	mov    rax,r10
  417745:	cmp    cl,0x22
  417748:	jne    417e00 <main@@Base+0x134c0>
  41774e:	lea    rsi,[r10+0x5]
  417752:	mov    rax,r14
  417755:	sub    rax,rsi
  417758:	cmp    rax,0x2
  41775c:	jl     417bb6 <main@@Base+0x13276>
  417762:	cmp    BYTE PTR [rsi],0x20
  417765:	jle    417ba0 <main@@Base+0x13260>
  41776b:	mov    rbp,r10
  41776e:	cmp    rsi,r14
  417771:	jne    417bcc <main@@Base+0x1328c>
  417777:	jmp    417c0a <main@@Base+0x132ca>
  41777c:	cmp    al,0x22
  41777e:	jne    418823 <main@@Base+0x13ee3>
  417784:	add    r10,0xa
  417788:	mov    rax,r14
  41778b:	sub    rax,r10
  41778e:	cmp    rax,0x2
  417792:	jl     4177ae <main@@Base+0x12e6e>
  417794:	cmp    BYTE PTR [r10],0x20
  417798:	jg     4177bf <main@@Base+0x12e7f>
  41779a:	jne    4177ae <main@@Base+0x12e6e>
  41779c:	cmp    BYTE PTR [r10+0x1],0x20
  4177a1:	jle    4177ae <main@@Base+0x12e6e>
  4177a3:	add    r10,0x1
  4177a7:	cmp    r10,r14
  4177aa:	jne    4177c4 <main@@Base+0x12e84>
  4177ac:	jmp    41780d <main@@Base+0x12ecd>
  4177ae:	mov    rdi,r15
  4177b1:	mov    rsi,r10
  4177b4:	mov    rdx,r14
  4177b7:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  4177bc:	mov    r10,rax
  4177bf:	cmp    r10,r14
  4177c2:	je     41780d <main@@Base+0x12ecd>
  4177c4:	cmp    BYTE PTR [r10],0x3a
  4177c8:	jne    41780d <main@@Base+0x12ecd>
  4177ca:	lea    rbx,[r10+0x1]
  4177ce:	mov    rax,r14
  4177d1:	sub    rax,rbx
  4177d4:	cmp    rax,0x2
  4177d8:	jl     417eee <main@@Base+0x135ae>
  4177de:	cmp    BYTE PTR [rbx],0x20
  4177e1:	jg     417eff <main@@Base+0x135bf>
  4177e7:	jne    417eee <main@@Base+0x135ae>
  4177ed:	cmp    BYTE PTR [r10+0x2],0x20
  4177f2:	jle    417eee <main@@Base+0x135ae>
  4177f8:	add    r10,0x2
  4177fc:	mov    rbx,r10
  4177ff:	cmp    r12,rbx
  417802:	jne    417f08 <main@@Base+0x135c8>
  417808:	jmp    418823 <main@@Base+0x13ee3>
  41780d:	mov    ecx,0x4
  417812:	mov    rdi,r15
  417815:	mov    rsi,r10
  417818:	mov    rdx,r14
  41781b:	call   41f940 <flatcc_json_parser_set_error@@Base>
  417820:	jmp    417efc <main@@Base+0x135bc>
  417825:	jne    41783b <main@@Base+0x12efb>
  417827:	cmp    BYTE PTR [rsi+0x1],0x20
  41782b:	jle    41783b <main@@Base+0x12efb>
  41782d:	mov    rbp,r10
  417830:	add    rsi,0x1
  417834:	cmp    rsi,r14
  417837:	jne    417851 <main@@Base+0x12f11>
  417839:	jmp    41787c <main@@Base+0x12f3c>
  41783b:	mov    rbp,r10
  41783e:	mov    rdi,r15
  417841:	mov    rdx,r14
  417844:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  417849:	mov    rsi,rax
  41784c:	cmp    rsi,r14
  41784f:	je     41787c <main@@Base+0x12f3c>
  417851:	cmp    BYTE PTR [rsi],0x3a
  417854:	jne    41787c <main@@Base+0x12f3c>
  417856:	lea    rbx,[rsi+0x1]
  41785a:	mov    rax,r14
  41785d:	sub    rax,rbx
  417860:	cmp    rax,0x2
  417864:	jl     41788e <main@@Base+0x12f4e>
  417866:	cmp    BYTE PTR [rbx],0x20
  417869:	jg     41789f <main@@Base+0x12f5f>
  41786b:	jne    41788e <main@@Base+0x12f4e>
  41786d:	cmp    BYTE PTR [rsi+0x2],0x20
  417871:	jle    41788e <main@@Base+0x12f4e>
  417873:	add    rsi,0x2
  417877:	mov    rbx,rsi
  41787a:	jmp    41789f <main@@Base+0x12f5f>
  41787c:	mov    ecx,0x4
  417881:	mov    rdi,r15
  417884:	mov    rdx,r14
  417887:	call   41f940 <flatcc_json_parser_set_error@@Base>
  41788c:	jmp    41789c <main@@Base+0x12f5c>
  41788e:	mov    rdi,r15
  417891:	mov    rsi,rbx
  417894:	mov    rdx,r14
  417897:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  41789c:	mov    rbx,rax
  41789f:	mov    r10,rbp
  4178a2:	cmp    r10,rbx
  4178a5:	je     417917 <main@@Base+0x12fd7>
  4178a7:	mov    QWORD PTR [rsp+0x38],0x0
  4178b0:	mov    DWORD PTR [rsp+0xc],0x0
  4178b8:	mov    QWORD PTR [rsp+0x30],0x0
  4178c1:	cmp    rbx,r14
  4178c4:	je     417932 <main@@Base+0x12ff2>
  4178c6:	mov    rdi,r15
  4178c9:	mov    rsi,rbx
  4178cc:	mov    rdx,r14
  4178cf:	lea    rcx,[rsp+0xc]
  4178d4:	lea    r8,[rsp+0x38]
  4178d9:	call   4215e0 <flatcc_json_parser_integer@@Base>
  4178de:	cmp    rax,rbx
  4178e1:	je     417a2f <main@@Base+0x130ef>
  4178e7:	mov    rdx,rax
  4178ea:	mov    rbp,QWORD PTR [rsp+0x38]
  4178ef:	cmp    DWORD PTR [rsp+0xc],0x0
  4178f4:	je     417a3b <main@@Base+0x130fb>
  4178fa:	movabs rax,0x8000000000000000
  417904:	cmp    rbp,rax
  417907:	jbe    417a5f <main@@Base+0x1311f>
  41790d:	mov    ecx,0x8
  417912:	jmp    417a45 <main@@Base+0x13105>
  417917:	lea    r12,[r10+0x8]
  41791b:	mov    rax,r14
  41791e:	sub    rax,r12
  417921:	cmp    rax,0x8
  417925:	jb     417945 <main@@Base+0x13005>
  417927:	movbe  rcx,QWORD PTR [r12]
  41792d:	jmp    4179d2 <main@@Base+0x13092>
  417932:	xor    ebp,ebp
  417934:	mov    rdx,r14
  417937:	cmp    rbx,rdx
  41793a:	jne    417aa0 <main@@Base+0x13160>
  417940:	jmp    417a6c <main@@Base+0x1312c>
  417945:	mov    ecx,eax
  417947:	and    cl,0xf
  41794a:	add    cl,0xff
  41794d:	cmp    cl,0x7
  417950:	ja     418823 <main@@Base+0x13ee3>
  417956:	movzx  ecx,cl
  417959:	lea    rdx,[rip+0xcfa4]        # 424904 <_IO_stdin_used@@Base+0x904>
  417960:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  417964:	add    rcx,rdx
  417967:	xor    r8d,r8d
  41796a:	xor    r9d,r9d
  41796d:	xor    edx,edx
  41796f:	xor    esi,esi
  417971:	xor    ebx,ebx
  417973:	xor    edi,edi
  417975:	xor    ebp,ebp
  417977:	jmp    rcx
  417979:	movsx  r8,BYTE PTR [r10+0xf]
  41797e:	movsx  r9,BYTE PTR [r10+0xe]
  417983:	shl    r9,0x8
  417987:	or     r9,r8
  41798a:	movsx  rdx,BYTE PTR [r10+0xd]
  41798f:	shl    rdx,0x10
  417993:	or     rdx,r9
  417996:	movsx  rsi,BYTE PTR [r10+0xc]
  41799b:	shl    rsi,0x18
  41799f:	or     rsi,rdx
  4179a2:	movsx  rbx,BYTE PTR [r10+0xb]
  4179a7:	shl    rbx,0x20
  4179ab:	or     rbx,rsi
  4179ae:	movsx  rdi,BYTE PTR [r10+0xa]
  4179b3:	shl    rdi,0x28
  4179b7:	or     rdi,rbx
  4179ba:	movsx  rbp,BYTE PTR [r10+0x9]
  4179bf:	shl    rbp,0x30
  4179c3:	or     rbp,rdi
  4179c6:	movzx  ecx,BYTE PTR [r12]
  4179cb:	shl    rcx,0x38
  4179cf:	or     rcx,rbp
  4179d2:	movabs rdx,0xff00000000000000
  4179dc:	and    rcx,rdx
  4179df:	movabs rdx,0x3500000000000000
  4179e9:	cmp    rcx,rdx
  4179ec:	jne    418823 <main@@Base+0x13ee3>
  4179f2:	cmp    rax,0x2
  4179f6:	jl     418823 <main@@Base+0x13ee3>
  4179fc:	mov    rax,QWORD PTR [rsp+0x20]
  417a01:	cmp    DWORD PTR [rax],0x0
  417a04:	movzx  eax,BYTE PTR [r10+0x9]
  417a09:	je     417ad8 <main@@Base+0x13198>
  417a0f:	cmp    al,0x21
  417a11:	jl     417a1b <main@@Base+0x130db>
  417a13:	cmp    al,0x3a
  417a15:	jne    418823 <main@@Base+0x13ee3>
  417a1b:	add    r10,0x9
  417a1f:	mov    rax,QWORD PTR [rsp+0x20]
  417a24:	mov    DWORD PTR [rax],0x0
  417a2a:	jmp    417ae4 <main@@Base+0x131a4>
  417a2f:	xor    ebp,ebp
  417a31:	mov    rdx,rbx
  417a34:	cmp    rbx,rdx
  417a37:	jne    417aa0 <main@@Base+0x13160>
  417a39:	jmp    417a6c <main@@Base+0x1312c>
  417a3b:	test   rbp,rbp
  417a3e:	jns    417a62 <main@@Base+0x13122>
  417a40:	mov    ecx,0x7
  417a45:	mov    rdi,r15
  417a48:	mov    rsi,rdx
  417a4b:	mov    rdx,r14
  417a4e:	call   41f940 <flatcc_json_parser_set_error@@Base>
  417a53:	mov    rdx,rax
  417a56:	xor    ebp,ebp
  417a58:	cmp    rbx,rdx
  417a5b:	jne    417aa0 <main@@Base+0x13160>
  417a5d:	jmp    417a6c <main@@Base+0x1312c>
  417a5f:	neg    rbp
  417a62:	mov    QWORD PTR [rsp+0x30],rbp
  417a67:	cmp    rbx,rdx
  417a6a:	jne    417aa0 <main@@Base+0x13160>
  417a6c:	mov    rdi,r15
  417a6f:	mov    rsi,rbx
  417a72:	mov    rdx,r14
  417a75:	lea    rcx,[rip+0x13b24]        # 42b5a0 <filename@@Base+0x4d0>
  417a7c:	lea    r8,[rsp+0x30]
  417a81:	call   414620 <main@@Base+0xfce0>
  417a86:	mov    rdx,rax
  417a89:	cmp    rax,rbx
  417a8c:	je     418a8a <main@@Base+0x1414a>
  417a92:	cmp    rdx,r14
  417a95:	je     418a8a <main@@Base+0x1414a>
  417a9b:	mov    rbp,QWORD PTR [rsp+0x30]
  417aa0:	test   rbp,rbp
  417aa3:	jne    417ab0 <main@@Base+0x13170>
  417aa5:	test   BYTE PTR [r15+0x10],0x2
  417aaa:	je     418834 <main@@Base+0x13ef4>
  417ab0:	mov    rbx,rdx
  417ab3:	mov    rdi,QWORD PTR [r15]
  417ab6:	mov    esi,0x5
  417abb:	mov    edx,0x8
  417ac0:	mov    ecx,0x8
  417ac5:	call   41d880 <flatcc_builder_table_add@@Base>
  417aca:	test   rax,rax
  417acd:	jne    41853c <main@@Base+0x13bfc>
  417ad3:	jmp    418a8d <main@@Base+0x1414d>
  417ad8:	cmp    al,0x22
  417ada:	jne    418823 <main@@Base+0x13ee3>
  417ae0:	add    r10,0xa
  417ae4:	mov    rax,r14
  417ae7:	sub    rax,r10
  417aea:	cmp    rax,0x2
  417aee:	jl     417c1f <main@@Base+0x132df>
  417af4:	cmp    BYTE PTR [r10],0x20
  417af8:	jg     417c30 <main@@Base+0x132f0>
  417afe:	jne    417c1f <main@@Base+0x132df>
  417b04:	cmp    BYTE PTR [r10+0x1],0x20
  417b09:	jle    417c1f <main@@Base+0x132df>
  417b0f:	add    r10,0x1
  417b13:	cmp    r10,r14
  417b16:	jne    417c35 <main@@Base+0x132f5>
  417b1c:	jmp    417c79 <main@@Base+0x13339>
  417b21:	jne    417b37 <main@@Base+0x131f7>
  417b23:	cmp    BYTE PTR [rsi+0x1],0x20
  417b27:	jle    417b37 <main@@Base+0x131f7>
  417b29:	mov    rbp,r10
  417b2c:	add    rsi,0x1
  417b30:	cmp    rsi,r14
  417b33:	jne    417b4d <main@@Base+0x1320d>
  417b35:	jmp    417b8b <main@@Base+0x1324b>
  417b37:	mov    rbp,r10
  417b3a:	mov    rdi,r15
  417b3d:	mov    rdx,r14
  417b40:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  417b45:	mov    rsi,rax
  417b48:	cmp    rsi,r14
  417b4b:	je     417b8b <main@@Base+0x1324b>
  417b4d:	cmp    BYTE PTR [rsi],0x3a
  417b50:	jne    417b8b <main@@Base+0x1324b>
  417b52:	lea    rax,[rsi+0x1]
  417b56:	mov    rcx,r14
  417b59:	sub    rcx,rax
  417b5c:	cmp    rcx,0x2
  417b60:	jl     417c9d <main@@Base+0x1335d>
  417b66:	cmp    BYTE PTR [rax],0x20
  417b69:	jg     417cab <main@@Base+0x1336b>
  417b6f:	jne    417c9d <main@@Base+0x1335d>
  417b75:	cmp    BYTE PTR [rsi+0x2],0x20
  417b79:	jle    417c9d <main@@Base+0x1335d>
  417b7f:	add    rsi,0x2
  417b83:	mov    rax,rsi
  417b86:	jmp    417cab <main@@Base+0x1336b>
  417b8b:	mov    ecx,0x4
  417b90:	mov    rdi,r15
  417b93:	mov    rdx,r14
  417b96:	call   41f940 <flatcc_json_parser_set_error@@Base>
  417b9b:	jmp    417cab <main@@Base+0x1336b>
  417ba0:	jne    417bb6 <main@@Base+0x13276>
  417ba2:	cmp    BYTE PTR [rsi+0x1],0x20
  417ba6:	jle    417bb6 <main@@Base+0x13276>
  417ba8:	mov    rbp,r10
  417bab:	add    rsi,0x1
  417baf:	cmp    rsi,r14
  417bb2:	jne    417bcc <main@@Base+0x1328c>
  417bb4:	jmp    417c0a <main@@Base+0x132ca>
  417bb6:	mov    rbp,r10
  417bb9:	mov    rdi,r15
  417bbc:	mov    rdx,r14
  417bbf:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  417bc4:	mov    rsi,rax
  417bc7:	cmp    rsi,r14
  417bca:	je     417c0a <main@@Base+0x132ca>
  417bcc:	cmp    BYTE PTR [rsi],0x3a
  417bcf:	jne    417c0a <main@@Base+0x132ca>
  417bd1:	lea    rax,[rsi+0x1]
  417bd5:	mov    rcx,r14
  417bd8:	sub    rcx,rax
  417bdb:	cmp    rcx,0x2
  417bdf:	jl     417def <main@@Base+0x134af>
  417be5:	cmp    BYTE PTR [rax],0x20
  417be8:	jg     417dfd <main@@Base+0x134bd>
  417bee:	jne    417def <main@@Base+0x134af>
  417bf4:	cmp    BYTE PTR [rsi+0x2],0x20
  417bf8:	jle    417def <main@@Base+0x134af>
  417bfe:	add    rsi,0x2
  417c02:	mov    rax,rsi
  417c05:	jmp    417dfd <main@@Base+0x134bd>
  417c0a:	mov    ecx,0x4
  417c0f:	mov    rdi,r15
  417c12:	mov    rdx,r14
  417c15:	call   41f940 <flatcc_json_parser_set_error@@Base>
  417c1a:	jmp    417dfd <main@@Base+0x134bd>
  417c1f:	mov    rdi,r15
  417c22:	mov    rsi,r10
  417c25:	mov    rdx,r14
  417c28:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  417c2d:	mov    r10,rax
  417c30:	cmp    r10,r14
  417c33:	je     417c79 <main@@Base+0x13339>
  417c35:	cmp    BYTE PTR [r10],0x3a
  417c39:	jne    417c79 <main@@Base+0x13339>
  417c3b:	lea    rbx,[r10+0x1]
  417c3f:	mov    rax,r14
  417c42:	sub    rax,rbx
  417c45:	cmp    rax,0x2
  417c49:	jl     41811b <main@@Base+0x137db>
  417c4f:	cmp    BYTE PTR [rbx],0x20
  417c52:	jg     417c6f <main@@Base+0x1332f>
  417c54:	jne    41811b <main@@Base+0x137db>
  417c5a:	mov    rcx,r10
  417c5d:	cmp    BYTE PTR [r10+0x2],0x20
  417c62:	jle    41811b <main@@Base+0x137db>
  417c68:	mov    rbx,rcx
  417c6b:	add    rbx,0x2
  417c6f:	mov    r15,QWORD PTR [rsp+0x10]
  417c74:	jmp    418131 <main@@Base+0x137f1>
  417c79:	mov    ecx,0x4
  417c7e:	mov    rdi,r15
  417c81:	mov    rsi,r10
  417c84:	mov    rdx,r14
  417c87:	call   41f940 <flatcc_json_parser_set_error@@Base>
  417c8c:	mov    rbx,rax
  417c8f:	cmp    r12,rbx
  417c92:	jne    41813f <main@@Base+0x137ff>
  417c98:	jmp    418823 <main@@Base+0x13ee3>
  417c9d:	mov    rdi,r15
  417ca0:	mov    rsi,rax
  417ca3:	mov    rdx,r14
  417ca6:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  417cab:	movabs rsi,0x6262626200000000
  417cb5:	mov    r10,rbp
  417cb8:	cmp    r10,rax
  417cbb:	je     417ce8 <main@@Base+0x133a8>
  417cbd:	mov    rdi,r15
  417cc0:	mov    rsi,rax
  417cc3:	mov    rdx,r14
  417cc6:	lea    rcx,[rsp+0x44]
  417ccb:	call   421ab0 <flatcc_json_parser_build_string@@Base>
  417cd0:	mov    rbx,rax
  417cd3:	cmp    DWORD PTR [rsp+0x44],0x0
  417cd8:	je     418a8d <main@@Base+0x1414d>
  417cde:	mov    rdi,QWORD PTR [r15]
  417ce1:	xor    esi,esi
  417ce3:	jmp    417e2e <main@@Base+0x134ee>
  417ce8:	lea    rax,[rsi+0x31323334]
  417cef:	cmp    rbx,rax
  417cf2:	jne    417d35 <main@@Base+0x133f5>
  417cf4:	mov    rbx,r10
  417cf7:	cmp    r13,0x9
  417cfb:	mov    r13,QWORD PTR [rsp+0x18]
  417d00:	jl     4181d0 <main@@Base+0x13890>
  417d06:	mov    rax,QWORD PTR [rsp+0x20]
  417d0b:	cmp    DWORD PTR [rax],0x0
  417d0e:	movzx  eax,BYTE PTR [r10+0x8]
  417d13:	je     417d7c <main@@Base+0x1343c>
  417d15:	cmp    al,0x21
  417d17:	jl     417d24 <main@@Base+0x133e4>
  417d19:	mov    rbx,r10
  417d1c:	cmp    al,0x3a
  417d1e:	jne    4181d0 <main@@Base+0x13890>
  417d24:	lea    rsi,[r10+0x8]
  417d28:	mov    rax,QWORD PTR [rsp+0x20]
  417d2d:	mov    DWORD PTR [rax],0x0
  417d33:	jmp    417d8b <main@@Base+0x1344b>
  417d35:	cmp    r12,rsi
  417d38:	jne    417e9a <main@@Base+0x1355a>
  417d3e:	mov    rax,r10
  417d41:	cmp    r13,0x5
  417d45:	jl     418750 <main@@Base+0x13e10>
  417d4b:	mov    rax,QWORD PTR [rsp+0x20]
  417d50:	cmp    DWORD PTR [rax],0x0
  417d53:	movzx  ecx,BYTE PTR [r10+0x4]
  417d58:	je     417db5 <main@@Base+0x13475>
  417d5a:	cmp    cl,0x21
  417d5d:	jl     417d6b <main@@Base+0x1342b>
  417d5f:	mov    rax,r10
  417d62:	cmp    cl,0x3a
  417d65:	jne    418750 <main@@Base+0x13e10>
  417d6b:	lea    rsi,[r10+0x4]
  417d6f:	mov    rax,QWORD PTR [rsp+0x20]
  417d74:	mov    DWORD PTR [rax],0x0
  417d7a:	jmp    417dc5 <main@@Base+0x13485>
  417d7c:	mov    rbx,r10
  417d7f:	cmp    al,0x22
  417d81:	jne    4181d0 <main@@Base+0x13890>
  417d87:	lea    rsi,[r10+0x9]
  417d8b:	mov    rax,r14
  417d8e:	sub    rax,rsi
  417d91:	cmp    rax,0x2
  417d95:	jl     417f9f <main@@Base+0x1365f>
  417d9b:	cmp    BYTE PTR [rsi],0x20
  417d9e:	jle    417f89 <main@@Base+0x13649>
  417da4:	mov    rbp,r10
  417da7:	cmp    rsi,r14
  417daa:	jne    417fb5 <main@@Base+0x13675>
  417db0:	jmp    417fe6 <main@@Base+0x136a6>
  417db5:	mov    rax,r10
  417db8:	cmp    cl,0x22
  417dbb:	jne    418750 <main@@Base+0x13e10>
  417dc1:	lea    rsi,[r10+0x5]
  417dc5:	mov    rax,r14
  417dc8:	sub    rax,rsi
  417dcb:	cmp    rax,0x2
  417dcf:	jl     4180c4 <main@@Base+0x13784>
  417dd5:	cmp    BYTE PTR [rsi],0x20
  417dd8:	jle    4180ae <main@@Base+0x1376e>
  417dde:	mov    rbx,r10
  417de1:	cmp    rsi,r14
  417de4:	jne    4180da <main@@Base+0x1379a>
  417dea:	jmp    418106 <main@@Base+0x137c6>
  417def:	mov    rdi,r15
  417df2:	mov    rsi,rax
  417df5:	mov    rdx,r14
  417df8:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  417dfd:	mov    r10,rbp
  417e00:	cmp    r10,rax
  417e03:	je     417e4f <main@@Base+0x1350f>
  417e05:	mov    rdi,r15
  417e08:	mov    rsi,rax
  417e0b:	mov    rdx,r14
  417e0e:	lea    rcx,[rsp+0x44]
  417e13:	call   421ab0 <flatcc_json_parser_build_string@@Base>
  417e18:	mov    rbx,rax
  417e1b:	cmp    DWORD PTR [rsp+0x44],0x0
  417e20:	je     418a8d <main@@Base+0x1414d>
  417e26:	mov    rdi,QWORD PTR [r15]
  417e29:	mov    esi,0x4
  417e2e:	call   41d720 <flatcc_builder_table_add_offset@@Base>
  417e33:	test   rax,rax
  417e36:	mov    r13,QWORD PTR [rsp+0x18]
  417e3b:	je     418a8d <main@@Base+0x1414d>
  417e41:	mov    ecx,DWORD PTR [rsp+0x44]
  417e45:	mov    DWORD PTR [rax],ecx
  417e47:	mov    rdx,rbx
  417e4a:	jmp    418834 <main@@Base+0x13ef4>
  417e4f:	movabs rax,0x6464646431323334
  417e59:	cmp    rbx,rax
  417e5c:	jne    417e9a <main@@Base+0x1355a>
  417e5e:	mov    rbx,r10
  417e61:	cmp    r13,0x9
  417e65:	jl     418301 <main@@Base+0x139c1>
  417e6b:	mov    rax,QWORD PTR [rsp+0x20]
  417e70:	cmp    DWORD PTR [rax],0x0
  417e73:	movzx  eax,BYTE PTR [r10+0x8]
  417e78:	je     417eb5 <main@@Base+0x13575>
  417e7a:	cmp    al,0x21
  417e7c:	jl     417e89 <main@@Base+0x13549>
  417e7e:	mov    rbx,r10
  417e81:	cmp    al,0x3a
  417e83:	jne    418301 <main@@Base+0x139c1>
  417e89:	lea    rsi,[r10+0x8]
  417e8d:	mov    rax,QWORD PTR [rsp+0x20]
  417e92:	mov    DWORD PTR [rax],0x0
  417e98:	jmp    417ec4 <main@@Base+0x13584>
  417e9a:	mov    rdi,r15
  417e9d:	mov    rsi,r10
  417ea0:	mov    rdx,r14
  417ea3:	call   41ff40 <flatcc_json_parser_unmatched_symbol@@Base>
  417ea8:	mov    rdx,rax
  417eab:	mov    r13,QWORD PTR [rsp+0x18]
  417eb0:	jmp    418834 <main@@Base+0x13ef4>
  417eb5:	mov    rbx,r10
  417eb8:	cmp    al,0x22
  417eba:	jne    418301 <main@@Base+0x139c1>
  417ec0:	lea    rsi,[r10+0x9]
  417ec4:	mov    rax,r14
  417ec7:	sub    rax,rsi
  417eca:	cmp    rax,0x2
  417ece:	jl     418011 <main@@Base+0x136d1>
  417ed4:	cmp    BYTE PTR [rsi],0x20
  417ed7:	jle    417ffb <main@@Base+0x136bb>
  417edd:	mov    rbp,r10
  417ee0:	cmp    rsi,r14
  417ee3:	jne    418027 <main@@Base+0x136e7>
  417ee9:	jmp    418053 <main@@Base+0x13713>
  417eee:	mov    rdi,r15
  417ef1:	mov    rsi,rbx
  417ef4:	mov    rdx,r14
  417ef7:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  417efc:	mov    rbx,rax
  417eff:	cmp    r12,rbx
  417f02:	je     418823 <main@@Base+0x13ee3>
  417f08:	mov    QWORD PTR [rsp+0x38],0x0
  417f11:	mov    DWORD PTR [rsp+0x30],0x0
  417f19:	mov    DWORD PTR [rsp+0xc],0x0
  417f21:	xor    ebp,ebp
  417f23:	cmp    rbx,r14
  417f26:	je     417f78 <main@@Base+0x13638>
  417f28:	mov    rdi,r15
  417f2b:	mov    rsi,rbx
  417f2e:	mov    rdx,r14
  417f31:	lea    rcx,[rsp+0x30]
  417f36:	lea    r8,[rsp+0x38]
  417f3b:	call   4215e0 <flatcc_json_parser_integer@@Base>
  417f40:	cmp    rax,rbx
  417f43:	je     418068 <main@@Base+0x13728>
  417f49:	cmp    DWORD PTR [rsp+0x30],0x0
  417f4e:	je     418079 <main@@Base+0x13739>
  417f54:	mov    ecx,0x8
  417f59:	mov    rdi,r15
  417f5c:	mov    rsi,rax
  417f5f:	mov    rdx,r14
  417f62:	call   41f940 <flatcc_json_parser_set_error@@Base>
  417f67:	mov    rdx,rax
  417f6a:	cmp    rbx,rdx
  417f6d:	jne    418648 <main@@Base+0x13d08>
  417f73:	jmp    41860b <main@@Base+0x13ccb>
  417f78:	mov    rdx,r14
  417f7b:	cmp    rbx,rdx
  417f7e:	jne    418648 <main@@Base+0x13d08>
  417f84:	jmp    41860b <main@@Base+0x13ccb>
  417f89:	jne    417f9f <main@@Base+0x1365f>
  417f8b:	cmp    BYTE PTR [rsi+0x1],0x20
  417f8f:	jle    417f9f <main@@Base+0x1365f>
  417f91:	mov    rbp,r10
  417f94:	add    rsi,0x1
  417f98:	cmp    rsi,r14
  417f9b:	jne    417fb5 <main@@Base+0x13675>
  417f9d:	jmp    417fe6 <main@@Base+0x136a6>
  417f9f:	mov    rbp,r10
  417fa2:	mov    rdi,r15
  417fa5:	mov    rdx,r14
  417fa8:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  417fad:	mov    rsi,rax
  417fb0:	cmp    rsi,r14
  417fb3:	je     417fe6 <main@@Base+0x136a6>
  417fb5:	cmp    BYTE PTR [rsi],0x3a
  417fb8:	jne    417fe6 <main@@Base+0x136a6>
  417fba:	lea    rbx,[rsi+0x1]
  417fbe:	mov    rax,r14
  417fc1:	sub    rax,rbx
  417fc4:	cmp    rax,0x2
  417fc8:	jl     4181bc <main@@Base+0x1387c>
  417fce:	cmp    BYTE PTR [rbx],0x20
  417fd1:	jle    4181a1 <main@@Base+0x13861>
  417fd7:	mov    r15,QWORD PTR [rsp+0x10]
  417fdc:	mov    r13,QWORD PTR [rsp+0x18]
  417fe1:	jmp    4181cd <main@@Base+0x1388d>
  417fe6:	mov    ecx,0x4
  417feb:	mov    rdi,r15
  417fee:	mov    rdx,r14
  417ff1:	call   41f940 <flatcc_json_parser_set_error@@Base>
  417ff6:	jmp    4181ca <main@@Base+0x1388a>
  417ffb:	jne    418011 <main@@Base+0x136d1>
  417ffd:	cmp    BYTE PTR [rsi+0x1],0x20
  418001:	jle    418011 <main@@Base+0x136d1>
  418003:	mov    rbp,r10
  418006:	add    rsi,0x1
  41800a:	cmp    rsi,r14
  41800d:	jne    418027 <main@@Base+0x136e7>
  41800f:	jmp    418053 <main@@Base+0x13713>
  418011:	mov    rbp,r10
  418014:	mov    rdi,r15
  418017:	mov    rdx,r14
  41801a:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  41801f:	mov    rsi,rax
  418022:	cmp    rsi,r14
  418025:	je     418053 <main@@Base+0x13713>
  418027:	cmp    BYTE PTR [rsi],0x3a
  41802a:	jne    418053 <main@@Base+0x13713>
  41802c:	lea    rbx,[rsi+0x1]
  418030:	mov    rax,r14
  418033:	sub    rax,rbx
  418036:	cmp    rax,0x2
  41803a:	jl     4182ed <main@@Base+0x139ad>
  418040:	cmp    BYTE PTR [rbx],0x20
  418043:	jle    4182d7 <main@@Base+0x13997>
  418049:	mov    r15,QWORD PTR [rsp+0x10]
  41804e:	jmp    4182fe <main@@Base+0x139be>
  418053:	mov    ecx,0x4
  418058:	mov    rdi,r15
  41805b:	mov    rdx,r14
  41805e:	call   41f940 <flatcc_json_parser_set_error@@Base>
  418063:	jmp    4182fb <main@@Base+0x139bb>
  418068:	mov    rdx,rbx
  41806b:	cmp    rbx,rdx
  41806e:	jne    418648 <main@@Base+0x13d08>
  418074:	jmp    41860b <main@@Base+0x13ccb>
  418079:	mov    rdx,rax
  41807c:	mov    rax,QWORD PTR [rsp+0x38]
  418081:	mov    rcx,rax
  418084:	shr    rcx,0x20
  418088:	je     4185f6 <main@@Base+0x13cb6>
  41808e:	mov    ecx,0x7
  418093:	mov    r15,QWORD PTR [rsp+0x10]
  418098:	mov    rdi,r15
  41809b:	mov    rsi,rdx
  41809e:	mov    rdx,r14
  4180a1:	call   41f940 <flatcc_json_parser_set_error@@Base>
  4180a6:	mov    rdx,rax
  4180a9:	jmp    418601 <main@@Base+0x13cc1>
  4180ae:	jne    4180c4 <main@@Base+0x13784>
  4180b0:	cmp    BYTE PTR [rsi+0x1],0x20
  4180b4:	jle    4180c4 <main@@Base+0x13784>
  4180b6:	mov    rbx,r10
  4180b9:	add    rsi,0x1
  4180bd:	cmp    rsi,r14
  4180c0:	jne    4180da <main@@Base+0x1379a>
  4180c2:	jmp    418106 <main@@Base+0x137c6>
  4180c4:	mov    rbx,r10
  4180c7:	mov    rdi,r15
  4180ca:	mov    rdx,r14
  4180cd:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  4180d2:	mov    rsi,rax
  4180d5:	cmp    rsi,r14
  4180d8:	je     418106 <main@@Base+0x137c6>
  4180da:	cmp    BYTE PTR [rsi],0x3a
  4180dd:	jne    418106 <main@@Base+0x137c6>
  4180df:	lea    rax,[rsi+0x1]
  4180e3:	mov    rcx,r14
  4180e6:	sub    rcx,rax
  4180e9:	cmp    rcx,0x2
  4180ed:	jl     41873a <main@@Base+0x13dfa>
  4180f3:	cmp    BYTE PTR [rax],0x20
  4180f6:	jle    418724 <main@@Base+0x13de4>
  4180fc:	mov    r15,QWORD PTR [rsp+0x10]
  418101:	jmp    41874d <main@@Base+0x13e0d>
  418106:	mov    ecx,0x4
  41810b:	mov    rdi,r15
  41810e:	mov    rdx,r14
  418111:	call   41f940 <flatcc_json_parser_set_error@@Base>
  418116:	jmp    41874d <main@@Base+0x13e0d>
  41811b:	mov    r15,QWORD PTR [rsp+0x10]
  418120:	mov    rdi,r15
  418123:	mov    rsi,rbx
  418126:	mov    rdx,r14
  418129:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  41812e:	mov    rbx,rax
  418131:	mov    r13,QWORD PTR [rsp+0x18]
  418136:	cmp    r12,rbx
  418139:	je     418823 <main@@Base+0x13ee3>
  41813f:	mov    QWORD PTR [rsp+0x38],0x0
  418148:	mov    DWORD PTR [rsp+0x30],0x0
  418150:	mov    DWORD PTR [rsp+0xc],0x0
  418158:	xor    r12d,r12d
  41815b:	cmp    rbx,r14
  41815e:	je     418199 <main@@Base+0x13859>
  418160:	mov    rdi,r15
  418163:	mov    rsi,rbx
  418166:	mov    rdx,r14
  418169:	lea    rcx,[rsp+0x30]
  41816e:	lea    r8,[rsp+0x38]
  418173:	call   4215e0 <flatcc_json_parser_integer@@Base>
  418178:	cmp    rax,rbx
  41817b:	je     4185e9 <main@@Base+0x13ca9>
  418181:	mov    rsi,rax
  418184:	cmp    DWORD PTR [rsp+0x30],0x0
  418189:	je     418684 <main@@Base+0x13d44>
  41818f:	mov    ecx,0x8
  418194:	jmp    41869b <main@@Base+0x13d5b>
  418199:	mov    rax,r14
  41819c:	jmp    4186ab <main@@Base+0x13d6b>
  4181a1:	mov    r15,QWORD PTR [rsp+0x10]
  4181a6:	mov    r13,QWORD PTR [rsp+0x18]
  4181ab:	jne    4181bc <main@@Base+0x1387c>
  4181ad:	cmp    BYTE PTR [rsi+0x2],0x20
  4181b1:	jle    4181bc <main@@Base+0x1387c>
  4181b3:	add    rsi,0x2
  4181b7:	mov    rbx,rsi
  4181ba:	jmp    4181cd <main@@Base+0x1388d>
  4181bc:	mov    rdi,r15
  4181bf:	mov    rsi,rbx
  4181c2:	mov    rdx,r14
  4181c5:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  4181ca:	mov    rbx,rax
  4181cd:	mov    r10,rbp
  4181d0:	cmp    r10,rbx
  4181d3:	je     418796 <main@@Base+0x13e56>
  4181d9:	mov    QWORD PTR [rsp+0x38],0x0
  4181e2:	mov    DWORD PTR [rsp+0xc],0x0
  4181ea:	mov    QWORD PTR [rsp+0x30],0x0
  4181f3:	cmp    rbx,r14
  4181f6:	je     41823a <main@@Base+0x138fa>
  4181f8:	mov    rdi,r15
  4181fb:	mov    rsi,rbx
  4181fe:	mov    rdx,r14
  418201:	lea    rcx,[rsp+0xc]
  418206:	lea    r8,[rsp+0x38]
  41820b:	call   4215e0 <flatcc_json_parser_integer@@Base>
  418210:	cmp    rax,rbx
  418213:	je     418246 <main@@Base+0x13906>
  418215:	mov    rdx,rax
  418218:	mov    rbp,QWORD PTR [rsp+0x38]
  41821d:	cmp    DWORD PTR [rsp+0xc],0x0
  418222:	je     418252 <main@@Base+0x13912>
  418224:	movabs rax,0x8000000000000000
  41822e:	cmp    rbp,rax
  418231:	jbe    418276 <main@@Base+0x13936>
  418233:	mov    ecx,0x8
  418238:	jmp    41825c <main@@Base+0x1391c>
  41823a:	xor    ebp,ebp
  41823c:	mov    rdx,r14
  41823f:	cmp    rbx,rdx
  418242:	jne    4182b7 <main@@Base+0x13977>
  418244:	jmp    418283 <main@@Base+0x13943>
  418246:	xor    ebp,ebp
  418248:	mov    rdx,rbx
  41824b:	cmp    rbx,rdx
  41824e:	jne    4182b7 <main@@Base+0x13977>
  418250:	jmp    418283 <main@@Base+0x13943>
  418252:	test   rbp,rbp
  418255:	jns    418279 <main@@Base+0x13939>
  418257:	mov    ecx,0x7
  41825c:	mov    rdi,r15
  41825f:	mov    rsi,rdx
  418262:	mov    rdx,r14
  418265:	call   41f940 <flatcc_json_parser_set_error@@Base>
  41826a:	mov    rdx,rax
  41826d:	xor    ebp,ebp
  41826f:	cmp    rbx,rdx
  418272:	jne    4182b7 <main@@Base+0x13977>
  418274:	jmp    418283 <main@@Base+0x13943>
  418276:	neg    rbp
  418279:	mov    QWORD PTR [rsp+0x30],rbp
  41827e:	cmp    rbx,rdx
  418281:	jne    4182b7 <main@@Base+0x13977>
  418283:	mov    rdi,r15
  418286:	mov    rsi,rbx
  418289:	mov    rdx,r14
  41828c:	lea    rcx,[rip+0x132ed]        # 42b580 <filename@@Base+0x4b0>
  418293:	lea    r8,[rsp+0x30]
  418298:	call   414620 <main@@Base+0xfce0>
  41829d:	mov    rdx,rax
  4182a0:	cmp    rax,rbx
  4182a3:	je     418a92 <main@@Base+0x14152>
  4182a9:	cmp    rdx,r14
  4182ac:	je     418a92 <main@@Base+0x14152>
  4182b2:	mov    rbp,QWORD PTR [rsp+0x30]
  4182b7:	test   rbp,rbp
  4182ba:	jne    4182c7 <main@@Base+0x13987>
  4182bc:	test   BYTE PTR [r15+0x10],0x2
  4182c1:	je     418834 <main@@Base+0x13ef4>
  4182c7:	mov    rbx,rdx
  4182ca:	mov    rdi,QWORD PTR [r15]
  4182cd:	mov    esi,0x3
  4182d2:	jmp    418524 <main@@Base+0x13be4>
  4182d7:	mov    r15,QWORD PTR [rsp+0x10]
  4182dc:	jne    4182ed <main@@Base+0x139ad>
  4182de:	cmp    BYTE PTR [rsi+0x2],0x20
  4182e2:	jle    4182ed <main@@Base+0x139ad>
  4182e4:	add    rsi,0x2
  4182e8:	mov    rbx,rsi
  4182eb:	jmp    4182fe <main@@Base+0x139be>
  4182ed:	mov    rdi,r15
  4182f0:	mov    rsi,rbx
  4182f3:	mov    rdx,r14
  4182f6:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  4182fb:	mov    rbx,rax
  4182fe:	mov    r10,rbp
  418301:	cmp    r10,rbx
  418304:	je     41837b <main@@Base+0x13a3b>
  418306:	mov    QWORD PTR [rsp+0x38],0x0
  41830f:	mov    DWORD PTR [rsp+0xc],0x0
  418317:	mov    QWORD PTR [rsp+0x30],0x0
  418320:	cmp    rbx,r14
  418323:	mov    r13,QWORD PTR [rsp+0x18]
  418328:	je     41839b <main@@Base+0x13a5b>
  41832a:	mov    rdi,r15
  41832d:	mov    rsi,rbx
  418330:	mov    rdx,r14
  418333:	lea    rcx,[rsp+0xc]
  418338:	lea    r8,[rsp+0x38]
  41833d:	call   4215e0 <flatcc_json_parser_integer@@Base>
  418342:	cmp    rax,rbx
  418345:	je     418498 <main@@Base+0x13b58>
  41834b:	mov    rdx,rax
  41834e:	mov    rbp,QWORD PTR [rsp+0x38]
  418353:	cmp    DWORD PTR [rsp+0xc],0x0
  418358:	je     4184a4 <main@@Base+0x13b64>
  41835e:	movabs rax,0x8000000000000000
  418368:	cmp    rbp,rax
  41836b:	jbe    4184c8 <main@@Base+0x13b88>
  418371:	mov    ecx,0x8
  418376:	jmp    4184ae <main@@Base+0x13b6e>
  41837b:	lea    r12,[r10+0x8]
  41837f:	mov    rax,r14
  418382:	sub    rax,r12
  418385:	cmp    rax,0x8
  418389:	mov    r13,QWORD PTR [rsp+0x18]
  41838e:	jb     4183ae <main@@Base+0x13a6e>
  418390:	movbe  rcx,QWORD PTR [r12]
  418396:	jmp    41843b <main@@Base+0x13afb>
  41839b:	xor    ebp,ebp
  41839d:	mov    rdx,r14
  4183a0:	cmp    rbx,rdx
  4183a3:	jne    418509 <main@@Base+0x13bc9>
  4183a9:	jmp    4184d5 <main@@Base+0x13b95>
  4183ae:	mov    ecx,eax
  4183b0:	and    cl,0xf
  4183b3:	add    cl,0xff
  4183b6:	cmp    cl,0x7
  4183b9:	ja     418823 <main@@Base+0x13ee3>
  4183bf:	movzx  ecx,cl
  4183c2:	lea    rdx,[rip+0xc51b]        # 4248e4 <_IO_stdin_used@@Base+0x8e4>
  4183c9:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  4183cd:	add    rcx,rdx
  4183d0:	xor    r8d,r8d
  4183d3:	xor    r9d,r9d
  4183d6:	xor    edx,edx
  4183d8:	xor    esi,esi
  4183da:	xor    ebx,ebx
  4183dc:	xor    edi,edi
  4183de:	xor    ebp,ebp
  4183e0:	jmp    rcx
  4183e2:	movsx  r8,BYTE PTR [r10+0xf]
  4183e7:	movsx  r9,BYTE PTR [r10+0xe]
  4183ec:	shl    r9,0x8
  4183f0:	or     r9,r8
  4183f3:	movsx  rdx,BYTE PTR [r10+0xd]
  4183f8:	shl    rdx,0x10
  4183fc:	or     rdx,r9
  4183ff:	movsx  rsi,BYTE PTR [r10+0xc]
  418404:	shl    rsi,0x18
  418408:	or     rsi,rdx
  41840b:	movsx  rbx,BYTE PTR [r10+0xb]
  418410:	shl    rbx,0x20
  418414:	or     rbx,rsi
  418417:	movsx  rdi,BYTE PTR [r10+0xa]
  41841c:	shl    rdi,0x28
  418420:	or     rdi,rbx
  418423:	movsx  rbp,BYTE PTR [r10+0x9]
  418428:	shl    rbp,0x30
  41842c:	or     rbp,rdi
  41842f:	movzx  ecx,BYTE PTR [r12]
  418434:	shl    rcx,0x38
  418438:	or     rcx,rbp
  41843b:	movabs rdx,0xff00000000000000
  418445:	and    rcx,rdx
  418448:	movabs rdx,0x3500000000000000
  418452:	cmp    rcx,rdx
  418455:	jne    418823 <main@@Base+0x13ee3>
  41845b:	cmp    rax,0x2
  41845f:	jl     418823 <main@@Base+0x13ee3>
  418465:	mov    rax,QWORD PTR [rsp+0x20]
  41846a:	cmp    DWORD PTR [rax],0x0
  41846d:	movzx  eax,BYTE PTR [r10+0x9]
  418472:	je     418547 <main@@Base+0x13c07>
  418478:	cmp    al,0x21
  41847a:	jl     418484 <main@@Base+0x13b44>
  41847c:	cmp    al,0x3a
  41847e:	jne    418823 <main@@Base+0x13ee3>
  418484:	add    r10,0x9
  418488:	mov    rax,QWORD PTR [rsp+0x20]
  41848d:	mov    DWORD PTR [rax],0x0
  418493:	jmp    418553 <main@@Base+0x13c13>
  418498:	xor    ebp,ebp
  41849a:	mov    rdx,rbx
  41849d:	cmp    rbx,rdx
  4184a0:	jne    418509 <main@@Base+0x13bc9>
  4184a2:	jmp    4184d5 <main@@Base+0x13b95>
  4184a4:	test   rbp,rbp
  4184a7:	jns    4184cb <main@@Base+0x13b8b>
  4184a9:	mov    ecx,0x7
  4184ae:	mov    rdi,r15
  4184b1:	mov    rsi,rdx
  4184b4:	mov    rdx,r14
  4184b7:	call   41f940 <flatcc_json_parser_set_error@@Base>
  4184bc:	mov    rdx,rax
  4184bf:	xor    ebp,ebp
  4184c1:	cmp    rbx,rdx
  4184c4:	jne    418509 <main@@Base+0x13bc9>
  4184c6:	jmp    4184d5 <main@@Base+0x13b95>
  4184c8:	neg    rbp
  4184cb:	mov    QWORD PTR [rsp+0x30],rbp
  4184d0:	cmp    rbx,rdx
  4184d3:	jne    418509 <main@@Base+0x13bc9>
  4184d5:	mov    rdi,r15
  4184d8:	mov    rsi,rbx
  4184db:	mov    rdx,r14
  4184de:	lea    rcx,[rip+0x130fb]        # 42b5e0 <filename@@Base+0x510>
  4184e5:	lea    r8,[rsp+0x30]
  4184ea:	call   414620 <main@@Base+0xfce0>
  4184ef:	mov    rdx,rax
  4184f2:	cmp    rax,rbx
  4184f5:	je     418a92 <main@@Base+0x14152>
  4184fb:	cmp    rdx,r14
  4184fe:	je     418a92 <main@@Base+0x14152>
  418504:	mov    rbp,QWORD PTR [rsp+0x30]
  418509:	test   rbp,rbp
  41850c:	jne    418519 <main@@Base+0x13bd9>
  41850e:	test   BYTE PTR [r15+0x10],0x2
  418513:	je     418834 <main@@Base+0x13ef4>
  418519:	mov    rbx,rdx
  41851c:	mov    rdi,QWORD PTR [r15]
  41851f:	mov    esi,0x7
  418524:	mov    edx,0x8
  418529:	mov    ecx,0x8
  41852e:	call   41d880 <flatcc_builder_table_add@@Base>
  418533:	test   rax,rax
  418536:	je     418a95 <main@@Base+0x14155>
  41853c:	mov    QWORD PTR [rax],rbp
  41853f:	mov    rdx,rbx
  418542:	jmp    418834 <main@@Base+0x13ef4>
  418547:	cmp    al,0x22
  418549:	jne    418823 <main@@Base+0x13ee3>
  41854f:	add    r10,0xa
  418553:	mov    rax,r14
  418556:	mov    rsi,r10
  418559:	sub    rax,r10
  41855c:	cmp    rax,0x2
  418560:	jl     41857b <main@@Base+0x13c3b>
  418562:	cmp    BYTE PTR [rsi],0x20
  418565:	jg     41858b <main@@Base+0x13c4b>
  418567:	mov    rsi,r10
  41856a:	jne    41857b <main@@Base+0x13c3b>
  41856c:	cmp    BYTE PTR [rsi+0x1],0x20
  418570:	jle    41857b <main@@Base+0x13c3b>
  418572:	add    rsi,0x1
  418576:	mov    r10,rsi
  418579:	jmp    41858b <main@@Base+0x13c4b>
  41857b:	mov    rdi,QWORD PTR [rsp+0x10]
  418580:	mov    rdx,r14
  418583:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  418588:	mov    r10,rax
  41858b:	mov    rsi,r10
  41858e:	cmp    r10,r14
  418591:	je     4185d2 <main@@Base+0x13c92>
  418593:	cmp    BYTE PTR [rsi],0x3a
  418596:	jne    4185d2 <main@@Base+0x13c92>
  418598:	lea    rbx,[rsi+0x1]
  41859c:	mov    rax,r14
  41859f:	sub    rax,rbx
  4185a2:	cmp    rax,0x2
  4185a6:	jl     4187a1 <main@@Base+0x13e61>
  4185ac:	cmp    BYTE PTR [rbx],0x20
  4185af:	jg     4187b4 <main@@Base+0x13e74>
  4185b5:	jne    4187a1 <main@@Base+0x13e61>
  4185bb:	cmp    BYTE PTR [r10+0x2],0x20
  4185c0:	jle    4187a1 <main@@Base+0x13e61>
  4185c6:	add    r10,0x2
  4185ca:	mov    rbx,r10
  4185cd:	jmp    4187b4 <main@@Base+0x13e74>
  4185d2:	mov    ecx,0x4
  4185d7:	mov    rdi,QWORD PTR [rsp+0x10]
  4185dc:	mov    rdx,r14
  4185df:	call   41f940 <flatcc_json_parser_set_error@@Base>
  4185e4:	jmp    4187b1 <main@@Base+0x13e71>
  4185e9:	mov    rax,rbx
  4185ec:	mov    r15,QWORD PTR [rsp+0x10]
  4185f1:	jmp    4186ab <main@@Base+0x13d6b>
  4185f6:	mov    DWORD PTR [rsp+0xc],eax
  4185fa:	mov    ebp,eax
  4185fc:	mov    r15,QWORD PTR [rsp+0x10]
  418601:	mov    r13,QWORD PTR [rsp+0x18]
  418606:	cmp    rbx,rdx
  418609:	jne    418648 <main@@Base+0x13d08>
  41860b:	mov    rdi,r15
  41860e:	mov    rsi,rbx
  418611:	mov    rdx,r14
  418614:	lea    rcx,[rip+0x12f45]        # 42b560 <filename@@Base+0x490>
  41861b:	lea    r8,[rsp+0xc]
  418620:	call   414830 <main@@Base+0xfef0>
  418625:	mov    rdx,rax
  418628:	cmp    rax,rbx
  41862b:	je     418a92 <main@@Base+0x14152>
  418631:	cmp    rdx,r14
  418634:	je     418a92 <main@@Base+0x14152>
  41863a:	mov    ebp,DWORD PTR [rsp+0xc]
  41863e:	mov    r15,QWORD PTR [rsp+0x10]
  418643:	mov    r13,QWORD PTR [rsp+0x18]
  418648:	test   ebp,ebp
  41864a:	jne    418657 <main@@Base+0x13d17>
  41864c:	test   BYTE PTR [r15+0x10],0x2
  418651:	je     418834 <main@@Base+0x13ef4>
  418657:	mov    rbx,rdx
  41865a:	mov    rdi,QWORD PTR [r15]
  41865d:	mov    esi,0x1
  418662:	mov    edx,0x4
  418667:	mov    ecx,0x4
  41866c:	call   41d880 <flatcc_builder_table_add@@Base>
  418671:	test   rax,rax
  418674:	je     418a95 <main@@Base+0x14155>
  41867a:	mov    DWORD PTR [rax],ebp
  41867c:	mov    rdx,rbx
  41867f:	jmp    418834 <main@@Base+0x13ef4>
  418684:	mov    rax,QWORD PTR [rsp+0x38]
  418689:	mov    rcx,rax
  41868c:	shr    rcx,0x20
  418690:	je     4172b8 <main@@Base+0x12978>
  418696:	mov    ecx,0x7
  41869b:	mov    r15,QWORD PTR [rsp+0x10]
  4186a0:	mov    rdi,r15
  4186a3:	mov    rdx,r14
  4186a6:	call   41f940 <flatcc_json_parser_set_error@@Base>
  4186ab:	mov    rbp,rax
  4186ae:	cmp    rbx,rax
  4186b1:	jne    4186ec <main@@Base+0x13dac>
  4186b3:	mov    rdi,r15
  4186b6:	mov    rsi,rbx
  4186b9:	mov    rdx,r14
  4186bc:	lea    rcx,[rip+0x12efd]        # 42b5c0 <filename@@Base+0x4f0>
  4186c3:	lea    r8,[rsp+0xc]
  4186c8:	call   414830 <main@@Base+0xfef0>
  4186cd:	mov    rbp,rax
  4186d0:	cmp    rax,rbx
  4186d3:	je     418a9f <main@@Base+0x1415f>
  4186d9:	cmp    rbp,r14
  4186dc:	je     418a9f <main@@Base+0x1415f>
  4186e2:	mov    r12d,DWORD PTR [rsp+0xc]
  4186e7:	mov    r15,QWORD PTR [rsp+0x10]
  4186ec:	test   r12d,r12d
  4186ef:	jne    4186fc <main@@Base+0x13dbc>
  4186f1:	test   BYTE PTR [r15+0x10],0x2
  4186f6:	je     41736e <main@@Base+0x12a2e>
  4186fc:	mov    rdi,QWORD PTR [r15]
  4186ff:	mov    esi,0x6
  418704:	mov    edx,0x4
  418709:	mov    ecx,0x4
  41870e:	call   41d880 <flatcc_builder_table_add@@Base>
  418713:	test   rax,rax
  418716:	je     418a9f <main@@Base+0x1415f>
  41871c:	mov    DWORD PTR [rax],r12d
  41871f:	jmp    41736e <main@@Base+0x12a2e>
  418724:	jne    41873a <main@@Base+0x13dfa>
  418726:	cmp    BYTE PTR [rsi+0x2],0x20
  41872a:	jle    41873a <main@@Base+0x13dfa>
  41872c:	add    rsi,0x2
  418730:	mov    rax,rsi
  418733:	mov    r15,QWORD PTR [rsp+0x10]
  418738:	jmp    41874d <main@@Base+0x13e0d>
  41873a:	mov    r15,QWORD PTR [rsp+0x10]
  41873f:	mov    rdi,r15
  418742:	mov    rsi,rax
  418745:	mov    rdx,r14
  418748:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  41874d:	mov    r10,rbx
  418750:	cmp    r10,rax
  418753:	mov    r13,QWORD PTR [rsp+0x18]
  418758:	je     418796 <main@@Base+0x13e56>
  41875a:	mov    rdi,r15
  41875d:	mov    rsi,rax
  418760:	mov    rdx,r14
  418763:	lea    rcx,[rsp+0x44]
  418768:	call   421ab0 <flatcc_json_parser_build_string@@Base>
  41876d:	mov    rbx,rax
  418770:	cmp    DWORD PTR [rsp+0x44],0x0
  418775:	je     418a8d <main@@Base+0x1414d>
  41877b:	mov    rdi,QWORD PTR [r15]
  41877e:	mov    esi,0x2
  418783:	call   41d720 <flatcc_builder_table_add_offset@@Base>
  418788:	test   rax,rax
  41878b:	jne    417e41 <main@@Base+0x13501>
  418791:	jmp    418a8d <main@@Base+0x1414d>
  418796:	mov    rdi,r15
  418799:	mov    rsi,r10
  41879c:	jmp    418829 <main@@Base+0x13ee9>
  4187a1:	mov    rdi,QWORD PTR [rsp+0x10]
  4187a6:	mov    rsi,rbx
  4187a9:	mov    rdx,r14
  4187ac:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  4187b1:	mov    rbx,rax
  4187b4:	cmp    r12,rbx
  4187b7:	mov    r15,QWORD PTR [rsp+0x10]
  4187bc:	mov    r13,QWORD PTR [rsp+0x18]
  4187c1:	je     418823 <main@@Base+0x13ee3>
  4187c3:	mov    QWORD PTR [rsp+0x38],0x0
  4187cc:	mov    DWORD PTR [rsp+0x30],0x0
  4187d4:	mov    DWORD PTR [rsp+0xc],0x0
  4187dc:	xor    r15d,r15d
  4187df:	cmp    rbx,r14
  4187e2:	je     4172a0 <main@@Base+0x12960>
  4187e8:	mov    rdi,QWORD PTR [rsp+0x10]
  4187ed:	mov    rsi,rbx
  4187f0:	mov    rdx,r14
  4187f3:	lea    rcx,[rsp+0x30]
  4187f8:	lea    r8,[rsp+0x38]
  4187fd:	call   4215e0 <flatcc_json_parser_integer@@Base>
  418802:	cmp    rax,rbx
  418805:	je     4172ae <main@@Base+0x1296e>
  41880b:	mov    rbp,rax
  41880e:	cmp    DWORD PTR [rsp+0x30],0x0
  418813:	je     4172cc <main@@Base+0x1298c>
  418819:	mov    ecx,0x8
  41881e:	jmp    4172e3 <main@@Base+0x129a3>
  418823:	mov    rdi,r15
  418826:	mov    rsi,r12
  418829:	mov    rdx,r14
  41882c:	call   41ff40 <flatcc_json_parser_unmatched_symbol@@Base>
  418831:	mov    rdx,rax
  418834:	mov    rax,r14
  418837:	sub    rax,rdx
  41883a:	cmp    rax,0x2
  41883e:	jl     41885b <main@@Base+0x13f1b>
  418840:	cmp    BYTE PTR [rdx],0x20
  418843:	jg     41886c <main@@Base+0x13f2c>
  418845:	jne    41885b <main@@Base+0x13f1b>
  418847:	cmp    BYTE PTR [rdx+0x1],0x20
  41884b:	jle    41885b <main@@Base+0x13f1b>
  41884d:	add    rdx,0x1
  418851:	cmp    rdx,r14
  418854:	jne    418871 <main@@Base+0x13f31>
  418856:	jmp    4188e9 <main@@Base+0x13fa9>
  41885b:	mov    rdi,r15
  41885e:	mov    rsi,rdx
  418861:	mov    rdx,r14
  418864:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  418869:	mov    rdx,rax
  41886c:	cmp    rdx,r14
  41886f:	je     4188e9 <main@@Base+0x13fa9>
  418871:	movzx  eax,BYTE PTR [rdx]
  418874:	cmp    al,0x2c
  418876:	jne    4188ee <main@@Base+0x13fae>
  418878:	lea    rsi,[rdx+0x1]
  41887c:	mov    rax,r14
  41887f:	sub    rax,rsi
  418882:	cmp    rax,0x2
  418886:	jl     4188a6 <main@@Base+0x13f66>
  418888:	cmp    BYTE PTR [rsi],0x20
  41888b:	jg     4188b4 <main@@Base+0x13f74>
  41888d:	jne    4188a6 <main@@Base+0x13f66>
  41888f:	cmp    BYTE PTR [rdx+0x2],0x20
  418893:	jle    4188a6 <main@@Base+0x13f66>
  418895:	add    rdx,0x2
  418899:	mov    rsi,rdx
  41889c:	cmp    rsi,r14
  41889f:	jne    4188b9 <main@@Base+0x13f79>
  4188a1:	jmp    418929 <main@@Base+0x13fe9>
  4188a6:	mov    rdi,r15
  4188a9:	mov    rdx,r14
  4188ac:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  4188b1:	mov    rsi,rax
  4188b4:	cmp    rsi,r14
  4188b7:	je     418929 <main@@Base+0x13fe9>
  4188b9:	cmp    BYTE PTR [rsi],0x7d
  4188bc:	jne    41738c <main@@Base+0x12a4c>
  4188c2:	lea    rbp,[rsi+0x1]
  4188c6:	mov    rax,r14
  4188c9:	sub    rax,rbp
  4188cc:	cmp    rax,0x2
  4188d0:	jl     418919 <main@@Base+0x13fd9>
  4188d2:	cmp    BYTE PTR [rbp+0x0],0x20
  4188d6:	jg     41894c <main@@Base+0x1400c>
  4188d8:	jne    418919 <main@@Base+0x13fd9>
  4188da:	cmp    BYTE PTR [rsi+0x2],0x20
  4188de:	jle    418919 <main@@Base+0x13fd9>
  4188e0:	add    rsi,0x2
  4188e4:	mov    rbp,rsi
  4188e7:	jmp    41894c <main@@Base+0x1400c>
  4188e9:	mov    rbp,r14
  4188ec:	jmp    41894c <main@@Base+0x1400c>
  4188ee:	cmp    al,0x7d
  4188f0:	jne    418936 <main@@Base+0x13ff6>
  4188f2:	lea    rbp,[rdx+0x1]
  4188f6:	mov    rax,r14
  4188f9:	sub    rax,rbp
  4188fc:	cmp    rax,0x2
  418900:	jl     418919 <main@@Base+0x13fd9>
  418902:	cmp    BYTE PTR [rbp+0x0],0x20
  418906:	jg     41894c <main@@Base+0x1400c>
  418908:	jne    418919 <main@@Base+0x13fd9>
  41890a:	cmp    BYTE PTR [rdx+0x2],0x20
  41890e:	jle    418919 <main@@Base+0x13fd9>
  418910:	add    rdx,0x2
  418914:	mov    rbp,rdx
  418917:	jmp    41894c <main@@Base+0x1400c>
  418919:	mov    rdi,r15
  41891c:	mov    rsi,rbp
  41891f:	mov    rdx,r14
  418922:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  418927:	jmp    418949 <main@@Base+0x14009>
  418929:	mov    ecx,0xa
  41892e:	mov    rdi,r15
  418931:	mov    rsi,r14
  418934:	jmp    418941 <main@@Base+0x14001>
  418936:	mov    ecx,0xa
  41893b:	mov    rdi,r15
  41893e:	mov    rsi,rdx
  418941:	mov    rdx,r14
  418944:	call   41f940 <flatcc_json_parser_set_error@@Base>
  418949:	mov    rbp,rax
  41894c:	mov    rax,QWORD PTR [rsp+0x28]
  418951:	cmp    DWORD PTR [rax],0x0
  418954:	jne    418aa4 <main@@Base+0x14164>
  41895a:	mov    rdi,QWORD PTR [r15]
  41895d:	call   41cf10 <flatcc_builder_end_table@@Base>
  418962:	test   eax,eax
  418964:	je     418aa4 <main@@Base+0x14164>
  41896a:	mov    ebx,eax
  41896c:	mov    rdi,QWORD PTR [r15]
  41896f:	xor    esi,esi
  418971:	call   41d720 <flatcc_builder_table_add_offset@@Base>
  418976:	test   rax,rax
  418979:	je     418a70 <main@@Base+0x14130>
  41897f:	mov    DWORD PTR [rax],ebx
  418981:	movabs rbx,0x625f73746172745f
  41898b:	jmp    415a6f <main@@Base+0x1112f>
  418990:	mov    rdi,r15
  418993:	mov    rsi,rbx
  418996:	mov    rdx,r14
  418999:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  41899e:	jmp    4157d8 <main@@Base+0x10e98>
  4189a3:	mov    rbx,r14
  4189a6:	jmp    418a2e <main@@Base+0x140ee>
  4189ab:	cmp    al,0x7d
  4189ad:	jne    418a18 <main@@Base+0x140d8>
  4189af:	lea    rbx,[rbp+0x1]
  4189b3:	mov    rax,r14
  4189b6:	sub    rax,rbx
  4189b9:	cmp    rax,0x2
  4189bd:	jl     418a08 <main@@Base+0x140c8>
  4189bf:	cmp    BYTE PTR [rbx],0x20
  4189c2:	jg     418a2e <main@@Base+0x140ee>
  4189c4:	jne    418a08 <main@@Base+0x140c8>
  4189c6:	cmp    BYTE PTR [rbp+0x2],0x20
  4189ca:	jle    418a08 <main@@Base+0x140c8>
  4189cc:	add    rbp,0x2
  4189d0:	mov    rbx,rbp
  4189d3:	jmp    418a2e <main@@Base+0x140ee>
  4189d5:	mov    ecx,0xa
  4189da:	mov    rdi,r15
  4189dd:	mov    rsi,r14
  4189e0:	jmp    418a23 <main@@Base+0x140e3>
  4189e2:	lea    rbx,[rsi+0x1]
  4189e6:	mov    rax,r14
  4189e9:	sub    rax,rbx
  4189ec:	cmp    rax,0x2
  4189f0:	jl     418a08 <main@@Base+0x140c8>
  4189f2:	cmp    BYTE PTR [rbx],0x20
  4189f5:	jg     418a2e <main@@Base+0x140ee>
  4189f7:	jne    418a08 <main@@Base+0x140c8>
  4189f9:	cmp    BYTE PTR [rsi+0x2],0x20
  4189fd:	jle    418a08 <main@@Base+0x140c8>
  4189ff:	add    rsi,0x2
  418a03:	mov    rbx,rsi
  418a06:	jmp    418a2e <main@@Base+0x140ee>
  418a08:	mov    rdi,r15
  418a0b:	mov    rsi,rbx
  418a0e:	mov    rdx,r14
  418a11:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  418a16:	jmp    418a2b <main@@Base+0x140eb>
  418a18:	mov    ecx,0xa
  418a1d:	mov    rdi,r15
  418a20:	mov    rsi,rbp
  418a23:	mov    rdx,r14
  418a26:	call   41f940 <flatcc_json_parser_set_error@@Base>
  418a2b:	mov    rbx,rax
  418a2e:	mov    rax,QWORD PTR [rsp+0x28]
  418a33:	cmp    DWORD PTR [rax],0x0
  418a36:	jne    418a48 <main@@Base+0x14108>
  418a38:	mov    rdi,QWORD PTR [r15]
  418a3b:	call   41cf10 <flatcc_builder_end_table@@Base>
  418a40:	mov    DWORD PTR [r13+0x0],eax
  418a44:	test   eax,eax
  418a46:	jne    418a5e <main@@Base+0x1411e>
  418a48:	mov    ecx,0x21
  418a4d:	mov    rdi,r15
  418a50:	mov    rsi,rbx
  418a53:	mov    rdx,r14
  418a56:	call   41f940 <flatcc_json_parser_set_error@@Base>
  418a5b:	mov    rbx,rax
  418a5e:	mov    rax,rbx
  418a61:	add    rsp,0x48
  418a65:	pop    rbx
  418a66:	pop    r12
  418a68:	pop    r13
  418a6a:	pop    r14
  418a6c:	pop    r15
  418a6e:	pop    rbp
  418a6f:	ret    
  418a70:	mov    rbx,rbp
  418a73:	jmp    418a48 <main@@Base+0x14108>
  418a75:	mov    rbp,r12
  418a78:	mov    r15,QWORD PTR [rsp+0x10]
  418a7d:	mov    ecx,0x21
  418a82:	mov    rdi,r15
  418a85:	mov    rsi,rbp
  418a88:	jmp    418aaf <main@@Base+0x1416f>
  418a8a:	mov    rbx,rdx
  418a8d:	mov    rsi,rbx
  418a90:	jmp    418aa7 <main@@Base+0x14167>
  418a92:	mov    rbx,rdx
  418a95:	mov    r15,QWORD PTR [rsp+0x10]
  418a9a:	mov    rsi,rbx
  418a9d:	jmp    418aa7 <main@@Base+0x14167>
  418a9f:	mov    r15,QWORD PTR [rsp+0x10]
  418aa4:	mov    rsi,rbp
  418aa7:	mov    ecx,0x21
  418aac:	mov    rdi,r15
  418aaf:	mov    rdx,r14
  418ab2:	call   41f940 <flatcc_json_parser_set_error@@Base>
  418ab7:	mov    rbx,rax
  418aba:	jmp    418a48 <main@@Base+0x14108>
  418abc:	nop    DWORD PTR [rax+0x0]
  418ac0:	push   r14
  418ac2:	push   rbx
  418ac3:	mov    rbx,rdx
  418ac6:	sub    rbx,rsi
  418ac9:	cmp    rbx,0x8
  418acd:	jb     418ad6 <main@@Base+0x14196>
  418acf:	movbe  rbx,QWORD PTR [rsi]
  418ad4:	jmp    418b51 <main@@Base+0x14211>
  418ad6:	and    bl,0xf
  418ad9:	add    bl,0xff
  418adc:	cmp    bl,0x7
  418adf:	ja     418c45 <main@@Base+0x14305>
  418ae5:	xor    eax,eax
  418ae7:	movzx  ebx,bl
  418aea:	lea    r10,[rip+0xbef3]        # 4249e4 <_IO_stdin_used@@Base+0x9e4>
  418af1:	movsxd rbx,DWORD PTR [r10+rbx*4]
  418af5:	add    rbx,r10
  418af8:	jmp    rbx
  418afa:	movsx  rax,BYTE PTR [rsi+0x7]
  418aff:	movsx  rbx,BYTE PTR [rsi+0x6]
  418b04:	shl    rbx,0x8
  418b08:	or     rax,rbx
  418b0b:	movsx  rbx,BYTE PTR [rsi+0x5]
  418b10:	shl    rbx,0x10
  418b14:	or     rax,rbx
  418b17:	movsx  rbx,BYTE PTR [rsi+0x4]
  418b1c:	shl    rbx,0x18
  418b20:	or     rax,rbx
  418b23:	movsx  rbx,BYTE PTR [rsi+0x3]
  418b28:	shl    rbx,0x20
  418b2c:	or     rax,rbx
  418b2f:	movsx  rbx,BYTE PTR [rsi+0x2]
  418b34:	shl    rbx,0x28
  418b38:	or     rax,rbx
  418b3b:	movsx  rbx,BYTE PTR [rsi+0x1]
  418b40:	shl    rbx,0x30
  418b44:	or     rax,rbx
  418b47:	movzx  ebx,BYTE PTR [rsi]
  418b4a:	shl    rbx,0x38
  418b4e:	or     rbx,rax
  418b51:	movabs rax,0x4368617261637465
  418b5b:	cmp    rbx,rax
  418b5e:	jne    418c45 <main@@Base+0x14305>
  418b64:	lea    r10,[rsi+0x8]
  418b68:	mov    rax,rdx
  418b6b:	sub    rax,r10
  418b6e:	cmp    rax,0x8
  418b72:	jb     418b88 <main@@Base+0x14248>
  418b74:	movbe  rbx,QWORD PTR [r10]
  418b79:	cmp    rax,0x2
  418b7d:	jge    418c0d <main@@Base+0x142cd>
  418b83:	jmp    418c45 <main@@Base+0x14305>
  418b88:	mov    ebx,eax
  418b8a:	and    bl,0xf
  418b8d:	add    bl,0xff
  418b90:	cmp    bl,0x7
  418b93:	ja     418c45 <main@@Base+0x14305>
  418b99:	xor    r11d,r11d
  418b9c:	movzx  ebx,bl
  418b9f:	lea    r14,[rip+0xbe5e]        # 424a04 <_IO_stdin_used@@Base+0xa04>
  418ba6:	movsxd rbx,DWORD PTR [r14+rbx*4]
  418baa:	add    rbx,r14
  418bad:	jmp    rbx
  418baf:	movsx  r11,BYTE PTR [rsi+0xf]
  418bb4:	movsx  rbx,BYTE PTR [rsi+0xe]
  418bb9:	shl    rbx,0x8
  418bbd:	or     r11,rbx
  418bc0:	movsx  rbx,BYTE PTR [rsi+0xd]
  418bc5:	shl    rbx,0x10
  418bc9:	or     r11,rbx
  418bcc:	movsx  rbx,BYTE PTR [rsi+0xc]
  418bd1:	shl    rbx,0x18
  418bd5:	or     r11,rbx
  418bd8:	movsx  rbx,BYTE PTR [rsi+0xb]
  418bdd:	shl    rbx,0x20
  418be1:	or     r11,rbx
  418be4:	movsx  rbx,BYTE PTR [rsi+0xa]
  418be9:	shl    rbx,0x28
  418bed:	or     r11,rbx
  418bf0:	movsx  rbx,BYTE PTR [rsi+0x9]
  418bf5:	shl    rbx,0x30
  418bf9:	or     r11,rbx
  418bfc:	movzx  ebx,BYTE PTR [r10]
  418c00:	shl    rbx,0x38
  418c04:	or     rbx,r11
  418c07:	cmp    rax,0x2
  418c0b:	jl     418c45 <main@@Base+0x14305>
  418c0d:	movabs rax,0xff00000000000000
  418c17:	and    rbx,rax
  418c1a:	movabs rax,0x7200000000000000
  418c24:	cmp    rbx,rax
  418c27:	jne    418c45 <main@@Base+0x14305>
  418c29:	lea    rax,[rsi+0xa]
  418c2d:	cmp    BYTE PTR [rsi+0x9],0x2e
  418c31:	cmovne rax,r10
  418c35:	cmp    rax,r10
  418c38:	je     418c45 <main@@Base+0x14305>
  418c3a:	mov    rsi,rax
  418c3d:	pop    rbx
  418c3e:	pop    r14
  418c40:	jmp    4154f0 <main@@Base+0x10bb0>
  418c45:	mov    rax,rsi
  418c48:	pop    rbx
  418c49:	pop    r14
  418c4b:	ret    
  418c4c:	nop    DWORD PTR [rax+0x0]
  418c50:	push   rbp
  418c51:	push   r15
  418c53:	push   r14
  418c55:	push   r13
  418c57:	push   r12
  418c59:	push   rbx
  418c5a:	sub    rsp,0x18
  418c5e:	mov    r13,rdx
  418c61:	mov    rbp,rsi
  418c64:	mov    r14,rdi
  418c67:	mov    DWORD PTR [r8],0x0
  418c6e:	add    cl,0x1
  418c71:	cmp    cl,0xc
  418c74:	ja     418cd8 <main@@Base+0x14398>
  418c76:	mov    r15,r8
  418c79:	movzx  eax,cl
  418c7c:	lea    rcx,[rip+0xbda1]        # 424a24 <_IO_stdin_used@@Base+0xa24>
  418c83:	movsxd rax,DWORD PTR [rcx+rax*4]
  418c87:	add    rax,rcx
  418c8a:	jmp    rax
  418c8c:	mov    rdi,r14
  418c8f:	mov    rsi,rbp
  418c92:	mov    rdx,r13
  418c95:	mov    rcx,r15
  418c98:	call   421ab0 <flatcc_json_parser_build_string@@Base>
  418c9d:	jmp    418e66 <main@@Base+0x14526>
  418ca2:	mov    rdi,r14
  418ca5:	mov    rsi,rbp
  418ca8:	mov    rdx,r13
  418cab:	mov    rcx,r15
  418cae:	call   419a70 <main@@Base+0x15130>
  418cb3:	jmp    418e66 <main@@Base+0x14526>
  418cb8:	mov    rax,r13
  418cbb:	sub    rax,rbp
  418cbe:	cmp    rax,0x4
  418cc2:	jl     418cd1 <main@@Base+0x14391>
  418cc4:	cmp    DWORD PTR [rbp+0x0],0x6c6c756e
  418ccb:	je     418e9e <main@@Base+0x1455e>
  418cd1:	mov    ecx,0x1a
  418cd6:	jmp    418ce8 <main@@Base+0x143a8>
  418cd8:	test   BYTE PTR [r14+0x10],0x1
  418cdd:	jne    418dd7 <main@@Base+0x14497>
  418ce3:	mov    ecx,0xf
  418ce8:	mov    rdi,r14
  418ceb:	mov    rsi,rbp
  418cee:	mov    rdx,r13
  418cf1:	add    rsp,0x18
  418cf5:	pop    rbx
  418cf6:	pop    r12
  418cf8:	pop    r13
  418cfa:	pop    r14
  418cfc:	pop    r15
  418cfe:	pop    rbp
  418cff:	jmp    41f940 <flatcc_json_parser_set_error@@Base>
  418d04:	mov    DWORD PTR [r15],0x0
  418d0b:	mov    rdi,QWORD PTR [r14]
  418d0e:	mov    esi,0x1
  418d13:	call   41c500 <flatcc_builder_start_table@@Base>
  418d18:	test   eax,eax
  418d1a:	jne    418e53 <main@@Base+0x14513>
  418d20:	cmp    rbp,r13
  418d23:	je     418e32 <main@@Base+0x144f2>
  418d29:	cmp    BYTE PTR [rbp+0x0],0x7b
  418d2d:	jne    418e32 <main@@Base+0x144f2>
  418d33:	lea    rax,[rbp+0x1]
  418d37:	mov    rcx,r13
  418d3a:	sub    rcx,rax
  418d3d:	cmp    rcx,0x2
  418d41:	jl     419313 <main@@Base+0x149d3>
  418d47:	cmp    BYTE PTR [rax],0x20
  418d4a:	jg     419321 <main@@Base+0x149e1>
  418d50:	jne    419313 <main@@Base+0x149d3>
  418d56:	cmp    BYTE PTR [rbp+0x2],0x20
  418d5a:	jle    419313 <main@@Base+0x149d3>
  418d60:	add    rbp,0x2
  418d64:	mov    rax,rbp
  418d67:	jmp    419321 <main@@Base+0x149e1>
  418d6c:	mov    DWORD PTR [r15],0x0
  418d73:	mov    rdi,QWORD PTR [r14]
  418d76:	mov    esi,0x2
  418d7b:	mov    edx,0x2
  418d80:	call   41b580 <flatcc_builder_start_struct@@Base>
  418d85:	test   rax,rax
  418d88:	je     418e25 <main@@Base+0x144e5>
  418d8e:	cmp    rbp,r13
  418d91:	je     418df3 <main@@Base+0x144b3>
  418d93:	cmp    BYTE PTR [rbp+0x0],0x7b
  418d97:	jne    418df3 <main@@Base+0x144b3>
  418d99:	mov    QWORD PTR [rsp+0x8],rax
  418d9e:	lea    rax,[rbp+0x1]
  418da2:	mov    rcx,r13
  418da5:	sub    rcx,rax
  418da8:	cmp    rcx,0x2
  418dac:	jl     418ea4 <main@@Base+0x14564>
  418db2:	cmp    BYTE PTR [rax],0x20
  418db5:	jg     418eb2 <main@@Base+0x14572>
  418dbb:	jne    418ea4 <main@@Base+0x14564>
  418dc1:	cmp    BYTE PTR [rbp+0x2],0x20
  418dc5:	jle    418ea4 <main@@Base+0x14564>
  418dcb:	add    rbp,0x2
  418dcf:	mov    rax,rbp
  418dd2:	jmp    418eb2 <main@@Base+0x14572>
  418dd7:	mov    rdi,r14
  418dda:	mov    rsi,rbp
  418ddd:	mov    rdx,r13
  418de0:	add    rsp,0x18
  418de4:	pop    rbx
  418de5:	pop    r12
  418de7:	pop    r13
  418de9:	pop    r14
  418deb:	pop    r15
  418ded:	pop    rbp
  418dee:	jmp    420120 <flatcc_json_parser_generic_json@@Base>
  418df3:	mov    ecx,0x15
  418df8:	mov    rdi,r14
  418dfb:	mov    rsi,rbp
  418dfe:	mov    rdx,r13
  418e01:	call   41f940 <flatcc_json_parser_set_error@@Base>
  418e06:	mov    rbp,rax
  418e09:	mov    rsi,r13
  418e0c:	cmp    rbp,r13
  418e0f:	je     418e28 <main@@Base+0x144e8>
  418e11:	mov    rdi,QWORD PTR [r14]
  418e14:	call   41b650 <flatcc_builder_end_struct@@Base>
  418e19:	mov    DWORD PTR [r15],eax
  418e1c:	mov    rsi,rbp
  418e1f:	test   eax,eax
  418e21:	jne    418e69 <main@@Base+0x14529>
  418e23:	jmp    418e28 <main@@Base+0x144e8>
  418e25:	mov    rsi,rbp
  418e28:	mov    ecx,0x21
  418e2d:	mov    rdi,r14
  418e30:	jmp    418e5e <main@@Base+0x1451e>
  418e32:	mov    ecx,0x15
  418e37:	mov    rdi,r14
  418e3a:	mov    rsi,rbp
  418e3d:	mov    rdx,r13
  418e40:	call   41f940 <flatcc_json_parser_set_error@@Base>
  418e45:	mov    rbp,rax
  418e48:	cmp    DWORD PTR [r14+0x20],0x0
  418e4d:	je     41996d <main@@Base+0x1502d>
  418e53:	mov    ecx,0x21
  418e58:	mov    rdi,r14
  418e5b:	mov    rsi,rbp
  418e5e:	mov    rdx,r13
  418e61:	call   41f940 <flatcc_json_parser_set_error@@Base>
  418e66:	mov    rbp,rax
  418e69:	cmp    DWORD PTR [r14+0x20],0x0
  418e6e:	jne    418e8c <main@@Base+0x1454c>
  418e70:	cmp    DWORD PTR [r15],0x0
  418e74:	jne    418e8c <main@@Base+0x1454c>
  418e76:	mov    ecx,0x21
  418e7b:	mov    rdi,r14
  418e7e:	mov    rsi,rbp
  418e81:	mov    rdx,r13
  418e84:	call   41f940 <flatcc_json_parser_set_error@@Base>
  418e89:	mov    rbp,rax
  418e8c:	mov    rax,rbp
  418e8f:	add    rsp,0x18
  418e93:	pop    rbx
  418e94:	pop    r12
  418e96:	pop    r13
  418e98:	pop    r14
  418e9a:	pop    r15
  418e9c:	pop    rbp
  418e9d:	ret    
  418e9e:	add    rbp,0x4
  418ea2:	jmp    418e8c <main@@Base+0x1454c>
  418ea4:	mov    rdi,r14
  418ea7:	mov    rsi,rax
  418eaa:	mov    rdx,r13
  418ead:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  418eb2:	mov    rdx,r13
  418eb5:	cmp    rax,r13
  418eb8:	je     418ec6 <main@@Base+0x14586>
  418eba:	cmp    BYTE PTR [rax],0x7d
  418ebd:	je     4198e3 <main@@Base+0x14fa3>
  418ec3:	mov    rdx,rax
  418ec6:	movabs r12,0x686169725f6c656e
  418ed0:	mov    rsi,r13
  418ed3:	cmp    rdx,r13
  418ed6:	je     418f14 <main@@Base+0x145d4>
  418ed8:	movzx  eax,BYTE PTR [rdx]
  418edb:	cmp    al,0x2e
  418edd:	je     418ef1 <main@@Base+0x145b1>
  418edf:	cmp    al,0x22
  418ee1:	jne    418f09 <main@@Base+0x145c9>
  418ee3:	add    rdx,0x1
  418ee7:	mov    DWORD PTR [r14+0x14],0x0
  418eef:	jmp    418f11 <main@@Base+0x145d1>
  418ef1:	mov    ecx,0x5
  418ef6:	mov    rdi,r14
  418ef9:	mov    rsi,rdx
  418efc:	mov    rdx,r13
  418eff:	call   41f940 <flatcc_json_parser_set_error@@Base>
  418f04:	mov    rsi,rax
  418f07:	jmp    418f14 <main@@Base+0x145d4>
  418f09:	mov    DWORD PTR [r14+0x14],0x1
  418f11:	mov    rsi,rdx
  418f14:	mov    rax,r13
  418f17:	sub    rax,rsi
  418f1a:	cmp    rax,0x8
  418f1e:	jb     418f33 <main@@Base+0x145f3>
  418f20:	movbe  rax,QWORD PTR [rsi]
  418f25:	cmp    rax,r12
  418f28:	je     418fbe <main@@Base+0x1467e>
  418f2e:	jmp    418fd9 <main@@Base+0x14699>
  418f33:	and    al,0xf
  418f35:	add    al,0xff
  418f37:	cmp    al,0x7
  418f39:	ja     418fd9 <main@@Base+0x14699>
  418f3f:	movzx  eax,al
  418f42:	lea    rcx,[rip+0xbb0f]        # 424a58 <_IO_stdin_used@@Base+0xa58>
  418f49:	movsxd rax,DWORD PTR [rcx+rax*4]
  418f4d:	add    rax,rcx
  418f50:	xor    r8d,r8d
  418f53:	xor    r9d,r9d
  418f56:	xor    ecx,ecx
  418f58:	xor    edx,edx
  418f5a:	xor    ebp,ebp
  418f5c:	xor    ebx,ebx
  418f5e:	xor    edi,edi
  418f60:	jmp    rax
  418f62:	movsx  r8,BYTE PTR [rsi+0x7]
  418f67:	movsx  r9,BYTE PTR [rsi+0x6]
  418f6c:	shl    r9,0x8
  418f70:	or     r9,r8
  418f73:	movsx  rcx,BYTE PTR [rsi+0x5]
  418f78:	shl    rcx,0x10
  418f7c:	or     rcx,r9
  418f7f:	movsx  rdx,BYTE PTR [rsi+0x4]
  418f84:	shl    rdx,0x18
  418f88:	or     rdx,rcx
  418f8b:	movsx  rbp,BYTE PTR [rsi+0x3]
  418f90:	shl    rbp,0x20
  418f94:	or     rbp,rdx
  418f97:	movsx  rbx,BYTE PTR [rsi+0x2]
  418f9c:	shl    rbx,0x28
  418fa0:	or     rbx,rbp
  418fa3:	movsx  rdi,BYTE PTR [rsi+0x1]
  418fa8:	shl    rdi,0x30
  418fac:	or     rdi,rbx
  418faf:	movzx  eax,BYTE PTR [rsi]
  418fb2:	shl    rax,0x38
  418fb6:	or     rax,rdi
  418fb9:	cmp    rax,r12
  418fbc:	jne    418fd9 <main@@Base+0x14699>
  418fbe:	lea    r12,[rsi+0x8]
  418fc2:	mov    rax,r13
  418fc5:	sub    rax,r12
  418fc8:	cmp    rax,0x8
  418fcc:	jb     418fe9 <main@@Base+0x146a9>
  418fce:	movbe  rdx,QWORD PTR [r12]
  418fd4:	jmp    41907a <main@@Base+0x1473a>
  418fd9:	mov    rdi,r14
  418fdc:	mov    rdx,r13
  418fdf:	call   41ff40 <flatcc_json_parser_unmatched_symbol@@Base>
  418fe4:	jmp    419171 <main@@Base+0x14831>
  418fe9:	mov    ecx,eax
  418feb:	and    cl,0xf
  418fee:	add    cl,0xff
  418ff1:	cmp    cl,0x7
  418ff4:	ja     419159 <main@@Base+0x14819>
  418ffa:	movzx  ecx,cl
  418ffd:	lea    rdx,[rip+0xba74]        # 424a78 <_IO_stdin_used@@Base+0xa78>
  419004:	mov    rdi,rdx
  419007:	movsxd rdx,DWORD PTR [rdx+rcx*4]
  41900b:	add    rdx,rdi
  41900e:	xor    r8d,r8d
  419011:	xor    r9d,r9d
  419014:	xor    r10d,r10d
  419017:	xor    edi,edi
  419019:	xor    ebx,ebx
  41901b:	xor    ebp,ebp
  41901d:	xor    ecx,ecx
  41901f:	jmp    rdx
  419021:	movsx  r8,BYTE PTR [rsi+0xf]
  419026:	movsx  r9,BYTE PTR [rsi+0xe]
  41902b:	shl    r9,0x8
  41902f:	or     r9,r8
  419032:	movsx  r10,BYTE PTR [rsi+0xd]
  419037:	shl    r10,0x10
  41903b:	or     r10,r9
  41903e:	movsx  rdi,BYTE PTR [rsi+0xc]
  419043:	shl    rdi,0x18
  419047:	or     rdi,r10
  41904a:	movsx  rbx,BYTE PTR [rsi+0xb]
  41904f:	shl    rbx,0x20
  419053:	or     rbx,rdi
  419056:	movsx  rbp,BYTE PTR [rsi+0xa]
  41905b:	shl    rbp,0x28
  41905f:	or     rbp,rbx
  419062:	movsx  rcx,BYTE PTR [rsi+0x9]
  419067:	shl    rcx,0x30
  41906b:	or     rcx,rbp
  41906e:	movzx  edx,BYTE PTR [r12]
  419073:	shl    rdx,0x38
  419077:	or     rdx,rcx
  41907a:	movabs rcx,0xffffff0000000000
  419084:	and    rdx,rcx
  419087:	movabs rcx,0x6774680000000000
  419091:	cmp    rdx,rcx
  419094:	jne    419159 <main@@Base+0x14819>
  41909a:	cmp    rax,0x4
  41909e:	jl     419159 <main@@Base+0x14819>
  4190a4:	cmp    DWORD PTR [r14+0x14],0x0
  4190a9:	movzx  eax,BYTE PTR [rsi+0xb]
  4190ad:	je     4190c9 <main@@Base+0x14789>
  4190af:	cmp    al,0x21
  4190b1:	jl     4190bb <main@@Base+0x1477b>
  4190b3:	cmp    al,0x3a
  4190b5:	jne    419159 <main@@Base+0x14819>
  4190bb:	add    rsi,0xb
  4190bf:	mov    DWORD PTR [r14+0x14],0x0
  4190c7:	jmp    4190d5 <main@@Base+0x14795>
  4190c9:	cmp    al,0x22
  4190cb:	jne    419159 <main@@Base+0x14819>
  4190d1:	add    rsi,0xc
  4190d5:	mov    rax,r13
  4190d8:	sub    rax,rsi
  4190db:	cmp    rax,0x2
  4190df:	jl     4190fc <main@@Base+0x147bc>
  4190e1:	cmp    BYTE PTR [rsi],0x20
  4190e4:	jg     41910a <main@@Base+0x147ca>
  4190e6:	jne    4190fc <main@@Base+0x147bc>
  4190e8:	cmp    BYTE PTR [rsi+0x1],0x20
  4190ec:	jle    4190fc <main@@Base+0x147bc>
  4190ee:	add    rsi,0x1
  4190f2:	cmp    rsi,r13
  4190f5:	jne    419113 <main@@Base+0x147d3>
  4190f7:	jmp    419206 <main@@Base+0x148c6>
  4190fc:	mov    rdi,r14
  4190ff:	mov    rdx,r13
  419102:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  419107:	mov    rsi,rax
  41910a:	cmp    rsi,r13
  41910d:	je     419206 <main@@Base+0x148c6>
  419113:	cmp    BYTE PTR [rsi],0x3a
  419116:	jne    419206 <main@@Base+0x148c6>
  41911c:	lea    rbx,[rsi+0x1]
  419120:	mov    rax,r13
  419123:	sub    rax,rbx
  419126:	cmp    rax,0x2
  41912a:	jl     419218 <main@@Base+0x148d8>
  419130:	cmp    BYTE PTR [rbx],0x20
  419133:	jg     419229 <main@@Base+0x148e9>
  419139:	jne    419218 <main@@Base+0x148d8>
  41913f:	cmp    BYTE PTR [rsi+0x2],0x20
  419143:	jle    419218 <main@@Base+0x148d8>
  419149:	add    rsi,0x2
  41914d:	mov    rbx,rsi
  419150:	cmp    r12,rbx
  419153:	jne    419232 <main@@Base+0x148f2>
  419159:	mov    rdi,r14
  41915c:	mov    rsi,r12
  41915f:	mov    rdx,r13
  419162:	call   41ff40 <flatcc_json_parser_unmatched_symbol@@Base>
  419167:	movabs r12,0x686169725f6c656e
  419171:	mov    rcx,r13
  419174:	sub    rcx,rax
  419177:	cmp    rcx,0x2
  41917b:	jl     419198 <main@@Base+0x14858>
  41917d:	cmp    BYTE PTR [rax],0x20
  419180:	jg     4191a6 <main@@Base+0x14866>
  419182:	jne    419198 <main@@Base+0x14858>
  419184:	cmp    BYTE PTR [rax+0x1],0x20
  419188:	jle    419198 <main@@Base+0x14858>
  41918a:	add    rax,0x1
  41918e:	cmp    rax,r13
  419191:	jne    4191af <main@@Base+0x1486f>
  419193:	jmp    4198d2 <main@@Base+0x14f92>
  419198:	mov    rdi,r14
  41919b:	mov    rsi,rax
  41919e:	mov    rdx,r13
  4191a1:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  4191a6:	cmp    rax,r13
  4191a9:	je     4198d2 <main@@Base+0x14f92>
  4191af:	movzx  ecx,BYTE PTR [rax]
  4191b2:	cmp    cl,0x2c
  4191b5:	jne    4198da <main@@Base+0x14f9a>
  4191bb:	lea    rdx,[rax+0x1]
  4191bf:	mov    rcx,r13
  4191c2:	sub    rcx,rdx
  4191c5:	cmp    rcx,0x2
  4191c9:	jl     4191de <main@@Base+0x1489e>
  4191cb:	cmp    BYTE PTR [rdx],0x20
  4191ce:	jg     4191ef <main@@Base+0x148af>
  4191d0:	jne    4191de <main@@Base+0x1489e>
  4191d2:	cmp    BYTE PTR [rax+0x2],0x20
  4191d6:	jle    4191de <main@@Base+0x1489e>
  4191d8:	add    rax,0x2
  4191dc:	jmp    4191ec <main@@Base+0x148ac>
  4191de:	mov    rdi,r14
  4191e1:	mov    rsi,rdx
  4191e4:	mov    rdx,r13
  4191e7:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  4191ec:	mov    rdx,rax
  4191ef:	cmp    rdx,r13
  4191f2:	je     41990e <main@@Base+0x14fce>
  4191f8:	cmp    BYTE PTR [rdx],0x7d
  4191fb:	jne    418ed0 <main@@Base+0x14590>
  419201:	jmp    41991e <main@@Base+0x14fde>
  419206:	mov    ecx,0x4
  41920b:	mov    rdi,r14
  41920e:	mov    rdx,r13
  419211:	call   41f940 <flatcc_json_parser_set_error@@Base>
  419216:	jmp    419226 <main@@Base+0x148e6>
  419218:	mov    rdi,r14
  41921b:	mov    rsi,rbx
  41921e:	mov    rdx,r13
  419221:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  419226:	mov    rbx,rax
  419229:	cmp    r12,rbx
  41922c:	je     419159 <main@@Base+0x14819>
  419232:	mov    QWORD PTR [rsp+0x10],0x0
  41923b:	mov    DWORD PTR [rsp+0x4],0x0
  419243:	mov    WORD PTR [rsp],0x0
  419249:	cmp    rbx,r13
  41924c:	je     419283 <main@@Base+0x14943>
  41924e:	mov    rdi,r14
  419251:	mov    rsi,rbx
  419254:	mov    rdx,r13
  419257:	lea    rcx,[rsp+0x4]
  41925c:	lea    r8,[rsp+0x10]
  419261:	call   4215e0 <flatcc_json_parser_integer@@Base>
  419266:	cmp    rax,rbx
  419269:	movabs r12,0x686169725f6c656e
  419273:	je     419299 <main@@Base+0x14959>
  419275:	cmp    DWORD PTR [rsp+0x4],0x0
  41927a:	je     4192a5 <main@@Base+0x14965>
  41927c:	mov    ecx,0x8
  419281:	jmp    4192b8 <main@@Base+0x14978>
  419283:	xor    ecx,ecx
  419285:	mov    rax,r13
  419288:	movabs r12,0x686169725f6c656e
  419292:	cmp    rbx,rax
  419295:	jne    4192fb <main@@Base+0x149bb>
  419297:	jmp    4192cd <main@@Base+0x1498d>
  419299:	xor    ecx,ecx
  41929b:	mov    rax,rbx
  41929e:	cmp    rbx,rax
  4192a1:	jne    4192fb <main@@Base+0x149bb>
  4192a3:	jmp    4192cd <main@@Base+0x1498d>
  4192a5:	mov    rcx,QWORD PTR [rsp+0x10]
  4192aa:	cmp    rcx,0x10000
  4192b1:	jb     419308 <main@@Base+0x149c8>
  4192b3:	mov    ecx,0x7
  4192b8:	mov    rdi,r14
  4192bb:	mov    rsi,rax
  4192be:	mov    rdx,r13
  4192c1:	call   41f940 <flatcc_json_parser_set_error@@Base>
  4192c6:	xor    ecx,ecx
  4192c8:	cmp    rbx,rax
  4192cb:	jne    4192fb <main@@Base+0x149bb>
  4192cd:	mov    rdi,r14
  4192d0:	mov    rsi,rbx
  4192d3:	mov    rdx,r13
  4192d6:	lea    rcx,[rip+0x12443]        # 42b720 <filename@@Base+0x650>
  4192dd:	mov    r8,rsp
  4192e0:	call   41a0b0 <main@@Base+0x15770>
  4192e5:	cmp    rax,rbx
  4192e8:	je     419a3f <main@@Base+0x150ff>
  4192ee:	cmp    rax,r13
  4192f1:	je     419a3f <main@@Base+0x150ff>
  4192f7:	movzx  ecx,WORD PTR [rsp]
  4192fb:	mov    rdx,QWORD PTR [rsp+0x8]
  419300:	mov    WORD PTR [rdx],cx
  419303:	jmp    419171 <main@@Base+0x14831>
  419308:	mov    WORD PTR [rsp],cx
  41930c:	cmp    rbx,rax
  41930f:	jne    4192fb <main@@Base+0x149bb>
  419311:	jmp    4192cd <main@@Base+0x1498d>
  419313:	mov    rdi,r14
  419316:	mov    rsi,rax
  419319:	mov    rdx,r13
  41931c:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  419321:	mov    rdx,r13
  419324:	cmp    rax,r13
  419327:	je     419368 <main@@Base+0x14a28>
  419329:	cmp    BYTE PTR [rax],0x7d
  41932c:	jne    419365 <main@@Base+0x14a25>
  41932e:	lea    rbp,[rax+0x1]
  419332:	mov    rcx,r13
  419335:	sub    rcx,rbp
  419338:	cmp    rcx,0x2
  41933c:	jl     419a0c <main@@Base+0x150cc>
  419342:	cmp    BYTE PTR [rbp+0x0],0x20
  419346:	jg     418e48 <main@@Base+0x14508>
  41934c:	jne    419a0c <main@@Base+0x150cc>
  419352:	cmp    BYTE PTR [rax+0x2],0x20
  419356:	jle    419a0c <main@@Base+0x150cc>
  41935c:	add    rax,0x2
  419360:	jmp    418e45 <main@@Base+0x14505>
  419365:	mov    rdx,rax
  419368:	movabs r12,0x73776f72645f6174
  419372:	mov    rsi,r13
  419375:	cmp    rdx,r13
  419378:	je     4193b6 <main@@Base+0x14a76>
  41937a:	movzx  eax,BYTE PTR [rdx]
  41937d:	cmp    al,0x2e
  41937f:	je     419393 <main@@Base+0x14a53>
  419381:	cmp    al,0x22
  419383:	jne    4193ab <main@@Base+0x14a6b>
  419385:	add    rdx,0x1
  419389:	mov    DWORD PTR [r14+0x14],0x0
  419391:	jmp    4193b3 <main@@Base+0x14a73>
  419393:	mov    ecx,0x5
  419398:	mov    rdi,r14
  41939b:	mov    rsi,rdx
  41939e:	mov    rdx,r13
  4193a1:	call   41f940 <flatcc_json_parser_set_error@@Base>
  4193a6:	mov    rsi,rax
  4193a9:	jmp    4193b6 <main@@Base+0x14a76>
  4193ab:	mov    DWORD PTR [r14+0x14],0x1
  4193b3:	mov    rsi,rdx
  4193b6:	mov    rax,r13
  4193b9:	sub    rax,rsi
  4193bc:	cmp    rax,0x8
  4193c0:	jb     4193d5 <main@@Base+0x14a95>
  4193c2:	movbe  rax,QWORD PTR [rsi]
  4193c7:	cmp    rax,r12
  4193ca:	je     419460 <main@@Base+0x14b20>
  4193d0:	jmp    41947a <main@@Base+0x14b3a>
  4193d5:	and    al,0xf
  4193d7:	add    al,0xff
  4193d9:	cmp    al,0x7
  4193db:	ja     41947a <main@@Base+0x14b3a>
  4193e1:	movzx  eax,al
  4193e4:	lea    rcx,[rip+0xb6ad]        # 424a98 <_IO_stdin_used@@Base+0xa98>
  4193eb:	movsxd rax,DWORD PTR [rcx+rax*4]
  4193ef:	add    rax,rcx
  4193f2:	xor    r8d,r8d
  4193f5:	xor    r9d,r9d
  4193f8:	xor    ecx,ecx
  4193fa:	xor    edx,edx
  4193fc:	xor    ebp,ebp
  4193fe:	xor    ebx,ebx
  419400:	xor    edi,edi
  419402:	jmp    rax
  419404:	movsx  r8,BYTE PTR [rsi+0x7]
  419409:	movsx  r9,BYTE PTR [rsi+0x6]
  41940e:	shl    r9,0x8
  419412:	or     r9,r8
  419415:	movsx  rcx,BYTE PTR [rsi+0x5]
  41941a:	shl    rcx,0x10
  41941e:	or     rcx,r9
  419421:	movsx  rdx,BYTE PTR [rsi+0x4]
  419426:	shl    rdx,0x18
  41942a:	or     rdx,rcx
  41942d:	movsx  rbp,BYTE PTR [rsi+0x3]
  419432:	shl    rbp,0x20
  419436:	or     rbp,rdx
  419439:	movsx  rbx,BYTE PTR [rsi+0x2]
  41943e:	shl    rbx,0x28
  419442:	or     rbx,rbp
  419445:	movsx  rdi,BYTE PTR [rsi+0x1]
  41944a:	shl    rdi,0x30
  41944e:	or     rdi,rbx
  419451:	movzx  eax,BYTE PTR [rsi]
  419454:	shl    rax,0x38
  419458:	or     rax,rdi
  41945b:	cmp    rax,r12
  41945e:	jne    41947a <main@@Base+0x14b3a>
  419460:	lea    r10,[rsi+0x8]
  419464:	mov    rcx,r13
  419467:	sub    rcx,r10
  41946a:	cmp    rcx,0x8
  41946e:	jb     419482 <main@@Base+0x14b42>
  419470:	movbe  rdx,QWORD PTR [r10]
  419475:	jmp    41950f <main@@Base+0x14bcf>
  41947a:	mov    rdi,r14
  41947d:	jmp    41953f <main@@Base+0x14bff>
  419482:	and    cl,0xf
  419485:	add    cl,0xff
  419488:	cmp    cl,0x7
  41948b:	ja     419539 <main@@Base+0x14bf9>
  419491:	movzx  ecx,cl
  419494:	lea    rax,[rip+0xb61d]        # 424ab8 <_IO_stdin_used@@Base+0xab8>
  41949b:	mov    rdx,rax
  41949e:	movsxd rax,DWORD PTR [rax+rcx*4]
  4194a2:	add    rax,rdx
  4194a5:	xor    r8d,r8d
  4194a8:	xor    r9d,r9d
  4194ab:	xor    edx,edx
  4194ad:	xor    edi,edi
  4194af:	xor    ebx,ebx
  4194b1:	xor    ebp,ebp
  4194b3:	xor    ecx,ecx
  4194b5:	jmp    rax
  4194b7:	movsx  r8,BYTE PTR [rsi+0xf]
  4194bc:	movsx  r9,BYTE PTR [rsi+0xe]
  4194c1:	shl    r9,0x8
  4194c5:	or     r9,r8
  4194c8:	movsx  rdx,BYTE PTR [rsi+0xd]
  4194cd:	shl    rdx,0x10
  4194d1:	or     rdx,r9
  4194d4:	movsx  rdi,BYTE PTR [rsi+0xc]
  4194d9:	shl    rdi,0x18
  4194dd:	or     rdi,rdx
  4194e0:	movsx  rbx,BYTE PTR [rsi+0xb]
  4194e5:	shl    rbx,0x20
  4194e9:	or     rbx,rdi
  4194ec:	movsx  rbp,BYTE PTR [rsi+0xa]
  4194f1:	shl    rbp,0x28
  4194f5:	or     rbp,rbx
  4194f8:	movsx  rcx,BYTE PTR [rsi+0x9]
  4194fd:	shl    rcx,0x30
  419501:	or     rcx,rbp
  419504:	movzx  edx,BYTE PTR [r10]
  419508:	shl    rdx,0x38
  41950c:	or     rdx,rcx
  41950f:	movabs rax,0x7461636b5f64616d
  419519:	cmp    rdx,rax
  41951c:	jne    419539 <main@@Base+0x14bf9>
  41951e:	lea    r12,[rsi+0x10]
  419522:	mov    rax,r13
  419525:	sub    rax,r12
  419528:	cmp    rax,0x8
  41952c:	jb     41954f <main@@Base+0x14c0f>
  41952e:	movbe  rdx,QWORD PTR [r12]
  419534:	jmp    4195e0 <main@@Base+0x14ca0>
  419539:	mov    rdi,r14
  41953c:	mov    rsi,r10
  41953f:	mov    rdx,r13
  419542:	call   41ff40 <flatcc_json_parser_unmatched_symbol@@Base>
  419547:	mov    rbx,rax
  41954a:	jmp    4196db <main@@Base+0x14d9b>
  41954f:	mov    ecx,eax
  419551:	and    cl,0xf
  419554:	add    cl,0xff
  419557:	cmp    cl,0x7
  41955a:	ja     4196c0 <main@@Base+0x14d80>
  419560:	movzx  ecx,cl
  419563:	lea    rdx,[rip+0xb56e]        # 424ad8 <_IO_stdin_used@@Base+0xad8>
  41956a:	mov    rdi,rdx
  41956d:	movsxd rdx,DWORD PTR [rdx+rcx*4]
  419571:	add    rdx,rdi
  419574:	xor    r8d,r8d
  419577:	xor    r9d,r9d
  41957a:	xor    r10d,r10d
  41957d:	xor    edi,edi
  41957f:	xor    ebp,ebp
  419581:	xor    ebx,ebx
  419583:	xor    ecx,ecx
  419585:	jmp    rdx
  419587:	movsx  r8,BYTE PTR [rsi+0x17]
  41958c:	movsx  r9,BYTE PTR [rsi+0x16]
  419591:	shl    r9,0x8
  419595:	or     r9,r8
  419598:	movsx  r10,BYTE PTR [rsi+0x15]
  41959d:	shl    r10,0x10
  4195a1:	or     r10,r9
  4195a4:	movsx  rdi,BYTE PTR [rsi+0x14]
  4195a9:	shl    rdi,0x18
  4195ad:	or     rdi,r10
  4195b0:	movsx  rbp,BYTE PTR [rsi+0x13]
  4195b5:	shl    rbp,0x20
  4195b9:	or     rbp,rdi
  4195bc:	movsx  rbx,BYTE PTR [rsi+0x12]
  4195c1:	shl    rbx,0x28
  4195c5:	or     rbx,rbp
  4195c8:	movsx  rcx,BYTE PTR [rsi+0x11]
  4195cd:	shl    rcx,0x30
  4195d1:	or     rcx,rbx
  4195d4:	movzx  edx,BYTE PTR [r12]
  4195d9:	shl    rdx,0x38
  4195dd:	or     rdx,rcx
  4195e0:	movabs rcx,0xffffff0000000000
  4195ea:	and    rdx,rcx
  4195ed:	movabs rcx,0x6167650000000000
  4195f7:	cmp    rdx,rcx
  4195fa:	jne    4196c0 <main@@Base+0x14d80>
  419600:	cmp    rax,0x4
  419604:	jl     4196c0 <main@@Base+0x14d80>
  41960a:	cmp    DWORD PTR [r14+0x14],0x0
  41960f:	movzx  eax,BYTE PTR [rsi+0x13]
  419613:	je     41962f <main@@Base+0x14cef>
  419615:	cmp    al,0x21
  419617:	jl     419621 <main@@Base+0x14ce1>
  419619:	cmp    al,0x3a
  41961b:	jne    4196c0 <main@@Base+0x14d80>
  419621:	add    rsi,0x13
  419625:	mov    DWORD PTR [r14+0x14],0x0
  41962d:	jmp    41963b <main@@Base+0x14cfb>
  41962f:	cmp    al,0x22
  419631:	jne    4196c0 <main@@Base+0x14d80>
  419637:	add    rsi,0x14
  41963b:	mov    rax,r13
  41963e:	sub    rax,rsi
  419641:	cmp    rax,0x2
  419645:	jl     419662 <main@@Base+0x14d22>
  419647:	cmp    BYTE PTR [rsi],0x20
  41964a:	jg     419670 <main@@Base+0x14d30>
  41964c:	jne    419662 <main@@Base+0x14d22>
  41964e:	cmp    BYTE PTR [rsi+0x1],0x20
  419652:	jle    419662 <main@@Base+0x14d22>
  419654:	add    rsi,0x1
  419658:	cmp    rsi,r13
  41965b:	jne    419679 <main@@Base+0x14d39>
  41965d:	jmp    41977d <main@@Base+0x14e3d>
  419662:	mov    rdi,r14
  419665:	mov    rdx,r13
  419668:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  41966d:	mov    rsi,rax
  419670:	cmp    rsi,r13
  419673:	je     41977d <main@@Base+0x14e3d>
  419679:	cmp    BYTE PTR [rsi],0x3a
  41967c:	jne    41977d <main@@Base+0x14e3d>
  419682:	lea    rbp,[rsi+0x1]
  419686:	mov    rax,r13
  419689:	sub    rax,rbp
  41968c:	cmp    rax,0x2
  419690:	jl     41978f <main@@Base+0x14e4f>
  419696:	cmp    BYTE PTR [rbp+0x0],0x20
  41969a:	jg     4197a0 <main@@Base+0x14e60>
  4196a0:	jne    41978f <main@@Base+0x14e4f>
  4196a6:	cmp    BYTE PTR [rsi+0x2],0x20
  4196aa:	jle    41978f <main@@Base+0x14e4f>
  4196b0:	add    rsi,0x2
  4196b4:	mov    rbp,rsi
  4196b7:	cmp    r12,rbp
  4196ba:	jne    4197a9 <main@@Base+0x14e69>
  4196c0:	mov    rdi,r14
  4196c3:	mov    rsi,r12
  4196c6:	mov    rdx,r13
  4196c9:	call   41ff40 <flatcc_json_parser_unmatched_symbol@@Base>
  4196ce:	mov    rbx,rax
  4196d1:	movabs r12,0x73776f72645f6174
  4196db:	mov    rax,r13
  4196de:	sub    rax,rbx
  4196e1:	cmp    rax,0x2
  4196e5:	jl     419702 <main@@Base+0x14dc2>
  4196e7:	cmp    BYTE PTR [rbx],0x20
  4196ea:	jg     419713 <main@@Base+0x14dd3>
  4196ec:	jne    419702 <main@@Base+0x14dc2>
  4196ee:	cmp    BYTE PTR [rbx+0x1],0x20
  4196f2:	jle    419702 <main@@Base+0x14dc2>
  4196f4:	add    rbx,0x1
  4196f8:	cmp    rbx,r13
  4196fb:	jne    41971c <main@@Base+0x14ddc>
  4196fd:	jmp    41995f <main@@Base+0x1501f>
  419702:	mov    rdi,r14
  419705:	mov    rsi,rbx
  419708:	mov    rdx,r13
  41970b:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  419710:	mov    rbx,rax
  419713:	cmp    rbx,r13
  419716:	je     41995f <main@@Base+0x1501f>
  41971c:	movzx  eax,BYTE PTR [rbx]
  41971f:	cmp    al,0x2c
  419721:	jne    419985 <main@@Base+0x15045>
  419727:	lea    rdx,[rbx+0x1]
  41972b:	mov    rax,r13
  41972e:	sub    rax,rdx
  419731:	cmp    rax,0x2
  419735:	jl     419755 <main@@Base+0x14e15>
  419737:	cmp    BYTE PTR [rdx],0x20
  41973a:	jg     419766 <main@@Base+0x14e26>
  41973c:	jne    419755 <main@@Base+0x14e15>
  41973e:	cmp    BYTE PTR [rbx+0x2],0x20
  419742:	jle    419755 <main@@Base+0x14e15>
  419744:	add    rbx,0x2
  419748:	mov    rdx,rbx
  41974b:	cmp    rdx,r13
  41974e:	jne    41976f <main@@Base+0x14e2f>
  419750:	jmp    4199c3 <main@@Base+0x15083>
  419755:	mov    rdi,r14
  419758:	mov    rsi,rdx
  41975b:	mov    rdx,r13
  41975e:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  419763:	mov    rdx,rax
  419766:	cmp    rdx,r13
  419769:	je     4199c3 <main@@Base+0x15083>
  41976f:	cmp    BYTE PTR [rdx],0x7d
  419772:	jne    419372 <main@@Base+0x14a32>
  419778:	jmp    4199d3 <main@@Base+0x15093>
  41977d:	mov    ecx,0x4
  419782:	mov    rdi,r14
  419785:	mov    rdx,r13
  419788:	call   41f940 <flatcc_json_parser_set_error@@Base>
  41978d:	jmp    41979d <main@@Base+0x14e5d>
  41978f:	mov    rdi,r14
  419792:	mov    rsi,rbp
  419795:	mov    rdx,r13
  419798:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  41979d:	mov    rbp,rax
  4197a0:	cmp    r12,rbp
  4197a3:	je     4196c0 <main@@Base+0x14d80>
  4197a9:	mov    QWORD PTR [rsp+0x10],0x0
  4197b2:	mov    DWORD PTR [rsp+0x4],0x0
  4197ba:	mov    DWORD PTR [rsp],0x0
  4197c1:	mov    DWORD PTR [rsp+0x8],0x0
  4197c9:	cmp    rbp,r13
  4197cc:	je     419815 <main@@Base+0x14ed5>
  4197ce:	mov    rdi,r14
  4197d1:	mov    rsi,rbp
  4197d4:	mov    rdx,r13
  4197d7:	lea    rcx,[rsp+0x4]
  4197dc:	lea    r8,[rsp+0x10]
  4197e1:	call   4215e0 <flatcc_json_parser_integer@@Base>
  4197e6:	cmp    rax,rbp
  4197e9:	movabs r12,0x73776f72645f6174
  4197f3:	je     419829 <main@@Base+0x14ee9>
  4197f5:	mov    rbx,rax
  4197f8:	mov    rax,QWORD PTR [rsp+0x10]
  4197fd:	cmp    DWORD PTR [rsp+0x4],0x0
  419802:	je     419833 <main@@Base+0x14ef3>
  419804:	mov    ecx,0x80000001
  419809:	cmp    rax,rcx
  41980c:	jb     419858 <main@@Base+0x14f18>
  41980e:	mov    ecx,0x8
  419813:	jmp    419840 <main@@Base+0x14f00>
  419815:	mov    rbx,r13
  419818:	movabs r12,0x73776f72645f6174
  419822:	cmp    rbp,rbx
  419825:	jne    41989b <main@@Base+0x14f5b>
  419827:	jmp    419867 <main@@Base+0x14f27>
  419829:	mov    rbx,rbp
  41982c:	cmp    rbp,rbx
  41982f:	jne    41989b <main@@Base+0x14f5b>
  419831:	jmp    419867 <main@@Base+0x14f27>
  419833:	test   rax,0xffffffff80000000
  419839:	je     41985b <main@@Base+0x14f1b>
  41983b:	mov    ecx,0x7
  419840:	mov    rdi,r14
  419843:	mov    rsi,rbx
  419846:	mov    rdx,r13
  419849:	call   41f940 <flatcc_json_parser_set_error@@Base>
  41984e:	mov    rbx,rax
  419851:	cmp    rbp,rbx
  419854:	jne    41989b <main@@Base+0x14f5b>
  419856:	jmp    419867 <main@@Base+0x14f27>
  419858:	neg    rax
  41985b:	mov    DWORD PTR [rsp],eax
  41985e:	mov    DWORD PTR [rsp+0x8],eax
  419862:	cmp    rbp,rbx
  419865:	jne    41989b <main@@Base+0x14f5b>
  419867:	mov    rdi,r14
  41986a:	mov    rsi,rbp
  41986d:	mov    rdx,r13
  419870:	lea    rcx,[rip+0x11e89]        # 42b700 <filename@@Base+0x630>
  419877:	mov    r8,rsp
  41987a:	call   414410 <main@@Base+0xfad0>
  41987f:	mov    rbx,rax
  419882:	cmp    rax,rbp
  419885:	je     419a46 <main@@Base+0x15106>
  41988b:	cmp    rbx,r13
  41988e:	je     419a46 <main@@Base+0x15106>
  419894:	mov    eax,DWORD PTR [rsp]
  419897:	mov    DWORD PTR [rsp+0x8],eax
  41989b:	mov    ebp,DWORD PTR [rsp+0x8]
  41989f:	test   ebp,ebp
  4198a1:	jne    4198ae <main@@Base+0x14f6e>
  4198a3:	test   BYTE PTR [r14+0x10],0x2
  4198a8:	je     4196db <main@@Base+0x14d9b>
  4198ae:	mov    rdi,QWORD PTR [r14]
  4198b1:	xor    esi,esi
  4198b3:	mov    edx,0x4
  4198b8:	mov    ecx,0x4
  4198bd:	call   41d880 <flatcc_builder_table_add@@Base>
  4198c2:	test   rax,rax
  4198c5:	je     419a46 <main@@Base+0x15106>
  4198cb:	mov    DWORD PTR [rax],ebp
  4198cd:	jmp    4196db <main@@Base+0x14d9b>
  4198d2:	mov    rsi,r13
  4198d5:	jmp    418e28 <main@@Base+0x144e8>
  4198da:	cmp    cl,0x7d
  4198dd:	jne    419a1f <main@@Base+0x150df>
  4198e3:	lea    rbp,[rax+0x1]
  4198e7:	mov    rcx,r13
  4198ea:	sub    rcx,rbp
  4198ed:	cmp    rcx,0x2
  4198f1:	jl     41994c <main@@Base+0x1500c>
  4198f3:	cmp    BYTE PTR [rbp+0x0],0x20
  4198f7:	jg     418e09 <main@@Base+0x144c9>
  4198fd:	jne    41994c <main@@Base+0x1500c>
  4198ff:	cmp    BYTE PTR [rax+0x2],0x20
  419903:	jle    41994c <main@@Base+0x1500c>
  419905:	add    rax,0x2
  419909:	jmp    418e06 <main@@Base+0x144c6>
  41990e:	mov    ecx,0xa
  419913:	mov    rdi,r14
  419916:	mov    rsi,r13
  419919:	jmp    418dfe <main@@Base+0x144be>
  41991e:	lea    rbp,[rdx+0x1]
  419922:	mov    rax,r13
  419925:	sub    rax,rbp
  419928:	cmp    rax,0x2
  41992c:	jl     41994c <main@@Base+0x1500c>
  41992e:	cmp    BYTE PTR [rbp+0x0],0x20
  419932:	jg     418e09 <main@@Base+0x144c9>
  419938:	jne    41994c <main@@Base+0x1500c>
  41993a:	cmp    BYTE PTR [rdx+0x2],0x20
  41993e:	jle    41994c <main@@Base+0x1500c>
  419940:	add    rdx,0x2
  419944:	mov    rbp,rdx
  419947:	jmp    418e09 <main@@Base+0x144c9>
  41994c:	mov    rdi,r14
  41994f:	mov    rsi,rbp
  419952:	mov    rdx,r13
  419955:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  41995a:	jmp    418e06 <main@@Base+0x144c6>
  41995f:	mov    rbp,r13
  419962:	cmp    DWORD PTR [r14+0x20],0x0
  419967:	jne    418e53 <main@@Base+0x14513>
  41996d:	mov    rdi,QWORD PTR [r14]
  419970:	call   41cf10 <flatcc_builder_end_table@@Base>
  419975:	mov    DWORD PTR [r15],eax
  419978:	test   eax,eax
  41997a:	jne    418e69 <main@@Base+0x14529>
  419980:	jmp    418e53 <main@@Base+0x14513>
  419985:	cmp    al,0x7d
  419987:	jne    419a2f <main@@Base+0x150ef>
  41998d:	lea    rbp,[rbx+0x1]
  419991:	mov    rax,r13
  419994:	sub    rax,rbp
  419997:	cmp    rax,0x2
  41999b:	jl     419a0c <main@@Base+0x150cc>
  41999d:	cmp    BYTE PTR [rbp+0x0],0x20
  4199a1:	jg     418e48 <main@@Base+0x14508>
  4199a7:	jne    419a0c <main@@Base+0x150cc>
  4199a9:	cmp    BYTE PTR [rbx+0x2],0x20
  4199ad:	jle    419a0c <main@@Base+0x150cc>
  4199af:	add    rbx,0x2
  4199b3:	mov    rbp,rbx
  4199b6:	cmp    DWORD PTR [r14+0x20],0x0
  4199bb:	jne    418e53 <main@@Base+0x14513>
  4199c1:	jmp    41996d <main@@Base+0x1502d>
  4199c3:	mov    ecx,0xa
  4199c8:	mov    rdi,r14
  4199cb:	mov    rsi,r13
  4199ce:	jmp    418e3d <main@@Base+0x144fd>
  4199d3:	lea    rbp,[rdx+0x1]
  4199d7:	mov    rax,r13
  4199da:	sub    rax,rbp
  4199dd:	cmp    rax,0x2
  4199e1:	jl     419a0c <main@@Base+0x150cc>
  4199e3:	cmp    BYTE PTR [rbp+0x0],0x20
  4199e7:	jg     418e48 <main@@Base+0x14508>
  4199ed:	jne    419a0c <main@@Base+0x150cc>
  4199ef:	cmp    BYTE PTR [rdx+0x2],0x20
  4199f3:	jle    419a0c <main@@Base+0x150cc>
  4199f5:	add    rdx,0x2
  4199f9:	mov    rbp,rdx
  4199fc:	cmp    DWORD PTR [r14+0x20],0x0
  419a01:	jne    418e53 <main@@Base+0x14513>
  419a07:	jmp    41996d <main@@Base+0x1502d>
  419a0c:	mov    rdi,r14
  419a0f:	mov    rsi,rbp
  419a12:	mov    rdx,r13
  419a15:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  419a1a:	jmp    418e45 <main@@Base+0x14505>
  419a1f:	mov    ecx,0xa
  419a24:	mov    rdi,r14
  419a27:	mov    rsi,rax
  419a2a:	jmp    418dfe <main@@Base+0x144be>
  419a2f:	mov    ecx,0xa
  419a34:	mov    rdi,r14
  419a37:	mov    rsi,rbx
  419a3a:	jmp    418e3d <main@@Base+0x144fd>
  419a3f:	mov    ecx,0x21
  419a44:	jmp    419a24 <main@@Base+0x150e4>
  419a46:	mov    rbp,rbx
  419a49:	jmp    418e53 <main@@Base+0x14513>
  419a4e:	xchg   ax,ax
  419a50:	add    dil,0x1
  419a54:	cmp    dil,0xc
  419a58:	ja     419a69 <main@@Base+0x15129>
  419a5a:	movsx  rax,dil
  419a5e:	lea    rcx,[rip+0xb0db]        # 424b40 <_IO_stdin_used@@Base+0xb40>
  419a65:	mov    eax,DWORD PTR [rcx+rax*4]
  419a68:	ret    
  419a69:	xor    eax,eax
  419a6b:	ret    
  419a6c:	nop    DWORD PTR [rax+0x0]
  419a70:	push   rbp
  419a71:	push   r15
  419a73:	push   r14
  419a75:	push   r13
  419a77:	push   r12
  419a79:	push   rbx
  419a7a:	sub    rsp,0x18
  419a7e:	mov    r13,rcx
  419a81:	mov    r15,rdx
  419a84:	mov    rbx,rsi
  419a87:	mov    r14,rdi
  419a8a:	mov    DWORD PTR [rcx],0x0
  419a90:	mov    rdi,QWORD PTR [rdi]
  419a93:	mov    esi,0x4
  419a98:	mov    edx,0x4
  419a9d:	call   41b580 <flatcc_builder_start_struct@@Base>
  419aa2:	test   rax,rax
  419aa5:	je     419fe2 <main@@Base+0x156a2>
  419aab:	cmp    rbx,r15
  419aae:	je     419ae0 <main@@Base+0x151a0>
  419ab0:	cmp    BYTE PTR [rbx],0x7b
  419ab3:	jne    419ae0 <main@@Base+0x151a0>
  419ab5:	mov    QWORD PTR [rsp+0x10],rax
  419aba:	lea    rax,[rbx+0x1]
  419abe:	mov    rcx,r15
  419ac1:	sub    rcx,rax
  419ac4:	cmp    rcx,0x2
  419ac8:	jl     419b1e <main@@Base+0x151de>
  419aca:	cmp    BYTE PTR [rax],0x20
  419acd:	jg     419b2c <main@@Base+0x151ec>
  419acf:	jne    419b1e <main@@Base+0x151de>
  419ad1:	cmp    BYTE PTR [rbx+0x2],0x20
  419ad5:	jle    419b1e <main@@Base+0x151de>
  419ad7:	add    rbx,0x2
  419adb:	mov    rax,rbx
  419ade:	jmp    419b2c <main@@Base+0x151ec>
  419ae0:	mov    ecx,0x15
  419ae5:	mov    rdi,r14
  419ae8:	mov    rsi,rbx
  419aeb:	mov    rdx,r15
  419aee:	call   41f940 <flatcc_json_parser_set_error@@Base>
  419af3:	mov    rbp,rax
  419af6:	mov    rbx,r15
  419af9:	cmp    rbp,r15
  419afc:	je     419fe2 <main@@Base+0x156a2>
  419b02:	mov    rdi,QWORD PTR [r14]
  419b05:	call   41b650 <flatcc_builder_end_struct@@Base>
  419b0a:	mov    DWORD PTR [r13+0x0],eax
  419b0e:	mov    rbx,rbp
  419b11:	test   eax,eax
  419b13:	jne    419ff8 <main@@Base+0x156b8>
  419b19:	jmp    419fe2 <main@@Base+0x156a2>
  419b1e:	mov    rdi,r14
  419b21:	mov    rsi,rax
  419b24:	mov    rdx,r15
  419b27:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  419b2c:	mov    rdx,r15
  419b2f:	cmp    rax,r15
  419b32:	je     419b40 <main@@Base+0x15200>
  419b34:	cmp    BYTE PTR [rax],0x7d
  419b37:	je     41a00f <main@@Base+0x156cf>
  419b3d:	mov    rdx,rax
  419b40:	movabs r12,0x626f6f6b735f7265
  419b4a:	nop    WORD PTR [rax+rax*1+0x0]
  419b50:	mov    rsi,r15
  419b53:	cmp    rdx,r15
  419b56:	je     419bab <main@@Base+0x1526b>
  419b58:	movzx  eax,BYTE PTR [rdx]
  419b5b:	cmp    al,0x2e
  419b5d:	je     419b80 <main@@Base+0x15240>
  419b5f:	cmp    al,0x22
  419b61:	jne    419ba0 <main@@Base+0x15260>
  419b63:	add    rdx,0x1
  419b67:	mov    DWORD PTR [r14+0x14],0x0
  419b6f:	jmp    419ba8 <main@@Base+0x15268>
  419b71:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419b7b:	nop    DWORD PTR [rax+rax*1+0x0]
  419b80:	mov    ecx,0x5
  419b85:	mov    rdi,r14
  419b88:	mov    rsi,rdx
  419b8b:	mov    rdx,r15
  419b8e:	call   41f940 <flatcc_json_parser_set_error@@Base>
  419b93:	mov    rsi,rax
  419b96:	jmp    419bab <main@@Base+0x1526b>
  419b98:	nop    DWORD PTR [rax+rax*1+0x0]
  419ba0:	mov    DWORD PTR [r14+0x14],0x1
  419ba8:	mov    rsi,rdx
  419bab:	mov    rax,r15
  419bae:	sub    rax,rsi
  419bb1:	cmp    rax,0x8
  419bb5:	jb     419bd0 <main@@Base+0x15290>
  419bb7:	movbe  rax,QWORD PTR [rsi]
  419bbc:	cmp    rax,r12
  419bbf:	je     419c5b <main@@Base+0x1531b>
  419bc5:	jmp    419c80 <main@@Base+0x15340>
  419bca:	nop    WORD PTR [rax+rax*1+0x0]
  419bd0:	and    al,0xf
  419bd2:	add    al,0xff
  419bd4:	cmp    al,0x7
  419bd6:	ja     419c80 <main@@Base+0x15340>
  419bdc:	movzx  eax,al
  419bdf:	lea    rcx,[rip+0xaf12]        # 424af8 <_IO_stdin_used@@Base+0xaf8>
  419be6:	movsxd rax,DWORD PTR [rcx+rax*4]
  419bea:	add    rax,rcx
  419bed:	xor    r8d,r8d
  419bf0:	xor    r9d,r9d
  419bf3:	xor    ecx,ecx
  419bf5:	xor    edx,edx
  419bf7:	xor    ebp,ebp
  419bf9:	xor    ebx,ebx
  419bfb:	xor    edi,edi
  419bfd:	jmp    rax
  419bff:	movsx  r8,BYTE PTR [rsi+0x7]
  419c04:	movsx  r9,BYTE PTR [rsi+0x6]
  419c09:	shl    r9,0x8
  419c0d:	or     r9,r8
  419c10:	movsx  rcx,BYTE PTR [rsi+0x5]
  419c15:	shl    rcx,0x10
  419c19:	or     rcx,r9
  419c1c:	movsx  rdx,BYTE PTR [rsi+0x4]
  419c21:	shl    rdx,0x18
  419c25:	or     rdx,rcx
  419c28:	movsx  rbp,BYTE PTR [rsi+0x3]
  419c2d:	shl    rbp,0x20
  419c31:	or     rbp,rdx
  419c34:	movsx  rbx,BYTE PTR [rsi+0x2]
  419c39:	shl    rbx,0x28
  419c3d:	or     rbx,rbp
  419c40:	movsx  rdi,BYTE PTR [rsi+0x1]
  419c45:	shl    rdi,0x30
  419c49:	or     rdi,rbx
  419c4c:	movzx  eax,BYTE PTR [rsi]
  419c4f:	shl    rax,0x38
  419c53:	or     rax,rdi
  419c56:	cmp    rax,r12
  419c59:	jne    419c80 <main@@Base+0x15340>
  419c5b:	mov    r12,r13
  419c5e:	lea    r13,[rsi+0x8]
  419c62:	mov    rax,r15
  419c65:	sub    rax,r13
  419c68:	cmp    rax,0x8
  419c6c:	jb     419c90 <main@@Base+0x15350>
  419c6e:	movbe  rdx,QWORD PTR [r13+0x0]
  419c74:	jmp    419d21 <main@@Base+0x153e1>
  419c79:	nop    DWORD PTR [rax+0x0]
  419c80:	mov    rdi,r14
  419c83:	mov    rdx,r15
  419c86:	call   41ff40 <flatcc_json_parser_unmatched_symbol@@Base>
  419c8b:	jmp    419e1b <main@@Base+0x154db>
  419c90:	mov    ecx,eax
  419c92:	and    cl,0xf
  419c95:	add    cl,0xff
  419c98:	cmp    cl,0x7
  419c9b:	ja     419e00 <main@@Base+0x154c0>
  419ca1:	movzx  ecx,cl
  419ca4:	lea    rdx,[rip+0xae6d]        # 424b18 <_IO_stdin_used@@Base+0xb18>
  419cab:	mov    rdi,rdx
  419cae:	movsxd rdx,DWORD PTR [rdx+rcx*4]
  419cb2:	add    rdx,rdi
  419cb5:	xor    r8d,r8d
  419cb8:	xor    r9d,r9d
  419cbb:	xor    r10d,r10d
  419cbe:	xor    edi,edi
  419cc0:	xor    ebx,ebx
  419cc2:	xor    ebp,ebp
  419cc4:	xor    ecx,ecx
  419cc6:	jmp    rdx
  419cc8:	movsx  r8,BYTE PTR [rsi+0xf]
  419ccd:	movsx  r9,BYTE PTR [rsi+0xe]
  419cd2:	shl    r9,0x8
  419cd6:	or     r9,r8
  419cd9:	movsx  r10,BYTE PTR [rsi+0xd]
  419cde:	shl    r10,0x10
  419ce2:	or     r10,r9
  419ce5:	movsx  rdi,BYTE PTR [rsi+0xc]
  419cea:	shl    rdi,0x18
  419cee:	or     rdi,r10
  419cf1:	movsx  rbx,BYTE PTR [rsi+0xb]
  419cf6:	shl    rbx,0x20
  419cfa:	or     rbx,rdi
  419cfd:	movsx  rbp,BYTE PTR [rsi+0xa]
  419d02:	shl    rbp,0x28
  419d06:	or     rbp,rbx
  419d09:	movsx  rcx,BYTE PTR [rsi+0x9]
  419d0e:	shl    rcx,0x30
  419d12:	or     rcx,rbp
  419d15:	movzx  edx,BYTE PTR [r13+0x0]
  419d1a:	shl    rdx,0x38
  419d1e:	or     rdx,rcx
  419d21:	shr    rdx,0x30
  419d25:	cmp    rdx,0x6164
  419d2c:	jne    419e00 <main@@Base+0x154c0>
  419d32:	cmp    rax,0x3
  419d36:	jl     419e00 <main@@Base+0x154c0>
  419d3c:	cmp    DWORD PTR [r14+0x14],0x0
  419d41:	movzx  eax,BYTE PTR [rsi+0xa]
  419d45:	je     419d61 <main@@Base+0x15421>
  419d47:	cmp    al,0x21
  419d49:	jl     419d53 <main@@Base+0x15413>
  419d4b:	cmp    al,0x3a
  419d4d:	jne    419e00 <main@@Base+0x154c0>
  419d53:	add    rsi,0xa
  419d57:	mov    DWORD PTR [r14+0x14],0x0
  419d5f:	jmp    419d6d <main@@Base+0x1542d>
  419d61:	cmp    al,0x22
  419d63:	jne    419e00 <main@@Base+0x154c0>
  419d69:	add    rsi,0xb
  419d6d:	mov    rax,r15
  419d70:	sub    rax,rsi
  419d73:	cmp    rax,0x2
  419d77:	jl     419d94 <main@@Base+0x15454>
  419d79:	cmp    BYTE PTR [rsi],0x20
  419d7c:	jg     419da2 <main@@Base+0x15462>
  419d7e:	jne    419d94 <main@@Base+0x15454>
  419d80:	cmp    BYTE PTR [rsi+0x1],0x20
  419d84:	jle    419d94 <main@@Base+0x15454>
  419d86:	add    rsi,0x1
  419d8a:	cmp    rsi,r15
  419d8d:	jne    419dab <main@@Base+0x1546b>
  419d8f:	jmp    419ec8 <main@@Base+0x15588>
  419d94:	mov    rdi,r14
  419d97:	mov    rdx,r15
  419d9a:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  419d9f:	mov    rsi,rax
  419da2:	cmp    rsi,r15
  419da5:	je     419ec8 <main@@Base+0x15588>
  419dab:	cmp    BYTE PTR [rsi],0x3a
  419dae:	jne    419ec8 <main@@Base+0x15588>
  419db4:	lea    rbp,[rsi+0x1]
  419db8:	mov    rax,r15
  419dbb:	sub    rax,rbp
  419dbe:	cmp    rax,0x2
  419dc2:	jl     419eda <main@@Base+0x1559a>
  419dc8:	cmp    BYTE PTR [rbp+0x0],0x20
  419dcc:	jg     419eeb <main@@Base+0x155ab>
  419dd2:	jne    419eda <main@@Base+0x1559a>
  419dd8:	cmp    BYTE PTR [rsi+0x2],0x20
  419ddc:	jle    419eda <main@@Base+0x1559a>
  419de2:	add    rsi,0x2
  419de6:	mov    rbp,rsi
  419de9:	cmp    r13,rbp
  419dec:	jne    419ef4 <main@@Base+0x155b4>
  419df2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419dfc:	nop    DWORD PTR [rax+0x0]
  419e00:	mov    rdi,r14
  419e03:	mov    rsi,r13
  419e06:	mov    rdx,r15
  419e09:	call   41ff40 <flatcc_json_parser_unmatched_symbol@@Base>
  419e0e:	mov    r13,r12
  419e11:	movabs r12,0x626f6f6b735f7265
  419e1b:	mov    rcx,r15
  419e1e:	sub    rcx,rax
  419e21:	cmp    rcx,0x2
  419e25:	jl     419e50 <main@@Base+0x15510>
  419e27:	cmp    BYTE PTR [rax],0x20
  419e2a:	jg     419e5e <main@@Base+0x1551e>
  419e2c:	jne    419e50 <main@@Base+0x15510>
  419e2e:	cmp    BYTE PTR [rax+0x1],0x20
  419e32:	jle    419e50 <main@@Base+0x15510>
  419e34:	add    rax,0x1
  419e38:	cmp    rax,r15
  419e3b:	jne    419e67 <main@@Base+0x15527>
  419e3d:	jmp    419fdf <main@@Base+0x1569f>
  419e42:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419e4c:	nop    DWORD PTR [rax+0x0]
  419e50:	mov    rdi,r14
  419e53:	mov    rsi,rax
  419e56:	mov    rdx,r15
  419e59:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  419e5e:	cmp    rax,r15
  419e61:	je     419fdf <main@@Base+0x1569f>
  419e67:	movzx  ecx,BYTE PTR [rax]
  419e6a:	cmp    cl,0x2c
  419e6d:	jne    41a00a <main@@Base+0x156ca>
  419e73:	lea    rdx,[rax+0x1]
  419e77:	mov    rcx,r15
  419e7a:	sub    rcx,rdx
  419e7d:	cmp    rcx,0x2
  419e81:	jl     419ea0 <main@@Base+0x15560>
  419e83:	cmp    BYTE PTR [rdx],0x20
  419e86:	jg     419eb1 <main@@Base+0x15571>
  419e88:	jne    419ea0 <main@@Base+0x15560>
  419e8a:	cmp    BYTE PTR [rax+0x2],0x20
  419e8e:	jle    419ea0 <main@@Base+0x15560>
  419e90:	add    rax,0x2
  419e94:	jmp    419eae <main@@Base+0x1556e>
  419e96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419ea0:	mov    rdi,r14
  419ea3:	mov    rsi,rdx
  419ea6:	mov    rdx,r15
  419ea9:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  419eae:	mov    rdx,rax
  419eb1:	cmp    rdx,r15
  419eb4:	je     41a03a <main@@Base+0x156fa>
  419eba:	cmp    BYTE PTR [rdx],0x7d
  419ebd:	jne    419b50 <main@@Base+0x15210>
  419ec3:	jmp    41a04a <main@@Base+0x1570a>
  419ec8:	mov    ecx,0x4
  419ecd:	mov    rdi,r14
  419ed0:	mov    rdx,r15
  419ed3:	call   41f940 <flatcc_json_parser_set_error@@Base>
  419ed8:	jmp    419ee8 <main@@Base+0x155a8>
  419eda:	mov    rdi,r14
  419edd:	mov    rsi,rbp
  419ee0:	mov    rdx,r15
  419ee3:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  419ee8:	mov    rbp,rax
  419eeb:	cmp    r13,rbp
  419eee:	je     419e00 <main@@Base+0x154c0>
  419ef4:	mov    QWORD PTR [rsp+0x8],0x0
  419efd:	mov    DWORD PTR [rsp+0x4],0x0
  419f05:	mov    DWORD PTR [rsp],0x0
  419f0c:	xor    ebx,ebx
  419f0e:	cmp    rbp,r15
  419f11:	je     419f5a <main@@Base+0x1561a>
  419f13:	mov    rdi,r14
  419f16:	mov    rsi,rbp
  419f19:	mov    rdx,r15
  419f1c:	lea    rcx,[rsp+0x4]
  419f21:	lea    r8,[rsp+0x8]
  419f26:	call   4215e0 <flatcc_json_parser_integer@@Base>
  419f2b:	cmp    rax,rbp
  419f2e:	mov    r13,r12
  419f31:	je     419f62 <main@@Base+0x15622>
  419f33:	mov    rcx,QWORD PTR [rsp+0x8]
  419f38:	cmp    DWORD PTR [rsp+0x4],0x0
  419f3d:	movabs r12,0x626f6f6b735f7265
  419f47:	je     419f76 <main@@Base+0x15636>
  419f49:	mov    edx,0x80000001
  419f4e:	cmp    rcx,rdx
  419f51:	jb     419f99 <main@@Base+0x15659>
  419f53:	mov    ecx,0x8
  419f58:	jmp    419f84 <main@@Base+0x15644>
  419f5a:	mov    rax,r15
  419f5d:	mov    r13,r12
  419f60:	jmp    419f65 <main@@Base+0x15625>
  419f62:	mov    rax,rbp
  419f65:	movabs r12,0x626f6f6b735f7265
  419f6f:	cmp    rbp,rax
  419f72:	jne    419fd3 <main@@Base+0x15693>
  419f74:	jmp    419fa6 <main@@Base+0x15666>
  419f76:	test   rcx,0xffffffff80000000
  419f7d:	je     419f9c <main@@Base+0x1565c>
  419f7f:	mov    ecx,0x7
  419f84:	mov    rdi,r14
  419f87:	mov    rsi,rax
  419f8a:	mov    rdx,r15
  419f8d:	call   41f940 <flatcc_json_parser_set_error@@Base>
  419f92:	cmp    rbp,rax
  419f95:	jne    419fd3 <main@@Base+0x15693>
  419f97:	jmp    419fa6 <main@@Base+0x15666>
  419f99:	neg    rcx
  419f9c:	mov    DWORD PTR [rsp],ecx
  419f9f:	mov    ebx,ecx
  419fa1:	cmp    rbp,rax
  419fa4:	jne    419fd3 <main@@Base+0x15693>
  419fa6:	mov    rdi,r14
  419fa9:	mov    rsi,rbp
  419fac:	mov    rdx,r15
  419faf:	lea    rcx,[rip+0x1178a]        # 42b740 <filename@@Base+0x670>
  419fb6:	mov    r8,rsp
  419fb9:	call   414410 <main@@Base+0xfad0>
  419fbe:	cmp    rax,rbp
  419fc1:	je     41a09b <main@@Base+0x1575b>
  419fc7:	cmp    rax,r15
  419fca:	je     41a09b <main@@Base+0x1575b>
  419fd0:	mov    ebx,DWORD PTR [rsp]
  419fd3:	mov    rcx,QWORD PTR [rsp+0x10]
  419fd8:	mov    DWORD PTR [rcx],ebx
  419fda:	jmp    419e1b <main@@Base+0x154db>
  419fdf:	mov    rbx,r15
  419fe2:	mov    ecx,0x21
  419fe7:	mov    rdi,r14
  419fea:	mov    rsi,rbx
  419fed:	mov    rdx,r15
  419ff0:	call   41f940 <flatcc_json_parser_set_error@@Base>
  419ff5:	mov    rbp,rax
  419ff8:	mov    rax,rbp
  419ffb:	add    rsp,0x18
  419fff:	pop    rbx
  41a000:	pop    r12
  41a002:	pop    r13
  41a004:	pop    r14
  41a006:	pop    r15
  41a008:	pop    rbp
  41a009:	ret    
  41a00a:	cmp    cl,0x7d
  41a00d:	jne    41a08b <main@@Base+0x1574b>
  41a00f:	lea    rbp,[rax+0x1]
  41a013:	mov    rcx,r15
  41a016:	sub    rcx,rbp
  41a019:	cmp    rcx,0x2
  41a01d:	jl     41a078 <main@@Base+0x15738>
  41a01f:	cmp    BYTE PTR [rbp+0x0],0x20
  41a023:	jg     419af6 <main@@Base+0x151b6>
  41a029:	jne    41a078 <main@@Base+0x15738>
  41a02b:	cmp    BYTE PTR [rax+0x2],0x20
  41a02f:	jle    41a078 <main@@Base+0x15738>
  41a031:	add    rax,0x2
  41a035:	jmp    419af3 <main@@Base+0x151b3>
  41a03a:	mov    ecx,0xa
  41a03f:	mov    rdi,r14
  41a042:	mov    rsi,r15
  41a045:	jmp    419aeb <main@@Base+0x151ab>
  41a04a:	lea    rbp,[rdx+0x1]
  41a04e:	mov    rax,r15
  41a051:	sub    rax,rbp
  41a054:	cmp    rax,0x2
  41a058:	jl     41a078 <main@@Base+0x15738>
  41a05a:	cmp    BYTE PTR [rbp+0x0],0x20
  41a05e:	jg     419af6 <main@@Base+0x151b6>
  41a064:	jne    41a078 <main@@Base+0x15738>
  41a066:	cmp    BYTE PTR [rdx+0x2],0x20
  41a06a:	jle    41a078 <main@@Base+0x15738>
  41a06c:	add    rdx,0x2
  41a070:	mov    rbp,rdx
  41a073:	jmp    419af6 <main@@Base+0x151b6>
  41a078:	mov    rdi,r14
  41a07b:	mov    rsi,rbp
  41a07e:	mov    rdx,r15
  41a081:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  41a086:	jmp    419af3 <main@@Base+0x151b3>
  41a08b:	mov    ecx,0xa
  41a090:	mov    rdi,r14
  41a093:	mov    rsi,rax
  41a096:	jmp    419aeb <main@@Base+0x151ab>
  41a09b:	mov    ecx,0x21
  41a0a0:	jmp    41a090 <main@@Base+0x15750>
  41a0a2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a0ac:	nop    DWORD PTR [rax+0x0]
  41a0b0:	push   rbp
  41a0b1:	push   r15
  41a0b3:	push   r14
  41a0b5:	push   r13
  41a0b7:	push   r12
  41a0b9:	push   rbx
  41a0ba:	sub    rsp,0x38
  41a0be:	mov    r15,r8
  41a0c1:	mov    r13,rdx
  41a0c4:	mov    rbx,rsi
  41a0c7:	mov    r14,rdi
  41a0ca:	mov    WORD PTR [r8],0x0
  41a0d0:	cmp    rsi,rdx
  41a0d3:	je     41a0ef <main@@Base+0x157af>
  41a0d5:	mov    al,BYTE PTR [rbx]
  41a0d7:	cmp    al,0x2e
  41a0d9:	je     41a100 <main@@Base+0x157c0>
  41a0db:	cmp    al,0x22
  41a0dd:	jne    41a29b <main@@Base+0x1595b>
  41a0e3:	add    rbx,0x1
  41a0e7:	mov    DWORD PTR [r14+0x14],0x0
  41a0ef:	cmp    DWORD PTR [r14+0x14],0x0
  41a0f4:	je     41a123 <main@@Base+0x157e3>
  41a0f6:	cmp    rbx,r13
  41a0f9:	jne    41a162 <main@@Base+0x15822>
  41a0fb:	jmp    41a26e <main@@Base+0x1592e>
  41a100:	mov    rbp,rcx
  41a103:	mov    ecx,0x5
  41a108:	mov    rdi,r14
  41a10b:	mov    rsi,rbx
  41a10e:	mov    rdx,r13
  41a111:	call   41f940 <flatcc_json_parser_set_error@@Base>
  41a116:	mov    rcx,rbp
  41a119:	mov    rbx,rax
  41a11c:	cmp    DWORD PTR [r14+0x14],0x0
  41a121:	jne    41a0f6 <main@@Base+0x157b6>
  41a123:	mov    rbp,rcx
  41a126:	mov    rax,r13
  41a129:	sub    rax,rbx
  41a12c:	cmp    rax,0x2
  41a130:	jl     41a145 <main@@Base+0x15805>
  41a132:	cmp    BYTE PTR [rbx],0x20
  41a135:	jg     41a156 <main@@Base+0x15816>
  41a137:	jne    41a145 <main@@Base+0x15805>
  41a139:	cmp    BYTE PTR [rbx+0x1],0x20
  41a13d:	jle    41a145 <main@@Base+0x15805>
  41a13f:	add    rbx,0x1
  41a143:	jmp    41a156 <main@@Base+0x15816>
  41a145:	mov    rdi,r14
  41a148:	mov    rsi,rbx
  41a14b:	mov    rdx,r13
  41a14e:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  41a153:	mov    rbx,rax
  41a156:	mov    rcx,rbp
  41a159:	cmp    rbx,r13
  41a15c:	je     41a26e <main@@Base+0x1592e>
  41a162:	lea    rax,[rcx+0x8]
  41a166:	mov    DWORD PTR [rsp+0x8],0x0
  41a16e:	lea    r12,[rsp+0x18]
  41a173:	mov    DWORD PTR [rsp+0xc],0x0
  41a17b:	mov    QWORD PTR [rsp+0x20],r15
  41a180:	mov    QWORD PTR [rsp+0x10],rcx
  41a185:	mov    QWORD PTR [rsp+0x28],rax
  41a18a:	mov    rbp,QWORD PTR [rcx]
  41a18d:	mov    r15,rax
  41a190:	mov    rdi,r14
  41a193:	mov    rsi,rbx
  41a196:	mov    rdx,r13
  41a199:	lea    rcx,[rsp+0x1c]
  41a19e:	lea    r8,[rsp+0x30]
  41a1a3:	mov    r9,r12
  41a1a6:	call   rbp
  41a1a8:	cmp    rax,r13
  41a1ab:	je     41a26e <main@@Base+0x1592e>
  41a1b1:	mov    rbp,rax
  41a1b4:	cmp    rax,rbx
  41a1b7:	jne    41a1d0 <main@@Base+0x15890>
  41a1b9:	mov    rbp,QWORD PTR [r15]
  41a1bc:	add    r15,0x8
  41a1c0:	test   rbp,rbp
  41a1c3:	jne    41a190 <main@@Base+0x15850>
  41a1c5:	jmp    41a273 <main@@Base+0x15933>
  41a1ca:	nop    WORD PTR [rax+rax*1+0x0]
  41a1d0:	mov    ebx,DWORD PTR [rsp+0xc]
  41a1d4:	test   ebx,ebx
  41a1d6:	je     41a1e3 <main@@Base+0x158a3>
  41a1d8:	cmp    DWORD PTR [r14+0x14],0x0
  41a1dd:	jne    41a2b3 <main@@Base+0x15973>
  41a1e3:	cmp    DWORD PTR [rsp+0x1c],0x0
  41a1e8:	je     41a204 <main@@Base+0x158c4>
  41a1ea:	mov    ecx,0x8
  41a1ef:	mov    rdi,r14
  41a1f2:	mov    rsi,rbp
  41a1f5:	mov    rdx,r13
  41a1f8:	call   41f940 <flatcc_json_parser_set_error@@Base>
  41a1fd:	mov    r15,QWORD PTR [rsp+0x20]
  41a202:	jmp    41a240 <main@@Base+0x15900>
  41a204:	mov    rax,QWORD PTR [rsp+0x30]
  41a209:	cmp    rax,0x10000
  41a20f:	mov    r15,QWORD PTR [rsp+0x20]
  41a214:	jb     41a22b <main@@Base+0x158eb>
  41a216:	mov    ecx,0x7
  41a21b:	mov    rdi,r14
  41a21e:	mov    rsi,rbp
  41a221:	mov    rdx,r13
  41a224:	call   41f940 <flatcc_json_parser_set_error@@Base>
  41a229:	jmp    41a240 <main@@Base+0x15900>
  41a22b:	mov    DWORD PTR [rsp+0x8],eax
  41a22f:	mov    rax,rbp
  41a232:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a23c:	nop    DWORD PTR [rax+0x0]
  41a240:	mov    rcx,QWORD PTR [rsp+0x10]
  41a245:	cmp    rax,r13
  41a248:	je     41a26e <main@@Base+0x1592e>
  41a24a:	add    ebx,0x1
  41a24d:	mov    DWORD PTR [rsp+0xc],ebx
  41a251:	mov    eax,DWORD PTR [rsp+0x8]
  41a255:	add    WORD PTR [r15],ax
  41a259:	cmp    DWORD PTR [rsp+0x18],0x0
  41a25e:	mov    rbx,rbp
  41a261:	mov    rax,QWORD PTR [rsp+0x28]
  41a266:	jne    41a18a <main@@Base+0x1584a>
  41a26c:	jmp    41a289 <main@@Base+0x15949>
  41a26e:	mov    rbp,r13
  41a271:	jmp    41a289 <main@@Base+0x15949>
  41a273:	mov    ecx,0x17
  41a278:	mov    rdi,r14
  41a27b:	mov    rsi,rbx
  41a27e:	mov    rdx,r13
  41a281:	call   41f940 <flatcc_json_parser_set_error@@Base>
  41a286:	mov    rbp,rax
  41a289:	mov    rax,rbp
  41a28c:	add    rsp,0x38
  41a290:	pop    rbx
  41a291:	pop    r12
  41a293:	pop    r13
  41a295:	pop    r14
  41a297:	pop    r15
  41a299:	pop    rbp
  41a29a:	ret    
  41a29b:	mov    DWORD PTR [r14+0x14],0x1
  41a2a3:	cmp    DWORD PTR [r14+0x14],0x0
  41a2a8:	jne    41a0f6 <main@@Base+0x157b6>
  41a2ae:	jmp    41a123 <main@@Base+0x157e3>
  41a2b3:	mov    ecx,0xe
  41a2b8:	mov    rdi,r14
  41a2bb:	mov    rsi,rbp
  41a2be:	jmp    41a27e <main@@Base+0x1593e>

000000000041a2c0 <flatcc_builder_default_alloc@@Base>:
  41a2c0:	push   rbp
  41a2c1:	push   r15
  41a2c3:	push   r14
  41a2c5:	push   r12
  41a2c7:	push   rbx
  41a2c8:	mov    rbx,rsi
  41a2cb:	test   rdx,rdx
  41a2ce:	je     41a2f9 <flatcc_builder_default_alloc@@Base+0x39>
  41a2d0:	mov    r14d,ecx
  41a2d3:	add    r8d,0xffffffff
  41a2d7:	cmp    r8d,0x6
  41a2db:	ja     41a317 <flatcc_builder_default_alloc@@Base+0x57>
  41a2dd:	mov    eax,0x100
  41a2e2:	lea    rcx,[rip+0xab87]        # 424e70 <_IO_stdin_used@@Base+0xe70>
  41a2e9:	movsxd rsi,DWORD PTR [rcx+r8*4]
  41a2ed:	add    rsi,rcx
  41a2f0:	jmp    rsi
  41a2f2:	mov    eax,0x120
  41a2f7:	jmp    41a330 <flatcc_builder_default_alloc@@Base+0x70>
  41a2f9:	mov    rdi,QWORD PTR [rbx]
  41a2fc:	xor    r15d,r15d
  41a2ff:	test   rdi,rdi
  41a302:	je     41a390 <flatcc_builder_default_alloc@@Base+0xd0>
  41a308:	call   404030 <free@plt>
  41a30d:	vxorps xmm0,xmm0,xmm0
  41a311:	vmovups XMMWORD PTR [rbx],xmm0
  41a315:	jmp    41a390 <flatcc_builder_default_alloc@@Base+0xd0>
  41a317:	mov    eax,0x20
  41a31c:	jmp    41a330 <flatcc_builder_default_alloc@@Base+0x70>
  41a31e:	mov    rax,rdx
  41a321:	jmp    41a330 <flatcc_builder_default_alloc@@Base+0x70>
  41a323:	mov    eax,0x40
  41a328:	nop    DWORD PTR [rax+rax*1+0x0]
  41a330:	mov    rbp,rax
  41a333:	lea    rax,[rax+rax*1]
  41a337:	cmp    rbp,rdx
  41a33a:	jb     41a330 <flatcc_builder_default_alloc@@Base+0x70>
  41a33c:	mov    rax,QWORD PTR [rbx+0x8]
  41a340:	xor    r15d,r15d
  41a343:	cmp    rax,rdx
  41a346:	jb     41a350 <flatcc_builder_default_alloc@@Base+0x90>
  41a348:	shr    rax,1
  41a34b:	cmp    rax,rbp
  41a34e:	jae    41a390 <flatcc_builder_default_alloc@@Base+0xd0>
  41a350:	mov    rdi,QWORD PTR [rbx]
  41a353:	mov    rsi,rbp
  41a356:	call   404130 <realloc@plt>
  41a35b:	test   rax,rax
  41a35e:	je     41a38a <flatcc_builder_default_alloc@@Base+0xca>
  41a360:	mov    r12,rax
  41a363:	test   r14d,r14d
  41a366:	je     41a381 <flatcc_builder_default_alloc@@Base+0xc1>
  41a368:	mov    rax,QWORD PTR [rbx+0x8]
  41a36c:	mov    rdx,rbp
  41a36f:	sub    rdx,rax
  41a372:	jbe    41a381 <flatcc_builder_default_alloc@@Base+0xc1>
  41a374:	mov    rdi,r12
  41a377:	add    rdi,rax
  41a37a:	xor    esi,esi
  41a37c:	call   4040a0 <memset@plt>
  41a381:	mov    QWORD PTR [rbx],r12
  41a384:	mov    QWORD PTR [rbx+0x8],rbp
  41a388:	jmp    41a390 <flatcc_builder_default_alloc@@Base+0xd0>
  41a38a:	mov    r15d,0xffffffff
  41a390:	mov    eax,r15d
  41a393:	pop    rbx
  41a394:	pop    r12
  41a396:	pop    r14
  41a398:	pop    r15
  41a39a:	pop    rbp
  41a39b:	ret    
  41a39c:	nop    DWORD PTR [rax+0x0]

000000000041a3a0 <flatcc_builder_flush_vtable_cache@@Base>:
  41a3a0:	cmp    QWORD PTR [rdi+0xd8],0x0
  41a3a8:	je     41a3d5 <flatcc_builder_flush_vtable_cache@@Base+0x35>
  41a3aa:	push   rbx
  41a3ab:	mov    rbx,rdi
  41a3ae:	mov    rdi,QWORD PTR [rdi+0xa8]
  41a3b5:	mov    rdx,QWORD PTR [rbx+0xb0]
  41a3bc:	xor    esi,esi
  41a3be:	call   4040a0 <memset@plt>
  41a3c3:	movabs rax,0x1000000000
  41a3cd:	mov    QWORD PTR [rbx+0xe0],rax
  41a3d4:	pop    rbx
  41a3d5:	ret    
  41a3d6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000041a3e0 <flatcc_builder_custom_init@@Base>:
  41a3e0:	vxorps xmm0,xmm0,xmm0
  41a3e4:	vmovups YMMWORD PTR [rdi+0x160],ymm0
  41a3ec:	vmovups YMMWORD PTR [rdi+0x140],ymm0
  41a3f4:	vmovups YMMWORD PTR [rdi+0x120],ymm0
  41a3fc:	vmovups YMMWORD PTR [rdi+0x100],ymm0
  41a404:	vmovups YMMWORD PTR [rdi+0xe0],ymm0
  41a40c:	vmovups YMMWORD PTR [rdi+0xc0],ymm0
  41a414:	vmovups YMMWORD PTR [rdi+0xa0],ymm0
  41a41c:	vmovups YMMWORD PTR [rdi+0x80],ymm0
  41a424:	vmovups YMMWORD PTR [rdi+0x60],ymm0
  41a429:	vmovups YMMWORD PTR [rdi+0x40],ymm0
  41a42e:	vmovups YMMWORD PTR [rdi+0x20],ymm0
  41a433:	vmovups YMMWORD PTR [rdi],ymm0
  41a437:	mov    QWORD PTR [rdi+0x180],0x0
  41a442:	test   rsi,rsi
  41a445:	je     41a469 <flatcc_builder_custom_init@@Base+0x89>
  41a447:	test   rcx,rcx
  41a44a:	jne    41a453 <flatcc_builder_custom_init@@Base+0x73>
  41a44c:	lea    rcx,[rip+0xfffffffffffffe6d]        # 41a2c0 <flatcc_builder_default_alloc@@Base>
  41a453:	mov    QWORD PTR [rdi+0x40],r8
  41a457:	mov    QWORD PTR [rdi+0x50],rcx
  41a45b:	mov    QWORD PTR [rdi+0x38],rdx
  41a45f:	mov    QWORD PTR [rdi+0x48],rsi
  41a463:	xor    eax,eax
  41a465:	vzeroupper 
  41a468:	ret    
  41a469:	mov    DWORD PTR [rdi+0x128],0x1
  41a473:	lea    rdx,[rdi+0x130]
  41a47a:	lea    rsi,[rip+0x4acf]        # 41ef50 <flatcc_emitter@@Base>
  41a481:	test   rcx,rcx
  41a484:	je     41a44c <flatcc_builder_custom_init@@Base+0x6c>
  41a486:	jmp    41a453 <flatcc_builder_custom_init@@Base+0x73>
  41a488:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041a490 <flatcc_builder_init@@Base>:
  41a490:	vxorps xmm0,xmm0,xmm0
  41a494:	vmovups YMMWORD PTR [rdi+0x120],ymm0
  41a49c:	vmovups YMMWORD PTR [rdi+0x40],ymm0
  41a4a1:	vmovups YMMWORD PTR [rdi+0x20],ymm0
  41a4a6:	vmovups YMMWORD PTR [rdi+0x160],ymm0
  41a4ae:	vmovups YMMWORD PTR [rdi+0x140],ymm0
  41a4b6:	vmovups YMMWORD PTR [rdi+0x100],ymm0
  41a4be:	vmovups YMMWORD PTR [rdi+0xe0],ymm0
  41a4c6:	vmovups YMMWORD PTR [rdi+0xc0],ymm0
  41a4ce:	vmovups YMMWORD PTR [rdi+0xa0],ymm0
  41a4d6:	vmovups YMMWORD PTR [rdi+0x80],ymm0
  41a4de:	vmovups YMMWORD PTR [rdi+0x60],ymm0
  41a4e3:	vmovups YMMWORD PTR [rdi],ymm0
  41a4e7:	mov    QWORD PTR [rdi+0x180],0x0
  41a4f2:	mov    DWORD PTR [rdi+0x128],0x1
  41a4fc:	lea    rax,[rdi+0x130]
  41a503:	mov    QWORD PTR [rdi+0x40],0x0
  41a50b:	lea    rcx,[rip+0xfffffffffffffdae]        # 41a2c0 <flatcc_builder_default_alloc@@Base>
  41a512:	mov    QWORD PTR [rdi+0x50],rcx
  41a516:	mov    QWORD PTR [rdi+0x38],rax
  41a51a:	lea    rax,[rip+0x4a2f]        # 41ef50 <flatcc_emitter@@Base>
  41a521:	mov    QWORD PTR [rdi+0x48],rax
  41a525:	xor    eax,eax
  41a527:	vzeroupper 
  41a52a:	ret    
  41a52b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041a530 <flatcc_builder_custom_reset@@Base>:
  41a530:	push   rbp
  41a531:	push   r15
  41a533:	push   r14
  41a535:	push   r12
  41a537:	push   rbx
  41a538:	mov    r15d,edx
  41a53b:	mov    r14d,esi
  41a53e:	mov    r12,rdi
  41a541:	lea    rbp,[rdi+0x58]
  41a545:	xor    ebx,ebx
  41a547:	nop    WORD PTR [rax+rax*1+0x0]
  41a550:	mov    rdi,QWORD PTR [rbp+0x0]
  41a554:	test   rdi,rdi
  41a557:	je     41a5a0 <flatcc_builder_custom_reset@@Base+0x70>
  41a559:	test   r15d,r15d
  41a55c:	je     41a58a <flatcc_builder_custom_reset@@Base+0x5a>
  41a55e:	cmp    rbx,0x5
  41a562:	je     41a58a <flatcc_builder_custom_reset@@Base+0x5a>
  41a564:	mov    rdi,QWORD PTR [r12+0x40]
  41a569:	mov    edx,0x1
  41a56e:	mov    ecx,0x1
  41a573:	mov    rsi,rbp
  41a576:	mov    r8d,ebx
  41a579:	call   QWORD PTR [r12+0x50]
  41a57e:	test   eax,eax
  41a580:	jne    41a660 <flatcc_builder_custom_reset@@Base+0x130>
  41a586:	mov    rdi,QWORD PTR [rbp+0x0]
  41a58a:	mov    rdx,QWORD PTR [rbp+0x8]
  41a58e:	xor    esi,esi
  41a590:	call   4040a0 <memset@plt>
  41a595:	jmp    41a5ab <flatcc_builder_custom_reset@@Base+0x7b>
  41a597:	nop    WORD PTR [rax+rax*1+0x0]
  41a5a0:	cmp    QWORD PTR [rbp+0x8],0x0
  41a5a5:	jne    41a670 <flatcc_builder_custom_reset@@Base+0x140>
  41a5ab:	add    rbx,0x1
  41a5af:	add    rbp,0x10
  41a5b3:	cmp    rbx,0x8
  41a5b7:	jb     41a550 <flatcc_builder_custom_reset@@Base+0x20>
  41a5b9:	mov    DWORD PTR [r12+0xe0],0x0
  41a5c5:	cmp    DWORD PTR [r12+0xe4],0x0
  41a5ce:	je     41a5dc <flatcc_builder_custom_reset@@Base+0xac>
  41a5d0:	mov    DWORD PTR [r12+0xe4],0x10
  41a5dc:	mov    WORD PTR [r12+0xe8],0x0
  41a5e7:	mov    QWORD PTR [r12+0xf0],0x0
  41a5f3:	mov    QWORD PTR [r12+0x20],0x0
  41a5fc:	vxorps xmm0,xmm0,xmm0
  41a600:	vmovups XMMWORD PTR [r12+0xfc],xmm0
  41a60a:	mov    rax,QWORD PTR [r12+0x58]
  41a60f:	mov    rcx,QWORD PTR [r12+0x68]
  41a614:	mov    QWORD PTR [r12+0x18],rcx
  41a619:	mov    rcx,QWORD PTR [r12+0x88]
  41a621:	mov    QWORD PTR [r12],rcx
  41a625:	mov    QWORD PTR [r12+0x8],rax
  41a62a:	mov    QWORD PTR [r12+0x30],0x0
  41a633:	test   r14d,r14d
  41a636:	je     41a642 <flatcc_builder_custom_reset@@Base+0x112>
  41a638:	vmovups XMMWORD PTR [r12+0x118],xmm0
  41a642:	xor    ebx,ebx
  41a644:	cmp    DWORD PTR [r12+0x128],0x0
  41a64d:	je     41a665 <flatcc_builder_custom_reset@@Base+0x135>
  41a64f:	add    r12,0x130
  41a656:	mov    rdi,r12
  41a659:	call   41edd0 <flatcc_emitter_reset@@Base>
  41a65e:	jmp    41a665 <flatcc_builder_custom_reset@@Base+0x135>
  41a660:	mov    ebx,0xffffffff
  41a665:	mov    eax,ebx
  41a667:	pop    rbx
  41a668:	pop    r12
  41a66a:	pop    r14
  41a66c:	pop    r15
  41a66e:	pop    rbp
  41a66f:	ret    
  41a670:	lea    rdi,[rip+0xaa99]        # 425110 <flatcc_builder_padding_base@@Base+0x280>
  41a677:	lea    rsi,[rip+0xaaa4]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41a67e:	lea    rcx,[rip+0xaafd]        # 425182 <flatcc_builder_padding_base@@Base+0x2f2>
  41a685:	mov    edx,0x1b2
  41a68a:	call   404090 <__assert_fail@plt>
  41a68f:	nop

000000000041a690 <flatcc_builder_reset@@Base>:
  41a690:	push   rbx
  41a691:	mov    rbx,rdi
  41a694:	mov    rdi,QWORD PTR [rdi+0x58]
  41a698:	mov    rdx,QWORD PTR [rbx+0x60]
  41a69c:	test   rdi,rdi
  41a69f:	je     41a6aa <flatcc_builder_reset@@Base+0x1a>
  41a6a1:	xor    esi,esi
  41a6a3:	call   4040a0 <memset@plt>
  41a6a8:	jmp    41a6b3 <flatcc_builder_reset@@Base+0x23>
  41a6aa:	test   rdx,rdx
  41a6ad:	jne    41a830 <flatcc_builder_reset@@Base+0x1a0>
  41a6b3:	mov    rdi,QWORD PTR [rbx+0x68]
  41a6b7:	mov    rdx,QWORD PTR [rbx+0x70]
  41a6bb:	test   rdi,rdi
  41a6be:	je     41a6c9 <flatcc_builder_reset@@Base+0x39>
  41a6c0:	xor    esi,esi
  41a6c2:	call   4040a0 <memset@plt>
  41a6c7:	jmp    41a6d2 <flatcc_builder_reset@@Base+0x42>
  41a6c9:	test   rdx,rdx
  41a6cc:	jne    41a830 <flatcc_builder_reset@@Base+0x1a0>
  41a6d2:	mov    rdi,QWORD PTR [rbx+0x78]
  41a6d6:	mov    rdx,QWORD PTR [rbx+0x80]
  41a6dd:	test   rdi,rdi
  41a6e0:	je     41a6eb <flatcc_builder_reset@@Base+0x5b>
  41a6e2:	xor    esi,esi
  41a6e4:	call   4040a0 <memset@plt>
  41a6e9:	jmp    41a6f4 <flatcc_builder_reset@@Base+0x64>
  41a6eb:	test   rdx,rdx
  41a6ee:	jne    41a830 <flatcc_builder_reset@@Base+0x1a0>
  41a6f4:	mov    rdi,QWORD PTR [rbx+0x88]
  41a6fb:	mov    rdx,QWORD PTR [rbx+0x90]
  41a702:	test   rdi,rdi
  41a705:	je     41a710 <flatcc_builder_reset@@Base+0x80>
  41a707:	xor    esi,esi
  41a709:	call   4040a0 <memset@plt>
  41a70e:	jmp    41a719 <flatcc_builder_reset@@Base+0x89>
  41a710:	test   rdx,rdx
  41a713:	jne    41a830 <flatcc_builder_reset@@Base+0x1a0>
  41a719:	mov    rdi,QWORD PTR [rbx+0x98]
  41a720:	mov    rdx,QWORD PTR [rbx+0xa0]
  41a727:	test   rdi,rdi
  41a72a:	je     41a735 <flatcc_builder_reset@@Base+0xa5>
  41a72c:	xor    esi,esi
  41a72e:	call   4040a0 <memset@plt>
  41a733:	jmp    41a73e <flatcc_builder_reset@@Base+0xae>
  41a735:	test   rdx,rdx
  41a738:	jne    41a830 <flatcc_builder_reset@@Base+0x1a0>
  41a73e:	mov    rdi,QWORD PTR [rbx+0xa8]
  41a745:	mov    rdx,QWORD PTR [rbx+0xb0]
  41a74c:	test   rdi,rdi
  41a74f:	je     41a75a <flatcc_builder_reset@@Base+0xca>
  41a751:	xor    esi,esi
  41a753:	call   4040a0 <memset@plt>
  41a758:	jmp    41a763 <flatcc_builder_reset@@Base+0xd3>
  41a75a:	test   rdx,rdx
  41a75d:	jne    41a830 <flatcc_builder_reset@@Base+0x1a0>
  41a763:	mov    rdi,QWORD PTR [rbx+0xb8]
  41a76a:	mov    rdx,QWORD PTR [rbx+0xc0]
  41a771:	test   rdi,rdi
  41a774:	je     41a77f <flatcc_builder_reset@@Base+0xef>
  41a776:	xor    esi,esi
  41a778:	call   4040a0 <memset@plt>
  41a77d:	jmp    41a788 <flatcc_builder_reset@@Base+0xf8>
  41a77f:	test   rdx,rdx
  41a782:	jne    41a830 <flatcc_builder_reset@@Base+0x1a0>
  41a788:	mov    rdi,QWORD PTR [rbx+0xc8]
  41a78f:	mov    rdx,QWORD PTR [rbx+0xd0]
  41a796:	test   rdi,rdi
  41a799:	je     41a7a4 <flatcc_builder_reset@@Base+0x114>
  41a79b:	xor    esi,esi
  41a79d:	call   4040a0 <memset@plt>
  41a7a2:	jmp    41a7ad <flatcc_builder_reset@@Base+0x11d>
  41a7a4:	test   rdx,rdx
  41a7a7:	jne    41a830 <flatcc_builder_reset@@Base+0x1a0>
  41a7ad:	mov    DWORD PTR [rbx+0xe0],0x0
  41a7b7:	cmp    DWORD PTR [rbx+0xe4],0x0
  41a7be:	je     41a7ca <flatcc_builder_reset@@Base+0x13a>
  41a7c0:	mov    DWORD PTR [rbx+0xe4],0x10
  41a7ca:	mov    WORD PTR [rbx+0xe8],0x0
  41a7d3:	mov    QWORD PTR [rbx+0xf0],0x0
  41a7de:	mov    QWORD PTR [rbx+0x20],0x0
  41a7e6:	vxorps xmm0,xmm0,xmm0
  41a7ea:	vmovups XMMWORD PTR [rbx+0xfc],xmm0
  41a7f2:	mov    rax,QWORD PTR [rbx+0x58]
  41a7f6:	mov    rcx,QWORD PTR [rbx+0x68]
  41a7fa:	mov    QWORD PTR [rbx+0x18],rcx
  41a7fe:	mov    rcx,QWORD PTR [rbx+0x88]
  41a805:	mov    QWORD PTR [rbx],rcx
  41a808:	mov    QWORD PTR [rbx+0x8],rax
  41a80c:	mov    QWORD PTR [rbx+0x30],0x0
  41a814:	cmp    DWORD PTR [rbx+0x128],0x0
  41a81b:	je     41a82c <flatcc_builder_reset@@Base+0x19c>
  41a81d:	add    rbx,0x130
  41a824:	mov    rdi,rbx
  41a827:	call   41edd0 <flatcc_emitter_reset@@Base>
  41a82c:	xor    eax,eax
  41a82e:	pop    rbx
  41a82f:	ret    
  41a830:	lea    rdi,[rip+0xa8d9]        # 425110 <flatcc_builder_padding_base@@Base+0x280>
  41a837:	lea    rsi,[rip+0xa8e4]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41a83e:	lea    rcx,[rip+0xa93d]        # 425182 <flatcc_builder_padding_base@@Base+0x2f2>
  41a845:	mov    edx,0x1b2
  41a84a:	call   404090 <__assert_fail@plt>
  41a84f:	nop

000000000041a850 <flatcc_builder_clear@@Base>:
  41a850:	push   rbx
  41a851:	mov    rbx,rdi
  41a854:	lea    rsi,[rdi+0x58]
  41a858:	mov    rdi,QWORD PTR [rdi+0x40]
  41a85c:	xor    edx,edx
  41a85e:	xor    ecx,ecx
  41a860:	xor    r8d,r8d
  41a863:	call   QWORD PTR [rbx+0x50]
  41a866:	lea    rsi,[rbx+0x68]
  41a86a:	mov    rdi,QWORD PTR [rbx+0x40]
  41a86e:	xor    edx,edx
  41a870:	xor    ecx,ecx
  41a872:	mov    r8d,0x1
  41a878:	call   QWORD PTR [rbx+0x50]
  41a87b:	lea    rsi,[rbx+0x78]
  41a87f:	mov    rdi,QWORD PTR [rbx+0x40]
  41a883:	xor    edx,edx
  41a885:	xor    ecx,ecx
  41a887:	mov    r8d,0x2
  41a88d:	call   QWORD PTR [rbx+0x50]
  41a890:	lea    rsi,[rbx+0x88]
  41a897:	mov    rdi,QWORD PTR [rbx+0x40]
  41a89b:	xor    edx,edx
  41a89d:	xor    ecx,ecx
  41a89f:	mov    r8d,0x3
  41a8a5:	call   QWORD PTR [rbx+0x50]
  41a8a8:	lea    rsi,[rbx+0x98]
  41a8af:	mov    rdi,QWORD PTR [rbx+0x40]
  41a8b3:	xor    edx,edx
  41a8b5:	xor    ecx,ecx
  41a8b7:	mov    r8d,0x4
  41a8bd:	call   QWORD PTR [rbx+0x50]
  41a8c0:	lea    rsi,[rbx+0xa8]
  41a8c7:	mov    rdi,QWORD PTR [rbx+0x40]
  41a8cb:	xor    edx,edx
  41a8cd:	xor    ecx,ecx
  41a8cf:	mov    r8d,0x5
  41a8d5:	call   QWORD PTR [rbx+0x50]
  41a8d8:	lea    rsi,[rbx+0xb8]
  41a8df:	mov    rdi,QWORD PTR [rbx+0x40]
  41a8e3:	xor    edx,edx
  41a8e5:	xor    ecx,ecx
  41a8e7:	mov    r8d,0x6
  41a8ed:	call   QWORD PTR [rbx+0x50]
  41a8f0:	lea    rsi,[rbx+0xc8]
  41a8f7:	mov    rdi,QWORD PTR [rbx+0x40]
  41a8fb:	xor    edx,edx
  41a8fd:	xor    ecx,ecx
  41a8ff:	mov    r8d,0x7
  41a905:	call   QWORD PTR [rbx+0x50]
  41a908:	cmp    DWORD PTR [rbx+0x128],0x0
  41a90f:	je     41a91d <flatcc_builder_clear@@Base+0xcd>
  41a911:	lea    rdi,[rbx+0x130]
  41a918:	call   41eed0 <flatcc_emitter_clear@@Base>
  41a91d:	vxorps xmm0,xmm0,xmm0
  41a921:	vmovups YMMWORD PTR [rbx+0x160],ymm0
  41a929:	vmovups YMMWORD PTR [rbx+0x140],ymm0
  41a931:	vmovups YMMWORD PTR [rbx+0x120],ymm0
  41a939:	vmovups YMMWORD PTR [rbx+0x100],ymm0
  41a941:	vmovups YMMWORD PTR [rbx+0xe0],ymm0
  41a949:	vmovups YMMWORD PTR [rbx+0xc0],ymm0
  41a951:	vmovups YMMWORD PTR [rbx+0xa0],ymm0
  41a959:	vmovups YMMWORD PTR [rbx+0x80],ymm0
  41a961:	vmovups YMMWORD PTR [rbx+0x60],ymm0
  41a966:	vmovups YMMWORD PTR [rbx+0x40],ymm0
  41a96b:	vmovups YMMWORD PTR [rbx+0x20],ymm0
  41a970:	vmovups YMMWORD PTR [rbx],ymm0
  41a974:	mov    QWORD PTR [rbx+0x180],0x0
  41a97f:	pop    rbx
  41a980:	vzeroupper 
  41a983:	ret    
  41a984:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a98e:	xchg   ax,ax

000000000041a990 <flatcc_builder_enter_user_frame_ptr@@Base>:
  41a990:	push   r15
  41a992:	push   r14
  41a994:	push   r12
  41a996:	push   rbx
  41a997:	push   rax
  41a998:	mov    r14,rsi
  41a99b:	mov    r15,rdi
  41a99e:	add    r14,0xf
  41a9a2:	and    r14,0xfffffffffffffff8
  41a9a6:	mov    rbx,QWORD PTR [rdi+0x180]
  41a9ad:	lea    r12,[rdi+0xc8]
  41a9b4:	lea    rdx,[rbx+r14*1]
  41a9b8:	cmp    rdx,QWORD PTR [rdi+0xd0]
  41a9bf:	jbe    41a9d8 <flatcc_builder_enter_user_frame_ptr@@Base+0x48>
  41a9c1:	mov    rdi,QWORD PTR [r15+0x40]
  41a9c5:	xor    ecx,ecx
  41a9c7:	mov    r8d,0x7
  41a9cd:	mov    rsi,r12
  41a9d0:	call   QWORD PTR [r15+0x50]
  41a9d4:	test   eax,eax
  41a9d6:	jne    41aa28 <flatcc_builder_enter_user_frame_ptr@@Base+0x98>
  41a9d8:	add    rbx,QWORD PTR [r12]
  41a9dc:	je     41aa17 <flatcc_builder_enter_user_frame_ptr@@Base+0x87>
  41a9de:	xor    esi,esi
  41a9e0:	mov    rdi,rbx
  41a9e3:	mov    rdx,r14
  41a9e6:	call   4040a0 <memset@plt>
  41a9eb:	mov    rax,QWORD PTR [r15+0x178]
  41a9f2:	mov    QWORD PTR [rbx],rax
  41a9f5:	add    rbx,0x8
  41a9f9:	mov    rax,QWORD PTR [r15+0x180]
  41aa00:	lea    rcx,[rax+0x8]
  41aa04:	mov    QWORD PTR [r15+0x178],rcx
  41aa0b:	add    rax,r14
  41aa0e:	mov    QWORD PTR [r15+0x180],rax
  41aa15:	jmp    41aa19 <flatcc_builder_enter_user_frame_ptr@@Base+0x89>
  41aa17:	xor    ebx,ebx
  41aa19:	mov    rax,rbx
  41aa1c:	add    rsp,0x8
  41aa20:	pop    rbx
  41aa21:	pop    r12
  41aa23:	pop    r14
  41aa25:	pop    r15
  41aa27:	ret    
  41aa28:	lea    rdi,[rip+0xb8b3]        # 4262e2 <flatcc_builder_padding_base@@Base+0x1452>
  41aa2f:	lea    rsi,[rip+0xa6ec]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41aa36:	lea    rcx,[rip+0xb6df]        # 42611c <flatcc_builder_padding_base@@Base+0x128c>
  41aa3d:	mov    edx,0x134
  41aa42:	call   404090 <__assert_fail@plt>
  41aa47:	nop    WORD PTR [rax+rax*1+0x0]

000000000041aa50 <flatcc_builder_enter_user_frame@@Base>:
  41aa50:	push   r15
  41aa52:	push   r14
  41aa54:	push   r12
  41aa56:	push   rbx
  41aa57:	push   rax
  41aa58:	mov    r14,rsi
  41aa5b:	mov    rbx,rdi
  41aa5e:	add    r14,0xf
  41aa62:	and    r14,0xfffffffffffffff8
  41aa66:	mov    r15,QWORD PTR [rdi+0x180]
  41aa6d:	lea    r12,[rdi+0xc8]
  41aa74:	lea    rdx,[r15+r14*1]
  41aa78:	cmp    rdx,QWORD PTR [rdi+0xd0]
  41aa7f:	jbe    41aa97 <flatcc_builder_enter_user_frame@@Base+0x47>
  41aa81:	mov    rdi,QWORD PTR [rbx+0x40]
  41aa85:	xor    ecx,ecx
  41aa87:	mov    r8d,0x7
  41aa8d:	mov    rsi,r12
  41aa90:	call   QWORD PTR [rbx+0x50]
  41aa93:	test   eax,eax
  41aa95:	jne    41aae0 <flatcc_builder_enter_user_frame@@Base+0x90>
  41aa97:	add    r15,QWORD PTR [r12]
  41aa9b:	je     41aad2 <flatcc_builder_enter_user_frame@@Base+0x82>
  41aa9d:	xor    esi,esi
  41aa9f:	mov    rdi,r15
  41aaa2:	mov    rdx,r14
  41aaa5:	call   4040a0 <memset@plt>
  41aaaa:	mov    rax,QWORD PTR [rbx+0x178]
  41aab1:	mov    QWORD PTR [r15],rax
  41aab4:	mov    rcx,QWORD PTR [rbx+0x180]
  41aabb:	lea    rax,[rcx+0x8]
  41aabf:	mov    QWORD PTR [rbx+0x178],rax
  41aac6:	add    rcx,r14
  41aac9:	mov    QWORD PTR [rbx+0x180],rcx
  41aad0:	jmp    41aad4 <flatcc_builder_enter_user_frame@@Base+0x84>
  41aad2:	xor    eax,eax
  41aad4:	add    rsp,0x8
  41aad8:	pop    rbx
  41aad9:	pop    r12
  41aadb:	pop    r14
  41aadd:	pop    r15
  41aadf:	ret    
  41aae0:	lea    rdi,[rip+0xb7fb]        # 4262e2 <flatcc_builder_padding_base@@Base+0x1452>
  41aae7:	lea    rsi,[rip+0xa634]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41aaee:	lea    rcx,[rip+0xb627]        # 42611c <flatcc_builder_padding_base@@Base+0x128c>
  41aaf5:	mov    edx,0x134
  41aafa:	call   404090 <__assert_fail@plt>
  41aaff:	nop

000000000041ab00 <flatcc_builder_exit_user_frame@@Base>:
  41ab00:	mov    rax,QWORD PTR [rdi+0x178]
  41ab07:	test   rax,rax
  41ab0a:	je     41ab2d <flatcc_builder_exit_user_frame@@Base+0x2d>
  41ab0c:	mov    rcx,QWORD PTR [rdi+0xc8]
  41ab13:	mov    edx,eax
  41ab15:	add    rax,0xfffffffffffffff8
  41ab19:	mov    QWORD PTR [rdi+0x180],rax
  41ab20:	mov    rax,QWORD PTR [rcx+rdx*1-0x8]
  41ab25:	mov    QWORD PTR [rdi+0x178],rax
  41ab2c:	ret    
  41ab2d:	push   rax
  41ab2e:	lea    rdi,[rip+0xa68b]        # 4251c0 <flatcc_builder_padding_base@@Base+0x330>
  41ab35:	lea    rsi,[rip+0xa5e6]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41ab3c:	lea    rcx,[rip+0xa696]        # 4251d9 <flatcc_builder_padding_base@@Base+0x349>
  41ab43:	mov    edx,0x21e
  41ab48:	call   404090 <__assert_fail@plt>
  41ab4d:	nop    DWORD PTR [rax]

000000000041ab50 <flatcc_builder_exit_user_frame_at@@Base>:
  41ab50:	push   rax
  41ab51:	cmp    QWORD PTR [rdi+0x178],rsi
  41ab58:	jb     41ab88 <flatcc_builder_exit_user_frame_at@@Base+0x38>
  41ab5a:	mov    QWORD PTR [rdi+0x178],rsi
  41ab61:	test   rsi,rsi
  41ab64:	je     41aba7 <flatcc_builder_exit_user_frame_at@@Base+0x57>
  41ab66:	mov    rax,QWORD PTR [rdi+0xc8]
  41ab6d:	mov    ecx,esi
  41ab6f:	add    rsi,0xfffffffffffffff8
  41ab73:	mov    QWORD PTR [rdi+0x180],rsi
  41ab7a:	mov    rax,QWORD PTR [rax+rcx*1-0x8]
  41ab7f:	mov    QWORD PTR [rdi+0x178],rax
  41ab86:	pop    rcx
  41ab87:	ret    
  41ab88:	lea    rdi,[rip+0xa684]        # 425213 <flatcc_builder_padding_base@@Base+0x383>
  41ab8f:	lea    rsi,[rip+0xa58c]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41ab96:	lea    rcx,[rip+0xa695]        # 425232 <flatcc_builder_padding_base@@Base+0x3a2>
  41ab9d:	mov    edx,0x227
  41aba2:	call   404090 <__assert_fail@plt>
  41aba7:	lea    rdi,[rip+0xa612]        # 4251c0 <flatcc_builder_padding_base@@Base+0x330>
  41abae:	lea    rsi,[rip+0xa56d]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41abb5:	lea    rcx,[rip+0xa61d]        # 4251d9 <flatcc_builder_padding_base@@Base+0x349>
  41abbc:	mov    edx,0x21e
  41abc1:	call   404090 <__assert_fail@plt>
  41abc6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000041abd0 <flatcc_builder_get_current_user_frame@@Base>:
  41abd0:	mov    rax,QWORD PTR [rdi+0x178]
  41abd7:	ret    
  41abd8:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041abe0 <flatcc_builder_get_user_frame_ptr@@Base>:
  41abe0:	mov    eax,esi
  41abe2:	add    rax,QWORD PTR [rdi+0xc8]
  41abe9:	ret    
  41abea:	nop    WORD PTR [rax+rax*1+0x0]

000000000041abf0 <flatcc_builder_embed_buffer@@Base>:
  41abf0:	push   rbp
  41abf1:	push   r15
  41abf3:	push   r14
  41abf5:	push   r12
  41abf7:	push   rbx
  41abf8:	sub    rsp,0xa0
  41abff:	mov    ebx,r9d
  41ac02:	mov    rbp,rcx
  41ac05:	mov    r15,rdx
  41ac08:	mov    eax,esi
  41ac0a:	mov    r12,rdi
  41ac0d:	mov    WORD PTR [rsp+0xa],r8w
  41ac13:	xor    ecx,ecx
  41ac15:	cmp    DWORD PTR [rdi+0x100],0x0
  41ac1c:	setne  cl
  41ac1f:	lea    rsi,[rsp+0xa]
  41ac24:	mov    edx,eax
  41ac26:	call   41ad90 <flatcc_builder_embed_buffer@@Base+0x1a0>
  41ac2b:	and    ebx,0x2
  41ac2e:	movzx  eax,WORD PTR [rsp+0xa]
  41ac33:	mov    r14d,DWORD PTR [r12+0xf0]
  41ac3b:	lea    ecx,[rbp+rbx*2+0x0]
  41ac3f:	mov    edx,r14d
  41ac42:	sub    edx,ecx
  41ac44:	add    eax,0xffffffff
  41ac47:	and    eax,edx
  41ac49:	lea    ecx,[rax+rbp*1]
  41ac4c:	mov    DWORD PTR [rsp+0xc],ecx
  41ac50:	mov    QWORD PTR [rsp+0x10],0x0
  41ac59:	mov    DWORD PTR [rsp+0x18],0x0
  41ac61:	cmp    DWORD PTR [r12+0x100],0x0
  41ac6a:	je     41ad3e <flatcc_builder_embed_buffer@@Base+0x14e>
  41ac70:	mov    QWORD PTR [rsp+0x10],0x4
  41ac79:	lea    rcx,[rsp+0xc]
  41ac7e:	mov    QWORD PTR [rsp+0x20],rcx
  41ac83:	mov    QWORD PTR [rsp+0x28],0x4
  41ac8c:	mov    DWORD PTR [rsp+0x18],0x1
  41ac94:	mov    edx,0x1
  41ac99:	mov    r8d,0x4
  41ac9f:	test   rbp,rbp
  41aca2:	je     41acc3 <flatcc_builder_embed_buffer@@Base+0xd3>
  41aca4:	add    r8,rbp
  41aca7:	mov    QWORD PTR [rsp+0x10],r8
  41acac:	mov    ecx,edx
  41acae:	shl    rcx,0x4
  41acb2:	mov    QWORD PTR [rsp+rcx*1+0x20],r15
  41acb7:	mov    QWORD PTR [rsp+rcx*1+0x28],rbp
  41acbc:	add    edx,0x1
  41acbf:	mov    DWORD PTR [rsp+0x18],edx
  41acc3:	test   eax,eax
  41acc5:	je     41acef <flatcc_builder_embed_buffer@@Base+0xff>
  41acc7:	mov    eax,eax
  41acc9:	add    r8,rax
  41accc:	mov    QWORD PTR [rsp+0x10],r8
  41acd1:	mov    ecx,edx
  41acd3:	shl    rcx,0x4
  41acd7:	lea    rsi,[rip+0xa1b2]        # 424e90 <flatcc_builder_padding_base@@Base>
  41acde:	mov    QWORD PTR [rsp+rcx*1+0x20],rsi
  41ace3:	mov    QWORD PTR [rsp+rcx*1+0x28],rax
  41ace8:	add    edx,0x1
  41aceb:	mov    DWORD PTR [rsp+0x18],edx
  41acef:	cmp    r8,0x11
  41acf3:	setb   al
  41acf6:	lea    rcx,[r8-0x10]
  41acfa:	shr    rcx,0x20
  41acfe:	sete   cl
  41ad01:	test   r8d,r8d
  41ad04:	jle    41ad51 <flatcc_builder_embed_buffer@@Base+0x161>
  41ad06:	or     al,cl
  41ad08:	je     41ad51 <flatcc_builder_embed_buffer@@Base+0x161>
  41ad0a:	sub    r14d,r8d
  41ad0d:	mov    rdi,QWORD PTR [r12+0x38]
  41ad12:	lea    rsi,[rsp+0x20]
  41ad17:	mov    ecx,r14d
  41ad1a:	call   QWORD PTR [r12+0x48]
  41ad1f:	test   eax,eax
  41ad21:	jne    41ad70 <flatcc_builder_embed_buffer@@Base+0x180>
  41ad23:	mov    DWORD PTR [r12+0xf0],r14d
  41ad2b:	mov    eax,r14d
  41ad2e:	add    rsp,0xa0
  41ad35:	pop    rbx
  41ad36:	pop    r12
  41ad38:	pop    r14
  41ad3a:	pop    r15
  41ad3c:	pop    rbp
  41ad3d:	ret    
  41ad3e:	xor    edx,edx
  41ad40:	xor    r8d,r8d
  41ad43:	test   rbp,rbp
  41ad46:	jne    41aca4 <flatcc_builder_embed_buffer@@Base+0xb4>
  41ad4c:	jmp    41acc3 <flatcc_builder_embed_buffer@@Base+0xd3>
  41ad51:	lea    rdi,[rip+0xb58a]        # 4262e2 <flatcc_builder_padding_base@@Base+0x1452>
  41ad58:	lea    rsi,[rip+0xa3c3]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41ad5f:	lea    rcx,[rip+0xb43b]        # 4261a1 <flatcc_builder_padding_base@@Base+0x1311>
  41ad66:	mov    edx,0x287
  41ad6b:	call   404090 <__assert_fail@plt>
  41ad70:	lea    rdi,[rip+0xb56b]        # 4262e2 <flatcc_builder_padding_base@@Base+0x1452>
  41ad77:	lea    rsi,[rip+0xa3a4]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41ad7e:	lea    rcx,[rip+0xb41c]        # 4261a1 <flatcc_builder_padding_base@@Base+0x1311>
  41ad85:	mov    edx,0x28b
  41ad8a:	call   404090 <__assert_fail@plt>
  41ad8f:	nop
  41ad90:	push   rbx
  41ad91:	sub    rsp,0x90
  41ad98:	mov    rax,rdi
  41ad9b:	test   dx,dx
  41ad9e:	jne    41adb1 <flatcc_builder_embed_buffer@@Base+0x1c1>
  41ada0:	mov    edi,DWORD PTR [rax+0xec]
  41ada6:	test   di,di
  41ada9:	mov    edx,0x1
  41adae:	cmovne edx,edi
  41adb1:	movzx  ebx,WORD PTR [rsi]
  41adb4:	mov    edi,0x4
  41adb9:	cmp    ebx,0x4
  41adbc:	cmovae edi,ebx
  41adbf:	jb     41adcc <flatcc_builder_embed_buffer@@Base+0x1dc>
  41adc1:	cmp    di,dx
  41adc4:	jb     41adcc <flatcc_builder_embed_buffer@@Base+0x1dc>
  41adc6:	test   ecx,ecx
  41adc8:	jne    41ae34 <flatcc_builder_embed_buffer@@Base+0x244>
  41adca:	jmp    41add9 <flatcc_builder_embed_buffer@@Base+0x1e9>
  41adcc:	cmp    di,dx
  41adcf:	cmovb  edi,edx
  41add2:	mov    WORD PTR [rsi],di
  41add5:	test   ecx,ecx
  41add7:	jne    41ae34 <flatcc_builder_embed_buffer@@Base+0x244>
  41add9:	mov    ebx,DWORD PTR [rax+0xf4]
  41addf:	movzx  r8d,dx
  41ade3:	add    r8d,0xffffffff
  41ade7:	and    r8d,ebx
  41adea:	je     41ae34 <flatcc_builder_embed_buffer@@Base+0x244>
  41adec:	mov    QWORD PTR [rsp],r8
  41adf0:	lea    rcx,[rip+0xa099]        # 424e90 <flatcc_builder_padding_base@@Base>
  41adf7:	mov    QWORD PTR [rsp+0x10],rcx
  41adfc:	mov    QWORD PTR [rsp+0x18],r8
  41ae01:	mov    DWORD PTR [rsp+0x8],0x1
  41ae09:	lea    ecx,[r8+rbx*1]
  41ae0d:	mov    DWORD PTR [rax+0xf4],ecx
  41ae13:	test   r8d,r8d
  41ae16:	js     41ae3d <flatcc_builder_embed_buffer@@Base+0x24d>
  41ae18:	mov    rdi,QWORD PTR [rax+0x38]
  41ae1c:	lea    rsi,[rsp+0x10]
  41ae21:	mov    edx,0x1
  41ae26:	mov    ecx,ebx
  41ae28:	call   QWORD PTR [rax+0x48]
  41ae2b:	test   eax,eax
  41ae2d:	jne    41ae5c <flatcc_builder_embed_buffer@@Base+0x26c>
  41ae2f:	cmp    ebx,0xffffffff
  41ae32:	je     41ae7b <flatcc_builder_embed_buffer@@Base+0x28b>
  41ae34:	add    rsp,0x90
  41ae3b:	pop    rbx
  41ae3c:	ret    
  41ae3d:	lea    rdi,[rip+0xb49e]        # 4262e2 <flatcc_builder_padding_base@@Base+0x1452>
  41ae44:	lea    rsi,[rip+0xa2d7]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41ae4b:	lea    rcx,[rip+0xb40b]        # 42625d <flatcc_builder_padding_base@@Base+0x13cd>
  41ae52:	mov    edx,0x2a1
  41ae57:	call   404090 <__assert_fail@plt>
  41ae5c:	lea    rdi,[rip+0xb47f]        # 4262e2 <flatcc_builder_padding_base@@Base+0x1452>
  41ae63:	lea    rsi,[rip+0xa2b8]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41ae6a:	lea    rcx,[rip+0xb3ec]        # 42625d <flatcc_builder_padding_base@@Base+0x13cd>
  41ae71:	mov    edx,0x2a5
  41ae76:	call   404090 <__assert_fail@plt>
  41ae7b:	lea    rdi,[rip+0xb460]        # 4262e2 <flatcc_builder_padding_base@@Base+0x1452>
  41ae82:	lea    rsi,[rip+0xa299]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41ae89:	lea    rcx,[rip+0xb2cf]        # 42615f <flatcc_builder_padding_base@@Base+0x12cf>
  41ae90:	mov    edx,0x2be
  41ae95:	call   404090 <__assert_fail@plt>
  41ae9a:	nop    WORD PTR [rax+rax*1+0x0]

000000000041aea0 <flatcc_builder_create_buffer@@Base>:
  41aea0:	push   rbp
  41aea1:	push   r15
  41aea3:	push   r14
  41aea5:	push   r13
  41aea7:	push   r12
  41aea9:	push   rbx
  41aeaa:	sub    rsp,0xa8
  41aeb1:	mov    r12d,r9d
  41aeb4:	mov    r14d,ecx
  41aeb7:	mov    rbp,rsi
  41aeba:	mov    r13,rdi
  41aebd:	mov    WORD PTR [rsp+0xa],r8w
  41aec3:	mov    DWORD PTR [rsp+0xc],0x0
  41aecb:	mov    r15d,r9d
  41aece:	and    r15d,0x1
  41aed2:	lea    rsi,[rsp+0xa]
  41aed7:	mov    ecx,r15d
  41aeda:	call   41ad90 <flatcc_builder_embed_buffer@@Base+0x1a0>
  41aedf:	movzx  eax,WORD PTR [rsp+0xa]
  41aee4:	cmp    WORD PTR [r13+0xe8],ax
  41aeec:	jae    41aef6 <flatcc_builder_create_buffer@@Base+0x56>
  41aeee:	mov    WORD PTR [r13+0xe8],ax
  41aef6:	movzx  edx,ax
  41aef9:	xor    eax,eax
  41aefb:	test   rbp,rbp
  41aefe:	je     41af18 <flatcc_builder_create_buffer@@Base+0x78>
  41af00:	mov    ecx,DWORD PTR [rbp+0x0]
  41af03:	mov    DWORD PTR [rsp+0xc],ecx
  41af07:	xor    edi,edi
  41af09:	test   ecx,ecx
  41af0b:	setne  dil
  41af0f:	mov    rsi,rdi
  41af12:	shl    rsi,0x2
  41af16:	jmp    41af1c <flatcc_builder_create_buffer@@Base+0x7c>
  41af18:	xor    edi,edi
  41af1a:	xor    esi,esi
  41af1c:	lea    ecx,[r12+r12*1]
  41af20:	and    ecx,0x4
  41af23:	mov    ebp,DWORD PTR [r13+0xf0]
  41af2a:	xor    ecx,0xfffffffc
  41af2d:	add    ecx,ebp
  41af2f:	sub    ecx,esi
  41af31:	add    edx,0xffffffff
  41af34:	mov    QWORD PTR [rsp+0x18],0x0
  41af3d:	mov    DWORD PTR [rsp+0x20],0x0
  41af45:	test   r12b,0x3
  41af49:	je     41af7c <flatcc_builder_create_buffer@@Base+0xdc>
  41af4b:	mov    QWORD PTR [rsp+0x18],0x4
  41af54:	lea    rax,[rsp+0x10]
  41af59:	mov    QWORD PTR [rsp+0x28],rax
  41af5e:	mov    QWORD PTR [rsp+0x30],0x4
  41af67:	mov    DWORD PTR [rsp+0x20],0x1
  41af6f:	mov    eax,0x1
  41af74:	mov    r8d,0x8
  41af7a:	jmp    41af82 <flatcc_builder_create_buffer@@Base+0xe2>
  41af7c:	mov    r8d,0x4
  41af82:	and    ecx,edx
  41af84:	mov    QWORD PTR [rsp+0x18],r8
  41af89:	mov    edx,eax
  41af8b:	shl    rdx,0x4
  41af8f:	lea    rbx,[rsp+0x14]
  41af94:	mov    QWORD PTR [rsp+rdx*1+0x28],rbx
  41af99:	mov    QWORD PTR [rsp+rdx*1+0x30],0x4
  41afa2:	lea    edx,[rax+0x1]
  41afa5:	mov    DWORD PTR [rsp+0x20],edx
  41afa9:	test   dil,dil
  41afac:	je     41afd4 <flatcc_builder_create_buffer@@Base+0x134>
  41afae:	add    r8,rsi
  41afb1:	mov    QWORD PTR [rsp+0x18],r8
  41afb6:	mov    edx,edx
  41afb8:	shl    rdx,0x4
  41afbc:	lea    rdi,[rsp+0xc]
  41afc1:	mov    QWORD PTR [rsp+rdx*1+0x28],rdi
  41afc6:	mov    QWORD PTR [rsp+rdx*1+0x30],rsi
  41afcb:	or     eax,0x2
  41afce:	mov    DWORD PTR [rsp+0x20],eax
  41afd2:	mov    edx,eax
  41afd4:	test   ecx,ecx
  41afd6:	je     41b000 <flatcc_builder_create_buffer@@Base+0x160>
  41afd8:	mov    eax,ecx
  41afda:	add    r8,rax
  41afdd:	mov    QWORD PTR [rsp+0x18],r8
  41afe2:	mov    ecx,edx
  41afe4:	shl    rcx,0x4
  41afe8:	lea    rsi,[rip+0x9ea1]        # 424e90 <flatcc_builder_padding_base@@Base>
  41afef:	mov    QWORD PTR [rsp+rcx*1+0x28],rsi
  41aff4:	mov    QWORD PTR [rsp+rcx*1+0x30],rax
  41aff9:	add    edx,0x1
  41affc:	mov    DWORD PTR [rsp+0x20],edx
  41b000:	xor    eax,eax
  41b002:	test   r12b,0x3
  41b006:	setne  al
  41b009:	sub    ebp,r8d
  41b00c:	lea    eax,[rbp+rax*4+0x0]
  41b010:	mov    ecx,r15d
  41b013:	mov    ecx,DWORD PTR [r13+rcx*4+0xf4]
  41b01b:	sub    ecx,eax
  41b01d:	mov    DWORD PTR [rsp+0x10],ecx
  41b021:	sub    r14d,eax
  41b024:	mov    DWORD PTR [rsp+0x14],r14d
  41b029:	cmp    r8,0x11
  41b02d:	setb   al
  41b030:	lea    rcx,[r8-0x10]
  41b034:	shr    rcx,0x20
  41b038:	sete   cl
  41b03b:	test   r8d,r8d
  41b03e:	jle    41b076 <flatcc_builder_create_buffer@@Base+0x1d6>
  41b040:	or     al,cl
  41b042:	je     41b076 <flatcc_builder_create_buffer@@Base+0x1d6>
  41b044:	mov    rdi,QWORD PTR [r13+0x38]
  41b048:	lea    rsi,[rsp+0x28]
  41b04d:	mov    ecx,ebp
  41b04f:	call   QWORD PTR [r13+0x48]
  41b053:	test   eax,eax
  41b055:	jne    41b095 <flatcc_builder_create_buffer@@Base+0x1f5>
  41b057:	mov    DWORD PTR [r13+0xf0],ebp
  41b05e:	test   ebp,ebp
  41b060:	je     41b0b4 <flatcc_builder_create_buffer@@Base+0x214>
  41b062:	mov    eax,ebp
  41b064:	add    rsp,0xa8
  41b06b:	pop    rbx
  41b06c:	pop    r12
  41b06e:	pop    r13
  41b070:	pop    r14
  41b072:	pop    r15
  41b074:	pop    rbp
  41b075:	ret    
  41b076:	lea    rdi,[rip+0xb265]        # 4262e2 <flatcc_builder_padding_base@@Base+0x1452>
  41b07d:	lea    rsi,[rip+0xa09e]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41b084:	lea    rcx,[rip+0xb116]        # 4261a1 <flatcc_builder_padding_base@@Base+0x1311>
  41b08b:	mov    edx,0x287
  41b090:	call   404090 <__assert_fail@plt>
  41b095:	lea    rdi,[rip+0xb246]        # 4262e2 <flatcc_builder_padding_base@@Base+0x1452>
  41b09c:	lea    rsi,[rip+0xa07f]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41b0a3:	lea    rcx,[rip+0xb0f7]        # 4261a1 <flatcc_builder_padding_base@@Base+0x1311>
  41b0aa:	mov    edx,0x28b
  41b0af:	call   404090 <__assert_fail@plt>
  41b0b4:	lea    rdi,[rip+0xb227]        # 4262e2 <flatcc_builder_padding_base@@Base+0x1452>
  41b0bb:	lea    rsi,[rip+0xa060]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41b0c2:	lea    rcx,[rip+0xa1ae]        # 425277 <flatcc_builder_padding_base@@Base+0x3e7>
  41b0c9:	mov    edx,0x304
  41b0ce:	call   404090 <__assert_fail@plt>
  41b0d3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b0dd:	nop    DWORD PTR [rax]

000000000041b0e0 <flatcc_builder_create_struct@@Base>:
  41b0e0:	push   rbp
  41b0e1:	push   r14
  41b0e3:	push   rbx
  41b0e4:	sub    rsp,0x90
  41b0eb:	test   cx,cx
  41b0ee:	je     41b1e9 <flatcc_builder_create_struct@@Base+0x109>
  41b0f4:	mov    rax,rdx
  41b0f7:	mov    r14,rdi
  41b0fa:	cmp    WORD PTR [rdi+0xe8],cx
  41b101:	jae    41b10b <flatcc_builder_create_struct@@Base+0x2b>
  41b103:	mov    WORD PTR [r14+0xe8],cx
  41b10b:	mov    ebp,DWORD PTR [r14+0xf0]
  41b112:	mov    edx,ebp
  41b114:	sub    edx,eax
  41b116:	movzx  ecx,cx
  41b119:	add    ecx,0xffffffff
  41b11c:	and    ecx,edx
  41b11e:	mov    QWORD PTR [rsp],0x0
  41b126:	mov    DWORD PTR [rsp+0x8],0x0
  41b12e:	test   rax,rax
  41b131:	je     41b1c2 <flatcc_builder_create_struct@@Base+0xe2>
  41b137:	mov    QWORD PTR [rsp],rax
  41b13b:	mov    QWORD PTR [rsp+0x10],rsi
  41b140:	mov    QWORD PTR [rsp+0x18],rax
  41b145:	mov    DWORD PTR [rsp+0x8],0x1
  41b14d:	mov    edx,0x1
  41b152:	test   ecx,ecx
  41b154:	je     41b17b <flatcc_builder_create_struct@@Base+0x9b>
  41b156:	add    rax,rcx
  41b159:	mov    QWORD PTR [rsp],rax
  41b15d:	mov    esi,edx
  41b15f:	shl    rsi,0x4
  41b163:	lea    rdi,[rip+0x9d26]        # 424e90 <flatcc_builder_padding_base@@Base>
  41b16a:	mov    QWORD PTR [rsp+rsi*1+0x10],rdi
  41b16f:	mov    QWORD PTR [rsp+rsi*1+0x18],rcx
  41b174:	add    edx,0x1
  41b177:	mov    DWORD PTR [rsp+0x8],edx
  41b17b:	cmp    rax,0x11
  41b17f:	setb   cl
  41b182:	lea    rsi,[rax-0x10]
  41b186:	shr    rsi,0x20
  41b18a:	sete   bl
  41b18d:	test   eax,eax
  41b18f:	jle    41b1ca <flatcc_builder_create_struct@@Base+0xea>
  41b191:	or     cl,bl
  41b193:	je     41b1ca <flatcc_builder_create_struct@@Base+0xea>
  41b195:	sub    ebp,eax
  41b197:	mov    rdi,QWORD PTR [r14+0x38]
  41b19b:	lea    rsi,[rsp+0x10]
  41b1a0:	mov    ecx,ebp
  41b1a2:	mov    r8,rax
  41b1a5:	call   QWORD PTR [r14+0x48]
  41b1a9:	test   eax,eax
  41b1ab:	jne    41b208 <flatcc_builder_create_struct@@Base+0x128>
  41b1ad:	mov    DWORD PTR [r14+0xf0],ebp
  41b1b4:	mov    eax,ebp
  41b1b6:	add    rsp,0x90
  41b1bd:	pop    rbx
  41b1be:	pop    r14
  41b1c0:	pop    rbp
  41b1c1:	ret    
  41b1c2:	xor    edx,edx
  41b1c4:	test   ecx,ecx
  41b1c6:	jne    41b156 <flatcc_builder_create_struct@@Base+0x76>
  41b1c8:	jmp    41b17b <flatcc_builder_create_struct@@Base+0x9b>
  41b1ca:	lea    rdi,[rip+0xb111]        # 4262e2 <flatcc_builder_padding_base@@Base+0x1452>
  41b1d1:	lea    rsi,[rip+0x9f4a]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41b1d8:	lea    rcx,[rip+0xafc2]        # 4261a1 <flatcc_builder_padding_base@@Base+0x1311>
  41b1df:	mov    edx,0x287
  41b1e4:	call   404090 <__assert_fail@plt>
  41b1e9:	lea    rdi,[rip+0xa10a]        # 4252fa <flatcc_builder_padding_base@@Base+0x46a>
  41b1f0:	lea    rsi,[rip+0x9f2b]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41b1f7:	lea    rcx,[rip+0xa107]        # 425305 <flatcc_builder_padding_base@@Base+0x475>
  41b1fe:	mov    edx,0x30f
  41b203:	call   404090 <__assert_fail@plt>
  41b208:	lea    rdi,[rip+0xb0d3]        # 4262e2 <flatcc_builder_padding_base@@Base+0x1452>
  41b20f:	lea    rsi,[rip+0x9f0c]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41b216:	lea    rcx,[rip+0xaf84]        # 4261a1 <flatcc_builder_padding_base@@Base+0x1311>
  41b21d:	mov    edx,0x28b
  41b222:	call   404090 <__assert_fail@plt>
  41b227:	nop    WORD PTR [rax+rax*1+0x0]

000000000041b230 <flatcc_builder_start_buffer@@Base>:
  41b230:	push   rbp
  41b231:	push   r15
  41b233:	push   r14
  41b235:	push   rbx
  41b236:	push   rax
  41b237:	mov    r15d,ecx
  41b23a:	mov    ebp,edx
  41b23c:	mov    r14,rsi
  41b23f:	mov    rbx,rdi
  41b242:	movzx  esi,WORD PTR [rdi+0xe8]
  41b249:	call   41b310 <flatcc_builder_start_buffer@@Base+0xe0>
  41b24e:	mov    ecx,eax
  41b250:	mov    eax,0xffffffff
  41b255:	test   ecx,ecx
  41b257:	jne    41b2fc <flatcc_builder_start_buffer@@Base+0xcc>
  41b25d:	mov    WORD PTR [rbx+0xe8],0x1
  41b266:	movzx  eax,WORD PTR [rbx+0xec]
  41b26d:	mov    rcx,QWORD PTR [rbx+0x30]
  41b271:	mov    WORD PTR [rcx+0x22],ax
  41b275:	mov    WORD PTR [rbx+0xec],bp
  41b27c:	movzx  eax,WORD PTR [rbx+0x10c]
  41b283:	mov    rcx,QWORD PTR [rbx+0x30]
  41b287:	mov    WORD PTR [rcx+0x20],ax
  41b28b:	mov    WORD PTR [rbx+0x10c],r15w
  41b293:	mov    eax,DWORD PTR [rbx+0xf8]
  41b299:	mov    rcx,QWORD PTR [rbx+0x30]
  41b29d:	mov    DWORD PTR [rcx+0x14],eax
  41b2a0:	mov    eax,DWORD PTR [rbx+0x100]
  41b2a6:	mov    rcx,QWORD PTR [rbx+0x30]
  41b2aa:	mov    DWORD PTR [rcx+0x1c],eax
  41b2ad:	mov    eax,DWORD PTR [rbx+0xf0]
  41b2b3:	mov    DWORD PTR [rbx+0xf8],eax
  41b2b9:	mov    eax,DWORD PTR [rbx+0xfc]
  41b2bf:	lea    ecx,[rax+0x1]
  41b2c2:	mov    DWORD PTR [rbx+0xfc],ecx
  41b2c8:	mov    DWORD PTR [rbx+0x100],eax
  41b2ce:	mov    eax,DWORD PTR [rbx+0x110]
  41b2d4:	mov    rcx,QWORD PTR [rbx+0x30]
  41b2d8:	mov    DWORD PTR [rcx+0x10],eax
  41b2db:	test   r14,r14
  41b2de:	jne    41b2e7 <flatcc_builder_start_buffer@@Base+0xb7>
  41b2e0:	lea    r14,[rip+0x9ba9]        # 424e90 <flatcc_builder_padding_base@@Base>
  41b2e7:	mov    eax,DWORD PTR [r14]
  41b2ea:	mov    DWORD PTR [rbx+0x110],eax
  41b2f0:	mov    rax,QWORD PTR [rbx+0x30]
  41b2f4:	mov    WORD PTR [rax+0xe],0x1
  41b2fa:	xor    eax,eax
  41b2fc:	add    rsp,0x8
  41b300:	pop    rbx
  41b301:	pop    r14
  41b303:	pop    r15
  41b305:	pop    rbp
  41b306:	ret    
  41b307:	nop    WORD PTR [rax+rax*1+0x0]
  41b310:	push   rbp
  41b311:	push   r15
  41b313:	push   r14
  41b315:	push   rbx
  41b316:	push   rax
  41b317:	mov    r14d,esi
  41b31a:	mov    rbx,rdi
  41b31d:	movsxd rbp,DWORD PTR [rdi+0x104]
  41b324:	lea    eax,[rbp+0x1]
  41b327:	mov    DWORD PTR [rdi+0x104],eax
  41b32d:	cmp    ebp,DWORD PTR [rdi+0x108]
  41b333:	jge    41b346 <flatcc_builder_start_buffer@@Base+0x116>
  41b335:	mov    rax,QWORD PTR [rbx+0x30]
  41b339:	add    rax,0x24
  41b33d:	mov    QWORD PTR [rbx+0x30],rax
  41b341:	jmp    41b3db <flatcc_builder_start_buffer@@Base+0x1ab>
  41b346:	mov    eax,DWORD PTR [rbx+0x120]
  41b34c:	mov    r15d,0xffffffff
  41b352:	test   eax,eax
  41b354:	jle    41b35e <flatcc_builder_start_buffer@@Base+0x12e>
  41b356:	cmp    ebp,eax
  41b358:	jge    41b416 <flatcc_builder_start_buffer@@Base+0x1e6>
  41b35e:	shl    rbp,0x2
  41b362:	lea    rdx,[rbp*8+0x24]
  41b36a:	add    rdx,rbp
  41b36d:	cmp    rdx,QWORD PTR [rbx+0xa0]
  41b374:	jbe    41b394 <flatcc_builder_start_buffer@@Base+0x164>
  41b376:	lea    rsi,[rbx+0x98]
  41b37d:	mov    rdi,QWORD PTR [rbx+0x40]
  41b381:	xor    ecx,ecx
  41b383:	mov    r8d,0x4
  41b389:	call   QWORD PTR [rbx+0x50]
  41b38c:	test   eax,eax
  41b38e:	jne    41b424 <flatcc_builder_start_buffer@@Base+0x1f4>
  41b394:	lea    rax,[rbp*8+0x0]
  41b39c:	add    rax,rbp
  41b39f:	add    rax,QWORD PTR [rbx+0x98]
  41b3a6:	mov    QWORD PTR [rbx+0x30],rax
  41b3aa:	je     41b416 <flatcc_builder_start_buffer@@Base+0x1e6>
  41b3ac:	movabs rdx,0xe38e38e38e38e38f
  41b3b6:	mulx   rdx,rcx,QWORD PTR [rbx+0xa0]
  41b3bf:	shr    rdx,0x5
  41b3c3:	mov    ecx,DWORD PTR [rbx+0x120]
  41b3c9:	cmp    ecx,edx
  41b3cb:	mov    esi,edx
  41b3cd:	cmovle esi,ecx
  41b3d0:	test   ecx,ecx
  41b3d2:	cmovle esi,edx
  41b3d5:	mov    DWORD PTR [rbx+0x108],esi
  41b3db:	mov    ecx,DWORD PTR [rbx+0x20]
  41b3de:	mov    DWORD PTR [rax+0x8],ecx
  41b3e1:	movzx  edx,WORD PTR [rbx+0xea]
  41b3e8:	mov    WORD PTR [rax+0xc],dx
  41b3ec:	mov    WORD PTR [rbx+0xea],r14w
  41b3f4:	mov    edx,DWORD PTR [rbx+0x28]
  41b3f7:	mov    DWORD PTR [rax],edx
  41b3f9:	mov    DWORD PTR [rax+0x4],0xfffffffc
  41b400:	lea    eax,[rcx+rdx*1]
  41b403:	add    eax,0x7
  41b406:	and    eax,0xfffffff8
  41b409:	mov    DWORD PTR [rbx+0x28],eax
  41b40c:	mov    DWORD PTR [rbx+0x20],0x0
  41b413:	xor    r15d,r15d
  41b416:	mov    eax,r15d
  41b419:	add    rsp,0x8
  41b41d:	pop    rbx
  41b41e:	pop    r14
  41b420:	pop    r15
  41b422:	pop    rbp
  41b423:	ret    
  41b424:	lea    rdi,[rip+0xaeb7]        # 4262e2 <flatcc_builder_padding_base@@Base+0x1452>
  41b42b:	lea    rsi,[rip+0x9cf0]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41b432:	lea    rcx,[rip+0xace3]        # 42611c <flatcc_builder_padding_base@@Base+0x128c>
  41b439:	mov    edx,0x134
  41b43e:	call   404090 <__assert_fail@plt>
  41b443:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b44d:	nop    DWORD PTR [rax]

000000000041b450 <flatcc_builder_end_buffer@@Base>:
  41b450:	push   rbp
  41b451:	push   rbx
  41b452:	push   rax
  41b453:	mov    rcx,QWORD PTR [rdi+0x30]
  41b457:	movzx  ecx,WORD PTR [rcx+0xe]
  41b45b:	cmp    ecx,0x1
  41b45e:	jne    41b55e <flatcc_builder_end_buffer@@Base+0x10e>
  41b464:	mov    eax,esi
  41b466:	mov    rbx,rdi
  41b469:	movzx  ecx,WORD PTR [rdi+0x10c]
  41b470:	and    ecx,0x2
  41b473:	xor    r9d,r9d
  41b476:	cmp    DWORD PTR [rdi+0x100],0x0
  41b47d:	setne  r9b
  41b481:	or     r9d,ecx
  41b484:	movzx  edi,WORD PTR [rdi+0xe8]
  41b48b:	movzx  ecx,WORD PTR [rbx+0xec]
  41b492:	cmp    di,cx
  41b495:	jae    41b4a0 <flatcc_builder_end_buffer@@Base+0x50>
  41b497:	mov    WORD PTR [rbx+0xe8],cx
  41b49e:	mov    edi,ecx
  41b4a0:	lea    rsi,[rbx+0x110]
  41b4a7:	movzx  edx,cx
  41b4aa:	movzx  r8d,di
  41b4ae:	mov    rdi,rbx
  41b4b1:	mov    ecx,eax
  41b4b3:	call   41aea0 <flatcc_builder_create_buffer@@Base>
  41b4b8:	mov    ebp,eax
  41b4ba:	test   eax,eax
  41b4bc:	je     41b555 <flatcc_builder_end_buffer@@Base+0x105>
  41b4c2:	mov    rax,QWORD PTR [rbx+0x30]
  41b4c6:	mov    ecx,DWORD PTR [rax+0x14]
  41b4c9:	mov    DWORD PTR [rbx+0xf8],ecx
  41b4cf:	mov    ecx,DWORD PTR [rax+0x1c]
  41b4d2:	mov    DWORD PTR [rbx+0x100],ecx
  41b4d8:	mov    ecx,DWORD PTR [rax+0x10]
  41b4db:	mov    DWORD PTR [rbx+0x110],ecx
  41b4e1:	movzx  eax,WORD PTR [rax+0x20]
  41b4e5:	mov    WORD PTR [rbx+0x10c],ax
  41b4ec:	mov    rdi,QWORD PTR [rbx+0x18]
  41b4f0:	mov    edx,DWORD PTR [rbx+0x20]
  41b4f3:	xor    esi,esi
  41b4f5:	call   4040a0 <memset@plt>
  41b4fa:	mov    rax,QWORD PTR [rbx+0x30]
  41b4fe:	mov    ecx,DWORD PTR [rax+0x8]
  41b501:	mov    DWORD PTR [rbx+0x20],ecx
  41b504:	mov    ecx,DWORD PTR [rax]
  41b506:	mov    DWORD PTR [rbx+0x28],ecx
  41b509:	mov    edx,DWORD PTR [rax+0x4]
  41b50c:	mov    rsi,rcx
  41b50f:	add    rsi,QWORD PTR [rbx+0x68]
  41b513:	mov    QWORD PTR [rbx+0x18],rsi
  41b517:	mov    esi,DWORD PTR [rbx+0x70]
  41b51a:	sub    esi,ecx
  41b51c:	cmp    esi,edx
  41b51e:	cmova  esi,edx
  41b521:	mov    DWORD PTR [rbx+0x24],esi
  41b524:	movzx  ecx,WORD PTR [rbx+0xea]
  41b52b:	cmp    WORD PTR [rbx+0xe8],cx
  41b532:	jae    41b53b <flatcc_builder_end_buffer@@Base+0xeb>
  41b534:	mov    WORD PTR [rbx+0xe8],cx
  41b53b:	movzx  ecx,WORD PTR [rax+0xc]
  41b53f:	mov    WORD PTR [rbx+0xea],cx
  41b546:	add    rax,0xffffffffffffffdc
  41b54a:	mov    QWORD PTR [rbx+0x30],rax
  41b54e:	add    DWORD PTR [rbx+0x104],0xffffffff
  41b555:	mov    eax,ebp
  41b557:	add    rsp,0x8
  41b55b:	pop    rbx
  41b55c:	pop    rbp
  41b55d:	ret    
  41b55e:	lea    rdi,[rip+0x9e06]        # 42536b <flatcc_builder_padding_base@@Base+0x4db>
  41b565:	lea    rsi,[rip+0x9bb6]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41b56c:	lea    rcx,[rip+0x9e24]        # 425397 <flatcc_builder_padding_base@@Base+0x507>
  41b573:	mov    edx,0x346
  41b578:	call   404090 <__assert_fail@plt>
  41b57d:	nop    DWORD PTR [rax]

000000000041b580 <flatcc_builder_start_struct@@Base>:
  41b580:	push   r15
  41b582:	push   r14
  41b584:	push   rbx
  41b585:	mov    r14,rsi
  41b588:	mov    rbx,rdi
  41b58b:	mov    esi,edx
  41b58d:	call   41b310 <flatcc_builder_start_buffer@@Base+0xe0>
  41b592:	test   eax,eax
  41b594:	je     41b59d <flatcc_builder_start_struct@@Base+0x1d>
  41b596:	xor    eax,eax
  41b598:	jmp    41b632 <flatcc_builder_start_struct@@Base+0xb2>
  41b59d:	mov    rdx,QWORD PTR [rbx+0x30]
  41b5a1:	mov    WORD PTR [rdx+0xe],0x2
  41b5a7:	mov    ecx,DWORD PTR [rbx+0x28]
  41b5aa:	mov    esi,DWORD PTR [rbx+0x70]
  41b5ad:	mov    rax,QWORD PTR [rbx+0x68]
  41b5b1:	add    rax,rcx
  41b5b4:	mov    QWORD PTR [rbx+0x18],rax
  41b5b8:	sub    esi,ecx
  41b5ba:	cmp    esi,0xfffffffc
  41b5bd:	mov    edi,0xfffffffc
  41b5c2:	cmovb  edi,esi
  41b5c5:	mov    DWORD PTR [rbx+0x24],edi
  41b5c8:	mov    DWORD PTR [rdx+0x4],0xfffffffc
  41b5cf:	mov    r15d,DWORD PTR [rbx+0x20]
  41b5d3:	add    r14d,r15d
  41b5d6:	mov    DWORD PTR [rbx+0x20],r14d
  41b5da:	cmp    r14d,edi
  41b5dd:	jb     41b62f <flatcc_builder_start_struct@@Base+0xaf>
  41b5df:	add    r14d,0x1
  41b5e3:	lea    rsi,[rbx+0x68]
  41b5e7:	mov    rdi,QWORD PTR [rbx+0x40]
  41b5eb:	add    r14,rcx
  41b5ee:	mov    ecx,0x1
  41b5f3:	mov    r8d,0x1
  41b5f9:	mov    rdx,r14
  41b5fc:	call   QWORD PTR [rbx+0x50]
  41b5ff:	test   eax,eax
  41b601:	jne    41b596 <flatcc_builder_start_struct@@Base+0x16>
  41b603:	mov    ecx,DWORD PTR [rbx+0x28]
  41b606:	mov    rax,rcx
  41b609:	add    rax,QWORD PTR [rbx+0x68]
  41b60d:	mov    QWORD PTR [rbx+0x18],rax
  41b611:	mov    edx,DWORD PTR [rbx+0x70]
  41b614:	sub    edx,ecx
  41b616:	cmp    edx,0xfffffffc
  41b619:	mov    ecx,0xfffffffc
  41b61e:	cmovb  ecx,edx
  41b621:	mov    DWORD PTR [rbx+0x24],ecx
  41b624:	mov    rcx,QWORD PTR [rbx+0x30]
  41b628:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  41b62f:	add    rax,r15
  41b632:	pop    rbx
  41b633:	pop    r14
  41b635:	pop    r15
  41b637:	ret    
  41b638:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041b640 <flatcc_builder_struct_edit@@Base>:
  41b640:	mov    rax,QWORD PTR [rdi+0x18]
  41b644:	ret    
  41b645:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b64f:	nop

000000000041b650 <flatcc_builder_end_struct@@Base>:
  41b650:	push   rbp
  41b651:	push   rbx
  41b652:	push   rax
  41b653:	mov    rax,QWORD PTR [rdi+0x30]
  41b657:	movzx  eax,WORD PTR [rax+0xe]
  41b65b:	cmp    eax,0x2
  41b65e:	jne    41b6f2 <flatcc_builder_end_struct@@Base+0xa2>
  41b664:	mov    rbx,rdi
  41b667:	mov    rsi,QWORD PTR [rdi+0x18]
  41b66b:	mov    edx,DWORD PTR [rdi+0x20]
  41b66e:	movzx  ecx,WORD PTR [rdi+0xea]
  41b675:	call   41b0e0 <flatcc_builder_create_struct@@Base>
  41b67a:	mov    ebp,eax
  41b67c:	test   eax,eax
  41b67e:	je     41b6e9 <flatcc_builder_end_struct@@Base+0x99>
  41b680:	mov    rdi,QWORD PTR [rbx+0x18]
  41b684:	mov    edx,DWORD PTR [rbx+0x20]
  41b687:	xor    esi,esi
  41b689:	call   4040a0 <memset@plt>
  41b68e:	mov    rax,QWORD PTR [rbx+0x30]
  41b692:	mov    ecx,DWORD PTR [rax+0x8]
  41b695:	mov    DWORD PTR [rbx+0x20],ecx
  41b698:	mov    ecx,DWORD PTR [rax]
  41b69a:	mov    DWORD PTR [rbx+0x28],ecx
  41b69d:	mov    edx,DWORD PTR [rax+0x4]
  41b6a0:	mov    rsi,rcx
  41b6a3:	add    rsi,QWORD PTR [rbx+0x68]
  41b6a7:	mov    QWORD PTR [rbx+0x18],rsi
  41b6ab:	mov    esi,DWORD PTR [rbx+0x70]
  41b6ae:	sub    esi,ecx
  41b6b0:	cmp    esi,edx
  41b6b2:	cmova  esi,edx
  41b6b5:	mov    DWORD PTR [rbx+0x24],esi
  41b6b8:	movzx  ecx,WORD PTR [rbx+0xea]
  41b6bf:	cmp    WORD PTR [rbx+0xe8],cx
  41b6c6:	jae    41b6cf <flatcc_builder_end_struct@@Base+0x7f>
  41b6c8:	mov    WORD PTR [rbx+0xe8],cx
  41b6cf:	movzx  ecx,WORD PTR [rax+0xc]
  41b6d3:	mov    WORD PTR [rbx+0xea],cx
  41b6da:	add    rax,0xffffffffffffffdc
  41b6de:	mov    QWORD PTR [rbx+0x30],rax
  41b6e2:	add    DWORD PTR [rbx+0x104],0xffffffff
  41b6e9:	mov    eax,ebp
  41b6eb:	add    rsp,0x8
  41b6ef:	pop    rbx
  41b6f0:	pop    rbp
  41b6f1:	ret    
  41b6f2:	lea    rdi,[rip+0x9cf7]        # 4253f0 <flatcc_builder_padding_base@@Base+0x560>
  41b6f9:	lea    rsi,[rip+0x9a22]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41b700:	lea    rcx,[rip+0x9d15]        # 42541c <flatcc_builder_padding_base@@Base+0x58c>
  41b707:	mov    edx,0x368
  41b70c:	call   404090 <__assert_fail@plt>
  41b711:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b71b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041b720 <flatcc_builder_extend_vector@@Base>:
  41b720:	push   r14
  41b722:	push   rbx
  41b723:	push   rax
  41b724:	mov    rax,QWORD PTR [rdi+0x30]
  41b728:	mov    ecx,DWORD PTR [rax+0x14]
  41b72b:	add    ecx,esi
  41b72d:	jb     41b7c0 <flatcc_builder_extend_vector@@Base+0xa0>
  41b733:	cmp    ecx,DWORD PTR [rax+0x18]
  41b736:	ja     41b7c0 <flatcc_builder_extend_vector@@Base+0xa0>
  41b73c:	mov    rbx,rdi
  41b73f:	mov    DWORD PTR [rax+0x14],ecx
  41b742:	mov    rax,QWORD PTR [rdi+0x30]
  41b746:	imul   esi,DWORD PTR [rax+0x10]
  41b74a:	mov    r14d,DWORD PTR [rdi+0x20]
  41b74e:	add    esi,r14d
  41b751:	mov    DWORD PTR [rdi+0x20],esi
  41b754:	cmp    esi,DWORD PTR [rdi+0x24]
  41b757:	jae    41b75f <flatcc_builder_extend_vector@@Base+0x3f>
  41b759:	mov    rax,QWORD PTR [rbx+0x18]
  41b75d:	jmp    41b7b5 <flatcc_builder_extend_vector@@Base+0x95>
  41b75f:	add    esi,0x1
  41b762:	lea    rax,[rbx+0x68]
  41b766:	mov    rdi,QWORD PTR [rbx+0x40]
  41b76a:	mov    edx,DWORD PTR [rbx+0x28]
  41b76d:	add    rdx,rsi
  41b770:	mov    ecx,0x1
  41b775:	mov    r8d,0x1
  41b77b:	mov    rsi,rax
  41b77e:	call   QWORD PTR [rbx+0x50]
  41b781:	test   eax,eax
  41b783:	je     41b789 <flatcc_builder_extend_vector@@Base+0x69>
  41b785:	xor    eax,eax
  41b787:	jmp    41b7b8 <flatcc_builder_extend_vector@@Base+0x98>
  41b789:	mov    ecx,DWORD PTR [rbx+0x28]
  41b78c:	mov    rax,rcx
  41b78f:	add    rax,QWORD PTR [rbx+0x68]
  41b793:	mov    QWORD PTR [rbx+0x18],rax
  41b797:	mov    edx,DWORD PTR [rbx+0x70]
  41b79a:	sub    edx,ecx
  41b79c:	cmp    edx,0xfffffffc
  41b79f:	mov    ecx,0xfffffffc
  41b7a4:	cmovb  ecx,edx
  41b7a7:	mov    DWORD PTR [rbx+0x24],ecx
  41b7aa:	mov    rcx,QWORD PTR [rbx+0x30]
  41b7ae:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  41b7b5:	add    rax,r14
  41b7b8:	add    rsp,0x8
  41b7bc:	pop    rbx
  41b7bd:	pop    r14
  41b7bf:	ret    
  41b7c0:	lea    rdi,[rip+0xaa24]        # 4261eb <flatcc_builder_padding_base@@Base+0x135b>
  41b7c7:	lea    rsi,[rip+0x9954]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41b7ce:	lea    rcx,[rip+0xaa31]        # 426206 <flatcc_builder_padding_base@@Base+0x1376>
  41b7d5:	mov    edx,0x37c
  41b7da:	call   404090 <__assert_fail@plt>
  41b7df:	nop

000000000041b7e0 <flatcc_builder_vector_push@@Base>:
  41b7e0:	push   r15
  41b7e2:	push   r14
  41b7e4:	push   r13
  41b7e6:	push   r12
  41b7e8:	push   rbx
  41b7e9:	mov    rax,QWORD PTR [rdi+0x30]
  41b7ed:	movzx  ecx,WORD PTR [rax+0xe]
  41b7f1:	cmp    ecx,0x4
  41b7f4:	jne    41b8a9 <flatcc_builder_vector_push@@Base+0xc9>
  41b7fa:	mov    ecx,DWORD PTR [rax+0x14]
  41b7fd:	cmp    ecx,DWORD PTR [rax+0x18]
  41b800:	ja     41b8c8 <flatcc_builder_vector_push@@Base+0xe8>
  41b806:	mov    r14,rsi
  41b809:	mov    rbx,rdi
  41b80c:	add    ecx,0x1
  41b80f:	mov    DWORD PTR [rax+0x14],ecx
  41b812:	mov    rax,QWORD PTR [rdi+0x30]
  41b816:	mov    r15d,DWORD PTR [rax+0x10]
  41b81a:	mov    r13d,DWORD PTR [rdi+0x20]
  41b81e:	lea    eax,[r15+r13*1]
  41b822:	mov    DWORD PTR [rdi+0x20],eax
  41b825:	cmp    eax,DWORD PTR [rdi+0x24]
  41b828:	jae    41b835 <flatcc_builder_vector_push@@Base+0x55>
  41b82a:	mov    r12,QWORD PTR [rbx+0x18]
  41b82e:	add    r12,r13
  41b831:	jne    41b88e <flatcc_builder_vector_push@@Base+0xae>
  41b833:	jmp    41b858 <flatcc_builder_vector_push@@Base+0x78>
  41b835:	add    eax,0x1
  41b838:	lea    rsi,[rbx+0x68]
  41b83c:	mov    rdi,QWORD PTR [rbx+0x40]
  41b840:	mov    edx,DWORD PTR [rbx+0x28]
  41b843:	add    rdx,rax
  41b846:	mov    ecx,0x1
  41b84b:	mov    r8d,0x1
  41b851:	call   QWORD PTR [rbx+0x50]
  41b854:	test   eax,eax
  41b856:	je     41b85d <flatcc_builder_vector_push@@Base+0x7d>
  41b858:	xor    r12d,r12d
  41b85b:	jmp    41b89c <flatcc_builder_vector_push@@Base+0xbc>
  41b85d:	mov    eax,DWORD PTR [rbx+0x28]
  41b860:	mov    r12,rax
  41b863:	add    r12,QWORD PTR [rbx+0x68]
  41b867:	mov    QWORD PTR [rbx+0x18],r12
  41b86b:	mov    ecx,DWORD PTR [rbx+0x70]
  41b86e:	sub    ecx,eax
  41b870:	cmp    ecx,0xfffffffc
  41b873:	mov    eax,0xfffffffc
  41b878:	cmovb  eax,ecx
  41b87b:	mov    DWORD PTR [rbx+0x24],eax
  41b87e:	mov    rax,QWORD PTR [rbx+0x30]
  41b882:	mov    DWORD PTR [rax+0x4],0xfffffffc
  41b889:	add    r12,r13
  41b88c:	je     41b858 <flatcc_builder_vector_push@@Base+0x78>
  41b88e:	mov    rdi,r12
  41b891:	mov    rsi,r14
  41b894:	mov    rdx,r15
  41b897:	call   404100 <memcpy@plt>
  41b89c:	mov    rax,r12
  41b89f:	pop    rbx
  41b8a0:	pop    r12
  41b8a2:	pop    r13
  41b8a4:	pop    r14
  41b8a6:	pop    r15
  41b8a8:	ret    
  41b8a9:	lea    rdi,[rip+0x9baf]        # 42545f <flatcc_builder_padding_base@@Base+0x5cf>
  41b8b0:	lea    rsi,[rip+0x986b]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41b8b7:	lea    rcx,[rip+0x9bcd]        # 42548b <flatcc_builder_padding_base@@Base+0x5fb>
  41b8be:	mov    edx,0x38b
  41b8c3:	call   404090 <__assert_fail@plt>
  41b8c8:	lea    rdi,[rip+0x9bff]        # 4254ce <flatcc_builder_padding_base@@Base+0x63e>
  41b8cf:	lea    rsi,[rip+0x984c]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41b8d6:	lea    rcx,[rip+0x9bae]        # 42548b <flatcc_builder_padding_base@@Base+0x5fb>
  41b8dd:	mov    edx,0x38c
  41b8e2:	call   404090 <__assert_fail@plt>
  41b8e7:	nop    WORD PTR [rax+rax*1+0x0]

000000000041b8f0 <flatcc_builder_append_vector@@Base>:
  41b8f0:	push   r15
  41b8f2:	push   r14
  41b8f4:	push   r13
  41b8f6:	push   r12
  41b8f8:	push   rbx
  41b8f9:	mov    rax,QWORD PTR [rdi+0x30]
  41b8fd:	movzx  ecx,WORD PTR [rax+0xe]
  41b901:	cmp    ecx,0x4
  41b904:	jne    41b9e2 <flatcc_builder_append_vector@@Base+0xf2>
  41b90a:	mov    r15,rdx
  41b90d:	mov    ecx,DWORD PTR [rax+0x14]
  41b910:	add    ecx,r15d
  41b913:	jb     41b9c3 <flatcc_builder_append_vector@@Base+0xd3>
  41b919:	cmp    ecx,DWORD PTR [rax+0x18]
  41b91c:	ja     41b9c3 <flatcc_builder_append_vector@@Base+0xd3>
  41b922:	mov    r14,rsi
  41b925:	mov    rbx,rdi
  41b928:	mov    DWORD PTR [rax+0x14],ecx
  41b92b:	mov    rax,QWORD PTR [rdi+0x30]
  41b92f:	imul   r15d,DWORD PTR [rax+0x10]
  41b934:	mov    r13d,DWORD PTR [rdi+0x20]
  41b938:	lea    eax,[r15+r13*1]
  41b93c:	mov    DWORD PTR [rdi+0x20],eax
  41b93f:	cmp    eax,DWORD PTR [rdi+0x24]
  41b942:	jae    41b94f <flatcc_builder_append_vector@@Base+0x5f>
  41b944:	mov    r12,QWORD PTR [rbx+0x18]
  41b948:	add    r12,r13
  41b94b:	jne    41b9a8 <flatcc_builder_append_vector@@Base+0xb8>
  41b94d:	jmp    41b972 <flatcc_builder_append_vector@@Base+0x82>
  41b94f:	add    eax,0x1
  41b952:	lea    rsi,[rbx+0x68]
  41b956:	mov    rdi,QWORD PTR [rbx+0x40]
  41b95a:	mov    edx,DWORD PTR [rbx+0x28]
  41b95d:	add    rdx,rax
  41b960:	mov    ecx,0x1
  41b965:	mov    r8d,0x1
  41b96b:	call   QWORD PTR [rbx+0x50]
  41b96e:	test   eax,eax
  41b970:	je     41b977 <flatcc_builder_append_vector@@Base+0x87>
  41b972:	xor    r12d,r12d
  41b975:	jmp    41b9b6 <flatcc_builder_append_vector@@Base+0xc6>
  41b977:	mov    eax,DWORD PTR [rbx+0x28]
  41b97a:	mov    r12,rax
  41b97d:	add    r12,QWORD PTR [rbx+0x68]
  41b981:	mov    QWORD PTR [rbx+0x18],r12
  41b985:	mov    ecx,DWORD PTR [rbx+0x70]
  41b988:	sub    ecx,eax
  41b98a:	cmp    ecx,0xfffffffc
  41b98d:	mov    eax,0xfffffffc
  41b992:	cmovb  eax,ecx
  41b995:	mov    DWORD PTR [rbx+0x24],eax
  41b998:	mov    rax,QWORD PTR [rbx+0x30]
  41b99c:	mov    DWORD PTR [rax+0x4],0xfffffffc
  41b9a3:	add    r12,r13
  41b9a6:	je     41b972 <flatcc_builder_append_vector@@Base+0x82>
  41b9a8:	mov    edx,r15d
  41b9ab:	mov    rdi,r12
  41b9ae:	mov    rsi,r14
  41b9b1:	call   404100 <memcpy@plt>
  41b9b6:	mov    rax,r12
  41b9b9:	pop    rbx
  41b9ba:	pop    r12
  41b9bc:	pop    r13
  41b9be:	pop    r14
  41b9c0:	pop    r15
  41b9c2:	ret    
  41b9c3:	lea    rdi,[rip+0xa821]        # 4261eb <flatcc_builder_padding_base@@Base+0x135b>
  41b9ca:	lea    rsi,[rip+0x9751]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41b9d1:	lea    rcx,[rip+0xa82e]        # 426206 <flatcc_builder_padding_base@@Base+0x1376>
  41b9d8:	mov    edx,0x37c
  41b9dd:	call   404090 <__assert_fail@plt>
  41b9e2:	lea    rdi,[rip+0x9a76]        # 42545f <flatcc_builder_padding_base@@Base+0x5cf>
  41b9e9:	lea    rsi,[rip+0x9732]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41b9f0:	lea    rcx,[rip+0x9b14]        # 42550b <flatcc_builder_padding_base@@Base+0x67b>
  41b9f7:	mov    edx,0x393
  41b9fc:	call   404090 <__assert_fail@plt>
  41ba01:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ba0b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041ba10 <flatcc_builder_extend_offset_vector@@Base>:
  41ba10:	push   r14
  41ba12:	push   rbx
  41ba13:	push   rax
  41ba14:	mov    rax,QWORD PTR [rdi+0x30]
  41ba18:	mov    ecx,DWORD PTR [rax+0x14]
  41ba1b:	add    ecx,esi
  41ba1d:	jb     41baa5 <flatcc_builder_extend_offset_vector@@Base+0x95>
  41ba23:	cmp    ecx,0x40000000
  41ba29:	jae    41baa5 <flatcc_builder_extend_offset_vector@@Base+0x95>
  41ba2b:	mov    rbx,rdi
  41ba2e:	mov    DWORD PTR [rax+0x14],ecx
  41ba31:	mov    r14d,DWORD PTR [rdi+0x20]
  41ba35:	lea    eax,[r14+rsi*4]
  41ba39:	mov    DWORD PTR [rdi+0x20],eax
  41ba3c:	cmp    eax,DWORD PTR [rdi+0x24]
  41ba3f:	jae    41ba47 <flatcc_builder_extend_offset_vector@@Base+0x37>
  41ba41:	mov    rax,QWORD PTR [rbx+0x18]
  41ba45:	jmp    41ba9a <flatcc_builder_extend_offset_vector@@Base+0x8a>
  41ba47:	add    eax,0x1
  41ba4a:	lea    rsi,[rbx+0x68]
  41ba4e:	mov    rdi,QWORD PTR [rbx+0x40]
  41ba52:	mov    edx,DWORD PTR [rbx+0x28]
  41ba55:	add    rdx,rax
  41ba58:	mov    ecx,0x1
  41ba5d:	mov    r8d,0x1
  41ba63:	call   QWORD PTR [rbx+0x50]
  41ba66:	test   eax,eax
  41ba68:	je     41ba6e <flatcc_builder_extend_offset_vector@@Base+0x5e>
  41ba6a:	xor    eax,eax
  41ba6c:	jmp    41ba9d <flatcc_builder_extend_offset_vector@@Base+0x8d>
  41ba6e:	mov    ecx,DWORD PTR [rbx+0x28]
  41ba71:	mov    rax,rcx
  41ba74:	add    rax,QWORD PTR [rbx+0x68]
  41ba78:	mov    QWORD PTR [rbx+0x18],rax
  41ba7c:	mov    edx,DWORD PTR [rbx+0x70]
  41ba7f:	sub    edx,ecx
  41ba81:	cmp    edx,0xfffffffc
  41ba84:	mov    ecx,0xfffffffc
  41ba89:	cmovb  ecx,edx
  41ba8c:	mov    DWORD PTR [rbx+0x24],ecx
  41ba8f:	mov    rcx,QWORD PTR [rbx+0x30]
  41ba93:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  41ba9a:	add    rax,r14
  41ba9d:	add    rsp,0x8
  41baa1:	pop    rbx
  41baa2:	pop    r14
  41baa4:	ret    
  41baa5:	lea    rdi,[rip+0xa73f]        # 4261eb <flatcc_builder_padding_base@@Base+0x135b>
  41baac:	lea    rsi,[rip+0x966f]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41bab3:	lea    rcx,[rip+0xa74c]        # 426206 <flatcc_builder_padding_base@@Base+0x1376>
  41baba:	mov    edx,0x37c
  41babf:	call   404090 <__assert_fail@plt>
  41bac4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41bace:	xchg   ax,ax

000000000041bad0 <flatcc_builder_offset_vector_push@@Base>:
  41bad0:	push   rbp
  41bad1:	push   r14
  41bad3:	push   rbx
  41bad4:	mov    rax,QWORD PTR [rdi+0x30]
  41bad8:	movzx  ecx,WORD PTR [rax+0xe]
  41badc:	cmp    ecx,0x5
  41badf:	jne    41bb75 <flatcc_builder_offset_vector_push@@Base+0xa5>
  41bae5:	mov    ecx,DWORD PTR [rax+0x14]
  41bae8:	cmp    ecx,0x3fffffff
  41baee:	je     41bb38 <flatcc_builder_offset_vector_push@@Base+0x68>
  41baf0:	mov    r14d,esi
  41baf3:	mov    rbx,rdi
  41baf6:	add    ecx,0x1
  41baf9:	mov    DWORD PTR [rax+0x14],ecx
  41bafc:	mov    ebp,DWORD PTR [rdi+0x20]
  41baff:	lea    eax,[rbp+0x4]
  41bb02:	mov    DWORD PTR [rdi+0x20],eax
  41bb05:	cmp    eax,DWORD PTR [rdi+0x24]
  41bb08:	jae    41bb15 <flatcc_builder_offset_vector_push@@Base+0x45>
  41bb0a:	mov    rax,QWORD PTR [rbx+0x18]
  41bb0e:	add    rax,rbp
  41bb11:	jne    41bb6d <flatcc_builder_offset_vector_push@@Base+0x9d>
  41bb13:	jmp    41bb38 <flatcc_builder_offset_vector_push@@Base+0x68>
  41bb15:	lea    eax,[rbp+0x5]
  41bb18:	lea    rsi,[rbx+0x68]
  41bb1c:	mov    rdi,QWORD PTR [rbx+0x40]
  41bb20:	mov    edx,DWORD PTR [rbx+0x28]
  41bb23:	add    rdx,rax
  41bb26:	mov    ecx,0x1
  41bb2b:	mov    r8d,0x1
  41bb31:	call   QWORD PTR [rbx+0x50]
  41bb34:	test   eax,eax
  41bb36:	je     41bb3c <flatcc_builder_offset_vector_push@@Base+0x6c>
  41bb38:	xor    eax,eax
  41bb3a:	jmp    41bb70 <flatcc_builder_offset_vector_push@@Base+0xa0>
  41bb3c:	mov    ecx,DWORD PTR [rbx+0x28]
  41bb3f:	mov    rax,rcx
  41bb42:	add    rax,QWORD PTR [rbx+0x68]
  41bb46:	mov    QWORD PTR [rbx+0x18],rax
  41bb4a:	mov    edx,DWORD PTR [rbx+0x70]
  41bb4d:	sub    edx,ecx
  41bb4f:	cmp    edx,0xfffffffc
  41bb52:	mov    ecx,0xfffffffc
  41bb57:	cmovb  ecx,edx
  41bb5a:	mov    DWORD PTR [rbx+0x24],ecx
  41bb5d:	mov    rcx,QWORD PTR [rbx+0x30]
  41bb61:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  41bb68:	add    rax,rbp
  41bb6b:	je     41bb38 <flatcc_builder_offset_vector_push@@Base+0x68>
  41bb6d:	mov    DWORD PTR [rax],r14d
  41bb70:	pop    rbx
  41bb71:	pop    r14
  41bb73:	pop    rbp
  41bb74:	ret    
  41bb75:	lea    rdi,[rip+0x99dc]        # 425558 <flatcc_builder_padding_base@@Base+0x6c8>
  41bb7c:	lea    rsi,[rip+0x959f]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41bb83:	lea    rcx,[rip+0x9a01]        # 42558b <flatcc_builder_padding_base@@Base+0x6fb>
  41bb8a:	mov    edx,0x3a6
  41bb8f:	call   404090 <__assert_fail@plt>
  41bb94:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41bb9e:	xchg   ax,ax

000000000041bba0 <flatcc_builder_append_offset_vector@@Base>:
  41bba0:	push   r15
  41bba2:	push   r14
  41bba4:	push   r13
  41bba6:	push   r12
  41bba8:	push   rbx
  41bba9:	mov    rax,QWORD PTR [rdi+0x30]
  41bbad:	movzx  ecx,WORD PTR [rax+0xe]
  41bbb1:	cmp    ecx,0x5
  41bbb4:	jne    41bc91 <flatcc_builder_append_offset_vector@@Base+0xf1>
  41bbba:	mov    r15,rdx
  41bbbd:	mov    ecx,DWORD PTR [rax+0x14]
  41bbc0:	add    ecx,r15d
  41bbc3:	jb     41bc72 <flatcc_builder_append_offset_vector@@Base+0xd2>
  41bbc9:	cmp    ecx,0x40000000
  41bbcf:	jae    41bc72 <flatcc_builder_append_offset_vector@@Base+0xd2>
  41bbd5:	mov    r14,rsi
  41bbd8:	mov    rbx,rdi
  41bbdb:	mov    DWORD PTR [rax+0x14],ecx
  41bbde:	mov    r13d,DWORD PTR [rdi+0x20]
  41bbe2:	lea    eax,[r13+r15*4+0x0]
  41bbe7:	mov    DWORD PTR [rdi+0x20],eax
  41bbea:	cmp    eax,DWORD PTR [rdi+0x24]
  41bbed:	jae    41bbfa <flatcc_builder_append_offset_vector@@Base+0x5a>
  41bbef:	mov    r12,QWORD PTR [rbx+0x18]
  41bbf3:	add    r12,r13
  41bbf6:	jne    41bc53 <flatcc_builder_append_offset_vector@@Base+0xb3>
  41bbf8:	jmp    41bc1d <flatcc_builder_append_offset_vector@@Base+0x7d>
  41bbfa:	add    eax,0x1
  41bbfd:	lea    rsi,[rbx+0x68]
  41bc01:	mov    rdi,QWORD PTR [rbx+0x40]
  41bc05:	mov    edx,DWORD PTR [rbx+0x28]
  41bc08:	add    rdx,rax
  41bc0b:	mov    ecx,0x1
  41bc10:	mov    r8d,0x1
  41bc16:	call   QWORD PTR [rbx+0x50]
  41bc19:	test   eax,eax
  41bc1b:	je     41bc22 <flatcc_builder_append_offset_vector@@Base+0x82>
  41bc1d:	xor    r12d,r12d
  41bc20:	jmp    41bc65 <flatcc_builder_append_offset_vector@@Base+0xc5>
  41bc22:	mov    eax,DWORD PTR [rbx+0x28]
  41bc25:	mov    r12,rax
  41bc28:	add    r12,QWORD PTR [rbx+0x68]
  41bc2c:	mov    QWORD PTR [rbx+0x18],r12
  41bc30:	mov    ecx,DWORD PTR [rbx+0x70]
  41bc33:	sub    ecx,eax
  41bc35:	cmp    ecx,0xfffffffc
  41bc38:	mov    eax,0xfffffffc
  41bc3d:	cmovb  eax,ecx
  41bc40:	mov    DWORD PTR [rbx+0x24],eax
  41bc43:	mov    rax,QWORD PTR [rbx+0x30]
  41bc47:	mov    DWORD PTR [rax+0x4],0xfffffffc
  41bc4e:	add    r12,r13
  41bc51:	je     41bc1d <flatcc_builder_append_offset_vector@@Base+0x7d>
  41bc53:	shl    r15d,0x2
  41bc57:	mov    edx,r15d
  41bc5a:	mov    rdi,r12
  41bc5d:	mov    rsi,r14
  41bc60:	call   404100 <memcpy@plt>
  41bc65:	mov    rax,r12
  41bc68:	pop    rbx
  41bc69:	pop    r12
  41bc6b:	pop    r13
  41bc6d:	pop    r14
  41bc6f:	pop    r15
  41bc71:	ret    
  41bc72:	lea    rdi,[rip+0xa572]        # 4261eb <flatcc_builder_padding_base@@Base+0x135b>
  41bc79:	lea    rsi,[rip+0x94a2]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41bc80:	lea    rcx,[rip+0xa57f]        # 426206 <flatcc_builder_padding_base@@Base+0x1376>
  41bc87:	mov    edx,0x37c
  41bc8c:	call   404090 <__assert_fail@plt>
  41bc91:	lea    rdi,[rip+0x98c0]        # 425558 <flatcc_builder_padding_base@@Base+0x6c8>
  41bc98:	lea    rsi,[rip+0x9483]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41bc9f:	lea    rcx,[rip+0x9947]        # 4255ed <flatcc_builder_padding_base@@Base+0x75d>
  41bca6:	mov    edx,0x3b4
  41bcab:	call   404090 <__assert_fail@plt>

000000000041bcb0 <flatcc_builder_extend_string@@Base>:
  41bcb0:	push   r14
  41bcb2:	push   rbx
  41bcb3:	push   rax
  41bcb4:	mov    rax,QWORD PTR [rdi+0x30]
  41bcb8:	movzx  ecx,WORD PTR [rax+0xe]
  41bcbc:	cmp    ecx,0x6
  41bcbf:	jne    41bd4c <flatcc_builder_extend_string@@Base+0x9c>
  41bcc5:	mov    ecx,DWORD PTR [rax+0x14]
  41bcc8:	add    ecx,esi
  41bcca:	jb     41bd6b <flatcc_builder_extend_string@@Base+0xbb>
  41bcd0:	mov    rbx,rdi
  41bcd3:	mov    DWORD PTR [rax+0x14],ecx
  41bcd6:	mov    r14d,DWORD PTR [rdi+0x20]
  41bcda:	add    esi,r14d
  41bcdd:	mov    DWORD PTR [rdi+0x20],esi
  41bce0:	cmp    esi,DWORD PTR [rdi+0x24]
  41bce3:	jae    41bceb <flatcc_builder_extend_string@@Base+0x3b>
  41bce5:	mov    rax,QWORD PTR [rbx+0x18]
  41bce9:	jmp    41bd41 <flatcc_builder_extend_string@@Base+0x91>
  41bceb:	add    esi,0x1
  41bcee:	lea    rax,[rbx+0x68]
  41bcf2:	mov    rdi,QWORD PTR [rbx+0x40]
  41bcf6:	mov    edx,DWORD PTR [rbx+0x28]
  41bcf9:	add    rdx,rsi
  41bcfc:	mov    ecx,0x1
  41bd01:	mov    r8d,0x1
  41bd07:	mov    rsi,rax
  41bd0a:	call   QWORD PTR [rbx+0x50]
  41bd0d:	test   eax,eax
  41bd0f:	je     41bd15 <flatcc_builder_extend_string@@Base+0x65>
  41bd11:	xor    eax,eax
  41bd13:	jmp    41bd44 <flatcc_builder_extend_string@@Base+0x94>
  41bd15:	mov    ecx,DWORD PTR [rbx+0x28]
  41bd18:	mov    rax,rcx
  41bd1b:	add    rax,QWORD PTR [rbx+0x68]
  41bd1f:	mov    QWORD PTR [rbx+0x18],rax
  41bd23:	mov    edx,DWORD PTR [rbx+0x70]
  41bd26:	sub    edx,ecx
  41bd28:	cmp    edx,0xfffffffc
  41bd2b:	mov    ecx,0xfffffffc
  41bd30:	cmovb  ecx,edx
  41bd33:	mov    DWORD PTR [rbx+0x24],ecx
  41bd36:	mov    rcx,QWORD PTR [rbx+0x30]
  41bd3a:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  41bd41:	add    rax,r14
  41bd44:	add    rsp,0x8
  41bd48:	pop    rbx
  41bd49:	pop    r14
  41bd4b:	ret    
  41bd4c:	lea    rdi,[rip+0x990e]        # 425661 <flatcc_builder_padding_base@@Base+0x7d1>
  41bd53:	lea    rsi,[rip+0x93c8]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41bd5a:	lea    rcx,[rip+0x992c]        # 42568d <flatcc_builder_padding_base@@Base+0x7fd>
  41bd61:	mov    edx,0x3bd
  41bd66:	call   404090 <__assert_fail@plt>
  41bd6b:	lea    rdi,[rip+0xa479]        # 4261eb <flatcc_builder_padding_base@@Base+0x135b>
  41bd72:	lea    rsi,[rip+0x93a9]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41bd79:	lea    rcx,[rip+0xa486]        # 426206 <flatcc_builder_padding_base@@Base+0x1376>
  41bd80:	mov    edx,0x37c
  41bd85:	call   404090 <__assert_fail@plt>
  41bd8a:	nop    WORD PTR [rax+rax*1+0x0]

000000000041bd90 <flatcc_builder_append_string@@Base>:
  41bd90:	push   r15
  41bd92:	push   r14
  41bd94:	push   r13
  41bd96:	push   r12
  41bd98:	push   rbx
  41bd99:	mov    rax,QWORD PTR [rdi+0x30]
  41bd9d:	movzx  ecx,WORD PTR [rax+0xe]
  41bda1:	cmp    ecx,0x6
  41bda4:	jne    41be51 <flatcc_builder_append_string@@Base+0xc1>
  41bdaa:	mov    r15,rdx
  41bdad:	mov    ecx,DWORD PTR [rax+0x14]
  41bdb0:	add    ecx,r15d
  41bdb3:	jb     41be70 <flatcc_builder_append_string@@Base+0xe0>
  41bdb9:	mov    r14,rsi
  41bdbc:	mov    rbx,rdi
  41bdbf:	mov    DWORD PTR [rax+0x14],ecx
  41bdc2:	mov    r13d,DWORD PTR [rdi+0x20]
  41bdc6:	lea    eax,[r15+r13*1]
  41bdca:	mov    DWORD PTR [rdi+0x20],eax
  41bdcd:	cmp    eax,DWORD PTR [rdi+0x24]
  41bdd0:	jae    41bddd <flatcc_builder_append_string@@Base+0x4d>
  41bdd2:	mov    r12,QWORD PTR [rbx+0x18]
  41bdd6:	add    r12,r13
  41bdd9:	jne    41be36 <flatcc_builder_append_string@@Base+0xa6>
  41bddb:	jmp    41be00 <flatcc_builder_append_string@@Base+0x70>
  41bddd:	add    eax,0x1
  41bde0:	lea    rsi,[rbx+0x68]
  41bde4:	mov    rdi,QWORD PTR [rbx+0x40]
  41bde8:	mov    edx,DWORD PTR [rbx+0x28]
  41bdeb:	add    rdx,rax
  41bdee:	mov    ecx,0x1
  41bdf3:	mov    r8d,0x1
  41bdf9:	call   QWORD PTR [rbx+0x50]
  41bdfc:	test   eax,eax
  41bdfe:	je     41be05 <flatcc_builder_append_string@@Base+0x75>
  41be00:	xor    r12d,r12d
  41be03:	jmp    41be44 <flatcc_builder_append_string@@Base+0xb4>
  41be05:	mov    eax,DWORD PTR [rbx+0x28]
  41be08:	mov    r12,rax
  41be0b:	add    r12,QWORD PTR [rbx+0x68]
  41be0f:	mov    QWORD PTR [rbx+0x18],r12
  41be13:	mov    ecx,DWORD PTR [rbx+0x70]
  41be16:	sub    ecx,eax
  41be18:	cmp    ecx,0xfffffffc
  41be1b:	mov    eax,0xfffffffc
  41be20:	cmovb  eax,ecx
  41be23:	mov    DWORD PTR [rbx+0x24],eax
  41be26:	mov    rax,QWORD PTR [rbx+0x30]
  41be2a:	mov    DWORD PTR [rax+0x4],0xfffffffc
  41be31:	add    r12,r13
  41be34:	je     41be00 <flatcc_builder_append_string@@Base+0x70>
  41be36:	mov    edx,r15d
  41be39:	mov    rdi,r12
  41be3c:	mov    rsi,r14
  41be3f:	call   404100 <memcpy@plt>
  41be44:	mov    rax,r12
  41be47:	pop    rbx
  41be48:	pop    r12
  41be4a:	pop    r13
  41be4c:	pop    r14
  41be4e:	pop    r15
  41be50:	ret    
  41be51:	lea    rdi,[rip+0x9809]        # 425661 <flatcc_builder_padding_base@@Base+0x7d1>
  41be58:	lea    rsi,[rip+0x92c3]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41be5f:	lea    rcx,[rip+0x9866]        # 4256cc <flatcc_builder_padding_base@@Base+0x83c>
  41be66:	mov    edx,0x3c6
  41be6b:	call   404090 <__assert_fail@plt>
  41be70:	lea    rdi,[rip+0xa374]        # 4261eb <flatcc_builder_padding_base@@Base+0x135b>
  41be77:	lea    rsi,[rip+0x92a4]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41be7e:	lea    rcx,[rip+0xa381]        # 426206 <flatcc_builder_padding_base@@Base+0x1376>
  41be85:	mov    edx,0x37c
  41be8a:	call   404090 <__assert_fail@plt>
  41be8f:	nop

000000000041be90 <flatcc_builder_append_string_str@@Base>:
  41be90:	push   r14
  41be92:	push   rbx
  41be93:	push   rax
  41be94:	mov    rbx,rsi
  41be97:	mov    r14,rdi
  41be9a:	mov    rdi,rsi
  41be9d:	call   404070 <strlen@plt>
  41bea2:	mov    rdi,r14
  41bea5:	mov    rsi,rbx
  41bea8:	mov    rdx,rax
  41beab:	add    rsp,0x8
  41beaf:	pop    rbx
  41beb0:	pop    r14
  41beb2:	jmp    41bd90 <flatcc_builder_append_string@@Base>
  41beb7:	nop    WORD PTR [rax+rax*1+0x0]

000000000041bec0 <flatcc_builder_append_string_strn@@Base>:
  41bec0:	push   r15
  41bec2:	push   r14
  41bec4:	push   rbx
  41bec5:	mov    rbx,rdx
  41bec8:	mov    r14,rsi
  41becb:	mov    r15,rdi
  41bece:	xor    esi,esi
  41bed0:	mov    rdi,r14
  41bed3:	call   4040c0 <memchr@plt>
  41bed8:	mov    rcx,rax
  41bedb:	sub    rcx,r14
  41bede:	test   rax,rax
  41bee1:	cmovne rbx,rcx
  41bee5:	mov    rdi,r15
  41bee8:	mov    rsi,r14
  41beeb:	mov    rdx,rbx
  41beee:	pop    rbx
  41beef:	pop    r14
  41bef1:	pop    r15
  41bef3:	jmp    41bd90 <flatcc_builder_append_string@@Base>
  41bef8:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041bf00 <flatcc_builder_truncate_vector@@Base>:
  41bf00:	push   rax
  41bf01:	mov    rcx,QWORD PTR [rdi+0x30]
  41bf05:	movzx  edx,WORD PTR [rcx+0xe]
  41bf09:	cmp    edx,0x4
  41bf0c:	jne    41bf43 <flatcc_builder_truncate_vector@@Base+0x43>
  41bf0e:	mov    rax,rsi
  41bf11:	mov    edx,DWORD PTR [rcx+0x14]
  41bf14:	cmp    rdx,rsi
  41bf17:	jb     41bf62 <flatcc_builder_truncate_vector@@Base+0x62>
  41bf19:	sub    edx,eax
  41bf1b:	mov    DWORD PTR [rcx+0x14],edx
  41bf1e:	mov    rcx,QWORD PTR [rdi+0x30]
  41bf22:	imul   eax,DWORD PTR [rcx+0x10]
  41bf26:	mov    ecx,DWORD PTR [rdi+0x20]
  41bf29:	sub    ecx,eax
  41bf2b:	mov    DWORD PTR [rdi+0x20],ecx
  41bf2e:	add    rcx,QWORD PTR [rdi+0x18]
  41bf32:	xor    esi,esi
  41bf34:	mov    rdi,rcx
  41bf37:	mov    rdx,rax
  41bf3a:	call   4040a0 <memset@plt>
  41bf3f:	xor    eax,eax
  41bf41:	pop    rcx
  41bf42:	ret    
  41bf43:	lea    rdi,[rip+0x9515]        # 42545f <flatcc_builder_padding_base@@Base+0x5cf>
  41bf4a:	lea    rsi,[rip+0x91d1]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41bf51:	lea    rcx,[rip+0x97c1]        # 425719 <flatcc_builder_padding_base@@Base+0x889>
  41bf58:	mov    edx,0x3d9
  41bf5d:	call   404090 <__assert_fail@plt>
  41bf62:	lea    rdi,[rip+0x97ef]        # 425758 <flatcc_builder_padding_base@@Base+0x8c8>
  41bf69:	lea    rsi,[rip+0x91b2]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41bf70:	lea    rcx,[rip+0x97a2]        # 425719 <flatcc_builder_padding_base@@Base+0x889>
  41bf77:	mov    edx,0x3da
  41bf7c:	call   404090 <__assert_fail@plt>
  41bf81:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41bf8b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041bf90 <flatcc_builder_truncate_offset_vector@@Base>:
  41bf90:	push   rax
  41bf91:	mov    rcx,QWORD PTR [rdi+0x30]
  41bf95:	movzx  edx,WORD PTR [rcx+0xe]
  41bf99:	cmp    edx,0x5
  41bf9c:	jne    41bfd0 <flatcc_builder_truncate_offset_vector@@Base+0x40>
  41bf9e:	mov    rax,rsi
  41bfa1:	mov    edx,DWORD PTR [rcx+0x14]
  41bfa4:	sub    edx,eax
  41bfa6:	jb     41bfef <flatcc_builder_truncate_offset_vector@@Base+0x5f>
  41bfa8:	mov    DWORD PTR [rcx+0x14],edx
  41bfab:	mov    rcx,QWORD PTR [rdi+0x30]
  41bfaf:	imul   eax,DWORD PTR [rcx+0x10]
  41bfb3:	mov    ecx,DWORD PTR [rdi+0x20]
  41bfb6:	sub    ecx,eax
  41bfb8:	mov    DWORD PTR [rdi+0x20],ecx
  41bfbb:	add    rcx,QWORD PTR [rdi+0x18]
  41bfbf:	xor    esi,esi
  41bfc1:	mov    rdi,rcx
  41bfc4:	mov    rdx,rax
  41bfc7:	call   4040a0 <memset@plt>
  41bfcc:	xor    eax,eax
  41bfce:	pop    rcx
  41bfcf:	ret    
  41bfd0:	lea    rdi,[rip+0x9581]        # 425558 <flatcc_builder_padding_base@@Base+0x6c8>
  41bfd7:	lea    rsi,[rip+0x9144]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41bfde:	lea    rcx,[rip+0x9797]        # 42577c <flatcc_builder_padding_base@@Base+0x8ec>
  41bfe5:	mov    edx,0x3e2
  41bfea:	call   404090 <__assert_fail@plt>
  41bfef:	lea    rdi,[rip+0x97cc]        # 4257c2 <flatcc_builder_padding_base@@Base+0x932>
  41bff6:	lea    rsi,[rip+0x9125]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41bffd:	lea    rcx,[rip+0x9778]        # 42577c <flatcc_builder_padding_base@@Base+0x8ec>
  41c004:	mov    edx,0x3e3
  41c009:	call   404090 <__assert_fail@plt>
  41c00e:	xchg   ax,ax

000000000041c010 <flatcc_builder_truncate_string@@Base>:
  41c010:	push   rax
  41c011:	mov    rax,QWORD PTR [rdi+0x30]
  41c015:	movzx  ecx,WORD PTR [rax+0xe]
  41c019:	cmp    ecx,0x6
  41c01c:	jne    41c047 <flatcc_builder_truncate_string@@Base+0x37>
  41c01e:	mov    ecx,DWORD PTR [rax+0x14]
  41c021:	cmp    rcx,rsi
  41c024:	jb     41c066 <flatcc_builder_truncate_string@@Base+0x56>
  41c026:	sub    ecx,esi
  41c028:	mov    DWORD PTR [rax+0x14],ecx
  41c02b:	mov    eax,DWORD PTR [rdi+0x20]
  41c02e:	sub    eax,esi
  41c030:	mov    DWORD PTR [rdi+0x20],eax
  41c033:	add    rax,QWORD PTR [rdi+0x18]
  41c037:	mov    edx,esi
  41c039:	xor    esi,esi
  41c03b:	mov    rdi,rax
  41c03e:	call   4040a0 <memset@plt>
  41c043:	xor    eax,eax
  41c045:	pop    rcx
  41c046:	ret    
  41c047:	lea    rdi,[rip+0x9613]        # 425661 <flatcc_builder_padding_base@@Base+0x7d1>
  41c04e:	lea    rsi,[rip+0x90cd]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41c055:	lea    rcx,[rip+0x97a1]        # 4257fd <flatcc_builder_padding_base@@Base+0x96d>
  41c05c:	mov    edx,0x3eb
  41c061:	call   404090 <__assert_fail@plt>
  41c066:	lea    rdi,[rip+0x97cf]        # 42583c <flatcc_builder_padding_base@@Base+0x9ac>
  41c06d:	lea    rsi,[rip+0x90ae]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41c074:	lea    rcx,[rip+0x9782]        # 4257fd <flatcc_builder_padding_base@@Base+0x96d>
  41c07b:	mov    edx,0x3ec
  41c080:	call   404090 <__assert_fail@plt>
  41c085:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c08f:	nop

000000000041c090 <flatcc_builder_start_vector@@Base>:
  41c090:	push   r15
  41c092:	push   r14
  41c094:	push   rbx
  41c095:	mov    r14,rcx
  41c098:	mov    r15,rsi
  41c09b:	mov    rbx,rdi
  41c09e:	cmp    edx,0x4
  41c0a1:	mov    esi,0x4
  41c0a6:	cmova  esi,edx
  41c0a9:	call   41b310 <flatcc_builder_start_buffer@@Base+0xe0>
  41c0ae:	mov    ecx,eax
  41c0b0:	mov    eax,0xffffffff
  41c0b5:	test   ecx,ecx
  41c0b7:	jne    41c105 <flatcc_builder_start_vector@@Base+0x75>
  41c0b9:	mov    rax,QWORD PTR [rbx+0x30]
  41c0bd:	mov    DWORD PTR [rax+0x10],r15d
  41c0c1:	mov    rax,QWORD PTR [rbx+0x30]
  41c0c5:	mov    DWORD PTR [rax+0x14],0x0
  41c0cc:	mov    rax,QWORD PTR [rbx+0x30]
  41c0d0:	mov    DWORD PTR [rax+0x18],r14d
  41c0d4:	mov    rax,QWORD PTR [rbx+0x30]
  41c0d8:	mov    WORD PTR [rax+0xe],0x4
  41c0de:	mov    ecx,DWORD PTR [rbx+0x28]
  41c0e1:	mov    edx,DWORD PTR [rbx+0x70]
  41c0e4:	sub    edx,ecx
  41c0e6:	add    rcx,QWORD PTR [rbx+0x68]
  41c0ea:	mov    QWORD PTR [rbx+0x18],rcx
  41c0ee:	cmp    edx,0xfffffffc
  41c0f1:	mov    ecx,0xfffffffc
  41c0f6:	cmovb  ecx,edx
  41c0f9:	mov    DWORD PTR [rbx+0x24],ecx
  41c0fc:	mov    DWORD PTR [rax+0x4],0xfffffffc
  41c103:	xor    eax,eax
  41c105:	pop    rbx
  41c106:	pop    r14
  41c108:	pop    r15
  41c10a:	ret    
  41c10b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041c110 <flatcc_builder_start_offset_vector@@Base>:
  41c110:	push   rbx
  41c111:	mov    rbx,rdi
  41c114:	mov    esi,0x4
  41c119:	call   41b310 <flatcc_builder_start_buffer@@Base+0xe0>
  41c11e:	mov    ecx,eax
  41c120:	mov    eax,0xffffffff
  41c125:	test   ecx,ecx
  41c127:	je     41c12b <flatcc_builder_start_offset_vector@@Base+0x1b>
  41c129:	pop    rbx
  41c12a:	ret    
  41c12b:	mov    rax,QWORD PTR [rbx+0x30]
  41c12f:	mov    DWORD PTR [rax+0x10],0x4
  41c136:	mov    rax,QWORD PTR [rbx+0x30]
  41c13a:	mov    DWORD PTR [rax+0x14],0x0
  41c141:	mov    rax,QWORD PTR [rbx+0x30]
  41c145:	mov    WORD PTR [rax+0xe],0x5
  41c14b:	mov    ecx,DWORD PTR [rbx+0x28]
  41c14e:	mov    edx,DWORD PTR [rbx+0x70]
  41c151:	sub    edx,ecx
  41c153:	add    rcx,QWORD PTR [rbx+0x68]
  41c157:	mov    QWORD PTR [rbx+0x18],rcx
  41c15b:	cmp    edx,0xfffffffc
  41c15e:	mov    ecx,0xfffffffc
  41c163:	cmovb  ecx,edx
  41c166:	mov    DWORD PTR [rbx+0x24],ecx
  41c169:	mov    DWORD PTR [rax+0x4],0xfffffffc
  41c170:	xor    eax,eax
  41c172:	pop    rbx
  41c173:	ret    
  41c174:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c17e:	xchg   ax,ax

000000000041c180 <flatcc_builder_create_offset_vector@@Base>:
  41c180:	push   r15
  41c182:	push   r14
  41c184:	push   r12
  41c186:	push   rbx
  41c187:	push   rax
  41c188:	mov    r14,rdx
  41c18b:	mov    r15,rsi
  41c18e:	mov    rbx,rdi
  41c191:	mov    esi,0x4
  41c196:	call   41b310 <flatcc_builder_start_buffer@@Base+0xe0>
  41c19b:	test   eax,eax
  41c19d:	je     41c1ad <flatcc_builder_create_offset_vector@@Base+0x2d>
  41c19f:	xor    eax,eax
  41c1a1:	add    rsp,0x8
  41c1a5:	pop    rbx
  41c1a6:	pop    r12
  41c1a8:	pop    r14
  41c1aa:	pop    r15
  41c1ac:	ret    
  41c1ad:	mov    rax,QWORD PTR [rbx+0x30]
  41c1b1:	mov    DWORD PTR [rax+0x10],0x4
  41c1b8:	mov    rax,QWORD PTR [rbx+0x30]
  41c1bc:	mov    DWORD PTR [rax+0x14],0x0
  41c1c3:	mov    rax,QWORD PTR [rbx+0x30]
  41c1c7:	mov    WORD PTR [rax+0xe],0x5
  41c1cd:	mov    ecx,DWORD PTR [rbx+0x28]
  41c1d0:	mov    edx,DWORD PTR [rbx+0x70]
  41c1d3:	sub    edx,ecx
  41c1d5:	add    rcx,QWORD PTR [rbx+0x68]
  41c1d9:	mov    QWORD PTR [rbx+0x18],rcx
  41c1dd:	cmp    edx,0xfffffffc
  41c1e0:	mov    ecx,0xfffffffc
  41c1e5:	cmovb  ecx,edx
  41c1e8:	mov    DWORD PTR [rbx+0x24],ecx
  41c1eb:	mov    DWORD PTR [rax+0x4],0xfffffffc
  41c1f2:	mov    ecx,DWORD PTR [rax+0x14]
  41c1f5:	add    ecx,r14d
  41c1f8:	jb     41c2a9 <flatcc_builder_create_offset_vector@@Base+0x129>
  41c1fe:	cmp    ecx,0x40000000
  41c204:	jae    41c2a9 <flatcc_builder_create_offset_vector@@Base+0x129>
  41c20a:	mov    DWORD PTR [rax+0x14],ecx
  41c20d:	mov    r12d,DWORD PTR [rbx+0x20]
  41c211:	lea    eax,[r12+r14*4]
  41c215:	mov    DWORD PTR [rbx+0x20],eax
  41c218:	cmp    eax,DWORD PTR [rbx+0x24]
  41c21b:	jae    41c22b <flatcc_builder_create_offset_vector@@Base+0xab>
  41c21d:	mov    rdi,QWORD PTR [rbx+0x18]
  41c221:	add    rdi,r12
  41c224:	jne    41c287 <flatcc_builder_create_offset_vector@@Base+0x107>
  41c226:	jmp    41c19f <flatcc_builder_create_offset_vector@@Base+0x1f>
  41c22b:	add    eax,0x1
  41c22e:	lea    rsi,[rbx+0x68]
  41c232:	mov    rdi,QWORD PTR [rbx+0x40]
  41c236:	mov    edx,DWORD PTR [rbx+0x28]
  41c239:	add    rdx,rax
  41c23c:	mov    ecx,0x1
  41c241:	mov    r8d,0x1
  41c247:	call   QWORD PTR [rbx+0x50]
  41c24a:	test   eax,eax
  41c24c:	jne    41c19f <flatcc_builder_create_offset_vector@@Base+0x1f>
  41c252:	mov    eax,DWORD PTR [rbx+0x28]
  41c255:	mov    rdi,rax
  41c258:	add    rdi,QWORD PTR [rbx+0x68]
  41c25c:	mov    QWORD PTR [rbx+0x18],rdi
  41c260:	mov    ecx,DWORD PTR [rbx+0x70]
  41c263:	sub    ecx,eax
  41c265:	cmp    ecx,0xfffffffc
  41c268:	mov    eax,0xfffffffc
  41c26d:	cmovb  eax,ecx
  41c270:	mov    DWORD PTR [rbx+0x24],eax
  41c273:	mov    rax,QWORD PTR [rbx+0x30]
  41c277:	mov    DWORD PTR [rax+0x4],0xfffffffc
  41c27e:	add    rdi,r12
  41c281:	je     41c19f <flatcc_builder_create_offset_vector@@Base+0x1f>
  41c287:	shl    r14,0x2
  41c28b:	mov    rsi,r15
  41c28e:	mov    rdx,r14
  41c291:	call   404100 <memcpy@plt>
  41c296:	mov    rdi,rbx
  41c299:	add    rsp,0x8
  41c29d:	pop    rbx
  41c29e:	pop    r12
  41c2a0:	pop    r14
  41c2a2:	pop    r15
  41c2a4:	jmp    41c2d0 <flatcc_builder_end_offset_vector@@Base>
  41c2a9:	lea    rdi,[rip+0x9f3b]        # 4261eb <flatcc_builder_padding_base@@Base+0x135b>
  41c2b0:	lea    rsi,[rip+0x8e6b]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41c2b7:	lea    rcx,[rip+0x9f48]        # 426206 <flatcc_builder_padding_base@@Base+0x1376>
  41c2be:	mov    edx,0x37c
  41c2c3:	call   404090 <__assert_fail@plt>
  41c2c8:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041c2d0 <flatcc_builder_end_offset_vector@@Base>:
  41c2d0:	push   rbp
  41c2d1:	push   rbx
  41c2d2:	push   rax
  41c2d3:	mov    rax,QWORD PTR [rdi+0x30]
  41c2d7:	movzx  ecx,WORD PTR [rax+0xe]
  41c2db:	cmp    ecx,0x5
  41c2de:	jne    41c36d <flatcc_builder_end_offset_vector@@Base+0x9d>
  41c2e4:	mov    rbx,rdi
  41c2e7:	mov    rsi,QWORD PTR [rdi+0x18]
  41c2eb:	mov    edx,DWORD PTR [rax+0x14]
  41c2ee:	xor    ecx,ecx
  41c2f0:	call   41d320 <flatcc_builder_create_offset_vector_direct@@Base+0x10>
  41c2f5:	mov    ebp,eax
  41c2f7:	test   eax,eax
  41c2f9:	je     41c364 <flatcc_builder_end_offset_vector@@Base+0x94>
  41c2fb:	mov    rdi,QWORD PTR [rbx+0x18]
  41c2ff:	mov    edx,DWORD PTR [rbx+0x20]
  41c302:	xor    esi,esi
  41c304:	call   4040a0 <memset@plt>
  41c309:	mov    rax,QWORD PTR [rbx+0x30]
  41c30d:	mov    ecx,DWORD PTR [rax+0x8]
  41c310:	mov    DWORD PTR [rbx+0x20],ecx
  41c313:	mov    ecx,DWORD PTR [rax]
  41c315:	mov    DWORD PTR [rbx+0x28],ecx
  41c318:	mov    edx,DWORD PTR [rax+0x4]
  41c31b:	mov    rsi,rcx
  41c31e:	add    rsi,QWORD PTR [rbx+0x68]
  41c322:	mov    QWORD PTR [rbx+0x18],rsi
  41c326:	mov    esi,DWORD PTR [rbx+0x70]
  41c329:	sub    esi,ecx
  41c32b:	cmp    esi,edx
  41c32d:	cmova  esi,edx
  41c330:	mov    DWORD PTR [rbx+0x24],esi
  41c333:	movzx  ecx,WORD PTR [rbx+0xea]
  41c33a:	cmp    WORD PTR [rbx+0xe8],cx
  41c341:	jae    41c34a <flatcc_builder_end_offset_vector@@Base+0x7a>
  41c343:	mov    WORD PTR [rbx+0xe8],cx
  41c34a:	movzx  ecx,WORD PTR [rax+0xc]
  41c34e:	mov    WORD PTR [rbx+0xea],cx
  41c355:	add    rax,0xffffffffffffffdc
  41c359:	mov    QWORD PTR [rbx+0x30],rax
  41c35d:	add    DWORD PTR [rbx+0x104],0xffffffff
  41c364:	mov    eax,ebp
  41c366:	add    rsp,0x8
  41c36a:	pop    rbx
  41c36b:	pop    rbp
  41c36c:	ret    
  41c36d:	lea    rdi,[rip+0x91e4]        # 425558 <flatcc_builder_padding_base@@Base+0x6c8>
  41c374:	lea    rsi,[rip+0x8da7]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41c37b:	lea    rcx,[rip+0x9805]        # 425b87 <flatcc_builder_padding_base@@Base+0xcf7>
  41c382:	mov    edx,0x5c8
  41c387:	call   404090 <__assert_fail@plt>
  41c38c:	nop    DWORD PTR [rax+0x0]

000000000041c390 <flatcc_builder_start_string@@Base>:
  41c390:	push   rbx
  41c391:	mov    rbx,rdi
  41c394:	mov    esi,0x1
  41c399:	call   41b310 <flatcc_builder_start_buffer@@Base+0xe0>
  41c39e:	mov    ecx,eax
  41c3a0:	mov    eax,0xffffffff
  41c3a5:	test   ecx,ecx
  41c3a7:	je     41c3ab <flatcc_builder_start_string@@Base+0x1b>
  41c3a9:	pop    rbx
  41c3aa:	ret    
  41c3ab:	mov    rax,QWORD PTR [rbx+0x30]
  41c3af:	mov    DWORD PTR [rax+0x10],0x1
  41c3b6:	mov    rax,QWORD PTR [rbx+0x30]
  41c3ba:	mov    DWORD PTR [rax+0x14],0x0
  41c3c1:	mov    rax,QWORD PTR [rbx+0x30]
  41c3c5:	mov    WORD PTR [rax+0xe],0x6
  41c3cb:	mov    ecx,DWORD PTR [rbx+0x28]
  41c3ce:	mov    edx,DWORD PTR [rbx+0x70]
  41c3d1:	sub    edx,ecx
  41c3d3:	add    rcx,QWORD PTR [rbx+0x68]
  41c3d7:	mov    QWORD PTR [rbx+0x18],rcx
  41c3db:	cmp    edx,0xfffffffc
  41c3de:	mov    ecx,0xfffffffc
  41c3e3:	cmovb  ecx,edx
  41c3e6:	mov    DWORD PTR [rbx+0x24],ecx
  41c3e9:	mov    DWORD PTR [rax+0x4],0xfffffffc
  41c3f0:	xor    eax,eax
  41c3f2:	pop    rbx
  41c3f3:	ret    
  41c3f4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c3fe:	xchg   ax,ax

000000000041c400 <flatcc_builder_reserve_table@@Base>:
  41c400:	push   r15
  41c402:	push   r14
  41c404:	push   rbx
  41c405:	test   esi,esi
  41c407:	js     41c4b4 <flatcc_builder_reserve_table@@Base+0xb4>
  41c40d:	mov    r14d,esi
  41c410:	mov    r15,rdi
  41c413:	mov    rax,QWORD PTR [rdi+0x30]
  41c417:	movzx  ebx,WORD PTR [rax+0x1c]
  41c41b:	add    ebx,ebx
  41c41d:	add    ebx,DWORD PTR [rax+0x10]
  41c420:	lea    edx,[r14+r14*1]
  41c424:	add    edx,0x4
  41c427:	add    rdx,rbx
  41c42a:	cmp    rdx,QWORD PTR [rdi+0x60]
  41c42e:	jbe    41c44c <flatcc_builder_reserve_table@@Base+0x4c>
  41c430:	lea    rsi,[r15+0x58]
  41c434:	mov    rdi,QWORD PTR [r15+0x40]
  41c438:	mov    ecx,0x1
  41c43d:	xor    r8d,r8d
  41c440:	call   QWORD PTR [r15+0x50]
  41c444:	test   eax,eax
  41c446:	jne    41c4d3 <flatcc_builder_reserve_table@@Base+0xd3>
  41c44c:	add    rbx,QWORD PTR [r15+0x58]
  41c450:	mov    QWORD PTR [r15+0x8],rbx
  41c454:	je     41c4a9 <flatcc_builder_reserve_table@@Base+0xa9>
  41c456:	add    r14d,r14d
  41c459:	add    rbx,0x4
  41c45d:	mov    QWORD PTR [r15+0x8],rbx
  41c461:	mov    rax,QWORD PTR [r15+0x30]
  41c465:	mov    ebx,DWORD PTR [rax+0x14]
  41c468:	or     r14d,0x1
  41c46c:	add    r14,rbx
  41c46f:	cmp    r14,QWORD PTR [r15+0x90]
  41c476:	jbe    41c496 <flatcc_builder_reserve_table@@Base+0x96>
  41c478:	lea    rsi,[r15+0x88]
  41c47f:	mov    rdi,QWORD PTR [r15+0x40]
  41c483:	xor    ecx,ecx
  41c485:	mov    r8d,0x3
  41c48b:	mov    rdx,r14
  41c48e:	call   QWORD PTR [r15+0x50]
  41c492:	test   eax,eax
  41c494:	jne    41c4d3 <flatcc_builder_reserve_table@@Base+0xd3>
  41c496:	xor    eax,eax
  41c498:	add    rbx,QWORD PTR [r15+0x88]
  41c49f:	mov    QWORD PTR [r15],rbx
  41c4a2:	sete   al
  41c4a5:	neg    eax
  41c4a7:	jmp    41c4ae <flatcc_builder_reserve_table@@Base+0xae>
  41c4a9:	mov    eax,0xffffffff
  41c4ae:	pop    rbx
  41c4af:	pop    r14
  41c4b1:	pop    r15
  41c4b3:	ret    
  41c4b4:	lea    rdi,[rip+0x93e4]        # 42589f <flatcc_builder_padding_base@@Base+0xa0f>
  41c4bb:	lea    rsi,[rip+0x8c60]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41c4c2:	lea    rcx,[rip+0x9395]        # 42585e <flatcc_builder_padding_base@@Base+0x9ce>
  41c4c9:	mov    edx,0x429
  41c4ce:	call   404090 <__assert_fail@plt>
  41c4d3:	lea    rdi,[rip+0x9e08]        # 4262e2 <flatcc_builder_padding_base@@Base+0x1452>
  41c4da:	lea    rsi,[rip+0x8c41]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41c4e1:	lea    rcx,[rip+0x9c34]        # 42611c <flatcc_builder_padding_base@@Base+0x128c>
  41c4e8:	mov    edx,0x134
  41c4ed:	call   404090 <__assert_fail@plt>
  41c4f2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c4fc:	nop    DWORD PTR [rax+0x0]

000000000041c500 <flatcc_builder_start_table@@Base>:
  41c500:	push   rbp
  41c501:	push   r15
  41c503:	push   r14
  41c505:	push   rbx
  41c506:	push   rax
  41c507:	mov    r15d,esi
  41c50a:	mov    rbx,rdi
  41c50d:	mov    esi,0x4
  41c512:	call   41b310 <flatcc_builder_start_buffer@@Base+0xe0>
  41c517:	mov    r14d,0xffffffff
  41c51d:	test   eax,eax
  41c51f:	je     41c52f <flatcc_builder_start_table@@Base+0x2f>
  41c521:	mov    eax,r14d
  41c524:	add    rsp,0x8
  41c528:	pop    rbx
  41c529:	pop    r14
  41c52b:	pop    r15
  41c52d:	pop    rbp
  41c52e:	ret    
  41c52f:	mov    eax,DWORD PTR [rbx+0x8]
  41c532:	sub    eax,DWORD PTR [rbx+0x58]
  41c535:	mov    rcx,QWORD PTR [rbx+0x30]
  41c539:	mov    DWORD PTR [rcx+0x10],eax
  41c53c:	mov    eax,DWORD PTR [rbx]
  41c53e:	sub    eax,DWORD PTR [rbx+0x88]
  41c544:	mov    rcx,QWORD PTR [rbx+0x30]
  41c548:	mov    DWORD PTR [rcx+0x14],eax
  41c54b:	mov    eax,DWORD PTR [rbx+0x14]
  41c54e:	mov    rcx,QWORD PTR [rbx+0x30]
  41c552:	mov    DWORD PTR [rcx+0x18],eax
  41c555:	movzx  eax,WORD PTR [rbx+0x10]
  41c559:	mov    rcx,QWORD PTR [rbx+0x30]
  41c55d:	mov    WORD PTR [rcx+0x1c],ax
  41c561:	mov    DWORD PTR [rbx+0x14],0x2f693b52
  41c568:	mov    WORD PTR [rbx+0x10],0x0
  41c56e:	mov    rax,QWORD PTR [rbx+0x30]
  41c572:	mov    WORD PTR [rax+0xe],0x3
  41c578:	movzx  ebp,WORD PTR [rax+0x1c]
  41c57c:	add    ebp,ebp
  41c57e:	add    ebp,DWORD PTR [rax+0x10]
  41c581:	lea    edx,[r15+r15*1]
  41c585:	add    edx,0x4
  41c588:	add    rdx,rbp
  41c58b:	cmp    rdx,QWORD PTR [rbx+0x60]
  41c58f:	jbe    41c5ac <flatcc_builder_start_table@@Base+0xac>
  41c591:	lea    rsi,[rbx+0x58]
  41c595:	mov    rdi,QWORD PTR [rbx+0x40]
  41c599:	mov    ecx,0x1
  41c59e:	xor    r8d,r8d
  41c5a1:	call   QWORD PTR [rbx+0x50]
  41c5a4:	test   eax,eax
  41c5a6:	jne    41c640 <flatcc_builder_start_table@@Base+0x140>
  41c5ac:	add    rbp,QWORD PTR [rbx+0x58]
  41c5b0:	mov    QWORD PTR [rbx+0x8],rbp
  41c5b4:	je     41c521 <flatcc_builder_start_table@@Base+0x21>
  41c5ba:	add    r15d,r15d
  41c5bd:	add    rbp,0x4
  41c5c1:	mov    QWORD PTR [rbx+0x8],rbp
  41c5c5:	mov    rax,QWORD PTR [rbx+0x30]
  41c5c9:	mov    ebp,DWORD PTR [rax+0x14]
  41c5cc:	or     r15d,0x1
  41c5d0:	add    r15,rbp
  41c5d3:	cmp    r15,QWORD PTR [rbx+0x90]
  41c5da:	jbe    41c5f9 <flatcc_builder_start_table@@Base+0xf9>
  41c5dc:	lea    rsi,[rbx+0x88]
  41c5e3:	mov    rdi,QWORD PTR [rbx+0x40]
  41c5e7:	xor    ecx,ecx
  41c5e9:	mov    r8d,0x3
  41c5ef:	mov    rdx,r15
  41c5f2:	call   QWORD PTR [rbx+0x50]
  41c5f5:	test   eax,eax
  41c5f7:	jne    41c640 <flatcc_builder_start_table@@Base+0x140>
  41c5f9:	add    rbp,QWORD PTR [rbx+0x88]
  41c600:	mov    QWORD PTR [rbx],rbp
  41c603:	je     41c521 <flatcc_builder_start_table@@Base+0x21>
  41c609:	mov    eax,DWORD PTR [rbx+0x28]
  41c60c:	mov    rcx,rax
  41c60f:	add    rcx,QWORD PTR [rbx+0x68]
  41c613:	mov    QWORD PTR [rbx+0x18],rcx
  41c617:	mov    ecx,DWORD PTR [rbx+0x70]
  41c61a:	sub    ecx,eax
  41c61c:	cmp    ecx,0xfffc
  41c622:	mov    eax,0xfffc
  41c627:	cmovb  eax,ecx
  41c62a:	mov    DWORD PTR [rbx+0x24],eax
  41c62d:	mov    rax,QWORD PTR [rbx+0x30]
  41c631:	mov    DWORD PTR [rax+0x4],0xfffc
  41c638:	xor    r14d,r14d
  41c63b:	jmp    41c521 <flatcc_builder_start_table@@Base+0x21>
  41c640:	lea    rdi,[rip+0x9c9b]        # 4262e2 <flatcc_builder_padding_base@@Base+0x1452>
  41c647:	lea    rsi,[rip+0x8ad4]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41c64e:	lea    rcx,[rip+0x9ac7]        # 42611c <flatcc_builder_padding_base@@Base+0x128c>
  41c655:	mov    edx,0x134
  41c65a:	call   404090 <__assert_fail@plt>
  41c65f:	nop

000000000041c660 <flatcc_builder_create_vtable@@Base>:
  41c660:	push   r14
  41c662:	push   rbx
  41c663:	sub    rsp,0x98
  41c66a:	mov    r14,rdi
  41c66d:	mov    QWORD PTR [rsp+0x8],0x0
  41c676:	mov    DWORD PTR [rsp+0x10],0x0
  41c67e:	test   dx,dx
  41c681:	je     41c6e7 <flatcc_builder_create_vtable@@Base+0x87>
  41c683:	movzx  r8d,dx
  41c687:	mov    QWORD PTR [rsp+0x8],r8
  41c68c:	mov    QWORD PTR [rsp+0x18],rsi
  41c691:	mov    QWORD PTR [rsp+0x20],r8
  41c696:	mov    DWORD PTR [rsp+0x10],0x1
  41c69e:	mov    edx,0x1
  41c6a3:	cmp    DWORD PTR [r14+0x100],0x0
  41c6ab:	jne    41c6f6 <flatcc_builder_create_vtable@@Base+0x96>
  41c6ad:	cmp    DWORD PTR [r14+0x124],0x0
  41c6b5:	jne    41c6f6 <flatcc_builder_create_vtable@@Base+0x96>
  41c6b7:	mov    ebx,DWORD PTR [r14+0xf4]
  41c6be:	lea    eax,[r8+rbx*1]
  41c6c2:	mov    DWORD PTR [r14+0xf4],eax
  41c6c9:	mov    rdi,QWORD PTR [r14+0x38]
  41c6cd:	lea    rsi,[rsp+0x18]
  41c6d2:	mov    ecx,ebx
  41c6d4:	call   QWORD PTR [r14+0x48]
  41c6d8:	test   eax,eax
  41c6da:	jne    41c78b <flatcc_builder_create_vtable@@Base+0x12b>
  41c6e0:	add    ebx,0x1
  41c6e3:	jne    41c740 <flatcc_builder_create_vtable@@Base+0xe0>
  41c6e5:	jmp    41c73e <flatcc_builder_create_vtable@@Base+0xde>
  41c6e7:	xor    edx,edx
  41c6e9:	xor    r8d,r8d
  41c6ec:	cmp    DWORD PTR [r14+0x100],0x0
  41c6f4:	je     41c6ad <flatcc_builder_create_vtable@@Base+0x4d>
  41c6f6:	cmp    r8,0x11
  41c6fa:	setb   al
  41c6fd:	lea    rcx,[r8-0x10]
  41c701:	shr    rcx,0x20
  41c705:	sete   cl
  41c708:	test   r8d,r8d
  41c70b:	je     41c74d <flatcc_builder_create_vtable@@Base+0xed>
  41c70d:	or     al,cl
  41c70f:	je     41c74d <flatcc_builder_create_vtable@@Base+0xed>
  41c711:	mov    ebx,DWORD PTR [r14+0xf0]
  41c718:	sub    ebx,r8d
  41c71b:	mov    rdi,QWORD PTR [r14+0x38]
  41c71f:	lea    rsi,[rsp+0x18]
  41c724:	mov    ecx,ebx
  41c726:	call   QWORD PTR [r14+0x48]
  41c72a:	test   eax,eax
  41c72c:	jne    41c76c <flatcc_builder_create_vtable@@Base+0x10c>
  41c72e:	mov    DWORD PTR [r14+0xf0],ebx
  41c735:	test   ebx,ebx
  41c737:	je     41c73e <flatcc_builder_create_vtable@@Base+0xde>
  41c739:	add    ebx,0x1
  41c73c:	jmp    41c740 <flatcc_builder_create_vtable@@Base+0xe0>
  41c73e:	xor    ebx,ebx
  41c740:	mov    eax,ebx
  41c742:	add    rsp,0x98
  41c749:	pop    rbx
  41c74a:	pop    r14
  41c74c:	ret    
  41c74d:	lea    rdi,[rip+0x9b8e]        # 4262e2 <flatcc_builder_padding_base@@Base+0x1452>
  41c754:	lea    rsi,[rip+0x89c7]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41c75b:	lea    rcx,[rip+0x9a3f]        # 4261a1 <flatcc_builder_padding_base@@Base+0x1311>
  41c762:	mov    edx,0x287
  41c767:	call   404090 <__assert_fail@plt>
  41c76c:	lea    rdi,[rip+0x9b6f]        # 4262e2 <flatcc_builder_padding_base@@Base+0x1452>
  41c773:	lea    rsi,[rip+0x89a8]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41c77a:	lea    rcx,[rip+0x9a20]        # 4261a1 <flatcc_builder_padding_base@@Base+0x1311>
  41c781:	mov    edx,0x28b
  41c786:	call   404090 <__assert_fail@plt>
  41c78b:	lea    rdi,[rip+0x9b50]        # 4262e2 <flatcc_builder_padding_base@@Base+0x1452>
  41c792:	lea    rsi,[rip+0x8989]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41c799:	lea    rcx,[rip+0x9abd]        # 42625d <flatcc_builder_padding_base@@Base+0x13cd>
  41c7a0:	mov    edx,0x2a5
  41c7a5:	call   404090 <__assert_fail@plt>
  41c7aa:	nop    WORD PTR [rax+rax*1+0x0]

000000000041c7b0 <flatcc_builder_create_cached_vtable@@Base>:
  41c7b0:	push   rbp
  41c7b1:	push   r15
  41c7b3:	push   r14
  41c7b5:	push   r13
  41c7b7:	push   r12
  41c7b9:	push   rbx
  41c7ba:	sub    rsp,0x28
  41c7be:	mov    r15d,ecx
  41c7c1:	mov    r8d,edx
  41c7c4:	mov    QWORD PTR [rsp+0x18],rsi
  41c7c9:	mov    r13,rdi
  41c7cc:	mov    rax,QWORD PTR [rdi+0xd8]
  41c7d3:	test   rax,rax
  41c7d6:	je     41c8aa <flatcc_builder_create_cached_vtable@@Base+0xfa>
  41c7dc:	mov    ecx,0x20
  41c7e1:	sub    ecx,eax
  41c7e3:	shrx   r15d,r15d,ecx
  41c7e8:	shl    r15,0x2
  41c7ec:	add    r15,QWORD PTR [r13+0xa8]
  41c7f3:	je     41c97a <flatcc_builder_create_cached_vtable@@Base+0x1ca>
  41c7f9:	mov    ebp,DWORD PTR [r15]
  41c7fc:	test   ebp,ebp
  41c7fe:	je     41c982 <flatcc_builder_create_cached_vtable@@Base+0x1d2>
  41c804:	mov    rbx,QWORD PTR [r13+0x78]
  41c808:	mov    QWORD PTR [rsp+0x10],r13
  41c80d:	mov    r13,QWORD PTR [r13+0xb8]
  41c814:	movzx  eax,r8w
  41c818:	mov    QWORD PTR [rsp+0x20],rax
  41c81d:	xor    eax,eax
  41c81f:	mov    QWORD PTR [rsp],rax
  41c823:	mov    QWORD PTR [rsp+0x8],r15
  41c828:	mov    r14,r15
  41c82b:	nop    DWORD PTR [rax+rax*1+0x0]
  41c830:	mov    eax,ebp
  41c832:	lea    r15,[rax+r13*1]
  41c836:	mov    esi,DWORD PTR [r13+rax*1+0x8]
  41c83b:	cmp    WORD PTR [rbx+rsi*1],r8w
  41c840:	jne    41c85e <flatcc_builder_create_cached_vtable@@Base+0xae>
  41c842:	add    rsi,rbx
  41c845:	mov    rdi,QWORD PTR [rsp+0x18]
  41c84a:	mov    rdx,QWORD PTR [rsp+0x20]
  41c84f:	mov    r12d,r8d
  41c852:	call   4040d0 <memcmp@plt>
  41c857:	mov    r8d,r12d
  41c85a:	test   eax,eax
  41c85c:	je     41c86f <flatcc_builder_create_cached_vtable@@Base+0xbf>
  41c85e:	mov    ebp,DWORD PTR [r15+0xc]
  41c862:	add    r15,0xc
  41c866:	mov    r14,r15
  41c869:	test   ebp,ebp
  41c86b:	jne    41c830 <flatcc_builder_create_cached_vtable@@Base+0x80>
  41c86d:	jmp    41c89b <flatcc_builder_create_cached_vtable@@Base+0xeb>
  41c86f:	mov    eax,DWORD PTR [r15+0x4]
  41c873:	mov    rcx,QWORD PTR [rsp+0x10]
  41c878:	cmp    eax,DWORD PTR [rcx+0x100]
  41c87e:	je     41cae4 <flatcc_builder_create_cached_vtable@@Base+0x334>
  41c884:	lea    r14,[r15+0xc]
  41c888:	mov    ebp,DWORD PTR [r15+0xc]
  41c88c:	mov    rax,r15
  41c88f:	mov    QWORD PTR [rsp],r15
  41c893:	test   ebp,ebp
  41c895:	jne    41c830 <flatcc_builder_create_cached_vtable@@Base+0x80>
  41c897:	mov    QWORD PTR [rsp],r15
  41c89b:	mov    r13,QWORD PTR [rsp+0x10]
  41c8a0:	mov    r15,QWORD PTR [rsp+0x8]
  41c8a5:	jmp    41c988 <flatcc_builder_create_cached_vtable@@Base+0x1d8>
  41c8aa:	cmp    DWORD PTR [r13+0xe4],0x0
  41c8b2:	jne    41cb21 <flatcc_builder_create_cached_vtable@@Base+0x371>
  41c8b8:	lea    rbx,[r13+0xb8]
  41c8bf:	cmp    QWORD PTR [r13+0xc0],0xf
  41c8c7:	ja     41c8ef <flatcc_builder_create_cached_vtable@@Base+0x13f>
  41c8c9:	mov    rdi,QWORD PTR [r13+0x40]
  41c8cd:	mov    edx,0x10
  41c8d2:	xor    ecx,ecx
  41c8d4:	mov    ebp,r8d
  41c8d7:	mov    r8d,0x6
  41c8dd:	mov    rsi,rbx
  41c8e0:	call   QWORD PTR [r13+0x50]
  41c8e4:	mov    r8d,ebp
  41c8e7:	test   eax,eax
  41c8e9:	jne    41cb02 <flatcc_builder_create_cached_vtable@@Base+0x352>
  41c8ef:	xor    r12d,r12d
  41c8f2:	cmp    QWORD PTR [rbx],0x0
  41c8f6:	je     41caca <flatcc_builder_create_cached_vtable@@Base+0x31a>
  41c8fc:	mov    ebx,r8d
  41c8ff:	lea    rsi,[r13+0xa8]
  41c906:	mov    DWORD PTR [r13+0xe4],0x10
  41c911:	mov    rdi,QWORD PTR [r13+0x40]
  41c915:	mov    edx,0x100
  41c91a:	mov    ecx,0x1
  41c91f:	mov    r8d,0x5
  41c925:	call   QWORD PTR [r13+0x50]
  41c929:	test   eax,eax
  41c92b:	jne    41caca <flatcc_builder_create_cached_vtable@@Base+0x31a>
  41c931:	mov    rax,QWORD PTR [r13+0xb0]
  41c938:	mov    edx,0x100
  41c93d:	nop    DWORD PTR [rax]
  41c940:	mov    rcx,rdx
  41c943:	lea    rdx,[rdx+rdx*1]
  41c947:	cmp    rdx,rax
  41c94a:	jbe    41c940 <flatcc_builder_create_cached_vtable@@Base+0x190>
  41c94c:	shr    rcx,0x2
  41c950:	mov    rax,0xffffffffffffffff
  41c957:	mov    edx,0x1
  41c95c:	mov    r8d,ebx
  41c95f:	nop
  41c960:	add    rax,0x1
  41c964:	shlx   rsi,rdx,rax
  41c969:	cmp    rsi,rcx
  41c96c:	jb     41c960 <flatcc_builder_create_cached_vtable@@Base+0x1b0>
  41c96e:	mov    QWORD PTR [r13+0xd8],rax
  41c975:	jmp    41c7dc <flatcc_builder_create_cached_vtable@@Base+0x2c>
  41c97a:	xor    r12d,r12d
  41c97d:	jmp    41caca <flatcc_builder_create_cached_vtable@@Base+0x31a>
  41c982:	xor    eax,eax
  41c984:	mov    QWORD PTR [rsp],rax
  41c988:	mov    ebp,DWORD PTR [r13+0xe4]
  41c98f:	lea    rbx,[r13+0xb8]
  41c996:	lea    rdx,[rbp+0x10]
  41c99a:	cmp    rdx,QWORD PTR [r13+0xc0]
  41c9a1:	jbe    41c9c4 <flatcc_builder_create_cached_vtable@@Base+0x214>
  41c9a3:	mov    rdi,QWORD PTR [r13+0x40]
  41c9a7:	xor    ecx,ecx
  41c9a9:	mov    r14d,r8d
  41c9ac:	mov    r8d,0x6
  41c9b2:	mov    rsi,rbx
  41c9b5:	call   QWORD PTR [r13+0x50]
  41c9b9:	mov    r8d,r14d
  41c9bc:	test   eax,eax
  41c9be:	jne    41cb02 <flatcc_builder_create_cached_vtable@@Base+0x352>
  41c9c4:	xor    r12d,r12d
  41c9c7:	add    rbp,QWORD PTR [rbx]
  41c9ca:	je     41caca <flatcc_builder_create_cached_vtable@@Base+0x31a>
  41c9d0:	mov    eax,DWORD PTR [r13+0xe4]
  41c9d7:	mov    ecx,DWORD PTR [r13+0x100]
  41c9de:	lea    edx,[rax+0x10]
  41c9e1:	mov    DWORD PTR [r13+0xe4],edx
  41c9e8:	mov    DWORD PTR [rbp+0x4],ecx
  41c9eb:	mov    ecx,DWORD PTR [r15]
  41c9ee:	mov    DWORD PTR [rbp+0xc],ecx
  41c9f1:	mov    DWORD PTR [r15],eax
  41c9f4:	movzx  ebx,r8w
  41c9f8:	mov    rdi,r13
  41c9fb:	mov    rsi,QWORD PTR [rsp+0x18]
  41ca00:	mov    edx,ebx
  41ca02:	call   41c660 <flatcc_builder_create_vtable@@Base>
  41ca07:	mov    DWORD PTR [rbp+0x0],eax
  41ca0a:	test   eax,eax
  41ca0c:	je     41caca <flatcc_builder_create_cached_vtable@@Base+0x31a>
  41ca12:	mov    rax,QWORD PTR [rsp]
  41ca16:	test   rax,rax
  41ca19:	je     41ca26 <flatcc_builder_create_cached_vtable@@Base+0x276>
  41ca1b:	mov    eax,DWORD PTR [rax+0x8]
  41ca1e:	mov    DWORD PTR [rbp+0x8],eax
  41ca21:	jmp    41cac6 <flatcc_builder_create_cached_vtable@@Base+0x316>
  41ca26:	mov    rax,QWORD PTR [r13+0x118]
  41ca2d:	mov    r14d,DWORD PTR [r13+0xe0]
  41ca34:	test   rax,rax
  41ca37:	je     41ca74 <flatcc_builder_create_cached_vtable@@Base+0x2c4>
  41ca39:	lea    ecx,[r14+rbx*1]
  41ca3d:	cmp    rax,rcx
  41ca40:	jae    41ca74 <flatcc_builder_create_cached_vtable@@Base+0x2c4>
  41ca42:	cmp    QWORD PTR [r13+0xd8],0x0
  41ca4a:	je     41cac6 <flatcc_builder_create_cached_vtable@@Base+0x316>
  41ca4c:	mov    rdi,QWORD PTR [r13+0xa8]
  41ca53:	mov    rdx,QWORD PTR [r13+0xb0]
  41ca5a:	xor    esi,esi
  41ca5c:	call   4040a0 <memset@plt>
  41ca61:	movabs rax,0x1000000000
  41ca6b:	mov    QWORD PTR [r13+0xe0],rax
  41ca72:	jmp    41cac6 <flatcc_builder_create_cached_vtable@@Base+0x316>
  41ca74:	lea    r15,[r13+0x78]
  41ca78:	lea    rdx,[r14+rbx*1]
  41ca7c:	cmp    rdx,QWORD PTR [r13+0x80]
  41ca83:	jbe    41ca9c <flatcc_builder_create_cached_vtable@@Base+0x2ec>
  41ca85:	mov    rdi,QWORD PTR [r13+0x40]
  41ca89:	xor    ecx,ecx
  41ca8b:	mov    r8d,0x2
  41ca91:	mov    rsi,r15
  41ca94:	call   QWORD PTR [r13+0x50]
  41ca98:	test   eax,eax
  41ca9a:	jne    41cb02 <flatcc_builder_create_cached_vtable@@Base+0x352>
  41ca9c:	add    r14,QWORD PTR [r15]
  41ca9f:	je     41cadc <flatcc_builder_create_cached_vtable@@Base+0x32c>
  41caa1:	mov    eax,DWORD PTR [r13+0xe0]
  41caa8:	mov    DWORD PTR [rbp+0x8],eax
  41caab:	mov    ecx,ebx
  41caad:	add    ecx,eax
  41caaf:	mov    DWORD PTR [r13+0xe0],ecx
  41cab6:	mov    rdi,r14
  41cab9:	mov    rsi,QWORD PTR [rsp+0x18]
  41cabe:	mov    rdx,rbx
  41cac1:	call   404100 <memcpy@plt>
  41cac6:	mov    r12d,DWORD PTR [rbp+0x0]
  41caca:	mov    eax,r12d
  41cacd:	add    rsp,0x28
  41cad1:	pop    rbx
  41cad2:	pop    r12
  41cad4:	pop    r13
  41cad6:	pop    r14
  41cad8:	pop    r15
  41cada:	pop    rbp
  41cadb:	ret    
  41cadc:	mov    r12d,0xffffffff
  41cae2:	jmp    41caca <flatcc_builder_create_cached_vtable@@Base+0x31a>
  41cae4:	mov    rcx,QWORD PTR [rsp+0x8]
  41cae9:	cmp    r14,rcx
  41caec:	je     41cafd <flatcc_builder_create_cached_vtable@@Base+0x34d>
  41caee:	mov    eax,DWORD PTR [r15+0xc]
  41caf2:	mov    DWORD PTR [r14],eax
  41caf5:	mov    eax,DWORD PTR [rcx]
  41caf7:	mov    DWORD PTR [r15+0xc],eax
  41cafb:	mov    DWORD PTR [rcx],ebp
  41cafd:	mov    r12d,DWORD PTR [r15]
  41cb00:	jmp    41caca <flatcc_builder_create_cached_vtable@@Base+0x31a>
  41cb02:	lea    rdi,[rip+0x97d9]        # 4262e2 <flatcc_builder_padding_base@@Base+0x1452>
  41cb09:	lea    rsi,[rip+0x8612]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41cb10:	lea    rcx,[rip+0x9605]        # 42611c <flatcc_builder_padding_base@@Base+0x128c>
  41cb17:	mov    edx,0x134
  41cb1c:	call   404090 <__assert_fail@plt>
  41cb21:	lea    rdi,[rip+0x977e]        # 4262a6 <flatcc_builder_padding_base@@Base+0x1416>
  41cb28:	lea    rsi,[rip+0x85f3]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41cb2f:	lea    rcx,[rip+0x977f]        # 4262b5 <flatcc_builder_padding_base@@Base+0x1425>
  41cb36:	mov    edx,0x156
  41cb3b:	call   404090 <__assert_fail@plt>

000000000041cb40 <flatcc_builder_create_table@@Base>:
  41cb40:	push   rbp
  41cb41:	push   r14
  41cb43:	push   rbx
  41cb44:	sub    rsp,0xa0
  41cb4b:	test   r9d,r9d
  41cb4e:	js     41cd65 <flatcc_builder_create_table@@Base+0x225>
  41cb54:	mov    r14,rdi
  41cb57:	mov    edi,DWORD PTR [rsp+0xc0]
  41cb5e:	test   dil,0x1
  41cb62:	je     41cd84 <flatcc_builder_create_table@@Base+0x244>
  41cb68:	movzx  ecx,cx
  41cb6b:	cmp    ecx,0x4
  41cb6e:	mov    eax,0x4
  41cb73:	cmova  eax,ecx
  41cb76:	cmp    WORD PTR [r14+0xe8],ax
  41cb7e:	jae    41cb88 <flatcc_builder_create_table@@Base+0x48>
  41cb80:	mov    WORD PTR [r14+0xe8],ax
  41cb88:	mov    ebp,DWORD PTR [r14+0xf0]
  41cb8f:	mov    ecx,ebp
  41cb91:	sub    ecx,edx
  41cb93:	movzx  r10d,ax
  41cb97:	add    r10d,0xffffffff
  41cb9b:	and    r10d,ecx
  41cb9e:	mov    ecx,0xfffffffc
  41cba3:	mov    ebx,0xfffffffc
  41cba8:	sub    ebx,edx
  41cbaa:	add    edi,r10d
  41cbad:	lea    eax,[rbx+rbp*1]
  41cbb0:	add    eax,0x1
  41cbb3:	sub    eax,edi
  41cbb5:	mov    DWORD PTR [rsp+0xc],eax
  41cbb9:	test   r9d,r9d
  41cbbc:	jle    41cc67 <flatcc_builder_create_table@@Base+0x127>
  41cbc2:	add    ebx,ebp
  41cbc4:	sub    ebx,r10d
  41cbc7:	sub    ecx,ebx
  41cbc9:	mov    edi,r9d
  41cbcc:	lea    rax,[rdi-0x1]
  41cbd0:	mov    r9d,edi
  41cbd3:	and    r9d,0x3
  41cbd7:	cmp    rax,0x3
  41cbdb:	jae    41cbe9 <flatcc_builder_create_table@@Base+0xa9>
  41cbdd:	xor    ebx,ebx
  41cbdf:	test   r9,r9
  41cbe2:	jne    41cc3d <flatcc_builder_create_table@@Base+0xfd>
  41cbe4:	jmp    41cc67 <flatcc_builder_create_table@@Base+0x127>
  41cbe9:	sub    rdi,r9
  41cbec:	xor    ebx,ebx
  41cbee:	xchg   ax,ax
  41cbf0:	movzx  eax,WORD PTR [r8+rbx*2]
  41cbf5:	mov    ebp,DWORD PTR [rax+rsi*1]
  41cbf8:	add    ebp,ecx
  41cbfa:	sub    ebp,eax
  41cbfc:	mov    DWORD PTR [rax+rsi*1],ebp
  41cbff:	movzx  eax,WORD PTR [r8+rbx*2+0x2]
  41cc05:	mov    ebp,DWORD PTR [rax+rsi*1]
  41cc08:	add    ebp,ecx
  41cc0a:	sub    ebp,eax
  41cc0c:	mov    DWORD PTR [rax+rsi*1],ebp
  41cc0f:	movzx  eax,WORD PTR [r8+rbx*2+0x4]
  41cc15:	mov    ebp,DWORD PTR [rax+rsi*1]
  41cc18:	add    ebp,ecx
  41cc1a:	sub    ebp,eax
  41cc1c:	mov    DWORD PTR [rax+rsi*1],ebp
  41cc1f:	movzx  eax,WORD PTR [r8+rbx*2+0x6]
  41cc25:	mov    ebp,DWORD PTR [rax+rsi*1]
  41cc28:	add    ebp,ecx
  41cc2a:	sub    ebp,eax
  41cc2c:	mov    DWORD PTR [rax+rsi*1],ebp
  41cc2f:	add    rbx,0x4
  41cc33:	cmp    rdi,rbx
  41cc36:	jne    41cbf0 <flatcc_builder_create_table@@Base+0xb0>
  41cc38:	test   r9,r9
  41cc3b:	je     41cc67 <flatcc_builder_create_table@@Base+0x127>
  41cc3d:	lea    rdi,[r8+rbx*2]
  41cc41:	xor    ebx,ebx
  41cc43:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41cc4d:	nop    DWORD PTR [rax]
  41cc50:	movzx  eax,WORD PTR [rdi+rbx*2]
  41cc54:	mov    ebp,DWORD PTR [rax+rsi*1]
  41cc57:	add    ebp,ecx
  41cc59:	sub    ebp,eax
  41cc5b:	mov    DWORD PTR [rax+rsi*1],ebp
  41cc5e:	add    rbx,0x1
  41cc62:	cmp    r9,rbx
  41cc65:	jne    41cc50 <flatcc_builder_create_table@@Base+0x110>
  41cc67:	mov    QWORD PTR [rsp+0x10],0x4
  41cc70:	lea    rax,[rsp+0xc]
  41cc75:	mov    QWORD PTR [rsp+0x20],rax
  41cc7a:	mov    QWORD PTR [rsp+0x28],0x4
  41cc83:	mov    DWORD PTR [rsp+0x18],0x1
  41cc8b:	test   rdx,rdx
  41cc8e:	je     41cd30 <flatcc_builder_create_table@@Base+0x1f0>
  41cc94:	lea    r8,[rdx+0x4]
  41cc98:	mov    QWORD PTR [rsp+0x10],r8
  41cc9d:	mov    QWORD PTR [rsp+0x30],rsi
  41cca2:	mov    QWORD PTR [rsp+0x38],rdx
  41cca7:	mov    DWORD PTR [rsp+0x18],0x2
  41ccaf:	mov    edx,0x2
  41ccb4:	test   r10d,r10d
  41ccb7:	je     41ccdf <flatcc_builder_create_table@@Base+0x19f>
  41ccb9:	add    r8,r10
  41ccbc:	mov    QWORD PTR [rsp+0x10],r8
  41ccc1:	mov    eax,edx
  41ccc3:	shl    rax,0x4
  41ccc7:	lea    rcx,[rip+0x81c2]        # 424e90 <flatcc_builder_padding_base@@Base>
  41ccce:	mov    QWORD PTR [rsp+rax*1+0x20],rcx
  41ccd3:	mov    QWORD PTR [rsp+rax*1+0x28],r10
  41ccd8:	add    edx,0x1
  41ccdb:	mov    DWORD PTR [rsp+0x18],edx
  41ccdf:	cmp    r8,0x11
  41cce3:	setb   al
  41cce6:	lea    rcx,[r8-0x10]
  41ccea:	shr    rcx,0x20
  41ccee:	sete   cl
  41ccf1:	test   r8d,r8d
  41ccf4:	jle    41cd46 <flatcc_builder_create_table@@Base+0x206>
  41ccf6:	or     al,cl
  41ccf8:	je     41cd46 <flatcc_builder_create_table@@Base+0x206>
  41ccfa:	mov    ebp,DWORD PTR [r14+0xf0]
  41cd01:	sub    ebp,r8d
  41cd04:	mov    rdi,QWORD PTR [r14+0x38]
  41cd08:	lea    rsi,[rsp+0x20]
  41cd0d:	mov    ecx,ebp
  41cd0f:	call   QWORD PTR [r14+0x48]
  41cd13:	test   eax,eax
  41cd15:	jne    41cda3 <flatcc_builder_create_table@@Base+0x263>
  41cd1b:	mov    DWORD PTR [r14+0xf0],ebp
  41cd22:	mov    eax,ebp
  41cd24:	add    rsp,0xa0
  41cd2b:	pop    rbx
  41cd2c:	pop    r14
  41cd2e:	pop    rbp
  41cd2f:	ret    
  41cd30:	mov    edx,0x1
  41cd35:	mov    r8d,0x4
  41cd3b:	test   r10d,r10d
  41cd3e:	jne    41ccb9 <flatcc_builder_create_table@@Base+0x179>
  41cd44:	jmp    41ccdf <flatcc_builder_create_table@@Base+0x19f>
  41cd46:	lea    rdi,[rip+0x9595]        # 4262e2 <flatcc_builder_padding_base@@Base+0x1452>
  41cd4d:	lea    rsi,[rip+0x83ce]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41cd54:	lea    rcx,[rip+0x9446]        # 4261a1 <flatcc_builder_padding_base@@Base+0x1311>
  41cd5b:	mov    edx,0x287
  41cd60:	call   404090 <__assert_fail@plt>
  41cd65:	lea    rdi,[rip+0x8b2c]        # 425898 <flatcc_builder_padding_base@@Base+0xa08>
  41cd6c:	lea    rsi,[rip+0x83af]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41cd73:	lea    rcx,[rip+0x8b30]        # 4258aa <flatcc_builder_padding_base@@Base+0xa1a>
  41cd7a:	mov    edx,0x4d5
  41cd7f:	call   404090 <__assert_fail@plt>
  41cd84:	lea    rdi,[rip+0x8bbb]        # 425946 <flatcc_builder_padding_base@@Base+0xab6>
  41cd8b:	lea    rsi,[rip+0x8390]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41cd92:	lea    rcx,[rip+0x8b11]        # 4258aa <flatcc_builder_padding_base@@Base+0xa1a>
  41cd99:	mov    edx,0x4db
  41cd9e:	call   404090 <__assert_fail@plt>
  41cda3:	lea    rdi,[rip+0x9538]        # 4262e2 <flatcc_builder_padding_base@@Base+0x1452>
  41cdaa:	lea    rsi,[rip+0x8371]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41cdb1:	lea    rcx,[rip+0x93e9]        # 4261a1 <flatcc_builder_padding_base@@Base+0x1311>
  41cdb8:	mov    edx,0x28b
  41cdbd:	call   404090 <__assert_fail@plt>
  41cdc2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41cdcc:	nop    DWORD PTR [rax+0x0]

000000000041cdd0 <flatcc_builder_check_required_field@@Base>:
  41cdd0:	mov    rax,QWORD PTR [rdi+0x30]
  41cdd4:	movzx  eax,WORD PTR [rax+0xe]
  41cdd8:	cmp    eax,0x3
  41cddb:	jne    41cdf7 <flatcc_builder_check_required_field@@Base+0x27>
  41cddd:	xor    eax,eax
  41cddf:	cmp    WORD PTR [rdi+0x10],si
  41cde3:	jbe    41cdf6 <flatcc_builder_check_required_field@@Base+0x26>
  41cde5:	mov    rcx,QWORD PTR [rdi+0x8]
  41cde9:	movzx  edx,si
  41cdec:	xor    eax,eax
  41cdee:	cmp    WORD PTR [rcx+rdx*2],0x0
  41cdf3:	setne  al
  41cdf6:	ret    
  41cdf7:	push   rax
  41cdf8:	lea    rdi,[rip+0x8b52]        # 425951 <flatcc_builder_padding_base@@Base+0xac1>
  41cdff:	lea    rsi,[rip+0x831c]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41ce06:	lea    rcx,[rip+0x8b6f]        # 42597c <flatcc_builder_padding_base@@Base+0xaec>
  41ce0d:	mov    edx,0x4f8
  41ce12:	call   404090 <__assert_fail@plt>
  41ce17:	nop    WORD PTR [rax+rax*1+0x0]

000000000041ce20 <flatcc_builder_check_union_field@@Base>:
  41ce20:	mov    rax,QWORD PTR [rdi+0x30]
  41ce24:	movzx  eax,WORD PTR [rax+0xe]
  41ce28:	cmp    eax,0x3
  41ce2b:	jne    41ce7e <flatcc_builder_check_union_field@@Base+0x5e>
  41ce2d:	test   si,si
  41ce30:	je     41ce61 <flatcc_builder_check_union_field@@Base+0x41>
  41ce32:	cmp    WORD PTR [rdi+0x10],si
  41ce36:	jbe    41ce67 <flatcc_builder_check_union_field@@Base+0x47>
  41ce38:	movzx  eax,si
  41ce3b:	mov    rcx,QWORD PTR [rdi+0x8]
  41ce3f:	movzx  edx,WORD PTR [rcx+rax*2-0x2]
  41ce44:	test   rdx,rdx
  41ce47:	je     41ce6d <flatcc_builder_check_union_field@@Base+0x4d>
  41ce49:	mov    rsi,QWORD PTR [rdi+0x18]
  41ce4d:	cmp    BYTE PTR [rsi+rdx*1],0x0
  41ce51:	movzx  eax,WORD PTR [rcx+rax*2]
  41ce55:	je     41ce74 <flatcc_builder_check_union_field@@Base+0x54>
  41ce57:	test   ax,ax
  41ce5a:	setne  al
  41ce5d:	movzx  eax,al
  41ce60:	ret    
  41ce61:	xor    eax,eax
  41ce63:	movzx  eax,al
  41ce66:	ret    
  41ce67:	xor    eax,eax
  41ce69:	movzx  eax,al
  41ce6c:	ret    
  41ce6d:	cmp    WORD PTR [rcx+rax*2],0x0
  41ce72:	jmp    41ce77 <flatcc_builder_check_union_field@@Base+0x57>
  41ce74:	test   ax,ax
  41ce77:	sete   al
  41ce7a:	movzx  eax,al
  41ce7d:	ret    
  41ce7e:	push   rax
  41ce7f:	lea    rdi,[rip+0x8acb]        # 425951 <flatcc_builder_padding_base@@Base+0xac1>
  41ce86:	lea    rsi,[rip+0x8295]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41ce8d:	lea    rcx,[rip+0x8b3b]        # 4259cf <flatcc_builder_padding_base@@Base+0xb3f>
  41ce94:	mov    edx,0x4ff
  41ce99:	call   404090 <__assert_fail@plt>
  41ce9e:	xchg   ax,ax

000000000041cea0 <flatcc_builder_check_required@@Base>:
  41cea0:	mov    rax,QWORD PTR [rdi+0x30]
  41cea4:	movzx  eax,WORD PTR [rax+0xe]
  41cea8:	cmp    eax,0x3
  41ceab:	jne    41cee8 <flatcc_builder_check_required@@Base+0x48>
  41cead:	movzx  ecx,WORD PTR [rdi+0x10]
  41ceb1:	xor    eax,eax
  41ceb3:	cmp    ecx,edx
  41ceb5:	jl     41cee4 <flatcc_builder_check_required@@Base+0x44>
  41ceb7:	mov    eax,0x1
  41cebc:	test   edx,edx
  41cebe:	jle    41cee4 <flatcc_builder_check_required@@Base+0x44>
  41cec0:	mov    rcx,QWORD PTR [rdi+0x8]
  41cec4:	movsxd r8,edx
  41cec7:	xor    edi,edi
  41cec9:	nop    DWORD PTR [rax+0x0]
  41ced0:	movzx  edx,WORD PTR [rsi+rdi*2]
  41ced4:	cmp    WORD PTR [rcx+rdx*2],0x0
  41ced9:	je     41cee5 <flatcc_builder_check_required@@Base+0x45>
  41cedb:	add    rdi,0x1
  41cedf:	cmp    rdi,r8
  41cee2:	jl     41ced0 <flatcc_builder_check_required@@Base+0x30>
  41cee4:	ret    
  41cee5:	xor    eax,eax
  41cee7:	ret    
  41cee8:	push   rax
  41cee9:	lea    rdi,[rip+0x8a61]        # 425951 <flatcc_builder_padding_base@@Base+0xac1>
  41cef0:	lea    rsi,[rip+0x822b]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41cef7:	lea    rcx,[rip+0x8b21]        # 425a1f <flatcc_builder_padding_base@@Base+0xb8f>
  41cefe:	mov    edx,0x511
  41cf03:	call   404090 <__assert_fail@plt>
  41cf08:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041cf10 <flatcc_builder_end_table@@Base>:
  41cf10:	push   rbp
  41cf11:	push   r15
  41cf13:	push   r14
  41cf15:	push   r12
  41cf17:	push   rbx
  41cf18:	sub    rsp,0x10
  41cf1c:	mov    rax,QWORD PTR [rdi+0x30]
  41cf20:	movzx  eax,WORD PTR [rax+0xe]
  41cf24:	cmp    eax,0x3
  41cf27:	jne    41d078 <flatcc_builder_end_table@@Base+0x168>
  41cf2d:	mov    rbx,rdi
  41cf30:	mov    rax,QWORD PTR [rdi+0x8]
  41cf34:	mov    ecx,DWORD PTR [rdi+0x10]
  41cf37:	lea    ecx,[rcx+rcx*1]
  41cf3a:	add    ecx,0x4
  41cf3d:	mov    WORD PTR [rax-0x4],cx
  41cf41:	mov    edx,DWORD PTR [rdi+0x20]
  41cf44:	add    edx,0x4
  41cf47:	mov    WORD PTR [rax-0x2],dx
  41cf4b:	lea    r12,[rax-0x4]
  41cf4f:	movzx  ebp,cx
  41cf52:	mov    eax,DWORD PTR [rdi+0x14]
  41cf55:	xor    eax,ebp
  41cf57:	imul   eax,eax,0x9e3779b1
  41cf5d:	movzx  ecx,dx
  41cf60:	xor    ecx,eax
  41cf62:	imul   ecx,ecx,0x9e3779b1
  41cf68:	mov    DWORD PTR [rdi+0x14],ecx
  41cf6b:	mov    rsi,r12
  41cf6e:	mov    edx,ebp
  41cf70:	call   41c7b0 <flatcc_builder_create_cached_vtable@@Base>
  41cf75:	test   eax,eax
  41cf77:	je     41d065 <flatcc_builder_end_table@@Base+0x155>
  41cf7d:	mov    r14d,eax
  41cf80:	xor    r15d,r15d
  41cf83:	xor    esi,esi
  41cf85:	mov    rdi,r12
  41cf88:	mov    rdx,rbp
  41cf8b:	call   4040a0 <memset@plt>
  41cf90:	mov    rax,QWORD PTR [rbx+0x30]
  41cf94:	mov    r8d,DWORD PTR [rax+0x14]
  41cf98:	add    r8,QWORD PTR [rbx+0x88]
  41cf9f:	mov    r9,QWORD PTR [rbx]
  41cfa2:	mov    rsi,QWORD PTR [rbx+0x18]
  41cfa6:	sub    r9,r8
  41cfa9:	shr    r9,1
  41cfac:	mov    edx,DWORD PTR [rbx+0x20]
  41cfaf:	movzx  ecx,WORD PTR [rbx+0xea]
  41cfb6:	mov    DWORD PTR [rsp],r14d
  41cfba:	mov    rdi,rbx
  41cfbd:	call   41cb40 <flatcc_builder_create_table@@Base>
  41cfc2:	test   eax,eax
  41cfc4:	je     41d068 <flatcc_builder_end_table@@Base+0x158>
  41cfca:	mov    r14d,eax
  41cfcd:	mov    rax,QWORD PTR [rbx+0x30]
  41cfd1:	mov    ecx,DWORD PTR [rax+0x18]
  41cfd4:	mov    DWORD PTR [rbx+0x14],ecx
  41cfd7:	movzx  ecx,WORD PTR [rax+0x1c]
  41cfdb:	mov    WORD PTR [rbx+0x10],cx
  41cfdf:	mov    ecx,DWORD PTR [rax+0x10]
  41cfe2:	add    rcx,QWORD PTR [rbx+0x58]
  41cfe6:	mov    QWORD PTR [rbx+0x8],rcx
  41cfea:	mov    eax,DWORD PTR [rax+0x14]
  41cfed:	add    rax,QWORD PTR [rbx+0x88]
  41cff4:	mov    QWORD PTR [rbx],rax
  41cff7:	mov    rdi,QWORD PTR [rbx+0x18]
  41cffb:	mov    edx,DWORD PTR [rbx+0x20]
  41cffe:	xor    esi,esi
  41d000:	call   4040a0 <memset@plt>
  41d005:	mov    rax,QWORD PTR [rbx+0x30]
  41d009:	mov    ecx,DWORD PTR [rax+0x8]
  41d00c:	mov    DWORD PTR [rbx+0x20],ecx
  41d00f:	mov    ecx,DWORD PTR [rax]
  41d011:	mov    DWORD PTR [rbx+0x28],ecx
  41d014:	mov    edx,DWORD PTR [rax+0x4]
  41d017:	mov    rsi,rcx
  41d01a:	add    rsi,QWORD PTR [rbx+0x68]
  41d01e:	mov    QWORD PTR [rbx+0x18],rsi
  41d022:	mov    esi,DWORD PTR [rbx+0x70]
  41d025:	sub    esi,ecx
  41d027:	cmp    esi,edx
  41d029:	cmova  esi,edx
  41d02c:	mov    DWORD PTR [rbx+0x24],esi
  41d02f:	movzx  ecx,WORD PTR [rbx+0xea]
  41d036:	cmp    WORD PTR [rbx+0xe8],cx
  41d03d:	jae    41d046 <flatcc_builder_end_table@@Base+0x136>
  41d03f:	mov    WORD PTR [rbx+0xe8],cx
  41d046:	movzx  ecx,WORD PTR [rax+0xc]
  41d04a:	mov    WORD PTR [rbx+0xea],cx
  41d051:	add    rax,0xffffffffffffffdc
  41d055:	mov    QWORD PTR [rbx+0x30],rax
  41d059:	add    DWORD PTR [rbx+0x104],0xffffffff
  41d060:	mov    r15d,r14d
  41d063:	jmp    41d068 <flatcc_builder_end_table@@Base+0x158>
  41d065:	xor    r15d,r15d
  41d068:	mov    eax,r15d
  41d06b:	add    rsp,0x10
  41d06f:	pop    rbx
  41d070:	pop    r12
  41d072:	pop    r14
  41d074:	pop    r15
  41d076:	pop    rbp
  41d077:	ret    
  41d078:	lea    rdi,[rip+0x88d2]        # 425951 <flatcc_builder_padding_base@@Base+0xac1>
  41d07f:	lea    rsi,[rip+0x809c]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41d086:	lea    rcx,[rip+0x89ec]        # 425a79 <flatcc_builder_padding_base@@Base+0xbe9>
  41d08d:	mov    edx,0x525
  41d092:	call   404090 <__assert_fail@plt>
  41d097:	nop    WORD PTR [rax+rax*1+0x0]

000000000041d0a0 <flatcc_builder_create_vector@@Base>:
  41d0a0:	push   rbp
  41d0a1:	push   rbx
  41d0a2:	sub    rsp,0x98
  41d0a9:	cmp    rdx,r9
  41d0ac:	ja     41d1d9 <flatcc_builder_create_vector@@Base+0x139>
  41d0b2:	mov    rbx,rdi
  41d0b5:	movzx  edi,r8w
  41d0b9:	cmp    edi,0x4
  41d0bc:	mov    eax,0x4
  41d0c1:	cmova  eax,edi
  41d0c4:	cmp    WORD PTR [rbx+0xe8],ax
  41d0cb:	jae    41d0d4 <flatcc_builder_create_vector@@Base+0x34>
  41d0cd:	mov    WORD PTR [rbx+0xe8],ax
  41d0d4:	imul   ecx,edx
  41d0d7:	mov    DWORD PTR [rsp+0x4],edx
  41d0db:	mov    ebp,DWORD PTR [rbx+0xf0]
  41d0e1:	mov    edx,ebp
  41d0e3:	sub    edx,ecx
  41d0e5:	movzx  eax,ax
  41d0e8:	add    eax,0xffffffff
  41d0eb:	and    eax,edx
  41d0ed:	mov    QWORD PTR [rsp+0x8],0x4
  41d0f6:	lea    rdx,[rsp+0x4]
  41d0fb:	mov    QWORD PTR [rsp+0x18],rdx
  41d100:	mov    QWORD PTR [rsp+0x20],0x4
  41d109:	mov    DWORD PTR [rsp+0x10],0x1
  41d111:	test   ecx,ecx
  41d113:	je     41d1a9 <flatcc_builder_create_vector@@Base+0x109>
  41d119:	mov    ecx,ecx
  41d11b:	lea    r8,[rcx+0x4]
  41d11f:	mov    QWORD PTR [rsp+0x8],r8
  41d124:	mov    QWORD PTR [rsp+0x28],rsi
  41d129:	mov    QWORD PTR [rsp+0x30],rcx
  41d12e:	mov    DWORD PTR [rsp+0x10],0x2
  41d136:	mov    edx,0x2
  41d13b:	test   eax,eax
  41d13d:	je     41d167 <flatcc_builder_create_vector@@Base+0xc7>
  41d13f:	mov    eax,eax
  41d141:	add    r8,rax
  41d144:	mov    QWORD PTR [rsp+0x8],r8
  41d149:	mov    ecx,edx
  41d14b:	shl    rcx,0x4
  41d14f:	lea    rsi,[rip+0x7d3a]        # 424e90 <flatcc_builder_padding_base@@Base>
  41d156:	mov    QWORD PTR [rsp+rcx*1+0x18],rsi
  41d15b:	mov    QWORD PTR [rsp+rcx*1+0x20],rax
  41d160:	add    edx,0x1
  41d163:	mov    DWORD PTR [rsp+0x10],edx
  41d167:	cmp    r8,0x11
  41d16b:	setb   al
  41d16e:	lea    rcx,[r8-0x10]
  41d172:	shr    rcx,0x20
  41d176:	sete   cl
  41d179:	test   r8d,r8d
  41d17c:	jle    41d1ba <flatcc_builder_create_vector@@Base+0x11a>
  41d17e:	or     al,cl
  41d180:	je     41d1ba <flatcc_builder_create_vector@@Base+0x11a>
  41d182:	sub    ebp,r8d
  41d185:	mov    rdi,QWORD PTR [rbx+0x38]
  41d189:	lea    rsi,[rsp+0x18]
  41d18e:	mov    ecx,ebp
  41d190:	call   QWORD PTR [rbx+0x48]
  41d193:	test   eax,eax
  41d195:	jne    41d1f8 <flatcc_builder_create_vector@@Base+0x158>
  41d197:	mov    DWORD PTR [rbx+0xf0],ebp
  41d19d:	mov    eax,ebp
  41d19f:	add    rsp,0x98
  41d1a6:	pop    rbx
  41d1a7:	pop    rbp
  41d1a8:	ret    
  41d1a9:	mov    edx,0x1
  41d1ae:	mov    r8d,0x4
  41d1b4:	test   eax,eax
  41d1b6:	jne    41d13f <flatcc_builder_create_vector@@Base+0x9f>
  41d1b8:	jmp    41d167 <flatcc_builder_create_vector@@Base+0xc7>
  41d1ba:	lea    rdi,[rip+0x9121]        # 4262e2 <flatcc_builder_padding_base@@Base+0x1452>
  41d1c1:	lea    rsi,[rip+0x7f5a]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41d1c8:	lea    rcx,[rip+0x8fd2]        # 4261a1 <flatcc_builder_padding_base@@Base+0x1311>
  41d1cf:	mov    edx,0x287
  41d1d4:	call   404090 <__assert_fail@plt>
  41d1d9:	lea    rdi,[rip+0x88db]        # 425abb <flatcc_builder_padding_base@@Base+0xc2b>
  41d1e0:	lea    rsi,[rip+0x7f3b]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41d1e7:	lea    rcx,[rip+0x88e0]        # 425ace <flatcc_builder_padding_base@@Base+0xc3e>
  41d1ee:	mov    edx,0x555
  41d1f3:	call   404090 <__assert_fail@plt>
  41d1f8:	lea    rdi,[rip+0x90e3]        # 4262e2 <flatcc_builder_padding_base@@Base+0x1452>
  41d1ff:	lea    rsi,[rip+0x7f1c]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41d206:	lea    rcx,[rip+0x8f94]        # 4261a1 <flatcc_builder_padding_base@@Base+0x1311>
  41d20d:	mov    edx,0x28b
  41d212:	call   404090 <__assert_fail@plt>
  41d217:	nop    WORD PTR [rax+rax*1+0x0]

000000000041d220 <flatcc_builder_end_vector@@Base>:
  41d220:	push   rbp
  41d221:	push   rbx
  41d222:	push   rax
  41d223:	mov    rax,QWORD PTR [rdi+0x30]
  41d227:	movzx  ecx,WORD PTR [rax+0xe]
  41d22b:	cmp    ecx,0x4
  41d22e:	jne    41d2ca <flatcc_builder_end_vector@@Base+0xaa>
  41d234:	mov    rbx,rdi
  41d237:	mov    rsi,QWORD PTR [rdi+0x18]
  41d23b:	mov    ecx,DWORD PTR [rax+0x10]
  41d23e:	mov    edx,DWORD PTR [rax+0x14]
  41d241:	movzx  r8d,WORD PTR [rdi+0xea]
  41d249:	mov    r9d,DWORD PTR [rax+0x18]
  41d24d:	call   41d0a0 <flatcc_builder_create_vector@@Base>
  41d252:	mov    ebp,eax
  41d254:	test   eax,eax
  41d256:	je     41d2c1 <flatcc_builder_end_vector@@Base+0xa1>
  41d258:	mov    rdi,QWORD PTR [rbx+0x18]
  41d25c:	mov    edx,DWORD PTR [rbx+0x20]
  41d25f:	xor    esi,esi
  41d261:	call   4040a0 <memset@plt>
  41d266:	mov    rax,QWORD PTR [rbx+0x30]
  41d26a:	mov    ecx,DWORD PTR [rax+0x8]
  41d26d:	mov    DWORD PTR [rbx+0x20],ecx
  41d270:	mov    ecx,DWORD PTR [rax]
  41d272:	mov    DWORD PTR [rbx+0x28],ecx
  41d275:	mov    edx,DWORD PTR [rax+0x4]
  41d278:	mov    rsi,rcx
  41d27b:	add    rsi,QWORD PTR [rbx+0x68]
  41d27f:	mov    QWORD PTR [rbx+0x18],rsi
  41d283:	mov    esi,DWORD PTR [rbx+0x70]
  41d286:	sub    esi,ecx
  41d288:	cmp    esi,edx
  41d28a:	cmova  esi,edx
  41d28d:	mov    DWORD PTR [rbx+0x24],esi
  41d290:	movzx  ecx,WORD PTR [rbx+0xea]
  41d297:	cmp    WORD PTR [rbx+0xe8],cx
  41d29e:	jae    41d2a7 <flatcc_builder_end_vector@@Base+0x87>
  41d2a0:	mov    WORD PTR [rbx+0xe8],cx
  41d2a7:	movzx  ecx,WORD PTR [rax+0xc]
  41d2ab:	mov    WORD PTR [rbx+0xea],cx
  41d2b2:	add    rax,0xffffffffffffffdc
  41d2b6:	mov    QWORD PTR [rbx+0x30],rax
  41d2ba:	add    DWORD PTR [rbx+0x104],0xffffffff
  41d2c1:	mov    eax,ebp
  41d2c3:	add    rsp,0x8
  41d2c7:	pop    rbx
  41d2c8:	pop    rbp
  41d2c9:	ret    
  41d2ca:	lea    rdi,[rip+0x818e]        # 42545f <flatcc_builder_padding_base@@Base+0x5cf>
  41d2d1:	lea    rsi,[rip+0x7e4a]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41d2d8:	lea    rcx,[rip+0x8865]        # 425b44 <flatcc_builder_padding_base@@Base+0xcb4>
  41d2df:	mov    edx,0x578
  41d2e4:	call   404090 <__assert_fail@plt>
  41d2e9:	nop    DWORD PTR [rax+0x0]

000000000041d2f0 <flatcc_builder_vector_count@@Base>:
  41d2f0:	mov    rax,QWORD PTR [rdi+0x30]
  41d2f4:	mov    eax,DWORD PTR [rax+0x14]
  41d2f7:	ret    
  41d2f8:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041d300 <flatcc_builder_vector_edit@@Base>:
  41d300:	mov    rax,QWORD PTR [rdi+0x18]
  41d304:	ret    
  41d305:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d30f:	nop

000000000041d310 <flatcc_builder_create_offset_vector_direct@@Base>:
  41d310:	xor    ecx,ecx
  41d312:	jmp    41d320 <flatcc_builder_create_offset_vector_direct@@Base+0x10>
  41d314:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d31e:	xchg   ax,ax
  41d320:	push   r14
  41d322:	push   rbx
  41d323:	sub    rsp,0x98
  41d32a:	mov    r10,rdx
  41d32d:	xor    ebx,ebx
  41d32f:	test   r10d,0xc0000000
  41d336:	jne    41d48a <flatcc_builder_create_offset_vector_direct@@Base+0x17a>
  41d33c:	mov    r14,rdi
  41d33f:	movzx  edx,WORD PTR [rdi+0xe8]
  41d346:	cmp    edx,0x3
  41d349:	ja     41d355 <flatcc_builder_create_offset_vector_direct@@Base+0x45>
  41d34b:	mov    WORD PTR [r14+0xe8],0x4
  41d355:	lea    r8d,[r10*4+0x0]
  41d35d:	mov    DWORD PTR [rsp+0x4],r10d
  41d362:	mov    ebx,DWORD PTR [r14+0xf0]
  41d369:	mov    r9d,ebx
  41d36c:	and    r9d,0x3
  41d370:	mov    QWORD PTR [rsp+0x8],0x4
  41d379:	lea    rdx,[rsp+0x4]
  41d37e:	mov    QWORD PTR [rsp+0x18],rdx
  41d383:	mov    QWORD PTR [rsp+0x20],0x4
  41d38c:	mov    DWORD PTR [rsp+0x10],0x1
  41d394:	test   r8d,r8d
  41d397:	je     41d497 <flatcc_builder_create_offset_vector_direct@@Base+0x187>
  41d39d:	mov    edx,r8d
  41d3a0:	lea    r8,[rdx+0x4]
  41d3a4:	mov    QWORD PTR [rsp+0x8],r8
  41d3a9:	mov    QWORD PTR [rsp+0x28],rsi
  41d3ae:	mov    QWORD PTR [rsp+0x30],rdx
  41d3b3:	mov    DWORD PTR [rsp+0x10],0x2
  41d3bb:	mov    edx,0x2
  41d3c0:	test   r9d,r9d
  41d3c3:	je     41d3eb <flatcc_builder_create_offset_vector_direct@@Base+0xdb>
  41d3c5:	add    r8,r9
  41d3c8:	mov    QWORD PTR [rsp+0x8],r8
  41d3cd:	mov    edi,edx
  41d3cf:	shl    rdi,0x4
  41d3d3:	lea    rax,[rip+0x7ab6]        # 424e90 <flatcc_builder_padding_base@@Base>
  41d3da:	mov    QWORD PTR [rsp+rdi*1+0x18],rax
  41d3df:	mov    QWORD PTR [rsp+rdi*1+0x20],r9
  41d3e4:	add    edx,0x1
  41d3e7:	mov    DWORD PTR [rsp+0x10],edx
  41d3eb:	test   r10d,r10d
  41d3ee:	je     41d446 <flatcc_builder_create_offset_vector_direct@@Base+0x136>
  41d3f0:	mov    edi,0xfffffffc
  41d3f5:	sub    edi,ebx
  41d3f7:	add    edi,r8d
  41d3fa:	mov    r9d,r10d
  41d3fd:	xor    ebx,ebx
  41d3ff:	nop
  41d400:	mov    eax,DWORD PTR [rsi+rbx*4]
  41d403:	test   eax,eax
  41d405:	je     41d420 <flatcc_builder_create_offset_vector_direct@@Base+0x110>
  41d407:	add    eax,edi
  41d409:	mov    DWORD PTR [rsi+rbx*4],eax
  41d40c:	test   rcx,rcx
  41d40f:	je     41d433 <flatcc_builder_create_offset_vector_direct@@Base+0x123>
  41d411:	cmp    BYTE PTR [rcx+rbx*1],0x0
  41d415:	jne    41d433 <flatcc_builder_create_offset_vector_direct@@Base+0x123>
  41d417:	jmp    41d4b0 <flatcc_builder_create_offset_vector_direct@@Base+0x1a0>
  41d41c:	nop    DWORD PTR [rax+0x0]
  41d420:	test   rcx,rcx
  41d423:	je     41d4cf <flatcc_builder_create_offset_vector_direct@@Base+0x1bf>
  41d429:	cmp    BYTE PTR [rcx+rbx*1],0x0
  41d42d:	jne    41d4ee <flatcc_builder_create_offset_vector_direct@@Base+0x1de>
  41d433:	add    rbx,0x1
  41d437:	add    edi,0xfffffffc
  41d43a:	cmp    rbx,r9
  41d43d:	jb     41d400 <flatcc_builder_create_offset_vector_direct@@Base+0xf0>
  41d43f:	mov    ebx,DWORD PTR [r14+0xf0]
  41d446:	cmp    r8,0x11
  41d44a:	setb   al
  41d44d:	lea    rcx,[r8-0x10]
  41d451:	shr    rcx,0x20
  41d455:	sete   cl
  41d458:	test   r8d,r8d
  41d45b:	jle    41d50d <flatcc_builder_create_offset_vector_direct@@Base+0x1fd>
  41d461:	or     al,cl
  41d463:	je     41d50d <flatcc_builder_create_offset_vector_direct@@Base+0x1fd>
  41d469:	sub    ebx,r8d
  41d46c:	mov    rdi,QWORD PTR [r14+0x38]
  41d470:	lea    rsi,[rsp+0x18]
  41d475:	mov    ecx,ebx
  41d477:	call   QWORD PTR [r14+0x48]
  41d47b:	test   eax,eax
  41d47d:	jne    41d52c <flatcc_builder_create_offset_vector_direct@@Base+0x21c>
  41d483:	mov    DWORD PTR [r14+0xf0],ebx
  41d48a:	mov    eax,ebx
  41d48c:	add    rsp,0x98
  41d493:	pop    rbx
  41d494:	pop    r14
  41d496:	ret    
  41d497:	mov    edx,0x1
  41d49c:	mov    r8d,0x4
  41d4a2:	test   r9d,r9d
  41d4a5:	jne    41d3c5 <flatcc_builder_create_offset_vector_direct@@Base+0xb5>
  41d4ab:	jmp    41d3eb <flatcc_builder_create_offset_vector_direct@@Base+0xdb>
  41d4b0:	lea    rdi,[rip+0x8e1f]        # 4262d6 <flatcc_builder_padding_base@@Base+0x1446>
  41d4b7:	lea    rsi,[rip+0x7c64]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41d4be:	lea    rcx,[rip+0x8e1f]        # 4262e4 <flatcc_builder_padding_base@@Base+0x1454>
  41d4c5:	mov    edx,0x5b1
  41d4ca:	call   404090 <__assert_fail@plt>
  41d4cf:	lea    rdi,[rip+0x8e0c]        # 4262e2 <flatcc_builder_padding_base@@Base+0x1452>
  41d4d6:	lea    rsi,[rip+0x7c45]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41d4dd:	lea    rcx,[rip+0x8e00]        # 4262e4 <flatcc_builder_padding_base@@Base+0x1454>
  41d4e4:	mov    edx,0x5b7
  41d4e9:	call   404090 <__assert_fail@plt>
  41d4ee:	lea    rdi,[rip+0x8e72]        # 426367 <flatcc_builder_padding_base@@Base+0x14d7>
  41d4f5:	lea    rsi,[rip+0x7c26]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41d4fc:	lea    rcx,[rip+0x8de1]        # 4262e4 <flatcc_builder_padding_base@@Base+0x1454>
  41d503:	mov    edx,0x5b5
  41d508:	call   404090 <__assert_fail@plt>
  41d50d:	lea    rdi,[rip+0x8dce]        # 4262e2 <flatcc_builder_padding_base@@Base+0x1452>
  41d514:	lea    rsi,[rip+0x7c07]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41d51b:	lea    rcx,[rip+0x8c7f]        # 4261a1 <flatcc_builder_padding_base@@Base+0x1311>
  41d522:	mov    edx,0x287
  41d527:	call   404090 <__assert_fail@plt>
  41d52c:	lea    rdi,[rip+0x8daf]        # 4262e2 <flatcc_builder_padding_base@@Base+0x1452>
  41d533:	lea    rsi,[rip+0x7be8]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41d53a:	lea    rcx,[rip+0x8c60]        # 4261a1 <flatcc_builder_padding_base@@Base+0x1311>
  41d541:	mov    edx,0x28b
  41d546:	call   404090 <__assert_fail@plt>
  41d54b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041d550 <flatcc_builder_end_offset_vector_for_unions@@Base>:
  41d550:	push   rbp
  41d551:	push   rbx
  41d552:	push   rax
  41d553:	mov    rcx,QWORD PTR [rdi+0x30]
  41d557:	movzx  edx,WORD PTR [rcx+0xe]
  41d55b:	cmp    edx,0x5
  41d55e:	jne    41d5f1 <flatcc_builder_end_offset_vector_for_unions@@Base+0xa1>
  41d564:	mov    rax,rsi
  41d567:	mov    rbx,rdi
  41d56a:	mov    rsi,QWORD PTR [rdi+0x18]
  41d56e:	mov    edx,DWORD PTR [rcx+0x14]
  41d571:	mov    rcx,rax
  41d574:	call   41d320 <flatcc_builder_create_offset_vector_direct@@Base+0x10>
  41d579:	mov    ebp,eax
  41d57b:	test   eax,eax
  41d57d:	je     41d5e8 <flatcc_builder_end_offset_vector_for_unions@@Base+0x98>
  41d57f:	mov    rdi,QWORD PTR [rbx+0x18]
  41d583:	mov    edx,DWORD PTR [rbx+0x20]
  41d586:	xor    esi,esi
  41d588:	call   4040a0 <memset@plt>
  41d58d:	mov    rax,QWORD PTR [rbx+0x30]
  41d591:	mov    ecx,DWORD PTR [rax+0x8]
  41d594:	mov    DWORD PTR [rbx+0x20],ecx
  41d597:	mov    ecx,DWORD PTR [rax]
  41d599:	mov    DWORD PTR [rbx+0x28],ecx
  41d59c:	mov    edx,DWORD PTR [rax+0x4]
  41d59f:	mov    rsi,rcx
  41d5a2:	add    rsi,QWORD PTR [rbx+0x68]
  41d5a6:	mov    QWORD PTR [rbx+0x18],rsi
  41d5aa:	mov    esi,DWORD PTR [rbx+0x70]
  41d5ad:	sub    esi,ecx
  41d5af:	cmp    esi,edx
  41d5b1:	cmova  esi,edx
  41d5b4:	mov    DWORD PTR [rbx+0x24],esi
  41d5b7:	movzx  ecx,WORD PTR [rbx+0xea]
  41d5be:	cmp    WORD PTR [rbx+0xe8],cx
  41d5c5:	jae    41d5ce <flatcc_builder_end_offset_vector_for_unions@@Base+0x7e>
  41d5c7:	mov    WORD PTR [rbx+0xe8],cx
  41d5ce:	movzx  ecx,WORD PTR [rax+0xc]
  41d5d2:	mov    WORD PTR [rbx+0xea],cx
  41d5d9:	add    rax,0xffffffffffffffdc
  41d5dd:	mov    QWORD PTR [rbx+0x30],rax
  41d5e1:	add    DWORD PTR [rbx+0x104],0xffffffff
  41d5e8:	mov    eax,ebp
  41d5ea:	add    rsp,0x8
  41d5ee:	pop    rbx
  41d5ef:	pop    rbp
  41d5f0:	ret    
  41d5f1:	lea    rdi,[rip+0x7f60]        # 425558 <flatcc_builder_padding_base@@Base+0x6c8>
  41d5f8:	lea    rsi,[rip+0x7b23]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41d5ff:	lea    rcx,[rip+0x85cb]        # 425bd1 <flatcc_builder_padding_base@@Base+0xd41>
  41d606:	mov    edx,0x5d5
  41d60b:	call   404090 <__assert_fail@plt>

000000000041d610 <flatcc_builder_offset_vector_edit@@Base>:
  41d610:	mov    rax,QWORD PTR [rdi+0x18]
  41d614:	ret    
  41d615:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d61f:	nop

000000000041d620 <flatcc_builder_offset_vector_count@@Base>:
  41d620:	mov    rax,QWORD PTR [rdi+0x30]
  41d624:	mov    eax,DWORD PTR [rax+0x14]
  41d627:	ret    
  41d628:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041d630 <flatcc_builder_table_add_union@@Base>:
  41d630:	push   rbp
  41d631:	push   r15
  41d633:	push   r14
  41d635:	push   rbx
  41d636:	push   rax
  41d637:	mov    rax,QWORD PTR [rdi+0x30]
  41d63b:	movzx  eax,WORD PTR [rax+0xe]
  41d63f:	cmp    eax,0x3
  41d642:	jne    41d6a1 <flatcc_builder_table_add_union@@Base+0x71>
  41d644:	mov    r14,rdx
  41d647:	mov    ebp,esi
  41d649:	mov    r15,rdi
  41d64c:	mov    rbx,rdx
  41d64f:	shr    rbx,0x20
  41d653:	test   r14b,r14b
  41d656:	jne    41d65c <flatcc_builder_table_add_union@@Base+0x2c>
  41d658:	test   ebx,ebx
  41d65a:	jne    41d6c0 <flatcc_builder_table_add_union@@Base+0x90>
  41d65c:	test   ebx,ebx
  41d65e:	je     41d675 <flatcc_builder_table_add_union@@Base+0x45>
  41d660:	mov    rdi,r15
  41d663:	mov    esi,ebp
  41d665:	call   41d720 <flatcc_builder_table_add_offset@@Base>
  41d66a:	test   rax,rax
  41d66d:	je     41d6fe <flatcc_builder_table_add_union@@Base+0xce>
  41d673:	mov    DWORD PTR [rax],ebx
  41d675:	add    ebp,0xffffffff
  41d678:	mov    edx,0x1
  41d67d:	mov    ecx,0x1
  41d682:	mov    rdi,r15
  41d685:	mov    esi,ebp
  41d687:	call   41d880 <flatcc_builder_table_add@@Base>
  41d68c:	test   rax,rax
  41d68f:	je     41d6df <flatcc_builder_table_add_union@@Base+0xaf>
  41d691:	mov    BYTE PTR [rax],r14b
  41d694:	xor    eax,eax
  41d696:	add    rsp,0x8
  41d69a:	pop    rbx
  41d69b:	pop    r14
  41d69d:	pop    r15
  41d69f:	pop    rbp
  41d6a0:	ret    
  41d6a1:	lea    rdi,[rip+0x82a9]        # 425951 <flatcc_builder_padding_base@@Base+0xac1>
  41d6a8:	lea    rsi,[rip+0x7a73]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41d6af:	lea    rcx,[rip+0x858d]        # 425c43 <flatcc_builder_padding_base@@Base+0xdb3>
  41d6b6:	mov    edx,0x5ee
  41d6bb:	call   404090 <__assert_fail@plt>
  41d6c0:	lea    rdi,[rip+0x85d4]        # 425c9b <flatcc_builder_padding_base@@Base+0xe0b>
  41d6c7:	lea    rsi,[rip+0x7a54]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41d6ce:	lea    rcx,[rip+0x856e]        # 425c43 <flatcc_builder_padding_base@@Base+0xdb3>
  41d6d5:	mov    edx,0x5ef
  41d6da:	call   404090 <__assert_fail@plt>
  41d6df:	lea    rdi,[rip+0x85e1]        # 425cc7 <flatcc_builder_padding_base@@Base+0xe37>
  41d6e6:	lea    rsi,[rip+0x7a35]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41d6ed:	lea    rcx,[rip+0x854f]        # 425c43 <flatcc_builder_padding_base@@Base+0xdb3>
  41d6f4:	mov    edx,0x5f6
  41d6f9:	call   404090 <__assert_fail@plt>
  41d6fe:	lea    rdi,[rip+0x85b8]        # 425cbd <flatcc_builder_padding_base@@Base+0xe2d>
  41d705:	lea    rsi,[rip+0x7a16]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41d70c:	lea    rcx,[rip+0x8530]        # 425c43 <flatcc_builder_padding_base@@Base+0xdb3>
  41d713:	mov    edx,0x5f2
  41d718:	call   404090 <__assert_fail@plt>
  41d71d:	nop    DWORD PTR [rax]

000000000041d720 <flatcc_builder_table_add_offset@@Base>:
  41d720:	push   rbp
  41d721:	push   r15
  41d723:	push   r14
  41d725:	push   rbx
  41d726:	push   rax
  41d727:	mov    rax,QWORD PTR [rdi+0x30]
  41d72b:	movzx  eax,WORD PTR [rax+0xe]
  41d72f:	cmp    eax,0x3
  41d732:	jne    41d81e <flatcc_builder_table_add_offset@@Base+0xfe>
  41d738:	mov    r14d,esi
  41d73b:	cmp    esi,0x7ffd
  41d741:	jae    41d83d <flatcc_builder_table_add_offset@@Base+0x11d>
  41d747:	mov    rbx,rdi
  41d74a:	mov    rax,QWORD PTR [rdi+0x8]
  41d74e:	movsxd rcx,r14d
  41d751:	cmp    WORD PTR [rax+rcx*2],0x0
  41d756:	jne    41d85c <flatcc_builder_table_add_offset@@Base+0x13c>
  41d75c:	mov    ecx,DWORD PTR [rbx+0x14]
  41d75f:	xor    ecx,r14d
  41d762:	imul   ecx,ecx,0x9e3779b1
  41d768:	xor    ecx,0x4
  41d76b:	imul   ecx,ecx,0x9e3779b1
  41d771:	mov    DWORD PTR [rbx+0x14],ecx
  41d774:	mov    ebp,DWORD PTR [rbx+0x20]
  41d777:	mov    ecx,DWORD PTR [rbx+0x24]
  41d77a:	add    ebp,0x3
  41d77d:	and    ebp,0xfffffffc
  41d780:	lea    r15,[rbp+0x4]
  41d784:	mov    DWORD PTR [rbx+0x20],r15d
  41d788:	cmp    ecx,r15d
  41d78b:	jae    41d7e7 <flatcc_builder_table_add_offset@@Base+0xc7>
  41d78d:	lea    eax,[rbp+0x4]
  41d790:	lea    rsi,[rbx+0x68]
  41d794:	mov    rdi,QWORD PTR [rbx+0x40]
  41d798:	mov    edx,DWORD PTR [rbx+0x28]
  41d79b:	add    rdx,rax
  41d79e:	mov    ecx,0x1
  41d7a3:	mov    r8d,0x1
  41d7a9:	call   QWORD PTR [rbx+0x50]
  41d7ac:	test   eax,eax
  41d7ae:	je     41d7b4 <flatcc_builder_table_add_offset@@Base+0x94>
  41d7b0:	xor    ebp,ebp
  41d7b2:	jmp    41d810 <flatcc_builder_table_add_offset@@Base+0xf0>
  41d7b4:	mov    eax,DWORD PTR [rbx+0x28]
  41d7b7:	mov    rcx,rax
  41d7ba:	add    rcx,QWORD PTR [rbx+0x68]
  41d7be:	mov    QWORD PTR [rbx+0x18],rcx
  41d7c2:	mov    ecx,DWORD PTR [rbx+0x70]
  41d7c5:	sub    ecx,eax
  41d7c7:	cmp    ecx,0xfffc
  41d7cd:	mov    eax,0xfffc
  41d7d2:	cmovb  eax,ecx
  41d7d5:	mov    DWORD PTR [rbx+0x24],eax
  41d7d8:	mov    rax,QWORD PTR [rbx+0x30]
  41d7dc:	mov    DWORD PTR [rax+0x4],0xfffc
  41d7e3:	mov    rax,QWORD PTR [rbx+0x8]
  41d7e7:	movzx  ecx,r14w
  41d7eb:	mov    WORD PTR [rax+rcx*2],r15w
  41d7f0:	cmp    WORD PTR [rbx+0x10],cx
  41d7f4:	ja     41d7ff <flatcc_builder_table_add_offset@@Base+0xdf>
  41d7f6:	add    r14d,0x1
  41d7fa:	mov    WORD PTR [rbx+0x10],r14w
  41d7ff:	mov    rax,QWORD PTR [rbx]
  41d802:	lea    rcx,[rax+0x2]
  41d806:	mov    QWORD PTR [rbx],rcx
  41d809:	mov    WORD PTR [rax],bp
  41d80c:	add    rbp,QWORD PTR [rbx+0x18]
  41d810:	mov    rax,rbp
  41d813:	add    rsp,0x8
  41d817:	pop    rbx
  41d818:	pop    r14
  41d81a:	pop    r15
  41d81c:	pop    rbp
  41d81d:	ret    
  41d81e:	lea    rdi,[rip+0x812c]        # 425951 <flatcc_builder_padding_base@@Base+0xac1>
  41d825:	lea    rsi,[rip+0x78f6]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41d82c:	lea    rcx,[rip+0x8812]        # 426045 <flatcc_builder_padding_base@@Base+0x11b5>
  41d833:	mov    edx,0x713
  41d838:	call   404090 <__assert_fail@plt>
  41d83d:	lea    rdi,[rip+0x8781]        # 425fc5 <flatcc_builder_padding_base@@Base+0x1135>
  41d844:	lea    rsi,[rip+0x78d7]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41d84b:	lea    rcx,[rip+0x87f3]        # 426045 <flatcc_builder_padding_base@@Base+0x11b5>
  41d852:	mov    edx,0x714
  41d857:	call   404090 <__assert_fail@plt>
  41d85c:	lea    rdi,[rip+0x8a7f]        # 4262e2 <flatcc_builder_padding_base@@Base+0x1452>
  41d863:	lea    rsi,[rip+0x78b8]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41d86a:	lea    rcx,[rip+0x87d4]        # 426045 <flatcc_builder_padding_base@@Base+0x11b5>
  41d871:	mov    edx,0x71b
  41d876:	call   404090 <__assert_fail@plt>
  41d87b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041d880 <flatcc_builder_table_add@@Base>:
  41d880:	push   rbp
  41d881:	push   r14
  41d883:	push   rbx
  41d884:	mov    rax,QWORD PTR [rdi+0x30]
  41d888:	movzx  eax,WORD PTR [rax+0xe]
  41d88c:	cmp    eax,0x3
  41d88f:	jne    41d97c <flatcc_builder_table_add@@Base+0xfc>
  41d895:	mov    r14d,esi
  41d898:	cmp    esi,0x7ffd
  41d89e:	jae    41d99b <flatcc_builder_table_add@@Base+0x11b>
  41d8a4:	mov    rbx,rdi
  41d8a7:	cmp    WORD PTR [rdi+0xea],cx
  41d8ae:	jae    41d8b7 <flatcc_builder_table_add@@Base+0x37>
  41d8b0:	mov    WORD PTR [rbx+0xea],cx
  41d8b7:	mov    rsi,QWORD PTR [rbx+0x8]
  41d8bb:	movsxd rax,r14d
  41d8be:	cmp    WORD PTR [rsi+rax*2],0x0
  41d8c3:	jne    41d9ba <flatcc_builder_table_add@@Base+0x13a>
  41d8c9:	mov    eax,DWORD PTR [rbx+0x14]
  41d8cc:	xor    eax,r14d
  41d8cf:	imul   eax,eax,0x9e3779b1
  41d8d5:	xor    eax,edx
  41d8d7:	imul   eax,eax,0x9e3779b1
  41d8dd:	mov    DWORD PTR [rbx+0x14],eax
  41d8e0:	mov    eax,DWORD PTR [rbx+0x20]
  41d8e3:	movzx  ebp,cx
  41d8e6:	lea    eax,[rax+rbp*1]
  41d8e9:	add    eax,0xffffffff
  41d8ec:	neg    ebp
  41d8ee:	and    ebp,eax
  41d8f0:	add    edx,ebp
  41d8f2:	mov    DWORD PTR [rbx+0x20],edx
  41d8f5:	cmp    edx,DWORD PTR [rbx+0x24]
  41d8f8:	jb     41d957 <flatcc_builder_table_add@@Base+0xd7>
  41d8fa:	add    edx,0x1
  41d8fd:	lea    rsi,[rbx+0x68]
  41d901:	mov    rdi,QWORD PTR [rbx+0x40]
  41d905:	mov    eax,DWORD PTR [rbx+0x28]
  41d908:	add    rax,rdx
  41d90b:	mov    ecx,0x1
  41d910:	mov    r8d,0x1
  41d916:	mov    rdx,rax
  41d919:	call   QWORD PTR [rbx+0x50]
  41d91c:	test   eax,eax
  41d91e:	je     41d924 <flatcc_builder_table_add@@Base+0xa4>
  41d920:	xor    eax,eax
  41d922:	jmp    41d977 <flatcc_builder_table_add@@Base+0xf7>
  41d924:	mov    eax,DWORD PTR [rbx+0x28]
  41d927:	mov    rcx,rax
  41d92a:	add    rcx,QWORD PTR [rbx+0x68]
  41d92e:	mov    QWORD PTR [rbx+0x18],rcx
  41d932:	mov    ecx,DWORD PTR [rbx+0x70]
  41d935:	sub    ecx,eax
  41d937:	cmp    ecx,0xfffc
  41d93d:	mov    eax,0xfffc
  41d942:	cmovb  eax,ecx
  41d945:	mov    DWORD PTR [rbx+0x24],eax
  41d948:	mov    rax,QWORD PTR [rbx+0x30]
  41d94c:	mov    DWORD PTR [rax+0x4],0xfffc
  41d953:	mov    rsi,QWORD PTR [rbx+0x8]
  41d957:	mov    eax,ebp
  41d959:	add    ebp,0x4
  41d95c:	movzx  ecx,r14w
  41d960:	mov    WORD PTR [rsi+rcx*2],bp
  41d964:	cmp    WORD PTR [rbx+0x10],cx
  41d968:	ja     41d973 <flatcc_builder_table_add@@Base+0xf3>
  41d96a:	add    r14d,0x1
  41d96e:	mov    WORD PTR [rbx+0x10],r14w
  41d973:	add    rax,QWORD PTR [rbx+0x18]
  41d977:	pop    rbx
  41d978:	pop    r14
  41d97a:	pop    rbp
  41d97b:	ret    
  41d97c:	lea    rdi,[rip+0x7fce]        # 425951 <flatcc_builder_padding_base@@Base+0xac1>
  41d983:	lea    rsi,[rip+0x7798]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41d98a:	lea    rcx,[rip+0x85ea]        # 425f7b <flatcc_builder_padding_base@@Base+0x10eb>
  41d991:	mov    edx,0x6ed
  41d996:	call   404090 <__assert_fail@plt>
  41d99b:	lea    rdi,[rip+0x8623]        # 425fc5 <flatcc_builder_padding_base@@Base+0x1135>
  41d9a2:	lea    rsi,[rip+0x7779]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41d9a9:	lea    rcx,[rip+0x85cb]        # 425f7b <flatcc_builder_padding_base@@Base+0x10eb>
  41d9b0:	mov    edx,0x6ee
  41d9b5:	call   404090 <__assert_fail@plt>
  41d9ba:	lea    rdi,[rip+0x8921]        # 4262e2 <flatcc_builder_padding_base@@Base+0x1452>
  41d9c1:	lea    rsi,[rip+0x775a]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41d9c8:	lea    rcx,[rip+0x85ac]        # 425f7b <flatcc_builder_padding_base@@Base+0x10eb>
  41d9cf:	mov    edx,0x6f8
  41d9d4:	call   404090 <__assert_fail@plt>
  41d9d9:	nop    DWORD PTR [rax+0x0]

000000000041d9e0 <flatcc_builder_table_add_union_vector@@Base>:
  41d9e0:	push   r15
  41d9e2:	push   r14
  41d9e4:	push   r12
  41d9e6:	push   rbx
  41d9e7:	push   rax
  41d9e8:	mov    rax,QWORD PTR [rdi+0x30]
  41d9ec:	movzx  eax,WORD PTR [rax+0xe]
  41d9f0:	cmp    eax,0x3
  41d9f3:	jne    41da49 <flatcc_builder_table_add_union_vector@@Base+0x69>
  41d9f5:	mov    rbx,rdx
  41d9f8:	mov    r12,rdx
  41d9fb:	shr    r12,0x20
  41d9ff:	test   ebx,ebx
  41da01:	sete   al
  41da04:	test   r12d,r12d
  41da07:	sete   cl
  41da0a:	cmp    al,cl
  41da0c:	jne    41da68 <flatcc_builder_table_add_union_vector@@Base+0x88>
  41da0e:	test   ebx,ebx
  41da10:	je     41da3b <flatcc_builder_table_add_union_vector@@Base+0x5b>
  41da12:	mov    r14d,esi
  41da15:	mov    r15,rdi
  41da18:	lea    esi,[r14-0x1]
  41da1c:	call   41d720 <flatcc_builder_table_add_offset@@Base>
  41da21:	test   rax,rax
  41da24:	je     41da87 <flatcc_builder_table_add_union_vector@@Base+0xa7>
  41da26:	mov    DWORD PTR [rax],ebx
  41da28:	mov    rdi,r15
  41da2b:	mov    esi,r14d
  41da2e:	call   41d720 <flatcc_builder_table_add_offset@@Base>
  41da33:	test   rax,rax
  41da36:	je     41daa6 <flatcc_builder_table_add_union_vector@@Base+0xc6>
  41da38:	mov    DWORD PTR [rax],r12d
  41da3b:	xor    eax,eax
  41da3d:	add    rsp,0x8
  41da41:	pop    rbx
  41da42:	pop    r12
  41da44:	pop    r14
  41da46:	pop    r15
  41da48:	ret    
  41da49:	lea    rdi,[rip+0x7f01]        # 425951 <flatcc_builder_padding_base@@Base+0xac1>
  41da50:	lea    rsi,[rip+0x76cb]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41da57:	lea    rcx,[rip+0x8275]        # 425cd3 <flatcc_builder_padding_base@@Base+0xe43>
  41da5e:	mov    edx,0x600
  41da63:	call   404090 <__assert_fail@plt>
  41da68:	lea    rdi,[rip+0x82c7]        # 425d36 <flatcc_builder_padding_base@@Base+0xea6>
  41da6f:	lea    rsi,[rip+0x76ac]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41da76:	lea    rcx,[rip+0x8256]        # 425cd3 <flatcc_builder_padding_base@@Base+0xe43>
  41da7d:	mov    edx,0x601
  41da82:	call   404090 <__assert_fail@plt>
  41da87:	lea    rdi,[rip+0x822f]        # 425cbd <flatcc_builder_padding_base@@Base+0xe2d>
  41da8e:	lea    rsi,[rip+0x768d]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41da95:	lea    rcx,[rip+0x8237]        # 425cd3 <flatcc_builder_padding_base@@Base+0xe43>
  41da9c:	mov    edx,0x604
  41daa1:	call   404090 <__assert_fail@plt>
  41daa6:	lea    rdi,[rip+0x8210]        # 425cbd <flatcc_builder_padding_base@@Base+0xe2d>
  41daad:	lea    rsi,[rip+0x766e]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41dab4:	lea    rcx,[rip+0x8218]        # 425cd3 <flatcc_builder_padding_base@@Base+0xe43>
  41dabb:	mov    edx,0x608
  41dac0:	call   404090 <__assert_fail@plt>
  41dac5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41dacf:	nop

000000000041dad0 <flatcc_builder_create_union_vector@@Base>:
  41dad0:	push   r15
  41dad2:	push   r14
  41dad4:	push   r13
  41dad6:	push   r12
  41dad8:	push   rbx
  41dad9:	mov    r14,rdx
  41dadc:	mov    r15,rsi
  41dadf:	mov    rbx,rdi
  41dae2:	mov    esi,0x4
  41dae7:	call   41b310 <flatcc_builder_start_buffer@@Base+0xe0>
  41daec:	test   eax,eax
  41daee:	je     41db00 <flatcc_builder_create_union_vector@@Base+0x30>
  41daf0:	xor    r14d,r14d
  41daf3:	mov    rax,r14
  41daf6:	pop    rbx
  41daf7:	pop    r12
  41daf9:	pop    r13
  41dafb:	pop    r14
  41dafd:	pop    r15
  41daff:	ret    
  41db00:	mov    rax,QWORD PTR [rbx+0x30]
  41db04:	mov    DWORD PTR [rax+0x10],0x4
  41db0b:	mov    rax,QWORD PTR [rbx+0x30]
  41db0f:	mov    DWORD PTR [rax+0x14],0x0
  41db16:	mov    rax,QWORD PTR [rbx+0x30]
  41db1a:	mov    WORD PTR [rax+0xe],0x5
  41db20:	mov    ecx,DWORD PTR [rbx+0x28]
  41db23:	mov    edx,DWORD PTR [rbx+0x70]
  41db26:	sub    edx,ecx
  41db28:	add    rcx,QWORD PTR [rbx+0x68]
  41db2c:	mov    QWORD PTR [rbx+0x18],rcx
  41db30:	cmp    edx,0xfffffffc
  41db33:	mov    ecx,0xfffffffc
  41db38:	cmovb  ecx,edx
  41db3b:	mov    DWORD PTR [rbx+0x24],ecx
  41db3e:	mov    DWORD PTR [rax+0x4],0xfffffffc
  41db45:	mov    ecx,DWORD PTR [rax+0x14]
  41db48:	add    ecx,r14d
  41db4b:	jb     41ddba <flatcc_builder_create_union_vector@@Base+0x2ea>
  41db51:	cmp    ecx,0x40000000
  41db57:	jae    41ddba <flatcc_builder_create_union_vector@@Base+0x2ea>
  41db5d:	mov    DWORD PTR [rax+0x14],ecx
  41db60:	mov    r12d,DWORD PTR [rbx+0x20]
  41db64:	mov    eax,DWORD PTR [rbx+0x24]
  41db67:	lea    ecx,[r12+r14*4]
  41db6b:	mov    DWORD PTR [rbx+0x20],ecx
  41db6e:	cmp    ecx,eax
  41db70:	jae    41db80 <flatcc_builder_create_union_vector@@Base+0xb0>
  41db72:	mov    rsi,QWORD PTR [rbx+0x18]
  41db76:	add    r12,rsi
  41db79:	jne    41dbdc <flatcc_builder_create_union_vector@@Base+0x10c>
  41db7b:	jmp    41daf0 <flatcc_builder_create_union_vector@@Base+0x20>
  41db80:	add    ecx,0x1
  41db83:	lea    rsi,[rbx+0x68]
  41db87:	mov    rdi,QWORD PTR [rbx+0x40]
  41db8b:	mov    edx,DWORD PTR [rbx+0x28]
  41db8e:	add    rdx,rcx
  41db91:	mov    ecx,0x1
  41db96:	mov    r8d,0x1
  41db9c:	call   QWORD PTR [rbx+0x50]
  41db9f:	test   eax,eax
  41dba1:	jne    41daf0 <flatcc_builder_create_union_vector@@Base+0x20>
  41dba7:	mov    eax,DWORD PTR [rbx+0x28]
  41dbaa:	mov    rsi,rax
  41dbad:	add    rsi,QWORD PTR [rbx+0x68]
  41dbb1:	mov    QWORD PTR [rbx+0x18],rsi
  41dbb5:	mov    ecx,DWORD PTR [rbx+0x70]
  41dbb8:	sub    ecx,eax
  41dbba:	cmp    ecx,0xfffffffc
  41dbbd:	mov    eax,0xfffffffc
  41dbc2:	cmovb  eax,ecx
  41dbc5:	mov    DWORD PTR [rbx+0x24],eax
  41dbc8:	mov    rcx,QWORD PTR [rbx+0x30]
  41dbcc:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  41dbd3:	add    r12,rsi
  41dbd6:	je     41daf0 <flatcc_builder_create_union_vector@@Base+0x20>
  41dbdc:	mov    r13d,DWORD PTR [rbx+0x20]
  41dbe0:	lea    ecx,[r14+r13*1]
  41dbe4:	mov    DWORD PTR [rbx+0x20],ecx
  41dbe7:	cmp    ecx,eax
  41dbe9:	jb     41dc3e <flatcc_builder_create_union_vector@@Base+0x16e>
  41dbeb:	add    ecx,0x1
  41dbee:	lea    rsi,[rbx+0x68]
  41dbf2:	mov    rdi,QWORD PTR [rbx+0x40]
  41dbf6:	mov    edx,DWORD PTR [rbx+0x28]
  41dbf9:	add    rdx,rcx
  41dbfc:	mov    ecx,0x1
  41dc01:	mov    r8d,0x1
  41dc07:	call   QWORD PTR [rbx+0x50]
  41dc0a:	test   eax,eax
  41dc0c:	jne    41daf0 <flatcc_builder_create_union_vector@@Base+0x20>
  41dc12:	mov    eax,DWORD PTR [rbx+0x28]
  41dc15:	mov    rsi,rax
  41dc18:	add    rsi,QWORD PTR [rbx+0x68]
  41dc1c:	mov    QWORD PTR [rbx+0x18],rsi
  41dc20:	mov    ecx,DWORD PTR [rbx+0x70]
  41dc23:	sub    ecx,eax
  41dc25:	cmp    ecx,0xfffffffc
  41dc28:	mov    eax,0xfffffffc
  41dc2d:	cmovb  eax,ecx
  41dc30:	mov    DWORD PTR [rbx+0x24],eax
  41dc33:	mov    rax,QWORD PTR [rbx+0x30]
  41dc37:	mov    DWORD PTR [rax+0x4],0xfffffffc
  41dc3e:	mov    r12,rsi
  41dc41:	add    r12,r13
  41dc44:	je     41daf0 <flatcc_builder_create_union_vector@@Base+0x20>
  41dc4a:	test   r14,r14
  41dc4d:	je     41dd09 <flatcc_builder_create_union_vector@@Base+0x239>
  41dc53:	lea    rcx,[r14-0x1]
  41dc57:	mov    r8d,r14d
  41dc5a:	and    r8d,0x3
  41dc5e:	cmp    rcx,0x3
  41dc62:	jae    41dc70 <flatcc_builder_create_union_vector@@Base+0x1a0>
  41dc64:	xor    ecx,ecx
  41dc66:	test   r8,r8
  41dc69:	jne    41dcd7 <flatcc_builder_create_union_vector@@Base+0x207>
  41dc6b:	jmp    41dd09 <flatcc_builder_create_union_vector@@Base+0x239>
  41dc70:	mov    rdx,r14
  41dc73:	sub    rdx,r8
  41dc76:	lea    rdi,[rsi+r13*1]
  41dc7a:	add    rdi,0x3
  41dc7e:	xor    ecx,ecx
  41dc80:	movzx  eax,BYTE PTR [r15+rcx*8]
  41dc85:	mov    BYTE PTR [rdi+rcx*1-0x3],al
  41dc89:	mov    eax,DWORD PTR [r15+rcx*8+0x4]
  41dc8e:	mov    DWORD PTR [rsi+rcx*4],eax
  41dc91:	movzx  eax,BYTE PTR [r15+rcx*8+0x8]
  41dc97:	mov    BYTE PTR [rdi+rcx*1-0x2],al
  41dc9b:	mov    eax,DWORD PTR [r15+rcx*8+0xc]
  41dca0:	mov    DWORD PTR [rsi+rcx*4+0x4],eax
  41dca4:	movzx  eax,BYTE PTR [r15+rcx*8+0x10]
  41dcaa:	mov    BYTE PTR [rdi+rcx*1-0x1],al
  41dcae:	mov    eax,DWORD PTR [r15+rcx*8+0x14]
  41dcb3:	mov    DWORD PTR [rsi+rcx*4+0x8],eax
  41dcb7:	movzx  eax,BYTE PTR [r15+rcx*8+0x18]
  41dcbd:	mov    BYTE PTR [rdi+rcx*1],al
  41dcc0:	mov    eax,DWORD PTR [r15+rcx*8+0x1c]
  41dcc5:	mov    DWORD PTR [rsi+rcx*4+0xc],eax
  41dcc9:	add    rcx,0x4
  41dccd:	cmp    rdx,rcx
  41dcd0:	jne    41dc80 <flatcc_builder_create_union_vector@@Base+0x1b0>
  41dcd2:	test   r8,r8
  41dcd5:	je     41dd09 <flatcc_builder_create_union_vector@@Base+0x239>
  41dcd7:	lea    rdx,[rsi+rcx*4]
  41dcdb:	lea    rdi,[r15+rcx*8]
  41dcdf:	add    rdi,0x4
  41dce3:	add    r13,rcx
  41dce6:	add    r13,rsi
  41dce9:	xor    ecx,ecx
  41dceb:	nop    DWORD PTR [rax+rax*1+0x0]
  41dcf0:	movzx  eax,BYTE PTR [rdi+rcx*8-0x4]
  41dcf5:	mov    BYTE PTR [r13+rcx*1+0x0],al
  41dcfa:	mov    eax,DWORD PTR [rdi+rcx*8]
  41dcfd:	mov    DWORD PTR [rdx+rcx*4],eax
  41dd00:	add    rcx,0x1
  41dd04:	cmp    r8,rcx
  41dd07:	jne    41dcf0 <flatcc_builder_create_union_vector@@Base+0x220>
  41dd09:	mov    rdi,rbx
  41dd0c:	mov    rdx,r14
  41dd0f:	mov    rcx,r12
  41dd12:	call   41d320 <flatcc_builder_create_offset_vector_direct@@Base+0x10>
  41dd17:	mov    r15d,eax
  41dd1a:	test   eax,eax
  41dd1c:	je     41dd42 <flatcc_builder_create_union_vector@@Base+0x272>
  41dd1e:	mov    ecx,0x1
  41dd23:	mov    r8d,0x1
  41dd29:	mov    r9d,0xffffffff
  41dd2f:	mov    rdi,rbx
  41dd32:	mov    rsi,r12
  41dd35:	mov    rdx,r14
  41dd38:	call   41d0a0 <flatcc_builder_create_vector@@Base>
  41dd3d:	mov    r14d,eax
  41dd40:	jmp    41dd45 <flatcc_builder_create_union_vector@@Base+0x275>
  41dd42:	xor    r14d,r14d
  41dd45:	shl    r15,0x20
  41dd49:	mov    rdi,QWORD PTR [rbx+0x18]
  41dd4d:	mov    edx,DWORD PTR [rbx+0x20]
  41dd50:	xor    esi,esi
  41dd52:	call   4040a0 <memset@plt>
  41dd57:	mov    rax,QWORD PTR [rbx+0x30]
  41dd5b:	mov    ecx,DWORD PTR [rax+0x8]
  41dd5e:	mov    DWORD PTR [rbx+0x20],ecx
  41dd61:	mov    ecx,DWORD PTR [rax]
  41dd63:	mov    DWORD PTR [rbx+0x28],ecx
  41dd66:	mov    edx,DWORD PTR [rax+0x4]
  41dd69:	mov    rsi,rcx
  41dd6c:	add    rsi,QWORD PTR [rbx+0x68]
  41dd70:	mov    QWORD PTR [rbx+0x18],rsi
  41dd74:	mov    esi,DWORD PTR [rbx+0x70]
  41dd77:	sub    esi,ecx
  41dd79:	cmp    esi,edx
  41dd7b:	cmova  esi,edx
  41dd7e:	mov    DWORD PTR [rbx+0x24],esi
  41dd81:	movzx  ecx,WORD PTR [rbx+0xea]
  41dd88:	cmp    WORD PTR [rbx+0xe8],cx
  41dd8f:	jae    41dd98 <flatcc_builder_create_union_vector@@Base+0x2c8>
  41dd91:	mov    WORD PTR [rbx+0xe8],cx
  41dd98:	or     r14,r15
  41dd9b:	movzx  ecx,WORD PTR [rax+0xc]
  41dd9f:	mov    WORD PTR [rbx+0xea],cx
  41dda6:	add    rax,0xffffffffffffffdc
  41ddaa:	mov    QWORD PTR [rbx+0x30],rax
  41ddae:	add    DWORD PTR [rbx+0x104],0xffffffff
  41ddb5:	jmp    41daf3 <flatcc_builder_create_union_vector@@Base+0x23>
  41ddba:	lea    rdi,[rip+0x842a]        # 4261eb <flatcc_builder_padding_base@@Base+0x135b>
  41ddc1:	lea    rsi,[rip+0x735a]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41ddc8:	lea    rcx,[rip+0x8437]        # 426206 <flatcc_builder_padding_base@@Base+0x1376>
  41ddcf:	mov    edx,0x37c
  41ddd4:	call   404090 <__assert_fail@plt>
  41ddd9:	nop    DWORD PTR [rax+0x0]

000000000041dde0 <flatcc_builder_create_union_vector_direct@@Base>:
  41dde0:	push   r15
  41dde2:	push   r14
  41dde4:	push   r12
  41dde6:	push   rbx
  41dde7:	push   rax
  41dde8:	mov    r14,rcx
  41ddeb:	mov    r15,rsi
  41ddee:	mov    r12,rdi
  41ddf1:	mov    rsi,rdx
  41ddf4:	mov    rdx,rcx
  41ddf7:	mov    rcx,r15
  41ddfa:	call   41d320 <flatcc_builder_create_offset_vector_direct@@Base+0x10>
  41ddff:	mov    ebx,eax
  41de01:	test   eax,eax
  41de03:	je     41de28 <flatcc_builder_create_union_vector_direct@@Base+0x48>
  41de05:	mov    ecx,0x1
  41de0a:	mov    r8d,0x1
  41de10:	mov    r9d,0xffffffff
  41de16:	mov    rdi,r12
  41de19:	mov    rsi,r15
  41de1c:	mov    rdx,r14
  41de1f:	call   41d0a0 <flatcc_builder_create_vector@@Base>
  41de24:	mov    eax,eax
  41de26:	jmp    41de2a <flatcc_builder_create_union_vector_direct@@Base+0x4a>
  41de28:	xor    eax,eax
  41de2a:	shl    rbx,0x20
  41de2e:	or     rbx,rax
  41de31:	mov    rax,rbx
  41de34:	add    rsp,0x8
  41de38:	pop    rbx
  41de39:	pop    r12
  41de3b:	pop    r14
  41de3d:	pop    r15
  41de3f:	ret    

000000000041de40 <flatcc_builder_start_union_vector@@Base>:
  41de40:	push   rbx
  41de41:	mov    rbx,rdi
  41de44:	mov    esi,0x4
  41de49:	call   41b310 <flatcc_builder_start_buffer@@Base+0xe0>
  41de4e:	mov    ecx,eax
  41de50:	mov    eax,0xffffffff
  41de55:	test   ecx,ecx
  41de57:	je     41de5b <flatcc_builder_start_union_vector@@Base+0x1b>
  41de59:	pop    rbx
  41de5a:	ret    
  41de5b:	mov    rax,QWORD PTR [rbx+0x30]
  41de5f:	mov    DWORD PTR [rax+0x10],0x8
  41de66:	mov    rax,QWORD PTR [rbx+0x30]
  41de6a:	mov    DWORD PTR [rax+0x14],0x0
  41de71:	mov    rax,QWORD PTR [rbx+0x30]
  41de75:	mov    WORD PTR [rax+0xe],0x7
  41de7b:	mov    ecx,DWORD PTR [rbx+0x28]
  41de7e:	mov    edx,DWORD PTR [rbx+0x70]
  41de81:	sub    edx,ecx
  41de83:	add    rcx,QWORD PTR [rbx+0x68]
  41de87:	mov    QWORD PTR [rbx+0x18],rcx
  41de8b:	cmp    edx,0xfffffffc
  41de8e:	mov    ecx,0xfffffffc
  41de93:	cmovb  ecx,edx
  41de96:	mov    DWORD PTR [rbx+0x24],ecx
  41de99:	mov    DWORD PTR [rax+0x4],0xfffffffc
  41dea0:	xor    eax,eax
  41dea2:	pop    rbx
  41dea3:	ret    
  41dea4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41deae:	xchg   ax,ax

000000000041deb0 <flatcc_builder_end_union_vector@@Base>:
  41deb0:	push   rbp
  41deb1:	push   r15
  41deb3:	push   r14
  41deb5:	push   r13
  41deb7:	push   r12
  41deb9:	push   rbx
  41deba:	push   rax
  41debb:	mov    rax,QWORD PTR [rdi+0x30]
  41debf:	movzx  ecx,WORD PTR [rax+0xe]
  41dec3:	cmp    ecx,0x7
  41dec6:	jne    41e2c6 <flatcc_builder_end_union_vector@@Base+0x416>
  41decc:	mov    r13,rdi
  41decf:	mov    r14d,DWORD PTR [rax+0x14]
  41ded3:	lea    eax,[r14+r14*4]
  41ded7:	mov    r12d,DWORD PTR [rdi+0x20]
  41dedb:	add    eax,r12d
  41dede:	mov    DWORD PTR [rdi+0x20],eax
  41dee1:	cmp    eax,DWORD PTR [rdi+0x24]
  41dee4:	jae    41deec <flatcc_builder_end_union_vector@@Base+0x3c>
  41dee6:	mov    r8,QWORD PTR [r13+0x18]
  41deea:	jmp    41df44 <flatcc_builder_end_union_vector@@Base+0x94>
  41deec:	add    eax,0x1
  41deef:	lea    rsi,[r13+0x68]
  41def3:	mov    rdi,QWORD PTR [r13+0x40]
  41def7:	mov    edx,DWORD PTR [r13+0x28]
  41defb:	add    rdx,rax
  41defe:	mov    ecx,0x1
  41df03:	mov    r8d,0x1
  41df09:	call   QWORD PTR [r13+0x50]
  41df0d:	test   eax,eax
  41df0f:	jne    41e086 <flatcc_builder_end_union_vector@@Base+0x1d6>
  41df15:	mov    eax,DWORD PTR [r13+0x28]
  41df19:	mov    r8,rax
  41df1c:	add    r8,QWORD PTR [r13+0x68]
  41df20:	mov    QWORD PTR [r13+0x18],r8
  41df24:	mov    ecx,DWORD PTR [r13+0x70]
  41df28:	sub    ecx,eax
  41df2a:	cmp    ecx,0xfffffffc
  41df2d:	mov    eax,0xfffffffc
  41df32:	cmovb  eax,ecx
  41df35:	mov    DWORD PTR [r13+0x24],eax
  41df39:	mov    rax,QWORD PTR [r13+0x30]
  41df3d:	mov    DWORD PTR [rax+0x4],0xfffffffc
  41df44:	mov    rsi,r8
  41df47:	add    rsi,r12
  41df4a:	je     41e086 <flatcc_builder_end_union_vector@@Base+0x1d6>
  41df50:	lea    r15,[rsi+r14*4]
  41df54:	test   r14d,r14d
  41df57:	je     41e04a <flatcc_builder_end_union_vector@@Base+0x19a>
  41df5d:	cmp    r14d,0x9
  41df61:	jae    41e11a <flatcc_builder_end_union_vector@@Base+0x26a>
  41df67:	xor    r9d,r9d
  41df6a:	mov    r11d,r14d
  41df6d:	sub    r11d,r9d
  41df70:	mov    r10,r9
  41df73:	not    r10
  41df76:	add    r10,r14
  41df79:	and    r11,0x3
  41df7d:	je     41dfc2 <flatcc_builder_end_union_vector@@Base+0x112>
  41df7f:	mov    rdx,r9
  41df82:	neg    rdx
  41df85:	lea    rbp,[r12+r9*4]
  41df89:	add    rbp,r8
  41df8c:	lea    rbx,[r8+r9*8]
  41df90:	add    rbx,0x4
  41df94:	lea    rax,[r9+r14*4]
  41df98:	add    rax,r12
  41df9b:	add    rax,r8
  41df9e:	xor    edi,edi
  41dfa0:	movzx  ecx,BYTE PTR [rbx+rdi*8-0x4]
  41dfa5:	mov    BYTE PTR [rax+rdi*1],cl
  41dfa8:	mov    ecx,DWORD PTR [rbx+rdi*8]
  41dfab:	mov    DWORD PTR [rbp+rdi*4+0x0],ecx
  41dfaf:	add    rdx,0xffffffffffffffff
  41dfb3:	add    rdi,0x1
  41dfb7:	cmp    r11,rdi
  41dfba:	jne    41dfa0 <flatcc_builder_end_union_vector@@Base+0xf0>
  41dfbc:	neg    rdx
  41dfbf:	mov    r9,rdx
  41dfc2:	cmp    r10,0x3
  41dfc6:	jb     41e04a <flatcc_builder_end_union_vector@@Base+0x19a>
  41dfcc:	mov    rbp,r14
  41dfcf:	sub    rbp,r9
  41dfd2:	lea    rcx,[r12+r9*4]
  41dfd6:	lea    rdx,[r8+rcx*1]
  41dfda:	add    rdx,0xc
  41dfde:	lea    rdi,[r8+r9*8]
  41dfe2:	add    rdi,0x1c
  41dfe6:	lea    rcx,[r9+r14*4]
  41dfea:	add    rcx,r12
  41dfed:	add    rcx,r8
  41dff0:	add    rcx,0x3
  41dff4:	xor    ebx,ebx
  41dff6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e000:	movzx  eax,BYTE PTR [rdi+rbx*8-0x1c]
  41e005:	mov    BYTE PTR [rcx+rbx*1-0x3],al
  41e009:	mov    eax,DWORD PTR [rdi+rbx*8-0x18]
  41e00d:	mov    DWORD PTR [rdx+rbx*4-0xc],eax
  41e011:	movzx  eax,BYTE PTR [rdi+rbx*8-0x14]
  41e016:	mov    BYTE PTR [rcx+rbx*1-0x2],al
  41e01a:	mov    eax,DWORD PTR [rdi+rbx*8-0x10]
  41e01e:	mov    DWORD PTR [rdx+rbx*4-0x8],eax
  41e022:	movzx  eax,BYTE PTR [rdi+rbx*8-0xc]
  41e027:	mov    BYTE PTR [rcx+rbx*1-0x1],al
  41e02b:	mov    eax,DWORD PTR [rdi+rbx*8-0x8]
  41e02f:	mov    DWORD PTR [rdx+rbx*4-0x4],eax
  41e033:	movzx  eax,BYTE PTR [rdi+rbx*8-0x4]
  41e038:	mov    BYTE PTR [rcx+rbx*1],al
  41e03b:	mov    eax,DWORD PTR [rdi+rbx*8]
  41e03e:	mov    DWORD PTR [rdx+rbx*4],eax
  41e041:	add    rbx,0x4
  41e045:	cmp    rbp,rbx
  41e048:	jne    41e000 <flatcc_builder_end_union_vector@@Base+0x150>
  41e04a:	mov    rdi,r13
  41e04d:	mov    rdx,r14
  41e050:	mov    rcx,r15
  41e053:	vzeroupper 
  41e056:	call   41d320 <flatcc_builder_create_offset_vector_direct@@Base+0x10>
  41e05b:	mov    r12d,eax
  41e05e:	test   eax,eax
  41e060:	je     41e08b <flatcc_builder_end_union_vector@@Base+0x1db>
  41e062:	mov    ecx,0x1
  41e067:	mov    r8d,0x1
  41e06d:	mov    r9d,0xffffffff
  41e073:	mov    rdi,r13
  41e076:	mov    rsi,r15
  41e079:	mov    rdx,r14
  41e07c:	call   41d0a0 <flatcc_builder_create_vector@@Base>
  41e081:	mov    r14d,eax
  41e084:	jmp    41e08e <flatcc_builder_end_union_vector@@Base+0x1de>
  41e086:	xor    r14d,r14d
  41e089:	jmp    41e108 <flatcc_builder_end_union_vector@@Base+0x258>
  41e08b:	xor    r14d,r14d
  41e08e:	shl    r12,0x20
  41e092:	mov    rdi,QWORD PTR [r13+0x18]
  41e096:	mov    edx,DWORD PTR [r13+0x20]
  41e09a:	xor    esi,esi
  41e09c:	call   4040a0 <memset@plt>
  41e0a1:	mov    rax,QWORD PTR [r13+0x30]
  41e0a5:	mov    ecx,DWORD PTR [rax+0x8]
  41e0a8:	mov    DWORD PTR [r13+0x20],ecx
  41e0ac:	mov    ecx,DWORD PTR [rax]
  41e0ae:	mov    DWORD PTR [r13+0x28],ecx
  41e0b2:	mov    edx,DWORD PTR [rax+0x4]
  41e0b5:	mov    rsi,rcx
  41e0b8:	add    rsi,QWORD PTR [r13+0x68]
  41e0bc:	mov    QWORD PTR [r13+0x18],rsi
  41e0c0:	mov    esi,DWORD PTR [r13+0x70]
  41e0c4:	sub    esi,ecx
  41e0c6:	cmp    esi,edx
  41e0c8:	cmova  esi,edx
  41e0cb:	mov    DWORD PTR [r13+0x24],esi
  41e0cf:	movzx  ecx,WORD PTR [r13+0xea]
  41e0d7:	cmp    WORD PTR [r13+0xe8],cx
  41e0df:	jae    41e0e9 <flatcc_builder_end_union_vector@@Base+0x239>
  41e0e1:	mov    WORD PTR [r13+0xe8],cx
  41e0e9:	or     r14,r12
  41e0ec:	movzx  ecx,WORD PTR [rax+0xc]
  41e0f0:	mov    WORD PTR [r13+0xea],cx
  41e0f8:	add    rax,0xffffffffffffffdc
  41e0fc:	mov    QWORD PTR [r13+0x30],rax
  41e100:	add    DWORD PTR [r13+0x104],0xffffffff
  41e108:	mov    rax,r14
  41e10b:	add    rsp,0x8
  41e10f:	pop    rbx
  41e110:	pop    r12
  41e112:	pop    r13
  41e114:	pop    r14
  41e116:	pop    r15
  41e118:	pop    rbp
  41e119:	ret    
  41e11a:	lea    rax,[r14-0x1]
  41e11e:	mov    ecx,0x8
  41e123:	mul    rcx
  41e126:	seto   cl
  41e129:	lea    rdi,[r8+0x4]
  41e12d:	mov    rdx,rax
  41e130:	add    rdx,rdi
  41e133:	setb   dl
  41e136:	xor    r9d,r9d
  41e139:	add    rax,r8
  41e13c:	jb     41df6a <flatcc_builder_end_union_vector@@Base+0xba>
  41e142:	test   cl,cl
  41e144:	jne    41df6a <flatcc_builder_end_union_vector@@Base+0xba>
  41e14a:	test   dl,dl
  41e14c:	jne    41df6a <flatcc_builder_end_union_vector@@Base+0xba>
  41e152:	test   cl,cl
  41e154:	jne    41df6a <flatcc_builder_end_union_vector@@Base+0xba>
  41e15a:	lea    rcx,[r14+r14*4]
  41e15e:	add    rcx,r12
  41e161:	add    rcx,r8
  41e164:	lea    rdx,[r8+r14*8]
  41e168:	add    rdx,0xfffffffffffffff9
  41e16c:	cmp    rdx,r15
  41e16f:	seta   r11b
  41e173:	lea    rbx,[r8+r14*8]
  41e177:	cmp    r8,rcx
  41e17a:	setb   r10b
  41e17e:	cmp    rbx,r15
  41e181:	seta   al
  41e184:	cmp    rdi,rcx
  41e187:	setb   bpl
  41e18b:	cmp    rsi,rdx
  41e18e:	setb   cl
  41e191:	cmp    r8,r15
  41e194:	setb   BYTE PTR [rsp+0x7]
  41e199:	cmp    rsi,rbx
  41e19c:	setb   dl
  41e19f:	cmp    rdi,r15
  41e1a2:	setb   dil
  41e1a6:	xor    r9d,r9d
  41e1a9:	test   r11b,r10b
  41e1ac:	jne    41df6a <flatcc_builder_end_union_vector@@Base+0xba>
  41e1b2:	and    al,bpl
  41e1b5:	jne    41df6a <flatcc_builder_end_union_vector@@Base+0xba>
  41e1bb:	and    cl,BYTE PTR [rsp+0x7]
  41e1bf:	jne    41df6a <flatcc_builder_end_union_vector@@Base+0xba>
  41e1c5:	and    dl,dil
  41e1c8:	jne    41df6a <flatcc_builder_end_union_vector@@Base+0xba>
  41e1ce:	mov    eax,r14d
  41e1d1:	and    eax,0x7
  41e1d4:	test   rax,rax
  41e1d7:	mov    ecx,0x8
  41e1dc:	cmovne rcx,rax
  41e1e0:	mov    r9,r14
  41e1e3:	sub    r9,rcx
  41e1e6:	vmovdqa ymm0,YMMWORD PTR [rip+0x6eb2]        # 4250a0 <flatcc_builder_padding_base@@Base+0x210>
  41e1ee:	vmovdqa ymm1,YMMWORD PTR [rip+0x6eca]        # 4250c0 <flatcc_builder_padding_base@@Base+0x230>
  41e1f6:	xor    eax,eax
  41e1f8:	vmovdqa xmm8,XMMWORD PTR [rip+0x6ee0]        # 4250e0 <flatcc_builder_padding_base@@Base+0x250>
  41e200:	vmovdqa xmm9,XMMWORD PTR [rip+0x6ee8]        # 4250f0 <flatcc_builder_padding_base@@Base+0x260>
  41e208:	vpbroadcastq ymm4,QWORD PTR [rip+0x6eef]        # 425100 <flatcc_builder_padding_base@@Base+0x270>
  41e211:	vpbroadcastq ymm5,QWORD PTR [rip+0x6eee]        # 425108 <flatcc_builder_padding_base@@Base+0x278>
  41e21a:	mov    rdi,r8
  41e21d:	nop    DWORD PTR [rax]
  41e220:	vmovdqu ymm6,YMMWORD PTR [rdi]
  41e224:	vmovdqu ymm7,YMMWORD PTR [rdi+0x20]
  41e229:	vextracti128 xmm2,ymm7,0x1
  41e22f:	vpshufb xmm2,xmm2,xmm8
  41e234:	vpshufb xmm7,xmm7,xmm8
  41e239:	vpunpcklwd xmm2,xmm7,xmm2
  41e23d:	vextracti128 xmm7,ymm6,0x1
  41e243:	vpshufb xmm7,xmm7,xmm9
  41e248:	vpshufb xmm6,xmm6,xmm9
  41e24d:	vpunpcklwd xmm6,xmm6,xmm7
  41e251:	vpblendd xmm2,xmm6,xmm2,0x2
  41e257:	vmovq  QWORD PTR [r15+rax*1],xmm2
  41e25d:	vpsllq ymm2,ymm1,0x3
  41e262:	vmovq  xmm6,r8
  41e267:	vpbroadcastq ymm6,xmm6
  41e26c:	vpaddq ymm2,ymm6,ymm2
  41e270:	vpaddq ymm2,ymm2,ymm4
  41e274:	vpsllq ymm7,ymm0,0x3
  41e279:	vpaddq ymm6,ymm6,ymm7
  41e27d:	vpaddq ymm6,ymm6,ymm4
  41e281:	vpcmpeqd xmm7,xmm7,xmm7
  41e285:	vpgatherqd xmm3,DWORD PTR [ymm6*1+0x0],xmm7
  41e28f:	vpcmpeqd xmm6,xmm6,xmm6
  41e293:	vpgatherqd xmm7,DWORD PTR [ymm2*1+0x0],xmm6
  41e29d:	vinserti128 ymm2,ymm7,xmm3,0x1
  41e2a3:	vmovdqu YMMWORD PTR [rsi+rax*4],ymm2
  41e2a8:	add    rax,0x8
  41e2ac:	vpaddq ymm1,ymm1,ymm5
  41e2b0:	vpaddq ymm0,ymm0,ymm5
  41e2b4:	add    rdi,0x40
  41e2b8:	cmp    r9,rax
  41e2bb:	jne    41e220 <flatcc_builder_end_union_vector@@Base+0x370>
  41e2c1:	jmp    41df6a <flatcc_builder_end_union_vector@@Base+0xba>
  41e2c6:	lea    rdi,[rip+0x7a91]        # 425d5e <flatcc_builder_padding_base@@Base+0xece>
  41e2cd:	lea    rsi,[rip+0x6e4e]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41e2d4:	lea    rcx,[rip+0x7ab5]        # 425d90 <flatcc_builder_padding_base@@Base+0xf00>
  41e2db:	mov    edx,0x651
  41e2e0:	call   404090 <__assert_fail@plt>
  41e2e5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e2ef:	nop

000000000041e2f0 <flatcc_builder_union_vector_count@@Base>:
  41e2f0:	mov    rax,QWORD PTR [rdi+0x30]
  41e2f4:	mov    eax,DWORD PTR [rax+0x14]
  41e2f7:	ret    
  41e2f8:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041e300 <flatcc_builder_union_vector_edit@@Base>:
  41e300:	mov    rax,QWORD PTR [rdi+0x18]
  41e304:	ret    
  41e305:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e30f:	nop

000000000041e310 <flatcc_builder_extend_union_vector@@Base>:
  41e310:	push   r14
  41e312:	push   rbx
  41e313:	push   rax
  41e314:	mov    rax,QWORD PTR [rdi+0x30]
  41e318:	mov    ecx,DWORD PTR [rax+0x14]
  41e31b:	add    ecx,esi
  41e31d:	jb     41e3a5 <flatcc_builder_extend_union_vector@@Base+0x95>
  41e323:	cmp    ecx,0x20000000
  41e329:	jae    41e3a5 <flatcc_builder_extend_union_vector@@Base+0x95>
  41e32b:	mov    rbx,rdi
  41e32e:	mov    DWORD PTR [rax+0x14],ecx
  41e331:	mov    r14d,DWORD PTR [rdi+0x20]
  41e335:	lea    eax,[r14+rsi*8]
  41e339:	mov    DWORD PTR [rdi+0x20],eax
  41e33c:	cmp    eax,DWORD PTR [rdi+0x24]
  41e33f:	jae    41e347 <flatcc_builder_extend_union_vector@@Base+0x37>
  41e341:	mov    rax,QWORD PTR [rbx+0x18]
  41e345:	jmp    41e39a <flatcc_builder_extend_union_vector@@Base+0x8a>
  41e347:	add    eax,0x1
  41e34a:	lea    rsi,[rbx+0x68]
  41e34e:	mov    rdi,QWORD PTR [rbx+0x40]
  41e352:	mov    edx,DWORD PTR [rbx+0x28]
  41e355:	add    rdx,rax
  41e358:	mov    ecx,0x1
  41e35d:	mov    r8d,0x1
  41e363:	call   QWORD PTR [rbx+0x50]
  41e366:	test   eax,eax
  41e368:	je     41e36e <flatcc_builder_extend_union_vector@@Base+0x5e>
  41e36a:	xor    eax,eax
  41e36c:	jmp    41e39d <flatcc_builder_extend_union_vector@@Base+0x8d>
  41e36e:	mov    ecx,DWORD PTR [rbx+0x28]
  41e371:	mov    rax,rcx
  41e374:	add    rax,QWORD PTR [rbx+0x68]
  41e378:	mov    QWORD PTR [rbx+0x18],rax
  41e37c:	mov    edx,DWORD PTR [rbx+0x70]
  41e37f:	sub    edx,ecx
  41e381:	cmp    edx,0xfffffffc
  41e384:	mov    ecx,0xfffffffc
  41e389:	cmovb  ecx,edx
  41e38c:	mov    DWORD PTR [rbx+0x24],ecx
  41e38f:	mov    rcx,QWORD PTR [rbx+0x30]
  41e393:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  41e39a:	add    rax,r14
  41e39d:	add    rsp,0x8
  41e3a1:	pop    rbx
  41e3a2:	pop    r14
  41e3a4:	ret    
  41e3a5:	lea    rdi,[rip+0x7e3f]        # 4261eb <flatcc_builder_padding_base@@Base+0x135b>
  41e3ac:	lea    rsi,[rip+0x6d6f]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41e3b3:	lea    rcx,[rip+0x7e4c]        # 426206 <flatcc_builder_padding_base@@Base+0x1376>
  41e3ba:	mov    edx,0x37c
  41e3bf:	call   404090 <__assert_fail@plt>
  41e3c4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e3ce:	xchg   ax,ax

000000000041e3d0 <flatcc_builder_truncate_union_vector@@Base>:
  41e3d0:	push   rax
  41e3d1:	mov    rcx,QWORD PTR [rdi+0x30]
  41e3d5:	movzx  edx,WORD PTR [rcx+0xe]
  41e3d9:	cmp    edx,0x7
  41e3dc:	jne    41e410 <flatcc_builder_truncate_union_vector@@Base+0x40>
  41e3de:	mov    rax,rsi
  41e3e1:	mov    edx,DWORD PTR [rcx+0x14]
  41e3e4:	sub    edx,eax
  41e3e6:	jb     41e42f <flatcc_builder_truncate_union_vector@@Base+0x5f>
  41e3e8:	mov    DWORD PTR [rcx+0x14],edx
  41e3eb:	mov    rcx,QWORD PTR [rdi+0x30]
  41e3ef:	imul   eax,DWORD PTR [rcx+0x10]
  41e3f3:	mov    ecx,DWORD PTR [rdi+0x20]
  41e3f6:	sub    ecx,eax
  41e3f8:	mov    DWORD PTR [rdi+0x20],ecx
  41e3fb:	add    rcx,QWORD PTR [rdi+0x18]
  41e3ff:	xor    esi,esi
  41e401:	mov    rdi,rcx
  41e404:	mov    rdx,rax
  41e407:	call   4040a0 <memset@plt>
  41e40c:	xor    eax,eax
  41e40e:	pop    rcx
  41e40f:	ret    
  41e410:	lea    rdi,[rip+0x7947]        # 425d5e <flatcc_builder_padding_base@@Base+0xece>
  41e417:	lea    rsi,[rip+0x6d04]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41e41e:	lea    rcx,[rip+0x79be]        # 425de3 <flatcc_builder_padding_base@@Base+0xf53>
  41e425:	mov    edx,0x681
  41e42a:	call   404090 <__assert_fail@plt>
  41e42f:	lea    rdi,[rip+0x738c]        # 4257c2 <flatcc_builder_padding_base@@Base+0x932>
  41e436:	lea    rsi,[rip+0x6ce5]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41e43d:	lea    rcx,[rip+0x799f]        # 425de3 <flatcc_builder_padding_base@@Base+0xf53>
  41e444:	mov    edx,0x682
  41e449:	call   404090 <__assert_fail@plt>
  41e44e:	xchg   ax,ax

000000000041e450 <flatcc_builder_union_vector_push@@Base>:
  41e450:	push   r15
  41e452:	push   r14
  41e454:	push   rbx
  41e455:	mov    rax,QWORD PTR [rdi+0x30]
  41e459:	movzx  ecx,WORD PTR [rax+0xe]
  41e45d:	cmp    ecx,0x7
  41e460:	jne    41e4fa <flatcc_builder_union_vector_push@@Base+0xaa>
  41e466:	mov    ecx,DWORD PTR [rax+0x14]
  41e469:	cmp    ecx,0x1fffffff
  41e46f:	je     41e4bc <flatcc_builder_union_vector_push@@Base+0x6c>
  41e471:	mov    r14,rsi
  41e474:	mov    rbx,rdi
  41e477:	add    ecx,0x1
  41e47a:	mov    DWORD PTR [rax+0x14],ecx
  41e47d:	mov    r15d,DWORD PTR [rdi+0x20]
  41e481:	lea    eax,[r15+0x8]
  41e485:	mov    DWORD PTR [rdi+0x20],eax
  41e488:	cmp    eax,DWORD PTR [rdi+0x24]
  41e48b:	jae    41e498 <flatcc_builder_union_vector_push@@Base+0x48>
  41e48d:	mov    rax,QWORD PTR [rbx+0x18]
  41e491:	add    rax,r15
  41e494:	jne    41e4f1 <flatcc_builder_union_vector_push@@Base+0xa1>
  41e496:	jmp    41e4bc <flatcc_builder_union_vector_push@@Base+0x6c>
  41e498:	lea    eax,[r15+0x9]
  41e49c:	lea    rsi,[rbx+0x68]
  41e4a0:	mov    rdi,QWORD PTR [rbx+0x40]
  41e4a4:	mov    edx,DWORD PTR [rbx+0x28]
  41e4a7:	add    rdx,rax
  41e4aa:	mov    ecx,0x1
  41e4af:	mov    r8d,0x1
  41e4b5:	call   QWORD PTR [rbx+0x50]
  41e4b8:	test   eax,eax
  41e4ba:	je     41e4c0 <flatcc_builder_union_vector_push@@Base+0x70>
  41e4bc:	xor    eax,eax
  41e4be:	jmp    41e4f4 <flatcc_builder_union_vector_push@@Base+0xa4>
  41e4c0:	mov    ecx,DWORD PTR [rbx+0x28]
  41e4c3:	mov    rax,rcx
  41e4c6:	add    rax,QWORD PTR [rbx+0x68]
  41e4ca:	mov    QWORD PTR [rbx+0x18],rax
  41e4ce:	mov    edx,DWORD PTR [rbx+0x70]
  41e4d1:	sub    edx,ecx
  41e4d3:	cmp    edx,0xfffffffc
  41e4d6:	mov    ecx,0xfffffffc
  41e4db:	cmovb  ecx,edx
  41e4de:	mov    DWORD PTR [rbx+0x24],ecx
  41e4e1:	mov    rcx,QWORD PTR [rbx+0x30]
  41e4e5:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  41e4ec:	add    rax,r15
  41e4ef:	je     41e4bc <flatcc_builder_union_vector_push@@Base+0x6c>
  41e4f1:	mov    QWORD PTR [rax],r14
  41e4f4:	pop    rbx
  41e4f5:	pop    r14
  41e4f7:	pop    r15
  41e4f9:	ret    
  41e4fa:	lea    rdi,[rip+0x785d]        # 425d5e <flatcc_builder_padding_base@@Base+0xece>
  41e501:	lea    rsi,[rip+0x6c1a]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41e508:	lea    rcx,[rip+0x7919]        # 425e28 <flatcc_builder_padding_base@@Base+0xf98>
  41e50f:	mov    edx,0x68d
  41e514:	call   404090 <__assert_fail@plt>
  41e519:	nop    DWORD PTR [rax+0x0]

000000000041e520 <flatcc_builder_append_union_vector@@Base>:
  41e520:	push   r15
  41e522:	push   r14
  41e524:	push   r13
  41e526:	push   r12
  41e528:	push   rbx
  41e529:	mov    rax,QWORD PTR [rdi+0x30]
  41e52d:	movzx  ecx,WORD PTR [rax+0xe]
  41e531:	cmp    ecx,0x7
  41e534:	jne    41e611 <flatcc_builder_append_union_vector@@Base+0xf1>
  41e53a:	mov    r15,rdx
  41e53d:	mov    ecx,DWORD PTR [rax+0x14]
  41e540:	add    ecx,r15d
  41e543:	jb     41e5f2 <flatcc_builder_append_union_vector@@Base+0xd2>
  41e549:	cmp    ecx,0x20000000
  41e54f:	jae    41e5f2 <flatcc_builder_append_union_vector@@Base+0xd2>
  41e555:	mov    r14,rsi
  41e558:	mov    rbx,rdi
  41e55b:	mov    DWORD PTR [rax+0x14],ecx
  41e55e:	mov    r13d,DWORD PTR [rdi+0x20]
  41e562:	lea    eax,[r13+r15*8+0x0]
  41e567:	mov    DWORD PTR [rdi+0x20],eax
  41e56a:	cmp    eax,DWORD PTR [rdi+0x24]
  41e56d:	jae    41e57a <flatcc_builder_append_union_vector@@Base+0x5a>
  41e56f:	mov    r12,QWORD PTR [rbx+0x18]
  41e573:	add    r12,r13
  41e576:	jne    41e5d3 <flatcc_builder_append_union_vector@@Base+0xb3>
  41e578:	jmp    41e59d <flatcc_builder_append_union_vector@@Base+0x7d>
  41e57a:	add    eax,0x1
  41e57d:	lea    rsi,[rbx+0x68]
  41e581:	mov    rdi,QWORD PTR [rbx+0x40]
  41e585:	mov    edx,DWORD PTR [rbx+0x28]
  41e588:	add    rdx,rax
  41e58b:	mov    ecx,0x1
  41e590:	mov    r8d,0x1
  41e596:	call   QWORD PTR [rbx+0x50]
  41e599:	test   eax,eax
  41e59b:	je     41e5a2 <flatcc_builder_append_union_vector@@Base+0x82>
  41e59d:	xor    r12d,r12d
  41e5a0:	jmp    41e5e5 <flatcc_builder_append_union_vector@@Base+0xc5>
  41e5a2:	mov    eax,DWORD PTR [rbx+0x28]
  41e5a5:	mov    r12,rax
  41e5a8:	add    r12,QWORD PTR [rbx+0x68]
  41e5ac:	mov    QWORD PTR [rbx+0x18],r12
  41e5b0:	mov    ecx,DWORD PTR [rbx+0x70]
  41e5b3:	sub    ecx,eax
  41e5b5:	cmp    ecx,0xfffffffc
  41e5b8:	mov    eax,0xfffffffc
  41e5bd:	cmovb  eax,ecx
  41e5c0:	mov    DWORD PTR [rbx+0x24],eax
  41e5c3:	mov    rax,QWORD PTR [rbx+0x30]
  41e5c7:	mov    DWORD PTR [rax+0x4],0xfffffffc
  41e5ce:	add    r12,r13
  41e5d1:	je     41e59d <flatcc_builder_append_union_vector@@Base+0x7d>
  41e5d3:	shl    r15d,0x3
  41e5d7:	mov    edx,r15d
  41e5da:	mov    rdi,r12
  41e5dd:	mov    rsi,r14
  41e5e0:	call   404100 <memcpy@plt>
  41e5e5:	mov    rax,r12
  41e5e8:	pop    rbx
  41e5e9:	pop    r12
  41e5eb:	pop    r13
  41e5ed:	pop    r14
  41e5ef:	pop    r15
  41e5f1:	ret    
  41e5f2:	lea    rdi,[rip+0x7bf2]        # 4261eb <flatcc_builder_padding_base@@Base+0x135b>
  41e5f9:	lea    rsi,[rip+0x6b22]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41e600:	lea    rcx,[rip+0x7bff]        # 426206 <flatcc_builder_padding_base@@Base+0x1376>
  41e607:	mov    edx,0x37c
  41e60c:	call   404090 <__assert_fail@plt>
  41e611:	lea    rdi,[rip+0x7746]        # 425d5e <flatcc_builder_padding_base@@Base+0xece>
  41e618:	lea    rsi,[rip+0x6b03]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41e61f:	lea    rcx,[rip+0x786f]        # 425e95 <flatcc_builder_padding_base@@Base+0x1005>
  41e626:	mov    edx,0x69c
  41e62b:	call   404090 <__assert_fail@plt>

000000000041e630 <flatcc_builder_create_string@@Base>:
  41e630:	push   rbp
  41e631:	push   rbx
  41e632:	sub    rsp,0x98
  41e639:	xor    ebp,ebp
  41e63b:	mov    rax,rdx
  41e63e:	shr    rax,0x20
  41e642:	jne    41e718 <flatcc_builder_create_string@@Base+0xe8>
  41e648:	mov    rbx,rdi
  41e64b:	mov    DWORD PTR [rsp+0x4],edx
  41e64f:	mov    ebp,DWORD PTR [rdi+0xf0]
  41e655:	mov    eax,edx
  41e657:	not    eax
  41e659:	add    eax,ebp
  41e65b:	and    eax,0x3
  41e65e:	add    eax,0x1
  41e661:	mov    QWORD PTR [rsp+0x8],0x4
  41e66a:	lea    rcx,[rsp+0x4]
  41e66f:	mov    QWORD PTR [rsp+0x18],rcx
  41e674:	mov    QWORD PTR [rsp+0x20],0x4
  41e67d:	mov    DWORD PTR [rsp+0x10],0x1
  41e685:	test   rdx,rdx
  41e688:	je     41e6ac <flatcc_builder_create_string@@Base+0x7c>
  41e68a:	lea    rcx,[rdx+0x4]
  41e68e:	mov    QWORD PTR [rsp+0x8],rcx
  41e693:	mov    QWORD PTR [rsp+0x28],rsi
  41e698:	mov    QWORD PTR [rsp+0x30],rdx
  41e69d:	mov    DWORD PTR [rsp+0x10],0x2
  41e6a5:	mov    edx,0x2
  41e6aa:	jmp    41e6b6 <flatcc_builder_create_string@@Base+0x86>
  41e6ac:	mov    edx,0x1
  41e6b1:	mov    ecx,0x4
  41e6b6:	mov    esi,eax
  41e6b8:	lea    r8,[rcx+rsi*1]
  41e6bc:	mov    QWORD PTR [rsp+0x8],r8
  41e6c1:	mov    eax,edx
  41e6c3:	shl    rax,0x4
  41e6c7:	lea    rdi,[rip+0x67c2]        # 424e90 <flatcc_builder_padding_base@@Base>
  41e6ce:	mov    QWORD PTR [rsp+rax*1+0x18],rdi
  41e6d3:	mov    QWORD PTR [rsp+rax*1+0x20],rsi
  41e6d8:	add    edx,0x1
  41e6db:	mov    DWORD PTR [rsp+0x10],edx
  41e6df:	cmp    r8,0x11
  41e6e3:	setb   al
  41e6e6:	add    rcx,rsi
  41e6e9:	add    rcx,0xfffffffffffffff0
  41e6ed:	shr    rcx,0x20
  41e6f1:	sete   cl
  41e6f4:	test   r8d,r8d
  41e6f7:	jle    41e724 <flatcc_builder_create_string@@Base+0xf4>
  41e6f9:	or     al,cl
  41e6fb:	je     41e724 <flatcc_builder_create_string@@Base+0xf4>
  41e6fd:	sub    ebp,r8d
  41e700:	mov    rdi,QWORD PTR [rbx+0x38]
  41e704:	lea    rsi,[rsp+0x18]
  41e709:	mov    ecx,ebp
  41e70b:	call   QWORD PTR [rbx+0x48]
  41e70e:	test   eax,eax
  41e710:	jne    41e743 <flatcc_builder_create_string@@Base+0x113>
  41e712:	mov    DWORD PTR [rbx+0xf0],ebp
  41e718:	mov    eax,ebp
  41e71a:	add    rsp,0x98
  41e721:	pop    rbx
  41e722:	pop    rbp
  41e723:	ret    
  41e724:	lea    rdi,[rip+0x7bb7]        # 4262e2 <flatcc_builder_padding_base@@Base+0x1452>
  41e72b:	lea    rsi,[rip+0x69f0]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41e732:	lea    rcx,[rip+0x7a68]        # 4261a1 <flatcc_builder_padding_base@@Base+0x1311>
  41e739:	mov    edx,0x287
  41e73e:	call   404090 <__assert_fail@plt>
  41e743:	lea    rdi,[rip+0x7b98]        # 4262e2 <flatcc_builder_padding_base@@Base+0x1452>
  41e74a:	lea    rsi,[rip+0x69d1]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41e751:	lea    rcx,[rip+0x7a49]        # 4261a1 <flatcc_builder_padding_base@@Base+0x1311>
  41e758:	mov    edx,0x28b
  41e75d:	call   404090 <__assert_fail@plt>
  41e762:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e76c:	nop    DWORD PTR [rax+0x0]

000000000041e770 <flatcc_builder_create_string_str@@Base>:
  41e770:	push   r14
  41e772:	push   rbx
  41e773:	push   rax
  41e774:	mov    rbx,rsi
  41e777:	mov    r14,rdi
  41e77a:	mov    rdi,rsi
  41e77d:	call   404070 <strlen@plt>
  41e782:	mov    rdi,r14
  41e785:	mov    rsi,rbx
  41e788:	mov    rdx,rax
  41e78b:	add    rsp,0x8
  41e78f:	pop    rbx
  41e790:	pop    r14
  41e792:	jmp    41e630 <flatcc_builder_create_string@@Base>
  41e797:	nop    WORD PTR [rax+rax*1+0x0]

000000000041e7a0 <flatcc_builder_create_string_strn@@Base>:
  41e7a0:	push   r15
  41e7a2:	push   r14
  41e7a4:	push   rbx
  41e7a5:	mov    rbx,rdx
  41e7a8:	mov    r14,rsi
  41e7ab:	mov    r15,rdi
  41e7ae:	xor    esi,esi
  41e7b0:	mov    rdi,r14
  41e7b3:	call   4040c0 <memchr@plt>
  41e7b8:	mov    rcx,rax
  41e7bb:	sub    rcx,r14
  41e7be:	test   rax,rax
  41e7c1:	cmovne rbx,rcx
  41e7c5:	mov    rdi,r15
  41e7c8:	mov    rsi,r14
  41e7cb:	mov    rdx,rbx
  41e7ce:	pop    rbx
  41e7cf:	pop    r14
  41e7d1:	pop    r15
  41e7d3:	jmp    41e630 <flatcc_builder_create_string@@Base>
  41e7d8:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041e7e0 <flatcc_builder_end_string@@Base>:
  41e7e0:	push   rbp
  41e7e1:	push   rbx
  41e7e2:	push   rax
  41e7e3:	mov    rax,QWORD PTR [rdi+0x30]
  41e7e7:	movzx  ecx,WORD PTR [rax+0xe]
  41e7eb:	cmp    ecx,0x6
  41e7ee:	jne    41e887 <flatcc_builder_end_string@@Base+0xa7>
  41e7f4:	mov    rbx,rdi
  41e7f7:	mov    edx,DWORD PTR [rax+0x14]
  41e7fa:	cmp    edx,DWORD PTR [rdi+0x20]
  41e7fd:	jne    41e8a6 <flatcc_builder_end_string@@Base+0xc6>
  41e803:	mov    rsi,QWORD PTR [rbx+0x18]
  41e807:	mov    rdi,rbx
  41e80a:	call   41e630 <flatcc_builder_create_string@@Base>
  41e80f:	mov    ebp,eax
  41e811:	test   eax,eax
  41e813:	je     41e87e <flatcc_builder_end_string@@Base+0x9e>
  41e815:	mov    rdi,QWORD PTR [rbx+0x18]
  41e819:	mov    edx,DWORD PTR [rbx+0x20]
  41e81c:	xor    esi,esi
  41e81e:	call   4040a0 <memset@plt>
  41e823:	mov    rax,QWORD PTR [rbx+0x30]
  41e827:	mov    ecx,DWORD PTR [rax+0x8]
  41e82a:	mov    DWORD PTR [rbx+0x20],ecx
  41e82d:	mov    ecx,DWORD PTR [rax]
  41e82f:	mov    DWORD PTR [rbx+0x28],ecx
  41e832:	mov    edx,DWORD PTR [rax+0x4]
  41e835:	mov    rsi,rcx
  41e838:	add    rsi,QWORD PTR [rbx+0x68]
  41e83c:	mov    QWORD PTR [rbx+0x18],rsi
  41e840:	mov    esi,DWORD PTR [rbx+0x70]
  41e843:	sub    esi,ecx
  41e845:	cmp    esi,edx
  41e847:	cmova  esi,edx
  41e84a:	mov    DWORD PTR [rbx+0x24],esi
  41e84d:	movzx  ecx,WORD PTR [rbx+0xea]
  41e854:	cmp    WORD PTR [rbx+0xe8],cx
  41e85b:	jae    41e864 <flatcc_builder_end_string@@Base+0x84>
  41e85d:	mov    WORD PTR [rbx+0xe8],cx
  41e864:	movzx  ecx,WORD PTR [rax+0xc]
  41e868:	mov    WORD PTR [rbx+0xea],cx
  41e86f:	add    rax,0xffffffffffffffdc
  41e873:	mov    QWORD PTR [rbx+0x30],rax
  41e877:	add    DWORD PTR [rbx+0x104],0xffffffff
  41e87e:	mov    eax,ebp
  41e880:	add    rsp,0x8
  41e884:	pop    rbx
  41e885:	pop    rbp
  41e886:	ret    
  41e887:	lea    rdi,[rip+0x6dd3]        # 425661 <flatcc_builder_padding_base@@Base+0x7d1>
  41e88e:	lea    rsi,[rip+0x688d]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41e895:	lea    rcx,[rip+0x7678]        # 425f14 <flatcc_builder_padding_base@@Base+0x1084>
  41e89c:	mov    edx,0x6c4
  41e8a1:	call   404090 <__assert_fail@plt>
  41e8a6:	lea    rdi,[rip+0x76aa]        # 425f57 <flatcc_builder_padding_base@@Base+0x10c7>
  41e8ad:	lea    rsi,[rip+0x686e]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41e8b4:	lea    rcx,[rip+0x7659]        # 425f14 <flatcc_builder_padding_base@@Base+0x1084>
  41e8bb:	mov    edx,0x6c5
  41e8c0:	call   404090 <__assert_fail@plt>
  41e8c5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e8cf:	nop

000000000041e8d0 <flatcc_builder_string_edit@@Base>:
  41e8d0:	mov    rax,QWORD PTR [rdi+0x18]
  41e8d4:	ret    
  41e8d5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e8df:	nop

000000000041e8e0 <flatcc_builder_string_len@@Base>:
  41e8e0:	mov    rax,QWORD PTR [rdi+0x30]
  41e8e4:	mov    eax,DWORD PTR [rax+0x14]
  41e8e7:	ret    
  41e8e8:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041e8f0 <flatcc_builder_table_edit@@Base>:
  41e8f0:	mov    rax,QWORD PTR [rdi+0x30]
  41e8f4:	movzx  eax,WORD PTR [rax+0xe]
  41e8f8:	cmp    eax,0x3
  41e8fb:	jne    41e908 <flatcc_builder_table_edit@@Base+0x18>
  41e8fd:	mov    eax,DWORD PTR [rdi+0x20]
  41e900:	add    rax,QWORD PTR [rdi+0x18]
  41e904:	sub    rax,rsi
  41e907:	ret    
  41e908:	push   rax
  41e909:	lea    rdi,[rip+0x7041]        # 425951 <flatcc_builder_padding_base@@Base+0xac1>
  41e910:	lea    rsi,[rip+0x680b]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41e917:	lea    rcx,[rip+0x76eb]        # 426009 <flatcc_builder_padding_base@@Base+0x1179>
  41e91e:	mov    edx,0x702
  41e923:	call   404090 <__assert_fail@plt>
  41e928:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041e930 <flatcc_builder_table_add_copy@@Base>:
  41e930:	push   r15
  41e932:	push   r14
  41e934:	push   rbx
  41e935:	mov    r15,rcx
  41e938:	mov    r14,rdx
  41e93b:	mov    rdx,rcx
  41e93e:	mov    ecx,r8d
  41e941:	call   41d880 <flatcc_builder_table_add@@Base>
  41e946:	mov    rbx,rax
  41e949:	test   rax,rax
  41e94c:	je     41e95c <flatcc_builder_table_add_copy@@Base+0x2c>
  41e94e:	mov    rdi,rbx
  41e951:	mov    rsi,r14
  41e954:	mov    rdx,r15
  41e957:	call   404100 <memcpy@plt>
  41e95c:	mov    rax,rbx
  41e95f:	pop    rbx
  41e960:	pop    r14
  41e962:	pop    r15
  41e964:	ret    
  41e965:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e96f:	nop

000000000041e970 <flatcc_builder_push_buffer_alignment@@Base>:
  41e970:	movzx  eax,WORD PTR [rdi+0xe8]
  41e977:	mov    WORD PTR [rdi+0xe8],0x4
  41e980:	ret    
  41e981:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e98b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041e990 <flatcc_builder_pop_buffer_alignment@@Base>:
  41e990:	cmp    WORD PTR [rdi+0xe8],si
  41e997:	jae    41e9a0 <flatcc_builder_pop_buffer_alignment@@Base+0x10>
  41e999:	mov    WORD PTR [rdi+0xe8],si
  41e9a0:	ret    
  41e9a1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e9ab:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041e9b0 <flatcc_builder_get_buffer_alignment@@Base>:
  41e9b0:	movzx  eax,WORD PTR [rdi+0xe8]
  41e9b7:	ret    
  41e9b8:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041e9c0 <flatcc_builder_set_vtable_clustering@@Base>:
  41e9c0:	xor    eax,eax
  41e9c2:	test   esi,esi
  41e9c4:	sete   al
  41e9c7:	mov    DWORD PTR [rdi+0x124],eax
  41e9cd:	ret    
  41e9ce:	xchg   ax,ax

000000000041e9d0 <flatcc_builder_set_block_align@@Base>:
  41e9d0:	mov    WORD PTR [rdi+0xec],si
  41e9d7:	ret    
  41e9d8:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041e9e0 <flatcc_builder_get_level@@Base>:
  41e9e0:	mov    eax,DWORD PTR [rdi+0x104]
  41e9e6:	ret    
  41e9e7:	nop    WORD PTR [rax+rax*1+0x0]

000000000041e9f0 <flatcc_builder_set_max_level@@Base>:
  41e9f0:	mov    DWORD PTR [rdi+0x120],esi
  41e9f6:	cmp    DWORD PTR [rdi+0x108],esi
  41e9fc:	jge    41ea04 <flatcc_builder_set_max_level@@Base+0x14>
  41e9fe:	mov    DWORD PTR [rdi+0x108],esi
  41ea04:	ret    
  41ea05:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ea0f:	nop

000000000041ea10 <flatcc_builder_get_buffer_size@@Base>:
  41ea10:	movsxd rax,DWORD PTR [rdi+0xf4]
  41ea17:	movsxd rcx,DWORD PTR [rdi+0xf0]
  41ea1e:	sub    rax,rcx
  41ea21:	ret    
  41ea22:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ea2c:	nop    DWORD PTR [rax+0x0]

000000000041ea30 <flatcc_builder_get_buffer_start@@Base>:
  41ea30:	mov    eax,DWORD PTR [rdi+0xf0]
  41ea36:	ret    
  41ea37:	nop    WORD PTR [rax+rax*1+0x0]

000000000041ea40 <flatcc_builder_get_buffer_end@@Base>:
  41ea40:	mov    eax,DWORD PTR [rdi+0xf4]
  41ea46:	ret    
  41ea47:	nop    WORD PTR [rax+rax*1+0x0]

000000000041ea50 <flatcc_builder_set_vtable_cache_limit@@Base>:
  41ea50:	mov    QWORD PTR [rdi+0x118],rsi
  41ea57:	ret    
  41ea58:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041ea60 <flatcc_builder_set_identifier@@Base>:
  41ea60:	test   rsi,rsi
  41ea63:	jne    41ea6c <flatcc_builder_set_identifier@@Base+0xc>
  41ea65:	lea    rsi,[rip+0x6424]        # 424e90 <flatcc_builder_padding_base@@Base>
  41ea6c:	mov    eax,DWORD PTR [rsi]
  41ea6e:	mov    DWORD PTR [rdi+0x110],eax
  41ea74:	ret    
  41ea75:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ea7f:	nop

000000000041ea80 <flatcc_builder_get_type@@Base>:
  41ea80:	mov    rax,QWORD PTR [rdi+0x30]
  41ea84:	test   rax,rax
  41ea87:	je     41ea8e <flatcc_builder_get_type@@Base+0xe>
  41ea89:	movzx  eax,WORD PTR [rax+0xe]
  41ea8d:	ret    
  41ea8e:	xor    eax,eax
  41ea90:	ret    
  41ea91:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ea9b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041eaa0 <flatcc_builder_get_type_at@@Base>:
  41eaa0:	xor    eax,eax
  41eaa2:	test   esi,esi
  41eaa4:	jle    41eac2 <flatcc_builder_get_type_at@@Base+0x22>
  41eaa6:	mov    ecx,DWORD PTR [rdi+0x104]
  41eaac:	cmp    ecx,esi
  41eaae:	jl     41eac2 <flatcc_builder_get_type_at@@Base+0x22>
  41eab0:	mov    rax,QWORD PTR [rdi+0x30]
  41eab4:	sub    esi,ecx
  41eab6:	movsxd rcx,esi
  41eab9:	lea    rcx,[rcx+rcx*8]
  41eabd:	movzx  eax,WORD PTR [rax+rcx*4+0xe]
  41eac2:	ret    
  41eac3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41eacd:	nop    DWORD PTR [rax]

000000000041ead0 <flatcc_builder_get_direct_buffer@@Base>:
  41ead0:	cmp    DWORD PTR [rdi+0x128],0x0
  41ead7:	je     41eae9 <flatcc_builder_get_direct_buffer@@Base+0x19>
  41ead9:	mov    rax,QWORD PTR [rdi+0x130]
  41eae0:	cmp    rax,QWORD PTR [rdi+0x138]
  41eae7:	je     41eaf8 <flatcc_builder_get_direct_buffer@@Base+0x28>
  41eae9:	test   rsi,rsi
  41eaec:	je     41eaf5 <flatcc_builder_get_direct_buffer@@Base+0x25>
  41eaee:	mov    QWORD PTR [rsi],0x0
  41eaf5:	xor    eax,eax
  41eaf7:	ret    
  41eaf8:	test   rsi,rsi
  41eafb:	je     41eb07 <flatcc_builder_get_direct_buffer@@Base+0x37>
  41eafd:	mov    rax,QWORD PTR [rdi+0x160]
  41eb04:	mov    QWORD PTR [rsi],rax
  41eb07:	mov    rax,QWORD PTR [rdi+0x140]
  41eb0e:	ret    
  41eb0f:	nop

000000000041eb10 <flatcc_builder_copy_buffer@@Base>:
  41eb10:	push   rax
  41eb11:	cmp    DWORD PTR [rdi+0x128],0x0
  41eb18:	je     41eb2d <flatcc_builder_copy_buffer@@Base+0x1d>
  41eb1a:	add    rdi,0x130
  41eb21:	call   41f430 <flatcc_emitter_copy_buffer@@Base>
  41eb26:	test   rax,rax
  41eb29:	je     41eb31 <flatcc_builder_copy_buffer@@Base+0x21>
  41eb2b:	pop    rcx
  41eb2c:	ret    
  41eb2d:	xor    eax,eax
  41eb2f:	pop    rcx
  41eb30:	ret    
  41eb31:	lea    rdi,[rip+0x6858]        # 425390 <flatcc_builder_padding_base@@Base+0x500>
  41eb38:	lea    rsi,[rip+0x65e3]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41eb3f:	lea    rcx,[rip+0x754e]        # 426094 <flatcc_builder_padding_base@@Base+0x1204>
  41eb46:	mov    edx,0x786
  41eb4b:	call   404090 <__assert_fail@plt>

000000000041eb50 <flatcc_builder_finalize_buffer@@Base>:
  41eb50:	push   r15
  41eb52:	push   r14
  41eb54:	push   rbx
  41eb55:	mov    rbx,rdi
  41eb58:	movsxd r14,DWORD PTR [rdi+0xf4]
  41eb5f:	movsxd rax,DWORD PTR [rdi+0xf0]
  41eb66:	sub    r14,rax
  41eb69:	test   rsi,rsi
  41eb6c:	je     41eb71 <flatcc_builder_finalize_buffer@@Base+0x21>
  41eb6e:	mov    QWORD PTR [rsi],r14
  41eb71:	mov    rdi,r14
  41eb74:	call   404110 <malloc@plt>
  41eb79:	test   rax,rax
  41eb7c:	je     41ebad <flatcc_builder_finalize_buffer@@Base+0x5d>
  41eb7e:	cmp    DWORD PTR [rbx+0x128],0x0
  41eb85:	je     41ebcc <flatcc_builder_finalize_buffer@@Base+0x7c>
  41eb87:	mov    r15,rax
  41eb8a:	add    rbx,0x130
  41eb91:	mov    rdi,rbx
  41eb94:	mov    rsi,rax
  41eb97:	mov    rdx,r14
  41eb9a:	call   41f430 <flatcc_emitter_copy_buffer@@Base>
  41eb9f:	test   rax,rax
  41eba2:	je     41ebeb <flatcc_builder_finalize_buffer@@Base+0x9b>
  41eba4:	mov    rax,r15
  41eba7:	pop    rbx
  41eba8:	pop    r14
  41ebaa:	pop    r15
  41ebac:	ret    
  41ebad:	lea    rdi,[rip+0x772e]        # 4262e2 <flatcc_builder_padding_base@@Base+0x1452>
  41ebb4:	lea    rsi,[rip+0x6567]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41ebbb:	lea    rcx,[rip+0x7517]        # 4260d9 <flatcc_builder_padding_base@@Base+0x1249>
  41ebc2:	mov    edx,0x798
  41ebc7:	call   404090 <__assert_fail@plt>
  41ebcc:	lea    rdi,[rip+0x770f]        # 4262e2 <flatcc_builder_padding_base@@Base+0x1452>
  41ebd3:	lea    rsi,[rip+0x6548]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41ebda:	lea    rcx,[rip+0x74f8]        # 4260d9 <flatcc_builder_padding_base@@Base+0x1249>
  41ebe1:	mov    edx,0x79c
  41ebe6:	call   404090 <__assert_fail@plt>
  41ebeb:	lea    rdi,[rip+0x679e]        # 425390 <flatcc_builder_padding_base@@Base+0x500>
  41ebf2:	lea    rsi,[rip+0x6529]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41ebf9:	lea    rcx,[rip+0x7494]        # 426094 <flatcc_builder_padding_base@@Base+0x1204>
  41ec00:	mov    edx,0x786
  41ec05:	call   404090 <__assert_fail@plt>
  41ec0a:	nop    WORD PTR [rax+rax*1+0x0]

000000000041ec10 <flatcc_builder_finalize_aligned_buffer@@Base>:
  41ec10:	push   r15
  41ec12:	push   r14
  41ec14:	push   r12
  41ec16:	push   rbx
  41ec17:	push   rax
  41ec18:	mov    r14,rsi
  41ec1b:	mov    r15,rdi
  41ec1e:	movsxd rax,DWORD PTR [rdi+0xf4]
  41ec25:	movsxd rcx,DWORD PTR [rdi+0xf0]
  41ec2c:	sub    rax,rcx
  41ec2f:	test   rsi,rsi
  41ec32:	je     41ec37 <flatcc_builder_finalize_aligned_buffer@@Base+0x27>
  41ec34:	mov    QWORD PTR [r14],rax
  41ec37:	movzx  ecx,WORD PTR [r15+0xe8]
  41ec3f:	add    rax,rcx
  41ec42:	add    rax,0xffffffffffffffff
  41ec46:	mov    rbx,rcx
  41ec49:	neg    rbx
  41ec4c:	and    rbx,rax
  41ec4f:	cmp    rcx,0x8
  41ec53:	mov    QWORD PTR [rsp],0x0
  41ec5b:	mov    esi,0x8
  41ec60:	cmova  rsi,rcx
  41ec64:	mov    rdi,rsp
  41ec67:	mov    rdx,rbx
  41ec6a:	call   404170 <posix_memalign@plt>
  41ec6f:	mov    r12,QWORD PTR [rsp]
  41ec73:	test   eax,eax
  41ec75:	je     41ec86 <flatcc_builder_finalize_aligned_buffer@@Base+0x76>
  41ec77:	test   r12,r12
  41ec7a:	je     41ec86 <flatcc_builder_finalize_aligned_buffer@@Base+0x76>
  41ec7c:	mov    rdi,r12
  41ec7f:	call   404030 <free@plt>
  41ec84:	jmp    41ecce <flatcc_builder_finalize_aligned_buffer@@Base+0xbe>
  41ec86:	test   r12,r12
  41ec89:	je     41ecce <flatcc_builder_finalize_aligned_buffer@@Base+0xbe>
  41ec8b:	cmp    DWORD PTR [r15+0x128],0x0
  41ec93:	je     41ec7c <flatcc_builder_finalize_aligned_buffer@@Base+0x6c>
  41ec95:	add    r15,0x130
  41ec9c:	mov    rdi,r15
  41ec9f:	mov    rsi,r12
  41eca2:	mov    rdx,rbx
  41eca5:	call   41f430 <flatcc_emitter_copy_buffer@@Base>
  41ecaa:	test   rax,rax
  41ecad:	jne    41ecdd <flatcc_builder_finalize_aligned_buffer@@Base+0xcd>
  41ecaf:	lea    rdi,[rip+0x66da]        # 425390 <flatcc_builder_padding_base@@Base+0x500>
  41ecb6:	lea    rsi,[rip+0x6465]        # 425122 <flatcc_builder_padding_base@@Base+0x292>
  41ecbd:	lea    rcx,[rip+0x73d0]        # 426094 <flatcc_builder_padding_base@@Base+0x1204>
  41ecc4:	mov    edx,0x786
  41ecc9:	call   404090 <__assert_fail@plt>
  41ecce:	test   r14,r14
  41ecd1:	je     41ecda <flatcc_builder_finalize_aligned_buffer@@Base+0xca>
  41ecd3:	mov    QWORD PTR [r14],0x0
  41ecda:	xor    r12d,r12d
  41ecdd:	mov    rax,r12
  41ece0:	add    rsp,0x8
  41ece4:	pop    rbx
  41ece5:	pop    r12
  41ece7:	pop    r14
  41ece9:	pop    r15
  41eceb:	ret    
  41ecec:	nop    DWORD PTR [rax+0x0]

000000000041ecf0 <flatcc_builder_aligned_alloc@@Base>:
  41ecf0:	push   rax
  41ecf1:	mov    rax,rsi
  41ecf4:	mov    QWORD PTR [rsp],0x0
  41ecfc:	cmp    rdi,0x8
  41ed00:	mov    esi,0x8
  41ed05:	cmova  rsi,rdi
  41ed09:	mov    rdi,rsp
  41ed0c:	mov    rdx,rax
  41ed0f:	call   404170 <posix_memalign@plt>
  41ed14:	mov    ecx,eax
  41ed16:	mov    rax,QWORD PTR [rsp]
  41ed1a:	test   ecx,ecx
  41ed1c:	je     41ed35 <flatcc_builder_aligned_alloc@@Base+0x45>
  41ed1e:	test   rax,rax
  41ed21:	je     41ed35 <flatcc_builder_aligned_alloc@@Base+0x45>
  41ed23:	mov    rdi,rax
  41ed26:	call   404030 <free@plt>
  41ed2b:	mov    QWORD PTR [rsp],0x0
  41ed33:	xor    eax,eax
  41ed35:	pop    rcx
  41ed36:	ret    
  41ed37:	nop    WORD PTR [rax+rax*1+0x0]

000000000041ed40 <flatcc_builder_aligned_free@@Base>:
  41ed40:	jmp    404030 <free@plt>
  41ed45:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ed4f:	nop

000000000041ed50 <flatcc_builder_get_emit_context@@Base>:
  41ed50:	mov    rax,QWORD PTR [rdi+0x38]
  41ed54:	ret    
  41ed55:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ed5f:	nop

000000000041ed60 <flatcc_emitter_recycle_page@@Base>:
  41ed60:	mov    rcx,QWORD PTR [rdi]
  41ed63:	mov    eax,0xffffffff
  41ed68:	cmp    rcx,rsi
  41ed6b:	je     41edc2 <flatcc_emitter_recycle_page@@Base+0x62>
  41ed6d:	cmp    QWORD PTR [rdi+0x8],rsi
  41ed71:	je     41edc2 <flatcc_emitter_recycle_page@@Base+0x62>
  41ed73:	mov    rax,QWORD PTR [rsi+0xb80]
  41ed7a:	mov    rdx,QWORD PTR [rsi+0xb88]
  41ed81:	mov    QWORD PTR [rax+0xb88],rdx
  41ed88:	mov    rdx,QWORD PTR [rsi+0xb88]
  41ed8f:	mov    QWORD PTR [rdx+0xb80],rax
  41ed96:	mov    rax,QWORD PTR [rcx+0xb88]
  41ed9d:	mov    QWORD PTR [rsi+0xb88],rax
  41eda4:	mov    QWORD PTR [rsi+0xb80],rcx
  41edab:	mov    QWORD PTR [rax+0xb80],rsi
  41edb2:	mov    rax,QWORD PTR [rsi+0xb80]
  41edb9:	mov    QWORD PTR [rax+0xb88],rsi
  41edc0:	xor    eax,eax
  41edc2:	ret    
  41edc3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41edcd:	nop    DWORD PTR [rax]

000000000041edd0 <flatcc_emitter_reset@@Base>:
  41edd0:	push   r14
  41edd2:	push   rbx
  41edd3:	push   rax
  41edd4:	mov    rax,QWORD PTR [rdi]
  41edd7:	test   rax,rax
  41edda:	je     41eebb <flatcc_emitter_reset@@Base+0xeb>
  41ede0:	mov    rbx,rdi
  41ede3:	mov    QWORD PTR [rdi+0x8],rax
  41ede7:	lea    rcx,[rax+0x5c0]
  41edee:	mov    QWORD PTR [rdi+0x10],rcx
  41edf2:	mov    QWORD PTR [rdi+0x20],rcx
  41edf6:	mov    QWORD PTR [rdi+0x18],0x5c0
  41edfe:	mov    QWORD PTR [rdi+0x28],0x5c0
  41ee06:	mov    DWORD PTR [rax+0xb90],0xfffffa40
  41ee10:	mov    rcx,QWORD PTR [rdi+0x30]
  41ee14:	mov    rdx,QWORD PTR [rdi+0x40]
  41ee18:	test   rdx,rdx
  41ee1b:	jne    41ee24 <flatcc_emitter_reset@@Base+0x54>
  41ee1d:	mov    QWORD PTR [rbx+0x40],rcx
  41ee21:	mov    rdx,rcx
  41ee24:	lea    rdx,[rdx+rdx*2]
  41ee28:	shr    rdx,0x2
  41ee2c:	shr    rcx,0x2
  41ee30:	add    rcx,rdx
  41ee33:	mov    QWORD PTR [rbx+0x40],rcx
  41ee37:	mov    QWORD PTR [rbx+0x30],0x0
  41ee3f:	add    rcx,rcx
  41ee42:	cmp    rcx,QWORD PTR [rbx+0x38]
  41ee46:	jae    41eebb <flatcc_emitter_reset@@Base+0xeb>
  41ee48:	mov    rdi,QWORD PTR [rax+0xb80]
  41ee4f:	cmp    rdi,rax
  41ee52:	je     41eebb <flatcc_emitter_reset@@Base+0xeb>
  41ee54:	lea    rcx,[rax+0xb80]
  41ee5b:	mov    r14,0xfffffffffffff480
  41ee62:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ee6c:	nop    DWORD PTR [rax+0x0]
  41ee70:	mov    rdx,QWORD PTR [rdi+0xb80]
  41ee77:	mov    QWORD PTR [rcx],rdx
  41ee7a:	mov    rcx,QWORD PTR [rdi+0xb80]
  41ee81:	mov    QWORD PTR [rcx+0xb88],rax
  41ee88:	call   404030 <free@plt>
  41ee8d:	mov    rax,QWORD PTR [rbx+0x38]
  41ee91:	add    rax,r14
  41ee94:	mov    QWORD PTR [rbx+0x38],rax
  41ee98:	mov    rcx,QWORD PTR [rbx+0x40]
  41ee9c:	add    rcx,rcx
  41ee9f:	cmp    rcx,rax
  41eea2:	jae    41eebb <flatcc_emitter_reset@@Base+0xeb>
  41eea4:	mov    rax,QWORD PTR [rbx+0x8]
  41eea8:	lea    rcx,[rax+0xb80]
  41eeaf:	mov    rdi,QWORD PTR [rax+0xb80]
  41eeb6:	cmp    rdi,QWORD PTR [rbx]
  41eeb9:	jne    41ee70 <flatcc_emitter_reset@@Base+0xa0>
  41eebb:	add    rsp,0x8
  41eebf:	pop    rbx
  41eec0:	pop    r14
  41eec2:	ret    
  41eec3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41eecd:	nop    DWORD PTR [rax]

000000000041eed0 <flatcc_emitter_clear@@Base>:
  41eed0:	push   r14
  41eed2:	push   rbx
  41eed3:	push   rax
  41eed4:	mov    rbx,QWORD PTR [rdi]
  41eed7:	test   rbx,rbx
  41eeda:	je     41ef3a <flatcc_emitter_clear@@Base+0x6a>
  41eedc:	mov    r14,rdi
  41eedf:	mov    rax,QWORD PTR [rbx+0xb88]
  41eee6:	mov    QWORD PTR [rax+0xb80],0x0
  41eef1:	jmp    41ef0f <flatcc_emitter_clear@@Base+0x3f>
  41eef3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41eefd:	nop    DWORD PTR [rax]
  41ef00:	mov    rbx,rax
  41ef03:	mov    rdi,QWORD PTR [rax+0xb88]
  41ef0a:	call   404030 <free@plt>
  41ef0f:	mov    rax,QWORD PTR [rbx+0xb80]
  41ef16:	test   rax,rax
  41ef19:	jne    41ef00 <flatcc_emitter_clear@@Base+0x30>
  41ef1b:	mov    rdi,rbx
  41ef1e:	call   404030 <free@plt>
  41ef23:	vxorps xmm0,xmm0,xmm0
  41ef27:	vmovups YMMWORD PTR [r14+0x20],ymm0
  41ef2d:	vmovups YMMWORD PTR [r14],ymm0
  41ef32:	mov    QWORD PTR [r14+0x40],0x0
  41ef3a:	add    rsp,0x8
  41ef3e:	pop    rbx
  41ef3f:	pop    r14
  41ef41:	vzeroupper 
  41ef44:	ret    
  41ef45:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ef4f:	nop

000000000041ef50 <flatcc_emitter@@Base>:
  41ef50:	push   rbp
  41ef51:	push   r15
  41ef53:	push   r14
  41ef55:	push   r13
  41ef57:	push   r12
  41ef59:	push   rbx
  41ef5a:	sub    rsp,0x18
  41ef5e:	mov    r13d,edx
  41ef61:	mov    r14,rsi
  41ef64:	mov    r12,rdi
  41ef67:	add    QWORD PTR [rdi+0x30],r8
  41ef6b:	test   ecx,ecx
  41ef6d:	js     41f101 <flatcc_emitter@@Base+0x1b1>
  41ef73:	mov    rdx,QWORD PTR [r12+0x28]
  41ef78:	cmp    rdx,r8
  41ef7b:	jae    41f2e8 <flatcc_emitter@@Base+0x398>
  41ef81:	xor    eax,eax
  41ef83:	test   r13d,r13d
  41ef86:	je     41f41f <flatcc_emitter@@Base+0x4cf>
  41ef8c:	mov    QWORD PTR [rsp+0x8],r13
  41ef91:	mov    r15,QWORD PTR [r14+0x8]
  41ef95:	test   r15,r15
  41ef98:	je     41f0e6 <flatcc_emitter@@Base+0x196>
  41ef9e:	mov    r13,QWORD PTR [r14]
  41efa1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41efab:	nop    DWORD PTR [rax+rax*1+0x0]
  41efb0:	mov    rbp,r15
  41efb3:	cmp    r15,rdx
  41efb6:	jbe    41f0b8 <flatcc_emitter@@Base+0x168>
  41efbc:	mov    rbp,rdx
  41efbf:	nop
  41efc0:	test   rbp,rbp
  41efc3:	jne    41f0b8 <flatcc_emitter@@Base+0x168>
  41efc9:	mov    rbx,QWORD PTR [r12+0x8]
  41efce:	test   rbx,rbx
  41efd1:	je     41efe0 <flatcc_emitter@@Base+0x90>
  41efd3:	mov    rax,QWORD PTR [rbx+0xb80]
  41efda:	cmp    rax,QWORD PTR [r12]
  41efde:	jne    41f021 <flatcc_emitter@@Base+0xd1>
  41efe0:	mov    edi,0xb98
  41efe5:	call   404110 <malloc@plt>
  41efea:	test   rax,rax
  41efed:	je     41f2fd <flatcc_emitter@@Base+0x3ad>
  41eff3:	add    QWORD PTR [r12+0x38],0xb80
  41effc:	test   rbx,rbx
  41efff:	je     41f060 <flatcc_emitter@@Base+0x110>
  41f001:	mov    QWORD PTR [rax+0xb88],rbx
  41f008:	mov    rcx,QWORD PTR [r12]
  41f00c:	mov    QWORD PTR [rax+0xb80],rcx
  41f013:	mov    QWORD PTR [rcx+0xb88],rax
  41f01a:	mov    QWORD PTR [rbx+0xb80],rax
  41f021:	mov    QWORD PTR [r12+0x8],rax
  41f026:	mov    QWORD PTR [r12+0x20],rax
  41f02b:	mov    QWORD PTR [r12+0x28],0xb80
  41f034:	mov    rcx,QWORD PTR [rax+0xb88]
  41f03b:	mov    ecx,DWORD PTR [rcx+0xb90]
  41f041:	mov    edx,0xb80
  41f046:	add    ecx,edx
  41f048:	mov    DWORD PTR [rax+0xb90],ecx
  41f04e:	mov    ebp,0xb80
  41f053:	cmp    r15,rbp
  41f056:	ja     41efc0 <flatcc_emitter@@Base+0x70>
  41f05c:	jmp    41f0b5 <flatcc_emitter@@Base+0x165>
  41f05e:	xchg   ax,ax
  41f060:	mov    QWORD PTR [r12],rax
  41f064:	mov    QWORD PTR [r12+0x8],rax
  41f069:	mov    QWORD PTR [rax+0xb80],rax
  41f070:	mov    QWORD PTR [rax+0xb88],rax
  41f077:	mov    rcx,rax
  41f07a:	add    rcx,0x5c0
  41f081:	mov    QWORD PTR [r12+0x10],rcx
  41f086:	mov    QWORD PTR [r12+0x20],rcx
  41f08b:	mov    QWORD PTR [r12+0x18],0x5c0
  41f094:	mov    QWORD PTR [r12+0x28],0x5c0
  41f09d:	mov    DWORD PTR [rax+0xb90],0xfffffa40
  41f0a7:	mov    ebp,0x5c0
  41f0ac:	cmp    r15,rbp
  41f0af:	ja     41efc0 <flatcc_emitter@@Base+0x70>
  41f0b5:	mov    rbp,r15
  41f0b8:	mov    rdi,QWORD PTR [r12+0x20]
  41f0bd:	mov    rsi,r13
  41f0c0:	mov    rdx,rbp
  41f0c3:	call   404100 <memcpy@plt>
  41f0c8:	add    QWORD PTR [r12+0x20],rbp
  41f0cd:	add    r13,rbp
  41f0d0:	mov    rdx,QWORD PTR [r12+0x28]
  41f0d5:	sub    rdx,rbp
  41f0d8:	mov    QWORD PTR [r12+0x28],rdx
  41f0dd:	sub    r15,rbp
  41f0e0:	jne    41efb0 <flatcc_emitter@@Base+0x60>
  41f0e6:	mov    r13,QWORD PTR [rsp+0x8]
  41f0eb:	add    r13d,0xffffffff
  41f0ef:	add    r14,0x10
  41f0f3:	test   r13d,r13d
  41f0f6:	jne    41ef8c <flatcc_emitter@@Base+0x3c>
  41f0fc:	jmp    41f41d <flatcc_emitter@@Base+0x4cd>
  41f101:	lea    rsi,[r12+0x18]
  41f106:	mov    rdx,QWORD PTR [r12+0x18]
  41f10b:	cmp    rdx,r8
  41f10e:	jae    41f307 <flatcc_emitter@@Base+0x3b7>
  41f114:	xor    eax,eax
  41f116:	test   r13d,r13d
  41f119:	je     41f41f <flatcc_emitter@@Base+0x4cf>
  41f11f:	mov    QWORD PTR [rsp+0x10],rsi
  41f124:	movsxd rax,r13d
  41f127:	shl    rax,0x4
  41f12b:	add    r14,rax
  41f12e:	mov    esi,0xfffff480
  41f133:	mov    QWORD PTR [rsp+0x8],r13
  41f138:	mov    r15,QWORD PTR [r14-0x8]
  41f13c:	add    r14,0xfffffffffffffff0
  41f140:	test   r15,r15
  41f143:	je     41f2d4 <flatcc_emitter@@Base+0x384>
  41f149:	mov    r13,QWORD PTR [r14]
  41f14c:	add    r13,r15
  41f14f:	nop
  41f150:	mov    rax,QWORD PTR [rsp+0x10]
  41f155:	mov    rax,QWORD PTR [rax]
  41f158:	cmp    r15,rax
  41f15b:	jbe    41f2a0 <flatcc_emitter@@Base+0x350>
  41f161:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f16b:	nop    DWORD PTR [rax+rax*1+0x0]
  41f170:	mov    rbp,rax
  41f173:	test   rax,rax
  41f176:	jne    41f2a3 <flatcc_emitter@@Base+0x353>
  41f17c:	mov    rbx,QWORD PTR [r12]
  41f180:	test   rbx,rbx
  41f183:	je     41f1b0 <flatcc_emitter@@Base+0x260>
  41f185:	mov    rax,QWORD PTR [rbx+0xb88]
  41f18c:	cmp    rax,QWORD PTR [r12+0x8]
  41f191:	je     41f1b0 <flatcc_emitter@@Base+0x260>
  41f193:	mov    edx,DWORD PTR [rbx+0xb90]
  41f199:	add    edx,esi
  41f19b:	lea    rcx,[rax+0xb90]
  41f1a2:	mov    DWORD PTR [rax+0xb90],edx
  41f1a8:	mov    QWORD PTR [r12],rax
  41f1ac:	jmp    41f205 <flatcc_emitter@@Base+0x2b5>
  41f1ae:	xchg   ax,ax
  41f1b0:	mov    edi,0xb98
  41f1b5:	call   404110 <malloc@plt>
  41f1ba:	test   rax,rax
  41f1bd:	je     41f2fd <flatcc_emitter@@Base+0x3ad>
  41f1c3:	add    QWORD PTR [r12+0x38],0xb80
  41f1cc:	test   rbx,rbx
  41f1cf:	je     41f240 <flatcc_emitter@@Base+0x2f0>
  41f1d1:	mov    rcx,QWORD PTR [r12+0x8]
  41f1d6:	mov    QWORD PTR [rax+0xb88],rcx
  41f1dd:	mov    QWORD PTR [rax+0xb80],rbx
  41f1e4:	mov    QWORD PTR [rbx+0xb88],rax
  41f1eb:	mov    QWORD PTR [rcx+0xb80],rax
  41f1f2:	mov    QWORD PTR [r12],rax
  41f1f6:	mov    rcx,rax
  41f1f9:	add    rcx,0xb90
  41f200:	mov    esi,0xfffff480
  41f205:	lea    rdx,[rax+0xb80]
  41f20c:	mov    QWORD PTR [r12+0x10],rdx
  41f211:	mov    QWORD PTR [r12+0x18],0xb80
  41f21a:	mov    rax,QWORD PTR [rax+0xb80]
  41f221:	mov    eax,DWORD PTR [rax+0xb90]
  41f227:	add    eax,esi
  41f229:	mov    DWORD PTR [rcx],eax
  41f22b:	mov    eax,0xb80
  41f230:	cmp    r15,rax
  41f233:	ja     41f170 <flatcc_emitter@@Base+0x220>
  41f239:	jmp    41f2a0 <flatcc_emitter@@Base+0x350>
  41f23b:	nop    DWORD PTR [rax+rax*1+0x0]
  41f240:	mov    QWORD PTR [r12],rax
  41f244:	mov    QWORD PTR [r12+0x8],rax
  41f249:	mov    QWORD PTR [rax+0xb80],rax
  41f250:	mov    QWORD PTR [rax+0xb88],rax
  41f257:	mov    rcx,rax
  41f25a:	add    rcx,0x5c0
  41f261:	mov    QWORD PTR [r12+0x10],rcx
  41f266:	mov    QWORD PTR [r12+0x20],rcx
  41f26b:	mov    QWORD PTR [r12+0x18],0x5c0
  41f274:	mov    QWORD PTR [r12+0x28],0x5c0
  41f27d:	mov    DWORD PTR [rax+0xb90],0xfffffa40
  41f287:	mov    eax,0x5c0
  41f28c:	mov    esi,0xfffff480
  41f291:	cmp    r15,rax
  41f294:	ja     41f170 <flatcc_emitter@@Base+0x220>
  41f29a:	nop    WORD PTR [rax+rax*1+0x0]
  41f2a0:	mov    rbp,r15
  41f2a3:	mov    rdi,QWORD PTR [r12+0x10]
  41f2a8:	sub    rdi,rbp
  41f2ab:	mov    QWORD PTR [r12+0x10],rdi
  41f2b0:	sub    rax,rbp
  41f2b3:	mov    QWORD PTR [r12+0x18],rax
  41f2b8:	sub    r13,rbp
  41f2bb:	mov    rsi,r13
  41f2be:	mov    rdx,rbp
  41f2c1:	call   404100 <memcpy@plt>
  41f2c6:	mov    esi,0xfffff480
  41f2cb:	sub    r15,rbp
  41f2ce:	jne    41f150 <flatcc_emitter@@Base+0x200>
  41f2d4:	mov    r13,QWORD PTR [rsp+0x8]
  41f2d9:	add    r13d,0xffffffff
  41f2dd:	jne    41f133 <flatcc_emitter@@Base+0x1e3>
  41f2e3:	jmp    41f41d <flatcc_emitter@@Base+0x4cd>
  41f2e8:	lea    rsi,[r12+0x28]
  41f2ed:	mov    rbp,QWORD PTR [r12+0x20]
  41f2f2:	lea    rcx,[r8+rbp*1]
  41f2f6:	mov    QWORD PTR [r12+0x20],rcx
  41f2fb:	jmp    41f314 <flatcc_emitter@@Base+0x3c4>
  41f2fd:	mov    eax,0xffffffff
  41f302:	jmp    41f41f <flatcc_emitter@@Base+0x4cf>
  41f307:	mov    rbp,QWORD PTR [r12+0x10]
  41f30c:	sub    rbp,r8
  41f30f:	mov    QWORD PTR [r12+0x10],rbp
  41f314:	sub    rdx,r8
  41f317:	mov    QWORD PTR [rsi],rdx
  41f31a:	xor    eax,eax
  41f31c:	test   r13d,r13d
  41f31f:	je     41f41f <flatcc_emitter@@Base+0x4cf>
  41f325:	lea    r15d,[r13-0x1]
  41f329:	mov    r12d,r13d
  41f32c:	and    r12d,0x7
  41f330:	je     41f362 <flatcc_emitter@@Base+0x412>
  41f332:	xor    ebx,ebx
  41f334:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f33e:	xchg   ax,ax
  41f340:	mov    rsi,QWORD PTR [r14]
  41f343:	mov    rdx,QWORD PTR [r14+0x8]
  41f347:	mov    rdi,rbp
  41f34a:	call   404100 <memcpy@plt>
  41f34f:	add    rbp,QWORD PTR [r14+0x8]
  41f353:	add    r14,0x10
  41f357:	add    ebx,0x1
  41f35a:	cmp    r12d,ebx
  41f35d:	jne    41f340 <flatcc_emitter@@Base+0x3f0>
  41f35f:	sub    r13d,ebx
  41f362:	cmp    r15d,0x7
  41f366:	jb     41f41d <flatcc_emitter@@Base+0x4cd>
  41f36c:	nop    DWORD PTR [rax+0x0]
  41f370:	mov    rsi,QWORD PTR [r14]
  41f373:	mov    rdx,QWORD PTR [r14+0x8]
  41f377:	mov    rdi,rbp
  41f37a:	call   404100 <memcpy@plt>
  41f37f:	add    rbp,QWORD PTR [r14+0x8]
  41f383:	mov    rsi,QWORD PTR [r14+0x10]
  41f387:	mov    rdx,QWORD PTR [r14+0x18]
  41f38b:	mov    rdi,rbp
  41f38e:	call   404100 <memcpy@plt>
  41f393:	add    rbp,QWORD PTR [r14+0x18]
  41f397:	mov    rsi,QWORD PTR [r14+0x20]
  41f39b:	mov    rdx,QWORD PTR [r14+0x28]
  41f39f:	mov    rdi,rbp
  41f3a2:	call   404100 <memcpy@plt>
  41f3a7:	add    rbp,QWORD PTR [r14+0x28]
  41f3ab:	mov    rsi,QWORD PTR [r14+0x30]
  41f3af:	mov    rdx,QWORD PTR [r14+0x38]
  41f3b3:	mov    rdi,rbp
  41f3b6:	call   404100 <memcpy@plt>
  41f3bb:	add    rbp,QWORD PTR [r14+0x38]
  41f3bf:	mov    rsi,QWORD PTR [r14+0x40]
  41f3c3:	mov    rdx,QWORD PTR [r14+0x48]
  41f3c7:	mov    rdi,rbp
  41f3ca:	call   404100 <memcpy@plt>
  41f3cf:	add    rbp,QWORD PTR [r14+0x48]
  41f3d3:	mov    rsi,QWORD PTR [r14+0x50]
  41f3d7:	mov    rdx,QWORD PTR [r14+0x58]
  41f3db:	mov    rdi,rbp
  41f3de:	call   404100 <memcpy@plt>
  41f3e3:	add    rbp,QWORD PTR [r14+0x58]
  41f3e7:	mov    rsi,QWORD PTR [r14+0x60]
  41f3eb:	mov    rdx,QWORD PTR [r14+0x68]
  41f3ef:	mov    rdi,rbp
  41f3f2:	call   404100 <memcpy@plt>
  41f3f7:	add    rbp,QWORD PTR [r14+0x68]
  41f3fb:	mov    rsi,QWORD PTR [r14+0x70]
  41f3ff:	mov    rdx,QWORD PTR [r14+0x78]
  41f403:	mov    rdi,rbp
  41f406:	call   404100 <memcpy@plt>
  41f40b:	add    rbp,QWORD PTR [r14+0x78]
  41f40f:	sub    r14,0xffffffffffffff80
  41f413:	add    r13d,0xfffffff8
  41f417:	jne    41f370 <flatcc_emitter@@Base+0x420>
  41f41d:	xor    eax,eax
  41f41f:	add    rsp,0x18
  41f423:	pop    rbx
  41f424:	pop    r12
  41f426:	pop    r13
  41f428:	pop    r14
  41f42a:	pop    r15
  41f42c:	pop    rbp
  41f42d:	ret    
  41f42e:	xchg   ax,ax

000000000041f430 <flatcc_emitter_copy_buffer@@Base>:
  41f430:	push   r15
  41f432:	push   r14
  41f434:	push   r12
  41f436:	push   rbx
  41f437:	push   rax
  41f438:	mov    rax,rdx
  41f43b:	mov    rdx,QWORD PTR [rdi+0x30]
  41f43f:	cmp    rdx,rax
  41f442:	ja     41f4cd <flatcc_emitter_copy_buffer@@Base+0x9d>
  41f448:	mov    r14,rdi
  41f44b:	mov    rax,QWORD PTR [rdi]
  41f44e:	test   rax,rax
  41f451:	je     41f4cd <flatcc_emitter_copy_buffer@@Base+0x9d>
  41f453:	mov    r15,rsi
  41f456:	cmp    rax,QWORD PTR [r14+0x8]
  41f45a:	je     41f4df <flatcc_emitter_copy_buffer@@Base+0xaf>
  41f460:	mov    r12d,0xb80
  41f466:	sub    r12,QWORD PTR [r14+0x18]
  41f46a:	mov    rsi,QWORD PTR [r14+0x10]
  41f46e:	mov    rdi,r15
  41f471:	mov    rdx,r12
  41f474:	call   404100 <memcpy@plt>
  41f479:	add    r12,r15
  41f47c:	mov    rax,QWORD PTR [r14]
  41f47f:	mov    rbx,QWORD PTR [rax+0xb80]
  41f486:	cmp    rbx,QWORD PTR [r14+0x8]
  41f48a:	je     41f4b4 <flatcc_emitter_copy_buffer@@Base+0x84>
  41f48c:	nop    DWORD PTR [rax+0x0]
  41f490:	mov    edx,0xb80
  41f495:	mov    rdi,r12
  41f498:	mov    rsi,rbx
  41f49b:	call   404100 <memcpy@plt>
  41f4a0:	add    r12,0xb80
  41f4a7:	mov    rbx,QWORD PTR [rbx+0xb80]
  41f4ae:	cmp    rbx,QWORD PTR [r14+0x8]
  41f4b2:	jne    41f490 <flatcc_emitter_copy_buffer@@Base+0x60>
  41f4b4:	mov    edx,0xb80
  41f4b9:	sub    rdx,QWORD PTR [r14+0x28]
  41f4bd:	mov    rdi,r12
  41f4c0:	mov    rsi,rbx
  41f4c3:	call   404100 <memcpy@plt>
  41f4c8:	mov    r15,r12
  41f4cb:	jmp    41f4d0 <flatcc_emitter_copy_buffer@@Base+0xa0>
  41f4cd:	xor    r15d,r15d
  41f4d0:	mov    rax,r15
  41f4d3:	add    rsp,0x8
  41f4d7:	pop    rbx
  41f4d8:	pop    r12
  41f4da:	pop    r14
  41f4dc:	pop    r15
  41f4de:	ret    
  41f4df:	mov    rsi,QWORD PTR [r14+0x10]
  41f4e3:	mov    rdi,r15
  41f4e6:	call   404100 <memcpy@plt>
  41f4eb:	jmp    41f4d0 <flatcc_emitter_copy_buffer@@Base+0xa0>
  41f4ed:	nop    DWORD PTR [rax]

000000000041f4f0 <grisu3_diy_fp_encode_double@@Base>:
  41f4f0:	push   rbp
  41f4f1:	push   r15
  41f4f3:	push   r14
  41f4f5:	push   r13
  41f4f7:	push   r12
  41f4f9:	push   rbx
  41f4fa:	push   rax
  41f4fb:	xor    ebx,ebx
  41f4fd:	test   ecx,ecx
  41f4ff:	setne  r10b
  41f503:	test   rdi,rdi
  41f506:	je     41f85e <grisu3_diy_fp_encode_double@@Base+0x36e>
  41f50c:	movabs r9,0x40000000000000
  41f516:	xor    eax,eax
  41f518:	mov    rcx,rdi
  41f51b:	shr    rcx,0x36
  41f51f:	jne    41f53c <grisu3_diy_fp_encode_double@@Base+0x4c>
  41f521:	xor    eax,eax
  41f523:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f52d:	nop    DWORD PTR [rax]
  41f530:	shl    rdi,0xa
  41f534:	add    eax,0xfffffff6
  41f537:	cmp    rdi,r9
  41f53a:	jb     41f530 <grisu3_diy_fp_encode_double@@Base+0x40>
  41f53c:	sub    esi,edx
  41f53e:	test   rdi,rdi
  41f541:	js     41f55b <grisu3_diy_fp_encode_double@@Base+0x6b>
  41f543:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f54d:	nop    DWORD PTR [rax]
  41f550:	add    rdi,rdi
  41f553:	add    eax,0xffffffff
  41f556:	test   rdi,rdi
  41f559:	jns    41f550 <grisu3_diy_fp_encode_double@@Base+0x60>
  41f55b:	cmp    esi,0xfffffea3
  41f561:	jle    41f87d <grisu3_diy_fp_encode_double@@Base+0x38d>
  41f567:	cmp    esi,0x15c
  41f56d:	jge    41f89c <grisu3_diy_fp_encode_double@@Base+0x3ac>
  41f573:	lea    ecx,[rsi+0x15c]
  41f579:	sar    ecx,0x1f
  41f57c:	shr    ecx,0x1d
  41f57f:	lea    ecx,[rsi+rcx*1]
  41f582:	add    ecx,0x15c
  41f588:	sar    ecx,0x3
  41f58b:	movsxd r11,ecx
  41f58e:	shl    r11,0x4
  41f592:	lea    r14,[rip+0x70c7]        # 426660 <flatcc_builder_padding_base@@Base+0x17d0>
  41f599:	movsx  ecx,WORD PTR [r11+r14*1+0xa]
  41f59f:	cmp    esi,ecx
  41f5a1:	jl     41f8bb <grisu3_diy_fp_encode_double@@Base+0x3cb>
  41f5a7:	lea    ebp,[rcx+0x8]
  41f5aa:	cmp    ebp,esi
  41f5ac:	jle    41f8da <grisu3_diy_fp_encode_double@@Base+0x3ea>
  41f5b2:	mov    bl,r10b
  41f5b5:	shl    ebx,0x2
  41f5b8:	mov    ebp,eax
  41f5ba:	neg    ebp
  41f5bc:	shlx   r10d,ebx,ebp
  41f5c1:	cmp    esi,ecx
  41f5c3:	je     41f655 <grisu3_diy_fp_encode_double@@Base+0x165>
  41f5c9:	not    ecx
  41f5cb:	add    esi,ecx
  41f5cd:	cmp    esi,0x7
  41f5d0:	jae    41f8f9 <grisu3_diy_fp_encode_double@@Base+0x409>
  41f5d6:	movsxd rcx,esi
  41f5d9:	shl    rcx,0x4
  41f5dd:	lea    rbx,[rip+0x700c]        # 4265f0 <flatcc_builder_padding_base@@Base+0x1760>
  41f5e4:	mov    rbp,QWORD PTR [rcx+rbx*1]
  41f5e8:	mov    r15d,DWORD PTR [rcx+rbx*1+0x8]
  41f5ed:	mov    rbx,rdi
  41f5f0:	shr    rbx,0x20
  41f5f4:	mov    r12d,edi
  41f5f7:	mov    edi,ebp
  41f5f9:	mov    rcx,rbp
  41f5fc:	shr    rcx,0x20
  41f600:	mov    r13,rcx
  41f603:	imul   r13,rbx
  41f607:	imul   rcx,r12
  41f60b:	imul   rbx,rdi
  41f60f:	imul   rdi,r12
  41f613:	shr    rdi,0x20
  41f617:	mov    ebp,ebx
  41f619:	add    rbp,rdi
  41f61c:	mov    edi,ecx
  41f61e:	add    rdi,rbp
  41f621:	sub    rdi,0xffffffff80000000
  41f628:	shr    rbx,0x20
  41f62c:	add    rbx,r13
  41f62f:	shr    rcx,0x20
  41f633:	add    rcx,rbx
  41f636:	shr    rdi,0x20
  41f63a:	add    rdi,rcx
  41f63d:	lea    eax,[rax+r15*1]
  41f641:	add    eax,0x40
  41f644:	lea    ecx,[rdx+rsi*1]
  41f647:	add    ecx,0x1
  41f64a:	lea    edx,[r10+0x4]
  41f64e:	cmp    ecx,0x13
  41f651:	cmovg  r10d,edx
  41f655:	mov    rsi,QWORD PTR [r11+r14*1]
  41f659:	mov    rdx,rdi
  41f65c:	shr    rdx,0x20
  41f660:	mov    ecx,edi
  41f662:	mov    edi,esi
  41f664:	shr    rsi,0x20
  41f668:	mov    rbx,rdx
  41f66b:	imul   rbx,rsi
  41f66f:	imul   rsi,rcx
  41f673:	imul   rdx,rdi
  41f677:	imul   rcx,rdi
  41f67b:	shr    rcx,0x20
  41f67f:	mov    edi,edx
  41f681:	add    rdi,rcx
  41f684:	mov    ecx,esi
  41f686:	add    rcx,rdi
  41f689:	sub    rcx,0xffffffff80000000
  41f690:	shr    rdx,0x20
  41f694:	add    rdx,rbx
  41f697:	shr    rsi,0x20
  41f69b:	add    rsi,rdx
  41f69e:	shr    rcx,0x20
  41f6a2:	cmp    r10d,0x1
  41f6a6:	sbb    r10d,0x0
  41f6aa:	add    rcx,rsi
  41f6ad:	je     41f85e <grisu3_diy_fp_encode_double@@Base+0x36e>
  41f6b3:	movsx  edx,WORD PTR [r11+r14*1+0x8]
  41f6b9:	lea    eax,[rdx+rax*1]
  41f6bc:	add    eax,0x40
  41f6bf:	mov    edx,eax
  41f6c1:	cmp    rcx,r9
  41f6c4:	jae    41f6dc <grisu3_diy_fp_encode_double@@Base+0x1ec>
  41f6c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f6d0:	shl    rcx,0xa
  41f6d4:	add    edx,0xfffffff6
  41f6d7:	cmp    rcx,r9
  41f6da:	jb     41f6d0 <grisu3_diy_fp_encode_double@@Base+0x1e0>
  41f6dc:	add    r10d,0x9
  41f6e0:	test   rcx,rcx
  41f6e3:	js     41f6fb <grisu3_diy_fp_encode_double@@Base+0x20b>
  41f6e5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f6ef:	nop
  41f6f0:	add    rcx,rcx
  41f6f3:	add    edx,0xffffffff
  41f6f6:	test   rcx,rcx
  41f6f9:	jns    41f6f0 <grisu3_diy_fp_encode_double@@Base+0x200>
  41f6fb:	sub    eax,edx
  41f6fd:	shlx   r14d,r10d,eax
  41f702:	xor    ebx,ebx
  41f704:	cmp    edx,0xfffffbcd
  41f70a:	jg     41f741 <grisu3_diy_fp_encode_double@@Base+0x251>
  41f70c:	mov    ebx,0x40
  41f711:	cmp    edx,0xfffffb8f
  41f717:	jl     41f725 <grisu3_diy_fp_encode_double@@Base+0x235>
  41f719:	mov    ebx,0xfffffbce
  41f71e:	sub    ebx,edx
  41f720:	cmp    ebx,0x3d
  41f723:	jl     41f741 <grisu3_diy_fp_encode_double@@Base+0x251>
  41f725:	lea    eax,[rbx-0x3e]
  41f728:	shrx   rcx,rcx,rax
  41f72d:	lea    edx,[rbx+rdx*1]
  41f730:	add    edx,0xffffffc2
  41f733:	sarx   r14d,r14d,eax
  41f738:	add    r14d,0x9
  41f73c:	mov    ebx,0x3e
  41f741:	movabs r11,0x1fffffffffffff
  41f74b:	shrx   rax,rcx,rbx
  41f750:	add    edx,ebx
  41f752:	lea    esi,[rbx-0x1]
  41f755:	mov    edi,0x1
  41f75a:	shlx   r15,rdi,rsi
  41f75f:	lea    r10d,[r14+r15*8]
  41f763:	cmp    ebx,r10d
  41f766:	jl     41f77b <grisu3_diy_fp_encode_double@@Base+0x28b>
  41f768:	add    rax,0x1
  41f76c:	lea    rsi,[r11+0x1]
  41f770:	test   rax,rsi
  41f773:	je     41f77b <grisu3_diy_fp_encode_double@@Base+0x28b>
  41f775:	shr    rax,1
  41f778:	add    edx,0x1
  41f77b:	and    ecx,r15d
  41f77e:	cmp    rax,r11
  41f781:	jbe    41f7a0 <grisu3_diy_fp_encode_double@@Base+0x2b0>
  41f783:	add    r9,0xffffffffffffffff
  41f787:	mov    rdi,rax
  41f78a:	nop    WORD PTR [rax+rax*1+0x0]
  41f790:	shr    rdi,1
  41f793:	add    edx,0x1
  41f796:	cmp    rax,r9
  41f799:	mov    rax,rdi
  41f79c:	ja     41f790 <grisu3_diy_fp_encode_double@@Base+0x2a0>
  41f79e:	jmp    41f7a3 <grisu3_diy_fp_encode_double@@Base+0x2b3>
  41f7a0:	mov    rdi,rax
  41f7a3:	shl    ecx,0x3
  41f7a6:	shl    r15d,0x3
  41f7aa:	vpxor  xmm0,xmm0,xmm0
  41f7ae:	cmp    edx,0xfffffbce
  41f7b4:	jl     41f836 <grisu3_diy_fp_encode_double@@Base+0x346>
  41f7ba:	movabs r9,0xfffffffffffff
  41f7c4:	lea    rsi,[r9+0x1]
  41f7c8:	and    rsi,rdi
  41f7cb:	sete   al
  41f7ce:	cmp    edx,0xfffffbce
  41f7d4:	je     41f80f <grisu3_diy_fp_encode_double@@Base+0x31f>
  41f7d6:	test   rsi,rsi
  41f7d9:	jne    41f80f <grisu3_diy_fp_encode_double@@Base+0x31f>
  41f7db:	movabs rsi,0x8000000000000
  41f7e5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f7ef:	nop
  41f7f0:	mov    ebp,edx
  41f7f2:	lea    edx,[rbp-0x1]
  41f7f5:	mov    rbx,rdi
  41f7f8:	and    rbx,rsi
  41f7fb:	lea    rdi,[rdi+rdi*1]
  41f7ff:	sete   al
  41f802:	cmp    ebp,0xfffffbd0
  41f808:	jl     41f80f <grisu3_diy_fp_encode_double@@Base+0x31f>
  41f80a:	test   rbx,rbx
  41f80d:	je     41f7f0 <grisu3_diy_fp_encode_double@@Base+0x300>
  41f80f:	lea    esi,[rdx+0x433]
  41f815:	shl    rsi,0x34
  41f819:	xor    ebp,ebp
  41f81b:	test   al,al
  41f81d:	cmove  rbp,rsi
  41f821:	cmp    edx,0xfffffbce
  41f827:	cmovne rbp,rsi
  41f82b:	and    rdi,r9
  41f82e:	or     rdi,rbp
  41f831:	vmovq  xmm0,rdi
  41f836:	vmovq  QWORD PTR [r8],xmm0
  41f83b:	sub    r15d,r14d
  41f83e:	cmp    r15d,ecx
  41f841:	setge  al
  41f844:	cmp    ecx,r10d
  41f847:	setge  cl
  41f84a:	or     cl,al
  41f84c:	movzx  eax,cl
  41f84f:	add    rsp,0x8
  41f853:	pop    rbx
  41f854:	pop    r12
  41f856:	pop    r13
  41f858:	pop    r14
  41f85a:	pop    r15
  41f85c:	pop    rbp
  41f85d:	ret    
  41f85e:	lea    rdi,[rip+0x7bd6]        # 42743b <flatcc_builder_padding_base@@Base+0x25ab>
  41f865:	lea    rsi,[rip+0x7bd8]        # 427444 <flatcc_builder_padding_base@@Base+0x25b4>
  41f86c:	lea    rcx,[rip+0x7c41]        # 4274b4 <flatcc_builder_padding_base@@Base+0x2624>
  41f873:	mov    edx,0x104
  41f878:	call   404090 <__assert_fail@plt>
  41f87d:	lea    rdi,[rip+0x7c69]        # 4274ed <flatcc_builder_padding_base@@Base+0x265d>
  41f884:	lea    rsi,[rip+0x7639]        # 426ec4 <flatcc_builder_padding_base@@Base+0x2034>
  41f88b:	lea    rcx,[rip+0x7c7a]        # 42750c <flatcc_builder_padding_base@@Base+0x267c>
  41f892:	mov    edx,0x50
  41f897:	call   404090 <__assert_fail@plt>
  41f89c:	lea    rdi,[rip+0x7ca2]        # 427545 <flatcc_builder_padding_base@@Base+0x26b5>
  41f8a3:	lea    rsi,[rip+0x761a]        # 426ec4 <flatcc_builder_padding_base@@Base+0x2034>
  41f8aa:	lea    rcx,[rip+0x7c5b]        # 42750c <flatcc_builder_padding_base@@Base+0x267c>
  41f8b1:	mov    edx,0x51
  41f8b6:	call   404090 <__assert_fail@plt>
  41f8bb:	lea    rdi,[rip+0x7cae]        # 427570 <flatcc_builder_padding_base@@Base+0x26e0>
  41f8c2:	lea    rsi,[rip+0x75fb]        # 426ec4 <flatcc_builder_padding_base@@Base+0x2034>
  41f8c9:	lea    rcx,[rip+0x7c3c]        # 42750c <flatcc_builder_padding_base@@Base+0x267c>
  41f8d0:	mov    edx,0x58
  41f8d5:	call   404090 <__assert_fail@plt>
  41f8da:	lea    rdi,[rip+0x7c9e]        # 42757f <flatcc_builder_padding_base@@Base+0x26ef>
  41f8e1:	lea    rsi,[rip+0x75dc]        # 426ec4 <flatcc_builder_padding_base@@Base+0x2034>
  41f8e8:	lea    rcx,[rip+0x7c1d]        # 42750c <flatcc_builder_padding_base@@Base+0x267c>
  41f8ef:	mov    edx,0x59
  41f8f4:	call   404090 <__assert_fail@plt>
  41f8f9:	lea    rdi,[rip+0x75a8]        # 426ea8 <flatcc_builder_padding_base@@Base+0x2018>
  41f900:	lea    rsi,[rip+0x75bd]        # 426ec4 <flatcc_builder_padding_base@@Base+0x2034>
  41f907:	lea    rcx,[rip+0x7627]        # 426f35 <flatcc_builder_padding_base@@Base+0x20a5>
  41f90e:	mov    edx,0xb9
  41f913:	call   404090 <__assert_fail@plt>
  41f918:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041f920 <flatcc_json_parser_error_string@@Base>:
  41f920:	cmp    edi,0x22
  41f923:	ja     41f934 <flatcc_json_parser_error_string@@Base+0x14>
  41f925:	movsxd rax,edi
  41f928:	lea    rcx,[rip+0xb3b1]        # 42ace0 <flatcc_builder_padding_base@@Base+0x5e50>
  41f92f:	mov    rax,QWORD PTR [rcx+rax*8]
  41f933:	ret    
  41f934:	lea    rax,[rip+0x78c0]        # 4271fb <flatcc_builder_padding_base@@Base+0x236b>
  41f93b:	ret    
  41f93c:	nop    DWORD PTR [rax+0x0]

000000000041f940 <flatcc_json_parser_set_error@@Base>:
  41f940:	cmp    DWORD PTR [rdi+0x20],0x0
  41f944:	je     41f94a <flatcc_json_parser_set_error@@Base+0xa>
  41f946:	mov    rax,rdx
  41f949:	ret    
  41f94a:	mov    DWORD PTR [rdi+0x20],ecx
  41f94d:	mov    eax,DWORD PTR [rdi+0x8]
  41f950:	mov    ecx,esi
  41f952:	sub    ecx,eax
  41f954:	add    ecx,0x1
  41f957:	mov    DWORD PTR [rdi+0x1c],ecx
  41f95a:	mov    QWORD PTR [rdi+0x38],rsi
  41f95e:	mov    rax,rdx
  41f961:	ret    
  41f962:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f96c:	nop    DWORD PTR [rax+0x0]

000000000041f970 <flatcc_json_parser_string_part@@Base>:
  41f970:	cmp    rsi,rdx
  41f973:	je     41f99b <flatcc_json_parser_string_part@@Base+0x2b>
  41f975:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f97f:	nop
  41f980:	movzx  eax,BYTE PTR [rsi]
  41f983:	cmp    al,0x20
  41f985:	jb     41f9aa <flatcc_json_parser_string_part@@Base+0x3a>
  41f987:	cmp    al,0x22
  41f989:	je     41f9cb <flatcc_json_parser_string_part@@Base+0x5b>
  41f98b:	cmp    al,0x5c
  41f98d:	je     41f9cb <flatcc_json_parser_string_part@@Base+0x5b>
  41f98f:	add    rsi,0x1
  41f993:	cmp    rdx,rsi
  41f996:	jne    41f980 <flatcc_json_parser_string_part@@Base+0x10>
  41f998:	mov    rsi,rdx
  41f99b:	cmp    DWORD PTR [rdi+0x20],0x0
  41f99f:	jne    41f9c8 <flatcc_json_parser_string_part@@Base+0x58>
  41f9a1:	mov    DWORD PTR [rdi+0x20],0x14
  41f9a8:	jmp    41f9b7 <flatcc_json_parser_string_part@@Base+0x47>
  41f9aa:	cmp    DWORD PTR [rdi+0x20],0x0
  41f9ae:	jne    41f9c8 <flatcc_json_parser_string_part@@Base+0x58>
  41f9b0:	mov    DWORD PTR [rdi+0x20],0x11
  41f9b7:	mov    eax,DWORD PTR [rdi+0x8]
  41f9ba:	mov    ecx,esi
  41f9bc:	sub    ecx,eax
  41f9be:	add    ecx,0x1
  41f9c1:	mov    DWORD PTR [rdi+0x1c],ecx
  41f9c4:	mov    QWORD PTR [rdi+0x38],rsi
  41f9c8:	mov    rsi,rdx
  41f9cb:	mov    rax,rsi
  41f9ce:	ret    
  41f9cf:	nop

000000000041f9d0 <flatcc_json_parser_space_ext@@Base>:
  41f9d0:	lea    rax,[rip+0x69a9]        # 426380 <flatcc_builder_padding_base@@Base+0x14f0>
  41f9d7:	mov    rcx,rdx
  41f9da:	sub    rcx,rsi
  41f9dd:	cmp    rcx,0x10
  41f9e1:	jl     41fa13 <flatcc_json_parser_space_ext@@Base+0x43>
  41f9e3:	cmp    BYTE PTR [rsi],0x20
  41f9e6:	jg     41fab1 <flatcc_json_parser_space_ext@@Base+0xe1>
  41f9ec:	movzx  r8d,WORD PTR [rsi]
  41f9f0:	lea    rcx,[rsi+0x2]
  41f9f4:	cmp    r8d,0x2020
  41f9fb:	cmovne rcx,rsi
  41f9ff:	lea    rsi,[rcx+0x1]
  41fa03:	cmp    BYTE PTR [rcx],0x20
  41fa06:	cmovne rsi,rcx
  41fa0a:	cmp    BYTE PTR [rsi],0x20
  41fa0d:	jg     41fab1 <flatcc_json_parser_space_ext@@Base+0xe1>
  41fa13:	cmp    rsi,rdx
  41fa16:	je     41faae <flatcc_json_parser_space_ext@@Base+0xde>
  41fa1c:	nop    DWORD PTR [rax+0x0]
  41fa20:	cmp    BYTE PTR [rsi],0x20
  41fa23:	jne    41fa30 <flatcc_json_parser_space_ext@@Base+0x60>
  41fa25:	add    rsi,0x1
  41fa29:	cmp    rdx,rsi
  41fa2c:	jne    41fa20 <flatcc_json_parser_space_ext@@Base+0x50>
  41fa2e:	jmp    41faae <flatcc_json_parser_space_ext@@Base+0xde>
  41fa30:	cmp    rdx,rsi
  41fa33:	je     41faae <flatcc_json_parser_space_ext@@Base+0xde>
  41fa35:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41fa3f:	nop
  41fa40:	movsx  ecx,BYTE PTR [rsi]
  41fa43:	cmp    ecx,0x20
  41fa46:	jg     41fab1 <flatcc_json_parser_space_ext@@Base+0xe1>
  41fa48:	add    ecx,0xfffffff7
  41fa4b:	cmp    ecx,0x17
  41fa4e:	ja     41fa90 <flatcc_json_parser_space_ext@@Base+0xc0>
  41fa50:	movsxd rcx,DWORD PTR [rax+rcx*4]
  41fa54:	add    rcx,rax
  41fa57:	jmp    rcx
  41fa59:	add    rsi,0x1
  41fa5d:	jmp    41fa89 <flatcc_json_parser_space_ext@@Base+0xb9>
  41fa5f:	nop
  41fa60:	mov    rcx,rdx
  41fa63:	sub    rcx,rsi
  41fa66:	cmp    rcx,0x2
  41fa6a:	jl     41fa75 <flatcc_json_parser_space_ext@@Base+0xa5>
  41fa6c:	cmp    BYTE PTR [rsi+0x1],0xa
  41fa70:	sete   cl
  41fa73:	jmp    41fa77 <flatcc_json_parser_space_ext@@Base+0xa7>
  41fa75:	xor    ecx,ecx
  41fa77:	movzx  ecx,cl
  41fa7a:	add    rsi,rcx
  41fa7d:	add    DWORD PTR [rdi+0x18],0x1
  41fa81:	add    rsi,0x1
  41fa85:	mov    QWORD PTR [rdi+0x8],rsi
  41fa89:	cmp    rsi,rdx
  41fa8c:	jne    41fa40 <flatcc_json_parser_space_ext@@Base+0x70>
  41fa8e:	jmp    41faae <flatcc_json_parser_space_ext@@Base+0xde>
  41fa90:	cmp    DWORD PTR [rdi+0x20],0x0
  41fa94:	jne    41faae <flatcc_json_parser_space_ext@@Base+0xde>
  41fa96:	mov    DWORD PTR [rdi+0x20],0x5
  41fa9d:	mov    eax,DWORD PTR [rdi+0x8]
  41faa0:	mov    ecx,esi
  41faa2:	sub    ecx,eax
  41faa4:	add    ecx,0x1
  41faa7:	mov    DWORD PTR [rdi+0x1c],ecx
  41faaa:	mov    QWORD PTR [rdi+0x38],rsi
  41faae:	mov    rsi,rdx
  41fab1:	mov    rax,rsi
  41fab4:	ret    
  41fab5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41fabf:	nop

000000000041fac0 <flatcc_json_parser_string_escape@@Base>:
  41fac0:	push   rbp
  41fac1:	push   r14
  41fac3:	push   rbx
  41fac4:	mov    rax,rdx
  41fac7:	sub    rax,rsi
  41faca:	cmp    rax,0x2
  41face:	jl     41fb5d <flatcc_json_parser_string_escape@@Base+0x9d>
  41fad4:	cmp    BYTE PTR [rsi],0x5c
  41fad7:	jne    41fb5d <flatcc_json_parser_string_escape@@Base+0x9d>
  41fadd:	movsx  ebp,BYTE PTR [rsi+0x1]
  41fae1:	add    ebp,0xffffffde
  41fae4:	cmp    ebp,0x56
  41fae7:	ja     41fb5d <flatcc_json_parser_string_escape@@Base+0x9d>
  41fae9:	lea    rbx,[rip+0x68f0]        # 4263e0 <flatcc_builder_padding_base@@Base+0x1550>
  41faf0:	movsxd rbp,DWORD PTR [rbx+rbp*4]
  41faf4:	add    rbp,rbx
  41faf7:	jmp    rbp
  41faf9:	mov    WORD PTR [rcx],0x2201
  41fafe:	jmp    41fb2f <flatcc_json_parser_string_escape@@Base+0x6f>
  41fb00:	mov    WORD PTR [rcx],0x2f01
  41fb05:	jmp    41fb2f <flatcc_json_parser_string_escape@@Base+0x6f>
  41fb07:	mov    WORD PTR [rcx],0x5c01
  41fb0c:	jmp    41fb2f <flatcc_json_parser_string_escape@@Base+0x6f>
  41fb0e:	mov    WORD PTR [rcx],0x801
  41fb13:	jmp    41fb2f <flatcc_json_parser_string_escape@@Base+0x6f>
  41fb15:	mov    WORD PTR [rcx],0xc01
  41fb1a:	jmp    41fb2f <flatcc_json_parser_string_escape@@Base+0x6f>
  41fb1c:	mov    WORD PTR [rcx],0xa01
  41fb21:	jmp    41fb2f <flatcc_json_parser_string_escape@@Base+0x6f>
  41fb23:	mov    WORD PTR [rcx],0xd01
  41fb28:	jmp    41fb2f <flatcc_json_parser_string_escape@@Base+0x6f>
  41fb2a:	mov    WORD PTR [rcx],0x901
  41fb2f:	add    rsi,0x2
  41fb33:	mov    rdx,rsi
  41fb36:	jmp    41fb7e <flatcc_json_parser_string_escape@@Base+0xbe>
  41fb38:	cmp    rax,0x5
  41fb3c:	jle    41fb5d <flatcc_json_parser_string_escape@@Base+0x9d>
  41fb3e:	movzx  eax,BYTE PTR [rsi+0x2]
  41fb42:	mov    ebx,eax
  41fb44:	add    bl,0xd0
  41fb47:	cmp    bl,0x9
  41fb4a:	ja     41fba0 <flatcc_json_parser_string_escape@@Base+0xe0>
  41fb4c:	movzx  eax,ax
  41fb4f:	shl    eax,0xc
  41fb52:	jmp    41fbb8 <flatcc_json_parser_string_escape@@Base+0xf8>
  41fb54:	mov    BYTE PTR [rcx],0x1
  41fb57:	cmp    rax,0x3
  41fb5b:	jg     41fb86 <flatcc_json_parser_string_escape@@Base+0xc6>
  41fb5d:	mov    BYTE PTR [rcx],0x0
  41fb60:	cmp    DWORD PTR [rdi+0x20],0x0
  41fb64:	jne    41fb7e <flatcc_json_parser_string_escape@@Base+0xbe>
  41fb66:	mov    DWORD PTR [rdi+0x20],0x12
  41fb6d:	mov    eax,DWORD PTR [rdi+0x8]
  41fb70:	mov    ecx,esi
  41fb72:	sub    ecx,eax
  41fb74:	add    ecx,0x1
  41fb77:	mov    DWORD PTR [rdi+0x1c],ecx
  41fb7a:	mov    QWORD PTR [rdi+0x38],rsi
  41fb7e:	mov    rax,rdx
  41fb81:	pop    rbx
  41fb82:	pop    r14
  41fb84:	pop    rbp
  41fb85:	ret    
  41fb86:	mov    r8b,BYTE PTR [rsi+0x2]
  41fb8a:	mov    eax,r8d
  41fb8d:	add    al,0xd0
  41fb8f:	cmp    al,0x9
  41fb91:	ja     41fc76 <flatcc_json_parser_string_escape@@Base+0x1b6>
  41fb97:	shl    r8b,0x4
  41fb9b:	jmp    41fc8d <flatcc_json_parser_string_escape@@Base+0x1cd>
  41fba0:	mov    ebx,eax
  41fba2:	or     bl,0x20
  41fba5:	add    bl,0x9f
  41fba8:	cmp    bl,0x5
  41fbab:	ja     41fb5d <flatcc_json_parser_string_escape@@Base+0x9d>
  41fbad:	movzx  eax,ax
  41fbb0:	shl    eax,0xc
  41fbb3:	add    eax,0xffff9000
  41fbb8:	mov    r8b,BYTE PTR [rsi+0x3]
  41fbbc:	mov    ebx,r8d
  41fbbf:	add    bl,0xd0
  41fbc2:	mov    r9w,0xd000
  41fbc7:	cmp    bl,0xa
  41fbca:	jb     41fbe4 <flatcc_json_parser_string_escape@@Base+0x124>
  41fbcc:	or     r8b,0x20
  41fbd0:	mov    ebx,r8d
  41fbd3:	add    bl,0x9f
  41fbd6:	mov    r9w,0xa900
  41fbdb:	cmp    bl,0x6
  41fbde:	jae    41fb5d <flatcc_json_parser_string_escape@@Base+0x9d>
  41fbe4:	mov    r10b,BYTE PTR [rsi+0x4]
  41fbe8:	mov    ebx,r10d
  41fbeb:	add    bl,0xd0
  41fbee:	mov    r11w,0xfd00
  41fbf3:	cmp    bl,0xa
  41fbf6:	jb     41fc10 <flatcc_json_parser_string_escape@@Base+0x150>
  41fbf8:	or     r10b,0x20
  41fbfc:	mov    ebx,r10d
  41fbff:	add    bl,0x9f
  41fc02:	mov    r11w,0xfa90
  41fc07:	cmp    bl,0x6
  41fc0a:	jae    41fb5d <flatcc_json_parser_string_escape@@Base+0x9d>
  41fc10:	mov    r14b,BYTE PTR [rsi+0x5]
  41fc14:	mov    ebx,r14d
  41fc17:	add    bl,0xd0
  41fc1a:	mov    bp,0xffd0
  41fc1e:	cmp    bl,0xa
  41fc21:	jb     41fc3a <flatcc_json_parser_string_escape@@Base+0x17a>
  41fc23:	or     r14b,0x20
  41fc27:	mov    ebx,r14d
  41fc2a:	add    bl,0x9f
  41fc2d:	mov    bp,0xffa9
  41fc31:	cmp    bl,0x6
  41fc34:	jae    41fb5d <flatcc_json_parser_string_escape@@Base+0x9d>
  41fc3a:	movzx  edx,r8b
  41fc3e:	shl    edx,0x8
  41fc41:	add    r9d,edx
  41fc44:	or     eax,r9d
  41fc47:	movsx  edx,r10b
  41fc4b:	shl    edx,0x4
  41fc4e:	movsx  edi,r11w
  41fc52:	add    edi,edx
  41fc54:	or     eax,edi
  41fc56:	movsx  edx,r14b
  41fc5a:	movsx  edi,bp
  41fc5d:	add    edi,edx
  41fc5f:	or     eax,edi
  41fc61:	movzx  edx,ax
  41fc64:	cmp    edx,0x7f
  41fc67:	ja     41fcc6 <flatcc_json_parser_string_escape@@Base+0x206>
  41fc69:	mov    BYTE PTR [rcx],0x1
  41fc6c:	mov    edi,0x1
  41fc71:	jmp    41fd0d <flatcc_json_parser_string_escape@@Base+0x24d>
  41fc76:	mov    eax,r8d
  41fc79:	or     al,0x20
  41fc7b:	add    al,0x9f
  41fc7d:	cmp    al,0x5
  41fc7f:	ja     41fb5d <flatcc_json_parser_string_escape@@Base+0x9d>
  41fc85:	shl    r8b,0x4
  41fc89:	add    r8b,0x90
  41fc8d:	mov    r9b,BYTE PTR [rsi+0x3]
  41fc91:	mov    ebx,r9d
  41fc94:	add    bl,0xd0
  41fc97:	cmp    bl,0xa
  41fc9a:	jb     41fcb4 <flatcc_json_parser_string_escape@@Base+0x1f4>
  41fc9c:	or     r9b,0x20
  41fca0:	mov    eax,r9d
  41fca3:	add    al,0x9f
  41fca5:	cmp    al,0x5
  41fca7:	ja     41fb5d <flatcc_json_parser_string_escape@@Base+0x9d>
  41fcad:	add    r9b,0xa9
  41fcb1:	mov    ebx,r9d
  41fcb4:	or     bl,r8b
  41fcb7:	mov    BYTE PTR [rcx+0x1],bl
  41fcba:	add    rsi,0x4
  41fcbe:	mov    rdx,rsi
  41fcc1:	jmp    41fb7e <flatcc_json_parser_string_escape@@Base+0xbe>
  41fcc6:	cmp    edx,0x7ff
  41fccc:	ja     41fce7 <flatcc_json_parser_string_escape@@Base+0x227>
  41fcce:	mov    BYTE PTR [rcx],0x2
  41fcd1:	mov    edx,eax
  41fcd3:	shr    edx,0x6
  41fcd6:	or     dl,0xc0
  41fcd9:	mov    BYTE PTR [rcx+0x1],dl
  41fcdc:	and    al,0x3f
  41fcde:	or     al,0x80
  41fce0:	mov    edi,0x2
  41fce5:	jmp    41fd0d <flatcc_json_parser_string_escape@@Base+0x24d>
  41fce7:	mov    BYTE PTR [rcx],0x3
  41fcea:	mov    eax,edx
  41fcec:	shr    eax,0xc
  41fcef:	or     al,0xe0
  41fcf1:	mov    BYTE PTR [rcx+0x1],al
  41fcf4:	mov    eax,edx
  41fcf6:	shr    eax,0x6
  41fcf9:	and    al,0x3f
  41fcfb:	or     al,0x80
  41fcfd:	mov    BYTE PTR [rcx+0x2],al
  41fd00:	and    dl,0x3f
  41fd03:	or     dl,0x80
  41fd06:	mov    edi,0x3
  41fd0b:	mov    eax,edx
  41fd0d:	mov    BYTE PTR [rcx+rdi*1],al
  41fd10:	add    rsi,0x6
  41fd14:	mov    rdx,rsi
  41fd17:	jmp    41fb7e <flatcc_json_parser_string_escape@@Base+0xbe>
  41fd1c:	nop    DWORD PTR [rax+0x0]

000000000041fd20 <flatcc_json_parser_skip_constant@@Base>:
  41fd20:	push   r15
  41fd22:	push   r14
  41fd24:	push   rbx
  41fd25:	mov    rbx,rsi
  41fd28:	cmp    rsi,rdx
  41fd2b:	je     41fdb1 <flatcc_json_parser_skip_constant@@Base+0x91>
  41fd31:	mov    r14,rdx
  41fd34:	mov    r15,rdi
  41fd37:	nop    WORD PTR [rax+rax*1+0x0]
  41fd40:	movzx  eax,BYTE PTR [rbx]
  41fd43:	test   al,al
  41fd45:	js     41fd70 <flatcc_json_parser_skip_constant@@Base+0x50>
  41fd47:	cmp    al,0x5f
  41fd49:	je     41fd70 <flatcc_json_parser_skip_constant@@Base+0x50>
  41fd4b:	cmp    al,0x2e
  41fd4d:	je     41fd70 <flatcc_json_parser_skip_constant@@Base+0x50>
  41fd4f:	mov    ecx,eax
  41fd51:	add    cl,0xd0
  41fd54:	cmp    cl,0x9
  41fd57:	jbe    41fd70 <flatcc_json_parser_skip_constant@@Base+0x50>
  41fd59:	mov    ecx,eax
  41fd5b:	or     cl,0x20
  41fd5e:	add    cl,0x9f
  41fd61:	cmp    cl,0x19
  41fd64:	ja     41fd81 <flatcc_json_parser_skip_constant@@Base+0x61>
  41fd66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41fd70:	add    rbx,0x1
  41fd74:	mov    rax,rbx
  41fd77:	mov    rbx,rax
  41fd7a:	cmp    rax,r14
  41fd7d:	jne    41fd40 <flatcc_json_parser_skip_constant@@Base+0x20>
  41fd7f:	jmp    41fdae <flatcc_json_parser_skip_constant@@Base+0x8e>
  41fd81:	mov    rcx,r14
  41fd84:	sub    rcx,rbx
  41fd87:	cmp    rcx,0x2
  41fd8b:	jl     41fd99 <flatcc_json_parser_skip_constant@@Base+0x79>
  41fd8d:	cmp    al,0x20
  41fd8f:	jg     41fdb1 <flatcc_json_parser_skip_constant@@Base+0x91>
  41fd91:	jne    41fd99 <flatcc_json_parser_skip_constant@@Base+0x79>
  41fd93:	cmp    BYTE PTR [rbx+0x1],0x20
  41fd97:	jg     41fd70 <flatcc_json_parser_skip_constant@@Base+0x50>
  41fd99:	mov    rdi,r15
  41fd9c:	mov    rsi,rbx
  41fd9f:	mov    rdx,r14
  41fda2:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  41fda7:	cmp    rax,rbx
  41fdaa:	jne    41fd77 <flatcc_json_parser_skip_constant@@Base+0x57>
  41fdac:	jmp    41fdb1 <flatcc_json_parser_skip_constant@@Base+0x91>
  41fdae:	mov    rbx,r14
  41fdb1:	mov    rax,rbx
  41fdb4:	pop    rbx
  41fdb5:	pop    r14
  41fdb7:	pop    r15
  41fdb9:	ret    
  41fdba:	nop    WORD PTR [rax+rax*1+0x0]

000000000041fdc0 <flatcc_json_parser_match_constant@@Base>:
  41fdc0:	push   r15
  41fdc2:	push   r14
  41fdc4:	push   r12
  41fdc6:	push   rbx
  41fdc7:	push   rax
  41fdc8:	mov    r14,r8
  41fdcb:	mov    r15,rsi
  41fdce:	movsxd rbx,ecx
  41fdd1:	mov    rax,rdx
  41fdd4:	sub    rax,rsi
  41fdd7:	cmp    rax,rbx
  41fdda:	jle    41fec5 <flatcc_json_parser_match_constant@@Base+0x105>
  41fde0:	mov    r12,rdx
  41fde3:	add    rbx,r15
  41fde6:	cmp    DWORD PTR [rdi+0x14],0x0
  41fdea:	je     41fe4a <flatcc_json_parser_match_constant@@Base+0x8a>
  41fdec:	mov    rax,r12
  41fdef:	sub    rax,rbx
  41fdf2:	cmp    rax,0x2
  41fdf6:	jl     41fe13 <flatcc_json_parser_match_constant@@Base+0x53>
  41fdf8:	cmp    BYTE PTR [rbx],0x20
  41fdfb:	mov    rax,rbx
  41fdfe:	jg     41fe1e <flatcc_json_parser_match_constant@@Base+0x5e>
  41fe00:	jne    41fe13 <flatcc_json_parser_match_constant@@Base+0x53>
  41fe02:	cmp    BYTE PTR [rbx+0x1],0x20
  41fe06:	jle    41fe13 <flatcc_json_parser_match_constant@@Base+0x53>
  41fe08:	lea    rax,[rbx+0x1]
  41fe0c:	cmp    rax,r12
  41fe0f:	jne    41fe23 <flatcc_json_parser_match_constant@@Base+0x63>
  41fe11:	jmp    41fe83 <flatcc_json_parser_match_constant@@Base+0xc3>
  41fe13:	mov    rsi,rbx
  41fe16:	mov    rdx,r12
  41fe19:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  41fe1e:	cmp    rax,r12
  41fe21:	je     41fe83 <flatcc_json_parser_match_constant@@Base+0xc3>
  41fe23:	cmp    rax,rbx
  41fe26:	je     41fe8f <flatcc_json_parser_match_constant@@Base+0xcf>
  41fe28:	mov    cl,BYTE PTR [rax]
  41fe2a:	cmp    cl,0x5f
  41fe2d:	je     41fe3e <flatcc_json_parser_match_constant@@Base+0x7e>
  41fe2f:	test   cl,cl
  41fe31:	js     41fe3e <flatcc_json_parser_match_constant@@Base+0x7e>
  41fe33:	or     cl,0x20
  41fe36:	add    cl,0x9f
  41fe39:	cmp    cl,0x19
  41fe3c:	ja     41fe8f <flatcc_json_parser_match_constant@@Base+0xcf>
  41fe3e:	mov    DWORD PTR [r14],0x1
  41fe45:	jmp    41fecf <flatcc_json_parser_match_constant@@Base+0x10f>
  41fe4a:	movsx  eax,BYTE PTR [rbx]
  41fe4d:	cmp    eax,0x20
  41fe50:	jne    41fea9 <flatcc_json_parser_match_constant@@Base+0xe9>
  41fe52:	lea    rax,[r12-0x1]
  41fe57:	nop    WORD PTR [rax+rax*1+0x0]
  41fe60:	cmp    rax,rbx
  41fe63:	je     41fe83 <flatcc_json_parser_match_constant@@Base+0xc3>
  41fe65:	movzx  ecx,BYTE PTR [rbx+0x1]
  41fe69:	add    rbx,0x1
  41fe6d:	cmp    cl,0x20
  41fe70:	je     41fe60 <flatcc_json_parser_match_constant@@Base+0xa0>
  41fe72:	cmp    cl,0x22
  41fe75:	je     41fedb <flatcc_json_parser_match_constant@@Base+0x11b>
  41fe77:	mov    DWORD PTR [r14],0x1
  41fe7e:	mov    rax,rbx
  41fe81:	jmp    41fecf <flatcc_json_parser_match_constant@@Base+0x10f>
  41fe83:	mov    DWORD PTR [r14],0x0
  41fe8a:	mov    rax,r12
  41fe8d:	jmp    41fecf <flatcc_json_parser_match_constant@@Base+0x10f>
  41fe8f:	mov    DWORD PTR [r14],0x0
  41fe96:	mov    cl,BYTE PTR [rax]
  41fe98:	cmp    cl,0x2c
  41fe9b:	je     41fecf <flatcc_json_parser_match_constant@@Base+0x10f>
  41fe9d:	cmp    cl,0x5d
  41fea0:	je     41fecf <flatcc_json_parser_match_constant@@Base+0x10f>
  41fea2:	cmp    cl,0x7d
  41fea5:	jne    41fecc <flatcc_json_parser_match_constant@@Base+0x10c>
  41fea7:	jmp    41fecf <flatcc_json_parser_match_constant@@Base+0x10f>
  41fea9:	cmp    eax,0x22
  41feac:	je     41fedb <flatcc_json_parser_match_constant@@Base+0x11b>
  41feae:	cmp    eax,0x5c
  41feb1:	jne    41fec5 <flatcc_json_parser_match_constant@@Base+0x105>
  41feb3:	mov    DWORD PTR [r14],0x0
  41feba:	cmp    DWORD PTR [rdi+0x20],0x0
  41febe:	je     41ff1b <flatcc_json_parser_match_constant@@Base+0x15b>
  41fec0:	mov    rax,r12
  41fec3:	jmp    41fecf <flatcc_json_parser_match_constant@@Base+0x10f>
  41fec5:	mov    DWORD PTR [r14],0x0
  41fecc:	mov    rax,r15
  41fecf:	add    rsp,0x8
  41fed3:	pop    rbx
  41fed4:	pop    r12
  41fed6:	pop    r14
  41fed8:	pop    r15
  41feda:	ret    
  41fedb:	lea    rax,[rbx+0x1]
  41fedf:	mov    rcx,rbx
  41fee2:	not    rcx
  41fee5:	cmp    rcx,0x2
  41fee9:	jl     41ff08 <flatcc_json_parser_match_constant@@Base+0x148>
  41feeb:	cmp    BYTE PTR [rax],0x20
  41feee:	jg     41ff12 <flatcc_json_parser_match_constant@@Base+0x152>
  41fef0:	jne    41ff08 <flatcc_json_parser_match_constant@@Base+0x148>
  41fef2:	cmp    BYTE PTR [rbx+0x2],0x20
  41fef6:	jle    41ff08 <flatcc_json_parser_match_constant@@Base+0x148>
  41fef8:	add    rbx,0x2
  41fefc:	mov    rax,rbx
  41feff:	mov    DWORD PTR [r14],0x0
  41ff06:	jmp    41fecf <flatcc_json_parser_match_constant@@Base+0x10f>
  41ff08:	xor    edx,edx
  41ff0a:	mov    rsi,rax
  41ff0d:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  41ff12:	mov    DWORD PTR [r14],0x0
  41ff19:	jmp    41fecf <flatcc_json_parser_match_constant@@Base+0x10f>
  41ff1b:	mov    DWORD PTR [rdi+0x20],0x12
  41ff22:	mov    eax,DWORD PTR [rdi+0x8]
  41ff25:	mov    ecx,ebx
  41ff27:	sub    ecx,eax
  41ff29:	add    ecx,0x1
  41ff2c:	mov    DWORD PTR [rdi+0x1c],ecx
  41ff2f:	mov    QWORD PTR [rdi+0x38],rbx
  41ff33:	mov    rax,r12
  41ff36:	jmp    41fecf <flatcc_json_parser_match_constant@@Base+0x10f>
  41ff38:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041ff40 <flatcc_json_parser_unmatched_symbol@@Base>:
  41ff40:	push   r14
  41ff42:	push   rbx
  41ff43:	push   rax
  41ff44:	mov    rbx,rdx
  41ff47:	mov    r14,rdi
  41ff4a:	test   BYTE PTR [rdi+0x10],0x1
  41ff4e:	jne    41ff7b <flatcc_json_parser_unmatched_symbol@@Base+0x3b>
  41ff50:	cmp    DWORD PTR [r14+0x20],0x0
  41ff55:	jne    4200eb <flatcc_json_parser_unmatched_symbol@@Base+0x1ab>
  41ff5b:	mov    DWORD PTR [r14+0x20],0xd
  41ff63:	mov    eax,DWORD PTR [r14+0x8]
  41ff67:	mov    ecx,esi
  41ff69:	sub    ecx,eax
  41ff6b:	add    ecx,0x1
  41ff6e:	mov    DWORD PTR [r14+0x1c],ecx
  41ff72:	mov    QWORD PTR [r14+0x38],rsi
  41ff76:	jmp    4200eb <flatcc_json_parser_unmatched_symbol@@Base+0x1ab>
  41ff7b:	cmp    DWORD PTR [r14+0x14],0x0
  41ff80:	je     41ffe8 <flatcc_json_parser_unmatched_symbol@@Base+0xa8>
  41ff82:	cmp    rsi,rbx
  41ff85:	je     420067 <flatcc_json_parser_unmatched_symbol@@Base+0x127>
  41ff8b:	mov    dl,BYTE PTR [rsi]
  41ff8d:	cmp    dl,0x21
  41ff90:	jl     420067 <flatcc_json_parser_unmatched_symbol@@Base+0x127>
  41ff96:	lea    rcx,[rbx-0x1]
  41ff9a:	nop    WORD PTR [rax+rax*1+0x0]
  41ffa0:	mov    eax,edx
  41ffa2:	cmp    dl,0x2e
  41ffa5:	je     41ffd0 <flatcc_json_parser_unmatched_symbol@@Base+0x90>
  41ffa7:	cmp    al,0x5f
  41ffa9:	je     41ffd0 <flatcc_json_parser_unmatched_symbol@@Base+0x90>
  41ffab:	mov    edx,eax
  41ffad:	add    dl,0xd0
  41ffb0:	cmp    dl,0x9
  41ffb3:	jbe    41ffd0 <flatcc_json_parser_unmatched_symbol@@Base+0x90>
  41ffb5:	mov    edx,eax
  41ffb7:	or     dl,0x20
  41ffba:	add    dl,0x9f
  41ffbd:	cmp    dl,0x1a
  41ffc0:	jae    41ffe2 <flatcc_json_parser_unmatched_symbol@@Base+0xa2>
  41ffc2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ffcc:	nop    DWORD PTR [rax+0x0]
  41ffd0:	cmp    rcx,rsi
  41ffd3:	je     420036 <flatcc_json_parser_unmatched_symbol@@Base+0xf6>
  41ffd5:	movzx  edx,BYTE PTR [rsi+0x1]
  41ffd9:	add    rsi,0x1
  41ffdd:	cmp    dl,0x21
  41ffe0:	jge    41ffa0 <flatcc_json_parser_unmatched_symbol@@Base+0x60>
  41ffe2:	cmp    al,0x2e
  41ffe4:	je     42003d <flatcc_json_parser_unmatched_symbol@@Base+0xfd>
  41ffe6:	jmp    420067 <flatcc_json_parser_unmatched_symbol@@Base+0x127>
  41ffe8:	cmp    rsi,rbx
  41ffeb:	je     42001c <flatcc_json_parser_unmatched_symbol@@Base+0xdc>
  41ffed:	nop    DWORD PTR [rax]
  41fff0:	movzx  eax,BYTE PTR [rsi]
  41fff3:	cmp    al,0x5c
  41fff5:	je     420000 <flatcc_json_parser_unmatched_symbol@@Base+0xc0>
  41fff7:	cmp    al,0x22
  41fff9:	jne    420010 <flatcc_json_parser_unmatched_symbol@@Base+0xd0>
  41fffb:	jmp    420030 <flatcc_json_parser_unmatched_symbol@@Base+0xf0>
  41fffd:	nop    DWORD PTR [rax]
  420000:	mov    rax,rbx
  420003:	sub    rax,rsi
  420006:	cmp    rax,0x2
  42000a:	jl     42001c <flatcc_json_parser_unmatched_symbol@@Base+0xdc>
  42000c:	add    rsi,0x1
  420010:	add    rsi,0x1
  420014:	cmp    rsi,rbx
  420017:	jne    41fff0 <flatcc_json_parser_unmatched_symbol@@Base+0xb0>
  420019:	mov    rsi,rbx
  42001c:	cmp    DWORD PTR [r14+0x20],0x0
  420021:	mov    rax,rbx
  420024:	jne    42006a <flatcc_json_parser_unmatched_symbol@@Base+0x12a>
  420026:	mov    DWORD PTR [r14+0x20],0x14
  42002e:	jmp    42004f <flatcc_json_parser_unmatched_symbol@@Base+0x10f>
  420030:	add    rsi,0x1
  420034:	jmp    420067 <flatcc_json_parser_unmatched_symbol@@Base+0x127>
  420036:	mov    rsi,rbx
  420039:	cmp    al,0x2e
  42003b:	jne    420067 <flatcc_json_parser_unmatched_symbol@@Base+0x127>
  42003d:	cmp    DWORD PTR [r14+0x20],0x0
  420042:	mov    rax,rbx
  420045:	jne    42006a <flatcc_json_parser_unmatched_symbol@@Base+0x12a>
  420047:	mov    DWORD PTR [r14+0x20],0x5
  42004f:	mov    eax,DWORD PTR [r14+0x8]
  420053:	mov    ecx,esi
  420055:	sub    ecx,eax
  420057:	add    ecx,0x1
  42005a:	mov    DWORD PTR [r14+0x1c],ecx
  42005e:	mov    QWORD PTR [r14+0x38],rsi
  420062:	mov    rax,rbx
  420065:	jmp    42006a <flatcc_json_parser_unmatched_symbol@@Base+0x12a>
  420067:	mov    rax,rsi
  42006a:	mov    rcx,rbx
  42006d:	sub    rcx,rax
  420070:	cmp    rcx,0x2
  420074:	jl     42008e <flatcc_json_parser_unmatched_symbol@@Base+0x14e>
  420076:	cmp    BYTE PTR [rax],0x20
  420079:	jg     42009c <flatcc_json_parser_unmatched_symbol@@Base+0x15c>
  42007b:	jne    42008e <flatcc_json_parser_unmatched_symbol@@Base+0x14e>
  42007d:	cmp    BYTE PTR [rax+0x1],0x20
  420081:	jle    42008e <flatcc_json_parser_unmatched_symbol@@Base+0x14e>
  420083:	add    rax,0x1
  420087:	cmp    rax,rbx
  42008a:	jne    4200a1 <flatcc_json_parser_unmatched_symbol@@Base+0x161>
  42008c:	jmp    4200c9 <flatcc_json_parser_unmatched_symbol@@Base+0x189>
  42008e:	mov    rdi,r14
  420091:	mov    rsi,rax
  420094:	mov    rdx,rbx
  420097:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  42009c:	cmp    rax,rbx
  42009f:	je     4200c9 <flatcc_json_parser_unmatched_symbol@@Base+0x189>
  4200a1:	cmp    BYTE PTR [rax],0x3a
  4200a4:	jne    4200c9 <flatcc_json_parser_unmatched_symbol@@Base+0x189>
  4200a6:	lea    rsi,[rax+0x1]
  4200aa:	mov    rcx,rbx
  4200ad:	sub    rcx,rsi
  4200b0:	cmp    rcx,0x2
  4200b4:	jl     4200f6 <flatcc_json_parser_unmatched_symbol@@Base+0x1b6>
  4200b6:	cmp    BYTE PTR [rsi],0x20
  4200b9:	jg     420104 <flatcc_json_parser_unmatched_symbol@@Base+0x1c4>
  4200bb:	jne    4200f6 <flatcc_json_parser_unmatched_symbol@@Base+0x1b6>
  4200bd:	cmp    BYTE PTR [rax+0x2],0x20
  4200c1:	jle    4200f6 <flatcc_json_parser_unmatched_symbol@@Base+0x1b6>
  4200c3:	add    rax,0x2
  4200c7:	jmp    420101 <flatcc_json_parser_unmatched_symbol@@Base+0x1c1>
  4200c9:	cmp    DWORD PTR [r14+0x20],0x0
  4200ce:	jne    4200eb <flatcc_json_parser_unmatched_symbol@@Base+0x1ab>
  4200d0:	mov    DWORD PTR [r14+0x20],0x4
  4200d8:	mov    ecx,DWORD PTR [r14+0x8]
  4200dc:	mov    edx,eax
  4200de:	sub    edx,ecx
  4200e0:	add    edx,0x1
  4200e3:	mov    DWORD PTR [r14+0x1c],edx
  4200e7:	mov    QWORD PTR [r14+0x38],rax
  4200eb:	mov    rax,rbx
  4200ee:	add    rsp,0x8
  4200f2:	pop    rbx
  4200f3:	pop    r14
  4200f5:	ret    
  4200f6:	mov    rdi,r14
  4200f9:	mov    rdx,rbx
  4200fc:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  420101:	mov    rsi,rax
  420104:	mov    rdi,r14
  420107:	mov    rdx,rbx
  42010a:	add    rsp,0x8
  42010e:	pop    rbx
  42010f:	pop    r14
  420111:	jmp    420120 <flatcc_json_parser_generic_json@@Base>
  420116:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000420120 <flatcc_json_parser_generic_json@@Base>:
  420120:	push   rbp
  420121:	push   r15
  420123:	push   r14
  420125:	push   r13
  420127:	push   r12
  420129:	push   rbx
  42012a:	sub    rsp,0x238
  420131:	mov    rbx,rsi
  420134:	cmp    rsi,rdx
  420137:	je     420c48 <flatcc_json_parser_generic_json@@Base+0xb28>
  42013d:	mov    r12,rdx
  420140:	mov    r14,rdi
  420143:	lea    rax,[rsp+0x30]
  420148:	lea    r15,[rdi+0x20]
  42014c:	lea    rcx,[rdi+0x8]
  420150:	mov    QWORD PTR [rsp+0x8],rcx
  420155:	lea    rcx,[rdi+0x1c]
  420159:	mov    QWORD PTR [rsp+0x10],rcx
  42015e:	lea    rcx,[rdi+0x38]
  420162:	mov    QWORD PTR [rsp+0x18],rcx
  420167:	lea    rcx,[rdx-0x1]
  42016b:	mov    QWORD PTR [rsp+0x20],rcx
  420170:	xor    ebp,ebp
  420172:	test   rbp,rbp
  420175:	je     420394 <flatcc_json_parser_generic_json@@Base+0x274>
  42017b:	cmp    BYTE PTR [rax-0x1],0x7d
  42017f:	jne    420394 <flatcc_json_parser_generic_json@@Base+0x274>
  420185:	mov    al,BYTE PTR [rbx]
  420187:	cmp    al,0x2e
  420189:	je     4201e5 <flatcc_json_parser_generic_json@@Base+0xc5>
  42018b:	cmp    al,0x22
  42018d:	jne    420225 <flatcc_json_parser_generic_json@@Base+0x105>
  420193:	add    rbx,0x1
  420197:	mov    DWORD PTR [r14+0x14],0x0
  42019f:	mov    rcx,r12
  4201a2:	cmp    rbx,r12
  4201a5:	je     4202da <flatcc_json_parser_generic_json@@Base+0x1ba>
  4201ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4201b0:	movzx  eax,BYTE PTR [rbx]
  4201b3:	cmp    al,0x5c
  4201b5:	je     4201c0 <flatcc_json_parser_generic_json@@Base+0xa0>
  4201b7:	cmp    al,0x22
  4201b9:	jne    4201d4 <flatcc_json_parser_generic_json@@Base+0xb4>
  4201bb:	jmp    420296 <flatcc_json_parser_generic_json@@Base+0x176>
  4201c0:	mov    rax,r12
  4201c3:	sub    rax,rbx
  4201c6:	cmp    rax,0x2
  4201ca:	jl     4202d7 <flatcc_json_parser_generic_json@@Base+0x1b7>
  4201d0:	add    rbx,0x1
  4201d4:	add    rbx,0x1
  4201d8:	cmp    rbx,r12
  4201db:	jne    4201b0 <flatcc_json_parser_generic_json@@Base+0x90>
  4201dd:	mov    rcx,r12
  4201e0:	jmp    4202da <flatcc_json_parser_generic_json@@Base+0x1ba>
  4201e5:	cmp    DWORD PTR [r15],0x0
  4201e9:	jne    42020f <flatcc_json_parser_generic_json@@Base+0xef>
  4201eb:	mov    DWORD PTR [r15],0x5
  4201f2:	mov    rax,QWORD PTR [rsp+0x8]
  4201f7:	mov    eax,DWORD PTR [rax]
  4201f9:	mov    ecx,ebx
  4201fb:	sub    ecx,eax
  4201fd:	add    ecx,0x1
  420200:	mov    rax,QWORD PTR [rsp+0x10]
  420205:	mov    DWORD PTR [rax],ecx
  420207:	mov    rax,QWORD PTR [rsp+0x18]
  42020c:	mov    QWORD PTR [rax],rbx
  42020f:	cmp    DWORD PTR [r14+0x14],0x0
  420214:	mov    rcx,r12
  420217:	mov    rax,r12
  42021a:	jne    420310 <flatcc_json_parser_generic_json@@Base+0x1f0>
  420220:	jmp    4202da <flatcc_json_parser_generic_json@@Base+0x1ba>
  420225:	mov    DWORD PTR [r14+0x14],0x1
  42022d:	mov    rax,r12
  420230:	cmp    rbx,r12
  420233:	je     420310 <flatcc_json_parser_generic_json@@Base+0x1f0>
  420239:	mov    cl,BYTE PTR [rbx]
  42023b:	mov    rax,rbx
  42023e:	cmp    cl,0x21
  420241:	jl     420310 <flatcc_json_parser_generic_json@@Base+0x1f0>
  420247:	nop    WORD PTR [rax+rax*1+0x0]
  420250:	mov    eax,ecx
  420252:	cmp    cl,0x2e
  420255:	je     420280 <flatcc_json_parser_generic_json@@Base+0x160>
  420257:	cmp    al,0x5f
  420259:	je     420280 <flatcc_json_parser_generic_json@@Base+0x160>
  42025b:	mov    ecx,eax
  42025d:	add    cl,0xd0
  420260:	cmp    cl,0x9
  420263:	jbe    420280 <flatcc_json_parser_generic_json@@Base+0x160>
  420265:	mov    ecx,eax
  420267:	or     cl,0x20
  42026a:	add    cl,0x9f
  42026d:	cmp    cl,0x1a
  420270:	jae    42029f <flatcc_json_parser_generic_json@@Base+0x17f>
  420272:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42027c:	nop    DWORD PTR [rax+0x0]
  420280:	cmp    QWORD PTR [rsp+0x20],rbx
  420285:	je     42029c <flatcc_json_parser_generic_json@@Base+0x17c>
  420287:	movzx  ecx,BYTE PTR [rbx+0x1]
  42028b:	add    rbx,0x1
  42028f:	cmp    cl,0x21
  420292:	jge    420250 <flatcc_json_parser_generic_json@@Base+0x130>
  420294:	jmp    42029f <flatcc_json_parser_generic_json@@Base+0x17f>
  420296:	add    rbx,0x1
  42029a:	jmp    4202d2 <flatcc_json_parser_generic_json@@Base+0x1b2>
  42029c:	mov    rbx,r12
  42029f:	cmp    al,0x2e
  4202a1:	jne    4202d2 <flatcc_json_parser_generic_json@@Base+0x1b2>
  4202a3:	cmp    DWORD PTR [r15],0x0
  4202a7:	mov    rax,r12
  4202aa:	jne    420310 <flatcc_json_parser_generic_json@@Base+0x1f0>
  4202ac:	mov    DWORD PTR [r15],0x5
  4202b3:	mov    rax,QWORD PTR [rsp+0x8]
  4202b8:	mov    eax,DWORD PTR [rax]
  4202ba:	mov    ecx,ebx
  4202bc:	sub    ecx,eax
  4202be:	add    ecx,0x1
  4202c1:	mov    rax,QWORD PTR [rsp+0x10]
  4202c6:	mov    DWORD PTR [rax],ecx
  4202c8:	mov    rax,QWORD PTR [rsp+0x18]
  4202cd:	mov    QWORD PTR [rax],rbx
  4202d0:	jmp    420307 <flatcc_json_parser_generic_json@@Base+0x1e7>
  4202d2:	mov    rax,rbx
  4202d5:	jmp    420310 <flatcc_json_parser_generic_json@@Base+0x1f0>
  4202d7:	mov    rcx,rbx
  4202da:	cmp    DWORD PTR [r15],0x0
  4202de:	mov    rax,r12
  4202e1:	jne    420310 <flatcc_json_parser_generic_json@@Base+0x1f0>
  4202e3:	mov    DWORD PTR [r15],0x14
  4202ea:	mov    rax,QWORD PTR [rsp+0x8]
  4202ef:	mov    eax,DWORD PTR [rax]
  4202f1:	mov    edx,ecx
  4202f3:	sub    edx,eax
  4202f5:	add    edx,0x1
  4202f8:	mov    rax,QWORD PTR [rsp+0x10]
  4202fd:	mov    DWORD PTR [rax],edx
  4202ff:	mov    rax,QWORD PTR [rsp+0x18]
  420304:	mov    QWORD PTR [rax],rcx
  420307:	mov    rax,r12
  42030a:	nop    WORD PTR [rax+rax*1+0x0]
  420310:	mov    rcx,r12
  420313:	sub    rcx,rax
  420316:	cmp    rcx,0x2
  42031a:	jl     420337 <flatcc_json_parser_generic_json@@Base+0x217>
  42031c:	cmp    BYTE PTR [rax],0x20
  42031f:	jg     420345 <flatcc_json_parser_generic_json@@Base+0x225>
  420321:	jne    420337 <flatcc_json_parser_generic_json@@Base+0x217>
  420323:	cmp    BYTE PTR [rax+0x1],0x20
  420327:	jle    420337 <flatcc_json_parser_generic_json@@Base+0x217>
  420329:	add    rax,0x1
  42032d:	cmp    rax,r12
  420330:	jne    42034e <flatcc_json_parser_generic_json@@Base+0x22e>
  420332:	jmp    420c5d <flatcc_json_parser_generic_json@@Base+0xb3d>
  420337:	mov    rdi,r14
  42033a:	mov    rsi,rax
  42033d:	mov    rdx,r12
  420340:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  420345:	cmp    rax,r12
  420348:	je     420c5d <flatcc_json_parser_generic_json@@Base+0xb3d>
  42034e:	cmp    BYTE PTR [rax],0x3a
  420351:	jne    420c6c <flatcc_json_parser_generic_json@@Base+0xb4c>
  420357:	lea    r13,[rax+0x1]
  42035b:	mov    rcx,r12
  42035e:	sub    rcx,r13
  420361:	cmp    rcx,0x2
  420365:	jl     420383 <flatcc_json_parser_generic_json@@Base+0x263>
  420367:	mov    cl,BYTE PTR [r13+0x0]
  42036b:	cmp    cl,0x20
  42036e:	jg     420399 <flatcc_json_parser_generic_json@@Base+0x279>
  420370:	jne    420383 <flatcc_json_parser_generic_json@@Base+0x263>
  420372:	mov    cl,BYTE PTR [rax+0x2]
  420375:	cmp    cl,0x20
  420378:	jle    420383 <flatcc_json_parser_generic_json@@Base+0x263>
  42037a:	add    rax,0x2
  42037e:	mov    r13,rax
  420381:	jmp    420399 <flatcc_json_parser_generic_json@@Base+0x279>
  420383:	mov    rdi,r14
  420386:	mov    rsi,r13
  420389:	mov    rdx,r12
  42038c:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  420391:	mov    rbx,rax
  420394:	mov    cl,BYTE PTR [rbx]
  420396:	mov    r13,rbx
  420399:	movsx  eax,cl
  42039c:	lea    edx,[rax-0x30]
  42039f:	cmp    edx,0xa
  4203a2:	jae    420410 <flatcc_json_parser_generic_json@@Base+0x2f0>
  4203a4:	cmp    r13,r12
  4203a7:	je     420920 <flatcc_json_parser_generic_json@@Base+0x800>
  4203ad:	cmp    cl,0x2d
  4203b0:	jne    4203c3 <flatcc_json_parser_generic_json@@Base+0x2a3>
  4203b2:	add    r13,0x1
  4203b6:	cmp    r13,r12
  4203b9:	je     4207fd <flatcc_json_parser_generic_json@@Base+0x6dd>
  4203bf:	mov    cl,BYTE PTR [r13+0x0]
  4203c3:	cmp    cl,0x30
  4203c6:	jne    420428 <flatcc_json_parser_generic_json@@Base+0x308>
  4203c8:	add    r13,0x1
  4203cc:	mov    rcx,r12
  4203cf:	cmp    r13,r12
  4203d2:	je     4208f0 <flatcc_json_parser_generic_json@@Base+0x7d0>
  4203d8:	mov    al,BYTE PTR [r13+0x0]
  4203dc:	cmp    al,0x2e
  4203de:	jne    42076a <flatcc_json_parser_generic_json@@Base+0x64a>
  4203e4:	mov    al,BYTE PTR [r13+0x1]
  4203e8:	add    al,0xd0
  4203ea:	cmp    al,0xa
  4203ec:	jb     42072e <flatcc_json_parser_generic_json@@Base+0x60e>
  4203f2:	cmp    DWORD PTR [r15],0x0
  4203f6:	jne    420920 <flatcc_json_parser_generic_json@@Base+0x800>
  4203fc:	add    r13,0x1
  420400:	jmp    42043e <flatcc_json_parser_generic_json@@Base+0x31e>
  420402:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42040c:	nop    DWORD PTR [rax+0x0]
  420410:	cmp    eax,0x5a
  420413:	jg     420468 <flatcc_json_parser_generic_json@@Base+0x348>
  420415:	cmp    eax,0x22
  420418:	je     4204fd <flatcc_json_parser_generic_json@@Base+0x3dd>
  42041e:	cmp    eax,0x2d
  420421:	je     4203a4 <flatcc_json_parser_generic_json@@Base+0x284>
  420423:	jmp    420645 <flatcc_json_parser_generic_json@@Base+0x525>
  420428:	add    cl,0xcf
  42042b:	cmp    cl,0x8
  42042e:	jbe    4204cf <flatcc_json_parser_generic_json@@Base+0x3af>
  420434:	cmp    DWORD PTR [r15],0x0
  420438:	jne    420920 <flatcc_json_parser_generic_json@@Base+0x800>
  42043e:	mov    DWORD PTR [r15],0x6
  420445:	mov    rax,QWORD PTR [rsp+0x8]
  42044a:	mov    eax,DWORD PTR [rax]
  42044c:	mov    ecx,r13d
  42044f:	sub    ecx,eax
  420451:	add    ecx,0x1
  420454:	mov    rax,QWORD PTR [rsp+0x10]
  420459:	mov    DWORD PTR [rax],ecx
  42045b:	mov    rax,QWORD PTR [rsp+0x18]
  420460:	mov    QWORD PTR [rax],r13
  420463:	jmp    420920 <flatcc_json_parser_generic_json@@Base+0x800>
  420468:	cmp    eax,0x5b
  42046b:	je     4205f0 <flatcc_json_parser_generic_json@@Base+0x4d0>
  420471:	cmp    eax,0x7b
  420474:	jne    420645 <flatcc_json_parser_generic_json@@Base+0x525>
  42047a:	cmp    rbp,0x200
  420481:	je     420c98 <flatcc_json_parser_generic_json@@Base+0xb78>
  420487:	mov    BYTE PTR [rsp+rbp*1+0x30],0x7d
  42048c:	lea    rbx,[r13+0x1]
  420490:	mov    rax,r12
  420493:	sub    rax,rbx
  420496:	cmp    rax,0x2
  42049a:	jl     4206d6 <flatcc_json_parser_generic_json@@Base+0x5b6>
  4204a0:	cmp    BYTE PTR [rbx],0x20
  4204a3:	jg     4206e7 <flatcc_json_parser_generic_json@@Base+0x5c7>
  4204a9:	jne    4206d6 <flatcc_json_parser_generic_json@@Base+0x5b6>
  4204af:	cmp    BYTE PTR [r13+0x2],0x20
  4204b4:	jle    4206d6 <flatcc_json_parser_generic_json@@Base+0x5b6>
  4204ba:	add    r13,0x2
  4204be:	mov    rbx,r13
  4204c1:	cmp    rbx,r12
  4204c4:	jne    4206f0 <flatcc_json_parser_generic_json@@Base+0x5d0>
  4204ca:	jmp    420c45 <flatcc_json_parser_generic_json@@Base+0xb25>
  4204cf:	mov    rcx,QWORD PTR [rsp+0x20]
  4204d4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4204de:	xchg   ax,ax
  4204e0:	cmp    rcx,r13
  4204e3:	je     420758 <flatcc_json_parser_generic_json@@Base+0x638>
  4204e9:	movzx  eax,BYTE PTR [r13+0x1]
  4204ee:	add    r13,0x1
  4204f2:	add    al,0xd0
  4204f4:	cmp    al,0xa
  4204f6:	jb     4204e0 <flatcc_json_parser_generic_json@@Base+0x3c0>
  4204f8:	jmp    4203cc <flatcc_json_parser_generic_json@@Base+0x2ac>
  4204fd:	cmp    cl,0x22
  420500:	jne    420831 <flatcc_json_parser_generic_json@@Base+0x711>
  420506:	cmp    r13,r12
  420509:	je     420831 <flatcc_json_parser_generic_json@@Base+0x711>
  42050f:	add    r13,0x1
  420513:	mov    rax,r12
  420516:	cmp    r13,r12
  420519:	je     4208c1 <flatcc_json_parser_generic_json@@Base+0x7a1>
  42051f:	nop
  420520:	mov    al,BYTE PTR [r13+0x0]
  420524:	cmp    al,0x22
  420526:	je     4208a9 <flatcc_json_parser_generic_json@@Base+0x789>
  42052c:	cmp    al,0x20
  42052e:	mov    rcx,QWORD PTR [rsp+0x20]
  420533:	jb     42055a <flatcc_json_parser_generic_json@@Base+0x43a>
  420535:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42053f:	nop
  420540:	cmp    al,0x22
  420542:	je     42058a <flatcc_json_parser_generic_json@@Base+0x46a>
  420544:	cmp    al,0x5c
  420546:	je     42058a <flatcc_json_parser_generic_json@@Base+0x46a>
  420548:	cmp    rcx,r13
  42054b:	je     42059e <flatcc_json_parser_generic_json@@Base+0x47e>
  42054d:	movzx  eax,BYTE PTR [r13+0x1]
  420552:	add    r13,0x1
  420556:	cmp    al,0x20
  420558:	jae    420540 <flatcc_json_parser_generic_json@@Base+0x420>
  42055a:	cmp    DWORD PTR [r15],0x0
  42055e:	mov    rsi,r12
  420561:	jne    4205cf <flatcc_json_parser_generic_json@@Base+0x4af>
  420563:	mov    DWORD PTR [r15],0x11
  42056a:	mov    rax,QWORD PTR [rsp+0x8]
  42056f:	mov    eax,DWORD PTR [rax]
  420571:	mov    ecx,r13d
  420574:	sub    ecx,eax
  420576:	add    ecx,0x1
  420579:	mov    rax,QWORD PTR [rsp+0x10]
  42057e:	mov    DWORD PTR [rax],ecx
  420580:	mov    rax,QWORD PTR [rsp+0x18]
  420585:	mov    QWORD PTR [rax],r13
  420588:	jmp    4205cc <flatcc_json_parser_generic_json@@Base+0x4ac>
  42058a:	mov    rsi,r12
  42058d:	cmp    r12,r13
  420590:	je     4205cf <flatcc_json_parser_generic_json@@Base+0x4af>
  420592:	mov    rsi,r13
  420595:	cmp    al,0x22
  420597:	jne    4205cf <flatcc_json_parser_generic_json@@Base+0x4af>
  420599:	jmp    4208a9 <flatcc_json_parser_generic_json@@Base+0x789>
  42059e:	cmp    DWORD PTR [r15],0x0
  4205a2:	mov    rsi,r12
  4205a5:	jne    4205cf <flatcc_json_parser_generic_json@@Base+0x4af>
  4205a7:	mov    DWORD PTR [r15],0x14
  4205ae:	mov    rax,QWORD PTR [rsp+0x8]
  4205b3:	mov    eax,DWORD PTR [rax]
  4205b5:	mov    ecx,r12d
  4205b8:	sub    ecx,eax
  4205ba:	add    ecx,0x1
  4205bd:	mov    rax,QWORD PTR [rsp+0x10]
  4205c2:	mov    DWORD PTR [rax],ecx
  4205c4:	mov    rax,QWORD PTR [rsp+0x18]
  4205c9:	mov    QWORD PTR [rax],r12
  4205cc:	mov    rsi,r12
  4205cf:	mov    rdi,r14
  4205d2:	mov    rdx,r12
  4205d5:	lea    rcx,[rsp+0x2c]
  4205da:	call   41fac0 <flatcc_json_parser_string_escape@@Base>
  4205df:	mov    r13,rax
  4205e2:	cmp    rax,r12
  4205e5:	jne    420520 <flatcc_json_parser_generic_json@@Base+0x400>
  4205eb:	jmp    420860 <flatcc_json_parser_generic_json@@Base+0x740>
  4205f0:	cmp    rbp,0x200
  4205f7:	je     420c98 <flatcc_json_parser_generic_json@@Base+0xb78>
  4205fd:	mov    BYTE PTR [rsp+rbp*1+0x30],0x5d
  420602:	lea    rbx,[r13+0x1]
  420606:	mov    rax,r12
  420609:	sub    rax,rbx
  42060c:	cmp    rax,0x2
  420610:	jl     420702 <flatcc_json_parser_generic_json@@Base+0x5e2>
  420616:	cmp    BYTE PTR [rbx],0x20
  420619:	jg     420713 <flatcc_json_parser_generic_json@@Base+0x5f3>
  42061f:	jne    420702 <flatcc_json_parser_generic_json@@Base+0x5e2>
  420625:	cmp    BYTE PTR [r13+0x2],0x20
  42062a:	jle    420702 <flatcc_json_parser_generic_json@@Base+0x5e2>
  420630:	add    r13,0x2
  420634:	mov    rbx,r13
  420637:	cmp    rbx,r12
  42063a:	jne    42071c <flatcc_json_parser_generic_json@@Base+0x5fc>
  420640:	jmp    420c45 <flatcc_json_parser_generic_json@@Base+0xb25>
  420645:	mov    rbx,r12
  420648:	cmp    r13,r12
  42064b:	je     4206c8 <flatcc_json_parser_generic_json@@Base+0x5a8>
  42064d:	mov    rbx,r13
  420650:	test   cl,cl
  420652:	js     4206b9 <flatcc_json_parser_generic_json@@Base+0x599>
  420654:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42065e:	xchg   ax,ax
  420660:	cmp    cl,0x5f
  420663:	je     4206b9 <flatcc_json_parser_generic_json@@Base+0x599>
  420665:	cmp    cl,0x2e
  420668:	je     4206b9 <flatcc_json_parser_generic_json@@Base+0x599>
  42066a:	mov    eax,ecx
  42066c:	add    al,0xd0
  42066e:	cmp    al,0x9
  420670:	jbe    4206b9 <flatcc_json_parser_generic_json@@Base+0x599>
  420672:	mov    eax,ecx
  420674:	or     al,0x20
  420676:	add    al,0x9f
  420678:	cmp    al,0x19
  42067a:	jbe    4206b9 <flatcc_json_parser_generic_json@@Base+0x599>
  42067c:	mov    rax,r12
  42067f:	sub    rax,rbx
  420682:	cmp    rax,0x2
  420686:	jl     420695 <flatcc_json_parser_generic_json@@Base+0x575>
  420688:	cmp    cl,0x20
  42068b:	jg     4206c8 <flatcc_json_parser_generic_json@@Base+0x5a8>
  42068d:	jne    420695 <flatcc_json_parser_generic_json@@Base+0x575>
  42068f:	cmp    BYTE PTR [rbx+0x1],0x20
  420693:	jg     4206b9 <flatcc_json_parser_generic_json@@Base+0x599>
  420695:	mov    rdi,r14
  420698:	mov    rsi,rbx
  42069b:	mov    rdx,r12
  42069e:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  4206a3:	cmp    rax,rbx
  4206a6:	jne    4206c0 <flatcc_json_parser_generic_json@@Base+0x5a0>
  4206a8:	jmp    4206c8 <flatcc_json_parser_generic_json@@Base+0x5a8>
  4206aa:	nop    WORD PTR [rax+rax*1+0x0]
  4206b0:	mov    cl,BYTE PTR [rax]
  4206b2:	mov    rbx,rax
  4206b5:	test   cl,cl
  4206b7:	jns    420660 <flatcc_json_parser_generic_json@@Base+0x540>
  4206b9:	add    rbx,0x1
  4206bd:	mov    rax,rbx
  4206c0:	cmp    rax,r12
  4206c3:	jne    4206b0 <flatcc_json_parser_generic_json@@Base+0x590>
  4206c5:	mov    rbx,r12
  4206c8:	cmp    r13,rbx
  4206cb:	jne    420923 <flatcc_json_parser_generic_json@@Base+0x803>
  4206d1:	jmp    420ca7 <flatcc_json_parser_generic_json@@Base+0xb87>
  4206d6:	mov    rdi,r14
  4206d9:	mov    rsi,rbx
  4206dc:	mov    rdx,r12
  4206df:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  4206e4:	mov    rbx,rax
  4206e7:	cmp    rbx,r12
  4206ea:	je     420c45 <flatcc_json_parser_generic_json@@Base+0xb25>
  4206f0:	add    rbp,0x1
  4206f4:	cmp    BYTE PTR [rbx],0x7d
  4206f7:	je     420923 <flatcc_json_parser_generic_json@@Base+0x803>
  4206fd:	jmp    420bf2 <flatcc_json_parser_generic_json@@Base+0xad2>
  420702:	mov    rdi,r14
  420705:	mov    rsi,rbx
  420708:	mov    rdx,r12
  42070b:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  420710:	mov    rbx,rax
  420713:	cmp    rbx,r12
  420716:	je     420c45 <flatcc_json_parser_generic_json@@Base+0xb25>
  42071c:	add    rbp,0x1
  420720:	cmp    BYTE PTR [rbx],0x5d
  420723:	je     420923 <flatcc_json_parser_generic_json@@Base+0x803>
  420729:	jmp    420bf2 <flatcc_json_parser_generic_json@@Base+0xad2>
  42072e:	add    r13,0x2
  420732:	mov    rcx,r12
  420735:	cmp    r13,r12
  420738:	je     4208f0 <flatcc_json_parser_generic_json@@Base+0x7d0>
  42073e:	xchg   ax,ax
  420740:	movzx  eax,BYTE PTR [r13+0x0]
  420745:	mov    ecx,eax
  420747:	add    cl,0xd0
  42074a:	cmp    cl,0x9
  42074d:	ja     42076a <flatcc_json_parser_generic_json@@Base+0x64a>
  42074f:	add    r13,0x1
  420753:	cmp    r12,r13
  420756:	jne    420740 <flatcc_json_parser_generic_json@@Base+0x620>
  420758:	mov    rcx,r12
  42075b:	cmp    DWORD PTR [r15],0x0
  42075f:	jne    420920 <flatcc_json_parser_generic_json@@Base+0x800>
  420765:	jmp    4208f6 <flatcc_json_parser_generic_json@@Base+0x7d6>
  42076a:	mov    rcx,r12
  42076d:	cmp    r13,r12
  420770:	je     4208f0 <flatcc_json_parser_generic_json@@Base+0x7d0>
  420776:	mov    ecx,eax
  420778:	or     cl,0x20
  42077b:	cmp    cl,0x65
  42077e:	jne    42086f <flatcc_json_parser_generic_json@@Base+0x74f>
  420784:	lea    rbx,[r13+0x1]
  420788:	cmp    rbx,r12
  42078b:	je     4207fd <flatcc_json_parser_generic_json@@Base+0x6dd>
  42078d:	mov    al,BYTE PTR [rbx]
  42078f:	cmp    al,0x2d
  420791:	je     420797 <flatcc_json_parser_generic_json@@Base+0x677>
  420793:	cmp    al,0x2b
  420795:	jne    42079e <flatcc_json_parser_generic_json@@Base+0x67e>
  420797:	add    r13,0x2
  42079b:	mov    rbx,r13
  42079e:	cmp    rbx,r12
  4207a1:	je     4207ab <flatcc_json_parser_generic_json@@Base+0x68b>
  4207a3:	mov    al,BYTE PTR [rbx]
  4207a5:	add    al,0xd0
  4207a7:	cmp    al,0x9
  4207a9:	jbe    4207de <flatcc_json_parser_generic_json@@Base+0x6be>
  4207ab:	cmp    DWORD PTR [r15],0x0
  4207af:	jne    420920 <flatcc_json_parser_generic_json@@Base+0x800>
  4207b5:	mov    DWORD PTR [r15],0x6
  4207bc:	mov    rax,QWORD PTR [rsp+0x8]
  4207c1:	mov    eax,DWORD PTR [rax]
  4207c3:	mov    ecx,ebx
  4207c5:	sub    ecx,eax
  4207c7:	add    ecx,0x1
  4207ca:	mov    rax,QWORD PTR [rsp+0x10]
  4207cf:	mov    DWORD PTR [rax],ecx
  4207d1:	mov    rax,QWORD PTR [rsp+0x18]
  4207d6:	mov    QWORD PTR [rax],rbx
  4207d9:	jmp    420920 <flatcc_json_parser_generic_json@@Base+0x800>
  4207de:	cmp    QWORD PTR [rsp+0x20],rbx
  4207e3:	je     4208ed <flatcc_json_parser_generic_json@@Base+0x7cd>
  4207e9:	movzx  eax,BYTE PTR [rbx+0x1]
  4207ed:	add    rbx,0x1
  4207f1:	mov    ecx,eax
  4207f3:	add    cl,0xd0
  4207f6:	cmp    cl,0xa
  4207f9:	jb     4207de <flatcc_json_parser_generic_json@@Base+0x6be>
  4207fb:	jmp    420872 <flatcc_json_parser_generic_json@@Base+0x752>
  4207fd:	cmp    DWORD PTR [r15],0x0
  420801:	jne    420920 <flatcc_json_parser_generic_json@@Base+0x800>
  420807:	mov    DWORD PTR [r15],0x6
  42080e:	mov    rax,QWORD PTR [rsp+0x8]
  420813:	mov    eax,DWORD PTR [rax]
  420815:	mov    ecx,r12d
  420818:	sub    ecx,eax
  42081a:	add    ecx,0x1
  42081d:	mov    rax,QWORD PTR [rsp+0x10]
  420822:	mov    DWORD PTR [rax],ecx
  420824:	mov    rax,QWORD PTR [rsp+0x18]
  420829:	mov    QWORD PTR [rax],r12
  42082c:	jmp    420920 <flatcc_json_parser_generic_json@@Base+0x800>
  420831:	cmp    DWORD PTR [r15],0x0
  420835:	jne    420920 <flatcc_json_parser_generic_json@@Base+0x800>
  42083b:	mov    DWORD PTR [r15],0x10
  420842:	mov    rax,QWORD PTR [rsp+0x8]
  420847:	mov    eax,DWORD PTR [rax]
  420849:	mov    ecx,r13d
  42084c:	sub    ecx,eax
  42084e:	add    ecx,0x1
  420851:	mov    rax,QWORD PTR [rsp+0x10]
  420856:	mov    DWORD PTR [rax],ecx
  420858:	mov    rax,QWORD PTR [rsp+0x18]
  42085d:	mov    QWORD PTR [rax],r13
  420860:	mov    rax,r12
  420863:	cmp    DWORD PTR [r15],0x0
  420867:	jne    420920 <flatcc_json_parser_generic_json@@Base+0x800>
  42086d:	jmp    4208c7 <flatcc_json_parser_generic_json@@Base+0x7a7>
  42086f:	mov    rbx,r13
  420872:	mov    rcx,r12
  420875:	cmp    rbx,r12
  420878:	je     4208f0 <flatcc_json_parser_generic_json@@Base+0x7d0>
  42087a:	movsx  eax,al
  42087d:	cmp    eax,0x3a
  420880:	ja     420896 <flatcc_json_parser_generic_json@@Base+0x776>
  420882:	movabs rcx,0x400100100002e00
  42088c:	bt     rcx,rax
  420890:	jb     420923 <flatcc_json_parser_generic_json@@Base+0x803>
  420896:	cmp    eax,0x5d
  420899:	je     420923 <flatcc_json_parser_generic_json@@Base+0x803>
  42089f:	mov    rcx,rbx
  4208a2:	cmp    eax,0x7d
  4208a5:	je     420923 <flatcc_json_parser_generic_json@@Base+0x803>
  4208a7:	jmp    4208f0 <flatcc_json_parser_generic_json@@Base+0x7d0>
  4208a9:	cmp    r13,r12
  4208ac:	je     4208be <flatcc_json_parser_generic_json@@Base+0x79e>
  4208ae:	cmp    BYTE PTR [r13+0x0],0x22
  4208b3:	jne    4208be <flatcc_json_parser_generic_json@@Base+0x79e>
  4208b5:	add    r13,0x1
  4208b9:	mov    rbx,r13
  4208bc:	jmp    420923 <flatcc_json_parser_generic_json@@Base+0x803>
  4208be:	mov    rax,r13
  4208c1:	cmp    DWORD PTR [r15],0x0
  4208c5:	jne    420920 <flatcc_json_parser_generic_json@@Base+0x800>
  4208c7:	mov    DWORD PTR [r15],0x14
  4208ce:	mov    rcx,QWORD PTR [rsp+0x8]
  4208d3:	mov    ecx,DWORD PTR [rcx]
  4208d5:	mov    edx,eax
  4208d7:	sub    edx,ecx
  4208d9:	add    edx,0x1
  4208dc:	mov    rcx,QWORD PTR [rsp+0x10]
  4208e1:	mov    DWORD PTR [rcx],edx
  4208e3:	mov    rcx,QWORD PTR [rsp+0x18]
  4208e8:	mov    QWORD PTR [rcx],rax
  4208eb:	jmp    420920 <flatcc_json_parser_generic_json@@Base+0x800>
  4208ed:	mov    rcx,r12
  4208f0:	cmp    DWORD PTR [r15],0x0
  4208f4:	jne    420920 <flatcc_json_parser_generic_json@@Base+0x800>
  4208f6:	mov    DWORD PTR [r15],0x6
  4208fd:	mov    rax,QWORD PTR [rsp+0x8]
  420902:	mov    eax,DWORD PTR [rax]
  420904:	mov    edx,ecx
  420906:	sub    edx,eax
  420908:	add    edx,0x1
  42090b:	mov    rax,QWORD PTR [rsp+0x10]
  420910:	mov    DWORD PTR [rax],edx
  420912:	mov    rax,QWORD PTR [rsp+0x18]
  420917:	mov    QWORD PTR [rax],rcx
  42091a:	nop    WORD PTR [rax+rax*1+0x0]
  420920:	mov    rbx,r12
  420923:	cmp    rbx,r12
  420926:	setne  al
  420929:	test   rbp,rbp
  42092c:	setne  cl
  42092f:	je     420c05 <flatcc_json_parser_generic_json@@Base+0xae5>
  420935:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42093f:	nop
  420940:	cmp    rbx,r12
  420943:	je     420c05 <flatcc_json_parser_generic_json@@Base+0xae5>
  420949:	mov    rax,r12
  42094c:	sub    rax,rbx
  42094f:	cmp    BYTE PTR [rsp+rbp*1+0x2f],0x5d
  420954:	jne    420970 <flatcc_json_parser_generic_json@@Base+0x850>
  420956:	cmp    rax,0x2
  42095a:	jl     4209a0 <flatcc_json_parser_generic_json@@Base+0x880>
  42095c:	cmp    BYTE PTR [rbx],0x20
  42095f:	jle    420987 <flatcc_json_parser_generic_json@@Base+0x867>
  420961:	mov    rax,rbx
  420964:	jmp    4209ae <flatcc_json_parser_generic_json@@Base+0x88e>
  420966:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420970:	cmp    rax,0x2
  420974:	jl     420a00 <flatcc_json_parser_generic_json@@Base+0x8e0>
  42097a:	cmp    BYTE PTR [rbx],0x20
  42097d:	jle    4209e4 <flatcc_json_parser_generic_json@@Base+0x8c4>
  42097f:	mov    rax,rbx
  420982:	jmp    420a0e <flatcc_json_parser_generic_json@@Base+0x8ee>
  420987:	jne    4209a0 <flatcc_json_parser_generic_json@@Base+0x880>
  420989:	cmp    BYTE PTR [rbx+0x1],0x20
  42098d:	jle    4209a0 <flatcc_json_parser_generic_json@@Base+0x880>
  42098f:	add    rbx,0x1
  420993:	mov    rax,rbx
  420996:	jmp    4209ae <flatcc_json_parser_generic_json@@Base+0x88e>
  420998:	nop    DWORD PTR [rax+rax*1+0x0]
  4209a0:	mov    rdi,r14
  4209a3:	mov    rsi,rbx
  4209a6:	mov    rdx,r12
  4209a9:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  4209ae:	mov    rbx,r12
  4209b1:	cmp    rax,r12
  4209b4:	je     420b91 <flatcc_json_parser_generic_json@@Base+0xa71>
  4209ba:	movzx  ecx,BYTE PTR [rax]
  4209bd:	cmp    cl,0x2c
  4209c0:	je     420a61 <flatcc_json_parser_generic_json@@Base+0x941>
  4209c6:	cmp    cl,0x5d
  4209c9:	je     420a2b <flatcc_json_parser_generic_json@@Base+0x90b>
  4209cb:	cmp    DWORD PTR [r15],0x0
  4209cf:	mov    rbx,r12
  4209d2:	jne    420b91 <flatcc_json_parser_generic_json@@Base+0xa71>
  4209d8:	mov    DWORD PTR [r15],0x9
  4209df:	jmp    420ad6 <flatcc_json_parser_generic_json@@Base+0x9b6>
  4209e4:	jne    420a00 <flatcc_json_parser_generic_json@@Base+0x8e0>
  4209e6:	cmp    BYTE PTR [rbx+0x1],0x20
  4209ea:	jle    420a00 <flatcc_json_parser_generic_json@@Base+0x8e0>
  4209ec:	add    rbx,0x1
  4209f0:	mov    rax,rbx
  4209f3:	jmp    420a0e <flatcc_json_parser_generic_json@@Base+0x8ee>
  4209f5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4209ff:	nop
  420a00:	mov    rdi,r14
  420a03:	mov    rsi,rbx
  420a06:	mov    rdx,r12
  420a09:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  420a0e:	mov    rbx,r12
  420a11:	cmp    rax,r12
  420a14:	je     420b91 <flatcc_json_parser_generic_json@@Base+0xa71>
  420a1a:	movzx  ecx,BYTE PTR [rax]
  420a1d:	cmp    cl,0x2c
  420a20:	je     420a8c <flatcc_json_parser_generic_json@@Base+0x96c>
  420a22:	cmp    cl,0x7d
  420a25:	jne    420ac2 <flatcc_json_parser_generic_json@@Base+0x9a2>
  420a2b:	lea    rbx,[rax+0x1]
  420a2f:	mov    rcx,r12
  420a32:	sub    rcx,rbx
  420a35:	cmp    rcx,0x2
  420a39:	jl     420b80 <flatcc_json_parser_generic_json@@Base+0xa60>
  420a3f:	cmp    BYTE PTR [rbx],0x20
  420a42:	jg     420b91 <flatcc_json_parser_generic_json@@Base+0xa71>
  420a48:	jne    420b80 <flatcc_json_parser_generic_json@@Base+0xa60>
  420a4e:	cmp    BYTE PTR [rax+0x2],0x20
  420a52:	jle    420b80 <flatcc_json_parser_generic_json@@Base+0xa60>
  420a58:	add    rax,0x2
  420a5c:	jmp    420b8e <flatcc_json_parser_generic_json@@Base+0xa6e>
  420a61:	lea    rcx,[rax+0x1]
  420a65:	mov    rdx,r12
  420a68:	sub    rdx,rcx
  420a6b:	cmp    rdx,0x2
  420a6f:	jl     420afb <flatcc_json_parser_generic_json@@Base+0x9db>
  420a75:	cmp    BYTE PTR [rcx],0x20
  420a78:	jg     420b0c <flatcc_json_parser_generic_json@@Base+0x9ec>
  420a7e:	jne    420afb <flatcc_json_parser_generic_json@@Base+0x9db>
  420a80:	cmp    BYTE PTR [rax+0x2],0x20
  420a84:	jle    420afb <flatcc_json_parser_generic_json@@Base+0x9db>
  420a86:	add    rax,0x2
  420a8a:	jmp    420b09 <flatcc_json_parser_generic_json@@Base+0x9e9>
  420a8c:	lea    rcx,[rax+0x1]
  420a90:	mov    rdx,r12
  420a93:	sub    rdx,rcx
  420a96:	cmp    rdx,0x2
  420a9a:	jl     420b44 <flatcc_json_parser_generic_json@@Base+0xa24>
  420aa0:	cmp    BYTE PTR [rcx],0x20
  420aa3:	jg     420b55 <flatcc_json_parser_generic_json@@Base+0xa35>
  420aa9:	jne    420b44 <flatcc_json_parser_generic_json@@Base+0xa24>
  420aaf:	cmp    BYTE PTR [rax+0x2],0x20
  420ab3:	jle    420b44 <flatcc_json_parser_generic_json@@Base+0xa24>
  420ab9:	add    rax,0x2
  420abd:	jmp    420b52 <flatcc_json_parser_generic_json@@Base+0xa32>
  420ac2:	cmp    DWORD PTR [r15],0x0
  420ac6:	mov    rbx,r12
  420ac9:	jne    420b91 <flatcc_json_parser_generic_json@@Base+0xa71>
  420acf:	mov    DWORD PTR [r15],0xa
  420ad6:	mov    rcx,QWORD PTR [rsp+0x8]
  420adb:	mov    ecx,DWORD PTR [rcx]
  420add:	mov    edx,eax
  420adf:	sub    edx,ecx
  420ae1:	add    edx,0x1
  420ae4:	mov    rcx,QWORD PTR [rsp+0x10]
  420ae9:	mov    DWORD PTR [rcx],edx
  420aeb:	mov    rcx,QWORD PTR [rsp+0x18]
  420af0:	mov    QWORD PTR [rcx],rax
  420af3:	mov    rbx,r12
  420af6:	jmp    420b91 <flatcc_json_parser_generic_json@@Base+0xa71>
  420afb:	mov    rdi,r14
  420afe:	mov    rsi,rcx
  420b01:	mov    rdx,r12
  420b04:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  420b09:	mov    rcx,rax
  420b0c:	cmp    rcx,r12
  420b0f:	je     420baa <flatcc_json_parser_generic_json@@Base+0xa8a>
  420b15:	cmp    BYTE PTR [rcx],0x5d
  420b18:	jne    420bef <flatcc_json_parser_generic_json@@Base+0xacf>
  420b1e:	lea    rbx,[rcx+0x1]
  420b22:	mov    rax,r12
  420b25:	sub    rax,rbx
  420b28:	cmp    rax,0x2
  420b2c:	jl     420b80 <flatcc_json_parser_generic_json@@Base+0xa60>
  420b2e:	cmp    BYTE PTR [rbx],0x20
  420b31:	jg     420b91 <flatcc_json_parser_generic_json@@Base+0xa71>
  420b33:	jne    420b80 <flatcc_json_parser_generic_json@@Base+0xa60>
  420b35:	cmp    BYTE PTR [rcx+0x2],0x20
  420b39:	jle    420b80 <flatcc_json_parser_generic_json@@Base+0xa60>
  420b3b:	add    rcx,0x2
  420b3f:	mov    rbx,rcx
  420b42:	jmp    420b91 <flatcc_json_parser_generic_json@@Base+0xa71>
  420b44:	mov    rdi,r14
  420b47:	mov    rsi,rcx
  420b4a:	mov    rdx,r12
  420b4d:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  420b52:	mov    rcx,rax
  420b55:	cmp    rcx,r12
  420b58:	je     420bbc <flatcc_json_parser_generic_json@@Base+0xa9c>
  420b5a:	cmp    BYTE PTR [rcx],0x7d
  420b5d:	jne    420bef <flatcc_json_parser_generic_json@@Base+0xacf>
  420b63:	lea    rbx,[rcx+0x1]
  420b67:	mov    rax,r12
  420b6a:	sub    rax,rbx
  420b6d:	cmp    rax,0x2
  420b71:	jl     420b80 <flatcc_json_parser_generic_json@@Base+0xa60>
  420b73:	cmp    BYTE PTR [rbx],0x20
  420b76:	jg     420b91 <flatcc_json_parser_generic_json@@Base+0xa71>
  420b78:	je     420b35 <flatcc_json_parser_generic_json@@Base+0xa15>
  420b7a:	nop    WORD PTR [rax+rax*1+0x0]
  420b80:	mov    rdi,r14
  420b83:	mov    rsi,rbx
  420b86:	mov    rdx,r12
  420b89:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  420b8e:	mov    rbx,rax
  420b91:	cmp    rbx,r12
  420b94:	setne  al
  420b97:	cmp    rbp,0x1
  420b9b:	lea    rbp,[rbp-0x1]
  420b9f:	setne  cl
  420ba2:	jne    420940 <flatcc_json_parser_generic_json@@Base+0x820>
  420ba8:	jmp    420c05 <flatcc_json_parser_generic_json@@Base+0xae5>
  420baa:	cmp    DWORD PTR [r15],0x0
  420bae:	mov    rbx,r12
  420bb1:	jne    420b91 <flatcc_json_parser_generic_json@@Base+0xa71>
  420bb3:	mov    DWORD PTR [r15],0x9
  420bba:	jmp    420bcc <flatcc_json_parser_generic_json@@Base+0xaac>
  420bbc:	cmp    DWORD PTR [r15],0x0
  420bc0:	mov    rbx,r12
  420bc3:	jne    420b91 <flatcc_json_parser_generic_json@@Base+0xa71>
  420bc5:	mov    DWORD PTR [r15],0xa
  420bcc:	mov    rax,QWORD PTR [rsp+0x8]
  420bd1:	mov    eax,DWORD PTR [rax]
  420bd3:	mov    ecx,r12d
  420bd6:	sub    ecx,eax
  420bd8:	add    ecx,0x1
  420bdb:	mov    rax,QWORD PTR [rsp+0x10]
  420be0:	mov    DWORD PTR [rax],ecx
  420be2:	mov    rax,QWORD PTR [rsp+0x18]
  420be7:	mov    QWORD PTR [rax],r12
  420bea:	mov    rbx,r12
  420bed:	jmp    420b91 <flatcc_json_parser_generic_json@@Base+0xa71>
  420bef:	mov    rbx,rcx
  420bf2:	lea    rax,[rsp+rbp*1]
  420bf6:	add    rax,0x30
  420bfa:	cmp    rbx,r12
  420bfd:	jne    420172 <flatcc_json_parser_generic_json@@Base+0x52>
  420c03:	jmp    420c45 <flatcc_json_parser_generic_json@@Base+0xb25>
  420c05:	test   al,al
  420c07:	jne    420c48 <flatcc_json_parser_generic_json@@Base+0xb28>
  420c09:	test   cl,cl
  420c0b:	je     420c48 <flatcc_json_parser_generic_json@@Base+0xb28>
  420c0d:	cmp    DWORD PTR [r15],0x0
  420c11:	jne    420c45 <flatcc_json_parser_generic_json@@Base+0xb25>
  420c13:	xor    eax,eax
  420c15:	cmp    BYTE PTR [rsp+rbp*1+0x2f],0x5d
  420c1a:	sete   al
  420c1d:	mov    ecx,0xa
  420c22:	sub    ecx,eax
  420c24:	mov    DWORD PTR [r15],ecx
  420c27:	mov    rax,QWORD PTR [rsp+0x8]
  420c2c:	mov    eax,DWORD PTR [rax]
  420c2e:	mov    ecx,r12d
  420c31:	sub    ecx,eax
  420c33:	add    ecx,0x1
  420c36:	mov    rax,QWORD PTR [rsp+0x10]
  420c3b:	mov    DWORD PTR [rax],ecx
  420c3d:	mov    rax,QWORD PTR [rsp+0x18]
  420c42:	mov    QWORD PTR [rax],r12
  420c45:	mov    rbx,r12
  420c48:	mov    rax,rbx
  420c4b:	add    rsp,0x238
  420c52:	pop    rbx
  420c53:	pop    r12
  420c55:	pop    r13
  420c57:	pop    r14
  420c59:	pop    r15
  420c5b:	pop    rbp
  420c5c:	ret    
  420c5d:	cmp    DWORD PTR [r15],0x0
  420c61:	jne    420c45 <flatcc_json_parser_generic_json@@Base+0xb25>
  420c63:	mov    DWORD PTR [r15],0xa
  420c6a:	jmp    420c27 <flatcc_json_parser_generic_json@@Base+0xb07>
  420c6c:	cmp    DWORD PTR [r15],0x0
  420c70:	jne    420c45 <flatcc_json_parser_generic_json@@Base+0xb25>
  420c72:	mov    DWORD PTR [r15],0x4
  420c79:	mov    rcx,QWORD PTR [rsp+0x8]
  420c7e:	mov    ecx,DWORD PTR [rcx]
  420c80:	mov    edx,eax
  420c82:	sub    edx,ecx
  420c84:	add    edx,0x1
  420c87:	mov    rcx,QWORD PTR [rsp+0x10]
  420c8c:	mov    DWORD PTR [rcx],edx
  420c8e:	mov    rcx,QWORD PTR [rsp+0x18]
  420c93:	mov    QWORD PTR [rcx],rax
  420c96:	jmp    420c45 <flatcc_json_parser_generic_json@@Base+0xb25>
  420c98:	cmp    DWORD PTR [r15],0x0
  420c9c:	jne    420c45 <flatcc_json_parser_generic_json@@Base+0xb25>
  420c9e:	mov    DWORD PTR [r15],0x2
  420ca5:	jmp    420cb4 <flatcc_json_parser_generic_json@@Base+0xb94>
  420ca7:	cmp    DWORD PTR [r15],0x0
  420cab:	jne    420c45 <flatcc_json_parser_generic_json@@Base+0xb25>
  420cad:	mov    DWORD PTR [r15],0x5
  420cb4:	mov    rax,QWORD PTR [rsp+0x8]
  420cb9:	mov    eax,DWORD PTR [rax]
  420cbb:	mov    ecx,r13d
  420cbe:	sub    ecx,eax
  420cc0:	add    ecx,0x1
  420cc3:	mov    rax,QWORD PTR [rsp+0x10]
  420cc8:	mov    DWORD PTR [rax],ecx
  420cca:	mov    rax,QWORD PTR [rsp+0x18]
  420ccf:	mov    QWORD PTR [rax],r13
  420cd2:	jmp    420c45 <flatcc_json_parser_generic_json@@Base+0xb25>
  420cd7:	nop    WORD PTR [rax+rax*1+0x0]

0000000000420ce0 <flatcc_json_parser_double@@Base>:
  420ce0:	push   r15
  420ce2:	push   r14
  420ce4:	push   r12
  420ce6:	push   rbx
  420ce7:	push   rax
  420ce8:	mov    rbx,rsi
  420ceb:	mov    QWORD PTR [rcx],0x0
  420cf2:	cmp    rsi,rdx
  420cf5:	je     420d82 <flatcc_json_parser_double@@Base+0xa2>
  420cfb:	mov    r12,rcx
  420cfe:	mov    r14,rdx
  420d01:	mov    r15,rdi
  420d04:	lea    rax,[rbx+0x1]
  420d08:	xor    ecx,ecx
  420d0a:	cmp    BYTE PTR [rbx],0x2d
  420d0d:	sete   dl
  420d10:	cmovne rax,rbx
  420d14:	mov    rsi,r14
  420d17:	sub    rsi,rax
  420d1a:	cmp    rsi,0x2
  420d1e:	jl     420d3e <flatcc_json_parser_double@@Base+0x5e>
  420d20:	mov    cl,dl
  420d22:	mov    cl,BYTE PTR [rbx+rcx*1]
  420d25:	cmp    cl,0x2e
  420d28:	je     420d35 <flatcc_json_parser_double@@Base+0x55>
  420d2a:	cmp    cl,0x30
  420d2d:	jne    420d3e <flatcc_json_parser_double@@Base+0x5e>
  420d2f:	cmp    BYTE PTR [rax+0x1],0x30
  420d33:	jne    420d3e <flatcc_json_parser_double@@Base+0x5e>
  420d35:	cmp    DWORD PTR [r15+0x20],0x0
  420d3a:	jne    420da6 <flatcc_json_parser_double@@Base+0xc6>
  420d3c:	jmp    420d8b <flatcc_json_parser_double@@Base+0xab>
  420d3e:	mov    esi,r14d
  420d41:	sub    esi,ebx
  420d43:	mov    rdi,rbx
  420d46:	mov    rdx,r12
  420d49:	call   420dc0 <flatcc_json_parser_double@@Base+0xe0>
  420d4e:	test   rax,rax
  420d51:	je     420d58 <flatcc_json_parser_double@@Base+0x78>
  420d53:	cmp    rax,rbx
  420d56:	jne    420da9 <flatcc_json_parser_double@@Base+0xc9>
  420d58:	vmovsd xmm0,QWORD PTR [r12]
  420d5e:	vandps xmm0,xmm0,XMMWORD PTR [rip+0x606a]        # 426dd0 <flatcc_builder_padding_base@@Base+0x1f40>
  420d66:	vucomisd xmm0,QWORD PTR [rip+0x6072]        # 426de0 <flatcc_builder_padding_base@@Base+0x1f50>
  420d6e:	mov    eax,DWORD PTR [r15+0x20]
  420d72:	jb     420d87 <flatcc_json_parser_double@@Base+0xa7>
  420d74:	test   eax,eax
  420d76:	jne    420da6 <flatcc_json_parser_double@@Base+0xc6>
  420d78:	mov    DWORD PTR [r15+0x20],0x7
  420d80:	jmp    420d93 <flatcc_json_parser_double@@Base+0xb3>
  420d82:	mov    rax,rbx
  420d85:	jmp    420da9 <flatcc_json_parser_double@@Base+0xc9>
  420d87:	test   eax,eax
  420d89:	jne    420da6 <flatcc_json_parser_double@@Base+0xc6>
  420d8b:	mov    DWORD PTR [r15+0x20],0x6
  420d93:	mov    eax,DWORD PTR [r15+0x8]
  420d97:	mov    ecx,ebx
  420d99:	sub    ecx,eax
  420d9b:	add    ecx,0x1
  420d9e:	mov    DWORD PTR [r15+0x1c],ecx
  420da2:	mov    QWORD PTR [r15+0x38],rbx
  420da6:	mov    rax,r14
  420da9:	add    rsp,0x8
  420dad:	pop    rbx
  420dae:	pop    r12
  420db0:	pop    r14
  420db2:	pop    r15
  420db4:	ret    
  420db5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420dbf:	nop
  420dc0:	push   rbp
  420dc1:	push   r15
  420dc3:	push   r14
  420dc5:	push   r13
  420dc7:	push   r12
  420dc9:	push   rbx
  420dca:	sub    rsp,0x28
  420dce:	mov    r13,rdx
  420dd1:	mov    r14,rdi
  420dd4:	mov    QWORD PTR [rdx],0x0
  420ddb:	cmp    esi,0x3e9
  420de1:	mov    edx,0x3e8
  420de6:	cmovl  edx,esi
  420de9:	movsxd r12,edx
  420dec:	lea    r15,[rdi+r12*1]
  420df0:	add    r15,0x1
  420df4:	cmp    r15,rdi
  420df7:	je     421200 <flatcc_json_parser_double@@Base+0x520>
  420dfd:	mov    al,BYTE PTR [r14]
  420e00:	xor    ebx,ebx
  420e02:	mov    rcx,r14
  420e05:	cmp    al,0x2d
  420e07:	jne    420e1c <flatcc_json_parser_double@@Base+0x13c>
  420e09:	test   edx,edx
  420e0b:	je     4211fd <flatcc_json_parser_double@@Base+0x51d>
  420e11:	lea    rcx,[r14+0x1]
  420e15:	mov    al,BYTE PTR [rcx]
  420e17:	mov    ebx,0x1
  420e1c:	lea    r8,[r14+r12*1]
  420e20:	cmp    al,0x30
  420e22:	jne    420e46 <flatcc_json_parser_double@@Base+0x166>
  420e24:	lea    rsi,[rcx+0x1]
  420e28:	cmp    rcx,r8
  420e2b:	je     420e76 <flatcc_json_parser_double@@Base+0x196>
  420e2d:	mov    al,BYTE PTR [rsi]
  420e2f:	mov    edx,eax
  420e31:	or     dl,0x20
  420e34:	cmp    dl,0x78
  420e37:	jne    420e82 <flatcc_json_parser_double@@Base+0x1a2>
  420e39:	mov    QWORD PTR [r13+0x0],0x0
  420e41:	jmp    421200 <flatcc_json_parser_double@@Base+0x520>
  420e46:	mov    edx,eax
  420e48:	add    dl,0xcf
  420e4b:	cmp    dl,0x9
  420e4e:	jb     420e5d <flatcc_json_parser_double@@Base+0x17d>
  420e50:	xor    eax,eax
  420e52:	test   ebx,ebx
  420e54:	cmovne r14,rax
  420e58:	jmp    421200 <flatcc_json_parser_double@@Base+0x520>
  420e5d:	movsx  rdi,al
  420e61:	add    rcx,0x1
  420e65:	add    rdi,0xffffffffffffffd0
  420e69:	mov    rsi,rcx
  420e6c:	cmp    rsi,r15
  420e6f:	jne    420eae <flatcc_json_parser_double@@Base+0x1ce>
  420e71:	jmp    4211fd <flatcc_json_parser_double@@Base+0x51d>
  420e76:	xor    edi,edi
  420e78:	cmp    rsi,r15
  420e7b:	jne    420eae <flatcc_json_parser_double@@Base+0x1ce>
  420e7d:	jmp    4211fd <flatcc_json_parser_double@@Base+0x51d>
  420e82:	cmp    al,0x30
  420e84:	jne    420ea3 <flatcc_json_parser_double@@Base+0x1c3>
  420e86:	add    rcx,0x2
  420e8a:	xor    edi,edi
  420e8c:	nop    DWORD PTR [rax+0x0]
  420e90:	mov    rsi,rcx
  420e93:	cmp    r15,rcx
  420e96:	je     420ea5 <flatcc_json_parser_double@@Base+0x1c5>
  420e98:	lea    rcx,[rsi+0x1]
  420e9c:	cmp    BYTE PTR [rsi],0x30
  420e9f:	je     420e90 <flatcc_json_parser_double@@Base+0x1b0>
  420ea1:	jmp    420ea5 <flatcc_json_parser_double@@Base+0x1c5>
  420ea3:	xor    edi,edi
  420ea5:	cmp    rsi,r15
  420ea8:	je     4211fd <flatcc_json_parser_double@@Base+0x51d>
  420eae:	movabs r11,0x1999999999999998
  420eb8:	mov    rbp,rsi
  420ebb:	nop    DWORD PTR [rax+rax*1+0x0]
  420ec0:	movsx  rax,BYTE PTR [rbp+0x0]
  420ec5:	mov    edx,eax
  420ec7:	add    dl,0xd0
  420eca:	xor    ecx,ecx
  420ecc:	cmp    dl,0x9
  420ecf:	ja     420eeb <flatcc_json_parser_double@@Base+0x20b>
  420ed1:	cmp    rdi,r11
  420ed4:	ja     420ef5 <flatcc_json_parser_double@@Base+0x215>
  420ed6:	lea    rdx,[rdi+rdi*4]
  420eda:	add    rbp,0x1
  420ede:	lea    rdi,[rax+rdx*2]
  420ee2:	add    rdi,0xffffffffffffffd0
  420ee6:	cmp    r15,rbp
  420ee9:	jne    420ec0 <flatcc_json_parser_double@@Base+0x1e0>
  420eeb:	cmp    rbp,r15
  420eee:	jne    420f0d <flatcc_json_parser_double@@Base+0x22d>
  420ef0:	jmp    4211fd <flatcc_json_parser_double@@Base+0x51d>
  420ef5:	xor    ecx,ecx
  420ef7:	cmp    al,0x34
  420ef9:	setg   cl
  420efc:	add    rdi,rcx
  420eff:	mov    ecx,0x1
  420f04:	cmp    rbp,r15
  420f07:	je     4211fd <flatcc_json_parser_double@@Base+0x51d>
  420f0d:	mov    DWORD PTR [rsp+0xc],ebx
  420f11:	mov    r10d,ebp
  420f14:	sub    r10d,esi
  420f17:	lea    r9,[r12+0x1]
  420f1c:	mov    rdx,r9
  420f1f:	sub    rdx,rbp
  420f22:	add    rdx,r14
  420f25:	xor    esi,esi
  420f27:	nop    WORD PTR [rax+rax*1+0x0]
  420f30:	movzx  eax,BYTE PTR [rbp+rsi*1+0x0]
  420f35:	cmp    al,0x30
  420f37:	jne    420f44 <flatcc_json_parser_double@@Base+0x264>
  420f39:	add    rsi,0x1
  420f3d:	cmp    rdx,rsi
  420f40:	jne    420f30 <flatcc_json_parser_double@@Base+0x250>
  420f42:	jmp    420f8b <flatcc_json_parser_double@@Base+0x2ab>
  420f44:	add    al,0xcf
  420f46:	cmp    al,0x9
  420f48:	jae    420f8b <flatcc_json_parser_double@@Base+0x2ab>
  420f4a:	add    rsi,0x1
  420f4e:	mov    rax,rsi
  420f51:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420f5b:	nop    DWORD PTR [rax+rax*1+0x0]
  420f60:	mov    rsi,rax
  420f63:	cmp    rdx,rax
  420f66:	je     420f79 <flatcc_json_parser_double@@Base+0x299>
  420f68:	movzx  ecx,BYTE PTR [rbp+rsi*1+0x0]
  420f6d:	add    cl,0xd0
  420f70:	lea    rax,[rsi+0x1]
  420f74:	cmp    cl,0xa
  420f77:	jb     420f60 <flatcc_json_parser_double@@Base+0x280>
  420f79:	add    rbp,rsi
  420f7c:	mov    ecx,0x1
  420f81:	cmp    rbp,r15
  420f84:	jne    420f97 <flatcc_json_parser_double@@Base+0x2b7>
  420f86:	jmp    4211fd <flatcc_json_parser_double@@Base+0x51d>
  420f8b:	add    rbp,rsi
  420f8e:	cmp    rbp,r15
  420f91:	je     4211fd <flatcc_json_parser_double@@Base+0x51d>
  420f97:	cmp    BYTE PTR [rbp+0x0],0x2e
  420f9b:	jne    421018 <flatcc_json_parser_double@@Base+0x338>
  420f9d:	mov    QWORD PTR [rsp+0x18],r13
  420fa2:	mov    r13b,BYTE PTR [rbp+0x1]
  420fa6:	mov    eax,r13d
  420fa9:	add    al,0xd0
  420fab:	cmp    al,0x9
  420fad:	ja     4211fd <flatcc_json_parser_double@@Base+0x51d>
  420fb3:	lea    rax,[rbp+0x1]
  420fb7:	cmp    rbp,r8
  420fba:	je     4210bd <flatcc_json_parser_double@@Base+0x3dd>
  420fc0:	mov    QWORD PTR [rsp+0x10],rax
  420fc5:	add    r12,0xffffffffffffffff
  420fc9:	sub    r12,rbp
  420fcc:	add    r12,r14
  420fcf:	xor    edx,edx
  420fd1:	mov    rax,rdx
  420fd4:	cmp    rdi,r11
  420fd7:	ja     4210c2 <flatcc_json_parser_double@@Base+0x3e2>
  420fdd:	lea    rdx,[rdi+rdi*4]
  420fe1:	movsx  rdi,r13b
  420fe5:	lea    rdi,[rdi+rdx*2]
  420fe9:	add    rdi,0xffffffffffffffd0
  420fed:	cmp    r12,rax
  420ff0:	je     421007 <flatcc_json_parser_double@@Base+0x327>
  420ff2:	movzx  r13d,BYTE PTR [rbp+rax*1+0x2]
  420ff8:	mov    ebx,r13d
  420ffb:	add    bl,0xd0
  420ffe:	lea    rdx,[rax+0x1]
  421002:	cmp    bl,0xa
  421005:	jb     420fd1 <flatcc_json_parser_double@@Base+0x2f1>
  421007:	add    rbp,rax
  42100a:	add    rbp,0x2
  42100e:	add    esi,0xffffffff
  421011:	sub    esi,eax
  421013:	jmp    4210e3 <flatcc_json_parser_double@@Base+0x403>
  421018:	mov    edx,r10d
  42101b:	xor    r9d,r9d
  42101e:	cmp    rbp,r15
  421021:	je     4211fd <flatcc_json_parser_double@@Base+0x51d>
  421027:	mov    al,BYTE PTR [rbp+0x0]
  42102a:	or     al,0x20
  42102c:	cmp    al,0x65
  42102e:	jne    42106b <flatcc_json_parser_double@@Base+0x38b>
  421030:	mov    rax,r15
  421033:	sub    rax,rbp
  421036:	xor    r9d,r9d
  421039:	cmp    rax,0x2
  42103d:	jl     4211fd <flatcc_json_parser_double@@Base+0x51d>
  421043:	mov    al,BYTE PTR [rbp+0x1]
  421046:	cmp    al,0x2d
  421048:	je     4211da <flatcc_json_parser_double@@Base+0x4fa>
  42104e:	cmp    al,0x2b
  421050:	jne    4211eb <flatcc_json_parser_double@@Base+0x50b>
  421056:	add    rbp,0x2
  42105a:	xor    r9d,r9d
  42105d:	cmp    rbp,r15
  421060:	jne    4211ef <flatcc_json_parser_double@@Base+0x50f>
  421066:	jmp    4211fd <flatcc_json_parser_double@@Base+0x51d>
  42106b:	xor    r10d,r10d
  42106e:	cmp    rbp,r15
  421071:	je     4211fd <flatcc_json_parser_double@@Base+0x51d>
  421077:	mov    eax,r10d
  42107a:	neg    eax
  42107c:	test   r9d,r9d
  42107f:	cmove  eax,r10d
  421083:	vxorpd xmm0,xmm0,xmm0
  421087:	test   rdi,rdi
  42108a:	je     421160 <flatcc_json_parser_double@@Base+0x480>
  421090:	add    esi,edx
  421092:	add    esi,eax
  421094:	cmp    esi,0xfffffebc
  42109a:	mov    ebx,DWORD PTR [rsp+0xc]
  42109e:	jl     421164 <flatcc_json_parser_double@@Base+0x484>
  4210a4:	cmp    esi,0x136
  4210aa:	jle    421187 <flatcc_json_parser_double@@Base+0x4a7>
  4210b0:	vmovsd xmm0,QWORD PTR [rip+0x5d28]        # 426de0 <flatcc_builder_padding_base@@Base+0x1f50>
  4210b8:	jmp    421164 <flatcc_json_parser_double@@Base+0x484>
  4210bd:	mov    rbp,rax
  4210c0:	jmp    4210e8 <flatcc_json_parser_double@@Base+0x408>
  4210c2:	mov    esi,esi
  4210c4:	sub    rsi,rax
  4210c7:	add    rbp,rax
  4210ca:	add    rbp,0x1
  4210ce:	test   ecx,ecx
  4210d0:	jne    4210e3 <flatcc_json_parser_double@@Base+0x403>
  4210d2:	xor    eax,eax
  4210d4:	cmp    r13b,0x34
  4210d8:	setg   al
  4210db:	add    rdi,rax
  4210de:	mov    ecx,0x1
  4210e3:	mov    rax,QWORD PTR [rsp+0x10]
  4210e8:	cmp    rbp,r15
  4210eb:	mov    r13,QWORD PTR [rsp+0x18]
  4210f0:	je     4211fd <flatcc_json_parser_double@@Base+0x51d>
  4210f6:	mov    edx,ebp
  4210f8:	sub    edx,eax
  4210fa:	add    edx,r10d
  4210fd:	lea    r10,[rbp+0x1]
  421101:	sub    r9,rbp
  421104:	add    r9,r14
  421107:	xor    ebx,ebx
  421109:	xor    r11d,r11d
  42110c:	movzx  eax,BYTE PTR [rbp+rbx*1+0x0]
  421111:	cmp    al,0x30
  421113:	jne    42112a <flatcc_json_parser_double@@Base+0x44a>
  421115:	add    r11,0xffffffffffffffff
  421119:	add    rbx,0x1
  42111d:	mov    rax,r9
  421120:	add    rax,r11
  421123:	jne    42110c <flatcc_json_parser_double@@Base+0x42c>
  421125:	sub    esi,r11d
  421128:	jmp    421158 <flatcc_json_parser_double@@Base+0x478>
  42112a:	add    al,0xcf
  42112c:	mov    esi,esi
  42112e:	sub    rsi,r11
  421131:	cmp    al,0x9
  421133:	jae    421158 <flatcc_json_parser_double@@Base+0x478>
  421135:	sub    r10,r11
  421138:	mov    rbp,r10
  42113b:	cmp    r15,r10
  42113e:	je     42114e <flatcc_json_parser_double@@Base+0x46e>
  421140:	movzx  eax,BYTE PTR [rbp+0x0]
  421144:	add    al,0xd0
  421146:	lea    r10,[rbp+0x1]
  42114a:	cmp    al,0xa
  42114c:	jb     421138 <flatcc_json_parser_double@@Base+0x458>
  42114e:	mov    ecx,0x1
  421153:	jmp    42101b <flatcc_json_parser_double@@Base+0x33b>
  421158:	sub    rbp,r11
  42115b:	jmp    42101b <flatcc_json_parser_double@@Base+0x33b>
  421160:	mov    ebx,DWORD PTR [rsp+0xc]
  421164:	vmovsd QWORD PTR [r13+0x0],xmm0
  42116a:	test   ebx,ebx
  42116c:	je     421182 <flatcc_json_parser_double@@Base+0x4a2>
  42116e:	vmovsd xmm0,QWORD PTR [r13+0x0]
  421174:	vxorpd xmm0,xmm0,XMMWORD PTR [rip+0x3a24]        # 424ba0 <_IO_stdin_used@@Base+0xba0>
  42117c:	vmovlpd QWORD PTR [r13+0x0],xmm0
  421182:	mov    r14,rbp
  421185:	jmp    421200 <flatcc_json_parser_double@@Base+0x520>
  421187:	mov    rax,rdi
  42118a:	shr    rax,0x35
  42118e:	jne    421258 <flatcc_json_parser_double@@Base+0x578>
  421194:	cmp    esi,0x16
  421197:	ja     421258 <flatcc_json_parser_double@@Base+0x578>
  42119d:	vmovq  xmm0,rdi
  4211a2:	vpunpckldq xmm0,xmm0,XMMWORD PTR [rip+0x39d6]        # 424b80 <_IO_stdin_used@@Base+0xb80>
  4211aa:	vsubpd xmm0,xmm0,XMMWORD PTR [rip+0x39de]        # 424b90 <_IO_stdin_used@@Base+0xb90>
  4211b2:	vhaddpd xmm0,xmm0,xmm0
  4211b6:	sub    esi,edx
  4211b8:	add    esi,0x16
  4211bb:	cmp    esi,0x2c
  4211be:	ja     421164 <flatcc_json_parser_double@@Base+0x484>
  4211c0:	lea    rax,[rip+0x5375]        # 42653c <flatcc_builder_padding_base@@Base+0x16ac>
  4211c7:	movsxd rcx,DWORD PTR [rax+rsi*4]
  4211cb:	add    rcx,rax
  4211ce:	jmp    rcx
  4211d0:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x5cb8]        # 426e90 <flatcc_builder_padding_base@@Base+0x2000>
  4211d8:	jmp    421164 <flatcc_json_parser_double@@Base+0x484>
  4211da:	add    rbp,0x2
  4211de:	mov    r9d,0x1
  4211e4:	cmp    rbp,r15
  4211e7:	jne    4211ef <flatcc_json_parser_double@@Base+0x50f>
  4211e9:	jmp    4211fd <flatcc_json_parser_double@@Base+0x51d>
  4211eb:	add    rbp,0x1
  4211ef:	movsx  r10d,BYTE PTR [rbp+0x0]
  4211f4:	mov    eax,r10d
  4211f7:	add    al,0xd0
  4211f9:	cmp    al,0x9
  4211fb:	jbe    421212 <flatcc_json_parser_double@@Base+0x532>
  4211fd:	xor    r14d,r14d
  421200:	mov    rax,r14
  421203:	add    rsp,0x28
  421207:	pop    rbx
  421208:	pop    r12
  42120a:	pop    r13
  42120c:	pop    r14
  42120e:	pop    r15
  421210:	pop    rbp
  421211:	ret    
  421212:	add    r10d,0xffffffd0
  421216:	cmp    rbp,r8
  421219:	lea    rbp,[rbp+0x1]
  42121d:	je     42106e <flatcc_json_parser_double@@Base+0x38e>
  421223:	movsx  eax,BYTE PTR [rbp+0x0]
  421227:	mov    ebx,eax
  421229:	add    bl,0xd0
  42122c:	cmp    bl,0x9
  42122f:	ja     42106e <flatcc_json_parser_double@@Base+0x38e>
  421235:	cmp    r10d,0x7fff
  42123c:	jg     42124a <flatcc_json_parser_double@@Base+0x56a>
  42123e:	lea    ebx,[r10+r10*4]
  421242:	lea    r10d,[rax+rbx*2]
  421246:	add    r10d,0xffffffd0
  42124a:	add    rbp,0x1
  42124e:	cmp    r15,rbp
  421251:	jne    421223 <flatcc_json_parser_double@@Base+0x543>
  421253:	jmp    42106e <flatcc_json_parser_double@@Base+0x38e>
  421258:	mov    r8,r13
  42125b:	call   41f4f0 <grisu3_diy_fp_encode_double@@Base>
  421260:	mov    ebx,DWORD PTR [rsp+0xc]
  421264:	test   eax,eax
  421266:	jne    42116a <flatcc_json_parser_double@@Base+0x48a>
  42126c:	lea    rsi,[rsp+0x20]
  421271:	mov    rdi,r14
  421274:	call   404040 <strtod@plt>
  421279:	vmovsd QWORD PTR [r13+0x0],xmm0
  42127f:	mov    rax,QWORD PTR [rsp+0x20]
  421284:	cmp    rax,rbp
  421287:	cmovb  rbp,rax
  42128b:	jmp    421182 <flatcc_json_parser_double@@Base+0x4a2>
  421290:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x5b50]        # 426de8 <flatcc_builder_padding_base@@Base+0x1f58>
  421298:	jmp    421164 <flatcc_json_parser_double@@Base+0x484>
  42129d:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x5b4b]        # 426df0 <flatcc_builder_padding_base@@Base+0x1f60>
  4212a5:	jmp    421164 <flatcc_json_parser_double@@Base+0x484>
  4212aa:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x5b46]        # 426df8 <flatcc_builder_padding_base@@Base+0x1f68>
  4212b2:	jmp    421164 <flatcc_json_parser_double@@Base+0x484>
  4212b7:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x5b41]        # 426e00 <flatcc_builder_padding_base@@Base+0x1f70>
  4212bf:	jmp    421164 <flatcc_json_parser_double@@Base+0x484>
  4212c4:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x5b3c]        # 426e08 <flatcc_builder_padding_base@@Base+0x1f78>
  4212cc:	jmp    421164 <flatcc_json_parser_double@@Base+0x484>
  4212d1:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x5b37]        # 426e10 <flatcc_builder_padding_base@@Base+0x1f80>
  4212d9:	jmp    421164 <flatcc_json_parser_double@@Base+0x484>
  4212de:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x5b32]        # 426e18 <flatcc_builder_padding_base@@Base+0x1f88>
  4212e6:	jmp    421164 <flatcc_json_parser_double@@Base+0x484>
  4212eb:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x5b2d]        # 426e20 <flatcc_builder_padding_base@@Base+0x1f90>
  4212f3:	jmp    421164 <flatcc_json_parser_double@@Base+0x484>
  4212f8:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x5b28]        # 426e28 <flatcc_builder_padding_base@@Base+0x1f98>
  421300:	jmp    421164 <flatcc_json_parser_double@@Base+0x484>
  421305:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x5b23]        # 426e30 <flatcc_builder_padding_base@@Base+0x1fa0>
  42130d:	jmp    421164 <flatcc_json_parser_double@@Base+0x484>
  421312:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x5b1e]        # 426e38 <flatcc_builder_padding_base@@Base+0x1fa8>
  42131a:	jmp    421164 <flatcc_json_parser_double@@Base+0x484>
  42131f:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x5b19]        # 426e40 <flatcc_builder_padding_base@@Base+0x1fb0>
  421327:	jmp    421164 <flatcc_json_parser_double@@Base+0x484>
  42132c:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x5b14]        # 426e48 <flatcc_builder_padding_base@@Base+0x1fb8>
  421334:	jmp    421164 <flatcc_json_parser_double@@Base+0x484>
  421339:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x5b0f]        # 426e50 <flatcc_builder_padding_base@@Base+0x1fc0>
  421341:	jmp    421164 <flatcc_json_parser_double@@Base+0x484>
  421346:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x5b0a]        # 426e58 <flatcc_builder_padding_base@@Base+0x1fc8>
  42134e:	jmp    421164 <flatcc_json_parser_double@@Base+0x484>
  421353:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x5b05]        # 426e60 <flatcc_builder_padding_base@@Base+0x1fd0>
  42135b:	jmp    421164 <flatcc_json_parser_double@@Base+0x484>
  421360:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x5b00]        # 426e68 <flatcc_builder_padding_base@@Base+0x1fd8>
  421368:	jmp    421164 <flatcc_json_parser_double@@Base+0x484>
  42136d:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x5afb]        # 426e70 <flatcc_builder_padding_base@@Base+0x1fe0>
  421375:	jmp    421164 <flatcc_json_parser_double@@Base+0x484>
  42137a:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x5af6]        # 426e78 <flatcc_builder_padding_base@@Base+0x1fe8>
  421382:	jmp    421164 <flatcc_json_parser_double@@Base+0x484>
  421387:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x5af1]        # 426e80 <flatcc_builder_padding_base@@Base+0x1ff0>
  42138f:	jmp    421164 <flatcc_json_parser_double@@Base+0x484>
  421394:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x5aec]        # 426e88 <flatcc_builder_padding_base@@Base+0x1ff8>
  42139c:	jmp    421164 <flatcc_json_parser_double@@Base+0x484>
  4213a1:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x5adf]        # 426e88 <flatcc_builder_padding_base@@Base+0x1ff8>
  4213a9:	jmp    421164 <flatcc_json_parser_double@@Base+0x484>
  4213ae:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x5aca]        # 426e80 <flatcc_builder_padding_base@@Base+0x1ff0>
  4213b6:	jmp    421164 <flatcc_json_parser_double@@Base+0x484>
  4213bb:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x5ab5]        # 426e78 <flatcc_builder_padding_base@@Base+0x1fe8>
  4213c3:	jmp    421164 <flatcc_json_parser_double@@Base+0x484>
  4213c8:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x5aa0]        # 426e70 <flatcc_builder_padding_base@@Base+0x1fe0>
  4213d0:	jmp    421164 <flatcc_json_parser_double@@Base+0x484>
  4213d5:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x5a8b]        # 426e68 <flatcc_builder_padding_base@@Base+0x1fd8>
  4213dd:	jmp    421164 <flatcc_json_parser_double@@Base+0x484>
  4213e2:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x5a76]        # 426e60 <flatcc_builder_padding_base@@Base+0x1fd0>
  4213ea:	jmp    421164 <flatcc_json_parser_double@@Base+0x484>
  4213ef:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x5a61]        # 426e58 <flatcc_builder_padding_base@@Base+0x1fc8>
  4213f7:	jmp    421164 <flatcc_json_parser_double@@Base+0x484>
  4213fc:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x5a4c]        # 426e50 <flatcc_builder_padding_base@@Base+0x1fc0>
  421404:	jmp    421164 <flatcc_json_parser_double@@Base+0x484>
  421409:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x5a37]        # 426e48 <flatcc_builder_padding_base@@Base+0x1fb8>
  421411:	jmp    421164 <flatcc_json_parser_double@@Base+0x484>
  421416:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x5a22]        # 426e40 <flatcc_builder_padding_base@@Base+0x1fb0>
  42141e:	jmp    421164 <flatcc_json_parser_double@@Base+0x484>
  421423:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x5a0d]        # 426e38 <flatcc_builder_padding_base@@Base+0x1fa8>
  42142b:	jmp    421164 <flatcc_json_parser_double@@Base+0x484>
  421430:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x59f8]        # 426e30 <flatcc_builder_padding_base@@Base+0x1fa0>
  421438:	jmp    421164 <flatcc_json_parser_double@@Base+0x484>
  42143d:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x59e3]        # 426e28 <flatcc_builder_padding_base@@Base+0x1f98>
  421445:	jmp    421164 <flatcc_json_parser_double@@Base+0x484>
  42144a:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x59ce]        # 426e20 <flatcc_builder_padding_base@@Base+0x1f90>
  421452:	jmp    421164 <flatcc_json_parser_double@@Base+0x484>
  421457:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x59b9]        # 426e18 <flatcc_builder_padding_base@@Base+0x1f88>
  42145f:	jmp    421164 <flatcc_json_parser_double@@Base+0x484>
  421464:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x59a4]        # 426e10 <flatcc_builder_padding_base@@Base+0x1f80>
  42146c:	jmp    421164 <flatcc_json_parser_double@@Base+0x484>
  421471:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x598f]        # 426e08 <flatcc_builder_padding_base@@Base+0x1f78>
  421479:	jmp    421164 <flatcc_json_parser_double@@Base+0x484>
  42147e:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x597a]        # 426e00 <flatcc_builder_padding_base@@Base+0x1f70>
  421486:	jmp    421164 <flatcc_json_parser_double@@Base+0x484>
  42148b:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x5965]        # 426df8 <flatcc_builder_padding_base@@Base+0x1f68>
  421493:	jmp    421164 <flatcc_json_parser_double@@Base+0x484>
  421498:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x5950]        # 426df0 <flatcc_builder_padding_base@@Base+0x1f60>
  4214a0:	jmp    421164 <flatcc_json_parser_double@@Base+0x484>
  4214a5:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x593b]        # 426de8 <flatcc_builder_padding_base@@Base+0x1f58>
  4214ad:	jmp    421164 <flatcc_json_parser_double@@Base+0x484>
  4214b2:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x59d6]        # 426e90 <flatcc_builder_padding_base@@Base+0x2000>
  4214ba:	jmp    421164 <flatcc_json_parser_double@@Base+0x484>
  4214bf:	nop

00000000004214c0 <flatcc_json_parser_float@@Base>:
  4214c0:	push   r15
  4214c2:	push   r14
  4214c4:	push   r12
  4214c6:	push   rbx
  4214c7:	push   rax
  4214c8:	mov    rbx,rsi
  4214cb:	mov    DWORD PTR [rcx],0x0
  4214d1:	cmp    rsi,rdx
  4214d4:	je     4215a3 <flatcc_json_parser_float@@Base+0xe3>
  4214da:	mov    r12,rcx
  4214dd:	mov    r14,rdx
  4214e0:	mov    r15,rdi
  4214e3:	lea    rax,[rbx+0x1]
  4214e7:	xor    ecx,ecx
  4214e9:	cmp    BYTE PTR [rbx],0x2d
  4214ec:	sete   dl
  4214ef:	cmovne rax,rbx
  4214f3:	mov    rsi,r14
  4214f6:	sub    rsi,rax
  4214f9:	cmp    rsi,0x2
  4214fd:	jl     421524 <flatcc_json_parser_float@@Base+0x64>
  4214ff:	mov    cl,dl
  421501:	mov    cl,BYTE PTR [rbx+rcx*1]
  421504:	cmp    cl,0x2e
  421507:	je     421514 <flatcc_json_parser_float@@Base+0x54>
  421509:	cmp    cl,0x30
  42150c:	jne    421524 <flatcc_json_parser_float@@Base+0x64>
  42150e:	cmp    BYTE PTR [rax+0x1],0x30
  421512:	jne    421524 <flatcc_json_parser_float@@Base+0x64>
  421514:	cmp    DWORD PTR [r15+0x20],0x0
  421519:	jne    4215c7 <flatcc_json_parser_float@@Base+0x107>
  42151f:	jmp    4215ac <flatcc_json_parser_float@@Base+0xec>
  421524:	mov    esi,r14d
  421527:	sub    esi,ebx
  421529:	mov    rdx,rsp
  42152c:	mov    rdi,rbx
  42152f:	call   420dc0 <flatcc_json_parser_double@@Base+0xe0>
  421534:	vmovsd xmm0,QWORD PTR [rsp]
  421539:	vxorps xmm1,xmm1,xmm1
  42153d:	xor    ecx,ecx
  42153f:	vucomisd xmm1,xmm0
  421543:	seta   dl
  421546:	vcvtsd2ss xmm1,xmm0,xmm0
  42154a:	vbroadcastss xmm0,DWORD PTR [rip+0x594d]        # 426ea0 <flatcc_builder_padding_base@@Base+0x2010>
  421553:	vandps xmm2,xmm1,xmm0
  421557:	vucomiss xmm2,DWORD PTR [rip+0x5945]        # 426ea4 <flatcc_builder_padding_base@@Base+0x2014>
  42155f:	jb     42156f <flatcc_json_parser_float@@Base+0xaf>
  421561:	mov    cl,dl
  421563:	lea    rdx,[rip+0x592e]        # 426e98 <flatcc_builder_padding_base@@Base+0x2008>
  42156a:	vmovss xmm1,DWORD PTR [rdx+rcx*4]
  42156f:	cmovae rax,rbx
  421573:	vmovss DWORD PTR [r12],xmm1
  421579:	test   rax,rax
  42157c:	je     421583 <flatcc_json_parser_float@@Base+0xc3>
  42157e:	cmp    rax,rbx
  421581:	jne    4215ca <flatcc_json_parser_float@@Base+0x10a>
  421583:	vandps xmm0,xmm1,xmm0
  421587:	vucomiss xmm0,DWORD PTR [rip+0x5915]        # 426ea4 <flatcc_builder_padding_base@@Base+0x2014>
  42158f:	mov    eax,DWORD PTR [r15+0x20]
  421593:	jb     4215a8 <flatcc_json_parser_float@@Base+0xe8>
  421595:	test   eax,eax
  421597:	jne    4215c7 <flatcc_json_parser_float@@Base+0x107>
  421599:	mov    DWORD PTR [r15+0x20],0x7
  4215a1:	jmp    4215b4 <flatcc_json_parser_float@@Base+0xf4>
  4215a3:	mov    rax,rbx
  4215a6:	jmp    4215ca <flatcc_json_parser_float@@Base+0x10a>
  4215a8:	test   eax,eax
  4215aa:	jne    4215c7 <flatcc_json_parser_float@@Base+0x107>
  4215ac:	mov    DWORD PTR [r15+0x20],0x6
  4215b4:	mov    eax,DWORD PTR [r15+0x8]
  4215b8:	mov    ecx,ebx
  4215ba:	sub    ecx,eax
  4215bc:	add    ecx,0x1
  4215bf:	mov    DWORD PTR [r15+0x1c],ecx
  4215c3:	mov    QWORD PTR [r15+0x38],rbx
  4215c7:	mov    rax,r14
  4215ca:	add    rsp,0x8
  4215ce:	pop    rbx
  4215cf:	pop    r12
  4215d1:	pop    r14
  4215d3:	pop    r15
  4215d5:	ret    
  4215d6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004215e0 <flatcc_json_parser_integer@@Base>:
  4215e0:	cmp    rsi,rdx
  4215e3:	je     42167b <flatcc_json_parser_integer@@Base+0x9b>
  4215e9:	xor    r10d,r10d
  4215ec:	cmp    BYTE PTR [rsi],0x2d
  4215ef:	sete   r10b
  4215f3:	mov    DWORD PTR [rcx],r10d
  4215f6:	add    r10,rsi
  4215f9:	xor    r9d,r9d
  4215fc:	cmp    r10,rdx
  4215ff:	je     421671 <flatcc_json_parser_integer@@Base+0x91>
  421601:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42160b:	nop    DWORD PTR [rax+rax*1+0x0]
  421610:	movsx  r11,BYTE PTR [r10]
  421614:	mov    eax,r11d
  421617:	add    al,0xd0
  421619:	cmp    al,0x9
  42161b:	ja     421689 <flatcc_json_parser_integer@@Base+0xa9>
  42161d:	lea    rax,[r9+r9*4]
  421621:	lea    rax,[r11+rax*2]
  421625:	add    rax,0xffffffffffffffd0
  421629:	cmp    r9,rax
  42162c:	ja     421692 <flatcc_json_parser_integer@@Base+0xb2>
  42162e:	add    r10,0x1
  421632:	mov    r9,rax
  421635:	cmp    rdx,r10
  421638:	jne    421610 <flatcc_json_parser_integer@@Base+0x30>
  42163a:	xor    ecx,ecx
  42163c:	mov    r10,rdx
  42163f:	mov    r9,rax
  421642:	cmp    r10,rsi
  421645:	je     42167b <flatcc_json_parser_integer@@Base+0x9b>
  421647:	test   cl,cl
  421649:	je     42167f <flatcc_json_parser_integer@@Base+0x9f>
  42164b:	mov    al,BYTE PTR [r10]
  42164e:	add    al,0xd2
  421650:	cmp    al,0x37
  421652:	ja     42167f <flatcc_json_parser_integer@@Base+0x9f>
  421654:	movzx  eax,al
  421657:	movabs rcx,0x80000000800001
  421661:	bt     rcx,rax
  421665:	jae    42167f <flatcc_json_parser_integer@@Base+0x9f>
  421667:	cmp    DWORD PTR [rdi+0x20],0x0
  42166b:	je     42169c <flatcc_json_parser_integer@@Base+0xbc>
  42166d:	mov    rax,rdx
  421670:	ret    
  421671:	mov    r10,rdx
  421674:	xor    ecx,ecx
  421676:	cmp    r10,rsi
  421679:	jne    421647 <flatcc_json_parser_integer@@Base+0x67>
  42167b:	mov    rax,rsi
  42167e:	ret    
  42167f:	mov    QWORD PTR [r8],r9
  421682:	mov    rsi,r10
  421685:	mov    rax,rsi
  421688:	ret    
  421689:	mov    cl,0x1
  42168b:	cmp    r10,rsi
  42168e:	jne    421647 <flatcc_json_parser_integer@@Base+0x67>
  421690:	jmp    42167b <flatcc_json_parser_integer@@Base+0x9b>
  421692:	cmp    DWORD PTR [rdi+0x20],0x0
  421696:	je     4216a5 <flatcc_json_parser_integer@@Base+0xc5>
  421698:	mov    rax,rdx
  42169b:	ret    
  42169c:	mov    DWORD PTR [rdi+0x20],0xc
  4216a3:	jmp    4216b4 <flatcc_json_parser_integer@@Base+0xd4>
  4216a5:	cmp    rcx,0x1
  4216a9:	mov    eax,0x8
  4216ae:	sbb    eax,0x0
  4216b1:	mov    DWORD PTR [rdi+0x20],eax
  4216b4:	mov    eax,DWORD PTR [rdi+0x8]
  4216b7:	mov    ecx,r10d
  4216ba:	sub    ecx,eax
  4216bc:	add    ecx,0x1
  4216bf:	mov    DWORD PTR [rdi+0x1c],ecx
  4216c2:	mov    QWORD PTR [rdi+0x38],r10
  4216c6:	mov    rax,rdx
  4216c9:	ret    
  4216ca:	nop    WORD PTR [rax+rax*1+0x0]

00000000004216d0 <flatcc_json_parser_build_uint8_vector_base64@@Base>:
  4216d0:	push   rbp
  4216d1:	push   r15
  4216d3:	push   r14
  4216d5:	push   r13
  4216d7:	push   r12
  4216d9:	push   rbx
  4216da:	sub    rsp,0x28
  4216de:	mov    r12d,r8d
  4216e1:	mov    r15,rcx
  4216e4:	mov    r14,rdx
  4216e7:	mov    r13,rsi
  4216ea:	mov    rbx,rdi
  4216ed:	cmp    rsi,rdx
  4216f0:	je     42173a <flatcc_json_parser_build_uint8_vector_base64@@Base+0x6a>
  4216f2:	cmp    BYTE PTR [r13+0x0],0x22
  4216f7:	jne    42173a <flatcc_json_parser_build_uint8_vector_base64@@Base+0x6a>
  4216f9:	add    r13,0x1
  4216fd:	cmp    r13,r14
  421700:	je     421759 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x89>
  421702:	mov    rbp,r13
  421705:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42170f:	nop
  421710:	movzx  ecx,BYTE PTR [rbp+0x0]
  421714:	cmp    cl,0x20
  421717:	jb     4217bd <flatcc_json_parser_build_uint8_vector_base64@@Base+0xed>
  42171d:	cmp    cl,0x22
  421720:	je     4217e0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x110>
  421726:	cmp    cl,0x5c
  421729:	je     4217e0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x110>
  42172f:	add    rbp,0x1
  421733:	cmp    r14,rbp
  421736:	jne    421710 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x40>
  421738:	jmp    421759 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x89>
  42173a:	cmp    DWORD PTR [rbx+0x20],0x0
  42173e:	jne    421759 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x89>
  421740:	mov    DWORD PTR [rbx+0x20],0x10
  421747:	mov    eax,DWORD PTR [rbx+0x8]
  42174a:	mov    ecx,r13d
  42174d:	sub    ecx,eax
  42174f:	add    ecx,0x1
  421752:	mov    DWORD PTR [rbx+0x1c],ecx
  421755:	mov    QWORD PTR [rbx+0x38],r13
  421759:	cmp    DWORD PTR [rbx+0x20],0x0
  42175d:	mov    rax,r14
  421760:	jne    42177e <flatcc_json_parser_build_uint8_vector_base64@@Base+0xae>
  421762:	mov    DWORD PTR [rbx+0x20],0x14
  421769:	mov    eax,DWORD PTR [rbx+0x8]
  42176c:	mov    ecx,r14d
  42176f:	sub    ecx,eax
  421771:	add    ecx,0x1
  421774:	mov    DWORD PTR [rbx+0x1c],ecx
  421777:	mov    QWORD PTR [rbx+0x38],r14
  42177b:	mov    rax,r14
  42177e:	mov    DWORD PTR [r15],0x0
  421785:	cmp    DWORD PTR [rbx+0x20],0x0
  421789:	jne    4217ab <flatcc_json_parser_build_uint8_vector_base64@@Base+0xdb>
  42178b:	cmp    r12d,0x1
  42178f:	mov    ecx,0x1f
  421794:	sbb    ecx,0xffffffff
  421797:	mov    DWORD PTR [rbx+0x20],ecx
  42179a:	mov    ecx,DWORD PTR [rbx+0x8]
  42179d:	mov    edx,eax
  42179f:	sub    edx,ecx
  4217a1:	add    edx,0x1
  4217a4:	mov    DWORD PTR [rbx+0x1c],edx
  4217a7:	mov    QWORD PTR [rbx+0x38],rax
  4217ab:	mov    rax,r14
  4217ae:	add    rsp,0x28
  4217b2:	pop    rbx
  4217b3:	pop    r12
  4217b5:	pop    r13
  4217b7:	pop    r14
  4217b9:	pop    r15
  4217bb:	pop    rbp
  4217bc:	ret    
  4217bd:	cmp    DWORD PTR [rbx+0x20],0x0
  4217c1:	mov    rax,r14
  4217c4:	jne    42177e <flatcc_json_parser_build_uint8_vector_base64@@Base+0xae>
  4217c6:	mov    DWORD PTR [rbx+0x20],0x11
  4217cd:	mov    eax,DWORD PTR [rbx+0x8]
  4217d0:	mov    ecx,ebp
  4217d2:	sub    ecx,eax
  4217d4:	add    ecx,0x1
  4217d7:	mov    DWORD PTR [rbx+0x1c],ecx
  4217da:	mov    QWORD PTR [rbx+0x38],rbp
  4217de:	jmp    42177b <flatcc_json_parser_build_uint8_vector_base64@@Base+0xab>
  4217e0:	mov    rax,r14
  4217e3:	cmp    r14,rbp
  4217e6:	je     42177e <flatcc_json_parser_build_uint8_vector_base64@@Base+0xae>
  4217e8:	cmp    cl,0x22
  4217eb:	jne    421815 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x145>
  4217ed:	mov    rcx,rbp
  4217f0:	sub    rcx,r13
  4217f3:	mov    rax,rcx
  4217f6:	shr    rax,0x2
  4217fa:	lea    rdx,[rax+rax*2]
  4217fe:	mov    QWORD PTR [rsp+0x18],rcx
  421803:	mov    eax,ecx
  421805:	and    al,0x3
  421807:	cmp    al,0x2
  421809:	je     42181d <flatcc_json_parser_build_uint8_vector_base64@@Base+0x14d>
  42180b:	cmp    al,0x3
  42180d:	jne    421821 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x151>
  42180f:	add    rdx,0x2
  421813:	jmp    421821 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x151>
  421815:	mov    rax,rbp
  421818:	jmp    42177e <flatcc_json_parser_build_uint8_vector_base64@@Base+0xae>
  42181d:	add    rdx,0x1
  421821:	mov    QWORD PTR [rsp+0x8],rdx
  421826:	mov    rdi,QWORD PTR [rbx]
  421829:	mov    esi,0x1
  42182e:	mov    edx,0x1
  421833:	mov    ecx,0xffffffff
  421838:	call   41c090 <flatcc_builder_start_vector@@Base>
  42183d:	test   eax,eax
  42183f:	je     42186f <flatcc_json_parser_build_uint8_vector_base64@@Base+0x19f>
  421841:	mov    DWORD PTR [r15],0x0
  421848:	cmp    DWORD PTR [rbx+0x20],0x0
  42184c:	jne    4217ab <flatcc_json_parser_build_uint8_vector_base64@@Base+0xdb>
  421852:	mov    DWORD PTR [rbx+0x20],0x21
  421859:	mov    eax,DWORD PTR [rbx+0x8]
  42185c:	mov    ecx,ebp
  42185e:	sub    ecx,eax
  421860:	add    ecx,0x1
  421863:	mov    DWORD PTR [rbx+0x1c],ecx
  421866:	mov    QWORD PTR [rbx+0x38],rbp
  42186a:	jmp    4217ab <flatcc_json_parser_build_uint8_vector_base64@@Base+0xdb>
  42186f:	mov    rdi,QWORD PTR [rbx]
  421872:	mov    rsi,QWORD PTR [rsp+0x8]
  421877:	call   41b720 <flatcc_builder_extend_vector@@Base>
  42187c:	test   rax,rax
  42187f:	je     421841 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x171>
  421881:	test   r12d,r12d
  421884:	lea    rcx,[rip+0x5445]        # 426cd0 <flatcc_builder_padding_base@@Base+0x1e40>
  42188b:	lea    r11,[rip+0x533e]        # 426bd0 <flatcc_builder_padding_base@@Base+0x1d40>
  421892:	cmovne r11,rcx
  421896:	mov    rcx,QWORD PTR [rsp+0x8]
  42189b:	cmp    rcx,0x1
  42189f:	sbb    r10,r10
  4218a2:	or     r10,rcx
  4218a5:	mov    QWORD PTR [rsp+0x20],rax
  4218aa:	mov    r9,rax
  4218ad:	mov    rdi,QWORD PTR [rsp+0x18]
  4218b2:	mov    r8,r13
  4218b5:	mov    rsi,rdi
  4218b8:	xor    edx,edx
  4218ba:	cmp    rsi,rdx
  4218bd:	je     421951 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x281>
  4218c3:	movzx  ecx,BYTE PTR [r8+rdx*1]
  4218c8:	movzx  ecx,BYTE PTR [r11+rcx*1]
  4218cd:	mov    BYTE PTR [rsp+rdx*1+0x4],cl
  4218d1:	cmp    cl,0x40
  4218d4:	jb     4218eb <flatcc_json_parser_build_uint8_vector_base64@@Base+0x21b>
  4218d6:	cmp    cl,0x41
  4218d9:	jne    4219ab <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2db>
  4218df:	add    r8,0x1
  4218e3:	add    rsi,0xffffffffffffffff
  4218e7:	add    rdx,0xffffffffffffffff
  4218eb:	add    rdx,0x1
  4218ef:	cmp    rdx,0x4
  4218f3:	jb     4218ba <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1ea>
  4218f5:	cmp    r10,0x3
  4218f9:	jb     421a30 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x360>
  4218ff:	mov    al,BYTE PTR [rsp+0x4]
  421903:	mov    cl,BYTE PTR [rsp+0x5]
  421907:	shl    al,0x2
  42190a:	mov    edx,ecx
  42190c:	shr    dl,0x4
  42190f:	or     dl,al
  421911:	mov    BYTE PTR [r9],dl
  421914:	shl    cl,0x4
  421917:	mov    al,BYTE PTR [rsp+0x6]
  42191b:	shr    al,0x2
  42191e:	or     al,cl
  421920:	mov    BYTE PTR [r9+0x1],al
  421924:	mov    al,BYTE PTR [rsp+0x6]
  421928:	shl    al,0x6
  42192b:	or     al,BYTE PTR [rsp+0x7]
  42192f:	mov    BYTE PTR [r9+0x2],al
  421933:	add    r9,0x3
  421937:	add    r8,0x4
  42193b:	add    rsi,0xfffffffffffffffc
  42193f:	mov    rdi,rsi
  421942:	add    r10,0xfffffffffffffffd
  421946:	jne    4218b8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1e8>
  42194c:	jmp    421a21 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x351>
  421951:	mov    QWORD PTR [rsp+0x10],rdi
  421956:	mov    rdx,rsi
  421959:	mov    rdi,rsi
  42195c:	sub    rsi,rdi
  42195f:	test   rdx,rdx
  421962:	je     421a21 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x351>
  421968:	cmp    rdx,0x3
  42196c:	je     4219e4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x314>
  42196e:	cmp    rdx,0x2
  421972:	mov    rdi,QWORD PTR [rsp+0x10]
  421977:	jne    421a30 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x360>
  42197d:	mov    cl,BYTE PTR [rsp+0x5]
  421981:	test   cl,0xf
  421984:	jne    421a30 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x360>
  42198a:	mov    al,BYTE PTR [rsp+0x4]
  42198e:	shl    al,0x2
  421991:	shr    cl,0x4
  421994:	or     cl,al
  421996:	mov    BYTE PTR [r9],cl
  421999:	add    r9,0x1
  42199d:	test   rsi,rsi
  4219a0:	jne    421a26 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x356>
  4219a6:	jmp    421a43 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x373>
  4219ab:	mov    QWORD PTR [rsp+0x10],rdi
  4219b0:	cmp    cl,0x42
  4219b3:	jne    421a89 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3b9>
  4219b9:	lea    rcx,[rdx+0x1]
  4219bd:	mov    rdi,rcx
  4219c0:	cmp    rcx,rsi
  4219c3:	jae    42195c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x28c>
  4219c5:	cmp    rdi,0x7
  4219c9:	ja     42195c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x28c>
  4219cb:	movzx  ecx,BYTE PTR [r8+rdi*1]
  4219d0:	movzx  eax,BYTE PTR [r11+rcx*1]
  4219d5:	add    al,0xbf
  4219d7:	lea    rcx,[rdi+0x1]
  4219db:	cmp    al,0x2
  4219dd:	jb     4219bd <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2ed>
  4219df:	jmp    42195c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x28c>
  4219e4:	cmp    r10,0x2
  4219e8:	mov    rdi,QWORD PTR [rsp+0x10]
  4219ed:	jb     421a30 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x360>
  4219ef:	mov    cl,BYTE PTR [rsp+0x6]
  4219f3:	mov    eax,ecx
  4219f5:	and    al,0x3
  4219f7:	jne    421a30 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x360>
  4219f9:	mov    dil,BYTE PTR [rsp+0x4]
  4219fe:	mov    al,BYTE PTR [rsp+0x5]
  421a02:	shl    dil,0x2
  421a06:	mov    edx,eax
  421a08:	shr    dl,0x4
  421a0b:	or     dl,dil
  421a0e:	mov    BYTE PTR [r9],dl
  421a11:	shl    al,0x4
  421a14:	shr    cl,0x2
  421a17:	or     cl,al
  421a19:	mov    BYTE PTR [r9+0x1],cl
  421a1d:	add    r9,0x2
  421a21:	test   rsi,rsi
  421a24:	je     421a43 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x373>
  421a26:	mov    rax,QWORD PTR [rsp+0x18]
  421a2b:	sub    rax,rsi
  421a2e:	jmp    421a38 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x368>
  421a30:	mov    rax,QWORD PTR [rsp+0x18]
  421a35:	sub    rax,rdi
  421a38:	add    r13,rax
  421a3b:	mov    rax,r13
  421a3e:	jmp    42177e <flatcc_json_parser_build_uint8_vector_base64@@Base+0xae>
  421a43:	sub    r9,QWORD PTR [rsp+0x20]
  421a48:	sub    QWORD PTR [rsp+0x8],r9
  421a4d:	jbe    421a64 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x394>
  421a4f:	mov    rdi,QWORD PTR [rbx]
  421a52:	mov    rsi,QWORD PTR [rsp+0x8]
  421a57:	call   41bf00 <flatcc_builder_truncate_vector@@Base>
  421a5c:	test   eax,eax
  421a5e:	jne    421841 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x171>
  421a64:	mov    rdi,QWORD PTR [rbx]
  421a67:	call   41d220 <flatcc_builder_end_vector@@Base>
  421a6c:	mov    DWORD PTR [r15],eax
  421a6f:	test   eax,eax
  421a71:	je     421841 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x171>
  421a77:	cmp    BYTE PTR [rbp+0x0],0x22
  421a7b:	jne    421a91 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3c1>
  421a7d:	add    rbp,0x1
  421a81:	mov    r14,rbp
  421a84:	jmp    4217ab <flatcc_json_parser_build_uint8_vector_base64@@Base+0xdb>
  421a89:	mov    rdi,rdx
  421a8c:	jmp    42195c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x28c>
  421a91:	cmp    DWORD PTR [rbx+0x20],0x0
  421a95:	jne    4217ab <flatcc_json_parser_build_uint8_vector_base64@@Base+0xdb>
  421a9b:	mov    DWORD PTR [rbx+0x20],0x14
  421aa2:	jmp    421859 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x189>
  421aa7:	nop    WORD PTR [rax+rax*1+0x0]

0000000000421ab0 <flatcc_json_parser_build_string@@Base>:
  421ab0:	push   rbp
  421ab1:	push   r15
  421ab3:	push   r14
  421ab5:	push   r13
  421ab7:	push   r12
  421ab9:	push   rbx
  421aba:	push   rax
  421abb:	mov    r15,rcx
  421abe:	mov    r12,rdx
  421ac1:	mov    r14,rdi
  421ac4:	cmp    rsi,rdx
  421ac7:	je     421b10 <flatcc_json_parser_build_string@@Base+0x60>
  421ac9:	cmp    BYTE PTR [rsi],0x22
  421acc:	jne    421b10 <flatcc_json_parser_build_string@@Base+0x60>
  421ace:	add    rsi,0x1
  421ad2:	mov    rbp,r12
  421ad5:	cmp    rsi,r12
  421ad8:	je     421b1e <flatcc_json_parser_build_string@@Base+0x6e>
  421ada:	mov    rbx,rsi
  421add:	nop    DWORD PTR [rax]
  421ae0:	movzx  eax,BYTE PTR [rbx]
  421ae3:	cmp    al,0x20
  421ae5:	jb     421c60 <flatcc_json_parser_build_string@@Base+0x1b0>
  421aeb:	cmp    al,0x22
  421aed:	je     421c84 <flatcc_json_parser_build_string@@Base+0x1d4>
  421af3:	cmp    al,0x5c
  421af5:	je     421c84 <flatcc_json_parser_build_string@@Base+0x1d4>
  421afb:	add    rbx,0x1
  421aff:	cmp    r12,rbx
  421b02:	jne    421ae0 <flatcc_json_parser_build_string@@Base+0x30>
  421b04:	mov    rbp,rsi
  421b07:	cmp    DWORD PTR [r14+0x20],0x0
  421b0c:	jne    421b41 <flatcc_json_parser_build_string@@Base+0x91>
  421b0e:	jmp    421b25 <flatcc_json_parser_build_string@@Base+0x75>
  421b10:	cmp    DWORD PTR [r14+0x20],0x0
  421b15:	mov    rbp,r12
  421b18:	je     421c32 <flatcc_json_parser_build_string@@Base+0x182>
  421b1e:	cmp    DWORD PTR [r14+0x20],0x0
  421b23:	jne    421b41 <flatcc_json_parser_build_string@@Base+0x91>
  421b25:	mov    DWORD PTR [r14+0x20],0x14
  421b2d:	mov    eax,DWORD PTR [r14+0x8]
  421b31:	mov    ecx,r12d
  421b34:	sub    ecx,eax
  421b36:	add    ecx,0x1
  421b39:	mov    DWORD PTR [r14+0x1c],ecx
  421b3d:	mov    QWORD PTR [r14+0x38],r12
  421b41:	mov    rbx,r12
  421b44:	mov    rdi,QWORD PTR [r14]
  421b47:	call   41c390 <flatcc_builder_start_string@@Base>
  421b4c:	test   eax,eax
  421b4e:	je     421b6c <flatcc_json_parser_build_string@@Base+0xbc>
  421b50:	mov    DWORD PTR [r15],0x0
  421b57:	mov    r12,rbx
  421b5a:	mov    rax,r12
  421b5d:	add    rsp,0x8
  421b61:	pop    rbx
  421b62:	pop    r12
  421b64:	pop    r13
  421b66:	pop    r14
  421b68:	pop    r15
  421b6a:	pop    rbp
  421b6b:	ret    
  421b6c:	mov    rdi,QWORD PTR [r14]
  421b6f:	mov    rdx,rbx
  421b72:	sub    rdx,rbp
  421b75:	mov    rsi,rbp
  421b78:	call   41bd90 <flatcc_builder_append_string@@Base>
  421b7d:	test   rax,rax
  421b80:	je     421b50 <flatcc_json_parser_build_string@@Base+0xa0>
  421b82:	mov    rbp,r12
  421b85:	cmp    rbx,r12
  421b88:	je     421cf8 <flatcc_json_parser_build_string@@Base+0x248>
  421b8e:	lea    rbp,[rsp+0x4]
  421b93:	cmp    BYTE PTR [rbx],0x22
  421b96:	je     421d44 <flatcc_json_parser_build_string@@Base+0x294>
  421b9c:	mov    rdi,r14
  421b9f:	mov    rsi,rbx
  421ba2:	mov    rdx,r12
  421ba5:	mov    rcx,rbp
  421ba8:	call   41fac0 <flatcc_json_parser_string_escape@@Base>
  421bad:	mov    r13,rax
  421bb0:	mov    rdi,QWORD PTR [r14]
  421bb3:	movsx  rdx,BYTE PTR [rsp+0x4]
  421bb9:	lea    rsi,[rsp+0x5]
  421bbe:	call   41bd90 <flatcc_builder_append_string@@Base>
  421bc3:	test   rax,rax
  421bc6:	je     421d49 <flatcc_json_parser_build_string@@Base+0x299>
  421bcc:	cmp    r13,r12
  421bcf:	je     421ca8 <flatcc_json_parser_build_string@@Base+0x1f8>
  421bd5:	mov    rbx,r13
  421bd8:	nop    DWORD PTR [rax+rax*1+0x0]
  421be0:	movzx  eax,BYTE PTR [rbx]
  421be3:	cmp    al,0x20
  421be5:	jb     421cd0 <flatcc_json_parser_build_string@@Base+0x220>
  421beb:	cmp    al,0x22
  421bed:	je     421c01 <flatcc_json_parser_build_string@@Base+0x151>
  421bef:	cmp    al,0x5c
  421bf1:	je     421c01 <flatcc_json_parser_build_string@@Base+0x151>
  421bf3:	add    rbx,0x1
  421bf7:	cmp    r12,rbx
  421bfa:	jne    421be0 <flatcc_json_parser_build_string@@Base+0x130>
  421bfc:	jmp    421ca8 <flatcc_json_parser_build_string@@Base+0x1f8>
  421c01:	cmp    r12,rbx
  421c04:	je     421cf5 <flatcc_json_parser_build_string@@Base+0x245>
  421c0a:	mov    rdi,QWORD PTR [r14]
  421c0d:	mov    rdx,rbx
  421c10:	sub    rdx,r13
  421c13:	mov    rsi,r13
  421c16:	call   41bd90 <flatcc_builder_append_string@@Base>
  421c1b:	test   rax,rax
  421c1e:	je     421b50 <flatcc_json_parser_build_string@@Base+0xa0>
  421c24:	cmp    r12,rbx
  421c27:	jne    421b93 <flatcc_json_parser_build_string@@Base+0xe3>
  421c2d:	jmp    421cf5 <flatcc_json_parser_build_string@@Base+0x245>
  421c32:	mov    DWORD PTR [r14+0x20],0x10
  421c3a:	mov    eax,DWORD PTR [r14+0x8]
  421c3e:	mov    ecx,esi
  421c40:	sub    ecx,eax
  421c42:	add    ecx,0x1
  421c45:	mov    DWORD PTR [r14+0x1c],ecx
  421c49:	mov    QWORD PTR [r14+0x38],rsi
  421c4d:	mov    rbp,r12
  421c50:	cmp    DWORD PTR [r14+0x20],0x0
  421c55:	jne    421b41 <flatcc_json_parser_build_string@@Base+0x91>
  421c5b:	jmp    421b25 <flatcc_json_parser_build_string@@Base+0x75>
  421c60:	cmp    DWORD PTR [r14+0x20],0x0
  421c65:	jne    421c9d <flatcc_json_parser_build_string@@Base+0x1ed>
  421c67:	mov    DWORD PTR [r14+0x20],0x11
  421c6f:	mov    eax,DWORD PTR [r14+0x8]
  421c73:	mov    ecx,ebx
  421c75:	sub    ecx,eax
  421c77:	add    ecx,0x1
  421c7a:	mov    DWORD PTR [r14+0x1c],ecx
  421c7e:	mov    QWORD PTR [r14+0x38],rbx
  421c82:	jmp    421c9d <flatcc_json_parser_build_string@@Base+0x1ed>
  421c84:	cmp    r12,rbx
  421c87:	je     421c9d <flatcc_json_parser_build_string@@Base+0x1ed>
  421c89:	cmp    al,0x22
  421c8b:	jne    421ca0 <flatcc_json_parser_build_string@@Base+0x1f0>
  421c8d:	mov    rdi,QWORD PTR [r14]
  421c90:	mov    rdx,rbx
  421c93:	sub    rdx,rsi
  421c96:	call   41e630 <flatcc_builder_create_string@@Base>
  421c9b:	jmp    421d03 <flatcc_json_parser_build_string@@Base+0x253>
  421c9d:	mov    rbx,r12
  421ca0:	mov    rbp,rsi
  421ca3:	jmp    421b44 <flatcc_json_parser_build_string@@Base+0x94>
  421ca8:	cmp    DWORD PTR [r14+0x20],0x0
  421cad:	mov    rbp,r12
  421cb0:	jne    421cf8 <flatcc_json_parser_build_string@@Base+0x248>
  421cb2:	mov    DWORD PTR [r14+0x20],0x14
  421cba:	mov    eax,DWORD PTR [r14+0x8]
  421cbe:	mov    ecx,r12d
  421cc1:	sub    ecx,eax
  421cc3:	add    ecx,0x1
  421cc6:	mov    DWORD PTR [r14+0x1c],ecx
  421cca:	mov    QWORD PTR [r14+0x38],r12
  421cce:	jmp    421cf5 <flatcc_json_parser_build_string@@Base+0x245>
  421cd0:	cmp    DWORD PTR [r14+0x20],0x0
  421cd5:	mov    rbp,r12
  421cd8:	jne    421cf8 <flatcc_json_parser_build_string@@Base+0x248>
  421cda:	mov    DWORD PTR [r14+0x20],0x11
  421ce2:	mov    eax,DWORD PTR [r14+0x8]
  421ce6:	mov    ecx,ebx
  421ce8:	sub    ecx,eax
  421cea:	add    ecx,0x1
  421ced:	mov    DWORD PTR [r14+0x1c],ecx
  421cf1:	mov    QWORD PTR [r14+0x38],rbx
  421cf5:	mov    rbp,r12
  421cf8:	mov    rdi,QWORD PTR [r14]
  421cfb:	call   41e7e0 <flatcc_builder_end_string@@Base>
  421d00:	mov    rbx,rbp
  421d03:	mov    DWORD PTR [r15],eax
  421d06:	cmp    rbx,r12
  421d09:	je     421d19 <flatcc_json_parser_build_string@@Base+0x269>
  421d0b:	cmp    BYTE PTR [rbx],0x22
  421d0e:	jne    421d19 <flatcc_json_parser_build_string@@Base+0x269>
  421d10:	add    rbx,0x1
  421d14:	jmp    421b57 <flatcc_json_parser_build_string@@Base+0xa7>
  421d19:	cmp    DWORD PTR [r14+0x20],0x0
  421d1e:	jne    421b5a <flatcc_json_parser_build_string@@Base+0xaa>
  421d24:	mov    DWORD PTR [r14+0x20],0x14
  421d2c:	mov    eax,DWORD PTR [r14+0x8]
  421d30:	mov    ecx,ebx
  421d32:	sub    ecx,eax
  421d34:	add    ecx,0x1
  421d37:	mov    DWORD PTR [r14+0x1c],ecx
  421d3b:	mov    QWORD PTR [r14+0x38],rbx
  421d3f:	jmp    421b5a <flatcc_json_parser_build_string@@Base+0xaa>
  421d44:	mov    rbp,rbx
  421d47:	jmp    421cf8 <flatcc_json_parser_build_string@@Base+0x248>
  421d49:	mov    rbx,r13
  421d4c:	jmp    421b50 <flatcc_json_parser_build_string@@Base+0xa0>
  421d51:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421d5b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000421d60 <flatcc_json_parser_prepare_unions@@Base>:
  421d60:	push   r15
  421d62:	push   r14
  421d64:	push   r13
  421d66:	push   r12
  421d68:	push   rbx
  421d69:	mov    r13,r8
  421d6c:	mov    r12,rcx
  421d6f:	mov    r15,rdx
  421d72:	mov    r14,rsi
  421d75:	mov    rbx,rdi
  421d78:	mov    rdi,QWORD PTR [rdi]
  421d7b:	lea    rax,[rcx+rcx*4]
  421d7f:	lea    rsi,[rax*8+0x10]
  421d87:	call   41aa50 <flatcc_builder_enter_user_frame@@Base>
  421d8c:	mov    QWORD PTR [r13+0x0],rax
  421d90:	test   rax,rax
  421d93:	je     421da8 <flatcc_json_parser_prepare_unions@@Base+0x48>
  421d95:	mov    rdi,QWORD PTR [rbx]
  421d98:	mov    rsi,rax
  421d9b:	call   41abe0 <flatcc_builder_get_user_frame_ptr@@Base>
  421da0:	mov    QWORD PTR [rax],r12
  421da3:	mov    r15,r14
  421da6:	jmp    421dc7 <flatcc_json_parser_prepare_unions@@Base+0x67>
  421da8:	cmp    DWORD PTR [rbx+0x20],0x0
  421dac:	jne    421dc7 <flatcc_json_parser_prepare_unions@@Base+0x67>
  421dae:	mov    DWORD PTR [rbx+0x20],0x21
  421db5:	mov    eax,DWORD PTR [rbx+0x8]
  421db8:	mov    ecx,r14d
  421dbb:	sub    ecx,eax
  421dbd:	add    ecx,0x1
  421dc0:	mov    DWORD PTR [rbx+0x1c],ecx
  421dc3:	mov    QWORD PTR [rbx+0x38],r14
  421dc7:	mov    rax,r15
  421dca:	pop    rbx
  421dcb:	pop    r12
  421dcd:	pop    r13
  421dcf:	pop    r14
  421dd1:	pop    r15
  421dd3:	ret    
  421dd4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421dde:	xchg   ax,ax

0000000000421de0 <flatcc_json_parser_finalize_unions@@Base>:
  421de0:	push   r15
  421de2:	push   r14
  421de4:	push   r12
  421de6:	push   rbx
  421de7:	push   rax
  421de8:	mov    r15,rcx
  421deb:	mov    r14,rdx
  421dee:	mov    r12,rsi
  421df1:	mov    rbx,rdi
  421df4:	mov    rdi,QWORD PTR [rdi]
  421df7:	mov    rsi,rcx
  421dfa:	call   41abe0 <flatcc_builder_get_user_frame_ptr@@Base>
  421dff:	cmp    QWORD PTR [rax+0x8],0x0
  421e04:	je     421e27 <flatcc_json_parser_finalize_unions@@Base+0x47>
  421e06:	cmp    DWORD PTR [rbx+0x20],0x0
  421e0a:	jne    421e2a <flatcc_json_parser_finalize_unions@@Base+0x4a>
  421e0c:	mov    DWORD PTR [rbx+0x20],0x1b
  421e13:	mov    eax,DWORD PTR [rbx+0x8]
  421e16:	mov    ecx,r12d
  421e19:	sub    ecx,eax
  421e1b:	add    ecx,0x1
  421e1e:	mov    DWORD PTR [rbx+0x1c],ecx
  421e21:	mov    QWORD PTR [rbx+0x38],r12
  421e25:	jmp    421e2a <flatcc_json_parser_finalize_unions@@Base+0x4a>
  421e27:	mov    r14,r12
  421e2a:	mov    rdi,QWORD PTR [rbx]
  421e2d:	mov    rsi,r15
  421e30:	call   41ab50 <flatcc_builder_exit_user_frame_at@@Base>
  421e35:	mov    rax,r14
  421e38:	add    rsp,0x8
  421e3c:	pop    rbx
  421e3d:	pop    r12
  421e3f:	pop    r14
  421e41:	pop    r15
  421e43:	ret    
  421e44:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421e4e:	xchg   ax,ax

0000000000421e50 <flatcc_json_parser_union@@Base>:
  421e50:	push   rbp
  421e51:	push   r15
  421e53:	push   r14
  421e55:	push   r12
  421e57:	push   rbx
  421e58:	sub    rsp,0x10
  421e5c:	mov    r12d,r8d
  421e5f:	mov    rbp,rcx
  421e62:	mov    r14,rdx
  421e65:	mov    r15,rsi
  421e68:	mov    rbx,rdi
  421e6b:	mov    rdi,QWORD PTR [rdi]
  421e6e:	mov    rsi,r9
  421e71:	call   41abe0 <flatcc_builder_get_user_frame_ptr@@Base>
  421e76:	lea    rcx,[rbp*4+0x0]
  421e7e:	add    rcx,rbp
  421e81:	cmp    QWORD PTR [rax+rcx*8+0x10],0x0
  421e87:	je     421eb1 <flatcc_json_parser_union@@Base+0x61>
  421e89:	cmp    DWORD PTR [rbx+0x20],0x0
  421e8d:	jne    421f40 <flatcc_json_parser_union@@Base+0xf0>
  421e93:	mov    DWORD PTR [rbx+0x20],0x1c
  421e9a:	mov    eax,DWORD PTR [rbx+0x8]
  421e9d:	mov    ecx,r15d
  421ea0:	sub    ecx,eax
  421ea2:	add    ecx,0x1
  421ea5:	mov    DWORD PTR [rbx+0x1c],ecx
  421ea8:	mov    QWORD PTR [rbx+0x38],r15
  421eac:	jmp    421f40 <flatcc_json_parser_union@@Base+0xf0>
  421eb1:	lea    rdx,[rax+0x10]
  421eb5:	cmp    BYTE PTR [rdx+rcx*8+0x14],0x0
  421eba:	je     421f07 <flatcc_json_parser_union@@Base+0xb7>
  421ebc:	mov    cl,BYTE PTR [rdx+rcx*8+0x15]
  421ec0:	mov    BYTE PTR [rsp+0x8],cl
  421ec4:	test   cl,cl
  421ec6:	je     421f3a <flatcc_json_parser_union@@Base+0xea>
  421ec8:	mov    rbp,QWORD PTR [rsp+0x40]
  421ecd:	add    QWORD PTR [rax+0x8],0xffffffffffffffff
  421ed2:	lea    r8,[rsp+0xc]
  421ed7:	movzx  ecx,cl
  421eda:	mov    rdi,rbx
  421edd:	mov    rsi,r15
  421ee0:	mov    rdx,r14
  421ee3:	call   rbp
  421ee5:	cmp    rax,r14
  421ee8:	je     421f40 <flatcc_json_parser_union@@Base+0xf0>
  421eea:	mov    r15,rax
  421eed:	mov    rdi,QWORD PTR [rbx]
  421ef0:	movzx  esi,r12w
  421ef4:	mov    rdx,QWORD PTR [rsp+0x8]
  421ef9:	call   41d630 <flatcc_builder_table_add_union@@Base>
  421efe:	test   eax,eax
  421f00:	jne    421e89 <flatcc_json_parser_union@@Base+0x39>
  421f02:	mov    r14,r15
  421f05:	jmp    421f40 <flatcc_json_parser_union@@Base+0xf0>
  421f07:	add    QWORD PTR [rax+0x8],0x1
  421f0c:	lea    rax,[rax+rcx*8]
  421f10:	add    rax,0x10
  421f14:	mov    esi,DWORD PTR [rbx+0x18]
  421f17:	mov    DWORD PTR [rdx+rcx*8+0x10],esi
  421f1b:	mov    rsi,QWORD PTR [rbx+0x8]
  421f1f:	mov    QWORD PTR [rdx+rcx*8+0x8],rsi
  421f24:	mov    QWORD PTR [rax],r15
  421f27:	mov    rdi,rbx
  421f2a:	mov    rsi,r15
  421f2d:	mov    rdx,r14
  421f30:	call   420120 <flatcc_json_parser_generic_json@@Base>
  421f35:	mov    r14,rax
  421f38:	jmp    421f40 <flatcc_json_parser_union@@Base+0xf0>
  421f3a:	cmp    DWORD PTR [rbx+0x20],0x0
  421f3e:	je     421f50 <flatcc_json_parser_union@@Base+0x100>
  421f40:	mov    rax,r14
  421f43:	add    rsp,0x10
  421f47:	pop    rbx
  421f48:	pop    r12
  421f4a:	pop    r14
  421f4c:	pop    r15
  421f4e:	pop    rbp
  421f4f:	ret    
  421f50:	mov    DWORD PTR [rbx+0x20],0x19
  421f57:	jmp    421e9a <flatcc_json_parser_union@@Base+0x4a>
  421f5c:	nop    DWORD PTR [rax+0x0]

0000000000421f60 <flatcc_json_parser_union_type@@Base>:
  421f60:	push   rbp
  421f61:	push   r15
  421f63:	push   r14
  421f65:	push   r13
  421f67:	push   r12
  421f69:	push   rbx
  421f6a:	sub    rsp,0x18
  421f6e:	mov    ebx,r8d
  421f71:	mov    rbp,rcx
  421f74:	mov    r14,rdx
  421f77:	mov    r12,rsi
  421f7a:	mov    r15,rdi
  421f7d:	mov    rdi,QWORD PTR [rdi]
  421f80:	mov    rsi,r9
  421f83:	call   41abe0 <flatcc_builder_get_user_frame_ptr@@Base>
  421f88:	lea    r13,[rbp*4+0x0]
  421f90:	add    r13,rbp
  421f93:	cmp    BYTE PTR [rax+r13*8+0x24],0x0
  421f99:	je     421fc7 <flatcc_json_parser_union_type@@Base+0x67>
  421f9b:	cmp    DWORD PTR [r15+0x20],0x0
  421fa0:	jne    4221f6 <flatcc_json_parser_union_type@@Base+0x296>
  421fa6:	mov    DWORD PTR [r15+0x20],0x1c
  421fae:	mov    eax,DWORD PTR [r15+0x8]
  421fb2:	mov    ecx,r12d
  421fb5:	sub    ecx,eax
  421fb7:	add    ecx,0x1
  421fba:	mov    DWORD PTR [r15+0x1c],ecx
  421fbe:	mov    QWORD PTR [r15+0x38],r12
  421fc2:	jmp    4221f6 <flatcc_json_parser_union_type@@Base+0x296>
  421fc7:	mov    r11,rax
  421fca:	mov    DWORD PTR [rsp+0xc],ebx
  421fce:	lea    r10,[rax+0x10]
  421fd2:	lea    rax,[rax+r13*8]
  421fd6:	add    rax,0x24
  421fda:	mov    BYTE PTR [rax],0x1
  421fdd:	lea    r8,[r10+r13*8]
  421fe1:	add    r8,0x15
  421fe5:	mov    BYTE PTR [r10+r13*8+0x15],0x0
  421feb:	cmp    r12,r14
  421fee:	je     422122 <flatcc_json_parser_union_type@@Base+0x1c2>
  421ff4:	mov    r9b,BYTE PTR [r12]
  421ff8:	xor    eax,eax
  421ffa:	cmp    r9b,0x2d
  421ffe:	sete   al
  422001:	add    rax,r12
  422004:	xor    edx,edx
  422006:	cmp    rax,r14
  422009:	je     42204d <flatcc_json_parser_union_type@@Base+0xed>
  42200b:	nop    DWORD PTR [rax+rax*1+0x0]
  422010:	movsx  rdi,BYTE PTR [rax]
  422014:	mov    ecx,edi
  422016:	add    cl,0xd0
  422019:	cmp    cl,0x9
  42201c:	ja     42208d <flatcc_json_parser_union_type@@Base+0x12d>
  42201e:	lea    rcx,[rdx+rdx*4]
  422022:	lea    rdi,[rdi+rcx*2]
  422026:	add    rdi,0xffffffffffffffd0
  42202a:	cmp    rdx,rdi
  42202d:	ja     422099 <flatcc_json_parser_union_type@@Base+0x139>
  42202f:	add    rax,0x1
  422033:	mov    rdx,rdi
  422036:	cmp    r14,rax
  422039:	jne    422010 <flatcc_json_parser_union_type@@Base+0xb0>
  42203b:	xor    ecx,ecx
  42203d:	mov    rax,r14
  422040:	mov    rdx,rdi
  422043:	cmp    rax,r12
  422046:	jne    42205b <flatcc_json_parser_union_type@@Base+0xfb>
  422048:	jmp    422122 <flatcc_json_parser_union_type@@Base+0x1c2>
  42204d:	mov    rax,r14
  422050:	xor    ecx,ecx
  422052:	cmp    rax,r12
  422055:	je     422122 <flatcc_json_parser_union_type@@Base+0x1c2>
  42205b:	test   cl,cl
  42205d:	je     4220c0 <flatcc_json_parser_union_type@@Base+0x160>
  42205f:	mov    cl,BYTE PTR [rax]
  422061:	add    cl,0xd2
  422064:	cmp    cl,0x37
  422067:	ja     4220c0 <flatcc_json_parser_union_type@@Base+0x160>
  422069:	movzx  ecx,cl
  42206c:	movabs rdi,0x80000000800001
  422076:	bt     rdi,rcx
  42207a:	jae    4220c0 <flatcc_json_parser_union_type@@Base+0x160>
  42207c:	cmp    DWORD PTR [r15+0x20],0x0
  422081:	jne    4220bb <flatcc_json_parser_union_type@@Base+0x15b>
  422083:	mov    DWORD PTR [r15+0x20],0xc
  42208b:	jmp    4220a8 <flatcc_json_parser_union_type@@Base+0x148>
  42208d:	mov    cl,0x1
  42208f:	cmp    rax,r12
  422092:	jne    42205b <flatcc_json_parser_union_type@@Base+0xfb>
  422094:	jmp    422122 <flatcc_json_parser_union_type@@Base+0x1c2>
  422099:	cmp    DWORD PTR [r15+0x20],0x0
  42209e:	jne    4220bb <flatcc_json_parser_union_type@@Base+0x15b>
  4220a0:	mov    DWORD PTR [r15+0x20],0x8
  4220a8:	mov    ecx,DWORD PTR [r15+0x8]
  4220ac:	mov    edx,eax
  4220ae:	sub    edx,ecx
  4220b0:	add    edx,0x1
  4220b3:	mov    DWORD PTR [r15+0x1c],edx
  4220b7:	mov    QWORD PTR [r15+0x38],rax
  4220bb:	xor    edx,edx
  4220bd:	mov    rax,r14
  4220c0:	cmp    rax,r12
  4220c3:	je     422122 <flatcc_json_parser_union_type@@Base+0x1c2>
  4220c5:	cmp    r9b,0x2d
  4220c9:	jne    4220df <flatcc_json_parser_union_type@@Base+0x17f>
  4220cb:	cmp    DWORD PTR [r15+0x20],0x0
  4220d0:	mov    rbp,r14
  4220d3:	jne    42211d <flatcc_json_parser_union_type@@Base+0x1bd>
  4220d5:	mov    DWORD PTR [r15+0x20],0x8
  4220dd:	jmp    4220fa <flatcc_json_parser_union_type@@Base+0x19a>
  4220df:	cmp    rdx,0x100
  4220e6:	jb     422117 <flatcc_json_parser_union_type@@Base+0x1b7>
  4220e8:	cmp    DWORD PTR [r15+0x20],0x0
  4220ed:	mov    rbp,r14
  4220f0:	jne    42211d <flatcc_json_parser_union_type@@Base+0x1bd>
  4220f2:	mov    DWORD PTR [r15+0x20],0x7
  4220fa:	mov    ecx,DWORD PTR [r15+0x8]
  4220fe:	mov    edx,eax
  422100:	sub    edx,ecx
  422102:	add    edx,0x1
  422105:	mov    DWORD PTR [r15+0x1c],edx
  422109:	mov    QWORD PTR [r15+0x38],rax
  42210d:	mov    rbp,r14
  422110:	cmp    rbp,r12
  422113:	jne    42214a <flatcc_json_parser_union_type@@Base+0x1ea>
  422115:	jmp    422122 <flatcc_json_parser_union_type@@Base+0x1c2>
  422117:	mov    BYTE PTR [r8],dl
  42211a:	mov    rbp,rax
  42211d:	cmp    rbp,r12
  422120:	jne    42214a <flatcc_json_parser_union_type@@Base+0x1ea>
  422122:	mov    rcx,QWORD PTR [rsp+0x50]
  422127:	mov    rdi,r15
  42212a:	mov    rsi,r12
  42212d:	mov    rdx,r14
  422130:	mov    rbx,r8
  422133:	mov    rbp,r10
  422136:	mov    r12,r11
  422139:	call   422230 <flatcc_json_parser_union_type@@Base+0x2d0>
  42213e:	mov    r11,r12
  422141:	mov    r10,rbp
  422144:	mov    r8,rbx
  422147:	mov    rbp,rax
  42214a:	mov    rsi,QWORD PTR [r10+r13*8]
  42214e:	test   rsi,rsi
  422151:	je     4221e0 <flatcc_json_parser_union_type@@Base+0x280>
  422157:	mov    rax,QWORD PTR [r11+0x8]
  42215b:	test   rax,rax
  42215e:	je     422208 <flatcc_json_parser_union_type@@Base+0x2a8>
  422164:	mov    r9,QWORD PTR [rsp+0x58]
  422169:	add    rax,0xffffffffffffffff
  42216d:	mov    QWORD PTR [r11+0x8],rax
  422171:	mov    r12d,DWORD PTR [r15+0x18]
  422175:	mov    rbx,QWORD PTR [r15+0x8]
  422179:	mov    eax,DWORD PTR [r10+r13*8+0x10]
  42217e:	mov    DWORD PTR [r15+0x18],eax
  422182:	mov    rax,QWORD PTR [r10+r13*8+0x8]
  422187:	mov    QWORD PTR [r15+0x8],rax
  42218b:	movzx  ecx,BYTE PTR [r8]
  42218f:	mov    BYTE PTR [rsp+0x10],cl
  422193:	lea    r8,[rsp+0x14]
  422198:	mov    rdi,r15
  42219b:	mov    rdx,r14
  42219e:	call   r9
  4221a1:	cmp    rax,r14
  4221a4:	je     4221f6 <flatcc_json_parser_union_type@@Base+0x296>
  4221a6:	mov    rdi,QWORD PTR [r15]
  4221a9:	movzx  esi,WORD PTR [rsp+0xc]
  4221ae:	mov    rdx,QWORD PTR [rsp+0x10]
  4221b3:	call   41d630 <flatcc_builder_table_add_union@@Base>
  4221b8:	test   eax,eax
  4221ba:	je     4221eb <flatcc_json_parser_union_type@@Base+0x28b>
  4221bc:	cmp    DWORD PTR [r15+0x20],0x0
  4221c1:	jne    4221f6 <flatcc_json_parser_union_type@@Base+0x296>
  4221c3:	mov    DWORD PTR [r15+0x20],0x1c
  4221cb:	mov    eax,DWORD PTR [r15+0x8]
  4221cf:	mov    ecx,ebp
  4221d1:	sub    ecx,eax
  4221d3:	add    ecx,0x1
  4221d6:	mov    DWORD PTR [r15+0x1c],ecx
  4221da:	mov    QWORD PTR [r15+0x38],rbp
  4221de:	jmp    4221f6 <flatcc_json_parser_union_type@@Base+0x296>
  4221e0:	cmp    BYTE PTR [r8],0x1
  4221e4:	sbb    QWORD PTR [r11+0x8],0xffffffffffffffff
  4221e9:	jmp    4221f3 <flatcc_json_parser_union_type@@Base+0x293>
  4221eb:	mov    DWORD PTR [r15+0x18],r12d
  4221ef:	mov    QWORD PTR [r15+0x8],rbx
  4221f3:	mov    r14,rbp
  4221f6:	mov    rax,r14
  4221f9:	add    rsp,0x18
  4221fd:	pop    rbx
  4221fe:	pop    r12
  422200:	pop    r13
  422202:	pop    r14
  422204:	pop    r15
  422206:	pop    rbp
  422207:	ret    
  422208:	lea    rdi,[rip+0x4ff4]        # 427203 <flatcc_builder_padding_base@@Base+0x2373>
  42220f:	lea    rsi,[rip+0x4ffc]        # 427212 <flatcc_builder_padding_base@@Base+0x2382>
  422216:	lea    rcx,[rip+0x5059]        # 427276 <flatcc_builder_padding_base@@Base+0x23e6>
  42221d:	mov    edx,0x3c5
  422222:	call   404090 <__assert_fail@plt>
  422227:	nop    WORD PTR [rax+rax*1+0x0]
  422230:	push   rbp
  422231:	push   r15
  422233:	push   r14
  422235:	push   r13
  422237:	push   r12
  422239:	push   rbx
  42223a:	sub    rsp,0x38
  42223e:	mov    rbx,r8
  422241:	mov    rbp,rcx
  422244:	mov    r13,rdx
  422247:	mov    r14,rdi
  42224a:	mov    BYTE PTR [r8],0x0
  42224e:	cmp    rsi,rdx
  422251:	je     4222a4 <flatcc_json_parser_union_type@@Base+0x344>
  422253:	mov    al,BYTE PTR [rsi]
  422255:	cmp    al,0x2e
  422257:	je     42226b <flatcc_json_parser_union_type@@Base+0x30b>
  422259:	cmp    al,0x22
  42225b:	jne    42229c <flatcc_json_parser_union_type@@Base+0x33c>
  42225d:	add    rsi,0x1
  422261:	mov    DWORD PTR [r14+0x14],0x0
  422269:	jmp    4222a4 <flatcc_json_parser_union_type@@Base+0x344>
  42226b:	cmp    DWORD PTR [r14+0x20],0x0
  422270:	mov    r15,r13
  422273:	jne    4222a7 <flatcc_json_parser_union_type@@Base+0x347>
  422275:	mov    DWORD PTR [r14+0x20],0x5
  42227d:	mov    eax,DWORD PTR [r14+0x8]
  422281:	mov    ecx,esi
  422283:	sub    ecx,eax
  422285:	add    ecx,0x1
  422288:	mov    DWORD PTR [r14+0x1c],ecx
  42228c:	mov    QWORD PTR [r14+0x38],rsi
  422290:	mov    r15,r13
  422293:	cmp    DWORD PTR [r14+0x14],0x0
  422298:	jne    4222e8 <flatcc_json_parser_union_type@@Base+0x388>
  42229a:	jmp    4222ae <flatcc_json_parser_union_type@@Base+0x34e>
  42229c:	mov    DWORD PTR [r14+0x14],0x1
  4222a4:	mov    r15,rsi
  4222a7:	cmp    DWORD PTR [r14+0x14],0x0
  4222ac:	jne    4222e8 <flatcc_json_parser_union_type@@Base+0x388>
  4222ae:	mov    rax,r13
  4222b1:	sub    rax,r15
  4222b4:	cmp    rax,0x2
  4222b8:	jl     4222d7 <flatcc_json_parser_union_type@@Base+0x377>
  4222ba:	cmp    BYTE PTR [r15],0x20
  4222be:	jg     4222e8 <flatcc_json_parser_union_type@@Base+0x388>
  4222c0:	jne    4222d7 <flatcc_json_parser_union_type@@Base+0x377>
  4222c2:	cmp    BYTE PTR [r15+0x1],0x20
  4222c7:	jle    4222d7 <flatcc_json_parser_union_type@@Base+0x377>
  4222c9:	add    r15,0x1
  4222cd:	cmp    r15,r13
  4222d0:	jne    4222f1 <flatcc_json_parser_union_type@@Base+0x391>
  4222d2:	jmp    4223cf <flatcc_json_parser_union_type@@Base+0x46f>
  4222d7:	mov    rdi,r14
  4222da:	mov    rsi,r15
  4222dd:	mov    rdx,r13
  4222e0:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  4222e5:	mov    r15,rax
  4222e8:	cmp    r15,r13
  4222eb:	je     4223cf <flatcc_json_parser_union_type@@Base+0x46f>
  4222f1:	lea    rcx,[rbp+0x8]
  4222f5:	xor    edx,edx
  4222f7:	lea    r12,[rsp+0x10]
  4222fc:	mov    QWORD PTR [rsp+0x28],rbx
  422301:	mov    QWORD PTR [rsp+0x20],rbp
  422306:	mov    QWORD PTR [rsp+0x18],rcx
  42230b:	mov    DWORD PTR [rsp+0xc],edx
  42230f:	mov    rbx,QWORD PTR [rbp+0x0]
  422313:	mov    rbp,rcx
  422316:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422320:	mov    rdi,r14
  422323:	mov    rsi,r15
  422326:	mov    rdx,r13
  422329:	lea    rcx,[rsp+0x14]
  42232e:	lea    r8,[rsp+0x30]
  422333:	mov    r9,r12
  422336:	call   rbx
  422338:	cmp    rax,r13
  42233b:	je     4223cf <flatcc_json_parser_union_type@@Base+0x46f>
  422341:	cmp    rax,r15
  422344:	jne    422360 <flatcc_json_parser_union_type@@Base+0x400>
  422346:	mov    rbx,QWORD PTR [rbp+0x0]
  42234a:	add    rbp,0x8
  42234e:	test   rbx,rbx
  422351:	jne    422320 <flatcc_json_parser_union_type@@Base+0x3c0>
  422353:	jmp    4223ac <flatcc_json_parser_union_type@@Base+0x44c>
  422355:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42235f:	nop
  422360:	mov    edx,DWORD PTR [rsp+0xc]
  422364:	test   edx,edx
  422366:	je     422373 <flatcc_json_parser_union_type@@Base+0x413>
  422368:	cmp    DWORD PTR [r14+0x14],0x0
  42236d:	jne    422403 <flatcc_json_parser_union_type@@Base+0x4a3>
  422373:	cmp    DWORD PTR [rsp+0x14],0x0
  422378:	jne    4223e1 <flatcc_json_parser_union_type@@Base+0x481>
  42237a:	mov    rcx,QWORD PTR [rsp+0x30]
  42237f:	cmp    rcx,0x100
  422386:	jae    4223f2 <flatcc_json_parser_union_type@@Base+0x492>
  422388:	add    edx,0x1
  42238b:	mov    r15,rax
  42238e:	mov    rbx,QWORD PTR [rsp+0x28]
  422393:	add    BYTE PTR [rbx],cl
  422395:	cmp    DWORD PTR [rsp+0x10],0x0
  42239a:	mov    rbp,QWORD PTR [rsp+0x20]
  42239f:	mov    rcx,QWORD PTR [rsp+0x18]
  4223a4:	jne    42230b <flatcc_json_parser_union_type@@Base+0x3ab>
  4223aa:	jmp    4223d2 <flatcc_json_parser_union_type@@Base+0x472>
  4223ac:	cmp    DWORD PTR [r14+0x20],0x0
  4223b1:	jne    4223cf <flatcc_json_parser_union_type@@Base+0x46f>
  4223b3:	mov    DWORD PTR [r14+0x20],0x17
  4223bb:	mov    eax,DWORD PTR [r14+0x8]
  4223bf:	mov    ecx,r15d
  4223c2:	sub    ecx,eax
  4223c4:	add    ecx,0x1
  4223c7:	mov    DWORD PTR [r14+0x1c],ecx
  4223cb:	mov    QWORD PTR [r14+0x38],r15
  4223cf:	mov    rax,r13
  4223d2:	add    rsp,0x38
  4223d6:	pop    rbx
  4223d7:	pop    r12
  4223d9:	pop    r13
  4223db:	pop    r14
  4223dd:	pop    r15
  4223df:	pop    rbp
  4223e0:	ret    
  4223e1:	cmp    DWORD PTR [r14+0x20],0x0
  4223e6:	jne    4223cf <flatcc_json_parser_union_type@@Base+0x46f>
  4223e8:	mov    DWORD PTR [r14+0x20],0x8
  4223f0:	jmp    422412 <flatcc_json_parser_union_type@@Base+0x4b2>
  4223f2:	cmp    DWORD PTR [r14+0x20],0x0
  4223f7:	jne    4223cf <flatcc_json_parser_union_type@@Base+0x46f>
  4223f9:	mov    DWORD PTR [r14+0x20],0x7
  422401:	jmp    422412 <flatcc_json_parser_union_type@@Base+0x4b2>
  422403:	cmp    DWORD PTR [r14+0x20],0x0
  422408:	jne    4223cf <flatcc_json_parser_union_type@@Base+0x46f>
  42240a:	mov    DWORD PTR [r14+0x20],0xe
  422412:	mov    ecx,DWORD PTR [r14+0x8]
  422416:	mov    edx,eax
  422418:	sub    edx,ecx
  42241a:	add    edx,0x1
  42241d:	mov    DWORD PTR [r14+0x1c],edx
  422421:	mov    QWORD PTR [r14+0x38],rax
  422425:	jmp    4223cf <flatcc_json_parser_union_type@@Base+0x46f>
  422427:	nop    WORD PTR [rax+rax*1+0x0]

0000000000422430 <flatcc_json_parser_union_vector@@Base>:
  422430:	push   rbp
  422431:	push   r15
  422433:	push   r14
  422435:	push   r12
  422437:	push   rbx
  422438:	mov    r12d,r8d
  42243b:	mov    rbp,rcx
  42243e:	mov    r14,rdx
  422441:	mov    r15,rsi
  422444:	mov    rbx,rdi
  422447:	mov    rdi,QWORD PTR [rdi]
  42244a:	mov    rsi,r9
  42244d:	call   41abe0 <flatcc_builder_get_user_frame_ptr@@Base>
  422452:	lea    rdx,[rbp*4+0x0]
  42245a:	add    rdx,rbp
  42245d:	cmp    QWORD PTR [rax+rdx*8+0x10],0x0
  422463:	je     422490 <flatcc_json_parser_union_vector@@Base+0x60>
  422465:	cmp    DWORD PTR [rbx+0x20],0x0
  422469:	jne    422484 <flatcc_json_parser_union_vector@@Base+0x54>
  42246b:	mov    DWORD PTR [rbx+0x20],0x1c
  422472:	mov    eax,DWORD PTR [rbx+0x8]
  422475:	mov    ecx,r15d
  422478:	sub    ecx,eax
  42247a:	add    ecx,0x1
  42247d:	mov    DWORD PTR [rbx+0x1c],ecx
  422480:	mov    QWORD PTR [rbx+0x38],r15
  422484:	mov    rax,r14
  422487:	pop    rbx
  422488:	pop    r12
  42248a:	pop    r14
  42248c:	pop    r15
  42248e:	pop    rbp
  42248f:	ret    
  422490:	lea    rsi,[rax+0x10]
  422494:	cmp    BYTE PTR [rsi+rdx*8+0x14],0x0
  422499:	mov    rcx,QWORD PTR [rax+0x8]
  42249d:	je     4224c8 <flatcc_json_parser_union_vector@@Base+0x98>
  42249f:	add    rcx,0xffffffffffffffff
  4224a3:	mov    QWORD PTR [rax+0x8],rcx
  4224a7:	mov    rcx,QWORD PTR [rsi+rdx*8+0x20]
  4224ac:	mov    r8d,DWORD PTR [rsi+rdx*8+0x18]
  4224b1:	movzx  r9d,r12w
  4224b5:	mov    rdi,rbx
  4224b8:	mov    rsi,r15
  4224bb:	mov    rdx,r14
  4224be:	pop    rbx
  4224bf:	pop    r12
  4224c1:	pop    r14
  4224c3:	pop    r15
  4224c5:	pop    rbp
  4224c6:	jmp    422510 <flatcc_json_parser_union_vector@@Base+0xe0>
  4224c8:	lea    rdi,[rax+rdx*8]
  4224cc:	add    rdi,0x10
  4224d0:	add    rcx,0x1
  4224d4:	mov    QWORD PTR [rax+0x8],rcx
  4224d8:	mov    eax,DWORD PTR [rbx+0x18]
  4224db:	mov    DWORD PTR [rsi+rdx*8+0x10],eax
  4224df:	mov    rax,QWORD PTR [rbx+0x8]
  4224e3:	mov    QWORD PTR [rsi+rdx*8+0x8],rax
  4224e8:	mov    QWORD PTR [rdi],r15
  4224eb:	mov    rdi,rbx
  4224ee:	mov    rsi,r15
  4224f1:	mov    rdx,r14
  4224f4:	pop    rbx
  4224f5:	pop    r12
  4224f7:	pop    r14
  4224f9:	pop    r15
  4224fb:	pop    rbp
  4224fc:	jmp    420120 <flatcc_json_parser_generic_json@@Base>
  422501:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42250b:	nop    DWORD PTR [rax+rax*1+0x0]
  422510:	push   rbp
  422511:	push   r15
  422513:	push   r14
  422515:	push   r13
  422517:	push   r12
  422519:	push   rbx
  42251a:	sub    rsp,0x18
  42251e:	mov    r15d,r9d
  422521:	mov    r13d,r8d
  422524:	mov    r12,rcx
  422527:	mov    r14,rdx
  42252a:	mov    rbp,rsi
  42252d:	mov    rbx,rdi
  422530:	mov    DWORD PTR [rsp+0xc],0x0
  422538:	mov    rdi,QWORD PTR [rdi]
  42253b:	call   41c110 <flatcc_builder_start_offset_vector@@Base>
  422540:	test   eax,eax
  422542:	je     42255a <flatcc_json_parser_union_vector@@Base+0x12a>
  422544:	cmp    DWORD PTR [rbx+0x20],0x0
  422548:	jne    42278b <flatcc_json_parser_union_vector@@Base+0x35b>
  42254e:	mov    DWORD PTR [rbx+0x20],0x21
  422555:	jmp    42277a <flatcc_json_parser_union_vector@@Base+0x34a>
  42255a:	cmp    rbp,r14
  42255d:	je     422590 <flatcc_json_parser_union_vector@@Base+0x160>
  42255f:	cmp    BYTE PTR [rbp+0x0],0x5b
  422563:	jne    422590 <flatcc_json_parser_union_vector@@Base+0x160>
  422565:	lea    rax,[rbp+0x1]
  422569:	mov    rcx,r14
  42256c:	sub    rcx,rax
  42256f:	cmp    rcx,0x2
  422573:	mov    DWORD PTR [rsp+0x8],r15d
  422578:	jl     4225bd <flatcc_json_parser_union_vector@@Base+0x18d>
  42257a:	cmp    BYTE PTR [rax],0x20
  42257d:	jg     4225cb <flatcc_json_parser_union_vector@@Base+0x19b>
  42257f:	jne    4225bd <flatcc_json_parser_union_vector@@Base+0x18d>
  422581:	cmp    BYTE PTR [rbp+0x2],0x20
  422585:	jle    4225bd <flatcc_json_parser_union_vector@@Base+0x18d>
  422587:	add    rbp,0x2
  42258b:	mov    rax,rbp
  42258e:	jmp    4225cb <flatcc_json_parser_union_vector@@Base+0x19b>
  422590:	cmp    DWORD PTR [rbx+0x20],0x0
  422594:	mov    rcx,r14
  422597:	jne    422761 <flatcc_json_parser_union_vector@@Base+0x331>
  42259d:	mov    DWORD PTR [rbx+0x20],0x16
  4225a4:	mov    eax,DWORD PTR [rbx+0x8]
  4225a7:	mov    ecx,ebp
  4225a9:	sub    ecx,eax
  4225ab:	add    ecx,0x1
  4225ae:	mov    DWORD PTR [rbx+0x1c],ecx
  4225b1:	mov    QWORD PTR [rbx+0x38],rbp
  4225b5:	mov    rcx,r14
  4225b8:	jmp    422761 <flatcc_json_parser_union_vector@@Base+0x331>
  4225bd:	mov    rdi,rbx
  4225c0:	mov    rsi,rax
  4225c3:	mov    rdx,r14
  4225c6:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  4225cb:	mov    r15,r14
  4225ce:	cmp    rax,r14
  4225d1:	je     422616 <flatcc_json_parser_union_vector@@Base+0x1e6>
  4225d3:	cmp    BYTE PTR [rax],0x5d
  4225d6:	jne    422613 <flatcc_json_parser_union_vector@@Base+0x1e3>
  4225d8:	lea    rcx,[rax+0x1]
  4225dc:	mov    rdx,r14
  4225df:	sub    rdx,rcx
  4225e2:	cmp    rdx,0x2
  4225e6:	mov    r15d,DWORD PTR [rsp+0x8]
  4225eb:	jl     422750 <flatcc_json_parser_union_vector@@Base+0x320>
  4225f1:	cmp    BYTE PTR [rcx],0x20
  4225f4:	jg     422761 <flatcc_json_parser_union_vector@@Base+0x331>
  4225fa:	jne    422750 <flatcc_json_parser_union_vector@@Base+0x320>
  422600:	cmp    BYTE PTR [rax+0x2],0x20
  422604:	jle    422750 <flatcc_json_parser_union_vector@@Base+0x320>
  42260a:	add    rax,0x2
  42260e:	jmp    42275e <flatcc_json_parser_union_vector@@Base+0x32e>
  422613:	mov    r15,rax
  422616:	test   r13d,r13d
  422619:	je     42272f <flatcc_json_parser_union_vector@@Base+0x2ff>
  42261f:	mov    eax,r13d
  422622:	mov    QWORD PTR [rsp+0x10],rax
  422627:	xor    r13d,r13d
  42262a:	nop    WORD PTR [rax+rax*1+0x0]
  422630:	mov    rdi,QWORD PTR [rbx]
  422633:	mov    rsi,r12
  422636:	call   41abe0 <flatcc_builder_get_user_frame_ptr@@Base>
  42263b:	movzx  ecx,BYTE PTR [rax+r13*1]
  422640:	mov    rdi,rbx
  422643:	mov    rsi,r15
  422646:	mov    rdx,r14
  422649:	lea    r8,[rsp+0xc]
  42264e:	call   QWORD PTR [rsp+0x50]
  422652:	cmp    rax,r14
  422655:	je     42278b <flatcc_json_parser_union_vector@@Base+0x35b>
  42265b:	mov    rbp,rax
  42265e:	mov    rdi,QWORD PTR [rbx]
  422661:	mov    esi,0x1
  422666:	call   41ba10 <flatcc_builder_extend_offset_vector@@Base>
  42266b:	test   rax,rax
  42266e:	je     422544 <flatcc_json_parser_union_vector@@Base+0x114>
  422674:	mov    ecx,DWORD PTR [rsp+0xc]
  422678:	mov    DWORD PTR [rax],ecx
  42267a:	mov    rax,r14
  42267d:	sub    rax,rbp
  422680:	cmp    rax,0x2
  422684:	mov    r15d,DWORD PTR [rsp+0x8]
  422689:	jl     4226a7 <flatcc_json_parser_union_vector@@Base+0x277>
  42268b:	cmp    BYTE PTR [rbp+0x0],0x20
  42268f:	jg     4226b8 <flatcc_json_parser_union_vector@@Base+0x288>
  422691:	jne    4226a7 <flatcc_json_parser_union_vector@@Base+0x277>
  422693:	cmp    BYTE PTR [rbp+0x1],0x20
  422697:	jle    4226a7 <flatcc_json_parser_union_vector@@Base+0x277>
  422699:	add    rbp,0x1
  42269d:	cmp    rbp,r14
  4226a0:	jne    4226c1 <flatcc_json_parser_union_vector@@Base+0x291>
  4226a2:	jmp    42279d <flatcc_json_parser_union_vector@@Base+0x36d>
  4226a7:	mov    rdi,rbx
  4226aa:	mov    rsi,rbp
  4226ad:	mov    rdx,r14
  4226b0:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  4226b5:	mov    rbp,rax
  4226b8:	cmp    rbp,r14
  4226bb:	je     42279d <flatcc_json_parser_union_vector@@Base+0x36d>
  4226c1:	movzx  eax,BYTE PTR [rbp+0x0]
  4226c5:	cmp    al,0x2c
  4226c7:	jne    4227a5 <flatcc_json_parser_union_vector@@Base+0x375>
  4226cd:	lea    r15,[rbp+0x1]
  4226d1:	mov    rax,r14
  4226d4:	sub    rax,r15
  4226d7:	cmp    rax,0x2
  4226db:	jl     4226fc <flatcc_json_parser_union_vector@@Base+0x2cc>
  4226dd:	cmp    BYTE PTR [r15],0x20
  4226e1:	jg     42270d <flatcc_json_parser_union_vector@@Base+0x2dd>
  4226e3:	jne    4226fc <flatcc_json_parser_union_vector@@Base+0x2cc>
  4226e5:	cmp    BYTE PTR [rbp+0x2],0x20
  4226e9:	jle    4226fc <flatcc_json_parser_union_vector@@Base+0x2cc>
  4226eb:	add    rbp,0x2
  4226ef:	mov    r15,rbp
  4226f2:	cmp    r15,r14
  4226f5:	jne    422716 <flatcc_json_parser_union_vector@@Base+0x2e6>
  4226f7:	jmp    4227e6 <flatcc_json_parser_union_vector@@Base+0x3b6>
  4226fc:	mov    rdi,rbx
  4226ff:	mov    rsi,r15
  422702:	mov    rdx,r14
  422705:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  42270a:	mov    r15,rax
  42270d:	cmp    r15,r14
  422710:	je     4227e6 <flatcc_json_parser_union_vector@@Base+0x3b6>
  422716:	cmp    BYTE PTR [r15],0x5d
  42271a:	je     422816 <flatcc_json_parser_union_vector@@Base+0x3e6>
  422720:	add    r13,0x1
  422724:	cmp    QWORD PTR [rsp+0x10],r13
  422729:	jne    422630 <flatcc_json_parser_union_vector@@Base+0x200>
  42272f:	cmp    DWORD PTR [rbx+0x20],0x0
  422733:	jne    42278b <flatcc_json_parser_union_vector@@Base+0x35b>
  422735:	mov    DWORD PTR [rbx+0x20],0x1e
  42273c:	mov    eax,DWORD PTR [rbx+0x8]
  42273f:	mov    ecx,r15d
  422742:	sub    ecx,eax
  422744:	add    ecx,0x1
  422747:	mov    DWORD PTR [rbx+0x1c],ecx
  42274a:	mov    QWORD PTR [rbx+0x38],r15
  42274e:	jmp    42278b <flatcc_json_parser_union_vector@@Base+0x35b>
  422750:	mov    rdi,rbx
  422753:	mov    rsi,rcx
  422756:	mov    rdx,r14
  422759:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  42275e:	mov    rcx,rax
  422761:	mov    rbp,rcx
  422764:	test   r13d,r13d
  422767:	je     42289b <flatcc_json_parser_union_vector@@Base+0x46b>
  42276d:	cmp    DWORD PTR [rbx+0x20],0x0
  422771:	jne    42278b <flatcc_json_parser_union_vector@@Base+0x35b>
  422773:	mov    DWORD PTR [rbx+0x20],0x1e
  42277a:	mov    eax,DWORD PTR [rbx+0x8]
  42277d:	mov    ecx,ebp
  42277f:	sub    ecx,eax
  422781:	add    ecx,0x1
  422784:	mov    DWORD PTR [rbx+0x1c],ecx
  422787:	mov    QWORD PTR [rbx+0x38],rbp
  42278b:	mov    rax,r14
  42278e:	add    rsp,0x18
  422792:	pop    rbx
  422793:	pop    r12
  422795:	pop    r13
  422797:	pop    r14
  422799:	pop    r15
  42279b:	pop    rbp
  42279c:	ret    
  42279d:	mov    rax,r14
  4227a0:	jmp    422886 <flatcc_json_parser_union_vector@@Base+0x456>
  4227a5:	cmp    al,0x5d
  4227a7:	jne    422852 <flatcc_json_parser_union_vector@@Base+0x422>
  4227ad:	lea    rax,[rbp+0x1]
  4227b1:	mov    rcx,r14
  4227b4:	sub    rcx,rax
  4227b7:	cmp    rcx,0x2
  4227bb:	jl     422878 <flatcc_json_parser_union_vector@@Base+0x448>
  4227c1:	cmp    BYTE PTR [rax],0x20
  4227c4:	jg     422886 <flatcc_json_parser_union_vector@@Base+0x456>
  4227ca:	jne    422878 <flatcc_json_parser_union_vector@@Base+0x448>
  4227d0:	cmp    BYTE PTR [rbp+0x2],0x20
  4227d4:	jle    422878 <flatcc_json_parser_union_vector@@Base+0x448>
  4227da:	add    rbp,0x2
  4227de:	mov    rax,rbp
  4227e1:	jmp    422886 <flatcc_json_parser_union_vector@@Base+0x456>
  4227e6:	cmp    DWORD PTR [rbx+0x20],0x0
  4227ea:	mov    rax,r14
  4227ed:	mov    r15d,DWORD PTR [rsp+0x8]
  4227f2:	jne    422886 <flatcc_json_parser_union_vector@@Base+0x456>
  4227f8:	mov    DWORD PTR [rbx+0x20],0x9
  4227ff:	mov    eax,DWORD PTR [rbx+0x8]
  422802:	mov    ecx,r14d
  422805:	sub    ecx,eax
  422807:	add    ecx,0x1
  42280a:	mov    DWORD PTR [rbx+0x1c],ecx
  42280d:	mov    QWORD PTR [rbx+0x38],r14
  422811:	mov    rax,r14
  422814:	jmp    422886 <flatcc_json_parser_union_vector@@Base+0x456>
  422816:	lea    rax,[r15+0x1]
  42281a:	mov    rcx,r14
  42281d:	sub    rcx,rax
  422820:	cmp    rcx,0x2
  422824:	jl     42283d <flatcc_json_parser_union_vector@@Base+0x40d>
  422826:	cmp    BYTE PTR [rax],0x20
  422829:	jg     42284b <flatcc_json_parser_union_vector@@Base+0x41b>
  42282b:	jne    42283d <flatcc_json_parser_union_vector@@Base+0x40d>
  42282d:	cmp    BYTE PTR [r15+0x2],0x20
  422832:	jle    42283d <flatcc_json_parser_union_vector@@Base+0x40d>
  422834:	add    r15,0x2
  422838:	mov    rax,r15
  42283b:	jmp    42284b <flatcc_json_parser_union_vector@@Base+0x41b>
  42283d:	mov    rdi,rbx
  422840:	mov    rsi,rax
  422843:	mov    rdx,r14
  422846:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  42284b:	mov    r15d,DWORD PTR [rsp+0x8]
  422850:	jmp    422886 <flatcc_json_parser_union_vector@@Base+0x456>
  422852:	cmp    DWORD PTR [rbx+0x20],0x0
  422856:	mov    rax,r14
  422859:	jne    422886 <flatcc_json_parser_union_vector@@Base+0x456>
  42285b:	mov    DWORD PTR [rbx+0x20],0x9
  422862:	mov    eax,DWORD PTR [rbx+0x8]
  422865:	mov    ecx,ebp
  422867:	sub    ecx,eax
  422869:	add    ecx,0x1
  42286c:	mov    DWORD PTR [rbx+0x1c],ecx
  42286f:	mov    QWORD PTR [rbx+0x38],rbp
  422873:	mov    rax,r14
  422876:	jmp    422886 <flatcc_json_parser_union_vector@@Base+0x456>
  422878:	mov    rdi,rbx
  42287b:	mov    rsi,rax
  42287e:	mov    rdx,r14
  422881:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  422886:	mov    rcx,QWORD PTR [rsp+0x10]
  42288b:	add    rcx,0xffffffffffffffff
  42288f:	mov    rbp,rax
  422892:	cmp    rcx,r13
  422895:	jne    42276d <flatcc_json_parser_union_vector@@Base+0x33d>
  42289b:	mov    rdi,QWORD PTR [rbx]
  42289e:	mov    rsi,r12
  4228a1:	call   41abe0 <flatcc_builder_get_user_frame_ptr@@Base>
  4228a6:	mov    rdi,QWORD PTR [rbx]
  4228a9:	mov    rsi,rax
  4228ac:	call   41d550 <flatcc_builder_end_offset_vector_for_unions@@Base>
  4228b1:	mov    DWORD PTR [rsp+0xc],eax
  4228b5:	test   eax,eax
  4228b7:	je     422544 <flatcc_json_parser_union_vector@@Base+0x114>
  4228bd:	mov    rdi,QWORD PTR [rbx]
  4228c0:	movzx  esi,r15w
  4228c4:	call   41d720 <flatcc_builder_table_add_offset@@Base>
  4228c9:	test   rax,rax
  4228cc:	je     422544 <flatcc_json_parser_union_vector@@Base+0x114>
  4228d2:	mov    ecx,DWORD PTR [rsp+0xc]
  4228d6:	mov    DWORD PTR [rax],ecx
  4228d8:	mov    r14,rbp
  4228db:	jmp    42278b <flatcc_json_parser_union_vector@@Base+0x35b>

00000000004228e0 <flatcc_json_parser_union_type_vector@@Base>:
  4228e0:	push   rbp
  4228e1:	push   r15
  4228e3:	push   r14
  4228e5:	push   r13
  4228e7:	push   r12
  4228e9:	push   rbx
  4228ea:	sub    rsp,0x48
  4228ee:	mov    r12,r9
  4228f1:	mov    ebx,r8d
  4228f4:	mov    rbp,rcx
  4228f7:	mov    QWORD PTR [rsp+0x18],rdx
  4228fc:	mov    r14,rsi
  4228ff:	mov    r13,rdi
  422902:	mov    rdi,QWORD PTR [rdi]
  422905:	mov    rsi,r9
  422908:	call   41abe0 <flatcc_builder_get_user_frame_ptr@@Base>
  42290d:	lea    rbp,[rbp+rbp*4+0x0]
  422912:	cmp    BYTE PTR [rax+rbp*8+0x24],0x0
  422917:	je     422946 <flatcc_json_parser_union_type_vector@@Base+0x66>
  422919:	cmp    DWORD PTR [r13+0x20],0x0
  42291e:	jne    42293c <flatcc_json_parser_union_type_vector@@Base+0x5c>
  422920:	mov    DWORD PTR [r13+0x20],0x1c
  422928:	mov    eax,DWORD PTR [r13+0x8]
  42292c:	mov    ecx,r14d
  42292f:	sub    ecx,eax
  422931:	add    ecx,0x1
  422934:	mov    DWORD PTR [r13+0x1c],ecx
  422938:	mov    QWORD PTR [r13+0x38],r14
  42293c:	mov    r15,QWORD PTR [rsp+0x18]
  422941:	jmp    422f29 <flatcc_json_parser_union_type_vector@@Base+0x649>
  422946:	mov    r15,rax
  422949:	lea    rax,[rax+rbp*8]
  42294d:	add    rax,0x24
  422951:	mov    BYTE PTR [rax],0x1
  422954:	mov    QWORD PTR [rsp+0x20],r13
  422959:	mov    rdi,QWORD PTR [r13+0x0]
  42295d:	mov    esi,0x1
  422962:	mov    edx,0x1
  422967:	mov    ecx,0xffffffff
  42296c:	call   41c090 <flatcc_builder_start_vector@@Base>
  422971:	test   eax,eax
  422973:	je     422992 <flatcc_json_parser_union_type_vector@@Base+0xb2>
  422975:	mov    r15,QWORD PTR [rsp+0x18]
  42297a:	mov    rsi,r14
  42297d:	mov    r13,QWORD PTR [rsp+0x20]
  422982:	cmp    DWORD PTR [r13+0x20],0x0
  422987:	jne    422f29 <flatcc_json_parser_union_type_vector@@Base+0x649>
  42298d:	jmp    422f0e <flatcc_json_parser_union_type_vector@@Base+0x62e>
  422992:	mov    QWORD PTR [rsp+0x40],r15
  422997:	cmp    r14,QWORD PTR [rsp+0x18]
  42299c:	mov    QWORD PTR [rsp+0x28],rbp
  4229a1:	mov    QWORD PTR [rsp+0x38],r12
  4229a6:	mov    DWORD PTR [rsp+0x34],ebx
  4229aa:	je     4229d0 <flatcc_json_parser_union_type_vector@@Base+0xf0>
  4229ac:	cmp    BYTE PTR [r14],0x5b
  4229b0:	jne    4229d0 <flatcc_json_parser_union_type_vector@@Base+0xf0>
  4229b2:	lea    rax,[r14+0x1]
  4229b6:	mov    rcx,QWORD PTR [rsp+0x18]
  4229bb:	sub    rcx,rax
  4229be:	cmp    rcx,0x2
  4229c2:	jl     422a28 <flatcc_json_parser_union_type_vector@@Base+0x148>
  4229c4:	cmp    BYTE PTR [rax],0x20
  4229c7:	jle    422a11 <flatcc_json_parser_union_type_vector@@Base+0x131>
  4229c9:	mov    r13,QWORD PTR [rsp+0x18]
  4229ce:	jmp    422a3d <flatcc_json_parser_union_type_vector@@Base+0x15d>
  4229d0:	mov    r13,QWORD PTR [rsp+0x20]
  4229d5:	cmp    DWORD PTR [r13+0x20],0x0
  4229da:	mov    r15,QWORD PTR [rsp+0x18]
  4229df:	mov    rdx,r15
  4229e2:	mov    rbp,QWORD PTR [rsp+0x28]
  4229e7:	jne    422de0 <flatcc_json_parser_union_type_vector@@Base+0x500>
  4229ed:	mov    DWORD PTR [r13+0x20],0x16
  4229f5:	mov    eax,DWORD PTR [r13+0x8]
  4229f9:	mov    ecx,r14d
  4229fc:	sub    ecx,eax
  4229fe:	add    ecx,0x1
  422a01:	mov    DWORD PTR [r13+0x1c],ecx
  422a05:	mov    QWORD PTR [r13+0x38],r14
  422a09:	mov    rdx,r15
  422a0c:	jmp    422de0 <flatcc_json_parser_union_type_vector@@Base+0x500>
  422a11:	jne    422a28 <flatcc_json_parser_union_type_vector@@Base+0x148>
  422a13:	cmp    BYTE PTR [r14+0x2],0x20
  422a18:	jle    422a28 <flatcc_json_parser_union_type_vector@@Base+0x148>
  422a1a:	add    r14,0x2
  422a1e:	mov    rax,r14
  422a21:	mov    r13,QWORD PTR [rsp+0x18]
  422a26:	jmp    422a3d <flatcc_json_parser_union_type_vector@@Base+0x15d>
  422a28:	mov    rdi,QWORD PTR [rsp+0x20]
  422a2d:	mov    rsi,rax
  422a30:	mov    r13,QWORD PTR [rsp+0x18]
  422a35:	mov    rdx,r13
  422a38:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  422a3d:	mov    rcx,r13
  422a40:	cmp    rax,r13
  422a43:	mov    r13,QWORD PTR [rsp+0x20]
  422a48:	je     422a92 <flatcc_json_parser_union_type_vector@@Base+0x1b2>
  422a4a:	cmp    BYTE PTR [rax],0x5d
  422a4d:	jne    422a8f <flatcc_json_parser_union_type_vector@@Base+0x1af>
  422a4f:	lea    rdx,[rax+0x1]
  422a53:	mov    r15,QWORD PTR [rsp+0x18]
  422a58:	mov    rcx,r15
  422a5b:	sub    rcx,rdx
  422a5e:	cmp    rcx,0x2
  422a62:	mov    rbp,QWORD PTR [rsp+0x28]
  422a67:	jl     422dcf <flatcc_json_parser_union_type_vector@@Base+0x4ef>
  422a6d:	cmp    BYTE PTR [rdx],0x20
  422a70:	jg     422de0 <flatcc_json_parser_union_type_vector@@Base+0x500>
  422a76:	jne    422dcf <flatcc_json_parser_union_type_vector@@Base+0x4ef>
  422a7c:	cmp    BYTE PTR [rax+0x2],0x20
  422a80:	jle    422dcf <flatcc_json_parser_union_type_vector@@Base+0x4ef>
  422a86:	add    rax,0x2
  422a8a:	jmp    422ddd <flatcc_json_parser_union_type_vector@@Base+0x4fd>
  422a8f:	mov    rcx,rax
  422a92:	mov    rbp,rcx
  422a95:	mov    rdi,QWORD PTR [r13+0x0]
  422a99:	mov    esi,0x1
  422a9e:	call   41b720 <flatcc_builder_extend_vector@@Base>
  422aa3:	test   rax,rax
  422aa6:	je     422d38 <flatcc_json_parser_union_type_vector@@Base+0x458>
  422aac:	mov    rbx,rax
  422aaf:	mov    r14,QWORD PTR [rsp+0x90]
  422ab7:	mov    r15,QWORD PTR [rsp+0x18]
  422abc:	mov    rsi,rbp
  422abf:	mov    BYTE PTR [rsp+0x17],0x0
  422ac4:	cmp    rsi,r15
  422ac7:	je     422bfa <flatcc_json_parser_union_type_vector@@Base+0x31a>
  422acd:	mov    al,BYTE PTR [rsi]
  422acf:	xor    r12d,r12d
  422ad2:	cmp    al,0x2d
  422ad4:	sete   r12b
  422ad8:	add    r12,rsi
  422adb:	xor    ebp,ebp
  422add:	cmp    r12,r15
  422ae0:	je     422b35 <flatcc_json_parser_union_type_vector@@Base+0x255>
  422ae2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422aec:	nop    DWORD PTR [rax+0x0]
  422af0:	movsx  rcx,BYTE PTR [r12]
  422af5:	mov    edx,ecx
  422af7:	add    dl,0xd0
  422afa:	cmp    dl,0x9
  422afd:	ja     422b41 <flatcc_json_parser_union_type_vector@@Base+0x261>
  422aff:	lea    rdx,[rbp*4+0x0]
  422b07:	add    rdx,rbp
  422b0a:	lea    rdx,[rcx+rdx*2]
  422b0e:	add    rdx,0xffffffffffffffd0
  422b12:	cmp    rbp,rdx
  422b15:	ja     422b7c <flatcc_json_parser_union_type_vector@@Base+0x29c>
  422b17:	add    r12,0x1
  422b1b:	mov    rbp,rdx
  422b1e:	cmp    r15,r12
  422b21:	jne    422af0 <flatcc_json_parser_union_type_vector@@Base+0x210>
  422b23:	xor    ecx,ecx
  422b25:	mov    r12,r15
  422b28:	mov    rbp,rdx
  422b2b:	cmp    r12,rsi
  422b2e:	jne    422b48 <flatcc_json_parser_union_type_vector@@Base+0x268>
  422b30:	jmp    422bbe <flatcc_json_parser_union_type_vector@@Base+0x2de>
  422b35:	mov    r12,r15
  422b38:	xor    ecx,ecx
  422b3a:	cmp    r12,rsi
  422b3d:	jne    422b48 <flatcc_json_parser_union_type_vector@@Base+0x268>
  422b3f:	jmp    422bbe <flatcc_json_parser_union_type_vector@@Base+0x2de>
  422b41:	mov    cl,0x1
  422b43:	cmp    r12,rsi
  422b46:	je     422bbe <flatcc_json_parser_union_type_vector@@Base+0x2de>
  422b48:	test   cl,cl
  422b4a:	je     422ba4 <flatcc_json_parser_union_type_vector@@Base+0x2c4>
  422b4c:	mov    cl,BYTE PTR [r12]
  422b50:	add    cl,0xd2
  422b53:	cmp    cl,0x37
  422b56:	ja     422ba4 <flatcc_json_parser_union_type_vector@@Base+0x2c4>
  422b58:	movzx  ecx,cl
  422b5b:	movabs rdx,0x80000000800001
  422b65:	bt     rdx,rcx
  422b69:	jae    422ba4 <flatcc_json_parser_union_type_vector@@Base+0x2c4>
  422b6b:	cmp    DWORD PTR [r13+0x20],0x0
  422b70:	jne    422b9f <flatcc_json_parser_union_type_vector@@Base+0x2bf>
  422b72:	mov    DWORD PTR [r13+0x20],0xc
  422b7a:	jmp    422b8b <flatcc_json_parser_union_type_vector@@Base+0x2ab>
  422b7c:	cmp    DWORD PTR [r13+0x20],0x0
  422b81:	jne    422b9f <flatcc_json_parser_union_type_vector@@Base+0x2bf>
  422b83:	mov    DWORD PTR [r13+0x20],0x8
  422b8b:	mov    ecx,DWORD PTR [r13+0x8]
  422b8f:	mov    edx,r12d
  422b92:	sub    edx,ecx
  422b94:	add    edx,0x1
  422b97:	mov    DWORD PTR [r13+0x1c],edx
  422b9b:	mov    QWORD PTR [r13+0x38],r12
  422b9f:	xor    ebp,ebp
  422ba1:	mov    r12,r15
  422ba4:	cmp    r12,rsi
  422ba7:	je     422bbe <flatcc_json_parser_union_type_vector@@Base+0x2de>
  422ba9:	cmp    al,0x2d
  422bab:	jne    422bca <flatcc_json_parser_union_type_vector@@Base+0x2ea>
  422bad:	cmp    DWORD PTR [r13+0x20],0x0
  422bb2:	jne    422bfa <flatcc_json_parser_union_type_vector@@Base+0x31a>
  422bb4:	mov    DWORD PTR [r13+0x20],0x8
  422bbc:	jmp    422be6 <flatcc_json_parser_union_type_vector@@Base+0x306>
  422bbe:	xor    ebp,ebp
  422bc0:	mov    r12,rsi
  422bc3:	cmp    rsi,r12
  422bc6:	jne    422c39 <flatcc_json_parser_union_type_vector@@Base+0x359>
  422bc8:	jmp    422c04 <flatcc_json_parser_union_type_vector@@Base+0x324>
  422bca:	cmp    rbp,0x100
  422bd1:	jb     422d25 <flatcc_json_parser_union_type_vector@@Base+0x445>
  422bd7:	cmp    DWORD PTR [r13+0x20],0x0
  422bdc:	jne    422bfa <flatcc_json_parser_union_type_vector@@Base+0x31a>
  422bde:	mov    DWORD PTR [r13+0x20],0x7
  422be6:	mov    eax,DWORD PTR [r13+0x8]
  422bea:	mov    ecx,r12d
  422bed:	sub    ecx,eax
  422bef:	add    ecx,0x1
  422bf2:	mov    DWORD PTR [r13+0x1c],ecx
  422bf6:	mov    QWORD PTR [r13+0x38],r12
  422bfa:	xor    ebp,ebp
  422bfc:	mov    r12,r15
  422bff:	cmp    rsi,r12
  422c02:	jne    422c39 <flatcc_json_parser_union_type_vector@@Base+0x359>
  422c04:	mov    rdi,r13
  422c07:	mov    rbp,rsi
  422c0a:	mov    rdx,r15
  422c0d:	mov    rcx,QWORD PTR [rsp+0x80]
  422c15:	lea    r8,[rsp+0x17]
  422c1a:	call   422230 <flatcc_json_parser_union_type@@Base+0x2d0>
  422c1f:	mov    r12,rax
  422c22:	cmp    rax,rbp
  422c25:	je     422f7a <flatcc_json_parser_union_type_vector@@Base+0x69a>
  422c2b:	cmp    r12,r15
  422c2e:	je     422f7a <flatcc_json_parser_union_type_vector@@Base+0x69a>
  422c34:	mov    bpl,BYTE PTR [rsp+0x17]
  422c39:	movzx  edi,bpl
  422c3d:	call   r14
  422c40:	test   eax,eax
  422c42:	jne    422c56 <flatcc_json_parser_union_type_vector@@Base+0x376>
  422c44:	test   BYTE PTR [r13+0x10],0x1
  422c49:	je     422f86 <flatcc_json_parser_union_type_vector@@Base+0x6a6>
  422c4f:	mov    BYTE PTR [rsp+0x17],0x0
  422c54:	xor    ebp,ebp
  422c56:	mov    BYTE PTR [rbx],bpl
  422c59:	mov    rax,r15
  422c5c:	sub    rax,r12
  422c5f:	cmp    rax,0x2
  422c63:	mov    rbp,QWORD PTR [rsp+0x28]
  422c68:	jl     422c89 <flatcc_json_parser_union_type_vector@@Base+0x3a9>
  422c6a:	cmp    BYTE PTR [r12],0x20
  422c6f:	jg     422c9a <flatcc_json_parser_union_type_vector@@Base+0x3ba>
  422c71:	jne    422c89 <flatcc_json_parser_union_type_vector@@Base+0x3a9>
  422c73:	cmp    BYTE PTR [r12+0x1],0x20
  422c79:	jle    422c89 <flatcc_json_parser_union_type_vector@@Base+0x3a9>
  422c7b:	add    r12,0x1
  422c7f:	cmp    r12,r15
  422c82:	jne    422ca3 <flatcc_json_parser_union_type_vector@@Base+0x3c3>
  422c84:	jmp    422d50 <flatcc_json_parser_union_type_vector@@Base+0x470>
  422c89:	mov    rdi,r13
  422c8c:	mov    rsi,r12
  422c8f:	mov    rdx,r15
  422c92:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  422c97:	mov    r12,rax
  422c9a:	cmp    r12,r15
  422c9d:	je     422d50 <flatcc_json_parser_union_type_vector@@Base+0x470>
  422ca3:	mov    al,BYTE PTR [r12]
  422ca7:	cmp    al,0x2c
  422ca9:	jne    422d58 <flatcc_json_parser_union_type_vector@@Base+0x478>
  422caf:	lea    rax,[r12+0x1]
  422cb4:	mov    rcx,r15
  422cb7:	sub    rcx,rax
  422cba:	cmp    rcx,0x2
  422cbe:	jl     422ce0 <flatcc_json_parser_union_type_vector@@Base+0x400>
  422cc0:	cmp    BYTE PTR [rax],0x20
  422cc3:	jg     422cee <flatcc_json_parser_union_type_vector@@Base+0x40e>
  422cc5:	jne    422ce0 <flatcc_json_parser_union_type_vector@@Base+0x400>
  422cc7:	cmp    BYTE PTR [r12+0x2],0x20
  422ccd:	jle    422ce0 <flatcc_json_parser_union_type_vector@@Base+0x400>
  422ccf:	add    r12,0x2
  422cd3:	mov    rax,r12
  422cd6:	cmp    rax,r15
  422cd9:	jne    422cf7 <flatcc_json_parser_union_type_vector@@Base+0x417>
  422cdb:	jmp    422d89 <flatcc_json_parser_union_type_vector@@Base+0x4a9>
  422ce0:	mov    rdi,r13
  422ce3:	mov    rsi,rax
  422ce6:	mov    rdx,r15
  422ce9:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  422cee:	cmp    rax,r15
  422cf1:	je     422d89 <flatcc_json_parser_union_type_vector@@Base+0x4a9>
  422cf7:	cmp    BYTE PTR [rax],0x5d
  422cfa:	je     422db4 <flatcc_json_parser_union_type_vector@@Base+0x4d4>
  422d00:	mov    rdi,QWORD PTR [r13+0x0]
  422d04:	mov    rbx,rax
  422d07:	mov    esi,0x1
  422d0c:	call   41b720 <flatcc_builder_extend_vector@@Base>
  422d11:	mov    rsi,rbx
  422d14:	mov    rbx,rax
  422d17:	test   rax,rax
  422d1a:	jne    422abf <flatcc_json_parser_union_type_vector@@Base+0x1df>
  422d20:	jmp    422f07 <flatcc_json_parser_union_type_vector@@Base+0x627>
  422d25:	mov    BYTE PTR [rsp+0x17],bpl
  422d2a:	cmp    rsi,r12
  422d2d:	jne    422c39 <flatcc_json_parser_union_type_vector@@Base+0x359>
  422d33:	jmp    422c04 <flatcc_json_parser_union_type_vector@@Base+0x324>
  422d38:	mov    r15,QWORD PTR [rsp+0x18]
  422d3d:	mov    rsi,rbp
  422d40:	cmp    DWORD PTR [r13+0x20],0x0
  422d45:	jne    422f29 <flatcc_json_parser_union_type_vector@@Base+0x649>
  422d4b:	jmp    422f0e <flatcc_json_parser_union_type_vector@@Base+0x62e>
  422d50:	mov    rdx,r15
  422d53:	jmp    422de0 <flatcc_json_parser_union_type_vector@@Base+0x500>
  422d58:	cmp    al,0x5d
  422d5a:	jne    422f48 <flatcc_json_parser_union_type_vector@@Base+0x668>
  422d60:	lea    rdx,[r12+0x1]
  422d65:	mov    rax,r15
  422d68:	sub    rax,rdx
  422d6b:	cmp    rax,0x2
  422d6f:	jl     422dcf <flatcc_json_parser_union_type_vector@@Base+0x4ef>
  422d71:	cmp    BYTE PTR [rdx],0x20
  422d74:	jg     422de0 <flatcc_json_parser_union_type_vector@@Base+0x500>
  422d76:	jne    422dcf <flatcc_json_parser_union_type_vector@@Base+0x4ef>
  422d78:	cmp    BYTE PTR [r12+0x2],0x20
  422d7e:	jle    422dcf <flatcc_json_parser_union_type_vector@@Base+0x4ef>
  422d80:	add    r12,0x2
  422d84:	mov    rdx,r12
  422d87:	jmp    422de0 <flatcc_json_parser_union_type_vector@@Base+0x500>
  422d89:	cmp    DWORD PTR [r13+0x20],0x0
  422d8e:	mov    rdx,r15
  422d91:	jne    422de0 <flatcc_json_parser_union_type_vector@@Base+0x500>
  422d93:	mov    DWORD PTR [r13+0x20],0x9
  422d9b:	mov    eax,DWORD PTR [r13+0x8]
  422d9f:	mov    ecx,r15d
  422da2:	sub    ecx,eax
  422da4:	add    ecx,0x1
  422da7:	mov    DWORD PTR [r13+0x1c],ecx
  422dab:	mov    QWORD PTR [r13+0x38],r15
  422daf:	mov    rdx,r15
  422db2:	jmp    422de0 <flatcc_json_parser_union_type_vector@@Base+0x500>
  422db4:	lea    rdx,[rax+0x1]
  422db8:	mov    rcx,r15
  422dbb:	sub    rcx,rdx
  422dbe:	cmp    rcx,0x2
  422dc2:	jl     422dcf <flatcc_json_parser_union_type_vector@@Base+0x4ef>
  422dc4:	cmp    BYTE PTR [rdx],0x20
  422dc7:	jg     422de0 <flatcc_json_parser_union_type_vector@@Base+0x500>
  422dc9:	je     422a7c <flatcc_json_parser_union_type_vector@@Base+0x19c>
  422dcf:	mov    rdi,r13
  422dd2:	mov    rsi,rdx
  422dd5:	mov    rdx,r15
  422dd8:	call   41f9d0 <flatcc_json_parser_space_ext@@Base>
  422ddd:	mov    rdx,rax
  422de0:	mov    QWORD PTR [rsp+0x18],rdx
  422de5:	mov    rbx,QWORD PTR [rsp+0x40]
  422dea:	add    rbx,0x10
  422dee:	mov    rdi,QWORD PTR [r13+0x0]
  422df2:	call   41d2f0 <flatcc_builder_vector_count@@Base>
  422df7:	mov    r12,rax
  422dfa:	mov    DWORD PTR [rbx+rbp*8+0x18],r12d
  422dff:	mov    rbx,r13
  422e02:	mov    r13d,r12d
  422e05:	mov    rdi,QWORD PTR [rbx]
  422e08:	mov    rsi,r13
  422e0b:	call   41aa50 <flatcc_builder_enter_user_frame@@Base>
  422e10:	mov    r14,rax
  422e13:	mov    rdi,QWORD PTR [rbx]
  422e16:	mov    rsi,rax
  422e19:	call   41abe0 <flatcc_builder_get_user_frame_ptr@@Base>
  422e1e:	mov    rbp,rax
  422e21:	mov    rdi,QWORD PTR [rbx]
  422e24:	call   41d300 <flatcc_builder_vector_edit@@Base>
  422e29:	mov    rdi,rbp
  422e2c:	mov    rsi,rax
  422e2f:	mov    rdx,r13
  422e32:	call   404100 <memcpy@plt>
  422e37:	mov    rdi,QWORD PTR [rbx]
  422e3a:	call   41d220 <flatcc_builder_end_vector@@Base>
  422e3f:	test   eax,eax
  422e41:	je     422eff <flatcc_json_parser_union_type_vector@@Base+0x61f>
  422e47:	mov    r13d,eax
  422e4a:	mov    rdi,QWORD PTR [rbx]
  422e4d:	movzx  ebp,WORD PTR [rsp+0x34]
  422e52:	lea    esi,[rbp-0x1]
  422e55:	call   41d720 <flatcc_builder_table_add_offset@@Base>
  422e5a:	test   rax,rax
  422e5d:	je     422eff <flatcc_json_parser_union_type_vector@@Base+0x61f>
  422e63:	mov    DWORD PTR [rax],r13d
  422e66:	mov    rdi,QWORD PTR [rbx]
  422e69:	mov    rsi,QWORD PTR [rsp+0x38]
  422e6e:	call   41abe0 <flatcc_builder_get_user_frame_ptr@@Base>
  422e73:	mov    rcx,QWORD PTR [rsp+0x28]
  422e78:	mov    QWORD PTR [rax+rcx*8+0x30],r14
  422e7d:	mov    rsi,QWORD PTR [rax+rcx*8+0x10]
  422e82:	mov    rcx,QWORD PTR [rax+0x8]
  422e86:	test   rsi,rsi
  422e89:	je     422f3b <flatcc_json_parser_union_type_vector@@Base+0x65b>
  422e8f:	test   rcx,rcx
  422e92:	je     422fae <flatcc_json_parser_union_type_vector@@Base+0x6ce>
  422e98:	mov    r9,rbp
  422e9b:	mov    rdx,QWORD PTR [rsp+0x88]
  422ea3:	mov    rdi,rax
  422ea6:	add    rdi,0x10
  422eaa:	add    rcx,0xffffffffffffffff
  422eae:	mov    QWORD PTR [rax+0x8],rcx
  422eb2:	mov    eax,DWORD PTR [rbx+0x18]
  422eb5:	mov    DWORD PTR [rsp+0x20],eax
  422eb9:	mov    rbp,rbx
  422ebc:	mov    r13,QWORD PTR [rbx+0x8]
  422ec0:	mov    rcx,QWORD PTR [rsp+0x28]
  422ec5:	mov    eax,DWORD PTR [rdi+rcx*8+0x10]
  422ec9:	mov    DWORD PTR [rbx+0x18],eax
  422ecc:	mov    rax,QWORD PTR [rdi+rcx*8+0x8]
  422ed1:	mov    QWORD PTR [rbx+0x8],rax
  422ed5:	mov    QWORD PTR [rsp],rdx
  422ed9:	mov    rdi,rbx
  422edc:	mov    rdx,r15
  422edf:	mov    rcx,r14
  422ee2:	mov    r8d,r12d
  422ee5:	call   422510 <flatcc_json_parser_union_vector@@Base+0xe0>
  422eea:	cmp    rax,r15
  422eed:	je     422f29 <flatcc_json_parser_union_type_vector@@Base+0x649>
  422eef:	mov    eax,DWORD PTR [rsp+0x20]
  422ef3:	mov    DWORD PTR [rbp+0x18],eax
  422ef6:	mov    QWORD PTR [rbp+0x8],r13
  422efa:	jmp    42293c <flatcc_json_parser_union_type_vector@@Base+0x5c>
  422eff:	mov    rsi,QWORD PTR [rsp+0x18]
  422f04:	mov    r13,rbx
  422f07:	cmp    DWORD PTR [r13+0x20],0x0
  422f0c:	jne    422f29 <flatcc_json_parser_union_type_vector@@Base+0x649>
  422f0e:	mov    DWORD PTR [r13+0x20],0x21
  422f16:	mov    eax,DWORD PTR [r13+0x8]
  422f1a:	mov    ecx,esi
  422f1c:	sub    ecx,eax
  422f1e:	add    ecx,0x1
  422f21:	mov    DWORD PTR [r13+0x1c],ecx
  422f25:	mov    QWORD PTR [r13+0x38],rsi
  422f29:	mov    rax,r15
  422f2c:	add    rsp,0x48
  422f30:	pop    rbx
  422f31:	pop    r12
  422f33:	pop    r13
  422f35:	pop    r14
  422f37:	pop    r15
  422f39:	pop    rbp
  422f3a:	ret    
  422f3b:	add    rcx,0x1
  422f3f:	mov    QWORD PTR [rax+0x8],rcx
  422f43:	jmp    42293c <flatcc_json_parser_union_type_vector@@Base+0x5c>
  422f48:	cmp    DWORD PTR [r13+0x20],0x0
  422f4d:	mov    rdx,r15
  422f50:	jne    422de0 <flatcc_json_parser_union_type_vector@@Base+0x500>
  422f56:	mov    DWORD PTR [r13+0x20],0x9
  422f5e:	mov    eax,DWORD PTR [r13+0x8]
  422f62:	mov    ecx,r12d
  422f65:	sub    ecx,eax
  422f67:	add    ecx,0x1
  422f6a:	mov    DWORD PTR [r13+0x1c],ecx
  422f6e:	mov    QWORD PTR [r13+0x38],r12
  422f72:	mov    rdx,r15
  422f75:	jmp    422de0 <flatcc_json_parser_union_type_vector@@Base+0x500>
  422f7a:	mov    rsi,r12
  422f7d:	cmp    DWORD PTR [r13+0x20],0x0
  422f82:	jne    422f29 <flatcc_json_parser_union_type_vector@@Base+0x649>
  422f84:	jmp    422f0e <flatcc_json_parser_union_type_vector@@Base+0x62e>
  422f86:	cmp    DWORD PTR [r13+0x20],0x0
  422f8b:	jne    422f29 <flatcc_json_parser_union_type_vector@@Base+0x649>
  422f8d:	mov    DWORD PTR [r13+0x20],0xf
  422f95:	mov    eax,DWORD PTR [r13+0x8]
  422f99:	mov    ecx,r12d
  422f9c:	sub    ecx,eax
  422f9e:	add    ecx,0x1
  422fa1:	mov    DWORD PTR [r13+0x1c],ecx
  422fa5:	mov    QWORD PTR [r13+0x38],r12
  422fa9:	jmp    422f29 <flatcc_json_parser_union_type_vector@@Base+0x649>
  422fae:	lea    rdi,[rip+0x424e]        # 427203 <flatcc_builder_padding_base@@Base+0x2373>
  422fb5:	lea    rsi,[rip+0x4256]        # 427212 <flatcc_builder_padding_base@@Base+0x2382>
  422fbc:	lea    rcx,[rip+0x437f]        # 427342 <flatcc_builder_padding_base@@Base+0x24b2>
  422fc3:	mov    edx,0x462
  422fc8:	call   404090 <__assert_fail@plt>
  422fcd:	nop    DWORD PTR [rax]

0000000000422fd0 <flatcc_json_parser_table_as_root@@Base>:
  422fd0:	push   r15
  422fd2:	push   r14
  422fd4:	push   r12
  422fd6:	push   rbx
  422fd7:	sub    rsp,0x58
  422fdb:	mov    r12,rcx
  422fde:	mov    r14,rdx
  422fe1:	mov    r15,rdi
  422fe4:	mov    ecx,r8d
  422fe7:	shr    ecx,1
  422fe9:	and    ecx,0x2
  422fec:	test   rsi,rsi
  422fef:	lea    rbx,[rsp+0x10]
  422ff4:	cmovne rbx,rsi
  422ff8:	add    r12,rdx
  422ffb:	vxorps xmm0,xmm0,xmm0
  422fff:	vmovups YMMWORD PTR [rbx],ymm0
  423003:	vmovups YMMWORD PTR [rbx+0x20],ymm0
  423008:	mov    QWORD PTR [rbx+0x40],0x0
  423010:	mov    QWORD PTR [rbx],rdi
  423013:	mov    QWORD PTR [rbx+0x8],rdx
  423017:	mov    DWORD PTR [rbx+0x18],0x1
  42301e:	mov    DWORD PTR [rbx+0x10],r8d
  423022:	mov    QWORD PTR [rbx+0x28],rdx
  423026:	mov    QWORD PTR [rbx+0x30],r12
  42302a:	mov    QWORD PTR [rbx+0x38],rdx
  42302e:	xor    edx,edx
  423030:	mov    rsi,r9
  423033:	vzeroupper 
  423036:	call   41b230 <flatcc_builder_start_buffer@@Base>
  42303b:	mov    ecx,eax
  42303d:	mov    eax,0xffffffff
  423042:	test   ecx,ecx
  423044:	jne    42307f <flatcc_json_parser_table_as_root@@Base+0xaf>
  423046:	lea    rcx,[rsp+0xc]
  42304b:	mov    rdi,rbx
  42304e:	mov    rsi,r14
  423051:	mov    rdx,r12
  423054:	call   QWORD PTR [rsp+0x80]
  42305b:	mov    eax,DWORD PTR [rbx+0x20]
  42305e:	test   eax,eax
  423060:	jne    42307f <flatcc_json_parser_table_as_root@@Base+0xaf>
  423062:	mov    esi,DWORD PTR [rsp+0xc]
  423066:	mov    rdi,r15
  423069:	call   41b450 <flatcc_builder_end_buffer@@Base>
  42306e:	mov    ecx,eax
  423070:	mov    eax,0xffffffff
  423075:	test   ecx,ecx
  423077:	je     42307f <flatcc_json_parser_table_as_root@@Base+0xaf>
  423079:	mov    QWORD PTR [rbx+0x40],r14
  42307d:	xor    eax,eax
  42307f:	add    rsp,0x58
  423083:	pop    rbx
  423084:	pop    r12
  423086:	pop    r14
  423088:	pop    r15
  42308a:	ret    
  42308b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000423090 <flatcc_json_parser_struct_as_root@@Base>:
  423090:	push   r15
  423092:	push   r14
  423094:	push   r12
  423096:	push   rbx
  423097:	sub    rsp,0x58
  42309b:	mov    r12,rcx
  42309e:	mov    r14,rdx
  4230a1:	mov    r15,rdi
  4230a4:	mov    ecx,r8d
  4230a7:	shr    ecx,1
  4230a9:	and    ecx,0x2
  4230ac:	test   rsi,rsi
  4230af:	lea    rbx,[rsp+0x10]
  4230b4:	cmovne rbx,rsi
  4230b8:	add    r12,rdx
  4230bb:	vxorps xmm0,xmm0,xmm0
  4230bf:	vmovups YMMWORD PTR [rbx],ymm0
  4230c3:	vmovups YMMWORD PTR [rbx+0x20],ymm0
  4230c8:	mov    QWORD PTR [rbx+0x40],0x0
  4230d0:	mov    QWORD PTR [rbx],rdi
  4230d3:	mov    QWORD PTR [rbx+0x8],rdx
  4230d7:	mov    DWORD PTR [rbx+0x18],0x1
  4230de:	mov    DWORD PTR [rbx+0x10],r8d
  4230e2:	mov    QWORD PTR [rbx+0x28],rdx
  4230e6:	mov    QWORD PTR [rbx+0x30],r12
  4230ea:	mov    QWORD PTR [rbx+0x38],rdx
  4230ee:	xor    edx,edx
  4230f0:	mov    rsi,r9
  4230f3:	vzeroupper 
  4230f6:	call   41b230 <flatcc_builder_start_buffer@@Base>
  4230fb:	mov    ecx,eax
  4230fd:	mov    eax,0xffffffff
  423102:	test   ecx,ecx
  423104:	jne    42313f <flatcc_json_parser_struct_as_root@@Base+0xaf>
  423106:	lea    rcx,[rsp+0xc]
  42310b:	mov    rdi,rbx
  42310e:	mov    rsi,r14
  423111:	mov    rdx,r12
  423114:	call   QWORD PTR [rsp+0x80]
  42311b:	mov    eax,DWORD PTR [rbx+0x20]
  42311e:	test   eax,eax
  423120:	jne    42313f <flatcc_json_parser_struct_as_root@@Base+0xaf>
  423122:	mov    esi,DWORD PTR [rsp+0xc]
  423126:	mov    rdi,r15
  423129:	call   41b450 <flatcc_builder_end_buffer@@Base>
  42312e:	mov    ecx,eax
  423130:	mov    eax,0xffffffff
  423135:	test   ecx,ecx
  423137:	je     42313f <flatcc_json_parser_struct_as_root@@Base+0xaf>
  423139:	mov    QWORD PTR [rbx+0x40],r14
  42313d:	xor    eax,eax
  42313f:	add    rsp,0x58
  423143:	pop    rbx
  423144:	pop    r12
  423146:	pop    r14
  423148:	pop    r15
  42314a:	ret    
  42314b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000423150 <__libc_csu_init@@Base>:
  423150:	endbr64 
  423154:	push   r15
  423156:	lea    r15,[rip+0x7b73]        # 42acd0 <flatcc_builder_padding_base@@Base+0x5e40>
  42315d:	push   r14
  42315f:	mov    r14,rdx
  423162:	push   r13
  423164:	mov    r13,rsi
  423167:	push   r12
  423169:	mov    r12d,edi
  42316c:	push   rbp
  42316d:	lea    rbp,[rip+0x7b64]        # 42acd8 <flatcc_builder_padding_base@@Base+0x5e48>
  423174:	push   rbx
  423175:	sub    rbp,r15
  423178:	sub    rsp,0x8
  42317c:	call   404000 <free@plt-0x30>
  423181:	sar    rbp,0x3
  423185:	je     4231a6 <__libc_csu_init@@Base+0x56>
  423187:	xor    ebx,ebx
  423189:	nop    DWORD PTR [rax+0x0]
  423190:	mov    rdx,r14
  423193:	mov    rsi,r13
  423196:	mov    edi,r12d
  423199:	call   QWORD PTR [r15+rbx*8]
  42319d:	add    rbx,0x1
  4231a1:	cmp    rbp,rbx
  4231a4:	jne    423190 <__libc_csu_init@@Base+0x40>
  4231a6:	add    rsp,0x8
  4231aa:	pop    rbx
  4231ab:	pop    rbp
  4231ac:	pop    r12
  4231ae:	pop    r13
  4231b0:	pop    r14
  4231b2:	pop    r15
  4231b4:	ret    
  4231b5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

00000000004231c0 <__libc_csu_fini@@Base>:
  4231c0:	endbr64 
  4231c4:	ret    

Disassembly of section .fini:

00000000004231c8 <.fini>:
  4231c8:	endbr64 
  4231cc:	sub    rsp,0x8
  4231d0:	add    rsp,0x8
  4231d4:	ret    
