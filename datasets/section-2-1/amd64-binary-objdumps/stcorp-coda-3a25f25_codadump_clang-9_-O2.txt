
../repos/stcorp-coda-3a25f25/codadump:     file format elf64-x86-64


Disassembly of section .init:

0000000000403000 <.init>:
  403000:	endbr64 
  403004:	sub    rsp,0x8
  403008:	mov    rax,QWORD PTR [rip+0xcfe1]        # 40fff0 <__gmon_start__>
  40300f:	test   rax,rax
  403012:	je     403016 <coda_cursor_get_byte_size@plt-0x1a>
  403014:	call   rax
  403016:	add    rsp,0x8
  40301a:	ret    

Disassembly of section .plt:

0000000000403020 <coda_cursor_get_byte_size@plt-0x10>:
  403020:	push   QWORD PTR [rip+0xcfe2]        # 410008 <_IO_stdin_used@@Base+0x4008>
  403026:	jmp    QWORD PTR [rip+0xcfe4]        # 410010 <_IO_stdin_used@@Base+0x4010>
  40302c:	nop    DWORD PTR [rax+0x0]

0000000000403030 <coda_cursor_get_byte_size@plt>:
  403030:	jmp    QWORD PTR [rip+0xcfe2]        # 410018 <coda_cursor_get_byte_size>
  403036:	push   0x0
  40303b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403040 <coda_type_get_special_type_name@plt>:
  403040:	jmp    QWORD PTR [rip+0xcfda]        # 410020 <coda_type_get_special_type_name>
  403046:	push   0x1
  40304b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403050 <coda_set_option_use_fast_size_expressions@plt>:
  403050:	jmp    QWORD PTR [rip+0xcfd2]        # 410028 <coda_set_option_use_fast_size_expressions>
  403056:	push   0x2
  40305b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403060 <coda_get_option_bypass_special_types@plt>:
  403060:	jmp    QWORD PTR [rip+0xcfca]        # 410030 <coda_get_option_bypass_special_types>
  403066:	push   0x3
  40306b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403070 <free@plt>:
  403070:	jmp    QWORD PTR [rip+0xcfc2]        # 410038 <free@GLIBC_2.2.5>
  403076:	push   0x4
  40307b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403080 <putchar@plt>:
  403080:	jmp    QWORD PTR [rip+0xcfba]        # 410040 <putchar@GLIBC_2.2.5>
  403086:	push   0x5
  40308b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403090 <coda_set_option_perform_boundary_checks@plt>:
  403090:	jmp    QWORD PTR [rip+0xcfb2]        # 410048 <coda_set_option_perform_boundary_checks>
  403096:	push   0x6
  40309b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

00000000004030a0 <strncpy@plt>:
  4030a0:	jmp    QWORD PTR [rip+0xcfaa]        # 410050 <strncpy@GLIBC_2.2.5>
  4030a6:	push   0x7
  4030ab:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

00000000004030b0 <coda_type_get_record_field_hidden_status@plt>:
  4030b0:	jmp    QWORD PTR [rip+0xcfa2]        # 410058 <coda_type_get_record_field_hidden_status>
  4030b6:	push   0x8
  4030bb:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

00000000004030c0 <coda_cursor_get_record_field_available_status@plt>:
  4030c0:	jmp    QWORD PTR [rip+0xcf9a]        # 410060 <coda_cursor_get_record_field_available_status>
  4030c6:	push   0x9
  4030cb:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

00000000004030d0 <coda_set_error@plt>:
  4030d0:	jmp    QWORD PTR [rip+0xcf92]        # 410068 <coda_set_error>
  4030d6:	push   0xa
  4030db:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

00000000004030e0 <coda_open@plt>:
  4030e0:	jmp    QWORD PTR [rip+0xcf8a]        # 410070 <coda_open>
  4030e6:	push   0xb
  4030eb:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

00000000004030f0 <coda_time_double_to_string@plt>:
  4030f0:	jmp    QWORD PTR [rip+0xcf82]        # 410078 <coda_time_double_to_string>
  4030f6:	push   0xc
  4030fb:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403100 <puts@plt>:
  403100:	jmp    QWORD PTR [rip+0xcf7a]        # 410080 <puts@GLIBC_2.2.5>
  403106:	push   0xd
  40310b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403110 <coda_cursor_get_num_elements@plt>:
  403110:	jmp    QWORD PTR [rip+0xcf72]        # 410088 <coda_cursor_get_num_elements>
  403116:	push   0xe
  40311b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403120 <coda_str64u@plt>:
  403120:	jmp    QWORD PTR [rip+0xcf6a]        # 410090 <coda_str64u>
  403126:	push   0xf
  40312b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403130 <coda_set_option_use_mmap@plt>:
  403130:	jmp    QWORD PTR [rip+0xcf62]        # 410098 <coda_set_option_use_mmap>
  403136:	push   0x10
  40313b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403140 <coda_set_definition_path_conditional@plt>:
  403140:	jmp    QWORD PTR [rip+0xcf5a]        # 4100a0 <coda_set_definition_path_conditional>
  403146:	push   0x11
  40314b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403150 <coda_cursor_read_uint32@plt>:
  403150:	jmp    QWORD PTR [rip+0xcf52]        # 4100a8 <coda_cursor_read_uint32>
  403156:	push   0x12
  40315b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403160 <coda_set_option_bypass_special_types@plt>:
  403160:	jmp    QWORD PTR [rip+0xcf4a]        # 4100b0 <coda_set_option_bypass_special_types>
  403166:	push   0x13
  40316b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403170 <coda_type_get_record_field_type@plt>:
  403170:	jmp    QWORD PTR [rip+0xcf42]        # 4100b8 <coda_type_get_record_field_type>
  403176:	push   0x14
  40317b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403180 <coda_cursor_get_type@plt>:
  403180:	jmp    QWORD PTR [rip+0xcf3a]        # 4100c0 <coda_cursor_get_type>
  403186:	push   0x15
  40318b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403190 <coda_isInf@plt>:
  403190:	jmp    QWORD PTR [rip+0xcf32]        # 4100c8 <coda_isInf>
  403196:	push   0x16
  40319b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

00000000004031a0 <coda_type_get_bit_size@plt>:
  4031a0:	jmp    QWORD PTR [rip+0xcf2a]        # 4100d0 <coda_type_get_bit_size>
  4031a6:	push   0x17
  4031ab:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

00000000004031b0 <coda_type_get_record_field_available_status@plt>:
  4031b0:	jmp    QWORD PTR [rip+0xcf22]        # 4100d8 <coda_type_get_record_field_available_status>
  4031b6:	push   0x18
  4031bb:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

00000000004031c0 <fclose@plt>:
  4031c0:	jmp    QWORD PTR [rip+0xcf1a]        # 4100e0 <fclose@GLIBC_2.2.5>
  4031c6:	push   0x19
  4031cb:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

00000000004031d0 <coda_cursor_has_attributes@plt>:
  4031d0:	jmp    QWORD PTR [rip+0xcf12]        # 4100e8 <coda_cursor_has_attributes>
  4031d6:	push   0x1a
  4031db:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

00000000004031e0 <coda_cursor_get_type_class@plt>:
  4031e0:	jmp    QWORD PTR [rip+0xcf0a]        # 4100f0 <coda_cursor_get_type_class>
  4031e6:	push   0x1b
  4031eb:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

00000000004031f0 <coda_set_definition_path@plt>:
  4031f0:	jmp    QWORD PTR [rip+0xcf02]        # 4100f8 <coda_set_definition_path>
  4031f6:	push   0x1c
  4031fb:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403200 <coda_get_product_format@plt>:
  403200:	jmp    QWORD PTR [rip+0xcefa]        # 410100 <coda_get_product_format>
  403206:	push   0x1d
  40320b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403210 <coda_type_get_unit@plt>:
  403210:	jmp    QWORD PTR [rip+0xcef2]        # 410108 <coda_type_get_unit>
  403216:	push   0x1e
  40321b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403220 <coda_type_get_description@plt>:
  403220:	jmp    QWORD PTR [rip+0xceea]        # 410110 <coda_type_get_description>
  403226:	push   0x1f
  40322b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403230 <printf@plt>:
  403230:	jmp    QWORD PTR [rip+0xcee2]        # 410118 <printf@GLIBC_2.2.5>
  403236:	push   0x20
  40323b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403240 <__assert_fail@plt>:
  403240:	jmp    QWORD PTR [rip+0xceda]        # 410120 <__assert_fail@GLIBC_2.2.5>
  403246:	push   0x21
  40324b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403250 <fputs@plt>:
  403250:	jmp    QWORD PTR [rip+0xced2]        # 410128 <fputs@GLIBC_2.2.5>
  403256:	push   0x22
  40325b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403260 <coda_cursor_get_special_type@plt>:
  403260:	jmp    QWORD PTR [rip+0xceca]        # 410130 <coda_cursor_get_special_type>
  403266:	push   0x23
  40326b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403270 <coda_cursor_goto_first_array_element@plt>:
  403270:	jmp    QWORD PTR [rip+0xcec2]        # 410138 <coda_cursor_goto_first_array_element>
  403276:	push   0x24
  40327b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403280 <memset@plt>:
  403280:	jmp    QWORD PTR [rip+0xceba]        # 410140 <memset@GLIBC_2.2.5>
  403286:	push   0x25
  40328b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403290 <coda_cursor_set_product@plt>:
  403290:	jmp    QWORD PTR [rip+0xceb2]        # 410148 <coda_cursor_set_product>
  403296:	push   0x26
  40329b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

00000000004032a0 <coda_cursor_goto_first_record_field@plt>:
  4032a0:	jmp    QWORD PTR [rip+0xceaa]        # 410150 <coda_cursor_goto_first_record_field>
  4032a6:	push   0x27
  4032ab:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

00000000004032b0 <fputc@plt>:
  4032b0:	jmp    QWORD PTR [rip+0xcea2]        # 410158 <fputc@GLIBC_2.2.5>
  4032b6:	push   0x28
  4032bb:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

00000000004032c0 <coda_cursor_goto_record_field_by_index@plt>:
  4032c0:	jmp    QWORD PTR [rip+0xce9a]        # 410160 <coda_cursor_goto_record_field_by_index>
  4032c6:	push   0x29
  4032cb:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

00000000004032d0 <coda_done@plt>:
  4032d0:	jmp    QWORD PTR [rip+0xce92]        # 410168 <coda_done>
  4032d6:	push   0x2a
  4032db:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

00000000004032e0 <coda_cursor_get_read_type@plt>:
  4032e0:	jmp    QWORD PTR [rip+0xce8a]        # 410170 <coda_cursor_get_read_type>
  4032e6:	push   0x2b
  4032eb:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

00000000004032f0 <strcmp@plt>:
  4032f0:	jmp    QWORD PTR [rip+0xce82]        # 410178 <strcmp@GLIBC_2.2.5>
  4032f6:	push   0x2c
  4032fb:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403300 <fprintf@plt>:
  403300:	jmp    QWORD PTR [rip+0xce7a]        # 410180 <fprintf@GLIBC_2.2.5>
  403306:	push   0x2d
  40330b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403310 <coda_cursor_read_string@plt>:
  403310:	jmp    QWORD PTR [rip+0xce72]        # 410188 <coda_cursor_read_string>
  403316:	push   0x2e
  40331b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403320 <coda_cursor_goto_parent@plt>:
  403320:	jmp    QWORD PTR [rip+0xce6a]        # 410190 <coda_cursor_goto_parent>
  403326:	push   0x2f
  40332b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403330 <strtol@plt>:
  403330:	jmp    QWORD PTR [rip+0xce62]        # 410198 <strtol@GLIBC_2.2.5>
  403336:	push   0x30
  40333b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403340 <coda_type_get_num_record_fields@plt>:
  403340:	jmp    QWORD PTR [rip+0xce5a]        # 4101a0 <coda_type_get_num_record_fields>
  403346:	push   0x31
  40334b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403350 <memcpy@plt>:
  403350:	jmp    QWORD PTR [rip+0xce52]        # 4101a8 <memcpy@GLIBC_2.14>
  403356:	push   0x32
  40335b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403360 <coda_type_get_read_type@plt>:
  403360:	jmp    QWORD PTR [rip+0xce4a]        # 4101b0 <coda_type_get_read_type>
  403366:	push   0x33
  40336b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403370 <coda_cursor_get_string_length@plt>:
  403370:	jmp    QWORD PTR [rip+0xce42]        # 4101b8 <coda_cursor_get_string_length>
  403376:	push   0x34
  40337b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403380 <coda_cursor_read_uint64@plt>:
  403380:	jmp    QWORD PTR [rip+0xce3a]        # 4101c0 <coda_cursor_read_uint64>
  403386:	push   0x35
  40338b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403390 <coda_cursor_read_double@plt>:
  403390:	jmp    QWORD PTR [rip+0xce32]        # 4101c8 <coda_cursor_read_double>
  403396:	push   0x36
  40339b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

00000000004033a0 <coda_isNaN@plt>:
  4033a0:	jmp    QWORD PTR [rip+0xce2a]        # 4101d0 <coda_isNaN>
  4033a6:	push   0x37
  4033ab:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

00000000004033b0 <coda_cursor_goto_next_array_element@plt>:
  4033b0:	jmp    QWORD PTR [rip+0xce22]        # 4101d8 <coda_cursor_goto_next_array_element>
  4033b6:	push   0x38
  4033bb:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

00000000004033c0 <coda_open_as@plt>:
  4033c0:	jmp    QWORD PTR [rip+0xce1a]        # 4101e0 <coda_open_as>
  4033c6:	push   0x39
  4033cb:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

00000000004033d0 <coda_init@plt>:
  4033d0:	jmp    QWORD PTR [rip+0xce12]        # 4101e8 <coda_init>
  4033d6:	push   0x3a
  4033db:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

00000000004033e0 <coda_set_option_perform_conversions@plt>:
  4033e0:	jmp    QWORD PTR [rip+0xce0a]        # 4101f0 <coda_set_option_perform_conversions>
  4033e6:	push   0x3b
  4033eb:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

00000000004033f0 <malloc@plt>:
  4033f0:	jmp    QWORD PTR [rip+0xce02]        # 4101f8 <malloc@GLIBC_2.2.5>
  4033f6:	push   0x3c
  4033fb:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403400 <fflush@plt>:
  403400:	jmp    QWORD PTR [rip+0xcdfa]        # 410200 <fflush@GLIBC_2.2.5>
  403406:	push   0x3d
  40340b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403410 <coda_cursor_goto_attributes@plt>:
  403410:	jmp    QWORD PTR [rip+0xcdf2]        # 410208 <coda_cursor_goto_attributes>
  403416:	push   0x3e
  40341b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403420 <coda_cursor_read_char@plt>:
  403420:	jmp    QWORD PTR [rip+0xcdea]        # 410210 <coda_cursor_read_char>
  403426:	push   0x3f
  40342b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403430 <coda_type_get_special_type@plt>:
  403430:	jmp    QWORD PTR [rip+0xcde2]        # 410218 <coda_type_get_special_type>
  403436:	push   0x40
  40343b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403440 <coda_type_get_record_union_status@plt>:
  403440:	jmp    QWORD PTR [rip+0xcdda]        # 410220 <coda_type_get_record_union_status>
  403446:	push   0x41
  40344b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403450 <coda_cursor_read_complex_double_split@plt>:
  403450:	jmp    QWORD PTR [rip+0xcdd2]        # 410228 <coda_cursor_read_complex_double_split>
  403456:	push   0x42
  40345b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403460 <coda_type_get_array_base_type@plt>:
  403460:	jmp    QWORD PTR [rip+0xcdca]        # 410230 <coda_type_get_array_base_type>
  403466:	push   0x43
  40346b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403470 <coda_type_get_string_length@plt>:
  403470:	jmp    QWORD PTR [rip+0xcdc2]        # 410238 <coda_type_get_string_length>
  403476:	push   0x44
  40347b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403480 <coda_type_get_native_type_name@plt>:
  403480:	jmp    QWORD PTR [rip+0xcdba]        # 410240 <coda_type_get_native_type_name>
  403486:	push   0x45
  40348b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403490 <coda_cursor_get_array_dim@plt>:
  403490:	jmp    QWORD PTR [rip+0xcdb2]        # 410248 <coda_cursor_get_array_dim>
  403496:	push   0x46
  40349b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

00000000004034a0 <coda_cursor_has_ascii_content@plt>:
  4034a0:	jmp    QWORD PTR [rip+0xcdaa]        # 410250 <coda_cursor_has_ascii_content>
  4034a6:	push   0x47
  4034ab:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

00000000004034b0 <coda_close@plt>:
  4034b0:	jmp    QWORD PTR [rip+0xcda2]        # 410258 <coda_close>
  4034b6:	push   0x48
  4034bb:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

00000000004034c0 <coda_cursor_read_int64@plt>:
  4034c0:	jmp    QWORD PTR [rip+0xcd9a]        # 410260 <coda_cursor_read_int64>
  4034c6:	push   0x49
  4034cb:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

00000000004034d0 <coda_cursor_goto@plt>:
  4034d0:	jmp    QWORD PTR [rip+0xcd92]        # 410268 <coda_cursor_goto>
  4034d6:	push   0x4a
  4034db:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

00000000004034e0 <coda_type_get_record_field_index_from_name@plt>:
  4034e0:	jmp    QWORD PTR [rip+0xcd8a]        # 410270 <coda_type_get_record_field_index_from_name>
  4034e6:	push   0x4b
  4034eb:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

00000000004034f0 <coda_cursor_read_complex_double_pair@plt>:
  4034f0:	jmp    QWORD PTR [rip+0xcd82]        # 410278 <coda_cursor_read_complex_double_pair>
  4034f6:	push   0x4c
  4034fb:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403500 <coda_cursor_goto_next_record_field@plt>:
  403500:	jmp    QWORD PTR [rip+0xcd7a]        # 410280 <coda_cursor_goto_next_record_field>
  403506:	push   0x4d
  40350b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403510 <fopen@plt>:
  403510:	jmp    QWORD PTR [rip+0xcd72]        # 410288 <fopen@GLIBC_2.2.5>
  403516:	push   0x4e
  40351b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403520 <coda_type_get_array_dim@plt>:
  403520:	jmp    QWORD PTR [rip+0xcd6a]        # 410290 <coda_type_get_array_dim>
  403526:	push   0x4f
  40352b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403530 <vfprintf@plt>:
  403530:	jmp    QWORD PTR [rip+0xcd62]        # 410298 <vfprintf@GLIBC_2.2.5>
  403536:	push   0x50
  40353b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403540 <coda_cursor_get_bit_size@plt>:
  403540:	jmp    QWORD PTR [rip+0xcd5a]        # 4102a0 <coda_cursor_get_bit_size>
  403546:	push   0x51
  40354b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403550 <coda_errno_to_string@plt>:
  403550:	jmp    QWORD PTR [rip+0xcd52]        # 4102a8 <coda_errno_to_string>
  403556:	push   0x52
  40355b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403560 <coda_cursor_use_base_type_of_special_type@plt>:
  403560:	jmp    QWORD PTR [rip+0xcd4a]        # 4102b0 <coda_cursor_use_base_type_of_special_type>
  403566:	push   0x53
  40356b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403570 <coda_cursor_get_available_union_field_index@plt>:
  403570:	jmp    QWORD PTR [rip+0xcd42]        # 4102b8 <coda_cursor_get_available_union_field_index>
  403576:	push   0x54
  40357b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403580 <exit@plt>:
  403580:	jmp    QWORD PTR [rip+0xcd3a]        # 4102c0 <exit@GLIBC_2.2.5>
  403586:	push   0x55
  40358b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403590 <coda_cursor_read_int32@plt>:
  403590:	jmp    QWORD PTR [rip+0xcd32]        # 4102c8 <coda_cursor_read_int32>
  403596:	push   0x56
  40359b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

00000000004035a0 <fwrite@plt>:
  4035a0:	jmp    QWORD PTR [rip+0xcd2a]        # 4102d0 <fwrite@GLIBC_2.2.5>
  4035a6:	push   0x57
  4035ab:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

00000000004035b0 <coda_cursor_get_file_bit_offset@plt>:
  4035b0:	jmp    QWORD PTR [rip+0xcd22]        # 4102d8 <coda_cursor_get_file_bit_offset>
  4035b6:	push   0x58
  4035bb:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

00000000004035c0 <coda_get_libcoda_version@plt>:
  4035c0:	jmp    QWORD PTR [rip+0xcd1a]        # 4102e0 <coda_get_libcoda_version>
  4035c6:	push   0x59
  4035cb:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

00000000004035d0 <coda_get_errno@plt>:
  4035d0:	jmp    QWORD PTR [rip+0xcd12]        # 4102e8 <coda_get_errno>
  4035d6:	push   0x5a
  4035db:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

00000000004035e0 <coda_type_get_special_base_type@plt>:
  4035e0:	jmp    QWORD PTR [rip+0xcd0a]        # 4102f0 <coda_type_get_special_base_type>
  4035e6:	push   0x5b
  4035eb:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

00000000004035f0 <coda_type_get_record_field_name@plt>:
  4035f0:	jmp    QWORD PTR [rip+0xcd02]        # 4102f8 <coda_type_get_record_field_name>
  4035f6:	push   0x5c
  4035fb:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403600 <coda_cursor_read_bits@plt>:
  403600:	jmp    QWORD PTR [rip+0xccfa]        # 410300 <coda_cursor_read_bits>
  403606:	push   0x5d
  40360b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403610 <coda_str64@plt>:
  403610:	jmp    QWORD PTR [rip+0xccf2]        # 410308 <coda_str64>
  403616:	push   0x5e
  40361b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403620 <coda_type_get_class@plt>:
  403620:	jmp    QWORD PTR [rip+0xccea]        # 410310 <coda_type_get_class>
  403626:	push   0x5f
  40362b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

Disassembly of section .text:

0000000000403630 <_start@@Base>:
  403630:	endbr64 
  403634:	xor    ebp,ebp
  403636:	mov    r9,rdx
  403639:	pop    rsi
  40363a:	mov    rdx,rsp
  40363d:	and    rsp,0xfffffffffffffff0
  403641:	push   rax
  403642:	push   rsp
  403643:	mov    r8,0x40bfa0
  40364a:	mov    rcx,0x40bf30
  403651:	mov    rdi,0x40a810
  403658:	call   QWORD PTR [rip+0xc98a]        # 40ffe8 <__libc_start_main@GLIBC_2.2.5>
  40365e:	hlt    
  40365f:	nop
  403660:	endbr64 
  403664:	ret    
  403665:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40366f:	nop
  403670:	mov    eax,0x410330
  403675:	cmp    rax,0x410330
  40367b:	je     403690 <_start@@Base+0x60>
  40367d:	mov    eax,0x0
  403682:	test   rax,rax
  403685:	je     403690 <_start@@Base+0x60>
  403687:	mov    edi,0x410330
  40368c:	jmp    rax
  40368e:	xchg   ax,ax
  403690:	ret    
  403691:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40369c:	nop    DWORD PTR [rax+0x0]
  4036a0:	mov    esi,0x410330
  4036a5:	sub    rsi,0x410330
  4036ac:	mov    rax,rsi
  4036af:	shr    rsi,0x3f
  4036b3:	sar    rax,0x3
  4036b7:	add    rsi,rax
  4036ba:	sar    rsi,1
  4036bd:	je     4036d0 <_start@@Base+0xa0>
  4036bf:	mov    eax,0x0
  4036c4:	test   rax,rax
  4036c7:	je     4036d0 <_start@@Base+0xa0>
  4036c9:	mov    edi,0x410330
  4036ce:	jmp    rax
  4036d0:	ret    
  4036d1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4036dc:	nop    DWORD PTR [rax+0x0]
  4036e0:	endbr64 
  4036e4:	cmp    BYTE PTR [rip+0xcc45],0x0        # 410330 <__bss_start@@Base>
  4036eb:	jne    403700 <_start@@Base+0xd0>
  4036ed:	push   rbp
  4036ee:	mov    rbp,rsp
  4036f1:	call   403670 <_start@@Base+0x40>
  4036f6:	mov    BYTE PTR [rip+0xcc33],0x1        # 410330 <__bss_start@@Base>
  4036fd:	pop    rbp
  4036fe:	ret    
  4036ff:	nop
  403700:	ret    
  403701:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40370c:	nop    DWORD PTR [rax+0x0]
  403710:	endbr64 
  403714:	jmp    4036a0 <_start@@Base+0x70>
  403716:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000403720 <export_data_element_to_ascii@@Base>:
  403720:	push   rbx
  403721:	cmp    BYTE PTR [rip+0xcc0c],0x0        # 410334 <__bss_start@@Base+0x4>
  403728:	je     403740 <export_data_element_to_ascii@@Base+0x20>
  40372a:	lea    rax,[rip+0xdd77]        # 4114a8 <ascii_output@@Base>
  403731:	mov    rsi,QWORD PTR [rax]
  403734:	mov    edi,0xa
  403739:	call   4032b0 <fputc@plt>
  40373e:	jmp    403747 <export_data_element_to_ascii@@Base+0x27>
  403740:	mov    BYTE PTR [rip+0xcbed],0x1        # 410334 <__bss_start@@Base+0x4>
  403747:	lea    rax,[rip+0xdf12]        # 411660 <show_label@@Base>
  40374e:	cmp    DWORD PTR [rax],0x0
  403751:	je     403776 <export_data_element_to_ascii@@Base+0x56>
  403753:	lea    rbx,[rip+0xdd4e]        # 4114a8 <ascii_output@@Base>
  40375a:	mov    rdi,QWORD PTR [rbx]
  40375d:	mov    esi,0x2
  403762:	xor    edx,edx
  403764:	call   408b30 <print_full_field_name@@Base>
  403769:	mov    rsi,QWORD PTR [rbx]
  40376c:	mov    edi,0xa
  403771:	call   4032b0 <fputc@plt>
  403776:	lea    rax,[rip+0xdd53]        # 4114d0 <dim_info@@Base>
  40377d:	movsxd rcx,DWORD PTR [rax]
  403780:	test   rcx,rcx
  403783:	jle    403790 <export_data_element_to_ascii@@Base+0x70>
  403785:	cmp    QWORD PTR [rax+rcx*8+0x148],0x0
  40378e:	je     4037a3 <export_data_element_to_ascii@@Base+0x83>
  403790:	lea    rax,[rip+0xdd11]        # 4114a8 <ascii_output@@Base>
  403797:	mov    rdi,QWORD PTR [rax]
  40379a:	xor    esi,esi
  40379c:	xor    edx,edx
  40379e:	xor    ecx,ecx
  4037a0:	pop    rbx
  4037a1:	jmp    4037b0 <export_data_element_to_ascii@@Base+0x90>
  4037a3:	pop    rbx
  4037a4:	ret    
  4037a5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4037af:	nop
  4037b0:	push   rbp
  4037b1:	push   r15
  4037b3:	push   r14
  4037b5:	push   r13
  4037b7:	push   r12
  4037b9:	push   rbx
  4037ba:	sub    rsp,0x68
  4037be:	mov    DWORD PTR [rsp],ecx
  4037c1:	mov    r15d,edx
  4037c4:	mov    rbx,rdi
  4037c7:	mov    DWORD PTR [rsp+0x38],esi
  4037cb:	movsxd rbp,esi
  4037ce:	lea    r14,[rip+0xcb93]        # 410368 <traverse_info@@Base>
  4037d5:	mov    rdi,QWORD PTR [r14+rbp*8+0x10]
  4037da:	lea    rsi,[rsp+0x48]
  4037df:	call   403620 <coda_type_get_class@plt>
  4037e4:	test   eax,eax
  4037e6:	je     4037ef <export_data_element_to_ascii@@Base+0xcf>
  4037e8:	xor    eax,eax
  4037ea:	call   40a7d0 <handle_coda_error@@Base>
  4037ef:	mov    eax,DWORD PTR [rsp+0x48]
  4037f3:	test   eax,eax
  4037f5:	mov    QWORD PTR [rsp+0x30],rbx
  4037fa:	je     4038b6 <export_data_element_to_ascii@@Base+0x196>
  403800:	cmp    eax,0x1
  403803:	jne    403924 <export_data_element_to_ascii@@Base+0x204>
  403809:	movsxd rax,r15d
  40380c:	lea    r13,[rax+rax*4]
  403810:	shl    r13,0x4
  403814:	movsxd r9,DWORD PTR [r14+r13*1+0x534]
  40381c:	test   r15d,r15d
  40381f:	jne    40382d <export_data_element_to_ascii@@Base+0x10d>
  403821:	mov    DWORD PTR [r14+r13*1+0x560],0x0
  40382d:	lea    r8,[rip+0xdc9c]        # 4114d0 <dim_info@@Base>
  403834:	mov    eax,DWORD PTR [r8+0x68]
  403838:	mov    edx,DWORD PTR [r14+r13*1+0x538]
  403840:	lea    ecx,[rdx+r9*1]
  403844:	mov    DWORD PTR [rsp+0x44],eax
  403848:	mov    DWORD PTR [rsp+0x40],ecx
  40384c:	cmp    eax,ecx
  40384e:	jl     403886 <export_data_element_to_ascii@@Base+0x166>
  403850:	mov    eax,DWORD PTR [r14+0xf34]
  403857:	dec    eax
  403859:	cmp    eax,r15d
  40385c:	jle    403886 <export_data_element_to_ascii@@Base+0x166>
  40385e:	mov    eax,DWORD PTR [r14+r13*1+0x55c]
  403866:	imul   eax,DWORD PTR [r14+r13*1+0x560]
  40386f:	lea    ecx,[r15+0x1]
  403873:	movsxd rcx,ecx
  403876:	lea    rcx,[rcx+rcx*4]
  40387a:	shl    rcx,0x4
  40387e:	mov    DWORD PTR [r14+rcx*1+0x560],eax
  403886:	test   edx,edx
  403888:	jle    403ab1 <export_data_element_to_ascii@@Base+0x391>
  40388e:	lea    r11,[r14+r13*1]
  403892:	add    r11,0x560
  403899:	mov    r10d,edx
  40389c:	and    r10d,0x1
  4038a0:	cmp    edx,0x1
  4038a3:	jne    403aed <export_data_element_to_ascii@@Base+0x3cd>
  4038a9:	mov    r14d,0x1
  4038af:	xor    esi,esi
  4038b1:	jmp    403b8a <export_data_element_to_ascii@@Base+0x46a>
  4038b6:	movsxd rbx,DWORD PTR [rsp]
  4038ba:	movsxd rsi,DWORD PTR [r14+rbx*4+0xfb8]
  4038c2:	lea    rbp,[r14+0x118]
  4038c9:	lea    rdx,[rsp+0x10]
  4038ce:	mov    rdi,rbp
  4038d1:	call   4030c0 <coda_cursor_get_record_field_available_status@plt>
  4038d6:	test   eax,eax
  4038d8:	je     4038e1 <export_data_element_to_ascii@@Base+0x1c1>
  4038da:	xor    eax,eax
  4038dc:	call   40a7d0 <handle_coda_error@@Base>
  4038e1:	cmp    DWORD PTR [rsp+0x10],0x0
  4038e6:	je     40423a <export_data_element_to_ascii@@Base+0xb1a>
  4038ec:	movsxd rsi,DWORD PTR [r14+rbx*4+0xfb8]
  4038f4:	mov    rdi,rbp
  4038f7:	call   4032c0 <coda_cursor_goto_record_field_by_index@plt>
  4038fc:	test   eax,eax
  4038fe:	je     403907 <export_data_element_to_ascii@@Base+0x1e7>
  403900:	xor    eax,eax
  403902:	call   40a7d0 <handle_coda_error@@Base>
  403907:	mov    esi,DWORD PTR [rsp+0x38]
  40390b:	inc    esi
  40390d:	mov    ecx,DWORD PTR [rsp]
  403910:	inc    ecx
  403912:	mov    rdi,QWORD PTR [rsp+0x30]
  403917:	mov    edx,r15d
  40391a:	call   4037b0 <export_data_element_to_ascii@@Base+0x90>
  40391f:	jmp    403e29 <export_data_element_to_ascii@@Base+0x709>
  403924:	mov    QWORD PTR [rsp+0x38],rbp
  403929:	lea    rax,[rip+0xdb90]        # 4114c0 <show_index@@Base>
  403930:	cmp    DWORD PTR [rax],0x0
  403933:	je     403a16 <export_data_element_to_ascii@@Base+0x2f6>
  403939:	cmp    DWORD PTR [r14+0x110],0x0
  403941:	jle    403a16 <export_data_element_to_ascii@@Base+0x2f6>
  403947:	lea    r12,[rsp+0x10]
  40394c:	lea    r15,[rip+0xdb5d]        # 4114b0 <ascii_col_sep@@Base>
  403953:	lea    rbp,[rip+0x882a]        # 40c184 <_IO_stdin_used@@Base+0x184>
  40395a:	xor    ebx,ebx
  40395c:	xor    r13d,r13d
  40395f:	jmp    403996 <export_data_element_to_ascii@@Base+0x276>
  403961:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40396b:	nop    DWORD PTR [rax+rax*1+0x0]
  403970:	mov    r13d,DWORD PTR [rsp]
  403974:	inc    r13d
  403977:	lea    r14,[rip+0xc9ea]        # 410368 <traverse_info@@Base>
  40397e:	lea    r12,[rsp+0x10]
  403983:	inc    rbx
  403986:	movsxd rax,DWORD PTR [r14+0x110]
  40398d:	cmp    rbx,rax
  403990:	jge    403a16 <export_data_element_to_ascii@@Base+0x2f6>
  403996:	mov    rdi,QWORD PTR [r14+rbx*8+0x10]
  40399b:	mov    rsi,r12
  40399e:	call   403620 <coda_type_get_class@plt>
  4039a3:	test   eax,eax
  4039a5:	je     4039ae <export_data_element_to_ascii@@Base+0x28e>
  4039a7:	xor    eax,eax
  4039a9:	call   40a7d0 <handle_coda_error@@Base>
  4039ae:	cmp    DWORD PTR [rsp+0x10],0x1
  4039b3:	jne    403983 <export_data_element_to_ascii@@Base+0x263>
  4039b5:	mov    DWORD PTR [rsp],r13d
  4039b9:	movsxd rax,r13d
  4039bc:	lea    rax,[rax+rax*4]
  4039c0:	shl    rax,0x4
  4039c4:	cmp    DWORD PTR [r14+rax*1+0x538],0x0
  4039cd:	mov    r12,QWORD PTR [rsp+0x30]
  4039d2:	jle    403970 <export_data_element_to_ascii@@Base+0x250>
  4039d4:	lea    rcx,[rip+0xc98d]        # 410368 <traverse_info@@Base>
  4039db:	lea    r13,[rcx+rax*1]
  4039df:	add    r13,0x538
  4039e6:	xor    r14d,r14d
  4039e9:	nop    DWORD PTR [rax+0x0]
  4039f0:	movsxd rdx,DWORD PTR [r13+r14*4+0x2c]
  4039f5:	mov    rcx,QWORD PTR [r15]
  4039f8:	mov    rdi,r12
  4039fb:	mov    rsi,rbp
  4039fe:	xor    eax,eax
  403a00:	call   403300 <fprintf@plt>
  403a05:	inc    r14
  403a08:	movsxd rax,DWORD PTR [r13+0x0]
  403a0c:	cmp    r14,rax
  403a0f:	jl     4039f0 <export_data_element_to_ascii@@Base+0x2d0>
  403a11:	jmp    403970 <export_data_element_to_ascii@@Base+0x250>
  403a16:	mov    rbp,QWORD PTR [rsp+0x38]
  403a1b:	mov    rdi,QWORD PTR [r14+rbp*8+0x10]
  403a20:	lea    rsi,[rsp+0x4c]
  403a25:	call   403620 <coda_type_get_class@plt>
  403a2a:	test   eax,eax
  403a2c:	je     403a35 <export_data_element_to_ascii@@Base+0x315>
  403a2e:	xor    eax,eax
  403a30:	call   40a7d0 <handle_coda_error@@Base>
  403a35:	mov    eax,DWORD PTR [rsp+0x4c]
  403a39:	lea    ecx,[rax-0x2]
  403a3c:	cmp    ecx,0x4
  403a3f:	mov    rbx,QWORD PTR [rsp+0x30]
  403a44:	jae    403abc <export_data_element_to_ascii@@Base+0x39c>
  403a46:	mov    rdi,QWORD PTR [r14+rbp*8+0x10]
  403a4b:	lea    rsi,[rsp+0x4]
  403a50:	call   403360 <coda_type_get_read_type@plt>
  403a55:	test   eax,eax
  403a57:	je     403a60 <export_data_element_to_ascii@@Base+0x340>
  403a59:	xor    eax,eax
  403a5b:	call   40a7d0 <handle_coda_error@@Base>
  403a60:	mov    eax,DWORD PTR [rsp+0x4]
  403a64:	inc    eax
  403a66:	cmp    eax,0xd
  403a69:	ja     40422d <export_data_element_to_ascii@@Base+0xb0d>
  403a6f:	lea    rcx,[rip+0x858e]        # 40c004 <_IO_stdin_used@@Base+0x4>
  403a76:	movsxd rax,DWORD PTR [rcx+rax*4]
  403a7a:	add    rax,rcx
  403a7d:	jmp    rax
  403a7f:	mov    edi,0x118
  403a84:	add    rdi,QWORD PTR [rip+0xc555]        # 40ffe0 <traverse_info@@Base-0x388>
  403a8b:	lea    rsi,[rsp+0x10]
  403a90:	call   403590 <coda_cursor_read_int32@plt>
  403a95:	test   eax,eax
  403a97:	je     403aa0 <export_data_element_to_ascii@@Base+0x380>
  403a99:	xor    eax,eax
  403a9b:	call   40a7d0 <handle_coda_error@@Base>
  403aa0:	movsxd rdx,DWORD PTR [rsp+0x10]
  403aa5:	lea    rsi,[rip+0x8f67]        # 40ca13 <_IO_stdin_used@@Base+0xa13>
  403aac:	jmp    403ca6 <export_data_element_to_ascii@@Base+0x586>
  403ab1:	mov    r14d,0x1
  403ab7:	jmp    403ce5 <export_data_element_to_ascii@@Base+0x5c5>
  403abc:	cmp    eax,0x6
  403abf:	je     403bb8 <export_data_element_to_ascii@@Base+0x498>
  403ac5:	cmp    eax,0x2
  403ac8:	jae    40422d <export_data_element_to_ascii@@Base+0xb0d>
  403ace:	lea    rdi,[rip+0x885f]        # 40c334 <_IO_stdin_used@@Base+0x334>
  403ad5:	lea    rsi,[rip+0x85b6]        # 40c092 <_IO_stdin_used@@Base+0x92>
  403adc:	lea    rcx,[rip+0x8641]        # 40c124 <_IO_stdin_used@@Base+0x124>
  403ae3:	mov    edx,0x170
  403ae8:	call   403240 <__assert_fail@plt>
  403aed:	lea    rbp,[r8+r9*4]
  403af1:	lea    rcx,[r8+r9*8]
  403af5:	add    rcx,0x78
  403af9:	lea    rax,[r14+r13*1]
  403afd:	add    rax,0x568
  403b03:	sub    rdx,r10
  403b06:	mov    r14d,0x1
  403b0c:	xor    esi,esi
  403b0e:	mov    rbx,rbp
  403b11:	cmp    DWORD PTR [rbp+rsi*4+0x48],0x0
  403b16:	jne    403b49 <export_data_element_to_ascii@@Base+0x429>
  403b18:	jmp    403b60 <export_data_element_to_ascii@@Base+0x440>
  403b1a:	nop    WORD PTR [rax+rax*1+0x0]
  403b20:	lea    rdi,[rbx+0x8]
  403b24:	mov    edi,DWORD PTR [rdi]
  403b26:	mov    DWORD PTR [rsp+rsi*4+0x14],edi
  403b2a:	imul   r14d,edi
  403b2e:	mov    DWORD PTR [rax+rsi*4],0x0
  403b35:	add    rsi,0x2
  403b39:	add    rbx,0x8
  403b3d:	cmp    rdx,rsi
  403b40:	je     403b8a <export_data_element_to_ascii@@Base+0x46a>
  403b42:	cmp    DWORD PTR [rbp+rsi*4+0x48],0x0
  403b47:	je     403b60 <export_data_element_to_ascii@@Base+0x440>
  403b49:	movsxd rdi,DWORD PTR [r11]
  403b4c:	shl    rdi,0x2
  403b50:	add    rdi,QWORD PTR [rcx+rsi*8-0x8]
  403b55:	jmp    403b64 <export_data_element_to_ascii@@Base+0x444>
  403b57:	nop    WORD PTR [rax+rax*1+0x0]
  403b60:	lea    rdi,[rbx+0x4]
  403b64:	mov    edi,DWORD PTR [rdi]
  403b66:	mov    DWORD PTR [rsp+rsi*4+0x10],edi
  403b6a:	imul   r14d,edi
  403b6e:	mov    DWORD PTR [rax+rsi*4-0x4],0x0
  403b76:	cmp    DWORD PTR [rbp+rsi*4+0x4c],0x0
  403b7b:	je     403b20 <export_data_element_to_ascii@@Base+0x400>
  403b7d:	movsxd rdi,DWORD PTR [r11]
  403b80:	shl    rdi,0x2
  403b84:	add    rdi,QWORD PTR [rcx+rsi*8]
  403b88:	jmp    403b24 <export_data_element_to_ascii@@Base+0x404>
  403b8a:	test   r10,r10
  403b8d:	mov    rbx,QWORD PTR [rsp+0x30]
  403b92:	je     403cdc <export_data_element_to_ascii@@Base+0x5bc>
  403b98:	add    r9,rsi
  403b9b:	cmp    DWORD PTR [r8+r9*4+0x48],0x0
  403ba1:	je     403cb5 <export_data_element_to_ascii@@Base+0x595>
  403ba7:	movsxd rax,DWORD PTR [r11]
  403baa:	shl    rax,0x2
  403bae:	add    rax,QWORD PTR [r8+r9*8+0x70]
  403bb3:	jmp    403cbd <export_data_element_to_ascii@@Base+0x59d>
  403bb8:	mov    rdi,QWORD PTR [r14+rbp*8+0x10]
  403bbd:	lea    rsi,[rsp+0x4]
  403bc2:	call   403430 <coda_type_get_special_type@plt>
  403bc7:	test   eax,eax
  403bc9:	je     403bd2 <export_data_element_to_ascii@@Base+0x4b2>
  403bcb:	xor    eax,eax
  403bcd:	call   40a7d0 <handle_coda_error@@Base>
  403bd2:	mov    eax,DWORD PTR [rsp+0x4]
  403bd6:	lea    ecx,[rax-0x1]
  403bd9:	cmp    ecx,0x2
  403bdc:	jae    403e82 <export_data_element_to_ascii@@Base+0x762>
  403be2:	mov    edi,0x118
  403be7:	add    rdi,QWORD PTR [rip+0xc3f2]        # 40ffe0 <traverse_info@@Base-0x388>
  403bee:	lea    rsi,[rsp+0x8]
  403bf3:	call   403390 <coda_cursor_read_double@plt>
  403bf8:	test   eax,eax
  403bfa:	je     403c03 <export_data_element_to_ascii@@Base+0x4e3>
  403bfc:	xor    eax,eax
  403bfe:	call   40a7d0 <handle_coda_error@@Base>
  403c03:	cmp    DWORD PTR [rsp+0x4],0x2
  403c08:	jne    404201 <export_data_element_to_ascii@@Base+0xae1>
  403c0e:	lea    rax,[rip+0xc743]        # 410358 <show_time_as_string@@Base>
  403c15:	cmp    DWORD PTR [rax],0x0
  403c18:	je     404201 <export_data_element_to_ascii@@Base+0xae1>
  403c1e:	vmovsd xmm0,QWORD PTR [rsp+0x8]
  403c24:	call   4033a0 <coda_isNaN@plt>
  403c29:	test   eax,eax
  403c2b:	jne    403c40 <export_data_element_to_ascii@@Base+0x520>
  403c2d:	vmovsd xmm0,QWORD PTR [rsp+0x8]
  403c33:	call   403190 <coda_isInf@plt>
  403c38:	test   eax,eax
  403c3a:	je     40425f <export_data_element_to_ascii@@Base+0xb3f>
  403c40:	vmovups xmm0,XMMWORD PTR [rip+0x850a]        # 40c152 <_IO_stdin_used@@Base+0x152>
  403c48:	vmovups XMMWORD PTR [rsp+0x1b],xmm0
  403c4e:	vmovups xmm0,XMMWORD PTR [rip+0x84f1]        # 40c147 <_IO_stdin_used@@Base+0x147>
  403c56:	vmovaps XMMWORD PTR [rsp+0x10],xmm0
  403c5c:	lea    rax,[rip+0xda01]        # 411664 <show_quotes@@Base>
  403c63:	cmp    DWORD PTR [rax],0x0
  403c66:	je     404255 <export_data_element_to_ascii@@Base+0xb35>
  403c6c:	lea    rsi,[rip+0x8ea5]        # 40cb18 <_IO_stdin_used@@Base+0xb18>
  403c73:	lea    rdx,[rsp+0x10]
  403c78:	jmp    403ca6 <export_data_element_to_ascii@@Base+0x586>
  403c7a:	mov    edi,0x118
  403c7f:	add    rdi,QWORD PTR [rip+0xc35a]        # 40ffe0 <traverse_info@@Base-0x388>
  403c86:	lea    rsi,[rsp+0x10]
  403c8b:	call   403150 <coda_cursor_read_uint32@plt>
  403c90:	test   eax,eax
  403c92:	je     403c9b <export_data_element_to_ascii@@Base+0x57b>
  403c94:	xor    eax,eax
  403c96:	call   40a7d0 <handle_coda_error@@Base>
  403c9b:	mov    edx,DWORD PTR [rsp+0x10]
  403c9f:	lea    rsi,[rip+0x846f]        # 40c115 <_IO_stdin_used@@Base+0x115>
  403ca6:	mov    rdi,rbx
  403ca9:	xor    eax,eax
  403cab:	call   403300 <fprintf@plt>
  403cb0:	jmp    40422d <export_data_element_to_ascii@@Base+0xb0d>
  403cb5:	lea    rax,[r8+r9*4]
  403cb9:	add    rax,0x4
  403cbd:	mov    eax,DWORD PTR [rax]
  403cbf:	mov    DWORD PTR [rsp+rsi*4+0x10],eax
  403cc3:	lea    rcx,[rip+0xc69e]        # 410368 <traverse_info@@Base>
  403cca:	add    rcx,r13
  403ccd:	mov    DWORD PTR [rcx+rsi*4+0x564],0x0
  403cd8:	imul   r14d,eax
  403cdc:	test   r14d,r14d
  403cdf:	je     40423a <export_data_element_to_ascii@@Base+0xb1a>
  403ce5:	mov    QWORD PTR [rsp+0x50],r15
  403cea:	mov    edi,0x118
  403cef:	add    rdi,QWORD PTR [rip+0xc2ea]        # 40ffe0 <traverse_info@@Base-0x388>
  403cf6:	call   403270 <coda_cursor_goto_first_array_element@plt>
  403cfb:	test   eax,eax
  403cfd:	je     403d06 <export_data_element_to_ascii@@Base+0x5e6>
  403cff:	xor    eax,eax
  403d01:	call   40a7d0 <handle_coda_error@@Base>
  403d06:	test   r14d,r14d
  403d09:	jle    403e29 <export_data_element_to_ascii@@Base+0x709>
  403d0f:	lea    rax,[rip+0xc652]        # 410368 <traverse_info@@Base>
  403d16:	mov    rcx,rax
  403d19:	add    rax,r13
  403d1c:	add    rax,0x538
  403d22:	mov    QWORD PTR [rsp+0x60],rax
  403d27:	inc    DWORD PTR [rsp+0x38]
  403d2b:	mov    rax,QWORD PTR [rsp+0x50]
  403d30:	lea    ebp,[rax+0x1]
  403d33:	lea    r12d,[r14-0x1]
  403d37:	movsxd rax,ebp
  403d3a:	lea    rax,[rax+rax*4]
  403d3e:	shl    rax,0x4
  403d42:	add    rax,rcx
  403d45:	add    rax,0x560
  403d4b:	mov    QWORD PTR [rsp+0x58],rax
  403d50:	lea    r15,[rcx+r13*1]
  403d54:	add    r15,0x560
  403d5b:	mov    eax,0x118
  403d60:	add    rax,QWORD PTR [rip+0xc279]        # 40ffe0 <traverse_info@@Base-0x388>
  403d67:	mov    QWORD PTR [rsp+0x30],rax
  403d6c:	xor    r13d,r13d
  403d6f:	jmp    403d8c <export_data_element_to_ascii@@Base+0x66c>
  403d71:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403d7b:	nop    DWORD PTR [rax+rax*1+0x0]
  403d80:	inc    r13d
  403d83:	cmp    r13d,r14d
  403d86:	je     403e29 <export_data_element_to_ascii@@Base+0x709>
  403d8c:	mov    rdi,rbx
  403d8f:	mov    esi,DWORD PTR [rsp+0x38]
  403d93:	mov    edx,ebp
  403d95:	mov    ecx,DWORD PTR [rsp]
  403d98:	call   4037b0 <export_data_element_to_ascii@@Base+0x90>
  403d9d:	cmp    r13d,r12d
  403da0:	jge    403d80 <export_data_element_to_ascii@@Base+0x660>
  403da2:	mov    rdi,QWORD PTR [rsp+0x30]
  403da7:	call   4033b0 <coda_cursor_goto_next_array_element@plt>
  403dac:	test   eax,eax
  403dae:	je     403db7 <export_data_element_to_ascii@@Base+0x697>
  403db0:	xor    eax,eax
  403db2:	call   40a7d0 <handle_coda_error@@Base>
  403db7:	mov    eax,DWORD PTR [rsp+0x40]
  403dbb:	cmp    DWORD PTR [rsp+0x44],eax
  403dbf:	jl     403ddd <export_data_element_to_ascii@@Base+0x6bd>
  403dc1:	lea    rax,[rip+0xc5a0]        # 410368 <traverse_info@@Base>
  403dc8:	mov    eax,DWORD PTR [rax+0xf34]
  403dce:	dec    eax
  403dd0:	cmp    eax,DWORD PTR [rsp+0x50]
  403dd4:	jle    403ddd <export_data_element_to_ascii@@Base+0x6bd>
  403dd6:	mov    rax,QWORD PTR [rsp+0x58]
  403ddb:	inc    DWORD PTR [rax]
  403ddd:	lea    rax,[rip+0xd6dc]        # 4114c0 <show_index@@Base>
  403de4:	cmp    DWORD PTR [rax],0x0
  403de7:	je     403d80 <export_data_element_to_ascii@@Base+0x660>
  403de9:	mov    rax,QWORD PTR [rsp+0x60]
  403dee:	movsxd rax,DWORD PTR [rax]
  403df1:	test   rax,rax
  403df4:	jle    403d80 <export_data_element_to_ascii@@Base+0x660>
  403df6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403e00:	mov    ecx,DWORD PTR [r15+rax*4]
  403e04:	inc    ecx
  403e06:	mov    DWORD PTR [r15+rax*4],ecx
  403e0a:	cmp    ecx,DWORD PTR [rsp+rax*4+0xc]
  403e0e:	jne    403d80 <export_data_element_to_ascii@@Base+0x660>
  403e14:	mov    DWORD PTR [r15+rax*4],0x0
  403e1c:	dec    rax
  403e1f:	test   rax,rax
  403e22:	jg     403e00 <export_data_element_to_ascii@@Base+0x6e0>
  403e24:	jmp    403d80 <export_data_element_to_ascii@@Base+0x660>
  403e29:	mov    edi,0x118
  403e2e:	add    rdi,QWORD PTR [rip+0xc1ab]        # 40ffe0 <traverse_info@@Base-0x388>
  403e35:	call   403320 <coda_cursor_goto_parent@plt>
  403e3a:	jmp    40423a <export_data_element_to_ascii@@Base+0xb1a>
  403e3f:	mov    edi,0x118
  403e44:	add    rdi,QWORD PTR [rip+0xc195]        # 40ffe0 <traverse_info@@Base-0x388>
  403e4b:	lea    rsi,[rsp+0x10]
  403e50:	call   403390 <coda_cursor_read_double@plt>
  403e55:	test   eax,eax
  403e57:	je     403e60 <export_data_element_to_ascii@@Base+0x740>
  403e59:	xor    eax,eax
  403e5b:	call   40a7d0 <handle_coda_error@@Base>
  403e60:	cmp    DWORD PTR [rsp+0x4],0x8
  403e65:	vmovsd xmm0,QWORD PTR [rsp+0x10]
  403e6b:	lea    rax,[rip+0x82a7]        # 40c119 <_IO_stdin_used@@Base+0x119>
  403e72:	lea    rsi,[rip+0x82a5]        # 40c11e <_IO_stdin_used@@Base+0x11e>
  403e79:	cmove  rsi,rax
  403e7d:	jmp    40420e <export_data_element_to_ascii@@Base+0xaee>
  403e82:	cmp    eax,0x3
  403e85:	jne    40422d <export_data_element_to_ascii@@Base+0xb0d>
  403e8b:	mov    edi,0x118
  403e90:	add    rdi,QWORD PTR [rip+0xc149]        # 40ffe0 <traverse_info@@Base-0x388>
  403e97:	lea    rsi,[rsp+0x10]
  403e9c:	call   4034f0 <coda_cursor_read_complex_double_pair@plt>
  403ea1:	test   eax,eax
  403ea3:	je     403eac <export_data_element_to_ascii@@Base+0x78c>
  403ea5:	xor    eax,eax
  403ea7:	call   40a7d0 <handle_coda_error@@Base>
  403eac:	lea    rax,[rip+0xd5fd]        # 4114b0 <ascii_col_sep@@Base>
  403eb3:	mov    rdx,QWORD PTR [rax]
  403eb6:	vmovsd xmm0,QWORD PTR [rsp+0x10]
  403ebc:	vmovsd xmm1,QWORD PTR [rsp+0x18]
  403ec2:	lea    rsi,[rip+0x82b4]        # 40c17d <_IO_stdin_used@@Base+0x17d>
  403ec9:	mov    rdi,rbx
  403ecc:	mov    al,0x2
  403ece:	call   403300 <fprintf@plt>
  403ed3:	jmp    40422d <export_data_element_to_ascii@@Base+0xb0d>
  403ed8:	mov    edi,0x118
  403edd:	add    rdi,QWORD PTR [rip+0xc0fc]        # 40ffe0 <traverse_info@@Base-0x388>
  403ee4:	lea    rsi,[rsp+0x8]
  403ee9:	call   4034c0 <coda_cursor_read_int64@plt>
  403eee:	test   eax,eax
  403ef0:	je     403ef9 <export_data_element_to_ascii@@Base+0x7d9>
  403ef2:	xor    eax,eax
  403ef4:	call   40a7d0 <handle_coda_error@@Base>
  403ef9:	mov    rdi,QWORD PTR [rsp+0x8]
  403efe:	lea    rbp,[rsp+0x10]
  403f03:	mov    rsi,rbp
  403f06:	call   403610 <coda_str64@plt>
  403f0b:	jmp    4041af <export_data_element_to_ascii@@Base+0xa8f>
  403f10:	mov    edi,0x118
  403f15:	add    rdi,QWORD PTR [rip+0xc0c4]        # 40ffe0 <traverse_info@@Base-0x388>
  403f1c:	lea    rsi,[rsp+0x10]
  403f21:	call   403370 <coda_cursor_get_string_length@plt>
  403f26:	test   eax,eax
  403f28:	je     403f31 <export_data_element_to_ascii@@Base+0x811>
  403f2a:	xor    eax,eax
  403f2c:	call   40a7d0 <handle_coda_error@@Base>
  403f31:	mov    rbp,QWORD PTR [rsp+0x10]
  403f36:	inc    rbp
  403f39:	mov    rdi,rbp
  403f3c:	call   4033f0 <malloc@plt>
  403f41:	mov    r14,rax
  403f44:	test   rax,rax
  403f47:	jne    403f7b <export_data_element_to_ascii@@Base+0x85b>
  403f49:	lea    rsi,[rip+0x810d]        # 40c05d <_IO_stdin_used@@Base+0x5d>
  403f50:	lea    rcx,[rip+0x813b]        # 40c092 <_IO_stdin_used@@Base+0x92>
  403f57:	mov    edi,0xffffffff
  403f5c:	mov    rdx,rbp
  403f5f:	mov    r8d,0x7e
  403f65:	xor    eax,eax
  403f67:	call   4030d0 <coda_set_error@plt>
  403f6c:	xor    eax,eax
  403f6e:	call   40a7d0 <handle_coda_error@@Base>
  403f73:	mov    rbp,QWORD PTR [rsp+0x10]
  403f78:	inc    rbp
  403f7b:	mov    edi,0x118
  403f80:	add    rdi,QWORD PTR [rip+0xc059]        # 40ffe0 <traverse_info@@Base-0x388>
  403f87:	mov    rsi,r14
  403f8a:	mov    rdx,rbp
  403f8d:	call   403310 <coda_cursor_read_string@plt>
  403f92:	test   eax,eax
  403f94:	je     403f9d <export_data_element_to_ascii@@Base+0x87d>
  403f96:	xor    eax,eax
  403f98:	call   40a7d0 <handle_coda_error@@Base>
  403f9d:	lea    rax,[rip+0xd6c0]        # 411664 <show_quotes@@Base>
  403fa4:	cmp    DWORD PTR [rax],0x0
  403fa7:	je     40421a <export_data_element_to_ascii@@Base+0xafa>
  403fad:	lea    rsi,[rip+0x8b64]        # 40cb18 <_IO_stdin_used@@Base+0xb18>
  403fb4:	mov    rdi,rbx
  403fb7:	mov    rdx,r14
  403fba:	xor    eax,eax
  403fbc:	call   403300 <fprintf@plt>
  403fc1:	jmp    404225 <export_data_element_to_ascii@@Base+0xb05>
  403fc6:	mov    edi,0x118
  403fcb:	add    rdi,QWORD PTR [rip+0xc00e]        # 40ffe0 <traverse_info@@Base-0x388>
  403fd2:	lea    rsi,[rsp+0x10]
  403fd7:	call   403540 <coda_cursor_get_bit_size@plt>
  403fdc:	test   eax,eax
  403fde:	je     403fe7 <export_data_element_to_ascii@@Base+0x8c7>
  403fe0:	xor    eax,eax
  403fe2:	call   40a7d0 <handle_coda_error@@Base>
  403fe7:	mov    r15,QWORD PTR [rsp+0x10]
  403fec:	mov    rax,r15
  403fef:	sar    rax,0x3
  403ff3:	xor    ebp,ebp
  403ff5:	test   r15b,0x7
  403ff9:	setne  bpl
  403ffd:	add    rbp,rax
  404000:	mov    rdi,rbp
  404003:	call   4033f0 <malloc@plt>
  404008:	mov    r14,rax
  40400b:	test   rax,rax
  40400e:	jne    40403f <export_data_element_to_ascii@@Base+0x91f>
  404010:	lea    rsi,[rip+0x8046]        # 40c05d <_IO_stdin_used@@Base+0x5d>
  404017:	lea    rcx,[rip+0x8074]        # 40c092 <_IO_stdin_used@@Base+0x92>
  40401e:	mov    edi,0xffffffff
  404023:	mov    rdx,rbp
  404026:	mov    r8d,0xa3
  40402c:	xor    eax,eax
  40402e:	call   4030d0 <coda_set_error@plt>
  404033:	xor    eax,eax
  404035:	call   40a7d0 <handle_coda_error@@Base>
  40403a:	mov    r15,QWORD PTR [rsp+0x10]
  40403f:	mov    edi,0x118
  404044:	add    rdi,QWORD PTR [rip+0xbf95]        # 40ffe0 <traverse_info@@Base-0x388>
  40404b:	mov    rsi,r14
  40404e:	xor    edx,edx
  404050:	mov    rcx,r15
  404053:	call   403600 <coda_cursor_read_bits@plt>
  404058:	test   eax,eax
  40405a:	je     404063 <export_data_element_to_ascii@@Base+0x943>
  40405c:	xor    eax,eax
  40405e:	call   40a7d0 <handle_coda_error@@Base>
  404063:	test   rbp,rbp
  404066:	jle    404225 <export_data_element_to_ascii@@Base+0xb05>
  40406c:	lea    r12,[rip+0x7fc9]        # 40c03c <_IO_stdin_used@@Base+0x3c>
  404073:	lea    r13,[rip+0x808f]        # 40c109 <_IO_stdin_used@@Base+0x109>
  40407a:	xor    r15d,r15d
  40407d:	jmp    4040a4 <export_data_element_to_ascii@@Base+0x984>
  40407f:	mov    esi,0x2
  404084:	mov    edx,0x1
  404089:	lea    rdi,[rip+0x8073]        # 40c103 <_IO_stdin_used@@Base+0x103>
  404090:	mov    rcx,rbx
  404093:	call   4035a0 <fwrite@plt>
  404098:	inc    r15
  40409b:	cmp    rbp,r15
  40409e:	je     404225 <export_data_element_to_ascii@@Base+0xb05>
  4040a4:	movsx  edi,BYTE PTR [r14+r15*1]
  4040a9:	lea    eax,[rdi-0x7]
  4040ac:	cmp    eax,0x6
  4040af:	ja     4040cd <export_data_element_to_ascii@@Base+0x9ad>
  4040b1:	movsxd rax,DWORD PTR [r12+rax*4]
  4040b5:	add    rax,r12
  4040b8:	jmp    rax
  4040ba:	mov    esi,0x2
  4040bf:	mov    edx,0x1
  4040c4:	lea    rdi,[rip+0x802c]        # 40c0f7 <_IO_stdin_used@@Base+0xf7>
  4040cb:	jmp    404090 <export_data_element_to_ascii@@Base+0x970>
  4040cd:	cmp    edi,0x5c
  4040d0:	jne    404149 <export_data_element_to_ascii@@Base+0xa29>
  4040d2:	mov    esi,0x2
  4040d7:	mov    edx,0x1
  4040dc:	lea    rdi,[rip+0x8029]        # 40c10c <_IO_stdin_used@@Base+0x10c>
  4040e3:	jmp    404090 <export_data_element_to_ascii@@Base+0x970>
  4040e5:	mov    esi,0x2
  4040ea:	mov    edx,0x1
  4040ef:	lea    rdi,[rip+0x8007]        # 40c0fd <_IO_stdin_used@@Base+0xfd>
  4040f6:	jmp    404090 <export_data_element_to_ascii@@Base+0x970>
  4040f8:	mov    esi,0x2
  4040fd:	mov    edx,0x1
  404102:	lea    rdi,[rip+0x7ff1]        # 40c0fa <_IO_stdin_used@@Base+0xfa>
  404109:	jmp    404090 <export_data_element_to_ascii@@Base+0x970>
  40410b:	mov    esi,0x2
  404110:	mov    edx,0x1
  404115:	lea    rdi,[rip+0x7fe4]        # 40c100 <_IO_stdin_used@@Base+0x100>
  40411c:	jmp    404090 <export_data_element_to_ascii@@Base+0x970>
  404121:	mov    esi,0x2
  404126:	mov    edx,0x1
  40412b:	lea    rdi,[rip+0x7fd4]        # 40c106 <_IO_stdin_used@@Base+0x106>
  404132:	jmp    404090 <export_data_element_to_ascii@@Base+0x970>
  404137:	mov    esi,0x2
  40413c:	mov    edx,0x1
  404141:	mov    rdi,r13
  404144:	jmp    404090 <export_data_element_to_ascii@@Base+0x970>
  404149:	cmp    dil,0x20
  40414d:	jl     404162 <export_data_element_to_ascii@@Base+0xa42>
  40414f:	cmp    dil,0x7f
  404153:	je     404162 <export_data_element_to_ascii@@Base+0xa42>
  404155:	mov    rsi,rbx
  404158:	call   4032b0 <fputc@plt>
  40415d:	jmp    404098 <export_data_element_to_ascii@@Base+0x978>
  404162:	movzx  edx,dil
  404166:	mov    rdi,rbx
  404169:	lea    rsi,[rip+0x7f9f]        # 40c10f <_IO_stdin_used@@Base+0x10f>
  404170:	xor    eax,eax
  404172:	call   403300 <fprintf@plt>
  404177:	jmp    404098 <export_data_element_to_ascii@@Base+0x978>
  40417c:	mov    edi,0x118
  404181:	add    rdi,QWORD PTR [rip+0xbe58]        # 40ffe0 <traverse_info@@Base-0x388>
  404188:	lea    rsi,[rsp+0x8]
  40418d:	call   403380 <coda_cursor_read_uint64@plt>
  404192:	test   eax,eax
  404194:	je     40419d <export_data_element_to_ascii@@Base+0xa7d>
  404196:	xor    eax,eax
  404198:	call   40a7d0 <handle_coda_error@@Base>
  40419d:	mov    rdi,QWORD PTR [rsp+0x8]
  4041a2:	lea    rbp,[rsp+0x10]
  4041a7:	mov    rsi,rbp
  4041aa:	call   403120 <coda_str64u@plt>
  4041af:	mov    rdi,rbp
  4041b2:	mov    rsi,rbx
  4041b5:	call   403250 <fputs@plt>
  4041ba:	jmp    40422d <export_data_element_to_ascii@@Base+0xb0d>
  4041bc:	mov    edi,0x118
  4041c1:	add    rdi,QWORD PTR [rip+0xbe18]        # 40ffe0 <traverse_info@@Base-0x388>
  4041c8:	lea    rsi,[rsp+0x10]
  4041cd:	call   403420 <coda_cursor_read_char@plt>
  4041d2:	test   eax,eax
  4041d4:	je     4041dd <export_data_element_to_ascii@@Base+0xabd>
  4041d6:	xor    eax,eax
  4041d8:	call   40a7d0 <handle_coda_error@@Base>
  4041dd:	lea    rax,[rip+0xd480]        # 411664 <show_quotes@@Base>
  4041e4:	cmp    DWORD PTR [rax],0x0
  4041e7:	movsx  edx,BYTE PTR [rsp+0x10]
  4041ec:	je     404249 <export_data_element_to_ascii@@Base+0xb29>
  4041ee:	lea    rsi,[rip+0x7e63]        # 40c058 <_IO_stdin_used@@Base+0x58>
  4041f5:	mov    rdi,rbx
  4041f8:	xor    eax,eax
  4041fa:	call   403300 <fprintf@plt>
  4041ff:	jmp    40422d <export_data_element_to_ascii@@Base+0xb0d>
  404201:	vmovsd xmm0,QWORD PTR [rsp+0x8]
  404207:	lea    rsi,[rip+0x7f10]        # 40c11e <_IO_stdin_used@@Base+0x11e>
  40420e:	mov    rdi,rbx
  404211:	mov    al,0x1
  404213:	call   403300 <fprintf@plt>
  404218:	jmp    40422d <export_data_element_to_ascii@@Base+0xb0d>
  40421a:	mov    rdi,r14
  40421d:	mov    rsi,rbx
  404220:	call   403250 <fputs@plt>
  404225:	mov    rdi,r14
  404228:	call   403070 <free@plt>
  40422d:	mov    edi,0xa
  404232:	mov    rsi,rbx
  404235:	call   4032b0 <fputc@plt>
  40423a:	add    rsp,0x68
  40423e:	pop    rbx
  40423f:	pop    r12
  404241:	pop    r13
  404243:	pop    r14
  404245:	pop    r15
  404247:	pop    rbp
  404248:	ret    
  404249:	mov    edi,edx
  40424b:	mov    rsi,rbx
  40424e:	call   4032b0 <fputc@plt>
  404253:	jmp    40422d <export_data_element_to_ascii@@Base+0xb0d>
  404255:	lea    rdi,[rsp+0x10]
  40425a:	jmp    4041b2 <export_data_element_to_ascii@@Base+0xa92>
  40425f:	vmovsd xmm0,QWORD PTR [rsp+0x8]
  404265:	lea    rdi,[rip+0x7ef6]        # 40c162 <_IO_stdin_used@@Base+0x162>
  40426c:	lea    rsi,[rsp+0x10]
  404271:	call   4030f0 <coda_time_double_to_string@plt>
  404276:	test   eax,eax
  404278:	je     403c5c <export_data_element_to_ascii@@Base+0x53c>
  40427e:	xor    eax,eax
  404280:	call   40a7d0 <handle_coda_error@@Base>
  404285:	jmp    403c5c <export_data_element_to_ascii@@Base+0x53c>
  40428a:	lea    rdi,[rip+0x80a3]        # 40c334 <_IO_stdin_used@@Base+0x334>
  404291:	lea    rsi,[rip+0x7dfa]        # 40c092 <_IO_stdin_used@@Base+0x92>
  404298:	lea    rcx,[rip+0x7e85]        # 40c124 <_IO_stdin_used@@Base+0x124>
  40429f:	mov    edx,0x126
  4042a4:	call   403240 <__assert_fail@plt>
  4042a9:	nop    DWORD PTR [rax+0x0]

00000000004042b0 <print_debug_data@@Base>:
  4042b0:	push   rbp
  4042b1:	push   r15
  4042b3:	push   r14
  4042b5:	push   rbx
  4042b6:	sub    rsp,0x328
  4042bd:	mov    r14d,edx
  4042c0:	mov    rbx,rsi
  4042c3:	mov    rbp,rdi
  4042c6:	lea    r15,[rip+0xc09b]        # 410368 <traverse_info@@Base>
  4042cd:	mov    rdi,QWORD PTR [r15]
  4042d0:	test   rbp,rbp
  4042d3:	je     4042ee <print_debug_data@@Base+0x3e>
  4042d5:	lea    r8,[rsp+0x8]
  4042da:	mov    rsi,rbp
  4042dd:	mov    rdx,rbx
  4042e0:	mov    ecx,r14d
  4042e3:	call   4033c0 <coda_open_as@plt>
  4042e8:	test   eax,eax
  4042ea:	jne    4042fc <print_debug_data@@Base+0x4c>
  4042ec:	jmp    40434b <print_debug_data@@Base+0x9b>
  4042ee:	lea    rsi,[rsp+0x8]
  4042f3:	call   4030e0 <coda_open@plt>
  4042f8:	test   eax,eax
  4042fa:	je     40434b <print_debug_data@@Base+0x9b>
  4042fc:	call   4035d0 <coda_get_errno@plt>
  404301:	cmp    DWORD PTR [rax],0xffffffeb
  404304:	jne    404344 <print_debug_data@@Base+0x94>
  404306:	xor    edi,edi
  404308:	call   403130 <coda_set_option_use_mmap@plt>
  40430d:	mov    rdi,QWORD PTR [r15]
  404310:	test   rbp,rbp
  404313:	je     40432a <print_debug_data@@Base+0x7a>
  404315:	lea    r8,[rsp+0x8]
  40431a:	mov    rsi,rbp
  40431d:	mov    rdx,rbx
  404320:	mov    ecx,r14d
  404323:	call   4033c0 <coda_open_as@plt>
  404328:	jmp    404334 <print_debug_data@@Base+0x84>
  40432a:	lea    rsi,[rsp+0x8]
  40432f:	call   4030e0 <coda_open@plt>
  404334:	mov    ebx,eax
  404336:	mov    edi,0x1
  40433b:	call   403130 <coda_set_option_use_mmap@plt>
  404340:	test   ebx,ebx
  404342:	je     40434b <print_debug_data@@Base+0x9b>
  404344:	xor    eax,eax
  404346:	call   40a7d0 <handle_coda_error@@Base>
  40434b:	mov    rdi,QWORD PTR [rsp+0x8]
  404350:	lea    rsi,[rsp+0x14]
  404355:	call   403200 <coda_get_product_format@plt>
  40435a:	test   eax,eax
  40435c:	je     404365 <print_debug_data@@Base+0xb5>
  40435e:	xor    eax,eax
  404360:	call   40a7d0 <handle_coda_error@@Base>
  404365:	xor    eax,eax
  404367:	cmp    DWORD PTR [rsp+0x14],0x3
  40436c:	setb   al
  40436f:	mov    DWORD PTR [rip+0xbfb3],eax        # 410328 <__data_start@@Base+0x10>
  404375:	mov    rsi,QWORD PTR [rsp+0x8]
  40437a:	lea    rdi,[rsp+0x18]
  40437f:	call   403290 <coda_cursor_set_product@plt>
  404384:	test   eax,eax
  404386:	je     40438f <print_debug_data@@Base+0xdf>
  404388:	xor    eax,eax
  40438a:	call   40a7d0 <handle_coda_error@@Base>
  40438f:	lea    rax,[rip+0xd132]        # 4114c8 <starting_path@@Base>
  404396:	mov    rsi,QWORD PTR [rax]
  404399:	test   rsi,rsi
  40439c:	je     4043b3 <print_debug_data@@Base+0x103>
  40439e:	lea    rdi,[rsp+0x18]
  4043a3:	call   4034d0 <coda_cursor_goto@plt>
  4043a8:	test   eax,eax
  4043aa:	je     4043b3 <print_debug_data@@Base+0x103>
  4043ac:	xor    eax,eax
  4043ae:	call   40a7d0 <handle_coda_error@@Base>
  4043b3:	xor    edi,edi
  4043b5:	call   403090 <coda_set_option_perform_boundary_checks@plt>
  4043ba:	lea    rdi,[rsp+0x18]
  4043bf:	xor    esi,esi
  4043c1:	call   4043e0 <print_debug_data@@Base+0x130>
  4043c6:	mov    rdi,QWORD PTR [rsp+0x8]
  4043cb:	call   4034b0 <coda_close@plt>
  4043d0:	add    rsp,0x328
  4043d7:	pop    rbx
  4043d8:	pop    r14
  4043da:	pop    r15
  4043dc:	pop    rbp
  4043dd:	ret    
  4043de:	xchg   ax,ax
  4043e0:	push   rbp
  4043e1:	push   r15
  4043e3:	push   r14
  4043e5:	push   r13
  4043e7:	push   r12
  4043e9:	push   rbx
  4043ea:	sub    rsp,0x398
  4043f1:	mov    QWORD PTR [rsp+0x18],rsi
  4043f6:	mov    r13,rdi
  4043f9:	lea    rsi,[rsp+0x78]
  4043fe:	call   4031d0 <coda_cursor_has_attributes@plt>
  404403:	test   eax,eax
  404405:	je     40440e <print_debug_data@@Base+0x15e>
  404407:	xor    eax,eax
  404409:	call   40a7d0 <handle_coda_error@@Base>
  40440e:	cmp    DWORD PTR [rsp+0x78],0x0
  404413:	je     404457 <print_debug_data@@Base+0x1a7>
  404415:	mov    rdi,r13
  404418:	call   403410 <coda_cursor_goto_attributes@plt>
  40441d:	test   eax,eax
  40441f:	je     404428 <print_debug_data@@Base+0x178>
  404421:	xor    eax,eax
  404423:	call   40a7d0 <handle_coda_error@@Base>
  404428:	lea    rdi,[rip+0x7de9]        # 40c218 <_IO_stdin_used@@Base+0x218>
  40442f:	xor    eax,eax
  404431:	call   405420 <print_debug_data@@Base+0x1170>
  404436:	inc    DWORD PTR [rip+0xbefc]        # 410338 <__bss_start@@Base+0x8>
  40443c:	mov    rdi,r13
  40443f:	mov    rsi,QWORD PTR [rsp+0x18]
  404444:	call   4043e0 <print_debug_data@@Base+0x130>
  404449:	dec    DWORD PTR [rip+0xbee9]        # 410338 <__bss_start@@Base+0x8>
  40444f:	mov    rdi,r13
  404452:	call   403320 <coda_cursor_goto_parent@plt>
  404457:	lea    rsi,[rsp+0x7c]
  40445c:	mov    rdi,r13
  40445f:	call   4031e0 <coda_cursor_get_type_class@plt>
  404464:	test   eax,eax
  404466:	je     40446f <print_debug_data@@Base+0x1bf>
  404468:	xor    eax,eax
  40446a:	call   40a7d0 <handle_coda_error@@Base>
  40446f:	mov    eax,DWORD PTR [rsp+0x7c]
  404473:	cmp    rax,0x6
  404477:	ja     4053c2 <print_debug_data@@Base+0x1112>
  40447d:	lea    rcx,[rip+0x7d14]        # 40c198 <_IO_stdin_used@@Base+0x198>
  404484:	movsxd rax,DWORD PTR [rcx+rax*4]
  404488:	add    rax,rcx
  40448b:	jmp    rax
  40448d:	lea    rsi,[rsp+0x8]
  404492:	mov    rdi,r13
  404495:	call   4034a0 <coda_cursor_has_ascii_content@plt>
  40449a:	test   eax,eax
  40449c:	je     4044a5 <print_debug_data@@Base+0x1f5>
  40449e:	xor    eax,eax
  4044a0:	call   40a7d0 <handle_coda_error@@Base>
  4044a5:	cmp    DWORD PTR [rsp+0x8],0x0
  4044aa:	je     404570 <print_debug_data@@Base+0x2c0>
  4044b0:	lea    rsi,[rsp+0x80]
  4044b8:	mov    rdi,r13
  4044bb:	call   403370 <coda_cursor_get_string_length@plt>
  4044c0:	test   eax,eax
  4044c2:	je     4044cb <print_debug_data@@Base+0x21b>
  4044c4:	xor    eax,eax
  4044c6:	call   40a7d0 <handle_coda_error@@Base>
  4044cb:	mov    rbp,QWORD PTR [rsp+0x80]
  4044d3:	inc    rbp
  4044d6:	mov    rdi,rbp
  4044d9:	call   4033f0 <malloc@plt>
  4044de:	mov    rbx,rax
  4044e1:	test   rax,rax
  4044e4:	jne    40451b <print_debug_data@@Base+0x26b>
  4044e6:	lea    rsi,[rip+0x7b70]        # 40c05d <_IO_stdin_used@@Base+0x5d>
  4044ed:	lea    rcx,[rip+0x7d3f]        # 40c233 <_IO_stdin_used@@Base+0x233>
  4044f4:	mov    edi,0xffffffff
  4044f9:	mov    rdx,rbp
  4044fc:	mov    r8d,0x19a
  404502:	xor    eax,eax
  404504:	call   4030d0 <coda_set_error@plt>
  404509:	xor    eax,eax
  40450b:	call   40a7d0 <handle_coda_error@@Base>
  404510:	mov    rbp,QWORD PTR [rsp+0x80]
  404518:	inc    rbp
  40451b:	mov    rdi,r13
  40451e:	mov    rsi,rbx
  404521:	mov    rdx,rbp
  404524:	call   403310 <coda_cursor_read_string@plt>
  404529:	test   eax,eax
  40452b:	je     404534 <print_debug_data@@Base+0x284>
  40452d:	xor    eax,eax
  40452f:	call   40a7d0 <handle_coda_error@@Base>
  404534:	lea    rdi,[rip+0x84a6]        # 40c9e1 <_IO_stdin_used@@Base+0x9e1>
  40453b:	xor    eax,eax
  40453d:	call   405420 <print_debug_data@@Base+0x1170>
  404542:	mov    rsi,QWORD PTR [rsp+0x80]
  40454a:	mov    rdi,rbx
  40454d:	call   4055e0 <print_debug_data@@Base+0x1330>
  404552:	mov    rsi,QWORD PTR [rsp+0x80]
  40455a:	lea    rdi,[rip+0x7d37]        # 40c298 <_IO_stdin_used@@Base+0x298>
  404561:	xor    eax,eax
  404563:	call   405530 <print_debug_data@@Base+0x1280>
  404568:	mov    rdi,rbx
  40456b:	call   403070 <free@plt>
  404570:	lea    rsi,[rsp+0x50]
  404575:	mov    rdi,r13
  404578:	call   4032e0 <coda_cursor_get_read_type@plt>
  40457d:	test   eax,eax
  40457f:	je     404588 <print_debug_data@@Base+0x2d8>
  404581:	xor    eax,eax
  404583:	call   40a7d0 <handle_coda_error@@Base>
  404588:	mov    eax,DWORD PTR [rsp+0x50]
  40458c:	inc    eax
  40458e:	cmp    eax,0xd
  404591:	ja     4053c2 <print_debug_data@@Base+0x1112>
  404597:	lea    rcx,[rip+0x7c26]        # 40c1c4 <_IO_stdin_used@@Base+0x1c4>
  40459e:	movsxd rax,DWORD PTR [rcx+rax*4]
  4045a2:	add    rax,rcx
  4045a5:	jmp    rax
  4045a7:	cmp    DWORD PTR [rsp+0x8],0x0
  4045ac:	jne    4053c2 <print_debug_data@@Base+0x1112>
  4045b2:	lea    rdi,[rip+0x7d08]        # 40c2c1 <_IO_stdin_used@@Base+0x2c1>
  4045b9:	lea    rsi,[rip+0x7c73]        # 40c233 <_IO_stdin_used@@Base+0x233>
  4045c0:	lea    rcx,[rip+0x7d0c]        # 40c2d3 <_IO_stdin_used@@Base+0x2d3>
  4045c7:	mov    edx,0x224
  4045cc:	call   403240 <__assert_fail@plt>
  4045d1:	lea    rsi,[rsp+0x20]
  4045d6:	mov    rdi,r13
  4045d9:	call   403110 <coda_cursor_get_num_elements@plt>
  4045de:	test   eax,eax
  4045e0:	je     4045e9 <print_debug_data@@Base+0x339>
  4045e2:	xor    eax,eax
  4045e4:	call   40a7d0 <handle_coda_error@@Base>
  4045e9:	cmp    QWORD PTR [rsp+0x20],0x0
  4045ef:	jle    4053c2 <print_debug_data@@Base+0x1112>
  4045f5:	lea    rsi,[rsp+0x50]
  4045fa:	mov    rdi,r13
  4045fd:	call   403180 <coda_cursor_get_type@plt>
  404602:	test   eax,eax
  404604:	je     40460d <print_debug_data@@Base+0x35d>
  404606:	xor    eax,eax
  404608:	call   40a7d0 <handle_coda_error@@Base>
  40460d:	mov    rdi,QWORD PTR [rsp+0x50]
  404612:	lea    rsi,[rsp+0x74]
  404617:	call   403440 <coda_type_get_record_union_status@plt>
  40461c:	test   eax,eax
  40461e:	je     404627 <print_debug_data@@Base+0x377>
  404620:	xor    eax,eax
  404622:	call   40a7d0 <handle_coda_error@@Base>
  404627:	cmp    DWORD PTR [rsp+0x74],0x0
  40462c:	je     404a7b <print_debug_data@@Base+0x7cb>
  404632:	lea    rsi,[rsp+0x8]
  404637:	mov    rdi,r13
  40463a:	call   403570 <coda_cursor_get_available_union_field_index@plt>
  40463f:	test   eax,eax
  404641:	je     40464a <print_debug_data@@Base+0x39a>
  404643:	xor    eax,eax
  404645:	call   40a7d0 <handle_coda_error@@Base>
  40464a:	mov    rdi,QWORD PTR [rsp+0x50]
  40464f:	mov    rsi,QWORD PTR [rsp+0x8]
  404654:	lea    rdx,[rsp+0x10]
  404659:	call   4035f0 <coda_type_get_record_field_name@plt>
  40465e:	test   eax,eax
  404660:	je     404669 <print_debug_data@@Base+0x3b9>
  404662:	xor    eax,eax
  404664:	call   40a7d0 <handle_coda_error@@Base>
  404669:	mov    rsi,QWORD PTR [rsp+0x8]
  40466e:	mov    rdi,r13
  404671:	call   4032c0 <coda_cursor_goto_record_field_by_index@plt>
  404676:	test   eax,eax
  404678:	je     404681 <print_debug_data@@Base+0x3d1>
  40467a:	xor    eax,eax
  40467c:	call   40a7d0 <handle_coda_error@@Base>
  404681:	mov    rsi,QWORD PTR [rsp+0x10]
  404686:	lea    rdi,[rip+0x8485]        # 40cb12 <_IO_stdin_used@@Base+0xb12>
  40468d:	xor    eax,eax
  40468f:	call   405420 <print_debug_data@@Base+0x1170>
  404694:	cmp    DWORD PTR [rip+0xbc8d],0x0        # 410328 <__data_start@@Base+0x10>
  40469b:	je     4046fd <print_debug_data@@Base+0x44d>
  40469d:	lea    rsi,[rsp+0x48]
  4046a2:	mov    rdi,r13
  4046a5:	call   4035b0 <coda_cursor_get_file_bit_offset@plt>
  4046aa:	test   eax,eax
  4046ac:	je     4046b5 <print_debug_data@@Base+0x405>
  4046ae:	xor    eax,eax
  4046b0:	call   40a7d0 <handle_coda_error@@Base>
  4046b5:	mov    rdi,QWORD PTR [rsp+0x48]
  4046ba:	test   rdi,rdi
  4046bd:	js     4046fd <print_debug_data@@Base+0x44d>
  4046bf:	shr    rdi,0x3
  4046c3:	lea    rbx,[rsp+0x80]
  4046cb:	mov    rsi,rbx
  4046ce:	call   403610 <coda_str64@plt>
  4046d3:	lea    rdi,[rip+0x7b4c]        # 40c226 <_IO_stdin_used@@Base+0x226>
  4046da:	mov    rsi,rbx
  4046dd:	xor    eax,eax
  4046df:	call   405530 <print_debug_data@@Base+0x1280>
  4046e4:	mov    rsi,QWORD PTR [rsp+0x48]
  4046e9:	and    rsi,0x7
  4046ed:	je     4046fd <print_debug_data@@Base+0x44d>
  4046ef:	lea    rdi,[rip+0x7b34]        # 40c22a <_IO_stdin_used@@Base+0x22a>
  4046f6:	xor    eax,eax
  4046f8:	call   405530 <print_debug_data@@Base+0x1280>
  4046fd:	lea    rdi,[rip+0x867c]        # 40cd80 <_IO_stdin_used@@Base+0xd80>
  404704:	xor    eax,eax
  404706:	call   405530 <print_debug_data@@Base+0x1280>
  40470b:	inc    DWORD PTR [rip+0xbc27]        # 410338 <__bss_start@@Base+0x8>
  404711:	lea    rax,[rip+0xbc14]        # 41032c <max_depth@@Base>
  404718:	mov    eax,DWORD PTR [rax]
  40471a:	test   eax,eax
  40471c:	js     404cce <print_debug_data@@Base+0xa1e>
  404722:	cmp    eax,DWORD PTR [rsp+0x18]
  404726:	jg     404cce <print_debug_data@@Base+0xa1e>
  40472c:	lea    rdi,[rip+0x7afb]        # 40c22e <_IO_stdin_used@@Base+0x22e>
  404733:	xor    eax,eax
  404735:	call   405420 <print_debug_data@@Base+0x1170>
  40473a:	dec    DWORD PTR [rip+0xbbf8]        # 410338 <__bss_start@@Base+0x8>
  404740:	jmp    4053ba <print_debug_data@@Base+0x110a>
  404745:	lea    rsi,[rsp+0x10]
  40474a:	lea    rdx,[rsp+0x80]
  404752:	mov    rdi,r13
  404755:	call   403490 <coda_cursor_get_array_dim@plt>
  40475a:	test   eax,eax
  40475c:	je     404765 <print_debug_data@@Base+0x4b5>
  40475e:	xor    eax,eax
  404760:	call   40a7d0 <handle_coda_error@@Base>
  404765:	mov    ebp,DWORD PTR [rsp+0x10]
  404769:	test   ebp,ebp
  40476b:	js     4053c2 <print_debug_data@@Base+0x1112>
  404771:	test   ebp,ebp
  404773:	je     404c01 <print_debug_data@@Base+0x951>
  404779:	lea    rdx,[rbp*4+0x0]
  404781:	lea    rdi,[rsp+0x20]
  404786:	xor    ebx,ebx
  404788:	xor    esi,esi
  40478a:	call   403280 <memset@plt>
  40478f:	cmp    ebp,0x10
  404792:	jae    404ce8 <print_debug_data@@Base+0xa38>
  404798:	mov    r12d,0x1
  40479e:	jmp    4051d0 <print_debug_data@@Base+0xf20>
  4047a3:	lea    rsi,[rsp+0x50]
  4047a8:	mov    rdi,r13
  4047ab:	call   403260 <coda_cursor_get_special_type@plt>
  4047b0:	test   eax,eax
  4047b2:	je     4047bb <print_debug_data@@Base+0x50b>
  4047b4:	xor    eax,eax
  4047b6:	call   40a7d0 <handle_coda_error@@Base>
  4047bb:	cmp    DWORD PTR [rsp+0x50],0x0
  4047c0:	je     4048b0 <print_debug_data@@Base+0x600>
  4047c6:	lea    rbx,[rsp+0x80]
  4047ce:	mov    edx,0x310
  4047d3:	mov    rdi,rbx
  4047d6:	mov    rsi,r13
  4047d9:	call   403350 <memcpy@plt>
  4047de:	mov    rdi,rbx
  4047e1:	call   403560 <coda_cursor_use_base_type_of_special_type@plt>
  4047e6:	test   eax,eax
  4047e8:	je     4047f1 <print_debug_data@@Base+0x541>
  4047ea:	xor    eax,eax
  4047ec:	call   40a7d0 <handle_coda_error@@Base>
  4047f1:	lea    rdi,[rsp+0x80]
  4047f9:	mov    rsi,QWORD PTR [rsp+0x18]
  4047fe:	call   4043e0 <print_debug_data@@Base+0x130>
  404803:	mov    edi,DWORD PTR [rsp+0x50]
  404807:	jmp    4048b2 <print_debug_data@@Base+0x602>
  40480c:	lea    rsi,[rsp+0x80]
  404814:	mov    rdi,r13
  404817:	call   403150 <coda_cursor_read_uint32@plt>
  40481c:	test   eax,eax
  40481e:	je     404827 <print_debug_data@@Base+0x577>
  404820:	xor    eax,eax
  404822:	call   40a7d0 <handle_coda_error@@Base>
  404827:	mov    esi,DWORD PTR [rsp+0x80]
  40482e:	lea    rdi,[rip+0x7a81]        # 40c2b6 <_IO_stdin_used@@Base+0x2b6>
  404835:	jmp    40495f <print_debug_data@@Base+0x6af>
  40483a:	lea    rsi,[rsp+0x80]
  404842:	mov    rdi,r13
  404845:	call   403590 <coda_cursor_read_int32@plt>
  40484a:	test   eax,eax
  40484c:	je     404855 <print_debug_data@@Base+0x5a5>
  40484e:	xor    eax,eax
  404850:	call   40a7d0 <handle_coda_error@@Base>
  404855:	movsxd rsi,DWORD PTR [rsp+0x80]
  40485d:	lea    rdi,[rip+0x7a4d]        # 40c2b1 <_IO_stdin_used@@Base+0x2b1>
  404864:	jmp    40495f <print_debug_data@@Base+0x6af>
  404869:	lea    rsi,[rsp+0x80]
  404871:	mov    rdi,r13
  404874:	call   403390 <coda_cursor_read_double@plt>
  404879:	test   eax,eax
  40487b:	je     404884 <print_debug_data@@Base+0x5d4>
  40487d:	xor    eax,eax
  40487f:	call   40a7d0 <handle_coda_error@@Base>
  404884:	cmp    DWORD PTR [rsp+0x50],0x8
  404889:	vmovq  xmm0,QWORD PTR [rsp+0x80]
  404892:	lea    rax,[rip+0x7a22]        # 40c2bb <_IO_stdin_used@@Base+0x2bb>
  404899:	lea    rdi,[rip+0x7a5d]        # 40c2fd <_IO_stdin_used@@Base+0x2fd>
  4048a0:	cmove  rdi,rax
  4048a4:	mov    al,0x1
  4048a6:	call   405420 <print_debug_data@@Base+0x1170>
  4048ab:	jmp    4053c2 <print_debug_data@@Base+0x1112>
  4048b0:	xor    edi,edi
  4048b2:	call   403040 <coda_type_get_special_type_name@plt>
  4048b7:	lea    rdi,[rip+0x7a39]        # 40c2f7 <_IO_stdin_used@@Base+0x2f7>
  4048be:	mov    rsi,rax
  4048c1:	xor    eax,eax
  4048c3:	call   405420 <print_debug_data@@Base+0x1170>
  4048c8:	mov    eax,DWORD PTR [rsp+0x50]
  4048cc:	cmp    rax,0x3
  4048d0:	ja     4053c2 <print_debug_data@@Base+0x1112>
  4048d6:	lea    rcx,[rip+0x78d7]        # 40c1b4 <_IO_stdin_used@@Base+0x1b4>
  4048dd:	movsxd rax,DWORD PTR [rcx+rax*4]
  4048e1:	add    rax,rcx
  4048e4:	jmp    rax
  4048e6:	lea    rdi,[rip+0x8493]        # 40cd80 <_IO_stdin_used@@Base+0xd80>
  4048ed:	xor    eax,eax
  4048ef:	call   405530 <print_debug_data@@Base+0x1280>
  4048f4:	jmp    4053c2 <print_debug_data@@Base+0x1112>
  4048f9:	lea    rsi,[rsp+0x20]
  4048fe:	mov    rdi,r13
  404901:	call   4034c0 <coda_cursor_read_int64@plt>
  404906:	test   eax,eax
  404908:	je     404911 <print_debug_data@@Base+0x661>
  40490a:	xor    eax,eax
  40490c:	call   40a7d0 <handle_coda_error@@Base>
  404911:	mov    rdi,QWORD PTR [rsp+0x20]
  404916:	lea    rbx,[rsp+0x80]
  40491e:	mov    rsi,rbx
  404921:	call   403610 <coda_str64@plt>
  404926:	jmp    404955 <print_debug_data@@Base+0x6a5>
  404928:	lea    rsi,[rsp+0x20]
  40492d:	mov    rdi,r13
  404930:	call   403380 <coda_cursor_read_uint64@plt>
  404935:	test   eax,eax
  404937:	je     404940 <print_debug_data@@Base+0x690>
  404939:	xor    eax,eax
  40493b:	call   40a7d0 <handle_coda_error@@Base>
  404940:	mov    rdi,QWORD PTR [rsp+0x20]
  404945:	lea    rbx,[rsp+0x80]
  40494d:	mov    rsi,rbx
  404950:	call   403120 <coda_str64u@plt>
  404955:	lea    rdi,[rip+0x8323]        # 40cc7f <_IO_stdin_used@@Base+0xc7f>
  40495c:	mov    rsi,rbx
  40495f:	xor    eax,eax
  404961:	call   405420 <print_debug_data@@Base+0x1170>
  404966:	jmp    4053c2 <print_debug_data@@Base+0x1112>
  40496b:	lea    rsi,[rsp+0x20]
  404970:	mov    rdi,r13
  404973:	call   403540 <coda_cursor_get_bit_size@plt>
  404978:	test   eax,eax
  40497a:	je     404983 <print_debug_data@@Base+0x6d3>
  40497c:	xor    eax,eax
  40497e:	call   40a7d0 <handle_coda_error@@Base>
  404983:	mov    rbp,QWORD PTR [rsp+0x20]
  404988:	mov    rbx,rbp
  40498b:	sar    rbx,0x3
  40498f:	mov    eax,ebp
  404991:	and    eax,0x7
  404994:	cmp    rax,0x1
  404998:	sbb    rbx,0xffffffffffffffff
  40499c:	mov    rdi,rbx
  40499f:	call   4033f0 <malloc@plt>
  4049a4:	mov    r14,rax
  4049a7:	test   rax,rax
  4049aa:	jne    4049db <print_debug_data@@Base+0x72b>
  4049ac:	lea    rsi,[rip+0x76aa]        # 40c05d <_IO_stdin_used@@Base+0x5d>
  4049b3:	lea    rcx,[rip+0x7879]        # 40c233 <_IO_stdin_used@@Base+0x233>
  4049ba:	mov    edi,0xffffffff
  4049bf:	mov    rdx,rbx
  4049c2:	mov    r8d,0x1bf
  4049c8:	xor    eax,eax
  4049ca:	call   4030d0 <coda_set_error@plt>
  4049cf:	xor    eax,eax
  4049d1:	call   40a7d0 <handle_coda_error@@Base>
  4049d6:	mov    rbp,QWORD PTR [rsp+0x20]
  4049db:	mov    rdi,r13
  4049de:	mov    rsi,r14
  4049e1:	xor    edx,edx
  4049e3:	mov    rcx,rbp
  4049e6:	call   403600 <coda_cursor_read_bits@plt>
  4049eb:	test   eax,eax
  4049ed:	je     4049f6 <print_debug_data@@Base+0x746>
  4049ef:	xor    eax,eax
  4049f1:	call   40a7d0 <handle_coda_error@@Base>
  4049f6:	lea    rdi,[rip+0x7fe4]        # 40c9e1 <_IO_stdin_used@@Base+0x9e1>
  4049fd:	xor    eax,eax
  4049ff:	call   405420 <print_debug_data@@Base+0x1170>
  404a04:	mov    rdi,r14
  404a07:	mov    rsi,rbx
  404a0a:	call   4055e0 <print_debug_data@@Base+0x1330>
  404a0f:	lea    rdi,[rip+0x7892]        # 40c2a8 <_IO_stdin_used@@Base+0x2a8>
  404a16:	xor    eax,eax
  404a18:	call   405530 <print_debug_data@@Base+0x1280>
  404a1d:	mov    rdi,QWORD PTR [rsp+0x20]
  404a22:	sar    rdi,0x3
  404a26:	lea    rbx,[rsp+0x80]
  404a2e:	mov    rsi,rbx
  404a31:	call   403610 <coda_str64@plt>
  404a36:	lea    rdi,[rip+0x8099]        # 40cad6 <_IO_stdin_used@@Base+0xad6>
  404a3d:	mov    rsi,rbx
  404a40:	xor    eax,eax
  404a42:	call   405530 <print_debug_data@@Base+0x1280>
  404a47:	mov    rsi,QWORD PTR [rsp+0x20]
  404a4c:	and    rsi,0x7
  404a50:	je     404a60 <print_debug_data@@Base+0x7b0>
  404a52:	lea    rdi,[rip+0x77d1]        # 40c22a <_IO_stdin_used@@Base+0x22a>
  404a59:	xor    eax,eax
  404a5b:	call   405530 <print_debug_data@@Base+0x1280>
  404a60:	lea    rdi,[rip+0x783e]        # 40c2a5 <_IO_stdin_used@@Base+0x2a5>
  404a67:	xor    eax,eax
  404a69:	call   405530 <print_debug_data@@Base+0x1280>
  404a6e:	mov    rdi,r14
  404a71:	call   403070 <free@plt>
  404a76:	jmp    4053c2 <print_debug_data@@Base+0x1112>
  404a7b:	mov    rdi,r13
  404a7e:	call   4032a0 <coda_cursor_goto_first_record_field@plt>
  404a83:	test   eax,eax
  404a85:	je     404a8e <print_debug_data@@Base+0x7de>
  404a87:	xor    eax,eax
  404a89:	call   40a7d0 <handle_coda_error@@Base>
  404a8e:	mov    QWORD PTR [rsp+0x8],0x0
  404a97:	cmp    QWORD PTR [rsp+0x20],0x0
  404a9d:	jle    4053ba <print_debug_data@@Base+0x110a>
  404aa3:	mov    rax,QWORD PTR [rsp+0x18]
  404aa8:	inc    eax
  404aaa:	mov    DWORD PTR [rsp+0x68],eax
  404aae:	lea    r15,[rsp+0x10]
  404ab3:	lea    r14,[rip+0x8058]        # 40cb12 <_IO_stdin_used@@Base+0xb12>
  404aba:	lea    r12,[rip+0x82bf]        # 40cd80 <_IO_stdin_used@@Base+0xd80>
  404ac1:	lea    rbp,[rip+0xb864]        # 41032c <max_depth@@Base>
  404ac8:	xor    esi,esi
  404aca:	jmp    404ae8 <print_debug_data@@Base+0x838>
  404acc:	nop    DWORD PTR [rax+0x0]
  404ad0:	mov    rsi,QWORD PTR [rsp+0x8]
  404ad5:	inc    rsi
  404ad8:	mov    QWORD PTR [rsp+0x8],rsi
  404add:	cmp    rsi,QWORD PTR [rsp+0x20]
  404ae2:	jge    4053ba <print_debug_data@@Base+0x110a>
  404ae8:	mov    rdi,QWORD PTR [rsp+0x50]
  404aed:	mov    rdx,r15
  404af0:	call   4035f0 <coda_type_get_record_field_name@plt>
  404af5:	test   eax,eax
  404af7:	je     404b00 <print_debug_data@@Base+0x850>
  404af9:	xor    eax,eax
  404afb:	call   40a7d0 <handle_coda_error@@Base>
  404b00:	mov    rsi,QWORD PTR [rsp+0x10]
  404b05:	mov    rdi,r14
  404b08:	xor    eax,eax
  404b0a:	call   405420 <print_debug_data@@Base+0x1170>
  404b0f:	cmp    DWORD PTR [rip+0xb812],0x0        # 410328 <__data_start@@Base+0x10>
  404b16:	je     404b90 <print_debug_data@@Base+0x8e0>
  404b18:	mov    rdi,r13
  404b1b:	lea    rsi,[rsp+0x48]
  404b20:	call   4035b0 <coda_cursor_get_file_bit_offset@plt>
  404b25:	test   eax,eax
  404b27:	je     404b30 <print_debug_data@@Base+0x880>
  404b29:	xor    eax,eax
  404b2b:	call   40a7d0 <handle_coda_error@@Base>
  404b30:	mov    rdi,QWORD PTR [rsp+0x48]
  404b35:	test   rdi,rdi
  404b38:	js     404b90 <print_debug_data@@Base+0x8e0>
  404b3a:	mov    rax,r15
  404b3d:	mov    r15,rbp
  404b40:	mov    rbx,r14
  404b43:	mov    rbp,rax
  404b46:	shr    rdi,0x3
  404b4a:	lea    r14,[rsp+0x80]
  404b52:	mov    rsi,r14
  404b55:	call   403610 <coda_str64@plt>
  404b5a:	lea    rdi,[rip+0x76c5]        # 40c226 <_IO_stdin_used@@Base+0x226>
  404b61:	mov    rsi,r14
  404b64:	xor    eax,eax
  404b66:	call   405530 <print_debug_data@@Base+0x1280>
  404b6b:	mov    rsi,QWORD PTR [rsp+0x48]
  404b70:	and    rsi,0x7
  404b74:	je     404b84 <print_debug_data@@Base+0x8d4>
  404b76:	lea    rdi,[rip+0x76ad]        # 40c22a <_IO_stdin_used@@Base+0x22a>
  404b7d:	xor    eax,eax
  404b7f:	call   405530 <print_debug_data@@Base+0x1280>
  404b84:	mov    rax,rbp
  404b87:	mov    r14,rbx
  404b8a:	mov    rbp,r15
  404b8d:	mov    r15,rax
  404b90:	mov    rdi,r12
  404b93:	xor    eax,eax
  404b95:	call   405530 <print_debug_data@@Base+0x1280>
  404b9a:	inc    DWORD PTR [rip+0xb798]        # 410338 <__bss_start@@Base+0x8>
  404ba0:	mov    eax,DWORD PTR [rbp+0x0]
  404ba3:	test   eax,eax
  404ba5:	js     404bc0 <print_debug_data@@Base+0x910>
  404ba7:	cmp    eax,DWORD PTR [rsp+0x18]
  404bab:	jg     404bc0 <print_debug_data@@Base+0x910>
  404bad:	lea    rdi,[rip+0x767a]        # 40c22e <_IO_stdin_used@@Base+0x22e>
  404bb4:	xor    eax,eax
  404bb6:	call   405420 <print_debug_data@@Base+0x1170>
  404bbb:	jmp    404bcc <print_debug_data@@Base+0x91c>
  404bbd:	nop    DWORD PTR [rax]
  404bc0:	mov    rdi,r13
  404bc3:	mov    esi,DWORD PTR [rsp+0x68]
  404bc7:	call   4043e0 <print_debug_data@@Base+0x130>
  404bcc:	dec    DWORD PTR [rip+0xb766]        # 410338 <__bss_start@@Base+0x8>
  404bd2:	mov    rax,QWORD PTR [rsp+0x20]
  404bd7:	dec    rax
  404bda:	cmp    QWORD PTR [rsp+0x8],rax
  404bdf:	jge    404ad0 <print_debug_data@@Base+0x820>
  404be5:	mov    rdi,r13
  404be8:	call   403500 <coda_cursor_goto_next_record_field@plt>
  404bed:	test   eax,eax
  404bef:	je     404ad0 <print_debug_data@@Base+0x820>
  404bf5:	xor    eax,eax
  404bf7:	call   40a7d0 <handle_coda_error@@Base>
  404bfc:	jmp    404ad0 <print_debug_data@@Base+0x820>
  404c01:	mov    r12d,0x1
  404c07:	jmp    4051ea <print_debug_data@@Base+0xf3a>
  404c0c:	lea    rsi,[rsp+0x20]
  404c11:	mov    rdi,r13
  404c14:	call   403390 <coda_cursor_read_double@plt>
  404c19:	test   eax,eax
  404c1b:	je     404c24 <print_debug_data@@Base+0x974>
  404c1d:	xor    eax,eax
  404c1f:	call   40a7d0 <handle_coda_error@@Base>
  404c24:	vmovsd xmm0,QWORD PTR [rsp+0x20]
  404c2a:	call   4033a0 <coda_isNaN@plt>
  404c2f:	test   eax,eax
  404c31:	jne    404c46 <print_debug_data@@Base+0x996>
  404c33:	vmovsd xmm0,QWORD PTR [rsp+0x20]
  404c39:	call   403190 <coda_isInf@plt>
  404c3e:	test   eax,eax
  404c40:	je     4053d7 <print_debug_data@@Base+0x1127>
  404c46:	vmovq  xmm0,QWORD PTR [rsp+0x20]
  404c4c:	lea    rdi,[rip+0x76a9]        # 40c2fc <_IO_stdin_used@@Base+0x2fc>
  404c53:	jmp    404cc2 <print_debug_data@@Base+0xa12>
  404c55:	lea    rsi,[rsp+0x80]
  404c5d:	lea    rdx,[rsp+0x20]
  404c62:	mov    rdi,r13
  404c65:	call   403450 <coda_cursor_read_complex_double_split@plt>
  404c6a:	test   eax,eax
  404c6c:	je     404c75 <print_debug_data@@Base+0x9c5>
  404c6e:	xor    eax,eax
  404c70:	call   40a7d0 <handle_coda_error@@Base>
  404c75:	vmovq  xmm0,QWORD PTR [rsp+0x80]
  404c7e:	vmovq  xmm1,QWORD PTR [rsp+0x20]
  404c84:	lea    rdi,[rip+0x7694]        # 40c31f <_IO_stdin_used@@Base+0x31f>
  404c8b:	mov    al,0x2
  404c8d:	call   405530 <print_debug_data@@Base+0x1280>
  404c92:	jmp    4053c2 <print_debug_data@@Base+0x1112>
  404c97:	lea    rsi,[rsp+0x80]
  404c9f:	mov    rdi,r13
  404ca2:	call   403390 <coda_cursor_read_double@plt>
  404ca7:	test   eax,eax
  404ca9:	je     404cb2 <print_debug_data@@Base+0xa02>
  404cab:	xor    eax,eax
  404cad:	call   40a7d0 <handle_coda_error@@Base>
  404cb2:	vmovq  xmm0,QWORD PTR [rsp+0x80]
  404cbb:	lea    rdi,[rip+0x763b]        # 40c2fd <_IO_stdin_used@@Base+0x2fd>
  404cc2:	mov    al,0x1
  404cc4:	call   405530 <print_debug_data@@Base+0x1280>
  404cc9:	jmp    4053c2 <print_debug_data@@Base+0x1112>
  404cce:	mov    rsi,QWORD PTR [rsp+0x18]
  404cd3:	inc    esi
  404cd5:	mov    rdi,r13
  404cd8:	call   4043e0 <print_debug_data@@Base+0x130>
  404cdd:	dec    DWORD PTR [rip+0xb655]        # 410338 <__bss_start@@Base+0x8>
  404ce3:	jmp    4053ba <print_debug_data@@Base+0x110a>
  404ce8:	mov    ebx,ebp
  404cea:	and    ebx,0xfffffff0
  404ced:	lea    rdx,[rbx-0x10]
  404cf1:	mov    rcx,rdx
  404cf4:	shr    rcx,0x4
  404cf8:	inc    rcx
  404cfb:	mov    eax,ecx
  404cfd:	and    eax,0x3
  404d00:	cmp    rdx,0x30
  404d04:	jae    404d2b <print_debug_data@@Base+0xa7b>
  404d06:	vpbroadcastq ymm0,QWORD PTR [rip+0x7481]        # 40c190 <_IO_stdin_used@@Base+0x190>
  404d0f:	xor    ecx,ecx
  404d11:	vmovdqa ymm3,ymm0
  404d15:	vmovdqa ymm2,ymm0
  404d19:	vmovdqa ymm1,ymm0
  404d1d:	test   rax,rax
  404d20:	jne    40503b <print_debug_data@@Base+0xd8b>
  404d26:	jmp    405101 <print_debug_data@@Base+0xe51>
  404d2b:	mov    rdx,rax
  404d2e:	sub    rdx,rcx
  404d31:	vpbroadcastq ymm0,QWORD PTR [rip+0x7456]        # 40c190 <_IO_stdin_used@@Base+0x190>
  404d3a:	xor    ecx,ecx
  404d3c:	vmovdqa ymm3,ymm0
  404d40:	vmovdqa ymm2,ymm0
  404d44:	vmovdqa ymm1,ymm0
  404d48:	nop    DWORD PTR [rax+rax*1+0x0]
  404d50:	vmovdqu ymm4,YMMWORD PTR [rsp+rcx*8+0x80]
  404d59:	vmovdqu ymm5,YMMWORD PTR [rsp+rcx*8+0xa0]
  404d62:	vmovdqu ymm6,YMMWORD PTR [rsp+rcx*8+0xc0]
  404d6b:	vmovdqu ymm7,YMMWORD PTR [rsp+rcx*8+0xe0]
  404d74:	vpsrlq ymm8,ymm0,0x20
  404d79:	vpmuludq ymm8,ymm4,ymm8
  404d7e:	vpsrlq ymm9,ymm4,0x20
  404d83:	vpmuludq ymm9,ymm9,ymm0
  404d87:	vpaddq ymm8,ymm8,ymm9
  404d8c:	vpsllq ymm8,ymm8,0x20
  404d92:	vpmuludq ymm0,ymm4,ymm0
  404d96:	vpaddq ymm0,ymm0,ymm8
  404d9b:	vpsrlq ymm4,ymm3,0x20
  404da0:	vpmuludq ymm4,ymm5,ymm4
  404da4:	vpsrlq ymm8,ymm5,0x20
  404da9:	vpmuludq ymm8,ymm8,ymm3
  404dad:	vpaddq ymm4,ymm4,ymm8
  404db2:	vpsllq ymm4,ymm4,0x20
  404db7:	vpmuludq ymm3,ymm5,ymm3
  404dbb:	vpaddq ymm3,ymm3,ymm4
  404dbf:	vpsrlq ymm4,ymm2,0x20
  404dc4:	vpmuludq ymm4,ymm6,ymm4
  404dc8:	vpsrlq ymm5,ymm6,0x20
  404dcd:	vpmuludq ymm5,ymm5,ymm2
  404dd1:	vpaddq ymm4,ymm4,ymm5
  404dd5:	vpsllq ymm4,ymm4,0x20
  404dda:	vpmuludq ymm2,ymm6,ymm2
  404dde:	vpaddq ymm2,ymm2,ymm4
  404de2:	vpsrlq ymm4,ymm1,0x20
  404de7:	vpmuludq ymm4,ymm7,ymm4
  404deb:	vpsrlq ymm5,ymm7,0x20
  404df0:	vpmuludq ymm5,ymm5,ymm1
  404df4:	vpaddq ymm4,ymm4,ymm5
  404df8:	vpsllq ymm4,ymm4,0x20
  404dfd:	vpmuludq ymm1,ymm7,ymm1
  404e01:	vpaddq ymm1,ymm1,ymm4
  404e05:	vmovdqu ymm4,YMMWORD PTR [rsp+rcx*8+0x100]
  404e0e:	vmovdqu ymm5,YMMWORD PTR [rsp+rcx*8+0x120]
  404e17:	vmovdqu ymm6,YMMWORD PTR [rsp+rcx*8+0x140]
  404e20:	vmovdqu ymm7,YMMWORD PTR [rsp+rcx*8+0x160]
  404e29:	vpsrlq ymm8,ymm4,0x20
  404e2e:	vpmuludq ymm8,ymm8,ymm0
  404e32:	vpsrlq ymm9,ymm0,0x20
  404e37:	vpmuludq ymm9,ymm4,ymm9
  404e3c:	vpaddq ymm8,ymm9,ymm8
  404e41:	vpsllq ymm8,ymm8,0x20
  404e47:	vpmuludq ymm0,ymm4,ymm0
  404e4b:	vpaddq ymm0,ymm0,ymm8
  404e50:	vpsrlq ymm4,ymm5,0x20
  404e55:	vpmuludq ymm4,ymm4,ymm3
  404e59:	vpsrlq ymm8,ymm3,0x20
  404e5e:	vpmuludq ymm8,ymm5,ymm8
  404e63:	vpaddq ymm4,ymm8,ymm4
  404e67:	vpsllq ymm4,ymm4,0x20
  404e6c:	vpmuludq ymm3,ymm5,ymm3
  404e70:	vpaddq ymm3,ymm3,ymm4
  404e74:	vpsrlq ymm4,ymm6,0x20
  404e79:	vpmuludq ymm4,ymm4,ymm2
  404e7d:	vpsrlq ymm5,ymm2,0x20
  404e82:	vpmuludq ymm5,ymm6,ymm5
  404e86:	vpaddq ymm4,ymm5,ymm4
  404e8a:	vpsllq ymm4,ymm4,0x20
  404e8f:	vpmuludq ymm2,ymm6,ymm2
  404e93:	vpaddq ymm2,ymm2,ymm4
  404e97:	vpsrlq ymm4,ymm7,0x20
  404e9c:	vpmuludq ymm4,ymm4,ymm1
  404ea0:	vpsrlq ymm5,ymm1,0x20
  404ea5:	vpmuludq ymm5,ymm7,ymm5
  404ea9:	vpaddq ymm4,ymm5,ymm4
  404ead:	vpsllq ymm4,ymm4,0x20
  404eb2:	vpmuludq ymm1,ymm7,ymm1
  404eb6:	vpaddq ymm1,ymm1,ymm4
  404eba:	vmovdqu ymm4,YMMWORD PTR [rsp+rcx*8+0x180]
  404ec3:	vmovdqu ymm5,YMMWORD PTR [rsp+rcx*8+0x1a0]
  404ecc:	vmovdqu ymm6,YMMWORD PTR [rsp+rcx*8+0x1c0]
  404ed5:	vmovdqu ymm7,YMMWORD PTR [rsp+rcx*8+0x1e0]
  404ede:	vpsrlq ymm8,ymm4,0x20
  404ee3:	vpmuludq ymm8,ymm8,ymm0
  404ee7:	vpsrlq ymm9,ymm0,0x20
  404eec:	vpmuludq ymm9,ymm4,ymm9
  404ef1:	vpaddq ymm8,ymm9,ymm8
  404ef6:	vpsllq ymm8,ymm8,0x20
  404efc:	vpmuludq ymm0,ymm4,ymm0
  404f00:	vpaddq ymm0,ymm0,ymm8
  404f05:	vpsrlq ymm4,ymm5,0x20
  404f0a:	vpmuludq ymm4,ymm4,ymm3
  404f0e:	vpsrlq ymm8,ymm3,0x20
  404f13:	vpmuludq ymm8,ymm5,ymm8
  404f18:	vpaddq ymm4,ymm8,ymm4
  404f1c:	vpsllq ymm4,ymm4,0x20
  404f21:	vpmuludq ymm3,ymm5,ymm3
  404f25:	vpaddq ymm3,ymm3,ymm4
  404f29:	vpsrlq ymm4,ymm6,0x20
  404f2e:	vpmuludq ymm4,ymm4,ymm2
  404f32:	vpsrlq ymm5,ymm2,0x20
  404f37:	vpmuludq ymm5,ymm6,ymm5
  404f3b:	vpaddq ymm4,ymm5,ymm4
  404f3f:	vpsllq ymm4,ymm4,0x20
  404f44:	vpmuludq ymm2,ymm6,ymm2
  404f48:	vpaddq ymm2,ymm2,ymm4
  404f4c:	vpsrlq ymm4,ymm7,0x20
  404f51:	vpmuludq ymm4,ymm4,ymm1
  404f55:	vpsrlq ymm5,ymm1,0x20
  404f5a:	vpmuludq ymm5,ymm7,ymm5
  404f5e:	vpaddq ymm4,ymm5,ymm4
  404f62:	vpsllq ymm4,ymm4,0x20
  404f67:	vpmuludq ymm1,ymm7,ymm1
  404f6b:	vpaddq ymm1,ymm1,ymm4
  404f6f:	vmovdqu ymm4,YMMWORD PTR [rsp+rcx*8+0x200]
  404f78:	vmovdqu ymm5,YMMWORD PTR [rsp+rcx*8+0x220]
  404f81:	vmovdqu ymm6,YMMWORD PTR [rsp+rcx*8+0x240]
  404f8a:	vmovdqu ymm7,YMMWORD PTR [rsp+rcx*8+0x260]
  404f93:	vpsrlq ymm8,ymm4,0x20
  404f98:	vpmuludq ymm8,ymm8,ymm0
  404f9c:	vpsrlq ymm9,ymm0,0x20
  404fa1:	vpmuludq ymm9,ymm4,ymm9
  404fa6:	vpaddq ymm8,ymm9,ymm8
  404fab:	vpsllq ymm8,ymm8,0x20
  404fb1:	vpmuludq ymm0,ymm4,ymm0
  404fb5:	vpaddq ymm0,ymm0,ymm8
  404fba:	vpsrlq ymm4,ymm5,0x20
  404fbf:	vpmuludq ymm4,ymm4,ymm3
  404fc3:	vpsrlq ymm8,ymm3,0x20
  404fc8:	vpmuludq ymm8,ymm5,ymm8
  404fcd:	vpaddq ymm4,ymm8,ymm4
  404fd1:	vpsllq ymm4,ymm4,0x20
  404fd6:	vpmuludq ymm3,ymm5,ymm3
  404fda:	vpaddq ymm3,ymm3,ymm4
  404fde:	vpsrlq ymm4,ymm6,0x20
  404fe3:	vpmuludq ymm4,ymm4,ymm2
  404fe7:	vpsrlq ymm5,ymm2,0x20
  404fec:	vpmuludq ymm5,ymm6,ymm5
  404ff0:	vpaddq ymm4,ymm5,ymm4
  404ff4:	vpsllq ymm4,ymm4,0x20
  404ff9:	vpmuludq ymm2,ymm6,ymm2
  404ffd:	vpaddq ymm2,ymm2,ymm4
  405001:	vpsrlq ymm4,ymm7,0x20
  405006:	vpmuludq ymm4,ymm4,ymm1
  40500a:	vpsrlq ymm5,ymm1,0x20
  40500f:	vpmuludq ymm5,ymm7,ymm5
  405013:	vpaddq ymm4,ymm5,ymm4
  405017:	vpsllq ymm4,ymm4,0x20
  40501c:	vpmuludq ymm1,ymm7,ymm1
  405020:	vpaddq ymm1,ymm1,ymm4
  405024:	add    rcx,0x40
  405028:	add    rdx,0x4
  40502c:	jne    404d50 <print_debug_data@@Base+0xaa0>
  405032:	test   rax,rax
  405035:	je     405101 <print_debug_data@@Base+0xe51>
  40503b:	lea    rcx,[rsp+rcx*8]
  40503f:	add    rcx,0xe0
  405046:	neg    rax
  405049:	nop    DWORD PTR [rax+0x0]
  405050:	vmovdqu ymm4,YMMWORD PTR [rcx-0x60]
  405055:	vmovdqu ymm5,YMMWORD PTR [rcx-0x40]
  40505a:	vmovdqu ymm6,YMMWORD PTR [rcx-0x20]
  40505f:	vmovdqu ymm7,YMMWORD PTR [rcx]
  405063:	vpsrlq ymm8,ymm0,0x20
  405068:	vpmuludq ymm8,ymm4,ymm8
  40506d:	vpsrlq ymm9,ymm4,0x20
  405072:	vpmuludq ymm9,ymm9,ymm0
  405076:	vpaddq ymm8,ymm8,ymm9
  40507b:	vpsllq ymm8,ymm8,0x20
  405081:	vpmuludq ymm0,ymm4,ymm0
  405085:	vpaddq ymm0,ymm0,ymm8
  40508a:	vpsrlq ymm4,ymm3,0x20
  40508f:	vpmuludq ymm4,ymm5,ymm4
  405093:	vpsrlq ymm8,ymm5,0x20
  405098:	vpmuludq ymm8,ymm8,ymm3
  40509c:	vpaddq ymm4,ymm4,ymm8
  4050a1:	vpsllq ymm4,ymm4,0x20
  4050a6:	vpmuludq ymm3,ymm5,ymm3
  4050aa:	vpaddq ymm3,ymm3,ymm4
  4050ae:	vpsrlq ymm4,ymm2,0x20
  4050b3:	vpmuludq ymm4,ymm6,ymm4
  4050b7:	vpsrlq ymm5,ymm6,0x20
  4050bc:	vpmuludq ymm5,ymm5,ymm2
  4050c0:	vpaddq ymm4,ymm4,ymm5
  4050c4:	vpsllq ymm4,ymm4,0x20
  4050c9:	vpmuludq ymm2,ymm6,ymm2
  4050cd:	vpaddq ymm2,ymm2,ymm4
  4050d1:	vpsrlq ymm4,ymm1,0x20
  4050d6:	vpmuludq ymm4,ymm7,ymm4
  4050da:	vpsrlq ymm5,ymm7,0x20
  4050df:	vpmuludq ymm5,ymm5,ymm1
  4050e3:	vpaddq ymm4,ymm4,ymm5
  4050e7:	vpsllq ymm4,ymm4,0x20
  4050ec:	vpmuludq ymm1,ymm7,ymm1
  4050f0:	vpaddq ymm1,ymm1,ymm4
  4050f4:	sub    rcx,0xffffffffffffff80
  4050f8:	inc    rax
  4050fb:	jne    405050 <print_debug_data@@Base+0xda0>
  405101:	vpsrlq ymm4,ymm3,0x20
  405106:	vpmuludq ymm4,ymm4,ymm0
  40510a:	vpsrlq ymm5,ymm0,0x20
  40510f:	vpmuludq ymm5,ymm3,ymm5
  405113:	vpaddq ymm4,ymm5,ymm4
  405117:	vpsllq ymm4,ymm4,0x20
  40511c:	vpmuludq ymm0,ymm3,ymm0
  405120:	vpaddq ymm0,ymm0,ymm4
  405124:	vpsrlq ymm3,ymm2,0x20
  405129:	vpmuludq ymm3,ymm3,ymm0
  40512d:	vpsrlq ymm4,ymm0,0x20
  405132:	vpmuludq ymm4,ymm2,ymm4
  405136:	vpaddq ymm3,ymm4,ymm3
  40513a:	vpsllq ymm3,ymm3,0x20
  40513f:	vpmuludq ymm0,ymm2,ymm0
  405143:	vpaddq ymm0,ymm0,ymm3
  405147:	vpsrlq ymm2,ymm1,0x20
  40514c:	vpmuludq ymm2,ymm2,ymm0
  405150:	vpsrlq ymm3,ymm0,0x20
  405155:	vpmuludq ymm3,ymm1,ymm3
  405159:	vpaddq ymm2,ymm3,ymm2
  40515d:	vpsllq ymm2,ymm2,0x20
  405162:	vpmuludq ymm0,ymm1,ymm0
  405166:	vpaddq ymm0,ymm0,ymm2
  40516a:	vextracti128 xmm1,ymm0,0x1
  405170:	vpsrlq xmm2,xmm0,0x20
  405175:	vpmuludq xmm2,xmm2,xmm1
  405179:	vpsrlq xmm3,xmm1,0x20
  40517e:	vpmuludq xmm3,xmm0,xmm3
  405182:	vpaddq xmm2,xmm3,xmm2
  405186:	vpsllq xmm2,xmm2,0x20
  40518b:	vpmuludq xmm0,xmm0,xmm1
  40518f:	vpaddq xmm0,xmm0,xmm2
  405193:	vpshufd xmm1,xmm0,0x4e
  405198:	vpsrlq xmm2,xmm0,0x20
  40519d:	vpmuludq xmm2,xmm2,xmm1
  4051a1:	vpsrldq xmm3,xmm0,0xc
  4051a6:	vpmuludq xmm3,xmm0,xmm3
  4051aa:	vpaddq xmm2,xmm3,xmm2
  4051ae:	vpsllq xmm2,xmm2,0x20
  4051b3:	vpmuludq xmm0,xmm0,xmm1
  4051b7:	vpaddq xmm0,xmm0,xmm2
  4051bb:	vmovq  r12,xmm0
  4051c0:	cmp    rbx,rbp
  4051c3:	je     4051e1 <print_debug_data@@Base+0xf31>
  4051c5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4051cf:	nop
  4051d0:	imul   r12,QWORD PTR [rsp+rbx*8+0x80]
  4051d9:	inc    rbx
  4051dc:	cmp    rbp,rbx
  4051df:	jne    4051d0 <print_debug_data@@Base+0xf20>
  4051e1:	test   r12,r12
  4051e4:	jle    4053c2 <print_debug_data@@Base+0x1112>
  4051ea:	mov    rdi,r13
  4051ed:	vzeroupper 
  4051f0:	call   403270 <coda_cursor_goto_first_array_element@plt>
  4051f5:	test   eax,eax
  4051f7:	je     405200 <print_debug_data@@Base+0xf50>
  4051f9:	xor    eax,eax
  4051fb:	call   40a7d0 <handle_coda_error@@Base>
  405200:	mov    rax,QWORD PTR [rsp+0x18]
  405205:	inc    eax
  405207:	mov    DWORD PTR [rsp+0x70],eax
  40520b:	lea    rax,[r12-0x1]
  405210:	mov    QWORD PTR [rsp+0x68],rax
  405215:	lea    rbp,[rip+0x700f]        # 40c22b <_IO_stdin_used@@Base+0x22b>
  40521c:	lea    rbx,[rip+0x728b]        # 40c4ae <_IO_stdin_used@@Base+0x4ae>
  405223:	xor    r15d,r15d
  405226:	jmp    40523c <print_debug_data@@Base+0xf8c>
  405228:	nop    DWORD PTR [rax+rax*1+0x0]
  405230:	inc    r15
  405233:	cmp    r15,r12
  405236:	je     4053ba <print_debug_data@@Base+0x110a>
  40523c:	mov    r14,r13
  40523f:	lea    rdi,[rip+0x7274]        # 40c4ba <_IO_stdin_used@@Base+0x4ba>
  405246:	xor    eax,eax
  405248:	call   405420 <print_debug_data@@Base+0x1170>
  40524d:	cmp    DWORD PTR [rsp+0x10],0x0
  405252:	jle    4052a0 <print_debug_data@@Base+0xff0>
  405254:	xor    r13d,r13d
  405257:	jmp    40526a <print_debug_data@@Base+0xfba>
  405259:	nop    DWORD PTR [rax+0x0]
  405260:	inc    r13
  405263:	cdqe   
  405265:	cmp    r13,rax
  405268:	jge    4052a0 <print_debug_data@@Base+0xff0>
  40526a:	mov    esi,DWORD PTR [rsp+r13*4+0x20]
  40526f:	mov    rdi,rbp
  405272:	xor    eax,eax
  405274:	call   405530 <print_debug_data@@Base+0x1280>
  405279:	movsxd rax,DWORD PTR [rsp+0x10]
  40527e:	mov    rcx,rax
  405281:	dec    rcx
  405284:	cmp    r13,rcx
  405287:	jge    405260 <print_debug_data@@Base+0xfb0>
  405289:	mov    rdi,rbx
  40528c:	xor    eax,eax
  40528e:	call   405530 <print_debug_data@@Base+0x1280>
  405293:	mov    eax,DWORD PTR [rsp+0x10]
  405297:	jmp    405260 <print_debug_data@@Base+0xfb0>
  405299:	nop    DWORD PTR [rax+0x0]
  4052a0:	lea    rdi,[rip+0x7fd7]        # 40d27e <_IO_stdin_used@@Base+0x127e>
  4052a7:	xor    eax,eax
  4052a9:	call   405530 <print_debug_data@@Base+0x1280>
  4052ae:	cmp    DWORD PTR [rip+0xb073],0x0        # 410328 <__data_start@@Base+0x10>
  4052b5:	mov    r13,r14
  4052b8:	je     405317 <print_debug_data@@Base+0x1067>
  4052ba:	mov    rdi,r13
  4052bd:	lea    rsi,[rsp+0x8]
  4052c2:	call   4035b0 <coda_cursor_get_file_bit_offset@plt>
  4052c7:	test   eax,eax
  4052c9:	je     4052d2 <print_debug_data@@Base+0x1022>
  4052cb:	xor    eax,eax
  4052cd:	call   40a7d0 <handle_coda_error@@Base>
  4052d2:	mov    rdi,QWORD PTR [rsp+0x8]
  4052d7:	test   rdi,rdi
  4052da:	js     405317 <print_debug_data@@Base+0x1067>
  4052dc:	shr    rdi,0x3
  4052e0:	lea    r14,[rsp+0x50]
  4052e5:	mov    rsi,r14
  4052e8:	call   403610 <coda_str64@plt>
  4052ed:	lea    rdi,[rip+0x6f32]        # 40c226 <_IO_stdin_used@@Base+0x226>
  4052f4:	mov    rsi,r14
  4052f7:	xor    eax,eax
  4052f9:	call   405530 <print_debug_data@@Base+0x1280>
  4052fe:	mov    rsi,QWORD PTR [rsp+0x8]
  405303:	and    rsi,0x7
  405307:	je     405317 <print_debug_data@@Base+0x1067>
  405309:	lea    rdi,[rip+0x6f1a]        # 40c22a <_IO_stdin_used@@Base+0x22a>
  405310:	xor    eax,eax
  405312:	call   405530 <print_debug_data@@Base+0x1280>
  405317:	lea    rdi,[rip+0x7a62]        # 40cd80 <_IO_stdin_used@@Base+0xd80>
  40531e:	xor    eax,eax
  405320:	call   405530 <print_debug_data@@Base+0x1280>
  405325:	inc    DWORD PTR [rip+0xb00d]        # 410338 <__bss_start@@Base+0x8>
  40532b:	lea    rax,[rip+0xaffa]        # 41032c <max_depth@@Base>
  405332:	mov    eax,DWORD PTR [rax]
  405334:	test   eax,eax
  405336:	js     405350 <print_debug_data@@Base+0x10a0>
  405338:	cmp    eax,DWORD PTR [rsp+0x18]
  40533c:	jg     405350 <print_debug_data@@Base+0x10a0>
  40533e:	lea    rdi,[rip+0x6ee9]        # 40c22e <_IO_stdin_used@@Base+0x22e>
  405345:	xor    eax,eax
  405347:	call   405420 <print_debug_data@@Base+0x1170>
  40534c:	jmp    40535c <print_debug_data@@Base+0x10ac>
  40534e:	xchg   ax,ax
  405350:	mov    rdi,r13
  405353:	mov    esi,DWORD PTR [rsp+0x70]
  405357:	call   4043e0 <print_debug_data@@Base+0x130>
  40535c:	dec    DWORD PTR [rip+0xafd6]        # 410338 <__bss_start@@Base+0x8>
  405362:	movsxd rax,DWORD PTR [rsp+0x10]
  405367:	test   rax,rax
  40536a:	jle    405393 <print_debug_data@@Base+0x10e3>
  40536c:	nop    DWORD PTR [rax+0x0]
  405370:	movsxd rcx,DWORD PTR [rsp+rax*4+0x1c]
  405375:	inc    rcx
  405378:	mov    DWORD PTR [rsp+rax*4+0x1c],ecx
  40537c:	cmp    QWORD PTR [rsp+rax*8+0x78],rcx
  405381:	jne    405393 <print_debug_data@@Base+0x10e3>
  405383:	mov    DWORD PTR [rsp+rax*4+0x1c],0x0
  40538b:	dec    rax
  40538e:	test   rax,rax
  405391:	jg     405370 <print_debug_data@@Base+0x10c0>
  405393:	cmp    QWORD PTR [rsp+0x68],r15
  405398:	jle    405230 <print_debug_data@@Base+0xf80>
  40539e:	mov    rdi,r13
  4053a1:	call   4033b0 <coda_cursor_goto_next_array_element@plt>
  4053a6:	test   eax,eax
  4053a8:	je     405230 <print_debug_data@@Base+0xf80>
  4053ae:	xor    eax,eax
  4053b0:	call   40a7d0 <handle_coda_error@@Base>
  4053b5:	jmp    405230 <print_debug_data@@Base+0xf80>
  4053ba:	mov    rdi,r13
  4053bd:	call   403320 <coda_cursor_goto_parent@plt>
  4053c2:	add    rsp,0x398
  4053c9:	pop    rbx
  4053ca:	pop    r12
  4053cc:	pop    r13
  4053ce:	pop    r14
  4053d0:	pop    r15
  4053d2:	pop    rbp
  4053d3:	vzeroupper 
  4053d6:	ret    
  4053d7:	vmovq  xmm0,QWORD PTR [rsp+0x20]
  4053dd:	lea    rdi,[rip+0x6d7e]        # 40c162 <_IO_stdin_used@@Base+0x162>
  4053e4:	lea    rsi,[rsp+0x80]
  4053ec:	call   4030f0 <coda_time_double_to_string@plt>
  4053f1:	test   eax,eax
  4053f3:	je     405401 <print_debug_data@@Base+0x1151>
  4053f5:	lea    rdi,[rip+0x6f08]        # 40c304 <_IO_stdin_used@@Base+0x304>
  4053fc:	jmp    4048ed <print_debug_data@@Base+0x63d>
  405401:	lea    rdi,[rip+0x7876]        # 40cc7e <_IO_stdin_used@@Base+0xc7e>
  405408:	lea    rsi,[rsp+0x80]
  405410:	xor    eax,eax
  405412:	call   405530 <print_debug_data@@Base+0x1280>
  405417:	jmp    4053c2 <print_debug_data@@Base+0x1112>
  405419:	nop    DWORD PTR [rax+0x0]
  405420:	push   rbp
  405421:	push   r15
  405423:	push   r14
  405425:	push   rbx
  405426:	sub    rsp,0xd8
  40542d:	mov    r14,rdi
  405430:	test   al,al
  405432:	je     405473 <print_debug_data@@Base+0x11c3>
  405434:	vmovaps XMMWORD PTR [rsp+0x50],xmm0
  40543a:	vmovaps XMMWORD PTR [rsp+0x60],xmm1
  405440:	vmovaps XMMWORD PTR [rsp+0x70],xmm2
  405446:	vmovaps XMMWORD PTR [rsp+0x80],xmm3
  40544f:	vmovaps XMMWORD PTR [rsp+0x90],xmm4
  405458:	vmovaps XMMWORD PTR [rsp+0xa0],xmm5
  405461:	vmovaps XMMWORD PTR [rsp+0xb0],xmm6
  40546a:	vmovaps XMMWORD PTR [rsp+0xc0],xmm7
  405473:	mov    QWORD PTR [rsp+0x28],rsi
  405478:	mov    QWORD PTR [rsp+0x30],rdx
  40547d:	mov    QWORD PTR [rsp+0x38],rcx
  405482:	mov    QWORD PTR [rsp+0x40],r8
  405487:	mov    QWORD PTR [rsp+0x48],r9
  40548c:	mov    ebp,DWORD PTR [rip+0xaea6]        # 410338 <__bss_start@@Base+0x8>
  405492:	test   ebp,ebp
  405494:	js     405511 <print_debug_data@@Base+0x1261>
  405496:	je     4054c9 <print_debug_data@@Base+0x1219>
  405498:	lea    r15,[rip+0xc009]        # 4114a8 <ascii_output@@Base>
  40549f:	lea    rbx,[rip+0x6cb9]        # 40c15f <_IO_stdin_used@@Base+0x15f>
  4054a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4054b0:	mov    rcx,QWORD PTR [r15]
  4054b3:	mov    esi,0x2
  4054b8:	mov    edx,0x1
  4054bd:	mov    rdi,rbx
  4054c0:	call   4035a0 <fwrite@plt>
  4054c5:	dec    ebp
  4054c7:	jg     4054b0 <print_debug_data@@Base+0x1200>
  4054c9:	lea    rax,[rsp+0x20]
  4054ce:	mov    QWORD PTR [rsp+0x10],rax
  4054d3:	lea    rax,[rsp+0x100]
  4054db:	mov    QWORD PTR [rsp+0x8],rax
  4054e0:	movabs rax,0x3000000008
  4054ea:	mov    QWORD PTR [rsp],rax
  4054ee:	lea    rax,[rip+0xbfb3]        # 4114a8 <ascii_output@@Base>
  4054f5:	mov    rdi,QWORD PTR [rax]
  4054f8:	mov    rdx,rsp
  4054fb:	mov    rsi,r14
  4054fe:	call   403530 <vfprintf@plt>
  405503:	add    rsp,0xd8
  40550a:	pop    rbx
  40550b:	pop    r14
  40550d:	pop    r15
  40550f:	pop    rbp
  405510:	ret    
  405511:	lea    rdi,[rip+0x6e12]        # 40c32a <_IO_stdin_used@@Base+0x32a>
  405518:	lea    rsi,[rip+0x6d14]        # 40c233 <_IO_stdin_used@@Base+0x233>
  40551f:	lea    rcx,[rip+0x6e10]        # 40c336 <_IO_stdin_used@@Base+0x336>
  405526:	mov    edx,0x2c
  40552b:	call   403240 <__assert_fail@plt>
  405530:	sub    rsp,0xd8
  405537:	mov    r10,rdi
  40553a:	test   al,al
  40553c:	je     40557d <print_debug_data@@Base+0x12cd>
  40553e:	vmovaps XMMWORD PTR [rsp+0x50],xmm0
  405544:	vmovaps XMMWORD PTR [rsp+0x60],xmm1
  40554a:	vmovaps XMMWORD PTR [rsp+0x70],xmm2
  405550:	vmovaps XMMWORD PTR [rsp+0x80],xmm3
  405559:	vmovaps XMMWORD PTR [rsp+0x90],xmm4
  405562:	vmovaps XMMWORD PTR [rsp+0xa0],xmm5
  40556b:	vmovaps XMMWORD PTR [rsp+0xb0],xmm6
  405574:	vmovaps XMMWORD PTR [rsp+0xc0],xmm7
  40557d:	mov    QWORD PTR [rsp+0x28],rsi
  405582:	mov    QWORD PTR [rsp+0x30],rdx
  405587:	mov    QWORD PTR [rsp+0x38],rcx
  40558c:	mov    QWORD PTR [rsp+0x40],r8
  405591:	mov    QWORD PTR [rsp+0x48],r9
  405596:	lea    rax,[rsp+0x20]
  40559b:	mov    QWORD PTR [rsp+0x10],rax
  4055a0:	lea    rax,[rsp+0xe0]
  4055a8:	mov    QWORD PTR [rsp+0x8],rax
  4055ad:	movabs rax,0x3000000008
  4055b7:	mov    QWORD PTR [rsp],rax
  4055bb:	lea    rax,[rip+0xbee6]        # 4114a8 <ascii_output@@Base>
  4055c2:	mov    rdi,QWORD PTR [rax]
  4055c5:	mov    rdx,rsp
  4055c8:	mov    rsi,r10
  4055cb:	call   403530 <vfprintf@plt>
  4055d0:	add    rsp,0xd8
  4055d7:	ret    
  4055d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4055e0:	push   rbp
  4055e1:	push   r15
  4055e3:	push   r14
  4055e5:	push   r13
  4055e7:	push   r12
  4055e9:	push   rbx
  4055ea:	push   rax
  4055eb:	test   rsi,rsi
  4055ee:	jle    4056bf <print_debug_data@@Base+0x140f>
  4055f4:	mov    rbx,rsi
  4055f7:	mov    r14,rdi
  4055fa:	lea    r15,[rip+0x6bfb]        # 40c1fc <_IO_stdin_used@@Base+0x1fc>
  405601:	lea    r12,[rip+0x6afe]        # 40c106 <_IO_stdin_used@@Base+0x106>
  405608:	lea    r13,[rip+0x6afa]        # 40c109 <_IO_stdin_used@@Base+0x109>
  40560f:	xor    ebp,ebp
  405611:	jmp    405633 <print_debug_data@@Base+0x1383>
  405613:	lea    rdi,[rip+0x6add]        # 40c0f7 <_IO_stdin_used@@Base+0xf7>
  40561a:	nop    WORD PTR [rax+rax*1+0x0]
  405620:	xor    eax,eax
  405622:	call   405530 <print_debug_data@@Base+0x1280>
  405627:	inc    rbp
  40562a:	cmp    rbx,rbp
  40562d:	je     4056bf <print_debug_data@@Base+0x140f>
  405633:	movsx  esi,BYTE PTR [r14+rbp*1]
  405638:	lea    eax,[rsi-0x7]
  40563b:	cmp    eax,0x6
  40563e:	ja     405660 <print_debug_data@@Base+0x13b0>
  405640:	movsxd rax,DWORD PTR [r15+rax*4]
  405644:	add    rax,r15
  405647:	jmp    rax
  405649:	lea    rdi,[rip+0x6aaa]        # 40c0fa <_IO_stdin_used@@Base+0xfa>
  405650:	jmp    405620 <print_debug_data@@Base+0x1370>
  405652:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40565c:	nop    DWORD PTR [rax+0x0]
  405660:	cmp    esi,0x5c
  405663:	jne    405693 <print_debug_data@@Base+0x13e3>
  405665:	lea    rdi,[rip+0x6aa0]        # 40c10c <_IO_stdin_used@@Base+0x10c>
  40566c:	jmp    405620 <print_debug_data@@Base+0x1370>
  40566e:	lea    rdi,[rip+0x6a88]        # 40c0fd <_IO_stdin_used@@Base+0xfd>
  405675:	jmp    405620 <print_debug_data@@Base+0x1370>
  405677:	lea    rdi,[rip+0x6a82]        # 40c100 <_IO_stdin_used@@Base+0x100>
  40567e:	jmp    405620 <print_debug_data@@Base+0x1370>
  405680:	lea    rdi,[rip+0x6a7c]        # 40c103 <_IO_stdin_used@@Base+0x103>
  405687:	jmp    405620 <print_debug_data@@Base+0x1370>
  405689:	mov    rdi,r12
  40568c:	jmp    405620 <print_debug_data@@Base+0x1370>
  40568e:	mov    rdi,r13
  405691:	jmp    405620 <print_debug_data@@Base+0x1370>
  405693:	cmp    sil,0x20
  405697:	jl     4056a8 <print_debug_data@@Base+0x13f8>
  405699:	cmp    sil,0x7f
  40569d:	je     4056a8 <print_debug_data@@Base+0x13f8>
  40569f:	lea    rdi,[rip+0x6ca2]        # 40c348 <_IO_stdin_used@@Base+0x348>
  4056a6:	jmp    4056b3 <print_debug_data@@Base+0x1403>
  4056a8:	movzx  esi,sil
  4056ac:	lea    rdi,[rip+0x6a5c]        # 40c10f <_IO_stdin_used@@Base+0x10f>
  4056b3:	xor    eax,eax
  4056b5:	call   405530 <print_debug_data@@Base+0x1280>
  4056ba:	jmp    405627 <print_debug_data@@Base+0x1377>
  4056bf:	add    rsp,0x8
  4056c3:	pop    rbx
  4056c4:	pop    r12
  4056c6:	pop    r13
  4056c8:	pop    r14
  4056ca:	pop    r15
  4056cc:	pop    rbp
  4056cd:	ret    
  4056ce:	xchg   ax,ax

00000000004056d0 <dim_info_init@@Base>:
  4056d0:	lea    rax,[rip+0xbdf9]        # 4114d0 <dim_info@@Base>
  4056d7:	mov    DWORD PTR [rax],0x0
  4056dd:	mov    DWORD PTR [rax+0x44],0x0
  4056e4:	mov    DWORD PTR [rax+0x68],0xffffffff
  4056eb:	ret    
  4056ec:	nop    DWORD PTR [rax+0x0]

00000000004056f0 <dim_info_done@@Base>:
  4056f0:	ret    
  4056f1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4056fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405700 <print_all_distinct_dims@@Base>:
  405700:	push   r15
  405702:	push   r14
  405704:	push   r13
  405706:	push   r12
  405708:	push   rbx
  405709:	lea    r12,[rip+0xbdc0]        # 4114d0 <dim_info@@Base>
  405710:	cmp    DWORD PTR [r12],edi
  405714:	jle    405924 <print_all_distinct_dims@@Base+0x224>
  40571a:	movsxd r13,edi
  40571d:	cmp    DWORD PTR [r12+r13*4+0x48],0x0
  405723:	je     4057bb <print_all_distinct_dims@@Base+0xbb>
  405729:	movsxd rax,DWORD PTR [r12+r13*4+0x4]
  40572e:	lea    rbx,[rax*4+0x4]
  405736:	mov    rdi,rbx
  405739:	call   4033f0 <malloc@plt>
  40573e:	mov    r14,rax
  405741:	test   rax,rax
  405744:	jne    40577d <print_all_distinct_dims@@Base+0x7d>
  405746:	lea    rsi,[rip+0x6910]        # 40c05d <_IO_stdin_used@@Base+0x5d>
  40574d:	lea    rcx,[rip+0x6cc7]        # 40c41b <_IO_stdin_used@@Base+0x41b>
  405754:	mov    edi,0xffffffff
  405759:	mov    rdx,rbx
  40575c:	mov    r8d,0x3d
  405762:	xor    eax,eax
  405764:	call   4030d0 <coda_set_error@plt>
  405769:	xor    eax,eax
  40576b:	call   40a7d0 <handle_coda_error@@Base>
  405770:	movsxd rax,DWORD PTR [r12+r13*4+0x4]
  405775:	lea    rbx,[rax*4+0x4]
  40577d:	mov    rdi,r14
  405780:	xor    esi,esi
  405782:	mov    rdx,rbx
  405785:	call   403280 <memset@plt>
  40578a:	movsxd rax,DWORD PTR [r12+r13*4+0xb0]
  405792:	mov    rdx,QWORD PTR [r12+rax*8+0x108]
  40579a:	test   rdx,rdx
  40579d:	jle    405837 <print_all_distinct_dims@@Base+0x137>
  4057a3:	mov    rcx,QWORD PTR [r12+r13*8+0x70]
  4057a8:	lea    rsi,[rdx-0x1]
  4057ac:	mov    eax,edx
  4057ae:	and    eax,0x3
  4057b1:	cmp    rsi,0x3
  4057b5:	jae    4057c5 <print_all_distinct_dims@@Base+0xc5>
  4057b7:	xor    esi,esi
  4057b9:	jmp    405812 <print_all_distinct_dims@@Base+0x112>
  4057bb:	pop    rbx
  4057bc:	pop    r12
  4057be:	pop    r13
  4057c0:	pop    r14
  4057c2:	pop    r15
  4057c4:	ret    
  4057c5:	sub    rdx,rax
  4057c8:	xor    esi,esi
  4057ca:	jmp    4057d9 <print_all_distinct_dims@@Base+0xd9>
  4057cc:	nop    DWORD PTR [rax+0x0]
  4057d0:	add    rsi,0x4
  4057d4:	cmp    rdx,rsi
  4057d7:	je     405812 <print_all_distinct_dims@@Base+0x112>
  4057d9:	movsxd rdi,DWORD PTR [rcx+rsi*4]
  4057dd:	test   rdi,rdi
  4057e0:	js     4057e6 <print_all_distinct_dims@@Base+0xe6>
  4057e2:	inc    DWORD PTR [r14+rdi*4]
  4057e6:	movsxd rdi,DWORD PTR [rcx+rsi*4+0x4]
  4057eb:	test   rdi,rdi
  4057ee:	js     4057f4 <print_all_distinct_dims@@Base+0xf4>
  4057f0:	inc    DWORD PTR [r14+rdi*4]
  4057f4:	movsxd rdi,DWORD PTR [rcx+rsi*4+0x8]
  4057f9:	test   rdi,rdi
  4057fc:	js     405802 <print_all_distinct_dims@@Base+0x102>
  4057fe:	inc    DWORD PTR [r14+rdi*4]
  405802:	movsxd rdi,DWORD PTR [rcx+rsi*4+0xc]
  405807:	test   rdi,rdi
  40580a:	js     4057d0 <print_all_distinct_dims@@Base+0xd0>
  40580c:	inc    DWORD PTR [r14+rdi*4]
  405810:	jmp    4057d0 <print_all_distinct_dims@@Base+0xd0>
  405812:	test   rax,rax
  405815:	je     405837 <print_all_distinct_dims@@Base+0x137>
  405817:	lea    rcx,[rcx+rsi*4]
  40581b:	xor    edx,edx
  40581d:	jmp    405828 <print_all_distinct_dims@@Base+0x128>
  40581f:	nop
  405820:	inc    rdx
  405823:	cmp    rax,rdx
  405826:	je     405837 <print_all_distinct_dims@@Base+0x137>
  405828:	movsxd rsi,DWORD PTR [rcx+rdx*4]
  40582c:	test   rsi,rsi
  40582f:	js     405820 <print_all_distinct_dims@@Base+0x120>
  405831:	inc    DWORD PTR [r14+rsi*4]
  405835:	jmp    405820 <print_all_distinct_dims@@Base+0x120>
  405837:	lea    esi,[r13+0x1]
  40583b:	lea    rdi,[rip+0x6c5e]        # 40c4a0 <_IO_stdin_used@@Base+0x4a0>
  405842:	xor    eax,eax
  405844:	call   403230 <printf@plt>
  405849:	movsxd rbx,DWORD PTR [r12+r13*4+0x24]
  40584e:	mov    esi,DWORD PTR [r12+r13*4+0x4]
  405853:	cmp    ebx,esi
  405855:	jge    405895 <print_all_distinct_dims@@Base+0x195>
  405857:	lea    r15,[rip+0x6c4e]        # 40c4ac <_IO_stdin_used@@Base+0x4ac>
  40585e:	cmp    DWORD PTR [r14+rbx*4],0x0
  405863:	jg     405882 <print_all_distinct_dims@@Base+0x182>
  405865:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40586f:	nop
  405870:	inc    rbx
  405873:	movsxd rax,esi
  405876:	cmp    rbx,rax
  405879:	jge    405895 <print_all_distinct_dims@@Base+0x195>
  40587b:	cmp    DWORD PTR [r14+rbx*4],0x0
  405880:	jle    405870 <print_all_distinct_dims@@Base+0x170>
  405882:	mov    rdi,r15
  405885:	mov    esi,ebx
  405887:	xor    eax,eax
  405889:	call   403230 <printf@plt>
  40588e:	mov    esi,DWORD PTR [r12+r13*4+0x4]
  405893:	jmp    405870 <print_all_distinct_dims@@Base+0x170>
  405895:	lea    rdi,[rip+0x6c14]        # 40c4b0 <_IO_stdin_used@@Base+0x4b0>
  40589c:	xor    eax,eax
  40589e:	call   403230 <printf@plt>
  4058a3:	lea    rdi,[rip+0x6c0a]        # 40c4b4 <_IO_stdin_used@@Base+0x4b4>
  4058aa:	xor    eax,eax
  4058ac:	call   403230 <printf@plt>
  4058b1:	movsxd rbx,DWORD PTR [r12+r13*4+0x24]
  4058b6:	mov    eax,DWORD PTR [r12+r13*4+0x4]
  4058bb:	cmp    ebx,eax
  4058bd:	jge    4058f4 <print_all_distinct_dims@@Base+0x1f4>
  4058bf:	lea    r15,[rip+0x6be6]        # 40c4ac <_IO_stdin_used@@Base+0x4ac>
  4058c6:	jmp    4058db <print_all_distinct_dims@@Base+0x1db>
  4058c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4058d0:	inc    rbx
  4058d3:	movsxd rcx,eax
  4058d6:	cmp    rbx,rcx
  4058d9:	jge    4058f7 <print_all_distinct_dims@@Base+0x1f7>
  4058db:	mov    esi,DWORD PTR [r14+rbx*4]
  4058df:	test   esi,esi
  4058e1:	jle    4058d0 <print_all_distinct_dims@@Base+0x1d0>
  4058e3:	mov    rdi,r15
  4058e6:	xor    eax,eax
  4058e8:	call   403230 <printf@plt>
  4058ed:	mov    eax,DWORD PTR [r12+r13*4+0x4]
  4058f2:	jmp    4058d0 <print_all_distinct_dims@@Base+0x1d0>
  4058f4:	movsxd rcx,eax
  4058f7:	mov    esi,DWORD PTR [r14+rcx*4]
  4058fb:	lea    rdi,[rip+0x6bae]        # 40c4b0 <_IO_stdin_used@@Base+0x4b0>
  405902:	xor    eax,eax
  405904:	call   403230 <printf@plt>
  405909:	mov    edi,0xa
  40590e:	call   403080 <putchar@plt>
  405913:	mov    rdi,r14
  405916:	pop    rbx
  405917:	pop    r12
  405919:	pop    r13
  40591b:	pop    r14
  40591d:	pop    r15
  40591f:	jmp    403070 <free@plt>
  405924:	lea    rdi,[rip+0x6ad5]        # 40c400 <_IO_stdin_used@@Base+0x400>
  40592b:	lea    rsi,[rip+0x6ae9]        # 40c41b <_IO_stdin_used@@Base+0x41b>
  405932:	lea    rcx,[rip+0x6b45]        # 40c47e <_IO_stdin_used@@Base+0x47e>
  405939:	mov    edx,0x32
  40593e:	call   403240 <__assert_fail@plt>
  405943:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40594d:	nop    DWORD PTR [rax]

0000000000405950 <dim_enter_array@@Base>:
  405950:	push   rbp
  405951:	push   r15
  405953:	push   r14
  405955:	push   r13
  405957:	push   r12
  405959:	push   rbx
  40595a:	sub    rsp,0x88
  405961:	lea    r14,[rip+0xaa00]        # 410368 <traverse_info@@Base>
  405968:	movsxd rbx,DWORD PTR [r14+0xf34]
  40596f:	movsxd rax,DWORD PTR [r14+0x110]
  405976:	mov    rdi,QWORD PTR [r14+rax*8+0x10]
  40597b:	lea    rsi,[rsp+0x34]
  405980:	call   403620 <coda_type_get_class@plt>
  405985:	test   eax,eax
  405987:	je     405990 <dim_enter_array@@Base+0x40>
  405989:	xor    eax,eax
  40598b:	call   40a7d0 <handle_coda_error@@Base>
  405990:	mov    eax,DWORD PTR [rsp+0x34]
  405994:	dec    eax
  405996:	cmp    eax,0x5
  405999:	ja     40666f <dim_enter_array@@Base+0xd1f>
  40599f:	lea    rbx,[rbx+rbx*4]
  4059a3:	shl    rbx,0x4
  4059a7:	lea    rcx,[rip+0x69f2]        # 40c3a0 <_IO_stdin_used@@Base+0x3a0>
  4059ae:	movsxd rax,DWORD PTR [rcx+rax*4]
  4059b2:	add    rax,rcx
  4059b5:	jmp    rax
  4059b7:	movsxd rax,DWORD PTR [r14+0x110]
  4059be:	mov    rdi,QWORD PTR [r14+rax*8+0x10]
  4059c3:	lea    rsi,[rsp+0x30]
  4059c8:	lea    rdx,[rsp+0x40]
  4059cd:	call   403520 <coda_type_get_array_dim@plt>
  4059d2:	test   eax,eax
  4059d4:	je     4059dd <dim_enter_array@@Base+0x8d>
  4059d6:	xor    eax,eax
  4059d8:	call   40a7d0 <handle_coda_error@@Base>
  4059dd:	mov    r13d,DWORD PTR [rsp+0x30]
  4059e2:	mov    DWORD PTR [r14+rbx*1+0x538],r13d
  4059ea:	test   r13d,r13d
  4059ed:	jle    405adf <dim_enter_array@@Base+0x18f>
  4059f3:	cmp    r13d,0x10
  4059f7:	jae    405e71 <dim_enter_array@@Base+0x521>
  4059fd:	xor    eax,eax
  4059ff:	jmp    405f9d <dim_enter_array@@Base+0x64d>
  405a04:	movsxd rax,DWORD PTR [r14+0x110]
  405a0b:	mov    rdi,QWORD PTR [r14+rax*8+0x10]
  405a10:	lea    rsi,[rsp+0x40]
  405a15:	call   403430 <coda_type_get_special_type@plt>
  405a1a:	test   eax,eax
  405a1c:	je     405a25 <dim_enter_array@@Base+0xd5>
  405a1e:	xor    eax,eax
  405a20:	call   40a7d0 <handle_coda_error@@Base>
  405a25:	cmp    DWORD PTR [rsp+0x40],0x3
  405a2a:	jne    4066b0 <dim_enter_array@@Base+0xd60>
  405a30:	movabs rax,0x200000001
  405a3a:	mov    QWORD PTR [r14+rbx*1+0x538],rax
  405a42:	jmp    405ad9 <dim_enter_array@@Base+0x189>
  405a47:	movsxd rax,DWORD PTR [r14+0x110]
  405a4e:	mov    rdi,QWORD PTR [r14+rax*8+0x10]
  405a53:	lea    rsi,[rsp+0x40]
  405a58:	call   403470 <coda_type_get_string_length@plt>
  405a5d:	test   eax,eax
  405a5f:	je     405a68 <dim_enter_array@@Base+0x118>
  405a61:	xor    eax,eax
  405a63:	call   40a7d0 <handle_coda_error@@Base>
  405a68:	mov    DWORD PTR [r14+rbx*1+0x538],0x1
  405a74:	mov    eax,DWORD PTR [rsp+0x40]
  405a78:	mov    DWORD PTR [r14+rbx*1+0x53c],eax
  405a80:	jmp    405ad9 <dim_enter_array@@Base+0x189>
  405a82:	movsxd rax,DWORD PTR [r14+0x110]
  405a89:	mov    rdi,QWORD PTR [r14+rax*8+0x10]
  405a8e:	lea    rsi,[rsp+0x40]
  405a93:	call   4031a0 <coda_type_get_bit_size@plt>
  405a98:	test   eax,eax
  405a9a:	je     405aa3 <dim_enter_array@@Base+0x153>
  405a9c:	xor    eax,eax
  405a9e:	call   40a7d0 <handle_coda_error@@Base>
  405aa3:	mov    DWORD PTR [r14+rbx*1+0x538],0x1
  405aaf:	mov    rcx,QWORD PTR [rsp+0x40]
  405ab4:	test   rcx,rcx
  405ab7:	js     405acc <dim_enter_array@@Base+0x17c>
  405ab9:	mov    rax,rcx
  405abc:	shr    rax,0x3
  405ac0:	and    ecx,0x7
  405ac3:	cmp    rcx,0x1
  405ac7:	sbb    eax,0xffffffff
  405aca:	jmp    405ad1 <dim_enter_array@@Base+0x181>
  405acc:	mov    eax,0xffffffff
  405ad1:	mov    DWORD PTR [r14+rbx*1+0x53c],eax
  405ad9:	mov    r13d,0x1
  405adf:	lea    rax,[r14+rbx*1]
  405ae3:	add    rax,0x534
  405ae9:	lea    rcx,[rip+0xa870]        # 410360 <calc_dim@@Base>
  405af0:	cmp    DWORD PTR [rcx],0x0
  405af3:	je     405b4c <dim_enter_array@@Base+0x1fc>
  405af5:	lea    r12,[rip+0xb9d4]        # 4114d0 <dim_info@@Base>
  405afc:	mov    edx,DWORD PTR [r12]
  405b00:	mov    DWORD PTR [rax],edx
  405b02:	lea    ecx,[rdx+r13*1]
  405b06:	cmp    ecx,0x9
  405b09:	jge    40668e <dim_enter_array@@Base+0xd3e>
  405b0f:	movsxd r15,edx
  405b12:	mov    DWORD PTR [r12],ecx
  405b16:	test   edx,edx
  405b18:	mov    QWORD PTR [rsp+0x38],rdx
  405b1d:	mov    QWORD PTR [rsp+0x10],rbx
  405b22:	jle    405b63 <dim_enter_array@@Base+0x213>
  405b24:	mov    rax,QWORD PTR [r12+r15*8+0x108]
  405b2c:	mov    QWORD PTR [rsp+0x18],rax
  405b31:	mov    r10,QWORD PTR [r12+r15*8+0x148]
  405b39:	test   r10,r10
  405b3c:	jle    405e2d <dim_enter_array@@Base+0x4dd>
  405b42:	test   r13d,r13d
  405b45:	jg     405b7c <dim_enter_array@@Base+0x22c>
  405b47:	jmp    406117 <dim_enter_array@@Base+0x7c7>
  405b4c:	mov    DWORD PTR [rax],0xffffffff
  405b52:	mov    QWORD PTR [r14+rbx*1+0x55c],0x0
  405b5e:	jmp    40665a <dim_enter_array@@Base+0xd0a>
  405b63:	mov    r10d,0x1
  405b69:	test   r13d,r13d
  405b6c:	jle    405e64 <dim_enter_array@@Base+0x514>
  405b72:	mov    eax,0x1
  405b77:	mov    QWORD PTR [rsp+0x18],rax
  405b7c:	mov    esi,r13d
  405b7f:	lea    rcx,[rsi-0x1]
  405b83:	mov    r8d,esi
  405b86:	and    r8d,0x3
  405b8a:	cmp    rcx,0x3
  405b8e:	jae    405b99 <dim_enter_array@@Base+0x249>
  405b90:	xor    edx,edx
  405b92:	xor    ecx,ecx
  405b94:	jmp    405c20 <dim_enter_array@@Base+0x2d0>
  405b99:	lea    rdi,[rbx+r14*1]
  405b9d:	add    rdi,0x548
  405ba4:	lea    rbp,[r12+r15*4]
  405ba8:	add    rbp,0x54
  405bac:	sub    rsi,r8
  405baf:	xor    edx,edx
  405bb1:	mov    ebx,0x1
  405bb6:	xor    ecx,ecx
  405bb8:	nop    DWORD PTR [rax+rax*1+0x0]
  405bc0:	mov    eax,DWORD PTR [rdi+rdx*4-0xc]
  405bc4:	mov    DWORD PTR [rbp+rdx*4-0x50],eax
  405bc8:	mov    DWORD PTR [rbp+rdx*4-0xc],0x0
  405bd0:	cmp    eax,0xffffffff
  405bd3:	mov    eax,DWORD PTR [rdi+rdx*4-0x8]
  405bd7:	mov    DWORD PTR [rbp+rdx*4-0x4c],eax
  405bdb:	mov    DWORD PTR [rbp+rdx*4-0x8],0x0
  405be3:	cmove  ecx,ebx
  405be6:	cmp    eax,0xffffffff
  405be9:	mov    eax,DWORD PTR [rdi+rdx*4-0x4]
  405bed:	mov    DWORD PTR [rbp+rdx*4-0x48],eax
  405bf1:	mov    DWORD PTR [rbp+rdx*4-0x4],0x0
  405bf9:	cmove  ecx,ebx
  405bfc:	cmp    eax,0xffffffff
  405bff:	mov    eax,DWORD PTR [rdi+rdx*4]
  405c02:	mov    DWORD PTR [rbp+rdx*4-0x44],eax
  405c06:	mov    DWORD PTR [rbp+rdx*4+0x0],0x0
  405c0e:	cmove  ecx,ebx
  405c11:	cmp    eax,0xffffffff
  405c14:	cmove  ecx,ebx
  405c17:	add    rdx,0x4
  405c1b:	cmp    rsi,rdx
  405c1e:	jne    405bc0 <dim_enter_array@@Base+0x270>
  405c20:	test   r8,r8
  405c23:	mov    rbx,QWORD PTR [rsp+0x10]
  405c28:	je     405c6c <dim_enter_array@@Base+0x31c>
  405c2a:	lea    rax,[rdx+r15*1]
  405c2e:	lea    rsi,[r12+rax*4]
  405c32:	add    rsi,0x48
  405c36:	lea    rax,[rbx+rdx*4]
  405c3a:	lea    rdx,[r14+rax*1]
  405c3e:	add    rdx,0x53c
  405c45:	xor    edi,edi
  405c47:	mov    ebp,0x1
  405c4c:	nop    DWORD PTR [rax+0x0]
  405c50:	mov    eax,DWORD PTR [rdx+rdi*4]
  405c53:	mov    DWORD PTR [rsi+rdi*4-0x44],eax
  405c57:	mov    DWORD PTR [rsi+rdi*4],0x0
  405c5e:	cmp    eax,0xffffffff
  405c61:	cmove  ecx,ebp
  405c64:	inc    rdi
  405c67:	cmp    r8,rdi
  405c6a:	jne    405c50 <dim_enter_array@@Base+0x300>
  405c6c:	test   ecx,ecx
  405c6e:	je     406117 <dim_enter_array@@Base+0x7c7>
  405c74:	mov    QWORD PTR [rsp+0x28],r10
  405c79:	lea    rax,[r14+rbx*1]
  405c7d:	add    rax,0x538
  405c83:	mov    QWORD PTR [rsp],rax
  405c87:	mov    rcx,rbx
  405c8a:	mov    rax,QWORD PTR [rsp+0x18]
  405c8f:	lea    rbx,[rax*4+0x0]
  405c97:	mov    rax,r15
  405c9a:	lea    r15,[rcx+r14*1+0x53c]
  405ca2:	lea    r13,[r12+rax*4]
  405ca6:	add    r13,0xb0
  405cad:	mov    QWORD PTR [rsp+0x20],rax
  405cb2:	lea    r14,[r12+rax*8]
  405cb6:	add    r14,0x70
  405cba:	xor    ebp,ebp
  405cbc:	cmp    DWORD PTR [r15+rbp*4],0xffffffff
  405cc1:	je     405cf7 <dim_enter_array@@Base+0x3a7>
  405cc3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405ccd:	nop    DWORD PTR [rax]
  405cd0:	mov    DWORD PTR [r13+rbp*4+0x0],0x0
  405cd9:	mov    QWORD PTR [r14+rbp*8],0x0
  405ce1:	inc    rbp
  405ce4:	mov    rax,QWORD PTR [rsp]
  405ce8:	movsxd rax,DWORD PTR [rax]
  405ceb:	cmp    rbp,rax
  405cee:	jge    405d67 <dim_enter_array@@Base+0x417>
  405cf0:	cmp    DWORD PTR [r15+rbp*4],0xffffffff
  405cf5:	jne    405cd0 <dim_enter_array@@Base+0x380>
  405cf7:	mov    rax,QWORD PTR [rsp+0x38]
  405cfc:	mov    DWORD PTR [r13+rbp*4+0x0],eax
  405d01:	mov    rdi,rbx
  405d04:	vzeroupper 
  405d07:	call   4033f0 <malloc@plt>
  405d0c:	mov    QWORD PTR [r14+rbp*8],rax
  405d10:	test   rax,rax
  405d13:	je     405d1f <dim_enter_array@@Base+0x3cf>
  405d15:	cmp    QWORD PTR [rsp+0x18],0x0
  405d1b:	jg     405d51 <dim_enter_array@@Base+0x401>
  405d1d:	jmp    405ce1 <dim_enter_array@@Base+0x391>
  405d1f:	mov    edi,0xffffffff
  405d24:	lea    rsi,[rip+0x6332]        # 40c05d <_IO_stdin_used@@Base+0x5d>
  405d2b:	mov    rdx,rbx
  405d2e:	lea    rcx,[rip+0x66e6]        # 40c41b <_IO_stdin_used@@Base+0x41b>
  405d35:	mov    r8d,0x1c8
  405d3b:	xor    eax,eax
  405d3d:	call   4030d0 <coda_set_error@plt>
  405d42:	xor    eax,eax
  405d44:	call   40a7d0 <handle_coda_error@@Base>
  405d49:	cmp    QWORD PTR [rsp+0x18],0x0
  405d4f:	jle    405ce1 <dim_enter_array@@Base+0x391>
  405d51:	mov    rdi,QWORD PTR [r14+rbp*8]
  405d55:	mov    esi,0xff
  405d5a:	mov    rdx,rbx
  405d5d:	call   403280 <memset@plt>
  405d62:	jmp    405ce1 <dim_enter_array@@Base+0x391>
  405d67:	lea    rax,[rip+0xa5fa]        # 410368 <traverse_info@@Base>
  405d6e:	mov    rbx,QWORD PTR [rsp+0x10]
  405d73:	mov    DWORD PTR [rax+rbx*1+0x560],0x0
  405d7e:	xor    ebp,ebp
  405d80:	xor    edi,edi
  405d82:	xor    esi,esi
  405d84:	xor    edx,edx
  405d86:	vzeroupper 
  405d89:	call   4066d0 <dim_enter_array@@Base+0xd80>
  405d8e:	mov    rax,QWORD PTR [rsp]
  405d92:	mov    r13d,DWORD PTR [rax]
  405d95:	test   r13d,r13d
  405d98:	jle    405fc4 <dim_enter_array@@Base+0x674>
  405d9e:	mov    rax,QWORD PTR [rsp+0x20]
  405da3:	lea    rbx,[r12+rax*4]
  405da7:	add    rbx,0x4
  405dab:	xor    ebp,ebp
  405dad:	mov    DWORD PTR [rsp+0xc],0x0
  405db5:	mov    r10,QWORD PTR [rsp+0x28]
  405dba:	cmp    DWORD PTR [r15+rbp*4],0xffffffff
  405dbf:	jne    405e00 <dim_enter_array@@Base+0x4b0>
  405dc1:	jmp    405e12 <dim_enter_array@@Base+0x4c2>
  405dc3:	mov    DWORD PTR [rbx+rbp*4+0x44],0x0
  405dcb:	mov    rdi,QWORD PTR [r14+rbp*8]
  405dcf:	call   403070 <free@plt>
  405dd4:	mov    r10,QWORD PTR [rsp+0x28]
  405dd9:	mov    QWORD PTR [r14+rbp*8],0x0
  405de1:	mov    DWORD PTR [rbx+rbp*4+0xac],0x0
  405dec:	mov    rax,QWORD PTR [rsp]
  405df0:	mov    r13d,DWORD PTR [rax]
  405df3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405dfd:	nop    DWORD PTR [rax]
  405e00:	inc    rbp
  405e03:	movsxd rax,r13d
  405e06:	cmp    rbp,rax
  405e09:	jge    405e4a <dim_enter_array@@Base+0x4fa>
  405e0b:	cmp    DWORD PTR [r15+rbp*4],0xffffffff
  405e10:	jne    405e00 <dim_enter_array@@Base+0x4b0>
  405e12:	mov    eax,DWORD PTR [rbx+rbp*4]
  405e15:	cmp    eax,DWORD PTR [rbx+rbp*4+0x20]
  405e19:	je     405dc3 <dim_enter_array@@Base+0x473>
  405e1b:	mov    DWORD PTR [rbx+rbp*4+0x44],0x1
  405e23:	mov    DWORD PTR [rsp+0xc],0x1
  405e2b:	jmp    405e00 <dim_enter_array@@Base+0x4b0>
  405e2d:	test   r13d,r13d
  405e30:	jle    406117 <dim_enter_array@@Base+0x7c7>
  405e36:	mov    eax,r13d
  405e39:	cmp    r13d,0x7
  405e3d:	ja     405fda <dim_enter_array@@Base+0x68a>
  405e43:	xor    ecx,ecx
  405e45:	jmp    4060e9 <dim_enter_array@@Base+0x799>
  405e4a:	mov    r15,QWORD PTR [rsp+0x20]
  405e4f:	lea    r14,[rip+0xa512]        # 410368 <traverse_info@@Base>
  405e56:	mov    rbx,QWORD PTR [rsp+0x10]
  405e5b:	mov    ebp,DWORD PTR [rsp+0xc]
  405e5f:	jmp    406119 <dim_enter_array@@Base+0x7c9>
  405e64:	xor    ebp,ebp
  405e66:	mov    r11d,0x1
  405e6c:	jmp    406125 <dim_enter_array@@Base+0x7d5>
  405e71:	mov    eax,r13d
  405e74:	and    eax,0xfffffff0
  405e77:	lea    rsi,[rax-0x10]
  405e7b:	mov    rcx,rsi
  405e7e:	shr    rcx,0x4
  405e82:	inc    rcx
  405e85:	mov    edx,ecx
  405e87:	and    edx,0x1
  405e8a:	test   rsi,rsi
  405e8d:	je     406008 <dim_enter_array@@Base+0x6b8>
  405e93:	lea    rsi,[rbx+r14*1]
  405e97:	add    rsi,0x5ac
  405e9e:	mov    rdi,rdx
  405ea1:	sub    rdi,rcx
  405ea4:	xor    ecx,ecx
  405ea6:	vmovaps ymm0,YMMWORD PTR [rip+0x64b2]        # 40c360 <_IO_stdin_used@@Base+0x360>
  405eae:	xchg   ax,ax
  405eb0:	vpermps ymm1,ymm0,YMMWORD PTR [rsp+rcx*8+0x40]
  405eb7:	vpermps ymm2,ymm0,YMMWORD PTR [rsp+rcx*8+0x60]
  405ebe:	vpermps ymm3,ymm0,YMMWORD PTR [rsp+rcx*8+0x80]
  405ec8:	vpermps ymm4,ymm0,YMMWORD PTR [rsp+rcx*8+0xa0]
  405ed2:	vmovups XMMWORD PTR [rsi+rcx*4-0x70],xmm1
  405ed8:	vmovups XMMWORD PTR [rsi+rcx*4-0x60],xmm2
  405ede:	vmovups XMMWORD PTR [rsi+rcx*4-0x50],xmm3
  405ee4:	vmovups XMMWORD PTR [rsi+rcx*4-0x40],xmm4
  405eea:	vpermps ymm1,ymm0,YMMWORD PTR [rsp+rcx*8+0xc0]
  405ef4:	vpermps ymm2,ymm0,YMMWORD PTR [rsp+rcx*8+0xe0]
  405efe:	vpermps ymm3,ymm0,YMMWORD PTR [rsp+rcx*8+0x100]
  405f08:	vpermps ymm4,ymm0,YMMWORD PTR [rsp+rcx*8+0x120]
  405f12:	vmovups XMMWORD PTR [rsi+rcx*4-0x30],xmm1
  405f18:	vmovups XMMWORD PTR [rsi+rcx*4-0x20],xmm2
  405f1e:	vmovups XMMWORD PTR [rsi+rcx*4-0x10],xmm3
  405f24:	vmovups XMMWORD PTR [rsi+rcx*4],xmm4
  405f29:	add    rcx,0x20
  405f2d:	add    rdi,0x2
  405f31:	jne    405eb0 <dim_enter_array@@Base+0x560>
  405f37:	test   rdx,rdx
  405f3a:	je     405f94 <dim_enter_array@@Base+0x644>
  405f3c:	vmovaps ymm0,YMMWORD PTR [rip+0x641c]        # 40c360 <_IO_stdin_used@@Base+0x360>
  405f44:	vpermps ymm1,ymm0,YMMWORD PTR [rsp+rcx*8+0x40]
  405f4b:	vpermps ymm2,ymm0,YMMWORD PTR [rsp+rcx*8+0x60]
  405f52:	vpermps ymm3,ymm0,YMMWORD PTR [rsp+rcx*8+0x80]
  405f5c:	vpermps ymm0,ymm0,YMMWORD PTR [rsp+rcx*8+0xa0]
  405f66:	lea    rdx,[rip+0xa3fb]        # 410368 <traverse_info@@Base>
  405f6d:	add    rdx,rbx
  405f70:	vmovups XMMWORD PTR [rdx+rcx*4+0x53c],xmm1
  405f79:	vmovups XMMWORD PTR [rdx+rcx*4+0x54c],xmm2
  405f82:	vmovups XMMWORD PTR [rdx+rcx*4+0x55c],xmm3
  405f8b:	vmovups XMMWORD PTR [rdx+rcx*4+0x56c],xmm0
  405f94:	cmp    rax,r13
  405f97:	je     405adf <dim_enter_array@@Base+0x18f>
  405f9d:	lea    rcx,[rbx+r14*1]
  405fa1:	add    rcx,0x53c
  405fa8:	nop    DWORD PTR [rax+rax*1+0x0]
  405fb0:	mov    edx,DWORD PTR [rsp+rax*8+0x40]
  405fb4:	mov    DWORD PTR [rcx+rax*4],edx
  405fb7:	inc    rax
  405fba:	cmp    r13,rax
  405fbd:	jne    405fb0 <dim_enter_array@@Base+0x660>
  405fbf:	jmp    405adf <dim_enter_array@@Base+0x18f>
  405fc4:	mov    r15,QWORD PTR [rsp+0x20]
  405fc9:	lea    r14,[rip+0xa398]        # 410368 <traverse_info@@Base>
  405fd0:	mov    r10,QWORD PTR [rsp+0x28]
  405fd5:	jmp    406119 <dim_enter_array@@Base+0x7c9>
  405fda:	mov    ecx,eax
  405fdc:	and    ecx,0xfffffff8
  405fdf:	lea    rdx,[rcx-0x8]
  405fe3:	mov    rsi,rdx
  405fe6:	shr    rsi,0x3
  405fea:	inc    rsi
  405fed:	mov    ebp,esi
  405fef:	and    ebp,0x7
  405ff2:	cmp    rdx,0x38
  405ff6:	jae    406018 <dim_enter_array@@Base+0x6c8>
  405ff8:	xor    esi,esi
  405ffa:	test   rbp,rbp
  405ffd:	jne    4060bd <dim_enter_array@@Base+0x76d>
  406003:	jmp    4060e2 <dim_enter_array@@Base+0x792>
  406008:	xor    ecx,ecx
  40600a:	test   rdx,rdx
  40600d:	jne    405f3c <dim_enter_array@@Base+0x5ec>
  406013:	jmp    405f94 <dim_enter_array@@Base+0x644>
  406018:	lea    rdi,[r12+r15*4]
  40601c:	add    rdi,0x128
  406023:	mov    rdx,rbp
  406026:	sub    rdx,rsi
  406029:	xor    esi,esi
  40602b:	vxorps xmm0,xmm0,xmm0
  40602f:	nop
  406030:	vmovups YMMWORD PTR [rdi+rsi*4-0x124],ymm0
  406039:	vmovups YMMWORD PTR [rdi+rsi*4-0xe0],ymm0
  406042:	vmovups YMMWORD PTR [rdi+rsi*4-0x104],ymm0
  40604b:	vmovups YMMWORD PTR [rdi+rsi*4-0xc0],ymm0
  406054:	vmovups YMMWORD PTR [rdi+rsi*4-0xe4],ymm0
  40605d:	vmovups YMMWORD PTR [rdi+rsi*4-0xa0],ymm0
  406066:	vmovups YMMWORD PTR [rdi+rsi*4-0xc4],ymm0
  40606f:	vmovups YMMWORD PTR [rdi+rsi*4-0x80],ymm0
  406075:	vmovups YMMWORD PTR [rdi+rsi*4-0xa4],ymm0
  40607e:	vmovups YMMWORD PTR [rdi+rsi*4-0x60],ymm0
  406084:	vmovups YMMWORD PTR [rdi+rsi*4-0x84],ymm0
  40608d:	vmovups YMMWORD PTR [rdi+rsi*4-0x40],ymm0
  406093:	vmovups YMMWORD PTR [rdi+rsi*4-0x64],ymm0
  406099:	vmovups YMMWORD PTR [rdi+rsi*4-0x20],ymm0
  40609f:	vmovups YMMWORD PTR [rdi+rsi*4-0x44],ymm0
  4060a5:	vmovups YMMWORD PTR [rdi+rsi*4],ymm0
  4060aa:	add    rsi,0x40
  4060ae:	add    rdx,0x8
  4060b2:	jne    406030 <dim_enter_array@@Base+0x6e0>
  4060b8:	test   rbp,rbp
  4060bb:	je     4060e2 <dim_enter_array@@Base+0x792>
  4060bd:	add    rsi,r15
  4060c0:	lea    rdx,[r12+rsi*4]
  4060c4:	add    rdx,0x48
  4060c8:	neg    rbp
  4060cb:	vxorps xmm0,xmm0,xmm0
  4060cf:	nop
  4060d0:	vmovups YMMWORD PTR [rdx-0x44],ymm0
  4060d5:	vmovups YMMWORD PTR [rdx],ymm0
  4060d9:	add    rdx,0x20
  4060dd:	inc    rbp
  4060e0:	jne    4060d0 <dim_enter_array@@Base+0x780>
  4060e2:	xor    ebp,ebp
  4060e4:	cmp    rcx,rax
  4060e7:	je     406119 <dim_enter_array@@Base+0x7c9>
  4060e9:	lea    rdx,[r12+r15*4]
  4060ed:	add    rdx,0x48
  4060f1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4060fb:	nop    DWORD PTR [rax+rax*1+0x0]
  406100:	mov    DWORD PTR [rdx+rcx*4-0x44],0x0
  406108:	mov    DWORD PTR [rdx+rcx*4],0x0
  40610f:	inc    rcx
  406112:	cmp    rax,rcx
  406115:	jne    406100 <dim_enter_array@@Base+0x7b0>
  406117:	xor    ebp,ebp
  406119:	mov    r11,r10
  40611c:	mov    ecx,DWORD PTR [r12]
  406120:	mov    r10,QWORD PTR [rsp+0x18]
  406125:	mov    DWORD PTR [r12+0x44],0x0
  40612e:	mov    DWORD PTR [r12+0x68],0xffffffff
  406137:	movsxd rax,ecx
  40613a:	mov    QWORD PTR [rsp],rax
  40613e:	test   ecx,ecx
  406140:	jle    406220 <dim_enter_array@@Base+0x8d0>
  406146:	mov    rcx,QWORD PTR [rsp]
  40614a:	lea    rax,[rcx-0x1]
  40614e:	and    ecx,0x3
  406151:	cmp    rax,0x3
  406155:	jae    40615e <dim_enter_array@@Base+0x80e>
  406157:	xor    edx,edx
  406159:	jmp    4061ec <dim_enter_array@@Base+0x89c>
  40615e:	mov    rsi,QWORD PTR [rsp]
  406162:	sub    rsi,rcx
  406165:	xor    edx,edx
  406167:	cmp    DWORD PTR [r12+rdx*4+0x48],0x0
  40616d:	jne    406191 <dim_enter_array@@Base+0x841>
  40616f:	jmp    40619f <dim_enter_array@@Base+0x84f>
  406171:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40617b:	nop    DWORD PTR [rax+rax*1+0x0]
  406180:	add    rdx,0x4
  406184:	cmp    rsi,rdx
  406187:	je     4061ec <dim_enter_array@@Base+0x89c>
  406189:	cmp    DWORD PTR [r12+rdx*4+0x48],0x0
  40618f:	je     40619f <dim_enter_array@@Base+0x84f>
  406191:	mov    DWORD PTR [r12+0x44],0x1
  40619a:	mov    DWORD PTR [r12+0x68],edx
  40619f:	cmp    DWORD PTR [r12+rdx*4+0x4c],0x0
  4061a5:	je     4061b8 <dim_enter_array@@Base+0x868>
  4061a7:	mov    DWORD PTR [r12+0x44],0x1
  4061b0:	lea    eax,[rdx+0x1]
  4061b3:	mov    DWORD PTR [r12+0x68],eax
  4061b8:	cmp    DWORD PTR [r12+rdx*4+0x50],0x0
  4061be:	je     4061d1 <dim_enter_array@@Base+0x881>
  4061c0:	mov    DWORD PTR [r12+0x44],0x1
  4061c9:	lea    eax,[rdx+0x2]
  4061cc:	mov    DWORD PTR [r12+0x68],eax
  4061d1:	cmp    DWORD PTR [r12+rdx*4+0x54],0x0
  4061d7:	je     406180 <dim_enter_array@@Base+0x830>
  4061d9:	mov    DWORD PTR [r12+0x44],0x1
  4061e2:	lea    eax,[rdx+0x3]
  4061e5:	mov    DWORD PTR [r12+0x68],eax
  4061ea:	jmp    406180 <dim_enter_array@@Base+0x830>
  4061ec:	test   rcx,rcx
  4061ef:	jne    406208 <dim_enter_array@@Base+0x8b8>
  4061f1:	jmp    406220 <dim_enter_array@@Base+0x8d0>
  4061f3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4061fd:	nop    DWORD PTR [rax]
  406200:	inc    rdx
  406203:	dec    rcx
  406206:	je     406220 <dim_enter_array@@Base+0x8d0>
  406208:	cmp    DWORD PTR [r12+rdx*4+0x48],0x0
  40620e:	je     406200 <dim_enter_array@@Base+0x8b0>
  406210:	mov    DWORD PTR [r12+0x44],0x1
  406219:	mov    DWORD PTR [r12+0x68],edx
  40621e:	jmp    406200 <dim_enter_array@@Base+0x8b0>
  406220:	mov    DWORD PTR [r14+rbx*1+0x55c],0x1
  40622c:	test   r13d,r13d
  40622f:	jle    406309 <dim_enter_array@@Base+0x9b9>
  406235:	mov    r9d,r13d
  406238:	and    r9d,0x1
  40623c:	mov    r8d,ebp
  40623f:	cmp    r13d,0x1
  406243:	jne    40624e <dim_enter_array@@Base+0x8fe>
  406245:	mov    ecx,0x1
  40624a:	xor    esi,esi
  40624c:	jmp    4062ba <dim_enter_array@@Base+0x96a>
  40624e:	movsxd rdi,r13d
  406251:	lea    rbp,[r12+r15*8]
  406255:	add    rbp,0x118
  40625c:	lea    rbx,[r12+r15*4]
  406260:	add    rbx,0x8
  406264:	sub    rdi,r9
  406267:	mov    eax,0x1
  40626c:	xor    esi,esi
  40626e:	jmp    40629e <dim_enter_array@@Base+0x94e>
  406270:	movsxd rax,DWORD PTR [r12+r15*4+0x4]
  406275:	imul   rax,r10
  406279:	mov    QWORD PTR [r12+r15*8+0x110],rax
  406281:	movsxd rax,DWORD PTR [rbx+rsi*4]
  406285:	imul   ecx,eax
  406288:	imul   rax,QWORD PTR [rbp+rsi*8-0x8]
  40628e:	mov    QWORD PTR [rbp+rsi*8+0x0],rax
  406293:	add    rsi,0x2
  406297:	mov    eax,ecx
  406299:	cmp    rdi,rsi
  40629c:	je     4062ba <dim_enter_array@@Base+0x96a>
  40629e:	movsxd rdx,DWORD PTR [rbx+rsi*4-0x4]
  4062a3:	mov    ecx,edx
  4062a5:	imul   ecx,eax
  4062a8:	test   rsi,rsi
  4062ab:	je     406270 <dim_enter_array@@Base+0x920>
  4062ad:	imul   rdx,QWORD PTR [rbp+rsi*8-0x10]
  4062b3:	mov    QWORD PTR [rbp+rsi*8-0x8],rdx
  4062b8:	jmp    406281 <dim_enter_array@@Base+0x931>
  4062ba:	mov    rax,QWORD PTR [rsp+0x10]
  4062bf:	lea    rdi,[r14+rax*1]
  4062c3:	add    rdi,0x55c
  4062ca:	test   r9,r9
  4062cd:	mov    ebp,r8d
  4062d0:	je     406307 <dim_enter_array@@Base+0x9b7>
  4062d2:	lea    rax,[rsi+r15*1]
  4062d6:	movsxd rdx,DWORD PTR [r12+rax*4+0x4]
  4062db:	imul   ecx,edx
  4062de:	test   rsi,rsi
  4062e1:	je     4062f6 <dim_enter_array@@Base+0x9a6>
  4062e3:	imul   rdx,QWORD PTR [r12+rax*8+0x108]
  4062ec:	mov    QWORD PTR [r12+rax*8+0x110],rdx
  4062f4:	jmp    406307 <dim_enter_array@@Base+0x9b7>
  4062f6:	movsxd rax,DWORD PTR [r12+r15*4+0x4]
  4062fb:	imul   rax,r10
  4062ff:	mov    QWORD PTR [r12+r15*8+0x110],rax
  406307:	mov    DWORD PTR [rdi],ecx
  406309:	test   ebp,ebp
  40630b:	je     40645a <dim_enter_array@@Base+0xb0a>
  406311:	mov    r14d,r13d
  406314:	test   r13d,r13d
  406317:	jle    40633c <dim_enter_array@@Base+0x9ec>
  406319:	lea    rdi,[r12+r15*8]
  40631d:	add    rdi,0x150
  406324:	lea    rdx,[r14*8+0x0]
  40632c:	xor    esi,esi
  40632e:	mov    rbx,r10
  406331:	vzeroupper 
  406334:	call   403280 <memset@plt>
  406339:	mov    r10,rbx
  40633c:	test   r10,r10
  40633f:	jle    406534 <dim_enter_array@@Base+0xbe4>
  406345:	mov    r8d,r14d
  406348:	and    r8d,0x1
  40634c:	lea    rcx,[r12+r15*8]
  406350:	add    rcx,0x158
  406357:	lea    rbx,[r12+r15*4]
  40635b:	sub    r14,r8
  40635e:	xor    esi,esi
  406360:	test   r13d,r13d
  406363:	jg     406391 <dim_enter_array@@Base+0xa41>
  406365:	jmp    406380 <dim_enter_array@@Base+0xa30>
  406367:	lea    rdx,[r12+rdi*4]
  40636b:	add    rdx,0x4
  40636f:	movsxd rdx,DWORD PTR [rdx]
  406372:	cdqe   
  406374:	imul   rax,rdx
  406378:	add    QWORD PTR [r12+rdi*8+0x150],rax
  406380:	inc    rsi
  406383:	cmp    rsi,r10
  406386:	je     406534 <dim_enter_array@@Base+0xbe4>
  40638c:	test   r13d,r13d
  40638f:	jle    406380 <dim_enter_array@@Base+0xa30>
  406391:	mov    eax,0x1
  406396:	cmp    r13d,0x1
  40639a:	jne    4063b0 <dim_enter_array@@Base+0xa60>
  40639c:	xor    edi,edi
  40639e:	jmp    406430 <dim_enter_array@@Base+0xae0>
  4063a3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4063ad:	nop    DWORD PTR [rax]
  4063b0:	mov    rdx,rbx
  4063b3:	xor    edi,edi
  4063b5:	cmp    DWORD PTR [rbx+rdi*4+0x48],0x0
  4063ba:	jne    4063f2 <dim_enter_array@@Base+0xaa2>
  4063bc:	jmp    406410 <dim_enter_array@@Base+0xac0>
  4063be:	xchg   ax,ax
  4063c0:	lea    rbp,[rsi*4+0x0]
  4063c8:	add    rbp,QWORD PTR [rcx+rdi*8-0xe0]
  4063d0:	movsxd rbp,DWORD PTR [rbp+0x0]
  4063d4:	cdqe   
  4063d6:	imul   rax,rbp
  4063da:	add    QWORD PTR [rcx+rdi*8],rax
  4063de:	add    rdi,0x2
  4063e2:	add    rdx,0x8
  4063e6:	cmp    r14,rdi
  4063e9:	je     406430 <dim_enter_array@@Base+0xae0>
  4063eb:	cmp    DWORD PTR [rbx+rdi*4+0x48],0x0
  4063f0:	je     406410 <dim_enter_array@@Base+0xac0>
  4063f2:	lea    rbp,[rsi*4+0x0]
  4063fa:	add    rbp,QWORD PTR [rcx+rdi*8-0xe8]
  406402:	jmp    406414 <dim_enter_array@@Base+0xac4>
  406404:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40640e:	xchg   ax,ax
  406410:	lea    rbp,[rdx+0x4]
  406414:	movsxd rbp,DWORD PTR [rbp+0x0]
  406418:	cdqe   
  40641a:	imul   rax,rbp
  40641e:	add    QWORD PTR [rcx+rdi*8-0x8],rax
  406423:	cmp    DWORD PTR [rbx+rdi*4+0x4c],0x0
  406428:	jne    4063c0 <dim_enter_array@@Base+0xa70>
  40642a:	lea    rbp,[rdx+0x8]
  40642e:	jmp    4063d0 <dim_enter_array@@Base+0xa80>
  406430:	test   r8,r8
  406433:	je     406380 <dim_enter_array@@Base+0xa30>
  406439:	add    rdi,r15
  40643c:	cmp    DWORD PTR [r12+rdi*4+0x48],0x0
  406442:	je     406367 <dim_enter_array@@Base+0xa17>
  406448:	lea    rdx,[rsi*4+0x0]
  406450:	add    rdx,QWORD PTR [r12+rdi*8+0x70]
  406455:	jmp    40636f <dim_enter_array@@Base+0xa1f>
  40645a:	movsxd rax,DWORD PTR [r12+r15*4+0x4]
  40645f:	imul   r11,rax
  406463:	mov    QWORD PTR [r12+r15*8+0x150],r11
  40646b:	cmp    r13d,0x2
  40646f:	jl     406534 <dim_enter_array@@Base+0xbe4>
  406475:	mov    ebx,r13d
  406478:	mov    rcx,QWORD PTR [r12+r15*8+0x150]
  406480:	lea    ebp,[r13-0x1]
  406484:	lea    rax,[rbx-0x2]
  406488:	and    ebp,0x3
  40648b:	mov    edx,0x1
  406490:	cmp    rax,0x3
  406494:	jb     406502 <dim_enter_array@@Base+0xbb2>
  406496:	lea    rsi,[r12+r15*8]
  40649a:	add    rsi,0x170
  4064a1:	lea    rdi,[r12+r15*4]
  4064a5:	add    rdi,0x14
  4064a9:	mov    rax,rbp
  4064ac:	not    rax
  4064af:	add    rax,rbx
  4064b2:	xor    edx,edx
  4064b4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4064be:	xchg   ax,ax
  4064c0:	movsxd rbx,DWORD PTR [rdi+rdx*4-0xc]
  4064c5:	imul   rbx,rcx
  4064c9:	mov    QWORD PTR [rsi+rdx*8-0x18],rbx
  4064ce:	movsxd rcx,DWORD PTR [rdi+rdx*4-0x8]
  4064d3:	imul   rcx,rbx
  4064d7:	mov    QWORD PTR [rsi+rdx*8-0x10],rcx
  4064dc:	movsxd rbx,DWORD PTR [rdi+rdx*4-0x4]
  4064e1:	imul   rbx,rcx
  4064e5:	mov    QWORD PTR [rsi+rdx*8-0x8],rbx
  4064ea:	movsxd rcx,DWORD PTR [rdi+rdx*4]
  4064ee:	imul   rcx,rbx
  4064f2:	mov    QWORD PTR [rsi+rdx*8],rcx
  4064f6:	add    rdx,0x4
  4064fa:	cmp    rax,rdx
  4064fd:	jne    4064c0 <dim_enter_array@@Base+0xb70>
  4064ff:	inc    rdx
  406502:	test   rbp,rbp
  406505:	je     406534 <dim_enter_array@@Base+0xbe4>
  406507:	add    rdx,r15
  40650a:	lea    rax,[r12+rdx*8]
  40650e:	add    rax,0x150
  406514:	lea    rdx,[r12+rdx*4]
  406518:	add    rdx,0x4
  40651c:	xor    esi,esi
  40651e:	xchg   ax,ax
  406520:	movsxd rdi,DWORD PTR [rdx+rsi*4]
  406524:	imul   rcx,rdi
  406528:	mov    QWORD PTR [rax+rsi*8],rcx
  40652c:	inc    rsi
  40652f:	cmp    rbp,rsi
  406532:	jne    406520 <dim_enter_array@@Base+0xbd0>
  406534:	mov    rdi,QWORD PTR [rsp+0x38]
  406539:	lea    eax,[rdi+r13*1]
  40653d:	add    eax,0xffffffff
  406540:	cdqe   
  406542:	cmp    QWORD PTR [r12+rax*8+0x150],0x0
  40654b:	jle    40665a <dim_enter_array@@Base+0xd0a>
  406551:	mov    rcx,QWORD PTR [rsp]
  406555:	movsxd rax,DWORD PTR [r12+rcx*4]
  406559:	mov    QWORD PTR [r12+rcx*8+0xc8],rax
  406561:	add    r13d,0xfffffffe
  406565:	js     406597 <dim_enter_array@@Base+0xc47>
  406567:	movsxd rax,r13d
  40656a:	lea    rcx,[r12+r15*8]
  40656e:	add    rcx,0xd8
  406575:	lea    rdx,[r12+r15*4]
  406579:	add    rdx,0x4
  40657d:	nop    DWORD PTR [rax]
  406580:	movsxd rsi,DWORD PTR [rdx+rax*4]
  406584:	imul   rsi,QWORD PTR [rcx+rax*8]
  406589:	mov    QWORD PTR [rcx+rax*8-0x8],rsi
  40658e:	test   rax,rax
  406591:	lea    rax,[rax-0x1]
  406595:	jg     406580 <dim_enter_array@@Base+0xc30>
  406597:	test   edi,edi
  406599:	jle    40665a <dim_enter_array@@Base+0xd0a>
  40659f:	lea    rcx,[r15-0x1]
  4065a3:	mov    rdx,r15
  4065a6:	mov    rax,r15
  4065a9:	and    rdx,0x3
  4065ad:	je     4065e1 <dim_enter_array@@Base+0xc91>
  4065af:	mov    rax,r15
  4065b2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4065bc:	nop    DWORD PTR [rax+0x0]
  4065c0:	mov    rsi,QWORD PTR [r12+rax*8+0xc8]
  4065c8:	imul   rsi,QWORD PTR [r12+r15*8+0xd0]
  4065d1:	mov    QWORD PTR [r12+rax*8+0xc8],rsi
  4065d9:	dec    rax
  4065dc:	dec    rdx
  4065df:	jne    4065c0 <dim_enter_array@@Base+0xc70>
  4065e1:	cmp    rcx,0x3
  4065e5:	jb     40665a <dim_enter_array@@Base+0xd0a>
  4065e7:	nop    WORD PTR [rax+rax*1+0x0]
  4065f0:	mov    rcx,QWORD PTR [r12+rax*8+0xc8]
  4065f8:	imul   rcx,QWORD PTR [r12+r15*8+0xd0]
  406601:	mov    QWORD PTR [r12+rax*8+0xc8],rcx
  406609:	mov    rcx,QWORD PTR [r12+rax*8+0xc0]
  406611:	imul   rcx,QWORD PTR [r12+r15*8+0xd0]
  40661a:	mov    QWORD PTR [r12+rax*8+0xc0],rcx
  406622:	mov    rcx,QWORD PTR [r12+rax*8+0xb8]
  40662a:	imul   rcx,QWORD PTR [r12+r15*8+0xd0]
  406633:	mov    rdx,QWORD PTR [r12+rax*8+0xb0]
  40663b:	mov    QWORD PTR [r12+rax*8+0xb8],rcx
  406643:	imul   rdx,QWORD PTR [r12+r15*8+0xd0]
  40664c:	mov    QWORD PTR [r12+rax*8+0xb0],rdx
  406654:	add    rax,0xfffffffffffffffc
  406658:	jg     4065f0 <dim_enter_array@@Base+0xca0>
  40665a:	add    rsp,0x88
  406661:	pop    rbx
  406662:	pop    r12
  406664:	pop    r13
  406666:	pop    r14
  406668:	pop    r15
  40666a:	pop    rbp
  40666b:	vzeroupper 
  40666e:	ret    
  40666f:	lea    rdi,[rip+0x5cbe]        # 40c334 <_IO_stdin_used@@Base+0x334>
  406676:	lea    rsi,[rip+0x5d9e]        # 40c41b <_IO_stdin_used@@Base+0x41b>
  40667d:	lea    rcx,[rip+0x5e38]        # 40c4bc <_IO_stdin_used@@Base+0x4bc>
  406684:	mov    edx,0x182
  406689:	call   403240 <__assert_fail@plt>
  40668e:	lea    rdi,[rip+0x5e3e]        # 40c4d3 <_IO_stdin_used@@Base+0x4d3>
  406695:	lea    rsi,[rip+0x5d7f]        # 40c41b <_IO_stdin_used@@Base+0x41b>
  40669c:	lea    rcx,[rip+0x5e19]        # 40c4bc <_IO_stdin_used@@Base+0x4bc>
  4066a3:	mov    edx,0x192
  4066a8:	vzeroupper 
  4066ab:	call   403240 <__assert_fail@plt>
  4066b0:	lea    rdi,[rip+0x5c7d]        # 40c334 <_IO_stdin_used@@Base+0x334>
  4066b7:	lea    rsi,[rip+0x5d5d]        # 40c41b <_IO_stdin_used@@Base+0x41b>
  4066be:	lea    rcx,[rip+0x5df7]        # 40c4bc <_IO_stdin_used@@Base+0x4bc>
  4066c5:	mov    edx,0x15d
  4066ca:	call   403240 <__assert_fail@plt>
  4066cf:	nop
  4066d0:	push   rbp
  4066d1:	push   r15
  4066d3:	push   r14
  4066d5:	push   r13
  4066d7:	push   r12
  4066d9:	push   rbx
  4066da:	sub    rsp,0x128
  4066e1:	mov    DWORD PTR [rsp+0xc],edx
  4066e5:	mov    r12d,esi
  4066e8:	mov    DWORD PTR [rsp+0x8],edi
  4066ec:	mov    edi,0x118
  4066f1:	add    rdi,QWORD PTR [rip+0x98e8]        # 40ffe0 <traverse_info@@Base-0x388>
  4066f8:	lea    rsi,[rsp+0x1c]
  4066fd:	call   4031e0 <coda_cursor_get_type_class@plt>
  406702:	test   eax,eax
  406704:	je     40670d <dim_enter_array@@Base+0xdbd>
  406706:	xor    eax,eax
  406708:	call   40a7d0 <handle_coda_error@@Base>
  40670d:	mov    eax,DWORD PTR [rsp+0x1c]
  406711:	lea    ecx,[rax-0x4]
  406714:	cmp    ecx,0x2
  406717:	jb     4067c9 <dim_enter_array@@Base+0xe79>
  40671d:	test   eax,eax
  40671f:	je     406861 <dim_enter_array@@Base+0xf11>
  406725:	cmp    eax,0x1
  406728:	jne    406dfa <dim_enter_array@@Base+0x14aa>
  40672e:	movsxd rax,r12d
  406731:	lea    rbp,[rax+rax*4]
  406735:	shl    rbp,0x4
  406739:	lea    r14,[rip+0x9c28]        # 410368 <traverse_info@@Base>
  406740:	movsxd rbx,DWORD PTR [r14+rbp*1+0x534]
  406748:	cmp    DWORD PTR [r14+0xf34],r12d
  40674f:	jne    40694d <dim_enter_array@@Base+0xffd>
  406755:	mov    edi,0x118
  40675a:	add    rdi,QWORD PTR [rip+0x987f]        # 40ffe0 <traverse_info@@Base-0x388>
  406761:	lea    rsi,[rsp+0x10]
  406766:	lea    rdx,[rsp+0x20]
  40676b:	call   403490 <coda_cursor_get_array_dim@plt>
  406770:	test   eax,eax
  406772:	je     40677b <dim_enter_array@@Base+0xe2b>
  406774:	xor    eax,eax
  406776:	call   40a7d0 <handle_coda_error@@Base>
  40677b:	mov    eax,DWORD PTR [rsp+0x10]
  40677f:	cmp    eax,DWORD PTR [r14+rbp*1+0x538]
  406787:	jne    406e38 <dim_enter_array@@Base+0x14e8>
  40678d:	test   eax,eax
  40678f:	jle    406de5 <dim_enter_array@@Base+0x1495>
  406795:	lea    rax,[r14+rbp*1]
  406799:	add    rax,0x538
  40679f:	lea    rcx,[rbp+r14*1+0x560]
  4067a7:	lea    rsi,[rip+0xad22]        # 4114d0 <dim_info@@Base>
  4067ae:	lea    r8,[rsi+rbx*8]
  4067b2:	add    r8,0x70
  4067b6:	lea    rsi,[rsi+rbx*4]
  4067ba:	add    rsi,0x24
  4067be:	xor    edi,edi
  4067c0:	cmp    DWORD PTR [rcx+rdi*4-0x24],0xffffffff
  4067c5:	jne    40681d <dim_enter_array@@Base+0xecd>
  4067c7:	jmp    406833 <dim_enter_array@@Base+0xee3>
  4067c9:	lea    rbx,[rip+0x9b98]        # 410368 <traverse_info@@Base>
  4067d0:	cmp    DWORD PTR [rbx+0xf34],r12d
  4067d7:	jne    406e19 <dim_enter_array@@Base+0x14c9>
  4067dd:	mov    edi,0x118
  4067e2:	add    rdi,QWORD PTR [rip+0x97f7]        # 40ffe0 <traverse_info@@Base-0x388>
  4067e9:	cmp    eax,0x4
  4067ec:	jne    4068d3 <dim_enter_array@@Base+0xf83>
  4067f2:	lea    rsi,[rsp+0x10]
  4067f7:	call   403370 <coda_cursor_get_string_length@plt>
  4067fc:	test   eax,eax
  4067fe:	je     406807 <dim_enter_array@@Base+0xeb7>
  406800:	xor    eax,eax
  406802:	call   40a7d0 <handle_coda_error@@Base>
  406807:	mov    rax,QWORD PTR [rsp+0x10]
  40680c:	mov    QWORD PTR [rsp+0x20],rax
  406811:	jmp    4068e8 <dim_enter_array@@Base+0xf98>
  406816:	mov    DWORD PTR [rsi+rdi*4-0x20],ebp
  40681a:	mov    DWORD PTR [rsi+rdi*4],ebp
  40681d:	inc    rdi
  406820:	movsxd rdx,DWORD PTR [rax]
  406823:	cmp    rdi,rdx
  406826:	jge    406de5 <dim_enter_array@@Base+0x1495>
  40682c:	cmp    DWORD PTR [rcx+rdi*4-0x24],0xffffffff
  406831:	jne    40681d <dim_enter_array@@Base+0xecd>
  406833:	mov    rbp,QWORD PTR [rsp+rdi*8+0x20]
  406838:	mov    rbx,QWORD PTR [r8+rdi*8]
  40683c:	movsxd rdx,DWORD PTR [rcx]
  40683f:	mov    DWORD PTR [rbx+rdx*4],ebp
  406842:	movsxd rbx,DWORD PTR [rsi+rdi*4-0x20]
  406847:	cmp    rbx,0xffffffffffffffff
  40684b:	je     406816 <dim_enter_array@@Base+0xec6>
  40684d:	cmp    rbp,rbx
  406850:	jle    406856 <dim_enter_array@@Base+0xf06>
  406852:	mov    DWORD PTR [rsi+rdi*4-0x20],ebp
  406856:	movsxd rdx,DWORD PTR [rsi+rdi*4]
  40685a:	cmp    rbp,rdx
  40685d:	jl     40681a <dim_enter_array@@Base+0xeca>
  40685f:	jmp    40681d <dim_enter_array@@Base+0xecd>
  406861:	movsxd rbx,DWORD PTR [rsp+0xc]
  406866:	lea    r14,[rip+0x9afb]        # 410368 <traverse_info@@Base>
  40686d:	movsxd rsi,DWORD PTR [r14+rbx*4+0xfb8]
  406875:	lea    rbp,[r14+0x118]
  40687c:	lea    rdx,[rsp+0x20]
  406881:	mov    rdi,rbp
  406884:	call   4030c0 <coda_cursor_get_record_field_available_status@plt>
  406889:	test   eax,eax
  40688b:	je     406894 <dim_enter_array@@Base+0xf44>
  40688d:	xor    eax,eax
  40688f:	call   40a7d0 <handle_coda_error@@Base>
  406894:	cmp    DWORD PTR [rsp+0x20],0x0
  406899:	je     406967 <dim_enter_array@@Base+0x1017>
  40689f:	movsxd rsi,DWORD PTR [r14+rbx*4+0xfb8]
  4068a7:	mov    rdi,rbp
  4068aa:	call   4032c0 <coda_cursor_goto_record_field_by_index@plt>
  4068af:	test   eax,eax
  4068b1:	je     4068ba <dim_enter_array@@Base+0xf6a>
  4068b3:	xor    eax,eax
  4068b5:	call   40a7d0 <handle_coda_error@@Base>
  4068ba:	mov    edi,DWORD PTR [rsp+0x8]
  4068be:	inc    edi
  4068c0:	mov    edx,DWORD PTR [rsp+0xc]
  4068c4:	inc    edx
  4068c6:	mov    esi,r12d
  4068c9:	call   4066d0 <dim_enter_array@@Base+0xd80>
  4068ce:	jmp    406dd4 <dim_enter_array@@Base+0x1484>
  4068d3:	lea    rsi,[rsp+0x20]
  4068d8:	call   403030 <coda_cursor_get_byte_size@plt>
  4068dd:	test   eax,eax
  4068df:	je     4068e8 <dim_enter_array@@Base+0xf98>
  4068e1:	xor    eax,eax
  4068e3:	call   40a7d0 <handle_coda_error@@Base>
  4068e8:	movsxd rax,r12d
  4068eb:	lea    rsi,[rax+rax*4]
  4068ef:	shl    rsi,0x4
  4068f3:	movsxd rcx,DWORD PTR [rbx+rsi*1+0x534]
  4068fb:	mov    rax,QWORD PTR [rsp+0x20]
  406900:	lea    rdx,[rip+0xabc9]        # 4114d0 <dim_info@@Base>
  406907:	mov    rdi,QWORD PTR [rdx+rcx*8+0x70]
  40690c:	movsxd rsi,DWORD PTR [rbx+rsi*1+0x560]
  406914:	mov    DWORD PTR [rdi+rsi*4],eax
  406917:	movsxd rsi,DWORD PTR [rdx+rcx*4+0x4]
  40691c:	cmp    rsi,0xffffffffffffffff
  406920:	je     40693a <dim_enter_array@@Base+0xfea>
  406922:	cmp    rax,rsi
  406925:	jle    40692b <dim_enter_array@@Base+0xfdb>
  406927:	mov    DWORD PTR [rdx+rcx*4+0x4],eax
  40692b:	movsxd rsi,DWORD PTR [rdx+rcx*4+0x24]
  406930:	cmp    rax,rsi
  406933:	jl     40693e <dim_enter_array@@Base+0xfee>
  406935:	jmp    406de5 <dim_enter_array@@Base+0x1495>
  40693a:	mov    DWORD PTR [rdx+rcx*4+0x4],eax
  40693e:	lea    rcx,[rdx+rcx*4]
  406942:	add    rcx,0x24
  406946:	mov    DWORD PTR [rcx],eax
  406948:	jmp    406de5 <dim_enter_array@@Base+0x1495>
  40694d:	lea    rax,[r14+rbp*1]
  406951:	add    rax,0x560
  406957:	test   r12d,r12d
  40695a:	je     406a0e <dim_enter_array@@Base+0x10be>
  406960:	mov    eax,DWORD PTR [rax]
  406962:	jmp    406a16 <dim_enter_array@@Base+0x10c6>
  406967:	movsxd rax,DWORD PTR [r14+0xf34]
  40696e:	lea    rcx,[rax+rax*4]
  406972:	shl    rcx,0x4
  406976:	mov    ebp,DWORD PTR [r14+rcx*1+0x538]
  40697e:	test   ebp,ebp
  406980:	jle    406de5 <dim_enter_array@@Base+0x1495>
  406986:	lea    rax,[r14+rcx*1]
  40698a:	add    rax,0x538
  406990:	movsxd rsi,DWORD PTR [rcx+r14*1+0x534]
  406998:	lea    rcx,[rcx+r14*1+0x560]
  4069a0:	lea    rdi,[rip+0xab29]        # 4114d0 <dim_info@@Base>
  4069a7:	lea    rdx,[rdi+rsi*8]
  4069ab:	add    rdx,0x70
  4069af:	lea    rsi,[rdi+rsi*4]
  4069b3:	add    rsi,0x4
  4069b7:	xor    edi,edi
  4069b9:	cmp    DWORD PTR [rcx+rdi*4-0x24],0xffffffff
  4069be:	jne    4069da <dim_enter_array@@Base+0x108a>
  4069c0:	jmp    4069f0 <dim_enter_array@@Base+0x10a0>
  4069c2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4069cc:	nop    DWORD PTR [rax+0x0]
  4069d0:	mov    DWORD PTR [rsi+rdi*4+0x20],0x0
  4069d8:	mov    ebp,DWORD PTR [rax]
  4069da:	inc    rdi
  4069dd:	movsxd rbx,ebp
  4069e0:	cmp    rdi,rbx
  4069e3:	jge    406de5 <dim_enter_array@@Base+0x1495>
  4069e9:	cmp    DWORD PTR [rcx+rdi*4-0x24],0xffffffff
  4069ee:	jne    4069da <dim_enter_array@@Base+0x108a>
  4069f0:	mov    rbp,QWORD PTR [rdx+rdi*8]
  4069f4:	movsxd rbx,DWORD PTR [rcx]
  4069f7:	mov    DWORD PTR [rbp+rbx*4+0x0],0x0
  4069ff:	cmp    DWORD PTR [rsi+rdi*4],0xffffffff
  406a03:	jne    4069d0 <dim_enter_array@@Base+0x1080>
  406a05:	mov    DWORD PTR [rsi+rdi*4],0x0
  406a0c:	jmp    4069d0 <dim_enter_array@@Base+0x1080>
  406a0e:	mov    DWORD PTR [rax],0x0
  406a14:	xor    eax,eax
  406a16:	mov    ecx,DWORD PTR [r14+rbp*1+0x55c]
  406a1e:	imul   ecx,eax
  406a21:	inc    r12d
  406a24:	movsxd rdx,r12d
  406a27:	lea    r15,[rdx+rdx*4]
  406a2b:	shl    r15,0x4
  406a2f:	mov    DWORD PTR [r14+r15*1+0x560],ecx
  406a37:	movsxd r10,DWORD PTR [r14+rbp*1+0x538]
  406a3f:	test   r10,r10
  406a42:	jle    406a6c <dim_enter_array@@Base+0x111c>
  406a44:	movsxd r11,eax
  406a47:	add    r10,rbx
  406a4a:	lea    r9,[rbx+0x1]
  406a4e:	cmp    r9,r10
  406a51:	cmovl  r9,r10
  406a55:	sub    r9,rbx
  406a58:	mov    r13d,0x1
  406a5e:	cmp    r9,0x10
  406a62:	jae    406a77 <dim_enter_array@@Base+0x1127>
  406a64:	mov    rdx,rbx
  406a67:	jmp    406d18 <dim_enter_array@@Base+0x13c8>
  406a6c:	mov    r13d,0x1
  406a72:	jmp    406d5c <dim_enter_array@@Base+0x140c>
  406a77:	mov    r8,r9
  406a7a:	and    r8,0xfffffffffffffff0
  406a7e:	lea    rdx,[r8+rbx*1]
  406a82:	vmovq  xmm0,rbx
  406a87:	vpbroadcastq ymm0,xmm0
  406a8c:	vpaddq ymm13,ymm0,YMMWORD PTR [rip+0x58ec]        # 40c380 <_IO_stdin_used@@Base+0x380>
  406a94:	lea    rbp,[rbx*8+0x70]
  406a9c:	lea    rdi,[rbx*8+0xd0]
  406aa4:	lea    rsi,[rbx*8+0xb0]
  406aac:	lea    rax,[rbx*8+0x90]
  406ab4:	lea    rcx,[rbx+0x1e]
  406ab8:	vpbroadcastd xmm14,DWORD PTR [rip+0x58f7]        # 40c3b8 <_IO_stdin_used@@Base+0x3b8>
  406ac1:	vbroadcastsd ymm0,QWORD PTR [rip+0x58f6]        # 40c3c0 <_IO_stdin_used@@Base+0x3c0>
  406aca:	vmovups YMMWORD PTR [rsp+0xe0],ymm0
  406ad3:	lea    r13,[rip+0xa9f6]        # 4114d0 <dim_info@@Base>
  406ada:	vbroadcastsd ymm0,QWORD PTR [rip+0x58e5]        # 40c3c8 <_IO_stdin_used@@Base+0x3c8>
  406ae3:	vmovups YMMWORD PTR [rsp+0xc0],ymm0
  406aec:	vbroadcastsd ymm0,QWORD PTR [rip+0x58db]        # 40c3d0 <_IO_stdin_used@@Base+0x3d0>
  406af5:	vmovups YMMWORD PTR [rsp+0xa0],ymm0
  406afe:	vbroadcastsd ymm0,QWORD PTR [rip+0x58d1]        # 40c3d8 <_IO_stdin_used@@Base+0x3d8>
  406b07:	vmovups YMMWORD PTR [rsp+0x80],ymm0
  406b10:	vbroadcastsd ymm0,QWORD PTR [rip+0x58c7]        # 40c3e0 <_IO_stdin_used@@Base+0x3e0>
  406b19:	vmovupd YMMWORD PTR [rsp+0x60],ymm0
  406b1f:	mov    rbx,r8
  406b22:	vmovdqa xmm8,xmm14
  406b27:	vmovdqa xmm2,xmm14
  406b2b:	vmovdqa xmm6,xmm14
  406b2f:	nop
  406b30:	vpmovzxdq ymm11,XMMWORD PTR [r13+rcx*4-0x30]
  406b37:	vpmovzxdq ymm15,XMMWORD PTR [r13+rcx*4-0x20]
  406b3e:	vmovdqa ymm0,YMMWORD PTR [rip+0x581a]        # 40c360 <_IO_stdin_used@@Base+0x360>
  406b46:	vpermd ymm12,ymm0,ymm11
  406b4b:	vmovdqa ymm5,ymm0
  406b4f:	vpmovzxdq ymm0,XMMWORD PTR [r13+rcx*4-0x10]
  406b56:	vmovdqu YMMWORD PTR [rsp+0x100],ymm0
  406b5f:	vpxor  xmm0,xmm0,xmm0
  406b63:	vpcmpeqd xmm3,xmm12,xmm0
  406b67:	vpcmpeqd xmm1,xmm1,xmm1
  406b6b:	vpxor  xmm3,xmm3,xmm1
  406b6f:	vpmovsxdq ymm3,xmm3
  406b74:	vpmaskmovq ymm3,ymm3,YMMWORD PTR [r13+rbp*1+0x0]
  406b7b:	vmovq  xmm4,r11
  406b80:	vpbroadcastq ymm4,xmm4
  406b85:	vpsllq ymm4,ymm4,0x2
  406b8a:	vpsllq ymm12,ymm13,0x2
  406b90:	vmovq  xmm10,r13
  406b95:	vpaddq ymm3,ymm3,ymm4
  406b99:	vpbroadcastq ymm10,xmm10
  406b9e:	vpaddq ymm10,ymm10,ymm12
  406ba3:	vpaddq ymm12,ymm10,YMMWORD PTR [rsp+0xe0]
  406bac:	vpxor  xmm1,xmm1,xmm1
  406bb0:	vpcmpeqq ymm11,ymm11,ymm1
  406bb5:	vblendvpd ymm3,ymm3,ymm12,ymm11
  406bbb:	vmovdqa ymm7,ymm5
  406bbf:	vpermd ymm11,ymm5,ymm15
  406bc4:	vpxor  xmm9,xmm9,xmm9
  406bc9:	vpcmpeqd xmm5,xmm11,xmm9
  406bce:	vpcmpeqd xmm0,xmm0,xmm0
  406bd2:	vpxor  xmm5,xmm5,xmm0
  406bd6:	vpmovsxdq ymm5,xmm5
  406bdb:	vpmaskmovq ymm5,ymm5,YMMWORD PTR [r13+rax*1+0x0]
  406be2:	vpaddq ymm5,ymm5,ymm4
  406be6:	vpaddq ymm11,ymm10,YMMWORD PTR [rsp+0xc0]
  406bef:	vpcmpeqq ymm12,ymm15,ymm1
  406bf4:	vblendvpd ymm5,ymm5,ymm11,ymm12
  406bfa:	vmovdqu ymm12,YMMWORD PTR [rsp+0x100]
  406c03:	vpermd ymm11,ymm7,ymm12
  406c08:	vmovdqa ymm15,ymm7
  406c0c:	vpcmpeqd xmm7,xmm11,xmm9
  406c11:	vpxor  xmm9,xmm9,xmm9
  406c16:	vpxor  xmm7,xmm7,xmm0
  406c1a:	vpmovsxdq ymm7,xmm7
  406c1f:	vpmaskmovq ymm7,ymm7,YMMWORD PTR [r13+rsi*1+0x0]
  406c26:	vpaddq ymm7,ymm7,ymm4
  406c2a:	vpaddq ymm11,ymm10,YMMWORD PTR [rsp+0xa0]
  406c33:	vpcmpeqq ymm12,ymm12,ymm1
  406c38:	vblendvpd ymm7,ymm7,ymm11,ymm12
  406c3e:	vpmovzxdq ymm11,XMMWORD PTR [r13+rcx*4+0x0]
  406c45:	vpermd ymm12,ymm15,ymm11
  406c4a:	vpcmpeqd xmm0,xmm12,xmm9
  406c4f:	vpxor  xmm0,xmm0,XMMWORD PTR [rip+0x5799]        # 40c3f0 <_IO_stdin_used@@Base+0x3f0>
  406c57:	vpmovsxdq ymm0,xmm0
  406c5c:	vpmaskmovq ymm0,ymm0,YMMWORD PTR [r13+rdi*1+0x0]
  406c63:	vpaddq ymm0,ymm0,ymm4
  406c67:	vpaddq ymm4,ymm10,YMMWORD PTR [rsp+0x80]
  406c70:	vpcmpeqq ymm10,ymm11,ymm1
  406c75:	vblendvpd ymm0,ymm0,ymm4,ymm10
  406c7b:	vpcmpeqd xmm4,xmm4,xmm4
  406c7f:	vpgatherqd xmm1,DWORD PTR [ymm3*1+0x0],xmm4
  406c89:	vpcmpeqd xmm3,xmm3,xmm3
  406c8d:	vpgatherqd xmm4,DWORD PTR [ymm5*1+0x0],xmm3
  406c97:	vpcmpeqd xmm3,xmm3,xmm3
  406c9b:	vpgatherqd xmm5,DWORD PTR [ymm7*1+0x0],xmm3
  406ca5:	vpcmpeqd xmm3,xmm3,xmm3
  406ca9:	vpgatherqd xmm7,DWORD PTR [ymm0*1+0x0],xmm3
  406cb3:	vpmulld xmm6,xmm1,xmm6
  406cb8:	vpmulld xmm8,xmm4,xmm8
  406cbd:	vpmulld xmm2,xmm5,xmm2
  406cc2:	vpmulld xmm14,xmm7,xmm14
  406cc7:	vpaddq ymm13,ymm13,YMMWORD PTR [rsp+0x60]
  406ccd:	add    rcx,0x10
  406cd1:	sub    rbp,0xffffffffffffff80
  406cd5:	sub    rdi,0xffffffffffffff80
  406cd9:	sub    rsi,0xffffffffffffff80
  406cdd:	sub    rax,0xffffffffffffff80
  406ce1:	add    rbx,0xfffffffffffffff0
  406ce5:	jne    406b30 <dim_enter_array@@Base+0x11e0>
  406ceb:	vpmulld xmm0,xmm8,xmm6
  406cf0:	vpmulld xmm0,xmm2,xmm0
  406cf5:	vpmulld xmm0,xmm14,xmm0
  406cfa:	vpshufd xmm1,xmm0,0x4e
  406cff:	vpmulld xmm0,xmm0,xmm1
  406d04:	vpshufd xmm1,xmm0,0xe5
  406d09:	vpmulld xmm0,xmm0,xmm1
  406d0e:	vmovd  r13d,xmm0
  406d13:	cmp    r9,r8
  406d16:	je     406d53 <dim_enter_array@@Base+0x1403>
  406d18:	lea    rax,[rip+0xa7b1]        # 4114d0 <dim_info@@Base>
  406d1f:	lea    rcx,[rax+rdx*4]
  406d23:	add    rcx,0x48
  406d27:	shl    r11,0x2
  406d2b:	cmp    DWORD PTR [rcx],0x0
  406d2e:	jne    406d49 <dim_enter_array@@Base+0x13f9>
  406d30:	lea    rsi,[rcx-0x44]
  406d34:	imul   r13d,DWORD PTR [rsi]
  406d38:	inc    rdx
  406d3b:	add    rcx,0x4
  406d3f:	cmp    rdx,r10
  406d42:	jge    406d53 <dim_enter_array@@Base+0x1403>
  406d44:	cmp    DWORD PTR [rcx],0x0
  406d47:	je     406d30 <dim_enter_array@@Base+0x13e0>
  406d49:	mov    rsi,QWORD PTR [rax+rdx*8+0x70]
  406d4e:	add    rsi,r11
  406d51:	jmp    406d34 <dim_enter_array@@Base+0x13e4>
  406d53:	test   r13d,r13d
  406d56:	jle    406de5 <dim_enter_array@@Base+0x1495>
  406d5c:	mov    ebp,0x118
  406d61:	add    rbp,QWORD PTR [rip+0x9278]        # 40ffe0 <traverse_info@@Base-0x388>
  406d68:	mov    rdi,rbp
  406d6b:	vzeroupper 
  406d6e:	call   403270 <coda_cursor_goto_first_array_element@plt>
  406d73:	test   eax,eax
  406d75:	je     406d7e <dim_enter_array@@Base+0x142e>
  406d77:	xor    eax,eax
  406d79:	call   40a7d0 <handle_coda_error@@Base>
  406d7e:	lea    rbx,[r14+r15*1]
  406d82:	add    rbx,0x560
  406d89:	inc    DWORD PTR [rsp+0x8]
  406d8d:	lea    r14d,[r13-0x1]
  406d91:	xor    r15d,r15d
  406d94:	jmp    406daa <dim_enter_array@@Base+0x145a>
  406d96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406da0:	inc    DWORD PTR [rbx]
  406da2:	inc    r15d
  406da5:	cmp    r13d,r15d
  406da8:	je     406dd4 <dim_enter_array@@Base+0x1484>
  406daa:	mov    edi,DWORD PTR [rsp+0x8]
  406dae:	mov    esi,r12d
  406db1:	mov    edx,DWORD PTR [rsp+0xc]
  406db5:	call   4066d0 <dim_enter_array@@Base+0xd80>
  406dba:	cmp    r15d,r14d
  406dbd:	jge    406da2 <dim_enter_array@@Base+0x1452>
  406dbf:	mov    rdi,rbp
  406dc2:	call   4033b0 <coda_cursor_goto_next_array_element@plt>
  406dc7:	test   eax,eax
  406dc9:	je     406da0 <dim_enter_array@@Base+0x1450>
  406dcb:	xor    eax,eax
  406dcd:	call   40a7d0 <handle_coda_error@@Base>
  406dd2:	jmp    406da0 <dim_enter_array@@Base+0x1450>
  406dd4:	mov    edi,0x118
  406dd9:	add    rdi,QWORD PTR [rip+0x9200]        # 40ffe0 <traverse_info@@Base-0x388>
  406de0:	call   403320 <coda_cursor_goto_parent@plt>
  406de5:	add    rsp,0x128
  406dec:	pop    rbx
  406ded:	pop    r12
  406def:	pop    r13
  406df1:	pop    r14
  406df3:	pop    r15
  406df5:	pop    rbp
  406df6:	vzeroupper 
  406df9:	ret    
  406dfa:	lea    rdi,[rip+0x5533]        # 40c334 <_IO_stdin_used@@Base+0x334>
  406e01:	lea    rsi,[rip+0x5613]        # 40c41b <_IO_stdin_used@@Base+0x41b>
  406e08:	lea    rcx,[rip+0x5753]        # 40c562 <_IO_stdin_used@@Base+0x562>
  406e0f:	mov    edx,0x126
  406e14:	call   403240 <__assert_fail@plt>
  406e19:	lea    rdi,[rip+0x576d]        # 40c58d <_IO_stdin_used@@Base+0x58d>
  406e20:	lea    rsi,[rip+0x55f4]        # 40c41b <_IO_stdin_used@@Base+0x41b>
  406e27:	lea    rcx,[rip+0x5734]        # 40c562 <_IO_stdin_used@@Base+0x562>
  406e2e:	mov    edx,0xfc
  406e33:	call   403240 <__assert_fail@plt>
  406e38:	lea    rdi,[rip+0x5702]        # 40c541 <_IO_stdin_used@@Base+0x541>
  406e3f:	lea    rsi,[rip+0x55d5]        # 40c41b <_IO_stdin_used@@Base+0x41b>
  406e46:	lea    rcx,[rip+0x5715]        # 40c562 <_IO_stdin_used@@Base+0x562>
  406e4d:	mov    edx,0x7d
  406e52:	call   403240 <__assert_fail@plt>
  406e57:	nop    WORD PTR [rax+rax*1+0x0]

0000000000406e60 <dim_leave_array@@Base>:
  406e60:	push   rbp
  406e61:	push   r15
  406e63:	push   r14
  406e65:	push   r13
  406e67:	push   r12
  406e69:	push   rbx
  406e6a:	push   rax
  406e6b:	lea    rdx,[rip+0x94f6]        # 410368 <traverse_info@@Base>
  406e72:	movsxd rax,DWORD PTR [rdx+0xf34]
  406e79:	test   rax,rax
  406e7c:	js     407168 <dim_leave_array@@Base+0x308>
  406e82:	lea    rsi,[rax+rax*4]
  406e86:	shl    rsi,0x4
  406e8a:	movsxd r14,DWORD PTR [rdx+rsi*1+0x534]
  406e92:	mov    eax,DWORD PTR [rdx+rsi*1+0x538]
  406e99:	lea    r12,[rip+0xa630]        # 4114d0 <dim_info@@Base>
  406ea0:	mov    ecx,DWORD PTR [r12]
  406ea4:	sub    ecx,eax
  406ea6:	mov    DWORD PTR [r12],ecx
  406eaa:	test   eax,eax
  406eac:	jle    406f04 <dim_leave_array@@Base+0xa4>
  406eae:	lea    r15,[rdx+rsi*1]
  406eb2:	add    r15,0x538
  406eb9:	lea    rbx,[r12+r14*4]
  406ebd:	add    rbx,0x48
  406ec1:	lea    r13,[r12+r14*8]
  406ec5:	add    r13,0x70
  406ec9:	xor    ebp,ebp
  406ecb:	cmp    DWORD PTR [rbx+rbp*4],0x0
  406ecf:	jne    406ef1 <dim_leave_array@@Base+0x91>
  406ed1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406edb:	nop    DWORD PTR [rax+rax*1+0x0]
  406ee0:	inc    rbp
  406ee3:	movsxd rcx,eax
  406ee6:	cmp    rbp,rcx
  406ee9:	jge    406f00 <dim_leave_array@@Base+0xa0>
  406eeb:	cmp    DWORD PTR [rbx+rbp*4],0x0
  406eef:	je     406ee0 <dim_leave_array@@Base+0x80>
  406ef1:	mov    rdi,QWORD PTR [r13+rbp*8+0x0]
  406ef6:	call   403070 <free@plt>
  406efb:	mov    eax,DWORD PTR [r15]
  406efe:	jmp    406ee0 <dim_leave_array@@Base+0x80>
  406f00:	mov    ecx,DWORD PTR [r12]
  406f04:	mov    DWORD PTR [r12+0x44],0x0
  406f0d:	mov    DWORD PTR [r12+0x68],0xffffffff
  406f16:	test   ecx,ecx
  406f18:	jle    406ff0 <dim_leave_array@@Base+0x190>
  406f1e:	movsxd rsi,ecx
  406f21:	lea    rdx,[rsi-0x1]
  406f25:	and    ecx,0x3
  406f28:	cmp    rdx,0x3
  406f2c:	jae    406f35 <dim_leave_array@@Base+0xd5>
  406f2e:	xor    edx,edx
  406f30:	jmp    406fbc <dim_leave_array@@Base+0x15c>
  406f35:	sub    rsi,rcx
  406f38:	xor    edx,edx
  406f3a:	cmp    DWORD PTR [r12+rdx*4+0x48],0x0
  406f40:	jne    406f61 <dim_leave_array@@Base+0x101>
  406f42:	jmp    406f6f <dim_leave_array@@Base+0x10f>
  406f44:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406f4e:	xchg   ax,ax
  406f50:	add    rdx,0x4
  406f54:	cmp    rsi,rdx
  406f57:	je     406fbc <dim_leave_array@@Base+0x15c>
  406f59:	cmp    DWORD PTR [r12+rdx*4+0x48],0x0
  406f5f:	je     406f6f <dim_leave_array@@Base+0x10f>
  406f61:	mov    DWORD PTR [r12+0x44],0x1
  406f6a:	mov    DWORD PTR [r12+0x68],edx
  406f6f:	cmp    DWORD PTR [r12+rdx*4+0x4c],0x0
  406f75:	je     406f88 <dim_leave_array@@Base+0x128>
  406f77:	mov    DWORD PTR [r12+0x44],0x1
  406f80:	lea    edi,[rdx+0x1]
  406f83:	mov    DWORD PTR [r12+0x68],edi
  406f88:	cmp    DWORD PTR [r12+rdx*4+0x50],0x0
  406f8e:	je     406fa1 <dim_leave_array@@Base+0x141>
  406f90:	mov    DWORD PTR [r12+0x44],0x1
  406f99:	lea    edi,[rdx+0x2]
  406f9c:	mov    DWORD PTR [r12+0x68],edi
  406fa1:	cmp    DWORD PTR [r12+rdx*4+0x54],0x0
  406fa7:	je     406f50 <dim_leave_array@@Base+0xf0>
  406fa9:	mov    DWORD PTR [r12+0x44],0x1
  406fb2:	lea    edi,[rdx+0x3]
  406fb5:	mov    DWORD PTR [r12+0x68],edi
  406fba:	jmp    406f50 <dim_leave_array@@Base+0xf0>
  406fbc:	test   rcx,rcx
  406fbf:	jne    406fd8 <dim_leave_array@@Base+0x178>
  406fc1:	jmp    406ff0 <dim_leave_array@@Base+0x190>
  406fc3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406fcd:	nop    DWORD PTR [rax]
  406fd0:	inc    rdx
  406fd3:	dec    rcx
  406fd6:	je     406ff0 <dim_leave_array@@Base+0x190>
  406fd8:	cmp    DWORD PTR [r12+rdx*4+0x48],0x0
  406fde:	je     406fd0 <dim_leave_array@@Base+0x170>
  406fe0:	mov    DWORD PTR [r12+0x44],0x1
  406fe9:	mov    DWORD PTR [r12+0x68],edx
  406fee:	jmp    406fd0 <dim_leave_array@@Base+0x170>
  406ff0:	lea    eax,[r14+rax*1]
  406ff4:	add    eax,0xffffffff
  406ff7:	cdqe   
  406ff9:	cmp    QWORD PTR [r12+rax*8+0x150],0x0
  407002:	jle    407159 <dim_leave_array@@Base+0x2f9>
  407008:	test   r14d,r14d
  40700b:	jle    407159 <dim_leave_array@@Base+0x2f9>
  407011:	lea    rsi,[r14-0x1]
  407015:	mov    rdi,r14
  407018:	mov    rcx,r14
  40701b:	and    rdi,0x3
  40701f:	je     40706b <dim_leave_array@@Base+0x20b>
  407021:	mov    rcx,r14
  407024:	jmp    407045 <dim_leave_array@@Base+0x1e5>
  407026:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407030:	cqo    
  407032:	idiv   rbp
  407035:	dec    rcx
  407038:	mov    QWORD PTR [r12+rbx*4+0xc8],rax
  407040:	dec    rdi
  407043:	je     40706b <dim_leave_array@@Base+0x20b>
  407045:	mov    rbp,QWORD PTR [r12+r14*8+0xd0]
  40704d:	lea    rbx,[rcx+rcx*1]
  407051:	mov    rax,QWORD PTR [r12+rcx*8+0xc8]
  407059:	mov    rdx,rax
  40705c:	or     rdx,rbp
  40705f:	shr    rdx,0x20
  407063:	jne    407030 <dim_leave_array@@Base+0x1d0>
  407065:	xor    edx,edx
  407067:	div    ebp
  407069:	jmp    407035 <dim_leave_array@@Base+0x1d5>
  40706b:	cmp    rsi,0x3
  40706f:	jae    407096 <dim_leave_array@@Base+0x236>
  407071:	jmp    407159 <dim_leave_array@@Base+0x2f9>
  407076:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407080:	cqo    
  407082:	idiv   rdi
  407085:	mov    QWORD PTR [r12+rsi*4+0xb0],rax
  40708d:	test   rcx,rcx
  407090:	jle    407159 <dim_leave_array@@Base+0x2f9>
  407096:	mov    rdi,QWORD PTR [r12+r14*8+0xd0]
  40709e:	lea    rsi,[rcx+rcx*1]
  4070a2:	mov    rax,QWORD PTR [r12+rcx*8+0xc8]
  4070aa:	mov    rdx,rax
  4070ad:	or     rdx,rdi
  4070b0:	shr    rdx,0x20
  4070b4:	je     4070c0 <dim_leave_array@@Base+0x260>
  4070b6:	cqo    
  4070b8:	idiv   rdi
  4070bb:	jmp    4070c4 <dim_leave_array@@Base+0x264>
  4070bd:	nop    DWORD PTR [rax]
  4070c0:	xor    edx,edx
  4070c2:	div    edi
  4070c4:	mov    QWORD PTR [r12+rsi*4+0xc8],rax
  4070cc:	mov    rdi,QWORD PTR [r12+r14*8+0xd0]
  4070d4:	mov    rax,QWORD PTR [r12+rcx*8+0xc0]
  4070dc:	mov    rdx,rax
  4070df:	or     rdx,rdi
  4070e2:	shr    rdx,0x20
  4070e6:	je     4070f0 <dim_leave_array@@Base+0x290>
  4070e8:	cqo    
  4070ea:	idiv   rdi
  4070ed:	jmp    4070f4 <dim_leave_array@@Base+0x294>
  4070ef:	nop
  4070f0:	xor    edx,edx
  4070f2:	div    edi
  4070f4:	mov    QWORD PTR [r12+rsi*4+0xc0],rax
  4070fc:	mov    rdi,QWORD PTR [r12+r14*8+0xd0]
  407104:	mov    rax,QWORD PTR [r12+rcx*8+0xb8]
  40710c:	mov    rdx,rax
  40710f:	or     rdx,rdi
  407112:	shr    rdx,0x20
  407116:	je     407120 <dim_leave_array@@Base+0x2c0>
  407118:	cqo    
  40711a:	idiv   rdi
  40711d:	jmp    407124 <dim_leave_array@@Base+0x2c4>
  40711f:	nop
  407120:	xor    edx,edx
  407122:	div    edi
  407124:	mov    QWORD PTR [r12+rsi*4+0xb8],rax
  40712c:	mov    rdi,QWORD PTR [r12+r14*8+0xd0]
  407134:	mov    rax,QWORD PTR [r12+rcx*8+0xb0]
  40713c:	add    rcx,0xfffffffffffffffc
  407140:	mov    rdx,rax
  407143:	or     rdx,rdi
  407146:	shr    rdx,0x20
  40714a:	jne    407080 <dim_leave_array@@Base+0x220>
  407150:	xor    edx,edx
  407152:	div    edi
  407154:	jmp    407085 <dim_leave_array@@Base+0x225>
  407159:	add    rsp,0x8
  40715d:	pop    rbx
  40715e:	pop    r12
  407160:	pop    r13
  407162:	pop    r14
  407164:	pop    r15
  407166:	pop    rbp
  407167:	ret    
  407168:	lea    rdi,[rip+0x539d]        # 40c50c <_IO_stdin_used@@Base+0x50c>
  40716f:	lea    rsi,[rip+0x52a5]        # 40c41b <_IO_stdin_used@@Base+0x41b>
  407176:	lea    rcx,[rip+0x53ad]        # 40c52a <_IO_stdin_used@@Base+0x52a>
  40717d:	mov    edx,0x243
  407182:	call   403240 <__assert_fail@plt>
  407187:	nop    WORD PTR [rax+rax*1+0x0]

0000000000407190 <dim_record_field_available@@Base>:
  407190:	xor    edi,edi
  407192:	xor    esi,esi
  407194:	xor    edx,edx
  407196:	jmp    4071a0 <dim_record_field_available@@Base+0x10>
  407198:	nop    DWORD PTR [rax+rax*1+0x0]
  4071a0:	push   rbp
  4071a1:	push   r15
  4071a3:	push   r14
  4071a5:	push   r13
  4071a7:	push   r12
  4071a9:	push   rbx
  4071aa:	sub    rsp,0xe8
  4071b1:	mov    DWORD PTR [rsp+0x10],edx
  4071b5:	mov    r13d,esi
  4071b8:	mov    DWORD PTR [rsp+0x14],edi
  4071bc:	mov    edi,0x118
  4071c1:	add    rdi,QWORD PTR [rip+0x8e18]        # 40ffe0 <traverse_info@@Base-0x388>
  4071c8:	lea    rsi,[rsp+0x1c]
  4071cd:	call   4031e0 <coda_cursor_get_type_class@plt>
  4071d2:	test   eax,eax
  4071d4:	je     4071dd <dim_record_field_available@@Base+0x4d>
  4071d6:	xor    eax,eax
  4071d8:	call   40a7d0 <handle_coda_error@@Base>
  4071dd:	mov    eax,DWORD PTR [rsp+0x1c]
  4071e1:	test   eax,eax
  4071e3:	je     407230 <dim_record_field_available@@Base+0xa0>
  4071e5:	cmp    eax,0x1
  4071e8:	jne    4076e9 <dim_record_field_available@@Base+0x559>
  4071ee:	lea    r14,[rip+0x9173]        # 410368 <traverse_info@@Base>
  4071f5:	cmp    DWORD PTR [r14+0xf34],r13d
  4071fc:	jle    407708 <dim_record_field_available@@Base+0x578>
  407202:	movsxd rax,r13d
  407205:	lea    rcx,[rax+rax*4]
  407209:	shl    rcx,0x4
  40720d:	movsxd rax,DWORD PTR [r14+rcx*1+0x534]
  407215:	lea    rdx,[r14+rcx*1]
  407219:	add    rdx,0x560
  407220:	test   r13d,r13d
  407223:	je     4072d5 <dim_record_field_available@@Base+0x145>
  407229:	mov    edx,DWORD PTR [rdx]
  40722b:	jmp    4072dd <dim_record_field_available@@Base+0x14d>
  407230:	movsxd rbp,DWORD PTR [rsp+0x10]
  407235:	lea    r14,[rip+0x912c]        # 410368 <traverse_info@@Base>
  40723c:	movsxd rsi,DWORD PTR [r14+rbp*4+0xfb8]
  407244:	lea    rbx,[r14+0x118]
  40724b:	lea    rdx,[rsp+0x18]
  407250:	mov    rdi,rbx
  407253:	call   4030c0 <coda_cursor_get_record_field_available_status@plt>
  407258:	test   eax,eax
  40725a:	je     407263 <dim_record_field_available@@Base+0xd3>
  40725c:	xor    eax,eax
  40725e:	call   40a7d0 <handle_coda_error@@Base>
  407263:	cmp    DWORD PTR [rsp+0x18],0x0
  407268:	je     4076d2 <dim_record_field_available@@Base+0x542>
  40726e:	mov    eax,DWORD PTR [r14+0x1138]
  407275:	dec    eax
  407277:	cmp    eax,DWORD PTR [rsp+0x10]
  40727b:	je     4076ba <dim_record_field_available@@Base+0x52a>
  407281:	movsxd rsi,DWORD PTR [r14+rbp*4+0xfb8]
  407289:	mov    rdi,rbx
  40728c:	call   4032c0 <coda_cursor_goto_record_field_by_index@plt>
  407291:	test   eax,eax
  407293:	je     40729c <dim_record_field_available@@Base+0x10c>
  407295:	xor    eax,eax
  407297:	call   40a7d0 <handle_coda_error@@Base>
  40729c:	mov    edi,DWORD PTR [rsp+0x14]
  4072a0:	inc    edi
  4072a2:	mov    edx,DWORD PTR [rsp+0x10]
  4072a6:	inc    edx
  4072a8:	mov    esi,r13d
  4072ab:	call   4071a0 <dim_record_field_available@@Base+0x10>
  4072b0:	mov    DWORD PTR [rsp+0x18],eax
  4072b4:	mov    edi,0x118
  4072b9:	add    rdi,QWORD PTR [rip+0x8d20]        # 40ffe0 <traverse_info@@Base-0x388>
  4072c0:	call   403320 <coda_cursor_goto_parent@plt>
  4072c5:	cmp    DWORD PTR [rsp+0x18],0x0
  4072ca:	jne    4076ba <dim_record_field_available@@Base+0x52a>
  4072d0:	jmp    4076d2 <dim_record_field_available@@Base+0x542>
  4072d5:	mov    DWORD PTR [rdx],0x0
  4072db:	xor    edx,edx
  4072dd:	mov    esi,DWORD PTR [r14+rcx*1+0x55c]
  4072e5:	imul   esi,edx
  4072e8:	inc    r13d
  4072eb:	movsxd rdi,r13d
  4072ee:	lea    r15,[rdi+rdi*4]
  4072f2:	shl    r15,0x4
  4072f6:	mov    DWORD PTR [r14+r15*1+0x560],esi
  4072fe:	mov    ecx,DWORD PTR [r14+rcx*1+0x538]
  407306:	test   ecx,ecx
  407308:	jle    407334 <dim_record_field_available@@Base+0x1a4>
  40730a:	add    ecx,eax
  40730c:	movsxd r10,ecx
  40730f:	movsxd r11,edx
  407312:	lea    r9,[rax+0x1]
  407316:	cmp    r9,r10
  407319:	cmovl  r9,r10
  40731d:	sub    r9,rax
  407320:	mov    r12d,0x1
  407326:	cmp    r9,0x10
  40732a:	jae    40733f <dim_record_field_available@@Base+0x1af>
  40732c:	mov    rdx,rax
  40732f:	jmp    4075dd <dim_record_field_available@@Base+0x44d>
  407334:	mov    r12d,0x1
  40733a:	jmp    40762c <dim_record_field_available@@Base+0x49c>
  40733f:	mov    r8,r9
  407342:	and    r8,0xfffffffffffffff0
  407346:	lea    rdx,[r8+rax*1]
  40734a:	vmovq  xmm0,rax
  40734f:	vpbroadcastq ymm0,xmm0
  407354:	vpaddq ymm13,ymm0,YMMWORD PTR [rip+0x5024]        # 40c380 <_IO_stdin_used@@Base+0x380>
  40735c:	lea    rbx,[rax*8+0x70]
  407364:	lea    rdi,[rax*8+0xd0]
  40736c:	lea    rsi,[rax*8+0xb0]
  407374:	lea    rbp,[rax*8+0x90]
  40737c:	lea    rax,[rax+0x1e]
  407380:	vpbroadcastd xmm14,DWORD PTR [rip+0x502f]        # 40c3b8 <_IO_stdin_used@@Base+0x3b8>
  407389:	vbroadcastsd ymm0,QWORD PTR [rip+0x502e]        # 40c3c0 <_IO_stdin_used@@Base+0x3c0>
  407392:	vmovups YMMWORD PTR [rsp+0xa0],ymm0
  40739b:	lea    r12,[rip+0xa12e]        # 4114d0 <dim_info@@Base>
  4073a2:	vbroadcastsd ymm0,QWORD PTR [rip+0x501d]        # 40c3c8 <_IO_stdin_used@@Base+0x3c8>
  4073ab:	vmovups YMMWORD PTR [rsp+0x80],ymm0
  4073b4:	vbroadcastsd ymm0,QWORD PTR [rip+0x5013]        # 40c3d0 <_IO_stdin_used@@Base+0x3d0>
  4073bd:	vmovups YMMWORD PTR [rsp+0x60],ymm0
  4073c3:	vbroadcastsd ymm0,QWORD PTR [rip+0x500c]        # 40c3d8 <_IO_stdin_used@@Base+0x3d8>
  4073cc:	vmovups YMMWORD PTR [rsp+0x40],ymm0
  4073d2:	vbroadcastsd ymm0,QWORD PTR [rip+0x5005]        # 40c3e0 <_IO_stdin_used@@Base+0x3e0>
  4073db:	vmovupd YMMWORD PTR [rsp+0x20],ymm0
  4073e1:	mov    rcx,r8
  4073e4:	vmovdqa xmm8,xmm14
  4073e9:	vmovdqa xmm2,xmm14
  4073ed:	vmovdqa xmm6,xmm14
  4073f1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4073fb:	nop    DWORD PTR [rax+rax*1+0x0]
  407400:	vpmovzxdq ymm11,XMMWORD PTR [r12+rax*4-0x30]
  407407:	vpmovzxdq ymm15,XMMWORD PTR [r12+rax*4-0x20]
  40740e:	vmovdqa ymm0,YMMWORD PTR [rip+0x4f4a]        # 40c360 <_IO_stdin_used@@Base+0x360>
  407416:	vpermd ymm12,ymm0,ymm11
  40741b:	vmovdqa ymm5,ymm0
  40741f:	vpmovzxdq ymm0,XMMWORD PTR [r12+rax*4-0x10]
  407426:	vmovdqu YMMWORD PTR [rsp+0xc0],ymm0
  40742f:	vpxor  xmm0,xmm0,xmm0
  407433:	vpcmpeqd xmm3,xmm12,xmm0
  407437:	vpcmpeqd xmm1,xmm1,xmm1
  40743b:	vpxor  xmm3,xmm3,xmm1
  40743f:	vpmovsxdq ymm3,xmm3
  407444:	vpmaskmovq ymm3,ymm3,YMMWORD PTR [r12+rbx*1]
  40744a:	vmovq  xmm4,r11
  40744f:	vpbroadcastq ymm4,xmm4
  407454:	vpsllq ymm4,ymm4,0x2
  407459:	vpsllq ymm12,ymm13,0x2
  40745f:	vmovq  xmm10,r12
  407464:	vpaddq ymm3,ymm3,ymm4
  407468:	vpbroadcastq ymm10,xmm10
  40746d:	vpaddq ymm10,ymm10,ymm12
  407472:	vpaddq ymm12,ymm10,YMMWORD PTR [rsp+0xa0]
  40747b:	vpxor  xmm1,xmm1,xmm1
  40747f:	vpcmpeqq ymm11,ymm11,ymm1
  407484:	vblendvpd ymm3,ymm3,ymm12,ymm11
  40748a:	vmovdqa ymm7,ymm5
  40748e:	vpermd ymm11,ymm5,ymm15
  407493:	vpxor  xmm9,xmm9,xmm9
  407498:	vpcmpeqd xmm5,xmm11,xmm9
  40749d:	vpcmpeqd xmm0,xmm0,xmm0
  4074a1:	vpxor  xmm5,xmm5,xmm0
  4074a5:	vpmovsxdq ymm5,xmm5
  4074aa:	vpmaskmovq ymm5,ymm5,YMMWORD PTR [r12+rbp*1]
  4074b0:	vpaddq ymm5,ymm5,ymm4
  4074b4:	vpaddq ymm11,ymm10,YMMWORD PTR [rsp+0x80]
  4074bd:	vpcmpeqq ymm12,ymm15,ymm1
  4074c2:	vblendvpd ymm5,ymm5,ymm11,ymm12
  4074c8:	vmovdqu ymm12,YMMWORD PTR [rsp+0xc0]
  4074d1:	vpermd ymm11,ymm7,ymm12
  4074d6:	vmovdqa ymm15,ymm7
  4074da:	vpcmpeqd xmm7,xmm11,xmm9
  4074df:	vpxor  xmm9,xmm9,xmm9
  4074e4:	vpxor  xmm7,xmm7,xmm0
  4074e8:	vpmovsxdq ymm7,xmm7
  4074ed:	vpmaskmovq ymm7,ymm7,YMMWORD PTR [r12+rsi*1]
  4074f3:	vpaddq ymm7,ymm7,ymm4
  4074f7:	vpaddq ymm11,ymm10,YMMWORD PTR [rsp+0x60]
  4074fd:	vpcmpeqq ymm12,ymm12,ymm1
  407502:	vblendvpd ymm7,ymm7,ymm11,ymm12
  407508:	vpmovzxdq ymm11,XMMWORD PTR [r12+rax*4]
  40750e:	vpermd ymm12,ymm15,ymm11
  407513:	vpcmpeqd xmm0,xmm12,xmm9
  407518:	vpxor  xmm0,xmm0,XMMWORD PTR [rip+0x4ed0]        # 40c3f0 <_IO_stdin_used@@Base+0x3f0>
  407520:	vpmovsxdq ymm0,xmm0
  407525:	vpmaskmovq ymm0,ymm0,YMMWORD PTR [r12+rdi*1]
  40752b:	vpaddq ymm0,ymm0,ymm4
  40752f:	vpaddq ymm4,ymm10,YMMWORD PTR [rsp+0x40]
  407535:	vpcmpeqq ymm10,ymm11,ymm1
  40753a:	vblendvpd ymm0,ymm0,ymm4,ymm10
  407540:	vpcmpeqd xmm4,xmm4,xmm4
  407544:	vpgatherqd xmm1,DWORD PTR [ymm3*1+0x0],xmm4
  40754e:	vpcmpeqd xmm3,xmm3,xmm3
  407552:	vpgatherqd xmm4,DWORD PTR [ymm5*1+0x0],xmm3
  40755c:	vpcmpeqd xmm3,xmm3,xmm3
  407560:	vpgatherqd xmm5,DWORD PTR [ymm7*1+0x0],xmm3
  40756a:	vpcmpeqd xmm3,xmm3,xmm3
  40756e:	vpgatherqd xmm7,DWORD PTR [ymm0*1+0x0],xmm3
  407578:	vpmulld xmm6,xmm1,xmm6
  40757d:	vpmulld xmm8,xmm4,xmm8
  407582:	vpmulld xmm2,xmm5,xmm2
  407587:	vpmulld xmm14,xmm7,xmm14
  40758c:	vpaddq ymm13,ymm13,YMMWORD PTR [rsp+0x20]
  407592:	add    rax,0x10
  407596:	sub    rbx,0xffffffffffffff80
  40759a:	sub    rdi,0xffffffffffffff80
  40759e:	sub    rsi,0xffffffffffffff80
  4075a2:	sub    rbp,0xffffffffffffff80
  4075a6:	add    rcx,0xfffffffffffffff0
  4075aa:	jne    407400 <dim_record_field_available@@Base+0x270>
  4075b0:	vpmulld xmm0,xmm8,xmm6
  4075b5:	vpmulld xmm0,xmm2,xmm0
  4075ba:	vpmulld xmm0,xmm14,xmm0
  4075bf:	vpshufd xmm1,xmm0,0x4e
  4075c4:	vpmulld xmm0,xmm0,xmm1
  4075c9:	vpshufd xmm1,xmm0,0xe5
  4075ce:	vpmulld xmm0,xmm0,xmm1
  4075d3:	vmovd  r12d,xmm0
  4075d8:	cmp    r9,r8
  4075db:	je     407623 <dim_record_field_available@@Base+0x493>
  4075dd:	lea    rax,[rip+0x9eec]        # 4114d0 <dim_info@@Base>
  4075e4:	lea    rcx,[rax+rdx*4]
  4075e8:	add    rcx,0x48
  4075ec:	shl    r11,0x2
  4075f0:	cmp    DWORD PTR [rcx],0x0
  4075f3:	jne    407619 <dim_record_field_available@@Base+0x489>
  4075f5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4075ff:	nop
  407600:	lea    rsi,[rcx-0x44]
  407604:	imul   r12d,DWORD PTR [rsi]
  407608:	inc    rdx
  40760b:	add    rcx,0x4
  40760f:	cmp    rdx,r10
  407612:	jge    407623 <dim_record_field_available@@Base+0x493>
  407614:	cmp    DWORD PTR [rcx],0x0
  407617:	je     407600 <dim_record_field_available@@Base+0x470>
  407619:	mov    rsi,QWORD PTR [rax+rdx*8+0x70]
  40761e:	add    rsi,r11
  407621:	jmp    407604 <dim_record_field_available@@Base+0x474>
  407623:	test   r12d,r12d
  407626:	jle    4076d2 <dim_record_field_available@@Base+0x542>
  40762c:	mov    ebx,0x118
  407631:	add    rbx,QWORD PTR [rip+0x89a8]        # 40ffe0 <traverse_info@@Base-0x388>
  407638:	mov    rdi,rbx
  40763b:	vzeroupper 
  40763e:	call   403270 <coda_cursor_goto_first_array_element@plt>
  407643:	test   eax,eax
  407645:	je     40764e <dim_record_field_available@@Base+0x4be>
  407647:	xor    eax,eax
  407649:	call   40a7d0 <handle_coda_error@@Base>
  40764e:	lea    rbp,[r14+r15*1]
  407652:	add    rbp,0x560
  407659:	inc    DWORD PTR [rsp+0x14]
  40765d:	lea    r14d,[r12-0x1]
  407662:	xor    r15d,r15d
  407665:	jmp    40767b <dim_record_field_available@@Base+0x4eb>
  407667:	nop    WORD PTR [rax+rax*1+0x0]
  407670:	inc    DWORD PTR [rbp+0x0]
  407673:	inc    r15d
  407676:	cmp    r12d,r15d
  407679:	je     4076c1 <dim_record_field_available@@Base+0x531>
  40767b:	mov    edi,DWORD PTR [rsp+0x14]
  40767f:	mov    esi,r13d
  407682:	mov    edx,DWORD PTR [rsp+0x10]
  407686:	call   4071a0 <dim_record_field_available@@Base+0x10>
  40768b:	test   eax,eax
  40768d:	jne    4076a9 <dim_record_field_available@@Base+0x519>
  40768f:	cmp    r15d,r14d
  407692:	jge    407673 <dim_record_field_available@@Base+0x4e3>
  407694:	mov    rdi,rbx
  407697:	call   4033b0 <coda_cursor_goto_next_array_element@plt>
  40769c:	test   eax,eax
  40769e:	je     407670 <dim_record_field_available@@Base+0x4e0>
  4076a0:	xor    eax,eax
  4076a2:	call   40a7d0 <handle_coda_error@@Base>
  4076a7:	jmp    407670 <dim_record_field_available@@Base+0x4e0>
  4076a9:	mov    edi,0x118
  4076ae:	add    rdi,QWORD PTR [rip+0x892b]        # 40ffe0 <traverse_info@@Base-0x388>
  4076b5:	call   403320 <coda_cursor_goto_parent@plt>
  4076ba:	mov    eax,0x1
  4076bf:	jmp    4076d4 <dim_record_field_available@@Base+0x544>
  4076c1:	mov    edi,0x118
  4076c6:	add    rdi,QWORD PTR [rip+0x8913]        # 40ffe0 <traverse_info@@Base-0x388>
  4076cd:	call   403320 <coda_cursor_goto_parent@plt>
  4076d2:	xor    eax,eax
  4076d4:	add    rsp,0xe8
  4076db:	pop    rbx
  4076dc:	pop    r12
  4076de:	pop    r13
  4076e0:	pop    r14
  4076e2:	pop    r15
  4076e4:	pop    rbp
  4076e5:	vzeroupper 
  4076e8:	ret    
  4076e9:	lea    rdi,[rip+0x4c44]        # 40c334 <_IO_stdin_used@@Base+0x334>
  4076f0:	lea    rsi,[rip+0x4d24]        # 40c41b <_IO_stdin_used@@Base+0x41b>
  4076f7:	lea    rcx,[rip+0x4ede]        # 40c5dc <_IO_stdin_used@@Base+0x5dc>
  4076fe:	mov    edx,0x2d9
  407703:	call   403240 <__assert_fail@plt>
  407708:	lea    rdi,[rip+0x4ea6]        # 40c5b5 <_IO_stdin_used@@Base+0x5b5>
  40770f:	lea    rsi,[rip+0x4d05]        # 40c41b <_IO_stdin_used@@Base+0x41b>
  407716:	lea    rcx,[rip+0x4ebf]        # 40c5dc <_IO_stdin_used@@Base+0x5dc>
  40771d:	mov    edx,0x27e
  407722:	call   403240 <__assert_fail@plt>
  407727:	nop    WORD PTR [rax+rax*1+0x0]

0000000000407730 <codadump_filter_create@@Base>:
  407730:	push   r15
  407732:	push   r14
  407734:	push   rbx
  407735:	sub    rsp,0x20
  407739:	mov    QWORD PTR [rsp+0x8],0x0
  407742:	mov    QWORD PTR [rsp+0x10],0x0
  40774b:	mov    QWORD PTR [rsp+0x18],rdi
  407750:	test   rdi,rdi
  407753:	je     4077ac <codadump_filter_create@@Base+0x7c>
  407755:	cmp    BYTE PTR [rdi],0x0
  407758:	je     4077ac <codadump_filter_create@@Base+0x7c>
  40775a:	lea    r14,[rsp+0x10]
  40775f:	lea    rbx,[rsp+0x18]
  407764:	lea    r15,[rsp+0x8]
  407769:	nop    DWORD PTR [rax+0x0]
  407770:	mov    rsi,r14
  407773:	mov    rdx,rbx
  407776:	call   4078e0 <codadump_filter_get_next_filter@@Base+0x30>
  40777b:	mov    rsi,QWORD PTR [rsp+0x10]
  407780:	test   rsi,rsi
  407783:	je     4077a2 <codadump_filter_create@@Base+0x72>
  407785:	mov    rdi,r15
  407788:	call   407b60 <codadump_filter_get_next_filter@@Base+0x2b0>
  40778d:	mov    QWORD PTR [rsp+0x10],0x0
  407796:	mov    rdi,QWORD PTR [rsp+0x18]
  40779b:	cmp    BYTE PTR [rdi],0x0
  40779e:	jne    407770 <codadump_filter_create@@Base+0x40>
  4077a0:	jmp    4077ac <codadump_filter_create@@Base+0x7c>
  4077a2:	lea    rdi,[rsp+0x8]
  4077a7:	call   4077c0 <codadump_filter_remove@@Base>
  4077ac:	mov    rax,QWORD PTR [rsp+0x8]
  4077b1:	add    rsp,0x20
  4077b5:	pop    rbx
  4077b6:	pop    r14
  4077b8:	pop    r15
  4077ba:	ret    
  4077bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004077c0 <codadump_filter_remove@@Base>:
  4077c0:	push   rbx
  4077c1:	test   rdi,rdi
  4077c4:	je     407822 <codadump_filter_remove@@Base+0x62>
  4077c6:	mov    rbx,rdi
  4077c9:	mov    rdi,QWORD PTR [rdi]
  4077cc:	test   rdi,rdi
  4077cf:	je     407820 <codadump_filter_remove@@Base+0x60>
  4077d1:	cmp    QWORD PTR [rdi+0x10],0x0
  4077d6:	je     4077e4 <codadump_filter_remove@@Base+0x24>
  4077d8:	add    rdi,0x10
  4077dc:	call   4077c0 <codadump_filter_remove@@Base>
  4077e1:	mov    rdi,QWORD PTR [rbx]
  4077e4:	cmp    QWORD PTR [rdi+0x8],0x0
  4077e9:	je     4077f7 <codadump_filter_remove@@Base+0x37>
  4077eb:	add    rdi,0x8
  4077ef:	call   4077c0 <codadump_filter_remove@@Base>
  4077f4:	mov    rdi,QWORD PTR [rbx]
  4077f7:	mov    rax,QWORD PTR [rdi]
  4077fa:	test   rax,rax
  4077fd:	je     407814 <codadump_filter_remove@@Base+0x54>
  4077ff:	mov    rdi,rax
  407802:	call   403070 <free@plt>
  407807:	mov    rax,QWORD PTR [rbx]
  40780a:	mov    QWORD PTR [rax],0x0
  407811:	mov    rdi,QWORD PTR [rbx]
  407814:	call   403070 <free@plt>
  407819:	mov    QWORD PTR [rbx],0x0
  407820:	pop    rbx
  407821:	ret    
  407822:	lea    rdi,[rip+0x4de8]        # 40c611 <_IO_stdin_used@@Base+0x611>
  407829:	lea    rsi,[rip+0x4df0]        # 40c620 <_IO_stdin_used@@Base+0x620>
  407830:	lea    rcx,[rip+0x4e4f]        # 40c686 <_IO_stdin_used@@Base+0x686>
  407837:	mov    edx,0xc0
  40783c:	call   403240 <__assert_fail@plt>
  407841:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40784b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000407850 <codadump_filter_get_fieldname@@Base>:
  407850:	push   rax
  407851:	test   rdi,rdi
  407854:	je     40785b <codadump_filter_get_fieldname@@Base+0xb>
  407856:	mov    rax,QWORD PTR [rdi]
  407859:	pop    rcx
  40785a:	ret    
  40785b:	lea    rdi,[rip+0x4daf]        # 40c611 <_IO_stdin_used@@Base+0x611>
  407862:	lea    rsi,[rip+0x4db7]        # 40c620 <_IO_stdin_used@@Base+0x620>
  407869:	lea    rcx,[rip+0x4e46]        # 40c6b6 <_IO_stdin_used@@Base+0x6b6>
  407870:	mov    edx,0xd8
  407875:	call   403240 <__assert_fail@plt>
  40787a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000407880 <codadump_filter_get_subfilter@@Base>:
  407880:	push   rax
  407881:	test   rdi,rdi
  407884:	je     40788c <codadump_filter_get_subfilter@@Base+0xc>
  407886:	mov    rax,QWORD PTR [rdi+0x8]
  40788a:	pop    rcx
  40788b:	ret    
  40788c:	lea    rdi,[rip+0x4d7e]        # 40c611 <_IO_stdin_used@@Base+0x611>
  407893:	lea    rsi,[rip+0x4d86]        # 40c620 <_IO_stdin_used@@Base+0x620>
  40789a:	lea    rcx,[rip+0x4e52]        # 40c6f3 <_IO_stdin_used@@Base+0x6f3>
  4078a1:	mov    edx,0xdf
  4078a6:	call   403240 <__assert_fail@plt>
  4078ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004078b0 <codadump_filter_get_next_filter@@Base>:
  4078b0:	push   rax
  4078b1:	test   rdi,rdi
  4078b4:	je     4078bc <codadump_filter_get_next_filter@@Base+0xc>
  4078b6:	mov    rax,QWORD PTR [rdi+0x10]
  4078ba:	pop    rcx
  4078bb:	ret    
  4078bc:	lea    rdi,[rip+0x4d4e]        # 40c611 <_IO_stdin_used@@Base+0x611>
  4078c3:	lea    rsi,[rip+0x4d56]        # 40c620 <_IO_stdin_used@@Base+0x620>
  4078ca:	lea    rcx,[rip+0x4e64]        # 40c735 <_IO_stdin_used@@Base+0x735>
  4078d1:	mov    edx,0xe6
  4078d6:	call   403240 <__assert_fail@plt>
  4078db:	nop    DWORD PTR [rax+rax*1+0x0]
  4078e0:	push   rbp
  4078e1:	push   r15
  4078e3:	push   r14
  4078e5:	push   r13
  4078e7:	push   r12
  4078e9:	push   rbx
  4078ea:	sub    rsp,0x18
  4078ee:	test   rdi,rdi
  4078f1:	je     407afb <codadump_filter_get_next_filter@@Base+0x24b>
  4078f7:	mov    r15,rsi
  4078fa:	test   rsi,rsi
  4078fd:	je     407b1a <codadump_filter_get_next_filter@@Base+0x26a>
  407903:	test   rdx,rdx
  407906:	je     407b39 <codadump_filter_get_next_filter@@Base+0x289>
  40790c:	mov    rbx,rdi
  40790f:	movabs rbp,0x100000600
  407919:	nop    DWORD PTR [rax+0x0]
  407920:	movzx  ecx,BYTE PTR [rbx]
  407923:	cmp    rcx,0x20
  407927:	ja     407934 <codadump_filter_get_next_filter@@Base+0x84>
  407929:	bt     rbp,rcx
  40792d:	jae    407934 <codadump_filter_get_next_filter@@Base+0x84>
  40792f:	inc    rbx
  407932:	jmp    407920 <codadump_filter_get_next_filter@@Base+0x70>
  407934:	mov    r14d,0x1
  40793a:	xor    eax,eax
  40793c:	movabs rsi,0x800500000000001
  407946:	xor    r12d,r12d
  407949:	jmp    40795e <codadump_filter_get_next_filter@@Base+0xae>
  40794b:	nop    DWORD PTR [rax+rax*1+0x0]
  407950:	movzx  ecx,BYTE PTR [rbx+r12*1+0x1]
  407956:	inc    r12
  407959:	inc    r14d
  40795c:	inc    eax
  40795e:	movzx  ecx,cl
  407961:	cmp    cl,0x3b
  407964:	ja     407950 <codadump_filter_get_next_filter@@Base+0xa0>
  407966:	bt     rsi,rcx
  40796a:	jae    407950 <codadump_filter_get_next_filter@@Base+0xa0>
  40796c:	test   r12d,r12d
  40796f:	je     407ad5 <codadump_filter_get_next_filter@@Base+0x225>
  407975:	mov    QWORD PTR [rsp+0x10],rdx
  40797a:	mov    ecx,r12d
  40797d:	mov    QWORD PTR [rsp],rcx
  407981:	mov    eax,eax
  407983:	mov    QWORD PTR [rsp+0x8],rax
  407988:	mov    edi,0x18
  40798d:	call   4033f0 <malloc@plt>
  407992:	mov    QWORD PTR [r15],rax
  407995:	test   rax,rax
  407998:	jne    4079c6 <codadump_filter_get_next_filter@@Base+0x116>
  40799a:	lea    rsi,[rip+0x46bc]        # 40c05d <_IO_stdin_used@@Base+0x5d>
  4079a1:	lea    rcx,[rip+0x4c78]        # 40c620 <_IO_stdin_used@@Base+0x620>
  4079a8:	mov    edx,0x18
  4079ad:	mov    edi,0xffffffff
  4079b2:	mov    r8d,0x45
  4079b8:	xor    eax,eax
  4079ba:	call   4030d0 <coda_set_error@plt>
  4079bf:	xor    eax,eax
  4079c1:	call   40a7d0 <handle_coda_error@@Base>
  4079c6:	lea    r13,[r12+0x1]
  4079cb:	mov    edi,r13d
  4079ce:	call   4033f0 <malloc@plt>
  4079d3:	mov    rcx,QWORD PTR [r15]
  4079d6:	mov    QWORD PTR [rcx],rax
  4079d9:	mov    rax,QWORD PTR [r15]
  4079dc:	mov    rdi,QWORD PTR [rax]
  4079df:	test   rdi,rdi
  4079e2:	jne    407a14 <codadump_filter_get_next_filter@@Base+0x164>
  4079e4:	lea    rsi,[rip+0x4def]        # 40c7da <_IO_stdin_used@@Base+0x7da>
  4079eb:	lea    rcx,[rip+0x4c2e]        # 40c620 <_IO_stdin_used@@Base+0x620>
  4079f2:	mov    edi,0xffffffff
  4079f7:	mov    edx,r13d
  4079fa:	mov    r8d,0x4c
  407a00:	xor    eax,eax
  407a02:	call   4030d0 <coda_set_error@plt>
  407a07:	xor    eax,eax
  407a09:	call   40a7d0 <handle_coda_error@@Base>
  407a0e:	mov    rax,QWORD PTR [r15]
  407a11:	mov    rdi,QWORD PTR [rax]
  407a14:	mov    r13,QWORD PTR [rsp+0x8]
  407a19:	add    r13,rbx
  407a1c:	mov    rsi,rbx
  407a1f:	mov    rdx,QWORD PTR [rsp]
  407a23:	call   4030a0 <strncpy@plt>
  407a28:	mov    rax,QWORD PTR [r15]
  407a2b:	mov    QWORD PTR [rax+0x8],0x0
  407a33:	mov    rax,QWORD PTR [r15]
  407a36:	mov    QWORD PTR [rax+0x10],0x0
  407a3e:	mov    rax,QWORD PTR [r15]
  407a41:	mov    r8,QWORD PTR [rax]
  407a44:	mov    ecx,r12d
  407a47:	lea    rax,[r8+rcx*1]
  407a4b:	add    rax,0xffffffffffffffff
  407a4f:	shl    rcx,0x20
  407a53:	movabs rsi,0xffffffff00000000
  407a5d:	mov    rdx,QWORD PTR [rsp+0x10]
  407a62:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407a6c:	nop    DWORD PTR [rax+0x0]
  407a70:	movzx  edi,BYTE PTR [rax]
  407a73:	cmp    rdi,0x20
  407a77:	ja     407a87 <codadump_filter_get_next_filter@@Base+0x1d7>
  407a79:	bt     rbp,rdi
  407a7d:	jae    407a87 <codadump_filter_get_next_filter@@Base+0x1d7>
  407a7f:	add    rcx,rsi
  407a82:	dec    rax
  407a85:	jmp    407a70 <codadump_filter_get_next_filter@@Base+0x1c0>
  407a87:	sar    rcx,0x20
  407a8b:	mov    BYTE PTR [r8+rcx*1],0x0
  407a90:	mov    al,BYTE PTR [r13+0x0]
  407a94:	cmp    al,0x2c
  407a96:	je     407ade <codadump_filter_get_next_filter@@Base+0x22e>
  407a98:	cmp    al,0x3b
  407a9a:	je     407ade <codadump_filter_get_next_filter@@Base+0x22e>
  407a9c:	cmp    al,0x2e
  407a9e:	jne    407ae9 <codadump_filter_get_next_filter@@Base+0x239>
  407aa0:	mov    eax,r14d
  407aa3:	add    rbx,rax
  407aa6:	mov    rsi,QWORD PTR [r15]
  407aa9:	add    rsi,0x8
  407aad:	mov    rdi,rbx
  407ab0:	call   4078e0 <codadump_filter_get_next_filter@@Base+0x30>
  407ab5:	mov    rax,QWORD PTR [r15]
  407ab8:	cmp    QWORD PTR [rax+0x8],0x0
  407abd:	jne    407aec <codadump_filter_get_next_filter@@Base+0x23c>
  407abf:	mov    rdi,r15
  407ac2:	add    rsp,0x18
  407ac6:	pop    rbx
  407ac7:	pop    r12
  407ac9:	pop    r13
  407acb:	pop    r14
  407acd:	pop    r15
  407acf:	pop    rbp
  407ad0:	jmp    4077c0 <codadump_filter_remove@@Base>
  407ad5:	mov    QWORD PTR [r15],0x0
  407adc:	jmp    407aec <codadump_filter_get_next_filter@@Base+0x23c>
  407ade:	mov    eax,r14d
  407ae1:	add    rbx,rax
  407ae4:	mov    QWORD PTR [rdx],rbx
  407ae7:	jmp    407aec <codadump_filter_get_next_filter@@Base+0x23c>
  407ae9:	mov    QWORD PTR [rdx],r13
  407aec:	add    rsp,0x18
  407af0:	pop    rbx
  407af1:	pop    r12
  407af3:	pop    r13
  407af5:	pop    r14
  407af7:	pop    r15
  407af9:	pop    rbp
  407afa:	ret    
  407afb:	lea    rdi,[rip+0x4c77]        # 40c779 <_IO_stdin_used@@Base+0x779>
  407b02:	lea    rsi,[rip+0x4b17]        # 40c620 <_IO_stdin_used@@Base+0x620>
  407b09:	lea    rcx,[rip+0x4c7d]        # 40c78d <_IO_stdin_used@@Base+0x78d>
  407b10:	mov    edx,0x2c
  407b15:	call   403240 <__assert_fail@plt>
  407b1a:	lea    rdi,[rip+0x4af0]        # 40c611 <_IO_stdin_used@@Base+0x611>
  407b21:	lea    rsi,[rip+0x4af8]        # 40c620 <_IO_stdin_used@@Base+0x620>
  407b28:	lea    rcx,[rip+0x4c5e]        # 40c78d <_IO_stdin_used@@Base+0x78d>
  407b2f:	mov    edx,0x2d
  407b34:	call   403240 <__assert_fail@plt>
  407b39:	lea    rdi,[rip+0x4c8d]        # 40c7cd <_IO_stdin_used@@Base+0x7cd>
  407b40:	lea    rsi,[rip+0x4ad9]        # 40c620 <_IO_stdin_used@@Base+0x620>
  407b47:	lea    rcx,[rip+0x4c3f]        # 40c78d <_IO_stdin_used@@Base+0x78d>
  407b4e:	mov    edx,0x2e
  407b53:	call   403240 <__assert_fail@plt>
  407b58:	nop    DWORD PTR [rax+rax*1+0x0]
  407b60:	push   r14
  407b62:	push   rbx
  407b63:	push   rax
  407b64:	mov    QWORD PTR [rsp],rsi
  407b68:	test   rdi,rdi
  407b6b:	je     407be3 <codadump_filter_get_next_filter@@Base+0x333>
  407b6d:	mov    rbx,rsi
  407b70:	test   rsi,rsi
  407b73:	je     407bdb <codadump_filter_get_next_filter@@Base+0x32b>
  407b75:	mov    r14,QWORD PTR [rdi]
  407b78:	test   r14,r14
  407b7b:	je     407ba3 <codadump_filter_get_next_filter@@Base+0x2f3>
  407b7d:	mov    rdi,QWORD PTR [r14]
  407b80:	mov    rsi,QWORD PTR [rbx]
  407b83:	call   4032f0 <strcmp@plt>
  407b88:	test   eax,eax
  407b8a:	je     407ba8 <codadump_filter_get_next_filter@@Base+0x2f8>
  407b8c:	cmp    QWORD PTR [r14+0x10],0x0
  407b91:	lea    rdi,[r14+0x10]
  407b95:	je     407ba3 <codadump_filter_get_next_filter@@Base+0x2f3>
  407b97:	mov    rsi,rbx
  407b9a:	add    rsp,0x8
  407b9e:	pop    rbx
  407b9f:	pop    r14
  407ba1:	jmp    407b60 <codadump_filter_get_next_filter@@Base+0x2b0>
  407ba3:	mov    QWORD PTR [rdi],rbx
  407ba6:	jmp    407bdb <codadump_filter_get_next_filter@@Base+0x32b>
  407ba8:	cmp    QWORD PTR [r14+0x8],0x0
  407bad:	je     407bd3 <codadump_filter_get_next_filter@@Base+0x323>
  407baf:	add    r14,0x8
  407bb3:	mov    rsi,QWORD PTR [rbx+0x8]
  407bb7:	mov    rdi,r14
  407bba:	test   rsi,rsi
  407bbd:	je     407bce <codadump_filter_get_next_filter@@Base+0x31e>
  407bbf:	call   407b60 <codadump_filter_get_next_filter@@Base+0x2b0>
  407bc4:	mov    QWORD PTR [rbx+0x8],0x0
  407bcc:	jmp    407bd3 <codadump_filter_get_next_filter@@Base+0x323>
  407bce:	call   4077c0 <codadump_filter_remove@@Base>
  407bd3:	mov    rdi,rsp
  407bd6:	call   4077c0 <codadump_filter_remove@@Base>
  407bdb:	add    rsp,0x8
  407bdf:	pop    rbx
  407be0:	pop    r14
  407be2:	ret    
  407be3:	lea    rdi,[rip+0x4a27]        # 40c611 <_IO_stdin_used@@Base+0x611>
  407bea:	lea    rsi,[rip+0x4a2f]        # 40c620 <_IO_stdin_used@@Base+0x620>
  407bf1:	lea    rcx,[rip+0x4c16]        # 40c80e <_IO_stdin_used@@Base+0x80e>
  407bf8:	mov    edx,0x75
  407bfd:	call   403240 <__assert_fail@plt>
  407c02:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407c0c:	nop    DWORD PTR [rax+0x0]

0000000000407c10 <print_json_data@@Base>:
  407c10:	push   rbx
  407c11:	sub    rsp,0x320
  407c18:	mov    DWORD PTR [rip+0x871e],edi        # 41033c <__bss_start@@Base+0xc>
  407c1e:	lea    rbx,[rip+0x8743]        # 410368 <traverse_info@@Base>
  407c25:	mov    rdi,QWORD PTR [rbx]
  407c28:	lea    rsi,[rsp+0x8]
  407c2d:	call   4030e0 <coda_open@plt>
  407c32:	test   eax,eax
  407c34:	je     407c6b <print_json_data@@Base+0x5b>
  407c36:	call   4035d0 <coda_get_errno@plt>
  407c3b:	cmp    DWORD PTR [rax],0xffffffeb
  407c3e:	jne    407c64 <print_json_data@@Base+0x54>
  407c40:	xor    edi,edi
  407c42:	call   403130 <coda_set_option_use_mmap@plt>
  407c47:	mov    rdi,QWORD PTR [rbx]
  407c4a:	lea    rsi,[rsp+0x8]
  407c4f:	call   4030e0 <coda_open@plt>
  407c54:	mov    ebx,eax
  407c56:	mov    edi,0x1
  407c5b:	call   403130 <coda_set_option_use_mmap@plt>
  407c60:	test   ebx,ebx
  407c62:	je     407c6b <print_json_data@@Base+0x5b>
  407c64:	xor    eax,eax
  407c66:	call   40a7d0 <handle_coda_error@@Base>
  407c6b:	mov    rsi,QWORD PTR [rsp+0x8]
  407c70:	lea    rdi,[rsp+0x10]
  407c75:	call   403290 <coda_cursor_set_product@plt>
  407c7a:	test   eax,eax
  407c7c:	je     407c85 <print_json_data@@Base+0x75>
  407c7e:	xor    eax,eax
  407c80:	call   40a7d0 <handle_coda_error@@Base>
  407c85:	lea    rax,[rip+0x983c]        # 4114c8 <starting_path@@Base>
  407c8c:	mov    rsi,QWORD PTR [rax]
  407c8f:	test   rsi,rsi
  407c92:	je     407ca9 <print_json_data@@Base+0x99>
  407c94:	lea    rdi,[rsp+0x10]
  407c99:	call   4034d0 <coda_cursor_goto@plt>
  407c9e:	test   eax,eax
  407ca0:	je     407ca9 <print_json_data@@Base+0x99>
  407ca2:	xor    eax,eax
  407ca4:	call   40a7d0 <handle_coda_error@@Base>
  407ca9:	xor    edi,edi
  407cab:	call   403090 <coda_set_option_perform_boundary_checks@plt>
  407cb0:	lea    rdi,[rsp+0x10]
  407cb5:	call   407ce0 <print_json_data@@Base+0xd0>
  407cba:	lea    rdi,[rip+0x50bf]        # 40cd80 <_IO_stdin_used@@Base+0xd80>
  407cc1:	xor    eax,eax
  407cc3:	call   4089a0 <print_json_data@@Base+0xd90>
  407cc8:	mov    rdi,QWORD PTR [rsp+0x8]
  407ccd:	call   4034b0 <coda_close@plt>
  407cd2:	add    rsp,0x320
  407cd9:	pop    rbx
  407cda:	ret    
  407cdb:	nop    DWORD PTR [rax+rax*1+0x0]
  407ce0:	push   rbp
  407ce1:	push   r15
  407ce3:	push   r14
  407ce5:	push   r13
  407ce7:	push   r12
  407ce9:	push   rbx
  407cea:	sub    rsp,0x78
  407cee:	mov    r13,rdi
  407cf1:	mov    DWORD PTR [rsp+0x1c],0x0
  407cf9:	cmp    DWORD PTR [rip+0x863c],0x0        # 41033c <__bss_start@@Base+0xc>
  407d00:	je     407d60 <print_json_data@@Base+0x150>
  407d02:	lea    rsi,[rsp+0x1c]
  407d07:	mov    rdi,r13
  407d0a:	call   4031d0 <coda_cursor_has_attributes@plt>
  407d0f:	test   eax,eax
  407d11:	je     407d1a <print_json_data@@Base+0x10a>
  407d13:	xor    eax,eax
  407d15:	call   40a7d0 <handle_coda_error@@Base>
  407d1a:	cmp    DWORD PTR [rsp+0x1c],0x0
  407d1f:	je     407d60 <print_json_data@@Base+0x150>
  407d21:	lea    rdi,[rip+0x4bf0]        # 40c918 <_IO_stdin_used@@Base+0x918>
  407d28:	xor    eax,eax
  407d2a:	call   4089a0 <print_json_data@@Base+0xd90>
  407d2f:	mov    rdi,r13
  407d32:	call   403410 <coda_cursor_goto_attributes@plt>
  407d37:	test   eax,eax
  407d39:	je     407d42 <print_json_data@@Base+0x132>
  407d3b:	xor    eax,eax
  407d3d:	call   40a7d0 <handle_coda_error@@Base>
  407d42:	mov    rdi,r13
  407d45:	call   407ce0 <print_json_data@@Base+0xd0>
  407d4a:	mov    rdi,r13
  407d4d:	call   403320 <coda_cursor_goto_parent@plt>
  407d52:	lea    rdi,[rip+0x4bc8]        # 40c921 <_IO_stdin_used@@Base+0x921>
  407d59:	xor    eax,eax
  407d5b:	call   4089a0 <print_json_data@@Base+0xd90>
  407d60:	lea    rsi,[rsp+0x74]
  407d65:	mov    rdi,r13
  407d68:	call   4031e0 <coda_cursor_get_type_class@plt>
  407d6d:	test   eax,eax
  407d6f:	je     407d78 <print_json_data@@Base+0x168>
  407d71:	xor    eax,eax
  407d73:	call   40a7d0 <handle_coda_error@@Base>
  407d78:	mov    eax,DWORD PTR [rsp+0x74]
  407d7c:	cmp    rax,0x6
  407d80:	ja     408033 <print_json_data@@Base+0x423>
  407d86:	lea    rcx,[rip+0x4abb]        # 40c848 <_IO_stdin_used@@Base+0x848>
  407d8d:	movsxd rax,DWORD PTR [rcx+rax*4]
  407d91:	add    rax,rcx
  407d94:	jmp    rax
  407d96:	lea    rsi,[rsp+0x10]
  407d9b:	mov    rdi,r13
  407d9e:	call   4032e0 <coda_cursor_get_read_type@plt>
  407da3:	test   eax,eax
  407da5:	je     407dae <print_json_data@@Base+0x19e>
  407da7:	xor    eax,eax
  407da9:	call   40a7d0 <handle_coda_error@@Base>
  407dae:	mov    eax,DWORD PTR [rsp+0x10]
  407db2:	inc    eax
  407db4:	cmp    eax,0xd
  407db7:	ja     408033 <print_json_data@@Base+0x423>
  407dbd:	lea    rcx,[rip+0x4ab0]        # 40c874 <_IO_stdin_used@@Base+0x874>
  407dc4:	movsxd rax,DWORD PTR [rcx+rax*4]
  407dc8:	add    rax,rcx
  407dcb:	jmp    rax
  407dcd:	lea    rsi,[rsp+0x20]
  407dd2:	mov    rdi,r13
  407dd5:	call   403590 <coda_cursor_read_int32@plt>
  407dda:	test   eax,eax
  407ddc:	je     407de5 <print_json_data@@Base+0x1d5>
  407dde:	xor    eax,eax
  407de0:	call   40a7d0 <handle_coda_error@@Base>
  407de5:	movsxd rsi,DWORD PTR [rsp+0x20]
  407dea:	lea    rdi,[rip+0x4c22]        # 40ca13 <_IO_stdin_used@@Base+0xa13>
  407df1:	jmp    40802c <print_json_data@@Base+0x41c>
  407df6:	lea    rdi,[rip+0x4b2d]        # 40c92a <_IO_stdin_used@@Base+0x92a>
  407dfd:	xor    eax,eax
  407dff:	call   4089a0 <print_json_data@@Base+0xd90>
  407e04:	lea    rsi,[rsp+0x20]
  407e09:	mov    rdi,r13
  407e0c:	call   403110 <coda_cursor_get_num_elements@plt>
  407e11:	test   eax,eax
  407e13:	je     407e1c <print_json_data@@Base+0x20c>
  407e15:	xor    eax,eax
  407e17:	call   40a7d0 <handle_coda_error@@Base>
  407e1c:	cmp    QWORD PTR [rsp+0x20],0x0
  407e22:	jle    408312 <print_json_data@@Base+0x702>
  407e28:	lea    rsi,[rsp+0x8]
  407e2d:	mov    rdi,r13
  407e30:	call   403180 <coda_cursor_get_type@plt>
  407e35:	test   eax,eax
  407e37:	je     407e40 <print_json_data@@Base+0x230>
  407e39:	xor    eax,eax
  407e3b:	call   40a7d0 <handle_coda_error@@Base>
  407e40:	mov    rdi,QWORD PTR [rsp+0x8]
  407e45:	lea    rsi,[rsp+0x70]
  407e4a:	call   403440 <coda_type_get_record_union_status@plt>
  407e4f:	test   eax,eax
  407e51:	je     407e5a <print_json_data@@Base+0x24a>
  407e53:	xor    eax,eax
  407e55:	call   40a7d0 <handle_coda_error@@Base>
  407e5a:	cmp    DWORD PTR [rsp+0x70],0x0
  407e5f:	je     408211 <print_json_data@@Base+0x601>
  407e65:	lea    rsi,[rsp+0x10]
  407e6a:	mov    rdi,r13
  407e6d:	call   403570 <coda_cursor_get_available_union_field_index@plt>
  407e72:	test   eax,eax
  407e74:	je     407e7d <print_json_data@@Base+0x26d>
  407e76:	xor    eax,eax
  407e78:	call   40a7d0 <handle_coda_error@@Base>
  407e7d:	mov    rdi,QWORD PTR [rsp+0x8]
  407e82:	mov    rsi,QWORD PTR [rsp+0x10]
  407e87:	lea    rdx,[rsp+0x60]
  407e8c:	call   4035f0 <coda_type_get_record_field_name@plt>
  407e91:	test   eax,eax
  407e93:	je     407e9c <print_json_data@@Base+0x28c>
  407e95:	xor    eax,eax
  407e97:	call   40a7d0 <handle_coda_error@@Base>
  407e9c:	mov    rsi,QWORD PTR [rsp+0x10]
  407ea1:	mov    rdi,r13
  407ea4:	call   4032c0 <coda_cursor_goto_record_field_by_index@plt>
  407ea9:	test   eax,eax
  407eab:	je     407eb4 <print_json_data@@Base+0x2a4>
  407ead:	xor    eax,eax
  407eaf:	call   40a7d0 <handle_coda_error@@Base>
  407eb4:	mov    rsi,QWORD PTR [rsp+0x60]
  407eb9:	lea    rdi,[rip+0x4a6c]        # 40c92c <_IO_stdin_used@@Base+0x92c>
  407ec0:	xor    eax,eax
  407ec2:	call   4089a0 <print_json_data@@Base+0xd90>
  407ec7:	mov    rdi,r13
  407eca:	call   407ce0 <print_json_data@@Base+0xd0>
  407ecf:	jmp    40830a <print_json_data@@Base+0x6fa>
  407ed4:	lea    rdi,[rip+0x4b32]        # 40ca0d <_IO_stdin_used@@Base+0xa0d>
  407edb:	xor    eax,eax
  407edd:	call   4089a0 <print_json_data@@Base+0xd90>
  407ee2:	lea    rsi,[rsp+0x8]
  407ee7:	lea    rdx,[rsp+0x20]
  407eec:	mov    rdi,r13
  407eef:	call   403490 <coda_cursor_get_array_dim@plt>
  407ef4:	test   eax,eax
  407ef6:	je     407eff <print_json_data@@Base+0x2ef>
  407ef8:	xor    eax,eax
  407efa:	call   40a7d0 <handle_coda_error@@Base>
  407eff:	mov    eax,DWORD PTR [rsp+0x8]
  407f03:	test   eax,eax
  407f05:	js     40893c <print_json_data@@Base+0xd2c>
  407f0b:	test   eax,eax
  407f0d:	je     40831e <print_json_data@@Base+0x70e>
  407f13:	cmp    eax,0x10
  407f16:	jae    4083ed <print_json_data@@Base+0x7dd>
  407f1c:	mov    ebx,0x1
  407f21:	xor    ecx,ecx
  407f23:	jmp    4088c0 <print_json_data@@Base+0xcb0>
  407f28:	lea    rsi,[rsp+0x10]
  407f2d:	mov    rdi,r13
  407f30:	call   403260 <coda_cursor_get_special_type@plt>
  407f35:	test   eax,eax
  407f37:	je     407f40 <print_json_data@@Base+0x330>
  407f39:	xor    eax,eax
  407f3b:	call   40a7d0 <handle_coda_error@@Base>
  407f40:	mov    eax,DWORD PTR [rsp+0x10]
  407f44:	cmp    rax,0x3
  407f48:	ja     408033 <print_json_data@@Base+0x423>
  407f4e:	lea    rcx,[rip+0x490f]        # 40c864 <_IO_stdin_used@@Base+0x864>
  407f55:	movsxd rax,DWORD PTR [rcx+rax*4]
  407f59:	add    rax,rcx
  407f5c:	jmp    rax
  407f5e:	lea    rdi,[rip+0x4a33]        # 40c998 <_IO_stdin_used@@Base+0x998>
  407f65:	jmp    408943 <print_json_data@@Base+0xd33>
  407f6a:	lea    rsi,[rsp+0x20]
  407f6f:	mov    rdi,r13
  407f72:	call   403150 <coda_cursor_read_uint32@plt>
  407f77:	test   eax,eax
  407f79:	je     407f82 <print_json_data@@Base+0x372>
  407f7b:	xor    eax,eax
  407f7d:	call   40a7d0 <handle_coda_error@@Base>
  407f82:	mov    esi,DWORD PTR [rsp+0x20]
  407f86:	lea    rdi,[rip+0x4188]        # 40c115 <_IO_stdin_used@@Base+0x115>
  407f8d:	jmp    40802c <print_json_data@@Base+0x41c>
  407f92:	lea    rsi,[rsp+0x20]
  407f97:	mov    rdi,r13
  407f9a:	call   403390 <coda_cursor_read_double@plt>
  407f9f:	test   eax,eax
  407fa1:	je     407faa <print_json_data@@Base+0x39a>
  407fa3:	xor    eax,eax
  407fa5:	call   40a7d0 <handle_coda_error@@Base>
  407faa:	cmp    DWORD PTR [rsp+0x10],0x8
  407faf:	vmovq  xmm0,QWORD PTR [rsp+0x20]
  407fb5:	lea    rax,[rip+0x415d]        # 40c119 <_IO_stdin_used@@Base+0x119>
  407fbc:	lea    rdi,[rip+0x415b]        # 40c11e <_IO_stdin_used@@Base+0x11e>
  407fc3:	cmove  rdi,rax
  407fc7:	jmp    40838f <print_json_data@@Base+0x77f>
  407fcc:	lea    rsi,[rsp+0x8]
  407fd1:	mov    rdi,r13
  407fd4:	call   4034c0 <coda_cursor_read_int64@plt>
  407fd9:	test   eax,eax
  407fdb:	je     407fe4 <print_json_data@@Base+0x3d4>
  407fdd:	xor    eax,eax
  407fdf:	call   40a7d0 <handle_coda_error@@Base>
  407fe4:	mov    rdi,QWORD PTR [rsp+0x8]
  407fe9:	lea    rbx,[rsp+0x20]
  407fee:	mov    rsi,rbx
  407ff1:	call   403610 <coda_str64@plt>
  407ff6:	jmp    408022 <print_json_data@@Base+0x412>
  407ff8:	lea    rsi,[rsp+0x8]
  407ffd:	mov    rdi,r13
  408000:	call   403380 <coda_cursor_read_uint64@plt>
  408005:	test   eax,eax
  408007:	je     408010 <print_json_data@@Base+0x400>
  408009:	xor    eax,eax
  40800b:	call   40a7d0 <handle_coda_error@@Base>
  408010:	mov    rdi,QWORD PTR [rsp+0x8]
  408015:	lea    rbx,[rsp+0x20]
  40801a:	mov    rsi,rbx
  40801d:	call   403120 <coda_str64u@plt>
  408022:	lea    rdi,[rip+0x4aad]        # 40cad6 <_IO_stdin_used@@Base+0xad6>
  408029:	mov    rsi,rbx
  40802c:	xor    eax,eax
  40802e:	call   4089a0 <print_json_data@@Base+0xd90>
  408033:	cmp    DWORD PTR [rsp+0x1c],0x0
  408038:	je     408048 <print_json_data@@Base+0x438>
  40803a:	lea    rdi,[rip+0x48f1]        # 40c932 <_IO_stdin_used@@Base+0x932>
  408041:	xor    eax,eax
  408043:	call   4089a0 <print_json_data@@Base+0xd90>
  408048:	add    rsp,0x78
  40804c:	pop    rbx
  40804d:	pop    r12
  40804f:	pop    r13
  408051:	pop    r14
  408053:	pop    r15
  408055:	pop    rbp
  408056:	ret    
  408057:	lea    rsi,[rsp+0x20]
  40805c:	mov    rdi,r13
  40805f:	call   403420 <coda_cursor_read_char@plt>
  408064:	test   eax,eax
  408066:	je     40806f <print_json_data@@Base+0x45f>
  408068:	xor    eax,eax
  40806a:	call   40a7d0 <handle_coda_error@@Base>
  40806f:	lea    rbx,[rip+0x496b]        # 40c9e1 <_IO_stdin_used@@Base+0x9e1>
  408076:	mov    rdi,rbx
  408079:	xor    eax,eax
  40807b:	call   4089a0 <print_json_data@@Base+0xd90>
  408080:	lea    rdi,[rsp+0x20]
  408085:	mov    esi,0x1
  40808a:	call   408a50 <print_json_data@@Base+0xe40>
  40808f:	mov    rdi,rbx
  408092:	jmp    408943 <print_json_data@@Base+0xd33>
  408097:	lea    rsi,[rsp+0x20]
  40809c:	mov    rdi,r13
  40809f:	call   403370 <coda_cursor_get_string_length@plt>
  4080a4:	test   eax,eax
  4080a6:	je     4080af <print_json_data@@Base+0x49f>
  4080a8:	xor    eax,eax
  4080aa:	call   40a7d0 <handle_coda_error@@Base>
  4080af:	mov    r15,QWORD PTR [rsp+0x20]
  4080b4:	inc    r15
  4080b7:	mov    rdi,r15
  4080ba:	call   4033f0 <malloc@plt>
  4080bf:	mov    r14,rax
  4080c2:	test   rax,rax
  4080c5:	jne    4080f9 <print_json_data@@Base+0x4e9>
  4080c7:	lea    rsi,[rip+0x3f8f]        # 40c05d <_IO_stdin_used@@Base+0x5d>
  4080ce:	lea    rcx,[rip+0x485f]        # 40c934 <_IO_stdin_used@@Base+0x934>
  4080d5:	mov    edi,0xffffffff
  4080da:	mov    rdx,r15
  4080dd:	mov    r8d,0x12f
  4080e3:	xor    eax,eax
  4080e5:	call   4030d0 <coda_set_error@plt>
  4080ea:	xor    eax,eax
  4080ec:	call   40a7d0 <handle_coda_error@@Base>
  4080f1:	mov    r15,QWORD PTR [rsp+0x20]
  4080f6:	inc    r15
  4080f9:	mov    rdi,r13
  4080fc:	mov    rsi,r14
  4080ff:	mov    rdx,r15
  408102:	call   403310 <coda_cursor_read_string@plt>
  408107:	test   eax,eax
  408109:	je     408112 <print_json_data@@Base+0x502>
  40810b:	xor    eax,eax
  40810d:	call   40a7d0 <handle_coda_error@@Base>
  408112:	lea    rbx,[rip+0x48c8]        # 40c9e1 <_IO_stdin_used@@Base+0x9e1>
  408119:	mov    rdi,rbx
  40811c:	xor    eax,eax
  40811e:	call   4089a0 <print_json_data@@Base+0xd90>
  408123:	mov    rsi,QWORD PTR [rsp+0x20]
  408128:	mov    rdi,r14
  40812b:	call   408a50 <print_json_data@@Base+0xe40>
  408130:	mov    rsi,QWORD PTR [rsp+0x20]
  408135:	mov    rdi,rbx
  408138:	xor    eax,eax
  40813a:	call   4089a0 <print_json_data@@Base+0xd90>
  40813f:	mov    rdi,r14
  408142:	jmp    4081fc <print_json_data@@Base+0x5ec>
  408147:	lea    rsi,[rsp+0x20]
  40814c:	mov    rdi,r13
  40814f:	call   403540 <coda_cursor_get_bit_size@plt>
  408154:	test   eax,eax
  408156:	je     40815f <print_json_data@@Base+0x54f>
  408158:	xor    eax,eax
  40815a:	call   40a7d0 <handle_coda_error@@Base>
  40815f:	mov    r12,QWORD PTR [rsp+0x20]
  408164:	mov    r14,r12
  408167:	sar    r14,0x3
  40816b:	mov    eax,r12d
  40816e:	and    eax,0x7
  408171:	cmp    rax,0x1
  408175:	sbb    r14,0xffffffffffffffff
  408179:	mov    rdi,r14
  40817c:	call   4033f0 <malloc@plt>
  408181:	mov    r15,rax
  408184:	test   rax,rax
  408187:	jne    4081b8 <print_json_data@@Base+0x5a8>
  408189:	lea    rsi,[rip+0x3ecd]        # 40c05d <_IO_stdin_used@@Base+0x5d>
  408190:	lea    rcx,[rip+0x479d]        # 40c934 <_IO_stdin_used@@Base+0x934>
  408197:	mov    edi,0xffffffff
  40819c:	mov    rdx,r14
  40819f:	mov    r8d,0x14e
  4081a5:	xor    eax,eax
  4081a7:	call   4030d0 <coda_set_error@plt>
  4081ac:	xor    eax,eax
  4081ae:	call   40a7d0 <handle_coda_error@@Base>
  4081b3:	mov    r12,QWORD PTR [rsp+0x20]
  4081b8:	mov    rdi,r13
  4081bb:	mov    rsi,r15
  4081be:	xor    edx,edx
  4081c0:	mov    rcx,r12
  4081c3:	call   403600 <coda_cursor_read_bits@plt>
  4081c8:	test   eax,eax
  4081ca:	je     4081d3 <print_json_data@@Base+0x5c3>
  4081cc:	xor    eax,eax
  4081ce:	call   40a7d0 <handle_coda_error@@Base>
  4081d3:	lea    rbx,[rip+0x4807]        # 40c9e1 <_IO_stdin_used@@Base+0x9e1>
  4081da:	mov    rdi,rbx
  4081dd:	xor    eax,eax
  4081df:	call   4089a0 <print_json_data@@Base+0xd90>
  4081e4:	mov    rdi,r15
  4081e7:	mov    rsi,r14
  4081ea:	call   408a50 <print_json_data@@Base+0xe40>
  4081ef:	mov    rdi,rbx
  4081f2:	xor    eax,eax
  4081f4:	call   4089a0 <print_json_data@@Base+0xd90>
  4081f9:	mov    rdi,r15
  4081fc:	call   403070 <free@plt>
  408201:	cmp    DWORD PTR [rsp+0x1c],0x0
  408206:	jne    40803a <print_json_data@@Base+0x42a>
  40820c:	jmp    408048 <print_json_data@@Base+0x438>
  408211:	mov    rdi,r13
  408214:	call   4032a0 <coda_cursor_goto_first_record_field@plt>
  408219:	test   eax,eax
  40821b:	je     408224 <print_json_data@@Base+0x614>
  40821d:	xor    eax,eax
  40821f:	call   40a7d0 <handle_coda_error@@Base>
  408224:	mov    QWORD PTR [rsp+0x10],0x0
  40822d:	cmp    QWORD PTR [rsp+0x20],0x0
  408233:	jle    40830a <print_json_data@@Base+0x6fa>
  408239:	mov    ebx,0x1
  40823e:	lea    r14,[rsp+0x6c]
  408243:	lea    r15,[rip+0x4264]        # 40c4ae <_IO_stdin_used@@Base+0x4ae>
  40824a:	lea    r12,[rsp+0x60]
  40824f:	lea    rbp,[rip+0x46d6]        # 40c92c <_IO_stdin_used@@Base+0x92c>
  408256:	xor    esi,esi
  408258:	jmp    408278 <print_json_data@@Base+0x668>
  40825a:	nop    WORD PTR [rax+rax*1+0x0]
  408260:	mov    rsi,QWORD PTR [rsp+0x10]
  408265:	inc    rsi
  408268:	mov    QWORD PTR [rsp+0x10],rsi
  40826d:	cmp    rsi,QWORD PTR [rsp+0x20]
  408272:	jge    40830a <print_json_data@@Base+0x6fa>
  408278:	mov    rdi,QWORD PTR [rsp+0x8]
  40827d:	mov    rdx,r14
  408280:	call   4030b0 <coda_type_get_record_field_hidden_status@plt>
  408285:	test   eax,eax
  408287:	je     408290 <print_json_data@@Base+0x680>
  408289:	xor    eax,eax
  40828b:	call   40a7d0 <handle_coda_error@@Base>
  408290:	cmp    DWORD PTR [rsp+0x6c],0x0
  408295:	jne    4082db <print_json_data@@Base+0x6cb>
  408297:	test   ebx,ebx
  408299:	jne    4082a5 <print_json_data@@Base+0x695>
  40829b:	mov    rdi,r15
  40829e:	xor    eax,eax
  4082a0:	call   4089a0 <print_json_data@@Base+0xd90>
  4082a5:	mov    rdi,QWORD PTR [rsp+0x8]
  4082aa:	mov    rsi,QWORD PTR [rsp+0x10]
  4082af:	mov    rdx,r12
  4082b2:	call   4035f0 <coda_type_get_record_field_name@plt>
  4082b7:	test   eax,eax
  4082b9:	je     4082c2 <print_json_data@@Base+0x6b2>
  4082bb:	xor    eax,eax
  4082bd:	call   40a7d0 <handle_coda_error@@Base>
  4082c2:	mov    rsi,QWORD PTR [rsp+0x60]
  4082c7:	xor    ebx,ebx
  4082c9:	mov    rdi,rbp
  4082cc:	xor    eax,eax
  4082ce:	call   4089a0 <print_json_data@@Base+0xd90>
  4082d3:	mov    rdi,r13
  4082d6:	call   407ce0 <print_json_data@@Base+0xd0>
  4082db:	mov    rax,QWORD PTR [rsp+0x20]
  4082e0:	dec    rax
  4082e3:	cmp    QWORD PTR [rsp+0x10],rax
  4082e8:	jge    408260 <print_json_data@@Base+0x650>
  4082ee:	mov    rdi,r13
  4082f1:	call   403500 <coda_cursor_goto_next_record_field@plt>
  4082f6:	test   eax,eax
  4082f8:	je     408260 <print_json_data@@Base+0x650>
  4082fe:	xor    eax,eax
  408300:	call   40a7d0 <handle_coda_error@@Base>
  408305:	jmp    408260 <print_json_data@@Base+0x650>
  40830a:	mov    rdi,r13
  40830d:	call   403320 <coda_cursor_goto_parent@plt>
  408312:	lea    rdi,[rip+0x4619]        # 40c932 <_IO_stdin_used@@Base+0x932>
  408319:	jmp    408943 <print_json_data@@Base+0xd33>
  40831e:	mov    ebx,0x1
  408323:	jmp    4088d3 <print_json_data@@Base+0xcc3>
  408328:	lea    rsi,[rsp+0x20]
  40832d:	mov    rdi,r13
  408330:	call   403390 <coda_cursor_read_double@plt>
  408335:	test   eax,eax
  408337:	je     408340 <print_json_data@@Base+0x730>
  408339:	xor    eax,eax
  40833b:	call   40a7d0 <handle_coda_error@@Base>
  408340:	vmovq  xmm0,QWORD PTR [rsp+0x20]
  408346:	jmp    408388 <print_json_data@@Base+0x778>
  408348:	lea    rsi,[rsp+0x8]
  40834d:	mov    rdi,r13
  408350:	call   403390 <coda_cursor_read_double@plt>
  408355:	test   eax,eax
  408357:	je     408360 <print_json_data@@Base+0x750>
  408359:	xor    eax,eax
  40835b:	call   40a7d0 <handle_coda_error@@Base>
  408360:	vmovsd xmm0,QWORD PTR [rsp+0x8]
  408366:	call   4033a0 <coda_isNaN@plt>
  40836b:	test   eax,eax
  40836d:	jne    408382 <print_json_data@@Base+0x772>
  40836f:	vmovsd xmm0,QWORD PTR [rsp+0x8]
  408375:	call   403190 <coda_isInf@plt>
  40837a:	test   eax,eax
  40837c:	je     40895d <print_json_data@@Base+0xd4d>
  408382:	vmovq  xmm0,QWORD PTR [rsp+0x8]
  408388:	lea    rdi,[rip+0x3d8f]        # 40c11e <_IO_stdin_used@@Base+0x11e>
  40838f:	mov    al,0x1
  408391:	call   4089a0 <print_json_data@@Base+0xd90>
  408396:	cmp    DWORD PTR [rsp+0x1c],0x0
  40839b:	jne    40803a <print_json_data@@Base+0x42a>
  4083a1:	jmp    408048 <print_json_data@@Base+0x438>
  4083a6:	lea    rsi,[rsp+0x20]
  4083ab:	lea    rdx,[rsp+0x8]
  4083b0:	mov    rdi,r13
  4083b3:	call   403450 <coda_cursor_read_complex_double_split@plt>
  4083b8:	test   eax,eax
  4083ba:	je     4083c3 <print_json_data@@Base+0x7b3>
  4083bc:	xor    eax,eax
  4083be:	call   40a7d0 <handle_coda_error@@Base>
  4083c3:	vmovq  xmm0,QWORD PTR [rsp+0x20]
  4083c9:	vmovq  xmm1,QWORD PTR [rsp+0x8]
  4083cf:	lea    rdi,[rip+0x45ff]        # 40c9d5 <_IO_stdin_used@@Base+0x9d5>
  4083d6:	mov    al,0x2
  4083d8:	call   4089a0 <print_json_data@@Base+0xd90>
  4083dd:	cmp    DWORD PTR [rsp+0x1c],0x0
  4083e2:	jne    40803a <print_json_data@@Base+0x42a>
  4083e8:	jmp    408048 <print_json_data@@Base+0x438>
  4083ed:	mov    ecx,eax
  4083ef:	and    ecx,0xfffffff0
  4083f2:	lea    rdi,[rcx-0x10]
  4083f6:	mov    rsi,rdi
  4083f9:	shr    rsi,0x4
  4083fd:	inc    rsi
  408400:	mov    edx,esi
  408402:	and    edx,0x3
  408405:	cmp    rdi,0x30
  408409:	jae    408430 <print_json_data@@Base+0x820>
  40840b:	vpbroadcastq ymm0,QWORD PTR [rip+0x3d7c]        # 40c190 <_IO_stdin_used@@Base+0x190>
  408414:	xor    esi,esi
  408416:	vmovdqa ymm3,ymm0
  40841a:	vmovdqa ymm2,ymm0
  40841e:	vmovdqa ymm1,ymm0
  408422:	test   rdx,rdx
  408425:	jne    408732 <print_json_data@@Base+0xb22>
  40842b:	jmp    4087f1 <print_json_data@@Base+0xbe1>
  408430:	mov    rdi,rdx
  408433:	sub    rdi,rsi
  408436:	vpbroadcastq ymm0,QWORD PTR [rip+0x3d51]        # 40c190 <_IO_stdin_used@@Base+0x190>
  40843f:	xor    esi,esi
  408441:	vmovdqa ymm3,ymm0
  408445:	vmovdqa ymm2,ymm0
  408449:	vmovdqa ymm1,ymm0
  40844d:	nop    DWORD PTR [rax]
  408450:	vmovdqu ymm4,YMMWORD PTR [rsp+rsi*8+0x20]
  408456:	vmovdqu ymm5,YMMWORD PTR [rsp+rsi*8+0x40]
  40845c:	vmovdqu ymm6,YMMWORD PTR [rsp+rsi*8+0x60]
  408462:	vmovdqu ymm7,YMMWORD PTR [rsp+rsi*8+0x80]
  40846b:	vpsrlq ymm8,ymm0,0x20
  408470:	vpmuludq ymm8,ymm4,ymm8
  408475:	vpsrlq ymm9,ymm4,0x20
  40847a:	vpmuludq ymm9,ymm9,ymm0
  40847e:	vpaddq ymm8,ymm8,ymm9
  408483:	vpsllq ymm8,ymm8,0x20
  408489:	vpmuludq ymm0,ymm4,ymm0
  40848d:	vpaddq ymm0,ymm0,ymm8
  408492:	vpsrlq ymm4,ymm3,0x20
  408497:	vpmuludq ymm4,ymm5,ymm4
  40849b:	vpsrlq ymm8,ymm5,0x20
  4084a0:	vpmuludq ymm8,ymm8,ymm3
  4084a4:	vpaddq ymm4,ymm4,ymm8
  4084a9:	vpsllq ymm4,ymm4,0x20
  4084ae:	vpmuludq ymm3,ymm5,ymm3
  4084b2:	vpaddq ymm3,ymm3,ymm4
  4084b6:	vpsrlq ymm4,ymm2,0x20
  4084bb:	vpmuludq ymm4,ymm6,ymm4
  4084bf:	vpsrlq ymm5,ymm6,0x20
  4084c4:	vpmuludq ymm5,ymm5,ymm2
  4084c8:	vpaddq ymm4,ymm4,ymm5
  4084cc:	vpsllq ymm4,ymm4,0x20
  4084d1:	vpmuludq ymm2,ymm6,ymm2
  4084d5:	vpaddq ymm2,ymm2,ymm4
  4084d9:	vpsrlq ymm4,ymm1,0x20
  4084de:	vpmuludq ymm4,ymm7,ymm4
  4084e2:	vpsrlq ymm5,ymm7,0x20
  4084e7:	vpmuludq ymm5,ymm5,ymm1
  4084eb:	vpaddq ymm4,ymm4,ymm5
  4084ef:	vpsllq ymm4,ymm4,0x20
  4084f4:	vpmuludq ymm1,ymm7,ymm1
  4084f8:	vpaddq ymm1,ymm1,ymm4
  4084fc:	vmovdqu ymm4,YMMWORD PTR [rsp+rsi*8+0xa0]
  408505:	vmovdqu ymm5,YMMWORD PTR [rsp+rsi*8+0xc0]
  40850e:	vmovdqu ymm6,YMMWORD PTR [rsp+rsi*8+0xe0]
  408517:	vmovdqu ymm7,YMMWORD PTR [rsp+rsi*8+0x100]
  408520:	vpsrlq ymm8,ymm4,0x20
  408525:	vpmuludq ymm8,ymm8,ymm0
  408529:	vpsrlq ymm9,ymm0,0x20
  40852e:	vpmuludq ymm9,ymm4,ymm9
  408533:	vpaddq ymm8,ymm9,ymm8
  408538:	vpsllq ymm8,ymm8,0x20
  40853e:	vpmuludq ymm0,ymm4,ymm0
  408542:	vpaddq ymm0,ymm0,ymm8
  408547:	vpsrlq ymm4,ymm5,0x20
  40854c:	vpmuludq ymm4,ymm4,ymm3
  408550:	vpsrlq ymm8,ymm3,0x20
  408555:	vpmuludq ymm8,ymm5,ymm8
  40855a:	vpaddq ymm4,ymm8,ymm4
  40855e:	vpsllq ymm4,ymm4,0x20
  408563:	vpmuludq ymm3,ymm5,ymm3
  408567:	vpaddq ymm3,ymm3,ymm4
  40856b:	vpsrlq ymm4,ymm6,0x20
  408570:	vpmuludq ymm4,ymm4,ymm2
  408574:	vpsrlq ymm5,ymm2,0x20
  408579:	vpmuludq ymm5,ymm6,ymm5
  40857d:	vpaddq ymm4,ymm5,ymm4
  408581:	vpsllq ymm4,ymm4,0x20
  408586:	vpmuludq ymm2,ymm6,ymm2
  40858a:	vpaddq ymm2,ymm2,ymm4
  40858e:	vpsrlq ymm4,ymm7,0x20
  408593:	vpmuludq ymm4,ymm4,ymm1
  408597:	vpsrlq ymm5,ymm1,0x20
  40859c:	vpmuludq ymm5,ymm7,ymm5
  4085a0:	vpaddq ymm4,ymm5,ymm4
  4085a4:	vpsllq ymm4,ymm4,0x20
  4085a9:	vpmuludq ymm1,ymm7,ymm1
  4085ad:	vpaddq ymm1,ymm1,ymm4
  4085b1:	vmovdqu ymm4,YMMWORD PTR [rsp+rsi*8+0x120]
  4085ba:	vmovdqu ymm5,YMMWORD PTR [rsp+rsi*8+0x140]
  4085c3:	vmovdqu ymm6,YMMWORD PTR [rsp+rsi*8+0x160]
  4085cc:	vmovdqu ymm7,YMMWORD PTR [rsp+rsi*8+0x180]
  4085d5:	vpsrlq ymm8,ymm4,0x20
  4085da:	vpmuludq ymm8,ymm8,ymm0
  4085de:	vpsrlq ymm9,ymm0,0x20
  4085e3:	vpmuludq ymm9,ymm4,ymm9
  4085e8:	vpaddq ymm8,ymm9,ymm8
  4085ed:	vpsllq ymm8,ymm8,0x20
  4085f3:	vpmuludq ymm0,ymm4,ymm0
  4085f7:	vpaddq ymm0,ymm0,ymm8
  4085fc:	vpsrlq ymm4,ymm5,0x20
  408601:	vpmuludq ymm4,ymm4,ymm3
  408605:	vpsrlq ymm8,ymm3,0x20
  40860a:	vpmuludq ymm8,ymm5,ymm8
  40860f:	vpaddq ymm4,ymm8,ymm4
  408613:	vpsllq ymm4,ymm4,0x20
  408618:	vpmuludq ymm3,ymm5,ymm3
  40861c:	vpaddq ymm3,ymm3,ymm4
  408620:	vpsrlq ymm4,ymm6,0x20
  408625:	vpmuludq ymm4,ymm4,ymm2
  408629:	vpsrlq ymm5,ymm2,0x20
  40862e:	vpmuludq ymm5,ymm6,ymm5
  408632:	vpaddq ymm4,ymm5,ymm4
  408636:	vpsllq ymm4,ymm4,0x20
  40863b:	vpmuludq ymm2,ymm6,ymm2
  40863f:	vpaddq ymm2,ymm2,ymm4
  408643:	vpsrlq ymm4,ymm7,0x20
  408648:	vpmuludq ymm4,ymm4,ymm1
  40864c:	vpsrlq ymm5,ymm1,0x20
  408651:	vpmuludq ymm5,ymm7,ymm5
  408655:	vpaddq ymm4,ymm5,ymm4
  408659:	vpsllq ymm4,ymm4,0x20
  40865e:	vpmuludq ymm1,ymm7,ymm1
  408662:	vpaddq ymm1,ymm1,ymm4
  408666:	vmovdqu ymm4,YMMWORD PTR [rsp+rsi*8+0x1a0]
  40866f:	vmovdqu ymm5,YMMWORD PTR [rsp+rsi*8+0x1c0]
  408678:	vmovdqu ymm6,YMMWORD PTR [rsp+rsi*8+0x1e0]
  408681:	vmovdqu ymm7,YMMWORD PTR [rsp+rsi*8+0x200]
  40868a:	vpsrlq ymm8,ymm4,0x20
  40868f:	vpmuludq ymm8,ymm8,ymm0
  408693:	vpsrlq ymm9,ymm0,0x20
  408698:	vpmuludq ymm9,ymm4,ymm9
  40869d:	vpaddq ymm8,ymm9,ymm8
  4086a2:	vpsllq ymm8,ymm8,0x20
  4086a8:	vpmuludq ymm0,ymm4,ymm0
  4086ac:	vpaddq ymm0,ymm0,ymm8
  4086b1:	vpsrlq ymm4,ymm5,0x20
  4086b6:	vpmuludq ymm4,ymm4,ymm3
  4086ba:	vpsrlq ymm8,ymm3,0x20
  4086bf:	vpmuludq ymm8,ymm5,ymm8
  4086c4:	vpaddq ymm4,ymm8,ymm4
  4086c8:	vpsllq ymm4,ymm4,0x20
  4086cd:	vpmuludq ymm3,ymm5,ymm3
  4086d1:	vpaddq ymm3,ymm3,ymm4
  4086d5:	vpsrlq ymm4,ymm6,0x20
  4086da:	vpmuludq ymm4,ymm4,ymm2
  4086de:	vpsrlq ymm5,ymm2,0x20
  4086e3:	vpmuludq ymm5,ymm6,ymm5
  4086e7:	vpaddq ymm4,ymm5,ymm4
  4086eb:	vpsllq ymm4,ymm4,0x20
  4086f0:	vpmuludq ymm2,ymm6,ymm2
  4086f4:	vpaddq ymm2,ymm2,ymm4
  4086f8:	vpsrlq ymm4,ymm7,0x20
  4086fd:	vpmuludq ymm4,ymm4,ymm1
  408701:	vpsrlq ymm5,ymm1,0x20
  408706:	vpmuludq ymm5,ymm7,ymm5
  40870a:	vpaddq ymm4,ymm5,ymm4
  40870e:	vpsllq ymm4,ymm4,0x20
  408713:	vpmuludq ymm1,ymm7,ymm1
  408717:	vpaddq ymm1,ymm1,ymm4
  40871b:	add    rsi,0x40
  40871f:	add    rdi,0x4
  408723:	jne    408450 <print_json_data@@Base+0x840>
  408729:	test   rdx,rdx
  40872c:	je     4087f1 <print_json_data@@Base+0xbe1>
  408732:	lea    rsi,[rsp+rsi*8]
  408736:	add    rsi,0x80
  40873d:	neg    rdx
  408740:	vmovdqu ymm4,YMMWORD PTR [rsi-0x60]
  408745:	vmovdqu ymm5,YMMWORD PTR [rsi-0x40]
  40874a:	vmovdqu ymm6,YMMWORD PTR [rsi-0x20]
  40874f:	vmovdqu ymm7,YMMWORD PTR [rsi]
  408753:	vpsrlq ymm8,ymm0,0x20
  408758:	vpmuludq ymm8,ymm4,ymm8
  40875d:	vpsrlq ymm9,ymm4,0x20
  408762:	vpmuludq ymm9,ymm9,ymm0
  408766:	vpaddq ymm8,ymm8,ymm9
  40876b:	vpsllq ymm8,ymm8,0x20
  408771:	vpmuludq ymm0,ymm4,ymm0
  408775:	vpaddq ymm0,ymm0,ymm8
  40877a:	vpsrlq ymm4,ymm3,0x20
  40877f:	vpmuludq ymm4,ymm5,ymm4
  408783:	vpsrlq ymm8,ymm5,0x20
  408788:	vpmuludq ymm8,ymm8,ymm3
  40878c:	vpaddq ymm4,ymm4,ymm8
  408791:	vpsllq ymm4,ymm4,0x20
  408796:	vpmuludq ymm3,ymm5,ymm3
  40879a:	vpaddq ymm3,ymm3,ymm4
  40879e:	vpsrlq ymm4,ymm2,0x20
  4087a3:	vpmuludq ymm4,ymm6,ymm4
  4087a7:	vpsrlq ymm5,ymm6,0x20
  4087ac:	vpmuludq ymm5,ymm5,ymm2
  4087b0:	vpaddq ymm4,ymm4,ymm5
  4087b4:	vpsllq ymm4,ymm4,0x20
  4087b9:	vpmuludq ymm2,ymm6,ymm2
  4087bd:	vpaddq ymm2,ymm2,ymm4
  4087c1:	vpsrlq ymm4,ymm1,0x20
  4087c6:	vpmuludq ymm4,ymm7,ymm4
  4087ca:	vpsrlq ymm5,ymm7,0x20
  4087cf:	vpmuludq ymm5,ymm5,ymm1
  4087d3:	vpaddq ymm4,ymm4,ymm5
  4087d7:	vpsllq ymm4,ymm4,0x20
  4087dc:	vpmuludq ymm1,ymm7,ymm1
  4087e0:	vpaddq ymm1,ymm1,ymm4
  4087e4:	sub    rsi,0xffffffffffffff80
  4087e8:	inc    rdx
  4087eb:	jne    408740 <print_json_data@@Base+0xb30>
  4087f1:	vpsrlq ymm4,ymm3,0x20
  4087f6:	vpmuludq ymm4,ymm4,ymm0
  4087fa:	vpsrlq ymm5,ymm0,0x20
  4087ff:	vpmuludq ymm5,ymm3,ymm5
  408803:	vpaddq ymm4,ymm5,ymm4
  408807:	vpsllq ymm4,ymm4,0x20
  40880c:	vpmuludq ymm0,ymm3,ymm0
  408810:	vpaddq ymm0,ymm0,ymm4
  408814:	vpsrlq ymm3,ymm2,0x20
  408819:	vpmuludq ymm3,ymm3,ymm0
  40881d:	vpsrlq ymm4,ymm0,0x20
  408822:	vpmuludq ymm4,ymm2,ymm4
  408826:	vpaddq ymm3,ymm4,ymm3
  40882a:	vpsllq ymm3,ymm3,0x20
  40882f:	vpmuludq ymm0,ymm2,ymm0
  408833:	vpaddq ymm0,ymm0,ymm3
  408837:	vpsrlq ymm2,ymm1,0x20
  40883c:	vpmuludq ymm2,ymm2,ymm0
  408840:	vpsrlq ymm3,ymm0,0x20
  408845:	vpmuludq ymm3,ymm1,ymm3
  408849:	vpaddq ymm2,ymm3,ymm2
  40884d:	vpsllq ymm2,ymm2,0x20
  408852:	vpmuludq ymm0,ymm1,ymm0
  408856:	vpaddq ymm0,ymm0,ymm2
  40885a:	vextracti128 xmm1,ymm0,0x1
  408860:	vpsrlq xmm2,xmm0,0x20
  408865:	vpmuludq xmm2,xmm2,xmm1
  408869:	vpsrlq xmm3,xmm1,0x20
  40886e:	vpmuludq xmm3,xmm0,xmm3
  408872:	vpaddq xmm2,xmm3,xmm2
  408876:	vpsllq xmm2,xmm2,0x20
  40887b:	vpmuludq xmm0,xmm0,xmm1
  40887f:	vpaddq xmm0,xmm0,xmm2
  408883:	vpshufd xmm1,xmm0,0x4e
  408888:	vpsrlq xmm2,xmm0,0x20
  40888d:	vpmuludq xmm2,xmm2,xmm1
  408891:	vpsrldq xmm3,xmm0,0xc
  408896:	vpmuludq xmm3,xmm0,xmm3
  40889a:	vpaddq xmm2,xmm3,xmm2
  40889e:	vpsllq xmm2,xmm2,0x20
  4088a3:	vpmuludq xmm0,xmm0,xmm1
  4088a7:	vpaddq xmm0,xmm0,xmm2
  4088ab:	vmovq  rbx,xmm0
  4088b0:	cmp    rcx,rax
  4088b3:	je     4088ce <print_json_data@@Base+0xcbe>
  4088b5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4088bf:	nop
  4088c0:	imul   rbx,QWORD PTR [rsp+rcx*8+0x20]
  4088c6:	inc    rcx
  4088c9:	cmp    rax,rcx
  4088cc:	jne    4088c0 <print_json_data@@Base+0xcb0>
  4088ce:	test   rbx,rbx
  4088d1:	jle    40893c <print_json_data@@Base+0xd2c>
  4088d3:	mov    rdi,r13
  4088d6:	vzeroupper 
  4088d9:	call   403270 <coda_cursor_goto_first_array_element@plt>
  4088de:	test   eax,eax
  4088e0:	je     4088e9 <print_json_data@@Base+0xcd9>
  4088e2:	xor    eax,eax
  4088e4:	call   40a7d0 <handle_coda_error@@Base>
  4088e9:	lea    r15,[rbx-0x1]
  4088ed:	lea    r14,[rip+0x3bba]        # 40c4ae <_IO_stdin_used@@Base+0x4ae>
  4088f4:	xor    ebp,ebp
  4088f6:	jmp    408908 <print_json_data@@Base+0xcf8>
  4088f8:	nop    DWORD PTR [rax+rax*1+0x0]
  408900:	inc    rbp
  408903:	cmp    rbx,rbp
  408906:	je     408934 <print_json_data@@Base+0xd24>
  408908:	mov    rdi,r13
  40890b:	call   407ce0 <print_json_data@@Base+0xd0>
  408910:	cmp    r15,rbp
  408913:	jle    408900 <print_json_data@@Base+0xcf0>
  408915:	mov    rdi,r14
  408918:	xor    eax,eax
  40891a:	call   4089a0 <print_json_data@@Base+0xd90>
  40891f:	mov    rdi,r13
  408922:	call   4033b0 <coda_cursor_goto_next_array_element@plt>
  408927:	test   eax,eax
  408929:	je     408900 <print_json_data@@Base+0xcf0>
  40892b:	xor    eax,eax
  40892d:	call   40a7d0 <handle_coda_error@@Base>
  408932:	jmp    408900 <print_json_data@@Base+0xcf0>
  408934:	mov    rdi,r13
  408937:	call   403320 <coda_cursor_goto_parent@plt>
  40893c:	lea    rdi,[rip+0x41d2]        # 40cb15 <_IO_stdin_used@@Base+0xb15>
  408943:	xor    eax,eax
  408945:	vzeroupper 
  408948:	call   4089a0 <print_json_data@@Base+0xd90>
  40894d:	cmp    DWORD PTR [rsp+0x1c],0x0
  408952:	jne    40803a <print_json_data@@Base+0x42a>
  408958:	jmp    408048 <print_json_data@@Base+0x438>
  40895d:	vmovq  xmm0,QWORD PTR [rsp+0x8]
  408963:	lea    rdi,[rip+0x4033]        # 40c99d <_IO_stdin_used@@Base+0x99d>
  40896a:	lea    rsi,[rsp+0x20]
  40896f:	call   4030f0 <coda_time_double_to_string@plt>
  408974:	test   eax,eax
  408976:	je     408981 <print_json_data@@Base+0xd71>
  408978:	lea    rdi,[rip+0x403b]        # 40c9ba <_IO_stdin_used@@Base+0x9ba>
  40897f:	jmp    408943 <print_json_data@@Base+0xd33>
  408981:	lea    rdi,[rip+0x4190]        # 40cb18 <_IO_stdin_used@@Base+0xb18>
  408988:	lea    rsi,[rsp+0x20]
  40898d:	jmp    40802c <print_json_data@@Base+0x41c>
  408992:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40899c:	nop    DWORD PTR [rax+0x0]
  4089a0:	sub    rsp,0xd8
  4089a7:	mov    r10,rdi
  4089aa:	test   al,al
  4089ac:	je     4089ed <print_json_data@@Base+0xddd>
  4089ae:	vmovaps XMMWORD PTR [rsp+0x50],xmm0
  4089b4:	vmovaps XMMWORD PTR [rsp+0x60],xmm1
  4089ba:	vmovaps XMMWORD PTR [rsp+0x70],xmm2
  4089c0:	vmovaps XMMWORD PTR [rsp+0x80],xmm3
  4089c9:	vmovaps XMMWORD PTR [rsp+0x90],xmm4
  4089d2:	vmovaps XMMWORD PTR [rsp+0xa0],xmm5
  4089db:	vmovaps XMMWORD PTR [rsp+0xb0],xmm6
  4089e4:	vmovaps XMMWORD PTR [rsp+0xc0],xmm7
  4089ed:	mov    QWORD PTR [rsp+0x28],rsi
  4089f2:	mov    QWORD PTR [rsp+0x30],rdx
  4089f7:	mov    QWORD PTR [rsp+0x38],rcx
  4089fc:	mov    QWORD PTR [rsp+0x40],r8
  408a01:	mov    QWORD PTR [rsp+0x48],r9
  408a06:	lea    rax,[rsp+0x20]
  408a0b:	mov    QWORD PTR [rsp+0x10],rax
  408a10:	lea    rax,[rsp+0xe0]
  408a18:	mov    QWORD PTR [rsp+0x8],rax
  408a1d:	movabs rax,0x3000000008
  408a27:	mov    QWORD PTR [rsp],rax
  408a2b:	lea    rax,[rip+0x8a76]        # 4114a8 <ascii_output@@Base>
  408a32:	mov    rdi,QWORD PTR [rax]
  408a35:	mov    rdx,rsp
  408a38:	mov    rsi,r10
  408a3b:	call   403530 <vfprintf@plt>
  408a40:	add    rsp,0xd8
  408a47:	ret    
  408a48:	nop    DWORD PTR [rax+rax*1+0x0]
  408a50:	push   rbp
  408a51:	push   r15
  408a53:	push   r14
  408a55:	push   r13
  408a57:	push   r12
  408a59:	push   rbx
  408a5a:	push   rax
  408a5b:	test   rsi,rsi
  408a5e:	jle    408b12 <print_json_data@@Base+0xf02>
  408a64:	mov    rbx,rsi
  408a67:	mov    r14,rdi
  408a6a:	lea    r13,[rip+0x3e3b]        # 40c8ac <_IO_stdin_used@@Base+0x8ac>
  408a71:	lea    rbp,[rip+0x3691]        # 40c109 <_IO_stdin_used@@Base+0x109>
  408a78:	lea    r12,[rip+0x3f61]        # 40c9e0 <_IO_stdin_used@@Base+0x9e0>
  408a7f:	xor    r15d,r15d
  408a82:	jmp    408a9f <print_json_data@@Base+0xe8f>
  408a84:	lea    rdi,[rip+0x366f]        # 40c0fa <_IO_stdin_used@@Base+0xfa>
  408a8b:	nop    DWORD PTR [rax+rax*1+0x0]
  408a90:	xor    eax,eax
  408a92:	call   4089a0 <print_json_data@@Base+0xd90>
  408a97:	inc    r15
  408a9a:	cmp    rbx,r15
  408a9d:	je     408b12 <print_json_data@@Base+0xf02>
  408a9f:	movsx  esi,BYTE PTR [r14+r15*1]
  408aa4:	lea    eax,[rsi-0x8]
  408aa7:	cmp    eax,0x1a
  408aaa:	ja     408abf <print_json_data@@Base+0xeaf>
  408aac:	movsxd rax,DWORD PTR [r13+rax*4+0x0]
  408ab1:	add    rax,r13
  408ab4:	jmp    rax
  408ab6:	lea    rdi,[rip+0x3640]        # 40c0fd <_IO_stdin_used@@Base+0xfd>
  408abd:	jmp    408a90 <print_json_data@@Base+0xe80>
  408abf:	cmp    esi,0x5c
  408ac2:	jne    408acd <print_json_data@@Base+0xebd>
  408ac4:	lea    rdi,[rip+0x3641]        # 40c10c <_IO_stdin_used@@Base+0x10c>
  408acb:	jmp    408a90 <print_json_data@@Base+0xe80>
  408acd:	cmp    sil,0x20
  408ad1:	jl     408afe <print_json_data@@Base+0xeee>
  408ad3:	cmp    sil,0x7f
  408ad7:	je     408afe <print_json_data@@Base+0xeee>
  408ad9:	lea    rdi,[rip+0x3868]        # 40c348 <_IO_stdin_used@@Base+0x348>
  408ae0:	jmp    408b09 <print_json_data@@Base+0xef9>
  408ae2:	lea    rdi,[rip+0x3617]        # 40c100 <_IO_stdin_used@@Base+0x100>
  408ae9:	jmp    408a90 <print_json_data@@Base+0xe80>
  408aeb:	lea    rdi,[rip+0x3614]        # 40c106 <_IO_stdin_used@@Base+0x106>
  408af2:	jmp    408a90 <print_json_data@@Base+0xe80>
  408af4:	mov    rdi,rbp
  408af7:	jmp    408a90 <print_json_data@@Base+0xe80>
  408af9:	mov    rdi,r12
  408afc:	jmp    408a90 <print_json_data@@Base+0xe80>
  408afe:	movzx  esi,sil
  408b02:	lea    rdi,[rip+0x3eda]        # 40c9e3 <_IO_stdin_used@@Base+0x9e3>
  408b09:	xor    eax,eax
  408b0b:	call   4089a0 <print_json_data@@Base+0xd90>
  408b10:	jmp    408a97 <print_json_data@@Base+0xe87>
  408b12:	add    rsp,0x8
  408b16:	pop    rbx
  408b17:	pop    r12
  408b19:	pop    r13
  408b1b:	pop    r14
  408b1d:	pop    r15
  408b1f:	pop    rbp
  408b20:	ret    
  408b21:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408b2b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000408b30 <print_full_field_name@@Base>:
  408b30:	push   rbp
  408b31:	push   r15
  408b33:	push   r14
  408b35:	push   r13
  408b37:	push   r12
  408b39:	push   rbx
  408b3a:	sub    rsp,0x18
  408b3e:	mov    r12d,edx
  408b41:	mov    r15,rdi
  408b44:	cmp    esi,0x1
  408b47:	jne    408c35 <print_full_field_name@@Base+0x105>
  408b4d:	mov    DWORD PTR [rsp+0xc],r12d
  408b52:	lea    rbp,[rip+0x780f]        # 410368 <traverse_info@@Base>
  408b59:	cmp    DWORD PTR [rbp+0x110],0x0
  408b60:	jle    408d2d <print_full_field_name@@Base+0x1fd>
  408b66:	lea    rbx,[rsp+0x14]
  408b6b:	xor    r14d,r14d
  408b6e:	xor    r13d,r13d
  408b71:	xor    r12d,r12d
  408b74:	jmp    408b96 <print_full_field_name@@Base+0x66>
  408b76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408b80:	inc    r13d
  408b83:	inc    r14
  408b86:	movsxd rax,DWORD PTR [rbp+0x110]
  408b8d:	cmp    r14,rax
  408b90:	jge    408d30 <print_full_field_name@@Base+0x200>
  408b96:	mov    rdi,QWORD PTR [rbp+r14*8+0x10]
  408b9b:	mov    rsi,rbx
  408b9e:	call   403620 <coda_type_get_class@plt>
  408ba3:	test   eax,eax
  408ba5:	je     408bae <print_full_field_name@@Base+0x7e>
  408ba7:	xor    eax,eax
  408ba9:	call   40a7d0 <handle_coda_error@@Base>
  408bae:	mov    eax,DWORD PTR [rsp+0x14]
  408bb2:	cmp    eax,0x1
  408bb5:	je     408be0 <print_full_field_name@@Base+0xb0>
  408bb7:	test   eax,eax
  408bb9:	jne    408b83 <print_full_field_name@@Base+0x53>
  408bbb:	movsxd r12,r12d
  408bbe:	mov    rdx,QWORD PTR [rbp+r12*8+0x1038]
  408bc6:	mov    rdi,r15
  408bc9:	lea    rsi,[rip+0x3e38]        # 40ca08 <_IO_stdin_used@@Base+0xa08>
  408bd0:	xor    eax,eax
  408bd2:	call   403300 <fprintf@plt>
  408bd7:	inc    r12d
  408bda:	jmp    408b83 <print_full_field_name@@Base+0x53>
  408bdc:	nop    DWORD PTR [rax+0x0]
  408be0:	test   r14,r14
  408be3:	jne    408bf2 <print_full_field_name@@Base+0xc2>
  408be5:	mov    edi,0x2f
  408bea:	mov    rsi,r15
  408bed:	call   4032b0 <fputc@plt>
  408bf2:	movsxd rax,r13d
  408bf5:	lea    rax,[rax+rax*4]
  408bf9:	shl    rax,0x4
  408bfd:	cmp    DWORD PTR [rbp+rax*1+0x538],0x0
  408c05:	jle    408b80 <print_full_field_name@@Base+0x50>
  408c0b:	mov    edi,0x5b
  408c10:	mov    rsi,r15
  408c13:	call   4032b0 <fputc@plt>
  408c18:	mov    rdi,r15
  408c1b:	mov    esi,r13d
  408c1e:	call   408de0 <print_full_field_name@@Base+0x2b0>
  408c23:	mov    edi,0x5d
  408c28:	mov    rsi,r15
  408c2b:	call   4032b0 <fputc@plt>
  408c30:	jmp    408b80 <print_full_field_name@@Base+0x50>
  408c35:	mov    r14d,esi
  408c38:	lea    rbp,[rip+0x7729]        # 410368 <traverse_info@@Base>
  408c3f:	cmp    DWORD PTR [rbp+0x1138],0x0
  408c46:	jle    408c83 <print_full_field_name@@Base+0x153>
  408c48:	xor    ebx,ebx
  408c4a:	test   rbx,rbx
  408c4d:	jne    408c74 <print_full_field_name@@Base+0x144>
  408c4f:	nop
  408c50:	mov    rdi,QWORD PTR [rbp+rbx*8+0x1038]
  408c58:	mov    rsi,r15
  408c5b:	call   403250 <fputs@plt>
  408c60:	inc    rbx
  408c63:	movsxd rax,DWORD PTR [rbp+0x1138]
  408c6a:	cmp    rbx,rax
  408c6d:	jge    408c83 <print_full_field_name@@Base+0x153>
  408c6f:	test   rbx,rbx
  408c72:	je     408c50 <print_full_field_name@@Base+0x120>
  408c74:	mov    edi,0x2e
  408c79:	mov    rsi,r15
  408c7c:	call   4032b0 <fputc@plt>
  408c81:	jmp    408c50 <print_full_field_name@@Base+0x120>
  408c83:	cmp    r14d,0x2
  408c87:	jne    408dd0 <print_full_field_name@@Base+0x2a0>
  408c8d:	cmp    DWORD PTR [rbp+0x110],0x0
  408c94:	jle    408d62 <print_full_field_name@@Base+0x232>
  408c9a:	lea    r14,[rsp+0x10]
  408c9f:	xor    ebx,ebx
  408ca1:	xor    r13d,r13d
  408ca4:	jmp    408ce0 <print_full_field_name@@Base+0x1b0>
  408ca6:	mov    esi,0x2
  408cab:	mov    edx,0x1
  408cb0:	lea    rdi,[rip+0x3d55]        # 40ca0c <_IO_stdin_used@@Base+0xa0c>
  408cb7:	mov    rcx,r15
  408cba:	call   4035a0 <fwrite@plt>
  408cbf:	mov    rdi,r15
  408cc2:	mov    esi,r13d
  408cc5:	call   408de0 <print_full_field_name@@Base+0x2b0>
  408cca:	inc    r13d
  408ccd:	inc    rbx
  408cd0:	movsxd rax,DWORD PTR [rbp+0x110]
  408cd7:	cmp    rbx,rax
  408cda:	jge    408d65 <print_full_field_name@@Base+0x235>
  408ce0:	mov    rdi,QWORD PTR [rbp+rbx*8+0x10]
  408ce5:	mov    rsi,r14
  408ce8:	call   403620 <coda_type_get_class@plt>
  408ced:	test   eax,eax
  408cef:	je     408cf8 <print_full_field_name@@Base+0x1c8>
  408cf1:	xor    eax,eax
  408cf3:	call   40a7d0 <handle_coda_error@@Base>
  408cf8:	cmp    DWORD PTR [rsp+0x10],0x1
  408cfd:	jne    408ccd <print_full_field_name@@Base+0x19d>
  408cff:	movsxd rax,r13d
  408d02:	lea    rax,[rax+rax*4]
  408d06:	shl    rax,0x4
  408d0a:	cmp    DWORD PTR [rbp+rax*1+0x538],0x0
  408d12:	jle    408ccd <print_full_field_name@@Base+0x19d>
  408d14:	cmp    DWORD PTR [rbp+rax*1+0x534],0x0
  408d1c:	je     408ca6 <print_full_field_name@@Base+0x176>
  408d1e:	mov    edi,0x2c
  408d23:	mov    rsi,r15
  408d26:	call   4032b0 <fputc@plt>
  408d2b:	jmp    408cbf <print_full_field_name@@Base+0x18f>
  408d2d:	xor    r13d,r13d
  408d30:	cmp    DWORD PTR [rsp+0xc],0x0
  408d35:	je     408dd0 <print_full_field_name@@Base+0x2a0>
  408d3b:	cmp    r13d,DWORD PTR [rbp+0xf34]
  408d42:	jge    408dd0 <print_full_field_name@@Base+0x2a0>
  408d48:	mov    edi,0x5b
  408d4d:	mov    rsi,r15
  408d50:	call   4032b0 <fputc@plt>
  408d55:	mov    rdi,r15
  408d58:	mov    esi,r13d
  408d5b:	call   408de0 <print_full_field_name@@Base+0x2b0>
  408d60:	jmp    408dc3 <print_full_field_name@@Base+0x293>
  408d62:	xor    r13d,r13d
  408d65:	test   r12d,r12d
  408d68:	je     408dbe <print_full_field_name@@Base+0x28e>
  408d6a:	cmp    r13d,DWORD PTR [rbp+0xf34]
  408d71:	jge    408dbe <print_full_field_name@@Base+0x28e>
  408d73:	movsxd rax,r13d
  408d76:	lea    rax,[rax+rax*4]
  408d7a:	shl    rax,0x4
  408d7e:	cmp    DWORD PTR [rbp+rax*1+0x534],0x0
  408d86:	je     408d97 <print_full_field_name@@Base+0x267>
  408d88:	mov    edi,0x2c
  408d8d:	mov    rsi,r15
  408d90:	call   4032b0 <fputc@plt>
  408d95:	jmp    408db0 <print_full_field_name@@Base+0x280>
  408d97:	lea    rdi,[rip+0x3c6e]        # 40ca0c <_IO_stdin_used@@Base+0xa0c>
  408d9e:	mov    esi,0x2
  408da3:	mov    edx,0x1
  408da8:	mov    rcx,r15
  408dab:	call   4035a0 <fwrite@plt>
  408db0:	mov    rdi,r15
  408db3:	mov    esi,r13d
  408db6:	call   408de0 <print_full_field_name@@Base+0x2b0>
  408dbb:	inc    r13d
  408dbe:	test   r13d,r13d
  408dc1:	jle    408dd0 <print_full_field_name@@Base+0x2a0>
  408dc3:	mov    edi,0x5d
  408dc8:	mov    rsi,r15
  408dcb:	call   4032b0 <fputc@plt>
  408dd0:	add    rsp,0x18
  408dd4:	pop    rbx
  408dd5:	pop    r12
  408dd7:	pop    r13
  408dd9:	pop    r14
  408ddb:	pop    r15
  408ddd:	pop    rbp
  408dde:	ret    
  408ddf:	nop
  408de0:	push   rbp
  408de1:	push   r15
  408de3:	push   r14
  408de5:	push   r13
  408de7:	push   r12
  408de9:	push   rbx
  408dea:	push   rax
  408deb:	movsxd rax,esi
  408dee:	lea    rax,[rax+rax*4]
  408df2:	shl    rax,0x4
  408df6:	lea    rcx,[rip+0x756b]        # 410368 <traverse_info@@Base>
  408dfd:	cmp    DWORD PTR [rcx+rax*1+0x538],0x0
  408e05:	jle    408eca <print_full_field_name@@Base+0x39a>
  408e0b:	mov    rbx,rdi
  408e0e:	lea    r12,[rcx+rax*1]
  408e12:	add    r12,0x538
  408e19:	lea    r13,[rax+rcx*1]
  408e1d:	add    r13,0x534
  408e24:	lea    rbp,[rip+0x7535]        # 410360 <calc_dim@@Base>
  408e2b:	lea    r15,[rip+0x869e]        # 4114d0 <dim_info@@Base>
  408e32:	xor    r14d,r14d
  408e35:	test   r14,r14
  408e38:	jne    408e67 <print_full_field_name@@Base+0x337>
  408e3a:	jmp    408e74 <print_full_field_name@@Base+0x344>
  408e3c:	nop    DWORD PTR [rax+0x0]
  408e40:	movsxd rdx,DWORD PTR [r15+rax*4+0x4]
  408e45:	mov    rdi,rbx
  408e48:	lea    rsi,[rip+0x3bc4]        # 40ca13 <_IO_stdin_used@@Base+0xa13>
  408e4f:	xor    eax,eax
  408e51:	call   403300 <fprintf@plt>
  408e56:	inc    r14
  408e59:	movsxd rax,DWORD PTR [r12]
  408e5d:	cmp    r14,rax
  408e60:	jge    408eca <print_full_field_name@@Base+0x39a>
  408e62:	test   r14,r14
  408e65:	je     408e74 <print_full_field_name@@Base+0x344>
  408e67:	mov    edi,0x2c
  408e6c:	mov    rsi,rbx
  408e6f:	call   4032b0 <fputc@plt>
  408e74:	cmp    DWORD PTR [rbp+0x0],0x0
  408e78:	je     408eb0 <print_full_field_name@@Base+0x380>
  408e7a:	mov    eax,DWORD PTR [r13+0x0]
  408e7e:	add    eax,r14d
  408e81:	cdqe   
  408e83:	cmp    DWORD PTR [r15+rax*4+0x48],0x0
  408e89:	je     408e40 <print_full_field_name@@Base+0x310>
  408e8b:	movsxd rdx,DWORD PTR [r15+rax*4+0x24]
  408e90:	movsxd rcx,DWORD PTR [r15+rax*4+0x4]
  408e95:	mov    rdi,rbx
  408e98:	lea    rsi,[rip+0x3b70]        # 40ca0f <_IO_stdin_used@@Base+0xa0f>
  408e9f:	xor    eax,eax
  408ea1:	call   403300 <fprintf@plt>
  408ea6:	jmp    408e56 <print_full_field_name@@Base+0x326>
  408ea8:	nop    DWORD PTR [rax+rax*1+0x0]
  408eb0:	movsxd rdx,DWORD PTR [r13+r14*4+0x8]
  408eb5:	cmp    rdx,0xffffffffffffffff
  408eb9:	jne    408e45 <print_full_field_name@@Base+0x315>
  408ebb:	mov    edi,0x3f
  408ec0:	mov    rsi,rbx
  408ec3:	call   4032b0 <fputc@plt>
  408ec8:	jmp    408e56 <print_full_field_name@@Base+0x326>
  408eca:	add    rsp,0x8
  408ece:	pop    rbx
  408ecf:	pop    r12
  408ed1:	pop    r13
  408ed3:	pop    r14
  408ed5:	pop    r15
  408ed7:	pop    rbp
  408ed8:	ret    
  408ed9:	nop    DWORD PTR [rax+0x0]

0000000000408ee0 <traverse_info_init@@Base>:
  408ee0:	lea    rax,[rip+0x7481]        # 410368 <traverse_info@@Base>
  408ee7:	mov    QWORD PTR [rax+0x8],0x0
  408eef:	mov    DWORD PTR [rax+0x110],0x0
  408ef9:	mov    DWORD PTR [rax+0xf34],0x0
  408f03:	mov    DWORD PTR [rax+0x1138],0x0
  408f0d:	ret    
  408f0e:	xchg   ax,ax

0000000000408f10 <traverse_info_done@@Base>:
  408f10:	push   rbx
  408f11:	lea    rbx,[rip+0x7450]        # 410368 <traverse_info@@Base>
  408f18:	mov    rdi,QWORD PTR [rbx+0x8]
  408f1c:	test   rdi,rdi
  408f1f:	je     408f26 <traverse_info_done@@Base+0x16>
  408f21:	call   4034b0 <coda_close@plt>
  408f26:	cmp    QWORD PTR [rbx+0x428],0x0
  408f2e:	je     408f42 <traverse_info_done@@Base+0x32>
  408f30:	mov    edi,0x428
  408f35:	add    rdi,QWORD PTR [rip+0x70a4]        # 40ffe0 <traverse_info@@Base-0x388>
  408f3c:	pop    rbx
  408f3d:	jmp    4077c0 <codadump_filter_remove@@Base>
  408f42:	pop    rbx
  408f43:	ret    
  408f44:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408f4e:	xchg   ax,ax

0000000000408f50 <traverse_product@@Base>:
  408f50:	push   r14
  408f52:	push   rbx
  408f53:	push   rax
  408f54:	lea    r14,[rip+0x740d]        # 410368 <traverse_info@@Base>
  408f5b:	mov    rdi,QWORD PTR [r14]
  408f5e:	lea    rbx,[r14+0x8]
  408f62:	mov    rsi,rbx
  408f65:	call   4030e0 <coda_open@plt>
  408f6a:	test   eax,eax
  408f6c:	je     408fa1 <traverse_product@@Base+0x51>
  408f6e:	call   4035d0 <coda_get_errno@plt>
  408f73:	cmp    DWORD PTR [rax],0xffffffeb
  408f76:	jne    408f9a <traverse_product@@Base+0x4a>
  408f78:	xor    edi,edi
  408f7a:	call   403130 <coda_set_option_use_mmap@plt>
  408f7f:	mov    rdi,QWORD PTR [r14]
  408f82:	mov    rsi,rbx
  408f85:	call   4030e0 <coda_open@plt>
  408f8a:	mov    ebx,eax
  408f8c:	mov    edi,0x1
  408f91:	call   403130 <coda_set_option_use_mmap@plt>
  408f96:	test   ebx,ebx
  408f98:	je     408fa1 <traverse_product@@Base+0x51>
  408f9a:	xor    eax,eax
  408f9c:	call   40a7d0 <handle_coda_error@@Base>
  408fa1:	mov    rsi,QWORD PTR [r14+0x8]
  408fa5:	lea    rbx,[r14+0x118]
  408fac:	mov    rdi,rbx
  408faf:	call   403290 <coda_cursor_set_product@plt>
  408fb4:	test   eax,eax
  408fb6:	je     408fbf <traverse_product@@Base+0x6f>
  408fb8:	xor    eax,eax
  408fba:	call   40a7d0 <handle_coda_error@@Base>
  408fbf:	movsxd rax,DWORD PTR [r14+0x110]
  408fc6:	lea    rsi,[r14+rax*8]
  408fca:	add    rsi,0x10
  408fce:	mov    rdi,rbx
  408fd1:	call   403180 <coda_cursor_get_type@plt>
  408fd6:	test   eax,eax
  408fd8:	je     408fe1 <traverse_product@@Base+0x91>
  408fda:	xor    eax,eax
  408fdc:	call   40a7d0 <handle_coda_error@@Base>
  408fe1:	call   409000 <traverse_product@@Base+0xb0>
  408fe6:	mov    rdi,QWORD PTR [r14+0x8]
  408fea:	call   4034b0 <coda_close@plt>
  408fef:	mov    QWORD PTR [r14+0x8],0x0
  408ff7:	add    rsp,0x8
  408ffb:	pop    rbx
  408ffc:	pop    r14
  408ffe:	ret    
  408fff:	nop
  409000:	push   r15
  409002:	push   r14
  409004:	push   r12
  409006:	push   rbx
  409007:	sub    rsp,0x18
  40900b:	lea    r15,[rip+0x7356]        # 410368 <traverse_info@@Base>
  409012:	movsxd rax,DWORD PTR [r15+0x110]
  409019:	mov    rdi,QWORD PTR [r15+rax*8+0x10]
  40901e:	lea    rsi,[rsp+0x14]
  409023:	call   403620 <coda_type_get_class@plt>
  409028:	test   eax,eax
  40902a:	je     409033 <traverse_product@@Base+0xe3>
  40902c:	xor    eax,eax
  40902e:	call   40a7d0 <handle_coda_error@@Base>
  409033:	mov    eax,DWORD PTR [rsp+0x14]
  409037:	cmp    rax,0x6
  40903b:	ja     409281 <traverse_product@@Base+0x331>
  409041:	lea    rcx,[rip+0x39a4]        # 40c9ec <_IO_stdin_used@@Base+0x9ec>
  409048:	movsxd rax,DWORD PTR [rcx+rax*4]
  40904c:	add    rax,rcx
  40904f:	jmp    rax
  409051:	movsxd rax,DWORD PTR [r15+0x110]
  409058:	mov    rdi,QWORD PTR [r15+rax*8+0x10]
  40905d:	mov    rsi,rsp
  409060:	call   403360 <coda_type_get_read_type@plt>
  409065:	test   eax,eax
  409067:	je     409070 <traverse_product@@Base+0x120>
  409069:	xor    eax,eax
  40906b:	call   40a7d0 <handle_coda_error@@Base>
  409070:	mov    eax,DWORD PTR [rsp]
  409073:	add    eax,0xfffffff5
  409076:	cmp    eax,0x1
  409079:	ja     40927c <traverse_product@@Base+0x32c>
  40907f:	xor    eax,eax
  409081:	call   405950 <dim_enter_array@@Base>
  409086:	inc    DWORD PTR [r15+0xf34]
  40908d:	call   409440 <traverse_product@@Base+0x4f0>
  409092:	dec    DWORD PTR [r15+0xf34]
  409099:	xor    eax,eax
  40909b:	call   406e60 <dim_leave_array@@Base>
  4090a0:	jmp    409281 <traverse_product@@Base+0x331>
  4090a5:	movsxd rax,DWORD PTR [r15+0x110]
  4090ac:	cmp    rax,0x1e
  4090b0:	jg     409281 <traverse_product@@Base+0x331>
  4090b6:	inc    DWORD PTR [r15+0x1138]
  4090bd:	mov    rdi,QWORD PTR [r15+rax*8+0x10]
  4090c2:	mov    rsi,rsp
  4090c5:	call   403340 <coda_type_get_num_record_fields@plt>
  4090ca:	test   eax,eax
  4090cc:	je     4090d5 <traverse_product@@Base+0x185>
  4090ce:	xor    eax,eax
  4090d0:	call   40a7d0 <handle_coda_error@@Base>
  4090d5:	inc    DWORD PTR [r15+0x110]
  4090dc:	movsxd rax,DWORD PTR [r15+0x530]
  4090e3:	mov    r12,QWORD PTR [r15+rax*8+0x428]
  4090eb:	test   r12,r12
  4090ee:	je     409297 <traverse_product@@Base+0x347>
  4090f4:	lea    r14,[rsp+0x8]
  4090f9:	mov    rax,r12
  4090fc:	jmp    409172 <traverse_product@@Base+0x222>
  4090fe:	xchg   ax,ax
  409100:	movsxd rax,DWORD PTR [r15+0x530]
  409107:	mov    rdi,QWORD PTR [r15+rax*8+0x428]
  40910f:	call   407880 <codadump_filter_get_subfilter@@Base>
  409114:	movsxd rcx,DWORD PTR [r15+0x530]
  40911b:	mov    QWORD PTR [r15+rcx*8+0x430],rax
  409123:	inc    rcx
  409126:	mov    DWORD PTR [r15+0x530],ecx
  40912d:	mov    edi,DWORD PTR [rsp+0x8]
  409131:	mov    esi,0x1
  409136:	call   409320 <traverse_product@@Base+0x3d0>
  40913b:	movsxd rax,DWORD PTR [r15+0x530]
  409142:	lea    rcx,[rax-0x1]
  409146:	mov    DWORD PTR [r15+0x530],ecx
  40914d:	mov    rdi,QWORD PTR [r15+rax*8+0x420]
  409155:	call   4078b0 <codadump_filter_get_next_filter@@Base>
  40915a:	movsxd rcx,DWORD PTR [r15+0x530]
  409161:	mov    QWORD PTR [r15+rcx*8+0x428],rax
  409169:	test   rax,rax
  40916c:	je     40928d <traverse_product@@Base+0x33d>
  409172:	mov    rdi,rax
  409175:	call   407850 <codadump_filter_get_fieldname@@Base>
  40917a:	test   rax,rax
  40917d:	je     4092da <traverse_product@@Base+0x38a>
  409183:	mov    rbx,rax
  409186:	movsxd rax,DWORD PTR [r15+0x110]
  40918d:	mov    rdi,QWORD PTR [r15+rax*8+0x8]
  409192:	mov    rsi,rbx
  409195:	mov    rdx,r14
  409198:	call   4034e0 <coda_type_get_record_field_index_from_name@plt>
  40919d:	test   eax,eax
  40919f:	je     409100 <traverse_product@@Base+0x1b0>
  4091a5:	call   4035d0 <coda_get_errno@plt>
  4091aa:	cmp    DWORD PTR [rax],0xffffff9a
  4091ad:	je     4092f9 <traverse_product@@Base+0x3a9>
  4091b3:	xor    eax,eax
  4091b5:	call   40a7d0 <handle_coda_error@@Base>
  4091ba:	jmp    409100 <traverse_product@@Base+0x1b0>
  4091bf:	cmp    DWORD PTR [r15+0x110],0x1e
  4091c7:	jg     409281 <traverse_product@@Base+0x331>
  4091cd:	xor    eax,eax
  4091cf:	call   405950 <dim_enter_array@@Base>
  4091d4:	inc    DWORD PTR [r15+0xf34]
  4091db:	movsxd rax,DWORD PTR [r15+0x110]
  4091e2:	lea    rcx,[rax+0x1]
  4091e6:	mov    DWORD PTR [r15+0x110],ecx
  4091ed:	mov    rdi,QWORD PTR [r15+rax*8+0x10]
  4091f2:	lea    rsi,[r15+rax*8]
  4091f6:	add    rsi,0x18
  4091fa:	call   403460 <coda_type_get_array_base_type@plt>
  4091ff:	test   eax,eax
  409201:	je     40920a <traverse_product@@Base+0x2ba>
  409203:	xor    eax,eax
  409205:	call   40a7d0 <handle_coda_error@@Base>
  40920a:	call   409000 <traverse_product@@Base+0xb0>
  40920f:	dec    DWORD PTR [r15+0x110]
  409216:	jmp    409092 <traverse_product@@Base+0x142>
  40921b:	call   403060 <coda_get_option_bypass_special_types@plt>
  409220:	movsxd rcx,DWORD PTR [r15+0x110]
  409227:	mov    rdi,QWORD PTR [r15+rcx*8+0x10]
  40922c:	test   eax,eax
  40922e:	je     40924f <traverse_product@@Base+0x2ff>
  409230:	lea    rsi,[r15+rcx*8]
  409234:	add    rsi,0x10
  409238:	call   4035e0 <coda_type_get_special_base_type@plt>
  40923d:	test   eax,eax
  40923f:	je     409248 <traverse_product@@Base+0x2f8>
  409241:	xor    eax,eax
  409243:	call   40a7d0 <handle_coda_error@@Base>
  409248:	call   409000 <traverse_product@@Base+0xb0>
  40924d:	jmp    409281 <traverse_product@@Base+0x331>
  40924f:	mov    rsi,rsp
  409252:	call   403430 <coda_type_get_special_type@plt>
  409257:	test   eax,eax
  409259:	je     409262 <traverse_product@@Base+0x312>
  40925b:	xor    eax,eax
  40925d:	call   40a7d0 <handle_coda_error@@Base>
  409262:	mov    eax,DWORD PTR [rsp]
  409265:	lea    ecx,[rax-0x1]
  409268:	cmp    ecx,0x2
  40926b:	jb     40927c <traverse_product@@Base+0x32c>
  40926d:	test   eax,eax
  40926f:	je     409281 <traverse_product@@Base+0x331>
  409271:	cmp    eax,0x3
  409274:	je     40907f <traverse_product@@Base+0x12f>
  40927a:	jmp    409281 <traverse_product@@Base+0x331>
  40927c:	call   409440 <traverse_product@@Base+0x4f0>
  409281:	add    rsp,0x18
  409285:	pop    rbx
  409286:	pop    r12
  409288:	pop    r14
  40928a:	pop    r15
  40928c:	ret    
  40928d:	mov    QWORD PTR [r15+rcx*8+0x428],r12
  409295:	jmp    4092ca <traverse_product@@Base+0x37a>
  409297:	mov    QWORD PTR [rsp+0x8],0x0
  4092a0:	cmp    QWORD PTR [rsp],0x0
  4092a5:	jle    4092ca <traverse_product@@Base+0x37a>
  4092a7:	xor    edi,edi
  4092a9:	nop    DWORD PTR [rax+0x0]
  4092b0:	xor    esi,esi
  4092b2:	call   409320 <traverse_product@@Base+0x3d0>
  4092b7:	mov    rdi,QWORD PTR [rsp+0x8]
  4092bc:	inc    rdi
  4092bf:	mov    QWORD PTR [rsp+0x8],rdi
  4092c4:	cmp    rdi,QWORD PTR [rsp]
  4092c8:	jl     4092b0 <traverse_product@@Base+0x360>
  4092ca:	dec    DWORD PTR [r15+0x110]
  4092d1:	dec    DWORD PTR [r15+0x1138]
  4092d8:	jmp    409281 <traverse_product@@Base+0x331>
  4092da:	lea    rdi,[rip+0x3736]        # 40ca17 <_IO_stdin_used@@Base+0xa17>
  4092e1:	lea    rsi,[rip+0x373c]        # 40ca24 <_IO_stdin_used@@Base+0xa24>
  4092e8:	lea    rcx,[rip+0x379d]        # 40ca8c <_IO_stdin_used@@Base+0xa8c>
  4092ef:	mov    edx,0x189
  4092f4:	call   403240 <__assert_fail@plt>
  4092f9:	mov    rax,QWORD PTR [rip+0x6cf8]        # 40fff8 <stderr@GLIBC_2.2.5>
  409300:	mov    rdi,QWORD PTR [rax]
  409303:	lea    rsi,[rip+0x3797]        # 40caa1 <_IO_stdin_used@@Base+0xaa1>
  40930a:	mov    rdx,rbx
  40930d:	xor    eax,eax
  40930f:	call   403300 <fprintf@plt>
  409314:	mov    edi,0x1
  409319:	call   403580 <exit@plt>
  40931e:	xchg   ax,ax
  409320:	push   rbp
  409321:	push   r14
  409323:	push   rbx
  409324:	sub    rsp,0x10
  409328:	mov    ebp,esi
  40932a:	lea    rbx,[rip+0x7037]        # 410368 <traverse_info@@Base>
  409331:	movsxd rax,DWORD PTR [rbx+0x1138]
  409338:	mov    DWORD PTR [rbx+rax*4+0xfb4],edi
  40933f:	movsxd rax,DWORD PTR [rbx+0x110]
  409346:	mov    rax,QWORD PTR [rbx+rax*8+0x8]
  40934b:	movsxd r14,edi
  40934e:	lea    rdx,[rsp+0xc]
  409353:	mov    rdi,rax
  409356:	mov    rsi,r14
  409359:	call   4030b0 <coda_type_get_record_field_hidden_status@plt>
  40935e:	test   eax,eax
  409360:	je     409369 <traverse_product@@Base+0x419>
  409362:	xor    eax,eax
  409364:	call   40a7d0 <handle_coda_error@@Base>
  409369:	test   ebp,ebp
  40936b:	jne    409378 <traverse_product@@Base+0x428>
  40936d:	cmp    DWORD PTR [rsp+0xc],0x0
  409372:	jne    40942b <traverse_product@@Base+0x4db>
  409378:	lea    rax,[rip+0x6fe1]        # 410360 <calc_dim@@Base>
  40937f:	cmp    DWORD PTR [rax],0x0
  409382:	je     4093ce <traverse_product@@Base+0x47e>
  409384:	movsxd rax,DWORD PTR [rbx+0x110]
  40938b:	mov    rdi,QWORD PTR [rbx+rax*8+0x8]
  409390:	lea    rdx,[rsp+0x8]
  409395:	mov    rsi,r14
  409398:	call   4031b0 <coda_type_get_record_field_available_status@plt>
  40939d:	test   eax,eax
  40939f:	je     4093a8 <traverse_product@@Base+0x458>
  4093a1:	xor    eax,eax
  4093a3:	call   40a7d0 <handle_coda_error@@Base>
  4093a8:	mov    eax,DWORD PTR [rsp+0x8]
  4093ac:	cmp    eax,0xffffffff
  4093af:	jne    4093c0 <traverse_product@@Base+0x470>
  4093b1:	xor    eax,eax
  4093b3:	call   407190 <dim_record_field_available@@Base>
  4093b8:	test   eax,eax
  4093ba:	je     40942b <traverse_product@@Base+0x4db>
  4093bc:	mov    eax,DWORD PTR [rsp+0x8]
  4093c0:	movsxd rcx,DWORD PTR [rbx+0x110]
  4093c7:	mov    DWORD PTR [rbx+rcx*4+0xf34],eax
  4093ce:	movsxd rax,DWORD PTR [rbx+0x110]
  4093d5:	mov    rdi,QWORD PTR [rbx+rax*8+0x8]
  4093da:	movsxd rax,DWORD PTR [rbx+0x1138]
  4093e1:	lea    rdx,[rbx+rax*8]
  4093e5:	add    rdx,0x1030
  4093ec:	mov    rsi,r14
  4093ef:	call   4035f0 <coda_type_get_record_field_name@plt>
  4093f4:	test   eax,eax
  4093f6:	je     4093ff <traverse_product@@Base+0x4af>
  4093f8:	xor    eax,eax
  4093fa:	call   40a7d0 <handle_coda_error@@Base>
  4093ff:	movsxd rax,DWORD PTR [rbx+0x110]
  409406:	mov    rdi,QWORD PTR [rbx+rax*8+0x8]
  40940b:	lea    rdx,[rbx+rax*8]
  40940f:	add    rdx,0x10
  409413:	mov    rsi,r14
  409416:	call   403170 <coda_type_get_record_field_type@plt>
  40941b:	test   eax,eax
  40941d:	je     409426 <traverse_product@@Base+0x4d6>
  40941f:	xor    eax,eax
  409421:	call   40a7d0 <handle_coda_error@@Base>
  409426:	call   409000 <traverse_product@@Base+0xb0>
  40942b:	add    rsp,0x10
  40942f:	pop    rbx
  409430:	pop    r14
  409432:	pop    rbp
  409433:	ret    
  409434:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40943e:	xchg   ax,ax
  409440:	push   r14
  409442:	push   rbx
  409443:	sub    rsp,0x18
  409447:	lea    rax,[rip+0x8076]        # 4114c4 <run_mode@@Base>
  40944e:	mov    eax,DWORD PTR [rax]
  409450:	cmp    eax,0x1
  409453:	je     4094f6 <traverse_product@@Base+0x5a6>
  409459:	test   eax,eax
  40945b:	jne    40964e <traverse_product@@Base+0x6fe>
  409461:	mov    r14,QWORD PTR [rip+0x6b70]        # 40ffd8 <stdout@GLIBC_2.2.5>
  409468:	mov    rdi,QWORD PTR [r14]
  40946b:	mov    esi,0x1
  409470:	xor    edx,edx
  409472:	call   408b30 <print_full_field_name@@Base>
  409477:	lea    rax,[rip+0x803a]        # 4114b8 <show_type@@Base>
  40947e:	cmp    DWORD PTR [rax],0x0
  409481:	je     409577 <traverse_product@@Base+0x627>
  409487:	lea    rbx,[rip+0x6eda]        # 410368 <traverse_info@@Base>
  40948e:	movsxd rax,DWORD PTR [rbx+0x110]
  409495:	mov    rdi,QWORD PTR [rbx+rax*8+0x10]
  40949a:	lea    rsi,[rsp+0x10]
  40949f:	call   403620 <coda_type_get_class@plt>
  4094a4:	test   eax,eax
  4094a6:	je     4094af <traverse_product@@Base+0x55f>
  4094a8:	xor    eax,eax
  4094aa:	call   40a7d0 <handle_coda_error@@Base>
  4094af:	cmp    DWORD PTR [rsp+0x10],0x6
  4094b4:	jne    409504 <traverse_product@@Base+0x5b4>
  4094b6:	movsxd rax,DWORD PTR [rbx+0x110]
  4094bd:	mov    rdi,QWORD PTR [rbx+rax*8+0x10]
  4094c2:	lea    rsi,[rsp+0xc]
  4094c7:	call   403430 <coda_type_get_special_type@plt>
  4094cc:	test   eax,eax
  4094ce:	je     4094d7 <traverse_product@@Base+0x587>
  4094d0:	xor    eax,eax
  4094d2:	call   40a7d0 <handle_coda_error@@Base>
  4094d7:	mov    edi,DWORD PTR [rsp+0xc]
  4094db:	call   403040 <coda_type_get_special_type_name@plt>
  4094e0:	lea    rdi,[rip+0x35ee]        # 40cad5 <_IO_stdin_used@@Base+0xad5>
  4094e7:	mov    rsi,rax
  4094ea:	xor    eax,eax
  4094ec:	call   403230 <printf@plt>
  4094f1:	jmp    409577 <traverse_product@@Base+0x627>
  4094f6:	xor    eax,eax
  4094f8:	add    rsp,0x18
  4094fc:	pop    rbx
  4094fd:	pop    r14
  4094ff:	jmp    403720 <export_data_element_to_ascii@@Base>
  409504:	movsxd rax,DWORD PTR [rbx+0x110]
  40950b:	mov    rdi,QWORD PTR [rbx+rax*8+0x10]
  409510:	lea    rsi,[rsp+0xc]
  409515:	call   403360 <coda_type_get_read_type@plt>
  40951a:	test   eax,eax
  40951c:	je     409525 <traverse_product@@Base+0x5d5>
  40951e:	xor    eax,eax
  409520:	call   40a7d0 <handle_coda_error@@Base>
  409525:	mov    edi,DWORD PTR [rsp+0xc]
  409529:	call   403480 <coda_type_get_native_type_name@plt>
  40952e:	lea    rdi,[rip+0x35a0]        # 40cad5 <_IO_stdin_used@@Base+0xad5>
  409535:	mov    rsi,rax
  409538:	xor    eax,eax
  40953a:	call   403230 <printf@plt>
  40953f:	mov    eax,DWORD PTR [rsp+0xc]
  409543:	add    eax,0xfffffff5
  409546:	cmp    eax,0x1
  409549:	ja     409577 <traverse_product@@Base+0x627>
  40954b:	mov    edi,0x28
  409550:	call   403080 <putchar@plt>
  409555:	mov    esi,DWORD PTR [rbx+0xf34]
  40955b:	test   esi,esi
  40955d:	jle    409656 <traverse_product@@Base+0x706>
  409563:	mov    rdi,QWORD PTR [r14]
  409566:	dec    esi
  409568:	call   408de0 <print_full_field_name@@Base+0x2b0>
  40956d:	mov    edi,0x29
  409572:	call   403080 <putchar@plt>
  409577:	lea    rax,[rip+0x6dde]        # 41035c <show_unit@@Base>
  40957e:	cmp    DWORD PTR [rax],0x0
  409581:	je     4095c8 <traverse_product@@Base+0x678>
  409583:	lea    rax,[rip+0x6dde]        # 410368 <traverse_info@@Base>
  40958a:	movsxd rcx,DWORD PTR [rax+0x110]
  409591:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
  409596:	lea    rsi,[rsp+0x10]
  40959b:	call   403210 <coda_type_get_unit@plt>
  4095a0:	test   eax,eax
  4095a2:	je     4095ab <traverse_product@@Base+0x65b>
  4095a4:	xor    eax,eax
  4095a6:	call   40a7d0 <handle_coda_error@@Base>
  4095ab:	mov    rsi,QWORD PTR [rsp+0x10]
  4095b0:	test   rsi,rsi
  4095b3:	je     4095c8 <traverse_product@@Base+0x678>
  4095b5:	cmp    BYTE PTR [rsi],0x0
  4095b8:	je     4095c8 <traverse_product@@Base+0x678>
  4095ba:	lea    rdi,[rip+0x3550]        # 40cb11 <_IO_stdin_used@@Base+0xb11>
  4095c1:	xor    eax,eax
  4095c3:	call   403230 <printf@plt>
  4095c8:	lea    rax,[rip+0x7eed]        # 4114bc <show_description@@Base>
  4095cf:	cmp    DWORD PTR [rax],0x0
  4095d2:	je     409619 <traverse_product@@Base+0x6c9>
  4095d4:	lea    rax,[rip+0x6d8d]        # 410368 <traverse_info@@Base>
  4095db:	movsxd rcx,DWORD PTR [rax+0x110]
  4095e2:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
  4095e7:	lea    rsi,[rsp+0x10]
  4095ec:	call   403220 <coda_type_get_description@plt>
  4095f1:	test   eax,eax
  4095f3:	je     4095fc <traverse_product@@Base+0x6ac>
  4095f5:	xor    eax,eax
  4095f7:	call   40a7d0 <handle_coda_error@@Base>
  4095fc:	mov    rsi,QWORD PTR [rsp+0x10]
  409601:	test   rsi,rsi
  409604:	je     409619 <traverse_product@@Base+0x6c9>
  409606:	cmp    BYTE PTR [rsi],0x0
  409609:	je     409619 <traverse_product@@Base+0x6c9>
  40960b:	lea    rdi,[rip+0x3505]        # 40cb17 <_IO_stdin_used@@Base+0xb17>
  409612:	xor    eax,eax
  409614:	call   403230 <printf@plt>
  409619:	mov    edi,0xa
  40961e:	call   403080 <putchar@plt>
  409623:	lea    rax,[rip+0x6d22]        # 41034c <show_dim_vals@@Base>
  40962a:	cmp    DWORD PTR [rax],0x0
  40962d:	je     40964e <traverse_product@@Base+0x6fe>
  40962f:	lea    r14,[rip+0x7e9a]        # 4114d0 <dim_info@@Base>
  409636:	cmp    DWORD PTR [r14],0x0
  40963a:	jle    40964e <traverse_product@@Base+0x6fe>
  40963c:	xor    ebx,ebx
  40963e:	xchg   ax,ax
  409640:	mov    edi,ebx
  409642:	call   405700 <print_all_distinct_dims@@Base>
  409647:	inc    ebx
  409649:	cmp    ebx,DWORD PTR [r14]
  40964c:	jl     409640 <traverse_product@@Base+0x6f0>
  40964e:	add    rsp,0x18
  409652:	pop    rbx
  409653:	pop    r14
  409655:	ret    
  409656:	lea    rdi,[rip+0x347c]        # 40cad9 <_IO_stdin_used@@Base+0xad9>
  40965d:	lea    rsi,[rip+0x33c0]        # 40ca24 <_IO_stdin_used@@Base+0xa24>
  409664:	lea    rcx,[rip+0x348b]        # 40caf6 <_IO_stdin_used@@Base+0xaf6>
  40966b:	mov    edx,0xee
  409670:	call   403240 <__assert_fail@plt>
  409675:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40967f:	nop

0000000000409680 <print_yaml_data@@Base>:
  409680:	push   rbx
  409681:	sub    rsp,0x320
  409688:	mov    DWORD PTR [rip+0x6cb2],edi        # 410340 <__bss_start@@Base+0x10>
  40968e:	lea    rbx,[rip+0x6cd3]        # 410368 <traverse_info@@Base>
  409695:	mov    rdi,QWORD PTR [rbx]
  409698:	lea    rsi,[rsp+0x8]
  40969d:	call   4030e0 <coda_open@plt>
  4096a2:	test   eax,eax
  4096a4:	je     4096db <print_yaml_data@@Base+0x5b>
  4096a6:	call   4035d0 <coda_get_errno@plt>
  4096ab:	cmp    DWORD PTR [rax],0xffffffeb
  4096ae:	jne    4096d4 <print_yaml_data@@Base+0x54>
  4096b0:	xor    edi,edi
  4096b2:	call   403130 <coda_set_option_use_mmap@plt>
  4096b7:	mov    rdi,QWORD PTR [rbx]
  4096ba:	lea    rsi,[rsp+0x8]
  4096bf:	call   4030e0 <coda_open@plt>
  4096c4:	mov    ebx,eax
  4096c6:	mov    edi,0x1
  4096cb:	call   403130 <coda_set_option_use_mmap@plt>
  4096d0:	test   ebx,ebx
  4096d2:	je     4096db <print_yaml_data@@Base+0x5b>
  4096d4:	xor    eax,eax
  4096d6:	call   40a7d0 <handle_coda_error@@Base>
  4096db:	mov    rsi,QWORD PTR [rsp+0x8]
  4096e0:	lea    rdi,[rsp+0x10]
  4096e5:	call   403290 <coda_cursor_set_product@plt>
  4096ea:	test   eax,eax
  4096ec:	je     4096f5 <print_yaml_data@@Base+0x75>
  4096ee:	xor    eax,eax
  4096f0:	call   40a7d0 <handle_coda_error@@Base>
  4096f5:	lea    rax,[rip+0x7dcc]        # 4114c8 <starting_path@@Base>
  4096fc:	mov    rsi,QWORD PTR [rax]
  4096ff:	test   rsi,rsi
  409702:	je     409719 <print_yaml_data@@Base+0x99>
  409704:	lea    rdi,[rsp+0x10]
  409709:	call   4034d0 <coda_cursor_goto@plt>
  40970e:	test   eax,eax
  409710:	je     409719 <print_yaml_data@@Base+0x99>
  409712:	xor    eax,eax
  409714:	call   40a7d0 <handle_coda_error@@Base>
  409719:	xor    edi,edi
  40971b:	call   403090 <coda_set_option_perform_boundary_checks@plt>
  409720:	lea    rdi,[rsp+0x10]
  409725:	xor    esi,esi
  409727:	call   409740 <print_yaml_data@@Base+0xc0>
  40972c:	mov    rdi,QWORD PTR [rsp+0x8]
  409731:	call   4034b0 <coda_close@plt>
  409736:	add    rsp,0x320
  40973d:	pop    rbx
  40973e:	ret    
  40973f:	nop
  409740:	push   rbp
  409741:	push   r15
  409743:	push   r14
  409745:	push   r13
  409747:	push   r12
  409749:	push   rbx
  40974a:	sub    rsp,0x78
  40974e:	mov    r13d,esi
  409751:	mov    r12,rdi
  409754:	mov    DWORD PTR [rsp+0x1c],0x0
  40975c:	cmp    DWORD PTR [rip+0x6bdd],0x0        # 410340 <__bss_start@@Base+0x10>
  409763:	je     40982f <print_yaml_data@@Base+0x1af>
  409769:	lea    rsi,[rsp+0x1c]
  40976e:	mov    rdi,r12
  409771:	call   4031d0 <coda_cursor_has_attributes@plt>
  409776:	test   eax,eax
  409778:	je     409781 <print_yaml_data@@Base+0x101>
  40977a:	xor    eax,eax
  40977c:	call   40a7d0 <handle_coda_error@@Base>
  409781:	cmp    DWORD PTR [rsp+0x1c],0x0
  409786:	je     40982f <print_yaml_data@@Base+0x1af>
  40978c:	test   r13d,r13d
  40978f:	je     4097d9 <print_yaml_data@@Base+0x159>
  409791:	lea    rdi,[rip+0x35e8]        # 40cd80 <_IO_stdin_used@@Base+0xd80>
  409798:	xor    eax,eax
  40979a:	call   40a530 <print_yaml_data@@Base+0xeb0>
  40979f:	mov    ebx,DWORD PTR [rip+0x6b9f]        # 410344 <__bss_start@@Base+0x14>
  4097a5:	test   ebx,ebx
  4097a7:	js     40a510 <print_yaml_data@@Base+0xe90>
  4097ad:	je     4097d9 <print_yaml_data@@Base+0x159>
  4097af:	lea    r14,[rip+0x7cf2]        # 4114a8 <ascii_output@@Base>
  4097b6:	lea    rbp,[rip+0x29a2]        # 40c15f <_IO_stdin_used@@Base+0x15f>
  4097bd:	nop    DWORD PTR [rax]
  4097c0:	mov    rcx,QWORD PTR [r14]
  4097c3:	mov    esi,0x2
  4097c8:	mov    edx,0x1
  4097cd:	mov    rdi,rbp
  4097d0:	call   4035a0 <fwrite@plt>
  4097d5:	dec    ebx
  4097d7:	jg     4097c0 <print_yaml_data@@Base+0x140>
  4097d9:	lea    rdi,[rip+0x3410]        # 40cbf0 <_IO_stdin_used@@Base+0xbf0>
  4097e0:	xor    eax,eax
  4097e2:	call   40a530 <print_yaml_data@@Base+0xeb0>
  4097e7:	mov    rdi,r12
  4097ea:	call   403410 <coda_cursor_goto_attributes@plt>
  4097ef:	test   eax,eax
  4097f1:	je     4097fa <print_yaml_data@@Base+0x17a>
  4097f3:	xor    eax,eax
  4097f5:	call   40a7d0 <handle_coda_error@@Base>
  4097fa:	inc    DWORD PTR [rip+0x6b44]        # 410344 <__bss_start@@Base+0x14>
  409800:	mov    rdi,r12
  409803:	mov    esi,0x1
  409808:	call   409740 <print_yaml_data@@Base+0xc0>
  40980d:	dec    DWORD PTR [rip+0x6b31]        # 410344 <__bss_start@@Base+0x14>
  409813:	mov    rdi,r12
  409816:	call   403320 <coda_cursor_goto_parent@plt>
  40981b:	lea    rdi,[rip+0x33d5]        # 40cbf7 <_IO_stdin_used@@Base+0xbf7>
  409822:	xor    eax,eax
  409824:	call   40a5e0 <print_yaml_data@@Base+0xf60>
  409829:	inc    DWORD PTR [rip+0x6b15]        # 410344 <__bss_start@@Base+0x14>
  40982f:	lea    rsi,[rsp+0x74]
  409834:	mov    rdi,r12
  409837:	call   4031e0 <coda_cursor_get_type_class@plt>
  40983c:	test   eax,eax
  40983e:	je     409847 <print_yaml_data@@Base+0x1c7>
  409840:	xor    eax,eax
  409842:	call   40a7d0 <handle_coda_error@@Base>
  409847:	mov    eax,DWORD PTR [rsp+0x74]
  40984b:	cmp    rax,0x6
  40984f:	ja     409c46 <print_yaml_data@@Base+0x5c6>
  409855:	lea    rcx,[rip+0x32c4]        # 40cb20 <_IO_stdin_used@@Base+0xb20>
  40985c:	movsxd rax,DWORD PTR [rcx+rax*4]
  409860:	add    rax,rcx
  409863:	jmp    rax
  409865:	lea    rsi,[rsp+0x10]
  40986a:	mov    rdi,r12
  40986d:	call   4032e0 <coda_cursor_get_read_type@plt>
  409872:	test   eax,eax
  409874:	je     40987d <print_yaml_data@@Base+0x1fd>
  409876:	xor    eax,eax
  409878:	call   40a7d0 <handle_coda_error@@Base>
  40987d:	mov    eax,DWORD PTR [rsp+0x10]
  409881:	inc    eax
  409883:	cmp    eax,0xd
  409886:	ja     409c46 <print_yaml_data@@Base+0x5c6>
  40988c:	lea    rcx,[rip+0x32b9]        # 40cb4c <_IO_stdin_used@@Base+0xb4c>
  409893:	movsxd rax,DWORD PTR [rcx+rax*4]
  409897:	add    rax,rcx
  40989a:	jmp    rax
  40989c:	lea    rsi,[rsp+0x20]
  4098a1:	mov    rdi,r12
  4098a4:	call   403590 <coda_cursor_read_int32@plt>
  4098a9:	test   eax,eax
  4098ab:	je     4098b4 <print_yaml_data@@Base+0x234>
  4098ad:	xor    eax,eax
  4098af:	call   40a7d0 <handle_coda_error@@Base>
  4098b4:	movsxd rsi,DWORD PTR [rsp+0x20]
  4098b9:	lea    rdi,[rip+0x29f1]        # 40c2b1 <_IO_stdin_used@@Base+0x2b1>
  4098c0:	jmp    409c3f <print_yaml_data@@Base+0x5bf>
  4098c5:	lea    rsi,[rsp+0x20]
  4098ca:	mov    rdi,r12
  4098cd:	call   403110 <coda_cursor_get_num_elements@plt>
  4098d2:	test   eax,eax
  4098d4:	je     4098dd <print_yaml_data@@Base+0x25d>
  4098d6:	xor    eax,eax
  4098d8:	call   40a7d0 <handle_coda_error@@Base>
  4098dd:	cmp    QWORD PTR [rsp+0x20],0x0
  4098e3:	jle    409ae4 <print_yaml_data@@Base+0x464>
  4098e9:	test   r13d,r13d
  4098ec:	je     4098fc <print_yaml_data@@Base+0x27c>
  4098ee:	lea    rdi,[rip+0x348b]        # 40cd80 <_IO_stdin_used@@Base+0xd80>
  4098f5:	xor    eax,eax
  4098f7:	call   40a530 <print_yaml_data@@Base+0xeb0>
  4098fc:	lea    rsi,[rsp+0x8]
  409901:	mov    rdi,r12
  409904:	call   403180 <coda_cursor_get_type@plt>
  409909:	test   eax,eax
  40990b:	je     409914 <print_yaml_data@@Base+0x294>
  40990d:	xor    eax,eax
  40990f:	call   40a7d0 <handle_coda_error@@Base>
  409914:	mov    rdi,QWORD PTR [rsp+0x8]
  409919:	lea    rsi,[rsp+0x70]
  40991e:	call   403440 <coda_type_get_record_union_status@plt>
  409923:	test   eax,eax
  409925:	je     40992e <print_yaml_data@@Base+0x2ae>
  409927:	xor    eax,eax
  409929:	call   40a7d0 <handle_coda_error@@Base>
  40992e:	cmp    DWORD PTR [rsp+0x70],0x0
  409933:	je     409d2c <print_yaml_data@@Base+0x6ac>
  409939:	lea    rsi,[rsp+0x10]
  40993e:	mov    rdi,r12
  409941:	call   403570 <coda_cursor_get_available_union_field_index@plt>
  409946:	test   eax,eax
  409948:	je     409951 <print_yaml_data@@Base+0x2d1>
  40994a:	xor    eax,eax
  40994c:	call   40a7d0 <handle_coda_error@@Base>
  409951:	mov    rdi,QWORD PTR [rsp+0x8]
  409956:	mov    rsi,QWORD PTR [rsp+0x10]
  40995b:	lea    rdx,[rsp+0x60]
  409960:	call   4035f0 <coda_type_get_record_field_name@plt>
  409965:	test   eax,eax
  409967:	je     409970 <print_yaml_data@@Base+0x2f0>
  409969:	xor    eax,eax
  40996b:	call   40a7d0 <handle_coda_error@@Base>
  409970:	mov    rsi,QWORD PTR [rsp+0x10]
  409975:	mov    rdi,r12
  409978:	call   4032c0 <coda_cursor_goto_record_field_by_index@plt>
  40997d:	test   eax,eax
  40997f:	je     409988 <print_yaml_data@@Base+0x308>
  409981:	xor    eax,eax
  409983:	call   40a7d0 <handle_coda_error@@Base>
  409988:	test   r13d,r13d
  40998b:	je     4099c9 <print_yaml_data@@Base+0x349>
  40998d:	mov    ebx,DWORD PTR [rip+0x69b1]        # 410344 <__bss_start@@Base+0x14>
  409993:	test   ebx,ebx
  409995:	js     40a510 <print_yaml_data@@Base+0xe90>
  40999b:	je     4099c9 <print_yaml_data@@Base+0x349>
  40999d:	lea    r14,[rip+0x7b04]        # 4114a8 <ascii_output@@Base>
  4099a4:	lea    rbp,[rip+0x27b4]        # 40c15f <_IO_stdin_used@@Base+0x15f>
  4099ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4099b0:	mov    rcx,QWORD PTR [r14]
  4099b3:	mov    esi,0x2
  4099b8:	mov    edx,0x1
  4099bd:	mov    rdi,rbp
  4099c0:	call   4035a0 <fwrite@plt>
  4099c5:	dec    ebx
  4099c7:	jg     4099b0 <print_yaml_data@@Base+0x330>
  4099c9:	mov    rsi,QWORD PTR [rsp+0x60]
  4099ce:	lea    rdi,[rip+0x3229]        # 40cbfe <_IO_stdin_used@@Base+0xbfe>
  4099d5:	xor    eax,eax
  4099d7:	call   40a530 <print_yaml_data@@Base+0xeb0>
  4099dc:	inc    DWORD PTR [rip+0x6962]        # 410344 <__bss_start@@Base+0x14>
  4099e2:	mov    rdi,r12
  4099e5:	mov    esi,0x1
  4099ea:	call   409740 <print_yaml_data@@Base+0xc0>
  4099ef:	dec    DWORD PTR [rip+0x694f]        # 410344 <__bss_start@@Base+0x14>
  4099f5:	jmp    40a4a2 <print_yaml_data@@Base+0xe22>
  4099fa:	lea    rsi,[rsp+0x8]
  4099ff:	lea    rdx,[rsp+0x20]
  409a04:	mov    rdi,r12
  409a07:	call   403490 <coda_cursor_get_array_dim@plt>
  409a0c:	test   eax,eax
  409a0e:	je     409a17 <print_yaml_data@@Base+0x397>
  409a10:	xor    eax,eax
  409a12:	call   40a7d0 <handle_coda_error@@Base>
  409a17:	mov    eax,DWORD PTR [rsp+0x8]
  409a1b:	test   eax,eax
  409a1d:	js     40a4ba <print_yaml_data@@Base+0xe3a>
  409a23:	test   eax,eax
  409a25:	je     409e66 <print_yaml_data@@Base+0x7e6>
  409a2b:	cmp    eax,0x10
  409a2e:	jae    409f35 <print_yaml_data@@Base+0x8b5>
  409a34:	mov    ebx,0x1
  409a39:	xor    ecx,ecx
  409a3b:	jmp    40a410 <print_yaml_data@@Base+0xd90>
  409a40:	lea    rsi,[rsp+0x10]
  409a45:	mov    rdi,r12
  409a48:	call   403260 <coda_cursor_get_special_type@plt>
  409a4d:	test   eax,eax
  409a4f:	je     409a58 <print_yaml_data@@Base+0x3d8>
  409a51:	xor    eax,eax
  409a53:	call   40a7d0 <handle_coda_error@@Base>
  409a58:	mov    eax,DWORD PTR [rsp+0x10]
  409a5c:	cmp    rax,0x3
  409a60:	ja     409c46 <print_yaml_data@@Base+0x5c6>
  409a66:	lea    rcx,[rip+0x30cf]        # 40cb3c <_IO_stdin_used@@Base+0xb3c>
  409a6d:	movsxd rax,DWORD PTR [rcx+rax*4]
  409a71:	add    rax,rcx
  409a74:	jmp    rax
  409a76:	lea    rdi,[rip+0x31f5]        # 40cc72 <_IO_stdin_used@@Base+0xc72>
  409a7d:	jmp    40a4c1 <print_yaml_data@@Base+0xe41>
  409a82:	lea    rsi,[rsp+0x20]
  409a87:	mov    rdi,r12
  409a8a:	call   403150 <coda_cursor_read_uint32@plt>
  409a8f:	test   eax,eax
  409a91:	je     409a9a <print_yaml_data@@Base+0x41a>
  409a93:	xor    eax,eax
  409a95:	call   40a7d0 <handle_coda_error@@Base>
  409a9a:	mov    esi,DWORD PTR [rsp+0x20]
  409a9e:	lea    rdi,[rip+0x2811]        # 40c2b6 <_IO_stdin_used@@Base+0x2b6>
  409aa5:	jmp    409c3f <print_yaml_data@@Base+0x5bf>
  409aaa:	lea    rsi,[rsp+0x20]
  409aaf:	mov    rdi,r12
  409ab2:	call   403390 <coda_cursor_read_double@plt>
  409ab7:	test   eax,eax
  409ab9:	je     409ac2 <print_yaml_data@@Base+0x442>
  409abb:	xor    eax,eax
  409abd:	call   40a7d0 <handle_coda_error@@Base>
  409ac2:	cmp    DWORD PTR [rsp+0x10],0x8
  409ac7:	vmovq  xmm0,QWORD PTR [rsp+0x20]
  409acd:	lea    rax,[rip+0x27e7]        # 40c2bb <_IO_stdin_used@@Base+0x2bb>
  409ad4:	lea    rdi,[rip+0x2822]        # 40c2fd <_IO_stdin_used@@Base+0x2fd>
  409adb:	cmove  rdi,rax
  409adf:	jmp    409f1e <print_yaml_data@@Base+0x89e>
  409ae4:	lea    rdi,[rip+0x3118]        # 40cc03 <_IO_stdin_used@@Base+0xc03>
  409aeb:	jmp    40a4c1 <print_yaml_data@@Base+0xe41>
  409af0:	lea    rsi,[rsp+0x20]
  409af5:	mov    rdi,r12
  409af8:	call   403420 <coda_cursor_read_char@plt>
  409afd:	test   eax,eax
  409aff:	je     409b08 <print_yaml_data@@Base+0x488>
  409b01:	xor    eax,eax
  409b03:	call   40a7d0 <handle_coda_error@@Base>
  409b08:	lea    rdi,[rip+0x2ed2]        # 40c9e1 <_IO_stdin_used@@Base+0x9e1>
  409b0f:	xor    eax,eax
  409b11:	call   40a530 <print_yaml_data@@Base+0xeb0>
  409b16:	lea    rdi,[rsp+0x20]
  409b1b:	mov    esi,0x1
  409b20:	call   40a6f0 <print_yaml_data@@Base+0x1070>
  409b25:	lea    rdi,[rip+0x3253]        # 40cd7f <_IO_stdin_used@@Base+0xd7f>
  409b2c:	jmp    40a4c1 <print_yaml_data@@Base+0xe41>
  409b31:	lea    rsi,[rsp+0x20]
  409b36:	mov    rdi,r12
  409b39:	call   403370 <coda_cursor_get_string_length@plt>
  409b3e:	test   eax,eax
  409b40:	je     409b49 <print_yaml_data@@Base+0x4c9>
  409b42:	xor    eax,eax
  409b44:	call   40a7d0 <handle_coda_error@@Base>
  409b49:	mov    rbp,QWORD PTR [rsp+0x20]
  409b4e:	inc    rbp
  409b51:	mov    rdi,rbp
  409b54:	call   4033f0 <malloc@plt>
  409b59:	mov    r14,rax
  409b5c:	test   rax,rax
  409b5f:	jne    409b93 <print_yaml_data@@Base+0x513>
  409b61:	lea    rsi,[rip+0x24f5]        # 40c05d <_IO_stdin_used@@Base+0x5d>
  409b68:	lea    rcx,[rip+0x309f]        # 40cc0e <_IO_stdin_used@@Base+0xc0e>
  409b6f:	mov    edi,0xffffffff
  409b74:	mov    rdx,rbp
  409b77:	mov    r8d,0x169
  409b7d:	xor    eax,eax
  409b7f:	call   4030d0 <coda_set_error@plt>
  409b84:	xor    eax,eax
  409b86:	call   40a7d0 <handle_coda_error@@Base>
  409b8b:	mov    rbp,QWORD PTR [rsp+0x20]
  409b90:	inc    rbp
  409b93:	mov    rdi,r12
  409b96:	mov    rsi,r14
  409b99:	mov    rdx,rbp
  409b9c:	call   403310 <coda_cursor_read_string@plt>
  409ba1:	test   eax,eax
  409ba3:	je     409bac <print_yaml_data@@Base+0x52c>
  409ba5:	xor    eax,eax
  409ba7:	call   40a7d0 <handle_coda_error@@Base>
  409bac:	lea    rdi,[rip+0x2e2e]        # 40c9e1 <_IO_stdin_used@@Base+0x9e1>
  409bb3:	xor    eax,eax
  409bb5:	call   40a530 <print_yaml_data@@Base+0xeb0>
  409bba:	mov    rsi,QWORD PTR [rsp+0x20]
  409bbf:	mov    rdi,r14
  409bc2:	call   40a6f0 <print_yaml_data@@Base+0x1070>
  409bc7:	mov    rsi,QWORD PTR [rsp+0x20]
  409bcc:	lea    rdi,[rip+0x31ac]        # 40cd7f <_IO_stdin_used@@Base+0xd7f>
  409bd3:	xor    eax,eax
  409bd5:	call   40a530 <print_yaml_data@@Base+0xeb0>
  409bda:	jmp    409d14 <print_yaml_data@@Base+0x694>
  409bdf:	lea    rsi,[rsp+0x8]
  409be4:	mov    rdi,r12
  409be7:	call   4034c0 <coda_cursor_read_int64@plt>
  409bec:	test   eax,eax
  409bee:	je     409bf7 <print_yaml_data@@Base+0x577>
  409bf0:	xor    eax,eax
  409bf2:	call   40a7d0 <handle_coda_error@@Base>
  409bf7:	mov    rdi,QWORD PTR [rsp+0x8]
  409bfc:	lea    rbx,[rsp+0x20]
  409c01:	mov    rsi,rbx
  409c04:	call   403610 <coda_str64@plt>
  409c09:	jmp    409c35 <print_yaml_data@@Base+0x5b5>
  409c0b:	lea    rsi,[rsp+0x8]
  409c10:	mov    rdi,r12
  409c13:	call   403380 <coda_cursor_read_uint64@plt>
  409c18:	test   eax,eax
  409c1a:	je     409c23 <print_yaml_data@@Base+0x5a3>
  409c1c:	xor    eax,eax
  409c1e:	call   40a7d0 <handle_coda_error@@Base>
  409c23:	mov    rdi,QWORD PTR [rsp+0x8]
  409c28:	lea    rbx,[rsp+0x20]
  409c2d:	mov    rsi,rbx
  409c30:	call   403120 <coda_str64u@plt>
  409c35:	lea    rdi,[rip+0x3043]        # 40cc7f <_IO_stdin_used@@Base+0xc7f>
  409c3c:	mov    rsi,rbx
  409c3f:	xor    eax,eax
  409c41:	call   40a530 <print_yaml_data@@Base+0xeb0>
  409c46:	cmp    DWORD PTR [rsp+0x1c],0x0
  409c4b:	je     409c53 <print_yaml_data@@Base+0x5d3>
  409c4d:	dec    DWORD PTR [rip+0x66f1]        # 410344 <__bss_start@@Base+0x14>
  409c53:	add    rsp,0x78
  409c57:	pop    rbx
  409c58:	pop    r12
  409c5a:	pop    r13
  409c5c:	pop    r14
  409c5e:	pop    r15
  409c60:	pop    rbp
  409c61:	ret    
  409c62:	lea    rsi,[rsp+0x20]
  409c67:	mov    rdi,r12
  409c6a:	call   403540 <coda_cursor_get_bit_size@plt>
  409c6f:	test   eax,eax
  409c71:	je     409c7a <print_yaml_data@@Base+0x5fa>
  409c73:	xor    eax,eax
  409c75:	call   40a7d0 <handle_coda_error@@Base>
  409c7a:	mov    rbp,QWORD PTR [rsp+0x20]
  409c7f:	mov    r15,rbp
  409c82:	sar    r15,0x3
  409c86:	mov    eax,ebp
  409c88:	and    eax,0x7
  409c8b:	cmp    rax,0x1
  409c8f:	sbb    r15,0xffffffffffffffff
  409c93:	mov    rdi,r15
  409c96:	call   4033f0 <malloc@plt>
  409c9b:	mov    r14,rax
  409c9e:	test   rax,rax
  409ca1:	jne    409cd2 <print_yaml_data@@Base+0x652>
  409ca3:	lea    rsi,[rip+0x23b3]        # 40c05d <_IO_stdin_used@@Base+0x5d>
  409caa:	lea    rcx,[rip+0x2f5d]        # 40cc0e <_IO_stdin_used@@Base+0xc0e>
  409cb1:	mov    edi,0xffffffff
  409cb6:	mov    rdx,r15
  409cb9:	mov    r8d,0x188
  409cbf:	xor    eax,eax
  409cc1:	call   4030d0 <coda_set_error@plt>
  409cc6:	xor    eax,eax
  409cc8:	call   40a7d0 <handle_coda_error@@Base>
  409ccd:	mov    rbp,QWORD PTR [rsp+0x20]
  409cd2:	mov    rdi,r12
  409cd5:	mov    rsi,r14
  409cd8:	xor    edx,edx
  409cda:	mov    rcx,rbp
  409cdd:	call   403600 <coda_cursor_read_bits@plt>
  409ce2:	test   eax,eax
  409ce4:	je     409ced <print_yaml_data@@Base+0x66d>
  409ce6:	xor    eax,eax
  409ce8:	call   40a7d0 <handle_coda_error@@Base>
  409ced:	lea    rdi,[rip+0x2ced]        # 40c9e1 <_IO_stdin_used@@Base+0x9e1>
  409cf4:	xor    eax,eax
  409cf6:	call   40a530 <print_yaml_data@@Base+0xeb0>
  409cfb:	mov    rdi,r14
  409cfe:	mov    rsi,r15
  409d01:	call   40a6f0 <print_yaml_data@@Base+0x1070>
  409d06:	lea    rdi,[rip+0x3072]        # 40cd7f <_IO_stdin_used@@Base+0xd7f>
  409d0d:	xor    eax,eax
  409d0f:	call   40a530 <print_yaml_data@@Base+0xeb0>
  409d14:	mov    rdi,r14
  409d17:	call   403070 <free@plt>
  409d1c:	cmp    DWORD PTR [rsp+0x1c],0x0
  409d21:	jne    409c4d <print_yaml_data@@Base+0x5cd>
  409d27:	jmp    409c53 <print_yaml_data@@Base+0x5d3>
  409d2c:	mov    rdi,r12
  409d2f:	call   4032a0 <coda_cursor_goto_first_record_field@plt>
  409d34:	test   eax,eax
  409d36:	je     409d3f <print_yaml_data@@Base+0x6bf>
  409d38:	xor    eax,eax
  409d3a:	call   40a7d0 <handle_coda_error@@Base>
  409d3f:	mov    QWORD PTR [rsp+0x10],0x0
  409d48:	cmp    QWORD PTR [rsp+0x20],0x0
  409d4e:	jle    40a4a2 <print_yaml_data@@Base+0xe22>
  409d54:	mov    ebx,0x1
  409d59:	lea    r14,[rsp+0x6c]
  409d5e:	lea    r15,[rip+0x7743]        # 4114a8 <ascii_output@@Base>
  409d65:	lea    rbp,[rip+0x23f3]        # 40c15f <_IO_stdin_used@@Base+0x15f>
  409d6c:	xor    esi,esi
  409d6e:	jmp    409d88 <print_yaml_data@@Base+0x708>
  409d70:	mov    rsi,QWORD PTR [rsp+0x10]
  409d75:	inc    rsi
  409d78:	mov    QWORD PTR [rsp+0x10],rsi
  409d7d:	cmp    rsi,QWORD PTR [rsp+0x20]
  409d82:	jge    40a4a2 <print_yaml_data@@Base+0xe22>
  409d88:	mov    rdi,QWORD PTR [rsp+0x8]
  409d8d:	mov    rdx,r14
  409d90:	call   4030b0 <coda_type_get_record_field_hidden_status@plt>
  409d95:	test   eax,eax
  409d97:	je     409da0 <print_yaml_data@@Base+0x720>
  409d99:	xor    eax,eax
  409d9b:	call   40a7d0 <handle_coda_error@@Base>
  409da0:	cmp    DWORD PTR [rsp+0x6c],0x0
  409da5:	jne    409e37 <print_yaml_data@@Base+0x7b7>
  409dab:	mov    rdi,QWORD PTR [rsp+0x8]
  409db0:	mov    rsi,QWORD PTR [rsp+0x10]
  409db5:	lea    rdx,[rsp+0x60]
  409dba:	call   4035f0 <coda_type_get_record_field_name@plt>
  409dbf:	test   eax,eax
  409dc1:	je     409dca <print_yaml_data@@Base+0x74a>
  409dc3:	xor    eax,eax
  409dc5:	call   40a7d0 <handle_coda_error@@Base>
  409dca:	test   r13d,r13d
  409dcd:	jne    409dd3 <print_yaml_data@@Base+0x753>
  409dcf:	test   ebx,ebx
  409dd1:	jne    409e09 <print_yaml_data@@Base+0x789>
  409dd3:	mov    ebx,DWORD PTR [rip+0x656b]        # 410344 <__bss_start@@Base+0x14>
  409dd9:	test   ebx,ebx
  409ddb:	js     40a510 <print_yaml_data@@Base+0xe90>
  409de1:	je     409e09 <print_yaml_data@@Base+0x789>
  409de3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409ded:	nop    DWORD PTR [rax]
  409df0:	mov    rcx,QWORD PTR [r15]
  409df3:	mov    esi,0x2
  409df8:	mov    edx,0x1
  409dfd:	mov    rdi,rbp
  409e00:	call   4035a0 <fwrite@plt>
  409e05:	dec    ebx
  409e07:	jg     409df0 <print_yaml_data@@Base+0x770>
  409e09:	mov    rsi,QWORD PTR [rsp+0x60]
  409e0e:	xor    ebx,ebx
  409e10:	lea    rdi,[rip+0x2de7]        # 40cbfe <_IO_stdin_used@@Base+0xbfe>
  409e17:	xor    eax,eax
  409e19:	call   40a530 <print_yaml_data@@Base+0xeb0>
  409e1e:	inc    DWORD PTR [rip+0x6520]        # 410344 <__bss_start@@Base+0x14>
  409e24:	mov    rdi,r12
  409e27:	mov    esi,0x1
  409e2c:	call   409740 <print_yaml_data@@Base+0xc0>
  409e31:	dec    DWORD PTR [rip+0x650d]        # 410344 <__bss_start@@Base+0x14>
  409e37:	mov    rax,QWORD PTR [rsp+0x20]
  409e3c:	dec    rax
  409e3f:	cmp    QWORD PTR [rsp+0x10],rax
  409e44:	jge    409d70 <print_yaml_data@@Base+0x6f0>
  409e4a:	mov    rdi,r12
  409e4d:	call   403500 <coda_cursor_goto_next_record_field@plt>
  409e52:	test   eax,eax
  409e54:	je     409d70 <print_yaml_data@@Base+0x6f0>
  409e5a:	xor    eax,eax
  409e5c:	call   40a7d0 <handle_coda_error@@Base>
  409e61:	jmp    409d70 <print_yaml_data@@Base+0x6f0>
  409e66:	mov    ebx,0x1
  409e6b:	jmp    40a427 <print_yaml_data@@Base+0xda7>
  409e70:	lea    rsi,[rsp+0x8]
  409e75:	mov    rdi,r12
  409e78:	call   403390 <coda_cursor_read_double@plt>
  409e7d:	test   eax,eax
  409e7f:	je     409e88 <print_yaml_data@@Base+0x808>
  409e81:	xor    eax,eax
  409e83:	call   40a7d0 <handle_coda_error@@Base>
  409e88:	vmovsd xmm0,QWORD PTR [rsp+0x8]
  409e8e:	call   4033a0 <coda_isNaN@plt>
  409e93:	test   eax,eax
  409e95:	jne    409eaa <print_yaml_data@@Base+0x82a>
  409e97:	vmovsd xmm0,QWORD PTR [rsp+0x8]
  409e9d:	call   403190 <coda_isInf@plt>
  409ea2:	test   eax,eax
  409ea4:	je     40a4db <print_yaml_data@@Base+0xe5b>
  409eaa:	vmovq  xmm0,QWORD PTR [rsp+0x8]
  409eb0:	jmp    409f17 <print_yaml_data@@Base+0x897>
  409eb2:	lea    rsi,[rsp+0x20]
  409eb7:	lea    rdx,[rsp+0x8]
  409ebc:	mov    rdi,r12
  409ebf:	call   403450 <coda_cursor_read_complex_double_split@plt>
  409ec4:	test   eax,eax
  409ec6:	je     409ecf <print_yaml_data@@Base+0x84f>
  409ec8:	xor    eax,eax
  409eca:	call   40a7d0 <handle_coda_error@@Base>
  409ecf:	vmovq  xmm0,QWORD PTR [rsp+0x20]
  409ed5:	vmovq  xmm1,QWORD PTR [rsp+0x8]
  409edb:	lea    rdi,[rip+0x243e]        # 40c320 <_IO_stdin_used@@Base+0x320>
  409ee2:	mov    al,0x2
  409ee4:	call   40a530 <print_yaml_data@@Base+0xeb0>
  409ee9:	cmp    DWORD PTR [rsp+0x1c],0x0
  409eee:	jne    409c4d <print_yaml_data@@Base+0x5cd>
  409ef4:	jmp    409c53 <print_yaml_data@@Base+0x5d3>
  409ef9:	lea    rsi,[rsp+0x20]
  409efe:	mov    rdi,r12
  409f01:	call   403390 <coda_cursor_read_double@plt>
  409f06:	test   eax,eax
  409f08:	je     409f11 <print_yaml_data@@Base+0x891>
  409f0a:	xor    eax,eax
  409f0c:	call   40a7d0 <handle_coda_error@@Base>
  409f11:	vmovq  xmm0,QWORD PTR [rsp+0x20]
  409f17:	lea    rdi,[rip+0x23df]        # 40c2fd <_IO_stdin_used@@Base+0x2fd>
  409f1e:	mov    al,0x1
  409f20:	call   40a530 <print_yaml_data@@Base+0xeb0>
  409f25:	cmp    DWORD PTR [rsp+0x1c],0x0
  409f2a:	jne    409c4d <print_yaml_data@@Base+0x5cd>
  409f30:	jmp    409c53 <print_yaml_data@@Base+0x5d3>
  409f35:	mov    ecx,eax
  409f37:	and    ecx,0xfffffff0
  409f3a:	lea    rdi,[rcx-0x10]
  409f3e:	mov    rsi,rdi
  409f41:	shr    rsi,0x4
  409f45:	inc    rsi
  409f48:	mov    edx,esi
  409f4a:	and    edx,0x3
  409f4d:	cmp    rdi,0x30
  409f51:	jae    409f78 <print_yaml_data@@Base+0x8f8>
  409f53:	vpbroadcastq ymm0,QWORD PTR [rip+0x2234]        # 40c190 <_IO_stdin_used@@Base+0x190>
  409f5c:	xor    esi,esi
  409f5e:	vmovdqa ymm3,ymm0
  409f62:	vmovdqa ymm2,ymm0
  409f66:	vmovdqa ymm1,ymm0
  409f6a:	test   rdx,rdx
  409f6d:	jne    40a282 <print_yaml_data@@Base+0xc02>
  409f73:	jmp    40a341 <print_yaml_data@@Base+0xcc1>
  409f78:	mov    rdi,rdx
  409f7b:	sub    rdi,rsi
  409f7e:	vpbroadcastq ymm0,QWORD PTR [rip+0x2209]        # 40c190 <_IO_stdin_used@@Base+0x190>
  409f87:	xor    esi,esi
  409f89:	vmovdqa ymm3,ymm0
  409f8d:	vmovdqa ymm2,ymm0
  409f91:	vmovdqa ymm1,ymm0
  409f95:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409f9f:	nop
  409fa0:	vmovdqu ymm4,YMMWORD PTR [rsp+rsi*8+0x20]
  409fa6:	vmovdqu ymm5,YMMWORD PTR [rsp+rsi*8+0x40]
  409fac:	vmovdqu ymm6,YMMWORD PTR [rsp+rsi*8+0x60]
  409fb2:	vmovdqu ymm7,YMMWORD PTR [rsp+rsi*8+0x80]
  409fbb:	vpsrlq ymm8,ymm0,0x20
  409fc0:	vpmuludq ymm8,ymm4,ymm8
  409fc5:	vpsrlq ymm9,ymm4,0x20
  409fca:	vpmuludq ymm9,ymm9,ymm0
  409fce:	vpaddq ymm8,ymm8,ymm9
  409fd3:	vpsllq ymm8,ymm8,0x20
  409fd9:	vpmuludq ymm0,ymm4,ymm0
  409fdd:	vpaddq ymm0,ymm0,ymm8
  409fe2:	vpsrlq ymm4,ymm3,0x20
  409fe7:	vpmuludq ymm4,ymm5,ymm4
  409feb:	vpsrlq ymm8,ymm5,0x20
  409ff0:	vpmuludq ymm8,ymm8,ymm3
  409ff4:	vpaddq ymm4,ymm4,ymm8
  409ff9:	vpsllq ymm4,ymm4,0x20
  409ffe:	vpmuludq ymm3,ymm5,ymm3
  40a002:	vpaddq ymm3,ymm3,ymm4
  40a006:	vpsrlq ymm4,ymm2,0x20
  40a00b:	vpmuludq ymm4,ymm6,ymm4
  40a00f:	vpsrlq ymm5,ymm6,0x20
  40a014:	vpmuludq ymm5,ymm5,ymm2
  40a018:	vpaddq ymm4,ymm4,ymm5
  40a01c:	vpsllq ymm4,ymm4,0x20
  40a021:	vpmuludq ymm2,ymm6,ymm2
  40a025:	vpaddq ymm2,ymm2,ymm4
  40a029:	vpsrlq ymm4,ymm1,0x20
  40a02e:	vpmuludq ymm4,ymm7,ymm4
  40a032:	vpsrlq ymm5,ymm7,0x20
  40a037:	vpmuludq ymm5,ymm5,ymm1
  40a03b:	vpaddq ymm4,ymm4,ymm5
  40a03f:	vpsllq ymm4,ymm4,0x20
  40a044:	vpmuludq ymm1,ymm7,ymm1
  40a048:	vpaddq ymm1,ymm1,ymm4
  40a04c:	vmovdqu ymm4,YMMWORD PTR [rsp+rsi*8+0xa0]
  40a055:	vmovdqu ymm5,YMMWORD PTR [rsp+rsi*8+0xc0]
  40a05e:	vmovdqu ymm6,YMMWORD PTR [rsp+rsi*8+0xe0]
  40a067:	vmovdqu ymm7,YMMWORD PTR [rsp+rsi*8+0x100]
  40a070:	vpsrlq ymm8,ymm4,0x20
  40a075:	vpmuludq ymm8,ymm8,ymm0
  40a079:	vpsrlq ymm9,ymm0,0x20
  40a07e:	vpmuludq ymm9,ymm4,ymm9
  40a083:	vpaddq ymm8,ymm9,ymm8
  40a088:	vpsllq ymm8,ymm8,0x20
  40a08e:	vpmuludq ymm0,ymm4,ymm0
  40a092:	vpaddq ymm0,ymm0,ymm8
  40a097:	vpsrlq ymm4,ymm5,0x20
  40a09c:	vpmuludq ymm4,ymm4,ymm3
  40a0a0:	vpsrlq ymm8,ymm3,0x20
  40a0a5:	vpmuludq ymm8,ymm5,ymm8
  40a0aa:	vpaddq ymm4,ymm8,ymm4
  40a0ae:	vpsllq ymm4,ymm4,0x20
  40a0b3:	vpmuludq ymm3,ymm5,ymm3
  40a0b7:	vpaddq ymm3,ymm3,ymm4
  40a0bb:	vpsrlq ymm4,ymm6,0x20
  40a0c0:	vpmuludq ymm4,ymm4,ymm2
  40a0c4:	vpsrlq ymm5,ymm2,0x20
  40a0c9:	vpmuludq ymm5,ymm6,ymm5
  40a0cd:	vpaddq ymm4,ymm5,ymm4
  40a0d1:	vpsllq ymm4,ymm4,0x20
  40a0d6:	vpmuludq ymm2,ymm6,ymm2
  40a0da:	vpaddq ymm2,ymm2,ymm4
  40a0de:	vpsrlq ymm4,ymm7,0x20
  40a0e3:	vpmuludq ymm4,ymm4,ymm1
  40a0e7:	vpsrlq ymm5,ymm1,0x20
  40a0ec:	vpmuludq ymm5,ymm7,ymm5
  40a0f0:	vpaddq ymm4,ymm5,ymm4
  40a0f4:	vpsllq ymm4,ymm4,0x20
  40a0f9:	vpmuludq ymm1,ymm7,ymm1
  40a0fd:	vpaddq ymm1,ymm1,ymm4
  40a101:	vmovdqu ymm4,YMMWORD PTR [rsp+rsi*8+0x120]
  40a10a:	vmovdqu ymm5,YMMWORD PTR [rsp+rsi*8+0x140]
  40a113:	vmovdqu ymm6,YMMWORD PTR [rsp+rsi*8+0x160]
  40a11c:	vmovdqu ymm7,YMMWORD PTR [rsp+rsi*8+0x180]
  40a125:	vpsrlq ymm8,ymm4,0x20
  40a12a:	vpmuludq ymm8,ymm8,ymm0
  40a12e:	vpsrlq ymm9,ymm0,0x20
  40a133:	vpmuludq ymm9,ymm4,ymm9
  40a138:	vpaddq ymm8,ymm9,ymm8
  40a13d:	vpsllq ymm8,ymm8,0x20
  40a143:	vpmuludq ymm0,ymm4,ymm0
  40a147:	vpaddq ymm0,ymm0,ymm8
  40a14c:	vpsrlq ymm4,ymm5,0x20
  40a151:	vpmuludq ymm4,ymm4,ymm3
  40a155:	vpsrlq ymm8,ymm3,0x20
  40a15a:	vpmuludq ymm8,ymm5,ymm8
  40a15f:	vpaddq ymm4,ymm8,ymm4
  40a163:	vpsllq ymm4,ymm4,0x20
  40a168:	vpmuludq ymm3,ymm5,ymm3
  40a16c:	vpaddq ymm3,ymm3,ymm4
  40a170:	vpsrlq ymm4,ymm6,0x20
  40a175:	vpmuludq ymm4,ymm4,ymm2
  40a179:	vpsrlq ymm5,ymm2,0x20
  40a17e:	vpmuludq ymm5,ymm6,ymm5
  40a182:	vpaddq ymm4,ymm5,ymm4
  40a186:	vpsllq ymm4,ymm4,0x20
  40a18b:	vpmuludq ymm2,ymm6,ymm2
  40a18f:	vpaddq ymm2,ymm2,ymm4
  40a193:	vpsrlq ymm4,ymm7,0x20
  40a198:	vpmuludq ymm4,ymm4,ymm1
  40a19c:	vpsrlq ymm5,ymm1,0x20
  40a1a1:	vpmuludq ymm5,ymm7,ymm5
  40a1a5:	vpaddq ymm4,ymm5,ymm4
  40a1a9:	vpsllq ymm4,ymm4,0x20
  40a1ae:	vpmuludq ymm1,ymm7,ymm1
  40a1b2:	vpaddq ymm1,ymm1,ymm4
  40a1b6:	vmovdqu ymm4,YMMWORD PTR [rsp+rsi*8+0x1a0]
  40a1bf:	vmovdqu ymm5,YMMWORD PTR [rsp+rsi*8+0x1c0]
  40a1c8:	vmovdqu ymm6,YMMWORD PTR [rsp+rsi*8+0x1e0]
  40a1d1:	vmovdqu ymm7,YMMWORD PTR [rsp+rsi*8+0x200]
  40a1da:	vpsrlq ymm8,ymm4,0x20
  40a1df:	vpmuludq ymm8,ymm8,ymm0
  40a1e3:	vpsrlq ymm9,ymm0,0x20
  40a1e8:	vpmuludq ymm9,ymm4,ymm9
  40a1ed:	vpaddq ymm8,ymm9,ymm8
  40a1f2:	vpsllq ymm8,ymm8,0x20
  40a1f8:	vpmuludq ymm0,ymm4,ymm0
  40a1fc:	vpaddq ymm0,ymm0,ymm8
  40a201:	vpsrlq ymm4,ymm5,0x20
  40a206:	vpmuludq ymm4,ymm4,ymm3
  40a20a:	vpsrlq ymm8,ymm3,0x20
  40a20f:	vpmuludq ymm8,ymm5,ymm8
  40a214:	vpaddq ymm4,ymm8,ymm4
  40a218:	vpsllq ymm4,ymm4,0x20
  40a21d:	vpmuludq ymm3,ymm5,ymm3
  40a221:	vpaddq ymm3,ymm3,ymm4
  40a225:	vpsrlq ymm4,ymm6,0x20
  40a22a:	vpmuludq ymm4,ymm4,ymm2
  40a22e:	vpsrlq ymm5,ymm2,0x20
  40a233:	vpmuludq ymm5,ymm6,ymm5
  40a237:	vpaddq ymm4,ymm5,ymm4
  40a23b:	vpsllq ymm4,ymm4,0x20
  40a240:	vpmuludq ymm2,ymm6,ymm2
  40a244:	vpaddq ymm2,ymm2,ymm4
  40a248:	vpsrlq ymm4,ymm7,0x20
  40a24d:	vpmuludq ymm4,ymm4,ymm1
  40a251:	vpsrlq ymm5,ymm1,0x20
  40a256:	vpmuludq ymm5,ymm7,ymm5
  40a25a:	vpaddq ymm4,ymm5,ymm4
  40a25e:	vpsllq ymm4,ymm4,0x20
  40a263:	vpmuludq ymm1,ymm7,ymm1
  40a267:	vpaddq ymm1,ymm1,ymm4
  40a26b:	add    rsi,0x40
  40a26f:	add    rdi,0x4
  40a273:	jne    409fa0 <print_yaml_data@@Base+0x920>
  40a279:	test   rdx,rdx
  40a27c:	je     40a341 <print_yaml_data@@Base+0xcc1>
  40a282:	lea    rsi,[rsp+rsi*8]
  40a286:	add    rsi,0x80
  40a28d:	neg    rdx
  40a290:	vmovdqu ymm4,YMMWORD PTR [rsi-0x60]
  40a295:	vmovdqu ymm5,YMMWORD PTR [rsi-0x40]
  40a29a:	vmovdqu ymm6,YMMWORD PTR [rsi-0x20]
  40a29f:	vmovdqu ymm7,YMMWORD PTR [rsi]
  40a2a3:	vpsrlq ymm8,ymm0,0x20
  40a2a8:	vpmuludq ymm8,ymm4,ymm8
  40a2ad:	vpsrlq ymm9,ymm4,0x20
  40a2b2:	vpmuludq ymm9,ymm9,ymm0
  40a2b6:	vpaddq ymm8,ymm8,ymm9
  40a2bb:	vpsllq ymm8,ymm8,0x20
  40a2c1:	vpmuludq ymm0,ymm4,ymm0
  40a2c5:	vpaddq ymm0,ymm0,ymm8
  40a2ca:	vpsrlq ymm4,ymm3,0x20
  40a2cf:	vpmuludq ymm4,ymm5,ymm4
  40a2d3:	vpsrlq ymm8,ymm5,0x20
  40a2d8:	vpmuludq ymm8,ymm8,ymm3
  40a2dc:	vpaddq ymm4,ymm4,ymm8
  40a2e1:	vpsllq ymm4,ymm4,0x20
  40a2e6:	vpmuludq ymm3,ymm5,ymm3
  40a2ea:	vpaddq ymm3,ymm3,ymm4
  40a2ee:	vpsrlq ymm4,ymm2,0x20
  40a2f3:	vpmuludq ymm4,ymm6,ymm4
  40a2f7:	vpsrlq ymm5,ymm6,0x20
  40a2fc:	vpmuludq ymm5,ymm5,ymm2
  40a300:	vpaddq ymm4,ymm4,ymm5
  40a304:	vpsllq ymm4,ymm4,0x20
  40a309:	vpmuludq ymm2,ymm6,ymm2
  40a30d:	vpaddq ymm2,ymm2,ymm4
  40a311:	vpsrlq ymm4,ymm1,0x20
  40a316:	vpmuludq ymm4,ymm7,ymm4
  40a31a:	vpsrlq ymm5,ymm7,0x20
  40a31f:	vpmuludq ymm5,ymm5,ymm1
  40a323:	vpaddq ymm4,ymm4,ymm5
  40a327:	vpsllq ymm4,ymm4,0x20
  40a32c:	vpmuludq ymm1,ymm7,ymm1
  40a330:	vpaddq ymm1,ymm1,ymm4
  40a334:	sub    rsi,0xffffffffffffff80
  40a338:	inc    rdx
  40a33b:	jne    40a290 <print_yaml_data@@Base+0xc10>
  40a341:	vpsrlq ymm4,ymm3,0x20
  40a346:	vpmuludq ymm4,ymm4,ymm0
  40a34a:	vpsrlq ymm5,ymm0,0x20
  40a34f:	vpmuludq ymm5,ymm3,ymm5
  40a353:	vpaddq ymm4,ymm5,ymm4
  40a357:	vpsllq ymm4,ymm4,0x20
  40a35c:	vpmuludq ymm0,ymm3,ymm0
  40a360:	vpaddq ymm0,ymm0,ymm4
  40a364:	vpsrlq ymm3,ymm2,0x20
  40a369:	vpmuludq ymm3,ymm3,ymm0
  40a36d:	vpsrlq ymm4,ymm0,0x20
  40a372:	vpmuludq ymm4,ymm2,ymm4
  40a376:	vpaddq ymm3,ymm4,ymm3
  40a37a:	vpsllq ymm3,ymm3,0x20
  40a37f:	vpmuludq ymm0,ymm2,ymm0
  40a383:	vpaddq ymm0,ymm0,ymm3
  40a387:	vpsrlq ymm2,ymm1,0x20
  40a38c:	vpmuludq ymm2,ymm2,ymm0
  40a390:	vpsrlq ymm3,ymm0,0x20
  40a395:	vpmuludq ymm3,ymm1,ymm3
  40a399:	vpaddq ymm2,ymm3,ymm2
  40a39d:	vpsllq ymm2,ymm2,0x20
  40a3a2:	vpmuludq ymm0,ymm1,ymm0
  40a3a6:	vpaddq ymm0,ymm0,ymm2
  40a3aa:	vextracti128 xmm1,ymm0,0x1
  40a3b0:	vpsrlq xmm2,xmm0,0x20
  40a3b5:	vpmuludq xmm2,xmm2,xmm1
  40a3b9:	vpsrlq xmm3,xmm1,0x20
  40a3be:	vpmuludq xmm3,xmm0,xmm3
  40a3c2:	vpaddq xmm2,xmm3,xmm2
  40a3c6:	vpsllq xmm2,xmm2,0x20
  40a3cb:	vpmuludq xmm0,xmm0,xmm1
  40a3cf:	vpaddq xmm0,xmm0,xmm2
  40a3d3:	vpshufd xmm1,xmm0,0x4e
  40a3d8:	vpsrlq xmm2,xmm0,0x20
  40a3dd:	vpmuludq xmm2,xmm2,xmm1
  40a3e1:	vpsrldq xmm3,xmm0,0xc
  40a3e6:	vpmuludq xmm3,xmm0,xmm3
  40a3ea:	vpaddq xmm2,xmm3,xmm2
  40a3ee:	vpsllq xmm2,xmm2,0x20
  40a3f3:	vpmuludq xmm0,xmm0,xmm1
  40a3f7:	vpaddq xmm0,xmm0,xmm2
  40a3fb:	vmovq  rbx,xmm0
  40a400:	cmp    rcx,rax
  40a403:	je     40a41e <print_yaml_data@@Base+0xd9e>
  40a405:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a40f:	nop
  40a410:	imul   rbx,QWORD PTR [rsp+rcx*8+0x20]
  40a416:	inc    rcx
  40a419:	cmp    rax,rcx
  40a41c:	jne    40a410 <print_yaml_data@@Base+0xd90>
  40a41e:	test   rbx,rbx
  40a421:	jle    40a4ba <print_yaml_data@@Base+0xe3a>
  40a427:	lea    rdi,[rip+0x2952]        # 40cd80 <_IO_stdin_used@@Base+0xd80>
  40a42e:	xor    eax,eax
  40a430:	vzeroupper 
  40a433:	call   40a530 <print_yaml_data@@Base+0xeb0>
  40a438:	mov    rdi,r12
  40a43b:	call   403270 <coda_cursor_goto_first_array_element@plt>
  40a440:	test   eax,eax
  40a442:	je     40a44b <print_yaml_data@@Base+0xdcb>
  40a444:	xor    eax,eax
  40a446:	call   40a7d0 <handle_coda_error@@Base>
  40a44b:	lea    r15,[rbx-0x1]
  40a44f:	lea    r14,[rip+0x27b1]        # 40cc07 <_IO_stdin_used@@Base+0xc07>
  40a456:	xor    ebp,ebp
  40a458:	jmp    40a468 <print_yaml_data@@Base+0xde8>
  40a45a:	nop    WORD PTR [rax+rax*1+0x0]
  40a460:	inc    rbp
  40a463:	cmp    rbx,rbp
  40a466:	je     40a4a2 <print_yaml_data@@Base+0xe22>
  40a468:	mov    rdi,r14
  40a46b:	xor    eax,eax
  40a46d:	call   40a5e0 <print_yaml_data@@Base+0xf60>
  40a472:	inc    DWORD PTR [rip+0x5ecc]        # 410344 <__bss_start@@Base+0x14>
  40a478:	mov    rdi,r12
  40a47b:	xor    esi,esi
  40a47d:	call   409740 <print_yaml_data@@Base+0xc0>
  40a482:	dec    DWORD PTR [rip+0x5ebc]        # 410344 <__bss_start@@Base+0x14>
  40a488:	cmp    r15,rbp
  40a48b:	jle    40a460 <print_yaml_data@@Base+0xde0>
  40a48d:	mov    rdi,r12
  40a490:	call   4033b0 <coda_cursor_goto_next_array_element@plt>
  40a495:	test   eax,eax
  40a497:	je     40a460 <print_yaml_data@@Base+0xde0>
  40a499:	xor    eax,eax
  40a49b:	call   40a7d0 <handle_coda_error@@Base>
  40a4a0:	jmp    40a460 <print_yaml_data@@Base+0xde0>
  40a4a2:	mov    rdi,r12
  40a4a5:	call   403320 <coda_cursor_goto_parent@plt>
  40a4aa:	cmp    DWORD PTR [rsp+0x1c],0x0
  40a4af:	jne    409c4d <print_yaml_data@@Base+0x5cd>
  40a4b5:	jmp    409c53 <print_yaml_data@@Base+0x5d3>
  40a4ba:	lea    rdi,[rip+0x2749]        # 40cc0a <_IO_stdin_used@@Base+0xc0a>
  40a4c1:	xor    eax,eax
  40a4c3:	vzeroupper 
  40a4c6:	call   40a530 <print_yaml_data@@Base+0xeb0>
  40a4cb:	cmp    DWORD PTR [rsp+0x1c],0x0
  40a4d0:	jne    409c4d <print_yaml_data@@Base+0x5cd>
  40a4d6:	jmp    409c53 <print_yaml_data@@Base+0x5d3>
  40a4db:	vmovq  xmm0,QWORD PTR [rsp+0x8]
  40a4e1:	lea    rdi,[rip+0x24b5]        # 40c99d <_IO_stdin_used@@Base+0x99d>
  40a4e8:	lea    rsi,[rsp+0x20]
  40a4ed:	call   4030f0 <coda_time_double_to_string@plt>
  40a4f2:	test   eax,eax
  40a4f4:	je     40a4ff <print_yaml_data@@Base+0xe7f>
  40a4f6:	lea    rdi,[rip+0x24bd]        # 40c9ba <_IO_stdin_used@@Base+0x9ba>
  40a4fd:	jmp    40a4c1 <print_yaml_data@@Base+0xe41>
  40a4ff:	lea    rdi,[rip+0x2779]        # 40cc7f <_IO_stdin_used@@Base+0xc7f>
  40a506:	lea    rsi,[rsp+0x20]
  40a50b:	jmp    409c3f <print_yaml_data@@Base+0x5bf>
  40a510:	lea    rdi,[rip+0x1e13]        # 40c32a <_IO_stdin_used@@Base+0x32a>
  40a517:	lea    rsi,[rip+0x26f0]        # 40cc0e <_IO_stdin_used@@Base+0xc0e>
  40a51e:	lea    rcx,[rip+0x1e11]        # 40c336 <_IO_stdin_used@@Base+0x336>
  40a525:	mov    edx,0x2c
  40a52a:	call   403240 <__assert_fail@plt>
  40a52f:	nop
  40a530:	sub    rsp,0xd8
  40a537:	mov    r10,rdi
  40a53a:	test   al,al
  40a53c:	je     40a57d <print_yaml_data@@Base+0xefd>
  40a53e:	vmovaps XMMWORD PTR [rsp+0x50],xmm0
  40a544:	vmovaps XMMWORD PTR [rsp+0x60],xmm1
  40a54a:	vmovaps XMMWORD PTR [rsp+0x70],xmm2
  40a550:	vmovaps XMMWORD PTR [rsp+0x80],xmm3
  40a559:	vmovaps XMMWORD PTR [rsp+0x90],xmm4
  40a562:	vmovaps XMMWORD PTR [rsp+0xa0],xmm5
  40a56b:	vmovaps XMMWORD PTR [rsp+0xb0],xmm6
  40a574:	vmovaps XMMWORD PTR [rsp+0xc0],xmm7
  40a57d:	mov    QWORD PTR [rsp+0x28],rsi
  40a582:	mov    QWORD PTR [rsp+0x30],rdx
  40a587:	mov    QWORD PTR [rsp+0x38],rcx
  40a58c:	mov    QWORD PTR [rsp+0x40],r8
  40a591:	mov    QWORD PTR [rsp+0x48],r9
  40a596:	lea    rax,[rsp+0x20]
  40a59b:	mov    QWORD PTR [rsp+0x10],rax
  40a5a0:	lea    rax,[rsp+0xe0]
  40a5a8:	mov    QWORD PTR [rsp+0x8],rax
  40a5ad:	movabs rax,0x3000000008
  40a5b7:	mov    QWORD PTR [rsp],rax
  40a5bb:	lea    rax,[rip+0x6ee6]        # 4114a8 <ascii_output@@Base>
  40a5c2:	mov    rdi,QWORD PTR [rax]
  40a5c5:	mov    rdx,rsp
  40a5c8:	mov    rsi,r10
  40a5cb:	call   403530 <vfprintf@plt>
  40a5d0:	add    rsp,0xd8
  40a5d7:	ret    
  40a5d8:	nop    DWORD PTR [rax+rax*1+0x0]
  40a5e0:	push   rbp
  40a5e1:	push   r15
  40a5e3:	push   r14
  40a5e5:	push   rbx
  40a5e6:	sub    rsp,0xd8
  40a5ed:	mov    r14,rdi
  40a5f0:	test   al,al
  40a5f2:	je     40a633 <print_yaml_data@@Base+0xfb3>
  40a5f4:	vmovaps XMMWORD PTR [rsp+0x50],xmm0
  40a5fa:	vmovaps XMMWORD PTR [rsp+0x60],xmm1
  40a600:	vmovaps XMMWORD PTR [rsp+0x70],xmm2
  40a606:	vmovaps XMMWORD PTR [rsp+0x80],xmm3
  40a60f:	vmovaps XMMWORD PTR [rsp+0x90],xmm4
  40a618:	vmovaps XMMWORD PTR [rsp+0xa0],xmm5
  40a621:	vmovaps XMMWORD PTR [rsp+0xb0],xmm6
  40a62a:	vmovaps XMMWORD PTR [rsp+0xc0],xmm7
  40a633:	mov    QWORD PTR [rsp+0x28],rsi
  40a638:	mov    QWORD PTR [rsp+0x30],rdx
  40a63d:	mov    QWORD PTR [rsp+0x38],rcx
  40a642:	mov    QWORD PTR [rsp+0x40],r8
  40a647:	mov    QWORD PTR [rsp+0x48],r9
  40a64c:	mov    ebp,DWORD PTR [rip+0x5cf2]        # 410344 <__bss_start@@Base+0x14>
  40a652:	test   ebp,ebp
  40a654:	js     40a6d1 <print_yaml_data@@Base+0x1051>
  40a656:	je     40a689 <print_yaml_data@@Base+0x1009>
  40a658:	lea    r15,[rip+0x6e49]        # 4114a8 <ascii_output@@Base>
  40a65f:	lea    rbx,[rip+0x1af9]        # 40c15f <_IO_stdin_used@@Base+0x15f>
  40a666:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a670:	mov    rcx,QWORD PTR [r15]
  40a673:	mov    esi,0x2
  40a678:	mov    edx,0x1
  40a67d:	mov    rdi,rbx
  40a680:	call   4035a0 <fwrite@plt>
  40a685:	dec    ebp
  40a687:	jg     40a670 <print_yaml_data@@Base+0xff0>
  40a689:	lea    rax,[rsp+0x20]
  40a68e:	mov    QWORD PTR [rsp+0x10],rax
  40a693:	lea    rax,[rsp+0x100]
  40a69b:	mov    QWORD PTR [rsp+0x8],rax
  40a6a0:	movabs rax,0x3000000008
  40a6aa:	mov    QWORD PTR [rsp],rax
  40a6ae:	lea    rax,[rip+0x6df3]        # 4114a8 <ascii_output@@Base>
  40a6b5:	mov    rdi,QWORD PTR [rax]
  40a6b8:	mov    rdx,rsp
  40a6bb:	mov    rsi,r14
  40a6be:	call   403530 <vfprintf@plt>
  40a6c3:	add    rsp,0xd8
  40a6ca:	pop    rbx
  40a6cb:	pop    r14
  40a6cd:	pop    r15
  40a6cf:	pop    rbp
  40a6d0:	ret    
  40a6d1:	lea    rdi,[rip+0x1c52]        # 40c32a <_IO_stdin_used@@Base+0x32a>
  40a6d8:	lea    rsi,[rip+0x252f]        # 40cc0e <_IO_stdin_used@@Base+0xc0e>
  40a6df:	lea    rcx,[rip+0x1c50]        # 40c336 <_IO_stdin_used@@Base+0x336>
  40a6e6:	mov    edx,0x2c
  40a6eb:	call   403240 <__assert_fail@plt>
  40a6f0:	push   rbp
  40a6f1:	push   r15
  40a6f3:	push   r14
  40a6f5:	push   r13
  40a6f7:	push   r12
  40a6f9:	push   rbx
  40a6fa:	push   rax
  40a6fb:	test   rsi,rsi
  40a6fe:	jle    40a7b2 <print_yaml_data@@Base+0x1132>
  40a704:	mov    rbx,rsi
  40a707:	mov    r14,rdi
  40a70a:	lea    r13,[rip+0x2473]        # 40cb84 <_IO_stdin_used@@Base+0xb84>
  40a711:	lea    rbp,[rip+0x19f1]        # 40c109 <_IO_stdin_used@@Base+0x109>
  40a718:	lea    r12,[rip+0x22c1]        # 40c9e0 <_IO_stdin_used@@Base+0x9e0>
  40a71f:	xor    r15d,r15d
  40a722:	jmp    40a73f <print_yaml_data@@Base+0x10bf>
  40a724:	lea    rdi,[rip+0x19cf]        # 40c0fa <_IO_stdin_used@@Base+0xfa>
  40a72b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a730:	xor    eax,eax
  40a732:	call   40a530 <print_yaml_data@@Base+0xeb0>
  40a737:	inc    r15
  40a73a:	cmp    rbx,r15
  40a73d:	je     40a7b2 <print_yaml_data@@Base+0x1132>
  40a73f:	movsx  esi,BYTE PTR [r14+r15*1]
  40a744:	lea    eax,[rsi-0x8]
  40a747:	cmp    eax,0x1a
  40a74a:	ja     40a75f <print_yaml_data@@Base+0x10df>
  40a74c:	movsxd rax,DWORD PTR [r13+rax*4+0x0]
  40a751:	add    rax,r13
  40a754:	jmp    rax
  40a756:	lea    rdi,[rip+0x19a0]        # 40c0fd <_IO_stdin_used@@Base+0xfd>
  40a75d:	jmp    40a730 <print_yaml_data@@Base+0x10b0>
  40a75f:	cmp    esi,0x5c
  40a762:	jne    40a76d <print_yaml_data@@Base+0x10ed>
  40a764:	lea    rdi,[rip+0x19a1]        # 40c10c <_IO_stdin_used@@Base+0x10c>
  40a76b:	jmp    40a730 <print_yaml_data@@Base+0x10b0>
  40a76d:	cmp    sil,0x20
  40a771:	jl     40a79e <print_yaml_data@@Base+0x111e>
  40a773:	cmp    sil,0x7f
  40a777:	je     40a79e <print_yaml_data@@Base+0x111e>
  40a779:	lea    rdi,[rip+0x1bc8]        # 40c348 <_IO_stdin_used@@Base+0x348>
  40a780:	jmp    40a7a9 <print_yaml_data@@Base+0x1129>
  40a782:	lea    rdi,[rip+0x1977]        # 40c100 <_IO_stdin_used@@Base+0x100>
  40a789:	jmp    40a730 <print_yaml_data@@Base+0x10b0>
  40a78b:	lea    rdi,[rip+0x1974]        # 40c106 <_IO_stdin_used@@Base+0x106>
  40a792:	jmp    40a730 <print_yaml_data@@Base+0x10b0>
  40a794:	mov    rdi,rbp
  40a797:	jmp    40a730 <print_yaml_data@@Base+0x10b0>
  40a799:	mov    rdi,r12
  40a79c:	jmp    40a730 <print_yaml_data@@Base+0x10b0>
  40a79e:	movzx  esi,sil
  40a7a2:	lea    rdi,[rip+0x223a]        # 40c9e3 <_IO_stdin_used@@Base+0x9e3>
  40a7a9:	xor    eax,eax
  40a7ab:	call   40a530 <print_yaml_data@@Base+0xeb0>
  40a7b0:	jmp    40a737 <print_yaml_data@@Base+0x10b7>
  40a7b2:	add    rsp,0x8
  40a7b6:	pop    rbx
  40a7b7:	pop    r12
  40a7b9:	pop    r13
  40a7bb:	pop    r14
  40a7bd:	pop    r15
  40a7bf:	pop    rbp
  40a7c0:	ret    
  40a7c1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a7cb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040a7d0 <handle_coda_error@@Base>:
  40a7d0:	push   r14
  40a7d2:	push   rbx
  40a7d3:	push   rax
  40a7d4:	mov    r14,QWORD PTR [rip+0x581d]        # 40fff8 <stderr@GLIBC_2.2.5>
  40a7db:	mov    rbx,QWORD PTR [r14]
  40a7de:	call   4035d0 <coda_get_errno@plt>
  40a7e3:	mov    edi,DWORD PTR [rax]
  40a7e5:	call   403550 <coda_errno_to_string@plt>
  40a7ea:	lea    rsi,[rip+0x2487]        # 40cc78 <_IO_stdin_used@@Base+0xc78>
  40a7f1:	mov    rdi,rbx
  40a7f4:	mov    rdx,rax
  40a7f7:	xor    eax,eax
  40a7f9:	call   403300 <fprintf@plt>
  40a7fe:	mov    rdi,QWORD PTR [r14]
  40a801:	call   403400 <fflush@plt>
  40a806:	mov    edi,0x1
  40a80b:	call   403580 <exit@plt>

000000000040a810 <main@@Base>:
  40a810:	push   rbp
  40a811:	push   r15
  40a813:	push   r14
  40a815:	push   r13
  40a817:	push   r12
  40a819:	push   rbx
  40a81a:	sub    rsp,0x28
  40a81e:	cmp    edi,0x1
  40a821:	je     40b8df <main@@Base+0x10cf>
  40a827:	mov    r14,rsi
  40a82a:	mov    ebp,edi
  40a82c:	mov    rbx,QWORD PTR [rsi+0x8]
  40a830:	lea    rsi,[rip+0x244c]        # 40cc83 <_IO_stdin_used@@Base+0xc83>
  40a837:	mov    rdi,rbx
  40a83a:	call   4032f0 <strcmp@plt>
  40a83f:	test   eax,eax
  40a841:	je     40b8df <main@@Base+0x10cf>
  40a847:	lea    rsi,[rip+0x3242]        # 40da90 <_IO_stdin_used@@Base+0x1a90>
  40a84e:	mov    rdi,rbx
  40a851:	call   4032f0 <strcmp@plt>
  40a856:	test   eax,eax
  40a858:	je     40b8df <main@@Base+0x10cf>
  40a85e:	lea    rsi,[rip+0x2421]        # 40cc86 <_IO_stdin_used@@Base+0xc86>
  40a865:	mov    rdi,rbx
  40a868:	call   4032f0 <strcmp@plt>
  40a86d:	test   eax,eax
  40a86f:	je     40b8eb <main@@Base+0x10db>
  40a875:	lea    rsi,[rip+0x324a]        # 40dac6 <_IO_stdin_used@@Base+0x1ac6>
  40a87c:	mov    rdi,rbx
  40a87f:	call   4032f0 <strcmp@plt>
  40a884:	test   eax,eax
  40a886:	je     40b8eb <main@@Base+0x10db>
  40a88c:	cmp    ebp,0x3
  40a88f:	jl     40a8a8 <main@@Base+0x98>
  40a891:	lea    rsi,[rip+0x23f1]        # 40cc89 <_IO_stdin_used@@Base+0xc89>
  40a898:	mov    rdi,rbx
  40a89b:	call   4032f0 <strcmp@plt>
  40a8a0:	test   eax,eax
  40a8a2:	je     40b2f9 <main@@Base+0xae9>
  40a8a8:	mov    rdi,QWORD PTR [r14]
  40a8ab:	lea    rdx,[rip+0x23da]        # 40cc8c <_IO_stdin_used@@Base+0xc8c>
  40a8b2:	xor    esi,esi
  40a8b4:	call   403140 <coda_set_definition_path_conditional@plt>
  40a8b9:	mov    r15d,0x1
  40a8bf:	test   eax,eax
  40a8c1:	jne    40b8f7 <main@@Base+0x10e7>
  40a8c7:	mov    r12d,r15d
  40a8ca:	mov    rbx,QWORD PTR [r14+r12*8]
  40a8ce:	lea    rsi,[rip+0x23d1]        # 40cca6 <_IO_stdin_used@@Base+0xca6>
  40a8d5:	mov    rdi,rbx
  40a8d8:	call   4032f0 <strcmp@plt>
  40a8dd:	test   eax,eax
  40a8df:	je     40ab96 <main@@Base+0x386>
  40a8e5:	lea    rsi,[rip+0x23bf]        # 40ccab <_IO_stdin_used@@Base+0xcab>
  40a8ec:	mov    rdi,rbx
  40a8ef:	call   4032f0 <strcmp@plt>
  40a8f4:	test   eax,eax
  40a8f6:	je     40aeea <main@@Base+0x6da>
  40a8fc:	lea    rsi,[rip+0x23ae]        # 40ccb1 <_IO_stdin_used@@Base+0xcb1>
  40a903:	mov    rdi,rbx
  40a906:	call   4032f0 <strcmp@plt>
  40a90b:	test   eax,eax
  40a90d:	je     40b3a1 <main@@Base+0xb91>
  40a913:	lea    rsi,[rip+0x239c]        # 40ccb6 <_IO_stdin_used@@Base+0xcb6>
  40a91a:	mov    rdi,rbx
  40a91d:	call   4032f0 <strcmp@plt>
  40a922:	test   eax,eax
  40a924:	je     40b61b <main@@Base+0xe0b>
  40a92a:	lea    rsi,[rip+0x2dd0]        # 40d701 <_IO_stdin_used@@Base+0x1701>
  40a931:	mov    rdi,rbx
  40a934:	call   4032f0 <strcmp@plt>
  40a939:	test   eax,eax
  40a93b:	jne    40b8b0 <main@@Base+0x10a0>
  40a941:	lea    rax,[rip+0x6b7c]        # 4114c4 <run_mode@@Base>
  40a948:	mov    DWORD PTR [rax],0x5
  40a94e:	not    r15d
  40a951:	add    r15d,ebp
  40a954:	lea    rax,[rip+0x5a0d]        # 410368 <traverse_info@@Base>
  40a95b:	mov    QWORD PTR [rax],0x0
  40a962:	lea    rax,[rip+0x59e7]        # 410350 <output_file_name@@Base>
  40a969:	mov    QWORD PTR [rax],0x0
  40a970:	lea    rax,[rip+0x6b51]        # 4114c8 <starting_path@@Base>
  40a977:	mov    QWORD PTR [rax],0x0
  40a97e:	mov    rax,QWORD PTR [rip+0x5653]        # 40ffd8 <stdout@GLIBC_2.2.5>
  40a985:	mov    rax,QWORD PTR [rax]
  40a988:	lea    rcx,[rip+0x6b19]        # 4114a8 <ascii_output@@Base>
  40a98f:	mov    QWORD PTR [rcx],rax
  40a992:	test   r15d,r15d
  40a995:	jle    40b8b0 <main@@Base+0x10a0>
  40a99b:	lea    r14,[r14+r12*8]
  40a99f:	add    r14,0x8
  40a9a3:	lea    eax,[r15-0x1]
  40a9a7:	mov    DWORD PTR [rsp+0xc],eax
  40a9ab:	mov    DWORD PTR [rsp+0x8],0x1
  40a9b3:	xor    ebx,ebx
  40a9b5:	xor    eax,eax
  40a9b7:	mov    QWORD PTR [rsp+0x10],rax
  40a9bc:	xor    eax,eax
  40a9be:	mov    QWORD PTR [rsp+0x18],rax
  40a9c3:	xor    eax,eax
  40a9c5:	mov    QWORD PTR [rsp+0x20],rax
  40a9ca:	jmp    40a9e7 <main@@Base+0x1d7>
  40a9cc:	nop    DWORD PTR [rax+0x0]
  40a9d0:	mov    DWORD PTR [rsp+0x8],0x0
  40a9d8:	mov    ebp,ebx
  40a9da:	inc    ebp
  40a9dc:	mov    ebx,ebp
  40a9de:	cmp    ebp,r15d
  40a9e1:	jge    40b30d <main@@Base+0xafd>
  40a9e7:	movsxd r13,ebx
  40a9ea:	mov    r12,QWORD PTR [r14+r13*8]
  40a9ee:	mov    rdi,r12
  40a9f1:	lea    rsi,[rip+0x22f5]        # 40cced <_IO_stdin_used@@Base+0xced>
  40a9f8:	call   4032f0 <strcmp@plt>
  40a9fd:	test   eax,eax
  40a9ff:	je     40a9d0 <main@@Base+0x1c0>
  40aa01:	mov    rdi,r12
  40aa04:	lea    rsi,[rip+0x2d9b]        # 40d7a6 <_IO_stdin_used@@Base+0x17a6>
  40aa0b:	call   4032f0 <strcmp@plt>
  40aa10:	test   eax,eax
  40aa12:	je     40a9d0 <main@@Base+0x1c0>
  40aa14:	mov    rdi,r12
  40aa17:	lea    rsi,[rip+0x2313]        # 40cd31 <_IO_stdin_used@@Base+0xd31>
  40aa1e:	call   4032f0 <strcmp@plt>
  40aa23:	test   eax,eax
  40aa25:	je     40aa3a <main@@Base+0x22a>
  40aa27:	mov    rdi,r12
  40aa2a:	lea    rsi,[rip+0x2303]        # 40cd34 <_IO_stdin_used@@Base+0xd34>
  40aa31:	call   4032f0 <strcmp@plt>
  40aa36:	test   eax,eax
  40aa38:	jne    40aa60 <main@@Base+0x250>
  40aa3a:	lea    ebp,[rbx+0x1]
  40aa3d:	cmp    ebp,r15d
  40aa40:	jge    40aa60 <main@@Base+0x250>
  40aa42:	movsxd rax,ebp
  40aa45:	mov    rax,QWORD PTR [r14+rax*8]
  40aa49:	cmp    BYTE PTR [rax],0x2d
  40aa4c:	jne    40ab38 <main@@Base+0x328>
  40aa52:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40aa5c:	nop    DWORD PTR [rax+0x0]
  40aa60:	mov    rdi,r12
  40aa63:	lea    rsi,[rip+0x231b]        # 40cd85 <_IO_stdin_used@@Base+0xd85>
  40aa6a:	call   4032f0 <strcmp@plt>
  40aa6f:	test   eax,eax
  40aa71:	je     40aa86 <main@@Base+0x276>
  40aa73:	mov    rdi,r12
  40aa76:	lea    rsi,[rip+0x230b]        # 40cd88 <_IO_stdin_used@@Base+0xd88>
  40aa7d:	call   4032f0 <strcmp@plt>
  40aa82:	test   eax,eax
  40aa84:	jne    40aaa0 <main@@Base+0x290>
  40aa86:	lea    ebp,[rbx+0x1]
  40aa89:	cmp    ebp,r15d
  40aa8c:	jge    40aaa0 <main@@Base+0x290>
  40aa8e:	movsxd rax,ebp
  40aa91:	mov    rax,QWORD PTR [r14+rax*8]
  40aa95:	cmp    BYTE PTR [rax],0x2d
  40aa98:	jne    40ab47 <main@@Base+0x337>
  40aa9e:	xchg   ax,ax
  40aaa0:	mov    rdi,r12
  40aaa3:	lea    rsi,[rip+0x22e5]        # 40cd8f <_IO_stdin_used@@Base+0xd8f>
  40aaaa:	call   4032f0 <strcmp@plt>
  40aaaf:	test   eax,eax
  40aab1:	jne    40aad0 <main@@Base+0x2c0>
  40aab3:	lea    ebp,[rbx+0x1]
  40aab6:	cmp    ebp,r15d
  40aab9:	jge    40aad0 <main@@Base+0x2c0>
  40aabb:	movsxd rax,ebp
  40aabe:	mov    rdi,QWORD PTR [r14+rax*8]
  40aac2:	cmp    BYTE PTR [rdi],0x2d
  40aac5:	jne    40ab56 <main@@Base+0x346>
  40aacb:	nop    DWORD PTR [rax+rax*1+0x0]
  40aad0:	mov    rdi,r12
  40aad3:	lea    rsi,[rip+0x22c1]        # 40cd9b <_IO_stdin_used@@Base+0xd9b>
  40aada:	call   4032f0 <strcmp@plt>
  40aadf:	test   eax,eax
  40aae1:	jne    40ab10 <main@@Base+0x300>
  40aae3:	lea    ebp,[rbx+0x3]
  40aae6:	cmp    ebp,r15d
  40aae9:	jge    40ab10 <main@@Base+0x300>
  40aaeb:	mov    rcx,QWORD PTR [r14+r13*8+0x8]
  40aaf0:	cmp    BYTE PTR [rcx],0x2d
  40aaf3:	je     40ab10 <main@@Base+0x300>
  40aaf5:	mov    r13,QWORD PTR [r14+r13*8+0x10]
  40aafa:	cmp    BYTE PTR [r13+0x0],0x2d
  40aaff:	je     40ab10 <main@@Base+0x300>
  40ab01:	movsxd rax,ebp
  40ab04:	mov    rdi,QWORD PTR [r14+rax*8]
  40ab08:	cmp    BYTE PTR [rdi],0x2d
  40ab0b:	jne    40ab70 <main@@Base+0x360>
  40ab0d:	nop    DWORD PTR [rax]
  40ab10:	cmp    ebx,DWORD PTR [rsp+0xc]
  40ab14:	jne    40b8b0 <main@@Base+0x10a0>
  40ab1a:	cmp    BYTE PTR [r12],0x2d
  40ab1f:	je     40b8b0 <main@@Base+0x10a0>
  40ab25:	lea    rax,[rip+0x583c]        # 410368 <traverse_info@@Base>
  40ab2c:	mov    QWORD PTR [rax],r12
  40ab2f:	mov    ebp,DWORD PTR [rsp+0xc]
  40ab33:	jmp    40a9da <main@@Base+0x1ca>
  40ab38:	lea    rcx,[rip+0x5811]        # 410350 <output_file_name@@Base>
  40ab3f:	mov    QWORD PTR [rcx],rax
  40ab42:	jmp    40a9da <main@@Base+0x1ca>
  40ab47:	lea    rcx,[rip+0x697a]        # 4114c8 <starting_path@@Base>
  40ab4e:	mov    QWORD PTR [rcx],rax
  40ab51:	jmp    40a9da <main@@Base+0x1ca>
  40ab56:	xor    esi,esi
  40ab58:	mov    edx,0xa
  40ab5d:	call   403330 <strtol@plt>
  40ab62:	lea    rcx,[rip+0x57c3]        # 41032c <max_depth@@Base>
  40ab69:	mov    DWORD PTR [rcx],eax
  40ab6b:	jmp    40a9da <main@@Base+0x1ca>
  40ab70:	xor    esi,esi
  40ab72:	mov    edx,0xa
  40ab77:	mov    rbx,rcx
  40ab7a:	call   403330 <strtol@plt>
  40ab7f:	mov    QWORD PTR [rsp+0x10],rax
  40ab84:	mov    rax,rbx
  40ab87:	mov    QWORD PTR [rsp+0x20],rbx
  40ab8c:	mov    QWORD PTR [rsp+0x18],r13
  40ab91:	jmp    40a9da <main@@Base+0x1ca>
  40ab96:	lea    rax,[rip+0x6927]        # 4114c4 <run_mode@@Base>
  40ab9d:	mov    DWORD PTR [rax],0x0
  40aba3:	not    r15d
  40aba6:	add    r15d,ebp
  40aba9:	lea    rax,[rip+0x57b8]        # 410368 <traverse_info@@Base>
  40abb0:	mov    QWORD PTR [rax],0x0
  40abb7:	mov    QWORD PTR [rax+0x428],0x0
  40abc2:	lea    rax,[rip+0x577f]        # 410348 <verbosity@@Base>
  40abc9:	mov    DWORD PTR [rax],0x1
  40abcf:	lea    rbx,[rip+0x578a]        # 410360 <calc_dim@@Base>
  40abd6:	mov    DWORD PTR [rbx],0x0
  40abdc:	lea    rax,[rip+0x5769]        # 41034c <show_dim_vals@@Base>
  40abe3:	mov    DWORD PTR [rax],0x0
  40abe9:	lea    rax,[rip+0x68c8]        # 4114b8 <show_type@@Base>
  40abf0:	mov    DWORD PTR [rax],0x0
  40abf6:	lea    rax,[rip+0x575f]        # 41035c <show_unit@@Base>
  40abfd:	mov    DWORD PTR [rax],0x0
  40ac03:	lea    rax,[rip+0x68b2]        # 4114bc <show_description@@Base>
  40ac0a:	mov    DWORD PTR [rax],0x0
  40ac10:	test   r15d,r15d
  40ac13:	jle    40b8b0 <main@@Base+0x10a0>
  40ac19:	lea    r14,[r14+r12*8]
  40ac1d:	add    r14,0x8
  40ac21:	lea    eax,[r15-0x1]
  40ac25:	mov    DWORD PTR [rsp+0x10],eax
  40ac29:	mov    DWORD PTR [rsp+0x8],0x1
  40ac31:	xor    r12d,r12d
  40ac34:	lea    rbp,[rip+0x20af]        # 40ccea <_IO_stdin_used@@Base+0xcea>
  40ac3b:	mov    DWORD PTR [rsp+0xc],0x1
  40ac43:	jmp    40ac62 <main@@Base+0x452>
  40ac45:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ac4f:	nop
  40ac50:	mov    DWORD PTR [rbx],0x1
  40ac56:	inc    r12d
  40ac59:	cmp    r12d,r15d
  40ac5c:	jge    40ae87 <main@@Base+0x677>
  40ac62:	movsxd rax,r12d
  40ac65:	mov    r13,QWORD PTR [r14+rax*8]
  40ac69:	mov    rdi,r13
  40ac6c:	mov    rsi,rbp
  40ac6f:	call   4032f0 <strcmp@plt>
  40ac74:	test   eax,eax
  40ac76:	je     40ac50 <main@@Base+0x440>
  40ac78:	mov    rdi,r13
  40ac7b:	lea    rsi,[rip+0x21ac]        # 40ce2e <_IO_stdin_used@@Base+0xe2e>
  40ac82:	call   4032f0 <strcmp@plt>
  40ac87:	test   eax,eax
  40ac89:	je     40ac50 <main@@Base+0x440>
  40ac8b:	mov    rdi,r13
  40ac8e:	lea    rsi,[rip+0x2058]        # 40cced <_IO_stdin_used@@Base+0xced>
  40ac95:	call   4032f0 <strcmp@plt>
  40ac9a:	test   eax,eax
  40ac9c:	je     40ade0 <main@@Base+0x5d0>
  40aca2:	mov    rdi,r13
  40aca5:	lea    rsi,[rip+0x289e]        # 40d54a <_IO_stdin_used@@Base+0x154a>
  40acac:	call   4032f0 <strcmp@plt>
  40acb1:	test   eax,eax
  40acb3:	je     40ade0 <main@@Base+0x5d0>
  40acb9:	mov    rbp,rbx
  40acbc:	mov    rdi,r13
  40acbf:	lea    rsi,[rip+0x202a]        # 40ccf0 <_IO_stdin_used@@Base+0xcf0>
  40acc6:	call   4032f0 <strcmp@plt>
  40accb:	test   eax,eax
  40accd:	je     40ace2 <main@@Base+0x4d2>
  40accf:	mov    rdi,r13
  40acd2:	lea    rsi,[rip+0x201a]        # 40ccf3 <_IO_stdin_used@@Base+0xcf3>
  40acd9:	call   4032f0 <strcmp@plt>
  40acde:	test   eax,eax
  40ace0:	jne    40acfc <main@@Base+0x4ec>
  40ace2:	lea    ebx,[r12+0x1]
  40ace7:	cmp    ebx,r15d
  40acea:	jge    40acfc <main@@Base+0x4ec>
  40acec:	movsxd rax,ebx
  40acef:	mov    rdi,QWORD PTR [r14+rax*8]
  40acf3:	cmp    BYTE PTR [rdi],0x2d
  40acf6:	jne    40ae22 <main@@Base+0x612>
  40acfc:	mov    rdi,r13
  40acff:	lea    rsi,[rip+0x201f]        # 40cd25 <_IO_stdin_used@@Base+0xd25>
  40ad06:	call   4032f0 <strcmp@plt>
  40ad0b:	test   eax,eax
  40ad0d:	je     40aded <main@@Base+0x5dd>
  40ad13:	mov    rdi,r13
  40ad16:	lea    rsi,[rip+0x2163]        # 40ce80 <_IO_stdin_used@@Base+0xe80>
  40ad1d:	call   4032f0 <strcmp@plt>
  40ad22:	test   eax,eax
  40ad24:	je     40aded <main@@Base+0x5dd>
  40ad2a:	mov    rdi,r13
  40ad2d:	lea    rsi,[rip+0x1ff4]        # 40cd28 <_IO_stdin_used@@Base+0xd28>
  40ad34:	call   4032f0 <strcmp@plt>
  40ad39:	test   eax,eax
  40ad3b:	mov    rbx,rbp
  40ad3e:	je     40ae09 <main@@Base+0x5f9>
  40ad44:	mov    rdi,r13
  40ad47:	lea    rsi,[rip+0x2172]        # 40cec0 <_IO_stdin_used@@Base+0xec0>
  40ad4e:	call   4032f0 <strcmp@plt>
  40ad53:	test   eax,eax
  40ad55:	je     40ae09 <main@@Base+0x5f9>
  40ad5b:	mov    rdi,r13
  40ad5e:	lea    rsi,[rip+0x2198]        # 40cefd <_IO_stdin_used@@Base+0xefd>
  40ad65:	call   4032f0 <strcmp@plt>
  40ad6a:	test   eax,eax
  40ad6c:	lea    rbp,[rip+0x1f77]        # 40ccea <_IO_stdin_used@@Base+0xcea>
  40ad73:	je     40ae50 <main@@Base+0x640>
  40ad79:	mov    rdi,r13
  40ad7c:	lea    rsi,[rip+0x21c5]        # 40cf48 <_IO_stdin_used@@Base+0xf48>
  40ad83:	call   4032f0 <strcmp@plt>
  40ad88:	test   eax,eax
  40ad8a:	je     40ae62 <main@@Base+0x652>
  40ad90:	mov    rdi,r13
  40ad93:	lea    rsi,[rip+0x280c]        # 40d5a6 <_IO_stdin_used@@Base+0x15a6>
  40ad9a:	call   4032f0 <strcmp@plt>
  40ad9f:	test   eax,eax
  40ada1:	je     40ae7a <main@@Base+0x66a>
  40ada7:	cmp    r12d,DWORD PTR [rsp+0x10]
  40adac:	jne    40b8b0 <main@@Base+0x10a0>
  40adb2:	cmp    BYTE PTR [r13+0x0],0x2d
  40adb7:	je     40b8b0 <main@@Base+0x10a0>
  40adbd:	lea    rax,[rip+0x55a4]        # 410368 <traverse_info@@Base>
  40adc4:	mov    QWORD PTR [rax],r13
  40adc7:	mov    eax,DWORD PTR [rsp+0x10]
  40adcb:	mov    r12d,eax
  40adce:	jmp    40ac56 <main@@Base+0x446>
  40add3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40addd:	nop    DWORD PTR [rax]
  40ade0:	mov    DWORD PTR [rsp+0x8],0x0
  40ade8:	jmp    40ac56 <main@@Base+0x446>
  40aded:	lea    rax,[rip+0x66c4]        # 4114b8 <show_type@@Base>
  40adf4:	mov    DWORD PTR [rax],0x1
  40adfa:	mov    rbx,rbp
  40adfd:	lea    rbp,[rip+0x1ee6]        # 40ccea <_IO_stdin_used@@Base+0xcea>
  40ae04:	jmp    40ac56 <main@@Base+0x446>
  40ae09:	lea    rax,[rip+0x554c]        # 41035c <show_unit@@Base>
  40ae10:	mov    DWORD PTR [rax],0x1
  40ae16:	lea    rbp,[rip+0x1ecd]        # 40ccea <_IO_stdin_used@@Base+0xcea>
  40ae1d:	jmp    40ac56 <main@@Base+0x446>
  40ae22:	call   407730 <codadump_filter_create@@Base>
  40ae27:	lea    rcx,[rip+0x553a]        # 410368 <traverse_info@@Base>
  40ae2e:	mov    QWORD PTR [rcx+0x428],rax
  40ae35:	mov    r12d,ebx
  40ae38:	test   rax,rax
  40ae3b:	mov    rbx,rbp
  40ae3e:	lea    rbp,[rip+0x1ea5]        # 40ccea <_IO_stdin_used@@Base+0xcea>
  40ae45:	jne    40ac56 <main@@Base+0x446>
  40ae4b:	jmp    40b92b <main@@Base+0x111b>
  40ae50:	lea    rax,[rip+0x6665]        # 4114bc <show_description@@Base>
  40ae57:	mov    DWORD PTR [rax],0x1
  40ae5d:	jmp    40ac56 <main@@Base+0x446>
  40ae62:	mov    DWORD PTR [rbx],0x1
  40ae68:	lea    rax,[rip+0x54dd]        # 41034c <show_dim_vals@@Base>
  40ae6f:	mov    DWORD PTR [rax],0x1
  40ae75:	jmp    40ac56 <main@@Base+0x446>
  40ae7a:	mov    DWORD PTR [rsp+0xc],0x0
  40ae82:	jmp    40ac56 <main@@Base+0x446>
  40ae87:	lea    rax,[rip+0x54da]        # 410368 <traverse_info@@Base>
  40ae8e:	mov    rax,QWORD PTR [rax]
  40ae91:	test   rax,rax
  40ae94:	je     40b8b0 <main@@Base+0x10a0>
  40ae9a:	cmp    BYTE PTR [rax],0x0
  40ae9d:	je     40b8b0 <main@@Base+0x10a0>
  40aea3:	call   4033d0 <coda_init@plt>
  40aea8:	test   eax,eax
  40aeaa:	jne    40b8f7 <main@@Base+0x10e7>
  40aeb0:	xor    edi,edi
  40aeb2:	cmp    DWORD PTR [rsp+0xc],0x0
  40aeb7:	sete   dil
  40aebb:	call   403160 <coda_set_option_bypass_special_types@plt>
  40aec0:	xor    edi,edi
  40aec2:	call   403090 <coda_set_option_perform_boundary_checks@plt>
  40aec7:	mov    edi,DWORD PTR [rsp+0x8]
  40aecb:	call   4033e0 <coda_set_option_perform_conversions@plt>
  40aed0:	xor    eax,eax
  40aed2:	call   408ee0 <traverse_info_init@@Base>
  40aed7:	xor    eax,eax
  40aed9:	call   4056d0 <dim_info_init@@Base>
  40aede:	xor    eax,eax
  40aee0:	call   408f50 <traverse_product@@Base>
  40aee5:	jmp    40b2e6 <main@@Base+0xad6>
  40aeea:	lea    rax,[rip+0x65d3]        # 4114c4 <run_mode@@Base>
  40aef1:	mov    DWORD PTR [rax],0x1
  40aef7:	not    r15d
  40aefa:	add    r15d,ebp
  40aefd:	lea    rax,[rip+0x5464]        # 410368 <traverse_info@@Base>
  40af04:	mov    QWORD PTR [rax],0x0
  40af0b:	mov    QWORD PTR [rax+0x428],0x0
  40af16:	lea    rax,[rip+0x5433]        # 410350 <output_file_name@@Base>
  40af1d:	mov    QWORD PTR [rax],0x0
  40af24:	lea    rax,[rip+0x1235]        # 40c160 <_IO_stdin_used@@Base+0x160>
  40af2b:	lea    rcx,[rip+0x657e]        # 4114b0 <ascii_col_sep@@Base>
  40af32:	mov    QWORD PTR [rcx],rax
  40af35:	mov    rax,QWORD PTR [rip+0x509c]        # 40ffd8 <stdout@GLIBC_2.2.5>
  40af3c:	mov    rax,QWORD PTR [rax]
  40af3f:	lea    rcx,[rip+0x6562]        # 4114a8 <ascii_output@@Base>
  40af46:	mov    QWORD PTR [rcx],rax
  40af49:	lea    rax,[rip+0x53f8]        # 410348 <verbosity@@Base>
  40af50:	mov    DWORD PTR [rax],0x1
  40af56:	lea    rax,[rip+0x5403]        # 410360 <calc_dim@@Base>
  40af5d:	mov    DWORD PTR [rax],0x1
  40af63:	lea    rax,[rip+0x6556]        # 4114c0 <show_index@@Base>
  40af6a:	mov    DWORD PTR [rax],0x0
  40af70:	lea    rax,[rip+0x66e9]        # 411660 <show_label@@Base>
  40af77:	mov    DWORD PTR [rax],0x0
  40af7d:	lea    rax,[rip+0x66e0]        # 411664 <show_quotes@@Base>
  40af84:	mov    DWORD PTR [rax],0x0
  40af8a:	lea    rax,[rip+0x53c7]        # 410358 <show_time_as_string@@Base>
  40af91:	mov    DWORD PTR [rax],0x0
  40af97:	test   r15d,r15d
  40af9a:	jle    40b8b0 <main@@Base+0x10a0>
  40afa0:	lea    r12,[r14+r12*8]
  40afa4:	add    r12,0x8
  40afa8:	lea    eax,[r15-0x1]
  40afac:	mov    DWORD PTR [rsp+0xc],eax
  40afb0:	mov    ebx,0x1
  40afb5:	xor    r13d,r13d
  40afb8:	mov    DWORD PTR [rsp+0x8],0x1
  40afc0:	movsxd rax,r13d
  40afc3:	mov    rbp,QWORD PTR [r12+rax*8]
  40afc7:	mov    rdi,rbp
  40afca:	lea    rsi,[rip+0x1d1c]        # 40cced <_IO_stdin_used@@Base+0xced>
  40afd1:	call   4032f0 <strcmp@plt>
  40afd6:	test   eax,eax
  40afd8:	je     40b1c0 <main@@Base+0x9b0>
  40afde:	mov    rdi,rbp
  40afe1:	lea    rsi,[rip+0x2562]        # 40d54a <_IO_stdin_used@@Base+0x154a>
  40afe8:	call   4032f0 <strcmp@plt>
  40afed:	test   eax,eax
  40afef:	je     40b1c0 <main@@Base+0x9b0>
  40aff5:	mov    rdi,rbp
  40aff8:	lea    rsi,[rip+0x1cf1]        # 40ccf0 <_IO_stdin_used@@Base+0xcf0>
  40afff:	call   4032f0 <strcmp@plt>
  40b004:	test   eax,eax
  40b006:	je     40b01b <main@@Base+0x80b>
  40b008:	mov    rdi,rbp
  40b00b:	lea    rsi,[rip+0x1ce1]        # 40ccf3 <_IO_stdin_used@@Base+0xcf3>
  40b012:	call   4032f0 <strcmp@plt>
  40b017:	test   eax,eax
  40b019:	jne    40b040 <main@@Base+0x830>
  40b01b:	lea    r14d,[r13+0x1]
  40b01f:	cmp    r14d,r15d
  40b022:	jge    40b040 <main@@Base+0x830>
  40b024:	movsxd rax,r14d
  40b027:	mov    rdi,QWORD PTR [r12+rax*8]
  40b02b:	cmp    BYTE PTR [rdi],0x2d
  40b02e:	jne    40b1e2 <main@@Base+0x9d2>
  40b034:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b03e:	xchg   ax,ax
  40b040:	mov    rdi,rbp
  40b043:	lea    rsi,[rip+0x1ce1]        # 40cd2b <_IO_stdin_used@@Base+0xd2b>
  40b04a:	call   4032f0 <strcmp@plt>
  40b04f:	test   eax,eax
  40b051:	je     40b1d0 <main@@Base+0x9c0>
  40b057:	mov    rdi,rbp
  40b05a:	lea    rsi,[rip+0x2084]        # 40d0e5 <_IO_stdin_used@@Base+0x10e5>
  40b061:	call   4032f0 <strcmp@plt>
  40b066:	test   eax,eax
  40b068:	je     40b1d0 <main@@Base+0x9c0>
  40b06e:	mov    rdi,rbp
  40b071:	lea    rsi,[rip+0x1cb6]        # 40cd2e <_IO_stdin_used@@Base+0xd2e>
  40b078:	call   4032f0 <strcmp@plt>
  40b07d:	test   eax,eax
  40b07f:	je     40b1d9 <main@@Base+0x9c9>
  40b085:	mov    rdi,rbp
  40b088:	lea    rsi,[rip+0x20af]        # 40d13e <_IO_stdin_used@@Base+0x113e>
  40b08f:	call   4032f0 <strcmp@plt>
  40b094:	test   eax,eax
  40b096:	je     40b1d9 <main@@Base+0x9c9>
  40b09c:	mov    rdi,rbp
  40b09f:	lea    rsi,[rip+0x1c8b]        # 40cd31 <_IO_stdin_used@@Base+0xd31>
  40b0a6:	call   4032f0 <strcmp@plt>
  40b0ab:	test   eax,eax
  40b0ad:	je     40b0c2 <main@@Base+0x8b2>
  40b0af:	mov    rdi,rbp
  40b0b2:	lea    rsi,[rip+0x1c7b]        # 40cd34 <_IO_stdin_used@@Base+0xd34>
  40b0b9:	call   4032f0 <strcmp@plt>
  40b0be:	test   eax,eax
  40b0c0:	jne    40b0db <main@@Base+0x8cb>
  40b0c2:	lea    r14d,[r13+0x1]
  40b0c6:	cmp    r14d,r15d
  40b0c9:	jge    40b0db <main@@Base+0x8cb>
  40b0cb:	movsxd rax,r14d
  40b0ce:	mov    rax,QWORD PTR [r12+rax*8]
  40b0d2:	cmp    BYTE PTR [rax],0x2d
  40b0d5:	jne    40b22a <main@@Base+0xa1a>
  40b0db:	mov    rdi,rbp
  40b0de:	lea    rsi,[rip+0x1c58]        # 40cd3d <_IO_stdin_used@@Base+0xd3d>
  40b0e5:	call   4032f0 <strcmp@plt>
  40b0ea:	test   eax,eax
  40b0ec:	je     40b1ff <main@@Base+0x9ef>
  40b0f2:	mov    rdi,rbp
  40b0f5:	lea    rsi,[rip+0x20a5]        # 40d1a1 <_IO_stdin_used@@Base+0x11a1>
  40b0fc:	call   4032f0 <strcmp@plt>
  40b101:	test   eax,eax
  40b103:	je     40b1ff <main@@Base+0x9ef>
  40b109:	mov    rdi,rbp
  40b10c:	lea    rsi,[rip+0x1c2d]        # 40cd40 <_IO_stdin_used@@Base+0xd40>
  40b113:	call   4032f0 <strcmp@plt>
  40b118:	test   eax,eax
  40b11a:	je     40b12f <main@@Base+0x91f>
  40b11c:	mov    rdi,rbp
  40b11f:	lea    rsi,[rip+0x1c1d]        # 40cd43 <_IO_stdin_used@@Base+0xd43>
  40b126:	call   4032f0 <strcmp@plt>
  40b12b:	test   eax,eax
  40b12d:	jne    40b148 <main@@Base+0x938>
  40b12f:	lea    r14d,[r13+0x1]
  40b133:	cmp    r14d,r15d
  40b136:	jge    40b148 <main@@Base+0x938>
  40b138:	movsxd rax,r14d
  40b13b:	mov    rax,QWORD PTR [r12+rax*8]
  40b13f:	cmp    BYTE PTR [rax],0x2d
  40b142:	jne    40b236 <main@@Base+0xa26>
  40b148:	mov    rdi,rbp
  40b14b:	lea    rsi,[rip+0x1bd3]        # 40cd25 <_IO_stdin_used@@Base+0xd25>
  40b152:	call   4032f0 <strcmp@plt>
  40b157:	test   eax,eax
  40b159:	je     40b208 <main@@Base+0x9f8>
  40b15f:	mov    rdi,rbp
  40b162:	lea    rsi,[rip+0x2127]        # 40d290 <_IO_stdin_used@@Base+0x1290>
  40b169:	call   4032f0 <strcmp@plt>
  40b16e:	test   eax,eax
  40b170:	je     40b208 <main@@Base+0x9f8>
  40b176:	mov    rdi,rbp
  40b179:	lea    rsi,[rip+0x2426]        # 40d5a6 <_IO_stdin_used@@Base+0x15a6>
  40b180:	call   4032f0 <strcmp@plt>
  40b185:	test   eax,eax
  40b187:	je     40b242 <main@@Base+0xa32>
  40b18d:	cmp    r13d,DWORD PTR [rsp+0xc]
  40b192:	jne    40b8b0 <main@@Base+0x10a0>
  40b198:	cmp    BYTE PTR [rbp+0x0],0x2d
  40b19c:	je     40b8b0 <main@@Base+0x10a0>
  40b1a2:	lea    rax,[rip+0x51bf]        # 410368 <traverse_info@@Base>
  40b1a9:	mov    QWORD PTR [rax],rbp
  40b1ac:	mov    r14d,DWORD PTR [rsp+0xc]
  40b1b1:	jmp    40b219 <main@@Base+0xa09>
  40b1b3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b1bd:	nop    DWORD PTR [rax]
  40b1c0:	xor    ebx,ebx
  40b1c2:	jmp    40b216 <main@@Base+0xa06>
  40b1c4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b1ce:	xchg   ax,ax
  40b1d0:	lea    rax,[rip+0x62e9]        # 4114c0 <show_index@@Base>
  40b1d7:	jmp    40b210 <main@@Base+0xa00>
  40b1d9:	lea    rax,[rip+0x6480]        # 411660 <show_label@@Base>
  40b1e0:	jmp    40b210 <main@@Base+0xa00>
  40b1e2:	call   407730 <codadump_filter_create@@Base>
  40b1e7:	lea    rcx,[rip+0x517a]        # 410368 <traverse_info@@Base>
  40b1ee:	mov    QWORD PTR [rcx+0x428],rax
  40b1f5:	test   rax,rax
  40b1f8:	jne    40b219 <main@@Base+0xa09>
  40b1fa:	jmp    40b92b <main@@Base+0x111b>
  40b1ff:	lea    rax,[rip+0x645e]        # 411664 <show_quotes@@Base>
  40b206:	jmp    40b210 <main@@Base+0xa00>
  40b208:	lea    rax,[rip+0x5149]        # 410358 <show_time_as_string@@Base>
  40b20f:	nop
  40b210:	mov    DWORD PTR [rax],0x1
  40b216:	mov    r14d,r13d
  40b219:	inc    r14d
  40b21c:	mov    r13d,r14d
  40b21f:	cmp    r14d,r15d
  40b222:	jl     40afc0 <main@@Base+0x7b0>
  40b228:	jmp    40b24c <main@@Base+0xa3c>
  40b22a:	lea    rcx,[rip+0x511f]        # 410350 <output_file_name@@Base>
  40b231:	mov    QWORD PTR [rcx],rax
  40b234:	jmp    40b219 <main@@Base+0xa09>
  40b236:	lea    rcx,[rip+0x6273]        # 4114b0 <ascii_col_sep@@Base>
  40b23d:	mov    QWORD PTR [rcx],rax
  40b240:	jmp    40b219 <main@@Base+0xa09>
  40b242:	mov    DWORD PTR [rsp+0x8],0x0
  40b24a:	jmp    40b216 <main@@Base+0xa06>
  40b24c:	lea    rax,[rip+0x5115]        # 410368 <traverse_info@@Base>
  40b253:	mov    rax,QWORD PTR [rax]
  40b256:	test   rax,rax
  40b259:	je     40b8b0 <main@@Base+0x10a0>
  40b25f:	cmp    BYTE PTR [rax],0x0
  40b262:	je     40b8b0 <main@@Base+0x10a0>
  40b268:	call   4033d0 <coda_init@plt>
  40b26d:	test   eax,eax
  40b26f:	jne    40b8f7 <main@@Base+0x10e7>
  40b275:	xor    edi,edi
  40b277:	cmp    DWORD PTR [rsp+0x8],0x0
  40b27c:	sete   dil
  40b280:	call   403160 <coda_set_option_bypass_special_types@plt>
  40b285:	xor    edi,edi
  40b287:	call   403090 <coda_set_option_perform_boundary_checks@plt>
  40b28c:	mov    edi,ebx
  40b28e:	call   4033e0 <coda_set_option_perform_conversions@plt>
  40b293:	xor    eax,eax
  40b295:	call   408ee0 <traverse_info_init@@Base>
  40b29a:	xor    eax,eax
  40b29c:	call   4056d0 <dim_info_init@@Base>
  40b2a1:	lea    rbx,[rip+0x50a8]        # 410350 <output_file_name@@Base>
  40b2a8:	mov    rdi,QWORD PTR [rbx]
  40b2ab:	test   rdi,rdi
  40b2ae:	lea    rbp,[rip+0x61f3]        # 4114a8 <ascii_output@@Base>
  40b2b5:	je     40b2d0 <main@@Base+0xac0>
  40b2b7:	lea    rsi,[rip+0x1a98]        # 40cd56 <_IO_stdin_used@@Base+0xd56>
  40b2be:	call   403510 <fopen@plt>
  40b2c3:	mov    QWORD PTR [rbp+0x0],rax
  40b2c7:	test   rax,rax
  40b2ca:	je     40b943 <main@@Base+0x1133>
  40b2d0:	xor    eax,eax
  40b2d2:	call   408f50 <traverse_product@@Base>
  40b2d7:	cmp    QWORD PTR [rbx],0x0
  40b2db:	je     40b2e6 <main@@Base+0xad6>
  40b2dd:	mov    rdi,QWORD PTR [rbp+0x0]
  40b2e1:	call   4031c0 <fclose@plt>
  40b2e6:	xor    eax,eax
  40b2e8:	call   4056f0 <dim_info_done@@Base>
  40b2ed:	xor    eax,eax
  40b2ef:	call   408f10 <traverse_info_done@@Base>
  40b2f4:	jmp    40b89a <main@@Base+0x108a>
  40b2f9:	mov    rdi,QWORD PTR [r14+0x10]
  40b2fd:	call   4031f0 <coda_set_definition_path@plt>
  40b302:	mov    r15d,0x3
  40b308:	jmp    40a8c7 <main@@Base+0xb7>
  40b30d:	lea    rax,[rip+0x5054]        # 410368 <traverse_info@@Base>
  40b314:	mov    rax,QWORD PTR [rax]
  40b317:	test   rax,rax
  40b31a:	je     40b8b0 <main@@Base+0x10a0>
  40b320:	cmp    BYTE PTR [rax],0x0
  40b323:	je     40b8b0 <main@@Base+0x10a0>
  40b329:	call   4033d0 <coda_init@plt>
  40b32e:	test   eax,eax
  40b330:	jne    40b8f7 <main@@Base+0x10e7>
  40b336:	xor    edi,edi
  40b338:	call   4033e0 <coda_set_option_perform_conversions@plt>
  40b33d:	mov    edi,DWORD PTR [rsp+0x8]
  40b341:	call   403050 <coda_set_option_use_fast_size_expressions@plt>
  40b346:	lea    rax,[rip+0x5003]        # 410350 <output_file_name@@Base>
  40b34d:	mov    rdi,QWORD PTR [rax]
  40b350:	test   rdi,rdi
  40b353:	lea    rbx,[rip+0x614e]        # 4114a8 <ascii_output@@Base>
  40b35a:	je     40b374 <main@@Base+0xb64>
  40b35c:	lea    rsi,[rip+0x19f3]        # 40cd56 <_IO_stdin_used@@Base+0xd56>
  40b363:	call   403510 <fopen@plt>
  40b368:	mov    QWORD PTR [rbx],rax
  40b36b:	test   rax,rax
  40b36e:	je     40b962 <main@@Base+0x1152>
  40b374:	mov    rdi,QWORD PTR [rsp+0x20]
  40b379:	mov    rsi,QWORD PTR [rsp+0x18]
  40b37e:	mov    rdx,QWORD PTR [rsp+0x10]
  40b383:	call   4042b0 <print_debug_data@@Base>
  40b388:	lea    rax,[rip+0x4fc1]        # 410350 <output_file_name@@Base>
  40b38f:	cmp    QWORD PTR [rax],0x0
  40b393:	je     40b89a <main@@Base+0x108a>
  40b399:	mov    rdi,QWORD PTR [rbx]
  40b39c:	jmp    40b895 <main@@Base+0x1085>
  40b3a1:	lea    rax,[rip+0x611c]        # 4114c4 <run_mode@@Base>
  40b3a8:	mov    DWORD PTR [rax],0x3
  40b3ae:	not    r15d
  40b3b1:	add    r15d,ebp
  40b3b4:	lea    rax,[rip+0x4fad]        # 410368 <traverse_info@@Base>
  40b3bb:	mov    QWORD PTR [rax],0x0
  40b3c2:	lea    rax,[rip+0x4f87]        # 410350 <output_file_name@@Base>
  40b3c9:	mov    QWORD PTR [rax],0x0
  40b3d0:	lea    rax,[rip+0x60f1]        # 4114c8 <starting_path@@Base>
  40b3d7:	mov    QWORD PTR [rax],0x0
  40b3de:	mov    rax,QWORD PTR [rip+0x4bf3]        # 40ffd8 <stdout@GLIBC_2.2.5>
  40b3e5:	mov    rax,QWORD PTR [rax]
  40b3e8:	lea    rcx,[rip+0x60b9]        # 4114a8 <ascii_output@@Base>
  40b3ef:	mov    QWORD PTR [rcx],rax
  40b3f2:	test   r15d,r15d
  40b3f5:	jle    40b8b0 <main@@Base+0x10a0>
  40b3fb:	lea    r14,[r14+r12*8]
  40b3ff:	add    r14,0x8
  40b403:	lea    eax,[r15-0x1]
  40b407:	mov    DWORD PTR [rsp+0xc],eax
  40b40b:	mov    DWORD PTR [rsp+0x8],0x1
  40b413:	xor    eax,eax
  40b415:	mov    QWORD PTR [rsp+0x10],rax
  40b41a:	lea    rbp,[rip+0x1961]        # 40cd82 <_IO_stdin_used@@Base+0xd82>
  40b421:	xor    r12d,r12d
  40b424:	xor    ebx,ebx
  40b426:	mov    DWORD PTR [rsp+0x18],0x1
  40b42e:	jmp    40b446 <main@@Base+0xc36>
  40b430:	mov    ebx,0x1
  40b435:	mov    eax,r12d
  40b438:	inc    eax
  40b43a:	mov    r12d,eax
  40b43d:	cmp    eax,r15d
  40b440:	jge    40b598 <main@@Base+0xd88>
  40b446:	movsxd rax,r12d
  40b449:	mov    r13,QWORD PTR [r14+rax*8]
  40b44d:	mov    rdi,r13
  40b450:	mov    rsi,rbp
  40b453:	call   4032f0 <strcmp@plt>
  40b458:	test   eax,eax
  40b45a:	je     40b430 <main@@Base+0xc20>
  40b45c:	mov    rdi,r13
  40b45f:	lea    rsi,[rip+0x2015]        # 40d47b <_IO_stdin_used@@Base+0x147b>
  40b466:	call   4032f0 <strcmp@plt>
  40b46b:	test   eax,eax
  40b46d:	je     40b430 <main@@Base+0xc20>
  40b46f:	mov    rdi,r13
  40b472:	lea    rsi,[rip+0x1874]        # 40cced <_IO_stdin_used@@Base+0xced>
  40b479:	call   4032f0 <strcmp@plt>
  40b47e:	test   eax,eax
  40b480:	je     40b560 <main@@Base+0xd50>
  40b486:	mov    rdi,r13
  40b489:	lea    rsi,[rip+0x20ba]        # 40d54a <_IO_stdin_used@@Base+0x154a>
  40b490:	call   4032f0 <strcmp@plt>
  40b495:	test   eax,eax
  40b497:	je     40b560 <main@@Base+0xd50>
  40b49d:	mov    rdi,r13
  40b4a0:	lea    rsi,[rip+0x188a]        # 40cd31 <_IO_stdin_used@@Base+0xd31>
  40b4a7:	call   4032f0 <strcmp@plt>
  40b4ac:	test   eax,eax
  40b4ae:	je     40b4c3 <main@@Base+0xcb3>
  40b4b0:	mov    rdi,r13
  40b4b3:	lea    rsi,[rip+0x187a]        # 40cd34 <_IO_stdin_used@@Base+0xd34>
  40b4ba:	call   4032f0 <strcmp@plt>
  40b4bf:	test   eax,eax
  40b4c1:	jne    40b4dd <main@@Base+0xccd>
  40b4c3:	lea    eax,[r12+0x1]
  40b4c8:	cmp    eax,r15d
  40b4cb:	jge    40b4dd <main@@Base+0xccd>
  40b4cd:	movsxd rcx,eax
  40b4d0:	mov    rcx,QWORD PTR [r14+rcx*8]
  40b4d4:	cmp    BYTE PTR [rcx],0x2d
  40b4d7:	jne    40b57a <main@@Base+0xd6a>
  40b4dd:	mov    rdi,r13
  40b4e0:	lea    rsi,[rip+0x189e]        # 40cd85 <_IO_stdin_used@@Base+0xd85>
  40b4e7:	call   4032f0 <strcmp@plt>
  40b4ec:	test   eax,eax
  40b4ee:	je     40b503 <main@@Base+0xcf3>
  40b4f0:	mov    rdi,r13
  40b4f3:	lea    rsi,[rip+0x188e]        # 40cd88 <_IO_stdin_used@@Base+0xd88>
  40b4fa:	call   4032f0 <strcmp@plt>
  40b4ff:	test   eax,eax
  40b501:	jne    40b519 <main@@Base+0xd09>
  40b503:	lea    eax,[r12+0x1]
  40b508:	cmp    eax,r15d
  40b50b:	jge    40b519 <main@@Base+0xd09>
  40b50d:	movsxd rcx,eax
  40b510:	mov    rcx,QWORD PTR [r14+rcx*8]
  40b514:	cmp    BYTE PTR [rcx],0x2d
  40b517:	jne    40b589 <main@@Base+0xd79>
  40b519:	mov    rdi,r13
  40b51c:	lea    rsi,[rip+0x2083]        # 40d5a6 <_IO_stdin_used@@Base+0x15a6>
  40b523:	call   4032f0 <strcmp@plt>
  40b528:	test   eax,eax
  40b52a:	je     40b56d <main@@Base+0xd5d>
  40b52c:	cmp    r12d,DWORD PTR [rsp+0xc]
  40b531:	jne    40b8b0 <main@@Base+0x10a0>
  40b537:	cmp    BYTE PTR [r13+0x0],0x2d
  40b53c:	je     40b8b0 <main@@Base+0x10a0>
  40b542:	lea    rax,[rip+0x4e1f]        # 410368 <traverse_info@@Base>
  40b549:	mov    QWORD PTR [rax],r13
  40b54c:	mov    QWORD PTR [rsp+0x10],r13
  40b551:	mov    eax,DWORD PTR [rsp+0xc]
  40b555:	jmp    40b438 <main@@Base+0xc28>
  40b55a:	nop    WORD PTR [rax+rax*1+0x0]
  40b560:	mov    DWORD PTR [rsp+0x8],0x0
  40b568:	jmp    40b435 <main@@Base+0xc25>
  40b56d:	mov    DWORD PTR [rsp+0x18],0x0
  40b575:	jmp    40b435 <main@@Base+0xc25>
  40b57a:	lea    rdx,[rip+0x4dcf]        # 410350 <output_file_name@@Base>
  40b581:	mov    QWORD PTR [rdx],rcx
  40b584:	jmp    40b438 <main@@Base+0xc28>
  40b589:	lea    rdx,[rip+0x5f38]        # 4114c8 <starting_path@@Base>
  40b590:	mov    QWORD PTR [rdx],rcx
  40b593:	jmp    40b438 <main@@Base+0xc28>
  40b598:	mov    rax,QWORD PTR [rsp+0x10]
  40b59d:	test   rax,rax
  40b5a0:	je     40b8b0 <main@@Base+0x10a0>
  40b5a6:	cmp    BYTE PTR [rax],0x0
  40b5a9:	je     40b8b0 <main@@Base+0x10a0>
  40b5af:	call   4033d0 <coda_init@plt>
  40b5b4:	test   eax,eax
  40b5b6:	jne    40b8f7 <main@@Base+0x10e7>
  40b5bc:	xor    edi,edi
  40b5be:	cmp    DWORD PTR [rsp+0x18],0x0
  40b5c3:	sete   dil
  40b5c7:	call   403160 <coda_set_option_bypass_special_types@plt>
  40b5cc:	mov    edi,DWORD PTR [rsp+0x8]
  40b5d0:	call   4033e0 <coda_set_option_perform_conversions@plt>
  40b5d5:	lea    rbp,[rip+0x4d74]        # 410350 <output_file_name@@Base>
  40b5dc:	mov    rdi,QWORD PTR [rbp+0x0]
  40b5e0:	test   rdi,rdi
  40b5e3:	lea    r14,[rip+0x5ebe]        # 4114a8 <ascii_output@@Base>
  40b5ea:	je     40b604 <main@@Base+0xdf4>
  40b5ec:	lea    rsi,[rip+0x1763]        # 40cd56 <_IO_stdin_used@@Base+0xd56>
  40b5f3:	call   403510 <fopen@plt>
  40b5f8:	mov    QWORD PTR [r14],rax
  40b5fb:	test   rax,rax
  40b5fe:	je     40b952 <main@@Base+0x1142>
  40b604:	mov    edi,ebx
  40b606:	call   407c10 <print_json_data@@Base>
  40b60b:	cmp    QWORD PTR [rbp+0x0],0x0
  40b610:	jne    40b892 <main@@Base+0x1082>
  40b616:	jmp    40b89a <main@@Base+0x108a>
  40b61b:	lea    rax,[rip+0x5ea2]        # 4114c4 <run_mode@@Base>
  40b622:	mov    DWORD PTR [rax],0x4
  40b628:	not    r15d
  40b62b:	add    r15d,ebp
  40b62e:	lea    rax,[rip+0x4d33]        # 410368 <traverse_info@@Base>
  40b635:	mov    QWORD PTR [rax],0x0
  40b63c:	lea    rax,[rip+0x4d0d]        # 410350 <output_file_name@@Base>
  40b643:	mov    QWORD PTR [rax],0x0
  40b64a:	lea    rax,[rip+0x5e77]        # 4114c8 <starting_path@@Base>
  40b651:	mov    QWORD PTR [rax],0x0
  40b658:	mov    rax,QWORD PTR [rip+0x4979]        # 40ffd8 <stdout@GLIBC_2.2.5>
  40b65f:	mov    rax,QWORD PTR [rax]
  40b662:	lea    rcx,[rip+0x5e3f]        # 4114a8 <ascii_output@@Base>
  40b669:	mov    QWORD PTR [rcx],rax
  40b66c:	test   r15d,r15d
  40b66f:	jle    40b8b0 <main@@Base+0x10a0>
  40b675:	lea    r14,[r14+r12*8]
  40b679:	add    r14,0x8
  40b67d:	lea    eax,[r15-0x1]
  40b681:	mov    DWORD PTR [rsp+0xc],eax
  40b685:	mov    DWORD PTR [rsp+0x8],0x1
  40b68d:	xor    eax,eax
  40b68f:	mov    QWORD PTR [rsp+0x10],rax
  40b694:	lea    rbp,[rip+0x16e7]        # 40cd82 <_IO_stdin_used@@Base+0xd82>
  40b69b:	xor    r12d,r12d
  40b69e:	xor    ebx,ebx
  40b6a0:	mov    DWORD PTR [rsp+0x18],0x1
  40b6a8:	jmp    40b6c6 <main@@Base+0xeb6>
  40b6aa:	nop    WORD PTR [rax+rax*1+0x0]
  40b6b0:	mov    ebx,0x1
  40b6b5:	mov    eax,r12d
  40b6b8:	inc    eax
  40b6ba:	mov    r12d,eax
  40b6bd:	cmp    eax,r15d
  40b6c0:	jge    40b818 <main@@Base+0x1008>
  40b6c6:	movsxd rax,r12d
  40b6c9:	mov    r13,QWORD PTR [r14+rax*8]
  40b6cd:	mov    rdi,r13
  40b6d0:	mov    rsi,rbp
  40b6d3:	call   4032f0 <strcmp@plt>
  40b6d8:	test   eax,eax
  40b6da:	je     40b6b0 <main@@Base+0xea0>
  40b6dc:	mov    rdi,r13
  40b6df:	lea    rsi,[rip+0x1d95]        # 40d47b <_IO_stdin_used@@Base+0x147b>
  40b6e6:	call   4032f0 <strcmp@plt>
  40b6eb:	test   eax,eax
  40b6ed:	je     40b6b0 <main@@Base+0xea0>
  40b6ef:	mov    rdi,r13
  40b6f2:	lea    rsi,[rip+0x15f4]        # 40cced <_IO_stdin_used@@Base+0xced>
  40b6f9:	call   4032f0 <strcmp@plt>
  40b6fe:	test   eax,eax
  40b700:	je     40b7e0 <main@@Base+0xfd0>
  40b706:	mov    rdi,r13
  40b709:	lea    rsi,[rip+0x1e3a]        # 40d54a <_IO_stdin_used@@Base+0x154a>
  40b710:	call   4032f0 <strcmp@plt>
  40b715:	test   eax,eax
  40b717:	je     40b7e0 <main@@Base+0xfd0>
  40b71d:	mov    rdi,r13
  40b720:	lea    rsi,[rip+0x160a]        # 40cd31 <_IO_stdin_used@@Base+0xd31>
  40b727:	call   4032f0 <strcmp@plt>
  40b72c:	test   eax,eax
  40b72e:	je     40b743 <main@@Base+0xf33>
  40b730:	mov    rdi,r13
  40b733:	lea    rsi,[rip+0x15fa]        # 40cd34 <_IO_stdin_used@@Base+0xd34>
  40b73a:	call   4032f0 <strcmp@plt>
  40b73f:	test   eax,eax
  40b741:	jne    40b75d <main@@Base+0xf4d>
  40b743:	lea    eax,[r12+0x1]
  40b748:	cmp    eax,r15d
  40b74b:	jge    40b75d <main@@Base+0xf4d>
  40b74d:	movsxd rcx,eax
  40b750:	mov    rcx,QWORD PTR [r14+rcx*8]
  40b754:	cmp    BYTE PTR [rcx],0x2d
  40b757:	jne    40b7fa <main@@Base+0xfea>
  40b75d:	mov    rdi,r13
  40b760:	lea    rsi,[rip+0x161e]        # 40cd85 <_IO_stdin_used@@Base+0xd85>
  40b767:	call   4032f0 <strcmp@plt>
  40b76c:	test   eax,eax
  40b76e:	je     40b783 <main@@Base+0xf73>
  40b770:	mov    rdi,r13
  40b773:	lea    rsi,[rip+0x160e]        # 40cd88 <_IO_stdin_used@@Base+0xd88>
  40b77a:	call   4032f0 <strcmp@plt>
  40b77f:	test   eax,eax
  40b781:	jne    40b799 <main@@Base+0xf89>
  40b783:	lea    eax,[r12+0x1]
  40b788:	cmp    eax,r15d
  40b78b:	jge    40b799 <main@@Base+0xf89>
  40b78d:	movsxd rcx,eax
  40b790:	mov    rcx,QWORD PTR [r14+rcx*8]
  40b794:	cmp    BYTE PTR [rcx],0x2d
  40b797:	jne    40b809 <main@@Base+0xff9>
  40b799:	mov    rdi,r13
  40b79c:	lea    rsi,[rip+0x1e03]        # 40d5a6 <_IO_stdin_used@@Base+0x15a6>
  40b7a3:	call   4032f0 <strcmp@plt>
  40b7a8:	test   eax,eax
  40b7aa:	je     40b7ed <main@@Base+0xfdd>
  40b7ac:	cmp    r12d,DWORD PTR [rsp+0xc]
  40b7b1:	jne    40b8b0 <main@@Base+0x10a0>
  40b7b7:	cmp    BYTE PTR [r13+0x0],0x2d
  40b7bc:	je     40b8b0 <main@@Base+0x10a0>
  40b7c2:	lea    rax,[rip+0x4b9f]        # 410368 <traverse_info@@Base>
  40b7c9:	mov    QWORD PTR [rax],r13
  40b7cc:	mov    QWORD PTR [rsp+0x10],r13
  40b7d1:	mov    eax,DWORD PTR [rsp+0xc]
  40b7d5:	jmp    40b6b8 <main@@Base+0xea8>
  40b7da:	nop    WORD PTR [rax+rax*1+0x0]
  40b7e0:	mov    DWORD PTR [rsp+0x8],0x0
  40b7e8:	jmp    40b6b5 <main@@Base+0xea5>
  40b7ed:	mov    DWORD PTR [rsp+0x18],0x0
  40b7f5:	jmp    40b6b5 <main@@Base+0xea5>
  40b7fa:	lea    rdx,[rip+0x4b4f]        # 410350 <output_file_name@@Base>
  40b801:	mov    QWORD PTR [rdx],rcx
  40b804:	jmp    40b6b8 <main@@Base+0xea8>
  40b809:	lea    rdx,[rip+0x5cb8]        # 4114c8 <starting_path@@Base>
  40b810:	mov    QWORD PTR [rdx],rcx
  40b813:	jmp    40b6b8 <main@@Base+0xea8>
  40b818:	mov    rax,QWORD PTR [rsp+0x10]
  40b81d:	test   rax,rax
  40b820:	je     40b8b0 <main@@Base+0x10a0>
  40b826:	cmp    BYTE PTR [rax],0x0
  40b829:	je     40b8b0 <main@@Base+0x10a0>
  40b82f:	call   4033d0 <coda_init@plt>
  40b834:	test   eax,eax
  40b836:	jne    40b8f7 <main@@Base+0x10e7>
  40b83c:	xor    edi,edi
  40b83e:	cmp    DWORD PTR [rsp+0x18],0x0
  40b843:	sete   dil
  40b847:	call   403160 <coda_set_option_bypass_special_types@plt>
  40b84c:	mov    edi,DWORD PTR [rsp+0x8]
  40b850:	call   4033e0 <coda_set_option_perform_conversions@plt>
  40b855:	lea    rbp,[rip+0x4af4]        # 410350 <output_file_name@@Base>
  40b85c:	mov    rdi,QWORD PTR [rbp+0x0]
  40b860:	test   rdi,rdi
  40b863:	lea    r14,[rip+0x5c3e]        # 4114a8 <ascii_output@@Base>
  40b86a:	je     40b884 <main@@Base+0x1074>
  40b86c:	lea    rsi,[rip+0x14e3]        # 40cd56 <_IO_stdin_used@@Base+0xd56>
  40b873:	call   403510 <fopen@plt>
  40b878:	mov    QWORD PTR [r14],rax
  40b87b:	test   rax,rax
  40b87e:	je     40b952 <main@@Base+0x1142>
  40b884:	mov    edi,ebx
  40b886:	call   409680 <print_yaml_data@@Base>
  40b88b:	cmp    QWORD PTR [rbp+0x0],0x0
  40b890:	je     40b89a <main@@Base+0x108a>
  40b892:	mov    rdi,QWORD PTR [r14]
  40b895:	call   4031c0 <fclose@plt>
  40b89a:	call   4032d0 <coda_done@plt>
  40b89f:	xor    eax,eax
  40b8a1:	add    rsp,0x28
  40b8a5:	pop    rbx
  40b8a6:	pop    r12
  40b8a8:	pop    r13
  40b8aa:	pop    r14
  40b8ac:	pop    r15
  40b8ae:	pop    rbp
  40b8af:	ret    
  40b8b0:	mov    rax,QWORD PTR [rip+0x4741]        # 40fff8 <stderr@GLIBC_2.2.5>
  40b8b7:	mov    rcx,QWORD PTR [rax]
  40b8ba:	lea    rdi,[rip+0x13fa]        # 40ccbb <_IO_stdin_used@@Base+0xcbb>
  40b8c1:	mov    esi,0x19
  40b8c6:	mov    edx,0x1
  40b8cb:	call   4035a0 <fwrite@plt>
  40b8d0:	call   40b980 <main@@Base+0x1170>
  40b8d5:	mov    edi,0x1
  40b8da:	call   403580 <exit@plt>
  40b8df:	call   40b980 <main@@Base+0x1170>
  40b8e4:	xor    edi,edi
  40b8e6:	call   403580 <exit@plt>
  40b8eb:	call   40bf00 <main@@Base+0x16f0>
  40b8f0:	xor    edi,edi
  40b8f2:	call   403580 <exit@plt>
  40b8f7:	mov    rax,QWORD PTR [rip+0x46fa]        # 40fff8 <stderr@GLIBC_2.2.5>
  40b8fe:	mov    rbx,QWORD PTR [rax]
  40b901:	call   4035d0 <coda_get_errno@plt>
  40b906:	mov    edi,DWORD PTR [rax]
  40b908:	call   403550 <coda_errno_to_string@plt>
  40b90d:	lea    rsi,[rip+0x1364]        # 40cc78 <_IO_stdin_used@@Base+0xc78>
  40b914:	mov    rdi,rbx
  40b917:	mov    rdx,rax
  40b91a:	xor    eax,eax
  40b91c:	call   403300 <fprintf@plt>
  40b921:	mov    edi,0x1
  40b926:	call   403580 <exit@plt>
  40b92b:	mov    rax,QWORD PTR [rip+0x46c6]        # 40fff8 <stderr@GLIBC_2.2.5>
  40b932:	mov    rcx,QWORD PTR [rax]
  40b935:	lea    rdi,[rip+0x13c0]        # 40ccfc <_IO_stdin_used@@Base+0xcfc>
  40b93c:	mov    esi,0x28
  40b941:	jmp    40b8c6 <main@@Base+0x10b6>
  40b943:	mov    rax,QWORD PTR [rip+0x46ae]        # 40fff8 <stderr@GLIBC_2.2.5>
  40b94a:	mov    rdi,QWORD PTR [rax]
  40b94d:	mov    rdx,QWORD PTR [rbx]
  40b950:	jmp    40b976 <main@@Base+0x1166>
  40b952:	mov    rax,QWORD PTR [rip+0x469f]        # 40fff8 <stderr@GLIBC_2.2.5>
  40b959:	mov    rdi,QWORD PTR [rax]
  40b95c:	mov    rdx,QWORD PTR [rbp+0x0]
  40b960:	jmp    40b976 <main@@Base+0x1166>
  40b962:	mov    rax,QWORD PTR [rip+0x468f]        # 40fff8 <stderr@GLIBC_2.2.5>
  40b969:	mov    rdi,QWORD PTR [rax]
  40b96c:	lea    rax,[rip+0x49dd]        # 410350 <output_file_name@@Base>
  40b973:	mov    rdx,QWORD PTR [rax]
  40b976:	lea    rsi,[rip+0x13db]        # 40cd58 <_IO_stdin_used@@Base+0xd58>
  40b97d:	jmp    40b91a <main@@Base+0x110a>
  40b97f:	nop
  40b980:	push   rbp
  40b981:	push   r15
  40b983:	push   r14
  40b985:	push   r13
  40b987:	push   r12
  40b989:	push   rbx
  40b98a:	push   rax
  40b98b:	lea    rdi,[rip+0x1413]        # 40cda5 <_IO_stdin_used@@Base+0xda5>
  40b992:	call   403100 <puts@plt>
  40b997:	lea    rdi,[rip+0x140e]        # 40cdac <_IO_stdin_used@@Base+0xdac>
  40b99e:	call   403100 <puts@plt>
  40b9a3:	lea    rdi,[rip+0x1448]        # 40cdf2 <_IO_stdin_used@@Base+0xdf2>
  40b9aa:	call   403100 <puts@plt>
  40b9af:	lea    r13,[rip+0x1692]        # 40d048 <_IO_stdin_used@@Base+0x1048>
  40b9b6:	mov    rdi,r13
  40b9b9:	call   403100 <puts@plt>
  40b9be:	lea    rdi,[rip+0x1459]        # 40ce1e <_IO_stdin_used@@Base+0xe1e>
  40b9c5:	call   403100 <puts@plt>
  40b9ca:	lea    rdi,[rip+0x1468]        # 40ce39 <_IO_stdin_used@@Base+0xe39>
  40b9d1:	call   403100 <puts@plt>
  40b9d6:	lea    r15,[rip+0x1b5d]        # 40d53a <_IO_stdin_used@@Base+0x153a>
  40b9dd:	mov    rdi,r15
  40b9e0:	call   403100 <puts@plt>
  40b9e5:	lea    r12,[rip+0x1b74]        # 40d560 <_IO_stdin_used@@Base+0x1560>
  40b9ec:	mov    rdi,r12
  40b9ef:	call   403100 <puts@plt>
  40b9f4:	lea    rbp,[rip+0x1663]        # 40d05e <_IO_stdin_used@@Base+0x105e>
  40b9fb:	mov    rdi,rbp
  40b9fe:	call   403100 <puts@plt>
  40ba03:	lea    rbx,[rip+0x1683]        # 40d08d <_IO_stdin_used@@Base+0x108d>
  40ba0a:	mov    rdi,rbx
  40ba0d:	call   403100 <puts@plt>
  40ba12:	lea    rdi,[rip+0x1457]        # 40ce70 <_IO_stdin_used@@Base+0xe70>
  40ba19:	call   403100 <puts@plt>
  40ba1e:	lea    rdi,[rip+0x1462]        # 40ce87 <_IO_stdin_used@@Base+0xe87>
  40ba25:	call   403100 <puts@plt>
  40ba2a:	lea    rdi,[rip+0x147f]        # 40ceb0 <_IO_stdin_used@@Base+0xeb0>
  40ba31:	call   403100 <puts@plt>
  40ba36:	lea    rdi,[rip+0x148a]        # 40cec7 <_IO_stdin_used@@Base+0xec7>
  40ba3d:	call   403100 <puts@plt>
  40ba42:	lea    rdi,[rip+0x14a8]        # 40cef1 <_IO_stdin_used@@Base+0xef1>
  40ba49:	call   403100 <puts@plt>
  40ba4e:	lea    rdi,[rip+0x14b6]        # 40cf0b <_IO_stdin_used@@Base+0xf0b>
  40ba55:	call   403100 <puts@plt>
  40ba5a:	lea    rdi,[rip+0x14db]        # 40cf3c <_IO_stdin_used@@Base+0xf3c>
  40ba61:	call   403100 <puts@plt>
  40ba66:	lea    rdi,[rip+0x14e8]        # 40cf55 <_IO_stdin_used@@Base+0xf55>
  40ba6d:	call   403100 <puts@plt>
  40ba72:	lea    rdi,[rip+0x1522]        # 40cf9b <_IO_stdin_used@@Base+0xf9b>
  40ba79:	call   403100 <puts@plt>
  40ba7e:	lea    rdi,[rip+0x1b15]        # 40d59a <_IO_stdin_used@@Base+0x159a>
  40ba85:	call   403100 <puts@plt>
  40ba8a:	lea    rdi,[rip+0x1b28]        # 40d5b9 <_IO_stdin_used@@Base+0x15b9>
  40ba91:	call   403100 <puts@plt>
  40ba96:	lea    rdi,[rip+0x1b6c]        # 40d609 <_IO_stdin_used@@Base+0x1609>
  40ba9d:	call   403100 <puts@plt>
  40baa2:	lea    r14,[rip+0x1bae]        # 40d657 <_IO_stdin_used@@Base+0x1657>
  40baa9:	mov    rdi,r14
  40baac:	call   403100 <puts@plt>
  40bab1:	mov    edi,0xa
  40bab6:	call   403080 <putchar@plt>
  40babb:	lea    rdi,[rip+0x1502]        # 40cfc4 <_IO_stdin_used@@Base+0xfc4>
  40bac2:	call   403100 <puts@plt>
  40bac7:	lea    rdi,[rip+0x153e]        # 40d00c <_IO_stdin_used@@Base+0x100c>
  40bace:	call   403100 <puts@plt>
  40bad3:	mov    rdi,r13
  40bad6:	call   403100 <puts@plt>
  40badb:	mov    rdi,r15
  40bade:	call   403100 <puts@plt>
  40bae3:	mov    rdi,r12
  40bae6:	call   403100 <puts@plt>
  40baeb:	mov    rdi,rbp
  40baee:	call   403100 <puts@plt>
  40baf3:	mov    rdi,rbx
  40baf6:	call   403100 <puts@plt>
  40bafb:	lea    rdi,[rip+0x15d3]        # 40d0d5 <_IO_stdin_used@@Base+0x10d5>
  40bb02:	call   403100 <puts@plt>
  40bb07:	lea    rdi,[rip+0x15df]        # 40d0ed <_IO_stdin_used@@Base+0x10ed>
  40bb0e:	call   403100 <puts@plt>
  40bb13:	lea    rdi,[rip+0x1614]        # 40d12e <_IO_stdin_used@@Base+0x112e>
  40bb1a:	call   403100 <puts@plt>
  40bb1f:	lea    rdi,[rip+0x1620]        # 40d146 <_IO_stdin_used@@Base+0x1146>
  40bb26:	call   403100 <puts@plt>
  40bb2b:	lea    rdi,[rip+0x1cc9]        # 40d7fb <_IO_stdin_used@@Base+0x17fb>
  40bb32:	call   403100 <puts@plt>
  40bb37:	lea    rdi,[rip+0x1ce1]        # 40d81f <_IO_stdin_used@@Base+0x181f>
  40bb3e:	call   403100 <puts@plt>
  40bb43:	lea    rdi,[rip+0x1647]        # 40d191 <_IO_stdin_used@@Base+0x1191>
  40bb4a:	call   403100 <puts@plt>
  40bb4f:	lea    rdi,[rip+0x165b]        # 40d1b1 <_IO_stdin_used@@Base+0x11b1>
  40bb56:	call   403100 <puts@plt>
  40bb5b:	lea    rdi,[rip+0x169a]        # 40d1fc <_IO_stdin_used@@Base+0x11fc>
  40bb62:	call   403100 <puts@plt>
  40bb67:	lea    rdi,[rip+0x16c6]        # 40d234 <_IO_stdin_used@@Base+0x1234>
  40bb6e:	call   403100 <puts@plt>
  40bb73:	lea    rdi,[rip+0x1706]        # 40d280 <_IO_stdin_used@@Base+0x1280>
  40bb7a:	call   403100 <puts@plt>
  40bb7f:	lea    rdi,[rip+0x171b]        # 40d2a1 <_IO_stdin_used@@Base+0x12a1>
  40bb86:	call   403100 <puts@plt>
  40bb8b:	lea    rdi,[rip+0x1a08]        # 40d59a <_IO_stdin_used@@Base+0x159a>
  40bb92:	mov    r15,rdi
  40bb95:	call   403100 <puts@plt>
  40bb9a:	lea    rdi,[rip+0x1a18]        # 40d5b9 <_IO_stdin_used@@Base+0x15b9>
  40bba1:	mov    r13,rdi
  40bba4:	call   403100 <puts@plt>
  40bba9:	lea    rdi,[rip+0x1a59]        # 40d609 <_IO_stdin_used@@Base+0x1609>
  40bbb0:	mov    r12,rdi
  40bbb3:	call   403100 <puts@plt>
  40bbb8:	mov    rdi,r14
  40bbbb:	mov    rbx,r14
  40bbbe:	call   403100 <puts@plt>
  40bbc3:	mov    edi,0xa
  40bbc8:	call   403080 <putchar@plt>
  40bbcd:	lea    rdi,[rip+0x171c]        # 40d2f0 <_IO_stdin_used@@Base+0x12f0>
  40bbd4:	call   403100 <puts@plt>
  40bbd9:	lea    rdi,[rip+0x1756]        # 40d336 <_IO_stdin_used@@Base+0x1336>
  40bbe0:	call   403100 <puts@plt>
  40bbe5:	lea    rdi,[rip+0x1786]        # 40d372 <_IO_stdin_used@@Base+0x1372>
  40bbec:	call   403100 <puts@plt>
  40bbf1:	lea    rbp,[rip+0x1873]        # 40d46b <_IO_stdin_used@@Base+0x146b>
  40bbf8:	mov    rdi,rbp
  40bbfb:	call   403100 <puts@plt>
  40bc00:	lea    r14,[rip+0x1881]        # 40d488 <_IO_stdin_used@@Base+0x1488>
  40bc07:	mov    rdi,r14
  40bc0a:	call   403100 <puts@plt>
  40bc0f:	lea    rdi,[rip+0x1772]        # 40d388 <_IO_stdin_used@@Base+0x1388>
  40bc16:	call   403100 <puts@plt>
  40bc1b:	lea    rdi,[rip+0x1918]        # 40d53a <_IO_stdin_used@@Base+0x153a>
  40bc22:	call   403100 <puts@plt>
  40bc27:	lea    rdi,[rip+0x1932]        # 40d560 <_IO_stdin_used@@Base+0x1560>
  40bc2e:	call   403100 <puts@plt>
  40bc33:	lea    rdi,[rip+0x1bc1]        # 40d7fb <_IO_stdin_used@@Base+0x17fb>
  40bc3a:	call   403100 <puts@plt>
  40bc3f:	lea    rdi,[rip+0x1bd9]        # 40d81f <_IO_stdin_used@@Base+0x181f>
  40bc46:	call   403100 <puts@plt>
  40bc4b:	lea    rdi,[rip+0x1c00]        # 40d852 <_IO_stdin_used@@Base+0x1852>
  40bc52:	call   403100 <puts@plt>
  40bc57:	lea    rdi,[rip+0x1c12]        # 40d870 <_IO_stdin_used@@Base+0x1870>
  40bc5e:	call   403100 <puts@plt>
  40bc63:	lea    rdi,[rip+0x1c4e]        # 40d8b8 <_IO_stdin_used@@Base+0x18b8>
  40bc6a:	call   403100 <puts@plt>
  40bc6f:	mov    rdi,r15
  40bc72:	call   403100 <puts@plt>
  40bc77:	mov    rdi,r13
  40bc7a:	call   403100 <puts@plt>
  40bc7f:	mov    rdi,r12
  40bc82:	call   403100 <puts@plt>
  40bc87:	mov    rdi,rbx
  40bc8a:	call   403100 <puts@plt>
  40bc8f:	mov    edi,0xa
  40bc94:	call   403080 <putchar@plt>
  40bc99:	lea    rdi,[rip+0x1733]        # 40d3d3 <_IO_stdin_used@@Base+0x13d3>
  40bca0:	call   403100 <puts@plt>
  40bca5:	lea    rdi,[rip+0x176d]        # 40d419 <_IO_stdin_used@@Base+0x1419>
  40bcac:	call   403100 <puts@plt>
  40bcb1:	lea    rdi,[rip+0x179d]        # 40d455 <_IO_stdin_used@@Base+0x1455>
  40bcb8:	call   403100 <puts@plt>
  40bcbd:	mov    rdi,rbp
  40bcc0:	call   403100 <puts@plt>
  40bcc5:	mov    rdi,r14
  40bcc8:	call   403100 <puts@plt>
  40bccd:	lea    rdi,[rip+0x17fb]        # 40d4cf <_IO_stdin_used@@Base+0x14cf>
  40bcd4:	call   403100 <puts@plt>
  40bcd9:	lea    rdi,[rip+0x183b]        # 40d51b <_IO_stdin_used@@Base+0x151b>
  40bce0:	call   403100 <puts@plt>
  40bce5:	lea    rdi,[rip+0x184e]        # 40d53a <_IO_stdin_used@@Base+0x153a>
  40bcec:	call   403100 <puts@plt>
  40bcf1:	lea    rdi,[rip+0x1868]        # 40d560 <_IO_stdin_used@@Base+0x1560>
  40bcf8:	call   403100 <puts@plt>
  40bcfd:	lea    rdi,[rip+0x1af7]        # 40d7fb <_IO_stdin_used@@Base+0x17fb>
  40bd04:	call   403100 <puts@plt>
  40bd09:	lea    rdi,[rip+0x1b0f]        # 40d81f <_IO_stdin_used@@Base+0x181f>
  40bd10:	call   403100 <puts@plt>
  40bd15:	lea    rdi,[rip+0x1b36]        # 40d852 <_IO_stdin_used@@Base+0x1852>
  40bd1c:	call   403100 <puts@plt>
  40bd21:	lea    rdi,[rip+0x1b48]        # 40d870 <_IO_stdin_used@@Base+0x1870>
  40bd28:	call   403100 <puts@plt>
  40bd2d:	lea    rdi,[rip+0x1b84]        # 40d8b8 <_IO_stdin_used@@Base+0x18b8>
  40bd34:	call   403100 <puts@plt>
  40bd39:	mov    rdi,r15
  40bd3c:	call   403100 <puts@plt>
  40bd41:	mov    rdi,r13
  40bd44:	call   403100 <puts@plt>
  40bd49:	mov    rdi,r12
  40bd4c:	call   403100 <puts@plt>
  40bd51:	mov    rdi,rbx
  40bd54:	call   403100 <puts@plt>
  40bd59:	mov    edi,0xa
  40bd5e:	call   403080 <putchar@plt>
  40bd63:	lea    rdi,[rip+0x190b]        # 40d675 <_IO_stdin_used@@Base+0x1675>
  40bd6a:	call   403100 <puts@plt>
  40bd6f:	lea    rdi,[rip+0x1947]        # 40d6bd <_IO_stdin_used@@Base+0x16bd>
  40bd76:	call   403100 <puts@plt>
  40bd7b:	lea    rdi,[rip+0x1985]        # 40d707 <_IO_stdin_used@@Base+0x1707>
  40bd82:	call   403100 <puts@plt>
  40bd87:	lea    rdi,[rip+0x19c3]        # 40d751 <_IO_stdin_used@@Base+0x1751>
  40bd8e:	call   403100 <puts@plt>
  40bd93:	lea    rdi,[rip+0x19e5]        # 40d77f <_IO_stdin_used@@Base+0x177f>
  40bd9a:	call   403100 <puts@plt>
  40bd9f:	lea    rdi,[rip+0x19f0]        # 40d796 <_IO_stdin_used@@Base+0x1796>
  40bda6:	call   403100 <puts@plt>
  40bdab:	lea    rdi,[rip+0x1a14]        # 40d7c6 <_IO_stdin_used@@Base+0x17c6>
  40bdb2:	call   403100 <puts@plt>
  40bdb7:	lea    rdi,[rip+0x1a3d]        # 40d7fb <_IO_stdin_used@@Base+0x17fb>
  40bdbe:	call   403100 <puts@plt>
  40bdc3:	lea    rdi,[rip+0x1a55]        # 40d81f <_IO_stdin_used@@Base+0x181f>
  40bdca:	call   403100 <puts@plt>
  40bdcf:	lea    rdi,[rip+0x1a7c]        # 40d852 <_IO_stdin_used@@Base+0x1852>
  40bdd6:	call   403100 <puts@plt>
  40bddb:	lea    rdi,[rip+0x1a8e]        # 40d870 <_IO_stdin_used@@Base+0x1870>
  40bde2:	call   403100 <puts@plt>
  40bde7:	lea    rdi,[rip+0x1aca]        # 40d8b8 <_IO_stdin_used@@Base+0x18b8>
  40bdee:	call   403100 <puts@plt>
  40bdf3:	lea    rdi,[rip+0x1b0b]        # 40d905 <_IO_stdin_used@@Base+0x1905>
  40bdfa:	call   403100 <puts@plt>
  40bdff:	lea    rdi,[rip+0x1b1f]        # 40d925 <_IO_stdin_used@@Base+0x1925>
  40be06:	call   403100 <puts@plt>
  40be0b:	lea    rdi,[rip+0x1b61]        # 40d973 <_IO_stdin_used@@Base+0x1973>
  40be12:	call   403100 <puts@plt>
  40be17:	lea    rdi,[rip+0x1ba0]        # 40d9be <_IO_stdin_used@@Base+0x19be>
  40be1e:	call   403100 <puts@plt>
  40be23:	lea    rdi,[rip+0x1bd3]        # 40d9fd <_IO_stdin_used@@Base+0x19fd>
  40be2a:	call   403100 <puts@plt>
  40be2f:	lea    rdi,[rip+0x1c14]        # 40da4a <_IO_stdin_used@@Base+0x1a4a>
  40be36:	call   403100 <puts@plt>
  40be3b:	mov    edi,0xa
  40be40:	call   403080 <putchar@plt>
  40be45:	lea    rdi,[rip+0x1c33]        # 40da7f <_IO_stdin_used@@Base+0x1a7f>
  40be4c:	call   403100 <puts@plt>
  40be51:	lea    rdi,[rip+0x1c3f]        # 40da97 <_IO_stdin_used@@Base+0x1a97>
  40be58:	call   403100 <puts@plt>
  40be5d:	mov    edi,0xa
  40be62:	call   403080 <putchar@plt>
  40be67:	lea    rdi,[rip+0x1c47]        # 40dab5 <_IO_stdin_used@@Base+0x1ab5>
  40be6e:	call   403100 <puts@plt>
  40be73:	lea    rdi,[rip+0x1c56]        # 40dad0 <_IO_stdin_used@@Base+0x1ad0>
  40be7a:	call   403100 <puts@plt>
  40be7f:	mov    edi,0xa
  40be84:	call   403080 <putchar@plt>
  40be89:	lea    rdi,[rip+0x1c72]        # 40db02 <_IO_stdin_used@@Base+0x1b02>
  40be90:	call   403100 <puts@plt>
  40be95:	lea    rdi,[rip+0x1cb4]        # 40db50 <_IO_stdin_used@@Base+0x1b50>
  40be9c:	call   403100 <puts@plt>
  40bea1:	lea    rdi,[rip+0x1cf1]        # 40db99 <_IO_stdin_used@@Base+0x1b99>
  40bea8:	call   403100 <puts@plt>
  40bead:	lea    rdi,[rip+0x1d10]        # 40dbc4 <_IO_stdin_used@@Base+0x1bc4>
  40beb4:	call   403100 <puts@plt>
  40beb9:	lea    rdi,[rip+0x1d50]        # 40dc10 <_IO_stdin_used@@Base+0x1c10>
  40bec0:	call   403100 <puts@plt>
  40bec5:	lea    rdi,[rip+0x1d8a]        # 40dc56 <_IO_stdin_used@@Base+0x1c56>
  40becc:	call   403100 <puts@plt>
  40bed1:	lea    rdi,[rip+0x1dbd]        # 40dc95 <_IO_stdin_used@@Base+0x1c95>
  40bed8:	call   403100 <puts@plt>
  40bedd:	mov    edi,0xa
  40bee2:	add    rsp,0x8
  40bee6:	pop    rbx
  40bee7:	pop    r12
  40bee9:	pop    r13
  40beeb:	pop    r14
  40beed:	pop    r15
  40beef:	pop    rbp
  40bef0:	jmp    403080 <putchar@plt>
  40bef5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40beff:	nop
  40bf00:	push   rax
  40bf01:	call   4035c0 <coda_get_libcoda_version@plt>
  40bf06:	lea    rdi,[rip+0xdc8]        # 40ccd5 <_IO_stdin_used@@Base+0xcd5>
  40bf0d:	mov    rsi,rax
  40bf10:	xor    eax,eax
  40bf12:	call   403230 <printf@plt>
  40bf17:	lea    rdi,[rip+0x1db7]        # 40dcd5 <_IO_stdin_used@@Base+0x1cd5>
  40bf1e:	call   403100 <puts@plt>
  40bf23:	mov    edi,0xa
  40bf28:	pop    rax
  40bf29:	jmp    403080 <putchar@plt>
  40bf2e:	xchg   ax,ax

000000000040bf30 <__libc_csu_init@@Base>:
  40bf30:	endbr64 
  40bf34:	push   r15
  40bf36:	lea    r15,[rip+0x3e7b]        # 40fdb8 <_IO_stdin_used@@Base+0x3db8>
  40bf3d:	push   r14
  40bf3f:	mov    r14,rdx
  40bf42:	push   r13
  40bf44:	mov    r13,rsi
  40bf47:	push   r12
  40bf49:	mov    r12d,edi
  40bf4c:	push   rbp
  40bf4d:	lea    rbp,[rip+0x3e6c]        # 40fdc0 <_IO_stdin_used@@Base+0x3dc0>
  40bf54:	push   rbx
  40bf55:	sub    rbp,r15
  40bf58:	sub    rsp,0x8
  40bf5c:	call   403000 <coda_cursor_get_byte_size@plt-0x30>
  40bf61:	sar    rbp,0x3
  40bf65:	je     40bf86 <__libc_csu_init@@Base+0x56>
  40bf67:	xor    ebx,ebx
  40bf69:	nop    DWORD PTR [rax+0x0]
  40bf70:	mov    rdx,r14
  40bf73:	mov    rsi,r13
  40bf76:	mov    edi,r12d
  40bf79:	call   QWORD PTR [r15+rbx*8]
  40bf7d:	add    rbx,0x1
  40bf81:	cmp    rbp,rbx
  40bf84:	jne    40bf70 <__libc_csu_init@@Base+0x40>
  40bf86:	add    rsp,0x8
  40bf8a:	pop    rbx
  40bf8b:	pop    rbp
  40bf8c:	pop    r12
  40bf8e:	pop    r13
  40bf90:	pop    r14
  40bf92:	pop    r15
  40bf94:	ret    
  40bf95:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000040bfa0 <__libc_csu_fini@@Base>:
  40bfa0:	endbr64 
  40bfa4:	ret    

Disassembly of section .fini:

000000000040bfa8 <.fini>:
  40bfa8:	endbr64 
  40bfac:	sub    rsp,0x8
  40bfb0:	add    rsp,0x8
  40bfb4:	ret    
